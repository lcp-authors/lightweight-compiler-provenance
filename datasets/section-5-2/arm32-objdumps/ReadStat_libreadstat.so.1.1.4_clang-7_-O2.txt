
../repos/ReadStat/.libs/libreadstat.so.1.1.4:     file format elf32-littlearm


Disassembly of section .init:

00004700 <_init>:
    4700:	push	{r3, lr}
    4704:	bl	4ea0 <call_weak_fn>
    4708:	pop	{r3, pc}

Disassembly of section .plt:

0000470c <.plt>:
    470c:	push	{lr}		; (str lr, [sp, #-4]!)
    4710:	ldr	lr, [pc, #4]	; 471c <.plt+0x10>
    4714:	add	lr, pc, lr
    4718:	ldr	pc, [lr, #8]!
    471c:	.word	0x000448e4

00004720 <sas_validate_name@plt>:
    4720:	add	ip, pc, #0, 12
    4724:	add	ip, ip, #68, 20	; 0x44000
    4728:	ldr	pc, [ip, #2276]!	; 0x8e4

0000472c <calloc@plt>:
    472c:	add	ip, pc, #0, 12
    4730:	add	ip, ip, #68, 20	; 0x44000
    4734:	ldr	pc, [ip, #2268]!	; 0x8dc

00004738 <readstat_set_seek_handler@plt>:
    4738:	add	ip, pc, #0, 12
    473c:	add	ip, ip, #68, 20	; 0x44000
    4740:	ldr	pc, [ip, #2260]!	; 0x8d4

00004744 <readstat_set_open_handler@plt>:
    4744:	add	ip, pc, #0, 12
    4748:	add	ip, ip, #68, 20	; 0x44000
    474c:	ldr	pc, [ip, #2252]!	; 0x8cc

00004750 <byteswap8@plt>:
    4750:	add	ip, pc, #0, 12
    4754:	add	ip, ip, #68, 20	; 0x44000
    4758:	ldr	pc, [ip, #2244]!	; 0x8c4

0000475c <raise@plt>:
    475c:	add	ip, pc, #0, 12
    4760:	add	ip, ip, #68, 20	; 0x44000
    4764:	ldr	pc, [ip, #2236]!	; 0x8bc

00004768 <byteswap4@plt>:
    4768:	add	ip, pc, #0, 12
    476c:	add	ip, ip, #68, 20	; 0x44000
    4770:	ldr	pc, [ip, #2228]!	; 0x8b4

00004774 <readstat_sort_label_set@plt>:
    4774:	add	ip, pc, #0, 12
    4778:	add	ip, ip, #68, 20	; 0x44000
    477c:	ldr	pc, [ip, #2220]!	; 0x8ac

00004780 <por_ctx_free@plt>:
    4780:	add	ip, pc, #0, 12
    4784:	add	ip, ip, #68, 20	; 0x44000
    4788:	ldr	pc, [ip, #2212]!	; 0x8a4

0000478c <iconv_close@plt>:
    478c:	add	ip, pc, #0, 12
    4790:	add	ip, ip, #68, 20	; 0x44000
    4794:	ldr	pc, [ip, #2204]!	; 0x89c

00004798 <readstat_write_spaces@plt>:
    4798:	add	ip, pc, #0, 12
    479c:	add	ip, ip, #68, 20	; 0x44000
    47a0:	ldr	pc, [ip, #2196]!	; 0x894

000047a4 <iconv@plt>:
    47a4:	add	ip, pc, #0, 12
    47a8:	add	ip, ip, #68, 20	; 0x44000
    47ac:	ldr	pc, [ip, #2188]!	; 0x88c

000047b0 <strcmp@plt>:
    47b0:	add	ip, pc, #0, 12
    47b4:	add	ip, ip, #68, 20	; 0x44000
    47b8:	ldr	pc, [ip, #2180]!	; 0x884

000047bc <__cxa_finalize@plt>:
    47bc:	add	ip, pc, #0, 12
    47c0:	add	ip, ip, #68, 20	; 0x44000
    47c4:	ldr	pc, [ip, #2172]!	; 0x87c

000047c8 <readstat_type_class@plt>:
    47c8:	add	ip, pc, #0, 12
    47cc:	add	ip, ip, #68, 20	; 0x44000
    47d0:	ldr	pc, [ip, #2164]!	; 0x874

000047d4 <strtol@plt>:
    47d4:	add	ip, pc, #0, 12
    47d8:	add	ip, ip, #68, 20	; 0x44000
    47dc:	ldr	pc, [ip, #2156]!	; 0x86c

000047e0 <read@plt>:
    47e0:	add	ip, pc, #0, 12
    47e4:	add	ip, ip, #68, 20	; 0x44000
    47e8:	ldr	pc, [ip, #2148]!	; 0x864

000047ec <readstat_error_message@plt>:
    47ec:	add	ip, pc, #0, 12
    47f0:	add	ip, ip, #68, 20	; 0x44000
    47f4:	ldr	pc, [ip, #2140]!	; 0x85c

000047f8 <mktime@plt>:
    47f8:	add	ip, pc, #0, 12
    47fc:	add	ip, ip, #68, 20	; 0x44000
    4800:	ldr	pc, [ip, #2132]!	; 0x854

00004804 <spss_alignment_from_readstat_alignment@plt>:
    4804:	add	ip, pc, #0, 12
    4808:	add	ip, ip, #68, 20	; 0x44000
    480c:	ldr	pc, [ip, #2124]!	; 0x84c

00004810 <readstat_copy@plt>:
    4810:	add	ip, pc, #0, 12
    4814:	add	ip, ip, #68, 20	; 0x44000
    4818:	ldr	pc, [ip, #2116]!	; 0x844

0000481c <dta_ctx_free@plt>:
    481c:	add	ip, pc, #0, 12
    4820:	add	ip, ip, #68, 20	; 0x44000
    4824:	ldr	pc, [ip, #2108]!	; 0x83c

00004828 <deflateBound@plt>:
    4828:	add	ip, pc, #0, 12
    482c:	add	ip, ip, #68, 20	; 0x44000
    4830:	ldr	pc, [ip, #2100]!	; 0x834

00004834 <readstat_set_update_handler@plt>:
    4834:	add	ip, pc, #0, 12
    4838:	add	ip, ip, #68, 20	; 0x44000
    483c:	ldr	pc, [ip, #2092]!	; 0x82c

00004840 <memmove@plt>:
    4840:	add	ip, pc, #0, 12
    4844:	add	ip, ip, #68, 20	; 0x44000
    4848:	ldr	pc, [ip, #2084]!	; 0x824

0000484c <byteswap2@plt>:
    484c:	add	ip, pc, #0, 12
    4850:	add	ip, ip, #68, 20	; 0x44000
    4854:	ldr	pc, [ip, #2076]!	; 0x81c

00004858 <machine_is_little_endian@plt>:
    4858:	add	ip, pc, #0, 12
    485c:	add	ip, ip, #68, 20	; 0x44000
    4860:	ldr	pc, [ip, #2068]!	; 0x814

00004864 <free@plt>:
    4864:	add	ip, pc, #0, 12
    4868:	add	ip, ip, #68, 20	; 0x44000
    486c:	ldr	pc, [ip, #2060]!	; 0x80c

00004870 <__isnanf@plt>:
    4870:	add	ip, pc, #0, 12
    4874:	add	ip, ip, #68, 20	; 0x44000
    4878:	ldr	pc, [ip, #2052]!	; 0x804

0000487c <sav_parse_time@plt>:
    487c:	add	ip, pc, #0, 12
    4880:	add	ip, ip, #68, 20	; 0x44000
    4884:	ldr	pc, [ip, #2044]!	; 0x7fc

00004888 <readstat_variable_get_format@plt>:
    4888:	add	ip, pc, #0, 12
    488c:	add	ip, ip, #68, 20	; 0x44000
    4890:	ldr	pc, [ip, #2036]!	; 0x7f4

00004894 <ones_to_twos_complement4@plt>:
    4894:	add	ip, pc, #0, 12
    4898:	add	ip, ip, #68, 20	; 0x44000
    489c:	ldr	pc, [ip, #2028]!	; 0x7ec

000048a0 <ones_to_twos_complement2@plt>:
    48a0:	add	ip, pc, #0, 12
    48a4:	add	ip, ip, #68, 20	; 0x44000
    48a8:	ldr	pc, [ip, #2020]!	; 0x7e4

000048ac <sav_ctx_free@plt>:
    48ac:	add	ip, pc, #0, 12
    48b0:	add	ip, ip, #68, 20	; 0x44000
    48b4:	ldr	pc, [ip, #2012]!	; 0x7dc

000048b8 <memcpy@plt>:
    48b8:	add	ip, pc, #0, 12
    48bc:	add	ip, ip, #68, 20	; 0x44000
    48c0:	ldr	pc, [ip, #2004]!	; 0x7d4

000048c4 <spss_parse_format@plt>:
    48c4:	add	ip, pc, #0, 12
    48c8:	add	ip, ip, #68, 20	; 0x44000
    48cc:	ldr	pc, [ip, #1996]!	; 0x7cc

000048d0 <submit_columns@plt>:
    48d0:	add	ip, pc, #0, 12
    48d4:	add	ip, ip, #68, 20	; 0x44000
    48d8:	ldr	pc, [ip, #1988]!	; 0x7c4

000048dc <readstat_variable_get_missing_range_lo@plt>:
    48dc:	add	ip, pc, #0, 12
    48e0:	add	ip, ip, #68, 20	; 0x44000
    48e4:	ldr	pc, [ip, #1980]!	; 0x7bc

000048e8 <time@plt>:
    48e8:	add	ip, pc, #0, 12
    48ec:	add	ip, ip, #68, 20	; 0x44000
    48f0:	ldr	pc, [ip, #1972]!	; 0x7b4

000048f4 <readstat_begin_writing_file@plt>:
    48f4:	add	ip, pc, #0, 12
    48f8:	add	ip, ip, #68, 20	; 0x44000
    48fc:	ldr	pc, [ip, #1964]!	; 0x7ac

00004900 <lseek@plt>:
    4900:	add	ip, pc, #0, 12
    4904:	add	ip, ip, #68, 20	; 0x44000
    4908:	ldr	pc, [ip, #1956]!	; 0x7a4

0000490c <unistd_io_init@plt>:
    490c:	add	ip, pc, #0, 12
    4910:	add	ip, ip, #68, 20	; 0x44000
    4914:	ldr	pc, [ip, #1948]!	; 0x79c

00004918 <pow@plt>:
    4918:	add	ip, pc, #0, 12
    491c:	add	ip, ip, #68, 20	; 0x44000
    4920:	ldr	pc, [ip, #1940]!	; 0x794

00004924 <uncompress@plt>:
    4924:	add	ip, pc, #0, 12
    4928:	add	ip, ip, #68, 20	; 0x44000
    492c:	ldr	pc, [ip, #1932]!	; 0x78c

00004930 <memcmp@plt>:
    4930:	add	ip, pc, #0, 12
    4934:	add	ip, ip, #68, 20	; 0x44000
    4938:	ldr	pc, [ip, #1924]!	; 0x784

0000493c <readstat_string_value@plt>:
    493c:	add	ip, pc, #0, 12
    4940:	add	ip, ip, #68, 20	; 0x44000
    4944:	ldr	pc, [ip, #1916]!	; 0x77c

00004948 <readstat_schema_free@plt>:
    4948:	add	ip, pc, #0, 12
    494c:	add	ip, ip, #68, 20	; 0x44000
    4950:	ldr	pc, [ip, #1908]!	; 0x774

00004954 <readstat_calloc@plt>:
    4954:	add	ip, pc, #0, 12
    4958:	add	ip, ip, #68, 20	; 0x44000
    495c:	ldr	pc, [ip, #1900]!	; 0x76c

00004960 <ck_str_hash_lookup@plt>:
    4960:	add	ip, pc, #0, 12
    4964:	add	ip, ip, #68, 20	; 0x44000
    4968:	ldr	pc, [ip, #1892]!	; 0x764

0000496c <sav_compressed_row_bound@plt>:
    496c:	add	ip, pc, #0, 12
    4970:	add	ip, ip, #68, 20	; 0x44000
    4974:	ldr	pc, [ip, #1884]!	; 0x75c

00004978 <__isinf@plt>:
    4978:	add	ip, pc, #0, 12
    497c:	add	ip, ip, #68, 20	; 0x44000
    4980:	ldr	pc, [ip, #1876]!	; 0x754

00004984 <realloc@plt>:
    4984:	add	ip, pc, #0, 12
    4988:	add	ip, ip, #68, 20	; 0x44000
    498c:	ldr	pc, [ip, #1868]!	; 0x74c

00004990 <cnxptiee@plt>:
    4990:	add	ip, pc, #0, 12
    4994:	add	ip, ip, #68, 20	; 0x44000
    4998:	ldr	pc, [ip, #1860]!	; 0x744

0000499c <read_version_and_timestamp@plt>:
    499c:	add	ip, pc, #0, 12
    49a0:	add	ip, ip, #68, 20	; 0x44000
    49a4:	ldr	pc, [ip, #1852]!	; 0x73c

000049a8 <readstat_write_zeros@plt>:
    49a8:	add	ip, pc, #0, 12
    49ac:	add	ip, ip, #68, 20	; 0x44000
    49b0:	ldr	pc, [ip, #1844]!	; 0x734

000049b4 <strcasecmp@plt>:
    49b4:	add	ip, pc, #0, 12
    49b8:	add	ip, ip, #68, 20	; 0x44000
    49bc:	ldr	pc, [ip, #1836]!	; 0x72c

000049c0 <readstat_copy_quoted@plt>:
    49c0:	add	ip, pc, #0, 12
    49c4:	add	ip, ip, #68, 20	; 0x44000
    49c8:	ldr	pc, [ip, #1828]!	; 0x724

000049cc <deflate@plt>:
    49cc:	add	ip, pc, #0, 12
    49d0:	add	ip, ip, #68, 20	; 0x44000
    49d4:	ldr	pc, [ip, #1820]!	; 0x71c

000049d8 <submit_value_label@plt>:
    49d8:	add	ip, pc, #0, 12
    49dc:	add	ip, ip, #68, 20	; 0x44000
    49e0:	ldr	pc, [ip, #1812]!	; 0x714

000049e4 <sav_ctx_init@plt>:
    49e4:	add	ip, pc, #0, 12
    49e8:	add	ip, ip, #68, 20	; 0x44000
    49ec:	ldr	pc, [ip, #1804]!	; 0x70c

000049f0 <spss_measure_from_readstat_measure@plt>:
    49f0:	add	ip, pc, #0, 12
    49f4:	add	ip, ip, #68, 20	; 0x44000
    49f8:	ldr	pc, [ip, #1796]!	; 0x704

000049fc <sas_rle_decompress@plt>:
    49fc:	add	ip, pc, #0, 12
    4a00:	add	ip, ip, #68, 20	; 0x44000
    4a04:	ldr	pc, [ip, #1788]!	; 0x6fc

00004a08 <sav_parse_date@plt>:
    4a08:	add	ip, pc, #0, 12
    4a0c:	add	ip, ip, #68, 20	; 0x44000
    4a10:	ldr	pc, [ip, #1780]!	; 0x6f4

00004a14 <xport_namestr_bswap@plt>:
    4a14:	add	ip, pc, #0, 12
    4a18:	add	ip, ip, #68, 20	; 0x44000
    4a1c:	ldr	pc, [ip, #1772]!	; 0x6ec

00004a20 <strcpy@plt>:
    4a20:	add	ip, pc, #0, 12
    4a24:	add	ip, ip, #68, 20	; 0x44000
    4a28:	ldr	pc, [ip, #1764]!	; 0x6e4

00004a2c <zsav_ctx_init@plt>:
    4a2c:	add	ip, pc, #0, 12
    4a30:	add	ip, ip, #68, 20	; 0x44000
    4a34:	ldr	pc, [ip, #1756]!	; 0x6dc

00004a38 <sas_write_header@plt>:
    4a38:	add	ip, pc, #0, 12
    4a3c:	add	ip, ip, #68, 20	; 0x44000
    4a40:	ldr	pc, [ip, #1748]!	; 0x6d4

00004a44 <strtof@plt>:
    4a44:	add	ip, pc, #0, 12
    4a48:	add	ip, ip, #68, 20	; 0x44000
    4a4c:	ldr	pc, [ip, #1740]!	; 0x6cc

00004a50 <readstat_schema_find_or_create_entry@plt>:
    4a50:	add	ip, pc, #0, 12
    4a54:	add	ip, ip, #68, 20	; 0x44000
    4a58:	ldr	pc, [ip, #1732]!	; 0x6c4

00004a5c <readstat_set_io_ctx@plt>:
    4a5c:	add	ip, pc, #0, 12
    4a60:	add	ip, ip, #68, 20	; 0x44000
    4a64:	ldr	pc, [ip, #1724]!	; 0x6bc

00004a68 <spss_format_for_variable@plt>:
    4a68:	add	ip, pc, #0, 12
    4a6c:	add	ip, ip, #68, 20	; 0x44000
    4a70:	ldr	pc, [ip, #1716]!	; 0x6b4

00004a74 <malloc@plt>:
    4a74:	add	ip, pc, #0, 12
    4a78:	add	ip, ip, #68, 20	; 0x44000
    4a7c:	ldr	pc, [ip, #1708]!	; 0x6ac

00004a80 <zsav_add_block@plt>:
    4a80:	add	ip, pc, #0, 12
    4a84:	add	ip, ip, #68, 20	; 0x44000
    4a88:	ldr	pc, [ip, #1700]!	; 0x6a4

00004a8c <deflateInit_@plt>:
    4a8c:	add	ip, pc, #0, 12
    4a90:	add	ip, ip, #68, 20	; 0x44000
    4a94:	ldr	pc, [ip, #1692]!	; 0x69c

00004a98 <iconv_open@plt>:
    4a98:	add	ip, pc, #0, 12
    4a9c:	add	ip, ip, #68, 20	; 0x44000
    4aa0:	ldr	pc, [ip, #1684]!	; 0x694

00004aa4 <strerror@plt>:
    4aa4:	add	ip, pc, #0, 12
    4aa8:	add	ip, ip, #68, 20	; 0x44000
    4aac:	ldr	pc, [ip, #1676]!	; 0x68c

00004ab0 <sas_validate_tag@plt>:
    4ab0:	add	ip, pc, #0, 12
    4ab4:	add	ip, ip, #68, 20	; 0x44000
    4ab8:	ldr	pc, [ip, #1668]!	; 0x684

00004abc <readstat_write_string@plt>:
    4abc:	add	ip, pc, #0, 12
    4ac0:	add	ip, ip, #68, 20	; 0x44000
    4ac4:	ldr	pc, [ip, #1660]!	; 0x67c

00004ac8 <localtime@plt>:
    4ac8:	add	ip, pc, #0, 12
    4acc:	add	ip, ip, #68, 20	; 0x44000
    4ad0:	ldr	pc, [ip, #1652]!	; 0x674

00004ad4 <__ctype_tolower_loc@plt>:
    4ad4:	add	ip, pc, #0, 12
    4ad8:	add	ip, ip, #68, 20	; 0x44000
    4adc:	ldr	pc, [ip, #1644]!	; 0x66c

00004ae0 <modf@plt>:
    4ae0:	add	ip, pc, #0, 12
    4ae4:	add	ip, ip, #68, 20	; 0x44000
    4ae8:	ldr	pc, [ip, #1636]!	; 0x664

00004aec <__ctype_toupper_loc@plt>:
    4aec:	add	ip, pc, #0, 12
    4af0:	add	ip, ip, #68, 20	; 0x44000
    4af4:	ldr	pc, [ip, #1628]!	; 0x65c

00004af8 <ck_hash_table_init@plt>:
    4af8:	add	ip, pc, #0, 12
    4afc:	add	ip, ip, #68, 20	; 0x44000
    4b00:	ldr	pc, [ip, #1620]!	; 0x654

00004b04 <__gmon_start__@plt>:
    4b04:	add	ip, pc, #0, 12
    4b08:	add	ip, ip, #68, 20	; 0x44000
    4b0c:	ldr	pc, [ip, #1612]!	; 0x64c

00004b10 <open@plt>:
    4b10:	add	ip, pc, #0, 12
    4b14:	add	ip, ip, #68, 20	; 0x44000
    4b18:	ldr	pc, [ip, #1604]!	; 0x644

00004b1c <readstat_double_value@plt>:
    4b1c:	add	ip, pc, #0, 12
    4b20:	add	ip, ip, #68, 20	; 0x44000
    4b24:	ldr	pc, [ip, #1596]!	; 0x63c

00004b28 <dta_ctx_init@plt>:
    4b28:	add	ip, pc, #0, 12
    4b2c:	add	ip, ip, #68, 20	; 0x44000
    4b30:	ldr	pc, [ip, #1588]!	; 0x634

00004b34 <readstat_variable_get_type@plt>:
    4b34:	add	ip, pc, #0, 12
    4b38:	add	ip, ip, #68, 20	; 0x44000
    4b3c:	ldr	pc, [ip, #1580]!	; 0x62c

00004b40 <dta_type_info@plt>:
    4b40:	add	ip, pc, #0, 12
    4b44:	add	ip, ip, #68, 20	; 0x44000
    4b48:	ldr	pc, [ip, #1572]!	; 0x624

00004b4c <sav_parse_long_variable_names_record@plt>:
    4b4c:	add	ip, pc, #0, 12
    4b50:	add	ip, ip, #68, 20	; 0x44000
    4b54:	ldr	pc, [ip, #1564]!	; 0x61c

00004b58 <strlen@plt>:
    4b58:	add	ip, pc, #0, 12
    4b5c:	add	ip, ip, #68, 20	; 0x44000
    4b60:	ldr	pc, [ip, #1556]!	; 0x614

00004b64 <spss_varinfo_compare@plt>:
    4b64:	add	ip, pc, #0, 12
    4b68:	add	ip, ip, #68, 20	; 0x44000
    4b6c:	ldr	pc, [ip, #1548]!	; 0x60c

00004b70 <sav_decompress_row@plt>:
    4b70:	add	ip, pc, #0, 12
    4b74:	add	ip, ip, #68, 20	; 0x44000
    4b78:	ldr	pc, [ip, #1540]!	; 0x604

00004b7c <readstat_variable_get_display_width@plt>:
    4b7c:	add	ip, pc, #0, 12
    4b80:	add	ip, ip, #68, 20	; 0x44000
    4b84:	ldr	pc, [ip, #1532]!	; 0x5fc

00004b88 <readstat_malloc@plt>:
    4b88:	add	ip, pc, #0, 12
    4b8c:	add	ip, ip, #68, 20	; 0x44000
    4b90:	ldr	pc, [ip, #1524]!	; 0x5f4

00004b94 <readstat_convert@plt>:
    4b94:	add	ip, pc, #0, 12
    4b98:	add	ip, ip, #68, 20	; 0x44000
    4b9c:	ldr	pc, [ip, #1516]!	; 0x5ec

00004ba0 <ck_hash_table_free@plt>:
    4ba0:	add	ip, pc, #0, 12
    4ba4:	add	ip, ip, #68, 20	; 0x44000
    4ba8:	ldr	pc, [ip, #1508]!	; 0x5e4

00004bac <readstat_por_parse_double@plt>:
    4bac:	add	ip, pc, #0, 12
    4bb0:	add	ip, ip, #68, 20	; 0x44000
    4bb4:	ldr	pc, [ip, #1500]!	; 0x5dc

00004bb8 <por_utf8_encode@plt>:
    4bb8:	add	ip, pc, #0, 12
    4bbc:	add	ip, ip, #68, 20	; 0x44000
    4bc0:	ldr	pc, [ip, #1492]!	; 0x5d4

00004bc4 <__errno_location@plt>:
    4bc4:	add	ip, pc, #0, 12
    4bc8:	add	ip, ip, #68, 20	; 0x44000
    4bcc:	ldr	pc, [ip, #1484]!	; 0x5cc

00004bd0 <spss_init_variable_for_info@plt>:
    4bd0:	add	ip, pc, #0, 12
    4bd4:	add	ip, ip, #68, 20	; 0x44000
    4bd8:	ldr	pc, [ip, #1476]!	; 0x5c4

00004bdc <snprintf@plt>:
    4bdc:	add	ip, pc, #0, 12
    4be0:	add	ip, ip, #68, 20	; 0x44000
    4be4:	ldr	pc, [ip, #1468]!	; 0x5bc

00004be8 <__isoc99_sscanf@plt>:
    4be8:	add	ip, pc, #0, 12
    4bec:	add	ip, ip, #68, 20	; 0x44000
    4bf0:	ldr	pc, [ip, #1460]!	; 0x5b4

00004bf4 <ck_str_n_hash_insert@plt>:
    4bf4:	add	ip, pc, #0, 12
    4bf8:	add	ip, ip, #68, 20	; 0x44000
    4bfc:	ldr	pc, [ip, #1452]!	; 0x5ac

00004c00 <memset@plt>:
    4c00:	add	ip, pc, #0, 12
    4c04:	add	ip, ip, #68, 20	; 0x44000
    4c08:	ldr	pc, [ip, #1444]!	; 0x5a4

00004c0c <spss_64bit_value@plt>:
    4c0c:	add	ip, pc, #0, 12
    4c10:	add	ip, ip, #68, 20	; 0x44000
    4c14:	ldr	pc, [ip, #1436]!	; 0x59c

00004c18 <strncpy@plt>:
    4c18:	add	ip, pc, #0, 12
    4c1c:	add	ip, ip, #68, 20	; 0x44000
    4c20:	ldr	pc, [ip, #1428]!	; 0x594

00004c24 <readstat_variable_get_storage_width@plt>:
    4c24:	add	ip, pc, #0, 12
    4c28:	add	ip, ip, #68, 20	; 0x44000
    4c2c:	ldr	pc, [ip, #1420]!	; 0x58c

00004c30 <sav_parse_very_long_string_record@plt>:
    4c30:	add	ip, pc, #0, 12
    4c34:	add	ip, ip, #68, 20	; 0x44000
    4c38:	ldr	pc, [ip, #1412]!	; 0x584

00004c3c <readstat_realloc@plt>:
    4c3c:	add	ip, pc, #0, 12
    4c40:	add	ip, ip, #68, 20	; 0x44000
    4c44:	ldr	pc, [ip, #1404]!	; 0x57c

00004c48 <dta_parse_timestamp@plt>:
    4c48:	add	ip, pc, #0, 12
    4c4c:	add	ip, ip, #68, 20	; 0x44000
    4c50:	ldr	pc, [ip, #1396]!	; 0x574

00004c54 <strtod@plt>:
    4c54:	add	ip, pc, #0, 12
    4c58:	add	ip, ip, #68, 20	; 0x44000
    4c5c:	ldr	pc, [ip, #1388]!	; 0x56c

00004c60 <readstat_variable_get_missing_ranges_count@plt>:
    4c60:	add	ip, pc, #0, 12
    4c64:	add	ip, ip, #68, 20	; 0x44000
    4c68:	ldr	pc, [ip, #1380]!	; 0x564

00004c6c <deflateEnd@plt>:
    4c6c:	add	ip, pc, #0, 12
    4c70:	add	ip, ip, #68, 20	; 0x44000
    4c74:	ldr	pc, [ip, #1372]!	; 0x55c

00004c78 <readstat_variable_get_measure@plt>:
    4c78:	add	ip, pc, #0, 12
    4c7c:	add	ip, ip, #68, 20	; 0x44000
    4c80:	ldr	pc, [ip, #1364]!	; 0x554

00004c84 <__isnan@plt>:
    4c84:	add	ip, pc, #0, 12
    4c88:	add	ip, ip, #68, 20	; 0x44000
    4c8c:	ldr	pc, [ip, #1356]!	; 0x54c

00004c90 <readstat_variable_get_missing_range_hi@plt>:
    4c90:	add	ip, pc, #0, 12
    4c94:	add	ip, ip, #68, 20	; 0x44000
    4c98:	ldr	pc, [ip, #1348]!	; 0x544

00004c9c <readstat_set_read_handler@plt>:
    4c9c:	add	ip, pc, #0, 12
    4ca0:	add	ip, ip, #68, 20	; 0x44000
    4ca4:	ldr	pc, [ip, #1340]!	; 0x53c

00004ca8 <sas_header_info_init@plt>:
    4ca8:	add	ip, pc, #0, 12
    4cac:	add	ip, ip, #68, 20	; 0x44000
    4cb0:	ldr	pc, [ip, #1332]!	; 0x534

00004cb4 <readstat_variable_get_name@plt>:
    4cb4:	add	ip, pc, #0, 12
    4cb8:	add	ip, ip, #68, 20	; 0x44000
    4cbc:	ldr	pc, [ip, #1324]!	; 0x52c

00004cc0 <ones_to_twos_complement1@plt>:
    4cc0:	add	ip, pc, #0, 12
    4cc4:	add	ip, ip, #68, 20	; 0x44000
    4cc8:	ldr	pc, [ip, #1316]!	; 0x524

00004ccc <readstat_get_variable@plt>:
    4ccc:	add	ip, pc, #0, 12
    4cd0:	add	ip, ip, #68, 20	; 0x44000
    4cd4:	ldr	pc, [ip, #1308]!	; 0x51c

00004cd8 <spss_alignment_to_readstat_alignment@plt>:
    4cd8:	add	ip, pc, #0, 12
    4cdc:	add	ip, ip, #68, 20	; 0x44000
    4ce0:	ldr	pc, [ip, #1300]!	; 0x514

00004ce4 <por_utf8_decode@plt>:
    4ce4:	add	ip, pc, #0, 12
    4ce8:	add	ip, ip, #68, 20	; 0x44000
    4cec:	ldr	pc, [ip, #1292]!	; 0x50c

00004cf0 <sas_read_header@plt>:
    4cf0:	add	ip, pc, #0, 12
    4cf4:	add	ip, ip, #68, 20	; 0x44000
    4cf8:	ldr	pc, [ip, #1284]!	; 0x504

00004cfc <spss_measure_to_readstat_measure@plt>:
    4cfc:	add	ip, pc, #0, 12
    4d00:	add	ip, ip, #68, 20	; 0x44000
    4d04:	ldr	pc, [ip, #1276]!	; 0x4fc

00004d08 <sas_subheader_remainder@plt>:
    4d08:	add	ip, pc, #0, 12
    4d0c:	add	ip, ip, #68, 20	; 0x44000
    4d10:	ldr	pc, [ip, #1268]!	; 0x4f4

00004d14 <sas_read8@plt>:
    4d14:	add	ip, pc, #0, 12
    4d18:	add	ip, ip, #68, 20	; 0x44000
    4d1c:	ldr	pc, [ip, #1260]!	; 0x4ec

00004d20 <sas_read2@plt>:
    4d20:	add	ip, pc, #0, 12
    4d24:	add	ip, ip, #68, 20	; 0x44000
    4d28:	ldr	pc, [ip, #1252]!	; 0x4e4

00004d2c <readstat_copy_lower@plt>:
    4d2c:	add	ip, pc, #0, 12
    4d30:	add	ip, ip, #68, 20	; 0x44000
    4d34:	ldr	pc, [ip, #1244]!	; 0x4dc

00004d38 <sprintf@plt>:
    4d38:	add	ip, pc, #0, 12
    4d3c:	add	ip, ip, #68, 20	; 0x44000
    4d40:	ldr	pc, [ip, #1236]!	; 0x4d4

00004d44 <sas_read4@plt>:
    4d44:	add	ip, pc, #0, 12
    4d48:	add	ip, ip, #68, 20	; 0x44000
    4d4c:	ldr	pc, [ip, #1228]!	; 0x4cc

00004d50 <readstat_variable_get_label@plt>:
    4d50:	add	ip, pc, #0, 12
    4d54:	add	ip, ip, #68, 20	; 0x44000
    4d58:	ldr	pc, [ip, #1220]!	; 0x4c4

00004d5c <spss_varinfo_free@plt>:
    4d5c:	add	ip, pc, #0, 12
    4d60:	add	ip, ip, #68, 20	; 0x44000
    4d64:	ldr	pc, [ip, #1212]!	; 0x4bc

00004d68 <readstat_get_label_set@plt>:
    4d68:	add	ip, pc, #0, 12
    4d6c:	add	ip, ip, #68, 20	; 0x44000
    4d70:	ldr	pc, [ip, #1204]!	; 0x4b4

00004d74 <readstat_variable_get_alignment@plt>:
    4d74:	add	ip, pc, #0, 12
    4d78:	add	ip, ip, #68, 20	; 0x44000
    4d7c:	ldr	pc, [ip, #1196]!	; 0x4ac

00004d80 <qsort@plt>:
    4d80:	add	ip, pc, #0, 12
    4d84:	add	ip, ip, #68, 20	; 0x44000
    4d88:	ldr	pc, [ip, #1188]!	; 0x4a4

00004d8c <readstat_get_label_set_variable@plt>:
    4d8c:	add	ip, pc, #0, 12
    4d90:	add	ip, ip, #68, 20	; 0x44000
    4d94:	ldr	pc, [ip, #1180]!	; 0x49c

00004d98 <readstat_write_bytes@plt>:
    4d98:	add	ip, pc, #0, 12
    4d9c:	add	ip, ip, #68, 20	; 0x44000
    4da0:	ldr	pc, [ip, #1172]!	; 0x494

00004da4 <sav_compress_row@plt>:
    4da4:	add	ip, pc, #0, 12
    4da8:	add	ip, ip, #68, 20	; 0x44000
    4dac:	ldr	pc, [ip, #1164]!	; 0x48c

00004db0 <readstat_set_close_handler@plt>:
    4db0:	add	ip, pc, #0, 12
    4db4:	add	ip, ip, #68, 20	; 0x44000
    4db8:	ldr	pc, [ip, #1156]!	; 0x484

00004dbc <sas_fill_page@plt>:
    4dbc:	add	ip, pc, #0, 12
    4dc0:	add	ip, ip, #68, 20	; 0x44000
    4dc4:	ldr	pc, [ip, #1148]!	; 0x47c

00004dc8 <sas_rle_compressed_len@plt>:
    4dc8:	add	ip, pc, #0, 12
    4dcc:	add	ip, ip, #68, 20	; 0x44000
    4dd0:	ldr	pc, [ip, #1140]!	; 0x474

00004dd4 <por_ctx_init@plt>:
    4dd4:	add	ip, pc, #0, 12
    4dd8:	add	ip, ip, #68, 20	; 0x44000
    4ddc:	ldr	pc, [ip, #1132]!	; 0x46c

00004de0 <sas_assign_tag@plt>:
    4de0:	add	ip, pc, #0, 12
    4de4:	add	ip, ip, #68, 20	; 0x44000
    4de8:	ldr	pc, [ip, #1124]!	; 0x464

00004dec <zsav_compress_row@plt>:
    4dec:	add	ip, pc, #0, 12
    4df0:	add	ip, ip, #68, 20	; 0x44000
    4df4:	ldr	pc, [ip, #1116]!	; 0x45c

00004df8 <zsav_read_compressed_data@plt>:
    4df8:	add	ip, pc, #0, 12
    4dfc:	add	ip, ip, #68, 20	; 0x44000
    4e00:	ldr	pc, [ip, #1108]!	; 0x454

00004e04 <readstat_get_value_label@plt>:
    4e04:	add	ip, pc, #0, 12
    4e08:	add	ip, ip, #68, 20	; 0x44000
    4e0c:	ldr	pc, [ip, #1100]!	; 0x44c

00004e10 <sas_rle_compress@plt>:
    4e10:	add	ip, pc, #0, 12
    4e14:	add	ip, ip, #68, 20	; 0x44000
    4e18:	ldr	pc, [ip, #1092]!	; 0x444

00004e1c <readstat_write_line_padding@plt>:
    4e1c:	add	ip, pc, #0, 12
    4e20:	add	ip, ip, #68, 20	; 0x44000
    4e24:	ldr	pc, [ip, #1084]!	; 0x43c

00004e28 <ck_str_hash_insert@plt>:
    4e28:	add	ip, pc, #0, 12
    4e2c:	add	ip, ip, #68, 20	; 0x44000
    4e30:	ldr	pc, [ip, #1076]!	; 0x434

00004e34 <strncmp@plt>:
    4e34:	add	ip, pc, #0, 12
    4e38:	add	ip, ip, #68, 20	; 0x44000
    4e3c:	ldr	pc, [ip, #1068]!	; 0x42c

00004e40 <byteswap_double@plt>:
    4e40:	add	ip, pc, #0, 12
    4e44:	add	ip, ip, #68, 20	; 0x44000
    4e48:	ldr	pc, [ip, #1060]!	; 0x424

00004e4c <close@plt>:
    4e4c:	add	ip, pc, #0, 12
    4e50:	add	ip, ip, #68, 20	; 0x44000
    4e54:	ldr	pc, [ip, #1052]!	; 0x41c

00004e58 <readstat_write_bytes_as_lines@plt>:
    4e58:	add	ip, pc, #0, 12
    4e5c:	add	ip, ip, #68, 20	; 0x44000
    4e60:	ldr	pc, [ip, #1044]!	; 0x414

00004e64 <spss_missingness_for_info@plt>:
    4e64:	add	ip, pc, #0, 12
    4e68:	add	ip, ip, #68, 20	; 0x44000
    4e6c:	ldr	pc, [ip, #1036]!	; 0x40c

00004e70 <handle_variables@plt>:
    4e70:	add	ip, pc, #0, 12
    4e74:	add	ip, ip, #68, 20	; 0x44000
    4e78:	ldr	pc, [ip, #1028]!	; 0x404

00004e7c <readstat_variable_get_type_class@plt>:
    4e7c:	add	ip, pc, #0, 12
    4e80:	add	ip, ip, #68, 20	; 0x44000
    4e84:	ldr	pc, [ip, #1020]!	; 0x3fc

00004e88 <readstat_write_space_padded_string@plt>:
    4e88:	add	ip, pc, #0, 12
    4e8c:	add	ip, ip, #68, 20	; 0x44000
    4e90:	ldr	pc, [ip, #1012]!	; 0x3f4

00004e94 <dta_ctx_alloc@plt>:
    4e94:	add	ip, pc, #0, 12
    4e98:	add	ip, ip, #68, 20	; 0x44000
    4e9c:	ldr	pc, [ip, #1004]!	; 0x3ec

Disassembly of section .text:

00004ea0 <call_weak_fn>:
    4ea0:	ldr	r3, [pc, #20]	; 4ebc <call_weak_fn+0x1c>
    4ea4:	ldr	r2, [pc, #20]	; 4ec0 <call_weak_fn+0x20>
    4ea8:	add	r3, pc, r3
    4eac:	ldr	r2, [r3, r2]
    4eb0:	cmp	r2, #0
    4eb4:	bxeq	lr
    4eb8:	b	4b04 <__gmon_start__@plt>
    4ebc:	.word	0x00044150
    4ec0:	.word	0x000002b0

00004ec4 <deregister_tm_clones>:
    4ec4:	ldr	r0, [pc, #44]	; 4ef8 <deregister_tm_clones+0x34>
    4ec8:	ldr	r3, [pc, #44]	; 4efc <deregister_tm_clones+0x38>
    4ecc:	add	r0, pc, r0
    4ed0:	add	r3, pc, r3
    4ed4:	cmp	r3, r0
    4ed8:	ldr	r3, [pc, #32]	; 4f00 <deregister_tm_clones+0x3c>
    4edc:	add	r3, pc, r3
    4ee0:	bxeq	lr
    4ee4:	ldr	r2, [pc, #24]	; 4f04 <deregister_tm_clones+0x40>
    4ee8:	ldr	r3, [r3, r2]
    4eec:	cmp	r3, #0
    4ef0:	bxeq	lr
    4ef4:	bx	r3
    4ef8:	.word	0x00045e18
    4efc:	.word	0x00045e14
    4f00:	.word	0x0004411c
    4f04:	.word	0x00000298

00004f08 <register_tm_clones>:
    4f08:	ldr	r0, [pc, #56]	; 4f48 <register_tm_clones+0x40>
    4f0c:	ldr	r3, [pc, #56]	; 4f4c <register_tm_clones+0x44>
    4f10:	add	r0, pc, r0
    4f14:	add	r3, pc, r3
    4f18:	sub	r1, r3, r0
    4f1c:	ldr	r3, [pc, #44]	; 4f50 <register_tm_clones+0x48>
    4f20:	asr	r1, r1, #2
    4f24:	add	r3, pc, r3
    4f28:	add	r1, r1, r1, lsr #31
    4f2c:	asrs	r1, r1, #1
    4f30:	bxeq	lr
    4f34:	ldr	r2, [pc, #24]	; 4f54 <register_tm_clones+0x4c>
    4f38:	ldr	r3, [r3, r2]
    4f3c:	cmp	r3, #0
    4f40:	bxeq	lr
    4f44:	bx	r3
    4f48:	.word	0x00045dd4
    4f4c:	.word	0x00045dd0
    4f50:	.word	0x000440d4
    4f54:	.word	0x000002d8

00004f58 <__do_global_dtors_aux>:
    4f58:	ldr	r3, [pc, #76]	; 4fac <__do_global_dtors_aux+0x54>
    4f5c:	ldr	r2, [pc, #76]	; 4fb0 <__do_global_dtors_aux+0x58>
    4f60:	add	r3, pc, r3
    4f64:	add	r2, pc, r2
    4f68:	ldrb	r3, [r3]
    4f6c:	cmp	r3, #0
    4f70:	bxne	lr
    4f74:	ldr	r3, [pc, #56]	; 4fb4 <__do_global_dtors_aux+0x5c>
    4f78:	push	{r4, lr}
    4f7c:	ldr	r3, [r2, r3]
    4f80:	cmp	r3, #0
    4f84:	beq	4f94 <__do_global_dtors_aux+0x3c>
    4f88:	ldr	r3, [pc, #40]	; 4fb8 <__do_global_dtors_aux+0x60>
    4f8c:	ldr	r0, [pc, r3]
    4f90:	bl	47bc <__cxa_finalize@plt>
    4f94:	bl	4ec4 <deregister_tm_clones>
    4f98:	ldr	r3, [pc, #28]	; 4fbc <__do_global_dtors_aux+0x64>
    4f9c:	mov	r2, #1
    4fa0:	add	r3, pc, r3
    4fa4:	strb	r2, [r3]
    4fa8:	pop	{r4, pc}
    4fac:	.word	0x00045d84
    4fb0:	.word	0x00044094
    4fb4:	.word	0x00000294
    4fb8:	.word	0x0004434c
    4fbc:	.word	0x00045d44

00004fc0 <frame_dummy>:
    4fc0:	b	4f08 <register_tm_clones>

00004fc4 <ck_hash_str>:
    4fc4:	push	{fp, lr}
    4fc8:	mov	fp, sp
    4fcc:	ldrb	r3, [r0]
    4fd0:	cmp	r3, #0
    4fd4:	moveq	r1, #0
    4fd8:	movweq	r0, #5381	; 0x1505
    4fdc:	popeq	{fp, pc}
    4fe0:	add	r2, r0, #1
    4fe4:	mov	r1, #0
    4fe8:	movw	lr, #5381	; 0x1505
    4fec:	mov	ip, #33	; 0x21
    4ff0:	uxtb	r0, r3
    4ff4:	ldrb	r3, [r2], #1
    4ff8:	add	r1, r1, r1, lsl #5
    4ffc:	umlal	r0, r1, lr, ip
    5000:	mov	lr, r0
    5004:	cmp	r3, #0
    5008:	bne	4ff0 <ck_hash_str+0x2c>
    500c:	pop	{fp, pc}

00005010 <ck_float_hash_lookup>:
    5010:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5014:	add	fp, sp, #28
    5018:	sub	sp, sp, #12
    501c:	vmov	r5, s0
    5020:	mov	r1, #2
    5024:	mov	r9, r0
    5028:	mov	r0, #0
    502c:	orr	r3, r1, r5, lsr #8
    5030:	orr	r2, r5, #1
    5034:	strb	r0, [sp, #11]
    5038:	and	r1, r1, r5, lsr #8
    503c:	strb	r2, [sp, #6]
    5040:	strb	r3, [sp, #7]
    5044:	mov	r3, #4
    5048:	orr	r7, r3, r5, lsr #16
    504c:	and	r3, r3, r5, lsr #16
    5050:	strb	r7, [sp, #8]
    5054:	mov	r7, #8
    5058:	orr	r6, r7, r5, lsr #24
    505c:	strb	r6, [sp, #9]
    5060:	and	r6, r5, #1
    5064:	orr	r1, r6, r1
    5068:	orr	r1, r1, r3
    506c:	and	r3, r7, r5, lsr #24
    5070:	orr	r1, r1, r3
    5074:	orr	r1, r1, #240	; 0xf0
    5078:	strb	r1, [sp, #10]
    507c:	ldr	r4, [r9, #8]
    5080:	ldr	r1, [r9, #12]
    5084:	orrs	r1, r4, r1
    5088:	beq	5164 <ck_float_hash_lookup+0x154>
    508c:	add	r0, sp, #6
    5090:	mov	r1, #0
    5094:	movw	r6, #5381	; 0x1505
    5098:	mov	r7, #33	; 0x21
    509c:	add	r3, r0, #1
    50a0:	uxtb	r0, r2
    50a4:	ldrb	r2, [r3], #1
    50a8:	add	r1, r1, r1, lsl #5
    50ac:	umlal	r0, r1, r6, r7
    50b0:	mov	r6, r0
    50b4:	cmp	r2, #0
    50b8:	bne	50a0 <ck_float_hash_lookup+0x90>
    50bc:	ldrd	r4, [r9]
    50c0:	mov	r2, r4
    50c4:	mov	r3, r5
    50c8:	bl	2889c <__aeabi_uldivmod>
    50cc:	subs	r0, r2, #1
    50d0:	mov	r6, r2
    50d4:	mov	r7, r3
    50d8:	mov	r2, r4
    50dc:	sbc	r1, r3, #0
    50e0:	mov	r3, r5
    50e4:	bl	2889c <__aeabi_uldivmod>
    50e8:	eor	r0, r7, r3
    50ec:	eor	r1, r6, r2
    50f0:	orrs	r0, r1, r0
    50f4:	mov	r0, #0
    50f8:	beq	5164 <ck_float_hash_lookup+0x154>
    50fc:	ldr	r0, [r9, #16]
    5100:	mov	sl, r2
    5104:	mov	r8, r3
    5108:	str	r0, [sp]
    510c:	ldr	r0, [sp]
    5110:	add	r9, r6, r6, lsl #5
    5114:	ldrb	r1, [r0, r9, lsl #2]!
    5118:	cmp	r1, #0
    511c:	beq	5160 <ck_float_hash_lookup+0x150>
    5120:	add	r1, sp, #6
    5124:	mov	r2, #6
    5128:	bl	4e34 <strncmp@plt>
    512c:	cmp	r0, #0
    5130:	beq	516c <ck_float_hash_lookup+0x15c>
    5134:	adds	r0, r6, #1
    5138:	mov	r2, r4
    513c:	mov	r3, r5
    5140:	adc	r1, r7, #0
    5144:	bl	2889c <__aeabi_uldivmod>
    5148:	eor	r0, r3, r8
    514c:	eor	r1, r2, sl
    5150:	mov	r6, r2
    5154:	mov	r7, r3
    5158:	orrs	r0, r1, r0
    515c:	bne	510c <ck_float_hash_lookup+0xfc>
    5160:	mov	r0, #0
    5164:	sub	sp, fp, #28
    5168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    516c:	ldr	r0, [sp]
    5170:	add	r0, r0, r9, lsl #2
    5174:	ldr	r0, [r0, #128]	; 0x80
    5178:	sub	sp, fp, #28
    517c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005180 <ck_str_n_hash_lookup>:
    5180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5184:	add	fp, sp, #28
    5188:	sub	sp, sp, #20
    518c:	mov	r4, r2
    5190:	sub	r2, r1, #1
    5194:	mov	r5, #0
    5198:	cmp	r2, #126	; 0x7e
    519c:	bhi	52c4 <ck_str_n_hash_lookup+0x144>
    51a0:	ldrd	r2, [r4, #8]
    51a4:	orrs	r2, r2, r3
    51a8:	beq	52c4 <ck_str_n_hash_lookup+0x144>
    51ac:	ldrb	r3, [r0]
    51b0:	mov	r5, #0
    51b4:	str	r0, [sp, #16]
    51b8:	str	r1, [sp, #4]
    51bc:	cmp	r3, #0
    51c0:	beq	51f4 <ck_str_n_hash_lookup+0x74>
    51c4:	add	r2, r0, #1
    51c8:	mov	r1, #0
    51cc:	movw	r6, #5381	; 0x1505
    51d0:	mov	r7, #33	; 0x21
    51d4:	uxtb	r0, r3
    51d8:	ldrb	r3, [r2], #1
    51dc:	add	r1, r1, r1, lsl #5
    51e0:	umlal	r0, r1, r6, r7
    51e4:	mov	r6, r0
    51e8:	cmp	r3, #0
    51ec:	bne	51d4 <ck_str_n_hash_lookup+0x54>
    51f0:	b	51fc <ck_str_n_hash_lookup+0x7c>
    51f4:	movw	r0, #5381	; 0x1505
    51f8:	mov	r1, #0
    51fc:	ldr	sl, [r4]
    5200:	ldr	r9, [r4, #4]
    5204:	str	r4, [sp]
    5208:	mov	r2, sl
    520c:	mov	r3, r9
    5210:	bl	2889c <__aeabi_uldivmod>
    5214:	subs	r0, r2, #1
    5218:	mov	r4, r2
    521c:	mov	r7, r3
    5220:	mov	r2, sl
    5224:	sbc	r1, r3, #0
    5228:	mov	r3, r9
    522c:	bl	2889c <__aeabi_uldivmod>
    5230:	eor	r0, r7, r3
    5234:	eor	r1, r4, r2
    5238:	orrs	r0, r1, r0
    523c:	beq	52c4 <ck_str_n_hash_lookup+0x144>
    5240:	ldr	r0, [sp, #4]
    5244:	str	r9, [sp, #8]
    5248:	mov	r6, r2
    524c:	mov	r8, r3
    5250:	str	sl, [sp, #12]
    5254:	add	r5, r0, #1
    5258:	ldr	r0, [sp]
    525c:	ldr	r9, [r0, #16]
    5260:	add	sl, r4, r4, lsl #5
    5264:	mov	r0, r9
    5268:	ldrb	r1, [r0, sl, lsl #2]!
    526c:	cmp	r1, #0
    5270:	beq	52b4 <ck_str_n_hash_lookup+0x134>
    5274:	ldr	r1, [sp, #16]
    5278:	mov	r2, r5
    527c:	bl	4e34 <strncmp@plt>
    5280:	cmp	r0, #0
    5284:	beq	52bc <ck_str_n_hash_lookup+0x13c>
    5288:	ldr	r2, [sp, #12]
    528c:	ldr	r3, [sp, #8]
    5290:	adds	r0, r4, #1
    5294:	adc	r1, r7, #0
    5298:	bl	2889c <__aeabi_uldivmod>
    529c:	eor	r0, r3, r8
    52a0:	eor	r1, r2, r6
    52a4:	mov	r4, r2
    52a8:	mov	r7, r3
    52ac:	orrs	r0, r1, r0
    52b0:	bne	5260 <ck_str_n_hash_lookup+0xe0>
    52b4:	mov	r5, #0
    52b8:	b	52c4 <ck_str_n_hash_lookup+0x144>
    52bc:	add	r0, r9, sl, lsl #2
    52c0:	ldr	r5, [r0, #128]	; 0x80
    52c4:	mov	r0, r5
    52c8:	sub	sp, fp, #28
    52cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000052d0 <ck_float_hash_insert>:
    52d0:	push	{r4, sl, fp, lr}
    52d4:	add	fp, sp, #8
    52d8:	sub	sp, sp, #8
    52dc:	mov	lr, r0
    52e0:	mov	r0, #0
    52e4:	mov	ip, r1
    52e8:	strb	r0, [sp, #7]
    52ec:	vmov	r0, s0
    52f0:	orr	r1, r0, #1
    52f4:	strb	r1, [sp, #2]
    52f8:	mov	r1, #2
    52fc:	orr	r3, r1, r0, lsr #8
    5300:	and	r1, r1, r0, lsr #8
    5304:	strb	r3, [sp, #3]
    5308:	mov	r3, #4
    530c:	orr	r2, r3, r0, lsr #16
    5310:	and	r3, r3, r0, lsr #16
    5314:	strb	r2, [sp, #4]
    5318:	mov	r2, #8
    531c:	orr	r4, r2, r0, lsr #24
    5320:	strb	r4, [sp, #5]
    5324:	and	r4, r0, #1
    5328:	and	r0, r2, r0, lsr #24
    532c:	mov	r2, lr
    5330:	orr	r1, r4, r1
    5334:	orr	r1, r1, r3
    5338:	mov	r3, ip
    533c:	orr	r0, r1, r0
    5340:	mov	r1, #5
    5344:	orr	r0, r0, #240	; 0xf0
    5348:	strb	r0, [sp, #6]
    534c:	add	r0, sp, #2
    5350:	bl	4bf4 <ck_str_n_hash_insert@plt>
    5354:	sub	sp, fp, #8
    5358:	pop	{r4, sl, fp, pc}

0000535c <ck_str_n_hash_insert>:
    535c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5360:	add	fp, sp, #28
    5364:	sub	sp, sp, #36	; 0x24
    5368:	mov	sl, r1
    536c:	sub	r1, r1, #1
    5370:	mov	r7, #0
    5374:	cmp	r1, #126	; 0x7e
    5378:	bhi	5614 <ck_str_n_hash_insert+0x2b8>
    537c:	ldrd	r8, [r3]
    5380:	mov	r5, r3
    5384:	orrs	r1, r8, r9
    5388:	beq	5614 <ck_str_n_hash_insert+0x2b8>
    538c:	mov	r1, r5
    5390:	str	r0, [sp, #32]
    5394:	str	r2, [sp, #12]
    5398:	ldr	r0, [r1, #8]!
    539c:	str	r1, [sp, #16]
    53a0:	ldr	r1, [r1, #4]
    53a4:	bl	28754 <__aeabi_ul2d>
    53a8:	mov	r4, r0
    53ac:	mov	r6, r1
    53b0:	mov	r0, r8
    53b4:	mov	r1, r9
    53b8:	bl	28754 <__aeabi_ul2d>
    53bc:	vmov.f64	d16, #104	; 0x3f400000  0.750
    53c0:	vmov	d17, r0, r1
    53c4:	vmul.f64	d16, d17, d16
    53c8:	vmov	d17, r4, r6
    53cc:	vcmpe.f64	d16, d17
    53d0:	vmrs	APSR_nzcv, fpscr
    53d4:	bhi	548c <ck_str_n_hash_insert+0x130>
    53d8:	ldr	r6, [r5, #16]
    53dc:	lsl	r4, r8, #1
    53e0:	mov	r1, #132	; 0x84
    53e4:	mov	r0, r4
    53e8:	bl	472c <calloc@plt>
    53ec:	cmp	r0, #0
    53f0:	str	r0, [r5, #16]
    53f4:	beq	5614 <ck_str_n_hash_insert+0x2b8>
    53f8:	lsl	r0, r9, #1
    53fc:	mov	r1, r5
    5400:	str	sl, [sp, #8]
    5404:	orr	r5, r0, r8, lsr #31
    5408:	mov	sl, r1
    540c:	mov	r0, #0
    5410:	strd	r4, [r1]
    5414:	mov	r5, #1
    5418:	mov	r4, r6
    541c:	ldr	r1, [sp, #16]
    5420:	str	r0, [r1]
    5424:	str	r0, [r1, #4]
    5428:	ldrb	r0, [r4]
    542c:	cmp	r0, #0
    5430:	beq	5464 <ck_str_n_hash_insert+0x108>
    5434:	ldr	r7, [r4, #128]	; 0x80
    5438:	mov	r0, r4
    543c:	bl	4b58 <strlen@plt>
    5440:	mov	r1, r0
    5444:	cmp	r0, #127	; 0x7f
    5448:	mov	r0, r4
    544c:	mov	r2, r7
    5450:	mov	r3, sl
    5454:	movcs	r1, #127	; 0x7f
    5458:	bl	4bf4 <ck_str_n_hash_insert@plt>
    545c:	cmp	r0, #0
    5460:	beq	55d0 <ck_str_n_hash_insert+0x274>
    5464:	subs	r1, r5, r8
    5468:	add	r0, r5, #1
    546c:	add	r4, r4, #132	; 0x84
    5470:	rscs	r1, r9, #0
    5474:	mov	r5, r0
    5478:	bcc	5428 <ck_str_n_hash_insert+0xcc>
    547c:	mov	r0, r6
    5480:	bl	4864 <free@plt>
    5484:	mov	r5, sl
    5488:	ldr	sl, [sp, #8]
    548c:	ldr	r0, [sp, #32]
    5490:	ldrb	r3, [r0]
    5494:	cmp	r3, #0
    5498:	beq	54cc <ck_str_n_hash_insert+0x170>
    549c:	add	r2, r0, #1
    54a0:	mov	r1, #0
    54a4:	movw	r6, #5381	; 0x1505
    54a8:	mov	r7, #33	; 0x21
    54ac:	uxtb	r0, r3
    54b0:	ldrb	r3, [r2], #1
    54b4:	add	r1, r1, r1, lsl #5
    54b8:	umlal	r0, r1, r6, r7
    54bc:	mov	r6, r0
    54c0:	cmp	r3, #0
    54c4:	bne	54ac <ck_str_n_hash_insert+0x150>
    54c8:	b	54d4 <ck_str_n_hash_insert+0x178>
    54cc:	mov	r1, #0
    54d0:	movw	r0, #5381	; 0x1505
    54d4:	ldr	r9, [r5]
    54d8:	ldr	r7, [r5, #4]
    54dc:	mov	r2, r9
    54e0:	mov	r3, r7
    54e4:	bl	2889c <__aeabi_uldivmod>
    54e8:	mov	r6, r2
    54ec:	mov	r8, r3
    54f0:	orrs	r0, r2, r3
    54f4:	beq	5510 <ck_str_n_hash_insert+0x1b4>
    54f8:	subs	r0, r6, #1
    54fc:	mov	r2, r9
    5500:	mov	r3, r7
    5504:	sbc	r1, r8, #0
    5508:	bl	2889c <__aeabi_uldivmod>
    550c:	b	5518 <ck_str_n_hash_insert+0x1bc>
    5510:	subs	r2, r9, #1
    5514:	sbc	r3, r7, #0
    5518:	eor	r0, r6, r2
    551c:	eor	r1, r8, r3
    5520:	orrs	r0, r0, r1
    5524:	beq	55d0 <ck_str_n_hash_insert+0x274>
    5528:	add	r0, sl, #1
    552c:	str	sl, [sp, #8]
    5530:	str	r5, [sp, #4]
    5534:	str	r2, [sp, #20]
    5538:	str	r0, [sp, #24]
    553c:	ldr	r0, [r5, #16]
    5540:	str	r0, [sp, #28]
    5544:	ldr	r4, [sp, #28]
    5548:	mov	sl, r7
    554c:	add	r7, r6, r6, lsl #5
    5550:	mov	r5, r3
    5554:	ldrb	r0, [r4, r7, lsl #2]!
    5558:	cmp	r0, #0
    555c:	bne	5580 <ck_str_n_hash_insert+0x224>
    5560:	ldr	r2, [sp, #16]
    5564:	ldrd	r0, [r2]
    5568:	adds	r0, r0, #1
    556c:	adc	r1, r1, #0
    5570:	strd	r0, [r2]
    5574:	ldrb	r0, [r4]
    5578:	cmp	r0, #0
    557c:	beq	55d8 <ck_str_n_hash_insert+0x27c>
    5580:	ldr	r1, [sp, #32]
    5584:	ldr	r2, [sp, #24]
    5588:	mov	r0, r4
    558c:	bl	4e34 <strncmp@plt>
    5590:	cmp	r0, #0
    5594:	beq	55d8 <ck_str_n_hash_insert+0x27c>
    5598:	adds	r0, r6, #1
    559c:	mov	r2, r9
    55a0:	mov	r3, sl
    55a4:	mov	r7, sl
    55a8:	adc	r1, r8, #0
    55ac:	bl	2889c <__aeabi_uldivmod>
    55b0:	mov	r6, r2
    55b4:	ldr	r2, [sp, #20]
    55b8:	mov	r8, r3
    55bc:	mov	r3, r5
    55c0:	eor	r0, r8, r5
    55c4:	eor	r1, r6, r2
    55c8:	orrs	r0, r1, r0
    55cc:	bne	5544 <ck_str_n_hash_insert+0x1e8>
    55d0:	mov	r7, #0
    55d4:	b	5614 <ck_str_n_hash_insert+0x2b8>
    55d8:	mov	r0, r4
    55dc:	ldr	r4, [sp, #8]
    55e0:	ldr	r1, [sp, #32]
    55e4:	mov	r2, r4
    55e8:	bl	48b8 <memcpy@plt>
    55ec:	ldr	r2, [sp, #4]
    55f0:	mov	r1, #0
    55f4:	ldr	r0, [r2, #16]
    55f8:	add	r0, r0, r7, lsl #2
    55fc:	strb	r1, [r0, r4]
    5600:	ldr	r1, [sp, #12]
    5604:	ldr	r0, [r2, #16]
    5608:	add	r0, r0, r7, lsl #2
    560c:	mov	r7, #1
    5610:	str	r1, [r0, #128]	; 0x80
    5614:	mov	r0, r7
    5618:	sub	sp, fp, #28
    561c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005620 <ck_double_hash_lookup>:
    5620:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5624:	add	fp, sp, #28
    5628:	sub	sp, sp, #20
    562c:	vmov	lr, r1, d0
    5630:	mov	ip, #8
    5634:	mov	r9, r0
    5638:	mov	r0, #0
    563c:	orr	r2, r1, #1
    5640:	orr	r6, ip, r1, lsr #24
    5644:	strb	r2, [sp, #13]
    5648:	mov	r2, #2
    564c:	orr	r3, r2, r1, lsr #8
    5650:	and	r2, r2, r1, lsr #8
    5654:	strb	r3, [sp, #14]
    5658:	mov	r3, #4
    565c:	orr	r7, r3, r1, lsr #16
    5660:	and	r3, r3, r1, lsr #16
    5664:	strb	r7, [sp, #15]
    5668:	strb	r6, [sp, #16]
    566c:	lsr	r6, lr, #8
    5670:	orr	r6, r6, r1, lsl #24
    5674:	orr	r5, r6, #2
    5678:	strb	r5, [sp, #10]
    567c:	lsr	r5, lr, #16
    5680:	orr	r5, r5, r1, lsl #16
    5684:	orr	r4, r5, #4
    5688:	strb	r4, [sp, #11]
    568c:	lsr	r4, lr, #24
    5690:	orr	r4, r4, r1, lsl #8
    5694:	orr	r7, r4, #8
    5698:	strb	r7, [sp, #12]
    569c:	and	r7, r1, #1
    56a0:	and	r1, ip, r1, lsr #24
    56a4:	strb	r0, [sp, #19]
    56a8:	orr	r2, r2, r7
    56ac:	orr	r3, r2, r3
    56b0:	orr	r2, lr, #1
    56b4:	orr	r1, r3, r1
    56b8:	strb	r2, [sp, #9]
    56bc:	and	r3, lr, #1
    56c0:	orr	r1, r1, #240	; 0xf0
    56c4:	strb	r1, [sp, #18]
    56c8:	and	r1, r6, #2
    56cc:	orr	r3, r3, r1
    56d0:	and	r1, r5, #4
    56d4:	orr	r3, r3, r1
    56d8:	and	r1, r4, #8
    56dc:	orr	r1, r3, r1
    56e0:	orr	r1, r1, #240	; 0xf0
    56e4:	strb	r1, [sp, #17]
    56e8:	ldr	r4, [r9, #8]
    56ec:	ldr	r1, [r9, #12]
    56f0:	orrs	r1, r4, r1
    56f4:	beq	57d4 <ck_double_hash_lookup+0x1b4>
    56f8:	add	r0, sp, #9
    56fc:	mov	r1, #0
    5700:	movw	r6, #5381	; 0x1505
    5704:	mov	r7, #33	; 0x21
    5708:	add	r3, r0, #1
    570c:	uxtb	r0, r2
    5710:	ldrb	r2, [r3], #1
    5714:	add	r1, r1, r1, lsl #5
    5718:	umlal	r0, r1, r6, r7
    571c:	mov	r6, r0
    5720:	cmp	r2, #0
    5724:	bne	570c <ck_double_hash_lookup+0xec>
    5728:	ldr	r5, [r9]
    572c:	ldr	r4, [r9, #4]
    5730:	mov	r2, r5
    5734:	mov	r3, r4
    5738:	bl	2889c <__aeabi_uldivmod>
    573c:	subs	r0, r2, #1
    5740:	mov	r6, r2
    5744:	mov	r7, r3
    5748:	mov	r2, r5
    574c:	sbc	r1, r3, #0
    5750:	mov	r3, r4
    5754:	bl	2889c <__aeabi_uldivmod>
    5758:	eor	r0, r7, r3
    575c:	eor	r1, r6, r2
    5760:	orrs	r0, r1, r0
    5764:	mov	r0, #0
    5768:	beq	57d4 <ck_double_hash_lookup+0x1b4>
    576c:	ldr	r0, [r9, #16]
    5770:	mov	sl, r2
    5774:	mov	r8, r3
    5778:	str	r0, [sp, #4]
    577c:	ldr	r0, [sp, #4]
    5780:	add	r9, r6, r6, lsl #5
    5784:	ldrb	r1, [r0, r9, lsl #2]!
    5788:	cmp	r1, #0
    578c:	beq	57d0 <ck_double_hash_lookup+0x1b0>
    5790:	add	r1, sp, #9
    5794:	mov	r2, #11
    5798:	bl	4e34 <strncmp@plt>
    579c:	cmp	r0, #0
    57a0:	beq	57dc <ck_double_hash_lookup+0x1bc>
    57a4:	adds	r0, r6, #1
    57a8:	mov	r2, r5
    57ac:	mov	r3, r4
    57b0:	adc	r1, r7, #0
    57b4:	bl	2889c <__aeabi_uldivmod>
    57b8:	eor	r0, r3, r8
    57bc:	eor	r1, r2, sl
    57c0:	mov	r6, r2
    57c4:	mov	r7, r3
    57c8:	orrs	r0, r1, r0
    57cc:	bne	577c <ck_double_hash_lookup+0x15c>
    57d0:	mov	r0, #0
    57d4:	sub	sp, fp, #28
    57d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    57dc:	ldr	r0, [sp, #4]
    57e0:	add	r0, r0, r9, lsl #2
    57e4:	ldr	r0, [r0, #128]	; 0x80
    57e8:	sub	sp, fp, #28
    57ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000057f0 <ck_double_hash_insert>:
    57f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    57f4:	add	fp, sp, #24
    57f8:	sub	sp, sp, #16
    57fc:	mov	lr, r0
    5800:	mov	r0, #0
    5804:	mov	ip, r1
    5808:	mov	r8, #2
    580c:	mov	r9, #8
    5810:	strb	r0, [sp, #15]
    5814:	vmov	r0, r1, d0
    5818:	orr	r3, r0, #1
    581c:	orr	r2, r8, r1, lsr #8
    5820:	orr	r5, r9, r1, lsr #24
    5824:	strb	r3, [sp, #5]
    5828:	orr	r3, r1, #1
    582c:	strb	r3, [sp, #9]
    5830:	strb	r2, [sp, #10]
    5834:	mov	r2, #4
    5838:	orr	r4, r2, r1, lsr #16
    583c:	and	r2, r2, r1, lsr #16
    5840:	strb	r4, [sp, #11]
    5844:	strb	r5, [sp, #12]
    5848:	lsr	r5, r0, #8
    584c:	and	r4, r1, #1
    5850:	orr	r5, r5, r1, lsl #24
    5854:	orr	r6, r5, #2
    5858:	strb	r6, [sp, #6]
    585c:	lsr	r6, r0, #16
    5860:	orr	r6, r6, r1, lsl #16
    5864:	orr	r7, r6, #4
    5868:	strb	r7, [sp, #7]
    586c:	lsr	r7, r0, #24
    5870:	and	r0, r0, #1
    5874:	orr	r7, r7, r1, lsl #8
    5878:	orr	r3, r7, #8
    587c:	strb	r3, [sp, #8]
    5880:	and	r3, r8, r1, lsr #8
    5884:	and	r1, r9, r1, lsr #24
    5888:	orr	r3, r3, r4
    588c:	orr	r2, r3, r2
    5890:	mov	r3, ip
    5894:	orr	r1, r2, r1
    5898:	mov	r2, lr
    589c:	orr	r1, r1, #240	; 0xf0
    58a0:	strb	r1, [sp, #14]
    58a4:	and	r1, r5, #2
    58a8:	orr	r0, r0, r1
    58ac:	and	r1, r6, #4
    58b0:	orr	r0, r0, r1
    58b4:	and	r1, r7, #8
    58b8:	orr	r0, r0, r1
    58bc:	mov	r1, #10
    58c0:	orr	r0, r0, #240	; 0xf0
    58c4:	strb	r0, [sp, #13]
    58c8:	add	r0, sp, #5
    58cc:	bl	4bf4 <ck_str_n_hash_insert@plt>
    58d0:	sub	sp, fp, #24
    58d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000058d8 <ck_str_hash_lookup>:
    58d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    58dc:	add	fp, sp, #28
    58e0:	sub	sp, sp, #20
    58e4:	mov	r4, r1
    58e8:	mov	r5, r0
    58ec:	bl	4b58 <strlen@plt>
    58f0:	mov	r7, r0
    58f4:	cmp	r0, #127	; 0x7f
    58f8:	ldrd	r0, [r4, #8]
    58fc:	movcs	r7, #127	; 0x7f
    5900:	orrs	r0, r0, r1
    5904:	mov	r0, #0
    5908:	beq	5a14 <ck_str_hash_lookup+0x13c>
    590c:	sub	r1, r7, #1
    5910:	cmp	r1, #126	; 0x7e
    5914:	bhi	5a14 <ck_str_hash_lookup+0x13c>
    5918:	ldrb	r3, [r5]
    591c:	str	r5, [sp, #16]
    5920:	cmp	r3, #0
    5924:	beq	5958 <ck_str_hash_lookup+0x80>
    5928:	add	r2, r5, #1
    592c:	mov	r1, #0
    5930:	movw	r5, #5381	; 0x1505
    5934:	mov	r6, #33	; 0x21
    5938:	uxtb	r0, r3
    593c:	ldrb	r3, [r2], #1
    5940:	add	r1, r1, r1, lsl #5
    5944:	umlal	r0, r1, r5, r6
    5948:	mov	r5, r0
    594c:	cmp	r3, #0
    5950:	bne	5938 <ck_str_hash_lookup+0x60>
    5954:	b	5960 <ck_str_hash_lookup+0x88>
    5958:	movw	r0, #5381	; 0x1505
    595c:	mov	r1, #0
    5960:	ldm	r4, {r9, sl}
    5964:	mov	r2, r9
    5968:	mov	r3, sl
    596c:	bl	2889c <__aeabi_uldivmod>
    5970:	subs	r0, r2, #1
    5974:	str	r4, [sp, #4]
    5978:	mov	r4, r2
    597c:	mov	r6, r3
    5980:	mov	r2, r9
    5984:	sbc	r1, r3, #0
    5988:	mov	r3, sl
    598c:	bl	2889c <__aeabi_uldivmod>
    5990:	eor	r0, r6, r3
    5994:	eor	r1, r4, r2
    5998:	orrs	r0, r1, r0
    599c:	beq	5a10 <ck_str_hash_lookup+0x138>
    59a0:	ldr	r0, [sp, #4]
    59a4:	str	r9, [sp, #12]
    59a8:	mov	r5, r2
    59ac:	mov	r8, r3
    59b0:	add	r7, r7, #1
    59b4:	str	sl, [sp, #8]
    59b8:	ldr	r9, [r0, #16]
    59bc:	add	sl, r4, r4, lsl #5
    59c0:	mov	r0, r9
    59c4:	ldrb	r1, [r0, sl, lsl #2]!
    59c8:	cmp	r1, #0
    59cc:	beq	5a10 <ck_str_hash_lookup+0x138>
    59d0:	ldr	r1, [sp, #16]
    59d4:	mov	r2, r7
    59d8:	bl	4e34 <strncmp@plt>
    59dc:	cmp	r0, #0
    59e0:	beq	5a1c <ck_str_hash_lookup+0x144>
    59e4:	ldr	r2, [sp, #12]
    59e8:	ldr	r3, [sp, #8]
    59ec:	adds	r0, r4, #1
    59f0:	adc	r1, r6, #0
    59f4:	bl	2889c <__aeabi_uldivmod>
    59f8:	eor	r0, r3, r8
    59fc:	eor	r1, r2, r5
    5a00:	mov	r4, r2
    5a04:	mov	r6, r3
    5a08:	orrs	r0, r1, r0
    5a0c:	bne	59bc <ck_str_hash_lookup+0xe4>
    5a10:	mov	r0, #0
    5a14:	sub	sp, fp, #28
    5a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5a1c:	add	r0, r9, sl, lsl #2
    5a20:	ldr	r0, [r0, #128]	; 0x80
    5a24:	sub	sp, fp, #28
    5a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005a2c <ck_str_hash_insert>:
    5a2c:	push	{r4, r5, r6, sl, fp, lr}
    5a30:	add	fp, sp, #16
    5a34:	mov	r4, r2
    5a38:	mov	r5, r1
    5a3c:	mov	r6, r0
    5a40:	bl	4b58 <strlen@plt>
    5a44:	mov	r1, r0
    5a48:	cmp	r0, #127	; 0x7f
    5a4c:	mov	r0, r6
    5a50:	mov	r2, r5
    5a54:	mov	r3, r4
    5a58:	movcs	r1, #127	; 0x7f
    5a5c:	pop	{r4, r5, r6, sl, fp, lr}
    5a60:	b	535c <ck_str_n_hash_insert>

00005a64 <ck_hash_table_grow>:
    5a64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5a68:	add	fp, sp, #28
    5a6c:	sub	sp, sp, #4
    5a70:	ldm	r0, {r6, sl}
    5a74:	mov	r5, r0
    5a78:	ldr	r0, [r0, #16]
    5a7c:	mov	r1, #132	; 0x84
    5a80:	lsl	r7, r6, #1
    5a84:	str	r0, [sp]
    5a88:	mov	r0, r7
    5a8c:	bl	472c <calloc@plt>
    5a90:	cmp	r0, #0
    5a94:	str	r0, [r5, #16]
    5a98:	beq	5b24 <ck_hash_table_grow+0xc0>
    5a9c:	lsl	r0, sl, #1
    5aa0:	mov	r9, #0
    5aa4:	str	r7, [r5]
    5aa8:	orr	r0, r0, r6, lsr #31
    5aac:	stmib	r5, {r0, r9}
    5ab0:	orrs	r0, r6, sl
    5ab4:	str	r9, [r5, #12]
    5ab8:	beq	5b18 <ck_hash_table_grow+0xb4>
    5abc:	ldr	r7, [sp]
    5ac0:	mov	r8, #1
    5ac4:	ldrb	r0, [r7]
    5ac8:	cmp	r0, #0
    5acc:	beq	5b00 <ck_hash_table_grow+0x9c>
    5ad0:	ldr	r4, [r7, #128]	; 0x80
    5ad4:	mov	r0, r7
    5ad8:	bl	4b58 <strlen@plt>
    5adc:	mov	r1, r0
    5ae0:	cmp	r0, #127	; 0x7f
    5ae4:	mov	r0, r7
    5ae8:	mov	r2, r4
    5aec:	mov	r3, r5
    5af0:	movcs	r1, #127	; 0x7f
    5af4:	bl	4bf4 <ck_str_n_hash_insert@plt>
    5af8:	cmp	r0, #0
    5afc:	beq	5b24 <ck_hash_table_grow+0xc0>
    5b00:	subs	r1, r8, r6
    5b04:	add	r0, r8, #1
    5b08:	add	r7, r7, #132	; 0x84
    5b0c:	rscs	r1, sl, #0
    5b10:	mov	r8, r0
    5b14:	bcc	5ac4 <ck_hash_table_grow+0x60>
    5b18:	ldr	r0, [sp]
    5b1c:	bl	4864 <free@plt>
    5b20:	b	5b28 <ck_hash_table_grow+0xc4>
    5b24:	mvn	r9, #0
    5b28:	mov	r0, r9
    5b2c:	sub	sp, fp, #28
    5b30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005b34 <ck_hash_table_init>:
    5b34:	push	{r4, r5, r6, r7, fp, lr}
    5b38:	add	fp, sp, #16
    5b3c:	mov	r6, r0
    5b40:	mov	r0, #24
    5b44:	bl	4a74 <malloc@plt>
    5b48:	mov	r5, #0
    5b4c:	cmp	r0, #0
    5b50:	beq	5b9c <ck_hash_table_init+0x68>
    5b54:	mov	r4, r0
    5b58:	add	r0, r6, r6, lsl #5
    5b5c:	lsl	r7, r0, #3
    5b60:	mov	r0, r7
    5b64:	bl	4a74 <malloc@plt>
    5b68:	cmp	r0, #0
    5b6c:	str	r0, [r4, #16]
    5b70:	beq	5ba4 <ck_hash_table_init+0x70>
    5b74:	mov	r1, #0
    5b78:	lsl	r2, r6, #1
    5b7c:	str	r2, [r4]
    5b80:	str	r1, [r4, #4]
    5b84:	str	r1, [r4, #8]
    5b88:	str	r1, [r4, #12]
    5b8c:	mov	r1, #0
    5b90:	mov	r2, r7
    5b94:	bl	4c00 <memset@plt>
    5b98:	mov	r5, r4
    5b9c:	mov	r0, r5
    5ba0:	pop	{r4, r5, r6, r7, fp, pc}
    5ba4:	mov	r0, r4
    5ba8:	bl	4864 <free@plt>
    5bac:	mov	r0, r5
    5bb0:	pop	{r4, r5, r6, r7, fp, pc}

00005bb4 <ck_hash_table_wipe>:
    5bb4:	ldr	r1, [r0]
    5bb8:	ldr	r0, [r0, #16]
    5bbc:	add	r1, r1, r1, lsl #5
    5bc0:	lsl	r2, r1, #2
    5bc4:	mov	r1, #0
    5bc8:	b	4c00 <memset@plt>

00005bcc <ck_hash_table_free>:
    5bcc:	push	{r4, sl, fp, lr}
    5bd0:	add	fp, sp, #8
    5bd4:	mov	r4, r0
    5bd8:	ldr	r0, [r0, #16]
    5bdc:	bl	4864 <free@plt>
    5be0:	mov	r0, r4
    5be4:	pop	{r4, sl, fp, lr}
    5be8:	b	4864 <free@plt>

00005bec <machine_is_little_endian>:
    5bec:	mov	r0, #1
    5bf0:	bx	lr

00005bf4 <ones_to_twos_complement1>:
    5bf4:	bx	lr

00005bf8 <ones_to_twos_complement2>:
    5bf8:	and	r1, r0, #32768	; 0x8000
    5bfc:	add	r0, r0, r1, lsr #15
    5c00:	sxth	r0, r0
    5c04:	bx	lr

00005c08 <ones_to_twos_complement4>:
    5c08:	add	r0, r0, r0, lsr #31
    5c0c:	bx	lr

00005c10 <twos_to_ones_complement1>:
    5c10:	bx	lr

00005c14 <twos_to_ones_complement2>:
    5c14:	add	r0, r0, r0, lsr #15
    5c18:	sxth	r0, r0
    5c1c:	bx	lr

00005c20 <twos_to_ones_complement4>:
    5c20:	add	r0, r0, r0, asr #31
    5c24:	bx	lr

00005c28 <byteswap2>:
    5c28:	rev16	r0, r0
    5c2c:	bx	lr

00005c30 <byteswap4>:
    5c30:	rev	r0, r0
    5c34:	bx	lr

00005c38 <byteswap8>:
    5c38:	rev	r2, r1
    5c3c:	rev	r1, r0
    5c40:	mov	r0, r2
    5c44:	bx	lr

00005c48 <byteswap_float>:
    5c48:	vmov	r0, s0
    5c4c:	rev	r0, r0
    5c50:	vmov	s0, r0
    5c54:	bx	lr

00005c58 <byteswap_double>:
    5c58:	vmov	r0, r1, d0
    5c5c:	rev	r0, r0
    5c60:	rev	r1, r1
    5c64:	vmov	d0, r1, r0
    5c68:	bx	lr

00005c6c <readstat_convert>:
    5c6c:	push	{r4, r5, r6, sl, fp, lr}
    5c70:	add	fp, sp, #16
    5c74:	sub	sp, sp, #24
    5c78:	ldr	ip, [fp, #8]
    5c7c:	mov	r4, r0
    5c80:	mov	r5, r1
    5c84:	sub	r0, r2, #1
    5c88:	str	r2, [sp, #20]
    5c8c:	mov	r6, r3
    5c90:	cmp	r3, #0
    5c94:	beq	5ca8 <readstat_convert+0x3c>
    5c98:	ldrb	r1, [r0, r6]
    5c9c:	sub	r3, r6, #1
    5ca0:	cmp	r1, #32
    5ca4:	beq	5c8c <readstat_convert+0x20>
    5ca8:	mov	r0, #19
    5cac:	cmp	r5, #0
    5cb0:	str	r6, [sp, #16]
    5cb4:	beq	5d30 <readstat_convert+0xc4>
    5cb8:	cmp	ip, #0
    5cbc:	beq	5d0c <readstat_convert+0xa0>
    5cc0:	sub	r0, r5, #1
    5cc4:	add	r1, sp, #20
    5cc8:	add	r2, sp, #16
    5ccc:	add	r3, sp, #8
    5cd0:	str	r4, [sp, #8]
    5cd4:	str	r0, [sp, #12]
    5cd8:	add	r0, sp, #12
    5cdc:	str	r0, [sp]
    5ce0:	mov	r0, ip
    5ce4:	bl	47a4 <iconv@plt>
    5ce8:	cmn	r0, #1
    5cec:	beq	5d38 <readstat_convert+0xcc>
    5cf0:	ldr	r0, [sp, #12]
    5cf4:	mvn	r0, r0
    5cf8:	add	r1, r0, r5
    5cfc:	mov	r0, #0
    5d00:	strb	r0, [r4, r1]
    5d04:	sub	sp, fp, #16
    5d08:	pop	{r4, r5, r6, sl, fp, pc}
    5d0c:	add	r1, r6, #1
    5d10:	cmp	r1, r5
    5d14:	bhi	5d30 <readstat_convert+0xc4>
    5d18:	mov	r1, r2
    5d1c:	mov	r0, r4
    5d20:	mov	r2, r6
    5d24:	bl	48b8 <memcpy@plt>
    5d28:	mov	r0, #0
    5d2c:	strb	r0, [r4, r6]
    5d30:	sub	sp, fp, #16
    5d34:	pop	{r4, r5, r6, sl, fp, pc}
    5d38:	bl	4bc4 <__errno_location@plt>
    5d3c:	ldr	r0, [r0]
    5d40:	cmp	r0, #7
    5d44:	beq	5d64 <readstat_convert+0xf8>
    5d48:	cmp	r0, #22
    5d4c:	beq	5cf0 <readstat_convert+0x84>
    5d50:	cmp	r0, #84	; 0x54
    5d54:	moveq	r0, #17
    5d58:	movne	r0, #16
    5d5c:	sub	sp, fp, #16
    5d60:	pop	{r4, r5, r6, sl, fp, pc}
    5d64:	mov	r0, #19
    5d68:	sub	sp, fp, #16
    5d6c:	pop	{r4, r5, r6, sl, fp, pc}

00005d70 <readstat_error_message>:
    5d70:	cmp	r0, #39	; 0x27
    5d74:	ldrhi	r0, [pc, #24]	; 5d94 <readstat_error_message+0x24>
    5d78:	addhi	r0, pc, r0
    5d7c:	bxhi	lr
    5d80:	ldr	r1, [pc, #8]	; 5d90 <readstat_error_message+0x20>
    5d84:	add	r1, pc, r1
    5d88:	ldr	r0, [r1, r0, lsl #2]
    5d8c:	bx	lr
    5d90:	.word	0x000430d4
    5d94:	.word	0x00023520

00005d98 <unistd_open_handler>:
    5d98:	push	{r4, sl, fp, lr}
    5d9c:	add	fp, sp, #8
    5da0:	mov	r4, r1
    5da4:	mov	r1, #0
    5da8:	bl	4b10 <open@plt>
    5dac:	str	r0, [r4]
    5db0:	pop	{r4, sl, fp, pc}

00005db4 <unistd_close_handler>:
    5db4:	ldr	r0, [r0]
    5db8:	cmn	r0, #1
    5dbc:	moveq	r0, #0
    5dc0:	bxeq	lr
    5dc4:	b	4e4c <close@plt>

00005dc8 <unistd_seek_handler>:
    5dc8:	cmp	r1, #2
    5dcc:	mov	r3, r1
    5dd0:	mvnhi	r0, #0
    5dd4:	bxhi	lr
    5dd8:	mov	r1, r0
    5ddc:	ldr	r0, [r2]
    5de0:	mov	r2, r3
    5de4:	b	4900 <lseek@plt>

00005de8 <unistd_read_handler>:
    5de8:	mov	r3, r1
    5dec:	mov	r1, r0
    5df0:	ldr	r0, [r2]
    5df4:	mov	r2, r3
    5df8:	b	47e0 <read@plt>

00005dfc <unistd_update_handler>:
    5dfc:	push	{r4, r5, r6, sl, fp, lr}
    5e00:	add	fp, sp, #16
    5e04:	cmp	r1, #0
    5e08:	moveq	r0, #0
    5e0c:	popeq	{r4, r5, r6, sl, fp, pc}
    5e10:	mov	r6, r0
    5e14:	ldr	r0, [r3]
    5e18:	mov	r5, r2
    5e1c:	mov	r4, r1
    5e20:	mov	r1, #0
    5e24:	mov	r2, #1
    5e28:	bl	4900 <lseek@plt>
    5e2c:	cmn	r0, #1
    5e30:	moveq	r0, #15
    5e34:	popeq	{r4, r5, r6, sl, fp, pc}
    5e38:	vmov	s0, r6
    5e3c:	vmov	s2, r0
    5e40:	mov	r0, r5
    5e44:	vcvt.f64.s32	d16, s0
    5e48:	vcvt.f64.s32	d17, s2
    5e4c:	vdiv.f64	d0, d17, d16
    5e50:	blx	r4
    5e54:	cmp	r0, #0
    5e58:	movwne	r0, #4
    5e5c:	pop	{r4, r5, r6, sl, fp, pc}

00005e60 <unistd_io_init>:
    5e60:	push	{r4, r5, fp, lr}
    5e64:	add	fp, sp, #8
    5e68:	ldr	r1, [pc, #168]	; 5f18 <unistd_io_init+0xb8>
    5e6c:	mov	r4, r0
    5e70:	ldr	r1, [pc, r1]
    5e74:	bl	4744 <readstat_set_open_handler@plt>
    5e78:	cmp	r0, #0
    5e7c:	bne	5f14 <unistd_io_init+0xb4>
    5e80:	ldr	r1, [pc, #148]	; 5f1c <unistd_io_init+0xbc>
    5e84:	mov	r0, r4
    5e88:	ldr	r1, [pc, r1]
    5e8c:	bl	4db0 <readstat_set_close_handler@plt>
    5e90:	cmp	r0, #0
    5e94:	bne	5f14 <unistd_io_init+0xb4>
    5e98:	ldr	r1, [pc, #128]	; 5f20 <unistd_io_init+0xc0>
    5e9c:	mov	r0, r4
    5ea0:	ldr	r1, [pc, r1]
    5ea4:	bl	4738 <readstat_set_seek_handler@plt>
    5ea8:	cmp	r0, #0
    5eac:	bne	5f14 <unistd_io_init+0xb4>
    5eb0:	ldr	r1, [pc, #108]	; 5f24 <unistd_io_init+0xc4>
    5eb4:	mov	r0, r4
    5eb8:	ldr	r1, [pc, r1]
    5ebc:	bl	4c9c <readstat_set_read_handler@plt>
    5ec0:	cmp	r0, #0
    5ec4:	bne	5f14 <unistd_io_init+0xb4>
    5ec8:	ldr	r1, [pc, #88]	; 5f28 <unistd_io_init+0xc8>
    5ecc:	mov	r0, r4
    5ed0:	ldr	r1, [pc, r1]
    5ed4:	bl	4834 <readstat_set_update_handler@plt>
    5ed8:	mov	r1, r0
    5edc:	mov	r0, #0
    5ee0:	cmp	r1, #0
    5ee4:	popne	{r4, r5, fp, pc}
    5ee8:	mov	r0, #1
    5eec:	mov	r1, #4
    5ef0:	mov	r5, #1
    5ef4:	bl	472c <calloc@plt>
    5ef8:	mov	r1, r0
    5efc:	mvn	r0, #0
    5f00:	str	r0, [r1]
    5f04:	mov	r0, r4
    5f08:	bl	4a5c <readstat_set_io_ctx@plt>
    5f0c:	ldr	r1, [r4, #32]
    5f10:	str	r5, [r1, #24]
    5f14:	pop	{r4, r5, fp, pc}
    5f18:	.word	0x00043430
    5f1c:	.word	0x00043444
    5f20:	.word	0x00043428
    5f24:	.word	0x000433cc
    5f28:	.word	0x000433ec

00005f2c <readstat_malloc>:
    5f2c:	movw	r2, #61439	; 0xefff
    5f30:	sub	r1, r0, #1
    5f34:	movt	r2, #255	; 0xff
    5f38:	cmp	r1, r2
    5f3c:	movhi	r0, #0
    5f40:	bxhi	lr
    5f44:	b	4a74 <malloc@plt>

00005f48 <readstat_calloc>:
    5f48:	movw	r2, #61440	; 0xf000
    5f4c:	movt	r2, #255	; 0xff
    5f50:	cmp	r0, r2
    5f54:	bhi	5f68 <readstat_calloc+0x20>
    5f58:	cmp	r1, r2
    5f5c:	mulls	r3, r1, r0
    5f60:	cmpls	r3, r2
    5f64:	bls	5f70 <readstat_calloc+0x28>
    5f68:	mov	r0, #0
    5f6c:	bx	lr
    5f70:	cmp	r0, #0
    5f74:	cmpne	r1, #0
    5f78:	beq	5f68 <readstat_calloc+0x20>
    5f7c:	b	472c <calloc@plt>

00005f80 <readstat_realloc>:
    5f80:	movw	r3, #61440	; 0xf000
    5f84:	sub	r2, r1, #1
    5f88:	movt	r3, #255	; 0xff
    5f8c:	cmp	r2, r3
    5f90:	bcc	5fb4 <readstat_realloc+0x34>
    5f94:	cmp	r0, #0
    5f98:	beq	5fac <readstat_realloc+0x2c>
    5f9c:	push	{fp, lr}
    5fa0:	mov	fp, sp
    5fa4:	bl	4864 <free@plt>
    5fa8:	pop	{fp, lr}
    5fac:	mov	r0, #0
    5fb0:	bx	lr
    5fb4:	b	4984 <realloc@plt>

00005fb8 <readstat_get_row_count>:
    5fb8:	ldr	r0, [r0]
    5fbc:	bx	lr

00005fc0 <readstat_get_var_count>:
    5fc0:	ldr	r0, [r0, #8]
    5fc4:	bx	lr

00005fc8 <readstat_get_creation_time>:
    5fc8:	ldr	r0, [r0, #16]
    5fcc:	bx	lr

00005fd0 <readstat_get_modified_time>:
    5fd0:	ldr	r0, [r0, #20]
    5fd4:	bx	lr

00005fd8 <readstat_get_file_format_version>:
    5fd8:	ldr	r0, [r0, #24]
    5fdc:	bx	lr

00005fe0 <readstat_get_file_format_is_64bit>:
    5fe0:	ldrb	r0, [r0, #52]	; 0x34
    5fe4:	and	r0, r0, #1
    5fe8:	bx	lr

00005fec <readstat_get_compression>:
    5fec:	ldr	r0, [r0, #32]
    5ff0:	bx	lr

00005ff4 <readstat_get_endianness>:
    5ff4:	ldr	r0, [r0, #36]	; 0x24
    5ff8:	bx	lr

00005ffc <readstat_get_file_label>:
    5ffc:	ldr	r0, [r0, #44]	; 0x2c
    6000:	bx	lr

00006004 <readstat_get_file_encoding>:
    6004:	ldr	r0, [r0, #48]	; 0x30
    6008:	bx	lr

0000600c <readstat_get_table_name>:
    600c:	ldr	r0, [r0, #40]	; 0x28
    6010:	bx	lr

00006014 <readstat_parser_init>:
    6014:	push	{r4, r5, fp, lr}
    6018:	add	fp, sp, #8
    601c:	mov	r0, #1
    6020:	mov	r1, #52	; 0x34
    6024:	bl	472c <calloc@plt>
    6028:	mov	r4, r0
    602c:	mov	r0, #1
    6030:	mov	r1, #28
    6034:	bl	472c <calloc@plt>
    6038:	str	r0, [r4, #32]
    603c:	mov	r0, r4
    6040:	bl	490c <unistd_io_init@plt>
    6044:	cmp	r0, #0
    6048:	beq	609c <readstat_parser_init+0x88>
    604c:	mov	r5, #0
    6050:	cmp	r4, #0
    6054:	beq	60ac <readstat_parser_init+0x98>
    6058:	ldr	r0, [r4, #32]
    605c:	cmp	r0, #0
    6060:	beq	608c <readstat_parser_init+0x78>
    6064:	ldr	r1, [r0, #24]
    6068:	cmp	r1, #0
    606c:	beq	607c <readstat_parser_init+0x68>
    6070:	ldr	r0, [r0, #20]
    6074:	bl	4864 <free@plt>
    6078:	ldr	r0, [r4, #32]
    607c:	mov	r1, #0
    6080:	str	r1, [r0, #20]
    6084:	str	r1, [r0, #24]
    6088:	bl	4864 <free@plt>
    608c:	mov	r0, r4
    6090:	bl	4864 <free@plt>
    6094:	mov	r0, r5
    6098:	pop	{r4, r5, fp, pc}
    609c:	ldr	r0, [pc, #16]	; 60b4 <readstat_parser_init+0xa0>
    60a0:	mov	r5, r4
    60a4:	add	r0, pc, r0
    60a8:	str	r0, [r4, #40]	; 0x28
    60ac:	mov	r0, r5
    60b0:	pop	{r4, r5, fp, pc}
    60b4:	.word	0x00023202

000060b8 <readstat_parser_free>:
    60b8:	cmp	r0, #0
    60bc:	bxeq	lr
    60c0:	push	{r4, sl, fp, lr}
    60c4:	add	fp, sp, #8
    60c8:	mov	r4, r0
    60cc:	ldr	r0, [r0, #32]
    60d0:	cmp	r0, #0
    60d4:	beq	6100 <readstat_parser_free+0x48>
    60d8:	ldr	r1, [r0, #24]
    60dc:	cmp	r1, #0
    60e0:	beq	60f0 <readstat_parser_free+0x38>
    60e4:	ldr	r0, [r0, #20]
    60e8:	bl	4864 <free@plt>
    60ec:	ldr	r0, [r4, #32]
    60f0:	mov	r1, #0
    60f4:	str	r1, [r0, #20]
    60f8:	str	r1, [r0, #24]
    60fc:	bl	4864 <free@plt>
    6100:	mov	r0, r4
    6104:	pop	{r4, sl, fp, lr}
    6108:	b	4864 <free@plt>

0000610c <readstat_set_io_ctx>:
    610c:	push	{r4, r5, fp, lr}
    6110:	add	fp, sp, #8
    6114:	mov	r5, r0
    6118:	ldr	r0, [r0, #32]
    611c:	mov	r4, r1
    6120:	ldr	r1, [r0, #24]
    6124:	cmp	r1, #0
    6128:	beq	6138 <readstat_set_io_ctx+0x2c>
    612c:	ldr	r0, [r0, #20]
    6130:	bl	4864 <free@plt>
    6134:	ldr	r0, [r5, #32]
    6138:	mov	r1, #0
    613c:	str	r4, [r0, #20]
    6140:	str	r1, [r0, #24]
    6144:	mov	r0, #0
    6148:	pop	{r4, r5, fp, pc}

0000614c <readstat_set_metadata_handler>:
    614c:	str	r1, [r0]
    6150:	mov	r0, #0
    6154:	bx	lr

00006158 <readstat_set_note_handler>:
    6158:	str	r1, [r0, #4]
    615c:	mov	r0, #0
    6160:	bx	lr

00006164 <readstat_set_variable_handler>:
    6164:	str	r1, [r0, #8]
    6168:	mov	r0, #0
    616c:	bx	lr

00006170 <readstat_set_value_handler>:
    6170:	str	r1, [r0, #16]
    6174:	mov	r0, #0
    6178:	bx	lr

0000617c <readstat_set_value_label_handler>:
    617c:	str	r1, [r0, #20]
    6180:	mov	r0, #0
    6184:	bx	lr

00006188 <readstat_set_error_handler>:
    6188:	str	r1, [r0, #24]
    618c:	mov	r0, #0
    6190:	bx	lr

00006194 <readstat_set_progress_handler>:
    6194:	str	r1, [r0, #28]
    6198:	mov	r0, #0
    619c:	bx	lr

000061a0 <readstat_set_fweight_handler>:
    61a0:	str	r1, [r0, #12]
    61a4:	mov	r0, #0
    61a8:	bx	lr

000061ac <readstat_set_open_handler>:
    61ac:	ldr	r0, [r0, #32]
    61b0:	str	r1, [r0]
    61b4:	mov	r0, #0
    61b8:	bx	lr

000061bc <readstat_set_close_handler>:
    61bc:	ldr	r0, [r0, #32]
    61c0:	str	r1, [r0, #4]
    61c4:	mov	r0, #0
    61c8:	bx	lr

000061cc <readstat_set_seek_handler>:
    61cc:	ldr	r0, [r0, #32]
    61d0:	str	r1, [r0, #8]
    61d4:	mov	r0, #0
    61d8:	bx	lr

000061dc <readstat_set_read_handler>:
    61dc:	ldr	r0, [r0, #32]
    61e0:	str	r1, [r0, #12]
    61e4:	mov	r0, #0
    61e8:	bx	lr

000061ec <readstat_set_update_handler>:
    61ec:	ldr	r0, [r0, #32]
    61f0:	str	r1, [r0, #16]
    61f4:	mov	r0, #0
    61f8:	bx	lr

000061fc <readstat_set_file_character_encoding>:
    61fc:	str	r1, [r0, #36]	; 0x24
    6200:	mov	r0, #0
    6204:	bx	lr

00006208 <readstat_set_handler_character_encoding>:
    6208:	str	r1, [r0, #40]	; 0x28
    620c:	mov	r0, #0
    6210:	bx	lr

00006214 <readstat_set_row_limit>:
    6214:	str	r1, [r0, #44]	; 0x2c
    6218:	mov	r0, #0
    621c:	bx	lr

00006220 <readstat_set_row_offset>:
    6220:	str	r1, [r0, #48]	; 0x30
    6224:	mov	r0, #0
    6228:	bx	lr
    622c:	andeq	r0, r0, r0

00006230 <readstat_type_class>:
    6230:	mov	r1, r0
    6234:	mov	r0, #0
    6238:	cmp	r1, #0
    623c:	cmpne	r1, #6
    6240:	movne	r0, #1
    6244:	bx	lr

00006248 <readstat_value_type>:
    6248:	mov	r0, r2
    624c:	bx	lr

00006250 <readstat_value_type_class>:
    6250:	cmp	r2, #0
    6254:	mov	r0, #0
    6258:	cmpne	r2, #6
    625c:	movne	r0, #1
    6260:	bx	lr

00006264 <readstat_value_tag>:
    6264:	uxtb	r0, r3
    6268:	bx	lr

0000626c <readstat_value_is_missing>:
    626c:	mov	ip, #1
    6270:	tst	r3, #768	; 0x300
    6274:	beq	6280 <readstat_value_is_missing+0x14>
    6278:	mov	r0, ip
    627c:	bx	lr
    6280:	ldr	ip, [sp]
    6284:	cmp	ip, #0
    6288:	beq	6290 <readstat_value_is_missing+0x24>
    628c:	b	62a0 <readstat_value_is_defined_missing>
    6290:	mov	ip, #0
    6294:	mov	r0, ip
    6298:	bx	lr
    629c:	nop	{0}

000062a0 <readstat_value_is_defined_missing>:
    62a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    62a4:	add	fp, sp, #28
    62a8:	sub	sp, sp, #4
    62ac:	vpush	{d8-d10}
    62b0:	sub	sp, sp, #48	; 0x30
    62b4:	ldr	sl, [fp, #8]
    62b8:	mov	r9, r3
    62bc:	mov	r7, r2
    62c0:	mov	r8, r1
    62c4:	mov	r6, #0
    62c8:	cmp	r2, #0
    62cc:	mov	r4, #0
    62d0:	str	r0, [sp, #12]
    62d4:	beq	62e4 <readstat_value_is_defined_missing+0x44>
    62d8:	cmp	r7, #6
    62dc:	mov	r4, #0
    62e0:	movne	r4, #1
    62e4:	mov	r0, sl
    62e8:	bl	4e7c <readstat_variable_get_type_class@plt>
    62ec:	cmp	r4, r0
    62f0:	bne	65a8 <readstat_value_is_defined_missing+0x308>
    62f4:	cmp	r7, #6
    62f8:	cmpne	r7, #0
    62fc:	bne	63dc <readstat_value_is_defined_missing+0x13c>
    6300:	ldr	r0, [sp, #12]
    6304:	mov	r6, #0
    6308:	cmp	r0, #0
    630c:	beq	65a8 <readstat_value_is_defined_missing+0x308>
    6310:	cmp	r7, #0
    6314:	bne	65a8 <readstat_value_is_defined_missing+0x308>
    6318:	mov	r0, sl
    631c:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
    6320:	cmp	r0, #1
    6324:	str	r0, [sp, #8]
    6328:	blt	65a8 <readstat_value_is_defined_missing+0x308>
    632c:	add	r0, sp, #16
    6330:	mov	r9, #0
    6334:	mov	r6, #0
    6338:	add	r0, r0, #8
    633c:	str	r0, [sp, #4]
    6340:	add	r0, sp, #32
    6344:	add	sl, r0, #8
    6348:	ldr	r5, [fp, #8]
    634c:	add	r0, sp, #32
    6350:	mov	r2, r6
    6354:	mov	r1, r5
    6358:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
    635c:	ldr	r7, [sl]
    6360:	ldr	r4, [sp, #32]
    6364:	add	r0, sp, #16
    6368:	mov	r1, r5
    636c:	mov	r2, r6
    6370:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
    6374:	ldr	r0, [sp, #4]
    6378:	ldr	r8, [sp, #16]
    637c:	cmp	r7, #0
    6380:	movne	r4, r9
    6384:	ldr	r0, [r0]
    6388:	cmp	r0, #0
    638c:	movne	r8, r9
    6390:	cmp	r4, #0
    6394:	cmpne	r8, #0
    6398:	bne	63b0 <readstat_value_is_defined_missing+0x110>
    639c:	ldr	r0, [sp, #8]
    63a0:	add	r6, r6, #1
    63a4:	cmp	r6, r0
    63a8:	blt	6348 <readstat_value_is_defined_missing+0xa8>
    63ac:	b	65a4 <readstat_value_is_defined_missing+0x304>
    63b0:	ldr	r0, [sp, #12]
    63b4:	mov	r1, r4
    63b8:	bl	47b0 <strcmp@plt>
    63bc:	cmp	r0, #0
    63c0:	blt	639c <readstat_value_is_defined_missing+0xfc>
    63c4:	ldr	r0, [sp, #12]
    63c8:	mov	r1, r8
    63cc:	bl	47b0 <strcmp@plt>
    63d0:	cmp	r0, #1
    63d4:	bge	639c <readstat_value_is_defined_missing+0xfc>
    63d8:	b	65bc <readstat_value_is_defined_missing+0x31c>
    63dc:	vldr	d8, [pc, #484]	; 65c8 <readstat_value_is_defined_missing+0x328>
    63e0:	tst	r9, #256	; 0x100
    63e4:	bne	6454 <readstat_value_is_defined_missing+0x1b4>
    63e8:	sub	r0, r7, #1
    63ec:	cmp	r0, #4
    63f0:	bhi	6454 <readstat_value_is_defined_missing+0x1b4>
    63f4:	add	r1, pc, #4
    63f8:	ldr	r0, [r1, r0, lsl #2]
    63fc:	add	pc, r1, r0
    6400:	.word	0x00000014
    6404:	.word	0x00000020
    6408:	.word	0x0000002c
    640c:	.word	0x0000003c
    6410:	.word	0x0000004c
    6414:	ldr	r0, [sp, #12]
    6418:	sxtb	r0, r0
    641c:	b	6430 <readstat_value_is_defined_missing+0x190>
    6420:	ldr	r0, [sp, #12]
    6424:	sxth	r0, r0
    6428:	b	6430 <readstat_value_is_defined_missing+0x190>
    642c:	ldr	r0, [sp, #12]
    6430:	vmov	s0, r0
    6434:	vcvt.f64.s32	d8, s0
    6438:	b	6454 <readstat_value_is_defined_missing+0x1b4>
    643c:	ldr	r0, [sp, #12]
    6440:	vmov	s0, r0
    6444:	vcvt.f64.f32	d8, s0
    6448:	b	6454 <readstat_value_is_defined_missing+0x1b4>
    644c:	ldr	r0, [sp, #12]
    6450:	vmov	d8, r0, r8
    6454:	mov	r0, sl
    6458:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
    645c:	cmp	r0, #1
    6460:	blt	65a4 <readstat_value_is_defined_missing+0x304>
    6464:	vldr	d9, [pc, #348]	; 65c8 <readstat_value_is_defined_missing+0x328>
    6468:	add	r8, sp, #16
    646c:	add	r9, sp, #32
    6470:	mov	r5, r0
    6474:	mov	r6, #0
    6478:	add	r4, r8, #8
    647c:	add	r7, r9, #8
    6480:	mov	r0, r9
    6484:	mov	r1, sl
    6488:	mov	r2, r6
    648c:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
    6490:	ldr	r0, [r7, #4]
    6494:	vorr	d10, d9, d9
    6498:	tst	r0, #256	; 0x100
    649c:	bne	6504 <readstat_value_is_defined_missing+0x264>
    64a0:	ldr	r0, [r7]
    64a4:	vorr	d10, d9, d9
    64a8:	sub	r1, r0, #1
    64ac:	cmp	r1, #4
    64b0:	bhi	6504 <readstat_value_is_defined_missing+0x264>
    64b4:	ldr	r0, [sp, #32]
    64b8:	add	r2, pc, #4
    64bc:	ldr	r1, [r2, r1, lsl #2]
    64c0:	add	pc, r2, r1
    64c4:	.word	0x00000014
    64c8:	.word	0x0000001c
    64cc:	.word	0x00000020
    64d0:	.word	0x0000002c
    64d4:	.word	0x00000038
    64d8:	sxtb	r0, r0
    64dc:	b	64e4 <readstat_value_is_defined_missing+0x244>
    64e0:	sxth	r0, r0
    64e4:	vmov	s0, r0
    64e8:	vcvt.f64.s32	d10, s0
    64ec:	b	6504 <readstat_value_is_defined_missing+0x264>
    64f0:	vmov	s0, r0
    64f4:	vcvt.f64.f32	d10, s0
    64f8:	b	6504 <readstat_value_is_defined_missing+0x264>
    64fc:	ldr	r1, [sp, #36]	; 0x24
    6500:	vmov	d10, r0, r1
    6504:	mov	r0, r8
    6508:	mov	r1, sl
    650c:	mov	r2, r6
    6510:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
    6514:	ldr	r0, [r4, #4]
    6518:	tst	r0, #256	; 0x100
    651c:	bne	6598 <readstat_value_is_defined_missing+0x2f8>
    6520:	ldr	r0, [r4]
    6524:	sub	r1, r0, #1
    6528:	cmp	r1, #4
    652c:	bhi	6598 <readstat_value_is_defined_missing+0x2f8>
    6530:	ldr	r0, [sp, #16]
    6534:	add	r2, pc, #4
    6538:	ldr	r1, [r2, r1, lsl #2]
    653c:	add	pc, r2, r1
    6540:	.word	0x00000014
    6544:	.word	0x0000001c
    6548:	.word	0x00000020
    654c:	.word	0x0000002c
    6550:	.word	0x00000038
    6554:	sxtb	r0, r0
    6558:	b	6560 <readstat_value_is_defined_missing+0x2c0>
    655c:	sxth	r0, r0
    6560:	vmov	s0, r0
    6564:	vcvt.f64.s32	d16, s0
    6568:	b	6580 <readstat_value_is_defined_missing+0x2e0>
    656c:	vmov	s0, r0
    6570:	vcvt.f64.f32	d16, s0
    6574:	b	6580 <readstat_value_is_defined_missing+0x2e0>
    6578:	ldr	r1, [sp, #20]
    657c:	vmov	d16, r0, r1
    6580:	vcmpe.f64	d10, d8
    6584:	vmrs	APSR_nzcv, fpscr
    6588:	bhi	6598 <readstat_value_is_defined_missing+0x2f8>
    658c:	vcmpe.f64	d16, d8
    6590:	vmrs	APSR_nzcv, fpscr
    6594:	bge	65bc <readstat_value_is_defined_missing+0x31c>
    6598:	add	r6, r6, #1
    659c:	cmp	r6, r5
    65a0:	blt	6480 <readstat_value_is_defined_missing+0x1e0>
    65a4:	mov	r6, #0
    65a8:	mov	r0, r6
    65ac:	sub	sp, fp, #56	; 0x38
    65b0:	vpop	{d8-d10}
    65b4:	add	sp, sp, #4
    65b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    65bc:	mov	r6, #1
    65c0:	b	65a8 <readstat_value_is_defined_missing+0x308>
    65c4:	nop	{0}
    65c8:	.word	0x00000000
    65cc:	.word	0x7ff80000

000065d0 <readstat_value_is_system_missing>:
    65d0:	ubfx	r0, r3, #8, #1
    65d4:	bx	lr

000065d8 <readstat_value_is_tagged_missing>:
    65d8:	ubfx	r0, r3, #9, #1
    65dc:	bx	lr

000065e0 <readstat_string_value>:
    65e0:	cmp	r2, #0
    65e4:	movne	r0, #0
    65e8:	bx	lr
    65ec:	nop	{0}

000065f0 <readstat_double_value>:
    65f0:	vldr	d0, [pc, #96]	; 6658 <readstat_double_value+0x68>
    65f4:	tst	r3, #256	; 0x100
    65f8:	bne	663c <readstat_double_value+0x4c>
    65fc:	sub	r2, r2, #1
    6600:	cmp	r2, #4
    6604:	bxhi	lr
    6608:	add	r3, pc, #4
    660c:	ldr	r2, [r3, r2, lsl #2]
    6610:	add	pc, r3, r2
    6614:	.word	0x00000014
    6618:	.word	0x0000001c
    661c:	.word	0x00000020
    6620:	.word	0x0000002c
    6624:	.word	0x00000038
    6628:	sxtb	r0, r0
    662c:	b	6634 <readstat_double_value+0x44>
    6630:	sxth	r0, r0
    6634:	vmov	s0, r0
    6638:	vcvt.f64.s32	d0, s0
    663c:	bx	lr
    6640:	vmov	s0, r0
    6644:	vcvt.f64.f32	d0, s0
    6648:	bx	lr
    664c:	vmov	d0, r0, r1
    6650:	bx	lr
    6654:	nop	{0}
    6658:	.word	0x00000000
    665c:	.word	0x7ff80000

00006660 <readstat_int8_value>:
    6660:	tst	r3, #256	; 0x100
    6664:	bne	6690 <readstat_int8_value+0x30>
    6668:	sub	r3, r2, #1
    666c:	cmp	r3, #3
    6670:	bcc	6694 <readstat_int8_value+0x34>
    6674:	cmp	r2, #4
    6678:	beq	669c <readstat_int8_value+0x3c>
    667c:	cmp	r2, #5
    6680:	bne	6690 <readstat_int8_value+0x30>
    6684:	vmov	d16, r0, r1
    6688:	vcvt.u32.f64	s0, d16
    668c:	b	66a4 <readstat_int8_value+0x44>
    6690:	mov	r0, #0
    6694:	uxtb	r0, r0
    6698:	bx	lr
    669c:	vmov	s0, r0
    66a0:	vcvt.u32.f32	s0, s0
    66a4:	vmov	r0, s0
    66a8:	uxtb	r0, r0
    66ac:	bx	lr

000066b0 <readstat_int16_value>:
    66b0:	tst	r3, #256	; 0x100
    66b4:	bne	66ec <readstat_int16_value+0x3c>
    66b8:	sub	r2, r2, #1
    66bc:	cmp	r2, #4
    66c0:	bhi	66ec <readstat_int16_value+0x3c>
    66c4:	add	r3, pc, #4
    66c8:	ldr	r2, [r3, r2, lsl #2]
    66cc:	add	pc, r3, r2
    66d0:	.word	0x00000028
    66d4:	.word	0x00000014
    66d8:	.word	0x00000014
    66dc:	.word	0x00000034
    66e0:	.word	0x00000040
    66e4:	sxth	r0, r0
    66e8:	bx	lr
    66ec:	mov	r0, #0
    66f0:	sxth	r0, r0
    66f4:	bx	lr
    66f8:	sxtb	r0, r0
    66fc:	sxth	r0, r0
    6700:	bx	lr
    6704:	vmov	s0, r0
    6708:	vcvt.s32.f32	s0, s0
    670c:	b	6718 <readstat_int16_value+0x68>
    6710:	vmov	d16, r0, r1
    6714:	vcvt.s32.f64	s0, d16
    6718:	vmov	r0, s0
    671c:	sxth	r0, r0
    6720:	bx	lr

00006724 <readstat_int32_value>:
    6724:	tst	r3, #256	; 0x100
    6728:	bne	6760 <readstat_int32_value+0x3c>
    672c:	sub	r2, r2, #1
    6730:	cmp	r2, #4
    6734:	bhi	6760 <readstat_int32_value+0x3c>
    6738:	add	r3, pc, #4
    673c:	ldr	r2, [r3, r2, lsl #2]
    6740:	add	pc, r3, r2
    6744:	.word	0x00000014
    6748:	.word	0x00000024
    674c:	.word	0x00000020
    6750:	.word	0x0000002c
    6754:	.word	0x0000003c
    6758:	sxtb	r0, r0
    675c:	bx	lr
    6760:	mov	r0, #0
    6764:	bx	lr
    6768:	sxth	r0, r0
    676c:	bx	lr
    6770:	vmov	s0, r0
    6774:	vcvt.s32.f32	s0, s0
    6778:	vmov	r0, s0
    677c:	bx	lr
    6780:	vmov	d16, r0, r1
    6784:	vcvt.s32.f64	s0, d16
    6788:	vmov	r0, s0
    678c:	bx	lr

00006790 <readstat_float_value>:
    6790:	tst	r3, #256	; 0x100
    6794:	vldrne	s0, [pc, #88]	; 67f4 <readstat_float_value+0x64>
    6798:	bxne	lr
    679c:	sub	r2, r2, #1
    67a0:	cmp	r2, #4
    67a4:	bhi	67d0 <readstat_float_value+0x40>
    67a8:	add	r3, pc, #4
    67ac:	ldr	r2, [r3, r2, lsl #2]
    67b0:	add	pc, r3, r2
    67b4:	.word	0x00000014
    67b8:	.word	0x00000024
    67bc:	.word	0x00000028
    67c0:	.word	0x0000001c
    67c4:	.word	0x00000034
    67c8:	sxtb	r0, r0
    67cc:	b	67dc <readstat_float_value+0x4c>
    67d0:	vmov	s0, r0
    67d4:	bx	lr
    67d8:	sxth	r0, r0
    67dc:	vmov	s0, r0
    67e0:	vcvt.f32.s32	s0, s0
    67e4:	bx	lr
    67e8:	vmov	d16, r0, r1
    67ec:	vcvt.f32.f64	s0, d16
    67f0:	bx	lr
    67f4:	.word	0x7fc00000

000067f8 <readstat_variable_get_name>:
    67f8:	ldrb	r1, [r0, #8]!
    67fc:	cmp	r1, #0
    6800:	moveq	r0, r1
    6804:	bx	lr

00006808 <readstat_variable_get_label>:
    6808:	ldrb	r1, [r0, #564]!	; 0x234
    680c:	cmp	r1, #0
    6810:	moveq	r0, r1
    6814:	bx	lr

00006818 <readstat_variable_get_format>:
    6818:	ldrb	r1, [r0, #308]!	; 0x134
    681c:	cmp	r1, #0
    6820:	moveq	r0, r1
    6824:	bx	lr

00006828 <readstat_variable_get_type>:
    6828:	ldr	r0, [r0]
    682c:	bx	lr

00006830 <readstat_variable_get_type_class>:
    6830:	ldr	r0, [r0]
    6834:	b	47c8 <readstat_type_class@plt>

00006838 <readstat_variable_get_index>:
    6838:	ldr	r0, [r0, #4]
    683c:	bx	lr

00006840 <readstat_variable_get_index_after_skipping>:
    6840:	ldr	r0, [r0, #2148]	; 0x864
    6844:	bx	lr

00006848 <readstat_variable_get_storage_width>:
    6848:	ldr	r0, [r0, #1596]	; 0x63c
    684c:	bx	lr

00006850 <readstat_variable_get_measure>:
    6850:	ldr	r0, [r0, #2128]	; 0x850
    6854:	bx	lr

00006858 <readstat_variable_get_alignment>:
    6858:	ldr	r0, [r0, #2132]	; 0x854
    685c:	bx	lr

00006860 <readstat_variable_get_display_width>:
    6860:	ldr	r0, [r0, #2136]	; 0x858
    6864:	bx	lr

00006868 <readstat_variable_get_missing_ranges_count>:
    6868:	ldr	r0, [r0, #2120]	; 0x848
    686c:	bx	lr

00006870 <readstat_variable_get_missing_range_lo>:
    6870:	ldr	r3, [r1, #2120]	; 0x848
    6874:	cmp	r3, r2
    6878:	ble	6898 <readstat_variable_get_missing_range_lo+0x28>
    687c:	lsl	r2, r2, #1
    6880:	cmp	r2, #31
    6884:	bhi	6898 <readstat_variable_get_missing_range_lo+0x28>
    6888:	add	r1, r1, r2, lsl #4
    688c:	movw	r2, #1608	; 0x648
    6890:	add	r1, r1, r2
    6894:	b	68a0 <readstat_variable_get_missing_range_lo+0x30>
    6898:	ldr	r1, [pc, #12]	; 68ac <readstat_variable_get_missing_range_lo+0x3c>
    689c:	add	r1, pc, r1
    68a0:	vld1.64	{d16-d17}, [r1]
    68a4:	vst1.64	{d16-d17}, [r0]
    68a8:	bx	lr
    68ac:	.word	0x00022a14

000068b0 <readstat_variable_get_missing_range_hi>:
    68b0:	ldr	r3, [r1, #2120]	; 0x848
    68b4:	cmp	r3, r2
    68b8:	ble	68dc <readstat_variable_get_missing_range_hi+0x2c>
    68bc:	mov	r3, #1
    68c0:	orr	r2, r3, r2, lsl #1
    68c4:	cmp	r2, #31
    68c8:	bhi	68dc <readstat_variable_get_missing_range_hi+0x2c>
    68cc:	add	r1, r1, r2, lsl #4
    68d0:	movw	r2, #1608	; 0x648
    68d4:	add	r1, r1, r2
    68d8:	b	68e4 <readstat_variable_get_missing_range_hi+0x34>
    68dc:	ldr	r1, [pc, #12]	; 68f0 <readstat_variable_get_missing_range_hi+0x40>
    68e0:	add	r1, pc, r1
    68e4:	vld1.64	{d16-d17}, [r1]
    68e8:	vst1.64	{d16-d17}, [r0]
    68ec:	bx	lr
    68f0:	.word	0x000229d0

000068f4 <readstat_variable_add_missing_double_range>:
    68f4:	ldr	r1, [r0, #2120]	; 0x848
    68f8:	lsl	r2, r1, #1
    68fc:	mov	r1, #31
    6900:	cmp	r2, #31
    6904:	bhi	6954 <readstat_variable_add_missing_double_range+0x60>
    6908:	push	{r4, sl, fp, lr}
    690c:	add	fp, sp, #8
    6910:	movw	r1, #1608	; 0x648
    6914:	mov	r4, #5
    6918:	add	ip, r0, r1
    691c:	mov	r1, #0
    6920:	add	r3, ip, r2, lsl #4
    6924:	orr	r2, r2, #1
    6928:	add	r2, ip, r2, lsl #4
    692c:	str	r4, [r3, #8]
    6930:	str	r1, [r3, #12]
    6934:	vstr	d0, [r3]
    6938:	str	r4, [r2, #8]
    693c:	str	r1, [r2, #12]
    6940:	vstr	d1, [r2]
    6944:	ldr	r2, [r0, #2120]	; 0x848
    6948:	add	r2, r2, #1
    694c:	str	r2, [r0, #2120]	; 0x848
    6950:	pop	{r4, sl, fp, lr}
    6954:	mov	r0, r1
    6958:	bx	lr

0000695c <readstat_variable_add_missing_double_value>:
    695c:	ldr	r1, [r0, #2120]	; 0x848
    6960:	lsl	r2, r1, #1
    6964:	mov	r1, #31
    6968:	cmp	r2, #31
    696c:	bhi	69bc <readstat_variable_add_missing_double_value+0x60>
    6970:	push	{r4, sl, fp, lr}
    6974:	add	fp, sp, #8
    6978:	movw	r1, #1608	; 0x648
    697c:	mov	r4, #5
    6980:	add	ip, r0, r1
    6984:	mov	r1, #0
    6988:	add	r3, ip, r2, lsl #4
    698c:	orr	r2, r2, #1
    6990:	add	r2, ip, r2, lsl #4
    6994:	str	r4, [r3, #8]
    6998:	str	r1, [r3, #12]
    699c:	vstr	d0, [r3]
    69a0:	str	r4, [r2, #8]
    69a4:	str	r1, [r2, #12]
    69a8:	vstr	d0, [r2]
    69ac:	ldr	r2, [r0, #2120]	; 0x848
    69b0:	add	r2, r2, #1
    69b4:	str	r2, [r0, #2120]	; 0x848
    69b8:	pop	{r4, sl, fp, lr}
    69bc:	mov	r0, r1
    69c0:	bx	lr

000069c4 <readstat_variable_add_missing_string_range>:
    69c4:	ldr	r3, [r0, #2120]	; 0x848
    69c8:	lsl	ip, r3, #1
    69cc:	mov	r3, #31
    69d0:	cmp	ip, #31
    69d4:	bhi	6a28 <readstat_variable_add_missing_string_range+0x64>
    69d8:	push	{r4, sl, fp, lr}
    69dc:	add	fp, sp, #8
    69e0:	movw	r3, #1608	; 0x648
    69e4:	add	lr, r0, r3
    69e8:	mov	r3, #0
    69ec:	mov	r4, lr
    69f0:	str	r1, [r4, ip, lsl #4]!
    69f4:	mov	r1, #16
    69f8:	orr	r1, r1, ip, lsl #4
    69fc:	str	r3, [r4, #4]
    6a00:	str	r3, [r4, #8]
    6a04:	str	r3, [r4, #12]
    6a08:	str	r2, [lr, r1]!
    6a0c:	str	r3, [lr, #4]
    6a10:	str	r3, [lr, #8]
    6a14:	str	r3, [lr, #12]
    6a18:	ldr	r1, [r0, #2120]	; 0x848
    6a1c:	add	r1, r1, #1
    6a20:	str	r1, [r0, #2120]	; 0x848
    6a24:	pop	{r4, sl, fp, lr}
    6a28:	mov	r0, r3
    6a2c:	bx	lr

00006a30 <readstat_variable_add_missing_string_value>:
    6a30:	ldr	r2, [r0, #2120]	; 0x848
    6a34:	lsl	ip, r2, #1
    6a38:	mov	r2, #31
    6a3c:	cmp	ip, #31
    6a40:	bhi	6a94 <readstat_variable_add_missing_string_value+0x64>
    6a44:	push	{fp, lr}
    6a48:	mov	fp, sp
    6a4c:	movw	r2, #1608	; 0x648
    6a50:	add	lr, r0, r2
    6a54:	mov	r2, #0
    6a58:	mov	r3, lr
    6a5c:	str	r1, [r3, ip, lsl #4]!
    6a60:	str	r2, [r3, #4]
    6a64:	str	r2, [r3, #8]
    6a68:	str	r2, [r3, #12]
    6a6c:	mov	r3, #16
    6a70:	orr	r3, r3, ip, lsl #4
    6a74:	str	r1, [lr, r3]!
    6a78:	str	r2, [lr, #4]
    6a7c:	str	r2, [lr, #8]
    6a80:	str	r2, [lr, #12]
    6a84:	ldr	r1, [r0, #2120]	; 0x848
    6a88:	add	r1, r1, #1
    6a8c:	str	r1, [r0, #2120]	; 0x848
    6a90:	pop	{fp, lr}
    6a94:	mov	r0, r2
    6a98:	bx	lr

00006a9c <readstat_string_ref_init>:
    6a9c:	push	{r4, r5, r6, sl, fp, lr}
    6aa0:	add	fp, sp, #16
    6aa4:	mov	r4, r0
    6aa8:	bl	4b58 <strlen@plt>
    6aac:	mov	r5, r0
    6ab0:	add	r1, r0, #25
    6ab4:	mov	r0, #1
    6ab8:	bl	472c <calloc@plt>
    6abc:	mov	r6, r0
    6ac0:	mvn	r0, #0
    6ac4:	add	r2, r5, #1
    6ac8:	mov	r1, r4
    6acc:	str	r0, [r6]
    6ad0:	str	r0, [r6, #4]
    6ad4:	str	r0, [r6, #8]
    6ad8:	str	r0, [r6, #12]
    6adc:	add	r0, r6, #20
    6ae0:	str	r2, [r6, #16]
    6ae4:	bl	48b8 <memcpy@plt>
    6ae8:	mov	r0, r6
    6aec:	pop	{r4, r5, r6, sl, fp, pc}

00006af0 <readstat_writer_init>:
    6af0:	push	{r4, r5, r6, sl, fp, lr}
    6af4:	add	fp, sp, #16
    6af8:	mov	r0, #1
    6afc:	mov	r1, #312	; 0x138
    6b00:	mov	r5, #1
    6b04:	bl	472c <calloc@plt>
    6b08:	mov	r4, r0
    6b0c:	mov	r0, #50	; 0x32
    6b10:	mov	r1, #4
    6b14:	mov	r6, #50	; 0x32
    6b18:	bl	472c <calloc@plt>
    6b1c:	str	r0, [r4, #24]
    6b20:	mov	r0, #50	; 0x32
    6b24:	mov	r1, #4
    6b28:	str	r6, [r4, #32]
    6b2c:	bl	472c <calloc@plt>
    6b30:	str	r0, [r4, #36]	; 0x24
    6b34:	mov	r0, #50	; 0x32
    6b38:	mov	r1, #4
    6b3c:	str	r6, [r4, #44]	; 0x2c
    6b40:	bl	472c <calloc@plt>
    6b44:	str	r0, [r4, #48]	; 0x30
    6b48:	mov	r0, #100	; 0x64
    6b4c:	mov	r1, #4
    6b50:	str	r6, [r4, #56]	; 0x38
    6b54:	mov	r6, #100	; 0x64
    6b58:	bl	472c <calloc@plt>
    6b5c:	str	r0, [r4, #60]	; 0x3c
    6b60:	mov	r0, #0
    6b64:	str	r6, [r4, #68]	; 0x44
    6b68:	bl	48e8 <time@plt>
    6b6c:	str	r0, [r4, #20]
    6b70:	str	r5, [r4, #12]
    6b74:	ldr	r0, [pc, #12]	; 6b88 <readstat_writer_init+0x98>
    6b78:	add	r0, pc, r0
    6b7c:	str	r0, [r4, #280]	; 0x118
    6b80:	mov	r0, r4
    6b84:	pop	{r4, r5, r6, sl, fp, pc}
    6b88:	.word	0x0000000c

00006b8c <readstat_write_row_default_callback>:
    6b8c:	push	{r4, r5, fp, lr}
    6b90:	add	fp, sp, #8
    6b94:	mov	r5, r2
    6b98:	ldr	r3, [r0]
    6b9c:	ldr	r2, [r0, #304]	; 0x130
    6ba0:	mov	r4, r0
    6ba4:	mov	r0, r1
    6ba8:	mov	r1, r5
    6bac:	blx	r3
    6bb0:	mov	r1, r0
    6bb4:	mov	r0, #13
    6bb8:	cmp	r1, r5
    6bbc:	ldrcs	r0, [r4, #4]
    6bc0:	addcs	r0, r0, r1
    6bc4:	strcs	r0, [r4, #4]
    6bc8:	movcs	r0, #0
    6bcc:	pop	{r4, r5, fp, pc}

00006bd0 <readstat_validate_variable>:
    6bd0:	ldr	r2, [r0, #308]	; 0x134
    6bd4:	cmp	r2, #0
    6bd8:	moveq	r0, #14
    6bdc:	bxeq	lr
    6be0:	ldr	r2, [r0, #232]	; 0xe8
    6be4:	cmp	r2, #0
    6be8:	moveq	r0, #0
    6bec:	bxeq	lr
    6bf0:	mov	r0, r1
    6bf4:	bx	r2

00006bf8 <readstat_validate_metadata>:
    6bf8:	ldr	r1, [r0, #308]	; 0x134
    6bfc:	cmp	r1, #0
    6c00:	moveq	r0, #14
    6c04:	bxeq	lr
    6c08:	ldr	r1, [r0, #292]	; 0x124
    6c0c:	cmp	r1, #0
    6c10:	moveq	r0, #0
    6c14:	bxeq	lr
    6c18:	bx	r1

00006c1c <readstat_writer_free>:
    6c1c:	cmp	r0, #0
    6c20:	bxeq	lr
    6c24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    6c28:	add	fp, sp, #24
    6c2c:	ldr	r1, [r0, #288]	; 0x120
    6c30:	mov	r8, r0
    6c34:	cmp	r1, #0
    6c38:	ldrne	r0, [r8, #300]	; 0x12c
    6c3c:	cmpne	r0, #0
    6c40:	beq	6c48 <readstat_writer_free+0x2c>
    6c44:	blx	r1
    6c48:	ldr	r0, [r8, #24]
    6c4c:	cmp	r0, #0
    6c50:	beq	6c84 <readstat_writer_free+0x68>
    6c54:	ldr	r1, [r8, #28]
    6c58:	cmp	r1, #1
    6c5c:	blt	6c80 <readstat_writer_free+0x64>
    6c60:	mov	r5, #0
    6c64:	ldr	r0, [r0, r5, lsl #2]
    6c68:	bl	4864 <free@plt>
    6c6c:	ldr	r1, [r8, #28]
    6c70:	ldr	r0, [r8, #24]
    6c74:	add	r5, r5, #1
    6c78:	cmp	r5, r1
    6c7c:	blt	6c64 <readstat_writer_free+0x48>
    6c80:	bl	4864 <free@plt>
    6c84:	ldr	r0, [r8, #36]	; 0x24
    6c88:	cmp	r0, #0
    6c8c:	beq	6d1c <readstat_writer_free+0x100>
    6c90:	ldr	r1, [r8, #40]	; 0x28
    6c94:	cmp	r1, #1
    6c98:	blt	6d18 <readstat_writer_free+0xfc>
    6c9c:	mov	r6, #0
    6ca0:	ldr	r5, [r0, r6, lsl #2]
    6ca4:	ldr	r0, [r5, #264]	; 0x108
    6ca8:	cmp	r0, #1
    6cac:	blt	6cec <readstat_writer_free+0xd0>
    6cb0:	mov	r7, #0
    6cb4:	ldr	r0, [r5, #260]	; 0x104
    6cb8:	add	r4, r0, r7, lsl #5
    6cbc:	ldr	r0, [r4, #24]
    6cc0:	cmp	r0, #0
    6cc4:	beq	6ccc <readstat_writer_free+0xb0>
    6cc8:	bl	4864 <free@plt>
    6ccc:	ldr	r0, [r4, #16]
    6cd0:	cmp	r0, #0
    6cd4:	beq	6cdc <readstat_writer_free+0xc0>
    6cd8:	bl	4864 <free@plt>
    6cdc:	ldr	r0, [r5, #264]	; 0x108
    6ce0:	add	r7, r7, #1
    6ce4:	cmp	r7, r0
    6ce8:	blt	6cb4 <readstat_writer_free+0x98>
    6cec:	ldr	r0, [r5, #260]	; 0x104
    6cf0:	bl	4864 <free@plt>
    6cf4:	ldr	r0, [r5, #272]	; 0x110
    6cf8:	bl	4864 <free@plt>
    6cfc:	mov	r0, r5
    6d00:	bl	4864 <free@plt>
    6d04:	ldr	r1, [r8, #40]	; 0x28
    6d08:	ldr	r0, [r8, #36]	; 0x24
    6d0c:	add	r6, r6, #1
    6d10:	cmp	r6, r1
    6d14:	blt	6ca0 <readstat_writer_free+0x84>
    6d18:	bl	4864 <free@plt>
    6d1c:	ldr	r0, [r8, #48]	; 0x30
    6d20:	cmp	r0, #0
    6d24:	beq	6d58 <readstat_writer_free+0x13c>
    6d28:	ldr	r1, [r8, #52]	; 0x34
    6d2c:	cmp	r1, #1
    6d30:	blt	6d54 <readstat_writer_free+0x138>
    6d34:	mov	r5, #0
    6d38:	ldr	r0, [r0, r5, lsl #2]
    6d3c:	bl	4864 <free@plt>
    6d40:	ldr	r1, [r8, #52]	; 0x34
    6d44:	ldr	r0, [r8, #48]	; 0x30
    6d48:	add	r5, r5, #1
    6d4c:	cmp	r5, r1
    6d50:	blt	6d38 <readstat_writer_free+0x11c>
    6d54:	bl	4864 <free@plt>
    6d58:	ldr	r0, [r8, #60]	; 0x3c
    6d5c:	cmp	r0, #0
    6d60:	beq	6d94 <readstat_writer_free+0x178>
    6d64:	ldr	r1, [r8, #64]	; 0x40
    6d68:	cmp	r1, #1
    6d6c:	blt	6d90 <readstat_writer_free+0x174>
    6d70:	mov	r5, #0
    6d74:	ldr	r0, [r0, r5, lsl #2]
    6d78:	bl	4864 <free@plt>
    6d7c:	ldr	r1, [r8, #64]	; 0x40
    6d80:	ldr	r0, [r8, #60]	; 0x3c
    6d84:	add	r5, r5, #1
    6d88:	cmp	r5, r1
    6d8c:	blt	6d74 <readstat_writer_free+0x158>
    6d90:	bl	4864 <free@plt>
    6d94:	ldr	r0, [r8, #72]	; 0x48
    6d98:	cmp	r0, #0
    6d9c:	beq	6da4 <readstat_writer_free+0x188>
    6da0:	bl	4864 <free@plt>
    6da4:	mov	r0, r8
    6da8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    6dac:	b	4864 <free@plt>

00006db0 <readstat_set_data_writer>:
    6db0:	str	r1, [r0]
    6db4:	mov	r0, #0
    6db8:	bx	lr

00006dbc <readstat_write_bytes>:
    6dbc:	push	{r4, r5, fp, lr}
    6dc0:	add	fp, sp, #8
    6dc4:	mov	r5, r2
    6dc8:	ldr	r3, [r0]
    6dcc:	ldr	r2, [r0, #304]	; 0x130
    6dd0:	mov	r4, r0
    6dd4:	mov	r0, r1
    6dd8:	mov	r1, r5
    6ddc:	blx	r3
    6de0:	mov	r1, r0
    6de4:	mov	r0, #13
    6de8:	cmp	r1, r5
    6dec:	ldrcs	r0, [r4, #4]
    6df0:	addcs	r0, r0, r1
    6df4:	strcs	r0, [r4, #4]
    6df8:	movcs	r0, #0
    6dfc:	pop	{r4, r5, fp, pc}

00006e00 <readstat_write_bytes_as_lines>:
    6e00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6e04:	add	fp, sp, #28
    6e08:	sub	sp, sp, #12
    6e0c:	mov	r7, r0
    6e10:	ldr	r0, [fp, #8]
    6e14:	mov	r4, r3
    6e18:	mov	sl, r2
    6e1c:	str	r1, [sp, #8]
    6e20:	bl	4b58 <strlen@plt>
    6e24:	cmp	sl, #0
    6e28:	beq	6ee8 <readstat_write_bytes_as_lines+0xe8>
    6e2c:	ldr	r1, [r7, #4]
    6e30:	add	r9, r0, r4
    6e34:	mov	r5, #0
    6e38:	str	r0, [sp, #4]
    6e3c:	udiv	r2, r1, r9
    6e40:	ldr	r0, [sp, #8]
    6e44:	ldr	r3, [r7]
    6e48:	sub	r8, sl, r5
    6e4c:	mul	r2, r2, r9
    6e50:	sub	r1, r2, r1
    6e54:	ldr	r2, [r7, #304]	; 0x130
    6e58:	add	r6, r4, r1
    6e5c:	add	r0, r0, r5
    6e60:	cmp	r8, r6
    6e64:	bcs	6e84 <readstat_write_bytes_as_lines+0x84>
    6e68:	mov	r1, r8
    6e6c:	blx	r3
    6e70:	cmp	r0, r8
    6e74:	bcc	6ef4 <readstat_write_bytes_as_lines+0xf4>
    6e78:	ldr	r1, [r7, #4]
    6e7c:	mov	r5, sl
    6e80:	b	6e9c <readstat_write_bytes_as_lines+0x9c>
    6e84:	mov	r1, r6
    6e88:	blx	r3
    6e8c:	cmp	r0, r6
    6e90:	bcc	6ef4 <readstat_write_bytes_as_lines+0xf4>
    6e94:	ldr	r1, [r7, #4]
    6e98:	add	r5, r6, r5
    6e9c:	add	r1, r1, r0
    6ea0:	str	r1, [r7, #4]
    6ea4:	udiv	r0, r1, r9
    6ea8:	mls	r0, r0, r9, r1
    6eac:	cmp	r0, r4
    6eb0:	bne	6ee0 <readstat_write_bytes_as_lines+0xe0>
    6eb4:	ldr	r6, [sp, #4]
    6eb8:	ldr	r3, [r7]
    6ebc:	ldr	r2, [r7, #304]	; 0x130
    6ec0:	ldr	r0, [fp, #8]
    6ec4:	mov	r1, r6
    6ec8:	blx	r3
    6ecc:	cmp	r0, r6
    6ed0:	bcc	6ef4 <readstat_write_bytes_as_lines+0xf4>
    6ed4:	ldr	r1, [r7, #4]
    6ed8:	add	r1, r1, r0
    6edc:	str	r1, [r7, #4]
    6ee0:	cmp	r5, sl
    6ee4:	bcc	6e3c <readstat_write_bytes_as_lines+0x3c>
    6ee8:	mov	r0, #0
    6eec:	sub	sp, fp, #28
    6ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6ef4:	mov	r0, #13
    6ef8:	sub	sp, fp, #28
    6efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00006f00 <readstat_write_line_padding>:
    6f00:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6f04:	add	fp, sp, #24
    6f08:	mov	r4, r0
    6f0c:	mov	r0, r3
    6f10:	mov	r8, r3
    6f14:	mov	r7, r2
    6f18:	mov	r9, r1
    6f1c:	bl	4b58 <strlen@plt>
    6f20:	ldr	r1, [r4, #4]
    6f24:	mov	r6, r0
    6f28:	add	r0, r0, r7
    6f2c:	udiv	r2, r1, r0
    6f30:	mls	r0, r2, r0, r1
    6f34:	cmp	r0, #0
    6f38:	beq	6fb4 <readstat_write_line_padding+0xb4>
    6f3c:	sub	r5, r7, r0
    6f40:	mov	r0, r5
    6f44:	bl	4a74 <malloc@plt>
    6f48:	mov	r1, r9
    6f4c:	mov	r2, r5
    6f50:	mov	r7, r0
    6f54:	bl	4c00 <memset@plt>
    6f58:	ldr	r3, [r4]
    6f5c:	ldr	r2, [r4, #304]	; 0x130
    6f60:	mov	r0, r7
    6f64:	mov	r1, r5
    6f68:	blx	r3
    6f6c:	cmp	r0, r5
    6f70:	bcc	6fa4 <readstat_write_line_padding+0xa4>
    6f74:	ldr	r1, [r4, #4]
    6f78:	ldr	r3, [r4]
    6f7c:	ldr	r2, [r4, #304]	; 0x130
    6f80:	add	r0, r1, r0
    6f84:	mov	r1, r6
    6f88:	str	r0, [r4, #4]
    6f8c:	mov	r0, r8
    6f90:	blx	r3
    6f94:	cmp	r0, r6
    6f98:	ldrcs	r1, [r4, #4]
    6f9c:	addcs	r0, r1, r0
    6fa0:	strcs	r0, [r4, #4]
    6fa4:	cmp	r7, #0
    6fa8:	beq	6fb4 <readstat_write_line_padding+0xb4>
    6fac:	mov	r0, r7
    6fb0:	bl	4864 <free@plt>
    6fb4:	mov	r0, #0
    6fb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00006fbc <readstat_write_string>:
    6fbc:	push	{r4, r5, r6, sl, fp, lr}
    6fc0:	add	fp, sp, #16
    6fc4:	mov	r4, r0
    6fc8:	mov	r0, r1
    6fcc:	mov	r5, r1
    6fd0:	bl	4b58 <strlen@plt>
    6fd4:	ldr	r3, [r4]
    6fd8:	ldr	r2, [r4, #304]	; 0x130
    6fdc:	mov	r6, r0
    6fe0:	mov	r0, r5
    6fe4:	mov	r1, r6
    6fe8:	blx	r3
    6fec:	mov	r1, r0
    6ff0:	mov	r0, #13
    6ff4:	cmp	r1, r6
    6ff8:	ldrcs	r0, [r4, #4]
    6ffc:	addcs	r0, r0, r1
    7000:	strcs	r0, [r4, #4]
    7004:	movcs	r0, #0
    7008:	pop	{r4, r5, r6, sl, fp, pc}

0000700c <readstat_write_zeros>:
    700c:	mov	r2, r1
    7010:	mov	r1, #0
    7014:	b	7018 <readstat_write_repeated_byte>

00007018 <readstat_write_repeated_byte>:
    7018:	cmp	r2, #0
    701c:	moveq	r0, #0
    7020:	bxeq	lr
    7024:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    7028:	add	fp, sp, #24
    702c:	mov	r4, r0
    7030:	add	r0, r2, #7
    7034:	mov	r5, r2
    7038:	mov	r7, sp
    703c:	bic	r0, r0, #7
    7040:	sub	r6, sp, r0
    7044:	mov	sp, r6
    7048:	mov	r0, r6
    704c:	bl	4c00 <memset@plt>
    7050:	ldr	r3, [r4]
    7054:	ldr	r2, [r4, #304]	; 0x130
    7058:	mov	r0, r6
    705c:	mov	r1, r5
    7060:	blx	r3
    7064:	mov	r1, r0
    7068:	mov	r0, #13
    706c:	cmp	r1, r5
    7070:	ldrcs	r0, [r4, #4]
    7074:	addcs	r0, r0, r1
    7078:	strcs	r0, [r4, #4]
    707c:	movcs	r0, #0
    7080:	mov	sp, r7
    7084:	sub	sp, fp, #24
    7088:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000708c <readstat_write_spaces>:
    708c:	mov	r2, r1
    7090:	mov	r1, #32
    7094:	b	7018 <readstat_write_repeated_byte>

00007098 <readstat_write_space_padded_string>:
    7098:	push	{r4, r5, r6, r7, fp, lr}
    709c:	add	fp, sp, #16
    70a0:	mov	r4, r2
    70a4:	mov	r5, r0
    70a8:	cmp	r1, #0
    70ac:	beq	7114 <readstat_write_space_padded_string+0x7c>
    70b0:	ldrb	r0, [r1]
    70b4:	mov	r6, r1
    70b8:	cmp	r0, #0
    70bc:	beq	7114 <readstat_write_space_padded_string+0x7c>
    70c0:	mov	r0, r6
    70c4:	bl	4b58 <strlen@plt>
    70c8:	ldr	r3, [r5]
    70cc:	ldr	r2, [r5, #304]	; 0x130
    70d0:	mov	r7, r0
    70d4:	cmp	r0, r4
    70d8:	mov	r0, r6
    70dc:	movhi	r7, r4
    70e0:	mov	r1, r7
    70e4:	blx	r3
    70e8:	cmp	r0, r7
    70ec:	movcc	r0, #13
    70f0:	popcc	{r4, r5, r6, r7, fp, pc}
    70f4:	ldr	r1, [r5, #4]
    70f8:	sub	r2, r4, r7
    70fc:	add	r0, r1, r0
    7100:	mov	r1, #32
    7104:	str	r0, [r5, #4]
    7108:	mov	r0, r5
    710c:	pop	{r4, r5, r6, r7, fp, lr}
    7110:	b	7018 <readstat_write_repeated_byte>
    7114:	mov	r0, r5
    7118:	mov	r1, #32
    711c:	mov	r2, r4
    7120:	pop	{r4, r5, r6, r7, fp, lr}
    7124:	b	7018 <readstat_write_repeated_byte>

00007128 <readstat_add_label_set>:
    7128:	push	{r4, r5, r6, r7, fp, lr}
    712c:	add	fp, sp, #16
    7130:	mov	r6, r1
    7134:	mov	r7, r0
    7138:	ldr	r1, [r0, #40]	; 0x28
    713c:	ldr	r0, [r0, #44]	; 0x2c
    7140:	mov	r4, r2
    7144:	cmp	r1, r0
    7148:	bne	7164 <readstat_add_label_set+0x3c>
    714c:	lsl	r0, r1, #1
    7150:	lsl	r1, r1, #3
    7154:	str	r0, [r7, #44]	; 0x2c
    7158:	ldr	r0, [r7, #36]	; 0x24
    715c:	bl	4984 <realloc@plt>
    7160:	str	r0, [r7, #36]	; 0x24
    7164:	mov	r0, #1
    7168:	mov	r1, #284	; 0x11c
    716c:	bl	472c <calloc@plt>
    7170:	ldr	r1, [r7, #40]	; 0x28
    7174:	mov	r5, r0
    7178:	ldr	r0, [r7, #36]	; 0x24
    717c:	mov	r3, r4
    7180:	add	r2, r1, #1
    7184:	str	r2, [r7, #40]	; 0x28
    7188:	str	r5, [r0, r1, lsl #2]
    718c:	str	r6, [r5]
    7190:	add	r0, r5, #4
    7194:	mov	r1, #256	; 0x100
    7198:	ldr	r2, [pc, #60]	; 71dc <readstat_add_label_set+0xb4>
    719c:	add	r2, pc, r2
    71a0:	bl	4bdc <snprintf@plt>
    71a4:	mov	r0, #10
    71a8:	mov	r1, #32
    71ac:	mov	r4, #10
    71b0:	bl	472c <calloc@plt>
    71b4:	str	r0, [r5, #260]	; 0x104
    71b8:	mov	r0, #2
    71bc:	mov	r1, #4
    71c0:	str	r4, [r5, #268]	; 0x10c
    71c4:	mov	r4, #2
    71c8:	bl	472c <calloc@plt>
    71cc:	str	r0, [r5, #272]	; 0x110
    71d0:	mov	r0, r5
    71d4:	str	r4, [r5, #280]	; 0x118
    71d8:	pop	{r4, r5, r6, r7, fp, pc}
    71dc:	.word	0x00023150

000071e0 <readstat_get_label_set>:
    71e0:	ldr	r3, [r0, #40]	; 0x28
    71e4:	mov	r2, r0
    71e8:	mov	r0, #0
    71ec:	cmp	r3, r1
    71f0:	ldrgt	r0, [r2, #36]	; 0x24
    71f4:	ldrgt	r0, [r0, r1, lsl #2]
    71f8:	bx	lr

000071fc <readstat_sort_label_set>:
    71fc:	ldr	r2, [r0, #260]	; 0x104
    7200:	mov	r3, r1
    7204:	ldr	r1, [r0, #264]	; 0x108
    7208:	mov	r0, r2
    720c:	mov	r2, #32
    7210:	b	4d80 <qsort@plt>

00007214 <readstat_get_value_label>:
    7214:	ldr	r3, [r0, #264]	; 0x108
    7218:	mov	r2, r0
    721c:	mov	r0, #0
    7220:	cmp	r3, r1
    7224:	ldrgt	r0, [r2, #260]	; 0x104
    7228:	addgt	r0, r0, r1, lsl #5
    722c:	bx	lr

00007230 <readstat_get_label_set_variable>:
    7230:	ldr	r3, [r0, #276]	; 0x114
    7234:	mov	r2, r0
    7238:	mov	r0, #0
    723c:	cmp	r3, r1
    7240:	ldrgt	r0, [r2, #272]	; 0x110
    7244:	ldrgt	r0, [r0, r1, lsl #2]
    7248:	bx	lr

0000724c <readstat_label_double_value>:
    724c:	push	{r4, r5, r6, sl, fp, lr}
    7250:	add	fp, sp, #16
    7254:	vpush	{d8}
    7258:	mov	r4, r1
    725c:	mov	r5, r0
    7260:	ldr	r1, [r0, #264]	; 0x108
    7264:	ldr	r0, [r0, #268]	; 0x10c
    7268:	vorr	d8, d0, d0
    726c:	cmp	r1, r0
    7270:	bne	7294 <readstat_label_double_value+0x48>
    7274:	lsl	r0, r1, #1
    7278:	lsl	r1, r1, #6
    727c:	str	r0, [r5, #268]	; 0x10c
    7280:	ldr	r0, [r5, #260]	; 0x104
    7284:	bl	4984 <realloc@plt>
    7288:	str	r0, [r5, #260]	; 0x104
    728c:	ldr	r1, [r5, #264]	; 0x108
    7290:	b	7298 <readstat_label_double_value+0x4c>
    7294:	ldr	r0, [r5, #260]	; 0x104
    7298:	add	r6, r0, r1, lsl #5
    729c:	add	r2, r1, #1
    72a0:	vmov.i32	q8, #0	; 0x00000000
    72a4:	cmp	r4, #0
    72a8:	mov	r0, r6
    72ac:	str	r2, [r5, #264]	; 0x108
    72b0:	vst1.64	{d16-d17}, [r0]!
    72b4:	vst1.64	{d16-d17}, [r0]
    72b8:	beq	72e8 <readstat_label_double_value+0x9c>
    72bc:	mov	r0, r4
    72c0:	bl	4b58 <strlen@plt>
    72c4:	cmp	r0, #0
    72c8:	beq	72e8 <readstat_label_double_value+0x9c>
    72cc:	mov	r5, r0
    72d0:	str	r0, [r6, #28]
    72d4:	bl	4a74 <malloc@plt>
    72d8:	mov	r1, r4
    72dc:	mov	r2, r5
    72e0:	str	r0, [r6, #24]
    72e4:	bl	48b8 <memcpy@plt>
    72e8:	vstr	d8, [r6]
    72ec:	vcvt.s32.f64	s0, d8
    72f0:	vstr	s0, [r6, #8]
    72f4:	vpop	{d8}
    72f8:	pop	{r4, r5, r6, sl, fp, pc}

000072fc <readstat_label_int32_value>:
    72fc:	push	{r4, r5, r6, r7, fp, lr}
    7300:	add	fp, sp, #16
    7304:	mov	r4, r1
    7308:	mov	r6, r0
    730c:	ldr	r1, [r0, #264]	; 0x108
    7310:	ldr	r0, [r0, #268]	; 0x10c
    7314:	mov	r5, r2
    7318:	cmp	r1, r0
    731c:	bne	7340 <readstat_label_int32_value+0x44>
    7320:	lsl	r0, r1, #1
    7324:	lsl	r1, r1, #6
    7328:	str	r0, [r6, #268]	; 0x10c
    732c:	ldr	r0, [r6, #260]	; 0x104
    7330:	bl	4984 <realloc@plt>
    7334:	str	r0, [r6, #260]	; 0x104
    7338:	ldr	r1, [r6, #264]	; 0x108
    733c:	b	7344 <readstat_label_int32_value+0x48>
    7340:	ldr	r0, [r6, #260]	; 0x104
    7344:	add	r7, r0, r1, lsl #5
    7348:	add	r2, r1, #1
    734c:	vmov.i32	q8, #0	; 0x00000000
    7350:	cmp	r5, #0
    7354:	mov	r0, r7
    7358:	str	r2, [r6, #264]	; 0x108
    735c:	vst1.64	{d16-d17}, [r0]!
    7360:	vst1.64	{d16-d17}, [r0]
    7364:	beq	7394 <readstat_label_int32_value+0x98>
    7368:	mov	r0, r5
    736c:	bl	4b58 <strlen@plt>
    7370:	cmp	r0, #0
    7374:	beq	7394 <readstat_label_int32_value+0x98>
    7378:	mov	r6, r0
    737c:	str	r0, [r7, #28]
    7380:	bl	4a74 <malloc@plt>
    7384:	mov	r1, r5
    7388:	mov	r2, r6
    738c:	str	r0, [r7, #24]
    7390:	bl	48b8 <memcpy@plt>
    7394:	vmov	s0, r4
    7398:	vcvt.f64.s32	d16, s0
    739c:	vstr	d16, [r7]
    73a0:	str	r4, [r7, #8]
    73a4:	pop	{r4, r5, r6, r7, fp, pc}

000073a8 <readstat_label_string_value>:
    73a8:	push	{r4, r5, r6, r7, fp, lr}
    73ac:	add	fp, sp, #16
    73b0:	mov	r4, r1
    73b4:	mov	r6, r0
    73b8:	ldr	r1, [r0, #264]	; 0x108
    73bc:	ldr	r0, [r0, #268]	; 0x10c
    73c0:	mov	r5, r2
    73c4:	cmp	r1, r0
    73c8:	bne	73ec <readstat_label_string_value+0x44>
    73cc:	lsl	r0, r1, #1
    73d0:	lsl	r1, r1, #6
    73d4:	str	r0, [r6, #268]	; 0x10c
    73d8:	ldr	r0, [r6, #260]	; 0x104
    73dc:	bl	4984 <realloc@plt>
    73e0:	str	r0, [r6, #260]	; 0x104
    73e4:	ldr	r1, [r6, #264]	; 0x108
    73e8:	b	73f0 <readstat_label_string_value+0x48>
    73ec:	ldr	r0, [r6, #260]	; 0x104
    73f0:	add	r7, r0, r1, lsl #5
    73f4:	add	r2, r1, #1
    73f8:	vmov.i32	q8, #0	; 0x00000000
    73fc:	cmp	r5, #0
    7400:	mov	r0, r7
    7404:	str	r2, [r6, #264]	; 0x108
    7408:	vst1.64	{d16-d17}, [r0]!
    740c:	vst1.64	{d16-d17}, [r0]
    7410:	beq	7440 <readstat_label_string_value+0x98>
    7414:	mov	r0, r5
    7418:	bl	4b58 <strlen@plt>
    741c:	cmp	r0, #0
    7420:	beq	7440 <readstat_label_string_value+0x98>
    7424:	mov	r6, r0
    7428:	str	r0, [r7, #28]
    742c:	bl	4a74 <malloc@plt>
    7430:	mov	r1, r5
    7434:	mov	r2, r6
    7438:	str	r0, [r7, #24]
    743c:	bl	48b8 <memcpy@plt>
    7440:	cmp	r4, #0
    7444:	popeq	{r4, r5, r6, r7, fp, pc}
    7448:	mov	r0, r4
    744c:	bl	4b58 <strlen@plt>
    7450:	cmp	r0, #0
    7454:	beq	7474 <readstat_label_string_value+0xcc>
    7458:	str	r0, [r7, #20]
    745c:	bl	4a74 <malloc@plt>
    7460:	str	r0, [r7, #16]
    7464:	mov	r1, r4
    7468:	ldr	r2, [r7, #20]
    746c:	pop	{r4, r5, r6, r7, fp, lr}
    7470:	b	48b8 <memcpy@plt>
    7474:	pop	{r4, r5, r6, r7, fp, pc}

00007478 <readstat_label_tagged_value>:
    7478:	push	{r4, r5, r6, r7, fp, lr}
    747c:	add	fp, sp, #16
    7480:	mov	r4, r1
    7484:	mov	r6, r0
    7488:	ldr	r1, [r0, #264]	; 0x108
    748c:	ldr	r0, [r0, #268]	; 0x10c
    7490:	mov	r5, r2
    7494:	cmp	r1, r0
    7498:	bne	74bc <readstat_label_tagged_value+0x44>
    749c:	lsl	r0, r1, #1
    74a0:	lsl	r1, r1, #6
    74a4:	str	r0, [r6, #268]	; 0x10c
    74a8:	ldr	r0, [r6, #260]	; 0x104
    74ac:	bl	4984 <realloc@plt>
    74b0:	str	r0, [r6, #260]	; 0x104
    74b4:	ldr	r1, [r6, #264]	; 0x108
    74b8:	b	74c0 <readstat_label_tagged_value+0x48>
    74bc:	ldr	r0, [r6, #260]	; 0x104
    74c0:	add	r7, r0, r1, lsl #5
    74c4:	add	r2, r1, #1
    74c8:	vmov.i32	q8, #0	; 0x00000000
    74cc:	cmp	r5, #0
    74d0:	mov	r0, r7
    74d4:	str	r2, [r6, #264]	; 0x108
    74d8:	vst1.64	{d16-d17}, [r0]!
    74dc:	vst1.64	{d16-d17}, [r0]
    74e0:	beq	7510 <readstat_label_tagged_value+0x98>
    74e4:	mov	r0, r5
    74e8:	bl	4b58 <strlen@plt>
    74ec:	cmp	r0, #0
    74f0:	beq	7510 <readstat_label_tagged_value+0x98>
    74f4:	mov	r6, r0
    74f8:	str	r0, [r7, #28]
    74fc:	bl	4a74 <malloc@plt>
    7500:	mov	r1, r5
    7504:	mov	r2, r6
    7508:	str	r0, [r7, #24]
    750c:	bl	48b8 <memcpy@plt>
    7510:	strb	r4, [r7, #12]
    7514:	pop	{r4, r5, r6, r7, fp, pc}

00007518 <readstat_add_variable>:
    7518:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    751c:	add	fp, sp, #24
    7520:	mov	r8, r1
    7524:	mov	r4, r0
    7528:	ldr	r1, [r0, #28]
    752c:	ldr	r0, [r0, #32]
    7530:	mov	r6, r3
    7534:	mov	r7, r2
    7538:	cmp	r1, r0
    753c:	bne	7558 <readstat_add_variable+0x40>
    7540:	lsl	r0, r1, #1
    7544:	lsl	r1, r1, #3
    7548:	str	r0, [r4, #32]
    754c:	ldr	r0, [r4, #24]
    7550:	bl	4984 <realloc@plt>
    7554:	str	r0, [r4, #24]
    7558:	mov	r0, #1
    755c:	movw	r1, #2152	; 0x868
    7560:	bl	472c <calloc@plt>
    7564:	mov	r5, r0
    7568:	ldr	r0, [r4, #28]
    756c:	add	r1, r0, #1
    7570:	str	r1, [r4, #28]
    7574:	str	r0, [r5, #4]
    7578:	ldr	r1, [r4, #24]
    757c:	str	r5, [r1, r0, lsl #2]
    7580:	mov	r0, r5
    7584:	str	r7, [r5]
    7588:	str	r6, [r5, #1600]	; 0x640
    758c:	bl	4e7c <readstat_variable_get_type_class@plt>
    7590:	mov	r2, #3
    7594:	cmp	r0, #0
    7598:	mov	r1, #0
    759c:	movweq	r2, #1
    75a0:	cmp	r8, #0
    75a4:	str	r1, [r5, #2128]	; 0x850
    75a8:	str	r2, [r5, #2132]	; 0x854
    75ac:	beq	75c8 <readstat_add_variable+0xb0>
    75b0:	ldr	r2, [pc, #24]	; 75d0 <readstat_add_variable+0xb8>
    75b4:	add	r0, r5, #8
    75b8:	mov	r1, #300	; 0x12c
    75bc:	mov	r3, r8
    75c0:	add	r2, pc, r2
    75c4:	bl	4bdc <snprintf@plt>
    75c8:	mov	r0, r5
    75cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    75d0:	.word	0x00022d2c

000075d4 <readstat_add_string_ref>:
    75d4:	push	{r4, r5, r6, r7, fp, lr}
    75d8:	add	fp, sp, #16
    75dc:	mov	r4, r0
    75e0:	mov	r0, r1
    75e4:	mov	r6, r1
    75e8:	bl	4b58 <strlen@plt>
    75ec:	mov	r7, r0
    75f0:	add	r1, r0, #25
    75f4:	mov	r0, #1
    75f8:	bl	472c <calloc@plt>
    75fc:	mov	r5, r0
    7600:	mvn	r0, #0
    7604:	add	r2, r7, #1
    7608:	mov	r1, r6
    760c:	str	r0, [r5]
    7610:	str	r0, [r5, #4]
    7614:	str	r0, [r5, #8]
    7618:	str	r0, [r5, #12]
    761c:	add	r0, r5, #20
    7620:	str	r2, [r5, #16]
    7624:	bl	48b8 <memcpy@plt>
    7628:	ldr	r1, [r4, #64]	; 0x40
    762c:	ldr	r0, [r4, #68]	; 0x44
    7630:	cmp	r1, r0
    7634:	bne	7658 <readstat_add_string_ref+0x84>
    7638:	lsl	r0, r1, #1
    763c:	lsl	r1, r1, #3
    7640:	str	r0, [r4, #68]	; 0x44
    7644:	ldr	r0, [r4, #60]	; 0x3c
    7648:	bl	4984 <realloc@plt>
    764c:	str	r0, [r4, #60]	; 0x3c
    7650:	ldr	r1, [r4, #64]	; 0x40
    7654:	b	765c <readstat_add_string_ref+0x88>
    7658:	ldr	r0, [r4, #60]	; 0x3c
    765c:	add	r2, r1, #1
    7660:	str	r2, [r4, #64]	; 0x40
    7664:	str	r5, [r0, r1, lsl #2]
    7668:	mov	r0, r5
    766c:	pop	{r4, r5, r6, r7, fp, pc}

00007670 <readstat_add_note>:
    7670:	push	{r4, r5, r6, sl, fp, lr}
    7674:	add	fp, sp, #16
    7678:	mov	r5, r1
    767c:	mov	r4, r0
    7680:	ldr	r1, [r0, #52]	; 0x34
    7684:	ldr	r0, [r0, #56]	; 0x38
    7688:	cmp	r1, r0
    768c:	bne	76a8 <readstat_add_note+0x38>
    7690:	lsl	r0, r1, #1
    7694:	lsl	r1, r1, #3
    7698:	str	r0, [r4, #56]	; 0x38
    769c:	ldr	r0, [r4, #48]	; 0x30
    76a0:	bl	4984 <realloc@plt>
    76a4:	str	r0, [r4, #48]	; 0x30
    76a8:	mov	r0, r5
    76ac:	bl	4b58 <strlen@plt>
    76b0:	add	r0, r0, #1
    76b4:	bl	4a74 <malloc@plt>
    76b8:	mov	r1, r5
    76bc:	mov	r6, r0
    76c0:	bl	4a20 <strcpy@plt>
    76c4:	ldr	r1, [r4, #52]	; 0x34
    76c8:	ldr	r0, [r4, #48]	; 0x30
    76cc:	add	r2, r1, #1
    76d0:	str	r2, [r4, #52]	; 0x34
    76d4:	str	r6, [r0, r1, lsl #2]
    76d8:	pop	{r4, r5, r6, sl, fp, pc}

000076dc <readstat_variable_set_label>:
    76dc:	add	r0, r0, #564	; 0x234
    76e0:	cmp	r1, #0
    76e4:	beq	76fc <readstat_variable_set_label+0x20>
    76e8:	ldr	r2, [pc, #24]	; 7708 <readstat_variable_set_label+0x2c>
    76ec:	mov	r3, r1
    76f0:	mov	r1, #1024	; 0x400
    76f4:	add	r2, pc, r2
    76f8:	b	4bdc <snprintf@plt>
    76fc:	mov	r1, #0
    7700:	mov	r2, #1024	; 0x400
    7704:	b	4c00 <memset@plt>
    7708:	.word	0x00022bf8

0000770c <readstat_variable_set_format>:
    770c:	add	r0, r0, #308	; 0x134
    7710:	cmp	r1, #0
    7714:	beq	772c <readstat_variable_set_format+0x20>
    7718:	ldr	r2, [pc, #24]	; 7738 <readstat_variable_set_format+0x2c>
    771c:	mov	r3, r1
    7720:	mov	r1, #256	; 0x100
    7724:	add	r2, pc, r2
    7728:	b	4bdc <snprintf@plt>
    772c:	mov	r1, #0
    7730:	mov	r2, #256	; 0x100
    7734:	b	4c00 <memset@plt>
    7738:	.word	0x00022bc8

0000773c <readstat_variable_set_measure>:
    773c:	str	r1, [r0, #2128]	; 0x850
    7740:	bx	lr

00007744 <readstat_variable_set_alignment>:
    7744:	str	r1, [r0, #2132]	; 0x854
    7748:	bx	lr

0000774c <readstat_variable_set_display_width>:
    774c:	str	r1, [r0, #2136]	; 0x858
    7750:	bx	lr

00007754 <readstat_variable_set_label_set>:
    7754:	cmp	r1, #0
    7758:	str	r1, [r0, #1588]	; 0x634
    775c:	bxeq	lr
    7760:	push	{r4, r5, fp, lr}
    7764:	add	fp, sp, #8
    7768:	mov	r5, r1
    776c:	mov	r4, r0
    7770:	ldr	r1, [r1, #276]	; 0x114
    7774:	ldr	r0, [r5, #280]	; 0x118
    7778:	cmp	r1, r0
    777c:	bne	77a0 <readstat_variable_set_label_set+0x4c>
    7780:	lsl	r0, r1, #1
    7784:	lsl	r1, r1, #3
    7788:	str	r0, [r5, #280]	; 0x118
    778c:	ldr	r0, [r5, #272]	; 0x110
    7790:	bl	4984 <realloc@plt>
    7794:	str	r0, [r5, #272]	; 0x110
    7798:	ldr	r1, [r5, #276]	; 0x114
    779c:	b	77a4 <readstat_variable_set_label_set+0x50>
    77a0:	ldr	r0, [r5, #272]	; 0x110
    77a4:	add	r2, r1, #1
    77a8:	str	r2, [r5, #276]	; 0x114
    77ac:	str	r4, [r0, r1, lsl #2]
    77b0:	pop	{r4, r5, fp, lr}
    77b4:	bx	lr

000077b8 <readstat_get_variable>:
    77b8:	ldr	r3, [r0, #28]
    77bc:	mov	r2, r0
    77c0:	mov	r0, #0
    77c4:	cmp	r3, r1
    77c8:	ldrgt	r0, [r2, #24]
    77cc:	ldrgt	r0, [r0, r1, lsl #2]
    77d0:	bx	lr

000077d4 <readstat_get_string_ref>:
    77d4:	ldr	r3, [r0, #64]	; 0x40
    77d8:	mov	r2, r0
    77dc:	mov	r0, #0
    77e0:	cmp	r3, r1
    77e4:	ldrgt	r0, [r2, #60]	; 0x3c
    77e8:	ldrgt	r0, [r0, r1, lsl #2]
    77ec:	bx	lr

000077f0 <readstat_writer_set_file_label>:
    77f0:	push	{fp, lr}
    77f4:	mov	fp, sp
    77f8:	ldr	r2, [pc, #24]	; 7818 <readstat_writer_set_file_label+0x28>
    77fc:	mov	r3, r1
    7800:	add	r0, r0, #88	; 0x58
    7804:	mov	r1, #100	; 0x64
    7808:	add	r2, pc, r2
    780c:	bl	4bdc <snprintf@plt>
    7810:	mov	r0, #0
    7814:	pop	{fp, pc}
    7818:	.word	0x00022ae4

0000781c <readstat_writer_set_file_timestamp>:
    781c:	str	r1, [r0, #20]
    7820:	mov	r0, #0
    7824:	bx	lr

00007828 <readstat_writer_set_table_name>:
    7828:	push	{fp, lr}
    782c:	mov	fp, sp
    7830:	ldr	r2, [pc, #24]	; 7850 <readstat_writer_set_table_name+0x28>
    7834:	mov	r3, r1
    7838:	add	r0, r0, #188	; 0xbc
    783c:	mov	r1, #33	; 0x21
    7840:	add	r2, pc, r2
    7844:	bl	4bdc <snprintf@plt>
    7848:	mov	r0, #0
    784c:	pop	{fp, pc}
    7850:	.word	0x00022aac

00007854 <readstat_writer_set_fweight_variable>:
    7854:	push	{r4, r5, fp, lr}
    7858:	add	fp, sp, #8
    785c:	mov	r5, r0
    7860:	mov	r0, r1
    7864:	mov	r4, r1
    7868:	bl	4e7c <readstat_variable_get_type_class@plt>
    786c:	cmp	r0, #0
    7870:	moveq	r0, #30
    7874:	strne	r4, [r5, #224]	; 0xe0
    7878:	movne	r0, #0
    787c:	pop	{r4, r5, fp, pc}

00007880 <readstat_writer_set_file_format_version>:
    7880:	str	r1, [r0, #8]
    7884:	mov	r0, #0
    7888:	bx	lr

0000788c <readstat_writer_set_file_format_is_64bit>:
    788c:	str	r1, [r0, #12]
    7890:	mov	r0, #0
    7894:	bx	lr

00007898 <readstat_writer_set_compression>:
    7898:	str	r1, [r0, #16]
    789c:	mov	r0, #0
    78a0:	bx	lr

000078a4 <readstat_writer_set_error_handler>:
    78a4:	str	r1, [r0, #296]	; 0x128
    78a8:	mov	r0, #0
    78ac:	bx	lr

000078b0 <readstat_begin_writing_file>:
    78b0:	str	r2, [r0, #80]	; 0x50
    78b4:	mov	r2, #1
    78b8:	str	r1, [r0, #304]	; 0x130
    78bc:	str	r2, [r0, #308]	; 0x134
    78c0:	ldr	r1, [r0, #292]	; 0x124
    78c4:	cmp	r1, #0
    78c8:	moveq	r0, #0
    78cc:	bxeq	lr
    78d0:	bx	r1

000078d4 <readstat_begin_row>:
    78d4:	push	{r4, r5, fp, lr}
    78d8:	add	fp, sp, #8
    78dc:	mov	r5, r0
    78e0:	ldr	r0, [r0, #308]	; 0x134
    78e4:	cmp	r0, #0
    78e8:	moveq	r4, #14
    78ec:	moveq	r0, r4
    78f0:	popeq	{r4, r5, fp, pc}
    78f4:	ldr	r0, [r5, #84]	; 0x54
    78f8:	mov	r4, #0
    78fc:	cmp	r0, #0
    7900:	bne	7910 <readstat_begin_row+0x3c>
    7904:	mov	r0, r5
    7908:	bl	7928 <readstat_begin_writing_data>
    790c:	mov	r4, r0
    7910:	ldr	r0, [r5, #72]	; 0x48
    7914:	ldr	r2, [r5, #76]	; 0x4c
    7918:	mov	r1, #0
    791c:	bl	4c00 <memset@plt>
    7920:	mov	r0, r4
    7924:	pop	{r4, r5, fp, pc}

00007928 <readstat_begin_writing_data>:
    7928:	push	{r4, r5, r6, r7, fp, lr}
    792c:	add	fp, sp, #16
    7930:	mov	r4, r0
    7934:	ldr	r0, [r0, #308]	; 0x134
    7938:	cmp	r0, #0
    793c:	beq	7a2c <readstat_begin_writing_data+0x104>
    7940:	ldr	r1, [r4, #292]	; 0x124
    7944:	cmp	r1, #0
    7948:	beq	7960 <readstat_begin_writing_data+0x38>
    794c:	mov	r0, r4
    7950:	blx	r1
    7954:	cmp	r0, #0
    7958:	beq	7960 <readstat_begin_writing_data+0x38>
    795c:	pop	{r4, r5, r6, r7, fp, pc}
    7960:	ldr	r0, [r4, #28]
    7964:	cmp	r0, #1
    7968:	blt	79ac <readstat_begin_writing_data+0x84>
    796c:	mov	r6, #0
    7970:	mov	r5, #0
    7974:	ldr	r0, [r4, #24]
    7978:	ldr	r2, [r4, #228]	; 0xe4
    797c:	ldr	r7, [r0, r6, lsl #2]
    7980:	ldr	r1, [r7, #1600]	; 0x640
    7984:	ldr	r0, [r7]
    7988:	blx	r2
    798c:	str	r5, [r7, #1592]	; 0x638
    7990:	str	r0, [r7, #1596]	; 0x63c
    7994:	add	r5, r0, r5
    7998:	add	r6, r6, #1
    799c:	ldr	r0, [r4, #28]
    79a0:	cmp	r6, r0
    79a4:	blt	7974 <readstat_begin_writing_data+0x4c>
    79a8:	b	79b0 <readstat_begin_writing_data+0x88>
    79ac:	mov	r5, #0
    79b0:	ldr	r1, [r4, #232]	; 0xe8
    79b4:	cmp	r1, #0
    79b8:	beq	7a04 <readstat_begin_writing_data+0xdc>
    79bc:	cmp	r0, #1
    79c0:	blt	7a04 <readstat_begin_writing_data+0xdc>
    79c4:	mov	r6, #0
    79c8:	ldr	r1, [r4, #308]	; 0x134
    79cc:	cmp	r1, #0
    79d0:	beq	7a2c <readstat_begin_writing_data+0x104>
    79d4:	ldr	r1, [r4, #232]	; 0xe8
    79d8:	cmp	r1, #0
    79dc:	beq	79f8 <readstat_begin_writing_data+0xd0>
    79e0:	ldr	r0, [r4, #24]
    79e4:	ldr	r0, [r0, r6, lsl #2]
    79e8:	blx	r1
    79ec:	cmp	r0, #0
    79f0:	popne	{r4, r5, r6, r7, fp, pc}
    79f4:	ldr	r0, [r4, #28]
    79f8:	add	r6, r6, #1
    79fc:	cmp	r6, r0
    7a00:	blt	79c8 <readstat_begin_writing_data+0xa0>
    7a04:	mov	r0, r5
    7a08:	str	r5, [r4, #76]	; 0x4c
    7a0c:	bl	4a74 <malloc@plt>
    7a10:	str	r0, [r4, #72]	; 0x48
    7a14:	ldr	r1, [r4, #276]	; 0x114
    7a18:	cmp	r1, #0
    7a1c:	beq	7a34 <readstat_begin_writing_data+0x10c>
    7a20:	mov	r0, r4
    7a24:	pop	{r4, r5, r6, r7, fp, lr}
    7a28:	bx	r1
    7a2c:	mov	r0, #14
    7a30:	pop	{r4, r5, r6, r7, fp, pc}
    7a34:	mov	r0, #0
    7a38:	pop	{r4, r5, r6, r7, fp, pc}

00007a3c <readstat_insert_int8_value>:
    7a3c:	ldr	r3, [r0, #308]	; 0x134
    7a40:	cmp	r3, #0
    7a44:	beq	7a7c <readstat_insert_int8_value+0x40>
    7a48:	ldr	ip, [r1]
    7a4c:	mov	r3, #12
    7a50:	cmp	ip, #1
    7a54:	bne	7a80 <readstat_insert_int8_value+0x44>
    7a58:	push	{fp, lr}
    7a5c:	mov	fp, sp
    7a60:	ldr	ip, [r1, #1592]	; 0x638
    7a64:	ldr	r3, [r0, #72]	; 0x48
    7a68:	ldr	lr, [r0, #236]	; 0xec
    7a6c:	add	r0, r3, ip
    7a70:	mov	r3, lr
    7a74:	pop	{fp, lr}
    7a78:	bx	r3
    7a7c:	mov	r3, #14
    7a80:	mov	r0, r3
    7a84:	bx	lr

00007a88 <readstat_insert_int16_value>:
    7a88:	ldr	r3, [r0, #308]	; 0x134
    7a8c:	cmp	r3, #0
    7a90:	beq	7ac8 <readstat_insert_int16_value+0x40>
    7a94:	ldr	ip, [r1]
    7a98:	mov	r3, #12
    7a9c:	cmp	ip, #2
    7aa0:	bne	7acc <readstat_insert_int16_value+0x44>
    7aa4:	push	{fp, lr}
    7aa8:	mov	fp, sp
    7aac:	ldr	ip, [r1, #1592]	; 0x638
    7ab0:	ldr	r3, [r0, #72]	; 0x48
    7ab4:	ldr	lr, [r0, #240]	; 0xf0
    7ab8:	add	r0, r3, ip
    7abc:	mov	r3, lr
    7ac0:	pop	{fp, lr}
    7ac4:	bx	r3
    7ac8:	mov	r3, #14
    7acc:	mov	r0, r3
    7ad0:	bx	lr

00007ad4 <readstat_insert_int32_value>:
    7ad4:	ldr	r3, [r0, #308]	; 0x134
    7ad8:	cmp	r3, #0
    7adc:	beq	7b14 <readstat_insert_int32_value+0x40>
    7ae0:	ldr	ip, [r1]
    7ae4:	mov	r3, #12
    7ae8:	cmp	ip, #3
    7aec:	bne	7b18 <readstat_insert_int32_value+0x44>
    7af0:	push	{fp, lr}
    7af4:	mov	fp, sp
    7af8:	ldr	ip, [r1, #1592]	; 0x638
    7afc:	ldr	r3, [r0, #72]	; 0x48
    7b00:	ldr	lr, [r0, #244]	; 0xf4
    7b04:	add	r0, r3, ip
    7b08:	mov	r3, lr
    7b0c:	pop	{fp, lr}
    7b10:	bx	r3
    7b14:	mov	r3, #14
    7b18:	mov	r0, r3
    7b1c:	bx	lr

00007b20 <readstat_insert_float_value>:
    7b20:	ldr	r2, [r0, #308]	; 0x134
    7b24:	cmp	r2, #0
    7b28:	beq	7b50 <readstat_insert_float_value+0x30>
    7b2c:	ldr	r3, [r1]
    7b30:	mov	r2, #12
    7b34:	cmp	r3, #4
    7b38:	bne	7b54 <readstat_insert_float_value+0x34>
    7b3c:	ldr	r2, [r1, #1592]	; 0x638
    7b40:	ldr	r3, [r0, #72]	; 0x48
    7b44:	ldr	ip, [r0, #248]	; 0xf8
    7b48:	add	r0, r3, r2
    7b4c:	bx	ip
    7b50:	mov	r2, #14
    7b54:	mov	r0, r2
    7b58:	bx	lr

00007b5c <readstat_insert_double_value>:
    7b5c:	ldr	r2, [r0, #308]	; 0x134
    7b60:	cmp	r2, #0
    7b64:	beq	7b8c <readstat_insert_double_value+0x30>
    7b68:	ldr	r3, [r1]
    7b6c:	mov	r2, #12
    7b70:	cmp	r3, #5
    7b74:	bne	7b90 <readstat_insert_double_value+0x34>
    7b78:	ldr	r2, [r1, #1592]	; 0x638
    7b7c:	ldr	r3, [r0, #72]	; 0x48
    7b80:	ldr	ip, [r0, #252]	; 0xfc
    7b84:	add	r0, r3, r2
    7b88:	bx	ip
    7b8c:	mov	r2, #14
    7b90:	mov	r0, r2
    7b94:	bx	lr

00007b98 <readstat_insert_string_value>:
    7b98:	ldr	r3, [r0, #308]	; 0x134
    7b9c:	cmp	r3, #0
    7ba0:	beq	7bbc <readstat_insert_string_value+0x24>
    7ba4:	ldr	ip, [r1]
    7ba8:	mov	r3, #12
    7bac:	cmp	ip, #0
    7bb0:	beq	7bc8 <readstat_insert_string_value+0x30>
    7bb4:	mov	r0, r3
    7bb8:	bx	lr
    7bbc:	mov	r3, #14
    7bc0:	mov	r0, r3
    7bc4:	bx	lr
    7bc8:	push	{fp, lr}
    7bcc:	mov	fp, sp
    7bd0:	ldr	ip, [r1, #1592]	; 0x638
    7bd4:	ldr	r3, [r0, #72]	; 0x48
    7bd8:	ldr	lr, [r0, #256]	; 0x100
    7bdc:	add	r0, r3, ip
    7be0:	mov	r3, lr
    7be4:	pop	{fp, lr}
    7be8:	bx	r3

00007bec <readstat_insert_string_ref>:
    7bec:	ldr	r3, [r0, #308]	; 0x134
    7bf0:	cmp	r3, #0
    7bf4:	beq	7c88 <readstat_insert_string_ref+0x9c>
    7bf8:	ldr	ip, [r1]
    7bfc:	mov	r3, #12
    7c00:	cmp	ip, #6
    7c04:	bne	7c8c <readstat_insert_string_ref+0xa0>
    7c08:	ldr	r3, [r0, #260]	; 0x104
    7c0c:	cmp	r3, #0
    7c10:	moveq	r3, #33	; 0x21
    7c14:	moveq	r0, r3
    7c18:	bxeq	lr
    7c1c:	push	{r4, r5, r6, r7, fp, lr}
    7c20:	add	fp, sp, #16
    7c24:	cmp	r2, #0
    7c28:	beq	7c74 <readstat_insert_string_ref+0x88>
    7c2c:	mov	ip, r2
    7c30:	ldr	lr, [ip, #8]!
    7c34:	ldr	r4, [ip, #4]
    7c38:	and	r4, lr, r4
    7c3c:	cmn	r4, #1
    7c40:	bne	7c74 <readstat_insert_string_ref+0x88>
    7c44:	ldrd	r6, [r2]
    7c48:	mvn	r4, #0
    7c4c:	eor	r7, r7, r4
    7c50:	eor	r6, r6, r4
    7c54:	orrs	r7, r6, r7
    7c58:	bne	7c74 <readstat_insert_string_ref+0x88>
    7c5c:	ldr	r4, [r0, #84]	; 0x54
    7c60:	asr	r5, r4, #31
    7c64:	strd	r4, [ip]
    7c68:	ldr	r4, [r1, #4]
    7c6c:	asr	r5, r4, #31
    7c70:	strd	r4, [r2]
    7c74:	ldr	r7, [r1, #1592]	; 0x638
    7c78:	ldr	r0, [r0, #72]	; 0x48
    7c7c:	add	r0, r0, r7
    7c80:	pop	{r4, r5, r6, r7, fp, lr}
    7c84:	bx	r3
    7c88:	mov	r3, #14
    7c8c:	mov	r0, r3
    7c90:	bx	lr

00007c94 <readstat_insert_missing_value>:
    7c94:	ldr	r2, [r0, #308]	; 0x134
    7c98:	cmp	r2, #0
    7c9c:	moveq	r0, #14
    7ca0:	bxeq	lr
    7ca4:	ldr	r2, [r1]
    7ca8:	cmp	r2, #6
    7cac:	beq	7ccc <readstat_insert_missing_value+0x38>
    7cb0:	cmp	r2, #0
    7cb4:	ldr	r2, [r1, #1592]	; 0x638
    7cb8:	ldr	r3, [r0, #72]	; 0x48
    7cbc:	ldrne	ip, [r0, #268]	; 0x10c
    7cc0:	ldreq	ip, [r0, #264]	; 0x108
    7cc4:	add	r0, r3, r2
    7cc8:	bx	ip
    7ccc:	ldr	r3, [r0, #260]	; 0x104
    7cd0:	cmp	r3, #0
    7cd4:	moveq	r0, #33	; 0x21
    7cd8:	bxeq	lr
    7cdc:	ldr	r2, [r1, #1592]	; 0x638
    7ce0:	ldr	r0, [r0, #72]	; 0x48
    7ce4:	add	r0, r0, r2
    7ce8:	mov	r2, #0
    7cec:	bx	r3

00007cf0 <readstat_insert_tagged_missing_value>:
    7cf0:	ldr	r3, [r0, #308]	; 0x134
    7cf4:	cmp	r3, #0
    7cf8:	moveq	r0, #14
    7cfc:	bxeq	lr
    7d00:	ldr	r3, [r0, #272]	; 0x110
    7d04:	cmp	r3, #0
    7d08:	beq	7d1c <readstat_insert_tagged_missing_value+0x2c>
    7d0c:	ldr	ip, [r1, #1592]	; 0x638
    7d10:	ldr	r0, [r0, #72]	; 0x48
    7d14:	add	r0, r0, ip
    7d18:	bx	r3
    7d1c:	push	{fp, lr}
    7d20:	mov	fp, sp
    7d24:	ldr	r2, [r1, #1592]	; 0x638
    7d28:	ldr	r3, [r0, #72]	; 0x48
    7d2c:	ldr	ip, [r0, #268]	; 0x10c
    7d30:	add	r0, r3, r2
    7d34:	blx	ip
    7d38:	mov	r0, #23
    7d3c:	pop	{fp, pc}

00007d40 <readstat_end_row>:
    7d40:	push	{r4, sl, fp, lr}
    7d44:	add	fp, sp, #8
    7d48:	mov	r4, r0
    7d4c:	ldr	r0, [r0, #308]	; 0x134
    7d50:	cmp	r0, #0
    7d54:	moveq	r0, #14
    7d58:	popeq	{r4, sl, fp, pc}
    7d5c:	ldr	r1, [r4, #72]	; 0x48
    7d60:	ldr	r2, [r4, #76]	; 0x4c
    7d64:	ldr	r3, [r4, #280]	; 0x118
    7d68:	mov	r0, r4
    7d6c:	blx	r3
    7d70:	cmp	r0, #0
    7d74:	popne	{r4, sl, fp, pc}
    7d78:	ldr	r0, [r4, #84]	; 0x54
    7d7c:	add	r0, r0, #1
    7d80:	str	r0, [r4, #84]	; 0x54
    7d84:	mov	r0, #0
    7d88:	pop	{r4, sl, fp, pc}

00007d8c <readstat_end_writing>:
    7d8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7d90:	add	fp, sp, #28
    7d94:	sub	sp, sp, #4
    7d98:	mov	sl, r0
    7d9c:	ldr	r0, [r0, #308]	; 0x134
    7da0:	cmp	r0, #0
    7da4:	moveq	r0, #14
    7da8:	subeq	sp, fp, #28
    7dac:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7db0:	ldr	r2, [sl, #80]	; 0x50
    7db4:	ldr	r1, [sl, #84]	; 0x54
    7db8:	mov	r0, #9
    7dbc:	cmp	r1, r2
    7dc0:	bne	7e50 <readstat_end_writing+0xc4>
    7dc4:	cmp	r1, #0
    7dc8:	beq	7e40 <readstat_end_writing+0xb4>
    7dcc:	ldr	r1, [sl, #64]	; 0x40
    7dd0:	cmp	r1, #2
    7dd4:	blt	7e68 <readstat_end_writing+0xdc>
    7dd8:	ldr	r0, [sl, #60]	; 0x3c
    7ddc:	mov	r2, #1
    7de0:	ldr	r3, [r0]
    7de4:	ldm	r3, {r6, r9}
    7de8:	ldr	r4, [r0, r2, lsl #2]
    7dec:	ldm	r4, {r8, ip}
    7df0:	eor	r5, r9, ip
    7df4:	eor	r7, r6, r8
    7df8:	orrs	r7, r7, r5
    7dfc:	bne	7e18 <readstat_end_writing+0x8c>
    7e00:	ldr	r7, [r4, #8]
    7e04:	ldr	r3, [r3, #8]
    7e08:	subs	r3, r3, r7
    7e0c:	cmp	r3, #1
    7e10:	blt	7e24 <readstat_end_writing+0x98>
    7e14:	b	7e58 <readstat_end_writing+0xcc>
    7e18:	subs	r3, r6, r8
    7e1c:	cmp	r3, #1
    7e20:	bge	7e58 <readstat_end_writing+0xcc>
    7e24:	add	r2, r2, #1
    7e28:	mov	r6, r8
    7e2c:	mov	r9, ip
    7e30:	mov	r3, r4
    7e34:	cmp	r2, r1
    7e38:	blt	7de8 <readstat_end_writing+0x5c>
    7e3c:	b	7e68 <readstat_end_writing+0xdc>
    7e40:	mov	r0, sl
    7e44:	bl	7928 <readstat_begin_writing_data>
    7e48:	cmp	r0, #0
    7e4c:	beq	7dcc <readstat_end_writing+0x40>
    7e50:	sub	sp, fp, #28
    7e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7e58:	ldr	r3, [pc, #48]	; 7e90 <readstat_end_writing+0x104>
    7e5c:	mov	r2, #4
    7e60:	add	r3, pc, r3
    7e64:	bl	4d80 <qsort@plt>
    7e68:	ldr	r1, [sl, #284]	; 0x11c
    7e6c:	cmp	r1, #0
    7e70:	beq	7e84 <readstat_end_writing+0xf8>
    7e74:	mov	r0, sl
    7e78:	sub	sp, fp, #28
    7e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7e80:	bx	r1
    7e84:	mov	r0, #0
    7e88:	sub	sp, fp, #28
    7e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7e90:	.word	0x0000002c

00007e94 <readstat_compare_string_refs>:
    7e94:	push	{r4, r5, fp, lr}
    7e98:	add	fp, sp, #8
    7e9c:	ldr	r1, [r1]
    7ea0:	ldr	r0, [r0]
    7ea4:	ldrd	r2, [r1]
    7ea8:	ldrd	r4, [r0]
    7eac:	eor	r3, r5, r3
    7eb0:	eor	r5, r4, r2
    7eb4:	orrs	r3, r5, r3
    7eb8:	bne	7ecc <readstat_compare_string_refs+0x38>
    7ebc:	ldr	r1, [r1, #8]
    7ec0:	ldr	r0, [r0, #8]
    7ec4:	subs	r0, r0, r1
    7ec8:	pop	{r4, r5, fp, pc}
    7ecc:	subs	r0, r4, r2
    7ed0:	pop	{r4, r5, fp, pc}

00007ed4 <memreverse>:
    7ed4:	push	{r4, r5, fp, lr}
    7ed8:	add	fp, sp, #8
    7edc:	mov	r5, r1
    7ee0:	mov	r4, r0
    7ee4:	bl	4858 <machine_is_little_endian@plt>
    7ee8:	cmp	r0, #0
    7eec:	beq	7f20 <memreverse+0x4c>
    7ef0:	cmp	r5, #2
    7ef4:	poplt	{r4, r5, fp, pc}
    7ef8:	add	r0, r5, r5, lsr #31
    7efc:	add	r1, r4, r5
    7f00:	asr	r0, r0, #1
    7f04:	sub	r1, r1, #1
    7f08:	ldrb	r2, [r4]
    7f0c:	ldrb	r3, [r1]
    7f10:	subs	r0, r0, #1
    7f14:	strb	r3, [r4], #1
    7f18:	strb	r2, [r1], #-1
    7f1c:	bne	7f08 <memreverse+0x34>
    7f20:	pop	{r4, r5, fp, pc}

00007f24 <cnxptiee>:
    7f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7f28:	add	fp, sp, #28
    7f2c:	sub	sp, sp, #36	; 0x24
    7f30:	mov	r5, r3
    7f34:	mov	r8, r2
    7f38:	mov	r7, r1
    7f3c:	mov	r9, r0
    7f40:	cmp	r1, #0
    7f44:	bne	7f84 <cnxptiee+0x60>
    7f48:	ldr	r4, [pc, #1496]	; 8528 <cnxptiee+0x604>
    7f4c:	ldr	r6, [pc, #1496]	; 852c <cnxptiee+0x608>
    7f50:	mov	r7, #0
    7f54:	add	r4, pc, r4
    7f58:	add	r6, pc, r6
    7f5c:	cmp	r7, #2
    7f60:	bhi	8064 <cnxptiee+0x140>
    7f64:	mov	r0, r6
    7f68:	mov	r1, r4
    7f6c:	mov	r2, #8
    7f70:	bl	4930 <memcmp@plt>
    7f74:	add	r4, r4, #8
    7f78:	add	r7, r7, #1
    7f7c:	cmp	r0, #0
    7f80:	bne	7f5c <cnxptiee+0x38>
    7f84:	sub	r0, r7, #1
    7f88:	cmp	r0, #2
    7f8c:	bcc	7fec <cnxptiee+0xc8>
    7f90:	mvn	r0, #0
    7f94:	cmp	r7, #3
    7f98:	bne	8440 <cnxptiee+0x51c>
    7f9c:	cmp	r5, #3
    7fa0:	beq	8048 <cnxptiee+0x124>
    7fa4:	ldrb	r0, [r9, #7]
    7fa8:	mov	r7, #2
    7fac:	strb	r0, [sp, #16]
    7fb0:	ldrb	r0, [r9, #6]
    7fb4:	strb	r0, [sp, #17]
    7fb8:	ldrb	r0, [r9, #5]
    7fbc:	strb	r0, [sp, #18]
    7fc0:	ldrb	r0, [r9, #4]
    7fc4:	strb	r0, [sp, #19]
    7fc8:	ldrb	r0, [r9, #3]
    7fcc:	strb	r0, [sp, #20]
    7fd0:	ldrb	r0, [r9, #2]
    7fd4:	strb	r0, [sp, #21]
    7fd8:	ldrb	r0, [r9, #1]
    7fdc:	strb	r0, [sp, #22]
    7fe0:	ldrb	r0, [r9]
    7fe4:	add	r9, sp, #16
    7fe8:	strb	r0, [sp, #23]
    7fec:	cmp	r5, #0
    7ff0:	bne	8030 <cnxptiee+0x10c>
    7ff4:	ldr	r4, [pc, #1332]	; 8530 <cnxptiee+0x60c>
    7ff8:	ldr	r6, [pc, #1332]	; 8534 <cnxptiee+0x610>
    7ffc:	mov	r5, #0
    8000:	add	r4, pc, r4
    8004:	add	r6, pc, r6
    8008:	cmp	r5, #2
    800c:	bhi	81c4 <cnxptiee+0x2a0>
    8010:	mov	r0, r6
    8014:	mov	r1, r4
    8018:	mov	r2, #8
    801c:	bl	4930 <memcmp@plt>
    8020:	add	r4, r4, #8
    8024:	add	r5, r5, #1
    8028:	cmp	r0, #0
    802c:	bne	8008 <cnxptiee+0xe4>
    8030:	sub	r1, r5, #1
    8034:	mvn	r0, #1
    8038:	cmp	r1, #2
    803c:	bhi	8440 <cnxptiee+0x51c>
    8040:	cmp	r7, r5
    8044:	bne	8070 <cnxptiee+0x14c>
    8048:	ldr	r0, [r9]
    804c:	ldr	r1, [r9, #4]
    8050:	str	r1, [r8, #4]
    8054:	str	r0, [r8]
    8058:	mov	r0, #0
    805c:	sub	sp, fp, #28
    8060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8064:	mvn	r0, #0
    8068:	sub	sp, fp, #28
    806c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8070:	cmp	r7, #1
    8074:	beq	81d0 <cnxptiee+0x2ac>
    8078:	cmp	r7, #2
    807c:	bne	83ec <cnxptiee+0x4c8>
    8080:	cmp	r5, #1
    8084:	bne	8340 <cnxptiee+0x41c>
    8088:	ldrb	r4, [r9]
    808c:	ldrb	r6, [r9, #1]
    8090:	ldrb	sl, [r9, #2]
    8094:	ldrb	r5, [r9, #3]
    8098:	ldr	r7, [r9, #4]
    809c:	bl	4858 <machine_is_little_endian@plt>
    80a0:	mov	r9, r0
    80a4:	bl	4858 <machine_is_little_endian@plt>
    80a8:	mov	r1, #0
    80ac:	str	r1, [r8, #4]
    80b0:	str	r1, [r8]
    80b4:	and	r1, r6, r4
    80b8:	cmp	r1, #255	; 0xff
    80bc:	beq	8448 <cnxptiee+0x524>
    80c0:	mov	r1, #0
    80c4:	lsr	r3, r7, #24
    80c8:	cmp	r9, #0
    80cc:	mov	r2, r5
    80d0:	lsr	lr, r7, #16
    80d4:	lsr	ip, r7, #8
    80d8:	str	r1, [sp, #4]
    80dc:	mov	r1, sl
    80e0:	moveq	r2, r4
    80e4:	moveq	r4, r5
    80e8:	moveq	r1, r6
    80ec:	moveq	r6, sl
    80f0:	mov	sl, r3
    80f4:	cmp	r0, #0
    80f8:	mov	r3, r7
    80fc:	str	r4, [sp, #8]
    8100:	lsl	r9, r4, #24
    8104:	moveq	r3, sl
    8108:	moveq	sl, r7
    810c:	orr	r1, r2, r1, lsl #8
    8110:	orr	r2, r9, r6, lsl #16
    8114:	uxtb	r7, sl
    8118:	mov	r4, r3
    811c:	str	r3, [sp, #12]
    8120:	orr	r6, r1, r2
    8124:	orr	r7, r7, r3, lsl #24
    8128:	mov	r3, ip
    812c:	mov	r4, r6
    8130:	moveq	r3, lr
    8134:	cmp	r0, #0
    8138:	bfc	r4, #20, #12
    813c:	uxtb	r5, r3
    8140:	moveq	lr, ip
    8144:	orr	r7, r7, r5, lsl #16
    8148:	uxtb	r0, lr
    814c:	uxth	r5, r3
    8150:	orr	r7, r7, r0, lsl #8
    8154:	orrs	r0, r7, r6
    8158:	beq	8458 <cnxptiee+0x534>
    815c:	ubfx	r2, r2, #20, #11
    8160:	movw	r0, #1023	; 0x3ff
    8164:	orr	ip, r4, #1048576	; 0x100000
    8168:	sub	r0, r2, r0
    816c:	ands	r3, r0, #3
    8170:	beq	81a0 <cnxptiee+0x27c>
    8174:	ldr	r5, [sp, #12]
    8178:	rsb	r6, r3, #8
    817c:	lsl	r7, r7, r3
    8180:	lsr	lr, r7, #8
    8184:	mov	sl, r7
    8188:	and	r5, r5, #224	; 0xe0
    818c:	lsr	r6, r5, r6
    8190:	lsr	r5, r7, #16
    8194:	orr	ip, r6, ip, lsl r3
    8198:	lsr	r3, r7, #24
    819c:	str	r3, [sp, #12]
    81a0:	ldr	r6, [sp, #8]
    81a4:	movw	r3, #762	; 0x2fa
    81a8:	cmp	r2, r3
    81ac:	bhi	8464 <cnxptiee+0x540>
    81b0:	mov	r0, #0
    81b4:	str	r0, [r8, #4]
    81b8:	str	r0, [r8]
    81bc:	sub	sp, fp, #28
    81c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    81c4:	mvn	r0, #1
    81c8:	sub	sp, fp, #28
    81cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    81d0:	ldr	sl, [r9]
    81d4:	ldr	r9, [r9, #4]
    81d8:	mov	r0, #0
    81dc:	tst	sl, #255	; 0xff
    81e0:	str	r9, [sp, #28]
    81e4:	str	sl, [sp, #24]
    81e8:	str	r0, [r8, #4]
    81ec:	str	r0, [r8]
    81f0:	beq	8210 <cnxptiee+0x2ec>
    81f4:	add	r0, sp, #24
    81f8:	mov	r1, r8
    81fc:	mov	r2, #7
    8200:	orr	r0, r0, #1
    8204:	bl	4930 <memcmp@plt>
    8208:	cmp	r0, #0
    820c:	beq	83dc <cnxptiee+0x4b8>
    8210:	bl	4858 <machine_is_little_endian@plt>
    8214:	cmp	r0, #0
    8218:	mov	r1, sl
    821c:	lsr	r4, sl, #16
    8220:	lsr	r7, sl, #8
    8224:	mov	r6, sl
    8228:	lsrne	r1, r1, #24
    822c:	lsreq	r4, sl, #8
    8230:	lsreq	r7, sl, #16
    8234:	cmp	r0, #0
    8238:	str	r1, [sp, #12]
    823c:	lsreq	r6, sl, #24
    8240:	bl	4858 <machine_is_little_endian@plt>
    8244:	cmp	r0, #0
    8248:	beq	8268 <cnxptiee+0x344>
    824c:	lsl	r1, r9, #24
    8250:	mov	r0, #65280	; 0xff00
    8254:	and	r2, r9, #65280	; 0xff00
    8258:	orr	r1, r1, r9, lsr #24
    825c:	and	r0, r0, r9, lsr #8
    8260:	orr	r1, r1, r2, lsl #8
    8264:	orr	r9, r1, r0
    8268:	ldr	ip, [sp, #12]
    826c:	lsl	r2, r4, #8
    8270:	uxth	r2, r2
    8274:	uxtb	r0, ip
    8278:	bfi	r0, r7, #16, #8
    827c:	orr	r1, r0, r6, lsl #24
    8280:	orr	r3, r1, r2
    8284:	lsl	r1, r6, #24
    8288:	bic	r4, r3, #-2147483648	; 0x80000000
    828c:	cmn	r4, #-2147483647	; 0x80000001
    8290:	cmneq	r9, #1
    8294:	beq	8354 <cnxptiee+0x430>
    8298:	orrs	r3, r9, r3
    829c:	beq	83ec <cnxptiee+0x4c8>
    82a0:	orr	r0, r0, r2
    82a4:	mov	r2, #3
    82a8:	tst	r7, #128	; 0x80
    82ac:	bne	82c4 <cnxptiee+0x3a0>
    82b0:	mov	r2, #2
    82b4:	tst	r7, #64	; 0x40
    82b8:	moveq	r2, #1
    82bc:	tsteq	r7, #32
    82c0:	beq	8520 <cnxptiee+0x5fc>
    82c4:	rsb	r3, r2, #32
    82c8:	and	r7, ip, #7
    82cc:	lsr	r0, r0, r2
    82d0:	lsl	r3, r7, r3
    82d4:	orr	r9, r3, r9, lsr r2
    82d8:	and	r1, r1, #-2147483648	; 0x80000000
    82dc:	bic	r3, r0, #1048576	; 0x100000
    82e0:	movw	r7, #3836	; 0xefc
    82e4:	lsl	r6, r0, #24
    82e8:	lsl	r0, r0, #8
    82ec:	orr	r1, r3, r1
    82f0:	and	r3, sl, #127	; 0x7f
    82f4:	add	r3, r7, r3, lsl #2
    82f8:	uxtb16	r7, r0
    82fc:	orr	r2, r2, r3
    8300:	movw	r3, #0
    8304:	movt	r3, #16368	; 0x3ff0
    8308:	add	r2, r3, r2, lsl #20
    830c:	orr	r4, r1, r2
    8310:	mov	r1, #65280	; 0xff00
    8314:	and	sl, r1, r4, lsr #8
    8318:	and	r1, r1, r9, lsr #8
    831c:	str	r1, [sp, #12]
    8320:	lsl	r1, r9, #24
    8324:	str	r1, [sp, #8]
    8328:	lsr	r1, r9, #24
    832c:	str	r1, [sp, #4]
    8330:	lsl	r1, r9, #8
    8334:	uxtb16	r1, r1
    8338:	str	r1, [sp]
    833c:	b	8394 <cnxptiee+0x470>
    8340:	ldr	r0, [r9]
    8344:	ldr	r1, [r9, #4]
    8348:	str	r1, [r8, #4]
    834c:	str	r0, [r8]
    8350:	b	83ec <cnxptiee+0x4c8>
    8354:	movw	r0, #0
    8358:	mov	sl, #61440	; 0xf000
    835c:	mov	r9, #0
    8360:	mov	r7, #0
    8364:	mov	r6, #0
    8368:	movt	r0, #16368	; 0x3ff0
    836c:	add	r0, r0, #1073741824	; 0x40000000
    8370:	orr	r4, r1, r0
    8374:	mov	r0, #0
    8378:	str	r0, [sp, #12]
    837c:	mov	r0, #0
    8380:	str	r0, [sp]
    8384:	mov	r0, #0
    8388:	str	r0, [sp, #4]
    838c:	mov	r0, #0
    8390:	str	r0, [sp, #8]
    8394:	bl	4858 <machine_is_little_endian@plt>
    8398:	cmp	r0, #0
    839c:	orrne	r0, sl, r4, lsr #24
    83a0:	orrne	r0, r0, r7
    83a4:	orrne	r4, r0, r6
    83a8:	str	r4, [r8]
    83ac:	bl	4858 <machine_is_little_endian@plt>
    83b0:	cmp	r0, #0
    83b4:	beq	83d4 <cnxptiee+0x4b0>
    83b8:	ldr	r0, [sp, #12]
    83bc:	ldr	r1, [sp]
    83c0:	orr	r0, r1, r0
    83c4:	ldr	r1, [sp, #4]
    83c8:	orr	r0, r0, r1
    83cc:	ldr	r1, [sp, #8]
    83d0:	orr	r9, r0, r1
    83d4:	str	r9, [r8, #4]
    83d8:	b	83ec <cnxptiee+0x4c8>
    83dc:	movw	r0, #65535	; 0xffff
    83e0:	strh	r0, [r8]
    83e4:	mvn	r0, sl
    83e8:	strb	r0, [r8, #2]
    83ec:	mov	r0, #0
    83f0:	cmp	r5, #3
    83f4:	bne	8440 <cnxptiee+0x51c>
    83f8:	ldr	r2, [r8, #4]
    83fc:	ldr	r1, [r8]
    8400:	lsr	r3, r2, #16
    8404:	str	r2, [sp, #20]
    8408:	str	r1, [sp, #16]
    840c:	strb	r3, [r8, #1]
    8410:	lsr	r3, r2, #24
    8414:	strb	r3, [r8]
    8418:	lsr	r3, r2, #8
    841c:	strb	r3, [r8, #2]
    8420:	strb	r2, [r8, #3]
    8424:	lsr	r2, r1, #24
    8428:	strb	r2, [r8, #4]
    842c:	lsr	r2, r1, #16
    8430:	strb	r2, [r8, #5]
    8434:	lsr	r2, r1, #8
    8438:	strb	r2, [r8, #6]
    843c:	strb	r1, [r8, #7]
    8440:	sub	sp, fp, #28
    8444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8448:	mvn	r0, sl
    844c:	cmp	sl, #45	; 0x2d
    8450:	movweq	r0, #109	; 0x6d
    8454:	b	848c <cnxptiee+0x568>
    8458:	str	lr, [sp, #8]
    845c:	mov	r9, r4
    8460:	b	84c0 <cnxptiee+0x59c>
    8464:	lsr	r2, r2, #3
    8468:	cmp	r2, #159	; 0x9f
    846c:	bcc	8494 <cnxptiee+0x570>
    8470:	mov	r0, #255	; 0xff
    8474:	strb	r0, [r8, #7]
    8478:	movw	r0, #65535	; 0xffff
    847c:	strh	r0, [r8, #5]
    8480:	mvn	r0, #0
    8484:	str	r0, [r8, #1]
    8488:	orr	r0, r6, #127	; 0x7f
    848c:	strb	r0, [r8]
    8490:	b	8058 <cnxptiee+0x134>
    8494:	mov	r2, #-16777216	; 0xff000000
    8498:	and	r1, r9, #-2147483648	; 0x80000000
    849c:	mov	r9, ip
    84a0:	mov	r6, ip
    84a4:	str	lr, [sp, #8]
    84a8:	and	r0, r2, r0, lsl #22
    84ac:	add	r0, r0, #1090519040	; 0x41000000
    84b0:	orr	r0, r0, r1
    84b4:	orr	r4, r0, ip
    84b8:	lsr	r0, r4, #24
    84bc:	str	r0, [sp, #4]
    84c0:	bl	4858 <machine_is_little_endian@plt>
    84c4:	cmp	r0, #0
    84c8:	beq	84e8 <cnxptiee+0x5c4>
    84cc:	ldr	r1, [sp, #4]
    84d0:	mov	r0, #65280	; 0xff00
    84d4:	and	r0, r0, r9, lsr #8
    84d8:	orr	r0, r0, r6, lsl #24
    84dc:	orr	r0, r0, r1
    84e0:	and	r1, r6, #65280	; 0xff00
    84e4:	orr	r4, r0, r1, lsl #8
    84e8:	str	r4, [r8]
    84ec:	bl	4858 <machine_is_little_endian@plt>
    84f0:	cmp	r0, #0
    84f4:	beq	8518 <cnxptiee+0x5f4>
    84f8:	ldr	r1, [sp, #8]
    84fc:	lsl	r0, r5, #8
    8500:	uxth	r0, r0
    8504:	bfi	r0, r1, #16, #8
    8508:	ldr	r1, [sp, #12]
    850c:	uxtb	r1, r1
    8510:	orr	r0, r0, r1
    8514:	orr	r7, r0, sl, lsl #24
    8518:	str	r7, [r8, #4]
    851c:	b	8058 <cnxptiee+0x134>
    8520:	mov	r2, #0
    8524:	b	82d8 <cnxptiee+0x3b4>
    8528:	.word	0x0004138c
    852c:	.word	0x000413a0
    8530:	.word	0x000412e0
    8534:	.word	0x000412f4

00008538 <get_native>:
    8538:	push	{r4, r5, r6, sl, fp, lr}
    853c:	add	fp, sp, #16
    8540:	ldr	r5, [pc, #76]	; 8594 <get_native+0x5c>
    8544:	ldr	r6, [pc, #76]	; 8598 <get_native+0x60>
    8548:	mov	r4, #0
    854c:	add	r5, pc, r5
    8550:	add	r6, pc, r6
    8554:	cmp	r4, #2
    8558:	bhi	8588 <get_native+0x50>
    855c:	mov	r0, r6
    8560:	mov	r1, r5
    8564:	mov	r2, #8
    8568:	bl	4930 <memcmp@plt>
    856c:	add	r4, r4, #1
    8570:	cmp	r0, #0
    8574:	add	r5, r5, #8
    8578:	moveq	r0, r4
    857c:	popeq	{r4, r5, r6, sl, fp, pc}
    8580:	cmp	r4, #2
    8584:	bls	855c <get_native+0x24>
    8588:	mvn	r4, #0
    858c:	mov	r0, r4
    8590:	pop	{r4, r5, r6, sl, fp, pc}
    8594:	.word	0x00040d94
    8598:	.word	0x00040da8
    859c:	.word	0x00000000

000085a0 <sas_read8>:
    85a0:	mov	r2, r1
    85a4:	mov	r1, r0
    85a8:	ldr	r0, [r0]
    85ac:	ldr	r1, [r1, #4]
    85b0:	cmp	r2, #0
    85b4:	bxeq	lr
    85b8:	b	4750 <byteswap8@plt>

000085bc <sas_read4>:
    85bc:	ldr	r0, [r0]
    85c0:	cmp	r1, #0
    85c4:	bxeq	lr
    85c8:	b	4768 <byteswap4@plt>

000085cc <sas_read2>:
    85cc:	ldrh	r0, [r0]
    85d0:	cmp	r1, #0
    85d4:	bxeq	lr
    85d8:	b	484c <byteswap2@plt>

000085dc <sas_subheader_remainder>:
    85dc:	sub	r0, r0, r1, lsl #1
    85e0:	sub	r0, r0, #4
    85e4:	bx	lr
    85e8:	nop	{0}
    85ec:	nop	{0}

000085f0 <sas_read_header>:
    85f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    85f4:	add	fp, sp, #28
    85f8:	sub	sp, sp, #4
    85fc:	vpush	{d8-d9}
    8600:	sub	sp, sp, #392	; 0x188
    8604:	sub	sp, sp, #1024	; 0x400
    8608:	mov	r6, r0
    860c:	add	r0, sp, #56	; 0x38
    8610:	mov	r7, r1
    8614:	vmov.i32	q8, #0	; 0x00000000
    8618:	mov	r4, r2
    861c:	mov	r5, r3
    8620:	add	r1, r0, #16
    8624:	mov	r2, r0
    8628:	vst1.64	{d16-d17}, [r1]
    862c:	add	r1, r0, #28
    8630:	vst1.32	{d16-d17}, [r1]
    8634:	mov	r1, #20
    8638:	vst1.64	{d16-d17}, [r2], r1
    863c:	mov	r1, #60	; 0x3c
    8640:	str	r1, [r2]
    8644:	mov	r1, #1
    8648:	str	r1, [sp, #68]	; 0x44
    864c:	bl	47f8 <mktime@plt>
    8650:	ldr	r3, [r6, #12]
    8654:	ldr	r2, [r6, #20]
    8658:	mov	sl, r0
    865c:	sub	r0, fp, #216	; 0xd8
    8660:	mov	r1, #164	; 0xa4
    8664:	blx	r3
    8668:	cmp	r0, #164	; 0xa4
    866c:	bcs	8678 <sas_read_header+0x88>
    8670:	mov	r4, #2
    8674:	b	8b90 <sas_read_header+0x5a0>
    8678:	str	r4, [sp, #16]
    867c:	sub	r9, fp, #216	; 0xd8
    8680:	mov	r2, #32
    8684:	ldr	r1, [pc, #1364]	; 8be0 <sas_read_header+0x5f0>
    8688:	mov	r0, r9
    868c:	ldr	r1, [pc, r1]
    8690:	bl	4930 <memcmp@plt>
    8694:	cmp	r0, #0
    8698:	beq	86bc <sas_read_header+0xcc>
    869c:	ldr	r1, [pc, #1344]	; 8be4 <sas_read_header+0x5f4>
    86a0:	sub	r0, fp, #216	; 0xd8
    86a4:	mov	r2, #32
    86a8:	ldr	r1, [pc, r1]
    86ac:	bl	4930 <memcmp@plt>
    86b0:	mov	r4, #5
    86b4:	cmp	r0, #0
    86b8:	bne	8b90 <sas_read_header+0x5a0>
    86bc:	ldrb	r0, [fp, #-181]	; 0xffffff4b
    86c0:	mov	r4, #5
    86c4:	cmp	r0, #51	; 0x33
    86c8:	moveq	r0, #4
    86cc:	streq	r0, [r7, #24]
    86d0:	ldrb	r0, [fp, #-184]	; 0xffffff48
    86d4:	cmp	r0, #51	; 0x33
    86d8:	moveq	r0, #1
    86dc:	streq	r0, [r7, #4]
    86e0:	ldrb	r0, [fp, #-179]	; 0xffffff4d
    86e4:	cmp	r0, #1
    86e8:	beq	8700 <sas_read_header+0x110>
    86ec:	cmp	r0, #0
    86f0:	bne	8b90 <sas_read_header+0x5a0>
    86f4:	mov	r8, #0
    86f8:	bl	4858 <machine_is_little_endian@plt>
    86fc:	b	8710 <sas_read_header+0x120>
    8700:	bl	4858 <machine_is_little_endian@plt>
    8704:	clz	r0, r0
    8708:	mov	r8, #1
    870c:	lsr	r0, r0, #5
    8710:	str	r0, [sp, #12]
    8714:	str	r8, [r7]
    8718:	mov	r1, #0
    871c:	mov	r8, r5
    8720:	ldr	r0, [pc, #1216]	; 8be8 <sas_read_header+0x5f8>
    8724:	ldrb	r3, [fp, #-146]	; 0xffffff6e
    8728:	add	r0, pc, r0
    872c:	add	r0, r0, #4
    8730:	ldr	r2, [r0, #-4]
    8734:	cmp	r2, r3
    8738:	beq	8790 <sas_read_header+0x1a0>
    873c:	add	r1, r1, #1
    8740:	add	r0, r0, #36	; 0x24
    8744:	cmp	r1, #62	; 0x3e
    8748:	bcc	8730 <sas_read_header+0x140>
    874c:	ldr	r0, [r7, #144]	; 0x90
    8750:	cmp	r0, #0
    8754:	bne	8794 <sas_read_header+0x1a4>
    8758:	ldr	r6, [sp, #16]
    875c:	mov	r4, #7
    8760:	cmp	r6, #0
    8764:	beq	8b90 <sas_read_header+0x5a0>
    8768:	ldr	r2, [pc, #1148]	; 8bec <sas_read_header+0x5fc>
    876c:	add	r5, sp, #104	; 0x68
    8770:	mov	r1, #1024	; 0x400
    8774:	mov	r0, r5
    8778:	add	r2, pc, r2
    877c:	bl	4bdc <snprintf@plt>
    8780:	mov	r0, r5
    8784:	mov	r1, r8
    8788:	blx	r6
    878c:	b	8b90 <sas_read_header+0x5a0>
    8790:	str	r0, [r7, #144]	; 0x90
    8794:	add	r3, r9, #124	; 0x7c
    8798:	add	r1, r9, #108	; 0x6c
    879c:	add	r0, r9, #92	; 0x5c
    87a0:	add	r2, r9, #140	; 0x8c
    87a4:	vld1.32	{d18-d19}, [r3]
    87a8:	vld1.32	{d20-d21}, [r1]
    87ac:	vld1.32	{d16-d17}, [r2]
    87b0:	vld1.32	{d22-d23}, [r0]
    87b4:	add	r0, r7, #112	; 0x70
    87b8:	add	r2, r7, #128	; 0x80
    87bc:	mov	r1, #1
    87c0:	vst1.8	{d18-d19}, [r0]
    87c4:	add	r0, r7, #96	; 0x60
    87c8:	vst1.8	{d16-d17}, [r2]
    87cc:	vst1.8	{d20-d21}, [r0]
    87d0:	add	r0, r7, #80	; 0x50
    87d4:	vst1.8	{d22-d23}, [r0]
    87d8:	ldr	r0, [r7, #24]
    87dc:	ldr	r3, [r6, #8]
    87e0:	ldr	r2, [r6, #20]
    87e4:	blx	r3
    87e8:	cmn	r0, #1
    87ec:	beq	8b8c <sas_read_header+0x59c>
    87f0:	ldr	r3, [r6, #12]
    87f4:	ldr	r2, [r6, #20]
    87f8:	add	r0, sp, #48	; 0x30
    87fc:	mov	r1, #8
    8800:	blx	r3
    8804:	cmp	r0, #8
    8808:	bcc	8670 <sas_read_header+0x80>
    880c:	ldr	r9, [sp, #12]
    8810:	cmp	r9, #0
    8814:	beq	8824 <sas_read_header+0x234>
    8818:	vldr	d0, [sp, #48]	; 0x30
    881c:	bl	4e40 <byteswap_double@plt>
    8820:	vstr	d0, [sp, #48]	; 0x30
    8824:	ldr	r3, [r6, #12]
    8828:	ldr	r2, [r6, #20]
    882c:	add	r0, sp, #40	; 0x28
    8830:	mov	r1, #8
    8834:	blx	r3
    8838:	cmp	r0, #8
    883c:	bcc	8670 <sas_read_header+0x80>
    8840:	cmp	r9, #0
    8844:	beq	8854 <sas_read_header+0x264>
    8848:	vldr	d0, [sp, #40]	; 0x28
    884c:	bl	4e40 <byteswap_double@plt>
    8850:	vstr	d0, [sp, #40]	; 0x28
    8854:	vldr	d16, [sp, #48]	; 0x30
    8858:	vmov	s0, sl
    885c:	vcvt.f64.s32	d9, s0
    8860:	vadd.f64	d8, d16, d9
    8864:	vmov.f64	d0, d8
    8868:	bl	4c84 <__isnan@plt>
    886c:	cmp	r0, #0
    8870:	mov	r5, #0
    8874:	mov	r0, #0
    8878:	bne	88a8 <sas_read_header+0x2b8>
    887c:	vldr	d16, [pc, #844]	; 8bd0 <sas_read_header+0x5e0>
    8880:	mvn	r0, #-2147483648	; 0x80000000
    8884:	vcmpe.f64	d8, d16
    8888:	vmrs	APSR_nzcv, fpscr
    888c:	bgt	88a8 <sas_read_header+0x2b8>
    8890:	vldr	d16, [pc, #832]	; 8bd8 <sas_read_header+0x5e8>
    8894:	mov	r0, #-2147483648	; 0x80000000
    8898:	vcmpe.f64	d8, d16
    889c:	vmrs	APSR_nzcv, fpscr
    88a0:	vcvtpl.s32.f64	s0, d8
    88a4:	vmovpl	r0, s0
    88a8:	str	r0, [r7, #72]	; 0x48
    88ac:	vldr	d16, [sp, #40]	; 0x28
    88b0:	vadd.f64	d8, d16, d9
    88b4:	vmov.f64	d0, d8
    88b8:	bl	4c84 <__isnan@plt>
    88bc:	cmp	r0, #0
    88c0:	bne	88f0 <sas_read_header+0x300>
    88c4:	vldr	d16, [pc, #772]	; 8bd0 <sas_read_header+0x5e0>
    88c8:	mvn	r5, #-2147483648	; 0x80000000
    88cc:	vcmpe.f64	d8, d16
    88d0:	vmrs	APSR_nzcv, fpscr
    88d4:	bgt	88f0 <sas_read_header+0x300>
    88d8:	vldr	d16, [pc, #760]	; 8bd8 <sas_read_header+0x5e8>
    88dc:	mov	r5, #-2147483648	; 0x80000000
    88e0:	vcmpe.f64	d8, d16
    88e4:	vmrs	APSR_nzcv, fpscr
    88e8:	vcvtpl.s32.f64	s0, d8
    88ec:	vmovpl	r5, s0
    88f0:	str	r5, [r7, #76]	; 0x4c
    88f4:	mov	r0, #16
    88f8:	mov	r1, #1
    88fc:	ldr	r3, [r6, #8]
    8900:	ldr	r2, [r6, #20]
    8904:	blx	r3
    8908:	cmn	r0, #1
    890c:	beq	8b8c <sas_read_header+0x59c>
    8910:	ldr	r3, [r6, #12]
    8914:	ldr	r2, [r6, #20]
    8918:	add	r0, sp, #36	; 0x24
    891c:	mov	r1, #4
    8920:	blx	r3
    8924:	cmp	r0, #4
    8928:	bcc	8670 <sas_read_header+0x80>
    892c:	ldr	r3, [r6, #12]
    8930:	ldr	r2, [r6, #20]
    8934:	add	r0, sp, #32
    8938:	mov	r1, #4
    893c:	blx	r3
    8940:	cmp	r0, #4
    8944:	bcc	8670 <sas_read_header+0x80>
    8948:	ldr	r0, [sp, #36]	; 0x24
    894c:	cmp	r9, #0
    8950:	beq	897c <sas_read_header+0x38c>
    8954:	bl	4768 <byteswap4@plt>
    8958:	mov	r9, r7
    895c:	str	r0, [r9, #64]!	; 0x40
    8960:	mov	r0, #0
    8964:	str	r0, [r9, #4]
    8968:	ldr	r0, [sp, #32]
    896c:	bl	4768 <byteswap4@plt>
    8970:	mov	r2, r0
    8974:	ldrd	r0, [r9]
    8978:	b	8990 <sas_read_header+0x3a0>
    897c:	mov	r9, r7
    8980:	mov	r1, #0
    8984:	str	r0, [r9, #64]!	; 0x40
    8988:	str	r1, [r9, #4]
    898c:	ldr	r2, [sp, #32]
    8990:	mov	r3, #0
    8994:	cmp	r2, #1024	; 0x400
    8998:	strd	r2, [r7, #32]
    899c:	bcc	8b90 <sas_read_header+0x5a0>
    89a0:	subs	r3, r0, #1024	; 0x400
    89a4:	sbcs	r3, r1, #0
    89a8:	blt	8b90 <sas_read_header+0x5a0>
    89ac:	cmp	r2, #16777216	; 0x1000000
    89b0:	bhi	8b90 <sas_read_header+0x5a0>
    89b4:	rsbs	r0, r0, #1048576	; 0x100000
    89b8:	rscs	r0, r1, #0
    89bc:	blt	8b90 <sas_read_header+0x5a0>
    89c0:	ldr	r1, [r7, #4]
    89c4:	add	r0, r7, #40	; 0x28
    89c8:	cmp	r1, #0
    89cc:	beq	8a14 <sas_read_header+0x424>
    89d0:	add	r1, pc, #472	; 0x1d8
    89d4:	vld1.64	{d16-d17}, [r1 :128]
    89d8:	mov	r1, #8
    89dc:	vst1.64	{d16-d17}, [r0]
    89e0:	add	r0, sp, #104	; 0x68
    89e4:	ldr	r3, [r6, #12]
    89e8:	ldr	r2, [r6, #20]
    89ec:	blx	r3
    89f0:	cmp	r0, #8
    89f4:	bcc	8670 <sas_read_header+0x80>
    89f8:	ldr	r2, [sp, #12]
    89fc:	ldr	r0, [sp, #104]	; 0x68
    8a00:	ldr	r1, [sp, #108]	; 0x6c
    8a04:	cmp	r2, #0
    8a08:	beq	8a54 <sas_read_header+0x464>
    8a0c:	bl	4750 <byteswap8@plt>
    8a10:	b	8a54 <sas_read_header+0x464>
    8a14:	add	r1, pc, #420	; 0x1a4
    8a18:	vld1.64	{d16-d17}, [r1 :128]
    8a1c:	mov	r1, #4
    8a20:	vst1.64	{d16-d17}, [r0]
    8a24:	add	r0, sp, #104	; 0x68
    8a28:	ldr	r3, [r6, #12]
    8a2c:	ldr	r2, [r6, #20]
    8a30:	blx	r3
    8a34:	cmp	r0, #4
    8a38:	bcc	8670 <sas_read_header+0x80>
    8a3c:	ldr	r1, [sp, #12]
    8a40:	ldr	r0, [sp, #104]	; 0x68
    8a44:	cmp	r1, #0
    8a48:	beq	8a50 <sas_read_header+0x460>
    8a4c:	bl	4768 <byteswap4@plt>
    8a50:	mov	r1, #0
    8a54:	strd	r0, [r7, #56]	; 0x38
    8a58:	rsbs	r0, r0, #16777216	; 0x1000000
    8a5c:	rscs	r0, r1, #0
    8a60:	blt	8b90 <sas_read_header+0x5a0>
    8a64:	ldr	r3, [r6, #8]
    8a68:	ldr	r2, [r6, #20]
    8a6c:	mov	r0, #8
    8a70:	mov	r1, #1
    8a74:	blx	r3
    8a78:	cmn	r0, #1
    8a7c:	beq	8b58 <sas_read_header+0x568>
    8a80:	ldr	r3, [r6, #12]
    8a84:	ldr	r2, [r6, #20]
    8a88:	sub	r0, fp, #336	; 0x150
    8a8c:	mov	r1, #120	; 0x78
    8a90:	blx	r3
    8a94:	cmp	r0, #120	; 0x78
    8a98:	mov	r4, #2
    8a9c:	bcc	8b90 <sas_read_header+0x5a0>
    8aa0:	add	r0, sp, #20
    8aa4:	add	r2, sp, #28
    8aa8:	add	r3, sp, #24
    8aac:	str	r0, [sp]
    8ab0:	sub	r0, fp, #336	; 0x150
    8ab4:	ldr	r1, [pc, #312]	; 8bf4 <sas_read_header+0x604>
    8ab8:	add	r1, pc, r1
    8abc:	bl	4be8 <__isoc99_sscanf@plt>
    8ac0:	cmp	r0, #3
    8ac4:	mov	r4, #5
    8ac8:	bne	8b90 <sas_read_header+0x5a0>
    8acc:	ldr	r0, [sp, #28]
    8ad0:	ldr	r1, [sp, #24]
    8ad4:	ldr	r2, [sp, #20]
    8ad8:	mov	r4, #0
    8adc:	orr	r5, r0, #1
    8ae0:	orr	r3, r2, r1
    8ae4:	eor	r5, r5, #9
    8ae8:	orrs	r3, r5, r3
    8aec:	movwne	r3, #1
    8af0:	str	r3, [r7, #8]
    8af4:	add	r3, r7, #12
    8af8:	stm	r3, {r0, r1, r2}
    8afc:	mov	r1, #0
    8b00:	ldr	r0, [r9]
    8b04:	ldr	r3, [r6, #8]
    8b08:	ldr	r2, [r6, #20]
    8b0c:	blx	r3
    8b10:	cmn	r0, #1
    8b14:	bne	8b90 <sas_read_header+0x5a0>
    8b18:	ldr	r0, [sp, #16]
    8b1c:	cmp	r0, #0
    8b20:	beq	8b8c <sas_read_header+0x59c>
    8b24:	ldrd	r0, [r9]
    8b28:	add	r4, sp, #104	; 0x68
    8b2c:	stm	sp, {r0, r1}
    8b30:	mov	r0, r4
    8b34:	mov	r1, #1024	; 0x400
    8b38:	ldr	r2, [pc, #184]	; 8bf8 <sas_read_header+0x608>
    8b3c:	add	r2, pc, r2
    8b40:	bl	4bdc <snprintf@plt>
    8b44:	ldr	r2, [sp, #16]
    8b48:	mov	r0, r4
    8b4c:	mov	r1, r8
    8b50:	blx	r2
    8b54:	b	8b8c <sas_read_header+0x59c>
    8b58:	ldr	r5, [sp, #16]
    8b5c:	cmp	r5, #0
    8b60:	beq	8b8c <sas_read_header+0x59c>
    8b64:	ldr	r2, [pc, #132]	; 8bf0 <sas_read_header+0x600>
    8b68:	add	r4, sp, #104	; 0x68
    8b6c:	mov	r1, #1024	; 0x400
    8b70:	mov	r3, #8
    8b74:	mov	r0, r4
    8b78:	add	r2, pc, r2
    8b7c:	bl	4bdc <snprintf@plt>
    8b80:	mov	r0, r4
    8b84:	mov	r1, r8
    8b88:	blx	r5
    8b8c:	mov	r4, #15
    8b90:	mov	r0, r4
    8b94:	sub	sp, fp, #48	; 0x30
    8b98:	vpop	{d8-d9}
    8b9c:	add	sp, sp, #4
    8ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8ba4:	nop	{0}
    8ba8:	nop	{0}
    8bac:	nop	{0}
    8bb0:	.word	0x00000028
    8bb4:	.word	0x00000000
    8bb8:	.word	0x00000018
    8bbc:	.word	0x00000000
    8bc0:	.word	0x00000018
    8bc4:	.word	0x00000000
    8bc8:	.word	0x0000000c
    8bcc:	.word	0x00000000
    8bd0:	.word	0xffc00000
    8bd4:	.word	0x41dfffff
    8bd8:	.word	0x00000000
    8bdc:	.word	0xc1e00000
    8be0:	.word	0x00040c28
    8be4:	.word	0x00040be0
    8be8:	.word	0x00040c18
    8bec:	.word	0x00020b48
    8bf0:	.word	0x0002076b
    8bf4:	.word	0x00020852
    8bf8:	.word	0x000207db

00008bfc <sas_write_header>:
    8bfc:	sub	sp, sp, #8
    8c00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8c04:	add	fp, sp, #28
    8c08:	sub	sp, sp, #228	; 0xe4
    8c0c:	mov	sl, r0
    8c10:	sub	r0, fp, #80	; 0x50
    8c14:	mov	r8, r1
    8c18:	vmov.i32	q8, #0	; 0x00000000
    8c1c:	str	r2, [fp, #8]
    8c20:	str	r3, [fp, #12]
    8c24:	add	r1, r0, #16
    8c28:	mov	r2, r0
    8c2c:	vst1.64	{d16-d17}, [r1]
    8c30:	add	r1, r0, #28
    8c34:	vst1.32	{d16-d17}, [r1]
    8c38:	mov	r1, #20
    8c3c:	vst1.64	{d16-d17}, [r2], r1
    8c40:	mov	r1, #60	; 0x3c
    8c44:	str	r1, [r2]
    8c48:	mov	r1, #1
    8c4c:	str	r1, [fp, #-68]	; 0xffffffbc
    8c50:	bl	47f8 <mktime@plt>
    8c54:	add	r7, fp, #8
    8c58:	mov	r9, r0
    8c5c:	mov	r1, #32
    8c60:	mov	r2, #64	; 0x40
    8c64:	mov	r6, #64	; 0x40
    8c68:	add	r5, r7, #92	; 0x5c
    8c6c:	mov	r0, r5
    8c70:	bl	4c00 <memset@plt>
    8c74:	add	r4, sl, #88	; 0x58
    8c78:	mov	r0, r4
    8c7c:	bl	4b58 <strlen@plt>
    8c80:	cmp	r0, #64	; 0x40
    8c84:	movcc	r6, r0
    8c88:	cmp	r6, #0
    8c8c:	beq	8ca4 <sas_write_header+0xa8>
    8c90:	mov	r0, r5
    8c94:	mov	r1, r4
    8c98:	mov	r2, r6
    8c9c:	bl	48b8 <memcpy@plt>
    8ca0:	b	8cc0 <sas_write_header+0xc4>
    8ca4:	mov	r0, #84	; 0x54
    8ca8:	strb	r0, [r5, #6]
    8cac:	movw	r0, #17747	; 0x4553
    8cb0:	strh	r0, [r5, #4]
    8cb4:	movw	r0, #16708	; 0x4144
    8cb8:	movt	r0, #16724	; 0x4154
    8cbc:	str	r0, [r5]
    8cc0:	mov	r0, sl
    8cc4:	mov	r1, r7
    8cc8:	mov	r2, #164	; 0xa4
    8ccc:	bl	4d98 <readstat_write_bytes@plt>
    8cd0:	cmp	r0, #0
    8cd4:	bne	8e90 <sas_write_header+0x294>
    8cd8:	ldr	r1, [r8, #24]
    8cdc:	mov	r0, sl
    8ce0:	bl	49a8 <readstat_write_zeros@plt>
    8ce4:	cmp	r0, #0
    8ce8:	bne	8e90 <sas_write_header+0x294>
    8cec:	ldr	r0, [r8, #72]	; 0x48
    8cf0:	sub	r1, fp, #88	; 0x58
    8cf4:	mov	r2, #8
    8cf8:	sub	r0, r0, r9
    8cfc:	vmov	s0, r0
    8d00:	mov	r0, sl
    8d04:	vcvt.f64.s32	d16, s0
    8d08:	vstr	d16, [fp, #-88]	; 0xffffffa8
    8d0c:	bl	4d98 <readstat_write_bytes@plt>
    8d10:	cmp	r0, #0
    8d14:	bne	8e90 <sas_write_header+0x294>
    8d18:	ldr	r0, [r8, #76]	; 0x4c
    8d1c:	sub	r1, fp, #96	; 0x60
    8d20:	mov	r2, #8
    8d24:	sub	r0, r0, r9
    8d28:	vmov	s0, r0
    8d2c:	mov	r0, sl
    8d30:	vcvt.f64.s32	d16, s0
    8d34:	vstr	d16, [fp, #-96]	; 0xffffffa0
    8d38:	bl	4d98 <readstat_write_bytes@plt>
    8d3c:	cmp	r0, #0
    8d40:	bne	8e90 <sas_write_header+0x294>
    8d44:	mov	r0, sl
    8d48:	mov	r1, #16
    8d4c:	bl	49a8 <readstat_write_zeros@plt>
    8d50:	cmp	r0, #0
    8d54:	bne	8e90 <sas_write_header+0x294>
    8d58:	mov	r4, r8
    8d5c:	sub	r1, fp, #100	; 0x64
    8d60:	mov	r2, #4
    8d64:	ldr	r0, [r4, #64]!	; 0x40
    8d68:	str	r0, [fp, #-100]	; 0xffffff9c
    8d6c:	ldr	r0, [r4, #-32]	; 0xffffffe0
    8d70:	str	r0, [fp, #-104]	; 0xffffff98
    8d74:	mov	r0, sl
    8d78:	bl	4d98 <readstat_write_bytes@plt>
    8d7c:	cmp	r0, #0
    8d80:	bne	8e90 <sas_write_header+0x294>
    8d84:	sub	r1, fp, #104	; 0x68
    8d88:	mov	r0, sl
    8d8c:	mov	r2, #4
    8d90:	bl	4d98 <readstat_write_bytes@plt>
    8d94:	cmp	r0, #0
    8d98:	bne	8e90 <sas_write_header+0x294>
    8d9c:	ldr	r0, [r8, #4]
    8da0:	cmp	r0, #0
    8da4:	beq	8dc0 <sas_write_header+0x1c4>
    8da8:	ldrd	r0, [r8, #56]	; 0x38
    8dac:	mov	r2, #8
    8db0:	str	r1, [fp, #-108]	; 0xffffff94
    8db4:	str	r0, [fp, #-112]	; 0xffffff90
    8db8:	sub	r1, fp, #112	; 0x70
    8dbc:	b	8dd0 <sas_write_header+0x1d4>
    8dc0:	ldr	r0, [r8, #56]	; 0x38
    8dc4:	sub	r1, fp, #112	; 0x70
    8dc8:	mov	r2, #4
    8dcc:	str	r0, [fp, #-112]	; 0xffffff90
    8dd0:	mov	r0, sl
    8dd4:	bl	4d98 <readstat_write_bytes@plt>
    8dd8:	cmp	r0, #0
    8ddc:	bne	8e90 <sas_write_header+0x294>
    8de0:	mov	r0, sl
    8de4:	mov	r1, #8
    8de8:	bl	49a8 <readstat_write_zeros@plt>
    8dec:	cmp	r0, #0
    8df0:	bne	8e90 <sas_write_header+0x294>
    8df4:	ldr	r1, [pc, #164]	; 8ea0 <sas_write_header+0x2a4>
    8df8:	add	r5, sp, #24
    8dfc:	mov	r2, #120	; 0x78
    8e00:	mov	r0, r5
    8e04:	add	r1, pc, r1
    8e08:	bl	48b8 <memcpy@plt>
    8e0c:	mov	r0, #0
    8e10:	mov	r1, #101	; 0x65
    8e14:	strb	r0, [sp, #16]
    8e18:	str	r0, [sp, #12]
    8e1c:	str	r0, [sp, #8]
    8e20:	ldr	r0, [sl, #8]
    8e24:	str	r1, [sp]
    8e28:	movw	r1, #52429	; 0xcccd
    8e2c:	movt	r1, #52428	; 0xcccc
    8e30:	umull	r1, r2, r0, r1
    8e34:	lsr	r1, r2, #3
    8e38:	ldr	r2, [pc, #100]	; 8ea4 <sas_write_header+0x2a8>
    8e3c:	add	r1, r1, r1, lsl #2
    8e40:	sub	r3, r0, r1, lsl #1
    8e44:	add	r0, sp, #8
    8e48:	mov	r1, #9
    8e4c:	add	r2, pc, r2
    8e50:	bl	4bdc <snprintf@plt>
    8e54:	ldr	r0, [sp, #8]
    8e58:	ldr	r1, [sp, #12]
    8e5c:	mov	r2, #120	; 0x78
    8e60:	str	r1, [sp, #28]
    8e64:	str	r0, [sp, #24]
    8e68:	mov	r0, sl
    8e6c:	mov	r1, r5
    8e70:	bl	4d98 <readstat_write_bytes@plt>
    8e74:	cmp	r0, #0
    8e78:	bne	8e90 <sas_write_header+0x294>
    8e7c:	ldr	r0, [sl, #4]
    8e80:	ldr	r1, [r4]
    8e84:	sub	r1, r1, r0
    8e88:	mov	r0, sl
    8e8c:	bl	49a8 <readstat_write_zeros@plt>
    8e90:	sub	sp, fp, #28
    8e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8e98:	add	sp, sp, #8
    8e9c:	bx	lr
    8ea0:	.word	0x0002057c
    8ea4:	.word	0x000204f5
    8ea8:	.word	0xe320f000
    8eac:	.word	0xe320f000

00008eb0 <sas_header_info_init>:
    8eb0:	push	{r4, r5, r6, r7, fp, lr}
    8eb4:	add	fp, sp, #16
    8eb8:	mov	r4, r1
    8ebc:	mov	r5, r0
    8ec0:	mov	r0, #1
    8ec4:	mov	r1, #152	; 0x98
    8ec8:	bl	472c <calloc@plt>
    8ecc:	add	r2, pc, #124	; 0x7c
    8ed0:	cmp	r4, #0
    8ed4:	mov	r1, r4
    8ed8:	vmov.i32	q10, #0	; 0x00000000
    8edc:	mov	r7, #0
    8ee0:	mov	r6, #4096	; 0x1000
    8ee4:	vld1.64	{d18-d19}, [r2 :128]
    8ee8:	movwne	r1, #1
    8eec:	ldr	r2, [r5, #20]
    8ef0:	add	r3, pc, #104	; 0x68
    8ef4:	add	r5, pc, #116	; 0x74
    8ef8:	strd	r6, [r0, #32]
    8efc:	cmp	r4, #0
    8f00:	vdup.32	d16, r1
    8f04:	vld1.64	{d22-d23}, [r3 :128]
    8f08:	str	r1, [r0, #4]
    8f0c:	mov	r1, #1024	; 0x400
    8f10:	str	r7, [r0, #68]	; 0x44
    8f14:	vmovl.u32	q8, d16
    8f18:	movwne	r1, #8192	; 0x2000
    8f1c:	vshl.s64	q8, q8, #63	; 0x3f
    8f20:	str	r1, [r0, #64]	; 0x40
    8f24:	add	r1, r0, #40	; 0x28
    8f28:	vsub.i64	q9, q10, q9
    8f2c:	vld1.64	{d20-d21}, [r5 :128]
    8f30:	str	r2, [r0, #72]	; 0x48
    8f34:	str	r2, [r0, #76]	; 0x4c
    8f38:	vshl.s64	q8, q8, q9
    8f3c:	vbsl	q8, q11, q10
    8f40:	vst1.64	{d16-d17}, [r1]
    8f44:	pop	{r4, r5, r6, r7, fp, pc}
    8f48:	nop	{0}
    8f4c:	nop	{0}
    8f50:	.word	0x0000003f
    8f54:	.word	0x00000000
    8f58:	.word	0x0000003f
    8f5c:	.word	0x00000000
    8f60:	.word	0x00000028
    8f64:	.word	0x00000000
    8f68:	.word	0x00000018
    8f6c:	.word	0x00000000
    8f70:	.word	0x00000018
    8f74:	.word	0x00000000
    8f78:	.word	0x0000000c
    8f7c:	.word	0x00000000

00008f80 <sas_fill_page>:
    8f80:	push	{r4, r6, r7, sl, fp, lr}
    8f84:	add	fp, sp, #16
    8f88:	mov	r4, r0
    8f8c:	ldrd	r6, [r1, #32]
    8f90:	ldrd	r0, [r1, #64]	; 0x40
    8f94:	ldr	r2, [r4, #4]
    8f98:	mov	r3, r7
    8f9c:	subs	r0, r2, r0
    8fa0:	mov	r2, r6
    8fa4:	rsc	r1, r1, #0
    8fa8:	bl	287c8 <__aeabi_ldivmod>
    8fac:	orrs	r0, r2, r3
    8fb0:	moveq	r0, #0
    8fb4:	popeq	{r4, r6, r7, sl, fp, pc}
    8fb8:	sub	r1, r6, r2
    8fbc:	mov	r0, r4
    8fc0:	pop	{r4, r6, r7, sl, fp, lr}
    8fc4:	b	49a8 <readstat_write_zeros@plt>

00008fc8 <sas_validate_name>:
    8fc8:	push	{r4, r5, r6, sl, fp, lr}
    8fcc:	add	fp, sp, #16
    8fd0:	mov	r4, r1
    8fd4:	mov	r5, r0
    8fd8:	b	8fe0 <sas_validate_name+0x18>
    8fdc:	add	r0, r0, #1
    8fe0:	ldrb	r1, [r0]
    8fe4:	cmp	r1, #95	; 0x5f
    8fe8:	beq	8fdc <sas_validate_name+0x14>
    8fec:	cmp	r1, #0
    8ff0:	beq	9024 <sas_validate_name+0x5c>
    8ff4:	sub	r2, r1, #48	; 0x30
    8ff8:	uxtb	r2, r2
    8ffc:	cmp	r2, #10
    9000:	bcc	8fdc <sas_validate_name+0x14>
    9004:	and	r1, r1, #223	; 0xdf
    9008:	sub	r1, r1, #65	; 0x41
    900c:	uxtb	r1, r1
    9010:	cmp	r1, #25
    9014:	bls	8fdc <sas_validate_name+0x14>
    9018:	mov	r6, #26
    901c:	mov	r0, r6
    9020:	pop	{r4, r5, r6, sl, fp, pc}
    9024:	ldrb	r0, [r5]
    9028:	cmp	r0, #0
    902c:	moveq	r6, #38	; 0x26
    9030:	moveq	r0, r6
    9034:	popeq	{r4, r5, r6, sl, fp, pc}
    9038:	cmp	r0, #95	; 0x5f
    903c:	beq	9058 <sas_validate_name+0x90>
    9040:	and	r0, r0, #223	; 0xdf
    9044:	mov	r6, #25
    9048:	sub	r0, r0, #65	; 0x41
    904c:	uxtb	r0, r0
    9050:	cmp	r0, #25
    9054:	bhi	90e8 <sas_validate_name+0x120>
    9058:	ldr	r1, [pc, #144]	; 90f0 <sas_validate_name+0x128>
    905c:	mov	r0, r5
    9060:	add	r1, pc, r1
    9064:	bl	47b0 <strcmp@plt>
    9068:	mov	r6, #27
    906c:	cmp	r0, #0
    9070:	beq	90e8 <sas_validate_name+0x120>
    9074:	ldr	r1, [pc, #120]	; 90f4 <sas_validate_name+0x12c>
    9078:	mov	r0, r5
    907c:	add	r1, pc, r1
    9080:	bl	47b0 <strcmp@plt>
    9084:	cmp	r0, #0
    9088:	beq	90e8 <sas_validate_name+0x120>
    908c:	ldr	r1, [pc, #100]	; 90f8 <sas_validate_name+0x130>
    9090:	mov	r0, r5
    9094:	add	r1, pc, r1
    9098:	bl	47b0 <strcmp@plt>
    909c:	cmp	r0, #0
    90a0:	beq	90e8 <sas_validate_name+0x120>
    90a4:	ldr	r1, [pc, #80]	; 90fc <sas_validate_name+0x134>
    90a8:	mov	r0, r5
    90ac:	add	r1, pc, r1
    90b0:	bl	47b0 <strcmp@plt>
    90b4:	cmp	r0, #0
    90b8:	beq	90e8 <sas_validate_name+0x120>
    90bc:	ldr	r1, [pc, #60]	; 9100 <sas_validate_name+0x138>
    90c0:	mov	r0, r5
    90c4:	add	r1, pc, r1
    90c8:	bl	47b0 <strcmp@plt>
    90cc:	cmp	r0, #0
    90d0:	beq	90e8 <sas_validate_name+0x120>
    90d4:	mov	r0, r5
    90d8:	bl	4b58 <strlen@plt>
    90dc:	mov	r6, #0
    90e0:	cmp	r0, r4
    90e4:	movwhi	r6, #28
    90e8:	mov	r0, r6
    90ec:	pop	{r4, r5, r6, sl, fp, pc}
    90f0:	.word	0x000202ec
    90f4:	.word	0x000202d4
    90f8:	.word	0x000202c4
    90fc:	.word	0x000202b6
    9100:	.word	0x000202aa

00009104 <sas_validate_variable>:
    9104:	push	{fp, lr}
    9108:	mov	fp, sp
    910c:	bl	4cb4 <readstat_variable_get_name@plt>
    9110:	mov	r1, #32
    9114:	pop	{fp, lr}
    9118:	b	8fc8 <sas_validate_name>

0000911c <sas_validate_tag>:
    911c:	cmp	r0, #95	; 0x5f
    9120:	moveq	r0, #0
    9124:	bxeq	lr
    9128:	sub	r0, r0, #65	; 0x41
    912c:	uxtb	r1, r0
    9130:	mov	r0, #21
    9134:	cmp	r1, #26
    9138:	movwcc	r0, #0
    913c:	bx	lr

00009140 <sas_assign_tag>:
    9140:	mov	r2, #2
    9144:	cmp	r1, #0
    9148:	beq	9168 <sas_assign_tag+0x28>
    914c:	cmp	r1, #1
    9150:	beq	9180 <sas_assign_tag+0x40>
    9154:	cmp	r1, #28
    9158:	addcc	r1, r1, #63	; 0x3f
    915c:	uxtb	r3, r1
    9160:	cmp	r3, #95	; 0x5f
    9164:	bne	9170 <sas_assign_tag+0x30>
    9168:	mov	r1, #95	; 0x5f
    916c:	b	9188 <sas_assign_tag+0x48>
    9170:	sub	r3, r1, #65	; 0x41
    9174:	uxtb	r3, r3
    9178:	cmp	r3, #26
    917c:	bcc	9188 <sas_assign_tag+0x48>
    9180:	mov	r2, #1
    9184:	mov	r1, #0
    9188:	strb	r1, [r0, #12]
    918c:	ldrb	r1, [r0, #13]
    9190:	orr	r1, r1, r2
    9194:	strb	r1, [r0, #13]
    9198:	bx	lr
    919c:	andeq	r0, r0, r0

000091a0 <readstat_parse_sas7bcat>:
    91a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    91a4:	add	fp, sp, #28
    91a8:	sub	sp, sp, #404	; 0x194
    91ac:	ldr	r8, [r0, #32]
    91b0:	mov	r6, r1
    91b4:	mov	r4, r0
    91b8:	mov	r0, #1
    91bc:	mov	r1, #104	; 0x68
    91c0:	mov	r7, r2
    91c4:	mov	r9, #1
    91c8:	bl	472c <calloc@plt>
    91cc:	mov	r5, r0
    91d0:	mov	r0, #1
    91d4:	mov	r1, #152	; 0x98
    91d8:	bl	472c <calloc@plt>
    91dc:	mov	sl, r0
    91e0:	mov	r0, #200	; 0xc8
    91e4:	str	r0, [r5, #88]	; 0x58
    91e8:	mov	r0, #1600	; 0x640
    91ec:	bl	4a74 <malloc@plt>
    91f0:	str	r0, [r5, #80]	; 0x50
    91f4:	ldr	r0, [r4, #20]
    91f8:	ldr	r1, [r4]
    91fc:	ldr	r2, [r4, #36]	; 0x24
    9200:	ldr	r3, [r4, #40]	; 0x28
    9204:	str	r1, [r5]
    9208:	stmib	r5, {r0, r7, r8}
    920c:	str	r2, [r5, #92]	; 0x5c
    9210:	str	r3, [r5, #96]	; 0x60
    9214:	mov	r0, r6
    9218:	ldr	r2, [r8]
    921c:	ldr	r1, [r8, #20]
    9220:	blx	r2
    9224:	mov	r6, #0
    9228:	cmn	r0, #1
    922c:	beq	9250 <readstat_parse_sas7bcat+0xb0>
    9230:	ldr	r2, [r4, #24]
    9234:	mov	r0, r8
    9238:	mov	r1, sl
    923c:	mov	r3, r7
    9240:	bl	4cf0 <sas_read_header@plt>
    9244:	cmp	r0, #0
    9248:	beq	92cc <readstat_parse_sas7bcat+0x12c>
    924c:	mov	r9, r0
    9250:	mov	r4, #0
    9254:	ldr	r1, [r8, #4]
    9258:	ldr	r0, [r8, #20]
    925c:	blx	r1
    9260:	cmp	r4, #0
    9264:	beq	9270 <readstat_parse_sas7bcat+0xd0>
    9268:	mov	r0, r4
    926c:	bl	4864 <free@plt>
    9270:	cmp	r6, #0
    9274:	beq	9280 <readstat_parse_sas7bcat+0xe0>
    9278:	mov	r0, r6
    927c:	bl	4864 <free@plt>
    9280:	cmp	r5, #0
    9284:	beq	92b0 <readstat_parse_sas7bcat+0x110>
    9288:	ldr	r0, [r5, #100]	; 0x64
    928c:	cmp	r0, #0
    9290:	beq	9298 <readstat_parse_sas7bcat+0xf8>
    9294:	bl	478c <iconv_close@plt>
    9298:	ldr	r0, [r5, #80]	; 0x50
    929c:	cmp	r0, #0
    92a0:	beq	92a8 <readstat_parse_sas7bcat+0x108>
    92a4:	bl	4864 <free@plt>
    92a8:	mov	r0, r5
    92ac:	bl	4864 <free@plt>
    92b0:	cmp	sl, #0
    92b4:	beq	92c0 <readstat_parse_sas7bcat+0x120>
    92b8:	mov	r0, sl
    92bc:	bl	4864 <free@plt>
    92c0:	mov	r0, r9
    92c4:	sub	sp, fp, #28
    92c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    92cc:	ldr	r0, [sl, #4]
    92d0:	ldr	r1, [sl, #24]
    92d4:	str	r8, [sp, #76]	; 0x4c
    92d8:	strd	r0, [r5, #16]
    92dc:	bl	4858 <machine_is_little_endian@plt>
    92e0:	ldr	r1, [sl]
    92e4:	add	r3, sl, #56	; 0x38
    92e8:	mov	r8, sl
    92ec:	add	lr, r5, #32
    92f0:	add	r9, r5, #40	; 0x28
    92f4:	eor	r0, r1, r0
    92f8:	str	r0, [r5, #24]
    92fc:	ldm	r3, {r0, r1, r2, r3}
    9300:	str	r2, [r5, #72]	; 0x48
    9304:	str	r3, [r5, #76]	; 0x4c
    9308:	str	r1, [r5, #60]	; 0x3c
    930c:	str	r0, [r5, #56]	; 0x38
    9310:	ldrd	r0, [sl, #32]
    9314:	mov	r2, #856	; 0x358
    9318:	str	r1, [r5, #68]	; 0x44
    931c:	str	r0, [r5, #64]	; 0x40
    9320:	ldr	sl, [r5, #92]	; 0x5c
    9324:	cmp	sl, #0
    9328:	ldreq	sl, [r8, #144]	; 0x90
    932c:	streq	sl, [r5, #92]	; 0x5c
    9330:	ldr	ip, [r5, #16]
    9334:	ldr	r1, [r5, #20]
    9338:	add	r0, r1, #212	; 0xd4
    933c:	add	r6, r2, r1, lsl #1
    9340:	add	r1, r1, #50	; 0x32
    9344:	cmp	ip, #0
    9348:	asr	r3, r0, #31
    934c:	asr	r4, r6, #31
    9350:	asr	r2, r1, #31
    9354:	stm	lr, {r0, r3, r6}
    9358:	str	r4, [r5, #44]	; 0x2c
    935c:	str	r1, [r5, #48]	; 0x30
    9360:	str	r2, [r5, #52]	; 0x34
    9364:	beq	93ac <readstat_parse_sas7bcat+0x20c>
    9368:	add	r7, r5, #48	; 0x30
    936c:	adds	r6, r6, #144	; 0x90
    9370:	add	lr, r5, #32
    9374:	str	r7, [sp, #72]	; 0x48
    9378:	mov	r7, r8
    937c:	mov	r8, r9
    9380:	adc	r9, r4, #0
    9384:	adds	r0, r0, #72	; 0x48
    9388:	adc	r3, r3, #0
    938c:	stm	r8, {r6, r9}
    9390:	mov	r9, r8
    9394:	mov	r8, r7
    9398:	stm	lr, {r0, r3}
    939c:	adds	r0, r1, #24
    93a0:	adc	r1, r2, #0
    93a4:	ldr	r2, [sp, #72]	; 0x48
    93a8:	strd	r0, [r2]
    93ac:	cmp	sl, #0
    93b0:	ldrne	r4, [r5, #96]	; 0x60
    93b4:	cmpne	r4, #0
    93b8:	bne	9500 <readstat_parse_sas7bcat+0x360>
    93bc:	ldr	r0, [r5]
    93c0:	mov	sl, r8
    93c4:	ldr	r8, [sp, #76]	; 0x4c
    93c8:	str	r9, [sp, #72]	; 0x48
    93cc:	cmp	r0, #0
    93d0:	beq	9488 <readstat_parse_sas7bcat+0x2e8>
    93d4:	vmov.i32	q8, #0	; 0x00000000
    93d8:	mov	r0, #52	; 0x34
    93dc:	add	r1, sp, #80	; 0x50
    93e0:	mov	r6, #0
    93e4:	mov	r2, #1
    93e8:	add	r4, sp, #143	; 0x8f
    93ec:	vst1.64	{d16-d17}, [r1], r0
    93f0:	ldr	r0, [sl, #72]	; 0x48
    93f4:	ldr	r3, [sl, #76]	; 0x4c
    93f8:	str	r0, [sp, #96]	; 0x60
    93fc:	ldr	r0, [sl, #12]
    9400:	str	r3, [sp, #100]	; 0x64
    9404:	str	r6, [sp, #112]	; 0x70
    9408:	mov	r3, #64	; 0x40
    940c:	str	r0, [sp, #104]	; 0x68
    9410:	asr	r0, r0, #31
    9414:	str	r0, [sp, #108]	; 0x6c
    9418:	ldr	r0, [sl]
    941c:	str	r6, [sp, #120]	; 0x78
    9420:	str	r6, [sp, #124]	; 0x7c
    9424:	cmp	r0, #0
    9428:	ldr	r0, [r5, #92]	; 0x5c
    942c:	movweq	r2, #2
    9430:	str	r2, [sp, #116]	; 0x74
    9434:	add	r2, sl, #80	; 0x50
    9438:	str	r0, [sp, #128]	; 0x80
    943c:	ldrb	r0, [r5, #16]
    9440:	and	r0, r0, #1
    9444:	strb	r0, [r1]
    9448:	ldr	r0, [r5, #100]	; 0x64
    944c:	movw	r1, #257	; 0x101
    9450:	str	r0, [sp]
    9454:	mov	r0, r4
    9458:	bl	4b94 <readstat_convert@plt>
    945c:	mov	r9, r0
    9460:	cmp	r0, #0
    9464:	bne	9250 <readstat_parse_sas7bcat+0xb0>
    9468:	ldr	r2, [r5]
    946c:	ldr	r1, [r5, #8]
    9470:	add	r0, sp, #80	; 0x50
    9474:	str	r4, [sp, #124]	; 0x7c
    9478:	blx	r2
    947c:	mov	r9, #4
    9480:	cmp	r0, #0
    9484:	bne	9250 <readstat_parse_sas7bcat+0xb0>
    9488:	add	r7, r5, #64	; 0x40
    948c:	ldr	r0, [r7]
    9490:	bl	4b88 <readstat_malloc@plt>
    9494:	mov	r9, #3
    9498:	cmp	r0, #0
    949c:	beq	9530 <readstat_parse_sas7bcat+0x390>
    94a0:	mov	r4, r0
    94a4:	add	r0, r5, #72	; 0x48
    94a8:	ldr	r1, [r7]
    94ac:	ldr	r3, [r8, #8]
    94b0:	ldr	r2, [r8, #20]
    94b4:	mov	r6, #0
    94b8:	str	r0, [sp, #68]	; 0x44
    94bc:	ldr	r0, [r0]
    94c0:	add	r0, r1, r0
    94c4:	mov	r1, #0
    94c8:	blx	r3
    94cc:	cmn	r0, #1
    94d0:	beq	9bbc <readstat_parse_sas7bcat+0xa1c>
    94d4:	ldr	r1, [r7]
    94d8:	ldr	r3, [r8, #12]
    94dc:	ldr	r2, [r8, #20]
    94e0:	mov	r0, r4
    94e4:	blx	r3
    94e8:	ldrd	r2, [r7]
    94ec:	subs	r1, r0, r2
    94f0:	rscs	r0, r3, r0, asr #31
    94f4:	bge	9538 <readstat_parse_sas7bcat+0x398>
    94f8:	mov	r9, #2
    94fc:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9500:	mov	r0, sl
    9504:	mov	r1, r4
    9508:	bl	47b0 <strcmp@plt>
    950c:	cmp	r0, #0
    9510:	beq	93bc <readstat_parse_sas7bcat+0x21c>
    9514:	mov	r0, r4
    9518:	mov	r1, sl
    951c:	bl	4a98 <iconv_open@plt>
    9520:	cmn	r0, #1
    9524:	beq	9560 <readstat_parse_sas7bcat+0x3c0>
    9528:	str	r0, [r5, #100]	; 0x64
    952c:	b	93bc <readstat_parse_sas7bcat+0x21c>
    9530:	mov	r6, #0
    9534:	b	9250 <readstat_parse_sas7bcat+0xb0>
    9538:	ldr	r0, [sp, #72]	; 0x48
    953c:	ldr	r1, [r0]
    9540:	add	r0, r4, r1
    9544:	sub	r1, r2, r1
    9548:	mov	r2, r5
    954c:	bl	9c38 <sas7bcat_augment_index>
    9550:	cmp	r0, #0
    9554:	beq	9574 <readstat_parse_sas7bcat+0x3d4>
    9558:	mov	r9, r0
    955c:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9560:	mov	sl, r8
    9564:	ldr	r8, [sp, #76]	; 0x4c
    9568:	mov	r9, #7
    956c:	mov	r6, #0
    9570:	b	9250 <readstat_parse_sas7bcat+0xb0>
    9574:	add	r0, r5, #56	; 0x38
    9578:	str	r7, [sp, #72]	; 0x48
    957c:	str	r4, [sp, #60]	; 0x3c
    9580:	str	r0, [sp, #64]	; 0x40
    9584:	ldrd	r0, [r0]
    9588:	subs	r0, r0, #4
    958c:	sbcs	r0, r1, #0
    9590:	blt	9648 <readstat_parse_sas7bcat+0x4a8>
    9594:	ldr	r0, [sp, #60]	; 0x3c
    9598:	mov	r6, #0
    959c:	mov	r4, #3
    95a0:	mov	r7, #0
    95a4:	add	r0, r0, #16
    95a8:	str	r0, [sp, #56]	; 0x38
    95ac:	ldr	r0, [sp, #68]	; 0x44
    95b0:	ldr	r9, [sp, #72]	; 0x48
    95b4:	ldr	r3, [r8, #8]
    95b8:	ldr	r2, [r8, #20]
    95bc:	ldr	r0, [r0]
    95c0:	ldr	r1, [r9]
    95c4:	mla	r0, r1, r4, r0
    95c8:	mov	r1, #0
    95cc:	blx	r3
    95d0:	cmn	r0, #1
    95d4:	beq	9bc4 <readstat_parse_sas7bcat+0xa24>
    95d8:	ldr	r1, [r9]
    95dc:	ldr	r3, [r8, #12]
    95e0:	ldr	r2, [r8, #20]
    95e4:	ldr	r0, [sp, #60]	; 0x3c
    95e8:	blx	r3
    95ec:	ldrd	r2, [r9]
    95f0:	subs	r1, r0, r2
    95f4:	rscs	r0, r3, r0, asr #31
    95f8:	blt	9bd0 <readstat_parse_sas7bcat+0xa30>
    95fc:	ldr	r0, [sp, #56]	; 0x38
    9600:	movw	r1, #19544	; 0x4c58
    9604:	movt	r1, #21075	; 0x5253
    9608:	ldr	r0, [r0]
    960c:	cmp	r0, r1
    9610:	bne	962c <readstat_parse_sas7bcat+0x48c>
    9614:	ldr	r0, [sp, #56]	; 0x38
    9618:	sub	r1, r2, #16
    961c:	mov	r2, r5
    9620:	bl	9c38 <sas7bcat_augment_index>
    9624:	cmp	r0, #0
    9628:	bne	9bdc <readstat_parse_sas7bcat+0xa3c>
    962c:	ldr	r0, [sp, #64]	; 0x40
    9630:	adds	r4, r4, #1
    9634:	adc	r7, r7, #0
    9638:	ldrd	r0, [r0]
    963c:	subs	r0, r4, r0
    9640:	sbcs	r0, r7, r1
    9644:	blt	95ac <readstat_parse_sas7bcat+0x40c>
    9648:	ldr	r1, [r5, #84]	; 0x54
    964c:	cmp	r1, #2
    9650:	blt	96a4 <readstat_parse_sas7bcat+0x504>
    9654:	ldr	r0, [r5, #80]	; 0x50
    9658:	mov	r3, #1
    965c:	ldrd	r6, [r0]
    9660:	add	r4, r0, #8
    9664:	ldm	r4, {r2, r9}
    9668:	subs	r6, r2, r6
    966c:	sbcs	r7, r9, r7
    9670:	bcc	9690 <readstat_parse_sas7bcat+0x4f0>
    9674:	add	r3, r3, #1
    9678:	add	r4, r4, #8
    967c:	mov	r6, r2
    9680:	mov	r7, r9
    9684:	cmp	r3, r1
    9688:	blt	9664 <readstat_parse_sas7bcat+0x4c4>
    968c:	b	96a4 <readstat_parse_sas7bcat+0x504>
    9690:	ldr	r3, [pc, #1436]	; 9c34 <readstat_parse_sas7bcat+0xa94>
    9694:	mov	r2, #8
    9698:	add	r3, pc, r3
    969c:	bl	4d80 <qsort@plt>
    96a0:	ldr	r1, [r5, #84]	; 0x54
    96a4:	ldr	r4, [sp, #60]	; 0x3c
    96a8:	cmp	r1, #0
    96ac:	beq	9718 <readstat_parse_sas7bcat+0x578>
    96b0:	cmp	r1, #1
    96b4:	ble	9724 <readstat_parse_sas7bcat+0x584>
    96b8:	ldr	ip, [r5, #80]	; 0x50
    96bc:	mov	lr, #1
    96c0:	mov	r7, #1
    96c4:	mov	r3, ip
    96c8:	ldr	r4, [r3]
    96cc:	ldmib	r3, {r0, r6}
    96d0:	ldr	r2, [r3, #12]
    96d4:	eor	r0, r2, r0
    96d8:	eor	r4, r6, r4
    96dc:	orrs	r0, r4, r0
    96e0:	beq	96f8 <readstat_parse_sas7bcat+0x558>
    96e4:	cmp	r7, lr
    96e8:	movne	r0, ip
    96ec:	strne	r6, [r0, lr, lsl #3]!
    96f0:	add	lr, lr, #1
    96f4:	strne	r2, [r0, #4]
    96f8:	add	r7, r7, #1
    96fc:	add	r3, r3, #8
    9700:	cmp	r1, r7
    9704:	bne	96c8 <readstat_parse_sas7bcat+0x528>
    9708:	ldr	r4, [sp, #60]	; 0x3c
    970c:	cmp	lr, #1
    9710:	str	lr, [r5, #84]	; 0x54
    9714:	bge	972c <readstat_parse_sas7bcat+0x58c>
    9718:	mov	r9, #0
    971c:	mov	r6, #0
    9720:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9724:	mov	r0, #1
    9728:	str	r0, [r5, #84]	; 0x54
    972c:	add	r0, sp, #143	; 0x8f
    9730:	mov	r2, #0
    9734:	mov	r3, #0
    9738:	mov	r6, #0
    973c:	add	r1, r0, #10
    9740:	str	r1, [sp, #48]	; 0x30
    9744:	add	r1, r0, #8
    9748:	str	r1, [sp, #44]	; 0x2c
    974c:	add	r1, r0, #6
    9750:	add	r0, r0, #4
    9754:	str	r1, [sp, #40]	; 0x28
    9758:	str	r0, [sp, #36]	; 0x24
    975c:	b	97c4 <readstat_parse_sas7bcat+0x624>
    9760:	ldr	r2, [sp, #76]	; 0x4c
    9764:	orr	r0, r7, r3
    9768:	add	r1, r0, #32
    976c:	cmp	r1, r2
    9770:	bhi	9b90 <readstat_parse_sas7bcat+0x9f0>
    9774:	mov	r1, sl
    9778:	mov	sl, r8
    977c:	str	r3, [sp, #56]	; 0x38
    9780:	add	r2, r6, r0
    9784:	add	r0, sp, #143	; 0x8f
    9788:	mov	r3, #32
    978c:	mov	r8, r1
    9790:	ldr	r1, [r5, #100]	; 0x64
    9794:	str	r1, [sp]
    9798:	mov	r1, #129	; 0x81
    979c:	bl	4b94 <readstat_convert@plt>
    97a0:	cmp	r0, #0
    97a4:	bne	9c2c <readstat_parse_sas7bcat+0xa8c>
    97a8:	ldr	r3, [sp, #56]	; 0x38
    97ac:	ldr	r2, [sp, #76]	; 0x4c
    97b0:	mov	r0, r8
    97b4:	mov	r8, sl
    97b8:	mov	sl, r0
    97bc:	orr	r3, r3, #32
    97c0:	b	9b5c <readstat_parse_sas7bcat+0x9bc>
    97c4:	ldr	r0, [r5, #80]	; 0x50
    97c8:	lsl	r1, r2, #3
    97cc:	ldrh	r9, [r0, r1]!
    97d0:	ldr	ip, [r0, #4]
    97d4:	ldr	r0, [r5, #16]
    97d8:	cmp	r0, #0
    97dc:	mov	r0, #32
    97e0:	movweq	r0, #16
    97e4:	cmp	ip, #1
    97e8:	str	r0, [sp, #52]	; 0x34
    97ec:	blt	9b9c <readstat_parse_sas7bcat+0x9fc>
    97f0:	cmp	r9, #0
    97f4:	beq	9b9c <readstat_parse_sas7bcat+0x9fc>
    97f8:	ldr	r7, [r5, #12]
    97fc:	mov	r1, #0
    9800:	mov	r4, #0
    9804:	str	r3, [sp, #12]
    9808:	str	r2, [sp, #16]
    980c:	str	r9, [sp, #24]
    9810:	str	ip, [sp, #28]
    9814:	str	r7, [sp, #32]
    9818:	ldr	r0, [sp, #64]	; 0x40
    981c:	ldm	r0, {r0, r3}
    9820:	subs	r2, r0, ip
    9824:	sbcs	r2, r3, ip, asr #31
    9828:	blt	9908 <readstat_parse_sas7bcat+0x768>
    982c:	subs	r0, r4, r0
    9830:	rscs	r0, r3, #0
    9834:	bge	9908 <readstat_parse_sas7bcat+0x768>
    9838:	ldr	r0, [sp, #68]	; 0x44
    983c:	str	r1, [sp, #76]	; 0x4c
    9840:	ldr	r1, [sp, #72]	; 0x48
    9844:	sub	r2, ip, #1
    9848:	ldr	r3, [r7, #8]
    984c:	str	r4, [sp, #56]	; 0x38
    9850:	ldr	r0, [r0]
    9854:	ldr	r1, [r1]
    9858:	mla	r0, r1, r2, r0
    985c:	ldr	r2, [r7, #20]
    9860:	mov	r1, #0
    9864:	add	r0, r9, r0
    9868:	blx	r3
    986c:	cmn	r0, #1
    9870:	beq	9bc4 <readstat_parse_sas7bcat+0xa24>
    9874:	ldr	r4, [sp, #52]	; 0x34
    9878:	ldr	r3, [r7, #12]
    987c:	ldr	r2, [r7, #20]
    9880:	add	r7, sp, #143	; 0x8f
    9884:	mov	r0, r7
    9888:	mov	r1, r4
    988c:	blx	r3
    9890:	cmp	r0, r4
    9894:	blt	9bd0 <readstat_parse_sas7bcat+0xa30>
    9898:	ldr	r1, [r5, #24]
    989c:	ldr	r4, [r5, #16]
    98a0:	mov	r0, r7
    98a4:	bl	4d44 <sas_read4@plt>
    98a8:	mov	r7, r0
    98ac:	ldr	r0, [sp, #44]	; 0x2c
    98b0:	ldr	r1, [sp, #36]	; 0x24
    98b4:	cmp	r4, #0
    98b8:	moveq	r0, r1
    98bc:	ldr	r1, [r5, #24]
    98c0:	bl	4d20 <sas_read2@plt>
    98c4:	mov	r9, r0
    98c8:	ldr	r0, [sp, #48]	; 0x30
    98cc:	ldr	r1, [sp, #40]	; 0x28
    98d0:	cmp	r4, #0
    98d4:	moveq	r0, r1
    98d8:	ldr	r1, [r5, #24]
    98dc:	bl	4d20 <sas_read2@plt>
    98e0:	ldr	r1, [sp, #76]	; 0x4c
    98e4:	cmp	r7, #1
    98e8:	add	r1, r1, r0
    98ec:	blt	9908 <readstat_parse_sas7bcat+0x768>
    98f0:	ldr	r4, [sp, #56]	; 0x38
    98f4:	mov	ip, r7
    98f8:	ldr	r7, [sp, #32]
    98fc:	cmp	r9, #0
    9900:	add	r4, r4, #1
    9904:	bne	9818 <readstat_parse_sas7bcat+0x678>
    9908:	cmp	r1, #0
    990c:	beq	9b90 <readstat_parse_sas7bcat+0x9f0>
    9910:	ldr	r4, [sp, #60]	; 0x3c
    9914:	cmn	r1, #1
    9918:	add	r7, sp, #143	; 0x8f
    991c:	beq	9bf4 <readstat_parse_sas7bcat+0xa54>
    9920:	mov	r0, r6
    9924:	str	r1, [sp, #76]	; 0x4c
    9928:	bl	4c3c <readstat_realloc@plt>
    992c:	ldr	ip, [sp, #72]	; 0x48
    9930:	cmp	r0, #0
    9934:	beq	9bfc <readstat_parse_sas7bcat+0xa5c>
    9938:	mov	r6, r0
    993c:	ldr	r0, [r5, #12]
    9940:	mov	lr, #0
    9944:	str	r0, [sp, #32]
    9948:	ldr	r0, [r5, #16]
    994c:	cmp	r0, #0
    9950:	mov	r0, #32
    9954:	movweq	r0, #16
    9958:	str	r0, [sp, #52]	; 0x34
    995c:	mov	r0, #0
    9960:	str	r0, [sp, #56]	; 0x38
    9964:	mov	r9, r7
    9968:	ldr	r7, [sp, #28]
    996c:	ldr	r3, [sp, #24]
    9970:	cmp	r7, #1
    9974:	blt	9aa4 <readstat_parse_sas7bcat+0x904>
    9978:	cmp	r3, #0
    997c:	beq	9aa4 <readstat_parse_sas7bcat+0x904>
    9980:	ldr	r0, [sp, #64]	; 0x40
    9984:	ldrd	r0, [r0]
    9988:	subs	r2, r0, r7
    998c:	sbcs	r2, r1, r7, asr #31
    9990:	blt	9aa4 <readstat_parse_sas7bcat+0x904>
    9994:	ldr	r2, [sp, #56]	; 0x38
    9998:	subs	r0, r2, r0
    999c:	rscs	r0, r1, #0
    99a0:	bge	9aa4 <readstat_parse_sas7bcat+0x904>
    99a4:	ldr	r0, [sp, #68]	; 0x44
    99a8:	ldr	r1, [ip]
    99ac:	sub	r2, r7, #1
    99b0:	ldr	r7, [sp, #32]
    99b4:	str	lr, [sp, #20]
    99b8:	ldr	r0, [r0]
    99bc:	mla	r0, r1, r2, r0
    99c0:	ldr	r2, [r7, #20]
    99c4:	mov	r1, #0
    99c8:	add	r0, r3, r0
    99cc:	ldr	r3, [r7, #8]
    99d0:	blx	r3
    99d4:	cmn	r0, #1
    99d8:	beq	9bbc <readstat_parse_sas7bcat+0xa1c>
    99dc:	ldr	r3, [r7, #12]
    99e0:	ldr	r2, [r7, #20]
    99e4:	ldr	r1, [sp, #52]	; 0x34
    99e8:	mov	r0, r9
    99ec:	mov	r7, r9
    99f0:	blx	r3
    99f4:	ldr	r1, [sp, #52]	; 0x34
    99f8:	mov	r9, #2
    99fc:	cmp	r0, r1
    9a00:	blt	9254 <readstat_parse_sas7bcat+0xb4>
    9a04:	ldr	r1, [r5, #24]
    9a08:	ldr	r4, [r5, #16]
    9a0c:	mov	r0, r7
    9a10:	bl	4d44 <sas_read4@plt>
    9a14:	str	r0, [sp, #28]
    9a18:	ldr	r0, [sp, #44]	; 0x2c
    9a1c:	ldr	r1, [sp, #36]	; 0x24
    9a20:	cmp	r4, #0
    9a24:	moveq	r0, r1
    9a28:	ldr	r1, [r5, #24]
    9a2c:	bl	4d20 <sas_read2@plt>
    9a30:	str	r0, [sp, #24]
    9a34:	ldr	r0, [sp, #48]	; 0x30
    9a38:	ldr	r1, [sp, #40]	; 0x28
    9a3c:	cmp	r4, #0
    9a40:	moveq	r0, r1
    9a44:	ldr	r1, [r5, #24]
    9a48:	bl	4d20 <sas_read2@plt>
    9a4c:	ldr	r1, [sp, #20]
    9a50:	mov	r7, r0
    9a54:	add	r4, r1, r0
    9a58:	ldr	r0, [sp, #76]	; 0x4c
    9a5c:	cmp	r4, r0
    9a60:	bhi	9be8 <readstat_parse_sas7bcat+0xa48>
    9a64:	ldr	r0, [sp, #56]	; 0x38
    9a68:	add	r0, r0, #1
    9a6c:	str	r0, [sp, #56]	; 0x38
    9a70:	add	r0, r6, r1
    9a74:	ldr	r1, [sp, #32]
    9a78:	ldr	r3, [r1, #12]
    9a7c:	ldr	r2, [r1, #20]
    9a80:	mov	r1, r7
    9a84:	blx	r3
    9a88:	mov	lr, r4
    9a8c:	ldr	r4, [sp, #60]	; 0x3c
    9a90:	ldr	ip, [sp, #72]	; 0x48
    9a94:	cmp	r0, r7
    9a98:	add	r7, sp, #143	; 0x8f
    9a9c:	bge	9964 <readstat_parse_sas7bcat+0x7c4>
    9aa0:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9aa4:	ldr	r0, [sp, #76]	; 0x4c
    9aa8:	cmp	r0, #106	; 0x6a
    9aac:	bcc	9b90 <readstat_parse_sas7bcat+0x9f0>
    9ab0:	ldrb	r0, [r6, #2]
    9ab4:	ldr	r7, [r5, #16]
    9ab8:	ldr	r1, [r5, #24]
    9abc:	mov	r2, #38	; 0x26
    9ac0:	and	r4, r0, #8
    9ac4:	mov	r0, #42	; 0x2a
    9ac8:	cmp	r7, #0
    9acc:	orr	r0, r0, r4, lsr #1
    9ad0:	addeq	r0, r2, r4, lsr #1
    9ad4:	add	r0, r6, r0
    9ad8:	bl	4d44 <sas_read4@plt>
    9adc:	str	r0, [sp, #32]
    9ae0:	cmp	r7, #0
    9ae4:	mov	r0, #50	; 0x32
    9ae8:	ldr	r1, [r5, #24]
    9aec:	str	r4, [sp, #56]	; 0x38
    9af0:	movweq	r0, #42	; 0x2a
    9af4:	orr	r0, r0, r4, lsr #1
    9af8:	add	r0, r6, r0
    9afc:	bl	4d44 <sas_read4@plt>
    9b00:	str	r0, [sp, #52]	; 0x34
    9b04:	ldr	r0, [r5, #100]	; 0x64
    9b08:	add	r2, r6, #8
    9b0c:	mov	r1, #129	; 0x81
    9b10:	mov	r3, #8
    9b14:	str	r0, [sp]
    9b18:	add	r0, sp, #143	; 0x8f
    9b1c:	bl	4b94 <readstat_convert@plt>
    9b20:	cmp	r7, #0
    9b24:	mov	r7, #138	; 0x8a
    9b28:	movweq	r7, #106	; 0x6a
    9b2c:	cmp	r0, #0
    9b30:	bne	9c08 <readstat_parse_sas7bcat+0xa68>
    9b34:	ldr	r1, [sp, #56]	; 0x38
    9b38:	lsr	r0, r1, #1
    9b3c:	orr	r3, r0, r1, lsl #1
    9b40:	ldrsb	r0, [r6, #2]
    9b44:	cmn	r0, #1
    9b48:	bgt	9b58 <readstat_parse_sas7bcat+0x9b8>
    9b4c:	ldr	r0, [r5, #16]
    9b50:	cmp	r0, #0
    9b54:	beq	9760 <readstat_parse_sas7bcat+0x5c0>
    9b58:	ldr	r2, [sp, #76]	; 0x4c
    9b5c:	add	r0, r3, r7
    9b60:	cmp	r0, r2
    9b64:	bhi	9b90 <readstat_parse_sas7bcat+0x9f0>
    9b68:	add	r1, sp, #143	; 0x8f
    9b6c:	add	r0, r6, r0
    9b70:	stm	sp, {r1, r5}
    9b74:	sub	r1, r2, r7
    9b78:	sub	r1, r1, r3
    9b7c:	ldr	r2, [sp, #52]	; 0x34
    9b80:	ldr	r3, [sp, #32]
    9b84:	bl	9d68 <sas7bcat_parse_value_labels>
    9b88:	cmp	r0, #0
    9b8c:	bne	9bdc <readstat_parse_sas7bcat+0xa3c>
    9b90:	ldr	r4, [sp, #60]	; 0x3c
    9b94:	ldr	r2, [sp, #16]
    9b98:	ldr	r3, [sp, #12]
    9b9c:	ldr	r0, [r5, #84]	; 0x54
    9ba0:	adds	r2, r2, #1
    9ba4:	mov	r9, #0
    9ba8:	adc	r3, r3, #0
    9bac:	subs	r1, r2, r0
    9bb0:	sbcs	r0, r3, r0, asr #31
    9bb4:	blt	97c4 <readstat_parse_sas7bcat+0x624>
    9bb8:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9bbc:	mov	r9, #15
    9bc0:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9bc4:	ldr	r4, [sp, #60]	; 0x3c
    9bc8:	mov	r9, #15
    9bcc:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9bd0:	ldr	r4, [sp, #60]	; 0x3c
    9bd4:	mov	r9, #2
    9bd8:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9bdc:	ldr	r4, [sp, #60]	; 0x3c
    9be0:	mov	r9, r0
    9be4:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9be8:	ldr	r4, [sp, #60]	; 0x3c
    9bec:	mov	r9, #5
    9bf0:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9bf4:	mov	r9, #0
    9bf8:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9bfc:	mov	r6, #0
    9c00:	mov	r9, #3
    9c04:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9c08:	mov	r9, r0
    9c0c:	mov	r0, sl
    9c10:	mov	sl, r8
    9c14:	mov	r8, r0
    9c18:	ldr	r4, [sp, #60]	; 0x3c
    9c1c:	mov	r0, r8
    9c20:	mov	r8, sl
    9c24:	mov	sl, r0
    9c28:	b	9254 <readstat_parse_sas7bcat+0xb4>
    9c2c:	mov	r9, r0
    9c30:	b	9c18 <readstat_parse_sas7bcat+0xa78>
    9c34:	.word	0x000006b4

00009c38 <sas7bcat_augment_index>:
    9c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9c3c:	add	fp, sp, #28
    9c40:	sub	sp, sp, #4
    9c44:	mov	r7, r2
    9c48:	mov	r5, r2
    9c4c:	mov	r3, #0
    9c50:	ldr	r2, [r7, #32]!
    9c54:	cmp	r2, r1
    9c58:	bgt	9d48 <sas7bcat_augment_index+0x110>
    9c5c:	movw	r4, #19544	; 0x4c58
    9c60:	add	r9, r0, r1
    9c64:	add	sl, r5, #48	; 0x30
    9c68:	movt	r4, #21075	; 0x5253
    9c6c:	mov	r8, r0
    9c70:	ldr	r1, [r8], #8
    9c74:	cmp	r1, r4
    9c78:	moveq	r8, r0
    9c7c:	ldr	r0, [r8]
    9c80:	cmp	r0, r4
    9c84:	bne	9d3c <sas7bcat_augment_index+0x104>
    9c88:	ldr	r0, [sl]
    9c8c:	ldrb	r0, [r8, r0]
    9c90:	cmp	r0, #79	; 0x4f
    9c94:	bne	9cc4 <sas7bcat_augment_index+0x8c>
    9c98:	ldr	r0, [r5, #16]
    9c9c:	cmp	r0, #0
    9ca0:	beq	9ccc <sas7bcat_augment_index+0x94>
    9ca4:	ldr	r1, [r5, #24]
    9ca8:	add	r0, r8, #8
    9cac:	bl	4d44 <sas_read4@plt>
    9cb0:	ldr	r1, [r5, #24]
    9cb4:	mov	r6, r0
    9cb8:	add	r0, r8, #16
    9cbc:	bl	4d44 <sas_read4@plt>
    9cc0:	b	9ce8 <sas7bcat_augment_index+0xb0>
    9cc4:	ldr	r1, [r5, #84]	; 0x54
    9cc8:	b	9cfc <sas7bcat_augment_index+0xc4>
    9ccc:	ldr	r1, [r5, #24]
    9cd0:	add	r0, r8, #4
    9cd4:	bl	4d20 <sas_read2@plt>
    9cd8:	ldr	r1, [r5, #24]
    9cdc:	mov	r6, r0
    9ce0:	add	r0, r8, #8
    9ce4:	bl	4d20 <sas_read2@plt>
    9ce8:	ldrd	r2, [r5, #80]	; 0x50
    9cec:	add	r1, r3, #1
    9cf0:	str	r1, [r5, #84]	; 0x54
    9cf4:	str	r0, [r2, r3, lsl #3]!
    9cf8:	str	r6, [r2, #4]
    9cfc:	ldr	r0, [r5, #88]	; 0x58
    9d00:	cmp	r1, r0
    9d04:	bne	9d28 <sas7bcat_augment_index+0xf0>
    9d08:	lsl	r0, r1, #1
    9d0c:	lsl	r1, r1, #4
    9d10:	str	r0, [r5, #88]	; 0x58
    9d14:	ldr	r0, [r5, #80]	; 0x50
    9d18:	bl	4c3c <readstat_realloc@plt>
    9d1c:	cmp	r0, #0
    9d20:	str	r0, [r5, #80]	; 0x50
    9d24:	beq	9d44 <sas7bcat_augment_index+0x10c>
    9d28:	ldr	r1, [r7]
    9d2c:	add	r0, r8, r1
    9d30:	add	r1, r0, r1
    9d34:	cmp	r1, r9
    9d38:	bls	9c6c <sas7bcat_augment_index+0x34>
    9d3c:	mov	r3, #0
    9d40:	b	9d48 <sas7bcat_augment_index+0x110>
    9d44:	mov	r3, #3
    9d48:	mov	r0, r3
    9d4c:	sub	sp, fp, #28
    9d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00009d54 <compare_block_pointers>:
    9d54:	ldr	r1, [r1]
    9d58:	ldr	r0, [r0]
    9d5c:	sub	r0, r0, r1
    9d60:	bx	lr
    9d64:	nop	{0}

00009d68 <sas7bcat_parse_value_labels>:
    9d68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9d6c:	add	fp, sp, #28
    9d70:	sub	sp, sp, #4
    9d74:	vpush	{d8}
    9d78:	sub	sp, sp, #136	; 0x88
    9d7c:	mov	r5, r1
    9d80:	mov	r8, r0
    9d84:	mov	r0, r2
    9d88:	mov	r1, #4
    9d8c:	mov	r6, r3
    9d90:	mov	sl, r2
    9d94:	bl	4954 <readstat_calloc@plt>
    9d98:	mov	r9, r0
    9d9c:	bl	4858 <machine_is_little_endian@plt>
    9da0:	cmp	r9, #0
    9da4:	beq	a058 <sas7bcat_parse_value_labels+0x2f0>
    9da8:	cmp	r6, #1
    9dac:	str	r9, [fp, #-136]	; 0xffffff78
    9db0:	blt	a068 <sas7bcat_parse_value_labels+0x300>
    9db4:	str	r0, [fp, #-156]	; 0xffffff64
    9db8:	ldr	r0, [fp, #8]
    9dbc:	ldr	ip, [fp, #12]
    9dc0:	mov	r7, #0
    9dc4:	mov	r4, r8
    9dc8:	ldrb	r0, [r0]
    9dcc:	str	r0, [fp, #-140]	; 0xffffff74
    9dd0:	add	r0, r4, #3
    9dd4:	sub	r0, r0, r8
    9dd8:	cmp	r0, r5
    9ddc:	bhi	a060 <sas7bcat_parse_value_labels+0x2f8>
    9de0:	cmp	r7, sl
    9de4:	bge	9e24 <sas7bcat_parse_value_labels+0xbc>
    9de8:	ldr	r0, [ip, #20]
    9dec:	add	r0, r4, r0
    9df0:	add	r1, r0, #14
    9df4:	sub	r1, r1, r8
    9df8:	cmp	r1, r5
    9dfc:	bhi	a060 <sas7bcat_parse_value_labels+0x2f8>
    9e00:	ldr	r1, [ip, #24]
    9e04:	add	r0, r0, #10
    9e08:	bl	4d44 <sas_read4@plt>
    9e0c:	cmp	r0, sl
    9e10:	bcs	a060 <sas7bcat_parse_value_labels+0x2f8>
    9e14:	ldr	r2, [fp, #12]
    9e18:	sub	r1, r4, r8
    9e1c:	str	r1, [r9, r0, lsl #2]
    9e20:	mov	ip, r2
    9e24:	ldrb	r0, [r4, #2]
    9e28:	add	r7, r7, #1
    9e2c:	cmp	r7, r6
    9e30:	add	r0, r4, r0
    9e34:	add	r4, r0, #6
    9e38:	blt	9dd0 <sas7bcat_parse_value_labels+0x68>
    9e3c:	str	r6, [fp, #-160]	; 0xffffff60
    9e40:	cmp	sl, #1
    9e44:	mov	r9, #0
    9e48:	str	r5, [fp, #-152]	; 0xffffff68
    9e4c:	ldrge	r0, [fp, #-160]	; 0xffffff60
    9e50:	cmpge	r0, #1
    9e54:	blt	a06c <sas7bcat_parse_value_labels+0x304>
    9e58:	ldr	r0, [fp, #-140]	; 0xffffff74
    9e5c:	vldr	d8, [pc, #580]	; a0a8 <sas7bcat_parse_value_labels+0x340>
    9e60:	mov	r5, #0
    9e64:	subs	r0, r0, #36	; 0x24
    9e68:	movwne	r0, #5
    9e6c:	str	r0, [fp, #-168]	; 0xffffff58
    9e70:	sub	r0, fp, #64	; 0x40
    9e74:	add	r0, r0, #8
    9e78:	str	r0, [fp, #-172]	; 0xffffff54
    9e7c:	ldr	r9, [fp, #-136]	; 0xffffff78
    9e80:	ldr	r6, [fp, #-152]	; 0xffffff68
    9e84:	ldr	r0, [r9, r5, lsl #2]
    9e88:	add	r0, r8, r0
    9e8c:	add	r1, r0, #30
    9e90:	sub	r1, r1, r8
    9e94:	cmp	r1, r6
    9e98:	bhi	a060 <sas7bcat_parse_value_labels+0x2f8>
    9e9c:	add	r2, r4, #10
    9ea0:	sub	r1, r2, r8
    9ea4:	cmp	r1, r6
    9ea8:	bhi	a060 <sas7bcat_parse_value_labels+0x2f8>
    9eac:	ldr	r1, [fp, #-168]	; 0xffffff58
    9eb0:	mov	r3, #0
    9eb4:	str	r2, [fp, #-144]	; 0xffffff70
    9eb8:	str	r5, [fp, #-148]	; 0xffffff6c
    9ebc:	str	r3, [fp, #-60]	; 0xffffffc4
    9ec0:	str	r3, [fp, #-64]	; 0xffffffc0
    9ec4:	str	r1, [fp, #-56]	; 0xffffffc8
    9ec8:	strb	r3, [fp, #-52]	; 0xffffffcc
    9ecc:	ldrb	r1, [fp, #-51]	; 0xffffffcd
    9ed0:	and	r1, r1, #252	; 0xfc
    9ed4:	strb	r1, [fp, #-51]	; 0xffffffcd
    9ed8:	ldr	r1, [fp, #-140]	; 0xffffff74
    9edc:	cmp	r1, #36	; 0x24
    9ee0:	bne	9f2c <sas7bcat_parse_value_labels+0x1c4>
    9ee4:	ldrb	r1, [r0, #2]
    9ee8:	ldr	r2, [ip, #100]	; 0x64
    9eec:	sub	sp, sp, #8
    9ef0:	add	r0, r0, r1
    9ef4:	sub	r5, fp, #129	; 0x81
    9ef8:	str	r2, [sp]
    9efc:	mov	r1, #65	; 0x41
    9f00:	mov	r3, #16
    9f04:	sub	r2, r0, #10
    9f08:	mov	r0, r5
    9f0c:	bl	4b94 <readstat_convert@plt>
    9f10:	add	sp, sp, #8
    9f14:	cmp	r0, #0
    9f18:	bne	a0a0 <sas7bcat_parse_value_labels+0x338>
    9f1c:	ldr	r6, [fp, #-152]	; 0xffffff68
    9f20:	ldr	r2, [fp, #12]
    9f24:	str	r5, [fp, #-64]	; 0xffffffc0
    9f28:	b	9f74 <sas7bcat_parse_value_labels+0x20c>
    9f2c:	ldr	r1, [fp, #-156]	; 0xffffff64
    9f30:	add	r0, r0, #22
    9f34:	bl	4d14 <sas_read8@plt>
    9f38:	orr	r2, r1, #65280	; 0xff00
    9f3c:	movw	r3, #65535	; 0xffff
    9f40:	eor	r2, r2, r3
    9f44:	mvn	r3, r0
    9f48:	orrs	r2, r3, r2
    9f4c:	bne	9f64 <sas7bcat_parse_value_labels+0x1fc>
    9f50:	ubfx	r1, r1, #8, #8
    9f54:	sub	r0, fp, #64	; 0x40
    9f58:	bl	4de0 <sas_assign_tag@plt>
    9f5c:	vorr	d16, d8, d8
    9f60:	b	9f6c <sas7bcat_parse_value_labels+0x204>
    9f64:	eor	r1, r1, #-2147483648	; 0x80000000
    9f68:	vmov	d16, r0, r1
    9f6c:	ldr	r2, [fp, #12]
    9f70:	vstr	d16, [fp, #-64]	; 0xffffffc0
    9f74:	ldr	r1, [r2, #24]
    9f78:	add	r0, r4, #8
    9f7c:	mov	r5, r2
    9f80:	bl	4d20 <sas_read2@plt>
    9f84:	ldr	r2, [fp, #-144]	; 0xffffff70
    9f88:	mov	r7, r0
    9f8c:	add	r0, r2, r0
    9f90:	sub	r0, r0, r8
    9f94:	cmp	r0, r6
    9f98:	bhi	a060 <sas7bcat_parse_value_labels+0x2f8>
    9f9c:	ldr	r0, [r5, #4]
    9fa0:	mov	ip, r5
    9fa4:	cmp	r0, #0
    9fa8:	beq	a030 <sas7bcat_parse_value_labels+0x2c8>
    9fac:	mov	r0, #1
    9fb0:	movw	r3, #65528	; 0xfff8
    9fb4:	str	sp, [fp, #-164]	; 0xffffff5c
    9fb8:	orr	r1, r0, r7, lsl #2
    9fbc:	movt	r3, #7
    9fc0:	add	r0, r1, #7
    9fc4:	and	r0, r0, r3
    9fc8:	sub	r6, sp, r0
    9fcc:	mov	sp, r6
    9fd0:	ldr	r0, [ip, #100]	; 0x64
    9fd4:	sub	sp, sp, #8
    9fd8:	str	r0, [sp]
    9fdc:	mov	r0, r6
    9fe0:	mov	r3, r7
    9fe4:	mov	r5, ip
    9fe8:	bl	4b94 <readstat_convert@plt>
    9fec:	add	sp, sp, #8
    9ff0:	cmp	r0, #0
    9ff4:	bne	a088 <sas7bcat_parse_value_labels+0x320>
    9ff8:	ldr	r0, [fp, #-172]	; 0xffffff54
    9ffc:	ldrd	r0, [r0]
    a000:	ldmib	r5, {ip, lr}
    a004:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a008:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a00c:	push	{r0, r1, r6, lr}
    a010:	ldr	r0, [fp, #8]
    a014:	blx	ip
    a018:	add	sp, sp, #16
    a01c:	cmp	r0, #0
    a020:	bne	a094 <sas7bcat_parse_value_labels+0x32c>
    a024:	ldr	sp, [fp, #-164]	; 0xffffff5c
    a028:	ldr	r2, [fp, #12]
    a02c:	mov	ip, r2
    a030:	ldr	r5, [fp, #-148]	; 0xffffff6c
    a034:	mov	r9, #0
    a038:	add	r5, r5, #1
    a03c:	cmp	r5, sl
    a040:	addlt	r0, r4, r7
    a044:	addlt	r4, r0, #11
    a048:	ldrlt	r0, [fp, #-160]	; 0xffffff60
    a04c:	cmplt	r5, r0
    a050:	blt	9e7c <sas7bcat_parse_value_labels+0x114>
    a054:	b	a06c <sas7bcat_parse_value_labels+0x304>
    a058:	mov	r9, #3
    a05c:	b	a074 <sas7bcat_parse_value_labels+0x30c>
    a060:	mov	r9, #5
    a064:	b	a06c <sas7bcat_parse_value_labels+0x304>
    a068:	mov	r9, #0
    a06c:	ldr	r0, [fp, #-136]	; 0xffffff78
    a070:	bl	4864 <free@plt>
    a074:	mov	r0, r9
    a078:	sub	sp, fp, #40	; 0x28
    a07c:	vpop	{d8}
    a080:	add	sp, sp, #4
    a084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a088:	mov	r9, r0
    a08c:	ldr	sp, [fp, #-164]	; 0xffffff5c
    a090:	b	a06c <sas7bcat_parse_value_labels+0x304>
    a094:	mov	r9, #4
    a098:	ldr	sp, [fp, #-164]	; 0xffffff5c
    a09c:	b	a06c <sas7bcat_parse_value_labels+0x304>
    a0a0:	mov	r9, r0
    a0a4:	b	a06c <sas7bcat_parse_value_labels+0x304>
    a0a8:	.word	0x00000000
    a0ac:	.word	0x7ff80000

0000a0b0 <readstat_begin_writing_sas7bcat>:
    a0b0:	ldr	r2, [r0, #8]
    a0b4:	cmp	r2, #0
    a0b8:	moveq	r2, #9
    a0bc:	streq	r2, [r0, #8]
    a0c0:	ldr	r2, [pc, #12]	; a0d4 <readstat_begin_writing_sas7bcat+0x24>
    a0c4:	add	r2, pc, r2
    a0c8:	str	r2, [r0, #276]	; 0x114
    a0cc:	mov	r2, #0
    a0d0:	b	48f4 <readstat_begin_writing_file@plt>
    a0d4:	.word	0x0000000c

0000a0d8 <sas7bcat_begin_data>:
    a0d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a0dc:	add	fp, sp, #28
    a0e0:	sub	sp, sp, #356	; 0x164
    a0e4:	mov	r1, #0
    a0e8:	mov	r5, r0
    a0ec:	bl	4ca8 <sas_header_info_init@plt>
    a0f0:	ldr	r4, [r5, #40]	; 0x28
    a0f4:	mov	r6, r0
    a0f8:	lsl	r0, r4, #3
    a0fc:	bl	4a74 <malloc@plt>
    a100:	mov	r7, r0
    a104:	str	r6, [sp, #156]	; 0x9c
    a108:	ldr	r0, [r6, #32]!
    a10c:	str	r6, [sp, #164]	; 0xa4
    a110:	bl	4a74 <malloc@plt>
    a114:	cmp	r4, #1
    a118:	str	r0, [sp, #160]	; 0xa0
    a11c:	blt	a364 <sas7bcat_begin_data+0x28c>
    a120:	mov	r1, #0
    a124:	str	r5, [sp, #172]	; 0xac
    a128:	str	r7, [sp, #168]	; 0xa8
    a12c:	ldr	r0, [r5, #36]	; 0x24
    a130:	str	r1, [sp, #176]	; 0xb0
    a134:	ldr	r5, [r0, r1, lsl #2]
    a138:	add	r6, r5, #4
    a13c:	mov	r0, r6
    a140:	bl	4b58 <strlen@plt>
    a144:	cmp	r0, #32
    a148:	mov	r8, #32
    a14c:	mov	r4, r0
    a150:	mov	r1, r6
    a154:	movcc	r8, r0
    a158:	cmp	r0, #8
    a15c:	movls	r8, r0
    a160:	add	r0, sp, #184	; 0xb8
    a164:	mov	r2, r8
    a168:	bl	48b8 <memcpy@plt>
    a16c:	cmp	r4, #8
    a170:	ldr	r4, [r5, #264]	; 0x108
    a174:	mov	r7, #106	; 0x6a
    a178:	movwhi	r7, #138	; 0x8a
    a17c:	cmp	r4, #1
    a180:	blt	a1b0 <sas7bcat_begin_data+0xd8>
    a184:	mov	r6, #0
    a188:	mov	r0, r5
    a18c:	mov	r1, r6
    a190:	bl	4e04 <readstat_get_value_label@plt>
    a194:	ldr	r0, [r0, #28]
    a198:	ldr	r4, [r5, #264]	; 0x108
    a19c:	add	r6, r6, #1
    a1a0:	add	r0, r7, r0
    a1a4:	cmp	r6, r4
    a1a8:	add	r7, r0, #41	; 0x29
    a1ac:	blt	a188 <sas7bcat_begin_data+0xb0>
    a1b0:	add	r1, r7, #8
    a1b4:	mov	r0, #1
    a1b8:	bl	472c <calloc@plt>
    a1bc:	mov	r2, r0
    a1c0:	cmp	r8, #9
    a1c4:	str	r7, [r0]
    a1c8:	str	r4, [r0, #42]	; 0x2a
    a1cc:	str	r4, [r0, #46]	; 0x2e
    a1d0:	str	r0, [sp, #180]	; 0xb4
    a1d4:	bcc	a22c <sas7bcat_begin_data+0x154>
    a1d8:	mov	r0, #128	; 0x80
    a1dc:	ldr	r1, [sp, #188]	; 0xbc
    a1e0:	add	r6, r2, #110	; 0x6e
    a1e4:	cmp	r8, #31
    a1e8:	strb	r0, [r2, #6]
    a1ec:	ldr	r0, [sp, #184]	; 0xb8
    a1f0:	str	r1, [r2, #16]
    a1f4:	mov	r1, #32
    a1f8:	str	r0, [r2, #12]
    a1fc:	rsb	r2, r8, #32
    a200:	add	r0, r6, r8
    a204:	movwhi	r2, #0
    a208:	bl	4c00 <memset@plt>
    a20c:	mov	r0, r6
    a210:	add	r1, sp, #184	; 0xb8
    a214:	mov	r2, r8
    a218:	bl	48b8 <memcpy@plt>
    a21c:	mov	r0, #138	; 0x8a
    a220:	cmp	r4, #1
    a224:	bge	a258 <sas7bcat_begin_data+0x180>
    a228:	b	a340 <sas7bcat_begin_data+0x268>
    a22c:	movw	r1, #8224	; 0x2020
    a230:	movt	r1, #8224	; 0x2020
    a234:	str	r1, [r2, #12]!
    a238:	str	r1, [r2, #4]
    a23c:	mov	r0, r2
    a240:	add	r1, sp, #184	; 0xb8
    a244:	mov	r2, r8
    a248:	bl	48b8 <memcpy@plt>
    a24c:	mov	r0, #106	; 0x6a
    a250:	cmp	r4, #1
    a254:	blt	a340 <sas7bcat_begin_data+0x268>
    a258:	ldr	r3, [sp, #180]	; 0xb4
    a25c:	rsb	r2, r4, r4, lsl #4
    a260:	mov	r8, #0
    a264:	add	r2, r0, r2, lsl #1
    a268:	add	r1, r3, #4
    a26c:	add	r0, r3, r0
    a270:	add	r4, r1, r2
    a274:	add	r6, r0, #14
    a278:	mov	r0, r5
    a27c:	mov	r1, r8
    a280:	bl	4e04 <readstat_get_value_label@plt>
    a284:	mov	r7, r0
    a288:	mov	r0, #24
    a28c:	strb	r0, [r6, #-8]
    a290:	str	r8, [r6]
    a294:	ldr	r0, [r5]
    a298:	cmp	r0, #0
    a29c:	beq	a2d8 <sas7bcat_begin_data+0x200>
    a2a0:	ldr	r9, [r7]
    a2a4:	ldr	r1, [r7, #4]
    a2a8:	eor	sl, r1, #-2147483648	; 0x80000000
    a2ac:	bl	4858 <machine_is_little_endian@plt>
    a2b0:	cmp	r0, #0
    a2b4:	beq	a2cc <sas7bcat_begin_data+0x1f4>
    a2b8:	mov	r0, r9
    a2bc:	mov	r1, sl
    a2c0:	bl	4750 <byteswap8@plt>
    a2c4:	mov	r9, r0
    a2c8:	mov	sl, r1
    a2cc:	str	r9, [r6, #12]
    a2d0:	str	sl, [r6, #16]
    a2d4:	b	a308 <sas7bcat_begin_data+0x230>
    a2d8:	movw	r1, #8224	; 0x2020
    a2dc:	mov	r0, r6
    a2e0:	ldr	r2, [r7, #20]
    a2e4:	movt	r1, #8224	; 0x2020
    a2e8:	str	r1, [r0, #4]!
    a2ec:	str	r1, [r0, #12]
    a2f0:	str	r1, [r0, #8]
    a2f4:	str	r1, [r0, #4]
    a2f8:	ldr	r1, [r7, #16]
    a2fc:	cmp	r2, #16
    a300:	movcs	r2, #16
    a304:	bl	48b8 <memcpy@plt>
    a308:	ldr	r2, [r7, #28]
    a30c:	add	r0, r4, #10
    a310:	strh	r2, [r4, #8]
    a314:	sxth	r2, r2
    a318:	ldr	r1, [r7, #24]
    a31c:	bl	48b8 <memcpy@plt>
    a320:	ldr	r0, [r7, #28]
    a324:	add	r8, r8, #1
    a328:	add	r6, r6, #30
    a32c:	add	r0, r4, r0
    a330:	add	r4, r0, #11
    a334:	ldr	r0, [r5, #264]	; 0x108
    a338:	cmp	r8, r0
    a33c:	blt	a278 <sas7bcat_begin_data+0x1a0>
    a340:	ldr	r7, [sp, #168]	; 0xa8
    a344:	ldr	r1, [sp, #176]	; 0xb0
    a348:	ldr	r0, [sp, #180]	; 0xb4
    a34c:	ldr	r5, [sp, #172]	; 0xac
    a350:	str	r0, [r7, r1, lsl #2]
    a354:	add	r1, r1, #1
    a358:	ldr	r0, [r5, #40]	; 0x28
    a35c:	cmp	r1, r0
    a360:	blt	a12c <sas7bcat_begin_data+0x54>
    a364:	ldr	r8, [sp, #156]	; 0x9c
    a368:	mov	r0, #4
    a36c:	mov	r1, #0
    a370:	add	r4, sp, #184	; 0xb8
    a374:	mov	r2, #156	; 0x9c
    a378:	strd	r0, [r8, #56]	; 0x38
    a37c:	mov	r0, r4
    a380:	mov	r1, #0
    a384:	bl	4c00 <memset@plt>
    a388:	ldr	r0, [r8, #4]
    a38c:	mov	r1, #34	; 0x22
    a390:	strb	r1, [sp, #219]	; 0xdb
    a394:	mov	r1, #51	; 0x33
    a398:	cmp	r0, #0
    a39c:	movweq	r1, #34	; 0x22
    a3a0:	strb	r1, [sp, #216]	; 0xd8
    a3a4:	bl	4858 <machine_is_little_endian@plt>
    a3a8:	ldr	r1, [pc, #652]	; a63c <sas7bcat_begin_data+0x564>
    a3ac:	cmp	r0, #0
    a3b0:	movwne	r0, #1
    a3b4:	ldr	r1, [pc, r1]
    a3b8:	vld1.8	{d16-d17}, [r1]!
    a3bc:	vld1.8	{d18-d19}, [r1]
    a3c0:	add	r1, r4, #16
    a3c4:	vst1.64	{d18-d19}, [r1]
    a3c8:	movw	r1, #18758	; 0x4946
    a3cc:	movt	r1, #17740	; 0x454c
    a3d0:	str	r1, [sp, #272]	; 0x110
    a3d4:	movw	r1, #16723	; 0x4153
    a3d8:	movt	r1, #8275	; 0x2053
    a3dc:	str	r1, [sp, #268]	; 0x10c
    a3e0:	movw	r1, #20300	; 0x4f4c
    a3e4:	movt	r1, #8263	; 0x2047
    a3e8:	str	r1, [sp, #344]	; 0x158
    a3ec:	movw	r1, #16707	; 0x4143
    a3f0:	movt	r1, #16724	; 0x4154
    a3f4:	str	r1, [sp, #340]	; 0x154
    a3f8:	mov	r1, #49	; 0x31
    a3fc:	strb	r1, [sp, #223]	; 0xdf
    a400:	mov	r1, #20
    a404:	strb	r1, [sp, #254]	; 0xfe
    a408:	strb	r0, [sp, #221]	; 0xdd
    a40c:	mov	r0, #8
    a410:	mov	r1, sp
    a414:	vst1.64	{d16-d17}, [r4], r0
    a418:	movw	r0, #156	; 0x9c
    a41c:	ldr	r2, [r4], #4
    a420:	subs	r0, r0, #4
    a424:	str	r2, [r1], #4
    a428:	bne	a41c <sas7bcat_begin_data+0x344>
    a42c:	ldr	r2, [sp, #184]	; 0xb8
    a430:	ldr	r3, [sp, #188]	; 0xbc
    a434:	mov	r0, r5
    a438:	mov	r1, r8
    a43c:	bl	4a38 <sas_write_header@plt>
    a440:	mov	r6, r0
    a444:	cmp	r0, #0
    a448:	bne	a5f0 <sas7bcat_begin_data+0x518>
    a44c:	ldr	r0, [sp, #164]	; 0xa4
    a450:	ldr	r1, [r0]
    a454:	mov	r0, r5
    a458:	bl	49a8 <readstat_write_zeros@plt>
    a45c:	mov	r6, r0
    a460:	cmp	r0, #0
    a464:	bne	a5f0 <sas7bcat_begin_data+0x518>
    a468:	ldr	r0, [sp, #164]	; 0xa4
    a46c:	ldr	r6, [sp, #160]	; 0xa0
    a470:	mov	r1, #0
    a474:	mov	sl, r7
    a478:	mov	r4, #0
    a47c:	ldr	r2, [r0]
    a480:	mov	r0, r6
    a484:	bl	4c00 <memset@plt>
    a488:	ldr	r0, [r5, #40]	; 0x28
    a48c:	mov	r1, r6
    a490:	cmp	r0, #1
    a494:	blt	a4f8 <sas7bcat_begin_data+0x420>
    a498:	movw	lr, #19544	; 0x4c58
    a49c:	add	r7, r1, #856	; 0x358
    a4a0:	mov	r0, #16
    a4a4:	mov	ip, #4
    a4a8:	mov	r3, #79	; 0x4f
    a4ac:	movt	lr, #21075	; 0x5253
    a4b0:	ldr	r2, [sp, #164]	; 0xa4
    a4b4:	ldr	r6, [r2]
    a4b8:	add	r2, r1, r6
    a4bc:	add	r6, r7, #212	; 0xd4
    a4c0:	cmp	r6, r2
    a4c4:	bhi	a4f8 <sas7bcat_begin_data+0x420>
    a4c8:	strh	ip, [r7, #4]
    a4cc:	str	lr, [r7]
    a4d0:	strh	r0, [r7, #8]
    a4d4:	strb	r3, [r7, #50]	; 0x32
    a4d8:	ldr	r7, [sl, r4, lsl #2]
    a4dc:	add	r4, r4, #1
    a4e0:	ldrh	r7, [r7]
    a4e4:	add	r0, r0, r7
    a4e8:	ldr	r7, [r5, #40]	; 0x28
    a4ec:	cmp	r4, r7
    a4f0:	mov	r7, r6
    a4f4:	blt	a4b0 <sas7bcat_begin_data+0x3d8>
    a4f8:	ldr	r0, [sp, #164]	; 0xa4
    a4fc:	ldr	r2, [r0]
    a500:	mov	r0, r5
    a504:	bl	4d98 <readstat_write_bytes@plt>
    a508:	mov	r6, r0
    a50c:	cmp	r0, #0
    a510:	mov	r7, sl
    a514:	bne	a5f0 <sas7bcat_begin_data+0x518>
    a518:	ldr	r0, [sp, #164]	; 0xa4
    a51c:	ldr	r1, [r0]
    a520:	mov	r0, r5
    a524:	bl	49a8 <readstat_write_zeros@plt>
    a528:	mov	r6, r0
    a52c:	cmp	r0, #0
    a530:	bne	a5f0 <sas7bcat_begin_data+0x518>
    a534:	ldr	r0, [sp, #164]	; 0xa4
    a538:	mov	r1, #0
    a53c:	mov	r4, #0
    a540:	ldr	r2, [r0]
    a544:	ldr	r0, [sp, #160]	; 0xa0
    a548:	bl	4c00 <memset@plt>
    a54c:	ldr	r8, [r5, #40]	; 0x28
    a550:	str	r5, [sp, #172]	; 0xac
    a554:	cmp	r8, #1
    a558:	blt	a5cc <sas7bcat_begin_data+0x4f4>
    a55c:	mov	r1, #16
    a560:	mov	r6, #0
    a564:	ldr	r7, [sl, r6, lsl #2]
    a568:	ldr	r3, [sp, #164]	; 0xa4
    a56c:	sxth	r1, r1
    a570:	add	r5, r1, #16
    a574:	ldr	r0, [r7]
    a578:	ldm	r3, {r3, r9}
    a57c:	add	r2, r0, r5
    a580:	subs	r2, r3, r2
    a584:	sbcs	r2, r9, #0
    a588:	blt	a5cc <sas7bcat_begin_data+0x4f4>
    a58c:	ldr	r3, [sp, #160]	; 0xa0
    a590:	mov	r2, r3
    a594:	str	r4, [r2, r1]!
    a598:	mov	r1, r7
    a59c:	str	r4, [r2, #12]
    a5a0:	str	r4, [r2, #8]
    a5a4:	strh	r4, [r2, #4]
    a5a8:	strh	r0, [r2, #6]
    a5ac:	sxtah	r0, r3, r5
    a5b0:	ldr	r2, [r1], #4
    a5b4:	bl	48b8 <memcpy@plt>
    a5b8:	ldr	r0, [r7]
    a5bc:	add	r6, r6, #1
    a5c0:	cmp	r6, r8
    a5c4:	sxtah	r1, r0, r5
    a5c8:	blt	a564 <sas7bcat_begin_data+0x48c>
    a5cc:	ldr	r0, [sp, #164]	; 0xa4
    a5d0:	ldr	r5, [sp, #172]	; 0xac
    a5d4:	ldr	r1, [sp, #160]	; 0xa0
    a5d8:	ldr	r2, [r0]
    a5dc:	mov	r0, r5
    a5e0:	bl	4d98 <readstat_write_bytes@plt>
    a5e4:	ldr	r8, [sp, #156]	; 0x9c
    a5e8:	mov	r6, r0
    a5ec:	mov	r7, sl
    a5f0:	ldr	r0, [r5, #40]	; 0x28
    a5f4:	cmp	r0, #1
    a5f8:	blt	a618 <sas7bcat_begin_data+0x540>
    a5fc:	mov	r4, #0
    a600:	ldr	r0, [r7, r4, lsl #2]
    a604:	bl	4864 <free@plt>
    a608:	ldr	r0, [r5, #40]	; 0x28
    a60c:	add	r4, r4, #1
    a610:	cmp	r4, r0
    a614:	blt	a600 <sas7bcat_begin_data+0x528>
    a618:	mov	r0, r7
    a61c:	bl	4864 <free@plt>
    a620:	mov	r0, r8
    a624:	bl	4864 <free@plt>
    a628:	ldr	r0, [sp, #160]	; 0xa0
    a62c:	bl	4864 <free@plt>
    a630:	mov	r0, r6
    a634:	sub	sp, fp, #28
    a638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a63c:	.word	0x0003eed4

0000a640 <readstat_parse_sas7bdat>:
    a640:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a644:	add	fp, sp, #28
    a648:	sub	sp, sp, #132	; 0x84
    a64c:	ldr	r8, [r0, #32]
    a650:	mov	r6, r1
    a654:	mov	r4, r0
    a658:	mov	r0, #1
    a65c:	movw	r1, #2536	; 0x9e8
    a660:	mov	sl, r2
    a664:	bl	472c <calloc@plt>
    a668:	mov	r5, r0
    a66c:	mov	r0, #1
    a670:	mov	r1, #152	; 0x98
    a674:	bl	472c <calloc@plt>
    a678:	mov	r9, r0
    a67c:	add	r0, r4, #16
    a680:	mov	r1, #48	; 0x30
    a684:	mov	r2, r4
    a688:	add	r7, r4, #36	; 0x24
    a68c:	vld1.32	{d16-d17}, [r0]
    a690:	vld1.32	{d18-d19}, [r2], r1
    a694:	add	r0, r5, #16
    a698:	mov	r1, r5
    a69c:	vst1.32	{d16-d17}, [r0]
    a6a0:	mov	r0, #84	; 0x54
    a6a4:	vst1.32	{d18-d19}, [r1], r0
    a6a8:	ldm	r7, {r0, r3, r7}
    a6ac:	str	sl, [r5, #52]	; 0x34
    a6b0:	str	r8, [r5, #56]	; 0x38
    a6b4:	str	r0, [r5, #200]	; 0xc8
    a6b8:	str	r3, [r5, #204]	; 0xcc
    a6bc:	str	r7, [r1]
    a6c0:	ldr	r0, [r2]
    a6c4:	cmp	r0, #1
    a6c8:	strge	r0, [r5, #88]	; 0x58
    a6cc:	mov	r0, r6
    a6d0:	ldr	r2, [r8]
    a6d4:	ldr	r1, [r8, #20]
    a6d8:	blx	r2
    a6dc:	cmn	r0, #1
    a6e0:	str	sl, [fp, #-32]	; 0xffffffe0
    a6e4:	beq	a77c <readstat_parse_sas7bdat+0x13c>
    a6e8:	ldr	r3, [r8, #8]
    a6ec:	ldr	r2, [r8, #20]
    a6f0:	mov	r0, #0
    a6f4:	mov	r1, #2
    a6f8:	blx	r3
    a6fc:	mov	r4, r5
    a700:	asr	r1, r0, #31
    a704:	cmn	r0, #1
    a708:	str	r0, [r4, #32]!
    a70c:	str	r1, [r4, #4]
    a710:	beq	a788 <readstat_parse_sas7bdat+0x148>
    a714:	ldr	r3, [r8, #8]
    a718:	ldr	r2, [r8, #20]
    a71c:	mov	r0, #0
    a720:	mov	r1, #0
    a724:	blx	r3
    a728:	mov	r6, r5
    a72c:	cmn	r0, #1
    a730:	ldr	r2, [r6, #24]!
    a734:	beq	a7e0 <readstat_parse_sas7bdat+0x1a0>
    a738:	mov	r0, r8
    a73c:	mov	r1, r9
    a740:	mov	r3, sl
    a744:	bl	4cf0 <sas_read_header@plt>
    a748:	mov	sl, r0
    a74c:	cmp	r0, #0
    a750:	beq	a9a4 <readstat_parse_sas7bdat+0x364>
    a754:	ldr	r1, [r8, #4]
    a758:	ldr	r0, [r8, #20]
    a75c:	blx	r1
    a760:	cmp	sl, #15
    a764:	bhi	a8a4 <readstat_parse_sas7bdat+0x264>
    a768:	mov	r0, #1
    a76c:	movw	r1, #32774	; 0x8006
    a770:	tst	r1, r0, lsl sl
    a774:	bne	a840 <readstat_parse_sas7bdat+0x200>
    a778:	b	a8a4 <readstat_parse_sas7bdat+0x264>
    a77c:	add	r6, r5, #24
    a780:	mov	sl, #1
    a784:	b	a834 <readstat_parse_sas7bdat+0x1f4>
    a788:	mov	r6, r5
    a78c:	mov	sl, #15
    a790:	ldr	r2, [r6, #24]!
    a794:	cmp	r2, #0
    a798:	beq	a834 <readstat_parse_sas7bdat+0x1f4>
    a79c:	ldr	r3, [pc, #4092]	; b7a0 <readstat_parse_sas7bdat+0x1160>
    a7a0:	mov	r1, #32
    a7a4:	movw	r0, #481	; 0x1e1
    a7a8:	add	r0, r5, r0
    a7ac:	add	r3, pc, r3
    a7b0:	add	r7, r3, #16
    a7b4:	vld1.64	{d16-d17}, [r3], r1
    a7b8:	movw	r1, #497	; 0x1f1
    a7bc:	vld1.64	{d18-d19}, [r7]
    a7c0:	add	r1, r5, r1
    a7c4:	vldr	d20, [r3]
    a7c8:	vst1.8	{d16-d17}, [r0]
    a7cc:	vst1.8	{d18-d19}, [r1]
    a7d0:	movw	r1, #513	; 0x201
    a7d4:	add	r1, r5, r1
    a7d8:	vst1.8	{d20}, [r1]
    a7dc:	b	a82c <readstat_parse_sas7bdat+0x1ec>
    a7e0:	mov	sl, #15
    a7e4:	cmp	r2, #0
    a7e8:	beq	a834 <readstat_parse_sas7bdat+0x1f4>
    a7ec:	ldr	r3, [pc, #4016]	; b7a4 <readstat_parse_sas7bdat+0x1164>
    a7f0:	mov	r1, #30
    a7f4:	movw	r0, #481	; 0x1e1
    a7f8:	add	r0, r5, r0
    a7fc:	add	r3, pc, r3
    a800:	add	r7, r3, #16
    a804:	vld1.64	{d16-d17}, [r3], r1
    a808:	movw	r1, #497	; 0x1f1
    a80c:	vld1.64	{d18-d19}, [r7]
    a810:	add	r1, r5, r1
    a814:	vld1.16	{d20-d21}, [r3]
    a818:	vst1.8	{d16-d17}, [r0]
    a81c:	vst1.8	{d18-d19}, [r1]
    a820:	movw	r1, #511	; 0x1ff
    a824:	add	r1, r5, r1
    a828:	vst1.8	{d20-d21}, [r1]
    a82c:	ldr	r1, [r5, #52]	; 0x34
    a830:	blx	r2
    a834:	ldr	r1, [r8, #4]
    a838:	ldr	r0, [r8, #20]
    a83c:	blx	r1
    a840:	ldr	r0, [r6]
    a844:	cmp	r0, #0
    a848:	beq	a8a4 <readstat_parse_sas7bdat+0x264>
    a84c:	mov	r0, sl
    a850:	bl	47ec <readstat_error_message@plt>
    a854:	mov	r4, r0
    a858:	bl	4bc4 <__errno_location@plt>
    a85c:	mov	r7, r0
    a860:	ldr	r0, [r0]
    a864:	bl	4aa4 <strerror@plt>
    a868:	ldr	r1, [r7]
    a86c:	str	sl, [sp]
    a870:	mov	r3, r4
    a874:	stmib	sp, {r0, r1}
    a878:	movw	r0, #481	; 0x1e1
    a87c:	mov	r1, #2048	; 0x800
    a880:	ldr	r2, [pc, #3988]	; b81c <readstat_parse_sas7bdat+0x11dc>
    a884:	add	r7, r5, r0
    a888:	mov	r0, r7
    a88c:	add	r2, pc, r2
    a890:	bl	4bdc <snprintf@plt>
    a894:	ldr	r2, [r5, #24]
    a898:	ldr	r1, [fp, #-32]	; 0xffffffe0
    a89c:	mov	r0, r7
    a8a0:	blx	r2
    a8a4:	ldr	r0, [r5, #160]	; 0xa0
    a8a8:	cmp	r0, #0
    a8ac:	beq	a8e8 <readstat_parse_sas7bdat+0x2a8>
    a8b0:	ldr	r1, [r5, #152]	; 0x98
    a8b4:	cmp	r1, #1
    a8b8:	blt	a8dc <readstat_parse_sas7bdat+0x29c>
    a8bc:	mov	r4, #0
    a8c0:	ldr	r0, [r0, r4, lsl #2]
    a8c4:	bl	4864 <free@plt>
    a8c8:	ldr	r1, [r5, #152]	; 0x98
    a8cc:	ldr	r0, [r5, #160]	; 0xa0
    a8d0:	add	r4, r4, #1
    a8d4:	cmp	r4, r1
    a8d8:	blt	a8c0 <readstat_parse_sas7bdat+0x280>
    a8dc:	bl	4864 <free@plt>
    a8e0:	ldr	r0, [r5, #156]	; 0x9c
    a8e4:	bl	4864 <free@plt>
    a8e8:	ldr	r0, [r5, #196]	; 0xc4
    a8ec:	cmp	r0, #0
    a8f0:	beq	a930 <readstat_parse_sas7bdat+0x2f0>
    a8f4:	ldr	r2, [r5, #80]	; 0x50
    a8f8:	cmp	r2, #0
    a8fc:	beq	a92c <readstat_parse_sas7bdat+0x2ec>
    a900:	mov	r4, #0
    a904:	ldr	r1, [r0, r4, lsl #2]
    a908:	cmp	r1, #0
    a90c:	beq	a920 <readstat_parse_sas7bdat+0x2e0>
    a910:	mov	r0, r1
    a914:	bl	4864 <free@plt>
    a918:	ldr	r2, [r5, #80]	; 0x50
    a91c:	ldr	r0, [r5, #196]	; 0xc4
    a920:	add	r4, r4, #1
    a924:	cmp	r4, r2
    a928:	bcc	a904 <readstat_parse_sas7bdat+0x2c4>
    a92c:	bl	4864 <free@plt>
    a930:	ldr	r0, [r5, #192]	; 0xc0
    a934:	cmp	r0, #0
    a938:	beq	a940 <readstat_parse_sas7bdat+0x300>
    a93c:	bl	4864 <free@plt>
    a940:	ldr	r0, [r5, #180]	; 0xb4
    a944:	cmp	r0, #0
    a948:	beq	a950 <readstat_parse_sas7bdat+0x310>
    a94c:	bl	4864 <free@plt>
    a950:	ldr	r0, [r5, #120]	; 0x78
    a954:	cmp	r0, #0
    a958:	beq	a960 <readstat_parse_sas7bdat+0x320>
    a95c:	bl	4864 <free@plt>
    a960:	ldr	r0, [r5, #124]	; 0x7c
    a964:	cmp	r0, #0
    a968:	beq	a970 <readstat_parse_sas7bdat+0x330>
    a96c:	bl	4864 <free@plt>
    a970:	ldr	r0, [r5, #208]	; 0xd0
    a974:	cmp	r0, #0
    a978:	beq	a980 <readstat_parse_sas7bdat+0x340>
    a97c:	bl	478c <iconv_close@plt>
    a980:	mov	r0, r5
    a984:	bl	4864 <free@plt>
    a988:	cmp	r9, #0
    a98c:	beq	a998 <readstat_parse_sas7bdat+0x358>
    a990:	mov	r0, r9
    a994:	bl	4864 <free@plt>
    a998:	mov	r0, sl
    a99c:	sub	sp, fp, #28
    a9a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a9a4:	str	r4, [fp, #-76]	; 0xffffffb4
    a9a8:	str	r6, [fp, #-40]	; 0xffffffd8
    a9ac:	add	r3, r5, #40	; 0x28
    a9b0:	ldm	r9, {r0, r1, r2}
    a9b4:	stm	r3, {r0, r1, r2}
    a9b8:	bl	4858 <machine_is_little_endian@plt>
    a9bc:	ldr	r1, [r9]
    a9c0:	add	r7, r9, #32
    a9c4:	ldr	r2, [r9, #68]	; 0x44
    a9c8:	add	sl, r5, #96	; 0x60
    a9cc:	eor	r0, r1, r0
    a9d0:	ldr	r1, [r9, #64]	; 0x40
    a9d4:	str	r0, [r5, #60]	; 0x3c
    a9d8:	ldm	r7, {r0, r3, r7}
    a9dc:	str	r9, [fp, #-36]	; 0xffffffdc
    a9e0:	ldr	r6, [fp, #-36]	; 0xffffffdc
    a9e4:	ldr	r4, [fp, #-36]	; 0xffffffdc
    a9e8:	ldr	r9, [r6, #44]	; 0x2c
    a9ec:	ldr	r6, [fp, #-36]	; 0xffffffdc
    a9f0:	ldr	r4, [r4, #56]	; 0x38
    a9f4:	ldr	lr, [r6, #48]	; 0x30
    a9f8:	ldr	r6, [fp, #-36]	; 0xffffffdc
    a9fc:	ldr	ip, [r6, #52]	; 0x34
    aa00:	ldr	r6, [fp, #-36]	; 0xffffffdc
    aa04:	ldr	r6, [r6, #60]	; 0x3c
    aa08:	stm	sl, {r1, r2, r4, r6}
    aa0c:	str	r0, [r5, #112]	; 0x70
    aa10:	str	r3, [r5, #116]	; 0x74
    aa14:	mov	r2, #8
    aa18:	ldr	r1, [r5, #44]	; 0x2c
    aa1c:	str	r9, [r5, #132]	; 0x84
    aa20:	ldr	r9, [fp, #-36]	; 0xffffffdc
    aa24:	str	r7, [r5, #128]	; 0x80
    aa28:	cmp	r1, #0
    aa2c:	mov	r1, #0
    aa30:	ldr	r3, [r9, #12]
    aa34:	movweq	r2, #4
    aa38:	str	r1, [r5, #140]	; 0x8c
    aa3c:	ldr	r1, [r9, #72]	; 0x48
    aa40:	str	r2, [r5, #136]	; 0x88
    aa44:	ldr	r2, [r9, #76]	; 0x4c
    aa48:	str	ip, [r5, #148]	; 0x94
    aa4c:	add	ip, r5, #212	; 0xd4
    aa50:	str	lr, [r5, #144]	; 0x90
    aa54:	stm	ip, {r1, r2, r3}
    aa58:	ldr	r1, [r5, #200]	; 0xc8
    aa5c:	cmp	r1, #0
    aa60:	ldreq	r1, [r9, #144]	; 0x90
    aa64:	streq	r1, [r5, #200]	; 0xc8
    aa68:	bl	4b88 <readstat_malloc@plt>
    aa6c:	cmp	r0, #0
    aa70:	str	r0, [r5, #120]	; 0x78
    aa74:	beq	abf0 <readstat_parse_sas7bdat+0x5b0>
    aa78:	ldr	r4, [r5, #200]	; 0xc8
    aa7c:	cmp	r4, #0
    aa80:	ldrne	r6, [r5, #204]	; 0xcc
    aa84:	cmpne	r6, #0
    aa88:	bne	ac04 <readstat_parse_sas7bdat+0x5c4>
    aa8c:	ldr	r0, [r5, #208]	; 0xd0
    aa90:	add	r2, r9, #80	; 0x50
    aa94:	movw	r1, #257	; 0x101
    aa98:	mov	r3, #64	; 0x40
    aa9c:	str	r0, [sp]
    aaa0:	add	r0, r5, #224	; 0xe0
    aaa4:	bl	4b94 <readstat_convert@plt>
    aaa8:	ldr	r6, [fp, #-40]	; 0xffffffd8
    aaac:	mov	sl, r0
    aab0:	cmp	r0, #0
    aab4:	bne	a754 <readstat_parse_sas7bdat+0x114>
    aab8:	add	r0, r5, #104	; 0x68
    aabc:	ldr	sl, [r5, #56]	; 0x38
    aac0:	add	r9, r5, #112	; 0x70
    aac4:	add	r2, r5, #96	; 0x60
    aac8:	str	r0, [fp, #-72]	; 0xffffffb8
    aacc:	ldrd	r0, [r0]
    aad0:	str	r9, [fp, #-56]	; 0xffffffc8
    aad4:	str	r2, [fp, #-60]	; 0xffffffc4
    aad8:	orrs	r0, r0, r1
    aadc:	beq	ac34 <readstat_parse_sas7bdat+0x5f4>
    aae0:	mov	r4, #0
    aae4:	mov	r7, #0
    aae8:	str	sl, [fp, #-52]	; 0xffffffcc
    aaec:	ldr	r0, [r2]
    aaf0:	ldr	r1, [r9]
    aaf4:	ldr	r3, [sl, #8]
    aaf8:	ldr	r2, [sl, #20]
    aafc:	str	r7, [fp, #-44]	; 0xffffffd4
    ab00:	mla	r0, r1, r4, r0
    ab04:	mov	r1, #0
    ab08:	blx	r3
    ab0c:	cmn	r0, #1
    ab10:	beq	ac50 <readstat_parse_sas7bdat+0x610>
    ab14:	ldr	r1, [r5, #44]	; 0x2c
    ab18:	ldr	r0, [r5, #120]	; 0x78
    ab1c:	mov	r6, #32
    ab20:	ldr	r3, [sl, #12]
    ab24:	ldr	r2, [sl, #20]
    ab28:	ldr	r7, [r9]
    ab2c:	str	r4, [fp, #-48]	; 0xffffffd0
    ab30:	cmp	r1, #0
    ab34:	movweq	r6, #16
    ab38:	orr	r4, r6, #2
    ab3c:	mov	r1, r4
    ab40:	blx	r3
    ab44:	mov	sl, #2
    ab48:	cmp	r0, r4
    ab4c:	bcc	b660 <readstat_parse_sas7bdat+0x1020>
    ab50:	ldr	r0, [r5, #120]	; 0x78
    ab54:	ldr	r1, [r5, #60]	; 0x3c
    ab58:	add	r0, r0, r6
    ab5c:	bl	4d20 <sas_read2@plt>
    ab60:	and	r1, r0, #3840	; 0xf00
    ab64:	cmp	r1, #256	; 0x100
    ab68:	beq	aca4 <readstat_parse_sas7bdat+0x664>
    ab6c:	ldr	r6, [fp, #-40]	; 0xffffffd8
    ab70:	tst	r0, #36864	; 0x9000
    ab74:	bne	abc0 <readstat_parse_sas7bdat+0x580>
    ab78:	ldr	r1, [fp, #-52]	; 0xffffffcc
    ab7c:	ldr	r0, [r5, #120]	; 0x78
    ab80:	sub	r9, r7, r4
    ab84:	ldr	r3, [r1, #12]
    ab88:	ldr	r2, [r1, #20]
    ab8c:	add	r0, r0, r4
    ab90:	mov	r1, r9
    ab94:	blx	r3
    ab98:	cmp	r0, r9
    ab9c:	bcc	b78c <readstat_parse_sas7bdat+0x114c>
    aba0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    aba4:	mov	r2, r5
    aba8:	ldr	r1, [r0]
    abac:	ldr	r0, [r5, #120]	; 0x78
    abb0:	bl	be90 <sas7bdat_parse_page_pass1>
    abb4:	ldr	r9, [fp, #-36]	; 0xffffffdc
    abb8:	cmp	r0, #0
    abbc:	bne	b7a8 <readstat_parse_sas7bdat+0x1168>
    abc0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    abc4:	ldr	r4, [fp, #-48]	; 0xffffffd0
    abc8:	ldr	r7, [fp, #-44]	; 0xffffffd4
    abcc:	sub	sl, fp, #60	; 0x3c
    abd0:	ldrd	r0, [r0]
    abd4:	adds	r4, r4, #1
    abd8:	adc	r7, r7, #0
    abdc:	subs	r2, r4, r0
    abe0:	sbcs	r2, r7, r1
    abe4:	ldm	sl, {r2, r9, sl}
    abe8:	bcc	aaec <readstat_parse_sas7bdat+0x4ac>
    abec:	b	acc0 <readstat_parse_sas7bdat+0x680>
    abf0:	mov	sl, #3
    abf4:	ldr	r1, [r8, #4]
    abf8:	ldr	r0, [r8, #20]
    abfc:	blx	r1
    ac00:	b	a8a4 <readstat_parse_sas7bdat+0x264>
    ac04:	mov	r0, r4
    ac08:	mov	r1, r6
    ac0c:	bl	47b0 <strcmp@plt>
    ac10:	cmp	r0, #0
    ac14:	beq	aa8c <readstat_parse_sas7bdat+0x44c>
    ac18:	mov	r0, r6
    ac1c:	mov	r1, r4
    ac20:	bl	4a98 <iconv_open@plt>
    ac24:	cmn	r0, #1
    ac28:	beq	ac48 <readstat_parse_sas7bdat+0x608>
    ac2c:	str	r0, [r5, #208]	; 0xd0
    ac30:	b	aa8c <readstat_parse_sas7bdat+0x44c>
    ac34:	mov	r0, #0
    ac38:	mov	r1, #0
    ac3c:	mov	r4, #0
    ac40:	mov	r7, #0
    ac44:	b	acc4 <readstat_parse_sas7bdat+0x684>
    ac48:	mov	sl, #7
    ac4c:	b	abf4 <readstat_parse_sas7bdat+0x5b4>
    ac50:	ldr	r0, [r6]
    ac54:	mov	sl, #15
    ac58:	cmp	r0, #0
    ac5c:	beq	b78c <readstat_parse_sas7bdat+0x114c>
    ac60:	ldr	r0, [fp, #-60]	; 0xffffffc4
    ac64:	ldrd	r2, [r9]
    ac68:	ldrd	r0, [r0]
    ac6c:	umull	r7, r6, r2, r4
    ac70:	adds	ip, r7, r0
    ac74:	ldr	r7, [fp, #-44]	; 0xffffffd4
    ac78:	str	ip, [sp]
    ac7c:	add	ip, sp, #8
    ac80:	mla	r6, r2, r7, r6
    ac84:	mla	r6, r3, r4, r6
    ac88:	adc	r6, r6, r1
    ac8c:	str	r6, [sp, #4]
    ac90:	ldr	r6, [fp, #-40]	; 0xffffffd8
    ac94:	stm	ip, {r0, r1, r4, r7}
    ac98:	str	r2, [sp, #24]
    ac9c:	str	r3, [sp, #28]
    aca0:	b	b760 <readstat_parse_sas7bdat+0x1120>
    aca4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    aca8:	ldr	r6, [fp, #-40]	; 0xffffffd8
    acac:	ldr	r9, [fp, #-56]	; 0xffffffc8
    acb0:	ldr	r4, [fp, #-48]	; 0xffffffd0
    acb4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    acb8:	ldr	r7, [fp, #-44]	; 0xffffffd4
    acbc:	ldrd	r0, [r0]
    acc0:	ldr	sl, [r5, #56]	; 0x38
    acc4:	subs	r3, r0, #1
    acc8:	sbc	r1, r1, #0
    accc:	subs	r0, r4, r3
    acd0:	sbcs	r0, r7, r1
    acd4:	str	r1, [fp, #-68]	; 0xffffffbc
    acd8:	bcs	ae60 <readstat_parse_sas7bdat+0x820>
    acdc:	mov	r0, #0
    ace0:	str	r4, [fp, #-48]	; 0xffffffd0
    ace4:	str	r7, [fp, #-44]	; 0xffffffd4
    ace8:	str	sl, [fp, #-52]	; 0xffffffcc
    acec:	str	r0, [sp, #80]	; 0x50
    acf0:	mov	r0, #0
    acf4:	str	r0, [sp, #76]	; 0x4c
    acf8:	ldr	r0, [r2]
    acfc:	ldr	r1, [r9]
    ad00:	str	r3, [fp, #-64]	; 0xffffffc0
    ad04:	ldr	r2, [sl, #20]
    ad08:	mla	r0, r1, r3, r0
    ad0c:	ldr	r3, [sl, #8]
    ad10:	mov	r1, #0
    ad14:	blx	r3
    ad18:	cmn	r0, #1
    ad1c:	beq	b70c <readstat_parse_sas7bdat+0x10cc>
    ad20:	ldr	r1, [r5, #44]	; 0x2c
    ad24:	ldr	r0, [r5, #120]	; 0x78
    ad28:	mov	r6, #32
    ad2c:	ldr	r3, [sl, #12]
    ad30:	ldr	r2, [sl, #20]
    ad34:	ldr	r7, [r9]
    ad38:	cmp	r1, #0
    ad3c:	movweq	r6, #16
    ad40:	orr	r4, r6, #2
    ad44:	mov	r1, r4
    ad48:	blx	r3
    ad4c:	mov	sl, #2
    ad50:	cmp	r0, r4
    ad54:	bcc	b660 <readstat_parse_sas7bdat+0x1020>
    ad58:	ldr	r0, [r5, #120]	; 0x78
    ad5c:	ldr	r1, [r5, #60]	; 0x3c
    ad60:	add	r0, r0, r6
    ad64:	bl	4d20 <sas_read2@plt>
    ad68:	and	r1, r0, #3840	; 0xf00
    ad6c:	cmp	r1, #256	; 0x100
    ad70:	bne	adb0 <readstat_parse_sas7bdat+0x770>
    ad74:	ldr	r0, [sp, #80]	; 0x50
    ad78:	ldr	r1, [sp, #76]	; 0x4c
    ad7c:	sub	sl, fp, #60	; 0x3c
    ad80:	ldr	r6, [fp, #-40]	; 0xffffffd8
    ad84:	ldr	r4, [fp, #-48]	; 0xffffffd0
    ad88:	ldr	r7, [fp, #-44]	; 0xffffffd4
    ad8c:	orrs	r0, r0, r1
    ad90:	mov	r0, #0
    ad94:	str	r0, [sp, #80]	; 0x50
    ad98:	mov	r0, #0
    ad9c:	str	r0, [sp, #76]	; 0x4c
    ada0:	ldm	sl, {r2, r9, sl}
    ada4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ada8:	beq	ae44 <readstat_parse_sas7bdat+0x804>
    adac:	b	ae60 <readstat_parse_sas7bdat+0x820>
    adb0:	ldr	r6, [fp, #-40]	; 0xffffffd8
    adb4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    adb8:	tst	r0, #36864	; 0x9000
    adbc:	beq	add4 <readstat_parse_sas7bdat+0x794>
    adc0:	sub	sl, fp, #60	; 0x3c
    adc4:	ldr	r4, [fp, #-48]	; 0xffffffd0
    adc8:	ldr	r7, [fp, #-44]	; 0xffffffd4
    adcc:	ldm	sl, {r2, r9, sl}
    add0:	b	ae44 <readstat_parse_sas7bdat+0x804>
    add4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    add8:	ldr	r0, [r5, #120]	; 0x78
    addc:	sub	r7, r7, r4
    ade0:	ldr	r3, [r1, #12]
    ade4:	ldr	r2, [r1, #20]
    ade8:	add	r0, r0, r4
    adec:	mov	r1, r7
    adf0:	blx	r3
    adf4:	cmp	r0, r7
    adf8:	bcc	b78c <readstat_parse_sas7bdat+0x114c>
    adfc:	ldr	r9, [fp, #-56]	; 0xffffffc8
    ae00:	ldr	r0, [r5, #120]	; 0x78
    ae04:	mov	r2, r5
    ae08:	ldr	r1, [r9]
    ae0c:	bl	be90 <sas7bdat_parse_page_pass1>
    ae10:	cmp	r0, #0
    ae14:	bne	b820 <readstat_parse_sas7bdat+0x11e0>
    ae18:	ldr	r0, [sp, #80]	; 0x50
    ae1c:	ldr	r4, [fp, #-48]	; 0xffffffd0
    ae20:	ldr	r2, [fp, #-60]	; 0xffffffc4
    ae24:	ldr	r7, [fp, #-44]	; 0xffffffd4
    ae28:	ldr	sl, [fp, #-52]	; 0xffffffcc
    ae2c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ae30:	adds	r0, r0, #1
    ae34:	str	r0, [sp, #80]	; 0x50
    ae38:	ldr	r0, [sp, #76]	; 0x4c
    ae3c:	adc	r0, r0, #0
    ae40:	str	r0, [sp, #76]	; 0x4c
    ae44:	ldr	r1, [fp, #-68]	; 0xffffffbc
    ae48:	subs	r3, r3, #1
    ae4c:	sbc	r1, r1, #0
    ae50:	subs	r0, r4, r3
    ae54:	sbcs	r0, r7, r1
    ae58:	str	r1, [fp, #-68]	; 0xffffffbc
    ae5c:	bcc	acf8 <readstat_parse_sas7bdat+0x6b8>
    ae60:	ldr	r0, [r2]
    ae64:	ldr	r3, [r8, #8]
    ae68:	ldr	r2, [r8, #20]
    ae6c:	mov	r1, #0
    ae70:	blx	r3
    ae74:	ldr	r9, [fp, #-36]	; 0xffffffdc
    ae78:	cmn	r0, #1
    ae7c:	beq	b668 <readstat_parse_sas7bdat+0x1028>
    ae80:	ldr	r0, [fp, #-72]	; 0xffffffb8
    ae84:	ldrd	r0, [r0]
    ae88:	orrs	r0, r0, r1
    ae8c:	beq	b6b0 <readstat_parse_sas7bdat+0x1070>
    ae90:	ldr	r3, [r5, #56]	; 0x38
    ae94:	ldr	r0, [fp, #-76]	; 0xffffffb4
    ae98:	ldr	r2, [r5, #52]	; 0x34
    ae9c:	ldr	r1, [r5, #28]
    aea0:	ldr	r0, [r0]
    aea4:	ldr	r7, [r3, #16]
    aea8:	str	r3, [fp, #-64]	; 0xffffffc0
    aeac:	ldr	r3, [r3, #20]
    aeb0:	blx	r7
    aeb4:	mov	sl, r0
    aeb8:	cmp	r0, #0
    aebc:	bne	a754 <readstat_parse_sas7bdat+0x114>
    aec0:	add	r0, r5, #136	; 0x88
    aec4:	add	r7, r5, #128	; 0x80
    aec8:	str	r0, [sp, #52]	; 0x34
    aecc:	add	r0, r5, #144	; 0x90
    aed0:	str	r7, [fp, #-68]	; 0xffffffbc
    aed4:	str	r0, [sp, #60]	; 0x3c
    aed8:	mov	r0, #0
    aedc:	str	r0, [fp, #-52]	; 0xffffffcc
    aee0:	mov	r0, #0
    aee4:	str	r0, [fp, #-60]	; 0xffffffc4
    aee8:	ldr	r4, [fp, #-56]	; 0xffffffc8
    aeec:	ldr	r2, [fp, #-64]	; 0xffffffc0
    aef0:	ldr	r0, [r5, #120]	; 0x78
    aef4:	ldr	r3, [r2, #12]
    aef8:	ldr	r1, [r4]
    aefc:	ldr	r2, [r2, #20]
    af00:	blx	r3
    af04:	ldr	r2, [r4]
    af08:	ldr	r1, [r4, #4]
    af0c:	str	r2, [fp, #-48]	; 0xffffffd0
    af10:	subs	r2, r0, r2
    af14:	rscs	r0, r1, r0, asr #31
    af18:	bcc	b90c <readstat_parse_sas7bdat+0x12cc>
    af1c:	ldr	r0, [r7]
    af20:	ldr	r4, [r5, #120]	; 0x78
    af24:	ldr	r1, [r5, #60]	; 0x3c
    af28:	add	r0, r4, r0
    af2c:	sub	r0, r0, #8
    af30:	bl	4d20 <sas_read2@plt>
    af34:	and	r1, r0, #3840	; 0xf00
    af38:	cmp	r1, #256	; 0x100
    af3c:	bne	b008 <readstat_parse_sas7bdat+0x9c8>
    af40:	ldr	r0, [r7]
    af44:	ldr	r1, [r5, #60]	; 0x3c
    af48:	add	r0, r4, r0
    af4c:	sub	r0, r0, #6
    af50:	bl	4d20 <sas_read2@plt>
    af54:	str	r0, [r5, #72]	; 0x48
    af58:	ldr	r0, [r7]
    af5c:	add	r7, r4, r0
    af60:	cmp	r7, #0
    af64:	beq	b010 <readstat_parse_sas7bdat+0x9d0>
    af68:	mov	r0, r5
    af6c:	mov	r1, #0
    af70:	bl	ba44 <sas7bdat_submit_columns_if_needed>
    af74:	cmp	r0, #0
    af78:	bne	b8fc <readstat_parse_sas7bdat+0x12bc>
    af7c:	ldr	r0, [r5, #16]
    af80:	cmp	r0, #0
    af84:	ldrne	r0, [r5, #72]	; 0x48
    af88:	cmpne	r0, #0
    af8c:	beq	b010 <readstat_parse_sas7bdat+0x9d0>
    af90:	ldr	r0, [fp, #-48]	; 0xffffffd0
    af94:	mov	r2, r7
    af98:	mov	r9, #0
    af9c:	add	r0, r4, r0
    afa0:	mov	r4, #0
    afa4:	sub	r0, r0, r7
    afa8:	str	r0, [fp, #-44]	; 0xffffffd4
    afac:	ldr	r0, [r5, #76]	; 0x4c
    afb0:	ldr	r1, [r5, #84]	; 0x54
    afb4:	cmp	r0, r1
    afb8:	bcs	b010 <readstat_parse_sas7bdat+0x9d0>
    afbc:	ldr	r0, [r5, #68]	; 0x44
    afc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    afc4:	add	r0, r0, r4
    afc8:	cmp	r0, r1
    afcc:	bhi	b914 <readstat_parse_sas7bdat+0x12d4>
    afd0:	add	r0, r2, r4
    afd4:	mov	r1, r5
    afd8:	bl	c868 <sas7bdat_parse_single_row>
    afdc:	cmp	r0, #0
    afe0:	bne	b8fc <readstat_parse_sas7bdat+0x12bc>
    afe4:	ldr	r0, [r5, #68]	; 0x44
    afe8:	ldr	r1, [r5, #72]	; 0x48
    afec:	ldr	r6, [fp, #-40]	; 0xffffffd8
    aff0:	add	r9, r9, #1
    aff4:	mov	r2, r7
    aff8:	add	r4, r0, r4
    affc:	cmp	r9, r1
    b000:	bcc	afac <readstat_parse_sas7bdat+0x96c>
    b004:	b	b010 <readstat_parse_sas7bdat+0x9d0>
    b008:	tst	r0, #36864	; 0x9000
    b00c:	beq	b084 <readstat_parse_sas7bdat+0xa44>
    b010:	ldr	r0, [r5, #76]	; 0x4c
    b014:	ldr	r1, [r5, #84]	; 0x54
    b018:	ldr	r9, [fp, #-36]	; 0xffffffdc
    b01c:	cmp	r0, r1
    b020:	beq	b6b0 <readstat_parse_sas7bdat+0x1070>
    b024:	ldr	r0, [fp, #-72]	; 0xffffffb8
    b028:	ldr	r2, [fp, #-52]	; 0xffffffcc
    b02c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    b030:	ldrd	r0, [r0]
    b034:	adds	r2, r2, #1
    b038:	adc	r3, r3, #0
    b03c:	str	r2, [fp, #-52]	; 0xffffffcc
    b040:	str	r3, [fp, #-60]	; 0xffffffc4
    b044:	subs	r0, r2, r0
    b048:	sbcs	r0, r3, r1
    b04c:	bcs	b6b0 <readstat_parse_sas7bdat+0x1070>
    b050:	ldr	r0, [fp, #-76]	; 0xffffffb4
    b054:	ldr	r3, [r5, #56]	; 0x38
    b058:	ldr	r1, [r5, #28]
    b05c:	ldr	r2, [r5, #52]	; 0x34
    b060:	ldr	r7, [r3, #16]
    b064:	ldr	r0, [r0]
    b068:	ldr	r3, [r3, #20]
    b06c:	blx	r7
    b070:	ldr	r7, [fp, #-68]	; 0xffffffbc
    b074:	mov	sl, r0
    b078:	cmp	r0, #0
    b07c:	beq	aee8 <readstat_parse_sas7bdat+0x8a8>
    b080:	b	a754 <readstat_parse_sas7bdat+0x114>
    b084:	ldr	r7, [fp, #-68]	; 0xffffffbc
    b088:	str	r1, [sp, #40]	; 0x28
    b08c:	ldr	r1, [r5, #60]	; 0x3c
    b090:	ldr	r0, [r7]
    b094:	add	r0, r4, r0
    b098:	sub	r0, r0, #4
    b09c:	bl	4d20 <sas_read2@plt>
    b0a0:	mov	r6, r0
    b0a4:	ldr	r0, [sp, #60]	; 0x3c
    b0a8:	ldr	r0, [r0]
    b0ac:	str	r0, [sp, #64]	; 0x40
    b0b0:	mul	r1, r0, r6
    b0b4:	ldm	r7, {r0, r3}
    b0b8:	adds	r2, r0, r1
    b0bc:	adc	r1, r3, r1, asr #31
    b0c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b0c4:	subs	r2, r3, r2
    b0c8:	rscs	r1, r1, #0
    b0cc:	bcc	b804 <readstat_parse_sas7bdat+0x11c4>
    b0d0:	add	r7, r4, r0
    b0d4:	cmp	r6, #0
    b0d8:	beq	b600 <readstat_parse_sas7bdat+0xfc0>
    b0dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b0e0:	mov	r2, #0
    b0e4:	str	r4, [sp, #72]	; 0x48
    b0e8:	str	r6, [sp, #76]	; 0x4c
    b0ec:	add	r0, r4, r0
    b0f0:	str	r0, [sp, #68]	; 0x44
    b0f4:	add	r0, r4, #4
    b0f8:	str	r0, [sp, #36]	; 0x24
    b0fc:	ldr	r0, [sp, #68]	; 0x44
    b100:	ldr	r1, [r5, #44]	; 0x2c
    b104:	str	r7, [fp, #-44]	; 0xffffffd4
    b108:	str	r2, [sp, #80]	; 0x50
    b10c:	sub	r0, r0, r7
    b110:	cmp	r1, #0
    b114:	beq	b150 <readstat_parse_sas7bdat+0xb10>
    b118:	cmp	r0, #18
    b11c:	bcc	b804 <readstat_parse_sas7bdat+0x11c4>
    b120:	ldr	r1, [r5, #60]	; 0x3c
    b124:	mov	r0, r7
    b128:	bl	4d14 <sas_read8@plt>
    b12c:	mov	sl, r1
    b130:	ldr	r1, [r5, #60]	; 0x3c
    b134:	mov	r4, r0
    b138:	add	r0, r7, #8
    b13c:	bl	4d14 <sas_read8@plt>
    b140:	mov	r7, r0
    b144:	mov	ip, #17
    b148:	mov	r3, #16
    b14c:	b	b188 <readstat_parse_sas7bdat+0xb48>
    b150:	cmp	r0, #10
    b154:	bcc	b804 <readstat_parse_sas7bdat+0x11c4>
    b158:	ldr	r1, [r5, #60]	; 0x3c
    b15c:	mov	r0, r7
    b160:	bl	4d44 <sas_read4@plt>
    b164:	ldr	r1, [r5, #60]	; 0x3c
    b168:	mov	r4, r0
    b16c:	add	r0, r7, #4
    b170:	bl	4d44 <sas_read4@plt>
    b174:	mov	r7, r0
    b178:	mov	sl, #0
    b17c:	mov	ip, #9
    b180:	mov	r3, #8
    b184:	mov	r1, #0
    b188:	orrs	r2, r7, r1
    b18c:	ldrne	r0, [fp, #-44]	; 0xffffffd4
    b190:	ldrbne	lr, [r0, r3]
    b194:	cmpne	lr, #1
    b198:	bne	b1c4 <readstat_parse_sas7bdat+0xb84>
    b19c:	ldr	r7, [fp, #-44]	; 0xffffffd4
    b1a0:	ldr	r0, [sp, #64]	; 0x40
    b1a4:	ldr	r2, [sp, #80]	; 0x50
    b1a8:	ldr	r4, [sp, #72]	; 0x48
    b1ac:	add	r7, r7, r0
    b1b0:	ldr	r0, [sp, #76]	; 0x4c
    b1b4:	add	r2, r2, #1
    b1b8:	cmp	r2, r0
    b1bc:	bcc	b0fc <readstat_parse_sas7bdat+0xabc>
    b1c0:	b	b600 <readstat_parse_sas7bdat+0xfc0>
    b1c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b1c8:	subs	r2, r0, r4
    b1cc:	rscs	r2, sl, #0
    b1d0:	bcc	b804 <readstat_parse_sas7bdat+0x11c4>
    b1d4:	adds	r2, r7, r4
    b1d8:	mov	r9, r4
    b1dc:	mov	r4, r7
    b1e0:	adc	r3, r1, sl
    b1e4:	subs	r7, r0, r7
    b1e8:	rscs	r7, r1, #0
    b1ec:	bcc	b804 <readstat_parse_sas7bdat+0x11c4>
    b1f0:	ldr	r6, [sp, #76]	; 0x4c
    b1f4:	subs	r2, r0, r2
    b1f8:	rscs	r2, r3, #0
    b1fc:	bcc	b804 <readstat_parse_sas7bdat+0x11c4>
    b200:	ldr	r0, [sp, #60]	; 0x3c
    b204:	ldrd	r2, [r0]
    b208:	ldr	r0, [fp, #-68]	; 0xffffffbc
    b20c:	umull	r2, r7, r2, r6
    b210:	mla	r3, r3, r6, r7
    b214:	ldm	r0, {r0, r7}
    b218:	adds	r0, r2, r0
    b21c:	adc	r2, r3, r7
    b220:	ldr	r7, [fp, #-44]	; 0xffffffd4
    b224:	subs	r0, r9, r0
    b228:	sbcs	r0, sl, r2
    b22c:	bcc	b804 <readstat_parse_sas7bdat+0x11c4>
    b230:	cmp	lr, #4
    b234:	mov	r6, r4
    b238:	beq	b2cc <readstat_parse_sas7bdat+0xc8c>
    b23c:	cmp	lr, #0
    b240:	bne	b924 <readstat_parse_sas7bdat+0x12e4>
    b244:	ldr	r0, [sp, #52]	; 0x34
    b248:	ldm	r0, {r0, r3}
    b24c:	adds	r4, r0, r9
    b250:	adc	r2, r3, sl
    b254:	subs	r0, r6, r0
    b258:	sbcs	r0, r1, r3
    b25c:	bcc	b804 <readstat_parse_sas7bdat+0x11c4>
    b260:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b264:	subs	r0, r0, r4
    b268:	rscs	r0, r2, #0
    b26c:	ldr	r0, [sp, #72]	; 0x48
    b270:	bcc	b804 <readstat_parse_sas7bdat+0x11c4>
    b274:	mov	sl, r6
    b278:	mov	r6, r1
    b27c:	ldr	r1, [r5, #60]	; 0x3c
    b280:	ldrb	r7, [r7, ip]
    b284:	add	r4, r0, r9
    b288:	mov	r0, r4
    b28c:	bl	4d44 <sas_read4@plt>
    b290:	cmn	r0, #1
    b294:	bne	b2c4 <readstat_parse_sas7bdat+0xc84>
    b298:	ldr	r1, [r5, #40]	; 0x28
    b29c:	mov	r3, r6
    b2a0:	cmp	r1, #0
    b2a4:	bne	b52c <readstat_parse_sas7bdat+0xeec>
    b2a8:	ldr	r0, [r5, #44]	; 0x2c
    b2ac:	cmp	r0, #0
    b2b0:	beq	b528 <readstat_parse_sas7bdat+0xee8>
    b2b4:	ldr	r0, [sp, #36]	; 0x24
    b2b8:	ldr	r1, [r5, #60]	; 0x3c
    b2bc:	add	r0, r0, r9
    b2c0:	bl	4d44 <sas_read4@plt>
    b2c4:	mov	r3, r6
    b2c8:	b	b52c <readstat_parse_sas7bdat+0xeec>
    b2cc:	mov	r0, r5
    b2d0:	mov	r1, #1
    b2d4:	bl	ba44 <sas7bdat_submit_columns_if_needed>
    b2d8:	cmp	r0, #0
    b2dc:	bne	b8fc <readstat_parse_sas7bdat+0x12bc>
    b2e0:	ldr	r0, [sp, #72]	; 0x48
    b2e4:	add	r7, r0, r9
    b2e8:	ldrb	r0, [r5, #2529]	; 0x9e1
    b2ec:	tst	r0, #1
    b2f0:	bne	b340 <readstat_parse_sas7bdat+0xd00>
    b2f4:	ldr	r0, [r5, #76]	; 0x4c
    b2f8:	ldr	r1, [r5, #84]	; 0x54
    b2fc:	cmp	r1, r0
    b300:	beq	b19c <readstat_parse_sas7bdat+0xb5c>
    b304:	ldr	r1, [r5, #68]	; 0x44
    b308:	ldr	r0, [r5, #124]	; 0x7c
    b30c:	mov	r2, r7
    b310:	mov	r3, r6
    b314:	bl	49fc <sas_rle_decompress@plt>
    b318:	ldr	r1, [r5, #68]	; 0x44
    b31c:	cmp	r0, r1
    b320:	bne	b934 <readstat_parse_sas7bdat+0x12f4>
    b324:	ldr	r0, [r5, #124]	; 0x7c
    b328:	mov	r1, r5
    b32c:	bl	c868 <sas7bdat_parse_single_row>
    b330:	mov	sl, r0
    b334:	cmp	sl, #0
    b338:	beq	b19c <readstat_parse_sas7bdat+0xb5c>
    b33c:	b	b98c <readstat_parse_sas7bdat+0x134c>
    b340:	ldr	r9, [r5, #68]	; 0x44
    b344:	mov	r0, r9
    b348:	bl	4a74 <malloc@plt>
    b34c:	mov	ip, r0
    b350:	cmp	r6, #1
    b354:	bgt	b388 <readstat_parse_sas7bdat+0xd48>
    b358:	mov	r0, ip
    b35c:	sub	r0, r0, ip
    b360:	mov	sl, #10
    b364:	cmp	r0, r9
    b368:	bne	b5ec <readstat_parse_sas7bdat+0xfac>
    b36c:	mov	r0, ip
    b370:	mov	r1, r5
    b374:	mov	r4, ip
    b378:	bl	c868 <sas7bdat_parse_single_row>
    b37c:	mov	ip, r4
    b380:	mov	sl, r0
    b384:	b	b5ec <readstat_parse_sas7bdat+0xfac>
    b388:	add	lr, r7, r6
    b38c:	add	r1, r7, #2
    b390:	mov	r0, ip
    b394:	str	ip, [sp, #48]	; 0x30
    b398:	str	lr, [sp, #44]	; 0x2c
    b39c:	ldrb	r2, [r7]
    b3a0:	ldrb	r3, [r7, #1]
    b3a4:	mov	r4, #0
    b3a8:	mov	r9, #15
    b3ac:	mov	r7, r1
    b3b0:	orr	r2, r3, r2, lsl #8
    b3b4:	str	r2, [sp, #56]	; 0x38
    b3b8:	b	b3c4 <readstat_parse_sas7bdat+0xd84>
    b3bc:	mov	r7, r6
    b3c0:	b	b504 <readstat_parse_sas7bdat+0xec4>
    b3c4:	ldr	r2, [sp, #56]	; 0x38
    b3c8:	mov	r1, #1
    b3cc:	tst	r2, r1, lsl r9
    b3d0:	beq	b3fc <readstat_parse_sas7bdat+0xdbc>
    b3d4:	add	r6, r7, #2
    b3d8:	mov	sl, #5
    b3dc:	cmp	r6, lr
    b3e0:	bhi	b5ec <readstat_parse_sas7bdat+0xfac>
    b3e4:	ldrb	r3, [r7]
    b3e8:	ldrb	r1, [r7, #1]
    b3ec:	cmp	r3, #15
    b3f0:	bhi	b430 <readstat_parse_sas7bdat+0xdf0>
    b3f4:	add	r2, r3, #3
    b3f8:	b	b468 <readstat_parse_sas7bdat+0xe28>
    b3fc:	add	r1, r7, #1
    b400:	cmp	r1, lr
    b404:	bhi	b514 <readstat_parse_sas7bdat+0xed4>
    b408:	ldr	r2, [r5, #68]	; 0x44
    b40c:	add	r3, ip, r2
    b410:	add	r2, r0, #1
    b414:	cmp	r2, r3
    b418:	bhi	b5e8 <readstat_parse_sas7bdat+0xfa8>
    b41c:	ldrb	r3, [r7]
    b420:	mov	r7, r1
    b424:	strb	r3, [r0]
    b428:	mov	r0, r2
    b42c:	b	b504 <readstat_parse_sas7bdat+0xec4>
    b430:	mov	r2, #2
    b434:	cmp	r2, r3, lsr #4
    b438:	beq	b48c <readstat_parse_sas7bdat+0xe4c>
    b43c:	lsr	r2, r3, #4
    b440:	cmp	r2, #1
    b444:	bne	b4b0 <readstat_parse_sas7bdat+0xe70>
    b448:	add	r7, r7, #3
    b44c:	cmp	r7, lr
    b450:	bhi	b5ec <readstat_parse_sas7bdat+0xfac>
    b454:	and	r2, r3, #15
    b458:	orr	r1, r2, r1, lsl #4
    b45c:	add	r2, r1, #19
    b460:	ldrb	r1, [r6]
    b464:	mov	r6, r7
    b468:	ldr	r3, [r5, #68]	; 0x44
    b46c:	add	r7, r0, r2
    b470:	add	r3, ip, r3
    b474:	cmp	r7, r3
    b478:	bhi	b5e4 <readstat_parse_sas7bdat+0xfa4>
    b47c:	bl	4c00 <memset@plt>
    b480:	mov	r0, r7
    b484:	mov	r7, r6
    b488:	b	b4fc <readstat_parse_sas7bdat+0xebc>
    b48c:	add	r7, r7, #3
    b490:	cmp	r7, lr
    b494:	bhi	b5ec <readstat_parse_sas7bdat+0xfac>
    b498:	and	r2, r3, #15
    b49c:	orr	r1, r2, r1, lsl #4
    b4a0:	ldrb	r2, [r6]
    b4a4:	add	r1, r1, #3
    b4a8:	add	r2, r2, #16
    b4ac:	b	b4c8 <readstat_parse_sas7bdat+0xe88>
    b4b0:	cmp	r2, #0
    b4b4:	beq	b3bc <readstat_parse_sas7bdat+0xd7c>
    b4b8:	and	r3, r3, #15
    b4bc:	mov	r7, r6
    b4c0:	orr	r1, r3, r1, lsl #4
    b4c4:	add	r1, r1, #3
    b4c8:	sub	r3, r0, ip
    b4cc:	cmp	r3, r1
    b4d0:	bcc	b5ec <readstat_parse_sas7bdat+0xfac>
    b4d4:	cmp	r2, r1
    b4d8:	bhi	b5ec <readstat_parse_sas7bdat+0xfac>
    b4dc:	ldr	r3, [r5, #68]	; 0x44
    b4e0:	add	r6, r0, r2
    b4e4:	add	r3, ip, r3
    b4e8:	cmp	r6, r3
    b4ec:	bhi	b5e4 <readstat_parse_sas7bdat+0xfa4>
    b4f0:	sub	r1, r0, r1
    b4f4:	bl	48b8 <memcpy@plt>
    b4f8:	mov	r0, r6
    b4fc:	ldr	ip, [sp, #48]	; 0x30
    b500:	ldr	lr, [sp, #44]	; 0x2c
    b504:	add	r4, r4, #1
    b508:	sub	r9, r9, #1
    b50c:	cmp	r4, #16
    b510:	bcc	b3c4 <readstat_parse_sas7bdat+0xd84>
    b514:	add	r1, r7, #2
    b518:	cmp	r1, lr
    b51c:	bls	b39c <readstat_parse_sas7bdat+0xd5c>
    b520:	ldr	r9, [r5, #68]	; 0x44
    b524:	b	b35c <readstat_parse_sas7bdat+0xd1c>
    b528:	mvn	r0, #0
    b52c:	cmp	r7, #0
    b530:	mov	r2, sl
    b534:	beq	b5c4 <readstat_parse_sas7bdat+0xf84>
    b538:	movw	r1, #64509	; 0xfbfd
    b53c:	movt	r1, #65535	; 0xffff
    b540:	cmp	r0, r1
    b544:	bgt	b56c <readstat_parse_sas7bdat+0xf2c>
    b548:	movw	r1, #63222	; 0xf6f6
    b54c:	movt	r1, #63222	; 0xf6f6
    b550:	cmp	r0, r1
    b554:	beq	b5cc <readstat_parse_sas7bdat+0xf8c>
    b558:	movw	r1, #63479	; 0xf7f7
    b55c:	movt	r1, #63479	; 0xf7f7
    b560:	cmp	r0, r1
    b564:	beq	b5cc <readstat_parse_sas7bdat+0xf8c>
    b568:	b	b580 <readstat_parse_sas7bdat+0xf40>
    b56c:	movw	r1, #64510	; 0xfbfe
    b570:	movt	r1, #65535	; 0xffff
    b574:	cmp	r0, r1
    b578:	cmnne	r0, #1024	; 0x400
    b57c:	beq	b5cc <readstat_parse_sas7bdat+0xf8c>
    b580:	cmn	r0, #9
    b584:	bhi	b5c4 <readstat_parse_sas7bdat+0xf84>
    b588:	ldr	r0, [r5, #68]	; 0x44
    b58c:	eor	r0, r2, r0
    b590:	orrs	r0, r0, r3
    b594:	bne	b988 <readstat_parse_sas7bdat+0x1348>
    b598:	mov	r0, r5
    b59c:	mov	r1, #1
    b5a0:	bl	ba44 <sas7bdat_submit_columns_if_needed>
    b5a4:	cmp	r0, #0
    b5a8:	bne	b8fc <readstat_parse_sas7bdat+0x12bc>
    b5ac:	mov	r0, r4
    b5b0:	mov	r1, r5
    b5b4:	bl	c868 <sas7bdat_parse_single_row>
    b5b8:	cmp	r0, #0
    b5bc:	beq	b19c <readstat_parse_sas7bdat+0xb5c>
    b5c0:	b	b8fc <readstat_parse_sas7bdat+0x12bc>
    b5c4:	cmn	r0, #3
    b5c8:	beq	b19c <readstat_parse_sas7bdat+0xb5c>
    b5cc:	mov	r1, r4
    b5d0:	mov	r3, r5
    b5d4:	bl	c12c <sas7bdat_parse_subheader>
    b5d8:	cmp	r0, #0
    b5dc:	beq	b19c <readstat_parse_sas7bdat+0xb5c>
    b5e0:	b	b8fc <readstat_parse_sas7bdat+0x12bc>
    b5e4:	ldr	ip, [sp, #48]	; 0x30
    b5e8:	mov	sl, #10
    b5ec:	mov	r0, ip
    b5f0:	bl	4864 <free@plt>
    b5f4:	cmp	sl, #0
    b5f8:	beq	b19c <readstat_parse_sas7bdat+0xb5c>
    b5fc:	b	b98c <readstat_parse_sas7bdat+0x134c>
    b600:	ldr	r0, [sp, #40]	; 0x28
    b604:	ldr	r6, [fp, #-40]	; 0xffffffd8
    b608:	cmp	r0, #512	; 0x200
    b60c:	bne	b010 <readstat_parse_sas7bdat+0x9d0>
    b610:	sub	r0, r7, r4
    b614:	asr	r1, r0, #31
    b618:	add	r1, r0, r1, lsr #29
    b61c:	bic	r1, r1, #7
    b620:	sub	r0, r0, r1
    b624:	cmp	r0, #4
    b628:	bne	af60 <readstat_parse_sas7bdat+0x920>
    b62c:	ldr	r0, [r7]
    b630:	cmp	r0, #0
    b634:	beq	b648 <readstat_parse_sas7bdat+0x1008>
    b638:	movw	r1, #8224	; 0x2020
    b63c:	movt	r1, #8224	; 0x2020
    b640:	cmp	r0, r1
    b644:	bne	b650 <readstat_parse_sas7bdat+0x1010>
    b648:	add	r7, r7, #4
    b64c:	b	af68 <readstat_parse_sas7bdat+0x928>
    b650:	ldr	r0, [r5, #48]	; 0x30
    b654:	cmp	r0, #0
    b658:	addne	r7, r7, #4
    b65c:	b	af68 <readstat_parse_sas7bdat+0x928>
    b660:	ldr	r6, [fp, #-40]	; 0xffffffd8
    b664:	b	b78c <readstat_parse_sas7bdat+0x114c>
    b668:	ldr	r0, [r6]
    b66c:	mov	sl, #15
    b670:	cmp	r0, #0
    b674:	beq	a834 <readstat_parse_sas7bdat+0x1f4>
    b678:	ldr	r0, [fp, #-60]	; 0xffffffc4
    b67c:	ldrd	r0, [r0]
    b680:	stm	sp, {r0, r1}
    b684:	movw	r0, #481	; 0x1e1
    b688:	mov	r1, #2048	; 0x800
    b68c:	ldr	r2, [pc, #932]	; ba38 <readstat_parse_sas7bdat+0x13f8>
    b690:	add	r4, r5, r0
    b694:	mov	r0, r4
    b698:	add	r2, pc, r2
    b69c:	bl	4bdc <snprintf@plt>
    b6a0:	ldr	r2, [r5, #24]
    b6a4:	ldr	r1, [r5, #52]	; 0x34
    b6a8:	mov	r0, r4
    b6ac:	b	a830 <readstat_parse_sas7bdat+0x1f0>
    b6b0:	mov	r0, r5
    b6b4:	mov	r1, #0
    b6b8:	bl	ba44 <sas7bdat_submit_columns_if_needed>
    b6bc:	ldr	r1, [fp, #-76]	; 0xffffffb4
    b6c0:	mov	sl, r0
    b6c4:	cmp	r0, #0
    b6c8:	bne	a754 <readstat_parse_sas7bdat+0x114>
    b6cc:	ldr	r0, [r5, #16]
    b6d0:	cmp	r0, #0
    b6d4:	beq	b6e8 <readstat_parse_sas7bdat+0x10a8>
    b6d8:	ldr	r0, [r5, #76]	; 0x4c
    b6dc:	ldr	r3, [r5, #84]	; 0x54
    b6e0:	cmp	r0, r3
    b6e4:	bne	b8b8 <readstat_parse_sas7bdat+0x1278>
    b6e8:	ldr	r3, [r5, #56]	; 0x38
    b6ec:	ldr	r0, [r1]
    b6f0:	ldr	r1, [r5, #28]
    b6f4:	ldr	r2, [r5, #52]	; 0x34
    b6f8:	ldr	r7, [r3, #16]
    b6fc:	ldr	r3, [r3, #20]
    b700:	blx	r7
    b704:	mov	sl, r0
    b708:	b	a754 <readstat_parse_sas7bdat+0x114>
    b70c:	ldr	r0, [r6]
    b710:	mov	sl, #15
    b714:	cmp	r0, #0
    b718:	beq	b78c <readstat_parse_sas7bdat+0x114c>
    b71c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    b720:	add	ip, sp, #8
    b724:	ldrd	r0, [r0]
    b728:	ldm	r9, {r2, r9}
    b72c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b730:	ldr	r4, [fp, #-68]	; 0xffffffbc
    b734:	umull	r7, r6, r2, r3
    b738:	mla	r6, r2, r4, r6
    b73c:	adds	r7, r7, r0
    b740:	mla	r6, r9, r3, r6
    b744:	str	r7, [sp]
    b748:	adc	r6, r6, r1
    b74c:	str	r6, [sp, #4]
    b750:	ldr	r6, [fp, #-40]	; 0xffffffd8
    b754:	stm	ip, {r0, r1, r3, r4}
    b758:	str	r2, [sp, #24]
    b75c:	str	r9, [sp, #28]
    b760:	ldr	r2, [pc, #708]	; ba2c <readstat_parse_sas7bdat+0x13ec>
    b764:	movw	r0, #481	; 0x1e1
    b768:	mov	r1, #2048	; 0x800
    b76c:	add	r4, r5, r0
    b770:	mov	r0, r4
    b774:	add	r2, pc, r2
    b778:	bl	4bdc <snprintf@plt>
    b77c:	ldr	r2, [r5, #24]
    b780:	ldr	r1, [r5, #52]	; 0x34
    b784:	mov	r0, r4
    b788:	blx	r2
    b78c:	ldr	r1, [r8, #4]
    b790:	ldr	r0, [r8, #20]
    b794:	blx	r1
    b798:	ldr	r9, [fp, #-36]	; 0xffffffdc
    b79c:	b	a840 <readstat_parse_sas7bdat+0x200>
    b7a0:	.word	0x0001ec54
    b7a4:	.word	0x0001ec2c
    b7a8:	cmp	r0, #4
    b7ac:	mov	sl, r0
    b7b0:	ldrne	r0, [r6]
    b7b4:	cmpne	r0, #0
    b7b8:	beq	a754 <readstat_parse_sas7bdat+0x114>
    b7bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    b7c0:	mov	r1, #1
    b7c4:	ldr	r3, [r0, #8]
    b7c8:	ldr	r2, [r0, #20]
    b7cc:	mov	r0, #0
    b7d0:	blx	r3
    b7d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b7d8:	asr	r1, r0, #31
    b7dc:	subs	r2, r0, #1
    b7e0:	sbc	r1, r1, #0
    b7e4:	ldr	r4, [r3]
    b7e8:	ldr	r3, [r3, #4]
    b7ec:	subs	r7, r0, r4
    b7f0:	rsc	r0, r3, r0, asr #31
    b7f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b7f8:	str	r3, [sp]
    b7fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b800:	b	b9ec <readstat_parse_sas7bdat+0x13ac>
    b804:	mov	sl, #5
    b808:	cmp	sl, #4
    b80c:	bne	b994 <readstat_parse_sas7bdat+0x1354>
    b810:	ldr	r9, [fp, #-36]	; 0xffffffdc
    b814:	ldr	r6, [fp, #-40]	; 0xffffffd8
    b818:	b	a754 <readstat_parse_sas7bdat+0x114>
    b81c:	.word	0x0001ebf7
    b820:	cmp	r0, #4
    b824:	mov	sl, r0
    b828:	ldrne	r0, [r6]
    b82c:	cmpne	r0, #0
    b830:	beq	b8b0 <readstat_parse_sas7bdat+0x1270>
    b834:	ldr	r0, [fp, #-52]	; 0xffffffcc
    b838:	mov	r1, #1
    b83c:	ldr	r3, [r0, #8]
    b840:	ldr	r2, [r0, #20]
    b844:	mov	r0, #0
    b848:	blx	r3
    b84c:	ldr	r4, [r9]
    b850:	ldr	r3, [r9, #4]
    b854:	asr	r1, r0, #31
    b858:	subs	r2, r0, #1
    b85c:	sbc	r1, r1, #0
    b860:	subs	r7, r0, r4
    b864:	rsc	r0, r3, r0, asr #31
    b868:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b86c:	str	r3, [sp]
    b870:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b874:	stmib	sp, {r3, r7}
    b878:	str	r0, [sp, #12]
    b87c:	str	r1, [sp, #20]
    b880:	str	r2, [sp, #16]
    b884:	movw	r0, #481	; 0x1e1
    b888:	mov	r1, #2048	; 0x800
    b88c:	ldr	r2, [pc, #416]	; ba34 <readstat_parse_sas7bdat+0x13f4>
    b890:	add	r4, r5, r0
    b894:	mov	r0, r4
    b898:	add	r2, pc, r2
    b89c:	bl	4bdc <snprintf@plt>
    b8a0:	ldr	r2, [r5, #24]
    b8a4:	ldr	r1, [r5, #52]	; 0x34
    b8a8:	mov	r0, r4
    b8ac:	blx	r2
    b8b0:	ldr	r9, [fp, #-36]	; 0xffffffdc
    b8b4:	b	a754 <readstat_parse_sas7bdat+0x114>
    b8b8:	ldr	r1, [r6]
    b8bc:	mov	sl, #9
    b8c0:	cmp	r1, #0
    b8c4:	beq	abf4 <readstat_parse_sas7bdat+0x5b4>
    b8c8:	str	r0, [sp]
    b8cc:	movw	r0, #481	; 0x1e1
    b8d0:	mov	r1, #2048	; 0x800
    b8d4:	ldr	r2, [pc, #356]	; ba40 <readstat_parse_sas7bdat+0x1400>
    b8d8:	add	r4, r5, r0
    b8dc:	mov	r0, r4
    b8e0:	add	r2, pc, r2
    b8e4:	bl	4bdc <snprintf@plt>
    b8e8:	ldr	r2, [r5, #24]
    b8ec:	ldr	r1, [r5, #52]	; 0x34
    b8f0:	mov	r0, r4
    b8f4:	blx	r2
    b8f8:	b	abf4 <readstat_parse_sas7bdat+0x5b4>
    b8fc:	mov	sl, r0
    b900:	cmp	sl, #4
    b904:	bne	b994 <readstat_parse_sas7bdat+0x1354>
    b908:	b	b810 <readstat_parse_sas7bdat+0x11d0>
    b90c:	mov	sl, #2
    b910:	b	b78c <readstat_parse_sas7bdat+0x114c>
    b914:	mov	sl, #10
    b918:	cmp	sl, #4
    b91c:	bne	b994 <readstat_parse_sas7bdat+0x1354>
    b920:	b	b810 <readstat_parse_sas7bdat+0x11d0>
    b924:	mov	sl, #6
    b928:	cmp	sl, #4
    b92c:	bne	b994 <readstat_parse_sas7bdat+0x1354>
    b930:	b	b810 <readstat_parse_sas7bdat+0x11d0>
    b934:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b938:	mov	sl, #10
    b93c:	ldr	r2, [r2]
    b940:	cmp	r2, #0
    b944:	beq	b98c <readstat_parse_sas7bdat+0x134c>
    b948:	ldr	r3, [r5, #76]	; 0x4c
    b94c:	stm	sp, {r0, r1}
    b950:	movw	r0, #481	; 0x1e1
    b954:	mov	r1, #2048	; 0x800
    b958:	ldr	r2, [pc, #220]	; ba3c <readstat_parse_sas7bdat+0x13fc>
    b95c:	add	r4, r5, r0
    b960:	mov	r0, r4
    b964:	add	r2, pc, r2
    b968:	bl	4bdc <snprintf@plt>
    b96c:	ldr	r2, [r5, #24]
    b970:	ldr	r1, [r5, #52]	; 0x34
    b974:	mov	r0, r4
    b978:	blx	r2
    b97c:	cmp	sl, #4
    b980:	bne	b994 <readstat_parse_sas7bdat+0x1354>
    b984:	b	b810 <readstat_parse_sas7bdat+0x11d0>
    b988:	mov	sl, #10
    b98c:	cmp	sl, #4
    b990:	beq	b810 <readstat_parse_sas7bdat+0x11d0>
    b994:	ldr	r6, [fp, #-40]	; 0xffffffd8
    b998:	ldr	r9, [fp, #-36]	; 0xffffffdc
    b99c:	ldr	r0, [r6]
    b9a0:	cmp	r0, #0
    b9a4:	beq	a754 <readstat_parse_sas7bdat+0x114>
    b9a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    b9ac:	mov	r1, #1
    b9b0:	ldr	r3, [r0, #8]
    b9b4:	ldr	r2, [r0, #20]
    b9b8:	mov	r0, #0
    b9bc:	blx	r3
    b9c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b9c4:	asr	r1, r0, #31
    b9c8:	subs	r2, r0, #1
    b9cc:	sbc	r1, r1, #0
    b9d0:	ldr	r4, [r3]
    b9d4:	ldr	r3, [r3, #4]
    b9d8:	subs	r7, r0, r4
    b9dc:	rsc	r0, r3, r0, asr #31
    b9e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    b9e4:	str	r3, [sp]
    b9e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    b9ec:	stmib	sp, {r3, r7}
    b9f0:	str	r0, [sp, #12]
    b9f4:	str	r1, [sp, #20]
    b9f8:	str	r2, [sp, #16]
    b9fc:	movw	r0, #481	; 0x1e1
    ba00:	mov	r1, #2048	; 0x800
    ba04:	ldr	r2, [pc, #36]	; ba30 <readstat_parse_sas7bdat+0x13f0>
    ba08:	add	r4, r5, r0
    ba0c:	mov	r0, r4
    ba10:	add	r2, pc, r2
    ba14:	bl	4bdc <snprintf@plt>
    ba18:	ldr	r2, [r5, #24]
    ba1c:	ldr	r1, [r5, #52]	; 0x34
    ba20:	mov	r0, r4
    ba24:	blx	r2
    ba28:	b	a754 <readstat_parse_sas7bdat+0x114>
    ba2c:	.word	0x0001dd3b
    ba30:	.word	0x0001dade
    ba34:	.word	0x0001dc56
    ba38:	.word	0x0001dc7f
    ba3c:	.word	0x0001dc15
    ba40:	.word	0x0001db76

0000ba44 <sas7bdat_submit_columns_if_needed>:
    ba44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ba48:	add	fp, sp, #28
    ba4c:	sub	sp, sp, #84	; 0x54
    ba50:	mov	r4, r0
    ba54:	ldr	r0, [r0, #64]	; 0x40
    ba58:	mov	r8, #0
    ba5c:	cmp	r0, #0
    ba60:	beq	ba70 <sas7bdat_submit_columns_if_needed+0x2c>
    ba64:	mov	r0, r8
    ba68:	sub	sp, fp, #28
    ba6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ba70:	ldr	r2, [r4]
    ba74:	cmp	r2, #0
    ba78:	beq	bb2c <sas7bdat_submit_columns_if_needed+0xe8>
    ba7c:	ldr	r0, [r4, #84]	; 0x54
    ba80:	mov	r3, #0
    ba84:	mov	r9, r4
    ba88:	str	r3, [sp, #28]
    ba8c:	str	r0, [sp, #24]
    ba90:	ldr	r0, [r9, #80]!	; 0x50
    ba94:	str	r3, [sp, #36]	; 0x24
    ba98:	str	r0, [sp, #32]
    ba9c:	ldr	r0, [r9, #132]	; 0x84
    baa0:	ldr	r6, [r9, #140]	; 0x8c
    baa4:	ldr	r7, [r9, #136]	; 0x88
    baa8:	str	r0, [sp, #40]	; 0x28
    baac:	asr	r0, r6, #31
    bab0:	str	r7, [sp, #44]	; 0x2c
    bab4:	str	r3, [sp, #56]	; 0x38
    bab8:	str	r6, [sp, #48]	; 0x30
    babc:	str	r0, [sp, #52]	; 0x34
    bac0:	ldr	r0, [r9, #-40]	; 0xffffffd8
    bac4:	str	r3, [sp, #64]	; 0x40
    bac8:	add	r3, r9, #144	; 0x90
    bacc:	str	r3, [sp, #68]	; 0x44
    bad0:	mov	r3, #1
    bad4:	cmp	r0, #0
    bad8:	movweq	r3, #2
    badc:	cmp	r1, #0
    bae0:	str	r3, [sp, #60]	; 0x3c
    bae4:	ldr	r0, [r9, #120]	; 0x78
    bae8:	str	r0, [sp, #72]	; 0x48
    baec:	ldrb	r0, [r9, #-36]	; 0xffffffdc
    baf0:	and	r0, r0, #1
    baf4:	strb	r0, [sp, #76]	; 0x4c
    baf8:	beq	bb10 <sas7bdat_submit_columns_if_needed+0xcc>
    bafc:	ldrb	r0, [r4, #2529]	; 0x9e1
    bb00:	mov	r1, #2
    bb04:	tst	r0, #1
    bb08:	movweq	r1, #1
    bb0c:	str	r1, [sp, #56]	; 0x38
    bb10:	ldr	r1, [r4, #52]	; 0x34
    bb14:	add	r0, sp, #24
    bb18:	blx	r2
    bb1c:	mov	r8, #4
    bb20:	cmp	r0, #0
    bb24:	bne	ba64 <sas7bdat_submit_columns_if_needed+0x20>
    bb28:	b	bb30 <sas7bdat_submit_columns_if_needed+0xec>
    bb2c:	add	r9, r4, #80	; 0x50
    bb30:	ldr	r0, [r9]
    bb34:	cmp	r0, #0
    bb38:	beq	be74 <sas7bdat_submit_columns_if_needed+0x430>
    bb3c:	mov	r1, #4
    bb40:	bl	4954 <readstat_calloc@plt>
    bb44:	cmp	r0, #0
    bb48:	str	r0, [r4, #196]	; 0xc4
    bb4c:	beq	be64 <sas7bdat_submit_columns_if_needed+0x420>
    bb50:	ldr	r0, [r9]
    bb54:	cmp	r0, #0
    bb58:	beq	be74 <sas7bdat_submit_columns_if_needed+0x430>
    bb5c:	movw	r0, #481	; 0x1e1
    bb60:	mov	sl, #0
    bb64:	mov	r6, #0
    bb68:	mov	r7, #0
    bb6c:	mov	r8, #0
    bb70:	add	r0, r4, r0
    bb74:	str	r0, [sp, #12]
    bb78:	mov	r0, #1
    bb7c:	movw	r1, #2152	; 0x868
    bb80:	bl	4954 <readstat_calloc@plt>
    bb84:	str	r7, [r0, #4]
    bb88:	str	r6, [r0, #2148]	; 0x864
    bb8c:	mov	r5, r0
    bb90:	ldr	r1, [r4, #192]	; 0xc0
    bb94:	add	r0, r1, sl
    bb98:	ldr	r3, [r0, #36]	; 0x24
    bb9c:	str	r3, [r5]
    bba0:	cmp	r3, #0
    bba4:	ldr	r2, [r0, #32]
    bba8:	str	r2, [r5, #1596]	; 0x63c
    bbac:	beq	bbc8 <sas7bdat_submit_columns_if_needed+0x184>
    bbb0:	cmp	r3, #5
    bbb4:	bne	bbd8 <sas7bdat_submit_columns_if_needed+0x194>
    bbb8:	sub	r2, r2, #3
    bbbc:	cmp	r2, #5
    bbc0:	bls	bbd8 <sas7bdat_submit_columns_if_needed+0x194>
    bbc4:	b	bd9c <sas7bdat_submit_columns_if_needed+0x358>
    bbc8:	sub	r2, r2, #1
    bbcc:	movw	r3, #32766	; 0x7ffe
    bbd0:	cmp	r2, r3
    bbd4:	bhi	bd9c <sas7bdat_submit_columns_if_needed+0x358>
    bbd8:	ldr	r2, [r1, sl]
    bbdc:	ldr	r3, [r4, #152]	; 0x98
    bbe0:	uxth	r1, r2
    bbe4:	cmp	r1, r3
    bbe8:	bge	bd9c <sas7bdat_submit_columns_if_needed+0x358>
    bbec:	ldrh	r3, [r0, #4]
    bbf0:	add	lr, r5, #8
    bbf4:	cmp	r3, #0
    bbf8:	beq	bcb8 <sas7bdat_submit_columns_if_needed+0x274>
    bbfc:	lsr	ip, r2, #16
    bc00:	ldr	r2, [r4, #156]	; 0x9c
    bc04:	add	r0, ip, r3
    bc08:	ldr	r2, [r2, r1, lsl #2]
    bc0c:	cmp	r0, r2
    bc10:	bhi	bd9c <sas7bdat_submit_columns_if_needed+0x358>
    bc14:	ldr	r0, [r4, #160]	; 0xa0
    bc18:	ldr	r2, [r4, #208]	; 0xd0
    bc1c:	str	r6, [sp, #20]
    bc20:	mov	r6, lr
    bc24:	ldr	r0, [r0, r1, lsl #2]
    bc28:	str	r2, [sp]
    bc2c:	mov	r1, #300	; 0x12c
    bc30:	add	r2, r0, ip
    bc34:	mov	r0, lr
    bc38:	bl	4b94 <readstat_convert@plt>
    bc3c:	mov	lr, r6
    bc40:	mov	r6, r0
    bc44:	cmp	r0, #0
    bc48:	beq	bcc4 <sas7bdat_submit_columns_if_needed+0x280>
    bc4c:	mov	r0, r5
    bc50:	str	lr, [sp, #16]
    bc54:	bl	4864 <free@plt>
    bc58:	cmp	r6, #17
    bc5c:	bne	bd40 <sas7bdat_submit_columns_if_needed+0x2fc>
    bc60:	ldr	r0, [r4, #24]
    bc64:	mov	r8, #17
    bc68:	cmp	r0, #0
    bc6c:	beq	bd44 <sas7bdat_submit_columns_if_needed+0x300>
    bc70:	ldr	r2, [sp, #16]
    bc74:	add	r0, r5, #564	; 0x234
    bc78:	add	r1, r5, #308	; 0x134
    bc7c:	ldr	r5, [sp, #12]
    bc80:	mov	r3, r7
    bc84:	str	r1, [sp, #4]
    bc88:	str	r0, [sp, #8]
    bc8c:	mov	r1, #2048	; 0x800
    bc90:	str	r2, [sp]
    bc94:	mov	r0, r5
    bc98:	ldr	r2, [pc, #492]	; be8c <sas7bdat_submit_columns_if_needed+0x448>
    bc9c:	add	r2, pc, r2
    bca0:	bl	4bdc <snprintf@plt>
    bca4:	ldr	r2, [r4, #24]
    bca8:	ldr	r1, [r4, #52]	; 0x34
    bcac:	mov	r0, r5
    bcb0:	blx	r2
    bcb4:	b	bd44 <sas7bdat_submit_columns_if_needed+0x300>
    bcb8:	mov	r0, #0
    bcbc:	str	r6, [sp, #20]
    bcc0:	strb	r0, [lr]
    bcc4:	ldr	r1, [r4, #192]	; 0xc0
    bcc8:	ldr	r0, [r4, #152]	; 0x98
    bccc:	ldr	r6, [sp, #20]
    bcd0:	add	r3, r1, sl
    bcd4:	ldr	r2, [r3, #6]
    bcd8:	uxth	r1, r2
    bcdc:	cmp	r1, r0
    bce0:	bge	bd9c <sas7bdat_submit_columns_if_needed+0x358>
    bce4:	ldrh	r3, [r3, #10]
    bce8:	add	r0, r5, #308	; 0x134
    bcec:	cmp	r3, #0
    bcf0:	beq	bd50 <sas7bdat_submit_columns_if_needed+0x30c>
    bcf4:	lsr	ip, r2, #16
    bcf8:	ldr	r2, [r4, #156]	; 0x9c
    bcfc:	str	lr, [sp, #16]
    bd00:	ldr	lr, [r2, r1, lsl #2]
    bd04:	add	r2, ip, r3
    bd08:	cmp	r2, lr
    bd0c:	bhi	bd9c <sas7bdat_submit_columns_if_needed+0x358>
    bd10:	ldr	r2, [r4, #160]	; 0xa0
    bd14:	ldr	lr, [r4, #208]	; 0xd0
    bd18:	ldr	r1, [r2, r1, lsl #2]
    bd1c:	str	lr, [sp]
    bd20:	add	r2, r1, ip
    bd24:	mov	r1, #256	; 0x100
    bd28:	bl	4b94 <readstat_convert@plt>
    bd2c:	ldr	lr, [sp, #16]
    bd30:	mov	r6, r0
    bd34:	cmp	r0, #0
    bd38:	bne	bc4c <sas7bdat_submit_columns_if_needed+0x208>
    bd3c:	b	bd58 <sas7bdat_submit_columns_if_needed+0x314>
    bd40:	mov	r8, r6
    bd44:	mov	r5, #0
    bd48:	ldr	r6, [sp, #20]
    bd4c:	b	bdac <sas7bdat_submit_columns_if_needed+0x368>
    bd50:	mov	r1, #0
    bd54:	strb	r1, [r0]
    bd58:	ldr	r0, [r4, #192]	; 0xc0
    bd5c:	ldr	r3, [r4, #152]	; 0x98
    bd60:	ldr	r6, [sp, #20]
    bd64:	add	r2, r0, sl
    bd68:	ldr	r0, [r2, #12]
    bd6c:	uxth	r1, r0
    bd70:	cmp	r1, r3
    bd74:	bge	bd9c <sas7bdat_submit_columns_if_needed+0x358>
    bd78:	ldrh	r3, [r2, #16]
    bd7c:	cmp	r3, #0
    bd80:	beq	be20 <sas7bdat_submit_columns_if_needed+0x3dc>
    bd84:	lsr	ip, r0, #16
    bd88:	ldr	r0, [r4, #156]	; 0x9c
    bd8c:	add	r2, ip, r3
    bd90:	ldr	r0, [r0, r1, lsl #2]
    bd94:	cmp	r2, r0
    bd98:	bls	be2c <sas7bdat_submit_columns_if_needed+0x3e8>
    bd9c:	mov	r0, r5
    bda0:	bl	4864 <free@plt>
    bda4:	mov	r5, #0
    bda8:	mov	r8, #5
    bdac:	ldr	r0, [r4, #196]	; 0xc4
    bdb0:	str	r5, [r0, r7, lsl #2]
    bdb4:	ldr	r0, [r4, #196]	; 0xc4
    bdb8:	ldr	r1, [r0, r7, lsl #2]
    bdbc:	cmp	r1, #0
    bdc0:	beq	be6c <sas7bdat_submit_columns_if_needed+0x428>
    bdc4:	ldr	r5, [r4, #8]
    bdc8:	cmp	r5, #0
    bdcc:	beq	bdf0 <sas7bdat_submit_columns_if_needed+0x3ac>
    bdd0:	ldr	r3, [r4, #52]	; 0x34
    bdd4:	add	r2, r1, #308	; 0x134
    bdd8:	mov	r0, r7
    bddc:	blx	r5
    bde0:	cmp	r0, #2
    bde4:	beq	bdf8 <sas7bdat_submit_columns_if_needed+0x3b4>
    bde8:	cmp	r0, #1
    bdec:	beq	be84 <sas7bdat_submit_columns_if_needed+0x440>
    bdf0:	add	r6, r6, #1
    bdf4:	b	be08 <sas7bdat_submit_columns_if_needed+0x3c4>
    bdf8:	ldr	r0, [r4, #196]	; 0xc4
    bdfc:	mov	r1, #1
    be00:	ldr	r0, [r0, r7, lsl #2]
    be04:	str	r1, [r0, #2144]	; 0x860
    be08:	ldr	r0, [r9]
    be0c:	add	r7, r7, #1
    be10:	add	sl, sl, #40	; 0x28
    be14:	cmp	r7, r0
    be18:	bcc	bb78 <sas7bdat_submit_columns_if_needed+0x134>
    be1c:	b	be6c <sas7bdat_submit_columns_if_needed+0x428>
    be20:	mov	r0, #0
    be24:	strb	r0, [r5, #564]	; 0x234
    be28:	b	bdac <sas7bdat_submit_columns_if_needed+0x368>
    be2c:	ldr	r2, [r4, #160]	; 0xa0
    be30:	mov	r6, lr
    be34:	ldr	lr, [r4, #208]	; 0xd0
    be38:	add	r0, r5, #564	; 0x234
    be3c:	ldr	r1, [r2, r1, lsl #2]
    be40:	str	lr, [sp]
    be44:	add	r2, r1, ip
    be48:	mov	r1, #1024	; 0x400
    be4c:	bl	4b94 <readstat_convert@plt>
    be50:	mov	lr, r6
    be54:	mov	r6, r0
    be58:	cmp	r0, #0
    be5c:	bne	bc4c <sas7bdat_submit_columns_if_needed+0x208>
    be60:	b	bd48 <sas7bdat_submit_columns_if_needed+0x304>
    be64:	mov	r8, #3
    be68:	b	ba64 <sas7bdat_submit_columns_if_needed+0x20>
    be6c:	cmp	r8, #0
    be70:	bne	ba64 <sas7bdat_submit_columns_if_needed+0x20>
    be74:	mov	r0, #1
    be78:	mov	r8, #0
    be7c:	str	r0, [r4, #64]	; 0x40
    be80:	b	ba64 <sas7bdat_submit_columns_if_needed+0x20>
    be84:	mov	r8, #4
    be88:	b	ba64 <sas7bdat_submit_columns_if_needed+0x20>
    be8c:	.word	0x0001d91d

0000be90 <sas7bdat_parse_page_pass1>:
    be90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    be94:	add	fp, sp, #28
    be98:	sub	sp, sp, #52	; 0x34
    be9c:	mov	r5, r2
    bea0:	mov	r8, r0
    bea4:	mov	r9, r1
    bea8:	ldr	r1, [r2, #60]	; 0x3c
    beac:	mov	sl, r2
    beb0:	ldr	r0, [r5, #128]!	; 0x80
    beb4:	add	r0, r8, r0
    beb8:	sub	r0, r0, #4
    bebc:	bl	4d20 <sas_read2@plt>
    bec0:	mov	r7, sl
    bec4:	ldr	r6, [r5]
    bec8:	ldr	r4, [r7, #144]!	; 0x90
    becc:	ldr	r2, [r7, #-12]
    bed0:	mul	r1, r4, r0
    bed4:	adds	r3, r6, r1
    bed8:	adc	r1, r2, r1, asr #31
    bedc:	subs	r2, r9, r3
    bee0:	rscs	r1, r1, #0
    bee4:	bcs	bef4 <sas7bdat_parse_page_pass1+0x64>
    bee8:	mov	r0, #5
    beec:	sub	sp, fp, #28
    bef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bef4:	cmp	r0, #0
    bef8:	str	r9, [sp, #28]
    befc:	str	r4, [sp, #24]
    bf00:	str	r0, [fp, #-36]	; 0xffffffdc
    bf04:	beq	c114 <sas7bdat_parse_page_pass1+0x284>
    bf08:	ldr	r0, [sp, #28]
    bf0c:	str	r7, [sp, #16]
    bf10:	ldr	r7, [sp, #24]
    bf14:	add	r6, r8, r6
    bf18:	mov	r9, #0
    bf1c:	str	r5, [sp, #20]
    bf20:	str	r8, [sp, #8]
    bf24:	add	r0, r8, r0
    bf28:	str	r0, [sp, #32]
    bf2c:	add	r0, r8, #4
    bf30:	str	r0, [sp, #4]
    bf34:	add	r0, sl, #136	; 0x88
    bf38:	str	r0, [sp, #40]	; 0x28
    bf3c:	ldr	r1, [sp, #40]	; 0x28
    bf40:	ldr	r0, [sp, #32]
    bf44:	ldr	r2, [r1]
    bf48:	ldr	r1, [sl, #44]	; 0x2c
    bf4c:	sub	r0, r0, r6
    bf50:	cmp	r1, #0
    bf54:	str	r2, [sp, #36]	; 0x24
    bf58:	beq	bf90 <sas7bdat_parse_page_pass1+0x100>
    bf5c:	cmp	r0, #18
    bf60:	bcc	bee8 <sas7bdat_parse_page_pass1+0x58>
    bf64:	ldr	r1, [sl, #60]	; 0x3c
    bf68:	mov	r0, r6
    bf6c:	bl	4d14 <sas_read8@plt>
    bf70:	mov	r8, r1
    bf74:	ldr	r1, [sl, #60]	; 0x3c
    bf78:	str	r0, [fp, #-32]	; 0xffffffe0
    bf7c:	add	r0, r6, #8
    bf80:	bl	4d14 <sas_read8@plt>
    bf84:	mov	ip, r0
    bf88:	mov	r0, #16
    bf8c:	b	bfc4 <sas7bdat_parse_page_pass1+0x134>
    bf90:	cmp	r0, #10
    bf94:	bcc	bee8 <sas7bdat_parse_page_pass1+0x58>
    bf98:	ldr	r1, [sl, #60]	; 0x3c
    bf9c:	mov	r0, r6
    bfa0:	bl	4d44 <sas_read4@plt>
    bfa4:	ldr	r1, [sl, #60]	; 0x3c
    bfa8:	str	r0, [fp, #-32]	; 0xffffffe0
    bfac:	add	r0, r6, #4
    bfb0:	bl	4d44 <sas_read4@plt>
    bfb4:	mov	ip, r0
    bfb8:	mov	r8, #0
    bfbc:	mov	r0, #8
    bfc0:	mov	r1, #0
    bfc4:	orrs	r2, ip, r1
    bfc8:	ldr	r5, [fp, #-32]	; 0xffffffe0
    bfcc:	ldrbne	r4, [r6, r0]
    bfd0:	cmpne	r4, #1
    bfd4:	bne	bff0 <sas7bdat_parse_page_pass1+0x160>
    bfd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    bfdc:	add	r9, r9, #1
    bfe0:	add	r6, r6, r7
    bfe4:	cmp	r9, r0
    bfe8:	bcc	bf3c <sas7bdat_parse_page_pass1+0xac>
    bfec:	b	c114 <sas7bdat_parse_page_pass1+0x284>
    bff0:	ldr	r0, [sp, #28]
    bff4:	subs	r2, r0, r5
    bff8:	rscs	r2, r8, #0
    bffc:	bcc	bee8 <sas7bdat_parse_page_pass1+0x58>
    c000:	adds	r2, ip, r5
    c004:	adc	r3, r1, r8
    c008:	subs	r7, r0, ip
    c00c:	rscs	r7, r1, #0
    c010:	bcc	bee8 <sas7bdat_parse_page_pass1+0x58>
    c014:	subs	r2, r0, r2
    c018:	rscs	r2, r3, #0
    c01c:	bcc	bee8 <sas7bdat_parse_page_pass1+0x58>
    c020:	ldr	r0, [sp, #16]
    c024:	ldr	r3, [fp, #-36]	; 0xffffffdc
    c028:	ldr	r2, [r0]
    c02c:	ldr	r0, [r0, #4]
    c030:	umull	r2, r7, r2, r3
    c034:	mla	r3, r0, r3, r7
    c038:	ldr	r0, [sp, #20]
    c03c:	ldm	r0, {r0, r7}
    c040:	adds	r0, r2, r0
    c044:	adc	r2, r3, r7
    c048:	subs	r0, r5, r0
    c04c:	sbcs	r0, r8, r2
    c050:	bcc	bee8 <sas7bdat_parse_page_pass1+0x58>
    c054:	ldr	r7, [sp, #24]
    c058:	cmp	r4, #4
    c05c:	beq	bfd8 <sas7bdat_parse_page_pass1+0x148>
    c060:	cmp	r4, #0
    c064:	bne	c120 <sas7bdat_parse_page_pass1+0x290>
    c068:	ldr	r0, [sp, #40]	; 0x28
    c06c:	mov	r4, r7
    c070:	ldm	r0, {r3, r7}
    c074:	adds	r0, r3, r5
    c078:	adc	r2, r7, r8
    c07c:	subs	r3, ip, r3
    c080:	sbcs	r1, r1, r7
    c084:	bcc	bee8 <sas7bdat_parse_page_pass1+0x58>
    c088:	ldr	r1, [sp, #28]
    c08c:	subs	r0, r1, r0
    c090:	rscs	r0, r2, #0
    c094:	bcc	bee8 <sas7bdat_parse_page_pass1+0x58>
    c098:	ldr	r0, [sp, #8]
    c09c:	ldr	r1, [sl, #60]	; 0x3c
    c0a0:	str	ip, [sp, #12]
    c0a4:	add	r8, r0, r5
    c0a8:	mov	r0, r8
    c0ac:	bl	4d44 <sas_read4@plt>
    c0b0:	ldr	r1, [sp, #36]	; 0x24
    c0b4:	cmp	r1, #8
    c0b8:	bne	c0e8 <sas7bdat_parse_page_pass1+0x258>
    c0bc:	cmn	r0, #1
    c0c0:	mov	r7, r4
    c0c4:	ldreq	r1, [sl, #40]	; 0x28
    c0c8:	cmpeq	r1, #0
    c0cc:	bne	c0ec <sas7bdat_parse_page_pass1+0x25c>
    c0d0:	ldr	r0, [sp, #4]
    c0d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c0d8:	add	r0, r0, r1
    c0dc:	ldr	r1, [sl, #60]	; 0x3c
    c0e0:	bl	4d44 <sas_read4@plt>
    c0e4:	b	c0ec <sas7bdat_parse_page_pass1+0x25c>
    c0e8:	mov	r7, r4
    c0ec:	ldr	r2, [sp, #12]
    c0f0:	cmn	r0, #3
    c0f4:	bne	bfd8 <sas7bdat_parse_page_pass1+0x148>
    c0f8:	mvn	r0, #2
    c0fc:	mov	r1, r8
    c100:	mov	r3, sl
    c104:	bl	c12c <sas7bdat_parse_subheader>
    c108:	cmp	r0, #0
    c10c:	beq	bfd8 <sas7bdat_parse_page_pass1+0x148>
    c110:	b	c118 <sas7bdat_parse_page_pass1+0x288>
    c114:	mov	r0, #0
    c118:	sub	sp, fp, #28
    c11c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c120:	mov	r0, #6
    c124:	sub	sp, fp, #28
    c128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000c12c <sas7bdat_parse_subheader>:
    c12c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c130:	add	fp, sp, #28
    c134:	sub	sp, sp, #4
    c138:	ldr	r8, [r3, #136]	; 0x88
    c13c:	mov	r5, r1
    c140:	ldr	r1, [r3, #140]	; 0x8c
    c144:	mov	r6, r2
    c148:	mov	r7, #5
    c14c:	adds	r2, r8, #2
    c150:	adc	r1, r1, #0
    c154:	subs	r2, r6, r2
    c158:	rscs	r1, r1, #0
    c15c:	bcs	c16c <sas7bdat_parse_subheader+0x40>
    c160:	mov	r0, r7
    c164:	sub	sp, fp, #28
    c168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c16c:	mov	r9, r3
    c170:	cmn	r0, #1024	; 0x400
    c174:	bge	c2d4 <sas7bdat_parse_subheader+0x1a8>
    c178:	movw	r1, #63222	; 0xf6f6
    c17c:	movt	r1, #63222	; 0xf6f6
    c180:	cmp	r0, r1
    c184:	beq	c318 <sas7bdat_parse_subheader+0x1ec>
    c188:	movw	r1, #63479	; 0xf7f7
    c18c:	movt	r1, #63479	; 0xf7f7
    c190:	cmp	r0, r1
    c194:	beq	c364 <sas7bdat_parse_subheader+0x238>
    c198:	movw	r1, #64510	; 0xfbfe
    c19c:	movt	r1, #65535	; 0xffff
    c1a0:	cmp	r0, r1
    c1a4:	bne	c3cc <sas7bdat_parse_subheader+0x2a0>
    c1a8:	ldr	r0, [r9, #44]	; 0x2c
    c1ac:	mov	r1, #58	; 0x3a
    c1b0:	cmp	r0, #0
    c1b4:	movweq	r1, #46	; 0x2e
    c1b8:	cmp	r1, r6
    c1bc:	bhi	c160 <sas7bdat_parse_subheader+0x34>
    c1c0:	ldr	r1, [r9, #172]	; 0xac
    c1c4:	ldr	r6, [r9, #188]	; 0xbc
    c1c8:	add	r4, r1, #1
    c1cc:	cmp	r4, r6
    c1d0:	str	r4, [r9, #172]	; 0xac
    c1d4:	bls	c21c <sas7bdat_parse_subheader+0xf0>
    c1d8:	str	r4, [r9, #188]	; 0xbc
    c1dc:	add	r1, r4, r4, lsl #2
    c1e0:	ldr	r0, [r9, #192]	; 0xc0
    c1e4:	lsl	r1, r1, #3
    c1e8:	bl	4c3c <readstat_realloc@plt>
    c1ec:	cmp	r0, #0
    c1f0:	str	r0, [r9, #192]	; 0xc0
    c1f4:	beq	c85c <sas7bdat_parse_subheader+0x730>
    c1f8:	add	r1, r6, r6, lsl #2
    c1fc:	add	r0, r0, r1, lsl #3
    c200:	sub	r1, r4, r6
    c204:	add	r1, r1, r1, lsl #2
    c208:	lsl	r2, r1, #3
    c20c:	mov	r1, #0
    c210:	bl	4c00 <memset@plt>
    c214:	ldr	r0, [r9, #44]	; 0x2c
    c218:	ldr	r4, [r9, #172]	; 0xac
    c21c:	ldr	r2, [r9, #192]	; 0xc0
    c220:	add	r3, r4, r4, lsl #2
    c224:	ldr	r1, [r9, #60]	; 0x3c
    c228:	cmp	r0, #0
    c22c:	add	r4, r2, r3, lsl #3
    c230:	mov	r2, #46	; 0x2e
    c234:	movweq	r2, #34	; 0x22
    c238:	add	r6, r5, r2
    c23c:	mov	r0, r6
    c240:	bl	4d20 <sas_read2@plt>
    c244:	ldr	r1, [r9, #60]	; 0x3c
    c248:	mov	r8, r0
    c24c:	add	r0, r6, #2
    c250:	bl	4d20 <sas_read2@plt>
    c254:	ldr	r1, [r9, #60]	; 0x3c
    c258:	mov	r7, r0
    c25c:	add	r0, r6, #4
    c260:	bl	4d20 <sas_read2@plt>
    c264:	strh	r8, [r4, #-34]	; 0xffffffde
    c268:	strh	r7, [r4, #-32]	; 0xffffffe0
    c26c:	strh	r0, [r4, #-30]	; 0xffffffe2
    c270:	ldr	r2, [r9, #172]	; 0xac
    c274:	ldr	r0, [r9, #44]	; 0x2c
    c278:	ldr	r3, [r9, #192]	; 0xc0
    c27c:	ldr	r1, [r9, #60]	; 0x3c
    c280:	add	r2, r2, r2, lsl #2
    c284:	cmp	r0, #0
    c288:	add	r4, r3, r2, lsl #3
    c28c:	mov	r2, #52	; 0x34
    c290:	movweq	r2, #40	; 0x28
    c294:	add	r5, r5, r2
    c298:	mov	r0, r5
    c29c:	bl	4d20 <sas_read2@plt>
    c2a0:	ldr	r1, [r9, #60]	; 0x3c
    c2a4:	mov	r6, r0
    c2a8:	add	r0, r5, #2
    c2ac:	bl	4d20 <sas_read2@plt>
    c2b0:	ldr	r1, [r9, #60]	; 0x3c
    c2b4:	mov	r7, r0
    c2b8:	add	r0, r5, #4
    c2bc:	bl	4d20 <sas_read2@plt>
    c2c0:	strh	r6, [r4, #-28]	; 0xffffffe4
    c2c4:	strh	r7, [r4, #-26]	; 0xffffffe6
    c2c8:	strh	r0, [r4, #-24]	; 0xffffffe8
    c2cc:	mov	r7, #0
    c2d0:	b	c160 <sas7bdat_parse_subheader+0x34>
    c2d4:	add	r1, r0, #4
    c2d8:	cmp	r1, #3
    c2dc:	bhi	c3c0 <sas7bdat_parse_subheader+0x294>
    c2e0:	add	r0, pc, #8
    c2e4:	mov	r7, #0
    c2e8:	ldr	r1, [r0, r1, lsl #2]
    c2ec:	add	pc, r0, r1
    c2f0:	.word	0x00000010
    c2f4:	.word	0x000000f4
    c2f8:	.word	0xfffffe70
    c2fc:	.word	0x000001e0
    c300:	ldr	r0, [r9, #44]	; 0x2c
    c304:	cmp	r0, #0
    c308:	beq	c5e8 <sas7bdat_parse_subheader+0x4bc>
    c30c:	sub	r0, r6, #28
    c310:	lsr	r4, r0, #4
    c314:	b	c5fc <sas7bdat_parse_subheader+0x4d0>
    c318:	ldr	r0, [r9, #80]	; 0x50
    c31c:	cmp	r0, #0
    c320:	bne	c160 <sas7bdat_parse_subheader+0x34>
    c324:	ldr	r0, [r9, #64]	; 0x40
    c328:	cmp	r0, #0
    c32c:	bne	c160 <sas7bdat_parse_subheader+0x34>
    c330:	ldr	r0, [r9, #44]	; 0x2c
    c334:	mov	r1, #8
    c338:	mov	r7, #5
    c33c:	cmp	r0, #0
    c340:	movwne	r1, #16
    c344:	cmp	r1, r6
    c348:	bhi	c160 <sas7bdat_parse_subheader+0x34>
    c34c:	cmp	r0, #0
    c350:	beq	c7f4 <sas7bdat_parse_subheader+0x6c8>
    c354:	ldr	r1, [r9, #60]	; 0x3c
    c358:	add	r0, r5, #8
    c35c:	bl	4d14 <sas_read8@plt>
    c360:	b	c800 <sas7bdat_parse_subheader+0x6d4>
    c364:	ldr	r0, [r9, #44]	; 0x2c
    c368:	mov	r1, #64	; 0x40
    c36c:	mov	r7, #5
    c370:	cmp	r0, #0
    c374:	movwne	r1, #128	; 0x80
    c378:	cmp	r1, r6
    c37c:	bhi	c160 <sas7bdat_parse_subheader+0x34>
    c380:	cmp	r0, #0
    c384:	beq	c750 <sas7bdat_parse_subheader+0x624>
    c388:	ldr	r1, [r9, #60]	; 0x3c
    c38c:	add	r0, r5, #40	; 0x28
    c390:	bl	4d14 <sas_read8@plt>
    c394:	ldr	r1, [r9, #60]	; 0x3c
    c398:	mov	r7, r0
    c39c:	add	r0, r5, #48	; 0x30
    c3a0:	bl	4d14 <sas_read8@plt>
    c3a4:	mov	r8, r1
    c3a8:	ldr	r1, [r9, #60]	; 0x3c
    c3ac:	mov	r6, r0
    c3b0:	add	r0, r5, #120	; 0x78
    c3b4:	bl	4d14 <sas_read8@plt>
    c3b8:	mov	r5, r0
    c3bc:	b	c784 <sas7bdat_parse_subheader+0x658>
    c3c0:	cmn	r0, #1024	; 0x400
    c3c4:	mov	r7, #0
    c3c8:	beq	c160 <sas7bdat_parse_subheader+0x34>
    c3cc:	mov	r1, #5
    c3d0:	cmn	r0, #9
    c3d4:	movwhi	r1, #0
    c3d8:	mov	r0, r1
    c3dc:	sub	sp, fp, #28
    c3e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c3e4:	ldr	r1, [r9, #60]	; 0x3c
    c3e8:	add	r5, r5, r8
    c3ec:	mov	r0, r5
    c3f0:	bl	4d20 <sas_read2@plt>
    c3f4:	mov	r7, r0
    c3f8:	mov	r0, r6
    c3fc:	mov	r1, r8
    c400:	bl	4d08 <sas_subheader_remainder@plt>
    c404:	cmp	r0, r7
    c408:	mov	r7, #5
    c40c:	bne	c160 <sas7bdat_parse_subheader+0x34>
    c410:	ldr	r1, [r9, #152]	; 0x98
    c414:	ldr	r0, [r9, #160]	; 0xa0
    c418:	add	r1, r1, #1
    c41c:	str	r1, [r9, #152]	; 0x98
    c420:	lsl	r1, r1, #2
    c424:	bl	4c3c <readstat_realloc@plt>
    c428:	str	r0, [r9, #160]	; 0xa0
    c42c:	ldr	r0, [r9, #152]	; 0x98
    c430:	ldr	r3, [r9, #156]	; 0x9c
    c434:	lsl	r1, r0, #2
    c438:	mov	r0, r3
    c43c:	bl	4c3c <readstat_realloc@plt>
    c440:	str	r0, [r9, #156]	; 0x9c
    c444:	cmp	r0, #0
    c448:	mov	r7, #3
    c44c:	ldrne	r0, [r9, #160]	; 0xa0
    c450:	cmpne	r0, #0
    c454:	beq	c160 <sas7bdat_parse_subheader+0x34>
    c458:	sub	r6, r6, r8
    c45c:	mov	r0, r6
    c460:	bl	4b88 <readstat_malloc@plt>
    c464:	cmp	r0, #0
    c468:	beq	c160 <sas7bdat_parse_subheader+0x34>
    c46c:	mov	r1, r5
    c470:	mov	r2, r6
    c474:	mov	r8, r0
    c478:	bl	48b8 <memcpy@plt>
    c47c:	ldrd	r0, [r9, #152]	; 0x98
    c480:	cmp	r6, #21
    c484:	add	r0, r1, r0, lsl #2
    c488:	str	r6, [r0, #-4]
    c48c:	ldr	r0, [r9, #152]	; 0x98
    c490:	ldr	r1, [r9, #160]	; 0xa0
    c494:	add	r0, r1, r0, lsl #2
    c498:	str	r8, [r0, #-4]
    c49c:	bcc	c748 <sas7bdat_parse_subheader+0x61c>
    c4a0:	ldr	r1, [pc, #956]	; c864 <sas7bdat_parse_subheader+0x738>
    c4a4:	add	r0, r8, #12
    c4a8:	mov	r2, #8
    c4ac:	add	r1, pc, r1
    c4b0:	bl	4e34 <strncmp@plt>
    c4b4:	cmp	r0, #0
    c4b8:	bne	c748 <sas7bdat_parse_subheader+0x61c>
    c4bc:	ldrb	r0, [r9, #2529]	; 0x9e1
    c4c0:	mov	r7, #0
    c4c4:	orr	r0, r0, #1
    c4c8:	strb	r0, [r9, #2529]	; 0x9e1
    c4cc:	b	c160 <sas7bdat_parse_subheader+0x34>
    c4d0:	ldr	r0, [r9, #44]	; 0x2c
    c4d4:	ldr	r1, [r9, #60]	; 0x3c
    c4d8:	add	r5, r5, r8
    c4dc:	mvn	r4, #27
    c4e0:	cmp	r0, #0
    c4e4:	mov	r0, r5
    c4e8:	mvneq	r4, #19
    c4ec:	bl	4d20 <sas_read2@plt>
    c4f0:	mov	r7, r0
    c4f4:	mov	r0, r6
    c4f8:	mov	r1, r8
    c4fc:	bl	4d08 <sas_subheader_remainder@plt>
    c500:	cmp	r0, r7
    c504:	mov	r7, #5
    c508:	bne	c160 <sas7bdat_parse_subheader+0x34>
    c50c:	add	r0, r4, r6
    c510:	ldr	r4, [r9, #188]	; 0xbc
    c514:	lsr	r6, r0, #3
    c518:	ldr	r0, [r9, #164]	; 0xa4
    c51c:	add	r7, r0, r6
    c520:	cmp	r7, r4
    c524:	str	r7, [r9, #164]	; 0xa4
    c528:	bls	c568 <sas7bdat_parse_subheader+0x43c>
    c52c:	str	r7, [r9, #188]	; 0xbc
    c530:	add	r1, r7, r7, lsl #2
    c534:	ldr	r0, [r9, #192]	; 0xc0
    c538:	lsl	r1, r1, #3
    c53c:	bl	4c3c <readstat_realloc@plt>
    c540:	cmp	r0, #0
    c544:	str	r0, [r9, #192]	; 0xc0
    c548:	beq	c85c <sas7bdat_parse_subheader+0x730>
    c54c:	add	r1, r4, r4, lsl #2
    c550:	add	r0, r0, r1, lsl #3
    c554:	sub	r1, r7, r4
    c558:	add	r1, r1, r1, lsl #2
    c55c:	lsl	r2, r1, #3
    c560:	mov	r1, #0
    c564:	bl	4c00 <memset@plt>
    c568:	cmp	r6, #0
    c56c:	beq	c748 <sas7bdat_parse_subheader+0x61c>
    c570:	ldr	r0, [r9, #164]	; 0xa4
    c574:	add	r1, r6, r6, lsl #2
    c578:	add	r5, r5, #8
    c57c:	sub	r4, r0, r6
    c580:	add	r0, r0, r0, lsl #2
    c584:	lsl	r0, r0, #3
    c588:	sub	r6, r0, r1, lsl #3
    c58c:	ldr	r1, [r9, #60]	; 0x3c
    c590:	ldr	sl, [r9, #192]	; 0xc0
    c594:	mov	r0, r5
    c598:	bl	4d20 <sas_read2@plt>
    c59c:	ldr	r1, [r9, #60]	; 0x3c
    c5a0:	mov	r8, r0
    c5a4:	add	r0, r5, #2
    c5a8:	bl	4d20 <sas_read2@plt>
    c5ac:	ldr	r1, [r9, #60]	; 0x3c
    c5b0:	mov	r7, r0
    c5b4:	add	r0, r5, #4
    c5b8:	bl	4d20 <sas_read2@plt>
    c5bc:	add	r1, sl, r6
    c5c0:	add	r4, r4, #1
    c5c4:	add	r5, r5, #8
    c5c8:	add	r6, r6, #40	; 0x28
    c5cc:	strh	r8, [r1]
    c5d0:	strh	r7, [r1, #2]
    c5d4:	strh	r0, [r1, #4]
    c5d8:	ldr	r0, [r9, #164]	; 0xa4
    c5dc:	cmp	r4, r0
    c5e0:	blt	c58c <sas7bdat_parse_subheader+0x460>
    c5e4:	b	c748 <sas7bdat_parse_subheader+0x61c>
    c5e8:	movw	r1, #43691	; 0xaaab
    c5ec:	sub	r0, r6, #20
    c5f0:	movt	r1, #43690	; 0xaaaa
    c5f4:	umull	r0, r1, r0, r1
    c5f8:	lsr	r4, r1, #3
    c5fc:	ldr	r1, [r9, #60]	; 0x3c
    c600:	add	r5, r5, r8
    c604:	mov	r0, r5
    c608:	bl	4d20 <sas_read2@plt>
    c60c:	mov	r7, r0
    c610:	mov	r0, r6
    c614:	mov	r1, r8
    c618:	bl	4d08 <sas_subheader_remainder@plt>
    c61c:	cmp	r0, r7
    c620:	mov	r7, #5
    c624:	bne	c160 <sas7bdat_parse_subheader+0x34>
    c628:	ldr	r0, [r9, #168]	; 0xa8
    c62c:	ldr	r6, [r9, #188]	; 0xbc
    c630:	add	r7, r0, r4
    c634:	cmp	r7, r6
    c638:	str	r7, [r9, #168]	; 0xa8
    c63c:	bls	c67c <sas7bdat_parse_subheader+0x550>
    c640:	str	r7, [r9, #188]	; 0xbc
    c644:	add	r1, r7, r7, lsl #2
    c648:	ldr	r0, [r9, #192]	; 0xc0
    c64c:	lsl	r1, r1, #3
    c650:	bl	4c3c <readstat_realloc@plt>
    c654:	cmp	r0, #0
    c658:	str	r0, [r9, #192]	; 0xc0
    c65c:	beq	c85c <sas7bdat_parse_subheader+0x730>
    c660:	add	r1, r6, r6, lsl #2
    c664:	add	r0, r0, r1, lsl #3
    c668:	sub	r1, r7, r6
    c66c:	add	r1, r1, r1, lsl #2
    c670:	lsl	r2, r1, #3
    c674:	mov	r1, #0
    c678:	bl	4c00 <memset@plt>
    c67c:	cmp	r4, #0
    c680:	beq	c748 <sas7bdat_parse_subheader+0x61c>
    c684:	ldr	r0, [r9, #168]	; 0xa8
    c688:	add	r1, r4, r4, lsl #2
    c68c:	add	r5, r5, #8
    c690:	sub	r6, r0, r4
    c694:	add	r0, r0, r0, lsl #2
    c698:	lsl	r0, r0, #3
    c69c:	sub	r4, r0, r1, lsl #3
    c6a0:	ldr	r0, [r9, #44]	; 0x2c
    c6a4:	ldr	r1, [r9, #60]	; 0x3c
    c6a8:	cmp	r0, #0
    c6ac:	beq	c6bc <sas7bdat_parse_subheader+0x590>
    c6b0:	mov	r0, r5
    c6b4:	bl	4d14 <sas_read8@plt>
    c6b8:	b	c6c8 <sas7bdat_parse_subheader+0x59c>
    c6bc:	mov	r0, r5
    c6c0:	bl	4d44 <sas_read4@plt>
    c6c4:	mov	r1, #0
    c6c8:	ldr	r2, [r9, #192]	; 0xc0
    c6cc:	add	r2, r2, r4
    c6d0:	strd	r0, [r2, #24]
    c6d4:	ldr	r0, [r9, #44]	; 0x2c
    c6d8:	ldr	r1, [r9, #60]	; 0x3c
    c6dc:	cmp	r0, #0
    c6e0:	mov	r0, #8
    c6e4:	movweq	r0, #4
    c6e8:	add	r5, r5, r0
    c6ec:	mov	r0, r5
    c6f0:	bl	4d44 <sas_read4@plt>
    c6f4:	ldr	r1, [r9, #192]	; 0xc0
    c6f8:	mov	r7, #5
    c6fc:	add	r1, r1, r4
    c700:	str	r0, [r1, #32]
    c704:	ldr	r2, [r9, #176]	; 0xb0
    c708:	cmp	r0, r2
    c70c:	strhi	r0, [r9, #176]	; 0xb0
    c710:	ldrb	r0, [r5, #6]
    c714:	cmp	r0, #1
    c718:	beq	c728 <sas7bdat_parse_subheader+0x5fc>
    c71c:	cmp	r0, #2
    c720:	bne	c160 <sas7bdat_parse_subheader+0x34>
    c724:	mov	r7, #0
    c728:	str	r6, [r1, #20]
    c72c:	str	r7, [r1, #36]	; 0x24
    c730:	add	r6, r6, #1
    c734:	add	r5, r5, #8
    c738:	add	r4, r4, #40	; 0x28
    c73c:	ldr	r0, [r9, #168]	; 0xa8
    c740:	cmp	r6, r0
    c744:	blt	c6a0 <sas7bdat_parse_subheader+0x574>
    c748:	mov	r7, #0
    c74c:	b	c160 <sas7bdat_parse_subheader+0x34>
    c750:	ldr	r1, [r9, #60]	; 0x3c
    c754:	add	r0, r5, #20
    c758:	bl	4d44 <sas_read4@plt>
    c75c:	ldr	r1, [r9, #60]	; 0x3c
    c760:	mov	r7, r0
    c764:	add	r0, r5, #24
    c768:	bl	4d44 <sas_read4@plt>
    c76c:	ldr	r1, [r9, #60]	; 0x3c
    c770:	mov	r6, r0
    c774:	add	r0, r5, #60	; 0x3c
    c778:	bl	4d44 <sas_read4@plt>
    c77c:	mov	r5, r0
    c780:	mov	r8, #0
    c784:	str	r7, [r9, #68]	; 0x44
    c788:	mov	r1, r7
    c78c:	ldr	r0, [r9, #124]	; 0x7c
    c790:	bl	4c3c <readstat_realloc@plt>
    c794:	cmp	r0, #0
    c798:	str	r0, [r9, #124]	; 0x7c
    c79c:	beq	c85c <sas7bdat_parse_subheader+0x730>
    c7a0:	str	r5, [r9, #72]	; 0x48
    c7a4:	ldr	r0, [r9, #88]	; 0x58
    c7a8:	subs	r1, r0, r6
    c7ac:	rscs	r1, r8, #0
    c7b0:	bcs	c7c0 <sas7bdat_parse_subheader+0x694>
    c7b4:	subs	r0, r6, r0
    c7b8:	sbc	r1, r8, #0
    c7bc:	b	c7cc <sas7bdat_parse_subheader+0x6a0>
    c7c0:	mov	r0, #0
    c7c4:	mov	r1, #0
    c7c8:	str	r6, [r9, #88]	; 0x58
    c7cc:	ldr	r2, [r9, #84]	; 0x54
    c7d0:	mov	r7, #0
    c7d4:	cmp	r2, #0
    c7d8:	beq	c7ec <sas7bdat_parse_subheader+0x6c0>
    c7dc:	subs	r2, r0, r2
    c7e0:	sbcs	r1, r1, #0
    c7e4:	strcc	r0, [r9, #84]	; 0x54
    c7e8:	b	c160 <sas7bdat_parse_subheader+0x34>
    c7ec:	str	r0, [r9, #84]	; 0x54
    c7f0:	b	c160 <sas7bdat_parse_subheader+0x34>
    c7f4:	ldr	r1, [r9, #60]	; 0x3c
    c7f8:	add	r0, r5, #4
    c7fc:	bl	4d44 <sas_read4@plt>
    c800:	str	r0, [r9, #80]	; 0x50
    c804:	mov	r5, r0
    c808:	mov	r7, #0
    c80c:	ldr	r4, [r9, #188]	; 0xbc
    c810:	cmp	r0, r4
    c814:	bls	c160 <sas7bdat_parse_subheader+0x34>
    c818:	str	r5, [r9, #188]	; 0xbc
    c81c:	add	r1, r5, r5, lsl #2
    c820:	ldr	r0, [r9, #192]	; 0xc0
    c824:	lsl	r1, r1, #3
    c828:	bl	4c3c <readstat_realloc@plt>
    c82c:	cmp	r0, #0
    c830:	str	r0, [r9, #192]	; 0xc0
    c834:	beq	c85c <sas7bdat_parse_subheader+0x730>
    c838:	add	r1, r4, r4, lsl #2
    c83c:	mov	r7, #0
    c840:	add	r0, r0, r1, lsl #3
    c844:	sub	r1, r5, r4
    c848:	add	r1, r1, r1, lsl #2
    c84c:	lsl	r2, r1, #3
    c850:	mov	r1, #0
    c854:	bl	4c00 <memset@plt>
    c858:	b	c160 <sas7bdat_parse_subheader+0x34>
    c85c:	mov	r7, #3
    c860:	b	c160 <sas7bdat_parse_subheader+0x34>
    c864:	.word	0x0001d075

0000c868 <sas7bdat_parse_single_row>:
    c868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c86c:	add	fp, sp, #28
    c870:	sub	sp, sp, #4
    c874:	vpush	{d8-d9}
    c878:	sub	sp, sp, #40	; 0x28
    c87c:	str	r0, [sp, #20]
    c880:	mov	r4, r1
    c884:	ldr	r0, [r1, #76]	; 0x4c
    c888:	ldr	r1, [r1, #84]	; 0x54
    c88c:	mov	r6, #0
    c890:	cmp	r0, r1
    c894:	beq	cb0c <sas7bdat_parse_single_row+0x2a4>
    c898:	ldr	r0, [r4, #88]	; 0x58
    c89c:	cmp	r0, #0
    c8a0:	beq	c8b0 <sas7bdat_parse_single_row+0x48>
    c8a4:	sub	r0, r0, #1
    c8a8:	str	r0, [r4, #88]	; 0x58
    c8ac:	b	cb0c <sas7bdat_parse_single_row+0x2a4>
    c8b0:	ldr	r0, [r4, #16]
    c8b4:	cmp	r0, #0
    c8b8:	beq	caf4 <sas7bdat_parse_single_row+0x28c>
    c8bc:	ldr	r0, [r4, #176]	; 0xb0
    c8c0:	ldr	r3, [r4, #180]	; 0xb4
    c8c4:	mov	r1, #1
    c8c8:	orr	r1, r1, r0, lsl #2
    c8cc:	mov	r0, r3
    c8d0:	str	r1, [r4, #184]	; 0xb8
    c8d4:	bl	4c3c <readstat_realloc@plt>
    c8d8:	cmp	r0, #0
    c8dc:	str	r0, [r4, #180]	; 0xb4
    c8e0:	beq	cb08 <sas7bdat_parse_single_row+0x2a0>
    c8e4:	ldr	r0, [r4, #80]	; 0x50
    c8e8:	cmp	r0, #0
    c8ec:	beq	caf4 <sas7bdat_parse_single_row+0x28c>
    c8f0:	ldr	r1, [sp, #20]
    c8f4:	vmov.i32	q4, #0	; 0x00000000
    c8f8:	mov	r8, #0
    c8fc:	sub	r1, r1, #1
    c900:	str	r1, [sp, #12]
    c904:	add	r1, sp, #24
    c908:	add	r1, r1, #8
    c90c:	str	r1, [sp, #16]
    c910:	ldr	r1, [r4, #196]	; 0xc4
    c914:	ldr	r7, [r1, r8, lsl #2]
    c918:	ldr	r1, [r7, #2144]	; 0x860
    c91c:	cmp	r1, #0
    c920:	bne	cae8 <sas7bdat_parse_single_row+0x280>
    c924:	ldr	r0, [r4, #192]	; 0xc0
    c928:	add	r1, r8, r8, lsl #2
    c92c:	mov	r6, #5
    c930:	add	r9, r0, r1, lsl #3
    c934:	ldr	r0, [r4, #68]	; 0x44
    c938:	ldrd	r2, [r9, #24]
    c93c:	subs	r1, r0, r2
    c940:	rscs	r1, r3, #0
    c944:	bcc	cb0c <sas7bdat_parse_single_row+0x2a4>
    c948:	mov	sl, r9
    c94c:	ldr	r1, [sl, #32]!
    c950:	adds	r1, r2, r1
    c954:	adc	r3, r3, #0
    c958:	subs	r0, r0, r1
    c95c:	rscs	r0, r3, #0
    c960:	bcc	cb0c <sas7bdat_parse_single_row+0x2a4>
    c964:	add	r1, sp, #24
    c968:	mov	r0, #8
    c96c:	vst1.64	{d8-d9}, [r1], r0
    c970:	ldr	r0, [r9, #36]	; 0x24
    c974:	str	r0, [r1]
    c978:	ldr	r1, [sp, #20]
    c97c:	cmp	r0, #5
    c980:	add	r5, r1, r2
    c984:	beq	c9c0 <sas7bdat_parse_single_row+0x158>
    c988:	cmp	r0, #0
    c98c:	bne	caac <sas7bdat_parse_single_row+0x244>
    c990:	ldr	r2, [r4, #208]	; 0xd0
    c994:	ldr	r3, [sl]
    c998:	ldr	r0, [r4, #180]	; 0xb4
    c99c:	ldr	r1, [r4, #184]	; 0xb8
    c9a0:	str	r2, [sp]
    c9a4:	mov	r2, r5
    c9a8:	bl	4b94 <readstat_convert@plt>
    c9ac:	cmp	r0, #0
    c9b0:	bne	cb28 <sas7bdat_parse_single_row+0x2c0>
    c9b4:	ldr	r0, [r4, #180]	; 0xb4
    c9b8:	str	r0, [sp, #24]
    c9bc:	b	caac <sas7bdat_parse_single_row+0x244>
    c9c0:	ldr	r0, [r4, #40]	; 0x28
    c9c4:	ldr	r6, [sl]
    c9c8:	cmp	r0, #0
    c9cc:	beq	ca08 <sas7bdat_parse_single_row+0x1a0>
    c9d0:	cmp	r6, #0
    c9d4:	beq	ca38 <sas7bdat_parse_single_row+0x1d0>
    c9d8:	ldr	r0, [sp, #12]
    c9dc:	mov	r1, #0
    c9e0:	add	r3, r0, r2
    c9e4:	mov	r0, r6
    c9e8:	mov	r2, #0
    c9ec:	ldrb	r5, [r3, r0]
    c9f0:	lsl	r2, r2, #8
    c9f4:	subs	r0, r0, #1
    c9f8:	orr	r2, r2, r1, lsr #24
    c9fc:	orr	r1, r5, r1, lsl #8
    ca00:	bne	c9ec <sas7bdat_parse_single_row+0x184>
    ca04:	b	ca40 <sas7bdat_parse_single_row+0x1d8>
    ca08:	cmp	r6, #0
    ca0c:	beq	ca38 <sas7bdat_parse_single_row+0x1d0>
    ca10:	mov	r1, #0
    ca14:	mov	r3, r6
    ca18:	mov	r2, #0
    ca1c:	lsl	r0, r2, #8
    ca20:	subs	r3, r3, #1
    ca24:	orr	r2, r0, r1, lsr #24
    ca28:	ldrb	r0, [r5], #1
    ca2c:	orr	r1, r0, r1, lsl #8
    ca30:	bne	ca1c <sas7bdat_parse_single_row+0x1b4>
    ca34:	b	ca40 <sas7bdat_parse_single_row+0x1d8>
    ca38:	mov	r1, #0
    ca3c:	mov	r2, #0
    ca40:	mov	r0, #64	; 0x40
    ca44:	sub	r0, r0, r6, lsl #3
    ca48:	rsb	r3, r0, #32
    ca4c:	lsr	r3, r1, r3
    ca50:	orr	r5, r3, r2, lsl r0
    ca54:	mov	r2, #32
    ca58:	sub	r2, r2, r6, lsl #3
    ca5c:	lsl	r6, r1, r0
    ca60:	cmp	r2, #0
    ca64:	lslge	r5, r1, r2
    ca68:	movwge	r6, #0
    ca6c:	vmov	d0, r6, r5
    ca70:	bl	4c84 <__isnan@plt>
    ca74:	cmp	r0, #0
    ca78:	beq	caa4 <sas7bdat_parse_single_row+0x23c>
    ca7c:	movw	r0, #0
    ca80:	movt	r0, #32760	; 0x7ff8
    ca84:	str	r0, [sp, #28]
    ca88:	mov	r0, #0
    ca8c:	str	r0, [sp, #24]
    ca90:	mvn	r0, r5, lsr #8
    ca94:	uxtb	r1, r0
    ca98:	add	r0, sp, #24
    ca9c:	bl	4de0 <sas_assign_tag@plt>
    caa0:	b	caac <sas7bdat_parse_single_row+0x244>
    caa4:	str	r6, [sp, #24]
    caa8:	str	r5, [sp, #28]
    caac:	ldr	r0, [sp, #16]
    cab0:	ldr	r6, [r0]
    cab4:	ldr	r1, [r0, #4]
    cab8:	ldr	r5, [r4, #52]	; 0x34
    cabc:	ldr	ip, [r4, #16]
    cac0:	ldr	r0, [r4, #76]	; 0x4c
    cac4:	ldr	r2, [sp, #24]
    cac8:	ldr	r3, [sp, #28]
    cacc:	str	r6, [sp]
    cad0:	stmib	sp, {r1, r5}
    cad4:	mov	r1, r7
    cad8:	blx	ip
    cadc:	cmp	r0, #0
    cae0:	bne	cb20 <sas7bdat_parse_single_row+0x2b8>
    cae4:	ldr	r0, [r4, #80]	; 0x50
    cae8:	add	r8, r8, #1
    caec:	cmp	r8, r0
    caf0:	bcc	c910 <sas7bdat_parse_single_row+0xa8>
    caf4:	ldr	r0, [r4, #76]	; 0x4c
    caf8:	mov	r6, #0
    cafc:	add	r0, r0, #1
    cb00:	str	r0, [r4, #76]	; 0x4c
    cb04:	b	cb0c <sas7bdat_parse_single_row+0x2a4>
    cb08:	mov	r6, #3
    cb0c:	mov	r0, r6
    cb10:	sub	sp, fp, #48	; 0x30
    cb14:	vpop	{d8-d9}
    cb18:	add	sp, sp, #4
    cb1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cb20:	mov	r6, #4
    cb24:	b	cb0c <sas7bdat_parse_single_row+0x2a4>
    cb28:	mov	r6, r0
    cb2c:	ldr	r0, [r4, #24]
    cb30:	cmp	r0, #0
    cb34:	beq	cb0c <sas7bdat_parse_single_row+0x2a4>
    cb38:	ldr	r0, [r9, #20]
    cb3c:	ldr	r2, [sl]
    cb40:	ldr	r1, [r4, #76]	; 0x4c
    cb44:	add	r0, r0, #1
    cb48:	add	r3, r1, #1
    cb4c:	mov	r1, #2048	; 0x800
    cb50:	stm	sp, {r0, r2, r5}
    cb54:	movw	r0, #481	; 0x1e1
    cb58:	ldr	r2, [pc, #32]	; cb80 <sas7bdat_parse_single_row+0x318>
    cb5c:	add	r5, r4, r0
    cb60:	mov	r0, r5
    cb64:	add	r2, pc, r2
    cb68:	bl	4bdc <snprintf@plt>
    cb6c:	ldr	r2, [r4, #24]
    cb70:	ldr	r1, [r4, #52]	; 0x34
    cb74:	mov	r0, r5
    cb78:	blx	r2
    cb7c:	b	cb0c <sas7bdat_parse_single_row+0x2a4>
    cb80:	.word	0x0001c9c6

0000cb84 <readstat_begin_writing_sas7bdat>:
    cb84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cb88:	add	fp, sp, #28
    cb8c:	ldr	r3, [r0, #8]
    cb90:	mov	r9, r2
    cb94:	cmp	r3, #0
    cb98:	moveq	r3, #9
    cb9c:	streq	r3, [r0, #8]
    cba0:	ldr	ip, [pc, #192]	; cc68 <readstat_begin_writing_sas7bdat+0xe4>
    cba4:	ldr	sl, [pc, #192]	; cc6c <readstat_begin_writing_sas7bdat+0xe8>
    cba8:	ldr	r4, [pc, #192]	; cc70 <readstat_begin_writing_sas7bdat+0xec>
    cbac:	ldr	r5, [pc, #192]	; cc74 <readstat_begin_writing_sas7bdat+0xf0>
    cbb0:	ldr	r6, [pc, #192]	; cc78 <readstat_begin_writing_sas7bdat+0xf4>
    cbb4:	ldr	r3, [pc, #192]	; cc7c <readstat_begin_writing_sas7bdat+0xf8>
    cbb8:	ldr	r2, [pc, #192]	; cc80 <readstat_begin_writing_sas7bdat+0xfc>
    cbbc:	ldr	lr, [pc, #192]	; cc84 <readstat_begin_writing_sas7bdat+0x100>
    cbc0:	ldr	r7, [pc, #192]	; cc88 <readstat_begin_writing_sas7bdat+0x104>
    cbc4:	ldr	r8, [pc, #192]	; cc8c <readstat_begin_writing_sas7bdat+0x108>
    cbc8:	add	r4, pc, r4
    cbcc:	add	ip, pc, ip
    cbd0:	add	r5, pc, r5
    cbd4:	add	r6, pc, r6
    cbd8:	add	r2, pc, r2
    cbdc:	add	lr, pc, lr
    cbe0:	add	r7, pc, r7
    cbe4:	add	r8, pc, r8
    cbe8:	add	r3, pc, r3
    cbec:	add	sl, pc, sl
    cbf0:	str	r4, [r0, #264]	; 0x108
    cbf4:	add	r4, r0, #276	; 0x114
    cbf8:	str	r5, [r0, #268]	; 0x10c
    cbfc:	str	r6, [r0, #272]	; 0x110
    cc00:	stm	r4, {r2, r8, lr}
    cc04:	str	r7, [r0, #288]	; 0x120
    cc08:	str	ip, [r0, #292]	; 0x124
    cc0c:	ldr	r2, [pc, #124]	; cc90 <readstat_begin_writing_sas7bdat+0x10c>
    cc10:	ldr	r2, [pc, r2]
    cc14:	str	r3, [r0, #228]	; 0xe4
    cc18:	str	r2, [r0, #232]	; 0xe8
    cc1c:	ldr	r2, [pc, #112]	; cc94 <readstat_begin_writing_sas7bdat+0x110>
    cc20:	add	r2, pc, r2
    cc24:	str	r2, [r0, #236]	; 0xec
    cc28:	ldr	r2, [pc, #104]	; cc98 <readstat_begin_writing_sas7bdat+0x114>
    cc2c:	add	r2, pc, r2
    cc30:	str	r2, [r0, #240]	; 0xf0
    cc34:	ldr	r2, [pc, #96]	; cc9c <readstat_begin_writing_sas7bdat+0x118>
    cc38:	add	r2, pc, r2
    cc3c:	str	r2, [r0, #244]	; 0xf4
    cc40:	ldr	r2, [pc, #88]	; cca0 <readstat_begin_writing_sas7bdat+0x11c>
    cc44:	add	r2, pc, r2
    cc48:	str	r2, [r0, #248]	; 0xf8
    cc4c:	str	sl, [r0, #252]	; 0xfc
    cc50:	ldr	r2, [pc, #76]	; cca4 <readstat_begin_writing_sas7bdat+0x120>
    cc54:	add	r2, pc, r2
    cc58:	str	r2, [r0, #256]	; 0x100
    cc5c:	mov	r2, r9
    cc60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cc64:	b	48f4 <readstat_begin_writing_file@plt>
    cc68:	.word	0x000000d4
    cc6c:	.word	0x00000114
    cc70:	.word	0x000001bc
    cc74:	.word	0x000001e0
    cc78:	.word	0x000001f8
    cc7c:	.word	0x00000224
    cc80:	.word	0x00000244
    cc84:	.word	0x00000ba4
    cc88:	.word	0x00000bbc
    cc8c:	.word	0x00000bbc
    cc90:	.word	0x0003c6a0
    cc94:	.word	0x00000094
    cc98:	.word	0x0000009c
    cc9c:	.word	0x000000a4
    cca0:	.word	0x000000ac
    cca4:	.word	0x000000b8

0000cca8 <sas7bdat_metadata_ok>:
    cca8:	ldr	r1, [r0, #16]
    ccac:	mov	r0, #6
    ccb0:	cmp	r1, #2
    ccb4:	movwcc	r0, #0
    ccb8:	bx	lr

0000ccbc <sas7bdat_write_int8>:
    ccbc:	vmov	s0, r2
    ccc0:	vcvt.f64.s32	d16, s0
    ccc4:	vst1.8	{d16}, [r0]
    ccc8:	mov	r0, #0
    cccc:	bx	lr

0000ccd0 <sas7bdat_write_int16>:
    ccd0:	vmov	s0, r2
    ccd4:	vcvt.f64.s32	d16, s0
    ccd8:	vst1.8	{d16}, [r0]
    ccdc:	mov	r0, #0
    cce0:	bx	lr

0000cce4 <sas7bdat_write_int32>:
    cce4:	vmov	s0, r2
    cce8:	vcvt.f64.s32	d16, s0
    ccec:	vst1.8	{d16}, [r0]
    ccf0:	mov	r0, #0
    ccf4:	bx	lr

0000ccf8 <sas7bdat_write_float>:
    ccf8:	vcvt.f64.f32	d16, s0
    ccfc:	vst1.8	{d16}, [r0]
    cd00:	mov	r0, #0
    cd04:	bx	lr

0000cd08 <sas7bdat_write_double>:
    cd08:	vst1.8	{d0}, [r0]
    cd0c:	mov	r0, #0
    cd10:	bx	lr

0000cd14 <sas7bdat_write_string>:
    cd14:	push	{r4, r5, r6, r7, fp, lr}
    cd18:	add	fp, sp, #16
    cd1c:	mov	r4, r0
    cd20:	mov	r0, r1
    cd24:	mov	r5, r2
    cd28:	bl	4c24 <readstat_variable_get_storage_width@plt>
    cd2c:	cmp	r5, #0
    cd30:	mov	r6, r0
    cd34:	ldrbne	r0, [r5]
    cd38:	cmpne	r0, #0
    cd3c:	bne	cd5c <sas7bdat_write_string+0x48>
    cd40:	mov	r0, r4
    cd44:	mov	r1, #0
    cd48:	mov	r2, r6
    cd4c:	mov	r7, #0
    cd50:	bl	4c00 <memset@plt>
    cd54:	mov	r0, r7
    cd58:	pop	{r4, r5, r6, r7, fp, pc}
    cd5c:	mov	r0, r5
    cd60:	bl	4b58 <strlen@plt>
    cd64:	mov	r7, #22
    cd68:	cmp	r0, r6
    cd6c:	bhi	cd84 <sas7bdat_write_string+0x70>
    cd70:	mov	r0, r4
    cd74:	mov	r1, r5
    cd78:	mov	r2, r6
    cd7c:	bl	4c18 <strncpy@plt>
    cd80:	mov	r7, #0
    cd84:	mov	r0, r7
    cd88:	pop	{r4, r5, r6, r7, fp, pc}

0000cd8c <sas7bdat_write_missing_string>:
    cd8c:	push	{r4, sl, fp, lr}
    cd90:	add	fp, sp, #8
    cd94:	mov	r4, r0
    cd98:	mov	r0, r1
    cd9c:	bl	4c24 <readstat_variable_get_storage_width@plt>
    cda0:	mov	r2, r0
    cda4:	mov	r0, r4
    cda8:	mov	r1, #0
    cdac:	bl	4c00 <memset@plt>
    cdb0:	mov	r0, #0
    cdb4:	pop	{r4, sl, fp, pc}

0000cdb8 <sas7bdat_write_missing_numeric>:
    cdb8:	movw	r1, #53504	; 0xd100
    cdbc:	movt	r1, #32760	; 0x7ff8
    cdc0:	str	r1, [r0, #4]
    cdc4:	mov	r1, #0
    cdc8:	str	r1, [r0]
    cdcc:	mov	r0, #0
    cdd0:	bx	lr

0000cdd4 <sas7bdat_write_missing_tagged>:
    cdd4:	push	{r4, r5, fp, lr}
    cdd8:	add	fp, sp, #8
    cddc:	mov	r4, r0
    cde0:	mov	r0, r2
    cde4:	mov	r5, r2
    cde8:	bl	4ab0 <sas_validate_tag@plt>
    cdec:	cmp	r0, #0
    cdf0:	popne	{r4, r5, fp, pc}
    cdf4:	movw	r2, #0
    cdf8:	mov	r1, #0
    cdfc:	str	r1, [r4]
    ce00:	eor	r1, r5, #255	; 0xff
    ce04:	movt	r2, #32760	; 0x7ff8
    ce08:	orr	r1, r2, r1, lsl #8
    ce0c:	str	r1, [r4, #4]
    ce10:	pop	{r4, r5, fp, pc}

0000ce14 <sas7bdat_variable_width>:
    ce14:	cmp	r0, #0
    ce18:	movne	r1, #8
    ce1c:	mov	r0, r1
    ce20:	bx	lr

0000ce24 <sas7bdat_begin_data>:
    ce24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ce28:	add	fp, sp, #28
    ce2c:	sub	sp, sp, #68	; 0x44
    ce30:	mov	r7, r0
    ce34:	mov	r0, #1
    ce38:	mov	r1, #8
    ce3c:	mov	r8, #8
    ce40:	bl	472c <calloc@plt>
    ce44:	ldr	r1, [r7, #12]
    ce48:	str	r0, [sp, #24]
    ce4c:	mov	r0, r7
    ce50:	bl	4ca8 <sas_header_info_init@plt>
    ce54:	ldr	r2, [r7, #28]
    ce58:	str	r0, [fp, #-40]	; 0xffffffd8
    ce5c:	str	r7, [fp, #-44]	; 0xffffffd4
    ce60:	cmp	r2, #1
    ce64:	blt	ceb4 <sas7bdat_begin_data+0x90>
    ce68:	mov	r5, #0
    ce6c:	mov	r4, #0
    ce70:	mov	r0, r7
    ce74:	mov	r1, r5
    ce78:	bl	4ccc <readstat_get_variable@plt>
    ce7c:	mov	r6, r0
    ce80:	bl	4b34 <readstat_variable_get_type@plt>
    ce84:	mov	r7, r0
    ce88:	mov	r0, r6
    ce8c:	bl	4c24 <readstat_variable_get_storage_width@plt>
    ce90:	cmp	r7, #0
    ce94:	ldr	r7, [fp, #-44]	; 0xffffffd4
    ce98:	add	r5, r5, #1
    ce9c:	movne	r0, r8
    cea0:	add	r4, r0, r4
    cea4:	ldr	r2, [r7, #28]
    cea8:	cmp	r5, r2
    ceac:	blt	ce70 <sas7bdat_begin_data+0x4c>
    ceb0:	b	ceb8 <sas7bdat_begin_data+0x94>
    ceb4:	mov	r4, #0
    ceb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    cebc:	mov	r1, #28
    cec0:	add	lr, r2, r2, lsl #1
    cec4:	mov	ip, #20
    cec8:	add	r5, r1, r2, lsl #4
    cecc:	ldr	r6, [r0, #32]!
    ced0:	ldr	r8, [r0, #-28]	; 0xffffffe4
    ced4:	ldmib	r0, {r3, sl}
    ced8:	str	r2, [sp, #32]
    cedc:	cmp	r8, #0
    cee0:	addeq	r5, ip, lr, lsl #2
    cee4:	movweq	r1, #20
    cee8:	str	r5, [sp, #44]	; 0x2c
    ceec:	ldr	r5, [r7, #16]
    cef0:	add	r1, r1, r2, lsl #3
    cef4:	mov	r7, r0
    cef8:	add	r0, r0, #16
    cefc:	str	r1, [sp, #40]	; 0x28
    cf00:	lsl	r1, r2, #3
    cf04:	str	r0, [sp, #48]	; 0x30
    cf08:	str	r7, [sp, #36]	; 0x24
    cf0c:	str	r1, [sp, #20]
    cf10:	b	cf28 <sas7bdat_begin_data+0x104>
    cf14:	lsl	r0, r3, #1
    cf18:	lsl	r6, r2, #1
    cf1c:	orr	r3, r0, r2, lsr #31
    cf20:	str	r6, [r7]
    cf24:	str	r3, [r7, #4]
    cf28:	mov	r2, r6
    cf2c:	subs	r6, r6, sl
    cf30:	cmp	r5, #0
    cf34:	bne	cf40 <sas7bdat_begin_data+0x11c>
    cf38:	cmp	r4, r6
    cf3c:	bhi	cf14 <sas7bdat_begin_data+0xf0>
    cf40:	cmp	r5, #1
    cf44:	bne	cf70 <sas7bdat_begin_data+0x14c>
    cf48:	ldr	r0, [sp, #48]	; 0x30
    cf4c:	ldr	r8, [r0]
    cf50:	ldr	r1, [r0, #4]
    cf54:	adds	r7, r8, r4
    cf58:	adc	r0, r1, #0
    cf5c:	subs	r7, r6, r7
    cf60:	ldr	r7, [sp, #36]	; 0x24
    cf64:	rscs	r0, r0, #0
    cf68:	blt	cf14 <sas7bdat_begin_data+0xf0>
    cf6c:	b	cf7c <sas7bdat_begin_data+0x158>
    cf70:	ldr	r0, [sp, #48]	; 0x30
    cf74:	ldr	r8, [r0]
    cf78:	ldr	r1, [r0, #4]
    cf7c:	ldr	r0, [sp, #44]	; 0x2c
    cf80:	mov	r9, #0
    cf84:	adds	ip, r8, r0
    cf88:	ldr	r0, [sp, #40]	; 0x28
    cf8c:	adc	lr, r1, #0
    cf90:	adds	r0, r8, r0
    cf94:	adc	r1, r1, #0
    cf98:	subs	r0, r6, r0
    cf9c:	sbcs	r0, r9, r1
    cfa0:	blt	cf14 <sas7bdat_begin_data+0xf0>
    cfa4:	subs	r0, r6, ip
    cfa8:	sbcs	r0, r9, lr
    cfac:	blt	cf14 <sas7bdat_begin_data+0xf0>
    cfb0:	ldr	r0, [sp, #24]
    cfb4:	ldr	r7, [fp, #-40]	; 0xffffffd8
    cfb8:	mov	r1, #16
    cfbc:	mov	r5, #1
    cfc0:	str	r7, [r0]
    cfc4:	mov	r0, #1
    cfc8:	bl	472c <calloc@plt>
    cfcc:	mov	sl, r0
    cfd0:	mov	r0, #4
    cfd4:	mov	r4, #0
    cfd8:	str	r5, [sl]
    cfdc:	str	r4, [sl, #4]
    cfe0:	bl	4a74 <malloc@plt>
    cfe4:	str	r0, [sl, #8]
    cfe8:	mov	r1, #36	; 0x24
    cfec:	mov	r5, r0
    cff0:	sub	r0, r6, r8
    cff4:	ldr	r7, [r7, #4]
    cff8:	cmp	r7, #0
    cffc:	movweq	r1, #32
    d000:	sub	r9, r0, r1
    d004:	mov	r0, #1
    d008:	mov	r1, #24
    d00c:	bl	472c <calloc@plt>
    d010:	mov	r6, r0
    d014:	mov	r0, r9
    d018:	bl	4a74 <malloc@plt>
    d01c:	mov	r8, r0
    d020:	mov	r0, #1
    d024:	mov	r1, #24
    d028:	str	r6, [r5]
    d02c:	strd	r8, [r6]
    d030:	bl	472c <calloc@plt>
    d034:	mov	r5, r0
    d038:	ldr	r0, [sp, #32]
    d03c:	add	r0, r0, #4
    d040:	asr	r1, r0, #31
    d044:	strd	r0, [r5]
    d048:	mov	r1, #4
    d04c:	bl	472c <calloc@plt>
    d050:	ldr	r1, [sp, #20]
    d054:	str	r0, [sp, #40]	; 0x28
    d058:	str	r0, [r5, #16]
    d05c:	cmp	r7, #0
    d060:	mov	r0, #28
    d064:	str	r5, [sp, #28]
    d068:	mov	r5, #8
    d06c:	mov	r8, #8
    d070:	movweq	r0, #20
    d074:	movweq	r5, #4
    d078:	add	r6, r0, r1
    d07c:	mov	r1, r5
    d080:	mov	r0, r6
    d084:	bl	4d08 <sas_subheader_remainder@plt>
    d088:	mov	r7, r0
    d08c:	mov	r0, #1
    d090:	mov	r1, #20
    d094:	bl	472c <calloc@plt>
    d098:	mov	r9, r0
    d09c:	mvn	r0, #0
    d0a0:	mov	r1, r6
    d0a4:	str	r0, [r9]
    d0a8:	mov	r0, #1
    d0ac:	str	r6, [r9, #8]
    d0b0:	bl	472c <calloc@plt>
    d0b4:	add	r1, r0, r5
    d0b8:	str	r0, [r9, #4]
    d0bc:	str	r9, [sp, #8]
    d0c0:	strh	r7, [r1]
    d0c4:	ldr	r7, [fp, #-44]	; 0xffffffd4
    d0c8:	ldr	r0, [r7, #28]
    d0cc:	cmp	r0, #1
    d0d0:	blt	d128 <sas7bdat_begin_data+0x304>
    d0d4:	add	r6, r1, #8
    d0d8:	sub	r5, fp, #36	; 0x24
    d0dc:	mov	r0, r7
    d0e0:	mov	r1, r4
    d0e4:	bl	4ccc <readstat_get_variable@plt>
    d0e8:	bl	4cb4 <readstat_variable_get_name@plt>
    d0ec:	mov	r2, r0
    d0f0:	mov	r0, r5
    d0f4:	mov	r1, sl
    d0f8:	bl	dee0 <sas7bdat_make_text_ref>
    d0fc:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    d100:	add	r4, r4, #1
    d104:	strh	r0, [r6]
    d108:	ldrh	r0, [fp, #-34]	; 0xffffffde
    d10c:	strh	r0, [r6, #2]
    d110:	ldrh	r0, [fp, #-32]	; 0xffffffe0
    d114:	strh	r0, [r6, #4]
    d118:	add	r6, r6, #8
    d11c:	ldr	r0, [r7, #28]
    d120:	cmp	r4, r0
    d124:	blt	d0dc <sas7bdat_begin_data+0x2b8>
    d128:	mov	r1, #28
    d12c:	str	sl, [sp, #44]	; 0x2c
    d130:	add	r5, r1, r0, lsl #4
    d134:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d138:	add	r0, r0, r0, lsl #1
    d13c:	ldr	r1, [r1, #4]
    d140:	cmp	r1, #0
    d144:	mov	r1, #20
    d148:	addeq	r5, r1, r0, lsl #2
    d14c:	movweq	r8, #4
    d150:	mov	r0, r5
    d154:	mov	r1, r8
    d158:	bl	4d08 <sas_subheader_remainder@plt>
    d15c:	mov	r6, r0
    d160:	mov	r0, #1
    d164:	mov	r1, #20
    d168:	bl	472c <calloc@plt>
    d16c:	mov	r4, r0
    d170:	mvn	r0, #3
    d174:	mov	r1, r5
    d178:	str	r0, [r4]
    d17c:	mov	r0, #1
    d180:	str	r5, [r4, #8]
    d184:	bl	472c <calloc@plt>
    d188:	str	r0, [r4, #4]
    d18c:	add	r0, r0, r8
    d190:	str	r4, [sp, #4]
    d194:	strh	r6, [r0]
    d198:	ldr	r8, [r7, #28]
    d19c:	cmp	r8, #1
    d1a0:	blt	d25c <sas7bdat_begin_data+0x438>
    d1a4:	add	r6, r0, #8
    d1a8:	mov	r9, #0
    d1ac:	mov	sl, #0
    d1b0:	mov	r5, #0
    d1b4:	mov	r0, r7
    d1b8:	mov	r1, r5
    d1bc:	bl	4ccc <readstat_get_variable@plt>
    d1c0:	mov	r7, r0
    d1c4:	bl	4cb4 <readstat_variable_get_name@plt>
    d1c8:	mov	r4, r0
    d1cc:	mov	r0, r7
    d1d0:	bl	4b34 <readstat_variable_get_type@plt>
    d1d4:	mov	r8, r0
    d1d8:	mov	r0, r4
    d1dc:	bl	4b58 <strlen@plt>
    d1e0:	cmp	r0, #9
    d1e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d1e8:	mov	r4, #2048	; 0x800
    d1ec:	movwcc	r4, #4
    d1f0:	ldr	r0, [r0, #4]
    d1f4:	str	r9, [r6]
    d1f8:	cmp	r0, #0
    d1fc:	moveq	r0, #4
    d200:	strne	sl, [r6, #4]
    d204:	movne	r0, #8
    d208:	cmp	r8, #0
    d20c:	add	r6, r6, r0
    d210:	beq	d224 <sas7bdat_begin_data+0x400>
    d214:	mov	r0, #1
    d218:	strb	r0, [r6, #6]
    d21c:	mov	r0, #8
    d220:	b	d234 <sas7bdat_begin_data+0x410>
    d224:	mov	r0, #2
    d228:	strb	r0, [r6, #6]
    d22c:	mov	r0, r7
    d230:	bl	4c24 <readstat_variable_get_storage_width@plt>
    d234:	ldr	r7, [fp, #-44]	; 0xffffffd4
    d238:	strh	r4, [r6, #4]
    d23c:	str	r0, [r6]
    d240:	adds	r9, r9, r0
    d244:	add	r5, r5, #1
    d248:	add	r6, r6, #8
    d24c:	adc	sl, sl, #0
    d250:	ldr	r8, [r7, #28]
    d254:	cmp	r5, r8
    d258:	blt	d1b4 <sas7bdat_begin_data+0x390>
    d25c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d260:	mov	r1, #20
    d264:	ldr	r5, [r0, #4]
    d268:	mov	r0, #1
    d26c:	bl	472c <calloc@plt>
    d270:	mov	r4, r0
    d274:	movw	r0, #63479	; 0xf7f7
    d278:	mov	r1, #808	; 0x328
    d27c:	cmp	r5, #0
    d280:	movt	r0, #63479	; 0xf7f7
    d284:	movweq	r1, #480	; 0x1e0
    d288:	str	r0, [r4]
    d28c:	mov	r0, #1
    d290:	str	r1, [r4, #8]
    d294:	bl	472c <calloc@plt>
    d298:	mov	r7, r0
    d29c:	cmp	r8, #1
    d2a0:	str	r0, [r4, #4]
    d2a4:	str	r4, [sp, #32]
    d2a8:	str	r5, [sp, #48]	; 0x30
    d2ac:	blt	d2fc <sas7bdat_begin_data+0x4d8>
    d2b0:	ldr	r9, [fp, #-44]	; 0xffffffd4
    d2b4:	mov	r5, #0
    d2b8:	mov	sl, #0
    d2bc:	mov	r0, r9
    d2c0:	mov	r1, r5
    d2c4:	bl	4ccc <readstat_get_variable@plt>
    d2c8:	mov	r4, r0
    d2cc:	bl	4b34 <readstat_variable_get_type@plt>
    d2d0:	mov	r6, r0
    d2d4:	mov	r0, r4
    d2d8:	bl	4c24 <readstat_variable_get_storage_width@plt>
    d2dc:	ldr	r8, [r9, #28]
    d2e0:	cmp	r6, #0
    d2e4:	add	r5, r5, #1
    d2e8:	movne	r0, #8
    d2ec:	add	sl, r0, sl
    d2f0:	cmp	r5, r8
    d2f4:	blt	d2bc <sas7bdat_begin_data+0x498>
    d2f8:	b	d300 <sas7bdat_begin_data+0x4dc>
    d2fc:	mov	sl, #0
    d300:	ldr	r0, [sp, #48]	; 0x30
    d304:	cmp	r0, #0
    d308:	beq	d35c <sas7bdat_begin_data+0x538>
    d30c:	ldr	r0, [sp, #36]	; 0x24
    d310:	ldr	r2, [fp, #-44]	; 0xffffffd4
    d314:	mov	r3, #0
    d318:	ldrd	r0, [r0]
    d31c:	ldr	r2, [r2, #80]	; 0x50
    d320:	str	r3, [r7, #44]	; 0x2c
    d324:	asr	r3, r8, #31
    d328:	str	sl, [r7, #40]	; 0x28
    d32c:	str	r8, [r7, #72]	; 0x48
    d330:	str	r3, [r7, #76]	; 0x4c
    d334:	mvn	r3, #0
    d338:	str	r3, [r7, #140]	; 0x8c
    d33c:	str	r3, [r7, #136]	; 0x88
    d340:	str	r3, [r7, #132]	; 0x84
    d344:	str	r3, [r7, #128]	; 0x80
    d348:	str	r2, [r7, #48]	; 0x30
    d34c:	str	r0, [r7, #104]	; 0x68
    d350:	str	r1, [r7, #108]	; 0x6c
    d354:	asr	r0, r2, #31
    d358:	b	d384 <sas7bdat_begin_data+0x560>
    d35c:	ldr	r0, [sp, #36]	; 0x24
    d360:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d364:	mvn	r2, #0
    d368:	ldr	r0, [r0]
    d36c:	ldr	r1, [r1, #80]	; 0x50
    d370:	str	r2, [r7, #68]	; 0x44
    d374:	str	r2, [r7, #64]	; 0x40
    d378:	str	sl, [r7, #20]
    d37c:	str	r8, [r7, #36]	; 0x24
    d380:	str	r1, [r7, #24]
    d384:	str	r0, [r7, #52]	; 0x34
    d388:	ldr	r0, [sp, #40]	; 0x28
    d38c:	ldr	r1, [sp, #32]
    d390:	ldr	r6, [sp, #28]
    d394:	str	r1, [r0]
    d398:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d39c:	mov	r1, #20
    d3a0:	ldr	r4, [r0, #4]
    d3a4:	mov	r0, #1
    d3a8:	bl	472c <calloc@plt>
    d3ac:	mov	r5, r0
    d3b0:	movw	r0, #63222	; 0xf6f6
    d3b4:	mov	r1, #24
    d3b8:	cmp	r4, #0
    d3bc:	movt	r0, #63222	; 0xf6f6
    d3c0:	movweq	r1, #12
    d3c4:	str	r0, [r5]
    d3c8:	mov	r0, #1
    d3cc:	str	r1, [r5, #8]
    d3d0:	bl	472c <calloc@plt>
    d3d4:	cmp	r4, #0
    d3d8:	str	r0, [r5, #4]
    d3dc:	beq	d3f0 <sas7bdat_begin_data+0x5cc>
    d3e0:	asr	r1, r8, #31
    d3e4:	str	r8, [r0, #8]
    d3e8:	str	r1, [r0, #12]
    d3ec:	b	d3f4 <sas7bdat_begin_data+0x5d0>
    d3f0:	str	r8, [r0, #4]
    d3f4:	ldr	r0, [r6, #16]
    d3f8:	ldr	r7, [fp, #-44]	; 0xffffffd4
    d3fc:	mov	r1, #4
    d400:	str	r0, [sp, #36]	; 0x24
    d404:	str	r5, [r0, #4]
    d408:	mov	r0, r8
    d40c:	bl	472c <calloc@plt>
    d410:	mov	r6, r0
    d414:	cmp	r8, #1
    d418:	str	r0, [sp, #40]	; 0x28
    d41c:	blt	d53c <sas7bdat_begin_data+0x718>
    d420:	mov	r5, #0
    d424:	mov	r0, r7
    d428:	mov	r1, r5
    d42c:	bl	4ccc <readstat_get_variable@plt>
    d430:	ldr	r7, [fp, #-40]	; 0xffffffd8
    d434:	mov	r4, r0
    d438:	mov	r0, #1
    d43c:	mov	r1, #20
    d440:	ldr	r6, [r7, #4]
    d444:	bl	472c <calloc@plt>
    d448:	mov	sl, r0
    d44c:	movw	r0, #64510	; 0xfbfe
    d450:	cmp	r6, #0
    d454:	mov	r1, #64	; 0x40
    d458:	movt	r0, #65535	; 0xffff
    d45c:	movweq	r1, #52	; 0x34
    d460:	str	r0, [sl]
    d464:	mov	r0, #1
    d468:	str	r1, [sl, #8]
    d46c:	bl	472c <calloc@plt>
    d470:	mov	r9, r0
    d474:	str	r0, [sl, #4]
    d478:	mov	r0, r4
    d47c:	bl	4888 <readstat_variable_get_format@plt>
    d480:	mov	r6, r0
    d484:	mov	r0, r4
    d488:	bl	4d50 <readstat_variable_get_label@plt>
    d48c:	mov	r2, r0
    d490:	ldr	r0, [r7, #4]
    d494:	ldr	r7, [sp, #44]	; 0x2c
    d498:	mov	r4, #40	; 0x28
    d49c:	mov	r8, #34	; 0x22
    d4a0:	cmp	r0, #0
    d4a4:	movwne	r4, #52	; 0x34
    d4a8:	movwne	r8, #46	; 0x2e
    d4ac:	cmp	r6, #0
    d4b0:	beq	d4e8 <sas7bdat_begin_data+0x6c4>
    d4b4:	str	r2, [sp, #48]	; 0x30
    d4b8:	sub	r0, fp, #36	; 0x24
    d4bc:	mov	r1, r7
    d4c0:	mov	r2, r6
    d4c4:	bl	dee0 <sas7bdat_make_text_ref>
    d4c8:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    d4cc:	mov	r1, r9
    d4d0:	ldr	r2, [sp, #48]	; 0x30
    d4d4:	strh	r0, [r1, r8]!
    d4d8:	ldrh	r0, [fp, #-34]	; 0xffffffde
    d4dc:	strh	r0, [r1, #2]
    d4e0:	ldrh	r0, [fp, #-32]	; 0xffffffe0
    d4e4:	strh	r0, [r1, #4]
    d4e8:	cmp	r2, #0
    d4ec:	beq	d520 <sas7bdat_begin_data+0x6fc>
    d4f0:	sub	r0, fp, #36	; 0x24
    d4f4:	mov	r1, r7
    d4f8:	bl	dee0 <sas7bdat_make_text_ref>
    d4fc:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    d500:	mov	r1, r9
    d504:	strh	r0, [r1, r4]!
    d508:	ldrh	r2, [fp, #-34]	; 0xffffffde
    d50c:	orr	r0, r4, #2
    d510:	add	r0, r9, r0
    d514:	strh	r2, [r0]
    d518:	ldrh	r0, [fp, #-32]	; 0xffffffe0
    d51c:	strh	r0, [r1, #4]
    d520:	ldr	r6, [sp, #40]	; 0x28
    d524:	ldr	r7, [fp, #-44]	; 0xffffffd4
    d528:	str	sl, [r6, r5, lsl #2]
    d52c:	add	r5, r5, #1
    d530:	ldr	r0, [r7, #28]
    d534:	cmp	r5, r0
    d538:	blt	d424 <sas7bdat_begin_data+0x600>
    d53c:	ldr	r4, [sp, #44]	; 0x2c
    d540:	ldr	sl, [sp, #28]
    d544:	ldrd	r8, [r4]
    d548:	ldrd	r0, [sl]
    d54c:	adds	r5, r0, r8
    d550:	adc	r0, r1, r9
    d554:	lsl	r1, r5, #2
    d558:	str	r0, [sp, #16]
    d55c:	str	r5, [sl]
    d560:	str	r0, [sl, #4]
    d564:	ldr	r0, [sp, #36]	; 0x24
    d568:	bl	4984 <realloc@plt>
    d56c:	ldr	r1, [r4, #8]
    d570:	str	r0, [sl, #16]
    d574:	str	r8, [sp, #36]	; 0x24
    d578:	str	r5, [sp, #20]
    d57c:	str	r0, [sp, #12]
    d580:	str	r1, [sp, #48]	; 0x30
    d584:	subs	r1, r8, #1
    d588:	sbcs	r1, r9, #0
    d58c:	blt	d698 <sas7bdat_begin_data+0x874>
    d590:	add	r0, r0, #8
    d594:	mov	sl, #0
    d598:	str	r0, [sp, #32]
    d59c:	ldr	r0, [sp, #48]	; 0x30
    d5a0:	mov	r7, #8
    d5a4:	mov	r5, #0
    d5a8:	mov	r1, #20
    d5ac:	ldr	r8, [r0, sl, lsl #2]
    d5b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d5b4:	ldr	r4, [r0, #4]
    d5b8:	mov	r0, #1
    d5bc:	cmp	r4, #0
    d5c0:	movweq	r7, #4
    d5c4:	cmp	r8, #0
    d5c8:	ldrne	r5, [r8, #8]
    d5cc:	bl	472c <calloc@plt>
    d5d0:	mov	r6, r0
    d5d4:	mvn	r0, #2
    d5d8:	cmp	r4, #0
    d5dc:	str	r0, [r6]
    d5e0:	mov	r0, #36	; 0x24
    d5e4:	movweq	r0, #32
    d5e8:	add	r4, r5, r0
    d5ec:	mov	r0, #1
    d5f0:	mov	r1, r4
    d5f4:	str	r4, [r6, #8]
    d5f8:	bl	472c <calloc@plt>
    d5fc:	mov	r5, r0
    d600:	str	r0, [r6, #4]
    d604:	mov	r0, r4
    d608:	mov	r1, r7
    d60c:	bl	4d08 <sas_subheader_remainder@plt>
    d610:	add	r1, r5, r7
    d614:	strh	r0, [r1]
    d618:	movw	r0, #8224	; 0x2020
    d61c:	movt	r0, #8224	; 0x2020
    d620:	str	r0, [r1, #16]
    d624:	str	r0, [r1, #12]
    d628:	add	r0, r1, #28
    d62c:	ldr	r2, [r8, #8]
    d630:	ldr	r1, [r8]
    d634:	bl	48b8 <memcpy@plt>
    d638:	ldr	r0, [sp, #32]
    d63c:	str	r6, [r0, sl, lsl #2]
    d640:	ldr	r0, [sp, #36]	; 0x24
    d644:	add	sl, sl, #1
    d648:	subs	r0, sl, r0
    d64c:	rscs	r0, r9, #0
    d650:	blt	d59c <sas7bdat_begin_data+0x778>
    d654:	ldr	r6, [sp, #36]	; 0x24
    d658:	ldr	r8, [sp, #48]	; 0x30
    d65c:	mov	r5, #0
    d660:	ldr	r4, [r8, r5, lsl #2]
    d664:	ldr	r0, [r4]
    d668:	bl	4864 <free@plt>
    d66c:	mov	r0, r4
    d670:	bl	4864 <free@plt>
    d674:	add	r5, r5, #1
    d678:	subs	r0, r5, r6
    d67c:	rscs	r0, r9, #0
    d680:	blt	d660 <sas7bdat_begin_data+0x83c>
    d684:	ldr	r7, [fp, #-44]	; 0xffffffd4
    d688:	add	r4, r6, #2
    d68c:	ldmib	sp, {r5, sl}
    d690:	ldr	r6, [sp, #40]	; 0x28
    d694:	b	d6a4 <sas7bdat_begin_data+0x880>
    d698:	ldmib	sp, {r5, sl}
    d69c:	ldr	r8, [sp, #48]	; 0x30
    d6a0:	mov	r4, #2
    d6a4:	mov	r0, r8
    d6a8:	bl	4864 <free@plt>
    d6ac:	ldr	r0, [sp, #44]	; 0x2c
    d6b0:	bl	4864 <free@plt>
    d6b4:	ldr	r9, [sp, #12]
    d6b8:	mov	r0, r9
    d6bc:	str	sl, [r0, r4, lsl #2]!
    d6c0:	str	r5, [r0, #4]
    d6c4:	ldr	r1, [r7, #28]
    d6c8:	cmp	r1, #1
    d6cc:	blt	d6e4 <sas7bdat_begin_data+0x8c0>
    d6d0:	add	r0, r9, r4, lsl #2
    d6d4:	lsl	r2, r1, #2
    d6d8:	mov	r1, r6
    d6dc:	add	r0, r0, #8
    d6e0:	bl	48b8 <memcpy@plt>
    d6e4:	mov	r0, r6
    d6e8:	bl	4864 <free@plt>
    d6ec:	ldr	r4, [sp, #28]
    d6f0:	ldr	r2, [sp, #20]
    d6f4:	ldr	r3, [sp, #16]
    d6f8:	mov	r0, r4
    d6fc:	str	r2, [r0, #8]!
    d700:	str	r3, [r0, #4]
    d704:	ldr	r1, [r7, #16]
    d708:	cmp	r1, #1
    d70c:	bne	d734 <sas7bdat_begin_data+0x910>
    d710:	ldr	r1, [r7, #80]	; 0x50
    d714:	adds	r2, r2, r1
    d718:	adc	r3, r3, r1, asr #31
    d71c:	lsl	r1, r2, #2
    d720:	strd	r2, [r0]
    d724:	mov	r0, r9
    d728:	bl	4984 <realloc@plt>
    d72c:	str	r0, [r4, #16]
    d730:	ldr	r1, [r7, #16]
    d734:	ldr	r0, [sp, #24]
    d738:	mov	r5, #0
    d73c:	cmp	r1, #0
    d740:	str	r4, [r0, #4]
    d744:	str	r0, [r7, #300]	; 0x12c
    d748:	bne	d77c <sas7bdat_begin_data+0x958>
    d74c:	mov	r0, r7
    d750:	bl	d8bc <sas7bdat_emit_header_and_meta_pages>
    d754:	cmp	r0, #0
    d758:	beq	d77c <sas7bdat_begin_data+0x958>
    d75c:	mov	r6, r0
    d760:	ldr	r0, [r7, #300]	; 0x12c
    d764:	cmp	r0, #0
    d768:	beq	d778 <sas7bdat_begin_data+0x954>
    d76c:	bl	de5c <sas7bdat_write_ctx_free>
    d770:	mov	r0, #0
    d774:	str	r0, [r7, #300]	; 0x12c
    d778:	mov	r5, r6
    d77c:	mov	r0, r5
    d780:	sub	sp, fp, #28
    d784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000d788 <sas7bdat_end_data>:
    d788:	ldr	r1, [r0, #16]
    d78c:	cmp	r1, #1
    d790:	bne	d798 <sas7bdat_end_data+0x10>
    d794:	b	d8bc <sas7bdat_emit_header_and_meta_pages>
    d798:	ldr	r1, [r0, #300]	; 0x12c
    d79c:	ldr	r1, [r1]
    d7a0:	b	4dbc <sas_fill_page@plt>

0000d7a4 <sas7bdat_module_ctx_free>:
    d7a4:	b	de5c <sas7bdat_write_ctx_free>

0000d7a8 <sas7bdat_write_row>:
    d7a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d7ac:	add	fp, sp, #28
    d7b0:	sub	sp, sp, #4
    d7b4:	mov	r5, r1
    d7b8:	ldr	r1, [r0, #16]
    d7bc:	ldr	r8, [r0, #300]	; 0x12c
    d7c0:	mov	r6, r2
    d7c4:	mov	r9, #0
    d7c8:	cmp	r1, #1
    d7cc:	beq	d7f0 <sas7bdat_write_row+0x48>
    d7d0:	cmp	r1, #0
    d7d4:	bne	d8b0 <sas7bdat_write_row+0x108>
    d7d8:	mov	r1, r8
    d7dc:	mov	r2, r5
    d7e0:	mov	r3, r6
    d7e4:	sub	sp, fp, #28
    d7e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d7ec:	b	dfe0 <sas7bdat_write_row_uncompressed>
    d7f0:	mov	r0, r5
    d7f4:	mov	r1, r6
    d7f8:	bl	4dc8 <sas_rle_compressed_len@plt>
    d7fc:	mov	r4, r0
    d800:	mov	r0, #1
    d804:	mov	r1, #20
    d808:	mov	sl, #1
    d80c:	bl	472c <calloc@plt>
    d810:	mov	r7, r0
    d814:	cmp	r4, r6
    d818:	bcs	d870 <sas7bdat_write_row+0xc8>
    d81c:	mov	r0, #1
    d820:	mov	r1, r4
    d824:	str	r4, [r7, #8]
    d828:	bl	472c <calloc@plt>
    d82c:	mov	r1, r4
    d830:	mov	r2, r5
    d834:	mov	r3, r6
    d838:	str	r0, [r7, #4]
    d83c:	str	sl, [r7, #12]
    d840:	str	sl, [r7, #16]
    d844:	bl	4e10 <sas_rle_compress@plt>
    d848:	cmp	r0, r4
    d84c:	beq	d894 <sas7bdat_write_row+0xec>
    d850:	ldr	r0, [r7, #4]
    d854:	cmp	r0, #0
    d858:	beq	d860 <sas7bdat_write_row+0xb8>
    d85c:	bl	4864 <free@plt>
    d860:	mov	r0, r7
    d864:	bl	4864 <free@plt>
    d868:	mov	r9, #10
    d86c:	b	d8b0 <sas7bdat_write_row+0x108>
    d870:	mov	r0, #1
    d874:	mov	r1, r6
    d878:	str	r6, [r7, #8]
    d87c:	bl	472c <calloc@plt>
    d880:	mov	r1, r5
    d884:	mov	r2, r6
    d888:	str	r0, [r7, #4]
    d88c:	str	sl, [r7, #12]
    d890:	bl	48b8 <memcpy@plt>
    d894:	ldr	r0, [r8, #4]
    d898:	ldrd	r2, [r0]
    d89c:	ldr	r1, [r0, #16]
    d8a0:	adds	r4, r2, #1
    d8a4:	adc	r5, r3, #0
    d8a8:	strd	r4, [r0]
    d8ac:	str	r7, [r1, r2, lsl #2]
    d8b0:	mov	r0, r9
    d8b4:	sub	sp, fp, #28
    d8b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000d8bc <sas7bdat_emit_header_and_meta_pages>:
    d8bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d8c0:	add	fp, sp, #28
    d8c4:	sub	sp, sp, #356	; 0x164
    d8c8:	mov	r9, r0
    d8cc:	ldr	r0, [r0, #28]
    d8d0:	mov	r8, #36	; 0x24
    d8d4:	cmp	r0, #1
    d8d8:	blt	de4c <sas7bdat_emit_header_and_meta_pages+0x590>
    d8dc:	ldr	r0, [r9, #300]	; 0x12c
    d8e0:	mov	r5, #0
    d8e4:	mov	r4, #0
    d8e8:	str	r0, [sp, #180]	; 0xb4
    d8ec:	mov	r0, r9
    d8f0:	mov	r1, r5
    d8f4:	bl	4ccc <readstat_get_variable@plt>
    d8f8:	mov	r7, r0
    d8fc:	bl	4b34 <readstat_variable_get_type@plt>
    d900:	mov	r6, r0
    d904:	mov	r0, r7
    d908:	bl	4c24 <readstat_variable_get_storage_width@plt>
    d90c:	ldr	sl, [r9, #28]
    d910:	cmp	r6, #0
    d914:	add	r5, r5, #1
    d918:	movne	r0, #8
    d91c:	add	r4, r0, r4
    d920:	cmp	r5, sl
    d924:	blt	d8ec <sas7bdat_emit_header_and_meta_pages+0x30>
    d928:	cmp	r4, #0
    d92c:	beq	de4c <sas7bdat_emit_header_and_meta_pages+0x590>
    d930:	ldr	r0, [r9, #16]
    d934:	cmp	r0, #0
    d938:	bne	d9bc <sas7bdat_emit_header_and_meta_pages+0x100>
    d93c:	ldr	r0, [sp, #180]	; 0xb4
    d940:	cmp	sl, #1
    d944:	ldr	r8, [r0]
    d948:	blt	d994 <sas7bdat_emit_header_and_meta_pages+0xd8>
    d94c:	mov	r6, #0
    d950:	mov	r5, #0
    d954:	mov	r0, r9
    d958:	mov	r1, r6
    d95c:	bl	4ccc <readstat_get_variable@plt>
    d960:	mov	r7, r0
    d964:	bl	4b34 <readstat_variable_get_type@plt>
    d968:	mov	r4, r0
    d96c:	mov	r0, r7
    d970:	bl	4c24 <readstat_variable_get_storage_width@plt>
    d974:	ldr	sl, [r9, #28]
    d978:	cmp	r4, #0
    d97c:	add	r6, r6, #1
    d980:	movne	r0, #8
    d984:	add	r5, r0, r5
    d988:	cmp	r6, sl
    d98c:	blt	d954 <sas7bdat_emit_header_and_meta_pages+0x98>
    d990:	b	d998 <sas7bdat_emit_header_and_meta_pages+0xdc>
    d994:	mov	r5, #0
    d998:	add	r7, r8, #32
    d99c:	mov	r3, #0
    d9a0:	ldm	r7, {r0, r1, r2, r7}
    d9a4:	subs	r0, r0, r2
    d9a8:	mov	r2, r5
    d9ac:	sbc	r1, r1, r7
    d9b0:	bl	287c8 <__aeabi_ldivmod>
    d9b4:	cmp	r0, #0
    d9b8:	beq	de30 <sas7bdat_emit_header_and_meta_pages+0x574>
    d9bc:	ldr	r1, [r9, #300]	; 0x12c
    d9c0:	str	r9, [sp, #168]	; 0xa8
    d9c4:	ldr	r2, [r1, #4]
    d9c8:	ldr	r0, [r2]
    d9cc:	sub	r0, r0, #1
    d9d0:	cmp	r0, #0
    d9d4:	blt	da24 <sas7bdat_emit_header_and_meta_pages+0x168>
    d9d8:	ldr	r1, [r1]
    d9dc:	ldr	r3, [r1, #32]
    d9e0:	ldr	r7, [r1, #40]	; 0x28
    d9e4:	ldr	r1, [r1, #48]	; 0x30
    d9e8:	sub	r6, r3, r7
    d9ec:	ldr	r3, [r2, #16]
    d9f0:	mov	r7, #1
    d9f4:	mov	r2, r6
    d9f8:	ldr	r5, [r3, r0, lsl #2]
    d9fc:	sub	r0, r0, #1
    da00:	ldr	r5, [r5, #8]
    da04:	add	r5, r5, r1
    da08:	cmp	r5, r2
    da0c:	movhi	r2, r6
    da10:	addhi	r7, r7, #1
    da14:	cmn	r0, #1
    da18:	sub	r2, r2, r5
    da1c:	bgt	d9f8 <sas7bdat_emit_header_and_meta_pages+0x13c>
    da20:	b	da28 <sas7bdat_emit_header_and_meta_pages+0x16c>
    da24:	mov	r7, #1
    da28:	ldr	r0, [sp, #180]	; 0xb4
    da2c:	ldr	r9, [r0]
    da30:	ldr	r0, [sp, #168]	; 0xa8
    da34:	ldr	r1, [r0, #16]
    da38:	mov	r0, #0
    da3c:	cmp	r1, #1
    da40:	bne	da50 <sas7bdat_emit_header_and_meta_pages+0x194>
    da44:	ldr	r4, [sp, #168]	; 0xa8
    da48:	mov	r5, r9
    da4c:	b	dae4 <sas7bdat_emit_header_and_meta_pages+0x228>
    da50:	cmp	sl, #1
    da54:	blt	daac <sas7bdat_emit_header_and_meta_pages+0x1f0>
    da58:	ldr	sl, [sp, #168]	; 0xa8
    da5c:	mov	r5, #0
    da60:	mov	r6, #0
    da64:	mov	r0, sl
    da68:	mov	r1, r5
    da6c:	bl	4ccc <readstat_get_variable@plt>
    da70:	mov	r4, r0
    da74:	bl	4b34 <readstat_variable_get_type@plt>
    da78:	mov	r8, r0
    da7c:	mov	r0, r4
    da80:	bl	4c24 <readstat_variable_get_storage_width@plt>
    da84:	cmp	r8, #0
    da88:	add	r5, r5, #1
    da8c:	movne	r0, #8
    da90:	add	r6, r0, r6
    da94:	ldr	r0, [sl, #28]
    da98:	cmp	r5, r0
    da9c:	blt	da64 <sas7bdat_emit_header_and_meta_pages+0x1a8>
    daa0:	ldr	r0, [sp, #180]	; 0xb4
    daa4:	ldr	r5, [r0]
    daa8:	b	dab4 <sas7bdat_emit_header_and_meta_pages+0x1f8>
    daac:	mov	r6, #0
    dab0:	mov	r5, r9
    dab4:	add	r4, r9, #32
    dab8:	mov	r3, #0
    dabc:	ldm	r4, {r0, r1, r2, r4}
    dac0:	subs	r0, r0, r2
    dac4:	mov	r2, r6
    dac8:	sbc	r1, r1, r4
    dacc:	bl	287c8 <__aeabi_ldivmod>
    dad0:	ldr	r4, [sp, #168]	; 0xa8
    dad4:	ldr	r1, [r4, #80]	; 0x50
    dad8:	add	r1, r0, r1
    dadc:	sub	r1, r1, #1
    dae0:	sdiv	r0, r1, r0
    dae4:	add	r0, r0, r7
    dae8:	add	r6, sp, #184	; 0xb8
    daec:	mov	r2, #156	; 0x9c
    daf0:	asr	r1, r0, #31
    daf4:	strd	r0, [r5, #56]	; 0x38
    daf8:	mov	r0, r6
    dafc:	mov	r1, #0
    db00:	bl	4c00 <memset@plt>
    db04:	ldr	r0, [r5, #4]
    db08:	mov	r1, #34	; 0x22
    db0c:	strb	r1, [sp, #219]	; 0xdb
    db10:	mov	r1, #51	; 0x33
    db14:	cmp	r0, #0
    db18:	movweq	r1, #34	; 0x22
    db1c:	strb	r1, [sp, #216]	; 0xd8
    db20:	bl	4858 <machine_is_little_endian@plt>
    db24:	ldr	r1, [pc, #812]	; de58 <sas7bdat_emit_header_and_meta_pages+0x59c>
    db28:	cmp	r0, #0
    db2c:	movwne	r0, #1
    db30:	ldr	r1, [pc, r1]
    db34:	vld1.8	{d16-d17}, [r1]!
    db38:	vld1.8	{d18-d19}, [r1]
    db3c:	add	r1, r6, #16
    db40:	vst1.64	{d18-d19}, [r1]
    db44:	movw	r1, #18758	; 0x4946
    db48:	movt	r1, #17740	; 0x454c
    db4c:	str	r1, [sp, #272]	; 0x110
    db50:	movw	r1, #16723	; 0x4153
    db54:	movt	r1, #8275	; 0x2053
    db58:	str	r1, [sp, #268]	; 0x10c
    db5c:	movw	r1, #32288	; 0x7e20
    db60:	movt	r1, #32288	; 0x7e20
    db64:	str	r1, [sp, #344]	; 0x158
    db68:	movw	r1, #16708	; 0x4144
    db6c:	movt	r1, #16724	; 0x4154
    db70:	str	r1, [sp, #340]	; 0x154
    db74:	mov	r1, #49	; 0x31
    db78:	strb	r1, [sp, #223]	; 0xdf
    db7c:	mov	r1, #20
    db80:	strb	r1, [sp, #254]	; 0xfe
    db84:	strb	r0, [sp, #221]	; 0xdd
    db88:	mov	r0, #8
    db8c:	mov	r1, sp
    db90:	vst1.64	{d16-d17}, [r6], r0
    db94:	movw	r0, #156	; 0x9c
    db98:	ldr	r2, [r6], #4
    db9c:	subs	r0, r0, #4
    dba0:	str	r2, [r1], #4
    dba4:	bne	db98 <sas7bdat_emit_header_and_meta_pages+0x2dc>
    dba8:	ldr	r2, [sp, #184]	; 0xb8
    dbac:	ldr	r3, [sp, #188]	; 0xbc
    dbb0:	mov	r0, r4
    dbb4:	mov	r1, r5
    dbb8:	bl	4a38 <sas_write_header@plt>
    dbbc:	mov	r8, r0
    dbc0:	cmp	r0, #0
    dbc4:	bne	de4c <sas7bdat_emit_header_and_meta_pages+0x590>
    dbc8:	ldr	r0, [r4, #300]	; 0x12c
    dbcc:	ldm	r0, {r4, r6}
    dbd0:	mov	r9, r4
    dbd4:	ldr	r0, [r9, #32]!
    dbd8:	bl	4a74 <malloc@plt>
    dbdc:	str	r0, [sp, #180]	; 0xb4
    dbe0:	add	r0, r4, #48	; 0x30
    dbe4:	mov	r7, #0
    dbe8:	mov	sl, #0
    dbec:	str	r4, [sp, #176]	; 0xb0
    dbf0:	str	r9, [sp, #156]	; 0x9c
    dbf4:	str	r0, [sp, #164]	; 0xa4
    dbf8:	add	r0, r4, #40	; 0x28
    dbfc:	str	r0, [sp, #160]	; 0xa0
    dc00:	ldrd	r0, [r6]
    dc04:	subs	r0, r7, r0
    dc08:	sbcs	r0, sl, r1
    dc0c:	bge	de38 <sas7bdat_emit_header_and_meta_pages+0x57c>
    dc10:	ldr	r4, [sp, #180]	; 0xb4
    dc14:	ldr	r2, [r9]
    dc18:	mov	r1, #0
    dc1c:	mov	r0, r4
    dc20:	bl	4c00 <memset@plt>
    dc24:	ldr	r0, [sp, #160]	; 0xa0
    dc28:	ldr	r8, [r9]
    dc2c:	ldr	r1, [r0]
    dc30:	ldr	r0, [sp, #164]	; 0xa4
    dc34:	add	r5, r4, r1
    dc38:	ldr	r4, [r0]
    dc3c:	mov	r0, #0
    dc40:	sub	r3, r8, r1
    dc44:	strh	r0, [r5, #-8]
    dc48:	ldr	r0, [r6, #16]
    dc4c:	str	r4, [sp, #172]	; 0xac
    dc50:	ldr	r0, [r0, r7, lsl #2]
    dc54:	ldr	r2, [r0, #8]
    dc58:	add	r4, r2, r4
    dc5c:	cmp	r4, r3
    dc60:	bhi	de40 <sas7bdat_emit_header_and_meta_pages+0x584>
    dc64:	ldm	r6, {r3, r9}
    dc68:	mov	r4, #0
    dc6c:	subs	r3, r7, r3
    dc70:	sbcs	r3, sl, r9
    dc74:	bge	dde0 <sas7bdat_emit_header_and_meta_pages+0x524>
    dc78:	rsb	r9, r1, #0
    dc7c:	mov	r4, #0
    dc80:	mov	lr, r6
    dc84:	ldr	r6, [sp, #176]	; 0xb0
    dc88:	ldr	r1, [r0]
    dc8c:	sub	r3, r8, r2
    dc90:	ldr	r6, [r6, #4]
    dc94:	cmp	r6, #0
    dc98:	beq	dcd8 <sas7bdat_emit_header_and_meta_pages+0x41c>
    dc9c:	mov	r6, #0
    dca0:	str	r2, [r5, #8]
    dca4:	str	r6, [r5, #12]
    dca8:	str	r6, [r5, #4]
    dcac:	str	r3, [r5]
    dcb0:	ldr	r2, [r0, #12]
    dcb4:	cmp	r2, #0
    dcb8:	beq	dd08 <sas7bdat_emit_header_and_meta_pages+0x44c>
    dcbc:	ldr	r1, [r0, #16]
    dcc0:	mov	r2, #1
    dcc4:	strb	r2, [r5, #17]
    dcc8:	cmp	r1, #0
    dccc:	movwne	r1, #4
    dcd0:	strb	r1, [r5, #16]
    dcd4:	b	dd84 <sas7bdat_emit_header_and_meta_pages+0x4c8>
    dcd8:	str	r2, [r5, #4]
    dcdc:	str	r3, [r5]
    dce0:	ldr	r2, [r0, #12]
    dce4:	cmp	r2, #0
    dce8:	beq	dd50 <sas7bdat_emit_header_and_meta_pages+0x494>
    dcec:	ldr	r1, [r0, #16]
    dcf0:	mov	r2, #1
    dcf4:	strb	r2, [r5, #9]
    dcf8:	cmp	r1, #0
    dcfc:	movwne	r1, #4
    dd00:	strb	r1, [r5, #8]
    dd04:	b	dd84 <sas7bdat_emit_header_and_meta_pages+0x4c8>
    dd08:	ldr	ip, [r0]
    dd0c:	add	r2, ip, #4
    dd10:	cmp	r2, #3
    dd14:	bhi	dd24 <sas7bdat_emit_header_and_meta_pages+0x468>
    dd18:	mov	r3, #1
    dd1c:	cmp	r2, #2
    dd20:	bne	dd30 <sas7bdat_emit_header_and_meta_pages+0x474>
    dd24:	add	r2, ip, #2
    dd28:	clz	r2, r2
    dd2c:	lsr	r3, r2, #5
    dd30:	strb	r3, [r5, #17]
    dd34:	cmp	r1, #-16777216	; 0xff000000
    dd38:	mov	r6, lr
    dd3c:	ldr	r2, [r0, #4]
    dd40:	asrcs	r3, r1, #31
    dd44:	strcs	r3, [r2, #4]
    dd48:	str	r1, [r2]
    dd4c:	b	dd88 <sas7bdat_emit_header_and_meta_pages+0x4cc>
    dd50:	ldr	ip, [r0]
    dd54:	add	r2, ip, #4
    dd58:	cmp	r2, #3
    dd5c:	bhi	dd6c <sas7bdat_emit_header_and_meta_pages+0x4b0>
    dd60:	mov	r3, #1
    dd64:	cmp	r2, #2
    dd68:	bne	dd78 <sas7bdat_emit_header_and_meta_pages+0x4bc>
    dd6c:	add	r2, ip, #2
    dd70:	clz	r2, r2
    dd74:	lsr	r3, r2, #5
    dd78:	strb	r3, [r5, #9]
    dd7c:	ldr	r2, [r0, #4]
    dd80:	str	r1, [r2]
    dd84:	mov	r6, lr
    dd88:	ldmib	r0, {r1, r2}
    dd8c:	ldr	r0, [sp, #180]	; 0xb4
    dd90:	sub	r8, r8, r2
    dd94:	add	r0, r0, r8
    dd98:	bl	48b8 <memcpy@plt>
    dd9c:	ldrd	r0, [r6]
    dda0:	adds	r7, r7, #1
    dda4:	add	r4, r4, #1
    dda8:	adc	sl, sl, #0
    ddac:	subs	r0, r7, r0
    ddb0:	sbcs	r0, sl, r1
    ddb4:	bge	dde0 <sas7bdat_emit_header_and_meta_pages+0x524>
    ddb8:	ldr	r0, [r6, #16]
    ddbc:	ldr	r3, [sp, #172]	; 0xac
    ddc0:	ldr	r0, [r0, r7, lsl #2]
    ddc4:	sub	r9, r9, r3
    ddc8:	add	r5, r5, r3
    ddcc:	add	r1, r9, r8
    ddd0:	ldr	r2, [r0, #8]
    ddd4:	add	r3, r2, r3
    ddd8:	cmp	r3, r1
    dddc:	bls	dc80 <sas7bdat_emit_header_and_meta_pages+0x3c4>
    dde0:	ldr	r0, [sp, #176]	; 0xb0
    dde4:	ldr	r1, [sp, #180]	; 0xb4
    dde8:	ldr	r9, [sp, #156]	; 0x9c
    ddec:	ldr	r0, [r0, #4]
    ddf0:	cmp	r0, #0
    ddf4:	mov	r0, #34	; 0x22
    ddf8:	movweq	r0, #18
    ddfc:	add	r0, r1, r0
    de00:	strh	r4, [r0]
    de04:	mov	r0, #36	; 0x24
    de08:	movweq	r0, #20
    de0c:	add	r0, r1, r0
    de10:	strh	r4, [r0]
    de14:	ldr	r0, [sp, #168]	; 0xa8
    de18:	ldr	r2, [r9]
    de1c:	bl	4d98 <readstat_write_bytes@plt>
    de20:	cmp	r0, #0
    de24:	beq	dc00 <sas7bdat_emit_header_and_meta_pages+0x344>
    de28:	mov	r8, r0
    de2c:	b	de44 <sas7bdat_emit_header_and_meta_pages+0x588>
    de30:	mov	r8, #35	; 0x23
    de34:	b	de4c <sas7bdat_emit_header_and_meta_pages+0x590>
    de38:	mov	r8, #0
    de3c:	b	de44 <sas7bdat_emit_header_and_meta_pages+0x588>
    de40:	mov	r8, #35	; 0x23
    de44:	ldr	r0, [sp, #180]	; 0xb4
    de48:	bl	4864 <free@plt>
    de4c:	mov	r0, r8
    de50:	sub	sp, fp, #28
    de54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    de58:	.word	0x0003b784

0000de5c <sas7bdat_write_ctx_free>:
    de5c:	push	{r4, r5, r6, r7, fp, lr}
    de60:	add	fp, sp, #16
    de64:	mov	r4, r0
    de68:	ldr	r0, [r0]
    de6c:	bl	4864 <free@plt>
    de70:	ldr	r5, [r4, #4]
    de74:	ldrd	r2, [r5]
    de78:	ldr	r0, [r5, #16]
    de7c:	subs	r1, r2, #1
    de80:	sbcs	r1, r3, #0
    de84:	blt	dec8 <sas7bdat_write_ctx_free+0x6c>
    de88:	mov	r7, #0
    de8c:	ldr	r6, [r0, r7, lsl #2]
    de90:	cmp	r6, #0
    de94:	beq	deb8 <sas7bdat_write_ctx_free+0x5c>
    de98:	ldr	r0, [r6, #4]
    de9c:	cmp	r0, #0
    dea0:	beq	dea8 <sas7bdat_write_ctx_free+0x4c>
    dea4:	bl	4864 <free@plt>
    dea8:	mov	r0, r6
    deac:	bl	4864 <free@plt>
    deb0:	ldrd	r2, [r5]
    deb4:	ldr	r0, [r5, #16]
    deb8:	add	r7, r7, #1
    debc:	subs	r1, r7, r2
    dec0:	rscs	r1, r3, #0
    dec4:	blt	de8c <sas7bdat_write_ctx_free+0x30>
    dec8:	bl	4864 <free@plt>
    decc:	mov	r0, r5
    ded0:	bl	4864 <free@plt>
    ded4:	mov	r0, r4
    ded8:	pop	{r4, r5, r6, r7, fp, lr}
    dedc:	b	4864 <free@plt>

0000dee0 <sas7bdat_make_text_ref>:
    dee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dee4:	add	fp, sp, #28
    dee8:	sub	sp, sp, #12
    deec:	mov	r8, r0
    def0:	mov	r0, r2
    def4:	mov	r7, r1
    def8:	str	r2, [sp, #8]
    defc:	bl	4b58 <strlen@plt>
    df00:	mov	r9, r0
    df04:	ldr	r2, [r7]
    df08:	ldr	r0, [r7, #8]
    df0c:	add	r3, r9, #3
    df10:	bic	sl, r3, #3
    df14:	add	r1, r0, r2, lsl #2
    df18:	ldr	r4, [r1, #-4]
    df1c:	mov	r5, r4
    df20:	ldr	r6, [r4, #4]
    df24:	ldr	r1, [r5, #8]!
    df28:	add	r3, r1, sl
    df2c:	cmp	r3, r6
    df30:	bls	dfa4 <sas7bdat_make_text_ref+0xc4>
    df34:	ldr	r1, [r7, #4]
    df38:	adds	r2, r2, #1
    df3c:	adc	r3, r1, #0
    df40:	lsl	r1, r2, #2
    df44:	strd	r2, [r7]
    df48:	bl	4984 <realloc@plt>
    df4c:	str	r0, [r7, #8]
    df50:	str	r0, [sp, #4]
    df54:	mov	r1, #24
    df58:	ldrd	r6, [r7]
    df5c:	ldr	r5, [r4, #4]
    df60:	subs	r0, r6, #1
    df64:	str	r0, [sp]
    df68:	mov	r0, #1
    df6c:	sbc	r7, r7, #0
    df70:	bl	472c <calloc@plt>
    df74:	mov	r4, r0
    df78:	mov	r0, r5
    df7c:	bl	4a74 <malloc@plt>
    df80:	ldr	r1, [sp]
    df84:	str	r1, [r4, #16]
    df88:	str	r7, [r4, #20]
    df8c:	stm	r4, {r0, r5}
    df90:	add	r5, r4, #8
    df94:	mov	r1, #0
    df98:	ldr	r0, [sp, #4]
    df9c:	add	r0, r0, r6, lsl #2
    dfa0:	str	r4, [r0, #-4]
    dfa4:	ldrh	r0, [r4, #16]
    dfa8:	add	r2, r1, #28
    dfac:	strh	r2, [r8, #2]
    dfb0:	strh	r9, [r8, #4]
    dfb4:	mov	r2, sl
    dfb8:	strh	r0, [r8]
    dfbc:	ldr	r0, [r4]
    dfc0:	add	r0, r0, r1
    dfc4:	ldr	r1, [sp, #8]
    dfc8:	bl	4c18 <strncpy@plt>
    dfcc:	ldr	r0, [r5]
    dfd0:	add	r0, r0, sl
    dfd4:	str	r0, [r5]
    dfd8:	sub	sp, fp, #28
    dfdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000dfe0 <sas7bdat_write_row_uncompressed>:
    dfe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dfe4:	add	fp, sp, #28
    dfe8:	sub	sp, sp, #12
    dfec:	mov	r6, r0
    dff0:	ldr	r0, [r0, #28]
    dff4:	ldr	r9, [r1]
    dff8:	mov	r8, r3
    dffc:	mov	r5, r2
    e000:	mov	sl, r1
    e004:	cmp	r0, #1
    e008:	blt	e064 <sas7bdat_write_row_uncompressed+0x84>
    e00c:	str	r5, [fp, #-36]	; 0xffffffdc
    e010:	mov	r5, #0
    e014:	mov	r4, #0
    e018:	str	r8, [fp, #-40]	; 0xffffffd8
    e01c:	mov	r0, r6
    e020:	mov	r1, r5
    e024:	bl	4ccc <readstat_get_variable@plt>
    e028:	mov	r7, r0
    e02c:	bl	4b34 <readstat_variable_get_type@plt>
    e030:	mov	r8, r0
    e034:	mov	r0, r7
    e038:	bl	4c24 <readstat_variable_get_storage_width@plt>
    e03c:	cmp	r8, #0
    e040:	add	r5, r5, #1
    e044:	movne	r0, #8
    e048:	add	r4, r0, r4
    e04c:	ldr	r0, [r6, #28]
    e050:	cmp	r5, r0
    e054:	blt	e01c <sas7bdat_write_row_uncompressed+0x3c>
    e058:	ldr	r8, [fp, #-40]	; 0xffffffd8
    e05c:	ldr	r5, [fp, #-36]	; 0xffffffdc
    e060:	b	e068 <sas7bdat_write_row_uncompressed+0x88>
    e064:	mov	r4, #0
    e068:	mov	r3, #0
    e06c:	ldr	r0, [r9, #40]!	; 0x28
    e070:	ldr	r2, [r9, #-8]
    e074:	ldr	r1, [r9, #-4]
    e078:	ldr	r7, [r9, #4]
    e07c:	subs	r0, r2, r0
    e080:	mov	r2, r4
    e084:	sbc	r1, r1, r7
    e088:	bl	287c8 <__aeabi_ldivmod>
    e08c:	mov	r4, r0
    e090:	ldr	r0, [r6, #84]	; 0x54
    e094:	sdiv	r1, r0, r4
    e098:	mls	r0, r1, r4, r0
    e09c:	cmp	r0, #0
    e0a0:	beq	e0bc <sas7bdat_write_row_uncompressed+0xdc>
    e0a4:	mov	r0, r6
    e0a8:	mov	r1, r5
    e0ac:	mov	r2, r8
    e0b0:	bl	4d98 <readstat_write_bytes@plt>
    e0b4:	sub	sp, fp, #28
    e0b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e0bc:	ldr	r1, [sl]
    e0c0:	mov	r0, r6
    e0c4:	bl	4dbc <sas_fill_page@plt>
    e0c8:	cmp	r0, #0
    e0cc:	bne	e148 <sas7bdat_write_row_uncompressed+0x168>
    e0d0:	ldr	r2, [r9]
    e0d4:	ldr	sl, [r6, #80]	; 0x50
    e0d8:	ldr	r7, [r6, #84]	; 0x54
    e0dc:	str	r5, [fp, #-36]	; 0xffffffdc
    e0e0:	str	sp, [fp, #-40]	; 0xffffffd8
    e0e4:	add	r0, r2, #7
    e0e8:	bic	r0, r0, #7
    e0ec:	sub	r5, sp, r0
    e0f0:	mov	sp, r5
    e0f4:	mov	r0, r5
    e0f8:	mov	r1, #0
    e0fc:	bl	4c00 <memset@plt>
    e100:	sub	r0, sl, r7
    e104:	mov	r1, #256	; 0x100
    e108:	cmp	r0, r4
    e10c:	movlt	r4, r0
    e110:	ldr	r0, [r9]
    e114:	add	r0, r5, r0
    e118:	strh	r4, [r0, #-6]
    e11c:	ldr	r0, [r9]
    e120:	add	r0, r5, r0
    e124:	strh	r1, [r0, #-8]
    e128:	mov	r1, r5
    e12c:	ldr	r5, [fp, #-36]	; 0xffffffdc
    e130:	mov	r0, r6
    e134:	ldr	r2, [r9]
    e138:	bl	4d98 <readstat_write_bytes@plt>
    e13c:	ldr	sp, [fp, #-40]	; 0xffffffd8
    e140:	cmp	r0, #0
    e144:	beq	e0a4 <sas7bdat_write_row_uncompressed+0xc4>
    e148:	sub	sp, fp, #28
    e14c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000e150 <sas_rle_decompressed_len>:
    e150:	mov	r3, r1
    e154:	mov	r2, r0
    e158:	mov	r0, #0
    e15c:	mov	r1, #0
    e160:	b	e164 <sas_rle_decompress>

0000e164 <sas_rle_decompress>:
    e164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e168:	add	fp, sp, #28
    e16c:	push	{r1}		; (str r1, [sp, #-4]!)
    e170:	cmp	r3, #1
    e174:	movlt	r0, #0
    e178:	sublt	sp, fp, #28
    e17c:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e180:	ldr	r5, [pc, #480]	; e368 <sas_rle_decompress+0x204>
    e184:	add	r7, r2, r3
    e188:	mov	sl, r2
    e18c:	mov	r8, r0
    e190:	mov	r3, #0
    e194:	add	r5, pc, r5
    e198:	mov	r6, sl
    e19c:	ldrb	r1, [sl], #1
    e1a0:	lsr	r2, r1, #4
    e1a4:	ldr	r0, [r5, r2, lsl #2]
    e1a8:	add	r4, sl, r0
    e1ac:	mvn	r0, #0
    e1b0:	cmp	r4, r7
    e1b4:	bhi	e360 <sas_rle_decompress+0x1fc>
    e1b8:	cmp	r2, #15
    e1bc:	bhi	e348 <sas_rle_decompress+0x1e4>
    e1c0:	add	r4, pc, #8
    e1c4:	and	r1, r1, #15
    e1c8:	ldr	r2, [r4, r2, lsl #2]
    e1cc:	add	pc, r4, r2
    e1d0:	.word	0x00000040
    e1d4:	.word	0x00000178
    e1d8:	.word	0x00000178
    e1dc:	.word	0x00000178
    e1e0:	.word	0x00000058
    e1e4:	.word	0x00000074
    e1e8:	.word	0x00000090
    e1ec:	.word	0x000000ac
    e1f0:	.word	0x000000c4
    e1f4:	.word	0x000000cc
    e1f8:	.word	0x000000d4
    e1fc:	.word	0x000000dc
    e200:	.word	0x0000011c
    e204:	.word	0x0000012c
    e208:	.word	0x00000138
    e20c:	.word	0x00000144
    e210:	mov	r2, #64	; 0x40
    e214:	add	sl, r6, #2
    e218:	orr	r1, r2, r1, lsl #8
    e21c:	ldrb	r2, [r6, #1]
    e220:	add	r2, r1, r2
    e224:	b	e2b0 <sas_rle_decompress+0x14c>
    e228:	mov	r2, #18
    e22c:	ldrb	r4, [r6, #1]
    e230:	add	sl, r6, #3
    e234:	orr	r2, r2, r1, lsl #8
    e238:	ldrb	r1, [r6, #2]
    e23c:	add	r2, r2, r4
    e240:	b	e31c <sas_rle_decompress+0x1b8>
    e244:	mov	r2, #17
    e248:	add	sl, r6, #2
    e24c:	orr	r1, r2, r1, lsl #8
    e250:	ldrb	r2, [r6, #1]
    e254:	add	r2, r1, r2
    e258:	mov	r1, #64	; 0x40
    e25c:	b	e31c <sas_rle_decompress+0x1b8>
    e260:	mov	r2, #17
    e264:	add	sl, r6, #2
    e268:	orr	r1, r2, r1, lsl #8
    e26c:	ldrb	r2, [r6, #1]
    e270:	add	r2, r1, r2
    e274:	mov	r1, #32
    e278:	b	e31c <sas_rle_decompress+0x1b8>
    e27c:	mov	r2, #17
    e280:	add	sl, r6, #2
    e284:	orr	r1, r2, r1, lsl #8
    e288:	ldrb	r2, [r6, #1]
    e28c:	add	r2, r1, r2
    e290:	b	e318 <sas_rle_decompress+0x1b4>
    e294:	add	r2, r1, #1
    e298:	b	e2b0 <sas_rle_decompress+0x14c>
    e29c:	add	r2, r1, #17
    e2a0:	b	e2b0 <sas_rle_decompress+0x14c>
    e2a4:	add	r2, r1, #33	; 0x21
    e2a8:	b	e2b0 <sas_rle_decompress+0x14c>
    e2ac:	add	r2, r1, #49	; 0x31
    e2b0:	ldr	r1, [sp]
    e2b4:	add	r6, r2, r3
    e2b8:	cmp	r6, r1
    e2bc:	addls	r9, sl, r2
    e2c0:	cmpls	r9, r7
    e2c4:	bhi	e360 <sas_rle_decompress+0x1fc>
    e2c8:	cmp	r8, #0
    e2cc:	beq	e358 <sas_rle_decompress+0x1f4>
    e2d0:	add	r0, r8, r3
    e2d4:	mov	r1, sl
    e2d8:	bl	48b8 <memcpy@plt>
    e2dc:	ldr	r5, [pc, #136]	; e36c <sas_rle_decompress+0x208>
    e2e0:	mov	sl, r9
    e2e4:	add	r5, pc, r5
    e2e8:	b	e344 <sas_rle_decompress+0x1e0>
    e2ec:	add	r2, r1, #3
    e2f0:	ldrb	r1, [r6, #1]
    e2f4:	add	sl, r6, #2
    e2f8:	b	e31c <sas_rle_decompress+0x1b8>
    e2fc:	add	r2, r1, #2
    e300:	mov	r1, #64	; 0x40
    e304:	b	e31c <sas_rle_decompress+0x1b8>
    e308:	add	r2, r1, #2
    e30c:	mov	r1, #32
    e310:	b	e31c <sas_rle_decompress+0x1b8>
    e314:	add	r2, r1, #2
    e318:	mov	r1, #0
    e31c:	ldr	r4, [sp]
    e320:	add	r6, r2, r3
    e324:	cmp	r6, r4
    e328:	bhi	e360 <sas_rle_decompress+0x1fc>
    e32c:	cmp	r8, #0
    e330:	beq	e344 <sas_rle_decompress+0x1e0>
    e334:	add	r0, r8, r3
    e338:	bl	4c00 <memset@plt>
    e33c:	ldr	r5, [pc, #44]	; e370 <sas_rle_decompress+0x20c>
    e340:	add	r5, pc, r5
    e344:	mov	r3, r6
    e348:	cmp	sl, r7
    e34c:	mov	r0, r3
    e350:	bcc	e198 <sas_rle_decompress+0x34>
    e354:	b	e360 <sas_rle_decompress+0x1fc>
    e358:	mov	sl, r9
    e35c:	b	e344 <sas_rle_decompress+0x1e0>
    e360:	sub	sp, fp, #28
    e364:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e368:	.word	0x0001b474
    e36c:	.word	0x0001b324
    e370:	.word	0x0001b2c8

0000e374 <sas_rle_compressed_len>:
    e374:	mov	r2, r0
    e378:	mov	r0, #0
    e37c:	mov	r3, r1
    e380:	b	e384 <sas_rle_compress>

0000e384 <sas_rle_compress>:
    e384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e388:	add	fp, sp, #28
    e38c:	sub	sp, sp, #28
    e390:	mov	r5, r2
    e394:	mov	ip, r0
    e398:	cmp	r3, #1
    e39c:	blt	e3d0 <sas_rle_compress+0x4c>
    e3a0:	add	r3, r5, r3
    e3a4:	mov	r9, #0
    e3a8:	movw	lr, #4111	; 0x100f
    e3ac:	movw	sl, #4159	; 0x103f
    e3b0:	movw	r2, #65295	; 0xff0f
    e3b4:	mov	r8, #0
    e3b8:	mov	r7, #0
    e3bc:	mov	r6, #0
    e3c0:	mov	r4, r5
    e3c4:	str	ip, [sp, #24]
    e3c8:	str	r3, [sp, #4]
    e3cc:	b	e3ec <sas_rle_compress+0x68>
    e3d0:	mov	r0, #0
    e3d4:	mov	r7, #0
    e3d8:	mov	r8, #0
    e3dc:	b	e708 <sas_rle_compress+0x384>
    e3e0:	cmp	r7, #0
    e3e4:	bne	e570 <sas_rle_compress+0x1ec>
    e3e8:	b	e578 <sas_rle_compress+0x1f4>
    e3ec:	mov	r0, r9
    e3f0:	ldrb	r9, [r5]
    e3f4:	cmp	r6, #0
    e3f8:	beq	e4fc <sas_rle_compress+0x178>
    e3fc:	cmp	r6, lr
    e400:	bhi	e418 <sas_rle_compress+0x94>
    e404:	uxtb	r1, r0
    e408:	cmp	r9, r1
    e40c:	bne	e418 <sas_rle_compress+0x94>
    e410:	add	r6, r6, #1
    e414:	b	e5d4 <sas_rle_compress+0x250>
    e418:	uxtb	r1, r0
    e41c:	cmp	r1, #64	; 0x40
    e420:	cmpne	r1, #32
    e424:	bne	e4b8 <sas_rle_compress+0x134>
    e428:	cmp	r6, #1
    e42c:	bls	e4f8 <sas_rle_compress+0x174>
    e430:	cmp	ip, #0
    e434:	str	r1, [sp, #20]
    e438:	beq	e504 <sas_rle_compress+0x180>
    e43c:	str	r8, [sp, #16]
    e440:	add	r8, ip, r8
    e444:	str	r9, [sp, #8]
    e448:	cmp	r7, sl
    e44c:	movw	r9, #4158	; 0x103e
    e450:	movw	r1, #4161	; 0x1041
    e454:	mov	r0, r8
    e458:	str	r8, [sp, #12]
    e45c:	bcc	e494 <sas_rle_compress+0x110>
    e460:	mov	r8, r0
    e464:	add	r0, r0, #2
    e468:	strh	r2, [r8], r1
    e46c:	mov	r1, r4
    e470:	movw	r2, #4159	; 0x103f
    e474:	bl	48b8 <memcpy@plt>
    e478:	sub	r7, r7, sl
    e47c:	movw	r2, #65295	; 0xff0f
    e480:	movw	r1, #4161	; 0x1041
    e484:	add	r4, r4, sl
    e488:	mov	r0, r8
    e48c:	cmp	r7, r9
    e490:	bhi	e460 <sas_rle_compress+0xdc>
    e494:	cmp	r7, #65	; 0x41
    e498:	bcc	e550 <sas_rle_compress+0x1cc>
    e49c:	sub	r0, r7, #64	; 0x40
    e4a0:	strb	r0, [r8, #1]
    e4a4:	ubfx	r0, r0, #8, #4
    e4a8:	ldr	r9, [sp, #8]
    e4ac:	strb	r0, [r8]
    e4b0:	add	r8, r8, #2
    e4b4:	b	e578 <sas_rle_compress+0x1f4>
    e4b8:	mov	ip, r8
    e4bc:	mov	r8, r1
    e4c0:	cmp	r6, #1
    e4c4:	mov	r1, #0
    e4c8:	mov	r2, #0
    e4cc:	movwhi	r1, #1
    e4d0:	cmp	r6, #2
    e4d4:	movwhi	r2, #1
    e4d8:	tst	r0, #255	; 0xff
    e4dc:	moveq	r2, r1
    e4e0:	mov	r1, r8
    e4e4:	mov	r8, ip
    e4e8:	ldr	ip, [sp, #24]
    e4ec:	cmp	r2, #1
    e4f0:	movw	r2, #65295	; 0xff0f
    e4f4:	beq	e430 <sas_rle_compress+0xac>
    e4f8:	add	r7, r7, r6
    e4fc:	mov	r6, #1
    e500:	b	e5d4 <sas_rle_compress+0x250>
    e504:	mov	r0, #0
    e508:	cmp	r7, sl
    e50c:	movw	r3, #4161	; 0x1041
    e510:	bcc	e538 <sas_rle_compress+0x1b4>
    e514:	movw	r1, #17633	; 0x44e1
    e518:	sub	r0, r7, sl
    e51c:	movt	r1, #64543	; 0xfc1f
    e520:	umull	r1, r2, r0, r1
    e524:	lsr	r1, r2, #12
    e528:	movw	r2, #61377	; 0xefc1
    e52c:	movt	r2, #65535	; 0xffff
    e530:	mla	r7, r1, r2, r0
    e534:	mla	r0, r1, r3, r3
    e538:	add	r0, r0, r7
    e53c:	cmp	r7, #64	; 0x40
    e540:	addhi	r0, r0, #1
    e544:	cmp	r7, #0
    e548:	addne	r0, r0, #1
    e54c:	b	e59c <sas_rle_compress+0x218>
    e550:	cmp	r7, #49	; 0x31
    e554:	bcc	e560 <sas_rle_compress+0x1dc>
    e558:	ldr	r9, [sp, #8]
    e55c:	b	e570 <sas_rle_compress+0x1ec>
    e560:	ldr	r9, [sp, #8]
    e564:	cmp	r7, #33	; 0x21
    e568:	cmpcc	r7, #17
    e56c:	bcc	e3e0 <sas_rle_compress+0x5c>
    e570:	add	r0, r7, #127	; 0x7f
    e574:	strb	r0, [r8], #1
    e578:	mov	r0, r8
    e57c:	mov	r1, r4
    e580:	mov	r2, r7
    e584:	bl	48b8 <memcpy@plt>
    e588:	ldr	r1, [sp, #12]
    e58c:	add	r0, r8, r7
    e590:	ldr	r8, [sp, #16]
    e594:	ldr	ip, [sp, #24]
    e598:	sub	r0, r0, r1
    e59c:	ldr	r2, [sp, #20]
    e5a0:	add	r4, r0, r8
    e5a4:	mov	r0, ip
    e5a8:	mov	r3, r6
    e5ac:	mov	r1, r4
    e5b0:	bl	e894 <sas_rle_insert_run>
    e5b4:	ldr	ip, [sp, #24]
    e5b8:	ldr	r3, [sp, #4]
    e5bc:	add	r8, r4, r0
    e5c0:	mov	r7, #0
    e5c4:	mov	r4, r5
    e5c8:	mov	r6, #1
    e5cc:	movw	lr, #4111	; 0x100f
    e5d0:	movw	r2, #65295	; 0xff0f
    e5d4:	add	r5, r5, #1
    e5d8:	cmp	r5, r3
    e5dc:	bcc	e3ec <sas_rle_compress+0x68>
    e5e0:	cmp	r9, #0
    e5e4:	beq	e604 <sas_rle_compress+0x280>
    e5e8:	cmp	r9, #64	; 0x40
    e5ec:	cmpne	r9, #32
    e5f0:	bne	e61c <sas_rle_compress+0x298>
    e5f4:	mov	r0, #1
    e5f8:	cmp	r6, #1
    e5fc:	bhi	e624 <sas_rle_compress+0x2a0>
    e600:	b	e614 <sas_rle_compress+0x290>
    e604:	mov	r0, #1
    e608:	mov	r9, #0
    e60c:	cmp	r6, #1
    e610:	bhi	e624 <sas_rle_compress+0x2a0>
    e614:	mov	r5, r4
    e618:	b	e708 <sas_rle_compress+0x384>
    e61c:	cmp	r6, #3
    e620:	bcc	e700 <sas_rle_compress+0x37c>
    e624:	cmp	ip, #0
    e628:	beq	e6a0 <sas_rle_compress+0x31c>
    e62c:	movw	sl, #4159	; 0x103f
    e630:	add	r5, ip, r8
    e634:	str	r8, [sp, #16]
    e638:	cmp	r7, sl
    e63c:	str	r5, [sp, #20]
    e640:	bcc	e67c <sas_rle_compress+0x2f8>
    e644:	movw	r8, #4158	; 0x103e
    e648:	mov	r0, r5
    e64c:	movw	r1, #4161	; 0x1041
    e650:	movw	r2, #65295	; 0xff0f
    e654:	add	r0, r0, #2
    e658:	strh	r2, [r5], r1
    e65c:	mov	r1, r4
    e660:	movw	r2, #4159	; 0x103f
    e664:	bl	48b8 <memcpy@plt>
    e668:	sub	r7, r7, sl
    e66c:	add	r4, r4, sl
    e670:	mov	r0, r5
    e674:	cmp	r7, r8
    e678:	bhi	e64c <sas_rle_compress+0x2c8>
    e67c:	cmp	r7, #65	; 0x41
    e680:	bcc	e6f0 <sas_rle_compress+0x36c>
    e684:	sub	r0, r7, #64	; 0x40
    e688:	strb	r0, [r5, #1]
    e68c:	ubfx	r0, r0, #8, #4
    e690:	ldr	r8, [sp, #16]
    e694:	strb	r0, [r5]
    e698:	add	r5, r5, #2
    e69c:	b	e838 <sas_rle_compress+0x4b4>
    e6a0:	movw	r1, #4159	; 0x103f
    e6a4:	mov	r0, #0
    e6a8:	cmp	r7, r1
    e6ac:	bcc	e6d8 <sas_rle_compress+0x354>
    e6b0:	sub	r0, r7, r1
    e6b4:	movw	r1, #17633	; 0x44e1
    e6b8:	movt	r1, #64543	; 0xfc1f
    e6bc:	umull	r1, r2, r0, r1
    e6c0:	lsr	r1, r2, #12
    e6c4:	movw	r2, #61377	; 0xefc1
    e6c8:	movt	r2, #65535	; 0xffff
    e6cc:	mla	r7, r1, r2, r0
    e6d0:	movw	r0, #4161	; 0x1041
    e6d4:	mla	r0, r1, r0, r0
    e6d8:	add	r0, r0, r7
    e6dc:	cmp	r7, #64	; 0x40
    e6e0:	addhi	r0, r0, #1
    e6e4:	cmp	r7, #0
    e6e8:	addne	r0, r0, #1
    e6ec:	b	e858 <sas_rle_compress+0x4d4>
    e6f0:	cmp	r7, #49	; 0x31
    e6f4:	bcc	e820 <sas_rle_compress+0x49c>
    e6f8:	ldr	r8, [sp, #16]
    e6fc:	b	e830 <sas_rle_compress+0x4ac>
    e700:	mov	r5, r4
    e704:	mov	r0, r6
    e708:	add	r4, r7, r0
    e70c:	cmp	ip, #0
    e710:	beq	e788 <sas_rle_compress+0x404>
    e714:	movw	r7, #4159	; 0x103f
    e718:	add	r6, ip, r8
    e71c:	str	r8, [sp, #16]
    e720:	cmp	r4, r7
    e724:	str	r6, [sp, #24]
    e728:	bcc	e764 <sas_rle_compress+0x3e0>
    e72c:	movw	r9, #4161	; 0x1041
    e730:	movw	sl, #65295	; 0xff0f
    e734:	movw	r8, #4158	; 0x103e
    e738:	mov	r0, r6
    e73c:	add	r0, r0, #2
    e740:	mov	r1, r5
    e744:	movw	r2, #4159	; 0x103f
    e748:	strh	sl, [r6], r9
    e74c:	bl	48b8 <memcpy@plt>
    e750:	sub	r4, r4, r7
    e754:	add	r5, r5, r7
    e758:	mov	r0, r6
    e75c:	cmp	r4, r8
    e760:	bhi	e73c <sas_rle_compress+0x3b8>
    e764:	cmp	r4, #65	; 0x41
    e768:	bcc	e7d8 <sas_rle_compress+0x454>
    e76c:	sub	r0, r4, #64	; 0x40
    e770:	strb	r0, [r6, #1]
    e774:	ubfx	r0, r0, #8, #4
    e778:	ldr	r8, [sp, #16]
    e77c:	strb	r0, [r6]
    e780:	add	r6, r6, #2
    e784:	b	e7f8 <sas_rle_compress+0x474>
    e788:	movw	r1, #4159	; 0x103f
    e78c:	mov	r0, #0
    e790:	cmp	r4, r1
    e794:	bcc	e7c0 <sas_rle_compress+0x43c>
    e798:	sub	r0, r4, r1
    e79c:	movw	r1, #17633	; 0x44e1
    e7a0:	movt	r1, #64543	; 0xfc1f
    e7a4:	umull	r1, r2, r0, r1
    e7a8:	lsr	r1, r2, #12
    e7ac:	movw	r2, #61377	; 0xefc1
    e7b0:	movt	r2, #65535	; 0xffff
    e7b4:	mla	r4, r1, r2, r0
    e7b8:	movw	r0, #4161	; 0x1041
    e7bc:	mla	r0, r1, r0, r0
    e7c0:	add	r0, r0, r4
    e7c4:	cmp	r4, #64	; 0x40
    e7c8:	addhi	r0, r0, #1
    e7cc:	cmp	r4, #0
    e7d0:	addne	r0, r0, #1
    e7d4:	b	e814 <sas_rle_compress+0x490>
    e7d8:	ldr	r8, [sp, #16]
    e7dc:	cmp	r4, #49	; 0x31
    e7e0:	bcs	e7f0 <sas_rle_compress+0x46c>
    e7e4:	cmp	r4, #33	; 0x21
    e7e8:	cmpcc	r4, #17
    e7ec:	bcc	e87c <sas_rle_compress+0x4f8>
    e7f0:	add	r0, r4, #127	; 0x7f
    e7f4:	strb	r0, [r6], #1
    e7f8:	mov	r0, r6
    e7fc:	mov	r1, r5
    e800:	mov	r2, r4
    e804:	bl	48b8 <memcpy@plt>
    e808:	ldr	r1, [sp, #24]
    e80c:	add	r0, r6, r4
    e810:	sub	r0, r0, r1
    e814:	add	r0, r0, r8
    e818:	sub	sp, fp, #28
    e81c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e820:	ldr	r8, [sp, #16]
    e824:	cmp	r7, #33	; 0x21
    e828:	cmpcc	r7, #17
    e82c:	bcc	e888 <sas_rle_compress+0x504>
    e830:	add	r0, r7, #127	; 0x7f
    e834:	strb	r0, [r5], #1
    e838:	mov	r0, r5
    e83c:	mov	r1, r4
    e840:	mov	r2, r7
    e844:	bl	48b8 <memcpy@plt>
    e848:	ldr	r1, [sp, #20]
    e84c:	ldr	ip, [sp, #24]
    e850:	add	r0, r5, r7
    e854:	sub	r0, r0, r1
    e858:	add	r4, r0, r8
    e85c:	mov	r0, ip
    e860:	mov	r2, r9
    e864:	mov	r3, r6
    e868:	mov	r1, r4
    e86c:	bl	e894 <sas_rle_insert_run>
    e870:	add	r0, r4, r0
    e874:	sub	sp, fp, #28
    e878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e87c:	cmp	r4, #0
    e880:	bne	e7f0 <sas_rle_compress+0x46c>
    e884:	b	e7f8 <sas_rle_compress+0x474>
    e888:	cmp	r7, #0
    e88c:	bne	e830 <sas_rle_compress+0x4ac>
    e890:	b	e838 <sas_rle_compress+0x4b4>

0000e894 <sas_rle_insert_run>:
    e894:	cmp	r0, #0
    e898:	beq	e8dc <sas_rle_insert_run+0x48>
    e89c:	cmp	r2, #0
    e8a0:	add	r0, r0, r1
    e8a4:	cmpne	r2, #64	; 0x40
    e8a8:	bne	e928 <sas_rle_insert_run+0x94>
    e8ac:	cmp	r3, #18
    e8b0:	bcc	e8f8 <sas_rle_insert_run+0x64>
    e8b4:	sub	r3, r3, #17
    e8b8:	cmp	r2, #0
    e8bc:	beq	e984 <sas_rle_insert_run+0xf0>
    e8c0:	cmp	r2, #64	; 0x40
    e8c4:	beq	e98c <sas_rle_insert_run+0xf8>
    e8c8:	cmp	r2, #32
    e8cc:	mov	r1, r0
    e8d0:	bne	e9a4 <sas_rle_insert_run+0x110>
    e8d4:	mov	r1, #96	; 0x60
    e8d8:	b	e990 <sas_rle_insert_run+0xfc>
    e8dc:	cmp	r2, #64	; 0x40
    e8e0:	cmpne	r2, #32
    e8e4:	bne	e960 <sas_rle_insert_run+0xcc>
    e8e8:	mov	r0, #1
    e8ec:	cmp	r3, #17
    e8f0:	movwhi	r0, #2
    e8f4:	bx	lr
    e8f8:	cmp	r3, #2
    e8fc:	mov	r1, r0
    e900:	bcc	e9c8 <sas_rle_insert_run+0x134>
    e904:	cmp	r2, #0
    e908:	beq	e9d0 <sas_rle_insert_run+0x13c>
    e90c:	cmp	r2, #32
    e910:	beq	e9d8 <sas_rle_insert_run+0x144>
    e914:	cmp	r2, #64	; 0x40
    e918:	mov	r1, r0
    e91c:	bne	e9c8 <sas_rle_insert_run+0x134>
    e920:	sub	r2, r3, #50	; 0x32
    e924:	b	e9dc <sas_rle_insert_run+0x148>
    e928:	cmp	r2, #32
    e92c:	beq	e8ac <sas_rle_insert_run+0x18>
    e930:	cmp	r3, #19
    e934:	bcc	e9b0 <sas_rle_insert_run+0x11c>
    e938:	sub	r1, r3, #18
    e93c:	strb	r2, [r0, #2]
    e940:	mov	r2, #4
    e944:	strb	r1, [r0, #1]
    e948:	lsr	r1, r1, #8
    e94c:	bfi	r1, r2, #4, #28
    e950:	strb	r1, [r0]
    e954:	add	r1, r0, #3
    e958:	sub	r0, r1, r0
    e95c:	bx	lr
    e960:	mov	r1, #1
    e964:	cmp	r3, #17
    e968:	mov	r0, #2
    e96c:	movwhi	r1, #2
    e970:	cmp	r3, #18
    e974:	movwhi	r0, #3
    e978:	cmp	r2, #0
    e97c:	moveq	r0, r1
    e980:	bx	lr
    e984:	mov	r1, #112	; 0x70
    e988:	b	e990 <sas_rle_insert_run+0xfc>
    e98c:	mov	r1, #80	; 0x50
    e990:	lsr	r2, r3, #8
    e994:	and	r2, r2, #15
    e998:	orr	r2, r2, r1
    e99c:	mov	r1, r0
    e9a0:	strb	r2, [r1], #1
    e9a4:	strb	r3, [r1], #1
    e9a8:	sub	r0, r1, r0
    e9ac:	bx	lr
    e9b0:	cmp	r3, #3
    e9b4:	mov	r1, r0
    e9b8:	subcs	r1, r3, #67	; 0x43
    e9bc:	strbcs	r2, [r0, #1]
    e9c0:	strbcs	r1, [r0]
    e9c4:	addcs	r1, r0, #2
    e9c8:	sub	r0, r1, r0
    e9cc:	bx	lr
    e9d0:	sub	r2, r3, #18
    e9d4:	b	e9dc <sas_rle_insert_run+0x148>
    e9d8:	sub	r2, r3, #34	; 0x22
    e9dc:	mov	r1, r0
    e9e0:	strb	r2, [r1], #1
    e9e4:	sub	r0, r1, r0
    e9e8:	bx	lr

0000e9ec <xport_namestr_bswap>:
    e9ec:	push	{r4, sl, fp, lr}
    e9f0:	add	fp, sp, #8
    e9f4:	mov	r4, r0
    e9f8:	bl	4858 <machine_is_little_endian@plt>
    e9fc:	cmp	r0, #0
    ea00:	popeq	{r4, sl, fp, pc}
    ea04:	ldrh	r0, [r4]
    ea08:	bl	484c <byteswap2@plt>
    ea0c:	strh	r0, [r4]
    ea10:	ldrh	r0, [r4, #2]
    ea14:	bl	484c <byteswap2@plt>
    ea18:	strh	r0, [r4, #2]
    ea1c:	ldrh	r0, [r4, #4]
    ea20:	bl	484c <byteswap2@plt>
    ea24:	strh	r0, [r4, #4]
    ea28:	ldrh	r0, [r4, #6]
    ea2c:	bl	484c <byteswap2@plt>
    ea30:	strh	r0, [r4, #6]
    ea34:	ldrh	r0, [r4, #64]	; 0x40
    ea38:	bl	484c <byteswap2@plt>
    ea3c:	strh	r0, [r4, #64]	; 0x40
    ea40:	ldrh	r0, [r4, #66]	; 0x42
    ea44:	bl	484c <byteswap2@plt>
    ea48:	strh	r0, [r4, #66]	; 0x42
    ea4c:	ldrh	r0, [r4, #68]	; 0x44
    ea50:	bl	484c <byteswap2@plt>
    ea54:	strh	r0, [r4, #68]	; 0x44
    ea58:	ldrh	r0, [r4, #80]	; 0x50
    ea5c:	bl	484c <byteswap2@plt>
    ea60:	strh	r0, [r4, #80]	; 0x50
    ea64:	ldrh	r0, [r4, #82]	; 0x52
    ea68:	bl	484c <byteswap2@plt>
    ea6c:	strh	r0, [r4, #82]	; 0x52
    ea70:	ldr	r0, [r4, #84]	; 0x54
    ea74:	bl	4768 <byteswap4@plt>
    ea78:	str	r0, [r4, #84]	; 0x54
    ea7c:	ldrh	r0, [r4, #120]	; 0x78
    ea80:	bl	484c <byteswap2@plt>
    ea84:	strh	r0, [r4, #120]	; 0x78
    ea88:	pop	{r4, sl, fp, pc}

0000ea8c <readstat_parse_xport>:
    ea8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ea90:	add	fp, sp, #28
    ea94:	sub	sp, sp, #268	; 0x10c
    ea98:	ldr	sl, [r0, #32]
    ea9c:	mov	r5, r1
    eaa0:	mov	r7, r0
    eaa4:	mov	r0, #1
    eaa8:	mov	r1, #384	; 0x180
    eaac:	mov	r6, r2
    eab0:	mov	r8, #1
    eab4:	bl	472c <calloc@plt>
    eab8:	mov	r4, r0
    eabc:	add	r0, r7, #16
    eac0:	mov	r1, #48	; 0x30
    eac4:	vld1.32	{d16-d17}, [r0]
    eac8:	mov	r0, r7
    eacc:	mov	r2, r4
    ead0:	add	r7, r7, #36	; 0x24
    ead4:	vld1.32	{d18-d19}, [r0], r1
    ead8:	add	r1, r4, #16
    eadc:	vst1.32	{d16-d17}, [r1]
    eae0:	mov	r1, #68	; 0x44
    eae4:	vst1.32	{d18-d19}, [r2], r1
    eae8:	ldm	r7, {r1, r3, r7}
    eaec:	str	sl, [r4, #52]	; 0x34
    eaf0:	str	r6, [r4, #36]	; 0x24
    eaf4:	str	r1, [r4, #40]	; 0x28
    eaf8:	str	r3, [r4, #44]	; 0x2c
    eafc:	str	r7, [r2]
    eb00:	ldr	r0, [r0]
    eb04:	cmp	r0, #1
    eb08:	strge	r0, [r4, #72]	; 0x48
    eb0c:	mov	r0, r5
    eb10:	ldr	r2, [sl]
    eb14:	ldr	r1, [sl, #20]
    eb18:	blx	r2
    eb1c:	cmn	r0, #1
    eb20:	beq	f550 <readstat_parse_xport+0xac4>
    eb24:	ldr	r3, [sl, #8]
    eb28:	ldr	r2, [sl, #20]
    eb2c:	mov	r0, #0
    eb30:	mov	r1, #2
    eb34:	blx	r3
    eb38:	cmn	r0, #1
    eb3c:	str	r0, [r4, #32]
    eb40:	beq	f54c <readstat_parse_xport+0xac0>
    eb44:	ldr	r3, [sl, #8]
    eb48:	ldr	r2, [sl, #20]
    eb4c:	mov	r0, #0
    eb50:	mov	r1, #0
    eb54:	blx	r3
    eb58:	cmn	r0, #1
    eb5c:	beq	f54c <readstat_parse_xport+0xac0>
    eb60:	ldr	r5, [r4, #40]	; 0x28
    eb64:	cmp	r5, #0
    eb68:	ldrne	r6, [r4, #44]	; 0x2c
    eb6c:	cmpne	r6, #0
    eb70:	bne	ec38 <readstat_parse_xport+0x1ac>
    eb74:	ldr	r0, [r4, #52]	; 0x34
    eb78:	mov	r1, #80	; 0x50
    eb7c:	ldr	r3, [r0, #12]
    eb80:	ldr	r2, [r0, #20]
    eb84:	add	r0, sp, #120	; 0x78
    eb88:	blx	r3
    eb8c:	mov	r8, #2
    eb90:	cmp	r0, #80	; 0x50
    eb94:	blt	f550 <readstat_parse_xport+0xac4>
    eb98:	add	r2, sp, #72	; 0x48
    eb9c:	mov	r1, #0
    eba0:	vmov.i32	q8, #0	; 0x00000000
    eba4:	str	r1, [sp, #104]	; 0x68
    eba8:	strb	r1, [sp, #200]	; 0xc8
    ebac:	mov	r1, #28
    ebb0:	mov	r3, r2
    ebb4:	add	r0, r2, #16
    ebb8:	add	r7, r2, #24
    ebbc:	add	r6, r2, #20
    ebc0:	vst1.64	{d16-d17}, [r3], r1
    ebc4:	add	r1, r2, #32
    ebc8:	vst1.64	{d16-d17}, [r0]
    ebcc:	stm	sp, {r0, r6, r7}
    ebd0:	add	r0, sp, #120	; 0x78
    ebd4:	str	r3, [sp, #12]
    ebd8:	str	r1, [sp, #16]
    ebdc:	add	r3, r2, #12
    ebe0:	ldr	r1, [pc, #3404]	; f934 <readstat_parse_xport+0xea8>
    ebe4:	add	r1, pc, r1
    ebe8:	bl	4be8 <__isoc99_sscanf@plt>
    ebec:	mov	r8, #5
    ebf0:	cmp	r0, #1
    ebf4:	ble	f550 <readstat_parse_xport+0xac4>
    ebf8:	ldr	r1, [pc, #3384]	; f938 <readstat_parse_xport+0xeac>
    ebfc:	add	r9, sp, #72	; 0x48
    ec00:	mov	r0, r9
    ec04:	add	r1, pc, r1
    ec08:	bl	47b0 <strcmp@plt>
    ec0c:	cmp	r0, #0
    ec10:	beq	ec68 <readstat_parse_xport+0x1dc>
    ec14:	ldr	r1, [pc, #3360]	; f93c <readstat_parse_xport+0xeb0>
    ec18:	add	r0, sp, #72	; 0x48
    ec1c:	add	r1, pc, r1
    ec20:	bl	47b0 <strcmp@plt>
    ec24:	mov	r8, #24
    ec28:	cmp	r0, #0
    ec2c:	bne	f550 <readstat_parse_xport+0xac4>
    ec30:	mov	r0, #8
    ec34:	b	ec6c <readstat_parse_xport+0x1e0>
    ec38:	mov	r0, r5
    ec3c:	mov	r1, r6
    ec40:	bl	47b0 <strcmp@plt>
    ec44:	cmp	r0, #0
    ec48:	beq	eb74 <readstat_parse_xport+0xe8>
    ec4c:	mov	r0, r6
    ec50:	mov	r1, r5
    ec54:	bl	4a98 <iconv_open@plt>
    ec58:	cmn	r0, #1
    ec5c:	beq	ee20 <readstat_parse_xport+0x394>
    ec60:	str	r0, [r4, #48]	; 0x30
    ec64:	b	eb74 <readstat_parse_xport+0xe8>
    ec68:	mov	r0, #5
    ec6c:	str	r0, [r4, #380]	; 0x17c
    ec70:	mov	r1, #1
    ec74:	ldr	r0, [r4, #52]	; 0x34
    ec78:	ldr	r3, [r0, #8]
    ec7c:	ldr	r2, [r0, #20]
    ec80:	mov	r0, #80	; 0x50
    ec84:	blx	r3
    ec88:	cmn	r0, #1
    ec8c:	beq	f54c <readstat_parse_xport+0xac0>
    ec90:	vmov.i32	q8, #0	; 0x00000000
    ec94:	add	r0, r9, #28
    ec98:	mov	r1, r9
    ec9c:	vst1.32	{d16-d17}, [r0]
    eca0:	add	r0, r9, #16
    eca4:	str	r0, [sp, #64]	; 0x40
    eca8:	vst1.64	{d16-d17}, [r0]
    ecac:	mov	r0, #32
    ecb0:	vst1.64	{d16-d17}, [r1], r0
    ecb4:	mvn	r0, #0
    ecb8:	str	r0, [r1]
    ecbc:	ldr	r0, [r4, #52]	; 0x34
    ecc0:	mov	r1, #80	; 0x50
    ecc4:	ldr	r3, [r0, #12]
    ecc8:	ldr	r2, [r0, #20]
    eccc:	add	r0, sp, #120	; 0x78
    ecd0:	blx	r3
    ecd4:	mov	r8, #2
    ecd8:	cmp	r0, #80	; 0x50
    ecdc:	blt	ee98 <readstat_parse_xport+0x40c>
    ece0:	mov	r5, #0
    ece4:	orr	r0, r9, #4
    ece8:	add	r1, r9, #8
    ecec:	add	r2, r9, #20
    ecf0:	str	r9, [sp, #12]
    ecf4:	add	r7, sp, #68	; 0x44
    ecf8:	str	r2, [sp]
    ecfc:	str	r0, [sp, #8]
    ed00:	strb	r5, [sp, #200]	; 0xc8
    ed04:	str	r1, [sp, #4]
    ed08:	add	r2, r9, #12
    ed0c:	add	r0, sp, #120	; 0x78
    ed10:	mov	r3, r7
    ed14:	ldr	r1, [pc, #3108]	; f940 <readstat_parse_xport+0xeb4>
    ed18:	add	r1, pc, r1
    ed1c:	bl	4be8 <__isoc99_sscanf@plt>
    ed20:	ldr	r6, [pc, #3100]	; f944 <readstat_parse_xport+0xeb8>
    ed24:	mov	r0, r7
    ed28:	ldr	r6, [pc, r6]
    ed2c:	mov	r1, r6
    ed30:	bl	47b0 <strcmp@plt>
    ed34:	cmp	r0, #0
    ed38:	beq	ee74 <readstat_parse_xport+0x3e8>
    ed3c:	add	r1, r6, #4
    ed40:	add	r0, sp, #68	; 0x44
    ed44:	bl	47b0 <strcmp@plt>
    ed48:	cmp	r0, #0
    ed4c:	beq	ee28 <readstat_parse_xport+0x39c>
    ed50:	add	r1, r6, #8
    ed54:	add	r0, sp, #68	; 0x44
    ed58:	bl	47b0 <strcmp@plt>
    ed5c:	cmp	r0, #0
    ed60:	beq	ee30 <readstat_parse_xport+0x3a4>
    ed64:	add	r1, r6, #12
    ed68:	add	r0, sp, #68	; 0x44
    ed6c:	bl	47b0 <strcmp@plt>
    ed70:	cmp	r0, #0
    ed74:	beq	ee38 <readstat_parse_xport+0x3ac>
    ed78:	add	r1, r6, #16
    ed7c:	add	r0, sp, #68	; 0x44
    ed80:	bl	47b0 <strcmp@plt>
    ed84:	cmp	r0, #0
    ed88:	beq	ee40 <readstat_parse_xport+0x3b4>
    ed8c:	add	r1, r6, #20
    ed90:	add	r0, sp, #68	; 0x44
    ed94:	bl	47b0 <strcmp@plt>
    ed98:	cmp	r0, #0
    ed9c:	beq	ee48 <readstat_parse_xport+0x3bc>
    eda0:	add	r1, r6, #24
    eda4:	add	r0, sp, #68	; 0x44
    eda8:	bl	47b0 <strcmp@plt>
    edac:	cmp	r0, #0
    edb0:	beq	ee50 <readstat_parse_xport+0x3c4>
    edb4:	add	r1, r6, #28
    edb8:	add	r0, sp, #68	; 0x44
    edbc:	bl	47b0 <strcmp@plt>
    edc0:	cmp	r0, #0
    edc4:	beq	ee58 <readstat_parse_xport+0x3cc>
    edc8:	add	r1, r6, #32
    edcc:	add	r0, sp, #68	; 0x44
    edd0:	bl	47b0 <strcmp@plt>
    edd4:	cmp	r0, #0
    edd8:	beq	ee60 <readstat_parse_xport+0x3d4>
    eddc:	add	r1, r6, #36	; 0x24
    ede0:	add	r0, sp, #68	; 0x44
    ede4:	bl	47b0 <strcmp@plt>
    ede8:	cmp	r0, #0
    edec:	beq	ee68 <readstat_parse_xport+0x3dc>
    edf0:	add	r1, r6, #40	; 0x28
    edf4:	add	r0, sp, #68	; 0x44
    edf8:	bl	47b0 <strcmp@plt>
    edfc:	cmp	r0, #0
    ee00:	beq	ee70 <readstat_parse_xport+0x3e4>
    ee04:	add	r1, r6, #44	; 0x2c
    ee08:	add	r0, sp, #68	; 0x44
    ee0c:	bl	47b0 <strcmp@plt>
    ee10:	cmp	r0, #0
    ee14:	bne	ee78 <readstat_parse_xport+0x3ec>
    ee18:	mov	r5, #11
    ee1c:	b	ee74 <readstat_parse_xport+0x3e8>
    ee20:	mov	r8, #7
    ee24:	b	f550 <readstat_parse_xport+0xac4>
    ee28:	mov	r5, #1
    ee2c:	b	ee74 <readstat_parse_xport+0x3e8>
    ee30:	mov	r5, #2
    ee34:	b	ee74 <readstat_parse_xport+0x3e8>
    ee38:	mov	r5, #3
    ee3c:	b	ee74 <readstat_parse_xport+0x3e8>
    ee40:	mov	r5, #4
    ee44:	b	ee74 <readstat_parse_xport+0x3e8>
    ee48:	mov	r5, #5
    ee4c:	b	ee74 <readstat_parse_xport+0x3e8>
    ee50:	mov	r5, #6
    ee54:	b	ee74 <readstat_parse_xport+0x3e8>
    ee58:	mov	r5, #7
    ee5c:	b	ee74 <readstat_parse_xport+0x3e8>
    ee60:	mov	r5, #8
    ee64:	b	ee74 <readstat_parse_xport+0x3e8>
    ee68:	mov	r5, #9
    ee6c:	b	ee74 <readstat_parse_xport+0x3e8>
    ee70:	mov	r5, #10
    ee74:	str	r5, [sp, #88]	; 0x58
    ee78:	ldr	r0, [sp, #92]	; 0x5c
    ee7c:	cmp	r0, #59	; 0x3b
    ee80:	addle	r0, r0, #100	; 0x64
    ee84:	strle	r0, [sp, #92]	; 0x5c
    ee88:	add	r0, sp, #72	; 0x48
    ee8c:	bl	47f8 <mktime@plt>
    ee90:	mov	r8, #0
    ee94:	str	r0, [r4, #56]	; 0x38
    ee98:	cmp	r8, #0
    ee9c:	bne	f550 <readstat_parse_xport+0xac4>
    eea0:	ldr	r0, [r4, #52]	; 0x34
    eea4:	mov	r1, #80	; 0x50
    eea8:	ldr	r3, [r0, #12]
    eeac:	ldr	r2, [r0, #20]
    eeb0:	add	r0, sp, #120	; 0x78
    eeb4:	blx	r3
    eeb8:	mov	r8, #2
    eebc:	cmp	r0, #80	; 0x50
    eec0:	blt	f550 <readstat_parse_xport+0xac4>
    eec4:	ldr	r2, [sp, #64]	; 0x40
    eec8:	mov	r0, #0
    eecc:	vmov.i32	q8, #0	; 0x00000000
    eed0:	mov	r1, r9
    eed4:	add	r7, r9, #24
    eed8:	add	r6, r9, #20
    eedc:	add	r5, r9, #12
    eee0:	str	r0, [sp, #104]	; 0x68
    eee4:	strb	r0, [sp, #200]	; 0xc8
    eee8:	mov	r0, #28
    eeec:	mov	r3, r5
    eef0:	vst1.64	{d16-d17}, [r1], r0
    eef4:	add	r0, r9, #32
    eef8:	vst1.64	{d16-d17}, [r2]
    eefc:	stm	sp, {r2, r6, r7}
    ef00:	str	r1, [sp, #12]
    ef04:	str	r0, [sp, #60]	; 0x3c
    ef08:	str	r0, [sp, #16]
    ef0c:	add	r0, sp, #120	; 0x78
    ef10:	mov	r2, r9
    ef14:	ldr	r1, [pc, #2604]	; f948 <readstat_parse_xport+0xebc>
    ef18:	add	r1, pc, r1
    ef1c:	bl	4be8 <__isoc99_sscanf@plt>
    ef20:	mov	r8, #5
    ef24:	cmp	r0, #1
    ef28:	ble	f550 <readstat_parse_xport+0xac4>
    ef2c:	ldr	r0, [r4, #380]	; 0x17c
    ef30:	cmp	r0, #8
    ef34:	beq	ef50 <readstat_parse_xport+0x4c4>
    ef38:	cmp	r0, #5
    ef3c:	bne	ef6c <readstat_parse_xport+0x4e0>
    ef40:	ldr	r1, [pc, #2564]	; f94c <readstat_parse_xport+0xec0>
    ef44:	add	r0, sp, #72	; 0x48
    ef48:	add	r1, pc, r1
    ef4c:	b	ef5c <readstat_parse_xport+0x4d0>
    ef50:	ldr	r1, [pc, #2552]	; f950 <readstat_parse_xport+0xec4>
    ef54:	add	r0, sp, #72	; 0x48
    ef58:	add	r1, pc, r1
    ef5c:	bl	47b0 <strcmp@plt>
    ef60:	mov	r8, #5
    ef64:	cmp	r0, #0
    ef68:	bne	f550 <readstat_parse_xport+0xac4>
    ef6c:	ldr	r0, [r4, #52]	; 0x34
    ef70:	mov	r1, #80	; 0x50
    ef74:	ldr	r3, [r0, #12]
    ef78:	ldr	r2, [r0, #20]
    ef7c:	add	r0, sp, #120	; 0x78
    ef80:	blx	r3
    ef84:	mov	r8, #2
    ef88:	cmp	r0, #80	; 0x50
    ef8c:	blt	f550 <readstat_parse_xport+0xac4>
    ef90:	ldr	r2, [sp, #64]	; 0x40
    ef94:	mov	r0, #0
    ef98:	vmov.i32	q8, #0	; 0x00000000
    ef9c:	mov	r1, r9
    efa0:	mov	r3, r5
    efa4:	str	r0, [sp, #104]	; 0x68
    efa8:	strb	r0, [sp, #200]	; 0xc8
    efac:	mov	r0, #28
    efb0:	vst1.64	{d16-d17}, [r1], r0
    efb4:	vst1.64	{d16-d17}, [r2]
    efb8:	stm	sp, {r2, r6, r7}
    efbc:	str	r1, [sp, #12]
    efc0:	mov	r2, r9
    efc4:	ldr	r0, [sp, #60]	; 0x3c
    efc8:	str	r0, [sp, #16]
    efcc:	add	r0, sp, #120	; 0x78
    efd0:	ldr	r1, [pc, #2428]	; f954 <readstat_parse_xport+0xec8>
    efd4:	add	r1, pc, r1
    efd8:	bl	4be8 <__isoc99_sscanf@plt>
    efdc:	mov	r8, #5
    efe0:	cmp	r0, #1
    efe4:	ble	f550 <readstat_parse_xport+0xac4>
    efe8:	ldr	r0, [r4, #380]	; 0x17c
    efec:	cmp	r0, #8
    eff0:	beq	f00c <readstat_parse_xport+0x580>
    eff4:	cmp	r0, #5
    eff8:	bne	f028 <readstat_parse_xport+0x59c>
    effc:	ldr	r1, [pc, #2388]	; f958 <readstat_parse_xport+0xecc>
    f000:	add	r0, sp, #72	; 0x48
    f004:	add	r1, pc, r1
    f008:	b	f018 <readstat_parse_xport+0x58c>
    f00c:	ldr	r1, [pc, #2376]	; f95c <readstat_parse_xport+0xed0>
    f010:	add	r0, sp, #72	; 0x48
    f014:	add	r1, pc, r1
    f018:	bl	47b0 <strcmp@plt>
    f01c:	mov	r8, #5
    f020:	cmp	r0, #0
    f024:	bne	f550 <readstat_parse_xport+0xac4>
    f028:	ldr	r0, [r4, #52]	; 0x34
    f02c:	add	r8, sp, #120	; 0x78
    f030:	mov	r1, #80	; 0x50
    f034:	ldr	r3, [r0, #12]
    f038:	ldr	r2, [r0, #20]
    f03c:	mov	r0, r8
    f040:	blx	r3
    f044:	cmp	r0, #79	; 0x4f
    f048:	bgt	f054 <readstat_parse_xport+0x5c8>
    f04c:	mov	r8, #2
    f050:	b	f550 <readstat_parse_xport+0xac4>
    f054:	mov	r0, #0
    f058:	ldr	r1, [r4, #380]	; 0x17c
    f05c:	mov	r3, #32
    f060:	add	r2, r8, #8
    f064:	str	r5, [sp, #56]	; 0x38
    f068:	strb	r0, [sp, #200]	; 0xc8
    f06c:	ldr	r0, [r4, #48]	; 0x30
    f070:	cmp	r1, #5
    f074:	mov	r1, #129	; 0x81
    f078:	str	r0, [sp]
    f07c:	add	r0, r4, #245	; 0xf5
    f080:	movweq	r3, #8
    f084:	mov	r5, r0
    f088:	bl	4b94 <readstat_convert@plt>
    f08c:	mov	r8, r0
    f090:	cmp	r0, #0
    f094:	bne	f550 <readstat_parse_xport+0xac4>
    f098:	ldr	r0, [r4, #52]	; 0x34
    f09c:	add	r8, sp, #120	; 0x78
    f0a0:	mov	r1, #80	; 0x50
    f0a4:	ldr	r3, [r0, #12]
    f0a8:	ldr	r2, [r0, #20]
    f0ac:	mov	r0, r8
    f0b0:	blx	r3
    f0b4:	cmp	r0, #79	; 0x4f
    f0b8:	ble	f04c <readstat_parse_xport+0x5c0>
    f0bc:	mov	r0, #0
    f0c0:	add	r2, r8, #32
    f0c4:	mov	r1, #161	; 0xa1
    f0c8:	mov	r3, #40	; 0x28
    f0cc:	strb	r0, [sp, #200]	; 0xc8
    f0d0:	ldr	r0, [r4, #48]	; 0x30
    f0d4:	str	r0, [sp]
    f0d8:	add	r0, r4, #84	; 0x54
    f0dc:	str	r0, [sp, #52]	; 0x34
    f0e0:	bl	4b94 <readstat_convert@plt>
    f0e4:	mov	r8, r0
    f0e8:	cmp	r0, #0
    f0ec:	bne	f550 <readstat_parse_xport+0xac4>
    f0f0:	ldr	r0, [r4, #52]	; 0x34
    f0f4:	mov	r1, #80	; 0x50
    f0f8:	ldr	r3, [r0, #12]
    f0fc:	ldr	r2, [r0, #20]
    f100:	add	r0, sp, #120	; 0x78
    f104:	blx	r3
    f108:	mov	r8, #2
    f10c:	cmp	r0, #80	; 0x50
    f110:	blt	f550 <readstat_parse_xport+0xac4>
    f114:	ldr	r2, [sp, #64]	; 0x40
    f118:	mov	r0, #0
    f11c:	vmov.i32	q8, #0	; 0x00000000
    f120:	mov	r1, r9
    f124:	str	r0, [sp, #104]	; 0x68
    f128:	strb	r0, [sp, #200]	; 0xc8
    f12c:	mov	r0, #28
    f130:	vst1.64	{d16-d17}, [r1], r0
    f134:	vst1.64	{d16-d17}, [r2]
    f138:	stm	sp, {r2, r6, r7}
    f13c:	str	r1, [sp, #12]
    f140:	mov	r2, r9
    f144:	ldr	r0, [sp, #60]	; 0x3c
    f148:	str	r0, [sp, #16]
    f14c:	add	r0, sp, #120	; 0x78
    f150:	ldr	r1, [pc, #2056]	; f960 <readstat_parse_xport+0xed4>
    f154:	ldr	r3, [sp, #56]	; 0x38
    f158:	add	r1, pc, r1
    f15c:	bl	4be8 <__isoc99_sscanf@plt>
    f160:	mov	r8, #5
    f164:	cmp	r0, #1
    f168:	ble	f550 <readstat_parse_xport+0xac4>
    f16c:	ldr	r0, [r4, #380]	; 0x17c
    f170:	cmp	r0, #8
    f174:	beq	f190 <readstat_parse_xport+0x704>
    f178:	cmp	r0, #5
    f17c:	bne	f1ac <readstat_parse_xport+0x720>
    f180:	ldr	r1, [pc, #2012]	; f964 <readstat_parse_xport+0xed8>
    f184:	add	r0, sp, #72	; 0x48
    f188:	add	r1, pc, r1
    f18c:	b	f19c <readstat_parse_xport+0x710>
    f190:	ldr	r1, [pc, #2000]	; f968 <readstat_parse_xport+0xedc>
    f194:	add	r0, sp, #72	; 0x48
    f198:	add	r1, pc, r1
    f19c:	bl	47b0 <strcmp@plt>
    f1a0:	mov	r8, #5
    f1a4:	cmp	r0, #0
    f1a8:	bne	f550 <readstat_parse_xport+0xac4>
    f1ac:	ldr	r0, [sp, #88]	; 0x58
    f1b0:	mov	r1, #4
    f1b4:	str	r0, [r4, #64]	; 0x40
    f1b8:	bl	4954 <readstat_calloc@plt>
    f1bc:	cmp	r0, #0
    f1c0:	str	r0, [r4, #376]	; 0x178
    f1c4:	beq	f5c8 <readstat_parse_xport+0xb3c>
    f1c8:	ldr	r2, [r4]
    f1cc:	cmp	r2, #0
    f1d0:	beq	f244 <readstat_parse_xport+0x7b8>
    f1d4:	mvn	r0, #0
    f1d8:	ldr	r3, [sp, #52]	; 0x34
    f1dc:	mov	r1, #0
    f1e0:	str	r0, [sp, #124]	; 0x7c
    f1e4:	str	r0, [sp, #120]	; 0x78
    f1e8:	ldr	r0, [r4, #64]	; 0x40
    f1ec:	str	r0, [sp, #128]	; 0x80
    f1f0:	asr	r0, r0, #31
    f1f4:	str	r0, [sp, #132]	; 0x84
    f1f8:	ldr	r0, [r4, #56]	; 0x38
    f1fc:	str	r0, [sp, #140]	; 0x8c
    f200:	str	r0, [sp, #136]	; 0x88
    f204:	ldr	r0, [r4, #380]	; 0x17c
    f208:	str	r1, [sp, #152]	; 0x98
    f20c:	str	r1, [sp, #156]	; 0x9c
    f210:	str	r5, [sp, #160]	; 0xa0
    f214:	str	r3, [sp, #164]	; 0xa4
    f218:	str	r1, [sp, #168]	; 0xa8
    f21c:	strb	r1, [sp, #172]	; 0xac
    f220:	ldr	r1, [r4, #36]	; 0x24
    f224:	str	r0, [sp, #144]	; 0x90
    f228:	asr	r0, r0, #31
    f22c:	str	r0, [sp, #148]	; 0x94
    f230:	add	r0, sp, #120	; 0x78
    f234:	blx	r2
    f238:	mov	r8, #4
    f23c:	cmp	r0, #0
    f240:	bne	f550 <readstat_parse_xport+0xac4>
    f244:	ldr	r0, [r4, #64]	; 0x40
    f248:	cmp	r0, #1
    f24c:	blt	f43c <readstat_parse_xport+0x9b0>
    f250:	add	r0, sp, #120	; 0x78
    f254:	add	r1, r0, #56	; 0x38
    f258:	str	r1, [sp, #32]
    f25c:	add	r1, r0, #16
    f260:	str	r1, [sp, #36]	; 0x24
    f264:	add	r1, r0, #88	; 0x58
    f268:	add	r0, r0, #8
    f26c:	str	r0, [sp, #24]
    f270:	mov	r0, #0
    f274:	str	r1, [sp, #28]
    f278:	str	r0, [sp, #52]	; 0x34
    f27c:	ldr	r0, [r4, #52]	; 0x34
    f280:	mov	r1, #140	; 0x8c
    f284:	ldr	r3, [r0, #12]
    f288:	ldr	r2, [r0, #20]
    f28c:	add	r0, sp, #120	; 0x78
    f290:	blx	r3
    f294:	cmp	r0, #140	; 0x8c
    f298:	bcc	f04c <readstat_parse_xport+0x5c0>
    f29c:	add	r0, sp, #120	; 0x78
    f2a0:	bl	4a14 <xport_namestr_bswap@plt>
    f2a4:	mov	r0, #1
    f2a8:	movw	r1, #2152	; 0x868
    f2ac:	bl	472c <calloc@plt>
    f2b0:	mov	r5, r0
    f2b4:	ldrh	r0, [sp, #120]	; 0x78
    f2b8:	ldr	r1, [sp, #52]	; 0x34
    f2bc:	ldrh	r2, [sp, #188]	; 0xbc
    f2c0:	subs	r0, r0, #2
    f2c4:	movwne	r0, #5
    f2c8:	cmp	r2, #0
    f2cc:	mov	r2, #3
    f2d0:	strd	r0, [r5]
    f2d4:	ldrh	r0, [sp, #124]	; 0x7c
    f2d8:	ldrh	r1, [sp, #186]	; 0xba
    f2dc:	movweq	r2, #1
    f2e0:	str	r0, [r5, #1596]	; 0x63c
    f2e4:	ldrh	r0, [sp, #184]	; 0xb8
    f2e8:	str	r2, [r5, #2132]	; 0x854
    f2ec:	ldr	r2, [r4, #380]	; 0x17c
    f2f0:	str	r0, [r5, #2136]	; 0x858
    f2f4:	str	r1, [r5, #2140]	; 0x85c
    f2f8:	ldr	r1, [r4, #48]	; 0x30
    f2fc:	add	r0, r5, #8
    f300:	cmp	r2, #5
    f304:	bne	f31c <readstat_parse_xport+0x890>
    f308:	ldr	r2, [sp, #24]
    f30c:	str	r1, [sp]
    f310:	mov	r1, #300	; 0x12c
    f314:	mov	r3, #8
    f318:	b	f32c <readstat_parse_xport+0x8a0>
    f31c:	ldr	r2, [sp, #28]
    f320:	str	r1, [sp]
    f324:	mov	r1, #300	; 0x12c
    f328:	mov	r3, #32
    f32c:	bl	4b94 <readstat_convert@plt>
    f330:	mov	r8, r0
    f334:	cmp	r0, #0
    f338:	bne	f550 <readstat_parse_xport+0xac4>
    f33c:	ldr	r0, [r4, #48]	; 0x30
    f340:	ldr	r2, [sp, #36]	; 0x24
    f344:	mov	r1, #1024	; 0x400
    f348:	mov	r3, #40	; 0x28
    f34c:	str	r0, [sp]
    f350:	add	r0, r5, #564	; 0x234
    f354:	bl	4b94 <readstat_convert@plt>
    f358:	cmp	r0, #0
    f35c:	bne	f5d0 <readstat_parse_xport+0xb44>
    f360:	ldr	r0, [r5, #2136]	; 0x858
    f364:	ldr	r2, [sp, #32]
    f368:	mov	r1, #33	; 0x21
    f36c:	mov	r3, #8
    f370:	str	sp, [sp, #48]	; 0x30
    f374:	str	r0, [sp, #40]	; 0x28
    f378:	ldr	r0, [r5, #2140]	; 0x85c
    f37c:	str	r0, [sp, #44]	; 0x2c
    f380:	mov	r0, #0
    f384:	str	r0, [sp]
    f388:	add	r0, sp, #72	; 0x48
    f38c:	bl	4b94 <readstat_convert@plt>
    f390:	cmp	r0, #0
    f394:	bne	f5d8 <readstat_parse_xport+0xb4c>
    f398:	ldrb	r1, [sp, #72]	; 0x48
    f39c:	add	r0, r5, #308	; 0x134
    f3a0:	cmp	r1, #0
    f3a4:	beq	f3d4 <readstat_parse_xport+0x948>
    f3a8:	ldr	r1, [sp, #44]	; 0x2c
    f3ac:	cmp	r1, #0
    f3b0:	beq	f3e0 <readstat_parse_xport+0x954>
    f3b4:	ldr	r1, [sp, #40]	; 0x28
    f3b8:	str	r1, [sp]
    f3bc:	ldr	r1, [sp, #44]	; 0x2c
    f3c0:	str	r1, [sp, #4]
    f3c4:	mov	r1, #256	; 0x100
    f3c8:	ldr	r2, [pc, #1436]	; f96c <readstat_parse_xport+0xee0>
    f3cc:	add	r2, pc, r2
    f3d0:	b	f410 <readstat_parse_xport+0x984>
    f3d4:	mov	r1, #0
    f3d8:	strb	r1, [r0]
    f3dc:	b	f418 <readstat_parse_xport+0x98c>
    f3e0:	ldr	r1, [sp, #40]	; 0x28
    f3e4:	cmp	r1, #0
    f3e8:	beq	f404 <readstat_parse_xport+0x978>
    f3ec:	ldr	r1, [sp, #40]	; 0x28
    f3f0:	str	r1, [sp]
    f3f4:	mov	r1, #256	; 0x100
    f3f8:	ldr	r2, [pc, #1392]	; f970 <readstat_parse_xport+0xee4>
    f3fc:	add	r2, pc, r2
    f400:	b	f410 <readstat_parse_xport+0x984>
    f404:	ldr	r2, [pc, #1384]	; f974 <readstat_parse_xport+0xee8>
    f408:	mov	r1, #256	; 0x100
    f40c:	add	r2, pc, r2
    f410:	add	r3, sp, #72	; 0x48
    f414:	bl	4bdc <snprintf@plt>
    f418:	ldr	sp, [sp, #48]	; 0x30
    f41c:	ldr	r0, [r4, #376]	; 0x178
    f420:	ldr	r1, [sp, #52]	; 0x34
    f424:	str	r5, [r0, r1, lsl #2]
    f428:	add	r1, r1, #1
    f42c:	ldr	r0, [r4, #64]	; 0x40
    f430:	str	r1, [sp, #52]	; 0x34
    f434:	cmp	r1, r0
    f438:	blt	f27c <readstat_parse_xport+0x7f0>
    f43c:	ldr	r8, [r4, #52]	; 0x34
    f440:	mov	r0, #0
    f444:	mov	r1, #1
    f448:	ldr	r3, [r8, #8]
    f44c:	ldr	r2, [r8, #20]
    f450:	blx	r3
    f454:	cmn	r0, #1
    f458:	beq	f54c <readstat_parse_xport+0xac0>
    f45c:	movw	r1, #26215	; 0x6667
    f460:	movt	r1, #26214	; 0x6666
    f464:	smmul	r1, r0, r1
    f468:	asr	r2, r1, #5
    f46c:	add	r1, r2, r1, lsr #31
    f470:	add	r1, r1, r1, lsl #2
    f474:	sub	r0, r0, r1, lsl #4
    f478:	cmp	r0, #0
    f47c:	beq	f4a0 <readstat_parse_xport+0xa14>
    f480:	ldr	r3, [r8, #8]
    f484:	ldr	r2, [r8, #20]
    f488:	rsb	r0, r0, #80	; 0x50
    f48c:	mov	r1, #1
    f490:	blx	r3
    f494:	cmn	r0, #1
    f498:	mov	r8, #15
    f49c:	beq	f550 <readstat_parse_xport+0xac4>
    f4a0:	ldr	r0, [r4, #380]	; 0x17c
    f4a4:	cmp	r0, #5
    f4a8:	bne	f5e4 <readstat_parse_xport+0xb58>
    f4ac:	ldr	r0, [r4, #52]	; 0x34
    f4b0:	mov	r1, #80	; 0x50
    f4b4:	ldr	r3, [r0, #12]
    f4b8:	ldr	r2, [r0, #20]
    f4bc:	add	r0, sp, #120	; 0x78
    f4c0:	blx	r3
    f4c4:	mov	r8, #2
    f4c8:	cmp	r0, #80	; 0x50
    f4cc:	blt	f550 <readstat_parse_xport+0xac4>
    f4d0:	ldr	r2, [sp, #64]	; 0x40
    f4d4:	mov	r0, #0
    f4d8:	vmov.i32	q8, #0	; 0x00000000
    f4dc:	mov	r1, r9
    f4e0:	str	r0, [sp, #104]	; 0x68
    f4e4:	strb	r0, [sp, #200]	; 0xc8
    f4e8:	mov	r0, #28
    f4ec:	vst1.64	{d16-d17}, [r1], r0
    f4f0:	vst1.64	{d16-d17}, [r2]
    f4f4:	stm	sp, {r2, r6, r7}
    f4f8:	str	r1, [sp, #12]
    f4fc:	mov	r2, r9
    f500:	ldr	r0, [sp, #60]	; 0x3c
    f504:	str	r0, [sp, #16]
    f508:	add	r0, sp, #120	; 0x78
    f50c:	ldr	r1, [pc, #1124]	; f978 <readstat_parse_xport+0xeec>
    f510:	ldr	r3, [sp, #56]	; 0x38
    f514:	add	r1, pc, r1
    f518:	bl	4be8 <__isoc99_sscanf@plt>
    f51c:	mov	r8, #5
    f520:	cmp	r0, #1
    f524:	ble	f550 <readstat_parse_xport+0xac4>
    f528:	ldr	r0, [r4, #380]	; 0x17c
    f52c:	cmp	r0, #8
    f530:	beq	f6b8 <readstat_parse_xport+0xc2c>
    f534:	cmp	r0, #5
    f538:	bne	f6f0 <readstat_parse_xport+0xc64>
    f53c:	ldr	r1, [pc, #1080]	; f97c <readstat_parse_xport+0xef0>
    f540:	add	r0, sp, #72	; 0x48
    f544:	add	r1, pc, r1
    f548:	b	f6c4 <readstat_parse_xport+0xc38>
    f54c:	mov	r8, #15
    f550:	ldr	r1, [sl, #4]
    f554:	ldr	r0, [sl, #20]
    f558:	blx	r1
    f55c:	ldr	r0, [r4, #376]	; 0x178
    f560:	cmp	r0, #0
    f564:	beq	f5a4 <readstat_parse_xport+0xb18>
    f568:	ldr	r2, [r4, #64]	; 0x40
    f56c:	cmp	r2, #1
    f570:	blt	f5a0 <readstat_parse_xport+0xb14>
    f574:	mov	r5, #0
    f578:	ldr	r1, [r0, r5, lsl #2]
    f57c:	cmp	r1, #0
    f580:	beq	f594 <readstat_parse_xport+0xb08>
    f584:	mov	r0, r1
    f588:	bl	4864 <free@plt>
    f58c:	ldr	r2, [r4, #64]	; 0x40
    f590:	ldr	r0, [r4, #376]	; 0x178
    f594:	add	r5, r5, #1
    f598:	cmp	r5, r2
    f59c:	blt	f578 <readstat_parse_xport+0xaec>
    f5a0:	bl	4864 <free@plt>
    f5a4:	ldr	r0, [r4, #48]	; 0x30
    f5a8:	cmp	r0, #0
    f5ac:	beq	f5b4 <readstat_parse_xport+0xb28>
    f5b0:	bl	478c <iconv_close@plt>
    f5b4:	mov	r0, r4
    f5b8:	bl	4864 <free@plt>
    f5bc:	mov	r0, r8
    f5c0:	sub	sp, fp, #28
    f5c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f5c8:	mov	r8, #3
    f5cc:	b	f550 <readstat_parse_xport+0xac4>
    f5d0:	mov	r8, r0
    f5d4:	b	f550 <readstat_parse_xport+0xac4>
    f5d8:	mov	r8, r0
    f5dc:	ldr	sp, [sp, #48]	; 0x30
    f5e0:	b	f550 <readstat_parse_xport+0xac4>
    f5e4:	ldr	r0, [r4, #52]	; 0x34
    f5e8:	mov	r1, #80	; 0x50
    f5ec:	ldr	r3, [r0, #12]
    f5f0:	ldr	r2, [r0, #20]
    f5f4:	add	r0, sp, #120	; 0x78
    f5f8:	blx	r3
    f5fc:	mov	r8, #2
    f600:	cmp	r0, #80	; 0x50
    f604:	blt	f550 <readstat_parse_xport+0xac4>
    f608:	ldr	r2, [sp, #64]	; 0x40
    f60c:	mov	r0, #0
    f610:	vmov.i32	q8, #0	; 0x00000000
    f614:	mov	r1, r9
    f618:	str	r0, [sp, #104]	; 0x68
    f61c:	strb	r0, [sp, #200]	; 0xc8
    f620:	mov	r0, #28
    f624:	vst1.64	{d16-d17}, [r1], r0
    f628:	vst1.64	{d16-d17}, [r2]
    f62c:	stm	sp, {r2, r6, r7}
    f630:	str	r1, [sp, #12]
    f634:	mov	r2, r9
    f638:	ldr	r0, [sp, #60]	; 0x3c
    f63c:	str	r0, [sp, #16]
    f640:	add	r0, sp, #120	; 0x78
    f644:	ldr	r1, [pc, #824]	; f984 <readstat_parse_xport+0xef8>
    f648:	ldr	r3, [sp, #56]	; 0x38
    f64c:	add	r1, pc, r1
    f650:	bl	4be8 <__isoc99_sscanf@plt>
    f654:	mov	r8, #5
    f658:	cmp	r0, #1
    f65c:	ble	f550 <readstat_parse_xport+0xac4>
    f660:	ldr	r1, [pc, #800]	; f988 <readstat_parse_xport+0xefc>
    f664:	add	r0, sp, #72	; 0x48
    f668:	add	r1, pc, r1
    f66c:	bl	47b0 <strcmp@plt>
    f670:	cmp	r0, #0
    f674:	beq	f6f0 <readstat_parse_xport+0xc64>
    f678:	ldr	r1, [pc, #780]	; f98c <readstat_parse_xport+0xf00>
    f67c:	add	r0, sp, #72	; 0x48
    f680:	add	r1, pc, r1
    f684:	bl	47b0 <strcmp@plt>
    f688:	cmp	r0, #0
    f68c:	beq	f6d8 <readstat_parse_xport+0xc4c>
    f690:	ldr	r1, [pc, #760]	; f990 <readstat_parse_xport+0xf04>
    f694:	add	r0, sp, #72	; 0x48
    f698:	add	r1, pc, r1
    f69c:	bl	47b0 <strcmp@plt>
    f6a0:	cmp	r0, #0
    f6a4:	bne	f6f0 <readstat_parse_xport+0xc64>
    f6a8:	ldr	r1, [sp, #84]	; 0x54
    f6ac:	mov	r0, r4
    f6b0:	bl	fd80 <xport_read_labels_v9>
    f6b4:	b	f6e4 <readstat_parse_xport+0xc58>
    f6b8:	ldr	r1, [pc, #704]	; f980 <readstat_parse_xport+0xef4>
    f6bc:	add	r0, sp, #72	; 0x48
    f6c0:	add	r1, pc, r1
    f6c4:	bl	47b0 <strcmp@plt>
    f6c8:	mov	r8, #5
    f6cc:	cmp	r0, #0
    f6d0:	bne	f550 <readstat_parse_xport+0xac4>
    f6d4:	b	f6f0 <readstat_parse_xport+0xc64>
    f6d8:	ldr	r1, [sp, #84]	; 0x54
    f6dc:	mov	r0, r4
    f6e0:	bl	fa84 <xport_read_labels_v8>
    f6e4:	mov	r8, r0
    f6e8:	cmp	r0, #0
    f6ec:	bne	f550 <readstat_parse_xport+0xac4>
    f6f0:	mov	r8, #0
    f6f4:	str	r8, [r4, #76]	; 0x4c
    f6f8:	ldr	r0, [r4, #64]	; 0x40
    f6fc:	cmp	r0, #1
    f700:	blt	f550 <readstat_parse_xport+0xac4>
    f704:	mov	r9, #0
    f708:	mov	r8, #1
    f70c:	mov	r5, #0
    f710:	ldr	r0, [r4, #376]	; 0x178
    f714:	ldr	r6, [r0, r5, lsl #2]
    f718:	str	r9, [r6, #2148]	; 0x864
    f71c:	ldr	r7, [r4, #8]
    f720:	cmp	r7, #0
    f724:	beq	f74c <readstat_parse_xport+0xcc0>
    f728:	ldr	r3, [r4, #36]	; 0x24
    f72c:	add	r2, r6, #308	; 0x134
    f730:	mov	r0, r5
    f734:	mov	r1, r6
    f738:	blx	r7
    f73c:	cmp	r0, #2
    f740:	beq	f754 <readstat_parse_xport+0xcc8>
    f744:	cmp	r0, #1
    f748:	beq	f7d4 <readstat_parse_xport+0xd48>
    f74c:	add	r9, r9, #1
    f750:	b	f758 <readstat_parse_xport+0xccc>
    f754:	str	r8, [r6, #2144]	; 0x860
    f758:	ldr	r0, [r6, #1596]	; 0x63c
    f75c:	ldr	r2, [r4, #76]	; 0x4c
    f760:	ldr	r1, [r4, #64]	; 0x40
    f764:	add	r5, r5, #1
    f768:	add	r0, r2, r0
    f76c:	cmp	r5, r1
    f770:	str	r0, [r4, #76]	; 0x4c
    f774:	blt	f710 <readstat_parse_xport+0xc84>
    f778:	cmp	r0, #0
    f77c:	mov	r8, #0
    f780:	ldrne	r1, [r4, #16]
    f784:	cmpne	r1, #0
    f788:	beq	f550 <readstat_parse_xport+0xac4>
    f78c:	bl	4b88 <readstat_malloc@plt>
    f790:	mov	r6, r0
    f794:	ldr	r0, [r4, #76]	; 0x4c
    f798:	bl	4b88 <readstat_malloc@plt>
    f79c:	mov	r5, r0
    f7a0:	cmp	r6, #0
    f7a4:	mov	r8, #3
    f7a8:	cmpne	r5, #0
    f7ac:	bne	f7dc <readstat_parse_xport+0xd50>
    f7b0:	cmp	r6, #0
    f7b4:	beq	f7c0 <readstat_parse_xport+0xd34>
    f7b8:	mov	r0, r6
    f7bc:	bl	4864 <free@plt>
    f7c0:	cmp	r5, #0
    f7c4:	beq	f550 <readstat_parse_xport+0xac4>
    f7c8:	mov	r0, r5
    f7cc:	bl	4864 <free@plt>
    f7d0:	b	f550 <readstat_parse_xport+0xac4>
    f7d4:	mov	r8, #4
    f7d8:	b	f550 <readstat_parse_xport+0xac4>
    f7dc:	ldr	r2, [r4, #76]	; 0x4c
    f7e0:	mov	r0, r5
    f7e4:	mov	r1, #32
    f7e8:	bl	4c00 <memset@plt>
    f7ec:	ldr	r0, [r4, #52]	; 0x34
    f7f0:	ldr	r1, [r4, #76]	; 0x4c
    f7f4:	ldr	r3, [r0, #12]
    f7f8:	ldr	r2, [r0, #20]
    f7fc:	mov	r0, r6
    f800:	blx	r3
    f804:	cmn	r0, #1
    f808:	beq	f904 <readstat_parse_xport+0xe78>
    f80c:	mov	r8, #0
    f810:	ldr	r1, [r4, #76]	; 0x4c
    f814:	cmp	r0, r1
    f818:	bcc	f924 <readstat_parse_xport+0xe98>
    f81c:	cmp	r1, #0
    f820:	beq	f840 <readstat_parse_xport+0xdb4>
    f824:	mov	r0, #0
    f828:	ldrb	r2, [r6, r0]
    f82c:	cmp	r2, #32
    f830:	bne	f868 <readstat_parse_xport+0xddc>
    f834:	add	r0, r0, #1
    f838:	cmp	r0, r1
    f83c:	bcc	f828 <readstat_parse_xport+0xd9c>
    f840:	add	r8, r8, #1
    f844:	ldr	r0, [r4, #52]	; 0x34
    f848:	ldr	r1, [r4, #76]	; 0x4c
    f84c:	ldr	r3, [r0, #12]
    f850:	ldr	r2, [r0, #20]
    f854:	mov	r0, r6
    f858:	blx	r3
    f85c:	cmn	r0, #1
    f860:	bne	f810 <readstat_parse_xport+0xd84>
    f864:	b	f904 <readstat_parse_xport+0xe78>
    f868:	cmp	r8, #0
    f86c:	beq	f8a4 <readstat_parse_xport+0xe18>
    f870:	mov	r0, r4
    f874:	mov	r1, r5
    f878:	bl	1013c <xport_process_row>
    f87c:	cmp	r0, #0
    f880:	bne	f914 <readstat_parse_xport+0xe88>
    f884:	ldr	r0, [r4, #68]	; 0x44
    f888:	cmp	r0, #1
    f88c:	blt	f89c <readstat_parse_xport+0xe10>
    f890:	ldr	r1, [r4, #80]	; 0x50
    f894:	cmp	r1, r0
    f898:	beq	f924 <readstat_parse_xport+0xe98>
    f89c:	subs	r8, r8, #1
    f8a0:	bne	f870 <readstat_parse_xport+0xde4>
    f8a4:	mov	r0, r4
    f8a8:	mov	r1, r6
    f8ac:	bl	1013c <xport_process_row>
    f8b0:	cmp	r0, #0
    f8b4:	bne	f914 <readstat_parse_xport+0xe88>
    f8b8:	ldr	r3, [r4, #52]	; 0x34
    f8bc:	ldr	r1, [r4, #28]
    f8c0:	ldr	r0, [r4, #32]
    f8c4:	ldr	r2, [r4, #36]	; 0x24
    f8c8:	ldr	r7, [r3, #16]
    f8cc:	ldr	r3, [r3, #20]
    f8d0:	blx	r7
    f8d4:	cmp	r0, #0
    f8d8:	bne	f914 <readstat_parse_xport+0xe88>
    f8dc:	ldr	r0, [r4, #68]	; 0x44
    f8e0:	cmp	r0, #1
    f8e4:	blt	f8fc <readstat_parse_xport+0xe70>
    f8e8:	ldr	r1, [r4, #80]	; 0x50
    f8ec:	mov	r8, #0
    f8f0:	cmp	r1, r0
    f8f4:	bne	f844 <readstat_parse_xport+0xdb8>
    f8f8:	b	f7b0 <readstat_parse_xport+0xd24>
    f8fc:	mov	r8, #0
    f900:	b	f844 <readstat_parse_xport+0xdb8>
    f904:	mov	r8, #2
    f908:	cmp	r6, #0
    f90c:	bne	f7b8 <readstat_parse_xport+0xd2c>
    f910:	b	f7c0 <readstat_parse_xport+0xd34>
    f914:	mov	r8, r0
    f918:	cmp	r6, #0
    f91c:	bne	f7b8 <readstat_parse_xport+0xd2c>
    f920:	b	f7c0 <readstat_parse_xport+0xd34>
    f924:	mov	r8, #0
    f928:	cmp	r6, #0
    f92c:	bne	f7b8 <readstat_parse_xport+0xd2c>
    f930:	b	f7c0 <readstat_parse_xport+0xd34>
    f934:	.word	0x0001aa90
    f938:	.word	0x0001aa62
    f93c:	.word	0x0001aa52
    f940:	.word	0x0001a9a1
    f944:	.word	0x0003a574
    f948:	.word	0x0001a75c
    f94c:	.word	0x0001a700
    f950:	.word	0x0001a6f7
    f954:	.word	0x0001a6a0
    f958:	.word	0x0001a652
    f95c:	.word	0x0001a64a
    f960:	.word	0x0001a51c
    f964:	.word	0x0001a54c
    f968:	.word	0x0001a544
    f96c:	.word	0x0001a32e
    f970:	.word	0x0001a306
    f974:	.word	0x0001aee0
    f978:	.word	0x0001a160
    f97c:	.word	0x0001a1c3
    f980:	.word	0x0001a024
    f984:	.word	0x0001a028
    f988:	.word	0x0001a07c
    f98c:	.word	0x0001a06a
    f990:	.word	0x0001a05a

0000f994 <xport_construct_format>:
    f994:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    f998:	add	fp, sp, #24
    f99c:	mov	r7, r3
    f9a0:	mov	r3, r2
    f9a4:	mov	r5, r0
    f9a8:	mov	r0, #1
    f9ac:	mov	r2, r1
    f9b0:	orr	r1, r0, r3, lsl #2
    f9b4:	add	r0, r1, #7
    f9b8:	bic	r0, r0, #7
    f9bc:	sub	r6, sp, r0
    f9c0:	mov	sp, r6
    f9c4:	sub	sp, sp, #8
    f9c8:	mov	r0, #0
    f9cc:	str	r0, [sp]
    f9d0:	mov	r0, r6
    f9d4:	bl	4b94 <readstat_convert@plt>
    f9d8:	add	sp, sp, #8
    f9dc:	mov	r4, r0
    f9e0:	cmp	r0, #0
    f9e4:	bne	fa50 <xport_construct_format+0xbc>
    f9e8:	ldrb	r0, [r6]
    f9ec:	cmp	r0, #0
    f9f0:	beq	fa18 <xport_construct_format+0x84>
    f9f4:	ldr	r0, [fp, #8]
    f9f8:	cmp	r0, #0
    f9fc:	beq	fa24 <xport_construct_format+0x90>
    fa00:	sub	sp, sp, #8
    fa04:	str	r7, [sp]
    fa08:	str	r0, [sp, #4]
    fa0c:	ldr	r2, [pc, #100]	; fa78 <xport_construct_format+0xe4>
    fa10:	add	r2, pc, r2
    fa14:	b	fa3c <xport_construct_format+0xa8>
    fa18:	mov	r0, #0
    fa1c:	strb	r0, [r5]
    fa20:	b	fa50 <xport_construct_format+0xbc>
    fa24:	cmp	r7, #0
    fa28:	beq	fa5c <xport_construct_format+0xc8>
    fa2c:	sub	sp, sp, #8
    fa30:	str	r7, [sp]
    fa34:	ldr	r2, [pc, #64]	; fa7c <xport_construct_format+0xe8>
    fa38:	add	r2, pc, r2
    fa3c:	mov	r0, r5
    fa40:	mov	r1, #256	; 0x100
    fa44:	mov	r3, r6
    fa48:	bl	4bdc <snprintf@plt>
    fa4c:	add	sp, sp, #8
    fa50:	mov	r0, r4
    fa54:	sub	sp, fp, #24
    fa58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    fa5c:	ldr	r2, [pc, #28]	; fa80 <xport_construct_format+0xec>
    fa60:	mov	r0, r5
    fa64:	mov	r1, #256	; 0x100
    fa68:	mov	r3, r6
    fa6c:	add	r2, pc, r2
    fa70:	bl	4bdc <snprintf@plt>
    fa74:	b	fa50 <xport_construct_format+0xbc>
    fa78:	.word	0x00019cea
    fa7c:	.word	0x00019cca
    fa80:	.word	0x0001a880

0000fa84 <xport_read_labels_v8>:
    fa84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fa88:	add	fp, sp, #28
    fa8c:	sub	sp, sp, #148	; 0x94
    fa90:	ldr	r4, [r0, #52]	; 0x34
    fa94:	mov	r8, r0
    fa98:	cmp	r1, #1
    fa9c:	str	r1, [fp, #-176]	; 0xffffff50
    faa0:	blt	fc24 <xport_read_labels_v8+0x1a0>
    faa4:	mov	r6, #0
    faa8:	ldr	r3, [r4, #12]
    faac:	ldr	r2, [r4, #20]
    fab0:	sub	r0, fp, #158	; 0x9e
    fab4:	mov	r1, #6
    fab8:	blx	r3
    fabc:	cmp	r0, #6
    fac0:	bne	fd44 <xport_read_labels_v8+0x2c0>
    fac4:	bl	4858 <machine_is_little_endian@plt>
    fac8:	ldrh	sl, [fp, #-158]	; 0xffffff62
    facc:	cmp	r0, #0
    fad0:	beq	faf8 <xport_read_labels_v8+0x74>
    fad4:	mov	r0, sl
    fad8:	bl	484c <byteswap2@plt>
    fadc:	mov	sl, r0
    fae0:	ldrh	r0, [fp, #-156]	; 0xffffff64
    fae4:	bl	484c <byteswap2@plt>
    fae8:	mov	r5, r0
    faec:	ldrh	r0, [fp, #-154]	; 0xffffff66
    faf0:	bl	484c <byteswap2@plt>
    faf4:	b	fb00 <xport_read_labels_v8+0x7c>
    faf8:	ldrh	r0, [fp, #-154]	; 0xffffff66
    fafc:	ldrh	r5, [fp, #-156]	; 0xffffff64
    fb00:	mov	r7, #5
    fb04:	cmp	sl, #0
    fb08:	beq	fd68 <xport_read_labels_v8+0x2e4>
    fb0c:	ldr	r1, [r8, #64]	; 0x40
    fb10:	cmp	r1, sl
    fb14:	blt	fd68 <xport_read_labels_v8+0x2e4>
    fb18:	movw	r1, #65528	; 0xfff8
    fb1c:	add	r2, r5, #8
    fb20:	str	r6, [fp, #-172]	; 0xffffff54
    fb24:	str	sp, [fp, #-164]	; 0xffffff5c
    fb28:	movt	r1, #1
    fb2c:	and	r2, r2, r1
    fb30:	sub	r9, sp, r2
    fb34:	add	r2, r0, #8
    fb38:	and	r1, r2, r1
    fb3c:	mov	sp, r9
    fb40:	mov	r6, r5
    fb44:	mov	r5, r0
    fb48:	sub	r4, sp, r1
    fb4c:	mov	sp, r4
    fb50:	ldr	r1, [r8, #376]	; 0x178
    fb54:	ldr	r0, [r8, #52]	; 0x34
    fb58:	add	r1, r1, sl, lsl #2
    fb5c:	ldr	r3, [r0, #12]
    fb60:	ldr	r2, [r0, #20]
    fb64:	mov	r0, r9
    fb68:	ldr	r1, [r1, #-4]
    fb6c:	str	r1, [fp, #-168]	; 0xffffff58
    fb70:	mov	r1, r6
    fb74:	blx	r3
    fb78:	mov	r7, #2
    fb7c:	cmp	r0, r6
    fb80:	bne	fd3c <xport_read_labels_v8+0x2b8>
    fb84:	ldr	r0, [r8, #52]	; 0x34
    fb88:	mov	r1, r5
    fb8c:	mov	sl, r6
    fb90:	ldr	r3, [r0, #12]
    fb94:	ldr	r2, [r0, #20]
    fb98:	mov	r0, r4
    fb9c:	blx	r3
    fba0:	cmp	r0, r5
    fba4:	bne	fd3c <xport_read_labels_v8+0x2b8>
    fba8:	ldr	r0, [r8, #48]	; 0x30
    fbac:	mov	r6, r5
    fbb0:	sub	sp, sp, #8
    fbb4:	ldr	r5, [fp, #-168]	; 0xffffff58
    fbb8:	str	r0, [sp]
    fbbc:	mov	r1, #300	; 0x12c
    fbc0:	mov	r2, r9
    fbc4:	mov	r3, sl
    fbc8:	add	r0, r5, #8
    fbcc:	bl	4b94 <readstat_convert@plt>
    fbd0:	add	sp, sp, #8
    fbd4:	cmp	r0, #0
    fbd8:	bne	fd38 <xport_read_labels_v8+0x2b4>
    fbdc:	ldr	r0, [r8, #48]	; 0x30
    fbe0:	sub	sp, sp, #8
    fbe4:	str	r0, [sp]
    fbe8:	add	r0, r5, #564	; 0x234
    fbec:	mov	r1, #1024	; 0x400
    fbf0:	mov	r2, r4
    fbf4:	mov	r3, r6
    fbf8:	bl	4b94 <readstat_convert@plt>
    fbfc:	add	sp, sp, #8
    fc00:	cmp	r0, #0
    fc04:	bne	fd38 <xport_read_labels_v8+0x2b4>
    fc08:	ldr	r6, [fp, #-172]	; 0xffffff54
    fc0c:	add	r6, r6, #1
    fc10:	ldr	sp, [fp, #-164]	; 0xffffff5c
    fc14:	ldr	r0, [fp, #-176]	; 0xffffff50
    fc18:	ldr	r4, [r8, #52]	; 0x34
    fc1c:	cmp	r6, r0
    fc20:	blt	faa8 <xport_read_labels_v8+0x24>
    fc24:	ldr	r3, [r4, #8]
    fc28:	ldr	r2, [r4, #20]
    fc2c:	mov	r0, #0
    fc30:	mov	r1, #1
    fc34:	blx	r3
    fc38:	mov	r7, #15
    fc3c:	cmn	r0, #1
    fc40:	beq	fd68 <xport_read_labels_v8+0x2e4>
    fc44:	movw	r1, #26215	; 0x6667
    fc48:	movt	r1, #26214	; 0x6666
    fc4c:	smmul	r1, r0, r1
    fc50:	asr	r2, r1, #5
    fc54:	add	r1, r2, r1, lsr #31
    fc58:	add	r1, r1, r1, lsl #2
    fc5c:	sub	r0, r0, r1, lsl #4
    fc60:	cmp	r0, #0
    fc64:	beq	fc84 <xport_read_labels_v8+0x200>
    fc68:	ldr	r3, [r4, #8]
    fc6c:	ldr	r2, [r4, #20]
    fc70:	rsb	r0, r0, #80	; 0x50
    fc74:	mov	r1, #1
    fc78:	blx	r3
    fc7c:	cmn	r0, #1
    fc80:	beq	fd68 <xport_read_labels_v8+0x2e4>
    fc84:	ldr	r0, [r8, #52]	; 0x34
    fc88:	mov	r1, #80	; 0x50
    fc8c:	ldr	r3, [r0, #12]
    fc90:	ldr	r2, [r0, #20]
    fc94:	sub	r0, fp, #113	; 0x71
    fc98:	blx	r3
    fc9c:	mov	r7, #2
    fca0:	cmp	r0, #80	; 0x50
    fca4:	blt	fd68 <xport_read_labels_v8+0x2e4>
    fca8:	sub	r2, fp, #152	; 0x98
    fcac:	mov	r1, #0
    fcb0:	vmov.i32	q8, #0	; 0x00000000
    fcb4:	add	r0, r2, #16
    fcb8:	str	r1, [fp, #-120]	; 0xffffff88
    fcbc:	strb	r1, [fp, #-33]	; 0xffffffdf
    fcc0:	mov	r1, #28
    fcc4:	mov	r3, r2
    fcc8:	vst1.64	{d16-d17}, [r0]
    fccc:	vst1.64	{d16-d17}, [r3], r1
    fcd0:	sub	sp, sp, #24
    fcd4:	add	r1, r2, #32
    fcd8:	add	r7, r2, #24
    fcdc:	add	r6, r2, #20
    fce0:	stm	sp, {r0, r6, r7}
    fce4:	str	r3, [sp, #12]
    fce8:	str	r1, [sp, #16]
    fcec:	add	r3, r2, #12
    fcf0:	sub	r0, fp, #113	; 0x71
    fcf4:	ldr	r1, [pc, #120]	; fd74 <xport_read_labels_v8+0x2f0>
    fcf8:	add	r1, pc, r1
    fcfc:	bl	4be8 <__isoc99_sscanf@plt>
    fd00:	add	sp, sp, #24
    fd04:	mov	r7, #5
    fd08:	cmp	r0, #1
    fd0c:	ble	fd68 <xport_read_labels_v8+0x2e4>
    fd10:	ldr	r0, [r8, #380]	; 0x17c
    fd14:	cmp	r0, #8
    fd18:	beq	fd4c <xport_read_labels_v8+0x2c8>
    fd1c:	cmp	r0, #5
    fd20:	mov	r7, #0
    fd24:	bne	fd68 <xport_read_labels_v8+0x2e4>
    fd28:	ldr	r1, [pc, #72]	; fd78 <xport_read_labels_v8+0x2f4>
    fd2c:	sub	r0, fp, #152	; 0x98
    fd30:	add	r1, pc, r1
    fd34:	b	fd58 <xport_read_labels_v8+0x2d4>
    fd38:	mov	r7, r0
    fd3c:	ldr	sp, [fp, #-164]	; 0xffffff5c
    fd40:	b	fd68 <xport_read_labels_v8+0x2e4>
    fd44:	mov	r7, #2
    fd48:	b	fd68 <xport_read_labels_v8+0x2e4>
    fd4c:	ldr	r1, [pc, #40]	; fd7c <xport_read_labels_v8+0x2f8>
    fd50:	sub	r0, fp, #152	; 0x98
    fd54:	add	r1, pc, r1
    fd58:	bl	47b0 <strcmp@plt>
    fd5c:	mov	r7, r0
    fd60:	cmp	r0, #0
    fd64:	movwne	r7, #5
    fd68:	mov	r0, r7
    fd6c:	sub	sp, fp, #28
    fd70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fd74:	.word	0x0001997c
    fd78:	.word	0x000199d7
    fd7c:	.word	0x00019990

0000fd80 <xport_read_labels_v9>:
    fd80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fd84:	add	fp, sp, #28
    fd88:	sub	sp, sp, #172	; 0xac
    fd8c:	ldr	r4, [r0, #52]	; 0x34
    fd90:	mov	r5, r0
    fd94:	cmp	r1, #1
    fd98:	str	r1, [fp, #-200]	; 0xffffff38
    fd9c:	blt	ffe0 <xport_read_labels_v9+0x260>
    fda0:	mov	r7, #0
    fda4:	ldr	r3, [r4, #12]
    fda8:	ldr	r2, [r4, #20]
    fdac:	sub	r0, fp, #162	; 0xa2
    fdb0:	mov	r1, #10
    fdb4:	blx	r3
    fdb8:	cmp	r0, #10
    fdbc:	bne	10108 <xport_read_labels_v9+0x388>
    fdc0:	bl	4858 <machine_is_little_endian@plt>
    fdc4:	ldrh	sl, [fp, #-162]	; 0xffffff5e
    fdc8:	cmp	r0, #0
    fdcc:	beq	fe0c <xport_read_labels_v9+0x8c>
    fdd0:	mov	r0, sl
    fdd4:	bl	484c <byteswap2@plt>
    fdd8:	mov	sl, r0
    fddc:	ldrh	r0, [fp, #-160]	; 0xffffff60
    fde0:	bl	484c <byteswap2@plt>
    fde4:	mov	r9, r0
    fde8:	ldrh	r0, [fp, #-158]	; 0xffffff62
    fdec:	bl	484c <byteswap2@plt>
    fdf0:	mov	r8, r0
    fdf4:	ldrh	r0, [fp, #-156]	; 0xffffff64
    fdf8:	bl	484c <byteswap2@plt>
    fdfc:	mov	r4, r0
    fe00:	ldrh	r0, [fp, #-154]	; 0xffffff66
    fe04:	bl	484c <byteswap2@plt>
    fe08:	b	fe1c <xport_read_labels_v9+0x9c>
    fe0c:	ldrh	r0, [fp, #-154]	; 0xffffff66
    fe10:	ldrh	r4, [fp, #-156]	; 0xffffff64
    fe14:	ldrh	r8, [fp, #-158]	; 0xffffff62
    fe18:	ldrh	r9, [fp, #-160]	; 0xffffff60
    fe1c:	mov	r6, #5
    fe20:	cmp	sl, #0
    fe24:	beq	100fc <xport_read_labels_v9+0x37c>
    fe28:	ldr	r1, [r5, #64]	; 0x40
    fe2c:	cmp	r1, sl
    fe30:	blt	100fc <xport_read_labels_v9+0x37c>
    fe34:	movw	r1, #65528	; 0xfff8
    fe38:	add	r2, r9, #8
    fe3c:	str	r7, [fp, #-192]	; 0xffffff40
    fe40:	str	sp, [fp, #-172]	; 0xffffff54
    fe44:	movt	r1, #1
    fe48:	and	r2, r2, r1
    fe4c:	sub	r6, sp, r2
    fe50:	add	r2, r8, #8
    fe54:	and	r2, r2, r1
    fe58:	mov	sp, r6
    fe5c:	mov	r3, r8
    fe60:	sub	r8, sp, r2
    fe64:	add	r2, r4, #8
    fe68:	str	r4, [fp, #-176]	; 0xffffff50
    fe6c:	and	r2, r2, r1
    fe70:	mov	sp, r8
    fe74:	sub	r7, sp, r2
    fe78:	str	r0, [fp, #-168]	; 0xffffff58
    fe7c:	add	r0, r0, #8
    fe80:	and	r0, r0, r1
    fe84:	mov	sp, r7
    fe88:	sub	r0, sp, r0
    fe8c:	str	r0, [fp, #-180]	; 0xffffff4c
    fe90:	mov	sp, r0
    fe94:	ldr	r1, [r5, #376]	; 0x178
    fe98:	ldr	r0, [r5, #52]	; 0x34
    fe9c:	mov	r4, r3
    fea0:	str	r6, [fp, #-188]	; 0xffffff44
    fea4:	add	r1, r1, sl, lsl #2
    fea8:	ldr	r3, [r0, #12]
    feac:	ldr	r2, [r0, #20]
    feb0:	mov	r0, r6
    feb4:	ldr	sl, [r1, #-4]
    feb8:	mov	r1, r9
    febc:	blx	r3
    fec0:	mov	r6, #2
    fec4:	cmp	r0, r9
    fec8:	str	r9, [fp, #-184]	; 0xffffff48
    fecc:	bne	100f8 <xport_read_labels_v9+0x378>
    fed0:	ldr	r0, [r5, #52]	; 0x34
    fed4:	mov	r1, r4
    fed8:	ldr	r3, [r0, #12]
    fedc:	ldr	r2, [r0, #20]
    fee0:	mov	r0, r8
    fee4:	blx	r3
    fee8:	cmp	r0, r4
    feec:	str	r4, [fp, #-196]	; 0xffffff3c
    fef0:	bne	100f8 <xport_read_labels_v9+0x378>
    fef4:	ldr	r0, [r5, #52]	; 0x34
    fef8:	ldr	r4, [fp, #-176]	; 0xffffff50
    fefc:	ldr	r3, [r0, #12]
    ff00:	ldr	r2, [r0, #20]
    ff04:	mov	r0, r7
    ff08:	mov	r1, r4
    ff0c:	blx	r3
    ff10:	cmp	r0, r4
    ff14:	bne	100f8 <xport_read_labels_v9+0x378>
    ff18:	ldr	r0, [r5, #52]	; 0x34
    ff1c:	ldr	r4, [fp, #-168]	; 0xffffff58
    ff20:	ldr	r7, [fp, #-180]	; 0xffffff4c
    ff24:	ldr	r3, [r0, #12]
    ff28:	ldr	r2, [r0, #20]
    ff2c:	mov	r0, r7
    ff30:	mov	r1, r4
    ff34:	blx	r3
    ff38:	cmp	r0, r4
    ff3c:	bne	100f8 <xport_read_labels_v9+0x378>
    ff40:	ldr	r0, [r5, #48]	; 0x30
    ff44:	sub	sp, sp, #8
    ff48:	ldr	r2, [fp, #-188]	; 0xffffff44
    ff4c:	ldr	r3, [fp, #-184]	; 0xffffff48
    ff50:	str	r0, [sp]
    ff54:	add	r0, sl, #8
    ff58:	mov	r1, #300	; 0x12c
    ff5c:	bl	4b94 <readstat_convert@plt>
    ff60:	add	sp, sp, #8
    ff64:	cmp	r0, #0
    ff68:	bne	100f4 <xport_read_labels_v9+0x374>
    ff6c:	ldr	r0, [r5, #48]	; 0x30
    ff70:	sub	sp, sp, #8
    ff74:	ldr	r3, [fp, #-168]	; 0xffffff58
    ff78:	str	r0, [sp]
    ff7c:	add	r0, sl, #564	; 0x234
    ff80:	mov	r1, #1024	; 0x400
    ff84:	mov	r2, r7
    ff88:	bl	4b94 <readstat_convert@plt>
    ff8c:	add	sp, sp, #8
    ff90:	cmp	r0, #0
    ff94:	bne	100f4 <xport_read_labels_v9+0x374>
    ff98:	ldr	r0, [sl, #2140]	; 0x85c
    ff9c:	ldr	r3, [sl, #2136]	; 0x858
    ffa0:	sub	sp, sp, #8
    ffa4:	ldr	r2, [fp, #-196]	; 0xffffff3c
    ffa8:	str	r0, [sp]
    ffac:	add	r0, sl, #308	; 0x134
    ffb0:	mov	r1, r8
    ffb4:	bl	f994 <xport_construct_format>
    ffb8:	add	sp, sp, #8
    ffbc:	cmp	r0, #0
    ffc0:	bne	100f4 <xport_read_labels_v9+0x374>
    ffc4:	ldr	r7, [fp, #-192]	; 0xffffff40
    ffc8:	add	r7, r7, #1
    ffcc:	ldr	sp, [fp, #-172]	; 0xffffff54
    ffd0:	ldr	r0, [fp, #-200]	; 0xffffff38
    ffd4:	ldr	r4, [r5, #52]	; 0x34
    ffd8:	cmp	r7, r0
    ffdc:	blt	fda4 <xport_read_labels_v9+0x24>
    ffe0:	ldr	r3, [r4, #8]
    ffe4:	ldr	r2, [r4, #20]
    ffe8:	mov	r0, #0
    ffec:	mov	r1, #1
    fff0:	blx	r3
    fff4:	mov	r6, #15
    fff8:	cmn	r0, #1
    fffc:	beq	100fc <xport_read_labels_v9+0x37c>
   10000:	movw	r1, #26215	; 0x6667
   10004:	movt	r1, #26214	; 0x6666
   10008:	smmul	r1, r0, r1
   1000c:	asr	r2, r1, #5
   10010:	add	r1, r2, r1, lsr #31
   10014:	add	r1, r1, r1, lsl #2
   10018:	sub	r0, r0, r1, lsl #4
   1001c:	cmp	r0, #0
   10020:	beq	10040 <xport_read_labels_v9+0x2c0>
   10024:	ldr	r3, [r4, #8]
   10028:	ldr	r2, [r4, #20]
   1002c:	rsb	r0, r0, #80	; 0x50
   10030:	mov	r1, #1
   10034:	blx	r3
   10038:	cmn	r0, #1
   1003c:	beq	100fc <xport_read_labels_v9+0x37c>
   10040:	ldr	r0, [r5, #52]	; 0x34
   10044:	mov	r1, #80	; 0x50
   10048:	ldr	r3, [r0, #12]
   1004c:	ldr	r2, [r0, #20]
   10050:	sub	r0, fp, #113	; 0x71
   10054:	blx	r3
   10058:	mov	r6, #2
   1005c:	cmp	r0, #80	; 0x50
   10060:	blt	100fc <xport_read_labels_v9+0x37c>
   10064:	sub	r2, fp, #152	; 0x98
   10068:	mov	r1, #0
   1006c:	vmov.i32	q8, #0	; 0x00000000
   10070:	add	r0, r2, #16
   10074:	str	r1, [fp, #-120]	; 0xffffff88
   10078:	strb	r1, [fp, #-33]	; 0xffffffdf
   1007c:	mov	r1, #28
   10080:	mov	r3, r2
   10084:	vst1.64	{d16-d17}, [r0]
   10088:	vst1.64	{d16-d17}, [r3], r1
   1008c:	sub	sp, sp, #24
   10090:	add	r1, r2, #32
   10094:	add	r7, r2, #24
   10098:	add	r6, r2, #20
   1009c:	stm	sp, {r0, r6, r7}
   100a0:	str	r3, [sp, #12]
   100a4:	str	r1, [sp, #16]
   100a8:	add	r3, r2, #12
   100ac:	sub	r0, fp, #113	; 0x71
   100b0:	ldr	r1, [pc, #120]	; 10130 <xport_read_labels_v9+0x3b0>
   100b4:	add	r1, pc, r1
   100b8:	bl	4be8 <__isoc99_sscanf@plt>
   100bc:	add	sp, sp, #24
   100c0:	mov	r6, #5
   100c4:	cmp	r0, #1
   100c8:	ble	100fc <xport_read_labels_v9+0x37c>
   100cc:	ldr	r0, [r5, #380]	; 0x17c
   100d0:	cmp	r0, #8
   100d4:	beq	10110 <xport_read_labels_v9+0x390>
   100d8:	cmp	r0, #5
   100dc:	mov	r6, #0
   100e0:	bne	100fc <xport_read_labels_v9+0x37c>
   100e4:	ldr	r1, [pc, #72]	; 10134 <xport_read_labels_v9+0x3b4>
   100e8:	sub	r0, fp, #152	; 0x98
   100ec:	add	r1, pc, r1
   100f0:	b	1011c <xport_read_labels_v9+0x39c>
   100f4:	mov	r6, r0
   100f8:	ldr	sp, [fp, #-172]	; 0xffffff54
   100fc:	mov	r0, r6
   10100:	sub	sp, fp, #28
   10104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10108:	mov	r6, #2
   1010c:	b	100fc <xport_read_labels_v9+0x37c>
   10110:	ldr	r1, [pc, #32]	; 10138 <xport_read_labels_v9+0x3b8>
   10114:	sub	r0, fp, #152	; 0x98
   10118:	add	r1, pc, r1
   1011c:	bl	47b0 <strcmp@plt>
   10120:	mov	r6, r0
   10124:	cmp	r0, #0
   10128:	movwne	r6, #5
   1012c:	b	100fc <xport_read_labels_v9+0x37c>
   10130:	.word	0x000195c0
   10134:	.word	0x0001961b
   10138:	.word	0x000195cc

0001013c <xport_process_row>:
   1013c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10140:	add	fp, sp, #28
   10144:	sub	sp, sp, #68	; 0x44
   10148:	mov	lr, r0
   1014c:	ldr	r0, [r0, #64]	; 0x40
   10150:	str	r1, [sp, #28]
   10154:	cmp	r0, #0
   10158:	ble	103a0 <xport_process_row+0x264>
   1015c:	add	r0, lr, #72	; 0x48
   10160:	movw	r1, #0
   10164:	mov	r6, #1
   10168:	mov	sl, #0
   1016c:	mov	r8, #0
   10170:	str	lr, [sp, #44]	; 0x2c
   10174:	str	r0, [sp, #16]
   10178:	add	r0, sp, #48	; 0x30
   1017c:	movt	r1, #32760	; 0x7ff8
   10180:	orr	r0, r0, #1
   10184:	str	r0, [sp, #20]
   10188:	mov	r0, #0
   1018c:	str	r0, [sp, #32]
   10190:	b	101c8 <xport_process_row+0x8c>
   10194:	bl	4ab0 <sas_validate_tag@plt>
   10198:	cmp	r0, #0
   1019c:	beq	101a8 <xport_process_row+0x6c>
   101a0:	ldr	r6, [r7]
   101a4:	b	10240 <xport_process_row+0x104>
   101a8:	ldrb	r0, [r4]
   101ac:	cmp	r0, #46	; 0x2e
   101b0:	beq	102f8 <xport_process_row+0x1bc>
   101b4:	and	r1, r9, #64768	; 0xfd00
   101b8:	orr	r1, r5, r1
   101bc:	orr	r0, r1, r0
   101c0:	orr	r4, r0, #512	; 0x200
   101c4:	b	10304 <xport_process_row+0x1c8>
   101c8:	ldr	r0, [lr, #376]	; 0x178
   101cc:	and	r9, r5, #64512	; 0xfc00
   101d0:	bfc	r5, #0, #16
   101d4:	orr	r4, r5, r9
   101d8:	ldr	r3, [r0, r8, lsl #2]
   101dc:	ldr	r0, [r3]
   101e0:	str	r3, [sp, #40]	; 0x28
   101e4:	cmp	r0, #0
   101e8:	str	r0, [sp, #36]	; 0x24
   101ec:	beq	10278 <xport_process_row+0x13c>
   101f0:	mov	r2, #0
   101f4:	str	r1, [fp, #-36]	; 0xffffffdc
   101f8:	mov	r7, r3
   101fc:	str	r2, [fp, #-40]	; 0xffffffd8
   10200:	ldr	r6, [r7, #1596]!	; 0x63c
   10204:	sub	r0, r6, #3
   10208:	cmp	r0, #5
   1020c:	bhi	102e4 <xport_process_row+0x1a8>
   10210:	mov	r0, #0
   10214:	str	r4, [sp, #24]
   10218:	sub	r2, r6, #1
   1021c:	str	r0, [sp, #52]	; 0x34
   10220:	str	r0, [sp, #48]	; 0x30
   10224:	ldr	r0, [sp, #28]
   10228:	add	r4, r0, sl
   1022c:	ldr	r0, [sp, #20]
   10230:	add	r1, r4, #1
   10234:	bl	4930 <memcmp@plt>
   10238:	cmp	r0, #0
   1023c:	beq	102ec <xport_process_row+0x1b0>
   10240:	mov	r1, r4
   10244:	add	r4, sp, #48	; 0x30
   10248:	mov	r2, r6
   1024c:	mov	r0, r4
   10250:	bl	48b8 <memcpy@plt>
   10254:	mov	r0, r4
   10258:	mov	r1, #1
   1025c:	sub	r2, fp, #40	; 0x28
   10260:	mov	r3, #0
   10264:	bl	4990 <cnxptiee@plt>
   10268:	ldr	r4, [sp, #24]
   1026c:	cmp	r0, #0
   10270:	beq	10304 <xport_process_row+0x1c8>
   10274:	b	103f8 <xport_process_row+0x2bc>
   10278:	mov	r7, r3
   1027c:	mov	r5, r4
   10280:	ldr	r0, [r7, #1596]!	; 0x63c
   10284:	orr	r1, r6, r0, lsl #2
   10288:	ldr	r0, [sp, #32]
   1028c:	bl	4c3c <readstat_realloc@plt>
   10290:	cmp	r0, #0
   10294:	beq	103e4 <xport_process_row+0x2a8>
   10298:	mov	r4, r0
   1029c:	ldr	r0, [sp, #44]	; 0x2c
   102a0:	ldr	r3, [r7]
   102a4:	ldr	r0, [r0, #48]	; 0x30
   102a8:	orr	r1, r6, r3, lsl #2
   102ac:	str	r0, [sp]
   102b0:	ldr	r0, [sp, #28]
   102b4:	add	r2, r0, sl
   102b8:	mov	r0, r4
   102bc:	bl	4b94 <readstat_convert@plt>
   102c0:	mov	r3, #0
   102c4:	cmp	r0, #0
   102c8:	bne	103f0 <xport_process_row+0x2b4>
   102cc:	ldr	lr, [sp, #44]	; 0x2c
   102d0:	movw	r1, #0
   102d4:	str	r4, [sp, #32]
   102d8:	mov	r2, r4
   102dc:	movt	r1, #32760	; 0x7ff8
   102e0:	b	1031c <xport_process_row+0x1e0>
   102e4:	mov	r3, r1
   102e8:	b	10318 <xport_process_row+0x1dc>
   102ec:	ldrb	r0, [r4]
   102f0:	cmp	r0, #46	; 0x2e
   102f4:	bne	10194 <xport_process_row+0x58>
   102f8:	and	r0, r9, #65024	; 0xfe00
   102fc:	orr	r0, r5, r0
   10300:	orr	r4, r0, #256	; 0x100
   10304:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10308:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1030c:	ldr	lr, [sp, #44]	; 0x2c
   10310:	movw	r1, #0
   10314:	movt	r1, #32760	; 0x7ff8
   10318:	mov	r5, r4
   1031c:	ldr	r6, [r7]
   10320:	ldr	r7, [lr, #16]
   10324:	cmp	r7, #0
   10328:	beq	1037c <xport_process_row+0x240>
   1032c:	ldr	r0, [lr, #376]	; 0x178
   10330:	ldr	r0, [r0, r8, lsl #2]
   10334:	ldr	r0, [r0, #2144]	; 0x860
   10338:	cmp	r0, #0
   1033c:	bne	1037c <xport_process_row+0x240>
   10340:	ldr	r0, [sp, #16]
   10344:	ldr	r0, [r0]
   10348:	cmp	r0, #0
   1034c:	bne	1037c <xport_process_row+0x240>
   10350:	ldr	ip, [lr, #36]	; 0x24
   10354:	ldr	r1, [sp, #36]	; 0x24
   10358:	ldr	r0, [lr, #80]	; 0x50
   1035c:	stm	sp, {r1, r5, ip}
   10360:	ldr	r1, [sp, #40]	; 0x28
   10364:	blx	r7
   10368:	ldr	lr, [sp, #44]	; 0x2c
   1036c:	movw	r1, #0
   10370:	cmp	r0, #0
   10374:	movt	r1, #32760	; 0x7ff8
   10378:	bne	10404 <xport_process_row+0x2c8>
   1037c:	ldr	r0, [lr, #64]	; 0x40
   10380:	add	r8, r8, #1
   10384:	add	sl, r6, sl
   10388:	mov	r6, #1
   1038c:	cmp	r8, r0
   10390:	blt	101c8 <xport_process_row+0x8c>
   10394:	ldr	r4, [sp, #32]
   10398:	ldr	r1, [sp, #16]
   1039c:	b	103a8 <xport_process_row+0x26c>
   103a0:	add	r1, lr, #72	; 0x48
   103a4:	mov	r4, #0
   103a8:	ldr	r0, [r1]
   103ac:	cmp	r0, #0
   103b0:	beq	103c0 <xport_process_row+0x284>
   103b4:	sub	r0, r0, #1
   103b8:	str	r0, [r1]
   103bc:	b	103cc <xport_process_row+0x290>
   103c0:	ldr	r0, [lr, #80]	; 0x50
   103c4:	add	r0, r0, #1
   103c8:	str	r0, [lr, #80]	; 0x50
   103cc:	mov	r6, #0
   103d0:	mov	r0, r4
   103d4:	bl	4864 <free@plt>
   103d8:	mov	r0, r6
   103dc:	sub	sp, fp, #28
   103e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   103e4:	mov	r6, #3
   103e8:	mov	r4, #0
   103ec:	b	103d0 <xport_process_row+0x294>
   103f0:	mov	r6, r0
   103f4:	b	103d0 <xport_process_row+0x294>
   103f8:	ldr	r4, [sp, #32]
   103fc:	mov	r6, #16
   10400:	b	103d0 <xport_process_row+0x294>
   10404:	ldr	r4, [sp, #32]
   10408:	mov	r6, #4
   1040c:	b	103d0 <xport_process_row+0x294>

00010410 <readstat_begin_writing_xport>:
   10410:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10414:	add	fp, sp, #28
   10418:	ldr	r3, [r0, #8]
   1041c:	mov	r6, r2
   10420:	cmp	r3, #0
   10424:	moveq	r3, #8
   10428:	streq	r3, [r0, #8]
   1042c:	ldr	r3, [pc, #180]	; 104e8 <readstat_begin_writing_xport+0xd8>
   10430:	add	r3, pc, r3
   10434:	str	r3, [r0, #292]	; 0x124
   10438:	ldr	r8, [pc, #172]	; 104ec <readstat_begin_writing_xport+0xdc>
   1043c:	ldr	r9, [pc, #172]	; 104f0 <readstat_begin_writing_xport+0xe0>
   10440:	ldr	sl, [pc, #172]	; 104f4 <readstat_begin_writing_xport+0xe4>
   10444:	ldr	r7, [pc, #172]	; 104f8 <readstat_begin_writing_xport+0xe8>
   10448:	ldr	r3, [pc, #172]	; 104fc <readstat_begin_writing_xport+0xec>
   1044c:	ldr	r4, [pc, #172]	; 10500 <readstat_begin_writing_xport+0xf0>
   10450:	ldr	r5, [pc, #172]	; 10504 <readstat_begin_writing_xport+0xf4>
   10454:	ldr	r2, [pc, #172]	; 10508 <readstat_begin_writing_xport+0xf8>
   10458:	ldr	ip, [pc, #172]	; 1050c <readstat_begin_writing_xport+0xfc>
   1045c:	ldr	lr, [pc, #172]	; 10510 <readstat_begin_writing_xport+0x100>
   10460:	add	r7, pc, r7
   10464:	add	r3, pc, r3
   10468:	add	r4, pc, r4
   1046c:	add	r2, pc, r2
   10470:	add	ip, pc, ip
   10474:	add	lr, pc, lr
   10478:	add	r5, pc, r5
   1047c:	add	r8, pc, r8
   10480:	add	r9, pc, r9
   10484:	add	sl, pc, sl
   10488:	str	r7, [r0, #264]	; 0x108
   1048c:	str	r3, [r0, #268]	; 0x10c
   10490:	str	r4, [r0, #272]	; 0x110
   10494:	str	r2, [r0, #276]	; 0x114
   10498:	str	lr, [r0, #280]	; 0x118
   1049c:	str	ip, [r0, #284]	; 0x11c
   104a0:	add	r3, r0, #244	; 0xf4
   104a4:	ldr	r2, [pc, #104]	; 10514 <readstat_begin_writing_xport+0x104>
   104a8:	ldr	r2, [pc, r2]
   104ac:	str	r5, [r0, #228]	; 0xe4
   104b0:	str	r2, [r0, #232]	; 0xe8
   104b4:	ldr	r2, [pc, #92]	; 10518 <readstat_begin_writing_xport+0x108>
   104b8:	add	r2, pc, r2
   104bc:	str	r2, [r0, #236]	; 0xec
   104c0:	str	r8, [r0, #240]	; 0xf0
   104c4:	ldr	r2, [pc, #80]	; 1051c <readstat_begin_writing_xport+0x10c>
   104c8:	add	r2, pc, r2
   104cc:	stm	r3, {r2, r9, sl}
   104d0:	ldr	r2, [pc, #72]	; 10520 <readstat_begin_writing_xport+0x110>
   104d4:	add	r2, pc, r2
   104d8:	str	r2, [r0, #256]	; 0x100
   104dc:	mov	r2, r6
   104e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   104e4:	b	48f4 <readstat_begin_writing_file@plt>
   104e8:	.word	0x000000ec
   104ec:	.word	0x00000154
   104f0:	.word	0x00000220
   104f4:	.word	0x00000280
   104f8:	.word	0x0000036c
   104fc:	.word	0x00000384
   10500:	.word	0x00000390
   10504:	.word	0x000003a4
   10508:	.word	0x000003d8
   1050c:	.word	0x00001078
   10510:	.word	0x0000108c
   10514:	.word	0x00038e08
   10518:	.word	0x000000b0
   1051c:	.word	0x00000170
   10520:	.word	0x00000290

00010524 <xport_metadata_ok>:
   10524:	ldr	r2, [r0, #8]
   10528:	cmp	r2, #8
   1052c:	movne	r1, #24
   10530:	cmpne	r2, #5
   10534:	bne	10560 <xport_metadata_ok+0x3c>
   10538:	ldrb	r3, [r0, #188]!	; 0xbc
   1053c:	mov	r1, #0
   10540:	cmp	r3, #0
   10544:	beq	10560 <xport_metadata_ok+0x3c>
   10548:	cmp	r2, #5
   1054c:	beq	10568 <xport_metadata_ok+0x44>
   10550:	cmp	r2, #8
   10554:	bne	10560 <xport_metadata_ok+0x3c>
   10558:	mov	r1, #32
   1055c:	b	4720 <sas_validate_name@plt>
   10560:	mov	r0, r1
   10564:	bx	lr
   10568:	mov	r1, #8
   1056c:	b	4720 <sas_validate_name@plt>

00010570 <xport_write_int8>:
   10570:	push	{r4, r5, fp, lr}
   10574:	add	fp, sp, #8
   10578:	sub	sp, sp, #16
   1057c:	vmov	s0, r2
   10580:	mov	r5, r1
   10584:	mov	r4, r0
   10588:	add	r0, sp, #8
   1058c:	mov	r2, sp
   10590:	mov	r1, #0
   10594:	mov	r3, #1
   10598:	vcvt.f64.s32	d16, s0
   1059c:	vstr	d16, [sp, #8]
   105a0:	bl	4990 <cnxptiee@plt>
   105a4:	mov	r1, r0
   105a8:	mov	r0, #16
   105ac:	cmp	r1, #0
   105b0:	beq	105bc <xport_write_int8+0x4c>
   105b4:	sub	sp, fp, #8
   105b8:	pop	{r4, r5, fp, pc}
   105bc:	ldr	r2, [r5, #1596]	; 0x63c
   105c0:	mov	r1, sp
   105c4:	mov	r0, r4
   105c8:	bl	48b8 <memcpy@plt>
   105cc:	mov	r0, #0
   105d0:	sub	sp, fp, #8
   105d4:	pop	{r4, r5, fp, pc}

000105d8 <xport_write_int16>:
   105d8:	push	{r4, r5, fp, lr}
   105dc:	add	fp, sp, #8
   105e0:	sub	sp, sp, #16
   105e4:	vmov	s0, r2
   105e8:	mov	r5, r1
   105ec:	mov	r4, r0
   105f0:	add	r0, sp, #8
   105f4:	mov	r2, sp
   105f8:	mov	r1, #0
   105fc:	mov	r3, #1
   10600:	vcvt.f64.s32	d16, s0
   10604:	vstr	d16, [sp, #8]
   10608:	bl	4990 <cnxptiee@plt>
   1060c:	mov	r1, r0
   10610:	mov	r0, #16
   10614:	cmp	r1, #0
   10618:	beq	10624 <xport_write_int16+0x4c>
   1061c:	sub	sp, fp, #8
   10620:	pop	{r4, r5, fp, pc}
   10624:	ldr	r2, [r5, #1596]	; 0x63c
   10628:	mov	r1, sp
   1062c:	mov	r0, r4
   10630:	bl	48b8 <memcpy@plt>
   10634:	mov	r0, #0
   10638:	sub	sp, fp, #8
   1063c:	pop	{r4, r5, fp, pc}

00010640 <xport_write_int32>:
   10640:	push	{r4, r5, fp, lr}
   10644:	add	fp, sp, #8
   10648:	sub	sp, sp, #16
   1064c:	vmov	s0, r2
   10650:	mov	r5, r1
   10654:	mov	r4, r0
   10658:	add	r0, sp, #8
   1065c:	mov	r2, sp
   10660:	mov	r1, #0
   10664:	mov	r3, #1
   10668:	vcvt.f64.s32	d16, s0
   1066c:	vstr	d16, [sp, #8]
   10670:	bl	4990 <cnxptiee@plt>
   10674:	mov	r1, r0
   10678:	mov	r0, #16
   1067c:	cmp	r1, #0
   10680:	beq	1068c <xport_write_int32+0x4c>
   10684:	sub	sp, fp, #8
   10688:	pop	{r4, r5, fp, pc}
   1068c:	ldr	r2, [r5, #1596]	; 0x63c
   10690:	mov	r1, sp
   10694:	mov	r0, r4
   10698:	bl	48b8 <memcpy@plt>
   1069c:	mov	r0, #0
   106a0:	sub	sp, fp, #8
   106a4:	pop	{r4, r5, fp, pc}

000106a8 <xport_write_float>:
   106a8:	push	{r4, r5, fp, lr}
   106ac:	add	fp, sp, #8
   106b0:	sub	sp, sp, #16
   106b4:	mov	r5, r1
   106b8:	mov	r4, r0
   106bc:	vcvt.f64.f32	d16, s0
   106c0:	add	r0, sp, #8
   106c4:	mov	r2, sp
   106c8:	mov	r1, #0
   106cc:	mov	r3, #1
   106d0:	vstr	d16, [sp, #8]
   106d4:	bl	4990 <cnxptiee@plt>
   106d8:	mov	r1, r0
   106dc:	mov	r0, #16
   106e0:	cmp	r1, #0
   106e4:	beq	106f0 <xport_write_float+0x48>
   106e8:	sub	sp, fp, #8
   106ec:	pop	{r4, r5, fp, pc}
   106f0:	ldr	r2, [r5, #1596]	; 0x63c
   106f4:	mov	r1, sp
   106f8:	mov	r0, r4
   106fc:	bl	48b8 <memcpy@plt>
   10700:	mov	r0, #0
   10704:	sub	sp, fp, #8
   10708:	pop	{r4, r5, fp, pc}

0001070c <xport_write_double>:
   1070c:	push	{r4, r5, fp, lr}
   10710:	add	fp, sp, #8
   10714:	sub	sp, sp, #16
   10718:	mov	r5, r1
   1071c:	mov	r4, r0
   10720:	add	r0, sp, #8
   10724:	mov	r2, sp
   10728:	mov	r1, #0
   1072c:	mov	r3, #1
   10730:	vstr	d0, [sp, #8]
   10734:	bl	4990 <cnxptiee@plt>
   10738:	mov	r1, r0
   1073c:	mov	r0, #16
   10740:	cmp	r1, #0
   10744:	beq	10750 <xport_write_double+0x44>
   10748:	sub	sp, fp, #8
   1074c:	pop	{r4, r5, fp, pc}
   10750:	ldr	r2, [r5, #1596]	; 0x63c
   10754:	mov	r1, sp
   10758:	mov	r0, r4
   1075c:	bl	48b8 <memcpy@plt>
   10760:	mov	r0, #0
   10764:	sub	sp, fp, #8
   10768:	pop	{r4, r5, fp, pc}

0001076c <xport_write_string>:
   1076c:	push	{r4, r5, r6, sl, fp, lr}
   10770:	add	fp, sp, #16
   10774:	mov	r4, r2
   10778:	ldr	r2, [r1, #1596]	; 0x63c
   1077c:	mov	r6, r1
   10780:	mov	r1, #32
   10784:	mov	r5, r0
   10788:	bl	4c00 <memset@plt>
   1078c:	cmp	r4, #0
   10790:	mov	r0, #0
   10794:	ldrbne	r1, [r4]
   10798:	cmpne	r1, #0
   1079c:	bne	107a4 <xport_write_string+0x38>
   107a0:	pop	{r4, r5, r6, sl, fp, pc}
   107a4:	mov	r0, r4
   107a8:	bl	4b58 <strlen@plt>
   107ac:	ldr	r1, [r6, #1596]	; 0x63c
   107b0:	mov	r2, r0
   107b4:	mov	r0, #22
   107b8:	cmp	r2, r1
   107bc:	pophi	{r4, r5, r6, sl, fp, pc}
   107c0:	mov	r0, r5
   107c4:	mov	r1, r4
   107c8:	bl	48b8 <memcpy@plt>
   107cc:	mov	r0, #0
   107d0:	pop	{r4, r5, r6, sl, fp, pc}

000107d4 <xport_write_missing_string>:
   107d4:	push	{fp, lr}
   107d8:	mov	fp, sp
   107dc:	ldr	r2, [r1, #1596]	; 0x63c
   107e0:	mov	r1, #32
   107e4:	bl	4c00 <memset@plt>
   107e8:	mov	r0, #0
   107ec:	pop	{fp, pc}

000107f0 <xport_write_missing_numeric>:
   107f0:	mov	r1, #46	; 0x2e
   107f4:	strb	r1, [r0]
   107f8:	mov	r0, #0
   107fc:	bx	lr

00010800 <xport_write_missing_tagged>:
   10800:	push	{r4, r5, fp, lr}
   10804:	add	fp, sp, #8
   10808:	mov	r5, r0
   1080c:	mov	r0, r2
   10810:	mov	r4, r2
   10814:	bl	4ab0 <sas_validate_tag@plt>
   10818:	cmp	r0, #0
   1081c:	strbeq	r4, [r5]
   10820:	pop	{r4, r5, fp, pc}

00010824 <xport_variable_width>:
   10824:	cmp	r0, #0
   10828:	beq	10844 <xport_variable_width+0x20>
   1082c:	sub	r2, r1, #1
   10830:	mov	r0, #8
   10834:	cmp	r2, #6
   10838:	bxhi	lr
   1083c:	cmp	r1, #3
   10840:	movls	r1, #3
   10844:	mov	r0, r1
   10848:	bx	lr

0001084c <xport_begin_data>:
   1084c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10850:	add	fp, sp, #28
   10854:	sub	sp, sp, #4
   10858:	vpush	{d8-d9}
   1085c:	sub	sp, sp, #288	; 0x120
   10860:	mov	sl, r0
   10864:	ldr	r0, [r0, #20]
   10868:	str	r0, [sp, #144]	; 0x90
   1086c:	add	r0, sp, #144	; 0x90
   10870:	bl	4ac8 <localtime@plt>
   10874:	cmp	r0, #0
   10878:	beq	10ba0 <xport_begin_data+0x354>
   1087c:	ldm	r0, {r1, r2, r3, r7}
   10880:	ldr	r6, [r0, #16]
   10884:	ldr	r0, [r0, #20]
   10888:	ldr	r5, [pc, #3024]	; 11460 <xport_begin_data+0xc14>
   1088c:	add	r9, sp, #144	; 0x90
   10890:	ldr	r5, [pc, r5]
   10894:	add	r6, r5, r6, lsl #2
   10898:	str	r6, [sp]
   1089c:	movw	r6, #34079	; 0x851f
   108a0:	movt	r6, #20971	; 0x51eb
   108a4:	umull	r5, r4, r1, r6
   108a8:	lsr	r5, r4, #5
   108ac:	mov	r4, #100	; 0x64
   108b0:	mls	r1, r5, r4, r1
   108b4:	str	r1, [sp, #16]
   108b8:	umull	r1, r5, r2, r6
   108bc:	lsr	r1, r5, #5
   108c0:	mls	r1, r1, r4, r2
   108c4:	str	r1, [sp, #12]
   108c8:	umull	r1, r2, r3, r6
   108cc:	lsr	r1, r2, #5
   108d0:	mls	r1, r1, r4, r3
   108d4:	str	r1, [sp, #8]
   108d8:	umull	r1, r2, r0, r6
   108dc:	lsr	r1, r2, #5
   108e0:	mls	r0, r1, r4, r0
   108e4:	str	r0, [sp, #4]
   108e8:	umull	r0, r1, r7, r6
   108ec:	add	r6, sp, #75	; 0x4b
   108f0:	ldr	r2, [pc, #2924]	; 11464 <xport_begin_data+0xc18>
   108f4:	lsr	r0, r1, #5
   108f8:	mov	r1, #17
   108fc:	mls	r3, r0, r4, r7
   10900:	mov	r0, r6
   10904:	add	r2, pc, r2
   10908:	bl	4bdc <snprintf@plt>
   1090c:	ldr	r0, [pc, #2900]	; 11468 <xport_begin_data+0xc1c>
   10910:	add	r2, r9, #16
   10914:	add	r0, pc, r0
   10918:	add	r1, r0, #16
   1091c:	vld1.64	{d16-d17}, [r1]
   10920:	mov	r1, #32
   10924:	vld1.64	{d18-d19}, [r0], r1
   10928:	vst1.64	{d16-d17}, [r2]
   1092c:	mov	r2, r9
   10930:	ldr	r0, [r0]
   10934:	vst1.64	{d18-d19}, [r2], r1
   10938:	str	r0, [r2]
   1093c:	ldr	r0, [sl, #8]
   10940:	cmp	r0, #8
   10944:	bne	1095c <xport_begin_data+0x110>
   10948:	mov	r0, #56	; 0x38
   1094c:	strh	r0, [sp, #148]	; 0x94
   10950:	movw	r0, #18764	; 0x494c
   10954:	movt	r0, #22082	; 0x5642
   10958:	str	r0, [sp, #144]	; 0x90
   1095c:	add	r1, sp, #144	; 0x90
   10960:	mov	r0, sl
   10964:	bl	11534 <xport_write_header_record>
   10968:	cmp	r0, #0
   1096c:	bne	10ba4 <xport_begin_data+0x358>
   10970:	ldr	r5, [pc, #2804]	; 1146c <xport_begin_data+0xc20>
   10974:	ldr	r4, [pc, #2804]	; 11470 <xport_begin_data+0xc24>
   10978:	ldr	r8, [pc, #2804]	; 11474 <xport_begin_data+0xc28>
   1097c:	ldr	r0, [pc, #2804]	; 11478 <xport_begin_data+0xc2c>
   10980:	ldr	r3, [pc, #2804]	; 1147c <xport_begin_data+0xc30>
   10984:	mov	r1, #81	; 0x51
   10988:	add	r3, pc, r3
   1098c:	add	r8, pc, r8
   10990:	add	r0, pc, r0
   10994:	add	r5, pc, r5
   10998:	add	r4, pc, r4
   1099c:	str	r3, [sp]
   109a0:	stmib	sp, {r0, r8}
   109a4:	add	r0, sp, #12
   109a8:	stm	r0, {r4, r5, r6}
   109ac:	add	r6, sp, #144	; 0x90
   109b0:	ldr	r2, [pc, #2760]	; 11480 <xport_begin_data+0xc34>
   109b4:	mov	r0, r6
   109b8:	add	r2, pc, r2
   109bc:	bl	4bdc <snprintf@plt>
   109c0:	mov	r0, r6
   109c4:	bl	4b58 <strlen@plt>
   109c8:	mov	r2, r0
   109cc:	mov	r0, sl
   109d0:	mov	r1, r6
   109d4:	mov	r3, #80	; 0x50
   109d8:	str	r5, [sp]
   109dc:	bl	4e58 <readstat_write_bytes_as_lines@plt>
   109e0:	cmp	r0, #0
   109e4:	bne	10ba4 <xport_begin_data+0x358>
   109e8:	ldr	r7, [pc, #2708]	; 11484 <xport_begin_data+0xc38>
   109ec:	mov	r0, sl
   109f0:	mov	r1, #32
   109f4:	mov	r2, #80	; 0x50
   109f8:	add	r7, pc, r7
   109fc:	mov	r3, r7
   10a00:	bl	4e1c <readstat_write_line_padding@plt>
   10a04:	cmp	r0, #0
   10a08:	bne	10ba4 <xport_begin_data+0x358>
   10a0c:	add	r5, sp, #75	; 0x4b
   10a10:	mov	r0, r5
   10a14:	bl	4b58 <strlen@plt>
   10a18:	mov	r2, r0
   10a1c:	mov	r0, sl
   10a20:	mov	r1, r5
   10a24:	mov	r3, #80	; 0x50
   10a28:	str	r7, [sp]
   10a2c:	bl	4e58 <readstat_write_bytes_as_lines@plt>
   10a30:	cmp	r0, #0
   10a34:	bne	10ba4 <xport_begin_data+0x358>
   10a38:	ldr	r3, [pc, #2632]	; 11488 <xport_begin_data+0xc3c>
   10a3c:	mov	r0, sl
   10a40:	mov	r1, #32
   10a44:	mov	r2, #80	; 0x50
   10a48:	mov	r7, #32
   10a4c:	add	r3, pc, r3
   10a50:	bl	4e1c <readstat_write_line_padding@plt>
   10a54:	cmp	r0, #0
   10a58:	bne	10ba4 <xport_begin_data+0x358>
   10a5c:	ldr	r0, [pc, #2600]	; 1148c <xport_begin_data+0xc40>
   10a60:	add	r0, pc, r0
   10a64:	add	r1, r0, #16
   10a68:	vld1.64	{d18-d19}, [r0], r7
   10a6c:	vld1.64	{d16-d17}, [r1]
   10a70:	add	r1, r6, #16
   10a74:	ldr	r0, [r0]
   10a78:	vst1.64	{d18-d19}, [r6], r7
   10a7c:	vst1.64	{d16-d17}, [r1]
   10a80:	str	r0, [r6]
   10a84:	ldr	r0, [sl, #8]
   10a88:	cmp	r0, #8
   10a8c:	bne	10aac <xport_begin_data+0x260>
   10a90:	mov	r0, #0
   10a94:	strb	r0, [sp, #150]	; 0x96
   10a98:	movw	r0, #14422	; 0x3856
   10a9c:	strh	r0, [sp, #148]	; 0x94
   10aa0:	movw	r0, #17741	; 0x454d
   10aa4:	movt	r0, #16973	; 0x424d
   10aa8:	str	r0, [sp, #144]	; 0x90
   10aac:	add	r6, sp, #144	; 0x90
   10ab0:	mov	r0, sl
   10ab4:	mov	r1, r6
   10ab8:	bl	11534 <xport_write_header_record>
   10abc:	cmp	r0, #0
   10ac0:	bne	10ba4 <xport_begin_data+0x358>
   10ac4:	ldr	r0, [pc, #2500]	; 11490 <xport_begin_data+0xc44>
   10ac8:	add	r2, r6, #16
   10acc:	add	r0, pc, r0
   10ad0:	add	r1, r0, #16
   10ad4:	vld1.64	{d16-d17}, [r1]
   10ad8:	mov	r1, #32
   10adc:	vld1.64	{d18-d19}, [r0], r1
   10ae0:	vst1.64	{d16-d17}, [r2]
   10ae4:	ldr	r0, [r0]
   10ae8:	vst1.64	{d18-d19}, [r6], r1
   10aec:	str	r0, [r6]
   10af0:	ldr	r0, [sl, #8]
   10af4:	cmp	r0, #8
   10af8:	bne	10b14 <xport_begin_data+0x2c8>
   10afc:	movw	r0, #22100	; 0x5654
   10b00:	movt	r0, #56	; 0x38
   10b04:	str	r0, [sp, #148]	; 0x94
   10b08:	movw	r0, #21316	; 0x5344
   10b0c:	movt	r0, #20547	; 0x5043
   10b10:	str	r0, [sp, #144]	; 0x90
   10b14:	add	r1, sp, #144	; 0x90
   10b18:	mov	r0, sl
   10b1c:	bl	11534 <xport_write_header_record>
   10b20:	cmp	r0, #0
   10b24:	bne	10ba4 <xport_begin_data+0x358>
   10b28:	ldr	r0, [sl, #8]
   10b2c:	cmp	r0, #8
   10b30:	bne	10bb4 <xport_begin_data+0x368>
   10b34:	mov	r0, sl
   10b38:	add	r6, sp, #144	; 0x90
   10b3c:	ldrb	r1, [r0, #188]!	; 0xbc
   10b40:	ldr	r2, [pc, #2380]	; 11494 <xport_begin_data+0xc48>
   10b44:	ldr	r3, [pc, #2380]	; 11498 <xport_begin_data+0xc4c>
   10b48:	cmp	r1, #0
   10b4c:	add	r3, pc, r3
   10b50:	add	r2, pc, r2
   10b54:	mov	r1, #81	; 0x51
   10b58:	movne	r3, r0
   10b5c:	mov	r0, r6
   10b60:	str	r3, [sp]
   10b64:	stmib	sp, {r2, r8}
   10b68:	str	r4, [sp, #12]
   10b6c:	str	r5, [sp, #16]
   10b70:	ldr	r2, [pc, #2340]	; 1149c <xport_begin_data+0xc50>
   10b74:	ldr	r3, [pc, #2340]	; 114a0 <xport_begin_data+0xc54>
   10b78:	add	r2, pc, r2
   10b7c:	add	r3, pc, r3
   10b80:	bl	4bdc <snprintf@plt>
   10b84:	mov	r0, r6
   10b88:	bl	4b58 <strlen@plt>
   10b8c:	mov	r2, r0
   10b90:	ldr	r0, [pc, #2316]	; 114a4 <xport_begin_data+0xc58>
   10b94:	add	r0, pc, r0
   10b98:	str	r0, [sp]
   10b9c:	b	10c24 <xport_begin_data+0x3d8>
   10ba0:	mov	r0, #39	; 0x27
   10ba4:	sub	sp, fp, #48	; 0x30
   10ba8:	vpop	{d8-d9}
   10bac:	add	sp, sp, #4
   10bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bb4:	mov	r0, sl
   10bb8:	add	r6, sp, #144	; 0x90
   10bbc:	ldrb	r1, [r0, #188]!	; 0xbc
   10bc0:	ldr	r2, [pc, #2272]	; 114a8 <xport_begin_data+0xc5c>
   10bc4:	ldr	r3, [pc, #2272]	; 114ac <xport_begin_data+0xc60>
   10bc8:	cmp	r1, #0
   10bcc:	add	r3, pc, r3
   10bd0:	add	r2, pc, r2
   10bd4:	mov	r1, #81	; 0x51
   10bd8:	movne	r3, r0
   10bdc:	str	r3, [sp]
   10be0:	stmib	sp, {r2, r8}
   10be4:	str	r4, [sp, #12]
   10be8:	ldr	r0, [pc, #2240]	; 114b0 <xport_begin_data+0xc64>
   10bec:	str	r5, [sp, #20]
   10bf0:	add	r0, pc, r0
   10bf4:	str	r0, [sp, #16]
   10bf8:	mov	r4, r0
   10bfc:	mov	r0, r6
   10c00:	ldr	r2, [pc, #2220]	; 114b4 <xport_begin_data+0xc68>
   10c04:	ldr	r3, [pc, #2220]	; 114b8 <xport_begin_data+0xc6c>
   10c08:	add	r2, pc, r2
   10c0c:	add	r3, pc, r3
   10c10:	bl	4bdc <snprintf@plt>
   10c14:	mov	r0, r6
   10c18:	bl	4b58 <strlen@plt>
   10c1c:	mov	r2, r0
   10c20:	str	r4, [sp]
   10c24:	mov	r0, sl
   10c28:	mov	r1, r6
   10c2c:	mov	r3, #80	; 0x50
   10c30:	bl	4e58 <readstat_write_bytes_as_lines@plt>
   10c34:	cmp	r0, #0
   10c38:	bne	10c54 <xport_begin_data+0x408>
   10c3c:	ldr	r3, [pc, #2168]	; 114bc <xport_begin_data+0xc70>
   10c40:	mov	r0, sl
   10c44:	mov	r1, #32
   10c48:	mov	r2, #80	; 0x50
   10c4c:	add	r3, pc, r3
   10c50:	bl	4e1c <readstat_write_line_padding@plt>
   10c54:	cmp	r0, #0
   10c58:	bne	10ba4 <xport_begin_data+0x358>
   10c5c:	ldr	r1, [pc, #2140]	; 114c0 <xport_begin_data+0xc74>
   10c60:	add	r0, sl, #88	; 0x58
   10c64:	add	r6, sp, #144	; 0x90
   10c68:	add	r3, sp, #75	; 0x4b
   10c6c:	add	r1, pc, r1
   10c70:	str	r1, [sp]
   10c74:	stmib	sp, {r0, r1}
   10c78:	mov	r4, r1
   10c7c:	mov	r0, r6
   10c80:	mov	r1, #81	; 0x51
   10c84:	ldr	r2, [pc, #2104]	; 114c4 <xport_begin_data+0xc78>
   10c88:	add	r2, pc, r2
   10c8c:	bl	4bdc <snprintf@plt>
   10c90:	mov	r0, r6
   10c94:	bl	4b58 <strlen@plt>
   10c98:	mov	r2, r0
   10c9c:	mov	r0, sl
   10ca0:	mov	r1, r6
   10ca4:	mov	r3, #80	; 0x50
   10ca8:	str	r4, [sp]
   10cac:	bl	4e58 <readstat_write_bytes_as_lines@plt>
   10cb0:	cmp	r0, #0
   10cb4:	bne	10ba4 <xport_begin_data+0x358>
   10cb8:	ldr	r3, [pc, #2056]	; 114c8 <xport_begin_data+0xc7c>
   10cbc:	mov	r0, sl
   10cc0:	mov	r1, #32
   10cc4:	mov	r2, #80	; 0x50
   10cc8:	add	r3, pc, r3
   10ccc:	bl	4e1c <readstat_write_line_padding@plt>
   10cd0:	cmp	r0, #0
   10cd4:	bne	10ba4 <xport_begin_data+0x358>
   10cd8:	ldr	r1, [pc, #2028]	; 114cc <xport_begin_data+0xc80>
   10cdc:	mov	r0, #0
   10ce0:	strb	r0, [sp, #152]	; 0x98
   10ce4:	str	r0, [sp, #156]	; 0x9c
   10ce8:	add	r1, pc, r1
   10cec:	vldr	d16, [r1]
   10cf0:	add	r1, r6, #20
   10cf4:	vstr	d16, [sp, #144]	; 0x90
   10cf8:	vmov.i32	q8, #0	; 0x00000000
   10cfc:	ldr	r0, [sl, #28]
   10d00:	vst1.32	{d16-d17}, [r1]
   10d04:	str	r0, [sp, #160]	; 0xa0
   10d08:	ldr	r0, [sl, #8]
   10d0c:	cmp	r0, #8
   10d10:	bne	10d2c <xport_begin_data+0x4e0>
   10d14:	movw	r0, #22100	; 0x5654
   10d18:	movt	r0, #56	; 0x38
   10d1c:	str	r0, [sp, #148]	; 0x94
   10d20:	movw	r0, #16718	; 0x414e
   10d24:	movt	r0, #21325	; 0x534d
   10d28:	str	r0, [sp, #144]	; 0x90
   10d2c:	add	r4, sp, #144	; 0x90
   10d30:	mov	r0, sl
   10d34:	mov	r1, r4
   10d38:	bl	11534 <xport_write_header_record>
   10d3c:	cmp	r0, #0
   10d40:	bne	10ba4 <xport_begin_data+0x358>
   10d44:	add	r0, r4, #80	; 0x50
   10d48:	add	r5, r4, #56	; 0x38
   10d4c:	add	r7, r4, #16
   10d50:	mov	r6, #0
   10d54:	mov	r8, #0
   10d58:	str	r0, [sp, #36]	; 0x24
   10d5c:	add	r0, r4, #120	; 0x78
   10d60:	str	r5, [sp, #40]	; 0x28
   10d64:	str	r0, [sp, #28]
   10d68:	add	r0, r4, #88	; 0x58
   10d6c:	str	r0, [sp, #24]
   10d70:	add	r0, r4, #64	; 0x40
   10d74:	str	r0, [sp, #32]
   10d78:	add	r0, r4, #72	; 0x48
   10d7c:	str	r0, [sp, #48]	; 0x30
   10d80:	mov	r0, #0
   10d84:	str	r0, [sp, #44]	; 0x2c
   10d88:	mov	r0, #0
   10d8c:	str	r0, [sp, #64]	; 0x40
   10d90:	ldr	r0, [sl, #28]
   10d94:	cmp	r8, r0
   10d98:	bge	110f0 <xport_begin_data+0x8a4>
   10d9c:	mov	r0, sl
   10da0:	mov	r1, r8
   10da4:	str	r8, [sp, #68]	; 0x44
   10da8:	bl	4ccc <readstat_get_variable@plt>
   10dac:	mov	r8, r0
   10db0:	ldr	r0, [r0, #1600]	; 0x640
   10db4:	str	r6, [sp, #56]	; 0x38
   10db8:	ldr	r1, [r8]
   10dbc:	cmp	r1, #0
   10dc0:	beq	10ddc <xport_begin_data+0x590>
   10dc4:	sub	r1, r0, #1
   10dc8:	mov	r6, #8
   10dcc:	cmp	r1, #6
   10dd0:	bhi	10de0 <xport_begin_data+0x594>
   10dd4:	cmp	r0, #3
   10dd8:	movls	r0, #3
   10ddc:	mov	r6, r0
   10de0:	mov	r0, r4
   10de4:	mov	r1, #0
   10de8:	mov	r2, #140	; 0x8c
   10dec:	bl	4c00 <memset@plt>
   10df0:	ldr	r0, [sp, #68]	; 0x44
   10df4:	str	r6, [sp, #52]	; 0x34
   10df8:	add	r0, r0, #1
   10dfc:	strh	r0, [sp, #150]	; 0x96
   10e00:	str	r0, [sp, #68]	; 0x44
   10e04:	movw	r0, #8224	; 0x2020
   10e08:	strh	r6, [sp, #148]	; 0x94
   10e0c:	movt	r0, #8224	; 0x2020
   10e10:	mov	r1, r0
   10e14:	str	r0, [r5, #4]
   10e18:	str	r0, [r5]
   10e1c:	ldr	r0, [sp, #48]	; 0x30
   10e20:	str	r1, [r0, #4]
   10e24:	str	r1, [r0]
   10e28:	ldr	r0, [sp, #64]	; 0x40
   10e2c:	str	r0, [sp, #228]	; 0xe4
   10e30:	mov	r0, r8
   10e34:	bl	4e7c <readstat_variable_get_type_class@plt>
   10e38:	cmp	r0, #0
   10e3c:	mov	r0, #1
   10e40:	add	r6, r8, #8
   10e44:	mov	r1, #8
   10e48:	movweq	r0, #2
   10e4c:	strh	r0, [sp, #144]	; 0x90
   10e50:	ldrb	r0, [r8, r1]
   10e54:	cmp	r0, #0
   10e58:	beq	10e74 <xport_begin_data+0x628>
   10e5c:	strb	r0, [r4, r1]
   10e60:	add	r1, r1, #1
   10e64:	add	r0, r4, r1
   10e68:	cmp	r0, r7
   10e6c:	bcc	10e50 <xport_begin_data+0x604>
   10e70:	b	10e78 <xport_begin_data+0x62c>
   10e74:	add	r0, r4, r1
   10e78:	cmp	r0, r7
   10e7c:	bcs	10e94 <xport_begin_data+0x648>
   10e80:	rsb	r1, r0, #8
   10e84:	add	r1, r4, r1
   10e88:	add	r2, r1, #8
   10e8c:	mov	r1, #32
   10e90:	bl	4c00 <memset@plt>
   10e94:	add	r4, r8, #564	; 0x234
   10e98:	mov	r1, #0
   10e9c:	ldrb	r0, [r4, r1]
   10ea0:	cmp	r0, #0
   10ea4:	beq	10ec0 <xport_begin_data+0x674>
   10ea8:	strb	r0, [r7, r1]
   10eac:	add	r1, r1, #1
   10eb0:	add	r0, r7, r1
   10eb4:	cmp	r0, r5
   10eb8:	bcc	10e9c <xport_begin_data+0x650>
   10ebc:	b	10ec4 <xport_begin_data+0x678>
   10ec0:	add	r0, r7, r1
   10ec4:	cmp	r0, r5
   10ec8:	bcs	10ee4 <xport_begin_data+0x698>
   10ecc:	rsb	r1, r0, #40	; 0x28
   10ed0:	add	r2, sp, #144	; 0x90
   10ed4:	add	r1, r2, r1
   10ed8:	add	r2, r1, #16
   10edc:	mov	r1, #32
   10ee0:	bl	4c00 <memset@plt>
   10ee4:	mov	r0, r8
   10ee8:	ldrb	r1, [r0, #308]!	; 0x134
   10eec:	cmp	r1, #0
   10ef0:	beq	10ff8 <xport_begin_data+0x7ac>
   10ef4:	mov	r1, #0
   10ef8:	add	r2, sp, #104	; 0x68
   10efc:	add	r3, sp, #140	; 0x8c
   10f00:	str	r1, [sp, #92]	; 0x5c
   10f04:	str	r1, [sp, #140]	; 0x8c
   10f08:	add	r1, sp, #92	; 0x5c
   10f0c:	str	r1, [sp]
   10f10:	ldr	r1, [pc, #1464]	; 114d0 <xport_begin_data+0xc84>
   10f14:	add	r1, pc, r1
   10f18:	bl	4be8 <__isoc99_sscanf@plt>
   10f1c:	mov	r0, r5
   10f20:	ldr	r3, [sp, #36]	; 0x24
   10f24:	ldr	r5, [sp, #32]
   10f28:	add	r1, sp, #104	; 0x68
   10f2c:	ldrb	r2, [r1]
   10f30:	cmp	r2, #0
   10f34:	beq	10f48 <xport_begin_data+0x6fc>
   10f38:	strb	r2, [r0], #1
   10f3c:	add	r1, r1, #1
   10f40:	cmp	r0, r5
   10f44:	bcc	10f2c <xport_begin_data+0x6e0>
   10f48:	cmp	r0, r5
   10f4c:	bcs	10f6c <xport_begin_data+0x720>
   10f50:	rsb	r1, r0, #8
   10f54:	add	r2, sp, #144	; 0x90
   10f58:	add	r1, r2, r1
   10f5c:	add	r2, r1, #56	; 0x38
   10f60:	mov	r1, #32
   10f64:	bl	4c00 <memset@plt>
   10f68:	ldr	r3, [sp, #36]	; 0x24
   10f6c:	ldr	r0, [sp, #140]	; 0x8c
   10f70:	add	r1, sp, #104	; 0x68
   10f74:	strh	r0, [sp, #208]	; 0xd0
   10f78:	ldr	r0, [sp, #92]	; 0x5c
   10f7c:	strh	r0, [sp, #210]	; 0xd2
   10f80:	ldr	r0, [sp, #48]	; 0x30
   10f84:	ldrb	r2, [r1]
   10f88:	cmp	r2, #0
   10f8c:	beq	10fa0 <xport_begin_data+0x754>
   10f90:	strb	r2, [r0], #1
   10f94:	add	r1, r1, #1
   10f98:	cmp	r0, r3
   10f9c:	bcc	10f84 <xport_begin_data+0x738>
   10fa0:	cmp	r0, r3
   10fa4:	bcs	10fc0 <xport_begin_data+0x774>
   10fa8:	rsb	r1, r0, #8
   10fac:	add	r2, sp, #144	; 0x90
   10fb0:	add	r1, r2, r1
   10fb4:	add	r2, r1, #72	; 0x48
   10fb8:	mov	r1, #32
   10fbc:	bl	4c00 <memset@plt>
   10fc0:	ldr	r0, [sp, #140]	; 0x8c
   10fc4:	strh	r0, [sp, #224]	; 0xe0
   10fc8:	ldr	r0, [sp, #92]	; 0x5c
   10fcc:	strh	r0, [sp, #226]	; 0xe2
   10fd0:	add	r0, sp, #104	; 0x68
   10fd4:	bl	4b58 <strlen@plt>
   10fd8:	cmp	r0, #8
   10fdc:	ldr	r0, [sp, #44]	; 0x2c
   10fe0:	movwhi	r0, #1
   10fe4:	str	r0, [sp, #44]	; 0x2c
   10fe8:	mov	r0, #0
   10fec:	movwhi	r0, #1
   10ff0:	str	r0, [sp, #60]	; 0x3c
   10ff4:	b	1100c <xport_begin_data+0x7c0>
   10ff8:	ldr	r0, [r8, #2136]	; 0x858
   10ffc:	mov	r1, #0
   11000:	str	r1, [sp, #60]	; 0x3c
   11004:	cmp	r0, #0
   11008:	strhne	r0, [sp, #208]	; 0xd0
   1100c:	ldr	r0, [r8, #2132]	; 0x854
   11010:	sub	r0, r0, #3
   11014:	clz	r0, r0
   11018:	lsr	r0, r0, #5
   1101c:	strh	r0, [sp, #212]	; 0xd4
   11020:	ldr	r0, [sl, #8]
   11024:	cmp	r0, #8
   11028:	bne	11090 <xport_begin_data+0x844>
   1102c:	ldr	r0, [sp, #24]
   11030:	ldr	r2, [sp, #28]
   11034:	ldrb	r1, [r6]
   11038:	cmp	r1, #0
   1103c:	beq	11050 <xport_begin_data+0x804>
   11040:	strb	r1, [r0], #1
   11044:	add	r6, r6, #1
   11048:	cmp	r0, r2
   1104c:	bcc	11034 <xport_begin_data+0x7e8>
   11050:	cmp	r0, r2
   11054:	bcs	11070 <xport_begin_data+0x824>
   11058:	rsb	r1, r0, #32
   1105c:	add	r2, sp, #144	; 0x90
   11060:	add	r1, r2, r1
   11064:	add	r2, r1, #88	; 0x58
   11068:	mov	r1, #32
   1106c:	bl	4c00 <memset@plt>
   11070:	mov	r0, r4
   11074:	bl	4b58 <strlen@plt>
   11078:	add	lr, sp, #256	; 0x100
   1107c:	cmp	r0, #40	; 0x28
   11080:	strh	r0, [lr, #8]
   11084:	ldr	r0, [sp, #60]	; 0x3c
   11088:	movwhi	r0, #1
   1108c:	str	r0, [sp, #60]	; 0x3c
   11090:	ldr	r6, [sp, #56]	; 0x38
   11094:	ldr	r5, [sp, #40]	; 0x28
   11098:	ldr	r8, [sp, #68]	; 0x44
   1109c:	mov	r0, r9
   110a0:	bl	4a14 <xport_namestr_bswap@plt>
   110a4:	ldr	r0, [pc, #1064]	; 114d4 <xport_begin_data+0xc88>
   110a8:	add	r4, sp, #144	; 0x90
   110ac:	mov	r2, #140	; 0x8c
   110b0:	mov	r3, #80	; 0x50
   110b4:	mov	r1, r4
   110b8:	add	r0, pc, r0
   110bc:	str	r0, [sp]
   110c0:	mov	r0, sl
   110c4:	bl	4e58 <readstat_write_bytes_as_lines@plt>
   110c8:	ldr	r1, [sp, #60]	; 0x3c
   110cc:	ldr	r2, [sp, #52]	; 0x34
   110d0:	cmp	r1, #0
   110d4:	ldr	r1, [sp, #64]	; 0x40
   110d8:	addne	r6, r6, #1
   110dc:	cmp	r0, #0
   110e0:	add	r1, r2, r1
   110e4:	str	r1, [sp, #64]	; 0x40
   110e8:	beq	10d90 <xport_begin_data+0x544>
   110ec:	b	10ba4 <xport_begin_data+0x358>
   110f0:	ldr	r5, [pc, #992]	; 114d8 <xport_begin_data+0xc8c>
   110f4:	mov	r0, sl
   110f8:	mov	r1, #32
   110fc:	mov	r2, #80	; 0x50
   11100:	add	r5, pc, r5
   11104:	mov	r3, r5
   11108:	bl	4e1c <readstat_write_line_padding@plt>
   1110c:	cmp	r0, #0
   11110:	bne	10ba4 <xport_begin_data+0x358>
   11114:	ldr	r0, [sl, #8]
   11118:	cmp	r6, #0
   1111c:	beq	11400 <xport_begin_data+0xbb4>
   11120:	cmp	r0, #8
   11124:	bne	11400 <xport_begin_data+0xbb4>
   11128:	ldr	r1, [pc, #940]	; 114dc <xport_begin_data+0xc90>
   1112c:	add	r0, sp, #104	; 0x68
   11130:	vmov.i32	q8, #0	; 0x00000000
   11134:	mov	r2, r6
   11138:	add	r0, r0, #16
   1113c:	vst1.64	{d16-d17}, [r0]
   11140:	mov	r0, #0
   11144:	strb	r0, [sp, #112]	; 0x70
   11148:	str	r6, [sp, #116]	; 0x74
   1114c:	str	r0, [sp, #136]	; 0x88
   11150:	ldr	r0, [sp, #44]	; 0x2c
   11154:	add	r1, pc, r1
   11158:	vldr	d18, [r1]
   1115c:	cmp	r0, #0
   11160:	vstr	d18, [sp, #104]	; 0x68
   11164:	beq	11180 <xport_begin_data+0x934>
   11168:	movw	r0, #22092	; 0x564c
   1116c:	movt	r0, #57	; 0x39
   11170:	str	r0, [sp, #108]	; 0x6c
   11174:	movw	r0, #16716	; 0x414c
   11178:	movt	r0, #17730	; 0x4542
   1117c:	str	r0, [sp, #104]	; 0x68
   11180:	str	r2, [sp]
   11184:	add	r4, sp, #144	; 0x90
   11188:	add	r3, sp, #104	; 0x68
   1118c:	mov	r1, #81	; 0x51
   11190:	ldr	r2, [pc, #840]	; 114e0 <xport_begin_data+0xc94>
   11194:	mov	r0, r4
   11198:	add	r2, pc, r2
   1119c:	bl	4bdc <snprintf@plt>
   111a0:	mov	r0, r4
   111a4:	bl	4b58 <strlen@plt>
   111a8:	mov	r2, r0
   111ac:	mov	r0, sl
   111b0:	mov	r1, r4
   111b4:	mov	r3, #80	; 0x50
   111b8:	str	r5, [sp]
   111bc:	bl	4e58 <readstat_write_bytes_as_lines@plt>
   111c0:	cmp	r0, #0
   111c4:	bne	10ba4 <xport_begin_data+0x358>
   111c8:	ldr	r3, [pc, #788]	; 114e4 <xport_begin_data+0xc98>
   111cc:	mov	r0, sl
   111d0:	mov	r1, #32
   111d4:	mov	r2, #80	; 0x50
   111d8:	add	r3, pc, r3
   111dc:	bl	4e1c <readstat_write_line_padding@plt>
   111e0:	cmp	r0, #0
   111e4:	bne	10ba4 <xport_begin_data+0x358>
   111e8:	ldr	r0, [sl, #28]
   111ec:	cmp	r0, #1
   111f0:	blt	113dc <xport_begin_data+0xb90>
   111f4:	vmov.i32	q4, #0	; 0x00000000
   111f8:	mov	r8, #0
   111fc:	mov	r0, sl
   11200:	mov	r1, r8
   11204:	bl	4ccc <readstat_get_variable@plt>
   11208:	mov	r5, r0
   1120c:	add	r0, r0, #564	; 0x234
   11210:	str	r0, [sp, #68]	; 0x44
   11214:	bl	4b58 <strlen@plt>
   11218:	mov	r9, r0
   1121c:	add	r0, r5, #8
   11220:	mov	r6, r0
   11224:	bl	4b58 <strlen@plt>
   11228:	mov	r4, r0
   1122c:	add	r0, sp, #144	; 0x90
   11230:	mov	r1, #20
   11234:	vst1.64	{d8-d9}, [r0], r1
   11238:	mov	r1, #0
   1123c:	str	r1, [r0]
   11240:	str	r1, [sp, #160]	; 0xa0
   11244:	ldrb	r0, [r5, #308]!	; 0x134
   11248:	cmp	r0, #0
   1124c:	beq	11298 <xport_begin_data+0xa4c>
   11250:	mov	r0, #2
   11254:	add	r2, sp, #144	; 0x90
   11258:	add	r3, sp, #140	; 0x8c
   1125c:	str	r0, [sp, #92]	; 0x5c
   11260:	mov	r0, #8
   11264:	str	r0, [sp, #140]	; 0x8c
   11268:	add	r0, sp, #92	; 0x5c
   1126c:	str	r0, [sp]
   11270:	mov	r0, r5
   11274:	ldr	r1, [pc, #620]	; 114e8 <xport_begin_data+0xc9c>
   11278:	add	r1, pc, r1
   1127c:	bl	4be8 <__isoc99_sscanf@plt>
   11280:	cmp	r0, #0
   11284:	ble	11458 <xport_begin_data+0xc0c>
   11288:	add	r0, sp, #144	; 0x90
   1128c:	bl	4b58 <strlen@plt>
   11290:	cmp	r0, #9
   11294:	bge	11304 <xport_begin_data+0xab8>
   11298:	cmp	r9, #41	; 0x29
   1129c:	bcc	113cc <xport_begin_data+0xb80>
   112a0:	add	r0, r8, #1
   112a4:	strh	r4, [sp, #94]	; 0x5e
   112a8:	strh	r9, [sp, #96]	; 0x60
   112ac:	strh	r0, [sp, #92]	; 0x5c
   112b0:	bl	4858 <machine_is_little_endian@plt>
   112b4:	cmp	r0, #0
   112b8:	beq	112e0 <xport_begin_data+0xa94>
   112bc:	ldrh	r0, [sp, #92]	; 0x5c
   112c0:	bl	484c <byteswap2@plt>
   112c4:	strh	r0, [sp, #92]	; 0x5c
   112c8:	ldrh	r0, [sp, #94]	; 0x5e
   112cc:	bl	484c <byteswap2@plt>
   112d0:	strh	r0, [sp, #94]	; 0x5e
   112d4:	ldrh	r0, [sp, #96]	; 0x60
   112d8:	bl	484c <byteswap2@plt>
   112dc:	strh	r0, [sp, #96]	; 0x60
   112e0:	mov	r0, sl
   112e4:	add	r1, sp, #92	; 0x5c
   112e8:	mov	r2, #6
   112ec:	bl	4d98 <readstat_write_bytes@plt>
   112f0:	cmp	r0, #0
   112f4:	bne	10ba4 <xport_begin_data+0x358>
   112f8:	mov	r0, sl
   112fc:	mov	r1, r6
   11300:	b	113ac <xport_begin_data+0xb60>
   11304:	strh	r4, [sp, #94]	; 0x5e
   11308:	strh	r0, [sp, #96]	; 0x60
   1130c:	strh	r0, [sp, #98]	; 0x62
   11310:	add	r0, r8, #1
   11314:	strh	r9, [sp, #100]	; 0x64
   11318:	strh	r0, [sp, #92]	; 0x5c
   1131c:	bl	4858 <machine_is_little_endian@plt>
   11320:	cmp	r0, #0
   11324:	beq	11364 <xport_begin_data+0xb18>
   11328:	ldrh	r0, [sp, #92]	; 0x5c
   1132c:	bl	484c <byteswap2@plt>
   11330:	strh	r0, [sp, #92]	; 0x5c
   11334:	ldrh	r0, [sp, #94]	; 0x5e
   11338:	bl	484c <byteswap2@plt>
   1133c:	strh	r0, [sp, #94]	; 0x5e
   11340:	ldrh	r0, [sp, #96]	; 0x60
   11344:	bl	484c <byteswap2@plt>
   11348:	strh	r0, [sp, #96]	; 0x60
   1134c:	ldrh	r0, [sp, #98]	; 0x62
   11350:	bl	484c <byteswap2@plt>
   11354:	strh	r0, [sp, #98]	; 0x62
   11358:	ldrh	r0, [sp, #100]	; 0x64
   1135c:	bl	484c <byteswap2@plt>
   11360:	strh	r0, [sp, #100]	; 0x64
   11364:	mov	r0, sl
   11368:	add	r1, sp, #92	; 0x5c
   1136c:	mov	r2, #10
   11370:	bl	4d98 <readstat_write_bytes@plt>
   11374:	cmp	r0, #0
   11378:	bne	10ba4 <xport_begin_data+0x358>
   1137c:	mov	r0, sl
   11380:	mov	r1, r6
   11384:	bl	4abc <readstat_write_string@plt>
   11388:	cmp	r0, #0
   1138c:	bne	10ba4 <xport_begin_data+0x358>
   11390:	mov	r0, sl
   11394:	add	r1, sp, #144	; 0x90
   11398:	bl	4abc <readstat_write_string@plt>
   1139c:	cmp	r0, #0
   113a0:	bne	10ba4 <xport_begin_data+0x358>
   113a4:	mov	r0, sl
   113a8:	add	r1, sp, #144	; 0x90
   113ac:	bl	4abc <readstat_write_string@plt>
   113b0:	cmp	r0, #0
   113b4:	bne	10ba4 <xport_begin_data+0x358>
   113b8:	ldr	r1, [sp, #68]	; 0x44
   113bc:	mov	r0, sl
   113c0:	bl	4abc <readstat_write_string@plt>
   113c4:	cmp	r0, #0
   113c8:	bne	10ba4 <xport_begin_data+0x358>
   113cc:	ldr	r0, [sl, #28]
   113d0:	add	r8, r8, #1
   113d4:	cmp	r8, r0
   113d8:	blt	111fc <xport_begin_data+0x9b0>
   113dc:	ldr	r3, [pc, #264]	; 114ec <xport_begin_data+0xca0>
   113e0:	mov	r0, sl
   113e4:	mov	r1, #32
   113e8:	mov	r2, #80	; 0x50
   113ec:	add	r3, pc, r3
   113f0:	bl	4e1c <readstat_write_line_padding@plt>
   113f4:	cmp	r0, #0
   113f8:	bne	10ba4 <xport_begin_data+0x358>
   113fc:	ldr	r0, [sl, #8]
   11400:	vmov.i32	q8, #0	; 0x00000000
   11404:	mov	r1, #32
   11408:	add	r2, sp, #144	; 0x90
   1140c:	cmp	r0, #8
   11410:	vst1.64	{d16-d17}, [r2], r1
   11414:	mov	r1, #0
   11418:	vst1.64	{d16-d17}, [r7]
   1141c:	str	r1, [r2]
   11420:	movw	r1, #16975	; 0x424f
   11424:	strh	r1, [sp, #144]	; 0x90
   11428:	mov	r1, #83	; 0x53
   1142c:	strb	r1, [sp, #146]	; 0x92
   11430:	bne	11448 <xport_begin_data+0xbfc>
   11434:	mov	r0, #56	; 0x38
   11438:	strh	r0, [sp, #148]	; 0x94
   1143c:	movw	r0, #16975	; 0x424f
   11440:	movt	r0, #22099	; 0x5653
   11444:	str	r0, [sp, #144]	; 0x90
   11448:	add	r1, sp, #144	; 0x90
   1144c:	mov	r0, sl
   11450:	bl	11534 <xport_write_header_record>
   11454:	b	10ba4 <xport_begin_data+0x358>
   11458:	mov	r0, #11
   1145c:	b	10ba4 <xport_begin_data+0x358>
   11460:	.word	0x00038a0c
   11464:	.word	0x00018e07
   11468:	.word	0x00018f2c
   1146c:	.word	0x00019152
   11470:	.word	0x00018e13
   11474:	.word	0x00018e1a
   11478:	.word	0x00018e0f
   1147c:	.word	0x00018e13
   11480:	.word	0x00018db5
   11484:	.word	0x000190ee
   11488:	.word	0x0001909a
   1148c:	.word	0x00018e08
   11490:	.word	0x00018dc4
   11494:	.word	0x00018c6a
   11498:	.word	0x00018c66
   1149c:	.word	0x00018c4a
   114a0:	.word	0x00018c1f
   114a4:	.word	0x00018f52
   114a8:	.word	0x00018bea
   114ac:	.word	0x00018be6
   114b0:	.word	0x00018ef6
   114b4:	.word	0x00018b65
   114b8:	.word	0x00018b8f
   114bc:	.word	0x00018e9a
   114c0:	.word	0x00018e7a
   114c4:	.word	0x00018b62
   114c8:	.word	0x00018e1e
   114cc:	.word	0x00018bd0
   114d0:	.word	0x000187e6
   114d4:	.word	0x00018a2e
   114d8:	.word	0x000189e6
   114dc:	.word	0x00018774
   114e0:	.word	0x0001866f
   114e4:	.word	0x0001890e
   114e8:	.word	0x00018482
   114ec:	.word	0x000186fa

000114f0 <xport_end_data>:
   114f0:	ldr	r3, [pc, #12]	; 11504 <xport_end_data+0x14>
   114f4:	mov	r1, #32
   114f8:	mov	r2, #80	; 0x50
   114fc:	add	r3, pc, r3
   11500:	b	4e1c <readstat_write_line_padding@plt>
   11504:	.word	0x000185ea

00011508 <xport_write_row>:
   11508:	push	{fp, lr}
   1150c:	mov	fp, sp
   11510:	sub	sp, sp, #8
   11514:	ldr	r3, [pc, #20]	; 11530 <xport_write_row+0x28>
   11518:	add	r3, pc, r3
   1151c:	str	r3, [sp]
   11520:	mov	r3, #80	; 0x50
   11524:	bl	4e58 <readstat_write_bytes_as_lines@plt>
   11528:	mov	sp, fp
   1152c:	pop	{fp, pc}
   11530:	.word	0x000185ce

00011534 <xport_write_header_record>:
   11534:	push	{r4, r5, r6, r7, fp, lr}
   11538:	add	fp, sp, #16
   1153c:	sub	sp, sp, #112	; 0x70
   11540:	mov	r3, r1
   11544:	mov	r7, r0
   11548:	ldr	r0, [r1, #12]
   1154c:	ldr	r1, [r1, #16]
   11550:	ldr	r2, [r3, #20]
   11554:	ldr	r5, [r3, #24]
   11558:	ldr	r4, [r3, #28]
   1155c:	ldr	r6, [r3, #32]
   11560:	stm	sp, {r0, r1, r2, r5}
   11564:	str	r4, [sp, #16]
   11568:	str	r6, [sp, #20]
   1156c:	add	r5, sp, #31
   11570:	mov	r1, #81	; 0x51
   11574:	ldr	r2, [pc, #96]	; 115dc <xport_write_header_record+0xa8>
   11578:	mov	r0, r5
   1157c:	add	r2, pc, r2
   11580:	bl	4bdc <snprintf@plt>
   11584:	mov	r0, r5
   11588:	bl	4b58 <strlen@plt>
   1158c:	mov	r2, r0
   11590:	ldr	r0, [pc, #72]	; 115e0 <xport_write_header_record+0xac>
   11594:	mov	r1, r5
   11598:	mov	r3, #80	; 0x50
   1159c:	add	r0, pc, r0
   115a0:	str	r0, [sp]
   115a4:	mov	r0, r7
   115a8:	bl	4e58 <readstat_write_bytes_as_lines@plt>
   115ac:	cmp	r0, #0
   115b0:	beq	115bc <xport_write_header_record+0x88>
   115b4:	sub	sp, fp, #16
   115b8:	pop	{r4, r5, r6, r7, fp, pc}
   115bc:	ldr	r3, [pc, #32]	; 115e4 <xport_write_header_record+0xb0>
   115c0:	mov	r0, r7
   115c4:	mov	r1, #32
   115c8:	mov	r2, #80	; 0x50
   115cc:	add	r3, pc, r3
   115d0:	bl	4e1c <readstat_write_line_padding@plt>
   115d4:	sub	sp, fp, #16
   115d8:	pop	{r4, r5, r6, r7, fp, pc}
   115dc:	.word	0x000181ac
   115e0:	.word	0x0001854a
   115e4:	.word	0x0001851a

000115e8 <por_ctx_init>:
   115e8:	push	{r4, sl, fp, lr}
   115ec:	add	fp, sp, #8
   115f0:	mov	r0, #1
   115f4:	mov	r1, #660	; 0x294
   115f8:	bl	472c <calloc@plt>
   115fc:	mov	r4, r0
   11600:	mov	r0, #32
   11604:	strb	r0, [r4, #48]	; 0x30
   11608:	mov	r0, #20
   1160c:	str	r0, [r4, #608]	; 0x260
   11610:	mov	r0, #1024	; 0x400
   11614:	bl	4af8 <ck_hash_table_init@plt>
   11618:	str	r0, [r4, #656]	; 0x290
   1161c:	mov	r0, r4
   11620:	pop	{r4, sl, fp, pc}

00011624 <por_ctx_free>:
   11624:	push	{r4, r5, r6, sl, fp, lr}
   11628:	add	fp, sp, #16
   1162c:	mov	r4, r0
   11630:	ldr	r0, [r0, #616]	; 0x268
   11634:	cmp	r0, #0
   11638:	beq	11640 <por_ctx_free+0x1c>
   1163c:	bl	4864 <free@plt>
   11640:	ldr	r0, [r4, #652]	; 0x28c
   11644:	cmp	r0, #0
   11648:	beq	11690 <por_ctx_free+0x6c>
   1164c:	ldr	r2, [r4, #632]	; 0x278
   11650:	cmp	r2, #1
   11654:	blt	1168c <por_ctx_free+0x68>
   11658:	mov	r5, #0
   1165c:	mov	r6, #264	; 0x108
   11660:	ldr	r1, [r0, r6]
   11664:	cmp	r1, #0
   11668:	beq	1167c <por_ctx_free+0x58>
   1166c:	mov	r0, r1
   11670:	bl	4864 <free@plt>
   11674:	ldr	r2, [r4, #632]	; 0x278
   11678:	ldr	r0, [r4, #652]	; 0x28c
   1167c:	add	r5, r5, #1
   11680:	add	r6, r6, #280	; 0x118
   11684:	cmp	r5, r2
   11688:	blt	11660 <por_ctx_free+0x3c>
   1168c:	bl	4864 <free@plt>
   11690:	ldr	r0, [r4, #648]	; 0x288
   11694:	cmp	r0, #0
   11698:	beq	116d8 <por_ctx_free+0xb4>
   1169c:	ldr	r2, [r4, #632]	; 0x278
   116a0:	cmp	r2, #1
   116a4:	blt	116d4 <por_ctx_free+0xb0>
   116a8:	mov	r5, #0
   116ac:	ldr	r1, [r0, r5, lsl #2]
   116b0:	cmp	r1, #0
   116b4:	beq	116c8 <por_ctx_free+0xa4>
   116b8:	mov	r0, r1
   116bc:	bl	4864 <free@plt>
   116c0:	ldr	r2, [r4, #632]	; 0x278
   116c4:	ldr	r0, [r4, #648]	; 0x288
   116c8:	add	r5, r5, #1
   116cc:	cmp	r5, r2
   116d0:	blt	116ac <por_ctx_free+0x88>
   116d4:	bl	4864 <free@plt>
   116d8:	ldr	r0, [r4, #656]	; 0x290
   116dc:	cmp	r0, #0
   116e0:	beq	116e8 <por_ctx_free+0xc4>
   116e4:	bl	4ba0 <ck_hash_table_free@plt>
   116e8:	ldr	r0, [r4, #612]	; 0x264
   116ec:	cmp	r0, #0
   116f0:	beq	116f8 <por_ctx_free+0xd4>
   116f4:	bl	478c <iconv_close@plt>
   116f8:	mov	r0, r4
   116fc:	pop	{r4, r5, r6, sl, fp, lr}
   11700:	b	4864 <free@plt>

00011704 <por_utf8_encode>:
   11704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11708:	add	fp, sp, #28
   1170c:	sub	sp, sp, #4
   11710:	cmp	r1, #0
   11714:	beq	117dc <por_utf8_encode+0xd8>
   11718:	ldr	r8, [fp, #8]
   1171c:	mov	r5, r2
   11720:	mov	r9, #0
   11724:	mov	r4, #0
   11728:	str	r1, [sp]
   1172c:	ldrb	r2, [r0, r9]
   11730:	add	r2, r8, r2, lsl #1
   11734:	ldrh	r7, [r2]
   11738:	cmp	r7, #0
   1173c:	mvneq	r7, #2
   11740:	uxth	r2, r7
   11744:	cmp	r2, #32
   11748:	bcc	117e4 <por_utf8_encode+0xe0>
   1174c:	cmp	r2, #127	; 0x7f
   11750:	bhi	1176c <por_utf8_encode+0x68>
   11754:	add	r2, r4, #1
   11758:	cmp	r2, r3
   1175c:	bhi	117e8 <por_utf8_encode+0xe4>
   11760:	strb	r7, [r5, r4]
   11764:	mov	r4, r2
   11768:	b	117cc <por_utf8_encode+0xc8>
   1176c:	and	r7, r7, #63488	; 0xf800
   11770:	mov	r6, #0
   11774:	cmp	r6, r7, lsr #11
   11778:	addne	r7, r4, #3
   1177c:	addeq	r7, r4, #2
   11780:	cmp	r7, r3
   11784:	bhi	117e8 <por_utf8_encode+0xe4>
   11788:	ldr	r1, [pc, #100]	; 117f4 <por_utf8_encode+0xf0>
   1178c:	mov	sl, r5
   11790:	add	r5, r5, r4
   11794:	mov	r7, r0
   11798:	mov	r6, r3
   1179c:	mov	r0, r5
   117a0:	add	r1, pc, r1
   117a4:	bl	4d38 <sprintf@plt>
   117a8:	cmp	r0, #0
   117ac:	ldr	r1, [sp]
   117b0:	mov	r3, r6
   117b4:	movle	r0, #32
   117b8:	strble	r0, [r5]
   117bc:	movle	r0, #1
   117c0:	mov	r5, sl
   117c4:	add	r4, r0, r4
   117c8:	mov	r0, r7
   117cc:	add	r9, r9, #1
   117d0:	cmp	r9, r1
   117d4:	bcc	1172c <por_utf8_encode+0x28>
   117d8:	b	117e8 <por_utf8_encode+0xe4>
   117dc:	mov	r4, #0
   117e0:	b	117e8 <por_utf8_encode+0xe4>
   117e4:	mvn	r4, #0
   117e8:	mov	r0, r4
   117ec:	sub	sp, fp, #28
   117f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117f4:	.word	0x00018131

000117f8 <por_utf8_decode>:
   117f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117fc:	add	fp, sp, #28
   11800:	sub	sp, sp, #12
   11804:	mov	r6, r0
   11808:	mov	r0, #0
   1180c:	cmp	r3, #0
   11810:	str	r0, [sp, #8]
   11814:	str	r0, [sp, #4]
   11818:	beq	118c4 <por_utf8_decode+0xcc>
   1181c:	ldr	sl, [fp, #8]
   11820:	mov	r4, r3
   11824:	mov	r5, r2
   11828:	mov	r8, #0
   1182c:	add	r7, sp, #4
   11830:	mov	r9, #0
   11834:	ldrb	r0, [r6]
   11838:	sub	r1, r0, #32
   1183c:	uxtb	r1, r1
   11840:	cmp	r1, #94	; 0x5e
   11844:	bhi	11860 <por_utf8_decode+0x68>
   11848:	ldrb	r0, [sl, r0]
   1184c:	cmp	r0, #0
   11850:	beq	118cc <por_utf8_decode+0xd4>
   11854:	strb	r0, [r5, r9]
   11858:	mov	r0, #1
   1185c:	b	118ac <por_utf8_decode+0xb4>
   11860:	ldr	r1, [pc, #112]	; 118d8 <por_utf8_decode+0xe0>
   11864:	mov	r0, r6
   11868:	add	r2, sp, #8
   1186c:	mov	r3, r7
   11870:	add	r1, pc, r1
   11874:	bl	4be8 <__isoc99_sscanf@plt>
   11878:	mov	r1, r0
   1187c:	mvn	r0, #0
   11880:	cmp	r1, #0
   11884:	beq	118c4 <por_utf8_decode+0xcc>
   11888:	ldr	r1, [sp, #8]
   1188c:	ldr	r2, [fp, #12]
   11890:	cmp	r1, r2
   11894:	bcs	118c4 <por_utf8_decode+0xcc>
   11898:	ldrb	r1, [sl, r1]
   1189c:	cmp	r1, #0
   118a0:	beq	118c4 <por_utf8_decode+0xcc>
   118a4:	strb	r1, [r5, r9]
   118a8:	ldr	r0, [sp, #4]
   118ac:	add	r9, r9, #1
   118b0:	add	r6, r6, r0
   118b4:	str	r8, [sp, #4]
   118b8:	cmp	r9, r4
   118bc:	mov	r0, r9
   118c0:	bcc	11834 <por_utf8_decode+0x3c>
   118c4:	sub	sp, fp, #28
   118c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118cc:	mvn	r0, #0
   118d0:	sub	sp, fp, #28
   118d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118d8:	.word	0x00018065
   118dc:	.word	0x00000000

000118e0 <readstat_por_parse_double>:
   118e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118e4:	add	fp, sp, #28
   118e8:	sub	sp, sp, #4
   118ec:	vpush	{d8-d11}
   118f0:	sub	sp, sp, #40	; 0x28
   118f4:	sub	sp, sp, #1024	; 0x400
   118f8:	mov	r9, r0
   118fc:	cmp	r1, #0
   11900:	str	r3, [sp, #16]
   11904:	str	r2, [sp, #20]
   11908:	str	r0, [sp, #24]
   1190c:	str	r1, [sp, #12]
   11910:	beq	11c0c <readstat_por_parse_double+0x32c>
   11914:	vldr	d17, [pc, #1012]	; 11d10 <readstat_por_parse_double+0x430>
   11918:	vmov.f64	d16, #62	; 0x41f00000  30.0
   1191c:	add	r1, r9, r1
   11920:	mov	r0, #0
   11924:	mov	ip, #0
   11928:	vmov.i32	d9, #0	; 0x00000000
   1192c:	mov	r6, #1
   11930:	mvn	lr, #1
   11934:	vmov.i32	d10, #0	; 0x00000000
   11938:	vmov.i32	d11, #0	; 0x00000000
   1193c:	vmov.i32	d19, #0	; 0x00000000
   11940:	mov	r8, #1
   11944:	vmov.i32	d8, #0	; 0x00000000
   11948:	vmov.f64	d18, d16
   1194c:	str	r1, [sp, #28]
   11950:	str	r0, [sp, #32]
   11954:	ldr	r0, [pc, #956]	; 11d18 <readstat_por_parse_double+0x438>
   11958:	add	r0, pc, r0
   1195c:	ldrb	r2, [r0, r8]
   11960:	ldr	r0, [pc, #948]	; 11d1c <readstat_por_parse_double+0x43c>
   11964:	ldr	r1, [pc, #948]	; 11d20 <readstat_por_parse_double+0x440>
   11968:	add	r0, pc, r0
   1196c:	add	r1, pc, r1
   11970:	ldrb	r0, [r0, r8]
   11974:	add	r4, r1, r0
   11978:	movw	r0, #2414	; 0x96e
   1197c:	tst	r6, r0, lsr r8
   11980:	bne	1198c <readstat_por_parse_double+0xac>
   11984:	mov	r5, r4
   11988:	b	119ec <readstat_por_parse_double+0x10c>
   1198c:	ldr	r0, [pc, #912]	; 11d24 <readstat_por_parse_double+0x444>
   11990:	add	r0, pc, r0
   11994:	ldrb	sl, [r0, r8]
   11998:	add	r5, r4, sl
   1199c:	sub	r1, r5, #1
   119a0:	cmp	r1, r4
   119a4:	bcc	119e4 <readstat_por_parse_double+0x104>
   119a8:	ldrb	r6, [r9]
   119ac:	mov	r3, r4
   119b0:	sub	r0, r1, r3
   119b4:	mov	r7, r3
   119b8:	ldrb	r0, [r7, r0, asr #1]!
   119bc:	cmp	r6, r0
   119c0:	bcs	119d4 <readstat_por_parse_double+0xf4>
   119c4:	sub	r1, r7, #1
   119c8:	cmp	r1, r3
   119cc:	bcs	119b0 <readstat_por_parse_double+0xd0>
   119d0:	b	119e4 <readstat_por_parse_double+0x104>
   119d4:	bls	11a60 <readstat_por_parse_double+0x180>
   119d8:	add	r3, r7, #1
   119dc:	cmp	r1, r3
   119e0:	bcs	119b0 <readstat_por_parse_double+0xd0>
   119e4:	add	r2, sl, r2
   119e8:	mov	r6, #1
   119ec:	movw	r0, #4090	; 0xffa
   119f0:	tst	r6, r0, lsr r8
   119f4:	beq	11a80 <readstat_por_parse_double+0x1a0>
   119f8:	ldr	r0, [pc, #808]	; 11d28 <readstat_por_parse_double+0x448>
   119fc:	add	r0, pc, r0
   11a00:	ldrb	r7, [r0, r8]
   11a04:	add	r0, r5, r7, lsl #1
   11a08:	sub	r0, r0, #2
   11a0c:	cmp	r0, r5
   11a10:	bcc	11a7c <readstat_por_parse_double+0x19c>
   11a14:	ldrb	r1, [r9]
   11a18:	mov	r6, r5
   11a1c:	sub	r3, r0, r6
   11a20:	and	r4, lr, r3, asr #1
   11a24:	mov	r3, r6
   11a28:	ldrb	r4, [r3, r4]!
   11a2c:	cmp	r1, r4
   11a30:	bcs	11a44 <readstat_por_parse_double+0x164>
   11a34:	sub	r0, r3, #2
   11a38:	cmp	r0, r6
   11a3c:	bcs	11a1c <readstat_por_parse_double+0x13c>
   11a40:	b	11a78 <readstat_por_parse_double+0x198>
   11a44:	ldrb	r4, [r3, #1]
   11a48:	cmp	r1, r4
   11a4c:	bls	11a70 <readstat_por_parse_double+0x190>
   11a50:	add	r6, r3, #2
   11a54:	cmp	r0, r6
   11a58:	bcs	11a1c <readstat_por_parse_double+0x13c>
   11a5c:	b	11a78 <readstat_por_parse_double+0x198>
   11a60:	sub	r0, r2, r4
   11a64:	mov	r6, #1
   11a68:	add	r2, r0, r7
   11a6c:	b	11a80 <readstat_por_parse_double+0x1a0>
   11a70:	sub	r0, r3, r5
   11a74:	asr	r7, r0, #1
   11a78:	mov	r6, #1
   11a7c:	add	r2, r7, r2
   11a80:	ldr	r0, [pc, #676]	; 11d2c <readstat_por_parse_double+0x44c>
   11a84:	ldr	r1, [pc, #676]	; 11d30 <readstat_por_parse_double+0x450>
   11a88:	add	r0, pc, r0
   11a8c:	add	r1, pc, r1
   11a90:	ldrb	r0, [r0, r2]
   11a94:	ldrb	r8, [r1, r2]
   11a98:	cmp	r0, #0
   11a9c:	beq	11bd4 <readstat_por_parse_double+0x2f4>
   11aa0:	ldr	r2, [pc, #652]	; 11d34 <readstat_por_parse_double+0x454>
   11aa4:	add	r2, pc, r2
   11aa8:	ldrb	r1, [r2, r0]
   11aac:	cmp	r1, #0
   11ab0:	beq	11bd4 <readstat_por_parse_double+0x2f4>
   11ab4:	add	r0, r2, r0
   11ab8:	rsb	r3, r1, #0
   11abc:	add	r2, r0, #1
   11ac0:	ldrb	r0, [r2]
   11ac4:	cmp	r0, #10
   11ac8:	bhi	11bc8 <readstat_por_parse_double+0x2e8>
   11acc:	add	r1, pc, #4
   11ad0:	ldr	r0, [r1, r0, lsl #2]
   11ad4:	add	pc, r1, r0
   11ad8:	.word	0x00000034
   11adc:	.word	0x00000050
   11ae0:	.word	0x0000006c
   11ae4:	.word	0x00000074
   11ae8:	.word	0x0000002c
   11aec:	.word	0x0000007c
   11af0:	.word	0x00000084
   11af4:	.word	0x00000090
   11af8:	.word	0x0000002c
   11afc:	.word	0x00000098
   11b00:	.word	0x00000124
   11b04:	mov	ip, #1
   11b08:	b	11bc8 <readstat_por_parse_double+0x2e8>
   11b0c:	ldrb	r0, [r9]
   11b10:	sub	r1, r0, #48	; 0x30
   11b14:	uxtb	r4, r1
   11b18:	cmp	r4, #9
   11b1c:	bhi	11b78 <readstat_por_parse_double+0x298>
   11b20:	vmov	s0, r1
   11b24:	b	11b90 <readstat_por_parse_double+0x2b0>
   11b28:	ldrb	r0, [r9]
   11b2c:	sub	r1, r0, #48	; 0x30
   11b30:	uxtb	r4, r1
   11b34:	cmp	r4, #9
   11b38:	bhi	11ba0 <readstat_por_parse_double+0x2c0>
   11b3c:	vmov	s0, r1
   11b40:	b	11bb8 <readstat_por_parse_double+0x2d8>
   11b44:	vmov.i32	d19, #0	; 0x00000000
   11b48:	b	11bc8 <readstat_por_parse_double+0x2e8>
   11b4c:	vmov.i32	d9, #0	; 0x00000000
   11b50:	b	11bc8 <readstat_por_parse_double+0x2e8>
   11b54:	vorr	d10, d19, d19
   11b58:	b	11bc8 <readstat_por_parse_double+0x2e8>
   11b5c:	mov	r0, #1
   11b60:	str	r0, [sp, #32]
   11b64:	b	11bc8 <readstat_por_parse_double+0x2e8>
   11b68:	vorr	d11, d19, d19
   11b6c:	b	11bc8 <readstat_por_parse_double+0x2e8>
   11b70:	vorr	d8, d17, d17
   11b74:	b	11bc8 <readstat_por_parse_double+0x2e8>
   11b78:	sub	r1, r0, #65	; 0x41
   11b7c:	uxtb	r1, r1
   11b80:	cmp	r1, #19
   11b84:	bhi	11bc8 <readstat_por_parse_double+0x2e8>
   11b88:	sub	r0, r0, #55	; 0x37
   11b8c:	vmov	s0, r0
   11b90:	vcvt.f64.s32	d20, s0
   11b94:	vmla.f64	d20, d19, d16
   11b98:	vmov.f64	d19, d20
   11b9c:	b	11bc8 <readstat_por_parse_double+0x2e8>
   11ba0:	sub	r1, r0, #65	; 0x41
   11ba4:	uxtb	r1, r1
   11ba8:	cmp	r1, #19
   11bac:	bhi	11bc4 <readstat_por_parse_double+0x2e4>
   11bb0:	sub	r0, r0, #55	; 0x37
   11bb4:	vmov	s0, r0
   11bb8:	vcvt.f64.s32	d20, s0
   11bbc:	vdiv.f64	d20, d20, d18
   11bc0:	vadd.f64	d9, d9, d20
   11bc4:	vmul.f64	d18, d18, d16
   11bc8:	add	r2, r2, #1
   11bcc:	adds	r3, r3, #1
   11bd0:	bne	11ac0 <readstat_por_parse_double+0x1e0>
   11bd4:	mov	sl, #0
   11bd8:	cmp	r8, #0
   11bdc:	beq	11d00 <readstat_por_parse_double+0x420>
   11be0:	ldr	r0, [sp, #28]
   11be4:	add	r9, r9, #1
   11be8:	cmp	r9, r0
   11bec:	bne	11954 <readstat_por_parse_double+0x74>
   11bf0:	ldr	r9, [sp, #28]
   11bf4:	mov	r4, ip
   11bf8:	b	11c30 <readstat_por_parse_double+0x350>
   11bfc:	mov	r4, ip
   11c00:	add	r9, r9, #1
   11c04:	mov	sl, #1
   11c08:	b	11c30 <readstat_por_parse_double+0x350>
   11c0c:	mov	r0, #0
   11c10:	vmov.i32	d9, #0	; 0x00000000
   11c14:	mov	r4, #0
   11c18:	mov	r8, #1
   11c1c:	vmov.i32	d10, #0	; 0x00000000
   11c20:	vmov.i32	d11, #0	; 0x00000000
   11c24:	mov	sl, #0
   11c28:	vmov.i32	d8, #0	; 0x00000000
   11c2c:	str	r0, [sp, #32]
   11c30:	vorr	d0, d8, d8
   11c34:	bl	4c84 <__isnan@plt>
   11c38:	cmp	r0, #0
   11c3c:	beq	11c60 <readstat_por_parse_double+0x380>
   11c40:	cmp	sl, #0
   11c44:	beq	11ca0 <readstat_por_parse_double+0x3c0>
   11c48:	ldr	r0, [sp, #20]
   11c4c:	cmp	r0, #0
   11c50:	vstrne	d8, [r0]
   11c54:	ldr	r0, [sp, #24]
   11c58:	sub	r7, r9, r0
   11c5c:	b	11cec <readstat_por_parse_double+0x40c>
   11c60:	ldr	r0, [sp, #32]
   11c64:	vneg.f64	d16, d11
   11c68:	vadd.f64	d8, d9, d10
   11c6c:	cmp	r0, #0
   11c70:	vseleq.f64	d1, d11, d16
   11c74:	vcmp.f64	d1, #0.0
   11c78:	vmrs	APSR_nzcv, fpscr
   11c7c:	beq	11c8c <readstat_por_parse_double+0x3ac>
   11c80:	vmov.f64	d0, #62	; 0x41f00000  30.0
   11c84:	bl	4918 <pow@plt>
   11c88:	vmul.f64	d8, d8, d0
   11c8c:	vneg.f64	d16, d8
   11c90:	cmp	r4, #0
   11c94:	vseleq.f64	d8, d8, d16
   11c98:	cmp	sl, #0
   11c9c:	bne	11c48 <readstat_por_parse_double+0x368>
   11ca0:	ldr	r6, [sp, #16]
   11ca4:	mvn	r7, #0
   11ca8:	cmp	r6, #0
   11cac:	beq	11cec <readstat_por_parse_double+0x40c>
   11cb0:	ldr	r0, [sp, #12]
   11cb4:	ldr	r4, [fp, #8]
   11cb8:	add	r5, sp, #36	; 0x24
   11cbc:	mov	r1, #1024	; 0x400
   11cc0:	str	r0, [sp]
   11cc4:	ldr	r0, [sp, #24]
   11cc8:	stmib	sp, {r0, r8}
   11ccc:	sub	r3, r9, r0
   11cd0:	mov	r0, r5
   11cd4:	ldr	r2, [pc, #92]	; 11d38 <readstat_por_parse_double+0x458>
   11cd8:	add	r2, pc, r2
   11cdc:	bl	4bdc <snprintf@plt>
   11ce0:	mov	r0, r5
   11ce4:	mov	r1, r4
   11ce8:	blx	r6
   11cec:	mov	r0, r7
   11cf0:	sub	sp, fp, #64	; 0x40
   11cf4:	vpop	{d8-d11}
   11cf8:	add	sp, sp, #4
   11cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d00:	mov	r4, ip
   11d04:	mov	r8, #0
   11d08:	b	11c30 <readstat_por_parse_double+0x350>
   11d0c:	nop	{0}
   11d10:	.word	0x00000000
   11d14:	.word	0x7ff80000
   11d18:	.word	0x00017fc8
   11d1c:	.word	0x00017fab
   11d20:	.word	0x00017f6f
   11d24:	.word	0x00017f9d
   11d28:	.word	0x00017f3e
   11d2c:	.word	0x00017eef
   11d30:	.word	0x00017ebb
   11d34:	.word	0x00017f03
   11d38:	.word	0x00017cf0
   11d3c:	.word	0x00000000

00011d40 <read_version_and_timestamp>:
   11d40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d44:	add	fp, sp, #28
   11d48:	sub	sp, sp, #316	; 0x13c
   11d4c:	add	r1, sp, #8
   11d50:	mov	r4, r0
   11d54:	vmov.i32	q8, #0	; 0x00000000
   11d58:	mov	sl, #0
   11d5c:	add	r6, sp, #52	; 0x34
   11d60:	mov	r8, #0
   11d64:	add	r0, r1, #28
   11d68:	add	r9, r1, #16
   11d6c:	vst1.32	{d16-d17}, [r0]
   11d70:	mov	r0, #32
   11d74:	vst1.64	{d16-d17}, [r9]
   11d78:	vst1.64	{d16-d17}, [r1], r0
   11d7c:	mvn	r0, #0
   11d80:	str	r0, [r1]
   11d84:	ldr	r5, [r4, #44]	; 0x2c
   11d88:	ldr	r0, [r4, #52]	; 0x34
   11d8c:	cmp	r0, #0
   11d90:	beq	11db0 <read_version_and_timestamp+0x70>
   11d94:	sub	r0, r0, #1
   11d98:	add	r8, r8, #1
   11d9c:	str	r0, [r4, #52]	; 0x34
   11da0:	ldrb	r7, [r4, #48]	; 0x30
   11da4:	cmp	r8, #1
   11da8:	blt	11d88 <read_version_and_timestamp+0x48>
   11dac:	b	11e50 <read_version_and_timestamp+0x110>
   11db0:	ldr	r3, [r5, #12]
   11db4:	ldr	r2, [r5, #20]
   11db8:	mov	r0, r6
   11dbc:	mov	r1, #1
   11dc0:	blx	r3
   11dc4:	cmn	r0, #1
   11dc8:	cmpne	r0, #0
   11dcc:	beq	11f84 <read_version_and_timestamp+0x244>
   11dd0:	ldrb	r0, [sp, #52]	; 0x34
   11dd4:	cmp	r0, #10
   11dd8:	beq	11e10 <read_version_and_timestamp+0xd0>
   11ddc:	cmp	r0, #13
   11de0:	bne	11e2c <read_version_and_timestamp+0xec>
   11de4:	ldr	r3, [r5, #12]
   11de8:	ldr	r2, [r5, #20]
   11dec:	mov	r0, r6
   11df0:	mov	r1, #1
   11df4:	blx	r3
   11df8:	add	r0, r0, #1
   11dfc:	cmp	r0, #2
   11e00:	bcc	11f84 <read_version_and_timestamp+0x244>
   11e04:	ldrb	r0, [sp, #52]	; 0x34
   11e08:	cmp	r0, #10
   11e0c:	bne	11f84 <read_version_and_timestamp+0x244>
   11e10:	ldr	r0, [r4, #40]	; 0x28
   11e14:	str	sl, [r4, #40]	; 0x28
   11e18:	rsb	r0, r0, #80	; 0x50
   11e1c:	str	r0, [r4, #52]	; 0x34
   11e20:	cmp	r8, #1
   11e24:	blt	11d88 <read_version_and_timestamp+0x48>
   11e28:	b	11e50 <read_version_and_timestamp+0x110>
   11e2c:	ldr	r1, [r4, #40]	; 0x28
   11e30:	cmp	r1, #80	; 0x50
   11e34:	beq	11f84 <read_version_and_timestamp+0x244>
   11e38:	add	r1, r1, #1
   11e3c:	add	r8, r8, #1
   11e40:	mov	r7, r0
   11e44:	str	r1, [r4, #40]	; 0x28
   11e48:	cmp	r8, #1
   11e4c:	blt	11d88 <read_version_and_timestamp+0x48>
   11e50:	mov	r0, #2
   11e54:	bne	11f88 <read_version_and_timestamp+0x248>
   11e58:	mov	r0, #0
   11e5c:	add	r1, sp, #52	; 0x34
   11e60:	sub	r3, fp, #36	; 0x24
   11e64:	mov	r2, #256	; 0x100
   11e68:	str	r0, [fp, #-36]	; 0xffffffdc
   11e6c:	mov	r0, r4
   11e70:	bl	149f0 <maybe_read_string>
   11e74:	mov	r1, r0
   11e78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11e7c:	cmp	r0, #0
   11e80:	mov	r0, r1
   11e84:	movwne	r0, #5
   11e88:	cmp	r1, #0
   11e8c:	movne	r0, r1
   11e90:	cmp	r0, #0
   11e94:	bne	11f88 <read_version_and_timestamp+0x248>
   11e98:	add	r0, sp, #8
   11e9c:	mov	r3, r9
   11ea0:	mov	r1, r0
   11ea4:	add	r0, r0, #12
   11ea8:	str	r0, [sp]
   11eac:	add	r2, r1, #20
   11eb0:	add	r0, sp, #52	; 0x34
   11eb4:	ldr	r1, [pc, #212]	; 11f90 <read_version_and_timestamp+0x250>
   11eb8:	add	r1, pc, r1
   11ebc:	bl	4be8 <__isoc99_sscanf@plt>
   11ec0:	mov	r1, r0
   11ec4:	mov	r0, #29
   11ec8:	cmp	r1, #3
   11ecc:	bne	11f88 <read_version_and_timestamp+0x248>
   11ed0:	mov	r0, #0
   11ed4:	add	r1, sp, #52	; 0x34
   11ed8:	sub	r3, fp, #36	; 0x24
   11edc:	mov	r2, #256	; 0x100
   11ee0:	str	r0, [fp, #-36]	; 0xffffffdc
   11ee4:	mov	r0, r4
   11ee8:	bl	149f0 <maybe_read_string>
   11eec:	mov	r1, r0
   11ef0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11ef4:	cmp	r0, #0
   11ef8:	mov	r0, r1
   11efc:	movwne	r0, #5
   11f00:	cmp	r1, #0
   11f04:	movne	r0, r1
   11f08:	cmp	r0, #0
   11f0c:	bne	11f88 <read_version_and_timestamp+0x248>
   11f10:	add	r0, sp, #8
   11f14:	str	r0, [sp]
   11f18:	add	r2, r0, #8
   11f1c:	orr	r3, r0, #4
   11f20:	add	r0, sp, #52	; 0x34
   11f24:	ldr	r1, [pc, #104]	; 11f94 <read_version_and_timestamp+0x254>
   11f28:	add	r1, pc, r1
   11f2c:	bl	4be8 <__isoc99_sscanf@plt>
   11f30:	cmp	r0, #3
   11f34:	mov	r0, #29
   11f38:	bne	11f88 <read_version_and_timestamp+0x248>
   11f3c:	ldr	r0, [sp, #24]
   11f40:	ldr	r1, [sp, #28]
   11f44:	movw	r2, #1900	; 0x76c
   11f48:	sub	r1, r1, r2
   11f4c:	sub	r0, r0, #1
   11f50:	str	r1, [sp, #28]
   11f54:	str	r0, [sp, #24]
   11f58:	add	r0, sp, #8
   11f5c:	bl	47f8 <mktime@plt>
   11f60:	uxtb	r1, r7
   11f64:	add	r1, r4, r1, lsl #1
   11f68:	ldrh	r1, [r1, #94]	; 0x5e
   11f6c:	str	r0, [r4, #56]	; 0x38
   11f70:	mov	r0, #0
   11f74:	sub	r1, r1, #65	; 0x41
   11f78:	str	r1, [r4, #60]	; 0x3c
   11f7c:	sub	sp, fp, #28
   11f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f84:	mov	r0, #2
   11f88:	sub	sp, fp, #28
   11f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f90:	.word	0x00017b41
   11f94:	.word	0x00017ade

00011f98 <read_bytes>:
   11f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f9c:	add	fp, sp, #28
   11fa0:	sub	sp, sp, #4
   11fa4:	mov	r9, r1
   11fa8:	cmp	r2, #1
   11fac:	mov	r7, r1
   11fb0:	blt	12094 <read_bytes+0xfc>
   11fb4:	ldr	r4, [r0, #44]	; 0x2c
   11fb8:	mov	r5, r0
   11fbc:	add	r6, r9, r2
   11fc0:	add	r8, sp, #3
   11fc4:	mov	sl, #0
   11fc8:	mov	r7, r9
   11fcc:	ldr	r0, [r5, #52]	; 0x34
   11fd0:	cmp	r0, #0
   11fd4:	beq	11fec <read_bytes+0x54>
   11fd8:	ldrb	r0, [r5, #48]	; 0x30
   11fdc:	strb	r0, [r7], #1
   11fe0:	ldr	r0, [r5, #52]	; 0x34
   11fe4:	sub	r0, r0, #1
   11fe8:	b	12060 <read_bytes+0xc8>
   11fec:	ldr	r3, [r4, #12]
   11ff0:	ldr	r2, [r4, #20]
   11ff4:	mov	r0, r8
   11ff8:	mov	r1, #1
   11ffc:	blx	r3
   12000:	cmn	r0, #1
   12004:	beq	12098 <read_bytes+0x100>
   12008:	cmp	r0, #0
   1200c:	beq	12094 <read_bytes+0xfc>
   12010:	ldrb	r0, [sp, #3]
   12014:	cmp	r0, #10
   12018:	beq	12054 <read_bytes+0xbc>
   1201c:	cmp	r0, #13
   12020:	bne	12070 <read_bytes+0xd8>
   12024:	ldr	r3, [r4, #12]
   12028:	ldr	r2, [r4, #20]
   1202c:	mov	r0, r8
   12030:	mov	r1, #1
   12034:	blx	r3
   12038:	add	r1, r0, #1
   1203c:	mvn	r0, #0
   12040:	cmp	r1, #2
   12044:	bcc	12098 <read_bytes+0x100>
   12048:	ldrb	r1, [sp, #3]
   1204c:	cmp	r1, #10
   12050:	bne	12098 <read_bytes+0x100>
   12054:	ldr	r0, [r5, #40]	; 0x28
   12058:	str	sl, [r5, #40]	; 0x28
   1205c:	rsb	r0, r0, #80	; 0x50
   12060:	str	r0, [r5, #52]	; 0x34
   12064:	cmp	r7, r6
   12068:	bcc	11fcc <read_bytes+0x34>
   1206c:	b	12094 <read_bytes+0xfc>
   12070:	ldr	r1, [r5, #40]	; 0x28
   12074:	cmp	r1, #80	; 0x50
   12078:	beq	120a0 <read_bytes+0x108>
   1207c:	strb	r0, [r7], #1
   12080:	ldr	r0, [r5, #40]	; 0x28
   12084:	add	r0, r0, #1
   12088:	str	r0, [r5, #40]	; 0x28
   1208c:	cmp	r7, r6
   12090:	bcc	11fcc <read_bytes+0x34>
   12094:	sub	r0, r7, r9
   12098:	sub	sp, fp, #28
   1209c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120a0:	mvn	r0, #0
   120a4:	sub	sp, fp, #28
   120a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000120ac <handle_variables>:
   120ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120b0:	add	fp, sp, #28
   120b4:	sub	sp, sp, #260	; 0x104
   120b8:	ldr	r8, [r0, #632]	; 0x278
   120bc:	mov	r9, r0
   120c0:	cmp	r8, #1
   120c4:	blt	1217c <handle_variables+0xd0>
   120c8:	mov	r7, #0
   120cc:	mov	sl, #0
   120d0:	mov	r6, #0
   120d4:	ldr	r0, [r9, #652]	; 0x28c
   120d8:	mov	r1, sl
   120dc:	add	r5, r0, r7
   120e0:	str	r6, [r5, #8]
   120e4:	mov	r0, r5
   120e8:	ldr	r2, [r9, #612]	; 0x264
   120ec:	bl	4bd0 <spss_init_variable_for_info@plt>
   120f0:	ldr	r1, [r9, #648]	; 0x288
   120f4:	str	r0, [r1, r6, lsl #2]
   120f8:	mov	r0, sp
   120fc:	mov	r1, #256	; 0x100
   12100:	ldr	r3, [r5, #4]
   12104:	ldr	r2, [pc, #256]	; 1220c <handle_variables+0x160>
   12108:	add	r2, pc, r2
   1210c:	bl	4bdc <snprintf@plt>
   12110:	ldr	r4, [r9, #8]
   12114:	cmp	r4, #0
   12118:	beq	12150 <handle_variables+0xa4>
   1211c:	ldr	r0, [r5, #4]
   12120:	mov	r2, sp
   12124:	ldr	r3, [r9, #36]	; 0x24
   12128:	cmn	r0, #1
   1212c:	addeq	r2, r0, #1
   12130:	ldr	r0, [r9, #648]	; 0x288
   12134:	ldr	r1, [r0, r6, lsl #2]
   12138:	mov	r0, r6
   1213c:	blx	r4
   12140:	cmp	r0, #2
   12144:	beq	12158 <handle_variables+0xac>
   12148:	cmp	r0, #1
   1214c:	beq	121e0 <handle_variables+0x134>
   12150:	add	sl, sl, #1
   12154:	b	12168 <handle_variables+0xbc>
   12158:	ldr	r0, [r9, #648]	; 0x288
   1215c:	mov	r1, #1
   12160:	ldr	r0, [r0, r6, lsl #2]
   12164:	str	r1, [r0, #2144]	; 0x860
   12168:	ldr	r8, [r9, #632]	; 0x278
   1216c:	add	r6, r6, #1
   12170:	add	r7, r7, #280	; 0x118
   12174:	cmp	r6, r8
   12178:	blt	120d4 <handle_variables+0x28>
   1217c:	ldr	r4, [r9, #12]
   12180:	mov	r0, #0
   12184:	cmp	r4, #0
   12188:	beq	121d8 <handle_variables+0x12c>
   1218c:	mov	r5, r9
   12190:	ldrb	r1, [r5, #64]!	; 0x40
   12194:	cmp	r1, #0
   12198:	beq	121d8 <handle_variables+0x12c>
   1219c:	cmp	r8, #1
   121a0:	blt	121d8 <handle_variables+0x12c>
   121a4:	ldr	r0, [r9, #652]	; 0x28c
   121a8:	mov	r7, #0
   121ac:	add	r6, r0, #187	; 0xbb
   121b0:	mov	r0, r6
   121b4:	mov	r1, r5
   121b8:	bl	47b0 <strcmp@plt>
   121bc:	cmp	r0, #0
   121c0:	beq	121ec <handle_variables+0x140>
   121c4:	add	r7, r7, #1
   121c8:	add	r6, r6, #280	; 0x118
   121cc:	cmp	r7, r8
   121d0:	blt	121b0 <handle_variables+0x104>
   121d4:	mov	r0, #0
   121d8:	sub	sp, fp, #28
   121dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121e0:	mov	r0, #4
   121e4:	sub	sp, fp, #28
   121e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121ec:	ldr	r0, [r9, #648]	; 0x288
   121f0:	ldr	r1, [r9, #36]	; 0x24
   121f4:	ldr	r0, [r0, r7, lsl #2]
   121f8:	blx	r4
   121fc:	cmp	r0, #0
   12200:	movwne	r0, #4
   12204:	sub	sp, fp, #28
   12208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1220c:	.word	0x0001790b

00012210 <readstat_parse_por>:
   12210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12214:	add	fp, sp, #28
   12218:	sub	sp, sp, #4
   1221c:	vpush	{d8-d12}
   12220:	sub	sp, sp, #56	; 0x38
   12224:	sub	sp, sp, #3072	; 0xc00
   12228:	ldr	r5, [r0, #32]
   1222c:	mov	r7, r2
   12230:	mov	r9, r1
   12234:	mov	r6, r0
   12238:	add	r4, r0, #16
   1223c:	bl	4dd4 <por_ctx_init@plt>
   12240:	mov	r8, r0
   12244:	mov	r0, #48	; 0x30
   12248:	mov	r1, r6
   1224c:	vld1.32	{d18-d19}, [r4]
   12250:	str	r5, [sp, #44]	; 0x2c
   12254:	vld1.32	{d16-d17}, [r1], r0
   12258:	add	r0, r8, #16
   1225c:	str	r7, [r8, #36]	; 0x24
   12260:	str	r5, [r8, #44]	; 0x2c
   12264:	mov	r2, r8
   12268:	vst1.32	{d18-d19}, [r0]
   1226c:	mov	r0, #640	; 0x280
   12270:	vst1.32	{d16-d17}, [r2], r0
   12274:	ldr	r0, [r6, #44]	; 0x2c
   12278:	str	r0, [r2]
   1227c:	ldr	r0, [r1]
   12280:	cmp	r0, #1
   12284:	strge	r0, [r8, #644]	; 0x284
   12288:	ldr	r6, [r6, #40]	; 0x28
   1228c:	cmp	r6, #0
   12290:	beq	122cc <readstat_parse_por+0xbc>
   12294:	ldr	r1, [pc, #3960]	; 13214 <readstat_parse_por+0x1004>
   12298:	mov	r0, r6
   1229c:	add	r1, pc, r1
   122a0:	bl	47b0 <strcmp@plt>
   122a4:	cmp	r0, #0
   122a8:	beq	12748 <readstat_parse_por+0x538>
   122ac:	ldr	r1, [pc, #4076]	; 132a0 <readstat_parse_por+0x1090>
   122b0:	mov	r0, r6
   122b4:	add	r1, pc, r1
   122b8:	bl	4a98 <iconv_open@plt>
   122bc:	mov	r1, r8
   122c0:	str	r0, [r1, #612]!	; 0x264
   122c4:	cmn	r0, #1
   122c8:	beq	12758 <readstat_parse_por+0x548>
   122cc:	ldr	r2, [r5]
   122d0:	ldr	r1, [r5, #20]
   122d4:	mov	r0, r9
   122d8:	blx	r2
   122dc:	cmn	r0, #1
   122e0:	beq	12740 <readstat_parse_por+0x530>
   122e4:	ldr	r3, [r5, #8]
   122e8:	ldr	r2, [r5, #20]
   122ec:	mov	r0, #0
   122f0:	mov	r1, #2
   122f4:	blx	r3
   122f8:	mov	r4, #15
   122fc:	cmn	r0, #1
   12300:	str	r0, [r8, #32]
   12304:	beq	1276c <readstat_parse_por+0x55c>
   12308:	ldr	r3, [r5, #8]
   1230c:	ldr	r2, [r5, #20]
   12310:	mov	r0, #0
   12314:	mov	r1, #0
   12318:	mov	r9, #0
   1231c:	blx	r3
   12320:	cmn	r0, #1
   12324:	beq	1276c <readstat_parse_por+0x55c>
   12328:	ldr	r6, [r8, #44]	; 0x2c
   1232c:	add	r0, r8, #40	; 0x28
   12330:	add	r4, sp, #328	; 0x148
   12334:	sub	lr, fp, #1024	; 0x400
   12338:	add	sl, r8, #52	; 0x34
   1233c:	str	r0, [sp, #48]	; 0x30
   12340:	add	r0, r8, #48	; 0x30
   12344:	add	r7, r4, #200	; 0xc8
   12348:	sub	r5, lr, #88	; 0x58
   1234c:	str	r0, [sp, #52]	; 0x34
   12350:	ldr	r0, [sl]
   12354:	cmp	r0, #0
   12358:	beq	12380 <readstat_parse_por+0x170>
   1235c:	ldr	r0, [sp, #52]	; 0x34
   12360:	ldrb	r0, [r0]
   12364:	strb	r0, [r4], #1
   12368:	ldr	r0, [sl]
   1236c:	sub	r0, r0, #1
   12370:	str	r0, [sl]
   12374:	cmp	r4, r7
   12378:	bcc	12350 <readstat_parse_por+0x140>
   1237c:	b	12430 <readstat_parse_por+0x220>
   12380:	ldr	r3, [r6, #12]
   12384:	ldr	r2, [r6, #20]
   12388:	mov	r0, r5
   1238c:	mov	r1, #1
   12390:	blx	r3
   12394:	cmn	r0, #1
   12398:	beq	12768 <readstat_parse_por+0x558>
   1239c:	cmp	r0, #0
   123a0:	beq	12430 <readstat_parse_por+0x220>
   123a4:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   123a8:	cmp	r0, #10
   123ac:	beq	123e4 <readstat_parse_por+0x1d4>
   123b0:	cmp	r0, #13
   123b4:	bne	12404 <readstat_parse_por+0x1f4>
   123b8:	ldr	r3, [r6, #12]
   123bc:	ldr	r2, [r6, #20]
   123c0:	mov	r0, r5
   123c4:	mov	r1, #1
   123c8:	blx	r3
   123cc:	add	r0, r0, #1
   123d0:	cmp	r0, #2
   123d4:	bcc	12768 <readstat_parse_por+0x558>
   123d8:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   123dc:	cmp	r0, #10
   123e0:	bne	12768 <readstat_parse_por+0x558>
   123e4:	ldr	r1, [sp, #48]	; 0x30
   123e8:	ldr	r0, [r1]
   123ec:	rsb	r0, r0, #80	; 0x50
   123f0:	str	r0, [sl]
   123f4:	str	r9, [r1]
   123f8:	cmp	r4, r7
   123fc:	bcc	12350 <readstat_parse_por+0x140>
   12400:	b	12430 <readstat_parse_por+0x220>
   12404:	ldr	r1, [sp, #48]	; 0x30
   12408:	ldr	r1, [r1]
   1240c:	cmp	r1, #80	; 0x50
   12410:	beq	12768 <readstat_parse_por+0x558>
   12414:	ldr	r1, [sp, #48]	; 0x30
   12418:	strb	r0, [r4], #1
   1241c:	ldr	r0, [r1]
   12420:	add	r0, r0, #1
   12424:	str	r0, [r1]
   12428:	cmp	r4, r7
   1242c:	bcc	12350 <readstat_parse_por+0x140>
   12430:	add	r0, sp, #328	; 0x148
   12434:	sub	r1, r4, r0
   12438:	cmp	r1, #200	; 0xc8
   1243c:	bne	12768 <readstat_parse_por+0x558>
   12440:	add	r5, r8, #73	; 0x49
   12444:	mov	r9, #0
   12448:	add	r2, r0, #60	; 0x3c
   1244c:	mov	r1, #21
   12450:	mov	r3, #20
   12454:	mov	r0, r5
   12458:	str	r9, [sp]
   1245c:	bl	4b94 <readstat_convert@plt>
   12460:	mov	r4, r0
   12464:	cmp	r0, #0
   12468:	bne	1276c <readstat_parse_por+0x55c>
   1246c:	ldr	r6, [r8, #44]	; 0x2c
   12470:	add	r4, sp, #528	; 0x210
   12474:	sub	lr, fp, #1024	; 0x400
   12478:	str	r5, [sp, #40]	; 0x28
   1247c:	add	r7, r4, #256	; 0x100
   12480:	sub	r5, lr, #88	; 0x58
   12484:	ldr	r0, [sl]
   12488:	cmp	r0, #0
   1248c:	beq	124b4 <readstat_parse_por+0x2a4>
   12490:	ldr	r0, [sp, #52]	; 0x34
   12494:	ldrb	r0, [r0]
   12498:	strb	r0, [r4], #1
   1249c:	ldr	r0, [sl]
   124a0:	sub	r0, r0, #1
   124a4:	str	r0, [sl]
   124a8:	cmp	r4, r7
   124ac:	bcc	12484 <readstat_parse_por+0x274>
   124b0:	b	12564 <readstat_parse_por+0x354>
   124b4:	ldr	r3, [r6, #12]
   124b8:	ldr	r2, [r6, #20]
   124bc:	mov	r0, r5
   124c0:	mov	r1, #1
   124c4:	blx	r3
   124c8:	cmn	r0, #1
   124cc:	beq	12768 <readstat_parse_por+0x558>
   124d0:	cmp	r0, #0
   124d4:	beq	12564 <readstat_parse_por+0x354>
   124d8:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   124dc:	cmp	r0, #10
   124e0:	beq	12518 <readstat_parse_por+0x308>
   124e4:	cmp	r0, #13
   124e8:	bne	12538 <readstat_parse_por+0x328>
   124ec:	ldr	r3, [r6, #12]
   124f0:	ldr	r2, [r6, #20]
   124f4:	mov	r0, r5
   124f8:	mov	r1, #1
   124fc:	blx	r3
   12500:	add	r0, r0, #1
   12504:	cmp	r0, #2
   12508:	bcc	12768 <readstat_parse_por+0x558>
   1250c:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   12510:	cmp	r0, #10
   12514:	bne	12768 <readstat_parse_por+0x558>
   12518:	ldr	r1, [sp, #48]	; 0x30
   1251c:	ldr	r0, [r1]
   12520:	rsb	r0, r0, #80	; 0x50
   12524:	str	r0, [sl]
   12528:	str	r9, [r1]
   1252c:	cmp	r4, r7
   12530:	bcc	12484 <readstat_parse_por+0x274>
   12534:	b	12564 <readstat_parse_por+0x354>
   12538:	ldr	r1, [sp, #48]	; 0x30
   1253c:	ldr	r1, [r1]
   12540:	cmp	r1, #80	; 0x50
   12544:	beq	12768 <readstat_parse_por+0x558>
   12548:	ldr	r1, [sp, #48]	; 0x30
   1254c:	strb	r0, [r4], #1
   12550:	ldr	r0, [r1]
   12554:	add	r0, r0, #1
   12558:	str	r0, [r1]
   1255c:	cmp	r4, r7
   12560:	bcc	12484 <readstat_parse_por+0x274>
   12564:	add	r0, sp, #528	; 0x210
   12568:	sub	r1, r4, r0
   1256c:	cmp	r1, #256	; 0x100
   12570:	bne	12768 <readstat_parse_por+0x558>
   12574:	ldrb	r1, [sp, #654]	; 0x28e
   12578:	ldr	r2, [sp, #52]	; 0x34
   1257c:	strb	r1, [r2]
   12580:	mov	r1, #0
   12584:	ldr	r2, [pc, #3980]	; 13518 <readstat_parse_por+0x1308>
   12588:	ldr	r2, [pc, r2]
   1258c:	ldr	r3, [pc, #3976]	; 1351c <readstat_parse_por+0x130c>
   12590:	ldr	r3, [pc, r3]
   12594:	ldrb	r7, [r3, r1]
   12598:	cmp	r7, #0
   1259c:	beq	125a8 <readstat_parse_por+0x398>
   125a0:	sxtb	r7, r7
   125a4:	b	125b4 <readstat_parse_por+0x3a4>
   125a8:	ldrh	r7, [r2]
   125ac:	cmp	r7, #0
   125b0:	beq	125c0 <readstat_parse_por+0x3b0>
   125b4:	ldrb	r6, [r0, r1]
   125b8:	add	r6, r8, r6, lsl #1
   125bc:	strh	r7, [r6, #94]	; 0x5e
   125c0:	add	r1, r1, #1
   125c4:	add	r2, r2, #2
   125c8:	cmp	r1, #256	; 0x100
   125cc:	bne	12594 <readstat_parse_por+0x384>
   125d0:	ldrb	r0, [sp, #592]	; 0x250
   125d4:	ldr	r1, [pc, #4044]	; 135a8 <readstat_parse_por+0x1398>
   125d8:	add	r7, sp, #320	; 0x140
   125dc:	sub	lr, fp, #1024	; 0x400
   125e0:	mov	r5, #0
   125e4:	add	r6, r7, #8
   125e8:	sub	r9, lr, #88	; 0x58
   125ec:	ldr	r1, [pc, r1]
   125f0:	add	r0, r8, r0, lsl #1
   125f4:	ldrh	r1, [r1, #128]	; 0x80
   125f8:	strh	r1, [r0, #94]	; 0x5e
   125fc:	ldr	r4, [r8, #44]	; 0x2c
   12600:	ldr	r0, [sl]
   12604:	cmp	r0, #0
   12608:	beq	12630 <readstat_parse_por+0x420>
   1260c:	ldr	r0, [sp, #52]	; 0x34
   12610:	ldrb	r0, [r0]
   12614:	strb	r0, [r7], #1
   12618:	ldr	r0, [sl]
   1261c:	sub	r0, r0, #1
   12620:	str	r0, [sl]
   12624:	cmp	r7, r6
   12628:	bcc	12600 <readstat_parse_por+0x3f0>
   1262c:	b	126e0 <readstat_parse_por+0x4d0>
   12630:	ldr	r3, [r4, #12]
   12634:	ldr	r2, [r4, #20]
   12638:	mov	r0, r9
   1263c:	mov	r1, #1
   12640:	blx	r3
   12644:	cmn	r0, #1
   12648:	beq	12768 <readstat_parse_por+0x558>
   1264c:	cmp	r0, #0
   12650:	beq	126e0 <readstat_parse_por+0x4d0>
   12654:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   12658:	cmp	r0, #10
   1265c:	beq	12694 <readstat_parse_por+0x484>
   12660:	cmp	r0, #13
   12664:	bne	126b4 <readstat_parse_por+0x4a4>
   12668:	ldr	r3, [r4, #12]
   1266c:	ldr	r2, [r4, #20]
   12670:	mov	r0, r9
   12674:	mov	r1, #1
   12678:	blx	r3
   1267c:	add	r0, r0, #1
   12680:	cmp	r0, #2
   12684:	bcc	12768 <readstat_parse_por+0x558>
   12688:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   1268c:	cmp	r0, #10
   12690:	bne	12768 <readstat_parse_por+0x558>
   12694:	ldr	r1, [sp, #48]	; 0x30
   12698:	ldr	r0, [r1]
   1269c:	rsb	r0, r0, #80	; 0x50
   126a0:	str	r0, [sl]
   126a4:	str	r5, [r1]
   126a8:	cmp	r7, r6
   126ac:	bcc	12600 <readstat_parse_por+0x3f0>
   126b0:	b	126e0 <readstat_parse_por+0x4d0>
   126b4:	ldr	r1, [sp, #48]	; 0x30
   126b8:	ldr	r1, [r1]
   126bc:	cmp	r1, #80	; 0x50
   126c0:	beq	12768 <readstat_parse_por+0x558>
   126c4:	ldr	r1, [sp, #48]	; 0x30
   126c8:	strb	r0, [r7], #1
   126cc:	ldr	r0, [r1]
   126d0:	add	r0, r0, #1
   126d4:	str	r0, [r1]
   126d8:	cmp	r7, r6
   126dc:	bcc	12600 <readstat_parse_por+0x3f0>
   126e0:	add	r0, sp, #320	; 0x140
   126e4:	mov	r4, #2
   126e8:	sub	r0, r7, r0
   126ec:	cmp	r0, #8
   126f0:	bne	1276c <readstat_parse_por+0x55c>
   126f4:	add	r0, r8, #94	; 0x5e
   126f8:	add	r7, sp, #320	; 0x140
   126fc:	add	r2, sp, #312	; 0x138
   12700:	mov	r1, #8
   12704:	mov	r3, #8
   12708:	str	r0, [sp]
   1270c:	mov	r0, r7
   12710:	bl	4bb8 <por_utf8_encode@plt>
   12714:	cmn	r0, #1
   12718:	beq	12798 <readstat_parse_por+0x588>
   1271c:	mov	r2, r0
   12720:	ldr	r0, [pc, #4072]	; 13710 <readstat_parse_por+0x1500>
   12724:	add	r1, sp, #312	; 0x138
   12728:	add	r0, pc, r0
   1272c:	bl	4e34 <strncmp@plt>
   12730:	cmp	r0, #0
   12734:	beq	127e0 <readstat_parse_por+0x5d0>
   12738:	mov	r4, #5
   1273c:	b	1276c <readstat_parse_por+0x55c>
   12740:	mov	r4, #1
   12744:	b	1276c <readstat_parse_por+0x55c>
   12748:	mov	r1, r8
   1274c:	ldr	r0, [r1, #612]!	; 0x264
   12750:	cmn	r0, #1
   12754:	bne	122cc <readstat_parse_por+0xbc>
   12758:	mov	r0, #0
   1275c:	mov	r4, #7
   12760:	str	r0, [r1]
   12764:	b	1276c <readstat_parse_por+0x55c>
   12768:	mov	r4, #2
   1276c:	ldr	r0, [sp, #44]	; 0x2c
   12770:	ldr	r1, [r0, #4]
   12774:	ldr	r0, [r0, #20]
   12778:	blx	r1
   1277c:	mov	r0, r8
   12780:	bl	4780 <por_ctx_free@plt>
   12784:	mov	r0, r4
   12788:	sub	sp, fp, #72	; 0x48
   1278c:	vpop	{d8-d12}
   12790:	add	sp, sp, #4
   12794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12798:	ldr	r0, [r8, #24]
   1279c:	mov	r4, #16
   127a0:	cmp	r0, #0
   127a4:	beq	1276c <readstat_parse_por+0x55c>
   127a8:	str	r7, [sp]
   127ac:	sub	lr, fp, #1024	; 0x400
   127b0:	mov	r1, #1024	; 0x400
   127b4:	mov	r3, #8
   127b8:	ldr	r2, [pc, #4060]	; 1379c <readstat_parse_por+0x158c>
   127bc:	sub	r5, lr, #88	; 0x58
   127c0:	mov	r0, r5
   127c4:	add	r2, pc, r2
   127c8:	bl	4bdc <snprintf@plt>
   127cc:	ldr	r2, [r8, #24]
   127d0:	ldr	r1, [r8, #36]	; 0x24
   127d4:	mov	r0, r5
   127d8:	blx	r2
   127dc:	b	1276c <readstat_parse_por+0x55c>
   127e0:	mvn	r0, #0
   127e4:	str	r0, [r8, #636]	; 0x27c
   127e8:	mov	r0, r8
   127ec:	bl	499c <read_version_and_timestamp@plt>
   127f0:	mov	r4, r0
   127f4:	cmp	r0, #0
   127f8:	bne	1276c <readstat_parse_por+0x55c>
   127fc:	vldr	d9, [pc, #980]	; 12bd8 <readstat_parse_por+0x9c8>
   12800:	vldr	d10, [pc, #984]	; 12be0 <readstat_parse_por+0x9d0>
   12804:	vldr	d11, [pc, #988]	; 12be8 <readstat_parse_por+0x9d8>
   12808:	vldr	d12, [pc, #992]	; 12bf0 <readstat_parse_por+0x9e0>
   1280c:	add	r0, r9, #24
   12810:	str	r0, [sp, #32]
   12814:	add	r0, r9, #8
   12818:	str	r0, [sp, #28]
   1281c:	add	r0, r8, #64	; 0x40
   12820:	str	r0, [sp, #36]	; 0x24
   12824:	b	12830 <readstat_parse_por+0x620>
   12828:	add	r0, r0, #1
   1282c:	str	r0, [r7]
   12830:	ldr	r4, [r8, #44]	; 0x2c
   12834:	mov	r6, #0
   12838:	mov	r7, #0
   1283c:	ldr	r0, [sl]
   12840:	cmp	r0, #0
   12844:	beq	12868 <readstat_parse_por+0x658>
   12848:	ldr	r1, [sp, #52]	; 0x34
   1284c:	sub	r0, r0, #1
   12850:	add	r6, r6, #1
   12854:	ldrb	r5, [r1]
   12858:	str	r0, [sl]
   1285c:	cmp	r6, #1
   12860:	blt	1283c <readstat_parse_por+0x62c>
   12864:	b	12918 <readstat_parse_por+0x708>
   12868:	ldr	r3, [r4, #12]
   1286c:	ldr	r2, [r4, #20]
   12870:	mov	r0, r9
   12874:	mov	r1, #1
   12878:	blx	r3
   1287c:	cmn	r0, #1
   12880:	beq	12738 <readstat_parse_por+0x528>
   12884:	cmp	r0, #0
   12888:	beq	12738 <readstat_parse_por+0x528>
   1288c:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   12890:	cmp	r0, #10
   12894:	beq	128cc <readstat_parse_por+0x6bc>
   12898:	cmp	r0, #13
   1289c:	bne	128ec <readstat_parse_por+0x6dc>
   128a0:	ldr	r3, [r4, #12]
   128a4:	ldr	r2, [r4, #20]
   128a8:	mov	r0, r9
   128ac:	mov	r1, #1
   128b0:	blx	r3
   128b4:	add	r0, r0, #1
   128b8:	cmp	r0, #2
   128bc:	bcc	12738 <readstat_parse_por+0x528>
   128c0:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   128c4:	cmp	r0, #10
   128c8:	bne	12738 <readstat_parse_por+0x528>
   128cc:	ldr	r1, [sp, #48]	; 0x30
   128d0:	ldr	r0, [r1]
   128d4:	rsb	r0, r0, #80	; 0x50
   128d8:	str	r0, [sl]
   128dc:	str	r7, [r1]
   128e0:	cmp	r6, #1
   128e4:	blt	1283c <readstat_parse_por+0x62c>
   128e8:	b	12918 <readstat_parse_por+0x708>
   128ec:	ldr	r1, [sp, #48]	; 0x30
   128f0:	ldr	r1, [r1]
   128f4:	cmp	r1, #80	; 0x50
   128f8:	beq	12738 <readstat_parse_por+0x528>
   128fc:	ldr	r2, [sp, #48]	; 0x30
   12900:	add	r1, r1, #1
   12904:	add	r6, r6, #1
   12908:	mov	r5, r0
   1290c:	str	r1, [r2]
   12910:	cmp	r6, #1
   12914:	blt	1283c <readstat_parse_por+0x62c>
   12918:	bne	12738 <readstat_parse_por+0x528>
   1291c:	uxtb	r0, r5
   12920:	add	r0, r8, r0, lsl #1
   12924:	ldrh	r0, [r0, #94]	; 0x5e
   12928:	sub	r0, r0, #49	; 0x31
   1292c:	cmp	r0, #21
   12930:	bhi	12738 <readstat_parse_por+0x528>
   12934:	add	r1, pc, #8
   12938:	mov	r4, #5
   1293c:	ldr	r0, [r1, r0, lsl #2]
   12940:	add	pc, r1, r0
   12944:	.word	0x00000058
   12948:	.word	0x00000058
   1294c:	.word	0x00000058
   12950:	.word	0x00000068
   12954:	.word	0x000002b4
   12958:	.word	0x00000414
   1295c:	.word	0x00000424
   12960:	.word	0x00000630
   12964:	.word	0x00000784
   12968:	.word	0xfffffe28
   1296c:	.word	0xfffffe28
   12970:	.word	0xfffffe28
   12974:	.word	0xfffffe28
   12978:	.word	0xfffffe28
   1297c:	.word	0xfffffe28
   12980:	.word	0xfffffe28
   12984:	.word	0x000008d4
   12988:	.word	0x00000a44
   1298c:	.word	0x00000cac
   12990:	.word	0x00000d6c
   12994:	.word	0x00000f64
   12998:	.word	0x00001ca4
   1299c:	mov	r0, #0
   129a0:	add	r1, sp, #56	; 0x38
   129a4:	mov	r2, #256	; 0x100
   129a8:	b	13ba8 <readstat_parse_por+0x1998>
   129ac:	ldr	r0, [r8, #632]	; 0x278
   129b0:	cmp	r0, #0
   129b4:	bne	12738 <readstat_parse_por+0x528>
   129b8:	movw	r0, #0
   129bc:	mov	r4, #0
   129c0:	add	lr, sp, #1024	; 0x400
   129c4:	movt	r0, #32760	; 0x7ff8
   129c8:	str	r4, [fp, #-1112]	; 0xfffffba8
   129cc:	add	r7, lr, #40	; 0x28
   129d0:	str	r0, [fp, #-1108]	; 0xfffffbac
   129d4:	ldr	r6, [r8, #44]	; 0x2c
   129d8:	ldr	r0, [sl]
   129dc:	cmp	r0, #0
   129e0:	beq	12a04 <readstat_parse_por+0x7f4>
   129e4:	ldr	r1, [sp, #52]	; 0x34
   129e8:	sub	r0, r0, #1
   129ec:	add	r4, r4, #1
   129f0:	ldrb	r5, [r1]
   129f4:	str	r0, [sl]
   129f8:	cmp	r4, #1
   129fc:	blt	129d8 <readstat_parse_por+0x7c8>
   12a00:	b	12ab8 <readstat_parse_por+0x8a8>
   12a04:	ldr	r3, [r6, #12]
   12a08:	ldr	r2, [r6, #20]
   12a0c:	mov	r0, r7
   12a10:	mov	r1, #1
   12a14:	blx	r3
   12a18:	cmn	r0, #1
   12a1c:	beq	12738 <readstat_parse_por+0x528>
   12a20:	cmp	r0, #0
   12a24:	beq	12738 <readstat_parse_por+0x528>
   12a28:	ldrb	r0, [sp, #1064]	; 0x428
   12a2c:	cmp	r0, #10
   12a30:	beq	12a68 <readstat_parse_por+0x858>
   12a34:	cmp	r0, #13
   12a38:	bne	12a8c <readstat_parse_por+0x87c>
   12a3c:	ldr	r3, [r6, #12]
   12a40:	ldr	r2, [r6, #20]
   12a44:	mov	r0, r7
   12a48:	mov	r1, #1
   12a4c:	blx	r3
   12a50:	add	r0, r0, #1
   12a54:	cmp	r0, #2
   12a58:	bcc	12738 <readstat_parse_por+0x528>
   12a5c:	ldrb	r0, [sp, #1064]	; 0x428
   12a60:	cmp	r0, #10
   12a64:	bne	12738 <readstat_parse_por+0x528>
   12a68:	ldr	r1, [sp, #48]	; 0x30
   12a6c:	ldr	r0, [r1]
   12a70:	rsb	r0, r0, #80	; 0x50
   12a74:	str	r0, [sl]
   12a78:	mov	r0, #0
   12a7c:	str	r0, [r1]
   12a80:	cmp	r4, #1
   12a84:	blt	129d8 <readstat_parse_por+0x7c8>
   12a88:	b	12ab8 <readstat_parse_por+0x8a8>
   12a8c:	ldr	r1, [sp, #48]	; 0x30
   12a90:	ldr	r1, [r1]
   12a94:	cmp	r1, #80	; 0x50
   12a98:	beq	12738 <readstat_parse_por+0x528>
   12a9c:	ldr	r2, [sp, #48]	; 0x30
   12aa0:	add	r1, r1, #1
   12aa4:	add	r4, r4, #1
   12aa8:	mov	r5, r0
   12aac:	str	r1, [r2]
   12ab0:	cmp	r4, #1
   12ab4:	blt	129d8 <readstat_parse_por+0x7c8>
   12ab8:	mov	r4, #5
   12abc:	bne	1276c <readstat_parse_por+0x55c>
   12ac0:	uxtb	r2, r5
   12ac4:	mov	r0, r8
   12ac8:	mov	r1, r9
   12acc:	bl	14ca4 <read_double_with_peek>
   12ad0:	cmp	r0, #0
   12ad4:	bne	1494c <readstat_parse_por+0x273c>
   12ad8:	sub	lr, fp, #1024	; 0x400
   12adc:	sub	r0, lr, #88	; 0x58
   12ae0:	vldr	d8, [r0]
   12ae4:	vorr	d0, d8, d8
   12ae8:	bl	4c84 <__isnan@plt>
   12aec:	vcmpe.f64	d8, d9
   12af0:	vmrs	APSR_nzcv, fpscr
   12af4:	bgt	1276c <readstat_parse_por+0x55c>
   12af8:	vcmpe.f64	d8, #0.0
   12afc:	vmrs	APSR_nzcv, fpscr
   12b00:	bmi	1276c <readstat_parse_por+0x55c>
   12b04:	cmp	r0, #0
   12b08:	bne	1276c <readstat_parse_por+0x55c>
   12b0c:	vcvt.s32.f64	s0, d8
   12b10:	mov	r1, #4
   12b14:	vstr	s0, [r8, #632]	; 0x278
   12b18:	vcvt.s32.f64	s0, d8
   12b1c:	vmov	r0, s0
   12b20:	bl	4954 <readstat_calloc@plt>
   12b24:	str	r0, [r8, #648]	; 0x288
   12b28:	mov	r1, #280	; 0x118
   12b2c:	ldr	r0, [r8, #632]	; 0x278
   12b30:	bl	4954 <readstat_calloc@plt>
   12b34:	mov	r4, #3
   12b38:	cmp	r0, #0
   12b3c:	str	r0, [r8, #652]	; 0x28c
   12b40:	beq	1276c <readstat_parse_por+0x55c>
   12b44:	ldr	r0, [r8, #648]	; 0x288
   12b48:	ldr	r3, [sp, #40]	; 0x28
   12b4c:	cmp	r0, #0
   12b50:	beq	1276c <readstat_parse_por+0x55c>
   12b54:	ldr	r2, [r8]
   12b58:	cmp	r2, #0
   12b5c:	beq	12830 <readstat_parse_por+0x620>
   12b60:	mvn	r0, #0
   12b64:	ldr	r7, [sp, #28]
   12b68:	str	r0, [fp, #-1108]	; 0xfffffbac
   12b6c:	str	r0, [fp, #-1112]	; 0xfffffba8
   12b70:	ldr	r0, [r8, #632]	; 0x278
   12b74:	asr	r1, r0, #31
   12b78:	strd	r0, [r7]
   12b7c:	ldr	r7, [sp, #32]
   12b80:	ldr	r0, [r8, #56]	; 0x38
   12b84:	str	r0, [fp, #-1092]	; 0xfffffbbc
   12b88:	str	r0, [fp, #-1096]	; 0xfffffbb8
   12b8c:	ldr	r0, [r8, #60]	; 0x3c
   12b90:	asr	r1, r0, #31
   12b94:	strd	r0, [r7]
   12b98:	mov	r0, #0
   12b9c:	str	r0, [fp, #-1076]	; 0xfffffbcc
   12ba0:	str	r0, [fp, #-1080]	; 0xfffffbc8
   12ba4:	str	r0, [fp, #-1072]	; 0xfffffbd0
   12ba8:	str	r3, [fp, #-1068]	; 0xfffffbd4
   12bac:	str	r0, [fp, #-1064]	; 0xfffffbd8
   12bb0:	ldrb	r0, [fp, #-1060]	; 0xfffffbdc
   12bb4:	and	r0, r0, #254	; 0xfe
   12bb8:	strb	r0, [fp, #-1060]	; 0xfffffbdc
   12bbc:	mov	r0, r9
   12bc0:	ldr	r1, [r8, #36]	; 0x24
   12bc4:	blx	r2
   12bc8:	mov	r4, #4
   12bcc:	cmp	r0, #0
   12bd0:	beq	12830 <readstat_parse_por+0x620>
   12bd4:	b	1276c <readstat_parse_por+0x55c>
   12bd8:	.word	0x00000000
   12bdc:	.word	0x412e8480
   12be0:	.word	0x00000000
   12be4:	.word	0x40590000
   12be8:	.word	0x00000000
   12bec:	.word	0x405e0000
   12bf0:	.word	0x00000000
   12bf4:	.word	0x40d38800
   12bf8:	movw	r0, #0
   12bfc:	mov	r4, #0
   12c00:	add	lr, sp, #1024	; 0x400
   12c04:	movt	r0, #32760	; 0x7ff8
   12c08:	str	r4, [fp, #-1112]	; 0xfffffba8
   12c0c:	add	r7, lr, #40	; 0x28
   12c10:	str	r0, [fp, #-1108]	; 0xfffffbac
   12c14:	ldr	r6, [r8, #44]	; 0x2c
   12c18:	ldr	r0, [sl]
   12c1c:	cmp	r0, #0
   12c20:	beq	12c44 <readstat_parse_por+0xa34>
   12c24:	ldr	r1, [sp, #52]	; 0x34
   12c28:	sub	r0, r0, #1
   12c2c:	add	r4, r4, #1
   12c30:	ldrb	r5, [r1]
   12c34:	str	r0, [sl]
   12c38:	cmp	r4, #1
   12c3c:	blt	12c18 <readstat_parse_por+0xa08>
   12c40:	b	12cf8 <readstat_parse_por+0xae8>
   12c44:	ldr	r3, [r6, #12]
   12c48:	ldr	r2, [r6, #20]
   12c4c:	mov	r0, r7
   12c50:	mov	r1, #1
   12c54:	blx	r3
   12c58:	cmn	r0, #1
   12c5c:	beq	12738 <readstat_parse_por+0x528>
   12c60:	cmp	r0, #0
   12c64:	beq	12738 <readstat_parse_por+0x528>
   12c68:	ldrb	r0, [sp, #1064]	; 0x428
   12c6c:	cmp	r0, #10
   12c70:	beq	12ca8 <readstat_parse_por+0xa98>
   12c74:	cmp	r0, #13
   12c78:	bne	12ccc <readstat_parse_por+0xabc>
   12c7c:	ldr	r3, [r6, #12]
   12c80:	ldr	r2, [r6, #20]
   12c84:	mov	r0, r7
   12c88:	mov	r1, #1
   12c8c:	blx	r3
   12c90:	add	r0, r0, #1
   12c94:	cmp	r0, #2
   12c98:	bcc	12738 <readstat_parse_por+0x528>
   12c9c:	ldrb	r0, [sp, #1064]	; 0x428
   12ca0:	cmp	r0, #10
   12ca4:	bne	12738 <readstat_parse_por+0x528>
   12ca8:	ldr	r1, [sp, #48]	; 0x30
   12cac:	ldr	r0, [r1]
   12cb0:	rsb	r0, r0, #80	; 0x50
   12cb4:	str	r0, [sl]
   12cb8:	mov	r0, #0
   12cbc:	str	r0, [r1]
   12cc0:	cmp	r4, #1
   12cc4:	blt	12c18 <readstat_parse_por+0xa08>
   12cc8:	b	12cf8 <readstat_parse_por+0xae8>
   12ccc:	ldr	r1, [sp, #48]	; 0x30
   12cd0:	ldr	r1, [r1]
   12cd4:	cmp	r1, #80	; 0x50
   12cd8:	beq	12738 <readstat_parse_por+0x528>
   12cdc:	ldr	r2, [sp, #48]	; 0x30
   12ce0:	add	r1, r1, #1
   12ce4:	add	r4, r4, #1
   12ce8:	mov	r5, r0
   12cec:	str	r1, [r2]
   12cf0:	cmp	r4, #1
   12cf4:	blt	12c18 <readstat_parse_por+0xa08>
   12cf8:	mov	r4, #5
   12cfc:	bne	1276c <readstat_parse_por+0x55c>
   12d00:	uxtb	r2, r5
   12d04:	mov	r0, r8
   12d08:	mov	r1, r9
   12d0c:	bl	14ca4 <read_double_with_peek>
   12d10:	cmp	r0, #0
   12d14:	bne	1494c <readstat_parse_por+0x273c>
   12d18:	sub	lr, fp, #1024	; 0x400
   12d1c:	sub	r0, lr, #88	; 0x58
   12d20:	vldr	d8, [r0]
   12d24:	vorr	d0, d8, d8
   12d28:	bl	4c84 <__isnan@plt>
   12d2c:	vcmpe.f64	d8, d10
   12d30:	vmrs	APSR_nzcv, fpscr
   12d34:	bgt	1276c <readstat_parse_por+0x55c>
   12d38:	vcmpe.f64	d8, #0.0
   12d3c:	vmrs	APSR_nzcv, fpscr
   12d40:	bmi	1276c <readstat_parse_por+0x55c>
   12d44:	cmp	r0, #0
   12d48:	bne	1276c <readstat_parse_por+0x55c>
   12d4c:	vcvt.s32.f64	s0, d8
   12d50:	vstr	s0, [r8, #608]	; 0x260
   12d54:	b	12830 <readstat_parse_por+0x620>
   12d58:	ldr	r1, [sp, #36]	; 0x24
   12d5c:	mov	r0, #0
   12d60:	mov	r2, #9
   12d64:	b	13ba8 <readstat_parse_por+0x1998>
   12d68:	ldr	r0, [r8, #636]	; 0x27c
   12d6c:	ldr	r1, [r8, #632]	; 0x278
   12d70:	mov	r4, #5
   12d74:	add	r0, r0, #1
   12d78:	cmp	r0, r1
   12d7c:	str	r0, [r8, #636]	; 0x27c
   12d80:	beq	13bd0 <readstat_parse_por+0x19c0>
   12d84:	ldr	r1, [r8, #652]	; 0x28c
   12d88:	mov	r2, #280	; 0x118
   12d8c:	mov	r4, #0
   12d90:	mla	r7, r0, r2, r1
   12d94:	add	r0, r7, #36	; 0x24
   12d98:	str	r0, [sp, #1068]	; 0x42c
   12d9c:	add	r0, r7, #24
   12da0:	str	r0, [sp, #24]
   12da4:	str	r0, [sp, #1064]	; 0x428
   12da8:	mvn	r0, #0
   12dac:	str	r0, [r7, #4]
   12db0:	movw	r0, #0
   12db4:	str	r4, [fp, #-1112]	; 0xfffffba8
   12db8:	movt	r0, #32760	; 0x7ff8
   12dbc:	str	r0, [fp, #-1108]	; 0xfffffbac
   12dc0:	ldr	r6, [r8, #44]	; 0x2c
   12dc4:	ldr	r0, [sl]
   12dc8:	cmp	r0, #0
   12dcc:	beq	12df0 <readstat_parse_por+0xbe0>
   12dd0:	ldr	r1, [sp, #52]	; 0x34
   12dd4:	sub	r0, r0, #1
   12dd8:	add	r4, r4, #1
   12ddc:	ldrb	r5, [r1]
   12de0:	str	r0, [sl]
   12de4:	cmp	r4, #1
   12de8:	blt	12dc4 <readstat_parse_por+0xbb4>
   12dec:	b	12ea4 <readstat_parse_por+0xc94>
   12df0:	ldr	r3, [r6, #12]
   12df4:	ldr	r2, [r6, #20]
   12df8:	add	r0, sp, #784	; 0x310
   12dfc:	mov	r1, #1
   12e00:	blx	r3
   12e04:	cmn	r0, #1
   12e08:	beq	13c2c <readstat_parse_por+0x1a1c>
   12e0c:	cmp	r0, #0
   12e10:	beq	13c5c <readstat_parse_por+0x1a4c>
   12e14:	ldrb	r0, [sp, #784]	; 0x310
   12e18:	cmp	r0, #10
   12e1c:	beq	12e54 <readstat_parse_por+0xc44>
   12e20:	cmp	r0, #13
   12e24:	bne	12e78 <readstat_parse_por+0xc68>
   12e28:	ldr	r3, [r6, #12]
   12e2c:	ldr	r2, [r6, #20]
   12e30:	add	r0, sp, #784	; 0x310
   12e34:	mov	r1, #1
   12e38:	blx	r3
   12e3c:	add	r0, r0, #1
   12e40:	cmp	r0, #2
   12e44:	bcc	13c2c <readstat_parse_por+0x1a1c>
   12e48:	ldrb	r0, [sp, #784]	; 0x310
   12e4c:	cmp	r0, #10
   12e50:	bne	13c2c <readstat_parse_por+0x1a1c>
   12e54:	ldr	r1, [sp, #48]	; 0x30
   12e58:	ldr	r0, [r1]
   12e5c:	rsb	r0, r0, #80	; 0x50
   12e60:	str	r0, [sl]
   12e64:	mov	r0, #0
   12e68:	str	r0, [r1]
   12e6c:	cmp	r4, #1
   12e70:	blt	12dc4 <readstat_parse_por+0xbb4>
   12e74:	b	12ea4 <readstat_parse_por+0xc94>
   12e78:	ldr	r1, [sp, #48]	; 0x30
   12e7c:	ldr	r1, [r1]
   12e80:	cmp	r1, #80	; 0x50
   12e84:	beq	13c2c <readstat_parse_por+0x1a1c>
   12e88:	ldr	r2, [sp, #48]	; 0x30
   12e8c:	add	r1, r1, #1
   12e90:	add	r4, r4, #1
   12e94:	mov	r5, r0
   12e98:	str	r1, [r2]
   12e9c:	cmp	r4, #1
   12ea0:	blt	12dc4 <readstat_parse_por+0xbb4>
   12ea4:	bne	13c1c <readstat_parse_por+0x1a0c>
   12ea8:	uxtb	r2, r5
   12eac:	mov	r0, r8
   12eb0:	mov	r1, r9
   12eb4:	bl	14ca4 <read_double_with_peek>
   12eb8:	mov	r4, r0
   12ebc:	cmp	r0, #0
   12ec0:	bne	13bd0 <readstat_parse_por+0x19c0>
   12ec4:	sub	lr, fp, #1024	; 0x400
   12ec8:	sub	r0, lr, #88	; 0x58
   12ecc:	vldr	d8, [r0]
   12ed0:	vorr	d0, d8, d8
   12ed4:	bl	4c84 <__isnan@plt>
   12ed8:	vcmpe.f64	d8, d9
   12edc:	vmrs	APSR_nzcv, fpscr
   12ee0:	bgt	14078 <readstat_parse_por+0x1e68>
   12ee4:	vcmpe.f64	d8, #0.0
   12ee8:	vmrs	APSR_nzcv, fpscr
   12eec:	bmi	140d8 <readstat_parse_por+0x1ec8>
   12ef0:	cmp	r0, #0
   12ef4:	mov	r4, #5
   12ef8:	bne	13bd0 <readstat_parse_por+0x19c0>
   12efc:	vcvt.s32.f64	s0, d8
   12f00:	vcvt.s32.f64	s2, d8
   12f04:	add	r5, r7, #187	; 0xbb
   12f08:	mov	r2, #9
   12f0c:	mov	r3, r9
   12f10:	vmov	r0, s2
   12f14:	vstr	s0, [r7, #16]
   12f18:	mov	r1, r5
   12f1c:	cmp	r0, #0
   12f20:	mov	r0, #0
   12f24:	movweq	r0, #5
   12f28:	str	r0, [r7]
   12f2c:	mov	r0, #0
   12f30:	str	r0, [fp, #-1112]	; 0xfffffba8
   12f34:	mov	r0, r8
   12f38:	bl	149f0 <maybe_read_string>
   12f3c:	ldr	r1, [fp, #-1112]	; 0xfffffba8
   12f40:	mov	r4, r0
   12f44:	cmp	r1, #0
   12f48:	movwne	r4, #5
   12f4c:	cmp	r0, #0
   12f50:	movne	r4, r0
   12f54:	cmp	r4, #0
   12f58:	bne	13bd0 <readstat_parse_por+0x19c0>
   12f5c:	ldr	r2, [r8, #656]	; 0x290
   12f60:	mov	r0, r5
   12f64:	mov	r1, r7
   12f68:	bl	4e28 <ck_str_hash_insert@plt>
   12f6c:	mov	r7, #0
   12f70:	b	14108 <readstat_parse_por+0x1ef8>
   12f74:	ldr	r0, [r8, #636]	; 0x27c
   12f78:	cmp	r0, #0
   12f7c:	blt	12738 <readstat_parse_por+0x528>
   12f80:	ldr	r1, [r8, #632]	; 0x278
   12f84:	cmp	r0, r1
   12f88:	bge	12738 <readstat_parse_por+0x528>
   12f8c:	mov	r1, #280	; 0x118
   12f90:	mul	r2, r0, r1
   12f94:	ldr	r1, [r8, #652]	; 0x28c
   12f98:	mov	r7, r1
   12f9c:	ldr	r3, [r7, r2]!
   12fa0:	ldr	r2, [r7, #52]!	; 0x34
   12fa4:	cmp	r3, #5
   12fa8:	bne	13a88 <readstat_parse_por+0x1878>
   12fac:	mov	r3, #280	; 0x118
   12fb0:	ldr	r4, [r8, #44]	; 0x2c
   12fb4:	mov	r6, #0
   12fb8:	mla	r0, r0, r3, r1
   12fbc:	add	r0, r0, r2, lsl #3
   12fc0:	add	r0, r0, #64	; 0x40
   12fc4:	str	r0, [sp, #24]
   12fc8:	ldr	r0, [sl]
   12fcc:	cmp	r0, #0
   12fd0:	beq	12ff4 <readstat_parse_por+0xde4>
   12fd4:	ldr	r1, [sp, #52]	; 0x34
   12fd8:	sub	r0, r0, #1
   12fdc:	add	r6, r6, #1
   12fe0:	ldrb	r5, [r1]
   12fe4:	str	r0, [sl]
   12fe8:	cmp	r6, #1
   12fec:	blt	12fc8 <readstat_parse_por+0xdb8>
   12ff0:	b	130a8 <readstat_parse_por+0xe98>
   12ff4:	ldr	r3, [r4, #12]
   12ff8:	ldr	r2, [r4, #20]
   12ffc:	mov	r0, r9
   13000:	mov	r1, #1
   13004:	blx	r3
   13008:	cmn	r0, #1
   1300c:	beq	12738 <readstat_parse_por+0x528>
   13010:	cmp	r0, #0
   13014:	beq	12738 <readstat_parse_por+0x528>
   13018:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   1301c:	cmp	r0, #10
   13020:	beq	13058 <readstat_parse_por+0xe48>
   13024:	cmp	r0, #13
   13028:	bne	1307c <readstat_parse_por+0xe6c>
   1302c:	ldr	r3, [r4, #12]
   13030:	ldr	r2, [r4, #20]
   13034:	mov	r0, r9
   13038:	mov	r1, #1
   1303c:	blx	r3
   13040:	add	r0, r0, #1
   13044:	cmp	r0, #2
   13048:	bcc	12738 <readstat_parse_por+0x528>
   1304c:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   13050:	cmp	r0, #10
   13054:	bne	12738 <readstat_parse_por+0x528>
   13058:	ldr	r1, [sp, #48]	; 0x30
   1305c:	ldr	r0, [r1]
   13060:	rsb	r0, r0, #80	; 0x50
   13064:	str	r0, [sl]
   13068:	mov	r0, #0
   1306c:	str	r0, [r1]
   13070:	cmp	r6, #1
   13074:	blt	12fc8 <readstat_parse_por+0xdb8>
   13078:	b	130a8 <readstat_parse_por+0xe98>
   1307c:	ldr	r1, [sp, #48]	; 0x30
   13080:	ldr	r1, [r1]
   13084:	cmp	r1, #80	; 0x50
   13088:	beq	12738 <readstat_parse_por+0x528>
   1308c:	ldr	r2, [sp, #48]	; 0x30
   13090:	add	r1, r1, #1
   13094:	add	r6, r6, #1
   13098:	mov	r5, r0
   1309c:	str	r1, [r2]
   130a0:	cmp	r6, #1
   130a4:	blt	12fc8 <readstat_parse_por+0xdb8>
   130a8:	bne	12738 <readstat_parse_por+0x528>
   130ac:	ldr	r1, [sp, #24]
   130b0:	uxtb	r2, r5
   130b4:	mov	r0, r8
   130b8:	bl	14ca4 <read_double_with_peek>
   130bc:	cmp	r0, #0
   130c0:	beq	13ad4 <readstat_parse_por+0x18c4>
   130c4:	b	1494c <readstat_parse_por+0x273c>
   130c8:	ldr	r0, [r8, #636]	; 0x27c
   130cc:	cmp	r0, #0
   130d0:	blt	12738 <readstat_parse_por+0x528>
   130d4:	ldr	r1, [r8, #632]	; 0x278
   130d8:	cmp	r0, r1
   130dc:	beq	12738 <readstat_parse_por+0x528>
   130e0:	mov	r1, #280	; 0x118
   130e4:	mov	r7, #2
   130e8:	mul	r2, r0, r1
   130ec:	ldr	r1, [r8, #652]	; 0x28c
   130f0:	mov	r3, r1
   130f4:	ldr	r2, [r3, r2]!
   130f8:	str	r7, [r3, #52]	; 0x34
   130fc:	mov	r7, #1
   13100:	cmp	r2, #5
   13104:	str	r7, [r3, #56]	; 0x38
   13108:	bne	13ae4 <readstat_parse_por+0x18d4>
   1310c:	mov	r2, #280	; 0x118
   13110:	mov	r4, #0
   13114:	mla	r0, r0, r2, r1
   13118:	movw	r1, #0
   1311c:	movt	r1, #65520	; 0xfff0
   13120:	str	r4, [r0, #64]	; 0x40
   13124:	add	r7, r0, #72	; 0x48
   13128:	str	r1, [r0, #68]	; 0x44
   1312c:	ldr	r6, [r8, #44]	; 0x2c
   13130:	ldr	r0, [sl]
   13134:	cmp	r0, #0
   13138:	beq	1315c <readstat_parse_por+0xf4c>
   1313c:	ldr	r1, [sp, #52]	; 0x34
   13140:	sub	r0, r0, #1
   13144:	add	r4, r4, #1
   13148:	ldrb	r5, [r1]
   1314c:	str	r0, [sl]
   13150:	cmp	r4, #1
   13154:	blt	13130 <readstat_parse_por+0xf20>
   13158:	b	135d8 <readstat_parse_por+0x13c8>
   1315c:	ldr	r3, [r6, #12]
   13160:	ldr	r2, [r6, #20]
   13164:	mov	r0, r9
   13168:	mov	r1, #1
   1316c:	blx	r3
   13170:	cmn	r0, #1
   13174:	beq	12738 <readstat_parse_por+0x528>
   13178:	cmp	r0, #0
   1317c:	beq	12738 <readstat_parse_por+0x528>
   13180:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   13184:	cmp	r0, #10
   13188:	beq	131c0 <readstat_parse_por+0xfb0>
   1318c:	cmp	r0, #13
   13190:	bne	131e4 <readstat_parse_por+0xfd4>
   13194:	ldr	r3, [r6, #12]
   13198:	ldr	r2, [r6, #20]
   1319c:	mov	r0, r9
   131a0:	mov	r1, #1
   131a4:	blx	r3
   131a8:	add	r0, r0, #1
   131ac:	cmp	r0, #2
   131b0:	bcc	12738 <readstat_parse_por+0x528>
   131b4:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   131b8:	cmp	r0, #10
   131bc:	bne	12738 <readstat_parse_por+0x528>
   131c0:	ldr	r1, [sp, #48]	; 0x30
   131c4:	ldr	r0, [r1]
   131c8:	rsb	r0, r0, #80	; 0x50
   131cc:	str	r0, [sl]
   131d0:	mov	r0, #0
   131d4:	str	r0, [r1]
   131d8:	cmp	r4, #1
   131dc:	blt	13130 <readstat_parse_por+0xf20>
   131e0:	b	135d8 <readstat_parse_por+0x13c8>
   131e4:	ldr	r1, [sp, #48]	; 0x30
   131e8:	ldr	r1, [r1]
   131ec:	cmp	r1, #80	; 0x50
   131f0:	beq	12738 <readstat_parse_por+0x528>
   131f4:	ldr	r2, [sp, #48]	; 0x30
   131f8:	add	r1, r1, #1
   131fc:	add	r4, r4, #1
   13200:	mov	r5, r0
   13204:	str	r1, [r2]
   13208:	cmp	r4, #1
   1320c:	blt	13130 <readstat_parse_por+0xf20>
   13210:	b	135d8 <readstat_parse_por+0x13c8>
   13214:	.word	0x0001700a
   13218:	ldr	r0, [r8, #636]	; 0x27c
   1321c:	cmp	r0, #0
   13220:	blt	12738 <readstat_parse_por+0x528>
   13224:	ldr	r1, [r8, #632]	; 0x278
   13228:	cmp	r0, r1
   1322c:	beq	12738 <readstat_parse_por+0x528>
   13230:	mov	r1, #280	; 0x118
   13234:	mov	r7, #2
   13238:	mul	r2, r0, r1
   1323c:	ldr	r1, [r8, #652]	; 0x28c
   13240:	mov	r3, r1
   13244:	ldr	r2, [r3, r2]!
   13248:	str	r7, [r3, #52]	; 0x34
   1324c:	mov	r7, #1
   13250:	cmp	r2, #5
   13254:	str	r7, [r3, #56]	; 0x38
   13258:	bne	13b08 <readstat_parse_por+0x18f8>
   1325c:	ldr	r4, [r8, #44]	; 0x2c
   13260:	mov	r2, #280	; 0x118
   13264:	mov	r6, #0
   13268:	mla	r7, r0, r2, r1
   1326c:	add	r0, r7, #64	; 0x40
   13270:	str	r0, [sp, #24]
   13274:	ldr	r0, [sl]
   13278:	cmp	r0, #0
   1327c:	beq	132a4 <readstat_parse_por+0x1094>
   13280:	ldr	r1, [sp, #52]	; 0x34
   13284:	sub	r0, r0, #1
   13288:	add	r6, r6, #1
   1328c:	ldrb	r5, [r1]
   13290:	str	r0, [sl]
   13294:	cmp	r6, #1
   13298:	blt	13274 <readstat_parse_por+0x1064>
   1329c:	b	13358 <readstat_parse_por+0x1148>
   132a0:	.word	0x00016ff2
   132a4:	ldr	r3, [r4, #12]
   132a8:	ldr	r2, [r4, #20]
   132ac:	mov	r0, r9
   132b0:	mov	r1, #1
   132b4:	blx	r3
   132b8:	cmn	r0, #1
   132bc:	beq	12738 <readstat_parse_por+0x528>
   132c0:	cmp	r0, #0
   132c4:	beq	12738 <readstat_parse_por+0x528>
   132c8:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   132cc:	cmp	r0, #10
   132d0:	beq	13308 <readstat_parse_por+0x10f8>
   132d4:	cmp	r0, #13
   132d8:	bne	1332c <readstat_parse_por+0x111c>
   132dc:	ldr	r3, [r4, #12]
   132e0:	ldr	r2, [r4, #20]
   132e4:	mov	r0, r9
   132e8:	mov	r1, #1
   132ec:	blx	r3
   132f0:	add	r0, r0, #1
   132f4:	cmp	r0, #2
   132f8:	bcc	12738 <readstat_parse_por+0x528>
   132fc:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   13300:	cmp	r0, #10
   13304:	bne	12738 <readstat_parse_por+0x528>
   13308:	ldr	r1, [sp, #48]	; 0x30
   1330c:	ldr	r0, [r1]
   13310:	rsb	r0, r0, #80	; 0x50
   13314:	str	r0, [sl]
   13318:	mov	r0, #0
   1331c:	str	r0, [r1]
   13320:	cmp	r6, #1
   13324:	blt	13274 <readstat_parse_por+0x1064>
   13328:	b	13358 <readstat_parse_por+0x1148>
   1332c:	ldr	r1, [sp, #48]	; 0x30
   13330:	ldr	r1, [r1]
   13334:	cmp	r1, #80	; 0x50
   13338:	beq	12738 <readstat_parse_por+0x528>
   1333c:	ldr	r2, [sp, #48]	; 0x30
   13340:	add	r1, r1, #1
   13344:	add	r6, r6, #1
   13348:	mov	r5, r0
   1334c:	str	r1, [r2]
   13350:	cmp	r6, #1
   13354:	blt	13274 <readstat_parse_por+0x1064>
   13358:	bne	12738 <readstat_parse_por+0x528>
   1335c:	ldr	r1, [sp, #24]
   13360:	uxtb	r2, r5
   13364:	mov	r0, r8
   13368:	bl	14ca4 <read_double_with_peek>
   1336c:	cmp	r0, #0
   13370:	bne	1494c <readstat_parse_por+0x273c>
   13374:	movw	r1, #0
   13378:	mov	r0, #0
   1337c:	movt	r1, #32752	; 0x7ff0
   13380:	strd	r0, [r7, #72]	; 0x48
   13384:	b	12830 <readstat_parse_por+0x620>
   13388:	ldr	r0, [r8, #636]	; 0x27c
   1338c:	cmp	r0, #0
   13390:	blt	12738 <readstat_parse_por+0x528>
   13394:	ldr	r1, [r8, #632]	; 0x278
   13398:	cmp	r0, r1
   1339c:	beq	12738 <readstat_parse_por+0x528>
   133a0:	mov	r1, #280	; 0x118
   133a4:	mov	r7, #2
   133a8:	mul	r2, r0, r1
   133ac:	ldr	r1, [r8, #652]	; 0x28c
   133b0:	mov	r3, r1
   133b4:	ldr	r2, [r3, r2]!
   133b8:	str	r7, [r3, #52]	; 0x34
   133bc:	mov	r7, #1
   133c0:	cmp	r2, #5
   133c4:	str	r7, [r3, #56]	; 0x38
   133c8:	bne	13b58 <readstat_parse_por+0x1948>
   133cc:	ldr	r4, [r8, #44]	; 0x2c
   133d0:	mov	r2, #280	; 0x118
   133d4:	mov	r6, #0
   133d8:	mla	r7, r0, r2, r1
   133dc:	add	r0, r7, #64	; 0x40
   133e0:	str	r0, [sp, #24]
   133e4:	ldr	r0, [sl]
   133e8:	cmp	r0, #0
   133ec:	beq	13410 <readstat_parse_por+0x1200>
   133f0:	ldr	r1, [sp, #52]	; 0x34
   133f4:	sub	r0, r0, #1
   133f8:	add	r6, r6, #1
   133fc:	ldrb	r5, [r1]
   13400:	str	r0, [sl]
   13404:	cmp	r6, #1
   13408:	blt	133e4 <readstat_parse_por+0x11d4>
   1340c:	b	134c4 <readstat_parse_por+0x12b4>
   13410:	ldr	r3, [r4, #12]
   13414:	ldr	r2, [r4, #20]
   13418:	mov	r0, r9
   1341c:	mov	r1, #1
   13420:	blx	r3
   13424:	cmn	r0, #1
   13428:	beq	12738 <readstat_parse_por+0x528>
   1342c:	cmp	r0, #0
   13430:	beq	12738 <readstat_parse_por+0x528>
   13434:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   13438:	cmp	r0, #10
   1343c:	beq	13474 <readstat_parse_por+0x1264>
   13440:	cmp	r0, #13
   13444:	bne	13498 <readstat_parse_por+0x1288>
   13448:	ldr	r3, [r4, #12]
   1344c:	ldr	r2, [r4, #20]
   13450:	mov	r0, r9
   13454:	mov	r1, #1
   13458:	blx	r3
   1345c:	add	r0, r0, #1
   13460:	cmp	r0, #2
   13464:	bcc	12738 <readstat_parse_por+0x528>
   13468:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   1346c:	cmp	r0, #10
   13470:	bne	12738 <readstat_parse_por+0x528>
   13474:	ldr	r1, [sp, #48]	; 0x30
   13478:	ldr	r0, [r1]
   1347c:	rsb	r0, r0, #80	; 0x50
   13480:	str	r0, [sl]
   13484:	mov	r0, #0
   13488:	str	r0, [r1]
   1348c:	cmp	r6, #1
   13490:	blt	133e4 <readstat_parse_por+0x11d4>
   13494:	b	134c4 <readstat_parse_por+0x12b4>
   13498:	ldr	r1, [sp, #48]	; 0x30
   1349c:	ldr	r1, [r1]
   134a0:	cmp	r1, #80	; 0x50
   134a4:	beq	12738 <readstat_parse_por+0x528>
   134a8:	ldr	r2, [sp, #48]	; 0x30
   134ac:	add	r1, r1, #1
   134b0:	add	r6, r6, #1
   134b4:	mov	r5, r0
   134b8:	str	r1, [r2]
   134bc:	cmp	r6, #1
   134c0:	blt	133e4 <readstat_parse_por+0x11d4>
   134c4:	bne	12738 <readstat_parse_por+0x528>
   134c8:	ldr	r1, [sp, #24]
   134cc:	uxtb	r2, r5
   134d0:	mov	r0, r8
   134d4:	bl	14ca4 <read_double_with_peek>
   134d8:	cmp	r0, #0
   134dc:	bne	1494c <readstat_parse_por+0x273c>
   134e0:	ldr	r4, [r8, #44]	; 0x2c
   134e4:	add	r7, r7, #72	; 0x48
   134e8:	mov	r6, #0
   134ec:	ldr	r0, [sl]
   134f0:	cmp	r0, #0
   134f4:	beq	13520 <readstat_parse_por+0x1310>
   134f8:	ldr	r1, [sp, #52]	; 0x34
   134fc:	sub	r0, r0, #1
   13500:	add	r6, r6, #1
   13504:	ldrb	r5, [r1]
   13508:	str	r0, [sl]
   1350c:	cmp	r6, #1
   13510:	blt	134ec <readstat_parse_por+0x12dc>
   13514:	b	135d8 <readstat_parse_por+0x13c8>
   13518:	.word	0x00036d30
   1351c:	.word	0x00036d34
   13520:	ldr	r3, [r4, #12]
   13524:	ldr	r2, [r4, #20]
   13528:	mov	r0, r9
   1352c:	mov	r1, #1
   13530:	blx	r3
   13534:	cmn	r0, #1
   13538:	beq	12738 <readstat_parse_por+0x528>
   1353c:	cmp	r0, #0
   13540:	beq	12738 <readstat_parse_por+0x528>
   13544:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   13548:	cmp	r0, #10
   1354c:	beq	13584 <readstat_parse_por+0x1374>
   13550:	cmp	r0, #13
   13554:	bne	135ac <readstat_parse_por+0x139c>
   13558:	ldr	r3, [r4, #12]
   1355c:	ldr	r2, [r4, #20]
   13560:	mov	r0, r9
   13564:	mov	r1, #1
   13568:	blx	r3
   1356c:	add	r0, r0, #1
   13570:	cmp	r0, #2
   13574:	bcc	12738 <readstat_parse_por+0x528>
   13578:	ldrb	r0, [fp, #-1112]	; 0xfffffba8
   1357c:	cmp	r0, #10
   13580:	bne	12738 <readstat_parse_por+0x528>
   13584:	ldr	r1, [sp, #48]	; 0x30
   13588:	ldr	r0, [r1]
   1358c:	rsb	r0, r0, #80	; 0x50
   13590:	str	r0, [sl]
   13594:	mov	r0, #0
   13598:	str	r0, [r1]
   1359c:	cmp	r6, #1
   135a0:	blt	134ec <readstat_parse_por+0x12dc>
   135a4:	b	135d8 <readstat_parse_por+0x13c8>
   135a8:	.word	0x00036ccc
   135ac:	ldr	r1, [sp, #48]	; 0x30
   135b0:	ldr	r1, [r1]
   135b4:	cmp	r1, #80	; 0x50
   135b8:	beq	12738 <readstat_parse_por+0x528>
   135bc:	ldr	r2, [sp, #48]	; 0x30
   135c0:	add	r1, r1, #1
   135c4:	add	r6, r6, #1
   135c8:	mov	r5, r0
   135cc:	str	r1, [r2]
   135d0:	cmp	r6, #1
   135d4:	blt	134ec <readstat_parse_por+0x12dc>
   135d8:	bne	12738 <readstat_parse_por+0x528>
   135dc:	uxtb	r2, r5
   135e0:	mov	r0, r8
   135e4:	mov	r1, r7
   135e8:	bl	14ca4 <read_double_with_peek>
   135ec:	b	136a0 <readstat_parse_por+0x1490>
   135f0:	ldr	r5, [r8, #636]	; 0x27c
   135f4:	mov	r4, #5
   135f8:	cmp	r5, #0
   135fc:	blt	13bd0 <readstat_parse_por+0x19c0>
   13600:	ldr	r0, [r8, #632]	; 0x278
   13604:	cmp	r5, r0
   13608:	beq	13bd0 <readstat_parse_por+0x19c0>
   1360c:	ldr	r6, [r8, #652]	; 0x28c
   13610:	mov	r0, #0
   13614:	add	r1, sp, #784	; 0x310
   13618:	mov	r2, #256	; 0x100
   1361c:	mov	r3, r9
   13620:	str	r0, [fp, #-1112]	; 0xfffffba8
   13624:	mov	r0, r8
   13628:	bl	149f0 <maybe_read_string>
   1362c:	ldr	r1, [fp, #-1112]	; 0xfffffba8
   13630:	mov	r4, r0
   13634:	cmp	r1, #0
   13638:	movwne	r4, #5
   1363c:	cmp	r0, #0
   13640:	movne	r4, r0
   13644:	cmp	r4, #0
   13648:	bne	13bd0 <readstat_parse_por+0x19c0>
   1364c:	mov	r0, #280	; 0x118
   13650:	mla	r4, r5, r0, r6
   13654:	add	r6, sp, #784	; 0x310
   13658:	ldr	r7, [r4, #264]	; 0x108
   1365c:	mov	r0, r6
   13660:	bl	4b58 <strlen@plt>
   13664:	mov	r5, #1
   13668:	orr	r1, r5, r0, lsl #2
   1366c:	mov	r0, r7
   13670:	bl	4984 <realloc@plt>
   13674:	mov	r7, r0
   13678:	str	r0, [r4, #264]	; 0x108
   1367c:	mov	r0, r6
   13680:	bl	4b58 <strlen@plt>
   13684:	mov	r3, r0
   13688:	ldr	r0, [r8, #612]	; 0x264
   1368c:	mov	r2, r6
   13690:	orr	r1, r5, r3, lsl #2
   13694:	str	r0, [sp]
   13698:	mov	r0, r7
   1369c:	bl	4b94 <readstat_convert@plt>
   136a0:	mov	r4, r0
   136a4:	cmp	r4, #0
   136a8:	beq	12830 <readstat_parse_por+0x620>
   136ac:	b	1276c <readstat_parse_por+0x55c>
   136b0:	ldr	r3, [r8, #624]	; 0x270
   136b4:	ldr	r2, [pc, #3984]	; 1464c <readstat_parse_por+0x243c>
   136b8:	mov	r0, r9
   136bc:	mov	r1, #256	; 0x100
   136c0:	add	r2, pc, r2
   136c4:	bl	4bdc <snprintf@plt>
   136c8:	movw	r0, #0
   136cc:	mov	r4, #0
   136d0:	add	r7, sp, #1040	; 0x410
   136d4:	movt	r0, #32760	; 0x7ff8
   136d8:	str	r4, [sp, #1064]	; 0x428
   136dc:	str	r0, [sp, #1068]	; 0x42c
   136e0:	ldr	r6, [r8, #44]	; 0x2c
   136e4:	ldr	r0, [sl]
   136e8:	cmp	r0, #0
   136ec:	beq	13714 <readstat_parse_por+0x1504>
   136f0:	ldr	r1, [sp, #52]	; 0x34
   136f4:	sub	r0, r0, #1
   136f8:	add	r4, r4, #1
   136fc:	ldrb	r5, [r1]
   13700:	str	r0, [sl]
   13704:	cmp	r4, #1
   13708:	blt	136e4 <readstat_parse_por+0x14d4>
   1370c:	b	137cc <readstat_parse_por+0x15bc>
   13710:	.word	0x00017318
   13714:	ldr	r3, [r6, #12]
   13718:	ldr	r2, [r6, #20]
   1371c:	mov	r0, r7
   13720:	mov	r1, #1
   13724:	blx	r3
   13728:	cmn	r0, #1
   1372c:	beq	13bfc <readstat_parse_por+0x19ec>
   13730:	cmp	r0, #0
   13734:	beq	13c3c <readstat_parse_por+0x1a2c>
   13738:	ldrb	r0, [sp, #1040]	; 0x410
   1373c:	cmp	r0, #10
   13740:	beq	13778 <readstat_parse_por+0x1568>
   13744:	cmp	r0, #13
   13748:	bne	137a0 <readstat_parse_por+0x1590>
   1374c:	ldr	r3, [r6, #12]
   13750:	ldr	r2, [r6, #20]
   13754:	mov	r0, r7
   13758:	mov	r1, #1
   1375c:	blx	r3
   13760:	add	r0, r0, #1
   13764:	cmp	r0, #2
   13768:	bcc	13bfc <readstat_parse_por+0x19ec>
   1376c:	ldrb	r0, [sp, #1040]	; 0x410
   13770:	cmp	r0, #10
   13774:	bne	13bfc <readstat_parse_por+0x19ec>
   13778:	ldr	r1, [sp, #48]	; 0x30
   1377c:	ldr	r0, [r1]
   13780:	rsb	r0, r0, #80	; 0x50
   13784:	str	r0, [sl]
   13788:	mov	r0, #0
   1378c:	str	r0, [r1]
   13790:	cmp	r4, #1
   13794:	blt	136e4 <readstat_parse_por+0x14d4>
   13798:	b	137cc <readstat_parse_por+0x15bc>
   1379c:	.word	0x00017258
   137a0:	ldr	r1, [sp, #48]	; 0x30
   137a4:	ldr	r1, [r1]
   137a8:	cmp	r1, #80	; 0x50
   137ac:	beq	13bfc <readstat_parse_por+0x19ec>
   137b0:	ldr	r2, [sp, #48]	; 0x30
   137b4:	add	r1, r1, #1
   137b8:	add	r4, r4, #1
   137bc:	mov	r5, r0
   137c0:	str	r1, [r2]
   137c4:	cmp	r4, #1
   137c8:	blt	136e4 <readstat_parse_por+0x14d4>
   137cc:	bne	13bdc <readstat_parse_por+0x19cc>
   137d0:	add	lr, sp, #1024	; 0x400
   137d4:	uxtb	r2, r5
   137d8:	mov	r0, r8
   137dc:	add	r1, lr, #40	; 0x28
   137e0:	bl	14ca4 <read_double_with_peek>
   137e4:	mov	r4, r0
   137e8:	cmp	r0, #0
   137ec:	bne	13bd0 <readstat_parse_por+0x19c0>
   137f0:	add	r0, sp, #1040	; 0x410
   137f4:	vldr	d8, [r0, #24]
   137f8:	vorr	d0, d8, d8
   137fc:	bl	4c84 <__isnan@plt>
   13800:	vcmpe.f64	d8, d9
   13804:	vmrs	APSR_nzcv, fpscr
   13808:	bgt	13c6c <readstat_parse_por+0x1a5c>
   1380c:	vcmpe.f64	d8, #0.0
   13810:	vmrs	APSR_nzcv, fpscr
   13814:	bmi	14088 <readstat_parse_por+0x1e78>
   13818:	cmp	r0, #0
   1381c:	mov	r4, #5
   13820:	bne	13bd0 <readstat_parse_por+0x19c0>
   13824:	vcvt.s32.f64	s0, d8
   13828:	vmov	r5, s0
   1382c:	cmp	r5, #1
   13830:	blt	13c8c <readstat_parse_por+0x1a7c>
   13834:	mov	r6, #0
   13838:	mov	r7, #5
   1383c:	mov	r0, #0
   13840:	add	lr, sp, #1024	; 0x400
   13844:	add	r1, sp, #784	; 0x310
   13848:	mov	r2, #256	; 0x100
   1384c:	str	r0, [sp, #1064]	; 0x428
   13850:	mov	r0, r8
   13854:	add	r3, lr, #40	; 0x28
   13858:	bl	149f0 <maybe_read_string>
   1385c:	ldr	r1, [sp, #1064]	; 0x428
   13860:	mov	r4, r0
   13864:	cmp	r1, #0
   13868:	movwne	r4, #5
   1386c:	cmp	r0, #0
   13870:	movne	r4, r0
   13874:	cmp	r4, #0
   13878:	bne	13bd0 <readstat_parse_por+0x19c0>
   1387c:	ldr	r1, [r8, #656]	; 0x290
   13880:	add	r0, sp, #784	; 0x310
   13884:	bl	4960 <ck_str_hash_lookup@plt>
   13888:	cmp	r0, #0
   1388c:	add	r6, r6, #1
   13890:	ldrne	r1, [r8, #624]	; 0x270
   13894:	strne	r1, [r0, #4]
   13898:	ldrne	r7, [r0]
   1389c:	cmp	r6, r5
   138a0:	blt	1383c <readstat_parse_por+0x162c>
   138a4:	b	13c90 <readstat_parse_por+0x1a80>
   138a8:	movw	r0, #0
   138ac:	mov	r4, #0
   138b0:	add	lr, sp, #1024	; 0x400
   138b4:	movt	r0, #32760	; 0x7ff8
   138b8:	str	r4, [fp, #-1112]	; 0xfffffba8
   138bc:	add	r7, lr, #40	; 0x28
   138c0:	str	r0, [fp, #-1108]	; 0xfffffbac
   138c4:	ldr	r6, [r8, #44]	; 0x2c
   138c8:	ldr	r0, [sl]
   138cc:	cmp	r0, #0
   138d0:	beq	138f4 <readstat_parse_por+0x16e4>
   138d4:	ldr	r1, [sp, #52]	; 0x34
   138d8:	sub	r0, r0, #1
   138dc:	add	r4, r4, #1
   138e0:	ldrb	r5, [r1]
   138e4:	str	r0, [sl]
   138e8:	cmp	r4, #1
   138ec:	blt	138c8 <readstat_parse_por+0x16b8>
   138f0:	b	139a8 <readstat_parse_por+0x1798>
   138f4:	ldr	r3, [r6, #12]
   138f8:	ldr	r2, [r6, #20]
   138fc:	mov	r0, r7
   13900:	mov	r1, #1
   13904:	blx	r3
   13908:	cmn	r0, #1
   1390c:	beq	13c0c <readstat_parse_por+0x19fc>
   13910:	cmp	r0, #0
   13914:	beq	13c4c <readstat_parse_por+0x1a3c>
   13918:	ldrb	r0, [sp, #1064]	; 0x428
   1391c:	cmp	r0, #10
   13920:	beq	13958 <readstat_parse_por+0x1748>
   13924:	cmp	r0, #13
   13928:	bne	1397c <readstat_parse_por+0x176c>
   1392c:	ldr	r3, [r6, #12]
   13930:	ldr	r2, [r6, #20]
   13934:	mov	r0, r7
   13938:	mov	r1, #1
   1393c:	blx	r3
   13940:	add	r0, r0, #1
   13944:	cmp	r0, #2
   13948:	bcc	13c0c <readstat_parse_por+0x19fc>
   1394c:	ldrb	r0, [sp, #1064]	; 0x428
   13950:	cmp	r0, #10
   13954:	bne	13c0c <readstat_parse_por+0x19fc>
   13958:	ldr	r1, [sp, #48]	; 0x30
   1395c:	ldr	r0, [r1]
   13960:	rsb	r0, r0, #80	; 0x50
   13964:	str	r0, [sl]
   13968:	mov	r0, #0
   1396c:	str	r0, [r1]
   13970:	cmp	r4, #1
   13974:	blt	138c8 <readstat_parse_por+0x16b8>
   13978:	b	139a8 <readstat_parse_por+0x1798>
   1397c:	ldr	r1, [sp, #48]	; 0x30
   13980:	ldr	r1, [r1]
   13984:	cmp	r1, #80	; 0x50
   13988:	beq	13c0c <readstat_parse_por+0x19fc>
   1398c:	ldr	r2, [sp, #48]	; 0x30
   13990:	add	r1, r1, #1
   13994:	add	r4, r4, #1
   13998:	mov	r5, r0
   1399c:	str	r1, [r2]
   139a0:	cmp	r4, #1
   139a4:	blt	138c8 <readstat_parse_por+0x16b8>
   139a8:	bne	13bec <readstat_parse_por+0x19dc>
   139ac:	uxtb	r2, r5
   139b0:	mov	r0, r8
   139b4:	mov	r1, r9
   139b8:	bl	14ca4 <read_double_with_peek>
   139bc:	mov	r4, r0
   139c0:	cmp	r0, #0
   139c4:	bne	13bd0 <readstat_parse_por+0x19c0>
   139c8:	sub	lr, fp, #1024	; 0x400
   139cc:	sub	r0, lr, #88	; 0x58
   139d0:	vldr	d8, [r0]
   139d4:	vorr	d0, d8, d8
   139d8:	bl	4c84 <__isnan@plt>
   139dc:	vcmpe.f64	d8, d9
   139e0:	vmrs	APSR_nzcv, fpscr
   139e4:	bgt	13c7c <readstat_parse_por+0x1a6c>
   139e8:	vcmpe.f64	d8, #0.0
   139ec:	vmrs	APSR_nzcv, fpscr
   139f0:	bmi	14098 <readstat_parse_por+0x1e88>
   139f4:	cmp	r0, #0
   139f8:	mov	r4, #5
   139fc:	bne	13bd0 <readstat_parse_por+0x19c0>
   13a00:	vcvt.s32.f64	s0, d8
   13a04:	vmov	r5, s0
   13a08:	cmp	r5, #1
   13a0c:	blt	14068 <readstat_parse_por+0x1e58>
   13a10:	mov	r7, #0
   13a14:	mov	r0, #0
   13a18:	add	r1, sp, #784	; 0x310
   13a1c:	mov	r2, #256	; 0x100
   13a20:	mov	r3, r9
   13a24:	str	r0, [fp, #-1112]	; 0xfffffba8
   13a28:	mov	r0, r8
   13a2c:	bl	149f0 <maybe_read_string>
   13a30:	ldr	r1, [fp, #-1112]	; 0xfffffba8
   13a34:	mov	r4, r0
   13a38:	cmp	r1, #0
   13a3c:	movwne	r4, #5
   13a40:	cmp	r0, #0
   13a44:	movne	r4, r0
   13a48:	cmp	r4, #0
   13a4c:	bne	13bd0 <readstat_parse_por+0x19c0>
   13a50:	ldr	r3, [r8, #4]
   13a54:	cmp	r3, #0
   13a58:	beq	13a74 <readstat_parse_por+0x1864>
   13a5c:	ldr	r2, [r8, #36]	; 0x24
   13a60:	mov	r0, r7
   13a64:	add	r1, sp, #784	; 0x310
   13a68:	blx	r3
   13a6c:	cmp	r0, #0
   13a70:	bne	140c8 <readstat_parse_por+0x1eb8>
   13a74:	add	r7, r7, #1
   13a78:	mov	r4, #0
   13a7c:	cmp	r7, r5
   13a80:	blt	13a14 <readstat_parse_por+0x1804>
   13a84:	b	13bd0 <readstat_parse_por+0x19c0>
   13a88:	mov	r3, #0
   13a8c:	str	r3, [fp, #-1112]	; 0xfffffba8
   13a90:	mov	r3, #280	; 0x118
   13a94:	mla	r0, r0, r3, r1
   13a98:	add	r1, r2, r2, lsl #5
   13a9c:	mov	r2, #33	; 0x21
   13aa0:	mov	r3, r9
   13aa4:	add	r0, r0, r1
   13aa8:	add	r1, r0, #88	; 0x58
   13aac:	mov	r0, r8
   13ab0:	bl	149f0 <maybe_read_string>
   13ab4:	ldr	r1, [fp, #-1112]	; 0xfffffba8
   13ab8:	mov	r4, r0
   13abc:	cmp	r1, #0
   13ac0:	movwne	r4, #5
   13ac4:	cmp	r0, #0
   13ac8:	movne	r4, r0
   13acc:	cmp	r4, #0
   13ad0:	bne	1276c <readstat_parse_por+0x55c>
   13ad4:	ldr	r0, [r7]
   13ad8:	cmp	r0, #2
   13adc:	ble	12828 <readstat_parse_por+0x618>
   13ae0:	b	12738 <readstat_parse_por+0x528>
   13ae4:	mov	r2, #280	; 0x118
   13ae8:	mov	r3, r9
   13aec:	mla	r0, r0, r2, r1
   13af0:	mov	r1, #0
   13af4:	mov	r2, #33	; 0x21
   13af8:	strb	r1, [r0, #88]	; 0x58
   13afc:	str	r1, [fp, #-1112]	; 0xfffffba8
   13b00:	add	r1, r0, #121	; 0x79
   13b04:	b	13bb0 <readstat_parse_por+0x19a0>
   13b08:	mov	r2, #0
   13b0c:	mov	r3, r9
   13b10:	str	r2, [fp, #-1112]	; 0xfffffba8
   13b14:	mov	r2, #280	; 0x118
   13b18:	mla	r5, r0, r2, r1
   13b1c:	mov	r0, r8
   13b20:	mov	r2, #33	; 0x21
   13b24:	add	r1, r5, #88	; 0x58
   13b28:	bl	149f0 <maybe_read_string>
   13b2c:	ldr	r1, [fp, #-1112]	; 0xfffffba8
   13b30:	mov	r4, r0
   13b34:	cmp	r1, #0
   13b38:	movwne	r4, #5
   13b3c:	cmp	r0, #0
   13b40:	movne	r4, r0
   13b44:	cmp	r4, #0
   13b48:	bne	1276c <readstat_parse_por+0x55c>
   13b4c:	mov	r0, #0
   13b50:	strb	r0, [r5, #121]	; 0x79
   13b54:	b	12830 <readstat_parse_por+0x620>
   13b58:	mov	r2, #0
   13b5c:	mov	r3, r9
   13b60:	str	r2, [fp, #-1112]	; 0xfffffba8
   13b64:	mov	r2, #280	; 0x118
   13b68:	mla	r5, r0, r2, r1
   13b6c:	mov	r0, r8
   13b70:	mov	r2, #33	; 0x21
   13b74:	add	r1, r5, #88	; 0x58
   13b78:	bl	149f0 <maybe_read_string>
   13b7c:	ldr	r1, [fp, #-1112]	; 0xfffffba8
   13b80:	mov	r4, r0
   13b84:	cmp	r1, #0
   13b88:	movwne	r4, #5
   13b8c:	cmp	r0, #0
   13b90:	movne	r4, r0
   13b94:	cmp	r4, #0
   13b98:	bne	1276c <readstat_parse_por+0x55c>
   13b9c:	mov	r0, #0
   13ba0:	add	r1, r5, #121	; 0x79
   13ba4:	mov	r2, #33	; 0x21
   13ba8:	mov	r3, r9
   13bac:	str	r0, [fp, #-1112]	; 0xfffffba8
   13bb0:	mov	r0, r8
   13bb4:	bl	149f0 <maybe_read_string>
   13bb8:	mov	r4, r0
   13bbc:	cmp	r0, #0
   13bc0:	bne	13bd0 <readstat_parse_por+0x19c0>
   13bc4:	ldr	r0, [fp, #-1112]	; 0xfffffba8
   13bc8:	cmp	r0, #0
   13bcc:	bne	12738 <readstat_parse_por+0x528>
   13bd0:	cmp	r4, #0
   13bd4:	beq	12830 <readstat_parse_por+0x620>
   13bd8:	b	1276c <readstat_parse_por+0x55c>
   13bdc:	mov	r4, #5
   13be0:	cmp	r4, #0
   13be4:	beq	12830 <readstat_parse_por+0x620>
   13be8:	b	1276c <readstat_parse_por+0x55c>
   13bec:	mov	r4, #5
   13bf0:	cmp	r4, #0
   13bf4:	beq	12830 <readstat_parse_por+0x620>
   13bf8:	b	1276c <readstat_parse_por+0x55c>
   13bfc:	mov	r4, #5
   13c00:	cmp	r4, #0
   13c04:	beq	12830 <readstat_parse_por+0x620>
   13c08:	b	1276c <readstat_parse_por+0x55c>
   13c0c:	mov	r4, #5
   13c10:	cmp	r4, #0
   13c14:	beq	12830 <readstat_parse_por+0x620>
   13c18:	b	1276c <readstat_parse_por+0x55c>
   13c1c:	mov	r4, #5
   13c20:	cmp	r4, #0
   13c24:	beq	12830 <readstat_parse_por+0x620>
   13c28:	b	1276c <readstat_parse_por+0x55c>
   13c2c:	mov	r4, #5
   13c30:	cmp	r4, #0
   13c34:	beq	12830 <readstat_parse_por+0x620>
   13c38:	b	1276c <readstat_parse_por+0x55c>
   13c3c:	mov	r4, #5
   13c40:	cmp	r4, #0
   13c44:	beq	12830 <readstat_parse_por+0x620>
   13c48:	b	1276c <readstat_parse_por+0x55c>
   13c4c:	mov	r4, #5
   13c50:	cmp	r4, #0
   13c54:	beq	12830 <readstat_parse_por+0x620>
   13c58:	b	1276c <readstat_parse_por+0x55c>
   13c5c:	mov	r4, #5
   13c60:	cmp	r4, #0
   13c64:	beq	12830 <readstat_parse_por+0x620>
   13c68:	b	1276c <readstat_parse_por+0x55c>
   13c6c:	mov	r4, #5
   13c70:	cmp	r4, #0
   13c74:	beq	12830 <readstat_parse_por+0x620>
   13c78:	b	1276c <readstat_parse_por+0x55c>
   13c7c:	mov	r4, #5
   13c80:	cmp	r4, #0
   13c84:	beq	12830 <readstat_parse_por+0x620>
   13c88:	b	1276c <readstat_parse_por+0x55c>
   13c8c:	mov	r7, #5
   13c90:	movw	r0, #0
   13c94:	mov	r4, #0
   13c98:	movt	r0, #32760	; 0x7ff8
   13c9c:	str	r4, [sp, #1064]	; 0x428
   13ca0:	str	r0, [sp, #1068]	; 0x42c
   13ca4:	ldr	r6, [r8, #44]	; 0x2c
   13ca8:	ldr	r0, [sl]
   13cac:	cmp	r0, #0
   13cb0:	beq	13cd4 <readstat_parse_por+0x1ac4>
   13cb4:	ldr	r1, [sp, #52]	; 0x34
   13cb8:	sub	r0, r0, #1
   13cbc:	add	r4, r4, #1
   13cc0:	ldrb	r5, [r1]
   13cc4:	str	r0, [sl]
   13cc8:	cmp	r4, #1
   13ccc:	blt	13ca8 <readstat_parse_por+0x1a98>
   13cd0:	b	13d88 <readstat_parse_por+0x1b78>
   13cd4:	ldr	r3, [r6, #12]
   13cd8:	ldr	r2, [r6, #20]
   13cdc:	add	r0, sp, #1040	; 0x410
   13ce0:	mov	r1, #1
   13ce4:	blx	r3
   13ce8:	cmn	r0, #1
   13cec:	beq	140b8 <readstat_parse_por+0x1ea8>
   13cf0:	cmp	r0, #0
   13cf4:	beq	140e8 <readstat_parse_por+0x1ed8>
   13cf8:	ldrb	r0, [sp, #1040]	; 0x410
   13cfc:	cmp	r0, #10
   13d00:	beq	13d38 <readstat_parse_por+0x1b28>
   13d04:	cmp	r0, #13
   13d08:	bne	13d5c <readstat_parse_por+0x1b4c>
   13d0c:	ldr	r3, [r6, #12]
   13d10:	ldr	r2, [r6, #20]
   13d14:	add	r0, sp, #1040	; 0x410
   13d18:	mov	r1, #1
   13d1c:	blx	r3
   13d20:	add	r0, r0, #1
   13d24:	cmp	r0, #2
   13d28:	bcc	140b8 <readstat_parse_por+0x1ea8>
   13d2c:	ldrb	r0, [sp, #1040]	; 0x410
   13d30:	cmp	r0, #10
   13d34:	bne	140b8 <readstat_parse_por+0x1ea8>
   13d38:	ldr	r1, [sp, #48]	; 0x30
   13d3c:	ldr	r0, [r1]
   13d40:	rsb	r0, r0, #80	; 0x50
   13d44:	str	r0, [sl]
   13d48:	mov	r0, #0
   13d4c:	str	r0, [r1]
   13d50:	cmp	r4, #1
   13d54:	blt	13ca8 <readstat_parse_por+0x1a98>
   13d58:	b	13d88 <readstat_parse_por+0x1b78>
   13d5c:	ldr	r1, [sp, #48]	; 0x30
   13d60:	ldr	r1, [r1]
   13d64:	cmp	r1, #80	; 0x50
   13d68:	beq	140b8 <readstat_parse_por+0x1ea8>
   13d6c:	ldr	r2, [sp, #48]	; 0x30
   13d70:	add	r1, r1, #1
   13d74:	add	r4, r4, #1
   13d78:	mov	r5, r0
   13d7c:	str	r1, [r2]
   13d80:	cmp	r4, #1
   13d84:	blt	13ca8 <readstat_parse_por+0x1a98>
   13d88:	bne	140a8 <readstat_parse_por+0x1e98>
   13d8c:	add	lr, sp, #1024	; 0x400
   13d90:	uxtb	r2, r5
   13d94:	mov	r0, r8
   13d98:	add	r1, lr, #40	; 0x28
   13d9c:	bl	14ca4 <read_double_with_peek>
   13da0:	mov	r4, r0
   13da4:	cmp	r0, #0
   13da8:	bne	13bd0 <readstat_parse_por+0x19c0>
   13dac:	add	r0, sp, #1040	; 0x410
   13db0:	vldr	d8, [r0, #24]
   13db4:	vorr	d0, d8, d8
   13db8:	bl	4c84 <__isnan@plt>
   13dbc:	vcmpe.f64	d8, d9
   13dc0:	vmrs	APSR_nzcv, fpscr
   13dc4:	bgt	14560 <readstat_parse_por+0x2350>
   13dc8:	vcmpe.f64	d8, #0.0
   13dcc:	vmrs	APSR_nzcv, fpscr
   13dd0:	bmi	145a0 <readstat_parse_por+0x2390>
   13dd4:	cmp	r0, #0
   13dd8:	mov	r4, #5
   13ddc:	bne	13bd0 <readstat_parse_por+0x19c0>
   13de0:	vcvt.s32.f64	s0, d8
   13de4:	vmov	r0, s0
   13de8:	cmp	r0, #1
   13dec:	str	r0, [sp, #16]
   13df0:	blt	1404c <readstat_parse_por+0x1e3c>
   13df4:	mov	r0, #0
   13df8:	str	r0, [sp, #20]
   13dfc:	cmp	r7, #0
   13e00:	beq	13f60 <readstat_parse_por+0x1d50>
   13e04:	ldr	r4, [r8, #44]	; 0x2c
   13e08:	mov	r6, #0
   13e0c:	ldr	r0, [sl]
   13e10:	cmp	r0, #0
   13e14:	beq	13e38 <readstat_parse_por+0x1c28>
   13e18:	ldr	r1, [sp, #52]	; 0x34
   13e1c:	sub	r0, r0, #1
   13e20:	add	r6, r6, #1
   13e24:	ldrb	r5, [r1]
   13e28:	str	r0, [sl]
   13e2c:	cmp	r6, #1
   13e30:	blt	13e0c <readstat_parse_por+0x1bfc>
   13e34:	b	13ef4 <readstat_parse_por+0x1ce4>
   13e38:	ldr	r3, [r4, #12]
   13e3c:	ldr	r2, [r4, #20]
   13e40:	add	lr, sp, #1024	; 0x400
   13e44:	mov	r1, #1
   13e48:	add	r0, lr, #36	; 0x24
   13e4c:	blx	r3
   13e50:	cmn	r0, #1
   13e54:	beq	14590 <readstat_parse_por+0x2380>
   13e58:	cmp	r0, #0
   13e5c:	beq	145c0 <readstat_parse_por+0x23b0>
   13e60:	ldrb	r0, [sp, #1060]	; 0x424
   13e64:	cmp	r0, #10
   13e68:	beq	13ea4 <readstat_parse_por+0x1c94>
   13e6c:	cmp	r0, #13
   13e70:	bne	13ec8 <readstat_parse_por+0x1cb8>
   13e74:	ldr	r3, [r4, #12]
   13e78:	ldr	r2, [r4, #20]
   13e7c:	add	lr, sp, #1024	; 0x400
   13e80:	mov	r1, #1
   13e84:	add	r0, lr, #36	; 0x24
   13e88:	blx	r3
   13e8c:	add	r0, r0, #1
   13e90:	cmp	r0, #2
   13e94:	bcc	14590 <readstat_parse_por+0x2380>
   13e98:	ldrb	r0, [sp, #1060]	; 0x424
   13e9c:	cmp	r0, #10
   13ea0:	bne	14590 <readstat_parse_por+0x2380>
   13ea4:	ldr	r1, [sp, #48]	; 0x30
   13ea8:	ldr	r0, [r1]
   13eac:	rsb	r0, r0, #80	; 0x50
   13eb0:	str	r0, [sl]
   13eb4:	mov	r0, #0
   13eb8:	str	r0, [r1]
   13ebc:	cmp	r6, #1
   13ec0:	blt	13e0c <readstat_parse_por+0x1bfc>
   13ec4:	b	13ef4 <readstat_parse_por+0x1ce4>
   13ec8:	ldr	r1, [sp, #48]	; 0x30
   13ecc:	ldr	r1, [r1]
   13ed0:	cmp	r1, #80	; 0x50
   13ed4:	beq	14590 <readstat_parse_por+0x2380>
   13ed8:	ldr	r2, [sp, #48]	; 0x30
   13edc:	add	r1, r1, #1
   13ee0:	add	r6, r6, #1
   13ee4:	mov	r5, r0
   13ee8:	str	r1, [r2]
   13eec:	cmp	r6, #1
   13ef0:	blt	13e0c <readstat_parse_por+0x1bfc>
   13ef4:	bne	145d8 <readstat_parse_por+0x23c8>
   13ef8:	uxtb	r2, r5
   13efc:	mov	r0, r8
   13f00:	add	r1, sp, #1040	; 0x410
   13f04:	bl	14ca4 <read_double_with_peek>
   13f08:	cmp	r0, #0
   13f0c:	bne	136a0 <readstat_parse_por+0x1490>
   13f10:	add	lr, sp, #1024	; 0x400
   13f14:	mov	r0, #0
   13f18:	mov	r2, #256	; 0x100
   13f1c:	add	r1, lr, #40	; 0x28
   13f20:	add	lr, sp, #1024	; 0x400
   13f24:	str	r0, [sp, #1060]	; 0x424
   13f28:	mov	r0, r8
   13f2c:	add	r3, lr, #36	; 0x24
   13f30:	bl	149f0 <maybe_read_string>
   13f34:	ldr	r1, [sp, #1060]	; 0x424
   13f38:	mov	r4, r0
   13f3c:	cmp	r1, #0
   13f40:	movwne	r4, #5
   13f44:	cmp	r0, #0
   13f48:	movne	r4, r0
   13f4c:	cmp	r4, #0
   13f50:	bne	13bd0 <readstat_parse_por+0x19c0>
   13f54:	ldr	r2, [sp, #1040]	; 0x410
   13f58:	ldr	r5, [sp, #1044]	; 0x414
   13f5c:	b	13fe8 <readstat_parse_por+0x1dd8>
   13f60:	mov	r0, #0
   13f64:	add	lr, sp, #1024	; 0x400
   13f68:	add	r1, sp, #784	; 0x310
   13f6c:	mov	r2, #256	; 0x100
   13f70:	str	r0, [sp, #1060]	; 0x424
   13f74:	mov	r0, r8
   13f78:	add	r3, lr, #36	; 0x24
   13f7c:	bl	149f0 <maybe_read_string>
   13f80:	ldr	r1, [sp, #1060]	; 0x424
   13f84:	mov	r4, r0
   13f88:	cmp	r1, #0
   13f8c:	movwne	r4, #5
   13f90:	cmp	r0, #0
   13f94:	movne	r4, r0
   13f98:	cmp	r4, #0
   13f9c:	bne	13bd0 <readstat_parse_por+0x19c0>
   13fa0:	add	lr, sp, #1024	; 0x400
   13fa4:	mov	r5, #0
   13fa8:	mov	r0, r8
   13fac:	mov	r2, #256	; 0x100
   13fb0:	add	r1, lr, #40	; 0x28
   13fb4:	add	lr, sp, #1024	; 0x400
   13fb8:	str	r5, [sp, #1060]	; 0x424
   13fbc:	add	r3, lr, #36	; 0x24
   13fc0:	bl	149f0 <maybe_read_string>
   13fc4:	ldr	r1, [sp, #1060]	; 0x424
   13fc8:	mov	r4, r0
   13fcc:	add	r2, sp, #784	; 0x310
   13fd0:	cmp	r1, #0
   13fd4:	movwne	r4, #5
   13fd8:	cmp	r0, #0
   13fdc:	movne	r4, r0
   13fe0:	cmp	r4, #0
   13fe4:	bne	13bd0 <readstat_parse_por+0x19c0>
   13fe8:	ldr	r0, [sp, #24]
   13fec:	ldr	r1, [r8, #20]
   13ff0:	bfc	r0, #0, #10
   13ff4:	cmp	r1, #0
   13ff8:	str	r0, [sp, #24]
   13ffc:	beq	14034 <readstat_parse_por+0x1e24>
   14000:	ldr	r3, [sp, #24]
   14004:	ldr	r0, [r8, #36]	; 0x24
   14008:	add	lr, sp, #1024	; 0x400
   1400c:	str	r7, [sp]
   14010:	str	r3, [sp, #4]
   14014:	add	r3, lr, #40	; 0x28
   14018:	str	r0, [sp, #12]
   1401c:	mov	r0, r9
   14020:	str	r3, [sp, #8]
   14024:	mov	r3, r5
   14028:	blx	r1
   1402c:	cmp	r0, #0
   14030:	bne	145c8 <readstat_parse_por+0x23b8>
   14034:	ldr	r1, [sp, #20]
   14038:	ldr	r0, [sp, #16]
   1403c:	add	r1, r1, #1
   14040:	cmp	r1, r0
   14044:	str	r1, [sp, #20]
   14048:	blt	13dfc <readstat_parse_por+0x1bec>
   1404c:	ldr	r0, [r8, #624]	; 0x270
   14050:	mov	r4, #0
   14054:	add	r0, r0, #1
   14058:	str	r0, [r8, #624]	; 0x270
   1405c:	cmp	r4, #0
   14060:	beq	12830 <readstat_parse_por+0x620>
   14064:	b	1276c <readstat_parse_por+0x55c>
   14068:	mov	r4, #0
   1406c:	cmp	r4, #0
   14070:	beq	12830 <readstat_parse_por+0x620>
   14074:	b	1276c <readstat_parse_por+0x55c>
   14078:	mov	r4, #5
   1407c:	cmp	r4, #0
   14080:	beq	12830 <readstat_parse_por+0x620>
   14084:	b	1276c <readstat_parse_por+0x55c>
   14088:	mov	r4, #5
   1408c:	cmp	r4, #0
   14090:	beq	12830 <readstat_parse_por+0x620>
   14094:	b	1276c <readstat_parse_por+0x55c>
   14098:	mov	r4, #5
   1409c:	cmp	r4, #0
   140a0:	beq	12830 <readstat_parse_por+0x620>
   140a4:	b	1276c <readstat_parse_por+0x55c>
   140a8:	mov	r4, #5
   140ac:	cmp	r4, #0
   140b0:	beq	12830 <readstat_parse_por+0x620>
   140b4:	b	1276c <readstat_parse_por+0x55c>
   140b8:	mov	r4, #5
   140bc:	cmp	r4, #0
   140c0:	beq	12830 <readstat_parse_por+0x620>
   140c4:	b	1276c <readstat_parse_por+0x55c>
   140c8:	mov	r4, #4
   140cc:	cmp	r4, #0
   140d0:	beq	12830 <readstat_parse_por+0x620>
   140d4:	b	1276c <readstat_parse_por+0x55c>
   140d8:	mov	r4, #5
   140dc:	cmp	r4, #0
   140e0:	beq	12830 <readstat_parse_por+0x620>
   140e4:	b	1276c <readstat_parse_por+0x55c>
   140e8:	mov	r4, #5
   140ec:	cmp	r4, #0
   140f0:	beq	12830 <readstat_parse_por+0x620>
   140f4:	b	1276c <readstat_parse_por+0x55c>
   140f8:	add	lr, sp, #1024	; 0x400
   140fc:	add	r0, lr, #40	; 0x28
   14100:	ldr	r0, [r0, r7, lsl #2]
   14104:	str	r0, [sp, #24]
   14108:	movw	r0, #0
   1410c:	mov	r6, #0
   14110:	movt	r0, #32760	; 0x7ff8
   14114:	str	r0, [fp, #-1108]	; 0xfffffbac
   14118:	mov	r0, #0
   1411c:	str	r0, [fp, #-1112]	; 0xfffffba8
   14120:	ldr	r4, [r8, #44]	; 0x2c
   14124:	ldr	r0, [sl]
   14128:	cmp	r0, #0
   1412c:	beq	14150 <readstat_parse_por+0x1f40>
   14130:	ldr	r1, [sp, #52]	; 0x34
   14134:	sub	r0, r0, #1
   14138:	add	r6, r6, #1
   1413c:	ldrb	r5, [r1]
   14140:	str	r0, [sl]
   14144:	cmp	r6, #1
   14148:	blt	14124 <readstat_parse_por+0x1f14>
   1414c:	b	14204 <readstat_parse_por+0x1ff4>
   14150:	ldr	r3, [r4, #12]
   14154:	ldr	r2, [r4, #20]
   14158:	add	r0, sp, #784	; 0x310
   1415c:	mov	r1, #1
   14160:	blx	r3
   14164:	cmn	r0, #1
   14168:	beq	14530 <readstat_parse_por+0x2320>
   1416c:	cmp	r0, #0
   14170:	beq	14550 <readstat_parse_por+0x2340>
   14174:	ldrb	r0, [sp, #784]	; 0x310
   14178:	cmp	r0, #10
   1417c:	beq	141b4 <readstat_parse_por+0x1fa4>
   14180:	cmp	r0, #13
   14184:	bne	141d8 <readstat_parse_por+0x1fc8>
   14188:	ldr	r3, [r4, #12]
   1418c:	ldr	r2, [r4, #20]
   14190:	add	r0, sp, #784	; 0x310
   14194:	mov	r1, #1
   14198:	blx	r3
   1419c:	add	r0, r0, #1
   141a0:	cmp	r0, #2
   141a4:	bcc	14530 <readstat_parse_por+0x2320>
   141a8:	ldrb	r0, [sp, #784]	; 0x310
   141ac:	cmp	r0, #10
   141b0:	bne	14530 <readstat_parse_por+0x2320>
   141b4:	ldr	r1, [sp, #48]	; 0x30
   141b8:	ldr	r0, [r1]
   141bc:	rsb	r0, r0, #80	; 0x50
   141c0:	str	r0, [sl]
   141c4:	mov	r0, #0
   141c8:	str	r0, [r1]
   141cc:	cmp	r6, #1
   141d0:	blt	14124 <readstat_parse_por+0x1f14>
   141d4:	b	14204 <readstat_parse_por+0x1ff4>
   141d8:	ldr	r1, [sp, #48]	; 0x30
   141dc:	ldr	r1, [r1]
   141e0:	cmp	r1, #80	; 0x50
   141e4:	beq	14530 <readstat_parse_por+0x2320>
   141e8:	ldr	r2, [sp, #48]	; 0x30
   141ec:	add	r1, r1, #1
   141f0:	add	r6, r6, #1
   141f4:	mov	r5, r0
   141f8:	str	r1, [r2]
   141fc:	cmp	r6, #1
   14200:	blt	14124 <readstat_parse_por+0x1f14>
   14204:	mov	r4, #5
   14208:	bne	13bd0 <readstat_parse_por+0x19c0>
   1420c:	uxtb	r2, r5
   14210:	mov	r0, r8
   14214:	mov	r1, r9
   14218:	bl	14ca4 <read_double_with_peek>
   1421c:	cmp	r0, #0
   14220:	bne	136a0 <readstat_parse_por+0x1490>
   14224:	sub	lr, fp, #1024	; 0x400
   14228:	sub	r0, lr, #88	; 0x58
   1422c:	vldr	d8, [r0]
   14230:	vorr	d0, d8, d8
   14234:	bl	4c84 <__isnan@plt>
   14238:	vcmpe.f64	d8, d11
   1423c:	vmrs	APSR_nzcv, fpscr
   14240:	bgt	13bd0 <readstat_parse_por+0x19c0>
   14244:	vcmpe.f64	d8, #0.0
   14248:	vmrs	APSR_nzcv, fpscr
   1424c:	bmi	13bd0 <readstat_parse_por+0x19c0>
   14250:	cmp	r0, #0
   14254:	bne	13bd0 <readstat_parse_por+0x19c0>
   14258:	vcvt.s32.f64	s0, d8
   1425c:	ldr	r0, [sp, #24]
   14260:	mov	r4, #0
   14264:	vstr	s0, [r0]
   14268:	movw	r0, #0
   1426c:	str	r4, [fp, #-1112]	; 0xfffffba8
   14270:	movt	r0, #32760	; 0x7ff8
   14274:	str	r0, [fp, #-1108]	; 0xfffffbac
   14278:	ldr	r6, [r8, #44]	; 0x2c
   1427c:	ldr	r0, [sl]
   14280:	cmp	r0, #0
   14284:	beq	142a8 <readstat_parse_por+0x2098>
   14288:	ldr	r1, [sp, #52]	; 0x34
   1428c:	sub	r0, r0, #1
   14290:	add	r4, r4, #1
   14294:	ldrb	r5, [r1]
   14298:	str	r0, [sl]
   1429c:	cmp	r4, #1
   142a0:	blt	1427c <readstat_parse_por+0x206c>
   142a4:	b	1435c <readstat_parse_por+0x214c>
   142a8:	ldr	r3, [r6, #12]
   142ac:	ldr	r2, [r6, #20]
   142b0:	add	r0, sp, #784	; 0x310
   142b4:	mov	r1, #1
   142b8:	blx	r3
   142bc:	cmn	r0, #1
   142c0:	beq	14540 <readstat_parse_por+0x2330>
   142c4:	cmp	r0, #0
   142c8:	beq	14580 <readstat_parse_por+0x2370>
   142cc:	ldrb	r0, [sp, #784]	; 0x310
   142d0:	cmp	r0, #10
   142d4:	beq	1430c <readstat_parse_por+0x20fc>
   142d8:	cmp	r0, #13
   142dc:	bne	14330 <readstat_parse_por+0x2120>
   142e0:	ldr	r3, [r6, #12]
   142e4:	ldr	r2, [r6, #20]
   142e8:	add	r0, sp, #784	; 0x310
   142ec:	mov	r1, #1
   142f0:	blx	r3
   142f4:	add	r0, r0, #1
   142f8:	cmp	r0, #2
   142fc:	bcc	14540 <readstat_parse_por+0x2330>
   14300:	ldrb	r0, [sp, #784]	; 0x310
   14304:	cmp	r0, #10
   14308:	bne	14540 <readstat_parse_por+0x2330>
   1430c:	ldr	r1, [sp, #48]	; 0x30
   14310:	ldr	r0, [r1]
   14314:	rsb	r0, r0, #80	; 0x50
   14318:	str	r0, [sl]
   1431c:	mov	r0, #0
   14320:	str	r0, [r1]
   14324:	cmp	r4, #1
   14328:	blt	1427c <readstat_parse_por+0x206c>
   1432c:	b	1435c <readstat_parse_por+0x214c>
   14330:	ldr	r1, [sp, #48]	; 0x30
   14334:	ldr	r1, [r1]
   14338:	cmp	r1, #80	; 0x50
   1433c:	beq	14540 <readstat_parse_por+0x2330>
   14340:	ldr	r2, [sp, #48]	; 0x30
   14344:	add	r1, r1, #1
   14348:	add	r4, r4, #1
   1434c:	mov	r5, r0
   14350:	str	r1, [r2]
   14354:	cmp	r4, #1
   14358:	blt	1427c <readstat_parse_por+0x206c>
   1435c:	mov	r4, #5
   14360:	bne	13bd0 <readstat_parse_por+0x19c0>
   14364:	uxtb	r2, r5
   14368:	mov	r0, r8
   1436c:	mov	r1, r9
   14370:	bl	14ca4 <read_double_with_peek>
   14374:	cmp	r0, #0
   14378:	bne	136a0 <readstat_parse_por+0x1490>
   1437c:	sub	lr, fp, #1024	; 0x400
   14380:	sub	r0, lr, #88	; 0x58
   14384:	vldr	d8, [r0]
   14388:	vorr	d0, d8, d8
   1438c:	bl	4c84 <__isnan@plt>
   14390:	vcmpe.f64	d8, d12
   14394:	vmrs	APSR_nzcv, fpscr
   14398:	bgt	13bd0 <readstat_parse_por+0x19c0>
   1439c:	vcmpe.f64	d8, #0.0
   143a0:	vmrs	APSR_nzcv, fpscr
   143a4:	bmi	13bd0 <readstat_parse_por+0x19c0>
   143a8:	cmp	r0, #0
   143ac:	bne	13bd0 <readstat_parse_por+0x19c0>
   143b0:	vcvt.s32.f64	s0, d8
   143b4:	ldr	r0, [sp, #24]
   143b8:	mov	r4, #0
   143bc:	vstr	s0, [r0, #4]
   143c0:	movw	r0, #0
   143c4:	str	r4, [fp, #-1112]	; 0xfffffba8
   143c8:	movt	r0, #32760	; 0x7ff8
   143cc:	str	r0, [fp, #-1108]	; 0xfffffbac
   143d0:	ldr	r6, [r8, #44]	; 0x2c
   143d4:	ldr	r0, [sl]
   143d8:	cmp	r0, #0
   143dc:	beq	14400 <readstat_parse_por+0x21f0>
   143e0:	ldr	r1, [sp, #52]	; 0x34
   143e4:	sub	r0, r0, #1
   143e8:	add	r4, r4, #1
   143ec:	ldrb	r5, [r1]
   143f0:	str	r0, [sl]
   143f4:	cmp	r4, #1
   143f8:	blt	143d4 <readstat_parse_por+0x21c4>
   143fc:	b	144b4 <readstat_parse_por+0x22a4>
   14400:	ldr	r3, [r6, #12]
   14404:	ldr	r2, [r6, #20]
   14408:	add	r0, sp, #784	; 0x310
   1440c:	mov	r1, #1
   14410:	blx	r3
   14414:	cmn	r0, #1
   14418:	beq	14570 <readstat_parse_por+0x2360>
   1441c:	cmp	r0, #0
   14420:	beq	145b0 <readstat_parse_por+0x23a0>
   14424:	ldrb	r0, [sp, #784]	; 0x310
   14428:	cmp	r0, #10
   1442c:	beq	14464 <readstat_parse_por+0x2254>
   14430:	cmp	r0, #13
   14434:	bne	14488 <readstat_parse_por+0x2278>
   14438:	ldr	r3, [r6, #12]
   1443c:	ldr	r2, [r6, #20]
   14440:	add	r0, sp, #784	; 0x310
   14444:	mov	r1, #1
   14448:	blx	r3
   1444c:	add	r0, r0, #1
   14450:	cmp	r0, #2
   14454:	bcc	14570 <readstat_parse_por+0x2360>
   14458:	ldrb	r0, [sp, #784]	; 0x310
   1445c:	cmp	r0, #10
   14460:	bne	14570 <readstat_parse_por+0x2360>
   14464:	ldr	r1, [sp, #48]	; 0x30
   14468:	ldr	r0, [r1]
   1446c:	rsb	r0, r0, #80	; 0x50
   14470:	str	r0, [sl]
   14474:	mov	r0, #0
   14478:	str	r0, [r1]
   1447c:	cmp	r4, #1
   14480:	blt	143d4 <readstat_parse_por+0x21c4>
   14484:	b	144b4 <readstat_parse_por+0x22a4>
   14488:	ldr	r1, [sp, #48]	; 0x30
   1448c:	ldr	r1, [r1]
   14490:	cmp	r1, #80	; 0x50
   14494:	beq	14570 <readstat_parse_por+0x2360>
   14498:	ldr	r2, [sp, #48]	; 0x30
   1449c:	add	r1, r1, #1
   144a0:	add	r4, r4, #1
   144a4:	mov	r5, r0
   144a8:	str	r1, [r2]
   144ac:	cmp	r4, #1
   144b0:	blt	143d4 <readstat_parse_por+0x21c4>
   144b4:	mov	r4, #5
   144b8:	bne	13bd0 <readstat_parse_por+0x19c0>
   144bc:	uxtb	r2, r5
   144c0:	mov	r0, r8
   144c4:	mov	r1, r9
   144c8:	bl	14ca4 <read_double_with_peek>
   144cc:	cmp	r0, #0
   144d0:	bne	136a0 <readstat_parse_por+0x1490>
   144d4:	sub	lr, fp, #1024	; 0x400
   144d8:	sub	r0, lr, #88	; 0x58
   144dc:	vldr	d8, [r0]
   144e0:	vorr	d0, d8, d8
   144e4:	bl	4c84 <__isnan@plt>
   144e8:	vcmpe.f64	d8, d10
   144ec:	vmrs	APSR_nzcv, fpscr
   144f0:	bgt	13bd0 <readstat_parse_por+0x19c0>
   144f4:	vcmpe.f64	d8, #0.0
   144f8:	vmrs	APSR_nzcv, fpscr
   144fc:	bmi	13bd0 <readstat_parse_por+0x19c0>
   14500:	cmp	r0, #0
   14504:	bne	13bd0 <readstat_parse_por+0x19c0>
   14508:	vcvt.s32.f64	s0, d8
   1450c:	ldr	r0, [sp, #24]
   14510:	add	r7, r7, #1
   14514:	cmp	r7, #1
   14518:	vstr	s0, [r0, #8]
   1451c:	bls	140f8 <readstat_parse_por+0x1ee8>
   14520:	mov	r4, #0
   14524:	cmp	r4, #0
   14528:	beq	12830 <readstat_parse_por+0x620>
   1452c:	b	1276c <readstat_parse_por+0x55c>
   14530:	mov	r4, #5
   14534:	cmp	r4, #0
   14538:	beq	12830 <readstat_parse_por+0x620>
   1453c:	b	1276c <readstat_parse_por+0x55c>
   14540:	mov	r4, #5
   14544:	cmp	r4, #0
   14548:	beq	12830 <readstat_parse_por+0x620>
   1454c:	b	1276c <readstat_parse_por+0x55c>
   14550:	mov	r4, #5
   14554:	cmp	r4, #0
   14558:	beq	12830 <readstat_parse_por+0x620>
   1455c:	b	1276c <readstat_parse_por+0x55c>
   14560:	mov	r4, #5
   14564:	cmp	r4, #0
   14568:	beq	12830 <readstat_parse_por+0x620>
   1456c:	b	1276c <readstat_parse_por+0x55c>
   14570:	mov	r4, #5
   14574:	cmp	r4, #0
   14578:	beq	12830 <readstat_parse_por+0x620>
   1457c:	b	1276c <readstat_parse_por+0x55c>
   14580:	mov	r4, #5
   14584:	cmp	r4, #0
   14588:	beq	12830 <readstat_parse_por+0x620>
   1458c:	b	1276c <readstat_parse_por+0x55c>
   14590:	mov	r4, #5
   14594:	cmp	r4, #0
   14598:	beq	12830 <readstat_parse_por+0x620>
   1459c:	b	1276c <readstat_parse_por+0x55c>
   145a0:	mov	r4, #5
   145a4:	cmp	r4, #0
   145a8:	beq	12830 <readstat_parse_por+0x620>
   145ac:	b	1276c <readstat_parse_por+0x55c>
   145b0:	mov	r4, #5
   145b4:	cmp	r4, #0
   145b8:	beq	12830 <readstat_parse_por+0x620>
   145bc:	b	1276c <readstat_parse_por+0x55c>
   145c0:	mov	r4, #5
   145c4:	b	13bd0 <readstat_parse_por+0x19c0>
   145c8:	mov	r4, #4
   145cc:	cmp	r4, #0
   145d0:	beq	12830 <readstat_parse_por+0x620>
   145d4:	b	1276c <readstat_parse_por+0x55c>
   145d8:	mov	r4, #5
   145dc:	cmp	r4, #0
   145e0:	beq	12830 <readstat_parse_por+0x620>
   145e4:	b	1276c <readstat_parse_por+0x55c>
   145e8:	ldr	r0, [r8, #632]	; 0x278
   145ec:	ldr	r1, [r8, #636]	; 0x27c
   145f0:	mov	r4, #8
   145f4:	sub	r0, r0, #1
   145f8:	cmp	r1, r0
   145fc:	bne	1276c <readstat_parse_por+0x55c>
   14600:	mov	r0, r8
   14604:	bl	4e70 <handle_variables@plt>
   14608:	mov	r4, r0
   1460c:	cmp	r0, #0
   14610:	bne	1276c <readstat_parse_por+0x55c>
   14614:	ldr	r0, [r8, #16]
   14618:	cmp	r0, #0
   1461c:	beq	14944 <readstat_parse_por+0x2734>
   14620:	ldr	r0, [r8, #632]	; 0x278
   14624:	cmp	r0, #0
   14628:	beq	14944 <readstat_parse_por+0x2734>
   1462c:	add	r1, r8, #628	; 0x274
   14630:	str	r1, [sp, #32]
   14634:	add	r1, sp, #1040	; 0x410
   14638:	add	r1, r1, #8
   1463c:	str	r1, [sp, #28]
   14640:	add	r1, r8, #644	; 0x284
   14644:	str	r1, [sp, #36]	; 0x24
   14648:	b	14654 <readstat_parse_por+0x2444>
   1464c:	.word	0x00016353
   14650:	ldr	r0, [r8, #632]	; 0x278
   14654:	mov	r1, #0
   14658:	cmp	r0, #1
   1465c:	str	r1, [sp, #1060]	; 0x424
   14660:	blt	148d8 <readstat_parse_por+0x26c8>
   14664:	mov	r4, #0
   14668:	ldr	r3, [r8, #652]	; 0x28c
   1466c:	mov	r2, #0
   14670:	mov	r0, #280	; 0x118
   14674:	str	r2, [sp, #1044]	; 0x414
   14678:	str	r2, [sp, #1040]	; 0x410
   1467c:	mul	r0, r4, r0
   14680:	ldr	r1, [r3, r0]
   14684:	strb	r2, [sp, #1052]	; 0x41c
   14688:	str	r3, [sp, #40]	; 0x28
   1468c:	str	r1, [sp, #1048]	; 0x418
   14690:	ldrb	r1, [sp, #1053]	; 0x41d
   14694:	and	r1, r1, #252	; 0xfc
   14698:	strb	r1, [sp, #1053]	; 0x41d
   1469c:	mov	r1, r3
   146a0:	ldr	r0, [r3, r0]
   146a4:	cmp	r0, #5
   146a8:	beq	14718 <readstat_parse_por+0x2508>
   146ac:	cmp	r0, #0
   146b0:	bne	14868 <readstat_parse_por+0x2658>
   146b4:	add	lr, sp, #1024	; 0x400
   146b8:	mov	r0, r8
   146bc:	add	r1, sp, #784	; 0x310
   146c0:	mov	r2, #256	; 0x100
   146c4:	add	r3, lr, #36	; 0x24
   146c8:	bl	149f0 <maybe_read_string>
   146cc:	cmp	r0, #0
   146d0:	bne	149b4 <readstat_parse_por+0x27a4>
   146d4:	ldr	r0, [sp, #1060]	; 0x424
   146d8:	cmp	r0, #0
   146dc:	bne	149d8 <readstat_parse_por+0x27c8>
   146e0:	add	r5, sp, #784	; 0x310
   146e4:	mov	r0, r5
   146e8:	bl	4b58 <strlen@plt>
   146ec:	mov	r3, r0
   146f0:	ldr	r0, [r8, #612]	; 0x264
   146f4:	movw	r1, #1025	; 0x401
   146f8:	mov	r2, r5
   146fc:	str	r0, [sp]
   14700:	mov	r0, r9
   14704:	bl	4b94 <readstat_convert@plt>
   14708:	cmp	r0, #0
   1470c:	bne	1494c <readstat_parse_por+0x273c>
   14710:	str	r9, [sp, #1040]	; 0x410
   14714:	b	14868 <readstat_parse_por+0x2658>
   14718:	ldr	r7, [r8, #44]	; 0x2c
   1471c:	mov	r6, #0
   14720:	ldr	r0, [sl]
   14724:	cmp	r0, #0
   14728:	beq	1474c <readstat_parse_por+0x253c>
   1472c:	ldr	r1, [sp, #52]	; 0x34
   14730:	sub	r0, r0, #1
   14734:	add	r6, r6, #1
   14738:	ldrb	r5, [r1]
   1473c:	str	r0, [sl]
   14740:	cmp	r6, #1
   14744:	blt	14720 <readstat_parse_por+0x2510>
   14748:	b	14808 <readstat_parse_por+0x25f8>
   1474c:	ldr	r3, [r7, #12]
   14750:	ldr	r2, [r7, #20]
   14754:	add	lr, sp, #1024	; 0x400
   14758:	mov	r1, #1
   1475c:	add	r0, lr, #40	; 0x28
   14760:	blx	r3
   14764:	cmn	r0, #1
   14768:	beq	14954 <readstat_parse_por+0x2744>
   1476c:	cmp	r0, #0
   14770:	beq	14954 <readstat_parse_por+0x2744>
   14774:	ldrb	r0, [sp, #1064]	; 0x428
   14778:	cmp	r0, #10
   1477c:	beq	147b8 <readstat_parse_por+0x25a8>
   14780:	cmp	r0, #13
   14784:	bne	147dc <readstat_parse_por+0x25cc>
   14788:	ldr	r3, [r7, #12]
   1478c:	ldr	r2, [r7, #20]
   14790:	add	lr, sp, #1024	; 0x400
   14794:	mov	r1, #1
   14798:	add	r0, lr, #40	; 0x28
   1479c:	blx	r3
   147a0:	add	r0, r0, #1
   147a4:	cmp	r0, #2
   147a8:	bcc	14954 <readstat_parse_por+0x2744>
   147ac:	ldrb	r0, [sp, #1064]	; 0x428
   147b0:	cmp	r0, #10
   147b4:	bne	14954 <readstat_parse_por+0x2744>
   147b8:	ldr	r1, [sp, #48]	; 0x30
   147bc:	ldr	r0, [r1]
   147c0:	rsb	r0, r0, #80	; 0x50
   147c4:	str	r0, [sl]
   147c8:	mov	r0, #0
   147cc:	str	r0, [r1]
   147d0:	cmp	r6, #1
   147d4:	blt	14720 <readstat_parse_por+0x2510>
   147d8:	b	14808 <readstat_parse_por+0x25f8>
   147dc:	ldr	r1, [sp, #48]	; 0x30
   147e0:	ldr	r1, [r1]
   147e4:	cmp	r1, #80	; 0x50
   147e8:	beq	14954 <readstat_parse_por+0x2744>
   147ec:	ldr	r2, [sp, #48]	; 0x30
   147f0:	add	r1, r1, #1
   147f4:	add	r6, r6, #1
   147f8:	mov	r5, r0
   147fc:	str	r1, [r2]
   14800:	cmp	r6, #1
   14804:	blt	14720 <readstat_parse_por+0x2510>
   14808:	bne	14954 <readstat_parse_por+0x2744>
   1480c:	uxtb	r2, r5
   14810:	add	r0, r8, r2, lsl #1
   14814:	ldrh	r0, [r0, #94]	; 0x5e
   14818:	cmp	r0, #90	; 0x5a
   1481c:	beq	149bc <readstat_parse_por+0x27ac>
   14820:	mov	r0, #0
   14824:	add	r1, sp, #1040	; 0x410
   14828:	str	r0, [sp, #1060]	; 0x424
   1482c:	mov	r0, r8
   14830:	bl	14ca4 <read_double_with_peek>
   14834:	cmp	r0, #0
   14838:	bne	149b4 <readstat_parse_por+0x27a4>
   1483c:	ldr	r0, [sp, #1060]	; 0x424
   14840:	cmp	r0, #0
   14844:	bne	149d8 <readstat_parse_por+0x27c8>
   14848:	add	r0, sp, #1040	; 0x410
   1484c:	vldr	d0, [r0]
   14850:	bl	4c84 <__isnan@plt>
   14854:	ldrb	r1, [sp, #1053]	; 0x41d
   14858:	and	r0, r0, #1
   1485c:	and	r1, r1, #254	; 0xfe
   14860:	orr	r0, r1, r0
   14864:	strb	r0, [sp, #1053]	; 0x41d
   14868:	ldr	r7, [r8, #16]
   1486c:	cmp	r7, #0
   14870:	beq	148c8 <readstat_parse_por+0x26b8>
   14874:	ldr	r0, [r8, #648]	; 0x288
   14878:	ldr	r1, [r0, r4, lsl #2]
   1487c:	ldr	r0, [r1, #2144]	; 0x860
   14880:	cmp	r0, #0
   14884:	bne	148c8 <readstat_parse_por+0x26b8>
   14888:	ldr	r0, [sp, #36]	; 0x24
   1488c:	ldr	r0, [r0]
   14890:	cmp	r0, #0
   14894:	bne	148c8 <readstat_parse_por+0x26b8>
   14898:	ldr	r2, [sp, #28]
   1489c:	ldr	r0, [r8, #628]	; 0x274
   148a0:	ldr	r6, [r2]
   148a4:	ldr	r5, [r2, #4]
   148a8:	ldr	ip, [r8, #36]	; 0x24
   148ac:	ldr	r2, [sp, #1040]	; 0x410
   148b0:	ldr	r3, [sp, #1044]	; 0x414
   148b4:	str	r6, [sp]
   148b8:	stmib	sp, {r5, ip}
   148bc:	blx	r7
   148c0:	cmp	r0, #0
   148c4:	bne	149e4 <readstat_parse_por+0x27d4>
   148c8:	ldr	r0, [r8, #632]	; 0x278
   148cc:	add	r4, r4, #1
   148d0:	cmp	r4, r0
   148d4:	blt	14668 <readstat_parse_por+0x2458>
   148d8:	ldr	r0, [sp, #36]	; 0x24
   148dc:	ldr	r0, [r0]
   148e0:	cmp	r0, #0
   148e4:	beq	148f4 <readstat_parse_por+0x26e4>
   148e8:	ldr	r1, [sp, #36]	; 0x24
   148ec:	sub	r0, r0, #1
   148f0:	b	14900 <readstat_parse_por+0x26f0>
   148f4:	ldr	r1, [sp, #32]
   148f8:	ldr	r0, [r1]
   148fc:	add	r0, r0, #1
   14900:	str	r0, [r1]
   14904:	ldr	r3, [r8, #44]	; 0x2c
   14908:	ldr	r1, [r8, #28]
   1490c:	ldr	r0, [r8, #32]
   14910:	ldr	r2, [r8, #36]	; 0x24
   14914:	ldr	r7, [r3, #16]
   14918:	ldr	r3, [r3, #20]
   1491c:	blx	r7
   14920:	cmp	r0, #0
   14924:	bne	1494c <readstat_parse_por+0x273c>
   14928:	ldr	r0, [r8, #640]	; 0x280
   1492c:	cmp	r0, #1
   14930:	blt	14650 <readstat_parse_por+0x2440>
   14934:	ldr	r1, [sp, #32]
   14938:	ldr	r1, [r1]
   1493c:	cmp	r1, r0
   14940:	bne	14650 <readstat_parse_por+0x2440>
   14944:	mov	r4, #0
   14948:	b	1276c <readstat_parse_por+0x55c>
   1494c:	mov	r4, r0
   14950:	b	1276c <readstat_parse_por+0x55c>
   14954:	mov	r7, #5
   14958:	ldr	r0, [r8, #24]
   1495c:	cmp	r0, #0
   14960:	beq	149ac <readstat_parse_por+0x279c>
   14964:	ldr	r0, [r8, #628]	; 0x274
   14968:	ldr	r1, [sp, #40]	; 0x28
   1496c:	add	lr, sp, #1024	; 0x400
   14970:	add	r5, lr, #40	; 0x28
   14974:	add	r0, r0, #1
   14978:	str	r0, [sp]
   1497c:	mov	r0, #280	; 0x118
   14980:	ldr	r2, [pc, #100]	; 149ec <readstat_parse_por+0x27dc>
   14984:	mla	r0, r4, r0, r1
   14988:	mov	r1, #1024	; 0x400
   1498c:	add	r3, r0, #187	; 0xbb
   14990:	mov	r0, r5
   14994:	add	r2, pc, r2
   14998:	bl	4bdc <snprintf@plt>
   1499c:	ldr	r2, [r8, #24]
   149a0:	ldr	r1, [r8, #36]	; 0x24
   149a4:	mov	r0, r5
   149a8:	blx	r2
   149ac:	mov	r4, r7
   149b0:	b	1276c <readstat_parse_por+0x55c>
   149b4:	mov	r7, r0
   149b8:	b	14958 <readstat_parse_por+0x2748>
   149bc:	movw	r0, #0
   149c0:	movt	r0, #32760	; 0x7ff8
   149c4:	str	r0, [sp, #1044]	; 0x414
   149c8:	mov	r0, #0
   149cc:	str	r0, [sp, #1040]	; 0x410
   149d0:	mov	r0, #1
   149d4:	str	r0, [sp, #1060]	; 0x424
   149d8:	cmp	r4, #0
   149dc:	movwne	r4, #5
   149e0:	b	1276c <readstat_parse_por+0x55c>
   149e4:	mov	r4, #4
   149e8:	b	1276c <readstat_parse_por+0x55c>
   149ec:	.word	0x0001513b

000149f0 <maybe_read_string>:
   149f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149f4:	add	fp, sp, #28
   149f8:	sub	sp, sp, #4
   149fc:	vpush	{d8}
   14a00:	sub	sp, sp, #1056	; 0x420
   14a04:	ldr	r7, [r0, #44]	; 0x2c
   14a08:	mov	r9, r3
   14a0c:	mov	r4, r0
   14a10:	mov	r5, #0
   14a14:	add	r6, sp, #16
   14a18:	mov	r8, #0
   14a1c:	str	r2, [sp, #8]
   14a20:	str	r1, [sp, #12]
   14a24:	ldr	r0, [r4, #52]	; 0x34
   14a28:	cmp	r0, #0
   14a2c:	beq	14a4c <maybe_read_string+0x5c>
   14a30:	sub	r0, r0, #1
   14a34:	add	r8, r8, #1
   14a38:	str	r0, [r4, #52]	; 0x34
   14a3c:	ldrb	sl, [r4, #48]	; 0x30
   14a40:	cmp	r8, #1
   14a44:	blt	14a24 <maybe_read_string+0x34>
   14a48:	b	14aec <maybe_read_string+0xfc>
   14a4c:	ldr	r3, [r7, #12]
   14a50:	ldr	r2, [r7, #20]
   14a54:	mov	r0, r6
   14a58:	mov	r1, #1
   14a5c:	blx	r3
   14a60:	cmn	r0, #1
   14a64:	cmpne	r0, #0
   14a68:	beq	14b4c <maybe_read_string+0x15c>
   14a6c:	ldrb	r0, [sp, #16]
   14a70:	cmp	r0, #10
   14a74:	beq	14aac <maybe_read_string+0xbc>
   14a78:	cmp	r0, #13
   14a7c:	bne	14ac8 <maybe_read_string+0xd8>
   14a80:	ldr	r3, [r7, #12]
   14a84:	ldr	r2, [r7, #20]
   14a88:	mov	r0, r6
   14a8c:	mov	r1, #1
   14a90:	blx	r3
   14a94:	add	r0, r0, #1
   14a98:	cmp	r0, #2
   14a9c:	bcc	14b4c <maybe_read_string+0x15c>
   14aa0:	ldrb	r0, [sp, #16]
   14aa4:	cmp	r0, #10
   14aa8:	bne	14b4c <maybe_read_string+0x15c>
   14aac:	ldr	r0, [r4, #40]	; 0x28
   14ab0:	str	r5, [r4, #40]	; 0x28
   14ab4:	rsb	r0, r0, #80	; 0x50
   14ab8:	str	r0, [r4, #52]	; 0x34
   14abc:	cmp	r8, #1
   14ac0:	blt	14a24 <maybe_read_string+0x34>
   14ac4:	b	14aec <maybe_read_string+0xfc>
   14ac8:	ldr	r1, [r4, #40]	; 0x28
   14acc:	cmp	r1, #80	; 0x50
   14ad0:	beq	14b4c <maybe_read_string+0x15c>
   14ad4:	add	r1, r1, #1
   14ad8:	add	r8, r8, #1
   14adc:	mov	sl, r0
   14ae0:	str	r1, [r4, #40]	; 0x28
   14ae4:	cmp	r8, #1
   14ae8:	blt	14a24 <maybe_read_string+0x34>
   14aec:	mov	r7, #5
   14af0:	mov	r5, #0
   14af4:	bne	14b24 <maybe_read_string+0x134>
   14af8:	uxtb	r2, sl
   14afc:	add	r0, r4, r2, lsl #1
   14b00:	ldrh	r0, [r0, #94]	; 0x5e
   14b04:	cmp	r0, #90	; 0x5a
   14b08:	bne	14bcc <maybe_read_string+0x1dc>
   14b0c:	movw	r0, #0
   14b10:	mov	r7, #0
   14b14:	mov	r5, #1
   14b18:	movt	r0, #32760	; 0x7ff8
   14b1c:	str	r7, [fp, #-56]	; 0xffffffc8
   14b20:	str	r0, [fp, #-52]	; 0xffffffcc
   14b24:	orrs	r0, r7, r5
   14b28:	beq	14b5c <maybe_read_string+0x16c>
   14b2c:	cmp	r9, #0
   14b30:	strne	r5, [r9]
   14b34:	mov	r6, r7
   14b38:	mov	r0, r6
   14b3c:	sub	sp, fp, #40	; 0x28
   14b40:	vpop	{d8}
   14b44:	add	sp, sp, #4
   14b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b4c:	mov	r7, #5
   14b50:	mov	r5, #0
   14b54:	orrs	r0, r7, r5
   14b58:	bne	14b2c <maybe_read_string+0x13c>
   14b5c:	vldr	d8, [fp, #-56]	; 0xffffffc8
   14b60:	mov	r6, #5
   14b64:	vcmpe.f64	d8, #0.0
   14b68:	vmrs	APSR_nzcv, fpscr
   14b6c:	bmi	14b38 <maybe_read_string+0x148>
   14b70:	vldr	d16, [pc, #288]	; 14c98 <maybe_read_string+0x2a8>
   14b74:	vcmpe.f64	d8, d16
   14b78:	vmrs	APSR_nzcv, fpscr
   14b7c:	bgt	14b38 <maybe_read_string+0x148>
   14b80:	vmov.f64	d0, d8
   14b84:	bl	4c84 <__isnan@plt>
   14b88:	cmp	r0, #0
   14b8c:	bne	14b38 <maybe_read_string+0x148>
   14b90:	ldr	r0, [r4, #620]	; 0x26c
   14b94:	vcvt.u32.f64	s0, d8
   14b98:	vmov	r5, s0
   14b9c:	cmp	r0, r5
   14ba0:	bcs	14be8 <maybe_read_string+0x1f8>
   14ba4:	str	r5, [r4, #620]	; 0x26c
   14ba8:	mov	r1, r5
   14bac:	ldr	r0, [r4, #616]	; 0x268
   14bb0:	bl	4984 <realloc@plt>
   14bb4:	str	r0, [r4, #616]	; 0x268
   14bb8:	mov	r1, #0
   14bbc:	mov	r6, r0
   14bc0:	ldr	r2, [r4, #620]	; 0x26c
   14bc4:	bl	4c00 <memset@plt>
   14bc8:	b	14bec <maybe_read_string+0x1fc>
   14bcc:	sub	r1, fp, #56	; 0x38
   14bd0:	mov	r0, r4
   14bd4:	bl	14ca4 <read_double_with_peek>
   14bd8:	mov	r7, r0
   14bdc:	orrs	r0, r7, r5
   14be0:	bne	14b2c <maybe_read_string+0x13c>
   14be4:	b	14b5c <maybe_read_string+0x16c>
   14be8:	ldr	r6, [r4, #616]	; 0x268
   14bec:	mov	r0, r4
   14bf0:	mov	r1, r6
   14bf4:	mov	r2, r5
   14bf8:	bl	11f98 <read_bytes>
   14bfc:	cmn	r0, #1
   14c00:	beq	14c44 <maybe_read_string+0x254>
   14c04:	add	r1, r4, #94	; 0x5e
   14c08:	ldr	r0, [r4, #616]	; 0x268
   14c0c:	ldr	r6, [sp, #12]
   14c10:	str	r1, [sp]
   14c14:	ldr	r1, [sp, #8]
   14c18:	mov	r2, r6
   14c1c:	sub	r3, r1, #1
   14c20:	mov	r1, r5
   14c24:	bl	4bb8 <por_utf8_encode@plt>
   14c28:	cmn	r0, #1
   14c2c:	beq	14c4c <maybe_read_string+0x25c>
   14c30:	mov	r1, #0
   14c34:	cmp	r9, #0
   14c38:	strb	r1, [r6, r0]
   14c3c:	strne	r1, [r9]
   14c40:	b	14b34 <maybe_read_string+0x144>
   14c44:	mov	r6, #2
   14c48:	b	14b38 <maybe_read_string+0x148>
   14c4c:	ldr	r0, [r4, #24]
   14c50:	mov	r6, #16
   14c54:	cmp	r0, #0
   14c58:	beq	14b38 <maybe_read_string+0x148>
   14c5c:	ldr	r0, [r4, #616]	; 0x268
   14c60:	add	r7, sp, #16
   14c64:	mov	r1, #1024	; 0x400
   14c68:	mov	r3, r5
   14c6c:	str	r0, [sp]
   14c70:	mov	r0, r7
   14c74:	ldr	r2, [pc, #36]	; 14ca0 <maybe_read_string+0x2b0>
   14c78:	add	r2, pc, r2
   14c7c:	bl	4bdc <snprintf@plt>
   14c80:	ldr	r2, [r4, #24]
   14c84:	ldr	r1, [r4, #36]	; 0x24
   14c88:	mov	r0, r7
   14c8c:	blx	r2
   14c90:	b	14b38 <maybe_read_string+0x148>
   14c94:	nop	{0}
   14c98:	.word	0x00000000
   14c9c:	.word	0x40d38800
   14ca0:	.word	0x00014dd1

00014ca4 <read_double_with_peek>:
   14ca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ca8:	add	fp, sp, #28
   14cac:	sub	sp, sp, #444	; 0x1bc
   14cb0:	sub	sp, sp, #1024	; 0x400
   14cb4:	mov	r5, r0
   14cb8:	movw	r0, #0
   14cbc:	mov	sl, #0
   14cc0:	strb	r2, [fp, #-140]	; 0xffffff74
   14cc4:	add	r6, sp, #32
   14cc8:	str	r1, [sp, #24]
   14ccc:	movt	r0, #32760	; 0x7ff8
   14cd0:	str	sl, [fp, #-40]	; 0xffffffd8
   14cd4:	str	r0, [fp, #-36]	; 0xffffffdc
   14cd8:	sub	r0, fp, #140	; 0x8c
   14cdc:	ldr	r7, [r5, #44]	; 0x2c
   14ce0:	add	r8, r0, #1
   14ce4:	add	r9, r0, #2
   14ce8:	mov	r4, r8
   14cec:	ldr	r0, [r5, #52]	; 0x34
   14cf0:	cmp	r0, #0
   14cf4:	beq	14d0c <read_double_with_peek+0x68>
   14cf8:	ldrb	r0, [r5, #48]	; 0x30
   14cfc:	strb	r0, [r4], #1
   14d00:	ldr	r0, [r5, #52]	; 0x34
   14d04:	sub	r0, r0, #1
   14d08:	b	14d7c <read_double_with_peek+0xd8>
   14d0c:	ldr	r3, [r7, #12]
   14d10:	ldr	r2, [r7, #20]
   14d14:	mov	r0, r6
   14d18:	mov	r1, #1
   14d1c:	blx	r3
   14d20:	cmn	r0, #1
   14d24:	beq	14fd8 <read_double_with_peek+0x334>
   14d28:	cmp	r0, #0
   14d2c:	beq	14db0 <read_double_with_peek+0x10c>
   14d30:	ldrb	r0, [sp, #32]
   14d34:	cmp	r0, #10
   14d38:	beq	14d70 <read_double_with_peek+0xcc>
   14d3c:	cmp	r0, #13
   14d40:	bne	14d8c <read_double_with_peek+0xe8>
   14d44:	ldr	r3, [r7, #12]
   14d48:	ldr	r2, [r7, #20]
   14d4c:	mov	r0, r6
   14d50:	mov	r1, #1
   14d54:	blx	r3
   14d58:	add	r0, r0, #1
   14d5c:	cmp	r0, #2
   14d60:	bcc	14fd8 <read_double_with_peek+0x334>
   14d64:	ldrb	r0, [sp, #32]
   14d68:	cmp	r0, #10
   14d6c:	bne	14fd8 <read_double_with_peek+0x334>
   14d70:	ldr	r0, [r5, #40]	; 0x28
   14d74:	str	sl, [r5, #40]	; 0x28
   14d78:	rsb	r0, r0, #80	; 0x50
   14d7c:	str	r0, [r5, #52]	; 0x34
   14d80:	cmp	r4, r9
   14d84:	bcc	14cec <read_double_with_peek+0x48>
   14d88:	b	14db0 <read_double_with_peek+0x10c>
   14d8c:	ldr	r1, [r5, #40]	; 0x28
   14d90:	cmp	r1, #80	; 0x50
   14d94:	beq	14fd8 <read_double_with_peek+0x334>
   14d98:	strb	r0, [r4], #1
   14d9c:	ldr	r0, [r5, #40]	; 0x28
   14da0:	add	r0, r0, #1
   14da4:	str	r0, [r5, #40]	; 0x28
   14da8:	cmp	r4, r9
   14dac:	bcc	14cec <read_double_with_peek+0x48>
   14db0:	sub	r1, r4, r8
   14db4:	mov	r0, #5
   14db8:	cmp	r1, #1
   14dbc:	bne	15040 <read_double_with_peek+0x39c>
   14dc0:	ldrb	r0, [fp, #-140]	; 0xffffff74
   14dc4:	add	r0, r5, r0, lsl #1
   14dc8:	ldrh	r0, [r0, #94]	; 0x5e
   14dcc:	cmp	r0, #42	; 0x2a
   14dd0:	bne	14e10 <read_double_with_peek+0x16c>
   14dd4:	ldrb	r0, [fp, #-139]	; 0xffffff75
   14dd8:	add	r0, r5, r0, lsl #1
   14ddc:	ldrh	r0, [r0, #94]	; 0x5e
   14de0:	cmp	r0, #46	; 0x2e
   14de4:	bne	14e10 <read_double_with_peek+0x16c>
   14de8:	ldr	r1, [sp, #24]
   14dec:	mov	r0, #0
   14df0:	cmp	r1, #0
   14df4:	movwne	r2, #0
   14df8:	movtne	r2, #32760	; 0x7ff8
   14dfc:	stmne	r1, {r0, r2}
   14e00:	subne	sp, fp, #28
   14e04:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e08:	sub	sp, fp, #28
   14e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e10:	mov	r6, #2
   14e14:	add	r7, sp, #32
   14e18:	mov	r4, #0
   14e1c:	sub	r0, fp, #140	; 0x8c
   14e20:	add	r8, r0, r6
   14e24:	ldrb	r0, [r8, #-1]
   14e28:	add	r0, r5, r0, lsl #1
   14e2c:	ldrh	r0, [r0, #94]	; 0x5e
   14e30:	cmp	r0, #47	; 0x2f
   14e34:	beq	14f4c <read_double_with_peek+0x2a8>
   14e38:	ldr	r9, [r5, #44]	; 0x2c
   14e3c:	mov	sl, #0
   14e40:	str	r4, [sp, #28]
   14e44:	ldr	r0, [r5, #52]	; 0x34
   14e48:	add	r4, r8, sl
   14e4c:	cmp	r0, #0
   14e50:	beq	14e74 <read_double_with_peek+0x1d0>
   14e54:	ldrb	r1, [r5, #48]	; 0x30
   14e58:	sub	r0, r0, #1
   14e5c:	strb	r1, [r4]
   14e60:	str	r0, [r5, #52]	; 0x34
   14e64:	add	sl, sl, #1
   14e68:	cmp	sl, #1
   14e6c:	blt	14e44 <read_double_with_peek+0x1a0>
   14e70:	b	14f14 <read_double_with_peek+0x270>
   14e74:	ldr	r3, [r9, #12]
   14e78:	ldr	r2, [r9, #20]
   14e7c:	mov	r0, r7
   14e80:	mov	r1, #1
   14e84:	blx	r3
   14e88:	cmn	r0, #1
   14e8c:	beq	14fd8 <read_double_with_peek+0x334>
   14e90:	cmp	r0, #0
   14e94:	beq	14f18 <read_double_with_peek+0x274>
   14e98:	ldrb	r0, [sp, #32]
   14e9c:	cmp	r0, #10
   14ea0:	beq	14ed8 <read_double_with_peek+0x234>
   14ea4:	cmp	r0, #13
   14ea8:	bne	14ef8 <read_double_with_peek+0x254>
   14eac:	ldr	r3, [r9, #12]
   14eb0:	ldr	r2, [r9, #20]
   14eb4:	mov	r0, r7
   14eb8:	mov	r1, #1
   14ebc:	blx	r3
   14ec0:	add	r0, r0, #1
   14ec4:	cmp	r0, #2
   14ec8:	bcc	14fd8 <read_double_with_peek+0x334>
   14ecc:	ldrb	r0, [sp, #32]
   14ed0:	cmp	r0, #10
   14ed4:	bne	14fd8 <read_double_with_peek+0x334>
   14ed8:	ldr	r0, [r5, #40]	; 0x28
   14edc:	mov	r1, #0
   14ee0:	str	r1, [r5, #40]	; 0x28
   14ee4:	rsb	r0, r0, #80	; 0x50
   14ee8:	str	r0, [r5, #52]	; 0x34
   14eec:	cmp	sl, #1
   14ef0:	blt	14e44 <read_double_with_peek+0x1a0>
   14ef4:	b	14f14 <read_double_with_peek+0x270>
   14ef8:	ldr	r1, [r5, #40]	; 0x28
   14efc:	cmp	r1, #80	; 0x50
   14f00:	beq	14fd8 <read_double_with_peek+0x334>
   14f04:	strb	r0, [r4]
   14f08:	add	r0, r1, #1
   14f0c:	str	r0, [r5, #40]	; 0x28
   14f10:	b	14e64 <read_double_with_peek+0x1c0>
   14f14:	add	r4, r8, sl
   14f18:	sub	r0, r4, r8
   14f1c:	cmp	r0, #1
   14f20:	bne	14fd8 <read_double_with_peek+0x334>
   14f24:	ldr	r4, [sp, #28]
   14f28:	adds	r6, r6, #1
   14f2c:	adc	r4, r4, #0
   14f30:	subs	r0, r6, #100	; 0x64
   14f34:	sbcs	r0, r4, #0
   14f38:	bcc	14e1c <read_double_with_peek+0x178>
   14f3c:	eor	r0, r6, #100	; 0x64
   14f40:	orrs	r0, r0, r4
   14f44:	mov	r0, #5
   14f48:	beq	15040 <read_double_with_peek+0x39c>
   14f4c:	add	r0, r5, #94	; 0x5e
   14f50:	sub	r8, fp, #140	; 0x8c
   14f54:	sub	r2, fp, #440	; 0x1b8
   14f58:	mov	r1, r6
   14f5c:	mov	r3, #300	; 0x12c
   14f60:	str	r0, [sp]
   14f64:	mov	r0, r8
   14f68:	bl	4bb8 <por_utf8_encode@plt>
   14f6c:	ldr	r3, [r5, #24]
   14f70:	cmn	r0, #1
   14f74:	beq	14fe4 <read_double_with_peek+0x340>
   14f78:	mov	r7, r0
   14f7c:	ldr	r0, [r5, #36]	; 0x24
   14f80:	sub	r6, fp, #440	; 0x1b8
   14f84:	sub	r2, fp, #40	; 0x28
   14f88:	mov	r1, r7
   14f8c:	str	r0, [sp]
   14f90:	mov	r0, r6
   14f94:	bl	4bac <readstat_por_parse_double@plt>
   14f98:	mov	r4, #0
   14f9c:	cmn	r0, #1
   14fa0:	bne	1502c <read_double_with_peek+0x388>
   14fa4:	ldr	r0, [r5, #24]
   14fa8:	mov	r4, #5
   14fac:	cmp	r0, #0
   14fb0:	beq	1502c <read_double_with_peek+0x388>
   14fb4:	asr	r0, r7, #31
   14fb8:	str	r7, [sp]
   14fbc:	stmib	sp, {r0, r7}
   14fc0:	str	r6, [sp, #12]
   14fc4:	str	r8, [sp, #16]
   14fc8:	add	r6, sp, #32
   14fcc:	ldr	r2, [pc, #120]	; 1504c <read_double_with_peek+0x3a8>
   14fd0:	add	r2, pc, r2
   14fd4:	b	15008 <read_double_with_peek+0x364>
   14fd8:	mov	r0, #5
   14fdc:	sub	sp, fp, #28
   14fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fe4:	cmp	r3, #0
   14fe8:	beq	15028 <read_double_with_peek+0x384>
   14fec:	mov	r0, r4
   14ff0:	str	r6, [sp]
   14ff4:	mov	r4, #16
   14ff8:	stmib	sp, {r0, r6, r8}
   14ffc:	add	r6, sp, #32
   15000:	ldr	r2, [pc, #64]	; 15048 <read_double_with_peek+0x3a4>
   15004:	add	r2, pc, r2
   15008:	mov	r0, r6
   1500c:	mov	r1, #1024	; 0x400
   15010:	bl	4bdc <snprintf@plt>
   15014:	ldr	r2, [r5, #24]
   15018:	ldr	r1, [r5, #36]	; 0x24
   1501c:	mov	r0, r6
   15020:	blx	r2
   15024:	b	1502c <read_double_with_peek+0x388>
   15028:	mov	r4, #16
   1502c:	ldr	r0, [sp, #24]
   15030:	cmp	r0, #0
   15034:	vldrne	d16, [fp, #-40]	; 0xffffffd8
   15038:	vstrne	d16, [r0]
   1503c:	mov	r0, r4
   15040:	sub	sp, fp, #28
   15044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15048:	.word	0x00014a63
   1504c:	.word	0x00014aca

00015050 <readstat_begin_writing_por>:
   15050:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15054:	add	fp, sp, #24
   15058:	ldr	ip, [pc, #156]	; 150fc <readstat_begin_writing_por+0xac>
   1505c:	ldr	r3, [pc, #156]	; 15100 <readstat_begin_writing_por+0xb0>
   15060:	add	r3, pc, r3
   15064:	add	ip, pc, ip
   15068:	str	r3, [r0, #292]	; 0x124
   1506c:	ldr	r3, [pc, #144]	; 15104 <readstat_begin_writing_por+0xb4>
   15070:	ldr	lr, [pc, #144]	; 15108 <readstat_begin_writing_por+0xb8>
   15074:	ldr	r4, [pc, #144]	; 1510c <readstat_begin_writing_por+0xbc>
   15078:	ldr	r5, [pc, #144]	; 15110 <readstat_begin_writing_por+0xc0>
   1507c:	ldr	r6, [pc, #144]	; 15114 <readstat_begin_writing_por+0xc4>
   15080:	ldr	r7, [pc, #144]	; 15118 <readstat_begin_writing_por+0xc8>
   15084:	ldr	r8, [pc, #144]	; 1511c <readstat_begin_writing_por+0xcc>
   15088:	str	ip, [r0, #228]	; 0xe4
   1508c:	add	r3, pc, r3
   15090:	add	lr, pc, lr
   15094:	add	r4, pc, r4
   15098:	add	r5, pc, r5
   1509c:	add	r6, pc, r6
   150a0:	add	r7, pc, r7
   150a4:	add	r8, pc, r8
   150a8:	str	r3, [r0, #232]	; 0xe8
   150ac:	add	r3, r0, #240	; 0xf0
   150b0:	str	lr, [r0, #236]	; 0xec
   150b4:	stm	r3, {r4, r5, r6, r7, r8}
   150b8:	ldr	r3, [pc, #96]	; 15120 <readstat_begin_writing_por+0xd0>
   150bc:	ldr	r7, [pc, #96]	; 15124 <readstat_begin_writing_por+0xd4>
   150c0:	add	r3, pc, r3
   150c4:	add	r7, pc, r7
   150c8:	str	r3, [r0, #264]	; 0x108
   150cc:	str	r7, [r0, #268]	; 0x10c
   150d0:	ldr	r3, [pc, #80]	; 15128 <readstat_begin_writing_por+0xd8>
   150d4:	ldr	r7, [pc, #80]	; 1512c <readstat_begin_writing_por+0xdc>
   150d8:	ldr	r6, [pc, #80]	; 15130 <readstat_begin_writing_por+0xe0>
   150dc:	add	r3, pc, r3
   150e0:	add	r7, pc, r7
   150e4:	add	r6, pc, r6
   150e8:	str	r3, [r0, #276]	; 0x114
   150ec:	str	r7, [r0, #280]	; 0x118
   150f0:	str	r6, [r0, #284]	; 0x11c
   150f4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   150f8:	b	48f4 <readstat_begin_writing_file@plt>
   150fc:	.word	0x000000d8
   15100:	.word	0x000000cc
   15104:	.word	0x000000c4
   15108:	.word	0x0000017c
   1510c:	.word	0x000001a4
   15110:	.word	0x000001cc
   15114:	.word	0x000001f4
   15118:	.word	0x00000218
   1511c:	.word	0x00000238
   15120:	.word	0x000002a4
   15124:	.word	0x000002cc
   15128:	.word	0x000002e4
   1512c:	.word	0x00001740
   15130:	.word	0x0000178c

00015134 <por_metadata_ok>:
   15134:	ldr	r0, [r0, #16]
   15138:	cmp	r0, #0
   1513c:	movwne	r0, #6
   15140:	bx	lr

00015144 <por_variable_width>:
   15144:	mov	r2, #54	; 0x36
   15148:	cmp	r0, #0
   1514c:	addeq	r2, r1, #54	; 0x36
   15150:	mov	r0, r2
   15154:	bx	lr

00015158 <por_variable_ok>:
   15158:	push	{r4, sl, fp, lr}
   1515c:	add	fp, sp, #8
   15160:	bl	4cb4 <readstat_variable_get_name@plt>
   15164:	mov	r4, r0
   15168:	bl	4b58 <strlen@plt>
   1516c:	sub	r1, r0, #1
   15170:	mov	r0, #28
   15174:	cmp	r1, #7
   15178:	pophi	{r4, sl, fp, pc}
   1517c:	ldrb	r3, [r4]
   15180:	cmp	r3, #0
   15184:	beq	151f4 <por_variable_ok+0x9c>
   15188:	movw	lr, #2051	; 0x803
   1518c:	add	r1, r4, #1
   15190:	mvn	r2, #34	; 0x22
   15194:	mov	ip, #1
   15198:	mov	r0, r3
   1519c:	movt	lr, #8192	; 0x2000
   151a0:	b	151b8 <por_variable_ok+0x60>
   151a4:	uxtb	r0, r0
   151a8:	cmp	r0, #95	; 0x5f
   151ac:	movne	r0, #26
   151b0:	popne	{r4, sl, fp, pc}
   151b4:	b	151e8 <por_variable_ok+0x90>
   151b8:	sub	r4, r0, #65	; 0x41
   151bc:	uxtb	r4, r4
   151c0:	cmp	r4, #26
   151c4:	subcs	r4, r0, #48	; 0x30
   151c8:	uxtbcs	r4, r4
   151cc:	cmpcs	r4, #10
   151d0:	bcc	151e8 <por_variable_ok+0x90>
   151d4:	uxtab	r4, r2, r0
   151d8:	cmp	r4, #29
   151dc:	bhi	151a4 <por_variable_ok+0x4c>
   151e0:	tst	lr, ip, lsl r4
   151e4:	beq	151a4 <por_variable_ok+0x4c>
   151e8:	ldrb	r0, [r1], #1
   151ec:	cmp	r0, #0
   151f0:	bne	151b8 <por_variable_ok+0x60>
   151f4:	sub	r0, r3, #65	; 0x41
   151f8:	mov	r1, #25
   151fc:	uxtb	r0, r0
   15200:	cmp	r0, #26
   15204:	movwcc	r1, #0
   15208:	subs	r0, r3, #64	; 0x40
   1520c:	movne	r0, r1
   15210:	pop	{r4, sl, fp, pc}

00015214 <por_write_int8_value>:
   15214:	push	{fp, lr}
   15218:	mov	fp, sp
   1521c:	vmov	s0, r2
   15220:	mov	r1, #54	; 0x36
   15224:	vcvt.f64.s32	d0, s0
   15228:	bl	168f8 <por_write_double_to_buffer>
   1522c:	mov	r1, #0
   15230:	cmn	r0, #1
   15234:	movweq	r1, #13
   15238:	mov	r0, r1
   1523c:	pop	{fp, pc}

00015240 <por_write_int16_value>:
   15240:	push	{fp, lr}
   15244:	mov	fp, sp
   15248:	vmov	s0, r2
   1524c:	mov	r1, #54	; 0x36
   15250:	vcvt.f64.s32	d0, s0
   15254:	bl	168f8 <por_write_double_to_buffer>
   15258:	mov	r1, #0
   1525c:	cmn	r0, #1
   15260:	movweq	r1, #13
   15264:	mov	r0, r1
   15268:	pop	{fp, pc}

0001526c <por_write_int32_value>:
   1526c:	push	{fp, lr}
   15270:	mov	fp, sp
   15274:	vmov	s0, r2
   15278:	mov	r1, #54	; 0x36
   1527c:	vcvt.f64.s32	d0, s0
   15280:	bl	168f8 <por_write_double_to_buffer>
   15284:	mov	r1, #0
   15288:	cmn	r0, #1
   1528c:	movweq	r1, #13
   15290:	mov	r0, r1
   15294:	pop	{fp, pc}

00015298 <por_write_float_value>:
   15298:	push	{fp, lr}
   1529c:	mov	fp, sp
   152a0:	vcvt.f64.f32	d0, s0
   152a4:	mov	r1, #54	; 0x36
   152a8:	bl	168f8 <por_write_double_to_buffer>
   152ac:	mov	r1, #0
   152b0:	cmn	r0, #1
   152b4:	movweq	r1, #13
   152b8:	mov	r0, r1
   152bc:	pop	{fp, pc}

000152c0 <por_write_double_value>:
   152c0:	push	{fp, lr}
   152c4:	mov	fp, sp
   152c8:	mov	r1, #54	; 0x36
   152cc:	bl	168f8 <por_write_double_to_buffer>
   152d0:	mov	r1, #0
   152d4:	cmn	r0, #1
   152d8:	movweq	r1, #13
   152dc:	mov	r0, r1
   152e0:	pop	{fp, pc}

000152e4 <por_write_string_value>:
   152e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   152e8:	add	fp, sp, #24
   152ec:	mov	r8, r0
   152f0:	mov	r0, r2
   152f4:	mov	r4, r2
   152f8:	mov	r5, r1
   152fc:	bl	4b58 <strlen@plt>
   15300:	mov	r7, r0
   15304:	cmp	r0, #0
   15308:	mov	r6, r0
   1530c:	mov	r0, r5
   15310:	movweq	r6, #1
   15314:	bl	4c24 <readstat_variable_get_storage_width@plt>
   15318:	cmp	r6, r0
   1531c:	mov	r1, #54	; 0x36
   15320:	movhi	r6, r0
   15324:	mov	r0, r8
   15328:	vmov	s0, r6
   1532c:	vcvt.f64.u32	d0, s0
   15330:	bl	168f8 <por_write_double_to_buffer>
   15334:	cmn	r0, #1
   15338:	moveq	r0, #13
   1533c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   15340:	ldr	r1, [pc, #32]	; 15368 <por_write_string_value+0x84>
   15344:	cmp	r7, #0
   15348:	add	r0, r8, r0
   1534c:	mov	r2, r6
   15350:	add	r1, pc, r1
   15354:	moveq	r4, r1
   15358:	mov	r1, r4
   1535c:	bl	4c18 <strncpy@plt>
   15360:	mov	r0, #0
   15364:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15368:	.word	0x0001482e

0001536c <por_write_missing_string>:
   1536c:	push	{fp, lr}
   15370:	mov	fp, sp
   15374:	mov	r1, #54	; 0x36
   15378:	vmov.i32	d0, #0	; 0x00000000
   1537c:	bl	168f8 <por_write_double_to_buffer>
   15380:	mov	r1, #0
   15384:	cmn	r0, #1
   15388:	movweq	r1, #13
   1538c:	mov	r0, r1
   15390:	pop	{fp, pc}
   15394:	nop	{0}

00015398 <por_write_missing_number>:
   15398:	push	{fp, lr}
   1539c:	mov	fp, sp
   153a0:	vldr	d0, [pc, #24]	; 153c0 <por_write_missing_number+0x28>
   153a4:	mov	r1, #54	; 0x36
   153a8:	bl	168f8 <por_write_double_to_buffer>
   153ac:	mov	r1, #0
   153b0:	cmn	r0, #1
   153b4:	movweq	r1, #13
   153b8:	mov	r0, r1
   153bc:	pop	{fp, pc}
   153c0:	.word	0x00000000
   153c4:	.word	0x7ff80000

000153c8 <por_begin_data>:
   153c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153cc:	add	fp, sp, #28
   153d0:	sub	sp, sp, #4
   153d4:	vpush	{d8-d9}
   153d8:	sub	sp, sp, #1376	; 0x560
   153dc:	mov	r9, r0
   153e0:	mov	r0, #1
   153e4:	mov	r1, #8
   153e8:	bl	472c <calloc@plt>
   153ec:	ldr	r5, [pc, #4008]	; 1639c <por_begin_data+0xfd4>
   153f0:	mov	r8, r0
   153f4:	vmov.i32	q8, #0	; 0x00000000
   153f8:	mov	r0, #0
   153fc:	ldr	r5, [pc, r5]
   15400:	add	r1, r5, r0
   15404:	add	r0, r0, #16
   15408:	vld1.16	{d18-d19}, [r1]
   1540c:	cmp	r0, #512	; 0x200
   15410:	vmax.u16	q8, q9, q8
   15414:	bne	15400 <por_begin_data+0x38>
   15418:	vext.8	q9, q8, q8, #8
   1541c:	vmax.u16	q8, q8, q9
   15420:	vext.8	q9, q8, q8, #4
   15424:	vmax.u16	q8, q8, q9
   15428:	vdup.16	q9, d16[1]
   1542c:	vmax.u16	q8, q8, q9
   15430:	vmov.u16	r0, d16[0]
   15434:	add	r6, r0, #1
   15438:	mov	r0, r6
   1543c:	bl	4a74 <malloc@plt>
   15440:	stm	r8, {r0, r6}
   15444:	mov	r1, #0
   15448:	ldr	r4, [pc, #3920]	; 163a0 <por_begin_data+0xfd8>
   1544c:	ldr	r4, [pc, r4]
   15450:	add	r2, r4, r1
   15454:	ldrh	r7, [r5]
   15458:	add	r1, r1, #1
   1545c:	add	r5, r5, #2
   15460:	ldrsb	r2, [r2]
   15464:	cmp	r7, #0
   15468:	uxtb	r3, r2
   1546c:	strbne	r3, [r0, r7]
   15470:	cmp	r3, #0
   15474:	strbne	r3, [r0, r2]
   15478:	cmp	r1, #256	; 0x100
   1547c:	bne	15450 <por_begin_data+0x88>
   15480:	add	r5, r9, #88	; 0x58
   15484:	mov	r0, r5
   15488:	bl	4b58 <strlen@plt>
   1548c:	add	r7, sp, #344	; 0x158
   15490:	mov	r6, r0
   15494:	mov	r1, #48	; 0x30
   15498:	mov	r2, #200	; 0xc8
   1549c:	mov	r0, r7
   154a0:	bl	4c00 <memset@plt>
   154a4:	ldr	r0, [pc, #3832]	; 163a4 <por_begin_data+0xfdc>
   154a8:	mov	r1, r5
   154ac:	mov	r2, #20
   154b0:	add	r0, pc, r0
   154b4:	vld1.64	{d16-d17}, [r0]
   154b8:	add	r0, r7, #40	; 0x28
   154bc:	add	r7, r7, #60	; 0x3c
   154c0:	vst1.64	{d16-d17}, [r0]
   154c4:	movw	r0, #18758	; 0x4946
   154c8:	movt	r0, #17740	; 0x454c
   154cc:	str	r0, [sp, #400]	; 0x190
   154d0:	mov	r0, r7
   154d4:	bl	4c18 <strncpy@plt>
   154d8:	cmp	r6, #19
   154dc:	bhi	154f0 <por_begin_data+0x128>
   154e0:	add	r0, r7, r6
   154e4:	rsb	r2, r6, #20
   154e8:	mov	r1, #32
   154ec:	bl	4c00 <memset@plt>
   154f0:	ldr	r5, [pc, #4068]	; 164dc <por_begin_data+0x1114>
   154f4:	add	r1, sp, #344	; 0x158
   154f8:	mov	r0, r9
   154fc:	mov	r2, #200	; 0xc8
   15500:	mov	r3, #80	; 0x50
   15504:	add	r5, pc, r5
   15508:	str	r5, [sp]
   1550c:	bl	4e58 <readstat_write_bytes_as_lines@plt>
   15510:	add	r6, sp, #88	; 0x58
   15514:	mov	r1, #48	; 0x30
   15518:	mov	r2, #256	; 0x100
   1551c:	mov	r0, r6
   15520:	bl	4c00 <memset@plt>
   15524:	mov	r0, #0
   15528:	ldrb	r1, [r4, r0]
   1552c:	cmp	r1, #0
   15530:	strbne	r1, [r6, r0]
   15534:	add	r0, r0, #1
   15538:	cmp	r0, #256	; 0x100
   1553c:	bne	15528 <por_begin_data+0x160>
   15540:	add	r1, sp, #88	; 0x58
   15544:	mov	r0, r9
   15548:	mov	r2, #256	; 0x100
   1554c:	mov	r3, #80	; 0x50
   15550:	str	r5, [sp]
   15554:	bl	4e58 <readstat_write_bytes_as_lines@plt>
   15558:	cmp	r0, #0
   1555c:	beq	15570 <por_begin_data+0x1a8>
   15560:	mov	sl, r0
   15564:	b	15594 <por_begin_data+0x1cc>
   15568:	.word	0x00000000
   1556c:	.word	0x40490000
   15570:	ldr	r2, [pc, #4064]	; 16558 <por_begin_data+0x1190>
   15574:	mov	r0, r9
   15578:	mov	r1, r8
   1557c:	mov	r3, #8
   15580:	add	r2, pc, r2
   15584:	bl	16d1c <por_write_string_n>
   15588:	mov	sl, r0
   1558c:	cmp	r0, #0
   15590:	beq	155c0 <por_begin_data+0x1f8>
   15594:	ldr	r0, [r8]
   15598:	cmp	r0, #0
   1559c:	beq	155a4 <por_begin_data+0x1dc>
   155a0:	bl	4864 <free@plt>
   155a4:	mov	r0, r8
   155a8:	bl	4864 <free@plt>
   155ac:	mov	r0, sl
   155b0:	sub	sp, fp, #48	; 0x30
   155b4:	vpop	{d8-d9}
   155b8:	add	sp, sp, #4
   155bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155c0:	add	r0, r9, #20
   155c4:	bl	4ac8 <localtime@plt>
   155c8:	cmp	r0, #0
   155cc:	beq	16320 <por_begin_data+0xf58>
   155d0:	mov	r7, r0
   155d4:	mov	r0, #65	; 0x41
   155d8:	add	r2, sp, #42	; 0x2a
   155dc:	mov	r1, r8
   155e0:	mov	r3, #1
   155e4:	strh	r0, [sp, #42]	; 0x2a
   155e8:	mov	r0, r9
   155ec:	bl	16d1c <por_write_string_n>
   155f0:	mov	sl, r0
   155f4:	cmp	r0, #0
   155f8:	bne	15594 <por_begin_data+0x1cc>
   155fc:	add	r2, r7, #12
   15600:	movw	r4, #34079	; 0x851f
   15604:	mov	r5, #100	; 0x64
   15608:	ldm	r2, {r0, r1, r2}
   1560c:	movt	r4, #20971	; 0x51eb
   15610:	umull	r3, r6, r0, r4
   15614:	add	r1, r1, #1
   15618:	lsr	r3, r6, #5
   1561c:	mls	r0, r3, r5, r0
   15620:	umull	r3, r6, r1, r4
   15624:	lsr	r3, r6, #5
   15628:	str	r0, [sp, #4]
   1562c:	movw	r0, #1900	; 0x76c
   15630:	add	r6, sp, #344	; 0x158
   15634:	mls	r1, r3, r5, r1
   15638:	add	r0, r2, r0
   1563c:	str	r1, [sp]
   15640:	movw	r1, #5977	; 0x1759
   15644:	movt	r1, #53687	; 0xd1b7
   15648:	umull	r1, r2, r0, r1
   1564c:	lsr	r1, r2, #13
   15650:	movw	r2, #10000	; 0x2710
   15654:	mls	r3, r1, r2, r0
   15658:	ldr	r2, [pc, #4076]	; 1664c <por_begin_data+0x1284>
   1565c:	mov	r0, r6
   15660:	mov	r1, #9
   15664:	add	r2, pc, r2
   15668:	bl	4bdc <snprintf@plt>
   1566c:	mov	r0, r9
   15670:	mov	r1, r8
   15674:	mov	r2, r6
   15678:	bl	16e04 <por_write_string_field>
   1567c:	mov	sl, r0
   15680:	cmp	r0, #0
   15684:	bne	15594 <por_begin_data+0x1cc>
   15688:	ldm	r7, {r0, r1, r2}
   1568c:	umull	r3, r7, r0, r4
   15690:	lsr	r3, r7, #5
   15694:	mls	r0, r3, r5, r0
   15698:	umull	r3, r7, r1, r4
   1569c:	lsr	r3, r7, #5
   156a0:	str	r0, [sp, #4]
   156a4:	mls	r1, r3, r5, r1
   156a8:	str	r1, [sp]
   156ac:	umull	r0, r1, r2, r4
   156b0:	lsr	r0, r1, #5
   156b4:	mov	r1, #7
   156b8:	mls	r3, r0, r5, r2
   156bc:	ldr	r2, [pc, #4060]	; 166a0 <por_begin_data+0x12d8>
   156c0:	add	r5, sp, #88	; 0x58
   156c4:	mov	r0, r5
   156c8:	add	r2, pc, r2
   156cc:	bl	4bdc <snprintf@plt>
   156d0:	mov	r0, r9
   156d4:	mov	r1, r8
   156d8:	mov	r2, r5
   156dc:	bl	16e04 <por_write_string_field>
   156e0:	mov	sl, r0
   156e4:	cmp	r0, #0
   156e8:	bne	15594 <por_begin_data+0x1cc>
   156ec:	mov	r0, #49	; 0x31
   156f0:	add	r2, sp, #42	; 0x2a
   156f4:	mov	r1, r8
   156f8:	mov	r3, #1
   156fc:	strh	r0, [sp, #42]	; 0x2a
   15700:	mov	r0, r9
   15704:	bl	16d1c <por_write_string_n>
   15708:	mov	sl, r0
   1570c:	cmp	r0, #0
   15710:	bne	15594 <por_begin_data+0x1cc>
   15714:	ldr	r2, [pc, #4056]	; 166f4 <por_begin_data+0x132c>
   15718:	mov	r0, r9
   1571c:	mov	r1, r8
   15720:	add	r2, pc, r2
   15724:	bl	16e04 <por_write_string_field>
   15728:	mov	sl, r0
   1572c:	cmp	r0, #0
   15730:	bne	15594 <por_begin_data+0x1cc>
   15734:	mov	r0, #51	; 0x33
   15738:	add	r2, sp, #42	; 0x2a
   1573c:	mov	r1, r8
   15740:	mov	r3, #1
   15744:	strh	r0, [sp, #42]	; 0x2a
   15748:	mov	r0, r9
   1574c:	bl	16d1c <por_write_string_n>
   15750:	mov	sl, r0
   15754:	cmp	r0, #0
   15758:	bne	15594 <por_begin_data+0x1cc>
   1575c:	ldr	r2, [pc, #4068]	; 16748 <por_begin_data+0x1380>
   15760:	mov	r0, r9
   15764:	mov	r1, r8
   15768:	add	r2, pc, r2
   1576c:	bl	16e04 <por_write_string_field>
   15770:	mov	sl, r0
   15774:	cmp	r0, #0
   15778:	bne	15594 <por_begin_data+0x1cc>
   1577c:	mov	r0, #52	; 0x34
   15780:	add	r2, sp, #42	; 0x2a
   15784:	mov	r1, r8
   15788:	mov	r3, #1
   1578c:	strh	r0, [sp, #42]	; 0x2a
   15790:	mov	r0, r9
   15794:	bl	16d1c <por_write_string_n>
   15798:	mov	sl, r0
   1579c:	cmp	r0, #0
   157a0:	bne	15594 <por_begin_data+0x1cc>
   157a4:	vldr	s0, [r9, #28]
   157a8:	add	r0, sp, #88	; 0x58
   157ac:	mov	r1, #256	; 0x100
   157b0:	vcvt.f64.s32	d8, s0
   157b4:	vmov.f64	d0, d8
   157b8:	bl	168f8 <por_write_double_to_buffer>
   157bc:	cmn	r0, #1
   157c0:	beq	16328 <por_begin_data+0xf60>
   157c4:	mov	r3, r0
   157c8:	add	r2, sp, #88	; 0x58
   157cc:	mov	r0, r9
   157d0:	mov	r1, r8
   157d4:	bl	16d1c <por_write_string_n>
   157d8:	mov	sl, r0
   157dc:	cmp	r0, #0
   157e0:	bne	15594 <por_begin_data+0x1cc>
   157e4:	mov	r0, #53	; 0x35
   157e8:	add	r2, sp, #42	; 0x2a
   157ec:	mov	r1, r8
   157f0:	mov	r3, #1
   157f4:	strh	r0, [sp, #42]	; 0x2a
   157f8:	mov	r0, r9
   157fc:	bl	16d1c <por_write_string_n>
   15800:	mov	sl, r0
   15804:	cmp	r0, #0
   15808:	bne	15594 <por_begin_data+0x1cc>
   1580c:	vldr	d0, [pc, #-684]	; 15568 <por_begin_data+0x1a0>
   15810:	add	r0, sp, #88	; 0x58
   15814:	mov	r1, #256	; 0x100
   15818:	bl	168f8 <por_write_double_to_buffer>
   1581c:	cmn	r0, #1
   15820:	beq	16368 <por_begin_data+0xfa0>
   15824:	mov	r3, r0
   15828:	add	r2, sp, #88	; 0x58
   1582c:	mov	r0, r9
   15830:	mov	r1, r8
   15834:	bl	16d1c <por_write_string_n>
   15838:	mov	sl, r0
   1583c:	cmp	r0, #0
   15840:	bne	15594 <por_begin_data+0x1cc>
   15844:	ldr	r0, [r9, #224]	; 0xe0
   15848:	cmp	r0, #0
   1584c:	beq	1589c <por_begin_data+0x4d4>
   15850:	mov	r0, #54	; 0x36
   15854:	add	r2, sp, #42	; 0x2a
   15858:	mov	r1, r8
   1585c:	mov	r3, #1
   15860:	strh	r0, [sp, #42]	; 0x2a
   15864:	mov	r0, r9
   15868:	bl	16d1c <por_write_string_n>
   1586c:	mov	sl, r0
   15870:	cmp	r0, #0
   15874:	bne	15594 <por_begin_data+0x1cc>
   15878:	ldr	r0, [r9, #224]	; 0xe0
   1587c:	bl	4cb4 <readstat_variable_get_name@plt>
   15880:	mov	r2, r0
   15884:	mov	r0, r9
   15888:	mov	r1, r8
   1588c:	bl	16e04 <por_write_string_field>
   15890:	mov	sl, r0
   15894:	cmp	r0, #0
   15898:	bne	15594 <por_begin_data+0x1cc>
   1589c:	ldr	r0, [r9, #28]
   158a0:	cmp	r0, #1
   158a4:	blt	16038 <por_begin_data+0xc70>
   158a8:	add	r0, sp, #88	; 0x58
   158ac:	add	r0, r0, #8
   158b0:	str	r0, [sp, #28]
   158b4:	add	r0, r6, #8
   158b8:	str	r0, [sp, #24]
   158bc:	add	r0, sp, #56	; 0x38
   158c0:	add	r0, r0, #8
   158c4:	str	r0, [sp, #20]
   158c8:	add	r0, sp, #72	; 0x48
   158cc:	add	r0, r0, #8
   158d0:	str	r0, [sp, #16]
   158d4:	mov	r0, #0
   158d8:	str	r0, [sp, #8]
   158dc:	ldr	r1, [sp, #8]
   158e0:	mov	r0, r9
   158e4:	bl	4ccc <readstat_get_variable@plt>
   158e8:	str	r0, [sp, #36]	; 0x24
   158ec:	bl	4cb4 <readstat_variable_get_name@plt>
   158f0:	mov	r7, r0
   158f4:	mov	r0, #55	; 0x37
   158f8:	mov	r1, r8
   158fc:	add	r2, sp, #42	; 0x2a
   15900:	mov	r3, #1
   15904:	strh	r0, [sp, #42]	; 0x2a
   15908:	mov	r0, r9
   1590c:	bl	16d1c <por_write_string_n>
   15910:	cmp	r0, #0
   15914:	bne	15560 <por_begin_data+0x198>
   15918:	ldr	r0, [sp, #36]	; 0x24
   1591c:	ldr	r1, [r0]
   15920:	mov	r0, #0
   15924:	cmp	r1, #0
   15928:	mov	r1, #256	; 0x100
   1592c:	ldreq	r0, [sp, #36]	; 0x24
   15930:	ldreq	r0, [r0, #1600]	; 0x640
   15934:	vmov	s0, r0
   15938:	add	r0, sp, #88	; 0x58
   1593c:	vcvt.f64.u32	d8, s0
   15940:	vmov.f64	d0, d8
   15944:	bl	168f8 <por_write_double_to_buffer>
   15948:	cmn	r0, #1
   1594c:	beq	164e0 <por_begin_data+0x1118>
   15950:	mov	r3, r0
   15954:	mov	r0, r9
   15958:	mov	r1, r8
   1595c:	add	r2, sp, #88	; 0x58
   15960:	bl	16d1c <por_write_string_n>
   15964:	cmp	r0, #0
   15968:	bne	15560 <por_begin_data+0x198>
   1596c:	mov	r0, r9
   15970:	mov	r1, r8
   15974:	mov	r2, r7
   15978:	bl	16e04 <por_write_string_field>
   1597c:	cmp	r0, #0
   15980:	bne	15560 <por_begin_data+0x198>
   15984:	ldr	r0, [sp, #36]	; 0x24
   15988:	add	r1, sp, #44	; 0x2c
   1598c:	bl	4a68 <spss_format_for_variable@plt>
   15990:	cmp	r0, #0
   15994:	bne	15560 <por_begin_data+0x198>
   15998:	add	r0, sp, #44	; 0x2c
   1599c:	mov	r1, #256	; 0x100
   159a0:	vldr	s0, [r0]
   159a4:	add	r0, sp, #88	; 0x58
   159a8:	vcvt.f64.s32	d8, s0
   159ac:	vmov.f64	d0, d8
   159b0:	bl	168f8 <por_write_double_to_buffer>
   159b4:	cmn	r0, #1
   159b8:	beq	16530 <por_begin_data+0x1168>
   159bc:	mov	r3, r0
   159c0:	mov	r0, r9
   159c4:	mov	r1, r8
   159c8:	add	r2, sp, #88	; 0x58
   159cc:	bl	16d1c <por_write_string_n>
   159d0:	cmp	r0, #0
   159d4:	bne	15560 <por_begin_data+0x198>
   159d8:	add	r0, sp, #44	; 0x2c
   159dc:	mov	r1, #256	; 0x100
   159e0:	vldr	s0, [r0, #4]
   159e4:	add	r0, sp, #88	; 0x58
   159e8:	vcvt.f64.s32	d8, s0
   159ec:	vmov.f64	d0, d8
   159f0:	bl	168f8 <por_write_double_to_buffer>
   159f4:	cmn	r0, #1
   159f8:	beq	16584 <por_begin_data+0x11bc>
   159fc:	mov	r3, r0
   15a00:	mov	r0, r9
   15a04:	mov	r1, r8
   15a08:	add	r2, sp, #88	; 0x58
   15a0c:	bl	16d1c <por_write_string_n>
   15a10:	cmp	r0, #0
   15a14:	bne	15560 <por_begin_data+0x198>
   15a18:	add	r0, sp, #44	; 0x2c
   15a1c:	mov	r1, #256	; 0x100
   15a20:	vldr	s0, [r0, #8]
   15a24:	add	r0, sp, #88	; 0x58
   15a28:	vcvt.f64.s32	d8, s0
   15a2c:	vmov.f64	d0, d8
   15a30:	bl	168f8 <por_write_double_to_buffer>
   15a34:	cmn	r0, #1
   15a38:	beq	165ac <por_begin_data+0x11e4>
   15a3c:	mov	r3, r0
   15a40:	mov	r0, r9
   15a44:	mov	r1, r8
   15a48:	add	r2, sp, #88	; 0x58
   15a4c:	bl	16d1c <por_write_string_n>
   15a50:	cmp	r0, #0
   15a54:	bne	15560 <por_begin_data+0x198>
   15a58:	add	r0, sp, #44	; 0x2c
   15a5c:	mov	r1, #256	; 0x100
   15a60:	vldr	s0, [r0]
   15a64:	add	r0, sp, #88	; 0x58
   15a68:	vcvt.f64.s32	d8, s0
   15a6c:	vmov.f64	d0, d8
   15a70:	bl	168f8 <por_write_double_to_buffer>
   15a74:	cmn	r0, #1
   15a78:	beq	165fc <por_begin_data+0x1234>
   15a7c:	mov	r3, r0
   15a80:	mov	r0, r9
   15a84:	mov	r1, r8
   15a88:	add	r2, sp, #88	; 0x58
   15a8c:	bl	16d1c <por_write_string_n>
   15a90:	cmp	r0, #0
   15a94:	bne	15560 <por_begin_data+0x198>
   15a98:	add	r0, sp, #44	; 0x2c
   15a9c:	mov	r1, #256	; 0x100
   15aa0:	vldr	s0, [r0, #4]
   15aa4:	add	r0, sp, #88	; 0x58
   15aa8:	vcvt.f64.s32	d8, s0
   15aac:	vmov.f64	d0, d8
   15ab0:	bl	168f8 <por_write_double_to_buffer>
   15ab4:	cmn	r0, #1
   15ab8:	beq	16624 <por_begin_data+0x125c>
   15abc:	mov	r3, r0
   15ac0:	mov	r0, r9
   15ac4:	mov	r1, r8
   15ac8:	add	r2, sp, #88	; 0x58
   15acc:	bl	16d1c <por_write_string_n>
   15ad0:	cmp	r0, #0
   15ad4:	bne	15560 <por_begin_data+0x198>
   15ad8:	add	r0, sp, #44	; 0x2c
   15adc:	mov	r1, #256	; 0x100
   15ae0:	vldr	s0, [r0, #8]
   15ae4:	add	r0, sp, #88	; 0x58
   15ae8:	vcvt.f64.s32	d8, s0
   15aec:	vmov.f64	d0, d8
   15af0:	bl	168f8 <por_write_double_to_buffer>
   15af4:	cmn	r0, #1
   15af8:	beq	16650 <por_begin_data+0x1288>
   15afc:	mov	r3, r0
   15b00:	mov	r0, r9
   15b04:	mov	r1, r8
   15b08:	add	r2, sp, #88	; 0x58
   15b0c:	bl	16d1c <por_write_string_n>
   15b10:	cmp	r0, #0
   15b14:	bne	15560 <por_begin_data+0x198>
   15b18:	ldr	r0, [sp, #36]	; 0x24
   15b1c:	ldr	r4, [r0]
   15b20:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
   15b24:	cmp	r4, #5
   15b28:	str	r0, [sp, #32]
   15b2c:	bne	15dec <por_begin_data+0xa24>
   15b30:	ldr	r0, [sp, #32]
   15b34:	cmp	r0, #1
   15b38:	blt	15fd0 <por_begin_data+0xc08>
   15b3c:	mov	r0, #0
   15b40:	mov	r5, #0
   15b44:	str	r0, [sp, #12]
   15b48:	ldr	r4, [sp, #36]	; 0x24
   15b4c:	add	r0, sp, #72	; 0x48
   15b50:	mov	r2, r5
   15b54:	mov	r1, r4
   15b58:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   15b5c:	add	r0, sp, #56	; 0x38
   15b60:	mov	r1, r4
   15b64:	mov	r2, r5
   15b68:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   15b6c:	ldr	r0, [sp, #16]
   15b70:	ldr	r1, [sp, #76]	; 0x4c
   15b74:	ldrd	r2, [r0]
   15b78:	ldr	r0, [sp, #72]	; 0x48
   15b7c:	bl	4b1c <readstat_double_value@plt>
   15b80:	ldr	r0, [sp, #20]
   15b84:	ldr	r1, [sp, #60]	; 0x3c
   15b88:	vmov.f64	d9, d0
   15b8c:	ldrd	r2, [r0]
   15b90:	ldr	r0, [sp, #56]	; 0x38
   15b94:	bl	4b1c <readstat_double_value@plt>
   15b98:	vmov.f64	d8, d0
   15b9c:	vmov.f64	d0, d9
   15ba0:	bl	4978 <__isinf@plt>
   15ba4:	cmp	r0, #0
   15ba8:	beq	15bec <por_begin_data+0x824>
   15bac:	mov	r0, #57	; 0x39
   15bb0:	mov	r1, r8
   15bb4:	add	r2, sp, #42	; 0x2a
   15bb8:	mov	r3, #1
   15bbc:	strh	r0, [sp, #42]	; 0x2a
   15bc0:	mov	r0, r9
   15bc4:	bl	16d1c <por_write_string_n>
   15bc8:	cmp	r0, #0
   15bcc:	bne	15560 <por_begin_data+0x198>
   15bd0:	add	r0, sp, #88	; 0x58
   15bd4:	mov	r1, #256	; 0x100
   15bd8:	vmov.f64	d0, d8
   15bdc:	bl	168f8 <por_write_double_to_buffer>
   15be0:	cmn	r0, #1
   15be4:	bne	15cb8 <por_begin_data+0x8f0>
   15be8:	b	16508 <por_begin_data+0x1140>
   15bec:	vmov.f64	d0, d8
   15bf0:	bl	4978 <__isinf@plt>
   15bf4:	cmp	r0, #0
   15bf8:	beq	15c3c <por_begin_data+0x874>
   15bfc:	mov	r0, #65	; 0x41
   15c00:	mov	r1, r8
   15c04:	add	r2, sp, #42	; 0x2a
   15c08:	mov	r3, #1
   15c0c:	strh	r0, [sp, #42]	; 0x2a
   15c10:	mov	r0, r9
   15c14:	bl	16d1c <por_write_string_n>
   15c18:	cmp	r0, #0
   15c1c:	bne	15560 <por_begin_data+0x198>
   15c20:	add	r0, sp, #88	; 0x58
   15c24:	mov	r1, #256	; 0x100
   15c28:	vmov.f64	d0, d9
   15c2c:	bl	168f8 <por_write_double_to_buffer>
   15c30:	cmn	r0, #1
   15c34:	bne	15cb8 <por_begin_data+0x8f0>
   15c38:	b	16678 <por_begin_data+0x12b0>
   15c3c:	vcmp.f64	d9, d8
   15c40:	vmrs	APSR_nzcv, fpscr
   15c44:	beq	15ce0 <por_begin_data+0x918>
   15c48:	mov	r0, #66	; 0x42
   15c4c:	mov	r1, r8
   15c50:	add	r2, sp, #42	; 0x2a
   15c54:	mov	r3, #1
   15c58:	strh	r0, [sp, #42]	; 0x2a
   15c5c:	mov	r0, r9
   15c60:	bl	16d1c <por_write_string_n>
   15c64:	cmp	r0, #0
   15c68:	bne	15560 <por_begin_data+0x198>
   15c6c:	add	r0, sp, #88	; 0x58
   15c70:	mov	r1, #256	; 0x100
   15c74:	vmov.f64	d0, d9
   15c78:	bl	168f8 <por_write_double_to_buffer>
   15c7c:	cmn	r0, #1
   15c80:	beq	16720 <por_begin_data+0x1358>
   15c84:	mov	r3, r0
   15c88:	mov	r0, r9
   15c8c:	mov	r1, r8
   15c90:	add	r2, sp, #88	; 0x58
   15c94:	bl	16d1c <por_write_string_n>
   15c98:	cmp	r0, #0
   15c9c:	bne	15560 <por_begin_data+0x198>
   15ca0:	add	r0, sp, #88	; 0x58
   15ca4:	mov	r1, #256	; 0x100
   15ca8:	vmov.f64	d0, d8
   15cac:	bl	168f8 <por_write_double_to_buffer>
   15cb0:	cmn	r0, #1
   15cb4:	beq	1674c <por_begin_data+0x1384>
   15cb8:	mov	r3, r0
   15cbc:	mov	r0, r9
   15cc0:	mov	r1, r8
   15cc4:	add	r2, sp, #88	; 0x58
   15cc8:	bl	16d1c <por_write_string_n>
   15ccc:	cmp	r0, #0
   15cd0:	bne	15560 <por_begin_data+0x198>
   15cd4:	ldr	r0, [sp, #12]
   15cd8:	add	r0, r0, #2
   15cdc:	str	r0, [sp, #12]
   15ce0:	ldr	r0, [sp, #32]
   15ce4:	add	r5, r5, #1
   15ce8:	cmp	r5, r0
   15cec:	blt	15b48 <por_begin_data+0x780>
   15cf0:	mov	r7, #0
   15cf4:	ldr	r4, [sp, #36]	; 0x24
   15cf8:	add	r0, sp, #72	; 0x48
   15cfc:	mov	r2, r7
   15d00:	mov	r1, r4
   15d04:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   15d08:	add	r0, sp, #56	; 0x38
   15d0c:	mov	r1, r4
   15d10:	mov	r2, r7
   15d14:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   15d18:	ldr	r0, [sp, #16]
   15d1c:	ldr	r1, [sp, #76]	; 0x4c
   15d20:	ldrd	r2, [r0]
   15d24:	ldr	r0, [sp, #72]	; 0x48
   15d28:	bl	4b1c <readstat_double_value@plt>
   15d2c:	ldr	r0, [sp, #20]
   15d30:	ldr	r1, [sp, #60]	; 0x3c
   15d34:	vmov.f64	d8, d0
   15d38:	ldrd	r2, [r0]
   15d3c:	ldr	r0, [sp, #56]	; 0x38
   15d40:	bl	4b1c <readstat_double_value@plt>
   15d44:	vcmp.f64	d8, d0
   15d48:	vmrs	APSR_nzcv, fpscr
   15d4c:	bne	15dd8 <por_begin_data+0xa10>
   15d50:	vmov.f64	d9, d0
   15d54:	vmov.f64	d0, d8
   15d58:	bl	4978 <__isinf@plt>
   15d5c:	cmp	r0, #0
   15d60:	bne	15dd8 <por_begin_data+0xa10>
   15d64:	vmov.f64	d0, d9
   15d68:	bl	4978 <__isinf@plt>
   15d6c:	cmp	r0, #0
   15d70:	bne	15dd8 <por_begin_data+0xa10>
   15d74:	mov	r0, #56	; 0x38
   15d78:	mov	r1, r8
   15d7c:	add	r2, sp, #42	; 0x2a
   15d80:	mov	r3, #1
   15d84:	strh	r0, [sp, #42]	; 0x2a
   15d88:	mov	r0, r9
   15d8c:	bl	16d1c <por_write_string_n>
   15d90:	cmp	r0, #0
   15d94:	bne	15560 <por_begin_data+0x198>
   15d98:	add	r0, sp, #88	; 0x58
   15d9c:	mov	r1, #256	; 0x100
   15da0:	vmov.f64	d0, d8
   15da4:	bl	168f8 <por_write_double_to_buffer>
   15da8:	cmn	r0, #1
   15dac:	beq	1677c <por_begin_data+0x13b4>
   15db0:	mov	r3, r0
   15db4:	mov	r0, r9
   15db8:	mov	r1, r8
   15dbc:	add	r2, sp, #88	; 0x58
   15dc0:	bl	16d1c <por_write_string_n>
   15dc4:	cmp	r0, #0
   15dc8:	bne	15560 <por_begin_data+0x198>
   15dcc:	ldr	r0, [sp, #12]
   15dd0:	add	r0, r0, #1
   15dd4:	str	r0, [sp, #12]
   15dd8:	ldr	r0, [sp, #32]
   15ddc:	add	r7, r7, #1
   15de0:	cmp	r7, r0
   15de4:	blt	15cf4 <por_begin_data+0x92c>
   15de8:	b	15fc4 <por_begin_data+0xbfc>
   15dec:	ldr	r0, [sp, #32]
   15df0:	cmp	r0, #1
   15df4:	blt	15fd0 <por_begin_data+0xc08>
   15df8:	mov	r0, #0
   15dfc:	mov	r7, #0
   15e00:	str	r0, [sp, #12]
   15e04:	b	15e80 <por_begin_data+0xab8>
   15e08:	mov	r0, r5
   15e0c:	mov	r1, r4
   15e10:	bl	47b0 <strcmp@plt>
   15e14:	cmp	r0, #0
   15e18:	beq	15ee0 <por_begin_data+0xb18>
   15e1c:	mov	r0, #66	; 0x42
   15e20:	mov	r1, r8
   15e24:	add	r2, sp, #42	; 0x2a
   15e28:	mov	r3, #1
   15e2c:	strh	r0, [sp, #42]	; 0x2a
   15e30:	mov	r0, r9
   15e34:	bl	16d1c <por_write_string_n>
   15e38:	cmp	r0, #0
   15e3c:	bne	15560 <por_begin_data+0x198>
   15e40:	mov	r0, r9
   15e44:	mov	r1, r8
   15e48:	mov	r2, r5
   15e4c:	bl	16e04 <por_write_string_field>
   15e50:	cmp	r0, #0
   15e54:	bne	15560 <por_begin_data+0x198>
   15e58:	mov	r0, r9
   15e5c:	mov	r1, r8
   15e60:	mov	r2, r4
   15e64:	bl	16e04 <por_write_string_field>
   15e68:	cmp	r0, #0
   15e6c:	bne	15560 <por_begin_data+0x198>
   15e70:	ldr	r0, [sp, #12]
   15e74:	add	r0, r0, #2
   15e78:	str	r0, [sp, #12]
   15e7c:	b	15ee0 <por_begin_data+0xb18>
   15e80:	ldr	r4, [sp, #36]	; 0x24
   15e84:	mov	r0, r6
   15e88:	mov	r2, r7
   15e8c:	mov	r1, r4
   15e90:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   15e94:	add	r0, sp, #88	; 0x58
   15e98:	mov	r1, r4
   15e9c:	mov	r2, r7
   15ea0:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   15ea4:	ldr	r0, [sp, #24]
   15ea8:	ldr	r1, [sp, #348]	; 0x15c
   15eac:	ldrd	r2, [r0]
   15eb0:	ldr	r0, [sp, #344]	; 0x158
   15eb4:	bl	493c <readstat_string_value@plt>
   15eb8:	mov	r5, r0
   15ebc:	ldr	r0, [sp, #28]
   15ec0:	ldr	r1, [sp, #92]	; 0x5c
   15ec4:	ldrd	r2, [r0]
   15ec8:	ldr	r0, [sp, #88]	; 0x58
   15ecc:	bl	493c <readstat_string_value@plt>
   15ed0:	cmp	r5, #0
   15ed4:	movne	r4, r0
   15ed8:	cmpne	r0, #0
   15edc:	bne	15e08 <por_begin_data+0xa40>
   15ee0:	ldr	r0, [sp, #32]
   15ee4:	add	r7, r7, #1
   15ee8:	cmp	r7, r0
   15eec:	blt	15e80 <por_begin_data+0xab8>
   15ef0:	mov	r7, #0
   15ef4:	b	15f54 <por_begin_data+0xb8c>
   15ef8:	mov	r0, r5
   15efc:	bl	47b0 <strcmp@plt>
   15f00:	cmp	r0, #0
   15f04:	bne	15fb4 <por_begin_data+0xbec>
   15f08:	mov	r0, #56	; 0x38
   15f0c:	mov	r1, r8
   15f10:	add	r2, sp, #42	; 0x2a
   15f14:	mov	r3, #1
   15f18:	strh	r0, [sp, #42]	; 0x2a
   15f1c:	mov	r0, r9
   15f20:	bl	16d1c <por_write_string_n>
   15f24:	cmp	r0, #0
   15f28:	bne	15560 <por_begin_data+0x198>
   15f2c:	mov	r0, r9
   15f30:	mov	r1, r8
   15f34:	mov	r2, r5
   15f38:	bl	16e04 <por_write_string_field>
   15f3c:	cmp	r0, #0
   15f40:	bne	15560 <por_begin_data+0x198>
   15f44:	ldr	r0, [sp, #12]
   15f48:	add	r0, r0, #1
   15f4c:	str	r0, [sp, #12]
   15f50:	b	15fb4 <por_begin_data+0xbec>
   15f54:	ldr	r4, [sp, #36]	; 0x24
   15f58:	mov	r0, r6
   15f5c:	mov	r2, r7
   15f60:	mov	r1, r4
   15f64:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   15f68:	add	r0, sp, #88	; 0x58
   15f6c:	mov	r1, r4
   15f70:	mov	r2, r7
   15f74:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   15f78:	ldr	r0, [sp, #24]
   15f7c:	ldr	r1, [sp, #348]	; 0x15c
   15f80:	ldrd	r2, [r0]
   15f84:	ldr	r0, [sp, #344]	; 0x158
   15f88:	bl	493c <readstat_string_value@plt>
   15f8c:	mov	r5, r0
   15f90:	ldr	r0, [sp, #28]
   15f94:	ldr	r1, [sp, #92]	; 0x5c
   15f98:	ldrd	r2, [r0]
   15f9c:	ldr	r0, [sp, #88]	; 0x58
   15fa0:	bl	493c <readstat_string_value@plt>
   15fa4:	cmp	r5, #0
   15fa8:	movne	r1, r0
   15fac:	cmpne	r0, #0
   15fb0:	bne	15ef8 <por_begin_data+0xb30>
   15fb4:	ldr	r0, [sp, #32]
   15fb8:	add	r7, r7, #1
   15fbc:	cmp	r7, r0
   15fc0:	blt	15f54 <por_begin_data+0xb8c>
   15fc4:	ldr	r0, [sp, #12]
   15fc8:	cmp	r0, #3
   15fcc:	bgt	16774 <por_begin_data+0x13ac>
   15fd0:	ldr	r0, [sp, #36]	; 0x24
   15fd4:	bl	4d50 <readstat_variable_get_label@plt>
   15fd8:	cmp	r0, #0
   15fdc:	beq	16020 <por_begin_data+0xc58>
   15fe0:	mov	r7, r0
   15fe4:	mov	r0, #67	; 0x43
   15fe8:	mov	r1, r8
   15fec:	add	r2, sp, #42	; 0x2a
   15ff0:	mov	r3, #1
   15ff4:	strh	r0, [sp, #42]	; 0x2a
   15ff8:	mov	r0, r9
   15ffc:	bl	16d1c <por_write_string_n>
   16000:	cmp	r0, #0
   16004:	bne	15560 <por_begin_data+0x198>
   16008:	mov	r0, r9
   1600c:	mov	r1, r8
   16010:	mov	r2, r7
   16014:	bl	16e04 <por_write_string_field>
   16018:	cmp	r0, #0
   1601c:	bne	15560 <por_begin_data+0x198>
   16020:	ldr	r1, [sp, #8]
   16024:	ldr	r0, [r9, #28]
   16028:	add	r1, r1, #1
   1602c:	cmp	r1, r0
   16030:	str	r1, [sp, #8]
   16034:	blt	158dc <por_begin_data+0x514>
   16038:	ldr	r0, [r9, #40]	; 0x28
   1603c:	cmp	r0, #1
   16040:	blt	163a8 <por_begin_data+0xfe0>
   16044:	mov	r0, #0
   16048:	str	r0, [sp, #36]	; 0x24
   1604c:	ldr	r1, [sp, #36]	; 0x24
   16050:	mov	r0, r9
   16054:	bl	4d68 <readstat_get_label_set@plt>
   16058:	mov	r5, r0
   1605c:	ldr	r0, [r0, #264]	; 0x108
   16060:	cmp	r0, #0
   16064:	ldrne	r0, [r5, #276]	; 0x114
   16068:	cmpne	r0, #0
   1606c:	bne	1608c <por_begin_data+0xcc4>
   16070:	ldr	r1, [sp, #36]	; 0x24
   16074:	ldr	r0, [r9, #40]	; 0x28
   16078:	add	r1, r1, #1
   1607c:	cmp	r1, r0
   16080:	str	r1, [sp, #36]	; 0x24
   16084:	blt	1604c <por_begin_data+0xc84>
   16088:	b	163a8 <por_begin_data+0xfe0>
   1608c:	ldr	r0, [r5]
   16090:	mov	r1, r8
   16094:	add	r2, sp, #42	; 0x2a
   16098:	mov	r3, #1
   1609c:	str	r0, [sp, #28]
   160a0:	mov	r0, #68	; 0x44
   160a4:	strh	r0, [sp, #42]	; 0x2a
   160a8:	mov	r0, r9
   160ac:	bl	16d1c <por_write_string_n>
   160b0:	cmp	r0, #0
   160b4:	bne	15560 <por_begin_data+0x198>
   160b8:	vldr	s0, [r5, #276]	; 0x114
   160bc:	add	r0, sp, #88	; 0x58
   160c0:	mov	r1, #256	; 0x100
   160c4:	vcvt.f64.s32	d8, s0
   160c8:	vmov.f64	d0, d8
   160cc:	bl	168f8 <por_write_double_to_buffer>
   160d0:	cmn	r0, #1
   160d4:	beq	166a4 <por_begin_data+0x12dc>
   160d8:	mov	r3, r0
   160dc:	mov	r0, r9
   160e0:	mov	r1, r8
   160e4:	add	r2, sp, #88	; 0x58
   160e8:	bl	16d1c <por_write_string_n>
   160ec:	cmp	r0, #0
   160f0:	bne	15560 <por_begin_data+0x198>
   160f4:	ldr	r0, [r5, #276]	; 0x114
   160f8:	cmp	r0, #1
   160fc:	blt	1613c <por_begin_data+0xd74>
   16100:	mov	r7, #0
   16104:	mov	r0, r5
   16108:	mov	r1, r7
   1610c:	bl	4d8c <readstat_get_label_set_variable@plt>
   16110:	bl	4cb4 <readstat_variable_get_name@plt>
   16114:	mov	r2, r0
   16118:	mov	r0, r9
   1611c:	mov	r1, r8
   16120:	bl	16e04 <por_write_string_field>
   16124:	cmp	r0, #0
   16128:	bne	15560 <por_begin_data+0x198>
   1612c:	ldr	r0, [r5, #276]	; 0x114
   16130:	add	r7, r7, #1
   16134:	cmp	r7, r0
   16138:	blt	16104 <por_begin_data+0xd3c>
   1613c:	vldr	s0, [r5, #264]	; 0x108
   16140:	add	r0, sp, #88	; 0x58
   16144:	mov	r1, #256	; 0x100
   16148:	vcvt.f64.s32	d8, s0
   1614c:	vmov.f64	d0, d8
   16150:	bl	168f8 <por_write_double_to_buffer>
   16154:	cmn	r0, #1
   16158:	beq	166cc <por_begin_data+0x1304>
   1615c:	mov	r3, r0
   16160:	mov	r0, r9
   16164:	mov	r1, r8
   16168:	add	r2, sp, #88	; 0x58
   1616c:	bl	16d1c <por_write_string_n>
   16170:	cmp	r0, #0
   16174:	bne	15560 <por_begin_data+0x198>
   16178:	ldr	r0, [r5, #264]	; 0x108
   1617c:	cmp	r0, #1
   16180:	blt	16070 <por_begin_data+0xca8>
   16184:	mov	r4, #0
   16188:	mov	r0, r5
   1618c:	mov	r1, r4
   16190:	bl	4e04 <readstat_get_value_label@plt>
   16194:	str	r0, [sp, #32]
   16198:	ldr	r0, [sp, #28]
   1619c:	cmp	r0, #5
   161a0:	beq	16214 <por_begin_data+0xe4c>
   161a4:	ldr	r0, [sp, #28]
   161a8:	cmp	r0, #3
   161ac:	beq	16220 <por_begin_data+0xe58>
   161b0:	ldr	r0, [sp, #28]
   161b4:	cmp	r0, #0
   161b8:	bne	16264 <por_begin_data+0xe9c>
   161bc:	ldr	r0, [sp, #32]
   161c0:	mov	r1, #256	; 0x100
   161c4:	ldrd	r6, [r0, #16]
   161c8:	add	r0, sp, #88	; 0x58
   161cc:	vmov	s0, r7
   161d0:	vcvt.f64.u32	d8, s0
   161d4:	vmov.f64	d0, d8
   161d8:	bl	168f8 <por_write_double_to_buffer>
   161dc:	cmn	r0, #1
   161e0:	beq	166f8 <por_begin_data+0x1330>
   161e4:	mov	r3, r0
   161e8:	mov	r0, r9
   161ec:	mov	r1, r8
   161f0:	add	r2, sp, #88	; 0x58
   161f4:	bl	16d1c <por_write_string_n>
   161f8:	cmp	r0, #0
   161fc:	bne	15560 <por_begin_data+0x198>
   16200:	mov	r0, r9
   16204:	mov	r1, r8
   16208:	mov	r2, r6
   1620c:	mov	r3, r7
   16210:	b	16254 <por_begin_data+0xe8c>
   16214:	ldr	r0, [sp, #32]
   16218:	vldr	d8, [r0]
   1621c:	b	1622c <por_begin_data+0xe64>
   16220:	ldr	r0, [sp, #32]
   16224:	vldr	s0, [r0, #8]
   16228:	vcvt.f64.s32	d8, s0
   1622c:	add	r0, sp, #88	; 0x58
   16230:	mov	r1, #256	; 0x100
   16234:	vorr	d0, d8, d8
   16238:	bl	168f8 <por_write_double_to_buffer>
   1623c:	cmn	r0, #1
   16240:	beq	162d8 <por_begin_data+0xf10>
   16244:	mov	r3, r0
   16248:	mov	r0, r9
   1624c:	mov	r1, r8
   16250:	add	r2, sp, #88	; 0x58
   16254:	bl	16d1c <por_write_string_n>
   16258:	mov	sl, r0
   1625c:	cmp	sl, #0
   16260:	bne	15594 <por_begin_data+0x1cc>
   16264:	ldr	r0, [sp, #32]
   16268:	mov	r1, #256	; 0x100
   1626c:	ldrd	r6, [r0, #24]
   16270:	add	r0, sp, #88	; 0x58
   16274:	vmov	s0, r7
   16278:	vcvt.f64.u32	d8, s0
   1627c:	vmov.f64	d0, d8
   16280:	bl	168f8 <por_write_double_to_buffer>
   16284:	cmn	r0, #1
   16288:	beq	165d4 <por_begin_data+0x120c>
   1628c:	mov	r3, r0
   16290:	mov	r0, r9
   16294:	mov	r1, r8
   16298:	add	r2, sp, #88	; 0x58
   1629c:	bl	16d1c <por_write_string_n>
   162a0:	cmp	r0, #0
   162a4:	bne	15560 <por_begin_data+0x198>
   162a8:	mov	r0, r9
   162ac:	mov	r1, r8
   162b0:	mov	r2, r6
   162b4:	mov	r3, r7
   162b8:	bl	16d1c <por_write_string_n>
   162bc:	cmp	r0, #0
   162c0:	bne	15560 <por_begin_data+0x198>
   162c4:	ldr	r0, [r5, #264]	; 0x108
   162c8:	add	r4, r4, #1
   162cc:	cmp	r4, r0
   162d0:	blt	16188 <por_begin_data+0xdc0>
   162d4:	b	16070 <por_begin_data+0xca8>
   162d8:	ldr	r0, [r9, #296]	; 0x128
   162dc:	mov	sl, #13
   162e0:	cmp	r0, #0
   162e4:	beq	1625c <por_begin_data+0xe94>
   162e8:	vstr	d8, [sp]
   162ec:	add	r6, sp, #344	; 0x158
   162f0:	mov	r1, #1024	; 0x400
   162f4:	ldr	r2, [pc, #1308]	; 16818 <por_begin_data+0x1450>
   162f8:	mov	r0, r6
   162fc:	add	r2, pc, r2
   16300:	bl	4bdc <snprintf@plt>
   16304:	ldr	r2, [r9, #296]	; 0x128
   16308:	ldr	r1, [r9, #304]	; 0x130
   1630c:	mov	r0, r6
   16310:	blx	r2
   16314:	cmp	sl, #0
   16318:	beq	16264 <por_begin_data+0xe9c>
   1631c:	b	15594 <por_begin_data+0x1cc>
   16320:	mov	sl, #39	; 0x27
   16324:	b	15594 <por_begin_data+0x1cc>
   16328:	ldr	r0, [r9, #296]	; 0x128
   1632c:	cmp	r0, #0
   16330:	beq	16360 <por_begin_data+0xf98>
   16334:	vstr	d8, [sp]
   16338:	add	r5, sp, #344	; 0x158
   1633c:	mov	r1, #1024	; 0x400
   16340:	ldr	r2, [pc, #1164]	; 167d4 <por_begin_data+0x140c>
   16344:	mov	r0, r5
   16348:	add	r2, pc, r2
   1634c:	bl	4bdc <snprintf@plt>
   16350:	ldr	r2, [r9, #296]	; 0x128
   16354:	ldr	r1, [r9, #304]	; 0x130
   16358:	mov	r0, r5
   1635c:	blx	r2
   16360:	mov	sl, #13
   16364:	b	15594 <por_begin_data+0x1cc>
   16368:	ldr	r0, [r9, #296]	; 0x128
   1636c:	cmp	r0, #0
   16370:	beq	16360 <por_begin_data+0xf98>
   16374:	movw	r1, #0
   16378:	mov	r0, #0
   1637c:	add	r5, sp, #344	; 0x158
   16380:	movt	r1, #16457	; 0x4049
   16384:	strd	r0, [sp]
   16388:	mov	r0, r5
   1638c:	mov	r1, #1024	; 0x400
   16390:	ldr	r2, [pc, #1088]	; 167d8 <por_begin_data+0x1410>
   16394:	add	r2, pc, r2
   16398:	b	1634c <por_begin_data+0xf84>
   1639c:	.word	0x00033ebc
   163a0:	.word	0x00033e78
   163a4:	.word	0x000146a8
   163a8:	mov	r0, #69	; 0x45
   163ac:	add	r2, sp, #42	; 0x2a
   163b0:	mov	r1, r8
   163b4:	mov	r3, #1
   163b8:	strh	r0, [sp, #42]	; 0x2a
   163bc:	mov	r0, r9
   163c0:	bl	16d1c <por_write_string_n>
   163c4:	mov	sl, r0
   163c8:	cmp	r0, #0
   163cc:	bne	15594 <por_begin_data+0x1cc>
   163d0:	vldr	s0, [r9, #52]	; 0x34
   163d4:	add	r0, sp, #88	; 0x58
   163d8:	mov	r1, #256	; 0x100
   163dc:	vcvt.f64.s32	d8, s0
   163e0:	vmov.f64	d0, d8
   163e4:	bl	168f8 <por_write_double_to_buffer>
   163e8:	cmn	r0, #1
   163ec:	beq	1655c <por_begin_data+0x1194>
   163f0:	mov	r3, r0
   163f4:	add	r2, sp, #88	; 0x58
   163f8:	mov	r0, r9
   163fc:	mov	r1, r8
   16400:	bl	16d1c <por_write_string_n>
   16404:	mov	sl, r0
   16408:	cmp	r0, #0
   1640c:	bne	15594 <por_begin_data+0x1cc>
   16410:	ldr	r0, [r9, #52]	; 0x34
   16414:	cmp	r0, #1
   16418:	blt	164a8 <por_begin_data+0x10e0>
   1641c:	mov	r5, #0
   16420:	add	r4, sp, #88	; 0x58
   16424:	ldr	r0, [r9, #48]	; 0x30
   16428:	ldr	r7, [r0, r5, lsl #2]
   1642c:	mov	r0, r7
   16430:	bl	4b58 <strlen@plt>
   16434:	cmp	r0, #80	; 0x50
   16438:	bhi	167a4 <por_begin_data+0x13dc>
   1643c:	mov	r6, r0
   16440:	mov	r0, r4
   16444:	mov	r1, #256	; 0x100
   16448:	vmov	s0, r6
   1644c:	vcvt.f64.u32	d8, s0
   16450:	vmov.f64	d0, d8
   16454:	bl	168f8 <por_write_double_to_buffer>
   16458:	cmn	r0, #1
   1645c:	beq	167ac <por_begin_data+0x13e4>
   16460:	mov	r3, r0
   16464:	mov	r0, r9
   16468:	mov	r1, r8
   1646c:	mov	r2, r4
   16470:	bl	16d1c <por_write_string_n>
   16474:	cmp	r0, #0
   16478:	bne	15560 <por_begin_data+0x198>
   1647c:	mov	r0, r9
   16480:	mov	r1, r8
   16484:	mov	r2, r7
   16488:	mov	r3, r6
   1648c:	bl	16d1c <por_write_string_n>
   16490:	cmp	r0, #0
   16494:	bne	15560 <por_begin_data+0x198>
   16498:	ldr	r0, [r9, #52]	; 0x34
   1649c:	add	r5, r5, #1
   164a0:	cmp	r5, r0
   164a4:	blt	16424 <por_begin_data+0x105c>
   164a8:	mov	r0, #70	; 0x46
   164ac:	add	r2, sp, #42	; 0x2a
   164b0:	mov	r1, r8
   164b4:	mov	r3, #1
   164b8:	strh	r0, [sp, #42]	; 0x2a
   164bc:	mov	r0, r9
   164c0:	bl	16d1c <por_write_string_n>
   164c4:	mov	sl, r0
   164c8:	cmp	r0, #0
   164cc:	bne	15594 <por_begin_data+0x1cc>
   164d0:	mov	sl, #0
   164d4:	str	r8, [r9, #300]	; 0x12c
   164d8:	b	155ac <por_begin_data+0x1e4>
   164dc:	.word	0x000145e0
   164e0:	ldr	r0, [r9, #296]	; 0x128
   164e4:	cmp	r0, #0
   164e8:	beq	16360 <por_begin_data+0xf98>
   164ec:	vstr	d8, [sp]
   164f0:	add	r5, sp, #344	; 0x158
   164f4:	mov	r1, #1024	; 0x400
   164f8:	ldr	r2, [pc, #732]	; 167dc <por_begin_data+0x1414>
   164fc:	mov	r0, r5
   16500:	add	r2, pc, r2
   16504:	b	1634c <por_begin_data+0xf84>
   16508:	ldr	r0, [r9, #296]	; 0x128
   1650c:	cmp	r0, #0
   16510:	beq	16360 <por_begin_data+0xf98>
   16514:	vstr	d8, [sp]
   16518:	add	r5, sp, #344	; 0x158
   1651c:	mov	r1, #1024	; 0x400
   16520:	ldr	r2, [pc, #720]	; 167f8 <por_begin_data+0x1430>
   16524:	mov	r0, r5
   16528:	add	r2, pc, r2
   1652c:	b	1634c <por_begin_data+0xf84>
   16530:	ldr	r0, [r9, #296]	; 0x128
   16534:	cmp	r0, #0
   16538:	beq	16360 <por_begin_data+0xf98>
   1653c:	vstr	d8, [sp]
   16540:	add	r5, sp, #344	; 0x158
   16544:	mov	r1, #1024	; 0x400
   16548:	ldr	r2, [pc, #656]	; 167e0 <por_begin_data+0x1418>
   1654c:	mov	r0, r5
   16550:	add	r2, pc, r2
   16554:	b	1634c <por_begin_data+0xf84>
   16558:	.word	0x000144c0
   1655c:	ldr	r0, [r9, #296]	; 0x128
   16560:	cmp	r0, #0
   16564:	beq	16360 <por_begin_data+0xf98>
   16568:	vstr	d8, [sp]
   1656c:	add	r5, sp, #344	; 0x158
   16570:	mov	r1, #1024	; 0x400
   16574:	ldr	r2, [pc, #676]	; 16820 <por_begin_data+0x1458>
   16578:	mov	r0, r5
   1657c:	add	r2, pc, r2
   16580:	b	1634c <por_begin_data+0xf84>
   16584:	ldr	r0, [r9, #296]	; 0x128
   16588:	cmp	r0, #0
   1658c:	beq	16360 <por_begin_data+0xf98>
   16590:	vstr	d8, [sp]
   16594:	add	r5, sp, #344	; 0x158
   16598:	mov	r1, #1024	; 0x400
   1659c:	ldr	r2, [pc, #576]	; 167e4 <por_begin_data+0x141c>
   165a0:	mov	r0, r5
   165a4:	add	r2, pc, r2
   165a8:	b	1634c <por_begin_data+0xf84>
   165ac:	ldr	r0, [r9, #296]	; 0x128
   165b0:	cmp	r0, #0
   165b4:	beq	16360 <por_begin_data+0xf98>
   165b8:	vstr	d8, [sp]
   165bc:	add	r5, sp, #344	; 0x158
   165c0:	mov	r1, #1024	; 0x400
   165c4:	ldr	r2, [pc, #540]	; 167e8 <por_begin_data+0x1420>
   165c8:	mov	r0, r5
   165cc:	add	r2, pc, r2
   165d0:	b	1634c <por_begin_data+0xf84>
   165d4:	ldr	r0, [r9, #296]	; 0x128
   165d8:	cmp	r0, #0
   165dc:	beq	16360 <por_begin_data+0xf98>
   165e0:	vstr	d8, [sp]
   165e4:	add	r5, sp, #344	; 0x158
   165e8:	mov	r1, #1024	; 0x400
   165ec:	ldr	r2, [pc, #552]	; 1681c <por_begin_data+0x1454>
   165f0:	mov	r0, r5
   165f4:	add	r2, pc, r2
   165f8:	b	1634c <por_begin_data+0xf84>
   165fc:	ldr	r0, [r9, #296]	; 0x128
   16600:	cmp	r0, #0
   16604:	beq	16360 <por_begin_data+0xf98>
   16608:	vstr	d8, [sp]
   1660c:	add	r5, sp, #344	; 0x158
   16610:	mov	r1, #1024	; 0x400
   16614:	ldr	r2, [pc, #464]	; 167ec <por_begin_data+0x1424>
   16618:	mov	r0, r5
   1661c:	add	r2, pc, r2
   16620:	b	1634c <por_begin_data+0xf84>
   16624:	ldr	r0, [r9, #296]	; 0x128
   16628:	cmp	r0, #0
   1662c:	beq	16360 <por_begin_data+0xf98>
   16630:	vstr	d8, [sp]
   16634:	add	r5, sp, #344	; 0x158
   16638:	mov	r1, #1024	; 0x400
   1663c:	ldr	r2, [pc, #428]	; 167f0 <por_begin_data+0x1428>
   16640:	mov	r0, r5
   16644:	add	r2, pc, r2
   16648:	b	1634c <por_begin_data+0xf84>
   1664c:	.word	0x00014395
   16650:	ldr	r0, [r9, #296]	; 0x128
   16654:	cmp	r0, #0
   16658:	beq	16360 <por_begin_data+0xf98>
   1665c:	vstr	d8, [sp]
   16660:	add	r5, sp, #344	; 0x158
   16664:	mov	r1, #1024	; 0x400
   16668:	ldr	r2, [pc, #388]	; 167f4 <por_begin_data+0x142c>
   1666c:	mov	r0, r5
   16670:	add	r2, pc, r2
   16674:	b	1634c <por_begin_data+0xf84>
   16678:	ldr	r0, [r9, #296]	; 0x128
   1667c:	cmp	r0, #0
   16680:	beq	16360 <por_begin_data+0xf98>
   16684:	vstr	d9, [sp]
   16688:	add	r5, sp, #344	; 0x158
   1668c:	mov	r1, #1024	; 0x400
   16690:	ldr	r2, [pc, #356]	; 167fc <por_begin_data+0x1434>
   16694:	mov	r0, r5
   16698:	add	r2, pc, r2
   1669c:	b	1634c <por_begin_data+0xf84>
   166a0:	.word	0x0001433e
   166a4:	ldr	r0, [r9, #296]	; 0x128
   166a8:	cmp	r0, #0
   166ac:	beq	16360 <por_begin_data+0xf98>
   166b0:	vstr	d8, [sp]
   166b4:	add	r5, sp, #344	; 0x158
   166b8:	mov	r1, #1024	; 0x400
   166bc:	ldr	r2, [pc, #328]	; 1680c <por_begin_data+0x1444>
   166c0:	mov	r0, r5
   166c4:	add	r2, pc, r2
   166c8:	b	1634c <por_begin_data+0xf84>
   166cc:	ldr	r0, [r9, #296]	; 0x128
   166d0:	cmp	r0, #0
   166d4:	beq	16360 <por_begin_data+0xf98>
   166d8:	vstr	d8, [sp]
   166dc:	add	r5, sp, #344	; 0x158
   166e0:	mov	r1, #1024	; 0x400
   166e4:	ldr	r2, [pc, #292]	; 16810 <por_begin_data+0x1448>
   166e8:	mov	r0, r5
   166ec:	add	r2, pc, r2
   166f0:	b	1634c <por_begin_data+0xf84>
   166f4:	.word	0x0001442d
   166f8:	ldr	r0, [r9, #296]	; 0x128
   166fc:	cmp	r0, #0
   16700:	beq	16360 <por_begin_data+0xf98>
   16704:	vstr	d8, [sp]
   16708:	add	r5, sp, #344	; 0x158
   1670c:	mov	r1, #1024	; 0x400
   16710:	ldr	r2, [pc, #252]	; 16814 <por_begin_data+0x144c>
   16714:	mov	r0, r5
   16718:	add	r2, pc, r2
   1671c:	b	1634c <por_begin_data+0xf84>
   16720:	ldr	r0, [r9, #296]	; 0x128
   16724:	cmp	r0, #0
   16728:	beq	16360 <por_begin_data+0xf98>
   1672c:	vstr	d9, [sp]
   16730:	add	r5, sp, #344	; 0x158
   16734:	mov	r1, #1024	; 0x400
   16738:	ldr	r2, [pc, #192]	; 16800 <por_begin_data+0x1438>
   1673c:	mov	r0, r5
   16740:	add	r2, pc, r2
   16744:	b	1634c <por_begin_data+0xf84>
   16748:	.word	0x000143c8
   1674c:	ldr	r0, [r9, #296]	; 0x128
   16750:	cmp	r0, #0
   16754:	beq	16360 <por_begin_data+0xf98>
   16758:	vstr	d8, [sp]
   1675c:	add	r5, sp, #344	; 0x158
   16760:	mov	r1, #1024	; 0x400
   16764:	ldr	r2, [pc, #152]	; 16804 <por_begin_data+0x143c>
   16768:	mov	r0, r5
   1676c:	add	r2, pc, r2
   16770:	b	1634c <por_begin_data+0xf84>
   16774:	mov	sl, #31
   16778:	b	15594 <por_begin_data+0x1cc>
   1677c:	ldr	r0, [r9, #296]	; 0x128
   16780:	cmp	r0, #0
   16784:	beq	16360 <por_begin_data+0xf98>
   16788:	vstr	d8, [sp]
   1678c:	add	r5, sp, #344	; 0x158
   16790:	mov	r1, #1024	; 0x400
   16794:	ldr	r2, [pc, #108]	; 16808 <por_begin_data+0x1440>
   16798:	mov	r0, r5
   1679c:	add	r2, pc, r2
   167a0:	b	1634c <por_begin_data+0xf84>
   167a4:	mov	sl, #32
   167a8:	b	15594 <por_begin_data+0x1cc>
   167ac:	ldr	r0, [r9, #296]	; 0x128
   167b0:	cmp	r0, #0
   167b4:	beq	16360 <por_begin_data+0xf98>
   167b8:	vstr	d8, [sp]
   167bc:	add	r5, sp, #344	; 0x158
   167c0:	mov	r1, #1024	; 0x400
   167c4:	ldr	r2, [pc, #88]	; 16824 <por_begin_data+0x145c>
   167c8:	mov	r0, r5
   167cc:	add	r2, pc, r2
   167d0:	b	1634c <por_begin_data+0xf84>
   167d4:	.word	0x000137cb
   167d8:	.word	0x0001377f
   167dc:	.word	0x00013613
   167e0:	.word	0x000135c3
   167e4:	.word	0x0001356f
   167e8:	.word	0x00013547
   167ec:	.word	0x000134f7
   167f0:	.word	0x000134cf
   167f4:	.word	0x000134a3
   167f8:	.word	0x000135eb
   167fc:	.word	0x0001347b
   16800:	.word	0x000133d3
   16804:	.word	0x000133a7
   16808:	.word	0x00013377
   1680c:	.word	0x0001344f
   16810:	.word	0x00013427
   16814:	.word	0x000133fb
   16818:	.word	0x00013817
   1681c:	.word	0x0001351f
   16820:	.word	0x00013597
   16824:	.word	0x00013347

00016828 <por_write_row>:
   16828:	push	{fp, lr}
   1682c:	mov	fp, sp
   16830:	mov	ip, r1
   16834:	mov	r3, #0
   16838:	cmp	r2, #0
   1683c:	beq	16868 <por_write_row+0x40>
   16840:	mov	r1, #0
   16844:	ldrb	lr, [ip, r1]
   16848:	cmp	lr, #0
   1684c:	beq	1685c <por_write_row+0x34>
   16850:	cmp	r1, r3
   16854:	strbne	lr, [ip, r3]
   16858:	add	r3, r3, #1
   1685c:	add	r1, r1, #1
   16860:	cmp	r2, r1
   16864:	bne	16844 <por_write_row+0x1c>
   16868:	ldr	r1, [r0, #300]	; 0x12c
   1686c:	mov	r2, ip
   16870:	pop	{fp, lr}
   16874:	b	16d1c <por_write_string_n>

00016878 <por_end_data>:
   16878:	push	{r4, r5, fp, lr}
   1687c:	add	fp, sp, #8
   16880:	sub	sp, sp, #8
   16884:	ldr	r1, [r0, #300]	; 0x12c
   16888:	mov	r4, r0
   1688c:	mov	r0, #90	; 0x5a
   16890:	add	r2, sp, #6
   16894:	mov	r3, #1
   16898:	strh	r0, [sp, #6]
   1689c:	mov	r0, r4
   168a0:	bl	16d1c <por_write_string_n>
   168a4:	mov	r5, r0
   168a8:	cmp	r0, #0
   168ac:	bne	168cc <por_end_data+0x54>
   168b0:	ldr	r3, [pc, #60]	; 168f4 <por_end_data+0x7c>
   168b4:	mov	r0, r4
   168b8:	mov	r1, #90	; 0x5a
   168bc:	mov	r2, #80	; 0x50
   168c0:	add	r3, pc, r3
   168c4:	bl	4e1c <readstat_write_line_padding@plt>
   168c8:	mov	r5, r0
   168cc:	ldr	r4, [r4, #300]	; 0x12c
   168d0:	ldr	r0, [r4]
   168d4:	cmp	r0, #0
   168d8:	beq	168e0 <por_end_data+0x68>
   168dc:	bl	4864 <free@plt>
   168e0:	mov	r0, r4
   168e4:	bl	4864 <free@plt>
   168e8:	mov	r0, r5
   168ec:	sub	sp, fp, #8
   168f0:	pop	{r4, r5, fp, pc}
   168f4:	.word	0x00013224

000168f8 <por_write_double_to_buffer>:
   168f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   168fc:	add	fp, sp, #28
   16900:	sub	sp, sp, #4
   16904:	vpush	{d8-d9}
   16908:	sub	sp, sp, #16
   1690c:	vmov.f64	d9, d0
   16910:	mov	r8, r0
   16914:	bl	4c84 <__isnan@plt>
   16918:	cmp	r0, #0
   1691c:	beq	16930 <por_write_double_to_buffer+0x38>
   16920:	movw	r0, #11818	; 0x2e2a
   16924:	strh	r0, [r8]
   16928:	mov	r0, #2
   1692c:	b	16cfc <por_write_double_to_buffer+0x404>
   16930:	vmov.f64	d0, d9
   16934:	bl	4978 <__isinf@plt>
   16938:	cmp	r0, #0
   1693c:	beq	16984 <por_write_double_to_buffer+0x8c>
   16940:	vcmpe.f64	d9, #0.0
   16944:	mov	r0, #0
   16948:	movw	r2, #11057	; 0x2b31
   1694c:	vmrs	APSR_nzcv, fpscr
   16950:	movmi	r0, #45	; 0x2d
   16954:	strbmi	r0, [r8]
   16958:	movmi	r0, #1
   1695c:	add	r1, r8, r0
   16960:	orr	r0, r0, #2
   16964:	strh	r2, [r1]
   16968:	movw	r1, #21588	; 0x5454
   1696c:	mov	r2, r8
   16970:	strh	r1, [r2, r0]!
   16974:	mov	r1, #47	; 0x2f
   16978:	add	r0, r0, #3
   1697c:	strb	r1, [r2, #2]
   16980:	b	16cfc <por_write_double_to_buffer+0x404>
   16984:	add	r0, sp, #8
   16988:	vabs.f64	d0, d9
   1698c:	bl	4ae0 <modf@plt>
   16990:	ldr	r0, [sp, #8]
   16994:	ldr	r1, [sp, #12]
   16998:	vmov.f64	d8, d0
   1699c:	bl	288e8 <__aeabi_d2lz>
   169a0:	vcmpe.f64	d9, #0.0
   169a4:	mov	r7, r0
   169a8:	mov	r4, r1
   169ac:	mov	r5, #0
   169b0:	str	r8, [sp, #4]
   169b4:	vmrs	APSR_nzcv, fpscr
   169b8:	movmi	r0, #45	; 0x2d
   169bc:	movmi	r5, #1
   169c0:	strbmi	r0, [r8]
   169c4:	orrs	r0, r7, r4
   169c8:	beq	16a78 <por_write_double_to_buffer+0x180>
   169cc:	mov	r0, r7
   169d0:	mov	r1, r4
   169d4:	mov	r2, #30
   169d8:	mov	r3, #0
   169dc:	mov	r9, #0
   169e0:	bl	287c8 <__aeabi_ldivmod>
   169e4:	vcmp.f64	d8, #0.0
   169e8:	str	r5, [sp]
   169ec:	vmrs	APSR_nzcv, fpscr
   169f0:	bne	16a94 <por_write_double_to_buffer+0x19c>
   169f4:	orrs	r0, r2, r3
   169f8:	bne	16a94 <por_write_double_to_buffer+0x19c>
   169fc:	mov	r9, #0
   16a00:	mov	sl, #0
   16a04:	mov	r0, r7
   16a08:	mov	r1, r4
   16a0c:	mov	r2, #30
   16a10:	mov	r3, #0
   16a14:	mov	r5, r4
   16a18:	mov	r6, r7
   16a1c:	bl	287c8 <__aeabi_ldivmod>
   16a20:	mov	r2, #30
   16a24:	mov	r3, #0
   16a28:	mov	r7, r0
   16a2c:	mov	r4, r1
   16a30:	bl	287c8 <__aeabi_ldivmod>
   16a34:	adds	r9, r9, #1
   16a38:	adc	sl, sl, #0
   16a3c:	adds	r0, r6, #29
   16a40:	adc	r1, r5, #0
   16a44:	subs	r0, r0, #59	; 0x3b
   16a48:	sbcs	r0, r1, #0
   16a4c:	bcc	16a58 <por_write_double_to_buffer+0x160>
   16a50:	orrs	r0, r2, r3
   16a54:	beq	16a04 <por_write_double_to_buffer+0x10c>
   16a58:	adds	r0, r6, #29
   16a5c:	mov	r6, #0
   16a60:	adc	r1, r5, #0
   16a64:	ldr	r5, [sp]
   16a68:	subs	r0, r0, #59	; 0x3b
   16a6c:	sbcs	r0, r1, #0
   16a70:	bcs	16a98 <por_write_double_to_buffer+0x1a0>
   16a74:	b	16b60 <por_write_double_to_buffer+0x268>
   16a78:	mov	r0, #48	; 0x30
   16a7c:	mov	r6, #0
   16a80:	mov	r9, #0
   16a84:	mov	sl, #0
   16a88:	strb	r0, [r8, r5]
   16a8c:	add	r5, r5, #1
   16a90:	b	16b64 <por_write_double_to_buffer+0x26c>
   16a94:	mov	sl, #0
   16a98:	add	r5, r8, r5
   16a9c:	mvn	r8, #0
   16aa0:	mov	r0, r7
   16aa4:	mov	r1, r4
   16aa8:	mov	r2, #30
   16aac:	mov	r3, #0
   16ab0:	bl	2889c <__aeabi_uldivmod>
   16ab4:	mov	r2, #30
   16ab8:	rsb	r6, r1, r1, lsl #4
   16abc:	umull	r2, r3, r0, r2
   16ac0:	add	r3, r3, r6, lsl #1
   16ac4:	subs	r2, r7, r2
   16ac8:	sbc	r3, r4, r3
   16acc:	subs	r6, r2, #10
   16ad0:	sbcs	r3, r3, #0
   16ad4:	mov	r3, #0
   16ad8:	movwcc	r3, #1
   16adc:	cmp	r3, #0
   16ae0:	mov	r3, #55	; 0x37
   16ae4:	movwne	r3, #48	; 0x30
   16ae8:	add	r2, r3, r2
   16aec:	add	r3, r5, r8
   16af0:	add	r8, r8, #1
   16af4:	strb	r2, [r3, #1]
   16af8:	subs	r3, r7, #30
   16afc:	mov	r7, r0
   16b00:	sbcs	r3, r4, #0
   16b04:	mov	r4, r1
   16b08:	bcs	16aa0 <por_write_double_to_buffer+0x1a8>
   16b0c:	cmp	r8, #0
   16b10:	beq	16b58 <por_write_double_to_buffer+0x260>
   16b14:	ldrb	r0, [r5]
   16b18:	add	r6, r8, #1
   16b1c:	cmp	r8, #3
   16b20:	strb	r2, [r5]
   16b24:	strb	r0, [r5, r8]
   16b28:	bcc	16b5c <por_write_double_to_buffer+0x264>
   16b2c:	sub	r0, r8, #1
   16b30:	mov	r1, #1
   16b34:	ldrb	r2, [r5, r1]
   16b38:	ldrb	r3, [r5, r0]
   16b3c:	strb	r3, [r5, r1]
   16b40:	strb	r2, [r5, r0]
   16b44:	sub	r0, r0, #1
   16b48:	add	r1, r1, #1
   16b4c:	cmp	r0, r1
   16b50:	bgt	16b34 <por_write_double_to_buffer+0x23c>
   16b54:	b	16b5c <por_write_double_to_buffer+0x264>
   16b58:	mov	r6, #1
   16b5c:	ldm	sp, {r5, r8}
   16b60:	add	r5, r6, r5
   16b64:	vcmp.f64	d8, #0.0
   16b68:	vmrs	APSR_nzcv, fpscr
   16b6c:	beq	16bfc <por_write_double_to_buffer+0x304>
   16b70:	mov	r0, #46	; 0x2e
   16b74:	cmp	r6, #49	; 0x31
   16b78:	strb	r0, [r8, r5]
   16b7c:	add	r5, r5, #1
   16b80:	bgt	16bfc <por_write_double_to_buffer+0x304>
   16b84:	vcmp.f64	d8, #0.0
   16b88:	vmrs	APSR_nzcv, fpscr
   16b8c:	beq	16bfc <por_write_double_to_buffer+0x304>
   16b90:	vmov.f64	d9, #62	; 0x41f00000  30.0
   16b94:	add	r4, sp, #8
   16b98:	vmul.f64	d0, d8, d9
   16b9c:	mov	r0, r4
   16ba0:	bl	4ae0 <modf@plt>
   16ba4:	ldr	r0, [sp, #8]
   16ba8:	ldr	r1, [sp, #12]
   16bac:	vmov.f64	d8, d0
   16bb0:	bl	288e8 <__aeabi_d2lz>
   16bb4:	cmp	r1, #0
   16bb8:	blt	16d14 <por_write_double_to_buffer+0x41c>
   16bbc:	subs	r2, r0, #10
   16bc0:	sbcs	r1, r1, #0
   16bc4:	mov	r1, #0
   16bc8:	movwcc	r1, #1
   16bcc:	cmp	r1, #0
   16bd0:	mov	r1, #55	; 0x37
   16bd4:	movwne	r1, #48	; 0x30
   16bd8:	cmp	r6, #48	; 0x30
   16bdc:	add	r0, r1, r0
   16be0:	strb	r0, [r8, r5]
   16be4:	add	r5, r5, #1
   16be8:	bgt	16bfc <por_write_double_to_buffer+0x304>
   16bec:	vcmp.f64	d8, #0.0
   16bf0:	add	r6, r6, #1
   16bf4:	vmrs	APSR_nzcv, fpscr
   16bf8:	bne	16b98 <por_write_double_to_buffer+0x2a0>
   16bfc:	orrs	r0, r9, sl
   16c00:	beq	16cf0 <por_write_double_to_buffer+0x3f8>
   16c04:	mov	r0, #43	; 0x2b
   16c08:	mvn	r4, #0
   16c0c:	strb	r0, [r8, r5]!
   16c10:	add	r0, r5, #1
   16c14:	add	r7, r8, #1
   16c18:	mov	r8, #30
   16c1c:	str	r0, [sp]
   16c20:	mov	r0, r9
   16c24:	mov	r1, sl
   16c28:	mov	r2, #30
   16c2c:	mov	r3, #0
   16c30:	bl	2889c <__aeabi_uldivmod>
   16c34:	umull	r2, r3, r0, r8
   16c38:	rsb	r6, r1, r1, lsl #4
   16c3c:	add	r3, r3, r6, lsl #1
   16c40:	subs	r2, r9, r2
   16c44:	sbc	r3, sl, r3
   16c48:	subs	r6, r2, #10
   16c4c:	sbcs	r3, r3, #0
   16c50:	mov	r3, #0
   16c54:	movwcc	r3, #1
   16c58:	cmp	r3, #0
   16c5c:	mov	r3, #55	; 0x37
   16c60:	movwne	r3, #48	; 0x30
   16c64:	add	r2, r3, r2
   16c68:	add	r3, r7, r4
   16c6c:	add	r4, r4, #1
   16c70:	strb	r2, [r3, #1]
   16c74:	subs	r3, r9, #30
   16c78:	mov	r9, r0
   16c7c:	sbcs	r3, sl, #0
   16c80:	mov	sl, r1
   16c84:	bcs	16c20 <por_write_double_to_buffer+0x328>
   16c88:	ldr	r8, [sp, #4]
   16c8c:	cmp	r4, #0
   16c90:	beq	16ce8 <por_write_double_to_buffer+0x3f0>
   16c94:	ldr	r0, [sp]
   16c98:	cmp	r4, #3
   16c9c:	ldrb	r1, [r8, r0]
   16ca0:	strb	r2, [r8, r0]
   16ca4:	add	r0, r8, r5
   16ca8:	add	r2, r0, r4
   16cac:	strb	r1, [r2, #1]
   16cb0:	bcc	16ce8 <por_write_double_to_buffer+0x3f0>
   16cb4:	mov	r1, #2
   16cb8:	mov	r2, r4
   16cbc:	ldrb	r3, [r0, r1]
   16cc0:	ldrb	r7, [r0, r2]
   16cc4:	strb	r7, [r0, r1]
   16cc8:	strb	r3, [r0, r2]
   16ccc:	sub	r7, r2, #1
   16cd0:	sub	r2, r2, #2
   16cd4:	add	r3, r1, #1
   16cd8:	cmp	r2, r1
   16cdc:	mov	r1, r3
   16ce0:	mov	r2, r7
   16ce4:	bgt	16cbc <por_write_double_to_buffer+0x3c4>
   16ce8:	add	r0, r5, r4
   16cec:	add	r5, r0, #2
   16cf0:	mov	r0, #47	; 0x2f
   16cf4:	strb	r0, [r8, r5]
   16cf8:	add	r0, r5, #1
   16cfc:	mov	r1, #0
   16d00:	strb	r1, [r8, r0]
   16d04:	sub	sp, fp, #48	; 0x30
   16d08:	vpop	{d8-d9}
   16d0c:	add	sp, sp, #4
   16d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d14:	mvn	r0, #0
   16d18:	b	16d04 <por_write_double_to_buffer+0x40c>

00016d1c <por_write_string_n>:
   16d1c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16d20:	add	fp, sp, #24
   16d24:	sub	sp, sp, #24
   16d28:	sub	sp, sp, #1024	; 0x400
   16d2c:	mov	r9, r0
   16d30:	mov	r0, r3
   16d34:	mov	r6, r3
   16d38:	mov	r7, r2
   16d3c:	mov	r5, r1
   16d40:	bl	4a74 <malloc@plt>
   16d44:	mov	r4, r0
   16d48:	ldm	r5, {r0, r1}
   16d4c:	mov	r3, r6
   16d50:	mov	r2, r4
   16d54:	stm	sp, {r0, r1}
   16d58:	mov	r0, r7
   16d5c:	mov	r1, r6
   16d60:	bl	4ce4 <por_utf8_decode@plt>
   16d64:	cmn	r0, #1
   16d68:	beq	16d9c <por_write_string_n+0x80>
   16d6c:	mov	r2, r0
   16d70:	ldr	r0, [pc, #136]	; 16e00 <por_write_string_n+0xe4>
   16d74:	mov	r1, r4
   16d78:	mov	r3, #80	; 0x50
   16d7c:	add	r0, pc, r0
   16d80:	str	r0, [sp]
   16d84:	mov	r0, r9
   16d88:	bl	4e58 <readstat_write_bytes_as_lines@plt>
   16d8c:	mov	r8, r0
   16d90:	cmp	r4, #0
   16d94:	bne	16de8 <por_write_string_n+0xcc>
   16d98:	b	16df0 <por_write_string_n+0xd4>
   16d9c:	ldr	r0, [r9, #296]	; 0x128
   16da0:	mov	r8, #16
   16da4:	cmp	r0, #0
   16da8:	beq	16de0 <por_write_string_n+0xc4>
   16dac:	mov	r0, #0
   16db0:	str	r6, [sp]
   16db4:	add	r5, sp, #20
   16db8:	mov	r1, #1024	; 0x400
   16dbc:	stmib	sp, {r0, r6, r7}
   16dc0:	mov	r0, r5
   16dc4:	ldr	r2, [pc, #48]	; 16dfc <por_write_string_n+0xe0>
   16dc8:	add	r2, pc, r2
   16dcc:	bl	4bdc <snprintf@plt>
   16dd0:	ldr	r2, [r9, #296]	; 0x128
   16dd4:	ldr	r1, [r9, #304]	; 0x130
   16dd8:	mov	r0, r5
   16ddc:	blx	r2
   16de0:	cmp	r4, #0
   16de4:	beq	16df0 <por_write_string_n+0xd4>
   16de8:	mov	r0, r4
   16dec:	bl	4864 <free@plt>
   16df0:	mov	r0, r8
   16df4:	sub	sp, fp, #24
   16df8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16dfc:	.word	0x00012d1f
   16e00:	.word	0x00012d68

00016e04 <por_write_string_field>:
   16e04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16e08:	add	fp, sp, #24
   16e0c:	vpush	{d8}
   16e10:	sub	sp, sp, #264	; 0x108
   16e14:	sub	sp, sp, #1024	; 0x400
   16e18:	mov	r4, r0
   16e1c:	mov	r0, r2
   16e20:	mov	r5, r2
   16e24:	mov	r6, r1
   16e28:	bl	4b58 <strlen@plt>
   16e2c:	mov	r7, r0
   16e30:	add	r0, sp, #8
   16e34:	mov	r1, #256	; 0x100
   16e38:	vmov	s0, r7
   16e3c:	vcvt.f64.u32	d8, s0
   16e40:	vmov.f64	d0, d8
   16e44:	bl	168f8 <por_write_double_to_buffer>
   16e48:	cmn	r0, #1
   16e4c:	beq	16e84 <por_write_string_field+0x80>
   16e50:	mov	r3, r0
   16e54:	add	r2, sp, #8
   16e58:	mov	r0, r4
   16e5c:	mov	r1, r6
   16e60:	bl	16d1c <por_write_string_n>
   16e64:	cmp	r0, #0
   16e68:	bne	16ec0 <por_write_string_field+0xbc>
   16e6c:	mov	r0, r4
   16e70:	mov	r1, r6
   16e74:	mov	r2, r5
   16e78:	mov	r3, r7
   16e7c:	bl	16d1c <por_write_string_n>
   16e80:	b	16ec0 <por_write_string_field+0xbc>
   16e84:	ldr	r0, [r4, #296]	; 0x128
   16e88:	cmp	r0, #0
   16e8c:	beq	16ebc <por_write_string_field+0xb8>
   16e90:	vstr	d8, [sp]
   16e94:	add	r5, sp, #264	; 0x108
   16e98:	mov	r1, #1024	; 0x400
   16e9c:	ldr	r2, [pc, #40]	; 16ecc <por_write_string_field+0xc8>
   16ea0:	mov	r0, r5
   16ea4:	add	r2, pc, r2
   16ea8:	bl	4bdc <snprintf@plt>
   16eac:	ldr	r2, [r4, #296]	; 0x128
   16eb0:	ldr	r1, [r4, #304]	; 0x130
   16eb4:	mov	r0, r5
   16eb8:	blx	r2
   16ebc:	mov	r0, #13
   16ec0:	sub	sp, fp, #32
   16ec4:	vpop	{d8}
   16ec8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16ecc:	.word	0x00012c6f

00016ed0 <sav_ctx_init>:
   16ed0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16ed4:	add	fp, sp, #24
   16ed8:	mov	r8, r1
   16edc:	mov	r7, r0
   16ee0:	mov	r0, #1
   16ee4:	mov	r1, #440	; 0x1b8
   16ee8:	bl	4954 <readstat_calloc@plt>
   16eec:	mov	r4, #0
   16ef0:	cmp	r0, #0
   16ef4:	beq	17054 <sav_ctx_init+0x184>
   16ef8:	mov	r6, r0
   16efc:	ldr	r0, [r7]
   16f00:	movw	r1, #17956	; 0x4624
   16f04:	movt	r1, #12876	; 0x324c
   16f08:	cmp	r0, r1
   16f0c:	beq	16f2c <sav_ctx_init+0x5c>
   16f10:	ldr	r0, [r7]
   16f14:	movw	r1, #17956	; 0x4624
   16f18:	movt	r1, #13132	; 0x334c
   16f1c:	cmp	r0, r1
   16f20:	bne	1705c <sav_ctx_init+0x18c>
   16f24:	mov	r0, #3
   16f28:	b	16f30 <sav_ctx_init+0x60>
   16f2c:	mov	r0, #2
   16f30:	str	r0, [r6, #424]	; 0x1a8
   16f34:	ldr	r0, [r7, #64]	; 0x40
   16f38:	ldrb	r1, [r6, #436]	; 0x1b4
   16f3c:	orr	r0, r0, #1
   16f40:	and	r1, r1, #254	; 0xfe
   16f44:	subs	r0, r0, #3
   16f48:	movwne	r0, #1
   16f4c:	orr	r0, r1, r0
   16f50:	strb	r0, [r6, #436]	; 0x1b4
   16f54:	bl	4858 <machine_is_little_endian@plt>
   16f58:	ldrb	r1, [r6, #436]	; 0x1b4
   16f5c:	mov	r5, #1
   16f60:	and	r1, r1, #1
   16f64:	cmp	r0, r1
   16f68:	mov	r0, #1
   16f6c:	movweq	r0, #2
   16f70:	str	r0, [r6, #432]	; 0x1b0
   16f74:	ldr	r0, [r7, #72]	; 0x48
   16f78:	cmp	r0, #1
   16f7c:	beq	16f9c <sav_ctx_init+0xcc>
   16f80:	bl	4768 <byteswap4@plt>
   16f84:	cmp	r0, #1
   16f88:	beq	16f9c <sav_ctx_init+0xcc>
   16f8c:	ldr	r0, [r7, #72]	; 0x48
   16f90:	mov	r5, #2
   16f94:	cmp	r0, #2
   16f98:	bne	1706c <sav_ctx_init+0x19c>
   16f9c:	str	r5, [r6, #428]	; 0x1ac
   16fa0:	ldrb	r1, [r6, #436]	; 0x1b4
   16fa4:	ldr	r0, [r7, #80]	; 0x50
   16fa8:	tst	r1, #1
   16fac:	bne	16fc0 <sav_ctx_init+0xf0>
   16fb0:	str	r0, [r6, #352]	; 0x160
   16fb4:	mov	r1, #1
   16fb8:	ldr	r0, [r7, #76]	; 0x4c
   16fbc:	b	16fec <sav_ctx_init+0x11c>
   16fc0:	bl	4768 <byteswap4@plt>
   16fc4:	str	r0, [r6, #352]	; 0x160
   16fc8:	mov	r1, #1
   16fcc:	ldrb	r2, [r6, #436]	; 0x1b4
   16fd0:	ldr	r0, [r7, #76]	; 0x4c
   16fd4:	tst	r2, #1
   16fd8:	beq	16fec <sav_ctx_init+0x11c>
   16fdc:	bl	4768 <byteswap4@plt>
   16fe0:	ldrb	r1, [r6, #436]	; 0x1b4
   16fe4:	mov	r2, #1
   16fe8:	bic	r1, r2, r1
   16fec:	add	r3, pc, #140	; 0x8c
   16ff0:	movw	r2, #65535	; 0xffff
   16ff4:	cmp	r1, #0
   16ff8:	vld1.64	{d16-d17}, [r3 :128]
   16ffc:	movt	r2, #32751	; 0x7fef
   17000:	mvn	r3, #0
   17004:	str	r3, [r6, #408]	; 0x198
   17008:	str	r2, [r6, #412]	; 0x19c
   1700c:	str	r0, [r6, #372]	; 0x174
   17010:	add	r0, r6, #392	; 0x188
   17014:	vst1.64	{d16-d17}, [r0]
   17018:	add	r0, r7, #84	; 0x54
   1701c:	vld1.8	{d0}, [r0]
   17020:	bne	17028 <sav_ctx_init+0x158>
   17024:	bl	4e40 <byteswap_double@plt>
   17028:	mov	r0, #512	; 0x200
   1702c:	mov	r1, #4
   17030:	str	r0, [r6, #48]	; 0x30
   17034:	mov	r0, #512	; 0x200
   17038:	vstr	d0, [r6, #416]	; 0x1a0
   1703c:	bl	4954 <readstat_calloc@plt>
   17040:	cmp	r0, #0
   17044:	str	r0, [r6, #44]	; 0x2c
   17048:	beq	1705c <sav_ctx_init+0x18c>
   1704c:	mov	r4, r6
   17050:	str	r8, [r6, #36]	; 0x24
   17054:	mov	r0, r4
   17058:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1705c:	mov	r0, r6
   17060:	bl	48ac <sav_ctx_free@plt>
   17064:	mov	r0, r4
   17068:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1706c:	bl	4768 <byteswap4@plt>
   17070:	cmp	r0, #2
   17074:	streq	r5, [r6, #428]	; 0x1ac
   17078:	b	16fa0 <sav_ctx_init+0xd0>
   1707c:	nop	{0}
   17080:	.word	0xffffffff
   17084:	.word	0xffefffff
   17088:	.word	0xfffffffe
   1708c:	.word	0xffefffff

00017090 <sav_ctx_free>:
   17090:	push	{r4, r5, fp, lr}
   17094:	add	fp, sp, #8
   17098:	mov	r4, r0
   1709c:	ldr	r0, [r0, #44]	; 0x2c
   170a0:	cmp	r0, #0
   170a4:	beq	170d8 <sav_ctx_free+0x48>
   170a8:	ldr	r1, [r4, #340]	; 0x154
   170ac:	cmp	r1, #1
   170b0:	blt	170d4 <sav_ctx_free+0x44>
   170b4:	mov	r5, #0
   170b8:	ldr	r0, [r0, r5, lsl #2]
   170bc:	bl	4d5c <spss_varinfo_free@plt>
   170c0:	ldr	r1, [r4, #340]	; 0x154
   170c4:	ldr	r0, [r4, #44]	; 0x2c
   170c8:	add	r5, r5, #1
   170cc:	cmp	r5, r1
   170d0:	blt	170b8 <sav_ctx_free+0x28>
   170d4:	bl	4864 <free@plt>
   170d8:	ldr	r0, [r4, #52]	; 0x34
   170dc:	cmp	r0, #0
   170e0:	beq	17120 <sav_ctx_free+0x90>
   170e4:	ldr	r2, [r4, #348]	; 0x15c
   170e8:	cmp	r2, #1
   170ec:	blt	1711c <sav_ctx_free+0x8c>
   170f0:	mov	r5, #0
   170f4:	ldr	r1, [r0, r5, lsl #2]
   170f8:	cmp	r1, #0
   170fc:	beq	17110 <sav_ctx_free+0x80>
   17100:	mov	r0, r1
   17104:	bl	4864 <free@plt>
   17108:	ldr	r0, [r4, #52]	; 0x34
   1710c:	ldr	r2, [r4, #348]	; 0x15c
   17110:	add	r5, r5, #1
   17114:	cmp	r5, r2
   17118:	blt	170f4 <sav_ctx_free+0x64>
   1711c:	bl	4864 <free@plt>
   17120:	ldr	r0, [r4, #376]	; 0x178
   17124:	cmp	r0, #0
   17128:	beq	17130 <sav_ctx_free+0xa0>
   1712c:	bl	4864 <free@plt>
   17130:	ldr	r0, [r4, #384]	; 0x180
   17134:	cmp	r0, #0
   17138:	beq	17140 <sav_ctx_free+0xb0>
   1713c:	bl	4864 <free@plt>
   17140:	ldr	r0, [r4, #336]	; 0x150
   17144:	cmp	r0, #0
   17148:	beq	17150 <sav_ctx_free+0xc0>
   1714c:	bl	478c <iconv_close@plt>
   17150:	ldr	r0, [r4, #328]	; 0x148
   17154:	cmp	r0, #0
   17158:	beq	17160 <sav_ctx_free+0xd0>
   1715c:	bl	4864 <free@plt>
   17160:	mov	r0, r4
   17164:	pop	{r4, r5, fp, lr}
   17168:	b	4864 <free@plt>
   1716c:	andeq	r0, r0, r0

00017170 <sav_compressed_row_bound>:
   17170:	mov	r1, #8
   17174:	add	r1, r1, r0, lsr #3
   17178:	bic	r1, r1, #-1073741817	; 0xc0000007
   1717c:	add	r0, r1, r0
   17180:	bx	lr
   17184:	nop	{0}

00017188 <sav_compress_row>:
   17188:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1718c:	add	fp, sp, #28
   17190:	sub	sp, sp, #4
   17194:	vpush	{d8-d9}
   17198:	sub	sp, sp, #8
   1719c:	mov	sl, #0
   171a0:	mov	r4, r0
   171a4:	str	sl, [r0, #4]
   171a8:	str	sl, [r0]
   171ac:	ldr	r0, [r3, #28]
   171b0:	cmp	r0, #1
   171b4:	blt	17360 <sav_compress_row+0x1d8>
   171b8:	vldr	d8, [pc, #464]	; 17390 <sav_compress_row+0x208>
   171bc:	vldr	d9, [pc, #468]	; 17398 <sav_compress_row+0x210>
   171c0:	mov	r7, r1
   171c4:	mov	r6, #8
   171c8:	mov	r8, #0
   171cc:	mov	sl, #0
   171d0:	mov	r5, #0
   171d4:	str	r3, [sp, #4]
   171d8:	mov	r0, r3
   171dc:	mov	r1, r5
   171e0:	bl	4ccc <readstat_get_variable@plt>
   171e4:	ldr	r1, [r0]
   171e8:	cmp	r1, #0
   171ec:	beq	1721c <sav_compress_row+0x94>
   171f0:	mov	r1, r7
   171f4:	mvn	r2, #1048576	; 0x100000
   171f8:	ldr	r0, [r1, r8]!
   171fc:	ldr	r1, [r1, #4]
   17200:	mvn	r3, r0
   17204:	eor	r2, r1, r2
   17208:	orrs	r2, r3, r2
   1720c:	bne	172b8 <sav_compress_row+0x130>
   17210:	mov	r0, #255	; 0xff
   17214:	strb	r0, [r4, sl]
   17218:	b	1731c <sav_compress_row+0x194>
   1721c:	ldr	r9, [r0, #1596]	; 0x63c
   17220:	cmp	r9, #0
   17224:	beq	17348 <sav_compress_row+0x1c0>
   17228:	ldr	r1, [pc, #368]	; 173a0 <sav_compress_row+0x218>
   1722c:	add	r0, r7, r8
   17230:	mov	r2, #8
   17234:	add	r1, pc, r1
   17238:	bl	4930 <memcmp@plt>
   1723c:	add	r1, sl, #1
   17240:	cmp	r0, #0
   17244:	beq	1727c <sav_compress_row+0xf4>
   17248:	mov	r0, #253	; 0xfd
   1724c:	strb	r0, [r4, sl]
   17250:	mov	r0, r7
   17254:	ldr	r2, [r0, r8]!
   17258:	ldr	r0, [r0, #4]
   1725c:	str	r2, [r4, r6]
   17260:	add	r2, r4, r6
   17264:	add	r6, r6, #8
   17268:	str	r0, [r2, #4]
   1726c:	tst	r1, #7
   17270:	beq	1728c <sav_compress_row+0x104>
   17274:	mov	sl, r1
   17278:	b	172a8 <sav_compress_row+0x120>
   1727c:	mov	r0, #254	; 0xfe
   17280:	strb	r0, [r4, sl]
   17284:	tst	r1, #7
   17288:	bne	17274 <sav_compress_row+0xec>
   1728c:	mov	r0, r4
   17290:	mov	r1, #0
   17294:	mov	sl, r6
   17298:	str	r1, [r0, r6]!
   1729c:	str	r1, [r0, #4]
   172a0:	add	r0, r6, #8
   172a4:	mov	r6, r0
   172a8:	subs	r9, r9, #8
   172ac:	add	r8, r8, #8
   172b0:	bne	17228 <sav_compress_row+0xa0>
   172b4:	b	17348 <sav_compress_row+0x1c0>
   172b8:	vmov	d16, r0, r1
   172bc:	vcmpe.f64	d16, d8
   172c0:	vmrs	APSR_nzcv, fpscr
   172c4:	ble	172f8 <sav_compress_row+0x170>
   172c8:	vcmpe.f64	d16, d9
   172cc:	vmrs	APSR_nzcv, fpscr
   172d0:	bpl	172f8 <sav_compress_row+0x170>
   172d4:	vcvt.s32.f64	s0, d16
   172d8:	vcvt.f64.s32	d17, s0
   172dc:	vcmp.f64	d16, d17
   172e0:	vmrs	APSR_nzcv, fpscr
   172e4:	bne	172f8 <sav_compress_row+0x170>
   172e8:	vmov	r0, s0
   172ec:	add	r0, r0, #100	; 0x64
   172f0:	strb	r0, [r4, sl]
   172f4:	b	1731c <sav_compress_row+0x194>
   172f8:	mov	r0, #253	; 0xfd
   172fc:	strb	r0, [r4, sl]
   17300:	mov	r0, r7
   17304:	ldr	r1, [r0, r8]!
   17308:	ldr	r0, [r0, #4]
   1730c:	str	r1, [r4, r6]
   17310:	add	r1, r4, r6
   17314:	add	r6, r6, #8
   17318:	str	r0, [r1, #4]
   1731c:	add	sl, sl, #1
   17320:	tst	sl, #7
   17324:	bne	17344 <sav_compress_row+0x1bc>
   17328:	mov	r0, r4
   1732c:	mov	r1, #0
   17330:	mov	sl, r6
   17334:	str	r1, [r0, r6]!
   17338:	str	r1, [r0, #4]
   1733c:	add	r0, r6, #8
   17340:	mov	r6, r0
   17344:	add	r8, r8, #8
   17348:	ldr	r3, [sp, #4]
   1734c:	add	r5, r5, #1
   17350:	ldr	r0, [r3, #28]
   17354:	cmp	r5, r0
   17358:	blt	171d8 <sav_compress_row+0x50>
   1735c:	b	17364 <sav_compress_row+0x1dc>
   17360:	mov	r6, #8
   17364:	ldr	r1, [r3, #84]	; 0x54
   17368:	ldr	r0, [r3, #80]	; 0x50
   1736c:	add	r1, r1, #1
   17370:	cmp	r1, r0
   17374:	moveq	r0, #252	; 0xfc
   17378:	strbeq	r0, [r4, sl]
   1737c:	mov	r0, r6
   17380:	sub	sp, fp, #48	; 0x30
   17384:	vpop	{d8-d9}
   17388:	add	sp, sp, #4
   1738c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17390:	.word	0x00000000
   17394:	.word	0xc0590000
   17398:	.word	0x00000000
   1739c:	.word	0x40630000
   173a0:	.word	0x00012943

000173a4 <sav_decompress_row>:
   173a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   173a8:	add	fp, sp, #24
   173ac:	mov	r4, r0
   173b0:	ldrd	r6, [r0, #16]
   173b4:	ldr	r0, [r0, #44]	; 0x2c
   173b8:	cmp	r0, #0
   173bc:	beq	173d4 <sav_decompress_row+0x30>
   173c0:	mov	r0, r6
   173c4:	mov	r1, r7
   173c8:	bl	4750 <byteswap8@plt>
   173cc:	mov	r6, r0
   173d0:	mov	r7, r1
   173d4:	ldr	r0, [r4, #40]	; 0x28
   173d8:	movw	r9, #8224	; 0x2020
   173dc:	add	r8, r4, #32
   173e0:	movt	r9, #8224	; 0x2020
   173e4:	rsb	r5, r0, #8
   173e8:	cmp	r5, #8
   173ec:	bne	1741c <sav_decompress_row+0x78>
   173f0:	ldr	r0, [r4, #4]
   173f4:	cmp	r0, #8
   173f8:	bcc	17534 <sav_decompress_row+0x190>
   173fc:	ldr	r1, [r4]
   17400:	mov	r5, #0
   17404:	ldr	r2, [r1]
   17408:	ldr	r3, [r1, #4]
   1740c:	strd	r2, [r8]
   17410:	sub	r3, r0, #8
   17414:	add	r2, r1, #8
   17418:	strd	r2, [r4]
   1741c:	cmp	r5, #7
   17420:	bgt	173e8 <sav_decompress_row+0x44>
   17424:	add	r0, r4, r5
   17428:	ldrb	r0, [r0, #32]
   1742c:	sub	r1, r0, #252	; 0xfc
   17430:	cmp	r1, #3
   17434:	bhi	1749c <sav_decompress_row+0xf8>
   17438:	add	r0, pc, #4
   1743c:	ldr	r1, [r0, r1, lsl #2]
   17440:	add	pc, r0, r1
   17444:	.word	0x000000d4
   17448:	.word	0x00000010
   1744c:	.word	0x00000068
   17450:	.word	0x00000078
   17454:	ldr	r0, [r4, #4]
   17458:	cmp	r0, #8
   1745c:	bcc	1752c <sav_decompress_row+0x188>
   17460:	ldr	r0, [r4]
   17464:	ldr	r1, [r4, #8]
   17468:	ldr	r2, [r0]
   1746c:	ldr	r0, [r0, #4]
   17470:	str	r0, [r1, #4]
   17474:	str	r2, [r1]
   17478:	ldm	r4, {r0, r2, r3}
   1747c:	ldr	r1, [r4, #12]
   17480:	sub	r1, r1, #8
   17484:	add	r3, r3, #8
   17488:	add	r0, r0, #8
   1748c:	sub	r2, r2, #8
   17490:	stm	r4, {r0, r2, r3}
   17494:	str	r1, [r4, #12]
   17498:	b	17504 <sav_decompress_row+0x160>
   1749c:	cmp	r0, #0
   174a0:	bne	174cc <sav_decompress_row+0x128>
   174a4:	ldr	r1, [r4, #12]
   174a8:	b	17504 <sav_decompress_row+0x160>
   174ac:	ldr	r0, [r4, #8]
   174b0:	str	r9, [r0, #4]
   174b4:	str	r9, [r0]
   174b8:	b	174f4 <sav_decompress_row+0x150>
   174bc:	ldr	r0, [r4, #8]
   174c0:	str	r7, [r0, #4]
   174c4:	str	r6, [r0]
   174c8:	b	174f4 <sav_decompress_row+0x150>
   174cc:	ldr	r1, [r4, #44]	; 0x2c
   174d0:	vldr	d16, [r4, #24]
   174d4:	vmov	s0, r0
   174d8:	vcvt.f64.u32	d17, s0
   174dc:	vsub.f64	d0, d17, d16
   174e0:	cmp	r1, #0
   174e4:	beq	174ec <sav_decompress_row+0x148>
   174e8:	bl	4e40 <byteswap_double@plt>
   174ec:	ldr	r0, [r4, #8]
   174f0:	vst1.8	{d0}, [r0]
   174f4:	ldrd	r0, [r4, #8]
   174f8:	sub	r1, r1, #8
   174fc:	add	r0, r0, #8
   17500:	strd	r0, [r4, #8]
   17504:	add	r5, r5, #1
   17508:	cmp	r1, #8
   1750c:	bcs	1741c <sav_decompress_row+0x78>
   17510:	mov	r0, #2
   17514:	b	1751c <sav_decompress_row+0x178>
   17518:	mov	r0, #3
   1751c:	str	r0, [r4, #48]	; 0x30
   17520:	rsb	r0, r5, #8
   17524:	str	r0, [r4, #40]	; 0x28
   17528:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1752c:	mov	r0, #0
   17530:	b	1751c <sav_decompress_row+0x178>
   17534:	mov	r5, #8
   17538:	mov	r0, #0
   1753c:	b	1751c <sav_decompress_row+0x178>

00017540 <sav_parse_long_variable_names_record>:
   17540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17544:	add	fp, sp, #28
   17548:	sub	sp, sp, #148	; 0x94
   1754c:	sub	sp, sp, #8192	; 0x2000
   17550:	ldr	r4, [r2, #340]	; 0x154
   17554:	mov	r9, r2
   17558:	mov	r8, r0
   1755c:	str	r1, [sp, #20]
   17560:	cmp	r4, #1
   17564:	blt	175b0 <sav_parse_long_variable_names_record+0x70>
   17568:	ldr	r5, [r9, #44]	; 0x2c
   1756c:	mov	r7, #0
   17570:	mov	r1, #0
   17574:	ldr	r6, [r5]
   17578:	cmp	r1, #0
   1757c:	beq	17598 <sav_parse_long_variable_names_record+0x58>
   17580:	add	r0, r6, #187	; 0xbb
   17584:	add	r1, r1, #187	; 0xbb
   17588:	bl	47b0 <strcmp@plt>
   1758c:	cmp	r0, #0
   17590:	addne	r7, r7, #1
   17594:	b	1759c <sav_parse_long_variable_names_record+0x5c>
   17598:	add	r7, r7, #1
   1759c:	add	r5, r5, #4
   175a0:	subs	r4, r4, #1
   175a4:	mov	r1, r6
   175a8:	bne	17574 <sav_parse_long_variable_names_record+0x34>
   175ac:	b	175b4 <sav_parse_long_variable_names_record+0x74>
   175b0:	mov	r7, #0
   175b4:	add	r0, r7, r7, lsl #2
   175b8:	str	r8, [sp, #16]
   175bc:	str	r7, [sp, #48]	; 0x30
   175c0:	lsl	r0, r0, #3
   175c4:	bl	4b88 <readstat_malloc@plt>
   175c8:	ldr	r8, [r9, #340]	; 0x154
   175cc:	mov	sl, r0
   175d0:	cmp	r8, #1
   175d4:	blt	17644 <sav_parse_long_variable_names_record+0x104>
   175d8:	mov	r4, #0
   175dc:	mov	r6, #0
   175e0:	mov	r0, #0
   175e4:	ldr	r1, [r9, #44]	; 0x2c
   175e8:	cmp	r0, #0
   175ec:	ldr	r7, [r1, r6, lsl #2]
   175f0:	add	r5, r7, #187	; 0xbb
   175f4:	beq	1760c <sav_parse_long_variable_names_record+0xcc>
   175f8:	add	r1, r0, #187	; 0xbb
   175fc:	mov	r0, r5
   17600:	bl	47b0 <strcmp@plt>
   17604:	cmp	r0, #0
   17608:	beq	17634 <sav_parse_long_variable_names_record+0xf4>
   1760c:	vld1.8	{d16}, [r5]
   17610:	ldrb	r1, [r5, #8]
   17614:	add	r0, r4, r4, lsl #2
   17618:	add	r4, r4, #1
   1761c:	add	r0, sl, r0, lsl #3
   17620:	strb	r1, [r0, #8]
   17624:	vst1.8	{d16}, [r0]
   17628:	ldr	r1, [r7, #8]
   1762c:	str	r1, [r0, #36]	; 0x24
   17630:	ldr	r8, [r9, #340]	; 0x154
   17634:	add	r6, r6, #1
   17638:	mov	r0, r7
   1763c:	cmp	r6, r8
   17640:	blt	175e4 <sav_parse_long_variable_names_record+0xa4>
   17644:	ldr	r4, [sp, #20]
   17648:	ldr	r5, [sp, #16]
   1764c:	mov	r2, #40	; 0x28
   17650:	add	r0, r5, r4
   17654:	str	r0, [sp, #24]
   17658:	mov	r0, sl
   1765c:	ldr	r3, [pc, #1488]	; 17c34 <sav_parse_long_variable_names_record+0x6f4>
   17660:	ldr	r8, [sp, #48]	; 0x30
   17664:	add	r3, pc, r3
   17668:	mov	r1, r8
   1766c:	bl	4d80 <qsort@plt>
   17670:	str	sl, [sp, #32]
   17674:	cmp	r4, #0
   17678:	mov	sl, #1
   1767c:	str	r9, [sp, #28]
   17680:	beq	17a04 <sav_parse_long_variable_names_record+0x4c4>
   17684:	mov	r7, r5
   17688:	mov	r4, #0
   1768c:	mov	r9, #0
   17690:	b	17860 <sav_parse_long_variable_names_record+0x320>
   17694:	ldr	r1, [pc, #1464]	; 17c54 <sav_parse_long_variable_names_record+0x714>
   17698:	add	r1, pc, r1
   1769c:	add	sl, r1, r0
   176a0:	ldrb	r6, [sl]
   176a4:	ldrb	r0, [sl, #1]!
   176a8:	sub	r6, r6, #1
   176ac:	cmp	r0, #6
   176b0:	bhi	176e0 <sav_parse_long_variable_names_record+0x1a0>
   176b4:	add	r1, pc, #4
   176b8:	ldr	r0, [r1, r0, lsl #2]
   176bc:	add	pc, r1, r0
   176c0:	.word	0x0000003c
   176c4:	.word	0x000000a0
   176c8:	.word	0x000000d0
   176cc:	.word	0x0000001c
   176d0:	.word	0x0000002c
   176d4:	.word	0x0000001c
   176d8:	.word	0x0000002c
   176dc:	mov	r9, r7
   176e0:	cmp	r6, #0
   176e4:	bne	176a4 <sav_parse_long_variable_names_record+0x164>
   176e8:	b	179d8 <sav_parse_long_variable_names_record+0x498>
   176ec:	sub	r4, r7, r9
   176f0:	cmp	r6, #0
   176f4:	bne	176a4 <sav_parse_long_variable_names_record+0x164>
   176f8:	b	179d8 <sav_parse_long_variable_names_record+0x498>
   176fc:	str	r4, [sp, #44]	; 0x2c
   17700:	ldr	r4, [sp, #32]
   17704:	cmp	r8, #0
   17708:	str	r9, [sp, #40]	; 0x28
   1770c:	beq	17808 <sav_parse_long_variable_names_record+0x2c8>
   17710:	ldr	r5, [sp, #48]	; 0x30
   17714:	mov	r9, #0
   17718:	add	r0, r5, r9
   1771c:	lsr	r7, r0, #1
   17720:	add	r0, r7, r7, lsl #2
   17724:	add	r8, r4, r0, lsl #3
   17728:	sub	r0, fp, #48	; 0x30
   1772c:	mov	r1, r8
   17730:	bl	47b0 <strcmp@plt>
   17734:	cmp	r0, #0
   17738:	bge	1774c <sav_parse_long_variable_names_record+0x20c>
   1773c:	mov	r5, r7
   17740:	cmp	r9, r5
   17744:	bcc	17718 <sav_parse_long_variable_names_record+0x1d8>
   17748:	b	17808 <sav_parse_long_variable_names_record+0x2c8>
   1774c:	beq	177b8 <sav_parse_long_variable_names_record+0x278>
   17750:	add	r9, r7, #1
   17754:	cmp	r9, r5
   17758:	bcc	17718 <sav_parse_long_variable_names_record+0x1d8>
   1775c:	b	17808 <sav_parse_long_variable_names_record+0x2c8>
   17760:	mov	r5, r8
   17764:	sub	r8, fp, #48	; 0x30
   17768:	mov	r1, r9
   1776c:	mov	r2, r4
   17770:	mov	r0, r8
   17774:	bl	48b8 <memcpy@plt>
   17778:	mov	r0, #0
   1777c:	strb	r0, [r8, r4]
   17780:	mov	r8, r5
   17784:	cmp	r6, #0
   17788:	bne	176a4 <sav_parse_long_variable_names_record+0x164>
   1778c:	b	179d8 <sav_parse_long_variable_names_record+0x498>
   17790:	sub	r5, fp, #120	; 0x78
   17794:	mov	r1, r9
   17798:	mov	r2, r4
   1779c:	mov	r0, r5
   177a0:	bl	48b8 <memcpy@plt>
   177a4:	mov	r0, #0
   177a8:	strb	r0, [r5, r4]
   177ac:	cmp	r6, #0
   177b0:	bne	176a4 <sav_parse_long_variable_names_record+0x164>
   177b4:	b	179d8 <sav_parse_long_variable_names_record+0x498>
   177b8:	cmp	r8, #0
   177bc:	beq	17808 <sav_parse_long_variable_names_record+0x2c8>
   177c0:	ldr	r1, [sp, #28]
   177c4:	ldr	r0, [r8, #36]	; 0x24
   177c8:	ldr	r4, [sp, #44]	; 0x2c
   177cc:	ldr	r1, [r1, #44]	; 0x2c
   177d0:	mov	r2, r4
   177d4:	ldr	r0, [r1, r0, lsl #2]
   177d8:	sub	r1, fp, #120	; 0x78
   177dc:	add	r8, r0, #196	; 0xc4
   177e0:	mov	r0, r8
   177e4:	bl	48b8 <memcpy@plt>
   177e8:	mov	r0, #0
   177ec:	ldr	r9, [sp, #40]	; 0x28
   177f0:	ldr	r7, [sp, #52]	; 0x34
   177f4:	strb	r0, [r8, r4]
   177f8:	ldr	r8, [sp, #48]	; 0x30
   177fc:	cmp	r6, #0
   17800:	bne	176a4 <sav_parse_long_variable_names_record+0x164>
   17804:	b	179d8 <sav_parse_long_variable_names_record+0x498>
   17808:	ldr	r5, [sp, #28]
   1780c:	ldr	r0, [r5, #24]
   17810:	cmp	r0, #0
   17814:	beq	17844 <sav_parse_long_variable_names_record+0x304>
   17818:	ldr	r2, [pc, #1080]	; 17c58 <sav_parse_long_variable_names_record+0x718>
   1781c:	add	r7, sp, #56	; 0x38
   17820:	mov	r1, #8192	; 0x2000
   17824:	sub	r3, fp, #48	; 0x30
   17828:	mov	r0, r7
   1782c:	add	r2, pc, r2
   17830:	bl	4bdc <snprintf@plt>
   17834:	ldr	r2, [r5, #24]
   17838:	ldr	r1, [r5, #40]	; 0x28
   1783c:	mov	r0, r7
   17840:	blx	r2
   17844:	ldr	r8, [sp, #48]	; 0x30
   17848:	ldr	r9, [sp, #40]	; 0x28
   1784c:	ldr	r4, [sp, #44]	; 0x2c
   17850:	ldr	r7, [sp, #52]	; 0x34
   17854:	cmp	r6, #0
   17858:	bne	176a4 <sav_parse_long_variable_names_record+0x164>
   1785c:	b	179d8 <sav_parse_long_variable_names_record+0x498>
   17860:	str	r7, [sp, #52]	; 0x34
   17864:	mov	r8, r4
   17868:	ldr	r0, [pc, #968]	; 17c38 <sav_parse_long_variable_names_record+0x6f8>
   1786c:	add	r0, pc, r0
   17870:	ldrb	r2, [r0, sl]
   17874:	ldr	r0, [pc, #960]	; 17c3c <sav_parse_long_variable_names_record+0x6fc>
   17878:	ldr	r1, [pc, #960]	; 17c40 <sav_parse_long_variable_names_record+0x700>
   1787c:	add	r0, pc, r0
   17880:	add	r1, pc, r1
   17884:	cmp	r2, #0
   17888:	add	r0, r0, sl, lsl #1
   1788c:	ldrsh	r0, [r0]
   17890:	add	r5, r1, r0
   17894:	ldr	r0, [pc, #936]	; 17c44 <sav_parse_long_variable_names_record+0x704>
   17898:	add	r0, pc, r0
   1789c:	add	r0, r0, sl, lsl #1
   178a0:	ldrsh	r0, [r0]
   178a4:	beq	17900 <sav_parse_long_variable_names_record+0x3c0>
   178a8:	add	ip, r5, r2
   178ac:	sub	r7, ip, #1
   178b0:	cmp	r7, r5
   178b4:	bcc	178f8 <sav_parse_long_variable_names_record+0x3b8>
   178b8:	ldr	r1, [sp, #52]	; 0x34
   178bc:	mov	r3, r5
   178c0:	ldrb	r6, [r1]
   178c4:	sub	r4, r7, r3
   178c8:	mov	r1, r3
   178cc:	ldrb	r4, [r1, r4, asr #1]!
   178d0:	cmp	r6, r4
   178d4:	bcs	178e8 <sav_parse_long_variable_names_record+0x3a8>
   178d8:	sub	r7, r1, #1
   178dc:	cmp	r7, r3
   178e0:	bcs	178c4 <sav_parse_long_variable_names_record+0x384>
   178e4:	b	178f8 <sav_parse_long_variable_names_record+0x3b8>
   178e8:	bls	17980 <sav_parse_long_variable_names_record+0x440>
   178ec:	add	r3, r1, #1
   178f0:	cmp	r7, r3
   178f4:	bcs	178c4 <sav_parse_long_variable_names_record+0x384>
   178f8:	add	r0, r2, r0
   178fc:	b	17904 <sav_parse_long_variable_names_record+0x3c4>
   17900:	mov	ip, r5
   17904:	ldr	r1, [pc, #828]	; 17c48 <sav_parse_long_variable_names_record+0x708>
   17908:	mov	r4, r8
   1790c:	add	r1, pc, r1
   17910:	ldrb	r2, [r1, sl]
   17914:	cmp	r2, #0
   17918:	beq	1798c <sav_parse_long_variable_names_record+0x44c>
   1791c:	add	r1, ip, r2, lsl #1
   17920:	sub	r3, r1, #2
   17924:	cmp	r3, ip
   17928:	bcc	179a4 <sav_parse_long_variable_names_record+0x464>
   1792c:	ldr	r1, [sp, #52]	; 0x34
   17930:	mov	r4, ip
   17934:	mvn	r5, #1
   17938:	ldrb	r7, [r1]
   1793c:	sub	r1, r3, r4
   17940:	and	r6, r5, r1, asr #1
   17944:	mov	r1, r4
   17948:	ldrb	r6, [r1, r6]!
   1794c:	cmp	r7, r6
   17950:	bcs	17964 <sav_parse_long_variable_names_record+0x424>
   17954:	sub	r3, r1, #2
   17958:	cmp	r3, r4
   1795c:	bcs	1793c <sav_parse_long_variable_names_record+0x3fc>
   17960:	b	179a0 <sav_parse_long_variable_names_record+0x460>
   17964:	ldrb	r6, [r1, #1]
   17968:	cmp	r7, r6
   1796c:	bls	17998 <sav_parse_long_variable_names_record+0x458>
   17970:	add	r4, r1, #2
   17974:	cmp	r3, r4
   17978:	bcs	1793c <sav_parse_long_variable_names_record+0x3fc>
   1797c:	b	179a0 <sav_parse_long_variable_names_record+0x460>
   17980:	sub	r0, r0, r5
   17984:	mov	r4, r8
   17988:	add	r0, r0, r1
   1798c:	ldr	r7, [sp, #52]	; 0x34
   17990:	ldr	r8, [sp, #48]	; 0x30
   17994:	b	179b0 <sav_parse_long_variable_names_record+0x470>
   17998:	sub	r1, r1, ip
   1799c:	asr	r2, r1, #1
   179a0:	mov	r4, r8
   179a4:	ldr	r7, [sp, #52]	; 0x34
   179a8:	ldr	r8, [sp, #48]	; 0x30
   179ac:	add	r0, r2, r0
   179b0:	ldr	r1, [pc, #660]	; 17c4c <sav_parse_long_variable_names_record+0x70c>
   179b4:	add	r1, pc, r1
   179b8:	ldrb	r1, [r1, r0]
   179bc:	ldr	r0, [pc, #652]	; 17c50 <sav_parse_long_variable_names_record+0x710>
   179c0:	add	r0, pc, r0
   179c4:	str	r1, [sp, #36]	; 0x24
   179c8:	ldrb	r0, [r0, r1]
   179cc:	cmp	r0, #0
   179d0:	cmpne	r0, #11
   179d4:	bne	17694 <sav_parse_long_variable_names_record+0x154>
   179d8:	ldr	r0, [pc, #636]	; 17c5c <sav_parse_long_variable_names_record+0x71c>
   179dc:	ldr	r1, [sp, #36]	; 0x24
   179e0:	add	r0, pc, r0
   179e4:	cmp	r1, #1
   179e8:	ldrb	sl, [r0, r1]
   179ec:	beq	17ba8 <sav_parse_long_variable_names_record+0x668>
   179f0:	ldr	r0, [sp, #24]
   179f4:	add	r7, r7, #1
   179f8:	cmp	r7, r0
   179fc:	bne	17860 <sav_parse_long_variable_names_record+0x320>
   17a00:	b	17a0c <sav_parse_long_variable_names_record+0x4cc>
   17a04:	mov	r9, #0
   17a08:	mov	r4, #0
   17a0c:	ldr	r0, [pc, #588]	; 17c60 <sav_parse_long_variable_names_record+0x720>
   17a10:	add	r0, pc, r0
   17a14:	ldrb	r0, [r0, sl]
   17a18:	cmp	r0, #0
   17a1c:	beq	17ba4 <sav_parse_long_variable_names_record+0x664>
   17a20:	ldr	r1, [pc, #572]	; 17c64 <sav_parse_long_variable_names_record+0x724>
   17a24:	str	r9, [sp, #40]	; 0x28
   17a28:	add	r1, pc, r1
   17a2c:	add	r5, r1, r0
   17a30:	ldr	r0, [sp, #24]
   17a34:	ldrb	r7, [r5]
   17a38:	sub	r0, r0, r9
   17a3c:	ldr	r9, [sp, #28]
   17a40:	str	r0, [sp, #36]	; 0x24
   17a44:	ldrb	r0, [r5, #1]!
   17a48:	sub	r7, r7, #1
   17a4c:	cmp	r0, #6
   17a50:	beq	17ac8 <sav_parse_long_variable_names_record+0x588>
   17a54:	cmp	r0, #2
   17a58:	beq	17ad8 <sav_parse_long_variable_names_record+0x598>
   17a5c:	cmp	r0, #0
   17a60:	bne	17acc <sav_parse_long_variable_names_record+0x58c>
   17a64:	ldr	r6, [sp, #32]
   17a68:	cmp	r8, #0
   17a6c:	str	r5, [sp, #52]	; 0x34
   17a70:	str	r4, [sp, #44]	; 0x2c
   17a74:	beq	17b4c <sav_parse_long_variable_names_record+0x60c>
   17a78:	ldr	r5, [sp, #48]	; 0x30
   17a7c:	mov	r9, #0
   17a80:	add	r0, r5, r9
   17a84:	lsr	r4, r0, #1
   17a88:	add	r0, r4, r4, lsl #2
   17a8c:	add	r8, r6, r0, lsl #3
   17a90:	sub	r0, fp, #48	; 0x30
   17a94:	mov	r1, r8
   17a98:	bl	47b0 <strcmp@plt>
   17a9c:	cmp	r0, #0
   17aa0:	bge	17ab4 <sav_parse_long_variable_names_record+0x574>
   17aa4:	mov	r5, r4
   17aa8:	cmp	r9, r5
   17aac:	bcc	17a80 <sav_parse_long_variable_names_record+0x540>
   17ab0:	b	17b4c <sav_parse_long_variable_names_record+0x60c>
   17ab4:	beq	17b00 <sav_parse_long_variable_names_record+0x5c0>
   17ab8:	add	r9, r4, #1
   17abc:	cmp	r9, r5
   17ac0:	bcc	17a80 <sav_parse_long_variable_names_record+0x540>
   17ac4:	b	17b4c <sav_parse_long_variable_names_record+0x60c>
   17ac8:	ldr	r4, [sp, #36]	; 0x24
   17acc:	cmp	r7, #0
   17ad0:	bne	17a44 <sav_parse_long_variable_names_record+0x504>
   17ad4:	b	17b9c <sav_parse_long_variable_names_record+0x65c>
   17ad8:	ldr	r1, [sp, #40]	; 0x28
   17adc:	sub	r6, fp, #120	; 0x78
   17ae0:	mov	r2, r4
   17ae4:	mov	r0, r6
   17ae8:	bl	48b8 <memcpy@plt>
   17aec:	mov	r0, #0
   17af0:	strb	r0, [r6, r4]
   17af4:	cmp	r7, #0
   17af8:	bne	17a44 <sav_parse_long_variable_names_record+0x504>
   17afc:	b	17b9c <sav_parse_long_variable_names_record+0x65c>
   17b00:	cmp	r8, #0
   17b04:	beq	17b4c <sav_parse_long_variable_names_record+0x60c>
   17b08:	ldr	r9, [sp, #28]
   17b0c:	ldr	r0, [r8, #36]	; 0x24
   17b10:	ldr	r4, [sp, #44]	; 0x2c
   17b14:	ldr	r1, [r9, #44]	; 0x2c
   17b18:	mov	r2, r4
   17b1c:	ldr	r0, [r1, r0, lsl #2]
   17b20:	sub	r1, fp, #120	; 0x78
   17b24:	add	r8, r0, #196	; 0xc4
   17b28:	mov	r0, r8
   17b2c:	bl	48b8 <memcpy@plt>
   17b30:	mov	r0, #0
   17b34:	ldr	r5, [sp, #52]	; 0x34
   17b38:	strb	r0, [r8, r4]
   17b3c:	ldr	r8, [sp, #48]	; 0x30
   17b40:	cmp	r7, #0
   17b44:	bne	17a44 <sav_parse_long_variable_names_record+0x504>
   17b48:	b	17b9c <sav_parse_long_variable_names_record+0x65c>
   17b4c:	ldr	r9, [sp, #28]
   17b50:	ldr	r0, [r9, #24]
   17b54:	cmp	r0, #0
   17b58:	beq	17b88 <sav_parse_long_variable_names_record+0x648>
   17b5c:	ldr	r2, [pc, #260]	; 17c68 <sav_parse_long_variable_names_record+0x728>
   17b60:	add	r4, sp, #56	; 0x38
   17b64:	mov	r1, #8192	; 0x2000
   17b68:	sub	r3, fp, #48	; 0x30
   17b6c:	mov	r0, r4
   17b70:	add	r2, pc, r2
   17b74:	bl	4bdc <snprintf@plt>
   17b78:	ldr	r2, [r9, #24]
   17b7c:	ldr	r1, [r9, #40]	; 0x28
   17b80:	mov	r0, r4
   17b84:	blx	r2
   17b88:	ldr	r8, [sp, #48]	; 0x30
   17b8c:	ldr	r4, [sp, #44]	; 0x2c
   17b90:	ldr	r5, [sp, #52]	; 0x34
   17b94:	cmp	r7, #0
   17b98:	bne	17a44 <sav_parse_long_variable_names_record+0x504>
   17b9c:	ldr	r7, [sp, #24]
   17ba0:	b	17bac <sav_parse_long_variable_names_record+0x66c>
   17ba4:	ldr	r7, [sp, #24]
   17ba8:	ldr	r9, [sp, #28]
   17bac:	ldr	r5, [sp, #32]
   17bb0:	cmp	sl, #11
   17bb4:	blt	17bc8 <sav_parse_long_variable_names_record+0x688>
   17bb8:	ldr	r0, [sp, #24]
   17bbc:	mov	r4, #0
   17bc0:	cmp	r7, r0
   17bc4:	beq	17c18 <sav_parse_long_variable_names_record+0x6d8>
   17bc8:	ldr	r0, [r9, #24]
   17bcc:	mov	r4, #5
   17bd0:	cmp	r0, #0
   17bd4:	beq	17c18 <sav_parse_long_variable_names_record+0x6d8>
   17bd8:	ldr	r1, [sp, #16]
   17bdc:	ldrb	r0, [r7], -r1
   17be0:	stm	sp, {r1, r7}
   17be4:	str	r0, [sp, #12]
   17be8:	add	r7, sp, #56	; 0x38
   17bec:	mov	r1, #8192	; 0x2000
   17bf0:	ldr	r3, [sp, #20]
   17bf4:	mov	r0, r7
   17bf8:	str	r3, [sp, #8]
   17bfc:	ldr	r2, [pc, #104]	; 17c6c <sav_parse_long_variable_names_record+0x72c>
   17c00:	add	r2, pc, r2
   17c04:	bl	4bdc <snprintf@plt>
   17c08:	ldr	r2, [r9, #24]
   17c0c:	ldr	r1, [r9, #40]	; 0x28
   17c10:	mov	r0, r7
   17c14:	blx	r2
   17c18:	cmp	r5, #0
   17c1c:	beq	17c28 <sav_parse_long_variable_names_record+0x6e8>
   17c20:	mov	r0, r5
   17c24:	bl	4864 <free@plt>
   17c28:	mov	r0, r4
   17c2c:	sub	sp, fp, #28
   17c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c34:	.word	0x00000ba4
   17c38:	.word	0x00012634
   17c3c:	.word	0x000124f4
   17c40:	.word	0x00012300
   17c44:	.word	0x00012570
   17c48:	.word	0x000125e0
   17c4c:	.word	0x00012584
   17c50:	.word	0x000128d2
   17c54:	.word	0x00012a76
   17c58:	.word	0x00012ab1
   17c5c:	.word	0x000126e3
   17c60:	.word	0x0001270a
   17c64:	.word	0x000126e6
   17c68:	.word	0x0001276d
   17c6c:	.word	0x000126ef

00017c70 <sav_parse_very_long_string_record>:
   17c70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c74:	add	fp, sp, #28
   17c78:	sub	sp, sp, #100	; 0x64
   17c7c:	ldr	r4, [r2, #340]	; 0x154
   17c80:	mov	sl, r2
   17c84:	str	r1, [sp, #28]
   17c88:	str	r0, [sp, #24]
   17c8c:	cmp	r4, #1
   17c90:	blt	17cdc <sav_parse_very_long_string_record+0x6c>
   17c94:	ldr	r5, [sl, #44]	; 0x2c
   17c98:	mov	r7, #0
   17c9c:	mov	r1, #0
   17ca0:	ldr	r6, [r5]
   17ca4:	cmp	r1, #0
   17ca8:	beq	17cc4 <sav_parse_very_long_string_record+0x54>
   17cac:	add	r0, r6, #187	; 0xbb
   17cb0:	add	r1, r1, #187	; 0xbb
   17cb4:	bl	47b0 <strcmp@plt>
   17cb8:	cmp	r0, #0
   17cbc:	addne	r7, r7, #1
   17cc0:	b	17cc8 <sav_parse_very_long_string_record+0x58>
   17cc4:	add	r7, r7, #1
   17cc8:	add	r5, r5, #4
   17ccc:	subs	r4, r4, #1
   17cd0:	mov	r1, r6
   17cd4:	bne	17ca0 <sav_parse_very_long_string_record+0x30>
   17cd8:	b	17ce0 <sav_parse_very_long_string_record+0x70>
   17cdc:	mov	r7, #0
   17ce0:	ldr	r0, [sp, #28]
   17ce4:	add	r0, r0, #1024	; 0x400
   17ce8:	str	r0, [sp, #16]
   17cec:	bl	4b88 <readstat_malloc@plt>
   17cf0:	str	r0, [sp, #20]
   17cf4:	add	r0, r7, r7, lsl #2
   17cf8:	str	r7, [sp, #44]	; 0x2c
   17cfc:	lsl	r0, r0, #3
   17d00:	bl	4b88 <readstat_malloc@plt>
   17d04:	ldr	r9, [sl, #340]	; 0x154
   17d08:	mov	r8, r0
   17d0c:	cmp	r9, #1
   17d10:	blt	17d80 <sav_parse_very_long_string_record+0x110>
   17d14:	mov	r4, #0
   17d18:	mov	r5, #0
   17d1c:	mov	r0, #0
   17d20:	ldr	r1, [sl, #44]	; 0x2c
   17d24:	cmp	r0, #0
   17d28:	ldr	r7, [r1, r5, lsl #2]
   17d2c:	add	r6, r7, #187	; 0xbb
   17d30:	beq	17d48 <sav_parse_very_long_string_record+0xd8>
   17d34:	add	r1, r0, #187	; 0xbb
   17d38:	mov	r0, r6
   17d3c:	bl	47b0 <strcmp@plt>
   17d40:	cmp	r0, #0
   17d44:	beq	17d70 <sav_parse_very_long_string_record+0x100>
   17d48:	vld1.8	{d16}, [r6]
   17d4c:	ldrb	r1, [r6, #8]
   17d50:	add	r0, r4, r4, lsl #2
   17d54:	add	r4, r4, #1
   17d58:	add	r0, r8, r0, lsl #3
   17d5c:	strb	r1, [r0, #8]
   17d60:	vst1.8	{d16}, [r0]
   17d64:	ldr	r1, [r7, #8]
   17d68:	str	r1, [r0, #36]	; 0x24
   17d6c:	ldr	r9, [sl, #340]	; 0x154
   17d70:	add	r5, r5, #1
   17d74:	mov	r0, r7
   17d78:	cmp	r5, r9
   17d7c:	blt	17d20 <sav_parse_very_long_string_record+0xb0>
   17d80:	ldr	r4, [sp, #24]
   17d84:	ldr	r5, [sp, #28]
   17d88:	mov	r2, #40	; 0x28
   17d8c:	add	r0, r4, r5
   17d90:	str	r0, [sp, #36]	; 0x24
   17d94:	mov	r0, r8
   17d98:	ldr	r3, [pc, #1092]	; 181e4 <sav_parse_very_long_string_record+0x574>
   17d9c:	ldr	r1, [sp, #44]	; 0x2c
   17da0:	add	r3, pc, r3
   17da4:	bl	4d80 <qsort@plt>
   17da8:	cmp	r5, #0
   17dac:	mov	r6, r4
   17db0:	beq	18164 <sav_parse_very_long_string_record+0x4f4>
   17db4:	ldr	r6, [sp, #24]
   17db8:	mov	r0, #0
   17dbc:	mov	r5, #1
   17dc0:	mvn	lr, #1
   17dc4:	mov	r2, #1
   17dc8:	mov	r9, #0
   17dcc:	str	sl, [sp, #32]
   17dd0:	str	r0, [sp, #52]	; 0x34
   17dd4:	mov	r0, #0
   17dd8:	str	r0, [sp, #60]	; 0x3c
   17ddc:	ldr	r0, [pc, #1028]	; 181e8 <sav_parse_very_long_string_record+0x578>
   17de0:	ldr	r1, [pc, #1028]	; 181ec <sav_parse_very_long_string_record+0x57c>
   17de4:	ldr	r3, [pc, #1028]	; 181f0 <sav_parse_very_long_string_record+0x580>
   17de8:	str	r6, [sp, #56]	; 0x38
   17dec:	add	r1, pc, r1
   17df0:	add	r0, pc, r0
   17df4:	add	r3, pc, r3
   17df8:	ldrb	r1, [r1, r2]
   17dfc:	ldrb	r0, [r0, r2]
   17e00:	add	r4, r3, r1
   17e04:	movw	r1, #7164	; 0x1bfc
   17e08:	tst	r5, r1, lsr r2
   17e0c:	bne	17e18 <sav_parse_very_long_string_record+0x1a8>
   17e10:	mov	ip, r4
   17e14:	b	17e84 <sav_parse_very_long_string_record+0x214>
   17e18:	ldr	r1, [pc, #980]	; 181f4 <sav_parse_very_long_string_record+0x584>
   17e1c:	add	r1, pc, r1
   17e20:	ldrb	lr, [r1, r2]
   17e24:	add	ip, r4, lr
   17e28:	sub	r6, ip, #1
   17e2c:	cmp	r6, r4
   17e30:	bcc	17e74 <sav_parse_very_long_string_record+0x204>
   17e34:	ldr	r1, [sp, #56]	; 0x38
   17e38:	mov	r3, r4
   17e3c:	ldrb	r5, [r1]
   17e40:	sub	r7, r6, r3
   17e44:	mov	r1, r3
   17e48:	ldrb	r7, [r1, r7, asr #1]!
   17e4c:	cmp	r5, r7
   17e50:	bcs	17e64 <sav_parse_very_long_string_record+0x1f4>
   17e54:	sub	r6, r1, #1
   17e58:	cmp	r6, r3
   17e5c:	bcs	17e40 <sav_parse_very_long_string_record+0x1d0>
   17e60:	b	17e74 <sav_parse_very_long_string_record+0x204>
   17e64:	bls	17ef8 <sav_parse_very_long_string_record+0x288>
   17e68:	add	r3, r1, #1
   17e6c:	cmp	r6, r3
   17e70:	bcs	17e40 <sav_parse_very_long_string_record+0x1d0>
   17e74:	ldr	r6, [sp, #56]	; 0x38
   17e78:	add	r0, lr, r0
   17e7c:	mov	r5, #1
   17e80:	mvn	lr, #1
   17e84:	movw	r1, #11774	; 0x2dfe
   17e88:	tst	r5, r1, lsr r2
   17e8c:	beq	17f20 <sav_parse_very_long_string_record+0x2b0>
   17e90:	ldr	r1, [pc, #864]	; 181f8 <sav_parse_very_long_string_record+0x588>
   17e94:	add	r1, pc, r1
   17e98:	ldrb	r2, [r1, r2]
   17e9c:	add	r1, ip, r2, lsl #1
   17ea0:	sub	r3, r1, #2
   17ea4:	cmp	r3, ip
   17ea8:	bcc	17f1c <sav_parse_very_long_string_record+0x2ac>
   17eac:	ldrb	r7, [r6]
   17eb0:	mov	r4, ip
   17eb4:	sub	r1, r3, r4
   17eb8:	and	r6, lr, r1, asr #1
   17ebc:	mov	r1, r4
   17ec0:	ldrb	r6, [r1, r6]!
   17ec4:	cmp	r7, r6
   17ec8:	bcs	17edc <sav_parse_very_long_string_record+0x26c>
   17ecc:	sub	r3, r1, #2
   17ed0:	cmp	r3, r4
   17ed4:	bcs	17eb4 <sav_parse_very_long_string_record+0x244>
   17ed8:	b	17f18 <sav_parse_very_long_string_record+0x2a8>
   17edc:	ldrb	r6, [r1, #1]
   17ee0:	cmp	r7, r6
   17ee4:	bls	17f10 <sav_parse_very_long_string_record+0x2a0>
   17ee8:	add	r4, r1, #2
   17eec:	cmp	r3, r4
   17ef0:	bcs	17eb4 <sav_parse_very_long_string_record+0x244>
   17ef4:	b	17f18 <sav_parse_very_long_string_record+0x2a8>
   17ef8:	ldr	r6, [sp, #56]	; 0x38
   17efc:	sub	r0, r0, r4
   17f00:	mov	r5, #1
   17f04:	mvn	lr, #1
   17f08:	add	r0, r0, r1
   17f0c:	b	17f20 <sav_parse_very_long_string_record+0x2b0>
   17f10:	sub	r1, r1, ip
   17f14:	asr	r2, r1, #1
   17f18:	ldr	r6, [sp, #56]	; 0x38
   17f1c:	add	r0, r2, r0
   17f20:	ldr	r1, [pc, #724]	; 181fc <sav_parse_very_long_string_record+0x58c>
   17f24:	add	r1, pc, r1
   17f28:	ldrb	r1, [r1, r0]
   17f2c:	movw	r0, #25590	; 0x63f6
   17f30:	tst	r5, r0, lsr r1
   17f34:	str	r1, [sp, #48]	; 0x30
   17f38:	bne	18108 <sav_parse_very_long_string_record+0x498>
   17f3c:	ldr	r0, [pc, #700]	; 18200 <sav_parse_very_long_string_record+0x590>
   17f40:	add	r0, pc, r0
   17f44:	ldrb	r0, [r0, r1]
   17f48:	orr	r1, r0, #2
   17f4c:	cmp	r1, #2
   17f50:	beq	18108 <sav_parse_very_long_string_record+0x498>
   17f54:	ldr	r1, [pc, #680]	; 18204 <sav_parse_very_long_string_record+0x594>
   17f58:	add	r1, pc, r1
   17f5c:	add	r4, r1, r0
   17f60:	ldrb	r5, [r4]
   17f64:	ldrb	r0, [r4, #1]!
   17f68:	cmp	r0, #5
   17f6c:	bhi	18090 <sav_parse_very_long_string_record+0x420>
   17f70:	add	r1, pc, #4
   17f74:	ldr	r0, [r1, r0, lsl #2]
   17f78:	add	pc, r1, r0
   17f7c:	.word	0x00000018
   17f80:	.word	0x00000088
   17f84:	.word	0x000000dc
   17f88:	.word	0x00000120
   17f8c:	.word	0x00000134
   17f90:	.word	0x0000014c
   17f94:	ldr	r0, [sp, #44]	; 0x2c
   17f98:	cmp	r0, #0
   17f9c:	beq	18090 <sav_parse_very_long_string_record+0x420>
   17fa0:	str	r9, [sp, #40]	; 0x28
   17fa4:	mov	sl, #0
   17fa8:	mov	r9, r0
   17fac:	add	r0, r9, sl
   17fb0:	lsr	r7, r0, #1
   17fb4:	add	r0, r7, r7, lsl #2
   17fb8:	add	r6, r8, r0, lsl #3
   17fbc:	add	r0, sp, #64	; 0x40
   17fc0:	mov	r1, r6
   17fc4:	bl	47b0 <strcmp@plt>
   17fc8:	cmp	r0, #0
   17fcc:	bge	17fd8 <sav_parse_very_long_string_record+0x368>
   17fd0:	mov	r9, r7
   17fd4:	b	17fe0 <sav_parse_very_long_string_record+0x370>
   17fd8:	beq	180d8 <sav_parse_very_long_string_record+0x468>
   17fdc:	add	sl, r7, #1
   17fe0:	cmp	sl, r9
   17fe4:	bcc	17fac <sav_parse_very_long_string_record+0x33c>
   17fe8:	ldr	sl, [sp, #32]
   17fec:	ldr	r6, [sp, #56]	; 0x38
   17ff0:	ldr	r9, [sp, #40]	; 0x28
   17ff4:	mvn	lr, #1
   17ff8:	subs	r5, r5, #1
   17ffc:	bne	17f64 <sav_parse_very_long_string_record+0x2f4>
   18000:	b	18108 <sav_parse_very_long_string_record+0x498>
   18004:	add	r7, sp, #64	; 0x40
   18008:	ldr	r1, [sp, #60]	; 0x3c
   1800c:	mov	r0, r7
   18010:	mov	r7, r6
   18014:	mov	r6, r8
   18018:	mov	r8, sl
   1801c:	mov	sl, r9
   18020:	ldr	r9, [sp, #52]	; 0x34
   18024:	mov	r2, r9
   18028:	bl	48b8 <memcpy@plt>
   1802c:	mov	r0, #0
   18030:	add	r1, sp, #64	; 0x40
   18034:	mvn	lr, #1
   18038:	strb	r0, [r1, r9]
   1803c:	mov	r9, sl
   18040:	mov	sl, r8
   18044:	mov	r8, r6
   18048:	mov	r6, r7
   1804c:	subs	r5, r5, #1
   18050:	bne	17f64 <sav_parse_very_long_string_record+0x2f4>
   18054:	b	18108 <sav_parse_very_long_string_record+0x498>
   18058:	ldrb	r0, [r6]
   1805c:	cmp	r0, #0
   18060:	beq	18090 <sav_parse_very_long_string_record+0x420>
   18064:	sub	r0, r0, #48	; 0x30
   18068:	movw	r2, #52429	; 0xcccd
   1806c:	uxtb	r1, r0
   18070:	movt	r2, #52428	; 0xcccc
   18074:	eor	r1, r1, lr
   18078:	umull	r1, r2, r1, r2
   1807c:	cmp	r9, r2, lsr #3
   18080:	bhi	1813c <sav_parse_very_long_string_record+0x4cc>
   18084:	add	r1, r9, r9, lsl #2
   18088:	lsl	r1, r1, #1
   1808c:	uxtab	r9, r1, r0
   18090:	subs	r5, r5, #1
   18094:	bne	17f64 <sav_parse_very_long_string_record+0x2f4>
   18098:	b	18108 <sav_parse_very_long_string_record+0x498>
   1809c:	mov	r0, r6
   180a0:	str	r6, [sp, #60]	; 0x3c
   180a4:	subs	r5, r5, #1
   180a8:	bne	17f64 <sav_parse_very_long_string_record+0x2f4>
   180ac:	b	18108 <sav_parse_very_long_string_record+0x498>
   180b0:	ldr	r0, [sp, #60]	; 0x3c
   180b4:	sub	r0, r6, r0
   180b8:	str	r0, [sp, #52]	; 0x34
   180bc:	subs	r5, r5, #1
   180c0:	bne	17f64 <sav_parse_very_long_string_record+0x2f4>
   180c4:	b	18108 <sav_parse_very_long_string_record+0x498>
   180c8:	mov	r9, #0
   180cc:	subs	r5, r5, #1
   180d0:	bne	17f64 <sav_parse_very_long_string_record+0x2f4>
   180d4:	b	18108 <sav_parse_very_long_string_record+0x498>
   180d8:	cmp	r6, #0
   180dc:	beq	17fe8 <sav_parse_very_long_string_record+0x378>
   180e0:	ldr	sl, [sp, #32]
   180e4:	ldr	r0, [r6, #36]	; 0x24
   180e8:	ldr	r9, [sp, #40]	; 0x28
   180ec:	ldr	r6, [sp, #56]	; 0x38
   180f0:	mvn	lr, #1
   180f4:	ldr	r1, [sl, #44]	; 0x2c
   180f8:	ldr	r0, [r1, r0, lsl #2]
   180fc:	str	r9, [r0, #20]
   18100:	subs	r5, r5, #1
   18104:	bne	17f64 <sav_parse_very_long_string_record+0x2f4>
   18108:	ldr	r3, [sp, #48]	; 0x30
   1810c:	cmp	r3, #1
   18110:	beq	18144 <sav_parse_very_long_string_record+0x4d4>
   18114:	ldr	r0, [pc, #236]	; 18208 <sav_parse_very_long_string_record+0x598>
   18118:	add	r6, r6, #1
   1811c:	mov	r5, #1
   18120:	add	r0, pc, r0
   18124:	ldrb	r2, [r0, r3]
   18128:	ldr	r0, [sp, #36]	; 0x24
   1812c:	cmp	r6, r0
   18130:	bne	17ddc <sav_parse_very_long_string_record+0x16c>
   18134:	ldr	r6, [sp, #36]	; 0x24
   18138:	b	18144 <sav_parse_very_long_string_record+0x4d4>
   1813c:	ldr	r3, [sp, #48]	; 0x30
   18140:	add	r6, r6, #1
   18144:	mov	r0, #26624	; 0x6800
   18148:	mov	r1, #1
   1814c:	tst	r1, r0, lsr r3
   18150:	beq	18164 <sav_parse_very_long_string_record+0x4f4>
   18154:	ldr	r0, [sp, #36]	; 0x24
   18158:	mov	r5, #0
   1815c:	cmp	r6, r0
   18160:	beq	181b8 <sav_parse_very_long_string_record+0x548>
   18164:	ldr	r0, [sl, #24]
   18168:	mov	r5, #5
   1816c:	cmp	r0, #0
   18170:	beq	181b8 <sav_parse_very_long_string_record+0x548>
   18174:	ldr	r0, [sp, #36]	; 0x24
   18178:	ldr	r1, [sp, #28]
   1817c:	sub	r0, r0, r6
   18180:	str	r1, [sp]
   18184:	stmib	sp, {r0, r6}
   18188:	ldr	r0, [sp, #24]
   1818c:	ldr	r2, [pc, #120]	; 1820c <sav_parse_very_long_string_record+0x59c>
   18190:	ldr	r4, [sp, #20]
   18194:	ldr	r1, [sp, #16]
   18198:	sub	r3, r6, r0
   1819c:	add	r2, pc, r2
   181a0:	mov	r0, r4
   181a4:	bl	4bdc <snprintf@plt>
   181a8:	ldr	r2, [sl, #24]
   181ac:	ldr	r1, [sl, #40]	; 0x28
   181b0:	mov	r0, r4
   181b4:	blx	r2
   181b8:	cmp	r8, #0
   181bc:	beq	181c8 <sav_parse_very_long_string_record+0x558>
   181c0:	mov	r0, r8
   181c4:	bl	4864 <free@plt>
   181c8:	ldr	r0, [sp, #20]
   181cc:	cmp	r0, #0
   181d0:	beq	181d8 <sav_parse_very_long_string_record+0x568>
   181d4:	bl	4864 <free@plt>
   181d8:	mov	r0, r5
   181dc:	sub	sp, fp, #28
   181e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181e4:	.word	0x00000468
   181e8:	.word	0x000123fb
   181ec:	.word	0x000123f1
   181f0:	.word	0x00012372
   181f4:	.word	0x000123dd
   181f8:	.word	0x00012373
   181fc:	.word	0x000122f1
   18200:	.word	0x00012336
   18204:	.word	0x0001232d
   18208:	.word	0x00012147
   1820c:	.word	0x00012191

00018210 <compare_varlookups>:
   18210:	b	47b0 <strcmp@plt>

00018214 <sav_parse_time>:
   18214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18218:	add	fp, sp, #28
   1821c:	sub	sp, sp, #36	; 0x24
   18220:	sub	sp, sp, #8192	; 0x2000
   18224:	mov	r4, r3
   18228:	mov	r8, r2
   1822c:	mov	r3, r1
   18230:	add	lr, r0, r1
   18234:	mov	r5, #1
   18238:	cmp	r1, #0
   1823c:	beq	18480 <sav_parse_time+0x26c>
   18240:	mov	r7, #0
   18244:	mov	r9, #1
   18248:	mov	r6, #1
   1824c:	mov	r1, r0
   18250:	str	r3, [sp, #16]
   18254:	str	r4, [sp, #20]
   18258:	str	r0, [sp, #12]
   1825c:	str	lr, [sp, #28]
   18260:	str	r8, [sp, #24]
   18264:	ldr	r0, [pc, #724]	; 18540 <sav_parse_time+0x32c>
   18268:	add	r0, pc, r0
   1826c:	ldrb	sl, [r0, r6]
   18270:	ldr	r0, [pc, #716]	; 18544 <sav_parse_time+0x330>
   18274:	ldr	r2, [pc, #716]	; 18548 <sav_parse_time+0x334>
   18278:	add	r0, pc, r0
   1827c:	add	r2, pc, r2
   18280:	ldrb	r0, [r0, r6]
   18284:	add	r3, r2, r0
   18288:	mov	r0, #218	; 0xda
   1828c:	tst	r9, r0, lsr r6
   18290:	bne	1829c <sav_parse_time+0x88>
   18294:	mov	ip, r3
   18298:	b	18304 <sav_parse_time+0xf0>
   1829c:	ldr	r0, [pc, #680]	; 1854c <sav_parse_time+0x338>
   182a0:	add	r0, pc, r0
   182a4:	ldrb	r2, [r0, r6]
   182a8:	add	ip, r3, r2
   182ac:	sub	r9, ip, #1
   182b0:	cmp	r9, r3
   182b4:	bcc	182f4 <sav_parse_time+0xe0>
   182b8:	ldrb	lr, [r1]
   182bc:	mov	r4, r3
   182c0:	sub	r8, r9, r4
   182c4:	mov	r5, r4
   182c8:	ldrb	r0, [r5, r8, asr #1]!
   182cc:	cmp	lr, r0
   182d0:	bcs	182e4 <sav_parse_time+0xd0>
   182d4:	sub	r9, r5, #1
   182d8:	cmp	r9, r4
   182dc:	bcs	182c0 <sav_parse_time+0xac>
   182e0:	b	182f4 <sav_parse_time+0xe0>
   182e4:	bls	1837c <sav_parse_time+0x168>
   182e8:	add	r4, r5, #1
   182ec:	cmp	r9, r4
   182f0:	bcs	182c0 <sav_parse_time+0xac>
   182f4:	ldr	lr, [sp, #28]
   182f8:	ldr	r8, [sp, #24]
   182fc:	add	sl, r2, sl
   18300:	mov	r9, #1
   18304:	movw	r0, #4022	; 0xfb6
   18308:	tst	r9, r0, lsr r6
   1830c:	beq	183a0 <sav_parse_time+0x18c>
   18310:	ldr	r0, [pc, #568]	; 18550 <sav_parse_time+0x33c>
   18314:	add	r0, pc, r0
   18318:	ldrb	r6, [r0, r6]
   1831c:	add	r0, ip, r6, lsl #1
   18320:	sub	r0, r0, #2
   18324:	cmp	r0, ip
   18328:	bcc	1839c <sav_parse_time+0x188>
   1832c:	ldrb	r3, [r1]
   18330:	mov	r5, ip
   18334:	sub	r2, r0, r5
   18338:	mvn	r4, #1
   1833c:	and	r2, r4, r2, asr #1
   18340:	mov	r4, r5
   18344:	ldrb	r2, [r4, r2]!
   18348:	cmp	r3, r2
   1834c:	bcs	18360 <sav_parse_time+0x14c>
   18350:	sub	r0, r4, #2
   18354:	cmp	r0, r5
   18358:	bcs	18334 <sav_parse_time+0x120>
   1835c:	b	1839c <sav_parse_time+0x188>
   18360:	ldrb	r2, [r4, #1]
   18364:	cmp	r3, r2
   18368:	bls	18394 <sav_parse_time+0x180>
   1836c:	add	r5, r4, #2
   18370:	cmp	r0, r5
   18374:	bcs	18334 <sav_parse_time+0x120>
   18378:	b	1839c <sav_parse_time+0x188>
   1837c:	ldr	lr, [sp, #28]
   18380:	ldr	r8, [sp, #24]
   18384:	sub	r0, sl, r3
   18388:	mov	r9, #1
   1838c:	add	sl, r0, r5
   18390:	b	183a0 <sav_parse_time+0x18c>
   18394:	sub	r0, r4, ip
   18398:	asr	r6, r0, #1
   1839c:	add	sl, r6, sl
   183a0:	movw	r0, #27349	; 0x6ad5
   183a4:	movt	r0, #1877	; 0x755
   183a8:	tst	r9, r0, lsr sl
   183ac:	bne	18448 <sav_parse_time+0x234>
   183b0:	ldr	r0, [pc, #412]	; 18554 <sav_parse_time+0x340>
   183b4:	movw	r2, #8197	; 0x2005
   183b8:	add	r0, pc, r0
   183bc:	ldrb	r0, [r0, sl]
   183c0:	tst	r9, r2, lsr r0
   183c4:	bne	18448 <sav_parse_time+0x234>
   183c8:	ldr	r2, [pc, #392]	; 18558 <sav_parse_time+0x344>
   183cc:	add	r2, pc, r2
   183d0:	ldrb	r0, [r2, r0]!
   183d4:	add	r3, r2, #1
   183d8:	rsb	r6, r0, #0
   183dc:	ldrb	r0, [r3]
   183e0:	cmp	r0, #4
   183e4:	bhi	1843c <sav_parse_time+0x228>
   183e8:	add	r2, pc, #4
   183ec:	ldr	r0, [r2, r0, lsl #2]
   183f0:	add	pc, r2, r0
   183f4:	.word	0x00000014
   183f8:	.word	0x00000028
   183fc:	.word	0x00000030
   18400:	.word	0x0000003c
   18404:	.word	0x00000044
   18408:	ldrb	r0, [r1]
   1840c:	add	r2, r7, r7, lsl #2
   18410:	add	r0, r0, r2, lsl #1
   18414:	sub	r7, r0, #48	; 0x30
   18418:	b	1843c <sav_parse_time+0x228>
   1841c:	mov	r7, #0
   18420:	b	1843c <sav_parse_time+0x228>
   18424:	ldrb	r0, [r1]
   18428:	sub	r7, r0, #48	; 0x30
   1842c:	b	1843c <sav_parse_time+0x228>
   18430:	str	r7, [r8, #8]
   18434:	b	1843c <sav_parse_time+0x228>
   18438:	str	r7, [r8, #4]
   1843c:	add	r3, r3, #1
   18440:	adds	r6, r6, #1
   18444:	bne	183dc <sav_parse_time+0x1c8>
   18448:	ldr	r0, [pc, #268]	; 1855c <sav_parse_time+0x348>
   1844c:	add	r0, pc, r0
   18450:	ldrb	r6, [r0, sl]
   18454:	movw	r0, #10836	; 0x2a54
   18458:	movt	r0, #1877	; 0x755
   1845c:	tst	r9, r0, lsr sl
   18460:	bne	184dc <sav_parse_time+0x2c8>
   18464:	add	r1, r1, #1
   18468:	cmp	r1, lr
   1846c:	bne	18264 <sav_parse_time+0x50>
   18470:	add	r4, sp, #12
   18474:	mov	r5, #1
   18478:	ldm	r4, {r0, r3, r4}
   1847c:	b	18488 <sav_parse_time+0x274>
   18480:	mov	r7, #0
   18484:	mov	r6, #1
   18488:	ldr	r1, [pc, #208]	; 18560 <sav_parse_time+0x34c>
   1848c:	add	r1, pc, r1
   18490:	ldrb	r2, [r1, r6]
   18494:	movw	r1, #8197	; 0x2005
   18498:	tst	r5, r1, lsr r2
   1849c:	bne	184cc <sav_parse_time+0x2b8>
   184a0:	ldr	r1, [pc, #188]	; 18564 <sav_parse_time+0x350>
   184a4:	add	r1, pc, r1
   184a8:	ldrb	r2, [r1, r2]!
   184ac:	add	r5, r1, #1
   184b0:	rsb	r1, r2, #0
   184b4:	ldrb	r2, [r5]
   184b8:	add	r5, r5, #1
   184bc:	cmp	r2, #5
   184c0:	streq	r7, [r8]
   184c4:	adds	r1, r1, #1
   184c8:	bne	184b4 <sav_parse_time+0x2a0>
   184cc:	mov	r1, lr
   184d0:	cmp	r6, #12
   184d4:	bge	184ec <sav_parse_time+0x2d8>
   184d8:	b	184f8 <sav_parse_time+0x2e4>
   184dc:	add	r4, sp, #12
   184e0:	ldm	r4, {r0, r3, r4}
   184e4:	cmp	r6, #12
   184e8:	blt	184f8 <sav_parse_time+0x2e4>
   184ec:	mov	r5, #0
   184f0:	cmp	r1, lr
   184f4:	beq	18534 <sav_parse_time+0x320>
   184f8:	mov	r5, #29
   184fc:	cmp	r4, #0
   18500:	beq	18534 <sav_parse_time+0x320>
   18504:	str	r3, [sp]
   18508:	str	r0, [sp, #4]
   1850c:	ldr	r6, [fp, #8]
   18510:	add	r7, sp, #32
   18514:	mov	r1, #8192	; 0x2000
   18518:	ldr	r2, [pc, #72]	; 18568 <sav_parse_time+0x354>
   1851c:	mov	r0, r7
   18520:	add	r2, pc, r2
   18524:	bl	4bdc <snprintf@plt>
   18528:	mov	r0, r7
   1852c:	mov	r1, r6
   18530:	blx	r4
   18534:	mov	r0, r5
   18538:	sub	sp, fp, #28
   1853c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18540:	.word	0x00012119
   18544:	.word	0x000120fc
   18548:	.word	0x000120e0
   1854c:	.word	0x000120ee
   18550:	.word	0x00012087
   18554:	.word	0x0001200b
   18558:	.word	0x00012012
   1855c:	.word	0x00011f5c
   18560:	.word	0x00011f60
   18564:	.word	0x00011f3a
   18568:	.word	0x00012140

0001856c <sav_parse_date>:
   1856c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18570:	add	fp, sp, #28
   18574:	sub	sp, sp, #36	; 0x24
   18578:	sub	sp, sp, #8192	; 0x2000
   1857c:	add	ip, r0, r1
   18580:	cmp	r1, #0
   18584:	str	r3, [sp, #16]
   18588:	str	r1, [sp, #12]
   1858c:	str	r0, [sp, #20]
   18590:	beq	18854 <sav_parse_date+0x2e8>
   18594:	mov	r9, #1
   18598:	mov	r8, #0
   1859c:	mov	r5, #1
   185a0:	mov	r1, r0
   185a4:	str	ip, [sp, #24]
   185a8:	ldr	r0, [pc, #872]	; 18918 <sav_parse_date+0x3ac>
   185ac:	add	r0, pc, r0
   185b0:	ldrb	lr, [r0, r5]
   185b4:	ldr	r0, [pc, #864]	; 1891c <sav_parse_date+0x3b0>
   185b8:	ldr	r3, [pc, #864]	; 18920 <sav_parse_date+0x3b4>
   185bc:	add	r0, pc, r0
   185c0:	add	r3, pc, r3
   185c4:	ldrb	r0, [r0, r5]
   185c8:	add	r3, r3, r0
   185cc:	uxtb	r0, r5
   185d0:	cmp	r0, #0
   185d4:	beq	185e0 <sav_parse_date+0x74>
   185d8:	cmp	r0, #47	; 0x2f
   185dc:	bne	185e8 <sav_parse_date+0x7c>
   185e0:	mov	sl, r3
   185e4:	b	18654 <sav_parse_date+0xe8>
   185e8:	str	r8, [sp, #28]
   185ec:	ldr	r0, [pc, #816]	; 18924 <sav_parse_date+0x3b8>
   185f0:	add	r0, pc, r0
   185f4:	ldrb	ip, [r0, r5]
   185f8:	add	sl, r3, ip
   185fc:	sub	r9, sl, #1
   18600:	cmp	r9, r3
   18604:	bcc	18644 <sav_parse_date+0xd8>
   18608:	ldrb	r0, [r1]
   1860c:	mov	r6, r3
   18610:	sub	r8, r9, r6
   18614:	mov	r7, r6
   18618:	ldrb	r4, [r7, r8, asr #1]!
   1861c:	cmp	r0, r4
   18620:	bcs	18634 <sav_parse_date+0xc8>
   18624:	sub	r9, r7, #1
   18628:	cmp	r9, r6
   1862c:	bcs	18610 <sav_parse_date+0xa4>
   18630:	b	18644 <sav_parse_date+0xd8>
   18634:	bls	18834 <sav_parse_date+0x2c8>
   18638:	add	r6, r7, #1
   1863c:	cmp	r9, r6
   18640:	bcs	18610 <sav_parse_date+0xa4>
   18644:	add	lr, ip, lr
   18648:	ldr	ip, [sp, #24]
   1864c:	ldr	r8, [sp, #28]
   18650:	mov	r9, #1
   18654:	ldr	r0, [pc, #716]	; 18928 <sav_parse_date+0x3bc>
   18658:	add	r0, pc, r0
   1865c:	ldrb	r5, [r0, r5]
   18660:	cmp	r5, #0
   18664:	beq	186c8 <sav_parse_date+0x15c>
   18668:	add	r0, sl, r5, lsl #1
   1866c:	sub	r3, r0, #2
   18670:	cmp	r3, sl
   18674:	bcc	186dc <sav_parse_date+0x170>
   18678:	ldrb	r0, [r1]
   1867c:	mov	r7, sl
   18680:	sub	r6, r3, r7
   18684:	mvn	r4, #1
   18688:	and	r4, r4, r6, asr #1
   1868c:	mov	r6, r7
   18690:	ldrb	r4, [r6, r4]!
   18694:	cmp	r0, r4
   18698:	bcs	186ac <sav_parse_date+0x140>
   1869c:	sub	r3, r6, #2
   186a0:	cmp	r3, r7
   186a4:	bcs	18680 <sav_parse_date+0x114>
   186a8:	b	186dc <sav_parse_date+0x170>
   186ac:	ldrb	r7, [r6, #1]
   186b0:	cmp	r0, r7
   186b4:	bls	186d4 <sav_parse_date+0x168>
   186b8:	add	r7, r6, #2
   186bc:	cmp	r3, r7
   186c0:	bcs	18680 <sav_parse_date+0x114>
   186c4:	b	186dc <sav_parse_date+0x170>
   186c8:	ldr	r6, [pc, #604]	; 1892c <sav_parse_date+0x3c0>
   186cc:	add	r6, pc, r6
   186d0:	b	186e8 <sav_parse_date+0x17c>
   186d4:	sub	r0, r6, sl
   186d8:	asr	r5, r0, #1
   186dc:	ldr	r6, [pc, #588]	; 18930 <sav_parse_date+0x3c4>
   186e0:	add	lr, r5, lr
   186e4:	add	r6, pc, r6
   186e8:	ldr	r0, [pc, #580]	; 18934 <sav_parse_date+0x3c8>
   186ec:	add	r0, pc, r0
   186f0:	ldrb	r4, [r0, lr]
   186f4:	ldr	r0, [pc, #572]	; 18938 <sav_parse_date+0x3cc>
   186f8:	add	r0, pc, r0
   186fc:	ldrb	r0, [r0, r4]
   18700:	cmp	r0, #0
   18704:	ldrbne	r3, [r6, r0]
   18708:	cmpne	r3, #0
   1870c:	beq	18810 <sav_parse_date+0x2a4>
   18710:	add	r0, r6, r0
   18714:	rsb	r3, r3, #0
   18718:	add	r5, r0, #1
   1871c:	ldrb	r0, [r5]
   18720:	cmp	r0, #15
   18724:	bhi	18804 <sav_parse_date+0x298>
   18728:	add	r7, pc, #4
   1872c:	ldr	r0, [r7, r0, lsl #2]
   18730:	add	pc, r7, r0
   18734:	.word	0x00000040
   18738:	.word	0x000000d0
   1873c:	.word	0x00000060
   18740:	.word	0x00000068
   18744:	.word	0x00000070
   18748:	.word	0x00000078
   1874c:	.word	0x00000080
   18750:	.word	0x00000088
   18754:	.word	0x00000090
   18758:	.word	0x00000098
   1875c:	.word	0x000000a0
   18760:	.word	0x000000a8
   18764:	.word	0x000000b0
   18768:	.word	0x000000b8
   1876c:	.word	0x000000c0
   18770:	.word	0x000000c8
   18774:	ldrb	r7, [r1]
   18778:	add	r0, r8, r8, lsl #2
   1877c:	lsl	r0, r0, #1
   18780:	sub	r7, r7, #48	; 0x30
   18784:	uxtb	r6, r7
   18788:	cmp	r6, #10
   1878c:	uxtabcc	r8, r0, r7
   18790:	b	18804 <sav_parse_date+0x298>
   18794:	mov	r8, #0
   18798:	b	18804 <sav_parse_date+0x298>
   1879c:	str	r8, [r2, #12]
   187a0:	b	18804 <sav_parse_date+0x298>
   187a4:	mov	r0, #0
   187a8:	b	18800 <sav_parse_date+0x294>
   187ac:	str	r9, [r2, #16]
   187b0:	b	18804 <sav_parse_date+0x298>
   187b4:	mov	r0, #2
   187b8:	b	18800 <sav_parse_date+0x294>
   187bc:	mov	r0, #3
   187c0:	b	18800 <sav_parse_date+0x294>
   187c4:	mov	r0, #4
   187c8:	b	18800 <sav_parse_date+0x294>
   187cc:	mov	r0, #5
   187d0:	b	18800 <sav_parse_date+0x294>
   187d4:	mov	r0, #6
   187d8:	b	18800 <sav_parse_date+0x294>
   187dc:	mov	r0, #7
   187e0:	b	18800 <sav_parse_date+0x294>
   187e4:	mov	r0, #8
   187e8:	b	18800 <sav_parse_date+0x294>
   187ec:	mov	r0, #9
   187f0:	b	18800 <sav_parse_date+0x294>
   187f4:	mov	r0, #10
   187f8:	b	18800 <sav_parse_date+0x294>
   187fc:	mov	r0, #11
   18800:	str	r0, [r2, #16]
   18804:	add	r5, r5, #1
   18808:	adds	r3, r3, #1
   1880c:	bne	1871c <sav_parse_date+0x1b0>
   18810:	ldr	r0, [pc, #292]	; 1893c <sav_parse_date+0x3d0>
   18814:	cmp	r4, #1
   18818:	add	r0, pc, r0
   1881c:	ldrb	r5, [r0, r4]
   18820:	beq	188ac <sav_parse_date+0x340>
   18824:	add	r1, r1, #1
   18828:	cmp	r1, ip
   1882c:	bne	185a8 <sav_parse_date+0x3c>
   18830:	b	1885c <sav_parse_date+0x2f0>
   18834:	ldr	ip, [sp, #24]
   18838:	ldr	r8, [sp, #28]
   1883c:	ldr	r6, [pc, #264]	; 1894c <sav_parse_date+0x3e0>
   18840:	sub	r0, lr, r3
   18844:	mov	r9, #1
   18848:	add	lr, r0, r7
   1884c:	add	r6, pc, r6
   18850:	b	186e8 <sav_parse_date+0x17c>
   18854:	mov	r8, #0
   18858:	mov	r5, #1
   1885c:	ldr	r0, [pc, #220]	; 18940 <sav_parse_date+0x3d4>
   18860:	ldr	r3, [pc, #220]	; 18944 <sav_parse_date+0x3d8>
   18864:	add	r0, pc, r0
   18868:	add	r3, pc, r3
   1886c:	ldrb	r0, [r0, r5]
   18870:	ldrb	r1, [r3, r0]
   18874:	cmp	r1, #0
   18878:	beq	188a8 <sav_parse_date+0x33c>
   1887c:	cmp	r8, #70	; 0x46
   18880:	add	r0, r3, r0
   18884:	rsb	r1, r1, #0
   18888:	addlt	r8, r8, #100	; 0x64
   1888c:	add	r0, r0, #1
   18890:	ldrb	r3, [r0]
   18894:	add	r0, r0, #1
   18898:	cmp	r3, #1
   1889c:	streq	r8, [r2, #20]
   188a0:	adds	r1, r1, #1
   188a4:	bne	18890 <sav_parse_date+0x324>
   188a8:	mov	r1, ip
   188ac:	ldr	r0, [sp, #20]
   188b0:	cmp	r5, #47	; 0x2f
   188b4:	blt	188c4 <sav_parse_date+0x358>
   188b8:	mov	r5, #0
   188bc:	cmp	r1, ip
   188c0:	beq	1890c <sav_parse_date+0x3a0>
   188c4:	ldr	r1, [sp, #16]
   188c8:	mov	r5, #29
   188cc:	cmp	r1, #0
   188d0:	beq	1890c <sav_parse_date+0x3a0>
   188d4:	ldr	r3, [sp, #12]
   188d8:	str	r0, [sp, #4]
   188dc:	ldr	r6, [fp, #8]
   188e0:	add	r7, sp, #32
   188e4:	mov	r4, r1
   188e8:	mov	r1, #8192	; 0x2000
   188ec:	mov	r0, r7
   188f0:	str	r3, [sp]
   188f4:	ldr	r2, [pc, #76]	; 18948 <sav_parse_date+0x3dc>
   188f8:	add	r2, pc, r2
   188fc:	bl	4bdc <snprintf@plt>
   18900:	mov	r0, r7
   18904:	mov	r1, r6
   18908:	blx	r4
   1890c:	mov	r0, r5
   18910:	sub	sp, fp, #28
   18914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18918:	.word	0x00011ed8
   1891c:	.word	0x00011e98
   18920:	.word	0x00011e39
   18924:	.word	0x00011ec4
   18928:	.word	0x00011fd8
   1892c:	.word	0x00011f12
   18930:	.word	0x00011efa
   18934:	.word	0x00011df8
   18938:	.word	0x00011eac
   1893c:	.word	0x00011d52
   18940:	.word	0x00011d9c
   18944:	.word	0x00011d76
   18948:	.word	0x00011d8e
   1894c:	.word	0x00011d92

00018950 <sav_parse_timestamp>:
   18950:	push	{r4, r5, fp, lr}
   18954:	add	fp, sp, #8
   18958:	sub	sp, sp, #56	; 0x38
   1895c:	add	r2, sp, #8
   18960:	mov	r4, r0
   18964:	vmov.i32	q8, #0	; 0x00000000
   18968:	mov	r5, r1
   1896c:	add	r0, r2, #28
   18970:	mov	r1, r2
   18974:	vst1.32	{d16-d17}, [r0]
   18978:	add	r0, r2, #16
   1897c:	vst1.64	{d16-d17}, [r0]
   18980:	mov	r0, #32
   18984:	vst1.64	{d16-d17}, [r1], r0
   18988:	mvn	r0, #0
   1898c:	str	r0, [r1]
   18990:	mov	r1, #8
   18994:	ldr	r0, [r4, #40]	; 0x28
   18998:	ldr	r3, [r4, #24]
   1899c:	str	r0, [sp]
   189a0:	add	r0, r5, #101	; 0x65
   189a4:	bl	487c <sav_parse_time@plt>
   189a8:	cmp	r0, #0
   189ac:	bne	189d4 <sav_parse_timestamp+0x84>
   189b0:	ldr	r0, [r4, #40]	; 0x28
   189b4:	ldr	r3, [r4, #24]
   189b8:	add	r2, sp, #8
   189bc:	mov	r1, #9
   189c0:	str	r0, [sp]
   189c4:	add	r0, r5, #92	; 0x5c
   189c8:	bl	4a08 <sav_parse_date@plt>
   189cc:	cmp	r0, #0
   189d0:	beq	189dc <sav_parse_timestamp+0x8c>
   189d4:	sub	sp, fp, #8
   189d8:	pop	{r4, r5, fp, pc}
   189dc:	add	r0, sp, #8
   189e0:	bl	47f8 <mktime@plt>
   189e4:	str	r0, [r4, #324]	; 0x144
   189e8:	mov	r0, #0
   189ec:	sub	sp, fp, #8
   189f0:	pop	{r4, r5, fp, pc}

000189f4 <readstat_parse_sav>:
   189f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189f8:	add	fp, sp, #28
   189fc:	sub	sp, sp, #4
   18a00:	vpush	{d8-d9}
   18a04:	sub	sp, sp, #296	; 0x128
   18a08:	sub	sp, sp, #66560	; 0x10400
   18a0c:	ldr	r4, [r0, #32]
   18a10:	mov	r6, r2
   18a14:	mov	r2, r1
   18a18:	mov	r7, r0
   18a1c:	mov	r0, r2
   18a20:	ldr	r3, [r4]
   18a24:	ldr	r1, [r4, #20]
   18a28:	blx	r3
   18a2c:	cmn	r0, #1
   18a30:	beq	18b44 <readstat_parse_sav+0x150>
   18a34:	ldr	r3, [r4, #8]
   18a38:	ldr	r2, [r4, #20]
   18a3c:	mov	r0, #0
   18a40:	mov	r1, #2
   18a44:	mov	r8, #0
   18a48:	blx	r3
   18a4c:	cmn	r0, #1
   18a50:	beq	190e0 <readstat_parse_sav+0x6ec>
   18a54:	ldr	r3, [r4, #8]
   18a58:	ldr	r2, [r4, #20]
   18a5c:	mov	r5, r0
   18a60:	mov	r0, #0
   18a64:	mov	r1, #0
   18a68:	mov	r8, #0
   18a6c:	blx	r3
   18a70:	cmn	r0, #1
   18a74:	beq	190e0 <readstat_parse_sav+0x6ec>
   18a78:	ldr	r3, [r4, #12]
   18a7c:	ldr	r2, [r4, #20]
   18a80:	add	r0, sp, #84	; 0x54
   18a84:	mov	r1, #176	; 0xb0
   18a88:	blx	r3
   18a8c:	mov	sl, #2
   18a90:	cmp	r0, #176	; 0xb0
   18a94:	bcc	190e4 <readstat_parse_sav+0x6f0>
   18a98:	add	r9, sp, #84	; 0x54
   18a9c:	mov	r1, r4
   18aa0:	mov	r0, r9
   18aa4:	bl	49e4 <sav_ctx_init@plt>
   18aa8:	cmp	r0, #0
   18aac:	beq	18b4c <readstat_parse_sav+0x158>
   18ab0:	mov	r8, r0
   18ab4:	add	r0, r7, #16
   18ab8:	mov	r1, r7
   18abc:	vld1.32	{d16-d17}, [r0]
   18ac0:	mov	r0, #48	; 0x30
   18ac4:	mov	r2, r8
   18ac8:	vld1.32	{d18-d19}, [r1], r0
   18acc:	add	r0, r8, #16
   18ad0:	vst1.32	{d16-d17}, [r0]
   18ad4:	mov	r0, #32
   18ad8:	vst1.32	{d18-d19}, [r2], r0
   18adc:	ldr	r0, [r7, #36]	; 0x24
   18ae0:	str	r0, [r8, #56]	; 0x38
   18ae4:	ldr	r0, [r7, #40]	; 0x28
   18ae8:	str	r6, [r8, #40]	; 0x28
   18aec:	str	r5, [r2]
   18af0:	str	r0, [r8, #60]	; 0x3c
   18af4:	ldr	r0, [r1]
   18af8:	cmp	r0, #1
   18afc:	strge	r0, [r8, #360]	; 0x168
   18b00:	ldr	r1, [r8, #352]	; 0x160
   18b04:	cmn	r1, #1
   18b08:	beq	18b58 <readstat_parse_sav+0x164>
   18b0c:	ldr	r0, [r8, #360]	; 0x168
   18b10:	sub	r0, r1, r0
   18b14:	cmn	r0, #1
   18b18:	movle	r0, #0
   18b1c:	strle	r1, [r8, #360]	; 0x168
   18b20:	str	r0, [r8, #356]	; 0x164
   18b24:	mov	r2, r0
   18b28:	ldr	r1, [r7, #44]	; 0x2c
   18b2c:	cmp	r1, r0
   18b30:	movlt	r2, r1
   18b34:	cmp	r1, #0
   18b38:	movle	r2, r0
   18b3c:	str	r2, [r8, #356]	; 0x164
   18b40:	b	18b64 <readstat_parse_sav+0x170>
   18b44:	mov	sl, #1
   18b48:	b	19100 <readstat_parse_sav+0x70c>
   18b4c:	mov	sl, #5
   18b50:	mov	r8, #0
   18b54:	b	190e4 <readstat_parse_sav+0x6f0>
   18b58:	ldr	r0, [r7, #44]	; 0x2c
   18b5c:	cmp	r0, #1
   18b60:	strge	r0, [r8, #356]	; 0x164
   18b64:	add	r2, sp, #1312	; 0x520
   18b68:	vmov.i32	q8, #0	; 0x00000000
   18b6c:	add	r0, r2, #28
   18b70:	mov	r1, r2
   18b74:	vst1.32	{d16-d17}, [r0]
   18b78:	add	r0, r2, #16
   18b7c:	vst1.64	{d16-d17}, [r0]
   18b80:	mov	r0, #32
   18b84:	vst1.64	{d16-d17}, [r1], r0
   18b88:	mvn	r0, #0
   18b8c:	str	r0, [r1]
   18b90:	mov	r1, #8
   18b94:	ldr	r0, [r8, #40]	; 0x28
   18b98:	ldr	r3, [r8, #24]
   18b9c:	str	r0, [sp]
   18ba0:	add	r0, r9, #101	; 0x65
   18ba4:	bl	487c <sav_parse_time@plt>
   18ba8:	mov	sl, r0
   18bac:	cmp	r0, #0
   18bb0:	bne	190e4 <readstat_parse_sav+0x6f0>
   18bb4:	ldr	r0, [r8, #40]	; 0x28
   18bb8:	ldr	r3, [r8, #24]
   18bbc:	add	r2, sp, #1312	; 0x520
   18bc0:	mov	r1, #9
   18bc4:	str	r0, [sp]
   18bc8:	add	r0, r9, #92	; 0x5c
   18bcc:	bl	4a08 <sav_parse_date@plt>
   18bd0:	mov	sl, r0
   18bd4:	cmp	r0, #0
   18bd8:	bne	190e4 <readstat_parse_sav+0x6f0>
   18bdc:	add	r0, sp, #1312	; 0x520
   18be0:	bl	47f8 <mktime@plt>
   18be4:	str	r0, [r8, #324]	; 0x144
   18be8:	add	lr, sp, #1024	; 0x400
   18bec:	mov	r1, #4
   18bf0:	ldr	r7, [r8, #36]	; 0x24
   18bf4:	add	r0, lr, #276	; 0x114
   18bf8:	ldr	r3, [r7, #12]
   18bfc:	ldr	r2, [r7, #20]
   18c00:	blx	r3
   18c04:	cmp	r0, #4
   18c08:	bcs	18c14 <readstat_parse_sav+0x220>
   18c0c:	mov	sl, #2
   18c10:	b	190e4 <readstat_parse_sav+0x6f0>
   18c14:	ldr	r0, [pc, #3948]	; 19b88 <readstat_parse_sav+0x1194>
   18c18:	add	r5, r8, #436	; 0x1b4
   18c1c:	str	r5, [sp, #80]	; 0x50
   18c20:	add	r0, pc, r0
   18c24:	add	r0, r0, #4
   18c28:	str	r0, [sp, #76]	; 0x4c
   18c2c:	ldrb	r1, [r5]
   18c30:	ldr	r0, [sp, #1300]	; 0x514
   18c34:	tst	r1, #1
   18c38:	beq	18c44 <readstat_parse_sav+0x250>
   18c3c:	bl	4768 <byteswap4@plt>
   18c40:	str	r0, [sp, #1300]	; 0x514
   18c44:	sub	r1, r0, #2
   18c48:	mov	sl, #5
   18c4c:	cmp	r1, #5
   18c50:	bhi	1908c <readstat_parse_sav+0x698>
   18c54:	add	r0, pc, #4
   18c58:	ldr	r1, [r0, r1, lsl #2]
   18c5c:	add	pc, r0, r1
   18c60:	.word	0x00000018
   18c64:	.word	0x000000d4
   18c68:	.word	0x00000484
   18c6c:	.word	0x00000484
   18c70:	.word	0x000000fc
   18c74:	.word	0x00000160
   18c78:	ldr	r6, [r8, #36]	; 0x24
   18c7c:	add	r0, sp, #272	; 0x110
   18c80:	mov	r1, #28
   18c84:	ldr	r3, [r6, #12]
   18c88:	ldr	r2, [r6, #20]
   18c8c:	blx	r3
   18c90:	cmp	r0, #28
   18c94:	bcc	18c0c <readstat_parse_sav+0x218>
   18c98:	ldr	r0, [sp, #276]	; 0x114
   18c9c:	cmp	r0, #0
   18ca0:	beq	18cfc <readstat_parse_sav+0x308>
   18ca4:	ldr	r3, [r6, #12]
   18ca8:	ldr	r2, [r6, #20]
   18cac:	add	lr, sp, #1024	; 0x400
   18cb0:	mov	r1, #4
   18cb4:	add	r0, lr, #284	; 0x11c
   18cb8:	blx	r3
   18cbc:	cmp	r0, #4
   18cc0:	bcc	18c0c <readstat_parse_sav+0x218>
   18cc4:	ldrb	r1, [r5]
   18cc8:	ldr	r0, [sp, #1308]	; 0x51c
   18ccc:	tst	r1, #1
   18cd0:	beq	18cd8 <readstat_parse_sav+0x2e4>
   18cd4:	bl	4768 <byteswap4@plt>
   18cd8:	str	r0, [sp, #1308]	; 0x51c
   18cdc:	add	r0, r0, #3
   18ce0:	mov	r1, #1
   18ce4:	ldr	r3, [r6, #8]
   18ce8:	ldr	r2, [r6, #20]
   18cec:	bic	r0, r0, #3
   18cf0:	blx	r3
   18cf4:	cmn	r0, #1
   18cf8:	beq	190e0 <readstat_parse_sav+0x6ec>
   18cfc:	ldr	r0, [sp, #280]	; 0x118
   18d00:	cmp	r0, #0
   18d04:	beq	19068 <readstat_parse_sav+0x674>
   18d08:	ldrb	r1, [r5]
   18d0c:	tst	r1, #1
   18d10:	beq	18d18 <readstat_parse_sav+0x324>
   18d14:	bl	4768 <byteswap4@plt>
   18d18:	ldr	r3, [r6, #8]
   18d1c:	ldr	r2, [r6, #20]
   18d20:	cmp	r0, #0
   18d24:	mov	r1, #1
   18d28:	rsbmi	r0, r0, #0
   18d2c:	lsl	r0, r0, #3
   18d30:	b	18f88 <readstat_parse_sav+0x594>
   18d34:	ldr	r6, [r8, #36]	; 0x24
   18d38:	add	r0, sp, #272	; 0x110
   18d3c:	mov	r1, #4
   18d40:	ldr	r3, [r6, #12]
   18d44:	ldr	r2, [r6, #20]
   18d48:	blx	r3
   18d4c:	cmp	r0, #4
   18d50:	bcs	18df0 <readstat_parse_sav+0x3fc>
   18d54:	mov	sl, #2
   18d58:	b	19024 <readstat_parse_sav+0x630>
   18d5c:	ldr	r5, [r8, #36]	; 0x24
   18d60:	add	r0, sp, #272	; 0x110
   18d64:	mov	r1, #4
   18d68:	ldr	r3, [r5, #12]
   18d6c:	ldr	r2, [r5, #20]
   18d70:	blx	r3
   18d74:	cmp	r0, #4
   18d78:	bcc	18c0c <readstat_parse_sav+0x218>
   18d7c:	ldr	r0, [sp, #80]	; 0x50
   18d80:	ldrb	r1, [r0]
   18d84:	ldr	r0, [sp, #272]	; 0x110
   18d88:	tst	r1, #1
   18d8c:	beq	18d98 <readstat_parse_sav+0x3a4>
   18d90:	bl	4768 <byteswap4@plt>
   18d94:	str	r0, [sp, #272]	; 0x110
   18d98:	ldr	r3, [r5, #8]
   18d9c:	ldr	r2, [r5, #20]
   18da0:	add	r0, r0, r0, lsl #2
   18da4:	mov	r1, #1
   18da8:	lsl	r0, r0, #4
   18dac:	blx	r3
   18db0:	cmn	r0, #1
   18db4:	beq	190e0 <readstat_parse_sav+0x6ec>
   18db8:	ldr	r5, [sp, #80]	; 0x50
   18dbc:	b	19068 <readstat_parse_sav+0x674>
   18dc0:	ldr	r3, [r7, #12]
   18dc4:	ldr	r2, [r7, #20]
   18dc8:	add	r0, sp, #260	; 0x104
   18dcc:	mov	r1, #12
   18dd0:	blx	r3
   18dd4:	cmp	r0, #12
   18dd8:	bcc	18c0c <readstat_parse_sav+0x218>
   18ddc:	ldrb	r0, [r5]
   18de0:	tst	r0, #1
   18de4:	bne	18ec0 <readstat_parse_sav+0x4cc>
   18de8:	ldr	r0, [sp, #268]	; 0x10c
   18dec:	b	18ee4 <readstat_parse_sav+0x4f0>
   18df0:	ldrb	r1, [r5]
   18df4:	ldr	r0, [sp, #272]	; 0x110
   18df8:	tst	r1, #1
   18dfc:	beq	18e08 <readstat_parse_sav+0x414>
   18e00:	bl	4768 <byteswap4@plt>
   18e04:	str	r0, [sp, #272]	; 0x110
   18e08:	cmp	r0, #0
   18e0c:	beq	18e94 <readstat_parse_sav+0x4a0>
   18e10:	mov	r5, #0
   18e14:	mov	r0, #0
   18e18:	mov	r1, #1
   18e1c:	strb	r0, [sp, #1308]	; 0x51c
   18e20:	mov	r0, #8
   18e24:	ldr	r3, [r6, #8]
   18e28:	ldr	r2, [r6, #20]
   18e2c:	blx	r3
   18e30:	mov	sl, #15
   18e34:	cmn	r0, #1
   18e38:	beq	18f98 <readstat_parse_sav+0x5a4>
   18e3c:	ldr	r3, [r6, #12]
   18e40:	ldr	r2, [r6, #20]
   18e44:	add	lr, sp, #1024	; 0x400
   18e48:	mov	r1, #1
   18e4c:	add	r0, lr, #284	; 0x11c
   18e50:	blx	r3
   18e54:	cmp	r0, #1
   18e58:	blt	18eb4 <readstat_parse_sav+0x4c0>
   18e5c:	ldrb	r0, [sp, #1308]	; 0x51c
   18e60:	ldr	r3, [r6, #8]
   18e64:	ldr	r2, [r6, #20]
   18e68:	mov	r1, #1
   18e6c:	add	r0, r0, #8
   18e70:	and	r0, r0, #504	; 0x1f8
   18e74:	sub	r0, r0, #1
   18e78:	blx	r3
   18e7c:	cmn	r0, #1
   18e80:	beq	18f98 <readstat_parse_sav+0x5a4>
   18e84:	ldr	r0, [sp, #272]	; 0x110
   18e88:	add	r5, r5, #1
   18e8c:	cmp	r5, r0
   18e90:	bcc	18e14 <readstat_parse_sav+0x420>
   18e94:	ldr	r3, [r6, #12]
   18e98:	ldr	r2, [r6, #20]
   18e9c:	add	lr, sp, #1024	; 0x400
   18ea0:	mov	r1, #4
   18ea4:	add	r0, lr, #284	; 0x11c
   18ea8:	blx	r3
   18eac:	cmp	r0, #4
   18eb0:	bcs	18fa0 <readstat_parse_sav+0x5ac>
   18eb4:	ldr	r5, [sp, #80]	; 0x50
   18eb8:	mov	sl, #2
   18ebc:	b	19024 <readstat_parse_sav+0x630>
   18ec0:	ldr	r0, [sp, #260]	; 0x104
   18ec4:	bl	4768 <byteswap4@plt>
   18ec8:	str	r0, [sp, #260]	; 0x104
   18ecc:	ldr	r0, [sp, #264]	; 0x108
   18ed0:	bl	4768 <byteswap4@plt>
   18ed4:	str	r0, [sp, #264]	; 0x108
   18ed8:	ldr	r0, [sp, #268]	; 0x10c
   18edc:	bl	4768 <byteswap4@plt>
   18ee0:	str	r0, [sp, #268]	; 0x10c
   18ee4:	ldr	r1, [sp, #260]	; 0x104
   18ee8:	ldr	r2, [sp, #264]	; 0x108
   18eec:	mul	r6, r2, r0
   18ef0:	cmp	r1, #3
   18ef4:	bne	18f78 <readstat_parse_sav+0x584>
   18ef8:	cmp	r6, #4096	; 0x1000
   18efc:	bhi	190e4 <readstat_parse_sav+0x6f0>
   18f00:	ldr	r3, [r7, #12]
   18f04:	ldr	r2, [r7, #20]
   18f08:	add	r0, sp, #1312	; 0x520
   18f0c:	mov	r1, r6
   18f10:	blx	r3
   18f14:	cmp	r6, #32
   18f18:	bne	190e4 <readstat_parse_sav+0x6f0>
   18f1c:	cmp	r0, r6
   18f20:	bcc	190e4 <readstat_parse_sav+0x6f0>
   18f24:	ldrb	r0, [r8, #436]	; 0x1b4
   18f28:	ldr	r6, [r8, #60]	; 0x3c
   18f2c:	ldr	r3, [sp, #1340]	; 0x53c
   18f30:	tst	r0, #1
   18f34:	beq	18f44 <readstat_parse_sav+0x550>
   18f38:	mov	r0, r3
   18f3c:	bl	4768 <byteswap4@plt>
   18f40:	mov	r3, r0
   18f44:	ldr	r1, [r8, #56]	; 0x38
   18f48:	cmp	r1, #0
   18f4c:	bne	19034 <readstat_parse_sav+0x640>
   18f50:	ldr	r1, [sp, #76]	; 0x4c
   18f54:	mov	r0, #0
   18f58:	ldr	r2, [r1, #-4]
   18f5c:	cmp	r3, r2
   18f60:	beq	19030 <readstat_parse_sav+0x63c>
   18f64:	add	r0, r0, #1
   18f68:	add	r1, r1, #36	; 0x24
   18f6c:	cmp	r0, #79	; 0x4f
   18f70:	bcc	18f58 <readstat_parse_sav+0x564>
   18f74:	b	19114 <readstat_parse_sav+0x720>
   18f78:	ldr	r3, [r7, #8]
   18f7c:	ldr	r2, [r7, #20]
   18f80:	mov	r0, r6
   18f84:	mov	r1, #1
   18f88:	blx	r3
   18f8c:	cmn	r0, #1
   18f90:	bne	19068 <readstat_parse_sav+0x674>
   18f94:	b	190e0 <readstat_parse_sav+0x6ec>
   18f98:	ldr	r5, [sp, #80]	; 0x50
   18f9c:	b	19024 <readstat_parse_sav+0x630>
   18fa0:	ldr	r5, [sp, #80]	; 0x50
   18fa4:	ldr	r0, [sp, #1308]	; 0x51c
   18fa8:	ldrb	r1, [r5]
   18fac:	tst	r1, #1
   18fb0:	beq	18fbc <readstat_parse_sav+0x5c8>
   18fb4:	bl	4768 <byteswap4@plt>
   18fb8:	str	r0, [sp, #1308]	; 0x51c
   18fbc:	mov	sl, #5
   18fc0:	cmp	r0, #4
   18fc4:	bne	19024 <readstat_parse_sav+0x630>
   18fc8:	ldr	r3, [r6, #12]
   18fcc:	ldr	r2, [r6, #20]
   18fd0:	add	lr, sp, #1024	; 0x400
   18fd4:	mov	r1, #4
   18fd8:	add	r0, lr, #280	; 0x118
   18fdc:	blx	r3
   18fe0:	cmp	r0, #4
   18fe4:	mov	sl, #2
   18fe8:	bcc	19024 <readstat_parse_sav+0x630>
   18fec:	ldrb	r1, [r5]
   18ff0:	ldr	r0, [sp, #1304]	; 0x518
   18ff4:	tst	r1, #1
   18ff8:	beq	19004 <readstat_parse_sav+0x610>
   18ffc:	bl	4768 <byteswap4@plt>
   19000:	str	r0, [sp, #1304]	; 0x518
   19004:	ldr	r3, [r6, #8]
   19008:	ldr	r2, [r6, #20]
   1900c:	lsl	r0, r0, #2
   19010:	mov	r1, #1
   19014:	blx	r3
   19018:	cmn	r0, #1
   1901c:	mov	sl, #0
   19020:	movweq	sl, #15
   19024:	cmp	sl, #0
   19028:	beq	19068 <readstat_parse_sav+0x674>
   1902c:	b	190e4 <readstat_parse_sav+0x6f0>
   19030:	str	r1, [r8, #56]	; 0x38
   19034:	cmp	r6, #0
   19038:	cmpne	r1, #0
   1903c:	beq	19068 <readstat_parse_sav+0x674>
   19040:	mov	r0, r6
   19044:	bl	4a98 <iconv_open@plt>
   19048:	cmn	r0, #1
   1904c:	beq	19250 <readstat_parse_sav+0x85c>
   19050:	mov	r6, r0
   19054:	ldr	r0, [r8, #336]	; 0x150
   19058:	cmp	r0, #0
   1905c:	beq	19064 <readstat_parse_sav+0x670>
   19060:	bl	478c <iconv_close@plt>
   19064:	str	r6, [r8, #336]	; 0x150
   19068:	ldr	r3, [r7, #12]
   1906c:	ldr	r2, [r7, #20]
   19070:	add	lr, sp, #1024	; 0x400
   19074:	mov	r1, #4
   19078:	add	r0, lr, #276	; 0x114
   1907c:	blx	r3
   19080:	cmp	r0, #3
   19084:	bhi	18c2c <readstat_parse_sav+0x238>
   19088:	b	18c0c <readstat_parse_sav+0x218>
   1908c:	movw	r1, #999	; 0x3e7
   19090:	cmp	r0, r1
   19094:	bne	190e4 <readstat_parse_sav+0x6f0>
   19098:	ldr	r3, [r4, #8]
   1909c:	ldr	r2, [r4, #20]
   190a0:	mov	r0, #176	; 0xb0
   190a4:	mov	r1, #0
   190a8:	blx	r3
   190ac:	cmn	r0, #1
   190b0:	beq	190e0 <readstat_parse_sav+0x6ec>
   190b4:	ldr	r3, [r8, #36]	; 0x24
   190b8:	ldr	r1, [r8, #28]
   190bc:	ldr	r0, [r8, #32]
   190c0:	ldr	r2, [r8, #40]	; 0x28
   190c4:	ldr	r7, [r3, #16]
   190c8:	ldr	r3, [r3, #20]
   190cc:	blx	r7
   190d0:	cmp	r0, #0
   190d4:	beq	19150 <readstat_parse_sav+0x75c>
   190d8:	mov	sl, r0
   190dc:	b	190e4 <readstat_parse_sav+0x6f0>
   190e0:	mov	sl, #15
   190e4:	ldr	r1, [r4, #4]
   190e8:	ldr	r0, [r4, #20]
   190ec:	blx	r1
   190f0:	cmp	r8, #0
   190f4:	beq	19100 <readstat_parse_sav+0x70c>
   190f8:	mov	r0, r8
   190fc:	bl	48ac <sav_ctx_free@plt>
   19100:	mov	r0, sl
   19104:	sub	sp, fp, #48	; 0x30
   19108:	vpop	{d8-d9}
   1910c:	add	sp, sp, #4
   19110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19114:	ldr	r0, [r8, #24]
   19118:	mov	sl, #7
   1911c:	cmp	r0, #0
   19120:	beq	190e4 <readstat_parse_sav+0x6f0>
   19124:	ldr	r2, [pc, #4072]	; 1a114 <readstat_parse_sav+0x1720>
   19128:	add	r5, sp, #272	; 0x110
   1912c:	mov	r1, #1024	; 0x400
   19130:	mov	r0, r5
   19134:	add	r2, pc, r2
   19138:	bl	4bdc <snprintf@plt>
   1913c:	ldr	r2, [r8, #24]
   19140:	ldr	r1, [r8, #40]	; 0x28
   19144:	mov	r0, r5
   19148:	blx	r2
   1914c:	b	190e4 <readstat_parse_sav+0x6f0>
   19150:	ldr	r5, [r8, #36]	; 0x24
   19154:	mov	r0, #4096	; 0x1000
   19158:	bl	4b88 <readstat_malloc@plt>
   1915c:	cmp	r0, #0
   19160:	str	r0, [sp, #76]	; 0x4c
   19164:	beq	1abc4 <readstat_parse_sav+0x21d0>
   19168:	ldr	r3, [r5, #12]
   1916c:	ldr	r2, [r5, #20]
   19170:	add	r0, sp, #1296	; 0x510
   19174:	mov	r1, #4
   19178:	str	r5, [sp, #68]	; 0x44
   1917c:	blx	r3
   19180:	cmp	r0, #4
   19184:	bcs	19258 <readstat_parse_sav+0x864>
   19188:	mov	sl, #2
   1918c:	ldr	r0, [sp, #76]	; 0x4c
   19190:	cmp	r0, #0
   19194:	beq	191a0 <readstat_parse_sav+0x7ac>
   19198:	ldr	r0, [sp, #76]	; 0x4c
   1919c:	bl	4864 <free@plt>
   191a0:	cmp	sl, #0
   191a4:	bne	190e4 <readstat_parse_sav+0x6f0>
   191a8:	mov	r0, #0
   191ac:	str	r0, [r8, #348]	; 0x15c
   191b0:	ldr	r1, [r8, #340]	; 0x154
   191b4:	cmp	r1, #1
   191b8:	blt	19214 <readstat_parse_sav+0x820>
   191bc:	ldr	r2, [r8, #44]	; 0x2c
   191c0:	movw	ip, #2081	; 0x821
   191c4:	mov	r0, #0
   191c8:	mov	r7, #0
   191cc:	movt	ip, #8322	; 0x2082
   191d0:	ldr	r6, [r2, r7, lsl #2]
   191d4:	ldr	r5, [r6, #20]
   191d8:	cmp	r5, #0
   191dc:	beq	191f8 <readstat_parse_sav+0x804>
   191e0:	add	r5, r5, #251	; 0xfb
   191e4:	lsr	r5, r5, #2
   191e8:	umull	r5, r3, r5, ip
   191ec:	lsr	r5, r3, #3
   191f0:	str	r5, [r6, #48]	; 0x30
   191f4:	b	191fc <readstat_parse_sav+0x808>
   191f8:	ldr	r5, [r6, #48]	; 0x30
   191fc:	add	r7, r5, r7
   19200:	str	r0, [r6, #8]
   19204:	add	r0, r0, #1
   19208:	cmp	r7, r1
   1920c:	blt	191d0 <readstat_parse_sav+0x7dc>
   19210:	str	r0, [r8, #348]	; 0x15c
   19214:	mov	r1, #4
   19218:	bl	4954 <readstat_calloc@plt>
   1921c:	str	r0, [r8, #52]	; 0x34
   19220:	ldr	r0, [r8, #348]	; 0x15c
   19224:	cmp	r0, #0
   19228:	beq	1a978 <readstat_parse_sav+0x1f84>
   1922c:	ldr	r1, [r8]
   19230:	cmp	r1, #0
   19234:	beq	1a7a8 <readstat_parse_sav+0x1db4>
   19238:	ldr	r1, [r8, #352]	; 0x160
   1923c:	cmn	r1, #1
   19240:	beq	1a6f8 <readstat_parse_sav+0x1d04>
   19244:	ldr	r1, [r8, #356]	; 0x164
   19248:	asr	r2, r1, #31
   1924c:	b	1a700 <readstat_parse_sav+0x1d0c>
   19250:	mov	sl, #7
   19254:	b	190e4 <readstat_parse_sav+0x6f0>
   19258:	add	r0, r8, #400	; 0x190
   1925c:	ldr	r5, [sp, #80]	; 0x50
   19260:	ldr	r6, [sp, #68]	; 0x44
   19264:	vmov.i32	q4, #0	; 0x00000000
   19268:	str	r0, [sp, #64]	; 0x40
   1926c:	add	r0, r8, #408	; 0x198
   19270:	str	r0, [sp, #60]	; 0x3c
   19274:	add	r0, r8, #392	; 0x188
   19278:	str	r0, [sp, #56]	; 0x38
   1927c:	add	r0, sp, #1312	; 0x520
   19280:	add	r0, r0, #20
   19284:	str	r0, [sp, #36]	; 0x24
   19288:	add	r0, r8, #344	; 0x158
   1928c:	str	r0, [sp, #28]
   19290:	mov	r0, #4096	; 0x1000
   19294:	str	r0, [sp, #44]	; 0x2c
   19298:	ldrb	r1, [r5]
   1929c:	ldr	r0, [sp, #1296]	; 0x510
   192a0:	tst	r1, #1
   192a4:	beq	192b0 <readstat_parse_sav+0x8bc>
   192a8:	bl	4768 <byteswap4@plt>
   192ac:	str	r0, [sp, #1296]	; 0x510
   192b0:	sub	r1, r0, #2
   192b4:	mov	sl, #5
   192b8:	cmp	r1, #5
   192bc:	bhi	1a6c4 <readstat_parse_sav+0x1cd0>
   192c0:	add	r0, pc, #4
   192c4:	ldr	r1, [r0, r1, lsl #2]
   192c8:	add	pc, r0, r1
   192cc:	.word	0x00000018
   192d0:	.word	0x0000009c
   192d4:	.word	0xfffffec0
   192d8:	.word	0xfffffec0
   192dc:	.word	0x000001f0
   192e0:	.word	0x0000022c
   192e4:	add	r0, sp, #1312	; 0x520
   192e8:	mov	r1, #12
   192ec:	ldr	r5, [r8, #36]	; 0x24
   192f0:	vst1.64	{d8-d9}, [r0], r1
   192f4:	vst1.32	{d8-d9}, [r0]
   192f8:	ldr	r0, [r8, #48]	; 0x30
   192fc:	ldr	r1, [r8, #340]	; 0x154
   19300:	cmp	r1, r0
   19304:	bne	19328 <readstat_parse_sav+0x934>
   19308:	lsl	r0, r1, #1
   1930c:	lsl	r1, r1, #3
   19310:	str	r0, [r8, #48]	; 0x30
   19314:	ldr	r0, [r8, #44]	; 0x2c
   19318:	bl	4c3c <readstat_realloc@plt>
   1931c:	cmp	r0, #0
   19320:	str	r0, [r8, #44]	; 0x2c
   19324:	beq	1a998 <readstat_parse_sav+0x1fa4>
   19328:	ldr	r3, [r5, #12]
   1932c:	ldr	r2, [r5, #20]
   19330:	add	r0, sp, #1312	; 0x520
   19334:	mov	r1, #28
   19338:	blx	r3
   1933c:	mov	r1, #0
   19340:	mov	sl, #2
   19344:	cmp	r0, #28
   19348:	str	r1, [sp, #72]	; 0x48
   1934c:	bcc	1ad8c <readstat_parse_sav+0x2398>
   19350:	ldr	r0, [sp, #80]	; 0x50
   19354:	ldrb	r0, [r0]
   19358:	tst	r0, #1
   1935c:	bne	19664 <readstat_parse_sav+0xc70>
   19360:	ldr	r0, [sp, #1328]	; 0x530
   19364:	b	19684 <readstat_parse_sav+0xc90>
   19368:	ldr	r0, [r8, #36]	; 0x24
   1936c:	add	lr, sp, #1024	; 0x400
   19370:	mov	r1, #4
   19374:	ldr	r3, [r0, #12]
   19378:	ldr	r2, [r0, #20]
   1937c:	str	r0, [sp, #72]	; 0x48
   19380:	add	r0, lr, #284	; 0x11c
   19384:	blx	r3
   19388:	mov	sl, #2
   1938c:	cmp	r0, #4
   19390:	bcc	1a694 <readstat_parse_sav+0x1ca0>
   19394:	ldr	r0, [sp, #80]	; 0x50
   19398:	ldrb	r1, [r0]
   1939c:	ldr	r0, [sp, #1308]	; 0x51c
   193a0:	tst	r1, #1
   193a4:	beq	193b0 <readstat_parse_sav+0x9bc>
   193a8:	bl	4768 <byteswap4@plt>
   193ac:	str	r0, [sp, #1308]	; 0x51c
   193b0:	cmp	r0, #0
   193b4:	beq	19a10 <readstat_parse_sav+0x101c>
   193b8:	mov	r1, #72	; 0x48
   193bc:	bl	4954 <readstat_calloc@plt>
   193c0:	cmp	r0, #0
   193c4:	str	r0, [sp, #48]	; 0x30
   193c8:	beq	19ad4 <readstat_parse_sav+0x10e0>
   193cc:	ldr	r0, [sp, #1308]	; 0x51c
   193d0:	cmp	r0, #0
   193d4:	beq	19a18 <readstat_parse_sav+0x1024>
   193d8:	ldr	r6, [sp, #48]	; 0x30
   193dc:	mov	r0, #0
   193e0:	str	r0, [sp, #52]	; 0x34
   193e4:	mov	r0, #0
   193e8:	mov	r1, #8
   193ec:	strb	r0, [sp, #272]	; 0x110
   193f0:	ldr	r0, [sp, #72]	; 0x48
   193f4:	ldr	r3, [r0, #12]
   193f8:	ldr	r2, [r0, #20]
   193fc:	mov	r0, r6
   19400:	blx	r3
   19404:	mov	sl, #2
   19408:	cmp	r0, #8
   1940c:	blt	1a644 <readstat_parse_sav+0x1c50>
   19410:	ldr	r0, [sp, #72]	; 0x48
   19414:	mov	r1, #1
   19418:	ldr	r3, [r0, #12]
   1941c:	ldr	r2, [r0, #20]
   19420:	add	r0, sp, #272	; 0x110
   19424:	blx	r3
   19428:	cmp	r0, #1
   1942c:	blt	1a644 <readstat_parse_sav+0x1c50>
   19430:	ldr	r0, [sp, #72]	; 0x48
   19434:	ldr	r3, [r0, #12]
   19438:	ldr	r2, [r0, #20]
   1943c:	ldrb	r0, [sp, #272]	; 0x110
   19440:	add	r0, r0, #8
   19444:	and	r0, r0, #504	; 0x1f8
   19448:	sub	r5, r0, #1
   1944c:	add	r0, sp, #1312	; 0x520
   19450:	mov	r1, r5
   19454:	blx	r3
   19458:	cmp	r0, r5
   1945c:	bcc	1a644 <readstat_parse_sav+0x1c50>
   19460:	mov	r0, #1
   19464:	orr	r7, r0, r5, lsl #2
   19468:	mov	r0, r7
   1946c:	bl	4b88 <readstat_malloc@plt>
   19470:	cmp	r0, #0
   19474:	str	r0, [r6, #64]	; 0x40
   19478:	beq	19ad4 <readstat_parse_sav+0x10e0>
   1947c:	ldr	r1, [r8, #336]	; 0x150
   19480:	add	r2, sp, #1312	; 0x520
   19484:	mov	r3, r5
   19488:	str	r1, [sp]
   1948c:	mov	r1, r7
   19490:	bl	4b94 <readstat_convert@plt>
   19494:	cmp	r0, #0
   19498:	bne	1a2c0 <readstat_parse_sav+0x18cc>
   1949c:	ldr	r1, [sp, #52]	; 0x34
   194a0:	ldr	r0, [sp, #1308]	; 0x51c
   194a4:	add	r6, r6, #72	; 0x48
   194a8:	add	r1, r1, #1
   194ac:	cmp	r1, r0
   194b0:	str	r1, [sp, #52]	; 0x34
   194b4:	bcc	193e4 <readstat_parse_sav+0x9f0>
   194b8:	b	19a18 <readstat_parse_sav+0x1024>
   194bc:	ldr	r0, [r8, #4]
   194c0:	cmp	r0, #0
   194c4:	beq	198a4 <readstat_parse_sav+0xeb0>
   194c8:	ldr	r0, [r8, #36]	; 0x24
   194cc:	add	lr, sp, #1024	; 0x400
   194d0:	mov	r1, #4
   194d4:	ldr	r3, [r0, #12]
   194d8:	ldr	r2, [r0, #20]
   194dc:	str	r0, [sp, #72]	; 0x48
   194e0:	add	r0, lr, #284	; 0x11c
   194e4:	blx	r3
   194e8:	cmp	r0, #4
   194ec:	bcs	1990c <readstat_parse_sav+0xf18>
   194f0:	mov	sl, #2
   194f4:	b	1a694 <readstat_parse_sav+0x1ca0>
   194f8:	ldr	r3, [r6, #12]
   194fc:	ldr	r2, [r6, #20]
   19500:	add	r0, sp, #260	; 0x104
   19504:	mov	r1, #12
   19508:	blx	r3
   1950c:	cmp	r0, #12
   19510:	bcc	19188 <readstat_parse_sav+0x794>
   19514:	ldr	r0, [sp, #80]	; 0x50
   19518:	ldrb	r0, [r0]
   1951c:	tst	r0, #1
   19520:	bne	1952c <readstat_parse_sav+0xb38>
   19524:	ldr	r7, [sp, #268]	; 0x10c
   19528:	b	19554 <readstat_parse_sav+0xb60>
   1952c:	ldr	r0, [sp, #260]	; 0x104
   19530:	bl	4768 <byteswap4@plt>
   19534:	str	r0, [sp, #260]	; 0x104
   19538:	ldr	r0, [sp, #264]	; 0x108
   1953c:	bl	4768 <byteswap4@plt>
   19540:	str	r0, [sp, #264]	; 0x108
   19544:	ldr	r0, [sp, #268]	; 0x10c
   19548:	bl	4768 <byteswap4@plt>
   1954c:	mov	r7, r0
   19550:	str	r0, [sp, #268]	; 0x10c
   19554:	ldr	r0, [sp, #260]	; 0x104
   19558:	ldr	r6, [sp, #264]	; 0x108
   1955c:	str	r0, [sp, #72]	; 0x48
   19560:	ldr	r0, [sp, #44]	; 0x2c
   19564:	mul	r5, r6, r7
   19568:	cmp	r0, r5
   1956c:	bcs	19590 <readstat_parse_sav+0xb9c>
   19570:	ldr	r0, [sp, #76]	; 0x4c
   19574:	mov	r1, r5
   19578:	bl	4c3c <readstat_realloc@plt>
   1957c:	cmp	r0, #0
   19580:	str	r0, [sp, #76]	; 0x4c
   19584:	str	r5, [sp, #44]	; 0x2c
   19588:	bne	19598 <readstat_parse_sav+0xba4>
   1958c:	b	1abfc <readstat_parse_sav+0x2208>
   19590:	cmp	r5, #0
   19594:	beq	1918c <readstat_parse_sav+0x798>
   19598:	ldr	r0, [sp, #68]	; 0x44
   1959c:	mov	r1, r5
   195a0:	ldr	r3, [r0, #12]
   195a4:	ldr	r2, [r0, #20]
   195a8:	ldr	r0, [sp, #76]	; 0x4c
   195ac:	blx	r3
   195b0:	cmp	r0, r5
   195b4:	bcc	1918c <readstat_parse_sav+0x798>
   195b8:	ldr	r0, [sp, #72]	; 0x48
   195bc:	sub	r0, r0, #4
   195c0:	cmp	r0, #18
   195c4:	bhi	1a240 <readstat_parse_sav+0x184c>
   195c8:	add	r1, pc, #4
   195cc:	ldr	r0, [r1, r0, lsl #2]
   195d0:	add	pc, r1, r0
   195d4:	.word	0x0000004c
   195d8:	.word	0x00000c6c
   195dc:	.word	0x00000c6c
   195e0:	.word	0x00000c6c
   195e4:	.word	0x00000c6c
   195e8:	.word	0x00000c6c
   195ec:	.word	0x00000c6c
   195f0:	.word	0x00000508
   195f4:	.word	0x00000c6c
   195f8:	.word	0x0000057c
   195fc:	.word	0x00000598
   19600:	.word	0x00000c6c
   19604:	.word	0x00000c6c
   19608:	.word	0x00000c6c
   1960c:	.word	0x00000c6c
   19610:	.word	0x00000c6c
   19614:	.word	0x00000c6c
   19618:	.word	0x000005b8
   1961c:	.word	0x000008c4
   19620:	cmp	r7, #3
   19624:	cmpeq	r6, #8
   19628:	bne	1918c <readstat_parse_sav+0x798>
   1962c:	ldr	r2, [sp, #76]	; 0x4c
   19630:	ldr	sl, [r2, #20]
   19634:	ldr	r6, [r2, #16]
   19638:	ldr	r0, [r2]
   1963c:	ldr	r1, [r2, #4]
   19640:	ldr	r7, [r2, #8]
   19644:	ldr	r5, [r2, #12]
   19648:	ldr	r2, [sp, #80]	; 0x50
   1964c:	ldrb	r2, [r2]
   19650:	tst	r2, #1
   19654:	bne	1a264 <readstat_parse_sav+0x1870>
   19658:	ldr	r2, [sp, #56]	; 0x38
   1965c:	strd	r0, [r2]
   19660:	b	1a280 <readstat_parse_sav+0x188c>
   19664:	ldr	r0, [sp, #1324]	; 0x52c
   19668:	bl	4768 <byteswap4@plt>
   1966c:	ldr	r1, [sp, #80]	; 0x50
   19670:	ldrb	r1, [r1]
   19674:	str	r0, [sp, #1324]	; 0x52c
   19678:	ldr	r0, [sp, #1328]	; 0x530
   1967c:	tst	r1, #1
   19680:	bne	199b4 <readstat_parse_sav+0xfc0>
   19684:	str	r0, [sp, #1328]	; 0x530
   19688:	ldr	r6, [sp, #1312]	; 0x520
   1968c:	cmn	r6, #1
   19690:	ble	199e4 <readstat_parse_sav+0xff0>
   19694:	mov	r0, #1
   19698:	mov	r1, #280	; 0x118
   1969c:	bl	4954 <readstat_calloc@plt>
   196a0:	cmp	r0, #0
   196a4:	str	r0, [sp, #72]	; 0x48
   196a8:	beq	1a998 <readstat_parse_sav+0x1fa4>
   196ac:	ldr	r2, [sp, #72]	; 0x48
   196b0:	mov	r0, #1
   196b4:	mvn	r1, #0
   196b8:	mov	r3, #8
   196bc:	str	r0, [r2, #48]	; 0x30
   196c0:	str	r0, [r2, #16]
   196c4:	ldr	r0, [r8, #340]	; 0x154
   196c8:	str	r0, [r2, #8]
   196cc:	ldr	r0, [r8, #344]	; 0x158
   196d0:	str	r1, [r2, #4]
   196d4:	mov	r1, #9
   196d8:	str	r0, [r2, #12]
   196dc:	mov	r0, #0
   196e0:	str	r0, [sp]
   196e4:	add	r0, r2, #187	; 0xbb
   196e8:	ldr	r2, [sp, #36]	; 0x24
   196ec:	bl	4b94 <readstat_convert@plt>
   196f0:	cmp	r0, #0
   196f4:	bne	1a980 <readstat_parse_sav+0x1f8c>
   196f8:	mov	r0, #0
   196fc:	ldr	r2, [sp, #36]	; 0x24
   19700:	mov	r1, #65	; 0x41
   19704:	mov	r3, #8
   19708:	str	r0, [sp]
   1970c:	ldr	r0, [sp, #72]	; 0x48
   19710:	add	r0, r0, #196	; 0xc4
   19714:	bl	4b94 <readstat_convert@plt>
   19718:	cmp	r0, #0
   1971c:	bne	1a980 <readstat_parse_sav+0x1f8c>
   19720:	ldr	r0, [sp, #1324]	; 0x52c
   19724:	cmp	r6, #0
   19728:	ubfx	r1, r0, #8, #8
   1972c:	ldr	r3, [sp, #72]	; 0x48
   19730:	str	r1, [r3, #28]
   19734:	uxtb	r1, r0
   19738:	str	r1, [r3, #32]
   1973c:	ubfx	r0, r0, #16, #8
   19740:	str	r0, [r3, #24]
   19744:	ldr	r1, [sp, #1328]	; 0x530
   19748:	ubfx	r2, r1, #8, #8
   1974c:	str	r2, [r3, #40]	; 0x28
   19750:	uxtb	r2, r1
   19754:	str	r2, [r3, #44]	; 0x2c
   19758:	ubfx	r2, r1, #16, #8
   1975c:	mov	r1, #0
   19760:	str	r2, [r3, #36]	; 0x24
   19764:	bgt	19778 <readstat_parse_sav+0xd84>
   19768:	subs	r2, r2, #1
   1976c:	movwne	r2, #5
   19770:	subs	r1, r0, #1
   19774:	movne	r1, r2
   19778:	ldr	r0, [sp, #72]	; 0x48
   1977c:	str	r1, [r0]
   19780:	ldr	r0, [sp, #1316]	; 0x524
   19784:	cmp	r0, #0
   19788:	beq	1985c <readstat_parse_sav+0xe68>
   1978c:	ldr	sl, [r8, #36]	; 0x24
   19790:	add	r0, sp, #272	; 0x110
   19794:	mov	r1, #4
   19798:	ldr	r3, [sl, #12]
   1979c:	ldr	r2, [sl, #20]
   197a0:	blx	r3
   197a4:	cmp	r0, #4
   197a8:	bcc	1ad1c <readstat_parse_sav+0x2328>
   197ac:	ldr	r0, [sp, #80]	; 0x50
   197b0:	ldrb	r1, [r0]
   197b4:	ldr	r0, [sp, #272]	; 0x110
   197b8:	tst	r1, #1
   197bc:	beq	197c4 <readstat_parse_sav+0xdd0>
   197c0:	bl	4768 <byteswap4@plt>
   197c4:	cmp	r0, #0
   197c8:	str	r0, [sp, #272]	; 0x110
   197cc:	beq	1985c <readstat_parse_sav+0xe68>
   197d0:	add	r0, r0, #3
   197d4:	bic	r5, r0, #3
   197d8:	mov	r0, r5
   197dc:	bl	4b88 <readstat_malloc@plt>
   197e0:	cmp	r0, #0
   197e4:	beq	1ad50 <readstat_parse_sav+0x235c>
   197e8:	mov	r6, r0
   197ec:	ldr	r0, [sp, #272]	; 0x110
   197f0:	mov	r1, #1
   197f4:	orr	r0, r1, r0, lsl #2
   197f8:	str	r0, [sp, #52]	; 0x34
   197fc:	bl	4b88 <readstat_malloc@plt>
   19800:	ldr	r7, [sp, #72]	; 0x48
   19804:	cmp	r0, #0
   19808:	str	r0, [r7, #264]!	; 0x108
   1980c:	beq	1ad60 <readstat_parse_sav+0x236c>
   19810:	ldr	r3, [sl, #12]
   19814:	ldr	r2, [sl, #20]
   19818:	mov	r0, r6
   1981c:	mov	r1, r5
   19820:	blx	r3
   19824:	cmp	r0, r5
   19828:	bcc	1ad68 <readstat_parse_sav+0x2374>
   1982c:	ldr	r1, [r8, #336]	; 0x150
   19830:	ldr	r0, [r7]
   19834:	ldr	r3, [sp, #272]	; 0x110
   19838:	mov	r2, r6
   1983c:	str	r1, [sp]
   19840:	ldr	r1, [sp, #52]	; 0x34
   19844:	bl	4b94 <readstat_convert@plt>
   19848:	mov	sl, r0
   1984c:	mov	r0, r6
   19850:	bl	4864 <free@plt>
   19854:	cmp	sl, #0
   19858:	bne	1ad54 <readstat_parse_sav+0x2360>
   1985c:	ldr	r0, [sp, #1320]	; 0x528
   19860:	cmp	r0, #0
   19864:	beq	1a218 <readstat_parse_sav+0x1824>
   19868:	ldr	r1, [sp, #80]	; 0x50
   1986c:	ldrb	r1, [r1]
   19870:	tst	r1, #1
   19874:	beq	1987c <readstat_parse_sav+0xe88>
   19878:	bl	4768 <byteswap4@plt>
   1987c:	ldr	r1, [sp, #72]	; 0x48
   19880:	str	r0, [r1, #52]	; 0x34
   19884:	add	r1, r0, #3
   19888:	cmp	r1, #6
   1988c:	bhi	1ad48 <readstat_parse_sav+0x2354>
   19890:	cmn	r0, #1
   19894:	ble	1a094 <readstat_parse_sav+0x16a0>
   19898:	ldr	r2, [sp, #72]	; 0x48
   1989c:	mov	r1, #0
   198a0:	b	1a0a4 <readstat_parse_sav+0x16b0>
   198a4:	ldr	r5, [r8, #36]	; 0x24
   198a8:	add	r0, sp, #1312	; 0x520
   198ac:	mov	r1, #4
   198b0:	ldr	r3, [r5, #12]
   198b4:	ldr	r2, [r5, #20]
   198b8:	blx	r3
   198bc:	mov	sl, #2
   198c0:	cmp	r0, #4
   198c4:	bcc	1a694 <readstat_parse_sav+0x1ca0>
   198c8:	ldr	r0, [sp, #80]	; 0x50
   198cc:	ldrb	r1, [r0]
   198d0:	ldr	r0, [sp, #1312]	; 0x520
   198d4:	tst	r1, #1
   198d8:	beq	198e4 <readstat_parse_sav+0xef0>
   198dc:	bl	4768 <byteswap4@plt>
   198e0:	str	r0, [sp, #1312]	; 0x520
   198e4:	ldr	r3, [r5, #8]
   198e8:	ldr	r2, [r5, #20]
   198ec:	add	r0, r0, r0, lsl #2
   198f0:	mov	r1, #1
   198f4:	lsl	r0, r0, #4
   198f8:	blx	r3
   198fc:	cmn	r0, #1
   19900:	mov	sl, #0
   19904:	movweq	sl, #15
   19908:	b	1a694 <readstat_parse_sav+0x1ca0>
   1990c:	ldr	r0, [sp, #80]	; 0x50
   19910:	ldrb	r1, [r0]
   19914:	ldr	r0, [sp, #1308]	; 0x51c
   19918:	tst	r1, #1
   1991c:	beq	19928 <readstat_parse_sav+0xf34>
   19920:	bl	4768 <byteswap4@plt>
   19924:	str	r0, [sp, #1308]	; 0x51c
   19928:	cmp	r0, #0
   1992c:	beq	199ac <readstat_parse_sav+0xfb8>
   19930:	mov	r6, #0
   19934:	ldr	r0, [sp, #72]	; 0x48
   19938:	add	r5, sp, #272	; 0x110
   1993c:	mov	r1, #80	; 0x50
   19940:	ldr	r3, [r0, #12]
   19944:	ldr	r2, [r0, #20]
   19948:	mov	r0, r5
   1994c:	blx	r3
   19950:	cmp	r0, #80	; 0x50
   19954:	blt	194f0 <readstat_parse_sav+0xafc>
   19958:	ldr	r0, [r8, #336]	; 0x150
   1995c:	add	r7, sp, #1312	; 0x520
   19960:	movw	r1, #321	; 0x141
   19964:	mov	r2, r5
   19968:	mov	r3, #80	; 0x50
   1996c:	str	r0, [sp]
   19970:	mov	r0, r7
   19974:	bl	4b94 <readstat_convert@plt>
   19978:	cmp	r0, #0
   1997c:	bne	1a254 <readstat_parse_sav+0x1860>
   19980:	ldr	r3, [r8, #4]
   19984:	ldr	r2, [r8, #40]	; 0x28
   19988:	mov	r0, r6
   1998c:	mov	r1, r7
   19990:	blx	r3
   19994:	cmp	r0, #0
   19998:	bne	1a25c <readstat_parse_sav+0x1868>
   1999c:	ldr	r0, [sp, #1308]	; 0x51c
   199a0:	add	r6, r6, #1
   199a4:	cmp	r6, r0
   199a8:	bcc	19934 <readstat_parse_sav+0xf40>
   199ac:	mov	sl, #0
   199b0:	b	1a694 <readstat_parse_sav+0x1ca0>
   199b4:	bl	4768 <byteswap4@plt>
   199b8:	ldr	r1, [sp, #80]	; 0x50
   199bc:	ldrb	r1, [r1]
   199c0:	str	r0, [sp, #1328]	; 0x530
   199c4:	ldr	r6, [sp, #1312]	; 0x520
   199c8:	tst	r1, #1
   199cc:	beq	1968c <readstat_parse_sav+0xc98>
   199d0:	mov	r0, r6
   199d4:	bl	4768 <byteswap4@plt>
   199d8:	mov	r6, r0
   199dc:	cmn	r6, #1
   199e0:	bgt	19694 <readstat_parse_sav+0xca0>
   199e4:	ldr	r0, [r8, #340]	; 0x154
   199e8:	cmp	r0, #0
   199ec:	beq	1ac0c <readstat_parse_sav+0x2218>
   199f0:	ldr	r2, [r8, #344]	; 0x158
   199f4:	ldr	r1, [r8, #44]	; 0x2c
   199f8:	add	r2, r2, #1
   199fc:	add	r0, r1, r0, lsl #2
   19a00:	str	r2, [r8, #344]	; 0x158
   19a04:	ldr	r0, [r0, #-4]
   19a08:	add	r0, r0, #16
   19a0c:	b	1a234 <readstat_parse_sav+0x1840>
   19a10:	mov	r0, #0
   19a14:	str	r0, [sp, #48]	; 0x30
   19a18:	ldr	r0, [sp, #72]	; 0x48
   19a1c:	add	lr, sp, #1024	; 0x400
   19a20:	mov	r1, #4
   19a24:	ldr	r3, [r0, #12]
   19a28:	ldr	r2, [r0, #20]
   19a2c:	add	r0, lr, #276	; 0x114
   19a30:	blx	r3
   19a34:	mov	sl, #2
   19a38:	cmp	r0, #4
   19a3c:	bcc	1a644 <readstat_parse_sav+0x1c50>
   19a40:	ldr	r0, [sp, #80]	; 0x50
   19a44:	ldrb	r1, [r0]
   19a48:	ldr	r0, [sp, #1300]	; 0x514
   19a4c:	tst	r1, #1
   19a50:	beq	19a5c <readstat_parse_sav+0x1068>
   19a54:	bl	4768 <byteswap4@plt>
   19a58:	str	r0, [sp, #1300]	; 0x514
   19a5c:	cmp	r0, #4
   19a60:	bne	1a24c <readstat_parse_sav+0x1858>
   19a64:	ldr	r0, [sp, #72]	; 0x48
   19a68:	add	lr, sp, #1024	; 0x400
   19a6c:	mov	r1, #4
   19a70:	ldr	r3, [r0, #12]
   19a74:	ldr	r2, [r0, #20]
   19a78:	add	r0, lr, #280	; 0x118
   19a7c:	blx	r3
   19a80:	cmp	r0, #4
   19a84:	bcc	1a644 <readstat_parse_sav+0x1c50>
   19a88:	ldr	r0, [sp, #80]	; 0x50
   19a8c:	ldrb	r1, [r0]
   19a90:	ldr	r0, [sp, #1304]	; 0x518
   19a94:	tst	r1, #1
   19a98:	beq	19aa4 <readstat_parse_sav+0x10b0>
   19a9c:	bl	4768 <byteswap4@plt>
   19aa0:	str	r0, [sp, #1304]	; 0x518
   19aa4:	cmp	r0, #0
   19aa8:	beq	1a304 <readstat_parse_sav+0x1910>
   19aac:	lsl	r0, r0, #2
   19ab0:	bl	4b88 <readstat_malloc@plt>
   19ab4:	cmp	r0, #0
   19ab8:	str	r0, [sp, #32]
   19abc:	beq	1a554 <readstat_parse_sav+0x1b60>
   19ac0:	ldr	r0, [sp, #1304]	; 0x518
   19ac4:	lsl	r1, r0, #2
   19ac8:	ldr	r0, [sp, #32]
   19acc:	str	r0, [sp, #20]
   19ad0:	b	1a318 <readstat_parse_sav+0x1924>
   19ad4:	mov	sl, #3
   19ad8:	b	1a644 <readstat_parse_sav+0x1c50>
   19adc:	cmp	r6, #4
   19ae0:	bne	1918c <readstat_parse_sav+0x798>
   19ae4:	ldr	r0, [r8, #328]	; 0x148
   19ae8:	lsl	r1, r7, #2
   19aec:	bl	4c3c <readstat_realloc@plt>
   19af0:	cmp	r7, #0
   19af4:	str	r0, [r8, #328]	; 0x148
   19af8:	beq	19b04 <readstat_parse_sav+0x1110>
   19afc:	cmp	r0, #0
   19b00:	beq	1ad98 <readstat_parse_sav+0x23a4>
   19b04:	cmp	r7, #0
   19b08:	str	r7, [r8, #332]	; 0x14c
   19b0c:	beq	1a240 <readstat_parse_sav+0x184c>
   19b10:	mov	r5, #0
   19b14:	ldr	r2, [sp, #80]	; 0x50
   19b18:	ldr	r1, [sp, #76]	; 0x4c
   19b1c:	ldrb	r2, [r2]
   19b20:	ldr	r1, [r1, r5, lsl #2]
   19b24:	tst	r2, #1
   19b28:	beq	19b3c <readstat_parse_sav+0x1148>
   19b2c:	mov	r0, r1
   19b30:	bl	4768 <byteswap4@plt>
   19b34:	mov	r1, r0
   19b38:	ldr	r0, [r8, #328]	; 0x148
   19b3c:	str	r1, [r0, r5, lsl #2]
   19b40:	add	r5, r5, #1
   19b44:	cmp	r7, r5
   19b48:	bne	19b14 <readstat_parse_sav+0x1120>
   19b4c:	b	1a240 <readstat_parse_sav+0x184c>
   19b50:	ldr	r0, [sp, #76]	; 0x4c
   19b54:	mov	r1, r7
   19b58:	mov	r2, r8
   19b5c:	bl	4b4c <sav_parse_long_variable_names_record@plt>
   19b60:	cmp	r0, #0
   19b64:	beq	1a240 <readstat_parse_sav+0x184c>
   19b68:	b	1a988 <readstat_parse_sav+0x1f94>
   19b6c:	ldr	r0, [sp, #76]	; 0x4c
   19b70:	mov	r1, r7
   19b74:	mov	r2, r8
   19b78:	bl	4c30 <sav_parse_very_long_string_record@plt>
   19b7c:	cmp	r0, #0
   19b80:	beq	1a240 <readstat_parse_sav+0x184c>
   19b84:	b	1a988 <readstat_parse_sav+0x1f94>
   19b88:	.word	0x00031308
   19b8c:	ldr	r0, [r8, #20]
   19b90:	cmp	r0, #0
   19b94:	beq	1a240 <readstat_parse_sav+0x184c>
   19b98:	cmp	r6, #1
   19b9c:	bne	1918c <readstat_parse_sav+0x798>
   19ba0:	ldr	r0, [sp, #76]	; 0x4c
   19ba4:	cmp	r7, #1
   19ba8:	add	r0, r0, r7
   19bac:	str	r0, [sp, #72]	; 0x48
   19bb0:	mov	r0, #0
   19bb4:	blt	1a298 <readstat_parse_sav+0x18a4>
   19bb8:	str	r0, [sp, #40]	; 0x28
   19bbc:	mov	r0, #0
   19bc0:	str	r0, [sp, #48]	; 0x30
   19bc4:	ldr	r0, [sp, #76]	; 0x4c
   19bc8:	str	r0, [sp, #52]	; 0x34
   19bcc:	add	r0, sp, #272	; 0x110
   19bd0:	mov	r1, #0
   19bd4:	mov	r2, #256	; 0x100
   19bd8:	bl	4c00 <memset@plt>
   19bdc:	ldr	r0, [sp, #72]	; 0x48
   19be0:	ldr	r1, [sp, #52]	; 0x34
   19be4:	sub	r0, r0, r1
   19be8:	cmp	r0, #4
   19bec:	blt	1a538 <readstat_parse_sav+0x1b44>
   19bf0:	ldr	r0, [sp, #52]	; 0x34
   19bf4:	add	r5, r0, #4
   19bf8:	ldr	r3, [r0]
   19bfc:	ldr	r0, [sp, #80]	; 0x50
   19c00:	ldrb	r0, [r0]
   19c04:	tst	r0, #1
   19c08:	beq	19c18 <readstat_parse_sav+0x1224>
   19c0c:	mov	r0, r3
   19c10:	bl	4768 <byteswap4@plt>
   19c14:	mov	r3, r0
   19c18:	ldr	r0, [sp, #72]	; 0x48
   19c1c:	add	r1, r5, r3
   19c20:	str	r1, [sp, #32]
   19c24:	cmp	r1, r0
   19c28:	bhi	1a538 <readstat_parse_sav+0x1b44>
   19c2c:	mov	r0, #0
   19c30:	movw	r1, #257	; 0x101
   19c34:	mov	r2, r5
   19c38:	str	r0, [sp]
   19c3c:	add	r0, sp, #1312	; 0x520
   19c40:	bl	4b94 <readstat_convert@plt>
   19c44:	mov	sl, r0
   19c48:	cmp	r0, #0
   19c4c:	ldr	r0, [sp, #32]
   19c50:	movne	r0, r5
   19c54:	str	r0, [sp, #32]
   19c58:	bne	1a53c <readstat_parse_sav+0x1b48>
   19c5c:	ldr	sl, [r8, #340]	; 0x154
   19c60:	cmp	sl, #0
   19c64:	beq	19cc0 <readstat_parse_sav+0x12cc>
   19c68:	ldr	r7, [r8, #44]	; 0x2c
   19c6c:	mov	r6, #0
   19c70:	ldr	r5, [r7, r6, lsl #2]
   19c74:	add	r0, sp, #1312	; 0x520
   19c78:	add	r1, r5, #196	; 0xc4
   19c7c:	bl	47b0 <strcmp@plt>
   19c80:	cmp	r0, #0
   19c84:	beq	19c9c <readstat_parse_sav+0x12a8>
   19c88:	ldr	r0, [r5, #48]	; 0x30
   19c8c:	add	r6, r0, r6
   19c90:	cmp	r6, sl
   19c94:	bcc	19c70 <readstat_parse_sav+0x127c>
   19c98:	b	19cc0 <readstat_parse_sav+0x12cc>
   19c9c:	ldr	r3, [r8, #368]	; 0x170
   19ca0:	mov	r1, #256	; 0x100
   19ca4:	add	r0, r3, #1
   19ca8:	str	r0, [r8, #368]	; 0x170
   19cac:	str	r3, [r5, #4]
   19cb0:	add	r0, sp, #272	; 0x110
   19cb4:	ldr	r2, [pc, #3988]	; 1ac50 <readstat_parse_sav+0x225c>
   19cb8:	add	r2, pc, r2
   19cbc:	bl	4bdc <snprintf@plt>
   19cc0:	ldr	r0, [sp, #32]
   19cc4:	add	r1, r0, #8
   19cc8:	ldr	r0, [sp, #72]	; 0x48
   19ccc:	str	r1, [sp, #52]	; 0x34
   19cd0:	cmp	r1, r0
   19cd4:	bhi	1a538 <readstat_parse_sav+0x1b44>
   19cd8:	ldrb	r0, [sp, #272]	; 0x110
   19cdc:	cmp	r0, #0
   19ce0:	beq	1a538 <readstat_parse_sav+0x1b44>
   19ce4:	ldr	r0, [sp, #32]
   19ce8:	ldr	r0, [r0, #4]
   19cec:	str	r0, [sp, #32]
   19cf0:	ldr	r0, [sp, #80]	; 0x50
   19cf4:	ldrb	r0, [r0]
   19cf8:	tst	r0, #1
   19cfc:	beq	19d0c <readstat_parse_sav+0x1318>
   19d00:	ldr	r0, [sp, #32]
   19d04:	bl	4768 <byteswap4@plt>
   19d08:	str	r0, [sp, #32]
   19d0c:	ldr	r0, [sp, #32]
   19d10:	cmp	r0, #0
   19d14:	beq	19e84 <readstat_parse_sav+0x1490>
   19d18:	mov	r0, #0
   19d1c:	str	r0, [sp, #24]
   19d20:	ldr	r0, [sp, #52]	; 0x34
   19d24:	add	r6, r0, #4
   19d28:	ldr	r0, [sp, #72]	; 0x48
   19d2c:	cmp	r6, r0
   19d30:	bhi	1a538 <readstat_parse_sav+0x1b44>
   19d34:	ldr	r0, [sp, #52]	; 0x34
   19d38:	ldr	sl, [r0]
   19d3c:	ldr	r0, [sp, #80]	; 0x50
   19d40:	ldrb	r0, [r0]
   19d44:	tst	r0, #1
   19d48:	beq	19d58 <readstat_parse_sav+0x1364>
   19d4c:	mov	r0, sl
   19d50:	bl	4768 <byteswap4@plt>
   19d54:	mov	sl, r0
   19d58:	mov	r0, #1
   19d5c:	orr	r5, r0, sl, lsl #2
   19d60:	ldr	r0, [sp, #48]	; 0x30
   19d64:	mov	r1, r5
   19d68:	bl	4c3c <readstat_realloc@plt>
   19d6c:	cmp	r0, #0
   19d70:	str	r0, [sp, #48]	; 0x30
   19d74:	beq	1a564 <readstat_parse_sav+0x1b70>
   19d78:	ldr	r0, [sp, #72]	; 0x48
   19d7c:	add	r7, r6, sl
   19d80:	cmp	r7, r0
   19d84:	bhi	1a528 <readstat_parse_sav+0x1b34>
   19d88:	ldr	r0, [r8, #336]	; 0x150
   19d8c:	mov	r1, r5
   19d90:	mov	r2, r6
   19d94:	mov	r3, sl
   19d98:	str	r0, [sp]
   19d9c:	ldr	r0, [sp, #48]	; 0x30
   19da0:	bl	4b94 <readstat_convert@plt>
   19da4:	cmp	r0, #0
   19da8:	bne	1a54c <readstat_parse_sav+0x1b58>
   19dac:	ldr	r0, [sp, #72]	; 0x48
   19db0:	add	r6, r7, #4
   19db4:	cmp	r6, r0
   19db8:	bhi	1a528 <readstat_parse_sav+0x1b34>
   19dbc:	ldr	r0, [sp, #80]	; 0x50
   19dc0:	ldr	r7, [r7]
   19dc4:	ldrb	r0, [r0]
   19dc8:	tst	r0, #1
   19dcc:	beq	19ddc <readstat_parse_sav+0x13e8>
   19dd0:	mov	r0, r7
   19dd4:	bl	4768 <byteswap4@plt>
   19dd8:	mov	r7, r0
   19ddc:	mov	r0, #1
   19de0:	orr	r5, r0, r7, lsl #2
   19de4:	ldr	r0, [sp, #40]	; 0x28
   19de8:	mov	r1, r5
   19dec:	bl	4c3c <readstat_realloc@plt>
   19df0:	cmp	r0, #0
   19df4:	str	r0, [sp, #40]	; 0x28
   19df8:	beq	1a56c <readstat_parse_sav+0x1b78>
   19dfc:	ldr	r0, [sp, #72]	; 0x48
   19e00:	add	r1, r6, r7
   19e04:	str	r1, [sp, #52]	; 0x34
   19e08:	cmp	r1, r0
   19e0c:	bhi	1a528 <readstat_parse_sav+0x1b34>
   19e10:	ldr	r0, [r8, #336]	; 0x150
   19e14:	mov	r1, r5
   19e18:	mov	r2, r6
   19e1c:	mov	r3, r7
   19e20:	str	r0, [sp]
   19e24:	ldr	r0, [sp, #40]	; 0x28
   19e28:	bl	4b94 <readstat_convert@plt>
   19e2c:	cmp	r0, #0
   19e30:	bne	1a54c <readstat_parse_sav+0x1b58>
   19e34:	mov	r2, #0
   19e38:	ldr	r1, [r8, #20]
   19e3c:	ldr	r0, [r8, #40]	; 0x28
   19e40:	mov	r3, #0
   19e44:	str	r2, [sp]
   19e48:	str	r2, [sp, #4]
   19e4c:	ldr	r2, [sp, #40]	; 0x28
   19e50:	str	r0, [sp, #12]
   19e54:	add	r0, sp, #272	; 0x110
   19e58:	str	r2, [sp, #8]
   19e5c:	ldr	r2, [sp, #48]	; 0x30
   19e60:	blx	r1
   19e64:	cmp	r0, #0
   19e68:	bne	1a57c <readstat_parse_sav+0x1b88>
   19e6c:	ldr	r1, [sp, #24]
   19e70:	ldr	r0, [sp, #32]
   19e74:	add	r1, r1, #1
   19e78:	cmp	r1, r0
   19e7c:	str	r1, [sp, #24]
   19e80:	bcc	19d20 <readstat_parse_sav+0x132c>
   19e84:	ldr	r0, [sp, #72]	; 0x48
   19e88:	ldr	r1, [sp, #52]	; 0x34
   19e8c:	cmp	r0, r1
   19e90:	bhi	19bcc <readstat_parse_sav+0x11d8>
   19e94:	b	1a2ac <readstat_parse_sav+0x18b8>
   19e98:	cmp	r6, #1
   19e9c:	bne	1918c <readstat_parse_sav+0x798>
   19ea0:	ldr	r0, [sp, #76]	; 0x4c
   19ea4:	add	r1, r0, r7
   19ea8:	str	r0, [sp, #52]	; 0x34
   19eac:	str	r1, [sp, #48]	; 0x30
   19eb0:	ldr	r0, [sp, #48]	; 0x30
   19eb4:	ldr	r1, [sp, #52]	; 0x34
   19eb8:	cmp	r1, r0
   19ebc:	bcs	1a530 <readstat_parse_sav+0x1b3c>
   19ec0:	ldr	r0, [sp, #48]	; 0x30
   19ec4:	ldr	r1, [sp, #52]	; 0x34
   19ec8:	mov	sl, #5
   19ecc:	sub	r0, r0, r1
   19ed0:	cmp	r0, #4
   19ed4:	blt	1918c <readstat_parse_sav+0x798>
   19ed8:	ldr	r0, [sp, #52]	; 0x34
   19edc:	add	r6, r0, #4
   19ee0:	ldr	r3, [r0]
   19ee4:	ldr	r0, [sp, #80]	; 0x50
   19ee8:	ldrb	r0, [r0]
   19eec:	tst	r0, #1
   19ef0:	beq	19f00 <readstat_parse_sav+0x150c>
   19ef4:	mov	r0, r3
   19ef8:	bl	4768 <byteswap4@plt>
   19efc:	mov	r3, r0
   19f00:	ldr	r0, [sp, #48]	; 0x30
   19f04:	add	r1, r6, r3
   19f08:	str	r1, [sp, #40]	; 0x28
   19f0c:	cmp	r1, r0
   19f10:	bhi	1918c <readstat_parse_sav+0x798>
   19f14:	mov	r0, #0
   19f18:	movw	r1, #257	; 0x101
   19f1c:	mov	r2, r6
   19f20:	str	r0, [sp]
   19f24:	add	r0, sp, #1312	; 0x520
   19f28:	bl	4b94 <readstat_convert@plt>
   19f2c:	ldr	r1, [sp, #40]	; 0x28
   19f30:	cmp	r0, #0
   19f34:	movne	r1, r6
   19f38:	str	r1, [sp, #40]	; 0x28
   19f3c:	bne	1a988 <readstat_parse_sav+0x1f94>
   19f40:	ldr	r0, [sp, #48]	; 0x30
   19f44:	ldr	r1, [sp, #40]	; 0x28
   19f48:	cmp	r1, r0
   19f4c:	beq	1918c <readstat_parse_sav+0x798>
   19f50:	ldr	r0, [sp, #40]	; 0x28
   19f54:	ldrb	r1, [r0], #1
   19f58:	str	r0, [sp, #52]	; 0x34
   19f5c:	sub	r0, r1, #1
   19f60:	str	r1, [sp, #32]
   19f64:	uxtb	r0, r0
   19f68:	cmp	r0, #2
   19f6c:	bhi	1918c <readstat_parse_sav+0x798>
   19f70:	ldr	r0, [r8, #340]	; 0x154
   19f74:	cmp	r0, #0
   19f78:	str	r0, [sp, #72]	; 0x48
   19f7c:	beq	19fb8 <readstat_parse_sav+0x15c4>
   19f80:	ldr	r7, [r8, #44]	; 0x2c
   19f84:	mov	r6, #0
   19f88:	ldr	r5, [r7, r6, lsl #2]
   19f8c:	add	r0, sp, #1312	; 0x520
   19f90:	add	r1, r5, #196	; 0xc4
   19f94:	bl	47b0 <strcmp@plt>
   19f98:	cmp	r0, #0
   19f9c:	beq	19fc0 <readstat_parse_sav+0x15cc>
   19fa0:	ldr	r0, [r5, #48]	; 0x30
   19fa4:	add	r6, r0, r6
   19fa8:	ldr	r0, [sp, #72]	; 0x48
   19fac:	cmp	r6, r0
   19fb0:	bcc	19f88 <readstat_parse_sav+0x1594>
   19fb4:	b	1a084 <readstat_parse_sav+0x1690>
   19fb8:	mov	r6, #0
   19fbc:	b	1a084 <readstat_parse_sav+0x1690>
   19fc0:	ldr	r0, [sp, #32]
   19fc4:	str	r0, [r5, #52]	; 0x34
   19fc8:	ldr	r0, [sp, #40]	; 0x28
   19fcc:	add	r1, r0, #5
   19fd0:	ldr	r0, [sp, #48]	; 0x30
   19fd4:	str	r1, [sp, #72]	; 0x48
   19fd8:	cmp	r1, r0
   19fdc:	bhi	1918c <readstat_parse_sav+0x798>
   19fe0:	ldr	r0, [sp, #52]	; 0x34
   19fe4:	ldr	r0, [r0]
   19fe8:	str	r0, [sp, #40]	; 0x28
   19fec:	ldr	r0, [sp, #80]	; 0x50
   19ff0:	ldrb	r0, [r0]
   19ff4:	tst	r0, #1
   19ff8:	beq	1a008 <readstat_parse_sav+0x1614>
   19ffc:	ldr	r0, [sp, #40]	; 0x28
   1a000:	bl	4768 <byteswap4@plt>
   1a004:	str	r0, [sp, #40]	; 0x28
   1a008:	ldr	r0, [sp, #32]
   1a00c:	cmp	r0, #0
   1a010:	beq	1a07c <readstat_parse_sav+0x1688>
   1a014:	add	r5, r5, #88	; 0x58
   1a018:	mov	r7, #0
   1a01c:	ldr	r0, [sp, #40]	; 0x28
   1a020:	ldr	r1, [sp, #72]	; 0x48
   1a024:	add	r1, r1, r0
   1a028:	ldr	r0, [sp, #48]	; 0x30
   1a02c:	str	r1, [sp, #52]	; 0x34
   1a030:	cmp	r1, r0
   1a034:	bhi	1918c <readstat_parse_sav+0x798>
   1a038:	ldr	r0, [r8, #336]	; 0x150
   1a03c:	ldr	r2, [sp, #72]	; 0x48
   1a040:	ldr	r3, [sp, #40]	; 0x28
   1a044:	mov	r1, #33	; 0x21
   1a048:	str	r0, [sp]
   1a04c:	mov	r0, r5
   1a050:	bl	4b94 <readstat_convert@plt>
   1a054:	cmp	r0, #0
   1a058:	bne	1a988 <readstat_parse_sav+0x1f94>
   1a05c:	ldr	r0, [sp, #32]
   1a060:	add	r7, r7, #1
   1a064:	add	r5, r5, #33	; 0x21
   1a068:	cmp	r7, r0
   1a06c:	ldr	r0, [sp, #52]	; 0x34
   1a070:	str	r0, [sp, #72]	; 0x48
   1a074:	bcc	1a01c <readstat_parse_sav+0x1628>
   1a078:	b	1a084 <readstat_parse_sav+0x1690>
   1a07c:	ldr	r0, [sp, #72]	; 0x48
   1a080:	str	r0, [sp, #52]	; 0x34
   1a084:	ldr	r0, [r8, #340]	; 0x154
   1a088:	cmp	r6, r0
   1a08c:	bne	19eb0 <readstat_parse_sav+0x14bc>
   1a090:	b	1918c <readstat_parse_sav+0x798>
   1a094:	ldr	r2, [sp, #72]	; 0x48
   1a098:	rsb	r0, r0, #0
   1a09c:	mov	r1, #1
   1a0a0:	str	r0, [r2, #52]	; 0x34
   1a0a4:	str	r1, [r2, #56]	; 0x38
   1a0a8:	ldr	r1, [sp, #72]	; 0x48
   1a0ac:	ldr	r5, [r8, #36]	; 0x24
   1a0b0:	ldr	r1, [r1]
   1a0b4:	cmp	r1, #5
   1a0b8:	bne	1a1ac <readstat_parse_sav+0x17b8>
   1a0bc:	ldr	r3, [r5, #12]
   1a0c0:	ldr	r2, [r5, #20]
   1a0c4:	ldr	r5, [sp, #72]	; 0x48
   1a0c8:	lsl	r1, r0, #3
   1a0cc:	add	r6, r5, #64	; 0x40
   1a0d0:	mov	r0, r6
   1a0d4:	blx	r3
   1a0d8:	ldr	r1, [r5, #52]	; 0x34
   1a0dc:	cmp	r0, r1, lsl #3
   1a0e0:	bcc	1a990 <readstat_parse_sav+0x1f9c>
   1a0e4:	cmp	r1, #1
   1a0e8:	blt	1a218 <readstat_parse_sav+0x1824>
   1a0ec:	mov	r5, #0
   1a0f0:	ldr	r0, [sp, #80]	; 0x50
   1a0f4:	add	r7, r6, r5, lsl #3
   1a0f8:	ldrb	r0, [r0]
   1a0fc:	tst	r0, #1
   1a100:	bne	1a118 <readstat_parse_sav+0x1724>
   1a104:	mov	r1, r6
   1a108:	ldr	r0, [r1, r5, lsl #3]!
   1a10c:	ldr	r1, [r1, #4]
   1a110:	b	1a128 <readstat_parse_sav+0x1734>
   1a114:	.word	0x00011578
   1a118:	vldr	d0, [r7]
   1a11c:	bl	4e40 <byteswap_double@plt>
   1a120:	vmov	r0, r1, d0
   1a124:	vstr	d0, [r7]
   1a128:	ldr	r2, [sp, #56]	; 0x38
   1a12c:	add	r5, r5, #1
   1a130:	ldrd	r2, [r2]
   1a134:	eor	r3, r1, r3
   1a138:	eor	r2, r0, r2
   1a13c:	orrs	r2, r2, r3
   1a140:	movweq	r3, #0
   1a144:	moveq	r2, #0
   1a148:	movteq	r3, #32760	; 0x7ff8
   1a14c:	strdeq	r2, [r7]
   1a150:	ldr	r2, [sp, #64]	; 0x40
   1a154:	ldrd	r2, [r2]
   1a158:	eor	r3, r1, r3
   1a15c:	eor	r2, r0, r2
   1a160:	orrs	r2, r2, r3
   1a164:	movweq	r3, #0
   1a168:	moveq	r2, #0
   1a16c:	movteq	r3, #65520	; 0xfff0
   1a170:	strdeq	r2, [r7]
   1a174:	ldr	r2, [sp, #60]	; 0x3c
   1a178:	ldrd	r2, [r2]
   1a17c:	eor	r1, r1, r3
   1a180:	eor	r0, r0, r2
   1a184:	orrs	r0, r0, r1
   1a188:	movweq	r1, #0
   1a18c:	moveq	r0, #0
   1a190:	movteq	r1, #32752	; 0x7ff0
   1a194:	strdeq	r0, [r7]
   1a198:	ldr	r0, [sp, #72]	; 0x48
   1a19c:	ldr	r0, [r0, #52]	; 0x34
   1a1a0:	cmp	r5, r0
   1a1a4:	blt	1a0f0 <readstat_parse_sav+0x16fc>
   1a1a8:	b	1a218 <readstat_parse_sav+0x1824>
   1a1ac:	cmp	r0, #1
   1a1b0:	blt	1a218 <readstat_parse_sav+0x1824>
   1a1b4:	ldr	r0, [sp, #72]	; 0x48
   1a1b8:	mov	r7, #0
   1a1bc:	add	r6, r0, #88	; 0x58
   1a1c0:	ldr	r3, [r5, #12]
   1a1c4:	ldr	r2, [r5, #20]
   1a1c8:	add	r0, sp, #272	; 0x110
   1a1cc:	mov	r1, #8
   1a1d0:	blx	r3
   1a1d4:	cmp	r0, #8
   1a1d8:	bcc	1a990 <readstat_parse_sav+0x1f9c>
   1a1dc:	ldr	r0, [r8, #336]	; 0x150
   1a1e0:	mov	r1, #33	; 0x21
   1a1e4:	add	r2, sp, #272	; 0x110
   1a1e8:	mov	r3, #8
   1a1ec:	str	r0, [sp]
   1a1f0:	mov	r0, r6
   1a1f4:	bl	4b94 <readstat_convert@plt>
   1a1f8:	cmp	r0, #0
   1a1fc:	bne	1a980 <readstat_parse_sav+0x1f8c>
   1a200:	ldr	r0, [sp, #72]	; 0x48
   1a204:	add	r7, r7, #1
   1a208:	add	r6, r6, #33	; 0x21
   1a20c:	ldr	r0, [r0, #52]	; 0x34
   1a210:	cmp	r7, r0
   1a214:	blt	1a1c0 <readstat_parse_sav+0x17cc>
   1a218:	ldr	r0, [r8, #44]	; 0x2c
   1a21c:	ldr	r1, [r8, #340]	; 0x154
   1a220:	ldr	r2, [sp, #72]	; 0x48
   1a224:	str	r2, [r0, r1, lsl #2]
   1a228:	add	r0, r1, #1
   1a22c:	str	r0, [r8, #340]	; 0x154
   1a230:	ldr	r0, [sp, #28]
   1a234:	ldr	r1, [r0]
   1a238:	add	r1, r1, #1
   1a23c:	str	r1, [r0]
   1a240:	ldr	r5, [sp, #80]	; 0x50
   1a244:	ldr	r6, [sp, #68]	; 0x44
   1a248:	b	1a6a4 <readstat_parse_sav+0x1cb0>
   1a24c:	mov	sl, #5
   1a250:	b	1a644 <readstat_parse_sav+0x1c50>
   1a254:	mov	sl, r0
   1a258:	b	1a694 <readstat_parse_sav+0x1ca0>
   1a25c:	mov	sl, #4
   1a260:	b	1a694 <readstat_parse_sav+0x1ca0>
   1a264:	bl	4750 <byteswap8@plt>
   1a268:	ldr	r2, [sp, #80]	; 0x50
   1a26c:	ldr	r3, [sp, #56]	; 0x38
   1a270:	ldrb	r2, [r2]
   1a274:	strd	r0, [r3]
   1a278:	tst	r2, #1
   1a27c:	bne	1a2c8 <readstat_parse_sav+0x18d4>
   1a280:	ldr	r0, [sp, #60]	; 0x3c
   1a284:	str	r7, [r0]
   1a288:	str	r5, [r0, #4]
   1a28c:	ldr	r0, [sp, #64]	; 0x40
   1a290:	stm	r0, {r6, sl}
   1a294:	b	1a240 <readstat_parse_sav+0x184c>
   1a298:	str	r0, [sp, #48]	; 0x30
   1a29c:	ldr	r0, [sp, #76]	; 0x4c
   1a2a0:	str	r0, [sp, #52]	; 0x34
   1a2a4:	mov	r0, #0
   1a2a8:	str	r0, [sp, #40]	; 0x28
   1a2ac:	ldr	r0, [sp, #72]	; 0x48
   1a2b0:	ldr	r1, [sp, #52]	; 0x34
   1a2b4:	subs	sl, r0, r1
   1a2b8:	movwne	sl, #5
   1a2bc:	b	1a53c <readstat_parse_sav+0x1b48>
   1a2c0:	mov	sl, r0
   1a2c4:	b	1a644 <readstat_parse_sav+0x1c50>
   1a2c8:	mov	r0, r7
   1a2cc:	mov	r1, r5
   1a2d0:	bl	4750 <byteswap8@plt>
   1a2d4:	ldr	r2, [sp, #80]	; 0x50
   1a2d8:	ldr	r3, [sp, #60]	; 0x3c
   1a2dc:	ldrb	r2, [r2]
   1a2e0:	strd	r0, [r3]
   1a2e4:	tst	r2, #1
   1a2e8:	beq	1a28c <readstat_parse_sav+0x1898>
   1a2ec:	mov	r0, r6
   1a2f0:	mov	r1, sl
   1a2f4:	bl	4750 <byteswap8@plt>
   1a2f8:	mov	r6, r0
   1a2fc:	mov	sl, r1
   1a300:	b	1a28c <readstat_parse_sav+0x1898>
   1a304:	mov	r0, #0
   1a308:	mov	r1, #0
   1a30c:	str	r0, [sp, #20]
   1a310:	mov	r0, #0
   1a314:	str	r0, [sp, #32]
   1a318:	ldr	r0, [sp, #72]	; 0x48
   1a31c:	ldr	r3, [r0, #12]
   1a320:	ldr	r2, [r0, #20]
   1a324:	ldr	r0, [sp, #20]
   1a328:	blx	r3
   1a32c:	ldr	r1, [sp, #1304]	; 0x518
   1a330:	mov	sl, #2
   1a334:	cmp	r0, r1, lsl #2
   1a338:	bcc	1a630 <readstat_parse_sav+0x1c3c>
   1a33c:	mov	r0, #0
   1a340:	mov	sl, #0
   1a344:	cmp	r1, #0
   1a348:	str	r0, [sp, #24]
   1a34c:	beq	1a424 <readstat_parse_sav+0x1a30>
   1a350:	mov	r0, #0
   1a354:	str	r0, [sp, #24]
   1a358:	mov	r0, #0
   1a35c:	str	r0, [sp, #40]	; 0x28
   1a360:	ldr	r0, [sp, #32]
   1a364:	ldr	r1, [sp, #40]	; 0x28
   1a368:	ldr	r0, [r0, r1, lsl #2]
   1a36c:	ldr	r1, [sp, #80]	; 0x50
   1a370:	str	r0, [sp, #272]	; 0x110
   1a374:	ldrb	r1, [r1]
   1a378:	tst	r1, #1
   1a37c:	beq	1a388 <readstat_parse_sav+0x1994>
   1a380:	bl	4768 <byteswap4@plt>
   1a384:	str	r0, [sp, #272]	; 0x110
   1a388:	sub	r0, r0, #1
   1a38c:	str	r0, [sp, #272]	; 0x110
   1a390:	ldr	r0, [r8, #340]	; 0x154
   1a394:	cmp	r0, #0
   1a398:	beq	1a404 <readstat_parse_sav+0x1a10>
   1a39c:	mov	r7, r0
   1a3a0:	ldr	r0, [r8, #44]	; 0x2c
   1a3a4:	mov	r6, #0
   1a3a8:	str	r0, [sp, #52]	; 0x34
   1a3ac:	add	r0, r7, r6
   1a3b0:	str	r7, [sp, #72]	; 0x48
   1a3b4:	lsr	r7, r0, #1
   1a3b8:	ldr	r0, [sp, #52]	; 0x34
   1a3bc:	add	r5, r0, r7, lsl #2
   1a3c0:	add	r0, sp, #272	; 0x110
   1a3c4:	mov	r1, r5
   1a3c8:	bl	4b64 <spss_varinfo_compare@plt>
   1a3cc:	cmp	r0, #0
   1a3d0:	blt	1a3e0 <readstat_parse_sav+0x19ec>
   1a3d4:	beq	1a3ec <readstat_parse_sav+0x19f8>
   1a3d8:	add	r6, r7, #1
   1a3dc:	ldr	r7, [sp, #72]	; 0x48
   1a3e0:	cmp	r6, r7
   1a3e4:	bcc	1a3ac <readstat_parse_sav+0x19b8>
   1a3e8:	b	1a404 <readstat_parse_sav+0x1a10>
   1a3ec:	cmp	r5, #0
   1a3f0:	ldrne	r0, [r5]
   1a3f4:	ldrne	r1, [r8, #368]	; 0x170
   1a3f8:	strne	r1, [r0, #4]
   1a3fc:	ldrne	r0, [r0]
   1a400:	strne	r0, [sp, #24]
   1a404:	ldr	r0, [sp, #40]	; 0x28
   1a408:	mov	r2, r0
   1a40c:	add	r2, r0, #1
   1a410:	ldr	r0, [sp, #1304]	; 0x518
   1a414:	mov	r1, r2
   1a418:	str	r2, [sp, #40]	; 0x28
   1a41c:	cmp	r2, r0
   1a420:	bcc	1a360 <readstat_parse_sav+0x196c>
   1a424:	ldr	r0, [sp, #1308]	; 0x51c
   1a428:	cmp	r0, #0
   1a42c:	beq	1a5a0 <readstat_parse_sav+0x1bac>
   1a430:	ldr	r6, [sp, #48]	; 0x30
   1a434:	mov	r7, #0
   1a438:	ldr	r0, [sp, #24]
   1a43c:	cmp	r0, #5
   1a440:	str	r0, [r6, #56]	; 0x38
   1a444:	bne	1a4e0 <readstat_parse_sav+0x1aec>
   1a448:	ldr	r0, [sp, #80]	; 0x50
   1a44c:	vldr	d0, [r6]
   1a450:	ldrb	r0, [r0]
   1a454:	tst	r0, #1
   1a458:	beq	1a460 <readstat_parse_sav+0x1a6c>
   1a45c:	bl	4e40 <byteswap_double@plt>
   1a460:	ldr	r0, [sp, #56]	; 0x38
   1a464:	vstr	d0, [r6, #48]	; 0x30
   1a468:	ldrd	r2, [r0]
   1a46c:	vmov	r0, r1, d0
   1a470:	eor	r3, r3, r1
   1a474:	eor	r2, r2, r0
   1a478:	orrs	r2, r2, r3
   1a47c:	ldrbeq	r2, [r6, #61]	; 0x3d
   1a480:	orreq	r2, r2, #1
   1a484:	strbeq	r2, [r6, #61]	; 0x3d
   1a488:	ldr	r2, [sp, #64]	; 0x40
   1a48c:	ldrd	r2, [r2]
   1a490:	eor	r3, r3, r1
   1a494:	eor	r2, r2, r0
   1a498:	orrs	r2, r2, r3
   1a49c:	ldrbeq	r2, [r6, #61]	; 0x3d
   1a4a0:	orreq	r2, r2, #1
   1a4a4:	strbeq	r2, [r6, #61]	; 0x3d
   1a4a8:	ldr	r2, [sp, #60]	; 0x3c
   1a4ac:	ldrd	r2, [r2]
   1a4b0:	eor	r1, r3, r1
   1a4b4:	eor	r0, r2, r0
   1a4b8:	orrs	r0, r0, r1
   1a4bc:	ldrbeq	r0, [r6, #61]	; 0x3d
   1a4c0:	orreq	r0, r0, #1
   1a4c4:	strbeq	r0, [r6, #61]	; 0x3d
   1a4c8:	bl	4c84 <__isnan@plt>
   1a4cc:	cmp	r0, #0
   1a4d0:	ldrbne	r0, [r6, #61]	; 0x3d
   1a4d4:	orrne	r0, r0, #1
   1a4d8:	strbne	r0, [r6, #61]	; 0x3d
   1a4dc:	b	1a50c <readstat_parse_sav+0x1b18>
   1a4e0:	ldr	r0, [r8, #336]	; 0x150
   1a4e4:	add	r5, r6, #8
   1a4e8:	mov	r1, #33	; 0x21
   1a4ec:	mov	r2, r6
   1a4f0:	mov	r3, #8
   1a4f4:	str	r0, [sp]
   1a4f8:	mov	r0, r5
   1a4fc:	bl	4b94 <readstat_convert@plt>
   1a500:	cmp	r0, #0
   1a504:	bne	1a59c <readstat_parse_sav+0x1ba8>
   1a508:	str	r5, [r6, #48]	; 0x30
   1a50c:	ldr	r0, [sp, #1308]	; 0x51c
   1a510:	add	r7, r7, #1
   1a514:	add	r6, r6, #72	; 0x48
   1a518:	cmp	r7, r0
   1a51c:	bcc	1a438 <readstat_parse_sav+0x1a44>
   1a520:	mov	sl, #0
   1a524:	b	1a5a0 <readstat_parse_sav+0x1bac>
   1a528:	mov	sl, #5
   1a52c:	b	1a580 <readstat_parse_sav+0x1b8c>
   1a530:	beq	1a240 <readstat_parse_sav+0x184c>
   1a534:	b	1ac0c <readstat_parse_sav+0x2218>
   1a538:	mov	sl, #5
   1a53c:	ldr	r0, [sp, #48]	; 0x30
   1a540:	cmp	r0, #0
   1a544:	bne	1a580 <readstat_parse_sav+0x1b8c>
   1a548:	b	1a588 <readstat_parse_sav+0x1b94>
   1a54c:	mov	sl, r0
   1a550:	b	1a580 <readstat_parse_sav+0x1b8c>
   1a554:	mov	r0, #0
   1a558:	mov	sl, #3
   1a55c:	str	r0, [sp, #20]
   1a560:	b	1a630 <readstat_parse_sav+0x1c3c>
   1a564:	mov	sl, #3
   1a568:	b	1a588 <readstat_parse_sav+0x1b94>
   1a56c:	mov	r0, #0
   1a570:	mov	sl, #3
   1a574:	str	r0, [sp, #40]	; 0x28
   1a578:	b	1a580 <readstat_parse_sav+0x1b8c>
   1a57c:	mov	sl, #4
   1a580:	ldr	r0, [sp, #48]	; 0x30
   1a584:	bl	4864 <free@plt>
   1a588:	ldr	r0, [sp, #40]	; 0x28
   1a58c:	cmp	r0, #0
   1a590:	beq	1a694 <readstat_parse_sav+0x1ca0>
   1a594:	ldr	r0, [sp, #40]	; 0x28
   1a598:	b	1a690 <readstat_parse_sav+0x1c9c>
   1a59c:	mov	sl, r0
   1a5a0:	ldr	r0, [r8, #20]
   1a5a4:	cmp	r0, #0
   1a5a8:	beq	1a624 <readstat_parse_sav+0x1c30>
   1a5ac:	ldr	r5, [sp, #1308]	; 0x51c
   1a5b0:	ldr	r3, [r8, #368]	; 0x170
   1a5b4:	ldr	r2, [pc, #2120]	; 1ae04 <readstat_parse_sav+0x2410>
   1a5b8:	add	r0, sp, #272	; 0x110
   1a5bc:	mov	r1, #256	; 0x100
   1a5c0:	add	r2, pc, r2
   1a5c4:	bl	4bdc <snprintf@plt>
   1a5c8:	cmp	r5, #1
   1a5cc:	str	r5, [sp, #72]	; 0x48
   1a5d0:	blt	1a624 <readstat_parse_sav+0x1c30>
   1a5d4:	ldr	r0, [sp, #48]	; 0x30
   1a5d8:	mov	r7, #1
   1a5dc:	add	r6, r0, #64	; 0x40
   1a5e0:	sub	lr, r6, #16
   1a5e4:	ldm	lr, {r2, r3, lr}
   1a5e8:	ldmda	r6, {r1, r5}
   1a5ec:	ldr	r0, [r8, #40]	; 0x28
   1a5f0:	ldr	ip, [r8, #20]
   1a5f4:	str	lr, [sp]
   1a5f8:	stmib	sp, {r1, r5}
   1a5fc:	str	r0, [sp, #12]
   1a600:	add	r0, sp, #272	; 0x110
   1a604:	blx	ip
   1a608:	ldr	r1, [sp, #72]	; 0x48
   1a60c:	cmp	r7, r1
   1a610:	bge	1a624 <readstat_parse_sav+0x1c30>
   1a614:	add	r6, r6, #72	; 0x48
   1a618:	add	r7, r7, #1
   1a61c:	cmp	r0, #0
   1a620:	beq	1a5e0 <readstat_parse_sav+0x1bec>
   1a624:	ldr	r0, [r8, #368]	; 0x170
   1a628:	add	r0, r0, #1
   1a62c:	str	r0, [r8, #368]	; 0x170
   1a630:	ldr	r0, [sp, #32]
   1a634:	cmp	r0, #0
   1a638:	beq	1a644 <readstat_parse_sav+0x1c50>
   1a63c:	ldr	r0, [sp, #20]
   1a640:	bl	4864 <free@plt>
   1a644:	ldr	r0, [sp, #48]	; 0x30
   1a648:	cmp	r0, #0
   1a64c:	beq	1a694 <readstat_parse_sav+0x1ca0>
   1a650:	ldr	r1, [sp, #1308]	; 0x51c
   1a654:	cmp	r1, #0
   1a658:	beq	1a68c <readstat_parse_sav+0x1c98>
   1a65c:	ldr	r0, [sp, #48]	; 0x30
   1a660:	mov	r6, #0
   1a664:	add	r5, r0, #64	; 0x40
   1a668:	ldr	r0, [r5]
   1a66c:	cmp	r0, #0
   1a670:	beq	1a67c <readstat_parse_sav+0x1c88>
   1a674:	bl	4864 <free@plt>
   1a678:	ldr	r1, [sp, #1308]	; 0x51c
   1a67c:	add	r6, r6, #1
   1a680:	add	r5, r5, #72	; 0x48
   1a684:	cmp	r6, r1
   1a688:	bcc	1a668 <readstat_parse_sav+0x1c74>
   1a68c:	ldr	r0, [sp, #48]	; 0x30
   1a690:	bl	4864 <free@plt>
   1a694:	ldr	r5, [sp, #80]	; 0x50
   1a698:	ldr	r6, [sp, #68]	; 0x44
   1a69c:	cmp	sl, #0
   1a6a0:	bne	1918c <readstat_parse_sav+0x798>
   1a6a4:	ldr	r3, [r6, #12]
   1a6a8:	ldr	r2, [r6, #20]
   1a6ac:	add	r0, sp, #1296	; 0x510
   1a6b0:	mov	r1, #4
   1a6b4:	blx	r3
   1a6b8:	cmp	r0, #4
   1a6bc:	bcs	19298 <readstat_parse_sav+0x8a4>
   1a6c0:	b	19188 <readstat_parse_sav+0x794>
   1a6c4:	movw	r1, #999	; 0x3e7
   1a6c8:	cmp	r0, r1
   1a6cc:	bne	1918c <readstat_parse_sav+0x798>
   1a6d0:	ldr	r0, [r8, #36]	; 0x24
   1a6d4:	mov	r1, #4
   1a6d8:	ldr	r3, [r0, #12]
   1a6dc:	ldr	r2, [r0, #20]
   1a6e0:	add	r0, sp, #1312	; 0x520
   1a6e4:	blx	r3
   1a6e8:	cmp	r0, #4
   1a6ec:	movcs	sl, #0
   1a6f0:	movcc	sl, #2
   1a6f4:	b	1918c <readstat_parse_sav+0x798>
   1a6f8:	mvn	r1, #0
   1a6fc:	mvn	r2, #0
   1a700:	str	r0, [sp, #1320]	; 0x528
   1a704:	asr	r0, r0, #31
   1a708:	str	r1, [sp, #1312]	; 0x520
   1a70c:	add	r5, r8, #64	; 0x40
   1a710:	mov	r3, #64	; 0x40
   1a714:	str	r0, [sp, #1324]	; 0x52c
   1a718:	str	r2, [sp, #1316]	; 0x524
   1a71c:	add	r2, r8, #424	; 0x1a8
   1a720:	ldr	r0, [r8, #324]	; 0x144
   1a724:	str	r0, [sp, #1332]	; 0x534
   1a728:	str	r0, [sp, #1328]	; 0x530
   1a72c:	ldm	r2, {r0, r1, r2}
   1a730:	str	r0, [sp, #1336]	; 0x538
   1a734:	asr	r0, r0, #31
   1a738:	str	r0, [sp, #1340]	; 0x53c
   1a73c:	mov	r0, #0
   1a740:	str	r1, [sp, #1344]	; 0x540
   1a744:	str	r0, [sp, #1352]	; 0x548
   1a748:	str	r0, [sp, #1356]	; 0x54c
   1a74c:	str	r2, [sp, #1348]	; 0x544
   1a750:	add	r2, r9, #109	; 0x6d
   1a754:	ldrb	r1, [sp, #1364]	; 0x554
   1a758:	ldr	r0, [r8, #56]	; 0x38
   1a75c:	and	r1, r1, #254	; 0xfe
   1a760:	strb	r1, [sp, #1364]	; 0x554
   1a764:	str	r0, [sp, #1360]	; 0x550
   1a768:	movw	r1, #257	; 0x101
   1a76c:	ldr	r0, [r8, #336]	; 0x150
   1a770:	str	r0, [sp]
   1a774:	mov	r0, r5
   1a778:	bl	4b94 <readstat_convert@plt>
   1a77c:	mov	sl, r0
   1a780:	cmp	r0, #0
   1a784:	bne	190e4 <readstat_parse_sav+0x6f0>
   1a788:	str	r5, [sp, #1356]	; 0x54c
   1a78c:	add	r0, sp, #1312	; 0x520
   1a790:	ldr	r2, [r8]
   1a794:	ldr	r1, [r8, #40]	; 0x28
   1a798:	blx	r2
   1a79c:	mov	sl, #4
   1a7a0:	cmp	r0, #0
   1a7a4:	bne	190e4 <readstat_parse_sav+0x6f0>
   1a7a8:	ldr	r0, [r8, #328]	; 0x148
   1a7ac:	cmp	r0, #0
   1a7b0:	beq	1a840 <readstat_parse_sav+0x1e4c>
   1a7b4:	ldr	r1, [r8, #332]	; 0x14c
   1a7b8:	ldr	r2, [r8, #340]	; 0x154
   1a7bc:	cmp	r1, r2, lsl #1
   1a7c0:	addne	r3, r2, r2, lsl #1
   1a7c4:	cmpne	r1, r3
   1a7c8:	bne	1a978 <readstat_parse_sav+0x1f84>
   1a7cc:	cmp	r2, #1
   1a7d0:	blt	1a840 <readstat_parse_sav+0x1e4c>
   1a7d4:	sdiv	r9, r1, r2
   1a7d8:	mov	r7, #0
   1a7dc:	cmp	r9, #3
   1a7e0:	mov	sl, r9
   1a7e4:	movwne	sl, #2
   1a7e8:	b	1a7f0 <readstat_parse_sav+0x1dfc>
   1a7ec:	ldr	r0, [r8, #328]	; 0x148
   1a7f0:	ldr	r1, [r8, #44]	; 0x2c
   1a7f4:	mul	r6, r7, sl
   1a7f8:	ldr	r0, [r0, r6, lsl #2]
   1a7fc:	ldr	r5, [r1, r7, lsl #2]
   1a800:	bl	4cfc <spss_measure_to_readstat_measure@plt>
   1a804:	str	r0, [r5, #268]	; 0x10c
   1a808:	add	r1, r6, #1
   1a80c:	cmp	r9, #3
   1a810:	ldr	r0, [r8, #328]	; 0x148
   1a814:	ldreq	r1, [r0, r1, lsl #2]
   1a818:	streq	r1, [r5, #276]	; 0x114
   1a81c:	addeq	r1, r6, #2
   1a820:	ldr	r0, [r0, r1, lsl #2]
   1a824:	bl	4cd8 <spss_alignment_to_readstat_alignment@plt>
   1a828:	str	r0, [r5, #272]	; 0x110
   1a82c:	ldr	r0, [r5, #48]	; 0x30
   1a830:	add	r7, r0, r7
   1a834:	ldr	r0, [r8, #340]	; 0x154
   1a838:	cmp	r7, r0
   1a83c:	blt	1a7ec <readstat_parse_sav+0x1df8>
   1a840:	ldr	r0, [r8, #8]
   1a844:	cmp	r0, #0
   1a848:	beq	1a90c <readstat_parse_sav+0x1f18>
   1a84c:	ldr	r0, [r8, #340]	; 0x154
   1a850:	cmp	r0, #1
   1a854:	blt	1a90c <readstat_parse_sav+0x1f18>
   1a858:	ldr	r9, [pc, #1448]	; 1ae08 <readstat_parse_sav+0x2414>
   1a85c:	mov	r6, #0
   1a860:	mov	sl, #0
   1a864:	add	r9, pc, r9
   1a868:	ldr	r0, [r8, #44]	; 0x2c
   1a86c:	ldr	r2, [r8, #336]	; 0x150
   1a870:	mov	r1, sl
   1a874:	ldr	r5, [r0, r6, lsl #2]
   1a878:	mov	r0, r5
   1a87c:	bl	4bd0 <spss_init_variable_for_info@plt>
   1a880:	ldr	r1, [r5, #8]
   1a884:	ldr	r2, [r8, #52]	; 0x34
   1a888:	add	r7, sp, #272	; 0x110
   1a88c:	str	r0, [r2, r1, lsl #2]
   1a890:	mov	r0, r7
   1a894:	mov	r1, #256	; 0x100
   1a898:	mov	r2, r9
   1a89c:	ldr	r3, [r5, #4]
   1a8a0:	bl	4bdc <snprintf@plt>
   1a8a4:	ldr	r1, [r5, #4]
   1a8a8:	mov	r2, r7
   1a8ac:	ldr	r0, [r5, #8]
   1a8b0:	ldr	r7, [r8, #8]
   1a8b4:	ldr	r3, [r8, #40]	; 0x28
   1a8b8:	cmn	r1, #1
   1a8bc:	addeq	r2, r1, #1
   1a8c0:	ldr	r1, [r8, #52]	; 0x34
   1a8c4:	ldr	r1, [r1, r0, lsl #2]
   1a8c8:	blx	r7
   1a8cc:	cmp	r0, #2
   1a8d0:	beq	1a8e4 <readstat_parse_sav+0x1ef0>
   1a8d4:	cmp	r0, #1
   1a8d8:	beq	1a9a8 <readstat_parse_sav+0x1fb4>
   1a8dc:	add	sl, sl, #1
   1a8e0:	b	1a8f8 <readstat_parse_sav+0x1f04>
   1a8e4:	ldr	r0, [r5, #8]
   1a8e8:	ldr	r1, [r8, #52]	; 0x34
   1a8ec:	ldr	r0, [r1, r0, lsl #2]
   1a8f0:	mov	r1, #1
   1a8f4:	str	r1, [r0, #2144]	; 0x860
   1a8f8:	ldr	r0, [r5, #48]	; 0x30
   1a8fc:	add	r6, r0, r6
   1a900:	ldr	r0, [r8, #340]	; 0x154
   1a904:	cmp	r6, r0
   1a908:	blt	1a868 <readstat_parse_sav+0x1e74>
   1a90c:	ldr	r2, [r8, #12]
   1a910:	cmp	r2, #0
   1a914:	beq	1a92c <readstat_parse_sav+0x1f38>
   1a918:	ldr	r1, [r8, #372]	; 0x174
   1a91c:	cmp	r1, #0
   1a920:	ldrge	r0, [r8, #340]	; 0x154
   1a924:	cmpge	r0, #1
   1a928:	bge	1abcc <readstat_parse_sav+0x21d8>
   1a92c:	ldr	r0, [r8, #16]
   1a930:	mov	sl, #0
   1a934:	cmp	r0, #0
   1a938:	beq	190e4 <readstat_parse_sav+0x6f0>
   1a93c:	ldr	r0, [r8, #340]	; 0x154
   1a940:	cmp	r0, #1
   1a944:	blt	1a9b0 <readstat_parse_sav+0x1fbc>
   1a948:	ldr	r1, [r8, #44]	; 0x2c
   1a94c:	mov	r5, #256	; 0x100
   1a950:	mov	r2, #0
   1a954:	ldr	r3, [r1, r2, lsl #2]
   1a958:	ldr	r7, [r3, #20]
   1a95c:	ldr	r3, [r3, #48]	; 0x30
   1a960:	cmp	r7, r5
   1a964:	add	r2, r3, r2
   1a968:	movhi	r5, r7
   1a96c:	cmp	r2, r0
   1a970:	blt	1a954 <readstat_parse_sav+0x1f60>
   1a974:	b	1a9b4 <readstat_parse_sav+0x1fc0>
   1a978:	mov	sl, #5
   1a97c:	b	190e4 <readstat_parse_sav+0x6f0>
   1a980:	mov	sl, r0
   1a984:	b	1ad8c <readstat_parse_sav+0x2398>
   1a988:	mov	sl, r0
   1a98c:	b	1918c <readstat_parse_sav+0x798>
   1a990:	mov	sl, #2
   1a994:	b	1ad8c <readstat_parse_sav+0x2398>
   1a998:	mov	r0, #0
   1a99c:	mov	sl, #3
   1a9a0:	str	r0, [sp, #72]	; 0x48
   1a9a4:	b	1ad8c <readstat_parse_sav+0x2398>
   1a9a8:	mov	sl, #4
   1a9ac:	b	190e4 <readstat_parse_sav+0x6f0>
   1a9b0:	mov	r5, #256	; 0x100
   1a9b4:	add	r0, r5, #7
   1a9b8:	str	r0, [r8, #380]	; 0x17c
   1a9bc:	bl	4b88 <readstat_malloc@plt>
   1a9c0:	str	r0, [r8, #376]	; 0x178
   1a9c4:	mov	r0, #1
   1a9c8:	orr	r0, r0, r5, lsl #2
   1a9cc:	add	r0, r0, #7
   1a9d0:	str	r0, [r8, #388]	; 0x184
   1a9d4:	bl	4b88 <readstat_malloc@plt>
   1a9d8:	cmp	r0, #0
   1a9dc:	str	r0, [r8, #384]	; 0x180
   1a9e0:	beq	1abc4 <readstat_parse_sav+0x21d0>
   1a9e4:	ldr	r0, [r8, #376]	; 0x178
   1a9e8:	cmp	r0, #0
   1a9ec:	beq	1abc4 <readstat_parse_sav+0x21d0>
   1a9f0:	ldr	r0, [r8, #428]	; 0x1ac
   1a9f4:	cmp	r0, #2
   1a9f8:	beq	1ac14 <readstat_parse_sav+0x2220>
   1a9fc:	cmp	r0, #1
   1aa00:	bne	1ac54 <readstat_parse_sav+0x2260>
   1aa04:	add	r2, sp, #272	; 0x110
   1aa08:	vmov.i32	q8, #0	; 0x00000000
   1aa0c:	mov	r1, #48	; 0x30
   1aa10:	ldr	r6, [r8, #36]	; 0x24
   1aa14:	ldr	r0, [r8, #344]	; 0x158
   1aa18:	mov	r7, #0
   1aa1c:	mov	r3, r2
   1aa20:	vst1.64	{d16-d17}, [r3], r1
   1aa24:	ldr	r1, [r8, #392]	; 0x188
   1aa28:	ldr	r2, [r8, #396]	; 0x18c
   1aa2c:	cmp	r0, #0
   1aa30:	str	r6, [sp, #72]	; 0x48
   1aa34:	str	r2, [sp, #292]	; 0x124
   1aa38:	str	r1, [sp, #288]	; 0x120
   1aa3c:	mov	r2, #0
   1aa40:	vldr	d16, [r8, #416]	; 0x1a0
   1aa44:	str	r7, [sp, #308]	; 0x134
   1aa48:	str	r7, [sp, #304]	; 0x130
   1aa4c:	str	r7, [sp, #312]	; 0x138
   1aa50:	str	r2, [sp, #76]	; 0x4c
   1aa54:	vstr	d16, [sp, #296]	; 0x128
   1aa58:	ldrb	r1, [r8, #436]	; 0x1b4
   1aa5c:	str	r7, [r3]
   1aa60:	mov	r3, r6
   1aa64:	and	r1, r1, #1
   1aa68:	str	r1, [sp, #316]	; 0x13c
   1aa6c:	lsl	r1, r0, #3
   1aa70:	str	r1, [sp, #80]	; 0x50
   1aa74:	beq	1aa90 <readstat_parse_sav+0x209c>
   1aa78:	ldr	r0, [sp, #80]	; 0x50
   1aa7c:	bl	4b88 <readstat_malloc@plt>
   1aa80:	cmp	r0, #0
   1aa84:	str	r0, [sp, #76]	; 0x4c
   1aa88:	beq	1adb0 <readstat_parse_sav+0x23bc>
   1aa8c:	ldr	r3, [r8, #36]	; 0x24
   1aa90:	ldr	r7, [r3, #16]
   1aa94:	ldr	r1, [r8, #28]
   1aa98:	ldr	r0, [r8, #32]
   1aa9c:	ldr	r2, [r8, #40]	; 0x28
   1aaa0:	ldr	r3, [r3, #20]
   1aaa4:	blx	r7
   1aaa8:	mov	r7, r0
   1aaac:	cmp	r0, #0
   1aab0:	bne	1add8 <readstat_parse_sav+0x23e4>
   1aab4:	mov	r9, #0
   1aab8:	ldr	r0, [sp, #72]	; 0x48
   1aabc:	mov	r1, #65536	; 0x10000
   1aac0:	ldr	r3, [r0, #12]
   1aac4:	ldr	r2, [r0, #20]
   1aac8:	add	r0, sp, #1312	; 0x520
   1aacc:	blx	r3
   1aad0:	mov	r5, r0
   1aad4:	add	r0, r0, #1
   1aad8:	cmp	r0, #2
   1aadc:	bcc	1adfc <readstat_parse_sav+0x2408>
   1aae0:	ands	r0, r5, #7
   1aae4:	bne	1adfc <readstat_parse_sav+0x2408>
   1aae8:	mov	r0, #1
   1aaec:	mov	r1, #0
   1aaf0:	str	r0, [sp, #320]	; 0x140
   1aaf4:	sub	r0, r5, r1
   1aaf8:	str	r0, [sp, #276]	; 0x114
   1aafc:	add	r0, sp, #1312	; 0x520
   1ab00:	add	r0, r0, r1
   1ab04:	str	r0, [sp, #272]	; 0x110
   1ab08:	ldr	r0, [sp, #76]	; 0x4c
   1ab0c:	add	r0, r0, r9
   1ab10:	str	r0, [sp, #280]	; 0x118
   1ab14:	ldr	r0, [sp, #80]	; 0x50
   1ab18:	sub	r0, r0, r9
   1ab1c:	str	r0, [sp, #284]	; 0x11c
   1ab20:	add	r0, sp, #272	; 0x110
   1ab24:	bl	4b70 <sav_decompress_row@plt>
   1ab28:	ldr	r0, [sp, #320]	; 0x140
   1ab2c:	ldr	r6, [sp, #276]	; 0x114
   1ab30:	cmp	r0, #2
   1ab34:	bne	1ab5c <readstat_parse_sav+0x2168>
   1ab38:	ldr	r0, [sp, #76]	; 0x4c
   1ab3c:	ldr	r1, [sp, #80]	; 0x50
   1ab40:	mov	r2, r8
   1ab44:	bl	1ae10 <sav_process_row>
   1ab48:	cmp	r0, #0
   1ab4c:	bne	1add4 <readstat_parse_sav+0x23e0>
   1ab50:	ldr	r0, [sp, #320]	; 0x140
   1ab54:	mov	r9, #0
   1ab58:	b	1ab68 <readstat_parse_sav+0x2174>
   1ab5c:	ldr	r1, [sp, #284]	; 0x11c
   1ab60:	ldr	r2, [sp, #80]	; 0x50
   1ab64:	sub	r9, r2, r1
   1ab68:	mov	r7, #0
   1ab6c:	cmp	r0, #3
   1ab70:	beq	1add8 <readstat_parse_sav+0x23e4>
   1ab74:	ldr	r1, [r8, #356]	; 0x164
   1ab78:	cmp	r1, #1
   1ab7c:	blt	1ab8c <readstat_parse_sav+0x2198>
   1ab80:	ldr	r2, [r8, #364]	; 0x16c
   1ab84:	cmp	r2, r1
   1ab88:	beq	1add8 <readstat_parse_sav+0x23e4>
   1ab8c:	sub	r1, r5, r6
   1ab90:	cmp	r0, #0
   1ab94:	bne	1aaf4 <readstat_parse_sav+0x2100>
   1ab98:	ldr	r3, [r8, #36]	; 0x24
   1ab9c:	ldr	r1, [r8, #28]
   1aba0:	ldr	r0, [r8, #32]
   1aba4:	ldr	r2, [r8, #40]	; 0x28
   1aba8:	ldr	r7, [r3, #16]
   1abac:	ldr	r3, [r3, #20]
   1abb0:	blx	r7
   1abb4:	mov	r7, r0
   1abb8:	cmp	r0, #0
   1abbc:	beq	1aab8 <readstat_parse_sav+0x20c4>
   1abc0:	b	1add8 <readstat_parse_sav+0x23e4>
   1abc4:	mov	sl, #3
   1abc8:	b	190e4 <readstat_parse_sav+0x6f0>
   1abcc:	ldr	r3, [r8, #44]	; 0x2c
   1abd0:	sub	r1, r1, #1
   1abd4:	mov	r7, #0
   1abd8:	ldr	r6, [r3, r7, lsl #2]
   1abdc:	ldr	r5, [r6, #12]
   1abe0:	cmp	r5, r1
   1abe4:	beq	1ad24 <readstat_parse_sav+0x2330>
   1abe8:	ldr	r6, [r6, #48]	; 0x30
   1abec:	add	r7, r6, r7
   1abf0:	cmp	r7, r0
   1abf4:	blt	1abd8 <readstat_parse_sav+0x21e4>
   1abf8:	b	1a92c <readstat_parse_sav+0x1f38>
   1abfc:	mov	r0, #0
   1ac00:	mov	sl, #3
   1ac04:	str	r0, [sp, #76]	; 0x4c
   1ac08:	b	1918c <readstat_parse_sav+0x798>
   1ac0c:	mov	sl, #5
   1ac10:	b	1918c <readstat_parse_sav+0x798>
   1ac14:	ldr	r1, [pc, #496]	; 1ae0c <readstat_parse_sav+0x2418>
   1ac18:	mov	r0, r8
   1ac1c:	add	r1, pc, r1
   1ac20:	bl	4df8 <zsav_read_compressed_data@plt>
   1ac24:	mov	r7, r0
   1ac28:	cmp	r7, #0
   1ac2c:	bne	1adf4 <readstat_parse_sav+0x2400>
   1ac30:	ldr	r0, [r8, #352]	; 0x160
   1ac34:	cmn	r0, #1
   1ac38:	beq	190e4 <readstat_parse_sav+0x6f0>
   1ac3c:	ldr	r0, [r8, #356]	; 0x164
   1ac40:	ldr	r1, [r8, #364]	; 0x16c
   1ac44:	subs	sl, r1, r0
   1ac48:	movwne	sl, #9
   1ac4c:	b	190e4 <readstat_parse_sav+0x6f0>
   1ac50:	.word	0x0000fd5b
   1ac54:	ldr	r0, [r8, #344]	; 0x158
   1ac58:	ldr	r5, [r8, #36]	; 0x24
   1ac5c:	lsl	r6, r0, #3
   1ac60:	mov	r0, r6
   1ac64:	bl	4b88 <readstat_malloc@plt>
   1ac68:	mov	r9, r0
   1ac6c:	ldr	r0, [r8, #360]	; 0x168
   1ac70:	cmp	r0, #0
   1ac74:	beq	1ac9c <readstat_parse_sav+0x22a8>
   1ac78:	ldr	r3, [r5, #8]
   1ac7c:	ldr	r2, [r5, #20]
   1ac80:	mul	r0, r0, r6
   1ac84:	mov	r1, #1
   1ac88:	blx	r3
   1ac8c:	cmn	r0, #1
   1ac90:	beq	1adc0 <readstat_parse_sav+0x23cc>
   1ac94:	mov	r0, #0
   1ac98:	str	r0, [r8, #360]	; 0x168
   1ac9c:	ldr	r0, [r8, #356]	; 0x164
   1aca0:	cmn	r0, #1
   1aca4:	beq	1acb4 <readstat_parse_sav+0x22c0>
   1aca8:	ldr	r1, [r8, #364]	; 0x16c
   1acac:	cmp	r1, r0
   1acb0:	bge	1ada0 <readstat_parse_sav+0x23ac>
   1acb4:	ldr	r3, [r8, #36]	; 0x24
   1acb8:	ldr	r1, [r8, #28]
   1acbc:	ldr	r0, [r8, #32]
   1acc0:	ldr	r2, [r8, #40]	; 0x28
   1acc4:	ldr	r7, [r3, #16]
   1acc8:	ldr	r3, [r3, #20]
   1accc:	blx	r7
   1acd0:	cmp	r0, #0
   1acd4:	bne	1ad0c <readstat_parse_sav+0x2318>
   1acd8:	ldr	r3, [r5, #12]
   1acdc:	ldr	r2, [r5, #20]
   1ace0:	mov	r0, r9
   1ace4:	mov	r1, r6
   1ace8:	blx	r3
   1acec:	cmp	r0, r6
   1acf0:	bne	1ada0 <readstat_parse_sav+0x23ac>
   1acf4:	mov	r0, r9
   1acf8:	mov	r1, r6
   1acfc:	mov	r2, r8
   1ad00:	bl	1ae10 <sav_process_row>
   1ad04:	cmp	r0, #0
   1ad08:	beq	1ac9c <readstat_parse_sav+0x22a8>
   1ad0c:	mov	r7, r0
   1ad10:	cmp	r9, #0
   1ad14:	bne	1adcc <readstat_parse_sav+0x23d8>
   1ad18:	b	1adec <readstat_parse_sav+0x23f8>
   1ad1c:	mov	sl, #2
   1ad20:	b	1ad54 <readstat_parse_sav+0x2360>
   1ad24:	ldr	r0, [r6, #8]
   1ad28:	ldr	r3, [r8, #52]	; 0x34
   1ad2c:	ldr	r1, [r8, #40]	; 0x28
   1ad30:	ldr	r0, [r3, r0, lsl #2]
   1ad34:	blx	r2
   1ad38:	mov	sl, #4
   1ad3c:	cmp	r0, #0
   1ad40:	bne	190e4 <readstat_parse_sav+0x6f0>
   1ad44:	b	1a92c <readstat_parse_sav+0x1f38>
   1ad48:	mov	sl, #5
   1ad4c:	b	1ad8c <readstat_parse_sav+0x2398>
   1ad50:	mov	sl, #3
   1ad54:	ldr	r0, [sp, #72]	; 0x48
   1ad58:	add	r7, r0, #264	; 0x108
   1ad5c:	b	1ad74 <readstat_parse_sav+0x2380>
   1ad60:	mov	sl, #3
   1ad64:	b	1ad6c <readstat_parse_sav+0x2378>
   1ad68:	mov	sl, #2
   1ad6c:	mov	r0, r6
   1ad70:	bl	4864 <free@plt>
   1ad74:	ldr	r0, [r7]
   1ad78:	cmp	r0, #0
   1ad7c:	beq	1ad8c <readstat_parse_sav+0x2398>
   1ad80:	bl	4864 <free@plt>
   1ad84:	mov	r0, #0
   1ad88:	str	r0, [r7]
   1ad8c:	ldr	r0, [sp, #72]	; 0x48
   1ad90:	bl	4d5c <spss_varinfo_free@plt>
   1ad94:	b	1918c <readstat_parse_sav+0x798>
   1ad98:	mov	sl, #3
   1ad9c:	b	1918c <readstat_parse_sav+0x798>
   1ada0:	mov	r7, #0
   1ada4:	cmp	r9, #0
   1ada8:	bne	1adcc <readstat_parse_sav+0x23d8>
   1adac:	b	1adec <readstat_parse_sav+0x23f8>
   1adb0:	mov	r7, #3
   1adb4:	cmp	r7, #0
   1adb8:	bne	1adf4 <readstat_parse_sav+0x2400>
   1adbc:	b	1ac30 <readstat_parse_sav+0x223c>
   1adc0:	mov	r7, #15
   1adc4:	cmp	r9, #0
   1adc8:	beq	1adec <readstat_parse_sav+0x23f8>
   1adcc:	mov	r0, r9
   1add0:	b	1ade8 <readstat_parse_sav+0x23f4>
   1add4:	mov	r7, r0
   1add8:	ldr	r0, [sp, #76]	; 0x4c
   1addc:	cmp	r0, #0
   1ade0:	beq	1adec <readstat_parse_sav+0x23f8>
   1ade4:	ldr	r0, [sp, #76]	; 0x4c
   1ade8:	bl	4864 <free@plt>
   1adec:	cmp	r7, #0
   1adf0:	beq	1ac30 <readstat_parse_sav+0x223c>
   1adf4:	mov	sl, r7
   1adf8:	b	190e4 <readstat_parse_sav+0x6f0>
   1adfc:	mov	r7, #0
   1ae00:	b	1add8 <readstat_parse_sav+0x23e4>
   1ae04:	.word	0x0000f453
   1ae08:	.word	0x0000f1af
   1ae0c:	.word	0x000001ec

0001ae10 <sav_process_row>:
   1ae10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ae14:	add	fp, sp, #28
   1ae18:	sub	sp, sp, #68	; 0x44
   1ae1c:	mov	r6, r2
   1ae20:	mov	r2, r0
   1ae24:	ldr	r0, [r6, #360]	; 0x168
   1ae28:	cmp	r0, #0
   1ae2c:	beq	1ae3c <sav_process_row+0x2c>
   1ae30:	sub	r0, r0, #1
   1ae34:	str	r0, [r6, #360]	; 0x168
   1ae38:	b	1b1c0 <sav_process_row+0x3b0>
   1ae3c:	cmp	r1, #0
   1ae40:	beq	1b1b0 <sav_process_row+0x3a0>
   1ae44:	add	r0, r6, #364	; 0x16c
   1ae48:	mov	r5, #0
   1ae4c:	mov	r7, #0
   1ae50:	mov	ip, #0
   1ae54:	mov	r8, #0
   1ae58:	mov	r4, #0
   1ae5c:	str	r2, [sp, #44]	; 0x2c
   1ae60:	str	r1, [sp, #40]	; 0x28
   1ae64:	str	r6, [fp, #-32]	; 0xffffffe0
   1ae68:	str	r0, [sp, #12]
   1ae6c:	add	r0, r6, #408	; 0x198
   1ae70:	str	r0, [sp, #24]
   1ae74:	add	r0, r6, #400	; 0x190
   1ae78:	str	r0, [sp, #20]
   1ae7c:	add	r0, r6, #392	; 0x188
   1ae80:	str	r0, [sp, #16]
   1ae84:	mov	r0, #0
   1ae88:	str	r0, [fp, #-44]	; 0xffffffd4
   1ae8c:	ldr	r0, [r6, #340]	; 0x154
   1ae90:	cmp	r5, r0
   1ae94:	cmplt	r7, r0
   1ae98:	bge	1b1a8 <sav_process_row+0x398>
   1ae9c:	cmp	r4, #31
   1aea0:	bgt	1b1cc <sav_process_row+0x3bc>
   1aea4:	ldr	r0, [r6, #44]	; 0x2c
   1aea8:	mov	lr, r6
   1aeac:	and	r9, sl, #64512	; 0xfc00
   1aeb0:	bfc	sl, #0, #16
   1aeb4:	orr	r3, sl, r9
   1aeb8:	ldr	r2, [r0, r7, lsl #2]
   1aebc:	ldr	r6, [r2]
   1aec0:	cmp	r6, #5
   1aec4:	beq	1af00 <sav_process_row+0xf0>
   1aec8:	cmp	r6, #0
   1aecc:	bne	1af30 <sav_process_row+0x120>
   1aed0:	ldr	sl, [r0, r5, lsl #2]
   1aed4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aed8:	str	r3, [sp, #48]	; 0x30
   1aedc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1aee0:	str	r2, [fp, #-36]	; 0xffffffdc
   1aee4:	str	r6, [fp, #-40]	; 0xffffffd8
   1aee8:	ldr	r2, [r0, #380]	; 0x17c
   1aeec:	add	lr, r3, #8
   1aef0:	cmp	lr, r2
   1aef4:	bls	1af3c <sav_process_row+0x12c>
   1aef8:	mov	lr, r3
   1aefc:	b	1af5c <sav_process_row+0x14c>
   1af00:	str	r2, [fp, #-36]	; 0xffffffdc
   1af04:	ldr	r0, [r2, #8]
   1af08:	ldr	r2, [lr, #52]	; 0x34
   1af0c:	str	r6, [fp, #-40]	; 0xffffffd8
   1af10:	mov	r6, lr
   1af14:	ldr	r0, [r2, r0, lsl #2]
   1af18:	ldr	r0, [r0, #2144]	; 0x860
   1af1c:	cmp	r0, #0
   1af20:	beq	1b064 <sav_process_row+0x254>
   1af24:	ldr	r9, [fp, #-36]	; 0xffffffdc
   1af28:	mov	sl, r3
   1af2c:	b	1b190 <sav_process_row+0x380>
   1af30:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1af34:	mov	sl, r3
   1af38:	b	1b19c <sav_process_row+0x38c>
   1af3c:	ldr	r6, [sp, #44]	; 0x2c
   1af40:	mov	r9, ip
   1af44:	ldr	r2, [r6, r8]!
   1af48:	ldr	ip, [r6, #4]
   1af4c:	ldr	r6, [r0, #376]	; 0x178
   1af50:	str	r2, [r6, r3]!
   1af54:	str	ip, [r6, #4]
   1af58:	mov	ip, r9
   1af5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1af60:	ldr	r0, [sl, #16]
   1af64:	add	r4, r4, #1
   1af68:	mov	r9, r2
   1af6c:	cmp	r4, r0
   1af70:	bne	1afa4 <sav_process_row+0x194>
   1af74:	ldr	r0, [r9, #48]!	; 0x30
   1af78:	add	ip, ip, #1
   1af7c:	add	r5, r5, #1
   1af80:	mov	r4, #0
   1af84:	cmp	ip, r0
   1af88:	sublt	lr, lr, #1
   1af8c:	cmp	ip, r0
   1af90:	beq	1afb0 <sav_process_row+0x1a0>
   1af94:	ldr	sl, [sp, #48]	; 0x30
   1af98:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1af9c:	str	lr, [fp, #-44]	; 0xffffffd4
   1afa0:	b	1b19c <sav_process_row+0x38c>
   1afa4:	ldr	r0, [r9, #48]!	; 0x30
   1afa8:	cmp	ip, r0
   1afac:	bne	1af94 <sav_process_row+0x184>
   1afb0:	ldr	r6, [r2, #8]
   1afb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1afb8:	ldr	r2, [r2, #52]	; 0x34
   1afbc:	ldr	r2, [r2, r6, lsl #2]
   1afc0:	ldr	r2, [r2, #2144]	; 0x860
   1afc4:	cmp	r2, #0
   1afc8:	bne	1b048 <sav_process_row+0x238>
   1afcc:	mov	r6, r7
   1afd0:	ldr	r7, [fp, #-32]	; 0xffffffe0
   1afd4:	mov	r3, lr
   1afd8:	ldr	ip, [r7, #336]	; 0x150
   1afdc:	ldr	r2, [r7, #376]	; 0x178
   1afe0:	ldr	r0, [r7, #384]	; 0x180
   1afe4:	ldr	r1, [r7, #388]	; 0x184
   1afe8:	str	ip, [sp]
   1afec:	bl	4b94 <readstat_convert@plt>
   1aff0:	cmp	r0, #0
   1aff4:	bne	1b1dc <sav_process_row+0x3cc>
   1aff8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1affc:	ldr	r2, [r7, #52]	; 0x34
   1b000:	ldr	ip, [r7, #16]
   1b004:	ldr	r3, [r7, #40]	; 0x28
   1b008:	ldr	r1, [r0, #8]
   1b00c:	ldr	r0, [r7, #364]	; 0x16c
   1b010:	ldr	r1, [r2, r1, lsl #2]
   1b014:	ldr	r2, [r7, #384]	; 0x180
   1b018:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1b01c:	str	r3, [sp, #8]
   1b020:	mov	r3, #0
   1b024:	str	r7, [sp]
   1b028:	ldr	r7, [sp, #48]	; 0x30
   1b02c:	str	r7, [sp, #4]
   1b030:	blx	ip
   1b034:	cmp	r0, #0
   1b038:	bne	1b1d8 <sav_process_row+0x3c8>
   1b03c:	ldr	r0, [r9]
   1b040:	ldr	r1, [sp, #40]	; 0x28
   1b044:	mov	r7, r6
   1b048:	ldr	sl, [sp, #48]	; 0x30
   1b04c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b050:	add	r7, r0, r7
   1b054:	mov	r0, #0
   1b058:	mov	ip, #0
   1b05c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b060:	b	1b19c <sav_process_row+0x38c>
   1b064:	ldr	r0, [sp, #44]	; 0x2c
   1b068:	str	ip, [sp, #36]	; 0x24
   1b06c:	str	r4, [sp, #32]
   1b070:	str	r7, [sp, #28]
   1b074:	add	r0, r0, r8
   1b078:	vld1.8	{d0}, [r0]
   1b07c:	ldrb	r0, [r6, #436]	; 0x1b4
   1b080:	tst	r0, #1
   1b084:	beq	1b094 <sav_process_row+0x284>
   1b088:	mov	r4, r3
   1b08c:	bl	4e40 <byteswap_double@plt>
   1b090:	mov	r3, r4
   1b094:	ldr	r0, [sp, #16]
   1b098:	vmov	r7, r4, d0
   1b09c:	ldrd	r0, [r0]
   1b0a0:	eor	r1, r1, r4
   1b0a4:	eor	r0, r0, r7
   1b0a8:	orrs	r0, r0, r1
   1b0ac:	andeq	r0, r9, #65024	; 0xfe00
   1b0b0:	orreq	r0, sl, r0
   1b0b4:	orreq	r3, r0, #256	; 0x100
   1b0b8:	ldr	r0, [sp, #20]
   1b0bc:	ldrd	r0, [r0]
   1b0c0:	eor	r1, r1, r4
   1b0c4:	eor	r0, r0, r7
   1b0c8:	orrs	r0, r0, r1
   1b0cc:	bne	1b0e4 <sav_process_row+0x2d4>
   1b0d0:	mov	r0, #1
   1b0d4:	bic	r1, r3, #65280	; 0xff00
   1b0d8:	orr	r0, r0, r3, lsr #8
   1b0dc:	uxtb	r0, r0
   1b0e0:	orr	r3, r1, r0, lsl #8
   1b0e4:	ldr	r0, [sp, #24]
   1b0e8:	ldrd	r0, [r0]
   1b0ec:	eor	r1, r1, r4
   1b0f0:	eor	r0, r0, r7
   1b0f4:	orrs	r0, r0, r1
   1b0f8:	bne	1b114 <sav_process_row+0x304>
   1b0fc:	mov	r0, #1
   1b100:	bic	r1, r3, #65280	; 0xff00
   1b104:	orr	r0, r0, r3, lsr #8
   1b108:	uxtb	r0, r0
   1b10c:	orr	r6, r1, r0, lsl #8
   1b110:	b	1b118 <sav_process_row+0x308>
   1b114:	mov	r6, r3
   1b118:	bl	4c84 <__isnan@plt>
   1b11c:	cmp	r0, #0
   1b120:	beq	1b13c <sav_process_row+0x32c>
   1b124:	mov	r0, #1
   1b128:	bic	r1, r6, #65280	; 0xff00
   1b12c:	orr	r0, r0, r6, lsr #8
   1b130:	uxtb	r0, r0
   1b134:	orr	sl, r1, r0, lsl #8
   1b138:	b	1b140 <sav_process_row+0x330>
   1b13c:	mov	sl, r6
   1b140:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b144:	ldr	r9, [fp, #-36]	; 0xffffffdc
   1b148:	ldr	r1, [r9, #8]
   1b14c:	ldr	r3, [r6, #52]	; 0x34
   1b150:	ldr	r2, [r6, #40]	; 0x28
   1b154:	ldr	ip, [r6, #16]
   1b158:	ldr	r0, [r6, #364]	; 0x16c
   1b15c:	ldr	r1, [r3, r1, lsl #2]
   1b160:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b164:	stm	sp, {r3, sl}
   1b168:	str	r2, [sp, #8]
   1b16c:	mov	r2, r7
   1b170:	mov	r3, r4
   1b174:	blx	ip
   1b178:	ldr	r1, [sp, #40]	; 0x28
   1b17c:	ldr	r7, [sp, #28]
   1b180:	ldr	r4, [sp, #32]
   1b184:	ldr	ip, [sp, #36]	; 0x24
   1b188:	cmp	r0, #0
   1b18c:	bne	1b1d8 <sav_process_row+0x3c8>
   1b190:	ldr	r0, [r9, #48]	; 0x30
   1b194:	add	r5, r5, #1
   1b198:	add	r7, r0, r7
   1b19c:	add	r8, r8, #8
   1b1a0:	cmp	r8, r1
   1b1a4:	bcc	1ae8c <sav_process_row+0x7c>
   1b1a8:	ldr	r1, [sp, #12]
   1b1ac:	b	1b1b4 <sav_process_row+0x3a4>
   1b1b0:	add	r1, r6, #364	; 0x16c
   1b1b4:	ldr	r0, [r1]
   1b1b8:	add	r0, r0, #1
   1b1bc:	str	r0, [r1]
   1b1c0:	mov	r0, #0
   1b1c4:	sub	sp, fp, #28
   1b1c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1cc:	mov	r0, #5
   1b1d0:	sub	sp, fp, #28
   1b1d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1d8:	mov	r0, #4
   1b1dc:	sub	sp, fp, #28
   1b1e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0001b1f0 <readstat_begin_writing_sav>:
   1b1f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b1f4:	add	fp, sp, #24
   1b1f8:	ldr	ip, [pc, #288]	; 1b320 <readstat_begin_writing_sav+0x130>
   1b1fc:	ldr	r3, [pc, #288]	; 1b324 <readstat_begin_writing_sav+0x134>
   1b200:	add	r3, pc, r3
   1b204:	add	ip, pc, ip
   1b208:	str	r3, [r0, #292]	; 0x124
   1b20c:	ldr	r3, [pc, #276]	; 1b328 <readstat_begin_writing_sav+0x138>
   1b210:	ldr	lr, [pc, #276]	; 1b32c <readstat_begin_writing_sav+0x13c>
   1b214:	ldr	r4, [pc, #276]	; 1b330 <readstat_begin_writing_sav+0x140>
   1b218:	ldr	r5, [pc, #276]	; 1b334 <readstat_begin_writing_sav+0x144>
   1b21c:	ldr	r6, [pc, #276]	; 1b338 <readstat_begin_writing_sav+0x148>
   1b220:	ldr	r7, [pc, #276]	; 1b33c <readstat_begin_writing_sav+0x14c>
   1b224:	ldr	r8, [pc, #276]	; 1b340 <readstat_begin_writing_sav+0x150>
   1b228:	str	ip, [r0, #228]	; 0xe4
   1b22c:	add	r3, pc, r3
   1b230:	add	lr, pc, lr
   1b234:	add	r4, pc, r4
   1b238:	add	r5, pc, r5
   1b23c:	add	r6, pc, r6
   1b240:	add	r7, pc, r7
   1b244:	add	r8, pc, r8
   1b248:	str	r3, [r0, #232]	; 0xe8
   1b24c:	add	r3, r0, #240	; 0xf0
   1b250:	str	lr, [r0, #236]	; 0xec
   1b254:	stm	r3, {r4, r5, r6, r7, r8}
   1b258:	ldr	r3, [pc, #228]	; 1b344 <readstat_begin_writing_sav+0x154>
   1b25c:	ldr	r7, [pc, #228]	; 1b348 <readstat_begin_writing_sav+0x158>
   1b260:	add	r3, pc, r3
   1b264:	add	r7, pc, r7
   1b268:	str	r3, [r0, #264]	; 0x108
   1b26c:	str	r7, [r0, #268]	; 0x10c
   1b270:	ldr	r3, [pc, #212]	; 1b34c <readstat_begin_writing_sav+0x15c>
   1b274:	add	r3, pc, r3
   1b278:	str	r3, [r0, #276]	; 0x114
   1b27c:	ldr	r3, [r0, #8]
   1b280:	cmp	r3, #0
   1b284:	beq	1b29c <readstat_begin_writing_sav+0xac>
   1b288:	cmp	r3, #3
   1b28c:	bne	1b310 <readstat_begin_writing_sav+0x120>
   1b290:	mov	r3, #2
   1b294:	str	r3, [r0, #16]
   1b298:	b	1b2e4 <readstat_begin_writing_sav+0xf4>
   1b29c:	ldr	r3, [r0, #16]
   1b2a0:	mov	r7, #2
   1b2a4:	cmp	r3, #2
   1b2a8:	movweq	r7, #3
   1b2ac:	str	r7, [r0, #8]
   1b2b0:	cmp	r3, #0
   1b2b4:	beq	1b308 <readstat_begin_writing_sav+0x118>
   1b2b8:	cmp	r3, #2
   1b2bc:	beq	1b2e4 <readstat_begin_writing_sav+0xf4>
   1b2c0:	cmp	r3, #1
   1b2c4:	movne	r0, #6
   1b2c8:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b2cc:	ldr	r3, [pc, #124]	; 1b350 <readstat_begin_writing_sav+0x160>
   1b2d0:	add	r3, pc, r3
   1b2d4:	str	r3, [r0, #280]	; 0x118
   1b2d8:	ldr	r3, [pc, #116]	; 1b354 <readstat_begin_writing_sav+0x164>
   1b2dc:	ldr	r3, [pc, r3]
   1b2e0:	b	1b304 <readstat_begin_writing_sav+0x114>
   1b2e4:	ldr	r3, [pc, #108]	; 1b358 <readstat_begin_writing_sav+0x168>
   1b2e8:	ldr	r3, [pc, r3]
   1b2ec:	ldr	r7, [pc, #104]	; 1b35c <readstat_begin_writing_sav+0x16c>
   1b2f0:	ldr	r7, [pc, r7]
   1b2f4:	str	r7, [r0, #280]	; 0x118
   1b2f8:	str	r3, [r0, #284]	; 0x11c
   1b2fc:	ldr	r3, [pc, #92]	; 1b360 <readstat_begin_writing_sav+0x170>
   1b300:	ldr	r3, [pc, r3]
   1b304:	str	r3, [r0, #288]	; 0x120
   1b308:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b30c:	b	48f4 <readstat_begin_writing_file@plt>
   1b310:	ldr	r3, [r0, #16]
   1b314:	cmp	r3, #0
   1b318:	bne	1b2b8 <readstat_begin_writing_sav+0xc8>
   1b31c:	b	1b308 <readstat_begin_writing_sav+0x118>
   1b320:	.word	0x00000180
   1b324:	.word	0x0000015c
   1b328:	.word	0x000001b4
   1b32c:	.word	0x0000047c
   1b330:	.word	0x0000048c
   1b334:	.word	0x0000049c
   1b338:	.word	0x000004ac
   1b33c:	.word	0x000004b8
   1b340:	.word	0x000004c0
   1b344:	.word	0x0000053c
   1b348:	.word	0x00000554
   1b34c:	.word	0x00000564
   1b350:	.word	0x0000271c
   1b354:	.word	0x0002dfbc
   1b358:	.word	0x0002dfc4
   1b35c:	.word	0x0002dfb4
   1b360:	.word	0x0002df94

0001b364 <sav_metadata_ok>:
   1b364:	ldr	r1, [r0, #8]
   1b368:	cmp	r1, #2
   1b36c:	ldreq	r0, [r0, #16]
   1b370:	cmpeq	r0, #2
   1b374:	moveq	r0, #6
   1b378:	bxeq	lr
   1b37c:	bic	r0, r1, #1
   1b380:	subs	r0, r0, #2
   1b384:	movwne	r0, #24
   1b388:	bx	lr

0001b38c <sav_variable_width>:
   1b38c:	mov	r2, r0
   1b390:	mov	r0, #8
   1b394:	cmp	r2, #0
   1b398:	bxne	lr
   1b39c:	cmp	r1, #256	; 0x100
   1b3a0:	bcc	1b3d8 <sav_variable_width+0x4c>
   1b3a4:	add	r0, r1, #251	; 0xfb
   1b3a8:	movw	r2, #2081	; 0x821
   1b3ac:	lsr	r0, r0, #2
   1b3b0:	movt	r2, #8322	; 0x2082
   1b3b4:	umull	r0, r2, r0, r2
   1b3b8:	mvn	r0, #0
   1b3bc:	add	r0, r0, r2, lsr #3
   1b3c0:	sub	r2, r0, r0, lsl #6
   1b3c4:	add	r1, r1, r2, lsl #2
   1b3c8:	add	r1, r1, #7
   1b3cc:	bic	r1, r1, #7
   1b3d0:	add	r0, r1, r0, lsl #8
   1b3d4:	bx	lr
   1b3d8:	cmp	r1, #0
   1b3dc:	addne	r0, r1, #7
   1b3e0:	bicne	r0, r0, #7
   1b3e4:	bx	lr

0001b3e8 <sav_variable_ok>:
   1b3e8:	push	{r4, r5, fp, lr}
   1b3ec:	add	fp, sp, #8
   1b3f0:	add	r5, r0, #8
   1b3f4:	mov	r0, r5
   1b3f8:	bl	4b58 <strlen@plt>
   1b3fc:	mov	r4, #0
   1b400:	cmp	r0, #0
   1b404:	movweq	r4, #38	; 0x26
   1b408:	cmp	r0, #64	; 0x40
   1b40c:	movwhi	r4, #28
   1b410:	cmp	r4, #0
   1b414:	beq	1b420 <sav_variable_ok+0x38>
   1b418:	mov	r0, r4
   1b41c:	pop	{r4, r5, fp, pc}
   1b420:	ldr	r1, [pc, #600]	; 1b680 <sav_variable_ok+0x298>
   1b424:	mov	r0, r5
   1b428:	add	r1, pc, r1
   1b42c:	bl	47b0 <strcmp@plt>
   1b430:	mov	r4, #27
   1b434:	cmp	r0, #0
   1b438:	beq	1b418 <sav_variable_ok+0x30>
   1b43c:	ldr	r1, [pc, #576]	; 1b684 <sav_variable_ok+0x29c>
   1b440:	mov	r0, r5
   1b444:	add	r1, pc, r1
   1b448:	bl	47b0 <strcmp@plt>
   1b44c:	cmp	r0, #0
   1b450:	beq	1b418 <sav_variable_ok+0x30>
   1b454:	ldr	r1, [pc, #556]	; 1b688 <sav_variable_ok+0x2a0>
   1b458:	mov	r0, r5
   1b45c:	add	r1, pc, r1
   1b460:	bl	47b0 <strcmp@plt>
   1b464:	cmp	r0, #0
   1b468:	beq	1b418 <sav_variable_ok+0x30>
   1b46c:	ldr	r1, [pc, #536]	; 1b68c <sav_variable_ok+0x2a4>
   1b470:	mov	r0, r5
   1b474:	add	r1, pc, r1
   1b478:	bl	47b0 <strcmp@plt>
   1b47c:	cmp	r0, #0
   1b480:	beq	1b418 <sav_variable_ok+0x30>
   1b484:	ldr	r1, [pc, #516]	; 1b690 <sav_variable_ok+0x2a8>
   1b488:	mov	r0, r5
   1b48c:	add	r1, pc, r1
   1b490:	bl	47b0 <strcmp@plt>
   1b494:	cmp	r0, #0
   1b498:	beq	1b418 <sav_variable_ok+0x30>
   1b49c:	ldr	r1, [pc, #496]	; 1b694 <sav_variable_ok+0x2ac>
   1b4a0:	mov	r0, r5
   1b4a4:	add	r1, pc, r1
   1b4a8:	bl	47b0 <strcmp@plt>
   1b4ac:	cmp	r0, #0
   1b4b0:	beq	1b418 <sav_variable_ok+0x30>
   1b4b4:	ldr	r1, [pc, #476]	; 1b698 <sav_variable_ok+0x2b0>
   1b4b8:	mov	r0, r5
   1b4bc:	add	r1, pc, r1
   1b4c0:	bl	47b0 <strcmp@plt>
   1b4c4:	cmp	r0, #0
   1b4c8:	beq	1b418 <sav_variable_ok+0x30>
   1b4cc:	ldr	r1, [pc, #456]	; 1b69c <sav_variable_ok+0x2b4>
   1b4d0:	mov	r0, r5
   1b4d4:	add	r1, pc, r1
   1b4d8:	bl	47b0 <strcmp@plt>
   1b4dc:	cmp	r0, #0
   1b4e0:	beq	1b418 <sav_variable_ok+0x30>
   1b4e4:	ldr	r1, [pc, #436]	; 1b6a0 <sav_variable_ok+0x2b8>
   1b4e8:	mov	r0, r5
   1b4ec:	add	r1, pc, r1
   1b4f0:	bl	47b0 <strcmp@plt>
   1b4f4:	cmp	r0, #0
   1b4f8:	beq	1b418 <sav_variable_ok+0x30>
   1b4fc:	ldr	r1, [pc, #416]	; 1b6a4 <sav_variable_ok+0x2bc>
   1b500:	mov	r0, r5
   1b504:	add	r1, pc, r1
   1b508:	bl	47b0 <strcmp@plt>
   1b50c:	cmp	r0, #0
   1b510:	beq	1b418 <sav_variable_ok+0x30>
   1b514:	ldr	r1, [pc, #396]	; 1b6a8 <sav_variable_ok+0x2c0>
   1b518:	mov	r0, r5
   1b51c:	add	r1, pc, r1
   1b520:	bl	47b0 <strcmp@plt>
   1b524:	cmp	r0, #0
   1b528:	beq	1b418 <sav_variable_ok+0x30>
   1b52c:	ldr	r1, [pc, #376]	; 1b6ac <sav_variable_ok+0x2c4>
   1b530:	mov	r0, r5
   1b534:	add	r1, pc, r1
   1b538:	bl	47b0 <strcmp@plt>
   1b53c:	cmp	r0, #0
   1b540:	beq	1b418 <sav_variable_ok+0x30>
   1b544:	ldr	r1, [pc, #356]	; 1b6b0 <sav_variable_ok+0x2c8>
   1b548:	mov	r0, r5
   1b54c:	add	r1, pc, r1
   1b550:	bl	47b0 <strcmp@plt>
   1b554:	cmp	r0, #0
   1b558:	beq	1b418 <sav_variable_ok+0x30>
   1b55c:	mov	r0, r5
   1b560:	mov	r4, #26
   1b564:	b	1b56c <sav_variable_ok+0x184>
   1b568:	add	r0, r0, #1
   1b56c:	ldrb	r1, [r0]
   1b570:	sub	r2, r1, #32
   1b574:	cmp	r2, #32
   1b578:	bhi	1b60c <sav_variable_ok+0x224>
   1b57c:	add	r3, pc, #4
   1b580:	ldr	r2, [r3, r2, lsl #2]
   1b584:	add	pc, r3, r2
   1b588:	.word	0xfffffe90
   1b58c:	.word	0x00000094
   1b590:	.word	0x00000094
   1b594:	.word	0xffffffe0
   1b598:	.word	0xffffffe0
   1b59c:	.word	0x00000094
   1b5a0:	.word	0x00000094
   1b5a4:	.word	0x00000094
   1b5a8:	.word	0x00000094
   1b5ac:	.word	0x00000094
   1b5b0:	.word	0x00000094
   1b5b4:	.word	0x00000094
   1b5b8:	.word	0x00000094
   1b5bc:	.word	0x00000094
   1b5c0:	.word	0xffffffe0
   1b5c4:	.word	0x00000094
   1b5c8:	.word	0x00000094
   1b5cc:	.word	0x00000094
   1b5d0:	.word	0x00000094
   1b5d4:	.word	0x00000094
   1b5d8:	.word	0x00000094
   1b5dc:	.word	0x00000094
   1b5e0:	.word	0x00000094
   1b5e4:	.word	0x00000094
   1b5e8:	.word	0x00000094
   1b5ec:	.word	0x00000094
   1b5f0:	.word	0x00000094
   1b5f4:	.word	0x00000094
   1b5f8:	.word	0x00000094
   1b5fc:	.word	0x00000094
   1b600:	.word	0x00000094
   1b604:	.word	0x00000094
   1b608:	.word	0xffffffe0
   1b60c:	cmp	r1, #95	; 0x5f
   1b610:	beq	1b568 <sav_variable_ok+0x180>
   1b614:	cmp	r1, #0
   1b618:	beq	1b644 <sav_variable_ok+0x25c>
   1b61c:	sub	r2, r1, #48	; 0x30
   1b620:	uxtb	r2, r2
   1b624:	cmp	r2, #10
   1b628:	bcc	1b568 <sav_variable_ok+0x180>
   1b62c:	and	r1, r1, #223	; 0xdf
   1b630:	sub	r1, r1, #65	; 0x41
   1b634:	uxtb	r1, r1
   1b638:	cmp	r1, #25
   1b63c:	bls	1b568 <sav_variable_ok+0x180>
   1b640:	b	1b418 <sav_variable_ok+0x30>
   1b644:	ldrb	r0, [r5]
   1b648:	orr	r1, r0, #64	; 0x40
   1b64c:	cmp	r1, #64	; 0x40
   1b650:	bne	1b660 <sav_variable_ok+0x278>
   1b654:	mov	r4, #0
   1b658:	mov	r0, r4
   1b65c:	pop	{r4, r5, fp, pc}
   1b660:	and	r0, r0, #223	; 0xdf
   1b664:	mov	r4, #25
   1b668:	sub	r0, r0, #65	; 0x41
   1b66c:	uxtb	r0, r0
   1b670:	cmp	r0, #25
   1b674:	movls	r4, #0
   1b678:	mov	r0, r4
   1b67c:	pop	{r4, r5, fp, pc}
   1b680:	.word	0x0000f2a3
   1b684:	.word	0x0000f28b
   1b688:	.word	0x0000f277
   1b68c:	.word	0x0000f262
   1b690:	.word	0x0000f24d
   1b694:	.word	0x0000f238
   1b698:	.word	0x0000f223
   1b69c:	.word	0x0000f20e
   1b6a0:	.word	0x0000f1f9
   1b6a4:	.word	0x0000f1e4
   1b6a8:	.word	0x0000f1d0
   1b6ac:	.word	0x0000f1bb
   1b6b0:	.word	0x0000f1a6

0001b6b4 <sav_write_int8>:
   1b6b4:	vmov	s0, r2
   1b6b8:	vcvt.f64.s32	d16, s0
   1b6bc:	vst1.8	{d16}, [r0]
   1b6c0:	mov	r0, #0
   1b6c4:	bx	lr

0001b6c8 <sav_write_int16>:
   1b6c8:	vmov	s0, r2
   1b6cc:	vcvt.f64.s32	d16, s0
   1b6d0:	vst1.8	{d16}, [r0]
   1b6d4:	mov	r0, #0
   1b6d8:	bx	lr

0001b6dc <sav_write_int32>:
   1b6dc:	vmov	s0, r2
   1b6e0:	vcvt.f64.s32	d16, s0
   1b6e4:	vst1.8	{d16}, [r0]
   1b6e8:	mov	r0, #0
   1b6ec:	bx	lr

0001b6f0 <sav_write_float>:
   1b6f0:	vcvt.f64.f32	d16, s0
   1b6f4:	vst1.8	{d16}, [r0]
   1b6f8:	mov	r0, #0
   1b6fc:	bx	lr

0001b700 <sav_write_double>:
   1b700:	vst1.8	{d0}, [r0]
   1b704:	mov	r0, #0
   1b708:	bx	lr

0001b70c <sav_write_string>:
   1b70c:	push	{r4, r5, r6, r7, fp, lr}
   1b710:	add	fp, sp, #16
   1b714:	mov	r4, r2
   1b718:	ldr	r2, [r1, #1596]	; 0x63c
   1b71c:	mov	r7, r1
   1b720:	mov	r1, #32
   1b724:	mov	r5, r0
   1b728:	bl	4c00 <memset@plt>
   1b72c:	cmp	r4, #0
   1b730:	mov	r0, #0
   1b734:	ldrbne	r1, [r4]
   1b738:	cmpne	r1, #0
   1b73c:	bne	1b744 <sav_write_string+0x38>
   1b740:	pop	{r4, r5, r6, r7, fp, pc}
   1b744:	mov	r0, r4
   1b748:	bl	4b58 <strlen@plt>
   1b74c:	ldr	r1, [r7, #1596]	; 0x63c
   1b750:	mov	r6, r0
   1b754:	mov	r0, #22
   1b758:	cmp	r6, r1
   1b75c:	pophi	{r4, r5, r6, r7, fp, pc}
   1b760:	cmp	r6, #256	; 0x100
   1b764:	bcc	1b78c <sav_write_string+0x80>
   1b768:	mov	r0, r5
   1b76c:	mov	r1, r4
   1b770:	mov	r2, #255	; 0xff
   1b774:	bl	48b8 <memcpy@plt>
   1b778:	sub	r6, r6, #255	; 0xff
   1b77c:	add	r5, r5, #256	; 0x100
   1b780:	add	r4, r4, #255	; 0xff
   1b784:	cmp	r6, #255	; 0xff
   1b788:	bhi	1b768 <sav_write_string+0x5c>
   1b78c:	mov	r0, r5
   1b790:	mov	r1, r4
   1b794:	mov	r2, r6
   1b798:	bl	48b8 <memcpy@plt>
   1b79c:	mov	r0, #0
   1b7a0:	pop	{r4, r5, r6, r7, fp, pc}

0001b7a4 <sav_write_missing_string>:
   1b7a4:	push	{fp, lr}
   1b7a8:	mov	fp, sp
   1b7ac:	ldr	r2, [r1, #1596]	; 0x63c
   1b7b0:	mov	r1, #32
   1b7b4:	bl	4c00 <memset@plt>
   1b7b8:	mov	r0, #0
   1b7bc:	pop	{fp, pc}

0001b7c0 <sav_write_missing_number>:
   1b7c0:	mvn	r1, #1048576	; 0x100000
   1b7c4:	str	r1, [r0, #4]
   1b7c8:	mvn	r1, #0
   1b7cc:	str	r1, [r0]
   1b7d0:	mov	r0, #0
   1b7d4:	bx	lr
   1b7d8:	nop	{0}
   1b7dc:	nop	{0}

0001b7e0 <sav_begin_data>:
   1b7e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7e4:	add	fp, sp, #28
   1b7e8:	sub	sp, sp, #4
   1b7ec:	vpush	{d8-d9}
   1b7f0:	sub	sp, sp, #432	; 0x1b0
   1b7f4:	mov	r8, r0
   1b7f8:	ldr	r0, [r0, #308]	; 0x134
   1b7fc:	cmp	r0, #0
   1b800:	beq	1ba40 <sav_begin_data+0x260>
   1b804:	ldr	r4, [r8, #28]
   1b808:	mov	r1, #15
   1b80c:	mov	r0, r4
   1b810:	bl	472c <calloc@plt>
   1b814:	str	r0, [sp, #56]	; 0x38
   1b818:	mov	r0, r4
   1b81c:	bl	4af8 <ck_hash_table_init@plt>
   1b820:	mov	r4, r0
   1b824:	ldr	r0, [r8, #28]
   1b828:	str	r8, [sp, #60]	; 0x3c
   1b82c:	cmp	r0, #1
   1b830:	blt	1b924 <sav_begin_data+0x144>
   1b834:	ldr	r0, [sp, #56]	; 0x38
   1b838:	mov	r6, #0
   1b83c:	add	sl, r0, #1
   1b840:	mov	r0, r8
   1b844:	mov	r1, r6
   1b848:	bl	4ccc <readstat_get_variable@plt>
   1b84c:	ldr	r1, [sp, #56]	; 0x38
   1b850:	ldr	r2, [pc, #4008]	; 1c800 <sav_begin_data+0x1020>
   1b854:	mov	r9, r0
   1b858:	rsb	r0, r6, r6, lsl #4
   1b85c:	add	r3, r9, #8
   1b860:	add	r5, r1, r0
   1b864:	mov	r1, #9
   1b868:	add	r2, pc, r2
   1b86c:	mov	r0, r5
   1b870:	bl	4bdc <snprintf@plt>
   1b874:	mov	r8, r5
   1b878:	ldrb	r7, [r8], #9
   1b87c:	cmp	r7, #0
   1b880:	beq	1b8ac <sav_begin_data+0xcc>
   1b884:	bl	4aec <__ctype_toupper_loc@plt>
   1b888:	mov	r1, sl
   1b88c:	ldr	r2, [r0]
   1b890:	uxtb	r3, r7
   1b894:	ldr	r2, [r2, r3, lsl #2]
   1b898:	strb	r2, [r1, #-1]
   1b89c:	ldrb	r7, [r1]
   1b8a0:	add	r1, r1, #1
   1b8a4:	cmp	r7, #0
   1b8a8:	bne	1b88c <sav_begin_data+0xac>
   1b8ac:	mov	r0, r5
   1b8b0:	mov	r1, r4
   1b8b4:	bl	4960 <ck_str_hash_lookup@plt>
   1b8b8:	cmp	r0, #0
   1b8bc:	beq	1b8d8 <sav_begin_data+0xf8>
   1b8c0:	ldr	r2, [pc, #3900]	; 1c804 <sav_begin_data+0x1024>
   1b8c4:	add	r3, r6, #1
   1b8c8:	mov	r0, r5
   1b8cc:	mov	r1, #9
   1b8d0:	add	r2, pc, r2
   1b8d4:	bl	4bdc <snprintf@plt>
   1b8d8:	mov	r0, r5
   1b8dc:	mov	r1, r9
   1b8e0:	mov	r2, r4
   1b8e4:	bl	4e28 <ck_str_hash_insert@plt>
   1b8e8:	ldr	r0, [r9, #1600]	; 0x640
   1b8ec:	cmp	r0, #256	; 0x100
   1b8f0:	bcc	1b90c <sav_begin_data+0x12c>
   1b8f4:	ldr	r2, [pc, #3852]	; 1c808 <sav_begin_data+0x1028>
   1b8f8:	mov	r0, r8
   1b8fc:	mov	r1, #6
   1b900:	mov	r3, r5
   1b904:	add	r2, pc, r2
   1b908:	bl	4bdc <snprintf@plt>
   1b90c:	ldr	r8, [sp, #60]	; 0x3c
   1b910:	add	r6, r6, #1
   1b914:	add	sl, sl, #15
   1b918:	ldr	r0, [r8, #28]
   1b91c:	cmp	r6, r0
   1b920:	blt	1b840 <sav_begin_data+0x60>
   1b924:	mov	r0, r4
   1b928:	bl	4ba0 <ck_hash_table_free@plt>
   1b92c:	add	r9, sp, #136	; 0x88
   1b930:	mov	r1, #0
   1b934:	mov	r2, #176	; 0xb0
   1b938:	mov	r5, #0
   1b93c:	mov	r0, r9
   1b940:	bl	4c00 <memset@plt>
   1b944:	ldr	r0, [r8, #20]
   1b948:	str	r0, [fp, #-80]	; 0xffffffb0
   1b94c:	sub	r0, fp, #80	; 0x50
   1b950:	bl	4ac8 <localtime@plt>
   1b954:	mov	r4, r0
   1b958:	ldr	r0, [pc, #4008]	; 1c908 <sav_begin_data+0x1128>
   1b95c:	mov	r2, #32
   1b960:	add	r6, sp, #80	; 0x50
   1b964:	str	r5, [fp, #-68]	; 0xffffffbc
   1b968:	str	r5, [fp, #-72]	; 0xffffffb8
   1b96c:	strh	r5, [fp, #-64]	; 0xffffffc0
   1b970:	str	r5, [sp, #68]	; 0x44
   1b974:	str	r5, [sp, #64]	; 0x40
   1b978:	strb	r5, [sp, #72]	; 0x48
   1b97c:	cmp	r4, #0
   1b980:	add	r0, pc, r0
   1b984:	add	r1, r0, #16
   1b988:	vld1.64	{d16-d17}, [r0], r2
   1b98c:	vld1.64	{d18-d19}, [r1]
   1b990:	add	r1, r6, #16
   1b994:	vld1.64	{d20-d21}, [r0]
   1b998:	mov	r0, r6
   1b99c:	vst1.64	{d16-d17}, [r0], r2
   1b9a0:	vst1.64	{d18-d19}, [r1]
   1b9a4:	vst1.64	{d20-d21}, [r0]
   1b9a8:	beq	1ba48 <sav_begin_data+0x268>
   1b9ac:	movw	r0, #17956	; 0x4624
   1b9b0:	movt	r0, #12876	; 0x324c
   1b9b4:	str	r0, [sp, #136]	; 0x88
   1b9b8:	ldr	r0, [r8, #16]
   1b9bc:	cmp	r0, #2
   1b9c0:	bne	1ba58 <sav_begin_data+0x278>
   1b9c4:	ldr	r1, [pc, #3904]	; 1c90c <sav_begin_data+0x112c>
   1b9c8:	mov	r0, #43	; 0x2b
   1b9cc:	mov	r6, #59	; 0x3b
   1b9d0:	mov	r7, #32
   1b9d4:	add	r1, pc, r1
   1b9d8:	mov	r2, r1
   1b9dc:	add	r3, r1, #32
   1b9e0:	add	r1, r1, #16
   1b9e4:	vld1.32	{d16-d17}, [r2], r0
   1b9e8:	orr	r0, r9, #4
   1b9ec:	vld1.64	{d18-d19}, [r3]
   1b9f0:	vst1.32	{d16-d17}, [r0], r6
   1b9f4:	vld1.64	{d16-d17}, [r1]
   1b9f8:	vld1.8	{d20-d21}, [r2]
   1b9fc:	mov	r1, #2
   1ba00:	add	r6, sp, #80	; 0x50
   1ba04:	strb	r7, [r0]
   1ba08:	add	r0, r9, #36	; 0x24
   1ba0c:	vst1.32	{d18-d19}, [r0]
   1ba10:	add	r0, r9, #20
   1ba14:	vst1.32	{d16-d17}, [r0]
   1ba18:	add	r0, r9, #47	; 0x2f
   1ba1c:	vst1.8	{d20-d21}, [r0]
   1ba20:	mov	r0, #51	; 0x33
   1ba24:	strb	r0, [sp, #139]	; 0x8b
   1ba28:	str	r1, [sp, #200]	; 0xc8
   1ba2c:	ldr	r0, [r8, #76]	; 0x4c
   1ba30:	lsr	r0, r0, #3
   1ba34:	str	r0, [sp, #204]	; 0xcc
   1ba38:	str	r1, [sp, #208]	; 0xd0
   1ba3c:	b	1bac8 <sav_begin_data+0x2e8>
   1ba40:	mov	sl, #14
   1ba44:	b	1cafc <sav_begin_data+0x131c>
   1ba48:	mov	sl, #39	; 0x27
   1ba4c:	cmp	sl, #0
   1ba50:	bne	1caf4 <sav_begin_data+0x1314>
   1ba54:	b	1bc1c <sav_begin_data+0x43c>
   1ba58:	ldr	r1, [pc, #3760]	; 1c910 <sav_begin_data+0x1130>
   1ba5c:	mov	r3, #43	; 0x2b
   1ba60:	cmp	r0, #1
   1ba64:	add	r1, pc, r1
   1ba68:	add	r2, r1, #32
   1ba6c:	add	r7, r1, #16
   1ba70:	vld1.32	{d18-d19}, [r1], r3
   1ba74:	vld1.64	{d16-d17}, [r2]
   1ba78:	vld1.64	{d20-d21}, [r7]
   1ba7c:	add	r2, r9, #36	; 0x24
   1ba80:	vld1.8	{d22-d23}, [r1]
   1ba84:	add	r1, r9, #20
   1ba88:	vst1.32	{d16-d17}, [r2]
   1ba8c:	vst1.32	{d20-d21}, [r1]
   1ba90:	orr	r1, r9, #4
   1ba94:	mov	r2, #59	; 0x3b
   1ba98:	vst1.32	{d18-d19}, [r1], r2
   1ba9c:	mov	r2, #32
   1baa0:	strb	r2, [r1]
   1baa4:	add	r1, r9, #47	; 0x2f
   1baa8:	vst1.8	{d22-d23}, [r1]
   1baac:	mov	r1, #2
   1bab0:	str	r1, [sp, #200]	; 0xc8
   1bab4:	ldr	r1, [r8, #76]	; 0x4c
   1bab8:	lsr	r1, r1, #3
   1babc:	str	r1, [sp, #204]	; 0xcc
   1bac0:	mov	r1, #1
   1bac4:	streq	r1, [sp, #208]	; 0xd0
   1bac8:	ldr	r1, [r8, #224]	; 0xe0
   1bacc:	mov	r2, #0
   1bad0:	mov	r0, #0
   1bad4:	movw	r5, #34079	; 0x851f
   1bad8:	movt	r5, #20971	; 0x51eb
   1badc:	cmp	r1, #0
   1bae0:	ldrne	r1, [r1, #1592]	; 0x638
   1bae4:	asrne	r2, r1, #31
   1bae8:	addne	r1, r1, r2, lsr #29
   1baec:	movne	r2, #1
   1baf0:	addne	r2, r2, r1, asr #3
   1baf4:	str	r2, [sp, #212]	; 0xd4
   1baf8:	movw	r2, #0
   1bafc:	ldr	r1, [r8, #80]	; 0x50
   1bb00:	movt	r2, #16473	; 0x4059
   1bb04:	str	r0, [sp, #220]	; 0xdc
   1bb08:	str	r2, [sp, #224]	; 0xe0
   1bb0c:	add	r2, r4, #12
   1bb10:	str	r1, [sp, #216]	; 0xd8
   1bb14:	ldm	r2, {r0, r1, r2}
   1bb18:	umull	r3, r7, r2, r5
   1bb1c:	add	r1, r6, r1, lsl #2
   1bb20:	mov	r6, #100	; 0x64
   1bb24:	lsr	r3, r7, #5
   1bb28:	mls	r2, r3, r6, r2
   1bb2c:	stm	sp, {r1, r2}
   1bb30:	umull	r1, r2, r0, r5
   1bb34:	lsr	r1, r2, #5
   1bb38:	ldr	r2, [pc, #4048]	; 1cb10 <sav_begin_data+0x1330>
   1bb3c:	mls	r3, r1, r6, r0
   1bb40:	sub	r0, fp, #72	; 0x48
   1bb44:	mov	r1, #10
   1bb48:	add	r2, pc, r2
   1bb4c:	bl	4bdc <snprintf@plt>
   1bb50:	vldr	d16, [fp, #-72]	; 0xffffffb8
   1bb54:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   1bb58:	strb	r0, [sp, #236]	; 0xec
   1bb5c:	vstr	d16, [sp, #228]	; 0xe4
   1bb60:	ldm	r4, {r0, r1, r2}
   1bb64:	umull	r3, r7, r0, r5
   1bb68:	lsr	r3, r7, #5
   1bb6c:	mls	r0, r3, r6, r0
   1bb70:	umull	r3, r7, r1, r5
   1bb74:	lsr	r3, r7, #5
   1bb78:	str	r0, [sp, #4]
   1bb7c:	mls	r1, r3, r6, r1
   1bb80:	str	r1, [sp]
   1bb84:	umull	r0, r1, r2, r5
   1bb88:	lsr	r0, r1, #5
   1bb8c:	mov	r1, #9
   1bb90:	mls	r3, r0, r6, r2
   1bb94:	ldr	r2, [pc, #3960]	; 1cb14 <sav_begin_data+0x1334>
   1bb98:	add	r0, sp, #64	; 0x40
   1bb9c:	add	r2, pc, r2
   1bba0:	bl	4bdc <snprintf@plt>
   1bba4:	ldr	r0, [sp, #64]	; 0x40
   1bba8:	ldr	r1, [sp, #68]	; 0x44
   1bbac:	add	r4, r9, #109	; 0x6d
   1bbb0:	mov	r2, #64	; 0x40
   1bbb4:	mov	r5, #64	; 0x40
   1bbb8:	str	r1, [sp, #241]	; 0xf1
   1bbbc:	str	r0, [sp, #237]	; 0xed
   1bbc0:	mov	r0, r4
   1bbc4:	mov	r1, #32
   1bbc8:	bl	4c00 <memset@plt>
   1bbcc:	add	r6, r8, #88	; 0x58
   1bbd0:	mov	r0, r6
   1bbd4:	bl	4b58 <strlen@plt>
   1bbd8:	ldrb	r1, [r8, #88]	; 0x58
   1bbdc:	cmp	r1, #0
   1bbe0:	beq	1bbfc <sav_begin_data+0x41c>
   1bbe4:	cmp	r0, #64	; 0x40
   1bbe8:	mov	r1, r6
   1bbec:	movcc	r5, r0
   1bbf0:	mov	r0, r4
   1bbf4:	mov	r2, r5
   1bbf8:	bl	48b8 <memcpy@plt>
   1bbfc:	add	r1, sp, #136	; 0x88
   1bc00:	mov	r0, r8
   1bc04:	mov	r2, #176	; 0xb0
   1bc08:	bl	4d98 <readstat_write_bytes@plt>
   1bc0c:	mov	sl, r0
   1bc10:	add	r6, sp, #80	; 0x50
   1bc14:	cmp	sl, #0
   1bc18:	bne	1caf4 <sav_begin_data+0x1314>
   1bc1c:	ldr	r0, [r8, #28]
   1bc20:	cmp	r0, #1
   1bc24:	blt	1c6c8 <sav_begin_data+0xee8>
   1bc28:	sub	r0, fp, #72	; 0x48
   1bc2c:	mov	r5, #2
   1bc30:	vmov.i32	q4, #0	; 0x00000000
   1bc34:	mov	r4, #0
   1bc38:	add	r0, r0, #8
   1bc3c:	str	r0, [sp, #48]	; 0x30
   1bc40:	add	r0, sp, #136	; 0x88
   1bc44:	add	r1, r0, #8
   1bc48:	str	r1, [sp, #32]
   1bc4c:	add	r1, r0, #4
   1bc50:	add	r0, r0, #20
   1bc54:	str	r0, [sp, #28]
   1bc58:	add	r0, r6, #20
   1bc5c:	str	r1, [sp, #12]
   1bc60:	str	r0, [sp, #16]
   1bc64:	mov	r0, r8
   1bc68:	mov	r1, r4
   1bc6c:	bl	4ccc <readstat_get_variable@plt>
   1bc70:	str	r5, [sp, #132]	; 0x84
   1bc74:	str	r4, [sp, #20]
   1bc78:	ldr	r1, [sp, #56]	; 0x38
   1bc7c:	mov	r7, r0
   1bc80:	rsb	r0, r4, r4, lsl #4
   1bc84:	add	r4, sp, #64	; 0x40
   1bc88:	ldr	r2, [pc, #3984]	; 1cc20 <sav_begin_data+0x1440>
   1bc8c:	add	r3, r1, r0
   1bc90:	mov	r0, r4
   1bc94:	mov	r1, #9
   1bc98:	add	r2, pc, r2
   1bc9c:	str	r3, [sp, #44]	; 0x2c
   1bca0:	bl	4bdc <snprintf@plt>
   1bca4:	mov	r0, r4
   1bca8:	bl	4b58 <strlen@plt>
   1bcac:	mov	r4, r0
   1bcb0:	mov	r0, r8
   1bcb4:	add	r1, sp, #132	; 0x84
   1bcb8:	mov	r2, #4
   1bcbc:	bl	4d98 <readstat_write_bytes@plt>
   1bcc0:	mov	sl, r0
   1bcc4:	cmp	r0, #0
   1bcc8:	str	r7, [sp, #52]	; 0x34
   1bccc:	bne	1bf90 <sav_begin_data+0x7b0>
   1bcd0:	mov	r0, r6
   1bcd4:	mov	r1, #12
   1bcd8:	vst1.64	{d8-d9}, [r0], r1
   1bcdc:	vst1.32	{d8-d9}, [r0]
   1bce0:	ldr	r0, [r7]
   1bce4:	cmp	r0, #0
   1bce8:	beq	1bdd0 <sav_begin_data+0x5f0>
   1bcec:	mov	r5, r7
   1bcf0:	add	r9, sp, #136	; 0x88
   1bcf4:	ldrb	r1, [r5, #564]!	; 0x234
   1bcf8:	cmp	r1, #0
   1bcfc:	movwne	r1, #1
   1bd00:	cmp	r0, #5
   1bd04:	str	r1, [sp, #84]	; 0x54
   1bd08:	bne	1bdf8 <sav_begin_data+0x618>
   1bd0c:	mov	r0, r7
   1bd10:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
   1bd14:	mov	r1, r0
   1bd18:	cmp	r0, #1
   1bd1c:	blt	1bee4 <sav_begin_data+0x704>
   1bd20:	str	r4, [sp, #36]	; 0x24
   1bd24:	str	r5, [sp, #40]	; 0x28
   1bd28:	mov	r6, #0
   1bd2c:	mov	r5, #0
   1bd30:	mov	r4, r1
   1bd34:	mov	sl, r1
   1bd38:	mov	r0, r9
   1bd3c:	mov	r1, r7
   1bd40:	mov	r2, r6
   1bd44:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   1bd48:	sub	r0, fp, #72	; 0x48
   1bd4c:	mov	r1, r7
   1bd50:	mov	r2, r6
   1bd54:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   1bd58:	ldr	r0, [sp, #32]
   1bd5c:	ldr	r1, [sp, #140]	; 0x8c
   1bd60:	ldrd	r2, [r0]
   1bd64:	ldr	r0, [sp, #136]	; 0x88
   1bd68:	bl	4c0c <spss_64bit_value@plt>
   1bd6c:	mov	r8, r0
   1bd70:	ldr	r0, [sp, #48]	; 0x30
   1bd74:	mov	r7, r1
   1bd78:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1bd7c:	ldrd	r2, [r0]
   1bd80:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1bd84:	bl	4c0c <spss_64bit_value@plt>
   1bd88:	eor	r1, r7, r1
   1bd8c:	eor	r0, r8, r0
   1bd90:	ldr	r7, [sp, #52]	; 0x34
   1bd94:	mov	r2, #1
   1bd98:	add	r6, r6, #1
   1bd9c:	orrs	r0, r0, r1
   1bda0:	mov	r1, sl
   1bda4:	movwne	r0, #1
   1bda8:	movne	r5, r2
   1bdac:	cmp	sl, r6
   1bdb0:	add	r4, r4, r0
   1bdb4:	bne	1bd34 <sav_begin_data+0x554>
   1bdb8:	ldr	r8, [sp, #60]	; 0x3c
   1bdbc:	cmp	r5, #0
   1bdc0:	add	r6, sp, #80	; 0x50
   1bdc4:	rsbne	r1, r4, #0
   1bdc8:	moveq	r1, r4
   1bdcc:	b	1bedc <sav_begin_data+0x6fc>
   1bdd0:	ldr	r0, [r7, #1600]	; 0x640
   1bdd4:	mov	r5, r7
   1bdd8:	add	r9, sp, #136	; 0x88
   1bddc:	cmp	r0, #255	; 0xff
   1bde0:	movcs	r0, #255	; 0xff
   1bde4:	str	r0, [sp, #80]	; 0x50
   1bde8:	ldrb	r0, [r5, #564]!	; 0x234
   1bdec:	cmp	r0, #0
   1bdf0:	movwne	r0, #1
   1bdf4:	str	r0, [sp, #84]	; 0x54
   1bdf8:	mov	r0, r7
   1bdfc:	bl	4c24 <readstat_variable_get_storage_width@plt>
   1be00:	mov	r1, #0
   1be04:	cmp	r0, #8
   1be08:	bhi	1befc <sav_begin_data+0x71c>
   1be0c:	mov	r0, r7
   1be10:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
   1be14:	mov	r1, r0
   1be18:	cmp	r0, #1
   1be1c:	blt	1bee4 <sav_begin_data+0x704>
   1be20:	str	r4, [sp, #36]	; 0x24
   1be24:	ldr	r4, [sp, #32]
   1be28:	mov	r7, #0
   1be2c:	mov	r8, r1
   1be30:	mov	r6, #0
   1be34:	str	r5, [sp, #40]	; 0x28
   1be38:	ldr	r5, [sp, #52]	; 0x34
   1be3c:	mov	sl, r1
   1be40:	mov	r0, r9
   1be44:	mov	r2, r6
   1be48:	mov	r1, r5
   1be4c:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   1be50:	sub	r0, fp, #72	; 0x48
   1be54:	mov	r1, r5
   1be58:	mov	r2, r6
   1be5c:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   1be60:	ldrd	r2, [r4]
   1be64:	ldr	r0, [sp, #136]	; 0x88
   1be68:	ldr	r1, [sp, #140]	; 0x8c
   1be6c:	bl	493c <readstat_string_value@plt>
   1be70:	mov	r5, r0
   1be74:	ldr	r0, [sp, #48]	; 0x30
   1be78:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1be7c:	ldrd	r2, [r0]
   1be80:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1be84:	bl	493c <readstat_string_value@plt>
   1be88:	cmp	r5, #0
   1be8c:	movne	r1, r0
   1be90:	cmpne	r0, #0
   1be94:	beq	1beb4 <sav_begin_data+0x6d4>
   1be98:	mov	r0, r5
   1be9c:	bl	47b0 <strcmp@plt>
   1bea0:	cmp	r0, #0
   1bea4:	mov	r1, #1
   1bea8:	movwne	r0, #1
   1beac:	movne	r7, r1
   1beb0:	add	r8, r8, r0
   1beb4:	add	r6, r6, #1
   1beb8:	mov	r1, sl
   1bebc:	cmp	sl, r6
   1bec0:	bne	1be38 <sav_begin_data+0x658>
   1bec4:	cmp	r7, #0
   1bec8:	ldr	r7, [sp, #52]	; 0x34
   1becc:	add	r6, sp, #80	; 0x50
   1bed0:	moveq	r1, r8
   1bed4:	rsbne	r1, r8, #0
   1bed8:	ldr	r8, [sp, #60]	; 0x3c
   1bedc:	ldr	r5, [sp, #40]	; 0x28
   1bee0:	ldr	r4, [sp, #36]	; 0x24
   1bee4:	cmp	r1, #0
   1bee8:	mov	r0, r1
   1beec:	mov	sl, #31
   1bef0:	rsbmi	r0, r1, #0
   1bef4:	cmp	r0, #3
   1bef8:	bgt	1bf90 <sav_begin_data+0x7b0>
   1befc:	str	r1, [sp, #88]	; 0x58
   1bf00:	mov	r0, r7
   1bf04:	add	r1, sp, #136	; 0x88
   1bf08:	bl	4a68 <spss_format_for_variable@plt>
   1bf0c:	cmp	r0, #0
   1bf10:	beq	1bf1c <sav_begin_data+0x73c>
   1bf14:	mov	sl, r0
   1bf18:	b	1bf90 <sav_begin_data+0x7b0>
   1bf1c:	add	r2, sp, #136	; 0x88
   1bf20:	ldm	r2, {r0, r1, r2}
   1bf24:	lsl	r3, r1, #8
   1bf28:	cmp	r1, #255	; 0xff
   1bf2c:	orr	r0, r2, r0, lsl #16
   1bf30:	movw	r1, #8224	; 0x2020
   1bf34:	uxth	r3, r3
   1bf38:	movt	r1, #8224	; 0x2020
   1bf3c:	movwgt	r3, #65280	; 0xff00
   1bf40:	orr	r0, r0, r3
   1bf44:	str	r0, [sp, #92]	; 0x5c
   1bf48:	str	r0, [sp, #96]	; 0x60
   1bf4c:	ldr	r0, [sp, #16]
   1bf50:	str	r1, [r0]
   1bf54:	str	r1, [r0, #4]
   1bf58:	sub	r0, r4, #1
   1bf5c:	cmp	r0, #7
   1bf60:	bhi	1bf74 <sav_begin_data+0x794>
   1bf64:	ldr	r0, [sp, #16]
   1bf68:	add	r1, sp, #64	; 0x40
   1bf6c:	mov	r2, r4
   1bf70:	bl	48b8 <memcpy@plt>
   1bf74:	mov	r0, r8
   1bf78:	mov	r1, r6
   1bf7c:	mov	r2, #28
   1bf80:	bl	4d98 <readstat_write_bytes@plt>
   1bf84:	mov	sl, r0
   1bf88:	cmp	r0, #0
   1bf8c:	beq	1c20c <sav_begin_data+0xa2c>
   1bf90:	cmp	sl, #0
   1bf94:	mov	r5, #2
   1bf98:	bne	1caf4 <sav_begin_data+0x1314>
   1bf9c:	ldr	r0, [r7]
   1bfa0:	cmp	r0, #0
   1bfa4:	bne	1bfbc <sav_begin_data+0x7dc>
   1bfa8:	ldr	r0, [r7, #1600]	; 0x640
   1bfac:	cmp	r0, #256	; 0x100
   1bfb0:	addcs	r0, r0, #251	; 0xfb
   1bfb4:	cmpcs	r0, #504	; 0x1f8
   1bfb8:	bcs	1bfd4 <sav_begin_data+0x7f4>
   1bfbc:	ldr	r4, [sp, #20]
   1bfc0:	ldr	r0, [r8, #28]
   1bfc4:	add	r4, r4, #1
   1bfc8:	cmp	r4, r0
   1bfcc:	blt	1bc64 <sav_begin_data+0x484>
   1bfd0:	b	1c6c8 <sav_begin_data+0xee8>
   1bfd4:	movw	r1, #2081	; 0x821
   1bfd8:	lsr	r0, r0, #2
   1bfdc:	mov	r9, #1
   1bfe0:	movt	r1, #8322	; 0x2082
   1bfe4:	umull	r0, r1, r0, r1
   1bfe8:	ldr	r0, [sp, #44]	; 0x2c
   1bfec:	lsr	r1, r1, #3
   1bff0:	str	r1, [sp, #36]	; 0x24
   1bff4:	add	r0, r0, #9
   1bff8:	str	r0, [sp, #44]	; 0x2c
   1bffc:	sub	r0, r1, #1
   1c000:	str	r0, [sp, #40]	; 0x28
   1c004:	sub	r0, r0, r0, lsl #6
   1c008:	lsl	r0, r0, #2
   1c00c:	str	r0, [sp, #24]
   1c010:	ldr	r0, [sp, #40]	; 0x28
   1c014:	mov	r8, #255	; 0xff
   1c018:	cmp	r9, r0
   1c01c:	ldreq	r0, [r7, #1600]	; 0x640
   1c020:	ldreq	r1, [sp, #24]
   1c024:	str	r5, [fp, #-80]	; 0xffffffb0
   1c028:	add	r7, sp, #64	; 0x40
   1c02c:	addeq	r8, r0, r1
   1c030:	mov	r1, #12
   1c034:	mov	r0, r7
   1c038:	vst1.64	{d8-d9}, [r6], r1
   1c03c:	mov	r1, #9
   1c040:	vst1.32	{d8-d9}, [r6]
   1c044:	ldr	r2, [pc, #3952]	; 1cfbc <sav_begin_data+0x17dc>
   1c048:	ldr	r3, [sp, #44]	; 0x2c
   1c04c:	add	r2, pc, r2
   1c050:	bl	4bdc <snprintf@plt>
   1c054:	movw	r0, #36409	; 0x8e39
   1c058:	movt	r0, #14563	; 0x38e3
   1c05c:	umull	r0, r1, r9, r0
   1c060:	lsr	r0, r1, #3
   1c064:	mov	r1, #55	; 0x37
   1c068:	add	r0, r0, r0, lsl #3
   1c06c:	sub	r0, r9, r0, lsl #2
   1c070:	cmp	r0, #10
   1c074:	movwcc	r1, #48	; 0x30
   1c078:	add	r4, r1, r0
   1c07c:	mov	r0, r7
   1c080:	bl	4b58 <strlen@plt>
   1c084:	strb	r4, [r7, r0]
   1c088:	mov	r6, r0
   1c08c:	ldr	r0, [sp, #60]	; 0x3c
   1c090:	ldr	r7, [sp, #52]	; 0x34
   1c094:	sub	r1, fp, #80	; 0x50
   1c098:	mov	r2, #4
   1c09c:	bl	4d98 <readstat_write_bytes@plt>
   1c0a0:	mov	sl, r0
   1c0a4:	cmp	r0, #0
   1c0a8:	bne	1c1e8 <sav_begin_data+0xa08>
   1c0ac:	mov	r0, r7
   1c0b0:	add	r1, sp, #136	; 0x88
   1c0b4:	str	r8, [sp, #80]	; 0x50
   1c0b8:	bl	4a68 <spss_format_for_variable@plt>
   1c0bc:	cmp	r0, #0
   1c0c0:	str	r8, [sp, #140]	; 0x8c
   1c0c4:	beq	1c0d0 <sav_begin_data+0x8f0>
   1c0c8:	mov	sl, r0
   1c0cc:	b	1c1e8 <sav_begin_data+0xa08>
   1c0d0:	ldr	r1, [sp, #136]	; 0x88
   1c0d4:	lsl	r0, r8, #8
   1c0d8:	ldr	r2, [sp, #144]	; 0x90
   1c0dc:	cmp	r8, #255	; 0xff
   1c0e0:	uxth	r0, r0
   1c0e4:	movwgt	r0, #65280	; 0xff00
   1c0e8:	cmp	r6, #7
   1c0ec:	orr	r0, r0, r1, lsl #16
   1c0f0:	movw	r1, #8224	; 0x2020
   1c0f4:	orr	r0, r0, r2
   1c0f8:	movt	r1, #8224	; 0x2020
   1c0fc:	str	r0, [sp, #92]	; 0x5c
   1c100:	str	r0, [sp, #96]	; 0x60
   1c104:	ldr	r0, [sp, #16]
   1c108:	str	r1, [r0]
   1c10c:	str	r1, [r0, #4]
   1c110:	bhi	1c124 <sav_begin_data+0x944>
   1c114:	ldr	r0, [sp, #16]
   1c118:	add	r2, r6, #1
   1c11c:	add	r1, sp, #64	; 0x40
   1c120:	bl	48b8 <memcpy@plt>
   1c124:	ldr	r0, [sp, #60]	; 0x3c
   1c128:	add	r1, sp, #80	; 0x50
   1c12c:	mov	r2, #28
   1c130:	bl	4d98 <readstat_write_bytes@plt>
   1c134:	mov	sl, r0
   1c138:	cmp	r0, #0
   1c13c:	bne	1c1e8 <sav_begin_data+0xa08>
   1c140:	str	r5, [fp, #-72]	; 0xffffffb8
   1c144:	add	r0, r8, #7
   1c148:	mov	r1, #0
   1c14c:	ldr	r4, [sp, #60]	; 0x3c
   1c150:	ldr	r5, [sp, #12]
   1c154:	sub	r8, fp, #72	; 0x48
   1c158:	sub	r6, r1, r0, lsr #3
   1c15c:	mvn	r0, #31
   1c160:	cmn	r6, #32
   1c164:	movle	r6, r0
   1c168:	adds	r6, r6, #1
   1c16c:	beq	1c1e0 <sav_begin_data+0xa00>
   1c170:	mov	r0, r4
   1c174:	mov	r1, r8
   1c178:	mov	r2, #4
   1c17c:	bl	4d98 <readstat_write_bytes@plt>
   1c180:	cmp	r0, #0
   1c184:	bne	1c1d8 <sav_begin_data+0x9f8>
   1c188:	mov	r0, #0
   1c18c:	movw	r1, #8224	; 0x2020
   1c190:	mov	r2, #28
   1c194:	str	r0, [r5]
   1c198:	str	r0, [r5, #4]
   1c19c:	ldr	r0, [sp, #28]
   1c1a0:	movt	r1, #8224	; 0x2020
   1c1a4:	str	r1, [r0]
   1c1a8:	str	r1, [r0, #4]
   1c1ac:	movw	r0, #7425	; 0x1d01
   1c1b0:	mvn	r1, #0
   1c1b4:	movt	r0, #1
   1c1b8:	str	r0, [sp, #152]	; 0x98
   1c1bc:	str	r1, [sp, #136]	; 0x88
   1c1c0:	str	r0, [sp, #148]	; 0x94
   1c1c4:	mov	r0, r4
   1c1c8:	add	r1, sp, #136	; 0x88
   1c1cc:	bl	4d98 <readstat_write_bytes@plt>
   1c1d0:	cmp	r0, #0
   1c1d4:	beq	1c168 <sav_begin_data+0x988>
   1c1d8:	mov	sl, r0
   1c1dc:	b	1c1e4 <sav_begin_data+0xa04>
   1c1e0:	mov	sl, #0
   1c1e4:	mov	r5, #2
   1c1e8:	ldr	r8, [sp, #60]	; 0x3c
   1c1ec:	cmp	sl, #0
   1c1f0:	add	r6, sp, #80	; 0x50
   1c1f4:	bne	1caf4 <sav_begin_data+0x1314>
   1c1f8:	ldr	r0, [sp, #36]	; 0x24
   1c1fc:	add	r9, r9, #1
   1c200:	cmp	r9, r0
   1c204:	bcc	1c010 <sav_begin_data+0x830>
   1c208:	b	1bfbc <sav_begin_data+0x7dc>
   1c20c:	mov	r0, r5
   1c210:	bl	4b58 <strlen@plt>
   1c214:	cmp	r0, #0
   1c218:	beq	1c280 <sav_begin_data+0xaa0>
   1c21c:	cmp	r0, #256	; 0x100
   1c220:	sub	r1, fp, #72	; 0x48
   1c224:	mov	r2, #4
   1c228:	movcs	r0, #256	; 0x100
   1c22c:	str	r0, [fp, #-72]	; 0xffffffb8
   1c230:	mov	r0, r8
   1c234:	bl	4d98 <readstat_write_bytes@plt>
   1c238:	cmp	r0, #0
   1c23c:	bne	1bf14 <sav_begin_data+0x734>
   1c240:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c244:	add	r4, sp, #136	; 0x88
   1c248:	mov	r1, r5
   1c24c:	add	r0, r0, #3
   1c250:	bic	r2, r0, #3
   1c254:	mov	r0, r4
   1c258:	bl	4c18 <strncpy@plt>
   1c25c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c260:	mov	r1, r4
   1c264:	add	r0, r0, #3
   1c268:	bic	r2, r0, #3
   1c26c:	mov	r0, r8
   1c270:	bl	4d98 <readstat_write_bytes@plt>
   1c274:	mov	sl, r0
   1c278:	cmp	r0, #0
   1c27c:	bne	1bf90 <sav_begin_data+0x7b0>
   1c280:	ldr	r0, [r7]
   1c284:	cmp	r0, #5
   1c288:	bne	1c3e4 <sav_begin_data+0xc04>
   1c28c:	mov	r0, r7
   1c290:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
   1c294:	cmp	r0, #1
   1c298:	str	r0, [sp, #40]	; 0x28
   1c29c:	blt	1c594 <sav_begin_data+0xdb4>
   1c2a0:	ldr	r9, [sp, #48]	; 0x30
   1c2a4:	ldr	r7, [sp, #32]
   1c2a8:	mov	r4, #0
   1c2ac:	add	sl, sp, #136	; 0x88
   1c2b0:	ldr	r5, [sp, #52]	; 0x34
   1c2b4:	mov	r0, sl
   1c2b8:	mov	r2, r4
   1c2bc:	mov	r1, r5
   1c2c0:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   1c2c4:	sub	r0, fp, #72	; 0x48
   1c2c8:	mov	r1, r5
   1c2cc:	mov	r2, r4
   1c2d0:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   1c2d4:	ldrd	r2, [r7]
   1c2d8:	ldr	r0, [sp, #136]	; 0x88
   1c2dc:	ldr	r1, [sp, #140]	; 0x8c
   1c2e0:	bl	4c0c <spss_64bit_value@plt>
   1c2e4:	mov	r5, r0
   1c2e8:	mov	r6, r1
   1c2ec:	ldrd	r2, [r9]
   1c2f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c2f4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1c2f8:	bl	4c0c <spss_64bit_value@plt>
   1c2fc:	eor	r1, r6, r1
   1c300:	eor	r0, r5, r0
   1c304:	orrs	r0, r0, r1
   1c308:	bne	1c544 <sav_begin_data+0xd64>
   1c30c:	ldr	r0, [sp, #40]	; 0x28
   1c310:	add	r4, r4, #1
   1c314:	cmp	r4, r0
   1c318:	blt	1c2b0 <sav_begin_data+0xad0>
   1c31c:	ldr	r7, [sp, #52]	; 0x34
   1c320:	mov	r9, #0
   1c324:	mov	r4, #0
   1c328:	add	r0, sp, #136	; 0x88
   1c32c:	mov	r1, r7
   1c330:	mov	r2, r4
   1c334:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   1c338:	sub	r0, fp, #72	; 0x48
   1c33c:	mov	r1, r7
   1c340:	mov	r2, r4
   1c344:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   1c348:	ldr	r7, [sp, #32]
   1c34c:	ldr	r0, [sp, #136]	; 0x88
   1c350:	ldr	r1, [sp, #140]	; 0x8c
   1c354:	ldrd	r2, [r7]
   1c358:	bl	4c0c <spss_64bit_value@plt>
   1c35c:	mov	r5, r0
   1c360:	ldr	r0, [sp, #48]	; 0x30
   1c364:	mov	r6, r1
   1c368:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1c36c:	ldrd	r2, [r0]
   1c370:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c374:	bl	4c0c <spss_64bit_value@plt>
   1c378:	eor	r1, r6, r1
   1c37c:	eor	r0, r5, r0
   1c380:	orrs	r0, r0, r1
   1c384:	bne	1c3c8 <sav_begin_data+0xbe8>
   1c388:	ldrd	r2, [r7]
   1c38c:	ldr	r0, [sp, #136]	; 0x88
   1c390:	ldr	r1, [sp, #140]	; 0x8c
   1c394:	bl	4c0c <spss_64bit_value@plt>
   1c398:	str	r1, [fp, #-76]	; 0xffffffb4
   1c39c:	str	r0, [fp, #-80]	; 0xffffffb0
   1c3a0:	mov	r0, r8
   1c3a4:	sub	r1, fp, #80	; 0x50
   1c3a8:	mov	r2, #8
   1c3ac:	bl	4d98 <readstat_write_bytes@plt>
   1c3b0:	mov	sl, r0
   1c3b4:	cmp	r0, #0
   1c3b8:	bne	1c584 <sav_begin_data+0xda4>
   1c3bc:	add	r9, r9, #1
   1c3c0:	cmp	r9, #3
   1c3c4:	beq	1c584 <sav_begin_data+0xda4>
   1c3c8:	ldr	r0, [sp, #40]	; 0x28
   1c3cc:	ldr	r7, [sp, #52]	; 0x34
   1c3d0:	add	r4, r4, #1
   1c3d4:	add	r6, sp, #80	; 0x50
   1c3d8:	cmp	r4, r0
   1c3dc:	blt	1c328 <sav_begin_data+0xb48>
   1c3e0:	b	1c594 <sav_begin_data+0xdb4>
   1c3e4:	mov	r0, r7
   1c3e8:	bl	4c24 <readstat_variable_get_storage_width@plt>
   1c3ec:	cmp	r0, #8
   1c3f0:	bhi	1c594 <sav_begin_data+0xdb4>
   1c3f4:	mov	r0, r7
   1c3f8:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
   1c3fc:	cmp	r0, #1
   1c400:	blt	1c594 <sav_begin_data+0xdb4>
   1c404:	ldr	sl, [sp, #48]	; 0x30
   1c408:	ldr	r7, [sp, #32]
   1c40c:	mov	r9, r0
   1c410:	mov	r4, #0
   1c414:	ldr	r5, [sp, #52]	; 0x34
   1c418:	add	r0, sp, #136	; 0x88
   1c41c:	mov	r2, r4
   1c420:	mov	r1, r5
   1c424:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   1c428:	sub	r0, fp, #72	; 0x48
   1c42c:	mov	r1, r5
   1c430:	mov	r2, r4
   1c434:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   1c438:	ldrd	r2, [r7]
   1c43c:	ldr	r0, [sp, #136]	; 0x88
   1c440:	ldr	r1, [sp, #140]	; 0x8c
   1c444:	bl	493c <readstat_string_value@plt>
   1c448:	mov	r6, r0
   1c44c:	ldrd	r2, [sl]
   1c450:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c454:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1c458:	bl	493c <readstat_string_value@plt>
   1c45c:	cmp	r6, #0
   1c460:	movne	r5, r0
   1c464:	cmpne	r0, #0
   1c468:	beq	1c480 <sav_begin_data+0xca0>
   1c46c:	mov	r0, r6
   1c470:	mov	r1, r5
   1c474:	bl	47b0 <strcmp@plt>
   1c478:	cmp	r0, #0
   1c47c:	bne	1c674 <sav_begin_data+0xe94>
   1c480:	add	r4, r4, #1
   1c484:	cmp	r4, r9
   1c488:	blt	1c414 <sav_begin_data+0xc34>
   1c48c:	ldr	r7, [sp, #52]	; 0x34
   1c490:	mov	r5, #0
   1c494:	mov	r4, #0
   1c498:	add	r0, sp, #136	; 0x88
   1c49c:	mov	r1, r7
   1c4a0:	mov	r2, r4
   1c4a4:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   1c4a8:	sub	r0, fp, #72	; 0x48
   1c4ac:	mov	r1, r7
   1c4b0:	mov	r2, r4
   1c4b4:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   1c4b8:	ldr	r0, [sp, #32]
   1c4bc:	ldr	r1, [sp, #140]	; 0x8c
   1c4c0:	ldrd	r2, [r0]
   1c4c4:	ldr	r0, [sp, #136]	; 0x88
   1c4c8:	bl	493c <readstat_string_value@plt>
   1c4cc:	mov	r6, r0
   1c4d0:	ldr	r0, [sp, #48]	; 0x30
   1c4d4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1c4d8:	ldrd	r2, [r0]
   1c4dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c4e0:	bl	493c <readstat_string_value@plt>
   1c4e4:	cmp	r6, #0
   1c4e8:	movne	r1, r0
   1c4ec:	cmpne	r0, #0
   1c4f0:	bne	1c508 <sav_begin_data+0xd28>
   1c4f4:	add	r4, r4, #1
   1c4f8:	add	r6, sp, #80	; 0x50
   1c4fc:	cmp	r4, r9
   1c500:	blt	1c498 <sav_begin_data+0xcb8>
   1c504:	b	1c594 <sav_begin_data+0xdb4>
   1c508:	mov	r0, r6
   1c50c:	bl	47b0 <strcmp@plt>
   1c510:	cmp	r0, #0
   1c514:	bne	1c4f4 <sav_begin_data+0xd14>
   1c518:	mov	r0, r8
   1c51c:	mov	r1, r6
   1c520:	mov	r2, #8
   1c524:	bl	4e88 <readstat_write_space_padded_string@plt>
   1c528:	mov	sl, r0
   1c52c:	cmp	r0, #0
   1c530:	bne	1c588 <sav_begin_data+0xda8>
   1c534:	add	r5, r5, #1
   1c538:	cmp	r5, #3
   1c53c:	bne	1c4f4 <sav_begin_data+0xd14>
   1c540:	b	1c588 <sav_begin_data+0xda8>
   1c544:	ldrd	r2, [r7]
   1c548:	ldr	r0, [sp, #136]	; 0x88
   1c54c:	ldr	r1, [sp, #140]	; 0x8c
   1c550:	bl	4c0c <spss_64bit_value@plt>
   1c554:	str	r1, [fp, #-76]	; 0xffffffb4
   1c558:	str	r0, [fp, #-80]	; 0xffffffb0
   1c55c:	mov	r0, r8
   1c560:	sub	r1, fp, #80	; 0x50
   1c564:	mov	r2, #8
   1c568:	bl	4d98 <readstat_write_bytes@plt>
   1c56c:	cmp	r0, #0
   1c570:	add	r6, sp, #80	; 0x50
   1c574:	beq	1c634 <sav_begin_data+0xe54>
   1c578:	ldr	r7, [sp, #52]	; 0x34
   1c57c:	mov	sl, r0
   1c580:	b	1bf90 <sav_begin_data+0x7b0>
   1c584:	ldr	r7, [sp, #52]	; 0x34
   1c588:	add	r6, sp, #80	; 0x50
   1c58c:	cmp	sl, #0
   1c590:	bne	1bf90 <sav_begin_data+0x7b0>
   1c594:	ldr	r0, [r7, #1596]	; 0x63c
   1c598:	mov	r1, #2
   1c59c:	str	r1, [fp, #-72]	; 0xffffffb8
   1c5a0:	mov	r1, #0
   1c5a4:	sub	r4, r1, r0, lsr #3
   1c5a8:	mvn	r0, #31
   1c5ac:	cmn	r4, #32
   1c5b0:	movle	r4, r0
   1c5b4:	adds	r4, r4, #1
   1c5b8:	beq	1c62c <sav_begin_data+0xe4c>
   1c5bc:	mov	r0, r8
   1c5c0:	sub	r1, fp, #72	; 0x48
   1c5c4:	mov	r2, #4
   1c5c8:	bl	4d98 <readstat_write_bytes@plt>
   1c5cc:	cmp	r0, #0
   1c5d0:	bne	1bf14 <sav_begin_data+0x734>
   1c5d4:	ldr	r0, [sp, #12]
   1c5d8:	mov	r1, #0
   1c5dc:	mov	r2, #28
   1c5e0:	str	r1, [r0]
   1c5e4:	str	r1, [r0, #4]
   1c5e8:	ldr	r0, [sp, #28]
   1c5ec:	movw	r1, #8224	; 0x2020
   1c5f0:	movt	r1, #8224	; 0x2020
   1c5f4:	str	r1, [r0]
   1c5f8:	str	r1, [r0, #4]
   1c5fc:	movw	r0, #7425	; 0x1d01
   1c600:	mvn	r1, #0
   1c604:	movt	r0, #1
   1c608:	str	r0, [sp, #152]	; 0x98
   1c60c:	str	r1, [sp, #136]	; 0x88
   1c610:	str	r0, [sp, #148]	; 0x94
   1c614:	mov	r0, r8
   1c618:	add	r1, sp, #136	; 0x88
   1c61c:	bl	4d98 <readstat_write_bytes@plt>
   1c620:	cmp	r0, #0
   1c624:	beq	1c5b4 <sav_begin_data+0xdd4>
   1c628:	b	1bf14 <sav_begin_data+0x734>
   1c62c:	mov	sl, #0
   1c630:	b	1bf90 <sav_begin_data+0x7b0>
   1c634:	ldrd	r2, [r9]
   1c638:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c63c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1c640:	bl	4c0c <spss_64bit_value@plt>
   1c644:	str	r1, [fp, #-84]	; 0xffffffac
   1c648:	str	r0, [fp, #-88]	; 0xffffffa8
   1c64c:	mov	r0, r8
   1c650:	sub	r1, fp, #88	; 0x58
   1c654:	mov	r2, #8
   1c658:	bl	4d98 <readstat_write_bytes@plt>
   1c65c:	ldr	r7, [sp, #52]	; 0x34
   1c660:	mov	sl, r0
   1c664:	cmp	r0, #0
   1c668:	bne	1bf90 <sav_begin_data+0x7b0>
   1c66c:	mov	r9, #2
   1c670:	b	1c324 <sav_begin_data+0xb44>
   1c674:	mov	r0, r8
   1c678:	mov	r1, r6
   1c67c:	mov	r2, #8
   1c680:	bl	4e88 <readstat_write_space_padded_string@plt>
   1c684:	cmp	r0, #0
   1c688:	beq	1c69c <sav_begin_data+0xebc>
   1c68c:	ldr	r7, [sp, #52]	; 0x34
   1c690:	mov	sl, r0
   1c694:	add	r6, sp, #80	; 0x50
   1c698:	b	1bf90 <sav_begin_data+0x7b0>
   1c69c:	mov	r0, r8
   1c6a0:	mov	r1, r5
   1c6a4:	mov	r2, #8
   1c6a8:	bl	4e88 <readstat_write_space_padded_string@plt>
   1c6ac:	ldr	r7, [sp, #52]	; 0x34
   1c6b0:	mov	sl, r0
   1c6b4:	cmp	r0, #0
   1c6b8:	add	r6, sp, #80	; 0x50
   1c6bc:	bne	1bf90 <sav_begin_data+0x7b0>
   1c6c0:	mov	r5, #2
   1c6c4:	b	1c494 <sav_begin_data+0xcb4>
   1c6c8:	ldr	r0, [r8, #40]	; 0x28
   1c6cc:	add	r9, sp, #136	; 0x88
   1c6d0:	cmp	r0, #1
   1c6d4:	blt	1c9cc <sav_begin_data+0x11ec>
   1c6d8:	mov	sl, #0
   1c6dc:	mov	r4, #0
   1c6e0:	mov	r0, r8
   1c6e4:	mov	r1, r4
   1c6e8:	bl	4d68 <readstat_get_label_set@plt>
   1c6ec:	mov	r6, r0
   1c6f0:	ldr	r0, [r0, #276]	; 0x114
   1c6f4:	cmp	r0, #1
   1c6f8:	blt	1c9bc <sav_begin_data+0x11dc>
   1c6fc:	str	r4, [sp, #52]	; 0x34
   1c700:	mov	r5, #0
   1c704:	mov	r4, #0
   1c708:	mov	r0, r6
   1c70c:	mov	r1, r4
   1c710:	bl	4d8c <readstat_get_label_set_variable@plt>
   1c714:	ldr	r0, [r0, #1596]	; 0x63c
   1c718:	add	r4, r4, #1
   1c71c:	cmp	r0, #9
   1c720:	ldr	r0, [r6, #276]	; 0x114
   1c724:	addcc	r5, r5, #1
   1c728:	cmp	r4, r0
   1c72c:	blt	1c708 <sav_begin_data+0xf28>
   1c730:	ldr	r4, [sp, #52]	; 0x34
   1c734:	cmp	r5, #0
   1c738:	beq	1c9bc <sav_begin_data+0x11dc>
   1c73c:	ldr	r0, [r6, #264]	; 0x108
   1c740:	ldr	r7, [r6]
   1c744:	str	sl, [sp, #64]	; 0x40
   1c748:	cmp	r0, #0
   1c74c:	str	r0, [fp, #-72]	; 0xffffffb8
   1c750:	beq	1c9bc <sav_begin_data+0x11dc>
   1c754:	mov	r0, #3
   1c758:	add	r1, sp, #64	; 0x40
   1c75c:	mov	r2, #4
   1c760:	str	r0, [sp, #64]	; 0x40
   1c764:	mov	r0, r8
   1c768:	bl	4d98 <readstat_write_bytes@plt>
   1c76c:	cmp	r0, #0
   1c770:	bne	1caf0 <sav_begin_data+0x1310>
   1c774:	mov	r0, r8
   1c778:	sub	r1, fp, #72	; 0x48
   1c77c:	mov	r2, #4
   1c780:	bl	4d98 <readstat_write_bytes@plt>
   1c784:	cmp	r0, #0
   1c788:	bne	1caf0 <sav_begin_data+0x1310>
   1c78c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c790:	cmp	r0, #1
   1c794:	blt	1c8bc <sav_begin_data+0x10dc>
   1c798:	mov	r4, #0
   1c79c:	mov	r0, r6
   1c7a0:	mov	r1, r4
   1c7a4:	bl	4e04 <readstat_get_value_label@plt>
   1c7a8:	mov	r5, r0
   1c7ac:	cmp	r7, #5
   1c7b0:	beq	1c7f8 <sav_begin_data+0x1018>
   1c7b4:	cmp	r7, #3
   1c7b8:	beq	1c80c <sav_begin_data+0x102c>
   1c7bc:	cmp	r7, #0
   1c7c0:	bne	1c818 <sav_begin_data+0x1038>
   1c7c4:	ldrd	r2, [r5, #16]
   1c7c8:	movw	r0, #8224	; 0x2020
   1c7cc:	movt	r0, #8224	; 0x2020
   1c7d0:	str	r0, [sp, #84]	; 0x54
   1c7d4:	str	r0, [sp, #80]	; 0x50
   1c7d8:	mov	r0, #8
   1c7dc:	cmp	r3, #8
   1c7e0:	mov	r1, r2
   1c7e4:	movcs	r3, r0
   1c7e8:	add	r0, sp, #80	; 0x50
   1c7ec:	mov	r2, r3
   1c7f0:	bl	48b8 <memcpy@plt>
   1c7f4:	b	1c818 <sav_begin_data+0x1038>
   1c7f8:	vldr	d16, [r5]
   1c7fc:	b	1c814 <sav_begin_data+0x1034>
   1c800:	.word	0x0000ee8f
   1c804:	.word	0x0000ee2c
   1c808:	.word	0x0000edfe
   1c80c:	vldr	s0, [r5, #8]
   1c810:	vcvt.f64.s32	d16, s0
   1c814:	vstr	d16, [sp, #80]	; 0x50
   1c818:	mov	r0, r8
   1c81c:	add	r1, sp, #80	; 0x50
   1c820:	mov	r2, #8
   1c824:	bl	4d98 <readstat_write_bytes@plt>
   1c828:	ldr	r1, [r5, #28]
   1c82c:	ldr	r5, [r5, #24]
   1c830:	ldr	r8, [sp, #60]	; 0x3c
   1c834:	mov	r0, #120	; 0x78
   1c838:	mov	r2, #1
   1c83c:	strb	r0, [fp, #-80]	; 0xffffffb0
   1c840:	cmp	r1, #119	; 0x77
   1c844:	mov	r0, r8
   1c848:	strbls	r1, [fp, #-80]	; 0xffffffb0
   1c84c:	sub	r1, fp, #80	; 0x50
   1c850:	bl	4d98 <readstat_write_bytes@plt>
   1c854:	cmp	r0, #0
   1c858:	bne	1caf0 <sav_begin_data+0x1310>
   1c85c:	mov	r9, r7
   1c860:	add	r7, sp, #136	; 0x88
   1c864:	mov	r1, #32
   1c868:	mov	r2, #128	; 0x80
   1c86c:	mov	r0, r7
   1c870:	bl	4c00 <memset@plt>
   1c874:	mov	r1, r5
   1c878:	ldrb	r5, [fp, #-80]	; 0xffffffb0
   1c87c:	mov	r0, r7
   1c880:	mov	r2, r5
   1c884:	bl	48b8 <memcpy@plt>
   1c888:	add	r0, r5, #8
   1c88c:	mov	r1, r7
   1c890:	and	r0, r0, #504	; 0x1f8
   1c894:	sub	r2, r0, #1
   1c898:	mov	r0, r8
   1c89c:	bl	4d98 <readstat_write_bytes@plt>
   1c8a0:	cmp	r0, #0
   1c8a4:	bne	1caf0 <sav_begin_data+0x1310>
   1c8a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c8ac:	add	r4, r4, #1
   1c8b0:	mov	r7, r9
   1c8b4:	cmp	r4, r0
   1c8b8:	blt	1c79c <sav_begin_data+0xfbc>
   1c8bc:	mov	r0, #4
   1c8c0:	mov	r5, #0
   1c8c4:	str	r0, [sp, #64]	; 0x40
   1c8c8:	ldr	r0, [r6, #276]	; 0x114
   1c8cc:	cmp	r0, #1
   1c8d0:	blt	1c914 <sav_begin_data+0x1134>
   1c8d4:	mov	r4, #0
   1c8d8:	mov	r7, #1
   1c8dc:	mov	r0, r6
   1c8e0:	mov	r1, r4
   1c8e4:	bl	4d8c <readstat_get_label_set_variable@plt>
   1c8e8:	ldr	r0, [r0, #1596]	; 0x63c
   1c8ec:	add	r4, r4, #1
   1c8f0:	cmp	r0, #9
   1c8f4:	ldr	r0, [r6, #276]	; 0x114
   1c8f8:	addcc	r5, r5, #1
   1c8fc:	cmp	r4, r0
   1c900:	blt	1c8dc <sav_begin_data+0x10fc>
   1c904:	b	1c918 <sav_begin_data+0x1138>
   1c908:	.word	0x0000eda0
   1c90c:	.word	0x0000ed7c
   1c910:	.word	0x0000ecec
   1c914:	mov	r7, #1
   1c918:	mov	r0, r8
   1c91c:	add	r1, sp, #64	; 0x40
   1c920:	mov	r2, #4
   1c924:	str	r5, [sp, #136]	; 0x88
   1c928:	bl	4d98 <readstat_write_bytes@plt>
   1c92c:	cmp	r0, #0
   1c930:	bne	1caf0 <sav_begin_data+0x1310>
   1c934:	mov	r0, r8
   1c938:	add	r1, sp, #136	; 0x88
   1c93c:	mov	r2, #4
   1c940:	bl	4d98 <readstat_write_bytes@plt>
   1c944:	cmp	r0, #0
   1c948:	bne	1caf0 <sav_begin_data+0x1310>
   1c94c:	ldr	r0, [r6, #276]	; 0x114
   1c950:	cmp	r0, #1
   1c954:	blt	1c9b0 <sav_begin_data+0x11d0>
   1c958:	mov	r4, #0
   1c95c:	mov	r0, r6
   1c960:	mov	r1, r4
   1c964:	bl	4d8c <readstat_get_label_set_variable@plt>
   1c968:	ldr	r1, [r0, #1596]	; 0x63c
   1c96c:	cmp	r1, #8
   1c970:	bhi	1c9a0 <sav_begin_data+0x11c0>
   1c974:	ldr	r0, [r0, #1592]	; 0x638
   1c978:	mov	r2, #4
   1c97c:	asr	r1, r0, #31
   1c980:	add	r0, r0, r1, lsr #29
   1c984:	add	r1, sp, #80	; 0x50
   1c988:	add	r0, r7, r0, asr #3
   1c98c:	str	r0, [sp, #80]	; 0x50
   1c990:	mov	r0, r8
   1c994:	bl	4d98 <readstat_write_bytes@plt>
   1c998:	cmp	r0, #0
   1c99c:	bne	1caf0 <sav_begin_data+0x1310>
   1c9a0:	ldr	r0, [r6, #276]	; 0x114
   1c9a4:	add	r4, r4, #1
   1c9a8:	cmp	r4, r0
   1c9ac:	blt	1c95c <sav_begin_data+0x117c>
   1c9b0:	ldr	r4, [sp, #52]	; 0x34
   1c9b4:	add	r9, sp, #136	; 0x88
   1c9b8:	mov	sl, #0
   1c9bc:	ldr	r0, [r8, #40]	; 0x28
   1c9c0:	add	r4, r4, #1
   1c9c4:	cmp	r4, r0
   1c9c8:	blt	1c6e0 <sav_begin_data+0xf00>
   1c9cc:	mov	r0, #6
   1c9d0:	str	r0, [sp, #136]	; 0x88
   1c9d4:	ldr	r0, [r8, #52]	; 0x34
   1c9d8:	cmp	r0, #0
   1c9dc:	str	r0, [sp, #80]	; 0x50
   1c9e0:	beq	1ca8c <sav_begin_data+0x12ac>
   1c9e4:	add	r1, sp, #136	; 0x88
   1c9e8:	mov	r0, r8
   1c9ec:	mov	r2, #4
   1c9f0:	bl	4d98 <readstat_write_bytes@plt>
   1c9f4:	mov	sl, r0
   1c9f8:	cmp	r0, #0
   1c9fc:	bne	1caf4 <sav_begin_data+0x1314>
   1ca00:	add	r1, sp, #80	; 0x50
   1ca04:	mov	r0, r8
   1ca08:	mov	r2, #4
   1ca0c:	bl	4d98 <readstat_write_bytes@plt>
   1ca10:	mov	sl, r0
   1ca14:	cmp	r0, #0
   1ca18:	bne	1caf4 <sav_begin_data+0x1314>
   1ca1c:	ldr	r0, [r8, #52]	; 0x34
   1ca20:	add	r9, sp, #136	; 0x88
   1ca24:	cmp	r0, #1
   1ca28:	blt	1ca8c <sav_begin_data+0x12ac>
   1ca2c:	mov	r6, #0
   1ca30:	ldr	r0, [r8, #48]	; 0x30
   1ca34:	ldr	r5, [r0, r6, lsl #2]
   1ca38:	mov	r0, r5
   1ca3c:	bl	4b58 <strlen@plt>
   1ca40:	cmp	r0, #80	; 0x50
   1ca44:	bhi	1cc18 <sav_begin_data+0x1438>
   1ca48:	mov	r4, r0
   1ca4c:	mov	r0, r8
   1ca50:	mov	r1, r5
   1ca54:	mov	r2, r4
   1ca58:	bl	4d98 <readstat_write_bytes@plt>
   1ca5c:	cmp	r0, #0
   1ca60:	bne	1caf0 <sav_begin_data+0x1310>
   1ca64:	rsb	r1, r4, #80	; 0x50
   1ca68:	mov	r0, r8
   1ca6c:	bl	4798 <readstat_write_spaces@plt>
   1ca70:	cmp	r0, #0
   1ca74:	bne	1caf0 <sav_begin_data+0x1310>
   1ca78:	ldr	r0, [r8, #52]	; 0x34
   1ca7c:	add	r6, r6, #1
   1ca80:	add	r9, sp, #136	; 0x88
   1ca84:	cmp	r6, r0
   1ca88:	blt	1ca30 <sav_begin_data+0x1250>
   1ca8c:	ldr	r0, [pc, #3876]	; 1d9b8 <sav_begin_data+0x21d8>
   1ca90:	add	r5, sp, #80	; 0x50
   1ca94:	add	r0, pc, r0
   1ca98:	vld1.64	{d16-d17}, [r0]
   1ca9c:	mov	r0, #1
   1caa0:	vst1.64	{d16-d17}, [r5]
   1caa4:	add	r1, pc, #676	; 0x2a4
   1caa8:	str	r0, [sp, #152]	; 0x98
   1caac:	str	r0, [sp, #156]	; 0x9c
   1cab0:	mov	r0, #28
   1cab4:	vld1.64	{d16-d17}, [r1 :128]
   1cab8:	vst1.32	{d16-d17}, [r9], r0
   1cabc:	bl	4858 <machine_is_little_endian@plt>
   1cac0:	movw	r1, #65001	; 0xfde9
   1cac4:	cmp	r0, #0
   1cac8:	mov	r0, r8
   1cacc:	mov	r2, #16
   1cad0:	str	r1, [r9]
   1cad4:	mov	r1, #2
   1cad8:	movweq	r1, #1
   1cadc:	str	r1, [sp, #160]	; 0xa0
   1cae0:	mov	r1, r5
   1cae4:	bl	4d98 <readstat_write_bytes@plt>
   1cae8:	cmp	r0, #0
   1caec:	beq	1cb18 <sav_begin_data+0x1338>
   1caf0:	mov	sl, r0
   1caf4:	ldr	r0, [sp, #56]	; 0x38
   1caf8:	bl	4864 <free@plt>
   1cafc:	mov	r0, sl
   1cb00:	sub	sp, fp, #48	; 0x30
   1cb04:	vpop	{d8-d9}
   1cb08:	add	sp, sp, #4
   1cb0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb10:	.word	0x0000ebbf
   1cb14:	.word	0x0000db29
   1cb18:	add	r4, sp, #136	; 0x88
   1cb1c:	mov	r0, r8
   1cb20:	mov	r2, #32
   1cb24:	mov	r1, r4
   1cb28:	bl	4d98 <readstat_write_bytes@plt>
   1cb2c:	mov	sl, r0
   1cb30:	cmp	r0, #0
   1cb34:	bne	1caf4 <sav_begin_data+0x1314>
   1cb38:	ldr	r0, [pc, #3708]	; 1d9bc <sav_begin_data+0x21dc>
   1cb3c:	mov	r1, r5
   1cb40:	mov	r2, #16
   1cb44:	add	r0, pc, r0
   1cb48:	vld1.64	{d16-d17}, [r0]
   1cb4c:	mov	r0, r8
   1cb50:	vst1.64	{d16-d17}, [r5]
   1cb54:	bl	4d98 <readstat_write_bytes@plt>
   1cb58:	cmp	r0, #0
   1cb5c:	bne	1caf0 <sav_begin_data+0x1310>
   1cb60:	add	r0, pc, #504	; 0x1f8
   1cb64:	mvn	r1, #1048576	; 0x100000
   1cb68:	mvn	r2, #1
   1cb6c:	vld1.64	{d16-d17}, [r0 :128]
   1cb70:	mov	r0, r4
   1cb74:	vst1.64	{d16-d17}, [r0]!
   1cb78:	str	r2, [r0]
   1cb7c:	str	r1, [r0, #4]
   1cb80:	mov	r0, r8
   1cb84:	mov	r1, r4
   1cb88:	mov	r2, #24
   1cb8c:	bl	4d98 <readstat_write_bytes@plt>
   1cb90:	mov	sl, r0
   1cb94:	cmp	r0, #0
   1cb98:	bne	1caf4 <sav_begin_data+0x1314>
   1cb9c:	ldr	r0, [pc, #3612]	; 1d9c0 <sav_begin_data+0x21e0>
   1cba0:	add	r0, pc, r0
   1cba4:	vld1.64	{d16-d17}, [r0]
   1cba8:	vst1.64	{d16-d17}, [r4]
   1cbac:	ldr	r0, [r8, #28]
   1cbb0:	cmp	r0, #1
   1cbb4:	blt	1cc24 <sav_begin_data+0x1444>
   1cbb8:	movw	r5, #2081	; 0x821
   1cbbc:	mov	r4, #0
   1cbc0:	mov	r6, #0
   1cbc4:	movt	r5, #8322	; 0x2082
   1cbc8:	mov	r0, r8
   1cbcc:	mov	r1, r4
   1cbd0:	bl	4ccc <readstat_get_variable@plt>
   1cbd4:	ldr	r2, [r0]
   1cbd8:	mov	r1, #1
   1cbdc:	cmp	r2, #0
   1cbe0:	bne	1cbfc <sav_begin_data+0x141c>
   1cbe4:	ldr	r0, [r0, #1600]	; 0x640
   1cbe8:	cmp	r0, #256	; 0x100
   1cbec:	addcs	r0, r0, #251	; 0xfb
   1cbf0:	lsrcs	r0, r0, #2
   1cbf4:	umullcs	r0, r1, r0, r5
   1cbf8:	lsrcs	r1, r1, #3
   1cbfc:	ldr	r0, [r8, #28]
   1cc00:	add	r4, r4, #1
   1cc04:	add	r6, r1, r6
   1cc08:	cmp	r4, r0
   1cc0c:	blt	1cbc8 <sav_begin_data+0x13e8>
   1cc10:	add	r0, r6, r6, lsl #1
   1cc14:	b	1cc28 <sav_begin_data+0x1448>
   1cc18:	mov	sl, #32
   1cc1c:	b	1caf4 <sav_begin_data+0x1314>
   1cc20:	.word	0x0000e654
   1cc24:	mov	r0, #0
   1cc28:	add	r4, sp, #136	; 0x88
   1cc2c:	str	r0, [sp, #148]	; 0x94
   1cc30:	mov	r0, r8
   1cc34:	mov	r2, #16
   1cc38:	mov	r1, r4
   1cc3c:	bl	4d98 <readstat_write_bytes@plt>
   1cc40:	cmp	r0, #0
   1cc44:	bne	1caf0 <sav_begin_data+0x1310>
   1cc48:	ldr	r2, [r8, #28]
   1cc4c:	cmp	r2, #0
   1cc50:	ble	1cfc0 <sav_begin_data+0x17e0>
   1cc54:	ldr	r0, [sp, #60]	; 0x3c
   1cc58:	ldr	r8, [sp, #60]	; 0x3c
   1cc5c:	mov	sl, #0
   1cc60:	add	r4, sp, #80	; 0x50
   1cc64:	sub	r6, fp, #72	; 0x48
   1cc68:	mov	r7, #0
   1cc6c:	mov	r1, r7
   1cc70:	bl	4ccc <readstat_get_variable@plt>
   1cc74:	mov	r5, r0
   1cc78:	bl	4c78 <readstat_variable_get_measure@plt>
   1cc7c:	bl	49f0 <spss_measure_from_readstat_measure@plt>
   1cc80:	str	r0, [sp, #80]	; 0x50
   1cc84:	mov	r0, r5
   1cc88:	bl	4b7c <readstat_variable_get_display_width@plt>
   1cc8c:	cmp	r0, #1
   1cc90:	movwlt	r0, #8
   1cc94:	str	r0, [fp, #-72]	; 0xffffffb8
   1cc98:	mov	r0, r5
   1cc9c:	bl	4d74 <readstat_variable_get_alignment@plt>
   1cca0:	bl	4804 <spss_alignment_from_readstat_alignment@plt>
   1cca4:	str	r0, [sp, #64]	; 0x40
   1cca8:	mov	r9, #1
   1ccac:	ldr	r0, [r5]
   1ccb0:	cmp	r0, #0
   1ccb4:	bne	1cce8 <sav_begin_data+0x1508>
   1ccb8:	ldr	r0, [r5, #1600]	; 0x640
   1ccbc:	cmp	r0, #256	; 0x100
   1ccc0:	bcc	1cce8 <sav_begin_data+0x1508>
   1ccc4:	add	r1, r0, #251	; 0xfb
   1ccc8:	movw	r2, #2081	; 0x821
   1cccc:	mov	r5, #1
   1ccd0:	lsr	r0, r1, #2
   1ccd4:	movt	r2, #8322	; 0x2082
   1ccd8:	cmp	r1, #252	; 0xfc
   1ccdc:	umull	r2, r0, r0, r2
   1cce0:	bcc	1cd74 <sav_begin_data+0x1594>
   1cce4:	lsr	r9, r0, #3
   1cce8:	mov	r0, r8
   1ccec:	mov	r1, r4
   1ccf0:	mov	r2, #4
   1ccf4:	bl	4d98 <readstat_write_bytes@plt>
   1ccf8:	mov	r5, #0
   1ccfc:	cmp	r0, #0
   1cd00:	bne	1cd70 <sav_begin_data+0x1590>
   1cd04:	mov	r0, r8
   1cd08:	mov	r1, r6
   1cd0c:	mov	r2, #4
   1cd10:	bl	4d98 <readstat_write_bytes@plt>
   1cd14:	cmp	r0, #0
   1cd18:	bne	1cd70 <sav_begin_data+0x1590>
   1cd1c:	mov	r0, r8
   1cd20:	add	r1, sp, #64	; 0x40
   1cd24:	mov	r2, #4
   1cd28:	bl	4d98 <readstat_write_bytes@plt>
   1cd2c:	cmp	r0, #0
   1cd30:	bne	1cd70 <sav_begin_data+0x1590>
   1cd34:	subs	r9, r9, #1
   1cd38:	bne	1cce8 <sav_begin_data+0x1508>
   1cd3c:	mov	r5, #1
   1cd40:	mov	sl, #0
   1cd44:	b	1cd74 <sav_begin_data+0x1594>
   1cd48:	nop	{0}
   1cd4c:	nop	{0}
   1cd50:	.word	0x00000014
	...
   1cd5c:	.word	0xffffffff
   1cd60:	.word	0xffffffff
   1cd64:	.word	0xffefffff
   1cd68:	.word	0xffffffff
   1cd6c:	.word	0x7fefffff
   1cd70:	mov	sl, r0
   1cd74:	ldr	r0, [sp, #60]	; 0x3c
   1cd78:	cmp	r5, #0
   1cd7c:	beq	1cd90 <sav_begin_data+0x15b0>
   1cd80:	ldr	r1, [r0, #28]
   1cd84:	add	r7, r7, #1
   1cd88:	cmp	r7, r1
   1cd8c:	blt	1cc6c <sav_begin_data+0x148c>
   1cd90:	cmp	sl, #0
   1cd94:	bne	1caf4 <sav_begin_data+0x1314>
   1cd98:	ldr	r2, [r0, #28]
   1cd9c:	ldr	r1, [pc, #3108]	; 1d9c8 <sav_begin_data+0x21e8>
   1cda0:	add	r0, sp, #136	; 0x88
   1cda4:	add	r1, pc, r1
   1cda8:	cmp	r2, #1
   1cdac:	vld1.64	{d16-d17}, [r1]
   1cdb0:	vst1.64	{d16-d17}, [r0]
   1cdb4:	blt	1cfd0 <sav_begin_data+0x17f0>
   1cdb8:	ldr	r8, [pc, #3084]	; 1d9cc <sav_begin_data+0x21ec>
   1cdbc:	ldr	r7, [sp, #56]	; 0x38
   1cdc0:	ldr	r0, [sp, #60]	; 0x3c
   1cdc4:	mov	r4, #0
   1cdc8:	add	r9, sp, #64	; 0x40
   1cdcc:	add	r8, pc, r8
   1cdd0:	mov	r1, r4
   1cdd4:	bl	4ccc <readstat_get_variable@plt>
   1cdd8:	mov	r5, r0
   1cddc:	mov	r0, r9
   1cde0:	mov	r1, #9
   1cde4:	mov	r2, r8
   1cde8:	mov	r3, r7
   1cdec:	bl	4bdc <snprintf@plt>
   1cdf0:	mov	r0, r9
   1cdf4:	bl	4b58 <strlen@plt>
   1cdf8:	mov	r6, r0
   1cdfc:	add	r0, r5, #8
   1ce00:	bl	4b58 <strlen@plt>
   1ce04:	cmp	r6, #0
   1ce08:	cmpne	r0, #0
   1ce0c:	beq	1ce2c <sav_begin_data+0x164c>
   1ce10:	ldr	r1, [sp, #148]	; 0x94
   1ce14:	cmp	r0, #64	; 0x40
   1ce18:	movcs	r0, #64	; 0x40
   1ce1c:	add	r0, r6, r0
   1ce20:	add	r0, r0, r1
   1ce24:	add	r0, r0, #2
   1ce28:	str	r0, [sp, #148]	; 0x94
   1ce2c:	ldr	r0, [sp, #60]	; 0x3c
   1ce30:	add	r4, r4, #1
   1ce34:	add	r7, r7, #15
   1ce38:	ldr	r2, [r0, #28]
   1ce3c:	cmp	r4, r2
   1ce40:	blt	1cdd0 <sav_begin_data+0x15f0>
   1ce44:	ldr	r1, [sp, #148]	; 0x94
   1ce48:	cmp	r1, #1
   1ce4c:	blt	1cfd0 <sav_begin_data+0x17f0>
   1ce50:	sub	r0, r1, #1
   1ce54:	add	r1, sp, #136	; 0x88
   1ce58:	mov	r2, #16
   1ce5c:	str	r0, [sp, #148]	; 0x94
   1ce60:	ldr	r0, [sp, #60]	; 0x3c
   1ce64:	bl	4d98 <readstat_write_bytes@plt>
   1ce68:	cmp	r0, #0
   1ce6c:	bne	1caf0 <sav_begin_data+0x1310>
   1ce70:	ldr	r0, [sp, #60]	; 0x3c
   1ce74:	ldr	r2, [r0, #28]
   1ce78:	cmp	r2, #1
   1ce7c:	blt	1cfd0 <sav_begin_data+0x17f0>
   1ce80:	ldr	r7, [sp, #56]	; 0x38
   1ce84:	mov	r6, #1
   1ce88:	mov	sl, #0
   1ce8c:	mov	r8, #0
   1ce90:	ldr	r0, [sp, #60]	; 0x3c
   1ce94:	mov	r1, r8
   1ce98:	bl	4ccc <readstat_get_variable@plt>
   1ce9c:	ldr	r2, [pc, #2860]	; 1d9d0 <sav_begin_data+0x21f0>
   1cea0:	mov	r5, r0
   1cea4:	sub	r0, fp, #72	; 0x48
   1cea8:	mov	r1, #9
   1ceac:	mov	r3, r7
   1ceb0:	add	r2, pc, r2
   1ceb4:	bl	4bdc <snprintf@plt>
   1ceb8:	add	r5, r5, #8
   1cebc:	mov	r0, r5
   1cec0:	bl	4b58 <strlen@plt>
   1cec4:	mov	r9, r0
   1cec8:	mov	r0, #61	; 0x3d
   1cecc:	strb	r0, [sp, #80]	; 0x50
   1ced0:	mov	r0, #9
   1ced4:	cmp	r9, #0
   1ced8:	strb	r0, [sp, #64]	; 0x40
   1cedc:	beq	1cf84 <sav_begin_data+0x17a4>
   1cee0:	cmp	r9, #64	; 0x40
   1cee4:	movcs	r9, #64	; 0x40
   1cee8:	cmp	r6, #0
   1ceec:	beq	1cf4c <sav_begin_data+0x176c>
   1cef0:	ldr	r0, [sp, #60]	; 0x3c
   1cef4:	sub	r1, fp, #72	; 0x48
   1cef8:	bl	4abc <readstat_write_string@plt>
   1cefc:	mov	r4, #0
   1cf00:	cmp	r0, #0
   1cf04:	bne	1cf3c <sav_begin_data+0x175c>
   1cf08:	ldr	r0, [sp, #60]	; 0x3c
   1cf0c:	add	r1, sp, #80	; 0x50
   1cf10:	mov	r2, #1
   1cf14:	bl	4d98 <readstat_write_bytes@plt>
   1cf18:	cmp	r0, #0
   1cf1c:	bne	1cf3c <sav_begin_data+0x175c>
   1cf20:	ldr	r0, [sp, #60]	; 0x3c
   1cf24:	mov	r1, r5
   1cf28:	mov	r2, r9
   1cf2c:	bl	4d98 <readstat_write_bytes@plt>
   1cf30:	mov	r4, #0
   1cf34:	cmp	r0, #0
   1cf38:	beq	1cf7c <sav_begin_data+0x179c>
   1cf3c:	mov	sl, r0
   1cf40:	cmp	r4, #0
   1cf44:	bne	1cf90 <sav_begin_data+0x17b0>
   1cf48:	b	1cfa8 <sav_begin_data+0x17c8>
   1cf4c:	ldr	r0, [sp, #60]	; 0x3c
   1cf50:	add	r1, sp, #64	; 0x40
   1cf54:	mov	r2, #1
   1cf58:	bl	4d98 <readstat_write_bytes@plt>
   1cf5c:	cmp	r0, #0
   1cf60:	beq	1cef0 <sav_begin_data+0x1710>
   1cf64:	mov	sl, r0
   1cf68:	mov	r6, #0
   1cf6c:	mov	r4, #0
   1cf70:	cmp	r4, #0
   1cf74:	bne	1cf90 <sav_begin_data+0x17b0>
   1cf78:	b	1cfa8 <sav_begin_data+0x17c8>
   1cf7c:	mov	r6, #0
   1cf80:	mov	sl, #0
   1cf84:	mov	r4, #1
   1cf88:	cmp	r4, #0
   1cf8c:	beq	1cfa8 <sav_begin_data+0x17c8>
   1cf90:	ldr	r0, [sp, #60]	; 0x3c
   1cf94:	add	r8, r8, #1
   1cf98:	add	r7, r7, #15
   1cf9c:	ldr	r0, [r0, #28]
   1cfa0:	cmp	r8, r0
   1cfa4:	blt	1ce90 <sav_begin_data+0x16b0>
   1cfa8:	ldr	r0, [sp, #60]	; 0x3c
   1cfac:	cmp	sl, #0
   1cfb0:	bne	1caf4 <sav_begin_data+0x1314>
   1cfb4:	ldr	r2, [r0, #28]
   1cfb8:	b	1cfd0 <sav_begin_data+0x17f0>
   1cfbc:	.word	0x0000e2a0
   1cfc0:	ldr	r1, [pc, #2556]	; 1d9c4 <sav_begin_data+0x21e4>
   1cfc4:	add	r1, pc, r1
   1cfc8:	vld1.64	{d16-d17}, [r1]
   1cfcc:	vst1.64	{d16-d17}, [r4]
   1cfd0:	mov	r1, #2304	; 0x900
   1cfd4:	cmp	r2, #1
   1cfd8:	add	r0, sp, #136	; 0x88
   1cfdc:	strh	r1, [fp, #-80]	; 0xffffffb0
   1cfe0:	ldr	r1, [pc, #2540]	; 1d9d4 <sav_begin_data+0x21f4>
   1cfe4:	add	r1, pc, r1
   1cfe8:	vld1.64	{d16-d17}, [r1]
   1cfec:	vst1.64	{d16-d17}, [r0]
   1cff0:	blt	1d1ac <sav_begin_data+0x19cc>
   1cff4:	ldr	r9, [pc, #2524]	; 1d9d8 <sav_begin_data+0x21f8>
   1cff8:	ldr	r6, [sp, #56]	; 0x38
   1cffc:	ldr	r0, [sp, #60]	; 0x3c
   1d000:	mov	r4, #0
   1d004:	add	sl, sp, #64	; 0x40
   1d008:	movw	r8, #3125	; 0xc35
   1d00c:	add	r7, sp, #80	; 0x50
   1d010:	add	r9, pc, r9
   1d014:	mov	r1, r4
   1d018:	bl	4ccc <readstat_get_variable@plt>
   1d01c:	mov	r5, r0
   1d020:	ldr	r0, [r0, #1600]	; 0x640
   1d024:	cmp	r0, #256	; 0x100
   1d028:	bcc	1d094 <sav_begin_data+0x18b4>
   1d02c:	ldr	r2, [pc, #2472]	; 1d9dc <sav_begin_data+0x21fc>
   1d030:	mov	r0, sl
   1d034:	mov	r1, #9
   1d038:	mov	r3, r6
   1d03c:	add	r2, pc, r2
   1d040:	bl	4bdc <snprintf@plt>
   1d044:	ldr	r0, [r5, #1600]	; 0x640
   1d048:	movw	r2, #23237	; 0x5ac5
   1d04c:	mov	r3, sl
   1d050:	movt	r2, #2684	; 0xa7c
   1d054:	lsr	r1, r0, #5
   1d058:	umull	r1, r2, r1, r2
   1d05c:	lsr	r1, r2, #7
   1d060:	mov	r2, r9
   1d064:	mul	r1, r1, r8
   1d068:	sub	r0, r0, r1, lsl #5
   1d06c:	mov	r1, #15
   1d070:	str	r0, [sp]
   1d074:	mov	r0, r7
   1d078:	bl	4bdc <snprintf@plt>
   1d07c:	mov	r0, r7
   1d080:	bl	4b58 <strlen@plt>
   1d084:	ldr	r1, [sp, #148]	; 0x94
   1d088:	add	r0, r0, r1
   1d08c:	add	r0, r0, #2
   1d090:	str	r0, [sp, #148]	; 0x94
   1d094:	ldr	r0, [sp, #60]	; 0x3c
   1d098:	add	r4, r4, #1
   1d09c:	add	r6, r6, #15
   1d0a0:	ldr	r1, [r0, #28]
   1d0a4:	cmp	r4, r1
   1d0a8:	blt	1d014 <sav_begin_data+0x1834>
   1d0ac:	ldr	r0, [sp, #148]	; 0x94
   1d0b0:	cmp	r0, #0
   1d0b4:	beq	1d1ac <sav_begin_data+0x19cc>
   1d0b8:	ldr	r0, [sp, #60]	; 0x3c
   1d0bc:	add	r1, sp, #136	; 0x88
   1d0c0:	mov	r2, #16
   1d0c4:	bl	4d98 <readstat_write_bytes@plt>
   1d0c8:	mov	sl, r0
   1d0cc:	cmp	r0, #0
   1d0d0:	bne	1caf4 <sav_begin_data+0x1314>
   1d0d4:	ldr	r0, [sp, #60]	; 0x3c
   1d0d8:	ldr	r0, [r0, #28]
   1d0dc:	cmp	r0, #1
   1d0e0:	blt	1d1ac <sav_begin_data+0x19cc>
   1d0e4:	ldr	r8, [sp, #56]	; 0x38
   1d0e8:	ldr	r9, [sp, #60]	; 0x3c
   1d0ec:	mov	r4, #0
   1d0f0:	sub	r5, fp, #72	; 0x48
   1d0f4:	add	r7, sp, #80	; 0x50
   1d0f8:	mov	r0, r9
   1d0fc:	mov	r1, r4
   1d100:	bl	4ccc <readstat_get_variable@plt>
   1d104:	mov	r6, r0
   1d108:	ldr	r0, [r0, #1600]	; 0x640
   1d10c:	cmp	r0, #256	; 0x100
   1d110:	bcc	1d198 <sav_begin_data+0x19b8>
   1d114:	ldr	r2, [pc, #2244]	; 1d9e0 <sav_begin_data+0x2200>
   1d118:	mov	r0, r5
   1d11c:	mov	r1, #9
   1d120:	mov	r3, r8
   1d124:	add	r2, pc, r2
   1d128:	bl	4bdc <snprintf@plt>
   1d12c:	ldr	r0, [r6, #1600]	; 0x640
   1d130:	movw	r2, #23237	; 0x5ac5
   1d134:	mov	r3, r5
   1d138:	movt	r2, #2684	; 0xa7c
   1d13c:	lsr	r1, r0, #5
   1d140:	umull	r1, r2, r1, r2
   1d144:	lsr	r1, r2, #7
   1d148:	movw	r2, #3125	; 0xc35
   1d14c:	mul	r1, r1, r2
   1d150:	sub	r0, r0, r1, lsl #5
   1d154:	mov	r1, #15
   1d158:	str	r0, [sp]
   1d15c:	mov	r0, r7
   1d160:	ldr	r2, [pc, #2172]	; 1d9e4 <sav_begin_data+0x2204>
   1d164:	add	r2, pc, r2
   1d168:	bl	4bdc <snprintf@plt>
   1d16c:	mov	r0, r9
   1d170:	mov	r1, r7
   1d174:	bl	4abc <readstat_write_string@plt>
   1d178:	cmp	r0, #0
   1d17c:	bne	1caf0 <sav_begin_data+0x1310>
   1d180:	mov	r0, r9
   1d184:	sub	r1, fp, #80	; 0x50
   1d188:	mov	r2, #2
   1d18c:	bl	4d98 <readstat_write_bytes@plt>
   1d190:	cmp	r0, #0
   1d194:	bne	1caf0 <sav_begin_data+0x1310>
   1d198:	ldr	r0, [r9, #28]
   1d19c:	add	r4, r4, #1
   1d1a0:	add	r8, r8, #15
   1d1a4:	cmp	r4, r0
   1d1a8:	blt	1d0f8 <sav_begin_data+0x1918>
   1d1ac:	ldr	r0, [pc, #2100]	; 1d9e8 <sav_begin_data+0x2208>
   1d1b0:	add	r0, pc, r0
   1d1b4:	vld1.64	{d16-d17}, [r0]
   1d1b8:	add	r0, sp, #136	; 0x88
   1d1bc:	vst1.64	{d16-d17}, [r0]
   1d1c0:	ldr	r0, [sp, #60]	; 0x3c
   1d1c4:	ldr	r1, [r0, #40]	; 0x28
   1d1c8:	cmp	r1, #1
   1d1cc:	blt	1d54c <sav_begin_data+0x1d6c>
   1d1d0:	mov	r4, #0
   1d1d4:	mov	r1, #0
   1d1d8:	str	r1, [sp, #52]	; 0x34
   1d1dc:	bl	4d68 <readstat_get_label_set@plt>
   1d1e0:	ldr	sl, [r0, #276]	; 0x114
   1d1e4:	mov	r6, r0
   1d1e8:	mov	r7, #0
   1d1ec:	cmp	sl, #1
   1d1f0:	blt	1d224 <sav_begin_data+0x1a44>
   1d1f4:	mov	r7, #0
   1d1f8:	mov	r5, #0
   1d1fc:	mov	r0, r6
   1d200:	mov	r1, r5
   1d204:	bl	4d8c <readstat_get_label_set_variable@plt>
   1d208:	ldr	r0, [r0, #1596]	; 0x63c
   1d20c:	ldr	sl, [r6, #276]	; 0x114
   1d210:	add	r5, r5, #1
   1d214:	cmp	r0, #9
   1d218:	addcc	r7, r7, #1
   1d21c:	cmp	r5, sl
   1d220:	blt	1d1fc <sav_begin_data+0x1a1c>
   1d224:	cmp	r7, sl
   1d228:	bge	1d2c0 <sav_begin_data+0x1ae0>
   1d22c:	cmp	sl, #1
   1d230:	blt	1d2c0 <sav_begin_data+0x1ae0>
   1d234:	ldr	r8, [r6, #264]	; 0x108
   1d238:	mov	r9, #0
   1d23c:	mov	r0, r6
   1d240:	mov	r1, r9
   1d244:	bl	4d8c <readstat_get_label_set_variable@plt>
   1d248:	mov	r7, r0
   1d24c:	add	r0, r0, #8
   1d250:	bl	4b58 <strlen@plt>
   1d254:	mov	r5, r0
   1d258:	mov	r0, r7
   1d25c:	bl	4c24 <readstat_variable_get_storage_width@plt>
   1d260:	cmp	r0, #9
   1d264:	blt	1d2b4 <sav_begin_data+0x1ad4>
   1d268:	add	r1, r4, r5
   1d26c:	cmp	r8, #1
   1d270:	add	r4, r1, #12
   1d274:	str	r4, [sp, #148]	; 0x94
   1d278:	blt	1d2b4 <sav_begin_data+0x1ad4>
   1d27c:	add	r5, r0, #8
   1d280:	mov	r7, #0
   1d284:	mov	r0, r6
   1d288:	mov	r1, r7
   1d28c:	bl	4e04 <readstat_get_value_label@plt>
   1d290:	ldr	r0, [r0, #28]
   1d294:	add	r1, r5, r4
   1d298:	add	r7, r7, #1
   1d29c:	cmp	r0, #120	; 0x78
   1d2a0:	movge	r0, #120	; 0x78
   1d2a4:	cmp	r8, r7
   1d2a8:	add	r4, r1, r0
   1d2ac:	bne	1d284 <sav_begin_data+0x1aa4>
   1d2b0:	str	r4, [sp, #148]	; 0x94
   1d2b4:	add	r9, r9, #1
   1d2b8:	cmp	r9, sl
   1d2bc:	bne	1d23c <sav_begin_data+0x1a5c>
   1d2c0:	ldr	r0, [sp, #60]	; 0x3c
   1d2c4:	ldr	r1, [sp, #52]	; 0x34
   1d2c8:	ldr	r2, [r0, #40]	; 0x28
   1d2cc:	add	r1, r1, #1
   1d2d0:	cmp	r1, r2
   1d2d4:	blt	1d1d8 <sav_begin_data+0x19f8>
   1d2d8:	cmp	r4, #0
   1d2dc:	beq	1d54c <sav_begin_data+0x1d6c>
   1d2e0:	add	r1, sp, #136	; 0x88
   1d2e4:	mov	r2, #16
   1d2e8:	bl	4d98 <readstat_write_bytes@plt>
   1d2ec:	cmp	r0, #0
   1d2f0:	bne	1caf0 <sav_begin_data+0x1310>
   1d2f4:	ldr	r0, [sp, #60]	; 0x3c
   1d2f8:	ldr	r1, [r0, #40]	; 0x28
   1d2fc:	cmp	r1, #1
   1d300:	blt	1d54c <sav_begin_data+0x1d6c>
   1d304:	mov	r0, #0
   1d308:	str	r0, [sp, #52]	; 0x34
   1d30c:	mov	r0, #0
   1d310:	str	r0, [sp, #48]	; 0x30
   1d314:	ldr	r0, [sp, #60]	; 0x3c
   1d318:	ldr	r1, [sp, #52]	; 0x34
   1d31c:	bl	4d68 <readstat_get_label_set@plt>
   1d320:	ldr	r9, [r0, #276]	; 0x114
   1d324:	mov	r5, r0
   1d328:	mov	r6, #0
   1d32c:	cmp	r9, #1
   1d330:	blt	1d364 <sav_begin_data+0x1b84>
   1d334:	mov	r6, #0
   1d338:	mov	r4, #0
   1d33c:	mov	r0, r5
   1d340:	mov	r1, r4
   1d344:	bl	4d8c <readstat_get_label_set_variable@plt>
   1d348:	ldr	r0, [r0, #1596]	; 0x63c
   1d34c:	ldr	r9, [r5, #276]	; 0x114
   1d350:	add	r4, r4, #1
   1d354:	cmp	r0, #9
   1d358:	addcc	r6, r6, #1
   1d35c:	cmp	r4, r9
   1d360:	blt	1d33c <sav_begin_data+0x1b5c>
   1d364:	cmp	r6, r9
   1d368:	bge	1d504 <sav_begin_data+0x1d24>
   1d36c:	ldr	r0, [r5, #264]	; 0x108
   1d370:	cmp	r9, #1
   1d374:	str	r0, [sp, #80]	; 0x50
   1d378:	blt	1d504 <sav_begin_data+0x1d24>
   1d37c:	mov	r4, #0
   1d380:	mov	r0, r5
   1d384:	mov	r1, r4
   1d388:	bl	4d8c <readstat_get_label_set_variable@plt>
   1d38c:	add	r6, r0, #8
   1d390:	mov	r7, r0
   1d394:	mov	r0, r6
   1d398:	bl	4b58 <strlen@plt>
   1d39c:	str	r0, [fp, #-72]	; 0xffffffb8
   1d3a0:	mov	r0, r7
   1d3a4:	bl	4c24 <readstat_variable_get_storage_width@plt>
   1d3a8:	cmp	r0, #9
   1d3ac:	str	r0, [sp, #64]	; 0x40
   1d3b0:	blt	1d4f8 <sav_begin_data+0x1d18>
   1d3b4:	mov	r1, r0
   1d3b8:	ldr	r0, [sp, #48]	; 0x30
   1d3bc:	bl	4984 <realloc@plt>
   1d3c0:	ldr	r2, [sp, #64]	; 0x40
   1d3c4:	mov	r1, #32
   1d3c8:	str	r0, [sp, #48]	; 0x30
   1d3cc:	bl	4c00 <memset@plt>
   1d3d0:	ldr	r0, [sp, #60]	; 0x3c
   1d3d4:	sub	r1, fp, #72	; 0x48
   1d3d8:	mov	r2, #4
   1d3dc:	bl	4d98 <readstat_write_bytes@plt>
   1d3e0:	cmp	r0, #0
   1d3e4:	bne	1d528 <sav_begin_data+0x1d48>
   1d3e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1d3ec:	ldr	r0, [sp, #60]	; 0x3c
   1d3f0:	mov	r1, r6
   1d3f4:	bl	4d98 <readstat_write_bytes@plt>
   1d3f8:	cmp	r0, #0
   1d3fc:	bne	1d528 <sav_begin_data+0x1d48>
   1d400:	ldr	r0, [sp, #60]	; 0x3c
   1d404:	add	r1, sp, #64	; 0x40
   1d408:	mov	r2, #4
   1d40c:	bl	4d98 <readstat_write_bytes@plt>
   1d410:	cmp	r0, #0
   1d414:	bne	1d528 <sav_begin_data+0x1d48>
   1d418:	ldr	r0, [sp, #60]	; 0x3c
   1d41c:	add	r1, sp, #80	; 0x50
   1d420:	mov	r2, #4
   1d424:	bl	4d98 <readstat_write_bytes@plt>
   1d428:	cmp	r0, #0
   1d42c:	bne	1d528 <sav_begin_data+0x1d48>
   1d430:	ldr	r0, [sp, #80]	; 0x50
   1d434:	cmp	r0, #1
   1d438:	blt	1d4f8 <sav_begin_data+0x1d18>
   1d43c:	mov	r7, #0
   1d440:	mov	r0, r5
   1d444:	mov	r1, r7
   1d448:	bl	4e04 <readstat_get_value_label@plt>
   1d44c:	mov	r6, r0
   1d450:	ldr	r8, [r0, #20]
   1d454:	ldr	r0, [r0, #28]
   1d458:	add	r1, sp, #64	; 0x40
   1d45c:	mov	r2, #4
   1d460:	cmp	r0, #120	; 0x78
   1d464:	movge	r0, #120	; 0x78
   1d468:	str	r0, [fp, #-80]	; 0xffffffb0
   1d46c:	ldr	r0, [sp, #60]	; 0x3c
   1d470:	bl	4d98 <readstat_write_bytes@plt>
   1d474:	cmp	r0, #0
   1d478:	bne	1d528 <sav_begin_data+0x1d48>
   1d47c:	ldr	r1, [r6, #16]
   1d480:	ldr	r0, [sp, #60]	; 0x3c
   1d484:	mov	r2, r8
   1d488:	bl	4d98 <readstat_write_bytes@plt>
   1d48c:	cmp	r0, #0
   1d490:	bne	1d528 <sav_begin_data+0x1d48>
   1d494:	ldr	r0, [sp, #64]	; 0x40
   1d498:	cmp	r0, r8
   1d49c:	ble	1d4b8 <sav_begin_data+0x1cd8>
   1d4a0:	sub	r2, r0, r8
   1d4a4:	ldr	r0, [sp, #60]	; 0x3c
   1d4a8:	ldr	r1, [sp, #48]	; 0x30
   1d4ac:	bl	4d98 <readstat_write_bytes@plt>
   1d4b0:	cmp	r0, #0
   1d4b4:	bne	1d528 <sav_begin_data+0x1d48>
   1d4b8:	ldr	r0, [sp, #60]	; 0x3c
   1d4bc:	sub	r1, fp, #80	; 0x50
   1d4c0:	mov	r2, #4
   1d4c4:	bl	4d98 <readstat_write_bytes@plt>
   1d4c8:	cmp	r0, #0
   1d4cc:	bne	1d528 <sav_begin_data+0x1d48>
   1d4d0:	ldr	r1, [r6, #24]
   1d4d4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1d4d8:	ldr	r0, [sp, #60]	; 0x3c
   1d4dc:	bl	4d98 <readstat_write_bytes@plt>
   1d4e0:	cmp	r0, #0
   1d4e4:	bne	1d528 <sav_begin_data+0x1d48>
   1d4e8:	ldr	r0, [sp, #80]	; 0x50
   1d4ec:	add	r7, r7, #1
   1d4f0:	cmp	r7, r0
   1d4f4:	blt	1d440 <sav_begin_data+0x1c60>
   1d4f8:	add	r4, r4, #1
   1d4fc:	cmp	r4, r9
   1d500:	blt	1d380 <sav_begin_data+0x1ba0>
   1d504:	ldr	r0, [sp, #60]	; 0x3c
   1d508:	ldr	r1, [sp, #52]	; 0x34
   1d50c:	ldr	r0, [r0, #40]	; 0x28
   1d510:	add	r1, r1, #1
   1d514:	str	r1, [sp, #52]	; 0x34
   1d518:	cmp	r1, r0
   1d51c:	blt	1d314 <sav_begin_data+0x1b34>
   1d520:	mov	sl, #0
   1d524:	b	1d52c <sav_begin_data+0x1d4c>
   1d528:	mov	sl, r0
   1d52c:	ldr	r0, [sp, #48]	; 0x30
   1d530:	cmp	r0, #0
   1d534:	beq	1d540 <sav_begin_data+0x1d60>
   1d538:	ldr	r0, [sp, #48]	; 0x30
   1d53c:	bl	4864 <free@plt>
   1d540:	ldr	r0, [sp, #60]	; 0x3c
   1d544:	cmp	sl, #0
   1d548:	bne	1caf4 <sav_begin_data+0x1314>
   1d54c:	ldr	r1, [pc, #1176]	; 1d9ec <sav_begin_data+0x220c>
   1d550:	add	r1, pc, r1
   1d554:	vld1.64	{d16-d17}, [r1]
   1d558:	add	r1, sp, #136	; 0x88
   1d55c:	vst1.64	{d16-d17}, [r1]
   1d560:	ldr	r0, [r0, #28]
   1d564:	cmp	r0, #1
   1d568:	str	r0, [sp, #48]	; 0x30
   1d56c:	blt	1d8a8 <sav_begin_data+0x20c8>
   1d570:	ldr	r5, [sp, #48]	; 0x30
   1d574:	sub	r0, fp, #72	; 0x48
   1d578:	add	r6, sp, #80	; 0x50
   1d57c:	mov	r4, #0
   1d580:	add	r9, r0, #8
   1d584:	add	r8, r6, #8
   1d588:	ldr	r0, [sp, #60]	; 0x3c
   1d58c:	mov	r1, r4
   1d590:	bl	4ccc <readstat_get_variable@plt>
   1d594:	mov	r7, r0
   1d598:	add	r0, r0, #8
   1d59c:	bl	4b58 <strlen@plt>
   1d5a0:	str	r0, [sp, #52]	; 0x34
   1d5a4:	mov	r0, r7
   1d5a8:	bl	4c24 <readstat_variable_get_storage_width@plt>
   1d5ac:	cmp	r0, #9
   1d5b0:	blt	1d674 <sav_begin_data+0x1e94>
   1d5b4:	mov	r0, r7
   1d5b8:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
   1d5bc:	cmp	r0, #1
   1d5c0:	blt	1d674 <sav_begin_data+0x1e94>
   1d5c4:	mov	r5, #0
   1d5c8:	mov	sl, #0
   1d5cc:	mov	r0, r6
   1d5d0:	mov	r1, r7
   1d5d4:	mov	r2, r5
   1d5d8:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   1d5dc:	sub	r0, fp, #72	; 0x48
   1d5e0:	mov	r1, r7
   1d5e4:	mov	r2, r5
   1d5e8:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   1d5ec:	ldrd	r2, [r8]
   1d5f0:	ldr	r0, [sp, #80]	; 0x50
   1d5f4:	ldr	r1, [sp, #84]	; 0x54
   1d5f8:	bl	493c <readstat_string_value@plt>
   1d5fc:	mov	r6, r0
   1d600:	ldrd	r2, [r9]
   1d604:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1d608:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1d60c:	bl	493c <readstat_string_value@plt>
   1d610:	cmp	r6, #0
   1d614:	movne	r1, r0
   1d618:	cmpne	r0, #0
   1d61c:	beq	1d630 <sav_begin_data+0x1e50>
   1d620:	mov	r0, r6
   1d624:	bl	47b0 <strcmp@plt>
   1d628:	cmp	r0, #0
   1d62c:	addeq	sl, sl, #1
   1d630:	mov	r0, r7
   1d634:	add	r5, r5, #1
   1d638:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
   1d63c:	cmp	r5, r0
   1d640:	add	r6, sp, #80	; 0x50
   1d644:	blt	1d5cc <sav_begin_data+0x1dec>
   1d648:	ldr	r5, [sp, #48]	; 0x30
   1d64c:	cmp	sl, #0
   1d650:	beq	1d674 <sav_begin_data+0x1e94>
   1d654:	ldr	r1, [sp, #52]	; 0x34
   1d658:	mov	r0, #4
   1d65c:	orr	r0, r0, sl, lsl #3
   1d660:	add	r0, r1, r0
   1d664:	ldr	r1, [sp, #148]	; 0x94
   1d668:	add	r0, r0, r1
   1d66c:	add	r0, r0, #5
   1d670:	str	r0, [sp, #148]	; 0x94
   1d674:	add	r4, r4, #1
   1d678:	cmp	r4, r5
   1d67c:	bne	1d588 <sav_begin_data+0x1da8>
   1d680:	ldr	r0, [sp, #148]	; 0x94
   1d684:	cmp	r0, #0
   1d688:	beq	1d8a8 <sav_begin_data+0x20c8>
   1d68c:	ldr	r0, [sp, #60]	; 0x3c
   1d690:	add	r1, sp, #136	; 0x88
   1d694:	mov	r2, #16
   1d698:	bl	4d98 <readstat_write_bytes@plt>
   1d69c:	mov	sl, r0
   1d6a0:	cmp	r0, #0
   1d6a4:	bne	1caf4 <sav_begin_data+0x1314>
   1d6a8:	mov	r5, #0
   1d6ac:	ldr	r0, [sp, #60]	; 0x3c
   1d6b0:	mov	r1, r5
   1d6b4:	bl	4ccc <readstat_get_variable@plt>
   1d6b8:	mov	r6, r0
   1d6bc:	add	r0, r0, #8
   1d6c0:	str	r0, [sp, #52]	; 0x34
   1d6c4:	bl	4b58 <strlen@plt>
   1d6c8:	str	r0, [sp, #64]	; 0x40
   1d6cc:	mov	r0, #0
   1d6d0:	strb	r0, [fp, #-88]	; 0xffffffa8
   1d6d4:	mov	r0, r6
   1d6d8:	bl	4c24 <readstat_variable_get_storage_width@plt>
   1d6dc:	cmp	r0, #9
   1d6e0:	blt	1d898 <sav_begin_data+0x20b8>
   1d6e4:	mov	r0, r6
   1d6e8:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
   1d6ec:	cmp	r0, #1
   1d6f0:	blt	1d778 <sav_begin_data+0x1f98>
   1d6f4:	mov	r7, #0
   1d6f8:	add	r0, sp, #80	; 0x50
   1d6fc:	mov	r1, r6
   1d700:	mov	r2, r7
   1d704:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   1d708:	sub	r0, fp, #72	; 0x48
   1d70c:	mov	r1, r6
   1d710:	mov	r2, r7
   1d714:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   1d718:	ldrd	r2, [r8]
   1d71c:	ldr	r0, [sp, #80]	; 0x50
   1d720:	ldr	r1, [sp, #84]	; 0x54
   1d724:	bl	493c <readstat_string_value@plt>
   1d728:	mov	r4, r0
   1d72c:	ldrd	r2, [r9]
   1d730:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1d734:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1d738:	bl	493c <readstat_string_value@plt>
   1d73c:	cmp	r4, #0
   1d740:	movne	r1, r0
   1d744:	cmpne	r0, #0
   1d748:	beq	1d764 <sav_begin_data+0x1f84>
   1d74c:	mov	r0, r4
   1d750:	bl	47b0 <strcmp@plt>
   1d754:	cmp	r0, #0
   1d758:	ldrbeq	r0, [fp, #-88]	; 0xffffffa8
   1d75c:	addeq	r0, r0, #1
   1d760:	strbeq	r0, [fp, #-88]	; 0xffffffa8
   1d764:	mov	r0, r6
   1d768:	add	r7, r7, #1
   1d76c:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
   1d770:	cmp	r7, r0
   1d774:	blt	1d6f8 <sav_begin_data+0x1f18>
   1d778:	ldrb	r0, [fp, #-88]	; 0xffffffa8
   1d77c:	cmp	r0, #0
   1d780:	beq	1d898 <sav_begin_data+0x20b8>
   1d784:	ldr	r0, [sp, #60]	; 0x3c
   1d788:	add	r1, sp, #64	; 0x40
   1d78c:	mov	r2, #4
   1d790:	bl	4d98 <readstat_write_bytes@plt>
   1d794:	cmp	r0, #0
   1d798:	bne	1caf0 <sav_begin_data+0x1310>
   1d79c:	ldr	r2, [sp, #64]	; 0x40
   1d7a0:	ldr	r0, [sp, #60]	; 0x3c
   1d7a4:	ldr	r1, [sp, #52]	; 0x34
   1d7a8:	bl	4d98 <readstat_write_bytes@plt>
   1d7ac:	cmp	r0, #0
   1d7b0:	bne	1caf0 <sav_begin_data+0x1310>
   1d7b4:	ldr	r0, [sp, #60]	; 0x3c
   1d7b8:	sub	r1, fp, #88	; 0x58
   1d7bc:	mov	r2, #1
   1d7c0:	bl	4d98 <readstat_write_bytes@plt>
   1d7c4:	cmp	r0, #0
   1d7c8:	bne	1caf0 <sav_begin_data+0x1310>
   1d7cc:	mov	r0, #8
   1d7d0:	sub	r1, fp, #80	; 0x50
   1d7d4:	mov	r2, #4
   1d7d8:	str	r0, [fp, #-80]	; 0xffffffb0
   1d7dc:	ldr	r0, [sp, #60]	; 0x3c
   1d7e0:	bl	4d98 <readstat_write_bytes@plt>
   1d7e4:	cmp	r0, #0
   1d7e8:	bne	1caf0 <sav_begin_data+0x1310>
   1d7ec:	mov	r0, r6
   1d7f0:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
   1d7f4:	cmp	r0, #1
   1d7f8:	blt	1d898 <sav_begin_data+0x20b8>
   1d7fc:	mov	r4, #0
   1d800:	add	r0, sp, #80	; 0x50
   1d804:	mov	r1, r6
   1d808:	mov	r2, r4
   1d80c:	bl	48dc <readstat_variable_get_missing_range_lo@plt>
   1d810:	sub	r0, fp, #72	; 0x48
   1d814:	mov	r1, r6
   1d818:	mov	r2, r4
   1d81c:	bl	4c90 <readstat_variable_get_missing_range_hi@plt>
   1d820:	ldrd	r2, [r8]
   1d824:	ldr	r0, [sp, #80]	; 0x50
   1d828:	ldr	r1, [sp, #84]	; 0x54
   1d82c:	bl	493c <readstat_string_value@plt>
   1d830:	mov	r7, r0
   1d834:	ldrd	r2, [r9]
   1d838:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1d83c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1d840:	bl	493c <readstat_string_value@plt>
   1d844:	cmp	r7, #0
   1d848:	movne	r1, r0
   1d84c:	cmpne	r0, #0
   1d850:	bne	1d86c <sav_begin_data+0x208c>
   1d854:	mov	r0, r6
   1d858:	add	r4, r4, #1
   1d85c:	bl	4c60 <readstat_variable_get_missing_ranges_count@plt>
   1d860:	cmp	r4, r0
   1d864:	blt	1d800 <sav_begin_data+0x2020>
   1d868:	b	1d898 <sav_begin_data+0x20b8>
   1d86c:	mov	r0, r7
   1d870:	bl	47b0 <strcmp@plt>
   1d874:	cmp	r0, #0
   1d878:	bne	1d854 <sav_begin_data+0x2074>
   1d87c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1d880:	ldr	r0, [sp, #60]	; 0x3c
   1d884:	mov	r1, r7
   1d888:	bl	4e88 <readstat_write_space_padded_string@plt>
   1d88c:	cmp	r0, #0
   1d890:	beq	1d854 <sav_begin_data+0x2074>
   1d894:	b	1caf0 <sav_begin_data+0x1310>
   1d898:	ldr	r0, [sp, #48]	; 0x30
   1d89c:	add	r5, r5, #1
   1d8a0:	cmp	r5, r0
   1d8a4:	blt	1d6ac <sav_begin_data+0x1ecc>
   1d8a8:	ldr	r0, [pc, #320]	; 1d9f0 <sav_begin_data+0x2210>
   1d8ac:	add	r1, sp, #136	; 0x88
   1d8b0:	add	r0, pc, r0
   1d8b4:	vld1.64	{d16-d17}, [r0]
   1d8b8:	mov	r0, #0
   1d8bc:	str	r0, [sp, #84]	; 0x54
   1d8c0:	mov	r0, #1
   1d8c4:	str	r0, [sp, #80]	; 0x50
   1d8c8:	ldr	r0, [sp, #60]	; 0x3c
   1d8cc:	vst1.64	{d16-d17}, [r1]
   1d8d0:	ldr	r2, [r0, #80]	; 0x50
   1d8d4:	str	r2, [fp, #-72]	; 0xffffffb8
   1d8d8:	asr	r2, r2, #31
   1d8dc:	str	r2, [fp, #-68]	; 0xffffffbc
   1d8e0:	mov	r2, #16
   1d8e4:	bl	4d98 <readstat_write_bytes@plt>
   1d8e8:	mov	sl, r0
   1d8ec:	cmp	r0, #0
   1d8f0:	bne	1d924 <sav_begin_data+0x2144>
   1d8f4:	ldr	r0, [sp, #60]	; 0x3c
   1d8f8:	add	r1, sp, #80	; 0x50
   1d8fc:	mov	r2, #8
   1d900:	bl	4d98 <readstat_write_bytes@plt>
   1d904:	mov	sl, r0
   1d908:	cmp	r0, #0
   1d90c:	bne	1d924 <sav_begin_data+0x2144>
   1d910:	ldr	r0, [sp, #60]	; 0x3c
   1d914:	sub	r1, fp, #72	; 0x48
   1d918:	mov	r2, #8
   1d91c:	bl	4d98 <readstat_write_bytes@plt>
   1d920:	mov	sl, r0
   1d924:	ldr	r0, [sp, #60]	; 0x3c
   1d928:	cmp	sl, #0
   1d92c:	bne	1caf4 <sav_begin_data+0x1314>
   1d930:	mov	r1, #0
   1d934:	mov	r2, #8
   1d938:	str	r1, [sp, #140]	; 0x8c
   1d93c:	movw	r1, #999	; 0x3e7
   1d940:	str	r1, [sp, #136]	; 0x88
   1d944:	add	r1, sp, #136	; 0x88
   1d948:	bl	4d98 <readstat_write_bytes@plt>
   1d94c:	mov	sl, r0
   1d950:	ldr	r0, [sp, #56]	; 0x38
   1d954:	bl	4864 <free@plt>
   1d958:	cmp	sl, #0
   1d95c:	bne	1cafc <sav_begin_data+0x131c>
   1d960:	ldr	r4, [sp, #60]	; 0x3c
   1d964:	ldr	r0, [r4, #76]	; 0x4c
   1d968:	bl	496c <sav_compressed_row_bound@plt>
   1d96c:	ldr	r1, [r4, #16]
   1d970:	cmp	r1, #2
   1d974:	beq	1d994 <sav_begin_data+0x21b4>
   1d978:	cmp	r1, #1
   1d97c:	bne	1d9b0 <sav_begin_data+0x21d0>
   1d980:	bl	4b88 <readstat_malloc@plt>
   1d984:	ldr	r1, [sp, #60]	; 0x3c
   1d988:	mov	sl, #0
   1d98c:	str	r0, [r1, #300]	; 0x12c
   1d990:	b	1cafc <sav_begin_data+0x131c>
   1d994:	ldr	r4, [sp, #60]	; 0x3c
   1d998:	mov	r3, #0
   1d99c:	mov	sl, #0
   1d9a0:	ldr	r2, [r4, #4]
   1d9a4:	bl	4a2c <zsav_ctx_init@plt>
   1d9a8:	str	r0, [r4, #300]	; 0x12c
   1d9ac:	b	1cafc <sav_begin_data+0x131c>
   1d9b0:	mov	sl, #0
   1d9b4:	b	1cafc <sav_begin_data+0x131c>
   1d9b8:	.word	0x0000dcfc
   1d9bc:	.word	0x0000dc5c
   1d9c0:	.word	0x0000dc10
   1d9c4:	.word	0x0000d7fc
   1d9c8:	.word	0x0000da1c
   1d9cc:	.word	0x0000d520
   1d9d0:	.word	0x0000d43c
   1d9d4:	.word	0x0000d7ec
   1d9d8:	.word	0x0000d707
   1d9dc:	.word	0x0000d2b0
   1d9e0:	.word	0x0000d1c8
   1d9e4:	.word	0x0000d5b3
   1d9e8:	.word	0x0000d630
   1d9ec:	.word	0x0000d2a0
   1d9f0:	.word	0x0000cf50

0001d9f4 <sav_write_compressed_row>:
   1d9f4:	push	{r4, r5, fp, lr}
   1d9f8:	add	fp, sp, #8
   1d9fc:	ldr	r5, [r0, #300]	; 0x12c
   1da00:	mov	r4, r0
   1da04:	mov	r3, r4
   1da08:	mov	r0, r5
   1da0c:	bl	4da4 <sav_compress_row@plt>
   1da10:	mov	r2, r0
   1da14:	mov	r0, r4
   1da18:	mov	r1, r5
   1da1c:	pop	{r4, r5, fp, lr}
   1da20:	b	4d98 <readstat_write_bytes@plt>

0001da24 <spss_format>:
   1da24:	push	{r4, sl, fp, lr}
   1da28:	add	fp, sp, #8
   1da2c:	sub	sp, sp, #8
   1da30:	ldr	lr, [r2]
   1da34:	mov	ip, #0
   1da38:	cmp	lr, #41	; 0x29
   1da3c:	bhi	1daa8 <spss_format+0x84>
   1da40:	ldr	r3, [pc, #108]	; 1dab4 <spss_format+0x90>
   1da44:	add	r3, pc, r3
   1da48:	ldrb	r4, [r3, lr, lsl #4]!
   1da4c:	cmp	r4, #0
   1da50:	beq	1daa8 <spss_format+0x84>
   1da54:	ldr	ip, [r2, #4]
   1da58:	ldr	r2, [r2, #8]
   1da5c:	cmp	lr, #5
   1da60:	beq	1da84 <spss_format+0x60>
   1da64:	cmp	r2, #0
   1da68:	bne	1da84 <spss_format+0x60>
   1da6c:	cmp	ip, #0
   1da70:	beq	1da98 <spss_format+0x74>
   1da74:	str	ip, [sp]
   1da78:	ldr	r2, [pc, #60]	; 1dabc <spss_format+0x98>
   1da7c:	add	r2, pc, r2
   1da80:	b	1daa0 <spss_format+0x7c>
   1da84:	str	ip, [sp]
   1da88:	str	r2, [sp, #4]
   1da8c:	ldr	r2, [pc, #36]	; 1dab8 <spss_format+0x94>
   1da90:	add	r2, pc, r2
   1da94:	b	1daa0 <spss_format+0x7c>
   1da98:	ldr	r2, [pc, #32]	; 1dac0 <spss_format+0x9c>
   1da9c:	add	r2, pc, r2
   1daa0:	bl	4bdc <snprintf@plt>
   1daa4:	mov	ip, #1
   1daa8:	mov	r0, ip
   1daac:	sub	sp, fp, #8
   1dab0:	pop	{r4, sl, fp, pc}
   1dab4:	.word	0x0002d000
   1dab8:	.word	0x0000bc6a
   1dabc:	.word	0x0000bc86
   1dac0:	.word	0x0000c850

0001dac4 <spss_varinfo_compare>:
   1dac4:	ldr	r2, [r0]
   1dac8:	ldr	r0, [r1]
   1dacc:	ldr	r1, [r0, #12]
   1dad0:	mov	r0, #0
   1dad4:	cmp	r2, r1
   1dad8:	movwgt	r0, #1
   1dadc:	mvnlt	r0, #0
   1dae0:	bx	lr

0001dae4 <spss_varinfo_free>:
   1dae4:	cmp	r0, #0
   1dae8:	bxeq	lr
   1daec:	push	{r4, sl, fp, lr}
   1daf0:	add	fp, sp, #8
   1daf4:	mov	r4, r0
   1daf8:	ldr	r0, [r0, #264]	; 0x108
   1dafc:	cmp	r0, #0
   1db00:	beq	1db08 <spss_varinfo_free+0x24>
   1db04:	bl	4864 <free@plt>
   1db08:	mov	r0, r4
   1db0c:	pop	{r4, sl, fp, lr}
   1db10:	b	4864 <free@plt>

0001db14 <spss_64bit_value>:
   1db14:	push	{r4, r5, r6, r7, fp, lr}
   1db18:	add	fp, sp, #16
   1db1c:	vpush	{d8}
   1db20:	bl	4b1c <readstat_double_value@plt>
   1db24:	vmov.f64	d8, d0
   1db28:	bl	4978 <__isinf@plt>
   1db2c:	mov	r1, r0
   1db30:	mvn	r2, #1048576	; 0x100000
   1db34:	mvn	r0, #1
   1db38:	cmp	r1, #0
   1db3c:	beq	1db60 <spss_64bit_value+0x4c>
   1db40:	movw	r1, #65535	; 0xffff
   1db44:	vcmpe.f64	d8, #0.0
   1db48:	vmrs	APSR_nzcv, fpscr
   1db4c:	movt	r1, #32751	; 0x7fef
   1db50:	mvnpl	r0, #0
   1db54:	movmi	r1, r2
   1db58:	vpop	{d8}
   1db5c:	pop	{r4, r5, r6, r7, fp, pc}
   1db60:	adds	r6, r0, #1
   1db64:	vmov.f64	d0, d8
   1db68:	vmov	r4, r5, d8
   1db6c:	adc	r7, r2, #0
   1db70:	bl	4c84 <__isnan@plt>
   1db74:	cmp	r0, #0
   1db78:	movne	r4, r6
   1db7c:	movne	r5, r7
   1db80:	mov	r0, r4
   1db84:	mov	r1, r5
   1db88:	vpop	{d8}
   1db8c:	pop	{r4, r5, r6, r7, fp, pc}

0001db90 <spss_missingness_for_info>:
   1db90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db94:	add	fp, sp, #28
   1db98:	sub	sp, sp, #4
   1db9c:	vpush	{d8}
   1dba0:	sub	sp, sp, #8
   1dba4:	mov	r8, r1
   1dba8:	mov	r1, #0
   1dbac:	mov	r2, #520	; 0x208
   1dbb0:	mov	sl, r0
   1dbb4:	bl	4c00 <memset@plt>
   1dbb8:	ldr	r0, [r8, #56]	; 0x38
   1dbbc:	cmp	r0, #0
   1dbc0:	beq	1dbf4 <spss_missingness_for_info+0x64>
   1dbc4:	mov	r0, #1
   1dbc8:	str	r0, [sl, #512]	; 0x200
   1dbcc:	ldr	r6, [r8]
   1dbd0:	cmp	r6, #5
   1dbd4:	bne	1dc8c <spss_missingness_for_info+0xfc>
   1dbd8:	vldr	d8, [r8, #64]	; 0x40
   1dbdc:	vorr	d0, d8, d8
   1dbe0:	vstr	d8, [sp]
   1dbe4:	bl	4c84 <__isnan@plt>
   1dbe8:	and	r1, r0, #1
   1dbec:	mov	r0, #5
   1dbf0:	b	1dca0 <spss_missingness_for_info+0x110>
   1dbf4:	ldr	r6, [r8, #52]	; 0x34
   1dbf8:	cmp	r6, #1
   1dbfc:	blt	1dd6c <spss_missingness_for_info+0x1dc>
   1dc00:	str	r6, [sl, #512]	; 0x200
   1dc04:	mov	r7, r8
   1dc08:	mov	r2, #0
   1dc0c:	mov	r4, #0
   1dc10:	ldr	r5, [r7], #88	; 0x58
   1dc14:	cmp	r5, #5
   1dc18:	bne	1dc48 <spss_missingness_for_info+0xb8>
   1dc1c:	add	r0, r8, r4
   1dc20:	vldr	d8, [r0, #64]	; 0x40
   1dc24:	vorr	d0, d8, d8
   1dc28:	vstr	d8, [sp]
   1dc2c:	bl	4c84 <__isnan@plt>
   1dc30:	and	r0, r0, #1
   1dc34:	bic	r1, r9, #3
   1dc38:	mov	r2, #0
   1dc3c:	orr	r9, r0, r1
   1dc40:	mov	r0, #5
   1dc44:	b	1dc58 <spss_missingness_for_info+0xc8>
   1dc48:	str	r7, [sp]
   1dc4c:	and	r9, r9, #252	; 0xfc
   1dc50:	mov	r0, #0
   1dc54:	vldr	d8, [sp]
   1dc58:	add	r1, sl, r4, lsl #2
   1dc5c:	add	r7, r7, #33	; 0x21
   1dc60:	add	r4, r4, #8
   1dc64:	subs	r6, r6, #1
   1dc68:	str	r0, [r1, #24]
   1dc6c:	vstr	d8, [r1, #16]
   1dc70:	strb	r2, [r1, #28]
   1dc74:	strb	r9, [r1, #29]
   1dc78:	add	r0, r1, #16
   1dc7c:	vld1.64	{d16-d17}, [r0]
   1dc80:	vst1.64	{d16-d17}, [r1]
   1dc84:	bne	1dc14 <spss_missingness_for_info+0x84>
   1dc88:	b	1dd6c <spss_missingness_for_info+0x1dc>
   1dc8c:	add	r0, r8, #88	; 0x58
   1dc90:	mov	r1, #0
   1dc94:	str	r0, [sp]
   1dc98:	mov	r0, #0
   1dc9c:	vldr	d8, [sp]
   1dca0:	str	r0, [sl, #8]
   1dca4:	mov	r0, #0
   1dca8:	cmp	r6, #5
   1dcac:	vstr	d8, [sl]
   1dcb0:	strb	r0, [sl, #12]
   1dcb4:	strb	r1, [sl, #13]
   1dcb8:	bne	1dcd8 <spss_missingness_for_info+0x148>
   1dcbc:	vldr	d8, [r8, #72]	; 0x48
   1dcc0:	vorr	d0, d8, d8
   1dcc4:	vstr	d8, [sp]
   1dcc8:	bl	4c84 <__isnan@plt>
   1dccc:	and	r0, r0, #1
   1dcd0:	mov	r1, #5
   1dcd4:	b	1dce8 <spss_missingness_for_info+0x158>
   1dcd8:	add	r1, r8, #121	; 0x79
   1dcdc:	str	r1, [sp]
   1dce0:	mov	r1, #0
   1dce4:	vldr	d8, [sp]
   1dce8:	str	r1, [sl, #24]
   1dcec:	mov	r1, #0
   1dcf0:	vstr	d8, [sl, #16]
   1dcf4:	strb	r1, [sl, #28]
   1dcf8:	strb	r0, [sl, #29]
   1dcfc:	ldr	r0, [r8, #52]	; 0x34
   1dd00:	cmp	r0, #3
   1dd04:	bne	1dd6c <spss_missingness_for_info+0x1dc>
   1dd08:	mov	r0, #2
   1dd0c:	add	r5, sl, #48	; 0x30
   1dd10:	add	r4, sl, #32
   1dd14:	cmp	r6, #5
   1dd18:	str	r0, [sl, #512]	; 0x200
   1dd1c:	bne	1dd3c <spss_missingness_for_info+0x1ac>
   1dd20:	vldr	d8, [r8, #80]	; 0x50
   1dd24:	vorr	d0, d8, d8
   1dd28:	vstr	d8, [sp]
   1dd2c:	bl	4c84 <__isnan@plt>
   1dd30:	and	r0, r0, #1
   1dd34:	mov	r1, #5
   1dd38:	b	1dd50 <spss_missingness_for_info+0x1c0>
   1dd3c:	add	r0, r8, #154	; 0x9a
   1dd40:	mov	r1, #0
   1dd44:	str	r0, [sp]
   1dd48:	mov	r0, #0
   1dd4c:	vldr	d8, [sp]
   1dd50:	str	r1, [sl, #56]	; 0x38
   1dd54:	mov	r1, #0
   1dd58:	vstr	d8, [sl, #48]	; 0x30
   1dd5c:	strb	r1, [sl, #60]	; 0x3c
   1dd60:	strb	r0, [sl, #61]	; 0x3d
   1dd64:	vld1.64	{d16-d17}, [r5]
   1dd68:	vst1.64	{d16-d17}, [r4]
   1dd6c:	sub	sp, fp, #40	; 0x28
   1dd70:	vpop	{d8}
   1dd74:	add	sp, sp, #4
   1dd78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001dd7c <spss_init_variable_for_info>:
   1dd7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1dd80:	add	fp, sp, #24
   1dd84:	sub	sp, sp, #528	; 0x210
   1dd88:	mov	r7, r1
   1dd8c:	mov	r4, r0
   1dd90:	mov	r0, #1
   1dd94:	movw	r1, #2152	; 0x868
   1dd98:	mov	r6, r2
   1dd9c:	bl	472c <calloc@plt>
   1dda0:	ldr	r1, [r4, #8]
   1dda4:	str	r7, [r0, #2148]	; 0x864
   1dda8:	mov	r5, r0
   1ddac:	mov	r2, r4
   1ddb0:	ldr	r0, [r4]
   1ddb4:	strd	r0, [r5]
   1ddb8:	ldr	r0, [r4, #20]
   1ddbc:	cmp	r0, #0
   1ddc0:	ldreq	r0, [r4, #16]
   1ddc4:	lsleq	r0, r0, #3
   1ddc8:	str	r0, [r5, #1596]	; 0x63c
   1ddcc:	add	r0, r5, #8
   1ddd0:	ldrb	r1, [r2, #196]!	; 0xc4
   1ddd4:	cmp	r1, #0
   1ddd8:	beq	1ddec <spss_init_variable_for_info+0x70>
   1dddc:	str	r6, [sp]
   1dde0:	mov	r1, #300	; 0x12c
   1dde4:	mov	r3, #65	; 0x41
   1dde8:	b	1ddfc <spss_init_variable_for_info+0x80>
   1ddec:	add	r2, r4, #187	; 0xbb
   1ddf0:	mov	r1, #300	; 0x12c
   1ddf4:	mov	r3, #9
   1ddf8:	str	r6, [sp]
   1ddfc:	bl	4b94 <readstat_convert@plt>
   1de00:	ldr	r3, [r4, #264]	; 0x108
   1de04:	cmp	r3, #0
   1de08:	beq	1de20 <spss_init_variable_for_info+0xa4>
   1de0c:	ldr	r2, [pc, #200]	; 1dedc <spss_init_variable_for_info+0x160>
   1de10:	add	r0, r5, #564	; 0x234
   1de14:	mov	r1, #1024	; 0x400
   1de18:	add	r2, pc, r2
   1de1c:	bl	4bdc <snprintf@plt>
   1de20:	ldr	r2, [r4, #24]
   1de24:	cmp	r2, #41	; 0x29
   1de28:	bhi	1de94 <spss_init_variable_for_info+0x118>
   1de2c:	ldr	r3, [pc, #172]	; 1dee0 <spss_init_variable_for_info+0x164>
   1de30:	add	r3, pc, r3
   1de34:	ldrb	r0, [r3, r2, lsl #4]!
   1de38:	cmp	r0, #0
   1de3c:	beq	1de94 <spss_init_variable_for_info+0x118>
   1de40:	ldr	r1, [r4, #28]
   1de44:	ldr	r7, [r4, #32]
   1de48:	add	r0, r5, #308	; 0x134
   1de4c:	cmp	r2, #5
   1de50:	beq	1de74 <spss_init_variable_for_info+0xf8>
   1de54:	cmp	r7, #0
   1de58:	bne	1de74 <spss_init_variable_for_info+0xf8>
   1de5c:	cmp	r1, #0
   1de60:	beq	1de84 <spss_init_variable_for_info+0x108>
   1de64:	str	r1, [sp]
   1de68:	ldr	r2, [pc, #120]	; 1dee8 <spss_init_variable_for_info+0x16c>
   1de6c:	add	r2, pc, r2
   1de70:	b	1de8c <spss_init_variable_for_info+0x110>
   1de74:	stm	sp, {r1, r7}
   1de78:	ldr	r2, [pc, #100]	; 1dee4 <spss_init_variable_for_info+0x168>
   1de7c:	add	r2, pc, r2
   1de80:	b	1de8c <spss_init_variable_for_info+0x110>
   1de84:	ldr	r2, [pc, #96]	; 1deec <spss_init_variable_for_info+0x170>
   1de88:	add	r2, pc, r2
   1de8c:	mov	r1, #256	; 0x100
   1de90:	bl	4bdc <snprintf@plt>
   1de94:	add	r6, sp, #8
   1de98:	mov	r1, r4
   1de9c:	mov	r0, r6
   1dea0:	bl	4e64 <spss_missingness_for_info@plt>
   1dea4:	movw	r0, #1608	; 0x648
   1dea8:	mov	r1, r6
   1deac:	mov	r2, #520	; 0x208
   1deb0:	add	r0, r5, r0
   1deb4:	bl	48b8 <memcpy@plt>
   1deb8:	ldr	r0, [r4, #268]	; 0x10c
   1debc:	str	r0, [r5, #2128]	; 0x850
   1dec0:	ldr	r0, [r4, #276]	; 0x114
   1dec4:	cmp	r0, #0
   1dec8:	ldreq	r0, [r4, #28]
   1decc:	str	r0, [r5, #2136]	; 0x858
   1ded0:	mov	r0, r5
   1ded4:	sub	sp, fp, #24
   1ded8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1dedc:	.word	0x0000c4d4
   1dee0:	.word	0x0002cc14
   1dee4:	.word	0x0000b87e
   1dee8:	.word	0x0000b896
   1deec:	.word	0x0000c464

0001def0 <spss_measure_from_readstat_measure>:
   1def0:	sub	r1, r0, #1
   1def4:	cmp	r1, #3
   1def8:	movcs	r0, #0
   1defc:	bx	lr

0001df00 <spss_measure_to_readstat_measure>:
   1df00:	sub	r1, r0, #1
   1df04:	cmp	r1, #3
   1df08:	movcs	r0, #0
   1df0c:	bx	lr

0001df10 <spss_alignment_from_readstat_alignment>:
   1df10:	sub	r1, r0, #2
   1df14:	cmp	r0, #3
   1df18:	clz	r1, r1
   1df1c:	lsr	r1, r1, #5
   1df20:	lsl	r1, r1, #1
   1df24:	movweq	r1, #1
   1df28:	mov	r0, r1
   1df2c:	bx	lr

0001df30 <spss_alignment_to_readstat_alignment>:
   1df30:	cmp	r0, #2
   1df34:	ldrls	r1, [pc, #12]	; 1df48 <spss_alignment_to_readstat_alignment+0x18>
   1df38:	movhi	r0, #0
   1df3c:	addls	r1, pc, r1
   1df40:	ldrls	r0, [r1, r0, lsl #2]
   1df44:	bx	lr
   1df48:	.word	0x0000c8d4

0001df4c <spss_format_for_variable>:
   1df4c:	push	{r4, r5, fp, lr}
   1df50:	add	fp, sp, #8
   1df54:	mov	r5, r0
   1df58:	mov	r0, #0
   1df5c:	mov	r4, r1
   1df60:	str	r0, [r1]
   1df64:	str	r0, [r1, #4]
   1df68:	str	r0, [r1, #8]
   1df6c:	ldr	r0, [r5]
   1df70:	cmp	r0, #0
   1df74:	beq	1dfa4 <spss_format_for_variable+0x58>
   1df78:	mov	r1, #5
   1df7c:	bic	r0, r0, #1
   1df80:	str	r1, [r4]
   1df84:	ldr	r1, [r5, #2136]	; 0x858
   1df88:	cmp	r1, #0
   1df8c:	movweq	r1, #8
   1df90:	cmp	r0, #4
   1df94:	moveq	r0, #2
   1df98:	str	r1, [r4, #4]
   1df9c:	streq	r0, [r4, #8]
   1dfa0:	b	1dfc8 <spss_format_for_variable+0x7c>
   1dfa4:	mov	r0, #1
   1dfa8:	str	r0, [r4]
   1dfac:	ldr	r0, [r5, #2136]	; 0x858
   1dfb0:	cmp	r0, #0
   1dfb4:	bne	1dfc4 <spss_format_for_variable+0x78>
   1dfb8:	ldr	r0, [r5, #1600]	; 0x640
   1dfbc:	cmp	r0, #0
   1dfc0:	ldreq	r0, [r5, #1596]	; 0x63c
   1dfc4:	str	r0, [r4, #4]
   1dfc8:	ldrb	r0, [r5, #308]!	; 0x134
   1dfcc:	cmp	r0, #0
   1dfd0:	moveq	r0, #0
   1dfd4:	popeq	{r4, r5, fp, pc}
   1dfd8:	mov	r0, #0
   1dfdc:	str	r0, [r4, #8]
   1dfe0:	mov	r0, r5
   1dfe4:	bl	4b58 <strlen@plt>
   1dfe8:	mov	r1, r0
   1dfec:	mov	r0, r5
   1dff0:	mov	r2, r4
   1dff4:	bl	48c4 <spss_parse_format@plt>
   1dff8:	cmp	r0, #0
   1dffc:	movwne	r0, #11
   1e000:	pop	{r4, r5, fp, pc}

0001e004 <spss_parse_format>:
   1e004:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e008:	add	fp, sp, #28
   1e00c:	sub	sp, sp, #8
   1e010:	add	r7, r0, r1
   1e014:	cmp	r1, #0
   1e018:	str	r7, [sp]
   1e01c:	beq	1e488 <spss_parse_format+0x484>
   1e020:	mov	r1, #0
   1e024:	mov	ip, #1
   1e028:	str	r1, [sp, #4]
   1e02c:	ldr	r1, [pc, #1860]	; 1e778 <spss_parse_format+0x774>
   1e030:	add	r1, pc, r1
   1e034:	ldrb	r5, [r1, ip]
   1e038:	ldr	r1, [pc, #1852]	; 1e77c <spss_parse_format+0x778>
   1e03c:	ldr	r3, [pc, #1852]	; 1e780 <spss_parse_format+0x77c>
   1e040:	add	r1, pc, r1
   1e044:	add	r3, pc, r3
   1e048:	cmp	r5, #0
   1e04c:	add	r1, r1, ip, lsl #1
   1e050:	ldrsh	r1, [r1]
   1e054:	add	lr, r3, r1
   1e058:	ldr	r1, [pc, #1828]	; 1e784 <spss_parse_format+0x780>
   1e05c:	add	r1, pc, r1
   1e060:	add	r1, r1, ip, lsl #1
   1e064:	ldrsh	r8, [r1]
   1e068:	beq	1e0c4 <spss_parse_format+0xc0>
   1e06c:	add	sl, lr, r5
   1e070:	sub	r1, sl, #1
   1e074:	cmp	r1, lr
   1e078:	bcc	1e0b8 <spss_parse_format+0xb4>
   1e07c:	ldrb	r7, [r0]
   1e080:	mov	r4, lr
   1e084:	sub	r9, r1, r4
   1e088:	mov	r3, r4
   1e08c:	ldrb	r6, [r3, r9, asr #1]!
   1e090:	cmp	r7, r6
   1e094:	bcs	1e0a8 <spss_parse_format+0xa4>
   1e098:	sub	r1, r3, #1
   1e09c:	cmp	r1, r4
   1e0a0:	bcs	1e084 <spss_parse_format+0x80>
   1e0a4:	b	1e0b8 <spss_parse_format+0xb4>
   1e0a8:	bls	1e148 <spss_parse_format+0x144>
   1e0ac:	add	r4, r3, #1
   1e0b0:	cmp	r1, r4
   1e0b4:	bcs	1e084 <spss_parse_format+0x80>
   1e0b8:	ldr	r7, [sp]
   1e0bc:	add	r8, r5, r8
   1e0c0:	b	1e0c8 <spss_parse_format+0xc4>
   1e0c4:	mov	sl, lr
   1e0c8:	ldr	r1, [pc, #1720]	; 1e788 <spss_parse_format+0x784>
   1e0cc:	mvn	r5, #1
   1e0d0:	add	r1, pc, r1
   1e0d4:	ldrb	ip, [r1, ip]
   1e0d8:	cmp	ip, #0
   1e0dc:	beq	1e13c <spss_parse_format+0x138>
   1e0e0:	add	r1, sl, ip, lsl #1
   1e0e4:	sub	r4, r1, #2
   1e0e8:	cmp	r4, sl
   1e0ec:	bcc	1e16c <spss_parse_format+0x168>
   1e0f0:	ldrb	r1, [r0]
   1e0f4:	mov	r7, sl
   1e0f8:	sub	r3, r4, r7
   1e0fc:	and	r6, r5, r3, asr #1
   1e100:	mov	r3, r7
   1e104:	ldrb	r6, [r3, r6]!
   1e108:	cmp	r1, r6
   1e10c:	bcs	1e120 <spss_parse_format+0x11c>
   1e110:	sub	r4, r3, #2
   1e114:	cmp	r4, r7
   1e118:	bcs	1e0f8 <spss_parse_format+0xf4>
   1e11c:	b	1e168 <spss_parse_format+0x164>
   1e120:	ldrb	r7, [r3, #1]
   1e124:	cmp	r1, r7
   1e128:	bls	1e160 <spss_parse_format+0x15c>
   1e12c:	add	r7, r3, #2
   1e130:	cmp	r4, r7
   1e134:	bcs	1e0f8 <spss_parse_format+0xf4>
   1e138:	b	1e168 <spss_parse_format+0x164>
   1e13c:	ldr	r4, [pc, #1608]	; 1e78c <spss_parse_format+0x788>
   1e140:	add	r4, pc, r4
   1e144:	b	1e178 <spss_parse_format+0x174>
   1e148:	ldr	r7, [sp]
   1e14c:	ldr	r4, [pc, #1620]	; 1e7a8 <spss_parse_format+0x7a4>
   1e150:	sub	r1, r8, lr
   1e154:	add	r8, r1, r3
   1e158:	add	r4, pc, r4
   1e15c:	b	1e178 <spss_parse_format+0x174>
   1e160:	sub	r1, r3, sl
   1e164:	asr	ip, r1, #1
   1e168:	ldr	r7, [sp]
   1e16c:	ldr	r4, [pc, #1564]	; 1e790 <spss_parse_format+0x78c>
   1e170:	add	r8, ip, r8
   1e174:	add	r4, pc, r4
   1e178:	ldr	r1, [pc, #1556]	; 1e794 <spss_parse_format+0x790>
   1e17c:	add	r1, pc, r1
   1e180:	ldrb	lr, [r1, r8]
   1e184:	ldr	r1, [pc, #1548]	; 1e798 <spss_parse_format+0x794>
   1e188:	add	r1, pc, r1
   1e18c:	ldrb	r1, [r1, lr]
   1e190:	cmp	r1, #0
   1e194:	ldrbne	r3, [r4, r1]
   1e198:	cmpne	r3, #0
   1e19c:	beq	1e464 <spss_parse_format+0x460>
   1e1a0:	add	r1, r4, r1
   1e1a4:	rsb	r4, r3, #0
   1e1a8:	add	r6, r1, #1
   1e1ac:	ldrb	r1, [r6]
   1e1b0:	cmp	r1, #40	; 0x28
   1e1b4:	bhi	1e458 <spss_parse_format+0x454>
   1e1b8:	add	r3, pc, #4
   1e1bc:	ldr	r1, [r3, r1, lsl #2]
   1e1c0:	add	pc, r3, r1
   1e1c4:	.word	0x000000a4
   1e1c8:	.word	0x000000b0
   1e1cc:	.word	0x000000cc
   1e1d0:	.word	0x00000294
   1e1d4:	.word	0x000000d4
   1e1d8:	.word	0x000000e0
   1e1dc:	.word	0x000000ec
   1e1e0:	.word	0x000000f8
   1e1e4:	.word	0x00000104
   1e1e8:	.word	0x00000110
   1e1ec:	.word	0x0000011c
   1e1f0:	.word	0x00000128
   1e1f4:	.word	0x00000134
   1e1f8:	.word	0x00000140
   1e1fc:	.word	0x0000014c
   1e200:	.word	0x00000158
   1e204:	.word	0x00000164
   1e208:	.word	0x00000170
   1e20c:	.word	0x0000017c
   1e210:	.word	0x00000188
   1e214:	.word	0x00000194
   1e218:	.word	0x000001a0
   1e21c:	.word	0x000001ac
   1e220:	.word	0x000001b8
   1e224:	.word	0x000001c4
   1e228:	.word	0x000001d0
   1e22c:	.word	0x000001dc
   1e230:	.word	0x000001e8
   1e234:	.word	0x000001f4
   1e238:	.word	0x00000200
   1e23c:	.word	0x0000020c
   1e240:	.word	0x00000218
   1e244:	.word	0x00000224
   1e248:	.word	0x00000230
   1e24c:	.word	0x0000023c
   1e250:	.word	0x00000248
   1e254:	.word	0x00000254
   1e258:	.word	0x00000260
   1e25c:	.word	0x0000026c
   1e260:	.word	0x00000278
   1e264:	.word	0x00000284
   1e268:	mov	r1, #0
   1e26c:	str	r1, [sp, #4]
   1e270:	b	1e458 <spss_parse_format+0x454>
   1e274:	ldr	r3, [sp, #4]
   1e278:	ldrb	r1, [r0]
   1e27c:	add	r3, r3, r3, lsl #2
   1e280:	add	r1, r1, r3, lsl #1
   1e284:	sub	r1, r1, #48	; 0x30
   1e288:	str	r1, [sp, #4]
   1e28c:	b	1e458 <spss_parse_format+0x454>
   1e290:	ldr	r1, [sp, #4]
   1e294:	b	1e454 <spss_parse_format+0x450>
   1e298:	mov	r1, #1
   1e29c:	str	r1, [r2]
   1e2a0:	b	1e458 <spss_parse_format+0x454>
   1e2a4:	mov	r1, #2
   1e2a8:	str	r1, [r2]
   1e2ac:	b	1e458 <spss_parse_format+0x454>
   1e2b0:	mov	r1, #3
   1e2b4:	str	r1, [r2]
   1e2b8:	b	1e458 <spss_parse_format+0x454>
   1e2bc:	mov	r1, #4
   1e2c0:	str	r1, [r2]
   1e2c4:	b	1e458 <spss_parse_format+0x454>
   1e2c8:	mov	r1, #5
   1e2cc:	str	r1, [r2]
   1e2d0:	b	1e458 <spss_parse_format+0x454>
   1e2d4:	mov	r1, #6
   1e2d8:	str	r1, [r2]
   1e2dc:	b	1e458 <spss_parse_format+0x454>
   1e2e0:	mov	r1, #7
   1e2e4:	str	r1, [r2]
   1e2e8:	b	1e458 <spss_parse_format+0x454>
   1e2ec:	mov	r1, #8
   1e2f0:	str	r1, [r2]
   1e2f4:	b	1e458 <spss_parse_format+0x454>
   1e2f8:	mov	r1, #9
   1e2fc:	str	r1, [r2]
   1e300:	b	1e458 <spss_parse_format+0x454>
   1e304:	mov	r1, #10
   1e308:	str	r1, [r2]
   1e30c:	b	1e458 <spss_parse_format+0x454>
   1e310:	mov	r1, #11
   1e314:	str	r1, [r2]
   1e318:	b	1e458 <spss_parse_format+0x454>
   1e31c:	mov	r1, #12
   1e320:	str	r1, [r2]
   1e324:	b	1e458 <spss_parse_format+0x454>
   1e328:	mov	r1, #15
   1e32c:	str	r1, [r2]
   1e330:	b	1e458 <spss_parse_format+0x454>
   1e334:	mov	r1, #16
   1e338:	str	r1, [r2]
   1e33c:	b	1e458 <spss_parse_format+0x454>
   1e340:	mov	r1, #17
   1e344:	str	r1, [r2]
   1e348:	b	1e458 <spss_parse_format+0x454>
   1e34c:	mov	r1, #11
   1e350:	mov	r3, #20
   1e354:	b	1e450 <spss_parse_format+0x44c>
   1e358:	mov	r1, #21
   1e35c:	str	r1, [r2]
   1e360:	b	1e458 <spss_parse_format+0x454>
   1e364:	mov	r1, #20
   1e368:	mov	r3, #22
   1e36c:	b	1e450 <spss_parse_format+0x44c>
   1e370:	mov	r1, #19
   1e374:	mov	r3, #41	; 0x29
   1e378:	b	1e450 <spss_parse_format+0x44c>
   1e37c:	mov	r1, #10
   1e380:	mov	r3, #23
   1e384:	b	1e450 <spss_parse_format+0x44c>
   1e388:	mov	r1, #24
   1e38c:	str	r1, [r2]
   1e390:	b	1e458 <spss_parse_format+0x454>
   1e394:	mov	r1, #23
   1e398:	mov	r3, #25
   1e39c:	b	1e450 <spss_parse_format+0x44c>
   1e3a0:	mov	r1, #40	; 0x28
   1e3a4:	str	r1, [r2]
   1e3a8:	b	1e458 <spss_parse_format+0x454>
   1e3ac:	mov	r1, #26
   1e3b0:	str	r1, [r2]
   1e3b4:	b	1e458 <spss_parse_format+0x454>
   1e3b8:	mov	r1, #27
   1e3bc:	str	r1, [r2]
   1e3c0:	b	1e458 <spss_parse_format+0x454>
   1e3c4:	mov	r1, #28
   1e3c8:	str	r1, [r2]
   1e3cc:	b	1e458 <spss_parse_format+0x454>
   1e3d0:	mov	r1, #29
   1e3d4:	str	r1, [r2]
   1e3d8:	b	1e458 <spss_parse_format+0x454>
   1e3dc:	mov	r1, #10
   1e3e0:	mov	r3, #30
   1e3e4:	b	1e450 <spss_parse_format+0x44c>
   1e3e8:	mov	r1, #31
   1e3ec:	str	r1, [r2]
   1e3f0:	b	1e458 <spss_parse_format+0x454>
   1e3f4:	mov	r1, #32
   1e3f8:	str	r1, [r2]
   1e3fc:	b	1e458 <spss_parse_format+0x454>
   1e400:	mov	r1, #33	; 0x21
   1e404:	str	r1, [r2]
   1e408:	b	1e458 <spss_parse_format+0x454>
   1e40c:	mov	r1, #34	; 0x22
   1e410:	str	r1, [r2]
   1e414:	b	1e458 <spss_parse_format+0x454>
   1e418:	mov	r1, #35	; 0x23
   1e41c:	str	r1, [r2]
   1e420:	b	1e458 <spss_parse_format+0x454>
   1e424:	mov	r1, #36	; 0x24
   1e428:	str	r1, [r2]
   1e42c:	b	1e458 <spss_parse_format+0x454>
   1e430:	mov	r1, #37	; 0x25
   1e434:	str	r1, [r2]
   1e438:	b	1e458 <spss_parse_format+0x454>
   1e43c:	mov	r1, #10
   1e440:	mov	r3, #38	; 0x26
   1e444:	b	1e450 <spss_parse_format+0x44c>
   1e448:	mov	r1, #10
   1e44c:	mov	r3, #39	; 0x27
   1e450:	str	r3, [r2]
   1e454:	str	r1, [r2, #4]
   1e458:	add	r6, r6, #1
   1e45c:	adds	r4, r4, #1
   1e460:	bne	1e1ac <spss_parse_format+0x1a8>
   1e464:	ldr	r1, [pc, #816]	; 1e79c <spss_parse_format+0x798>
   1e468:	cmp	lr, #1
   1e46c:	add	r1, pc, r1
   1e470:	ldrb	ip, [r1, lr]
   1e474:	beq	1e760 <spss_parse_format+0x75c>
   1e478:	add	r0, r0, #1
   1e47c:	cmp	r0, r7
   1e480:	bne	1e02c <spss_parse_format+0x28>
   1e484:	b	1e494 <spss_parse_format+0x490>
   1e488:	mov	r0, #0
   1e48c:	mov	ip, #1
   1e490:	str	r0, [sp, #4]
   1e494:	ldr	r0, [pc, #772]	; 1e7a0 <spss_parse_format+0x79c>
   1e498:	ldr	r3, [pc, #772]	; 1e7a4 <spss_parse_format+0x7a0>
   1e49c:	add	r0, pc, r0
   1e4a0:	add	r3, pc, r3
   1e4a4:	ldrb	r0, [r0, ip]
   1e4a8:	ldrb	r1, [r3, r0]
   1e4ac:	cmp	r1, #0
   1e4b0:	beq	1e75c <spss_parse_format+0x758>
   1e4b4:	add	r0, r3, r0
   1e4b8:	rsb	r7, r1, #0
   1e4bc:	add	r0, r0, #1
   1e4c0:	ldrb	r1, [r0]
   1e4c4:	sub	r1, r1, #2
   1e4c8:	cmp	r1, #38	; 0x26
   1e4cc:	bhi	1e74c <spss_parse_format+0x748>
   1e4d0:	add	r3, pc, #4
   1e4d4:	ldr	r1, [r3, r1, lsl #2]
   1e4d8:	add	pc, r3, r1
   1e4dc:	.word	0x0000009c
   1e4e0:	.word	0x000000a4
   1e4e4:	.word	0x000000b0
   1e4e8:	.word	0x000000bc
   1e4ec:	.word	0x000000c8
   1e4f0:	.word	0x000000d4
   1e4f4:	.word	0x000000e0
   1e4f8:	.word	0x000000ec
   1e4fc:	.word	0x000000f8
   1e500:	.word	0x00000104
   1e504:	.word	0x00000110
   1e508:	.word	0x0000011c
   1e50c:	.word	0x00000128
   1e510:	.word	0x00000134
   1e514:	.word	0x00000140
   1e518:	.word	0x0000014c
   1e51c:	.word	0x00000158
   1e520:	.word	0x00000164
   1e524:	.word	0x00000170
   1e528:	.word	0x0000017c
   1e52c:	.word	0x00000188
   1e530:	.word	0x00000194
   1e534:	.word	0x000001a0
   1e538:	.word	0x000001ac
   1e53c:	.word	0x000001b8
   1e540:	.word	0x000001c4
   1e544:	.word	0x000001d0
   1e548:	.word	0x000001dc
   1e54c:	.word	0x000001e8
   1e550:	.word	0x000001f4
   1e554:	.word	0x00000200
   1e558:	.word	0x0000020c
   1e55c:	.word	0x00000218
   1e560:	.word	0x00000224
   1e564:	.word	0x00000230
   1e568:	.word	0x0000023c
   1e56c:	.word	0x00000248
   1e570:	.word	0x00000254
   1e574:	.word	0x00000260
   1e578:	ldr	r1, [sp, #4]
   1e57c:	b	1e748 <spss_parse_format+0x744>
   1e580:	ldr	r1, [sp, #4]
   1e584:	str	r1, [r2, #8]
   1e588:	b	1e74c <spss_parse_format+0x748>
   1e58c:	mov	r1, #1
   1e590:	str	r1, [r2]
   1e594:	b	1e74c <spss_parse_format+0x748>
   1e598:	mov	r1, #2
   1e59c:	str	r1, [r2]
   1e5a0:	b	1e74c <spss_parse_format+0x748>
   1e5a4:	mov	r1, #3
   1e5a8:	str	r1, [r2]
   1e5ac:	b	1e74c <spss_parse_format+0x748>
   1e5b0:	mov	r1, #4
   1e5b4:	str	r1, [r2]
   1e5b8:	b	1e74c <spss_parse_format+0x748>
   1e5bc:	mov	r1, #5
   1e5c0:	str	r1, [r2]
   1e5c4:	b	1e74c <spss_parse_format+0x748>
   1e5c8:	mov	r1, #6
   1e5cc:	str	r1, [r2]
   1e5d0:	b	1e74c <spss_parse_format+0x748>
   1e5d4:	mov	r1, #7
   1e5d8:	str	r1, [r2]
   1e5dc:	b	1e74c <spss_parse_format+0x748>
   1e5e0:	mov	r1, #8
   1e5e4:	str	r1, [r2]
   1e5e8:	b	1e74c <spss_parse_format+0x748>
   1e5ec:	mov	r1, #9
   1e5f0:	str	r1, [r2]
   1e5f4:	b	1e74c <spss_parse_format+0x748>
   1e5f8:	mov	r1, #10
   1e5fc:	str	r1, [r2]
   1e600:	b	1e74c <spss_parse_format+0x748>
   1e604:	mov	r1, #11
   1e608:	str	r1, [r2]
   1e60c:	b	1e74c <spss_parse_format+0x748>
   1e610:	mov	r1, #12
   1e614:	str	r1, [r2]
   1e618:	b	1e74c <spss_parse_format+0x748>
   1e61c:	mov	r1, #15
   1e620:	str	r1, [r2]
   1e624:	b	1e74c <spss_parse_format+0x748>
   1e628:	mov	r1, #16
   1e62c:	str	r1, [r2]
   1e630:	b	1e74c <spss_parse_format+0x748>
   1e634:	mov	r1, #17
   1e638:	str	r1, [r2]
   1e63c:	b	1e74c <spss_parse_format+0x748>
   1e640:	mov	r1, #11
   1e644:	mov	r3, #20
   1e648:	b	1e744 <spss_parse_format+0x740>
   1e64c:	mov	r1, #21
   1e650:	str	r1, [r2]
   1e654:	b	1e74c <spss_parse_format+0x748>
   1e658:	mov	r1, #20
   1e65c:	mov	r3, #22
   1e660:	b	1e744 <spss_parse_format+0x740>
   1e664:	mov	r1, #19
   1e668:	mov	r3, #41	; 0x29
   1e66c:	b	1e744 <spss_parse_format+0x740>
   1e670:	mov	r1, #10
   1e674:	mov	r3, #23
   1e678:	b	1e744 <spss_parse_format+0x740>
   1e67c:	mov	r1, #24
   1e680:	str	r1, [r2]
   1e684:	b	1e74c <spss_parse_format+0x748>
   1e688:	mov	r1, #23
   1e68c:	mov	r3, #25
   1e690:	b	1e744 <spss_parse_format+0x740>
   1e694:	mov	r1, #40	; 0x28
   1e698:	str	r1, [r2]
   1e69c:	b	1e74c <spss_parse_format+0x748>
   1e6a0:	mov	r1, #26
   1e6a4:	str	r1, [r2]
   1e6a8:	b	1e74c <spss_parse_format+0x748>
   1e6ac:	mov	r1, #27
   1e6b0:	str	r1, [r2]
   1e6b4:	b	1e74c <spss_parse_format+0x748>
   1e6b8:	mov	r1, #28
   1e6bc:	str	r1, [r2]
   1e6c0:	b	1e74c <spss_parse_format+0x748>
   1e6c4:	mov	r1, #29
   1e6c8:	str	r1, [r2]
   1e6cc:	b	1e74c <spss_parse_format+0x748>
   1e6d0:	mov	r1, #10
   1e6d4:	mov	r3, #30
   1e6d8:	b	1e744 <spss_parse_format+0x740>
   1e6dc:	mov	r1, #31
   1e6e0:	str	r1, [r2]
   1e6e4:	b	1e74c <spss_parse_format+0x748>
   1e6e8:	mov	r1, #32
   1e6ec:	str	r1, [r2]
   1e6f0:	b	1e74c <spss_parse_format+0x748>
   1e6f4:	mov	r1, #33	; 0x21
   1e6f8:	str	r1, [r2]
   1e6fc:	b	1e74c <spss_parse_format+0x748>
   1e700:	mov	r1, #34	; 0x22
   1e704:	str	r1, [r2]
   1e708:	b	1e74c <spss_parse_format+0x748>
   1e70c:	mov	r1, #35	; 0x23
   1e710:	str	r1, [r2]
   1e714:	b	1e74c <spss_parse_format+0x748>
   1e718:	mov	r1, #36	; 0x24
   1e71c:	str	r1, [r2]
   1e720:	b	1e74c <spss_parse_format+0x748>
   1e724:	mov	r1, #37	; 0x25
   1e728:	str	r1, [r2]
   1e72c:	b	1e74c <spss_parse_format+0x748>
   1e730:	mov	r1, #10
   1e734:	mov	r3, #38	; 0x26
   1e738:	b	1e744 <spss_parse_format+0x740>
   1e73c:	mov	r1, #10
   1e740:	mov	r3, #39	; 0x27
   1e744:	str	r3, [r2]
   1e748:	str	r1, [r2, #4]
   1e74c:	add	r0, r0, #1
   1e750:	adds	r7, r7, #1
   1e754:	bne	1e4c0 <spss_parse_format+0x4bc>
   1e758:	ldr	r7, [sp]
   1e75c:	mov	r0, r7
   1e760:	subs	r0, r0, r7
   1e764:	movwne	r0, #5
   1e768:	cmp	ip, #67	; 0x43
   1e76c:	movle	r0, #5
   1e770:	sub	sp, fp, #28
   1e774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e778:	.word	0x0000cab6
   1e77c:	.word	0x0000c8fa
   1e780:	.word	0x0000c7d8
   1e784:	.word	0x0000c9b4
   1e788:	.word	0x0000ca81
   1e78c:	.word	0x0000ccfc
   1e790:	.word	0x0000ccc8
   1e794:	.word	0x0000ca40
   1e798:	.word	0x0000cc24
   1e79c:	.word	0x0000c8b0
   1e7a0:	.word	0x0000ca88
   1e7a4:	.word	0x0000c99c
   1e7a8:	.word	0x0000cce4
   1e7ac:	.word	0x00000000

0001e7b0 <dta_ctx_alloc>:
   1e7b0:	push	{r4, sl, fp, lr}
   1e7b4:	add	fp, sp, #8
   1e7b8:	mov	r4, r0
   1e7bc:	mov	r0, #1
   1e7c0:	mov	r1, #544	; 0x220
   1e7c4:	bl	472c <calloc@plt>
   1e7c8:	cmp	r0, #0
   1e7cc:	strne	r4, [r0, #280]	; 0x118
   1e7d0:	moveq	r0, #0
   1e7d4:	pop	{r4, sl, fp, pc}
   1e7d8:	nop	{0}
   1e7dc:	nop	{0}

0001e7e0 <dta_ctx_init>:
   1e7e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e7e4:	add	fp, sp, #24
   1e7e8:	ldr	r9, [fp, #12]
   1e7ec:	mov	r4, r0
   1e7f0:	mov	r8, #24
   1e7f4:	sub	r0, r9, #104	; 0x68
   1e7f8:	uxtb	r0, r0
   1e7fc:	cmp	r0, #15
   1e800:	bhi	1ebe8 <dta_ctx_init+0x408>
   1e804:	ldr	r8, [fp, #8]
   1e808:	mov	r7, r3
   1e80c:	mov	r5, r2
   1e810:	mov	r6, r1
   1e814:	bl	4858 <machine_is_little_endian@plt>
   1e818:	cmp	r8, #2
   1e81c:	mov	r2, #2
   1e820:	mov	r1, #2
   1e824:	movweq	r2, #1
   1e828:	cmp	r0, #0
   1e82c:	movweq	r1, #1
   1e830:	str	r2, [r4, #232]	; 0xe8
   1e834:	str	r9, [r4, #144]	; 0x90
   1e838:	str	r6, [r4, #148]	; 0x94
   1e83c:	str	r5, [r4, #152]	; 0x98
   1e840:	str	r7, [r4, #156]	; 0x9c
   1e844:	subs	r0, r1, r8
   1e848:	ldrb	r1, [r4, #192]	; 0xc0
   1e84c:	movwne	r0, #1
   1e850:	cmp	r6, #0
   1e854:	bic	r1, r1, #1
   1e858:	orr	r0, r1, r0
   1e85c:	strb	r0, [r4, #192]	; 0xc0
   1e860:	beq	1e888 <dta_ctx_init+0xa8>
   1e864:	mov	r0, r6
   1e868:	mov	r1, #4
   1e86c:	bl	4954 <readstat_calloc@plt>
   1e870:	cmp	r0, #0
   1e874:	str	r0, [r4, #228]	; 0xe4
   1e878:	moveq	r8, #3
   1e87c:	moveq	r0, r8
   1e880:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e884:	ldrb	r0, [r4, #192]	; 0xc0
   1e888:	ldr	r5, [fp, #20]
   1e88c:	and	r1, r0, #253	; 0xfd
   1e890:	cmp	r9, #105	; 0x69
   1e894:	strb	r1, [r4, #192]	; 0xc0
   1e898:	bcs	1e8d4 <dta_ctx_init+0xf4>
   1e89c:	mov	r2, #0
   1e8a0:	mov	r3, #7
   1e8a4:	strb	r2, [r4, #20]
   1e8a8:	str	r3, [r4, #80]	; 0x50
   1e8ac:	str	r2, [r4, #92]	; 0x5c
   1e8b0:	mov	r2, #9
   1e8b4:	cmp	r9, #107	; 0x6b
   1e8b8:	str	r2, [r4, #76]	; 0x4c
   1e8bc:	str	r2, [r4, #84]	; 0x54
   1e8c0:	str	r2, [r4, #96]	; 0x60
   1e8c4:	add	r2, r4, #88	; 0x58
   1e8c8:	bhi	1e958 <dta_ctx_init+0x178>
   1e8cc:	mov	r3, #32
   1e8d0:	b	1e95c <dta_ctx_init+0x17c>
   1e8d4:	cmp	r9, #114	; 0x72
   1e8d8:	bcs	1e900 <dta_ctx_init+0x120>
   1e8dc:	mov	r2, #12
   1e8e0:	cmp	r9, #110	; 0x6e
   1e8e4:	str	r2, [r4, #80]	; 0x50
   1e8e8:	bhi	1e934 <dta_ctx_init+0x154>
   1e8ec:	mov	r2, #0
   1e8f0:	strb	r2, [r4, #20]
   1e8f4:	beq	1e93c <dta_ctx_init+0x15c>
   1e8f8:	mov	r2, #2
   1e8fc:	b	1e8ac <dta_ctx_init+0xcc>
   1e900:	cmp	r9, #117	; 0x75
   1e904:	bhi	1e99c <dta_ctx_init+0x1bc>
   1e908:	mov	r2, #49	; 0x31
   1e90c:	str	r2, [r4, #80]	; 0x50
   1e910:	bne	1e934 <dta_ctx_init+0x154>
   1e914:	mov	r2, #1
   1e918:	str	r2, [r4, #8]
   1e91c:	mov	r2, #117	; 0x75
   1e920:	strb	r2, [r4, #20]
   1e924:	mov	r2, #4
   1e928:	str	r2, [r4, #112]	; 0x70
   1e92c:	str	r2, [r4, #116]	; 0x74
   1e930:	b	1e93c <dta_ctx_init+0x15c>
   1e934:	mov	r2, #111	; 0x6f
   1e938:	strb	r2, [r4, #20]
   1e93c:	mov	r2, #33	; 0x21
   1e940:	mov	r3, #4
   1e944:	str	r2, [r4, #84]	; 0x54
   1e948:	str	r2, [r4, #76]	; 0x4c
   1e94c:	str	r3, [r4, #92]	; 0x5c
   1e950:	str	r2, [r4, #96]	; 0x60
   1e954:	add	r2, r4, #88	; 0x58
   1e958:	mov	r3, #81	; 0x51
   1e95c:	cmp	r9, #104	; 0x68
   1e960:	str	r3, [r2]
   1e964:	str	r3, [r4, #4]
   1e968:	bhi	1e9dc <dta_ctx_init+0x1fc>
   1e96c:	mov	r2, #0
   1e970:	mov	r1, #2
   1e974:	and	r0, r0, #249	; 0xf9
   1e978:	str	r2, [r4, #16]
   1e97c:	mov	r2, #12
   1e980:	str	r1, [r4, #100]	; 0x64
   1e984:	str	r2, [r4, #104]	; 0x68
   1e988:	str	r1, [r4, #108]	; 0x6c
   1e98c:	mov	r1, #1
   1e990:	str	r1, [r4, #24]
   1e994:	strb	r0, [r4, #192]	; 0xc0
   1e998:	b	1ea24 <dta_ctx_init+0x244>
   1e99c:	add	r3, pc, #636	; 0x27c
   1e9a0:	mov	r2, #2
   1e9a4:	vld1.64	{d16-d17}, [r3 :128]
   1e9a8:	mov	r3, #117	; 0x75
   1e9ac:	str	r2, [r4, #8]
   1e9b0:	strb	r3, [r4, #20]
   1e9b4:	mov	r3, #6
   1e9b8:	strd	r2, [r4, #112]	; 0x70
   1e9bc:	mov	r2, #4
   1e9c0:	mov	r3, #129	; 0x81
   1e9c4:	str	r2, [r4, #92]	; 0x5c
   1e9c8:	movw	r2, #321	; 0x141
   1e9cc:	str	r3, [r4, #96]	; 0x60
   1e9d0:	str	r2, [r4, #4]
   1e9d4:	add	r2, r4, #76	; 0x4c
   1e9d8:	vst1.32	{d16-d17}, [r2]
   1e9dc:	mov	r3, #18
   1e9e0:	mov	r7, #129	; 0x81
   1e9e4:	cmp	r9, #118	; 0x76
   1e9e8:	mov	r2, #4
   1e9ec:	str	r3, [r4, #16]
   1e9f0:	movwcc	r7, #33	; 0x21
   1e9f4:	cmp	r9, #117	; 0x75
   1e9f8:	mov	r3, #3
   1e9fc:	str	r2, [r4, #100]	; 0x64
   1ea00:	str	r7, [r4, #104]	; 0x68
   1ea04:	str	r3, [r4, #108]	; 0x6c
   1ea08:	bcs	1ea60 <dta_ctx_init+0x280>
   1ea0c:	mov	r1, #1
   1ea10:	and	r0, r0, #249	; 0xf9
   1ea14:	cmp	r9, #112	; 0x70
   1ea18:	str	r1, [r4, #24]
   1ea1c:	strb	r0, [r4, #192]	; 0xc0
   1ea20:	bhi	1ea70 <dta_ctx_init+0x290>
   1ea24:	movw	r1, #65535	; 0xffff
   1ea28:	mvn	r0, #0
   1ea2c:	movt	r1, #32735	; 0x7fdf
   1ea30:	strd	r0, [r4, #208]	; 0xd0
   1ea34:	movw	r0, #32766	; 0x7ffe
   1ea38:	mvn	r1, #-2130706432	; 0x81000000
   1ea3c:	strh	r0, [r4, #194]	; 0xc2
   1ea40:	mov	r0, #126	; 0x7e
   1ea44:	strb	r0, [r4, #193]	; 0xc1
   1ea48:	mvn	r0, #-2147483647	; 0x80000001
   1ea4c:	str	r0, [r4, #196]	; 0xc4
   1ea50:	str	r1, [r4, #200]	; 0xc8
   1ea54:	cmp	r5, #0
   1ea58:	bne	1eab4 <dta_ctx_init+0x2d4>
   1ea5c:	b	1eb0c <dta_ctx_init+0x32c>
   1ea60:	mov	r0, #2
   1ea64:	str	r0, [r4, #24]
   1ea68:	orr	r0, r1, #4
   1ea6c:	strb	r0, [r4, #192]	; 0xc0
   1ea70:	movw	r1, #65535	; 0xffff
   1ea74:	mvn	r2, #0
   1ea78:	orr	r0, r0, #8
   1ea7c:	movt	r1, #32735	; 0x7fdf
   1ea80:	str	r2, [r4, #208]	; 0xd0
   1ea84:	mvn	r2, #-2130706432	; 0x81000000
   1ea88:	str	r1, [r4, #212]	; 0xd4
   1ea8c:	movw	r1, #32740	; 0x7fe4
   1ea90:	strh	r1, [r4, #194]	; 0xc2
   1ea94:	mov	r1, #100	; 0x64
   1ea98:	strb	r1, [r4, #193]	; 0xc1
   1ea9c:	mvn	r1, #-2147483621	; 0x8000001b
   1eaa0:	str	r1, [r4, #196]	; 0xc4
   1eaa4:	str	r2, [r4, #200]	; 0xc8
   1eaa8:	strb	r0, [r4, #192]	; 0xc0
   1eaac:	cmp	r5, #0
   1eab0:	beq	1eb0c <dta_ctx_init+0x32c>
   1eab4:	ldr	r1, [fp, #16]
   1eab8:	cmp	r1, #0
   1eabc:	bne	1eaf4 <dta_ctx_init+0x314>
   1eac0:	cmp	r9, #117	; 0x75
   1eac4:	bhi	1ead4 <dta_ctx_init+0x2f4>
   1eac8:	ldr	r1, [pc, #352]	; 1ec30 <dta_ctx_init+0x450>
   1eacc:	add	r1, pc, r1
   1ead0:	b	1eaf4 <dta_ctx_init+0x314>
   1ead4:	ldr	r1, [pc, #344]	; 1ec34 <dta_ctx_init+0x454>
   1ead8:	mov	r0, r5
   1eadc:	add	r1, pc, r1
   1eae0:	bl	47b0 <strcmp@plt>
   1eae4:	cmp	r0, #0
   1eae8:	beq	1ebf0 <dta_ctx_init+0x410>
   1eaec:	ldr	r1, [pc, #324]	; 1ec38 <dta_ctx_init+0x458>
   1eaf0:	add	r1, pc, r1
   1eaf4:	mov	r0, r5
   1eaf8:	bl	4a98 <iconv_open@plt>
   1eafc:	mov	r1, r4
   1eb00:	str	r0, [r1, #236]!	; 0xec
   1eb04:	cmn	r0, #1
   1eb08:	beq	1ec00 <dta_ctx_init+0x420>
   1eb0c:	ldr	r1, [r4, #148]	; 0x94
   1eb10:	mov	r0, #2
   1eb14:	cmp	r9, #119	; 0x77
   1eb18:	movwcc	r0, #1
   1eb1c:	add	r1, r1, #1
   1eb20:	lsl	r0, r1, r0
   1eb24:	str	r0, [r4, #48]	; 0x30
   1eb28:	bl	4b88 <readstat_malloc@plt>
   1eb2c:	mov	r8, #3
   1eb30:	cmp	r0, #0
   1eb34:	str	r0, [r4, #44]	; 0x2c
   1eb38:	beq	1ebe8 <dta_ctx_init+0x408>
   1eb3c:	ldr	r1, [r4, #148]	; 0x94
   1eb40:	cmp	r1, #1
   1eb44:	blt	1ebdc <dta_ctx_init+0x3fc>
   1eb48:	lsl	r0, r1, #1
   1eb4c:	add	r7, r4, #76	; 0x4c
   1eb50:	str	r0, [r4, #32]
   1eb54:	ldm	r7, {r2, r3, r7}
   1eb58:	ldr	r6, [r4, #88]	; 0x58
   1eb5c:	mul	r2, r2, r1
   1eb60:	str	r2, [r4, #40]	; 0x28
   1eb64:	mul	r2, r3, r1
   1eb68:	str	r2, [r4, #56]	; 0x38
   1eb6c:	mul	r2, r7, r1
   1eb70:	mul	r1, r6, r1
   1eb74:	str	r2, [r4, #64]	; 0x40
   1eb78:	str	r1, [r4, #72]	; 0x48
   1eb7c:	bl	4b88 <readstat_malloc@plt>
   1eb80:	cmp	r0, #0
   1eb84:	str	r0, [r4, #28]
   1eb88:	beq	1ebe8 <dta_ctx_init+0x408>
   1eb8c:	ldr	r0, [r4, #40]	; 0x28
   1eb90:	bl	4b88 <readstat_malloc@plt>
   1eb94:	cmp	r0, #0
   1eb98:	str	r0, [r4, #36]	; 0x24
   1eb9c:	beq	1ebe8 <dta_ctx_init+0x408>
   1eba0:	ldr	r0, [r4, #56]	; 0x38
   1eba4:	bl	4b88 <readstat_malloc@plt>
   1eba8:	cmp	r0, #0
   1ebac:	str	r0, [r4, #52]	; 0x34
   1ebb0:	beq	1ebe8 <dta_ctx_init+0x408>
   1ebb4:	ldr	r0, [r4, #64]	; 0x40
   1ebb8:	bl	4b88 <readstat_malloc@plt>
   1ebbc:	cmp	r0, #0
   1ebc0:	str	r0, [r4, #60]	; 0x3c
   1ebc4:	beq	1ebe8 <dta_ctx_init+0x408>
   1ebc8:	ldr	r0, [r4, #72]	; 0x48
   1ebcc:	bl	4b88 <readstat_malloc@plt>
   1ebd0:	cmp	r0, #0
   1ebd4:	str	r0, [r4, #68]	; 0x44
   1ebd8:	beq	1ebe8 <dta_ctx_init+0x408>
   1ebdc:	mov	r0, #1
   1ebe0:	mov	r8, #0
   1ebe4:	str	r0, [r4, #284]	; 0x11c
   1ebe8:	mov	r0, r8
   1ebec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ebf0:	mov	r1, r4
   1ebf4:	ldr	r0, [r1, #236]!	; 0xec
   1ebf8:	cmn	r0, #1
   1ebfc:	bne	1eb0c <dta_ctx_init+0x32c>
   1ec00:	mov	r0, #0
   1ec04:	mov	r8, #7
   1ec08:	str	r0, [r1]
   1ec0c:	mov	r0, r8
   1ec10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ec14:	nop	{0}
   1ec18:	nop	{0}
   1ec1c:	nop	{0}
   1ec20:	.word	0x00000081
   1ec24:	.word	0x00000039
   1ec28:	.word	0x00000081
   1ec2c:	.word	0x00000141
   1ec30:	.word	0x0000c4c3
   1ec34:	.word	0x0000a7ca
   1ec38:	.word	0x0000a7b6

0001ec3c <dta_ctx_free>:
   1ec3c:	push	{r4, r5, fp, lr}
   1ec40:	add	fp, sp, #8
   1ec44:	mov	r4, r0
   1ec48:	ldr	r0, [r0, #28]
   1ec4c:	cmp	r0, #0
   1ec50:	beq	1ec58 <dta_ctx_free+0x1c>
   1ec54:	bl	4864 <free@plt>
   1ec58:	ldr	r0, [r4, #36]	; 0x24
   1ec5c:	cmp	r0, #0
   1ec60:	beq	1ec68 <dta_ctx_free+0x2c>
   1ec64:	bl	4864 <free@plt>
   1ec68:	ldr	r0, [r4, #44]	; 0x2c
   1ec6c:	cmp	r0, #0
   1ec70:	beq	1ec78 <dta_ctx_free+0x3c>
   1ec74:	bl	4864 <free@plt>
   1ec78:	ldr	r0, [r4, #52]	; 0x34
   1ec7c:	cmp	r0, #0
   1ec80:	beq	1ec88 <dta_ctx_free+0x4c>
   1ec84:	bl	4864 <free@plt>
   1ec88:	ldr	r0, [r4, #60]	; 0x3c
   1ec8c:	cmp	r0, #0
   1ec90:	beq	1ec98 <dta_ctx_free+0x5c>
   1ec94:	bl	4864 <free@plt>
   1ec98:	ldr	r0, [r4, #68]	; 0x44
   1ec9c:	cmp	r0, #0
   1eca0:	beq	1eca8 <dta_ctx_free+0x6c>
   1eca4:	bl	4864 <free@plt>
   1eca8:	ldr	r0, [r4, #236]	; 0xec
   1ecac:	cmp	r0, #0
   1ecb0:	beq	1ecb8 <dta_ctx_free+0x7c>
   1ecb4:	bl	478c <iconv_close@plt>
   1ecb8:	ldr	r0, [r4]
   1ecbc:	cmp	r0, #0
   1ecc0:	beq	1ecc8 <dta_ctx_free+0x8c>
   1ecc4:	bl	4864 <free@plt>
   1ecc8:	ldr	r0, [r4, #228]	; 0xe4
   1eccc:	cmp	r0, #0
   1ecd0:	beq	1ed10 <dta_ctx_free+0xd4>
   1ecd4:	ldr	r2, [r4, #148]	; 0x94
   1ecd8:	cmp	r2, #1
   1ecdc:	blt	1ed0c <dta_ctx_free+0xd0>
   1ece0:	mov	r5, #0
   1ece4:	ldr	r1, [r0, r5, lsl #2]
   1ece8:	cmp	r1, #0
   1ecec:	beq	1ed00 <dta_ctx_free+0xc4>
   1ecf0:	mov	r0, r1
   1ecf4:	bl	4864 <free@plt>
   1ecf8:	ldr	r2, [r4, #148]	; 0x94
   1ecfc:	ldr	r0, [r4, #228]	; 0xe4
   1ed00:	add	r5, r5, #1
   1ed04:	cmp	r5, r2
   1ed08:	blt	1ece4 <dta_ctx_free+0xa8>
   1ed0c:	bl	4864 <free@plt>
   1ed10:	ldr	r0, [r4, #216]	; 0xd8
   1ed14:	cmp	r0, #0
   1ed18:	beq	1ed48 <dta_ctx_free+0x10c>
   1ed1c:	ldr	r1, [r4, #220]	; 0xdc
   1ed20:	cmp	r1, #0
   1ed24:	beq	1ed44 <dta_ctx_free+0x108>
   1ed28:	mov	r5, #0
   1ed2c:	ldr	r0, [r0, r5, lsl #2]
   1ed30:	bl	4864 <free@plt>
   1ed34:	ldrd	r0, [r4, #216]	; 0xd8
   1ed38:	add	r5, r5, #1
   1ed3c:	cmp	r5, r1
   1ed40:	bcc	1ed2c <dta_ctx_free+0xf0>
   1ed44:	bl	4864 <free@plt>
   1ed48:	mov	r0, r4
   1ed4c:	pop	{r4, r5, fp, lr}
   1ed50:	b	4864 <free@plt>

0001ed54 <dta_type_info>:
   1ed54:	push	{r4, sl, fp, lr}
   1ed58:	add	fp, sp, #8
   1ed5c:	ldrb	r1, [r1, #20]
   1ed60:	cmp	r1, #111	; 0x6f
   1ed64:	bne	1ed98 <dta_type_info+0x44>
   1ed68:	sub	ip, r0, #251	; 0xfb
   1ed6c:	uxth	r1, ip
   1ed70:	cmp	r1, #5
   1ed74:	bcs	1ee48 <dta_type_info+0xf4>
   1ed78:	ldr	r1, [pc, #280]	; 1ee98 <dta_type_info+0x144>
   1ed7c:	mov	r0, #1
   1ed80:	uxtah	lr, r0, ip
   1ed84:	sxth	r0, ip
   1ed88:	mov	ip, #0
   1ed8c:	add	r1, pc, r1
   1ed90:	ldr	r0, [r1, r0, lsl #2]
   1ed94:	b	1ee50 <dta_type_info+0xfc>
   1ed98:	cmp	r1, #117	; 0x75
   1ed9c:	bne	1ede8 <dta_type_info+0x94>
   1eda0:	movw	r1, #65526	; 0xfff6
   1eda4:	mov	ip, #0
   1eda8:	sub	r1, r0, r1
   1edac:	cmp	r1, #4
   1edb0:	bhi	1ee34 <dta_type_info+0xe0>
   1edb4:	add	r4, pc, #12
   1edb8:	mov	r0, #1
   1edbc:	mov	lr, #1
   1edc0:	ldr	r1, [r4, r1, lsl #2]
   1edc4:	add	pc, r4, r1
   1edc8:	.word	0x00000014
   1edcc:	.word	0x000000ac
   1edd0:	.word	0x000000b8
   1edd4:	.word	0x000000c4
   1edd8:	.word	0x00000088
   1eddc:	mov	lr, #5
   1ede0:	mov	r0, #8
   1ede4:	b	1ee50 <dta_type_info+0xfc>
   1ede8:	cmp	r0, #126	; 0x7e
   1edec:	bhi	1ee2c <dta_type_info+0xd8>
   1edf0:	sub	r0, r0, #98	; 0x62
   1edf4:	uxth	r1, r0
   1edf8:	cmp	r1, #11
   1edfc:	bcs	1ee68 <dta_type_info+0x114>
   1ee00:	sxth	r1, r0
   1ee04:	ldr	r0, [pc, #144]	; 1ee9c <dta_type_info+0x148>
   1ee08:	add	r0, pc, r0
   1ee0c:	ldr	lr, [r0, r1, lsl #2]
   1ee10:	ldr	r0, [pc, #136]	; 1eea0 <dta_type_info+0x14c>
   1ee14:	ldr	r4, [pc, #136]	; 1eea4 <dta_type_info+0x150>
   1ee18:	add	r0, pc, r0
   1ee1c:	add	r4, pc, r4
   1ee20:	ldr	r0, [r0, r1, lsl #2]
   1ee24:	ldr	ip, [r4, r1, lsl #2]
   1ee28:	b	1ee50 <dta_type_info+0xfc>
   1ee2c:	sub	r0, r0, #127	; 0x7f
   1ee30:	b	1ee48 <dta_type_info+0xf4>
   1ee34:	cmp	r0, #32768	; 0x8000
   1ee38:	bne	1ee48 <dta_type_info+0xf4>
   1ee3c:	mov	lr, #6
   1ee40:	mov	r0, #8
   1ee44:	b	1ee50 <dta_type_info+0xfc>
   1ee48:	mov	ip, #0
   1ee4c:	mov	lr, #0
   1ee50:	cmp	r2, #0
   1ee54:	strne	r0, [r2]
   1ee58:	cmp	r3, #0
   1ee5c:	mov	r0, ip
   1ee60:	strne	lr, [r3]
   1ee64:	pop	{r4, sl, fp, pc}
   1ee68:	mov	r0, #0
   1ee6c:	mov	ip, #5
   1ee70:	b	1ee4c <dta_type_info+0xf8>
   1ee74:	mov	r0, #4
   1ee78:	mov	lr, #4
   1ee7c:	b	1ee50 <dta_type_info+0xfc>
   1ee80:	mov	lr, #3
   1ee84:	mov	r0, #4
   1ee88:	b	1ee50 <dta_type_info+0xfc>
   1ee8c:	mov	r0, #2
   1ee90:	mov	lr, #2
   1ee94:	b	1ee50 <dta_type_info+0xfc>
   1ee98:	.word	0x0000c21c
   1ee9c:	.word	0x0000c220
   1eea0:	.word	0x0000c1e0
   1eea4:	.word	0x0000c1ac

0001eea8 <dta_parse_timestamp>:
   1eea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eeac:	add	fp, sp, #28
   1eeb0:	sub	sp, sp, #36	; 0x24
   1eeb4:	sub	sp, sp, #1024	; 0x400
   1eeb8:	add	r7, r0, r1
   1eebc:	cmp	r1, #0
   1eec0:	str	r3, [sp, #20]
   1eec4:	str	r1, [sp, #16]
   1eec8:	str	r7, [sp, #24]
   1eecc:	beq	1f1bc <dta_parse_timestamp+0x314>
   1eed0:	mvn	r8, #1
   1eed4:	mov	r7, #1
   1eed8:	mov	lr, #0
   1eedc:	mov	r9, r0
   1eee0:	str	r0, [sp, #12]
   1eee4:	ldr	r0, [pc, #920]	; 1f284 <dta_parse_timestamp+0x3dc>
   1eee8:	add	r0, pc, r0
   1eeec:	ldrb	ip, [r0, r7]
   1eef0:	ldr	r0, [pc, #912]	; 1f288 <dta_parse_timestamp+0x3e0>
   1eef4:	add	r0, pc, r0
   1eef8:	cmp	ip, #0
   1eefc:	ldrb	r3, [r0, r7]
   1ef00:	ldr	r0, [pc, #900]	; 1f28c <dta_parse_timestamp+0x3e4>
   1ef04:	ldr	r1, [pc, #900]	; 1f290 <dta_parse_timestamp+0x3e8>
   1ef08:	add	r0, pc, r0
   1ef0c:	add	r1, pc, r1
   1ef10:	ldrb	r0, [r0, r7]
   1ef14:	add	r5, r1, r0
   1ef18:	beq	1ef7c <dta_parse_timestamp+0xd4>
   1ef1c:	add	sl, r5, ip
   1ef20:	str	lr, [sp, #28]
   1ef24:	sub	lr, sl, #1
   1ef28:	cmp	lr, r5
   1ef2c:	bcc	1ef6c <dta_parse_timestamp+0xc4>
   1ef30:	ldrb	r0, [r9]
   1ef34:	mov	r4, r5
   1ef38:	sub	r8, lr, r4
   1ef3c:	mov	r1, r4
   1ef40:	ldrb	r6, [r1, r8, asr #1]!
   1ef44:	cmp	r0, r6
   1ef48:	bcs	1ef5c <dta_parse_timestamp+0xb4>
   1ef4c:	sub	lr, r1, #1
   1ef50:	cmp	lr, r4
   1ef54:	bcs	1ef38 <dta_parse_timestamp+0x90>
   1ef58:	b	1ef6c <dta_parse_timestamp+0xc4>
   1ef5c:	bls	1effc <dta_parse_timestamp+0x154>
   1ef60:	add	r4, r1, #1
   1ef64:	cmp	lr, r4
   1ef68:	bcs	1ef38 <dta_parse_timestamp+0x90>
   1ef6c:	ldr	lr, [sp, #28]
   1ef70:	add	r3, ip, r3
   1ef74:	mvn	r8, #1
   1ef78:	b	1ef80 <dta_parse_timestamp+0xd8>
   1ef7c:	mov	sl, r5
   1ef80:	ldr	r0, [pc, #780]	; 1f294 <dta_parse_timestamp+0x3ec>
   1ef84:	add	r0, pc, r0
   1ef88:	ldrb	r7, [r0, r7]
   1ef8c:	cmp	r7, #0
   1ef90:	beq	1eff0 <dta_parse_timestamp+0x148>
   1ef94:	add	r0, sl, r7, lsl #1
   1ef98:	sub	r5, r0, #2
   1ef9c:	cmp	r5, sl
   1efa0:	bcc	1f020 <dta_parse_timestamp+0x178>
   1efa4:	ldrb	r0, [r9]
   1efa8:	mov	r1, sl
   1efac:	sub	r6, r5, r1
   1efb0:	mov	r4, r1
   1efb4:	and	r6, r8, r6, asr #1
   1efb8:	ldrb	r6, [r4, r6]!
   1efbc:	cmp	r0, r6
   1efc0:	bcs	1efd4 <dta_parse_timestamp+0x12c>
   1efc4:	sub	r5, r4, #2
   1efc8:	cmp	r5, r1
   1efcc:	bcs	1efac <dta_parse_timestamp+0x104>
   1efd0:	b	1f020 <dta_parse_timestamp+0x178>
   1efd4:	ldrb	r1, [r4, #1]
   1efd8:	cmp	r0, r1
   1efdc:	bls	1f018 <dta_parse_timestamp+0x170>
   1efe0:	add	r1, r4, #2
   1efe4:	cmp	r5, r1
   1efe8:	bcs	1efac <dta_parse_timestamp+0x104>
   1efec:	b	1f020 <dta_parse_timestamp+0x178>
   1eff0:	ldr	r6, [pc, #672]	; 1f298 <dta_parse_timestamp+0x3f0>
   1eff4:	add	r6, pc, r6
   1eff8:	b	1f02c <dta_parse_timestamp+0x184>
   1effc:	ldr	lr, [sp, #28]
   1f000:	ldr	r6, [pc, #688]	; 1f2b8 <dta_parse_timestamp+0x410>
   1f004:	sub	r0, r3, r5
   1f008:	mvn	r8, #1
   1f00c:	add	r3, r0, r1
   1f010:	add	r6, pc, r6
   1f014:	b	1f02c <dta_parse_timestamp+0x184>
   1f018:	sub	r0, r4, sl
   1f01c:	asr	r7, r0, #1
   1f020:	ldr	r6, [pc, #628]	; 1f29c <dta_parse_timestamp+0x3f4>
   1f024:	add	r3, r7, r3
   1f028:	add	r6, pc, r6
   1f02c:	ldr	r0, [pc, #620]	; 1f2a0 <dta_parse_timestamp+0x3f8>
   1f030:	add	r0, pc, r0
   1f034:	ldrb	r3, [r0, r3]
   1f038:	ldr	r0, [pc, #612]	; 1f2a4 <dta_parse_timestamp+0x3fc>
   1f03c:	add	r0, pc, r0
   1f040:	ldrb	r0, [r0, r3]
   1f044:	cmp	r0, #0
   1f048:	ldrbne	r1, [r6, r0]
   1f04c:	cmpne	r1, #0
   1f050:	beq	1f190 <dta_parse_timestamp+0x2e8>
   1f054:	add	r0, r6, r0
   1f058:	rsb	r5, r1, #0
   1f05c:	add	r7, r0, #1
   1f060:	ldrb	r0, [r7]
   1f064:	cmp	r0, #16
   1f068:	bhi	1f184 <dta_parse_timestamp+0x2dc>
   1f06c:	add	r1, pc, #4
   1f070:	ldr	r0, [r1, r0, lsl #2]
   1f074:	add	pc, r1, r0
   1f078:	.word	0x00000044
   1f07c:	.word	0x00000058
   1f080:	.word	0x00000060
   1f084:	.word	0x00000068
   1f088:	.word	0x00000074
   1f08c:	.word	0x00000080
   1f090:	.word	0x0000008c
   1f094:	.word	0x00000098
   1f098:	.word	0x000000a4
   1f09c:	.word	0x000000b0
   1f0a0:	.word	0x000000bc
   1f0a4:	.word	0x000000c8
   1f0a8:	.word	0x000000d4
   1f0ac:	.word	0x000000e0
   1f0b0:	.word	0x000000ec
   1f0b4:	.word	0x000000f8
   1f0b8:	.word	0x00000108
   1f0bc:	ldrb	r0, [r9]
   1f0c0:	add	r1, lr, lr, lsl #2
   1f0c4:	add	r0, r0, r1, lsl #1
   1f0c8:	sub	lr, r0, #48	; 0x30
   1f0cc:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f0d0:	mov	lr, #0
   1f0d4:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f0d8:	str	lr, [r2, #12]
   1f0dc:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f0e0:	mov	r0, #0
   1f0e4:	str	r0, [r2, #16]
   1f0e8:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f0ec:	mov	r0, #1
   1f0f0:	str	r0, [r2, #16]
   1f0f4:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f0f8:	mov	r0, #2
   1f0fc:	str	r0, [r2, #16]
   1f100:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f104:	mov	r0, #3
   1f108:	str	r0, [r2, #16]
   1f10c:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f110:	mov	r0, #4
   1f114:	str	r0, [r2, #16]
   1f118:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f11c:	mov	r0, #5
   1f120:	str	r0, [r2, #16]
   1f124:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f128:	mov	r0, #6
   1f12c:	str	r0, [r2, #16]
   1f130:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f134:	mov	r0, #7
   1f138:	str	r0, [r2, #16]
   1f13c:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f140:	mov	r0, #8
   1f144:	str	r0, [r2, #16]
   1f148:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f14c:	mov	r0, #9
   1f150:	str	r0, [r2, #16]
   1f154:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f158:	mov	r0, #10
   1f15c:	str	r0, [r2, #16]
   1f160:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f164:	mov	r0, #11
   1f168:	str	r0, [r2, #16]
   1f16c:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f170:	movw	r0, #1900	; 0x76c
   1f174:	sub	r0, lr, r0
   1f178:	str	r0, [r2, #20]
   1f17c:	b	1f184 <dta_parse_timestamp+0x2dc>
   1f180:	str	lr, [r2, #8]
   1f184:	add	r7, r7, #1
   1f188:	adds	r5, r5, #1
   1f18c:	bne	1f060 <dta_parse_timestamp+0x1b8>
   1f190:	ldr	r0, [pc, #272]	; 1f2a8 <dta_parse_timestamp+0x400>
   1f194:	cmp	r3, #1
   1f198:	add	r0, pc, r0
   1f19c:	ldrb	r7, [r0, r3]
   1f1a0:	beq	1f218 <dta_parse_timestamp+0x370>
   1f1a4:	ldr	r0, [sp, #24]
   1f1a8:	add	r9, r9, #1
   1f1ac:	cmp	r9, r0
   1f1b0:	bne	1eee4 <dta_parse_timestamp+0x3c>
   1f1b4:	ldr	r0, [sp, #12]
   1f1b8:	b	1f1c4 <dta_parse_timestamp+0x31c>
   1f1bc:	mov	r7, #1
   1f1c0:	mov	lr, #0
   1f1c4:	ldr	r1, [pc, #224]	; 1f2ac <dta_parse_timestamp+0x404>
   1f1c8:	ldr	r3, [pc, #224]	; 1f2b0 <dta_parse_timestamp+0x408>
   1f1cc:	add	r1, pc, r1
   1f1d0:	add	r3, pc, r3
   1f1d4:	ldrb	r6, [r1, r7]
   1f1d8:	ldrb	r1, [r3, r6]
   1f1dc:	cmp	r1, #0
   1f1e0:	beq	1f208 <dta_parse_timestamp+0x360>
   1f1e4:	add	r3, r3, r6
   1f1e8:	add	r6, r3, #1
   1f1ec:	rsb	r3, r1, #0
   1f1f0:	ldrb	r1, [r6]
   1f1f4:	add	r6, r6, #1
   1f1f8:	cmp	r1, #17
   1f1fc:	streq	lr, [r2, #4]
   1f200:	adds	r3, r3, #1
   1f204:	bne	1f1f0 <dta_parse_timestamp+0x348>
   1f208:	ldr	r9, [sp, #24]
   1f20c:	cmp	r7, #44	; 0x2c
   1f210:	bge	1f224 <dta_parse_timestamp+0x37c>
   1f214:	b	1f234 <dta_parse_timestamp+0x38c>
   1f218:	ldr	r0, [sp, #12]
   1f21c:	cmp	r7, #44	; 0x2c
   1f220:	blt	1f234 <dta_parse_timestamp+0x38c>
   1f224:	ldr	r2, [sp, #24]
   1f228:	mov	r1, #0
   1f22c:	cmp	r9, r2
   1f230:	beq	1f278 <dta_parse_timestamp+0x3d0>
   1f234:	ldr	r4, [sp, #20]
   1f238:	cmp	r4, #0
   1f23c:	beq	1f274 <dta_parse_timestamp+0x3cc>
   1f240:	ldr	r3, [sp, #16]
   1f244:	str	r0, [sp, #4]
   1f248:	ldr	r5, [fp, #8]
   1f24c:	add	r6, sp, #32
   1f250:	mov	r1, #1024	; 0x400
   1f254:	mov	r0, r6
   1f258:	str	r3, [sp]
   1f25c:	ldr	r2, [pc, #80]	; 1f2b4 <dta_parse_timestamp+0x40c>
   1f260:	add	r2, pc, r2
   1f264:	bl	4bdc <snprintf@plt>
   1f268:	mov	r0, r6
   1f26c:	mov	r1, r5
   1f270:	blx	r4
   1f274:	mov	r1, #29
   1f278:	mov	r0, r1
   1f27c:	sub	sp, fp, #28
   1f280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f284:	.word	0x0000c23c
   1f288:	.word	0x0000c203
   1f28c:	.word	0x0000c1c2
   1f290:	.word	0x0000c148
   1f294:	.word	0x0000c1cd
   1f298:	.word	0x0000c29b
   1f29c:	.word	0x0000c267
   1f2a0:	.word	0x0000c14e
   1f2a4:	.word	0x0000c217
   1f2a8:	.word	0x0000c07f
   1f2ac:	.word	0x0000c0e9
   1f2b0:	.word	0x0000c0bf
   1f2b4:	.word	0x0000c082
   1f2b8:	.word	0x0000c27f

0001f2bc <readstat_parse_dta>:
   1f2bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f2c0:	add	fp, sp, #28
   1f2c4:	sub	sp, sp, #4
   1f2c8:	vpush	{d8}
   1f2cc:	sub	sp, sp, #232	; 0xe8
   1f2d0:	sub	sp, sp, #2048	; 0x800
   1f2d4:	ldr	r5, [r0, #32]
   1f2d8:	mov	r7, r0
   1f2dc:	mov	r8, r2
   1f2e0:	mov	r4, r1
   1f2e4:	mov	r0, r5
   1f2e8:	bl	4e94 <dta_ctx_alloc@plt>
   1f2ec:	ldr	r2, [r5]
   1f2f0:	ldr	r1, [r5, #20]
   1f2f4:	mov	sl, r0
   1f2f8:	mov	r0, r4
   1f2fc:	blx	r2
   1f300:	cmn	r0, #1
   1f304:	beq	1f3c4 <readstat_parse_dta+0x108>
   1f308:	ldr	r3, [r5, #12]
   1f30c:	ldr	r2, [r5, #20]
   1f310:	add	r0, sp, #85	; 0x55
   1f314:	mov	r1, #4
   1f318:	blx	r3
   1f31c:	mov	r6, #2
   1f320:	cmp	r0, #4
   1f324:	bne	21820 <readstat_parse_dta+0x2564>
   1f328:	ldr	r3, [r5, #8]
   1f32c:	ldr	r2, [r5, #20]
   1f330:	mov	r0, #0
   1f334:	mov	r1, #2
   1f338:	blx	r3
   1f33c:	cmn	r0, #1
   1f340:	beq	1f3cc <readstat_parse_dta+0x110>
   1f344:	ldr	r3, [r5, #8]
   1f348:	ldr	r2, [r5, #20]
   1f34c:	mov	r9, r0
   1f350:	mov	r0, #0
   1f354:	mov	r1, #0
   1f358:	blx	r3
   1f35c:	cmn	r0, #1
   1f360:	beq	1f404 <readstat_parse_dta+0x148>
   1f364:	ldr	r1, [pc, #3864]	; 20284 <readstat_parse_dta+0xfc8>
   1f368:	add	r0, sp, #85	; 0x55
   1f36c:	mov	r2, #4
   1f370:	add	r1, pc, r1
   1f374:	bl	4e34 <strncmp@plt>
   1f378:	cmp	r0, #0
   1f37c:	beq	1f440 <readstat_parse_dta+0x184>
   1f380:	ldr	r0, [sl, #280]	; 0x118
   1f384:	mov	r1, #10
   1f388:	ldr	r3, [r0, #12]
   1f38c:	ldr	r2, [r0, #20]
   1f390:	add	r0, sp, #96	; 0x60
   1f394:	blx	r3
   1f398:	cmp	r0, #10
   1f39c:	bne	2181c <readstat_parse_dta+0x2560>
   1f3a0:	ldrb	r0, [sp, #97]	; 0x61
   1f3a4:	sub	r0, r0, #2
   1f3a8:	clz	r0, r0
   1f3ac:	lsr	r4, r0, #5
   1f3b0:	bl	4858 <machine_is_little_endian@plt>
   1f3b4:	cmp	r0, r4
   1f3b8:	bne	1f5a4 <readstat_parse_dta+0x2e8>
   1f3bc:	ldr	r2, [sp, #102]	; 0x66
   1f3c0:	b	1f5bc <readstat_parse_dta+0x300>
   1f3c4:	mov	r6, #1
   1f3c8:	b	21820 <readstat_parse_dta+0x2564>
   1f3cc:	ldr	r2, [sl, #264]	; 0x108
   1f3d0:	mov	r6, #15
   1f3d4:	cmp	r2, #0
   1f3d8:	beq	21820 <readstat_parse_dta+0x2564>
   1f3dc:	ldr	r1, [pc, #4044]	; 203b0 <readstat_parse_dta+0x10f4>
   1f3e0:	mov	r0, #14
   1f3e4:	add	r1, pc, r1
   1f3e8:	vld1.64	{d16-d17}, [r1], r0
   1f3ec:	add	r0, sl, #288	; 0x120
   1f3f0:	vld1.16	{d18-d19}, [r1]
   1f3f4:	movw	r1, #302	; 0x12e
   1f3f8:	vst1.8	{d16-d17}, [r0]
   1f3fc:	add	r1, sl, r1
   1f400:	b	1f430 <readstat_parse_dta+0x174>
   1f404:	ldr	r2, [sl, #264]	; 0x108
   1f408:	mov	r6, #15
   1f40c:	cmp	r2, #0
   1f410:	beq	21820 <readstat_parse_dta+0x2564>
   1f414:	ldr	r1, [pc, #3992]	; 203b4 <readstat_parse_dta+0x10f8>
   1f418:	add	r0, sl, #288	; 0x120
   1f41c:	add	r1, pc, r1
   1f420:	vld1.64	{d16-d17}, [r1]!
   1f424:	vld1.64	{d18-d19}, [r1]
   1f428:	add	r1, sl, #304	; 0x130
   1f42c:	vst1.8	{d16-d17}, [r0]
   1f430:	vst1.8	{d18-d19}, [r1]
   1f434:	ldr	r1, [sl, #276]	; 0x114
   1f438:	blx	r2
   1f43c:	b	21820 <readstat_parse_dta+0x2564>
   1f440:	ldr	r0, [sl, #284]	; 0x11c
   1f444:	cmp	r0, #0
   1f448:	beq	1f458 <readstat_parse_dta+0x19c>
   1f44c:	ldrb	r0, [sl, #192]	; 0xc0
   1f450:	tst	r0, #4
   1f454:	beq	1f4bc <readstat_parse_dta+0x200>
   1f458:	str	r8, [sp, #68]	; 0x44
   1f45c:	mov	r8, sl
   1f460:	mov	r1, #11
   1f464:	ldr	r0, [r8, #280]!	; 0x118
   1f468:	ldr	r3, [r0, #12]
   1f46c:	ldr	r2, [r0, #20]
   1f470:	add	r0, sp, #96	; 0x60
   1f474:	blx	r3
   1f478:	mov	r6, #2
   1f47c:	cmp	r0, #11
   1f480:	bne	21820 <readstat_parse_dta+0x2564>
   1f484:	ldr	r1, [pc, #4036]	; 20450 <readstat_parse_dta+0x1194>
   1f488:	add	r4, sp, #96	; 0x60
   1f48c:	mov	r2, #11
   1f490:	mov	r0, r4
   1f494:	add	r1, pc, r1
   1f498:	bl	4e34 <strncmp@plt>
   1f49c:	mov	r6, #5
   1f4a0:	cmp	r0, #0
   1f4a4:	bne	21820 <readstat_parse_dta+0x2564>
   1f4a8:	ldr	r0, [sl, #284]	; 0x11c
   1f4ac:	cmp	r0, #0
   1f4b0:	beq	1f654 <readstat_parse_dta+0x398>
   1f4b4:	ldrb	r0, [sl, #192]	; 0xc0
   1f4b8:	ldr	r8, [sp, #68]	; 0x44
   1f4bc:	tst	r0, #4
   1f4c0:	bne	1f648 <readstat_parse_dta+0x38c>
   1f4c4:	mov	r1, sl
   1f4c8:	ldr	r6, [r1, #280]!	; 0x118
   1f4cc:	str	r1, [sp, #64]	; 0x40
   1f4d0:	tst	r0, #4
   1f4d4:	bne	1f6bc <readstat_parse_dta+0x400>
   1f4d8:	add	r0, r6, #20
   1f4dc:	add	r6, r6, #12
   1f4e0:	ldr	r2, [r0]
   1f4e4:	ldr	r3, [r6]
   1f4e8:	add	r0, sp, #92	; 0x5c
   1f4ec:	mov	r1, #3
   1f4f0:	blx	r3
   1f4f4:	mov	r6, #2
   1f4f8:	cmp	r0, #3
   1f4fc:	bne	21820 <readstat_parse_dta+0x2564>
   1f500:	ldr	r0, [sl, #284]	; 0x11c
   1f504:	cmp	r0, #0
   1f508:	beq	1f518 <readstat_parse_dta+0x25c>
   1f50c:	ldrb	r1, [sl, #192]	; 0xc0
   1f510:	tst	r1, #4
   1f514:	beq	1f564 <readstat_parse_dta+0x2a8>
   1f518:	ldr	r0, [sp, #64]	; 0x40
   1f51c:	mov	r1, #10
   1f520:	ldr	r0, [r0]
   1f524:	ldr	r3, [r0, #12]
   1f528:	ldr	r2, [r0, #20]
   1f52c:	add	r0, sp, #96	; 0x60
   1f530:	blx	r3
   1f534:	mov	r1, #2
   1f538:	cmp	r0, #10
   1f53c:	bne	1faa4 <readstat_parse_dta+0x7e8>
   1f540:	ldr	r1, [pc, #4060]	; 20524 <readstat_parse_dta+0x1268>
   1f544:	add	r0, sp, #96	; 0x60
   1f548:	mov	r2, #10
   1f54c:	add	r1, pc, r1
   1f550:	bl	4e34 <strncmp@plt>
   1f554:	mov	r1, #5
   1f558:	cmp	r0, #0
   1f55c:	bne	1faa4 <readstat_parse_dta+0x7e8>
   1f560:	ldr	r0, [sl, #284]	; 0x11c
   1f564:	ldrb	r1, [sp, #92]	; 0x5c
   1f568:	cmp	r0, #0
   1f56c:	str	r1, [sp, #56]	; 0x38
   1f570:	ldrb	r1, [sp, #93]	; 0x5d
   1f574:	str	r1, [sp, #52]	; 0x34
   1f578:	ldrb	r1, [sp, #94]	; 0x5e
   1f57c:	str	r1, [sp, #60]	; 0x3c
   1f580:	ldr	r1, [sp, #64]	; 0x40
   1f584:	ldr	r4, [r1]
   1f588:	beq	1fa5c <readstat_parse_dta+0x7a0>
   1f58c:	ldrb	r0, [sl, #192]	; 0xc0
   1f590:	tst	r0, #4
   1f594:	bne	1fa5c <readstat_parse_dta+0x7a0>
   1f598:	add	r0, r4, #20
   1f59c:	add	r4, r4, #12
   1f5a0:	b	1fe7c <readstat_parse_dta+0xbc0>
   1f5a4:	ldrh	r0, [sp, #100]	; 0x64
   1f5a8:	bl	484c <byteswap2@plt>
   1f5ac:	strh	r0, [sp, #100]	; 0x64
   1f5b0:	ldr	r0, [sp, #102]	; 0x66
   1f5b4:	bl	4768 <byteswap4@plt>
   1f5b8:	mov	r2, r0
   1f5bc:	str	r2, [sp, #102]	; 0x66
   1f5c0:	ldr	r0, [r7, #36]	; 0x24
   1f5c4:	ldr	r3, [r7, #40]	; 0x28
   1f5c8:	ldrb	r6, [sp, #96]	; 0x60
   1f5cc:	ldrb	r4, [sp, #97]	; 0x61
   1f5d0:	ldrh	r1, [sp, #100]	; 0x64
   1f5d4:	stm	sp, {r4, r6}
   1f5d8:	str	r0, [sp, #8]
   1f5dc:	str	r3, [sp, #12]
   1f5e0:	mov	r0, sl
   1f5e4:	mov	r3, #0
   1f5e8:	bl	4b28 <dta_ctx_init@plt>
   1f5ec:	mov	r6, r0
   1f5f0:	cmp	r0, #0
   1f5f4:	bne	21820 <readstat_parse_dta+0x2564>
   1f5f8:	str	r9, [sl, #272]	; 0x110
   1f5fc:	str	r8, [sl, #276]	; 0x114
   1f600:	add	r0, r7, #16
   1f604:	mov	r1, #48	; 0x30
   1f608:	mov	r2, r7
   1f60c:	mov	r6, sl
   1f610:	vld1.32	{d16-d17}, [r0]
   1f614:	vld1.32	{d18-d19}, [r2], r1
   1f618:	add	r1, sl, #240	; 0xf0
   1f61c:	add	r0, sl, #256	; 0x100
   1f620:	str	r1, [sp, #68]	; 0x44
   1f624:	vst1.32	{d16-d17}, [r0]
   1f628:	vst1.32	{d18-d19}, [r1]
   1f62c:	ldr	r0, [r2]
   1f630:	cmp	r0, #0
   1f634:	ble	1f714 <readstat_parse_dta+0x458>
   1f638:	str	r0, [r6, #176]!	; 0xb0
   1f63c:	asr	r1, r0, #31
   1f640:	str	r1, [r6, #4]
   1f644:	b	1f71c <readstat_parse_dta+0x460>
   1f648:	str	r8, [sp, #68]	; 0x44
   1f64c:	add	r8, sl, #280	; 0x118
   1f650:	add	r4, sp, #96	; 0x60
   1f654:	ldr	r0, [r8]
   1f658:	mov	r1, #8
   1f65c:	str	r8, [sp, #64]	; 0x40
   1f660:	ldr	r3, [r0, #12]
   1f664:	ldr	r2, [r0, #20]
   1f668:	mov	r0, r4
   1f66c:	blx	r3
   1f670:	mov	r6, #2
   1f674:	cmp	r0, #8
   1f678:	bne	21820 <readstat_parse_dta+0x2564>
   1f67c:	ldr	r1, [pc, #3992]	; 2061c <readstat_parse_dta+0x1360>
   1f680:	mov	r0, r4
   1f684:	mov	r2, #8
   1f688:	add	r1, pc, r1
   1f68c:	bl	4e34 <strncmp@plt>
   1f690:	mov	r6, #5
   1f694:	cmp	r0, #0
   1f698:	bne	21820 <readstat_parse_dta+0x2564>
   1f69c:	ldr	r0, [sl, #284]	; 0x11c
   1f6a0:	ldr	r6, [sl, #280]	; 0x118
   1f6a4:	cmp	r0, #0
   1f6a8:	beq	1faac <readstat_parse_dta+0x7f0>
   1f6ac:	ldrb	r0, [sl, #192]	; 0xc0
   1f6b0:	ldr	r8, [sp, #68]	; 0x44
   1f6b4:	tst	r0, #4
   1f6b8:	beq	1f4d8 <readstat_parse_dta+0x21c>
   1f6bc:	add	r4, sp, #96	; 0x60
   1f6c0:	ldr	r3, [r6, #12]!
   1f6c4:	mov	r0, r4
   1f6c8:	mov	r1, #9
   1f6cc:	str	r6, [sp, #68]	; 0x44
   1f6d0:	ldr	r2, [r6, #8]!
   1f6d4:	str	r6, [sp, #60]	; 0x3c
   1f6d8:	blx	r3
   1f6dc:	mov	r6, #2
   1f6e0:	cmp	r0, #9
   1f6e4:	bne	21820 <readstat_parse_dta+0x2564>
   1f6e8:	ldr	r1, [pc, #3888]	; 20620 <readstat_parse_dta+0x1364>
   1f6ec:	mov	r0, r4
   1f6f0:	mov	r2, #9
   1f6f4:	add	r1, pc, r1
   1f6f8:	bl	4e34 <strncmp@plt>
   1f6fc:	mov	r6, #5
   1f700:	cmp	r0, #0
   1f704:	bne	21820 <readstat_parse_dta+0x2564>
   1f708:	ldr	r6, [sp, #68]	; 0x44
   1f70c:	ldr	r0, [sp, #60]	; 0x3c
   1f710:	b	1f4e0 <readstat_parse_dta+0x224>
   1f714:	ldr	r0, [r6, #176]!	; 0xb0
   1f718:	ldr	r1, [r6, #4]
   1f71c:	mov	r3, sl
   1f720:	mov	r4, sl
   1f724:	ldr	r2, [r3, #152]!	; 0x98
   1f728:	str	r3, [sp, #60]	; 0x3c
   1f72c:	ldr	r3, [r3, #4]
   1f730:	subs	r0, r2, r0
   1f734:	sbc	r1, r3, r1
   1f738:	cmn	r1, #1
   1f73c:	movle	r0, #0
   1f740:	strdle	r2, [r6]
   1f744:	movle	r1, #0
   1f748:	str	r6, [sp, #52]	; 0x34
   1f74c:	str	r0, [r4, #168]!	; 0xa8
   1f750:	str	r1, [r4, #4]
   1f754:	str	r4, [sp, #64]	; 0x40
   1f758:	ldr	r2, [r7, #44]	; 0x2c
   1f75c:	cmp	r2, #1
   1f760:	blt	1f784 <readstat_parse_dta+0x4c8>
   1f764:	subs	r3, r2, r0
   1f768:	rscs	r3, r1, r2, asr #31
   1f76c:	bge	1f784 <readstat_parse_dta+0x4c8>
   1f770:	asr	r1, r2, #31
   1f774:	mov	r0, r2
   1f778:	str	r2, [r4]
   1f77c:	str	r1, [r4, #4]
   1f780:	b	1f790 <readstat_parse_dta+0x4d4>
   1f784:	subs	r2, r0, #1
   1f788:	sbcs	r2, r1, #0
   1f78c:	blt	1f7b4 <readstat_parse_dta+0x4f8>
   1f790:	bl	28768 <__aeabi_l2d>
   1f794:	ldrd	r2, [sl, #184]	; 0xb8
   1f798:	vmov	d8, r0, r1
   1f79c:	mov	r0, r2
   1f7a0:	mov	r1, r3
   1f7a4:	bl	28768 <__aeabi_l2d>
   1f7a8:	vmov	d16, r0, r1
   1f7ac:	vdiv.f64	d0, d16, d8
   1f7b0:	b	1f7b8 <readstat_parse_dta+0x4fc>
   1f7b4:	vmov.i32	d0, #0	; 0x00000000
   1f7b8:	ldr	r1, [sl, #268]	; 0x10c
   1f7bc:	cmp	r1, #0
   1f7c0:	beq	1f7d8 <readstat_parse_dta+0x51c>
   1f7c4:	mov	r0, r8
   1f7c8:	blx	r1
   1f7cc:	mov	r6, #4
   1f7d0:	cmp	r0, #0
   1f7d4:	bne	21820 <readstat_parse_dta+0x2564>
   1f7d8:	mov	r7, sl
   1f7dc:	mov	r0, #0
   1f7e0:	sub	r1, fp, #176	; 0xb0
   1f7e4:	vmov.i32	q8, #0	; 0x00000000
   1f7e8:	ldr	r9, [r7, #280]!	; 0x118
   1f7ec:	strh	r0, [sp, #92]	; 0x5c
   1f7f0:	strb	r0, [sp, #89]	; 0x59
   1f7f4:	add	r0, r1, #28
   1f7f8:	vst1.32	{d16-d17}, [r0]
   1f7fc:	add	r0, r1, #16
   1f800:	vst1.64	{d16-d17}, [r0]
   1f804:	mov	r0, #32
   1f808:	vst1.64	{d16-d17}, [r1], r0
   1f80c:	mvn	r0, #0
   1f810:	str	r0, [r1]
   1f814:	mov	r1, sl
   1f818:	ldrb	r0, [r1, #192]!	; 0xc0
   1f81c:	tst	r0, #4
   1f820:	str	r1, [sp, #56]	; 0x38
   1f824:	bne	1f9b4 <readstat_parse_dta+0x6f8>
   1f828:	ldr	r0, [sl, #4]
   1f82c:	str	r7, [sp, #48]	; 0x30
   1f830:	strh	r0, [sp, #92]	; 0x5c
   1f834:	mov	r1, #1
   1f838:	uxtah	r0, r1, r0
   1f83c:	bl	4b88 <readstat_malloc@plt>
   1f840:	cmp	r0, #0
   1f844:	beq	1fa48 <readstat_parse_dta+0x78c>
   1f848:	ldr	r3, [r9, #12]
   1f84c:	ldr	r2, [r9, #20]
   1f850:	ldrh	r1, [sp, #92]	; 0x5c
   1f854:	mov	r7, r0
   1f858:	blx	r3
   1f85c:	ldrh	r1, [sp, #92]	; 0x5c
   1f860:	mov	r6, #2
   1f864:	cmp	r0, r1
   1f868:	bne	1fab8 <readstat_parse_dta+0x7fc>
   1f86c:	ldr	r1, [sp, #56]	; 0x38
   1f870:	mov	r4, #0
   1f874:	ldrb	r1, [r1]
   1f878:	tst	r1, #4
   1f87c:	bne	1f8a0 <readstat_parse_dta+0x5e4>
   1f880:	mov	r1, #0
   1f884:	mov	r2, r7
   1f888:	strb	r1, [r2, r0]!
   1f88c:	mov	r0, r7
   1f890:	ldrb	r4, [r2, #-1]
   1f894:	bl	4b58 <strlen@plt>
   1f898:	strh	r0, [sp, #92]	; 0x5c
   1f89c:	uxth	r0, r0
   1f8a0:	mov	r6, #1
   1f8a4:	orr	r0, r6, r0, lsl #2
   1f8a8:	bl	4b88 <readstat_malloc@plt>
   1f8ac:	cmp	r0, #0
   1f8b0:	str	r0, [sl]
   1f8b4:	beq	1fab4 <readstat_parse_dta+0x7f8>
   1f8b8:	ldr	r1, [sl, #236]	; 0xec
   1f8bc:	ldrh	r3, [sp, #92]	; 0x5c
   1f8c0:	mov	r2, r7
   1f8c4:	str	r1, [sp]
   1f8c8:	orr	r1, r6, r3, lsl #2
   1f8cc:	bl	4b94 <readstat_convert@plt>
   1f8d0:	mov	r6, r0
   1f8d4:	cmp	r0, #0
   1f8d8:	bne	1fab8 <readstat_parse_dta+0x7fc>
   1f8dc:	ldr	r0, [sp, #56]	; 0x38
   1f8e0:	ldrb	r0, [r0]
   1f8e4:	tst	r0, #4
   1f8e8:	bne	1fd10 <readstat_parse_dta+0xa54>
   1f8ec:	ldr	r0, [sl, #16]
   1f8f0:	strb	r0, [sp, #89]	; 0x59
   1f8f4:	tst	r0, #255	; 0xff
   1f8f8:	beq	1fde4 <readstat_parse_dta+0xb28>
   1f8fc:	uxtb	r0, r0
   1f900:	bl	4b88 <readstat_malloc@plt>
   1f904:	ldr	r3, [r9, #12]
   1f908:	ldr	r2, [r9, #20]
   1f90c:	ldrb	r1, [sp, #89]	; 0x59
   1f910:	mov	r9, r0
   1f914:	blx	r3
   1f918:	ldrb	r2, [sp, #89]	; 0x59
   1f91c:	mov	r6, #2
   1f920:	cmp	r0, r2
   1f924:	bne	1fe50 <readstat_parse_dta+0xb94>
   1f928:	ldr	r0, [sp, #56]	; 0x38
   1f92c:	ldrb	r0, [r0]
   1f930:	tst	r0, #4
   1f934:	subeq	r2, r2, #1
   1f938:	strbeq	r2, [sp, #89]	; 0x59
   1f93c:	ldrb	r0, [r9]
   1f940:	cmp	r0, #0
   1f944:	beq	1fde8 <readstat_parse_dta+0xb2c>
   1f948:	uxtb	r1, r2
   1f94c:	cmp	r4, #0
   1f950:	beq	1f980 <readstat_parse_dta+0x6c4>
   1f954:	mvn	r0, #0
   1f958:	uxtab	r2, r0, r2
   1f95c:	ldrb	r0, [r9, r2]
   1f960:	cmp	r0, #0
   1f964:	bne	1f980 <readstat_parse_dta+0x6c4>
   1f968:	add	r0, r9, #1
   1f96c:	mov	r1, r9
   1f970:	mov	r6, r9
   1f974:	bl	4840 <memmove@plt>
   1f978:	strb	r4, [r9]
   1f97c:	ldrb	r1, [sp, #89]	; 0x59
   1f980:	ldr	r0, [sl, #276]	; 0x114
   1f984:	ldr	r3, [sl, #264]	; 0x108
   1f988:	sub	r2, fp, #176	; 0xb0
   1f98c:	str	r0, [sp]
   1f990:	mov	r0, r9
   1f994:	bl	4c48 <dta_parse_timestamp@plt>
   1f998:	cmp	r0, #0
   1f99c:	beq	203a0 <readstat_parse_dta+0x10e4>
   1f9a0:	mov	r6, r0
   1f9a4:	mov	r0, r7
   1f9a8:	bl	4864 <free@plt>
   1f9ac:	ldr	r7, [sp, #48]	; 0x30
   1f9b0:	b	1fe64 <readstat_parse_dta+0xba8>
   1f9b4:	ldr	r3, [r9, #12]
   1f9b8:	ldr	r2, [r9, #20]
   1f9bc:	add	r0, sp, #96	; 0x60
   1f9c0:	mov	r1, #7
   1f9c4:	blx	r3
   1f9c8:	mov	r6, #2
   1f9cc:	cmp	r0, #7
   1f9d0:	bne	1fac4 <readstat_parse_dta+0x808>
   1f9d4:	ldr	r1, [pc, #4068]	; 209c0 <readstat_parse_dta+0x1704>
   1f9d8:	add	r0, sp, #96	; 0x60
   1f9dc:	mov	r2, #7
   1f9e0:	add	r1, pc, r1
   1f9e4:	bl	4e34 <strncmp@plt>
   1f9e8:	mov	r6, #5
   1f9ec:	cmp	r0, #0
   1f9f0:	bne	1fac4 <readstat_parse_dta+0x808>
   1f9f4:	ldr	r0, [sl, #8]
   1f9f8:	cmp	r0, #1
   1f9fc:	beq	1fce0 <readstat_parse_dta+0xa24>
   1fa00:	cmp	r0, #2
   1fa04:	bne	1fd04 <readstat_parse_dta+0xa48>
   1fa08:	ldr	r3, [r9, #12]
   1fa0c:	ldr	r2, [r9, #20]
   1fa10:	add	r0, sp, #92	; 0x5c
   1fa14:	mov	r1, #2
   1fa18:	mov	r6, #2
   1fa1c:	blx	r3
   1fa20:	cmp	r0, #2
   1fa24:	bne	1fac4 <readstat_parse_dta+0x808>
   1fa28:	ldr	r0, [sp, #56]	; 0x38
   1fa2c:	str	r7, [sp, #48]	; 0x30
   1fa30:	ldrb	r1, [r0]
   1fa34:	ldrh	r0, [sp, #92]	; 0x5c
   1fa38:	tst	r1, #1
   1fa3c:	beq	1f830 <readstat_parse_dta+0x574>
   1fa40:	bl	484c <byteswap2@plt>
   1fa44:	b	1f830 <readstat_parse_dta+0x574>
   1fa48:	ldr	r7, [sp, #48]	; 0x30
   1fa4c:	mov	r6, #3
   1fa50:	cmp	r6, #0
   1fa54:	bne	21820 <readstat_parse_dta+0x2564>
   1fa58:	b	1facc <readstat_parse_dta+0x810>
   1fa5c:	ldr	r3, [r4, #12]!
   1fa60:	mov	r1, #11
   1fa64:	mov	r0, r4
   1fa68:	ldr	r2, [r0, #8]!
   1fa6c:	str	r0, [sp, #68]	; 0x44
   1fa70:	add	r0, sp, #96	; 0x60
   1fa74:	blx	r3
   1fa78:	mov	r1, #2
   1fa7c:	cmp	r0, #11
   1fa80:	bne	1faa4 <readstat_parse_dta+0x7e8>
   1fa84:	ldr	r1, [pc, #3896]	; 209c4 <readstat_parse_dta+0x1708>
   1fa88:	add	r0, sp, #96	; 0x60
   1fa8c:	mov	r2, #11
   1fa90:	add	r1, pc, r1
   1fa94:	bl	4e34 <strncmp@plt>
   1fa98:	mov	r1, #5
   1fa9c:	cmp	r0, #0
   1faa0:	beq	1fe78 <readstat_parse_dta+0xbbc>
   1faa4:	mov	r6, r1
   1faa8:	b	21820 <readstat_parse_dta+0x2564>
   1faac:	ldr	r8, [sp, #68]	; 0x44
   1fab0:	b	1f6c0 <readstat_parse_dta+0x404>
   1fab4:	mov	r6, #3
   1fab8:	mov	r0, r7
   1fabc:	bl	4864 <free@plt>
   1fac0:	ldr	r7, [sp, #48]	; 0x30
   1fac4:	cmp	r6, #0
   1fac8:	bne	21820 <readstat_parse_dta+0x2564>
   1facc:	ldr	r0, [sl, #284]	; 0x11c
   1fad0:	cmp	r0, #0
   1fad4:	beq	1fae8 <readstat_parse_dta+0x82c>
   1fad8:	ldr	r0, [sp, #56]	; 0x38
   1fadc:	ldrb	r0, [r0]
   1fae0:	tst	r0, #4
   1fae4:	beq	1fb2c <readstat_parse_dta+0x870>
   1fae8:	ldr	r0, [r7]
   1faec:	mov	r1, #9
   1faf0:	ldr	r3, [r0, #12]
   1faf4:	ldr	r2, [r0, #20]
   1faf8:	add	r0, sp, #96	; 0x60
   1fafc:	blx	r3
   1fb00:	mov	r6, #2
   1fb04:	cmp	r0, #9
   1fb08:	bne	21820 <readstat_parse_dta+0x2564>
   1fb0c:	ldr	r1, [pc, #4044]	; 20ae0 <readstat_parse_dta+0x1824>
   1fb10:	add	r0, sp, #96	; 0x60
   1fb14:	mov	r2, #9
   1fb18:	add	r1, pc, r1
   1fb1c:	bl	4e34 <strncmp@plt>
   1fb20:	mov	r6, #5
   1fb24:	cmp	r0, #0
   1fb28:	bne	21820 <readstat_parse_dta+0x2564>
   1fb2c:	ldr	r0, [sp, #68]	; 0x44
   1fb30:	ldr	r2, [r0]
   1fb34:	cmp	r2, #0
   1fb38:	beq	1fbc8 <readstat_parse_dta+0x90c>
   1fb3c:	ldr	r0, [sp, #64]	; 0x40
   1fb40:	ldrd	r0, [r0]
   1fb44:	str	r1, [sp, #100]	; 0x64
   1fb48:	str	r0, [sp, #96]	; 0x60
   1fb4c:	ldrd	r0, [sl, #144]	; 0x90
   1fb50:	str	r1, [sp, #104]	; 0x68
   1fb54:	asr	r1, r1, #31
   1fb58:	asr	r3, r0, #31
   1fb5c:	str	r1, [sp, #108]	; 0x6c
   1fb60:	ldr	r1, [sl, #12]
   1fb64:	str	r1, [sp, #116]	; 0x74
   1fb68:	str	r1, [sp, #112]	; 0x70
   1fb6c:	mov	r1, #0
   1fb70:	str	r1, [sp, #128]	; 0x80
   1fb74:	str	r0, [sp, #120]	; 0x78
   1fb78:	str	r3, [sp, #124]	; 0x7c
   1fb7c:	ldr	r3, [sl, #232]	; 0xe8
   1fb80:	str	r1, [sp, #136]	; 0x88
   1fb84:	str	r3, [sp, #132]	; 0x84
   1fb88:	ldr	r3, [sl]
   1fb8c:	str	r1, [sp, #144]	; 0x90
   1fb90:	str	r3, [sp, #140]	; 0x8c
   1fb94:	rsbs	r3, r0, #117	; 0x75
   1fb98:	sbcs	r0, r1, r0, asr #31
   1fb9c:	ldrb	r0, [sp, #148]	; 0x94
   1fba0:	movwlt	r1, #1
   1fba4:	and	r0, r0, #254	; 0xfe
   1fba8:	orr	r0, r0, r1
   1fbac:	mov	r1, r8
   1fbb0:	strb	r0, [sp, #148]	; 0x94
   1fbb4:	add	r0, sp, #96	; 0x60
   1fbb8:	blx	r2
   1fbbc:	mov	r6, #4
   1fbc0:	cmp	r0, #0
   1fbc4:	bne	21820 <readstat_parse_dta+0x2564>
   1fbc8:	ldr	r0, [sp, #56]	; 0x38
   1fbcc:	ldrb	r0, [r0]
   1fbd0:	tst	r0, #4
   1fbd4:	bne	1fc08 <readstat_parse_dta+0x94c>
   1fbd8:	ldr	r1, [sl, #148]	; 0x94
   1fbdc:	ldr	r0, [sl, #24]
   1fbe0:	mul	r9, r0, r1
   1fbe4:	cmp	r1, #0
   1fbe8:	beq	1ff44 <readstat_parse_dta+0xc88>
   1fbec:	mov	r0, r9
   1fbf0:	bl	4b88 <readstat_malloc@plt>
   1fbf4:	mov	r8, r0
   1fbf8:	cmp	r0, #0
   1fbfc:	bne	1ff48 <readstat_parse_dta+0xc8c>
   1fc00:	mov	r6, #3
   1fc04:	b	21820 <readstat_parse_dta+0x2564>
   1fc08:	ldr	r4, [r7]
   1fc0c:	add	r0, sp, #96	; 0x60
   1fc10:	mov	r1, #5
   1fc14:	ldr	r3, [r4, #12]
   1fc18:	ldr	r2, [r4, #20]
   1fc1c:	blx	r3
   1fc20:	cmp	r0, #5
   1fc24:	bne	2181c <readstat_parse_dta+0x2560>
   1fc28:	ldr	r1, [pc, #4032]	; 20bf0 <readstat_parse_dta+0x1934>
   1fc2c:	add	r0, sp, #96	; 0x60
   1fc30:	mov	r2, #5
   1fc34:	add	r1, pc, r1
   1fc38:	bl	4e34 <strncmp@plt>
   1fc3c:	cmp	r0, #0
   1fc40:	bne	2181c <readstat_parse_dta+0x2560>
   1fc44:	ldr	r3, [r4, #12]
   1fc48:	ldr	r2, [r4, #20]
   1fc4c:	sub	r0, fp, #176	; 0xb0
   1fc50:	mov	r1, #112	; 0x70
   1fc54:	blx	r3
   1fc58:	cmp	r0, #112	; 0x70
   1fc5c:	bne	2181c <readstat_parse_dta+0x2560>
   1fc60:	ldr	r0, [sl, #284]	; 0x11c
   1fc64:	cmp	r0, #0
   1fc68:	beq	1fc7c <readstat_parse_dta+0x9c0>
   1fc6c:	ldr	r0, [sp, #56]	; 0x38
   1fc70:	ldrb	r0, [r0]
   1fc74:	tst	r0, #4
   1fc78:	beq	1fcc0 <readstat_parse_dta+0xa04>
   1fc7c:	ldr	r0, [r7]
   1fc80:	mov	r1, #6
   1fc84:	ldr	r3, [r0, #12]
   1fc88:	ldr	r2, [r0, #20]
   1fc8c:	add	r0, sp, #96	; 0x60
   1fc90:	blx	r3
   1fc94:	cmp	r0, #6
   1fc98:	bne	2181c <readstat_parse_dta+0x2560>
   1fc9c:	ldr	r1, [pc, #3920]	; 20bf4 <readstat_parse_dta+0x1938>
   1fca0:	add	r0, sp, #96	; 0x60
   1fca4:	mov	r2, #6
   1fca8:	add	r1, pc, r1
   1fcac:	bl	4e34 <strncmp@plt>
   1fcb0:	cmp	r0, #0
   1fcb4:	bne	2181c <readstat_parse_dta+0x2560>
   1fcb8:	ldr	r0, [sp, #56]	; 0x38
   1fcbc:	ldrb	r0, [r0]
   1fcc0:	ldr	r2, [fp, #-104]	; 0xffffff98
   1fcc4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1fcc8:	tst	r0, #1
   1fccc:	bne	204ec <readstat_parse_dta+0x1230>
   1fcd0:	strd	r2, [sl, #120]	; 0x78
   1fcd4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1fcd8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1fcdc:	b	20510 <readstat_parse_dta+0x1254>
   1fce0:	ldr	r3, [r9, #12]
   1fce4:	ldr	r2, [r9, #20]
   1fce8:	add	r0, sp, #96	; 0x60
   1fcec:	mov	r1, #1
   1fcf0:	blx	r3
   1fcf4:	cmp	r0, #1
   1fcf8:	bne	200ec <readstat_parse_dta+0xe30>
   1fcfc:	ldrb	r0, [sp, #96]	; 0x60
   1fd00:	b	1f82c <readstat_parse_dta+0x570>
   1fd04:	ldrh	r0, [sp, #92]	; 0x5c
   1fd08:	str	r7, [sp, #48]	; 0x30
   1fd0c:	b	1f834 <readstat_parse_dta+0x578>
   1fd10:	ldr	r0, [sl, #280]	; 0x118
   1fd14:	mov	r1, #8
   1fd18:	ldr	r3, [r0, #12]
   1fd1c:	ldr	r2, [r0, #20]
   1fd20:	add	r0, sp, #96	; 0x60
   1fd24:	blx	r3
   1fd28:	mov	r6, #2
   1fd2c:	cmp	r0, #8
   1fd30:	bne	1fab8 <readstat_parse_dta+0x7fc>
   1fd34:	ldr	r1, [pc, #3772]	; 20bf8 <readstat_parse_dta+0x193c>
   1fd38:	add	r0, sp, #96	; 0x60
   1fd3c:	mov	r2, #8
   1fd40:	add	r1, pc, r1
   1fd44:	bl	4e34 <strncmp@plt>
   1fd48:	mov	r6, #5
   1fd4c:	cmp	r0, #0
   1fd50:	bne	1fab8 <readstat_parse_dta+0x7fc>
   1fd54:	ldr	r0, [sl, #284]	; 0x11c
   1fd58:	cmp	r0, #0
   1fd5c:	beq	1fd70 <readstat_parse_dta+0xab4>
   1fd60:	ldr	r0, [sp, #56]	; 0x38
   1fd64:	ldrb	r0, [r0]
   1fd68:	tst	r0, #4
   1fd6c:	beq	1fdb8 <readstat_parse_dta+0xafc>
   1fd70:	ldr	r0, [sp, #48]	; 0x30
   1fd74:	mov	r1, #11
   1fd78:	ldr	r0, [r0]
   1fd7c:	ldr	r3, [r0, #12]
   1fd80:	ldr	r2, [r0, #20]
   1fd84:	add	r0, sp, #96	; 0x60
   1fd88:	blx	r3
   1fd8c:	mov	r6, #2
   1fd90:	cmp	r0, #11
   1fd94:	bne	1fab8 <readstat_parse_dta+0x7fc>
   1fd98:	ldr	r1, [pc, #4012]	; 20d4c <readstat_parse_dta+0x1a90>
   1fd9c:	add	r0, sp, #96	; 0x60
   1fda0:	mov	r2, #11
   1fda4:	add	r1, pc, r1
   1fda8:	bl	4e34 <strncmp@plt>
   1fdac:	mov	r6, #5
   1fdb0:	cmp	r0, #0
   1fdb4:	bne	1fab8 <readstat_parse_dta+0x7fc>
   1fdb8:	ldr	r3, [r9, #12]
   1fdbc:	ldr	r2, [r9, #20]
   1fdc0:	add	r0, sp, #89	; 0x59
   1fdc4:	mov	r1, #1
   1fdc8:	blx	r3
   1fdcc:	mov	r6, #2
   1fdd0:	cmp	r0, #1
   1fdd4:	bne	1fab8 <readstat_parse_dta+0x7fc>
   1fdd8:	ldrb	r0, [sp, #89]	; 0x59
   1fddc:	tst	r0, #255	; 0xff
   1fde0:	bne	1f8fc <readstat_parse_dta+0x640>
   1fde4:	mov	r9, #0
   1fde8:	ldr	r0, [sl, #284]	; 0x11c
   1fdec:	cmp	r0, #0
   1fdf0:	beq	1fe08 <readstat_parse_dta+0xb4c>
   1fdf4:	ldr	r0, [sp, #56]	; 0x38
   1fdf8:	mov	r6, #0
   1fdfc:	ldrb	r0, [r0]
   1fe00:	tst	r0, #4
   1fe04:	beq	1fe50 <readstat_parse_dta+0xb94>
   1fe08:	ldr	r0, [sp, #48]	; 0x30
   1fe0c:	mov	r1, #12
   1fe10:	ldr	r0, [r0]
   1fe14:	ldr	r3, [r0, #12]
   1fe18:	ldr	r2, [r0, #20]
   1fe1c:	add	r0, sp, #96	; 0x60
   1fe20:	blx	r3
   1fe24:	mov	r6, #2
   1fe28:	cmp	r0, #12
   1fe2c:	bne	1fe50 <readstat_parse_dta+0xb94>
   1fe30:	ldr	r1, [pc, #3972]	; 20dbc <readstat_parse_dta+0x1b00>
   1fe34:	add	r0, sp, #96	; 0x60
   1fe38:	mov	r2, #12
   1fe3c:	add	r1, pc, r1
   1fe40:	bl	4e34 <strncmp@plt>
   1fe44:	mov	r6, r0
   1fe48:	cmp	r0, #0
   1fe4c:	movwne	r6, #5
   1fe50:	mov	r0, r7
   1fe54:	bl	4864 <free@plt>
   1fe58:	ldr	r7, [sp, #48]	; 0x30
   1fe5c:	cmp	r9, #0
   1fe60:	beq	1fac4 <readstat_parse_dta+0x808>
   1fe64:	mov	r0, r9
   1fe68:	bl	4864 <free@plt>
   1fe6c:	cmp	r6, #0
   1fe70:	bne	21820 <readstat_parse_dta+0x2564>
   1fe74:	b	1facc <readstat_parse_dta+0x810>
   1fe78:	ldr	r0, [sp, #68]	; 0x44
   1fe7c:	ldr	r2, [r0]
   1fe80:	ldr	r3, [r4]
   1fe84:	add	r0, sp, #89	; 0x59
   1fe88:	mov	r1, #3
   1fe8c:	blx	r3
   1fe90:	cmp	r0, #3
   1fe94:	bne	21820 <readstat_parse_dta+0x2564>
   1fe98:	ldr	r0, [sl, #284]	; 0x11c
   1fe9c:	cmp	r0, #0
   1fea0:	beq	1feb0 <readstat_parse_dta+0xbf4>
   1fea4:	ldrb	r0, [sl, #192]	; 0xc0
   1fea8:	tst	r0, #4
   1feac:	beq	1fef8 <readstat_parse_dta+0xc3c>
   1feb0:	ldr	r0, [sp, #64]	; 0x40
   1feb4:	mov	r1, #12
   1feb8:	ldr	r0, [r0]
   1febc:	ldr	r3, [r0, #12]
   1fec0:	ldr	r2, [r0, #20]
   1fec4:	add	r0, sp, #96	; 0x60
   1fec8:	blx	r3
   1fecc:	mov	r6, #2
   1fed0:	cmp	r0, #12
   1fed4:	bne	21820 <readstat_parse_dta+0x2564>
   1fed8:	ldr	r1, [pc, #4000]	; 20e80 <readstat_parse_dta+0x1bc4>
   1fedc:	add	r0, sp, #96	; 0x60
   1fee0:	mov	r2, #12
   1fee4:	add	r1, pc, r1
   1fee8:	bl	4e34 <strncmp@plt>
   1feec:	mov	r6, #5
   1fef0:	cmp	r0, #0
   1fef4:	bne	21820 <readstat_parse_dta+0x2564>
   1fef8:	ldr	r1, [pc, #3972]	; 20e84 <readstat_parse_dta+0x1bc8>
   1fefc:	add	r0, sp, #89	; 0x59
   1ff00:	mov	r2, #3
   1ff04:	add	r1, pc, r1
   1ff08:	bl	4e34 <strncmp@plt>
   1ff0c:	cmp	r0, #0
   1ff10:	beq	200fc <readstat_parse_dta+0xe40>
   1ff14:	ldr	r1, [pc, #3948]	; 20e88 <readstat_parse_dta+0x1bcc>
   1ff18:	add	r0, sp, #89	; 0x59
   1ff1c:	mov	r2, #3
   1ff20:	add	r1, pc, r1
   1ff24:	bl	4e34 <strncmp@plt>
   1ff28:	mov	r6, #5
   1ff2c:	cmp	r0, #0
   1ff30:	bne	21820 <readstat_parse_dta+0x2564>
   1ff34:	mov	r4, #1
   1ff38:	mov	r0, #2
   1ff3c:	str	r8, [sp, #68]	; 0x44
   1ff40:	b	20108 <readstat_parse_dta+0xe4c>
   1ff44:	mov	r8, #0
   1ff48:	ldr	r0, [sl, #284]	; 0x11c
   1ff4c:	ldr	r4, [sl, #280]	; 0x118
   1ff50:	str	r7, [sp, #48]	; 0x30
   1ff54:	cmp	r0, #0
   1ff58:	beq	1ff78 <readstat_parse_dta+0xcbc>
   1ff5c:	ldr	r0, [sp, #56]	; 0x38
   1ff60:	ldrb	r0, [r0]
   1ff64:	tst	r0, #4
   1ff68:	bne	1ff78 <readstat_parse_dta+0xcbc>
   1ff6c:	add	r7, r4, #20
   1ff70:	add	r4, r4, #12
   1ff74:	b	1ffbc <readstat_parse_dta+0xd00>
   1ff78:	ldr	r3, [r4, #12]!
   1ff7c:	add	r0, sp, #96	; 0x60
   1ff80:	mov	r1, #16
   1ff84:	mov	r7, r4
   1ff88:	ldr	r2, [r7, #8]!
   1ff8c:	blx	r3
   1ff90:	mov	r6, #2
   1ff94:	cmp	r0, #16
   1ff98:	bne	20c44 <readstat_parse_dta+0x1988>
   1ff9c:	ldr	r1, [pc, #4032]	; 20f64 <readstat_parse_dta+0x1ca8>
   1ffa0:	add	r0, sp, #96	; 0x60
   1ffa4:	mov	r2, #16
   1ffa8:	add	r1, pc, r1
   1ffac:	bl	4e34 <strncmp@plt>
   1ffb0:	mov	r6, #5
   1ffb4:	cmp	r0, #0
   1ffb8:	bne	20c44 <readstat_parse_dta+0x1988>
   1ffbc:	ldr	r2, [r7]
   1ffc0:	ldr	r3, [r4]
   1ffc4:	mov	r0, r8
   1ffc8:	mov	r1, r9
   1ffcc:	blx	r3
   1ffd0:	mov	r6, #2
   1ffd4:	cmp	r0, r9
   1ffd8:	bne	20c44 <readstat_parse_dta+0x1988>
   1ffdc:	ldr	r0, [sl, #284]	; 0x11c
   1ffe0:	cmp	r0, #0
   1ffe4:	beq	1fff8 <readstat_parse_dta+0xd3c>
   1ffe8:	ldr	r0, [sp, #56]	; 0x38
   1ffec:	ldrb	r0, [r0]
   1fff0:	tst	r0, #4
   1fff4:	beq	20040 <readstat_parse_dta+0xd84>
   1fff8:	ldr	r0, [sp, #48]	; 0x30
   1fffc:	mov	r1, #17
   20000:	ldr	r0, [r0]
   20004:	ldr	r3, [r0, #12]
   20008:	ldr	r2, [r0, #20]
   2000c:	add	r0, sp, #96	; 0x60
   20010:	blx	r3
   20014:	mov	r1, #2
   20018:	cmp	r0, #17
   2001c:	bne	20c40 <readstat_parse_dta+0x1984>
   20020:	ldr	r1, [pc, #3904]	; 20f68 <readstat_parse_dta+0x1cac>
   20024:	add	r0, sp, #96	; 0x60
   20028:	mov	r2, #17
   2002c:	add	r1, pc, r1
   20030:	bl	4e34 <strncmp@plt>
   20034:	mov	r1, #5
   20038:	cmp	r0, #0
   2003c:	bne	20c40 <readstat_parse_dta+0x1984>
   20040:	ldr	r0, [sl, #24]
   20044:	cmp	r0, #2
   20048:	beq	203b8 <readstat_parse_dta+0x10fc>
   2004c:	cmp	r0, #1
   20050:	bne	20418 <readstat_parse_dta+0x115c>
   20054:	ldr	r9, [sl, #148]	; 0x94
   20058:	cmp	r9, #1
   2005c:	blt	20418 <readstat_parse_dta+0x115c>
   20060:	ldr	ip, [sl, #28]
   20064:	mov	lr, #0
   20068:	cmp	r9, #8
   2006c:	bcc	200cc <readstat_parse_dta+0xe10>
   20070:	add	r1, r8, r9
   20074:	cmp	r1, ip
   20078:	bls	20088 <readstat_parse_dta+0xdcc>
   2007c:	add	r1, ip, r9, lsl #1
   20080:	cmp	r8, r1
   20084:	bcc	200cc <readstat_parse_dta+0xe10>
   20088:	bic	lr, r9, #7
   2008c:	add	r3, sp, #72	; 0x48
   20090:	mov	r1, ip
   20094:	mov	r4, r8
   20098:	mov	r2, lr
   2009c:	ldr	r7, [r4]
   200a0:	ldr	r0, [r4, #4]
   200a4:	subs	r2, r2, #8
   200a8:	add	r4, r4, #8
   200ac:	str	r0, [sp, #76]	; 0x4c
   200b0:	str	r7, [sp, #72]	; 0x48
   200b4:	vld1.8	{d16}, [r3 :64]
   200b8:	vmovl.u8	q8, d16
   200bc:	vst1.16	{d16-d17}, [r1]!
   200c0:	bne	2009c <readstat_parse_dta+0xde0>
   200c4:	cmp	r9, lr
   200c8:	beq	20418 <readstat_parse_dta+0x115c>
   200cc:	add	r1, r8, lr
   200d0:	add	r2, ip, lr, lsl #1
   200d4:	sub	r0, r9, lr
   200d8:	ldrb	r3, [r1], #1
   200dc:	subs	r0, r0, #1
   200e0:	strh	r3, [r2], #2
   200e4:	bne	200d8 <readstat_parse_dta+0xe1c>
   200e8:	b	20418 <readstat_parse_dta+0x115c>
   200ec:	mov	r6, #2
   200f0:	cmp	r6, #0
   200f4:	bne	21820 <readstat_parse_dta+0x2564>
   200f8:	b	1facc <readstat_parse_dta+0x810>
   200fc:	str	r8, [sp, #68]	; 0x44
   20100:	mov	r4, #0
   20104:	mov	r0, #1
   20108:	ldr	r1, [sp, #56]	; 0x38
   2010c:	str	r0, [sp, #48]	; 0x30
   20110:	mov	r0, #100	; 0x64
   20114:	mul	r0, r1, r0
   20118:	ldr	r1, [sp, #52]	; 0x34
   2011c:	add	r1, r1, r1, lsl #2
   20120:	add	r0, r0, r1, lsl #1
   20124:	ldr	r1, [sp, #60]	; 0x3c
   20128:	add	r0, r0, r1
   2012c:	add	r6, r0, #48	; 0x30
   20130:	bl	4858 <machine_is_little_endian@plt>
   20134:	eor	r0, r0, r4
   20138:	str	r0, [sp, #60]	; 0x3c
   2013c:	uxtb	r0, r6
   20140:	cmp	r0, #119	; 0x77
   20144:	str	r0, [sp, #56]	; 0x38
   20148:	bcc	20174 <readstat_parse_dta+0xeb8>
   2014c:	ldr	r0, [sl, #284]	; 0x11c
   20150:	ldr	r4, [sl, #280]	; 0x118
   20154:	cmp	r0, #0
   20158:	beq	2019c <readstat_parse_dta+0xee0>
   2015c:	ldrb	r0, [sl, #192]	; 0xc0
   20160:	tst	r0, #4
   20164:	bne	2019c <readstat_parse_dta+0xee0>
   20168:	add	r8, r4, #20
   2016c:	add	r4, r4, #12
   20170:	b	201e0 <readstat_parse_dta+0xf24>
   20174:	ldr	r0, [sl, #284]	; 0x11c
   20178:	ldr	r4, [sl, #280]	; 0x118
   2017c:	cmp	r0, #0
   20180:	beq	20288 <readstat_parse_dta+0xfcc>
   20184:	ldrb	r0, [sl, #192]	; 0xc0
   20188:	tst	r0, #4
   2018c:	bne	20288 <readstat_parse_dta+0xfcc>
   20190:	add	r8, r4, #20
   20194:	add	r4, r4, #12
   20198:	b	202cc <readstat_parse_dta+0x1010>
   2019c:	ldr	r3, [r4, #12]!
   201a0:	add	r0, sp, #96	; 0x60
   201a4:	mov	r1, #3
   201a8:	mov	r8, r4
   201ac:	ldr	r2, [r8, #8]!
   201b0:	blx	r3
   201b4:	mov	r6, #2
   201b8:	cmp	r0, #3
   201bc:	bne	21820 <readstat_parse_dta+0x2564>
   201c0:	ldr	r1, [pc, #3972]	; 2114c <readstat_parse_dta+0x1e90>
   201c4:	add	r0, sp, #96	; 0x60
   201c8:	mov	r2, #3
   201cc:	add	r1, pc, r1
   201d0:	bl	4e34 <strncmp@plt>
   201d4:	mov	r6, #5
   201d8:	cmp	r0, #0
   201dc:	bne	21820 <readstat_parse_dta+0x2564>
   201e0:	ldr	r2, [r8]
   201e4:	ldr	r3, [r4]
   201e8:	sub	r0, fp, #176	; 0xb0
   201ec:	mov	r1, #4
   201f0:	blx	r3
   201f4:	mov	r6, #2
   201f8:	cmp	r0, #4
   201fc:	bne	21820 <readstat_parse_dta+0x2564>
   20200:	ldr	r0, [sl, #284]	; 0x11c
   20204:	cmp	r0, #0
   20208:	beq	20218 <readstat_parse_dta+0xf5c>
   2020c:	ldrb	r0, [sl, #192]	; 0xc0
   20210:	tst	r0, #4
   20214:	beq	20260 <readstat_parse_dta+0xfa4>
   20218:	ldr	r0, [sp, #64]	; 0x40
   2021c:	mov	r1, #4
   20220:	ldr	r0, [r0]
   20224:	ldr	r3, [r0, #12]
   20228:	ldr	r2, [r0, #20]
   2022c:	add	r0, sp, #96	; 0x60
   20230:	blx	r3
   20234:	mov	r6, #2
   20238:	cmp	r0, #4
   2023c:	bne	21820 <readstat_parse_dta+0x2564>
   20240:	ldr	r1, [pc, #3848]	; 21150 <readstat_parse_dta+0x1e94>
   20244:	add	r0, sp, #96	; 0x60
   20248:	mov	r2, #4
   2024c:	add	r1, pc, r1
   20250:	bl	4e34 <strncmp@plt>
   20254:	mov	r6, #5
   20258:	cmp	r0, #0
   2025c:	bne	21820 <readstat_parse_dta+0x2564>
   20260:	ldr	r0, [fp, #-176]	; 0xffffff50
   20264:	str	r0, [sp, #52]	; 0x34
   20268:	ldr	r0, [sp, #60]	; 0x3c
   2026c:	cmp	r0, #0
   20270:	beq	20378 <readstat_parse_dta+0x10bc>
   20274:	ldr	r0, [sp, #52]	; 0x34
   20278:	bl	4768 <byteswap4@plt>
   2027c:	str	r0, [sp, #52]	; 0x34
   20280:	b	20378 <readstat_parse_dta+0x10bc>
   20284:	.word	0x0000bfe0
   20288:	ldr	r3, [r4, #12]!
   2028c:	add	r0, sp, #96	; 0x60
   20290:	mov	r1, #3
   20294:	mov	r8, r4
   20298:	ldr	r2, [r8, #8]!
   2029c:	blx	r3
   202a0:	mov	r6, #2
   202a4:	cmp	r0, #3
   202a8:	bne	21820 <readstat_parse_dta+0x2564>
   202ac:	ldr	r1, [pc, #4032]	; 21274 <readstat_parse_dta+0x1fb8>
   202b0:	add	r0, sp, #96	; 0x60
   202b4:	mov	r2, #3
   202b8:	add	r1, pc, r1
   202bc:	bl	4e34 <strncmp@plt>
   202c0:	mov	r6, #5
   202c4:	cmp	r0, #0
   202c8:	bne	21820 <readstat_parse_dta+0x2564>
   202cc:	ldr	r2, [r8]
   202d0:	ldr	r3, [r4]
   202d4:	sub	r0, fp, #176	; 0xb0
   202d8:	mov	r1, #2
   202dc:	mov	r6, #2
   202e0:	blx	r3
   202e4:	cmp	r0, #2
   202e8:	bne	21820 <readstat_parse_dta+0x2564>
   202ec:	ldr	r0, [sl, #284]	; 0x11c
   202f0:	cmp	r0, #0
   202f4:	beq	20304 <readstat_parse_dta+0x1048>
   202f8:	ldrb	r0, [sl, #192]	; 0xc0
   202fc:	tst	r0, #4
   20300:	beq	2034c <readstat_parse_dta+0x1090>
   20304:	ldr	r0, [sp, #64]	; 0x40
   20308:	mov	r1, #4
   2030c:	ldr	r0, [r0]
   20310:	ldr	r3, [r0, #12]
   20314:	ldr	r2, [r0, #20]
   20318:	add	r0, sp, #96	; 0x60
   2031c:	blx	r3
   20320:	mov	r6, #2
   20324:	cmp	r0, #4
   20328:	bne	21820 <readstat_parse_dta+0x2564>
   2032c:	ldr	r1, [pc, #4056]	; 2130c <readstat_parse_dta+0x2050>
   20330:	add	r0, sp, #96	; 0x60
   20334:	mov	r2, #4
   20338:	add	r1, pc, r1
   2033c:	bl	4e34 <strncmp@plt>
   20340:	mov	r6, #5
   20344:	cmp	r0, #0
   20348:	bne	21820 <readstat_parse_dta+0x2564>
   2034c:	ldrh	r0, [fp, #-176]	; 0xffffff50
   20350:	str	r0, [sp, #52]	; 0x34
   20354:	ldr	r0, [sp, #60]	; 0x3c
   20358:	cmp	r0, #0
   2035c:	beq	2036c <readstat_parse_dta+0x10b0>
   20360:	ldr	r0, [sp, #52]	; 0x34
   20364:	bl	484c <byteswap2@plt>
   20368:	str	r0, [sp, #52]	; 0x34
   2036c:	ldr	r0, [sp, #56]	; 0x38
   20370:	cmp	r0, #118	; 0x76
   20374:	bcc	20714 <readstat_parse_dta+0x1458>
   20378:	ldr	r0, [sl, #284]	; 0x11c
   2037c:	ldr	r4, [sl, #280]	; 0x118
   20380:	cmp	r0, #0
   20384:	beq	20624 <readstat_parse_dta+0x1368>
   20388:	ldrb	r0, [sl, #192]	; 0xc0
   2038c:	tst	r0, #4
   20390:	bne	20624 <readstat_parse_dta+0x1368>
   20394:	add	r8, r4, #20
   20398:	add	r4, r4, #12
   2039c:	b	20668 <readstat_parse_dta+0x13ac>
   203a0:	sub	r0, fp, #176	; 0xb0
   203a4:	bl	47f8 <mktime@plt>
   203a8:	str	r0, [sl, #12]
   203ac:	b	1fde8 <readstat_parse_dta+0xb2c>
   203b0:	.word	0x0000bf2c
   203b4:	.word	0x0000bf14
   203b8:	ldr	r0, [sl, #28]
   203bc:	mov	r1, r8
   203c0:	mov	r2, r9
   203c4:	bl	48b8 <memcpy@plt>
   203c8:	ldrb	r0, [sl, #192]	; 0xc0
   203cc:	tst	r0, #1
   203d0:	beq	20418 <readstat_parse_dta+0x115c>
   203d4:	ldr	r0, [sl, #148]	; 0x94
   203d8:	cmp	r0, #1
   203dc:	blt	20418 <readstat_parse_dta+0x115c>
   203e0:	ldr	r1, [sl, #28]
   203e4:	mov	r4, #0
   203e8:	mov	r7, #0
   203ec:	add	r0, r1, r4
   203f0:	ldrh	r0, [r0]
   203f4:	bl	484c <byteswap2@plt>
   203f8:	ldr	r1, [sl, #28]
   203fc:	add	r7, r7, #1
   20400:	add	r2, r1, r4
   20404:	add	r4, r4, #2
   20408:	strh	r0, [r2]
   2040c:	ldr	r0, [sl, #148]	; 0x94
   20410:	cmp	r7, r0
   20414:	blt	203ec <readstat_parse_dta+0x1130>
   20418:	ldr	r0, [sl, #36]	; 0x24
   2041c:	ldr	r4, [sl, #40]	; 0x28
   20420:	ldr	r7, [sl, #280]	; 0x118
   20424:	str	r0, [sp, #68]	; 0x44
   20428:	ldr	r0, [sl, #284]	; 0x11c
   2042c:	cmp	r0, #0
   20430:	beq	20454 <readstat_parse_dta+0x1198>
   20434:	ldr	r0, [sp, #56]	; 0x38
   20438:	ldrb	r0, [r0]
   2043c:	tst	r0, #4
   20440:	bne	20454 <readstat_parse_dta+0x1198>
   20444:	add	r9, r7, #20
   20448:	add	r7, r7, #12
   2044c:	b	20498 <readstat_parse_dta+0x11dc>
   20450:	.word	0x0000becb
   20454:	ldr	r3, [r7, #12]!
   20458:	add	r0, sp, #96	; 0x60
   2045c:	mov	r1, #10
   20460:	mov	r9, r7
   20464:	ldr	r2, [r9, #8]!
   20468:	blx	r3
   2046c:	mov	r1, #2
   20470:	cmp	r0, #10
   20474:	bne	20c40 <readstat_parse_dta+0x1984>
   20478:	ldr	r1, [pc, #3792]	; 21350 <readstat_parse_dta+0x2094>
   2047c:	add	r0, sp, #96	; 0x60
   20480:	mov	r2, #10
   20484:	add	r1, pc, r1
   20488:	bl	4e34 <strncmp@plt>
   2048c:	mov	r1, #5
   20490:	cmp	r0, #0
   20494:	bne	20c40 <readstat_parse_dta+0x1984>
   20498:	ldr	r2, [r9]
   2049c:	ldr	r3, [r7]
   204a0:	ldr	r0, [sp, #68]	; 0x44
   204a4:	mov	r1, r4
   204a8:	blx	r3
   204ac:	cmp	r0, r4
   204b0:	bne	20c44 <readstat_parse_dta+0x1988>
   204b4:	ldr	r0, [sl, #284]	; 0x11c
   204b8:	cmp	r0, #0
   204bc:	beq	20528 <readstat_parse_dta+0x126c>
   204c0:	ldr	r0, [sp, #56]	; 0x38
   204c4:	ldrb	r0, [r0]
   204c8:	tst	r0, #4
   204cc:	bne	20528 <readstat_parse_dta+0x126c>
   204d0:	ldr	r1, [sl, #44]	; 0x2c
   204d4:	ldr	r7, [sl, #48]	; 0x30
   204d8:	ldr	r4, [sl, #280]	; 0x118
   204dc:	str	r1, [sp, #68]	; 0x44
   204e0:	tst	r0, #4
   204e4:	beq	2059c <readstat_parse_dta+0x12e0>
   204e8:	b	2073c <readstat_parse_dta+0x1480>
   204ec:	mov	r0, r2
   204f0:	mov	r1, r3
   204f4:	bl	4750 <byteswap8@plt>
   204f8:	strd	r0, [sl, #120]	; 0x78
   204fc:	ldrb	r2, [sl, #192]	; 0xc0
   20500:	ldr	r0, [fp, #-96]	; 0xffffffa0
   20504:	ldr	r1, [fp, #-92]	; 0xffffffa4
   20508:	tst	r2, #1
   2050c:	bne	205f8 <readstat_parse_dta+0x133c>
   20510:	strd	r0, [sl, #128]	; 0x80
   20514:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20518:	ldr	r1, [fp, #-84]	; 0xffffffac
   2051c:	strd	r0, [sl, #136]	; 0x88
   20520:	b	1fbd8 <readstat_parse_dta+0x91c>
   20524:	.word	0x0000c0fd
   20528:	ldr	r0, [sp, #48]	; 0x30
   2052c:	mov	r1, #11
   20530:	ldr	r0, [r0]
   20534:	ldr	r3, [r0, #12]
   20538:	ldr	r2, [r0, #20]
   2053c:	add	r0, sp, #96	; 0x60
   20540:	blx	r3
   20544:	mov	r1, #2
   20548:	cmp	r0, #11
   2054c:	bne	20c40 <readstat_parse_dta+0x1984>
   20550:	ldr	r1, [pc, #3920]	; 214a8 <readstat_parse_dta+0x21ec>
   20554:	add	r0, sp, #96	; 0x60
   20558:	mov	r2, #11
   2055c:	add	r1, pc, r1
   20560:	bl	4e34 <strncmp@plt>
   20564:	mov	r1, #5
   20568:	cmp	r0, #0
   2056c:	bne	20c40 <readstat_parse_dta+0x1984>
   20570:	ldr	r0, [sl, #44]	; 0x2c
   20574:	ldr	r7, [sl, #48]	; 0x30
   20578:	ldr	r4, [sl, #280]	; 0x118
   2057c:	str	r0, [sp, #68]	; 0x44
   20580:	ldr	r0, [sl, #284]	; 0x11c
   20584:	cmp	r0, #0
   20588:	beq	2073c <readstat_parse_dta+0x1480>
   2058c:	ldr	r0, [sp, #56]	; 0x38
   20590:	ldrb	r0, [r0]
   20594:	tst	r0, #4
   20598:	bne	2073c <readstat_parse_dta+0x1480>
   2059c:	add	r9, r4, #20
   205a0:	add	r4, r4, #12
   205a4:	ldr	r2, [r9]
   205a8:	ldr	r3, [r4]
   205ac:	ldr	r0, [sp, #68]	; 0x44
   205b0:	mov	r1, r7
   205b4:	blx	r3
   205b8:	cmp	r0, r7
   205bc:	bne	20c44 <readstat_parse_dta+0x1988>
   205c0:	ldr	r0, [sl, #284]	; 0x11c
   205c4:	cmp	r0, #0
   205c8:	beq	208a8 <readstat_parse_dta+0x15ec>
   205cc:	ldr	r0, [sp, #56]	; 0x38
   205d0:	ldrb	r0, [r0]
   205d4:	tst	r0, #4
   205d8:	bne	208a8 <readstat_parse_dta+0x15ec>
   205dc:	ldr	r1, [sl, #52]	; 0x34
   205e0:	ldr	r7, [sl, #56]	; 0x38
   205e4:	ldr	r4, [sl, #280]	; 0x118
   205e8:	str	r1, [sp, #68]	; 0x44
   205ec:	tst	r0, #4
   205f0:	beq	2091c <readstat_parse_dta+0x1660>
   205f4:	b	20978 <readstat_parse_dta+0x16bc>
   205f8:	bl	4750 <byteswap8@plt>
   205fc:	strd	r0, [sl, #128]	; 0x80
   20600:	ldrb	r2, [sl, #192]	; 0xc0
   20604:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20608:	ldr	r1, [fp, #-84]	; 0xffffffac
   2060c:	tst	r2, #1
   20610:	beq	2051c <readstat_parse_dta+0x1260>
   20614:	bl	4750 <byteswap8@plt>
   20618:	b	2051c <readstat_parse_dta+0x1260>
   2061c:	.word	0x0000bce3
   20620:	.word	0x0000bc80
   20624:	ldr	r3, [r4, #12]!
   20628:	add	r0, sp, #96	; 0x60
   2062c:	mov	r1, #3
   20630:	mov	r8, r4
   20634:	ldr	r2, [r8, #8]!
   20638:	blx	r3
   2063c:	mov	r6, #2
   20640:	cmp	r0, #3
   20644:	bne	20870 <readstat_parse_dta+0x15b4>
   20648:	ldr	r1, [pc, #4056]	; 21628 <readstat_parse_dta+0x236c>
   2064c:	add	r0, sp, #96	; 0x60
   20650:	mov	r2, #3
   20654:	add	r1, pc, r1
   20658:	bl	4e34 <strncmp@plt>
   2065c:	mov	r6, #5
   20660:	cmp	r0, #0
   20664:	bne	20870 <readstat_parse_dta+0x15b4>
   20668:	ldr	r2, [r8]
   2066c:	ldr	r3, [r4]
   20670:	sub	r0, fp, #176	; 0xb0
   20674:	mov	r1, #8
   20678:	blx	r3
   2067c:	cmp	r0, #8
   20680:	bne	2086c <readstat_parse_dta+0x15b0>
   20684:	ldr	r0, [sl, #284]	; 0x11c
   20688:	cmp	r0, #0
   2068c:	beq	2069c <readstat_parse_dta+0x13e0>
   20690:	ldrb	r0, [sl, #192]	; 0xc0
   20694:	tst	r0, #4
   20698:	beq	206e4 <readstat_parse_dta+0x1428>
   2069c:	ldr	r0, [sp, #64]	; 0x40
   206a0:	mov	r1, #4
   206a4:	ldr	r0, [r0]
   206a8:	ldr	r3, [r0, #12]
   206ac:	ldr	r2, [r0, #20]
   206b0:	add	r0, sp, #96	; 0x60
   206b4:	blx	r3
   206b8:	mov	r6, #2
   206bc:	cmp	r0, #4
   206c0:	bne	20870 <readstat_parse_dta+0x15b4>
   206c4:	ldr	r1, [pc, #4008]	; 21674 <readstat_parse_dta+0x23b8>
   206c8:	add	r0, sp, #96	; 0x60
   206cc:	mov	r2, #4
   206d0:	add	r1, pc, r1
   206d4:	bl	4e34 <strncmp@plt>
   206d8:	mov	r6, #5
   206dc:	cmp	r0, #0
   206e0:	bne	20870 <readstat_parse_dta+0x15b4>
   206e4:	ldr	r0, [sp, #60]	; 0x3c
   206e8:	ldr	r2, [fp, #-176]	; 0xffffff50
   206ec:	ldr	r3, [fp, #-172]	; 0xffffff54
   206f0:	mov	r6, #0
   206f4:	cmp	r0, #0
   206f8:	beq	20870 <readstat_parse_dta+0x15b4>
   206fc:	mov	r0, r2
   20700:	mov	r1, r3
   20704:	bl	4750 <byteswap8@plt>
   20708:	mov	r2, r0
   2070c:	mov	r3, r1
   20710:	b	20870 <readstat_parse_dta+0x15b4>
   20714:	ldr	r0, [sl, #284]	; 0x11c
   20718:	ldr	r4, [sl, #280]	; 0x118
   2071c:	cmp	r0, #0
   20720:	beq	20784 <readstat_parse_dta+0x14c8>
   20724:	ldrb	r0, [sl, #192]	; 0xc0
   20728:	tst	r0, #4
   2072c:	bne	20784 <readstat_parse_dta+0x14c8>
   20730:	add	r8, r4, #20
   20734:	add	r4, r4, #12
   20738:	b	207c8 <readstat_parse_dta+0x150c>
   2073c:	ldr	r3, [r4, #12]!
   20740:	add	r0, sp, #96	; 0x60
   20744:	mov	r1, #10
   20748:	mov	r9, r4
   2074c:	ldr	r2, [r9, #8]!
   20750:	blx	r3
   20754:	mov	r1, #2
   20758:	cmp	r0, #10
   2075c:	bne	20c40 <readstat_parse_dta+0x1984>
   20760:	ldr	r1, [pc, #3856]	; 21678 <readstat_parse_dta+0x23bc>
   20764:	add	r0, sp, #96	; 0x60
   20768:	mov	r2, #10
   2076c:	add	r1, pc, r1
   20770:	bl	4e34 <strncmp@plt>
   20774:	mov	r1, #5
   20778:	cmp	r0, #0
   2077c:	bne	20c40 <readstat_parse_dta+0x1984>
   20780:	b	205a4 <readstat_parse_dta+0x12e8>
   20784:	ldr	r3, [r4, #12]!
   20788:	add	r0, sp, #96	; 0x60
   2078c:	mov	r1, #3
   20790:	mov	r8, r4
   20794:	ldr	r2, [r8, #8]!
   20798:	blx	r3
   2079c:	mov	r6, #2
   207a0:	cmp	r0, #3
   207a4:	bne	20870 <readstat_parse_dta+0x15b4>
   207a8:	ldr	r1, [pc, #4072]	; 21798 <readstat_parse_dta+0x24dc>
   207ac:	add	r0, sp, #96	; 0x60
   207b0:	mov	r2, #3
   207b4:	add	r1, pc, r1
   207b8:	bl	4e34 <strncmp@plt>
   207bc:	mov	r6, #5
   207c0:	cmp	r0, #0
   207c4:	bne	20870 <readstat_parse_dta+0x15b4>
   207c8:	ldr	r2, [r8]
   207cc:	ldr	r3, [r4]
   207d0:	sub	r0, fp, #176	; 0xb0
   207d4:	mov	r1, #4
   207d8:	blx	r3
   207dc:	cmp	r0, #4
   207e0:	bne	2086c <readstat_parse_dta+0x15b0>
   207e4:	ldr	r0, [sl, #284]	; 0x11c
   207e8:	cmp	r0, #0
   207ec:	beq	207fc <readstat_parse_dta+0x1540>
   207f0:	ldrb	r0, [sl, #192]	; 0xc0
   207f4:	tst	r0, #4
   207f8:	beq	20844 <readstat_parse_dta+0x1588>
   207fc:	ldr	r0, [sp, #64]	; 0x40
   20800:	mov	r1, #4
   20804:	ldr	r0, [r0]
   20808:	ldr	r3, [r0, #12]
   2080c:	ldr	r2, [r0, #20]
   20810:	add	r0, sp, #96	; 0x60
   20814:	blx	r3
   20818:	mov	r6, #2
   2081c:	cmp	r0, #4
   20820:	bne	20870 <readstat_parse_dta+0x15b4>
   20824:	ldr	r1, [pc, #4076]	; 21818 <readstat_parse_dta+0x255c>
   20828:	add	r0, sp, #96	; 0x60
   2082c:	mov	r2, #4
   20830:	add	r1, pc, r1
   20834:	bl	4e34 <strncmp@plt>
   20838:	mov	r6, #5
   2083c:	cmp	r0, #0
   20840:	bne	20870 <readstat_parse_dta+0x15b4>
   20844:	ldr	r0, [sp, #60]	; 0x3c
   20848:	ldr	r2, [fp, #-176]	; 0xffffff50
   2084c:	cmp	r0, #0
   20850:	beq	20860 <readstat_parse_dta+0x15a4>
   20854:	mov	r0, r2
   20858:	bl	4768 <byteswap4@plt>
   2085c:	mov	r2, r0
   20860:	mov	r3, #0
   20864:	mov	r6, #0
   20868:	b	20870 <readstat_parse_dta+0x15b4>
   2086c:	mov	r6, #2
   20870:	ldr	r8, [sp, #68]	; 0x44
   20874:	cmp	r6, #0
   20878:	bne	21820 <readstat_parse_dta+0x2564>
   2087c:	ldr	r1, [r7, #40]	; 0x28
   20880:	ldr	r6, [sp, #48]	; 0x30
   20884:	ldr	r0, [r7, #36]	; 0x24
   20888:	str	r6, [sp]
   2088c:	ldr	r6, [sp, #56]	; 0x38
   20890:	str	r1, [sp, #12]
   20894:	ldr	r1, [sp, #52]	; 0x34
   20898:	str	r0, [sp, #8]
   2089c:	mov	r0, sl
   208a0:	str	r6, [sp, #4]
   208a4:	b	1f5e8 <readstat_parse_dta+0x32c>
   208a8:	ldr	r0, [sp, #48]	; 0x30
   208ac:	mov	r1, #11
   208b0:	ldr	r0, [r0]
   208b4:	ldr	r3, [r0, #12]
   208b8:	ldr	r2, [r0, #20]
   208bc:	add	r0, sp, #96	; 0x60
   208c0:	blx	r3
   208c4:	mov	r1, #2
   208c8:	cmp	r0, #11
   208cc:	bne	20c40 <readstat_parse_dta+0x1984>
   208d0:	ldr	r1, [pc, #4076]	; 218c4 <readstat_parse_dta+0x2608>
   208d4:	add	r0, sp, #96	; 0x60
   208d8:	mov	r2, #11
   208dc:	add	r1, pc, r1
   208e0:	bl	4e34 <strncmp@plt>
   208e4:	mov	r1, #5
   208e8:	cmp	r0, #0
   208ec:	bne	20c40 <readstat_parse_dta+0x1984>
   208f0:	ldr	r0, [sl, #52]	; 0x34
   208f4:	ldr	r7, [sl, #56]	; 0x38
   208f8:	ldr	r4, [sl, #280]	; 0x118
   208fc:	str	r0, [sp, #68]	; 0x44
   20900:	ldr	r0, [sl, #284]	; 0x11c
   20904:	cmp	r0, #0
   20908:	beq	20978 <readstat_parse_dta+0x16bc>
   2090c:	ldr	r0, [sp, #56]	; 0x38
   20910:	ldrb	r0, [r0]
   20914:	tst	r0, #4
   20918:	bne	20978 <readstat_parse_dta+0x16bc>
   2091c:	add	r9, r4, #20
   20920:	add	r4, r4, #12
   20924:	ldr	r2, [r9]
   20928:	ldr	r3, [r4]
   2092c:	ldr	r0, [sp, #68]	; 0x44
   20930:	mov	r1, r7
   20934:	blx	r3
   20938:	cmp	r0, r7
   2093c:	bne	20c44 <readstat_parse_dta+0x1988>
   20940:	ldr	r0, [sl, #284]	; 0x11c
   20944:	cmp	r0, #0
   20948:	beq	209c8 <readstat_parse_dta+0x170c>
   2094c:	ldr	r0, [sp, #56]	; 0x38
   20950:	ldrb	r0, [r0]
   20954:	tst	r0, #4
   20958:	bne	209c8 <readstat_parse_dta+0x170c>
   2095c:	ldr	r1, [sl, #60]	; 0x3c
   20960:	ldr	r7, [sl, #64]	; 0x40
   20964:	ldr	r4, [sl, #280]	; 0x118
   20968:	str	r1, [sp, #68]	; 0x44
   2096c:	tst	r0, #4
   20970:	beq	20a3c <readstat_parse_dta+0x1780>
   20974:	b	20a98 <readstat_parse_dta+0x17dc>
   20978:	ldr	r3, [r4, #12]!
   2097c:	add	r0, sp, #96	; 0x60
   20980:	mov	r1, #9
   20984:	mov	r9, r4
   20988:	ldr	r2, [r9, #8]!
   2098c:	blx	r3
   20990:	mov	r1, #2
   20994:	cmp	r0, #9
   20998:	bne	20c40 <readstat_parse_dta+0x1984>
   2099c:	ldr	r1, [pc, #4088]	; 2199c <readstat_parse_dta+0x26e0>
   209a0:	add	r0, sp, #96	; 0x60
   209a4:	mov	r2, #9
   209a8:	add	r1, pc, r1
   209ac:	bl	4e34 <strncmp@plt>
   209b0:	mov	r1, #5
   209b4:	cmp	r0, #0
   209b8:	bne	20c40 <readstat_parse_dta+0x1984>
   209bc:	b	20924 <readstat_parse_dta+0x1668>
   209c0:	.word	0x0000b9d1
   209c4:	.word	0x0000b8ee
   209c8:	ldr	r0, [sp, #48]	; 0x30
   209cc:	mov	r1, #10
   209d0:	ldr	r0, [r0]
   209d4:	ldr	r3, [r0, #12]
   209d8:	ldr	r2, [r0, #20]
   209dc:	add	r0, sp, #96	; 0x60
   209e0:	blx	r3
   209e4:	mov	r1, #2
   209e8:	cmp	r0, #10
   209ec:	bne	20c40 <readstat_parse_dta+0x1984>
   209f0:	ldr	r1, [pc, #4008]	; 219a0 <readstat_parse_dta+0x26e4>
   209f4:	add	r0, sp, #96	; 0x60
   209f8:	mov	r2, #10
   209fc:	add	r1, pc, r1
   20a00:	bl	4e34 <strncmp@plt>
   20a04:	mov	r1, #5
   20a08:	cmp	r0, #0
   20a0c:	bne	20c40 <readstat_parse_dta+0x1984>
   20a10:	ldr	r0, [sl, #60]	; 0x3c
   20a14:	ldr	r7, [sl, #64]	; 0x40
   20a18:	ldr	r4, [sl, #280]	; 0x118
   20a1c:	str	r0, [sp, #68]	; 0x44
   20a20:	ldr	r0, [sl, #284]	; 0x11c
   20a24:	cmp	r0, #0
   20a28:	beq	20a98 <readstat_parse_dta+0x17dc>
   20a2c:	ldr	r0, [sp, #56]	; 0x38
   20a30:	ldrb	r0, [r0]
   20a34:	tst	r0, #4
   20a38:	bne	20a98 <readstat_parse_dta+0x17dc>
   20a3c:	add	r9, r4, #20
   20a40:	add	r4, r4, #12
   20a44:	ldr	r2, [r9]
   20a48:	ldr	r3, [r4]
   20a4c:	ldr	r0, [sp, #68]	; 0x44
   20a50:	mov	r1, r7
   20a54:	blx	r3
   20a58:	cmp	r0, r7
   20a5c:	bne	20c44 <readstat_parse_dta+0x1988>
   20a60:	ldr	r0, [sl, #284]	; 0x11c
   20a64:	cmp	r0, #0
   20a68:	beq	20ae4 <readstat_parse_dta+0x1828>
   20a6c:	ldr	r0, [sp, #56]	; 0x38
   20a70:	ldrb	r0, [r0]
   20a74:	tst	r0, #4
   20a78:	bne	20ae4 <readstat_parse_dta+0x1828>
   20a7c:	ldr	r1, [sl, #68]	; 0x44
   20a80:	ldr	r7, [sl, #72]	; 0x48
   20a84:	ldr	r4, [sl, #280]	; 0x118
   20a88:	str	r1, [sp, #68]	; 0x44
   20a8c:	tst	r0, #4
   20a90:	beq	20b58 <readstat_parse_dta+0x189c>
   20a94:	b	20bfc <readstat_parse_dta+0x1940>
   20a98:	ldr	r3, [r4, #12]!
   20a9c:	add	r0, sp, #96	; 0x60
   20aa0:	mov	r1, #19
   20aa4:	mov	r9, r4
   20aa8:	ldr	r2, [r9, #8]!
   20aac:	blx	r3
   20ab0:	mov	r1, #2
   20ab4:	cmp	r0, #19
   20ab8:	bne	20c40 <readstat_parse_dta+0x1984>
   20abc:	ldr	r1, [pc, #3808]	; 219a4 <readstat_parse_dta+0x26e8>
   20ac0:	add	r0, sp, #96	; 0x60
   20ac4:	mov	r2, #19
   20ac8:	add	r1, pc, r1
   20acc:	bl	4e34 <strncmp@plt>
   20ad0:	mov	r1, #5
   20ad4:	cmp	r0, #0
   20ad8:	bne	20c40 <readstat_parse_dta+0x1984>
   20adc:	b	20a44 <readstat_parse_dta+0x1788>
   20ae0:	.word	0x0000b83d
   20ae4:	ldr	r0, [sp, #48]	; 0x30
   20ae8:	mov	r1, #20
   20aec:	ldr	r0, [r0]
   20af0:	ldr	r3, [r0, #12]
   20af4:	ldr	r2, [r0, #20]
   20af8:	add	r0, sp, #96	; 0x60
   20afc:	blx	r3
   20b00:	mov	r1, #2
   20b04:	cmp	r0, #20
   20b08:	bne	20c40 <readstat_parse_dta+0x1984>
   20b0c:	ldr	r1, [pc, #4084]	; 21b08 <readstat_parse_dta+0x284c>
   20b10:	add	r0, sp, #96	; 0x60
   20b14:	mov	r2, #20
   20b18:	add	r1, pc, r1
   20b1c:	bl	4e34 <strncmp@plt>
   20b20:	mov	r1, #5
   20b24:	cmp	r0, #0
   20b28:	bne	20c40 <readstat_parse_dta+0x1984>
   20b2c:	ldr	r0, [sl, #68]	; 0x44
   20b30:	ldr	r7, [sl, #72]	; 0x48
   20b34:	ldr	r4, [sl, #280]	; 0x118
   20b38:	str	r0, [sp, #68]	; 0x44
   20b3c:	ldr	r0, [sl, #284]	; 0x11c
   20b40:	cmp	r0, #0
   20b44:	beq	20bfc <readstat_parse_dta+0x1940>
   20b48:	ldr	r0, [sp, #56]	; 0x38
   20b4c:	ldrb	r0, [r0]
   20b50:	tst	r0, #4
   20b54:	bne	20bfc <readstat_parse_dta+0x1940>
   20b58:	add	r9, r4, #20
   20b5c:	add	r4, r4, #12
   20b60:	ldr	r2, [r9]
   20b64:	ldr	r3, [r4]
   20b68:	ldr	r0, [sp, #68]	; 0x44
   20b6c:	mov	r1, r7
   20b70:	blx	r3
   20b74:	ldr	r1, [sp, #48]	; 0x30
   20b78:	cmp	r0, r7
   20b7c:	bne	20c44 <readstat_parse_dta+0x1988>
   20b80:	ldr	r0, [sl, #284]	; 0x11c
   20b84:	cmp	r0, #0
   20b88:	beq	20ba0 <readstat_parse_dta+0x18e4>
   20b8c:	ldr	r0, [sp, #56]	; 0x38
   20b90:	mov	r6, #0
   20b94:	ldrb	r0, [r0]
   20b98:	tst	r0, #4
   20b9c:	beq	20c44 <readstat_parse_dta+0x1988>
   20ba0:	ldr	r0, [r1]
   20ba4:	mov	r1, #18
   20ba8:	ldr	r3, [r0, #12]
   20bac:	ldr	r2, [r0, #20]
   20bb0:	add	r0, sp, #96	; 0x60
   20bb4:	blx	r3
   20bb8:	mov	r6, #2
   20bbc:	cmp	r0, #18
   20bc0:	bne	20c44 <readstat_parse_dta+0x1988>
   20bc4:	ldr	r1, [pc, #3952]	; 21b3c <readstat_parse_dta+0x2880>
   20bc8:	add	r0, sp, #96	; 0x60
   20bcc:	mov	r2, #18
   20bd0:	add	r1, pc, r1
   20bd4:	bl	4e34 <strncmp@plt>
   20bd8:	mov	r6, r0
   20bdc:	cmp	r0, #0
   20be0:	movwne	r6, #5
   20be4:	cmp	r8, #0
   20be8:	bne	20c4c <readstat_parse_dta+0x1990>
   20bec:	b	20c54 <readstat_parse_dta+0x1998>
   20bf0:	.word	0x0000b7a7
   20bf4:	.word	0x0000b739
   20bf8:	.word	0x0000b679
   20bfc:	ldr	r3, [r4, #12]!
   20c00:	add	r0, sp, #96	; 0x60
   20c04:	mov	r1, #17
   20c08:	mov	r9, r4
   20c0c:	ldr	r2, [r9, #8]!
   20c10:	blx	r3
   20c14:	mov	r1, #2
   20c18:	cmp	r0, #17
   20c1c:	bne	20c40 <readstat_parse_dta+0x1984>
   20c20:	ldr	r1, [pc, #4020]	; 21bdc <readstat_parse_dta+0x2920>
   20c24:	add	r0, sp, #96	; 0x60
   20c28:	mov	r2, #17
   20c2c:	add	r1, pc, r1
   20c30:	bl	4e34 <strncmp@plt>
   20c34:	mov	r1, #5
   20c38:	cmp	r0, #0
   20c3c:	beq	20b60 <readstat_parse_dta+0x18a4>
   20c40:	mov	r6, r1
   20c44:	cmp	r8, #0
   20c48:	beq	20c54 <readstat_parse_dta+0x1998>
   20c4c:	mov	r0, r8
   20c50:	bl	4864 <free@plt>
   20c54:	cmp	r6, #0
   20c58:	bne	21820 <readstat_parse_dta+0x2564>
   20c5c:	ldr	r0, [sl, #148]	; 0x94
   20c60:	cmp	r0, #1
   20c64:	blt	20cc8 <readstat_parse_dta+0x1a0c>
   20c68:	mov	r7, #0
   20c6c:	add	r8, sp, #96	; 0x60
   20c70:	mov	r4, #0
   20c74:	ldr	r0, [sl, #28]
   20c78:	mov	r1, sl
   20c7c:	mov	r2, r8
   20c80:	mov	r3, #0
   20c84:	add	r0, r0, r7
   20c88:	ldrh	r0, [r0]
   20c8c:	bl	4b40 <dta_type_info@plt>
   20c90:	cmp	r0, #0
   20c94:	bne	20f5c <readstat_parse_dta+0x1ca0>
   20c98:	ldr	r0, [sl, #160]	; 0xa0
   20c9c:	ldr	r1, [sp, #96]	; 0x60
   20ca0:	add	r4, r4, #1
   20ca4:	add	r7, r7, #2
   20ca8:	add	r0, r0, r1
   20cac:	str	r0, [sl, #160]	; 0xa0
   20cb0:	ldr	r1, [sl, #148]	; 0x94
   20cb4:	cmp	r4, r1
   20cb8:	blt	20c74 <readstat_parse_dta+0x19b8>
   20cbc:	mov	r0, #1
   20cc0:	cmp	r1, #0
   20cc4:	bgt	20ce0 <readstat_parse_dta+0x1a24>
   20cc8:	ldr	r0, [sp, #60]	; 0x3c
   20ccc:	ldrd	r2, [r0]
   20cd0:	mov	r0, #0
   20cd4:	subs	r1, r2, #1
   20cd8:	sbcs	r1, r3, #0
   20cdc:	blt	20cec <readstat_parse_dta+0x1a30>
   20ce0:	ldr	r1, [sl, #160]	; 0xa0
   20ce4:	cmp	r1, #0
   20ce8:	beq	20d44 <readstat_parse_dta+0x1a88>
   20cec:	ldr	r1, [sl, #248]	; 0xf8
   20cf0:	cmp	r1, #0
   20cf4:	cmpne	r0, #0
   20cf8:	bne	20d50 <readstat_parse_dta+0x1a94>
   20cfc:	ldr	r0, [sl, #92]	; 0x5c
   20d00:	cmp	r0, #0
   20d04:	beq	2137c <readstat_parse_dta+0x20c0>
   20d08:	ldr	r0, [sl, #280]	; 0x118
   20d0c:	str	r0, [sp, #44]	; 0x2c
   20d10:	ldr	r0, [sp, #56]	; 0x38
   20d14:	ldrb	r0, [r0]
   20d18:	tst	r0, #4
   20d1c:	bne	20f6c <readstat_parse_dta+0x1cb0>
   20d20:	ldr	r0, [sl, #284]	; 0x11c
   20d24:	cmp	r0, #0
   20d28:	beq	20f78 <readstat_parse_dta+0x1cbc>
   20d2c:	ldr	r0, [sp, #44]	; 0x2c
   20d30:	add	r9, r0, #20
   20d34:	add	r8, r0, #12
   20d38:	add	r0, sp, #96	; 0x60
   20d3c:	str	r0, [sp, #40]	; 0x28
   20d40:	b	20fc4 <readstat_parse_dta+0x1d08>
   20d44:	mov	r6, #5
   20d48:	b	21820 <readstat_parse_dta+0x2564>
   20d4c:	.word	0x0000b61e
   20d50:	mov	r0, #0
   20d54:	mov	r9, #0
   20d58:	mov	r7, #0
   20d5c:	str	r0, [sp, #68]	; 0x44
   20d60:	ldr	r0, [sl, #28]
   20d64:	mov	r1, sl
   20d68:	sub	r2, fp, #176	; 0xb0
   20d6c:	add	r3, sp, #92	; 0x5c
   20d70:	add	r0, r0, r9
   20d74:	ldrh	r0, [r0]
   20d78:	bl	4b40 <dta_type_info@plt>
   20d7c:	cmp	r0, #0
   20d80:	bne	20f5c <readstat_parse_dta+0x1ca0>
   20d84:	ldr	r4, [sp, #92]	; 0x5c
   20d88:	cmp	r4, #0
   20d8c:	beq	20da8 <readstat_parse_dta+0x1aec>
   20d90:	cmp	r4, #6
   20d94:	bne	20dc0 <readstat_parse_dta+0x1b04>
   20d98:	mov	r8, #0
   20d9c:	str	r8, [fp, #-176]	; 0xffffff50
   20da0:	str	r8, [sp, #92]	; 0x5c
   20da4:	b	20db4 <readstat_parse_dta+0x1af8>
   20da8:	ldr	r0, [fp, #-176]	; 0xffffff50
   20dac:	add	r8, r0, #1
   20db0:	str	r8, [fp, #-176]	; 0xffffff50
   20db4:	mov	r4, #0
   20db8:	b	20dc4 <readstat_parse_dta+0x1b08>
   20dbc:	.word	0x0000b592
   20dc0:	ldr	r8, [fp, #-176]	; 0xffffff50
   20dc4:	mov	r0, #1
   20dc8:	movw	r1, #2152	; 0x868
   20dcc:	bl	472c <calloc@plt>
   20dd0:	mov	r6, r0
   20dd4:	stm	r6, {r4, r7}
   20dd8:	ldr	r0, [sp, #68]	; 0x44
   20ddc:	str	r0, [r6, #2148]	; 0x864
   20de0:	str	r8, [r6, #1596]	; 0x63c
   20de4:	ldr	r0, [sl, #36]	; 0x24
   20de8:	ldr	r3, [sl, #76]	; 0x4c
   20dec:	ldr	r1, [sl, #236]	; 0xec
   20df0:	str	r1, [sp]
   20df4:	mla	r2, r3, r7, r0
   20df8:	add	r0, r6, #8
   20dfc:	mov	r1, #300	; 0x12c
   20e00:	bl	4b94 <readstat_convert@plt>
   20e04:	ldr	r3, [sl, #88]	; 0x58
   20e08:	ldr	r2, [sl, #68]	; 0x44
   20e0c:	mul	r0, r3, r7
   20e10:	ldrb	r0, [r2, r0]!
   20e14:	cmp	r0, #0
   20e18:	beq	20e30 <readstat_parse_dta+0x1b74>
   20e1c:	ldr	r0, [sl, #236]	; 0xec
   20e20:	mov	r1, #1024	; 0x400
   20e24:	str	r0, [sp]
   20e28:	add	r0, r6, #564	; 0x234
   20e2c:	bl	4b94 <readstat_convert@plt>
   20e30:	ldr	r3, [sl, #80]	; 0x50
   20e34:	ldr	r2, [sl, #52]	; 0x34
   20e38:	mul	r0, r3, r7
   20e3c:	ldrb	r0, [r2, r0]!
   20e40:	cmp	r0, #0
   20e44:	beq	20edc <readstat_parse_dta+0x1c20>
   20e48:	ldr	r0, [sl, #236]	; 0xec
   20e4c:	add	r4, r6, #308	; 0x134
   20e50:	mov	r1, #256	; 0x100
   20e54:	str	r0, [sp]
   20e58:	mov	r0, r4
   20e5c:	bl	4b94 <readstat_convert@plt>
   20e60:	ldrb	r0, [r6, #308]	; 0x134
   20e64:	cmp	r0, #37	; 0x25
   20e68:	bne	20e9c <readstat_parse_dta+0x1be0>
   20e6c:	ldrb	r0, [r6, #309]	; 0x135
   20e70:	cmp	r0, #45	; 0x2d
   20e74:	bne	20e8c <readstat_parse_dta+0x1bd0>
   20e78:	mov	r0, #1
   20e7c:	b	20e98 <readstat_parse_dta+0x1bdc>
   20e80:	.word	0x0000b4a6
   20e84:	.word	0x0000b493
   20e88:	.word	0x0000b47b
   20e8c:	cmp	r0, #126	; 0x7e
   20e90:	movne	r0, #3
   20e94:	moveq	r0, #2
   20e98:	str	r0, [r6, #2132]	; 0x854
   20e9c:	ldr	r1, [pc, #4060]	; 21e80 <readstat_parse_dta+0x2bc4>
   20ea0:	mov	r0, r4
   20ea4:	add	r2, sp, #96	; 0x60
   20ea8:	add	r1, pc, r1
   20eac:	bl	4be8 <__isoc99_sscanf@plt>
   20eb0:	cmp	r0, #1
   20eb4:	beq	20ed4 <readstat_parse_dta+0x1c18>
   20eb8:	ldr	r1, [pc, #4088]	; 21eb8 <readstat_parse_dta+0x2bfc>
   20ebc:	mov	r0, r4
   20ec0:	add	r2, sp, #96	; 0x60
   20ec4:	add	r1, pc, r1
   20ec8:	bl	4be8 <__isoc99_sscanf@plt>
   20ecc:	cmp	r0, #1
   20ed0:	bne	20edc <readstat_parse_dta+0x1c20>
   20ed4:	ldr	r0, [sp, #96]	; 0x60
   20ed8:	str	r0, [r6, #2136]	; 0x858
   20edc:	ldr	r0, [sl, #228]	; 0xe4
   20ee0:	str	r6, [r0, r7, lsl #2]
   20ee4:	ldr	r0, [sl, #84]	; 0x54
   20ee8:	ldr	r2, [sl, #60]	; 0x3c
   20eec:	ldr	r1, [sl, #228]	; 0xe4
   20ef0:	ldr	r6, [sl, #248]	; 0xf8
   20ef4:	ldr	r3, [sl, #276]	; 0x114
   20ef8:	mul	r0, r0, r7
   20efc:	ldr	r1, [r1, r7, lsl #2]
   20f00:	ldrb	r0, [r2, r0]!
   20f04:	cmp	r0, #0
   20f08:	moveq	r2, r0
   20f0c:	mov	r0, r7
   20f10:	blx	r6
   20f14:	cmp	r0, #2
   20f18:	beq	20f34 <readstat_parse_dta+0x1c78>
   20f1c:	cmp	r0, #1
   20f20:	beq	21304 <readstat_parse_dta+0x2048>
   20f24:	ldr	r0, [sp, #68]	; 0x44
   20f28:	add	r0, r0, #1
   20f2c:	str	r0, [sp, #68]	; 0x44
   20f30:	b	20f44 <readstat_parse_dta+0x1c88>
   20f34:	ldr	r0, [sl, #228]	; 0xe4
   20f38:	mov	r1, #1
   20f3c:	ldr	r0, [r0, r7, lsl #2]
   20f40:	str	r1, [r0, #2144]	; 0x860
   20f44:	ldr	r0, [sl, #148]	; 0x94
   20f48:	add	r7, r7, #1
   20f4c:	add	r9, r9, #2
   20f50:	cmp	r7, r0
   20f54:	blt	20d60 <readstat_parse_dta+0x1aa4>
   20f58:	b	20cfc <readstat_parse_dta+0x1a40>
   20f5c:	mov	r6, r0
   20f60:	b	21820 <readstat_parse_dta+0x2564>
   20f64:	.word	0x0000b440
   20f68:	.word	0x0000b3cd
   20f6c:	ldr	r0, [sl, #244]	; 0xf4
   20f70:	cmp	r0, #0
   20f74:	beq	21310 <readstat_parse_dta+0x2054>
   20f78:	ldr	r8, [sp, #44]	; 0x2c
   20f7c:	add	r0, sp, #96	; 0x60
   20f80:	mov	r1, #17
   20f84:	ldr	r3, [r8, #12]!
   20f88:	mov	r9, r8
   20f8c:	ldr	r2, [r9, #8]!
   20f90:	blx	r3
   20f94:	mov	r6, #2
   20f98:	cmp	r0, #17
   20f9c:	bne	21820 <readstat_parse_dta+0x2564>
   20fa0:	ldr	r1, [pc, #4084]	; 21f9c <readstat_parse_dta+0x2ce0>
   20fa4:	add	r0, sp, #96	; 0x60
   20fa8:	mov	r2, #17
   20fac:	str	r0, [sp, #40]	; 0x28
   20fb0:	add	r1, pc, r1
   20fb4:	bl	4e34 <strncmp@plt>
   20fb8:	mov	r6, #5
   20fbc:	cmp	r0, #0
   20fc0:	bne	21820 <readstat_parse_dta+0x2564>
   20fc4:	mov	r6, #0
   20fc8:	mov	r0, #0
   20fcc:	str	r0, [sp, #68]	; 0x44
   20fd0:	ldr	r0, [sp, #56]	; 0x38
   20fd4:	mov	r7, r6
   20fd8:	ldrb	r0, [r0]
   20fdc:	tst	r0, #4
   20fe0:	bne	21048 <readstat_parse_dta+0x1d8c>
   20fe4:	ldr	r2, [r9]
   20fe8:	ldr	r3, [r8]
   20fec:	add	r0, sp, #92	; 0x5c
   20ff0:	mov	r1, #1
   20ff4:	blx	r3
   20ff8:	cmp	r0, #1
   20ffc:	bne	21338 <readstat_parse_dta+0x207c>
   21000:	ldr	r0, [sl, #92]	; 0x5c
   21004:	cmp	r0, #2
   21008:	bne	210a0 <readstat_parse_dta+0x1de4>
   2100c:	ldr	r2, [r9]
   21010:	ldr	r3, [r8]
   21014:	add	r0, sp, #96	; 0x60
   21018:	mov	r1, #2
   2101c:	blx	r3
   21020:	cmp	r0, #2
   21024:	bne	21338 <readstat_parse_dta+0x207c>
   21028:	ldr	r0, [sp, #56]	; 0x38
   2102c:	ldrh	r4, [sp, #96]	; 0x60
   21030:	ldrb	r0, [r0]
   21034:	tst	r0, #1
   21038:	beq	210dc <readstat_parse_dta+0x1e20>
   2103c:	mov	r0, r4
   21040:	bl	484c <byteswap2@plt>
   21044:	b	210d8 <readstat_parse_dta+0x1e1c>
   21048:	ldr	r2, [r9]
   2104c:	ldr	r3, [r8]
   21050:	sub	r0, fp, #176	; 0xb0
   21054:	mov	r1, #4
   21058:	blx	r3
   2105c:	mov	r4, #2
   21060:	cmp	r0, #4
   21064:	bne	2113c <readstat_parse_dta+0x1e80>
   21068:	ldr	r0, [fp, #-176]	; 0xffffff50
   2106c:	movw	r1, #12092	; 0x2f3c
   21070:	movt	r1, #26723	; 0x6863
   21074:	cmp	r0, r1
   21078:	beq	21278 <readstat_parse_dta+0x1fbc>
   2107c:	ldr	r0, [fp, #-176]	; 0xffffff50
   21080:	movw	r1, #25404	; 0x633c
   21084:	mov	r6, #5
   21088:	movt	r1, #15976	; 0x3e68
   2108c:	cmp	r0, r1
   21090:	bne	21268 <readstat_parse_dta+0x1fac>
   21094:	mov	r0, #1
   21098:	strb	r0, [sp, #92]	; 0x5c
   2109c:	b	21000 <readstat_parse_dta+0x1d44>
   210a0:	ldr	r2, [r9]
   210a4:	ldr	r3, [r8]
   210a8:	add	r0, sp, #96	; 0x60
   210ac:	mov	r1, #4
   210b0:	blx	r3
   210b4:	cmp	r0, #4
   210b8:	bne	21338 <readstat_parse_dta+0x207c>
   210bc:	ldr	r0, [sp, #56]	; 0x38
   210c0:	ldr	r4, [sp, #96]	; 0x60
   210c4:	ldrb	r0, [r0]
   210c8:	tst	r0, #1
   210cc:	beq	210dc <readstat_parse_dta+0x1e20>
   210d0:	mov	r0, r4
   210d4:	bl	4768 <byteswap4@plt>
   210d8:	mov	r4, r0
   210dc:	ldrb	r0, [sp, #92]	; 0x5c
   210e0:	cmp	r4, #0
   210e4:	cmpeq	r0, #0
   210e8:	beq	21340 <readstat_parse_dta+0x2084>
   210ec:	mov	r6, #32
   210f0:	cmp	r4, #1048576	; 0x100000
   210f4:	bhi	21360 <readstat_parse_dta+0x20a4>
   210f8:	cmp	r0, #1
   210fc:	bne	21360 <readstat_parse_dta+0x20a4>
   21100:	ldr	r0, [sl, #244]	; 0xf4
   21104:	cmp	r0, #0
   21108:	beq	21118 <readstat_parse_dta+0x1e5c>
   2110c:	ldr	r0, [sl, #96]	; 0x60
   21110:	cmp	r4, r0, lsl #1
   21114:	bcs	21154 <readstat_parse_dta+0x1e98>
   21118:	ldr	r0, [sp, #44]	; 0x2c
   2111c:	mov	r1, #1
   21120:	ldr	r3, [r0, #8]
   21124:	ldr	r2, [r0, #20]
   21128:	mov	r0, r4
   2112c:	blx	r3
   21130:	cmn	r0, #1
   21134:	bne	211fc <readstat_parse_dta+0x1f40>
   21138:	b	21348 <readstat_parse_dta+0x208c>
   2113c:	mov	r6, #2
   21140:	cmp	r4, #0
   21144:	beq	20fd0 <readstat_parse_dta+0x1d14>
   21148:	b	212f0 <readstat_parse_dta+0x2034>
   2114c:	.word	0x0000b1d3
   21150:	.word	0x0000b157
   21154:	ldr	r0, [sp, #68]	; 0x44
   21158:	add	r1, r4, #1
   2115c:	bl	4c3c <readstat_realloc@plt>
   21160:	cmp	r0, #0
   21164:	str	r0, [sp, #68]	; 0x44
   21168:	beq	21354 <readstat_parse_dta+0x2098>
   2116c:	ldr	r0, [sp, #68]	; 0x44
   21170:	mov	r1, #0
   21174:	strb	r1, [r0, r4]
   21178:	mov	r1, r4
   2117c:	ldr	r2, [r9]
   21180:	ldr	r3, [r8]
   21184:	blx	r3
   21188:	cmp	r0, r4
   2118c:	bne	21338 <readstat_parse_dta+0x207c>
   21190:	mov	r0, #0
   21194:	mov	r2, #4
   21198:	str	r0, [sp, #96]	; 0x60
   2119c:	ldr	r0, [sp, #68]	; 0x44
   211a0:	ldr	r1, [pc, #3952]	; 22118 <readstat_parse_dta+0x2e5c>
   211a4:	add	r1, pc, r1
   211a8:	bl	4e34 <strncmp@plt>
   211ac:	cmp	r0, #0
   211b0:	bne	211fc <readstat_parse_dta+0x1f40>
   211b4:	ldr	r0, [sl, #96]	; 0x60
   211b8:	ldr	r1, [sp, #68]	; 0x44
   211bc:	add	r2, sp, #96	; 0x60
   211c0:	add	r0, r1, r0
   211c4:	ldr	r1, [pc, #3920]	; 2211c <readstat_parse_dta+0x2e60>
   211c8:	add	r1, pc, r1
   211cc:	bl	4be8 <__isoc99_sscanf@plt>
   211d0:	cmp	r0, #1
   211d4:	bne	211fc <readstat_parse_dta+0x1f40>
   211d8:	ldr	r0, [sl, #96]	; 0x60
   211dc:	ldr	r1, [sp, #68]	; 0x44
   211e0:	ldr	r3, [sl, #244]	; 0xf4
   211e4:	ldr	r2, [sl, #276]	; 0x114
   211e8:	add	r1, r1, r0, lsl #1
   211ec:	ldr	r0, [sp, #96]	; 0x60
   211f0:	blx	r3
   211f4:	cmp	r0, #0
   211f8:	bne	22100 <readstat_parse_dta+0x2e44>
   211fc:	ldr	r0, [sl, #284]	; 0x11c
   21200:	cmp	r0, #0
   21204:	beq	2121c <readstat_parse_dta+0x1f60>
   21208:	ldr	r0, [sp, #56]	; 0x38
   2120c:	mov	r6, #0
   21210:	ldrb	r0, [r0]
   21214:	tst	r0, #4
   21218:	beq	21264 <readstat_parse_dta+0x1fa8>
   2121c:	ldr	r0, [sp, #48]	; 0x30
   21220:	mov	r1, #5
   21224:	ldr	r0, [r0]
   21228:	ldr	r3, [r0, #12]
   2122c:	ldr	r2, [r0, #20]
   21230:	ldr	r0, [sp, #40]	; 0x28
   21234:	blx	r3
   21238:	cmp	r0, #5
   2123c:	bne	21338 <readstat_parse_dta+0x207c>
   21240:	ldr	r0, [sp, #40]	; 0x28
   21244:	ldr	r1, [pc, #3796]	; 22120 <readstat_parse_dta+0x2e64>
   21248:	mov	r2, #5
   2124c:	mov	r6, #5
   21250:	add	r1, pc, r1
   21254:	bl	4e34 <strncmp@plt>
   21258:	cmp	r0, #0
   2125c:	bne	21360 <readstat_parse_dta+0x20a4>
   21260:	mov	r6, #0
   21264:	mov	r4, #0
   21268:	cmp	r4, #0
   2126c:	beq	20fd0 <readstat_parse_dta+0x1d14>
   21270:	b	212f0 <readstat_parse_dta+0x2034>
   21274:	.word	0x0000b0e7
   21278:	ldr	r0, [sl, #284]	; 0x11c
   2127c:	cmp	r0, #0
   21280:	beq	21294 <readstat_parse_dta+0x1fd8>
   21284:	ldr	r0, [sp, #56]	; 0x38
   21288:	ldrb	r0, [r0]
   2128c:	tst	r0, #4
   21290:	beq	212e0 <readstat_parse_dta+0x2024>
   21294:	ldr	r0, [sp, #48]	; 0x30
   21298:	mov	r1, #14
   2129c:	ldr	r0, [r0]
   212a0:	ldr	r3, [r0, #12]
   212a4:	ldr	r2, [r0, #20]
   212a8:	ldr	r0, [sp, #40]	; 0x28
   212ac:	blx	r3
   212b0:	mov	r4, #2
   212b4:	cmp	r0, #14
   212b8:	mov	r6, #2
   212bc:	bne	21268 <readstat_parse_dta+0x1fac>
   212c0:	ldr	r0, [sp, #40]	; 0x28
   212c4:	ldr	r1, [pc, #4012]	; 22278 <readstat_parse_dta+0x2fbc>
   212c8:	mov	r2, #14
   212cc:	add	r1, pc, r1
   212d0:	bl	4e34 <strncmp@plt>
   212d4:	mov	r6, #5
   212d8:	cmp	r0, #0
   212dc:	bne	21268 <readstat_parse_dta+0x1fac>
   212e0:	mov	r4, #4
   212e4:	mov	r6, #0
   212e8:	cmp	r4, #0
   212ec:	beq	20fd0 <readstat_parse_dta+0x1d14>
   212f0:	cmp	r4, #4
   212f4:	beq	21360 <readstat_parse_dta+0x20a4>
   212f8:	cmp	r4, #2
   212fc:	beq	21360 <readstat_parse_dta+0x20a4>
   21300:	b	2137c <readstat_parse_dta+0x20c0>
   21304:	mov	r6, #4
   21308:	b	21820 <readstat_parse_dta+0x2564>
   2130c:	.word	0x0000b06b
   21310:	ldr	r1, [sp, #44]	; 0x2c
   21314:	mov	r4, sl
   21318:	ldr	r0, [r4, #120]!	; 0x78
   2131c:	ldr	r3, [r1, #8]
   21320:	ldr	r2, [r1, #20]
   21324:	mov	r1, #0
   21328:	blx	r3
   2132c:	cmn	r0, #1
   21330:	bne	2137c <readstat_parse_dta+0x20c0>
   21334:	b	21880 <readstat_parse_dta+0x25c4>
   21338:	mov	r6, #2
   2133c:	b	21360 <readstat_parse_dta+0x20a4>
   21340:	mov	r6, r7
   21344:	b	21360 <readstat_parse_dta+0x20a4>
   21348:	mov	r6, #15
   2134c:	b	21360 <readstat_parse_dta+0x20a4>
   21350:	.word	0x0000af87
   21354:	mov	r0, #0
   21358:	mov	r6, #3
   2135c:	str	r0, [sp, #68]	; 0x44
   21360:	ldr	r0, [sp, #68]	; 0x44
   21364:	cmp	r0, #0
   21368:	beq	21374 <readstat_parse_dta+0x20b8>
   2136c:	ldr	r0, [sp, #68]	; 0x44
   21370:	bl	4864 <free@plt>
   21374:	cmp	r6, #0
   21378:	bne	21820 <readstat_parse_dta+0x2564>
   2137c:	ldr	r0, [sp, #56]	; 0x38
   21380:	ldrb	r0, [r0]
   21384:	tst	r0, #4
   21388:	bne	214ac <readstat_parse_dta+0x21f0>
   2138c:	ldr	r3, [r5, #8]
   21390:	ldr	r2, [r5, #20]
   21394:	mov	r0, #0
   21398:	mov	r1, #1
   2139c:	blx	r3
   213a0:	asr	r1, r0, #31
   213a4:	cmn	r0, #1
   213a8:	strd	r0, [sl, #120]	; 0x78
   213ac:	beq	21878 <readstat_parse_dta+0x25bc>
   213b0:	ldr	r2, [sp, #60]	; 0x3c
   213b4:	ldr	r1, [sl, #160]	; 0xa0
   213b8:	ldrd	r2, [r2]
   213bc:	umull	r2, r7, r2, r1
   213c0:	adds	r2, r2, r0
   213c4:	mla	r1, r3, r1, r7
   213c8:	adc	r3, r1, r0, asr #31
   213cc:	strd	r2, [sl, #136]	; 0x88
   213d0:	ldrb	r0, [sl, #192]	; 0xc0
   213d4:	tst	r0, #4
   213d8:	bne	214ac <readstat_parse_dta+0x21f0>
   213dc:	ldr	r0, [sl, #256]	; 0x100
   213e0:	cmp	r0, #0
   213e4:	beq	221a8 <readstat_parse_dta+0x2eec>
   213e8:	ldr	r1, [sl, #280]	; 0x118
   213ec:	mov	r4, sl
   213f0:	ldr	r0, [r4, #120]!	; 0x78
   213f4:	ldr	r3, [r1, #8]
   213f8:	ldr	r2, [r1, #20]
   213fc:	mov	r1, #0
   21400:	blx	r3
   21404:	cmn	r0, #1
   21408:	beq	21880 <readstat_parse_dta+0x25c4>
   2140c:	ldr	r0, [sl, #284]	; 0x11c
   21410:	cmp	r0, #0
   21414:	beq	21428 <readstat_parse_dta+0x216c>
   21418:	ldr	r0, [sp, #56]	; 0x38
   2141c:	ldrb	r0, [r0]
   21420:	tst	r0, #4
   21424:	beq	21470 <readstat_parse_dta+0x21b4>
   21428:	ldr	r0, [sp, #48]	; 0x30
   2142c:	mov	r1, #6
   21430:	ldr	r0, [r0]
   21434:	ldr	r3, [r0, #12]
   21438:	ldr	r2, [r0, #20]
   2143c:	add	r0, sp, #96	; 0x60
   21440:	blx	r3
   21444:	mov	r6, #2
   21448:	cmp	r0, #6
   2144c:	bne	21820 <readstat_parse_dta+0x2564>
   21450:	ldr	r1, [pc, #3868]	; 22374 <readstat_parse_dta+0x30b8>
   21454:	add	r0, sp, #96	; 0x60
   21458:	mov	r2, #6
   2145c:	add	r1, pc, r1
   21460:	bl	4e34 <strncmp@plt>
   21464:	mov	r6, #5
   21468:	cmp	r0, #0
   2146c:	bne	21820 <readstat_parse_dta+0x2564>
   21470:	ldr	r0, [sp, #64]	; 0x40
   21474:	ldrd	r0, [r0]
   21478:	subs	r2, r0, #1
   2147c:	sbcs	r2, r1, #0
   21480:	blt	21950 <readstat_parse_dta+0x2694>
   21484:	bl	28768 <__aeabi_l2d>
   21488:	ldrd	r2, [sl, #184]	; 0xb8
   2148c:	vmov	d8, r0, r1
   21490:	mov	r0, r2
   21494:	mov	r1, r3
   21498:	bl	28768 <__aeabi_l2d>
   2149c:	vmov	d16, r0, r1
   214a0:	vdiv.f64	d0, d16, d8
   214a4:	b	21954 <readstat_parse_dta+0x2698>
   214a8:	.word	0x0000aeba
   214ac:	mov	r7, sl
   214b0:	mov	r1, #0
   214b4:	ldr	r0, [r7, #128]!	; 0x80
   214b8:	ldr	r4, [r7, #152]	; 0x98
   214bc:	ldr	r3, [r4, #8]
   214c0:	ldr	r2, [r4, #20]
   214c4:	blx	r3
   214c8:	cmn	r0, #1
   214cc:	beq	21850 <readstat_parse_dta+0x2594>
   214d0:	ldr	r0, [sl, #284]	; 0x11c
   214d4:	cmp	r0, #0
   214d8:	beq	214ec <readstat_parse_dta+0x2230>
   214dc:	ldr	r0, [sp, #56]	; 0x38
   214e0:	ldrb	r0, [r0]
   214e4:	tst	r0, #4
   214e8:	beq	21534 <readstat_parse_dta+0x2278>
   214ec:	ldr	r0, [sp, #48]	; 0x30
   214f0:	mov	r1, #7
   214f4:	ldr	r0, [r0]
   214f8:	ldr	r3, [r0, #12]
   214fc:	ldr	r2, [r0, #20]
   21500:	add	r0, sp, #96	; 0x60
   21504:	blx	r3
   21508:	mov	r6, #2
   2150c:	cmp	r0, #7
   21510:	bne	21820 <readstat_parse_dta+0x2564>
   21514:	ldr	r1, [pc, #3676]	; 22378 <readstat_parse_dta+0x30bc>
   21518:	add	r0, sp, #96	; 0x60
   2151c:	mov	r2, #7
   21520:	add	r1, pc, r1
   21524:	bl	4e34 <strncmp@plt>
   21528:	mov	r6, #5
   2152c:	cmp	r0, #0
   21530:	bne	21820 <readstat_parse_dta+0x2564>
   21534:	mov	r0, #100	; 0x64
   21538:	str	r0, [sl, #224]	; 0xe0
   2153c:	mov	r0, #400	; 0x190
   21540:	bl	4b88 <readstat_malloc@plt>
   21544:	str	r0, [sl, #216]	; 0xd8
   21548:	add	r0, sp, #92	; 0x5c
   2154c:	mov	r1, #3
   21550:	ldr	r3, [r4, #12]
   21554:	ldr	r2, [r4, #20]
   21558:	blx	r3
   2155c:	cmp	r0, #3
   21560:	bne	2181c <readstat_parse_dta+0x2560>
   21564:	add	r0, sp, #96	; 0x60
   21568:	add	r0, r0, #4
   2156c:	str	r0, [sp, #40]	; 0x28
   21570:	ldr	r1, [pc, #3588]	; 2237c <readstat_parse_dta+0x30c0>
   21574:	add	r0, sp, #92	; 0x5c
   21578:	mov	r2, #3
   2157c:	add	r1, pc, r1
   21580:	bl	4930 <memcmp@plt>
   21584:	cmp	r0, #0
   21588:	bne	218c8 <readstat_parse_dta+0x260c>
   2158c:	ldr	r1, [sl, #116]	; 0x74
   21590:	ldr	r0, [sl, #280]	; 0x118
   21594:	cmp	r1, #5
   21598:	bcc	215e8 <readstat_parse_dta+0x232c>
   2159c:	ldr	r3, [r0, #12]
   215a0:	ldr	r2, [r0, #20]
   215a4:	add	r0, sp, #96	; 0x60
   215a8:	mov	r1, #17
   215ac:	blx	r3
   215b0:	mov	r6, #2
   215b4:	cmp	r0, #17
   215b8:	bne	216b4 <readstat_parse_dta+0x23f8>
   215bc:	ldr	r0, [sp, #56]	; 0x38
   215c0:	ldr	r7, [sp, #96]	; 0x60
   215c4:	ldrb	r0, [r0]
   215c8:	tst	r0, #1
   215cc:	bne	2162c <readstat_parse_dta+0x2370>
   215d0:	ldr	r0, [sp, #40]	; 0x28
   215d4:	ldr	r1, [r0]
   215d8:	ldr	r0, [r0, #4]
   215dc:	str	r1, [sp, #68]	; 0x44
   215e0:	str	r0, [sp, #44]	; 0x2c
   215e4:	b	2165c <readstat_parse_dta+0x23a0>
   215e8:	ldr	r3, [r0, #12]
   215ec:	ldr	r2, [r0, #20]
   215f0:	add	r0, sp, #96	; 0x60
   215f4:	mov	r1, #13
   215f8:	blx	r3
   215fc:	mov	r6, #2
   21600:	cmp	r0, #13
   21604:	bne	216b4 <readstat_parse_dta+0x23f8>
   21608:	ldr	r0, [sp, #56]	; 0x38
   2160c:	ldr	r7, [sp, #96]	; 0x60
   21610:	ldrb	r0, [r0]
   21614:	tst	r0, #1
   21618:	bne	2167c <readstat_parse_dta+0x23c0>
   2161c:	ldr	r0, [sp, #100]	; 0x64
   21620:	str	r0, [sp, #68]	; 0x44
   21624:	b	216a0 <readstat_parse_dta+0x23e4>
   21628:	.word	0x0000ad54
   2162c:	mov	r0, r7
   21630:	bl	4768 <byteswap4@plt>
   21634:	mov	r7, r0
   21638:	ldr	r0, [sp, #40]	; 0x28
   2163c:	ldr	r1, [r0]
   21640:	ldr	r0, [r0, #4]
   21644:	str	r0, [sp, #44]	; 0x2c
   21648:	ldr	r0, [sp, #56]	; 0x38
   2164c:	str	r1, [sp, #68]	; 0x44
   21650:	ldrb	r0, [r0]
   21654:	tst	r0, #1
   21658:	bne	2179c <readstat_parse_dta+0x24e0>
   2165c:	ldr	r8, [sp, #109]	; 0x6d
   21660:	ldrb	r9, [sp, #108]	; 0x6c
   21664:	mov	r6, #0
   21668:	cmp	r6, #0
   2166c:	beq	216bc <readstat_parse_dta+0x2400>
   21670:	b	21820 <readstat_parse_dta+0x2564>
   21674:	.word	0x0000acdc
   21678:	.word	0x0000acb6
   2167c:	mov	r0, r7
   21680:	bl	4768 <byteswap4@plt>
   21684:	mov	r7, r0
   21688:	ldr	r0, [sp, #56]	; 0x38
   2168c:	ldr	r1, [sp, #100]	; 0x64
   21690:	ldrb	r0, [r0]
   21694:	str	r1, [sp, #68]	; 0x44
   21698:	tst	r0, #1
   2169c:	bne	217e4 <readstat_parse_dta+0x2528>
   216a0:	ldr	r8, [sp, #105]	; 0x69
   216a4:	ldrb	r9, [sp, #104]	; 0x68
   216a8:	mov	r0, #0
   216ac:	str	r0, [sp, #44]	; 0x2c
   216b0:	mov	r6, #0
   216b4:	cmp	r6, #0
   216b8:	bne	21820 <readstat_parse_dta+0x2564>
   216bc:	uxtb	r0, r9
   216c0:	cmp	r0, #130	; 0x82
   216c4:	bne	21778 <readstat_parse_dta+0x24bc>
   216c8:	ldr	r1, [sl, #220]	; 0xdc
   216cc:	ldr	r0, [sl, #224]	; 0xe0
   216d0:	cmp	r1, r0
   216d4:	bne	216f8 <readstat_parse_dta+0x243c>
   216d8:	lsl	r0, r1, #1
   216dc:	lsl	r1, r1, #3
   216e0:	str	r0, [sl, #224]	; 0xe0
   216e4:	ldr	r0, [sl, #216]	; 0xd8
   216e8:	bl	4c3c <readstat_realloc@plt>
   216ec:	cmp	r0, #0
   216f0:	str	r0, [sl, #216]	; 0xd8
   216f4:	beq	1fc00 <readstat_parse_dta+0x944>
   216f8:	add	r0, r8, #32
   216fc:	bl	4b88 <readstat_malloc@plt>
   21700:	cmp	r0, #0
   21704:	beq	1fc00 <readstat_parse_dta+0x944>
   21708:	strh	r7, [r0]
   2170c:	ldr	r2, [sp, #68]	; 0x44
   21710:	ldr	r3, [sp, #44]	; 0x2c
   21714:	mov	r6, r0
   21718:	ldr	r0, [fp, #-176]	; 0xffffff50
   2171c:	ldrh	r1, [fp, #-172]	; 0xffffff54
   21720:	strd	r2, [r6, #8]
   21724:	mov	r2, #130	; 0x82
   21728:	strb	r2, [r6, #16]
   2172c:	strh	r1, [r6, #6]
   21730:	str	r0, [r6, #2]
   21734:	ldrh	r0, [sp, #89]	; 0x59
   21738:	ldrb	r1, [sp, #91]	; 0x5b
   2173c:	str	r8, [r6, #20]
   21740:	strb	r1, [r6, #19]
   21744:	strh	r0, [r6, #17]
   21748:	ldrd	r0, [sl, #216]	; 0xd8
   2174c:	add	r2, r1, #1
   21750:	str	r2, [sl, #220]	; 0xdc
   21754:	str	r6, [r0, r1, lsl #2]
   21758:	add	r0, r6, #24
   2175c:	mov	r1, r8
   21760:	ldr	r3, [r4, #12]
   21764:	ldr	r2, [r4, #20]
   21768:	blx	r3
   2176c:	ldr	r1, [r6, #20]
   21770:	cmp	r0, r1
   21774:	bne	2181c <readstat_parse_dta+0x2560>
   21778:	ldr	r3, [r4, #12]
   2177c:	ldr	r2, [r4, #20]
   21780:	add	r0, sp, #92	; 0x5c
   21784:	mov	r1, #3
   21788:	blx	r3
   2178c:	cmp	r0, #3
   21790:	beq	21570 <readstat_parse_dta+0x22b4>
   21794:	b	2181c <readstat_parse_dta+0x2560>
   21798:	.word	0x0000abf4
   2179c:	ldr	r0, [sp, #68]	; 0x44
   217a0:	ldr	r1, [sp, #44]	; 0x2c
   217a4:	bl	4750 <byteswap8@plt>
   217a8:	str	r0, [sp, #68]	; 0x44
   217ac:	ldr	r0, [sp, #56]	; 0x38
   217b0:	ldr	r8, [sp, #109]	; 0x6d
   217b4:	ldrb	r9, [sp, #108]	; 0x6c
   217b8:	mov	r6, #0
   217bc:	str	r1, [sp, #44]	; 0x2c
   217c0:	ldrb	r0, [r0]
   217c4:	tst	r0, #1
   217c8:	beq	216b4 <readstat_parse_dta+0x23f8>
   217cc:	mov	r0, r8
   217d0:	bl	4768 <byteswap4@plt>
   217d4:	mov	r8, r0
   217d8:	cmp	r6, #0
   217dc:	beq	216bc <readstat_parse_dta+0x2400>
   217e0:	b	21820 <readstat_parse_dta+0x2564>
   217e4:	ldr	r0, [sp, #68]	; 0x44
   217e8:	bl	4768 <byteswap4@plt>
   217ec:	str	r0, [sp, #68]	; 0x44
   217f0:	ldr	r0, [sp, #56]	; 0x38
   217f4:	ldr	r8, [sp, #105]	; 0x69
   217f8:	ldrb	r9, [sp, #104]	; 0x68
   217fc:	ldrb	r0, [r0]
   21800:	tst	r0, #1
   21804:	beq	216a8 <readstat_parse_dta+0x23ec>
   21808:	mov	r0, r8
   2180c:	bl	4768 <byteswap4@plt>
   21810:	mov	r8, r0
   21814:	b	216a8 <readstat_parse_dta+0x23ec>
   21818:	.word	0x0000ab7c
   2181c:	mov	r6, #2
   21820:	ldr	r1, [r5, #4]
   21824:	ldr	r0, [r5, #20]
   21828:	blx	r1
   2182c:	cmp	sl, #0
   21830:	beq	2183c <readstat_parse_dta+0x2580>
   21834:	mov	r0, sl
   21838:	bl	481c <dta_ctx_free@plt>
   2183c:	mov	r0, r6
   21840:	sub	sp, fp, #40	; 0x28
   21844:	vpop	{d8}
   21848:	add	sp, sp, #4
   2184c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21850:	ldr	r0, [sl, #264]	; 0x108
   21854:	mov	r6, #15
   21858:	cmp	r0, #0
   2185c:	beq	21820 <readstat_parse_dta+0x2564>
   21860:	ldrd	r0, [r7]
   21864:	add	r4, sl, #288	; 0x120
   21868:	stm	sp, {r0, r1}
   2186c:	ldr	r2, [pc, #3880]	; 2279c <readstat_parse_dta+0x34e0>
   21870:	add	r2, pc, r2
   21874:	b	218a4 <readstat_parse_dta+0x25e8>
   21878:	mov	r6, #15
   2187c:	b	21820 <readstat_parse_dta+0x2564>
   21880:	ldr	r0, [sl, #264]	; 0x108
   21884:	mov	r6, #15
   21888:	cmp	r0, #0
   2188c:	beq	21820 <readstat_parse_dta+0x2564>
   21890:	ldrd	r0, [r4]
   21894:	add	r4, sl, #288	; 0x120
   21898:	stm	sp, {r0, r1}
   2189c:	ldr	r2, [pc, #3828]	; 22798 <readstat_parse_dta+0x34dc>
   218a0:	add	r2, pc, r2
   218a4:	mov	r0, r4
   218a8:	mov	r1, #256	; 0x100
   218ac:	bl	4bdc <snprintf@plt>
   218b0:	ldr	r2, [sl, #264]	; 0x108
   218b4:	ldr	r1, [sl, #276]	; 0x114
   218b8:	mov	r0, r4
   218bc:	blx	r2
   218c0:	b	21820 <readstat_parse_dta+0x2564>
   218c4:	.word	0x0000ab51
   218c8:	ldr	r1, [pc, #3792]	; 227a0 <readstat_parse_dta+0x34e4>
   218cc:	add	r0, sp, #92	; 0x5c
   218d0:	mov	r2, #3
   218d4:	add	r1, pc, r1
   218d8:	bl	4930 <memcmp@plt>
   218dc:	mov	r6, #5
   218e0:	cmp	r0, #0
   218e4:	bne	21820 <readstat_parse_dta+0x2564>
   218e8:	ldr	r0, [sl, #284]	; 0x11c
   218ec:	cmp	r0, #0
   218f0:	beq	21904 <readstat_parse_dta+0x2648>
   218f4:	ldr	r0, [sp, #56]	; 0x38
   218f8:	ldrb	r0, [r0]
   218fc:	tst	r0, #4
   21900:	beq	213dc <readstat_parse_dta+0x2120>
   21904:	ldr	r0, [sp, #48]	; 0x30
   21908:	mov	r1, #5
   2190c:	ldr	r0, [r0]
   21910:	ldr	r3, [r0, #12]
   21914:	ldr	r2, [r0, #20]
   21918:	add	r0, sp, #96	; 0x60
   2191c:	blx	r3
   21920:	mov	r6, #2
   21924:	cmp	r0, #5
   21928:	bne	21820 <readstat_parse_dta+0x2564>
   2192c:	ldr	r1, [pc, #3696]	; 227a4 <readstat_parse_dta+0x34e8>
   21930:	add	r0, sp, #96	; 0x60
   21934:	mov	r2, #5
   21938:	add	r1, pc, r1
   2193c:	bl	4e34 <strncmp@plt>
   21940:	cmp	r0, #0
   21944:	mov	r6, #5
   21948:	bne	21820 <readstat_parse_dta+0x2564>
   2194c:	b	213dc <readstat_parse_dta+0x2120>
   21950:	vmov.i32	d0, #0	; 0x00000000
   21954:	ldr	r1, [sl, #268]	; 0x10c
   21958:	cmp	r1, #0
   2195c:	beq	21974 <readstat_parse_dta+0x26b8>
   21960:	ldr	r0, [sl, #276]	; 0x114
   21964:	blx	r1
   21968:	mov	r6, #4
   2196c:	cmp	r0, #0
   21970:	bne	21820 <readstat_parse_dta+0x2564>
   21974:	ldr	r0, [sl, #160]	; 0xa0
   21978:	ldr	r1, [sl, #280]	; 0x118
   2197c:	cmp	r0, #0
   21980:	str	r1, [sp, #36]	; 0x24
   21984:	beq	219a8 <readstat_parse_dta+0x26ec>
   21988:	bl	4b88 <readstat_malloc@plt>
   2198c:	cmp	r0, #0
   21990:	str	r0, [sp, #44]	; 0x2c
   21994:	bne	219b0 <readstat_parse_dta+0x26f4>
   21998:	b	1fc00 <readstat_parse_dta+0x944>
   2199c:	.word	0x0000aa91
   219a0:	.word	0x0000aa47
   219a4:	.word	0x0000a986
   219a8:	mov	r0, #0
   219ac:	str	r0, [sp, #44]	; 0x2c
   219b0:	ldr	r0, [sp, #52]	; 0x34
   219b4:	ldrd	r0, [r0]
   219b8:	orrs	r1, r0, r1
   219bc:	beq	219e4 <readstat_parse_dta+0x2728>
   219c0:	ldr	r1, [sl, #160]	; 0xa0
   219c4:	mul	r0, r1, r0
   219c8:	ldr	r1, [sp, #36]	; 0x24
   219cc:	ldr	r3, [r1, #8]
   219d0:	ldr	r2, [r1, #20]
   219d4:	mov	r1, #1
   219d8:	blx	r3
   219dc:	cmn	r0, #1
   219e0:	beq	220f8 <readstat_parse_dta+0x2e3c>
   219e4:	ldr	r0, [sp, #64]	; 0x40
   219e8:	ldrd	r8, [r0]
   219ec:	subs	r0, r8, #1
   219f0:	sbcs	r0, r9, #0
   219f4:	blt	22098 <readstat_parse_dta+0x2ddc>
   219f8:	sub	r0, fp, #176	; 0xb0
   219fc:	orr	r1, r0, #2
   21a00:	str	r1, [sp, #24]
   21a04:	orr	r1, r0, #4
   21a08:	str	r1, [sp, #28]
   21a0c:	orr	r1, r0, #1
   21a10:	add	r0, r0, #8
   21a14:	str	r1, [sp, #20]
   21a18:	add	r1, sl, #208	; 0xd0
   21a1c:	str	r0, [sp, #68]	; 0x44
   21a20:	mov	r0, #0
   21a24:	str	r1, [sp, #16]
   21a28:	add	r1, sl, #184	; 0xb8
   21a2c:	str	r0, [sp, #32]
   21a30:	str	r1, [sp, #40]	; 0x28
   21a34:	ldr	r0, [sp, #36]	; 0x24
   21a38:	ldr	r1, [sl, #160]	; 0xa0
   21a3c:	ldr	r3, [r0, #12]
   21a40:	ldr	r2, [r0, #20]
   21a44:	ldr	r0, [sp, #44]	; 0x2c
   21a48:	blx	r3
   21a4c:	ldr	r1, [sl, #160]	; 0xa0
   21a50:	cmp	r0, r1
   21a54:	bne	22124 <readstat_parse_dta+0x2e68>
   21a58:	ldr	r0, [sl, #148]	; 0x94
   21a5c:	cmp	r0, #1
   21a60:	blt	22008 <readstat_parse_dta+0x2d4c>
   21a64:	mov	r8, #0
   21a68:	mov	r9, #0
   21a6c:	ldr	r0, [pc, #3380]	; 227a8 <readstat_parse_dta+0x34ec>
   21a70:	ldr	r3, [sp, #68]	; 0x44
   21a74:	mov	r1, sl
   21a78:	add	r2, sp, #92	; 0x5c
   21a7c:	add	r0, pc, r0
   21a80:	vld1.64	{d16-d17}, [r0]
   21a84:	sub	r0, fp, #176	; 0xb0
   21a88:	vst1.64	{d16-d17}, [r0]
   21a8c:	ldr	r0, [sl, #28]
   21a90:	add	r0, r0, r9, lsl #1
   21a94:	ldrh	r0, [r0]
   21a98:	bl	4b40 <dta_type_info@plt>
   21a9c:	cmp	r0, #0
   21aa0:	bne	220f0 <readstat_parse_dta+0x2e34>
   21aa4:	ldr	r2, [sl, #228]	; 0xe4
   21aa8:	ldr	r0, [sp, #92]	; 0x5c
   21aac:	ldr	r2, [r2, r9, lsl #2]
   21ab0:	add	r1, r0, r8
   21ab4:	ldr	r2, [r2, #2144]	; 0x860
   21ab8:	cmp	r2, #0
   21abc:	beq	21ac8 <readstat_parse_dta+0x280c>
   21ac0:	mov	r8, r1
   21ac4:	b	21ff8 <readstat_parse_dta+0x2d3c>
   21ac8:	ldr	r2, [sl, #160]	; 0xa0
   21acc:	cmp	r1, r2
   21ad0:	bhi	22110 <readstat_parse_dta+0x2e54>
   21ad4:	ldr	r1, [fp, #-168]	; 0xffffff58
   21ad8:	cmp	r1, #6
   21adc:	bhi	21fb4 <readstat_parse_dta+0x2cf8>
   21ae0:	add	r2, pc, #4
   21ae4:	ldr	r1, [r2, r1, lsl #2]
   21ae8:	add	pc, r2, r1
   21aec:	.word	0x00000020
   21af0:	.word	0x00000054
   21af4:	.word	0x000000f4
   21af8:	.word	0x00000168
   21afc:	.word	0x000001cc
   21b00:	.word	0x00000240
   21b04:	.word	0x000002b8
   21b08:	.word	0x0000a94a
   21b0c:	cmp	r0, #0
   21b10:	beq	21e84 <readstat_parse_dta+0x2bc8>
   21b14:	ldr	r1, [sp, #44]	; 0x2c
   21b18:	mov	r3, #0
   21b1c:	add	r1, r1, r8
   21b20:	ldrb	r2, [r1, r3]
   21b24:	cmp	r2, #0
   21b28:	beq	21e88 <readstat_parse_dta+0x2bcc>
   21b2c:	add	r3, r3, #1
   21b30:	cmp	r3, r0
   21b34:	bcc	21b20 <readstat_parse_dta+0x2864>
   21b38:	b	21e88 <readstat_parse_dta+0x2bcc>
   21b3c:	.word	0x0000a8b9
   21b40:	ldr	r1, [sp, #56]	; 0x38
   21b44:	ldr	r0, [sp, #44]	; 0x2c
   21b48:	ldrb	r1, [r1]
   21b4c:	ldrb	r0, [r0, r8]
   21b50:	tst	r1, #2
   21b54:	beq	21b5c <readstat_parse_dta+0x28a0>
   21b58:	bl	4cc0 <ones_to_twos_complement1@plt>
   21b5c:	ldrsb	r2, [sl, #193]	; 0xc1
   21b60:	sxtb	r3, r0
   21b64:	mov	r1, #0
   21b68:	cmp	r3, r2
   21b6c:	mov	r2, #0
   21b70:	ble	21ba0 <readstat_parse_dta+0x28e4>
   21b74:	ldr	r2, [sp, #56]	; 0x38
   21b78:	cmp	r3, #101	; 0x65
   21b7c:	mov	r1, #0
   21b80:	movwgt	r1, #1
   21b84:	ldrb	r2, [r2]
   21b88:	and	r2, r2, #8
   21b8c:	and	r2, r1, r2, lsr #3
   21b90:	mov	r1, #1
   21b94:	cmp	r2, #0
   21b98:	subne	r2, r0, #5
   21b9c:	movwne	r1, #2
   21ba0:	strb	r0, [fp, #-176]	; 0xffffff50
   21ba4:	ldr	r0, [pc, #3072]	; 227ac <readstat_parse_dta+0x34f0>
   21ba8:	add	r0, pc, r0
   21bac:	mov	r7, r0
   21bb0:	ldrb	r0, [r0, #11]
   21bb4:	add	r3, r7, #1
   21bb8:	vld1.8	{d16}, [r3]
   21bbc:	ldr	r3, [sp, #20]
   21bc0:	strb	r0, [r3, #10]
   21bc4:	ldrh	r0, [r7, #9]
   21bc8:	vst1.8	{d16}, [r3]
   21bcc:	strh	r0, [r3, #8]
   21bd0:	strb	r2, [fp, #-164]	; 0xffffff5c
   21bd4:	strb	r1, [fp, #-163]	; 0xffffff5d
   21bd8:	b	21e20 <readstat_parse_dta+0x2b64>
   21bdc:	.word	0x0000a84b
   21be0:	ldr	r0, [sp, #44]	; 0x2c
   21be4:	ldr	r1, [sp, #56]	; 0x38
   21be8:	add	r0, r0, r8
   21bec:	ldrb	r1, [r1]
   21bf0:	ldrh	r0, [r0]
   21bf4:	tst	r1, #1
   21bf8:	beq	21c08 <readstat_parse_dta+0x294c>
   21bfc:	bl	484c <byteswap2@plt>
   21c00:	ldr	r1, [sp, #56]	; 0x38
   21c04:	ldrb	r1, [r1]
   21c08:	tst	r1, #2
   21c0c:	beq	21c18 <readstat_parse_dta+0x295c>
   21c10:	sxth	r0, r0
   21c14:	bl	48a0 <ones_to_twos_complement2@plt>
   21c18:	ldrsh	r2, [sl, #194]	; 0xc2
   21c1c:	sxth	r3, r0
   21c20:	mov	r1, #0
   21c24:	cmp	r3, r2
   21c28:	ble	21dec <readstat_parse_dta+0x2b30>
   21c2c:	movw	r7, #32742	; 0x7fe6
   21c30:	mov	r2, #1
   21c34:	cmp	r3, r7
   21c38:	blt	21df0 <readstat_parse_dta+0x2b34>
   21c3c:	ldr	r3, [sp, #56]	; 0x38
   21c40:	ldrb	r3, [r3]
   21c44:	ands	r3, r3, #8
   21c48:	addne	r1, r0, #123	; 0x7b
   21c4c:	movne	r2, #2
   21c50:	b	21df0 <readstat_parse_dta+0x2b34>
   21c54:	ldr	r1, [sp, #56]	; 0x38
   21c58:	ldr	r0, [sp, #44]	; 0x2c
   21c5c:	ldrb	r1, [r1]
   21c60:	ldr	r0, [r0, r8]
   21c64:	tst	r1, #1
   21c68:	beq	21c78 <readstat_parse_dta+0x29bc>
   21c6c:	bl	4768 <byteswap4@plt>
   21c70:	ldr	r1, [sp, #56]	; 0x38
   21c74:	ldrb	r1, [r1]
   21c78:	tst	r1, #2
   21c7c:	beq	21c84 <readstat_parse_dta+0x29c8>
   21c80:	bl	4894 <ones_to_twos_complement4@plt>
   21c84:	ldr	r2, [sl, #196]	; 0xc4
   21c88:	mov	r1, #0
   21c8c:	cmp	r0, r2
   21c90:	ble	21e2c <readstat_parse_dta+0x2b70>
   21c94:	mov	r2, #1
   21c98:	cmn	r0, #-2147483622	; 0x8000001a
   21c9c:	blt	21e30 <readstat_parse_dta+0x2b74>
   21ca0:	ldr	r3, [sp, #56]	; 0x38
   21ca4:	ldrb	r3, [r3]
   21ca8:	ands	r3, r3, #8
   21cac:	addne	r1, r0, #123	; 0x7b
   21cb0:	movne	r2, #2
   21cb4:	b	21e30 <readstat_parse_dta+0x2b74>
   21cb8:	ldr	r1, [sp, #56]	; 0x38
   21cbc:	ldr	r0, [sp, #44]	; 0x2c
   21cc0:	ldrb	r1, [r1]
   21cc4:	ldr	r0, [r0, r8]
   21cc8:	tst	r1, #1
   21ccc:	beq	21cd4 <readstat_parse_dta+0x2a18>
   21cd0:	bl	4768 <byteswap4@plt>
   21cd4:	ldr	r2, [sl, #200]	; 0xc8
   21cd8:	mov	r1, #0
   21cdc:	cmp	r0, r2
   21ce0:	ble	21e44 <readstat_parse_dta+0x2b88>
   21ce4:	mov	r2, #1
   21ce8:	cmp	r0, #2130706432	; 0x7f000000
   21cec:	ble	21d20 <readstat_parse_dta+0x2a64>
   21cf0:	ldr	r3, [sp, #56]	; 0x38
   21cf4:	ldrb	r3, [r3]
   21cf8:	ands	r3, r3, #8
   21cfc:	movw	r3, #0
   21d00:	movt	r3, #32704	; 0x7fc0
   21d04:	beq	21e4c <readstat_parse_dta+0x2b90>
   21d08:	movw	r1, #63488	; 0xf800
   21d0c:	mov	r2, #2
   21d10:	movt	r1, #7
   21d14:	add	r0, r0, r1
   21d18:	mov	r1, #97	; 0x61
   21d1c:	add	r1, r1, r0, lsr #11
   21d20:	movw	r3, #0
   21d24:	movt	r3, #32704	; 0x7fc0
   21d28:	b	21e4c <readstat_parse_dta+0x2b90>
   21d2c:	ldr	r1, [sp, #44]	; 0x2c
   21d30:	ldr	r2, [sp, #56]	; 0x38
   21d34:	ldr	r0, [r1, r8]!
   21d38:	ldrb	r2, [r2]
   21d3c:	ldr	r1, [r1, #4]
   21d40:	tst	r2, #1
   21d44:	beq	21d4c <readstat_parse_dta+0x2a90>
   21d48:	bl	4750 <byteswap8@plt>
   21d4c:	ldr	r2, [sp, #16]
   21d50:	ldrd	r6, [r2]
   21d54:	mov	r2, #0
   21d58:	subs	r3, r6, r0
   21d5c:	sbcs	r3, r7, r1
   21d60:	bge	21e74 <readstat_parse_dta+0x2bb8>
   21d64:	subs	r0, r0, #1
   21d68:	mov	r3, #0
   21d6c:	mov	r2, #1
   21d70:	movw	r0, #0
   21d74:	movt	r0, #32736	; 0x7fe0
   21d78:	sbcs	r0, r1, r0
   21d7c:	blt	21f00 <readstat_parse_dta+0x2c44>
   21d80:	ldr	r0, [sp, #56]	; 0x38
   21d84:	ldrb	r0, [r0]
   21d88:	ands	r0, r0, #8
   21d8c:	beq	21f00 <readstat_parse_dta+0x2c44>
   21d90:	add	r0, r1, #65280	; 0xff00
   21d94:	mov	r1, #97	; 0x61
   21d98:	mov	r2, #2
   21d9c:	add	r7, r1, r0, lsr #8
   21da0:	b	21f04 <readstat_parse_dta+0x2c48>
   21da4:	ldr	r0, [sp, #44]	; 0x2c
   21da8:	ldr	r1, [sl, #112]	; 0x70
   21dac:	add	r0, r0, r8
   21db0:	cmp	r1, #4
   21db4:	beq	21ebc <readstat_parse_dta+0x2c00>
   21db8:	mov	r4, #0
   21dbc:	cmp	r1, #2
   21dc0:	mov	r7, #0
   21dc4:	bne	21f3c <readstat_parse_dta+0x2c80>
   21dc8:	ldr	r2, [sl, #232]	; 0xe8
   21dcc:	ldrb	r1, [r0]
   21dd0:	cmp	r2, #2
   21dd4:	bne	21f30 <readstat_parse_dta+0x2c74>
   21dd8:	ldrb	r2, [r0, #1]
   21ddc:	ldr	r0, [r0, #4]
   21de0:	orr	r7, r2, r1, lsl #8
   21de4:	rev	r4, r0
   21de8:	b	21f3c <readstat_parse_dta+0x2c80>
   21dec:	mov	r2, #0
   21df0:	ldr	r3, [pc, #2488]	; 227b0 <readstat_parse_dta+0x34f4>
   21df4:	strh	r0, [fp, #-176]	; 0xffffff50
   21df8:	ldr	r0, [sp, #24]
   21dfc:	add	r3, pc, r3
   21e00:	mov	r7, r3
   21e04:	ldrh	r3, [r3, #10]
   21e08:	add	r7, r7, #2
   21e0c:	vld1.16	{d16}, [r7]
   21e10:	strh	r3, [r0, #8]
   21e14:	vst1.16	{d16}, [r0]
   21e18:	strb	r1, [fp, #-164]	; 0xffffff5c
   21e1c:	strb	r2, [fp, #-163]	; 0xffffff5d
   21e20:	mov	r0, #0
   21e24:	strh	r0, [fp, #-162]	; 0xffffff5e
   21e28:	b	21fb4 <readstat_parse_dta+0x2cf8>
   21e2c:	mov	r2, #0
   21e30:	str	r0, [fp, #-176]	; 0xffffff50
   21e34:	ldr	r0, [sp, #28]
   21e38:	mov	r3, #0
   21e3c:	mov	r7, #3
   21e40:	b	21e5c <readstat_parse_dta+0x2ba0>
   21e44:	mov	r2, #0
   21e48:	mov	r3, r0
   21e4c:	ldr	r0, [sp, #28]
   21e50:	str	r3, [fp, #-176]	; 0xffffff50
   21e54:	mov	r3, #0
   21e58:	mov	r7, #4
   21e5c:	str	r3, [r0]
   21e60:	str	r7, [r0, #4]
   21e64:	strb	r2, [fp, #-163]	; 0xffffff5d
   21e68:	strb	r1, [fp, #-164]	; 0xffffff5c
   21e6c:	strh	r3, [fp, #-162]	; 0xffffff5e
   21e70:	b	21fb4 <readstat_parse_dta+0x2cf8>
   21e74:	mov	r7, #0
   21e78:	mov	r3, r0
   21e7c:	b	21f0c <readstat_parse_dta+0x2c50>
   21e80:	.word	0x0000a5f4
   21e84:	mov	r3, #0
   21e88:	ldr	r0, [sl, #236]	; 0xec
   21e8c:	mov	r1, #2048	; 0x800
   21e90:	str	r0, [sp]
   21e94:	ldr	r0, [sp, #44]	; 0x2c
   21e98:	add	r2, r0, r8
   21e9c:	add	r0, sp, #96	; 0x60
   21ea0:	bl	4b94 <readstat_convert@plt>
   21ea4:	cmp	r0, #0
   21ea8:	bne	220f0 <readstat_parse_dta+0x2e34>
   21eac:	add	r0, sp, #96	; 0x60
   21eb0:	str	r0, [fp, #-176]	; 0xffffff50
   21eb4:	b	21fb4 <readstat_parse_dta+0x2cf8>
   21eb8:	.word	0x0000a5de
   21ebc:	ldr	r7, [r0]
   21ec0:	ldr	r4, [r0, #4]
   21ec4:	ldr	r0, [sp, #56]	; 0x38
   21ec8:	ldrb	r0, [r0]
   21ecc:	tst	r0, #1
   21ed0:	beq	21f3c <readstat_parse_dta+0x2c80>
   21ed4:	mov	r0, r7
   21ed8:	bl	4768 <byteswap4@plt>
   21edc:	mov	r7, r0
   21ee0:	ldr	r0, [sp, #56]	; 0x38
   21ee4:	ldrb	r0, [r0]
   21ee8:	tst	r0, #1
   21eec:	beq	21f3c <readstat_parse_dta+0x2c80>
   21ef0:	mov	r0, r4
   21ef4:	bl	4768 <byteswap4@plt>
   21ef8:	mov	r4, r0
   21efc:	b	21f3c <readstat_parse_dta+0x2c80>
   21f00:	mov	r7, #0
   21f04:	movw	r1, #0
   21f08:	movt	r1, #32760	; 0x7ff8
   21f0c:	mov	r0, #5
   21f10:	str	r3, [fp, #-176]	; 0xffffff50
   21f14:	str	r0, [fp, #-168]	; 0xffffff58
   21f18:	mov	r0, #0
   21f1c:	strb	r7, [fp, #-164]	; 0xffffff5c
   21f20:	strb	r2, [fp, #-163]	; 0xffffff5d
   21f24:	strh	r0, [fp, #-162]	; 0xffffff5e
   21f28:	str	r1, [fp, #-172]	; 0xffffff54
   21f2c:	b	21fb4 <readstat_parse_dta+0x2cf8>
   21f30:	ldrb	r2, [r0, #1]
   21f34:	ldr	r4, [r0, #2]
   21f38:	orr	r7, r1, r2, lsl #8
   21f3c:	ldr	r6, [sl, #220]	; 0xdc
   21f40:	cmp	r6, #0
   21f44:	beq	21fac <readstat_parse_dta+0x2cf0>
   21f48:	ldr	ip, [sl, #216]	; 0xd8
   21f4c:	uxth	lr, r7
   21f50:	mov	r3, #0
   21f54:	add	r0, r6, r3
   21f58:	mov	r1, ip
   21f5c:	lsr	r0, r0, #1
   21f60:	ldr	r7, [r1, r0, lsl #2]!
   21f64:	ldrh	r2, [r7]
   21f68:	cmp	lr, r2
   21f6c:	subne	r2, lr, r2
   21f70:	ldreq	r2, [r7, #8]
   21f74:	subeq	r2, r4, r2
   21f78:	cmp	r2, #0
   21f7c:	blt	21f8c <readstat_parse_dta+0x2cd0>
   21f80:	beq	21fa0 <readstat_parse_dta+0x2ce4>
   21f84:	add	r3, r0, #1
   21f88:	b	21f90 <readstat_parse_dta+0x2cd4>
   21f8c:	mov	r6, r0
   21f90:	cmp	r3, r6
   21f94:	bcc	21f54 <readstat_parse_dta+0x2c98>
   21f98:	b	21fac <readstat_parse_dta+0x2cf0>
   21f9c:	.word	0x0000a526
   21fa0:	cmp	r1, #0
   21fa4:	addne	r0, r7, #24
   21fa8:	strne	r0, [fp, #-176]	; 0xffffff50
   21fac:	mov	r0, #0
   21fb0:	str	r0, [fp, #-168]	; 0xffffff58
   21fb4:	ldr	r0, [sl, #228]	; 0xe4
   21fb8:	ldr	r2, [sp, #68]	; 0x44
   21fbc:	ldr	ip, [sl, #256]	; 0x100
   21fc0:	ldr	r6, [sl, #276]	; 0x114
   21fc4:	ldr	r1, [r0, r9, lsl #2]
   21fc8:	ldr	r0, [sp, #40]	; 0x28
   21fcc:	ldr	r0, [r0]
   21fd0:	ldm	r2, {r4, r7}
   21fd4:	ldr	r2, [fp, #-176]	; 0xffffff50
   21fd8:	ldr	r3, [fp, #-172]	; 0xffffff54
   21fdc:	stm	sp, {r4, r7}
   21fe0:	str	r6, [sp, #8]
   21fe4:	blx	ip
   21fe8:	cmp	r0, #0
   21fec:	bne	22108 <readstat_parse_dta+0x2e4c>
   21ff0:	ldr	r0, [sp, #92]	; 0x5c
   21ff4:	add	r8, r0, r8
   21ff8:	ldr	r0, [sl, #148]	; 0x94
   21ffc:	add	r9, r9, #1
   22000:	cmp	r9, r0
   22004:	blt	21a6c <readstat_parse_dta+0x27b0>
   22008:	ldr	r2, [sp, #40]	; 0x28
   2200c:	ldrd	r0, [r2]
   22010:	adds	r0, r0, #1
   22014:	adc	r1, r1, #0
   22018:	strd	r0, [r2]
   2201c:	ldr	r2, [sp, #64]	; 0x40
   22020:	ldrd	r8, [r2]
   22024:	subs	r2, r8, #1
   22028:	sbcs	r2, r9, #0
   2202c:	blt	22058 <readstat_parse_dta+0x2d9c>
   22030:	bl	28768 <__aeabi_l2d>
   22034:	mov	r4, r0
   22038:	mov	r6, r1
   2203c:	mov	r0, r8
   22040:	mov	r1, r9
   22044:	bl	28768 <__aeabi_l2d>
   22048:	vmov	d16, r0, r1
   2204c:	vmov	d17, r4, r6
   22050:	vdiv.f64	d0, d17, d16
   22054:	b	2205c <readstat_parse_dta+0x2da0>
   22058:	vmov.i32	d0, #0	; 0x00000000
   2205c:	ldr	r1, [sl, #268]	; 0x10c
   22060:	cmp	r1, #0
   22064:	beq	22080 <readstat_parse_dta+0x2dc4>
   22068:	ldr	r0, [sl, #276]	; 0x114
   2206c:	blx	r1
   22070:	cmp	r0, #0
   22074:	bne	22108 <readstat_parse_dta+0x2e4c>
   22078:	ldr	r0, [sp, #64]	; 0x40
   2207c:	ldrd	r8, [r0]
   22080:	ldr	r0, [sp, #32]
   22084:	add	r0, r0, #1
   22088:	str	r0, [sp, #32]
   2208c:	subs	r0, r0, r8
   22090:	rscs	r0, r9, #0
   22094:	blt	21a34 <readstat_parse_dta+0x2778>
   22098:	ldr	r0, [sp, #52]	; 0x34
   2209c:	ldr	r2, [sp, #60]	; 0x3c
   220a0:	mov	r6, #0
   220a4:	ldrd	r0, [r0]
   220a8:	ldrd	r2, [r2]
   220ac:	subs	r0, r2, r0
   220b0:	sbc	r1, r3, r1
   220b4:	subs	r2, r8, r0
   220b8:	sbcs	r1, r9, r1
   220bc:	bge	22128 <readstat_parse_dta+0x2e6c>
   220c0:	ldr	r1, [sl, #160]	; 0xa0
   220c4:	sub	r0, r0, r8
   220c8:	mul	r0, r1, r0
   220cc:	ldr	r1, [sp, #36]	; 0x24
   220d0:	ldr	r3, [r1, #8]
   220d4:	ldr	r2, [r1, #20]
   220d8:	mov	r1, #1
   220dc:	blx	r3
   220e0:	mov	r6, #0
   220e4:	cmn	r0, #1
   220e8:	movweq	r6, #15
   220ec:	b	22128 <readstat_parse_dta+0x2e6c>
   220f0:	mov	r6, r0
   220f4:	b	22128 <readstat_parse_dta+0x2e6c>
   220f8:	mov	r6, #15
   220fc:	b	22128 <readstat_parse_dta+0x2e6c>
   22100:	mov	r6, #4
   22104:	b	21360 <readstat_parse_dta+0x20a4>
   22108:	mov	r6, #4
   2210c:	b	22128 <readstat_parse_dta+0x2e6c>
   22110:	mov	r6, #5
   22114:	b	22128 <readstat_parse_dta+0x2e6c>
   22118:	.word	0x0000a34e
   2211c:	.word	0x0000a32f
   22120:	.word	0x0000a2ae
   22124:	mov	r6, #2
   22128:	ldr	r0, [sp, #44]	; 0x2c
   2212c:	cmp	r0, #0
   22130:	beq	2213c <readstat_parse_dta+0x2e80>
   22134:	ldr	r0, [sp, #44]	; 0x2c
   22138:	bl	4864 <free@plt>
   2213c:	cmp	r6, #0
   22140:	bne	21820 <readstat_parse_dta+0x2564>
   22144:	ldr	r0, [sl, #284]	; 0x11c
   22148:	cmp	r0, #0
   2214c:	beq	22160 <readstat_parse_dta+0x2ea4>
   22150:	ldr	r0, [sp, #56]	; 0x38
   22154:	ldrb	r0, [r0]
   22158:	tst	r0, #4
   2215c:	beq	221a8 <readstat_parse_dta+0x2eec>
   22160:	ldr	r0, [sp, #48]	; 0x30
   22164:	mov	r1, #7
   22168:	ldr	r0, [r0]
   2216c:	ldr	r3, [r0, #12]
   22170:	ldr	r2, [r0, #20]
   22174:	add	r0, sp, #96	; 0x60
   22178:	blx	r3
   2217c:	mov	r6, #2
   22180:	cmp	r0, #7
   22184:	bne	21820 <readstat_parse_dta+0x2564>
   22188:	ldr	r1, [pc, #1572]	; 227b4 <readstat_parse_dta+0x34f8>
   2218c:	add	r0, sp, #96	; 0x60
   22190:	mov	r2, #7
   22194:	add	r1, pc, r1
   22198:	bl	4e34 <strncmp@plt>
   2219c:	mov	r6, #5
   221a0:	cmp	r0, #0
   221a4:	bne	21820 <readstat_parse_dta+0x2564>
   221a8:	mov	r4, sl
   221ac:	mov	r1, #0
   221b0:	ldr	r0, [r4, #136]!	; 0x88
   221b4:	ldr	r8, [r4, #144]	; 0x90
   221b8:	ldr	r3, [r8, #8]
   221bc:	ldr	r2, [r8, #20]
   221c0:	blx	r3
   221c4:	cmn	r0, #1
   221c8:	beq	22250 <readstat_parse_dta+0x2f94>
   221cc:	ldr	r0, [sl, #284]	; 0x11c
   221d0:	cmp	r0, #0
   221d4:	beq	221e8 <readstat_parse_dta+0x2f2c>
   221d8:	ldr	r0, [sp, #56]	; 0x38
   221dc:	ldrb	r0, [r0]
   221e0:	tst	r0, #4
   221e4:	beq	22230 <readstat_parse_dta+0x2f74>
   221e8:	ldr	r0, [sp, #48]	; 0x30
   221ec:	mov	r1, #14
   221f0:	ldr	r0, [r0]
   221f4:	ldr	r3, [r0, #12]
   221f8:	ldr	r2, [r0, #20]
   221fc:	add	r0, sp, #96	; 0x60
   22200:	blx	r3
   22204:	mov	r6, #2
   22208:	cmp	r0, #14
   2220c:	bne	21820 <readstat_parse_dta+0x2564>
   22210:	ldr	r1, [pc, #1444]	; 227bc <readstat_parse_dta+0x3500>
   22214:	add	r0, sp, #96	; 0x60
   22218:	mov	r2, #14
   2221c:	add	r1, pc, r1
   22220:	bl	4e34 <strncmp@plt>
   22224:	mov	r6, #5
   22228:	cmp	r0, #0
   2222c:	bne	21820 <readstat_parse_dta+0x2564>
   22230:	ldr	r0, [sl, #260]	; 0x104
   22234:	cmp	r0, #0
   22238:	beq	22710 <readstat_parse_dta+0x3454>
   2223c:	mov	r0, #0
   22240:	str	r0, [sp, #60]	; 0x3c
   22244:	mov	r0, #0
   22248:	str	r0, [sp, #64]	; 0x40
   2224c:	b	225fc <readstat_parse_dta+0x3340>
   22250:	ldr	r0, [sl, #264]	; 0x108
   22254:	mov	r6, #15
   22258:	cmp	r0, #0
   2225c:	beq	21820 <readstat_parse_dta+0x2564>
   22260:	ldrd	r0, [r4]
   22264:	add	r4, sl, #288	; 0x120
   22268:	stm	sp, {r0, r1}
   2226c:	ldr	r2, [pc, #1348]	; 227b8 <readstat_parse_dta+0x34fc>
   22270:	add	r2, pc, r2
   22274:	b	218a4 <readstat_parse_dta+0x25e8>
   22278:	.word	0x0000a3b1
   2227c:	ldr	r0, [sl, #108]	; 0x6c
   22280:	ldr	r3, [r8, #8]
   22284:	ldr	r2, [r8, #20]
   22288:	mov	r1, #1
   2228c:	blx	r3
   22290:	cmn	r0, #1
   22294:	beq	2272c <readstat_parse_dta+0x3470>
   22298:	ldr	r0, [sp, #64]	; 0x40
   2229c:	mov	r1, r7
   222a0:	bl	4c3c <readstat_realloc@plt>
   222a4:	cmp	r0, #0
   222a8:	str	r0, [sp, #64]	; 0x40
   222ac:	beq	22770 <readstat_parse_dta+0x34b4>
   222b0:	ldr	r3, [r8, #12]
   222b4:	ldr	r2, [r8, #20]
   222b8:	ldr	r0, [sp, #64]	; 0x40
   222bc:	mov	r1, r7
   222c0:	blx	r3
   222c4:	cmp	r0, r7
   222c8:	bcc	22778 <readstat_parse_dta+0x34bc>
   222cc:	ldr	r0, [sl, #100]	; 0x64
   222d0:	cmp	r0, #2
   222d4:	bne	22380 <readstat_parse_dta+0x30c4>
   222d8:	cmp	r9, #0
   222dc:	beq	225fc <readstat_parse_dta+0x3340>
   222e0:	ldr	r4, [sp, #64]	; 0x40
   222e4:	mov	r7, #0
   222e8:	ldr	r0, [sl, #236]	; 0xec
   222ec:	mov	r1, #33	; 0x21
   222f0:	mov	r2, r4
   222f4:	mov	r3, #8
   222f8:	str	r0, [sp]
   222fc:	add	r0, sp, #96	; 0x60
   22300:	bl	4b94 <readstat_convert@plt>
   22304:	cmp	r0, #0
   22308:	bne	22718 <readstat_parse_dta+0x345c>
   2230c:	ldr	r0, [sp, #68]	; 0x44
   22310:	bfc	r0, #0, #10
   22314:	str	r0, [sp, #68]	; 0x44
   22318:	ldrb	r0, [sp, #96]	; 0x60
   2231c:	cmp	r0, #0
   22320:	beq	22360 <readstat_parse_dta+0x30a4>
   22324:	mov	r2, #3
   22328:	ldr	r1, [sl, #260]	; 0x104
   2232c:	ldr	r0, [sl, #276]	; 0x114
   22330:	mov	r3, #0
   22334:	str	r2, [sp]
   22338:	ldr	r2, [sp, #68]	; 0x44
   2233c:	str	r0, [sp, #12]
   22340:	sub	r0, fp, #176	; 0xb0
   22344:	str	r2, [sp, #4]
   22348:	add	r2, sp, #96	; 0x60
   2234c:	str	r2, [sp, #8]
   22350:	mov	r2, r7
   22354:	blx	r1
   22358:	cmp	r0, #0
   2235c:	bne	22720 <readstat_parse_dta+0x3464>
   22360:	add	r7, r7, #1
   22364:	add	r4, r4, #8
   22368:	cmp	r7, r9
   2236c:	bcc	222e8 <readstat_parse_dta+0x302c>
   22370:	b	225fc <readstat_parse_dta+0x3340>
   22374:	.word	0x0000a0e6
   22378:	.word	0x0000a012
   2237c:	.word	0x00009fbe
   22380:	cmp	r7, #9
   22384:	bcc	225fc <readstat_parse_dta+0x3340>
   22388:	ldr	r0, [sl, #284]	; 0x11c
   2238c:	cmp	r0, #0
   22390:	beq	223a4 <readstat_parse_dta+0x30e8>
   22394:	ldr	r0, [sp, #56]	; 0x38
   22398:	ldrb	r0, [r0]
   2239c:	tst	r0, #4
   223a0:	beq	223ec <readstat_parse_dta+0x3130>
   223a4:	ldr	r0, [sp, #48]	; 0x30
   223a8:	mov	r1, #6
   223ac:	ldr	r0, [r0]
   223b0:	ldr	r3, [r0, #12]
   223b4:	ldr	r2, [r0, #20]
   223b8:	add	r0, sp, #96	; 0x60
   223bc:	blx	r3
   223c0:	cmp	r0, #6
   223c4:	bne	22790 <readstat_parse_dta+0x34d4>
   223c8:	ldr	r1, [pc, #1012]	; 227c4 <readstat_parse_dta+0x3508>
   223cc:	add	r0, sp, #96	; 0x60
   223d0:	mov	r2, #6
   223d4:	add	r1, pc, r1
   223d8:	bl	4e34 <strncmp@plt>
   223dc:	cmp	r0, #0
   223e0:	bne	22758 <readstat_parse_dta+0x349c>
   223e4:	ldr	r0, [sp, #56]	; 0x38
   223e8:	ldrb	r0, [r0]
   223ec:	ldr	r1, [sp, #64]	; 0x40
   223f0:	tst	r0, #1
   223f4:	ldr	r2, [r1]
   223f8:	ldr	r1, [r1, #4]
   223fc:	str	r2, [sp, #40]	; 0x28
   22400:	str	r1, [sp, #52]	; 0x34
   22404:	beq	22420 <readstat_parse_dta+0x3164>
   22408:	ldr	r0, [sp, #40]	; 0x28
   2240c:	bl	4768 <byteswap4@plt>
   22410:	str	r0, [sp, #40]	; 0x28
   22414:	ldr	r0, [sp, #52]	; 0x34
   22418:	bl	4768 <byteswap4@plt>
   2241c:	str	r0, [sp, #52]	; 0x34
   22420:	ldr	r1, [sp, #52]	; 0x34
   22424:	sub	r0, r7, #8
   22428:	mov	r6, #0
   2242c:	cmp	r0, r1
   22430:	bcc	22738 <readstat_parse_dta+0x347c>
   22434:	ldr	r1, [sp, #52]	; 0x34
   22438:	sub	r0, r0, r1
   2243c:	ldr	r1, [sp, #40]	; 0x28
   22440:	cmp	r1, r0, lsr #3
   22444:	bhi	22738 <readstat_parse_dta+0x347c>
   22448:	ldr	r2, [sp, #52]	; 0x34
   2244c:	mov	r0, #1
   22450:	orr	r1, r0, r2, lsl #2
   22454:	movw	r0, #32001	; 0x7d01
   22458:	cmp	r2, r0
   2245c:	ldr	r0, [sp, #60]	; 0x3c
   22460:	movwhi	r1, #62465	; 0xf401
   22464:	movthi	r1, #1
   22468:	str	r1, [sp, #32]
   2246c:	bl	4984 <realloc@plt>
   22470:	cmp	r0, #0
   22474:	str	r0, [sp, #60]	; 0x3c
   22478:	beq	22780 <readstat_parse_dta+0x34c4>
   2247c:	ldr	r0, [sp, #64]	; 0x40
   22480:	add	r0, r0, #8
   22484:	str	r0, [sp, #44]	; 0x2c
   22488:	ldr	r0, [sp, #40]	; 0x28
   2248c:	cmp	r0, #0
   22490:	ldrne	r0, [sp, #56]	; 0x38
   22494:	ldrbne	r0, [r0]
   22498:	andsne	r0, r0, #1
   2249c:	beq	224bc <readstat_parse_dta+0x3200>
   224a0:	ldr	r4, [sp, #44]	; 0x2c
   224a4:	ldr	r6, [sp, #40]	; 0x28
   224a8:	ldr	r0, [r4]
   224ac:	bl	4768 <byteswap4@plt>
   224b0:	str	r0, [r4], #4
   224b4:	subs	r6, r6, #1
   224b8:	bne	224a8 <readstat_parse_dta+0x31ec>
   224bc:	ldr	r0, [sp, #40]	; 0x28
   224c0:	cmp	r0, #0
   224c4:	beq	225fc <readstat_parse_dta+0x3340>
   224c8:	ldr	r1, [sp, #64]	; 0x40
   224cc:	ldr	r2, [sp, #40]	; 0x28
   224d0:	mov	r4, #0
   224d4:	add	r0, r1, r2, lsl #3
   224d8:	add	r0, r0, #8
   224dc:	str	r0, [sp, #28]
   224e0:	add	r0, r1, r2, lsl #2
   224e4:	add	r0, r0, #8
   224e8:	str	r0, [sp, #24]
   224ec:	ldr	r0, [sp, #44]	; 0x2c
   224f0:	ldr	r1, [sp, #52]	; 0x34
   224f4:	ldr	r0, [r0, r4, lsl #2]
   224f8:	cmp	r0, r1
   224fc:	bcs	22758 <readstat_parse_dta+0x349c>
   22500:	ldr	r0, [sp, #24]
   22504:	ldr	r7, [r0, r4, lsl #2]
   22508:	ldr	r0, [sp, #56]	; 0x38
   2250c:	ldrb	r0, [r0]
   22510:	tst	r0, #1
   22514:	beq	2252c <readstat_parse_dta+0x3270>
   22518:	mov	r0, r7
   2251c:	bl	4768 <byteswap4@plt>
   22520:	mov	r7, r0
   22524:	ldr	r0, [sp, #56]	; 0x38
   22528:	ldrb	r0, [r0]
   2252c:	tst	r0, #2
   22530:	beq	22540 <readstat_parse_dta+0x3284>
   22534:	mov	r0, r7
   22538:	bl	4894 <ones_to_twos_complement4@plt>
   2253c:	mov	r7, r0
   22540:	ldr	r0, [sl, #196]	; 0xc4
   22544:	mov	r1, #3
   22548:	mov	r9, #0
   2254c:	str	r1, [sp, #36]	; 0x24
   22550:	cmp	r7, r0
   22554:	ble	2257c <readstat_parse_dta+0x32c0>
   22558:	mov	r9, #256	; 0x100
   2255c:	cmn	r7, #-2147483622	; 0x8000001a
   22560:	blt	2257c <readstat_parse_dta+0x32c0>
   22564:	ldr	r0, [sp, #56]	; 0x38
   22568:	ldrb	r0, [r0]
   2256c:	ands	r0, r0, #8
   22570:	addne	r9, r7, #123	; 0x7b
   22574:	movne	r0, #2
   22578:	bfine	r9, r0, #8, #24
   2257c:	ldr	r0, [sp, #44]	; 0x2c
   22580:	ldr	r1, [sl, #236]	; 0xec
   22584:	ldr	r0, [r0, r4, lsl #2]
   22588:	str	r1, [sp]
   2258c:	ldr	r1, [sp, #28]
   22590:	add	r2, r1, r0
   22594:	ldr	r1, [sp, #52]	; 0x34
   22598:	sub	r3, r1, r0
   2259c:	ldr	r0, [sp, #60]	; 0x3c
   225a0:	ldr	r1, [sp, #32]
   225a4:	cmp	r3, #32000	; 0x7d00
   225a8:	movcs	r3, #32000	; 0x7d00
   225ac:	bl	4b94 <readstat_convert@plt>
   225b0:	cmp	r0, #0
   225b4:	bne	22760 <readstat_parse_dta+0x34a4>
   225b8:	ldr	r2, [sp, #36]	; 0x24
   225bc:	ldr	r1, [sl, #260]	; 0x104
   225c0:	ldr	r0, [sl, #276]	; 0x114
   225c4:	mov	r3, #0
   225c8:	stm	sp, {r2, r9}
   225cc:	str	r0, [sp, #12]
   225d0:	sub	r0, fp, #176	; 0xb0
   225d4:	ldr	r2, [sp, #60]	; 0x3c
   225d8:	str	r2, [sp, #8]
   225dc:	mov	r2, r7
   225e0:	blx	r1
   225e4:	cmp	r0, #0
   225e8:	bne	22768 <readstat_parse_dta+0x34ac>
   225ec:	ldr	r0, [sp, #40]	; 0x28
   225f0:	add	r4, r4, #1
   225f4:	cmp	r4, r0
   225f8:	bcc	224ec <readstat_parse_dta+0x3230>
   225fc:	ldr	r0, [sl, #100]	; 0x64
   22600:	cmp	r0, #2
   22604:	bne	2264c <readstat_parse_dta+0x3390>
   22608:	ldr	r3, [r8, #12]
   2260c:	ldr	r2, [r8, #20]
   22610:	add	r0, sp, #96	; 0x60
   22614:	mov	r1, #2
   22618:	blx	r3
   2261c:	cmp	r0, #2
   22620:	bcc	22728 <readstat_parse_dta+0x346c>
   22624:	ldr	r0, [sp, #56]	; 0x38
   22628:	ldrsh	r7, [sp, #96]	; 0x60
   2262c:	ldrb	r0, [r0]
   22630:	tst	r0, #1
   22634:	beq	22644 <readstat_parse_dta+0x3388>
   22638:	uxth	r0, r7
   2263c:	bl	484c <byteswap2@plt>
   22640:	mov	r7, r0
   22644:	lsr	r9, r7, #3
   22648:	b	226e8 <readstat_parse_dta+0x342c>
   2264c:	ldr	r0, [sl, #284]	; 0x11c
   22650:	cmp	r0, #0
   22654:	beq	22668 <readstat_parse_dta+0x33ac>
   22658:	ldr	r0, [sp, #56]	; 0x38
   2265c:	ldrb	r0, [r0]
   22660:	tst	r0, #4
   22664:	beq	226a8 <readstat_parse_dta+0x33ec>
   22668:	ldr	r0, [sp, #48]	; 0x30
   2266c:	mov	r1, #5
   22670:	ldr	r0, [r0]
   22674:	ldr	r3, [r0, #12]
   22678:	ldr	r2, [r0, #20]
   2267c:	add	r0, sp, #96	; 0x60
   22680:	blx	r3
   22684:	cmp	r0, #5
   22688:	bne	22728 <readstat_parse_dta+0x346c>
   2268c:	ldr	r1, [pc, #300]	; 227c0 <readstat_parse_dta+0x3504>
   22690:	add	r0, sp, #96	; 0x60
   22694:	mov	r2, #5
   22698:	add	r1, pc, r1
   2269c:	bl	4e34 <strncmp@plt>
   226a0:	cmp	r0, #0
   226a4:	bne	22728 <readstat_parse_dta+0x346c>
   226a8:	ldr	r3, [r8, #12]
   226ac:	ldr	r2, [r8, #20]
   226b0:	add	r0, sp, #96	; 0x60
   226b4:	mov	r1, #4
   226b8:	blx	r3
   226bc:	cmp	r0, #4
   226c0:	bcc	22728 <readstat_parse_dta+0x346c>
   226c4:	ldr	r0, [sp, #56]	; 0x38
   226c8:	ldr	r7, [sp, #96]	; 0x60
   226cc:	ldrb	r0, [r0]
   226d0:	tst	r0, #1
   226d4:	beq	226e4 <readstat_parse_dta+0x3428>
   226d8:	mov	r0, r7
   226dc:	bl	4768 <byteswap4@plt>
   226e0:	mov	r7, r0
   226e4:	mov	r9, #0
   226e8:	ldr	r1, [sl, #104]	; 0x68
   226ec:	ldr	r3, [r8, #12]
   226f0:	ldr	r2, [r8, #20]
   226f4:	sub	r0, fp, #176	; 0xb0
   226f8:	blx	r3
   226fc:	ldr	r1, [sl, #104]	; 0x68
   22700:	mov	r6, #0
   22704:	cmp	r0, r1
   22708:	bcs	2227c <readstat_parse_dta+0x2fc0>
   2270c:	b	2272c <readstat_parse_dta+0x3470>
   22710:	mov	r6, #0
   22714:	b	21820 <readstat_parse_dta+0x2564>
   22718:	mov	r6, r0
   2271c:	b	2272c <readstat_parse_dta+0x3470>
   22720:	mov	r6, #4
   22724:	b	2272c <readstat_parse_dta+0x3470>
   22728:	mov	r6, #0
   2272c:	ldr	r0, [sp, #64]	; 0x40
   22730:	cmp	r0, #0
   22734:	beq	22740 <readstat_parse_dta+0x3484>
   22738:	ldr	r0, [sp, #64]	; 0x40
   2273c:	bl	4864 <free@plt>
   22740:	ldr	r0, [sp, #60]	; 0x3c
   22744:	cmp	r0, #0
   22748:	beq	21820 <readstat_parse_dta+0x2564>
   2274c:	ldr	r0, [sp, #60]	; 0x3c
   22750:	bl	4864 <free@plt>
   22754:	b	21820 <readstat_parse_dta+0x2564>
   22758:	mov	r6, #5
   2275c:	b	22738 <readstat_parse_dta+0x347c>
   22760:	mov	r6, r0
   22764:	b	22738 <readstat_parse_dta+0x347c>
   22768:	mov	r6, #4
   2276c:	b	22738 <readstat_parse_dta+0x347c>
   22770:	mov	r6, #3
   22774:	b	22740 <readstat_parse_dta+0x3484>
   22778:	mov	r6, #0
   2277c:	b	22738 <readstat_parse_dta+0x347c>
   22780:	mov	r0, #0
   22784:	mov	r6, #3
   22788:	str	r0, [sp, #60]	; 0x3c
   2278c:	b	22738 <readstat_parse_dta+0x347c>
   22790:	mov	r6, #2
   22794:	b	22738 <readstat_parse_dta+0x347c>
   22798:	.word	0x00009c09
   2279c:	.word	0x00009c94
   227a0:	.word	0x00009c6a
   227a4:	.word	0x00009d57
   227a8:	.word	0x00009b2c
   227ac:	.word	0x00009a10
   227b0:	.word	0x000097cc
   227b4:	.word	0x000093b5
   227b8:	.word	0x000092e1
   227bc:	.word	0x0000936a
   227c0:	.word	0x00008efd
   227c4:	.word	0x000091c7

000227c8 <dta_metadata_ok>:
   227c8:	ldr	r1, [r0, #16]
   227cc:	cmp	r1, #0
   227d0:	movne	r0, #6
   227d4:	bxne	lr
   227d8:	ldr	r0, [r0, #8]
   227dc:	sub	r1, r0, #104	; 0x68
   227e0:	mov	r0, #0
   227e4:	cmp	r1, #15
   227e8:	movwhi	r0, #24
   227ec:	bx	lr

000227f0 <readstat_begin_writing_dta>:
   227f0:	push	{r4, sl, fp, lr}
   227f4:	add	fp, sp, #8
   227f8:	ldr	ip, [r0, #8]
   227fc:	cmp	ip, #0
   22800:	beq	22840 <readstat_begin_writing_dta+0x50>
   22804:	ldr	r3, [pc, #412]	; 229a8 <readstat_begin_writing_dta+0x1b8>
   22808:	cmp	ip, #116	; 0x74
   2280c:	ldr	r3, [pc, r3]
   22810:	str	r3, [r0, #292]	; 0x124
   22814:	ble	228b8 <readstat_begin_writing_dta+0xc8>
   22818:	ldr	r3, [pc, #408]	; 229b8 <readstat_begin_writing_dta+0x1c8>
   2281c:	cmp	ip, #117	; 0x75
   22820:	add	r3, pc, r3
   22824:	str	r3, [r0, #228]	; 0xe4
   22828:	bne	22860 <readstat_begin_writing_dta+0x70>
   2282c:	ldr	ip, [pc, #392]	; 229bc <readstat_begin_writing_dta+0x1cc>
   22830:	ldr	r3, [pc, #392]	; 229c0 <readstat_begin_writing_dta+0x1d0>
   22834:	add	ip, pc, ip
   22838:	add	r3, pc, r3
   2283c:	b	22870 <readstat_begin_writing_dta+0x80>
   22840:	mov	r3, #118	; 0x76
   22844:	str	r3, [r0, #8]
   22848:	ldr	r3, [pc, #328]	; 22998 <readstat_begin_writing_dta+0x1a8>
   2284c:	add	r3, pc, r3
   22850:	str	r3, [r0, #228]	; 0xe4
   22854:	ldr	r3, [pc, #320]	; 2299c <readstat_begin_writing_dta+0x1ac>
   22858:	ldr	r3, [pc, r3]
   2285c:	str	r3, [r0, #292]	; 0x124
   22860:	ldr	ip, [pc, #312]	; 229a0 <readstat_begin_writing_dta+0x1b0>
   22864:	ldr	r3, [pc, #312]	; 229a4 <readstat_begin_writing_dta+0x1b4>
   22868:	add	ip, pc, ip
   2286c:	add	r3, pc, r3
   22870:	str	ip, [r0, #260]	; 0x104
   22874:	str	r3, [r0, #232]	; 0xe8
   22878:	ldr	ip, [pc, #324]	; 229c4 <readstat_begin_writing_dta+0x1d4>
   2287c:	ldr	r4, [pc, #324]	; 229c8 <readstat_begin_writing_dta+0x1d8>
   22880:	ldr	r3, [pc, #324]	; 229cc <readstat_begin_writing_dta+0x1dc>
   22884:	add	r4, pc, r4
   22888:	add	ip, pc, ip
   2288c:	add	r3, pc, r3
   22890:	str	r4, [r0, #236]	; 0xec
   22894:	str	ip, [r0, #240]	; 0xf0
   22898:	str	r3, [r0, #244]	; 0xf4
   2289c:	ldr	r3, [pc, #300]	; 229d0 <readstat_begin_writing_dta+0x1e0>
   228a0:	ldr	r4, [pc, #300]	; 229d4 <readstat_begin_writing_dta+0x1e4>
   228a4:	add	r3, pc, r3
   228a8:	add	r4, pc, r4
   228ac:	str	r3, [r0, #268]	; 0x10c
   228b0:	str	r4, [r0, #272]	; 0x110
   228b4:	b	2293c <readstat_begin_writing_dta+0x14c>
   228b8:	cmp	ip, #110	; 0x6e
   228bc:	ble	228e4 <readstat_begin_writing_dta+0xf4>
   228c0:	ldr	r3, [pc, #272]	; 229d8 <readstat_begin_writing_dta+0x1e8>
   228c4:	ldr	r4, [pc, #272]	; 229dc <readstat_begin_writing_dta+0x1ec>
   228c8:	cmp	ip, #112	; 0x70
   228cc:	add	r4, pc, r4
   228d0:	add	r3, pc, r3
   228d4:	str	r4, [r0, #228]	; 0xe4
   228d8:	str	r3, [r0, #232]	; 0xe8
   228dc:	bgt	22878 <readstat_begin_writing_dta+0x88>
   228e0:	b	2290c <readstat_begin_writing_dta+0x11c>
   228e4:	ldr	lr, [pc, #192]	; 229ac <readstat_begin_writing_dta+0x1bc>
   228e8:	ldr	r3, [pc, #192]	; 229b0 <readstat_begin_writing_dta+0x1c0>
   228ec:	ldr	r4, [pc, #192]	; 229b4 <readstat_begin_writing_dta+0x1c4>
   228f0:	cmp	ip, #110	; 0x6e
   228f4:	add	r3, pc, r3
   228f8:	add	r4, pc, r4
   228fc:	add	lr, pc, lr
   22900:	moveq	r4, r3
   22904:	str	lr, [r0, #228]	; 0xe4
   22908:	str	r4, [r0, #232]	; 0xe8
   2290c:	ldr	ip, [pc, #204]	; 229e0 <readstat_begin_writing_dta+0x1f0>
   22910:	ldr	r4, [pc, #204]	; 229e4 <readstat_begin_writing_dta+0x1f4>
   22914:	ldr	r3, [pc, #204]	; 229e8 <readstat_begin_writing_dta+0x1f8>
   22918:	add	r4, pc, r4
   2291c:	add	ip, pc, ip
   22920:	add	r3, pc, r3
   22924:	str	r4, [r0, #236]	; 0xec
   22928:	str	ip, [r0, #240]	; 0xf0
   2292c:	str	r3, [r0, #244]	; 0xf4
   22930:	ldr	r3, [pc, #180]	; 229ec <readstat_begin_writing_dta+0x1fc>
   22934:	add	r3, pc, r3
   22938:	str	r3, [r0, #268]	; 0x10c
   2293c:	ldr	ip, [pc, #172]	; 229f0 <readstat_begin_writing_dta+0x200>
   22940:	ldr	r4, [pc, #172]	; 229f4 <readstat_begin_writing_dta+0x204>
   22944:	ldr	r3, [pc, #172]	; 229f8 <readstat_begin_writing_dta+0x208>
   22948:	add	r4, pc, r4
   2294c:	add	ip, pc, ip
   22950:	add	r3, pc, r3
   22954:	str	r4, [r0, #248]	; 0xf8
   22958:	str	ip, [r0, #252]	; 0xfc
   2295c:	str	r3, [r0, #256]	; 0x100
   22960:	ldr	r3, [pc, #148]	; 229fc <readstat_begin_writing_dta+0x20c>
   22964:	add	r3, pc, r3
   22968:	str	r3, [r0, #264]	; 0x108
   2296c:	ldr	r3, [pc, #140]	; 22a00 <readstat_begin_writing_dta+0x210>
   22970:	add	r3, pc, r3
   22974:	str	r3, [r0, #276]	; 0x114
   22978:	ldr	r3, [pc, #132]	; 22a04 <readstat_begin_writing_dta+0x214>
   2297c:	ldr	r4, [pc, #132]	; 22a08 <readstat_begin_writing_dta+0x218>
   22980:	add	r3, pc, r3
   22984:	add	r4, pc, r4
   22988:	str	r3, [r0, #284]	; 0x11c
   2298c:	str	r4, [r0, #288]	; 0x120
   22990:	pop	{r4, sl, fp, lr}
   22994:	b	48f4 <readstat_begin_writing_file@plt>
   22998:	.word	0x000001b8
   2299c:	.word	0x00026a68
   229a0:	.word	0x00000330
   229a4:	.word	0x000002d8
   229a8:	.word	0x00026ab4
   229ac:	.word	0x000001e0
   229b0:	.word	0x0000026c
   229b4:	.word	0x00000284
   229b8:	.word	0x000001e4
   229bc:	.word	0x000003ac
   229c0:	.word	0x00000328
   229c4:	.word	0x00000394
   229c8:	.word	0x00000380
   229cc:	.word	0x000003ac
   229d0:	.word	0x000003ac
   229d4:	.word	0x00000424
   229d8:	.word	0x00000290
   229dc:	.word	0x000001a8
   229e0:	.word	0x00000484
   229e4:	.word	0x00000470
   229e8:	.word	0x0000049c
   229ec:	.word	0x000004a0
   229f0:	.word	0x000005e4
   229f4:	.word	0x00000508
   229f8:	.word	0x000006b8
   229fc:	.word	0x00000718
   22a00:	.word	0x00000728
   22a04:	.word	0x000017f0
   22a08:	.word	0x00001f88

00022a0c <dta_117_variable_width>:
   22a0c:	cmp	r0, #6
   22a10:	bhi	22a4c <dta_117_variable_width+0x40>
   22a14:	mov	ip, r0
   22a18:	add	r3, pc, #8
   22a1c:	mov	r0, #8
   22a20:	ldr	r2, [r3, ip, lsl #2]
   22a24:	add	pc, r3, r2
   22a28:	.word	0x0000002c
   22a2c:	.word	0x0000001c
   22a30:	.word	0x0000001c
   22a34:	.word	0x00000044
   22a38:	.word	0x0000004c
   22a3c:	.word	0x00000028
   22a40:	.word	0x00000028
   22a44:	mov	r0, ip
   22a48:	bx	lr
   22a4c:	mov	r0, #0
   22a50:	bx	lr
   22a54:	sub	r0, r1, #1
   22a58:	movw	r2, #2044	; 0x7fc
   22a5c:	cmp	r0, r2
   22a60:	movwhi	r1, #2045	; 0x7fd
   22a64:	mov	r0, r1
   22a68:	bx	lr
   22a6c:	mov	r0, #4
   22a70:	bx	lr
   22a74:	mov	r0, ip
   22a78:	bx	lr

00022a7c <dta_111_variable_width>:
   22a7c:	cmp	r0, #5
   22a80:	bhi	22ab8 <dta_111_variable_width+0x3c>
   22a84:	mov	ip, r0
   22a88:	add	r3, pc, #8
   22a8c:	mov	r0, #8
   22a90:	ldr	r2, [r3, ip, lsl #2]
   22a94:	add	pc, r3, r2
   22a98:	.word	0x00000028
   22a9c:	.word	0x00000018
   22aa0:	.word	0x00000018
   22aa4:	.word	0x0000003c
   22aa8:	.word	0x00000044
   22aac:	.word	0x00000024
   22ab0:	mov	r0, ip
   22ab4:	bx	lr
   22ab8:	mov	r0, #0
   22abc:	bx	lr
   22ac0:	sub	r0, r1, #1
   22ac4:	cmp	r0, #243	; 0xf3
   22ac8:	movwhi	r1, #244	; 0xf4
   22acc:	mov	r0, r1
   22ad0:	bx	lr
   22ad4:	mov	r0, #4
   22ad8:	bx	lr
   22adc:	mov	r0, ip
   22ae0:	bx	lr

00022ae4 <dta_old_variable_width>:
   22ae4:	cmp	r0, #5
   22ae8:	bhi	22b20 <dta_old_variable_width+0x3c>
   22aec:	mov	ip, r0
   22af0:	add	r3, pc, #8
   22af4:	mov	r0, #8
   22af8:	ldr	r2, [r3, ip, lsl #2]
   22afc:	add	pc, r3, r2
   22b00:	.word	0x00000028
   22b04:	.word	0x00000018
   22b08:	.word	0x00000018
   22b0c:	.word	0x0000003c
   22b10:	.word	0x00000044
   22b14:	.word	0x00000024
   22b18:	mov	r0, ip
   22b1c:	bx	lr
   22b20:	mov	r0, #0
   22b24:	bx	lr
   22b28:	sub	r0, r1, #1
   22b2c:	cmp	r0, #127	; 0x7f
   22b30:	movwhi	r1, #128	; 0x80
   22b34:	mov	r0, r1
   22b38:	bx	lr
   22b3c:	mov	r0, #4
   22b40:	bx	lr
   22b44:	mov	r0, ip
   22b48:	bx	lr

00022b4c <dta_118_variable_ok>:
   22b4c:	push	{fp, lr}
   22b50:	mov	fp, sp
   22b54:	bl	4cb4 <readstat_variable_get_name@plt>
   22b58:	mov	r1, #1
   22b5c:	mov	r2, #129	; 0x81
   22b60:	pop	{fp, lr}
   22b64:	b	24918 <dta_validate_name>

00022b68 <dta_110_variable_ok>:
   22b68:	push	{fp, lr}
   22b6c:	mov	fp, sp
   22b70:	bl	4cb4 <readstat_variable_get_name@plt>
   22b74:	mov	r1, #0
   22b78:	mov	r2, #33	; 0x21
   22b7c:	pop	{fp, lr}
   22b80:	b	24918 <dta_validate_name>

00022b84 <dta_old_variable_ok>:
   22b84:	push	{fp, lr}
   22b88:	mov	fp, sp
   22b8c:	bl	4cb4 <readstat_variable_get_name@plt>
   22b90:	mov	r1, #0
   22b94:	mov	r2, #9
   22b98:	pop	{fp, lr}
   22b9c:	b	24918 <dta_validate_name>

00022ba0 <dta_118_write_string_ref>:
   22ba0:	cmp	r2, #0
   22ba4:	moveq	r0, #34	; 0x22
   22ba8:	bxeq	lr
   22bac:	push	{r4, r5, r6, sl, fp, lr}
   22bb0:	add	fp, sp, #16
   22bb4:	ldr	r6, [r2, #8]
   22bb8:	ldr	r5, [r2, #12]
   22bbc:	mov	r4, r0
   22bc0:	ldrh	r0, [r2]
   22bc4:	strh	r0, [r4]
   22bc8:	bl	4858 <machine_is_little_endian@plt>
   22bcc:	cmp	r0, #0
   22bd0:	mov	r0, #0
   22bd4:	lsreq	r5, r6, #16
   22bd8:	lsleq	r6, r6, #16
   22bdc:	strh	r5, [r4, #6]
   22be0:	str	r6, [r4, #2]
   22be4:	pop	{r4, r5, r6, sl, fp, pc}

00022be8 <dta_117_write_string_ref>:
   22be8:	cmp	r2, #0
   22bec:	moveq	r0, #34	; 0x22
   22bf0:	bxeq	lr
   22bf4:	ldr	r1, [r2]
   22bf8:	ldr	r2, [r2, #8]
   22bfc:	str	r2, [r0, #4]
   22c00:	str	r1, [r0]
   22c04:	mov	r0, #0
   22c08:	bx	lr

00022c0c <dta_113_write_int8>:
   22c0c:	mov	r1, r0
   22c10:	cmp	r2, #100	; 0x64
   22c14:	mov	r0, #20
   22c18:	movle	r0, #0
   22c1c:	strble	r2, [r1]
   22c20:	bx	lr

00022c24 <dta_113_write_int16>:
   22c24:	movw	r3, #32740	; 0x7fe4
   22c28:	mov	r1, r0
   22c2c:	mov	r0, #20
   22c30:	cmp	r2, r3
   22c34:	movle	r0, #0
   22c38:	strhle	r2, [r1]
   22c3c:	bx	lr

00022c40 <dta_113_write_int32>:
   22c40:	mov	r1, r0
   22c44:	cmn	r2, #-2147483620	; 0x8000001c
   22c48:	mov	r0, #20
   22c4c:	movle	r0, #0
   22c50:	strle	r2, [r1]
   22c54:	bx	lr

00022c58 <dta_113_write_missing_numeric>:
   22c58:	ldr	r1, [r1]
   22c5c:	sub	r1, r1, #1
   22c60:	cmp	r1, #4
   22c64:	bhi	22ccc <dta_113_write_missing_numeric+0x74>
   22c68:	add	r2, pc, #4
   22c6c:	ldr	r1, [r2, r1, lsl #2]
   22c70:	add	pc, r2, r1
   22c74:	.word	0x00000014
   22c78:	.word	0x00000024
   22c7c:	.word	0x00000034
   22c80:	.word	0x0000003c
   22c84:	.word	0x00000044
   22c88:	mov	r1, #101	; 0x65
   22c8c:	strb	r1, [r0]
   22c90:	mov	r0, #0
   22c94:	bx	lr
   22c98:	movw	r1, #32741	; 0x7fe5
   22c9c:	strh	r1, [r0]
   22ca0:	mov	r0, #0
   22ca4:	bx	lr
   22ca8:	mvn	r1, #-2147483622	; 0x8000001a
   22cac:	b	22cc8 <dta_113_write_missing_numeric+0x70>
   22cb0:	mov	r1, #2130706432	; 0x7f000000
   22cb4:	b	22cc8 <dta_113_write_missing_numeric+0x70>
   22cb8:	movw	r1, #0
   22cbc:	movt	r1, #32736	; 0x7fe0
   22cc0:	str	r1, [r0, #4]
   22cc4:	mov	r1, #0
   22cc8:	str	r1, [r0]
   22ccc:	mov	r0, #0
   22cd0:	bx	lr

00022cd4 <dta_113_write_missing_tagged>:
   22cd4:	sub	r3, r2, #97	; 0x61
   22cd8:	mov	ip, #21
   22cdc:	uxtb	r3, r3
   22ce0:	cmp	r3, #25
   22ce4:	bls	22cf0 <dta_113_write_missing_tagged+0x1c>
   22ce8:	mov	r0, ip
   22cec:	bx	lr
   22cf0:	ldr	r1, [r1]
   22cf4:	sub	r1, r1, #1
   22cf8:	cmp	r1, #4
   22cfc:	bhi	22d2c <dta_113_write_missing_tagged+0x58>
   22d00:	add	r3, pc, #4
   22d04:	ldr	r1, [r3, r1, lsl #2]
   22d08:	add	pc, r3, r1
   22d0c:	.word	0x00000014
   22d10:	.word	0x0000002c
   22d14:	.word	0x0000003c
   22d18:	.word	0x00000048
   22d1c:	.word	0x00000064
   22d20:	add	r1, r2, #5
   22d24:	strb	r1, [r0]
   22d28:	b	22d64 <dta_113_write_missing_tagged+0x90>
   22d2c:	mov	ip, #23
   22d30:	mov	r0, ip
   22d34:	bx	lr
   22d38:	movw	r1, #32645	; 0x7f85
   22d3c:	add	r1, r2, r1
   22d40:	strh	r1, [r0]
   22d44:	b	22d64 <dta_113_write_missing_tagged+0x90>
   22d48:	sub	r1, r2, #123	; 0x7b
   22d4c:	sub	r1, r1, #-2147483648	; 0x80000000
   22d50:	b	22d60 <dta_113_write_missing_tagged+0x8c>
   22d54:	movw	r1, #0
   22d58:	movt	r1, #32509	; 0x7efd
   22d5c:	add	r1, r1, r2, lsl #11
   22d60:	str	r1, [r0]
   22d64:	mov	ip, #0
   22d68:	mov	r0, ip
   22d6c:	bx	lr
   22d70:	movw	r1, #40960	; 0xa000
   22d74:	mov	ip, #0
   22d78:	movt	r1, #32735	; 0x7fdf
   22d7c:	str	ip, [r0]
   22d80:	add	r1, r1, r2, lsl #8
   22d84:	str	r1, [r0, #4]
   22d88:	mov	r0, ip
   22d8c:	bx	lr

00022d90 <dta_old_write_int8>:
   22d90:	mov	r1, r0
   22d94:	cmp	r2, #127	; 0x7f
   22d98:	mov	r0, #20
   22d9c:	movne	r0, #0
   22da0:	strbne	r2, [r1]
   22da4:	bx	lr

00022da8 <dta_old_write_int16>:
   22da8:	movw	r3, #32767	; 0x7fff
   22dac:	mov	r1, r0
   22db0:	mov	r0, #20
   22db4:	cmp	r2, r3
   22db8:	movne	r0, #0
   22dbc:	strhne	r2, [r1]
   22dc0:	bx	lr

00022dc4 <dta_old_write_int32>:
   22dc4:	mov	r1, r0
   22dc8:	cmn	r2, #-2147483647	; 0x80000001
   22dcc:	mov	r0, #20
   22dd0:	movne	r0, #0
   22dd4:	strne	r2, [r1]
   22dd8:	bx	lr

00022ddc <dta_old_write_missing_numeric>:
   22ddc:	ldr	r1, [r1]
   22de0:	sub	r1, r1, #1
   22de4:	cmp	r1, #4
   22de8:	bhi	22e50 <dta_old_write_missing_numeric+0x74>
   22dec:	add	r2, pc, #4
   22df0:	ldr	r1, [r2, r1, lsl #2]
   22df4:	add	pc, r2, r1
   22df8:	.word	0x00000014
   22dfc:	.word	0x00000024
   22e00:	.word	0x00000034
   22e04:	.word	0x0000003c
   22e08:	.word	0x00000044
   22e0c:	mov	r1, #127	; 0x7f
   22e10:	strb	r1, [r0]
   22e14:	mov	r0, #0
   22e18:	bx	lr
   22e1c:	movw	r1, #32767	; 0x7fff
   22e20:	strh	r1, [r0]
   22e24:	mov	r0, #0
   22e28:	bx	lr
   22e2c:	mvn	r1, #-2147483648	; 0x80000000
   22e30:	b	22e4c <dta_old_write_missing_numeric+0x70>
   22e34:	mov	r1, #2130706432	; 0x7f000000
   22e38:	b	22e4c <dta_old_write_missing_numeric+0x70>
   22e3c:	movw	r1, #0
   22e40:	movt	r1, #32736	; 0x7fe0
   22e44:	str	r1, [r0, #4]
   22e48:	mov	r1, #0
   22e4c:	str	r1, [r0]
   22e50:	mov	r0, #0
   22e54:	bx	lr

00022e58 <dta_write_float>:
   22e58:	push	{r4, r5, fp, lr}
   22e5c:	add	fp, sp, #8
   22e60:	vpush	{d8}
   22e64:	vmov.f32	s16, s0
   22e68:	vldr	s0, [pc, #192]	; 22f30 <dta_write_float+0xd8>
   22e6c:	mov	r4, r0
   22e70:	mov	r0, #20
   22e74:	vcmpe.f32	s16, s0
   22e78:	vmrs	APSR_nzcv, fpscr
   22e7c:	bgt	22ee4 <dta_write_float+0x8c>
   22e80:	vmov.f32	s0, s16
   22e84:	mov	r5, r1
   22e88:	bl	4870 <__isnanf@plt>
   22e8c:	cmp	r0, #0
   22e90:	beq	22ed8 <dta_write_float+0x80>
   22e94:	ldr	r0, [r5]
   22e98:	sub	r1, r0, #1
   22e9c:	mov	r0, #0
   22ea0:	cmp	r1, #4
   22ea4:	bhi	22ee4 <dta_write_float+0x8c>
   22ea8:	add	r2, pc, #4
   22eac:	ldr	r1, [r2, r1, lsl #2]
   22eb0:	add	pc, r2, r1
   22eb4:	.word	0x00000014
   22eb8:	.word	0x00000038
   22ebc:	.word	0x00000048
   22ec0:	.word	0x00000050
   22ec4:	.word	0x00000060
   22ec8:	mov	r1, #101	; 0x65
   22ecc:	strb	r1, [r4]
   22ed0:	vpop	{d8}
   22ed4:	pop	{r4, r5, fp, pc}
   22ed8:	vmov	r0, s16
   22edc:	str	r0, [r4]
   22ee0:	mov	r0, #0
   22ee4:	vpop	{d8}
   22ee8:	pop	{r4, r5, fp, pc}
   22eec:	movw	r1, #32741	; 0x7fe5
   22ef0:	strh	r1, [r4]
   22ef4:	vpop	{d8}
   22ef8:	pop	{r4, r5, fp, pc}
   22efc:	mvn	r1, #-2147483622	; 0x8000001a
   22f00:	b	22f08 <dta_write_float+0xb0>
   22f04:	mov	r1, #2130706432	; 0x7f000000
   22f08:	str	r1, [r4]
   22f0c:	vpop	{d8}
   22f10:	pop	{r4, r5, fp, pc}
   22f14:	movw	r0, #0
   22f18:	movt	r0, #32736	; 0x7fe0
   22f1c:	str	r0, [r4, #4]
   22f20:	mov	r0, #0
   22f24:	str	r0, [r4]
   22f28:	vpop	{d8}
   22f2c:	pop	{r4, r5, fp, pc}
   22f30:	.word	0x7effffff
   22f34:	.word	0xe320f000

00022f38 <dta_write_double>:
   22f38:	push	{r4, r5, fp, lr}
   22f3c:	add	fp, sp, #8
   22f40:	vpush	{d8}
   22f44:	vldr	d16, [pc, #188]	; 23008 <dta_write_double+0xd0>
   22f48:	mov	r4, r0
   22f4c:	mov	r0, #20
   22f50:	vcmpe.f64	d0, d16
   22f54:	vmrs	APSR_nzcv, fpscr
   22f58:	bgt	22fbc <dta_write_double+0x84>
   22f5c:	vmov.f64	d8, d0
   22f60:	mov	r5, r1
   22f64:	bl	4c84 <__isnan@plt>
   22f68:	cmp	r0, #0
   22f6c:	beq	22fb4 <dta_write_double+0x7c>
   22f70:	ldr	r0, [r5]
   22f74:	sub	r1, r0, #1
   22f78:	mov	r0, #0
   22f7c:	cmp	r1, #4
   22f80:	bhi	22fbc <dta_write_double+0x84>
   22f84:	add	r2, pc, #4
   22f88:	ldr	r1, [r2, r1, lsl #2]
   22f8c:	add	pc, r2, r1
   22f90:	.word	0x00000014
   22f94:	.word	0x00000034
   22f98:	.word	0x00000044
   22f9c:	.word	0x0000004c
   22fa0:	.word	0x0000005c
   22fa4:	mov	r1, #101	; 0x65
   22fa8:	strb	r1, [r4]
   22fac:	vpop	{d8}
   22fb0:	pop	{r4, r5, fp, pc}
   22fb4:	mov	r0, #0
   22fb8:	vst1.8	{d8}, [r4]
   22fbc:	vpop	{d8}
   22fc0:	pop	{r4, r5, fp, pc}
   22fc4:	movw	r1, #32741	; 0x7fe5
   22fc8:	strh	r1, [r4]
   22fcc:	vpop	{d8}
   22fd0:	pop	{r4, r5, fp, pc}
   22fd4:	mvn	r1, #-2147483622	; 0x8000001a
   22fd8:	b	22fe0 <dta_write_double+0xa8>
   22fdc:	mov	r1, #2130706432	; 0x7f000000
   22fe0:	str	r1, [r4]
   22fe4:	vpop	{d8}
   22fe8:	pop	{r4, r5, fp, pc}
   22fec:	movw	r0, #0
   22ff0:	movt	r0, #32736	; 0x7fe0
   22ff4:	str	r0, [r4, #4]
   22ff8:	mov	r0, #0
   22ffc:	str	r0, [r4]
   23000:	vpop	{d8}
   23004:	pop	{r4, r5, fp, pc}
   23008:	.word	0xffffffff
   2300c:	.word	0x7fdfffff

00023010 <dta_write_string>:
   23010:	push	{r4, r5, r6, r7, fp, lr}
   23014:	add	fp, sp, #16
   23018:	ldr	r4, [r1, #1596]	; 0x63c
   2301c:	mov	r5, r0
   23020:	cmp	r2, #0
   23024:	beq	23068 <dta_write_string+0x58>
   23028:	ldrb	r0, [r2]
   2302c:	mov	r6, r2
   23030:	cmp	r0, #0
   23034:	beq	23068 <dta_write_string+0x58>
   23038:	mov	r0, r6
   2303c:	bl	4b58 <strlen@plt>
   23040:	mov	r7, #22
   23044:	cmp	r0, r4
   23048:	bhi	23060 <dta_write_string+0x50>
   2304c:	mov	r0, r5
   23050:	mov	r1, r6
   23054:	mov	r2, r4
   23058:	bl	4c18 <strncpy@plt>
   2305c:	mov	r7, #0
   23060:	mov	r0, r7
   23064:	pop	{r4, r5, r6, r7, fp, pc}
   23068:	mov	r0, r5
   2306c:	mov	r1, #0
   23070:	mov	r2, r4
   23074:	mov	r7, #0
   23078:	bl	4c00 <memset@plt>
   2307c:	mov	r0, r7
   23080:	pop	{r4, r5, r6, r7, fp, pc}

00023084 <dta_write_missing_string>:
   23084:	push	{fp, lr}
   23088:	mov	fp, sp
   2308c:	ldr	r2, [r1, #1596]	; 0x63c
   23090:	mov	r1, #0
   23094:	bl	4c00 <memset@plt>
   23098:	mov	r0, #0
   2309c:	pop	{fp, pc}

000230a0 <dta_begin_data>:
   230a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   230a4:	add	fp, sp, #28
   230a8:	sub	sp, sp, #180	; 0xb4
   230ac:	mov	r9, r0
   230b0:	ldr	r0, [r0, #308]	; 0x134
   230b4:	cmp	r0, #0
   230b8:	beq	23120 <dta_begin_data+0x80>
   230bc:	mov	r0, #0
   230c0:	mov	r7, #0
   230c4:	bl	4e94 <dta_ctx_alloc@plt>
   230c8:	ldr	r5, [r9, #28]
   230cc:	ldr	r6, [r9, #80]	; 0x50
   230d0:	mov	r4, r0
   230d4:	bl	4858 <machine_is_little_endian@plt>
   230d8:	ldrb	r1, [r9, #8]
   230dc:	cmp	r0, #0
   230e0:	mov	r2, #2
   230e4:	asr	r3, r6, #31
   230e8:	mov	r0, r4
   230ec:	movweq	r2, #1
   230f0:	str	r2, [sp]
   230f4:	mov	r2, r6
   230f8:	stmib	sp, {r1, r7}
   230fc:	mov	r1, r5
   23100:	str	r7, [sp, #12]
   23104:	bl	4b28 <dta_ctx_init@plt>
   23108:	mov	r6, r0
   2310c:	cmp	r0, #0
   23110:	beq	23130 <dta_begin_data+0x90>
   23114:	mov	r0, r4
   23118:	bl	481c <dta_ctx_free@plt>
   2311c:	b	23124 <dta_begin_data+0x84>
   23120:	mov	r6, #14
   23124:	mov	r0, r6
   23128:	sub	sp, fp, #28
   2312c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23130:	mov	r1, r4
   23134:	str	r9, [sp, #36]	; 0x24
   23138:	str	r4, [sp, #32]
   2313c:	ldrb	r0, [r1, #192]!	; 0xc0
   23140:	tst	r0, #4
   23144:	str	r1, [sp, #28]
   23148:	bne	2372c <dta_begin_data+0x68c>
   2314c:	ldr	r0, [r9, #8]
   23150:	strb	r0, [sp, #48]	; 0x30
   23154:	bl	4858 <machine_is_little_endian@plt>
   23158:	mov	r1, #1
   2315c:	cmp	r0, #0
   23160:	strh	r1, [sp, #50]	; 0x32
   23164:	mov	r1, #2
   23168:	movweq	r1, #1
   2316c:	strb	r1, [sp, #49]	; 0x31
   23170:	ldr	r0, [r9, #28]
   23174:	strh	r0, [sp, #52]	; 0x34
   23178:	cmp	r0, #32768	; 0x8000
   2317c:	ldr	r1, [r9, #80]	; 0x50
   23180:	str	r1, [sp, #54]	; 0x36
   23184:	bge	231c0 <dta_begin_data+0x120>
   23188:	add	r1, sp, #48	; 0x30
   2318c:	mov	r0, r9
   23190:	mov	r2, #10
   23194:	bl	4d98 <readstat_write_bytes@plt>
   23198:	cmp	r0, #0
   2319c:	bne	231c0 <dta_begin_data+0x120>
   231a0:	mov	r0, r9
   231a4:	mov	r1, r4
   231a8:	bl	24e78 <dta_emit_header_data_label>
   231ac:	cmp	r0, #0
   231b0:	bne	231c0 <dta_begin_data+0x120>
   231b4:	mov	r0, r9
   231b8:	mov	r1, r4
   231bc:	bl	24fbc <dta_emit_header_time_stamp>
   231c0:	ldr	r0, [sp, #28]
   231c4:	ldrb	r5, [r0]
   231c8:	ands	r7, r5, #4
   231cc:	bne	23888 <dta_begin_data+0x7e8>
   231d0:	ldr	r0, [r4, #148]	; 0x94
   231d4:	cmp	r0, #1
   231d8:	blt	23400 <dta_begin_data+0x360>
   231dc:	movw	r0, #65526	; 0xfff6
   231e0:	mov	r5, #0
   231e4:	mov	r7, #0
   231e8:	add	r1, r0, #4
   231ec:	add	r8, r0, #2
   231f0:	add	sl, r0, #1
   231f4:	str	r1, [sp, #36]	; 0x24
   231f8:	add	r1, r0, #3
   231fc:	str	r1, [sp, #32]
   23200:	mov	r0, r9
   23204:	mov	r1, r7
   23208:	bl	4ccc <readstat_get_variable@plt>
   2320c:	ldrb	r1, [r4, #20]
   23210:	cmp	r1, #117	; 0x75
   23214:	beq	23260 <dta_begin_data+0x1c0>
   23218:	cmp	r1, #111	; 0x6f
   2321c:	bne	2329c <dta_begin_data+0x1fc>
   23220:	ldr	r1, [r0]
   23224:	cmp	r1, #6
   23228:	bhi	232e4 <dta_begin_data+0x244>
   2322c:	add	r2, pc, #8
   23230:	mov	r6, #33	; 0x21
   23234:	ldr	r1, [r2, r1, lsl #2]
   23238:	add	pc, r2, r1
   2323c:	.word	0x00000058
   23240:	.word	0x0000001c
   23244:	.word	0x000000b0
   23248:	.word	0x000000b8
   2324c:	.word	0x000000c0
   23250:	.word	0x000000c8
   23254:	.word	0xfffffed8
   23258:	mov	r0, #251	; 0xfb
   2325c:	b	23360 <dta_begin_data+0x2c0>
   23260:	ldr	r1, [r0]
   23264:	cmp	r1, #6
   23268:	bhi	232e4 <dta_begin_data+0x244>
   2326c:	add	r2, pc, #4
   23270:	ldr	r1, [r2, r1, lsl #2]
   23274:	add	pc, r2, r1
   23278:	.word	0x0000001c
   2327c:	.word	0x000000bc
   23280:	.word	0x000000c4
   23284:	.word	0x000000cc
   23288:	.word	0x000000d4
   2328c:	.word	0x000000dc
   23290:	.word	0x000000e4
   23294:	ldr	r0, [r0, #1596]	; 0x63c
   23298:	b	23360 <dta_begin_data+0x2c0>
   2329c:	ldr	r1, [r0]
   232a0:	cmp	r1, #6
   232a4:	bhi	232e4 <dta_begin_data+0x244>
   232a8:	add	r2, pc, #8
   232ac:	mov	r6, #33	; 0x21
   232b0:	ldr	r1, [r2, r1, lsl #2]
   232b4:	add	pc, r2, r1
   232b8:	.word	0x0000001c
   232bc:	.word	0x00000054
   232c0:	.word	0x0000005c
   232c4:	.word	0x00000064
   232c8:	.word	0x0000006c
   232cc:	.word	0x00000074
   232d0:	.word	0xfffffe5c
   232d4:	movw	r1, #1596	; 0x63c
   232d8:	ldrh	r0, [r0, r1]
   232dc:	add	r0, r0, #127	; 0x7f
   232e0:	b	23360 <dta_begin_data+0x2c0>
   232e4:	mov	r0, #0
   232e8:	b	23360 <dta_begin_data+0x2c0>
   232ec:	mov	r0, #252	; 0xfc
   232f0:	b	23360 <dta_begin_data+0x2c0>
   232f4:	mov	r0, #253	; 0xfd
   232f8:	b	23360 <dta_begin_data+0x2c0>
   232fc:	mov	r0, #254	; 0xfe
   23300:	b	23360 <dta_begin_data+0x2c0>
   23304:	mov	r0, #255	; 0xff
   23308:	b	23360 <dta_begin_data+0x2c0>
   2330c:	mov	r0, #98	; 0x62
   23310:	b	23360 <dta_begin_data+0x2c0>
   23314:	mov	r0, #105	; 0x69
   23318:	b	23360 <dta_begin_data+0x2c0>
   2331c:	mov	r0, #108	; 0x6c
   23320:	b	23360 <dta_begin_data+0x2c0>
   23324:	mov	r0, #102	; 0x66
   23328:	b	23360 <dta_begin_data+0x2c0>
   2332c:	mov	r0, #100	; 0x64
   23330:	b	23360 <dta_begin_data+0x2c0>
   23334:	ldr	r0, [sp, #36]	; 0x24
   23338:	b	23360 <dta_begin_data+0x2c0>
   2333c:	ldr	r0, [sp, #32]
   23340:	b	23360 <dta_begin_data+0x2c0>
   23344:	mov	r0, r8
   23348:	b	23360 <dta_begin_data+0x2c0>
   2334c:	mov	r0, sl
   23350:	b	23360 <dta_begin_data+0x2c0>
   23354:	movw	r0, #65526	; 0xfff6
   23358:	b	23360 <dta_begin_data+0x2c0>
   2335c:	mov	r0, #32768	; 0x8000
   23360:	ldr	r1, [r4, #28]
   23364:	add	r7, r7, #1
   23368:	add	r1, r1, r5
   2336c:	add	r5, r5, #2
   23370:	strh	r0, [r1]
   23374:	ldr	r0, [r4, #148]	; 0x94
   23378:	cmp	r7, r0
   2337c:	blt	23200 <dta_begin_data+0x160>
   23380:	cmp	r0, #1
   23384:	blt	23400 <dta_begin_data+0x360>
   23388:	mov	r5, #0
   2338c:	add	r8, sp, #48	; 0x30
   23390:	mov	r7, #0
   23394:	ldr	r1, [r4, #24]
   23398:	cmp	r1, #2
   2339c:	beq	233c0 <dta_begin_data+0x320>
   233a0:	cmp	r1, #1
   233a4:	bne	233f0 <dta_begin_data+0x350>
   233a8:	ldr	r0, [r4, #28]
   233ac:	mov	r1, r8
   233b0:	mov	r2, #1
   233b4:	ldrb	r0, [r0, r5]
   233b8:	strb	r0, [sp, #48]	; 0x30
   233bc:	b	233d8 <dta_begin_data+0x338>
   233c0:	ldr	r0, [r4, #28]
   233c4:	mov	r1, r8
   233c8:	mov	r2, #2
   233cc:	add	r0, r0, r5
   233d0:	ldrh	r0, [r0]
   233d4:	strh	r0, [sp, #48]	; 0x30
   233d8:	mov	r0, r9
   233dc:	bl	4d98 <readstat_write_bytes@plt>
   233e0:	mov	r6, r0
   233e4:	cmp	r0, #0
   233e8:	bne	23114 <dta_begin_data+0x74>
   233ec:	ldr	r0, [r4, #148]	; 0x94
   233f0:	add	r7, r7, #1
   233f4:	add	r5, r5, #2
   233f8:	cmp	r7, r0
   233fc:	blt	23394 <dta_begin_data+0x2f4>
   23400:	ldr	r0, [sp, #28]
   23404:	ldrb	r0, [r0]
   23408:	tst	r0, #4
   2340c:	bne	239ac <dta_begin_data+0x90c>
   23410:	ldr	r0, [r4, #148]	; 0x94
   23414:	cmp	r0, #1
   23418:	blt	23454 <dta_begin_data+0x3b4>
   2341c:	mov	r6, #0
   23420:	mov	r0, r9
   23424:	mov	r1, r6
   23428:	bl	4ccc <readstat_get_variable@plt>
   2342c:	ldr	r1, [r4, #36]	; 0x24
   23430:	ldr	r2, [r4, #76]	; 0x4c
   23434:	mla	r3, r2, r6, r1
   23438:	add	r1, r0, #8
   2343c:	mov	r0, r3
   23440:	bl	4c18 <strncpy@plt>
   23444:	ldr	r0, [r4, #148]	; 0x94
   23448:	add	r6, r6, #1
   2344c:	cmp	r6, r0
   23450:	blt	23420 <dta_begin_data+0x380>
   23454:	ldr	r1, [r4, #36]	; 0x24
   23458:	ldr	r2, [r4, #40]	; 0x28
   2345c:	mov	r0, r9
   23460:	bl	4d98 <readstat_write_bytes@plt>
   23464:	mov	r6, r0
   23468:	cmp	r0, #0
   2346c:	bne	23114 <dta_begin_data+0x74>
   23470:	ldr	r0, [sp, #28]
   23474:	ldrb	r0, [r0]
   23478:	tst	r0, #4
   2347c:	bne	23de8 <dta_begin_data+0xd48>
   23480:	ldr	r0, [r4, #44]	; 0x2c
   23484:	ldr	r2, [r4, #48]	; 0x30
   23488:	mov	r1, #0
   2348c:	bl	4c00 <memset@plt>
   23490:	ldr	r1, [r4, #44]	; 0x2c
   23494:	ldr	r2, [r4, #48]	; 0x30
   23498:	mov	r0, r9
   2349c:	bl	4d98 <readstat_write_bytes@plt>
   234a0:	mov	r6, r0
   234a4:	cmp	r0, #0
   234a8:	bne	23114 <dta_begin_data+0x74>
   234ac:	ldr	r0, [sp, #28]
   234b0:	ldrb	r0, [r0]
   234b4:	tst	r0, #4
   234b8:	bne	23e34 <dta_begin_data+0xd94>
   234bc:	ldr	r0, [r4, #148]	; 0x94
   234c0:	cmp	r0, #1
   234c4:	blt	2359c <dta_begin_data+0x4fc>
   234c8:	ldr	sl, [pc, #3196]	; 2414c <dta_begin_data+0x10ac>
   234cc:	mov	r6, #0
   234d0:	add	r5, sp, #48	; 0x30
   234d4:	add	sl, pc, sl
   234d8:	mov	r0, r9
   234dc:	mov	r1, r6
   234e0:	bl	4ccc <readstat_get_variable@plt>
   234e4:	mov	r1, r0
   234e8:	mov	r8, r0
   234ec:	ldrb	r0, [r1, #308]!	; 0x134
   234f0:	cmp	r0, #0
   234f4:	beq	23504 <dta_begin_data+0x464>
   234f8:	ldr	r0, [r4, #52]	; 0x34
   234fc:	ldr	r2, [r4, #80]	; 0x50
   23500:	b	23584 <dta_begin_data+0x4e4>
   23504:	ldr	r0, [r8]
   23508:	ldr	r7, [r8, #2136]	; 0x858
   2350c:	bl	47c8 <readstat_type_class@plt>
   23510:	cmp	r7, #0
   23514:	bne	23534 <dta_begin_data+0x494>
   23518:	ldr	r1, [r8]
   2351c:	mov	r7, #9
   23520:	sub	r1, r1, #1
   23524:	cmp	r1, #4
   23528:	ldrls	r2, [pc, #3104]	; 24150 <dta_begin_data+0x10b0>
   2352c:	addls	r2, pc, r2
   23530:	ldrls	r7, [r2, r1, lsl #2]
   23534:	ldr	r1, [r8, #2132]	; 0x854
   23538:	mov	r2, sl
   2353c:	cmp	r1, #1
   23540:	ldr	r1, [pc, #3084]	; 24154 <dta_begin_data+0x10b4>
   23544:	add	r1, pc, r1
   23548:	moveq	r2, r1
   2354c:	cmp	r0, #0
   23550:	beq	23564 <dta_begin_data+0x4c4>
   23554:	ldr	r1, [pc, #3068]	; 24158 <dta_begin_data+0x10b8>
   23558:	mov	r0, r5
   2355c:	add	r1, pc, r1
   23560:	b	23570 <dta_begin_data+0x4d0>
   23564:	ldr	r1, [pc, #3056]	; 2415c <dta_begin_data+0x10bc>
   23568:	mov	r0, r5
   2356c:	add	r1, pc, r1
   23570:	mov	r3, r7
   23574:	bl	4d38 <sprintf@plt>
   23578:	ldr	r0, [r4, #52]	; 0x34
   2357c:	ldr	r2, [r4, #80]	; 0x50
   23580:	mov	r1, r5
   23584:	mla	r0, r2, r6, r0
   23588:	bl	4c18 <strncpy@plt>
   2358c:	ldr	r0, [r4, #148]	; 0x94
   23590:	add	r6, r6, #1
   23594:	cmp	r6, r0
   23598:	blt	234d8 <dta_begin_data+0x438>
   2359c:	ldr	r1, [r4, #52]	; 0x34
   235a0:	ldr	r2, [r4, #56]	; 0x38
   235a4:	mov	r0, r9
   235a8:	bl	4d98 <readstat_write_bytes@plt>
   235ac:	mov	r6, r0
   235b0:	cmp	r0, #0
   235b4:	bne	23114 <dta_begin_data+0x74>
   235b8:	ldr	r0, [sp, #28]
   235bc:	ldrb	r0, [r0]
   235c0:	tst	r0, #4
   235c4:	bne	23f54 <dta_begin_data+0xeb4>
   235c8:	ldr	r0, [r4, #148]	; 0x94
   235cc:	cmp	r0, #1
   235d0:	blt	23624 <dta_begin_data+0x584>
   235d4:	mov	r6, #0
   235d8:	mov	r0, r9
   235dc:	mov	r1, r6
   235e0:	bl	4ccc <readstat_get_variable@plt>
   235e4:	mov	r1, r0
   235e8:	ldr	r0, [r4, #60]	; 0x3c
   235ec:	ldr	r2, [r4, #84]	; 0x54
   235f0:	ldr	r1, [r1, #1588]	; 0x634
   235f4:	mla	r0, r2, r6, r0
   235f8:	cmp	r1, #0
   235fc:	beq	2360c <dta_begin_data+0x56c>
   23600:	add	r1, r1, #4
   23604:	bl	4c18 <strncpy@plt>
   23608:	b	23614 <dta_begin_data+0x574>
   2360c:	mov	r1, #0
   23610:	bl	4c00 <memset@plt>
   23614:	ldr	r0, [r4, #148]	; 0x94
   23618:	add	r6, r6, #1
   2361c:	cmp	r6, r0
   23620:	blt	235d8 <dta_begin_data+0x538>
   23624:	ldr	r1, [r4, #60]	; 0x3c
   23628:	ldr	r2, [r4, #64]	; 0x40
   2362c:	mov	r0, r9
   23630:	bl	4d98 <readstat_write_bytes@plt>
   23634:	mov	r6, r0
   23638:	cmp	r0, #0
   2363c:	bne	23114 <dta_begin_data+0x74>
   23640:	ldr	r0, [sp, #28]
   23644:	ldrb	r0, [r0]
   23648:	tst	r0, #4
   2364c:	bne	2400c <dta_begin_data+0xf6c>
   23650:	ldr	r0, [r4, #148]	; 0x94
   23654:	cmp	r0, #1
   23658:	blt	23694 <dta_begin_data+0x5f4>
   2365c:	mov	r6, #0
   23660:	mov	r0, r9
   23664:	mov	r1, r6
   23668:	bl	4ccc <readstat_get_variable@plt>
   2366c:	ldr	r1, [r4, #68]	; 0x44
   23670:	ldr	r2, [r4, #88]	; 0x58
   23674:	mla	r3, r2, r6, r1
   23678:	add	r1, r0, #564	; 0x234
   2367c:	mov	r0, r3
   23680:	bl	4c18 <strncpy@plt>
   23684:	ldr	r0, [r4, #148]	; 0x94
   23688:	add	r6, r6, #1
   2368c:	cmp	r6, r0
   23690:	blt	23660 <dta_begin_data+0x5c0>
   23694:	ldr	r1, [r4, #68]	; 0x44
   23698:	ldr	r2, [r4, #72]	; 0x48
   2369c:	mov	r0, r9
   236a0:	bl	4d98 <readstat_write_bytes@plt>
   236a4:	mov	r6, r0
   236a8:	cmp	r0, #0
   236ac:	bne	23114 <dta_begin_data+0x74>
   236b0:	ldr	r0, [sp, #28]
   236b4:	ldrb	r0, [r0]
   236b8:	tst	r0, #4
   236bc:	beq	236dc <dta_begin_data+0x63c>
   236c0:	ldr	r1, [pc, #2728]	; 24170 <dta_begin_data+0x10d0>
   236c4:	mov	r0, r9
   236c8:	add	r1, pc, r1
   236cc:	bl	4abc <readstat_write_string@plt>
   236d0:	mov	r6, r0
   236d4:	cmp	r0, #0
   236d8:	bne	23114 <dta_begin_data+0x74>
   236dc:	mov	r0, r9
   236e0:	mov	r1, r4
   236e4:	bl	24c3c <dta_emit_characteristics>
   236e8:	mov	r6, r0
   236ec:	cmp	r0, #0
   236f0:	bne	23114 <dta_begin_data+0x74>
   236f4:	ldr	r0, [sp, #28]
   236f8:	ldrb	r0, [r0]
   236fc:	tst	r0, #4
   23700:	beq	23720 <dta_begin_data+0x680>
   23704:	ldr	r1, [pc, #2664]	; 24174 <dta_begin_data+0x10d4>
   23708:	mov	r0, r9
   2370c:	add	r1, pc, r1
   23710:	bl	4abc <readstat_write_string@plt>
   23714:	mov	r6, r0
   23718:	cmp	r0, #0
   2371c:	bne	23114 <dta_begin_data+0x74>
   23720:	mov	r6, #0
   23724:	str	r4, [r9, #300]	; 0x12c
   23728:	b	23124 <dta_begin_data+0x84>
   2372c:	ldr	r1, [pc, #2492]	; 240f0 <dta_begin_data+0x1050>
   23730:	mov	r0, r9
   23734:	add	r1, pc, r1
   23738:	bl	4abc <readstat_write_string@plt>
   2373c:	mov	r6, r0
   23740:	cmp	r0, #0
   23744:	bne	23114 <dta_begin_data+0x74>
   23748:	ldr	r0, [sp, #28]
   2374c:	ldrb	r0, [r0]
   23750:	tst	r0, #4
   23754:	beq	23774 <dta_begin_data+0x6d4>
   23758:	ldr	r1, [pc, #2452]	; 240f4 <dta_begin_data+0x1054>
   2375c:	mov	r0, r9
   23760:	add	r1, pc, r1
   23764:	bl	4abc <readstat_write_string@plt>
   23768:	mov	r6, r0
   2376c:	cmp	r0, #0
   23770:	bne	23114 <dta_begin_data+0x74>
   23774:	ldr	r3, [r9, #8]
   23778:	ldr	r2, [pc, #2424]	; 240f8 <dta_begin_data+0x1058>
   2377c:	add	r5, sp, #48	; 0x30
   23780:	mov	r1, #128	; 0x80
   23784:	mov	r0, r5
   23788:	add	r2, pc, r2
   2378c:	bl	4bdc <snprintf@plt>
   23790:	mov	r0, r9
   23794:	mov	r1, r5
   23798:	bl	4abc <readstat_write_string@plt>
   2379c:	mov	r6, r0
   237a0:	cmp	r0, #0
   237a4:	bne	23114 <dta_begin_data+0x74>
   237a8:	bl	4858 <machine_is_little_endian@plt>
   237ac:	ldr	r1, [pc, #2376]	; 240fc <dta_begin_data+0x105c>
   237b0:	ldr	r7, [pc, #2376]	; 24100 <dta_begin_data+0x1060>
   237b4:	cmp	r0, #0
   237b8:	ldr	r0, [sp, #28]
   237bc:	ldrb	r0, [r0]
   237c0:	add	r1, pc, r1
   237c4:	add	r7, pc, r7
   237c8:	moveq	r7, r1
   237cc:	tst	r0, #4
   237d0:	beq	237f0 <dta_begin_data+0x750>
   237d4:	ldr	r1, [pc, #2344]	; 24104 <dta_begin_data+0x1064>
   237d8:	mov	r0, r9
   237dc:	add	r1, pc, r1
   237e0:	bl	4abc <readstat_write_string@plt>
   237e4:	mov	r6, r0
   237e8:	cmp	r0, #0
   237ec:	bne	23114 <dta_begin_data+0x74>
   237f0:	mov	r0, r9
   237f4:	mov	r1, r7
   237f8:	mov	r2, #3
   237fc:	bl	4d98 <readstat_write_bytes@plt>
   23800:	mov	r6, r0
   23804:	cmp	r0, #0
   23808:	bne	23114 <dta_begin_data+0x74>
   2380c:	ldr	r0, [sp, #28]
   23810:	ldrb	r0, [r0]
   23814:	tst	r0, #4
   23818:	beq	23838 <dta_begin_data+0x798>
   2381c:	ldr	r1, [pc, #2276]	; 24108 <dta_begin_data+0x1068>
   23820:	mov	r0, r9
   23824:	add	r1, pc, r1
   23828:	bl	4abc <readstat_write_string@plt>
   2382c:	mov	r6, r0
   23830:	cmp	r0, #0
   23834:	bne	23114 <dta_begin_data+0x74>
   23838:	ldr	r0, [r9, #8]
   2383c:	cmp	r0, #119	; 0x77
   23840:	blt	23e80 <dta_begin_data+0xde0>
   23844:	ldr	r0, [r9, #28]
   23848:	str	r0, [sp, #40]	; 0x28
   2384c:	ldr	r0, [sp, #28]
   23850:	ldrb	r0, [r0]
   23854:	tst	r0, #4
   23858:	beq	23878 <dta_begin_data+0x7d8>
   2385c:	ldr	r1, [pc, #2216]	; 2410c <dta_begin_data+0x106c>
   23860:	mov	r0, r9
   23864:	add	r1, pc, r1
   23868:	bl	4abc <readstat_write_string@plt>
   2386c:	mov	r6, r0
   23870:	cmp	r0, #0
   23874:	bne	23114 <dta_begin_data+0x74>
   23878:	add	r1, sp, #40	; 0x28
   2387c:	mov	r0, r9
   23880:	mov	r2, #4
   23884:	b	23ec0 <dta_begin_data+0xe20>
   23888:	mov	r0, #0
   2388c:	str	r0, [sp, #52]	; 0x34
   23890:	str	r0, [sp, #48]	; 0x30
   23894:	ldr	r1, [r9, #4]
   23898:	str	r0, [sp, #60]	; 0x3c
   2389c:	str	r1, [sp, #56]	; 0x38
   238a0:	adds	r1, r1, #123	; 0x7b
   238a4:	adc	r2, r0, #0
   238a8:	str	r1, [sp, #64]	; 0x40
   238ac:	str	r2, [sp, #68]	; 0x44
   238b0:	ldr	r3, [r4, #24]
   238b4:	ldr	r6, [r4, #148]	; 0x94
   238b8:	mul	r3, r6, r3
   238bc:	add	r3, r3, #33	; 0x21
   238c0:	adds	r1, r1, r3
   238c4:	adc	r2, r2, #0
   238c8:	str	r1, [sp, #72]	; 0x48
   238cc:	str	r2, [sp, #76]	; 0x4c
   238d0:	ldr	r3, [r4, #40]	; 0x28
   238d4:	add	r3, r3, #21
   238d8:	adds	r1, r1, r3
   238dc:	adc	r2, r2, #0
   238e0:	str	r1, [sp, #80]	; 0x50
   238e4:	str	r2, [sp, #84]	; 0x54
   238e8:	ldr	r3, [r4, #48]	; 0x30
   238ec:	add	r3, r3, #21
   238f0:	adds	r1, r1, r3
   238f4:	adc	r2, r2, #0
   238f8:	str	r1, [sp, #88]	; 0x58
   238fc:	str	r2, [sp, #92]	; 0x5c
   23900:	ldr	r3, [r4, #56]	; 0x38
   23904:	add	r3, r3, #19
   23908:	adds	r1, r1, r3
   2390c:	adc	r2, r2, #0
   23910:	str	r1, [sp, #96]	; 0x60
   23914:	str	r2, [sp, #100]	; 0x64
   23918:	ldr	r3, [r4, #64]	; 0x40
   2391c:	add	r3, r3, #39	; 0x27
   23920:	adds	r1, r1, r3
   23924:	adc	r2, r2, #0
   23928:	str	r1, [sp, #104]	; 0x68
   2392c:	str	r2, [sp, #108]	; 0x6c
   23930:	ldr	r3, [r4, #72]	; 0x48
   23934:	add	r3, r3, #35	; 0x23
   23938:	adds	r3, r1, r3
   2393c:	adc	r2, r2, #0
   23940:	str	r3, [sp, #112]	; 0x70
   23944:	str	r2, [sp, #116]	; 0x74
   23948:	ldr	r8, [r9, #52]	; 0x34
   2394c:	cmp	r8, #1
   23950:	blt	239f8 <dta_begin_data+0x958>
   23954:	add	r0, sp, #16
   23958:	stm	r0, {r2, r3, r6}
   2395c:	ldr	r0, [r4, #92]	; 0x5c
   23960:	ldr	r1, [r4, #96]	; 0x60
   23964:	ldr	r9, [r9, #48]	; 0x30
   23968:	add	r0, r0, r7
   2396c:	add	r0, r0, r1, lsl #1
   23970:	add	r6, r0, #6
   23974:	mov	r0, #0
   23978:	add	sl, r6, r0
   2397c:	ldr	r0, [r9], #4
   23980:	bl	4b58 <strlen@plt>
   23984:	add	r0, sl, r0
   23988:	subs	r8, r8, #1
   2398c:	bne	23978 <dta_begin_data+0x8d8>
   23990:	add	r6, sp, #16
   23994:	ldr	r9, [sp, #36]	; 0x24
   23998:	ldr	r4, [sp, #32]
   2399c:	add	r1, r0, #35	; 0x23
   239a0:	mov	r0, #0
   239a4:	ldm	r6, {r2, r3, r6}
   239a8:	b	239fc <dta_begin_data+0x95c>
   239ac:	ldr	r1, [pc, #1920]	; 24134 <dta_begin_data+0x1094>
   239b0:	mov	r0, r9
   239b4:	add	r1, pc, r1
   239b8:	bl	4abc <readstat_write_string@plt>
   239bc:	mov	r6, r0
   239c0:	cmp	r0, #0
   239c4:	bne	23114 <dta_begin_data+0x74>
   239c8:	ldr	r0, [sp, #28]
   239cc:	ldrb	r0, [r0]
   239d0:	tst	r0, #4
   239d4:	beq	23410 <dta_begin_data+0x370>
   239d8:	ldr	r1, [pc, #1880]	; 24138 <dta_begin_data+0x1098>
   239dc:	mov	r0, r9
   239e0:	add	r1, pc, r1
   239e4:	bl	4abc <readstat_write_string@plt>
   239e8:	mov	r6, r0
   239ec:	cmp	r0, #0
   239f0:	bne	23114 <dta_begin_data+0x74>
   239f4:	b	23410 <dta_begin_data+0x370>
   239f8:	mov	r1, #35	; 0x23
   239fc:	adds	r8, r1, r3
   23a00:	adc	sl, r0, r2
   23a04:	cmp	r6, #0
   23a08:	str	r8, [sp, #120]	; 0x78
   23a0c:	str	sl, [sp, #124]	; 0x7c
   23a10:	ble	23bdc <dta_begin_data+0xb3c>
   23a14:	movw	r0, #65526	; 0xfff6
   23a18:	mov	r5, #0
   23a1c:	add	r6, sp, #40	; 0x28
   23a20:	mov	r7, #0
   23a24:	add	r1, r0, #4
   23a28:	str	r1, [sp, #24]
   23a2c:	add	r1, r0, #3
   23a30:	add	r0, r0, #2
   23a34:	str	r1, [sp, #20]
   23a38:	str	r0, [sp, #16]
   23a3c:	mov	r0, r9
   23a40:	mov	r1, r7
   23a44:	str	r5, [sp, #40]	; 0x28
   23a48:	bl	4ccc <readstat_get_variable@plt>
   23a4c:	ldrb	r1, [r4, #20]
   23a50:	cmp	r1, #117	; 0x75
   23a54:	beq	23a98 <dta_begin_data+0x9f8>
   23a58:	cmp	r1, #111	; 0x6f
   23a5c:	bne	23ad4 <dta_begin_data+0xa34>
   23a60:	ldr	r1, [r0]
   23a64:	cmp	r1, #5
   23a68:	bhi	23b14 <dta_begin_data+0xa74>
   23a6c:	add	r2, pc, #4
   23a70:	ldr	r1, [r2, r1, lsl #2]
   23a74:	add	pc, r2, r1
   23a78:	.word	0x00000054
   23a7c:	.word	0x00000018
   23a80:	.word	0x000000a4
   23a84:	.word	0x000000ac
   23a88:	.word	0x000000b4
   23a8c:	.word	0x000000bc
   23a90:	mov	r0, #251	; 0xfb
   23a94:	b	23b94 <dta_begin_data+0xaf4>
   23a98:	ldr	r1, [r0]
   23a9c:	cmp	r1, #6
   23aa0:	bhi	23b14 <dta_begin_data+0xa74>
   23aa4:	add	r2, pc, #4
   23aa8:	ldr	r1, [r2, r1, lsl #2]
   23aac:	add	pc, r2, r1
   23ab0:	.word	0x0000001c
   23ab4:	.word	0x000000b4
   23ab8:	.word	0x000000bc
   23abc:	.word	0x000000c4
   23ac0:	.word	0x000000cc
   23ac4:	.word	0x000000d8
   23ac8:	.word	0x000000e0
   23acc:	ldr	r0, [r0, #1596]	; 0x63c
   23ad0:	b	23b94 <dta_begin_data+0xaf4>
   23ad4:	ldr	r1, [r0]
   23ad8:	cmp	r1, #5
   23adc:	bhi	23b14 <dta_begin_data+0xa74>
   23ae0:	add	r2, pc, #4
   23ae4:	ldr	r1, [r2, r1, lsl #2]
   23ae8:	add	pc, r2, r1
   23aec:	.word	0x00000018
   23af0:	.word	0x00000050
   23af4:	.word	0x00000058
   23af8:	.word	0x00000060
   23afc:	.word	0x00000068
   23b00:	.word	0x00000070
   23b04:	movw	r1, #1596	; 0x63c
   23b08:	ldrh	r0, [r0, r1]
   23b0c:	add	r0, r0, #127	; 0x7f
   23b10:	b	23b94 <dta_begin_data+0xaf4>
   23b14:	mov	r0, #0
   23b18:	b	23b94 <dta_begin_data+0xaf4>
   23b1c:	mov	r0, #252	; 0xfc
   23b20:	b	23b94 <dta_begin_data+0xaf4>
   23b24:	mov	r0, #253	; 0xfd
   23b28:	b	23b94 <dta_begin_data+0xaf4>
   23b2c:	mov	r0, #254	; 0xfe
   23b30:	b	23b94 <dta_begin_data+0xaf4>
   23b34:	mov	r0, #255	; 0xff
   23b38:	b	23b94 <dta_begin_data+0xaf4>
   23b3c:	mov	r0, #98	; 0x62
   23b40:	b	23b94 <dta_begin_data+0xaf4>
   23b44:	mov	r0, #105	; 0x69
   23b48:	b	23b94 <dta_begin_data+0xaf4>
   23b4c:	mov	r0, #108	; 0x6c
   23b50:	b	23b94 <dta_begin_data+0xaf4>
   23b54:	mov	r0, #102	; 0x66
   23b58:	b	23b94 <dta_begin_data+0xaf4>
   23b5c:	mov	r0, #100	; 0x64
   23b60:	b	23b94 <dta_begin_data+0xaf4>
   23b64:	ldr	r0, [sp, #24]
   23b68:	b	23b94 <dta_begin_data+0xaf4>
   23b6c:	ldr	r0, [sp, #20]
   23b70:	b	23b94 <dta_begin_data+0xaf4>
   23b74:	ldr	r0, [sp, #16]
   23b78:	b	23b94 <dta_begin_data+0xaf4>
   23b7c:	movw	r0, #65526	; 0xfff6
   23b80:	add	r0, r0, #1
   23b84:	b	23b94 <dta_begin_data+0xaf4>
   23b88:	movw	r0, #65526	; 0xfff6
   23b8c:	b	23b94 <dta_begin_data+0xaf4>
   23b90:	mov	r0, #32768	; 0x8000
   23b94:	uxth	r0, r0
   23b98:	mov	r1, r4
   23b9c:	mov	r2, r6
   23ba0:	mov	r3, #0
   23ba4:	bl	4b40 <dta_type_info@plt>
   23ba8:	cmp	r0, #0
   23bac:	bne	23bc0 <dta_begin_data+0xb20>
   23bb0:	ldr	r0, [r4, #160]	; 0xa0
   23bb4:	ldr	r1, [sp, #40]	; 0x28
   23bb8:	add	r0, r0, r1
   23bbc:	str	r0, [r4, #160]	; 0xa0
   23bc0:	ldr	r0, [r4, #148]	; 0x94
   23bc4:	add	r7, r7, #1
   23bc8:	cmp	r7, r0
   23bcc:	blt	23a3c <dta_begin_data+0x99c>
   23bd0:	ldr	r0, [sp, #28]
   23bd4:	ldrb	r5, [r0]
   23bd8:	and	r7, r5, #4
   23bdc:	ldr	r0, [r4, #152]	; 0x98
   23be0:	ldr	r1, [r4, #160]	; 0xa0
   23be4:	cmp	r7, #0
   23be8:	mul	r0, r1, r0
   23bec:	addne	r0, r0, #13
   23bf0:	adds	ip, r8, r0
   23bf4:	adc	lr, sl, #0
   23bf8:	str	ip, [sp, #128]	; 0x80
   23bfc:	str	lr, [sp, #132]	; 0x84
   23c00:	ldr	r2, [r9, #64]	; 0x40
   23c04:	cmp	r2, #1
   23c08:	blt	23c40 <dta_begin_data+0xba0>
   23c0c:	ldr	r0, [r4, #116]	; 0x74
   23c10:	mov	r3, #16
   23c14:	mov	r6, #0
   23c18:	cmp	r0, #4
   23c1c:	ldr	r0, [r9, #60]	; 0x3c
   23c20:	movwhi	r3, #20
   23c24:	ldr	r1, [r0], #4
   23c28:	add	r6, r6, r3
   23c2c:	subs	r2, r2, #1
   23c30:	ldr	r1, [r1, #16]
   23c34:	add	r6, r6, r1
   23c38:	bne	23c24 <dta_begin_data+0xb84>
   23c3c:	b	23c44 <dta_begin_data+0xba4>
   23c40:	mov	r6, #0
   23c44:	cmp	r7, #0
   23c48:	mov	r8, r7
   23c4c:	addne	r6, r6, #7
   23c50:	add	r0, r6, r7, lsl #1
   23c54:	adds	r1, ip, r0
   23c58:	adc	r2, lr, #0
   23c5c:	str	r1, [sp, #136]	; 0x88
   23c60:	cmp	r7, #0
   23c64:	str	r2, [sp, #140]	; 0x8c
   23c68:	movwne	r8, #14
   23c6c:	ldr	r0, [r9, #40]	; 0x28
   23c70:	cmp	r0, #1
   23c74:	blt	23d18 <dta_begin_data+0xc78>
   23c78:	ldr	r4, [sp, #32]
   23c7c:	mov	r6, #0
   23c80:	str	r2, [sp, #20]
   23c84:	str	r1, [sp, #24]
   23c88:	mov	r0, r9
   23c8c:	mov	r1, r6
   23c90:	bl	4d68 <readstat_get_label_set@plt>
   23c94:	ldr	sl, [r0, #264]	; 0x108
   23c98:	mov	r9, #0
   23c9c:	cmp	sl, #1
   23ca0:	blt	23cd4 <dta_begin_data+0xc34>
   23ca4:	mov	r7, r0
   23ca8:	mov	r9, #0
   23cac:	mov	r5, #0
   23cb0:	mov	r0, r7
   23cb4:	mov	r1, r5
   23cb8:	bl	4e04 <readstat_get_value_label@plt>
   23cbc:	ldr	r0, [r0, #28]
   23cc0:	add	r5, r5, #1
   23cc4:	cmp	sl, r5
   23cc8:	add	r0, r9, r0
   23ccc:	add	r9, r0, #1
   23cd0:	bne	23cb0 <dta_begin_data+0xc10>
   23cd4:	ldrd	r2, [r4, #104]	; 0x68
   23cd8:	add	r0, r8, sl, lsl #3
   23cdc:	ldrb	r5, [r4, #192]	; 0xc0
   23ce0:	add	r6, r6, #1
   23ce4:	add	r0, r0, r9
   23ce8:	ldr	r9, [sp, #36]	; 0x24
   23cec:	add	r0, r0, r2
   23cf0:	ands	r7, r5, #4
   23cf4:	add	r0, r0, r3
   23cf8:	add	r8, r0, #17
   23cfc:	addeq	r8, r0, #12
   23d00:	ldr	r0, [r9, #40]	; 0x28
   23d04:	addne	r8, r8, #6
   23d08:	cmp	r6, r0
   23d0c:	blt	23c88 <dta_begin_data+0xbe8>
   23d10:	ldr	r1, [sp, #24]
   23d14:	ldr	r2, [sp, #20]
   23d18:	cmp	r7, #0
   23d1c:	addne	r8, r8, #15
   23d20:	adds	r1, r1, r8
   23d24:	adc	r0, r2, #0
   23d28:	tst	r5, #4
   23d2c:	str	r1, [sp, #144]	; 0x90
   23d30:	str	r0, [sp, #148]	; 0x94
   23d34:	bne	23d44 <dta_begin_data+0xca4>
   23d38:	str	r1, [sp, #152]	; 0x98
   23d3c:	str	r0, [sp, #156]	; 0x9c
   23d40:	b	23d70 <dta_begin_data+0xcd0>
   23d44:	adds	r1, r1, #12
   23d48:	adc	r0, r0, #0
   23d4c:	str	r1, [sp, #152]	; 0x98
   23d50:	str	r0, [sp, #156]	; 0x9c
   23d54:	mov	r0, r9
   23d58:	ldr	r1, [pc, #968]	; 24128 <dta_begin_data+0x1088>
   23d5c:	add	r1, pc, r1
   23d60:	bl	4abc <readstat_write_string@plt>
   23d64:	mov	r6, r0
   23d68:	cmp	r0, #0
   23d6c:	bne	23114 <dta_begin_data+0x74>
   23d70:	add	r1, sp, #48	; 0x30
   23d74:	mov	r0, r9
   23d78:	mov	r2, #112	; 0x70
   23d7c:	bl	4d98 <readstat_write_bytes@plt>
   23d80:	mov	r6, r0
   23d84:	cmp	r0, #0
   23d88:	bne	23114 <dta_begin_data+0x74>
   23d8c:	ldr	r0, [sp, #28]
   23d90:	ldrb	r0, [r0]
   23d94:	tst	r0, #4
   23d98:	beq	231d0 <dta_begin_data+0x130>
   23d9c:	ldr	r1, [pc, #904]	; 2412c <dta_begin_data+0x108c>
   23da0:	mov	r0, r9
   23da4:	add	r1, pc, r1
   23da8:	bl	4abc <readstat_write_string@plt>
   23dac:	mov	r6, r0
   23db0:	cmp	r0, #0
   23db4:	bne	23114 <dta_begin_data+0x74>
   23db8:	ldr	r0, [sp, #28]
   23dbc:	ldrb	r0, [r0]
   23dc0:	tst	r0, #4
   23dc4:	beq	231d0 <dta_begin_data+0x130>
   23dc8:	ldr	r1, [pc, #864]	; 24130 <dta_begin_data+0x1090>
   23dcc:	mov	r0, r9
   23dd0:	add	r1, pc, r1
   23dd4:	bl	4abc <readstat_write_string@plt>
   23dd8:	mov	r6, r0
   23ddc:	cmp	r0, #0
   23de0:	bne	23114 <dta_begin_data+0x74>
   23de4:	b	231d0 <dta_begin_data+0x130>
   23de8:	ldr	r1, [pc, #844]	; 2413c <dta_begin_data+0x109c>
   23dec:	mov	r0, r9
   23df0:	add	r1, pc, r1
   23df4:	bl	4abc <readstat_write_string@plt>
   23df8:	mov	r6, r0
   23dfc:	cmp	r0, #0
   23e00:	bne	23114 <dta_begin_data+0x74>
   23e04:	ldr	r0, [sp, #28]
   23e08:	ldrb	r0, [r0]
   23e0c:	tst	r0, #4
   23e10:	beq	23480 <dta_begin_data+0x3e0>
   23e14:	ldr	r1, [pc, #804]	; 24140 <dta_begin_data+0x10a0>
   23e18:	mov	r0, r9
   23e1c:	add	r1, pc, r1
   23e20:	bl	4abc <readstat_write_string@plt>
   23e24:	mov	r6, r0
   23e28:	cmp	r0, #0
   23e2c:	bne	23114 <dta_begin_data+0x74>
   23e30:	b	23480 <dta_begin_data+0x3e0>
   23e34:	ldr	r1, [pc, #776]	; 24144 <dta_begin_data+0x10a4>
   23e38:	mov	r0, r9
   23e3c:	add	r1, pc, r1
   23e40:	bl	4abc <readstat_write_string@plt>
   23e44:	mov	r6, r0
   23e48:	cmp	r0, #0
   23e4c:	bne	23114 <dta_begin_data+0x74>
   23e50:	ldr	r0, [sp, #28]
   23e54:	ldrb	r0, [r0]
   23e58:	tst	r0, #4
   23e5c:	beq	234bc <dta_begin_data+0x41c>
   23e60:	ldr	r1, [pc, #736]	; 24148 <dta_begin_data+0x10a8>
   23e64:	mov	r0, r9
   23e68:	add	r1, pc, r1
   23e6c:	bl	4abc <readstat_write_string@plt>
   23e70:	mov	r6, r0
   23e74:	cmp	r0, #0
   23e78:	bne	23114 <dta_begin_data+0x74>
   23e7c:	b	234bc <dta_begin_data+0x41c>
   23e80:	ldr	r0, [r9, #28]
   23e84:	strh	r0, [sp, #40]	; 0x28
   23e88:	ldr	r0, [sp, #28]
   23e8c:	ldrb	r0, [r0]
   23e90:	tst	r0, #4
   23e94:	beq	23eb4 <dta_begin_data+0xe14>
   23e98:	ldr	r1, [pc, #624]	; 24110 <dta_begin_data+0x1070>
   23e9c:	mov	r0, r9
   23ea0:	add	r1, pc, r1
   23ea4:	bl	4abc <readstat_write_string@plt>
   23ea8:	mov	r6, r0
   23eac:	cmp	r0, #0
   23eb0:	bne	23114 <dta_begin_data+0x74>
   23eb4:	add	r1, sp, #40	; 0x28
   23eb8:	mov	r0, r9
   23ebc:	mov	r2, #2
   23ec0:	bl	4d98 <readstat_write_bytes@plt>
   23ec4:	mov	r6, r0
   23ec8:	cmp	r0, #0
   23ecc:	bne	23114 <dta_begin_data+0x74>
   23ed0:	ldr	r0, [sp, #28]
   23ed4:	ldrb	r0, [r0]
   23ed8:	tst	r0, #4
   23edc:	beq	23efc <dta_begin_data+0xe5c>
   23ee0:	ldr	r1, [pc, #556]	; 24114 <dta_begin_data+0x1074>
   23ee4:	mov	r0, r9
   23ee8:	add	r1, pc, r1
   23eec:	bl	4abc <readstat_write_string@plt>
   23ef0:	mov	r6, r0
   23ef4:	cmp	r0, #0
   23ef8:	bne	23114 <dta_begin_data+0x74>
   23efc:	ldr	r0, [r9, #8]
   23f00:	cmp	r0, #118	; 0x76
   23f04:	blt	23fa0 <dta_begin_data+0xf00>
   23f08:	ldr	r0, [r9, #80]	; 0x50
   23f0c:	str	r0, [sp, #40]	; 0x28
   23f10:	asr	r0, r0, #31
   23f14:	str	r0, [sp, #44]	; 0x2c
   23f18:	ldr	r0, [sp, #28]
   23f1c:	ldrb	r0, [r0]
   23f20:	tst	r0, #4
   23f24:	beq	23f44 <dta_begin_data+0xea4>
   23f28:	ldr	r1, [pc, #488]	; 24118 <dta_begin_data+0x1078>
   23f2c:	mov	r0, r9
   23f30:	add	r1, pc, r1
   23f34:	bl	4abc <readstat_write_string@plt>
   23f38:	mov	r6, r0
   23f3c:	cmp	r0, #0
   23f40:	bne	23114 <dta_begin_data+0x74>
   23f44:	add	r1, sp, #40	; 0x28
   23f48:	mov	r0, r9
   23f4c:	mov	r2, #8
   23f50:	b	23fe0 <dta_begin_data+0xf40>
   23f54:	ldr	r1, [pc, #516]	; 24160 <dta_begin_data+0x10c0>
   23f58:	mov	r0, r9
   23f5c:	add	r1, pc, r1
   23f60:	bl	4abc <readstat_write_string@plt>
   23f64:	mov	r6, r0
   23f68:	cmp	r0, #0
   23f6c:	bne	23114 <dta_begin_data+0x74>
   23f70:	ldr	r0, [sp, #28]
   23f74:	ldrb	r0, [r0]
   23f78:	tst	r0, #4
   23f7c:	beq	235c8 <dta_begin_data+0x528>
   23f80:	ldr	r1, [pc, #476]	; 24164 <dta_begin_data+0x10c4>
   23f84:	mov	r0, r9
   23f88:	add	r1, pc, r1
   23f8c:	bl	4abc <readstat_write_string@plt>
   23f90:	mov	r6, r0
   23f94:	cmp	r0, #0
   23f98:	bne	23114 <dta_begin_data+0x74>
   23f9c:	b	235c8 <dta_begin_data+0x528>
   23fa0:	ldr	r0, [r9, #80]	; 0x50
   23fa4:	str	r0, [sp, #40]	; 0x28
   23fa8:	ldr	r0, [sp, #28]
   23fac:	ldrb	r0, [r0]
   23fb0:	tst	r0, #4
   23fb4:	beq	23fd4 <dta_begin_data+0xf34>
   23fb8:	ldr	r1, [pc, #348]	; 2411c <dta_begin_data+0x107c>
   23fbc:	mov	r0, r9
   23fc0:	add	r1, pc, r1
   23fc4:	bl	4abc <readstat_write_string@plt>
   23fc8:	mov	r6, r0
   23fcc:	cmp	r0, #0
   23fd0:	bne	23114 <dta_begin_data+0x74>
   23fd4:	add	r1, sp, #40	; 0x28
   23fd8:	mov	r0, r9
   23fdc:	mov	r2, #4
   23fe0:	bl	4d98 <readstat_write_bytes@plt>
   23fe4:	mov	r6, r0
   23fe8:	cmp	r0, #0
   23fec:	bne	23114 <dta_begin_data+0x74>
   23ff0:	ldr	r0, [sp, #28]
   23ff4:	ldrb	r0, [r0]
   23ff8:	tst	r0, #4
   23ffc:	bne	24058 <dta_begin_data+0xfb8>
   24000:	ldr	r5, [sp, #36]	; 0x24
   24004:	ldr	r4, [sp, #32]
   24008:	b	2407c <dta_begin_data+0xfdc>
   2400c:	ldr	r1, [pc, #340]	; 24168 <dta_begin_data+0x10c8>
   24010:	mov	r0, r9
   24014:	add	r1, pc, r1
   24018:	bl	4abc <readstat_write_string@plt>
   2401c:	mov	r6, r0
   24020:	cmp	r0, #0
   24024:	bne	23114 <dta_begin_data+0x74>
   24028:	ldr	r0, [sp, #28]
   2402c:	ldrb	r0, [r0]
   24030:	tst	r0, #4
   24034:	beq	23650 <dta_begin_data+0x5b0>
   24038:	ldr	r1, [pc, #300]	; 2416c <dta_begin_data+0x10cc>
   2403c:	mov	r0, r9
   24040:	add	r1, pc, r1
   24044:	bl	4abc <readstat_write_string@plt>
   24048:	mov	r6, r0
   2404c:	cmp	r0, #0
   24050:	bne	23114 <dta_begin_data+0x74>
   24054:	b	23650 <dta_begin_data+0x5b0>
   24058:	ldr	r1, [pc, #192]	; 24120 <dta_begin_data+0x1080>
   2405c:	ldr	r5, [sp, #36]	; 0x24
   24060:	add	r1, pc, r1
   24064:	mov	r0, r5
   24068:	bl	4abc <readstat_write_string@plt>
   2406c:	ldr	r4, [sp, #32]
   24070:	mov	r6, r0
   24074:	cmp	r0, #0
   24078:	bne	23114 <dta_begin_data+0x74>
   2407c:	mov	r0, r5
   24080:	mov	r1, r4
   24084:	bl	24e78 <dta_emit_header_data_label>
   24088:	mov	r6, r0
   2408c:	cmp	r0, #0
   24090:	bne	23114 <dta_begin_data+0x74>
   24094:	mov	r0, r5
   24098:	mov	r1, r4
   2409c:	bl	24fbc <dta_emit_header_time_stamp>
   240a0:	mov	r6, r0
   240a4:	cmp	r0, #0
   240a8:	bne	23114 <dta_begin_data+0x74>
   240ac:	ldr	r0, [sp, #28]
   240b0:	ldrb	r0, [r0]
   240b4:	tst	r0, #4
   240b8:	bne	240c8 <dta_begin_data+0x1028>
   240bc:	ldr	r9, [sp, #36]	; 0x24
   240c0:	ldr	r4, [sp, #32]
   240c4:	b	231c0 <dta_begin_data+0x120>
   240c8:	ldr	r1, [pc, #84]	; 24124 <dta_begin_data+0x1084>
   240cc:	ldr	r9, [sp, #36]	; 0x24
   240d0:	add	r1, pc, r1
   240d4:	mov	r0, r9
   240d8:	bl	4abc <readstat_write_string@plt>
   240dc:	ldr	r4, [sp, #32]
   240e0:	mov	r6, r0
   240e4:	cmp	r0, #0
   240e8:	bne	23114 <dta_begin_data+0x74>
   240ec:	b	231c0 <dta_begin_data+0x120>
   240f0:	.word	0x00007c2b
   240f4:	.word	0x00007c0b
   240f8:	.word	0x00007eb5
   240fc:	.word	0x00007bd7
   24100:	.word	0x00007bd7
   24104:	.word	0x00007ba2
   24108:	.word	0x00007b66
   2410c:	.word	0x00007b3b
   24110:	.word	0x000074ff
   24114:	.word	0x000074bb
   24118:	.word	0x00007478
   2411c:	.word	0x000073e8
   24120:	.word	0x0000734c
   24124:	.word	0x00007285
   24128:	.word	0x0000767f
   2412c:	.word	0x0000763d
   24130:	.word	0x00007618
   24134:	.word	0x00007a45
   24138:	.word	0x00007a2b
   2413c:	.word	0x00007626
   24140:	.word	0x00007606
   24144:	.word	0x000075f1
   24148:	.word	0x000075d1
   2414c:	.word	0x00006612
   24150:	.word	0x000081cc
   24154:	.word	0x0000816b
   24158:	.word	0x00008149
   2415c:	.word	0x00008145
   24160:	.word	0x000074e7
   24164:	.word	0x000074c6
   24168:	.word	0x0000744e
   2416c:	.word	0x00007437
   24170:	.word	0x00007dc1
   24174:	.word	0x00007e36

00024178 <dta_end_data>:
   24178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2417c:	add	fp, sp, #28
   24180:	sub	sp, sp, #52	; 0x34
   24184:	mov	r4, r0
   24188:	ldr	r0, [r0, #308]	; 0x134
   2418c:	cmp	r0, #0
   24190:	beq	2434c <dta_end_data+0x1d4>
   24194:	ldr	r0, [r4, #300]	; 0x12c
   24198:	str	r0, [sp, #16]
   2419c:	ldrb	r0, [r0, #192]	; 0xc0
   241a0:	tst	r0, #4
   241a4:	bne	24354 <dta_end_data+0x1dc>
   241a8:	ldr	r5, [sp, #16]
   241ac:	ldr	r0, [r5, #100]	; 0x64
   241b0:	cmp	r0, #2
   241b4:	bne	2449c <dta_end_data+0x324>
   241b8:	ldr	r0, [r4, #40]	; 0x28
   241bc:	cmp	r0, #1
   241c0:	blt	247c0 <dta_end_data+0x648>
   241c4:	mov	r9, #8
   241c8:	mov	r8, #0
   241cc:	mov	r5, #0
   241d0:	str	r4, [sp, #20]
   241d4:	mov	r0, r4
   241d8:	mov	r1, r8
   241dc:	bl	4d68 <readstat_get_label_set@plt>
   241e0:	mov	r7, r0
   241e4:	ldr	r0, [r0, #264]	; 0x108
   241e8:	mov	r4, #0
   241ec:	cmp	r0, #1
   241f0:	blt	24238 <dta_end_data+0xc0>
   241f4:	mov	r4, #0
   241f8:	mov	r6, #0
   241fc:	mov	r0, r7
   24200:	mov	r1, r6
   24204:	bl	4e04 <readstat_get_value_label@plt>
   24208:	ldrb	r1, [r0, #12]
   2420c:	cmp	r1, #0
   24210:	bne	247d0 <dta_end_data+0x658>
   24214:	ldr	r0, [r0, #8]
   24218:	cmp	r0, #1024	; 0x400
   2421c:	bhi	247e4 <dta_end_data+0x66c>
   24220:	cmp	r0, r4
   24224:	add	r6, r6, #1
   24228:	movgt	r4, r0
   2422c:	ldr	r0, [r7, #264]	; 0x108
   24230:	cmp	r6, r0
   24234:	blt	241fc <dta_end_data+0x84>
   24238:	add	r0, r9, r4, lsl #3
   2423c:	ldr	r4, [sp, #20]
   24240:	sub	r1, fp, #32
   24244:	mov	r2, #2
   24248:	strh	r0, [fp, #-32]	; 0xffffffe0
   2424c:	mov	r0, r4
   24250:	bl	4d98 <readstat_write_bytes@plt>
   24254:	cmp	r0, #0
   24258:	bne	24858 <dta_end_data+0x6e0>
   2425c:	ldr	r6, [sp, #16]
   24260:	mov	r0, #0
   24264:	add	sl, sp, #24
   24268:	add	r1, r7, #4
   2426c:	str	r0, [sp, #28]
   24270:	str	r0, [sp, #24]
   24274:	str	r0, [sp, #34]	; 0x22
   24278:	str	r0, [sp, #30]
   2427c:	mov	r0, sl
   24280:	ldr	r2, [r6, #104]	; 0x68
   24284:	bl	4c18 <strncpy@plt>
   24288:	ldrd	r0, [r6, #104]	; 0x68
   2428c:	add	r2, r1, r0
   24290:	mov	r0, r4
   24294:	mov	r1, sl
   24298:	bl	4d98 <readstat_write_bytes@plt>
   2429c:	cmp	r0, #0
   242a0:	bne	24858 <dta_end_data+0x6e0>
   242a4:	ldrsh	r1, [fp, #-32]	; 0xffffffe0
   242a8:	mov	r0, r5
   242ac:	bl	4984 <realloc@plt>
   242b0:	ldrsh	r6, [fp, #-32]	; 0xffffffe0
   242b4:	mov	r1, #0
   242b8:	mov	r5, r0
   242bc:	mov	r2, r6
   242c0:	bl	4c00 <memset@plt>
   242c4:	ldr	r0, [r7, #264]	; 0x108
   242c8:	cmp	r0, #1
   242cc:	blt	24314 <dta_end_data+0x19c>
   242d0:	mov	r6, #0
   242d4:	mov	r0, r7
   242d8:	mov	r1, r6
   242dc:	bl	4e04 <readstat_get_value_label@plt>
   242e0:	ldrd	r2, [r0, #24]
   242e4:	ldr	r1, [r0, #8]
   242e8:	cmp	r3, #8
   242ec:	add	r0, r5, r1, lsl #3
   242f0:	mov	r1, r2
   242f4:	movcs	r3, r9
   242f8:	mov	r2, r3
   242fc:	bl	48b8 <memcpy@plt>
   24300:	ldr	r0, [r7, #264]	; 0x108
   24304:	add	r6, r6, #1
   24308:	cmp	r6, r0
   2430c:	blt	242d4 <dta_end_data+0x15c>
   24310:	ldrsh	r6, [fp, #-32]	; 0xffffffe0
   24314:	mov	r0, r4
   24318:	mov	r1, r5
   2431c:	mov	r2, r6
   24320:	bl	4d98 <readstat_write_bytes@plt>
   24324:	cmp	r0, #0
   24328:	bne	24858 <dta_end_data+0x6e0>
   2432c:	ldr	r0, [r4, #40]	; 0x28
   24330:	add	r8, r8, #1
   24334:	cmp	r8, r0
   24338:	blt	241d4 <dta_end_data+0x5c>
   2433c:	mov	sl, #0
   24340:	cmp	r5, #0
   24344:	bne	247f4 <dta_end_data+0x67c>
   24348:	b	248b0 <dta_end_data+0x738>
   2434c:	mov	sl, #14
   24350:	b	248e0 <dta_end_data+0x768>
   24354:	ldr	r1, [pc, #1424]	; 248ec <dta_end_data+0x774>
   24358:	mov	r0, r4
   2435c:	add	r1, pc, r1
   24360:	bl	4abc <readstat_write_string@plt>
   24364:	mov	sl, r0
   24368:	cmp	r0, #0
   2436c:	bne	248e0 <dta_end_data+0x768>
   24370:	ldr	r0, [sp, #16]
   24374:	ldrb	r0, [r0, #192]	; 0xc0
   24378:	tst	r0, #4
   2437c:	beq	241a8 <dta_end_data+0x30>
   24380:	ldr	r1, [pc, #1384]	; 248f0 <dta_end_data+0x778>
   24384:	mov	r0, r4
   24388:	add	r1, pc, r1
   2438c:	bl	4abc <readstat_write_string@plt>
   24390:	mov	sl, r0
   24394:	cmp	r0, #0
   24398:	bne	248e0 <dta_end_data+0x768>
   2439c:	ldr	r0, [r4, #64]	; 0x40
   243a0:	cmp	r0, #1
   243a4:	blt	2447c <dta_end_data+0x304>
   243a8:	ldr	r8, [pc, #1348]	; 248f4 <dta_end_data+0x77c>
   243ac:	add	r5, sp, #24
   243b0:	mov	r6, #0
   243b4:	add	r7, r5, #4
   243b8:	add	r8, pc, r8
   243bc:	ldr	r0, [r4, #60]	; 0x3c
   243c0:	mov	r1, r8
   243c4:	ldr	r9, [r0, r6, lsl #2]
   243c8:	mov	r0, r4
   243cc:	bl	4abc <readstat_write_string@plt>
   243d0:	cmp	r0, #0
   243d4:	bne	248dc <dta_end_data+0x764>
   243d8:	ldr	r0, [sp, #16]
   243dc:	ldr	r0, [r0, #116]	; 0x74
   243e0:	cmp	r0, #5
   243e4:	bcc	24418 <dta_end_data+0x2a0>
   243e8:	ldr	r0, [r9]
   243ec:	mov	r2, #17
   243f0:	str	r0, [sp, #24]
   243f4:	ldr	r0, [r9, #8]
   243f8:	ldr	r1, [r9, #12]
   243fc:	stm	r7, {r0, r1}
   24400:	mov	r0, #130	; 0x82
   24404:	mov	r1, r5
   24408:	strb	r0, [sp, #36]	; 0x24
   2440c:	ldr	r0, [r9, #16]
   24410:	str	r0, [sp, #37]	; 0x25
   24414:	b	24440 <dta_end_data+0x2c8>
   24418:	ldr	r0, [r9]
   2441c:	mov	r1, #130	; 0x82
   24420:	mov	r2, #13
   24424:	str	r0, [sp, #24]
   24428:	ldr	r0, [r9, #8]
   2442c:	strb	r1, [sp, #32]
   24430:	mov	r1, r5
   24434:	str	r0, [sp, #28]
   24438:	ldr	r0, [r9, #16]
   2443c:	str	r0, [sp, #33]	; 0x21
   24440:	mov	r0, r4
   24444:	bl	4d98 <readstat_write_bytes@plt>
   24448:	mov	sl, r0
   2444c:	cmp	r0, #0
   24450:	bne	248e0 <dta_end_data+0x768>
   24454:	ldr	r2, [r9, #16]
   24458:	add	r1, r9, #20
   2445c:	mov	r0, r4
   24460:	bl	4d98 <readstat_write_bytes@plt>
   24464:	cmp	r0, #0
   24468:	bne	248dc <dta_end_data+0x764>
   2446c:	ldr	r0, [r4, #64]	; 0x40
   24470:	add	r6, r6, #1
   24474:	cmp	r6, r0
   24478:	blt	243bc <dta_end_data+0x244>
   2447c:	ldr	r1, [pc, #1140]	; 248f8 <dta_end_data+0x780>
   24480:	mov	r0, r4
   24484:	add	r1, pc, r1
   24488:	bl	4abc <readstat_write_string@plt>
   2448c:	mov	sl, r0
   24490:	cmp	r0, #0
   24494:	bne	248e0 <dta_end_data+0x768>
   24498:	b	241a8 <dta_end_data+0x30>
   2449c:	ldrd	r0, [r5, #104]	; 0x68
   244a0:	add	r1, r1, r0
   244a4:	mov	r0, #1
   244a8:	bl	472c <calloc@plt>
   244ac:	mov	r6, r0
   244b0:	ldrb	r0, [r5, #192]	; 0xc0
   244b4:	tst	r0, #4
   244b8:	beq	244d8 <dta_end_data+0x360>
   244bc:	ldr	r1, [pc, #1080]	; 248fc <dta_end_data+0x784>
   244c0:	mov	r0, r4
   244c4:	add	r1, pc, r1
   244c8:	bl	4abc <readstat_write_string@plt>
   244cc:	mov	sl, r0
   244d0:	cmp	r0, #0
   244d4:	bne	248a0 <dta_end_data+0x728>
   244d8:	ldr	r0, [r4, #40]	; 0x28
   244dc:	cmp	r0, #1
   244e0:	blt	247fc <dta_end_data+0x684>
   244e4:	mov	r1, #0
   244e8:	mov	r9, #0
   244ec:	mov	r3, #0
   244f0:	mov	r2, #0
   244f4:	str	r4, [sp, #20]
   244f8:	str	r6, [sp]
   244fc:	mov	r0, r4
   24500:	str	r2, [sp, #8]
   24504:	str	r3, [sp, #12]
   24508:	str	r1, [sp, #4]
   2450c:	bl	4d68 <readstat_get_label_set@plt>
   24510:	mov	r8, r0
   24514:	ldr	r0, [r0, #264]	; 0x108
   24518:	mov	r1, #0
   2451c:	str	r1, [fp, #-32]	; 0xffffffe0
   24520:	mov	r1, #0
   24524:	cmp	r0, #1
   24528:	str	r0, [sp, #24]
   2452c:	blt	24564 <dta_end_data+0x3ec>
   24530:	mov	r7, #0
   24534:	mov	r0, r8
   24538:	mov	r1, r7
   2453c:	bl	4e04 <readstat_get_value_label@plt>
   24540:	ldr	r0, [r0, #28]
   24544:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24548:	add	r7, r7, #1
   2454c:	add	r0, r0, r1
   24550:	add	r1, r0, #1
   24554:	ldr	r0, [sp, #24]
   24558:	str	r1, [fp, #-32]	; 0xffffffe0
   2455c:	cmp	r7, r0
   24560:	blt	24534 <dta_end_data+0x3bc>
   24564:	ldrb	r2, [r5, #192]	; 0xc0
   24568:	tst	r2, #4
   2456c:	beq	24590 <dta_end_data+0x418>
   24570:	ldr	r1, [pc, #904]	; 24900 <dta_end_data+0x788>
   24574:	mov	r0, r4
   24578:	add	r1, pc, r1
   2457c:	bl	4abc <readstat_write_string@plt>
   24580:	cmp	r0, #0
   24584:	bne	2486c <dta_end_data+0x6f4>
   24588:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2458c:	ldr	r0, [sp, #24]
   24590:	add	r0, r1, r0, lsl #3
   24594:	sub	r1, fp, #36	; 0x24
   24598:	mov	r2, #4
   2459c:	add	r0, r0, #8
   245a0:	str	r0, [fp, #-36]	; 0xffffffdc
   245a4:	mov	r0, r4
   245a8:	bl	4d98 <readstat_write_bytes@plt>
   245ac:	cmp	r0, #0
   245b0:	bne	2486c <dta_end_data+0x6f4>
   245b4:	ldr	r2, [r5, #104]	; 0x68
   245b8:	add	r1, r8, #4
   245bc:	mov	r0, r6
   245c0:	bl	4c18 <strncpy@plt>
   245c4:	ldrd	r0, [r5, #104]	; 0x68
   245c8:	add	r2, r1, r0
   245cc:	mov	r0, r4
   245d0:	mov	r1, r6
   245d4:	bl	4d98 <readstat_write_bytes@plt>
   245d8:	cmp	r0, #0
   245dc:	bne	2486c <dta_end_data+0x6f4>
   245e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   245e4:	cmp	r0, #0
   245e8:	beq	24750 <dta_end_data+0x5d8>
   245ec:	ldr	r0, [sp, #24]
   245f0:	lsl	r1, r0, #2
   245f4:	mov	r0, r9
   245f8:	bl	4984 <realloc@plt>
   245fc:	mov	r9, r0
   24600:	ldr	r0, [sp, #24]
   24604:	lsl	r1, r0, #2
   24608:	ldr	r0, [sp, #12]
   2460c:	bl	4984 <realloc@plt>
   24610:	mov	sl, r0
   24614:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24618:	ldr	r0, [sp, #8]
   2461c:	bl	4984 <realloc@plt>
   24620:	ldr	r1, [pc, #736]	; 24908 <dta_end_data+0x790>
   24624:	mov	r6, r0
   24628:	mov	r0, r8
   2462c:	add	r1, pc, r1
   24630:	bl	4774 <readstat_sort_label_set@plt>
   24634:	ldr	r0, [sp, #24]
   24638:	str	sl, [sp, #12]
   2463c:	str	r6, [sp, #8]
   24640:	cmp	r0, #1
   24644:	blt	246cc <dta_end_data+0x554>
   24648:	mov	r5, #0
   2464c:	mov	r7, #0
   24650:	mov	r0, r8
   24654:	mov	r1, r7
   24658:	bl	4e04 <readstat_get_value_label@plt>
   2465c:	ldr	r2, [r0, #24]
   24660:	ldr	r4, [r0, #28]
   24664:	str	r5, [r9, r7, lsl #2]
   24668:	ldrb	r1, [r0, #12]
   2466c:	cmp	r1, #0
   24670:	beq	24694 <dta_end_data+0x51c>
   24674:	ldr	r0, [sp, #20]
   24678:	ldr	r0, [r0, #8]
   2467c:	cmp	r0, #113	; 0x71
   24680:	blt	2482c <dta_end_data+0x6b4>
   24684:	movw	r0, #65413	; 0xff85
   24688:	movt	r0, #32767	; 0x7fff
   2468c:	add	r0, r1, r0
   24690:	b	24698 <dta_end_data+0x520>
   24694:	ldr	r0, [r0, #8]
   24698:	str	r0, [sl, r7, lsl #2]
   2469c:	mov	r1, r2
   246a0:	add	r0, r6, r5
   246a4:	mov	r2, r4
   246a8:	bl	48b8 <memcpy@plt>
   246ac:	add	r0, r4, r5
   246b0:	mov	r1, #0
   246b4:	add	r7, r7, #1
   246b8:	strb	r1, [r6, r0]
   246bc:	add	r5, r0, #1
   246c0:	ldr	r0, [sp, #24]
   246c4:	cmp	r7, r0
   246c8:	blt	24650 <dta_end_data+0x4d8>
   246cc:	ldr	r4, [sp, #20]
   246d0:	add	r1, sp, #24
   246d4:	mov	r2, #4
   246d8:	mov	r0, r4
   246dc:	bl	4d98 <readstat_write_bytes@plt>
   246e0:	cmp	r0, #0
   246e4:	bne	24868 <dta_end_data+0x6f0>
   246e8:	mov	r0, r4
   246ec:	sub	r1, fp, #32
   246f0:	mov	r2, #4
   246f4:	bl	4d98 <readstat_write_bytes@plt>
   246f8:	cmp	r0, #0
   246fc:	bne	24868 <dta_end_data+0x6f0>
   24700:	ldr	r0, [sp, #24]
   24704:	mov	r1, r9
   24708:	lsl	r2, r0, #2
   2470c:	mov	r0, r4
   24710:	bl	4d98 <readstat_write_bytes@plt>
   24714:	cmp	r0, #0
   24718:	bne	24868 <dta_end_data+0x6f0>
   2471c:	ldr	r0, [sp, #24]
   24720:	ldr	r1, [sp, #12]
   24724:	lsl	r2, r0, #2
   24728:	mov	r0, r4
   2472c:	bl	4d98 <readstat_write_bytes@plt>
   24730:	ldr	r5, [sp, #16]
   24734:	ldr	r6, [sp]
   24738:	cmp	r0, #0
   2473c:	bne	2486c <dta_end_data+0x6f4>
   24740:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24744:	ldr	r1, [sp, #8]
   24748:	mov	r0, r4
   2474c:	b	24778 <dta_end_data+0x600>
   24750:	sub	r7, fp, #32
   24754:	mov	r0, r4
   24758:	mov	r2, #4
   2475c:	mov	r1, r7
   24760:	bl	4d98 <readstat_write_bytes@plt>
   24764:	cmp	r0, #0
   24768:	bne	2486c <dta_end_data+0x6f4>
   2476c:	mov	r0, r4
   24770:	mov	r1, r7
   24774:	mov	r2, #4
   24778:	bl	4d98 <readstat_write_bytes@plt>
   2477c:	cmp	r0, #0
   24780:	bne	2486c <dta_end_data+0x6f4>
   24784:	ldrb	r0, [r5, #192]	; 0xc0
   24788:	tst	r0, #4
   2478c:	beq	247a8 <dta_end_data+0x630>
   24790:	ldr	r1, [pc, #364]	; 24904 <dta_end_data+0x78c>
   24794:	mov	r0, r4
   24798:	add	r1, pc, r1
   2479c:	bl	4abc <readstat_write_string@plt>
   247a0:	cmp	r0, #0
   247a4:	bne	2486c <dta_end_data+0x6f4>
   247a8:	ldmib	sp, {r1, r2, r3}
   247ac:	ldr	r0, [r4, #40]	; 0x28
   247b0:	add	r1, r1, #1
   247b4:	cmp	r1, r0
   247b8:	blt	244fc <dta_end_data+0x384>
   247bc:	b	24808 <dta_end_data+0x690>
   247c0:	mov	sl, #0
   247c4:	cmp	sl, #0
   247c8:	bne	248e0 <dta_end_data+0x768>
   247cc:	b	248b8 <dta_end_data+0x740>
   247d0:	ldr	r4, [sp, #20]
   247d4:	mov	sl, #23
   247d8:	cmp	r5, #0
   247dc:	bne	247f4 <dta_end_data+0x67c>
   247e0:	b	248b0 <dta_end_data+0x738>
   247e4:	ldr	r4, [sp, #20]
   247e8:	mov	sl, #20
   247ec:	cmp	r5, #0
   247f0:	beq	248b0 <dta_end_data+0x738>
   247f4:	mov	r0, r5
   247f8:	b	248ac <dta_end_data+0x734>
   247fc:	mov	r2, #0
   24800:	mov	r3, #0
   24804:	mov	r9, #0
   24808:	ldrb	r0, [r5, #192]	; 0xc0
   2480c:	str	r3, [sp, #12]
   24810:	str	r2, [sp, #8]
   24814:	tst	r0, #4
   24818:	bne	24844 <dta_end_data+0x6cc>
   2481c:	mov	sl, #0
   24820:	cmp	r9, #0
   24824:	bne	24878 <dta_end_data+0x700>
   24828:	b	24880 <dta_end_data+0x708>
   2482c:	ldr	r4, [sp, #20]
   24830:	ldr	r6, [sp]
   24834:	mov	sl, #23
   24838:	cmp	r9, #0
   2483c:	bne	24878 <dta_end_data+0x700>
   24840:	b	24880 <dta_end_data+0x708>
   24844:	ldr	r1, [pc, #192]	; 2490c <dta_end_data+0x794>
   24848:	mov	r0, r4
   2484c:	add	r1, pc, r1
   24850:	bl	4abc <readstat_write_string@plt>
   24854:	b	2486c <dta_end_data+0x6f4>
   24858:	mov	sl, r0
   2485c:	cmp	r5, #0
   24860:	bne	247f4 <dta_end_data+0x67c>
   24864:	b	248b0 <dta_end_data+0x738>
   24868:	ldr	r6, [sp]
   2486c:	mov	sl, r0
   24870:	cmp	r9, #0
   24874:	beq	24880 <dta_end_data+0x708>
   24878:	mov	r0, r9
   2487c:	bl	4864 <free@plt>
   24880:	ldr	r0, [sp, #12]
   24884:	cmp	r0, #0
   24888:	beq	24890 <dta_end_data+0x718>
   2488c:	bl	4864 <free@plt>
   24890:	ldr	r0, [sp, #8]
   24894:	cmp	r0, #0
   24898:	beq	248a0 <dta_end_data+0x728>
   2489c:	bl	4864 <free@plt>
   248a0:	cmp	r6, #0
   248a4:	beq	248b0 <dta_end_data+0x738>
   248a8:	mov	r0, r6
   248ac:	bl	4864 <free@plt>
   248b0:	cmp	sl, #0
   248b4:	bne	248e0 <dta_end_data+0x768>
   248b8:	ldr	r0, [sp, #16]
   248bc:	mov	sl, #0
   248c0:	ldrb	r0, [r0, #192]	; 0xc0
   248c4:	tst	r0, #4
   248c8:	beq	248e0 <dta_end_data+0x768>
   248cc:	ldr	r1, [pc, #60]	; 24910 <dta_end_data+0x798>
   248d0:	mov	r0, r4
   248d4:	add	r1, pc, r1
   248d8:	bl	4abc <readstat_write_string@plt>
   248dc:	mov	sl, r0
   248e0:	mov	r0, sl
   248e4:	sub	sp, fp, #28
   248e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   248ec:	.word	0x000071ed
   248f0:	.word	0x000071aa
   248f4:	.word	0x00007182
   248f8:	.word	0x00007208
   248fc:	.word	0x000070c2
   24900:	.word	0x0000701d
   24904:	.word	0x00006e03
   24908:	.word	0x00000b30
   2490c:	.word	0x00006e49
   24910:	.word	0x00006d98

00024914 <dta_module_ctx_free>:
   24914:	b	481c <dta_ctx_free@plt>

00024918 <dta_validate_name>:
   24918:	push	{r4, r5, r6, r7, fp, lr}
   2491c:	add	fp, sp, #16
   24920:	sub	sp, sp, #8
   24924:	mov	r7, r2
   24928:	mov	r6, r1
   2492c:	mov	r5, r0
   24930:	bl	4b58 <strlen@plt>
   24934:	mov	r4, #28
   24938:	cmp	r0, r7
   2493c:	bhi	24bdc <dta_validate_name+0x2c4>
   24940:	cmp	r0, #0
   24944:	beq	24bd8 <dta_validate_name+0x2c0>
   24948:	mov	r0, r5
   2494c:	b	24954 <dta_validate_name+0x3c>
   24950:	add	r0, r0, #1
   24954:	ldrb	r1, [r0]
   24958:	cmp	r1, #95	; 0x5f
   2495c:	beq	24950 <dta_validate_name+0x38>
   24960:	cmp	r1, #0
   24964:	beq	24994 <dta_validate_name+0x7c>
   24968:	sub	r2, r1, #48	; 0x30
   2496c:	uxtb	r2, r2
   24970:	cmp	r2, #10
   24974:	bcc	24950 <dta_validate_name+0x38>
   24978:	and	r1, r1, #223	; 0xdf
   2497c:	sub	r1, r1, #65	; 0x41
   24980:	uxtb	r1, r1
   24984:	cmp	r1, #25
   24988:	bls	24950 <dta_validate_name+0x38>
   2498c:	mov	r4, #26
   24990:	b	24bdc <dta_validate_name+0x2c4>
   24994:	ldrb	r0, [r5]
   24998:	cmp	r6, #0
   2499c:	movwne	r6, #1
   249a0:	and	r1, r0, #223	; 0xdf
   249a4:	sub	r1, r1, #65	; 0x41
   249a8:	uxtb	r1, r1
   249ac:	cmp	r1, #26
   249b0:	bcc	249d0 <dta_validate_name+0xb8>
   249b4:	cmp	r0, #95	; 0x5f
   249b8:	beq	249d0 <dta_validate_name+0xb8>
   249bc:	clz	r0, r0
   249c0:	mov	r4, #25
   249c4:	lsr	r0, r0, #5
   249c8:	ands	r0, r6, r0
   249cc:	beq	24bdc <dta_validate_name+0x2c4>
   249d0:	ldr	r1, [pc, #528]	; 24be8 <dta_validate_name+0x2d0>
   249d4:	mov	r0, r5
   249d8:	add	r1, pc, r1
   249dc:	bl	47b0 <strcmp@plt>
   249e0:	mov	r4, #27
   249e4:	cmp	r0, #0
   249e8:	beq	24bdc <dta_validate_name+0x2c4>
   249ec:	ldr	r1, [pc, #504]	; 24bec <dta_validate_name+0x2d4>
   249f0:	mov	r0, r5
   249f4:	add	r1, pc, r1
   249f8:	bl	47b0 <strcmp@plt>
   249fc:	cmp	r0, #0
   24a00:	beq	24bdc <dta_validate_name+0x2c4>
   24a04:	ldr	r1, [pc, #484]	; 24bf0 <dta_validate_name+0x2d8>
   24a08:	mov	r0, r5
   24a0c:	add	r1, pc, r1
   24a10:	bl	47b0 <strcmp@plt>
   24a14:	cmp	r0, #0
   24a18:	beq	24bdc <dta_validate_name+0x2c4>
   24a1c:	ldr	r1, [pc, #464]	; 24bf4 <dta_validate_name+0x2dc>
   24a20:	mov	r0, r5
   24a24:	add	r1, pc, r1
   24a28:	bl	47b0 <strcmp@plt>
   24a2c:	cmp	r0, #0
   24a30:	beq	24bdc <dta_validate_name+0x2c4>
   24a34:	ldr	r1, [pc, #444]	; 24bf8 <dta_validate_name+0x2e0>
   24a38:	mov	r0, r5
   24a3c:	add	r1, pc, r1
   24a40:	bl	47b0 <strcmp@plt>
   24a44:	cmp	r0, #0
   24a48:	beq	24bdc <dta_validate_name+0x2c4>
   24a4c:	ldr	r1, [pc, #424]	; 24bfc <dta_validate_name+0x2e4>
   24a50:	mov	r0, r5
   24a54:	add	r1, pc, r1
   24a58:	bl	47b0 <strcmp@plt>
   24a5c:	cmp	r0, #0
   24a60:	beq	24bdc <dta_validate_name+0x2c4>
   24a64:	ldr	r1, [pc, #404]	; 24c00 <dta_validate_name+0x2e8>
   24a68:	mov	r0, r5
   24a6c:	add	r1, pc, r1
   24a70:	bl	47b0 <strcmp@plt>
   24a74:	cmp	r0, #0
   24a78:	beq	24bdc <dta_validate_name+0x2c4>
   24a7c:	ldr	r1, [pc, #384]	; 24c04 <dta_validate_name+0x2ec>
   24a80:	mov	r0, r5
   24a84:	add	r1, pc, r1
   24a88:	bl	47b0 <strcmp@plt>
   24a8c:	cmp	r0, #0
   24a90:	beq	24bdc <dta_validate_name+0x2c4>
   24a94:	ldr	r1, [pc, #364]	; 24c08 <dta_validate_name+0x2f0>
   24a98:	mov	r0, r5
   24a9c:	add	r1, pc, r1
   24aa0:	bl	47b0 <strcmp@plt>
   24aa4:	cmp	r0, #0
   24aa8:	beq	24bdc <dta_validate_name+0x2c4>
   24aac:	ldr	r1, [pc, #344]	; 24c0c <dta_validate_name+0x2f4>
   24ab0:	mov	r0, r5
   24ab4:	add	r1, pc, r1
   24ab8:	bl	47b0 <strcmp@plt>
   24abc:	cmp	r0, #0
   24ac0:	beq	24bdc <dta_validate_name+0x2c4>
   24ac4:	ldr	r1, [pc, #324]	; 24c10 <dta_validate_name+0x2f8>
   24ac8:	mov	r0, r5
   24acc:	add	r1, pc, r1
   24ad0:	bl	47b0 <strcmp@plt>
   24ad4:	cmp	r0, #0
   24ad8:	beq	24bdc <dta_validate_name+0x2c4>
   24adc:	ldr	r1, [pc, #304]	; 24c14 <dta_validate_name+0x2fc>
   24ae0:	mov	r0, r5
   24ae4:	add	r1, pc, r1
   24ae8:	bl	47b0 <strcmp@plt>
   24aec:	cmp	r0, #0
   24af0:	beq	24bdc <dta_validate_name+0x2c4>
   24af4:	ldr	r1, [pc, #284]	; 24c18 <dta_validate_name+0x300>
   24af8:	mov	r0, r5
   24afc:	add	r1, pc, r1
   24b00:	bl	47b0 <strcmp@plt>
   24b04:	cmp	r0, #0
   24b08:	beq	24bdc <dta_validate_name+0x2c4>
   24b0c:	ldr	r1, [pc, #264]	; 24c1c <dta_validate_name+0x304>
   24b10:	mov	r0, r5
   24b14:	add	r1, pc, r1
   24b18:	bl	47b0 <strcmp@plt>
   24b1c:	cmp	r0, #0
   24b20:	beq	24bdc <dta_validate_name+0x2c4>
   24b24:	ldr	r1, [pc, #244]	; 24c20 <dta_validate_name+0x308>
   24b28:	mov	r0, r5
   24b2c:	add	r1, pc, r1
   24b30:	bl	47b0 <strcmp@plt>
   24b34:	cmp	r0, #0
   24b38:	beq	24bdc <dta_validate_name+0x2c4>
   24b3c:	ldr	r1, [pc, #224]	; 24c24 <dta_validate_name+0x30c>
   24b40:	mov	r0, r5
   24b44:	add	r1, pc, r1
   24b48:	bl	47b0 <strcmp@plt>
   24b4c:	cmp	r0, #0
   24b50:	beq	24bdc <dta_validate_name+0x2c4>
   24b54:	ldr	r1, [pc, #204]	; 24c28 <dta_validate_name+0x310>
   24b58:	mov	r0, r5
   24b5c:	add	r1, pc, r1
   24b60:	bl	47b0 <strcmp@plt>
   24b64:	cmp	r0, #0
   24b68:	beq	24bdc <dta_validate_name+0x2c4>
   24b6c:	ldr	r1, [pc, #184]	; 24c2c <dta_validate_name+0x314>
   24b70:	mov	r0, r5
   24b74:	add	r1, pc, r1
   24b78:	bl	47b0 <strcmp@plt>
   24b7c:	cmp	r0, #0
   24b80:	beq	24bdc <dta_validate_name+0x2c4>
   24b84:	ldr	r1, [pc, #164]	; 24c30 <dta_validate_name+0x318>
   24b88:	mov	r0, r5
   24b8c:	add	r1, pc, r1
   24b90:	bl	47b0 <strcmp@plt>
   24b94:	cmp	r0, #0
   24b98:	beq	24bdc <dta_validate_name+0x2c4>
   24b9c:	ldr	r1, [pc, #144]	; 24c34 <dta_validate_name+0x31c>
   24ba0:	mov	r0, r5
   24ba4:	add	r1, pc, r1
   24ba8:	bl	47b0 <strcmp@plt>
   24bac:	cmp	r0, #0
   24bb0:	beq	24bdc <dta_validate_name+0x2c4>
   24bb4:	ldr	r1, [pc, #124]	; 24c38 <dta_validate_name+0x320>
   24bb8:	add	r2, sp, #4
   24bbc:	mov	r0, r5
   24bc0:	add	r1, pc, r1
   24bc4:	bl	4be8 <__isoc99_sscanf@plt>
   24bc8:	mov	r4, #0
   24bcc:	cmp	r0, #1
   24bd0:	movweq	r4, #27
   24bd4:	b	24bdc <dta_validate_name+0x2c4>
   24bd8:	mov	r4, #38	; 0x26
   24bdc:	mov	r0, r4
   24be0:	sub	sp, fp, #16
   24be4:	pop	{r4, r5, r6, r7, fp, pc}
   24be8:	.word	0x00006c00
   24bec:	.word	0x00006be9
   24bf0:	.word	0x00006bd4
   24bf4:	.word	0x00006bc1
   24bf8:	.word	0x00006baf
   24bfc:	.word	0x00006b9d
   24c00:	.word	0x00006b8c
   24c04:	.word	0x00006b7a
   24c08:	.word	0x00006b65
   24c0c:	.word	0x00006b50
   24c10:	.word	0x00006b3c
   24c14:	.word	0x00006b29
   24c18:	.word	0x00006b14
   24c1c:	.word	0x00006aff
   24c20:	.word	0x00006aeb
   24c24:	.word	0x00006ad9
   24c28:	.word	0x00006ac5
   24c2c:	.word	0x00006ab3
   24c30:	.word	0x00006aa0
   24c34:	.word	0x00006a8e
   24c38:	.word	0x00006a77

00024c3c <dta_emit_characteristics>:
   24c3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24c40:	add	fp, sp, #28
   24c44:	sub	sp, sp, #12
   24c48:	mov	r4, r0
   24c4c:	ldr	r0, [r1, #96]	; 0x60
   24c50:	add	r0, r0, #7
   24c54:	bic	r0, r0, #7
   24c58:	sub	r6, sp, r0
   24c5c:	mov	sp, r6
   24c60:	ldr	r0, [r1, #92]	; 0x5c
   24c64:	cmp	r0, #0
   24c68:	moveq	r0, #0
   24c6c:	subeq	sp, fp, #28
   24c70:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c74:	ldrb	r0, [r1, #192]	; 0xc0
   24c78:	mov	r5, r1
   24c7c:	tst	r0, #4
   24c80:	beq	24c9c <dta_emit_characteristics+0x60>
   24c84:	ldr	r1, [pc, #468]	; 24e60 <dta_emit_characteristics+0x224>
   24c88:	mov	r0, r4
   24c8c:	add	r1, pc, r1
   24c90:	bl	4abc <readstat_write_string@plt>
   24c94:	cmp	r0, #0
   24c98:	bne	24e58 <dta_emit_characteristics+0x21c>
   24c9c:	ldr	r1, [r4, #52]	; 0x34
   24ca0:	ldrb	r0, [r5, #192]	; 0xc0
   24ca4:	ubfx	r0, r0, #2, #1
   24ca8:	cmp	r1, #1
   24cac:	blt	24e28 <dta_emit_characteristics+0x1ec>
   24cb0:	ldr	r7, [pc, #428]	; 24e64 <dta_emit_characteristics+0x228>
   24cb4:	mov	sl, #0
   24cb8:	add	r7, pc, r7
   24cbc:	tst	r0, #1
   24cc0:	beq	24ce0 <dta_emit_characteristics+0xa4>
   24cc4:	ldr	r1, [pc, #412]	; 24e68 <dta_emit_characteristics+0x22c>
   24cc8:	mov	r0, r4
   24ccc:	add	r1, pc, r1
   24cd0:	bl	4abc <readstat_write_string@plt>
   24cd4:	cmp	r0, #0
   24cd8:	beq	24d00 <dta_emit_characteristics+0xc4>
   24cdc:	b	24e58 <dta_emit_characteristics+0x21c>
   24ce0:	mov	r0, #1
   24ce4:	sub	r1, fp, #33	; 0x21
   24ce8:	mov	r2, #1
   24cec:	strb	r0, [fp, #-33]	; 0xffffffdf
   24cf0:	mov	r0, r4
   24cf4:	bl	4d98 <readstat_write_bytes@plt>
   24cf8:	cmp	r0, #0
   24cfc:	bne	24e58 <dta_emit_characteristics+0x21c>
   24d00:	ldr	r0, [r4, #48]	; 0x30
   24d04:	ldr	r0, [r0, sl, lsl #2]
   24d08:	bl	4b58 <strlen@plt>
   24d0c:	mov	r9, r0
   24d10:	ldr	r0, [r5, #92]	; 0x5c
   24d14:	cmp	r0, #4
   24d18:	beq	24d40 <dta_emit_characteristics+0x104>
   24d1c:	cmp	r0, #2
   24d20:	bne	24d68 <dta_emit_characteristics+0x12c>
   24d24:	ldr	r0, [r5, #96]	; 0x60
   24d28:	sub	r1, fp, #36	; 0x24
   24d2c:	mov	r2, #2
   24d30:	add	r0, r9, r0, lsl #1
   24d34:	add	r0, r0, #1
   24d38:	strh	r0, [fp, #-36]	; 0xffffffdc
   24d3c:	b	24d58 <dta_emit_characteristics+0x11c>
   24d40:	ldr	r0, [r5, #96]	; 0x60
   24d44:	sub	r1, fp, #40	; 0x28
   24d48:	mov	r2, #4
   24d4c:	add	r0, r9, r0, lsl #1
   24d50:	add	r0, r0, #1
   24d54:	str	r0, [fp, #-40]	; 0xffffffd8
   24d58:	mov	r0, r4
   24d5c:	bl	4d98 <readstat_write_bytes@plt>
   24d60:	cmp	r0, #0
   24d64:	bne	24e58 <dta_emit_characteristics+0x21c>
   24d68:	ldr	r2, [r5, #96]	; 0x60
   24d6c:	mov	r0, r6
   24d70:	mov	r1, r7
   24d74:	bl	4c18 <strncpy@plt>
   24d78:	ldr	r2, [r5, #96]	; 0x60
   24d7c:	mov	r0, r4
   24d80:	mov	r1, r6
   24d84:	bl	4d98 <readstat_write_bytes@plt>
   24d88:	cmp	r0, #0
   24d8c:	bne	24e58 <dta_emit_characteristics+0x21c>
   24d90:	ldr	r1, [r5, #96]	; 0x60
   24d94:	ldr	r2, [pc, #208]	; 24e6c <dta_emit_characteristics+0x230>
   24d98:	add	r8, sl, #1
   24d9c:	mov	r0, r6
   24da0:	mov	r3, r8
   24da4:	add	r2, pc, r2
   24da8:	bl	4bdc <snprintf@plt>
   24dac:	ldr	r2, [r5, #96]	; 0x60
   24db0:	mov	r0, r4
   24db4:	mov	r1, r6
   24db8:	bl	4d98 <readstat_write_bytes@plt>
   24dbc:	cmp	r0, #0
   24dc0:	bne	24e58 <dta_emit_characteristics+0x21c>
   24dc4:	ldr	r0, [r4, #48]	; 0x30
   24dc8:	add	r2, r9, #1
   24dcc:	ldr	r1, [r0, sl, lsl #2]
   24dd0:	mov	r0, r4
   24dd4:	bl	4d98 <readstat_write_bytes@plt>
   24dd8:	cmp	r0, #0
   24ddc:	bne	24e58 <dta_emit_characteristics+0x21c>
   24de0:	ldrb	r1, [r5, #192]	; 0xc0
   24de4:	mov	r0, #0
   24de8:	tst	r1, #4
   24dec:	beq	24e10 <dta_emit_characteristics+0x1d4>
   24df0:	ldr	r1, [pc, #120]	; 24e70 <dta_emit_characteristics+0x234>
   24df4:	mov	r0, r4
   24df8:	add	r1, pc, r1
   24dfc:	bl	4abc <readstat_write_string@plt>
   24e00:	cmp	r0, #0
   24e04:	bne	24e58 <dta_emit_characteristics+0x21c>
   24e08:	ldrb	r0, [r5, #192]	; 0xc0
   24e0c:	and	r0, r0, #4
   24e10:	ldr	r1, [r4, #52]	; 0x34
   24e14:	cmp	r0, #0
   24e18:	mov	sl, r8
   24e1c:	movwne	r0, #1
   24e20:	cmp	r8, r1
   24e24:	blt	24cbc <dta_emit_characteristics+0x80>
   24e28:	cmp	r0, #0
   24e2c:	beq	24e48 <dta_emit_characteristics+0x20c>
   24e30:	ldr	r1, [pc, #60]	; 24e74 <dta_emit_characteristics+0x238>
   24e34:	mov	r0, r4
   24e38:	add	r1, pc, r1
   24e3c:	bl	4abc <readstat_write_string@plt>
   24e40:	sub	sp, fp, #28
   24e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24e48:	ldr	r0, [r5, #92]	; 0x5c
   24e4c:	add	r1, r0, #1
   24e50:	mov	r0, r4
   24e54:	bl	49a8 <readstat_write_zeros@plt>
   24e58:	sub	sp, fp, #28
   24e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24e60:	.word	0x0000684a
   24e64:	.word	0x0000683a
   24e68:	.word	0x00006821
   24e6c:	.word	0x00006753
   24e70:	.word	0x00006706
   24e74:	.word	0x00006841

00024e78 <dta_emit_header_data_label>:
   24e78:	push	{r4, r5, r6, r7, fp, lr}
   24e7c:	add	fp, sp, #16
   24e80:	sub	sp, sp, #8
   24e84:	mov	r4, r0
   24e88:	ldrb	r0, [r1, #192]	; 0xc0
   24e8c:	mov	r5, r1
   24e90:	tst	r0, #4
   24e94:	beq	24eb4 <dta_emit_header_data_label+0x3c>
   24e98:	ldr	r1, [pc, #276]	; 24fb4 <dta_emit_header_data_label+0x13c>
   24e9c:	mov	r0, r4
   24ea0:	add	r1, pc, r1
   24ea4:	bl	4abc <readstat_write_string@plt>
   24ea8:	mov	r6, r0
   24eac:	cmp	r0, #0
   24eb0:	bne	24fa8 <dta_emit_header_data_label+0x130>
   24eb4:	ldr	r0, [r5, #8]
   24eb8:	cmp	r0, #0
   24ebc:	beq	24ef0 <dta_emit_header_data_label+0x78>
   24ec0:	add	r7, r4, #88	; 0x58
   24ec4:	cmp	r0, #1
   24ec8:	beq	24f30 <dta_emit_header_data_label+0xb8>
   24ecc:	cmp	r0, #2
   24ed0:	bne	24f58 <dta_emit_header_data_label+0xe0>
   24ed4:	mov	r0, r7
   24ed8:	bl	4b58 <strlen@plt>
   24edc:	strh	r0, [sp, #4]
   24ee0:	add	r1, sp, #4
   24ee4:	mov	r0, r4
   24ee8:	mov	r2, #2
   24eec:	b	24f48 <dta_emit_header_data_label+0xd0>
   24ef0:	ldr	r6, [r5, #4]
   24ef4:	mov	r0, #1
   24ef8:	mov	r1, r6
   24efc:	bl	472c <calloc@plt>
   24f00:	add	r1, r4, #88	; 0x58
   24f04:	mov	r2, r6
   24f08:	mov	r7, r0
   24f0c:	bl	4c18 <strncpy@plt>
   24f10:	ldr	r2, [r5, #4]
   24f14:	mov	r0, r4
   24f18:	mov	r1, r7
   24f1c:	bl	4d98 <readstat_write_bytes@plt>
   24f20:	mov	r6, r0
   24f24:	cmp	r0, #0
   24f28:	bne	24f98 <dta_emit_header_data_label+0x120>
   24f2c:	b	24f74 <dta_emit_header_data_label+0xfc>
   24f30:	mov	r0, r7
   24f34:	bl	4b58 <strlen@plt>
   24f38:	strb	r0, [sp, #7]
   24f3c:	add	r1, sp, #7
   24f40:	mov	r0, r4
   24f44:	mov	r2, #1
   24f48:	bl	4d98 <readstat_write_bytes@plt>
   24f4c:	mov	r6, r0
   24f50:	cmp	r0, #0
   24f54:	bne	24fa8 <dta_emit_header_data_label+0x130>
   24f58:	mov	r0, r4
   24f5c:	mov	r1, r7
   24f60:	bl	4abc <readstat_write_string@plt>
   24f64:	mov	r6, r0
   24f68:	cmp	r0, #0
   24f6c:	bne	24fa8 <dta_emit_header_data_label+0x130>
   24f70:	mov	r7, #0
   24f74:	ldrb	r0, [r5, #192]	; 0xc0
   24f78:	mov	r6, #0
   24f7c:	tst	r0, #4
   24f80:	beq	24f98 <dta_emit_header_data_label+0x120>
   24f84:	ldr	r1, [pc, #44]	; 24fb8 <dta_emit_header_data_label+0x140>
   24f88:	mov	r0, r4
   24f8c:	add	r1, pc, r1
   24f90:	bl	4abc <readstat_write_string@plt>
   24f94:	mov	r6, r0
   24f98:	cmp	r7, #0
   24f9c:	beq	24fa8 <dta_emit_header_data_label+0x130>
   24fa0:	mov	r0, r7
   24fa4:	bl	4864 <free@plt>
   24fa8:	mov	r0, r6
   24fac:	sub	sp, fp, #16
   24fb0:	pop	{r4, r5, r6, r7, fp, pc}
   24fb4:	.word	0x00006511
   24fb8:	.word	0x0000642d

00024fbc <dta_emit_header_time_stamp>:
   24fbc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   24fc0:	add	fp, sp, #24
   24fc4:	sub	sp, sp, #80	; 0x50
   24fc8:	mov	r8, r0
   24fcc:	ldr	r0, [r1, #16]
   24fd0:	cmp	r0, #0
   24fd4:	beq	250a8 <dta_emit_header_time_stamp+0xec>
   24fd8:	ldr	r0, [r8, #20]
   24fdc:	mov	r6, r1
   24fe0:	str	r0, [fp, #-28]	; 0xffffffe4
   24fe4:	sub	r0, fp, #28
   24fe8:	bl	4ac8 <localtime@plt>
   24fec:	ldr	r7, [r6, #16]
   24ff0:	mov	r5, r0
   24ff4:	mov	r0, #1
   24ff8:	mov	r1, r7
   24ffc:	bl	472c <calloc@plt>
   25000:	ldr	r1, [pc, #332]	; 25154 <dta_emit_header_time_stamp+0x198>
   25004:	mov	r3, #32
   25008:	mov	r9, r0
   2500c:	add	r0, sp, #24
   25010:	cmp	r5, #0
   25014:	add	r1, pc, r1
   25018:	add	r2, r1, #16
   2501c:	vld1.64	{d16-d17}, [r1], r3
   25020:	vld1.64	{d18-d19}, [r2]
   25024:	add	r2, r0, #16
   25028:	vld1.64	{d20-d21}, [r1]
   2502c:	mov	r1, r0
   25030:	vst1.64	{d16-d17}, [r1], r3
   25034:	vst1.64	{d18-d19}, [r2]
   25038:	vst1.64	{d20-d21}, [r1]
   2503c:	beq	250b0 <dta_emit_header_time_stamp+0xf4>
   25040:	cmp	r9, #0
   25044:	beq	250b8 <dta_emit_header_time_stamp+0xfc>
   25048:	ldr	ip, [r5, #4]
   2504c:	add	r5, r5, #8
   25050:	movw	r1, #1900	; 0x76c
   25054:	ldm	r5, {r2, r3, r4, r5}
   25058:	add	r1, r5, r1
   2505c:	add	r0, r0, r4, lsl #2
   25060:	stm	sp, {r0, r1, r2, ip}
   25064:	mov	r0, r9
   25068:	mov	r1, r7
   2506c:	ldr	r2, [pc, #228]	; 25158 <dta_emit_header_time_stamp+0x19c>
   25070:	add	r2, pc, r2
   25074:	bl	4bdc <snprintf@plt>
   25078:	tst	r0, #255	; 0xff
   2507c:	strb	r0, [sp, #23]
   25080:	beq	250c0 <dta_emit_header_time_stamp+0x104>
   25084:	ldrb	r0, [r6, #192]	; 0xc0
   25088:	tst	r0, #4
   2508c:	bne	250c8 <dta_emit_header_time_stamp+0x10c>
   25090:	ldr	r2, [r6, #16]
   25094:	mov	r0, r8
   25098:	mov	r1, r9
   2509c:	bl	4d98 <readstat_write_bytes@plt>
   250a0:	mov	r7, r0
   250a4:	b	2512c <dta_emit_header_time_stamp+0x170>
   250a8:	mov	r7, #0
   250ac:	b	25134 <dta_emit_header_time_stamp+0x178>
   250b0:	mov	r7, #39	; 0x27
   250b4:	b	2512c <dta_emit_header_time_stamp+0x170>
   250b8:	mov	r7, #3
   250bc:	b	2512c <dta_emit_header_time_stamp+0x170>
   250c0:	mov	r7, #13
   250c4:	b	2512c <dta_emit_header_time_stamp+0x170>
   250c8:	ldr	r1, [pc, #140]	; 2515c <dta_emit_header_time_stamp+0x1a0>
   250cc:	mov	r0, r8
   250d0:	add	r1, pc, r1
   250d4:	bl	4abc <readstat_write_string@plt>
   250d8:	mov	r7, r0
   250dc:	cmp	r0, #0
   250e0:	bne	2512c <dta_emit_header_time_stamp+0x170>
   250e4:	add	r1, sp, #23
   250e8:	mov	r0, r8
   250ec:	mov	r2, #1
   250f0:	bl	4d98 <readstat_write_bytes@plt>
   250f4:	mov	r7, r0
   250f8:	cmp	r0, #0
   250fc:	bne	2512c <dta_emit_header_time_stamp+0x170>
   25100:	ldrb	r2, [sp, #23]
   25104:	mov	r0, r8
   25108:	mov	r1, r9
   2510c:	bl	4d98 <readstat_write_bytes@plt>
   25110:	mov	r7, r0
   25114:	cmp	r0, #0
   25118:	bne	2512c <dta_emit_header_time_stamp+0x170>
   2511c:	ldrb	r0, [r6, #192]	; 0xc0
   25120:	mov	r7, #0
   25124:	tst	r0, #4
   25128:	bne	25140 <dta_emit_header_time_stamp+0x184>
   2512c:	mov	r0, r9
   25130:	bl	4864 <free@plt>
   25134:	mov	r0, r7
   25138:	sub	sp, fp, #24
   2513c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   25140:	ldr	r1, [pc, #24]	; 25160 <dta_emit_header_time_stamp+0x1a4>
   25144:	mov	r0, r8
   25148:	add	r1, pc, r1
   2514c:	bl	4abc <readstat_write_string@plt>
   25150:	b	250a0 <dta_emit_header_time_stamp+0xe4>
   25154:	.word	0x000066b4
   25158:	.word	0x000065e4
   2515c:	.word	0x000062f2
   25160:	.word	0x00006286

00025164 <dta_compare_value_labels>:
   25164:	mov	r2, r0
   25168:	ldrb	r0, [r0, #12]
   2516c:	ldrb	r3, [r1, #12]
   25170:	cmp	r0, #0
   25174:	beq	25188 <dta_compare_value_labels+0x24>
   25178:	cmp	r3, #0
   2517c:	moveq	r0, #1
   25180:	subne	r0, r0, r3
   25184:	bx	lr
   25188:	mvn	r0, #0
   2518c:	cmp	r3, #0
   25190:	ldreq	r0, [r1, #8]
   25194:	ldreq	r1, [r2, #8]
   25198:	subeq	r0, r1, r0
   2519c:	bx	lr

000251a0 <submit_value_label>:
   251a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   251a4:	add	fp, sp, #28
   251a8:	sub	sp, sp, #20
   251ac:	ldr	r4, [r0, #20]
   251b0:	cmp	r4, #0
   251b4:	beq	25280 <submit_value_label+0xe0>
   251b8:	ldr	r7, [fp, #32]
   251bc:	ldr	sl, [fp, #28]
   251c0:	mov	r5, r0
   251c4:	add	r0, r2, #1
   251c8:	mov	r8, r1
   251cc:	cmp	r0, #4
   251d0:	bhi	2520c <submit_value_label+0x6c>
   251d4:	add	r1, pc, #4
   251d8:	ldr	r0, [r1, r0, lsl #2]
   251dc:	add	pc, r1, r0
   251e0:	.word	0x00000014
   251e4:	.word	0x0000003c
   251e8:	.word	0x0000004c
   251ec:	.word	0x00000084
   251f0:	.word	0x000000a0
   251f4:	movw	r3, #0
   251f8:	mov	r0, #0
   251fc:	mov	r2, #5
   25200:	mov	r1, #0
   25204:	movt	r3, #32760	; 0x7ff8
   25208:	b	2523c <submit_value_label+0x9c>
   2520c:	mov	r0, #0
   25210:	mov	r3, #0
   25214:	mov	r1, #0
   25218:	b	25238 <submit_value_label+0x98>
   2521c:	vmov	r1, r3, d0
   25220:	mov	r0, #0
   25224:	mov	r2, #5
   25228:	b	2523c <submit_value_label+0x9c>
   2522c:	ldr	r1, [fp, #24]
   25230:	mov	r0, #0
   25234:	mov	r3, #0
   25238:	mov	r2, #0
   2523c:	str	r2, [sp]
   25240:	stmib	sp, {r0, sl}
   25244:	orr	r2, r0, r1
   25248:	mov	r0, r8
   2524c:	str	r7, [sp, #12]
   25250:	blx	r4
   25254:	mov	r4, #4
   25258:	cmp	r0, #0
   2525c:	moveq	r4, #0
   25260:	b	25284 <submit_value_label+0xe4>
   25264:	ldr	r0, [fp, #16]
   25268:	ldr	r7, [fp, #8]
   2526c:	ldr	r1, [fp, #20]
   25270:	ldr	r6, [fp, #12]
   25274:	subs	r0, r0, r7
   25278:	sbcs	r0, r1, r6
   2527c:	bge	25290 <submit_value_label+0xf0>
   25280:	mov	r4, #0
   25284:	mov	r0, r4
   25288:	sub	sp, fp, #28
   2528c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25290:	mov	r0, r7
   25294:	mov	r1, r6
   25298:	bl	28768 <__aeabi_l2d>
   2529c:	mov	r2, r0
   252a0:	mov	r9, #0
   252a4:	mov	r0, #5
   252a8:	mov	r3, r1
   252ac:	stm	sp, {r0, r9, sl}
   252b0:	ldr	r0, [fp, #32]
   252b4:	str	r0, [sp, #12]
   252b8:	mov	r0, r8
   252bc:	blx	r4
   252c0:	mov	r4, #4
   252c4:	cmp	r0, #0
   252c8:	bne	25284 <submit_value_label+0xe4>
   252cc:	ldr	r0, [fp, #16]
   252d0:	subs	r0, r7, r0
   252d4:	ldr	r0, [fp, #20]
   252d8:	sbcs	r0, r6, r0
   252dc:	bge	25280 <submit_value_label+0xe0>
   252e0:	adds	r7, r7, #1
   252e4:	adc	r6, r6, #0
   252e8:	mov	r0, r7
   252ec:	mov	r1, r6
   252f0:	bl	28768 <__aeabi_l2d>
   252f4:	mov	r2, r0
   252f8:	bfc	r9, #0, #10
   252fc:	mov	r0, #5
   25300:	ldr	ip, [r5, #20]
   25304:	mov	r3, r1
   25308:	stm	sp, {r0, r9, sl}
   2530c:	ldr	r0, [fp, #32]
   25310:	str	r0, [sp, #12]
   25314:	mov	r0, r8
   25318:	blx	ip
   2531c:	cmp	r0, #0
   25320:	beq	252cc <submit_value_label+0x12c>
   25324:	b	25284 <submit_value_label+0xe4>

00025328 <submit_columns>:
   25328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2532c:	add	fp, sp, #28
   25330:	push	{r2}		; (str r2, [sp, #-4]!)
   25334:	mov	r5, r1
   25338:	ldr	r1, [r1, #268]	; 0x10c
   2533c:	mov	sl, r0
   25340:	cmp	r1, #1
   25344:	blt	25374 <submit_columns+0x4c>
   25348:	ldr	r2, [r5, #256]	; 0x100
   2534c:	ldr	r0, [r5, #276]	; 0x114
   25350:	mov	r3, #0
   25354:	ldr	r7, [r0]
   25358:	add	r3, r3, #1
   2535c:	add	r0, r0, #2208	; 0x8a0
   25360:	cmp	r2, r7
   25364:	addle	r2, r7, #1
   25368:	strle	r2, [r5, #256]	; 0x100
   2536c:	cmp	r3, r1
   25370:	blt	25354 <submit_columns+0x2c>
   25374:	ldr	r2, [sl, #8]
   25378:	mov	r0, #0
   2537c:	cmp	r2, #0
   25380:	beq	25414 <submit_columns+0xec>
   25384:	cmp	r1, #1
   25388:	blt	25414 <submit_columns+0xec>
   2538c:	mov	r4, #0
   25390:	mov	r7, #0
   25394:	mov	r8, #0
   25398:	ldr	r0, [r5, #276]	; 0x114
   2539c:	ldr	r3, [sp]
   253a0:	add	r9, r0, r4
   253a4:	mov	r1, r9
   253a8:	mov	r2, r9
   253ac:	ldr	r0, [r1, #16]!
   253b0:	str	r8, [r1, #2148]	; 0x864
   253b4:	str	r7, [r1, #4]
   253b8:	cmp	r0, #0
   253bc:	ldreq	r0, [r9, #8]
   253c0:	streq	r0, [r9, #1612]	; 0x64c
   253c4:	ldrb	r0, [r2, #2168]!	; 0x878
   253c8:	ldr	r6, [sl, #8]
   253cc:	cmp	r0, #0
   253d0:	moveq	r2, r0
   253d4:	mov	r0, r7
   253d8:	blx	r6
   253dc:	cmp	r0, #2
   253e0:	beq	253f4 <submit_columns+0xcc>
   253e4:	cmp	r0, #1
   253e8:	beq	2541c <submit_columns+0xf4>
   253ec:	add	r8, r8, #1
   253f0:	b	253fc <submit_columns+0xd4>
   253f4:	mov	r0, #1
   253f8:	str	r0, [r9, #12]
   253fc:	ldr	r0, [r5, #268]	; 0x10c
   25400:	add	r7, r7, #1
   25404:	add	r4, r4, #2208	; 0x8a0
   25408:	cmp	r7, r0
   2540c:	blt	25398 <submit_columns+0x70>
   25410:	mov	r0, #0
   25414:	sub	sp, fp, #28
   25418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2541c:	mov	r0, #4
   25420:	sub	sp, fp, #28
   25424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025428 <readstat_copy>:
   25428:	push	{r4, r5, fp, lr}
   2542c:	add	fp, sp, #8
   25430:	mov	r4, r3
   25434:	cmp	r3, r1
   25438:	mov	r5, r0
   2543c:	subcs	r4, r1, #1
   25440:	mov	r1, r2
   25444:	mov	r2, r4
   25448:	bl	48b8 <memcpy@plt>
   2544c:	mov	r0, #0
   25450:	strb	r0, [r5, r4]
   25454:	pop	{r4, r5, fp, pc}

00025458 <readstat_copy_lower>:
   25458:	push	{r4, r5, r6, r7, fp, lr}
   2545c:	add	fp, sp, #16
   25460:	mov	r6, r3
   25464:	cmp	r3, r1
   25468:	mov	r4, r1
   2546c:	mov	r5, r0
   25470:	subcs	r6, r1, #1
   25474:	mov	r1, r2
   25478:	mov	r2, r6
   2547c:	bl	48b8 <memcpy@plt>
   25480:	mov	r7, #0
   25484:	cmp	r4, #0
   25488:	strb	r7, [r5, r6]
   2548c:	beq	254b8 <readstat_copy_lower+0x60>
   25490:	ldrb	r6, [r5, r7]
   25494:	cmp	r6, #0
   25498:	popeq	{r4, r5, r6, r7, fp, pc}
   2549c:	bl	4ad4 <__ctype_tolower_loc@plt>
   254a0:	ldr	r0, [r0]
   254a4:	ldr	r0, [r0, r6, lsl #2]
   254a8:	strb	r0, [r5, r7]
   254ac:	add	r7, r7, #1
   254b0:	cmp	r7, r4
   254b4:	bcc	25490 <readstat_copy_lower+0x38>
   254b8:	pop	{r4, r5, r6, r7, fp, pc}

000254bc <readstat_copy_quoted>:
   254bc:	push	{r4, sl, fp, lr}
   254c0:	add	fp, sp, #8
   254c4:	cmp	r3, r1
   254c8:	mov	ip, #0
   254cc:	mov	lr, #0
   254d0:	subcs	r3, r1, #1
   254d4:	cmp	r3, #0
   254d8:	beq	25520 <readstat_copy_quoted+0x64>
   254dc:	mov	r1, #0
   254e0:	mov	lr, #0
   254e4:	ldrb	r4, [r2]
   254e8:	cmp	r1, #0
   254ec:	bne	25500 <readstat_copy_quoted+0x44>
   254f0:	mov	r1, #1
   254f4:	cmp	r4, #92	; 0x5c
   254f8:	bne	25508 <readstat_copy_quoted+0x4c>
   254fc:	b	25514 <readstat_copy_quoted+0x58>
   25500:	cmp	r4, #116	; 0x74
   25504:	movweq	r4, #9
   25508:	strb	r4, [r0, lr]
   2550c:	add	lr, lr, #1
   25510:	mov	r1, #0
   25514:	subs	r3, r3, #1
   25518:	add	r2, r2, #1
   2551c:	bne	254e4 <readstat_copy_quoted+0x28>
   25520:	strb	ip, [r0, lr]
   25524:	pop	{r4, sl, fp, pc}

00025528 <readstat_parse_sas_commands>:
   25528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2552c:	add	fp, sp, #28
   25530:	sub	sp, sp, #4
   25534:	vpush	{d8}
   25538:	sub	sp, sp, #2288	; 0x8f0
   2553c:	mov	r7, r0
   25540:	ldr	r0, [r0, #32]
   25544:	mov	r8, r3
   25548:	str	r2, [sp, #52]	; 0x34
   2554c:	mov	r2, r1
   25550:	ldr	r3, [r0]
   25554:	ldr	r1, [r0, #20]
   25558:	mov	r0, r2
   2555c:	blx	r3
   25560:	cmn	r0, #1
   25564:	beq	25bfc <readstat_parse_sas_commands+0x6d4>
   25568:	ldr	r0, [r7, #32]
   2556c:	mov	r1, #2
   25570:	mov	sl, #0
   25574:	ldr	r3, [r0, #8]
   25578:	ldr	r2, [r0, #20]
   2557c:	mov	r0, #0
   25580:	blx	r3
   25584:	cmn	r0, #1
   25588:	beq	25c10 <readstat_parse_sas_commands+0x6e8>
   2558c:	mov	r4, r0
   25590:	ldr	r0, [r7, #32]
   25594:	mov	r1, #0
   25598:	mov	r9, #0
   2559c:	ldr	r3, [r0, #8]
   255a0:	ldr	r2, [r0, #20]
   255a4:	mov	r0, #0
   255a8:	blx	r3
   255ac:	mov	r0, r4
   255b0:	bl	4a74 <malloc@plt>
   255b4:	mov	sl, r0
   255b8:	ldr	r0, [r7, #32]
   255bc:	mov	r1, r4
   255c0:	ldr	r3, [r0, #12]
   255c4:	ldr	r2, [r0, #20]
   255c8:	mov	r0, sl
   255cc:	blx	r3
   255d0:	mov	r0, #1
   255d4:	mov	r1, #280	; 0x118
   255d8:	mov	r5, #1
   255dc:	bl	472c <calloc@plt>
   255e0:	cmp	r0, #0
   255e4:	beq	25c1c <readstat_parse_sas_commands+0x6f4>
   255e8:	str	r7, [sp, #40]	; 0x28
   255ec:	add	r7, sl, r4
   255f0:	cmp	r4, #0
   255f4:	str	r0, [sp, #72]	; 0x48
   255f8:	str	r5, [r0, #256]	; 0x100
   255fc:	str	r8, [sp, #36]	; 0x24
   25600:	str	sl, [sp, #32]
   25604:	beq	25c28 <readstat_parse_sas_commands+0x700>
   25608:	mov	r1, #0
   2560c:	vldr	d8, [pc, #1004]	; 25a00 <readstat_parse_sas_commands+0x4d8>
   25610:	mov	r0, #0
   25614:	mov	r9, #0
   25618:	mov	r8, sl
   2561c:	str	r7, [sp, #56]	; 0x38
   25620:	str	r1, [sp, #48]	; 0x30
   25624:	mov	r1, #0
   25628:	str	r0, [sp, #88]	; 0x58
   2562c:	mov	r0, #5
   25630:	str	r1, [sp, #44]	; 0x2c
   25634:	mov	r1, #0
   25638:	str	r0, [sp, #64]	; 0x40
   2563c:	movw	r0, #1094	; 0x446
   25640:	str	r1, [sp, #100]	; 0x64
   25644:	mov	r1, #0
   25648:	str	r1, [sp, #92]	; 0x5c
   2564c:	mov	r1, #0
   25650:	str	r1, [sp, #84]	; 0x54
   25654:	mov	r1, #0
   25658:	str	r1, [sp, #68]	; 0x44
   2565c:	mov	r1, #0
   25660:	str	r1, [sp, #60]	; 0x3c
   25664:	mov	r1, #0
   25668:	str	r1, [sp, #76]	; 0x4c
   2566c:	mov	r1, #0
   25670:	str	r1, [sp, #96]	; 0x60
   25674:	ldr	r1, [pc, #1788]	; 25d78 <readstat_parse_sas_commands+0x850>
   25678:	add	r1, pc, r1
   2567c:	ldrb	r2, [r1, r0]
   25680:	ldr	r1, [pc, #1780]	; 25d7c <readstat_parse_sas_commands+0x854>
   25684:	ldr	r3, [pc, #1780]	; 25d80 <readstat_parse_sas_commands+0x858>
   25688:	add	r1, pc, r1
   2568c:	add	r3, pc, r3
   25690:	cmp	r2, #0
   25694:	add	r1, r1, r0, lsl #1
   25698:	ldrsh	r1, [r1]
   2569c:	add	r4, r3, r1
   256a0:	ldr	r1, [pc, #1756]	; 25d84 <readstat_parse_sas_commands+0x85c>
   256a4:	add	r1, pc, r1
   256a8:	add	r1, r1, r0, lsl #1
   256ac:	ldrsh	lr, [r1]
   256b0:	beq	25708 <readstat_parse_sas_commands+0x1e0>
   256b4:	add	ip, r4, r2
   256b8:	sub	r7, ip, #1
   256bc:	cmp	r7, r4
   256c0:	bcc	25700 <readstat_parse_sas_commands+0x1d8>
   256c4:	ldrb	r6, [sl]
   256c8:	mov	r3, r4
   256cc:	sub	r5, r7, r3
   256d0:	mov	r1, r3
   256d4:	ldrb	r5, [r1, r5, asr #1]!
   256d8:	cmp	r6, r5
   256dc:	bcs	256f0 <readstat_parse_sas_commands+0x1c8>
   256e0:	sub	r7, r1, #1
   256e4:	cmp	r7, r3
   256e8:	bcs	256cc <readstat_parse_sas_commands+0x1a4>
   256ec:	b	25700 <readstat_parse_sas_commands+0x1d8>
   256f0:	bls	25790 <readstat_parse_sas_commands+0x268>
   256f4:	add	r3, r1, #1
   256f8:	cmp	r7, r3
   256fc:	bcs	256cc <readstat_parse_sas_commands+0x1a4>
   25700:	add	lr, r2, lr
   25704:	b	2570c <readstat_parse_sas_commands+0x1e4>
   25708:	mov	ip, r4
   2570c:	ldr	r4, [sp, #72]	; 0x48
   25710:	ldr	r1, [pc, #1648]	; 25d88 <readstat_parse_sas_commands+0x860>
   25714:	mvn	r6, #1
   25718:	add	r1, pc, r1
   2571c:	ldrb	r0, [r1, r0]
   25720:	cmp	r0, #0
   25724:	beq	25784 <readstat_parse_sas_commands+0x25c>
   25728:	add	r1, ip, r0, lsl #1
   2572c:	sub	r2, r1, #2
   25730:	cmp	r2, ip
   25734:	bcc	257b0 <readstat_parse_sas_commands+0x288>
   25738:	ldrb	r3, [sl]
   2573c:	mov	r5, ip
   25740:	sub	r1, r2, r5
   25744:	and	r7, r6, r1, asr #1
   25748:	mov	r1, r5
   2574c:	ldrb	r7, [r1, r7]!
   25750:	cmp	r3, r7
   25754:	bcs	25768 <readstat_parse_sas_commands+0x240>
   25758:	sub	r2, r1, #2
   2575c:	cmp	r2, r5
   25760:	bcs	25740 <readstat_parse_sas_commands+0x218>
   25764:	b	257b0 <readstat_parse_sas_commands+0x288>
   25768:	ldrb	r7, [r1, #1]
   2576c:	cmp	r3, r7
   25770:	bls	257a8 <readstat_parse_sas_commands+0x280>
   25774:	add	r5, r1, #2
   25778:	cmp	r2, r5
   2577c:	bcs	25740 <readstat_parse_sas_commands+0x218>
   25780:	b	257b0 <readstat_parse_sas_commands+0x288>
   25784:	ldr	r2, [pc, #1536]	; 25d8c <readstat_parse_sas_commands+0x864>
   25788:	add	r2, pc, r2
   2578c:	b	257bc <readstat_parse_sas_commands+0x294>
   25790:	sub	r0, lr, r4
   25794:	ldr	r4, [sp, #72]	; 0x48
   25798:	ldr	r2, [pc, #1556]	; 25db4 <readstat_parse_sas_commands+0x88c>
   2579c:	add	lr, r0, r1
   257a0:	add	r2, pc, r2
   257a4:	b	257bc <readstat_parse_sas_commands+0x294>
   257a8:	sub	r0, r1, ip
   257ac:	asr	r0, r0, #1
   257b0:	ldr	r2, [pc, #1496]	; 25d90 <readstat_parse_sas_commands+0x868>
   257b4:	add	lr, r0, lr
   257b8:	add	r2, pc, r2
   257bc:	ldr	r0, [pc, #1488]	; 25d94 <readstat_parse_sas_commands+0x86c>
   257c0:	str	lr, [sp, #80]	; 0x50
   257c4:	add	r0, pc, r0
   257c8:	ldrb	r0, [r0, lr]
   257cc:	cmp	r0, #0
   257d0:	ldrbne	r1, [r2, r0]
   257d4:	cmpne	r1, #0
   257d8:	beq	25bc4 <readstat_parse_sas_commands+0x69c>
   257dc:	add	r0, r2, r0
   257e0:	rsb	r6, r1, #0
   257e4:	add	r7, r0, #1
   257e8:	ldrb	r0, [r7]
   257ec:	cmp	r0, #34	; 0x22
   257f0:	bhi	25bb8 <readstat_parse_sas_commands+0x690>
   257f4:	add	r1, pc, #4
   257f8:	ldr	r0, [r1, r0, lsl #2]
   257fc:	add	pc, r1, r0
   25800:	.word	0x0000012c
   25804:	.word	0x0000013c
   25808:	.word	0x0000016c
   2580c:	.word	0x00000198
   25810:	.word	0x000001b0
   25814:	.word	0x000001c4
   25818:	.word	0x000001d0
   2581c:	.word	0x000001dc
   25820:	.word	0x000001ec
   25824:	.word	0x000001f4
   25828:	.word	0x00000208
   2582c:	.word	0x000000b0
   25830:	.word	0x00000220
   25834:	.word	0x00000270
   25838:	.word	0x000000c8
   2583c:	.word	0x000002a0
   25840:	.word	0x000000d8
   25844:	.word	0x000002c8
   25848:	.word	0x0000009c
   2584c:	.word	0x0000008c
   25850:	.word	0x0000009c
   25854:	.word	0x0000008c
   25858:	.word	0x00000324
   2585c:	.word	0x0000009c
   25860:	.word	0x0000008c
   25864:	.word	0x00000330
   25868:	.word	0x00000344
   2586c:	.word	0x00000100
   25870:	.word	0x00000360
   25874:	.word	0x000000a4
   25878:	.word	0x000000a4
   2587c:	.word	0x0000036c
   25880:	.word	0x00000378
   25884:	.word	0x00000114
   25888:	.word	0x00000120
   2588c:	ldr	r0, [sp, #96]	; 0x60
   25890:	sub	r0, sl, r0
   25894:	str	r0, [sp, #88]	; 0x58
   25898:	b	25bb8 <readstat_parse_sas_commands+0x690>
   2589c:	str	sl, [sp, #96]	; 0x60
   258a0:	b	25bb8 <readstat_parse_sas_commands+0x690>
   258a4:	mov	r0, #1
   258a8:	str	r0, [sp, #84]	; 0x54
   258ac:	b	25bb8 <readstat_parse_sas_commands+0x690>
   258b0:	ldr	r2, [sp, #96]	; 0x60
   258b4:	ldr	r3, [sp, #88]	; 0x58
   258b8:	sub	r0, fp, #76	; 0x4c
   258bc:	mov	r1, #32
   258c0:	bl	4d2c <readstat_copy_lower@plt>
   258c4:	b	25bb8 <readstat_parse_sas_commands+0x690>
   258c8:	sub	r1, fp, #76	; 0x4c
   258cc:	mov	r0, r4
   258d0:	bl	4a50 <readstat_schema_find_or_create_entry@plt>
   258d4:	b	25a94 <readstat_parse_sas_commands+0x56c>
   258d8:	sub	r1, fp, #76	; 0x4c
   258dc:	mov	r0, r4
   258e0:	bl	4a50 <readstat_schema_find_or_create_entry@plt>
   258e4:	movw	r1, #2168	; 0x878
   258e8:	sub	r2, fp, #140	; 0x8c
   258ec:	mov	r3, #32
   258f0:	add	r0, r0, r1
   258f4:	mov	r1, #32
   258f8:	bl	4810 <readstat_copy@plt>
   258fc:	b	25bb8 <readstat_parse_sas_commands+0x690>
   25900:	ldr	r0, [sp, #100]	; 0x64
   25904:	str	r0, [sp, #48]	; 0x30
   25908:	ldr	r0, [sp, #92]	; 0x5c
   2590c:	str	r0, [sp, #44]	; 0x2c
   25910:	b	25bb8 <readstat_parse_sas_commands+0x690>
   25914:	ldr	r0, [sp, #100]	; 0x64
   25918:	sub	r0, r0, #1
   2591c:	b	25924 <readstat_parse_sas_commands+0x3fc>
   25920:	mov	r0, #0
   25924:	str	r0, [sp, #68]	; 0x44
   25928:	b	25bb8 <readstat_parse_sas_commands+0x690>
   2592c:	mov	r0, #0
   25930:	str	r0, [sp, #100]	; 0x64
   25934:	mov	r0, #0
   25938:	b	25bb4 <readstat_parse_sas_commands+0x68c>
   2593c:	ldr	r2, [sp, #92]	; 0x5c
   25940:	ldr	r1, [sp, #100]	; 0x64
   25944:	mov	r0, #10
   25948:	umull	r0, r1, r1, r0
   2594c:	add	r2, r2, r2, lsl #2
   25950:	add	r1, r1, r2, lsl #1
   25954:	ldrb	r2, [sl]
   25958:	sub	r2, r2, #48	; 0x30
   2595c:	adds	r0, r0, r2
   25960:	str	r0, [sp, #100]	; 0x64
   25964:	adc	r0, r1, r2, asr #31
   25968:	b	25bb4 <readstat_parse_sas_commands+0x68c>
   2596c:	ldrb	r1, [sl]
   25970:	sub	r0, r1, #48	; 0x30
   25974:	uxtb	r2, r0
   25978:	cmp	r2, #9
   2597c:	bls	25b98 <readstat_parse_sas_commands+0x670>
   25980:	sub	r0, r1, #65	; 0x41
   25984:	uxtb	r0, r0
   25988:	cmp	r0, #5
   2598c:	bhi	25b84 <readstat_parse_sas_commands+0x65c>
   25990:	sub	r0, r1, #55	; 0x37
   25994:	b	25b98 <readstat_parse_sas_commands+0x670>
   25998:	ldr	r0, [sp, #100]	; 0x64
   2599c:	sub	r0, r0, #1
   259a0:	str	r0, [sp, #60]	; 0x3c
   259a4:	mov	r0, #1
   259a8:	str	r0, [sp, #76]	; 0x4c
   259ac:	b	25bb8 <readstat_parse_sas_commands+0x690>
   259b0:	ldr	r0, [sp, #100]	; 0x64
   259b4:	ldr	r1, [sp, #60]	; 0x3c
   259b8:	sub	r0, r0, r1
   259bc:	str	r0, [sp, #76]	; 0x4c
   259c0:	b	25bb8 <readstat_parse_sas_commands+0x690>
   259c4:	mov	r0, #0
   259c8:	str	r0, [sp, #64]	; 0x40
   259cc:	b	25bb8 <readstat_parse_sas_commands+0x690>
   259d0:	mov	r0, #5
   259d4:	str	r0, [sp, #64]	; 0x40
   259d8:	b	25bb8 <readstat_parse_sas_commands+0x690>
   259dc:	add	lr, sp, #1024	; 0x400
   259e0:	mov	r1, #1024	; 0x400
   259e4:	add	r0, lr, #108	; 0x6c
   259e8:	b	25a10 <readstat_parse_sas_commands+0x4e8>
   259ec:	sub	r0, fp, #140	; 0x8c
   259f0:	b	25a0c <readstat_parse_sas_commands+0x4e4>
   259f4:	sub	r0, fp, #172	; 0xac
   259f8:	b	25a0c <readstat_parse_sas_commands+0x4e4>
   259fc:	nop	{0}
   25a00:	.word	0x00000000
   25a04:	.word	0x7ff80000
   25a08:	sub	r0, fp, #108	; 0x6c
   25a0c:	mov	r1, #32
   25a10:	ldr	r2, [sp, #96]	; 0x60
   25a14:	ldr	r3, [sp, #88]	; 0x58
   25a18:	bl	4810 <readstat_copy@plt>
   25a1c:	b	25bb8 <readstat_parse_sas_commands+0x690>
   25a20:	ldr	r1, [pc, #880]	; 25d98 <readstat_parse_sas_commands+0x870>
   25a24:	sub	r0, fp, #108	; 0x6c
   25a28:	add	r1, pc, r1
   25a2c:	bl	49b4 <strcasecmp@plt>
   25a30:	cmp	r0, #0
   25a34:	ldreq	r0, [sp, #100]	; 0x64
   25a38:	streq	r0, [r4, #264]	; 0x108
   25a3c:	sub	r0, fp, #108	; 0x6c
   25a40:	ldr	r1, [pc, #852]	; 25d9c <readstat_parse_sas_commands+0x874>
   25a44:	add	r1, pc, r1
   25a48:	bl	49b4 <strcasecmp@plt>
   25a4c:	cmp	r0, #0
   25a50:	bne	25bb8 <readstat_parse_sas_commands+0x690>
   25a54:	ldr	r1, [sp, #100]	; 0x64
   25a58:	ldr	r0, [sp, #92]	; 0x5c
   25a5c:	orrs	r0, r1, r0
   25a60:	ldrb	r0, [sp, #1132]	; 0x46c
   25a64:	movne	r0, r1
   25a68:	strb	r0, [r4, #272]	; 0x110
   25a6c:	b	25bb8 <readstat_parse_sas_commands+0x690>
   25a70:	sub	r1, fp, #76	; 0x4c
   25a74:	mov	r0, r4
   25a78:	bl	4a50 <readstat_schema_find_or_create_entry@plt>
   25a7c:	ldr	r1, [sp, #64]	; 0x40
   25a80:	str	r1, [r0, #16]
   25a84:	ldr	r1, [sp, #68]	; 0x44
   25a88:	str	r1, [r0]
   25a8c:	ldr	r1, [sp, #60]	; 0x3c
   25a90:	str	r1, [r0, #4]
   25a94:	ldr	r1, [sp, #76]	; 0x4c
   25a98:	str	r1, [r0, #8]
   25a9c:	b	25bb8 <readstat_parse_sas_commands+0x690>
   25aa0:	sub	r1, fp, #76	; 0x4c
   25aa4:	mov	r0, r4
   25aa8:	bl	4a50 <readstat_schema_find_or_create_entry@plt>
   25aac:	add	lr, sp, #1024	; 0x400
   25ab0:	add	r0, r0, #580	; 0x244
   25ab4:	mov	r1, #1024	; 0x400
   25ab8:	mov	r3, #1024	; 0x400
   25abc:	add	r2, lr, #108	; 0x6c
   25ac0:	bl	4810 <readstat_copy@plt>
   25ac4:	b	25bb8 <readstat_parse_sas_commands+0x690>
   25ac8:	ldr	r2, [sp, #48]	; 0x30
   25acc:	add	lr, sp, #1024	; 0x400
   25ad0:	sub	r1, fp, #172	; 0xac
   25ad4:	vorr	d0, d8, d8
   25ad8:	add	r0, lr, #108	; 0x6c
   25adc:	str	r1, [sp, #16]
   25ae0:	sub	r1, fp, #140	; 0x8c
   25ae4:	str	r0, [sp, #20]
   25ae8:	ldr	r0, [sp, #52]	; 0x34
   25aec:	str	r2, [sp]
   25af0:	ldr	r2, [sp, #44]	; 0x2c
   25af4:	str	r0, [sp, #24]
   25af8:	ldr	r0, [sp, #40]	; 0x28
   25afc:	str	r2, [sp, #4]
   25b00:	ldr	r2, [sp, #100]	; 0x64
   25b04:	str	r2, [sp, #8]
   25b08:	ldr	r2, [sp, #92]	; 0x5c
   25b0c:	str	r2, [sp, #12]
   25b10:	ldr	r2, [sp, #84]	; 0x54
   25b14:	bl	49d8 <submit_value_label@plt>
   25b18:	cmp	r0, #0
   25b1c:	beq	25bb8 <readstat_parse_sas_commands+0x690>
   25b20:	b	25d64 <readstat_parse_sas_commands+0x83c>
   25b24:	add	r9, r9, #1
   25b28:	mov	r8, sl
   25b2c:	b	25bb8 <readstat_parse_sas_commands+0x690>
   25b30:	ldr	r0, [sp, #100]	; 0x64
   25b34:	ldr	r1, [sp, #92]	; 0x5c
   25b38:	rsbs	r0, r0, #0
   25b3c:	rsc	r1, r1, #0
   25b40:	b	25b4c <readstat_parse_sas_commands+0x624>
   25b44:	ldr	r0, [sp, #100]	; 0x64
   25b48:	ldr	r1, [sp, #92]	; 0x5c
   25b4c:	bl	28754 <__aeabi_ul2d>
   25b50:	mov	r2, #0
   25b54:	vmov	d8, r0, r1
   25b58:	str	r2, [sp, #84]	; 0x54
   25b5c:	b	25bb8 <readstat_parse_sas_commands+0x690>
   25b60:	mov	r0, #2
   25b64:	str	r0, [sp, #84]	; 0x54
   25b68:	b	25bb8 <readstat_parse_sas_commands+0x690>
   25b6c:	mov	r0, #3
   25b70:	str	r0, [sp, #84]	; 0x54
   25b74:	b	25bb8 <readstat_parse_sas_commands+0x690>
   25b78:	ldr	r0, [sp, #100]	; 0x64
   25b7c:	str	r0, [sp, #76]	; 0x4c
   25b80:	b	25bb8 <readstat_parse_sas_commands+0x690>
   25b84:	sub	r0, r1, #97	; 0x61
   25b88:	uxtb	r2, r0
   25b8c:	mov	r0, #0
   25b90:	cmp	r2, #6
   25b94:	subcc	r0, r1, #87	; 0x57
   25b98:	ldr	r1, [sp, #92]	; 0x5c
   25b9c:	ldr	r2, [sp, #100]	; 0x64
   25ba0:	lsl	r1, r1, #4
   25ba4:	orr	r1, r1, r2, lsr #28
   25ba8:	adds	r2, r0, r2, lsl #4
   25bac:	adc	r0, r1, r0, asr #31
   25bb0:	str	r2, [sp, #100]	; 0x64
   25bb4:	str	r0, [sp, #92]	; 0x5c
   25bb8:	add	r7, r7, #1
   25bbc:	adds	r6, r6, #1
   25bc0:	bne	257e8 <readstat_parse_sas_commands+0x2c0>
   25bc4:	ldr	r0, [pc, #468]	; 25da0 <readstat_parse_sas_commands+0x878>
   25bc8:	ldr	r1, [sp, #80]	; 0x50
   25bcc:	add	r0, pc, r0
   25bd0:	add	r0, r0, r1, lsl #1
   25bd4:	ldrsh	r0, [r0]
   25bd8:	uxth	r1, r0
   25bdc:	cmp	r1, #0
   25be0:	beq	25ca8 <readstat_parse_sas_commands+0x780>
   25be4:	ldr	r7, [sp, #56]	; 0x38
   25be8:	add	sl, sl, #1
   25bec:	cmp	sl, r7
   25bf0:	bne	25674 <readstat_parse_sas_commands+0x14c>
   25bf4:	mov	sl, r7
   25bf8:	b	25c30 <readstat_parse_sas_commands+0x708>
   25bfc:	cmp	r8, #0
   25c00:	mov	r4, #0
   25c04:	movne	r0, #1
   25c08:	strne	r0, [r8]
   25c0c:	b	25d50 <readstat_parse_sas_commands+0x828>
   25c10:	mov	r5, #15
   25c14:	mov	r4, #0
   25c18:	b	25d1c <readstat_parse_sas_commands+0x7f4>
   25c1c:	mov	r5, #3
   25c20:	mov	r4, r0
   25c24:	b	25d1c <readstat_parse_sas_commands+0x7f4>
   25c28:	movw	r0, #1094	; 0x446
   25c2c:	mov	r8, sl
   25c30:	ldr	r4, [sp, #72]	; 0x48
   25c34:	ldr	r1, [pc, #360]	; 25da4 <readstat_parse_sas_commands+0x87c>
   25c38:	ldr	r3, [pc, #360]	; 25da8 <readstat_parse_sas_commands+0x880>
   25c3c:	add	r1, pc, r1
   25c40:	add	r3, pc, r3
   25c44:	ldrb	r1, [r1, r0]
   25c48:	ldrb	r2, [r3, r1]
   25c4c:	cmp	r2, #0
   25c50:	beq	25c78 <readstat_parse_sas_commands+0x750>
   25c54:	add	r1, r3, r1
   25c58:	rsb	r2, r2, #0
   25c5c:	add	r1, r1, #1
   25c60:	ldrb	r3, [r1], #1
   25c64:	cmp	r3, #22
   25c68:	moveq	r8, r7
   25c6c:	addeq	r9, r9, #1
   25c70:	adds	r2, r2, #1
   25c74:	bne	25c60 <readstat_parse_sas_commands+0x738>
   25c78:	movw	r1, #1093	; 0x445
   25c7c:	cmp	r0, r1
   25c80:	ble	25cac <readstat_parse_sas_commands+0x784>
   25c84:	ldr	r7, [sp, #40]	; 0x28
   25c88:	ldr	r2, [sp, #52]	; 0x34
   25c8c:	mov	r1, r4
   25c90:	mov	r0, r7
   25c94:	bl	48d0 <submit_columns@plt>
   25c98:	ldr	sl, [sp, #32]
   25c9c:	ldr	r8, [sp, #36]	; 0x24
   25ca0:	mov	r5, r0
   25ca4:	b	25d1c <readstat_parse_sas_commands+0x7f4>
   25ca8:	ldr	r7, [sp, #56]	; 0x38
   25cac:	cmp	sl, r7
   25cb0:	beq	25ce0 <readstat_parse_sas_commands+0x7b8>
   25cb4:	ldrb	r0, [sl], #1
   25cb8:	add	r3, r9, #1
   25cbc:	sub	r1, sl, r8
   25cc0:	str	r0, [sp, #4]
   25cc4:	add	r0, sp, #104	; 0x68
   25cc8:	str	r1, [sp]
   25ccc:	mov	r1, #1024	; 0x400
   25cd0:	ldr	r2, [pc, #216]	; 25db0 <readstat_parse_sas_commands+0x888>
   25cd4:	add	r2, pc, r2
   25cd8:	bl	4bdc <snprintf@plt>
   25cdc:	b	25cf4 <readstat_parse_sas_commands+0x7cc>
   25ce0:	ldr	r1, [pc, #196]	; 25dac <readstat_parse_sas_commands+0x884>
   25ce4:	add	r0, sp, #104	; 0x68
   25ce8:	mov	r2, #66	; 0x42
   25cec:	add	r1, pc, r1
   25cf0:	bl	48b8 <memcpy@plt>
   25cf4:	ldr	r7, [sp, #40]	; 0x28
   25cf8:	ldr	r8, [sp, #36]	; 0x24
   25cfc:	ldr	sl, [sp, #32]
   25d00:	ldr	r2, [r7, #24]
   25d04:	cmp	r2, #0
   25d08:	beq	25d18 <readstat_parse_sas_commands+0x7f0>
   25d0c:	ldr	r1, [sp, #52]	; 0x34
   25d10:	add	r0, sp, #104	; 0x68
   25d14:	blx	r2
   25d18:	mov	r5, #5
   25d1c:	ldr	r0, [r7, #32]
   25d20:	ldr	r1, [r0, #4]
   25d24:	ldr	r0, [r0, #20]
   25d28:	blx	r1
   25d2c:	mov	r0, sl
   25d30:	bl	4864 <free@plt>
   25d34:	cmp	r5, #0
   25d38:	beq	25d50 <readstat_parse_sas_commands+0x828>
   25d3c:	cmp	r8, #0
   25d40:	mov	r0, r4
   25d44:	strne	r5, [r8]
   25d48:	bl	4948 <readstat_schema_free@plt>
   25d4c:	mov	r4, #0
   25d50:	mov	r0, r4
   25d54:	sub	sp, fp, #40	; 0x28
   25d58:	vpop	{d8}
   25d5c:	add	sp, sp, #4
   25d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25d64:	ldr	r8, [sp, #36]	; 0x24
   25d68:	ldr	r7, [sp, #40]	; 0x28
   25d6c:	ldr	sl, [sp, #32]
   25d70:	mov	r5, r0
   25d74:	b	25d1c <readstat_parse_sas_commands+0x7f4>
   25d78:	.word	0x00008732
   25d7c:	.word	0x000075fa
   25d80:	.word	0x00006080
   25d84:	.word	0x00007e72
   25d88:	.word	0x0000d344
   25d8c:	.word	0x0000cdc5
   25d90:	.word	0x0000cd95
   25d94:	.word	0x0000b716
   25d98:	.word	0x0000d47e
   25d9c:	.word	0x0000d46b
   25da0:	.word	0x00008628
   25da4:	.word	0x0000c9d6
   25da8:	.word	0x0000c90d
   25dac:	.word	0x0000d20c
   25db0:	.word	0x0000d1df
   25db4:	.word	0x0000cdad

00025db8 <readstat_parse_spss_commands>:
   25db8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25dbc:	add	fp, sp, #28
   25dc0:	sub	sp, sp, #4
   25dc4:	vpush	{d8}
   25dc8:	sub	sp, sp, #216	; 0xd8
   25dcc:	sub	sp, sp, #2048	; 0x800
   25dd0:	mov	r7, r0
   25dd4:	ldr	r0, [r0, #32]
   25dd8:	mov	r8, r3
   25ddc:	str	r2, [sp, #52]	; 0x34
   25de0:	mov	r2, r1
   25de4:	ldr	r3, [r0]
   25de8:	ldr	r1, [r0, #20]
   25dec:	mov	r0, r2
   25df0:	blx	r3
   25df4:	cmn	r0, #1
   25df8:	beq	26514 <readstat_parse_spss_commands+0x75c>
   25dfc:	ldr	r0, [r7, #32]
   25e00:	mov	r1, #2
   25e04:	mov	r6, #0
   25e08:	ldr	r3, [r0, #8]
   25e0c:	ldr	r2, [r0, #20]
   25e10:	mov	r0, #0
   25e14:	blx	r3
   25e18:	cmn	r0, #1
   25e1c:	beq	26528 <readstat_parse_spss_commands+0x770>
   25e20:	mov	r4, r0
   25e24:	ldr	r0, [r7, #32]
   25e28:	mov	r1, #0
   25e2c:	ldr	r3, [r0, #8]
   25e30:	ldr	r2, [r0, #20]
   25e34:	mov	r0, #0
   25e38:	str	r0, [sp, #80]	; 0x50
   25e3c:	mov	r0, #0
   25e40:	blx	r3
   25e44:	mov	r0, r4
   25e48:	bl	4a74 <malloc@plt>
   25e4c:	mov	r6, r0
   25e50:	ldr	r0, [r7, #32]
   25e54:	mov	r1, r4
   25e58:	ldr	r3, [r0, #12]
   25e5c:	ldr	r2, [r0, #20]
   25e60:	mov	r0, r6
   25e64:	blx	r3
   25e68:	mov	r0, #1
   25e6c:	mov	r1, #280	; 0x118
   25e70:	mov	r5, #1
   25e74:	bl	472c <calloc@plt>
   25e78:	mov	sl, r0
   25e7c:	cmp	r0, #0
   25e80:	beq	26534 <readstat_parse_spss_commands+0x77c>
   25e84:	add	r0, r6, r4
   25e88:	cmp	r4, #0
   25e8c:	str	r7, [sp, #40]	; 0x28
   25e90:	str	r8, [sp, #36]	; 0x24
   25e94:	str	r5, [sl, #256]	; 0x100
   25e98:	str	r6, [sp, #32]
   25e9c:	str	r0, [sp, #76]	; 0x4c
   25ea0:	beq	2653c <readstat_parse_spss_commands+0x784>
   25ea4:	mov	r0, #0
   25ea8:	vldr	d8, [pc, #992]	; 26290 <readstat_parse_spss_commands+0x4d8>
   25eac:	mov	r5, #628	; 0x274
   25eb0:	mov	r8, r6
   25eb4:	str	r6, [sp, #56]	; 0x38
   25eb8:	str	r0, [sp, #96]	; 0x60
   25ebc:	mov	r0, #5
   25ec0:	str	r0, [sp, #100]	; 0x64
   25ec4:	mov	r0, #0
   25ec8:	str	r0, [sp, #84]	; 0x54
   25ecc:	mov	r0, #0
   25ed0:	str	r0, [sp, #48]	; 0x30
   25ed4:	mov	r0, #0
   25ed8:	str	r0, [sp, #44]	; 0x2c
   25edc:	mov	r0, #0
   25ee0:	str	r0, [sp, #108]	; 0x6c
   25ee4:	mov	r0, #0
   25ee8:	str	r0, [sp, #92]	; 0x5c
   25eec:	mov	r0, #0
   25ef0:	str	r0, [sp, #68]	; 0x44
   25ef4:	mov	r0, #0
   25ef8:	str	r0, [sp, #60]	; 0x3c
   25efc:	mov	r0, #0
   25f00:	str	r0, [sp, #80]	; 0x50
   25f04:	mov	r0, #0
   25f08:	str	r0, [sp, #72]	; 0x48
   25f0c:	mov	r0, #0
   25f10:	str	r0, [sp, #88]	; 0x58
   25f14:	mov	r0, #0
   25f18:	str	r0, [sp, #64]	; 0x40
   25f1c:	mov	r0, #0
   25f20:	str	r0, [sp, #104]	; 0x68
   25f24:	ldr	r0, [pc, #1996]	; 266f8 <readstat_parse_spss_commands+0x940>
   25f28:	add	r0, pc, r0
   25f2c:	ldrb	r1, [r0, r5]
   25f30:	ldr	r0, [pc, #1988]	; 266fc <readstat_parse_spss_commands+0x944>
   25f34:	ldr	r2, [pc, #1988]	; 26700 <readstat_parse_spss_commands+0x948>
   25f38:	add	r0, pc, r0
   25f3c:	add	r2, pc, r2
   25f40:	cmp	r1, #0
   25f44:	add	r0, r0, r5, lsl #1
   25f48:	ldrsh	r0, [r0]
   25f4c:	add	r7, r2, r0
   25f50:	ldr	r0, [pc, #1964]	; 26704 <readstat_parse_spss_commands+0x94c>
   25f54:	add	r0, pc, r0
   25f58:	add	r0, r0, r5, lsl #1
   25f5c:	ldrsh	r9, [r0]
   25f60:	beq	25fb8 <readstat_parse_spss_commands+0x200>
   25f64:	add	ip, r7, r1
   25f68:	sub	r3, ip, #1
   25f6c:	cmp	r3, r7
   25f70:	bcc	25fb0 <readstat_parse_spss_commands+0x1f8>
   25f74:	ldrb	r6, [r8]
   25f78:	mov	r2, r7
   25f7c:	sub	r4, r3, r2
   25f80:	mov	r0, r2
   25f84:	ldrb	r4, [r0, r4, asr #1]!
   25f88:	cmp	r6, r4
   25f8c:	bcs	25fa0 <readstat_parse_spss_commands+0x1e8>
   25f90:	sub	r3, r0, #1
   25f94:	cmp	r3, r2
   25f98:	bcs	25f7c <readstat_parse_spss_commands+0x1c4>
   25f9c:	b	25fb0 <readstat_parse_spss_commands+0x1f8>
   25fa0:	bls	26030 <readstat_parse_spss_commands+0x278>
   25fa4:	add	r2, r0, #1
   25fa8:	cmp	r3, r2
   25fac:	bcs	25f7c <readstat_parse_spss_commands+0x1c4>
   25fb0:	add	r9, r1, r9
   25fb4:	b	25fbc <readstat_parse_spss_commands+0x204>
   25fb8:	mov	ip, r7
   25fbc:	ldr	r0, [pc, #1860]	; 26708 <readstat_parse_spss_commands+0x950>
   25fc0:	mvn	r6, #1
   25fc4:	add	r0, pc, r0
   25fc8:	ldrb	r1, [r0, r5]
   25fcc:	cmp	r1, #0
   25fd0:	beq	26048 <readstat_parse_spss_commands+0x290>
   25fd4:	add	r0, ip, r1, lsl #1
   25fd8:	sub	r2, r0, #2
   25fdc:	cmp	r2, ip
   25fe0:	bcc	26044 <readstat_parse_spss_commands+0x28c>
   25fe4:	ldrb	r3, [r8]
   25fe8:	mov	r4, ip
   25fec:	sub	r0, r2, r4
   25ff0:	and	r7, r6, r0, asr #1
   25ff4:	mov	r0, r4
   25ff8:	ldrb	r7, [r0, r7]!
   25ffc:	cmp	r3, r7
   26000:	bcs	26014 <readstat_parse_spss_commands+0x25c>
   26004:	sub	r2, r0, #2
   26008:	cmp	r2, r4
   2600c:	bcs	25fec <readstat_parse_spss_commands+0x234>
   26010:	b	26044 <readstat_parse_spss_commands+0x28c>
   26014:	ldrb	r7, [r0, #1]
   26018:	cmp	r3, r7
   2601c:	bls	2603c <readstat_parse_spss_commands+0x284>
   26020:	add	r4, r0, #2
   26024:	cmp	r2, r4
   26028:	bcs	25fec <readstat_parse_spss_commands+0x234>
   2602c:	b	26044 <readstat_parse_spss_commands+0x28c>
   26030:	sub	r1, r9, r7
   26034:	add	r9, r1, r0
   26038:	b	26048 <readstat_parse_spss_commands+0x290>
   2603c:	sub	r0, r0, ip
   26040:	asr	r1, r0, #1
   26044:	add	r9, r1, r9
   26048:	ldr	r0, [pc, #1724]	; 2670c <readstat_parse_spss_commands+0x954>
   2604c:	add	r0, pc, r0
   26050:	ldrb	r0, [r0, r9]
   26054:	cmp	r0, #0
   26058:	beq	264e0 <readstat_parse_spss_commands+0x728>
   2605c:	ldr	r4, [pc, #1708]	; 26710 <readstat_parse_spss_commands+0x958>
   26060:	add	r4, pc, r4
   26064:	ldrb	r6, [r4, r0]!
   26068:	cmp	r6, #0
   2606c:	beq	264e0 <readstat_parse_spss_commands+0x728>
   26070:	ldrb	r0, [r4, #1]!
   26074:	cmp	r0, #35	; 0x23
   26078:	bhi	2641c <readstat_parse_spss_commands+0x664>
   2607c:	add	r1, pc, #4
   26080:	ldr	r0, [r1, r0, lsl #2]
   26084:	add	pc, r1, r0
   26088:	.word	0x000000e0
   2608c:	.word	0x000000fc
   26090:	.word	0x00000138
   26094:	.word	0x00000158
   26098:	.word	0x00000174
   2609c:	.word	0x00000184
   260a0:	.word	0x000001a4
   260a4:	.word	0x000001ac
   260a8:	.word	0x000001cc
   260ac:	.word	0x00000210
   260b0:	.word	0x00000240
   260b4:	.word	0x00000254
   260b8:	.word	0x00000270
   260bc:	.word	0x000002b4
   260c0:	.word	0x00000320
   260c4:	.word	0x000000d0
   260c8:	.word	0x000000a4
   260cc:	.word	0x000000d0
   260d0:	.word	0x000000a4
   260d4:	.word	0x000003a0
   260d8:	.word	0x000003bc
   260dc:	.word	0x000000a4
   260e0:	.word	0x000000bc
   260e4:	.word	0x000000bc
   260e8:	.word	0x00000090
   260ec:	.word	0x00000090
   260f0:	.word	0x000000bc
   260f4:	.word	0x000003cc
   260f8:	.word	0x00000090
   260fc:	.word	0x00000090
   26100:	.word	0x000003e4
   26104:	.word	0x000003ec
   26108:	.word	0x00000400
   2610c:	.word	0x00000424
   26110:	.word	0x00000440
   26114:	.word	0x00000448
   26118:	mov	r0, #5
   2611c:	str	r0, [sp, #100]	; 0x64
   26120:	subs	r6, r6, #1
   26124:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26128:	b	264e0 <readstat_parse_spss_commands+0x728>
   2612c:	ldr	r0, [sp, #104]	; 0x68
   26130:	sub	r0, r8, r0
   26134:	str	r0, [sp, #96]	; 0x60
   26138:	subs	r6, r6, #1
   2613c:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26140:	b	264e0 <readstat_parse_spss_commands+0x728>
   26144:	mov	r0, #0
   26148:	str	r0, [sp, #100]	; 0x64
   2614c:	subs	r6, r6, #1
   26150:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26154:	b	264e0 <readstat_parse_spss_commands+0x728>
   26158:	str	r8, [sp, #104]	; 0x68
   2615c:	subs	r6, r6, #1
   26160:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26164:	b	264e0 <readstat_parse_spss_commands+0x728>
   26168:	mov	r0, #0
   2616c:	str	r0, [sp, #108]	; 0x6c
   26170:	mov	r0, #0
   26174:	str	r0, [sp, #92]	; 0x5c
   26178:	subs	r6, r6, #1
   2617c:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26180:	b	264e0 <readstat_parse_spss_commands+0x728>
   26184:	ldr	r2, [sp, #92]	; 0x5c
   26188:	ldr	r1, [sp, #108]	; 0x6c
   2618c:	mov	r0, #10
   26190:	umull	r0, r1, r1, r0
   26194:	add	r2, r2, r2, lsl #2
   26198:	add	r1, r1, r2, lsl #1
   2619c:	ldrb	r2, [r8]
   261a0:	sub	r2, r2, #48	; 0x30
   261a4:	adds	r0, r0, r2
   261a8:	str	r0, [sp, #108]	; 0x6c
   261ac:	adc	r0, r1, r2, asr #31
   261b0:	str	r0, [sp, #92]	; 0x5c
   261b4:	subs	r6, r6, #1
   261b8:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   261bc:	b	264e0 <readstat_parse_spss_commands+0x728>
   261c0:	ldr	r0, [sp, #108]	; 0x6c
   261c4:	sub	r0, r0, #1
   261c8:	str	r0, [sp, #68]	; 0x44
   261cc:	mov	r0, #1
   261d0:	str	r0, [sp, #80]	; 0x50
   261d4:	subs	r6, r6, #1
   261d8:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   261dc:	b	264e0 <readstat_parse_spss_commands+0x728>
   261e0:	ldr	r0, [sp, #68]	; 0x44
   261e4:	ldr	r1, [sp, #108]	; 0x6c
   261e8:	sub	r0, r1, r0
   261ec:	str	r0, [sp, #80]	; 0x50
   261f0:	subs	r6, r6, #1
   261f4:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   261f8:	b	264e0 <readstat_parse_spss_commands+0x728>
   261fc:	add	lr, sp, #1024	; 0x400
   26200:	mov	r1, #1024	; 0x400
   26204:	add	r0, lr, #116	; 0x74
   26208:	b	26214 <readstat_parse_spss_commands+0x45c>
   2620c:	sub	r0, fp, #140	; 0x8c
   26210:	mov	r1, #32
   26214:	ldr	r2, [sp, #104]	; 0x68
   26218:	ldr	r3, [sp, #96]	; 0x60
   2621c:	bl	49c0 <readstat_copy_quoted@plt>
   26220:	subs	r6, r6, #1
   26224:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26228:	b	264e0 <readstat_parse_spss_commands+0x728>
   2622c:	sub	r0, fp, #76	; 0x4c
   26230:	b	26238 <readstat_parse_spss_commands+0x480>
   26234:	sub	r0, fp, #108	; 0x6c
   26238:	ldr	r2, [sp, #104]	; 0x68
   2623c:	ldr	r3, [sp, #96]	; 0x60
   26240:	mov	r1, #32
   26244:	bl	4810 <readstat_copy@plt>
   26248:	subs	r6, r6, #1
   2624c:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26250:	b	264e0 <readstat_parse_spss_commands+0x728>
   26254:	sub	r1, fp, #76	; 0x4c
   26258:	mov	r0, sl
   2625c:	bl	4a50 <readstat_schema_find_or_create_entry@plt>
   26260:	ldr	r1, [sp, #100]	; 0x64
   26264:	str	r1, [r0, #16]
   26268:	ldr	r1, [sp, #60]	; 0x3c
   2626c:	str	r1, [r0]
   26270:	ldr	r1, [sp, #68]	; 0x44
   26274:	str	r1, [r0, #4]
   26278:	ldr	r1, [sp, #80]	; 0x50
   2627c:	str	r1, [r0, #8]
   26280:	subs	r6, r6, #1
   26284:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26288:	b	264e0 <readstat_parse_spss_commands+0x728>
   2628c:	nop	{0}
   26290:	.word	0x00000000
   26294:	.word	0x7ff80000
   26298:	sub	r1, fp, #76	; 0x4c
   2629c:	mov	r0, sl
   262a0:	bl	4a50 <readstat_schema_find_or_create_entry@plt>
   262a4:	add	lr, sp, #1024	; 0x400
   262a8:	add	r0, r0, #580	; 0x244
   262ac:	mov	r1, #1024	; 0x400
   262b0:	mov	r3, #1024	; 0x400
   262b4:	add	r2, lr, #116	; 0x74
   262b8:	bl	4810 <readstat_copy@plt>
   262bc:	subs	r6, r6, #1
   262c0:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   262c4:	b	264e0 <readstat_parse_spss_commands+0x728>
   262c8:	mov	r0, #0
   262cc:	str	r0, [sp, #72]	; 0x48
   262d0:	subs	r6, r6, #1
   262d4:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   262d8:	b	264e0 <readstat_parse_spss_commands+0x728>
   262dc:	ldr	r0, [sp, #72]	; 0x48
   262e0:	cmp	r0, #1024	; 0x400
   262e4:	addcc	r0, r0, #1
   262e8:	str	r0, [sp, #72]	; 0x48
   262ec:	subs	r6, r6, #1
   262f0:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   262f4:	b	264e0 <readstat_parse_spss_commands+0x728>
   262f8:	ldr	r1, [pc, #1044]	; 26714 <readstat_parse_spss_commands+0x95c>
   262fc:	sub	r0, fp, #108	; 0x6c
   26300:	add	r1, pc, r1
   26304:	bl	49b4 <strcasecmp@plt>
   26308:	cmp	r0, #0
   2630c:	ldreq	r0, [sp, #108]	; 0x6c
   26310:	streq	r0, [sl, #264]	; 0x108
   26314:	sub	r0, fp, #108	; 0x6c
   26318:	ldr	r1, [pc, #1016]	; 26718 <readstat_parse_spss_commands+0x960>
   2631c:	add	r1, pc, r1
   26320:	bl	49b4 <strcasecmp@plt>
   26324:	cmp	r0, #0
   26328:	ldrbeq	r0, [sp, #1140]	; 0x474
   2632c:	strbeq	r0, [sl, #272]	; 0x110
   26330:	subs	r6, r6, #1
   26334:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26338:	b	264e0 <readstat_parse_spss_commands+0x728>
   2633c:	ldr	r2, [pc, #984]	; 2671c <readstat_parse_spss_commands+0x964>
   26340:	ldr	r3, [sp, #64]	; 0x40
   26344:	add	r0, sp, #112	; 0x70
   26348:	mov	r1, #256	; 0x100
   2634c:	add	r2, pc, r2
   26350:	bl	4bdc <snprintf@plt>
   26354:	ldr	r0, [sp, #72]	; 0x48
   26358:	cmp	r0, #1
   2635c:	blt	26390 <readstat_parse_spss_commands+0x5d8>
   26360:	ldr	r5, [sp, #72]	; 0x48
   26364:	sub	r1, fp, #76	; 0x4c
   26368:	mov	r0, sl
   2636c:	bl	4a50 <readstat_schema_find_or_create_entry@plt>
   26370:	movw	r1, #2168	; 0x878
   26374:	add	r2, sp, #112	; 0x70
   26378:	mov	r3, #256	; 0x100
   2637c:	add	r0, r0, r1
   26380:	mov	r1, #32
   26384:	bl	4810 <readstat_copy@plt>
   26388:	subs	r5, r5, #1
   2638c:	bne	26364 <readstat_parse_spss_commands+0x5ac>
   26390:	ldr	r0, [sp, #64]	; 0x40
   26394:	add	r0, r0, #1
   26398:	str	r0, [sp, #64]	; 0x40
   2639c:	subs	r6, r6, #1
   263a0:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   263a4:	b	264e0 <readstat_parse_spss_commands+0x728>
   263a8:	ldr	r2, [pc, #880]	; 26720 <readstat_parse_spss_commands+0x968>
   263ac:	ldr	r3, [sp, #64]	; 0x40
   263b0:	add	r5, sp, #112	; 0x70
   263b4:	mov	r1, #256	; 0x100
   263b8:	mov	r0, r5
   263bc:	add	r2, pc, r2
   263c0:	bl	4bdc <snprintf@plt>
   263c4:	ldr	r2, [sp, #48]	; 0x30
   263c8:	add	lr, sp, #1024	; 0x400
   263cc:	sub	r1, fp, #140	; 0x8c
   263d0:	vorr	d0, d8, d8
   263d4:	add	r0, lr, #116	; 0x74
   263d8:	str	r1, [sp, #16]
   263dc:	mov	r1, r5
   263e0:	str	r0, [sp, #20]
   263e4:	ldr	r0, [sp, #52]	; 0x34
   263e8:	str	r2, [sp]
   263ec:	ldr	r2, [sp, #44]	; 0x2c
   263f0:	str	r0, [sp, #24]
   263f4:	ldr	r0, [sp, #40]	; 0x28
   263f8:	str	r2, [sp, #4]
   263fc:	ldr	r2, [sp, #108]	; 0x6c
   26400:	str	r2, [sp, #8]
   26404:	ldr	r2, [sp, #92]	; 0x5c
   26408:	str	r2, [sp, #12]
   2640c:	ldr	r2, [sp, #88]	; 0x58
   26410:	bl	49d8 <submit_value_label@plt>
   26414:	cmp	r0, #0
   26418:	bne	266a0 <readstat_parse_spss_commands+0x8e8>
   2641c:	subs	r6, r6, #1
   26420:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26424:	b	264e0 <readstat_parse_spss_commands+0x728>
   26428:	ldr	r0, [sp, #84]	; 0x54
   2642c:	str	r8, [sp, #56]	; 0x38
   26430:	add	r0, r0, #1
   26434:	str	r0, [sp, #84]	; 0x54
   26438:	subs	r6, r6, #1
   2643c:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26440:	b	264e0 <readstat_parse_spss_commands+0x728>
   26444:	str	r8, [sp, #104]	; 0x68
   26448:	subs	r6, r6, #1
   2644c:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26450:	b	264e0 <readstat_parse_spss_commands+0x728>
   26454:	ldr	r0, [sp, #108]	; 0x6c
   26458:	sub	r0, r0, #1
   2645c:	str	r0, [sp, #60]	; 0x3c
   26460:	subs	r6, r6, #1
   26464:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   26468:	b	264e0 <readstat_parse_spss_commands+0x728>
   2646c:	mvn	r0, #0
   26470:	b	264d4 <readstat_parse_spss_commands+0x71c>
   26474:	ldr	r0, [sp, #108]	; 0x6c
   26478:	ldr	r1, [sp, #92]	; 0x5c
   2647c:	rsbs	r0, r0, #0
   26480:	rsc	r1, r1, #0
   26484:	b	26490 <readstat_parse_spss_commands+0x6d8>
   26488:	ldr	r0, [sp, #108]	; 0x6c
   2648c:	ldr	r1, [sp, #92]	; 0x5c
   26490:	bl	28754 <__aeabi_ul2d>
   26494:	mov	r2, #0
   26498:	vmov	d8, r0, r1
   2649c:	str	r2, [sp, #88]	; 0x58
   264a0:	subs	r6, r6, #1
   264a4:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   264a8:	b	264e0 <readstat_parse_spss_commands+0x728>
   264ac:	ldr	r0, [sp, #108]	; 0x6c
   264b0:	str	r0, [sp, #48]	; 0x30
   264b4:	ldr	r0, [sp, #92]	; 0x5c
   264b8:	str	r0, [sp, #44]	; 0x2c
   264bc:	subs	r6, r6, #1
   264c0:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   264c4:	b	264e0 <readstat_parse_spss_commands+0x728>
   264c8:	mov	r0, #2
   264cc:	b	264d4 <readstat_parse_spss_commands+0x71c>
   264d0:	mov	r0, #1
   264d4:	str	r0, [sp, #88]	; 0x58
   264d8:	subs	r6, r6, #1
   264dc:	bne	26070 <readstat_parse_spss_commands+0x2b8>
   264e0:	ldr	r0, [pc, #572]	; 26724 <readstat_parse_spss_commands+0x96c>
   264e4:	add	r0, pc, r0
   264e8:	add	r0, r0, r9, lsl #1
   264ec:	ldrsh	r5, [r0]
   264f0:	uxth	r0, r5
   264f4:	cmp	r0, #0
   264f8:	beq	26604 <readstat_parse_spss_commands+0x84c>
   264fc:	ldr	r0, [sp, #76]	; 0x4c
   26500:	add	r8, r8, #1
   26504:	cmp	r8, r0
   26508:	bne	25f24 <readstat_parse_spss_commands+0x16c>
   2650c:	ldr	r8, [sp, #76]	; 0x4c
   26510:	b	26568 <readstat_parse_spss_commands+0x7b0>
   26514:	cmp	r8, #0
   26518:	mov	sl, #0
   2651c:	movne	r0, #1
   26520:	strne	r0, [r8]
   26524:	b	266e4 <readstat_parse_spss_commands+0x92c>
   26528:	mov	r5, #15
   2652c:	mov	sl, #0
   26530:	b	266b0 <readstat_parse_spss_commands+0x8f8>
   26534:	mov	r5, #3
   26538:	b	266b0 <readstat_parse_spss_commands+0x8f8>
   2653c:	mov	r0, #5
   26540:	mov	r5, #628	; 0x274
   26544:	mov	r8, r6
   26548:	str	r6, [sp, #56]	; 0x38
   2654c:	str	r0, [sp, #100]	; 0x64
   26550:	mov	r0, #0
   26554:	str	r0, [sp, #60]	; 0x3c
   26558:	mov	r0, #0
   2655c:	str	r0, [sp, #68]	; 0x44
   26560:	mov	r0, #0
   26564:	str	r0, [sp, #84]	; 0x54
   26568:	ldr	r0, [pc, #440]	; 26728 <readstat_parse_spss_commands+0x970>
   2656c:	ldr	r2, [pc, #440]	; 2672c <readstat_parse_spss_commands+0x974>
   26570:	add	r0, pc, r0
   26574:	add	r2, pc, r2
   26578:	ldrb	r0, [r0, r5]
   2657c:	ldrb	r1, [r2, r0]
   26580:	cmp	r1, #0
   26584:	beq	265fc <readstat_parse_spss_commands+0x844>
   26588:	add	r0, r2, r0
   2658c:	rsb	r4, r1, #0
   26590:	sub	r9, fp, #76	; 0x4c
   26594:	add	r6, r0, #1
   26598:	ldrb	r0, [r6]
   2659c:	cmp	r0, #19
   265a0:	beq	265dc <readstat_parse_spss_commands+0x824>
   265a4:	cmp	r0, #8
   265a8:	bne	265f0 <readstat_parse_spss_commands+0x838>
   265ac:	mov	r0, sl
   265b0:	mov	r1, r9
   265b4:	bl	4a50 <readstat_schema_find_or_create_entry@plt>
   265b8:	ldr	r1, [sp, #100]	; 0x64
   265bc:	str	r1, [r0, #16]
   265c0:	ldr	r1, [sp, #60]	; 0x3c
   265c4:	str	r1, [r0]
   265c8:	ldr	r1, [sp, #68]	; 0x44
   265cc:	str	r1, [r0, #4]
   265d0:	ldr	r1, [sp, #80]	; 0x50
   265d4:	str	r1, [r0, #8]
   265d8:	b	265f0 <readstat_parse_spss_commands+0x838>
   265dc:	ldr	r0, [sp, #84]	; 0x54
   265e0:	add	r0, r0, #1
   265e4:	str	r0, [sp, #84]	; 0x54
   265e8:	ldr	r0, [sp, #76]	; 0x4c
   265ec:	str	r0, [sp, #56]	; 0x38
   265f0:	add	r6, r6, #1
   265f4:	adds	r4, r4, #1
   265f8:	bne	26598 <readstat_parse_spss_commands+0x7e0>
   265fc:	cmp	r5, #628	; 0x274
   26600:	bge	26644 <readstat_parse_spss_commands+0x88c>
   26604:	ldr	r0, [sp, #76]	; 0x4c
   26608:	cmp	r8, r0
   2660c:	beq	26660 <readstat_parse_spss_commands+0x8a8>
   26610:	ldr	r0, [sp, #56]	; 0x38
   26614:	mov	r1, #1024	; 0x400
   26618:	rsb	r0, r0, #1
   2661c:	ldrb	r0, [r8], r0
   26620:	str	r0, [sp, #4]
   26624:	str	r8, [sp]
   26628:	ldr	r0, [sp, #84]	; 0x54
   2662c:	ldr	r2, [pc, #256]	; 26734 <readstat_parse_spss_commands+0x97c>
   26630:	add	r3, r0, #1
   26634:	add	r0, sp, #112	; 0x70
   26638:	add	r2, pc, r2
   2663c:	bl	4bdc <snprintf@plt>
   26640:	b	26674 <readstat_parse_spss_commands+0x8bc>
   26644:	ldr	r7, [sp, #40]	; 0x28
   26648:	ldr	r2, [sp, #52]	; 0x34
   2664c:	mov	r1, sl
   26650:	mov	r0, r7
   26654:	bl	48d0 <submit_columns@plt>
   26658:	ldr	r8, [sp, #36]	; 0x24
   2665c:	b	266a8 <readstat_parse_spss_commands+0x8f0>
   26660:	ldr	r1, [pc, #200]	; 26730 <readstat_parse_spss_commands+0x978>
   26664:	add	r0, sp, #112	; 0x70
   26668:	mov	r2, #67	; 0x43
   2666c:	add	r1, pc, r1
   26670:	bl	48b8 <memcpy@plt>
   26674:	ldr	r7, [sp, #40]	; 0x28
   26678:	ldr	r8, [sp, #36]	; 0x24
   2667c:	ldr	r6, [sp, #32]
   26680:	ldr	r2, [r7, #24]
   26684:	cmp	r2, #0
   26688:	beq	26698 <readstat_parse_spss_commands+0x8e0>
   2668c:	ldr	r1, [sp, #52]	; 0x34
   26690:	add	r0, sp, #112	; 0x70
   26694:	blx	r2
   26698:	mov	r5, #5
   2669c:	b	266b0 <readstat_parse_spss_commands+0x8f8>
   266a0:	ldr	r8, [sp, #36]	; 0x24
   266a4:	ldr	r7, [sp, #40]	; 0x28
   266a8:	mov	r5, r0
   266ac:	ldr	r6, [sp, #32]
   266b0:	ldr	r0, [r7, #32]
   266b4:	ldr	r1, [r0, #4]
   266b8:	ldr	r0, [r0, #20]
   266bc:	blx	r1
   266c0:	mov	r0, r6
   266c4:	bl	4864 <free@plt>
   266c8:	cmp	r5, #0
   266cc:	beq	266e4 <readstat_parse_spss_commands+0x92c>
   266d0:	cmp	r8, #0
   266d4:	mov	r0, sl
   266d8:	strne	r5, [r8]
   266dc:	bl	4948 <readstat_schema_free@plt>
   266e0:	mov	sl, #0
   266e4:	mov	r0, sl
   266e8:	sub	sp, fp, #40	; 0x28
   266ec:	vpop	{d8}
   266f0:	add	sp, sp, #4
   266f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   266f8:	.word	0x0000e5ce
   266fc:	.word	0x0000dbde
   26700:	.word	0x0000cffe
   26704:	.word	0x0000e0b2
   26708:	.word	0x0000e7aa
   2670c:	.word	0x00010346
   26710:	.word	0x00011008
   26714:	.word	0x00011083
   26718:	.word	0x00011071
   2671c:	.word	0x000036c7
   26720:	.word	0x00003657
   26724:	.word	0x0000e502
   26728:	.word	0x00010b9b
   2672c:	.word	0x00010af4
   26730:	.word	0x00010d6c
   26734:	.word	0x00010d60

00026738 <readstat_schema_free>:
   26738:	cmp	r0, #0
   2673c:	bxeq	lr
   26740:	push	{r4, sl, fp, lr}
   26744:	add	fp, sp, #8
   26748:	mov	r4, r0
   2674c:	ldr	r0, [r0, #276]	; 0x114
   26750:	bl	4864 <free@plt>
   26754:	mov	r0, r4
   26758:	pop	{r4, sl, fp, lr}
   2675c:	b	4864 <free@plt>

00026760 <readstat_schema_find_or_create_entry>:
   26760:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26764:	add	fp, sp, #24
   26768:	ldr	r7, [r0, #268]	; 0x10c
   2676c:	mov	r5, r1
   26770:	mov	r9, r0
   26774:	cmp	r7, #0
   26778:	ble	267b0 <readstat_schema_find_or_create_entry+0x50>
   2677c:	ldr	r8, [r9, #276]	; 0x114
   26780:	mov	r4, #0
   26784:	mov	r6, r8
   26788:	add	r0, r6, #24
   2678c:	mov	r1, r5
   26790:	bl	47b0 <strcmp@plt>
   26794:	cmp	r0, #0
   26798:	beq	267b8 <readstat_schema_find_or_create_entry+0x58>
   2679c:	add	r4, r4, #1
   267a0:	add	r6, r6, #2208	; 0x8a0
   267a4:	cmp	r4, r7
   267a8:	blt	26788 <readstat_schema_find_or_create_entry+0x28>
   267ac:	b	267c8 <readstat_schema_find_or_create_entry+0x68>
   267b0:	ldr	r8, [r9, #276]	; 0x114
   267b4:	b	267c8 <readstat_schema_find_or_create_entry+0x68>
   267b8:	cmp	r6, #0
   267bc:	beq	267c8 <readstat_schema_find_or_create_entry+0x68>
   267c0:	mov	r0, r6
   267c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   267c8:	mov	r4, #2208	; 0x8a0
   267cc:	mul	r0, r7, r4
   267d0:	add	r1, r0, #2208	; 0x8a0
   267d4:	mov	r0, r8
   267d8:	bl	4984 <realloc@plt>
   267dc:	str	r0, [r9, #276]	; 0x114
   267e0:	mov	r2, #2208	; 0x8a0
   267e4:	ldr	r1, [r9, #268]	; 0x10c
   267e8:	mla	r6, r1, r4, r0
   267ec:	mov	r1, #0
   267f0:	mov	r0, r6
   267f4:	bl	4c00 <memset@plt>
   267f8:	mov	r0, r5
   267fc:	add	r7, r6, #24
   26800:	bl	4b58 <strlen@plt>
   26804:	mov	r3, r0
   26808:	mov	r0, r7
   2680c:	mov	r1, #300	; 0x12c
   26810:	mov	r2, r5
   26814:	bl	4810 <readstat_copy@plt>
   26818:	mov	r0, #46	; 0x2e
   2681c:	strb	r0, [r6, #2200]	; 0x898
   26820:	ldr	r0, [r9, #268]	; 0x10c
   26824:	add	r1, r0, #1
   26828:	str	r1, [r9, #268]	; 0x10c
   2682c:	str	r0, [r6, #20]
   26830:	mov	r0, r6
   26834:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026838 <readstat_parse_stata_dictionary>:
   26838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2683c:	add	fp, sp, #28
   26840:	sub	sp, sp, #244	; 0xf4
   26844:	sub	sp, sp, #3072	; 0xc00
   26848:	mov	r7, r0
   2684c:	ldr	r0, [r0, #32]
   26850:	mov	r9, r3
   26854:	mov	r6, r2
   26858:	mov	r2, r1
   2685c:	ldr	r3, [r0]
   26860:	ldr	r1, [r0, #20]
   26864:	mov	r0, r2
   26868:	blx	r3
   2686c:	cmn	r0, #1
   26870:	beq	26e48 <readstat_parse_stata_dictionary+0x610>
   26874:	ldr	r0, [r7, #32]
   26878:	mov	r1, #2
   2687c:	mov	r5, #0
   26880:	ldr	r3, [r0, #8]
   26884:	ldr	r2, [r0, #20]
   26888:	mov	r0, #0
   2688c:	blx	r3
   26890:	cmn	r0, #1
   26894:	beq	26e68 <readstat_parse_stata_dictionary+0x630>
   26898:	mov	r4, r0
   2689c:	ldr	r0, [r7, #32]
   268a0:	mov	r1, #0
   268a4:	ldr	r3, [r0, #8]
   268a8:	ldr	r2, [r0, #20]
   268ac:	mov	r0, #0
   268b0:	blx	r3
   268b4:	mov	r0, r4
   268b8:	bl	4a74 <malloc@plt>
   268bc:	mov	r5, r0
   268c0:	ldr	r0, [r7, #32]
   268c4:	mov	r1, r4
   268c8:	ldr	r3, [r0, #12]
   268cc:	ldr	r2, [r0, #20]
   268d0:	mov	r0, r5
   268d4:	blx	r3
   268d8:	mov	r0, #1
   268dc:	mov	r1, #280	; 0x118
   268e0:	mov	r8, #1
   268e4:	bl	472c <calloc@plt>
   268e8:	cmp	r0, #0
   268ec:	str	r0, [sp, #52]	; 0x34
   268f0:	beq	26e78 <readstat_parse_stata_dictionary+0x640>
   268f4:	mov	r1, #0
   268f8:	str	r7, [sp, #36]	; 0x24
   268fc:	cmp	r4, #0
   26900:	mov	r7, r5
   26904:	str	r6, [sp, #20]
   26908:	str	r9, [sp, #8]
   2690c:	str	r8, [r0, #256]	; 0x100
   26910:	str	r5, [sp, #12]
   26914:	str	r1, [sp, #44]	; 0x2c
   26918:	add	r1, r5, r4
   2691c:	str	r1, [sp, #48]	; 0x30
   26920:	beq	26e84 <readstat_parse_stata_dictionary+0x64c>
   26924:	add	r0, sp, #1104	; 0x450
   26928:	mov	r2, #0
   2692c:	mvn	r4, #1
   26930:	mov	sl, #0
   26934:	mov	r8, #0
   26938:	add	r1, r0, #16
   2693c:	str	r1, [sp, #16]
   26940:	add	r1, r0, #580	; 0x244
   26944:	add	r0, r0, #24
   26948:	str	r1, [sp, #28]
   2694c:	mov	r1, #0
   26950:	str	r0, [sp, #24]
   26954:	mov	r0, #1
   26958:	str	r1, [sp, #56]	; 0x38
   2695c:	mov	r1, #0
   26960:	ldr	r6, [pc, #1580]	; 26f94 <readstat_parse_stata_dictionary+0x75c>
   26964:	str	r1, [sp, #40]	; 0x28
   26968:	ldr	r1, [sp, #12]
   2696c:	ldr	r5, [sp, #52]	; 0x34
   26970:	str	r2, [sp, #72]	; 0x48
   26974:	mov	r2, #0
   26978:	str	r2, [sp, #68]	; 0x44
   2697c:	mov	r2, #0
   26980:	str	r2, [sp, #60]	; 0x3c
   26984:	mov	r2, #0
   26988:	str	r2, [sp, #44]	; 0x2c
   2698c:	add	r6, pc, r6
   26990:	mov	r7, r1
   26994:	str	r1, [sp, #32]
   26998:	ldr	r1, [pc, #1528]	; 26f98 <readstat_parse_stata_dictionary+0x760>
   2699c:	add	r1, pc, r1
   269a0:	ldrb	r2, [r1, r0]
   269a4:	ldr	r1, [pc, #1520]	; 26f9c <readstat_parse_stata_dictionary+0x764>
   269a8:	ldr	r3, [pc, #1520]	; 26fa0 <readstat_parse_stata_dictionary+0x768>
   269ac:	add	r1, pc, r1
   269b0:	add	r3, pc, r3
   269b4:	cmp	r2, #0
   269b8:	add	r1, r1, r0, lsl #1
   269bc:	ldrsh	r1, [r1]
   269c0:	add	lr, r3, r1
   269c4:	ldr	r1, [pc, #1496]	; 26fa4 <readstat_parse_stata_dictionary+0x76c>
   269c8:	add	r1, pc, r1
   269cc:	add	r1, r1, r0, lsl #1
   269d0:	ldrsh	r3, [r1]
   269d4:	beq	26a44 <readstat_parse_stata_dictionary+0x20c>
   269d8:	add	ip, lr, r2
   269dc:	mov	r9, r7
   269e0:	str	r3, [sp, #76]	; 0x4c
   269e4:	sub	r6, ip, #1
   269e8:	cmp	r6, lr
   269ec:	bcc	26a2c <readstat_parse_stata_dictionary+0x1f4>
   269f0:	ldrb	r7, [r9]
   269f4:	mov	r3, lr
   269f8:	sub	r5, r6, r3
   269fc:	mov	r1, r3
   26a00:	ldrb	r5, [r1, r5, asr #1]!
   26a04:	cmp	r7, r5
   26a08:	bcs	26a1c <readstat_parse_stata_dictionary+0x1e4>
   26a0c:	sub	r6, r1, #1
   26a10:	cmp	r6, r3
   26a14:	bcs	269f8 <readstat_parse_stata_dictionary+0x1c0>
   26a18:	b	26a2c <readstat_parse_stata_dictionary+0x1f4>
   26a1c:	bls	26acc <readstat_parse_stata_dictionary+0x294>
   26a20:	add	r3, r1, #1
   26a24:	cmp	r6, r3
   26a28:	bcs	269f8 <readstat_parse_stata_dictionary+0x1c0>
   26a2c:	ldr	r3, [sp, #76]	; 0x4c
   26a30:	ldr	r5, [sp, #52]	; 0x34
   26a34:	ldr	r6, [pc, #1388]	; 26fa8 <readstat_parse_stata_dictionary+0x770>
   26a38:	add	r3, r2, r3
   26a3c:	add	r6, pc, r6
   26a40:	b	26a4c <readstat_parse_stata_dictionary+0x214>
   26a44:	mov	r9, r7
   26a48:	mov	ip, lr
   26a4c:	ldr	r1, [pc, #1368]	; 26fac <readstat_parse_stata_dictionary+0x774>
   26a50:	add	r1, pc, r1
   26a54:	ldrb	r0, [r1, r0]
   26a58:	cmp	r0, #0
   26a5c:	beq	26ac4 <readstat_parse_stata_dictionary+0x28c>
   26a60:	add	r1, ip, r0, lsl #1
   26a64:	sub	r2, r1, #2
   26a68:	cmp	r2, ip
   26a6c:	bcc	26afc <readstat_parse_stata_dictionary+0x2c4>
   26a70:	str	r3, [sp, #76]	; 0x4c
   26a74:	ldrb	r3, [r9]
   26a78:	mov	lr, r5
   26a7c:	mov	r5, ip
   26a80:	sub	r1, r2, r5
   26a84:	and	r7, r4, r1, asr #1
   26a88:	mov	r1, r5
   26a8c:	ldrb	r7, [r1, r7]!
   26a90:	cmp	r3, r7
   26a94:	bcs	26aa8 <readstat_parse_stata_dictionary+0x270>
   26a98:	sub	r2, r1, #2
   26a9c:	cmp	r2, r5
   26aa0:	bcs	26a80 <readstat_parse_stata_dictionary+0x248>
   26aa4:	b	26af4 <readstat_parse_stata_dictionary+0x2bc>
   26aa8:	ldrb	r7, [r1, #1]
   26aac:	cmp	r3, r7
   26ab0:	bls	26aec <readstat_parse_stata_dictionary+0x2b4>
   26ab4:	add	r5, r1, #2
   26ab8:	cmp	r2, r5
   26abc:	bcs	26a80 <readstat_parse_stata_dictionary+0x248>
   26ac0:	b	26af4 <readstat_parse_stata_dictionary+0x2bc>
   26ac4:	mov	r7, r9
   26ac8:	b	26b04 <readstat_parse_stata_dictionary+0x2cc>
   26acc:	ldr	r0, [sp, #76]	; 0x4c
   26ad0:	ldr	r5, [sp, #52]	; 0x34
   26ad4:	ldr	r6, [pc, #1256]	; 26fc4 <readstat_parse_stata_dictionary+0x78c>
   26ad8:	mov	r7, r9
   26adc:	sub	r0, r0, lr
   26ae0:	add	r6, pc, r6
   26ae4:	add	r3, r0, r1
   26ae8:	b	26b04 <readstat_parse_stata_dictionary+0x2cc>
   26aec:	sub	r0, r1, ip
   26af0:	asr	r0, r0, #1
   26af4:	ldr	r3, [sp, #76]	; 0x4c
   26af8:	mov	r5, lr
   26afc:	mov	r7, r9
   26b00:	add	r3, r0, r3
   26b04:	ldr	r0, [pc, #1188]	; 26fb0 <readstat_parse_stata_dictionary+0x778>
   26b08:	str	r3, [sp, #76]	; 0x4c
   26b0c:	add	r0, pc, r0
   26b10:	ldrb	r0, [r0, r3]
   26b14:	cmp	r0, #0
   26b18:	ldrbne	r1, [r6, r0]
   26b1c:	cmpne	r1, #0
   26b20:	beq	26e00 <readstat_parse_stata_dictionary+0x5c8>
   26b24:	add	r0, r6, r0
   26b28:	rsb	r6, r1, #0
   26b2c:	str	r7, [sp, #64]	; 0x40
   26b30:	add	r9, r0, #1
   26b34:	ldrb	r0, [r9]
   26b38:	cmp	r0, #28
   26b3c:	bhi	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26b40:	add	r1, pc, #4
   26b44:	ldr	r0, [r1, r0, lsl #2]
   26b48:	add	pc, r1, r0
   26b4c:	.word	0x00000088
   26b50:	.word	0x00000090
   26b54:	.word	0x000000a4
   26b58:	.word	0x000000d4
   26b5c:	.word	0x00000140
   26b60:	.word	0x0000014c
   26b64:	.word	0x00000158
   26b68:	.word	0x00000080
   26b6c:	.word	0x00000074
   26b70:	.word	0x00000080
   26b74:	.word	0x00000074
   26b78:	.word	0x00000080
   26b7c:	.word	0x00000074
   26b80:	.word	0x00000174
   26b84:	.word	0x00000188
   26b88:	.word	0x00000190
   26b8c:	.word	0x0000019c
   26b90:	.word	0x000001a8
   26b94:	.word	0x000001b8
   26b98:	.word	0x000001cc
   26b9c:	.word	0x000001d4
   26ba0:	.word	0x000001e0
   26ba4:	.word	0x000001ec
   26ba8:	.word	0x000001f8
   26bac:	.word	0x00000204
   26bb0:	.word	0x00000210
   26bb4:	.word	0x0000021c
   26bb8:	.word	0x0000022c
   26bbc:	.word	0x00000234
   26bc0:	sub	r0, r7, sl
   26bc4:	str	r0, [sp, #72]	; 0x48
   26bc8:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26bcc:	mov	sl, r7
   26bd0:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26bd4:	mov	r8, #0
   26bd8:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26bdc:	ldrb	r0, [r7]
   26be0:	add	r1, r8, r8, lsl #2
   26be4:	add	r0, r0, r1, lsl #1
   26be8:	sub	r8, r0, #48	; 0x30
   26bec:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26bf0:	add	r0, sp, #1104	; 0x450
   26bf4:	mov	r1, #0
   26bf8:	mov	r2, #2208	; 0x8a0
   26bfc:	bl	4c00 <memset@plt>
   26c00:	mov	r0, #46	; 0x2e
   26c04:	ldr	r7, [sp, #64]	; 0x40
   26c08:	strb	r0, [sp, #3304]	; 0xce8
   26c0c:	mov	r0, #5
   26c10:	str	r0, [sp, #1120]	; 0x460
   26c14:	ldr	r0, [sp, #56]	; 0x38
   26c18:	str	r0, [sp, #1124]	; 0x464
   26c1c:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26c20:	mov	r0, r5
   26c24:	mov	r5, r8
   26c28:	mov	r4, r0
   26c2c:	ldr	r0, [sp, #60]	; 0x3c
   26c30:	str	r0, [sp, #1108]	; 0x454
   26c34:	ldr	r0, [sp, #68]	; 0x44
   26c38:	str	r0, [sp, #1104]	; 0x450
   26c3c:	ldr	r0, [sp, #36]	; 0x24
   26c40:	ldr	r8, [sp, #1112]	; 0x458
   26c44:	ldr	r7, [r0, #8]
   26c48:	cmp	r7, #0
   26c4c:	beq	26c7c <readstat_parse_stata_dictionary+0x444>
   26c50:	ldr	r0, [sp, #40]	; 0x28
   26c54:	ldr	r1, [sp, #16]
   26c58:	ldr	r3, [sp, #20]
   26c5c:	mov	r2, #0
   26c60:	str	r0, [sp, #3268]	; 0xcc4
   26c64:	ldr	r0, [sp, #56]	; 0x38
   26c68:	blx	r7
   26c6c:	cmp	r0, #2
   26c70:	beq	26d8c <readstat_parse_stata_dictionary+0x554>
   26c74:	cmp	r0, #1
   26c78:	beq	26f80 <readstat_parse_stata_dictionary+0x748>
   26c7c:	ldr	r0, [sp, #40]	; 0x28
   26c80:	add	r0, r0, #1
   26c84:	str	r0, [sp, #40]	; 0x28
   26c88:	b	26d94 <readstat_parse_stata_dictionary+0x55c>
   26c8c:	mov	r0, r5
   26c90:	mov	r1, #255	; 0xff
   26c94:	b	26cac <readstat_parse_stata_dictionary+0x474>
   26c98:	ldr	r0, [sp, #24]
   26c9c:	mov	r1, #300	; 0x12c
   26ca0:	b	26cac <readstat_parse_stata_dictionary+0x474>
   26ca4:	ldr	r0, [sp, #28]
   26ca8:	mov	r1, #1024	; 0x400
   26cac:	ldr	r3, [sp, #72]	; 0x48
   26cb0:	mov	r2, sl
   26cb4:	bl	4810 <readstat_copy@plt>
   26cb8:	ldr	r7, [sp, #64]	; 0x40
   26cbc:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26cc0:	ldr	r0, [sp, #44]	; 0x2c
   26cc4:	str	r7, [sp, #32]
   26cc8:	add	r0, r0, #1
   26ccc:	str	r0, [sp, #44]	; 0x2c
   26cd0:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26cd4:	str	r8, [r5, #256]	; 0x100
   26cd8:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26cdc:	sub	r0, r8, #1
   26ce0:	str	r0, [sp, #68]	; 0x44
   26ce4:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26ce8:	sub	r0, r8, #1
   26cec:	str	r0, [sp, #60]	; 0x3c
   26cf0:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26cf4:	ldr	r0, [sp, #68]	; 0x44
   26cf8:	add	r0, r0, #1
   26cfc:	str	r0, [sp, #68]	; 0x44
   26d00:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26d04:	ldr	r0, [sp, #68]	; 0x44
   26d08:	add	r0, r8, r0
   26d0c:	sub	r0, r0, #1
   26d10:	str	r0, [sp, #68]	; 0x44
   26d14:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26d18:	str	r8, [r5, #260]	; 0x104
   26d1c:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26d20:	sub	r0, r8, #1
   26d24:	str	r0, [r5, #264]	; 0x108
   26d28:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26d2c:	mov	r0, #1
   26d30:	str	r0, [sp, #1120]	; 0x460
   26d34:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26d38:	mov	r0, #2
   26d3c:	str	r0, [sp, #1120]	; 0x460
   26d40:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26d44:	mov	r0, #3
   26d48:	str	r0, [sp, #1120]	; 0x460
   26d4c:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26d50:	mov	r0, #4
   26d54:	str	r0, [sp, #1120]	; 0x460
   26d58:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26d5c:	mov	r0, #5
   26d60:	str	r0, [sp, #1120]	; 0x460
   26d64:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26d68:	mov	r0, #0
   26d6c:	str	r8, [sp, #2716]	; 0xa9c
   26d70:	str	r0, [sp, #1120]	; 0x460
   26d74:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26d78:	str	r8, [sp, #1112]	; 0x458
   26d7c:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26d80:	mov	r0, #44	; 0x2c
   26d84:	strb	r0, [sp, #3304]	; 0xce8
   26d88:	b	26df4 <readstat_parse_stata_dictionary+0x5bc>
   26d8c:	mov	r0, #1
   26d90:	str	r0, [sp, #1116]	; 0x45c
   26d94:	ldr	r0, [sp, #60]	; 0x3c
   26d98:	ldr	r1, [r4, #268]	; 0x10c
   26d9c:	mov	r7, r4
   26da0:	add	r0, r8, r0
   26da4:	str	r0, [sp, #60]	; 0x3c
   26da8:	ldr	r0, [r4, #276]	; 0x114
   26dac:	mov	r4, #2208	; 0x8a0
   26db0:	mul	r1, r1, r4
   26db4:	add	r1, r1, #2208	; 0x8a0
   26db8:	bl	4984 <realloc@plt>
   26dbc:	str	r0, [r7, #276]	; 0x114
   26dc0:	ldr	r1, [r7, #268]	; 0x10c
   26dc4:	add	r2, r1, #1
   26dc8:	mla	r0, r1, r4, r0
   26dcc:	add	r1, sp, #1104	; 0x450
   26dd0:	str	r2, [r7, #268]	; 0x10c
   26dd4:	mov	r2, #2208	; 0x8a0
   26dd8:	bl	48b8 <memcpy@plt>
   26ddc:	ldr	r0, [sp, #56]	; 0x38
   26de0:	mov	r8, r5
   26de4:	mov	r5, r7
   26de8:	ldr	r7, [sp, #64]	; 0x40
   26dec:	add	r0, r0, #1
   26df0:	str	r0, [sp, #56]	; 0x38
   26df4:	add	r9, r9, #1
   26df8:	adds	r6, r6, #1
   26dfc:	bne	26b34 <readstat_parse_stata_dictionary+0x2fc>
   26e00:	ldr	r0, [pc, #428]	; 26fb4 <readstat_parse_stata_dictionary+0x77c>
   26e04:	ldr	r1, [sp, #76]	; 0x4c
   26e08:	add	r0, pc, r0
   26e0c:	ldrb	r0, [r0, r1]
   26e10:	cmp	r0, #0
   26e14:	beq	26e80 <readstat_parse_stata_dictionary+0x648>
   26e18:	ldr	r1, [sp, #48]	; 0x30
   26e1c:	ldr	r9, [pc, #408]	; 26fbc <readstat_parse_stata_dictionary+0x784>
   26e20:	add	r7, r7, #1
   26e24:	mvn	r4, #1
   26e28:	add	r9, pc, r9
   26e2c:	cmp	r7, r1
   26e30:	mov	r6, r9
   26e34:	bne	26998 <readstat_parse_stata_dictionary+0x160>
   26e38:	cmp	r0, #155	; 0x9b
   26e3c:	bls	26ed0 <readstat_parse_stata_dictionary+0x698>
   26e40:	mov	r6, #0
   26e44:	b	26f84 <readstat_parse_stata_dictionary+0x74c>
   26e48:	cmp	r9, #0
   26e4c:	mov	r0, #0
   26e50:	movne	r1, #1
   26e54:	strne	r1, [r9]
   26e58:	subne	sp, fp, #28
   26e5c:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26e60:	sub	sp, fp, #28
   26e64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26e68:	mov	r0, #0
   26e6c:	mov	r6, #15
   26e70:	str	r0, [sp, #52]	; 0x34
   26e74:	b	26f3c <readstat_parse_stata_dictionary+0x704>
   26e78:	mov	r6, #3
   26e7c:	b	26f3c <readstat_parse_stata_dictionary+0x704>
   26e80:	ldr	r5, [sp, #32]
   26e84:	ldr	r0, [sp, #48]	; 0x30
   26e88:	cmp	r7, r0
   26e8c:	beq	26ed0 <readstat_parse_stata_dictionary+0x698>
   26e90:	ldrb	r0, [r7], #1
   26e94:	add	r4, sp, #80	; 0x50
   26e98:	sub	r1, r7, r5
   26e9c:	str	r0, [sp, #4]
   26ea0:	ldr	r0, [sp, #44]	; 0x2c
   26ea4:	str	r1, [sp]
   26ea8:	mov	r1, #1024	; 0x400
   26eac:	ldr	r2, [pc, #268]	; 26fc0 <readstat_parse_stata_dictionary+0x788>
   26eb0:	add	r3, r0, #1
   26eb4:	mov	r0, r4
   26eb8:	add	r2, pc, r2
   26ebc:	bl	4bdc <snprintf@plt>
   26ec0:	ldr	r9, [sp, #8]
   26ec4:	ldr	r7, [sp, #36]	; 0x24
   26ec8:	ldr	r5, [sp, #12]
   26ecc:	b	26f20 <readstat_parse_stata_dictionary+0x6e8>
   26ed0:	ldr	r9, [sp, #8]
   26ed4:	ldr	r7, [sp, #36]	; 0x24
   26ed8:	ldr	r5, [sp, #12]
   26edc:	ldr	r0, [pc, #212]	; 26fb8 <readstat_parse_stata_dictionary+0x780>
   26ee0:	mov	r2, #43	; 0x2b
   26ee4:	add	r4, sp, #80	; 0x50
   26ee8:	add	r0, pc, r0
   26eec:	add	r1, r0, #32
   26ef0:	add	r3, r0, #16
   26ef4:	vld1.8	{d18-d19}, [r0], r2
   26ef8:	vld1.64	{d20-d21}, [r3]
   26efc:	vld1.64	{d16-d17}, [r1]
   26f00:	add	r1, r4, #32
   26f04:	vld1.8	{d22-d23}, [r0]
   26f08:	add	r0, r4, #16
   26f0c:	vst1.8	{d20-d21}, [r0]
   26f10:	mov	r0, r4
   26f14:	vst1.8	{d16-d17}, [r1]
   26f18:	vst1.8	{d18-d19}, [r0], r2
   26f1c:	vst1.8	{d22-d23}, [r0]
   26f20:	ldr	r2, [r7, #24]
   26f24:	ldr	r1, [sp, #20]
   26f28:	cmp	r2, #0
   26f2c:	beq	26f38 <readstat_parse_stata_dictionary+0x700>
   26f30:	mov	r0, r4
   26f34:	blx	r2
   26f38:	mov	r6, #5
   26f3c:	ldr	r0, [r7, #32]
   26f40:	ldr	r1, [r0, #4]
   26f44:	ldr	r0, [r0, #20]
   26f48:	blx	r1
   26f4c:	mov	r0, r5
   26f50:	bl	4864 <free@plt>
   26f54:	cmp	r6, #0
   26f58:	ldreq	r0, [sp, #52]	; 0x34
   26f5c:	subeq	sp, fp, #28
   26f60:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26f64:	ldr	r0, [sp, #52]	; 0x34
   26f68:	cmp	r9, #0
   26f6c:	strne	r6, [r9]
   26f70:	bl	4948 <readstat_schema_free@plt>
   26f74:	mov	r0, #0
   26f78:	sub	sp, fp, #28
   26f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26f80:	mov	r6, #4
   26f84:	ldr	r9, [sp, #8]
   26f88:	ldr	r7, [sp, #36]	; 0x24
   26f8c:	ldr	r5, [sp, #12]
   26f90:	b	26f3c <readstat_parse_stata_dictionary+0x704>
   26f94:	.word	0x0001177f
   26f98:	.word	0x0001102e
   26f9c:	.word	0x00010daa
   26fa0:	.word	0x00010a6c
   26fa4:	.word	0x00010ec8
   26fa8:	.word	0x000116cf
   26fac:	.word	0x00011732
   26fb0:	.word	0x000112ad
   26fb4:	.word	0x00010c5f
   26fb8:	.word	0x00011338
   26fbc:	.word	0x000112e3
   26fc0:	.word	0x000113a8
   26fc4:	.word	0x0001162b

00026fc8 <readstat_parse_txt>:
   26fc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26fcc:	add	fp, sp, #28
   26fd0:	sub	sp, sp, #60	; 0x3c
   26fd4:	sub	sp, sp, #4096	; 0x1000
   26fd8:	ldr	r8, [r0, #32]
   26fdc:	str	r0, [sp, #44]	; 0x2c
   26fe0:	ldr	r0, [r0, #40]	; 0x28
   26fe4:	mov	r4, r1
   26fe8:	mov	r6, #0
   26fec:	mov	r9, #0
   26ff0:	str	r3, [sp, #28]
   26ff4:	str	r2, [sp, #40]	; 0x28
   26ff8:	cmp	r0, #0
   26ffc:	beq	27024 <readstat_parse_txt+0x5c>
   27000:	ldr	r1, [sp, #44]	; 0x2c
   27004:	mov	r9, #0
   27008:	ldr	r1, [r1, #36]	; 0x24
   2700c:	cmp	r1, #0
   27010:	beq	27024 <readstat_parse_txt+0x5c>
   27014:	bl	4a98 <iconv_open@plt>
   27018:	mov	r9, r0
   2701c:	cmn	r0, #1
   27020:	beq	273c8 <readstat_parse_txt+0x400>
   27024:	ldr	r2, [r8]
   27028:	ldr	r1, [r8, #20]
   2702c:	mov	r0, r4
   27030:	blx	r2
   27034:	cmn	r0, #1
   27038:	beq	273b0 <readstat_parse_txt+0x3e8>
   2703c:	ldr	r0, [sp, #40]	; 0x28
   27040:	ldr	r5, [r0, #256]	; 0x100
   27044:	lsl	r0, r5, #2
   27048:	bl	4a74 <malloc@plt>
   2704c:	mov	sl, r0
   27050:	cmp	r0, #0
   27054:	beq	273b8 <readstat_parse_txt+0x3f0>
   27058:	ldr	r3, [sp, #40]	; 0x28
   2705c:	cmp	r5, #1
   27060:	blt	270b0 <readstat_parse_txt+0xe8>
   27064:	ldr	r0, [r3, #260]	; 0x104
   27068:	mov	r1, #0
   2706c:	cmp	r5, #3
   27070:	bls	2709c <readstat_parse_txt+0xd4>
   27074:	bic	r1, r5, #3
   27078:	vdup.32	q8, r0
   2707c:	mov	r3, sl
   27080:	mov	r2, r1
   27084:	vst1.32	{d16-d17}, [r3]!
   27088:	subs	r2, r2, #4
   2708c:	bne	27084 <readstat_parse_txt+0xbc>
   27090:	ldr	r3, [sp, #40]	; 0x28
   27094:	cmp	r5, r1
   27098:	beq	270b0 <readstat_parse_txt+0xe8>
   2709c:	sub	r2, r5, r1
   270a0:	add	r1, sl, r1, lsl #2
   270a4:	str	r0, [r1], #4
   270a8:	subs	r2, r2, #1
   270ac:	bne	270a4 <readstat_parse_txt+0xdc>
   270b0:	ldr	r0, [r3, #268]	; 0x10c
   270b4:	cmp	r0, #1
   270b8:	blt	270f4 <readstat_parse_txt+0x12c>
   270bc:	ldr	r1, [sp, #40]	; 0x28
   270c0:	mov	r2, #0
   270c4:	ldr	r1, [r1, #276]	; 0x114
   270c8:	add	r1, r1, #4
   270cc:	ldmda	r1, {r3, r7}
   270d0:	ldr	r6, [r1, #4]
   270d4:	add	r2, r2, #1
   270d8:	add	r1, r1, #2208	; 0x8a0
   270dc:	ldr	r4, [sl, r3, lsl #2]
   270e0:	add	r7, r6, r7
   270e4:	cmp	r4, r7
   270e8:	strcc	r7, [sl, r3, lsl #2]
   270ec:	cmp	r2, r0
   270f0:	blt	270cc <readstat_parse_txt+0x104>
   270f4:	mov	r4, #0
   270f8:	cmp	r5, #1
   270fc:	mov	r1, #0
   27100:	blt	2716c <readstat_parse_txt+0x1a4>
   27104:	mov	r0, #0
   27108:	cmp	r5, #3
   2710c:	mov	r1, #0
   27110:	bls	27150 <readstat_parse_txt+0x188>
   27114:	bic	r0, r5, #3
   27118:	vmov.i32	q8, #0	; 0x00000000
   2711c:	mov	r2, sl
   27120:	mov	r1, r0
   27124:	vld1.32	{d18-d19}, [r2]!
   27128:	subs	r1, r1, #4
   2712c:	vmax.u32	q8, q8, q9
   27130:	bne	27124 <readstat_parse_txt+0x15c>
   27134:	vext.8	q9, q8, q8, #8
   27138:	cmp	r5, r0
   2713c:	vmax.u32	q8, q8, q9
   27140:	vdup.32	q9, d16[1]
   27144:	vmax.u32	q8, q8, q9
   27148:	vmov.32	r1, d16[0]
   2714c:	beq	2716c <readstat_parse_txt+0x1a4>
   27150:	sub	r2, r5, r0
   27154:	add	r0, sl, r0, lsl #2
   27158:	ldr	r3, [r0], #4
   2715c:	cmp	r1, r3
   27160:	movcc	r1, r3
   27164:	subs	r2, r2, #1
   27168:	bne	27158 <readstat_parse_txt+0x190>
   2716c:	add	r0, r1, #2
   27170:	bl	4a74 <malloc@plt>
   27174:	cmp	r0, #0
   27178:	str	r0, [sp, #20]
   2717c:	beq	273e0 <readstat_parse_txt+0x418>
   27180:	ldr	r1, [sp, #40]	; 0x28
   27184:	ldr	r0, [r1, #264]	; 0x108
   27188:	cmp	r0, #2
   2718c:	blt	271d4 <readstat_parse_txt+0x20c>
   27190:	mov	r1, #0
   27194:	sub	r5, r0, #1
   27198:	add	r4, sp, #56	; 0x38
   2719c:	strb	r1, [sp, #56]	; 0x38
   271a0:	ldr	r3, [r8, #12]
   271a4:	ldr	r2, [r8, #20]
   271a8:	mov	r0, r4
   271ac:	mov	r1, #1
   271b0:	blx	r3
   271b4:	cmp	r0, #1
   271b8:	bne	271c8 <readstat_parse_txt+0x200>
   271bc:	ldrb	r0, [sp, #56]	; 0x38
   271c0:	cmp	r0, #10
   271c4:	bne	271a0 <readstat_parse_txt+0x1d8>
   271c8:	subs	r5, r5, #1
   271cc:	bne	271a0 <readstat_parse_txt+0x1d8>
   271d0:	ldr	r1, [sp, #40]	; 0x28
   271d4:	ldrb	r0, [r1, #272]	; 0x110
   271d8:	str	sl, [sp, #12]
   271dc:	str	r9, [sp, #16]
   271e0:	cmp	r0, #0
   271e4:	beq	273ec <readstat_parse_txt+0x424>
   271e8:	mov	r0, #4096	; 0x1000
   271ec:	mov	sl, #4096	; 0x1000
   271f0:	bl	4a74 <malloc@plt>
   271f4:	ldr	r1, [sp, #44]	; 0x2c
   271f8:	ldr	r2, [sp, #40]	; 0x28
   271fc:	mov	r9, r0
   27200:	ldr	r1, [r1, #32]
   27204:	ldr	r0, [r2, #268]	; 0x10c
   27208:	str	r1, [sp, #48]	; 0x30
   2720c:	mov	r1, #0
   27210:	str	r1, [sp, #24]
   27214:	cmp	r0, #1
   27218:	blt	2738c <readstat_parse_txt+0x3c4>
   2721c:	mov	r4, #0
   27220:	sub	r0, r0, #1
   27224:	mov	r5, #10
   27228:	ldr	r6, [r2, #276]	; 0x114
   2722c:	mov	r1, #1
   27230:	cmp	r4, r0
   27234:	ldr	r0, [sp, #48]	; 0x30
   27238:	ldrbne	r5, [r2, #272]	; 0x110
   2723c:	ldr	r3, [r0, #12]
   27240:	ldr	r2, [r0, #20]
   27244:	mov	r0, r9
   27248:	blx	r3
   2724c:	cmp	r0, #1
   27250:	bne	272d0 <readstat_parse_txt+0x308>
   27254:	str	r6, [sp, #32]
   27258:	str	r4, [sp, #36]	; 0x24
   2725c:	mov	r6, #0
   27260:	mov	r7, #1
   27264:	mov	r4, r9
   27268:	ldrb	r0, [r9]
   2726c:	cmp	r5, r0
   27270:	beq	27374 <readstat_parse_txt+0x3ac>
   27274:	add	r6, r6, #1
   27278:	cmp	r7, sl
   2727c:	bne	27294 <readstat_parse_txt+0x2cc>
   27280:	lsl	sl, sl, #1
   27284:	mov	r0, r4
   27288:	mov	r1, sl
   2728c:	bl	4984 <realloc@plt>
   27290:	mov	r4, r0
   27294:	ldr	r1, [sp, #48]	; 0x30
   27298:	add	r0, r4, r7
   2729c:	add	r9, r4, r6
   272a0:	ldr	r3, [r1, #12]
   272a4:	ldr	r2, [r1, #20]
   272a8:	mov	r1, #1
   272ac:	blx	r3
   272b0:	add	r7, r7, #1
   272b4:	cmp	r0, #1
   272b8:	beq	27268 <readstat_parse_txt+0x2a0>
   272bc:	mov	r9, r4
   272c0:	ldr	r4, [sp, #36]	; 0x24
   272c4:	ldr	r6, [sp, #32]
   272c8:	sub	r7, r7, #1
   272cc:	b	272d4 <readstat_parse_txt+0x30c>
   272d0:	mov	r7, #0
   272d4:	cmn	r0, #1
   272d8:	moveq	r7, r0
   272dc:	cmn	r7, #1
   272e0:	beq	2757c <readstat_parse_txt+0x5b4>
   272e4:	cmp	r7, #0
   272e8:	beq	273a8 <readstat_parse_txt+0x3e0>
   272ec:	ldr	r0, [sp, #44]	; 0x2c
   272f0:	ldr	r0, [r0, #16]
   272f4:	cmp	r0, #0
   272f8:	beq	2735c <readstat_parse_txt+0x394>
   272fc:	mov	r0, #2208	; 0x8a0
   27300:	mla	r3, r4, r0, r6
   27304:	ldr	r0, [r3, #12]
   27308:	cmp	r0, #0
   2730c:	bne	2735c <readstat_parse_txt+0x394>
   27310:	sub	r0, r7, #1
   27314:	cmp	r7, #2
   27318:	blt	2732c <readstat_parse_txt+0x364>
   2731c:	sub	r1, r7, #2
   27320:	ldrb	r2, [r9, r1]
   27324:	cmp	r2, #13
   27328:	moveq	r0, r1
   2732c:	mov	r1, #0
   27330:	str	r0, [sp, #4]
   27334:	ldr	r2, [sp, #24]
   27338:	str	r9, [sp]
   2733c:	strb	r1, [r9, r0]
   27340:	ldr	r0, [sp, #28]
   27344:	ldr	r1, [sp, #16]
   27348:	str	r0, [sp, #8]
   2734c:	ldr	r0, [sp, #44]	; 0x2c
   27350:	bl	276b4 <handle_value>
   27354:	cmp	r0, #0
   27358:	bne	275ac <readstat_parse_txt+0x5e4>
   2735c:	ldr	r2, [sp, #40]	; 0x28
   27360:	add	r4, r4, #1
   27364:	ldr	r0, [r2, #268]	; 0x10c
   27368:	cmp	r4, r0
   2736c:	blt	27220 <readstat_parse_txt+0x258>
   27370:	b	2738c <readstat_parse_txt+0x3c4>
   27374:	mov	r9, r4
   27378:	ldr	r4, [sp, #36]	; 0x24
   2737c:	ldr	r6, [sp, #32]
   27380:	cmn	r7, #1
   27384:	bne	272e4 <readstat_parse_txt+0x31c>
   27388:	b	2757c <readstat_parse_txt+0x5b4>
   2738c:	ldr	r1, [sp, #44]	; 0x2c
   27390:	ldr	r3, [sp, #24]
   27394:	ldr	r1, [r1, #44]	; 0x2c
   27398:	add	r3, r3, #1
   2739c:	str	r3, [sp, #24]
   273a0:	cmp	r3, r1
   273a4:	bne	27214 <readstat_parse_txt+0x24c>
   273a8:	mov	r5, #0
   273ac:	b	27580 <readstat_parse_txt+0x5b8>
   273b0:	mov	r5, #1
   273b4:	b	273d4 <readstat_parse_txt+0x40c>
   273b8:	mov	r6, #0
   273bc:	mov	r4, #0
   273c0:	mov	r5, #3
   273c4:	b	2766c <readstat_parse_txt+0x6a4>
   273c8:	mov	r5, #7
   273cc:	mov	r9, #0
   273d0:	mov	r6, #0
   273d4:	mov	sl, #0
   273d8:	mov	r4, #0
   273dc:	b	2766c <readstat_parse_txt+0x6a4>
   273e0:	mov	r6, sl
   273e4:	mov	r5, #3
   273e8:	b	2766c <readstat_parse_txt+0x6a4>
   273ec:	ldr	r0, [r1, #256]	; 0x100
   273f0:	ldr	r1, [sp, #44]	; 0x2c
   273f4:	ldr	r4, [r1, #32]
   273f8:	mov	r1, #0
   273fc:	str	r1, [sp, #24]
   27400:	cmp	r0, #1
   27404:	blt	27558 <readstat_parse_txt+0x590>
   27408:	mov	r9, #0
   2740c:	mov	sl, #0
   27410:	ldr	r5, [sp, #12]
   27414:	ldr	r3, [r4, #12]
   27418:	ldr	r2, [r4, #20]
   2741c:	ldr	r0, [sp, #20]
   27420:	ldr	r1, [r5, sl, lsl #2]
   27424:	blx	r3
   27428:	cmp	r0, #0
   2742c:	beq	27590 <readstat_parse_txt+0x5c8>
   27430:	ldr	r1, [r5, sl, lsl #2]
   27434:	cmp	r0, r1
   27438:	bcc	275a4 <readstat_parse_txt+0x5dc>
   2743c:	ldr	r3, [sp, #40]	; 0x28
   27440:	ldr	r0, [r3, #268]	; 0x10c
   27444:	cmp	r9, r0
   27448:	bge	27504 <readstat_parse_txt+0x53c>
   2744c:	mov	r1, #2208	; 0x8a0
   27450:	mov	ip, #0
   27454:	mul	r7, r9, r1
   27458:	ldr	r1, [r3, #276]	; 0x114
   2745c:	mov	r6, r1
   27460:	ldr	r2, [r6, r7]!
   27464:	cmp	r2, sl
   27468:	bne	27508 <readstat_parse_txt+0x540>
   2746c:	add	r1, r1, r7
   27470:	ldr	r5, [r1, #8]
   27474:	cmp	ip, r5, lsr #12
   27478:	bne	274f0 <readstat_parse_txt+0x528>
   2747c:	ldr	r2, [sp, #44]	; 0x2c
   27480:	ldr	r2, [r2, #16]
   27484:	cmp	r2, #0
   27488:	beq	274f0 <readstat_parse_txt+0x528>
   2748c:	ldr	r2, [r1, #12]
   27490:	cmp	r2, #0
   27494:	bne	274f0 <readstat_parse_txt+0x528>
   27498:	ldr	r0, [r1, #4]
   2749c:	ldr	r1, [sp, #20]
   274a0:	mov	r2, r5
   274a4:	add	r1, r1, r0
   274a8:	add	r0, sp, #56	; 0x38
   274ac:	bl	48b8 <memcpy@plt>
   274b0:	add	r0, sp, #56	; 0x38
   274b4:	mov	r1, #0
   274b8:	mov	r3, r6
   274bc:	strb	r1, [r0, r5]
   274c0:	stm	sp, {r0, r5}
   274c4:	ldr	r0, [sp, #28]
   274c8:	ldr	r1, [sp, #16]
   274cc:	ldr	r2, [sp, #24]
   274d0:	str	r0, [sp, #8]
   274d4:	ldr	r0, [sp, #44]	; 0x2c
   274d8:	bl	276b4 <handle_value>
   274dc:	cmp	r0, #0
   274e0:	bne	275d0 <readstat_parse_txt+0x608>
   274e4:	ldr	r3, [sp, #40]	; 0x28
   274e8:	mov	ip, #0
   274ec:	ldr	r0, [r3, #268]	; 0x10c
   274f0:	add	r9, r9, #1
   274f4:	add	r7, r7, #2208	; 0x8a0
   274f8:	cmp	r9, r0
   274fc:	blt	27458 <readstat_parse_txt+0x490>
   27500:	b	27508 <readstat_parse_txt+0x540>
   27504:	mov	ip, #0
   27508:	ldr	r0, [r3, #260]	; 0x104
   2750c:	add	r5, sp, #55	; 0x37
   27510:	cmp	r0, #0
   27514:	bne	27548 <readstat_parse_txt+0x580>
   27518:	strb	ip, [sp, #55]	; 0x37
   2751c:	ldr	r3, [r4, #12]
   27520:	ldr	r2, [r4, #20]
   27524:	mov	r0, r5
   27528:	mov	r1, #1
   2752c:	blx	r3
   27530:	cmp	r0, #1
   27534:	bne	27544 <readstat_parse_txt+0x57c>
   27538:	ldrb	r0, [sp, #55]	; 0x37
   2753c:	cmp	r0, #10
   27540:	bne	2751c <readstat_parse_txt+0x554>
   27544:	ldr	r3, [sp, #40]	; 0x28
   27548:	ldr	r0, [r3, #256]	; 0x100
   2754c:	add	sl, sl, #1
   27550:	cmp	sl, r0
   27554:	blt	27410 <readstat_parse_txt+0x448>
   27558:	ldr	r1, [sp, #44]	; 0x2c
   2755c:	ldr	r2, [sp, #24]
   27560:	ldr	r1, [r1, #44]	; 0x2c
   27564:	add	r2, r2, #1
   27568:	str	r2, [sp, #24]
   2756c:	cmp	r2, r1
   27570:	bne	27400 <readstat_parse_txt+0x438>
   27574:	mov	r5, #0
   27578:	b	275d4 <readstat_parse_txt+0x60c>
   2757c:	mov	r5, #2
   27580:	ldr	sl, [sp, #12]
   27584:	cmp	r9, #0
   27588:	bne	275b4 <readstat_parse_txt+0x5ec>
   2758c:	b	275bc <readstat_parse_txt+0x5f4>
   27590:	mov	sl, r5
   27594:	mov	r5, #0
   27598:	cmp	r5, #0
   2759c:	bne	275c4 <readstat_parse_txt+0x5fc>
   275a0:	b	275e0 <readstat_parse_txt+0x618>
   275a4:	mov	r5, #2
   275a8:	b	275d4 <readstat_parse_txt+0x60c>
   275ac:	ldr	sl, [sp, #12]
   275b0:	mov	r5, r0
   275b4:	mov	r0, r9
   275b8:	bl	4864 <free@plt>
   275bc:	cmp	r5, #0
   275c0:	beq	275e0 <readstat_parse_txt+0x618>
   275c4:	ldr	r4, [sp, #20]
   275c8:	ldr	r9, [sp, #16]
   275cc:	b	27668 <readstat_parse_txt+0x6a0>
   275d0:	mov	r5, r0
   275d4:	ldr	sl, [sp, #12]
   275d8:	cmp	r5, #0
   275dc:	bne	275c4 <readstat_parse_txt+0x5fc>
   275e0:	ldr	r0, [sp, #44]	; 0x2c
   275e4:	ldr	r9, [sp, #16]
   275e8:	ldr	r2, [r0]
   275ec:	cmp	r2, #0
   275f0:	beq	27660 <readstat_parse_txt+0x698>
   275f4:	ldr	r0, [sp, #24]
   275f8:	vmov.i32	q8, #0	; 0x00000000
   275fc:	str	r0, [sp, #56]	; 0x38
   27600:	asr	r0, r0, #31
   27604:	str	r0, [sp, #60]	; 0x3c
   27608:	ldr	r0, [sp, #40]	; 0x28
   2760c:	ldr	r1, [r0, #268]	; 0x10c
   27610:	add	r0, sp, #56	; 0x38
   27614:	add	r3, r0, #32
   27618:	vst1.64	{d16-d17}, [r3]
   2761c:	add	r3, r0, #16
   27620:	vst1.64	{d16-d17}, [r3]
   27624:	mov	r3, #0
   27628:	str	r3, [sp, #104]	; 0x68
   2762c:	ldrb	r3, [sp, #108]	; 0x6c
   27630:	and	r3, r3, #254	; 0xfe
   27634:	strb	r3, [sp, #108]	; 0x6c
   27638:	str	r1, [sp, #64]	; 0x40
   2763c:	asr	r1, r1, #31
   27640:	str	r1, [sp, #68]	; 0x44
   27644:	ldr	r1, [sp, #28]
   27648:	blx	r2
   2764c:	sub	r0, r0, #1
   27650:	clz	r0, r0
   27654:	lsr	r0, r0, #5
   27658:	lsl	r5, r0, #2
   2765c:	b	27664 <readstat_parse_txt+0x69c>
   27660:	mov	r5, #0
   27664:	ldr	r4, [sp, #20]
   27668:	mov	r6, sl
   2766c:	ldr	r1, [r8, #4]
   27670:	ldr	r0, [r8, #20]
   27674:	blx	r1
   27678:	cmp	r4, #0
   2767c:	beq	27688 <readstat_parse_txt+0x6c0>
   27680:	mov	r0, r4
   27684:	bl	4864 <free@plt>
   27688:	cmp	sl, #0
   2768c:	beq	27698 <readstat_parse_txt+0x6d0>
   27690:	mov	r0, r6
   27694:	bl	4864 <free@plt>
   27698:	cmp	r9, #0
   2769c:	beq	276a8 <readstat_parse_txt+0x6e0>
   276a0:	mov	r0, r9
   276a4:	bl	478c <iconv_close@plt>
   276a8:	mov	r0, r5
   276ac:	sub	sp, fp, #28
   276b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000276b4 <handle_value>:
   276b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   276b8:	add	fp, sp, #28
   276bc:	sub	sp, sp, #12
   276c0:	ldr	r6, [fp, #12]
   276c4:	mov	r7, r0
   276c8:	mov	r0, #1
   276cc:	mov	r4, r3
   276d0:	mov	r8, r1
   276d4:	str	r2, [fp, #-40]	; 0xffffffd8
   276d8:	orr	r9, r0, r6, lsl #2
   276dc:	add	r0, r9, #7
   276e0:	bic	r0, r0, #7
   276e4:	sub	r5, sp, r0
   276e8:	mov	sp, r5
   276ec:	ldr	sl, [r4, #16]!
   276f0:	mov	r0, sl
   276f4:	bl	47c8 <readstat_type_class@plt>
   276f8:	ldr	r3, [fp, #8]
   276fc:	cmp	r0, #0
   27700:	beq	2773c <handle_value+0x88>
   27704:	mov	r6, #0
   27708:	sub	r1, fp, #36	; 0x24
   2770c:	str	r6, [fp, #-36]	; 0xffffffdc
   27710:	ldr	r0, [r4]
   27714:	cmp	r0, #4
   27718:	beq	2776c <handle_value+0xb8>
   2771c:	cmp	r0, #5
   27720:	bne	27784 <handle_value+0xd0>
   27724:	mov	r0, r3
   27728:	mov	r5, r3
   2772c:	bl	4c54 <strtod@plt>
   27730:	mov	r3, r5
   27734:	vmov	r5, r6, d0
   27738:	b	277a4 <handle_value+0xf0>
   2773c:	sub	sp, sp, #8
   27740:	mov	r2, r3
   27744:	mov	r0, r5
   27748:	mov	r1, r9
   2774c:	mov	r3, r6
   27750:	str	r8, [sp]
   27754:	bl	4b94 <readstat_convert@plt>
   27758:	add	sp, sp, #8
   2775c:	cmp	r0, #0
   27760:	beq	27804 <handle_value+0x150>
   27764:	sub	sp, fp, #28
   27768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2776c:	mov	r0, r3
   27770:	mov	r5, r3
   27774:	bl	4a44 <strtof@plt>
   27778:	mov	r3, r5
   2777c:	vmov	r5, s0
   27780:	b	277a4 <handle_value+0xf0>
   27784:	mov	r0, r3
   27788:	mov	r2, #10
   2778c:	mov	r5, r3
   27790:	bl	47d4 <strtol@plt>
   27794:	mov	r3, r5
   27798:	mov	r5, r0
   2779c:	mov	r6, #0
   277a0:	mov	sl, #3
   277a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   277a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   277ac:	mov	r2, #0
   277b0:	sub	r1, r1, r3
   277b4:	clz	r1, r1
   277b8:	lsr	r1, r1, #5
   277bc:	orr	r2, r2, r1, lsl #8
   277c0:	ldr	r1, [fp, #16]
   277c4:	ldr	r7, [r7, #16]
   277c8:	sub	sp, sp, #16
   277cc:	str	r2, [sp, #4]
   277d0:	str	r1, [sp, #8]
   277d4:	mov	r1, r4
   277d8:	mov	r2, r5
   277dc:	mov	r3, r6
   277e0:	str	sl, [sp]
   277e4:	blx	r7
   277e8:	add	sp, sp, #16
   277ec:	sub	r0, r0, #1
   277f0:	clz	r0, r0
   277f4:	lsr	r0, r0, #5
   277f8:	lsl	r0, r0, #2
   277fc:	sub	sp, fp, #28
   27800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27804:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27808:	mov	r6, #0
   2780c:	mov	r2, #0
   27810:	b	277c0 <handle_value+0x10c>

00027814 <zsav_ctx_init>:
   27814:	push	{r4, r5, r6, r7, fp, lr}
   27818:	add	fp, sp, #16
   2781c:	mov	r6, r0
   27820:	mov	r0, #1
   27824:	mov	r1, #40	; 0x28
   27828:	mov	r4, r3
   2782c:	mov	r5, r2
   27830:	bl	472c <calloc@plt>
   27834:	mov	r7, r0
   27838:	mov	r0, r6
   2783c:	bl	4a74 <malloc@plt>
   27840:	str	r0, [r7]
   27844:	mov	r0, #10
   27848:	mov	r1, #4
   2784c:	str	r0, [r7, #12]
   27850:	mov	r0, #10
   27854:	bl	472c <calloc@plt>
   27858:	movw	r2, #61440	; 0xf000
   2785c:	str	r0, [r7, #4]
   27860:	mov	r1, #0
   27864:	mvn	r0, #0
   27868:	movt	r2, #63	; 0x3f
   2786c:	str	r1, [r7, #20]
   27870:	str	r2, [r7, #16]
   27874:	str	r5, [r7, #24]
   27878:	str	r4, [r7, #28]
   2787c:	str	r0, [r7, #32]
   27880:	mov	r0, r7
   27884:	pop	{r4, r5, r6, r7, fp, pc}

00027888 <zsav_ctx_free>:
   27888:	push	{r4, r5, r6, sl, fp, lr}
   2788c:	add	fp, sp, #16
   27890:	mov	r4, r0
   27894:	ldr	r0, [r0, #8]
   27898:	cmp	r0, #1
   2789c:	blt	278d4 <zsav_ctx_free+0x4c>
   278a0:	mov	r6, #0
   278a4:	ldr	r0, [r4, #4]
   278a8:	ldr	r5, [r0, r6, lsl #2]
   278ac:	add	r0, r5, #8
   278b0:	bl	4c6c <deflateEnd@plt>
   278b4:	ldr	r0, [r5, #64]	; 0x40
   278b8:	bl	4864 <free@plt>
   278bc:	mov	r0, r5
   278c0:	bl	4864 <free@plt>
   278c4:	ldr	r0, [r4, #8]
   278c8:	add	r6, r6, #1
   278cc:	cmp	r6, r0
   278d0:	blt	278a4 <zsav_ctx_free+0x1c>
   278d4:	ldr	r0, [r4, #4]
   278d8:	bl	4864 <free@plt>
   278dc:	ldr	r0, [r4]
   278e0:	bl	4864 <free@plt>
   278e4:	mov	r0, r4
   278e8:	pop	{r4, r5, r6, sl, fp, lr}
   278ec:	b	4864 <free@plt>

000278f0 <zsav_add_block>:
   278f0:	push	{r4, r5, r6, sl, fp, lr}
   278f4:	add	fp, sp, #16
   278f8:	ldrd	r2, [r0, #8]
   278fc:	mov	r4, r0
   27900:	cmp	r2, r3
   27904:	bne	27920 <zsav_add_block+0x30>
   27908:	lsl	r0, r2, #1
   2790c:	lsl	r1, r2, #3
   27910:	str	r0, [r4, #12]
   27914:	ldr	r0, [r4, #4]
   27918:	bl	4984 <realloc@plt>
   2791c:	str	r0, [r4, #4]
   27920:	mov	r0, #1
   27924:	mov	r1, #72	; 0x48
   27928:	bl	472c <calloc@plt>
   2792c:	mov	r5, r0
   27930:	ldmib	r4, {r0, r1}
   27934:	mov	r3, #56	; 0x38
   27938:	add	r6, r5, #8
   2793c:	add	r2, r1, #1
   27940:	str	r2, [r4, #8]
   27944:	str	r5, [r0, r1, lsl #2]
   27948:	mov	r0, r6
   2794c:	ldr	r1, [r4, #32]
   27950:	ldr	r2, [pc, #36]	; 2797c <zsav_add_block+0x8c>
   27954:	add	r2, pc, r2
   27958:	bl	4a8c <deflateInit_@plt>
   2795c:	ldr	r1, [r4, #16]
   27960:	mov	r0, r6
   27964:	bl	4828 <deflateBound@plt>
   27968:	str	r0, [r5, #68]	; 0x44
   2796c:	bl	4a74 <malloc@plt>
   27970:	str	r0, [r5, #64]	; 0x40
   27974:	mov	r0, r5
   27978:	pop	{r4, r5, r6, sl, fp, pc}
   2797c:	.word	0x00010943

00027980 <zsav_current_block>:
   27980:	ldr	r1, [r0, #8]
   27984:	cmp	r1, #0
   27988:	moveq	r0, #0
   2798c:	ldrne	r0, [r0, #4]
   27990:	addne	r0, r0, r1, lsl #2
   27994:	ldrne	r0, [r0, #-4]
   27998:	bx	lr

0002799c <zsav_compress_row>:
   2799c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   279a0:	add	fp, sp, #28
   279a4:	sub	sp, sp, #12
   279a8:	str	r0, [sp, #8]
   279ac:	ldr	r0, [r3, #8]
   279b0:	mov	r9, r3
   279b4:	mov	r6, r2
   279b8:	mov	sl, r1
   279bc:	cmp	r0, #0
   279c0:	beq	279d8 <zsav_compress_row+0x3c>
   279c4:	ldr	r1, [r9, #4]
   279c8:	add	r0, r1, r0, lsl #2
   279cc:	ldr	r5, [r0, #-4]
   279d0:	cmp	r5, #0
   279d4:	bne	279e4 <zsav_compress_row+0x48>
   279d8:	mov	r0, r9
   279dc:	bl	4a80 <zsav_add_block@plt>
   279e0:	mov	r5, r0
   279e4:	ldr	r0, [sp, #8]
   279e8:	mov	r7, r9
   279ec:	str	r0, [r5, #8]
   279f0:	str	sl, [r5, #12]
   279f4:	ldr	r0, [r5, #4]
   279f8:	ldr	r1, [r5, #64]	; 0x40
   279fc:	ldr	r2, [r5, #68]	; 0x44
   27a00:	ldr	r8, [r5]
   27a04:	add	r1, r1, r0
   27a08:	sub	r0, r2, r0
   27a0c:	str	r1, [r5, #20]
   27a10:	str	r0, [r5, #24]
   27a14:	ldr	r4, [r7, #16]!
   27a18:	ldr	r1, [r7, #4]
   27a1c:	subs	r0, r4, r8
   27a20:	sbc	r1, r1, r8, asr #31
   27a24:	subs	r2, r0, sl
   27a28:	sbcs	r1, r1, #0
   27a2c:	bge	27ad0 <zsav_compress_row+0x134>
   27a30:	stm	sp, {r6, sl}
   27a34:	mov	r6, #0
   27a38:	str	r0, [r5, #12]
   27a3c:	add	r0, r5, #8
   27a40:	mov	r1, #4
   27a44:	bl	49cc <deflate@plt>
   27a48:	cmp	r0, #1
   27a4c:	bne	27b08 <zsav_compress_row+0x16c>
   27a50:	ldr	r1, [r5, #24]
   27a54:	ldr	r2, [r5, #68]	; 0x44
   27a58:	sub	r0, r4, r8
   27a5c:	add	r6, r0, r6
   27a60:	ldr	r0, [r5, #12]
   27a64:	sub	r1, r2, r1
   27a68:	str	r1, [r5, #4]
   27a6c:	ldr	r1, [r7]
   27a70:	sub	r0, r1, r0
   27a74:	str	r0, [r5]
   27a78:	ldr	r0, [sp, #8]
   27a7c:	add	r4, r0, r6
   27a80:	mov	r0, r9
   27a84:	bl	4a80 <zsav_add_block@plt>
   27a88:	mov	r5, r0
   27a8c:	ldr	r0, [sp, #4]
   27a90:	str	r4, [r5, #8]
   27a94:	sub	sl, r0, r6
   27a98:	str	sl, [r5, #12]
   27a9c:	ldr	r0, [r5, #64]	; 0x40
   27aa0:	ldr	r1, [r5, #68]	; 0x44
   27aa4:	ldr	r8, [r5]
   27aa8:	str	r0, [r5, #20]
   27aac:	str	r1, [r5, #24]
   27ab0:	ldr	r4, [r7]
   27ab4:	ldr	r1, [r7, #4]
   27ab8:	subs	r0, r4, r8
   27abc:	sbc	r1, r1, r8, asr #31
   27ac0:	subs	r2, r0, sl
   27ac4:	sbcs	r1, r1, #0
   27ac8:	blt	27a38 <zsav_compress_row+0x9c>
   27acc:	ldr	r6, [sp]
   27ad0:	cmp	r6, #0
   27ad4:	add	r0, r5, #8
   27ad8:	movwne	r6, #4
   27adc:	mov	r1, r6
   27ae0:	bl	49cc <deflate@plt>
   27ae4:	ldr	r2, [r5, #24]
   27ae8:	ldr	r3, [r5, #68]	; 0x44
   27aec:	ldr	r1, [r5, #12]
   27af0:	sub	r2, r3, r2
   27af4:	sub	r1, sl, r1
   27af8:	str	r2, [r5, #4]
   27afc:	ldr	r2, [r5]
   27b00:	add	r1, r1, r2
   27b04:	str	r1, [r5]
   27b08:	sub	sp, fp, #28
   27b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00027b10 <zsav_read_compressed_data>:
   27b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27b14:	add	fp, sp, #28
   27b18:	sub	sp, sp, #148	; 0x94
   27b1c:	mov	r4, r1
   27b20:	mov	r5, r0
   27b24:	ldr	r7, [r0, #36]	; 0x24
   27b28:	ldr	r8, [r0, #344]	; 0x158
   27b2c:	mov	r0, #0
   27b30:	vmov.i32	q8, #0	; 0x00000000
   27b34:	mov	r1, #48	; 0x30
   27b38:	add	r2, sp, #88	; 0x58
   27b3c:	add	r6, sp, #64	; 0x40
   27b40:	str	r0, [fp, #-32]	; 0xffffffe0
   27b44:	vst1.64	{d16-d17}, [r2], r1
   27b48:	ldr	r1, [r5, #392]	; 0x188
   27b4c:	ldr	r3, [r5, #396]	; 0x18c
   27b50:	str	r3, [sp, #108]	; 0x6c
   27b54:	str	r1, [sp, #104]	; 0x68
   27b58:	vldr	d16, [r5, #416]	; 0x1a0
   27b5c:	str	r0, [sp, #124]	; 0x7c
   27b60:	str	r0, [sp, #120]	; 0x78
   27b64:	str	r0, [sp, #128]	; 0x80
   27b68:	vstr	d16, [sp, #112]	; 0x70
   27b6c:	ldrb	r1, [r5, #436]	; 0x1b4
   27b70:	str	r0, [r2]
   27b74:	and	r0, r1, #1
   27b78:	mov	r1, #24
   27b7c:	str	r0, [sp, #132]	; 0x84
   27b80:	mov	r0, r6
   27b84:	ldr	r3, [r7, #12]
   27b88:	ldr	r2, [r7, #20]
   27b8c:	blx	r3
   27b90:	mov	sl, #2
   27b94:	cmp	r0, #24
   27b98:	bcc	28080 <zsav_read_compressed_data+0x570>
   27b9c:	ldrb	r0, [r5, #436]	; 0x1b4
   27ba0:	str	r4, [sp, #36]	; 0x24
   27ba4:	str	r8, [sp, #32]
   27ba8:	tst	r0, #1
   27bac:	bne	27bc0 <zsav_read_compressed_data+0xb0>
   27bb0:	ldr	r0, [sp, #72]	; 0x48
   27bb4:	ldr	r1, [sp, #76]	; 0x4c
   27bb8:	add	r4, r6, #8
   27bbc:	b	27bec <zsav_read_compressed_data+0xdc>
   27bc0:	ldr	r0, [sp, #64]	; 0x40
   27bc4:	ldr	r1, [sp, #68]	; 0x44
   27bc8:	bl	4750 <byteswap8@plt>
   27bcc:	ldrb	r2, [r5, #436]	; 0x1b4
   27bd0:	str	r1, [sp, #68]	; 0x44
   27bd4:	str	r0, [sp, #64]	; 0x40
   27bd8:	add	r4, r6, #8
   27bdc:	ldr	r0, [sp, #72]	; 0x48
   27be0:	ldr	r1, [sp, #76]	; 0x4c
   27be4:	tst	r2, #1
   27be8:	bne	27cac <zsav_read_compressed_data+0x19c>
   27bec:	strd	r0, [r4]
   27bf0:	add	r6, r6, #16
   27bf4:	ldr	r0, [sp, #80]	; 0x50
   27bf8:	ldr	r1, [sp, #84]	; 0x54
   27bfc:	strd	r0, [r6]
   27c00:	mov	r0, #0
   27c04:	mov	r1, #1
   27c08:	ldr	r3, [r7, #8]
   27c0c:	ldr	r2, [r7, #20]
   27c10:	ldr	r9, [sp, #64]	; 0x40
   27c14:	ldr	r8, [sp, #68]	; 0x44
   27c18:	blx	r3
   27c1c:	sub	r0, r0, #24
   27c20:	eor	r0, r9, r0
   27c24:	orrs	r0, r0, r8
   27c28:	bne	27ca4 <zsav_read_compressed_data+0x194>
   27c2c:	ldr	r0, [r4]
   27c30:	ldr	r3, [r7, #8]
   27c34:	ldr	r2, [r7, #20]
   27c38:	ldrd	r8, [r6]
   27c3c:	mov	r1, #0
   27c40:	blx	r3
   27c44:	mov	r6, r0
   27c48:	subs	r0, r8, #24
   27c4c:	mov	r2, #24
   27c50:	mov	r3, #0
   27c54:	sbc	r1, r9, #0
   27c58:	bl	2889c <__aeabi_uldivmod>
   27c5c:	cmn	r6, #1
   27c60:	beq	27cd4 <zsav_read_compressed_data+0x1c4>
   27c64:	ldr	r3, [r7, #12]
   27c68:	ldr	r2, [r7, #20]
   27c6c:	add	r6, sp, #40	; 0x28
   27c70:	mov	r9, r0
   27c74:	mov	r1, #24
   27c78:	mov	r0, r6
   27c7c:	blx	r3
   27c80:	cmp	r0, #24
   27c84:	bcc	28080 <zsav_read_compressed_data+0x570>
   27c88:	ldrb	r0, [r5, #436]	; 0x1b4
   27c8c:	tst	r0, #1
   27c90:	bne	27cdc <zsav_read_compressed_data+0x1cc>
   27c94:	ldr	r0, [sp, #48]	; 0x30
   27c98:	ldr	r1, [sp, #52]	; 0x34
   27c9c:	add	r4, r6, #8
   27ca0:	b	27d08 <zsav_read_compressed_data+0x1f8>
   27ca4:	mov	sl, #5
   27ca8:	b	28080 <zsav_read_compressed_data+0x570>
   27cac:	bl	4750 <byteswap8@plt>
   27cb0:	ldrb	r2, [r5, #436]	; 0x1b4
   27cb4:	strd	r0, [r4]
   27cb8:	add	r6, r6, #16
   27cbc:	ldr	r0, [sp, #80]	; 0x50
   27cc0:	ldr	r1, [sp, #84]	; 0x54
   27cc4:	tst	r2, #1
   27cc8:	beq	27bfc <zsav_read_compressed_data+0xec>
   27ccc:	bl	4750 <byteswap8@plt>
   27cd0:	b	27bfc <zsav_read_compressed_data+0xec>
   27cd4:	mov	sl, #15
   27cd8:	b	28080 <zsav_read_compressed_data+0x570>
   27cdc:	ldr	r0, [sp, #40]	; 0x28
   27ce0:	ldr	r1, [sp, #44]	; 0x2c
   27ce4:	bl	4750 <byteswap8@plt>
   27ce8:	ldrb	r2, [r5, #436]	; 0x1b4
   27cec:	str	r1, [sp, #44]	; 0x2c
   27cf0:	str	r0, [sp, #40]	; 0x28
   27cf4:	add	r4, r6, #8
   27cf8:	ldr	r0, [sp, #48]	; 0x30
   27cfc:	ldr	r1, [sp, #52]	; 0x34
   27d00:	tst	r2, #1
   27d04:	bne	27d5c <zsav_read_compressed_data+0x24c>
   27d08:	strd	r0, [r4]
   27d0c:	ldr	r0, [sp, #56]	; 0x38
   27d10:	str	r0, [sp, #56]	; 0x38
   27d14:	ldr	r0, [sp, #60]	; 0x3c
   27d18:	cmp	r0, r9
   27d1c:	mov	sl, #5
   27d20:	str	r0, [sp, #60]	; 0x3c
   27d24:	bne	28080 <zsav_read_compressed_data+0x570>
   27d28:	str	r7, [sp, #20]
   27d2c:	mov	r7, #0
   27d30:	cmp	r9, #0
   27d34:	beq	27d94 <zsav_read_compressed_data+0x284>
   27d38:	add	r0, r9, r9, lsl #1
   27d3c:	lsl	r6, r0, #3
   27d40:	mov	r0, r6
   27d44:	bl	4b88 <readstat_malloc@plt>
   27d48:	mov	r8, r0
   27d4c:	cmp	r0, #0
   27d50:	beq	28044 <zsav_read_compressed_data+0x534>
   27d54:	mov	r0, r8
   27d58:	b	27da0 <zsav_read_compressed_data+0x290>
   27d5c:	bl	4750 <byteswap8@plt>
   27d60:	ldrb	r2, [r5, #436]	; 0x1b4
   27d64:	strd	r0, [r4]
   27d68:	ldr	r0, [sp, #56]	; 0x38
   27d6c:	tst	r2, #1
   27d70:	beq	27d10 <zsav_read_compressed_data+0x200>
   27d74:	bl	4768 <byteswap4@plt>
   27d78:	ldrb	r1, [r5, #436]	; 0x1b4
   27d7c:	str	r0, [sp, #56]	; 0x38
   27d80:	ldr	r0, [sp, #60]	; 0x3c
   27d84:	tst	r1, #1
   27d88:	beq	27d18 <zsav_read_compressed_data+0x208>
   27d8c:	bl	4768 <byteswap4@plt>
   27d90:	b	27d18 <zsav_read_compressed_data+0x208>
   27d94:	mov	r6, #0
   27d98:	mov	r0, #0
   27d9c:	mov	r8, #0
   27da0:	ldr	r1, [sp, #20]
   27da4:	str	r0, [sp, #16]
   27da8:	ldr	r3, [r1, #12]
   27dac:	ldr	r2, [r1, #20]
   27db0:	mov	r1, r6
   27db4:	blx	r3
   27db8:	mov	sl, #2
   27dbc:	cmp	r0, r6
   27dc0:	bcs	27dcc <zsav_read_compressed_data+0x2bc>
   27dc4:	ldr	r0, [sp, #16]
   27dc8:	b	28050 <zsav_read_compressed_data+0x540>
   27dcc:	cmp	r9, #1
   27dd0:	blt	27e54 <zsav_read_compressed_data+0x344>
   27dd4:	mov	r6, #0
   27dd8:	mov	r7, r8
   27ddc:	ldrb	r2, [r5, #436]	; 0x1b4
   27de0:	ldrd	r0, [r7]
   27de4:	tst	r2, #1
   27de8:	beq	27df0 <zsav_read_compressed_data+0x2e0>
   27dec:	bl	4750 <byteswap8@plt>
   27df0:	strd	r0, [r7]
   27df4:	mov	r4, r7
   27df8:	ldrb	r2, [r5, #436]	; 0x1b4
   27dfc:	ldr	r1, [r7, #12]
   27e00:	ldr	r0, [r4, #8]!
   27e04:	tst	r2, #1
   27e08:	beq	27e10 <zsav_read_compressed_data+0x300>
   27e0c:	bl	4750 <byteswap8@plt>
   27e10:	strd	r0, [r4]
   27e14:	ldrb	r1, [r5, #436]	; 0x1b4
   27e18:	ldr	r0, [r7, #16]
   27e1c:	tst	r1, #1
   27e20:	beq	27e28 <zsav_read_compressed_data+0x318>
   27e24:	bl	4768 <byteswap4@plt>
   27e28:	str	r0, [r7, #16]
   27e2c:	ldrb	r1, [r5, #436]	; 0x1b4
   27e30:	ldr	r0, [r7, #20]
   27e34:	tst	r1, #1
   27e38:	beq	27e40 <zsav_read_compressed_data+0x330>
   27e3c:	bl	4768 <byteswap4@plt>
   27e40:	add	r6, r6, #1
   27e44:	str	r0, [r7, #20]
   27e48:	add	r7, r7, #24
   27e4c:	cmp	r6, r9
   27e50:	blt	27ddc <zsav_read_compressed_data+0x2cc>
   27e54:	ldr	r0, [sp, #32]
   27e58:	mov	r4, #0
   27e5c:	lsl	r6, r0, #3
   27e60:	cmp	r0, #0
   27e64:	mov	r0, #0
   27e68:	beq	27e7c <zsav_read_compressed_data+0x36c>
   27e6c:	mov	r0, r6
   27e70:	bl	4b88 <readstat_malloc@plt>
   27e74:	cmp	r0, #0
   27e78:	beq	28098 <zsav_read_compressed_data+0x588>
   27e7c:	cmp	r9, #0
   27e80:	str	r0, [sp, #32]
   27e84:	str	r8, [sp, #12]
   27e88:	beq	2808c <zsav_read_compressed_data+0x57c>
   27e8c:	mov	r0, #0
   27e90:	str	r6, [sp, #28]
   27e94:	mov	r8, #0
   27e98:	mov	r7, #0
   27e9c:	mov	r4, #0
   27ea0:	str	r9, [sp, #24]
   27ea4:	str	r0, [sp, #4]
   27ea8:	ldr	r1, [sp, #12]
   27eac:	add	r0, r8, r8, lsl #1
   27eb0:	add	r6, r1, r0, lsl #3
   27eb4:	ldr	r1, [sp, #20]
   27eb8:	ldr	r0, [r6, #8]
   27ebc:	ldr	r3, [r1, #8]
   27ec0:	ldr	r2, [r1, #20]
   27ec4:	mov	r1, #0
   27ec8:	blx	r3
   27ecc:	cmn	r0, #1
   27ed0:	beq	280bc <zsav_read_compressed_data+0x5ac>
   27ed4:	mov	r0, r4
   27ed8:	mov	r4, r6
   27edc:	ldr	r1, [r4, #20]!
   27ee0:	bl	4c3c <readstat_realloc@plt>
   27ee4:	mov	sl, #3
   27ee8:	cmp	r0, #0
   27eec:	beq	280c4 <zsav_read_compressed_data+0x5b4>
   27ef0:	ldr	r2, [sp, #20]
   27ef4:	ldr	r1, [r4]
   27ef8:	str	r0, [sp, #8]
   27efc:	ldr	r3, [r2, #12]
   27f00:	ldr	r2, [r2, #20]
   27f04:	blx	r3
   27f08:	ldr	r1, [r4]
   27f0c:	cmp	r0, r1
   27f10:	bne	280cc <zsav_read_compressed_data+0x5bc>
   27f14:	ldr	r1, [r6, #16]!
   27f18:	mov	r0, r7
   27f1c:	str	r1, [fp, #-32]	; 0xffffffe0
   27f20:	bl	4c3c <readstat_realloc@plt>
   27f24:	cmp	r0, #0
   27f28:	beq	280d8 <zsav_read_compressed_data+0x5c8>
   27f2c:	ldr	r3, [r4]
   27f30:	ldr	r4, [sp, #8]
   27f34:	sub	r1, fp, #32
   27f38:	mov	r7, r0
   27f3c:	mov	r2, r4
   27f40:	bl	4924 <uncompress@plt>
   27f44:	cmp	r0, #0
   27f48:	mov	sl, #5
   27f4c:	ldreq	r1, [r6]
   27f50:	ldreq	r0, [fp, #-32]	; 0xffffffe0
   27f54:	cmpeq	r0, r1
   27f58:	bne	280e0 <zsav_read_compressed_data+0x5d0>
   27f5c:	ldr	r3, [sp, #4]
   27f60:	mov	r1, #1
   27f64:	add	r8, r8, #1
   27f68:	str	r1, [sp, #136]	; 0x88
   27f6c:	mov	r1, #0
   27f70:	str	r8, [sp]
   27f74:	b	27f80 <zsav_read_compressed_data+0x470>
   27f78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27f7c:	sub	r1, r4, r8
   27f80:	sub	r0, r0, r1
   27f84:	mov	r9, r7
   27f88:	ldr	r6, [sp, #28]
   27f8c:	str	r0, [sp, #92]	; 0x5c
   27f90:	add	r0, r7, r1
   27f94:	ldr	r7, [sp, #32]
   27f98:	str	r0, [sp, #88]	; 0x58
   27f9c:	add	r0, r7, r3
   27fa0:	str	r0, [sp, #96]	; 0x60
   27fa4:	sub	r0, r6, r3
   27fa8:	str	r0, [sp, #100]	; 0x64
   27fac:	add	r0, sp, #88	; 0x58
   27fb0:	bl	4b70 <sav_decompress_row@plt>
   27fb4:	ldr	r0, [sp, #136]	; 0x88
   27fb8:	ldr	r8, [sp, #92]	; 0x5c
   27fbc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   27fc0:	cmp	r0, #2
   27fc4:	bne	27ff0 <zsav_read_compressed_data+0x4e0>
   27fc8:	ldr	r3, [sp, #36]	; 0x24
   27fcc:	mov	r0, r7
   27fd0:	mov	r1, r6
   27fd4:	mov	r2, r5
   27fd8:	blx	r3
   27fdc:	cmp	r0, #0
   27fe0:	bne	280ac <zsav_read_compressed_data+0x59c>
   27fe4:	ldr	r0, [sp, #136]	; 0x88
   27fe8:	mov	r3, #0
   27fec:	b	27ff8 <zsav_read_compressed_data+0x4e8>
   27ff0:	ldr	r1, [sp, #100]	; 0x64
   27ff4:	sub	r3, r6, r1
   27ff8:	mov	r7, r9
   27ffc:	ldr	r9, [sp, #24]
   28000:	mov	sl, #0
   28004:	cmp	r0, #3
   28008:	beq	280a4 <zsav_read_compressed_data+0x594>
   2800c:	ldr	r1, [r5, #356]	; 0x164
   28010:	cmp	r1, #1
   28014:	blt	28024 <zsav_read_compressed_data+0x514>
   28018:	ldr	r2, [r5, #364]	; 0x16c
   2801c:	cmp	r2, r1
   28020:	beq	280a4 <zsav_read_compressed_data+0x594>
   28024:	cmp	r0, #0
   28028:	bne	27f78 <zsav_read_compressed_data+0x468>
   2802c:	ldr	r8, [sp]
   28030:	ldr	r4, [sp, #8]
   28034:	str	r3, [sp, #4]
   28038:	cmp	r8, r9
   2803c:	bne	27ea8 <zsav_read_compressed_data+0x398>
   28040:	b	280e0 <zsav_read_compressed_data+0x5d0>
   28044:	mov	r0, #0
   28048:	mov	sl, #3
   2804c:	mov	r7, #0
   28050:	mov	r4, #0
   28054:	cmp	r8, #0
   28058:	beq	28060 <zsav_read_compressed_data+0x550>
   2805c:	bl	4864 <free@plt>
   28060:	cmp	r4, #0
   28064:	beq	28070 <zsav_read_compressed_data+0x560>
   28068:	mov	r0, r4
   2806c:	bl	4864 <free@plt>
   28070:	cmp	r7, #0
   28074:	beq	28080 <zsav_read_compressed_data+0x570>
   28078:	mov	r0, r7
   2807c:	bl	4864 <free@plt>
   28080:	mov	r0, sl
   28084:	sub	sp, fp, #28
   28088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2808c:	mov	r7, #0
   28090:	mov	sl, #0
   28094:	b	280e0 <zsav_read_compressed_data+0x5d0>
   28098:	mov	r7, #0
   2809c:	mov	sl, #3
   280a0:	b	27dc4 <zsav_read_compressed_data+0x2b4>
   280a4:	ldr	r4, [sp, #8]
   280a8:	b	280e0 <zsav_read_compressed_data+0x5d0>
   280ac:	ldr	r4, [sp, #8]
   280b0:	mov	sl, r0
   280b4:	mov	r7, r9
   280b8:	b	280e0 <zsav_read_compressed_data+0x5d0>
   280bc:	mov	sl, #15
   280c0:	b	280e0 <zsav_read_compressed_data+0x5d0>
   280c4:	mov	r4, #0
   280c8:	b	280e0 <zsav_read_compressed_data+0x5d0>
   280cc:	ldr	r4, [sp, #8]
   280d0:	mov	sl, #2
   280d4:	b	280e0 <zsav_read_compressed_data+0x5d0>
   280d8:	ldr	r4, [sp, #8]
   280dc:	mov	r7, #0
   280e0:	ldr	r0, [sp, #32]
   280e4:	cmp	r0, #0
   280e8:	beq	280f0 <zsav_read_compressed_data+0x5e0>
   280ec:	bl	4864 <free@plt>
   280f0:	ldr	r8, [sp, #12]
   280f4:	ldr	r0, [sp, #16]
   280f8:	cmp	r8, #0
   280fc:	bne	2805c <zsav_read_compressed_data+0x54c>
   28100:	b	28060 <zsav_read_compressed_data+0x550>

00028104 <zsav_write_compressed_row>:
   28104:	push	{r4, r5, fp, lr}
   28108:	add	fp, sp, #8
   2810c:	ldr	r5, [r0, #300]	; 0x12c
   28110:	mov	r4, r0
   28114:	mov	r3, r4
   28118:	ldr	r0, [r5]
   2811c:	bl	4da4 <sav_compress_row@plt>
   28120:	ldr	r2, [r4, #84]	; 0x54
   28124:	mov	r1, r0
   28128:	ldr	r0, [r4, #80]	; 0x50
   2812c:	mov	r3, r5
   28130:	add	r2, r2, #1
   28134:	sub	r0, r2, r0
   28138:	clz	r0, r0
   2813c:	lsr	r2, r0, #5
   28140:	ldr	r0, [r5]
   28144:	bl	4dec <zsav_compress_row@plt>
   28148:	mov	r1, #0
   2814c:	cmp	r0, #1
   28150:	movwhi	r1, #13
   28154:	mov	r0, r1
   28158:	pop	{r4, r5, fp, pc}

0002815c <zsav_end_data>:
   2815c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28160:	add	fp, sp, #28
   28164:	sub	sp, sp, #52	; 0x34
   28168:	ldr	r7, [r0, #300]	; 0x12c
   2816c:	mov	r4, r0
   28170:	mov	r6, #24
   28174:	mov	r5, r7
   28178:	ldr	r1, [r7, #28]
   2817c:	ldr	r0, [r5, #24]!
   28180:	str	r1, [sp, #44]	; 0x2c
   28184:	str	r0, [sp, #40]	; 0x28
   28188:	adds	r0, r0, #24
   2818c:	adc	r1, r1, #0
   28190:	str	r0, [sp, #32]
   28194:	str	r1, [sp, #36]	; 0x24
   28198:	ldr	r2, [r7, #8]
   2819c:	add	r3, r2, r2, lsl #1
   281a0:	cmp	r2, #1
   281a4:	add	r3, r6, r3, lsl #3
   281a8:	str	r3, [sp, #16]
   281ac:	asr	r3, r3, #31
   281b0:	str	r3, [sp, #20]
   281b4:	blt	281dc <zsav_end_data+0x80>
   281b8:	ldr	r3, [r7, #4]
   281bc:	ldr	r6, [r3], #4
   281c0:	ldr	r6, [r6, #4]
   281c4:	adds	r0, r0, r6
   281c8:	adc	r1, r1, r6, asr #31
   281cc:	subs	r2, r2, #1
   281d0:	bne	281bc <zsav_end_data+0x60>
   281d4:	str	r0, [sp, #32]
   281d8:	str	r1, [sp, #36]	; 0x24
   281dc:	add	r1, sp, #40	; 0x28
   281e0:	mov	r0, r4
   281e4:	mov	r2, #8
   281e8:	bl	4d98 <readstat_write_bytes@plt>
   281ec:	cmp	r0, #0
   281f0:	bne	2820c <zsav_end_data+0xb0>
   281f4:	add	r1, sp, #32
   281f8:	mov	r0, r4
   281fc:	mov	r2, #8
   28200:	bl	4d98 <readstat_write_bytes@plt>
   28204:	cmp	r0, #0
   28208:	beq	283e8 <zsav_end_data+0x28c>
   2820c:	cmp	r0, #0
   28210:	bne	28400 <zsav_end_data+0x2a4>
   28214:	ldr	r0, [r7, #8]
   28218:	cmp	r0, #1
   2821c:	blt	28254 <zsav_end_data+0xf8>
   28220:	mov	r6, #0
   28224:	ldr	r0, [r7, #4]
   28228:	ldr	r0, [r0, r6, lsl #2]
   2822c:	ldr	r2, [r0, #4]
   28230:	ldr	r1, [r0, #64]	; 0x40
   28234:	mov	r0, r4
   28238:	bl	4d98 <readstat_write_bytes@plt>
   2823c:	cmp	r0, #0
   28240:	bne	28400 <zsav_end_data+0x2a4>
   28244:	ldr	r0, [r7, #8]
   28248:	add	r6, r6, #1
   2824c:	cmp	r6, r0
   28250:	blt	28224 <zsav_end_data+0xc8>
   28254:	mvn	r1, #0
   28258:	mov	r2, #8
   2825c:	str	r1, [sp, #44]	; 0x2c
   28260:	mvn	r1, #99	; 0x63
   28264:	str	r1, [sp, #40]	; 0x28
   28268:	mov	r1, #0
   2826c:	str	r1, [sp, #36]	; 0x24
   28270:	str	r1, [sp, #32]
   28274:	ldr	r1, [r7, #16]
   28278:	str	r0, [sp, #24]
   2827c:	mov	r0, r4
   28280:	str	r1, [sp, #28]
   28284:	add	r1, sp, #40	; 0x28
   28288:	bl	4d98 <readstat_write_bytes@plt>
   2828c:	cmp	r0, #0
   28290:	bne	28400 <zsav_end_data+0x2a4>
   28294:	add	r1, sp, #32
   28298:	mov	r0, r4
   2829c:	mov	r2, #8
   282a0:	bl	4d98 <readstat_write_bytes@plt>
   282a4:	cmp	r0, #0
   282a8:	bne	28400 <zsav_end_data+0x2a4>
   282ac:	add	r1, sp, #28
   282b0:	mov	r0, r4
   282b4:	mov	r2, #4
   282b8:	bl	4d98 <readstat_write_bytes@plt>
   282bc:	cmp	r0, #0
   282c0:	bne	28400 <zsav_end_data+0x2a4>
   282c4:	add	r1, sp, #24
   282c8:	mov	r0, r4
   282cc:	mov	r2, #4
   282d0:	bl	4d98 <readstat_write_bytes@plt>
   282d4:	cmp	r0, #0
   282d8:	bne	28400 <zsav_end_data+0x2a4>
   282dc:	ldrd	r0, [r5]
   282e0:	str	r0, [sp, #16]
   282e4:	adds	r0, r0, #24
   282e8:	str	r1, [sp, #20]
   282ec:	str	r0, [sp, #8]
   282f0:	adc	r0, r1, #0
   282f4:	str	r0, [sp, #12]
   282f8:	ldr	r0, [r7, #8]
   282fc:	cmp	r0, #1
   28300:	movlt	r0, #0
   28304:	sublt	sp, fp, #28
   28308:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2830c:	mov	r6, #0
   28310:	add	r5, sp, #16
   28314:	add	sl, sp, #8
   28318:	add	r9, sp, #4
   2831c:	mov	r8, sp
   28320:	ldr	r0, [r7, #4]
   28324:	mov	r2, #8
   28328:	ldr	r0, [r0, r6, lsl #2]
   2832c:	ldr	r1, [r0]
   28330:	str	r1, [sp, #4]
   28334:	mov	r1, r5
   28338:	ldr	r0, [r0, #4]
   2833c:	str	r0, [sp]
   28340:	mov	r0, r4
   28344:	bl	4d98 <readstat_write_bytes@plt>
   28348:	cmp	r0, #0
   2834c:	bne	28400 <zsav_end_data+0x2a4>
   28350:	mov	r0, r4
   28354:	mov	r1, sl
   28358:	mov	r2, #8
   2835c:	bl	4d98 <readstat_write_bytes@plt>
   28360:	cmp	r0, #0
   28364:	bne	28400 <zsav_end_data+0x2a4>
   28368:	mov	r0, r4
   2836c:	mov	r1, r9
   28370:	mov	r2, #4
   28374:	bl	4d98 <readstat_write_bytes@plt>
   28378:	cmp	r0, #0
   2837c:	bne	28400 <zsav_end_data+0x2a4>
   28380:	mov	r0, r4
   28384:	mov	r1, r8
   28388:	mov	r2, #4
   2838c:	bl	4d98 <readstat_write_bytes@plt>
   28390:	cmp	r0, #0
   28394:	bne	28400 <zsav_end_data+0x2a4>
   28398:	ldr	r0, [sp, #4]
   2839c:	ldr	r1, [sp, #16]
   283a0:	ldr	r2, [sp, #20]
   283a4:	ldr	r3, [sp, #12]
   283a8:	add	r6, r6, #1
   283ac:	adds	r1, r1, r0
   283b0:	adc	r0, r2, r0, asr #31
   283b4:	str	r1, [sp, #16]
   283b8:	ldr	r1, [sp]
   283bc:	ldr	r2, [sp, #8]
   283c0:	str	r0, [sp, #20]
   283c4:	adds	r2, r2, r1
   283c8:	adc	r0, r3, r1, asr #31
   283cc:	str	r2, [sp, #8]
   283d0:	str	r0, [sp, #12]
   283d4:	mov	r0, #0
   283d8:	ldr	r1, [r7, #8]
   283dc:	cmp	r6, r1
   283e0:	blt	28320 <zsav_end_data+0x1c4>
   283e4:	b	28400 <zsav_end_data+0x2a4>
   283e8:	add	r1, sp, #16
   283ec:	mov	r0, r4
   283f0:	mov	r2, #8
   283f4:	bl	4d98 <readstat_write_bytes@plt>
   283f8:	cmp	r0, #0
   283fc:	beq	28214 <zsav_end_data+0xb8>
   28400:	sub	sp, fp, #28
   28404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028408 <__aeabi_drsub>:
   28408:	eor	r1, r1, #-2147483648	; 0x80000000
   2840c:	b	28414 <__adddf3>

00028410 <__aeabi_dsub>:
   28410:	eor	r3, r3, #-2147483648	; 0x80000000

00028414 <__adddf3>:
   28414:	push	{r4, r5, lr}
   28418:	lsl	r4, r1, #1
   2841c:	lsl	r5, r3, #1
   28420:	teq	r4, r5
   28424:	teqeq	r0, r2
   28428:	orrsne	ip, r4, r0
   2842c:	orrsne	ip, r5, r2
   28430:	mvnsne	ip, r4, asr #21
   28434:	mvnsne	ip, r5, asr #21
   28438:	beq	28624 <__adddf3+0x210>
   2843c:	lsr	r4, r4, #21
   28440:	rsbs	r5, r4, r5, lsr #21
   28444:	rsblt	r5, r5, #0
   28448:	ble	28468 <__adddf3+0x54>
   2844c:	add	r4, r4, r5
   28450:	eor	r2, r0, r2
   28454:	eor	r3, r1, r3
   28458:	eor	r0, r2, r0
   2845c:	eor	r1, r3, r1
   28460:	eor	r2, r0, r2
   28464:	eor	r3, r1, r3
   28468:	cmp	r5, #54	; 0x36
   2846c:	pophi	{r4, r5, pc}
   28470:	tst	r1, #-2147483648	; 0x80000000
   28474:	lsl	r1, r1, #12
   28478:	mov	ip, #1048576	; 0x100000
   2847c:	orr	r1, ip, r1, lsr #12
   28480:	beq	2848c <__adddf3+0x78>
   28484:	rsbs	r0, r0, #0
   28488:	rsc	r1, r1, #0
   2848c:	tst	r3, #-2147483648	; 0x80000000
   28490:	lsl	r3, r3, #12
   28494:	orr	r3, ip, r3, lsr #12
   28498:	beq	284a4 <__adddf3+0x90>
   2849c:	rsbs	r2, r2, #0
   284a0:	rsc	r3, r3, #0
   284a4:	teq	r4, r5
   284a8:	beq	2860c <__adddf3+0x1f8>
   284ac:	sub	r4, r4, #1
   284b0:	rsbs	lr, r5, #32
   284b4:	blt	284d0 <__adddf3+0xbc>
   284b8:	lsl	ip, r2, lr
   284bc:	adds	r0, r0, r2, lsr r5
   284c0:	adc	r1, r1, #0
   284c4:	adds	r0, r0, r3, lsl lr
   284c8:	adcs	r1, r1, r3, asr r5
   284cc:	b	284ec <__adddf3+0xd8>
   284d0:	sub	r5, r5, #32
   284d4:	add	lr, lr, #32
   284d8:	cmp	r2, #1
   284dc:	lsl	ip, r3, lr
   284e0:	orrcs	ip, ip, #2
   284e4:	adds	r0, r0, r3, asr r5
   284e8:	adcs	r1, r1, r3, asr #31
   284ec:	and	r5, r1, #-2147483648	; 0x80000000
   284f0:	bpl	28500 <__adddf3+0xec>
   284f4:	rsbs	ip, ip, #0
   284f8:	rscs	r0, r0, #0
   284fc:	rsc	r1, r1, #0
   28500:	cmp	r1, #1048576	; 0x100000
   28504:	bcc	28544 <__adddf3+0x130>
   28508:	cmp	r1, #2097152	; 0x200000
   2850c:	bcc	2852c <__adddf3+0x118>
   28510:	lsrs	r1, r1, #1
   28514:	rrxs	r0, r0
   28518:	rrx	ip, ip
   2851c:	add	r4, r4, #1
   28520:	lsl	r2, r4, #21
   28524:	cmn	r2, #4194304	; 0x400000
   28528:	bcs	28684 <__adddf3+0x270>
   2852c:	cmp	ip, #-2147483648	; 0x80000000
   28530:	lsrseq	ip, r0, #1
   28534:	adcs	r0, r0, #0
   28538:	adc	r1, r1, r4, lsl #20
   2853c:	orr	r1, r1, r5
   28540:	pop	{r4, r5, pc}
   28544:	lsls	ip, ip, #1
   28548:	adcs	r0, r0, r0
   2854c:	adc	r1, r1, r1
   28550:	tst	r1, #1048576	; 0x100000
   28554:	sub	r4, r4, #1
   28558:	bne	2852c <__adddf3+0x118>
   2855c:	teq	r1, #0
   28560:	moveq	r1, r0
   28564:	moveq	r0, #0
   28568:	clz	r3, r1
   2856c:	addeq	r3, r3, #32
   28570:	sub	r3, r3, #11
   28574:	subs	r2, r3, #32
   28578:	bge	2859c <__adddf3+0x188>
   2857c:	adds	r2, r2, #12
   28580:	ble	28598 <__adddf3+0x184>
   28584:	add	ip, r2, #20
   28588:	rsb	r2, r2, #12
   2858c:	lsl	r0, r1, ip
   28590:	lsr	r1, r1, r2
   28594:	b	285ac <__adddf3+0x198>
   28598:	add	r2, r2, #20
   2859c:	rsble	ip, r2, #32
   285a0:	lsl	r1, r1, r2
   285a4:	orrle	r1, r1, r0, lsr ip
   285a8:	lslle	r0, r0, r2
   285ac:	subs	r4, r4, r3
   285b0:	addge	r1, r1, r4, lsl #20
   285b4:	orrge	r1, r1, r5
   285b8:	popge	{r4, r5, pc}
   285bc:	mvn	r4, r4
   285c0:	subs	r4, r4, #31
   285c4:	bge	28600 <__adddf3+0x1ec>
   285c8:	adds	r4, r4, #12
   285cc:	bgt	285e8 <__adddf3+0x1d4>
   285d0:	add	r4, r4, #20
   285d4:	rsb	r2, r4, #32
   285d8:	lsr	r0, r0, r4
   285dc:	orr	r0, r0, r1, lsl r2
   285e0:	orr	r1, r5, r1, lsr r4
   285e4:	pop	{r4, r5, pc}
   285e8:	rsb	r4, r4, #12
   285ec:	rsb	r2, r4, #32
   285f0:	lsr	r0, r0, r2
   285f4:	orr	r0, r0, r1, lsl r4
   285f8:	mov	r1, r5
   285fc:	pop	{r4, r5, pc}
   28600:	lsr	r0, r1, r4
   28604:	mov	r1, r5
   28608:	pop	{r4, r5, pc}
   2860c:	teq	r4, #0
   28610:	eor	r3, r3, #1048576	; 0x100000
   28614:	eoreq	r1, r1, #1048576	; 0x100000
   28618:	addeq	r4, r4, #1
   2861c:	subne	r5, r5, #1
   28620:	b	284ac <__adddf3+0x98>
   28624:	mvns	ip, r4, asr #21
   28628:	mvnsne	ip, r5, asr #21
   2862c:	beq	28694 <__adddf3+0x280>
   28630:	teq	r4, r5
   28634:	teqeq	r0, r2
   28638:	beq	2864c <__adddf3+0x238>
   2863c:	orrs	ip, r4, r0
   28640:	moveq	r1, r3
   28644:	moveq	r0, r2
   28648:	pop	{r4, r5, pc}
   2864c:	teq	r1, r3
   28650:	movne	r1, #0
   28654:	movne	r0, #0
   28658:	popne	{r4, r5, pc}
   2865c:	lsrs	ip, r4, #21
   28660:	bne	28674 <__adddf3+0x260>
   28664:	lsls	r0, r0, #1
   28668:	adcs	r1, r1, r1
   2866c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   28670:	pop	{r4, r5, pc}
   28674:	adds	r4, r4, #4194304	; 0x400000
   28678:	addcc	r1, r1, #1048576	; 0x100000
   2867c:	popcc	{r4, r5, pc}
   28680:	and	r5, r1, #-2147483648	; 0x80000000
   28684:	orr	r1, r5, #2130706432	; 0x7f000000
   28688:	orr	r1, r1, #15728640	; 0xf00000
   2868c:	mov	r0, #0
   28690:	pop	{r4, r5, pc}
   28694:	mvns	ip, r4, asr #21
   28698:	movne	r1, r3
   2869c:	movne	r0, r2
   286a0:	mvnseq	ip, r5, asr #21
   286a4:	movne	r3, r1
   286a8:	movne	r2, r0
   286ac:	orrs	r4, r0, r1, lsl #12
   286b0:	orrseq	r5, r2, r3, lsl #12
   286b4:	teqeq	r1, r3
   286b8:	orrne	r1, r1, #524288	; 0x80000
   286bc:	pop	{r4, r5, pc}

000286c0 <__aeabi_ui2d>:
   286c0:	teq	r0, #0
   286c4:	moveq	r1, #0
   286c8:	bxeq	lr
   286cc:	push	{r4, r5, lr}
   286d0:	mov	r4, #1024	; 0x400
   286d4:	add	r4, r4, #50	; 0x32
   286d8:	mov	r5, #0
   286dc:	mov	r1, #0
   286e0:	b	2855c <__adddf3+0x148>

000286e4 <__aeabi_i2d>:
   286e4:	teq	r0, #0
   286e8:	moveq	r1, #0
   286ec:	bxeq	lr
   286f0:	push	{r4, r5, lr}
   286f4:	mov	r4, #1024	; 0x400
   286f8:	add	r4, r4, #50	; 0x32
   286fc:	ands	r5, r0, #-2147483648	; 0x80000000
   28700:	rsbmi	r0, r0, #0
   28704:	mov	r1, #0
   28708:	b	2855c <__adddf3+0x148>

0002870c <__aeabi_f2d>:
   2870c:	lsls	r2, r0, #1
   28710:	asr	r1, r2, #3
   28714:	rrx	r1, r1
   28718:	lsl	r0, r2, #28
   2871c:	andsne	r3, r2, #-16777216	; 0xff000000
   28720:	teqne	r3, #-16777216	; 0xff000000
   28724:	eorne	r1, r1, #939524096	; 0x38000000
   28728:	bxne	lr
   2872c:	bics	r2, r2, #-16777216	; 0xff000000
   28730:	bxeq	lr
   28734:	teq	r3, #-16777216	; 0xff000000
   28738:	orreq	r1, r1, #524288	; 0x80000
   2873c:	bxeq	lr
   28740:	push	{r4, r5, lr}
   28744:	mov	r4, #896	; 0x380
   28748:	and	r5, r1, #-2147483648	; 0x80000000
   2874c:	bic	r1, r1, #-2147483648	; 0x80000000
   28750:	b	2855c <__adddf3+0x148>

00028754 <__aeabi_ul2d>:
   28754:	orrs	r2, r0, r1
   28758:	bxeq	lr
   2875c:	push	{r4, r5, lr}
   28760:	mov	r5, #0
   28764:	b	28784 <__aeabi_l2d+0x1c>

00028768 <__aeabi_l2d>:
   28768:	orrs	r2, r0, r1
   2876c:	bxeq	lr
   28770:	push	{r4, r5, lr}
   28774:	ands	r5, r1, #-2147483648	; 0x80000000
   28778:	bpl	28784 <__aeabi_l2d+0x1c>
   2877c:	rsbs	r0, r0, #0
   28780:	rsc	r1, r1, #0
   28784:	mov	r4, #1024	; 0x400
   28788:	add	r4, r4, #50	; 0x32
   2878c:	lsrs	ip, r1, #22
   28790:	beq	28500 <__adddf3+0xec>
   28794:	mov	r2, #3
   28798:	lsrs	ip, ip, #3
   2879c:	addne	r2, r2, #3
   287a0:	lsrs	ip, ip, #3
   287a4:	addne	r2, r2, #3
   287a8:	add	r2, r2, ip, lsr #3
   287ac:	rsb	r3, r2, #32
   287b0:	lsl	ip, r0, r3
   287b4:	lsr	r0, r0, r2
   287b8:	orr	r0, r0, r1, lsl r3
   287bc:	lsr	r1, r1, r2
   287c0:	add	r4, r4, r2
   287c4:	b	28500 <__adddf3+0xec>

000287c8 <__aeabi_ldivmod>:
   287c8:	cmp	r3, #0
   287cc:	cmpeq	r2, #0
   287d0:	bne	287f4 <__aeabi_ldivmod+0x2c>
   287d4:	cmp	r1, #0
   287d8:	movlt	r1, #-2147483648	; 0x80000000
   287dc:	movlt	r0, #0
   287e0:	blt	287f0 <__aeabi_ldivmod+0x28>
   287e4:	cmpeq	r0, #0
   287e8:	mvnne	r1, #-2147483648	; 0x80000000
   287ec:	mvnne	r0, #0
   287f0:	b	288d8 <__aeabi_idiv0>
   287f4:	sub	sp, sp, #8
   287f8:	push	{sp, lr}
   287fc:	cmp	r1, #0
   28800:	blt	28820 <__aeabi_ldivmod+0x58>
   28804:	cmp	r3, #0
   28808:	blt	28854 <__aeabi_ldivmod+0x8c>
   2880c:	bl	28958 <__udivmoddi4>
   28810:	ldr	lr, [sp, #4]
   28814:	add	sp, sp, #8
   28818:	pop	{r2, r3}
   2881c:	bx	lr
   28820:	rsbs	r0, r0, #0
   28824:	sbc	r1, r1, r1, lsl #1
   28828:	cmp	r3, #0
   2882c:	blt	28878 <__aeabi_ldivmod+0xb0>
   28830:	bl	28958 <__udivmoddi4>
   28834:	ldr	lr, [sp, #4]
   28838:	add	sp, sp, #8
   2883c:	pop	{r2, r3}
   28840:	rsbs	r0, r0, #0
   28844:	sbc	r1, r1, r1, lsl #1
   28848:	rsbs	r2, r2, #0
   2884c:	sbc	r3, r3, r3, lsl #1
   28850:	bx	lr
   28854:	rsbs	r2, r2, #0
   28858:	sbc	r3, r3, r3, lsl #1
   2885c:	bl	28958 <__udivmoddi4>
   28860:	ldr	lr, [sp, #4]
   28864:	add	sp, sp, #8
   28868:	pop	{r2, r3}
   2886c:	rsbs	r0, r0, #0
   28870:	sbc	r1, r1, r1, lsl #1
   28874:	bx	lr
   28878:	rsbs	r2, r2, #0
   2887c:	sbc	r3, r3, r3, lsl #1
   28880:	bl	28958 <__udivmoddi4>
   28884:	ldr	lr, [sp, #4]
   28888:	add	sp, sp, #8
   2888c:	pop	{r2, r3}
   28890:	rsbs	r2, r2, #0
   28894:	sbc	r3, r3, r3, lsl #1
   28898:	bx	lr

0002889c <__aeabi_uldivmod>:
   2889c:	cmp	r3, #0
   288a0:	cmpeq	r2, #0
   288a4:	bne	288bc <__aeabi_uldivmod+0x20>
   288a8:	cmp	r1, #0
   288ac:	cmpeq	r0, #0
   288b0:	mvnne	r1, #0
   288b4:	mvnne	r0, #0
   288b8:	b	288d8 <__aeabi_idiv0>
   288bc:	sub	sp, sp, #8
   288c0:	push	{sp, lr}
   288c4:	bl	28958 <__udivmoddi4>
   288c8:	ldr	lr, [sp, #4]
   288cc:	add	sp, sp, #8
   288d0:	pop	{r2, r3}
   288d4:	bx	lr

000288d8 <__aeabi_idiv0>:
   288d8:	push	{r1, lr}
   288dc:	mov	r0, #8
   288e0:	bl	475c <raise@plt>
   288e4:	pop	{r1, pc}

000288e8 <__aeabi_d2lz>:
   288e8:	vmov	d7, r0, r1
   288ec:	vcmpe.f64	d7, #0.0
   288f0:	vmrs	APSR_nzcv, fpscr
   288f4:	bmi	288fc <__aeabi_d2lz+0x14>
   288f8:	b	28918 <__aeabi_d2ulz>
   288fc:	push	{r4, lr}
   28900:	eor	r1, r1, #-2147483648	; 0x80000000
   28904:	bl	28918 <__aeabi_d2ulz>
   28908:	rsbs	r0, r0, #0
   2890c:	rsc	r1, r1, #0
   28910:	pop	{r4, pc}
   28914:	andeq	r0, r0, r0

00028918 <__aeabi_d2ulz>:
   28918:	vmov	d6, r0, r1
   2891c:	vldr	d7, [pc, #36]	; 28948 <__aeabi_d2ulz+0x30>
   28920:	vldr	d5, [pc, #40]	; 28950 <__aeabi_d2ulz+0x38>
   28924:	vmul.f64	d7, d6, d7
   28928:	vcvt.u32.f64	s14, d7
   2892c:	vcvt.f64.u32	d4, s14
   28930:	vmov	r1, s14
   28934:	vmls.f64	d6, d4, d5
   28938:	vcvt.u32.f64	s15, d6
   2893c:	vmov	r0, s15
   28940:	bx	lr
   28944:	nop			; (mov r0, r0)
   28948:	.word	0x00000000
   2894c:	.word	0x3df00000
   28950:	.word	0x00000000
   28954:	.word	0x41f00000

00028958 <__udivmoddi4>:
   28958:	cmp	r1, r3
   2895c:	cmpeq	r0, r2
   28960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28964:	mov	r4, r0
   28968:	movcc	r0, #0
   2896c:	mov	r5, r1
   28970:	ldr	lr, [sp, #36]	; 0x24
   28974:	movcc	r1, r0
   28978:	bcc	28a74 <__udivmoddi4+0x11c>
   2897c:	cmp	r3, #0
   28980:	clzeq	ip, r2
   28984:	clzne	ip, r3
   28988:	addeq	ip, ip, #32
   2898c:	cmp	r5, #0
   28990:	clzeq	r1, r4
   28994:	addeq	r1, r1, #32
   28998:	clzne	r1, r5
   2899c:	sub	ip, ip, r1
   289a0:	sub	sl, ip, #32
   289a4:	lsl	r9, r3, ip
   289a8:	rsb	fp, ip, #32
   289ac:	orr	r9, r9, r2, lsl sl
   289b0:	orr	r9, r9, r2, lsr fp
   289b4:	lsl	r8, r2, ip
   289b8:	cmp	r5, r9
   289bc:	cmpeq	r4, r8
   289c0:	movcc	r0, #0
   289c4:	movcc	r1, r0
   289c8:	bcc	289e4 <__udivmoddi4+0x8c>
   289cc:	mov	r0, #1
   289d0:	subs	r4, r4, r8
   289d4:	lsl	r1, r0, sl
   289d8:	orr	r1, r1, r0, lsr fp
   289dc:	lsl	r0, r0, ip
   289e0:	sbc	r5, r5, r9
   289e4:	cmp	ip, #0
   289e8:	beq	28a74 <__udivmoddi4+0x11c>
   289ec:	lsr	r6, r8, #1
   289f0:	orr	r6, r6, r9, lsl #31
   289f4:	lsr	r7, r9, #1
   289f8:	mov	r2, ip
   289fc:	b	28a20 <__udivmoddi4+0xc8>
   28a00:	subs	r3, r4, r6
   28a04:	sbc	r8, r5, r7
   28a08:	adds	r3, r3, r3
   28a0c:	adc	r8, r8, r8
   28a10:	adds	r4, r3, #1
   28a14:	adc	r5, r8, #0
   28a18:	subs	r2, r2, #1
   28a1c:	beq	28a3c <__udivmoddi4+0xe4>
   28a20:	cmp	r5, r7
   28a24:	cmpeq	r4, r6
   28a28:	bcs	28a00 <__udivmoddi4+0xa8>
   28a2c:	adds	r4, r4, r4
   28a30:	adc	r5, r5, r5
   28a34:	subs	r2, r2, #1
   28a38:	bne	28a20 <__udivmoddi4+0xc8>
   28a3c:	lsr	r3, r4, ip
   28a40:	orr	r3, r3, r5, lsl fp
   28a44:	lsr	r2, r5, ip
   28a48:	orr	r3, r3, r5, lsr sl
   28a4c:	adds	r0, r0, r4
   28a50:	mov	r4, r3
   28a54:	lsl	r3, r2, ip
   28a58:	orr	r3, r3, r4, lsl sl
   28a5c:	lsl	ip, r4, ip
   28a60:	orr	r3, r3, r4, lsr fp
   28a64:	adc	r1, r1, r5
   28a68:	subs	r0, r0, ip
   28a6c:	mov	r5, r2
   28a70:	sbc	r1, r1, r3
   28a74:	cmp	lr, #0
   28a78:	strdne	r4, [lr]
   28a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

00028a80 <_fini>:
   28a80:	push	{r3, lr}
   28a84:	pop	{r3, pc}
