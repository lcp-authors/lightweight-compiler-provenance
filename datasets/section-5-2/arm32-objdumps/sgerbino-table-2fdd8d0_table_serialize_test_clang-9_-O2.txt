
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011f60 <.init>:
   11f60:	push	{r3, lr}
   11f64:	bl	1207c <_start@@Base+0x3c>
   11f68:	pop	{r3, pc}

Disassembly of section .plt:

00011f6c <strcmp@plt-0x14>:
   11f6c:	push	{lr}		; (str lr, [sp, #-4]!)
   11f70:	ldr	lr, [pc, #4]	; 11f7c <strcmp@plt-0x4>
   11f74:	add	lr, pc, lr
   11f78:	ldr	pc, [lr, #8]!
   11f7c:	andeq	r5, r1, r4, lsl #1

00011f80 <strcmp@plt>:
   11f80:	add	ip, pc, #0, 12
   11f84:	add	ip, ip, #86016	; 0x15000
   11f88:	ldr	pc, [ip, #132]!	; 0x84

00011f8c <printf@plt>:
   11f8c:	add	ip, pc, #0, 12
   11f90:	add	ip, ip, #86016	; 0x15000
   11f94:	ldr	pc, [ip, #124]!	; 0x7c

00011f98 <free@plt>:
   11f98:	add	ip, pc, #0, 12
   11f9c:	add	ip, ip, #86016	; 0x15000
   11fa0:	ldr	pc, [ip, #116]!	; 0x74

00011fa4 <time@plt>:
   11fa4:	add	ip, pc, #0, 12
   11fa8:	add	ip, ip, #86016	; 0x15000
   11fac:	ldr	pc, [ip, #108]!	; 0x6c

00011fb0 <realloc@plt>:
   11fb0:	add	ip, pc, #0, 12
   11fb4:	add	ip, ip, #86016	; 0x15000
   11fb8:	ldr	pc, [ip, #100]!	; 0x64

00011fbc <strcpy@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #86016	; 0x15000
   11fc4:	ldr	pc, [ip, #92]!	; 0x5c

00011fc8 <malloc@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #86016	; 0x15000
   11fd0:	ldr	pc, [ip, #84]!	; 0x54

00011fd4 <__libc_start_main@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #86016	; 0x15000
   11fdc:	ldr	pc, [ip, #76]!	; 0x4c

00011fe0 <__gmon_start__@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #86016	; 0x15000
   11fe8:	ldr	pc, [ip, #68]!	; 0x44

00011fec <strlen@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #86016	; 0x15000
   11ff4:	ldr	pc, [ip, #60]!	; 0x3c

00011ff8 <srand@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #86016	; 0x15000
   12000:	ldr	pc, [ip, #52]!	; 0x34

00012004 <snprintf@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #86016	; 0x15000
   1200c:	ldr	pc, [ip, #44]!	; 0x2c

00012010 <__isoc99_sscanf@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #86016	; 0x15000
   12018:	ldr	pc, [ip, #36]!	; 0x24

0001201c <strncpy@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #86016	; 0x15000
   12024:	ldr	pc, [ip, #28]!

00012028 <rand@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #86016	; 0x15000
   12030:	ldr	pc, [ip, #20]!

00012034 <abort@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #86016	; 0x15000
   1203c:	ldr	pc, [ip, #12]!

Disassembly of section .text:

00012040 <_start@@Base>:
   12040:	mov	fp, #0
   12044:	mov	lr, #0
   12048:	pop	{r1}		; (ldr r1, [sp], #4)
   1204c:	mov	r2, sp
   12050:	push	{r2}		; (str r2, [sp, #-4]!)
   12054:	push	{r0}		; (str r0, [sp, #-4]!)
   12058:	ldr	ip, [pc, #16]	; 12070 <_start@@Base+0x30>
   1205c:	push	{ip}		; (str ip, [sp, #-4]!)
   12060:	ldr	r0, [pc, #12]	; 12074 <_start@@Base+0x34>
   12064:	ldr	r3, [pc, #12]	; 12078 <_start@@Base+0x38>
   12068:	bl	11fd4 <__libc_start_main@plt>
   1206c:	bl	12034 <abort@plt>
   12070:	andeq	r6, r1, r8, asr #5
   12074:	andeq	r2, r1, r0, lsr r1
   12078:	andeq	r6, r1, r8, ror #4
   1207c:	ldr	r3, [pc, #20]	; 12098 <_start@@Base+0x58>
   12080:	ldr	r2, [pc, #20]	; 1209c <_start@@Base+0x5c>
   12084:	add	r3, pc, r3
   12088:	ldr	r2, [r3, r2]
   1208c:	cmp	r2, #0
   12090:	bxeq	lr
   12094:	b	11fe0 <__gmon_start__@plt>
   12098:	andeq	r4, r1, r4, ror pc
   1209c:	andeq	r0, r0, ip, asr #32
   120a0:	ldr	r0, [pc, #24]	; 120c0 <_start@@Base+0x80>
   120a4:	ldr	r3, [pc, #24]	; 120c4 <_start@@Base+0x84>
   120a8:	cmp	r3, r0
   120ac:	bxeq	lr
   120b0:	ldr	r3, [pc, #16]	; 120c8 <_start@@Base+0x88>
   120b4:	cmp	r3, #0
   120b8:	bxeq	lr
   120bc:	bx	r3
   120c0:	andeq	r7, r2, r8, asr r0
   120c4:	andeq	r7, r2, r8, asr r0
   120c8:	andeq	r0, r0, r0
   120cc:	ldr	r0, [pc, #36]	; 120f8 <_start@@Base+0xb8>
   120d0:	ldr	r1, [pc, #36]	; 120fc <_start@@Base+0xbc>
   120d4:	sub	r1, r1, r0
   120d8:	asr	r1, r1, #2
   120dc:	add	r1, r1, r1, lsr #31
   120e0:	asrs	r1, r1, #1
   120e4:	bxeq	lr
   120e8:	ldr	r3, [pc, #16]	; 12100 <_start@@Base+0xc0>
   120ec:	cmp	r3, #0
   120f0:	bxeq	lr
   120f4:	bx	r3
   120f8:	andeq	r7, r2, r8, asr r0
   120fc:	andeq	r7, r2, r8, asr r0
   12100:	andeq	r0, r0, r0
   12104:	push	{r4, lr}
   12108:	ldr	r4, [pc, #24]	; 12128 <_start@@Base+0xe8>
   1210c:	ldrb	r3, [r4]
   12110:	cmp	r3, #0
   12114:	popne	{r4, pc}
   12118:	bl	120a0 <_start@@Base+0x60>
   1211c:	mov	r3, #1
   12120:	strb	r3, [r4]
   12124:	pop	{r4, pc}
   12128:	andeq	r7, r2, r8, asr r0
   1212c:	b	120cc <_start@@Base+0x8c>

00012130 <main@@Base>:
   12130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12134:	add	fp, sp, #28
   12138:	sub	sp, sp, #4
   1213c:	vpush	{d8}
   12140:	sub	sp, sp, #744	; 0x2e8
   12144:	sub	sp, sp, #99328	; 0x18400
   12148:	sub	r0, fp, #104	; 0x68
   1214c:	bl	11fa4 <time@plt>
   12150:	bl	11ff8 <srand@plt>
   12154:	bl	12028 <rand@plt>
   12158:	sub	r5, fp, #100	; 0x64
   1215c:	mov	r4, r0
   12160:	mov	r0, r5
   12164:	bl	12874 <table_init@@Base>
   12168:	movw	r0, #34079	; 0x851f
   1216c:	mov	r2, #0
   12170:	movt	r0, #20971	; 0x51eb
   12174:	smmul	r0, r4, r0
   12178:	asr	r1, r0, #5
   1217c:	add	r0, r1, r0, lsr #31
   12180:	mov	r1, #100	; 0x64
   12184:	mls	r0, r0, r1, r4
   12188:	ldr	r1, [pc, #1660]	; 1280c <main@@Base+0x6dc>
   1218c:	add	r8, r0, #100	; 0x64
   12190:	mov	r0, #0
   12194:	str	r0, [sp]
   12198:	add	r1, pc, r1
   1219c:	mov	r0, r5
   121a0:	bl	132f0 <table_add_column@@Base>
   121a4:	ldr	r1, [pc, #1636]	; 12810 <main@@Base+0x6e0>
   121a8:	mov	sl, r0
   121ac:	mov	r0, r5
   121b0:	mov	r2, #21
   121b4:	add	r1, pc, r1
   121b8:	bl	132f0 <table_add_column@@Base>
   121bc:	cmp	r8, #1
   121c0:	blt	1222c <main@@Base+0xfc>
   121c4:	ldr	r9, [pc, #1608]	; 12814 <main@@Base+0x6e4>
   121c8:	mov	r5, r0
   121cc:	mov	r6, #0
   121d0:	add	r7, sp, #8
   121d4:	sub	r4, fp, #100	; 0x64
   121d8:	add	r9, pc, r9
   121dc:	mov	r0, r7
   121e0:	mov	r1, #255	; 0xff
   121e4:	mov	r2, r9
   121e8:	mov	r3, r6
   121ec:	bl	12004 <snprintf@plt>
   121f0:	mov	r0, r4
   121f4:	bl	1400c <table_add_row@@Base>
   121f8:	mov	r0, r4
   121fc:	mov	r1, r6
   12200:	mov	r2, sl
   12204:	mov	r3, r6
   12208:	bl	145bc <table_set_int@@Base>
   1220c:	mov	r0, r4
   12210:	mov	r1, r6
   12214:	mov	r2, r5
   12218:	mov	r3, r7
   1221c:	bl	14f78 <table_set_string@@Base>
   12220:	add	r6, r6, #1
   12224:	cmp	r8, r6
   12228:	bne	121dc <main@@Base+0xac>
   1222c:	movw	r6, #34464	; 0x86a0
   12230:	sub	r4, fp, #100	; 0x64
   12234:	add	r5, sp, #8
   12238:	movt	r6, #1
   1223c:	mov	r0, r4
   12240:	mov	r1, r5
   12244:	mov	r2, r6
   12248:	bl	150f4 <table_serialize@@Base>
   1224c:	mov	r0, r5
   12250:	mov	r1, r6
   12254:	bl	15380 <table_deserialize@@Base>
   12258:	mov	r8, r0
   1225c:	mov	r0, r4
   12260:	bl	14004 <table_get_row_length@@Base>
   12264:	mov	r5, r0
   12268:	mov	r0, r8
   1226c:	bl	14004 <table_get_row_length@@Base>
   12270:	mov	r4, r0
   12274:	cmp	r0, r5
   12278:	str	r5, [sp, #4]
   1227c:	beq	1229c <main@@Base+0x16c>
   12280:	ldr	r0, [pc, #1424]	; 12818 <main@@Base+0x6e8>
   12284:	ldr	r1, [sp, #4]
   12288:	mov	r2, r4
   1228c:	add	r0, pc, r0
   12290:	bl	11f8c <printf@plt>
   12294:	mvn	r0, #0
   12298:	str	r0, [sp]
   1229c:	sub	r0, fp, #100	; 0x64
   122a0:	bl	13264 <table_get_column_length@@Base>
   122a4:	mov	r7, r0
   122a8:	mov	r0, r8
   122ac:	bl	13264 <table_get_column_length@@Base>
   122b0:	cmp	r0, r7
   122b4:	bne	127cc <main@@Base+0x69c>
   122b8:	ldr	r0, [sp, #4]
   122bc:	cmp	r4, r0
   122c0:	bne	127e8 <main@@Base+0x6b8>
   122c4:	cmp	r4, #1
   122c8:	blt	127e8 <main@@Base+0x6b8>
   122cc:	mov	r4, #0
   122d0:	sub	r9, fp, #100	; 0x64
   122d4:	cmp	r7, #1
   122d8:	bge	12314 <main@@Base+0x1e4>
   122dc:	b	122fc <main@@Base+0x1cc>
   122e0:	ldr	r0, [pc, #1336]	; 12820 <main@@Base+0x6f0>
   122e4:	mov	r1, r4
   122e8:	mov	r2, sl
   122ec:	add	r0, pc, r0
   122f0:	bl	11f8c <printf@plt>
   122f4:	mvn	r0, #0
   122f8:	str	r0, [sp]
   122fc:	ldr	r0, [sp, #4]
   12300:	add	r4, r4, #1
   12304:	cmp	r4, r0
   12308:	beq	127e8 <main@@Base+0x6b8>
   1230c:	cmp	r7, #1
   12310:	blt	122fc <main@@Base+0x1cc>
   12314:	mov	sl, #0
   12318:	b	12354 <main@@Base+0x224>
   1231c:	mov	r0, r9
   12320:	mov	r1, r4
   12324:	mov	r2, sl
   12328:	bl	13d70 <table_get_uint@@Base>
   1232c:	mov	r5, r0
   12330:	mov	r0, r8
   12334:	mov	r1, r4
   12338:	mov	r2, sl
   1233c:	bl	13d70 <table_get_uint@@Base>
   12340:	cmp	r5, r0
   12344:	bne	122e0 <main@@Base+0x1b0>
   12348:	add	sl, sl, #1
   1234c:	cmp	r7, sl
   12350:	beq	122fc <main@@Base+0x1cc>
   12354:	mov	r0, r9
   12358:	mov	r1, sl
   1235c:	bl	132dc <table_get_column_data_type@@Base>
   12360:	cmp	r0, #23
   12364:	bhi	12348 <main@@Base+0x218>
   12368:	add	r1, pc, #4
   1236c:	ldr	r0, [r1, r0, lsl #2]
   12370:	add	pc, r1, r0
   12374:	andeq	r0, r0, r0, rrx
   12378:			; <UNDEFINED> instruction: 0xffffffa8
   1237c:	muleq	r0, r8, r0
   12380:	andeq	r0, r0, r0, asr #1
   12384:	andeq	r0, r0, r8, ror #1
   12388:	andeq	r0, r0, r0, lsl r1
   1238c:	andeq	r0, r0, r8, lsr r1
   12390:	andeq	r0, r0, r0, ror #2
   12394:	andeq	r0, r0, r8, lsl #3
   12398:			; <UNDEFINED> instruction: 0x000001b4
   1239c:	andeq	r0, r0, r0, ror #3
   123a0:	andeq	r0, r0, r8, lsl #4
   123a4:	andeq	r0, r0, r0, lsr r2
   123a8:	andeq	r0, r0, r8, asr r2
   123ac:	andeq	r0, r0, r0, lsl #5
   123b0:	andeq	r0, r0, ip, lsr #5
   123b4:	andeq	r0, r0, r8, ror #5
   123b8:	andeq	r0, r0, r4, lsl r3
   123bc:	andeq	r0, r0, ip, lsr r3
   123c0:	andeq	r0, r0, r0, ror r3
   123c4:	muleq	r0, r8, r3
   123c8:	andeq	r0, r0, r0, asr #7
   123cc:	strdeq	r0, [r0], -ip
   123d0:	andeq	r0, r0, r0, lsr r4
   123d4:	mov	r0, r9
   123d8:	mov	r1, r4
   123dc:	mov	r2, sl
   123e0:	bl	13d58 <table_get_int@@Base>
   123e4:	mov	r5, r8
   123e8:	mov	r8, r0
   123ec:	mov	r1, r4
   123f0:	mov	r2, sl
   123f4:	mov	r0, r5
   123f8:	bl	13d58 <table_get_int@@Base>
   123fc:	cmp	r8, r0
   12400:	mov	r8, r5
   12404:	beq	12348 <main@@Base+0x218>
   12408:	b	122e0 <main@@Base+0x1b0>
   1240c:	mov	r0, r9
   12410:	mov	r1, r4
   12414:	mov	r2, sl
   12418:	bl	13d88 <table_get_int8@@Base>
   1241c:	mov	r5, r0
   12420:	mov	r0, r8
   12424:	mov	r1, r4
   12428:	mov	r2, sl
   1242c:	bl	13d88 <table_get_int8@@Base>
   12430:	b	12340 <main@@Base+0x210>
   12434:	mov	r0, r9
   12438:	mov	r1, r4
   1243c:	mov	r2, sl
   12440:	bl	13da0 <table_get_uint8@@Base>
   12444:	mov	r5, r0
   12448:	mov	r0, r8
   1244c:	mov	r1, r4
   12450:	mov	r2, sl
   12454:	bl	13da0 <table_get_uint8@@Base>
   12458:	b	12340 <main@@Base+0x210>
   1245c:	mov	r0, r9
   12460:	mov	r1, r4
   12464:	mov	r2, sl
   12468:	bl	13db8 <table_get_int16@@Base>
   1246c:	mov	r5, r0
   12470:	mov	r0, r8
   12474:	mov	r1, r4
   12478:	mov	r2, sl
   1247c:	bl	13db8 <table_get_int16@@Base>
   12480:	b	12340 <main@@Base+0x210>
   12484:	mov	r0, r9
   12488:	mov	r1, r4
   1248c:	mov	r2, sl
   12490:	bl	13dd0 <table_get_uint16@@Base>
   12494:	mov	r5, r0
   12498:	mov	r0, r8
   1249c:	mov	r1, r4
   124a0:	mov	r2, sl
   124a4:	bl	13dd0 <table_get_uint16@@Base>
   124a8:	b	12340 <main@@Base+0x210>
   124ac:	mov	r0, r9
   124b0:	mov	r1, r4
   124b4:	mov	r2, sl
   124b8:	bl	13de8 <table_get_int32@@Base>
   124bc:	mov	r5, r0
   124c0:	mov	r0, r8
   124c4:	mov	r1, r4
   124c8:	mov	r2, sl
   124cc:	bl	13de8 <table_get_int32@@Base>
   124d0:	b	12340 <main@@Base+0x210>
   124d4:	mov	r0, r9
   124d8:	mov	r1, r4
   124dc:	mov	r2, sl
   124e0:	bl	13e00 <table_get_uint32@@Base>
   124e4:	mov	r5, r0
   124e8:	mov	r0, r8
   124ec:	mov	r1, r4
   124f0:	mov	r2, sl
   124f4:	bl	13e00 <table_get_uint32@@Base>
   124f8:	b	12340 <main@@Base+0x210>
   124fc:	mov	r0, r9
   12500:	mov	r1, r4
   12504:	mov	r2, sl
   12508:	bl	13e18 <table_get_int64@@Base>
   1250c:	mov	r5, r0
   12510:	mov	r6, r1
   12514:	mov	r0, r8
   12518:	mov	r1, r4
   1251c:	mov	r2, sl
   12520:	bl	13e18 <table_get_int64@@Base>
   12524:	b	12648 <main@@Base+0x518>
   12528:	mov	r0, r9
   1252c:	mov	r1, r4
   12530:	mov	r2, sl
   12534:	bl	13e30 <table_get_uint64@@Base>
   12538:	mov	r5, r0
   1253c:	mov	r6, r1
   12540:	mov	r0, r8
   12544:	mov	r1, r4
   12548:	mov	r2, sl
   1254c:	bl	13e30 <table_get_uint64@@Base>
   12550:	b	12648 <main@@Base+0x518>
   12554:	mov	r0, r9
   12558:	mov	r1, r4
   1255c:	mov	r2, sl
   12560:	bl	13e48 <table_get_short@@Base>
   12564:	mov	r5, r0
   12568:	mov	r0, r8
   1256c:	mov	r1, r4
   12570:	mov	r2, sl
   12574:	bl	13e48 <table_get_short@@Base>
   12578:	b	12340 <main@@Base+0x210>
   1257c:	mov	r0, r9
   12580:	mov	r1, r4
   12584:	mov	r2, sl
   12588:	bl	13e60 <table_get_ushort@@Base>
   1258c:	mov	r5, r0
   12590:	mov	r0, r8
   12594:	mov	r1, r4
   12598:	mov	r2, sl
   1259c:	bl	13e60 <table_get_ushort@@Base>
   125a0:	b	12340 <main@@Base+0x210>
   125a4:	mov	r0, r9
   125a8:	mov	r1, r4
   125ac:	mov	r2, sl
   125b0:	bl	13e78 <table_get_long@@Base>
   125b4:	mov	r5, r0
   125b8:	mov	r0, r8
   125bc:	mov	r1, r4
   125c0:	mov	r2, sl
   125c4:	bl	13e78 <table_get_long@@Base>
   125c8:	b	12340 <main@@Base+0x210>
   125cc:	mov	r0, r9
   125d0:	mov	r1, r4
   125d4:	mov	r2, sl
   125d8:	bl	13e90 <table_get_ulong@@Base>
   125dc:	mov	r5, r0
   125e0:	mov	r0, r8
   125e4:	mov	r1, r4
   125e8:	mov	r2, sl
   125ec:	bl	13e90 <table_get_ulong@@Base>
   125f0:	b	12340 <main@@Base+0x210>
   125f4:	mov	r0, r9
   125f8:	mov	r1, r4
   125fc:	mov	r2, sl
   12600:	bl	13ea8 <table_get_llong@@Base>
   12604:	mov	r5, r0
   12608:	mov	r6, r1
   1260c:	mov	r0, r8
   12610:	mov	r1, r4
   12614:	mov	r2, sl
   12618:	bl	13ea8 <table_get_llong@@Base>
   1261c:	b	12648 <main@@Base+0x518>
   12620:	mov	r0, r9
   12624:	mov	r1, r4
   12628:	mov	r2, sl
   1262c:	bl	13ec0 <table_get_ullong@@Base>
   12630:	mov	r5, r0
   12634:	mov	r6, r1
   12638:	mov	r0, r8
   1263c:	mov	r1, r4
   12640:	mov	r2, sl
   12644:	bl	13ec0 <table_get_ullong@@Base>
   12648:	eor	r1, r6, r1
   1264c:	eor	r0, r5, r0
   12650:	orrs	r0, r0, r1
   12654:	beq	12348 <main@@Base+0x218>
   12658:	b	122e0 <main@@Base+0x1b0>
   1265c:	mov	r0, r9
   12660:	mov	r1, r4
   12664:	mov	r2, sl
   12668:	bl	13ed8 <table_get_float@@Base>
   1266c:	mov	r0, r8
   12670:	mov	r1, r4
   12674:	mov	r2, sl
   12678:	vmov.f32	s16, s0
   1267c:	bl	13ed8 <table_get_float@@Base>
   12680:	vcmp.f32	s16, s0
   12684:	b	126d8 <main@@Base+0x5a8>
   12688:	mov	r0, r9
   1268c:	mov	r1, r4
   12690:	mov	r2, sl
   12694:	bl	13ef0 <table_get_double@@Base>
   12698:	mov	r0, r8
   1269c:	mov	r1, r4
   126a0:	mov	r2, sl
   126a4:	vmov.f64	d8, d0
   126a8:	bl	13ef0 <table_get_double@@Base>
   126ac:	b	126d4 <main@@Base+0x5a4>
   126b0:	mov	r0, r9
   126b4:	mov	r1, r4
   126b8:	mov	r2, sl
   126bc:	bl	13f08 <table_get_ldouble@@Base>
   126c0:	mov	r0, r8
   126c4:	mov	r1, r4
   126c8:	mov	r2, sl
   126cc:	vmov.f64	d8, d0
   126d0:	bl	13f08 <table_get_ldouble@@Base>
   126d4:	vcmp.f64	d8, d0
   126d8:	vmrs	APSR_nzcv, fpscr
   126dc:	beq	12348 <main@@Base+0x218>
   126e0:	b	122e0 <main@@Base+0x1b0>
   126e4:	mov	r0, r9
   126e8:	mov	r1, r4
   126ec:	mov	r2, sl
   126f0:	bl	13f20 <table_get_char@@Base>
   126f4:	mov	r5, r0
   126f8:	mov	r0, r8
   126fc:	mov	r1, r4
   12700:	mov	r2, sl
   12704:	bl	13f20 <table_get_char@@Base>
   12708:	b	12340 <main@@Base+0x210>
   1270c:	mov	r0, r9
   12710:	mov	r1, r4
   12714:	mov	r2, sl
   12718:	bl	13f38 <table_get_uchar@@Base>
   1271c:	mov	r5, r0
   12720:	mov	r0, r8
   12724:	mov	r1, r4
   12728:	mov	r2, sl
   1272c:	bl	13f38 <table_get_uchar@@Base>
   12730:	b	12340 <main@@Base+0x210>
   12734:	mov	r0, r9
   12738:	mov	r1, r4
   1273c:	mov	r2, sl
   12740:	bl	13f50 <table_get_string@@Base>
   12744:	mov	r5, r0
   12748:	mov	r0, r8
   1274c:	mov	r1, r4
   12750:	mov	r2, sl
   12754:	bl	13f50 <table_get_string@@Base>
   12758:	mov	r1, r0
   1275c:	mov	r0, r5
   12760:	bl	11f80 <strcmp@plt>
   12764:	cmp	r0, #0
   12768:	beq	12348 <main@@Base+0x218>
   1276c:	b	122e0 <main@@Base+0x1b0>
   12770:	mov	r0, r9
   12774:	mov	r1, r4
   12778:	mov	r2, sl
   1277c:	bl	13d40 <table_get_bool@@Base>
   12780:	mov	r5, r0
   12784:	mov	r0, r8
   12788:	mov	r1, r4
   1278c:	mov	r2, sl
   12790:	bl	13d40 <table_get_bool@@Base>
   12794:	eor	r0, r5, r0
   12798:	cmp	r0, #1
   1279c:	bne	12348 <main@@Base+0x218>
   127a0:	b	122e0 <main@@Base+0x1b0>
   127a4:	mov	r0, r9
   127a8:	mov	r1, r4
   127ac:	mov	r2, sl
   127b0:	bl	13f64 <table_get_ptr@@Base>
   127b4:	mov	r5, r0
   127b8:	mov	r0, r8
   127bc:	mov	r1, r4
   127c0:	mov	r2, sl
   127c4:	bl	13f64 <table_get_ptr@@Base>
   127c8:	b	12340 <main@@Base+0x210>
   127cc:	mov	r2, r0
   127d0:	ldr	r0, [pc, #68]	; 1281c <main@@Base+0x6ec>
   127d4:	mov	r1, r7
   127d8:	add	r0, pc, r0
   127dc:	bl	11f8c <printf@plt>
   127e0:	mvn	r0, #0
   127e4:	str	r0, [sp]
   127e8:	sub	r0, fp, #100	; 0x64
   127ec:	bl	128d0 <table_destroy@@Base>
   127f0:	mov	r0, r8
   127f4:	bl	128b4 <table_delete@@Base>
   127f8:	ldr	r0, [sp]
   127fc:	sub	sp, fp, #40	; 0x28
   12800:	vpop	{d8}
   12804:	add	sp, sp, #4
   12808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1280c:	andeq	r4, r0, r8, lsr r1
   12810:	andeq	r4, r0, pc, lsl r1
   12814:	andeq	r4, r0, r7, ror r1
   12818:	andeq	r4, r0, sp, asr #32
   1281c:	andeq	r3, r0, ip, lsr fp
   12820:	andeq	r4, r0, r6, rrx

00012824 <table_new@@Base>:
   12824:	push	{fp, lr}
   12828:	mov	fp, sp
   1282c:	mov	r0, #56	; 0x38
   12830:	bl	11fc8 <malloc@plt>
   12834:	vmov.i32	q8, #0	; 0x00000000
   12838:	mov	r1, #0
   1283c:	mov	r2, #10
   12840:	mov	r3, #20
   12844:	str	r1, [r0]
   12848:	stmib	r0, {r1, r2}
   1284c:	str	r1, [r0, #12]
   12850:	str	r1, [r0, #16]
   12854:	str	r1, [r0, #20]
   12858:	str	r3, [r0, #24]
   1285c:	str	r1, [r0, #28]
   12860:	str	r2, [r0, #48]	; 0x30
   12864:	str	r1, [r0, #52]	; 0x34
   12868:	add	r1, r0, #32
   1286c:	vst1.32	{d16-d17}, [r1]
   12870:	pop	{fp, pc}

00012874 <table_init@@Base>:
   12874:	vmov.i32	q8, #0	; 0x00000000
   12878:	mov	r1, #0
   1287c:	mov	r2, #10
   12880:	mov	r3, #20
   12884:	str	r1, [r0]
   12888:	stmib	r0, {r1, r2}
   1288c:	str	r1, [r0, #12]
   12890:	str	r1, [r0, #16]
   12894:	str	r1, [r0, #20]
   12898:	str	r3, [r0, #24]
   1289c:	str	r1, [r0, #28]
   128a0:	str	r2, [r0, #48]	; 0x30
   128a4:	str	r1, [r0, #52]	; 0x34
   128a8:	add	r0, r0, #32
   128ac:	vst1.32	{d16-d17}, [r0]
   128b0:	bx	lr

000128b4 <table_delete@@Base>:
   128b4:	push	{r4, sl, fp, lr}
   128b8:	add	fp, sp, #8
   128bc:	mov	r4, r0
   128c0:	bl	128d0 <table_destroy@@Base>
   128c4:	mov	r0, r4
   128c8:	pop	{r4, sl, fp, lr}
   128cc:	b	11f98 <free@plt>

000128d0 <table_destroy@@Base>:
   128d0:	cmp	r0, #0
   128d4:	bxeq	lr
   128d8:	push	{r4, r5, r6, sl, fp, lr}
   128dc:	add	fp, sp, #16
   128e0:	mvn	r1, #0
   128e4:	mvn	r2, #0
   128e8:	mov	r3, #64	; 0x40
   128ec:	mov	r4, r0
   128f0:	bl	13168 <table_notify@@Base>
   128f4:	mov	r0, r4
   128f8:	bl	14004 <table_get_row_length@@Base>
   128fc:	cmp	r0, #1
   12900:	blt	12924 <table_destroy@@Base+0x54>
   12904:	mov	r5, r0
   12908:	mov	r6, #0
   1290c:	mov	r0, r4
   12910:	mov	r1, r6
   12914:	bl	13fa8 <table_row_destroy@@Base>
   12918:	add	r6, r6, #1
   1291c:	cmp	r5, r6
   12920:	bne	1290c <table_destroy@@Base+0x3c>
   12924:	ldr	r0, [r4, #16]
   12928:	cmp	r0, #0
   1292c:	beq	12934 <table_destroy@@Base+0x64>
   12930:	bl	11f98 <free@plt>
   12934:	mov	r0, r4
   12938:	bl	13264 <table_get_column_length@@Base>
   1293c:	cmp	r0, #1
   12940:	blt	12964 <table_destroy@@Base+0x94>
   12944:	mov	r5, r0
   12948:	mov	r6, #0
   1294c:	mov	r0, r4
   12950:	mov	r1, r6
   12954:	bl	1324c <table_column_destroy@@Base>
   12958:	add	r6, r6, #1
   1295c:	cmp	r5, r6
   12960:	bne	1294c <table_destroy@@Base+0x7c>
   12964:	ldr	r0, [r4]
   12968:	cmp	r0, #0
   1296c:	beq	12974 <table_destroy@@Base+0xa4>
   12970:	bl	11f98 <free@plt>
   12974:	ldr	r0, [r4, #36]	; 0x24
   12978:	cmp	r0, #0
   1297c:	beq	12984 <table_destroy@@Base+0xb4>
   12980:	bl	11f98 <free@plt>
   12984:	ldr	r0, [r4, #40]	; 0x28
   12988:	cmp	r0, #0
   1298c:	beq	12994 <table_destroy@@Base+0xc4>
   12990:	bl	11f98 <free@plt>
   12994:	ldr	r0, [r4, #44]	; 0x2c
   12998:	cmp	r0, #0
   1299c:	pop	{r4, r5, r6, sl, fp, lr}
   129a0:	beq	129a8 <table_destroy@@Base+0xd8>
   129a4:	b	11f98 <free@plt>
   129a8:	bx	lr

000129ac <table_dupe@@Base>:
   129ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129b0:	add	fp, sp, #28
   129b4:	sub	sp, sp, #12
   129b8:	mov	r4, r0
   129bc:	bl	14004 <table_get_row_length@@Base>
   129c0:	mov	r8, r0
   129c4:	mov	r0, r4
   129c8:	bl	13264 <table_get_column_length@@Base>
   129cc:	mov	r6, r0
   129d0:	mov	r0, #56	; 0x38
   129d4:	bl	11fc8 <malloc@plt>
   129d8:	vmov.i32	q8, #0	; 0x00000000
   129dc:	mov	sl, r0
   129e0:	mov	r5, #0
   129e4:	mov	r0, #10
   129e8:	mov	r1, #20
   129ec:	cmp	r6, #1
   129f0:	str	r5, [sl]
   129f4:	str	r5, [sl, #4]
   129f8:	str	r0, [sl, #8]
   129fc:	str	r5, [sl, #12]
   12a00:	str	r5, [sl, #16]
   12a04:	str	r5, [sl, #20]
   12a08:	str	r1, [sl, #24]
   12a0c:	str	r5, [sl, #28]
   12a10:	str	r0, [sl, #48]	; 0x30
   12a14:	add	r0, sl, #32
   12a18:	str	r5, [sl, #52]	; 0x34
   12a1c:	vst1.32	{d16-d17}, [r0]
   12a20:	blt	12a5c <table_dupe@@Base+0xb0>
   12a24:	mov	r0, r4
   12a28:	mov	r1, r5
   12a2c:	bl	132cc <table_get_column_name@@Base>
   12a30:	mov	r7, r0
   12a34:	mov	r0, r4
   12a38:	mov	r1, r5
   12a3c:	bl	132dc <table_get_column_data_type@@Base>
   12a40:	mov	r2, r0
   12a44:	mov	r0, sl
   12a48:	mov	r1, r7
   12a4c:	bl	132f0 <table_add_column@@Base>
   12a50:	add	r5, r5, #1
   12a54:	cmp	r6, r5
   12a58:	bne	12a24 <table_dupe@@Base+0x78>
   12a5c:	cmp	r8, #1
   12a60:	blt	12ed4 <table_dupe@@Base+0x528>
   12a64:	mov	r5, #0
   12a68:	add	r9, sp, #8
   12a6c:	b	12a7c <table_dupe@@Base+0xd0>
   12a70:	add	r5, r5, #1
   12a74:	cmp	r5, r8
   12a78:	beq	12ed4 <table_dupe@@Base+0x528>
   12a7c:	mov	r0, sl
   12a80:	bl	1400c <table_add_row@@Base>
   12a84:	cmp	r6, #1
   12a88:	blt	12a70 <table_dupe@@Base+0xc4>
   12a8c:	mov	r7, #0
   12a90:	b	12ac8 <table_dupe@@Base+0x11c>
   12a94:	mov	r0, r4
   12a98:	mov	r1, r5
   12a9c:	mov	r2, r7
   12aa0:	bl	13f64 <table_get_ptr@@Base>
   12aa4:	str	r0, [sp, #8]
   12aa8:	mov	r0, sl
   12aac:	mov	r1, r5
   12ab0:	mov	r2, r7
   12ab4:	mov	r3, r9
   12ab8:	bl	15098 <table_set_ptr@@Base>
   12abc:	add	r7, r7, #1
   12ac0:	cmp	r6, r7
   12ac4:	beq	12a70 <table_dupe@@Base+0xc4>
   12ac8:	mov	r0, r4
   12acc:	mov	r1, r7
   12ad0:	bl	132dc <table_get_column_data_type@@Base>
   12ad4:	cmp	r0, #23
   12ad8:	bhi	12abc <table_dupe@@Base+0x110>
   12adc:	add	r1, pc, #4
   12ae0:	ldr	r0, [r1, r0, lsl #2]
   12ae4:	add	pc, r1, r0
   12ae8:	andeq	r0, r0, r0, rrx
   12aec:	andeq	r0, r0, r8, lsl #1
   12af0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12af4:	ldrdeq	r0, [r0], -r8
   12af8:	andeq	r0, r0, r0, lsl #2
   12afc:	andeq	r0, r0, r8, lsr #2
   12b00:	andeq	r0, r0, r0, asr r1
   12b04:	andeq	r0, r0, r8, ror r1
   12b08:	andeq	r0, r0, r0, lsr #3
   12b0c:	andeq	r0, r0, r8, asr #3
   12b10:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12b14:	andeq	r0, r0, r8, lsl r2
   12b18:	andeq	r0, r0, r0, asr #4
   12b1c:	andeq	r0, r0, r8, ror #4
   12b20:	muleq	r0, r0, r2
   12b24:			; <UNDEFINED> instruction: 0x000002b8
   12b28:	andeq	r0, r0, r0, ror #5
   12b2c:	andeq	r0, r0, r4, lsl #6
   12b30:	andeq	r0, r0, r8, lsr #6
   12b34:	andeq	r0, r0, ip, asr #6
   12b38:	andeq	r0, r0, r4, ror r3
   12b3c:	muleq	r0, ip, r3
   12b40:	andeq	r0, r0, r4, asr #7
   12b44:			; <UNDEFINED> instruction: 0xffffffac
   12b48:	mov	r0, r4
   12b4c:	mov	r1, r5
   12b50:	mov	r2, r7
   12b54:	bl	13d58 <table_get_int@@Base>
   12b58:	mov	r3, r0
   12b5c:	mov	r0, sl
   12b60:	mov	r1, r5
   12b64:	mov	r2, r7
   12b68:	bl	145bc <table_set_int@@Base>
   12b6c:	b	12abc <table_dupe@@Base+0x110>
   12b70:	mov	r0, r4
   12b74:	mov	r1, r5
   12b78:	mov	r2, r7
   12b7c:	bl	13d70 <table_get_uint@@Base>
   12b80:	mov	r3, r0
   12b84:	mov	r0, sl
   12b88:	mov	r1, r5
   12b8c:	mov	r2, r7
   12b90:	bl	1463c <table_set_uint@@Base>
   12b94:	b	12abc <table_dupe@@Base+0x110>
   12b98:	mov	r0, r4
   12b9c:	mov	r1, r5
   12ba0:	mov	r2, r7
   12ba4:	bl	13d88 <table_get_int8@@Base>
   12ba8:	mov	r3, r0
   12bac:	mov	r0, sl
   12bb0:	mov	r1, r5
   12bb4:	mov	r2, r7
   12bb8:	bl	146bc <table_set_int8@@Base>
   12bbc:	b	12abc <table_dupe@@Base+0x110>
   12bc0:	mov	r0, r4
   12bc4:	mov	r1, r5
   12bc8:	mov	r2, r7
   12bcc:	bl	13da0 <table_get_uint8@@Base>
   12bd0:	mov	r3, r0
   12bd4:	mov	r0, sl
   12bd8:	mov	r1, r5
   12bdc:	mov	r2, r7
   12be0:	bl	1473c <table_set_uint8@@Base>
   12be4:	b	12abc <table_dupe@@Base+0x110>
   12be8:	mov	r0, r4
   12bec:	mov	r1, r5
   12bf0:	mov	r2, r7
   12bf4:	bl	13db8 <table_get_int16@@Base>
   12bf8:	mov	r3, r0
   12bfc:	mov	r0, sl
   12c00:	mov	r1, r5
   12c04:	mov	r2, r7
   12c08:	bl	147bc <table_set_int16@@Base>
   12c0c:	b	12abc <table_dupe@@Base+0x110>
   12c10:	mov	r0, r4
   12c14:	mov	r1, r5
   12c18:	mov	r2, r7
   12c1c:	bl	13dd0 <table_get_uint16@@Base>
   12c20:	mov	r3, r0
   12c24:	mov	r0, sl
   12c28:	mov	r1, r5
   12c2c:	mov	r2, r7
   12c30:	bl	1483c <table_set_uint16@@Base>
   12c34:	b	12abc <table_dupe@@Base+0x110>
   12c38:	mov	r0, r4
   12c3c:	mov	r1, r5
   12c40:	mov	r2, r7
   12c44:	bl	13de8 <table_get_int32@@Base>
   12c48:	mov	r3, r0
   12c4c:	mov	r0, sl
   12c50:	mov	r1, r5
   12c54:	mov	r2, r7
   12c58:	bl	148bc <table_set_int32@@Base>
   12c5c:	b	12abc <table_dupe@@Base+0x110>
   12c60:	mov	r0, r4
   12c64:	mov	r1, r5
   12c68:	mov	r2, r7
   12c6c:	bl	13e00 <table_get_uint32@@Base>
   12c70:	mov	r3, r0
   12c74:	mov	r0, sl
   12c78:	mov	r1, r5
   12c7c:	mov	r2, r7
   12c80:	bl	1493c <table_set_uint32@@Base>
   12c84:	b	12abc <table_dupe@@Base+0x110>
   12c88:	mov	r0, r4
   12c8c:	mov	r1, r5
   12c90:	mov	r2, r7
   12c94:	bl	13e18 <table_get_int64@@Base>
   12c98:	stm	sp, {r0, r1}
   12c9c:	mov	r0, sl
   12ca0:	mov	r1, r5
   12ca4:	mov	r2, r7
   12ca8:	bl	149bc <table_set_int64@@Base>
   12cac:	b	12abc <table_dupe@@Base+0x110>
   12cb0:	mov	r0, r4
   12cb4:	mov	r1, r5
   12cb8:	mov	r2, r7
   12cbc:	bl	13e30 <table_get_uint64@@Base>
   12cc0:	stm	sp, {r0, r1}
   12cc4:	mov	r0, sl
   12cc8:	mov	r1, r5
   12ccc:	mov	r2, r7
   12cd0:	bl	14a44 <table_set_uint64@@Base>
   12cd4:	b	12abc <table_dupe@@Base+0x110>
   12cd8:	mov	r0, r4
   12cdc:	mov	r1, r5
   12ce0:	mov	r2, r7
   12ce4:	bl	13e48 <table_get_short@@Base>
   12ce8:	mov	r3, r0
   12cec:	mov	r0, sl
   12cf0:	mov	r1, r5
   12cf4:	mov	r2, r7
   12cf8:	bl	14acc <table_set_short@@Base>
   12cfc:	b	12abc <table_dupe@@Base+0x110>
   12d00:	mov	r0, r4
   12d04:	mov	r1, r5
   12d08:	mov	r2, r7
   12d0c:	bl	13e60 <table_get_ushort@@Base>
   12d10:	mov	r3, r0
   12d14:	mov	r0, sl
   12d18:	mov	r1, r5
   12d1c:	mov	r2, r7
   12d20:	bl	14b4c <table_set_ushort@@Base>
   12d24:	b	12abc <table_dupe@@Base+0x110>
   12d28:	mov	r0, r4
   12d2c:	mov	r1, r5
   12d30:	mov	r2, r7
   12d34:	bl	13e78 <table_get_long@@Base>
   12d38:	mov	r3, r0
   12d3c:	mov	r0, sl
   12d40:	mov	r1, r5
   12d44:	mov	r2, r7
   12d48:	bl	14bcc <table_set_long@@Base>
   12d4c:	b	12abc <table_dupe@@Base+0x110>
   12d50:	mov	r0, r4
   12d54:	mov	r1, r5
   12d58:	mov	r2, r7
   12d5c:	bl	13e90 <table_get_ulong@@Base>
   12d60:	mov	r3, r0
   12d64:	mov	r0, sl
   12d68:	mov	r1, r5
   12d6c:	mov	r2, r7
   12d70:	bl	14c4c <table_set_ulong@@Base>
   12d74:	b	12abc <table_dupe@@Base+0x110>
   12d78:	mov	r0, r4
   12d7c:	mov	r1, r5
   12d80:	mov	r2, r7
   12d84:	bl	13ea8 <table_get_llong@@Base>
   12d88:	stm	sp, {r0, r1}
   12d8c:	mov	r0, sl
   12d90:	mov	r1, r5
   12d94:	mov	r2, r7
   12d98:	bl	14ccc <table_set_llong@@Base>
   12d9c:	b	12abc <table_dupe@@Base+0x110>
   12da0:	mov	r0, r4
   12da4:	mov	r1, r5
   12da8:	mov	r2, r7
   12dac:	bl	13ec0 <table_get_ullong@@Base>
   12db0:	stm	sp, {r0, r1}
   12db4:	mov	r0, sl
   12db8:	mov	r1, r5
   12dbc:	mov	r2, r7
   12dc0:	bl	14d54 <table_set_ullong@@Base>
   12dc4:	b	12abc <table_dupe@@Base+0x110>
   12dc8:	mov	r0, r4
   12dcc:	mov	r1, r5
   12dd0:	mov	r2, r7
   12dd4:	bl	13ed8 <table_get_float@@Base>
   12dd8:	mov	r0, sl
   12ddc:	mov	r1, r5
   12de0:	mov	r2, r7
   12de4:	bl	14ddc <table_set_float@@Base>
   12de8:	b	12abc <table_dupe@@Base+0x110>
   12dec:	mov	r0, r4
   12df0:	mov	r1, r5
   12df4:	mov	r2, r7
   12df8:	bl	13ef0 <table_get_double@@Base>
   12dfc:	mov	r0, sl
   12e00:	mov	r1, r5
   12e04:	mov	r2, r7
   12e08:	bl	14e68 <table_set_double@@Base>
   12e0c:	b	12abc <table_dupe@@Base+0x110>
   12e10:	mov	r0, r4
   12e14:	mov	r1, r5
   12e18:	mov	r2, r7
   12e1c:	bl	13f08 <table_get_ldouble@@Base>
   12e20:	mov	r0, sl
   12e24:	mov	r1, r5
   12e28:	mov	r2, r7
   12e2c:	bl	14ef0 <table_set_ldouble@@Base>
   12e30:	b	12abc <table_dupe@@Base+0x110>
   12e34:	mov	r0, r4
   12e38:	mov	r1, r5
   12e3c:	mov	r2, r7
   12e40:	bl	13f20 <table_get_char@@Base>
   12e44:	mov	r3, r0
   12e48:	mov	r0, sl
   12e4c:	mov	r1, r5
   12e50:	mov	r2, r7
   12e54:	bl	14f98 <table_set_char@@Base>
   12e58:	b	12abc <table_dupe@@Base+0x110>
   12e5c:	mov	r0, r4
   12e60:	mov	r1, r5
   12e64:	mov	r2, r7
   12e68:	bl	13f38 <table_get_uchar@@Base>
   12e6c:	mov	r3, r0
   12e70:	mov	r0, sl
   12e74:	mov	r1, r5
   12e78:	mov	r2, r7
   12e7c:	bl	15018 <table_set_uchar@@Base>
   12e80:	b	12abc <table_dupe@@Base+0x110>
   12e84:	mov	r0, r4
   12e88:	mov	r1, r5
   12e8c:	mov	r2, r7
   12e90:	bl	13f50 <table_get_string@@Base>
   12e94:	mov	r3, r0
   12e98:	mov	r0, sl
   12e9c:	mov	r1, r5
   12ea0:	mov	r2, r7
   12ea4:	bl	14f78 <table_set_string@@Base>
   12ea8:	b	12abc <table_dupe@@Base+0x110>
   12eac:	mov	r0, r4
   12eb0:	mov	r1, r5
   12eb4:	mov	r2, r7
   12eb8:	bl	13d40 <table_get_bool@@Base>
   12ebc:	mov	r3, r0
   12ec0:	mov	r0, sl
   12ec4:	mov	r1, r5
   12ec8:	mov	r2, r7
   12ecc:	bl	1453c <table_set_bool@@Base>
   12ed0:	b	12abc <table_dupe@@Base+0x110>
   12ed4:	mov	r0, sl
   12ed8:	sub	sp, fp, #28
   12edc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012ee0 <table_get_major_version@@Base>:
   12ee0:	mov	r0, #0
   12ee4:	bx	lr

00012ee8 <table_get_minor_version@@Base>:
   12ee8:	mov	r0, #0
   12eec:	bx	lr

00012ef0 <table_get_patch_version@@Base>:
   12ef0:	mov	r0, #0
   12ef4:	bx	lr

00012ef8 <table_get_version@@Base>:
   12ef8:	ldr	r0, [pc, #4]	; 12f04 <table_get_version@@Base+0xc>
   12efc:	add	r0, pc, r0
   12f00:	bx	lr
   12f04:	andeq	r3, r0, r9, lsl #9

00012f08 <table_get_callback_length@@Base>:
   12f08:	ldr	r0, [r0, #32]
   12f0c:	bx	lr

00012f10 <table_register_callback@@Base>:
   12f10:	push	{r4, r5, r6, r7, fp, lr}
   12f14:	add	fp, sp, #16
   12f18:	mov	r5, r0
   12f1c:	ldr	r0, [r0, #32]
   12f20:	mov	r4, r3
   12f24:	mov	r6, r2
   12f28:	mov	r7, r1
   12f2c:	cmp	r0, #1
   12f30:	blt	12f84 <table_register_callback@@Base+0x74>
   12f34:	ldr	r2, [r5, #36]	; 0x24
   12f38:	mov	r1, #0
   12f3c:	b	12f4c <table_register_callback@@Base+0x3c>
   12f40:	add	r1, r1, #1
   12f44:	cmp	r0, r1
   12f48:	beq	12f84 <table_register_callback@@Base+0x74>
   12f4c:	ldr	r3, [r2, r1, lsl #2]
   12f50:	cmp	r3, r7
   12f54:	bne	12f40 <table_register_callback@@Base+0x30>
   12f58:	ldr	r3, [r5, #40]	; 0x28
   12f5c:	ldr	r3, [r3, r1, lsl #2]
   12f60:	cmp	r3, r6
   12f64:	bne	12f40 <table_register_callback@@Base+0x30>
   12f68:	cmp	r1, #0
   12f6c:	beq	12f84 <table_register_callback@@Base+0x74>
   12f70:	ldr	r0, [r5, #44]	; 0x2c
   12f74:	ldr	r2, [r0, r1, lsl #2]
   12f78:	orr	r2, r2, r4
   12f7c:	str	r2, [r0, r1, lsl #2]
   12f80:	pop	{r4, r5, r6, r7, fp, pc}
   12f84:	ldr	r1, [r5, #48]	; 0x30
   12f88:	udiv	r2, r0, r1
   12f8c:	mls	r2, r2, r1, r0
   12f90:	cmp	r2, #0
   12f94:	bne	12fe0 <table_register_callback@@Base+0xd0>
   12f98:	ldr	r2, [r5, #52]	; 0x34
   12f9c:	ldr	r0, [r5, #36]	; 0x24
   12fa0:	add	r1, r2, r1
   12fa4:	str	r1, [r5, #52]	; 0x34
   12fa8:	lsl	r1, r1, #2
   12fac:	bl	11fb0 <realloc@plt>
   12fb0:	str	r0, [r5, #36]	; 0x24
   12fb4:	ldr	r1, [r5, #52]	; 0x34
   12fb8:	ldr	r0, [r5, #40]	; 0x28
   12fbc:	lsl	r1, r1, #2
   12fc0:	bl	11fb0 <realloc@plt>
   12fc4:	str	r0, [r5, #40]	; 0x28
   12fc8:	ldr	r1, [r5, #52]	; 0x34
   12fcc:	ldr	r0, [r5, #44]	; 0x2c
   12fd0:	lsl	r1, r1, #2
   12fd4:	bl	11fb0 <realloc@plt>
   12fd8:	str	r0, [r5, #44]	; 0x2c
   12fdc:	ldr	r0, [r5, #32]
   12fe0:	ldr	r1, [r5, #36]	; 0x24
   12fe4:	str	r7, [r1, r0, lsl #2]
   12fe8:	ldr	r1, [r5, #40]	; 0x28
   12fec:	str	r6, [r1, r0, lsl #2]
   12ff0:	ldr	r1, [r5, #44]	; 0x2c
   12ff4:	str	r4, [r1, r0, lsl #2]
   12ff8:	ldr	r0, [r5, #32]
   12ffc:	add	r0, r0, #1
   13000:	str	r0, [r5, #32]
   13004:	pop	{r4, r5, r6, r7, fp, pc}

00013008 <table_unregister_callback@@Base>:
   13008:	push	{r4, r5, r6, sl, fp, lr}
   1300c:	add	fp, sp, #16
   13010:	ldr	r4, [r0, #32]
   13014:	cmp	r4, #1
   13018:	blt	13164 <table_unregister_callback@@Base+0x15c>
   1301c:	ldr	r3, [r0, #36]	; 0x24
   13020:	mov	r6, r0
   13024:	mov	r0, #0
   13028:	b	13038 <table_unregister_callback@@Base+0x30>
   1302c:	add	r0, r0, #1
   13030:	cmp	r0, r4
   13034:	beq	13164 <table_unregister_callback@@Base+0x15c>
   13038:	ldr	r5, [r3, r0, lsl #2]
   1303c:	cmp	r5, r1
   13040:	bne	1302c <table_unregister_callback@@Base+0x24>
   13044:	ldr	r5, [r6, #40]	; 0x28
   13048:	ldr	r5, [r5, r0, lsl #2]
   1304c:	cmp	r5, r2
   13050:	bne	1302c <table_unregister_callback@@Base+0x24>
   13054:	sub	r1, r4, #1
   13058:	cmp	r0, r1
   1305c:	bge	130e0 <table_unregister_callback@@Base+0xd8>
   13060:	add	r2, r0, #1
   13064:	ldr	r1, [r3, r2, lsl #2]
   13068:	str	r1, [r3, r0, lsl #2]
   1306c:	ldr	r1, [r6, #40]	; 0x28
   13070:	ldr	r3, [r1, r2, lsl #2]
   13074:	str	r3, [r1, r0, lsl #2]
   13078:	ldr	r1, [r6, #44]	; 0x2c
   1307c:	ldr	r3, [r1, r2, lsl #2]
   13080:	str	r3, [r1, r0, lsl #2]
   13084:	ldr	r1, [r6, #32]
   13088:	sub	r1, r1, #1
   1308c:	cmp	r2, r1
   13090:	bge	130e0 <table_unregister_callback@@Base+0xd8>
   13094:	ldr	r1, [r6, #36]	; 0x24
   13098:	add	r1, r1, r0, lsl #2
   1309c:	ldr	r2, [r1, #8]
   130a0:	str	r2, [r1, #4]
   130a4:	ldr	r1, [r6, #40]	; 0x28
   130a8:	add	r1, r1, r0, lsl #2
   130ac:	ldr	r2, [r1, #8]
   130b0:	str	r2, [r1, #4]
   130b4:	ldr	r1, [r6, #44]	; 0x2c
   130b8:	add	r1, r1, r0, lsl #2
   130bc:	ldr	r2, [r1, #8]
   130c0:	str	r2, [r1, #4]
   130c4:	add	r2, r0, #1
   130c8:	add	r0, r0, #2
   130cc:	ldr	r1, [r6, #32]
   130d0:	sub	r1, r1, #1
   130d4:	cmp	r0, r1
   130d8:	mov	r0, r2
   130dc:	blt	13094 <table_unregister_callback@@Base+0x8c>
   130e0:	str	r1, [r6, #32]
   130e4:	ldr	r2, [r6, #48]	; 0x30
   130e8:	udiv	r0, r1, r2
   130ec:	mls	r0, r0, r2, r1
   130f0:	cmp	r0, #0
   130f4:	popne	{r4, r5, r6, sl, fp, pc}
   130f8:	ldr	r1, [r6, #52]	; 0x34
   130fc:	ldr	r0, [r6, #36]	; 0x24
   13100:	subs	r1, r1, r2
   13104:	str	r1, [r6, #52]	; 0x34
   13108:	beq	13140 <table_unregister_callback@@Base+0x138>
   1310c:	lsl	r1, r1, #2
   13110:	bl	11fb0 <realloc@plt>
   13114:	str	r0, [r6, #36]	; 0x24
   13118:	ldr	r1, [r6, #52]	; 0x34
   1311c:	ldr	r0, [r6, #40]	; 0x28
   13120:	lsl	r1, r1, #2
   13124:	bl	11fb0 <realloc@plt>
   13128:	str	r0, [r6, #40]	; 0x28
   1312c:	ldr	r1, [r6, #52]	; 0x34
   13130:	ldr	r0, [r6, #44]	; 0x2c
   13134:	lsl	r1, r1, #2
   13138:	bl	11fb0 <realloc@plt>
   1313c:	b	13160 <table_unregister_callback@@Base+0x158>
   13140:	bl	11f98 <free@plt>
   13144:	ldr	r0, [r6, #40]	; 0x28
   13148:	bl	11f98 <free@plt>
   1314c:	ldr	r0, [r6, #44]	; 0x2c
   13150:	bl	11f98 <free@plt>
   13154:	mov	r0, #0
   13158:	str	r0, [r6, #36]	; 0x24
   1315c:	str	r0, [r6, #40]	; 0x28
   13160:	str	r0, [r6, #44]	; 0x2c
   13164:	pop	{r4, r5, r6, sl, fp, pc}

00013168 <table_notify@@Base>:
   13168:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1316c:	add	fp, sp, #24
   13170:	sub	sp, sp, #8
   13174:	mov	r7, r0
   13178:	ldr	r0, [r0, #32]
   1317c:	cmp	r0, #1
   13180:	blt	131e4 <table_notify@@Base+0x7c>
   13184:	mov	r4, r3
   13188:	mov	r8, r2
   1318c:	mov	r9, r1
   13190:	mov	r5, #0
   13194:	b	131a4 <table_notify@@Base+0x3c>
   13198:	add	r5, r5, #1
   1319c:	cmp	r5, r0
   131a0:	bge	131e4 <table_notify@@Base+0x7c>
   131a4:	ldr	r1, [r7, #44]	; 0x2c
   131a8:	ldr	r1, [r1, r5, lsl #2]
   131ac:	tst	r1, r4
   131b0:	beq	13198 <table_notify@@Base+0x30>
   131b4:	ldr	r0, [r7, #36]	; 0x24
   131b8:	ldr	r1, [r7, #40]	; 0x28
   131bc:	mov	r2, r8
   131c0:	mov	r3, r4
   131c4:	ldr	r6, [r0, r5, lsl #2]
   131c8:	ldr	r0, [r1, r5, lsl #2]
   131cc:	mov	r1, r9
   131d0:	str	r0, [sp]
   131d4:	mov	r0, r7
   131d8:	blx	r6
   131dc:	ldr	r0, [r7, #32]
   131e0:	b	13198 <table_notify@@Base+0x30>
   131e4:	sub	sp, fp, #24
   131e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000131ec <table_column_init@@Base>:
   131ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131f0:	add	fp, sp, #24
   131f4:	ldr	r7, [r0]
   131f8:	mov	r0, r2
   131fc:	mov	r4, r3
   13200:	mov	r5, r2
   13204:	mov	r6, r1
   13208:	bl	11fec <strlen@plt>
   1320c:	add	r0, r0, #1
   13210:	bl	11fc8 <malloc@plt>
   13214:	ldr	r8, [fp, #8]
   13218:	add	r6, r6, r6, lsl #1
   1321c:	cmp	r0, #0
   13220:	str	r0, [r7, r6, lsl #2]
   13224:	beq	13230 <table_column_init@@Base+0x44>
   13228:	mov	r1, r5
   1322c:	bl	11fbc <strcpy@plt>
   13230:	add	r0, r7, r6, lsl #2
   13234:	stmib	r0, {r4, r8}
   13238:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001323c <table_get_col_ptr@@Base>:
   1323c:	ldr	r0, [r0]
   13240:	add	r1, r1, r1, lsl #1
   13244:	add	r0, r0, r1, lsl #2
   13248:	bx	lr

0001324c <table_column_destroy@@Base>:
   1324c:	ldr	r0, [r0]
   13250:	add	r1, r1, r1, lsl #1
   13254:	ldr	r0, [r0, r1, lsl #2]
   13258:	cmp	r0, #0
   1325c:	bxeq	lr
   13260:	b	11f98 <free@plt>

00013264 <table_get_column_length@@Base>:
   13264:	ldr	r0, [r0, #4]
   13268:	bx	lr

0001326c <table_get_column@@Base>:
   1326c:	push	{r4, r5, r6, r7, fp, lr}
   13270:	add	fp, sp, #16
   13274:	ldr	r6, [r0, #4]
   13278:	cmp	r6, #1
   1327c:	blt	132b8 <table_get_column@@Base+0x4c>
   13280:	ldr	r7, [r0]
   13284:	mov	r5, r1
   13288:	mov	r4, #0
   1328c:	ldr	r0, [r7]
   13290:	mov	r1, r5
   13294:	bl	11f80 <strcmp@plt>
   13298:	cmp	r0, #0
   1329c:	beq	132bc <table_get_column@@Base+0x50>
   132a0:	add	r4, r4, #1
   132a4:	add	r7, r7, #12
   132a8:	cmp	r6, r4
   132ac:	bne	1328c <table_get_column@@Base+0x20>
   132b0:	mov	r4, r6
   132b4:	b	132bc <table_get_column@@Base+0x50>
   132b8:	mov	r4, #0
   132bc:	cmp	r4, r6
   132c0:	mvneq	r4, #0
   132c4:	mov	r0, r4
   132c8:	pop	{r4, r5, r6, r7, fp, pc}

000132cc <table_get_column_name@@Base>:
   132cc:	ldr	r0, [r0]
   132d0:	add	r1, r1, r1, lsl #1
   132d4:	ldr	r0, [r0, r1, lsl #2]
   132d8:	bx	lr

000132dc <table_get_column_data_type@@Base>:
   132dc:	ldr	r0, [r0]
   132e0:	add	r1, r1, r1, lsl #1
   132e4:	add	r0, r0, r1, lsl #2
   132e8:	ldr	r0, [r0, #4]
   132ec:	bx	lr

000132f0 <table_add_column@@Base>:
   132f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132f4:	add	fp, sp, #28
   132f8:	sub	sp, sp, #4
   132fc:	mov	r4, r0
   13300:	mov	r8, r1
   13304:	ldr	r0, [r0, #4]
   13308:	mov	r9, r2
   1330c:	ldr	r1, [r4, #8]
   13310:	udiv	r2, r0, r1
   13314:	mls	r0, r2, r1, r0
   13318:	cmp	r0, #0
   1331c:	bne	13388 <table_add_column@@Base+0x98>
   13320:	ldr	r2, [r4, #12]
   13324:	ldr	r0, [r4]
   13328:	add	r1, r2, r1
   1332c:	str	r1, [r4, #12]
   13330:	add	r1, r1, r1, lsl #1
   13334:	lsl	r1, r1, #2
   13338:	bl	11fb0 <realloc@plt>
   1333c:	str	r0, [r4]
   13340:	mov	r0, r4
   13344:	bl	14004 <table_get_row_length@@Base>
   13348:	cmp	r0, #1
   1334c:	blt	13388 <table_add_column@@Base+0x98>
   13350:	mov	r6, r0
   13354:	mov	r5, #0
   13358:	mov	r0, r4
   1335c:	mov	r1, r5
   13360:	bl	13f9c <table_get_row_ptr@@Base>
   13364:	ldr	r1, [r4, #12]
   13368:	mov	r7, r0
   1336c:	ldr	r0, [r0]
   13370:	lsl	r1, r1, #2
   13374:	bl	11fb0 <realloc@plt>
   13378:	add	r5, r5, #1
   1337c:	str	r0, [r7]
   13380:	cmp	r6, r5
   13384:	bne	13358 <table_add_column@@Base+0x68>
   13388:	mov	r0, r4
   1338c:	bl	14004 <table_get_row_length@@Base>
   13390:	ldr	r6, [r4, #4]
   13394:	mov	r7, r0
   13398:	mov	r0, r9
   1339c:	bl	13d0c <table_get_default_compare_function_for_data_type@@Base>
   133a0:	ldr	r5, [r4]
   133a4:	mov	sl, r0
   133a8:	mov	r0, r8
   133ac:	bl	11fec <strlen@plt>
   133b0:	add	r0, r0, #1
   133b4:	bl	11fc8 <malloc@plt>
   133b8:	mov	r1, r8
   133bc:	add	r8, r6, r6, lsl #1
   133c0:	cmp	r0, #0
   133c4:	str	r0, [r5, r8, lsl #2]
   133c8:	beq	133d0 <table_add_column@@Base+0xe0>
   133cc:	bl	11fbc <strcpy@plt>
   133d0:	add	r0, r5, r8, lsl #2
   133d4:	cmp	r7, #1
   133d8:	stmib	r0, {r9, sl}
   133dc:	blt	13400 <table_add_column@@Base+0x110>
   133e0:	mov	r5, #0
   133e4:	mov	r0, r4
   133e8:	mov	r1, r5
   133ec:	mov	r2, r6
   133f0:	bl	15764 <table_cell_init@@Base>
   133f4:	add	r5, r5, #1
   133f8:	cmp	r7, r5
   133fc:	bne	133e4 <table_add_column@@Base+0xf4>
   13400:	ldr	r2, [r4, #4]
   13404:	mov	r0, r4
   13408:	mvn	r1, #0
   1340c:	mov	r3, #8
   13410:	bl	13168 <table_notify@@Base>
   13414:	ldr	r0, [r4, #4]
   13418:	add	r1, r0, #1
   1341c:	str	r1, [r4, #4]
   13420:	sub	sp, fp, #28
   13424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013428 <table_remove_column@@Base>:
   13428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1342c:	add	fp, sp, #28
   13430:	sub	sp, sp, #12
   13434:	mov	r5, r0
   13438:	ldr	r0, [r0]
   1343c:	add	r6, r1, r1, lsl #1
   13440:	mov	r4, r1
   13444:	ldr	r0, [r0, r6, lsl #2]
   13448:	cmp	r0, #0
   1344c:	beq	13454 <table_remove_column@@Base+0x2c>
   13450:	bl	11f98 <free@plt>
   13454:	ldr	r7, [r5, #4]
   13458:	sub	r8, r7, #1
   1345c:	cmp	r8, r4
   13460:	ble	13494 <table_remove_column@@Base+0x6c>
   13464:	mvn	r0, r4
   13468:	lsl	r1, r6, #2
   1346c:	add	r0, r0, r7
   13470:	ldr	r2, [r5]
   13474:	subs	r0, r0, #1
   13478:	add	r2, r2, r1
   1347c:	add	r1, r1, #12
   13480:	vldr	d16, [r2, #12]
   13484:	ldr	r3, [r2, #20]
   13488:	str	r3, [r2, #8]
   1348c:	vstr	d16, [r2]
   13490:	bne	13470 <table_remove_column@@Base+0x48>
   13494:	mov	r0, r5
   13498:	bl	14004 <table_get_row_length@@Base>
   1349c:	cmp	r0, #1
   134a0:	blt	13560 <table_remove_column@@Base+0x138>
   134a4:	mov	r9, r0
   134a8:	mvn	r0, r4
   134ac:	sub	sl, r7, #2
   134b0:	add	r0, r7, r0
   134b4:	mov	r7, #0
   134b8:	and	r0, r0, #1
   134bc:	str	r0, [sp, #8]
   134c0:	add	r0, r4, #1
   134c4:	str	r0, [sp, #4]
   134c8:	b	134d8 <table_remove_column@@Base+0xb0>
   134cc:	add	r7, r7, #1
   134d0:	cmp	r7, r9
   134d4:	beq	13560 <table_remove_column@@Base+0x138>
   134d8:	mov	r0, r5
   134dc:	mov	r1, r7
   134e0:	mov	r2, r4
   134e4:	bl	157a0 <table_cell_destroy@@Base>
   134e8:	mov	r0, r5
   134ec:	mov	r1, r7
   134f0:	bl	13f9c <table_get_row_ptr@@Base>
   134f4:	cmp	r8, r4
   134f8:	ble	134cc <table_remove_column@@Base+0xa4>
   134fc:	ldr	r1, [sp, #8]
   13500:	mov	r2, r4
   13504:	cmp	r1, #0
   13508:	beq	13520 <table_remove_column@@Base+0xf8>
   1350c:	ldr	r1, [r0]
   13510:	add	r2, r1, r4, lsl #2
   13514:	ldr	r2, [r2, #4]
   13518:	str	r2, [r1, r4, lsl #2]
   1351c:	ldr	r2, [sp, #4]
   13520:	cmp	sl, r4
   13524:	beq	134cc <table_remove_column@@Base+0xa4>
   13528:	sub	r1, r8, r2
   1352c:	lsl	r2, r2, #2
   13530:	ldr	r3, [r0]
   13534:	subs	r1, r1, #2
   13538:	add	r6, r3, r2
   1353c:	ldr	r6, [r6, #4]
   13540:	str	r6, [r3, r2]
   13544:	ldr	r3, [r0]
   13548:	add	r3, r3, r2
   1354c:	add	r2, r2, #8
   13550:	ldr	r6, [r3, #8]
   13554:	str	r6, [r3, #4]
   13558:	bne	13530 <table_remove_column@@Base+0x108>
   1355c:	b	134cc <table_remove_column@@Base+0xa4>
   13560:	ldmib	r5, {r0, r1}
   13564:	sub	r0, r0, #1
   13568:	udiv	r2, r0, r1
   1356c:	str	r0, [r5, #4]
   13570:	mls	r0, r2, r1, r0
   13574:	cmp	r0, #0
   13578:	bne	135e4 <table_remove_column@@Base+0x1bc>
   1357c:	ldr	r2, [r5, #12]
   13580:	ldr	r0, [r5]
   13584:	sub	r1, r2, r1
   13588:	str	r1, [r5, #12]
   1358c:	add	r1, r1, r1, lsl #1
   13590:	lsl	r1, r1, #2
   13594:	bl	11fb0 <realloc@plt>
   13598:	str	r0, [r5]
   1359c:	mov	r0, r5
   135a0:	bl	14004 <table_get_row_length@@Base>
   135a4:	cmp	r0, #1
   135a8:	blt	135e4 <table_remove_column@@Base+0x1bc>
   135ac:	mov	r8, r0
   135b0:	mov	r7, #0
   135b4:	mov	r0, r5
   135b8:	mov	r1, r7
   135bc:	bl	13f9c <table_get_row_ptr@@Base>
   135c0:	ldr	r1, [r5, #12]
   135c4:	mov	r6, r0
   135c8:	ldr	r0, [r0]
   135cc:	lsl	r1, r1, #2
   135d0:	bl	11fb0 <realloc@plt>
   135d4:	add	r7, r7, #1
   135d8:	str	r0, [r6]
   135dc:	cmp	r8, r7
   135e0:	bne	135b4 <table_remove_column@@Base+0x18c>
   135e4:	mov	r0, r5
   135e8:	mvn	r1, #0
   135ec:	mov	r2, r4
   135f0:	mov	r3, #16
   135f4:	bl	13168 <table_notify@@Base>
   135f8:	mov	r0, #0
   135fc:	sub	sp, fp, #28
   13600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013604 <table_get_column_compare_function@@Base>:
   13604:	ldr	r0, [r0]
   13608:	add	r1, r1, r1, lsl #1
   1360c:	add	r0, r0, r1, lsl #2
   13610:	ldr	r0, [r0, #8]
   13614:	bx	lr

00013618 <table_set_column_compare_function@@Base>:
   13618:	ldr	r0, [r0]
   1361c:	add	r1, r1, r1, lsl #1
   13620:	add	r0, r0, r1, lsl #2
   13624:	str	r2, [r0, #8]
   13628:	bx	lr

0001362c <table_compare_bool@@Base>:
   1362c:	cmp	r0, #0
   13630:	beq	13664 <table_compare_bool@@Base+0x38>
   13634:	cmp	r1, #0
   13638:	moveq	r1, #1
   1363c:	moveq	r0, r1
   13640:	bxeq	lr
   13644:	ldrb	r2, [r1]
   13648:	ldrb	r0, [r0]
   1364c:	mov	r1, #0
   13650:	cmp	r0, r2
   13654:	mvncc	r1, #0
   13658:	movwhi	r1, #1
   1365c:	mov	r0, r1
   13660:	bx	lr
   13664:	cmp	r1, #0
   13668:	mvnne	r1, #0
   1366c:	mov	r0, r1
   13670:	bx	lr

00013674 <table_compare_int@@Base>:
   13674:	cmp	r0, #0
   13678:	beq	136ac <table_compare_int@@Base+0x38>
   1367c:	cmp	r1, #0
   13680:	moveq	r1, #1
   13684:	moveq	r0, r1
   13688:	bxeq	lr
   1368c:	ldr	r2, [r1]
   13690:	ldr	r0, [r0]
   13694:	mov	r1, #0
   13698:	cmp	r0, r2
   1369c:	mvnlt	r1, #0
   136a0:	movwgt	r1, #1
   136a4:	mov	r0, r1
   136a8:	bx	lr
   136ac:	cmp	r1, #0
   136b0:	mvnne	r1, #0
   136b4:	mov	r0, r1
   136b8:	bx	lr

000136bc <table_compare_uint@@Base>:
   136bc:	cmp	r0, #0
   136c0:	beq	136f4 <table_compare_uint@@Base+0x38>
   136c4:	cmp	r1, #0
   136c8:	moveq	r1, #1
   136cc:	moveq	r0, r1
   136d0:	bxeq	lr
   136d4:	ldr	r2, [r1]
   136d8:	ldr	r0, [r0]
   136dc:	mov	r1, #0
   136e0:	cmp	r0, r2
   136e4:	mvncc	r1, #0
   136e8:	movwhi	r1, #1
   136ec:	mov	r0, r1
   136f0:	bx	lr
   136f4:	cmp	r1, #0
   136f8:	mvnne	r1, #0
   136fc:	mov	r0, r1
   13700:	bx	lr

00013704 <table_compare_int8@@Base>:
   13704:	cmp	r0, #0
   13708:	beq	1373c <table_compare_int8@@Base+0x38>
   1370c:	cmp	r1, #0
   13710:	moveq	r1, #1
   13714:	moveq	r0, r1
   13718:	bxeq	lr
   1371c:	ldrsb	r2, [r1]
   13720:	ldrsb	r0, [r0]
   13724:	mov	r1, #0
   13728:	cmp	r0, r2
   1372c:	mvnlt	r1, #0
   13730:	movwgt	r1, #1
   13734:	mov	r0, r1
   13738:	bx	lr
   1373c:	cmp	r1, #0
   13740:	mvnne	r1, #0
   13744:	mov	r0, r1
   13748:	bx	lr

0001374c <table_compare_uint8@@Base>:
   1374c:	cmp	r0, #0
   13750:	beq	13784 <table_compare_uint8@@Base+0x38>
   13754:	cmp	r1, #0
   13758:	moveq	r1, #1
   1375c:	moveq	r0, r1
   13760:	bxeq	lr
   13764:	ldrb	r2, [r1]
   13768:	ldrb	r0, [r0]
   1376c:	mov	r1, #0
   13770:	cmp	r0, r2
   13774:	mvncc	r1, #0
   13778:	movwhi	r1, #1
   1377c:	mov	r0, r1
   13780:	bx	lr
   13784:	cmp	r1, #0
   13788:	mvnne	r1, #0
   1378c:	mov	r0, r1
   13790:	bx	lr

00013794 <table_compare_int16@@Base>:
   13794:	cmp	r0, #0
   13798:	beq	137cc <table_compare_int16@@Base+0x38>
   1379c:	cmp	r1, #0
   137a0:	moveq	r1, #1
   137a4:	moveq	r0, r1
   137a8:	bxeq	lr
   137ac:	ldrsh	r2, [r1]
   137b0:	ldrsh	r0, [r0]
   137b4:	mov	r1, #0
   137b8:	cmp	r0, r2
   137bc:	mvnlt	r1, #0
   137c0:	movwgt	r1, #1
   137c4:	mov	r0, r1
   137c8:	bx	lr
   137cc:	cmp	r1, #0
   137d0:	mvnne	r1, #0
   137d4:	mov	r0, r1
   137d8:	bx	lr

000137dc <table_compare_uint16@@Base>:
   137dc:	cmp	r0, #0
   137e0:	beq	13814 <table_compare_uint16@@Base+0x38>
   137e4:	cmp	r1, #0
   137e8:	moveq	r1, #1
   137ec:	moveq	r0, r1
   137f0:	bxeq	lr
   137f4:	ldrh	r2, [r1]
   137f8:	ldrh	r0, [r0]
   137fc:	mov	r1, #0
   13800:	cmp	r0, r2
   13804:	mvncc	r1, #0
   13808:	movwhi	r1, #1
   1380c:	mov	r0, r1
   13810:	bx	lr
   13814:	cmp	r1, #0
   13818:	mvnne	r1, #0
   1381c:	mov	r0, r1
   13820:	bx	lr

00013824 <table_compare_int32@@Base>:
   13824:	cmp	r0, #0
   13828:	beq	1385c <table_compare_int32@@Base+0x38>
   1382c:	cmp	r1, #0
   13830:	moveq	r1, #1
   13834:	moveq	r0, r1
   13838:	bxeq	lr
   1383c:	ldr	r2, [r1]
   13840:	ldr	r0, [r0]
   13844:	mov	r1, #0
   13848:	cmp	r0, r2
   1384c:	mvnlt	r1, #0
   13850:	movwgt	r1, #1
   13854:	mov	r0, r1
   13858:	bx	lr
   1385c:	cmp	r1, #0
   13860:	mvnne	r1, #0
   13864:	mov	r0, r1
   13868:	bx	lr

0001386c <table_compare_uint32@@Base>:
   1386c:	cmp	r0, #0
   13870:	beq	138a4 <table_compare_uint32@@Base+0x38>
   13874:	cmp	r1, #0
   13878:	moveq	r1, #1
   1387c:	moveq	r0, r1
   13880:	bxeq	lr
   13884:	ldr	r2, [r1]
   13888:	ldr	r0, [r0]
   1388c:	mov	r1, #0
   13890:	cmp	r0, r2
   13894:	mvncc	r1, #0
   13898:	movwhi	r1, #1
   1389c:	mov	r0, r1
   138a0:	bx	lr
   138a4:	cmp	r1, #0
   138a8:	mvnne	r1, #0
   138ac:	mov	r0, r1
   138b0:	bx	lr

000138b4 <table_compare_int64@@Base>:
   138b4:	cmp	r0, #0
   138b8:	beq	1390c <table_compare_int64@@Base+0x58>
   138bc:	cmp	r1, #0
   138c0:	moveq	r1, #1
   138c4:	moveq	r0, r1
   138c8:	bxeq	lr
   138cc:	push	{r5, r7, fp, lr}
   138d0:	add	fp, sp, #8
   138d4:	ldm	r0, {r0, r5}
   138d8:	ldm	r1, {r2, r7}
   138dc:	mov	r1, #0
   138e0:	subs	r3, r0, r2
   138e4:	sbcs	r3, r5, r7
   138e8:	movwlt	r1, #1
   138ec:	cmp	r1, #0
   138f0:	mvnne	r1, #0
   138f4:	subs	r0, r2, r0
   138f8:	sbcs	r0, r7, r5
   138fc:	movwlt	r1, #1
   13900:	pop	{r5, r7, fp, lr}
   13904:	mov	r0, r1
   13908:	bx	lr
   1390c:	cmp	r1, #0
   13910:	mvnne	r1, #0
   13914:	mov	r0, r1
   13918:	bx	lr

0001391c <table_compare_uint64@@Base>:
   1391c:	cmp	r0, #0
   13920:	beq	13974 <table_compare_uint64@@Base+0x58>
   13924:	cmp	r1, #0
   13928:	moveq	r1, #1
   1392c:	moveq	r0, r1
   13930:	bxeq	lr
   13934:	push	{r5, r7, fp, lr}
   13938:	add	fp, sp, #8
   1393c:	ldm	r0, {r0, r5}
   13940:	ldm	r1, {r2, r7}
   13944:	mov	r1, #0
   13948:	subs	r3, r0, r2
   1394c:	sbcs	r3, r5, r7
   13950:	movwcc	r1, #1
   13954:	cmp	r1, #0
   13958:	mvnne	r1, #0
   1395c:	subs	r0, r2, r0
   13960:	sbcs	r0, r7, r5
   13964:	movwcc	r1, #1
   13968:	pop	{r5, r7, fp, lr}
   1396c:	mov	r0, r1
   13970:	bx	lr
   13974:	cmp	r1, #0
   13978:	mvnne	r1, #0
   1397c:	mov	r0, r1
   13980:	bx	lr

00013984 <table_compare_short@@Base>:
   13984:	cmp	r0, #0
   13988:	beq	139bc <table_compare_short@@Base+0x38>
   1398c:	cmp	r1, #0
   13990:	moveq	r1, #1
   13994:	moveq	r0, r1
   13998:	bxeq	lr
   1399c:	ldrsh	r2, [r1]
   139a0:	ldrsh	r0, [r0]
   139a4:	mov	r1, #0
   139a8:	cmp	r0, r2
   139ac:	mvnlt	r1, #0
   139b0:	movwgt	r1, #1
   139b4:	mov	r0, r1
   139b8:	bx	lr
   139bc:	cmp	r1, #0
   139c0:	mvnne	r1, #0
   139c4:	mov	r0, r1
   139c8:	bx	lr

000139cc <table_compare_ushort@@Base>:
   139cc:	cmp	r0, #0
   139d0:	beq	13a04 <table_compare_ushort@@Base+0x38>
   139d4:	cmp	r1, #0
   139d8:	moveq	r1, #1
   139dc:	moveq	r0, r1
   139e0:	bxeq	lr
   139e4:	ldrh	r2, [r1]
   139e8:	ldrh	r0, [r0]
   139ec:	mov	r1, #0
   139f0:	cmp	r0, r2
   139f4:	mvncc	r1, #0
   139f8:	movwhi	r1, #1
   139fc:	mov	r0, r1
   13a00:	bx	lr
   13a04:	cmp	r1, #0
   13a08:	mvnne	r1, #0
   13a0c:	mov	r0, r1
   13a10:	bx	lr

00013a14 <table_compare_long@@Base>:
   13a14:	cmp	r0, #0
   13a18:	beq	13a4c <table_compare_long@@Base+0x38>
   13a1c:	cmp	r1, #0
   13a20:	moveq	r1, #1
   13a24:	moveq	r0, r1
   13a28:	bxeq	lr
   13a2c:	ldr	r2, [r1]
   13a30:	ldr	r0, [r0]
   13a34:	mov	r1, #0
   13a38:	cmp	r0, r2
   13a3c:	mvnlt	r1, #0
   13a40:	movwgt	r1, #1
   13a44:	mov	r0, r1
   13a48:	bx	lr
   13a4c:	cmp	r1, #0
   13a50:	mvnne	r1, #0
   13a54:	mov	r0, r1
   13a58:	bx	lr

00013a5c <table_compare_ulong@@Base>:
   13a5c:	cmp	r0, #0
   13a60:	beq	13a94 <table_compare_ulong@@Base+0x38>
   13a64:	cmp	r1, #0
   13a68:	moveq	r1, #1
   13a6c:	moveq	r0, r1
   13a70:	bxeq	lr
   13a74:	ldr	r2, [r1]
   13a78:	ldr	r0, [r0]
   13a7c:	mov	r1, #0
   13a80:	cmp	r0, r2
   13a84:	mvncc	r1, #0
   13a88:	movwhi	r1, #1
   13a8c:	mov	r0, r1
   13a90:	bx	lr
   13a94:	cmp	r1, #0
   13a98:	mvnne	r1, #0
   13a9c:	mov	r0, r1
   13aa0:	bx	lr

00013aa4 <table_compare_llong@@Base>:
   13aa4:	cmp	r0, #0
   13aa8:	beq	13afc <table_compare_llong@@Base+0x58>
   13aac:	cmp	r1, #0
   13ab0:	moveq	r1, #1
   13ab4:	moveq	r0, r1
   13ab8:	bxeq	lr
   13abc:	push	{r5, r7, fp, lr}
   13ac0:	add	fp, sp, #8
   13ac4:	ldm	r0, {r0, r5}
   13ac8:	ldm	r1, {r2, r7}
   13acc:	mov	r1, #0
   13ad0:	subs	r3, r0, r2
   13ad4:	sbcs	r3, r5, r7
   13ad8:	movwlt	r1, #1
   13adc:	cmp	r1, #0
   13ae0:	mvnne	r1, #0
   13ae4:	subs	r0, r2, r0
   13ae8:	sbcs	r0, r7, r5
   13aec:	movwlt	r1, #1
   13af0:	pop	{r5, r7, fp, lr}
   13af4:	mov	r0, r1
   13af8:	bx	lr
   13afc:	cmp	r1, #0
   13b00:	mvnne	r1, #0
   13b04:	mov	r0, r1
   13b08:	bx	lr

00013b0c <table_compare_ullong@@Base>:
   13b0c:	cmp	r0, #0
   13b10:	beq	13b44 <table_compare_ullong@@Base+0x38>
   13b14:	cmp	r1, #0
   13b18:	moveq	r1, #1
   13b1c:	moveq	r0, r1
   13b20:	bxeq	lr
   13b24:	ldr	r2, [r1]
   13b28:	ldr	r0, [r0]
   13b2c:	mov	r1, #0
   13b30:	cmp	r0, r2
   13b34:	mvncc	r1, #0
   13b38:	movwhi	r1, #1
   13b3c:	mov	r0, r1
   13b40:	bx	lr
   13b44:	cmp	r1, #0
   13b48:	mvnne	r1, #0
   13b4c:	mov	r0, r1
   13b50:	bx	lr

00013b54 <table_compare_float@@Base>:
   13b54:	cmp	r0, #0
   13b58:	beq	13b90 <table_compare_float@@Base+0x3c>
   13b5c:	cmp	r1, #0
   13b60:	moveq	r1, #1
   13b64:	moveq	r0, r1
   13b68:	bxeq	lr
   13b6c:	vldr	s0, [r1]
   13b70:	vldr	s2, [r0]
   13b74:	mov	r1, #0
   13b78:	vcmpe.f32	s2, s0
   13b7c:	vmrs	APSR_nzcv, fpscr
   13b80:	mvnmi	r1, #0
   13b84:	movwgt	r1, #1
   13b88:	mov	r0, r1
   13b8c:	bx	lr
   13b90:	cmp	r1, #0
   13b94:	mvnne	r1, #0
   13b98:	mov	r0, r1
   13b9c:	bx	lr

00013ba0 <table_compare_double@@Base>:
   13ba0:	cmp	r0, #0
   13ba4:	beq	13bdc <table_compare_double@@Base+0x3c>
   13ba8:	cmp	r1, #0
   13bac:	moveq	r1, #1
   13bb0:	moveq	r0, r1
   13bb4:	bxeq	lr
   13bb8:	vldr	d16, [r1]
   13bbc:	vldr	d17, [r0]
   13bc0:	mov	r1, #0
   13bc4:	vcmpe.f64	d17, d16
   13bc8:	vmrs	APSR_nzcv, fpscr
   13bcc:	mvnmi	r1, #0
   13bd0:	movwgt	r1, #1
   13bd4:	mov	r0, r1
   13bd8:	bx	lr
   13bdc:	cmp	r1, #0
   13be0:	mvnne	r1, #0
   13be4:	mov	r0, r1
   13be8:	bx	lr

00013bec <table_compare_ldouble@@Base>:
   13bec:	cmp	r0, #0
   13bf0:	beq	13c28 <table_compare_ldouble@@Base+0x3c>
   13bf4:	cmp	r1, #0
   13bf8:	moveq	r1, #1
   13bfc:	moveq	r0, r1
   13c00:	bxeq	lr
   13c04:	vldr	d16, [r1]
   13c08:	vldr	d17, [r0]
   13c0c:	mov	r1, #0
   13c10:	vcmpe.f64	d17, d16
   13c14:	vmrs	APSR_nzcv, fpscr
   13c18:	mvnmi	r1, #0
   13c1c:	movwgt	r1, #1
   13c20:	mov	r0, r1
   13c24:	bx	lr
   13c28:	cmp	r1, #0
   13c2c:	mvnne	r1, #0
   13c30:	mov	r0, r1
   13c34:	bx	lr

00013c38 <table_compare_char@@Base>:
   13c38:	cmp	r0, #0
   13c3c:	beq	13c70 <table_compare_char@@Base+0x38>
   13c40:	cmp	r1, #0
   13c44:	moveq	r1, #1
   13c48:	moveq	r0, r1
   13c4c:	bxeq	lr
   13c50:	ldrb	r2, [r1]
   13c54:	ldrb	r0, [r0]
   13c58:	mov	r1, #0
   13c5c:	cmp	r0, r2
   13c60:	mvncc	r1, #0
   13c64:	movwhi	r1, #1
   13c68:	mov	r0, r1
   13c6c:	bx	lr
   13c70:	cmp	r1, #0
   13c74:	mvnne	r1, #0
   13c78:	mov	r0, r1
   13c7c:	bx	lr

00013c80 <table_compare_uchar@@Base>:
   13c80:	cmp	r0, #0
   13c84:	beq	13cb8 <table_compare_uchar@@Base+0x38>
   13c88:	cmp	r1, #0
   13c8c:	moveq	r1, #1
   13c90:	moveq	r0, r1
   13c94:	bxeq	lr
   13c98:	ldrb	r2, [r1]
   13c9c:	ldrb	r0, [r0]
   13ca0:	mov	r1, #0
   13ca4:	cmp	r0, r2
   13ca8:	mvncc	r1, #0
   13cac:	movwhi	r1, #1
   13cb0:	mov	r0, r1
   13cb4:	bx	lr
   13cb8:	cmp	r1, #0
   13cbc:	mvnne	r1, #0
   13cc0:	mov	r0, r1
   13cc4:	bx	lr

00013cc8 <table_compare_string@@Base>:
   13cc8:	cmp	r0, #0
   13ccc:	beq	13ce4 <table_compare_string@@Base+0x1c>
   13cd0:	cmp	r1, #0
   13cd4:	moveq	r1, #1
   13cd8:	moveq	r0, r1
   13cdc:	bxeq	lr
   13ce0:	b	11f80 <strcmp@plt>
   13ce4:	cmp	r1, #0
   13ce8:	mvnne	r1, #0
   13cec:	mov	r0, r1
   13cf0:	bx	lr

00013cf4 <table_compare_ptr@@Base>:
   13cf4:	cmp	r0, r1
   13cf8:	mov	r2, #0
   13cfc:	mvncc	r2, #0
   13d00:	movwhi	r2, #1
   13d04:	mov	r0, r2
   13d08:	bx	lr

00013d0c <table_get_default_compare_function_for_data_type@@Base>:
   13d0c:	cmp	r0, #23
   13d10:	movhi	r0, #0
   13d14:	bxhi	lr
   13d18:	ldr	r1, [pc, #8]	; 13d28 <table_get_default_compare_function_for_data_type@@Base+0x1c>
   13d1c:	add	r1, pc, r1
   13d20:	ldr	r0, [r1, r0, lsl #2]
   13d24:	bx	lr
   13d28:	andeq	r3, r1, ip, lsl #3

00013d2c <table_get@@Base>:
   13d2c:	push	{fp, lr}
   13d30:	mov	fp, sp
   13d34:	bl	15784 <table_get_cell_ptr@@Base>
   13d38:	ldr	r0, [r0]
   13d3c:	pop	{fp, pc}

00013d40 <table_get_bool@@Base>:
   13d40:	push	{fp, lr}
   13d44:	mov	fp, sp
   13d48:	bl	15784 <table_get_cell_ptr@@Base>
   13d4c:	ldr	r0, [r0]
   13d50:	ldrb	r0, [r0]
   13d54:	pop	{fp, pc}

00013d58 <table_get_int@@Base>:
   13d58:	push	{fp, lr}
   13d5c:	mov	fp, sp
   13d60:	bl	15784 <table_get_cell_ptr@@Base>
   13d64:	ldr	r0, [r0]
   13d68:	ldr	r0, [r0]
   13d6c:	pop	{fp, pc}

00013d70 <table_get_uint@@Base>:
   13d70:	push	{fp, lr}
   13d74:	mov	fp, sp
   13d78:	bl	15784 <table_get_cell_ptr@@Base>
   13d7c:	ldr	r0, [r0]
   13d80:	ldr	r0, [r0]
   13d84:	pop	{fp, pc}

00013d88 <table_get_int8@@Base>:
   13d88:	push	{fp, lr}
   13d8c:	mov	fp, sp
   13d90:	bl	15784 <table_get_cell_ptr@@Base>
   13d94:	ldr	r0, [r0]
   13d98:	ldrsb	r0, [r0]
   13d9c:	pop	{fp, pc}

00013da0 <table_get_uint8@@Base>:
   13da0:	push	{fp, lr}
   13da4:	mov	fp, sp
   13da8:	bl	15784 <table_get_cell_ptr@@Base>
   13dac:	ldr	r0, [r0]
   13db0:	ldrb	r0, [r0]
   13db4:	pop	{fp, pc}

00013db8 <table_get_int16@@Base>:
   13db8:	push	{fp, lr}
   13dbc:	mov	fp, sp
   13dc0:	bl	15784 <table_get_cell_ptr@@Base>
   13dc4:	ldr	r0, [r0]
   13dc8:	ldrsh	r0, [r0]
   13dcc:	pop	{fp, pc}

00013dd0 <table_get_uint16@@Base>:
   13dd0:	push	{fp, lr}
   13dd4:	mov	fp, sp
   13dd8:	bl	15784 <table_get_cell_ptr@@Base>
   13ddc:	ldr	r0, [r0]
   13de0:	ldrh	r0, [r0]
   13de4:	pop	{fp, pc}

00013de8 <table_get_int32@@Base>:
   13de8:	push	{fp, lr}
   13dec:	mov	fp, sp
   13df0:	bl	15784 <table_get_cell_ptr@@Base>
   13df4:	ldr	r0, [r0]
   13df8:	ldr	r0, [r0]
   13dfc:	pop	{fp, pc}

00013e00 <table_get_uint32@@Base>:
   13e00:	push	{fp, lr}
   13e04:	mov	fp, sp
   13e08:	bl	15784 <table_get_cell_ptr@@Base>
   13e0c:	ldr	r0, [r0]
   13e10:	ldr	r0, [r0]
   13e14:	pop	{fp, pc}

00013e18 <table_get_int64@@Base>:
   13e18:	push	{fp, lr}
   13e1c:	mov	fp, sp
   13e20:	bl	15784 <table_get_cell_ptr@@Base>
   13e24:	ldr	r0, [r0]
   13e28:	ldrd	r0, [r0]
   13e2c:	pop	{fp, pc}

00013e30 <table_get_uint64@@Base>:
   13e30:	push	{fp, lr}
   13e34:	mov	fp, sp
   13e38:	bl	15784 <table_get_cell_ptr@@Base>
   13e3c:	ldr	r0, [r0]
   13e40:	ldrd	r0, [r0]
   13e44:	pop	{fp, pc}

00013e48 <table_get_short@@Base>:
   13e48:	push	{fp, lr}
   13e4c:	mov	fp, sp
   13e50:	bl	15784 <table_get_cell_ptr@@Base>
   13e54:	ldr	r0, [r0]
   13e58:	ldrsh	r0, [r0]
   13e5c:	pop	{fp, pc}

00013e60 <table_get_ushort@@Base>:
   13e60:	push	{fp, lr}
   13e64:	mov	fp, sp
   13e68:	bl	15784 <table_get_cell_ptr@@Base>
   13e6c:	ldr	r0, [r0]
   13e70:	ldrh	r0, [r0]
   13e74:	pop	{fp, pc}

00013e78 <table_get_long@@Base>:
   13e78:	push	{fp, lr}
   13e7c:	mov	fp, sp
   13e80:	bl	15784 <table_get_cell_ptr@@Base>
   13e84:	ldr	r0, [r0]
   13e88:	ldr	r0, [r0]
   13e8c:	pop	{fp, pc}

00013e90 <table_get_ulong@@Base>:
   13e90:	push	{fp, lr}
   13e94:	mov	fp, sp
   13e98:	bl	15784 <table_get_cell_ptr@@Base>
   13e9c:	ldr	r0, [r0]
   13ea0:	ldr	r0, [r0]
   13ea4:	pop	{fp, pc}

00013ea8 <table_get_llong@@Base>:
   13ea8:	push	{fp, lr}
   13eac:	mov	fp, sp
   13eb0:	bl	15784 <table_get_cell_ptr@@Base>
   13eb4:	ldr	r0, [r0]
   13eb8:	ldrd	r0, [r0]
   13ebc:	pop	{fp, pc}

00013ec0 <table_get_ullong@@Base>:
   13ec0:	push	{fp, lr}
   13ec4:	mov	fp, sp
   13ec8:	bl	15784 <table_get_cell_ptr@@Base>
   13ecc:	ldr	r0, [r0]
   13ed0:	ldrd	r0, [r0]
   13ed4:	pop	{fp, pc}

00013ed8 <table_get_float@@Base>:
   13ed8:	push	{fp, lr}
   13edc:	mov	fp, sp
   13ee0:	bl	15784 <table_get_cell_ptr@@Base>
   13ee4:	ldr	r0, [r0]
   13ee8:	vldr	s0, [r0]
   13eec:	pop	{fp, pc}

00013ef0 <table_get_double@@Base>:
   13ef0:	push	{fp, lr}
   13ef4:	mov	fp, sp
   13ef8:	bl	15784 <table_get_cell_ptr@@Base>
   13efc:	ldr	r0, [r0]
   13f00:	vldr	d0, [r0]
   13f04:	pop	{fp, pc}

00013f08 <table_get_ldouble@@Base>:
   13f08:	push	{fp, lr}
   13f0c:	mov	fp, sp
   13f10:	bl	15784 <table_get_cell_ptr@@Base>
   13f14:	ldr	r0, [r0]
   13f18:	vldr	d0, [r0]
   13f1c:	pop	{fp, pc}

00013f20 <table_get_char@@Base>:
   13f20:	push	{fp, lr}
   13f24:	mov	fp, sp
   13f28:	bl	15784 <table_get_cell_ptr@@Base>
   13f2c:	ldr	r0, [r0]
   13f30:	ldrb	r0, [r0]
   13f34:	pop	{fp, pc}

00013f38 <table_get_uchar@@Base>:
   13f38:	push	{fp, lr}
   13f3c:	mov	fp, sp
   13f40:	bl	15784 <table_get_cell_ptr@@Base>
   13f44:	ldr	r0, [r0]
   13f48:	ldrb	r0, [r0]
   13f4c:	pop	{fp, pc}

00013f50 <table_get_string@@Base>:
   13f50:	push	{fp, lr}
   13f54:	mov	fp, sp
   13f58:	bl	15784 <table_get_cell_ptr@@Base>
   13f5c:	ldr	r0, [r0]
   13f60:	pop	{fp, pc}

00013f64 <table_get_ptr@@Base>:
   13f64:	push	{fp, lr}
   13f68:	mov	fp, sp
   13f6c:	bl	15784 <table_get_cell_ptr@@Base>
   13f70:	ldr	r0, [r0]
   13f74:	pop	{fp, pc}

00013f78 <table_row_init@@Base>:
   13f78:	push	{r4, r5, fp, lr}
   13f7c:	add	fp, sp, #8
   13f80:	mov	r4, r1
   13f84:	ldr	r1, [r0, #12]
   13f88:	ldr	r5, [r0, #16]
   13f8c:	lsl	r0, r1, #2
   13f90:	bl	11fc8 <malloc@plt>
   13f94:	str	r0, [r5, r4, lsl #2]
   13f98:	pop	{r4, r5, fp, pc}

00013f9c <table_get_row_ptr@@Base>:
   13f9c:	ldr	r0, [r0, #16]
   13fa0:	add	r0, r0, r1, lsl #2
   13fa4:	bx	lr

00013fa8 <table_row_destroy@@Base>:
   13fa8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13fac:	add	fp, sp, #24
   13fb0:	mov	r4, r1
   13fb4:	mov	r5, r0
   13fb8:	bl	13264 <table_get_column_length@@Base>
   13fbc:	ldr	r8, [r5, #16]
   13fc0:	cmp	r0, #1
   13fc4:	blt	13fec <table_row_destroy@@Base+0x44>
   13fc8:	mov	r6, r0
   13fcc:	mov	r7, #0
   13fd0:	mov	r0, r5
   13fd4:	mov	r1, r4
   13fd8:	mov	r2, r7
   13fdc:	bl	157a0 <table_cell_destroy@@Base>
   13fe0:	add	r7, r7, #1
   13fe4:	cmp	r6, r7
   13fe8:	bne	13fd0 <table_row_destroy@@Base+0x28>
   13fec:	ldr	r0, [r8, r4, lsl #2]
   13ff0:	cmp	r0, #0
   13ff4:	beq	14000 <table_row_destroy@@Base+0x58>
   13ff8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ffc:	b	11f98 <free@plt>
   14000:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014004 <table_get_row_length@@Base>:
   14004:	ldr	r0, [r0, #20]
   14008:	bx	lr

0001400c <table_add_row@@Base>:
   1400c:	push	{r4, r5, r6, r7, fp, lr}
   14010:	add	fp, sp, #16
   14014:	ldr	r5, [r0, #20]
   14018:	ldr	r1, [r0, #24]
   1401c:	mov	r4, r0
   14020:	udiv	r0, r5, r1
   14024:	mls	r0, r0, r1, r5
   14028:	cmp	r0, #0
   1402c:	bne	14050 <table_add_row@@Base+0x44>
   14030:	ldr	r2, [r4, #28]
   14034:	ldr	r0, [r4, #16]
   14038:	add	r1, r2, r1
   1403c:	str	r1, [r4, #28]
   14040:	lsl	r1, r1, #2
   14044:	bl	11fb0 <realloc@plt>
   14048:	str	r0, [r4, #16]
   1404c:	ldr	r5, [r4, #20]
   14050:	mov	r0, r4
   14054:	bl	13264 <table_get_column_length@@Base>
   14058:	mov	r6, r0
   1405c:	ldr	r0, [r4, #12]
   14060:	ldr	r7, [r4, #16]
   14064:	lsl	r0, r0, #2
   14068:	bl	11fc8 <malloc@plt>
   1406c:	cmp	r6, #1
   14070:	str	r0, [r7, r5, lsl #2]
   14074:	blt	14098 <table_add_row@@Base+0x8c>
   14078:	mov	r7, #0
   1407c:	mov	r0, r4
   14080:	mov	r1, r5
   14084:	mov	r2, r7
   14088:	bl	15764 <table_cell_init@@Base>
   1408c:	add	r7, r7, #1
   14090:	cmp	r6, r7
   14094:	bne	1407c <table_add_row@@Base+0x70>
   14098:	ldr	r1, [r4, #20]
   1409c:	mov	r0, r4
   140a0:	mvn	r2, #0
   140a4:	mov	r3, #2
   140a8:	bl	13168 <table_notify@@Base>
   140ac:	ldr	r0, [r4, #20]
   140b0:	add	r1, r0, #1
   140b4:	str	r1, [r4, #20]
   140b8:	pop	{r4, r5, r6, r7, fp, pc}

000140bc <table_remove_row@@Base>:
   140bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   140c0:	add	fp, sp, #24
   140c4:	ldr	r8, [r0, #20]
   140c8:	mov	r4, r1
   140cc:	mov	r5, r0
   140d0:	bl	13264 <table_get_column_length@@Base>
   140d4:	cmp	r0, #1
   140d8:	blt	1412c <table_remove_row@@Base+0x70>
   140dc:	mov	r6, r0
   140e0:	mov	r7, #0
   140e4:	b	140f4 <table_remove_row@@Base+0x38>
   140e8:	add	r7, r7, #1
   140ec:	cmp	r6, r7
   140f0:	beq	1412c <table_remove_row@@Base+0x70>
   140f4:	mov	r0, r5
   140f8:	mov	r1, r7
   140fc:	bl	132dc <table_get_column_data_type@@Base>
   14100:	cmp	r0, #23
   14104:	beq	140e8 <table_remove_row@@Base+0x2c>
   14108:	mov	r0, r5
   1410c:	mov	r1, r4
   14110:	mov	r2, r7
   14114:	bl	15784 <table_get_cell_ptr@@Base>
   14118:	ldr	r0, [r0]
   1411c:	cmp	r0, #0
   14120:	beq	140e8 <table_remove_row@@Base+0x2c>
   14124:	bl	11f98 <free@plt>
   14128:	b	140e8 <table_remove_row@@Base+0x2c>
   1412c:	ldr	r0, [r5, #16]
   14130:	ldr	r0, [r0, r4, lsl #2]
   14134:	cmp	r0, #0
   14138:	beq	14140 <table_remove_row@@Base+0x84>
   1413c:	bl	11f98 <free@plt>
   14140:	sub	r0, r8, #1
   14144:	cmp	r0, r4
   14148:	ble	141b8 <table_remove_row@@Base+0xfc>
   1414c:	mvn	r0, r4
   14150:	add	r1, r8, r0
   14154:	sub	r0, r8, #2
   14158:	tst	r1, #1
   1415c:	mov	r1, r4
   14160:	beq	14178 <table_remove_row@@Base+0xbc>
   14164:	ldr	r1, [r5, #16]
   14168:	add	r2, r1, r4, lsl #2
   1416c:	ldr	r2, [r2, #4]
   14170:	str	r2, [r1, r4, lsl #2]
   14174:	add	r1, r4, #1
   14178:	cmp	r0, r4
   1417c:	beq	141b8 <table_remove_row@@Base+0xfc>
   14180:	mvn	r0, r1
   14184:	lsl	r1, r1, #2
   14188:	add	r0, r0, r8
   1418c:	ldr	r2, [r5, #16]
   14190:	subs	r0, r0, #2
   14194:	add	r3, r2, r1
   14198:	ldr	r3, [r3, #4]
   1419c:	str	r3, [r2, r1]
   141a0:	ldr	r2, [r5, #16]
   141a4:	add	r2, r2, r1
   141a8:	add	r1, r1, #8
   141ac:	ldr	r3, [r2, #8]
   141b0:	str	r3, [r2, #4]
   141b4:	bne	1418c <table_remove_row@@Base+0xd0>
   141b8:	ldr	r0, [r5, #20]
   141bc:	ldr	r1, [r5, #24]
   141c0:	sub	r0, r0, #1
   141c4:	udiv	r2, r0, r1
   141c8:	str	r0, [r5, #20]
   141cc:	mls	r0, r2, r1, r0
   141d0:	cmp	r0, #0
   141d4:	bne	141f4 <table_remove_row@@Base+0x138>
   141d8:	ldr	r2, [r5, #28]
   141dc:	ldr	r0, [r5, #16]
   141e0:	sub	r1, r2, r1
   141e4:	str	r1, [r5, #28]
   141e8:	lsl	r1, r1, #2
   141ec:	bl	11fb0 <realloc@plt>
   141f0:	str	r0, [r5, #16]
   141f4:	mov	r0, r5
   141f8:	mov	r1, r4
   141fc:	mvn	r2, #0
   14200:	mov	r3, #4
   14204:	bl	13168 <table_notify@@Base>
   14208:	mov	r0, #0
   1420c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014210 <table_set_row_ptr@@Base>:
   14210:	ldr	r2, [r2]
   14214:	ldr	r0, [r0, #16]
   14218:	str	r2, [r0, r1, lsl #2]
   1421c:	bx	lr

00014220 <table_set@@Base>:
   14220:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14224:	add	fp, sp, #24
   14228:	mov	r8, r3
   1422c:	mov	r4, r2
   14230:	mov	r9, r1
   14234:	mov	r6, r0
   14238:	bl	15784 <table_get_cell_ptr@@Base>
   1423c:	mov	r5, r0
   14240:	mov	r0, r6
   14244:	mov	r1, r4
   14248:	bl	1323c <table_get_col_ptr@@Base>
   1424c:	ldr	r1, [fp, #8]
   14250:	mvn	r7, #0
   14254:	cmp	r1, #23
   14258:	bhi	14520 <table_set@@Base+0x300>
   1425c:	add	r2, pc, #4
   14260:	ldr	r1, [r2, r1, lsl #2]
   14264:	add	pc, r2, r1
   14268:	andeq	r0, r0, r0, rrx
   1426c:	andeq	r0, r0, r0, ror r0
   14270:	andeq	r0, r0, r0, lsl #1
   14274:	muleq	r0, r0, r0
   14278:	andeq	r0, r0, r0, lsr #1
   1427c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14280:	andeq	r0, r0, r0, asr #1
   14284:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14288:	andeq	r0, r0, r0, ror #1
   1428c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14290:	andeq	r0, r0, r0, lsl #2
   14294:	andeq	r0, r0, r0, lsl r1
   14298:	andeq	r0, r0, r8, asr #2
   1429c:	andeq	r0, r0, r8, asr r1
   142a0:	andeq	r0, r0, r8, ror #2
   142a4:	andeq	r0, r0, r8, ror r1
   142a8:	andeq	r0, r0, r8, lsl #3
   142ac:	andeq	r0, r0, r0, asr #3
   142b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   142b4:	andeq	r0, r0, r0, lsl r2
   142b8:	andeq	r0, r0, r0, lsr #4
   142bc:	andeq	r0, r0, r0, lsr r2
   142c0:	andeq	r0, r0, ip, ror #4
   142c4:	andeq	r0, r0, r0, asr #5
   142c8:	ldr	r0, [r0, #4]
   142cc:	cmp	r0, #0
   142d0:	bne	14520 <table_set@@Base+0x300>
   142d4:	b	143fc <table_set@@Base+0x1dc>
   142d8:	ldr	r0, [r0, #4]
   142dc:	cmp	r0, #1
   142e0:	beq	143fc <table_set@@Base+0x1dc>
   142e4:	b	14520 <table_set@@Base+0x300>
   142e8:	ldr	r0, [r0, #4]
   142ec:	cmp	r0, #2
   142f0:	beq	144e0 <table_set@@Base+0x2c0>
   142f4:	b	14520 <table_set@@Base+0x300>
   142f8:	ldr	r0, [r0, #4]
   142fc:	cmp	r0, #3
   14300:	beq	144e0 <table_set@@Base+0x2c0>
   14304:	b	14520 <table_set@@Base+0x300>
   14308:	ldr	r0, [r0, #4]
   1430c:	cmp	r0, #4
   14310:	beq	14384 <table_set@@Base+0x164>
   14314:	b	14520 <table_set@@Base+0x300>
   14318:	ldr	r0, [r0, #4]
   1431c:	cmp	r0, #5
   14320:	beq	14384 <table_set@@Base+0x164>
   14324:	b	14520 <table_set@@Base+0x300>
   14328:	ldr	r0, [r0, #4]
   1432c:	cmp	r0, #6
   14330:	beq	143fc <table_set@@Base+0x1dc>
   14334:	b	14520 <table_set@@Base+0x300>
   14338:	ldr	r0, [r0, #4]
   1433c:	cmp	r0, #7
   14340:	beq	143fc <table_set@@Base+0x1dc>
   14344:	b	14520 <table_set@@Base+0x300>
   14348:	ldr	r0, [r0, #4]
   1434c:	cmp	r0, #8
   14350:	beq	14444 <table_set@@Base+0x224>
   14354:	b	14520 <table_set@@Base+0x300>
   14358:	ldr	r0, [r0, #4]
   1435c:	cmp	r0, #9
   14360:	beq	14444 <table_set@@Base+0x224>
   14364:	b	14520 <table_set@@Base+0x300>
   14368:	ldr	r0, [r0, #4]
   1436c:	cmp	r0, #10
   14370:	beq	14384 <table_set@@Base+0x164>
   14374:	b	14520 <table_set@@Base+0x300>
   14378:	ldr	r0, [r0, #4]
   1437c:	cmp	r0, #11
   14380:	bne	14520 <table_set@@Base+0x300>
   14384:	ldr	r0, [r5]
   14388:	cmp	r0, #0
   1438c:	bne	143a4 <table_set@@Base+0x184>
   14390:	mov	r0, #2
   14394:	bl	11fc8 <malloc@plt>
   14398:	cmp	r0, #0
   1439c:	str	r0, [r5]
   143a0:	beq	14520 <table_set@@Base+0x300>
   143a4:	ldrh	r1, [r8]
   143a8:	strh	r1, [r0]
   143ac:	b	14508 <table_set@@Base+0x2e8>
   143b0:	ldr	r0, [r0, #4]
   143b4:	cmp	r0, #12
   143b8:	beq	143fc <table_set@@Base+0x1dc>
   143bc:	b	14520 <table_set@@Base+0x300>
   143c0:	ldr	r0, [r0, #4]
   143c4:	cmp	r0, #13
   143c8:	beq	143fc <table_set@@Base+0x1dc>
   143cc:	b	14520 <table_set@@Base+0x300>
   143d0:	ldr	r0, [r0, #4]
   143d4:	cmp	r0, #14
   143d8:	beq	14444 <table_set@@Base+0x224>
   143dc:	b	14520 <table_set@@Base+0x300>
   143e0:	ldr	r0, [r0, #4]
   143e4:	cmp	r0, #15
   143e8:	beq	14444 <table_set@@Base+0x224>
   143ec:	b	14520 <table_set@@Base+0x300>
   143f0:	ldr	r0, [r0, #4]
   143f4:	cmp	r0, #16
   143f8:	bne	14520 <table_set@@Base+0x300>
   143fc:	ldr	r0, [r5]
   14400:	cmp	r0, #0
   14404:	bne	1441c <table_set@@Base+0x1fc>
   14408:	mov	r0, #4
   1440c:	bl	11fc8 <malloc@plt>
   14410:	cmp	r0, #0
   14414:	str	r0, [r5]
   14418:	beq	14520 <table_set@@Base+0x300>
   1441c:	ldr	r1, [r8]
   14420:	str	r1, [r0]
   14424:	b	14508 <table_set@@Base+0x2e8>
   14428:	ldr	r0, [r0, #4]
   1442c:	cmp	r0, #17
   14430:	beq	14444 <table_set@@Base+0x224>
   14434:	b	14520 <table_set@@Base+0x300>
   14438:	ldr	r0, [r0, #4]
   1443c:	cmp	r0, #18
   14440:	bne	14520 <table_set@@Base+0x300>
   14444:	ldr	r0, [r5]
   14448:	cmp	r0, #0
   1444c:	bne	14464 <table_set@@Base+0x244>
   14450:	mov	r0, #8
   14454:	bl	11fc8 <malloc@plt>
   14458:	cmp	r0, #0
   1445c:	str	r0, [r5]
   14460:	beq	14520 <table_set@@Base+0x300>
   14464:	ldr	r1, [r8]
   14468:	ldr	r2, [r8, #4]
   1446c:	str	r2, [r0, #4]
   14470:	str	r1, [r0]
   14474:	b	14508 <table_set@@Base+0x2e8>
   14478:	ldr	r0, [r0, #4]
   1447c:	cmp	r0, #19
   14480:	beq	144e0 <table_set@@Base+0x2c0>
   14484:	b	14520 <table_set@@Base+0x300>
   14488:	ldr	r0, [r0, #4]
   1448c:	cmp	r0, #20
   14490:	beq	144e0 <table_set@@Base+0x2c0>
   14494:	b	14520 <table_set@@Base+0x300>
   14498:	ldr	r0, [r0, #4]
   1449c:	cmp	r0, #21
   144a0:	bne	14520 <table_set@@Base+0x300>
   144a4:	mov	r0, r8
   144a8:	bl	11fec <strlen@plt>
   144ac:	ldr	r2, [r5]
   144b0:	add	r1, r0, #1
   144b4:	mov	r0, r2
   144b8:	bl	11fb0 <realloc@plt>
   144bc:	cmp	r0, #0
   144c0:	str	r0, [r5]
   144c4:	beq	14520 <table_set@@Base+0x300>
   144c8:	mov	r1, r8
   144cc:	bl	11fbc <strcpy@plt>
   144d0:	b	14508 <table_set@@Base+0x2e8>
   144d4:	ldr	r0, [r0, #4]
   144d8:	cmp	r0, #22
   144dc:	bne	14520 <table_set@@Base+0x300>
   144e0:	ldr	r0, [r5]
   144e4:	cmp	r0, #0
   144e8:	bne	14500 <table_set@@Base+0x2e0>
   144ec:	mov	r0, #1
   144f0:	bl	11fc8 <malloc@plt>
   144f4:	cmp	r0, #0
   144f8:	str	r0, [r5]
   144fc:	beq	14520 <table_set@@Base+0x300>
   14500:	ldrb	r1, [r8]
   14504:	strb	r1, [r0]
   14508:	mov	r0, r6
   1450c:	mov	r1, r9
   14510:	mov	r2, r4
   14514:	mov	r3, #1
   14518:	bl	13168 <table_notify@@Base>
   1451c:	mov	r7, #0
   14520:	mov	r0, r7
   14524:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14528:	ldr	r0, [r0, #4]
   1452c:	cmp	r0, #23
   14530:	bne	14520 <table_set@@Base+0x300>
   14534:	str	r8, [r5]
   14538:	b	14508 <table_set@@Base+0x2e8>

0001453c <table_set_bool@@Base>:
   1453c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14540:	add	fp, sp, #24
   14544:	mov	r8, r3
   14548:	mov	r4, r2
   1454c:	mov	r9, r1
   14550:	mov	r6, r0
   14554:	bl	15784 <table_get_cell_ptr@@Base>
   14558:	mov	r5, r0
   1455c:	mov	r0, r6
   14560:	mov	r1, r4
   14564:	bl	1323c <table_get_col_ptr@@Base>
   14568:	ldr	r0, [r0, #4]
   1456c:	mvn	r7, #0
   14570:	cmp	r0, #22
   14574:	bne	145b4 <table_set_bool@@Base+0x78>
   14578:	ldr	r0, [r5]
   1457c:	cmp	r0, #0
   14580:	bne	14598 <table_set_bool@@Base+0x5c>
   14584:	mov	r0, #1
   14588:	bl	11fc8 <malloc@plt>
   1458c:	cmp	r0, #0
   14590:	str	r0, [r5]
   14594:	beq	145b4 <table_set_bool@@Base+0x78>
   14598:	strb	r8, [r0]
   1459c:	mov	r0, r6
   145a0:	mov	r1, r9
   145a4:	mov	r2, r4
   145a8:	mov	r3, #1
   145ac:	bl	13168 <table_notify@@Base>
   145b0:	mov	r7, #0
   145b4:	mov	r0, r7
   145b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000145bc <table_set_int@@Base>:
   145bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   145c0:	add	fp, sp, #24
   145c4:	mov	r8, r3
   145c8:	mov	r4, r2
   145cc:	mov	r5, r1
   145d0:	mov	r6, r0
   145d4:	bl	15784 <table_get_cell_ptr@@Base>
   145d8:	mov	r9, r0
   145dc:	mov	r0, r6
   145e0:	mov	r1, r4
   145e4:	bl	1323c <table_get_col_ptr@@Base>
   145e8:	ldr	r0, [r0, #4]
   145ec:	mvn	r7, #0
   145f0:	cmp	r0, #0
   145f4:	bne	14634 <table_set_int@@Base+0x78>
   145f8:	ldr	r0, [r9]
   145fc:	cmp	r0, #0
   14600:	bne	14618 <table_set_int@@Base+0x5c>
   14604:	mov	r0, #4
   14608:	bl	11fc8 <malloc@plt>
   1460c:	cmp	r0, #0
   14610:	str	r0, [r9]
   14614:	beq	14634 <table_set_int@@Base+0x78>
   14618:	str	r8, [r0]
   1461c:	mov	r0, r6
   14620:	mov	r1, r5
   14624:	mov	r2, r4
   14628:	mov	r3, #1
   1462c:	bl	13168 <table_notify@@Base>
   14630:	mov	r7, #0
   14634:	mov	r0, r7
   14638:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001463c <table_set_uint@@Base>:
   1463c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14640:	add	fp, sp, #24
   14644:	mov	r8, r3
   14648:	mov	r4, r2
   1464c:	mov	r5, r1
   14650:	mov	r6, r0
   14654:	bl	15784 <table_get_cell_ptr@@Base>
   14658:	mov	r9, r0
   1465c:	mov	r0, r6
   14660:	mov	r1, r4
   14664:	bl	1323c <table_get_col_ptr@@Base>
   14668:	ldr	r0, [r0, #4]
   1466c:	mvn	r7, #0
   14670:	cmp	r0, #1
   14674:	bne	146b4 <table_set_uint@@Base+0x78>
   14678:	ldr	r0, [r9]
   1467c:	cmp	r0, #0
   14680:	bne	14698 <table_set_uint@@Base+0x5c>
   14684:	mov	r0, #4
   14688:	bl	11fc8 <malloc@plt>
   1468c:	cmp	r0, #0
   14690:	str	r0, [r9]
   14694:	beq	146b4 <table_set_uint@@Base+0x78>
   14698:	str	r8, [r0]
   1469c:	mov	r0, r6
   146a0:	mov	r1, r5
   146a4:	mov	r2, r4
   146a8:	mov	r3, #1
   146ac:	bl	13168 <table_notify@@Base>
   146b0:	mov	r7, #0
   146b4:	mov	r0, r7
   146b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000146bc <table_set_int8@@Base>:
   146bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   146c0:	add	fp, sp, #24
   146c4:	mov	r8, r3
   146c8:	mov	r4, r2
   146cc:	mov	r9, r1
   146d0:	mov	r6, r0
   146d4:	bl	15784 <table_get_cell_ptr@@Base>
   146d8:	mov	r5, r0
   146dc:	mov	r0, r6
   146e0:	mov	r1, r4
   146e4:	bl	1323c <table_get_col_ptr@@Base>
   146e8:	ldr	r0, [r0, #4]
   146ec:	mvn	r7, #0
   146f0:	cmp	r0, #2
   146f4:	bne	14734 <table_set_int8@@Base+0x78>
   146f8:	ldr	r0, [r5]
   146fc:	cmp	r0, #0
   14700:	bne	14718 <table_set_int8@@Base+0x5c>
   14704:	mov	r0, #1
   14708:	bl	11fc8 <malloc@plt>
   1470c:	cmp	r0, #0
   14710:	str	r0, [r5]
   14714:	beq	14734 <table_set_int8@@Base+0x78>
   14718:	strb	r8, [r0]
   1471c:	mov	r0, r6
   14720:	mov	r1, r9
   14724:	mov	r2, r4
   14728:	mov	r3, #1
   1472c:	bl	13168 <table_notify@@Base>
   14730:	mov	r7, #0
   14734:	mov	r0, r7
   14738:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001473c <table_set_uint8@@Base>:
   1473c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14740:	add	fp, sp, #24
   14744:	mov	r8, r3
   14748:	mov	r4, r2
   1474c:	mov	r9, r1
   14750:	mov	r6, r0
   14754:	bl	15784 <table_get_cell_ptr@@Base>
   14758:	mov	r5, r0
   1475c:	mov	r0, r6
   14760:	mov	r1, r4
   14764:	bl	1323c <table_get_col_ptr@@Base>
   14768:	ldr	r0, [r0, #4]
   1476c:	mvn	r7, #0
   14770:	cmp	r0, #3
   14774:	bne	147b4 <table_set_uint8@@Base+0x78>
   14778:	ldr	r0, [r5]
   1477c:	cmp	r0, #0
   14780:	bne	14798 <table_set_uint8@@Base+0x5c>
   14784:	mov	r0, #1
   14788:	bl	11fc8 <malloc@plt>
   1478c:	cmp	r0, #0
   14790:	str	r0, [r5]
   14794:	beq	147b4 <table_set_uint8@@Base+0x78>
   14798:	strb	r8, [r0]
   1479c:	mov	r0, r6
   147a0:	mov	r1, r9
   147a4:	mov	r2, r4
   147a8:	mov	r3, #1
   147ac:	bl	13168 <table_notify@@Base>
   147b0:	mov	r7, #0
   147b4:	mov	r0, r7
   147b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000147bc <table_set_int16@@Base>:
   147bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   147c0:	add	fp, sp, #24
   147c4:	mov	r8, r3
   147c8:	mov	r4, r2
   147cc:	mov	r9, r1
   147d0:	mov	r6, r0
   147d4:	bl	15784 <table_get_cell_ptr@@Base>
   147d8:	mov	r5, r0
   147dc:	mov	r0, r6
   147e0:	mov	r1, r4
   147e4:	bl	1323c <table_get_col_ptr@@Base>
   147e8:	ldr	r0, [r0, #4]
   147ec:	mvn	r7, #0
   147f0:	cmp	r0, #4
   147f4:	bne	14834 <table_set_int16@@Base+0x78>
   147f8:	ldr	r0, [r5]
   147fc:	cmp	r0, #0
   14800:	bne	14818 <table_set_int16@@Base+0x5c>
   14804:	mov	r0, #2
   14808:	bl	11fc8 <malloc@plt>
   1480c:	cmp	r0, #0
   14810:	str	r0, [r5]
   14814:	beq	14834 <table_set_int16@@Base+0x78>
   14818:	strh	r8, [r0]
   1481c:	mov	r0, r6
   14820:	mov	r1, r9
   14824:	mov	r2, r4
   14828:	mov	r3, #1
   1482c:	bl	13168 <table_notify@@Base>
   14830:	mov	r7, #0
   14834:	mov	r0, r7
   14838:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001483c <table_set_uint16@@Base>:
   1483c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14840:	add	fp, sp, #24
   14844:	mov	r8, r3
   14848:	mov	r4, r2
   1484c:	mov	r9, r1
   14850:	mov	r6, r0
   14854:	bl	15784 <table_get_cell_ptr@@Base>
   14858:	mov	r5, r0
   1485c:	mov	r0, r6
   14860:	mov	r1, r4
   14864:	bl	1323c <table_get_col_ptr@@Base>
   14868:	ldr	r0, [r0, #4]
   1486c:	mvn	r7, #0
   14870:	cmp	r0, #5
   14874:	bne	148b4 <table_set_uint16@@Base+0x78>
   14878:	ldr	r0, [r5]
   1487c:	cmp	r0, #0
   14880:	bne	14898 <table_set_uint16@@Base+0x5c>
   14884:	mov	r0, #2
   14888:	bl	11fc8 <malloc@plt>
   1488c:	cmp	r0, #0
   14890:	str	r0, [r5]
   14894:	beq	148b4 <table_set_uint16@@Base+0x78>
   14898:	strh	r8, [r0]
   1489c:	mov	r0, r6
   148a0:	mov	r1, r9
   148a4:	mov	r2, r4
   148a8:	mov	r3, #1
   148ac:	bl	13168 <table_notify@@Base>
   148b0:	mov	r7, #0
   148b4:	mov	r0, r7
   148b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000148bc <table_set_int32@@Base>:
   148bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148c0:	add	fp, sp, #24
   148c4:	mov	r8, r3
   148c8:	mov	r4, r2
   148cc:	mov	r5, r1
   148d0:	mov	r6, r0
   148d4:	bl	15784 <table_get_cell_ptr@@Base>
   148d8:	mov	r9, r0
   148dc:	mov	r0, r6
   148e0:	mov	r1, r4
   148e4:	bl	1323c <table_get_col_ptr@@Base>
   148e8:	ldr	r0, [r0, #4]
   148ec:	mvn	r7, #0
   148f0:	cmp	r0, #6
   148f4:	bne	14934 <table_set_int32@@Base+0x78>
   148f8:	ldr	r0, [r9]
   148fc:	cmp	r0, #0
   14900:	bne	14918 <table_set_int32@@Base+0x5c>
   14904:	mov	r0, #4
   14908:	bl	11fc8 <malloc@plt>
   1490c:	cmp	r0, #0
   14910:	str	r0, [r9]
   14914:	beq	14934 <table_set_int32@@Base+0x78>
   14918:	str	r8, [r0]
   1491c:	mov	r0, r6
   14920:	mov	r1, r5
   14924:	mov	r2, r4
   14928:	mov	r3, #1
   1492c:	bl	13168 <table_notify@@Base>
   14930:	mov	r7, #0
   14934:	mov	r0, r7
   14938:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001493c <table_set_uint32@@Base>:
   1493c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14940:	add	fp, sp, #24
   14944:	mov	r8, r3
   14948:	mov	r4, r2
   1494c:	mov	r5, r1
   14950:	mov	r6, r0
   14954:	bl	15784 <table_get_cell_ptr@@Base>
   14958:	mov	r9, r0
   1495c:	mov	r0, r6
   14960:	mov	r1, r4
   14964:	bl	1323c <table_get_col_ptr@@Base>
   14968:	ldr	r0, [r0, #4]
   1496c:	mvn	r7, #0
   14970:	cmp	r0, #7
   14974:	bne	149b4 <table_set_uint32@@Base+0x78>
   14978:	ldr	r0, [r9]
   1497c:	cmp	r0, #0
   14980:	bne	14998 <table_set_uint32@@Base+0x5c>
   14984:	mov	r0, #4
   14988:	bl	11fc8 <malloc@plt>
   1498c:	cmp	r0, #0
   14990:	str	r0, [r9]
   14994:	beq	149b4 <table_set_uint32@@Base+0x78>
   14998:	str	r8, [r0]
   1499c:	mov	r0, r6
   149a0:	mov	r1, r5
   149a4:	mov	r2, r4
   149a8:	mov	r3, #1
   149ac:	bl	13168 <table_notify@@Base>
   149b0:	mov	r7, #0
   149b4:	mov	r0, r7
   149b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000149bc <table_set_int64@@Base>:
   149bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   149c0:	add	fp, sp, #24
   149c4:	mov	r4, r2
   149c8:	mov	r8, r1
   149cc:	mov	r6, r0
   149d0:	bl	15784 <table_get_cell_ptr@@Base>
   149d4:	mov	r5, r0
   149d8:	mov	r0, r6
   149dc:	mov	r1, r4
   149e0:	bl	1323c <table_get_col_ptr@@Base>
   149e4:	ldr	r0, [r0, #4]
   149e8:	mvn	r7, #0
   149ec:	cmp	r0, #8
   149f0:	bne	14a3c <table_set_int64@@Base+0x80>
   149f4:	ldr	r0, [r5]
   149f8:	cmp	r0, #0
   149fc:	bne	14a14 <table_set_int64@@Base+0x58>
   14a00:	mov	r0, #8
   14a04:	bl	11fc8 <malloc@plt>
   14a08:	cmp	r0, #0
   14a0c:	str	r0, [r5]
   14a10:	beq	14a3c <table_set_int64@@Base+0x80>
   14a14:	ldr	r1, [fp, #12]
   14a18:	ldr	r2, [fp, #8]
   14a1c:	mov	r3, #1
   14a20:	str	r2, [r0]
   14a24:	str	r1, [r0, #4]
   14a28:	mov	r0, r6
   14a2c:	mov	r1, r8
   14a30:	mov	r2, r4
   14a34:	bl	13168 <table_notify@@Base>
   14a38:	mov	r7, #0
   14a3c:	mov	r0, r7
   14a40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014a44 <table_set_uint64@@Base>:
   14a44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a48:	add	fp, sp, #24
   14a4c:	mov	r4, r2
   14a50:	mov	r8, r1
   14a54:	mov	r6, r0
   14a58:	bl	15784 <table_get_cell_ptr@@Base>
   14a5c:	mov	r5, r0
   14a60:	mov	r0, r6
   14a64:	mov	r1, r4
   14a68:	bl	1323c <table_get_col_ptr@@Base>
   14a6c:	ldr	r0, [r0, #4]
   14a70:	mvn	r7, #0
   14a74:	cmp	r0, #9
   14a78:	bne	14ac4 <table_set_uint64@@Base+0x80>
   14a7c:	ldr	r0, [r5]
   14a80:	cmp	r0, #0
   14a84:	bne	14a9c <table_set_uint64@@Base+0x58>
   14a88:	mov	r0, #8
   14a8c:	bl	11fc8 <malloc@plt>
   14a90:	cmp	r0, #0
   14a94:	str	r0, [r5]
   14a98:	beq	14ac4 <table_set_uint64@@Base+0x80>
   14a9c:	ldr	r1, [fp, #12]
   14aa0:	ldr	r2, [fp, #8]
   14aa4:	mov	r3, #1
   14aa8:	str	r2, [r0]
   14aac:	str	r1, [r0, #4]
   14ab0:	mov	r0, r6
   14ab4:	mov	r1, r8
   14ab8:	mov	r2, r4
   14abc:	bl	13168 <table_notify@@Base>
   14ac0:	mov	r7, #0
   14ac4:	mov	r0, r7
   14ac8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014acc <table_set_short@@Base>:
   14acc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ad0:	add	fp, sp, #24
   14ad4:	mov	r8, r3
   14ad8:	mov	r4, r2
   14adc:	mov	r9, r1
   14ae0:	mov	r6, r0
   14ae4:	bl	15784 <table_get_cell_ptr@@Base>
   14ae8:	mov	r5, r0
   14aec:	mov	r0, r6
   14af0:	mov	r1, r4
   14af4:	bl	1323c <table_get_col_ptr@@Base>
   14af8:	ldr	r0, [r0, #4]
   14afc:	mvn	r7, #0
   14b00:	cmp	r0, #10
   14b04:	bne	14b44 <table_set_short@@Base+0x78>
   14b08:	ldr	r0, [r5]
   14b0c:	cmp	r0, #0
   14b10:	bne	14b28 <table_set_short@@Base+0x5c>
   14b14:	mov	r0, #2
   14b18:	bl	11fc8 <malloc@plt>
   14b1c:	cmp	r0, #0
   14b20:	str	r0, [r5]
   14b24:	beq	14b44 <table_set_short@@Base+0x78>
   14b28:	strh	r8, [r0]
   14b2c:	mov	r0, r6
   14b30:	mov	r1, r9
   14b34:	mov	r2, r4
   14b38:	mov	r3, #1
   14b3c:	bl	13168 <table_notify@@Base>
   14b40:	mov	r7, #0
   14b44:	mov	r0, r7
   14b48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b4c <table_set_ushort@@Base>:
   14b4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14b50:	add	fp, sp, #24
   14b54:	mov	r8, r3
   14b58:	mov	r4, r2
   14b5c:	mov	r9, r1
   14b60:	mov	r6, r0
   14b64:	bl	15784 <table_get_cell_ptr@@Base>
   14b68:	mov	r5, r0
   14b6c:	mov	r0, r6
   14b70:	mov	r1, r4
   14b74:	bl	1323c <table_get_col_ptr@@Base>
   14b78:	ldr	r0, [r0, #4]
   14b7c:	mvn	r7, #0
   14b80:	cmp	r0, #11
   14b84:	bne	14bc4 <table_set_ushort@@Base+0x78>
   14b88:	ldr	r0, [r5]
   14b8c:	cmp	r0, #0
   14b90:	bne	14ba8 <table_set_ushort@@Base+0x5c>
   14b94:	mov	r0, #2
   14b98:	bl	11fc8 <malloc@plt>
   14b9c:	cmp	r0, #0
   14ba0:	str	r0, [r5]
   14ba4:	beq	14bc4 <table_set_ushort@@Base+0x78>
   14ba8:	strh	r8, [r0]
   14bac:	mov	r0, r6
   14bb0:	mov	r1, r9
   14bb4:	mov	r2, r4
   14bb8:	mov	r3, #1
   14bbc:	bl	13168 <table_notify@@Base>
   14bc0:	mov	r7, #0
   14bc4:	mov	r0, r7
   14bc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014bcc <table_set_long@@Base>:
   14bcc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14bd0:	add	fp, sp, #24
   14bd4:	mov	r8, r3
   14bd8:	mov	r4, r2
   14bdc:	mov	r5, r1
   14be0:	mov	r6, r0
   14be4:	bl	15784 <table_get_cell_ptr@@Base>
   14be8:	mov	r9, r0
   14bec:	mov	r0, r6
   14bf0:	mov	r1, r4
   14bf4:	bl	1323c <table_get_col_ptr@@Base>
   14bf8:	ldr	r0, [r0, #4]
   14bfc:	mvn	r7, #0
   14c00:	cmp	r0, #12
   14c04:	bne	14c44 <table_set_long@@Base+0x78>
   14c08:	ldr	r0, [r9]
   14c0c:	cmp	r0, #0
   14c10:	bne	14c28 <table_set_long@@Base+0x5c>
   14c14:	mov	r0, #4
   14c18:	bl	11fc8 <malloc@plt>
   14c1c:	cmp	r0, #0
   14c20:	str	r0, [r9]
   14c24:	beq	14c44 <table_set_long@@Base+0x78>
   14c28:	str	r8, [r0]
   14c2c:	mov	r0, r6
   14c30:	mov	r1, r5
   14c34:	mov	r2, r4
   14c38:	mov	r3, #1
   14c3c:	bl	13168 <table_notify@@Base>
   14c40:	mov	r7, #0
   14c44:	mov	r0, r7
   14c48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014c4c <table_set_ulong@@Base>:
   14c4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14c50:	add	fp, sp, #24
   14c54:	mov	r8, r3
   14c58:	mov	r4, r2
   14c5c:	mov	r5, r1
   14c60:	mov	r6, r0
   14c64:	bl	15784 <table_get_cell_ptr@@Base>
   14c68:	mov	r9, r0
   14c6c:	mov	r0, r6
   14c70:	mov	r1, r4
   14c74:	bl	1323c <table_get_col_ptr@@Base>
   14c78:	ldr	r0, [r0, #4]
   14c7c:	mvn	r7, #0
   14c80:	cmp	r0, #13
   14c84:	bne	14cc4 <table_set_ulong@@Base+0x78>
   14c88:	ldr	r0, [r9]
   14c8c:	cmp	r0, #0
   14c90:	bne	14ca8 <table_set_ulong@@Base+0x5c>
   14c94:	mov	r0, #4
   14c98:	bl	11fc8 <malloc@plt>
   14c9c:	cmp	r0, #0
   14ca0:	str	r0, [r9]
   14ca4:	beq	14cc4 <table_set_ulong@@Base+0x78>
   14ca8:	str	r8, [r0]
   14cac:	mov	r0, r6
   14cb0:	mov	r1, r5
   14cb4:	mov	r2, r4
   14cb8:	mov	r3, #1
   14cbc:	bl	13168 <table_notify@@Base>
   14cc0:	mov	r7, #0
   14cc4:	mov	r0, r7
   14cc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014ccc <table_set_llong@@Base>:
   14ccc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14cd0:	add	fp, sp, #24
   14cd4:	mov	r4, r2
   14cd8:	mov	r8, r1
   14cdc:	mov	r6, r0
   14ce0:	bl	15784 <table_get_cell_ptr@@Base>
   14ce4:	mov	r5, r0
   14ce8:	mov	r0, r6
   14cec:	mov	r1, r4
   14cf0:	bl	1323c <table_get_col_ptr@@Base>
   14cf4:	ldr	r0, [r0, #4]
   14cf8:	mvn	r7, #0
   14cfc:	cmp	r0, #14
   14d00:	bne	14d4c <table_set_llong@@Base+0x80>
   14d04:	ldr	r0, [r5]
   14d08:	cmp	r0, #0
   14d0c:	bne	14d24 <table_set_llong@@Base+0x58>
   14d10:	mov	r0, #8
   14d14:	bl	11fc8 <malloc@plt>
   14d18:	cmp	r0, #0
   14d1c:	str	r0, [r5]
   14d20:	beq	14d4c <table_set_llong@@Base+0x80>
   14d24:	ldr	r1, [fp, #12]
   14d28:	ldr	r2, [fp, #8]
   14d2c:	mov	r3, #1
   14d30:	str	r2, [r0]
   14d34:	str	r1, [r0, #4]
   14d38:	mov	r0, r6
   14d3c:	mov	r1, r8
   14d40:	mov	r2, r4
   14d44:	bl	13168 <table_notify@@Base>
   14d48:	mov	r7, #0
   14d4c:	mov	r0, r7
   14d50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014d54 <table_set_ullong@@Base>:
   14d54:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d58:	add	fp, sp, #24
   14d5c:	mov	r4, r2
   14d60:	mov	r8, r1
   14d64:	mov	r6, r0
   14d68:	bl	15784 <table_get_cell_ptr@@Base>
   14d6c:	mov	r5, r0
   14d70:	mov	r0, r6
   14d74:	mov	r1, r4
   14d78:	bl	1323c <table_get_col_ptr@@Base>
   14d7c:	ldr	r0, [r0, #4]
   14d80:	mvn	r7, #0
   14d84:	cmp	r0, #15
   14d88:	bne	14dd4 <table_set_ullong@@Base+0x80>
   14d8c:	ldr	r0, [r5]
   14d90:	cmp	r0, #0
   14d94:	bne	14dac <table_set_ullong@@Base+0x58>
   14d98:	mov	r0, #8
   14d9c:	bl	11fc8 <malloc@plt>
   14da0:	cmp	r0, #0
   14da4:	str	r0, [r5]
   14da8:	beq	14dd4 <table_set_ullong@@Base+0x80>
   14dac:	ldr	r1, [fp, #12]
   14db0:	ldr	r2, [fp, #8]
   14db4:	mov	r3, #1
   14db8:	str	r2, [r0]
   14dbc:	str	r1, [r0, #4]
   14dc0:	mov	r0, r6
   14dc4:	mov	r1, r8
   14dc8:	mov	r2, r4
   14dcc:	bl	13168 <table_notify@@Base>
   14dd0:	mov	r7, #0
   14dd4:	mov	r0, r7
   14dd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014ddc <table_set_float@@Base>:
   14ddc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14de0:	add	fp, sp, #24
   14de4:	vpush	{d8}
   14de8:	vmov.f32	s16, s0
   14dec:	mov	r4, r2
   14df0:	mov	r8, r1
   14df4:	mov	r6, r0
   14df8:	bl	15784 <table_get_cell_ptr@@Base>
   14dfc:	mov	r5, r0
   14e00:	mov	r0, r6
   14e04:	mov	r1, r4
   14e08:	bl	1323c <table_get_col_ptr@@Base>
   14e0c:	ldr	r0, [r0, #4]
   14e10:	mvn	r7, #0
   14e14:	cmp	r0, #16
   14e18:	bne	14e5c <table_set_float@@Base+0x80>
   14e1c:	ldr	r0, [r5]
   14e20:	cmp	r0, #0
   14e24:	bne	14e3c <table_set_float@@Base+0x60>
   14e28:	mov	r0, #4
   14e2c:	bl	11fc8 <malloc@plt>
   14e30:	cmp	r0, #0
   14e34:	str	r0, [r5]
   14e38:	beq	14e5c <table_set_float@@Base+0x80>
   14e3c:	vmov	r1, s16
   14e40:	mov	r2, r4
   14e44:	mov	r3, #1
   14e48:	str	r1, [r0]
   14e4c:	mov	r0, r6
   14e50:	mov	r1, r8
   14e54:	bl	13168 <table_notify@@Base>
   14e58:	mov	r7, #0
   14e5c:	mov	r0, r7
   14e60:	vpop	{d8}
   14e64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014e68 <table_set_double@@Base>:
   14e68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e6c:	add	fp, sp, #24
   14e70:	vpush	{d8}
   14e74:	vorr	d8, d0, d0
   14e78:	mov	r4, r2
   14e7c:	mov	r5, r1
   14e80:	mov	r6, r0
   14e84:	bl	15784 <table_get_cell_ptr@@Base>
   14e88:	mov	r8, r0
   14e8c:	mov	r0, r6
   14e90:	mov	r1, r4
   14e94:	bl	1323c <table_get_col_ptr@@Base>
   14e98:	ldr	r0, [r0, #4]
   14e9c:	mvn	r7, #0
   14ea0:	cmp	r0, #17
   14ea4:	bne	14ee4 <table_set_double@@Base+0x7c>
   14ea8:	ldr	r0, [r8]
   14eac:	cmp	r0, #0
   14eb0:	bne	14ec8 <table_set_double@@Base+0x60>
   14eb4:	mov	r0, #8
   14eb8:	bl	11fc8 <malloc@plt>
   14ebc:	cmp	r0, #0
   14ec0:	str	r0, [r8]
   14ec4:	beq	14ee4 <table_set_double@@Base+0x7c>
   14ec8:	vst1.8	{d8}, [r0]
   14ecc:	mov	r0, r6
   14ed0:	mov	r1, r5
   14ed4:	mov	r2, r4
   14ed8:	mov	r3, #1
   14edc:	bl	13168 <table_notify@@Base>
   14ee0:	mov	r7, #0
   14ee4:	mov	r0, r7
   14ee8:	vpop	{d8}
   14eec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014ef0 <table_set_ldouble@@Base>:
   14ef0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ef4:	add	fp, sp, #24
   14ef8:	vpush	{d8}
   14efc:	vorr	d8, d0, d0
   14f00:	mov	r4, r2
   14f04:	mov	r5, r1
   14f08:	mov	r6, r0
   14f0c:	bl	15784 <table_get_cell_ptr@@Base>
   14f10:	mov	r8, r0
   14f14:	mov	r0, r6
   14f18:	mov	r1, r4
   14f1c:	bl	1323c <table_get_col_ptr@@Base>
   14f20:	ldr	r0, [r0, #4]
   14f24:	mvn	r7, #0
   14f28:	cmp	r0, #18
   14f2c:	bne	14f6c <table_set_ldouble@@Base+0x7c>
   14f30:	ldr	r0, [r8]
   14f34:	cmp	r0, #0
   14f38:	bne	14f50 <table_set_ldouble@@Base+0x60>
   14f3c:	mov	r0, #8
   14f40:	bl	11fc8 <malloc@plt>
   14f44:	cmp	r0, #0
   14f48:	str	r0, [r8]
   14f4c:	beq	14f6c <table_set_ldouble@@Base+0x7c>
   14f50:	vst1.8	{d8}, [r0]
   14f54:	mov	r0, r6
   14f58:	mov	r1, r5
   14f5c:	mov	r2, r4
   14f60:	mov	r3, #1
   14f64:	bl	13168 <table_notify@@Base>
   14f68:	mov	r7, #0
   14f6c:	mov	r0, r7
   14f70:	vpop	{d8}
   14f74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014f78 <table_set_string@@Base>:
   14f78:	push	{fp, lr}
   14f7c:	mov	fp, sp
   14f80:	sub	sp, sp, #8
   14f84:	mov	ip, #21
   14f88:	str	ip, [sp]
   14f8c:	bl	14220 <table_set@@Base>
   14f90:	mov	sp, fp
   14f94:	pop	{fp, pc}

00014f98 <table_set_char@@Base>:
   14f98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14f9c:	add	fp, sp, #24
   14fa0:	mov	r8, r3
   14fa4:	mov	r4, r2
   14fa8:	mov	r9, r1
   14fac:	mov	r6, r0
   14fb0:	bl	15784 <table_get_cell_ptr@@Base>
   14fb4:	mov	r5, r0
   14fb8:	mov	r0, r6
   14fbc:	mov	r1, r4
   14fc0:	bl	1323c <table_get_col_ptr@@Base>
   14fc4:	ldr	r0, [r0, #4]
   14fc8:	mvn	r7, #0
   14fcc:	cmp	r0, #19
   14fd0:	bne	15010 <table_set_char@@Base+0x78>
   14fd4:	ldr	r0, [r5]
   14fd8:	cmp	r0, #0
   14fdc:	bne	14ff4 <table_set_char@@Base+0x5c>
   14fe0:	mov	r0, #1
   14fe4:	bl	11fc8 <malloc@plt>
   14fe8:	cmp	r0, #0
   14fec:	str	r0, [r5]
   14ff0:	beq	15010 <table_set_char@@Base+0x78>
   14ff4:	strb	r8, [r0]
   14ff8:	mov	r0, r6
   14ffc:	mov	r1, r9
   15000:	mov	r2, r4
   15004:	mov	r3, #1
   15008:	bl	13168 <table_notify@@Base>
   1500c:	mov	r7, #0
   15010:	mov	r0, r7
   15014:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015018 <table_set_uchar@@Base>:
   15018:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1501c:	add	fp, sp, #24
   15020:	mov	r8, r3
   15024:	mov	r4, r2
   15028:	mov	r9, r1
   1502c:	mov	r6, r0
   15030:	bl	15784 <table_get_cell_ptr@@Base>
   15034:	mov	r5, r0
   15038:	mov	r0, r6
   1503c:	mov	r1, r4
   15040:	bl	1323c <table_get_col_ptr@@Base>
   15044:	ldr	r0, [r0, #4]
   15048:	mvn	r7, #0
   1504c:	cmp	r0, #20
   15050:	bne	15090 <table_set_uchar@@Base+0x78>
   15054:	ldr	r0, [r5]
   15058:	cmp	r0, #0
   1505c:	bne	15074 <table_set_uchar@@Base+0x5c>
   15060:	mov	r0, #1
   15064:	bl	11fc8 <malloc@plt>
   15068:	cmp	r0, #0
   1506c:	str	r0, [r5]
   15070:	beq	15090 <table_set_uchar@@Base+0x78>
   15074:	strb	r8, [r0]
   15078:	mov	r0, r6
   1507c:	mov	r1, r9
   15080:	mov	r2, r4
   15084:	mov	r3, #1
   15088:	bl	13168 <table_notify@@Base>
   1508c:	mov	r7, #0
   15090:	mov	r0, r7
   15094:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015098 <table_set_ptr@@Base>:
   15098:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1509c:	add	fp, sp, #24
   150a0:	mov	r8, r3
   150a4:	mov	r4, r2
   150a8:	mov	r5, r1
   150ac:	mov	r6, r0
   150b0:	bl	15784 <table_get_cell_ptr@@Base>
   150b4:	mov	r7, r0
   150b8:	mov	r0, r6
   150bc:	mov	r1, r4
   150c0:	bl	1323c <table_get_col_ptr@@Base>
   150c4:	ldr	r1, [r0, #4]
   150c8:	mvn	r0, #0
   150cc:	cmp	r1, #23
   150d0:	bne	150f0 <table_set_ptr@@Base+0x58>
   150d4:	mov	r0, r6
   150d8:	mov	r1, r5
   150dc:	mov	r2, r4
   150e0:	mov	r3, #1
   150e4:	str	r8, [r7]
   150e8:	bl	13168 <table_notify@@Base>
   150ec:	mov	r0, #0
   150f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000150f4 <table_serialize@@Base>:
   150f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150f8:	add	fp, sp, #28
   150fc:	sub	sp, sp, #4
   15100:	mov	r5, r1
   15104:	mov	r4, r0
   15108:	bl	14004 <table_get_row_length@@Base>
   1510c:	str	r0, [sp]
   15110:	mov	r0, r4
   15114:	bl	13264 <table_get_column_length@@Base>
   15118:	str	r0, [r5]
   1511c:	mov	r9, r0
   15120:	ldr	r0, [r4, #8]
   15124:	cmp	r9, #1
   15128:	str	r0, [r5, #4]
   1512c:	add	r5, r5, #8
   15130:	blt	15184 <table_serialize@@Base+0x90>
   15134:	mov	r6, #0
   15138:	mov	r0, r4
   1513c:	mov	r1, r6
   15140:	bl	132cc <table_get_column_name@@Base>
   15144:	mov	r8, r0
   15148:	bl	11fec <strlen@plt>
   1514c:	mov	sl, r0
   15150:	mov	r0, r4
   15154:	mov	r1, r6
   15158:	bl	132dc <table_get_column_data_type@@Base>
   1515c:	str	r0, [r5], #4
   15160:	add	r7, sl, #1
   15164:	mov	r1, r8
   15168:	mov	r0, r5
   1516c:	mov	r2, r7
   15170:	bl	1201c <strncpy@plt>
   15174:	add	r6, r6, #1
   15178:	add	r5, r5, r7
   1517c:	cmp	r9, r6
   15180:	bne	15138 <table_serialize@@Base+0x44>
   15184:	ldr	r1, [sp]
   15188:	add	r7, r5, #8
   1518c:	str	r1, [r5]
   15190:	cmp	r1, #1
   15194:	ldr	r0, [r4, #24]
   15198:	str	r0, [r5, #4]
   1519c:	blt	1531c <table_serialize@@Base+0x228>
   151a0:	mov	r8, #0
   151a4:	cmp	r9, #1
   151a8:	bge	151c4 <table_serialize@@Base+0xd0>
   151ac:	ldr	r0, [sp]
   151b0:	add	r8, r8, #1
   151b4:	cmp	r8, r0
   151b8:	beq	1531c <table_serialize@@Base+0x228>
   151bc:	cmp	r9, #1
   151c0:	blt	151ac <table_serialize@@Base+0xb8>
   151c4:	mov	r6, #0
   151c8:	b	151f0 <table_serialize@@Base+0xfc>
   151cc:	mov	r0, r4
   151d0:	mov	r1, r8
   151d4:	mov	r2, r6
   151d8:	bl	13d2c <table_get@@Base>
   151dc:	ldrb	r0, [r0]
   151e0:	strb	r0, [r7], #1
   151e4:	add	r6, r6, #1
   151e8:	cmp	r9, r6
   151ec:	beq	151ac <table_serialize@@Base+0xb8>
   151f0:	mov	r0, r4
   151f4:	mov	r1, r6
   151f8:	bl	132dc <table_get_column_data_type@@Base>
   151fc:	cmp	r0, #23
   15200:	bhi	151e4 <table_serialize@@Base+0xf0>
   15204:	add	r1, pc, #4
   15208:	ldr	r0, [r1, r0, lsl #2]
   1520c:	add	pc, r1, r0
   15210:	andeq	r0, r0, r0, rrx
   15214:	andeq	r0, r0, r0, rrx
   15218:			; <UNDEFINED> instruction: 0xffffffbc
   1521c:			; <UNDEFINED> instruction: 0xffffffbc
   15220:	andeq	r0, r0, ip, ror r0
   15224:	andeq	r0, r0, ip, ror r0
   15228:	andeq	r0, r0, r0, rrx
   1522c:	andeq	r0, r0, r0, rrx
   15230:	muleq	r0, r8, r0
   15234:	muleq	r0, r8, r0
   15238:	andeq	r0, r0, ip, ror r0
   1523c:	andeq	r0, r0, ip, ror r0
   15240:	andeq	r0, r0, r0, rrx
   15244:	andeq	r0, r0, r0, rrx
   15248:	muleq	r0, r8, r0
   1524c:	muleq	r0, r8, r0
   15250:	andeq	r0, r0, r0, rrx
   15254:	strheq	r0, [r0], -r8
   15258:	strheq	r0, [r0], -r8
   1525c:			; <UNDEFINED> instruction: 0xffffffbc
   15260:			; <UNDEFINED> instruction: 0xffffffbc
   15264:	ldrdeq	r0, [r0], -r8
   15268:			; <UNDEFINED> instruction: 0xffffffbc
   1526c:	andeq	r0, r0, r0, rrx
   15270:	mov	r0, r4
   15274:	mov	r1, r8
   15278:	mov	r2, r6
   1527c:	bl	13d2c <table_get@@Base>
   15280:	ldr	r0, [r0]
   15284:	str	r0, [r7], #4
   15288:	b	151e4 <table_serialize@@Base+0xf0>
   1528c:	mov	r0, r4
   15290:	mov	r1, r8
   15294:	mov	r2, r6
   15298:	bl	13d2c <table_get@@Base>
   1529c:	ldrh	r0, [r0]
   152a0:	strh	r0, [r7], #2
   152a4:	b	151e4 <table_serialize@@Base+0xf0>
   152a8:	mov	r0, r4
   152ac:	mov	r1, r8
   152b0:	mov	r2, r6
   152b4:	bl	13d2c <table_get@@Base>
   152b8:	ldrd	r0, [r0]
   152bc:	strd	r0, [r7]
   152c0:	add	r7, r7, #8
   152c4:	b	151e4 <table_serialize@@Base+0xf0>
   152c8:	mov	r0, r4
   152cc:	mov	r1, r8
   152d0:	mov	r2, r6
   152d4:	bl	13d2c <table_get@@Base>
   152d8:	vldr	d16, [r0]
   152dc:	vstr	d16, [r7]
   152e0:	add	r7, r7, #8
   152e4:	b	151e4 <table_serialize@@Base+0xf0>
   152e8:	mov	r0, r4
   152ec:	mov	r1, r8
   152f0:	mov	r2, r6
   152f4:	bl	13f50 <table_get_string@@Base>
   152f8:	mov	sl, r0
   152fc:	bl	11fec <strlen@plt>
   15300:	add	r5, r0, #1
   15304:	mov	r0, r7
   15308:	mov	r1, sl
   1530c:	mov	r2, r5
   15310:	bl	1201c <strncpy@plt>
   15314:	add	r7, r7, r5
   15318:	b	151e4 <table_serialize@@Base+0xf0>
   1531c:	ldr	r0, [r4, #32]
   15320:	str	r0, [r7]
   15324:	ldr	r0, [r4, #48]	; 0x30
   15328:	str	r0, [r7, #4]
   1532c:	ldr	r0, [r4, #32]
   15330:	cmp	r0, #1
   15334:	blt	15378 <table_serialize@@Base+0x284>
   15338:	add	r0, r7, #8
   1533c:	mov	r1, #0
   15340:	ldr	r2, [r4, #36]	; 0x24
   15344:	ldr	r2, [r2, r1, lsl #2]
   15348:	str	r2, [r0]
   1534c:	ldr	r2, [r4, #40]	; 0x28
   15350:	ldr	r2, [r2, r1, lsl #2]
   15354:	str	r2, [r0, #4]
   15358:	ldr	r2, [r4, #44]	; 0x2c
   1535c:	ldr	r2, [r2, r1, lsl #2]
   15360:	add	r1, r1, #1
   15364:	str	r2, [r0, #8]
   15368:	add	r0, r0, #12
   1536c:	ldr	r2, [r4, #32]
   15370:	cmp	r1, r2
   15374:	blt	15340 <table_serialize@@Base+0x24c>
   15378:	sub	sp, fp, #28
   1537c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015380 <table_deserialize@@Base>:
   15380:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15384:	add	fp, sp, #24
   15388:	sub	sp, sp, #8
   1538c:	mov	r5, r0
   15390:	bl	12824 <table_new@@Base>
   15394:	mov	r4, r0
   15398:	ldr	r0, [r5, #4]
   1539c:	ldr	r9, [r5]
   153a0:	str	r0, [r4, #8]
   153a4:	cmp	r9, #1
   153a8:	ldr	r8, [r5, #8]!
   153ac:	add	r6, r5, #4
   153b0:	blt	153e4 <table_deserialize@@Base+0x64>
   153b4:	mov	r7, r9
   153b8:	mov	r0, r4
   153bc:	mov	r1, r6
   153c0:	mov	r2, r8
   153c4:	bl	132f0 <table_add_column@@Base>
   153c8:	mov	r0, r6
   153cc:	bl	11fec <strlen@plt>
   153d0:	add	r5, r5, r0
   153d4:	subs	r7, r7, #1
   153d8:	ldr	r8, [r5, #5]!
   153dc:	add	r6, r5, #4
   153e0:	bne	153b8 <table_deserialize@@Base+0x38>
   153e4:	ldr	r0, [r6]
   153e8:	add	r6, r5, #8
   153ec:	cmp	r8, #1
   153f0:	str	r0, [r4, #24]
   153f4:	blt	15728 <table_deserialize@@Base+0x3a8>
   153f8:	mov	r7, #0
   153fc:	b	1540c <table_deserialize@@Base+0x8c>
   15400:	add	r7, r7, #1
   15404:	cmp	r7, r8
   15408:	beq	15728 <table_deserialize@@Base+0x3a8>
   1540c:	mov	r0, r4
   15410:	bl	1400c <table_add_row@@Base>
   15414:	cmp	r9, #1
   15418:	blt	15400 <table_deserialize@@Base+0x80>
   1541c:	mov	r5, #0
   15420:	b	15444 <table_deserialize@@Base+0xc4>
   15424:	ldr	r3, [r6], #4
   15428:	mov	r0, r4
   1542c:	mov	r1, r7
   15430:	mov	r2, r5
   15434:	bl	15098 <table_set_ptr@@Base>
   15438:	add	r5, r5, #1
   1543c:	cmp	r9, r5
   15440:	beq	15400 <table_deserialize@@Base+0x80>
   15444:	mov	r0, r4
   15448:	mov	r1, r5
   1544c:	bl	132dc <table_get_column_data_type@@Base>
   15450:	cmp	r0, #23
   15454:	bhi	15438 <table_deserialize@@Base+0xb8>
   15458:	add	r1, pc, #4
   1545c:	ldr	r0, [r1, r0, lsl #2]
   15460:	add	pc, r1, r0
   15464:	andeq	r0, r0, r0, rrx
   15468:	andeq	r0, r0, r8, ror r0
   1546c:	muleq	r0, r0, r0
   15470:	andeq	r0, r0, r8, lsr #1
   15474:	andeq	r0, r0, r0, asr #1
   15478:	ldrdeq	r0, [r0], -r8
   1547c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15480:	andeq	r0, r0, r8, lsl #2
   15484:	andeq	r0, r0, r0, lsr #2
   15488:	andeq	r0, r0, r0, asr #2
   1548c:	andeq	r0, r0, r0, ror #2
   15490:	andeq	r0, r0, r8, ror r1
   15494:	muleq	r0, r0, r1
   15498:	andeq	r0, r0, r8, lsr #3
   1549c:	andeq	r0, r0, r0, asr #3
   154a0:	andeq	r0, r0, r0, ror #3
   154a4:	andeq	r0, r0, r0, lsl #4
   154a8:	andeq	r0, r0, ip, lsl r2
   154ac:	andeq	r0, r0, r8, lsr r2
   154b0:	andeq	r0, r0, r4, asr r2
   154b4:	andeq	r0, r0, ip, ror #4
   154b8:	andeq	r0, r0, r4, lsl #5
   154bc:	andeq	r0, r0, ip, lsr #5
   154c0:			; <UNDEFINED> instruction: 0xffffffc0
   154c4:	ldr	r3, [r6], #4
   154c8:	mov	r0, r4
   154cc:	mov	r1, r7
   154d0:	mov	r2, r5
   154d4:	bl	145bc <table_set_int@@Base>
   154d8:	b	15438 <table_deserialize@@Base+0xb8>
   154dc:	ldr	r3, [r6], #4
   154e0:	mov	r0, r4
   154e4:	mov	r1, r7
   154e8:	mov	r2, r5
   154ec:	bl	1463c <table_set_uint@@Base>
   154f0:	b	15438 <table_deserialize@@Base+0xb8>
   154f4:	ldrsb	r3, [r6], #1
   154f8:	mov	r0, r4
   154fc:	mov	r1, r7
   15500:	mov	r2, r5
   15504:	bl	146bc <table_set_int8@@Base>
   15508:	b	15438 <table_deserialize@@Base+0xb8>
   1550c:	ldrb	r3, [r6], #1
   15510:	mov	r0, r4
   15514:	mov	r1, r7
   15518:	mov	r2, r5
   1551c:	bl	1473c <table_set_uint8@@Base>
   15520:	b	15438 <table_deserialize@@Base+0xb8>
   15524:	ldrsh	r3, [r6], #2
   15528:	mov	r0, r4
   1552c:	mov	r1, r7
   15530:	mov	r2, r5
   15534:	bl	147bc <table_set_int16@@Base>
   15538:	b	15438 <table_deserialize@@Base+0xb8>
   1553c:	ldrh	r3, [r6], #2
   15540:	mov	r0, r4
   15544:	mov	r1, r7
   15548:	mov	r2, r5
   1554c:	bl	1483c <table_set_uint16@@Base>
   15550:	b	15438 <table_deserialize@@Base+0xb8>
   15554:	ldr	r3, [r6], #4
   15558:	mov	r0, r4
   1555c:	mov	r1, r7
   15560:	mov	r2, r5
   15564:	bl	148bc <table_set_int32@@Base>
   15568:	b	15438 <table_deserialize@@Base+0xb8>
   1556c:	ldr	r3, [r6], #4
   15570:	mov	r0, r4
   15574:	mov	r1, r7
   15578:	mov	r2, r5
   1557c:	bl	1493c <table_set_uint32@@Base>
   15580:	b	15438 <table_deserialize@@Base+0xb8>
   15584:	ldrd	r0, [r6]
   15588:	mov	r2, r5
   1558c:	stm	sp, {r0, r1}
   15590:	mov	r0, r4
   15594:	mov	r1, r7
   15598:	bl	149bc <table_set_int64@@Base>
   1559c:	add	r6, r6, #8
   155a0:	b	15438 <table_deserialize@@Base+0xb8>
   155a4:	ldrd	r0, [r6]
   155a8:	mov	r2, r5
   155ac:	stm	sp, {r0, r1}
   155b0:	mov	r0, r4
   155b4:	mov	r1, r7
   155b8:	bl	14a44 <table_set_uint64@@Base>
   155bc:	add	r6, r6, #8
   155c0:	b	15438 <table_deserialize@@Base+0xb8>
   155c4:	ldrsh	r3, [r6], #2
   155c8:	mov	r0, r4
   155cc:	mov	r1, r7
   155d0:	mov	r2, r5
   155d4:	bl	14acc <table_set_short@@Base>
   155d8:	b	15438 <table_deserialize@@Base+0xb8>
   155dc:	ldrh	r3, [r6], #2
   155e0:	mov	r0, r4
   155e4:	mov	r1, r7
   155e8:	mov	r2, r5
   155ec:	bl	14b4c <table_set_ushort@@Base>
   155f0:	b	15438 <table_deserialize@@Base+0xb8>
   155f4:	ldr	r3, [r6], #4
   155f8:	mov	r0, r4
   155fc:	mov	r1, r7
   15600:	mov	r2, r5
   15604:	bl	14bcc <table_set_long@@Base>
   15608:	b	15438 <table_deserialize@@Base+0xb8>
   1560c:	ldr	r3, [r6], #4
   15610:	mov	r0, r4
   15614:	mov	r1, r7
   15618:	mov	r2, r5
   1561c:	bl	14c4c <table_set_ulong@@Base>
   15620:	b	15438 <table_deserialize@@Base+0xb8>
   15624:	ldrd	r0, [r6]
   15628:	mov	r2, r5
   1562c:	stm	sp, {r0, r1}
   15630:	mov	r0, r4
   15634:	mov	r1, r7
   15638:	bl	14ccc <table_set_llong@@Base>
   1563c:	add	r6, r6, #8
   15640:	b	15438 <table_deserialize@@Base+0xb8>
   15644:	ldrd	r0, [r6]
   15648:	mov	r2, r5
   1564c:	stm	sp, {r0, r1}
   15650:	mov	r0, r4
   15654:	mov	r1, r7
   15658:	bl	14d54 <table_set_ullong@@Base>
   1565c:	add	r6, r6, #8
   15660:	b	15438 <table_deserialize@@Base+0xb8>
   15664:	vldr	s0, [r6]
   15668:	mov	r0, r4
   1566c:	mov	r1, r7
   15670:	mov	r2, r5
   15674:	bl	14ddc <table_set_float@@Base>
   15678:	add	r6, r6, #4
   1567c:	b	15438 <table_deserialize@@Base+0xb8>
   15680:	vldr	d0, [r6]
   15684:	mov	r0, r4
   15688:	mov	r1, r7
   1568c:	mov	r2, r5
   15690:	bl	14e68 <table_set_double@@Base>
   15694:	add	r6, r6, #8
   15698:	b	15438 <table_deserialize@@Base+0xb8>
   1569c:	vldr	d0, [r6]
   156a0:	mov	r0, r4
   156a4:	mov	r1, r7
   156a8:	mov	r2, r5
   156ac:	bl	14ef0 <table_set_ldouble@@Base>
   156b0:	add	r6, r6, #8
   156b4:	b	15438 <table_deserialize@@Base+0xb8>
   156b8:	ldrb	r3, [r6], #1
   156bc:	mov	r0, r4
   156c0:	mov	r1, r7
   156c4:	mov	r2, r5
   156c8:	bl	14f98 <table_set_char@@Base>
   156cc:	b	15438 <table_deserialize@@Base+0xb8>
   156d0:	ldrb	r3, [r6], #1
   156d4:	mov	r0, r4
   156d8:	mov	r1, r7
   156dc:	mov	r2, r5
   156e0:	bl	15018 <table_set_uchar@@Base>
   156e4:	b	15438 <table_deserialize@@Base+0xb8>
   156e8:	mov	r0, r4
   156ec:	mov	r1, r7
   156f0:	mov	r2, r5
   156f4:	mov	r3, r6
   156f8:	bl	14f78 <table_set_string@@Base>
   156fc:	mov	r0, r6
   15700:	bl	11fec <strlen@plt>
   15704:	add	r0, r6, r0
   15708:	add	r6, r0, #1
   1570c:	b	15438 <table_deserialize@@Base+0xb8>
   15710:	ldrb	r3, [r6], #1
   15714:	mov	r0, r4
   15718:	mov	r1, r7
   1571c:	mov	r2, r5
   15720:	bl	1453c <table_set_bool@@Base>
   15724:	b	15438 <table_deserialize@@Base+0xb8>
   15728:	ldr	r5, [r6]
   1572c:	ldr	r0, [r6, #4]
   15730:	cmp	r5, #1
   15734:	str	r0, [r4, #48]	; 0x30
   15738:	blt	15758 <table_deserialize@@Base+0x3d8>
   1573c:	add	r6, r6, #8
   15740:	ldm	r6, {r1, r2, r3}
   15744:	mov	r0, r4
   15748:	bl	12f10 <table_register_callback@@Base>
   1574c:	add	r6, r6, #12
   15750:	subs	r5, r5, #1
   15754:	bne	15740 <table_deserialize@@Base+0x3c0>
   15758:	mov	r0, r4
   1575c:	sub	sp, fp, #24
   15760:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015764 <table_cell_init@@Base>:
   15764:	push	{r4, sl, fp, lr}
   15768:	add	fp, sp, #8
   1576c:	mov	r4, r2
   15770:	bl	13f9c <table_get_row_ptr@@Base>
   15774:	ldr	r0, [r0]
   15778:	mov	r1, #0
   1577c:	str	r1, [r0, r4, lsl #2]
   15780:	pop	{r4, sl, fp, pc}

00015784 <table_get_cell_ptr@@Base>:
   15784:	push	{r4, sl, fp, lr}
   15788:	add	fp, sp, #8
   1578c:	mov	r4, r2
   15790:	bl	13f9c <table_get_row_ptr@@Base>
   15794:	ldr	r0, [r0]
   15798:	add	r0, r0, r4, lsl #2
   1579c:	pop	{r4, sl, fp, pc}

000157a0 <table_cell_destroy@@Base>:
   157a0:	push	{r4, r5, r6, sl, fp, lr}
   157a4:	add	fp, sp, #16
   157a8:	mov	r5, r1
   157ac:	mov	r1, r2
   157b0:	mov	r4, r2
   157b4:	mov	r6, r0
   157b8:	bl	132dc <table_get_column_data_type@@Base>
   157bc:	cmp	r0, #23
   157c0:	popeq	{r4, r5, r6, sl, fp, pc}
   157c4:	mov	r0, r6
   157c8:	mov	r1, r5
   157cc:	bl	13f9c <table_get_row_ptr@@Base>
   157d0:	ldr	r0, [r0]
   157d4:	ldr	r0, [r0, r4, lsl #2]
   157d8:	cmp	r0, #0
   157dc:	beq	157e8 <table_cell_destroy@@Base+0x48>
   157e0:	pop	{r4, r5, r6, sl, fp, lr}
   157e4:	b	11f98 <free@plt>
   157e8:	pop	{r4, r5, r6, sl, fp, pc}

000157ec <table_cell_to_buffer@@Base>:
   157ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   157f0:	add	fp, sp, #24
   157f4:	sub	sp, sp, #8
   157f8:	mov	r7, r1
   157fc:	mov	r1, r2
   15800:	mov	r5, r3
   15804:	mov	r6, r2
   15808:	mov	r4, r0
   1580c:	bl	132dc <table_get_column_data_type@@Base>
   15810:	cmp	r0, #23
   15814:	bhi	15b08 <table_cell_to_buffer@@Base+0x31c>
   15818:	add	r1, pc, #8
   1581c:	ldr	r8, [fp, #8]
   15820:	ldr	r0, [r1, r0, lsl #2]
   15824:	add	pc, r1, r0
   15828:	andeq	r0, r0, r0, rrx
   1582c:	andeq	r0, r0, r4, ror r0
   15830:	andeq	r0, r0, r8, lsl #1
   15834:	muleq	r0, ip, r0
   15838:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1583c:	andeq	r0, r0, r4, asr #1
   15840:	ldrdeq	r0, [r0], -r8
   15844:	andeq	r0, r0, ip, ror #1
   15848:	andeq	r0, r0, ip, lsl #2
   1584c:	andeq	r0, r0, r0, lsr #2
   15850:	andeq	r0, r0, r4, lsr r1
   15854:	andeq	r0, r0, r4, asr r1
   15858:	andeq	r0, r0, r4, ror r1
   1585c:	muleq	r0, r4, r1
   15860:			; <UNDEFINED> instruction: 0x000001b4
   15864:	ldrdeq	r0, [r0], -r4
   15868:	strdeq	r0, [r0], -r4
   1586c:	andeq	r0, r0, r8, lsl r2
   15870:	andeq	r0, r0, r8, lsr r2
   15874:	andeq	r0, r0, r4, ror #4
   15878:	andeq	r0, r0, r8, ror r2
   1587c:	muleq	r0, r8, r2
   15880:			; <UNDEFINED> instruction: 0x000002b8
   15884:	andeq	r0, r0, ip, ror #5
   15888:	mov	r0, r4
   1588c:	mov	r1, r7
   15890:	mov	r2, r6
   15894:	bl	13d58 <table_get_int@@Base>
   15898:	b	15af0 <table_cell_to_buffer@@Base+0x304>
   1589c:	mov	r0, r4
   158a0:	mov	r1, r7
   158a4:	mov	r2, r6
   158a8:	bl	13d70 <table_get_uint@@Base>
   158ac:	b	15924 <table_cell_to_buffer@@Base+0x138>
   158b0:	mov	r0, r4
   158b4:	mov	r1, r7
   158b8:	mov	r2, r6
   158bc:	bl	13d88 <table_get_int8@@Base>
   158c0:	b	15af0 <table_cell_to_buffer@@Base+0x304>
   158c4:	mov	r0, r4
   158c8:	mov	r1, r7
   158cc:	mov	r2, r6
   158d0:	bl	13da0 <table_get_uint8@@Base>
   158d4:	b	15924 <table_cell_to_buffer@@Base+0x138>
   158d8:	mov	r0, r4
   158dc:	mov	r1, r7
   158e0:	mov	r2, r6
   158e4:	bl	13db8 <table_get_int16@@Base>
   158e8:	b	15af0 <table_cell_to_buffer@@Base+0x304>
   158ec:	mov	r0, r4
   158f0:	mov	r1, r7
   158f4:	mov	r2, r6
   158f8:	bl	13dd0 <table_get_uint16@@Base>
   158fc:	b	15924 <table_cell_to_buffer@@Base+0x138>
   15900:	mov	r0, r4
   15904:	mov	r1, r7
   15908:	mov	r2, r6
   1590c:	bl	13de8 <table_get_int32@@Base>
   15910:	b	15af0 <table_cell_to_buffer@@Base+0x304>
   15914:	mov	r0, r4
   15918:	mov	r1, r7
   1591c:	mov	r2, r6
   15920:	bl	13e00 <table_get_uint32@@Base>
   15924:	ldr	r2, [pc, #524]	; 15b38 <table_cell_to_buffer@@Base+0x34c>
   15928:	mov	r3, r0
   1592c:	add	r2, pc, r2
   15930:	b	15afc <table_cell_to_buffer@@Base+0x310>
   15934:	mov	r0, r4
   15938:	mov	r1, r7
   1593c:	mov	r2, r6
   15940:	bl	13e18 <table_get_int64@@Base>
   15944:	b	159ec <table_cell_to_buffer@@Base+0x200>
   15948:	mov	r0, r4
   1594c:	mov	r1, r7
   15950:	mov	r2, r6
   15954:	bl	13e30 <table_get_uint64@@Base>
   15958:	b	15a0c <table_cell_to_buffer@@Base+0x220>
   1595c:	mov	r0, r4
   15960:	mov	r1, r7
   15964:	mov	r2, r6
   15968:	bl	13e48 <table_get_short@@Base>
   1596c:	ldr	r2, [pc, #464]	; 15b44 <table_cell_to_buffer@@Base+0x358>
   15970:	mov	r3, r0
   15974:	add	r2, pc, r2
   15978:	b	15afc <table_cell_to_buffer@@Base+0x310>
   1597c:	mov	r0, r4
   15980:	mov	r1, r7
   15984:	mov	r2, r6
   15988:	bl	13e60 <table_get_ushort@@Base>
   1598c:	ldr	r2, [pc, #436]	; 15b48 <table_cell_to_buffer@@Base+0x35c>
   15990:	mov	r3, r0
   15994:	add	r2, pc, r2
   15998:	b	15afc <table_cell_to_buffer@@Base+0x310>
   1599c:	mov	r0, r4
   159a0:	mov	r1, r7
   159a4:	mov	r2, r6
   159a8:	bl	13e78 <table_get_long@@Base>
   159ac:	ldr	r2, [pc, #408]	; 15b4c <table_cell_to_buffer@@Base+0x360>
   159b0:	mov	r3, r0
   159b4:	add	r2, pc, r2
   159b8:	b	15afc <table_cell_to_buffer@@Base+0x310>
   159bc:	mov	r0, r4
   159c0:	mov	r1, r7
   159c4:	mov	r2, r6
   159c8:	bl	13e90 <table_get_ulong@@Base>
   159cc:	ldr	r2, [pc, #380]	; 15b50 <table_cell_to_buffer@@Base+0x364>
   159d0:	mov	r3, r0
   159d4:	add	r2, pc, r2
   159d8:	b	15afc <table_cell_to_buffer@@Base+0x310>
   159dc:	mov	r0, r4
   159e0:	mov	r1, r7
   159e4:	mov	r2, r6
   159e8:	bl	13ea8 <table_get_llong@@Base>
   159ec:	stm	sp, {r0, r1}
   159f0:	ldr	r2, [pc, #324]	; 15b3c <table_cell_to_buffer@@Base+0x350>
   159f4:	add	r2, pc, r2
   159f8:	b	15a7c <table_cell_to_buffer@@Base+0x290>
   159fc:	mov	r0, r4
   15a00:	mov	r1, r7
   15a04:	mov	r2, r6
   15a08:	bl	13ec0 <table_get_ullong@@Base>
   15a0c:	stm	sp, {r0, r1}
   15a10:	ldr	r2, [pc, #296]	; 15b40 <table_cell_to_buffer@@Base+0x354>
   15a14:	add	r2, pc, r2
   15a18:	b	15a7c <table_cell_to_buffer@@Base+0x290>
   15a1c:	mov	r0, r4
   15a20:	mov	r1, r7
   15a24:	mov	r2, r6
   15a28:	bl	13ed8 <table_get_float@@Base>
   15a2c:	vcvt.f64.f32	d16, s0
   15a30:	vstr	d16, [sp]
   15a34:	ldr	r2, [pc, #284]	; 15b58 <table_cell_to_buffer@@Base+0x36c>
   15a38:	add	r2, pc, r2
   15a3c:	b	15a7c <table_cell_to_buffer@@Base+0x290>
   15a40:	mov	r0, r4
   15a44:	mov	r1, r7
   15a48:	mov	r2, r6
   15a4c:	bl	13ef0 <table_get_double@@Base>
   15a50:	vstr	d0, [sp]
   15a54:	ldr	r2, [pc, #256]	; 15b5c <table_cell_to_buffer@@Base+0x370>
   15a58:	add	r2, pc, r2
   15a5c:	b	15a7c <table_cell_to_buffer@@Base+0x290>
   15a60:	mov	r0, r4
   15a64:	mov	r1, r7
   15a68:	mov	r2, r6
   15a6c:	bl	13f08 <table_get_ldouble@@Base>
   15a70:	vstr	d0, [sp]
   15a74:	ldr	r2, [pc, #228]	; 15b60 <table_cell_to_buffer@@Base+0x374>
   15a78:	add	r2, pc, r2
   15a7c:	mov	r0, r5
   15a80:	mov	r1, r8
   15a84:	bl	12004 <snprintf@plt>
   15a88:	b	15b08 <table_cell_to_buffer@@Base+0x31c>
   15a8c:	mov	r0, r4
   15a90:	mov	r1, r7
   15a94:	mov	r2, r6
   15a98:	bl	13f20 <table_get_char@@Base>
   15a9c:	b	15ab0 <table_cell_to_buffer@@Base+0x2c4>
   15aa0:	mov	r0, r4
   15aa4:	mov	r1, r7
   15aa8:	mov	r2, r6
   15aac:	bl	13f38 <table_get_uchar@@Base>
   15ab0:	ldr	r2, [pc, #172]	; 15b64 <table_cell_to_buffer@@Base+0x378>
   15ab4:	mov	r3, r0
   15ab8:	add	r2, pc, r2
   15abc:	b	15afc <table_cell_to_buffer@@Base+0x310>
   15ac0:	mov	r0, r4
   15ac4:	mov	r1, r7
   15ac8:	mov	r2, r6
   15acc:	bl	13f50 <table_get_string@@Base>
   15ad0:	ldr	r2, [pc, #124]	; 15b54 <table_cell_to_buffer@@Base+0x368>
   15ad4:	mov	r3, r0
   15ad8:	add	r2, pc, r2
   15adc:	b	15afc <table_cell_to_buffer@@Base+0x310>
   15ae0:	mov	r0, r4
   15ae4:	mov	r1, r7
   15ae8:	mov	r2, r6
   15aec:	bl	13d40 <table_get_bool@@Base>
   15af0:	ldr	r2, [pc, #60]	; 15b34 <table_cell_to_buffer@@Base+0x348>
   15af4:	mov	r3, r0
   15af8:	add	r2, pc, r2
   15afc:	mov	r0, r5
   15b00:	mov	r1, r8
   15b04:	bl	12004 <snprintf@plt>
   15b08:	mov	r0, #0
   15b0c:	sub	sp, fp, #24
   15b10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15b14:	mov	r0, r4
   15b18:	mov	r1, r7
   15b1c:	mov	r2, r6
   15b20:	bl	13f64 <table_get_ptr@@Base>
   15b24:	ldr	r2, [pc, #60]	; 15b68 <table_cell_to_buffer@@Base+0x37c>
   15b28:	mov	r3, r0
   15b2c:	add	r2, pc, r2
   15b30:	b	15afc <table_cell_to_buffer@@Base+0x310>
   15b34:	andeq	r0, r0, r7, asr r8
   15b38:	andeq	r0, r0, sl, asr sl
   15b3c:	muleq	r0, r5, r9
   15b40:	andeq	r0, r0, sl, ror r9
   15b44:	andeq	r0, r0, pc, lsl sl
   15b48:	andeq	r0, r0, r3, lsl #20
   15b4c:	andeq	r0, r0, r7, ror #19
   15b50:	andeq	r0, r0, fp, asr #19
   15b54:	andeq	r0, r0, fp, asr #17
   15b58:	andeq	r0, r0, lr, ror #18
   15b5c:	andeq	r0, r0, r1, asr r9
   15b60:	andeq	r0, r0, r5, lsr r9
   15b64:	strdeq	r0, [r0], -r9
   15b68:	andeq	r0, r0, r8, lsl #17

00015b6c <table_cell_from_buffer@@Base>:
   15b6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15b70:	add	fp, sp, #24
   15b74:	sub	sp, sp, #264	; 0x108
   15b78:	mov	r5, r1
   15b7c:	mov	r1, r2
   15b80:	mov	r7, r3
   15b84:	mov	r4, r2
   15b88:	mov	r6, r0
   15b8c:	bl	132dc <table_get_column_data_type@@Base>
   15b90:	cmp	r0, #23
   15b94:	bhi	161c8 <table_cell_from_buffer@@Base+0x65c>
   15b98:	add	r1, pc, #4
   15b9c:	ldr	r0, [r1, r0, lsl #2]
   15ba0:	add	pc, r1, r0
   15ba4:	andeq	r0, r0, r0, rrx
   15ba8:	muleq	r0, ip, r0
   15bac:	ldrdeq	r0, [r0], -r8
   15bb0:	andeq	r0, r0, r4, lsl r1
   15bb4:	andeq	r0, r0, r0, asr r1
   15bb8:	andeq	r0, r0, ip, lsl #3
   15bbc:	andeq	r0, r0, r8, asr #3
   15bc0:	andeq	r0, r0, r4, lsl #4
   15bc4:	andeq	r0, r0, r0, asr #4
   15bc8:	andeq	r0, r0, r4, lsl #5
   15bcc:	andeq	r0, r0, r8, asr #5
   15bd0:	andeq	r0, r0, r4, lsl #6
   15bd4:	andeq	r0, r0, r0, asr #6
   15bd8:	andeq	r0, r0, ip, ror r3
   15bdc:			; <UNDEFINED> instruction: 0x000003b8
   15be0:	strdeq	r0, [r0], -ip
   15be4:	andeq	r0, r0, r0, asr #8
   15be8:	andeq	r0, r0, ip, ror r4
   15bec:			; <UNDEFINED> instruction: 0x000004b8
   15bf0:	strdeq	r0, [r0], -r4
   15bf4:	andeq	r0, r0, r0, lsr r5
   15bf8:	andeq	r0, r0, ip, ror #10
   15bfc:	andeq	r0, r0, r8, lsr #11
   15c00:	andeq	r0, r0, ip, ror #11
   15c04:	ldr	r1, [pc, #1480]	; 161d4 <table_cell_from_buffer@@Base+0x668>
   15c08:	add	r2, sp, #8
   15c0c:	mov	r0, r7
   15c10:	add	r1, pc, r1
   15c14:	bl	12010 <__isoc99_sscanf@plt>
   15c18:	mov	r1, r0
   15c1c:	mvn	r0, #0
   15c20:	cmp	r1, #1
   15c24:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15c28:	ldr	r3, [sp, #8]
   15c2c:	mov	r0, r6
   15c30:	mov	r1, r5
   15c34:	mov	r2, r4
   15c38:	bl	145bc <table_set_int@@Base>
   15c3c:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15c40:	ldr	r1, [pc, #1424]	; 161d8 <table_cell_from_buffer@@Base+0x66c>
   15c44:	add	r2, sp, #8
   15c48:	mov	r0, r7
   15c4c:	add	r1, pc, r1
   15c50:	bl	12010 <__isoc99_sscanf@plt>
   15c54:	mov	r1, r0
   15c58:	mvn	r0, #0
   15c5c:	cmp	r1, #1
   15c60:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15c64:	ldr	r3, [sp, #8]
   15c68:	mov	r0, r6
   15c6c:	mov	r1, r5
   15c70:	mov	r2, r4
   15c74:	bl	1463c <table_set_uint@@Base>
   15c78:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15c7c:	ldr	r1, [pc, #1368]	; 161dc <table_cell_from_buffer@@Base+0x670>
   15c80:	add	r2, sp, #8
   15c84:	mov	r0, r7
   15c88:	add	r1, pc, r1
   15c8c:	bl	12010 <__isoc99_sscanf@plt>
   15c90:	mov	r1, r0
   15c94:	mvn	r0, #0
   15c98:	cmp	r1, #1
   15c9c:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15ca0:	ldrsb	r3, [sp, #8]
   15ca4:	mov	r0, r6
   15ca8:	mov	r1, r5
   15cac:	mov	r2, r4
   15cb0:	bl	146bc <table_set_int8@@Base>
   15cb4:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15cb8:	ldr	r1, [pc, #1312]	; 161e0 <table_cell_from_buffer@@Base+0x674>
   15cbc:	add	r2, sp, #8
   15cc0:	mov	r0, r7
   15cc4:	add	r1, pc, r1
   15cc8:	bl	12010 <__isoc99_sscanf@plt>
   15ccc:	mov	r1, r0
   15cd0:	mvn	r0, #0
   15cd4:	cmp	r1, #1
   15cd8:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15cdc:	ldrb	r3, [sp, #8]
   15ce0:	mov	r0, r6
   15ce4:	mov	r1, r5
   15ce8:	mov	r2, r4
   15cec:	bl	1473c <table_set_uint8@@Base>
   15cf0:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15cf4:	ldr	r1, [pc, #1256]	; 161e4 <table_cell_from_buffer@@Base+0x678>
   15cf8:	add	r2, sp, #8
   15cfc:	mov	r0, r7
   15d00:	add	r1, pc, r1
   15d04:	bl	12010 <__isoc99_sscanf@plt>
   15d08:	mov	r1, r0
   15d0c:	mvn	r0, #0
   15d10:	cmp	r1, #1
   15d14:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15d18:	ldrsh	r3, [sp, #8]
   15d1c:	mov	r0, r6
   15d20:	mov	r1, r5
   15d24:	mov	r2, r4
   15d28:	bl	147bc <table_set_int16@@Base>
   15d2c:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15d30:	ldr	r1, [pc, #1200]	; 161e8 <table_cell_from_buffer@@Base+0x67c>
   15d34:	add	r2, sp, #8
   15d38:	mov	r0, r7
   15d3c:	add	r1, pc, r1
   15d40:	bl	12010 <__isoc99_sscanf@plt>
   15d44:	mov	r1, r0
   15d48:	mvn	r0, #0
   15d4c:	cmp	r1, #1
   15d50:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15d54:	ldrh	r3, [sp, #8]
   15d58:	mov	r0, r6
   15d5c:	mov	r1, r5
   15d60:	mov	r2, r4
   15d64:	bl	1483c <table_set_uint16@@Base>
   15d68:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15d6c:	ldr	r1, [pc, #1144]	; 161ec <table_cell_from_buffer@@Base+0x680>
   15d70:	add	r2, sp, #8
   15d74:	mov	r0, r7
   15d78:	add	r1, pc, r1
   15d7c:	bl	12010 <__isoc99_sscanf@plt>
   15d80:	mov	r1, r0
   15d84:	mvn	r0, #0
   15d88:	cmp	r1, #1
   15d8c:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15d90:	ldr	r3, [sp, #8]
   15d94:	mov	r0, r6
   15d98:	mov	r1, r5
   15d9c:	mov	r2, r4
   15da0:	bl	148bc <table_set_int32@@Base>
   15da4:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15da8:	ldr	r1, [pc, #1088]	; 161f0 <table_cell_from_buffer@@Base+0x684>
   15dac:	add	r2, sp, #8
   15db0:	mov	r0, r7
   15db4:	add	r1, pc, r1
   15db8:	bl	12010 <__isoc99_sscanf@plt>
   15dbc:	mov	r1, r0
   15dc0:	mvn	r0, #0
   15dc4:	cmp	r1, #1
   15dc8:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15dcc:	ldr	r3, [sp, #8]
   15dd0:	mov	r0, r6
   15dd4:	mov	r1, r5
   15dd8:	mov	r2, r4
   15ddc:	bl	1493c <table_set_uint32@@Base>
   15de0:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15de4:	ldr	r1, [pc, #1032]	; 161f4 <table_cell_from_buffer@@Base+0x688>
   15de8:	add	r2, sp, #8
   15dec:	mov	r0, r7
   15df0:	add	r1, pc, r1
   15df4:	bl	12010 <__isoc99_sscanf@plt>
   15df8:	mov	r1, r0
   15dfc:	mvn	r0, #0
   15e00:	cmp	r1, #1
   15e04:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15e08:	ldr	r0, [sp, #8]
   15e0c:	ldr	r1, [sp, #12]
   15e10:	mov	r2, r4
   15e14:	stm	sp, {r0, r1}
   15e18:	mov	r0, r6
   15e1c:	mov	r1, r5
   15e20:	bl	149bc <table_set_int64@@Base>
   15e24:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15e28:	ldr	r1, [pc, #968]	; 161f8 <table_cell_from_buffer@@Base+0x68c>
   15e2c:	add	r2, sp, #8
   15e30:	mov	r0, r7
   15e34:	add	r1, pc, r1
   15e38:	bl	12010 <__isoc99_sscanf@plt>
   15e3c:	mov	r1, r0
   15e40:	mvn	r0, #0
   15e44:	cmp	r1, #1
   15e48:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15e4c:	ldr	r0, [sp, #8]
   15e50:	ldr	r1, [sp, #12]
   15e54:	mov	r2, r4
   15e58:	stm	sp, {r0, r1}
   15e5c:	mov	r0, r6
   15e60:	mov	r1, r5
   15e64:	bl	14a44 <table_set_uint64@@Base>
   15e68:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15e6c:	ldr	r1, [pc, #904]	; 161fc <table_cell_from_buffer@@Base+0x690>
   15e70:	add	r2, sp, #8
   15e74:	mov	r0, r7
   15e78:	add	r1, pc, r1
   15e7c:	bl	12010 <__isoc99_sscanf@plt>
   15e80:	mov	r1, r0
   15e84:	mvn	r0, #0
   15e88:	cmp	r1, #1
   15e8c:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15e90:	ldrsh	r3, [sp, #8]
   15e94:	mov	r0, r6
   15e98:	mov	r1, r5
   15e9c:	mov	r2, r4
   15ea0:	bl	14acc <table_set_short@@Base>
   15ea4:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15ea8:	ldr	r1, [pc, #848]	; 16200 <table_cell_from_buffer@@Base+0x694>
   15eac:	add	r2, sp, #8
   15eb0:	mov	r0, r7
   15eb4:	add	r1, pc, r1
   15eb8:	bl	12010 <__isoc99_sscanf@plt>
   15ebc:	mov	r1, r0
   15ec0:	mvn	r0, #0
   15ec4:	cmp	r1, #1
   15ec8:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15ecc:	ldrh	r3, [sp, #8]
   15ed0:	mov	r0, r6
   15ed4:	mov	r1, r5
   15ed8:	mov	r2, r4
   15edc:	bl	14b4c <table_set_ushort@@Base>
   15ee0:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15ee4:	ldr	r1, [pc, #792]	; 16204 <table_cell_from_buffer@@Base+0x698>
   15ee8:	add	r2, sp, #8
   15eec:	mov	r0, r7
   15ef0:	add	r1, pc, r1
   15ef4:	bl	12010 <__isoc99_sscanf@plt>
   15ef8:	mov	r1, r0
   15efc:	mvn	r0, #0
   15f00:	cmp	r1, #1
   15f04:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15f08:	ldr	r3, [sp, #8]
   15f0c:	mov	r0, r6
   15f10:	mov	r1, r5
   15f14:	mov	r2, r4
   15f18:	bl	14bcc <table_set_long@@Base>
   15f1c:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15f20:	ldr	r1, [pc, #736]	; 16208 <table_cell_from_buffer@@Base+0x69c>
   15f24:	add	r2, sp, #8
   15f28:	mov	r0, r7
   15f2c:	add	r1, pc, r1
   15f30:	bl	12010 <__isoc99_sscanf@plt>
   15f34:	mov	r1, r0
   15f38:	mvn	r0, #0
   15f3c:	cmp	r1, #1
   15f40:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15f44:	ldr	r3, [sp, #8]
   15f48:	mov	r0, r6
   15f4c:	mov	r1, r5
   15f50:	mov	r2, r4
   15f54:	bl	14c4c <table_set_ulong@@Base>
   15f58:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15f5c:	ldr	r1, [pc, #680]	; 1620c <table_cell_from_buffer@@Base+0x6a0>
   15f60:	add	r2, sp, #8
   15f64:	mov	r0, r7
   15f68:	add	r1, pc, r1
   15f6c:	bl	12010 <__isoc99_sscanf@plt>
   15f70:	mov	r1, r0
   15f74:	mvn	r0, #0
   15f78:	cmp	r1, #1
   15f7c:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15f80:	ldr	r0, [sp, #8]
   15f84:	ldr	r1, [sp, #12]
   15f88:	mov	r2, r4
   15f8c:	stm	sp, {r0, r1}
   15f90:	mov	r0, r6
   15f94:	mov	r1, r5
   15f98:	bl	14ccc <table_set_llong@@Base>
   15f9c:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15fa0:	ldr	r1, [pc, #616]	; 16210 <table_cell_from_buffer@@Base+0x6a4>
   15fa4:	add	r2, sp, #8
   15fa8:	mov	r0, r7
   15fac:	add	r1, pc, r1
   15fb0:	bl	12010 <__isoc99_sscanf@plt>
   15fb4:	mov	r1, r0
   15fb8:	mvn	r0, #0
   15fbc:	cmp	r1, #1
   15fc0:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   15fc4:	ldr	r0, [sp, #8]
   15fc8:	ldr	r1, [sp, #12]
   15fcc:	mov	r2, r4
   15fd0:	stm	sp, {r0, r1}
   15fd4:	mov	r0, r6
   15fd8:	mov	r1, r5
   15fdc:	bl	14d54 <table_set_ullong@@Base>
   15fe0:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   15fe4:	ldr	r1, [pc, #556]	; 16218 <table_cell_from_buffer@@Base+0x6ac>
   15fe8:	add	r2, sp, #8
   15fec:	mov	r0, r7
   15ff0:	add	r1, pc, r1
   15ff4:	bl	12010 <__isoc99_sscanf@plt>
   15ff8:	mov	r1, r0
   15ffc:	mvn	r0, #0
   16000:	cmp	r1, #1
   16004:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   16008:	vldr	s0, [sp, #8]
   1600c:	mov	r0, r6
   16010:	mov	r1, r5
   16014:	mov	r2, r4
   16018:	bl	14ddc <table_set_float@@Base>
   1601c:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   16020:	ldr	r1, [pc, #500]	; 1621c <table_cell_from_buffer@@Base+0x6b0>
   16024:	add	r2, sp, #8
   16028:	mov	r0, r7
   1602c:	add	r1, pc, r1
   16030:	bl	12010 <__isoc99_sscanf@plt>
   16034:	mov	r1, r0
   16038:	mvn	r0, #0
   1603c:	cmp	r1, #1
   16040:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   16044:	vldr	d0, [sp, #8]
   16048:	mov	r0, r6
   1604c:	mov	r1, r5
   16050:	mov	r2, r4
   16054:	bl	14e68 <table_set_double@@Base>
   16058:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   1605c:	ldr	r1, [pc, #444]	; 16220 <table_cell_from_buffer@@Base+0x6b4>
   16060:	add	r2, sp, #8
   16064:	mov	r0, r7
   16068:	add	r1, pc, r1
   1606c:	bl	12010 <__isoc99_sscanf@plt>
   16070:	mov	r1, r0
   16074:	mvn	r0, #0
   16078:	cmp	r1, #1
   1607c:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   16080:	vldr	d0, [sp, #8]
   16084:	mov	r0, r6
   16088:	mov	r1, r5
   1608c:	mov	r2, r4
   16090:	bl	14ef0 <table_set_ldouble@@Base>
   16094:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   16098:	ldr	r1, [pc, #392]	; 16228 <table_cell_from_buffer@@Base+0x6bc>
   1609c:	add	r2, sp, #8
   160a0:	mov	r0, r7
   160a4:	add	r1, pc, r1
   160a8:	bl	12010 <__isoc99_sscanf@plt>
   160ac:	mov	r1, r0
   160b0:	mvn	r0, #0
   160b4:	cmp	r1, #1
   160b8:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   160bc:	ldrb	r3, [sp, #8]
   160c0:	mov	r0, r6
   160c4:	mov	r1, r5
   160c8:	mov	r2, r4
   160cc:	bl	14f98 <table_set_char@@Base>
   160d0:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   160d4:	ldr	r1, [pc, #336]	; 1622c <table_cell_from_buffer@@Base+0x6c0>
   160d8:	add	r2, sp, #8
   160dc:	mov	r0, r7
   160e0:	add	r1, pc, r1
   160e4:	bl	12010 <__isoc99_sscanf@plt>
   160e8:	mov	r1, r0
   160ec:	mvn	r0, #0
   160f0:	cmp	r1, #1
   160f4:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   160f8:	ldrb	r3, [sp, #8]
   160fc:	mov	r0, r6
   16100:	mov	r1, r5
   16104:	mov	r2, r4
   16108:	bl	15018 <table_set_uchar@@Base>
   1610c:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   16110:	ldr	r1, [pc, #252]	; 16214 <table_cell_from_buffer@@Base+0x6a8>
   16114:	add	r2, sp, #8
   16118:	mov	r0, r7
   1611c:	add	r1, pc, r1
   16120:	bl	12010 <__isoc99_sscanf@plt>
   16124:	mov	r1, r0
   16128:	mvn	r0, #0
   1612c:	cmp	r1, #1
   16130:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   16134:	add	r3, sp, #8
   16138:	mov	r0, r6
   1613c:	mov	r1, r5
   16140:	mov	r2, r4
   16144:	bl	14f78 <table_set_string@@Base>
   16148:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   1614c:	ldr	r1, [pc, #208]	; 16224 <table_cell_from_buffer@@Base+0x6b8>
   16150:	add	r2, sp, #8
   16154:	mov	r0, r7
   16158:	add	r1, pc, r1
   1615c:	bl	12010 <__isoc99_sscanf@plt>
   16160:	mov	r1, r0
   16164:	mvn	r0, #0
   16168:	cmp	r1, #1
   1616c:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   16170:	ldr	r3, [sp, #8]
   16174:	mov	r0, r6
   16178:	mov	r1, r5
   1617c:	mov	r2, r4
   16180:	cmp	r3, #0
   16184:	movwne	r3, #1
   16188:	bl	1453c <table_set_bool@@Base>
   1618c:	b	161c8 <table_cell_from_buffer@@Base+0x65c>
   16190:	ldr	r1, [pc, #152]	; 16230 <table_cell_from_buffer@@Base+0x6c4>
   16194:	add	r2, sp, #8
   16198:	mov	r0, r7
   1619c:	add	r1, pc, r1
   161a0:	bl	12010 <__isoc99_sscanf@plt>
   161a4:	mov	r1, r0
   161a8:	mvn	r0, #0
   161ac:	cmp	r1, #1
   161b0:	bne	161cc <table_cell_from_buffer@@Base+0x660>
   161b4:	ldr	r3, [sp, #8]
   161b8:	mov	r0, r6
   161bc:	mov	r1, r5
   161c0:	mov	r2, r4
   161c4:	bl	15098 <table_set_ptr@@Base>
   161c8:	mov	r0, #0
   161cc:	sub	sp, fp, #24
   161d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   161d4:	andeq	r0, r0, pc, lsr r7
   161d8:	andeq	r0, r0, sl, lsr r7
   161dc:	andeq	r0, r0, pc, lsr #14
   161e0:	strdeq	r0, [r0], -r8
   161e4:	muleq	r0, r3, r6
   161e8:	andeq	r0, r0, fp, asr r6
   161ec:	ldrdeq	r0, [r0], -r7
   161f0:	ldrdeq	r0, [r0], -r2
   161f4:	muleq	r0, r9, r5
   161f8:	andeq	r0, r0, sl, asr r5
   161fc:	andeq	r0, r0, fp, lsl r5
   16200:	andeq	r0, r0, r3, ror #9
   16204:	andeq	r0, r0, fp, lsr #9
   16208:	andeq	r0, r0, r3, ror r4
   1620c:	andeq	r0, r0, r1, lsr #8
   16210:	andeq	r0, r0, r2, ror #7
   16214:	andeq	r0, r0, r7, lsl #5
   16218:			; <UNDEFINED> instruction: 0x000003b6
   1621c:	andeq	r0, r0, sp, ror r3
   16220:	andeq	r0, r0, r5, asr #6
   16224:	strdeq	r0, [r0], -r7
   16228:	andeq	r0, r0, sp, lsl #6
   1622c:	ldrdeq	r0, [r0], -r1
   16230:	andeq	r0, r0, r8, lsl r2

00016234 <table_cell_nullify@@Base>:
   16234:	push	{r4, r5, fp, lr}
   16238:	add	fp, sp, #8
   1623c:	mov	r4, r2
   16240:	bl	13f9c <table_get_row_ptr@@Base>
   16244:	ldr	r5, [r0]
   16248:	ldr	r0, [r5, r4, lsl #2]
   1624c:	cmp	r0, #0
   16250:	beq	16260 <table_cell_nullify@@Base+0x2c>
   16254:	bl	11f98 <free@plt>
   16258:	mov	r0, #0
   1625c:	str	r0, [r5, r4, lsl #2]
   16260:	mov	r0, #0
   16264:	pop	{r4, r5, fp, pc}

00016268 <__libc_csu_init@@Base>:
   16268:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1626c:	mov	r7, r0
   16270:	ldr	r6, [pc, #72]	; 162c0 <__libc_csu_init@@Base+0x58>
   16274:	ldr	r5, [pc, #72]	; 162c4 <__libc_csu_init@@Base+0x5c>
   16278:	add	r6, pc, r6
   1627c:	add	r5, pc, r5
   16280:	sub	r6, r6, r5
   16284:	mov	r8, r1
   16288:	mov	r9, r2
   1628c:	bl	11f60 <strcmp@plt-0x20>
   16290:	asrs	r6, r6, #2
   16294:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16298:	mov	r4, #0
   1629c:	add	r4, r4, #1
   162a0:	ldr	r3, [r5], #4
   162a4:	mov	r2, r9
   162a8:	mov	r1, r8
   162ac:	mov	r0, r7
   162b0:	blx	r3
   162b4:	cmp	r6, r4
   162b8:	bne	1629c <__libc_csu_init@@Base+0x34>
   162bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   162c0:	andeq	r0, r1, ip, lsr #24
   162c4:	andeq	r0, r1, r4, lsr #24

000162c8 <__libc_csu_fini@@Base>:
   162c8:	bx	lr

Disassembly of section .fini:

000162cc <.fini>:
   162cc:	push	{r3, lr}
   162d0:	pop	{r3, pc}
