
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000d38 <_init>:
 d38:	push	{r3, lr}
 d3c:	bl	10c0 <call_weak_fn>
 d40:	pop	{r3, pc}

Disassembly of section .plt:

00000d44 <.plt>:
 d44:	push	{lr}		; (str lr, [sp, #-4]!)
 d48:	ldr	lr, [pc, #4]	; d54 <.plt+0x10>
 d4c:	add	lr, pc, lr
 d50:	ldr	pc, [lr, #8]!
 d54:	.word	0x0002c2ac

00000d58 <calloc@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #44, 20	; 0x2c000
 d60:	ldr	pc, [ip, #684]!	; 0x2ac

00000d64 <raise@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #44, 20	; 0x2c000
 d6c:	ldr	pc, [ip, #676]!	; 0x2a4

00000d70 <strcmp@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #44, 20	; 0x2c000
 d78:	ldr	pc, [ip, #668]!	; 0x29c

00000d7c <__cxa_finalize@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #44, 20	; 0x2c000
 d84:	ldr	pc, [ip, #660]!	; 0x294

00000d88 <printf@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #44, 20	; 0x2c000
 d90:	ldr	pc, [ip, #652]!	; 0x28c

00000d94 <fopen@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #44, 20	; 0x2c000
 d9c:	ldr	pc, [ip, #644]!	; 0x284

00000da0 <getprotobyname@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #44, 20	; 0x2c000
 da8:	ldr	pc, [ip, #636]!	; 0x27c

00000dac <longjmp@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #44, 20	; 0x2c000
 db4:	ldr	pc, [ip, #628]!	; 0x274

00000db8 <_setjmp@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #44, 20	; 0x2c000
 dc0:	ldr	pc, [ip, #620]!	; 0x26c

00000dc4 <free@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #44, 20	; 0x2c000
 dcc:	ldr	pc, [ip, #612]!	; 0x264

00000dd0 <getnetbyname@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #44, 20	; 0x2c000
 dd8:	ldr	pc, [ip, #604]!	; 0x25c

00000ddc <ferror@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #44, 20	; 0x2c000
 de4:	ldr	pc, [ip, #596]!	; 0x254

00000de8 <memcpy@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #44, 20	; 0x2c000
 df0:	ldr	pc, [ip, #588]!	; 0x24c

00000df4 <strdup@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #44, 20	; 0x2c000
 dfc:	ldr	pc, [ip, #580]!	; 0x244

00000e00 <rewind@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #44, 20	; 0x2c000
 e08:	ldr	pc, [ip, #572]!	; 0x23c

00000e0c <realloc@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #44, 20	; 0x2c000
 e14:	ldr	pc, [ip, #564]!	; 0x234

00000e18 <fwrite@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #44, 20	; 0x2c000
 e20:	ldr	pc, [ip, #556]!	; 0x22c

00000e24 <strcpy@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #44, 20	; 0x2c000
 e2c:	ldr	pc, [ip, #548]!	; 0x224

00000e30 <fread@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #44, 20	; 0x2c000
 e38:	ldr	pc, [ip, #540]!	; 0x21c

00000e3c <puts@plt>:
 e3c:	add	ip, pc, #0, 12
 e40:	add	ip, ip, #44, 20	; 0x2c000
 e44:	ldr	pc, [ip, #532]!	; 0x214

00000e48 <malloc@plt>:
 e48:	add	ip, pc, #0, 12
 e4c:	add	ip, ip, #44, 20	; 0x2c000
 e50:	ldr	pc, [ip, #524]!	; 0x20c

00000e54 <__gmon_start__@plt>:
 e54:	add	ip, pc, #0, 12
 e58:	add	ip, ip, #44, 20	; 0x2c000
 e5c:	ldr	pc, [ip, #516]!	; 0x204

00000e60 <__ctype_b_loc@plt>:
 e60:	add	ip, pc, #0, 12
 e64:	add	ip, ip, #44, 20	; 0x2c000
 e68:	ldr	pc, [ip, #508]!	; 0x1fc

00000e6c <exit@plt>:
 e6c:	add	ip, pc, #0, 12
 e70:	add	ip, ip, #44, 20	; 0x2c000
 e74:	ldr	pc, [ip, #500]!	; 0x1f4

00000e78 <strlen@plt>:
 e78:	add	ip, pc, #0, 12
 e7c:	add	ip, ip, #44, 20	; 0x2c000
 e80:	ldr	pc, [ip, #492]!	; 0x1ec

00000e84 <strchr@plt>:
 e84:	add	ip, pc, #0, 12
 e88:	add	ip, ip, #44, 20	; 0x2c000
 e8c:	ldr	pc, [ip, #484]!	; 0x1e4

00000e90 <fprintf@plt>:
 e90:	add	ip, pc, #0, 12
 e94:	add	ip, ip, #44, 20	; 0x2c000
 e98:	ldr	pc, [ip, #476]!	; 0x1dc

00000e9c <__errno_location@plt>:
 e9c:	add	ip, pc, #0, 12
 ea0:	add	ip, ip, #44, 20	; 0x2c000
 ea4:	ldr	pc, [ip, #468]!	; 0x1d4

00000ea8 <getservbyname@plt>:
 ea8:	add	ip, pc, #0, 12
 eac:	add	ip, ip, #44, 20	; 0x2c000
 eb0:	ldr	pc, [ip, #460]!	; 0x1cc

00000eb4 <memset@plt>:
 eb4:	add	ip, pc, #0, 12
 eb8:	add	ip, ip, #44, 20	; 0x2c000
 ebc:	ldr	pc, [ip, #452]!	; 0x1c4

00000ec0 <putchar@plt>:
 ec0:	add	ip, pc, #0, 12
 ec4:	add	ip, ip, #44, 20	; 0x2c000
 ec8:	ldr	pc, [ip, #444]!	; 0x1bc

00000ecc <strncpy@plt>:
 ecc:	add	ip, pc, #0, 12
 ed0:	add	ip, ip, #44, 20	; 0x2c000
 ed4:	ldr	pc, [ip, #436]!	; 0x1b4

00000ed8 <fileno@plt>:
 ed8:	add	ip, pc, #0, 12
 edc:	add	ip, ip, #44, 20	; 0x2c000
 ee0:	ldr	pc, [ip, #428]!	; 0x1ac

00000ee4 <sscanf@plt>:
 ee4:	add	ip, pc, #0, 12
 ee8:	add	ip, ip, #44, 20	; 0x2c000
 eec:	ldr	pc, [ip, #420]!	; 0x1a4

00000ef0 <clearerr@plt>:
 ef0:	add	ip, pc, #0, 12
 ef4:	add	ip, ip, #44, 20	; 0x2c000
 ef8:	ldr	pc, [ip, #412]!	; 0x19c

00000efc <vsnprintf@plt>:
 efc:	add	ip, pc, #0, 12
 f00:	add	ip, ip, #44, 20	; 0x2c000
 f04:	ldr	pc, [ip, #404]!	; 0x194

00000f08 <freeaddrinfo@plt>:
 f08:	add	ip, pc, #0, 12
 f0c:	add	ip, ip, #44, 20	; 0x2c000
 f10:	ldr	pc, [ip, #396]!	; 0x18c

00000f14 <getaddrinfo@plt>:
 f14:	add	ip, pc, #0, 12
 f18:	add	ip, ip, #44, 20	; 0x2c000
 f1c:	ldr	pc, [ip, #388]!	; 0x184

00000f20 <ffs@plt>:
 f20:	add	ip, pc, #0, 12
 f24:	add	ip, ip, #44, 20	; 0x2c000
 f28:	ldr	pc, [ip, #380]!	; 0x17c

00000f2c <gethostbyname@plt>:
 f2c:	add	ip, pc, #0, 12
 f30:	add	ip, ip, #44, 20	; 0x2c000
 f34:	ldr	pc, [ip, #372]!	; 0x174

00000f38 <isatty@plt>:
 f38:	add	ip, pc, #0, 12
 f3c:	add	ip, ip, #44, 20	; 0x2c000
 f40:	ldr	pc, [ip, #364]!	; 0x16c

00000f44 <abort@plt>:
 f44:	add	ip, pc, #0, 12
 f48:	add	ip, ip, #44, 20	; 0x2c000
 f4c:	ldr	pc, [ip, #356]!	; 0x164

00000f50 <getc@plt>:
 f50:	add	ip, pc, #0, 12
 f54:	add	ip, ip, #44, 20	; 0x2c000
 f58:	ldr	pc, [ip, #348]!	; 0x15c

Disassembly of section .text:

00000f5c <yy_get_previous_state>:
     f5c:	ldr	r3, [pc, #304]	; 1094 <yy_get_previous_state+0x138>
     f60:	ldr	r2, [pc, #304]	; 1098 <yy_get_previous_state+0x13c>
     f64:	add	r3, pc, r3
     f68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f6c:	add	r2, pc, r2
     f70:	ldm	r3, {r0, r1}
     f74:	ldr	r7, [r3, #8]
     f78:	ldr	r6, [r3, #12]
     f7c:	ldr	r3, [pc, #280]	; 109c <yy_get_previous_state+0x140>
     f80:	sub	sp, sp, #20
     f84:	ldr	lr, [pc, #276]	; 10a0 <yy_get_previous_state+0x144>
     f88:	str	r1, [sp, #4]
     f8c:	ldr	r3, [r2, r3]
     f90:	add	lr, pc, lr
     f94:	mov	r1, #0
     f98:	ldr	ip, [r3]
     f9c:	ldr	r3, [pc, #256]	; 10a4 <yy_get_previous_state+0x148>
     fa0:	sub	r4, lr, #1216	; 0x4c0
     fa4:	add	r3, pc, r3
     fa8:	add	r3, r3, #256	; 0x100
     fac:	str	r3, [sp, #8]
     fb0:	ldr	r3, [pc, #240]	; 10a8 <yy_get_previous_state+0x14c>
     fb4:	mov	r8, r1
     fb8:	add	r3, pc, r3
     fbc:	add	r3, r3, #3120	; 0xc30
     fc0:	sub	r4, r4, #2
     fc4:	add	r3, r3, #4
     fc8:	str	r3, [sp, #12]
     fcc:	ldr	r3, [sp, #4]
     fd0:	mov	r5, ip
     fd4:	cmp	ip, r3
     fd8:	bcc	1004 <yy_get_previous_state+0xa8>
     fdc:	cmp	r8, #0
     fe0:	ldrne	r3, [pc, #196]	; 10ac <yy_get_previous_state+0x150>
     fe4:	addne	r3, pc, r3
     fe8:	strne	r7, [r3, #8]
     fec:	cmp	r1, #0
     ff0:	ldrne	r3, [pc, #184]	; 10b0 <yy_get_previous_state+0x154>
     ff4:	addne	r3, pc, r3
     ff8:	strne	r6, [r3, #12]
     ffc:	add	sp, sp, #20
    1000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1004:	ldrb	r3, [ip], #1
    1008:	cmp	r3, #0
    100c:	moveq	r2, #1
    1010:	ldrne	r2, [pc, #156]	; 10b4 <yy_get_previous_state+0x158>
    1014:	addne	r2, pc, r2
    1018:	ldrbne	r2, [r2, r3]
    101c:	ldr	r9, [sp, #8]
    1020:	lsl	r3, r0, #1
    1024:	ldr	fp, [pc, #140]	; 10b8 <yy_get_previous_state+0x15c>
    1028:	ldrsh	r3, [r9, r3]
    102c:	cmp	r3, #0
    1030:	movne	r6, r5
    1034:	movne	r1, #1
    1038:	add	r5, lr, #2560	; 0xa00
    103c:	movne	r7, r0
    1040:	movne	r8, r1
    1044:	add	r5, r5, #10
    1048:	lsl	r9, r0, #1
    104c:	ldrsh	r3, [r4, r9]
    1050:	add	r3, r3, r2
    1054:	lsl	r3, r3, #1
    1058:	ldrsh	sl, [r5, r3]
    105c:	cmp	r0, sl
    1060:	bne	107c <yy_get_previous_state+0x120>
    1064:	ldr	r2, [pc, #80]	; 10bc <yy_get_previous_state+0x160>
    1068:	add	r2, pc, r2
    106c:	add	r2, r2, #1104	; 0x450
    1070:	add	r2, r2, #8
    1074:	ldrsh	r0, [r2, r3]
    1078:	b	fcc <yy_get_previous_state+0x70>
    107c:	ldr	r3, [sp, #12]
    1080:	ldrsh	r0, [r3, r9]
    1084:	cmp	r0, fp
    1088:	addgt	r2, lr, r2
    108c:	ldrbgt	r2, [r2, #-1272]	; 0xfffffb08
    1090:	b	1048 <yy_get_previous_state+0xec>
    1094:	.word	0x0002cbd8
    1098:	.word	0x0002c08c
    109c:	.word	0x000000e0
    10a0:	.word	0x00013b52
    10a4:	.word	0x00011b46
    10a8:	.word	0x00011b32
    10ac:	.word	0x0002cb58
    10b0:	.word	0x0002cb48
    10b4:	.word	0x00011ad6
    10b8:	.word	0x00000599
    10bc:	.word	0x00017a6a

000010c0 <call_weak_fn>:
    10c0:	ldr	r3, [pc, #20]	; 10dc <call_weak_fn+0x1c>
    10c4:	ldr	r2, [pc, #20]	; 10e0 <call_weak_fn+0x20>
    10c8:	add	r3, pc, r3
    10cc:	ldr	r2, [r3, r2]
    10d0:	cmp	r2, #0
    10d4:	bxeq	lr
    10d8:	b	e54 <__gmon_start__@plt>
    10dc:	.word	0x0002bf30
    10e0:	.word	0x000000e4

000010e4 <deregister_tm_clones>:
    10e4:	ldr	r3, [pc, #52]	; 1120 <deregister_tm_clones+0x3c>
    10e8:	ldr	r0, [pc, #52]	; 1124 <deregister_tm_clones+0x40>
    10ec:	add	r3, pc, r3
    10f0:	add	r0, pc, r0
    10f4:	add	r3, r3, #3
    10f8:	sub	r3, r3, r0
    10fc:	cmp	r3, #6
    1100:	ldr	r3, [pc, #32]	; 1128 <deregister_tm_clones+0x44>
    1104:	add	r3, pc, r3
    1108:	bxls	lr
    110c:	ldr	r2, [pc, #24]	; 112c <deregister_tm_clones+0x48>
    1110:	ldr	r3, [r3, r2]
    1114:	cmp	r3, #0
    1118:	bxeq	lr
    111c:	bx	r3
    1120:	.word	0x0002c274
    1124:	.word	0x0002c270
    1128:	.word	0x0002bef4
    112c:	.word	0x000000c4

00001130 <register_tm_clones>:
    1130:	ldr	r1, [pc, #56]	; 1170 <register_tm_clones+0x40>
    1134:	ldr	r0, [pc, #56]	; 1174 <register_tm_clones+0x44>
    1138:	add	r1, pc, r1
    113c:	add	r0, pc, r0
    1140:	sub	r1, r1, r0
    1144:	ldr	r3, [pc, #44]	; 1178 <register_tm_clones+0x48>
    1148:	asr	r1, r1, #2
    114c:	add	r3, pc, r3
    1150:	add	r1, r1, r1, lsr #31
    1154:	asrs	r1, r1, #1
    1158:	bxeq	lr
    115c:	ldr	r2, [pc, #24]	; 117c <register_tm_clones+0x4c>
    1160:	ldr	r3, [r3, r2]
    1164:	cmp	r3, #0
    1168:	bxeq	lr
    116c:	bx	r3
    1170:	.word	0x0002c228
    1174:	.word	0x0002c224
    1178:	.word	0x0002beac
    117c:	.word	0x00000104

00001180 <__do_global_dtors_aux>:
    1180:	ldr	r3, [pc, #76]	; 11d4 <__do_global_dtors_aux+0x54>
    1184:	ldr	r2, [pc, #76]	; 11d8 <__do_global_dtors_aux+0x58>
    1188:	add	r3, pc, r3
    118c:	add	r2, pc, r2
    1190:	ldrb	r3, [r3]
    1194:	cmp	r3, #0
    1198:	bxne	lr
    119c:	ldr	r3, [pc, #56]	; 11dc <__do_global_dtors_aux+0x5c>
    11a0:	push	{r4, lr}
    11a4:	ldr	r3, [r2, r3]
    11a8:	cmp	r3, #0
    11ac:	beq	11bc <__do_global_dtors_aux+0x3c>
    11b0:	ldr	r3, [pc, #40]	; 11e0 <__do_global_dtors_aux+0x60>
    11b4:	ldr	r0, [pc, r3]
    11b8:	bl	d7c <__cxa_finalize@plt>
    11bc:	bl	10e4 <deregister_tm_clones>
    11c0:	ldr	r3, [pc, #28]	; 11e4 <__do_global_dtors_aux+0x64>
    11c4:	mov	r2, #1
    11c8:	add	r3, pc, r3
    11cc:	strb	r2, [r3]
    11d0:	pop	{r4, pc}
    11d4:	.word	0x0002c1d8
    11d8:	.word	0x0002be6c
    11dc:	.word	0x000000c0
    11e0:	.word	0x0002bf54
    11e4:	.word	0x0002c198

000011e8 <frame_dummy>:
    11e8:	ldr	r0, [pc, #56]	; 1228 <frame_dummy+0x40>
    11ec:	ldr	r3, [pc, #56]	; 122c <frame_dummy+0x44>
    11f0:	add	r0, pc, r0
    11f4:	ldr	r2, [r0]
    11f8:	add	r3, pc, r3
    11fc:	cmp	r2, #0
    1200:	bne	1208 <frame_dummy+0x20>
    1204:	b	1130 <register_tm_clones>
    1208:	ldr	r2, [pc, #32]	; 1230 <frame_dummy+0x48>
    120c:	ldr	r3, [r3, r2]
    1210:	cmp	r3, #0
    1214:	beq	1204 <frame_dummy+0x1c>
    1218:	push	{r4, lr}
    121c:	blx	r3
    1220:	pop	{r4, lr}
    1224:	b	1130 <register_tm_clones>
    1228:	.word	0x0002bb6c
    122c:	.word	0x0002be00
    1230:	.word	0x000000fc

00001234 <sfbpf_filter>:
    1234:	cmp	r0, #0
    1238:	beq	16a8 <sfbpf_filter+0x474>
    123c:	push	{r4, r5, r6, r7, r8, lr}
    1240:	mov	r4, #0
    1244:	sub	ip, r0, #8
    1248:	sub	sp, sp, #64	; 0x40
    124c:	mov	r7, r3
    1250:	mov	r5, r2
    1254:	mov	r6, r1
    1258:	mov	r0, r4
    125c:	ldrh	lr, [ip, #8]
    1260:	add	r8, ip, #8
    1264:	cmp	lr, #53	; 0x35
    1268:	beq	1604 <sfbpf_filter+0x3d0>
    126c:	bhi	1380 <sfbpf_filter+0x14c>
    1270:	cmp	lr, #21
    1274:	beq	1618 <sfbpf_filter+0x3e4>
    1278:	bhi	12f8 <sfbpf_filter+0xc4>
    127c:	cmp	lr, #4
    1280:	beq	1678 <sfbpf_filter+0x444>
    1284:	bhi	12b4 <sfbpf_filter+0x80>
    1288:	cmp	lr, #1
    128c:	beq	1598 <sfbpf_filter+0x364>
    1290:	bcc	1590 <sfbpf_filter+0x35c>
    1294:	cmp	lr, #2
    1298:	beq	15b4 <sfbpf_filter+0x380>
    129c:	cmp	lr, #3
    12a0:	beq	15c8 <sfbpf_filter+0x394>
    12a4:	bl	f44 <abort@plt>
    12a8:	mov	r0, r5
    12ac:	mov	ip, r8
    12b0:	b	125c <sfbpf_filter+0x28>
    12b4:	cmp	lr, #7
    12b8:	beq	1698 <sfbpf_filter+0x464>
    12bc:	bhi	12dc <sfbpf_filter+0xa8>
    12c0:	cmp	lr, #5
    12c4:	beq	15dc <sfbpf_filter+0x3a8>
    12c8:	cmp	lr, #6
    12cc:	ldreq	r0, [ip, #12]
    12d0:	bne	12a4 <sfbpf_filter+0x70>
    12d4:	add	sp, sp, #64	; 0x40
    12d8:	pop	{r4, r5, r6, r7, r8, pc}
    12dc:	cmp	lr, #12
    12e0:	beq	1658 <sfbpf_filter+0x424>
    12e4:	cmp	lr, #20
    12e8:	bne	12a4 <sfbpf_filter+0x70>
    12ec:	ldr	r3, [ip, #12]
    12f0:	sub	r0, r0, r3
    12f4:	b	12ac <sfbpf_filter+0x78>
    12f8:	cmp	lr, #37	; 0x25
    12fc:	beq	15e8 <sfbpf_filter+0x3b4>
    1300:	bhi	1344 <sfbpf_filter+0x110>
    1304:	cmp	lr, #29
    1308:	beq	1648 <sfbpf_filter+0x414>
    130c:	bhi	1328 <sfbpf_filter+0xf4>
    1310:	cmp	lr, #22
    1314:	beq	12d4 <sfbpf_filter+0xa0>
    1318:	cmp	lr, #28
    131c:	bne	12a4 <sfbpf_filter+0x70>
    1320:	sub	r0, r0, r4
    1324:	b	12ac <sfbpf_filter+0x78>
    1328:	cmp	lr, #32
    132c:	beq	14c4 <sfbpf_filter+0x290>
    1330:	cmp	lr, #36	; 0x24
    1334:	bne	12a4 <sfbpf_filter+0x70>
    1338:	ldr	r3, [ip, #12]
    133c:	mul	r0, r3, r0
    1340:	b	12ac <sfbpf_filter+0x78>
    1344:	cmp	lr, #45	; 0x2d
    1348:	beq	1638 <sfbpf_filter+0x404>
    134c:	bhi	1368 <sfbpf_filter+0x134>
    1350:	cmp	lr, #40	; 0x28
    1354:	beq	14fc <sfbpf_filter+0x2c8>
    1358:	cmp	lr, #44	; 0x2c
    135c:	bne	12a4 <sfbpf_filter+0x70>
    1360:	mul	r0, r4, r0
    1364:	b	12ac <sfbpf_filter+0x78>
    1368:	cmp	lr, #48	; 0x30
    136c:	beq	151c <sfbpf_filter+0x2e8>
    1370:	cmp	lr, #52	; 0x34
    1374:	bne	12a4 <sfbpf_filter+0x70>
    1378:	ldr	r1, [ip, #12]
    137c:	b	13b8 <sfbpf_filter+0x184>
    1380:	cmp	lr, #92	; 0x5c
    1384:	beq	1660 <sfbpf_filter+0x42c>
    1388:	bhi	141c <sfbpf_filter+0x1e8>
    138c:	cmp	lr, #69	; 0x45
    1390:	beq	1628 <sfbpf_filter+0x3f4>
    1394:	bhi	13dc <sfbpf_filter+0x1a8>
    1398:	cmp	lr, #61	; 0x3d
    139c:	beq	1640 <sfbpf_filter+0x40c>
    13a0:	bhi	13c0 <sfbpf_filter+0x18c>
    13a4:	cmp	lr, #60	; 0x3c
    13a8:	bne	12a4 <sfbpf_filter+0x70>
    13ac:	cmp	r4, #0
    13b0:	beq	157c <sfbpf_filter+0x348>
    13b4:	mov	r1, r4
    13b8:	bl	fafc <__udivsi3>
    13bc:	b	12ac <sfbpf_filter+0x78>
    13c0:	cmp	lr, #64	; 0x40
    13c4:	beq	1530 <sfbpf_filter+0x2fc>
    13c8:	cmp	lr, #68	; 0x44
    13cc:	bne	12a4 <sfbpf_filter+0x70>
    13d0:	ldr	r3, [ip, #12]
    13d4:	orr	r0, r0, r3
    13d8:	b	12ac <sfbpf_filter+0x78>
    13dc:	cmp	lr, #77	; 0x4d
    13e0:	beq	1650 <sfbpf_filter+0x41c>
    13e4:	bhi	1400 <sfbpf_filter+0x1cc>
    13e8:	cmp	lr, #72	; 0x48
    13ec:	beq	1568 <sfbpf_filter+0x334>
    13f0:	cmp	lr, #76	; 0x4c
    13f4:	bne	12a4 <sfbpf_filter+0x70>
    13f8:	orr	r0, r0, r4
    13fc:	b	12ac <sfbpf_filter+0x78>
    1400:	cmp	lr, #80	; 0x50
    1404:	beq	1584 <sfbpf_filter+0x350>
    1408:	cmp	lr, #84	; 0x54
    140c:	bne	12a4 <sfbpf_filter+0x70>
    1410:	ldr	r3, [ip, #12]
    1414:	and	r0, r0, r3
    1418:	b	12ac <sfbpf_filter+0x78>
    141c:	cmp	lr, #124	; 0x7c
    1420:	beq	1670 <sfbpf_filter+0x43c>
    1424:	bhi	1474 <sfbpf_filter+0x240>
    1428:	cmp	lr, #100	; 0x64
    142c:	beq	1684 <sfbpf_filter+0x450>
    1430:	bhi	1458 <sfbpf_filter+0x224>
    1434:	cmp	lr, #96	; 0x60
    1438:	beq	15a0 <sfbpf_filter+0x36c>
    143c:	cmp	lr, #97	; 0x61
    1440:	bne	12a4 <sfbpf_filter+0x70>
    1444:	ldr	r3, [ip, #12]
    1448:	add	r2, sp, #64	; 0x40
    144c:	add	r3, r2, r3, lsl #2
    1450:	ldr	r4, [r3, #-64]	; 0xffffffc0
    1454:	b	12ac <sfbpf_filter+0x78>
    1458:	cmp	lr, #108	; 0x6c
    145c:	beq	1668 <sfbpf_filter+0x434>
    1460:	cmp	lr, #116	; 0x74
    1464:	bne	12a4 <sfbpf_filter+0x70>
    1468:	ldr	r3, [ip, #12]
    146c:	lsr	r0, r0, r3
    1470:	b	12ac <sfbpf_filter+0x78>
    1474:	cmp	lr, #132	; 0x84
    1478:	beq	1690 <sfbpf_filter+0x45c>
    147c:	bhi	1498 <sfbpf_filter+0x264>
    1480:	cmp	lr, #128	; 0x80
    1484:	beq	12a8 <sfbpf_filter+0x74>
    1488:	cmp	lr, #129	; 0x81
    148c:	bne	12a4 <sfbpf_filter+0x70>
    1490:	mov	r4, r5
    1494:	b	12ac <sfbpf_filter+0x78>
    1498:	cmp	lr, #135	; 0x87
    149c:	beq	16a0 <sfbpf_filter+0x46c>
    14a0:	cmp	lr, #177	; 0xb1
    14a4:	bne	12a4 <sfbpf_filter+0x70>
    14a8:	ldr	r3, [ip, #12]
    14ac:	cmp	r7, r3
    14b0:	bls	157c <sfbpf_filter+0x348>
    14b4:	ldrb	r4, [r6, r3]
    14b8:	lsl	r4, r4, #2
    14bc:	and	r4, r4, #60	; 0x3c
    14c0:	b	12ac <sfbpf_filter+0x78>
    14c4:	ldr	r2, [ip, #12]
    14c8:	add	r3, r2, #4
    14cc:	cmp	r7, r3
    14d0:	bcc	157c <sfbpf_filter+0x348>
    14d4:	add	r3, r6, r2
    14d8:	ldrb	r2, [r6, r2]
    14dc:	ldrb	r0, [r3, #1]
    14e0:	lsl	r0, r0, #16
    14e4:	orr	r0, r0, r2, lsl #24
    14e8:	ldrb	r2, [r3, #3]
    14ec:	ldrb	r3, [r3, #2]
    14f0:	orr	r0, r0, r2
    14f4:	orr	r0, r0, r3, lsl #8
    14f8:	b	12ac <sfbpf_filter+0x78>
    14fc:	ldr	r3, [ip, #12]
    1500:	add	r2, r3, #2
    1504:	cmp	r2, r7
    1508:	bhi	157c <sfbpf_filter+0x348>
    150c:	add	r2, r6, r3
    1510:	ldrb	r3, [r6, r3]
    1514:	ldrb	r0, [r2, #1]
    1518:	b	14f4 <sfbpf_filter+0x2c0>
    151c:	ldr	r3, [ip, #12]
    1520:	cmp	r7, r3
    1524:	bls	157c <sfbpf_filter+0x348>
    1528:	ldrb	r0, [r6, r3]
    152c:	b	12ac <sfbpf_filter+0x78>
    1530:	ldr	r3, [ip, #12]
    1534:	add	r3, r4, r3
    1538:	add	r2, r3, #4
    153c:	cmp	r7, r2
    1540:	bcc	157c <sfbpf_filter+0x348>
    1544:	add	r2, r6, r3
    1548:	ldrb	r3, [r6, r3]
    154c:	ldrb	r0, [r2, #1]
    1550:	lsl	r0, r0, #16
    1554:	orr	r0, r0, r3, lsl #24
    1558:	ldrb	r3, [r2, #3]
    155c:	orr	r0, r0, r3
    1560:	ldrb	r3, [r2, #2]
    1564:	b	14f4 <sfbpf_filter+0x2c0>
    1568:	ldr	r3, [ip, #12]
    156c:	add	r3, r4, r3
    1570:	add	r2, r3, #2
    1574:	cmp	r7, r2
    1578:	bcs	150c <sfbpf_filter+0x2d8>
    157c:	mov	r0, #0
    1580:	b	12d4 <sfbpf_filter+0xa0>
    1584:	ldr	r3, [ip, #12]
    1588:	add	r3, r4, r3
    158c:	b	1520 <sfbpf_filter+0x2ec>
    1590:	ldr	r0, [ip, #12]
    1594:	b	12ac <sfbpf_filter+0x78>
    1598:	ldr	r4, [ip, #12]
    159c:	b	12ac <sfbpf_filter+0x78>
    15a0:	ldr	r3, [ip, #12]
    15a4:	add	r2, sp, #64	; 0x40
    15a8:	add	r3, r2, r3, lsl #2
    15ac:	ldr	r0, [r3, #-64]	; 0xffffffc0
    15b0:	b	12ac <sfbpf_filter+0x78>
    15b4:	ldr	r3, [ip, #12]
    15b8:	add	r2, sp, #64	; 0x40
    15bc:	add	r3, r2, r3, lsl #2
    15c0:	str	r0, [r3, #-64]	; 0xffffffc0
    15c4:	b	12ac <sfbpf_filter+0x78>
    15c8:	ldr	r3, [ip, #12]
    15cc:	add	r2, sp, #64	; 0x40
    15d0:	add	r3, r2, r3, lsl #2
    15d4:	str	r4, [r3, #-64]	; 0xffffffc0
    15d8:	b	12ac <sfbpf_filter+0x78>
    15dc:	ldr	r3, [ip, #12]
    15e0:	add	r8, r8, r3, lsl #3
    15e4:	b	12ac <sfbpf_filter+0x78>
    15e8:	ldr	r3, [ip, #12]
    15ec:	cmp	r0, r3
    15f0:	bls	1610 <sfbpf_filter+0x3dc>
    15f4:	ldrb	r3, [ip, #10]
    15f8:	lsl	r3, r3, #3
    15fc:	add	r8, r8, r3
    1600:	b	12ac <sfbpf_filter+0x78>
    1604:	ldr	r3, [ip, #12]
    1608:	cmp	r0, r3
    160c:	bcs	15f4 <sfbpf_filter+0x3c0>
    1610:	ldrb	r3, [ip, #11]
    1614:	b	15f8 <sfbpf_filter+0x3c4>
    1618:	ldr	r3, [ip, #12]
    161c:	cmp	r0, r3
    1620:	bne	1610 <sfbpf_filter+0x3dc>
    1624:	b	15f4 <sfbpf_filter+0x3c0>
    1628:	ldr	r3, [ip, #12]
    162c:	tst	r0, r3
    1630:	beq	1610 <sfbpf_filter+0x3dc>
    1634:	b	15f4 <sfbpf_filter+0x3c0>
    1638:	cmp	r0, r4
    163c:	b	15f0 <sfbpf_filter+0x3bc>
    1640:	cmp	r0, r4
    1644:	b	160c <sfbpf_filter+0x3d8>
    1648:	cmp	r0, r4
    164c:	b	1620 <sfbpf_filter+0x3ec>
    1650:	tst	r0, r4
    1654:	b	1630 <sfbpf_filter+0x3fc>
    1658:	add	r0, r0, r4
    165c:	b	12ac <sfbpf_filter+0x78>
    1660:	and	r0, r0, r4
    1664:	b	12ac <sfbpf_filter+0x78>
    1668:	lsl	r0, r0, r4
    166c:	b	12ac <sfbpf_filter+0x78>
    1670:	lsr	r0, r0, r4
    1674:	b	12ac <sfbpf_filter+0x78>
    1678:	ldr	r3, [ip, #12]
    167c:	add	r0, r0, r3
    1680:	b	12ac <sfbpf_filter+0x78>
    1684:	ldr	r3, [ip, #12]
    1688:	lsl	r0, r0, r3
    168c:	b	12ac <sfbpf_filter+0x78>
    1690:	rsb	r0, r0, #0
    1694:	b	12ac <sfbpf_filter+0x78>
    1698:	mov	r4, r0
    169c:	b	12ac <sfbpf_filter+0x78>
    16a0:	mov	r0, r4
    16a4:	b	12ac <sfbpf_filter+0x78>
    16a8:	mvn	r0, #0
    16ac:	bx	lr

000016b0 <sfbpf_validate>:
    16b0:	cmp	r1, #0
    16b4:	ble	1840 <sfbpf_validate+0x190>
    16b8:	push	{r4, lr}
    16bc:	mov	r2, r0
    16c0:	mov	lr, #0
    16c4:	cmp	lr, r1
    16c8:	bne	16e8 <sfbpf_validate+0x38>
    16cc:	add	r0, r0, lr, lsl #3
    16d0:	ldrh	r0, [r0, #-8]
    16d4:	and	r0, r0, #7
    16d8:	sub	r0, r0, #6
    16dc:	clz	r0, r0
    16e0:	lsr	r0, r0, #5
    16e4:	pop	{r4, pc}
    16e8:	ldrh	r3, [r2]
    16ec:	and	ip, r3, #7
    16f0:	sub	ip, ip, #2
    16f4:	cmp	ip, #5
    16f8:	addls	pc, pc, ip, lsl #2
    16fc:	b	1718 <sfbpf_validate+0x68>
    1700:	b	175c <sfbpf_validate+0xac>
    1704:	b	175c <sfbpf_validate+0xac>
    1708:	b	1770 <sfbpf_validate+0xc0>
    170c:	b	17e0 <sfbpf_validate+0x130>
    1710:	b	1738 <sfbpf_validate+0x88>
    1714:	b	1738 <sfbpf_validate+0x88>
    1718:	and	r3, r3, #224	; 0xe0
    171c:	cmp	r3, #64	; 0x40
    1720:	beq	1738 <sfbpf_validate+0x88>
    1724:	bhi	1744 <sfbpf_validate+0x94>
    1728:	cmp	r3, #0
    172c:	beq	1738 <sfbpf_validate+0x88>
    1730:	cmp	r3, #32
    1734:	bne	1768 <sfbpf_validate+0xb8>
    1738:	add	lr, lr, #1
    173c:	add	r2, r2, #8
    1740:	b	16c4 <sfbpf_validate+0x14>
    1744:	cmp	r3, #128	; 0x80
    1748:	beq	1738 <sfbpf_validate+0x88>
    174c:	cmp	r3, #160	; 0xa0
    1750:	beq	1738 <sfbpf_validate+0x88>
    1754:	cmp	r3, #96	; 0x60
    1758:	bne	1768 <sfbpf_validate+0xb8>
    175c:	ldr	r3, [r2, #4]
    1760:	cmp	r3, #15
    1764:	bls	1738 <sfbpf_validate+0x88>
    1768:	mov	r0, #0
    176c:	pop	{r4, pc}
    1770:	and	ip, r3, #240	; 0xf0
    1774:	cmp	ip, #64	; 0x40
    1778:	beq	1738 <sfbpf_validate+0x88>
    177c:	bhi	17bc <sfbpf_validate+0x10c>
    1780:	cmp	ip, #16
    1784:	beq	1738 <sfbpf_validate+0x88>
    1788:	bhi	1794 <sfbpf_validate+0xe4>
    178c:	cmp	ip, #0
    1790:	b	1734 <sfbpf_validate+0x84>
    1794:	cmp	ip, #32
    1798:	beq	1738 <sfbpf_validate+0x88>
    179c:	cmp	ip, #48	; 0x30
    17a0:	bne	1768 <sfbpf_validate+0xb8>
    17a4:	tst	r3, #24
    17a8:	bne	1738 <sfbpf_validate+0x88>
    17ac:	ldr	r3, [r2, #4]
    17b0:	cmp	r3, #0
    17b4:	bne	1738 <sfbpf_validate+0x88>
    17b8:	b	1768 <sfbpf_validate+0xb8>
    17bc:	cmp	ip, #96	; 0x60
    17c0:	beq	1738 <sfbpf_validate+0x88>
    17c4:	bhi	17d0 <sfbpf_validate+0x120>
    17c8:	cmp	ip, #80	; 0x50
    17cc:	b	1734 <sfbpf_validate+0x84>
    17d0:	cmp	ip, #112	; 0x70
    17d4:	beq	1738 <sfbpf_validate+0x88>
    17d8:	cmp	ip, #128	; 0x80
    17dc:	b	1734 <sfbpf_validate+0x84>
    17e0:	and	r3, r3, #240	; 0xf0
    17e4:	cmp	r3, #32
    17e8:	add	ip, lr, #1
    17ec:	beq	180c <sfbpf_validate+0x15c>
    17f0:	bhi	1830 <sfbpf_validate+0x180>
    17f4:	cmp	r3, #0
    17f8:	ldreq	r4, [r2, #4]
    17fc:	addeq	ip, ip, r4
    1800:	beq	1824 <sfbpf_validate+0x174>
    1804:	cmp	r3, #16
    1808:	bne	1768 <sfbpf_validate+0xb8>
    180c:	ldrb	r3, [r2, #2]
    1810:	add	r3, r3, ip
    1814:	cmp	r3, r1
    1818:	bcs	1768 <sfbpf_validate+0xb8>
    181c:	ldrb	r3, [r2, #3]
    1820:	add	ip, r3, ip
    1824:	cmp	ip, r1
    1828:	bcc	1738 <sfbpf_validate+0x88>
    182c:	b	1768 <sfbpf_validate+0xb8>
    1830:	cmp	r3, #48	; 0x30
    1834:	beq	180c <sfbpf_validate+0x15c>
    1838:	cmp	r3, #64	; 0x40
    183c:	b	1808 <sfbpf_validate+0x158>
    1840:	mov	r0, #0
    1844:	bx	lr

00001848 <get_code_name>:
    1848:	mov	r3, r0
    184c:	ldr	r0, [r3, #4]
    1850:	cmp	r0, #0
    1854:	bne	185c <get_code_name+0x14>
    1858:	bx	lr
    185c:	ldr	r2, [r3], #8
    1860:	cmp	r2, r1
    1864:	bne	184c <get_code_name+0x4>
    1868:	bx	lr

0000186c <sfbpf_print>:
    186c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1870:	mov	sl, r0
    1874:	ldr	r0, [pc, #1608]	; 1ec4 <sfbpf_print+0x658>
    1878:	sub	sp, sp, #20
    187c:	add	r0, pc, r0
    1880:	mov	fp, r1
    1884:	bl	e3c <puts@plt>
    1888:	ldr	r3, [pc, #1592]	; 1ec8 <sfbpf_print+0x65c>
    188c:	ldr	r8, [pc, #1592]	; 1ecc <sfbpf_print+0x660>
    1890:	ldr	r9, [pc, #1592]	; 1ed0 <sfbpf_print+0x664>
    1894:	add	r3, pc, r3
    1898:	str	r3, [sp, #4]
    189c:	add	r8, pc, r8
    18a0:	ldr	r3, [pc, #1580]	; 1ed4 <sfbpf_print+0x668>
    18a4:	add	r9, pc, r9
    18a8:	mov	r5, #0
    18ac:	add	r8, r8, #344	; 0x158
    18b0:	add	r9, r9, #312	; 0x138
    18b4:	add	r3, pc, r3
    18b8:	str	r3, [sp, #8]
    18bc:	ldr	r3, [sl]
    18c0:	cmp	r5, r3
    18c4:	bcc	18d0 <sfbpf_print+0x64>
    18c8:	add	sp, sp, #20
    18cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    18d0:	ldr	r7, [sl, #4]
    18d4:	lsl	r6, r5, #3
    18d8:	mov	r1, r5
    18dc:	ldr	r0, [sp, #4]
    18e0:	bl	d88 <printf@plt>
    18e4:	cmp	fp, #0
    18e8:	add	r4, r7, r6
    18ec:	ldrh	r1, [r7, r6]
    18f0:	add	r5, r5, #1
    18f4:	beq	1a64 <sfbpf_print+0x1f8>
    18f8:	ldr	r0, [pc, #1496]	; 1ed8 <sfbpf_print+0x66c>
    18fc:	and	r1, r1, #7
    1900:	add	r0, pc, r0
    1904:	bl	1848 <get_code_name>
    1908:	mov	r1, r0
    190c:	ldr	r0, [pc, #1480]	; 1edc <sfbpf_print+0x670>
    1910:	add	r0, pc, r0
    1914:	bl	d88 <printf@plt>
    1918:	ldrh	r6, [r7, r6]
    191c:	and	r3, r6, #7
    1920:	cmp	r3, #7
    1924:	addls	pc, pc, r3, lsl #2
    1928:	b	198c <sfbpf_print+0x120>
    192c:	b	194c <sfbpf_print+0xe0>
    1930:	b	194c <sfbpf_print+0xe0>
    1934:	b	198c <sfbpf_print+0x120>
    1938:	b	198c <sfbpf_print+0x120>
    193c:	b	19a8 <sfbpf_print+0x13c>
    1940:	b	19e8 <sfbpf_print+0x17c>
    1944:	b	1a28 <sfbpf_print+0x1bc>
    1948:	b	1a48 <sfbpf_print+0x1dc>
    194c:	ldr	r3, [pc, #1420]	; 1ee0 <sfbpf_print+0x674>
    1950:	and	r1, r6, #24
    1954:	add	r3, pc, r3
    1958:	add	r0, r3, #72	; 0x48
    195c:	str	r3, [sp, #12]
    1960:	bl	1848 <get_code_name>
    1964:	ldr	r3, [sp, #12]
    1968:	and	r1, r6, #224	; 0xe0
    196c:	mov	r7, r0
    1970:	add	r0, r3, #104	; 0x68
    1974:	bl	1848 <get_code_name>
    1978:	mov	r1, r7
    197c:	mov	r2, r0
    1980:	ldr	r0, [pc, #1372]	; 1ee4 <sfbpf_print+0x678>
    1984:	add	r0, pc, r0
    1988:	bl	d88 <printf@plt>
    198c:	ldr	r0, [pc, #1364]	; 1ee8 <sfbpf_print+0x67c>
    1990:	ldr	r3, [r4, #4]
    1994:	ldrb	r2, [r4, #3]
    1998:	ldrb	r1, [r4, #2]
    199c:	add	r0, pc, r0
    19a0:	bl	d88 <printf@plt>
    19a4:	b	18bc <sfbpf_print+0x50>
    19a8:	ldr	r3, [pc, #1340]	; 1eec <sfbpf_print+0x680>
    19ac:	and	r1, r6, #240	; 0xf0
    19b0:	add	r3, pc, r3
    19b4:	add	r0, r3, #160	; 0xa0
    19b8:	str	r3, [sp, #12]
    19bc:	bl	1848 <get_code_name>
    19c0:	ldr	r3, [sp, #12]
    19c4:	and	r1, r6, #8
    19c8:	mov	r7, r0
    19cc:	add	r0, r3, #240	; 0xf0
    19d0:	bl	1848 <get_code_name>
    19d4:	mov	r1, r7
    19d8:	mov	r2, r0
    19dc:	ldr	r0, [pc, #1292]	; 1ef0 <sfbpf_print+0x684>
    19e0:	add	r0, pc, r0
    19e4:	b	1988 <sfbpf_print+0x11c>
    19e8:	ldr	r3, [pc, #1284]	; 1ef4 <sfbpf_print+0x688>
    19ec:	and	r1, r6, #240	; 0xf0
    19f0:	add	r3, pc, r3
    19f4:	add	r0, r3, #264	; 0x108
    19f8:	str	r3, [sp, #12]
    19fc:	bl	1848 <get_code_name>
    1a00:	ldr	r3, [sp, #12]
    1a04:	and	r1, r6, #8
    1a08:	mov	r7, r0
    1a0c:	add	r0, r3, #240	; 0xf0
    1a10:	bl	1848 <get_code_name>
    1a14:	mov	r1, r7
    1a18:	mov	r2, r0
    1a1c:	ldr	r0, [pc, #1236]	; 1ef8 <sfbpf_print+0x68c>
    1a20:	add	r0, pc, r0
    1a24:	b	1988 <sfbpf_print+0x11c>
    1a28:	and	r1, r6, #24
    1a2c:	mov	r0, r9
    1a30:	bl	1848 <get_code_name>
    1a34:	mov	r1, r0
    1a38:	ldr	r0, [pc, #1212]	; 1efc <sfbpf_print+0x690>
    1a3c:	add	r0, pc, r0
    1a40:	bl	d88 <printf@plt>
    1a44:	b	198c <sfbpf_print+0x120>
    1a48:	and	r1, r6, #248	; 0xf8
    1a4c:	mov	r0, r8
    1a50:	bl	1848 <get_code_name>
    1a54:	mov	r1, r0
    1a58:	ldr	r0, [pc, #1184]	; 1f00 <sfbpf_print+0x694>
    1a5c:	add	r0, pc, r0
    1a60:	b	1a40 <sfbpf_print+0x1d4>
    1a64:	and	r3, r1, #7
    1a68:	sub	r3, r3, #1
    1a6c:	cmp	r3, #6
    1a70:	addls	pc, pc, r3, lsl #2
    1a74:	b	1a94 <sfbpf_print+0x228>
    1a78:	b	1b80 <sfbpf_print+0x314>
    1a7c:	b	1bf4 <sfbpf_print+0x388>
    1a80:	b	1c08 <sfbpf_print+0x39c>
    1a84:	b	1c18 <sfbpf_print+0x3ac>
    1a88:	b	1d30 <sfbpf_print+0x4c4>
    1a8c:	b	1e18 <sfbpf_print+0x5ac>
    1a90:	b	1e84 <sfbpf_print+0x618>
    1a94:	ldr	r0, [pc, #1128]	; 1f04 <sfbpf_print+0x698>
    1a98:	add	r0, pc, r0
    1a9c:	bl	d88 <printf@plt>
    1aa0:	ldrh	r2, [r7, r6]
    1aa4:	and	r3, r2, #224	; 0xe0
    1aa8:	cmp	r3, #64	; 0x40
    1aac:	beq	1b2c <sfbpf_print+0x2c0>
    1ab0:	bhi	1ad0 <sfbpf_print+0x264>
    1ab4:	cmp	r3, #0
    1ab8:	beq	1b5c <sfbpf_print+0x2f0>
    1abc:	cmp	r3, #32
    1ac0:	beq	1af0 <sfbpf_print+0x284>
    1ac4:	ldr	r0, [pc, #1084]	; 1f08 <sfbpf_print+0x69c>
    1ac8:	add	r0, pc, r0
    1acc:	b	1ae8 <sfbpf_print+0x27c>
    1ad0:	cmp	r3, #96	; 0x60
    1ad4:	beq	1b70 <sfbpf_print+0x304>
    1ad8:	cmp	r3, #128	; 0x80
    1adc:	bne	1ac4 <sfbpf_print+0x258>
    1ae0:	ldr	r0, [pc, #1060]	; 1f0c <sfbpf_print+0x6a0>
    1ae4:	add	r0, pc, r0
    1ae8:	bl	d88 <printf@plt>
    1aec:	b	1b20 <sfbpf_print+0x2b4>
    1af0:	ands	r2, r2, #24
    1af4:	ldr	r1, [r4, #4]
    1af8:	moveq	r2, #4
    1afc:	beq	1b14 <sfbpf_print+0x2a8>
    1b00:	cmp	r2, #8
    1b04:	subne	r2, r2, #16
    1b08:	moveq	r2, #2
    1b0c:	clzne	r2, r2
    1b10:	lsrne	r2, r2, #5
    1b14:	ldr	r0, [pc, #1012]	; 1f10 <sfbpf_print+0x6a4>
    1b18:	add	r0, pc, r0
    1b1c:	bl	d88 <printf@plt>
    1b20:	mov	r0, #10
    1b24:	bl	ec0 <putchar@plt>
    1b28:	b	18bc <sfbpf_print+0x50>
    1b2c:	ands	r2, r2, #24
    1b30:	ldr	r1, [r4, #4]
    1b34:	moveq	r2, #4
    1b38:	beq	1b50 <sfbpf_print+0x2e4>
    1b3c:	cmp	r2, #8
    1b40:	subne	r2, r2, #16
    1b44:	moveq	r2, #2
    1b48:	clzne	r2, r2
    1b4c:	lsrne	r2, r2, #5
    1b50:	ldr	r0, [pc, #956]	; 1f14 <sfbpf_print+0x6a8>
    1b54:	add	r0, pc, r0
    1b58:	b	1b1c <sfbpf_print+0x2b0>
    1b5c:	ldr	r0, [pc, #948]	; 1f18 <sfbpf_print+0x6ac>
    1b60:	ldr	r1, [r4, #4]
    1b64:	add	r0, pc, r0
    1b68:	bl	d88 <printf@plt>
    1b6c:	b	1b20 <sfbpf_print+0x2b4>
    1b70:	ldr	r0, [pc, #932]	; 1f1c <sfbpf_print+0x6b0>
    1b74:	ldr	r1, [r4, #4]
    1b78:	add	r0, pc, r0
    1b7c:	b	1b68 <sfbpf_print+0x2fc>
    1b80:	ldr	r0, [pc, #920]	; 1f20 <sfbpf_print+0x6b4>
    1b84:	add	r0, pc, r0
    1b88:	bl	d88 <printf@plt>
    1b8c:	ldrh	r3, [r7, r6]
    1b90:	and	r3, r3, #224	; 0xe0
    1b94:	cmp	r3, #96	; 0x60
    1b98:	beq	1be4 <sfbpf_print+0x378>
    1b9c:	bhi	1bb8 <sfbpf_print+0x34c>
    1ba0:	cmp	r3, #0
    1ba4:	bne	1b20 <sfbpf_print+0x2b4>
    1ba8:	ldr	r0, [pc, #884]	; 1f24 <sfbpf_print+0x6b8>
    1bac:	ldr	r1, [r4, #4]
    1bb0:	add	r0, pc, r0
    1bb4:	b	1b68 <sfbpf_print+0x2fc>
    1bb8:	cmp	r3, #128	; 0x80
    1bbc:	beq	1bd8 <sfbpf_print+0x36c>
    1bc0:	cmp	r3, #160	; 0xa0
    1bc4:	bne	1b20 <sfbpf_print+0x2b4>
    1bc8:	ldr	r0, [pc, #856]	; 1f28 <sfbpf_print+0x6bc>
    1bcc:	ldr	r1, [r4, #4]
    1bd0:	add	r0, pc, r0
    1bd4:	b	1b68 <sfbpf_print+0x2fc>
    1bd8:	ldr	r0, [pc, #844]	; 1f2c <sfbpf_print+0x6c0>
    1bdc:	add	r0, pc, r0
    1be0:	b	1ae8 <sfbpf_print+0x27c>
    1be4:	ldr	r0, [pc, #836]	; 1f30 <sfbpf_print+0x6c4>
    1be8:	ldr	r1, [r4, #4]
    1bec:	add	r0, pc, r0
    1bf0:	b	1b68 <sfbpf_print+0x2fc>
    1bf4:	ldr	r0, [pc, #824]	; 1f34 <sfbpf_print+0x6c8>
    1bf8:	ldr	r1, [r4, #4]
    1bfc:	add	r0, pc, r0
    1c00:	bl	d88 <printf@plt>
    1c04:	b	18bc <sfbpf_print+0x50>
    1c08:	ldr	r0, [pc, #808]	; 1f38 <sfbpf_print+0x6cc>
    1c0c:	ldr	r1, [r4, #4]
    1c10:	add	r0, pc, r0
    1c14:	b	1c00 <sfbpf_print+0x394>
    1c18:	and	r1, r1, #240	; 0xf0
    1c1c:	cmp	r1, #64	; 0x40
    1c20:	beq	1ce4 <sfbpf_print+0x478>
    1c24:	bhi	1c64 <sfbpf_print+0x3f8>
    1c28:	cmp	r1, #16
    1c2c:	beq	1ca4 <sfbpf_print+0x438>
    1c30:	bhi	1c48 <sfbpf_print+0x3dc>
    1c34:	cmp	r1, #0
    1c38:	beq	1d08 <sfbpf_print+0x49c>
    1c3c:	ldr	r1, [pc, #760]	; 1f3c <sfbpf_print+0x6d0>
    1c40:	add	r1, pc, r1
    1c44:	b	1cac <sfbpf_print+0x440>
    1c48:	cmp	r1, #32
    1c4c:	beq	1cd8 <sfbpf_print+0x46c>
    1c50:	cmp	r1, #48	; 0x30
    1c54:	bne	1c3c <sfbpf_print+0x3d0>
    1c58:	ldr	r1, [pc, #736]	; 1f40 <sfbpf_print+0x6d4>
    1c5c:	add	r1, pc, r1
    1c60:	b	1cac <sfbpf_print+0x440>
    1c64:	cmp	r1, #96	; 0x60
    1c68:	beq	1cf0 <sfbpf_print+0x484>
    1c6c:	bhi	1c84 <sfbpf_print+0x418>
    1c70:	cmp	r1, #80	; 0x50
    1c74:	bne	1c3c <sfbpf_print+0x3d0>
    1c78:	ldr	r1, [pc, #708]	; 1f44 <sfbpf_print+0x6d8>
    1c7c:	add	r1, pc, r1
    1c80:	b	1cac <sfbpf_print+0x440>
    1c84:	cmp	r1, #112	; 0x70
    1c88:	beq	1cfc <sfbpf_print+0x490>
    1c8c:	cmp	r1, #128	; 0x80
    1c90:	bne	1c3c <sfbpf_print+0x3d0>
    1c94:	ldr	r0, [pc, #684]	; 1f48 <sfbpf_print+0x6dc>
    1c98:	add	r0, pc, r0
    1c9c:	bl	e3c <puts@plt>
    1ca0:	b	18bc <sfbpf_print+0x50>
    1ca4:	ldr	r1, [pc, #672]	; 1f4c <sfbpf_print+0x6e0>
    1ca8:	add	r1, pc, r1
    1cac:	ldr	r0, [pc, #668]	; 1f50 <sfbpf_print+0x6e4>
    1cb0:	add	r0, pc, r0
    1cb4:	bl	d88 <printf@plt>
    1cb8:	ldrh	r3, [r7, r6]
    1cbc:	ands	r3, r3, #8
    1cc0:	beq	1d14 <sfbpf_print+0x4a8>
    1cc4:	cmp	r3, #8
    1cc8:	beq	1d24 <sfbpf_print+0x4b8>
    1ccc:	ldr	r0, [pc, #640]	; 1f54 <sfbpf_print+0x6e8>
    1cd0:	add	r0, pc, r0
    1cd4:	b	1ae8 <sfbpf_print+0x27c>
    1cd8:	ldr	r1, [pc, #632]	; 1f58 <sfbpf_print+0x6ec>
    1cdc:	add	r1, pc, r1
    1ce0:	b	1cac <sfbpf_print+0x440>
    1ce4:	ldr	r1, [pc, #624]	; 1f5c <sfbpf_print+0x6f0>
    1ce8:	add	r1, pc, r1
    1cec:	b	1cac <sfbpf_print+0x440>
    1cf0:	ldr	r1, [pc, #616]	; 1f60 <sfbpf_print+0x6f4>
    1cf4:	add	r1, pc, r1
    1cf8:	b	1cac <sfbpf_print+0x440>
    1cfc:	ldr	r1, [pc, #608]	; 1f64 <sfbpf_print+0x6f8>
    1d00:	add	r1, pc, r1
    1d04:	b	1cac <sfbpf_print+0x440>
    1d08:	ldr	r1, [pc, #600]	; 1f68 <sfbpf_print+0x6fc>
    1d0c:	add	r1, pc, r1
    1d10:	b	1cac <sfbpf_print+0x440>
    1d14:	ldr	r0, [pc, #592]	; 1f6c <sfbpf_print+0x700>
    1d18:	ldr	r1, [r4, #4]
    1d1c:	add	r0, pc, r0
    1d20:	b	1b68 <sfbpf_print+0x2fc>
    1d24:	mov	r0, #88	; 0x58
    1d28:	bl	ec0 <putchar@plt>
    1d2c:	b	1b20 <sfbpf_print+0x2b4>
    1d30:	and	r1, r1, #240	; 0xf0
    1d34:	cmp	r1, #32
    1d38:	beq	1d78 <sfbpf_print+0x50c>
    1d3c:	bhi	1d5c <sfbpf_print+0x4f0>
    1d40:	cmp	r1, #0
    1d44:	beq	1db0 <sfbpf_print+0x544>
    1d48:	cmp	r1, #16
    1d4c:	beq	1dd0 <sfbpf_print+0x564>
    1d50:	ldr	r1, [pc, #536]	; 1f70 <sfbpf_print+0x704>
    1d54:	add	r1, pc, r1
    1d58:	b	1d80 <sfbpf_print+0x514>
    1d5c:	cmp	r1, #48	; 0x30
    1d60:	beq	1dc4 <sfbpf_print+0x558>
    1d64:	cmp	r1, #64	; 0x40
    1d68:	bne	1d50 <sfbpf_print+0x4e4>
    1d6c:	ldr	r1, [pc, #512]	; 1f74 <sfbpf_print+0x708>
    1d70:	add	r1, pc, r1
    1d74:	b	1d80 <sfbpf_print+0x514>
    1d78:	ldr	r1, [pc, #504]	; 1f78 <sfbpf_print+0x70c>
    1d7c:	add	r1, pc, r1
    1d80:	ldr	r0, [pc, #500]	; 1f7c <sfbpf_print+0x710>
    1d84:	add	r0, pc, r0
    1d88:	bl	d88 <printf@plt>
    1d8c:	ldrh	r3, [r7, r6]
    1d90:	ands	r3, r3, #8
    1d94:	beq	1ddc <sfbpf_print+0x570>
    1d98:	cmp	r3, #8
    1d9c:	beq	1e0c <sfbpf_print+0x5a0>
    1da0:	ldr	r0, [pc, #472]	; 1f80 <sfbpf_print+0x714>
    1da4:	add	r0, pc, r0
    1da8:	bl	d88 <printf@plt>
    1dac:	b	1dec <sfbpf_print+0x580>
    1db0:	ldr	r1, [r4, #4]
    1db4:	ldr	r0, [pc, #456]	; 1f84 <sfbpf_print+0x718>
    1db8:	add	r1, r5, r1
    1dbc:	add	r0, pc, r0
    1dc0:	b	1c00 <sfbpf_print+0x394>
    1dc4:	ldr	r1, [pc, #444]	; 1f88 <sfbpf_print+0x71c>
    1dc8:	add	r1, pc, r1
    1dcc:	b	1d80 <sfbpf_print+0x514>
    1dd0:	ldr	r1, [pc, #436]	; 1f8c <sfbpf_print+0x720>
    1dd4:	add	r1, pc, r1
    1dd8:	b	1d80 <sfbpf_print+0x514>
    1ddc:	ldr	r0, [pc, #428]	; 1f90 <sfbpf_print+0x724>
    1de0:	ldr	r1, [r4, #4]
    1de4:	add	r0, pc, r0
    1de8:	bl	d88 <printf@plt>
    1dec:	ldrb	r2, [r4, #3]
    1df0:	ldrb	r1, [r4, #2]
    1df4:	ldr	r0, [pc, #408]	; 1f94 <sfbpf_print+0x728>
    1df8:	add	r2, r2, r5
    1dfc:	add	r1, r1, r5
    1e00:	add	r0, pc, r0
    1e04:	bl	d88 <printf@plt>
    1e08:	b	18bc <sfbpf_print+0x50>
    1e0c:	mov	r0, #88	; 0x58
    1e10:	bl	ec0 <putchar@plt>
    1e14:	b	1dec <sfbpf_print+0x580>
    1e18:	ldr	r0, [pc, #376]	; 1f98 <sfbpf_print+0x72c>
    1e1c:	add	r0, pc, r0
    1e20:	bl	d88 <printf@plt>
    1e24:	ldrh	r3, [r7, r6]
    1e28:	and	r3, r3, #24
    1e2c:	cmp	r3, #8
    1e30:	beq	1e60 <sfbpf_print+0x5f4>
    1e34:	cmp	r3, #16
    1e38:	beq	1e6c <sfbpf_print+0x600>
    1e3c:	cmp	r3, #0
    1e40:	bne	1e74 <sfbpf_print+0x608>
    1e44:	ldr	r0, [pc, #336]	; 1f9c <sfbpf_print+0x730>
    1e48:	ldr	r1, [r4, #4]
    1e4c:	add	r0, pc, r0
    1e50:	bl	d88 <printf@plt>
    1e54:	ldr	r0, [pc, #324]	; 1fa0 <sfbpf_print+0x734>
    1e58:	add	r0, pc, r0
    1e5c:	b	1c9c <sfbpf_print+0x430>
    1e60:	mov	r0, #88	; 0x58
    1e64:	bl	ec0 <putchar@plt>
    1e68:	b	1e54 <sfbpf_print+0x5e8>
    1e6c:	mov	r0, #65	; 0x41
    1e70:	b	1e64 <sfbpf_print+0x5f8>
    1e74:	ldr	r0, [pc, #296]	; 1fa4 <sfbpf_print+0x738>
    1e78:	add	r0, pc, r0
    1e7c:	bl	d88 <printf@plt>
    1e80:	b	1e54 <sfbpf_print+0x5e8>
    1e84:	ldr	r0, [sp, #8]
    1e88:	bl	d88 <printf@plt>
    1e8c:	ldrh	r3, [r7, r6]
    1e90:	ands	r3, r3, #248	; 0xf8
    1e94:	beq	1eac <sfbpf_print+0x640>
    1e98:	cmp	r3, #128	; 0x80
    1e9c:	beq	1eb8 <sfbpf_print+0x64c>
    1ea0:	ldr	r0, [pc, #256]	; 1fa8 <sfbpf_print+0x73c>
    1ea4:	add	r0, pc, r0
    1ea8:	b	1ae8 <sfbpf_print+0x27c>
    1eac:	ldr	r0, [pc, #248]	; 1fac <sfbpf_print+0x740>
    1eb0:	add	r0, pc, r0
    1eb4:	b	1ae8 <sfbpf_print+0x27c>
    1eb8:	ldr	r0, [pc, #240]	; 1fb0 <sfbpf_print+0x744>
    1ebc:	add	r0, pc, r0
    1ec0:	b	1ae8 <sfbpf_print+0x27c>
    1ec4:	.word	0x0000e4b8
    1ec8:	.word	0x0000e4ae
    1ecc:	.word	0x0002b870
    1ed0:	.word	0x0002b868
    1ed4:	.word	0x0000e591
    1ed8:	.word	0x0002b80c
    1edc:	.word	0x0000e50e
    1ee0:	.word	0x0002b7b8
    1ee4:	.word	0x0000e3c4
    1ee8:	.word	0x0000e3db
    1eec:	.word	0x0002b75c
    1ef0:	.word	0x0000e379
    1ef4:	.word	0x0002b71c
    1ef8:	.word	0x0000e339
    1efc:	.word	0x0000e32b
    1f00:	.word	0x0000e314
    1f04:	.word	0x0000e2f5
    1f08:	.word	0x0000e262
    1f0c:	.word	0x0000e2c8
    1f10:	.word	0x0000e280
    1f14:	.word	0x0000e24d
    1f18:	.word	0x0000e44a
    1f1c:	.word	0x0000e238
    1f20:	.word	0x0000e232
    1f24:	.word	0x0000e3fe
    1f28:	.word	0x0000e1f1
    1f2c:	.word	0x0000e1d0
    1f30:	.word	0x0000e1c4
    1f34:	.word	0x0000e1d5
    1f38:	.word	0x0000e1d2
    1f3c:	.word	0x0000e0ea
    1f40:	.word	0x0000e0c2
    1f44:	.word	0x0000e0a6
    1f48:	.word	0x0000e15b
    1f4c:	.word	0x0000e072
    1f50:	.word	0x0000e14b
    1f54:	.word	0x0000e05a
    1f58:	.word	0x0000e040
    1f5c:	.word	0x0000e038
    1f60:	.word	0x0000e030
    1f64:	.word	0x0000e027
    1f68:	.word	0x0000e00c
    1f6c:	.word	0x0000e292
    1f70:	.word	0x0000dfd6
    1f74:	.word	0x0000dfb2
    1f78:	.word	0x0000dfac
    1f7c:	.word	0x0000e092
    1f80:	.word	0x0000df86
    1f84:	.word	0x0000e050
    1f88:	.word	0x0000df69
    1f8c:	.word	0x0000df5a
    1f90:	.word	0x0000e1ca
    1f94:	.word	0x0000e022
    1f98:	.word	0x0000e015
    1f9c:	.word	0x0000e162
    1fa0:	.word	0x0000dfe6
    1fa4:	.word	0x0000deb2
    1fa8:	.word	0x0000de86
    1fac:	.word	0x0000df9b
    1fb0:	.word	0x0000df96

00001fb4 <backpatch>:
    1fb4:	cmp	r0, #0
    1fb8:	bne	1fc0 <backpatch+0xc>
    1fbc:	bx	lr
    1fc0:	ldr	r3, [r0, #44]	; 0x2c
    1fc4:	cmp	r3, #0
    1fc8:	ldreq	r3, [r0, #60]	; 0x3c
    1fcc:	ldrne	r3, [r0, #84]	; 0x54
    1fd0:	streq	r1, [r0, #60]	; 0x3c
    1fd4:	strne	r1, [r0, #84]	; 0x54
    1fd8:	mov	r0, r3
    1fdc:	b	1fb4 <backpatch>

00001fe0 <ethertype_to_ppptype>:
    1fe0:	cmp	r0, #1536	; 0x600
    1fe4:	beq	2050 <ethertype_to_ppptype+0x70>
    1fe8:	bgt	2008 <ethertype_to_ppptype+0x28>
    1fec:	cmp	r0, #224	; 0xe0
    1ff0:	beq	2060 <ethertype_to_ppptype+0x80>
    1ff4:	cmp	r0, #254	; 0xfe
    1ff8:	beq	2058 <ethertype_to_ppptype+0x78>
    1ffc:	cmp	r0, #66	; 0x42
    2000:	moveq	r0, #49	; 0x31
    2004:	bx	lr
    2008:	ldr	r3, [pc, #88]	; 2068 <ethertype_to_ppptype+0x88>
    200c:	cmp	r0, r3
    2010:	beq	2040 <ethertype_to_ppptype+0x60>
    2014:	bgt	2024 <ethertype_to_ppptype+0x44>
    2018:	cmp	r0, #2048	; 0x800
    201c:	moveq	r0, #33	; 0x21
    2020:	bx	lr
    2024:	ldr	r3, [pc, #64]	; 206c <ethertype_to_ppptype+0x8c>
    2028:	cmp	r0, r3
    202c:	beq	2048 <ethertype_to_ppptype+0x68>
    2030:	ldr	r3, [pc, #56]	; 2070 <ethertype_to_ppptype+0x90>
    2034:	cmp	r0, r3
    2038:	moveq	r0, #87	; 0x57
    203c:	bx	lr
    2040:	mov	r0, #39	; 0x27
    2044:	bx	lr
    2048:	mov	r0, #41	; 0x29
    204c:	bx	lr
    2050:	mov	r0, #37	; 0x25
    2054:	bx	lr
    2058:	mov	r0, #35	; 0x23
    205c:	bx	lr
    2060:	mov	r0, #43	; 0x2b
    2064:	bx	lr
    2068:	.word	0x00006003
    206c:	.word	0x0000809b
    2070:	.word	0x000086dd

00002074 <freechunks>:
    2074:	push	{r4, r5, r6, lr}
    2078:	mov	r3, #0
    207c:	ldr	r4, [pc, #48]	; 20b4 <freechunks+0x40>
    2080:	mov	r6, #16
    2084:	add	r4, pc, r4
    2088:	mov	r5, r3
    208c:	str	r3, [r4], #4
    2090:	ldr	r0, [r4, #4]
    2094:	cmp	r0, #0
    2098:	beq	20a4 <freechunks+0x30>
    209c:	bl	dc4 <free@plt>
    20a0:	str	r5, [r4, #4]
    20a4:	subs	r6, r6, #1
    20a8:	add	r4, r4, #8
    20ac:	bne	2090 <freechunks+0x1c>
    20b0:	pop	{r4, r5, r6, pc}
    20b4:	.word	0x0002b2e4

000020b8 <sf_bpf_error>:
    20b8:	ldr	r4, [pc, #44]	; 20ec <sf_bpf_error+0x34>
    20bc:	push	{r0, r1, r2, r3}
    20c0:	add	r4, pc, r4
    20c4:	push	{r0, r1, r2, lr}
    20c8:	mov	r1, #256	; 0x100
    20cc:	add	r3, sp, #20
    20d0:	ldr	r2, [sp, #16]
    20d4:	add	r0, r4, #132	; 0x84
    20d8:	str	r3, [sp, #4]
    20dc:	bl	efc <vsnprintf@plt>
    20e0:	mov	r1, #1
    20e4:	add	r0, r4, #392	; 0x188
    20e8:	bl	dac <longjmp@plt>
    20ec:	.word	0x0002b2a8

000020f0 <newchunk>:
    20f0:	ldr	r2, [pc, #156]	; 2194 <newchunk+0xa4>
    20f4:	push	{r4, r5, r6, r7, r8, lr}
    20f8:	add	r2, pc, r2
    20fc:	mov	r4, r2
    2100:	add	r0, r0, #3
    2104:	ldr	r5, [r4], #4
    2108:	bic	r6, r0, #3
    210c:	lsl	r3, r5, #3
    2110:	add	r4, r4, r3
    2114:	add	r3, r2, r3
    2118:	ldr	r3, [r3, #4]
    211c:	cmp	r6, r3
    2120:	bls	217c <newchunk+0x8c>
    2124:	add	r3, r5, #1
    2128:	cmp	r3, #15
    212c:	add	r7, r4, #8
    2130:	str	r3, [r2]
    2134:	ble	2144 <newchunk+0x54>
    2138:	ldr	r0, [pc, #88]	; 2198 <newchunk+0xa8>
    213c:	add	r0, pc, r0
    2140:	bl	20b8 <sf_bpf_error>
    2144:	mov	r5, #1024	; 0x400
    2148:	lsl	r5, r5, r3
    214c:	mov	r0, r5
    2150:	bl	e48 <malloc@plt>
    2154:	cmp	r0, #0
    2158:	str	r0, [r4, #12]
    215c:	beq	2138 <newchunk+0x48>
    2160:	mov	r2, r5
    2164:	mov	r1, #0
    2168:	bl	eb4 <memset@plt>
    216c:	cmp	r6, r5
    2170:	str	r5, [r4, #8]
    2174:	bhi	2138 <newchunk+0x48>
    2178:	mov	r4, r7
    217c:	ldr	r0, [r4]
    2180:	sub	r6, r0, r6
    2184:	ldr	r0, [r4, #4]
    2188:	str	r6, [r4]
    218c:	add	r0, r0, r6
    2190:	pop	{r4, r5, r6, r7, r8, pc}
    2194:	.word	0x0002b270
    2198:	.word	0x0000dda6

0000219c <new_block>:
    219c:	push	{r4, lr}
    21a0:	mov	r4, r0
    21a4:	mov	r0, #208	; 0xd0
    21a8:	bl	20f0 <newchunk>
    21ac:	mov	r3, r0
    21b0:	str	r4, [r0, #8]
    21b4:	str	r0, [r3, #96]	; 0x60
    21b8:	pop	{r4, pc}

000021bc <new_stmt>:
    21bc:	push	{r4, lr}
    21c0:	mov	r4, r0
    21c4:	mov	r0, #20
    21c8:	bl	20f0 <newchunk>
    21cc:	str	r4, [r0]
    21d0:	pop	{r4, pc}

000021d4 <gen_false>:
    21d4:	push	{r4, lr}
    21d8:	mov	r0, #0
    21dc:	bl	21bc <new_stmt>
    21e0:	mov	r3, #1
    21e4:	mov	r4, r0
    21e8:	str	r3, [r0, #12]
    21ec:	mov	r0, #21
    21f0:	bl	219c <new_block>
    21f4:	str	r4, [r0, #4]
    21f8:	pop	{r4, pc}

000021fc <xfer_to_x.isra.0>:
    21fc:	push	{r4, lr}
    2200:	mov	r4, r0
    2204:	mov	r0, #97	; 0x61
    2208:	bl	21bc <new_stmt>
    220c:	ldr	r3, [r4]
    2210:	str	r3, [r0, #12]
    2214:	pop	{r4, pc}

00002218 <xfer_to_a.isra.1>:
    2218:	push	{r4, lr}
    221c:	mov	r4, r0
    2220:	mov	r0, #96	; 0x60
    2224:	bl	21bc <new_stmt>
    2228:	ldr	r3, [r4]
    222c:	str	r3, [r0, #12]
    2230:	pop	{r4, pc}

00002234 <gen_true>:
    2234:	push	{r4, lr}
    2238:	mov	r0, #0
    223c:	bl	21bc <new_stmt>
    2240:	mov	r3, #0
    2244:	mov	r4, r0
    2248:	str	r3, [r0, #12]
    224c:	mov	r0, #21
    2250:	bl	219c <new_block>
    2254:	str	r4, [r0, #4]
    2258:	pop	{r4, pc}

0000225c <alloc_reg>:
    225c:	ldr	r3, [pc, #144]	; 22f4 <alloc_reg+0x98>
    2260:	ldr	r1, [pc, #144]	; 22f8 <alloc_reg+0x9c>
    2264:	add	r3, pc, r3
    2268:	push	{r4, lr}
    226c:	mov	r2, #17
    2270:	ldr	r0, [r3, #784]	; 0x310
    2274:	add	r1, pc, r1
    2278:	mov	r3, #0
    227c:	mov	lr, #1
    2280:	subs	r2, r2, #1
    2284:	bne	22a4 <alloc_reg+0x48>
    2288:	cmp	r3, #0
    228c:	ldrne	r3, [pc, #104]	; 22fc <alloc_reg+0xa0>
    2290:	addne	r3, pc, r3
    2294:	strne	r0, [r3, #784]	; 0x310
    2298:	ldr	r0, [pc, #96]	; 2300 <alloc_reg+0xa4>
    229c:	add	r0, pc, r0
    22a0:	bl	20b8 <sf_bpf_error>
    22a4:	lsl	ip, r0, #2
    22a8:	add	r4, r1, ip
    22ac:	ldr	r4, [r4, #788]	; 0x314
    22b0:	cmp	r4, #0
    22b4:	beq	22d4 <alloc_reg+0x78>
    22b8:	add	r0, r0, #1
    22bc:	rsbs	r3, r0, #0
    22c0:	and	r3, r3, #15
    22c4:	and	r0, r0, #15
    22c8:	rsbpl	r0, r3, #0
    22cc:	mov	r3, lr
    22d0:	b	2280 <alloc_reg+0x24>
    22d4:	cmp	r3, #0
    22d8:	ldr	r3, [pc, #36]	; 2304 <alloc_reg+0xa8>
    22dc:	mov	r2, #1
    22e0:	add	r3, pc, r3
    22e4:	add	r3, r3, ip
    22e8:	strne	r0, [r1, #784]	; 0x310
    22ec:	str	r2, [r3, #788]	; 0x314
    22f0:	pop	{r4, pc}
    22f4:	.word	0x0002b104
    22f8:	.word	0x0002b0f4
    22fc:	.word	0x0002b0d8
    2300:	.word	0x0000dc54
    2304:	.word	0x0002b088

00002308 <gen_avs_llprefixlen>:
    2308:	push	{r4, lr}
    230c:	ldr	r4, [pc, #48]	; 2344 <gen_avs_llprefixlen+0x3c>
    2310:	add	r4, pc, r4
    2314:	ldr	r3, [r4, #852]	; 0x354
    2318:	cmn	r3, #1
    231c:	bne	2328 <gen_avs_llprefixlen+0x20>
    2320:	bl	225c <alloc_reg>
    2324:	str	r0, [r4, #852]	; 0x354
    2328:	mov	r0, #97	; 0x61
    232c:	bl	21bc <new_stmt>
    2330:	ldr	r3, [pc, #16]	; 2348 <gen_avs_llprefixlen+0x40>
    2334:	add	r3, pc, r3
    2338:	ldr	r3, [r3, #852]	; 0x354
    233c:	str	r3, [r0, #12]
    2340:	pop	{r4, pc}
    2344:	.word	0x0002b058
    2348:	.word	0x0002b034

0000234c <gen_llprefixlen>:
    234c:	ldr	r3, [pc, #64]	; 2394 <gen_llprefixlen+0x48>
    2350:	add	r3, pc, r3
    2354:	ldr	r3, [r3, #856]	; 0x358
    2358:	cmp	r3, #127	; 0x7f
    235c:	beq	2390 <gen_llprefixlen+0x44>
    2360:	bgt	2374 <gen_llprefixlen+0x28>
    2364:	cmp	r3, #119	; 0x77
    2368:	beq	2388 <gen_llprefixlen+0x3c>
    236c:	mov	r0, #0
    2370:	bx	lr
    2374:	cmp	r3, #163	; 0xa3
    2378:	beq	238c <gen_llprefixlen+0x40>
    237c:	cmp	r3, #192	; 0xc0
    2380:	bne	236c <gen_llprefixlen+0x20>
    2384:	b	2308 <gen_avs_llprefixlen>
    2388:	b	2308 <gen_avs_llprefixlen>
    238c:	b	2308 <gen_avs_llprefixlen>
    2390:	b	2308 <gen_avs_llprefixlen>
    2394:	.word	0x0002b018

00002398 <gen_off_macpl>:
    2398:	push	{r4, lr}
    239c:	ldr	r4, [pc, #60]	; 23e0 <gen_off_macpl+0x48>
    23a0:	add	r4, pc, r4
    23a4:	ldr	r0, [r4, #860]	; 0x35c
    23a8:	cmp	r0, #0
    23ac:	popeq	{r4, pc}
    23b0:	ldr	r3, [r4, #864]	; 0x360
    23b4:	cmn	r3, #1
    23b8:	bne	23c4 <gen_off_macpl+0x2c>
    23bc:	bl	225c <alloc_reg>
    23c0:	str	r0, [r4, #864]	; 0x360
    23c4:	mov	r0, #97	; 0x61
    23c8:	bl	21bc <new_stmt>
    23cc:	ldr	r3, [pc, #16]	; 23e4 <gen_off_macpl+0x4c>
    23d0:	add	r3, pc, r3
    23d4:	ldr	r3, [r3, #864]	; 0x360
    23d8:	str	r3, [r0, #12]
    23dc:	pop	{r4, pc}
    23e0:	.word	0x0002afc8
    23e4:	.word	0x0002af98

000023e8 <lookup_proto>:
    23e8:	cmp	r1, #2
    23ec:	push	{r4, lr}
    23f0:	mov	r4, r0
    23f4:	beq	2478 <lookup_proto+0x90>
    23f8:	bgt	2414 <lookup_proto+0x2c>
    23fc:	cmp	r1, #0
    2400:	beq	2478 <lookup_proto+0x90>
    2404:	cmp	r1, #1
    2408:	beq	2498 <lookup_proto+0xb0>
    240c:	mvn	r0, #0
    2410:	pop	{r4, pc}
    2414:	cmp	r1, #17
    2418:	beq	2478 <lookup_proto+0x90>
    241c:	cmp	r1, #24
    2420:	bne	240c <lookup_proto+0x24>
    2424:	ldr	r1, [pc, #176]	; 24dc <lookup_proto+0xf4>
    2428:	add	r1, pc, r1
    242c:	bl	d70 <strcmp@plt>
    2430:	cmp	r0, #0
    2434:	beq	24c4 <lookup_proto+0xdc>
    2438:	ldr	r1, [pc, #160]	; 24e0 <lookup_proto+0xf8>
    243c:	mov	r0, r4
    2440:	add	r1, pc, r1
    2444:	bl	d70 <strcmp@plt>
    2448:	cmp	r0, #0
    244c:	beq	24cc <lookup_proto+0xe4>
    2450:	ldr	r1, [pc, #140]	; 24e4 <lookup_proto+0xfc>
    2454:	mov	r0, r4
    2458:	add	r1, pc, r1
    245c:	bl	d70 <strcmp@plt>
    2460:	cmp	r0, #0
    2464:	beq	24d4 <lookup_proto+0xec>
    2468:	ldr	r0, [pc, #120]	; 24e8 <lookup_proto+0x100>
    246c:	mov	r1, r4
    2470:	add	r0, pc, r0
    2474:	b	2494 <lookup_proto+0xac>
    2478:	mov	r0, r4
    247c:	bl	9e60 <pcap_nametoproto>
    2480:	cmn	r0, #1
    2484:	popne	{r4, pc}
    2488:	ldr	r0, [pc, #92]	; 24ec <lookup_proto+0x104>
    248c:	mov	r1, r4
    2490:	add	r0, pc, r0
    2494:	bl	20b8 <sf_bpf_error>
    2498:	bl	9e78 <pcap_nametoeproto>
    249c:	cmn	r0, #1
    24a0:	popne	{r4, pc}
    24a4:	mov	r0, r4
    24a8:	bl	9ec0 <pcap_nametollc>
    24ac:	cmn	r0, #1
    24b0:	popne	{r4, pc}
    24b4:	ldr	r0, [pc, #52]	; 24f0 <lookup_proto+0x108>
    24b8:	mov	r1, r4
    24bc:	add	r0, pc, r0
    24c0:	b	2494 <lookup_proto+0xac>
    24c4:	mov	r0, #130	; 0x82
    24c8:	pop	{r4, pc}
    24cc:	mov	r0, #131	; 0x83
    24d0:	pop	{r4, pc}
    24d4:	mov	r0, #129	; 0x81
    24d8:	pop	{r4, pc}
    24dc:	.word	0x0000db28
    24e0:	.word	0x0000db15
    24e4:	.word	0x0000db02
    24e8:	.word	0x0000daef
    24ec:	.word	0x0000da91
    24f0:	.word	0x0000da7b

000024f4 <sf_sdup>:
    24f4:	push	{r4, r5, r6, r7, r8, lr}
    24f8:	mov	r7, r0
    24fc:	bl	e78 <strlen@plt>
    2500:	add	r4, r0, #1
    2504:	mov	r6, r0
    2508:	mov	r0, r4
    250c:	bl	20f0 <newchunk>
    2510:	mov	r2, r4
    2514:	mov	r1, r7
    2518:	mov	r5, r0
    251c:	bl	ecc <strncpy@plt>
    2520:	cmp	r4, #0
    2524:	movgt	r3, #0
    2528:	mov	r0, r5
    252c:	strbgt	r3, [r5, r6]
    2530:	pop	{r4, r5, r6, r7, r8, pc}

00002534 <sfbpf_compile>:
    2534:	push	{r4, r5, r6, lr}
    2538:	sub	sp, sp, #24
    253c:	ldr	r4, [pc, #2320]	; 2e54 <sfbpf_compile+0x920>
    2540:	str	r2, [sp, #12]
    2544:	ldr	r2, [pc, #2316]	; 2e58 <sfbpf_compile+0x924>
    2548:	str	r3, [sp, #16]
    254c:	ldr	r3, [pc, #2312]	; 2e5c <sfbpf_compile+0x928>
    2550:	add	r2, pc, r2
    2554:	str	r0, [sp, #8]
    2558:	str	r1, [sp]
    255c:	str	r2, [sp, #4]
    2560:	ldr	r3, [r2, r3]
    2564:	mov	r1, #0
    2568:	add	r4, pc, r4
    256c:	str	r1, [r3]
    2570:	ldr	r3, [pc, #2280]	; 2e60 <sfbpf_compile+0x92c>
    2574:	add	r0, r4, #788	; 0x314
    2578:	ldr	r3, [r2, r3]
    257c:	mov	r2, #64	; 0x40
    2580:	str	r1, [r4, #868]	; 0x364
    2584:	str	r1, [r3]
    2588:	str	r1, [r4, #784]	; 0x310
    258c:	bl	eb4 <memset@plt>
    2590:	add	r0, r4, #392	; 0x188
    2594:	bl	db8 <_setjmp@plt>
    2598:	cmp	r0, #0
    259c:	beq	25d8 <sfbpf_compile+0xa4>
    25a0:	ldr	r4, [pc, #2236]	; 2e64 <sfbpf_compile+0x930>
    25a4:	add	r4, pc, r4
    25a8:	ldr	r0, [r4, #872]	; 0x368
    25ac:	cmp	r0, #0
    25b0:	beq	25c0 <sfbpf_compile+0x8c>
    25b4:	bl	f08 <freeaddrinfo@plt>
    25b8:	mov	r3, #0
    25bc:	str	r3, [r4, #872]	; 0x368
    25c0:	bl	fabc <sf_lex_cleanup>
    25c4:	bl	2074 <freechunks>
    25c8:	mvn	r4, #0
    25cc:	mov	r0, r4
    25d0:	add	sp, sp, #24
    25d4:	pop	{r4, r5, r6, pc}
    25d8:	ldr	r0, [pc, #2184]	; 2e68 <sfbpf_compile+0x934>
    25dc:	ldr	r3, [sp, #44]	; 0x2c
    25e0:	add	r0, pc, r0
    25e4:	str	r3, [r0, #876]	; 0x36c
    25e8:	ldr	r3, [sp, #8]
    25ec:	cmp	r3, #0
    25f0:	str	r3, [r0, #880]	; 0x370
    25f4:	bne	260c <sfbpf_compile+0xd8>
    25f8:	ldr	r1, [pc, #2156]	; 2e6c <sfbpf_compile+0x938>
    25fc:	add	r0, r0, #132	; 0x84
    2600:	add	r1, pc, r1
    2604:	bl	e24 <strcpy@plt>
    2608:	b	25c8 <sfbpf_compile+0x94>
    260c:	ldr	r3, [sp, #16]
    2610:	cmp	r3, #0
    2614:	ldrne	r0, [sp, #16]
    2618:	ldreq	r0, [pc, #2128]	; 2e70 <sfbpf_compile+0x93c>
    261c:	addeq	r0, pc, r0
    2620:	bl	faa0 <sf_lex_init>
    2624:	ldr	r3, [pc, #2120]	; 2e74 <sfbpf_compile+0x940>
    2628:	ldr	r0, [pc, #2120]	; 2e78 <sfbpf_compile+0x944>
    262c:	add	r3, pc, r3
    2630:	ldr	r2, [sp]
    2634:	add	r0, pc, r0
    2638:	mov	r1, #0
    263c:	str	r2, [r3, #856]	; 0x358
    2640:	mvn	r2, #0
    2644:	str	r2, [r0]
    2648:	str	r1, [r0, #4]
    264c:	ldr	r0, [sp]
    2650:	str	r1, [r3, #884]	; 0x374
    2654:	cmp	r0, #139	; 0x8b
    2658:	str	r1, [r3, #888]	; 0x378
    265c:	str	r1, [r3, #892]	; 0x37c
    2660:	str	r2, [r3, #896]	; 0x380
    2664:	str	r2, [r3, #900]	; 0x384
    2668:	str	r2, [r3, #904]	; 0x388
    266c:	str	r2, [r3, #908]	; 0x38c
    2670:	str	r1, [r3, #912]	; 0x390
    2674:	str	r2, [r3, #916]	; 0x394
    2678:	str	r2, [r3, #920]	; 0x398
    267c:	str	r2, [r3, #924]	; 0x39c
    2680:	str	r2, [r3, #928]	; 0x3a0
    2684:	str	r2, [r3, #932]	; 0x3a4
    2688:	str	r1, [r3, #936]	; 0x3a8
    268c:	str	r1, [r3, #940]	; 0x3ac
    2690:	str	r1, [r3, #860]	; 0x35c
    2694:	str	r2, [r3, #852]	; 0x354
    2698:	str	r2, [r3, #864]	; 0x360
    269c:	beq	2cec <sfbpf_compile+0x7b8>
    26a0:	bgt	28ac <sfbpf_compile+0x378>
    26a4:	cmp	r0, #107	; 0x6b
    26a8:	beq	2c58 <sfbpf_compile+0x724>
    26ac:	bgt	27d8 <sfbpf_compile+0x2a4>
    26b0:	cmp	r0, #12
    26b4:	beq	2af8 <sfbpf_compile+0x5c4>
    26b8:	bgt	272c <sfbpf_compile+0x1f8>
    26bc:	cmp	r0, #7
    26c0:	beq	2b0c <sfbpf_compile+0x5d8>
    26c4:	bgt	26fc <sfbpf_compile+0x1c8>
    26c8:	cmp	r0, #1
    26cc:	beq	2b5c <sfbpf_compile+0x628>
    26d0:	cmp	r0, #6
    26d4:	beq	2be8 <sfbpf_compile+0x6b4>
    26d8:	cmp	r0, r1
    26dc:	bne	271c <sfbpf_compile+0x1e8>
    26e0:	ldr	r3, [pc, #1940]	; 2e7c <sfbpf_compile+0x948>
    26e4:	mov	r2, #0
    26e8:	add	r3, pc, r3
    26ec:	mov	r1, #4
    26f0:	str	r2, [r3, #944]	; 0x3b0
    26f4:	str	r1, [r3, #940]	; 0x3ac
    26f8:	b	2770 <sfbpf_compile+0x23c>
    26fc:	ldr	r3, [sp]
    2700:	cmp	r3, #9
    2704:	beq	2ba0 <sfbpf_compile+0x66c>
    2708:	blt	2b7c <sfbpf_compile+0x648>
    270c:	cmp	r3, #10
    2710:	beq	2bc8 <sfbpf_compile+0x694>
    2714:	cmp	r3, #11
    2718:	beq	2c04 <sfbpf_compile+0x6d0>
    271c:	ldr	r0, [pc, #1884]	; 2e80 <sfbpf_compile+0x94c>
    2720:	ldr	r1, [sp]
    2724:	add	r0, pc, r0
    2728:	bl	20b8 <sf_bpf_error>
    272c:	ldr	r2, [sp]
    2730:	cmp	r2, #50	; 0x32
    2734:	beq	2ba0 <sfbpf_compile+0x66c>
    2738:	bgt	2778 <sfbpf_compile+0x244>
    273c:	cmp	r2, #16
    2740:	beq	2bb8 <sfbpf_compile+0x684>
    2744:	cmp	r2, #19
    2748:	beq	2c04 <sfbpf_compile+0x6d0>
    274c:	cmp	r2, #15
    2750:	bne	271c <sfbpf_compile+0x1e8>
    2754:	ldr	r3, [pc, #1832]	; 2e84 <sfbpf_compile+0x950>
    2758:	mvn	r2, #0
    275c:	add	r3, pc, r3
    2760:	str	r2, [r3, #944]	; 0x3b0
    2764:	mov	r2, #24
    2768:	str	r2, [r3, #940]	; 0x3ac
    276c:	mov	r2, #0
    2770:	str	r2, [r3, #948]	; 0x3b4
    2774:	b	2b74 <sfbpf_compile+0x640>
    2778:	ldr	r2, [sp]
    277c:	cmp	r2, #99	; 0x63
    2780:	beq	2c70 <sfbpf_compile+0x73c>
    2784:	bgt	27a8 <sfbpf_compile+0x274>
    2788:	cmp	r2, #51	; 0x33
    278c:	bne	271c <sfbpf_compile+0x1e8>
    2790:	ldr	r3, [pc, #1776]	; 2e88 <sfbpf_compile+0x954>
    2794:	mov	r2, #6
    2798:	add	r3, pc, r3
    279c:	str	r2, [r3, #944]	; 0x3b0
    27a0:	mov	r2, #8
    27a4:	b	2768 <sfbpf_compile+0x234>
    27a8:	ldr	r3, [sp]
    27ac:	cmp	r3, #104	; 0x68
    27b0:	beq	2ba0 <sfbpf_compile+0x66c>
    27b4:	cmp	r3, #105	; 0x69
    27b8:	bne	271c <sfbpf_compile+0x1e8>
    27bc:	ldr	r3, [pc, #1736]	; 2e8c <sfbpf_compile+0x958>
    27c0:	add	r3, pc, r3
    27c4:	mov	r2, #24
    27c8:	str	r2, [r3, #944]	; 0x3b0
    27cc:	mov	r2, #1
    27d0:	str	r2, [r3, #860]	; 0x35c
    27d4:	b	2bdc <sfbpf_compile+0x6a8>
    27d8:	ldr	r0, [sp]
    27dc:	cmp	r0, #129	; 0x81
    27e0:	beq	2b4c <sfbpf_compile+0x618>
    27e4:	bgt	2844 <sfbpf_compile+0x310>
    27e8:	cmp	r0, #114	; 0x72
    27ec:	beq	2c58 <sfbpf_compile+0x724>
    27f0:	bgt	2818 <sfbpf_compile+0x2e4>
    27f4:	cmp	r0, #109	; 0x6d
    27f8:	beq	2b94 <sfbpf_compile+0x660>
    27fc:	blt	26e0 <sfbpf_compile+0x1ac>
    2800:	cmp	r0, #113	; 0x71
    2804:	bne	271c <sfbpf_compile+0x1e8>
    2808:	ldr	r3, [pc, #1664]	; 2e90 <sfbpf_compile+0x95c>
    280c:	mov	r2, #14
    2810:	add	r3, pc, r3
    2814:	b	2b88 <sfbpf_compile+0x654>
    2818:	ldr	r2, [sp]
    281c:	cmp	r2, #122	; 0x7a
    2820:	beq	2c50 <sfbpf_compile+0x71c>
    2824:	bgt	2830 <sfbpf_compile+0x2fc>
    2828:	cmp	r2, #119	; 0x77
    282c:	b	27b8 <sfbpf_compile+0x284>
    2830:	ldr	r3, [sp]
    2834:	cmp	r3, #123	; 0x7b
    2838:	beq	2c18 <sfbpf_compile+0x6e4>
    283c:	cmp	r3, #127	; 0x7f
    2840:	b	27b8 <sfbpf_compile+0x284>
    2844:	ldr	r1, [sp]
    2848:	cmp	r1, #134	; 0x86
    284c:	beq	2860 <sfbpf_compile+0x32c>
    2850:	bgt	2874 <sfbpf_compile+0x340>
    2854:	cmp	r1, #132	; 0x84
    2858:	beq	2ccc <sfbpf_compile+0x798>
    285c:	bgt	2cb4 <sfbpf_compile+0x780>
    2860:	ldr	r3, [pc, #1580]	; 2e94 <sfbpf_compile+0x960>
    2864:	mov	r2, #4
    2868:	add	r3, pc, r3
    286c:	str	r2, [r3, #944]	; 0x3b0
    2870:	b	296c <sfbpf_compile+0x438>
    2874:	ldr	r1, [sp]
    2878:	cmp	r1, #136	; 0x88
    287c:	beq	2cdc <sfbpf_compile+0x7a8>
    2880:	blt	2ca4 <sfbpf_compile+0x770>
    2884:	cmp	r1, #137	; 0x89
    2888:	beq	2c80 <sfbpf_compile+0x74c>
    288c:	cmp	r1, #138	; 0x8a
    2890:	bne	271c <sfbpf_compile+0x1e8>
    2894:	ldr	r3, [pc, #1532]	; 2e98 <sfbpf_compile+0x964>
    2898:	mov	r2, #16
    289c:	add	r3, pc, r3
    28a0:	str	r2, [r3, #944]	; 0x3b0
    28a4:	mov	r2, #18
    28a8:	b	2768 <sfbpf_compile+0x234>
    28ac:	ldr	r0, [sp]
    28b0:	cmp	r0, #191	; 0xbf
    28b4:	beq	2d10 <sfbpf_compile+0x7dc>
    28b8:	bgt	2a18 <sfbpf_compile+0x4e4>
    28bc:	cmp	r0, #177	; 0xb1
    28c0:	beq	2d10 <sfbpf_compile+0x7dc>
    28c4:	bgt	2980 <sfbpf_compile+0x44c>
    28c8:	cmp	r0, #163	; 0xa3
    28cc:	beq	27bc <sfbpf_compile+0x288>
    28d0:	bgt	291c <sfbpf_compile+0x3e8>
    28d4:	cmp	r0, #143	; 0x8f
    28d8:	beq	2d10 <sfbpf_compile+0x7dc>
    28dc:	cmp	r0, #144	; 0x90
    28e0:	beq	2c60 <sfbpf_compile+0x72c>
    28e4:	cmp	r0, #140	; 0x8c
    28e8:	bne	271c <sfbpf_compile+0x1e8>
    28ec:	ldr	r3, [pc, #1448]	; 2e9c <sfbpf_compile+0x968>
    28f0:	mov	r2, #2
    28f4:	add	r3, pc, r3
    28f8:	str	r2, [r3, #916]	; 0x394
    28fc:	mov	r2, #3
    2900:	str	r2, [r3, #920]	; 0x398
    2904:	mov	r2, #4
    2908:	str	r2, [r3, #924]	; 0x39c
    290c:	str	r2, [r3, #928]	; 0x3a0
    2910:	mov	r2, #7
    2914:	str	r2, [r3, #932]	; 0x3a4
    2918:	b	2c68 <sfbpf_compile+0x734>
    291c:	ldr	r3, [sp]
    2920:	cmp	r3, #166	; 0xa6
    2924:	beq	2ba0 <sfbpf_compile+0x66c>
    2928:	bgt	2944 <sfbpf_compile+0x410>
    292c:	cmp	r3, #164	; 0xa4
    2930:	bne	271c <sfbpf_compile+0x1e8>
    2934:	ldr	r3, [pc, #1380]	; 2ea0 <sfbpf_compile+0x96c>
    2938:	mov	r2, #12
    293c:	add	r3, pc, r3
    2940:	b	286c <sfbpf_compile+0x338>
    2944:	ldr	r3, [sp]
    2948:	cmp	r3, #167	; 0xa7
    294c:	beq	29ac <sfbpf_compile+0x478>
    2950:	cmp	r3, #168	; 0xa8
    2954:	bne	271c <sfbpf_compile+0x1e8>
    2958:	ldr	r3, [pc, #1348]	; 2ea4 <sfbpf_compile+0x970>
    295c:	mov	r2, #4
    2960:	add	r3, pc, r3
    2964:	str	r2, [r3, #944]	; 0x3b0
    2968:	mov	r2, #6
    296c:	str	r2, [r3, #940]	; 0x3ac
    2970:	mov	r2, #0
    2974:	str	r2, [r3, #948]	; 0x3b4
    2978:	mvn	r2, #0
    297c:	b	2b74 <sfbpf_compile+0x640>
    2980:	ldr	r0, [sp]
    2984:	cmp	r0, #183	; 0xb7
    2988:	beq	2ce4 <sfbpf_compile+0x7b0>
    298c:	bgt	29d4 <sfbpf_compile+0x4a0>
    2990:	cmp	r0, #181	; 0xb5
    2994:	strgt	r2, [r3, #944]	; 0x3b0
    2998:	movgt	r2, #4
    299c:	strgt	r2, [r3, #948]	; 0x3b4
    29a0:	bgt	2b20 <sfbpf_compile+0x5ec>
    29a4:	cmp	r0, #179	; 0xb3
    29a8:	bge	2860 <sfbpf_compile+0x32c>
    29ac:	ldr	r3, [pc, #1268]	; 2ea8 <sfbpf_compile+0x974>
    29b0:	mov	r2, #14
    29b4:	add	r3, pc, r3
    29b8:	str	r2, [r3, #940]	; 0x3ac
    29bc:	mov	r2, #16
    29c0:	str	r2, [r3, #944]	; 0x3b0
    29c4:	mov	r2, #18
    29c8:	str	r2, [r3, #948]	; 0x3b4
    29cc:	mov	r2, #21
    29d0:	b	2b74 <sfbpf_compile+0x640>
    29d4:	ldr	r1, [sp]
    29d8:	cmp	r1, #187	; 0xbb
    29dc:	beq	2d10 <sfbpf_compile+0x7dc>
    29e0:	bgt	29f8 <sfbpf_compile+0x4c4>
    29e4:	cmp	r1, #186	; 0xba
    29e8:	bne	271c <sfbpf_compile+0x1e8>
    29ec:	ldr	r3, [pc, #1208]	; 2eac <sfbpf_compile+0x978>
    29f0:	add	r3, pc, r3
    29f4:	b	2c68 <sfbpf_compile+0x734>
    29f8:	ldr	r3, [sp]
    29fc:	cmp	r3, #189	; 0xbd
    2a00:	beq	2d3c <sfbpf_compile+0x808>
    2a04:	cmp	r3, #190	; 0xbe
    2a08:	bne	271c <sfbpf_compile+0x1e8>
    2a0c:	ldr	r3, [pc, #1180]	; 2eb0 <sfbpf_compile+0x97c>
    2a10:	add	r3, pc, r3
    2a14:	b	2c68 <sfbpf_compile+0x734>
    2a18:	ldr	r1, [sp]
    2a1c:	cmp	r1, #200	; 0xc8
    2a20:	beq	2ce4 <sfbpf_compile+0x7b0>
    2a24:	bgt	2a84 <sfbpf_compile+0x550>
    2a28:	cmp	r1, #195	; 0xc3
    2a2c:	beq	2d10 <sfbpf_compile+0x7dc>
    2a30:	bgt	2a58 <sfbpf_compile+0x524>
    2a34:	cmp	r1, #193	; 0xc1
    2a38:	beq	2d10 <sfbpf_compile+0x7dc>
    2a3c:	ble	2bf8 <sfbpf_compile+0x6c4>
    2a40:	ldr	r3, [pc, #1132]	; 2eb4 <sfbpf_compile+0x980>
    2a44:	mov	r2, #8
    2a48:	add	r3, pc, r3
    2a4c:	str	r2, [r3, #944]	; 0x3b0
    2a50:	mvn	r2, #0
    2a54:	b	2cd4 <sfbpf_compile+0x7a0>
    2a58:	ldr	r1, [sp]
    2a5c:	cmp	r1, #197	; 0xc5
    2a60:	beq	2d18 <sfbpf_compile+0x7e4>
    2a64:	blt	2d48 <sfbpf_compile+0x814>
    2a68:	cmp	r1, #198	; 0xc6
    2a6c:	beq	2d54 <sfbpf_compile+0x820>
    2a70:	cmp	r1, #199	; 0xc7
    2a74:	bne	271c <sfbpf_compile+0x1e8>
    2a78:	ldr	r3, [pc, #1080]	; 2eb8 <sfbpf_compile+0x984>
    2a7c:	add	r3, pc, r3
    2a80:	b	2c68 <sfbpf_compile+0x734>
    2a84:	ldr	r1, [sp]
    2a88:	cmp	r1, #220	; 0xdc
    2a8c:	beq	2d10 <sfbpf_compile+0x7dc>
    2a90:	bgt	2abc <sfbpf_compile+0x588>
    2a94:	cmp	r1, #202	; 0xca
    2a98:	beq	2d6c <sfbpf_compile+0x838>
    2a9c:	blt	2d60 <sfbpf_compile+0x82c>
    2aa0:	cmp	r1, #215	; 0xd7
    2aa4:	beq	2d88 <sfbpf_compile+0x854>
    2aa8:	cmp	r1, #219	; 0xdb
    2aac:	bne	271c <sfbpf_compile+0x1e8>
    2ab0:	ldr	r3, [pc, #1028]	; 2ebc <sfbpf_compile+0x988>
    2ab4:	add	r3, pc, r3
    2ab8:	b	2c68 <sfbpf_compile+0x734>
    2abc:	ldr	r1, [sp]
    2ac0:	cmp	r1, #227	; 0xe3
    2ac4:	beq	2d10 <sfbpf_compile+0x7dc>
    2ac8:	bgt	2aec <sfbpf_compile+0x5b8>
    2acc:	cmp	r1, #226	; 0xe2
    2ad0:	bne	271c <sfbpf_compile+0x1e8>
    2ad4:	ldr	r3, [pc, #996]	; 2ec0 <sfbpf_compile+0x98c>
    2ad8:	mov	r2, #1
    2adc:	add	r3, pc, r3
    2ae0:	str	r2, [r3, #944]	; 0x3b0
    2ae4:	mov	r2, #24
    2ae8:	b	296c <sfbpf_compile+0x438>
    2aec:	ldr	r3, [sp]
    2af0:	cmp	r3, #229	; 0xe5
    2af4:	bgt	271c <sfbpf_compile+0x1e8>
    2af8:	ldr	r3, [pc, #964]	; 2ec4 <sfbpf_compile+0x990>
    2afc:	mvn	r2, #0
    2b00:	add	r3, pc, r3
    2b04:	str	r2, [r3, #944]	; 0x3b0
    2b08:	b	276c <sfbpf_compile+0x238>
    2b0c:	mov	r2, #2
    2b10:	str	r2, [r3, #944]	; 0x3b0
    2b14:	mov	r2, #6
    2b18:	str	r2, [r3, #940]	; 0x3ac
    2b1c:	str	r1, [r3, #948]	; 0x3b4
    2b20:	str	r1, [r3, #952]	; 0x3b8
    2b24:	bl	c928 <sfbpf_parse>
    2b28:	ldr	r3, [pc, #816]	; 2e60 <sfbpf_compile+0x92c>
    2b2c:	ldr	r2, [sp, #4]
    2b30:	ldr	r3, [r2, r3]
    2b34:	ldr	r4, [r3]
    2b38:	cmp	r4, #0
    2b3c:	beq	2d94 <sfbpf_compile+0x860>
    2b40:	ldr	r0, [pc, #896]	; 2ec8 <sfbpf_compile+0x994>
    2b44:	add	r0, pc, r0
    2b48:	bl	20b8 <sf_bpf_error>
    2b4c:	mov	r2, #4
    2b50:	str	r2, [r3, #944]	; 0x3b0
    2b54:	mov	r2, #8
    2b58:	b	2b18 <sfbpf_compile+0x5e4>
    2b5c:	mov	r2, #12
    2b60:	str	r2, [r3, #944]	; 0x3b0
    2b64:	mov	r2, #14
    2b68:	str	r2, [r3, #940]	; 0x3ac
    2b6c:	str	r1, [r3, #948]	; 0x3b4
    2b70:	mov	r2, #3
    2b74:	str	r2, [r3, #952]	; 0x3b8
    2b78:	b	2b24 <sfbpf_compile+0x5f0>
    2b7c:	ldr	r3, [pc, #840]	; 2ecc <sfbpf_compile+0x998>
    2b80:	mvn	r2, #0
    2b84:	add	r3, pc, r3
    2b88:	str	r2, [r3, #944]	; 0x3b0
    2b8c:	mov	r2, #16
    2b90:	b	2768 <sfbpf_compile+0x234>
    2b94:	str	r1, [r3, #944]	; 0x3b0
    2b98:	mov	r2, #12
    2b9c:	b	2b18 <sfbpf_compile+0x5e4>
    2ba0:	ldr	r3, [pc, #808]	; 2ed0 <sfbpf_compile+0x99c>
    2ba4:	mov	r2, #2
    2ba8:	add	r3, pc, r3
    2bac:	str	r2, [r3, #944]	; 0x3b0
    2bb0:	mov	r2, #4
    2bb4:	b	2768 <sfbpf_compile+0x234>
    2bb8:	mov	r2, #5
    2bbc:	str	r2, [r3, #944]	; 0x3b0
    2bc0:	mov	r2, #24
    2bc4:	b	2b18 <sfbpf_compile+0x5e4>
    2bc8:	ldr	r3, [pc, #772]	; 2ed4 <sfbpf_compile+0x9a0>
    2bcc:	mov	r2, #13
    2bd0:	add	r3, pc, r3
    2bd4:	str	r2, [r3, #944]	; 0x3b0
    2bd8:	str	r2, [r3, #940]	; 0x3ac
    2bdc:	mov	r2, #8
    2be0:	str	r2, [r3, #948]	; 0x3b4
    2be4:	b	2b70 <sfbpf_compile+0x63c>
    2be8:	ldr	r3, [pc, #744]	; 2ed8 <sfbpf_compile+0x9a4>
    2bec:	mov	r2, #14
    2bf0:	add	r3, pc, r3
    2bf4:	b	2bd4 <sfbpf_compile+0x6a0>
    2bf8:	ldr	r3, [pc, #732]	; 2edc <sfbpf_compile+0x9a8>
    2bfc:	add	r3, pc, r3
    2c00:	b	27c4 <sfbpf_compile+0x290>
    2c04:	ldr	r3, [pc, #724]	; 2ee0 <sfbpf_compile+0x9ac>
    2c08:	mov	r2, #0
    2c0c:	add	r3, pc, r3
    2c10:	str	r2, [r3, #944]	; 0x3b0
    2c14:	b	2bdc <sfbpf_compile+0x6a8>
    2c18:	ldr	r3, [pc, #708]	; 2ee4 <sfbpf_compile+0x9b0>
    2c1c:	mov	r2, #1
    2c20:	add	r3, pc, r3
    2c24:	str	r2, [r3, #888]	; 0x378
    2c28:	str	r2, [r3, #896]	; 0x380
    2c2c:	mov	r2, #2
    2c30:	str	r2, [r3, #900]	; 0x384
    2c34:	mov	r2, #0
    2c38:	str	r2, [r3, #904]	; 0x388
    2c3c:	mvn	r2, #0
    2c40:	str	r2, [r3, #884]	; 0x374
    2c44:	mov	r2, #4
    2c48:	str	r2, [r3, #908]	; 0x38c
    2c4c:	b	2bd4 <sfbpf_compile+0x6a0>
    2c50:	mov	r2, #16
    2c54:	b	2bd4 <sfbpf_compile+0x6a0>
    2c58:	str	r2, [r3, #944]	; 0x3b0
    2c5c:	b	2b1c <sfbpf_compile+0x5e8>
    2c60:	ldr	r3, [pc, #640]	; 2ee8 <sfbpf_compile+0x9b4>
    2c64:	add	r3, pc, r3
    2c68:	mvn	r2, #0
    2c6c:	b	2d10 <sfbpf_compile+0x7dc>
    2c70:	mov	r2, #6
    2c74:	str	r2, [r3, #944]	; 0x3b0
    2c78:	mov	r2, #44	; 0x2c
    2c7c:	b	2b18 <sfbpf_compile+0x5e4>
    2c80:	ldr	r3, [pc, #612]	; 2eec <sfbpf_compile+0x9b8>
    2c84:	mov	r2, #4
    2c88:	add	r3, pc, r3
    2c8c:	str	r2, [r3, #944]	; 0x3b0
    2c90:	str	r2, [r3, #940]	; 0x3ac
    2c94:	mov	r2, #0
    2c98:	str	r2, [r3, #948]	; 0x3b4
    2c9c:	mov	r2, #10
    2ca0:	b	2b74 <sfbpf_compile+0x640>
    2ca4:	ldr	r3, [pc, #580]	; 2ef0 <sfbpf_compile+0x9bc>
    2ca8:	mov	r2, #8
    2cac:	add	r3, pc, r3
    2cb0:	b	2c8c <sfbpf_compile+0x758>
    2cb4:	ldr	r3, [pc, #568]	; 2ef4 <sfbpf_compile+0x9c0>
    2cb8:	mov	r2, #6
    2cbc:	add	r3, pc, r3
    2cc0:	str	r2, [r3, #944]	; 0x3b0
    2cc4:	mov	r2, #12
    2cc8:	b	296c <sfbpf_compile+0x438>
    2ccc:	mov	r1, #6
    2cd0:	str	r1, [r3, #944]	; 0x3b0
    2cd4:	str	r2, [r3, #940]	; 0x3ac
    2cd8:	b	2770 <sfbpf_compile+0x23c>
    2cdc:	mov	r1, #12
    2ce0:	b	2cd0 <sfbpf_compile+0x79c>
    2ce4:	mov	r1, #18
    2ce8:	b	2cd0 <sfbpf_compile+0x79c>
    2cec:	mov	r1, #6
    2cf0:	str	r1, [r3, #916]	; 0x394
    2cf4:	mov	r1, #7
    2cf8:	str	r1, [r3, #920]	; 0x398
    2cfc:	mov	r1, #8
    2d00:	str	r1, [r3, #924]	; 0x39c
    2d04:	str	r1, [r3, #928]	; 0x3a0
    2d08:	mov	r1, #11
    2d0c:	str	r1, [r3, #932]	; 0x3a4
    2d10:	str	r2, [r3, #944]	; 0x3b0
    2d14:	b	2cd4 <sfbpf_compile+0x7a0>
    2d18:	mov	r1, #22
    2d1c:	str	r1, [r3, #916]	; 0x394
    2d20:	mov	r1, #23
    2d24:	str	r1, [r3, #920]	; 0x398
    2d28:	mov	r1, #24
    2d2c:	str	r1, [r3, #924]	; 0x39c
    2d30:	str	r1, [r3, #928]	; 0x3a0
    2d34:	mov	r1, #27
    2d38:	b	2d0c <sfbpf_compile+0x7d8>
    2d3c:	ldr	r3, [pc, #436]	; 2ef8 <sfbpf_compile+0x9c4>
    2d40:	add	r3, pc, r3
    2d44:	b	2c68 <sfbpf_compile+0x734>
    2d48:	ldr	r3, [pc, #428]	; 2efc <sfbpf_compile+0x9c8>
    2d4c:	add	r3, pc, r3
    2d50:	b	2c68 <sfbpf_compile+0x734>
    2d54:	ldr	r3, [pc, #420]	; 2f00 <sfbpf_compile+0x9cc>
    2d58:	add	r3, pc, r3
    2d5c:	b	2c68 <sfbpf_compile+0x734>
    2d60:	ldr	r3, [pc, #412]	; 2f04 <sfbpf_compile+0x9d0>
    2d64:	add	r3, pc, r3
    2d68:	b	2c68 <sfbpf_compile+0x734>
    2d6c:	str	r2, [r3, #944]	; 0x3b0
    2d70:	str	r2, [r3, #940]	; 0x3ac
    2d74:	str	r2, [r3, #948]	; 0x3b4
    2d78:	str	r2, [r3, #952]	; 0x3b8
    2d7c:	mov	r2, #1
    2d80:	str	r2, [r3, #884]	; 0x374
    2d84:	b	2b24 <sfbpf_compile+0x5f0>
    2d88:	ldr	r3, [pc, #376]	; 2f08 <sfbpf_compile+0x9d4>
    2d8c:	add	r3, pc, r3
    2d90:	b	2c68 <sfbpf_compile+0x734>
    2d94:	ldr	r5, [pc, #368]	; 2f0c <sfbpf_compile+0x9d8>
    2d98:	add	r5, pc, r5
    2d9c:	ldr	r3, [r5, #868]	; 0x364
    2da0:	cmp	r3, #0
    2da4:	bne	2dbc <sfbpf_compile+0x888>
    2da8:	mov	r0, #6
    2dac:	ldr	r6, [r5, #880]	; 0x370
    2db0:	bl	219c <new_block>
    2db4:	str	r6, [r0, #20]
    2db8:	str	r0, [r5, #868]	; 0x364
    2dbc:	ldr	r3, [sp, #40]	; 0x28
    2dc0:	cmp	r3, #0
    2dc4:	beq	2e20 <sfbpf_compile+0x8ec>
    2dc8:	ldr	r3, [pc, #140]	; 2e5c <sfbpf_compile+0x928>
    2dcc:	ldr	r2, [sp, #4]
    2dd0:	ldr	r3, [r2, r3]
    2dd4:	ldr	r3, [r3]
    2dd8:	cmp	r3, #0
    2ddc:	bne	2e20 <sfbpf_compile+0x8ec>
    2de0:	ldr	r5, [pc, #296]	; 2f10 <sfbpf_compile+0x9dc>
    2de4:	add	r5, pc, r5
    2de8:	add	r0, r5, #868	; 0x364
    2dec:	bl	c094 <sf_bpf_optimize>
    2df0:	ldr	r3, [r5, #868]	; 0x364
    2df4:	cmp	r3, #0
    2df8:	beq	2e14 <sfbpf_compile+0x8e0>
    2dfc:	ldr	r2, [r3, #8]
    2e00:	cmp	r2, #6
    2e04:	bne	2e20 <sfbpf_compile+0x8ec>
    2e08:	ldr	r3, [r3, #20]
    2e0c:	cmp	r3, #0
    2e10:	bne	2e20 <sfbpf_compile+0x8ec>
    2e14:	ldr	r0, [pc, #248]	; 2f14 <sfbpf_compile+0x9e0>
    2e18:	add	r0, pc, r0
    2e1c:	b	2b48 <sfbpf_compile+0x614>
    2e20:	ldr	r3, [pc, #240]	; 2f18 <sfbpf_compile+0x9e4>
    2e24:	add	r1, sp, #20
    2e28:	add	r3, pc, r3
    2e2c:	ldr	r0, [r3, #868]	; 0x364
    2e30:	bl	c5e4 <sf_icode_to_fcode>
    2e34:	ldr	r3, [sp, #12]
    2e38:	ldr	r2, [sp, #12]
    2e3c:	str	r0, [r3, #4]
    2e40:	ldr	r3, [sp, #20]
    2e44:	str	r3, [r2]
    2e48:	bl	fabc <sf_lex_cleanup>
    2e4c:	bl	2074 <freechunks>
    2e50:	b	25cc <sfbpf_compile+0x98>
    2e54:	.word	0x0002ae00
    2e58:	.word	0x0002aaa8
    2e5c:	.word	0x00000108
    2e60:	.word	0x000000dc
    2e64:	.word	0x0002adc4
    2e68:	.word	0x0002ad88
    2e6c:	.word	0x0000d976
    2e70:	.word	0x0000d7ef
    2e74:	.word	0x0002ad3c
    2e78:	.word	0x0002ac48
    2e7c:	.word	0x0002ac80
    2e80:	.word	0x0000d873
    2e84:	.word	0x0002ac0c
    2e88:	.word	0x0002abd0
    2e8c:	.word	0x0002aba8
    2e90:	.word	0x0002ab58
    2e94:	.word	0x0002ab00
    2e98:	.word	0x0002aacc
    2e9c:	.word	0x0002aa74
    2ea0:	.word	0x0002aa2c
    2ea4:	.word	0x0002aa08
    2ea8:	.word	0x0002a9b4
    2eac:	.word	0x0002a978
    2eb0:	.word	0x0002a958
    2eb4:	.word	0x0002a920
    2eb8:	.word	0x0002a8ec
    2ebc:	.word	0x0002a8b4
    2ec0:	.word	0x0002a88c
    2ec4:	.word	0x0002a868
    2ec8:	.word	0x0000d46d
    2ecc:	.word	0x0002a7e4
    2ed0:	.word	0x0002a7c0
    2ed4:	.word	0x0002a798
    2ed8:	.word	0x0002a778
    2edc:	.word	0x0002a76c
    2ee0:	.word	0x0002a75c
    2ee4:	.word	0x0002a748
    2ee8:	.word	0x0002a704
    2eec:	.word	0x0002a6e0
    2ef0:	.word	0x0002a6bc
    2ef4:	.word	0x0002a6ac
    2ef8:	.word	0x0002a628
    2efc:	.word	0x0002a61c
    2f00:	.word	0x0002a610
    2f04:	.word	0x0002a604
    2f08:	.word	0x0002a5dc
    2f0c:	.word	0x0002a5d0
    2f10:	.word	0x0002a584
    2f14:	.word	0x0000d1bb
    2f18:	.word	0x0002a540

00002f1c <sfbpf_freecode>:
    2f1c:	push	{r4, r5, r6, lr}
    2f20:	mov	r5, #0
    2f24:	ldr	r3, [r0, #4]
    2f28:	str	r5, [r0]
    2f2c:	cmp	r3, r5
    2f30:	popeq	{r4, r5, r6, pc}
    2f34:	mov	r4, r0
    2f38:	mov	r0, r3
    2f3c:	bl	dc4 <free@plt>
    2f40:	str	r5, [r4, #4]
    2f44:	pop	{r4, r5, r6, pc}

00002f48 <sf_gen_and>:
    2f48:	mov	r2, r1
    2f4c:	push	{r0, r1, r4, lr}
    2f50:	mov	r4, r0
    2f54:	ldr	r1, [r1, #96]	; 0x60
    2f58:	bl	1fb4 <backpatch>
    2f5c:	ldr	r3, [r4, #44]	; 0x2c
    2f60:	clz	r3, r3
    2f64:	lsr	r3, r3, #5
    2f68:	str	r3, [r4, #44]	; 0x2c
    2f6c:	ldr	r3, [r2, #44]	; 0x2c
    2f70:	clz	r3, r3
    2f74:	lsr	r3, r3, #5
    2f78:	str	r3, [r2, #44]	; 0x2c
    2f7c:	add	r3, sp, #8
    2f80:	str	r2, [r3, #-4]!
    2f84:	ldr	r1, [r3]
    2f88:	cmp	r1, #0
    2f8c:	bne	2fb4 <sf_gen_and+0x6c>
    2f90:	str	r4, [r3]
    2f94:	ldr	r3, [r2, #44]	; 0x2c
    2f98:	clz	r3, r3
    2f9c:	lsr	r3, r3, #5
    2fa0:	str	r3, [r2, #44]	; 0x2c
    2fa4:	ldr	r3, [r4, #96]	; 0x60
    2fa8:	str	r3, [r2, #96]	; 0x60
    2fac:	add	sp, sp, #8
    2fb0:	pop	{r4, pc}
    2fb4:	ldr	r3, [r1, #44]	; 0x2c
    2fb8:	cmp	r3, #0
    2fbc:	addeq	r3, r1, #60	; 0x3c
    2fc0:	addne	r3, r1, #84	; 0x54
    2fc4:	b	2f84 <sf_gen_and+0x3c>

00002fc8 <sf_gen_or>:
    2fc8:	ldr	r3, [r0, #44]	; 0x2c
    2fcc:	clz	r3, r3
    2fd0:	lsr	r3, r3, #5
    2fd4:	push	{r0, r1, r4, lr}
    2fd8:	mov	r4, r1
    2fdc:	str	r3, [r0, #44]	; 0x2c
    2fe0:	ldr	r1, [r1, #96]	; 0x60
    2fe4:	mov	r2, r0
    2fe8:	bl	1fb4 <backpatch>
    2fec:	ldr	r3, [r2, #44]	; 0x2c
    2ff0:	clz	r3, r3
    2ff4:	lsr	r3, r3, #5
    2ff8:	str	r3, [r2, #44]	; 0x2c
    2ffc:	add	r3, sp, #8
    3000:	str	r4, [r3, #-4]!
    3004:	ldr	r1, [r3]
    3008:	cmp	r1, #0
    300c:	bne	3024 <sf_gen_or+0x5c>
    3010:	str	r2, [r3]
    3014:	ldr	r3, [r2, #96]	; 0x60
    3018:	str	r3, [r4, #96]	; 0x60
    301c:	add	sp, sp, #8
    3020:	pop	{r4, pc}
    3024:	ldr	r3, [r1, #44]	; 0x2c
    3028:	cmp	r3, #0
    302c:	addeq	r3, r1, #60	; 0x3c
    3030:	addne	r3, r1, #84	; 0x54
    3034:	b	3004 <sf_gen_or+0x3c>

00003038 <sf_gen_not>:
    3038:	ldr	r3, [r0, #44]	; 0x2c
    303c:	clz	r3, r3
    3040:	lsr	r3, r3, #5
    3044:	str	r3, [r0, #44]	; 0x2c
    3048:	bx	lr

0000304c <sf_append>:
    304c:	ldr	r3, [r0, #16]
    3050:	cmp	r3, #0
    3054:	bne	3060 <sf_append+0x14>
    3058:	str	r1, [r0, #16]
    305c:	bx	lr
    3060:	mov	r0, r3
    3064:	b	304c <sf_append>

00003068 <gen_load_ppi_llprefixlen>:
    3068:	ldr	r3, [pc, #196]	; 3134 <gen_load_ppi_llprefixlen+0xcc>
    306c:	push	{r4, r5, r6, lr}
    3070:	add	r3, pc, r3
    3074:	ldr	r5, [r3, #852]	; 0x354
    3078:	cmn	r5, #1
    307c:	moveq	r4, #0
    3080:	beq	312c <gen_load_ppi_llprefixlen+0xc4>
    3084:	mov	r0, #48	; 0x30
    3088:	bl	21bc <new_stmt>
    308c:	mov	r3, #3
    3090:	mov	r6, #2
    3094:	mov	r4, r0
    3098:	str	r3, [r0, #12]
    309c:	mov	r0, #100	; 0x64
    30a0:	bl	21bc <new_stmt>
    30a4:	mov	r2, r0
    30a8:	mov	r1, r0
    30ac:	mov	r0, r4
    30b0:	bl	304c <sf_append>
    30b4:	mov	r3, #8
    30b8:	mov	r0, #7
    30bc:	str	r3, [r2, #12]
    30c0:	bl	21bc <new_stmt>
    30c4:	mov	r1, r0
    30c8:	mov	r0, r4
    30cc:	bl	304c <sf_append>
    30d0:	mov	r0, #48	; 0x30
    30d4:	bl	21bc <new_stmt>
    30d8:	mov	r2, r0
    30dc:	mov	r1, r0
    30e0:	mov	r0, r4
    30e4:	bl	304c <sf_append>
    30e8:	mov	r0, #76	; 0x4c
    30ec:	str	r6, [r2, #12]
    30f0:	bl	21bc <new_stmt>
    30f4:	mov	r1, r0
    30f8:	mov	r0, r4
    30fc:	bl	304c <sf_append>
    3100:	mov	r0, r6
    3104:	bl	21bc <new_stmt>
    3108:	mov	r1, r0
    310c:	str	r5, [r0, #12]
    3110:	mov	r0, r4
    3114:	bl	304c <sf_append>
    3118:	mov	r0, #7
    311c:	bl	21bc <new_stmt>
    3120:	mov	r1, r0
    3124:	mov	r0, r4
    3128:	bl	304c <sf_append>
    312c:	mov	r0, r4
    3130:	pop	{r4, r5, r6, pc}
    3134:	.word	0x0002a2f8

00003138 <sf_finish_parse>:
    3138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    313c:	sub	sp, sp, #20
    3140:	ldr	r3, [r0, #96]	; 0x60
    3144:	ldr	r9, [pc, #1380]	; 36b0 <sf_finish_parse+0x578>
    3148:	str	r3, [sp, #4]
    314c:	ldr	r3, [pc, #1376]	; 36b4 <sf_finish_parse+0x57c>
    3150:	add	r9, pc, r9
    3154:	add	r3, pc, r3
    3158:	mov	r6, r0
    315c:	ldr	r5, [r3, #856]	; 0x358
    3160:	cmp	r5, #127	; 0x7f
    3164:	beq	35f0 <sf_finish_parse+0x4b8>
    3168:	bgt	3198 <sf_finish_parse+0x60>
    316c:	cmp	r5, #119	; 0x77
    3170:	beq	31b0 <sf_finish_parse+0x78>
    3174:	cmp	r5, #127	; 0x7f
    3178:	beq	3190 <sf_finish_parse+0x58>
    317c:	bgt	35fc <sf_finish_parse+0x4c4>
    3180:	cmp	r5, #105	; 0x69
    3184:	beq	3190 <sf_finish_parse+0x58>
    3188:	cmp	r5, #119	; 0x77
    318c:	bne	3674 <sf_finish_parse+0x53c>
    3190:	mov	r4, #0
    3194:	b	32bc <sf_finish_parse+0x184>
    3198:	cmp	r5, #163	; 0xa3
    319c:	beq	35b4 <sf_finish_parse+0x47c>
    31a0:	cmp	r5, #192	; 0xc0
    31a4:	bne	3174 <sf_finish_parse+0x3c>
    31a8:	bl	3068 <gen_load_ppi_llprefixlen>
    31ac:	b	35f4 <sf_finish_parse+0x4bc>
    31b0:	ldr	r2, [pc, #1280]	; 36b8 <sf_finish_parse+0x580>
    31b4:	ldr	sl, [r3, #852]	; 0x354
    31b8:	mov	fp, #1
    31bc:	ldr	r2, [r9, r2]
    31c0:	cmn	sl, #1
    31c4:	str	fp, [r2]
    31c8:	beq	3190 <sf_finish_parse+0x58>
    31cc:	mov	r0, #32
    31d0:	bl	21bc <new_stmt>
    31d4:	mov	r3, #0
    31d8:	str	r3, [sp, #8]
    31dc:	str	r3, [r0, #12]
    31e0:	mov	r4, r0
    31e4:	mov	r0, #84	; 0x54
    31e8:	bl	21bc <new_stmt>
    31ec:	ldr	r2, [pc, #1224]	; 36bc <sf_finish_parse+0x584>
    31f0:	mov	r1, r0
    31f4:	str	r2, [r0, #12]
    31f8:	mov	r0, r4
    31fc:	bl	304c <sf_append>
    3200:	mov	r0, #21
    3204:	bl	21bc <new_stmt>
    3208:	ldr	r2, [pc, #1200]	; 36c0 <sf_finish_parse+0x588>
    320c:	mov	r1, r0
    3210:	str	r2, [r0, #12]
    3214:	mov	r7, r0
    3218:	mov	r0, r4
    321c:	bl	304c <sf_append>
    3220:	mov	r0, #32
    3224:	bl	21bc <new_stmt>
    3228:	mov	r1, #4
    322c:	mov	r2, r0
    3230:	str	r1, [r0, #12]
    3234:	mov	r1, r0
    3238:	mov	r0, r4
    323c:	bl	304c <sf_append>
    3240:	mov	r0, #5
    3244:	str	r2, [r7, #4]
    3248:	bl	21bc <new_stmt>
    324c:	mov	r1, r0
    3250:	mov	r8, r0
    3254:	str	fp, [r0, #12]
    3258:	mov	r0, r4
    325c:	bl	304c <sf_append>
    3260:	ldr	r3, [sp, #8]
    3264:	mov	r0, r3
    3268:	bl	21bc <new_stmt>
    326c:	mov	r3, #144	; 0x90
    3270:	mov	r2, r0
    3274:	str	r3, [r0, #12]
    3278:	mov	r1, r0
    327c:	mov	r0, r4
    3280:	bl	304c <sf_append>
    3284:	mov	r0, #2
    3288:	str	r2, [r7, #8]
    328c:	bl	21bc <new_stmt>
    3290:	mov	r2, r0
    3294:	str	sl, [r0, #12]
    3298:	mov	r1, r0
    329c:	mov	r0, r4
    32a0:	bl	304c <sf_append>
    32a4:	str	r2, [r8, #8]
    32a8:	mov	r0, #7
    32ac:	bl	21bc <new_stmt>
    32b0:	mov	r1, r0
    32b4:	mov	r0, r4
    32b8:	bl	304c <sf_append>
    32bc:	ldr	sl, [pc, #1024]	; 36c4 <sf_finish_parse+0x58c>
    32c0:	add	sl, pc, sl
    32c4:	ldr	r8, [sl, #864]	; 0x360
    32c8:	cmn	r8, #1
    32cc:	beq	366c <sf_finish_parse+0x534>
    32d0:	ldr	r3, [sp, #4]
    32d4:	mov	r0, #1
    32d8:	cmp	r4, #0
    32dc:	ldr	r7, [r3, #4]
    32e0:	ldr	r3, [pc, #976]	; 36b8 <sf_finish_parse+0x580>
    32e4:	ldr	r3, [r9, r3]
    32e8:	str	r0, [r3]
    32ec:	bne	3300 <sf_finish_parse+0x1c8>
    32f0:	bl	21bc <new_stmt>
    32f4:	ldr	r3, [sl, #936]	; 0x3a8
    32f8:	mov	r4, r0
    32fc:	str	r3, [r0, #12]
    3300:	mov	r0, #135	; 0x87
    3304:	bl	21bc <new_stmt>
    3308:	mov	sl, #4
    330c:	mov	r1, r0
    3310:	mov	r0, r4
    3314:	bl	304c <sf_append>
    3318:	mov	r0, #4
    331c:	bl	21bc <new_stmt>
    3320:	mov	r3, #24
    3324:	str	r3, [r0, #12]
    3328:	mov	r1, r0
    332c:	mov	r0, r4
    3330:	bl	304c <sf_append>
    3334:	mov	r0, #2
    3338:	bl	21bc <new_stmt>
    333c:	mov	r1, r0
    3340:	str	r8, [r0, #12]
    3344:	mov	r0, r4
    3348:	bl	304c <sf_append>
    334c:	mov	r0, #80	; 0x50
    3350:	bl	21bc <new_stmt>
    3354:	mov	r3, #0
    3358:	mov	r1, r0
    335c:	str	r3, [r0, #12]
    3360:	mov	r0, r4
    3364:	bl	304c <sf_append>
    3368:	mov	r0, #69	; 0x45
    336c:	bl	21bc <new_stmt>
    3370:	mov	r3, #8
    3374:	str	r3, [r0, #12]
    3378:	mov	r9, r0
    337c:	mov	r1, r0
    3380:	mov	r0, r4
    3384:	bl	304c <sf_append>
    3388:	mov	r0, #69	; 0x45
    338c:	bl	21bc <new_stmt>
    3390:	mov	fp, r0
    3394:	str	r0, [r9, #4]
    3398:	mov	r1, r0
    339c:	str	sl, [r0, #12]
    33a0:	mov	r0, r4
    33a4:	bl	304c <sf_append>
    33a8:	str	r7, [r9, #8]
    33ac:	mov	r0, #69	; 0x45
    33b0:	str	r7, [fp, #4]
    33b4:	bl	21bc <new_stmt>
    33b8:	mov	r2, #128	; 0x80
    33bc:	str	r0, [fp, #8]
    33c0:	mov	r1, r0
    33c4:	str	r2, [r0, #12]
    33c8:	mov	r9, r0
    33cc:	mov	r0, r4
    33d0:	bl	304c <sf_append>
    33d4:	mov	r0, #96	; 0x60
    33d8:	bl	21bc <new_stmt>
    33dc:	mov	fp, #2
    33e0:	mov	r1, r0
    33e4:	str	r0, [r9, #4]
    33e8:	str	r8, [r0, #12]
    33ec:	mov	r0, r4
    33f0:	bl	304c <sf_append>
    33f4:	mov	r0, sl
    33f8:	bl	21bc <new_stmt>
    33fc:	mov	r1, r0
    3400:	str	fp, [r0, #12]
    3404:	mov	r0, r4
    3408:	bl	304c <sf_append>
    340c:	mov	r0, fp
    3410:	bl	21bc <new_stmt>
    3414:	mov	r1, r0
    3418:	str	r8, [r0, #12]
    341c:	mov	r0, r4
    3420:	bl	304c <sf_append>
    3424:	cmp	r5, #127	; 0x7f
    3428:	bne	3594 <sf_finish_parse+0x45c>
    342c:	mov	r0, #32
    3430:	bl	21bc <new_stmt>
    3434:	mov	r1, r0
    3438:	str	r0, [r9, #8]
    343c:	str	sl, [r0, #12]
    3440:	mov	r0, r4
    3444:	bl	304c <sf_append>
    3448:	mov	r0, #69	; 0x45
    344c:	bl	21bc <new_stmt>
    3450:	mov	r3, #33554432	; 0x2000000
    3454:	str	r3, [r0, #12]
    3458:	mov	r1, r0
    345c:	str	r0, [sp, #8]
    3460:	mov	r0, r4
    3464:	bl	304c <sf_append>
    3468:	ldr	r2, [sp, #8]
    346c:	mov	r0, #69	; 0x45
    3470:	str	r7, [r2, #8]
    3474:	bl	21bc <new_stmt>
    3478:	ldr	r2, [sp, #8]
    347c:	str	r0, [r2, #4]
    3480:	mov	r2, #16777216	; 0x1000000
    3484:	mov	r9, r0
    3488:	str	r2, [r0, #12]
    348c:	mov	r1, r0
    3490:	mov	r0, r4
    3494:	bl	304c <sf_append>
    3498:	mov	r0, #48	; 0x30
    349c:	bl	21bc <new_stmt>
    34a0:	mov	r2, #16
    34a4:	mov	r1, r0
    34a8:	str	r0, [r9, #4]
    34ac:	str	r2, [r0, #12]
    34b0:	mov	r0, r4
    34b4:	bl	304c <sf_append>
    34b8:	mov	r0, #69	; 0x45
    34bc:	bl	21bc <new_stmt>
    34c0:	mov	r3, #32
    34c4:	str	r3, [r0, #12]
    34c8:	mov	r1, r0
    34cc:	str	r0, [sp, #12]
    34d0:	mov	r0, r4
    34d4:	bl	304c <sf_append>
    34d8:	mov	r0, #48	; 0x30
    34dc:	bl	21bc <new_stmt>
    34e0:	mov	r3, #8
    34e4:	mov	r1, r0
    34e8:	str	r0, [r9, #8]
    34ec:	str	r3, [r0, #12]
    34f0:	mov	r0, r4
    34f4:	bl	304c <sf_append>
    34f8:	mov	r0, #69	; 0x45
    34fc:	bl	21bc <new_stmt>
    3500:	mov	r3, #32
    3504:	str	r3, [r0, #12]
    3508:	mov	r1, r0
    350c:	mov	r9, r0
    3510:	mov	r0, r4
    3514:	bl	304c <sf_append>
    3518:	mov	r0, #96	; 0x60
    351c:	bl	21bc <new_stmt>
    3520:	mov	r1, r0
    3524:	str	r8, [r0, #12]
    3528:	str	r0, [sp, #8]
    352c:	mov	r0, r4
    3530:	bl	304c <sf_append>
    3534:	mov	r0, sl
    3538:	bl	21bc <new_stmt>
    353c:	mov	r1, r0
    3540:	mov	r0, #3
    3544:	str	r0, [r1, #12]
    3548:	mov	r0, r4
    354c:	bl	304c <sf_append>
    3550:	mov	r0, #84	; 0x54
    3554:	bl	21bc <new_stmt>
    3558:	mov	r1, r0
    355c:	mvn	r0, #3
    3560:	str	r0, [r1, #12]
    3564:	mov	r0, r4
    3568:	bl	304c <sf_append>
    356c:	mov	r0, fp
    3570:	bl	21bc <new_stmt>
    3574:	mov	r1, r0
    3578:	str	r8, [r0, #12]
    357c:	mov	r0, r4
    3580:	bl	304c <sf_append>
    3584:	ldr	r3, [sp, #8]
    3588:	ldr	r2, [sp, #12]
    358c:	stmib	r2, {r3, r7}
    3590:	str	r3, [r9, #4]
    3594:	str	r7, [r9, #8]
    3598:	ldr	r3, [sp, #4]
    359c:	mov	r0, r4
    35a0:	ldr	r1, [r3, #4]
    35a4:	bl	304c <sf_append>
    35a8:	ldr	r3, [sp, #4]
    35ac:	str	r4, [r3, #4]
    35b0:	b	3674 <sf_finish_parse+0x53c>
    35b4:	ldr	r7, [r3, #852]	; 0x354
    35b8:	cmn	r7, #1
    35bc:	beq	3190 <sf_finish_parse+0x58>
    35c0:	mov	r0, #32
    35c4:	bl	21bc <new_stmt>
    35c8:	mov	r3, #4
    35cc:	mov	r4, r0
    35d0:	str	r3, [r0, #12]
    35d4:	mov	r0, #2
    35d8:	bl	21bc <new_stmt>
    35dc:	mov	r1, r0
    35e0:	str	r7, [r0, #12]
    35e4:	mov	r0, r4
    35e8:	bl	304c <sf_append>
    35ec:	b	32a8 <sf_finish_parse+0x170>
    35f0:	bl	3068 <gen_load_ppi_llprefixlen>
    35f4:	mov	r4, r0
    35f8:	b	32bc <sf_finish_parse+0x184>
    35fc:	cmp	r5, #163	; 0xa3
    3600:	beq	3190 <sf_finish_parse+0x58>
    3604:	cmp	r5, #192	; 0xc0
    3608:	beq	3190 <sf_finish_parse+0x58>
    360c:	ldr	r4, [pc, #180]	; 36c8 <sf_finish_parse+0x590>
    3610:	mov	r0, #6
    3614:	add	r4, pc, r4
    3618:	ldr	r5, [r4, #880]	; 0x370
    361c:	bl	219c <new_block>
    3620:	mov	r1, r0
    3624:	str	r5, [r0, #20]
    3628:	mov	r0, r6
    362c:	bl	1fb4 <backpatch>
    3630:	ldr	r3, [r6, #44]	; 0x2c
    3634:	clz	r3, r3
    3638:	lsr	r3, r3, #5
    363c:	str	r3, [r6, #44]	; 0x2c
    3640:	mov	r0, #6
    3644:	bl	219c <new_block>
    3648:	mov	r3, #0
    364c:	mov	r1, r0
    3650:	str	r3, [r0, #20]
    3654:	mov	r0, r6
    3658:	bl	1fb4 <backpatch>
    365c:	ldr	r3, [r6, #96]	; 0x60
    3660:	str	r3, [r4, #868]	; 0x364
    3664:	add	sp, sp, #20
    3668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    366c:	cmp	r4, #0
    3670:	bne	3598 <sf_finish_parse+0x460>
    3674:	cmp	r5, #192	; 0xc0
    3678:	bne	360c <sf_finish_parse+0x4d4>
    367c:	mov	r0, #32
    3680:	bl	21bc <new_stmt>
    3684:	mov	r3, #4
    3688:	mov	r4, r0
    368c:	str	r3, [r0, #12]
    3690:	mov	r0, #21
    3694:	bl	219c <new_block>
    3698:	mov	r2, #1761607680	; 0x69000000
    369c:	mov	r1, r6
    36a0:	str	r4, [r0, #4]
    36a4:	str	r2, [r0, #20]
    36a8:	bl	2f48 <sf_gen_and>
    36ac:	b	360c <sf_finish_parse+0x4d4>
    36b0:	.word	0x00029ea8
    36b4:	.word	0x0002a214
    36b8:	.word	0x00000108
    36bc:	.word	0xfffff000
    36c0:	.word	0x80211000
    36c4:	.word	0x0002a0a8
    36c8:	.word	0x00029d54

000036cc <gen_load_llrel>:
    36cc:	push	{r4, r5, r6, lr}
    36d0:	mov	r5, r0
    36d4:	mov	r6, r1
    36d8:	bl	234c <gen_llprefixlen>
    36dc:	subs	r4, r0, #0
    36e0:	beq	3704 <gen_load_llrel+0x38>
    36e4:	orr	r0, r6, #64	; 0x40
    36e8:	bl	21bc <new_stmt>
    36ec:	mov	r1, r0
    36f0:	str	r5, [r0, #12]
    36f4:	mov	r0, r4
    36f8:	bl	304c <sf_append>
    36fc:	mov	r0, r4
    3700:	pop	{r4, r5, r6, pc}
    3704:	orr	r0, r6, #32
    3708:	bl	21bc <new_stmt>
    370c:	ldr	r3, [pc, #20]	; 3728 <gen_load_llrel+0x5c>
    3710:	add	r3, pc, r3
    3714:	mov	r4, r0
    3718:	ldr	r0, [r3, #936]	; 0x3a8
    371c:	add	r0, r0, r5
    3720:	str	r0, [r4, #12]
    3724:	b	36fc <gen_load_llrel+0x30>
    3728:	.word	0x00029c58

0000372c <gen_mac_multicast>:
    372c:	push	{r4, lr}
    3730:	mov	r1, #16
    3734:	bl	36cc <gen_load_llrel>
    3738:	mov	r4, r0
    373c:	mov	r0, #69	; 0x45
    3740:	bl	219c <new_block>
    3744:	mov	r2, #1
    3748:	str	r2, [r0, #20]
    374c:	str	r4, [r0, #4]
    3750:	pop	{r4, pc}

00003754 <gen_loadx_iphdrlen>:
    3754:	push	{r4, lr}
    3758:	bl	2398 <gen_off_macpl>
    375c:	subs	r4, r0, #0
    3760:	beq	37f0 <gen_loadx_iphdrlen+0x9c>
    3764:	mov	r0, #80	; 0x50
    3768:	bl	21bc <new_stmt>
    376c:	ldr	r3, [pc, #164]	; 3818 <gen_loadx_iphdrlen+0xc4>
    3770:	add	r3, pc, r3
    3774:	ldr	r3, [r3, #948]	; 0x3b4
    3778:	mov	r1, r0
    377c:	str	r3, [r0, #12]
    3780:	mov	r0, r4
    3784:	bl	304c <sf_append>
    3788:	mov	r0, #84	; 0x54
    378c:	bl	21bc <new_stmt>
    3790:	mov	r3, #15
    3794:	mov	r1, r0
    3798:	str	r3, [r0, #12]
    379c:	mov	r0, r4
    37a0:	bl	304c <sf_append>
    37a4:	mov	r0, #100	; 0x64
    37a8:	bl	21bc <new_stmt>
    37ac:	mov	r3, #2
    37b0:	str	r3, [r0, #12]
    37b4:	mov	r1, r0
    37b8:	mov	r0, r4
    37bc:	bl	304c <sf_append>
    37c0:	mov	r0, #12
    37c4:	bl	21bc <new_stmt>
    37c8:	mov	r1, r0
    37cc:	mov	r0, r4
    37d0:	bl	304c <sf_append>
    37d4:	mov	r0, #7
    37d8:	bl	21bc <new_stmt>
    37dc:	mov	r1, r0
    37e0:	mov	r0, r4
    37e4:	bl	304c <sf_append>
    37e8:	mov	r0, r4
    37ec:	pop	{r4, pc}
    37f0:	mov	r0, #177	; 0xb1
    37f4:	bl	21bc <new_stmt>
    37f8:	ldr	r2, [pc, #28]	; 381c <gen_loadx_iphdrlen+0xc8>
    37fc:	add	r2, pc, r2
    3800:	ldr	r3, [r2, #940]	; 0x3ac
    3804:	ldr	r2, [r2, #948]	; 0x3b4
    3808:	add	r3, r3, r2
    380c:	mov	r4, r0
    3810:	str	r3, [r0, #12]
    3814:	b	37e8 <gen_loadx_iphdrlen+0x94>
    3818:	.word	0x00029bf8
    381c:	.word	0x00029b6c

00003820 <gen_load_macplrel>:
    3820:	push	{r4, r5, r6, lr}
    3824:	mov	r5, r0
    3828:	mov	r6, r1
    382c:	bl	2398 <gen_off_macpl>
    3830:	subs	r4, r0, #0
    3834:	beq	3858 <gen_load_macplrel+0x38>
    3838:	orr	r0, r6, #64	; 0x40
    383c:	bl	21bc <new_stmt>
    3840:	mov	r1, r0
    3844:	str	r5, [r0, #12]
    3848:	mov	r0, r4
    384c:	bl	304c <sf_append>
    3850:	mov	r0, r4
    3854:	pop	{r4, r5, r6, pc}
    3858:	orr	r0, r6, #32
    385c:	bl	21bc <new_stmt>
    3860:	ldr	r3, [pc, #20]	; 387c <gen_load_macplrel+0x5c>
    3864:	add	r3, pc, r3
    3868:	mov	r4, r0
    386c:	ldr	r0, [r3, #940]	; 0x3ac
    3870:	add	r0, r0, r5
    3874:	str	r0, [r4, #12]
    3878:	b	3850 <gen_load_macplrel+0x30>
    387c:	.word	0x00029b04

00003880 <gen_ipfrag>:
    3880:	ldr	r3, [pc, #64]	; 38c8 <gen_ipfrag+0x48>
    3884:	push	{r4, lr}
    3888:	add	r3, pc, r3
    388c:	mov	r1, #8
    3890:	ldr	r0, [r3, #948]	; 0x3b4
    3894:	add	r0, r0, #6
    3898:	bl	3820 <gen_load_macplrel>
    389c:	mov	r4, r0
    38a0:	mov	r0, #69	; 0x45
    38a4:	bl	219c <new_block>
    38a8:	ldr	r3, [pc, #28]	; 38cc <gen_ipfrag+0x4c>
    38ac:	str	r3, [r0, #20]
    38b0:	ldr	r3, [r0, #44]	; 0x2c
    38b4:	clz	r3, r3
    38b8:	lsr	r3, r3, #5
    38bc:	str	r4, [r0, #4]
    38c0:	str	r3, [r0, #44]	; 0x2c
    38c4:	pop	{r4, pc}
    38c8:	.word	0x00029ae0
    38cc:	.word	0x00001fff

000038d0 <gen_ncmp>:
    38d0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    38d4:	mov	r5, r1
    38d8:	mov	r7, r3
    38dc:	mov	r1, r2
    38e0:	ldr	r6, [sp, #32]
    38e4:	cmp	r0, #6
    38e8:	addls	pc, pc, r0, lsl #2
    38ec:	b	3a14 <gen_ncmp+0x144>
    38f0:	b	390c <gen_ncmp+0x3c>
    38f4:	b	397c <gen_ncmp+0xac>
    38f8:	b	398c <gen_ncmp+0xbc>
    38fc:	b	3998 <gen_ncmp+0xc8>
    3900:	b	39ac <gen_ncmp+0xdc>
    3904:	b	39bc <gen_ncmp+0xec>
    3908:	b	3a00 <gen_ncmp+0x130>
    390c:	orr	r0, r2, #32
    3910:	bl	21bc <new_stmt>
    3914:	mov	r4, r0
    3918:	str	r5, [r0, #12]
    391c:	cmn	r7, #1
    3920:	beq	393c <gen_ncmp+0x6c>
    3924:	mov	r0, #84	; 0x54
    3928:	bl	21bc <new_stmt>
    392c:	mov	r1, r0
    3930:	str	r7, [r0, #12]
    3934:	mov	r0, r4
    3938:	bl	304c <sf_append>
    393c:	orr	r0, r6, #5
    3940:	bl	219c <new_block>
    3944:	ldr	r3, [sp, #40]	; 0x28
    3948:	str	r3, [r0, #20]
    394c:	ldr	r3, [sp, #36]	; 0x24
    3950:	str	r4, [r0, #4]
    3954:	cmp	r3, #0
    3958:	beq	3974 <gen_ncmp+0xa4>
    395c:	bic	r6, r6, #16
    3960:	cmp	r6, #32
    3964:	ldreq	r3, [r0, #44]	; 0x2c
    3968:	clzeq	r3, r3
    396c:	lsreq	r3, r3, #5
    3970:	streq	r3, [r0, #44]	; 0x2c
    3974:	add	sp, sp, #12
    3978:	pop	{r4, r5, r6, r7, pc}
    397c:	mov	r0, r5
    3980:	bl	36cc <gen_load_llrel>
    3984:	mov	r4, r0
    3988:	b	391c <gen_ncmp+0x4c>
    398c:	mov	r0, r5
    3990:	bl	3820 <gen_load_macplrel>
    3994:	b	3984 <gen_ncmp+0xb4>
    3998:	ldr	r3, [pc, #120]	; 3a18 <gen_ncmp+0x148>
    399c:	add	r3, pc, r3
    39a0:	ldr	r0, [r3, #948]	; 0x3b4
    39a4:	add	r0, r0, r5
    39a8:	b	3990 <gen_ncmp+0xc0>
    39ac:	ldr	r3, [pc, #104]	; 3a1c <gen_ncmp+0x14c>
    39b0:	add	r3, pc, r3
    39b4:	ldr	r0, [r3, #952]	; 0x3b8
    39b8:	b	39a4 <gen_ncmp+0xd4>
    39bc:	str	r2, [sp, #4]
    39c0:	bl	3754 <gen_loadx_iphdrlen>
    39c4:	ldr	r1, [sp, #4]
    39c8:	mov	r4, r0
    39cc:	orr	r0, r1, #64	; 0x40
    39d0:	bl	21bc <new_stmt>
    39d4:	ldr	r2, [pc, #68]	; 3a20 <gen_ncmp+0x150>
    39d8:	add	r2, pc, r2
    39dc:	ldr	r3, [r2, #940]	; 0x3ac
    39e0:	ldr	r2, [r2, #948]	; 0x3b4
    39e4:	add	r3, r3, r2
    39e8:	add	r5, r3, r5
    39ec:	mov	r1, r0
    39f0:	str	r5, [r0, #12]
    39f4:	mov	r0, r4
    39f8:	bl	304c <sf_append>
    39fc:	b	391c <gen_ncmp+0x4c>
    3a00:	ldr	r3, [pc, #28]	; 3a24 <gen_ncmp+0x154>
    3a04:	add	r3, pc, r3
    3a08:	ldr	r0, [r3, #948]	; 0x3b4
    3a0c:	add	r0, r0, #40	; 0x28
    3a10:	b	39a4 <gen_ncmp+0xd4>
    3a14:	bl	f44 <abort@plt>
    3a18:	.word	0x000299cc
    3a1c:	.word	0x000299b8
    3a20:	.word	0x00029990
    3a24:	.word	0x00029964

00003a28 <gen_cmp>:
    3a28:	push	{r0, r1, r2, r3, r4, lr}
    3a2c:	mov	ip, #0
    3a30:	str	r3, [sp, #8]
    3a34:	mov	r3, #16
    3a38:	stm	sp, {r3, ip}
    3a3c:	mvn	r3, #0
    3a40:	bl	38d0 <gen_ncmp>
    3a44:	add	sp, sp, #20
    3a48:	pop	{pc}		; (ldr pc, [sp], #4)

00003a4c <gen_bcmp>:
    3a4c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3a50:	mov	r4, #0
    3a54:	mov	r8, r0
    3a58:	mov	r9, r1
    3a5c:	mov	r5, r2
    3a60:	mov	sl, r3
    3a64:	add	r7, r3, r2
    3a68:	mov	r6, r2
    3a6c:	mov	fp, r4
    3a70:	cmp	r6, #3
    3a74:	bhi	3ad4 <gen_bcmp+0x88>
    3a78:	and	r5, r5, #3
    3a7c:	add	r6, sl, r5
    3a80:	mov	r3, r5
    3a84:	mov	r7, #8
    3a88:	cmp	r3, #1
    3a8c:	bhi	3b34 <gen_bcmp+0xe8>
    3a90:	tst	r5, #1
    3a94:	moveq	r5, r4
    3a98:	beq	3ac8 <gen_bcmp+0x7c>
    3a9c:	ldrb	r3, [sl]
    3aa0:	mov	r2, #16
    3aa4:	mov	r1, r9
    3aa8:	mov	r0, r8
    3aac:	bl	3a28 <gen_cmp>
    3ab0:	cmp	r4, #0
    3ab4:	mov	r5, r0
    3ab8:	beq	3ac8 <gen_bcmp+0x7c>
    3abc:	mov	r1, r0
    3ac0:	mov	r0, r4
    3ac4:	bl	2f48 <sf_gen_and>
    3ac8:	mov	r0, r5
    3acc:	add	sp, sp, #12
    3ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3ad4:	ldrb	r3, [r7, #-3]
    3ad8:	ldrb	r2, [r7, #-4]
    3adc:	sub	r6, r6, #4
    3ae0:	add	r1, r6, r9
    3ae4:	lsl	r3, r3, #16
    3ae8:	orr	r3, r3, r2, lsl #24
    3aec:	ldrb	r2, [r7, #-1]
    3af0:	mov	r0, r8
    3af4:	orr	r3, r3, r2
    3af8:	ldrb	r2, [r7, #-2]
    3afc:	orr	r3, r3, r2, lsl #8
    3b00:	mov	r2, fp
    3b04:	bl	3a28 <gen_cmp>
    3b08:	cmp	r4, #0
    3b0c:	mov	r3, r0
    3b10:	beq	3b28 <gen_bcmp+0xdc>
    3b14:	mov	r1, r0
    3b18:	str	r0, [sp, #4]
    3b1c:	mov	r0, r4
    3b20:	bl	2f48 <sf_gen_and>
    3b24:	ldr	r3, [sp, #4]
    3b28:	sub	r7, r7, #4
    3b2c:	mov	r4, r3
    3b30:	b	3a70 <gen_bcmp+0x24>
    3b34:	ldrb	r2, [r6, #-2]
    3b38:	sub	fp, r3, #2
    3b3c:	ldrb	r3, [r6, #-1]
    3b40:	add	r1, r9, fp
    3b44:	mov	r0, r8
    3b48:	orr	r3, r3, r2, lsl #8
    3b4c:	mov	r2, r7
    3b50:	bl	3a28 <gen_cmp>
    3b54:	cmp	r4, #0
    3b58:	mov	r2, r0
    3b5c:	beq	3b74 <gen_bcmp+0x128>
    3b60:	mov	r1, r0
    3b64:	str	r0, [sp, #4]
    3b68:	mov	r0, r4
    3b6c:	bl	2f48 <sf_gen_and>
    3b70:	ldr	r2, [sp, #4]
    3b74:	sub	r6, r6, #2
    3b78:	mov	r3, fp
    3b7c:	mov	r4, r2
    3b80:	b	3a88 <gen_bcmp+0x3c>

00003b84 <gen_snap>:
    3b84:	mvn	r3, #85	; 0x55
    3b88:	push	{r0, r1, r2, lr}
    3b8c:	mov	r2, #8
    3b90:	strb	r3, [sp]
    3b94:	strb	r3, [sp, #1]
    3b98:	mov	r3, #3
    3b9c:	strb	r3, [sp, #2]
    3ba0:	lsr	r3, r0, #16
    3ba4:	strb	r3, [sp, #3]
    3ba8:	lsr	r3, r0, #8
    3bac:	strb	r3, [sp, #4]
    3bb0:	lsr	r3, r1, #8
    3bb4:	strb	r0, [sp, #5]
    3bb8:	strb	r3, [sp, #6]
    3bbc:	strb	r1, [sp, #7]
    3bc0:	mov	r3, sp
    3bc4:	mov	r1, #0
    3bc8:	mov	r0, #2
    3bcc:	bl	3a4c <gen_bcmp>
    3bd0:	add	sp, sp, #12
    3bd4:	pop	{pc}		; (ldr pc, [sp], #4)

00003bd8 <gen_fhostop>:
    3bd8:	push	{r4, r5, r6, lr}
    3bdc:	mov	r4, r0
    3be0:	cmp	r1, #4
    3be4:	addls	pc, pc, r1, lsl #2
    3be8:	b	3c84 <gen_fhostop+0xac>
    3bec:	b	3c58 <gen_fhostop+0x80>
    3bf0:	b	3c00 <gen_fhostop+0x28>
    3bf4:	b	3c18 <gen_fhostop+0x40>
    3bf8:	b	3c58 <gen_fhostop+0x80>
    3bfc:	b	3c28 <gen_fhostop+0x50>
    3c00:	mov	r3, r0
    3c04:	mov	r2, #6
    3c08:	mov	r1, #7
    3c0c:	mov	r0, #1
    3c10:	pop	{r4, r5, r6, lr}
    3c14:	b	3a4c <gen_bcmp>
    3c18:	mov	r3, r0
    3c1c:	mov	r2, #6
    3c20:	mov	r1, #1
    3c24:	b	3c0c <gen_fhostop+0x34>
    3c28:	mov	r1, #1
    3c2c:	bl	3bd8 <gen_fhostop>
    3c30:	mov	r1, #2
    3c34:	mov	r5, r0
    3c38:	mov	r0, r4
    3c3c:	bl	3bd8 <gen_fhostop>
    3c40:	mov	r4, r0
    3c44:	mov	r1, r0
    3c48:	mov	r0, r5
    3c4c:	bl	2f48 <sf_gen_and>
    3c50:	mov	r0, r4
    3c54:	pop	{r4, r5, r6, pc}
    3c58:	mov	r1, #1
    3c5c:	bl	3bd8 <gen_fhostop>
    3c60:	mov	r1, #2
    3c64:	mov	r5, r0
    3c68:	mov	r0, r4
    3c6c:	bl	3bd8 <gen_fhostop>
    3c70:	mov	r4, r0
    3c74:	mov	r1, r0
    3c78:	mov	r0, r5
    3c7c:	bl	2fc8 <sf_gen_or>
    3c80:	b	3c50 <gen_fhostop+0x78>
    3c84:	bl	f44 <abort@plt>

00003c88 <gen_thostop>:
    3c88:	push	{r4, r5, r6, lr}
    3c8c:	mov	r4, r0
    3c90:	cmp	r1, #4
    3c94:	addls	pc, pc, r1, lsl #2
    3c98:	b	3d34 <gen_thostop+0xac>
    3c9c:	b	3d08 <gen_thostop+0x80>
    3ca0:	b	3cb0 <gen_thostop+0x28>
    3ca4:	b	3cc8 <gen_thostop+0x40>
    3ca8:	b	3d08 <gen_thostop+0x80>
    3cac:	b	3cd8 <gen_thostop+0x50>
    3cb0:	mov	r3, r0
    3cb4:	mov	r2, #6
    3cb8:	mov	r1, #8
    3cbc:	mov	r0, #1
    3cc0:	pop	{r4, r5, r6, lr}
    3cc4:	b	3a4c <gen_bcmp>
    3cc8:	mov	r3, r0
    3ccc:	mov	r2, #6
    3cd0:	mov	r1, #2
    3cd4:	b	3cbc <gen_thostop+0x34>
    3cd8:	mov	r1, #1
    3cdc:	bl	3c88 <gen_thostop>
    3ce0:	mov	r1, #2
    3ce4:	mov	r5, r0
    3ce8:	mov	r0, r4
    3cec:	bl	3c88 <gen_thostop>
    3cf0:	mov	r4, r0
    3cf4:	mov	r1, r0
    3cf8:	mov	r0, r5
    3cfc:	bl	2f48 <sf_gen_and>
    3d00:	mov	r0, r4
    3d04:	pop	{r4, r5, r6, pc}
    3d08:	mov	r1, #1
    3d0c:	bl	3c88 <gen_thostop>
    3d10:	mov	r1, #2
    3d14:	mov	r5, r0
    3d18:	mov	r0, r4
    3d1c:	bl	3c88 <gen_thostop>
    3d20:	mov	r4, r0
    3d24:	mov	r1, r0
    3d28:	mov	r0, r5
    3d2c:	bl	2fc8 <sf_gen_or>
    3d30:	b	3d00 <gen_thostop+0x78>
    3d34:	bl	f44 <abort@plt>

00003d38 <gen_ipfchostop>:
    3d38:	push	{r4, r5, r6, lr}
    3d3c:	mov	r4, r0
    3d40:	cmp	r1, #4
    3d44:	addls	pc, pc, r1, lsl #2
    3d48:	b	3de4 <gen_ipfchostop+0xac>
    3d4c:	b	3db8 <gen_ipfchostop+0x80>
    3d50:	b	3d60 <gen_ipfchostop+0x28>
    3d54:	b	3d78 <gen_ipfchostop+0x40>
    3d58:	b	3db8 <gen_ipfchostop+0x80>
    3d5c:	b	3d88 <gen_ipfchostop+0x50>
    3d60:	mov	r3, r0
    3d64:	mov	r2, #6
    3d68:	mov	r1, #10
    3d6c:	mov	r0, #1
    3d70:	pop	{r4, r5, r6, lr}
    3d74:	b	3a4c <gen_bcmp>
    3d78:	mov	r3, r0
    3d7c:	mov	r2, #6
    3d80:	mov	r1, #2
    3d84:	b	3d6c <gen_ipfchostop+0x34>
    3d88:	mov	r1, #1
    3d8c:	bl	3d38 <gen_ipfchostop>
    3d90:	mov	r1, #2
    3d94:	mov	r5, r0
    3d98:	mov	r0, r4
    3d9c:	bl	3d38 <gen_ipfchostop>
    3da0:	mov	r4, r0
    3da4:	mov	r1, r0
    3da8:	mov	r0, r5
    3dac:	bl	2f48 <sf_gen_and>
    3db0:	mov	r0, r4
    3db4:	pop	{r4, r5, r6, pc}
    3db8:	mov	r1, #1
    3dbc:	bl	3d38 <gen_ipfchostop>
    3dc0:	mov	r1, #2
    3dc4:	mov	r5, r0
    3dc8:	mov	r0, r4
    3dcc:	bl	3d38 <gen_ipfchostop>
    3dd0:	mov	r4, r0
    3dd4:	mov	r1, r0
    3dd8:	mov	r0, r5
    3ddc:	bl	2fc8 <sf_gen_or>
    3de0:	b	3db0 <gen_ipfchostop+0x78>
    3de4:	bl	f44 <abort@plt>

00003de8 <gen_ehostop>:
    3de8:	push	{r4, r5, r6, lr}
    3dec:	mov	r4, r0
    3df0:	cmp	r1, #4
    3df4:	addls	pc, pc, r1, lsl #2
    3df8:	b	3ea8 <gen_ehostop+0xc0>
    3dfc:	b	3e7c <gen_ehostop+0x94>
    3e00:	b	3e10 <gen_ehostop+0x28>
    3e04:	b	3e34 <gen_ehostop+0x4c>
    3e08:	b	3e7c <gen_ehostop+0x94>
    3e0c:	b	3e4c <gen_ehostop+0x64>
    3e10:	ldr	r3, [pc, #148]	; 3eac <gen_ehostop+0xc4>
    3e14:	mov	r2, #6
    3e18:	add	r3, pc, r3
    3e1c:	ldr	r1, [r3, #884]	; 0x374
    3e20:	mov	r3, r0
    3e24:	add	r1, r1, r2
    3e28:	mov	r0, #1
    3e2c:	pop	{r4, r5, r6, lr}
    3e30:	b	3a4c <gen_bcmp>
    3e34:	ldr	r1, [pc, #116]	; 3eb0 <gen_ehostop+0xc8>
    3e38:	mov	r3, r0
    3e3c:	add	r1, pc, r1
    3e40:	mov	r2, #6
    3e44:	ldr	r1, [r1, #884]	; 0x374
    3e48:	b	3e28 <gen_ehostop+0x40>
    3e4c:	mov	r1, #1
    3e50:	bl	3de8 <gen_ehostop>
    3e54:	mov	r1, #2
    3e58:	mov	r5, r0
    3e5c:	mov	r0, r4
    3e60:	bl	3de8 <gen_ehostop>
    3e64:	mov	r4, r0
    3e68:	mov	r1, r0
    3e6c:	mov	r0, r5
    3e70:	bl	2f48 <sf_gen_and>
    3e74:	mov	r0, r4
    3e78:	pop	{r4, r5, r6, pc}
    3e7c:	mov	r1, #1
    3e80:	bl	3de8 <gen_ehostop>
    3e84:	mov	r1, #2
    3e88:	mov	r5, r0
    3e8c:	mov	r0, r4
    3e90:	bl	3de8 <gen_ehostop>
    3e94:	mov	r4, r0
    3e98:	mov	r1, r0
    3e9c:	mov	r0, r5
    3ea0:	bl	2fc8 <sf_gen_or>
    3ea4:	b	3e74 <gen_ehostop+0x8c>
    3ea8:	bl	f44 <abort@plt>
    3eac:	.word	0x00029550
    3eb0:	.word	0x0002952c

00003eb4 <gen_ahostop>:
    3eb4:	push	{r4, r5, r6, lr}
    3eb8:	mov	r4, r0
    3ebc:	cmp	r1, #4
    3ec0:	addls	pc, pc, r1, lsl #2
    3ec4:	b	3f60 <gen_ahostop+0xac>
    3ec8:	b	3f34 <gen_ahostop+0x80>
    3ecc:	b	3edc <gen_ahostop+0x28>
    3ed0:	b	3ef4 <gen_ahostop+0x40>
    3ed4:	b	3f34 <gen_ahostop+0x80>
    3ed8:	b	3f04 <gen_ahostop+0x50>
    3edc:	mov	r3, r0
    3ee0:	mov	r2, #1
    3ee4:	mov	r1, #0
    3ee8:	mov	r0, r2
    3eec:	pop	{r4, r5, r6, lr}
    3ef0:	b	3a4c <gen_bcmp>
    3ef4:	mov	r2, #1
    3ef8:	mov	r3, r0
    3efc:	mov	r1, r2
    3f00:	b	3ee8 <gen_ahostop+0x34>
    3f04:	mov	r1, #1
    3f08:	bl	3eb4 <gen_ahostop>
    3f0c:	mov	r1, #2
    3f10:	mov	r5, r0
    3f14:	mov	r0, r4
    3f18:	bl	3eb4 <gen_ahostop>
    3f1c:	mov	r4, r0
    3f20:	mov	r1, r0
    3f24:	mov	r0, r5
    3f28:	bl	2f48 <sf_gen_and>
    3f2c:	mov	r0, r4
    3f30:	pop	{r4, r5, r6, pc}
    3f34:	mov	r1, #1
    3f38:	bl	3eb4 <gen_ahostop>
    3f3c:	mov	r1, #2
    3f40:	mov	r5, r0
    3f44:	mov	r0, r4
    3f48:	bl	3eb4 <gen_ahostop>
    3f4c:	mov	r4, r0
    3f50:	mov	r1, r0
    3f54:	mov	r0, r5
    3f58:	bl	2fc8 <sf_gen_or>
    3f5c:	b	3f2c <gen_ahostop+0x78>
    3f60:	bl	f44 <abort@plt>

00003f64 <gen_llc_linktype>:
    3f64:	cmp	r0, #240	; 0xf0
    3f68:	mov	r3, r0
    3f6c:	beq	3fc0 <gen_llc_linktype+0x5c>
    3f70:	bgt	3fa0 <gen_llc_linktype+0x3c>
    3f74:	cmp	r0, #6
    3f78:	beq	3fc0 <gen_llc_linktype+0x5c>
    3f7c:	cmp	r0, #224	; 0xe0
    3f80:	beq	3f98 <gen_llc_linktype+0x34>
    3f84:	ldr	r2, [pc, #72]	; 3fd4 <gen_llc_linktype+0x70>
    3f88:	cmp	r3, r2
    3f8c:	movgt	r2, #8
    3f90:	movgt	r1, #6
    3f94:	bgt	3fcc <gen_llc_linktype+0x68>
    3f98:	mov	r2, #16
    3f9c:	b	3fc8 <gen_llc_linktype+0x64>
    3fa0:	cmp	r0, #254	; 0xfe
    3fa4:	beq	3fc0 <gen_llc_linktype+0x5c>
    3fa8:	ldr	r2, [pc, #40]	; 3fd8 <gen_llc_linktype+0x74>
    3fac:	cmp	r0, r2
    3fb0:	bne	3f84 <gen_llc_linktype+0x20>
    3fb4:	mov	r1, r0
    3fb8:	ldr	r0, [pc, #28]	; 3fdc <gen_llc_linktype+0x78>
    3fbc:	b	3b84 <gen_snap>
    3fc0:	orr	r3, r3, r3, lsl #8
    3fc4:	mov	r2, #8
    3fc8:	mov	r1, #0
    3fcc:	mov	r0, #2
    3fd0:	b	3a28 <gen_cmp>
    3fd4:	.word	0x000005dc
    3fd8:	.word	0x0000809b
    3fdc:	.word	0x00080007

00003fe0 <gen_portatom>:
    3fe0:	mov	r3, r1
    3fe4:	mov	r2, #8
    3fe8:	mov	r1, r0
    3fec:	mov	r0, #5
    3ff0:	b	3a28 <gen_cmp>

00003ff4 <gen_portatom6>:
    3ff4:	mov	r3, r1
    3ff8:	mov	r2, #8
    3ffc:	mov	r1, r0
    4000:	mov	r0, #6
    4004:	b	3a28 <gen_cmp>

00004008 <sf_gen_portop6>:
    4008:	push	{r4, r5, r6, lr}
    400c:	mov	r3, r1
    4010:	mov	r4, r0
    4014:	mov	r5, r2
    4018:	mov	r1, #6
    401c:	mov	r2, #16
    4020:	mov	r0, #3
    4024:	bl	3a28 <gen_cmp>
    4028:	mov	r6, r0
    402c:	cmp	r5, #4
    4030:	addls	pc, pc, r5, lsl #2
    4034:	b	40dc <sf_gen_portop6+0xd4>
    4038:	b	407c <sf_gen_portop6+0x74>
    403c:	b	404c <sf_gen_portop6+0x44>
    4040:	b	4070 <sf_gen_portop6+0x68>
    4044:	b	407c <sf_gen_portop6+0x74>
    4048:	b	40ac <sf_gen_portop6+0xa4>
    404c:	mov	r1, r4
    4050:	mov	r0, #0
    4054:	bl	3ff4 <gen_portatom6>
    4058:	mov	r4, r0
    405c:	mov	r0, r6
    4060:	mov	r1, r4
    4064:	bl	2f48 <sf_gen_and>
    4068:	mov	r0, r4
    406c:	pop	{r4, r5, r6, pc}
    4070:	mov	r1, r4
    4074:	mov	r0, #2
    4078:	b	4054 <sf_gen_portop6+0x4c>
    407c:	mov	r1, r4
    4080:	mov	r0, #0
    4084:	bl	3ff4 <gen_portatom6>
    4088:	mov	r1, r4
    408c:	mov	r5, r0
    4090:	mov	r0, #2
    4094:	bl	3ff4 <gen_portatom6>
    4098:	mov	r4, r0
    409c:	mov	r1, r0
    40a0:	mov	r0, r5
    40a4:	bl	2fc8 <sf_gen_or>
    40a8:	b	405c <sf_gen_portop6+0x54>
    40ac:	mov	r1, r4
    40b0:	mov	r0, #0
    40b4:	bl	3ff4 <gen_portatom6>
    40b8:	mov	r1, r4
    40bc:	mov	r5, r0
    40c0:	mov	r0, #2
    40c4:	bl	3ff4 <gen_portatom6>
    40c8:	mov	r4, r0
    40cc:	mov	r1, r0
    40d0:	mov	r0, r5
    40d4:	bl	2f48 <sf_gen_and>
    40d8:	b	405c <sf_gen_portop6+0x54>
    40dc:	bl	f44 <abort@plt>

000040e0 <sf_gen_portop>:
    40e0:	push	{r4, r5, r6, r7, r8, lr}
    40e4:	mov	r3, r1
    40e8:	mov	r6, r2
    40ec:	mov	r1, #9
    40f0:	mov	r2, #16
    40f4:	mov	r4, r0
    40f8:	mov	r0, #3
    40fc:	bl	3a28 <gen_cmp>
    4100:	mov	r7, r0
    4104:	bl	3880 <gen_ipfrag>
    4108:	mov	r5, r0
    410c:	mov	r1, r0
    4110:	mov	r0, r7
    4114:	bl	2f48 <sf_gen_and>
    4118:	cmp	r6, #4
    411c:	addls	pc, pc, r6, lsl #2
    4120:	b	41c8 <sf_gen_portop+0xe8>
    4124:	b	4168 <sf_gen_portop+0x88>
    4128:	b	4138 <sf_gen_portop+0x58>
    412c:	b	415c <sf_gen_portop+0x7c>
    4130:	b	4168 <sf_gen_portop+0x88>
    4134:	b	4198 <sf_gen_portop+0xb8>
    4138:	mov	r1, r4
    413c:	mov	r0, #0
    4140:	bl	3fe0 <gen_portatom>
    4144:	mov	r4, r0
    4148:	mov	r0, r5
    414c:	mov	r1, r4
    4150:	bl	2f48 <sf_gen_and>
    4154:	mov	r0, r4
    4158:	pop	{r4, r5, r6, r7, r8, pc}
    415c:	mov	r1, r4
    4160:	mov	r0, #2
    4164:	b	4140 <sf_gen_portop+0x60>
    4168:	mov	r1, r4
    416c:	mov	r0, #0
    4170:	bl	3fe0 <gen_portatom>
    4174:	mov	r1, r4
    4178:	mov	r6, r0
    417c:	mov	r0, #2
    4180:	bl	3fe0 <gen_portatom>
    4184:	mov	r4, r0
    4188:	mov	r1, r0
    418c:	mov	r0, r6
    4190:	bl	2fc8 <sf_gen_or>
    4194:	b	4148 <sf_gen_portop+0x68>
    4198:	mov	r1, r4
    419c:	mov	r0, #0
    41a0:	bl	3fe0 <gen_portatom>
    41a4:	mov	r1, r4
    41a8:	mov	r6, r0
    41ac:	mov	r0, #2
    41b0:	bl	3fe0 <gen_portatom>
    41b4:	mov	r4, r0
    41b8:	mov	r1, r0
    41bc:	mov	r0, r6
    41c0:	bl	2f48 <sf_gen_and>
    41c4:	b	4148 <sf_gen_portop+0x68>
    41c8:	bl	f44 <abort@plt>

000041cc <gen_mcmp>:
    41cc:	push	{r0, r1, r2, r3, r4, lr}
    41d0:	mov	ip, #0
    41d4:	str	r3, [sp, #8]
    41d8:	mov	r3, #16
    41dc:	stm	sp, {r3, ip}
    41e0:	ldr	r3, [sp, #24]
    41e4:	bl	38d0 <gen_ncmp>
    41e8:	add	sp, sp, #20
    41ec:	pop	{pc}		; (ldr pc, [sp], #4)

000041f0 <gen_wlanhostop>:
    41f0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    41f4:	mov	r5, r0
    41f8:	cmp	r1, #8
    41fc:	addls	pc, pc, r1, lsl #2
    4200:	b	46f8 <gen_wlanhostop+0x508>
    4204:	b	46cc <gen_wlanhostop+0x4dc>
    4208:	b	4228 <gen_wlanhostop+0x38>
    420c:	b	4440 <gen_wlanhostop+0x250>
    4210:	b	46cc <gen_wlanhostop+0x4dc>
    4214:	b	46b0 <gen_wlanhostop+0x4c0>
    4218:	b	4560 <gen_wlanhostop+0x370>
    421c:	b	457c <gen_wlanhostop+0x38c>
    4220:	b	4644 <gen_wlanhostop+0x454>
    4224:	b	4684 <gen_wlanhostop+0x494>
    4228:	mov	r1, #16
    422c:	mov	r0, #1
    4230:	bl	36cc <gen_load_llrel>
    4234:	mov	r6, #1
    4238:	mov	r4, r0
    423c:	mov	r0, #69	; 0x45
    4240:	bl	219c <new_block>
    4244:	mov	r3, r5
    4248:	mov	r2, #6
    424c:	mov	r1, #24
    4250:	mov	r7, r0
    4254:	str	r4, [r0, #4]
    4258:	str	r6, [r0, #20]
    425c:	mov	r0, r6
    4260:	bl	3a4c <gen_bcmp>
    4264:	mov	r4, r0
    4268:	mov	r1, r0
    426c:	mov	r0, r7
    4270:	bl	2f48 <sf_gen_and>
    4274:	mov	r1, #16
    4278:	mov	r0, r6
    427c:	bl	36cc <gen_load_llrel>
    4280:	mov	r8, r0
    4284:	mov	r0, #69	; 0x45
    4288:	bl	219c <new_block>
    428c:	mov	r2, #6
    4290:	mov	r1, #16
    4294:	ldr	r3, [r0, #44]	; 0x2c
    4298:	clz	r3, r3
    429c:	lsr	r3, r3, #5
    42a0:	mov	r7, r0
    42a4:	str	r8, [r0, #4]
    42a8:	str	r3, [r0, #44]	; 0x2c
    42ac:	str	r6, [r0, #20]
    42b0:	mov	r3, r5
    42b4:	mov	r0, r6
    42b8:	bl	3a4c <gen_bcmp>
    42bc:	mov	r8, r0
    42c0:	mov	r1, r0
    42c4:	mov	r0, r7
    42c8:	bl	2f48 <sf_gen_and>
    42cc:	mov	r0, r8
    42d0:	mov	r1, r4
    42d4:	bl	2fc8 <sf_gen_or>
    42d8:	mov	r1, #16
    42dc:	mov	r0, r6
    42e0:	bl	36cc <gen_load_llrel>
    42e4:	mov	r8, #2
    42e8:	mov	r7, r0
    42ec:	mov	r0, #69	; 0x45
    42f0:	bl	219c <new_block>
    42f4:	mov	r1, r4
    42f8:	str	r8, [r0, #20]
    42fc:	str	r7, [r0, #4]
    4300:	bl	2f48 <sf_gen_and>
    4304:	mov	r1, #16
    4308:	mov	r0, r6
    430c:	bl	36cc <gen_load_llrel>
    4310:	mov	r9, r0
    4314:	mov	r0, #69	; 0x45
    4318:	bl	219c <new_block>
    431c:	mov	r2, #6
    4320:	mov	r1, #10
    4324:	ldr	r3, [r0, #44]	; 0x2c
    4328:	clz	r3, r3
    432c:	lsr	r3, r3, #5
    4330:	mov	r7, r0
    4334:	str	r8, [r0, #20]
    4338:	str	r9, [r0, #4]
    433c:	str	r3, [r0, #44]	; 0x2c
    4340:	mov	r3, r5
    4344:	mov	r0, r6
    4348:	bl	3a4c <gen_bcmp>
    434c:	mov	r8, r0
    4350:	mov	r1, r0
    4354:	mov	r0, r7
    4358:	bl	2f48 <sf_gen_and>
    435c:	mov	r0, r8
    4360:	mov	r1, r4
    4364:	bl	2fc8 <sf_gen_or>
    4368:	mov	r1, #16
    436c:	mov	r0, #0
    4370:	bl	36cc <gen_load_llrel>
    4374:	mov	r8, #8
    4378:	mov	r7, r0
    437c:	mov	r0, #69	; 0x45
    4380:	bl	219c <new_block>
    4384:	mov	r1, r4
    4388:	str	r7, [r0, #4]
    438c:	str	r8, [r0, #20]
    4390:	bl	2f48 <sf_gen_and>
    4394:	mov	r1, #16
    4398:	mov	r0, #0
    439c:	bl	36cc <gen_load_llrel>
    43a0:	mov	r9, r0
    43a4:	mov	r0, #69	; 0x45
    43a8:	bl	219c <new_block>
    43ac:	mov	r2, #6
    43b0:	mov	r1, #10
    43b4:	ldr	r3, [r0, #44]	; 0x2c
    43b8:	clz	r3, r3
    43bc:	lsr	r3, r3, #5
    43c0:	str	r3, [r0, #44]	; 0x2c
    43c4:	mov	r7, r0
    43c8:	mov	r3, r5
    43cc:	str	r8, [r0, #20]
    43d0:	str	r9, [r0, #4]
    43d4:	mov	r0, r6
    43d8:	bl	3a4c <gen_bcmp>
    43dc:	mov	r5, r0
    43e0:	mov	r1, r0
    43e4:	mov	r0, r7
    43e8:	bl	2f48 <sf_gen_and>
    43ec:	mov	r0, r5
    43f0:	mov	r1, r4
    43f4:	bl	2fc8 <sf_gen_or>
    43f8:	mov	r1, #16
    43fc:	mov	r0, #0
    4400:	bl	36cc <gen_load_llrel>
    4404:	mov	r5, r0
    4408:	mov	r0, #69	; 0x45
    440c:	bl	219c <new_block>
    4410:	mov	r3, #4
    4414:	mov	r1, r4
    4418:	str	r3, [r0, #20]
    441c:	ldr	r3, [r0, #44]	; 0x2c
    4420:	clz	r3, r3
    4424:	lsr	r3, r3, #5
    4428:	str	r5, [r0, #4]
    442c:	str	r3, [r0, #44]	; 0x2c
    4430:	bl	2f48 <sf_gen_and>
    4434:	mov	r0, r4
    4438:	add	sp, sp, #12
    443c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    4440:	mov	r1, #16
    4444:	mov	r0, #1
    4448:	bl	36cc <gen_load_llrel>
    444c:	mov	r6, #1
    4450:	mov	r4, r0
    4454:	mov	r0, #69	; 0x45
    4458:	bl	219c <new_block>
    445c:	mov	r3, r5
    4460:	mov	r2, #6
    4464:	mov	r1, #16
    4468:	mov	r7, r0
    446c:	str	r4, [r0, #4]
    4470:	str	r6, [r0, #20]
    4474:	mov	r0, r6
    4478:	bl	3a4c <gen_bcmp>
    447c:	mov	r4, r0
    4480:	mov	r1, r0
    4484:	mov	r0, r7
    4488:	bl	2f48 <sf_gen_and>
    448c:	mov	r1, #16
    4490:	mov	r0, r6
    4494:	bl	36cc <gen_load_llrel>
    4498:	mov	r8, r0
    449c:	mov	r0, #69	; 0x45
    44a0:	bl	219c <new_block>
    44a4:	mov	r2, #6
    44a8:	mov	r1, #4
    44ac:	ldr	r3, [r0, #44]	; 0x2c
    44b0:	clz	r3, r3
    44b4:	lsr	r3, r3, #5
    44b8:	mov	r7, r0
    44bc:	str	r8, [r0, #4]
    44c0:	str	r3, [r0, #44]	; 0x2c
    44c4:	str	r6, [r0, #20]
    44c8:	mov	r3, r5
    44cc:	mov	r0, r6
    44d0:	bl	3a4c <gen_bcmp>
    44d4:	mov	r8, r0
    44d8:	mov	r1, r0
    44dc:	mov	r0, r7
    44e0:	bl	2f48 <sf_gen_and>
    44e4:	mov	r0, r8
    44e8:	mov	r1, r4
    44ec:	bl	2fc8 <sf_gen_or>
    44f0:	mov	r1, #16
    44f4:	mov	r0, #0
    44f8:	bl	36cc <gen_load_llrel>
    44fc:	mov	r8, #8
    4500:	mov	r7, r0
    4504:	mov	r0, #69	; 0x45
    4508:	bl	219c <new_block>
    450c:	mov	r1, r4
    4510:	str	r7, [r0, #4]
    4514:	str	r8, [r0, #20]
    4518:	bl	2f48 <sf_gen_and>
    451c:	mov	r1, #16
    4520:	mov	r0, #0
    4524:	bl	36cc <gen_load_llrel>
    4528:	mov	r9, r0
    452c:	mov	r0, #69	; 0x45
    4530:	bl	219c <new_block>
    4534:	mov	r2, #6
    4538:	mov	r1, #4
    453c:	ldr	r3, [r0, #44]	; 0x2c
    4540:	clz	r3, r3
    4544:	lsr	r3, r3, #5
    4548:	str	r3, [r0, #44]	; 0x2c
    454c:	mov	r7, r0
    4550:	str	r8, [r0, #20]
    4554:	str	r9, [r0, #4]
    4558:	mov	r3, r5
    455c:	b	43d4 <gen_wlanhostop+0x1e4>
    4560:	mov	r3, r0
    4564:	mov	r2, #6
    4568:	mov	r1, #4
    456c:	mov	r0, #1
    4570:	add	sp, sp, #12
    4574:	pop	{r4, r5, r6, r7, r8, r9, lr}
    4578:	b	3a4c <gen_bcmp>
    457c:	mov	r3, #12
    4580:	str	r3, [sp]
    4584:	mov	r2, #16
    4588:	mov	r3, #4
    458c:	mov	r1, #0
    4590:	mov	r0, #1
    4594:	bl	41cc <gen_mcmp>
    4598:	mov	r6, #240	; 0xf0
    459c:	mov	r2, #16
    45a0:	mov	r1, #0
    45a4:	ldr	r3, [r0, #44]	; 0x2c
    45a8:	clz	r3, r3
    45ac:	lsr	r3, r3, #5
    45b0:	str	r3, [r0, #44]	; 0x2c
    45b4:	mov	r4, r0
    45b8:	str	r6, [sp]
    45bc:	mov	r3, #192	; 0xc0
    45c0:	mov	r0, #1
    45c4:	bl	41cc <gen_mcmp>
    45c8:	mov	r2, #16
    45cc:	mov	r1, #0
    45d0:	ldr	r3, [r0, #44]	; 0x2c
    45d4:	clz	r3, r3
    45d8:	lsr	r3, r3, #5
    45dc:	str	r3, [r0, #44]	; 0x2c
    45e0:	mov	r7, r0
    45e4:	str	r6, [sp]
    45e8:	mov	r3, #208	; 0xd0
    45ec:	mov	r0, #1
    45f0:	bl	41cc <gen_mcmp>
    45f4:	ldr	r3, [r0, #44]	; 0x2c
    45f8:	clz	r3, r3
    45fc:	lsr	r3, r3, #5
    4600:	str	r3, [r0, #44]	; 0x2c
    4604:	mov	r1, r0
    4608:	mov	r6, r0
    460c:	mov	r0, r7
    4610:	bl	2f48 <sf_gen_and>
    4614:	mov	r1, r6
    4618:	mov	r0, r4
    461c:	bl	2fc8 <sf_gen_or>
    4620:	mov	r3, r5
    4624:	mov	r2, #6
    4628:	mov	r1, #10
    462c:	mov	r0, #1
    4630:	bl	3a4c <gen_bcmp>
    4634:	mov	r4, r0
    4638:	mov	r1, r0
    463c:	mov	r0, r6
    4640:	b	4430 <gen_wlanhostop+0x240>
    4644:	mov	r3, #12
    4648:	str	r3, [sp]
    464c:	mov	r2, #16
    4650:	mov	r3, #4
    4654:	mov	r1, #0
    4658:	mov	r0, #1
    465c:	bl	41cc <gen_mcmp>
    4660:	mov	r2, #6
    4664:	mov	r1, #16
    4668:	ldr	r3, [r0, #44]	; 0x2c
    466c:	clz	r3, r3
    4670:	lsr	r3, r3, #5
    4674:	str	r3, [r0, #44]	; 0x2c
    4678:	mov	r6, r0
    467c:	mov	r3, r5
    4680:	b	462c <gen_wlanhostop+0x43c>
    4684:	mov	r3, #3
    4688:	mov	r1, #1
    468c:	str	r3, [sp]
    4690:	mov	r2, #16
    4694:	mov	r0, r1
    4698:	bl	41cc <gen_mcmp>
    469c:	mov	r3, r5
    46a0:	mov	r2, #6
    46a4:	mov	r1, #24
    46a8:	mov	r6, r0
    46ac:	b	462c <gen_wlanhostop+0x43c>
    46b0:	mov	r1, #1
    46b4:	bl	41f0 <gen_wlanhostop>
    46b8:	mov	r1, #2
    46bc:	mov	r6, r0
    46c0:	mov	r0, r5
    46c4:	bl	41f0 <gen_wlanhostop>
    46c8:	b	4634 <gen_wlanhostop+0x444>
    46cc:	mov	r1, #1
    46d0:	bl	41f0 <gen_wlanhostop>
    46d4:	mov	r1, #2
    46d8:	mov	r6, r0
    46dc:	mov	r0, r5
    46e0:	bl	41f0 <gen_wlanhostop>
    46e4:	mov	r4, r0
    46e8:	mov	r1, r0
    46ec:	mov	r0, r6
    46f0:	bl	2fc8 <sf_gen_or>
    46f4:	b	4434 <gen_wlanhostop+0x244>
    46f8:	bl	f44 <abort@plt>

000046fc <sf_gen_ecode>:
    46fc:	push	{r0, r1, r4, r5, r6, lr}
    4700:	lsr	r4, r1, #16
    4704:	str	r1, [sp, #4]
    4708:	uxtb	r1, r1
    470c:	cmp	r1, #1
    4710:	bhi	484c <sf_gen_ecode+0x150>
    4714:	ldrb	ip, [sp, #5]
    4718:	cmp	ip, #1
    471c:	bne	484c <sf_gen_ecode+0x150>
    4720:	ldr	r2, [pc, #304]	; 4858 <sf_gen_ecode+0x15c>
    4724:	mov	r6, r0
    4728:	add	r2, pc, r2
    472c:	uxtb	r4, r4
    4730:	ldr	r3, [r2, #856]	; 0x358
    4734:	cmp	r3, #119	; 0x77
    4738:	beq	4770 <sf_gen_ecode+0x74>
    473c:	bgt	4784 <sf_gen_ecode+0x88>
    4740:	cmp	r3, #6
    4744:	beq	482c <sf_gen_ecode+0x130>
    4748:	bgt	4760 <sf_gen_ecode+0x64>
    474c:	cmp	r3, #1
    4750:	beq	480c <sf_gen_ecode+0x110>
    4754:	ldr	r0, [pc, #256]	; 485c <sf_gen_ecode+0x160>
    4758:	add	r0, pc, r0
    475c:	bl	20b8 <sf_bpf_error>
    4760:	cmp	r3, #10
    4764:	beq	481c <sf_gen_ecode+0x120>
    4768:	cmp	r3, #105	; 0x69
    476c:	bne	4754 <sf_gen_ecode+0x58>
    4770:	mov	r1, r4
    4774:	mov	r0, r6
    4778:	add	sp, sp, #8
    477c:	pop	{r4, r5, r6, lr}
    4780:	b	41f0 <gen_wlanhostop>
    4784:	cmp	r3, #127	; 0x7f
    4788:	beq	4770 <sf_gen_ecode+0x74>
    478c:	bgt	47fc <sf_gen_ecode+0x100>
    4790:	cmp	r3, #122	; 0x7a
    4794:	beq	483c <sf_gen_ecode+0x140>
    4798:	cmp	r3, #123	; 0x7b
    479c:	bne	4754 <sf_gen_ecode+0x58>
    47a0:	ldr	r3, [r2, #892]	; 0x37c
    47a4:	cmp	r3, #0
    47a8:	beq	484c <sf_gen_ecode+0x150>
    47ac:	mov	r2, #8
    47b0:	mov	r0, ip
    47b4:	mov	r3, #65280	; 0xff00
    47b8:	mov	r1, #4
    47bc:	bl	3a28 <gen_cmp>
    47c0:	mov	r1, r4
    47c4:	ldr	r3, [r0, #44]	; 0x2c
    47c8:	clz	r3, r3
    47cc:	lsr	r3, r3, #5
    47d0:	str	r3, [r0, #44]	; 0x2c
    47d4:	mov	r5, r0
    47d8:	mov	r0, r6
    47dc:	bl	3de8 <gen_ehostop>
    47e0:	mov	r4, r0
    47e4:	mov	r1, r0
    47e8:	mov	r0, r5
    47ec:	bl	2f48 <sf_gen_and>
    47f0:	mov	r0, r4
    47f4:	add	sp, sp, #8
    47f8:	pop	{r4, r5, r6, pc}
    47fc:	cmp	r3, #163	; 0xa3
    4800:	beq	4770 <sf_gen_ecode+0x74>
    4804:	cmp	r3, #192	; 0xc0
    4808:	b	476c <sf_gen_ecode+0x70>
    480c:	mov	r1, r4
    4810:	add	sp, sp, #8
    4814:	pop	{r4, r5, r6, lr}
    4818:	b	3de8 <gen_ehostop>
    481c:	mov	r1, r4
    4820:	add	sp, sp, #8
    4824:	pop	{r4, r5, r6, lr}
    4828:	b	3bd8 <gen_fhostop>
    482c:	mov	r1, r4
    4830:	add	sp, sp, #8
    4834:	pop	{r4, r5, r6, lr}
    4838:	b	3c88 <gen_thostop>
    483c:	mov	r1, r4
    4840:	add	sp, sp, #8
    4844:	pop	{r4, r5, r6, lr}
    4848:	b	3d38 <gen_ipfchostop>
    484c:	ldr	r0, [pc, #12]	; 4860 <sf_gen_ecode+0x164>
    4850:	add	r0, pc, r0
    4854:	b	475c <sf_gen_ecode+0x60>
    4858:	.word	0x00028c40
    485c:	.word	0x0000b89a
    4860:	.word	0x0000b7fe

00004864 <gen_cmp_gt.constprop.12>:
    4864:	push	{r0, r1, r2, r3, r4, lr}
    4868:	mov	r3, #0
    486c:	str	r2, [sp, #8]
    4870:	mov	r2, #32
    4874:	stm	sp, {r2, r3}
    4878:	mov	r2, r1
    487c:	mvn	r3, #0
    4880:	mov	r1, r0
    4884:	mov	r0, #1
    4888:	bl	38d0 <gen_ncmp>
    488c:	add	sp, sp, #20
    4890:	pop	{pc}		; (ldr pc, [sp], #4)

00004894 <gen_ether_linktype>:
    4894:	cmp	r0, #240	; 0xf0
    4898:	push	{r4, r5, r6, r7, r8, lr}
    489c:	mov	r4, r0
    48a0:	beq	4928 <gen_ether_linktype+0x94>
    48a4:	bgt	4904 <gen_ether_linktype+0x70>
    48a8:	cmp	r0, #6
    48ac:	beq	4928 <gen_ether_linktype+0x94>
    48b0:	cmp	r0, #224	; 0xe0
    48b4:	beq	497c <gen_ether_linktype+0xe8>
    48b8:	ldr	r2, [pc, #492]	; 4aac <gen_ether_linktype+0x218>
    48bc:	cmp	r4, r2
    48c0:	bgt	4a8c <gen_ether_linktype+0x1f8>
    48c4:	ldr	r3, [pc, #484]	; 4ab0 <gen_ether_linktype+0x21c>
    48c8:	mov	r1, #8
    48cc:	add	r3, pc, r3
    48d0:	ldr	r5, [r3, #944]	; 0x3b0
    48d4:	mov	r0, r5
    48d8:	bl	4864 <gen_cmp_gt.constprop.12>
    48dc:	mov	r2, #16
    48e0:	add	r1, r5, #2
    48e4:	ldr	r3, [r0, #44]	; 0x2c
    48e8:	clz	r3, r3
    48ec:	lsr	r3, r3, #5
    48f0:	str	r3, [r0, #44]	; 0x2c
    48f4:	mov	r6, r0
    48f8:	mov	r3, r4
    48fc:	mov	r0, #1
    4900:	b	4964 <gen_ether_linktype+0xd0>
    4904:	ldr	r3, [pc, #424]	; 4ab4 <gen_ether_linktype+0x220>
    4908:	cmp	r0, r3
    490c:	mov	r5, r3
    4910:	beq	4a24 <gen_ether_linktype+0x190>
    4914:	add	r3, r3, #88	; 0x58
    4918:	cmp	r0, r3
    491c:	beq	4a24 <gen_ether_linktype+0x190>
    4920:	cmp	r0, #254	; 0xfe
    4924:	bne	48b8 <gen_ether_linktype+0x24>
    4928:	ldr	r3, [pc, #392]	; 4ab8 <gen_ether_linktype+0x224>
    492c:	ldr	r2, [pc, #376]	; 4aac <gen_ether_linktype+0x218>
    4930:	add	r3, pc, r3
    4934:	mov	r1, #8
    4938:	ldr	r0, [r3, #944]	; 0x3b0
    493c:	bl	4864 <gen_cmp_gt.constprop.12>
    4940:	mov	r2, #8
    4944:	mov	r1, #0
    4948:	ldr	r3, [r0, #44]	; 0x2c
    494c:	clz	r3, r3
    4950:	lsr	r3, r3, #5
    4954:	str	r3, [r0, #44]	; 0x2c
    4958:	mov	r6, r0
    495c:	orr	r3, r4, r4, lsl #8
    4960:	mov	r0, #2
    4964:	bl	3a28 <gen_cmp>
    4968:	mov	r5, r0
    496c:	mov	r1, r0
    4970:	mov	r0, r6
    4974:	bl	2f48 <sf_gen_and>
    4978:	b	4a1c <gen_ether_linktype+0x188>
    497c:	mov	r3, r0
    4980:	mov	r2, #16
    4984:	mov	r1, #0
    4988:	mov	r0, #2
    498c:	bl	3a28 <gen_cmp>
    4990:	ldr	r3, [pc, #292]	; 4abc <gen_ether_linktype+0x228>
    4994:	mov	r2, #8
    4998:	mov	r1, #0
    499c:	mov	r4, r0
    49a0:	mov	r0, #2
    49a4:	bl	3a28 <gen_cmp>
    49a8:	mov	r5, r0
    49ac:	mov	r1, r0
    49b0:	mov	r0, r4
    49b4:	bl	2fc8 <sf_gen_or>
    49b8:	ldr	r1, [pc, #256]	; 4ac0 <gen_ether_linktype+0x22c>
    49bc:	mov	r0, #0
    49c0:	bl	3b84 <gen_snap>
    49c4:	mov	r1, r5
    49c8:	bl	2fc8 <sf_gen_or>
    49cc:	ldr	r3, [pc, #240]	; 4ac4 <gen_ether_linktype+0x230>
    49d0:	ldr	r2, [pc, #212]	; 4aac <gen_ether_linktype+0x218>
    49d4:	add	r3, pc, r3
    49d8:	mov	r1, #8
    49dc:	ldr	r4, [r3, #944]	; 0x3b0
    49e0:	mov	r0, r4
    49e4:	bl	4864 <gen_cmp_gt.constprop.12>
    49e8:	mov	r1, r5
    49ec:	ldr	r3, [r0, #44]	; 0x2c
    49f0:	clz	r3, r3
    49f4:	lsr	r3, r3, #5
    49f8:	str	r3, [r0, #44]	; 0x2c
    49fc:	bl	2f48 <sf_gen_and>
    4a00:	ldr	r3, [pc, #184]	; 4ac0 <gen_ether_linktype+0x22c>
    4a04:	mov	r2, #8
    4a08:	mov	r1, r4
    4a0c:	mov	r0, #1
    4a10:	bl	3a28 <gen_cmp>
    4a14:	mov	r1, r5
    4a18:	bl	2fc8 <sf_gen_or>
    4a1c:	mov	r0, r5
    4a20:	pop	{r4, r5, r6, r7, r8, pc}
    4a24:	ldr	r3, [pc, #156]	; 4ac8 <gen_ether_linktype+0x234>
    4a28:	mov	r1, #8
    4a2c:	add	r3, pc, r3
    4a30:	ldr	r2, [pc, #116]	; 4aac <gen_ether_linktype+0x218>
    4a34:	ldr	r7, [r3, #944]	; 0x3b0
    4a38:	mov	r0, r7
    4a3c:	bl	4864 <gen_cmp_gt.constprop.12>
    4a40:	cmp	r4, r5
    4a44:	moveq	r1, r4
    4a48:	ldrne	r1, [pc, #124]	; 4acc <gen_ether_linktype+0x238>
    4a4c:	ldr	r3, [r0, #44]	; 0x2c
    4a50:	clz	r3, r3
    4a54:	lsr	r3, r3, #5
    4a58:	str	r3, [r0, #44]	; 0x2c
    4a5c:	mov	r6, r0
    4a60:	ldreq	r0, [pc, #104]	; 4ad0 <gen_ether_linktype+0x23c>
    4a64:	movne	r0, #0
    4a68:	bl	3b84 <gen_snap>
    4a6c:	mov	r1, r0
    4a70:	mov	r5, r0
    4a74:	mov	r0, r6
    4a78:	bl	2f48 <sf_gen_and>
    4a7c:	mov	r3, r4
    4a80:	mov	r2, #8
    4a84:	mov	r1, r7
    4a88:	b	4a0c <gen_ether_linktype+0x178>
    4a8c:	ldr	r1, [pc, #64]	; 4ad4 <gen_ether_linktype+0x240>
    4a90:	mov	r3, r4
    4a94:	add	r1, pc, r1
    4a98:	mov	r2, #8
    4a9c:	ldr	r1, [r1, #944]	; 0x3b0
    4aa0:	mov	r0, #1
    4aa4:	pop	{r4, r5, r6, r7, r8, lr}
    4aa8:	b	3a28 <gen_cmp>
    4aac:	.word	0x000005dc
    4ab0:	.word	0x00028a9c
    4ab4:	.word	0x0000809b
    4ab8:	.word	0x00028a38
    4abc:	.word	0x0000ffff
    4ac0:	.word	0x00008137
    4ac4:	.word	0x00028994
    4ac8:	.word	0x0002893c
    4acc:	.word	0x000080f3
    4ad0:	.word	0x00080007
    4ad4:	.word	0x000288d4

00004ad8 <gen_portrangeatom6>:
    4ad8:	cmp	r1, r2
    4adc:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    4ae0:	movle	r3, r1
    4ae4:	movgt	r3, r2
    4ae8:	movle	r4, r2
    4aec:	str	r3, [sp, #8]
    4af0:	mov	r2, #48	; 0x30
    4af4:	mov	r3, #0
    4af8:	movgt	r4, r1
    4afc:	stm	sp, {r2, r3}
    4b00:	mov	r5, r0
    4b04:	mov	r1, r0
    4b08:	mvn	r3, #0
    4b0c:	mov	r2, #8
    4b10:	mov	r0, #6
    4b14:	bl	38d0 <gen_ncmp>
    4b18:	mov	r1, #32
    4b1c:	mov	r3, #1
    4b20:	str	r4, [sp, #8]
    4b24:	stm	sp, {r1, r3}
    4b28:	mov	r2, #8
    4b2c:	mvn	r3, #0
    4b30:	mov	r1, r5
    4b34:	mov	r6, r0
    4b38:	mov	r0, #6
    4b3c:	bl	38d0 <gen_ncmp>
    4b40:	mov	r4, r0
    4b44:	mov	r1, r0
    4b48:	mov	r0, r6
    4b4c:	bl	2f48 <sf_gen_and>
    4b50:	mov	r0, r4
    4b54:	add	sp, sp, #16
    4b58:	pop	{r4, r5, r6, pc}

00004b5c <sf_gen_portrangeop6>:
    4b5c:	push	{r4, r5, r6, r7, r8, lr}
    4b60:	mov	r4, r0
    4b64:	mov	r5, r1
    4b68:	mov	r6, r3
    4b6c:	mov	r1, #6
    4b70:	mov	r3, r2
    4b74:	mov	r0, #3
    4b78:	mov	r2, #16
    4b7c:	bl	3a28 <gen_cmp>
    4b80:	mov	r7, r0
    4b84:	cmp	r6, #4
    4b88:	addls	pc, pc, r6, lsl #2
    4b8c:	b	4c4c <sf_gen_portrangeop6+0xf0>
    4b90:	b	4bdc <sf_gen_portrangeop6+0x80>
    4b94:	b	4ba4 <sf_gen_portrangeop6+0x48>
    4b98:	b	4bcc <sf_gen_portrangeop6+0x70>
    4b9c:	b	4bdc <sf_gen_portrangeop6+0x80>
    4ba0:	b	4c14 <sf_gen_portrangeop6+0xb8>
    4ba4:	mov	r2, r5
    4ba8:	mov	r1, r4
    4bac:	mov	r0, #0
    4bb0:	bl	4ad8 <gen_portrangeatom6>
    4bb4:	mov	r4, r0
    4bb8:	mov	r0, r7
    4bbc:	mov	r1, r4
    4bc0:	bl	2f48 <sf_gen_and>
    4bc4:	mov	r0, r4
    4bc8:	pop	{r4, r5, r6, r7, r8, pc}
    4bcc:	mov	r2, r5
    4bd0:	mov	r1, r4
    4bd4:	mov	r0, #2
    4bd8:	b	4bb0 <sf_gen_portrangeop6+0x54>
    4bdc:	mov	r2, r5
    4be0:	mov	r1, r4
    4be4:	mov	r0, #0
    4be8:	bl	4ad8 <gen_portrangeatom6>
    4bec:	mov	r1, r4
    4bf0:	mov	r2, r5
    4bf4:	mov	r6, r0
    4bf8:	mov	r0, #2
    4bfc:	bl	4ad8 <gen_portrangeatom6>
    4c00:	mov	r4, r0
    4c04:	mov	r1, r0
    4c08:	mov	r0, r6
    4c0c:	bl	2fc8 <sf_gen_or>
    4c10:	b	4bb8 <sf_gen_portrangeop6+0x5c>
    4c14:	mov	r2, r5
    4c18:	mov	r1, r4
    4c1c:	mov	r0, #0
    4c20:	bl	4ad8 <gen_portrangeatom6>
    4c24:	mov	r1, r4
    4c28:	mov	r2, r5
    4c2c:	mov	r6, r0
    4c30:	mov	r0, #2
    4c34:	bl	4ad8 <gen_portrangeatom6>
    4c38:	mov	r4, r0
    4c3c:	mov	r1, r0
    4c40:	mov	r0, r6
    4c44:	bl	2f48 <sf_gen_and>
    4c48:	b	4bb8 <sf_gen_portrangeop6+0x5c>
    4c4c:	bl	f44 <abort@plt>

00004c50 <gen_portrangeatom>:
    4c50:	cmp	r1, r2
    4c54:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    4c58:	movle	r3, r1
    4c5c:	movgt	r3, r2
    4c60:	movle	r4, r2
    4c64:	str	r3, [sp, #8]
    4c68:	mov	r2, #48	; 0x30
    4c6c:	mov	r3, #0
    4c70:	movgt	r4, r1
    4c74:	stm	sp, {r2, r3}
    4c78:	mov	r5, r0
    4c7c:	mov	r1, r0
    4c80:	mvn	r3, #0
    4c84:	mov	r2, #8
    4c88:	mov	r0, #5
    4c8c:	bl	38d0 <gen_ncmp>
    4c90:	mov	r1, #32
    4c94:	mov	r3, #1
    4c98:	str	r4, [sp, #8]
    4c9c:	stm	sp, {r1, r3}
    4ca0:	mov	r2, #8
    4ca4:	mvn	r3, #0
    4ca8:	mov	r1, r5
    4cac:	mov	r6, r0
    4cb0:	mov	r0, #5
    4cb4:	bl	38d0 <gen_ncmp>
    4cb8:	mov	r4, r0
    4cbc:	mov	r1, r0
    4cc0:	mov	r0, r6
    4cc4:	bl	2f48 <sf_gen_and>
    4cc8:	mov	r0, r4
    4ccc:	add	sp, sp, #16
    4cd0:	pop	{r4, r5, r6, pc}

00004cd4 <sf_gen_portrangeop>:
    4cd4:	push	{r4, r5, r6, r7, r8, lr}
    4cd8:	mov	r7, r3
    4cdc:	mov	r4, r0
    4ce0:	mov	r3, r2
    4ce4:	mov	r5, r1
    4ce8:	mov	r2, #16
    4cec:	mov	r1, #9
    4cf0:	mov	r0, #3
    4cf4:	bl	3a28 <gen_cmp>
    4cf8:	mov	r8, r0
    4cfc:	bl	3880 <gen_ipfrag>
    4d00:	mov	r6, r0
    4d04:	mov	r1, r0
    4d08:	mov	r0, r8
    4d0c:	bl	2f48 <sf_gen_and>
    4d10:	cmp	r7, #4
    4d14:	addls	pc, pc, r7, lsl #2
    4d18:	b	4dd8 <sf_gen_portrangeop+0x104>
    4d1c:	b	4d68 <sf_gen_portrangeop+0x94>
    4d20:	b	4d30 <sf_gen_portrangeop+0x5c>
    4d24:	b	4d58 <sf_gen_portrangeop+0x84>
    4d28:	b	4d68 <sf_gen_portrangeop+0x94>
    4d2c:	b	4da0 <sf_gen_portrangeop+0xcc>
    4d30:	mov	r2, r5
    4d34:	mov	r1, r4
    4d38:	mov	r0, #0
    4d3c:	bl	4c50 <gen_portrangeatom>
    4d40:	mov	r4, r0
    4d44:	mov	r0, r6
    4d48:	mov	r1, r4
    4d4c:	bl	2f48 <sf_gen_and>
    4d50:	mov	r0, r4
    4d54:	pop	{r4, r5, r6, r7, r8, pc}
    4d58:	mov	r2, r5
    4d5c:	mov	r1, r4
    4d60:	mov	r0, #2
    4d64:	b	4d3c <sf_gen_portrangeop+0x68>
    4d68:	mov	r2, r5
    4d6c:	mov	r1, r4
    4d70:	mov	r0, #0
    4d74:	bl	4c50 <gen_portrangeatom>
    4d78:	mov	r1, r4
    4d7c:	mov	r2, r5
    4d80:	mov	r7, r0
    4d84:	mov	r0, #2
    4d88:	bl	4c50 <gen_portrangeatom>
    4d8c:	mov	r4, r0
    4d90:	mov	r1, r0
    4d94:	mov	r0, r7
    4d98:	bl	2fc8 <sf_gen_or>
    4d9c:	b	4d44 <sf_gen_portrangeop+0x70>
    4da0:	mov	r2, r5
    4da4:	mov	r1, r4
    4da8:	mov	r0, #0
    4dac:	bl	4c50 <gen_portrangeatom>
    4db0:	mov	r1, r4
    4db4:	mov	r2, r5
    4db8:	mov	r7, r0
    4dbc:	mov	r0, #2
    4dc0:	bl	4c50 <gen_portrangeatom>
    4dc4:	mov	r4, r0
    4dc8:	mov	r1, r0
    4dcc:	mov	r0, r7
    4dd0:	bl	2f48 <sf_gen_and>
    4dd4:	b	4d44 <sf_gen_portrangeop+0x70>
    4dd8:	bl	f44 <abort@plt>

00004ddc <sf_gen_relation>:
    4ddc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4de0:	mov	r4, r0
    4de4:	add	r0, r2, #8
    4de8:	mov	r6, r1
    4dec:	mov	r5, r2
    4df0:	mov	r9, r3
    4df4:	bl	21fc <xfer_to_x.isra.0>
    4df8:	mov	r7, r0
    4dfc:	add	r0, r6, #8
    4e00:	bl	2218 <xfer_to_a.isra.1>
    4e04:	cmp	r4, #16
    4e08:	mov	r8, r0
    4e0c:	bne	4ec8 <sf_gen_relation+0xec>
    4e10:	mov	r0, #28
    4e14:	bl	21bc <new_stmt>
    4e18:	mov	sl, r0
    4e1c:	mov	r0, #21
    4e20:	bl	219c <new_block>
    4e24:	mov	r1, sl
    4e28:	mov	r4, r0
    4e2c:	mov	r0, r8
    4e30:	bl	304c <sf_append>
    4e34:	cmp	r9, #0
    4e38:	mov	r1, r8
    4e3c:	ldrne	r3, [r4, #44]	; 0x2c
    4e40:	clzne	r3, r3
    4e44:	mov	r0, r7
    4e48:	lsrne	r3, r3, #5
    4e4c:	strne	r3, [r4, #44]	; 0x2c
    4e50:	bl	304c <sf_append>
    4e54:	ldr	r0, [r5, #4]
    4e58:	mov	r1, r7
    4e5c:	bl	304c <sf_append>
    4e60:	ldr	r1, [r5, #4]
    4e64:	ldr	r0, [r6, #4]
    4e68:	bl	304c <sf_append>
    4e6c:	ldr	r3, [r6, #4]
    4e70:	mov	r1, #0
    4e74:	str	r3, [r4, #4]
    4e78:	ldr	r3, [pc, #104]	; 4ee8 <sf_gen_relation+0x10c>
    4e7c:	ldr	r2, [r6, #8]
    4e80:	add	r3, pc, r3
    4e84:	add	r2, r3, r2, lsl #2
    4e88:	str	r1, [r2, #788]	; 0x314
    4e8c:	ldr	r2, [r5, #8]
    4e90:	add	r3, r3, r2, lsl #2
    4e94:	str	r1, [r3, #788]	; 0x314
    4e98:	ldr	r0, [r6]
    4e9c:	ldr	r5, [r5]
    4ea0:	cmp	r0, r1
    4ea4:	beq	4ed8 <sf_gen_relation+0xfc>
    4ea8:	cmp	r5, r1
    4eac:	beq	4ebc <sf_gen_relation+0xe0>
    4eb0:	mov	r1, r5
    4eb4:	bl	2f48 <sf_gen_and>
    4eb8:	mov	r0, r5
    4ebc:	mov	r1, r4
    4ec0:	bl	2f48 <sf_gen_and>
    4ec4:	b	4ee0 <sf_gen_relation+0x104>
    4ec8:	orr	r0, r4, #13
    4ecc:	bl	219c <new_block>
    4ed0:	mov	r4, r0
    4ed4:	b	4e34 <sf_gen_relation+0x58>
    4ed8:	subs	r0, r5, #0
    4edc:	bne	4ebc <sf_gen_relation+0xe0>
    4ee0:	mov	r0, r4
    4ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4ee8:	.word	0x000284e8

00004eec <sf_gen_loadlen>:
    4eec:	push	{r4, r5, r6, lr}
    4ef0:	bl	225c <alloc_reg>
    4ef4:	mov	r5, r0
    4ef8:	mov	r0, #12
    4efc:	bl	20f0 <newchunk>
    4f00:	mov	r4, r0
    4f04:	mov	r0, #128	; 0x80
    4f08:	bl	21bc <new_stmt>
    4f0c:	mov	r6, r0
    4f10:	mov	r0, #2
    4f14:	bl	21bc <new_stmt>
    4f18:	str	r0, [r6, #16]
    4f1c:	str	r5, [r0, #12]
    4f20:	str	r6, [r4, #4]
    4f24:	str	r5, [r4, #8]
    4f28:	mov	r0, r4
    4f2c:	pop	{r4, r5, r6, pc}

00004f30 <sf_gen_loadi>:
    4f30:	push	{r4, r5, r6, r7, r8, lr}
    4f34:	mov	r7, r0
    4f38:	mov	r0, #12
    4f3c:	bl	20f0 <newchunk>
    4f40:	mov	r4, r0
    4f44:	bl	225c <alloc_reg>
    4f48:	mov	r6, r0
    4f4c:	mov	r0, #0
    4f50:	bl	21bc <new_stmt>
    4f54:	mov	r5, r0
    4f58:	str	r7, [r0, #12]
    4f5c:	mov	r0, #2
    4f60:	bl	21bc <new_stmt>
    4f64:	str	r0, [r5, #16]
    4f68:	str	r6, [r0, #12]
    4f6c:	stmib	r4, {r5, r6}
    4f70:	mov	r0, r4
    4f74:	pop	{r4, r5, r6, r7, r8, pc}

00004f78 <sf_gen_neg>:
    4f78:	push	{r4, lr}
    4f7c:	mov	r4, r0
    4f80:	add	r0, r0, #8
    4f84:	bl	2218 <xfer_to_a.isra.1>
    4f88:	mov	r1, r0
    4f8c:	ldr	r0, [r4, #4]
    4f90:	bl	304c <sf_append>
    4f94:	mov	r0, #132	; 0x84
    4f98:	bl	21bc <new_stmt>
    4f9c:	mov	r3, #0
    4fa0:	mov	r1, r0
    4fa4:	str	r3, [r0, #12]
    4fa8:	ldr	r0, [r4, #4]
    4fac:	bl	304c <sf_append>
    4fb0:	mov	r0, #2
    4fb4:	bl	21bc <new_stmt>
    4fb8:	ldr	r3, [r4, #8]
    4fbc:	mov	r1, r0
    4fc0:	str	r3, [r0, #12]
    4fc4:	ldr	r0, [r4, #4]
    4fc8:	bl	304c <sf_append>
    4fcc:	mov	r0, r4
    4fd0:	pop	{r4, pc}

00004fd4 <sf_gen_arth>:
    4fd4:	push	{r4, r5, r6, r7, r8, lr}
    4fd8:	mov	r8, r0
    4fdc:	add	r0, r2, #8
    4fe0:	mov	r5, r2
    4fe4:	mov	r4, r1
    4fe8:	bl	21fc <xfer_to_x.isra.0>
    4fec:	mov	r6, r0
    4ff0:	add	r0, r4, #8
    4ff4:	bl	2218 <xfer_to_a.isra.1>
    4ff8:	mov	r7, r0
    4ffc:	orr	r0, r8, #12
    5000:	bl	21bc <new_stmt>
    5004:	mov	r1, r0
    5008:	mov	r0, r7
    500c:	bl	304c <sf_append>
    5010:	mov	r1, r7
    5014:	mov	r0, r6
    5018:	bl	304c <sf_append>
    501c:	mov	r1, r6
    5020:	ldr	r0, [r5, #4]
    5024:	bl	304c <sf_append>
    5028:	ldr	r1, [r5, #4]
    502c:	ldr	r0, [r4, #4]
    5030:	bl	304c <sf_append>
    5034:	ldr	r2, [r4, #8]
    5038:	ldr	r3, [pc, #68]	; 5084 <sf_gen_arth+0xb0>
    503c:	mov	r1, #0
    5040:	add	r3, pc, r3
    5044:	add	r2, r3, r2, lsl #2
    5048:	mov	r0, #2
    504c:	str	r1, [r2, #788]	; 0x314
    5050:	ldr	r2, [r5, #8]
    5054:	add	r3, r3, r2, lsl #2
    5058:	str	r1, [r3, #788]	; 0x314
    505c:	bl	21bc <new_stmt>
    5060:	mov	r5, r0
    5064:	bl	225c <alloc_reg>
    5068:	mov	r1, r5
    506c:	str	r0, [r5, #12]
    5070:	str	r0, [r4, #8]
    5074:	ldr	r0, [r4, #4]
    5078:	bl	304c <sf_append>
    507c:	mov	r0, r4
    5080:	pop	{r4, r5, r6, r7, r8, pc}
    5084:	.word	0x00028328

00005088 <sf_gen_greater>:
    5088:	push	{r4, r5, r6, lr}
    508c:	mov	r4, r0
    5090:	mov	r0, #128	; 0x80
    5094:	bl	21bc <new_stmt>
    5098:	mov	r5, r0
    509c:	mov	r0, #53	; 0x35
    50a0:	bl	219c <new_block>
    50a4:	str	r5, [r0, #4]
    50a8:	str	r4, [r0, #20]
    50ac:	pop	{r4, r5, r6, pc}

000050b0 <sf_gen_less>:
    50b0:	push	{r4, r5, r6, lr}
    50b4:	mov	r4, r0
    50b8:	mov	r0, #128	; 0x80
    50bc:	bl	21bc <new_stmt>
    50c0:	mov	r5, r0
    50c4:	mov	r0, #37	; 0x25
    50c8:	bl	219c <new_block>
    50cc:	ldr	r3, [r0, #44]	; 0x2c
    50d0:	clz	r3, r3
    50d4:	lsr	r3, r3, #5
    50d8:	str	r5, [r0, #4]
    50dc:	str	r4, [r0, #20]
    50e0:	str	r3, [r0, #44]	; 0x2c
    50e4:	pop	{r4, r5, r6, pc}

000050e8 <sf_gen_byteop>:
    50e8:	cmp	r0, #61	; 0x3d
    50ec:	mov	r3, r2
    50f0:	beq	5158 <sf_gen_byteop+0x70>
    50f4:	push	{r4, r5, lr}
    50f8:	mov	r4, r2
    50fc:	sub	sp, sp, #20
    5100:	bgt	5118 <sf_gen_byteop+0x30>
    5104:	cmp	r0, #38	; 0x26
    5108:	beq	51a0 <sf_gen_byteop+0xb8>
    510c:	cmp	r0, #60	; 0x3c
    5110:	beq	5164 <sf_gen_byteop+0x7c>
    5114:	bl	f44 <abort@plt>
    5118:	cmp	r0, #62	; 0x3e
    511c:	beq	518c <sf_gen_byteop+0xa4>
    5120:	cmp	r0, #124	; 0x7c
    5124:	moveq	r0, #68	; 0x44
    5128:	bne	5114 <sf_gen_byteop+0x2c>
    512c:	bl	21bc <new_stmt>
    5130:	mov	r5, r0
    5134:	str	r4, [r0, #12]
    5138:	mov	r0, #21
    513c:	bl	219c <new_block>
    5140:	ldr	r3, [r0, #44]	; 0x2c
    5144:	clz	r3, r3
    5148:	lsr	r3, r3, #5
    514c:	str	r5, [r0, #4]
    5150:	str	r3, [r0, #44]	; 0x2c
    5154:	b	5184 <sf_gen_byteop+0x9c>
    5158:	mov	r2, #16
    515c:	mov	r0, #1
    5160:	b	3a28 <gen_cmp>
    5164:	mov	r3, #48	; 0x30
    5168:	mov	r0, #1
    516c:	str	r2, [sp, #8]
    5170:	str	r3, [sp]
    5174:	str	r0, [sp, #4]
    5178:	mvn	r3, #0
    517c:	mov	r2, #16
    5180:	bl	38d0 <gen_ncmp>
    5184:	add	sp, sp, #20
    5188:	pop	{r4, r5, pc}
    518c:	mov	r0, r1
    5190:	mov	r1, #16
    5194:	add	sp, sp, #20
    5198:	pop	{r4, r5, lr}
    519c:	b	4864 <gen_cmp_gt.constprop.12>
    51a0:	mov	r0, #84	; 0x54
    51a4:	b	512c <sf_gen_byteop+0x44>

000051a8 <sf_gen_pf_ifname>:
    51a8:	ldr	r0, [pc, #8]	; 51b8 <sf_gen_pf_ifname+0x10>
    51ac:	push	{r4, lr}
    51b0:	add	r0, pc, r0
    51b4:	bl	20b8 <sf_bpf_error>
    51b8:	.word	0x0000aecc

000051bc <sf_gen_pf_ruleset>:
    51bc:	ldr	r0, [pc, #8]	; 51cc <sf_gen_pf_ruleset+0x10>
    51c0:	push	{r4, lr}
    51c4:	add	r0, pc, r0
    51c8:	bl	20b8 <sf_bpf_error>
    51cc:	.word	0x0000aee0

000051d0 <sf_gen_pf_rnr>:
    51d0:	ldr	r0, [pc, #8]	; 51e0 <sf_gen_pf_rnr+0x10>
    51d4:	push	{r4, lr}
    51d8:	add	r0, pc, r0
    51dc:	bl	20b8 <sf_bpf_error>
    51e0:	.word	0x0000aecc

000051e4 <sf_gen_pf_srnr>:
    51e4:	ldr	r0, [pc, #8]	; 51f4 <sf_gen_pf_srnr+0x10>
    51e8:	push	{r4, lr}
    51ec:	add	r0, pc, r0
    51f0:	bl	20b8 <sf_bpf_error>
    51f4:	.word	0x0000aeb8

000051f8 <sf_gen_pf_reason>:
    51f8:	ldr	r0, [pc, #8]	; 5208 <sf_gen_pf_reason+0x10>
    51fc:	push	{r4, lr}
    5200:	add	r0, pc, r0
    5204:	bl	20b8 <sf_bpf_error>
    5208:	.word	0x0000aea4

0000520c <sf_gen_pf_action>:
    520c:	ldr	r0, [pc, #8]	; 521c <sf_gen_pf_action+0x10>
    5210:	push	{r4, lr}
    5214:	add	r0, pc, r0
    5218:	bl	20b8 <sf_bpf_error>
    521c:	.word	0x0000ae90

00005220 <sf_gen_p80211_type>:
    5220:	push	{r0, r1, r2, lr}
    5224:	mov	r3, r0
    5228:	ldr	r2, [pc, #80]	; 5280 <sf_gen_p80211_type+0x60>
    522c:	add	r2, pc, r2
    5230:	ldr	r2, [r2, #856]	; 0x358
    5234:	cmp	r2, #119	; 0x77
    5238:	beq	5248 <sf_gen_p80211_type+0x28>
    523c:	bgt	5264 <sf_gen_p80211_type+0x44>
    5240:	cmp	r2, #105	; 0x69
    5244:	bne	5274 <sf_gen_p80211_type+0x54>
    5248:	str	r1, [sp]
    524c:	mov	r2, #16
    5250:	mov	r1, #0
    5254:	mov	r0, #1
    5258:	bl	41cc <gen_mcmp>
    525c:	add	sp, sp, #12
    5260:	pop	{pc}		; (ldr pc, [sp], #4)
    5264:	cmp	r2, #127	; 0x7f
    5268:	beq	5248 <sf_gen_p80211_type+0x28>
    526c:	cmp	r2, #163	; 0xa3
    5270:	b	5244 <sf_gen_p80211_type+0x24>
    5274:	ldr	r0, [pc, #8]	; 5284 <sf_gen_p80211_type+0x64>
    5278:	add	r0, pc, r0
    527c:	bl	20b8 <sf_bpf_error>
    5280:	.word	0x0002813c
    5284:	.word	0x0000ae61

00005288 <sf_gen_p80211_fcdir>:
    5288:	push	{r0, r1, r2, lr}
    528c:	mov	r3, r0
    5290:	ldr	r2, [pc, #84]	; 52ec <sf_gen_p80211_fcdir+0x64>
    5294:	add	r2, pc, r2
    5298:	ldr	r2, [r2, #856]	; 0x358
    529c:	cmp	r2, #119	; 0x77
    52a0:	beq	52cc <sf_gen_p80211_fcdir+0x44>
    52a4:	bgt	52bc <sf_gen_p80211_fcdir+0x34>
    52a8:	cmp	r2, #105	; 0x69
    52ac:	beq	52cc <sf_gen_p80211_fcdir+0x44>
    52b0:	ldr	r0, [pc, #56]	; 52f0 <sf_gen_p80211_fcdir+0x68>
    52b4:	add	r0, pc, r0
    52b8:	bl	20b8 <sf_bpf_error>
    52bc:	cmp	r2, #127	; 0x7f
    52c0:	beq	52cc <sf_gen_p80211_fcdir+0x44>
    52c4:	cmp	r2, #163	; 0xa3
    52c8:	b	52ac <sf_gen_p80211_fcdir+0x24>
    52cc:	mov	r1, #1
    52d0:	mov	r2, #3
    52d4:	str	r2, [sp]
    52d8:	mov	r0, r1
    52dc:	mov	r2, #16
    52e0:	bl	41cc <gen_mcmp>
    52e4:	add	sp, sp, #12
    52e8:	pop	{pc}		; (ldr pc, [sp], #4)
    52ec:	.word	0x000280d4
    52f0:	.word	0x0000ae56

000052f4 <sf_gen_acode>:
    52f4:	ldr	r3, [pc, #92]	; 5358 <sf_gen_acode+0x64>
    52f8:	push	{r0, r1, r2, lr}
    52fc:	add	r3, pc, r3
    5300:	str	r1, [sp, #4]
    5304:	ldr	r3, [r3, #856]	; 0x358
    5308:	cmp	r3, #7
    530c:	beq	5318 <sf_gen_acode+0x24>
    5310:	cmp	r3, #129	; 0x81
    5314:	bne	534c <sf_gen_acode+0x58>
    5318:	ldrb	r3, [sp, #4]
    531c:	cmp	r3, #1
    5320:	bhi	5340 <sf_gen_acode+0x4c>
    5324:	ldrb	r3, [sp, #5]
    5328:	cmp	r3, #1
    532c:	bne	5340 <sf_gen_acode+0x4c>
    5330:	ldrb	r1, [sp, #6]
    5334:	add	sp, sp, #12
    5338:	pop	{lr}		; (ldr lr, [sp], #4)
    533c:	b	3eb4 <gen_ahostop>
    5340:	ldr	r0, [pc, #20]	; 535c <sf_gen_acode+0x68>
    5344:	add	r0, pc, r0
    5348:	bl	20b8 <sf_bpf_error>
    534c:	ldr	r0, [pc, #12]	; 5360 <sf_gen_acode+0x6c>
    5350:	add	r0, pc, r0
    5354:	b	5348 <sf_gen_acode+0x54>
    5358:	.word	0x0002806c
    535c:	.word	0x0000adf9
    5360:	.word	0x0000ae17

00005364 <sf_gen_vlan>:
    5364:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    5368:	ldr	r2, [pc, #192]	; 5430 <sf_gen_vlan+0xcc>
    536c:	add	r2, pc, r2
    5370:	ldr	r6, [r2, #4]
    5374:	cmp	r6, #0
    5378:	beq	5388 <sf_gen_vlan+0x24>
    537c:	ldr	r0, [pc, #176]	; 5434 <sf_gen_vlan+0xd0>
    5380:	add	r0, pc, r0
    5384:	bl	20b8 <sf_bpf_error>
    5388:	ldr	r3, [pc, #168]	; 5438 <sf_gen_vlan+0xd4>
    538c:	mov	r7, r0
    5390:	add	r3, pc, r3
    5394:	ldr	r0, [r3, #856]	; 0x358
    5398:	ldr	r1, [r3, #948]	; 0x3b4
    539c:	cmp	r0, #1
    53a0:	str	r1, [r2]
    53a4:	bne	5420 <sf_gen_vlan+0xbc>
    53a8:	ldr	r4, [r3, #944]	; 0x3b0
    53ac:	mov	r2, #8
    53b0:	mov	r3, #33024	; 0x8100
    53b4:	mov	r1, r4
    53b8:	bl	3a28 <gen_cmp>
    53bc:	cmp	r7, #0
    53c0:	mov	r5, r0
    53c4:	blt	53f8 <sf_gen_vlan+0x94>
    53c8:	ldr	r3, [pc, #108]	; 543c <sf_gen_vlan+0xd8>
    53cc:	mov	r1, r6
    53d0:	str	r3, [sp]
    53d4:	mov	r2, #8
    53d8:	mov	r3, r7
    53dc:	mov	r0, #2
    53e0:	bl	41cc <gen_mcmp>
    53e4:	mov	r6, r0
    53e8:	mov	r1, r0
    53ec:	mov	r0, r5
    53f0:	bl	2f48 <sf_gen_and>
    53f4:	mov	r5, r6
    53f8:	ldr	r3, [pc, #64]	; 5440 <sf_gen_vlan+0xdc>
    53fc:	add	r4, r4, #4
    5400:	add	r3, pc, r3
    5404:	mov	r0, r5
    5408:	ldr	r2, [r3, #940]	; 0x3ac
    540c:	str	r4, [r3, #944]	; 0x3b0
    5410:	add	r2, r2, #4
    5414:	str	r2, [r3, #940]	; 0x3ac
    5418:	add	sp, sp, #12
    541c:	pop	{r4, r5, r6, r7, pc}
    5420:	mov	r1, r0
    5424:	ldr	r0, [pc, #24]	; 5444 <sf_gen_vlan+0xe0>
    5428:	add	r0, pc, r0
    542c:	bl	20b8 <sf_bpf_error>
    5430:	.word	0x00027f10
    5434:	.word	0x0000ae04
    5438:	.word	0x00027fd8
    543c:	.word	0x00000fff
    5440:	.word	0x00027f68
    5444:	.word	0x0000ad75

00005448 <sf_gen_atmfield_code>:
    5448:	push	{r0, r1, r2, r3, r4, lr}
    544c:	sub	r0, r0, #51	; 0x33
    5450:	mov	ip, r1
    5454:	cmp	r0, #4
    5458:	addls	pc, pc, r0, lsl #2
    545c:	b	5558 <sf_gen_atmfield_code+0x110>
    5460:	b	5474 <sf_gen_atmfield_code+0x2c>
    5464:	b	5498 <sf_gen_atmfield_code+0x50>
    5468:	b	54dc <sf_gen_atmfield_code+0x94>
    546c:	b	5500 <sf_gen_atmfield_code+0xb8>
    5470:	b	5528 <sf_gen_atmfield_code+0xe0>
    5474:	ldr	r1, [pc, #224]	; 555c <sf_gen_atmfield_code+0x114>
    5478:	add	r1, pc, r1
    547c:	ldr	r0, [r1, #888]	; 0x378
    5480:	cmp	r0, #0
    5484:	ldrne	r1, [r1, #896]	; 0x380
    5488:	bne	5548 <sf_gen_atmfield_code+0x100>
    548c:	ldr	r0, [pc, #204]	; 5560 <sf_gen_atmfield_code+0x118>
    5490:	add	r0, pc, r0
    5494:	bl	20b8 <sf_bpf_error>
    5498:	ldr	r1, [pc, #196]	; 5564 <sf_gen_atmfield_code+0x11c>
    549c:	add	r1, pc, r1
    54a0:	ldr	r0, [r1, #888]	; 0x378
    54a4:	cmp	r0, #0
    54a8:	ldreq	r0, [pc, #184]	; 5568 <sf_gen_atmfield_code+0x120>
    54ac:	addeq	r0, pc, r0
    54b0:	beq	5494 <sf_gen_atmfield_code+0x4c>
    54b4:	ldr	r1, [r1, #900]	; 0x384
    54b8:	cmn	r1, #1
    54bc:	beq	5558 <sf_gen_atmfield_code+0x110>
    54c0:	stm	sp, {r2, r3, ip}
    54c4:	mvn	r3, #0
    54c8:	mov	r2, #8
    54cc:	mov	r0, #1
    54d0:	bl	38d0 <gen_ncmp>
    54d4:	add	sp, sp, #20
    54d8:	pop	{pc}		; (ldr pc, [sp], #4)
    54dc:	ldr	r1, [pc, #136]	; 556c <sf_gen_atmfield_code+0x124>
    54e0:	add	r1, pc, r1
    54e4:	ldr	r1, [r1, #904]	; 0x388
    54e8:	cmn	r1, #1
    54ec:	beq	5558 <sf_gen_atmfield_code+0x110>
    54f0:	stm	sp, {r2, r3, ip}
    54f4:	mov	r3, #15
    54f8:	mov	r2, #16
    54fc:	b	54cc <sf_gen_atmfield_code+0x84>
    5500:	ldr	r1, [pc, #104]	; 5570 <sf_gen_atmfield_code+0x128>
    5504:	add	r1, pc, r1
    5508:	ldr	r1, [r1, #908]	; 0x38c
    550c:	cmn	r1, #1
    5510:	beq	5558 <sf_gen_atmfield_code+0x110>
    5514:	stm	sp, {r2, r3, ip}
    5518:	add	r1, r1, #5
    551c:	mvn	r3, #0
    5520:	mov	r2, #16
    5524:	b	54cc <sf_gen_atmfield_code+0x84>
    5528:	ldr	r1, [pc, #68]	; 5574 <sf_gen_atmfield_code+0x12c>
    552c:	add	r1, pc, r1
    5530:	ldr	r0, [r1, #888]	; 0x378
    5534:	cmp	r0, #0
    5538:	ldrne	r1, [r1, #904]	; 0x388
    553c:	ldreq	r0, [pc, #52]	; 5578 <sf_gen_atmfield_code+0x130>
    5540:	addeq	r0, pc, r0
    5544:	beq	5494 <sf_gen_atmfield_code+0x4c>
    5548:	cmn	r1, #1
    554c:	stmne	sp, {r2, r3, ip}
    5550:	mvnne	r3, #0
    5554:	bne	54f8 <sf_gen_atmfield_code+0xb0>
    5558:	bl	f44 <abort@plt>
    555c:	.word	0x00027ef0
    5560:	.word	0x0000ad33
    5564:	.word	0x00027ecc
    5568:	.word	0x0000ad37
    556c:	.word	0x00027e88
    5570:	.word	0x00027e64
    5574:	.word	0x00027e3c
    5578:	.word	0x0000acc3

0000557c <gen_linktype>:
    557c:	ldr	r3, [pc, #2496]	; 5f44 <gen_linktype+0x9c8>
    5580:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    5584:	add	r3, pc, r3
    5588:	mov	r4, r0
    558c:	ldr	r3, [r3, #4]
    5590:	cmp	r3, #0
    5594:	beq	564c <gen_linktype+0xd0>
    5598:	cmp	r0, #87	; 0x57
    559c:	beq	55cc <gen_linktype+0x50>
    55a0:	bgt	55b8 <gen_linktype+0x3c>
    55a4:	cmp	r0, #33	; 0x21
    55a8:	beq	55f8 <gen_linktype+0x7c>
    55ac:	ldr	r0, [pc, #2452]	; 5f48 <gen_linktype+0x9cc>
    55b0:	add	r0, pc, r0
    55b4:	bl	20b8 <sf_bpf_error>
    55b8:	cmp	r0, #2048	; 0x800
    55bc:	beq	55f8 <gen_linktype+0x7c>
    55c0:	ldr	r3, [pc, #2436]	; 5f4c <gen_linktype+0x9d0>
    55c4:	cmp	r0, r3
    55c8:	bne	55ac <gen_linktype+0x30>
    55cc:	mov	r3, #1
    55d0:	str	r3, [sp]
    55d4:	mov	r2, #16
    55d8:	mvn	r1, #1
    55dc:	mov	r0, #3
    55e0:	bl	41cc <gen_mcmp>
    55e4:	mov	r3, #240	; 0xf0
    55e8:	str	r3, [sp]
    55ec:	mov	r3, #96	; 0x60
    55f0:	mov	r4, r0
    55f4:	b	5620 <gen_linktype+0xa4>
    55f8:	mov	r3, #1
    55fc:	str	r3, [sp]
    5600:	mov	r2, #16
    5604:	mvn	r1, #1
    5608:	mov	r0, #3
    560c:	bl	41cc <gen_mcmp>
    5610:	mov	r3, #240	; 0xf0
    5614:	str	r3, [sp]
    5618:	mov	r3, #64	; 0x40
    561c:	mov	r4, r0
    5620:	mov	r1, #0
    5624:	mov	r2, #16
    5628:	mov	r0, #3
    562c:	bl	41cc <gen_mcmp>
    5630:	mov	r5, r0
    5634:	mov	r1, r0
    5638:	mov	r0, r4
    563c:	bl	2f48 <sf_gen_and>
    5640:	mov	r0, r5
    5644:	add	sp, sp, #12
    5648:	pop	{r4, r5, r6, r7, pc}
    564c:	ldr	r1, [pc, #2300]	; 5f50 <gen_linktype+0x9d4>
    5650:	add	r1, pc, r1
    5654:	ldr	r3, [r1, #912]	; 0x390
    5658:	cmp	r3, #0
    565c:	beq	5680 <gen_linktype+0x104>
    5660:	bl	1fe0 <ethertype_to_ppptype>
    5664:	mov	r2, #8
    5668:	ldr	r1, [r1, #944]	; 0x3b0
    566c:	mov	r3, r0
    5670:	mov	r0, #2
    5674:	add	sp, sp, #12
    5678:	pop	{r4, r5, r6, r7, lr}
    567c:	b	3a28 <gen_cmp>
    5680:	ldr	r2, [r1, #856]	; 0x358
    5684:	cmp	r2, #144	; 0x90
    5688:	beq	5ed8 <gen_linktype+0x95c>
    568c:	bgt	5890 <gen_linktype+0x314>
    5690:	cmp	r2, #105	; 0x69
    5694:	beq	5a04 <gen_linktype+0x488>
    5698:	bgt	57a8 <gen_linktype+0x22c>
    569c:	cmp	r2, #11
    56a0:	beq	5a74 <gen_linktype+0x4f8>
    56a4:	bgt	5728 <gen_linktype+0x1ac>
    56a8:	cmp	r2, #7
    56ac:	beq	581c <gen_linktype+0x2a0>
    56b0:	bgt	56fc <gen_linktype+0x180>
    56b4:	cmp	r2, #1
    56b8:	beq	59f8 <gen_linktype+0x47c>
    56bc:	cmp	r2, #6
    56c0:	beq	5a74 <gen_linktype+0x4f8>
    56c4:	cmp	r2, #0
    56c8:	bne	574c <gen_linktype+0x1d0>
    56cc:	cmp	r4, #2048	; 0x800
    56d0:	beq	5d98 <gen_linktype+0x81c>
    56d4:	ldr	r3, [pc, #2160]	; 5f4c <gen_linktype+0x9d0>
    56d8:	cmp	r4, r3
    56dc:	moveq	r3, #10
    56e0:	bne	571c <gen_linktype+0x1a0>
    56e4:	cmp	r2, #109	; 0x6d
    56e8:	cmpne	r2, #0
    56ec:	mov	r2, #0
    56f0:	reveq	r3, r3
    56f4:	mov	r1, r2
    56f8:	b	57a0 <gen_linktype+0x224>
    56fc:	cmp	r2, #9
    5700:	beq	5cf0 <gen_linktype+0x774>
    5704:	bgt	5a74 <gen_linktype+0x4f8>
    5708:	cmp	r4, #2048	; 0x800
    570c:	beq	5ca8 <gen_linktype+0x72c>
    5710:	ldr	r3, [pc, #2100]	; 5f4c <gen_linktype+0x9d0>
    5714:	cmp	r4, r3
    5718:	beq	5ccc <gen_linktype+0x750>
    571c:	add	sp, sp, #12
    5720:	pop	{r4, r5, r6, r7, lr}
    5724:	b	21d4 <gen_false>
    5728:	cmp	r2, #19
    572c:	beq	5a74 <gen_linktype+0x4f8>
    5730:	bgt	576c <gen_linktype+0x1f0>
    5734:	cmp	r2, #15
    5738:	beq	5708 <gen_linktype+0x18c>
    573c:	cmp	r2, #16
    5740:	beq	5d0c <gen_linktype+0x790>
    5744:	cmp	r2, #12
    5748:	beq	5708 <gen_linktype+0x18c>
    574c:	ldr	r3, [pc, #2048]	; 5f54 <gen_linktype+0x9d8>
    5750:	add	r3, pc, r3
    5754:	ldr	r1, [r3, #944]	; 0x3b0
    5758:	cmn	r1, #1
    575c:	movne	r3, r4
    5760:	movne	r2, #8
    5764:	bne	57a0 <gen_linktype+0x224>
    5768:	bl	f44 <abort@plt>
    576c:	cmp	r2, #50	; 0x32
    5770:	blt	574c <gen_linktype+0x1d0>
    5774:	cmp	r2, #51	; 0x33
    5778:	ble	5cf0 <gen_linktype+0x774>
    577c:	cmp	r2, #104	; 0x68
    5780:	bne	574c <gen_linktype+0x1d0>
    5784:	ldr	r1, [pc, #1996]	; 5f58 <gen_linktype+0x9dc>
    5788:	cmp	r0, #254	; 0xfe
    578c:	ldr	r3, [pc, #1992]	; 5f5c <gen_linktype+0x9e0>
    5790:	mov	r2, #8
    5794:	movne	r3, r0
    5798:	add	r1, pc, r1
    579c:	ldr	r1, [r1, #944]	; 0x3b0
    57a0:	mov	r0, #1
    57a4:	b	5674 <gen_linktype+0xf8>
    57a8:	cmp	r2, #123	; 0x7b
    57ac:	beq	5a84 <gen_linktype+0x508>
    57b0:	bgt	57fc <gen_linktype+0x280>
    57b4:	cmp	r2, #113	; 0x71
    57b8:	beq	5ae8 <gen_linktype+0x56c>
    57bc:	bgt	57d8 <gen_linktype+0x25c>
    57c0:	cmp	r2, #107	; 0x6b
    57c4:	beq	5e24 <gen_linktype+0x8a8>
    57c8:	blt	574c <gen_linktype+0x1d0>
    57cc:	cmp	r2, #109	; 0x6d
    57d0:	ble	56cc <gen_linktype+0x150>
    57d4:	b	574c <gen_linktype+0x1d0>
    57d8:	cmp	r2, #119	; 0x77
    57dc:	beq	5a04 <gen_linktype+0x488>
    57e0:	cmp	r2, #122	; 0x7a
    57e4:	beq	5a74 <gen_linktype+0x4f8>
    57e8:	cmp	r2, #114	; 0x72
    57ec:	ldreq	r3, [pc, #1900]	; 5f60 <gen_linktype+0x9e4>
    57f0:	bne	574c <gen_linktype+0x1d0>
    57f4:	cmp	r4, r3
    57f8:	b	5ce0 <gen_linktype+0x764>
    57fc:	cmp	r2, #137	; 0x89
    5800:	bgt	586c <gen_linktype+0x2f0>
    5804:	cmp	r2, #130	; 0x82
    5808:	bge	58c8 <gen_linktype+0x34c>
    580c:	cmp	r2, #127	; 0x7f
    5810:	beq	5a04 <gen_linktype+0x488>
    5814:	cmp	r2, #129	; 0x81
    5818:	bne	574c <gen_linktype+0x1d0>
    581c:	ldr	r3, [pc, #1856]	; 5f64 <gen_linktype+0x9e8>
    5820:	cmp	r4, r3
    5824:	beq	5dfc <gen_linktype+0x880>
    5828:	bgt	5da0 <gen_linktype+0x824>
    582c:	cmp	r4, #2048	; 0x800
    5830:	beq	5dcc <gen_linktype+0x850>
    5834:	ldr	r3, [pc, #1836]	; 5f68 <gen_linktype+0x9ec>
    5838:	cmp	r4, r3
    583c:	bne	571c <gen_linktype+0x1a0>
    5840:	ldr	r3, [pc, #1828]	; 5f6c <gen_linktype+0x9f0>
    5844:	mov	r2, #16
    5848:	add	r3, pc, r3
    584c:	mov	r0, #1
    5850:	ldr	r4, [r3, #944]	; 0x3b0
    5854:	mov	r3, #213	; 0xd5
    5858:	mov	r1, r4
    585c:	bl	3a28 <gen_cmp>
    5860:	mov	r3, #241	; 0xf1
    5864:	mov	r6, r0
    5868:	b	5df4 <gen_linktype+0x878>
    586c:	cmp	r2, #139	; 0x8b
    5870:	blt	574c <gen_linktype+0x1d0>
    5874:	cmp	r2, #140	; 0x8c
    5878:	ble	5ee4 <gen_linktype+0x968>
    587c:	cmp	r2, #143	; 0x8f
    5880:	bne	574c <gen_linktype+0x1d0>
    5884:	ldr	r0, [pc, #1764]	; 5f70 <gen_linktype+0x9f4>
    5888:	add	r0, pc, r0
    588c:	b	55b4 <gen_linktype+0x38>
    5890:	cmp	r2, #192	; 0xc0
    5894:	beq	5a04 <gen_linktype+0x488>
    5898:	bgt	5938 <gen_linktype+0x3bc>
    589c:	cmp	r2, #181	; 0xb5
    58a0:	bgt	58f8 <gen_linktype+0x37c>
    58a4:	cmp	r2, #178	; 0xb2
    58a8:	bge	58c8 <gen_linktype+0x34c>
    58ac:	cmp	r2, #166	; 0xa6
    58b0:	beq	5cf0 <gen_linktype+0x774>
    58b4:	bgt	58dc <gen_linktype+0x360>
    58b8:	cmp	r2, #163	; 0xa3
    58bc:	beq	5a04 <gen_linktype+0x488>
    58c0:	cmp	r2, #164	; 0xa4
    58c4:	bne	574c <gen_linktype+0x1d0>
    58c8:	mvn	r3, #255	; 0xff
    58cc:	str	r3, [sp]
    58d0:	mov	r2, #0
    58d4:	ldr	r3, [pc, #1688]	; 5f74 <gen_linktype+0x9f8>
    58d8:	b	5cb8 <gen_linktype+0x73c>
    58dc:	cmp	r2, #168	; 0xa8
    58e0:	ble	58c8 <gen_linktype+0x34c>
    58e4:	cmp	r2, #177	; 0xb1
    58e8:	bne	574c <gen_linktype+0x1d0>
    58ec:	ldr	r0, [pc, #1668]	; 5f78 <gen_linktype+0x9fc>
    58f0:	add	r0, pc, r0
    58f4:	b	55b4 <gen_linktype+0x38>
    58f8:	cmp	r2, #187	; 0xbb
    58fc:	beq	5efc <gen_linktype+0x980>
    5900:	bgt	5924 <gen_linktype+0x3a8>
    5904:	cmp	r2, #183	; 0xb7
    5908:	beq	58c8 <gen_linktype+0x34c>
    590c:	blt	5eb8 <gen_linktype+0x93c>
    5910:	cmp	r2, #186	; 0xba
    5914:	bne	574c <gen_linktype+0x1d0>
    5918:	ldr	r0, [pc, #1628]	; 5f7c <gen_linktype+0xa00>
    591c:	add	r0, pc, r0
    5920:	b	55b4 <gen_linktype+0x38>
    5924:	cmp	r2, #190	; 0xbe
    5928:	beq	5f08 <gen_linktype+0x98c>
    592c:	bgt	595c <gen_linktype+0x3e0>
    5930:	cmp	r2, #189	; 0xbd
    5934:	b	5914 <gen_linktype+0x398>
    5938:	cmp	r2, #200	; 0xc8
    593c:	beq	58c8 <gen_linktype+0x34c>
    5940:	bgt	5980 <gen_linktype+0x404>
    5944:	cmp	r2, #196	; 0xc4
    5948:	beq	5f20 <gen_linktype+0x9a4>
    594c:	bgt	5968 <gen_linktype+0x3ec>
    5950:	cmp	r2, #194	; 0xc2
    5954:	beq	58c8 <gen_linktype+0x34c>
    5958:	ble	5f14 <gen_linktype+0x998>
    595c:	ldr	r0, [pc, #1564]	; 5f80 <gen_linktype+0xa04>
    5960:	add	r0, pc, r0
    5964:	b	55b4 <gen_linktype+0x38>
    5968:	cmp	r2, #198	; 0xc6
    596c:	beq	5f2c <gen_linktype+0x9b0>
    5970:	ble	5ef0 <gen_linktype+0x974>
    5974:	ldr	r0, [pc, #1544]	; 5f84 <gen_linktype+0xa08>
    5978:	add	r0, pc, r0
    597c:	b	55b4 <gen_linktype+0x38>
    5980:	cmp	r2, #220	; 0xdc
    5984:	beq	5918 <gen_linktype+0x39c>
    5988:	bgt	59a4 <gen_linktype+0x428>
    598c:	cmp	r2, #202	; 0xca
    5990:	beq	5f38 <gen_linktype+0x9bc>
    5994:	blt	5efc <gen_linktype+0x980>
    5998:	cmp	r2, #215	; 0xd7
    599c:	beq	595c <gen_linktype+0x3e0>
    59a0:	b	574c <gen_linktype+0x1d0>
    59a4:	cmp	r2, #227	; 0xe3
    59a8:	beq	5f08 <gen_linktype+0x98c>
    59ac:	bgt	59e0 <gen_linktype+0x464>
    59b0:	cmp	r2, #226	; 0xe2
    59b4:	bne	574c <gen_linktype+0x1d0>
    59b8:	cmp	r0, #2048	; 0x800
    59bc:	beq	5ec4 <gen_linktype+0x948>
    59c0:	ldr	r3, [pc, #1412]	; 5f4c <gen_linktype+0x9d0>
    59c4:	cmp	r0, r3
    59c8:	bne	571c <gen_linktype+0x1a0>
    59cc:	ldr	r1, [pc, #1460]	; 5f88 <gen_linktype+0xa0c>
    59d0:	mov	r3, #26
    59d4:	mov	r2, #16
    59d8:	add	r1, pc, r1
    59dc:	b	579c <gen_linktype+0x220>
    59e0:	cmp	r2, #228	; 0xe4
    59e4:	beq	5cdc <gen_linktype+0x760>
    59e8:	cmp	r2, #229	; 0xe5
    59ec:	ldreq	r3, [pc, #1368]	; 5f4c <gen_linktype+0x9d0>
    59f0:	beq	57f4 <gen_linktype+0x278>
    59f4:	b	574c <gen_linktype+0x1d0>
    59f8:	add	sp, sp, #12
    59fc:	pop	{r4, r5, r6, r7, lr}
    5a00:	b	4894 <gen_ether_linktype>
    5a04:	mov	r1, #16
    5a08:	mov	r0, #0
    5a0c:	bl	36cc <gen_load_llrel>
    5a10:	mov	r5, r0
    5a14:	mov	r0, #69	; 0x45
    5a18:	bl	219c <new_block>
    5a1c:	mov	r3, #8
    5a20:	mov	r1, #16
    5a24:	str	r3, [r0, #20]
    5a28:	str	r5, [r0, #4]
    5a2c:	mov	r6, r0
    5a30:	mov	r0, #0
    5a34:	bl	36cc <gen_load_llrel>
    5a38:	mov	r5, r0
    5a3c:	mov	r0, #69	; 0x45
    5a40:	bl	219c <new_block>
    5a44:	mov	r3, #4
    5a48:	mov	r1, r6
    5a4c:	str	r3, [r0, #20]
    5a50:	ldr	r3, [r0, #44]	; 0x2c
    5a54:	clz	r3, r3
    5a58:	lsr	r3, r3, #5
    5a5c:	str	r5, [r0, #4]
    5a60:	str	r3, [r0, #44]	; 0x2c
    5a64:	bl	2f48 <sf_gen_and>
    5a68:	mov	r0, r4
    5a6c:	bl	3f64 <gen_llc_linktype>
    5a70:	b	5ac0 <gen_linktype+0x544>
    5a74:	mov	r0, r4
    5a78:	add	sp, sp, #12
    5a7c:	pop	{r4, r5, r6, r7, lr}
    5a80:	b	3f64 <gen_llc_linktype>
    5a84:	ldr	r3, [r1, #892]	; 0x37c
    5a88:	cmp	r3, #0
    5a8c:	beq	5ad0 <gen_linktype+0x554>
    5a90:	mov	r3, #65280	; 0xff00
    5a94:	mov	r2, #8
    5a98:	mov	r1, #4
    5a9c:	mov	r0, #1
    5aa0:	bl	3a28 <gen_cmp>
    5aa4:	ldr	r3, [r0, #44]	; 0x2c
    5aa8:	clz	r3, r3
    5aac:	lsr	r3, r3, #5
    5ab0:	mov	r6, r0
    5ab4:	str	r3, [r0, #44]	; 0x2c
    5ab8:	mov	r0, r4
    5abc:	bl	4894 <gen_ether_linktype>
    5ac0:	mov	r5, r0
    5ac4:	mov	r1, r0
    5ac8:	mov	r0, r6
    5acc:	b	563c <gen_linktype+0xc0>
    5ad0:	mov	r2, #16
    5ad4:	mov	r1, #2
    5ad8:	mov	r0, #53	; 0x35
    5adc:	bl	5448 <sf_gen_atmfield_code>
    5ae0:	mov	r6, r0
    5ae4:	b	5a68 <gen_linktype+0x4ec>
    5ae8:	cmp	r0, #240	; 0xf0
    5aec:	beq	5b68 <gen_linktype+0x5ec>
    5af0:	bgt	5b44 <gen_linktype+0x5c8>
    5af4:	cmp	r0, #6
    5af8:	beq	5b68 <gen_linktype+0x5ec>
    5afc:	cmp	r0, #224	; 0xe0
    5b00:	beq	5ba0 <gen_linktype+0x624>
    5b04:	ldr	r3, [pc, #1152]	; 5f8c <gen_linktype+0xa10>
    5b08:	cmp	r4, r3
    5b0c:	bgt	5c94 <gen_linktype+0x718>
    5b10:	ldr	r5, [pc, #1144]	; 5f90 <gen_linktype+0xa14>
    5b14:	mov	r3, #4
    5b18:	add	r5, pc, r5
    5b1c:	mov	r2, #8
    5b20:	ldr	r1, [r5, #944]	; 0x3b0
    5b24:	mov	r0, #1
    5b28:	bl	3a28 <gen_cmp>
    5b2c:	mov	r3, r4
    5b30:	mov	r2, #16
    5b34:	ldr	r1, [r5, #940]	; 0x3ac
    5b38:	mov	r6, r0
    5b3c:	mov	r0, #1
    5b40:	b	5b98 <gen_linktype+0x61c>
    5b44:	ldr	r3, [pc, #1044]	; 5f60 <gen_linktype+0x9e4>
    5b48:	cmp	r0, r3
    5b4c:	mov	r5, r3
    5b50:	beq	5c38 <gen_linktype+0x6bc>
    5b54:	add	r3, r3, #88	; 0x58
    5b58:	cmp	r0, r3
    5b5c:	beq	5c38 <gen_linktype+0x6bc>
    5b60:	cmp	r0, #254	; 0xfe
    5b64:	bne	5b04 <gen_linktype+0x588>
    5b68:	ldr	r1, [pc, #1060]	; 5f94 <gen_linktype+0xa18>
    5b6c:	mov	r3, #4
    5b70:	add	r1, pc, r1
    5b74:	mov	r2, #8
    5b78:	ldr	r1, [r1, #944]	; 0x3b0
    5b7c:	mov	r0, #1
    5b80:	bl	3a28 <gen_cmp>
    5b84:	orr	r3, r4, r4, lsl #8
    5b88:	mov	r2, #8
    5b8c:	mov	r1, #0
    5b90:	mov	r6, r0
    5b94:	mov	r0, #2
    5b98:	bl	3a28 <gen_cmp>
    5b9c:	b	5ac0 <gen_linktype+0x544>
    5ba0:	mov	r3, r0
    5ba4:	mov	r2, #16
    5ba8:	mov	r1, #0
    5bac:	mov	r0, #2
    5bb0:	bl	3a28 <gen_cmp>
    5bb4:	ldr	r1, [pc, #988]	; 5f98 <gen_linktype+0xa1c>
    5bb8:	mov	r4, r0
    5bbc:	mov	r0, #0
    5bc0:	bl	3b84 <gen_snap>
    5bc4:	mov	r5, r0
    5bc8:	mov	r1, r0
    5bcc:	mov	r0, r4
    5bd0:	bl	2fc8 <sf_gen_or>
    5bd4:	ldr	r3, [pc, #960]	; 5f9c <gen_linktype+0xa20>
    5bd8:	mov	r2, #8
    5bdc:	add	r3, pc, r3
    5be0:	mov	r0, #1
    5be4:	ldr	r4, [r3, #944]	; 0x3b0
    5be8:	mov	r3, #4
    5bec:	mov	r1, r4
    5bf0:	bl	3a28 <gen_cmp>
    5bf4:	mov	r1, r5
    5bf8:	bl	2f48 <sf_gen_and>
    5bfc:	mov	r3, #1
    5c00:	mov	r2, #8
    5c04:	mov	r0, r3
    5c08:	mov	r1, r4
    5c0c:	bl	3a28 <gen_cmp>
    5c10:	mov	r1, r5
    5c14:	bl	2fc8 <sf_gen_or>
    5c18:	ldr	r3, [pc, #888]	; 5f98 <gen_linktype+0xa1c>
    5c1c:	mov	r2, #8
    5c20:	mov	r1, r4
    5c24:	mov	r0, #1
    5c28:	bl	3a28 <gen_cmp>
    5c2c:	mov	r1, r5
    5c30:	bl	2fc8 <sf_gen_or>
    5c34:	b	5640 <gen_linktype+0xc4>
    5c38:	ldr	r3, [pc, #864]	; 5fa0 <gen_linktype+0xa24>
    5c3c:	mov	r2, #8
    5c40:	add	r3, pc, r3
    5c44:	mov	r0, #1
    5c48:	ldr	r6, [r3, #944]	; 0x3b0
    5c4c:	mov	r3, #4
    5c50:	mov	r1, r6
    5c54:	bl	3a28 <gen_cmp>
    5c58:	cmp	r4, r5
    5c5c:	moveq	r1, r4
    5c60:	ldrne	r1, [pc, #828]	; 5fa4 <gen_linktype+0xa28>
    5c64:	mov	r7, r0
    5c68:	ldreq	r0, [pc, #824]	; 5fa8 <gen_linktype+0xa2c>
    5c6c:	movne	r0, #0
    5c70:	bl	3b84 <gen_snap>
    5c74:	mov	r1, r0
    5c78:	mov	r5, r0
    5c7c:	mov	r0, r7
    5c80:	bl	2f48 <sf_gen_and>
    5c84:	mov	r3, r4
    5c88:	mov	r2, #8
    5c8c:	mov	r1, r6
    5c90:	b	5c24 <gen_linktype+0x6a8>
    5c94:	ldr	r1, [pc, #784]	; 5fac <gen_linktype+0xa30>
    5c98:	mov	r3, r4
    5c9c:	mov	r2, #8
    5ca0:	add	r1, pc, r1
    5ca4:	b	579c <gen_linktype+0x220>
    5ca8:	mov	r3, #240	; 0xf0
    5cac:	str	r3, [sp]
    5cb0:	mov	r3, #64	; 0x40
    5cb4:	mov	r2, #16
    5cb8:	mov	r1, #0
    5cbc:	mov	r0, #1
    5cc0:	bl	41cc <gen_mcmp>
    5cc4:	mov	r5, r0
    5cc8:	b	5640 <gen_linktype+0xc4>
    5ccc:	mov	r3, #240	; 0xf0
    5cd0:	str	r3, [sp]
    5cd4:	mov	r3, #96	; 0x60
    5cd8:	b	5cb4 <gen_linktype+0x738>
    5cdc:	cmp	r0, #2048	; 0x800
    5ce0:	bne	571c <gen_linktype+0x1a0>
    5ce4:	add	sp, sp, #12
    5ce8:	pop	{r4, r5, r6, r7, lr}
    5cec:	b	2234 <gen_true>
    5cf0:	mov	r0, r4
    5cf4:	bl	1fe0 <ethertype_to_ppptype>
    5cf8:	ldr	r1, [pc, #688]	; 5fb0 <gen_linktype+0xa34>
    5cfc:	mov	r2, #8
    5d00:	add	r1, pc, r1
    5d04:	mov	r3, r0
    5d08:	b	579c <gen_linktype+0x220>
    5d0c:	cmp	r0, #2048	; 0x800
    5d10:	bne	5d80 <gen_linktype+0x804>
    5d14:	ldr	r3, [pc, #664]	; 5fb4 <gen_linktype+0xa38>
    5d18:	mov	r2, #8
    5d1c:	add	r3, pc, r3
    5d20:	mov	r0, #1
    5d24:	ldr	r4, [r3, #944]	; 0x3b0
    5d28:	mov	r3, #33	; 0x21
    5d2c:	mov	r1, r4
    5d30:	bl	3a28 <gen_cmp>
    5d34:	mov	r3, #45	; 0x2d
    5d38:	mov	r2, #8
    5d3c:	mov	r1, r4
    5d40:	mov	r5, r0
    5d44:	mov	r0, #1
    5d48:	bl	3a28 <gen_cmp>
    5d4c:	mov	r1, r0
    5d50:	mov	r6, r0
    5d54:	mov	r0, r5
    5d58:	bl	2fc8 <sf_gen_or>
    5d5c:	mov	r3, #47	; 0x2f
    5d60:	mov	r2, #8
    5d64:	mov	r1, r4
    5d68:	mov	r0, #1
    5d6c:	bl	3a28 <gen_cmp>
    5d70:	mov	r5, r0
    5d74:	mov	r1, r0
    5d78:	mov	r0, r6
    5d7c:	b	5c30 <gen_linktype+0x6b4>
    5d80:	bl	1fe0 <ethertype_to_ppptype>
    5d84:	ldr	r1, [pc, #556]	; 5fb8 <gen_linktype+0xa3c>
    5d88:	mov	r2, #8
    5d8c:	add	r1, pc, r1
    5d90:	mov	r3, r0
    5d94:	b	579c <gen_linktype+0x220>
    5d98:	mov	r3, #2
    5d9c:	b	56e4 <gen_linktype+0x168>
    5da0:	ldr	r3, [pc, #440]	; 5f60 <gen_linktype+0x9e4>
    5da4:	cmp	r4, r3
    5da8:	beq	5e10 <gen_linktype+0x894>
    5dac:	ldr	r3, [pc, #408]	; 5f4c <gen_linktype+0x9d0>
    5db0:	cmp	r4, r3
    5db4:	bne	571c <gen_linktype+0x1a0>
    5db8:	ldr	r1, [pc, #508]	; 5fbc <gen_linktype+0xa40>
    5dbc:	mov	r3, #196	; 0xc4
    5dc0:	mov	r2, #16
    5dc4:	add	r1, pc, r1
    5dc8:	b	579c <gen_linktype+0x220>
    5dcc:	ldr	r3, [pc, #492]	; 5fc0 <gen_linktype+0xa44>
    5dd0:	mov	r2, #16
    5dd4:	add	r3, pc, r3
    5dd8:	mov	r0, #1
    5ddc:	ldr	r4, [r3, #944]	; 0x3b0
    5de0:	mov	r3, #212	; 0xd4
    5de4:	mov	r1, r4
    5de8:	bl	3a28 <gen_cmp>
    5dec:	mov	r3, #240	; 0xf0
    5df0:	mov	r6, r0
    5df4:	mov	r2, #16
    5df8:	b	5d64 <gen_linktype+0x7e8>
    5dfc:	ldr	r1, [pc, #448]	; 5fc4 <gen_linktype+0xa48>
    5e00:	mov	r3, #214	; 0xd6
    5e04:	mov	r2, #16
    5e08:	add	r1, pc, r1
    5e0c:	b	579c <gen_linktype+0x220>
    5e10:	ldr	r1, [pc, #432]	; 5fc8 <gen_linktype+0xa4c>
    5e14:	mov	r3, #221	; 0xdd
    5e18:	mov	r2, #16
    5e1c:	add	r1, pc, r1
    5e20:	b	579c <gen_linktype+0x220>
    5e24:	cmp	r0, #2048	; 0x800
    5e28:	beq	5ea0 <gen_linktype+0x924>
    5e2c:	ldr	r3, [pc, #280]	; 5f4c <gen_linktype+0x9d0>
    5e30:	cmp	r0, r3
    5e34:	beq	5eb0 <gen_linktype+0x934>
    5e38:	cmp	r0, #254	; 0xfe
    5e3c:	bne	571c <gen_linktype+0x1a0>
    5e40:	ldr	r3, [pc, #388]	; 5fcc <gen_linktype+0xa50>
    5e44:	mov	r2, #8
    5e48:	mov	r1, #2
    5e4c:	mov	r0, #1
    5e50:	bl	3a28 <gen_cmp>
    5e54:	ldr	r3, [pc, #372]	; 5fd0 <gen_linktype+0xa54>
    5e58:	mov	r2, #8
    5e5c:	mov	r1, #2
    5e60:	mov	r4, r0
    5e64:	mov	r0, #1
    5e68:	bl	3a28 <gen_cmp>
    5e6c:	ldr	r3, [pc, #352]	; 5fd4 <gen_linktype+0xa58>
    5e70:	mov	r2, #8
    5e74:	mov	r1, #2
    5e78:	mov	r6, r0
    5e7c:	mov	r0, #1
    5e80:	bl	3a28 <gen_cmp>
    5e84:	mov	r1, r0
    5e88:	mov	r5, r0
    5e8c:	mov	r0, r6
    5e90:	bl	2fc8 <sf_gen_or>
    5e94:	mov	r1, r5
    5e98:	mov	r0, r4
    5e9c:	b	5c30 <gen_linktype+0x6b4>
    5ea0:	mov	r3, #972	; 0x3cc
    5ea4:	mov	r2, #8
    5ea8:	mov	r1, #2
    5eac:	b	57a0 <gen_linktype+0x224>
    5eb0:	ldr	r3, [pc, #288]	; 5fd8 <gen_linktype+0xa5c>
    5eb4:	b	5ea4 <gen_linktype+0x928>
    5eb8:	ldr	r0, [pc, #284]	; 5fdc <gen_linktype+0xa60>
    5ebc:	add	r0, pc, r0
    5ec0:	b	55b4 <gen_linktype+0x38>
    5ec4:	ldr	r1, [pc, #276]	; 5fe0 <gen_linktype+0xa64>
    5ec8:	mov	r3, #2
    5ecc:	mov	r2, #16
    5ed0:	add	r1, pc, r1
    5ed4:	b	579c <gen_linktype+0x220>
    5ed8:	ldr	r0, [pc, #260]	; 5fe4 <gen_linktype+0xa68>
    5edc:	add	r0, pc, r0
    5ee0:	b	55b4 <gen_linktype+0x38>
    5ee4:	ldr	r0, [pc, #252]	; 5fe8 <gen_linktype+0xa6c>
    5ee8:	add	r0, pc, r0
    5eec:	b	55b4 <gen_linktype+0x38>
    5ef0:	ldr	r0, [pc, #244]	; 5fec <gen_linktype+0xa70>
    5ef4:	add	r0, pc, r0
    5ef8:	b	55b4 <gen_linktype+0x38>
    5efc:	ldr	r0, [pc, #236]	; 5ff0 <gen_linktype+0xa74>
    5f00:	add	r0, pc, r0
    5f04:	b	55b4 <gen_linktype+0x38>
    5f08:	ldr	r0, [pc, #228]	; 5ff4 <gen_linktype+0xa78>
    5f0c:	add	r0, pc, r0
    5f10:	b	55b4 <gen_linktype+0x38>
    5f14:	ldr	r0, [pc, #220]	; 5ff8 <gen_linktype+0xa7c>
    5f18:	add	r0, pc, r0
    5f1c:	b	55b4 <gen_linktype+0x38>
    5f20:	ldr	r0, [pc, #212]	; 5ffc <gen_linktype+0xa80>
    5f24:	add	r0, pc, r0
    5f28:	b	55b4 <gen_linktype+0x38>
    5f2c:	ldr	r0, [pc, #204]	; 6000 <gen_linktype+0xa84>
    5f30:	add	r0, pc, r0
    5f34:	b	55b4 <gen_linktype+0x38>
    5f38:	ldr	r0, [pc, #196]	; 6004 <gen_linktype+0xa88>
    5f3c:	add	r0, pc, r0
    5f40:	b	55b4 <gen_linktype+0x38>
    5f44:	.word	0x00027cf8
    5f48:	.word	0x0000ac77
    5f4c:	.word	0x000086dd
    5f50:	.word	0x00027d18
    5f54:	.word	0x00027c18
    5f58:	.word	0x00027bd0
    5f5c:	.word	0x0000fefe
    5f60:	.word	0x0000809b
    5f64:	.word	0x00008035
    5f68:	.word	0x00000806
    5f6c:	.word	0x00027b20
    5f70:	.word	0x0000aa2e
    5f74:	.word	0x4d474300
    5f78:	.word	0x0000aa54
    5f7c:	.word	0x0000aa57
    5f80:	.word	0x0000aaa3
    5f84:	.word	0x0000ab58
    5f88:	.word	0x00027990
    5f8c:	.word	0x000005dc
    5f90:	.word	0x00027850
    5f94:	.word	0x000277f8
    5f98:	.word	0x00008137
    5f9c:	.word	0x0002778c
    5fa0:	.word	0x00027728
    5fa4:	.word	0x000080f3
    5fa8:	.word	0x00080007
    5fac:	.word	0x000276c8
    5fb0:	.word	0x00027668
    5fb4:	.word	0x0002764c
    5fb8:	.word	0x000275dc
    5fbc:	.word	0x000275a4
    5fc0:	.word	0x00027594
    5fc4:	.word	0x00027560
    5fc8:	.word	0x0002754c
    5fcc:	.word	0x00000381
    5fd0:	.word	0x00000382
    5fd4:	.word	0x00000383
    5fd8:	.word	0x0000038e
    5fdc:	.word	0x0000a38a
    5fe0:	.word	0x00027498
    5fe4:	.word	0x0000a3ab
    5fe8:	.word	0x0000a3ff
    5fec:	.word	0x0000a422
    5ff0:	.word	0x0000a4a1
    5ff4:	.word	0x0000a4c9
    5ff8:	.word	0x0000a523
    5ffc:	.word	0x0000a54d
    6000:	.word	0x0000a570
    6004:	.word	0x0000a5c3

00006008 <gen_proto>:
    6008:	cmp	r2, #0
    600c:	push	{r4, r5, r6, lr}
    6010:	beq	6020 <gen_proto+0x18>
    6014:	ldr	r0, [pc, #756]	; 6310 <gen_proto+0x308>
    6018:	add	r0, pc, r0
    601c:	bl	20b8 <sf_bpf_error>
    6020:	mov	r4, r0
    6024:	cmp	r1, #40	; 0x28
    6028:	addls	pc, pc, r1, lsl #2
    602c:	b	630c <gen_proto+0x304>
    6030:	b	60d4 <gen_proto+0xcc>
    6034:	b	6234 <gen_proto+0x22c>
    6038:	b	610c <gen_proto+0x104>
    603c:	b	61d4 <gen_proto+0x1cc>
    6040:	b	61e0 <gen_proto+0x1d8>
    6044:	b	6254 <gen_proto+0x24c>
    6048:	b	6248 <gen_proto+0x240>
    604c:	b	623c <gen_proto+0x234>
    6050:	b	6260 <gen_proto+0x258>
    6054:	b	626c <gen_proto+0x264>
    6058:	b	6278 <gen_proto+0x270>
    605c:	b	61ec <gen_proto+0x1e4>
    6060:	b	61f8 <gen_proto+0x1f0>
    6064:	b	6210 <gen_proto+0x208>
    6068:	b	6204 <gen_proto+0x1fc>
    606c:	b	621c <gen_proto+0x214>
    6070:	b	6228 <gen_proto+0x220>
    6074:	b	629c <gen_proto+0x294>
    6078:	b	62b8 <gen_proto+0x2b0>
    607c:	b	62c4 <gen_proto+0x2bc>
    6080:	b	62d0 <gen_proto+0x2c8>
    6084:	b	6284 <gen_proto+0x27c>
    6088:	b	6290 <gen_proto+0x288>
    608c:	b	630c <gen_proto+0x304>
    6090:	b	612c <gen_proto+0x124>
    6094:	b	630c <gen_proto+0x304>
    6098:	b	61b0 <gen_proto+0x1a8>
    609c:	b	630c <gen_proto+0x304>
    60a0:	b	62dc <gen_proto+0x2d4>
    60a4:	b	62e8 <gen_proto+0x2e0>
    60a8:	b	62f4 <gen_proto+0x2ec>
    60ac:	b	630c <gen_proto+0x304>
    60b0:	b	630c <gen_proto+0x304>
    60b4:	b	630c <gen_proto+0x304>
    60b8:	b	630c <gen_proto+0x304>
    60bc:	b	630c <gen_proto+0x304>
    60c0:	b	630c <gen_proto+0x304>
    60c4:	b	630c <gen_proto+0x304>
    60c8:	b	630c <gen_proto+0x304>
    60cc:	b	630c <gen_proto+0x304>
    60d0:	b	6300 <gen_proto+0x2f8>
    60d4:	mov	r2, #0
    60d8:	mov	r1, #2
    60dc:	bl	6008 <gen_proto>
    60e0:	mov	r1, #17
    60e4:	mov	r2, #0
    60e8:	mov	r5, r0
    60ec:	mov	r0, r4
    60f0:	bl	6008 <gen_proto>
    60f4:	mov	r4, r0
    60f8:	mov	r1, r0
    60fc:	mov	r0, r5
    6100:	bl	2fc8 <sf_gen_or>
    6104:	mov	r0, r4
    6108:	pop	{r4, r5, r6, pc}
    610c:	mov	r0, #2048	; 0x800
    6110:	bl	557c <gen_linktype>
    6114:	mov	r3, r4
    6118:	mov	r2, #16
    611c:	mov	r1, #9
    6120:	mov	r5, r0
    6124:	mov	r0, #3
    6128:	b	617c <gen_proto+0x174>
    612c:	ldr	r3, [pc, #480]	; 6314 <gen_proto+0x30c>
    6130:	add	r3, pc, r3
    6134:	ldr	r3, [r3, #856]	; 0x358
    6138:	cmp	r3, #104	; 0x68
    613c:	beq	6160 <gen_proto+0x158>
    6140:	cmp	r3, #107	; 0x6b
    6144:	bne	6194 <gen_proto+0x18c>
    6148:	orr	r3, r0, #768	; 0x300
    614c:	mov	r2, #8
    6150:	mov	r1, #2
    6154:	mov	r0, #1
    6158:	pop	{r4, r5, r6, lr}
    615c:	b	3a28 <gen_cmp>
    6160:	ldr	r0, [pc, #432]	; 6318 <gen_proto+0x310>
    6164:	bl	557c <gen_linktype>
    6168:	mov	r3, r4
    616c:	mov	r2, #16
    6170:	mov	r1, #1
    6174:	mov	r5, r0
    6178:	mov	r0, #4
    617c:	bl	3a28 <gen_cmp>
    6180:	mov	r4, r0
    6184:	mov	r1, r0
    6188:	mov	r0, r5
    618c:	bl	2f48 <sf_gen_and>
    6190:	b	6104 <gen_proto+0xfc>
    6194:	mov	r0, #254	; 0xfe
    6198:	bl	557c <gen_linktype>
    619c:	mov	r3, r4
    61a0:	mov	r2, #16
    61a4:	mov	r1, #0
    61a8:	mov	r5, r0
    61ac:	b	6178 <gen_proto+0x170>
    61b0:	mov	r2, #0
    61b4:	mov	r1, #24
    61b8:	mov	r0, #131	; 0x83
    61bc:	bl	6008 <gen_proto>
    61c0:	mov	r3, r4
    61c4:	mov	r2, #16
    61c8:	mov	r1, #4
    61cc:	mov	r5, r0
    61d0:	b	6178 <gen_proto+0x170>
    61d4:	ldr	r0, [pc, #320]	; 631c <gen_proto+0x314>
    61d8:	add	r0, pc, r0
    61dc:	b	601c <gen_proto+0x14>
    61e0:	ldr	r0, [pc, #312]	; 6320 <gen_proto+0x318>
    61e4:	add	r0, pc, r0
    61e8:	b	601c <gen_proto+0x14>
    61ec:	ldr	r0, [pc, #304]	; 6324 <gen_proto+0x31c>
    61f0:	add	r0, pc, r0
    61f4:	b	601c <gen_proto+0x14>
    61f8:	ldr	r0, [pc, #296]	; 6328 <gen_proto+0x320>
    61fc:	add	r0, pc, r0
    6200:	b	601c <gen_proto+0x14>
    6204:	ldr	r0, [pc, #288]	; 632c <gen_proto+0x324>
    6208:	add	r0, pc, r0
    620c:	b	601c <gen_proto+0x14>
    6210:	ldr	r0, [pc, #280]	; 6330 <gen_proto+0x328>
    6214:	add	r0, pc, r0
    6218:	b	601c <gen_proto+0x14>
    621c:	ldr	r0, [pc, #272]	; 6334 <gen_proto+0x32c>
    6220:	add	r0, pc, r0
    6224:	b	601c <gen_proto+0x14>
    6228:	ldr	r0, [pc, #264]	; 6338 <gen_proto+0x330>
    622c:	add	r0, pc, r0
    6230:	b	601c <gen_proto+0x14>
    6234:	pop	{r4, r5, r6, lr}
    6238:	b	557c <gen_linktype>
    623c:	ldr	r0, [pc, #248]	; 633c <gen_proto+0x334>
    6240:	add	r0, pc, r0
    6244:	b	601c <gen_proto+0x14>
    6248:	ldr	r0, [pc, #240]	; 6340 <gen_proto+0x338>
    624c:	add	r0, pc, r0
    6250:	b	601c <gen_proto+0x14>
    6254:	ldr	r0, [pc, #232]	; 6344 <gen_proto+0x33c>
    6258:	add	r0, pc, r0
    625c:	b	601c <gen_proto+0x14>
    6260:	ldr	r0, [pc, #224]	; 6348 <gen_proto+0x340>
    6264:	add	r0, pc, r0
    6268:	b	601c <gen_proto+0x14>
    626c:	ldr	r0, [pc, #216]	; 634c <gen_proto+0x344>
    6270:	add	r0, pc, r0
    6274:	b	601c <gen_proto+0x14>
    6278:	ldr	r0, [pc, #208]	; 6350 <gen_proto+0x348>
    627c:	add	r0, pc, r0
    6280:	b	601c <gen_proto+0x14>
    6284:	ldr	r0, [pc, #200]	; 6354 <gen_proto+0x34c>
    6288:	add	r0, pc, r0
    628c:	b	601c <gen_proto+0x14>
    6290:	ldr	r0, [pc, #192]	; 6358 <gen_proto+0x350>
    6294:	add	r0, pc, r0
    6298:	b	601c <gen_proto+0x14>
    629c:	ldr	r0, [pc, #184]	; 635c <gen_proto+0x354>
    62a0:	bl	557c <gen_linktype>
    62a4:	mov	r3, r4
    62a8:	mov	r2, #16
    62ac:	mov	r1, #6
    62b0:	mov	r5, r0
    62b4:	b	6124 <gen_proto+0x11c>
    62b8:	ldr	r0, [pc, #160]	; 6360 <gen_proto+0x358>
    62bc:	add	r0, pc, r0
    62c0:	b	601c <gen_proto+0x14>
    62c4:	ldr	r0, [pc, #152]	; 6364 <gen_proto+0x35c>
    62c8:	add	r0, pc, r0
    62cc:	b	601c <gen_proto+0x14>
    62d0:	ldr	r0, [pc, #144]	; 6368 <gen_proto+0x360>
    62d4:	add	r0, pc, r0
    62d8:	b	601c <gen_proto+0x14>
    62dc:	ldr	r0, [pc, #136]	; 636c <gen_proto+0x364>
    62e0:	add	r0, pc, r0
    62e4:	b	601c <gen_proto+0x14>
    62e8:	ldr	r0, [pc, #128]	; 6370 <gen_proto+0x368>
    62ec:	add	r0, pc, r0
    62f0:	b	601c <gen_proto+0x14>
    62f4:	ldr	r0, [pc, #120]	; 6374 <gen_proto+0x36c>
    62f8:	add	r0, pc, r0
    62fc:	b	601c <gen_proto+0x14>
    6300:	ldr	r0, [pc, #112]	; 6378 <gen_proto+0x370>
    6304:	add	r0, pc, r0
    6308:	b	601c <gen_proto+0x14>
    630c:	bl	f44 <abort@plt>
    6310:	.word	0x0000a517
    6314:	.word	0x00027238
    6318:	.word	0x0000fefe
    631c:	.word	0x0000a375
    6320:	.word	0x0000a368
    6324:	.word	0x0000a387
    6328:	.word	0x0000a3a2
    632c:	.word	0x0000a3be
    6330:	.word	0x0000a3dc
    6334:	.word	0x0000a3fa
    6338:	.word	0x0000a41a
    633c:	.word	0x0000a432
    6340:	.word	0x0000a43b
    6344:	.word	0x0000a444
    6348:	.word	0x0000a44e
    634c:	.word	0x0000a458
    6350:	.word	0x0000a462
    6354:	.word	0x0000a46c
    6358:	.word	0x0000a475
    635c:	.word	0x000086dd
    6360:	.word	0x0000a463
    6364:	.word	0x0000a46e
    6368:	.word	0x0000a462
    636c:	.word	0x0000a46a
    6370:	.word	0x0000a473
    6374:	.word	0x0000a47c
    6378:	.word	0x0000a489

0000637c <sf_gen_proto_abbrev>:
    637c:	sub	r0, r0, #1
    6380:	push	{r4, r5, r6, lr}
    6384:	cmp	r0, #39	; 0x27
    6388:	addls	pc, pc, r0, lsl #2
    638c:	b	6818 <sf_gen_proto_abbrev+0x49c>
    6390:	b	6530 <sf_gen_proto_abbrev+0x1b4>
    6394:	b	6514 <sf_gen_proto_abbrev+0x198>
    6398:	b	6520 <sf_gen_proto_abbrev+0x1a4>
    639c:	b	6528 <sf_gen_proto_abbrev+0x1ac>
    63a0:	b	6430 <sf_gen_proto_abbrev+0xb4>
    63a4:	b	6464 <sf_gen_proto_abbrev+0xe8>
    63a8:	b	6488 <sf_gen_proto_abbrev+0x10c>
    63ac:	b	64ac <sf_gen_proto_abbrev+0x130>
    63b0:	b	64c0 <sf_gen_proto_abbrev+0x144>
    63b4:	b	64d0 <sf_gen_proto_abbrev+0x154>
    63b8:	b	653c <sf_gen_proto_abbrev+0x1c0>
    63bc:	b	654c <sf_gen_proto_abbrev+0x1d0>
    63c0:	b	655c <sf_gen_proto_abbrev+0x1e0>
    63c4:	b	6554 <sf_gen_proto_abbrev+0x1d8>
    63c8:	b	656c <sf_gen_proto_abbrev+0x1f0>
    63cc:	b	6564 <sf_gen_proto_abbrev+0x1e8>
    63d0:	b	6574 <sf_gen_proto_abbrev+0x1f8>
    63d4:	b	657c <sf_gen_proto_abbrev+0x200>
    63d8:	b	658c <sf_gen_proto_abbrev+0x210>
    63dc:	b	65b0 <sf_gen_proto_abbrev+0x234>
    63e0:	b	64e0 <sf_gen_proto_abbrev+0x164>
    63e4:	b	6504 <sf_gen_proto_abbrev+0x188>
    63e8:	b	6544 <sf_gen_proto_abbrev+0x1c8>
    63ec:	b	65d4 <sf_gen_proto_abbrev+0x258>
    63f0:	b	65dc <sf_gen_proto_abbrev+0x260>
    63f4:	b	65ec <sf_gen_proto_abbrev+0x270>
    63f8:	b	67e4 <sf_gen_proto_abbrev+0x468>
    63fc:	b	67f4 <sf_gen_proto_abbrev+0x478>
    6400:	b	67fc <sf_gen_proto_abbrev+0x480>
    6404:	b	6804 <sf_gen_proto_abbrev+0x488>
    6408:	b	65fc <sf_gen_proto_abbrev+0x280>
    640c:	b	6670 <sf_gen_proto_abbrev+0x2f4>
    6410:	b	66e4 <sf_gen_proto_abbrev+0x368>
    6414:	b	6818 <sf_gen_proto_abbrev+0x49c>
    6418:	b	6818 <sf_gen_proto_abbrev+0x49c>
    641c:	b	6758 <sf_gen_proto_abbrev+0x3dc>
    6420:	b	679c <sf_gen_proto_abbrev+0x420>
    6424:	b	67c0 <sf_gen_proto_abbrev+0x444>
    6428:	b	6724 <sf_gen_proto_abbrev+0x3a8>
    642c:	b	680c <sf_gen_proto_abbrev+0x490>
    6430:	mov	r2, #0
    6434:	mov	r1, #2
    6438:	mov	r0, #132	; 0x84
    643c:	bl	6008 <gen_proto>
    6440:	mov	r2, #0
    6444:	mov	r1, #17
    6448:	mov	r4, r0
    644c:	mov	r0, #132	; 0x84
    6450:	bl	6008 <gen_proto>
    6454:	mov	r1, r4
    6458:	bl	2fc8 <sf_gen_or>
    645c:	mov	r0, r4
    6460:	pop	{r4, r5, r6, pc}
    6464:	mov	r2, #0
    6468:	mov	r1, #2
    646c:	mov	r0, #6
    6470:	bl	6008 <gen_proto>
    6474:	mov	r2, #0
    6478:	mov	r1, #17
    647c:	mov	r4, r0
    6480:	mov	r0, #6
    6484:	b	6450 <sf_gen_proto_abbrev+0xd4>
    6488:	mov	r2, #0
    648c:	mov	r1, #2
    6490:	mov	r0, #17
    6494:	bl	6008 <gen_proto>
    6498:	mov	r2, #0
    649c:	mov	r1, #17
    64a0:	mov	r4, r0
    64a4:	mov	r0, #17
    64a8:	b	6450 <sf_gen_proto_abbrev+0xd4>
    64ac:	mov	r2, #0
    64b0:	mov	r1, #2
    64b4:	mov	r0, #1
    64b8:	pop	{r4, r5, r6, lr}
    64bc:	b	6008 <gen_proto>
    64c0:	mov	r1, #2
    64c4:	mov	r2, #0
    64c8:	mov	r0, r1
    64cc:	b	64b8 <sf_gen_proto_abbrev+0x13c>
    64d0:	mov	r2, #0
    64d4:	mov	r1, #2
    64d8:	mov	r0, #9
    64dc:	b	64b8 <sf_gen_proto_abbrev+0x13c>
    64e0:	mov	r2, #0
    64e4:	mov	r1, #2
    64e8:	mov	r0, #103	; 0x67
    64ec:	bl	6008 <gen_proto>
    64f0:	mov	r2, #0
    64f4:	mov	r1, #17
    64f8:	mov	r4, r0
    64fc:	mov	r0, #103	; 0x67
    6500:	b	6450 <sf_gen_proto_abbrev+0xd4>
    6504:	mov	r2, #0
    6508:	mov	r1, #2
    650c:	mov	r0, #112	; 0x70
    6510:	b	64b8 <sf_gen_proto_abbrev+0x13c>
    6514:	mov	r0, #2048	; 0x800
    6518:	pop	{r4, r5, r6, lr}
    651c:	b	557c <gen_linktype>
    6520:	ldr	r0, [pc, #756]	; 681c <sf_gen_proto_abbrev+0x4a0>
    6524:	b	6518 <sf_gen_proto_abbrev+0x19c>
    6528:	ldr	r0, [pc, #752]	; 6820 <sf_gen_proto_abbrev+0x4a4>
    652c:	b	6518 <sf_gen_proto_abbrev+0x19c>
    6530:	ldr	r0, [pc, #748]	; 6824 <sf_gen_proto_abbrev+0x4a8>
    6534:	add	r0, pc, r0
    6538:	bl	20b8 <sf_bpf_error>
    653c:	ldr	r0, [pc, #740]	; 6828 <sf_gen_proto_abbrev+0x4ac>
    6540:	b	6518 <sf_gen_proto_abbrev+0x19c>
    6544:	ldr	r0, [pc, #736]	; 682c <sf_gen_proto_abbrev+0x4b0>
    6548:	b	6518 <sf_gen_proto_abbrev+0x19c>
    654c:	ldr	r0, [pc, #732]	; 6830 <sf_gen_proto_abbrev+0x4b4>
    6550:	b	6518 <sf_gen_proto_abbrev+0x19c>
    6554:	ldr	r0, [pc, #728]	; 6834 <sf_gen_proto_abbrev+0x4b8>
    6558:	b	6518 <sf_gen_proto_abbrev+0x19c>
    655c:	ldr	r0, [pc, #724]	; 6838 <sf_gen_proto_abbrev+0x4bc>
    6560:	b	6518 <sf_gen_proto_abbrev+0x19c>
    6564:	ldr	r0, [pc, #720]	; 683c <sf_gen_proto_abbrev+0x4c0>
    6568:	b	6518 <sf_gen_proto_abbrev+0x19c>
    656c:	ldr	r0, [pc, #716]	; 6840 <sf_gen_proto_abbrev+0x4c4>
    6570:	b	6518 <sf_gen_proto_abbrev+0x19c>
    6574:	ldr	r0, [pc, #712]	; 6844 <sf_gen_proto_abbrev+0x4c8>
    6578:	b	6518 <sf_gen_proto_abbrev+0x19c>
    657c:	mov	r2, #0
    6580:	mov	r1, #17
    6584:	mov	r0, #58	; 0x3a
    6588:	b	64b8 <sf_gen_proto_abbrev+0x13c>
    658c:	mov	r2, #0
    6590:	mov	r1, #2
    6594:	mov	r0, #51	; 0x33
    6598:	bl	6008 <gen_proto>
    659c:	mov	r2, #0
    65a0:	mov	r1, #17
    65a4:	mov	r4, r0
    65a8:	mov	r0, #51	; 0x33
    65ac:	b	6450 <sf_gen_proto_abbrev+0xd4>
    65b0:	mov	r2, #0
    65b4:	mov	r1, #2
    65b8:	mov	r0, #50	; 0x32
    65bc:	bl	6008 <gen_proto>
    65c0:	mov	r2, #0
    65c4:	mov	r1, #17
    65c8:	mov	r4, r0
    65cc:	mov	r0, #50	; 0x32
    65d0:	b	6450 <sf_gen_proto_abbrev+0xd4>
    65d4:	mov	r0, #254	; 0xfe
    65d8:	b	6518 <sf_gen_proto_abbrev+0x19c>
    65dc:	mov	r2, #0
    65e0:	mov	r1, #24
    65e4:	mov	r0, #130	; 0x82
    65e8:	b	64b8 <sf_gen_proto_abbrev+0x13c>
    65ec:	mov	r2, #0
    65f0:	mov	r1, #24
    65f4:	mov	r0, #131	; 0x83
    65f8:	b	64b8 <sf_gen_proto_abbrev+0x13c>
    65fc:	mov	r2, #0
    6600:	mov	r1, #26
    6604:	mov	r0, #15
    6608:	bl	6008 <gen_proto>
    660c:	mov	r2, #0
    6610:	mov	r1, #26
    6614:	mov	r5, r0
    6618:	mov	r0, #17
    661c:	bl	6008 <gen_proto>
    6620:	mov	r4, r0
    6624:	mov	r1, r0
    6628:	mov	r0, r5
    662c:	bl	2fc8 <sf_gen_or>
    6630:	mov	r2, #0
    6634:	mov	r1, #26
    6638:	mov	r0, #18
    663c:	bl	6008 <gen_proto>
    6640:	mov	r1, r4
    6644:	bl	2fc8 <sf_gen_or>
    6648:	mov	r2, #0
    664c:	mov	r1, #26
    6650:	mov	r0, #24
    6654:	bl	6008 <gen_proto>
    6658:	mov	r1, r4
    665c:	bl	2fc8 <sf_gen_or>
    6660:	mov	r1, #26
    6664:	mov	r2, #0
    6668:	mov	r0, r1
    666c:	b	6450 <sf_gen_proto_abbrev+0xd4>
    6670:	mov	r2, #0
    6674:	mov	r1, #26
    6678:	mov	r0, #16
    667c:	bl	6008 <gen_proto>
    6680:	mov	r2, #0
    6684:	mov	r1, #26
    6688:	mov	r5, r0
    668c:	mov	r0, #17
    6690:	bl	6008 <gen_proto>
    6694:	mov	r1, r0
    6698:	mov	r4, r0
    669c:	mov	r0, r5
    66a0:	bl	2fc8 <sf_gen_or>
    66a4:	mov	r2, #0
    66a8:	mov	r1, #26
    66ac:	mov	r0, #20
    66b0:	bl	6008 <gen_proto>
    66b4:	mov	r1, r4
    66b8:	bl	2fc8 <sf_gen_or>
    66bc:	mov	r2, #0
    66c0:	mov	r1, #26
    66c4:	mov	r0, #25
    66c8:	bl	6008 <gen_proto>
    66cc:	mov	r1, r4
    66d0:	bl	2fc8 <sf_gen_or>
    66d4:	mov	r2, #0
    66d8:	mov	r1, #26
    66dc:	mov	r0, #27
    66e0:	b	6450 <sf_gen_proto_abbrev+0xd4>
    66e4:	mov	r2, #0
    66e8:	mov	r1, #26
    66ec:	mov	r0, #15
    66f0:	bl	6008 <gen_proto>
    66f4:	mov	r2, #0
    66f8:	mov	r1, #26
    66fc:	mov	r5, r0
    6700:	mov	r0, #16
    6704:	bl	6008 <gen_proto>
    6708:	mov	r1, r0
    670c:	mov	r4, r0
    6710:	mov	r0, r5
    6714:	bl	2fc8 <sf_gen_or>
    6718:	mov	r2, #0
    671c:	mov	r1, #26
    6720:	b	64a4 <sf_gen_proto_abbrev+0x128>
    6724:	mov	r2, #0
    6728:	mov	r1, #26
    672c:	mov	r0, #18
    6730:	bl	6008 <gen_proto>
    6734:	mov	r2, #0
    6738:	mov	r1, #26
    673c:	mov	r5, r0
    6740:	mov	r0, #20
    6744:	bl	6008 <gen_proto>
    6748:	mov	r4, r0
    674c:	mov	r1, r0
    6750:	mov	r0, r5
    6754:	b	6458 <sf_gen_proto_abbrev+0xdc>
    6758:	mov	r2, #0
    675c:	mov	r1, #26
    6760:	mov	r0, #24
    6764:	bl	6008 <gen_proto>
    6768:	mov	r2, #0
    676c:	mov	r1, #26
    6770:	mov	r5, r0
    6774:	mov	r0, #25
    6778:	bl	6008 <gen_proto>
    677c:	mov	r1, r0
    6780:	mov	r4, r0
    6784:	mov	r0, r5
    6788:	bl	2fc8 <sf_gen_or>
    678c:	mov	r1, #26
    6790:	mov	r2, #0
    6794:	mov	r0, r1
    6798:	b	66c8 <sf_gen_proto_abbrev+0x34c>
    679c:	mov	r2, #0
    67a0:	mov	r1, #26
    67a4:	mov	r0, #24
    67a8:	bl	6008 <gen_proto>
    67ac:	mov	r2, #0
    67b0:	mov	r1, #26
    67b4:	mov	r5, r0
    67b8:	mov	r0, #25
    67bc:	b	6744 <sf_gen_proto_abbrev+0x3c8>
    67c0:	mov	r1, #26
    67c4:	mov	r2, #0
    67c8:	mov	r0, r1
    67cc:	bl	6008 <gen_proto>
    67d0:	mov	r2, #0
    67d4:	mov	r1, #26
    67d8:	mov	r5, r0
    67dc:	mov	r0, #27
    67e0:	b	6744 <sf_gen_proto_abbrev+0x3c8>
    67e4:	mov	r2, #0
    67e8:	mov	r1, #24
    67ec:	mov	r0, #129	; 0x81
    67f0:	b	64b8 <sf_gen_proto_abbrev+0x13c>
    67f4:	mov	r0, #66	; 0x42
    67f8:	b	6518 <sf_gen_proto_abbrev+0x19c>
    67fc:	mov	r0, #224	; 0xe0
    6800:	b	6518 <sf_gen_proto_abbrev+0x19c>
    6804:	mov	r0, #240	; 0xf0
    6808:	b	6518 <sf_gen_proto_abbrev+0x19c>
    680c:	ldr	r0, [pc, #52]	; 6848 <sf_gen_proto_abbrev+0x4cc>
    6810:	add	r0, pc, r0
    6814:	b	6538 <sf_gen_proto_abbrev+0x1bc>
    6818:	bl	f44 <abort@plt>
    681c:	.word	0x00000806
    6820:	.word	0x00008035
    6824:	.word	0x0000a270
    6828:	.word	0x0000809b
    682c:	.word	0x000080f3
    6830:	.word	0x00006003
    6834:	.word	0x00006007
    6838:	.word	0x00006004
    683c:	.word	0x00006001
    6840:	.word	0x00006002
    6844:	.word	0x000086dd
    6848:	.word	0x00009fb8

0000684c <sf_gen_load>:
    684c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    6850:	mov	r7, r2
    6854:	mov	r4, r1
    6858:	mov	r5, r0
    685c:	bl	225c <alloc_reg>
    6860:	ldr	r2, [r4, #8]
    6864:	ldr	r3, [pc, #772]	; 6b70 <sf_gen_load+0x324>
    6868:	mov	r6, #0
    686c:	add	r3, pc, r3
    6870:	add	r3, r3, r2, lsl #2
    6874:	cmp	r7, #2
    6878:	str	r6, [r3, #788]	; 0x314
    687c:	mov	r8, r0
    6880:	beq	689c <sf_gen_load+0x50>
    6884:	cmp	r7, #4
    6888:	beq	68a0 <sf_gen_load+0x54>
    688c:	cmp	r7, #1
    6890:	bne	68dc <sf_gen_load+0x90>
    6894:	mov	r6, #16
    6898:	b	68a0 <sf_gen_load+0x54>
    689c:	mov	r6, #8
    68a0:	cmp	r5, #17
    68a4:	add	r7, r4, #8
    68a8:	orr	r6, r6, #64	; 0x40
    68ac:	bgt	68e8 <sf_gen_load+0x9c>
    68b0:	cmp	r5, #11
    68b4:	bge	69fc <sf_gen_load+0x1b0>
    68b8:	cmp	r5, #4
    68bc:	bgt	6ab0 <sf_gen_load+0x264>
    68c0:	cmp	r5, #2
    68c4:	bge	69fc <sf_gen_load+0x1b0>
    68c8:	cmp	r5, #1
    68cc:	beq	6988 <sf_gen_load+0x13c>
    68d0:	ldr	r0, [pc, #668]	; 6b74 <sf_gen_load+0x328>
    68d4:	add	r0, pc, r0
    68d8:	b	68e4 <sf_gen_load+0x98>
    68dc:	ldr	r0, [pc, #660]	; 6b78 <sf_gen_load+0x32c>
    68e0:	add	r0, pc, r0
    68e4:	bl	20b8 <sf_bpf_error>
    68e8:	cmp	r5, #22
    68ec:	bgt	690c <sf_gen_load+0xc0>
    68f0:	cmp	r5, #21
    68f4:	bge	6ab0 <sf_gen_load+0x264>
    68f8:	cmp	r5, #18
    68fc:	bne	68d0 <sf_gen_load+0x84>
    6900:	ldr	r0, [pc, #628]	; 6b7c <sf_gen_load+0x330>
    6904:	add	r0, pc, r0
    6908:	b	68e4 <sf_gen_load+0x98>
    690c:	cmp	r5, #40	; 0x28
    6910:	bne	68d0 <sf_gen_load+0x84>
    6914:	ldr	r3, [pc, #612]	; 6b80 <sf_gen_load+0x334>
    6918:	add	r3, pc, r3
    691c:	ldr	r3, [r3, #856]	; 0x358
    6920:	bic	r2, r3, #8
    6924:	cmp	r2, #119	; 0x77
    6928:	cmpne	r3, #163	; 0xa3
    692c:	ldrne	r0, [pc, #592]	; 6b84 <sf_gen_load+0x338>
    6930:	addne	r0, pc, r0
    6934:	bne	68e4 <sf_gen_load+0x98>
    6938:	mov	r0, r7
    693c:	bl	21fc <xfer_to_x.isra.0>
    6940:	mov	r5, r0
    6944:	mov	r0, r6
    6948:	bl	21bc <new_stmt>
    694c:	mov	r1, r0
    6950:	mov	r0, r5
    6954:	bl	304c <sf_append>
    6958:	mov	r1, r5
    695c:	ldr	r0, [r4, #4]
    6960:	bl	304c <sf_append>
    6964:	str	r8, [r4, #8]
    6968:	mov	r0, #2
    696c:	bl	21bc <new_stmt>
    6970:	mov	r1, r0
    6974:	str	r8, [r0, #12]
    6978:	ldr	r0, [r4, #4]
    697c:	bl	304c <sf_append>
    6980:	mov	r0, r4
    6984:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6988:	bl	234c <gen_llprefixlen>
    698c:	subs	r5, r0, #0
    6990:	mov	r0, r7
    6994:	beq	69f0 <sf_gen_load+0x1a4>
    6998:	bl	2218 <xfer_to_a.isra.1>
    699c:	mov	r1, r0
    69a0:	mov	r0, r5
    69a4:	bl	304c <sf_append>
    69a8:	mov	r0, #12
    69ac:	bl	21bc <new_stmt>
    69b0:	mov	r1, r0
    69b4:	mov	r0, r5
    69b8:	bl	304c <sf_append>
    69bc:	mov	r0, #7
    69c0:	bl	21bc <new_stmt>
    69c4:	mov	r1, r0
    69c8:	mov	r0, r5
    69cc:	bl	304c <sf_append>
    69d0:	mov	r0, r6
    69d4:	bl	21bc <new_stmt>
    69d8:	ldr	r3, [pc, #424]	; 6b88 <sf_gen_load+0x33c>
    69dc:	add	r3, pc, r3
    69e0:	ldr	r3, [r3, #936]	; 0x3a8
    69e4:	mov	r1, r0
    69e8:	str	r3, [r0, #12]
    69ec:	b	6950 <sf_gen_load+0x104>
    69f0:	bl	21fc <xfer_to_x.isra.0>
    69f4:	mov	r5, r0
    69f8:	b	69d0 <sf_gen_load+0x184>
    69fc:	bl	2398 <gen_off_macpl>
    6a00:	subs	r9, r0, #0
    6a04:	mov	r0, r7
    6a08:	beq	6aa4 <sf_gen_load+0x258>
    6a0c:	bl	2218 <xfer_to_a.isra.1>
    6a10:	mov	r1, r0
    6a14:	mov	r0, r9
    6a18:	bl	304c <sf_append>
    6a1c:	mov	r0, #12
    6a20:	bl	21bc <new_stmt>
    6a24:	mov	r1, r0
    6a28:	mov	r0, r9
    6a2c:	bl	304c <sf_append>
    6a30:	mov	r0, #7
    6a34:	bl	21bc <new_stmt>
    6a38:	mov	r1, r0
    6a3c:	mov	r0, r9
    6a40:	bl	304c <sf_append>
    6a44:	mov	r0, r6
    6a48:	bl	21bc <new_stmt>
    6a4c:	ldr	r2, [pc, #312]	; 6b8c <sf_gen_load+0x340>
    6a50:	add	r2, pc, r2
    6a54:	ldr	r3, [r2, #940]	; 0x3ac
    6a58:	ldr	r2, [r2, #948]	; 0x3b4
    6a5c:	add	r3, r3, r2
    6a60:	str	r3, [r0, #12]
    6a64:	mov	r1, r0
    6a68:	mov	r0, r9
    6a6c:	bl	304c <sf_append>
    6a70:	mov	r1, r9
    6a74:	ldr	r0, [r4, #4]
    6a78:	bl	304c <sf_append>
    6a7c:	mov	r0, r5
    6a80:	bl	637c <sf_gen_proto_abbrev>
    6a84:	mov	r5, r0
    6a88:	ldr	r0, [r4]
    6a8c:	cmp	r0, #0
    6a90:	beq	6a9c <sf_gen_load+0x250>
    6a94:	mov	r1, r5
    6a98:	bl	2f48 <sf_gen_and>
    6a9c:	str	r5, [r4]
    6aa0:	b	6964 <sf_gen_load+0x118>
    6aa4:	bl	21fc <xfer_to_x.isra.0>
    6aa8:	mov	r9, r0
    6aac:	b	6a44 <sf_gen_load+0x1f8>
    6ab0:	bl	3754 <gen_loadx_iphdrlen>
    6ab4:	mov	r9, r0
    6ab8:	mov	r0, r7
    6abc:	bl	2218 <xfer_to_a.isra.1>
    6ac0:	mov	r1, r0
    6ac4:	mov	r0, r9
    6ac8:	bl	304c <sf_append>
    6acc:	mov	r0, #12
    6ad0:	bl	21bc <new_stmt>
    6ad4:	mov	r1, r0
    6ad8:	mov	r0, r9
    6adc:	bl	304c <sf_append>
    6ae0:	mov	r0, #7
    6ae4:	bl	21bc <new_stmt>
    6ae8:	mov	r1, r0
    6aec:	mov	r0, r9
    6af0:	bl	304c <sf_append>
    6af4:	mov	r0, r6
    6af8:	bl	21bc <new_stmt>
    6afc:	mov	r2, r0
    6b00:	mov	r1, r0
    6b04:	mov	r0, r9
    6b08:	bl	304c <sf_append>
    6b0c:	ldr	r1, [pc, #124]	; 6b90 <sf_gen_load+0x344>
    6b10:	add	r1, pc, r1
    6b14:	ldr	r3, [r1, #940]	; 0x3ac
    6b18:	ldr	r1, [r1, #948]	; 0x3b4
    6b1c:	add	r3, r3, r1
    6b20:	mov	r1, r9
    6b24:	str	r3, [r2, #12]
    6b28:	ldr	r0, [r4, #4]
    6b2c:	bl	304c <sf_append>
    6b30:	mov	r0, r5
    6b34:	bl	637c <sf_gen_proto_abbrev>
    6b38:	mov	r6, r0
    6b3c:	bl	3880 <gen_ipfrag>
    6b40:	mov	r1, r0
    6b44:	mov	r5, r0
    6b48:	mov	r0, r6
    6b4c:	bl	2f48 <sf_gen_and>
    6b50:	ldr	r0, [r4]
    6b54:	cmp	r0, #0
    6b58:	beq	6b64 <sf_gen_load+0x318>
    6b5c:	mov	r1, r5
    6b60:	bl	2f48 <sf_gen_and>
    6b64:	mov	r0, #2
    6b68:	bl	637c <sf_gen_proto_abbrev>
    6b6c:	b	6a94 <sf_gen_load+0x248>
    6b70:	.word	0x00026afc
    6b74:	.word	0x00009f36
    6b78:	.word	0x00009f0d
    6b7c:	.word	0x00009f4b
    6b80:	.word	0x00026a50
    6b84:	.word	0x00009ef6
    6b88:	.word	0x0002698c
    6b8c:	.word	0x00026918
    6b90:	.word	0x00026858

00006b94 <sf_gen_inbound>:
    6b94:	ldr	r3, [pc, #364]	; 6d08 <sf_gen_inbound+0x174>
    6b98:	push	{r0, r1, r2, r4, r5, lr}
    6b9c:	add	r3, pc, r3
    6ba0:	mov	r4, r0
    6ba4:	ldr	r1, [r3, #856]	; 0x358
    6ba8:	cmp	r1, #168	; 0xa8
    6bac:	bgt	6c0c <sf_gen_inbound+0x78>
    6bb0:	cmp	r1, #167	; 0xa7
    6bb4:	bge	6c24 <sf_gen_inbound+0x90>
    6bb8:	cmp	r1, #137	; 0x89
    6bbc:	bgt	6be4 <sf_gen_inbound+0x50>
    6bc0:	cmp	r1, #130	; 0x82
    6bc4:	bge	6c24 <sf_gen_inbound+0x90>
    6bc8:	cmp	r1, #8
    6bcc:	beq	6c74 <sf_gen_inbound+0xe0>
    6bd0:	cmp	r1, #113	; 0x71
    6bd4:	beq	6cdc <sf_gen_inbound+0x148>
    6bd8:	ldr	r0, [pc, #300]	; 6d0c <sf_gen_inbound+0x178>
    6bdc:	add	r0, pc, r0
    6be0:	bl	20b8 <sf_bpf_error>
    6be4:	cmp	r1, #164	; 0xa4
    6be8:	beq	6c24 <sf_gen_inbound+0x90>
    6bec:	cmp	r1, #166	; 0xa6
    6bf0:	bne	6bd8 <sf_gen_inbound+0x44>
    6bf4:	cmp	r0, #0
    6bf8:	beq	6cfc <sf_gen_inbound+0x168>
    6bfc:	mov	r3, #1
    6c00:	mov	r2, #16
    6c04:	mov	r1, #0
    6c08:	b	6ccc <sf_gen_inbound+0x138>
    6c0c:	cmp	r1, #183	; 0xb7
    6c10:	beq	6c24 <sf_gen_inbound+0x90>
    6c14:	bgt	6c58 <sf_gen_inbound+0xc4>
    6c18:	sub	r3, r1, #178	; 0xb2
    6c1c:	cmp	r3, #3
    6c20:	bhi	6bd8 <sf_gen_inbound+0x44>
    6c24:	cmp	r4, #0
    6c28:	mov	r0, #1
    6c2c:	moveq	r3, r0
    6c30:	str	r0, [sp]
    6c34:	movne	r3, #0
    6c38:	movne	r2, #16
    6c3c:	movne	r1, #3
    6c40:	moveq	r2, #16
    6c44:	moveq	r1, #3
    6c48:	moveq	r0, r3
    6c4c:	bl	41cc <gen_mcmp>
    6c50:	add	sp, sp, #12
    6c54:	pop	{r4, r5, pc}
    6c58:	cmp	r1, #200	; 0xc8
    6c5c:	beq	6c24 <sf_gen_inbound+0x90>
    6c60:	cmp	r1, #226	; 0xe2
    6c64:	beq	6cb4 <sf_gen_inbound+0x120>
    6c68:	cmp	r1, #194	; 0xc2
    6c6c:	bne	6bd8 <sf_gen_inbound+0x44>
    6c70:	b	6c24 <sf_gen_inbound+0x90>
    6c74:	mov	r0, #0
    6c78:	bl	4f30 <sf_gen_loadi>
    6c7c:	mov	r2, #1
    6c80:	mov	r1, r0
    6c84:	mov	r0, r2
    6c88:	bl	684c <sf_gen_load>
    6c8c:	mov	r5, r0
    6c90:	mov	r0, #0
    6c94:	bl	4f30 <sf_gen_loadi>
    6c98:	mov	r3, r4
    6c9c:	mov	r1, r5
    6ca0:	mov	r2, r0
    6ca4:	mov	r0, #16
    6ca8:	add	sp, sp, #12
    6cac:	pop	{r4, r5, lr}
    6cb0:	b	4ddc <sf_gen_relation>
    6cb4:	cmp	r0, #0
    6cb8:	movne	r3, #1
    6cbc:	movne	r2, #8
    6cc0:	movne	r1, #2
    6cc4:	moveq	r3, #2
    6cc8:	beq	6cf0 <sf_gen_inbound+0x15c>
    6ccc:	mov	r0, #1
    6cd0:	add	sp, sp, #12
    6cd4:	pop	{r4, r5, lr}
    6cd8:	b	3a28 <gen_cmp>
    6cdc:	cmp	r0, #0
    6ce0:	movne	r3, #4
    6ce4:	movne	r2, #8
    6ce8:	bne	6c04 <sf_gen_inbound+0x70>
    6cec:	mov	r3, r0
    6cf0:	mov	r2, #8
    6cf4:	mov	r1, r3
    6cf8:	b	6ccc <sf_gen_inbound+0x138>
    6cfc:	mov	r3, r0
    6d00:	mov	r2, #16
    6d04:	b	6cf4 <sf_gen_inbound+0x160>
    6d08:	.word	0x000267cc
    6d0c:	.word	0x00009caa

00006d10 <gen_hostop>:
    6d10:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    6d14:	mov	r5, r0
    6d18:	mov	r6, r1
    6d1c:	mov	r7, r3
    6d20:	ldr	r4, [sp, #40]	; 0x28
    6d24:	ldr	r8, [sp, #44]	; 0x2c
    6d28:	cmp	r2, #4
    6d2c:	addls	pc, pc, r2, lsl #2
    6d30:	b	6e00 <gen_hostop+0xf0>
    6d34:	b	6dbc <gen_hostop+0xac>
    6d38:	b	6d4c <gen_hostop+0x3c>
    6d3c:	b	6d48 <gen_hostop+0x38>
    6d40:	b	6dbc <gen_hostop+0xac>
    6d44:	b	6d80 <gen_hostop+0x70>
    6d48:	mov	r4, r8
    6d4c:	mov	r0, r7
    6d50:	bl	557c <gen_linktype>
    6d54:	mov	r1, r4
    6d58:	str	r6, [sp]
    6d5c:	mov	r3, r5
    6d60:	mov	r2, #0
    6d64:	mov	r7, r0
    6d68:	mov	r0, #3
    6d6c:	bl	41cc <gen_mcmp>
    6d70:	mov	r4, r0
    6d74:	mov	r1, r0
    6d78:	mov	r0, r7
    6d7c:	b	6db4 <gen_hostop+0xa4>
    6d80:	stm	sp, {r4, r8}
    6d84:	mov	r2, #1
    6d88:	bl	6d10 <gen_hostop>
    6d8c:	stm	sp, {r4, r8}
    6d90:	mov	r1, r6
    6d94:	mov	r3, r7
    6d98:	mov	r2, #2
    6d9c:	mov	r9, r0
    6da0:	mov	r0, r5
    6da4:	bl	6d10 <gen_hostop>
    6da8:	mov	r4, r0
    6dac:	mov	r1, r0
    6db0:	mov	r0, r9
    6db4:	bl	2f48 <sf_gen_and>
    6db8:	b	6df4 <gen_hostop+0xe4>
    6dbc:	stm	sp, {r4, r8}
    6dc0:	mov	r2, #1
    6dc4:	bl	6d10 <gen_hostop>
    6dc8:	stm	sp, {r4, r8}
    6dcc:	mov	r1, r6
    6dd0:	mov	r3, r7
    6dd4:	mov	r2, #2
    6dd8:	mov	r9, r0
    6ddc:	mov	r0, r5
    6de0:	bl	6d10 <gen_hostop>
    6de4:	mov	r4, r0
    6de8:	mov	r1, r0
    6dec:	mov	r0, r9
    6df0:	bl	2fc8 <sf_gen_or>
    6df4:	mov	r0, r4
    6df8:	add	sp, sp, #12
    6dfc:	pop	{r4, r5, r6, r7, r8, r9, pc}
    6e00:	bl	f44 <abort@plt>

00006e04 <gen_dnhostop>:
    6e04:	cmp	r1, #2
    6e08:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6e0c:	mov	r4, r0
    6e10:	beq	6eb8 <gen_dnhostop+0xb4>
    6e14:	bgt	6e34 <gen_dnhostop+0x30>
    6e18:	cmp	r1, #0
    6e1c:	beq	6e80 <gen_dnhostop+0x7c>
    6e20:	cmp	r1, #1
    6e24:	moveq	r5, #3
    6e28:	moveq	r6, #15
    6e2c:	beq	6ec0 <gen_dnhostop+0xbc>
    6e30:	bl	f44 <abort@plt>
    6e34:	cmp	r1, #4
    6e38:	beq	6e54 <gen_dnhostop+0x50>
    6e3c:	blt	6e80 <gen_dnhostop+0x7c>
    6e40:	cmp	r1, #24
    6e44:	bne	6e30 <gen_dnhostop+0x2c>
    6e48:	ldr	r0, [pc, #444]	; 700c <gen_dnhostop+0x208>
    6e4c:	add	r0, pc, r0
    6e50:	bl	20b8 <sf_bpf_error>
    6e54:	mov	r1, #1
    6e58:	bl	6e04 <gen_dnhostop>
    6e5c:	mov	r1, #2
    6e60:	mov	r5, r0
    6e64:	mov	r0, r4
    6e68:	bl	6e04 <gen_dnhostop>
    6e6c:	mov	sl, r0
    6e70:	mov	r1, r0
    6e74:	mov	r0, r5
    6e78:	bl	2f48 <sf_gen_and>
    6e7c:	b	6eac <gen_dnhostop+0xa8>
    6e80:	mov	r1, #1
    6e84:	mov	r0, r4
    6e88:	bl	6e04 <gen_dnhostop>
    6e8c:	mov	r1, #2
    6e90:	mov	r5, r0
    6e94:	mov	r0, r4
    6e98:	bl	6e04 <gen_dnhostop>
    6e9c:	mov	sl, r0
    6ea0:	mov	r1, r0
    6ea4:	mov	r0, r5
    6ea8:	bl	2fc8 <sf_gen_or>
    6eac:	mov	r0, sl
    6eb0:	add	sp, sp, #12
    6eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6eb8:	mov	r5, #1
    6ebc:	mov	r6, #7
    6ec0:	ldr	r0, [pc, #328]	; 7010 <gen_dnhostop+0x20c>
    6ec4:	bl	557c <gen_linktype>
    6ec8:	ldr	r7, [pc, #324]	; 7014 <gen_dnhostop+0x210>
    6ecc:	ldr	r3, [pc, #324]	; 7018 <gen_dnhostop+0x214>
    6ed0:	str	r7, [sp]
    6ed4:	mov	r2, #8
    6ed8:	mov	r1, #2
    6edc:	rev16	r4, r4
    6ee0:	uxth	r4, r4
    6ee4:	mov	r8, r0
    6ee8:	mov	r0, #3
    6eec:	bl	41cc <gen_mcmp>
    6ef0:	mov	r3, r4
    6ef4:	mov	r2, #8
    6ef8:	add	r1, r6, #3
    6efc:	mov	r9, r0
    6f00:	mov	r0, #3
    6f04:	bl	3a28 <gen_cmp>
    6f08:	mov	sl, r0
    6f0c:	mov	r1, r0
    6f10:	mov	r0, r9
    6f14:	mov	r9, #7
    6f18:	bl	2f48 <sf_gen_and>
    6f1c:	mov	r3, #6
    6f20:	mov	r2, #16
    6f24:	mov	r1, #2
    6f28:	str	r9, [sp]
    6f2c:	mov	r0, #3
    6f30:	bl	41cc <gen_mcmp>
    6f34:	mov	r3, r4
    6f38:	mov	r2, #8
    6f3c:	add	r1, r6, #2
    6f40:	mov	fp, r0
    6f44:	mov	r0, #3
    6f48:	bl	3a28 <gen_cmp>
    6f4c:	mov	r6, r0
    6f50:	mov	r1, r0
    6f54:	mov	r0, fp
    6f58:	bl	2f48 <sf_gen_and>
    6f5c:	mov	r0, r6
    6f60:	mov	r1, sl
    6f64:	bl	2fc8 <sf_gen_or>
    6f68:	str	r7, [sp]
    6f6c:	ldr	r3, [pc, #168]	; 701c <gen_dnhostop+0x218>
    6f70:	mov	r2, #8
    6f74:	mov	r1, #2
    6f78:	mov	r0, #3
    6f7c:	bl	41cc <gen_mcmp>
    6f80:	mov	r3, r4
    6f84:	mov	r2, #8
    6f88:	add	r1, r5, #3
    6f8c:	mov	r7, r0
    6f90:	mov	r0, #3
    6f94:	bl	3a28 <gen_cmp>
    6f98:	mov	r6, r0
    6f9c:	mov	r1, r0
    6fa0:	mov	r0, r7
    6fa4:	bl	2f48 <sf_gen_and>
    6fa8:	mov	r0, r6
    6fac:	mov	r1, sl
    6fb0:	bl	2fc8 <sf_gen_or>
    6fb4:	mov	r3, #2
    6fb8:	mov	r1, r3
    6fbc:	mov	r2, #16
    6fc0:	str	r9, [sp]
    6fc4:	mov	r0, #3
    6fc8:	bl	41cc <gen_mcmp>
    6fcc:	mov	r3, r4
    6fd0:	mov	r2, #8
    6fd4:	add	r1, r5, #2
    6fd8:	mov	r6, r0
    6fdc:	mov	r0, #3
    6fe0:	bl	3a28 <gen_cmp>
    6fe4:	mov	r1, r0
    6fe8:	mov	r4, r0
    6fec:	mov	r0, r6
    6ff0:	bl	2f48 <sf_gen_and>
    6ff4:	mov	r1, sl
    6ff8:	mov	r0, r4
    6ffc:	bl	2fc8 <sf_gen_or>
    7000:	mov	r1, sl
    7004:	mov	r0, r8
    7008:	b	6e78 <gen_dnhostop+0x74>
    700c:	.word	0x00009a68
    7010:	.word	0x00006003
    7014:	.word	0x0000ff07
    7018:	.word	0x00008106
    701c:	.word	0x00008102

00007020 <gen_host>:
    7020:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    7024:	mov	r5, r0
    7028:	ldr	r8, [sp, #40]	; 0x28
    702c:	mov	r7, r1
    7030:	cmp	r8, #2
    7034:	mov	r6, r3
    7038:	beq	70f4 <gen_host+0xd4>
    703c:	ldr	r1, [pc, #744]	; 732c <gen_host+0x30c>
    7040:	add	r1, pc, r1
    7044:	cmp	r2, #40	; 0x28
    7048:	addls	pc, pc, r2, lsl #2
    704c:	b	7328 <gen_host+0x308>
    7050:	b	7100 <gen_host+0xe0>
    7054:	b	7328 <gen_host+0x308>
    7058:	b	718c <gen_host+0x16c>
    705c:	b	71c8 <gen_host+0x1a8>
    7060:	b	71b4 <gen_host+0x194>
    7064:	b	71e8 <gen_host+0x1c8>
    7068:	b	71dc <gen_host+0x1bc>
    706c:	b	71f4 <gen_host+0x1d4>
    7070:	b	7200 <gen_host+0x1e0>
    7074:	b	720c <gen_host+0x1ec>
    7078:	b	7218 <gen_host+0x1f8>
    707c:	b	723c <gen_host+0x21c>
    7080:	b	7254 <gen_host+0x234>
    7084:	b	7274 <gen_host+0x254>
    7088:	b	7268 <gen_host+0x248>
    708c:	b	728c <gen_host+0x26c>
    7090:	b	7280 <gen_host+0x260>
    7094:	b	7298 <gen_host+0x278>
    7098:	b	72a4 <gen_host+0x284>
    709c:	b	72b0 <gen_host+0x290>
    70a0:	b	72bc <gen_host+0x29c>
    70a4:	b	7224 <gen_host+0x204>
    70a8:	b	7230 <gen_host+0x210>
    70ac:	b	7248 <gen_host+0x228>
    70b0:	b	72c8 <gen_host+0x2a8>
    70b4:	b	72d4 <gen_host+0x2b4>
    70b8:	b	72e0 <gen_host+0x2c0>
    70bc:	b	72ec <gen_host+0x2cc>
    70c0:	b	72f8 <gen_host+0x2d8>
    70c4:	b	7304 <gen_host+0x2e4>
    70c8:	b	7310 <gen_host+0x2f0>
    70cc:	b	7328 <gen_host+0x308>
    70d0:	b	7328 <gen_host+0x308>
    70d4:	b	7328 <gen_host+0x308>
    70d8:	b	7328 <gen_host+0x308>
    70dc:	b	7328 <gen_host+0x308>
    70e0:	b	7328 <gen_host+0x308>
    70e4:	b	7328 <gen_host+0x308>
    70e8:	b	7328 <gen_host+0x308>
    70ec:	b	7328 <gen_host+0x308>
    70f0:	b	731c <gen_host+0x2fc>
    70f4:	ldr	r1, [pc, #564]	; 7330 <gen_host+0x310>
    70f8:	add	r1, pc, r1
    70fc:	b	7044 <gen_host+0x24>
    7100:	mov	r3, r6
    7104:	str	r8, [sp]
    7108:	mov	r2, #2
    710c:	mov	r1, r7
    7110:	mov	r0, r5
    7114:	bl	7020 <gen_host>
    7118:	ldr	r3, [pc, #532]	; 7334 <gen_host+0x314>
    711c:	add	r3, pc, r3
    7120:	ldr	r3, [r3, #4]
    7124:	cmp	r3, #0
    7128:	mov	r4, r0
    712c:	bne	7180 <gen_host+0x160>
    7130:	mov	r3, r6
    7134:	mov	r2, #3
    7138:	mov	r1, r7
    713c:	str	r8, [sp]
    7140:	mov	r0, r5
    7144:	bl	7020 <gen_host>
    7148:	mov	r1, r0
    714c:	mov	r9, r0
    7150:	mov	r0, r4
    7154:	bl	2fc8 <sf_gen_or>
    7158:	mov	r1, r7
    715c:	str	r8, [sp]
    7160:	mov	r3, r6
    7164:	mov	r2, #4
    7168:	mov	r0, r5
    716c:	bl	7020 <gen_host>
    7170:	mov	r4, r0
    7174:	mov	r1, r0
    7178:	mov	r0, r9
    717c:	bl	2fc8 <sf_gen_or>
    7180:	mov	r0, r4
    7184:	add	sp, sp, #12
    7188:	pop	{r4, r5, r6, r7, r8, r9, pc}
    718c:	mov	r3, #16
    7190:	mov	r0, #12
    7194:	stm	sp, {r0, r3}
    7198:	mov	r3, #2048	; 0x800
    719c:	mov	r2, r6
    71a0:	mov	r1, r7
    71a4:	mov	r0, r5
    71a8:	bl	6d10 <gen_hostop>
    71ac:	mov	r4, r0
    71b0:	b	7180 <gen_host+0x160>
    71b4:	mov	r3, #24
    71b8:	mov	r1, #14
    71bc:	stm	sp, {r1, r3}
    71c0:	ldr	r3, [pc, #368]	; 7338 <gen_host+0x318>
    71c4:	b	719c <gen_host+0x17c>
    71c8:	mov	r3, #24
    71cc:	mov	r2, #14
    71d0:	stm	sp, {r2, r3}
    71d4:	ldr	r3, [pc, #352]	; 733c <gen_host+0x31c>
    71d8:	b	719c <gen_host+0x17c>
    71dc:	ldr	r0, [pc, #348]	; 7340 <gen_host+0x320>
    71e0:	add	r0, pc, r0
    71e4:	bl	20b8 <sf_bpf_error>
    71e8:	ldr	r0, [pc, #340]	; 7344 <gen_host+0x324>
    71ec:	add	r0, pc, r0
    71f0:	b	71e4 <gen_host+0x1c4>
    71f4:	ldr	r0, [pc, #332]	; 7348 <gen_host+0x328>
    71f8:	add	r0, pc, r0
    71fc:	b	71e4 <gen_host+0x1c4>
    7200:	ldr	r0, [pc, #324]	; 734c <gen_host+0x32c>
    7204:	add	r0, pc, r0
    7208:	b	71e4 <gen_host+0x1c4>
    720c:	ldr	r0, [pc, #316]	; 7350 <gen_host+0x330>
    7210:	add	r0, pc, r0
    7214:	b	71e4 <gen_host+0x1c4>
    7218:	ldr	r0, [pc, #308]	; 7354 <gen_host+0x334>
    721c:	add	r0, pc, r0
    7220:	b	71e4 <gen_host+0x1c4>
    7224:	ldr	r0, [pc, #300]	; 7358 <gen_host+0x338>
    7228:	add	r0, pc, r0
    722c:	b	71e4 <gen_host+0x1c4>
    7230:	ldr	r0, [pc, #292]	; 735c <gen_host+0x33c>
    7234:	add	r0, pc, r0
    7238:	b	71e4 <gen_host+0x1c4>
    723c:	ldr	r0, [pc, #284]	; 7360 <gen_host+0x340>
    7240:	add	r0, pc, r0
    7244:	bl	20b8 <sf_bpf_error>
    7248:	ldr	r0, [pc, #276]	; 7364 <gen_host+0x344>
    724c:	add	r0, pc, r0
    7250:	b	7244 <gen_host+0x224>
    7254:	mov	r1, r6
    7258:	mov	r0, r5
    725c:	add	sp, sp, #12
    7260:	pop	{r4, r5, r6, r7, r8, r9, lr}
    7264:	b	6e04 <gen_dnhostop>
    7268:	ldr	r0, [pc, #248]	; 7368 <gen_host+0x348>
    726c:	add	r0, pc, r0
    7270:	b	7244 <gen_host+0x224>
    7274:	ldr	r0, [pc, #240]	; 736c <gen_host+0x34c>
    7278:	add	r0, pc, r0
    727c:	b	7244 <gen_host+0x224>
    7280:	ldr	r0, [pc, #232]	; 7370 <gen_host+0x350>
    7284:	add	r0, pc, r0
    7288:	b	7244 <gen_host+0x224>
    728c:	ldr	r0, [pc, #224]	; 7374 <gen_host+0x354>
    7290:	add	r0, pc, r0
    7294:	b	7244 <gen_host+0x224>
    7298:	ldr	r0, [pc, #216]	; 7378 <gen_host+0x358>
    729c:	add	r0, pc, r0
    72a0:	b	7244 <gen_host+0x224>
    72a4:	ldr	r0, [pc, #208]	; 737c <gen_host+0x35c>
    72a8:	add	r0, pc, r0
    72ac:	b	71e4 <gen_host+0x1c4>
    72b0:	ldr	r0, [pc, #200]	; 7380 <gen_host+0x360>
    72b4:	add	r0, pc, r0
    72b8:	b	71e4 <gen_host+0x1c4>
    72bc:	ldr	r0, [pc, #192]	; 7384 <gen_host+0x364>
    72c0:	add	r0, pc, r0
    72c4:	b	71e4 <gen_host+0x1c4>
    72c8:	ldr	r0, [pc, #184]	; 7388 <gen_host+0x368>
    72cc:	add	r0, pc, r0
    72d0:	b	7244 <gen_host+0x224>
    72d4:	ldr	r0, [pc, #176]	; 738c <gen_host+0x36c>
    72d8:	add	r0, pc, r0
    72dc:	b	71e4 <gen_host+0x1c4>
    72e0:	ldr	r0, [pc, #168]	; 7390 <gen_host+0x370>
    72e4:	add	r0, pc, r0
    72e8:	b	71e4 <gen_host+0x1c4>
    72ec:	ldr	r0, [pc, #160]	; 7394 <gen_host+0x374>
    72f0:	add	r0, pc, r0
    72f4:	b	71e4 <gen_host+0x1c4>
    72f8:	ldr	r0, [pc, #152]	; 7398 <gen_host+0x378>
    72fc:	add	r0, pc, r0
    7300:	b	71e4 <gen_host+0x1c4>
    7304:	ldr	r0, [pc, #144]	; 739c <gen_host+0x37c>
    7308:	add	r0, pc, r0
    730c:	b	7244 <gen_host+0x224>
    7310:	ldr	r0, [pc, #136]	; 73a0 <gen_host+0x380>
    7314:	add	r0, pc, r0
    7318:	b	71e4 <gen_host+0x1c4>
    731c:	ldr	r0, [pc, #128]	; 73a4 <gen_host+0x384>
    7320:	add	r0, pc, r0
    7324:	b	71e4 <gen_host+0x1c4>
    7328:	bl	f44 <abort@plt>
    732c:	.word	0x00009a7a
    7330:	.word	0x00009088
    7334:	.word	0x00026160
    7338:	.word	0x00008035
    733c:	.word	0x00000806
    7340:	.word	0x000096f7
    7344:	.word	0x00009708
    7348:	.word	0x0000971a
    734c:	.word	0x0000972b
    7350:	.word	0x0000973d
    7354:	.word	0x0000974f
    7358:	.word	0x00009761
    735c:	.word	0x00009772
    7360:	.word	0x00009784
    7364:	.word	0x0000979d
    7368:	.word	0x000097a1
    736c:	.word	0x000097b8
    7370:	.word	0x000097cf
    7374:	.word	0x000097e8
    7378:	.word	0x00009801
    737c:	.word	0x00009817
    7380:	.word	0x0000982a
    7384:	.word	0x0000983a
    7388:	.word	0x000095e8
    738c:	.word	0x0000983f
    7390:	.word	0x00009851
    7394:	.word	0x00009863
    7398:	.word	0x00009875
    739c:	.word	0x00009886
    73a0:	.word	0x0000989d
    73a4:	.word	0x000098b2

000073a8 <sf_gen_mcode>:
    73a8:	push	{r4, r5, r6, r7, lr}
    73ac:	sub	sp, sp, #28
    73b0:	mov	r7, r1
    73b4:	add	r1, sp, #16
    73b8:	str	r3, [sp, #12]
    73bc:	uxtb	r5, r3
    73c0:	mov	r6, r0
    73c4:	mov	r4, r2
    73c8:	bl	9f0c <__pcap_atoin>
    73cc:	ldr	r3, [sp, #16]
    73d0:	cmp	r7, #0
    73d4:	rsb	r0, r0, #32
    73d8:	lsl	r0, r3, r0
    73dc:	str	r0, [sp, #16]
    73e0:	beq	7420 <sf_gen_mcode+0x78>
    73e4:	add	r1, sp, #20
    73e8:	mov	r0, r7
    73ec:	bl	9f0c <__pcap_atoin>
    73f0:	ldr	r3, [sp, #20]
    73f4:	rsb	r0, r0, #32
    73f8:	lsl	r0, r3, r0
    73fc:	ldr	r3, [sp, #16]
    7400:	str	r0, [sp, #20]
    7404:	bics	r3, r3, r0
    7408:	beq	7468 <sf_gen_mcode+0xc0>
    740c:	ldr	r0, [pc, #136]	; 749c <sf_gen_mcode+0xf4>
    7410:	mov	r2, r7
    7414:	mov	r1, r6
    7418:	add	r0, pc, r0
    741c:	bl	20b8 <sf_bpf_error>
    7420:	cmp	r4, #32
    7424:	ble	7434 <sf_gen_mcode+0x8c>
    7428:	ldr	r0, [pc, #112]	; 74a0 <sf_gen_mcode+0xf8>
    742c:	add	r0, pc, r0
    7430:	bl	20b8 <sf_bpf_error>
    7434:	cmp	r4, #0
    7438:	mvnne	r3, #0
    743c:	rsbne	r2, r4, #32
    7440:	streq	r4, [sp, #20]
    7444:	lslne	r3, r3, r2
    7448:	strne	r3, [sp, #20]
    744c:	ldr	r3, [sp, #20]
    7450:	bics	r3, r0, r3
    7454:	ldrne	r0, [pc, #72]	; 74a4 <sf_gen_mcode+0xfc>
    7458:	movne	r2, r4
    745c:	movne	r1, r6
    7460:	addne	r0, pc, r0
    7464:	bne	741c <sf_gen_mcode+0x74>
    7468:	cmp	r5, #2
    746c:	bne	7490 <sf_gen_mcode+0xe8>
    7470:	ldrb	r3, [sp, #14]
    7474:	ldrb	r2, [sp, #13]
    7478:	str	r5, [sp]
    747c:	ldr	r1, [sp, #20]
    7480:	ldr	r0, [sp, #16]
    7484:	bl	7020 <gen_host>
    7488:	add	sp, sp, #28
    748c:	pop	{r4, r5, r6, r7, pc}
    7490:	ldr	r0, [pc, #16]	; 74a8 <sf_gen_mcode+0x100>
    7494:	add	r0, pc, r0
    7498:	b	7430 <sf_gen_mcode+0x88>
    749c:	.word	0x000097d9
    74a0:	.word	0x000097ea
    74a4:	.word	0x000097d0
    74a8:	.word	0x000097bc

000074ac <gen_port>:
    74ac:	push	{r4, r5, r6, r7, r8, lr}
    74b0:	mov	r5, r0
    74b4:	mov	r0, #2048	; 0x800
    74b8:	mov	r4, r1
    74bc:	mov	r6, r2
    74c0:	bl	557c <gen_linktype>
    74c4:	cmp	r4, #6
    74c8:	mov	r7, r0
    74cc:	beq	74f0 <gen_port+0x44>
    74d0:	bgt	74e0 <gen_port+0x34>
    74d4:	cmn	r4, #1
    74d8:	beq	7518 <gen_port+0x6c>
    74dc:	bl	f44 <abort@plt>
    74e0:	cmp	r4, #17
    74e4:	beq	74f0 <gen_port+0x44>
    74e8:	cmp	r4, #132	; 0x84
    74ec:	bne	74dc <gen_port+0x30>
    74f0:	mov	r1, r4
    74f4:	mov	r2, r6
    74f8:	mov	r0, r5
    74fc:	bl	40e0 <sf_gen_portop>
    7500:	mov	r4, r0
    7504:	mov	r0, r7
    7508:	mov	r1, r4
    750c:	bl	2f48 <sf_gen_and>
    7510:	mov	r0, r4
    7514:	pop	{r4, r5, r6, r7, r8, pc}
    7518:	mov	r2, r6
    751c:	mov	r1, #6
    7520:	mov	r0, r5
    7524:	bl	40e0 <sf_gen_portop>
    7528:	mov	r2, r6
    752c:	mov	r1, #17
    7530:	mov	r8, r0
    7534:	mov	r0, r5
    7538:	bl	40e0 <sf_gen_portop>
    753c:	mov	r4, r0
    7540:	mov	r1, r0
    7544:	mov	r0, r8
    7548:	bl	2fc8 <sf_gen_or>
    754c:	mov	r2, r6
    7550:	mov	r1, #132	; 0x84
    7554:	mov	r0, r5
    7558:	bl	40e0 <sf_gen_portop>
    755c:	mov	r1, r4
    7560:	bl	2fc8 <sf_gen_or>
    7564:	b	7504 <gen_port+0x58>

00007568 <gen_port6>:
    7568:	push	{r4, r5, r6, r7, r8, lr}
    756c:	mov	r5, r0
    7570:	ldr	r0, [pc, #172]	; 7624 <gen_port6+0xbc>
    7574:	mov	r4, r1
    7578:	mov	r6, r2
    757c:	bl	557c <gen_linktype>
    7580:	cmp	r4, #6
    7584:	mov	r7, r0
    7588:	beq	75ac <gen_port6+0x44>
    758c:	bgt	759c <gen_port6+0x34>
    7590:	cmn	r4, #1
    7594:	beq	75d4 <gen_port6+0x6c>
    7598:	bl	f44 <abort@plt>
    759c:	cmp	r4, #17
    75a0:	beq	75ac <gen_port6+0x44>
    75a4:	cmp	r4, #132	; 0x84
    75a8:	bne	7598 <gen_port6+0x30>
    75ac:	mov	r1, r4
    75b0:	mov	r2, r6
    75b4:	mov	r0, r5
    75b8:	bl	4008 <sf_gen_portop6>
    75bc:	mov	r4, r0
    75c0:	mov	r0, r7
    75c4:	mov	r1, r4
    75c8:	bl	2f48 <sf_gen_and>
    75cc:	mov	r0, r4
    75d0:	pop	{r4, r5, r6, r7, r8, pc}
    75d4:	mov	r2, r6
    75d8:	mov	r1, #6
    75dc:	mov	r0, r5
    75e0:	bl	4008 <sf_gen_portop6>
    75e4:	mov	r2, r6
    75e8:	mov	r1, #17
    75ec:	mov	r8, r0
    75f0:	mov	r0, r5
    75f4:	bl	4008 <sf_gen_portop6>
    75f8:	mov	r4, r0
    75fc:	mov	r1, r0
    7600:	mov	r0, r8
    7604:	bl	2fc8 <sf_gen_or>
    7608:	mov	r2, r6
    760c:	mov	r1, #132	; 0x84
    7610:	mov	r0, r5
    7614:	bl	4008 <sf_gen_portop6>
    7618:	mov	r1, r4
    761c:	bl	2fc8 <sf_gen_or>
    7620:	b	75c0 <gen_port6+0x58>
    7624:	.word	0x000086dd

00007628 <gen_portrange>:
    7628:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    762c:	mov	r5, r0
    7630:	mov	r0, #2048	; 0x800
    7634:	mov	r4, r2
    7638:	mov	r6, r1
    763c:	mov	r7, r3
    7640:	bl	557c <gen_linktype>
    7644:	cmp	r4, #6
    7648:	mov	r8, r0
    764c:	beq	7670 <gen_portrange+0x48>
    7650:	bgt	7660 <gen_portrange+0x38>
    7654:	cmn	r4, #1
    7658:	beq	769c <gen_portrange+0x74>
    765c:	bl	f44 <abort@plt>
    7660:	cmp	r4, #17
    7664:	beq	7670 <gen_portrange+0x48>
    7668:	cmp	r4, #132	; 0x84
    766c:	bne	765c <gen_portrange+0x34>
    7670:	mov	r2, r4
    7674:	mov	r3, r7
    7678:	mov	r1, r6
    767c:	mov	r0, r5
    7680:	bl	4cd4 <sf_gen_portrangeop>
    7684:	mov	r4, r0
    7688:	mov	r0, r8
    768c:	mov	r1, r4
    7690:	bl	2f48 <sf_gen_and>
    7694:	mov	r0, r4
    7698:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    769c:	mov	r3, r7
    76a0:	mov	r1, r6
    76a4:	mov	r2, #6
    76a8:	mov	r0, r5
    76ac:	bl	4cd4 <sf_gen_portrangeop>
    76b0:	mov	r3, r7
    76b4:	mov	r2, #17
    76b8:	mov	r1, r6
    76bc:	mov	r9, r0
    76c0:	mov	r0, r5
    76c4:	bl	4cd4 <sf_gen_portrangeop>
    76c8:	mov	r4, r0
    76cc:	mov	r1, r0
    76d0:	mov	r0, r9
    76d4:	bl	2fc8 <sf_gen_or>
    76d8:	mov	r1, r6
    76dc:	mov	r3, r7
    76e0:	mov	r2, #132	; 0x84
    76e4:	mov	r0, r5
    76e8:	bl	4cd4 <sf_gen_portrangeop>
    76ec:	mov	r1, r4
    76f0:	bl	2fc8 <sf_gen_or>
    76f4:	b	7688 <gen_portrange+0x60>

000076f8 <gen_portrange6>:
    76f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    76fc:	mov	r5, r0
    7700:	ldr	r0, [pc, #192]	; 77c8 <gen_portrange6+0xd0>
    7704:	mov	r4, r2
    7708:	mov	r6, r1
    770c:	mov	r7, r3
    7710:	bl	557c <gen_linktype>
    7714:	cmp	r4, #6
    7718:	mov	r8, r0
    771c:	beq	7740 <gen_portrange6+0x48>
    7720:	bgt	7730 <gen_portrange6+0x38>
    7724:	cmn	r4, #1
    7728:	beq	776c <gen_portrange6+0x74>
    772c:	bl	f44 <abort@plt>
    7730:	cmp	r4, #17
    7734:	beq	7740 <gen_portrange6+0x48>
    7738:	cmp	r4, #132	; 0x84
    773c:	bne	772c <gen_portrange6+0x34>
    7740:	mov	r2, r4
    7744:	mov	r3, r7
    7748:	mov	r1, r6
    774c:	mov	r0, r5
    7750:	bl	4b5c <sf_gen_portrangeop6>
    7754:	mov	r4, r0
    7758:	mov	r0, r8
    775c:	mov	r1, r4
    7760:	bl	2f48 <sf_gen_and>
    7764:	mov	r0, r4
    7768:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    776c:	mov	r3, r7
    7770:	mov	r1, r6
    7774:	mov	r2, #6
    7778:	mov	r0, r5
    777c:	bl	4b5c <sf_gen_portrangeop6>
    7780:	mov	r3, r7
    7784:	mov	r2, #17
    7788:	mov	r1, r6
    778c:	mov	r9, r0
    7790:	mov	r0, r5
    7794:	bl	4b5c <sf_gen_portrangeop6>
    7798:	mov	r4, r0
    779c:	mov	r1, r0
    77a0:	mov	r0, r9
    77a4:	bl	2fc8 <sf_gen_or>
    77a8:	mov	r1, r6
    77ac:	mov	r3, r7
    77b0:	mov	r2, #132	; 0x84
    77b4:	mov	r0, r5
    77b8:	bl	4b5c <sf_gen_portrangeop6>
    77bc:	mov	r1, r4
    77c0:	bl	2fc8 <sf_gen_or>
    77c4:	b	7758 <gen_portrange6+0x60>
    77c8:	.word	0x000086dd

000077cc <gen_protochain>:
    77cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    77d0:	sub	sp, sp, #420	; 0x1a4
    77d4:	mov	sl, r1
    77d8:	mov	r5, r2
    77dc:	mov	r7, r0
    77e0:	bl	225c <alloc_reg>
    77e4:	add	r8, sp, #16
    77e8:	ldr	r4, [pc, #1436]	; 7d8c <gen_protochain+0x5c0>
    77ec:	mov	r2, #400	; 0x190
    77f0:	mov	r1, #0
    77f4:	add	r4, pc, r4
    77f8:	mov	r6, r0
    77fc:	mov	r0, r8
    7800:	bl	eb4 <memset@plt>
    7804:	cmp	sl, #2
    7808:	beq	7868 <gen_protochain+0x9c>
    780c:	cmp	sl, #17
    7810:	beq	7868 <gen_protochain+0x9c>
    7814:	cmp	sl, #0
    7818:	bne	785c <gen_protochain+0x90>
    781c:	mov	r2, r5
    7820:	mov	r1, #2
    7824:	mov	r0, r7
    7828:	bl	77cc <gen_protochain>
    782c:	mov	r1, #17
    7830:	mov	r2, r5
    7834:	mov	r6, r0
    7838:	mov	r0, r7
    783c:	bl	77cc <gen_protochain>
    7840:	mov	r4, r0
    7844:	mov	r1, r0
    7848:	mov	r0, r6
    784c:	bl	2fc8 <sf_gen_or>
    7850:	mov	r0, r4
    7854:	add	sp, sp, #420	; 0x1a4
    7858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    785c:	ldr	r0, [pc, #1324]	; 7d90 <gen_protochain+0x5c4>
    7860:	add	r0, pc, r0
    7864:	bl	20b8 <sf_bpf_error>
    7868:	ldr	r3, [pc, #1316]	; 7d94 <gen_protochain+0x5c8>
    786c:	add	r3, pc, r3
    7870:	ldr	r3, [r3, #856]	; 0x358
    7874:	cmp	r3, #127	; 0x7f
    7878:	beq	7890 <gen_protochain+0xc4>
    787c:	bgt	789c <gen_protochain+0xd0>
    7880:	cmp	r3, #105	; 0x69
    7884:	beq	7890 <gen_protochain+0xc4>
    7888:	cmp	r3, #119	; 0x77
    788c:	bne	78ac <gen_protochain+0xe0>
    7890:	ldr	r0, [pc, #1280]	; 7d98 <gen_protochain+0x5cc>
    7894:	add	r0, pc, r0
    7898:	b	7864 <gen_protochain+0x98>
    789c:	cmp	r3, #163	; 0xa3
    78a0:	beq	7890 <gen_protochain+0xc4>
    78a4:	cmp	r3, #192	; 0xc0
    78a8:	b	788c <gen_protochain+0xc0>
    78ac:	ldr	r3, [pc, #1256]	; 7d9c <gen_protochain+0x5d0>
    78b0:	mov	r0, #0
    78b4:	ldr	r3, [r4, r3]
    78b8:	mov	r4, #1
    78bc:	str	r4, [r3]
    78c0:	bl	21bc <new_stmt>
    78c4:	cmp	sl, #2
    78c8:	str	r0, [sp, #16]
    78cc:	beq	78e4 <gen_protochain+0x118>
    78d0:	cmp	sl, #17
    78d4:	beq	7d24 <gen_protochain+0x558>
    78d8:	ldr	r0, [pc, #1216]	; 7da0 <gen_protochain+0x5d4>
    78dc:	add	r0, pc, r0
    78e0:	b	7864 <gen_protochain+0x98>
    78e4:	mov	r0, #2048	; 0x800
    78e8:	bl	557c <gen_linktype>
    78ec:	mov	r9, r0
    78f0:	mov	r0, #48	; 0x30
    78f4:	bl	21bc <new_stmt>
    78f8:	ldr	r3, [pc, #1188]	; 7da4 <gen_protochain+0x5d8>
    78fc:	add	r3, pc, r3
    7900:	ldr	r4, [r3, #940]	; 0x3ac
    7904:	ldr	r3, [r3, #948]	; 0x3b4
    7908:	add	r4, r4, r3
    790c:	add	r3, r4, #9
    7910:	str	r0, [sp, #20]
    7914:	str	r3, [r0, #12]
    7918:	mov	r0, #177	; 0xb1
    791c:	bl	21bc <new_stmt>
    7920:	str	r0, [sp, #24]
    7924:	str	r4, [r0, #12]
    7928:	mov	r0, #21
    792c:	bl	21bc <new_stmt>
    7930:	mov	r4, #0
    7934:	mov	fp, r0
    7938:	str	r0, [sp, #28]
    793c:	str	r7, [r0, #12]
    7940:	str	r4, [r0, #4]
    7944:	str	r4, [r0, #8]
    7948:	mov	r0, #21
    794c:	bl	21bc <new_stmt>
    7950:	mov	r3, #59	; 0x3b
    7954:	cmp	sl, #17
    7958:	str	r4, [r0, #4]
    795c:	str	r4, [r0, #8]
    7960:	str	r3, [r0, #12]
    7964:	mov	r5, r0
    7968:	str	r0, [sp, #32]
    796c:	str	r0, [fp, #8]
    7970:	bne	7d70 <gen_protochain+0x5a4>
    7974:	mov	r0, #21
    7978:	bl	21bc <new_stmt>
    797c:	str	r4, [r0, #4]
    7980:	str	r4, [r0, #8]
    7984:	str	r4, [r0, #12]
    7988:	mov	fp, r0
    798c:	str	r0, [r5, #8]
    7990:	str	r0, [sp, #36]	; 0x24
    7994:	mov	r0, #21
    7998:	bl	21bc <new_stmt>
    799c:	mov	r3, #60	; 0x3c
    79a0:	str	r0, [fp, #8]
    79a4:	mov	sl, r0
    79a8:	str	r4, [r0, #4]
    79ac:	str	r4, [r0, #8]
    79b0:	str	r3, [r0, #12]
    79b4:	str	r0, [sp, #40]	; 0x28
    79b8:	mov	r0, #21
    79bc:	bl	21bc <new_stmt>
    79c0:	mov	r3, #43	; 0x2b
    79c4:	str	r0, [sl, #8]
    79c8:	mov	r5, r0
    79cc:	str	r3, [r0, #12]
    79d0:	str	r4, [r0, #4]
    79d4:	str	r4, [r0, #8]
    79d8:	str	r0, [sp, #44]	; 0x2c
    79dc:	mov	r0, #21
    79e0:	bl	21bc <new_stmt>
    79e4:	mov	r2, #44	; 0x2c
    79e8:	str	r0, [r5, #8]
    79ec:	str	r0, [sp, #48]	; 0x30
    79f0:	str	r2, [r0, #12]
    79f4:	str	r4, [r0, #4]
    79f8:	str	r4, [r0, #8]
    79fc:	str	r0, [sp, #12]
    7a00:	mov	r0, #135	; 0x87
    7a04:	bl	21bc <new_stmt>
    7a08:	str	r0, [sp, #52]	; 0x34
    7a0c:	str	r0, [sp, #8]
    7a10:	mov	r0, #80	; 0x50
    7a14:	bl	21bc <new_stmt>
    7a18:	ldr	r1, [pc, #904]	; 7da8 <gen_protochain+0x5dc>
    7a1c:	add	r1, pc, r1
    7a20:	ldr	r4, [r1, #940]	; 0x3ac
    7a24:	ldr	r1, [r1, #948]	; 0x3b4
    7a28:	add	r4, r4, r1
    7a2c:	str	r4, [r0, #12]
    7a30:	str	r0, [sp, #56]	; 0x38
    7a34:	mov	r0, #2
    7a38:	bl	21bc <new_stmt>
    7a3c:	str	r0, [sp, #60]	; 0x3c
    7a40:	str	r6, [r0, #12]
    7a44:	mov	r0, #135	; 0x87
    7a48:	bl	21bc <new_stmt>
    7a4c:	str	r0, [sp, #64]	; 0x40
    7a50:	mov	r0, #4
    7a54:	bl	21bc <new_stmt>
    7a58:	mov	r1, #1
    7a5c:	str	r1, [sp, #4]
    7a60:	str	r1, [r0, #12]
    7a64:	str	r0, [sp, #68]	; 0x44
    7a68:	mov	r0, #7
    7a6c:	bl	21bc <new_stmt>
    7a70:	str	r0, [sp, #72]	; 0x48
    7a74:	mov	r0, #80	; 0x50
    7a78:	bl	21bc <new_stmt>
    7a7c:	str	r4, [r0, #12]
    7a80:	str	r0, [sp, #76]	; 0x4c
    7a84:	mov	r0, #4
    7a88:	bl	21bc <new_stmt>
    7a8c:	ldr	r1, [sp, #4]
    7a90:	mov	r4, #8
    7a94:	str	r1, [r0, #12]
    7a98:	str	r0, [sp, #80]	; 0x50
    7a9c:	mov	r0, #36	; 0x24
    7aa0:	bl	21bc <new_stmt>
    7aa4:	str	r0, [sp, #84]	; 0x54
    7aa8:	str	r4, [r0, #12]
    7aac:	mov	r0, #7
    7ab0:	bl	21bc <new_stmt>
    7ab4:	str	r0, [sp, #88]	; 0x58
    7ab8:	mov	r0, #96	; 0x60
    7abc:	bl	21bc <new_stmt>
    7ac0:	str	r0, [sp, #92]	; 0x5c
    7ac4:	str	r6, [r0, #12]
    7ac8:	str	r0, [sp, #4]
    7acc:	mov	r0, #5
    7ad0:	bl	21bc <new_stmt>
    7ad4:	ldr	r1, [sp, #4]
    7ad8:	ldr	r2, [sp, #8]
    7adc:	mvn	ip, #17
    7ae0:	ldr	r3, [sp, #12]
    7ae4:	str	ip, [r0, #12]
    7ae8:	str	r0, [r1, #8]
    7aec:	str	r2, [fp, #4]
    7af0:	str	r2, [sl, #4]
    7af4:	str	r2, [r5, #4]
    7af8:	mov	r5, #21
    7afc:	str	r0, [sp, #96]	; 0x60
    7b00:	str	r2, [r3, #4]
    7b04:	mov	r0, #21
    7b08:	bl	21bc <new_stmt>
    7b0c:	lsl	fp, r5, #2
    7b10:	add	r3, sp, #416	; 0x1a0
    7b14:	add	r3, r3, fp
    7b18:	cmp	r4, #0
    7b1c:	str	r0, [r3, #-400]	; 0xfffffe70
    7b20:	mov	r3, #0
    7b24:	str	r3, [r0, #4]
    7b28:	str	r3, [r0, #8]
    7b2c:	mov	r3, #51	; 0x33
    7b30:	str	r3, [r0, #12]
    7b34:	addne	r3, sp, #416	; 0x1a0
    7b38:	addne	r4, r3, r4, lsl #2
    7b3c:	mov	sl, r0
    7b40:	ldrne	r3, [r4, #-400]	; 0xfffffe70
    7b44:	strne	r0, [r3, #8]
    7b48:	mov	r0, #135	; 0x87
    7b4c:	bl	21bc <new_stmt>
    7b50:	add	r3, sp, #416	; 0x1a0
    7b54:	add	r3, r3, r5, lsl #2
    7b58:	str	r0, [sl, #4]
    7b5c:	str	r0, [r3, #-396]	; 0xfffffe74
    7b60:	mov	r0, #80	; 0x50
    7b64:	bl	21bc <new_stmt>
    7b68:	add	r3, sp, #416	; 0x1a0
    7b6c:	add	r3, r3, r5, lsl #2
    7b70:	str	r0, [r3, #-392]	; 0xfffffe78
    7b74:	ldr	r3, [pc, #560]	; 7dac <gen_protochain+0x5e0>
    7b78:	add	r3, pc, r3
    7b7c:	ldr	r4, [r3, #940]	; 0x3ac
    7b80:	ldr	r3, [r3, #948]	; 0x3b4
    7b84:	add	r4, r4, r3
    7b88:	str	r4, [r0, #12]
    7b8c:	mov	r0, #2
    7b90:	bl	21bc <new_stmt>
    7b94:	add	r3, sp, #416	; 0x1a0
    7b98:	add	r3, r3, r5, lsl #2
    7b9c:	mov	sl, r0
    7ba0:	str	r0, [r3, #-388]	; 0xfffffe7c
    7ba4:	str	r6, [r0, #12]
    7ba8:	mov	r0, #135	; 0x87
    7bac:	bl	21bc <new_stmt>
    7bb0:	add	r3, sp, #416	; 0x1a0
    7bb4:	add	r3, r3, r5, lsl #2
    7bb8:	str	r0, [sl, #4]
    7bbc:	str	r0, [r3, #-384]	; 0xfffffe80
    7bc0:	mov	r0, #4
    7bc4:	bl	21bc <new_stmt>
    7bc8:	add	r3, sp, #416	; 0x1a0
    7bcc:	add	r3, r3, r5, lsl #2
    7bd0:	mov	sl, #4
    7bd4:	str	r0, [r3, #-380]	; 0xfffffe84
    7bd8:	mov	r3, #1
    7bdc:	str	r3, [r0, #12]
    7be0:	mov	r0, #7
    7be4:	bl	21bc <new_stmt>
    7be8:	add	r3, sp, #416	; 0x1a0
    7bec:	add	r3, r3, r5, lsl #2
    7bf0:	str	r0, [r3, #-376]	; 0xfffffe88
    7bf4:	mov	r0, #80	; 0x50
    7bf8:	bl	21bc <new_stmt>
    7bfc:	add	r3, sp, #416	; 0x1a0
    7c00:	add	r3, r3, r5, lsl #2
    7c04:	str	r4, [r0, #12]
    7c08:	str	r0, [r3, #-372]	; 0xfffffe8c
    7c0c:	mov	r0, #4
    7c10:	bl	21bc <new_stmt>
    7c14:	add	r3, sp, #416	; 0x1a0
    7c18:	add	r3, r3, r5, lsl #2
    7c1c:	add	r4, r5, #12
    7c20:	str	r0, [r3, #-368]	; 0xfffffe90
    7c24:	mov	r3, #2
    7c28:	str	r3, [r0, #12]
    7c2c:	mov	r0, #36	; 0x24
    7c30:	bl	21bc <new_stmt>
    7c34:	add	r3, sp, #416	; 0x1a0
    7c38:	add	r3, r3, r5, lsl #2
    7c3c:	str	sl, [r0, #12]
    7c40:	str	r0, [r3, #-364]	; 0xfffffe94
    7c44:	mov	r0, #7
    7c48:	bl	21bc <new_stmt>
    7c4c:	add	r3, sp, #416	; 0x1a0
    7c50:	add	r3, r3, r5, lsl #2
    7c54:	str	r0, [r3, #-360]	; 0xfffffe98
    7c58:	mov	r0, #96	; 0x60
    7c5c:	bl	21bc <new_stmt>
    7c60:	add	r3, sp, #416	; 0x1a0
    7c64:	add	r3, r3, r5, lsl #2
    7c68:	add	r5, r5, #13
    7c6c:	str	r0, [r3, #-356]	; 0xfffffe9c
    7c70:	str	r6, [r0, #12]
    7c74:	mov	r0, #5
    7c78:	bl	21bc <new_stmt>
    7c7c:	add	r3, sp, #416	; 0x1a0
    7c80:	add	r3, r3, r4, lsl #2
    7c84:	rsb	r4, r4, #2
    7c88:	str	r0, [r3, #-400]	; 0xfffffe70
    7c8c:	str	r4, [r0, #12]
    7c90:	mov	r0, sl
    7c94:	bl	21bc <new_stmt>
    7c98:	add	r3, sp, #416	; 0x1a0
    7c9c:	add	r3, r3, r5, lsl #2
    7ca0:	str	r0, [r3, #-400]	; 0xfffffe70
    7ca4:	ldr	r2, [sp, #32]
    7ca8:	mov	r3, #0
    7cac:	str	r3, [r0, #12]
    7cb0:	str	r0, [r2, #4]
    7cb4:	add	r2, sp, #416	; 0x1a0
    7cb8:	add	fp, r2, fp
    7cbc:	ldr	r2, [fp, #-400]	; 0xfffffe70
    7cc0:	str	r0, [r2, #8]
    7cc4:	ldr	r2, [sp, #28]
    7cc8:	str	r0, [r2, #4]
    7ccc:	ldr	r2, [r8, r3, lsl #2]
    7cd0:	add	r3, r3, #1
    7cd4:	cmp	r5, r3
    7cd8:	ldr	r1, [r8, r3, lsl #2]
    7cdc:	str	r1, [r2, #16]
    7ce0:	bgt	7ccc <gen_protochain+0x500>
    7ce4:	mov	r5, #0
    7ce8:	str	r5, [r0, #16]
    7cec:	mov	r0, #21
    7cf0:	bl	219c <new_block>
    7cf4:	ldr	r3, [sp, #20]
    7cf8:	str	r3, [r0, #4]
    7cfc:	ldr	r3, [pc, #172]	; 7db0 <gen_protochain+0x5e4>
    7d00:	str	r7, [r0, #20]
    7d04:	add	r3, pc, r3
    7d08:	add	r6, r3, r6, lsl #2
    7d0c:	mov	r4, r0
    7d10:	mov	r1, r0
    7d14:	mov	r0, r9
    7d18:	str	r5, [r6, #788]	; 0x314
    7d1c:	bl	2f48 <sf_gen_and>
    7d20:	b	7850 <gen_protochain+0x84>
    7d24:	ldr	r0, [pc, #136]	; 7db4 <gen_protochain+0x5e8>
    7d28:	bl	557c <gen_linktype>
    7d2c:	mov	r9, r0
    7d30:	mov	r0, #48	; 0x30
    7d34:	bl	21bc <new_stmt>
    7d38:	ldr	r2, [pc, #120]	; 7db8 <gen_protochain+0x5ec>
    7d3c:	add	r2, pc, r2
    7d40:	ldr	r3, [r2, #940]	; 0x3ac
    7d44:	ldr	r2, [r2, #948]	; 0x3b4
    7d48:	add	r3, r3, r2
    7d4c:	add	r3, r3, #6
    7d50:	str	r3, [r0, #12]
    7d54:	str	r0, [sp, #20]
    7d58:	mov	r0, r4
    7d5c:	bl	21bc <new_stmt>
    7d60:	mov	r3, #40	; 0x28
    7d64:	str	r0, [sp, #24]
    7d68:	str	r3, [r0, #12]
    7d6c:	b	7928 <gen_protochain+0x15c>
    7d70:	mov	r0, #4
    7d74:	bl	21bc <new_stmt>
    7d78:	str	r4, [r0, #12]
    7d7c:	str	r0, [sp, #36]	; 0x24
    7d80:	str	r0, [r5, #8]
    7d84:	mov	r5, #6
    7d88:	b	7b04 <gen_protochain+0x338>
    7d8c:	.word	0x00025804
    7d90:	.word	0x0000940e
    7d94:	.word	0x00025afc
    7d98:	.word	0x00009400
    7d9c:	.word	0x00000108
    7da0:	.word	0x000093df
    7da4:	.word	0x00025a6c
    7da8:	.word	0x0002594c
    7dac:	.word	0x000257f0
    7db0:	.word	0x00025664
    7db4:	.word	0x000086dd
    7db8:	.word	0x0002562c

00007dbc <sf_gen_ncode>:
    7dbc:	push	{r4, r5, r6, r7, lr}
    7dc0:	lsr	r4, r2, #8
    7dc4:	sub	sp, sp, #20
    7dc8:	lsr	r6, r2, #16
    7dcc:	subs	r7, r0, #0
    7dd0:	str	r1, [sp, #12]
    7dd4:	str	r2, [sp, #8]
    7dd8:	uxtb	r5, r2
    7ddc:	uxtb	r4, r4
    7de0:	uxtb	r6, r6
    7de4:	beq	7e80 <sf_gen_ncode+0xc4>
    7de8:	cmp	r4, #12
    7dec:	add	r1, sp, #12
    7df0:	bne	7e4c <sf_gen_ncode+0x90>
    7df4:	bl	9f74 <__pcap_atodn>
    7df8:	cmp	r5, #4
    7dfc:	beq	7fe8 <sf_gen_ncode+0x22c>
    7e00:	bhi	7e2c <sf_gen_ncode+0x70>
    7e04:	cmp	r5, #2
    7e08:	bhi	7f5c <sf_gen_ncode+0x1a0>
    7e0c:	mov	r3, r6
    7e10:	mov	r2, #12
    7e14:	mov	r1, #0
    7e18:	str	r5, [sp]
    7e1c:	ldr	r0, [sp, #12]
    7e20:	bl	7020 <gen_host>
    7e24:	mov	r5, r0
    7e28:	b	7f98 <sf_gen_ncode+0x1dc>
    7e2c:	cmp	r5, #6
    7e30:	beq	8008 <sf_gen_ncode+0x24c>
    7e34:	bcc	7ff4 <sf_gen_ncode+0x238>
    7e38:	cmp	r5, #7
    7e3c:	beq	7ec0 <sf_gen_ncode+0x104>
    7e40:	cmp	r5, #255	; 0xff
    7e44:	beq	801c <sf_gen_ncode+0x260>
    7e48:	bl	f44 <abort@plt>
    7e4c:	bl	9f0c <__pcap_atoin>
    7e50:	cmp	r5, #4
    7e54:	beq	7fe8 <sf_gen_ncode+0x22c>
    7e58:	bhi	7e88 <sf_gen_ncode+0xcc>
    7e5c:	cmp	r5, #2
    7e60:	bhi	7f38 <sf_gen_ncode+0x17c>
    7e64:	cmp	r4, #12
    7e68:	beq	7e0c <sf_gen_ncode+0x50>
    7e6c:	cmp	r4, #1
    7e70:	bne	7ecc <sf_gen_ncode+0x110>
    7e74:	ldr	r0, [pc, #428]	; 8028 <sf_gen_ncode+0x26c>
    7e78:	add	r0, pc, r0
    7e7c:	bl	20b8 <sf_bpf_error>
    7e80:	mov	r0, #32
    7e84:	b	7e50 <sf_gen_ncode+0x94>
    7e88:	cmp	r5, #6
    7e8c:	beq	8008 <sf_gen_ncode+0x24c>
    7e90:	bcc	7ff4 <sf_gen_ncode+0x238>
    7e94:	cmp	r5, #7
    7e98:	bne	7e40 <sf_gen_ncode+0x84>
    7e9c:	cmp	r4, #7
    7ea0:	beq	7fac <sf_gen_ncode+0x1f0>
    7ea4:	cmp	r4, #6
    7ea8:	beq	7fb0 <sf_gen_ncode+0x1f4>
    7eac:	cmp	r4, #5
    7eb0:	beq	7fe0 <sf_gen_ncode+0x224>
    7eb4:	cmp	r4, #0
    7eb8:	mvneq	r4, #0
    7ebc:	beq	7fb0 <sf_gen_ncode+0x1f4>
    7ec0:	ldr	r0, [pc, #356]	; 802c <sf_gen_ncode+0x270>
    7ec4:	add	r0, pc, r0
    7ec8:	b	7e7c <sf_gen_ncode+0xc0>
    7ecc:	cmp	r5, #2
    7ed0:	cmpeq	r7, #0
    7ed4:	moveq	r7, #1
    7ed8:	movne	r7, #0
    7edc:	ldr	r3, [sp, #12]
    7ee0:	moveq	r2, #0
    7ee4:	mvneq	r1, #0
    7ee8:	beq	7f18 <sf_gen_ncode+0x15c>
    7eec:	rsb	r0, r0, #32
    7ef0:	mvn	r1, #0
    7ef4:	lsl	r3, r3, r0
    7ef8:	lsl	r1, r1, r0
    7efc:	str	r3, [sp, #12]
    7f00:	b	7f28 <sf_gen_ncode+0x16c>
    7f04:	tst	r3, #-16777216	; 0xff000000
    7f08:	bne	7f20 <sf_gen_ncode+0x164>
    7f0c:	lsl	r3, r3, #8
    7f10:	lsl	r1, r1, #8
    7f14:	mov	r2, r7
    7f18:	cmp	r3, #0
    7f1c:	bne	7f04 <sf_gen_ncode+0x148>
    7f20:	cmp	r2, #0
    7f24:	strne	r3, [sp, #12]
    7f28:	str	r5, [sp]
    7f2c:	mov	r3, r6
    7f30:	mov	r2, r4
    7f34:	b	7e1c <sf_gen_ncode+0x60>
    7f38:	cmp	r4, #7
    7f3c:	beq	7f68 <sf_gen_ncode+0x1ac>
    7f40:	cmp	r4, #6
    7f44:	beq	7f6c <sf_gen_ncode+0x1b0>
    7f48:	cmp	r4, #5
    7f4c:	beq	7fa4 <sf_gen_ncode+0x1e8>
    7f50:	cmp	r4, #0
    7f54:	mvneq	r4, #0
    7f58:	beq	7f6c <sf_gen_ncode+0x1b0>
    7f5c:	ldr	r0, [pc, #204]	; 8030 <sf_gen_ncode+0x274>
    7f60:	add	r0, pc, r0
    7f64:	b	7e7c <sf_gen_ncode+0xc0>
    7f68:	mov	r4, #17
    7f6c:	mov	r2, r6
    7f70:	mov	r1, r4
    7f74:	ldr	r0, [sp, #12]
    7f78:	bl	74ac <gen_port>
    7f7c:	mov	r2, r6
    7f80:	mov	r1, r4
    7f84:	mov	r5, r0
    7f88:	ldr	r0, [sp, #12]
    7f8c:	bl	7568 <gen_port6>
    7f90:	mov	r1, r5
    7f94:	bl	2fc8 <sf_gen_or>
    7f98:	mov	r0, r5
    7f9c:	add	sp, sp, #20
    7fa0:	pop	{r4, r5, r6, r7, pc}
    7fa4:	mov	r4, #132	; 0x84
    7fa8:	b	7f6c <sf_gen_ncode+0x1b0>
    7fac:	mov	r4, #17
    7fb0:	ldr	r1, [sp, #12]
    7fb4:	mov	r3, r6
    7fb8:	mov	r2, r4
    7fbc:	mov	r0, r1
    7fc0:	bl	7628 <gen_portrange>
    7fc4:	ldr	r1, [sp, #12]
    7fc8:	mov	r3, r6
    7fcc:	mov	r2, r4
    7fd0:	mov	r5, r0
    7fd4:	mov	r0, r1
    7fd8:	bl	76f8 <gen_portrange6>
    7fdc:	b	7f90 <sf_gen_ncode+0x1d4>
    7fe0:	mov	r4, #132	; 0x84
    7fe4:	b	7fb0 <sf_gen_ncode+0x1f4>
    7fe8:	ldr	r0, [pc, #68]	; 8034 <sf_gen_ncode+0x278>
    7fec:	add	r0, pc, r0
    7ff0:	b	7e7c <sf_gen_ncode+0xc0>
    7ff4:	mov	r2, r6
    7ff8:	mov	r1, r4
    7ffc:	ldr	r0, [sp, #12]
    8000:	bl	6008 <gen_proto>
    8004:	b	7e24 <sf_gen_ncode+0x68>
    8008:	mov	r2, r6
    800c:	mov	r1, r4
    8010:	ldr	r0, [sp, #12]
    8014:	bl	77cc <gen_protochain>
    8018:	b	7e24 <sf_gen_ncode+0x68>
    801c:	ldr	r0, [pc, #20]	; 8038 <sf_gen_ncode+0x27c>
    8020:	add	r0, pc, r0
    8024:	b	7e7c <sf_gen_ncode+0xc0>
    8028:	.word	0x00008e67
    802c:	.word	0x00008e52
    8030:	.word	0x00008d9a
    8034:	.word	0x00008d4b
    8038:	.word	0x00007f91

0000803c <sf_gen_broadcast>:
    803c:	push	{r0, r1, r4, r5, r6, lr}
    8040:	cmp	r0, #0
    8044:	blt	8058 <sf_gen_broadcast+0x1c>
    8048:	cmp	r0, #1
    804c:	ble	8064 <sf_gen_broadcast+0x28>
    8050:	cmp	r0, #2
    8054:	beq	81f4 <sf_gen_broadcast+0x1b8>
    8058:	ldr	r0, [pc, #520]	; 8268 <sf_gen_broadcast+0x22c>
    805c:	add	r0, pc, r0
    8060:	b	80a0 <sf_gen_broadcast+0x64>
    8064:	ldr	r2, [pc, #512]	; 826c <sf_gen_broadcast+0x230>
    8068:	add	r2, pc, r2
    806c:	ldr	r3, [r2, #856]	; 0x358
    8070:	cmp	r3, #119	; 0x77
    8074:	beq	80b4 <sf_gen_broadcast+0x78>
    8078:	bgt	80d0 <sf_gen_broadcast+0x94>
    807c:	cmp	r3, #7
    8080:	beq	8168 <sf_gen_broadcast+0x12c>
    8084:	bgt	80a4 <sf_gen_broadcast+0x68>
    8088:	cmp	r3, #1
    808c:	beq	8184 <sf_gen_broadcast+0x148>
    8090:	cmp	r3, #6
    8094:	beq	81bc <sf_gen_broadcast+0x180>
    8098:	ldr	r0, [pc, #464]	; 8270 <sf_gen_broadcast+0x234>
    809c:	add	r0, pc, r0
    80a0:	bl	20b8 <sf_bpf_error>
    80a4:	cmp	r3, #10
    80a8:	beq	81a0 <sf_gen_broadcast+0x164>
    80ac:	cmp	r3, #105	; 0x69
    80b0:	bne	8098 <sf_gen_broadcast+0x5c>
    80b4:	ldr	r0, [pc, #440]	; 8274 <sf_gen_broadcast+0x238>
    80b8:	mov	r1, #2
    80bc:	add	r0, pc, r0
    80c0:	add	r0, r0, #8
    80c4:	add	sp, sp, #8
    80c8:	pop	{r4, r5, r6, lr}
    80cc:	b	41f0 <gen_wlanhostop>
    80d0:	cmp	r3, #127	; 0x7f
    80d4:	beq	80b4 <sf_gen_broadcast+0x78>
    80d8:	bgt	8150 <sf_gen_broadcast+0x114>
    80dc:	cmp	r3, #122	; 0x7a
    80e0:	beq	81d8 <sf_gen_broadcast+0x19c>
    80e4:	cmp	r3, #123	; 0x7b
    80e8:	bne	8098 <sf_gen_broadcast+0x5c>
    80ec:	ldr	r3, [r2, #892]	; 0x37c
    80f0:	cmp	r3, #0
    80f4:	beq	8058 <sf_gen_broadcast+0x1c>
    80f8:	mov	r3, #65280	; 0xff00
    80fc:	mov	r2, #8
    8100:	mov	r1, #4
    8104:	mov	r0, #1
    8108:	bl	3a28 <gen_cmp>
    810c:	mov	r1, #2
    8110:	ldr	r3, [r0, #44]	; 0x2c
    8114:	clz	r3, r3
    8118:	lsr	r3, r3, #5
    811c:	str	r3, [r0, #44]	; 0x2c
    8120:	mov	r5, r0
    8124:	ldr	r0, [pc, #332]	; 8278 <sf_gen_broadcast+0x23c>
    8128:	add	r0, pc, r0
    812c:	add	r0, r0, #8
    8130:	bl	3de8 <gen_ehostop>
    8134:	mov	r4, r0
    8138:	mov	r0, r5
    813c:	mov	r1, r4
    8140:	bl	2f48 <sf_gen_and>
    8144:	mov	r0, r4
    8148:	add	sp, sp, #8
    814c:	pop	{r4, r5, r6, pc}
    8150:	cmp	r3, #163	; 0xa3
    8154:	beq	80b4 <sf_gen_broadcast+0x78>
    8158:	cmp	r3, #192	; 0xc0
    815c:	beq	80b4 <sf_gen_broadcast+0x78>
    8160:	cmp	r3, #129	; 0x81
    8164:	bne	8098 <sf_gen_broadcast+0x5c>
    8168:	ldr	r0, [pc, #268]	; 827c <sf_gen_broadcast+0x240>
    816c:	mov	r1, #2
    8170:	add	r0, pc, r0
    8174:	add	r0, r0, #956	; 0x3bc
    8178:	add	sp, sp, #8
    817c:	pop	{r4, r5, r6, lr}
    8180:	b	3eb4 <gen_ahostop>
    8184:	ldr	r0, [pc, #244]	; 8280 <sf_gen_broadcast+0x244>
    8188:	mov	r1, #2
    818c:	add	r0, pc, r0
    8190:	add	r0, r0, #8
    8194:	add	sp, sp, #8
    8198:	pop	{r4, r5, r6, lr}
    819c:	b	3de8 <gen_ehostop>
    81a0:	ldr	r0, [pc, #220]	; 8284 <sf_gen_broadcast+0x248>
    81a4:	mov	r1, #2
    81a8:	add	r0, pc, r0
    81ac:	add	r0, r0, #8
    81b0:	add	sp, sp, #8
    81b4:	pop	{r4, r5, r6, lr}
    81b8:	b	3bd8 <gen_fhostop>
    81bc:	ldr	r0, [pc, #196]	; 8288 <sf_gen_broadcast+0x24c>
    81c0:	mov	r1, #2
    81c4:	add	r0, pc, r0
    81c8:	add	r0, r0, #8
    81cc:	add	sp, sp, #8
    81d0:	pop	{r4, r5, r6, lr}
    81d4:	b	3c88 <gen_thostop>
    81d8:	ldr	r0, [pc, #172]	; 828c <sf_gen_broadcast+0x250>
    81dc:	mov	r1, #2
    81e0:	add	r0, pc, r0
    81e4:	add	r0, r0, #8
    81e8:	add	sp, sp, #8
    81ec:	pop	{r4, r5, r6, lr}
    81f0:	b	3d38 <gen_ipfchostop>
    81f4:	ldr	r3, [pc, #148]	; 8290 <sf_gen_broadcast+0x254>
    81f8:	add	r3, pc, r3
    81fc:	ldr	r4, [r3, #876]	; 0x36c
    8200:	cmn	r4, #1
    8204:	ldreq	r0, [pc, #136]	; 8294 <sf_gen_broadcast+0x258>
    8208:	addeq	r0, pc, r0
    820c:	beq	80a0 <sf_gen_broadcast+0x64>
    8210:	mov	r0, #2048	; 0x800
    8214:	bl	557c <gen_linktype>
    8218:	mvn	r4, r4
    821c:	mov	r3, #0
    8220:	str	r4, [sp]
    8224:	mov	r2, r3
    8228:	mov	r1, #16
    822c:	mov	r5, r0
    8230:	mov	r0, #3
    8234:	bl	41cc <gen_mcmp>
    8238:	str	r4, [sp]
    823c:	mov	r3, r4
    8240:	mov	r2, #0
    8244:	mov	r1, #16
    8248:	mov	r6, r0
    824c:	mov	r0, #3
    8250:	bl	41cc <gen_mcmp>
    8254:	mov	r4, r0
    8258:	mov	r1, r0
    825c:	mov	r0, r6
    8260:	bl	2fc8 <sf_gen_or>
    8264:	b	8138 <sf_gen_broadcast+0xfc>
    8268:	.word	0x00008d3d
    826c:	.word	0x00025300
    8270:	.word	0x00008cb5
    8274:	.word	0x000251c0
    8278:	.word	0x00025154
    827c:	.word	0x000251f8
    8280:	.word	0x000250f0
    8284:	.word	0x000250d4
    8288:	.word	0x000250b8
    828c:	.word	0x0002509c
    8290:	.word	0x00025170
    8294:	.word	0x00008b5e

00008298 <sf_gen_multicast>:
    8298:	cmp	r0, #2
    829c:	push	{r4, r5, r6, r7, lr}
    82a0:	sub	sp, sp, #20
    82a4:	beq	8554 <sf_gen_multicast+0x2bc>
    82a8:	bgt	82c0 <sf_gen_multicast+0x28>
    82ac:	cmp	r0, #0
    82b0:	bge	82ec <sf_gen_multicast+0x54>
    82b4:	ldr	r0, [pc, #716]	; 8588 <sf_gen_multicast+0x2f0>
    82b8:	add	r0, pc, r0
    82bc:	bl	20b8 <sf_bpf_error>
    82c0:	cmp	r0, #17
    82c4:	bne	82b4 <sf_gen_multicast+0x1c>
    82c8:	ldr	r0, [pc, #700]	; 858c <sf_gen_multicast+0x2f4>
    82cc:	bl	557c <gen_linktype>
    82d0:	mov	r3, #255	; 0xff
    82d4:	mov	r2, #16
    82d8:	mov	r1, #24
    82dc:	mov	r5, r0
    82e0:	mov	r0, #3
    82e4:	bl	3a28 <gen_cmp>
    82e8:	b	8500 <sf_gen_multicast+0x268>
    82ec:	ldr	r2, [pc, #668]	; 8590 <sf_gen_multicast+0x2f8>
    82f0:	add	r2, pc, r2
    82f4:	ldr	r3, [r2, #856]	; 0x358
    82f8:	cmp	r3, #119	; 0x77
    82fc:	beq	833c <sf_gen_multicast+0xa4>
    8300:	bgt	84a0 <sf_gen_multicast+0x208>
    8304:	cmp	r3, #7
    8308:	beq	8528 <sf_gen_multicast+0x290>
    830c:	bgt	8328 <sf_gen_multicast+0x90>
    8310:	cmp	r3, #1
    8314:	beq	8544 <sf_gen_multicast+0x2ac>
    8318:	cmp	r3, #6
    831c:	bne	82b4 <sf_gen_multicast+0x1c>
    8320:	mov	r0, #2
    8324:	b	8548 <sf_gen_multicast+0x2b0>
    8328:	cmp	r3, #10
    832c:	moveq	r0, #1
    8330:	beq	8548 <sf_gen_multicast+0x2b0>
    8334:	cmp	r3, #105	; 0x69
    8338:	bne	82b4 <sf_gen_multicast+0x1c>
    833c:	mov	r1, #16
    8340:	mov	r0, #1
    8344:	bl	36cc <gen_load_llrel>
    8348:	mov	r6, #1
    834c:	mov	r4, r0
    8350:	mov	r0, #69	; 0x45
    8354:	bl	219c <new_block>
    8358:	mov	r5, r0
    835c:	str	r6, [r0, #20]
    8360:	str	r4, [r0, #4]
    8364:	mov	r0, #16
    8368:	bl	372c <gen_mac_multicast>
    836c:	mov	r4, r0
    8370:	mov	r1, r0
    8374:	mov	r0, r5
    8378:	bl	2f48 <sf_gen_and>
    837c:	mov	r1, #16
    8380:	mov	r0, r6
    8384:	bl	36cc <gen_load_llrel>
    8388:	mov	r7, r0
    838c:	mov	r0, #69	; 0x45
    8390:	bl	219c <new_block>
    8394:	ldr	r3, [r0, #44]	; 0x2c
    8398:	clz	r3, r3
    839c:	lsr	r3, r3, #5
    83a0:	str	r3, [r0, #44]	; 0x2c
    83a4:	mov	r5, r0
    83a8:	str	r6, [r0, #20]
    83ac:	str	r7, [r0, #4]
    83b0:	mov	r0, #4
    83b4:	bl	372c <gen_mac_multicast>
    83b8:	mov	r6, r0
    83bc:	mov	r1, r0
    83c0:	mov	r0, r5
    83c4:	bl	2f48 <sf_gen_and>
    83c8:	mov	r0, r6
    83cc:	mov	r1, r4
    83d0:	bl	2fc8 <sf_gen_or>
    83d4:	mov	r1, #16
    83d8:	mov	r0, #0
    83dc:	bl	36cc <gen_load_llrel>
    83e0:	mov	r6, #8
    83e4:	mov	r5, r0
    83e8:	mov	r0, #69	; 0x45
    83ec:	bl	219c <new_block>
    83f0:	mov	r1, r4
    83f4:	str	r6, [r0, #20]
    83f8:	str	r5, [r0, #4]
    83fc:	bl	2f48 <sf_gen_and>
    8400:	mov	r1, #16
    8404:	mov	r0, #0
    8408:	bl	36cc <gen_load_llrel>
    840c:	mov	r7, r0
    8410:	mov	r0, #69	; 0x45
    8414:	bl	219c <new_block>
    8418:	ldr	r3, [r0, #44]	; 0x2c
    841c:	clz	r3, r3
    8420:	lsr	r3, r3, #5
    8424:	str	r3, [r0, #44]	; 0x2c
    8428:	mov	r5, r0
    842c:	str	r6, [r0, #20]
    8430:	str	r7, [r0, #4]
    8434:	mov	r0, #4
    8438:	bl	372c <gen_mac_multicast>
    843c:	mov	r1, r0
    8440:	mov	r6, r0
    8444:	mov	r0, r5
    8448:	bl	2f48 <sf_gen_and>
    844c:	mov	r1, r4
    8450:	mov	r0, r6
    8454:	bl	2fc8 <sf_gen_or>
    8458:	mov	r1, #16
    845c:	mov	r0, #0
    8460:	bl	36cc <gen_load_llrel>
    8464:	mov	r5, r0
    8468:	mov	r0, #69	; 0x45
    846c:	bl	219c <new_block>
    8470:	mov	r3, #4
    8474:	mov	r1, r4
    8478:	str	r3, [r0, #20]
    847c:	ldr	r3, [r0, #44]	; 0x2c
    8480:	clz	r3, r3
    8484:	lsr	r3, r3, #5
    8488:	str	r5, [r0, #4]
    848c:	str	r3, [r0, #44]	; 0x2c
    8490:	bl	2f48 <sf_gen_and>
    8494:	mov	r0, r4
    8498:	add	sp, sp, #20
    849c:	pop	{r4, r5, r6, r7, pc}
    84a0:	cmp	r3, #127	; 0x7f
    84a4:	beq	833c <sf_gen_multicast+0xa4>
    84a8:	bgt	8510 <sf_gen_multicast+0x278>
    84ac:	cmp	r3, #122	; 0x7a
    84b0:	beq	8320 <sf_gen_multicast+0x88>
    84b4:	cmp	r3, #123	; 0x7b
    84b8:	bne	82b4 <sf_gen_multicast+0x1c>
    84bc:	ldr	r3, [r2, #892]	; 0x37c
    84c0:	cmp	r3, #0
    84c4:	beq	82b4 <sf_gen_multicast+0x1c>
    84c8:	mov	r3, #65280	; 0xff00
    84cc:	mov	r2, #8
    84d0:	mov	r1, #4
    84d4:	mov	r0, #1
    84d8:	bl	3a28 <gen_cmp>
    84dc:	ldr	r3, [r0, #44]	; 0x2c
    84e0:	clz	r3, r3
    84e4:	lsr	r3, r3, #5
    84e8:	str	r3, [r0, #44]	; 0x2c
    84ec:	ldr	r3, [pc, #160]	; 8594 <sf_gen_multicast+0x2fc>
    84f0:	mov	r5, r0
    84f4:	add	r3, pc, r3
    84f8:	ldr	r0, [r3, #884]	; 0x374
    84fc:	bl	372c <gen_mac_multicast>
    8500:	mov	r4, r0
    8504:	mov	r1, r0
    8508:	mov	r0, r5
    850c:	b	8490 <sf_gen_multicast+0x1f8>
    8510:	cmp	r3, #163	; 0xa3
    8514:	beq	833c <sf_gen_multicast+0xa4>
    8518:	cmp	r3, #192	; 0xc0
    851c:	beq	833c <sf_gen_multicast+0xa4>
    8520:	cmp	r3, #129	; 0x81
    8524:	bne	82b4 <sf_gen_multicast+0x1c>
    8528:	ldr	r0, [pc, #104]	; 8598 <sf_gen_multicast+0x300>
    852c:	mov	r1, #2
    8530:	add	r0, pc, r0
    8534:	add	r0, r0, #956	; 0x3bc
    8538:	add	sp, sp, #20
    853c:	pop	{r4, r5, r6, r7, lr}
    8540:	b	3eb4 <gen_ahostop>
    8544:	mov	r0, #0
    8548:	add	sp, sp, #20
    854c:	pop	{r4, r5, r6, r7, lr}
    8550:	b	372c <gen_mac_multicast>
    8554:	mov	r0, #2048	; 0x800
    8558:	bl	557c <gen_linktype>
    855c:	mov	r1, #48	; 0x30
    8560:	mov	r2, #0
    8564:	mov	r3, #224	; 0xe0
    8568:	stm	sp, {r1, r2, r3}
    856c:	mov	r2, #16
    8570:	mvn	r3, #0
    8574:	mov	r1, r2
    8578:	mov	r5, r0
    857c:	mov	r0, #3
    8580:	bl	38d0 <gen_ncmp>
    8584:	b	8500 <sf_gen_multicast+0x268>
    8588:	.word	0x00008b10
    858c:	.word	0x000086dd
    8590:	.word	0x00025078
    8594:	.word	0x00024e74
    8598:	.word	0x00024e38

0000859c <sf_gen_mpls>:
    859c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    85a0:	mov	r7, r0
    85a4:	ldr	r2, [pc, #232]	; 8694 <sf_gen_mpls+0xf8>
    85a8:	ldr	r3, [pc, #232]	; 8698 <sf_gen_mpls+0xfc>
    85ac:	add	r2, pc, r2
    85b0:	add	r3, pc, r3
    85b4:	ldr	r6, [r2, #4]
    85b8:	ldr	r4, [r3, #948]	; 0x3b4
    85bc:	cmp	r6, #0
    85c0:	str	r4, [r2]
    85c4:	beq	8658 <sf_gen_mpls+0xbc>
    85c8:	mov	r3, #1
    85cc:	str	r3, [sp]
    85d0:	mov	r2, #16
    85d4:	mov	r3, #0
    85d8:	sub	r1, r4, #2
    85dc:	mov	r0, #2
    85e0:	bl	41cc <gen_mcmp>
    85e4:	cmp	r7, #0
    85e8:	mov	r5, r0
    85ec:	blt	8620 <sf_gen_mpls+0x84>
    85f0:	ldr	r3, [pc, #164]	; 869c <sf_gen_mpls+0x100>
    85f4:	mov	r2, #0
    85f8:	str	r3, [sp]
    85fc:	mov	r1, r4
    8600:	lsl	r3, r7, #12
    8604:	mov	r0, #2
    8608:	bl	41cc <gen_mcmp>
    860c:	mov	r7, r0
    8610:	mov	r1, r0
    8614:	mov	r0, r5
    8618:	bl	2f48 <sf_gen_and>
    861c:	mov	r5, r7
    8620:	ldr	r3, [pc, #120]	; 86a0 <sf_gen_mpls+0x104>
    8624:	add	r4, r4, #4
    8628:	add	r3, pc, r3
    862c:	add	r6, r6, #1
    8630:	ldr	r2, [r3, #952]	; 0x3b8
    8634:	str	r4, [r3, #948]	; 0x3b4
    8638:	add	r2, r2, #4
    863c:	str	r2, [r3, #952]	; 0x3b8
    8640:	ldr	r3, [pc, #92]	; 86a4 <sf_gen_mpls+0x108>
    8644:	mov	r0, r5
    8648:	add	r3, pc, r3
    864c:	str	r6, [r3, #4]
    8650:	add	sp, sp, #12
    8654:	pop	{r4, r5, r6, r7, pc}
    8658:	ldr	r1, [r3, #856]	; 0x358
    865c:	cmp	r1, #9
    8660:	beq	8680 <sf_gen_mpls+0xe4>
    8664:	cmp	r1, #104	; 0x68
    8668:	beq	8674 <sf_gen_mpls+0xd8>
    866c:	cmp	r1, #1
    8670:	bne	8688 <sf_gen_mpls+0xec>
    8674:	ldr	r0, [pc, #44]	; 86a8 <sf_gen_mpls+0x10c>
    8678:	bl	557c <gen_linktype>
    867c:	b	85e4 <sf_gen_mpls+0x48>
    8680:	ldr	r0, [pc, #36]	; 86ac <sf_gen_mpls+0x110>
    8684:	b	8678 <sf_gen_mpls+0xdc>
    8688:	ldr	r0, [pc, #32]	; 86b0 <sf_gen_mpls+0x114>
    868c:	add	r0, pc, r0
    8690:	bl	20b8 <sf_bpf_error>
    8694:	.word	0x00024cd0
    8698:	.word	0x00024db8
    869c:	.word	0xfffff000
    86a0:	.word	0x00024d40
    86a4:	.word	0x00024c34
    86a8:	.word	0x00008847
    86ac:	.word	0x00000281
    86b0:	.word	0x000087a9

000086b4 <sf_gen_pppoed>:
    86b4:	ldr	r0, [pc]	; 86bc <sf_gen_pppoed+0x8>
    86b8:	b	557c <gen_linktype>
    86bc:	.word	0x00008863

000086c0 <sf_gen_pppoes>:
    86c0:	push	{r4, lr}
    86c4:	ldr	r0, [pc, #56]	; 8704 <sf_gen_pppoes+0x44>
    86c8:	bl	557c <gen_linktype>
    86cc:	ldr	r3, [pc, #52]	; 8708 <sf_gen_pppoes+0x48>
    86d0:	ldr	r1, [pc, #52]	; 870c <sf_gen_pppoes+0x4c>
    86d4:	add	r3, pc, r3
    86d8:	add	r1, pc, r1
    86dc:	ldr	r2, [r3, #948]	; 0x3b4
    86e0:	str	r2, [r1]
    86e4:	add	r2, r2, #6
    86e8:	mov	r1, #1
    86ec:	str	r2, [r3, #944]	; 0x3b0
    86f0:	mov	r2, #8
    86f4:	str	r1, [r3, #912]	; 0x390
    86f8:	str	r2, [r3, #948]	; 0x3b4
    86fc:	str	r2, [r3, #952]	; 0x3b8
    8700:	pop	{r4, pc}
    8704:	.word	0x00008864
    8708:	.word	0x00024c94
    870c:	.word	0x00024ba4

00008710 <gen_hostop6.constprop.8>:
    8710:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8714:	mov	r6, r0
    8718:	mov	r5, r1
    871c:	cmp	r2, #4
    8720:	addls	pc, pc, r2, lsl #2
    8724:	b	8864 <gen_hostop6.constprop.8+0x154>
    8728:	b	882c <gen_hostop6.constprop.8+0x11c>
    872c:	b	8868 <gen_hostop6.constprop.8+0x158>
    8730:	b	873c <gen_hostop6.constprop.8+0x2c>
    8734:	b	882c <gen_hostop6.constprop.8+0x11c>
    8738:	b	87fc <gen_hostop6.constprop.8+0xec>
    873c:	mov	r7, #24
    8740:	ldr	r2, [r5, #12]
    8744:	ldr	r3, [r6, #12]
    8748:	rev	r2, r2
    874c:	str	r2, [sp]
    8750:	rev	r3, r3
    8754:	mov	r2, #0
    8758:	add	r1, r7, #12
    875c:	mov	r0, #3
    8760:	bl	41cc <gen_mcmp>
    8764:	ldr	r2, [r5, #8]
    8768:	ldr	r3, [r6, #8]
    876c:	rev	r2, r2
    8770:	rev	r3, r3
    8774:	str	r2, [sp]
    8778:	add	r1, r7, #8
    877c:	mov	r2, #0
    8780:	mov	r4, r0
    8784:	mov	r0, #3
    8788:	bl	41cc <gen_mcmp>
    878c:	mov	r1, r4
    8790:	bl	2f48 <sf_gen_and>
    8794:	ldr	r2, [r5, #4]
    8798:	ldr	r3, [r6, #4]
    879c:	rev	r2, r2
    87a0:	rev	r3, r3
    87a4:	str	r2, [sp]
    87a8:	add	r1, r7, #4
    87ac:	mov	r2, #0
    87b0:	mov	r0, #3
    87b4:	bl	41cc <gen_mcmp>
    87b8:	mov	r1, r4
    87bc:	bl	2f48 <sf_gen_and>
    87c0:	ldr	r2, [r5]
    87c4:	ldr	r3, [r6]
    87c8:	rev	r2, r2
    87cc:	rev	r3, r3
    87d0:	str	r2, [sp]
    87d4:	mov	r1, r7
    87d8:	mov	r2, #0
    87dc:	mov	r0, #3
    87e0:	bl	41cc <gen_mcmp>
    87e4:	mov	r1, r4
    87e8:	bl	2f48 <sf_gen_and>
    87ec:	ldr	r0, [pc, #124]	; 8870 <gen_hostop6.constprop.8+0x160>
    87f0:	bl	557c <gen_linktype>
    87f4:	mov	r1, r4
    87f8:	b	8824 <gen_hostop6.constprop.8+0x114>
    87fc:	mov	r2, #1
    8800:	bl	8710 <gen_hostop6.constprop.8>
    8804:	mov	r1, r5
    8808:	mov	r2, #2
    880c:	mov	r7, r0
    8810:	mov	r0, r6
    8814:	bl	8710 <gen_hostop6.constprop.8>
    8818:	mov	r4, r0
    881c:	mov	r1, r0
    8820:	mov	r0, r7
    8824:	bl	2f48 <sf_gen_and>
    8828:	b	8858 <gen_hostop6.constprop.8+0x148>
    882c:	mov	r2, #1
    8830:	bl	8710 <gen_hostop6.constprop.8>
    8834:	mov	r1, r5
    8838:	mov	r2, #2
    883c:	mov	r7, r0
    8840:	mov	r0, r6
    8844:	bl	8710 <gen_hostop6.constprop.8>
    8848:	mov	r4, r0
    884c:	mov	r1, r0
    8850:	mov	r0, r7
    8854:	bl	2fc8 <sf_gen_or>
    8858:	mov	r0, r4
    885c:	add	sp, sp, #12
    8860:	pop	{r4, r5, r6, r7, pc}
    8864:	bl	f44 <abort@plt>
    8868:	mov	r7, #8
    886c:	b	8740 <gen_hostop6.constprop.8+0x30>
    8870:	.word	0x000086dd

00008874 <gen_host6>:
    8874:	push	{r4, lr}
    8878:	mov	r4, r1
    887c:	ldr	lr, [pc, #580]	; 8ac8 <gen_host6+0x254>
    8880:	ldr	r1, [sp, #8]
    8884:	ldr	ip, [pc, #576]	; 8acc <gen_host6+0x258>
    8888:	cmp	r1, #2
    888c:	add	ip, pc, ip
    8890:	add	lr, pc, lr
    8894:	moveq	r1, ip
    8898:	movne	r1, lr
    889c:	mov	ip, #17
    88a0:	cmp	r2, #40	; 0x28
    88a4:	addls	pc, pc, r2, lsl #2
    88a8:	b	8ac4 <gen_host6+0x250>
    88ac:	b	8950 <gen_host6+0xdc>
    88b0:	b	8ac4 <gen_host6+0x250>
    88b4:	b	8958 <gen_host6+0xe4>
    88b8:	b	8970 <gen_host6+0xfc>
    88bc:	b	8964 <gen_host6+0xf0>
    88c0:	b	897c <gen_host6+0x108>
    88c4:	b	8988 <gen_host6+0x114>
    88c8:	b	8994 <gen_host6+0x120>
    88cc:	b	89a0 <gen_host6+0x12c>
    88d0:	b	89ac <gen_host6+0x138>
    88d4:	b	89b8 <gen_host6+0x144>
    88d8:	b	89dc <gen_host6+0x168>
    88dc:	b	89f4 <gen_host6+0x180>
    88e0:	b	8a0c <gen_host6+0x198>
    88e4:	b	8a00 <gen_host6+0x18c>
    88e8:	b	8a24 <gen_host6+0x1b0>
    88ec:	b	8a18 <gen_host6+0x1a4>
    88f0:	b	8a30 <gen_host6+0x1bc>
    88f4:	b	8a40 <gen_host6+0x1cc>
    88f8:	b	8a4c <gen_host6+0x1d8>
    88fc:	b	8a58 <gen_host6+0x1e4>
    8900:	b	89c4 <gen_host6+0x150>
    8904:	b	89d0 <gen_host6+0x15c>
    8908:	b	89e8 <gen_host6+0x174>
    890c:	b	8a64 <gen_host6+0x1f0>
    8910:	b	8a70 <gen_host6+0x1fc>
    8914:	b	8a7c <gen_host6+0x208>
    8918:	b	8a88 <gen_host6+0x214>
    891c:	b	8a94 <gen_host6+0x220>
    8920:	b	8aa0 <gen_host6+0x22c>
    8924:	b	8aac <gen_host6+0x238>
    8928:	b	8ac4 <gen_host6+0x250>
    892c:	b	8ac4 <gen_host6+0x250>
    8930:	b	8ac4 <gen_host6+0x250>
    8934:	b	8ac4 <gen_host6+0x250>
    8938:	b	8ac4 <gen_host6+0x250>
    893c:	b	8ac4 <gen_host6+0x250>
    8940:	b	8ac4 <gen_host6+0x250>
    8944:	b	8ac4 <gen_host6+0x250>
    8948:	b	8ac4 <gen_host6+0x250>
    894c:	b	8ab8 <gen_host6+0x244>
    8950:	mov	r2, ip
    8954:	b	88a0 <gen_host6+0x2c>
    8958:	ldr	r0, [pc, #368]	; 8ad0 <gen_host6+0x25c>
    895c:	add	r0, pc, r0
    8960:	bl	20b8 <sf_bpf_error>
    8964:	ldr	r0, [pc, #360]	; 8ad4 <gen_host6+0x260>
    8968:	add	r0, pc, r0
    896c:	b	8960 <gen_host6+0xec>
    8970:	ldr	r0, [pc, #352]	; 8ad8 <gen_host6+0x264>
    8974:	add	r0, pc, r0
    8978:	b	8960 <gen_host6+0xec>
    897c:	ldr	r0, [pc, #344]	; 8adc <gen_host6+0x268>
    8980:	add	r0, pc, r0
    8984:	b	8960 <gen_host6+0xec>
    8988:	ldr	r0, [pc, #336]	; 8ae0 <gen_host6+0x26c>
    898c:	add	r0, pc, r0
    8990:	b	8960 <gen_host6+0xec>
    8994:	ldr	r0, [pc, #328]	; 8ae4 <gen_host6+0x270>
    8998:	add	r0, pc, r0
    899c:	b	8960 <gen_host6+0xec>
    89a0:	ldr	r0, [pc, #320]	; 8ae8 <gen_host6+0x274>
    89a4:	add	r0, pc, r0
    89a8:	b	8960 <gen_host6+0xec>
    89ac:	ldr	r0, [pc, #312]	; 8aec <gen_host6+0x278>
    89b0:	add	r0, pc, r0
    89b4:	b	8960 <gen_host6+0xec>
    89b8:	ldr	r0, [pc, #304]	; 8af0 <gen_host6+0x27c>
    89bc:	add	r0, pc, r0
    89c0:	b	8960 <gen_host6+0xec>
    89c4:	ldr	r0, [pc, #296]	; 8af4 <gen_host6+0x280>
    89c8:	add	r0, pc, r0
    89cc:	b	8960 <gen_host6+0xec>
    89d0:	ldr	r0, [pc, #288]	; 8af8 <gen_host6+0x284>
    89d4:	add	r0, pc, r0
    89d8:	b	8960 <gen_host6+0xec>
    89dc:	ldr	r0, [pc, #280]	; 8afc <gen_host6+0x288>
    89e0:	add	r0, pc, r0
    89e4:	bl	20b8 <sf_bpf_error>
    89e8:	ldr	r0, [pc, #272]	; 8b00 <gen_host6+0x28c>
    89ec:	add	r0, pc, r0
    89f0:	b	89e4 <gen_host6+0x170>
    89f4:	ldr	r0, [pc, #264]	; 8b04 <gen_host6+0x290>
    89f8:	add	r0, pc, r0
    89fc:	b	8960 <gen_host6+0xec>
    8a00:	ldr	r0, [pc, #256]	; 8b08 <gen_host6+0x294>
    8a04:	add	r0, pc, r0
    8a08:	b	89e4 <gen_host6+0x170>
    8a0c:	ldr	r0, [pc, #248]	; 8b0c <gen_host6+0x298>
    8a10:	add	r0, pc, r0
    8a14:	b	89e4 <gen_host6+0x170>
    8a18:	ldr	r0, [pc, #240]	; 8b10 <gen_host6+0x29c>
    8a1c:	add	r0, pc, r0
    8a20:	b	89e4 <gen_host6+0x170>
    8a24:	ldr	r0, [pc, #232]	; 8b14 <gen_host6+0x2a0>
    8a28:	add	r0, pc, r0
    8a2c:	b	89e4 <gen_host6+0x170>
    8a30:	mov	r1, r4
    8a34:	mov	r2, r3
    8a38:	pop	{r4, lr}
    8a3c:	b	8710 <gen_hostop6.constprop.8>
    8a40:	ldr	r0, [pc, #208]	; 8b18 <gen_host6+0x2a4>
    8a44:	add	r0, pc, r0
    8a48:	b	8960 <gen_host6+0xec>
    8a4c:	ldr	r0, [pc, #200]	; 8b1c <gen_host6+0x2a8>
    8a50:	add	r0, pc, r0
    8a54:	b	8960 <gen_host6+0xec>
    8a58:	ldr	r0, [pc, #192]	; 8b20 <gen_host6+0x2ac>
    8a5c:	add	r0, pc, r0
    8a60:	b	8960 <gen_host6+0xec>
    8a64:	ldr	r0, [pc, #184]	; 8b24 <gen_host6+0x2b0>
    8a68:	add	r0, pc, r0
    8a6c:	b	89e4 <gen_host6+0x170>
    8a70:	ldr	r0, [pc, #176]	; 8b28 <gen_host6+0x2b4>
    8a74:	add	r0, pc, r0
    8a78:	b	8960 <gen_host6+0xec>
    8a7c:	ldr	r0, [pc, #168]	; 8b2c <gen_host6+0x2b8>
    8a80:	add	r0, pc, r0
    8a84:	b	8960 <gen_host6+0xec>
    8a88:	ldr	r0, [pc, #160]	; 8b30 <gen_host6+0x2bc>
    8a8c:	add	r0, pc, r0
    8a90:	b	8960 <gen_host6+0xec>
    8a94:	ldr	r0, [pc, #152]	; 8b34 <gen_host6+0x2c0>
    8a98:	add	r0, pc, r0
    8a9c:	b	8960 <gen_host6+0xec>
    8aa0:	ldr	r0, [pc, #144]	; 8b38 <gen_host6+0x2c4>
    8aa4:	add	r0, pc, r0
    8aa8:	b	89e4 <gen_host6+0x170>
    8aac:	ldr	r0, [pc, #136]	; 8b3c <gen_host6+0x2c8>
    8ab0:	add	r0, pc, r0
    8ab4:	b	8960 <gen_host6+0xec>
    8ab8:	ldr	r0, [pc, #128]	; 8b40 <gen_host6+0x2cc>
    8abc:	add	r0, pc, r0
    8ac0:	b	8960 <gen_host6+0xec>
    8ac4:	bl	f44 <abort@plt>
    8ac8:	.word	0x0000822a
    8acc:	.word	0x000078f4
    8ad0:	.word	0x000084ff
    8ad4:	.word	0x00008513
    8ad8:	.word	0x00008529
    8adc:	.word	0x00007f74
    8ae0:	.word	0x00007f4b
    8ae4:	.word	0x00007f7a
    8ae8:	.word	0x00007f8b
    8aec:	.word	0x00007f9d
    8af0:	.word	0x00007faf
    8af4:	.word	0x00007fc1
    8af8:	.word	0x00007fd2
    8afc:	.word	0x00007fe4
    8b00:	.word	0x00007ffd
    8b04:	.word	0x000084c6
    8b08:	.word	0x00008009
    8b0c:	.word	0x00008020
    8b10:	.word	0x00008037
    8b14:	.word	0x00008050
    8b18:	.word	0x0000807b
    8b1c:	.word	0x0000808e
    8b20:	.word	0x0000809e
    8b24:	.word	0x00007e4c
    8b28:	.word	0x000080a3
    8b2c:	.word	0x000080b5
    8b30:	.word	0x000080c7
    8b34:	.word	0x000080d9
    8b38:	.word	0x000080ea
    8b3c:	.word	0x00008101
    8b40:	.word	0x00008116

00008b44 <sf_gen_mcode6>:
    8b44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    8b48:	sub	sp, sp, #32
    8b4c:	cmp	r1, #0
    8b50:	str	r3, [sp, #12]
    8b54:	beq	8b64 <sf_gen_mcode6+0x20>
    8b58:	ldr	r0, [pc, #360]	; 8cc8 <sf_gen_mcode6+0x184>
    8b5c:	add	r0, pc, r0
    8b60:	bl	20b8 <sf_bpf_error>
    8b64:	mov	sl, r0
    8b68:	mov	r4, r2
    8b6c:	uxtb	r9, r3
    8b70:	bl	9c70 <pcap_nametoaddrinfo>
    8b74:	subs	r6, r0, #0
    8b78:	ldreq	r0, [pc, #332]	; 8ccc <sf_gen_mcode6+0x188>
    8b7c:	moveq	r1, sl
    8b80:	addeq	r0, pc, r0
    8b84:	beq	8b60 <sf_gen_mcode6+0x1c>
    8b88:	ldr	r3, [pc, #320]	; 8cd0 <sf_gen_mcode6+0x18c>
    8b8c:	ldr	r1, [r6, #28]
    8b90:	add	r3, pc, r3
    8b94:	cmp	r1, #0
    8b98:	str	r6, [r3, #872]	; 0x368
    8b9c:	ldrne	r0, [pc, #304]	; 8cd4 <sf_gen_mcode6+0x190>
    8ba0:	movne	r1, sl
    8ba4:	addne	r0, pc, r0
    8ba8:	bne	8b60 <sf_gen_mcode6+0x1c>
    8bac:	cmp	r4, #128	; 0x80
    8bb0:	ldr	r5, [r6, #20]
    8bb4:	ldrhi	r0, [pc, #284]	; 8cd8 <sf_gen_mcode6+0x194>
    8bb8:	movhi	r1, #128	; 0x80
    8bbc:	addhi	r0, pc, r0
    8bc0:	bhi	8b60 <sf_gen_mcode6+0x1c>
    8bc4:	add	r8, sp, #16
    8bc8:	asr	r7, r4, #3
    8bcc:	mov	r2, #16
    8bd0:	mov	r0, r8
    8bd4:	bl	eb4 <memset@plt>
    8bd8:	mov	r2, r7
    8bdc:	mov	r1, #255	; 0xff
    8be0:	mov	r0, r8
    8be4:	bl	eb4 <memset@plt>
    8be8:	ands	r3, r4, #7
    8bec:	addne	r2, sp, #32
    8bf0:	addne	r7, r2, r7
    8bf4:	rsbne	r2, r3, #8
    8bf8:	movne	r3, #255	; 0xff
    8bfc:	lslne	r3, r3, r2
    8c00:	strbne	r3, [r7, #-16]
    8c04:	ldr	r3, [r5, #8]
    8c08:	ldr	r2, [sp, #16]
    8c0c:	bics	r3, r3, r2
    8c10:	bne	8c44 <sf_gen_mcode6+0x100>
    8c14:	ldr	r3, [r5, #12]
    8c18:	ldr	r2, [sp, #20]
    8c1c:	bics	r3, r3, r2
    8c20:	bne	8c44 <sf_gen_mcode6+0x100>
    8c24:	ldr	r3, [r5, #16]
    8c28:	ldr	r2, [sp, #24]
    8c2c:	bics	r3, r3, r2
    8c30:	bne	8c44 <sf_gen_mcode6+0x100>
    8c34:	ldr	r3, [r5, #20]
    8c38:	ldr	r2, [sp, #28]
    8c3c:	bics	r3, r3, r2
    8c40:	beq	8c58 <sf_gen_mcode6+0x114>
    8c44:	ldr	r0, [pc, #144]	; 8cdc <sf_gen_mcode6+0x198>
    8c48:	mov	r2, r4
    8c4c:	mov	r1, sl
    8c50:	add	r0, pc, r0
    8c54:	bl	20b8 <sf_bpf_error>
    8c58:	cmp	r9, #1
    8c5c:	bls	8c74 <sf_gen_mcode6+0x130>
    8c60:	cmp	r9, #2
    8c64:	beq	8c88 <sf_gen_mcode6+0x144>
    8c68:	ldr	r0, [pc, #112]	; 8ce0 <sf_gen_mcode6+0x19c>
    8c6c:	add	r0, pc, r0
    8c70:	b	8c84 <sf_gen_mcode6+0x140>
    8c74:	cmp	r4, #128	; 0x80
    8c78:	beq	8c88 <sf_gen_mcode6+0x144>
    8c7c:	ldr	r0, [pc, #96]	; 8ce4 <sf_gen_mcode6+0x1a0>
    8c80:	add	r0, pc, r0
    8c84:	bl	20b8 <sf_bpf_error>
    8c88:	ldrb	r3, [sp, #14]
    8c8c:	ldrb	r2, [sp, #13]
    8c90:	mov	r1, r8
    8c94:	str	r9, [sp]
    8c98:	add	r0, r5, #8
    8c9c:	bl	8874 <gen_host6>
    8ca0:	ldr	r3, [pc, #64]	; 8ce8 <sf_gen_mcode6+0x1a4>
    8ca4:	mov	r2, #0
    8ca8:	add	r3, pc, r3
    8cac:	str	r2, [r3, #872]	; 0x368
    8cb0:	mov	r4, r0
    8cb4:	mov	r0, r6
    8cb8:	bl	f08 <freeaddrinfo@plt>
    8cbc:	mov	r0, r4
    8cc0:	add	sp, sp, #32
    8cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8cc8:	.word	0x00008386
    8ccc:	.word	0x00008377
    8cd0:	.word	0x000247d8
    8cd4:	.word	0x0000836a
    8cd8:	.word	0x00008372
    8cdc:	.word	0x00007fe0
    8ce0:	.word	0x000082dc
    8ce4:	.word	0x00007fd0
    8ce8:	.word	0x000246c0

00008cec <sf_gen_scode>:
    8cec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8cf0:	uxtb	r8, r1
    8cf4:	sub	sp, sp, #52	; 0x34
    8cf8:	cmp	r8, #4
    8cfc:	str	r1, [sp, #20]
    8d00:	beq	92e4 <sf_gen_scode+0x5f8>
    8d04:	lsr	r4, r1, #8
    8d08:	lsr	r7, r1, #16
    8d0c:	mov	r5, r0
    8d10:	uxtb	r4, r4
    8d14:	uxtb	r7, r7
    8d18:	bhi	8d48 <sf_gen_scode+0x5c>
    8d1c:	cmp	r8, #2
    8d20:	beq	8d68 <sf_gen_scode+0x7c>
    8d24:	bls	8db4 <sf_gen_scode+0xc8>
    8d28:	cmp	r4, #0
    8d2c:	beq	90ec <sf_gen_scode+0x400>
    8d30:	sub	r3, r4, #5
    8d34:	cmp	r3, #2
    8d38:	bls	90ec <sf_gen_scode+0x400>
    8d3c:	ldr	r0, [pc, #1552]	; 9354 <sf_gen_scode+0x668>
    8d40:	add	r0, pc, r0
    8d44:	b	8df0 <sf_gen_scode+0x104>
    8d48:	cmp	r8, #6
    8d4c:	beq	9324 <sf_gen_scode+0x638>
    8d50:	bcc	92f0 <sf_gen_scode+0x604>
    8d54:	cmp	r8, #7
    8d58:	beq	91d8 <sf_gen_scode+0x4ec>
    8d5c:	cmp	r8, #255	; 0xff
    8d60:	beq	9348 <sf_gen_scode+0x65c>
    8d64:	bl	f44 <abort@plt>
    8d68:	bl	9cc8 <pcap_nametonetaddr>
    8d6c:	cmp	r0, #0
    8d70:	mvnne	r1, #0
    8d74:	bne	8d90 <sf_gen_scode+0xa4>
    8d78:	ldr	r0, [pc, #1496]	; 9358 <sf_gen_scode+0x66c>
    8d7c:	mov	r1, r5
    8d80:	add	r0, pc, r0
    8d84:	bl	20b8 <sf_bpf_error>
    8d88:	lsl	r0, r0, #8
    8d8c:	lsl	r1, r1, #8
    8d90:	tst	r0, #-16777216	; 0xff000000
    8d94:	beq	8d88 <sf_gen_scode+0x9c>
    8d98:	mov	r3, #2
    8d9c:	str	r3, [sp]
    8da0:	mov	r2, r4
    8da4:	mov	r3, r7
    8da8:	bl	7020 <gen_host>
    8dac:	mov	r6, r0
    8db0:	b	8eec <sf_gen_scode+0x200>
    8db4:	cmp	r4, #1
    8db8:	bne	8f70 <sf_gen_scode+0x284>
    8dbc:	ldr	r3, [pc, #1432]	; 935c <sf_gen_scode+0x670>
    8dc0:	add	r3, pc, r3
    8dc4:	ldr	r3, [r3, #856]	; 0x358
    8dc8:	cmp	r3, #119	; 0x77
    8dcc:	beq	8e04 <sf_gen_scode+0x118>
    8dd0:	bgt	8e24 <sf_gen_scode+0x138>
    8dd4:	cmp	r3, #6
    8dd8:	beq	8f1c <sf_gen_scode+0x230>
    8ddc:	bgt	8df4 <sf_gen_scode+0x108>
    8de0:	cmp	r3, #1
    8de4:	beq	8ebc <sf_gen_scode+0x1d0>
    8de8:	ldr	r0, [pc, #1392]	; 9360 <sf_gen_scode+0x674>
    8dec:	add	r0, pc, r0
    8df0:	bl	20b8 <sf_bpf_error>
    8df4:	cmp	r3, #10
    8df8:	beq	8ef8 <sf_gen_scode+0x20c>
    8dfc:	cmp	r3, #105	; 0x69
    8e00:	bne	8de8 <sf_gen_scode+0xfc>
    8e04:	mov	r0, r5
    8e08:	bl	a06c <pcap_ether_hostton>
    8e0c:	subs	r4, r0, #0
    8e10:	bne	8f40 <sf_gen_scode+0x254>
    8e14:	ldr	r0, [pc, #1352]	; 9364 <sf_gen_scode+0x678>
    8e18:	mov	r1, r5
    8e1c:	add	r0, pc, r0
    8e20:	b	8d84 <sf_gen_scode+0x98>
    8e24:	cmp	r3, #127	; 0x7f
    8e28:	beq	8e04 <sf_gen_scode+0x118>
    8e2c:	bgt	8eac <sf_gen_scode+0x1c0>
    8e30:	cmp	r3, #122	; 0x7a
    8e34:	beq	8f4c <sf_gen_scode+0x260>
    8e38:	cmp	r3, #123	; 0x7b
    8e3c:	bne	8de8 <sf_gen_scode+0xfc>
    8e40:	ldr	r3, [pc, #1312]	; 9368 <sf_gen_scode+0x67c>
    8e44:	add	r3, pc, r3
    8e48:	ldr	r3, [r3, #892]	; 0x37c
    8e4c:	cmp	r3, #0
    8e50:	beq	8de8 <sf_gen_scode+0xfc>
    8e54:	mov	r3, #65280	; 0xff00
    8e58:	mov	r2, #8
    8e5c:	mov	r1, #4
    8e60:	mov	r0, #1
    8e64:	bl	3a28 <gen_cmp>
    8e68:	ldr	r3, [r0, #44]	; 0x2c
    8e6c:	clz	r3, r3
    8e70:	lsr	r3, r3, #5
    8e74:	str	r3, [r0, #44]	; 0x2c
    8e78:	mov	r4, r0
    8e7c:	mov	r0, r5
    8e80:	bl	a06c <pcap_ether_hostton>
    8e84:	subs	r8, r0, #0
    8e88:	beq	8ec8 <sf_gen_scode+0x1dc>
    8e8c:	mov	r1, r7
    8e90:	bl	3de8 <gen_ehostop>
    8e94:	mov	r1, r0
    8e98:	mov	r6, r0
    8e9c:	mov	r0, r4
    8ea0:	bl	2f48 <sf_gen_and>
    8ea4:	mov	r0, r8
    8ea8:	b	8ee8 <sf_gen_scode+0x1fc>
    8eac:	cmp	r3, #163	; 0xa3
    8eb0:	beq	8e04 <sf_gen_scode+0x118>
    8eb4:	cmp	r3, #192	; 0xc0
    8eb8:	b	8e00 <sf_gen_scode+0x114>
    8ebc:	bl	a06c <pcap_ether_hostton>
    8ec0:	subs	r4, r0, #0
    8ec4:	bne	8ed8 <sf_gen_scode+0x1ec>
    8ec8:	ldr	r0, [pc, #1180]	; 936c <sf_gen_scode+0x680>
    8ecc:	mov	r1, r5
    8ed0:	add	r0, pc, r0
    8ed4:	b	8d84 <sf_gen_scode+0x98>
    8ed8:	mov	r1, r7
    8edc:	bl	3de8 <gen_ehostop>
    8ee0:	mov	r6, r0
    8ee4:	mov	r0, r4
    8ee8:	bl	dc4 <free@plt>
    8eec:	mov	r0, r6
    8ef0:	add	sp, sp, #52	; 0x34
    8ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8ef8:	bl	a06c <pcap_ether_hostton>
    8efc:	subs	r4, r0, #0
    8f00:	ldreq	r0, [pc, #1128]	; 9370 <sf_gen_scode+0x684>
    8f04:	moveq	r1, r5
    8f08:	addeq	r0, pc, r0
    8f0c:	beq	8d84 <sf_gen_scode+0x98>
    8f10:	mov	r1, r7
    8f14:	bl	3bd8 <gen_fhostop>
    8f18:	b	8ee0 <sf_gen_scode+0x1f4>
    8f1c:	bl	a06c <pcap_ether_hostton>
    8f20:	subs	r4, r0, #0
    8f24:	ldreq	r0, [pc, #1096]	; 9374 <sf_gen_scode+0x688>
    8f28:	moveq	r1, r5
    8f2c:	addeq	r0, pc, r0
    8f30:	beq	8d84 <sf_gen_scode+0x98>
    8f34:	mov	r1, r7
    8f38:	bl	3c88 <gen_thostop>
    8f3c:	b	8ee0 <sf_gen_scode+0x1f4>
    8f40:	mov	r1, r7
    8f44:	bl	41f0 <gen_wlanhostop>
    8f48:	b	8ee0 <sf_gen_scode+0x1f4>
    8f4c:	bl	a06c <pcap_ether_hostton>
    8f50:	subs	r4, r0, #0
    8f54:	ldreq	r0, [pc, #1052]	; 9378 <sf_gen_scode+0x68c>
    8f58:	moveq	r1, r5
    8f5c:	addeq	r0, pc, r0
    8f60:	beq	8d84 <sf_gen_scode+0x98>
    8f64:	mov	r1, r7
    8f68:	bl	3d38 <gen_ipfchostop>
    8f6c:	b	8ee0 <sf_gen_scode+0x1f4>
    8f70:	cmp	r4, #12
    8f74:	bne	8f90 <sf_gen_scode+0x2a4>
    8f78:	bl	a12c <__pcap_nametodnaddr>
    8f7c:	str	r8, [sp]
    8f80:	mov	r3, r7
    8f84:	mov	r2, r4
    8f88:	mov	r1, #0
    8f8c:	b	8da8 <sf_gen_scode+0xbc>
    8f90:	add	fp, sp, #32
    8f94:	mov	r2, #16
    8f98:	mov	r1, #255	; 0xff
    8f9c:	mov	r0, fp
    8fa0:	bl	eb4 <memset@plt>
    8fa4:	mov	r0, r5
    8fa8:	bl	9c70 <pcap_nametoaddrinfo>
    8fac:	subs	sl, r0, #0
    8fb0:	ldreq	r0, [pc, #964]	; 937c <sf_gen_scode+0x690>
    8fb4:	moveq	r1, r5
    8fb8:	addeq	r0, pc, r0
    8fbc:	beq	8d84 <sf_gen_scode+0x98>
    8fc0:	ldr	r3, [pc, #952]	; 9380 <sf_gen_scode+0x694>
    8fc4:	mov	r9, sl
    8fc8:	add	r3, pc, r3
    8fcc:	mov	r6, #0
    8fd0:	str	sl, [r3, #872]	; 0x368
    8fd4:	ldr	r3, [r3, #944]	; 0x3b0
    8fd8:	cmp	r4, #0
    8fdc:	cmneq	r3, #1
    8fe0:	moveq	r3, #1
    8fe4:	movne	r3, #0
    8fe8:	cmp	r3, #0
    8fec:	moveq	r3, r4
    8ff0:	movne	r3, #17
    8ff4:	str	r3, [sp, #12]
    8ff8:	moveq	r3, r4
    8ffc:	movne	r3, #2
    9000:	str	r3, [sp, #8]
    9004:	ldr	r3, [r9, #4]
    9008:	cmp	r3, #2
    900c:	beq	9060 <sf_gen_scode+0x374>
    9010:	cmp	r3, #10
    9014:	beq	90b4 <sf_gen_scode+0x3c8>
    9018:	ldr	r9, [r9, #28]
    901c:	cmp	r9, #0
    9020:	bne	9004 <sf_gen_scode+0x318>
    9024:	ldr	r3, [pc, #856]	; 9384 <sf_gen_scode+0x698>
    9028:	mov	r0, sl
    902c:	add	r3, pc, r3
    9030:	str	r9, [r3, #872]	; 0x368
    9034:	bl	f08 <freeaddrinfo@plt>
    9038:	cmp	r6, #0
    903c:	bne	8eec <sf_gen_scode+0x200>
    9040:	cmp	r4, #0
    9044:	beq	90e0 <sf_gen_scode+0x3f4>
    9048:	ldr	r2, [pc, #824]	; 9388 <sf_gen_scode+0x69c>
    904c:	add	r2, pc, r2
    9050:	ldr	r0, [pc, #820]	; 938c <sf_gen_scode+0x6a0>
    9054:	mov	r1, r5
    9058:	add	r0, pc, r0
    905c:	bl	20b8 <sf_bpf_error>
    9060:	ldr	r3, [sp, #8]
    9064:	cmp	r3, #17
    9068:	beq	9018 <sf_gen_scode+0x32c>
    906c:	ldr	r3, [r9, #20]
    9070:	ldr	r2, [sp, #8]
    9074:	mvn	r1, #0
    9078:	ldr	r0, [r3, #4]
    907c:	str	r8, [sp]
    9080:	mov	r3, r7
    9084:	rev	r0, r0
    9088:	bl	7020 <gen_host>
    908c:	cmp	r6, #0
    9090:	mov	r3, r0
    9094:	beq	90ac <sf_gen_scode+0x3c0>
    9098:	mov	r1, r0
    909c:	str	r0, [sp, #16]
    90a0:	mov	r0, r6
    90a4:	bl	2fc8 <sf_gen_or>
    90a8:	ldr	r3, [sp, #16]
    90ac:	mov	r6, r3
    90b0:	b	9018 <sf_gen_scode+0x32c>
    90b4:	ldr	r3, [sp, #12]
    90b8:	cmp	r3, #2
    90bc:	beq	9018 <sf_gen_scode+0x32c>
    90c0:	ldr	r0, [r9, #20]
    90c4:	mov	r3, r7
    90c8:	str	r8, [sp]
    90cc:	ldr	r2, [sp, #12]
    90d0:	mov	r1, fp
    90d4:	add	r0, r0, #8
    90d8:	bl	8874 <gen_host6>
    90dc:	b	908c <sf_gen_scode+0x3a0>
    90e0:	ldr	r2, [pc, #680]	; 9390 <sf_gen_scode+0x6a4>
    90e4:	add	r2, pc, r2
    90e8:	b	9050 <sf_gen_scode+0x364>
    90ec:	add	r2, sp, #24
    90f0:	add	r1, sp, #32
    90f4:	mov	r0, r5
    90f8:	bl	9cdc <pcap_nametoport>
    90fc:	cmp	r0, #0
    9100:	ldreq	r0, [pc, #652]	; 9394 <sf_gen_scode+0x6a8>
    9104:	moveq	r1, r5
    9108:	addeq	r0, pc, r0
    910c:	beq	8d84 <sf_gen_scode+0x98>
    9110:	cmp	r4, #7
    9114:	bne	9150 <sf_gen_scode+0x464>
    9118:	ldr	r3, [sp, #24]
    911c:	cmp	r3, #6
    9120:	bne	9134 <sf_gen_scode+0x448>
    9124:	ldr	r0, [pc, #620]	; 9398 <sf_gen_scode+0x6ac>
    9128:	mov	r1, r5
    912c:	add	r0, pc, r0
    9130:	b	8d84 <sf_gen_scode+0x98>
    9134:	cmp	r3, #132	; 0x84
    9138:	movne	r3, #17
    913c:	bne	91d0 <sf_gen_scode+0x4e4>
    9140:	ldr	r0, [pc, #596]	; 939c <sf_gen_scode+0x6b0>
    9144:	mov	r1, r5
    9148:	add	r0, pc, r0
    914c:	b	8d84 <sf_gen_scode+0x98>
    9150:	cmp	r4, #6
    9154:	bne	91b0 <sf_gen_scode+0x4c4>
    9158:	ldr	r3, [sp, #24]
    915c:	cmp	r3, #17
    9160:	bne	9174 <sf_gen_scode+0x488>
    9164:	ldr	r0, [pc, #564]	; 93a0 <sf_gen_scode+0x6b4>
    9168:	mov	r1, r5
    916c:	add	r0, pc, r0
    9170:	b	8d84 <sf_gen_scode+0x98>
    9174:	cmp	r3, #132	; 0x84
    9178:	strne	r4, [sp, #24]
    917c:	beq	9140 <sf_gen_scode+0x454>
    9180:	mov	r2, r7
    9184:	ldr	r1, [sp, #24]
    9188:	ldr	r0, [sp, #32]
    918c:	bl	74ac <gen_port>
    9190:	mov	r2, r7
    9194:	ldr	r1, [sp, #24]
    9198:	mov	r6, r0
    919c:	ldr	r0, [sp, #32]
    91a0:	bl	7568 <gen_port6>
    91a4:	mov	r1, r6
    91a8:	bl	2fc8 <sf_gen_or>
    91ac:	b	8eec <sf_gen_scode+0x200>
    91b0:	cmp	r4, #5
    91b4:	bne	9180 <sf_gen_scode+0x494>
    91b8:	ldr	r3, [sp, #24]
    91bc:	cmp	r3, #17
    91c0:	beq	9164 <sf_gen_scode+0x478>
    91c4:	cmp	r3, #6
    91c8:	beq	9124 <sf_gen_scode+0x438>
    91cc:	mov	r3, #132	; 0x84
    91d0:	str	r3, [sp, #24]
    91d4:	b	9180 <sf_gen_scode+0x494>
    91d8:	cmp	r4, #0
    91dc:	beq	91f4 <sf_gen_scode+0x508>
    91e0:	sub	r3, r4, #5
    91e4:	cmp	r3, #2
    91e8:	ldrhi	r0, [pc, #436]	; 93a4 <sf_gen_scode+0x6b8>
    91ec:	addhi	r0, pc, r0
    91f0:	bhi	8df0 <sf_gen_scode+0x104>
    91f4:	add	r3, sp, #24
    91f8:	add	r2, sp, #32
    91fc:	add	r1, sp, #28
    9200:	mov	r0, r5
    9204:	bl	9d78 <pcap_nametoportrange>
    9208:	cmp	r0, #0
    920c:	ldreq	r0, [pc, #404]	; 93a8 <sf_gen_scode+0x6bc>
    9210:	moveq	r1, r5
    9214:	addeq	r0, pc, r0
    9218:	beq	8d84 <sf_gen_scode+0x98>
    921c:	cmp	r4, #7
    9220:	bne	925c <sf_gen_scode+0x570>
    9224:	ldr	r3, [sp, #24]
    9228:	cmp	r3, #6
    922c:	bne	9240 <sf_gen_scode+0x554>
    9230:	ldr	r0, [pc, #372]	; 93ac <sf_gen_scode+0x6c0>
    9234:	mov	r1, r5
    9238:	add	r0, pc, r0
    923c:	b	8d84 <sf_gen_scode+0x98>
    9240:	cmp	r3, #132	; 0x84
    9244:	movne	r3, #17
    9248:	bne	92dc <sf_gen_scode+0x5f0>
    924c:	ldr	r0, [pc, #348]	; 93b0 <sf_gen_scode+0x6c4>
    9250:	mov	r1, r5
    9254:	add	r0, pc, r0
    9258:	b	8d84 <sf_gen_scode+0x98>
    925c:	cmp	r4, #6
    9260:	bne	92bc <sf_gen_scode+0x5d0>
    9264:	ldr	r3, [sp, #24]
    9268:	cmp	r3, #17
    926c:	bne	9280 <sf_gen_scode+0x594>
    9270:	ldr	r0, [pc, #316]	; 93b4 <sf_gen_scode+0x6c8>
    9274:	mov	r1, r5
    9278:	add	r0, pc, r0
    927c:	b	8d84 <sf_gen_scode+0x98>
    9280:	cmp	r3, #132	; 0x84
    9284:	strne	r4, [sp, #24]
    9288:	beq	924c <sf_gen_scode+0x560>
    928c:	mov	r3, r7
    9290:	ldr	r2, [sp, #24]
    9294:	ldr	r1, [sp, #32]
    9298:	ldr	r0, [sp, #28]
    929c:	bl	7628 <gen_portrange>
    92a0:	mov	r3, r7
    92a4:	ldr	r2, [sp, #24]
    92a8:	ldr	r1, [sp, #32]
    92ac:	mov	r6, r0
    92b0:	ldr	r0, [sp, #28]
    92b4:	bl	76f8 <gen_portrange6>
    92b8:	b	91a4 <sf_gen_scode+0x4b8>
    92bc:	cmp	r4, #5
    92c0:	bne	928c <sf_gen_scode+0x5a0>
    92c4:	ldr	r3, [sp, #24]
    92c8:	cmp	r3, #17
    92cc:	beq	9270 <sf_gen_scode+0x584>
    92d0:	cmp	r3, #6
    92d4:	beq	9230 <sf_gen_scode+0x544>
    92d8:	mov	r3, #132	; 0x84
    92dc:	str	r3, [sp, #24]
    92e0:	b	928c <sf_gen_scode+0x5a0>
    92e4:	ldr	r0, [pc, #204]	; 93b8 <sf_gen_scode+0x6cc>
    92e8:	add	r0, pc, r0
    92ec:	b	8df0 <sf_gen_scode+0x104>
    92f0:	mov	r1, r4
    92f4:	bl	23e8 <lookup_proto>
    92f8:	cmp	r0, #0
    92fc:	str	r0, [sp, #24]
    9300:	blt	9314 <sf_gen_scode+0x628>
    9304:	mov	r2, r7
    9308:	mov	r1, r4
    930c:	bl	6008 <gen_proto>
    9310:	b	8dac <sf_gen_scode+0xc0>
    9314:	ldr	r0, [pc, #160]	; 93bc <sf_gen_scode+0x6d0>
    9318:	mov	r1, r5
    931c:	add	r0, pc, r0
    9320:	b	8d84 <sf_gen_scode+0x98>
    9324:	mov	r1, r4
    9328:	bl	23e8 <lookup_proto>
    932c:	cmp	r0, #0
    9330:	str	r0, [sp, #24]
    9334:	blt	9314 <sf_gen_scode+0x628>
    9338:	mov	r2, r7
    933c:	mov	r1, r4
    9340:	bl	77cc <gen_protochain>
    9344:	b	8dac <sf_gen_scode+0xc0>
    9348:	ldr	r0, [pc, #112]	; 93c0 <sf_gen_scode+0x6d4>
    934c:	add	r0, pc, r0
    9350:	b	8df0 <sf_gen_scode+0x104>
    9354:	.word	0x00007fba
    9358:	.word	0x0000820d
    935c:	.word	0x000245a8
    9360:	.word	0x0000823b
    9364:	.word	0x000081d2
    9368:	.word	0x00024524
    936c:	.word	0x000080d2
    9370:	.word	0x000080b2
    9374:	.word	0x000080a5
    9378:	.word	0x000080ab
    937c:	.word	0x000080c9
    9380:	.word	0x000243a0
    9384:	.word	0x0002433c
    9388:	.word	0x00007f23
    938c:	.word	0x0000803b
    9390:	.word	0x00006d27
    9394:	.word	0x00007f9f
    9398:	.word	0x00007f8d
    939c:	.word	0x00007f82
    93a0:	.word	0x00007f70
    93a4:	.word	0x00007b2a
    93a8:	.word	0x00007ed9
    93ac:	.word	0x00007ed0
    93b0:	.word	0x00007ece
    93b4:	.word	0x00007ec5
    93b8:	.word	0x00007e6f
    93bc:	.word	0x00007e69
    93c0:	.word	0x00006c65

000093c4 <sf_gen_atmtype_abbrev>:
    93c4:	sub	r0, r0, #22
    93c8:	push	{r4, r5, r6, lr}
    93cc:	cmp	r0, #9
    93d0:	addls	pc, pc, r0, lsl #2
    93d4:	b	9664 <sf_gen_atmtype_abbrev+0x2a0>
    93d8:	b	9400 <sf_gen_atmtype_abbrev+0x3c>
    93dc:	b	9464 <sf_gen_atmtype_abbrev+0xa0>
    93e0:	b	94a8 <sf_gen_atmtype_abbrev+0xe4>
    93e4:	b	94ec <sf_gen_atmtype_abbrev+0x128>
    93e8:	b	9530 <sf_gen_atmtype_abbrev+0x16c>
    93ec:	b	9574 <sf_gen_atmtype_abbrev+0x1b0>
    93f0:	b	9664 <sf_gen_atmtype_abbrev+0x2a0>
    93f4:	b	9664 <sf_gen_atmtype_abbrev+0x2a0>
    93f8:	b	95b8 <sf_gen_atmtype_abbrev+0x1f4>
    93fc:	b	9624 <sf_gen_atmtype_abbrev+0x260>
    9400:	ldr	r3, [pc, #608]	; 9668 <sf_gen_atmtype_abbrev+0x2a4>
    9404:	add	r3, pc, r3
    9408:	ldr	r3, [r3, #888]	; 0x378
    940c:	cmp	r3, #0
    9410:	bne	9420 <sf_gen_atmtype_abbrev+0x5c>
    9414:	ldr	r0, [pc, #592]	; 966c <sf_gen_atmtype_abbrev+0x2a8>
    9418:	add	r0, pc, r0
    941c:	bl	20b8 <sf_bpf_error>
    9420:	mov	r3, #0
    9424:	mov	r1, r3
    9428:	mov	r2, #16
    942c:	mov	r0, #51	; 0x33
    9430:	bl	5448 <sf_gen_atmfield_code>
    9434:	mov	r3, #0
    9438:	mov	r2, #16
    943c:	mov	r1, #1
    9440:	mov	r5, r0
    9444:	mov	r0, #52	; 0x34
    9448:	bl	5448 <sf_gen_atmfield_code>
    944c:	mov	r4, r0
    9450:	mov	r1, r0
    9454:	mov	r0, r5
    9458:	bl	2f48 <sf_gen_and>
    945c:	mov	r0, r4
    9460:	pop	{r4, r5, r6, pc}
    9464:	ldr	r3, [pc, #516]	; 9670 <sf_gen_atmtype_abbrev+0x2ac>
    9468:	add	r3, pc, r3
    946c:	ldr	r3, [r3, #888]	; 0x378
    9470:	cmp	r3, #0
    9474:	ldreq	r0, [pc, #504]	; 9674 <sf_gen_atmtype_abbrev+0x2b0>
    9478:	addeq	r0, pc, r0
    947c:	beq	941c <sf_gen_atmtype_abbrev+0x58>
    9480:	mov	r3, #0
    9484:	mov	r1, r3
    9488:	mov	r2, #16
    948c:	mov	r0, #51	; 0x33
    9490:	bl	5448 <sf_gen_atmfield_code>
    9494:	mov	r3, #0
    9498:	mov	r2, #16
    949c:	mov	r1, #2
    94a0:	mov	r5, r0
    94a4:	b	9444 <sf_gen_atmtype_abbrev+0x80>
    94a8:	ldr	r3, [pc, #456]	; 9678 <sf_gen_atmtype_abbrev+0x2b4>
    94ac:	add	r3, pc, r3
    94b0:	ldr	r3, [r3, #888]	; 0x378
    94b4:	cmp	r3, #0
    94b8:	ldreq	r0, [pc, #444]	; 967c <sf_gen_atmtype_abbrev+0x2b8>
    94bc:	addeq	r0, pc, r0
    94c0:	beq	941c <sf_gen_atmtype_abbrev+0x58>
    94c4:	mov	r3, #0
    94c8:	mov	r1, r3
    94cc:	mov	r2, #16
    94d0:	mov	r0, #51	; 0x33
    94d4:	bl	5448 <sf_gen_atmfield_code>
    94d8:	mov	r3, #0
    94dc:	mov	r2, #16
    94e0:	mov	r1, #3
    94e4:	mov	r5, r0
    94e8:	b	9444 <sf_gen_atmtype_abbrev+0x80>
    94ec:	ldr	r3, [pc, #396]	; 9680 <sf_gen_atmtype_abbrev+0x2bc>
    94f0:	add	r3, pc, r3
    94f4:	ldr	r3, [r3, #888]	; 0x378
    94f8:	cmp	r3, #0
    94fc:	ldreq	r0, [pc, #384]	; 9684 <sf_gen_atmtype_abbrev+0x2c0>
    9500:	addeq	r0, pc, r0
    9504:	beq	941c <sf_gen_atmtype_abbrev+0x58>
    9508:	mov	r3, #0
    950c:	mov	r1, r3
    9510:	mov	r2, #16
    9514:	mov	r0, #51	; 0x33
    9518:	bl	5448 <sf_gen_atmfield_code>
    951c:	mov	r3, #0
    9520:	mov	r2, #16
    9524:	mov	r1, #4
    9528:	mov	r5, r0
    952c:	b	9444 <sf_gen_atmtype_abbrev+0x80>
    9530:	ldr	r3, [pc, #336]	; 9688 <sf_gen_atmtype_abbrev+0x2c4>
    9534:	add	r3, pc, r3
    9538:	ldr	r3, [r3, #888]	; 0x378
    953c:	cmp	r3, #0
    9540:	ldreq	r0, [pc, #324]	; 968c <sf_gen_atmtype_abbrev+0x2c8>
    9544:	addeq	r0, pc, r0
    9548:	beq	941c <sf_gen_atmtype_abbrev+0x58>
    954c:	mov	r3, #0
    9550:	mov	r1, r3
    9554:	mov	r2, #16
    9558:	mov	r0, #51	; 0x33
    955c:	bl	5448 <sf_gen_atmfield_code>
    9560:	mov	r3, #0
    9564:	mov	r2, #16
    9568:	mov	r1, #5
    956c:	mov	r5, r0
    9570:	b	9444 <sf_gen_atmtype_abbrev+0x80>
    9574:	ldr	r3, [pc, #276]	; 9690 <sf_gen_atmtype_abbrev+0x2cc>
    9578:	add	r3, pc, r3
    957c:	ldr	r3, [r3, #888]	; 0x378
    9580:	cmp	r3, #0
    9584:	ldreq	r0, [pc, #264]	; 9694 <sf_gen_atmtype_abbrev+0x2d0>
    9588:	addeq	r0, pc, r0
    958c:	beq	941c <sf_gen_atmtype_abbrev+0x58>
    9590:	mov	r3, #0
    9594:	mov	r1, r3
    9598:	mov	r2, #16
    959c:	mov	r0, #51	; 0x33
    95a0:	bl	5448 <sf_gen_atmfield_code>
    95a4:	mov	r2, #16
    95a8:	mov	r3, #0
    95ac:	mov	r1, r2
    95b0:	mov	r5, r0
    95b4:	b	9444 <sf_gen_atmtype_abbrev+0x80>
    95b8:	ldr	r5, [pc, #216]	; 9698 <sf_gen_atmtype_abbrev+0x2d4>
    95bc:	add	r5, pc, r5
    95c0:	ldr	r3, [r5, #888]	; 0x378
    95c4:	cmp	r3, #0
    95c8:	ldreq	r0, [pc, #204]	; 969c <sf_gen_atmtype_abbrev+0x2d8>
    95cc:	addeq	r0, pc, r0
    95d0:	beq	941c <sf_gen_atmtype_abbrev+0x58>
    95d4:	mov	r3, #0
    95d8:	mov	r2, #16
    95dc:	mov	r1, #1
    95e0:	mov	r0, #53	; 0x35
    95e4:	bl	5448 <sf_gen_atmfield_code>
    95e8:	mov	r3, #1
    95ec:	str	r3, [r5, #892]	; 0x37c
    95f0:	ldr	r3, [r5, #908]	; 0x38c
    95f4:	add	r2, r3, #2
    95f8:	str	r2, [r5, #884]	; 0x374
    95fc:	add	r2, r3, #14
    9600:	add	r3, r3, #16
    9604:	str	r3, [r5, #940]	; 0x3ac
    9608:	mov	r3, #0
    960c:	str	r3, [r5, #948]	; 0x3b4
    9610:	mov	r3, #3
    9614:	str	r2, [r5, #944]	; 0x3b0
    9618:	str	r3, [r5, #952]	; 0x3b8
    961c:	mov	r4, r0
    9620:	b	945c <sf_gen_atmtype_abbrev+0x98>
    9624:	ldr	r5, [pc, #116]	; 96a0 <sf_gen_atmtype_abbrev+0x2dc>
    9628:	add	r5, pc, r5
    962c:	ldr	r3, [r5, #888]	; 0x378
    9630:	cmp	r3, #0
    9634:	ldreq	r0, [pc, #104]	; 96a4 <sf_gen_atmtype_abbrev+0x2e0>
    9638:	addeq	r0, pc, r0
    963c:	beq	941c <sf_gen_atmtype_abbrev+0x58>
    9640:	mov	r3, #0
    9644:	mov	r2, #16
    9648:	mov	r1, #2
    964c:	mov	r0, #53	; 0x35
    9650:	bl	5448 <sf_gen_atmfield_code>
    9654:	mov	r3, #0
    9658:	str	r3, [r5, #892]	; 0x37c
    965c:	mov	r4, r0
    9660:	b	945c <sf_gen_atmtype_abbrev+0x98>
    9664:	bl	f44 <abort@plt>
    9668:	.word	0x00023f64
    966c:	.word	0x00007d82
    9670:	.word	0x00023f00
    9674:	.word	0x00007d44
    9678:	.word	0x00023ebc
    967c:	.word	0x00007d20
    9680:	.word	0x00023e78
    9684:	.word	0x00007cff
    9688:	.word	0x00023e34
    968c:	.word	0x00007cde
    9690:	.word	0x00023df0
    9694:	.word	0x00007cb9
    9698:	.word	0x00023dac
    969c:	.word	0x00007c97
    96a0:	.word	0x00023d40
    96a4:	.word	0x00007c4c

000096a8 <sf_gen_mtp2type_abbrev>:
    96a8:	cmp	r0, #23
    96ac:	push	{r4, r5, r6, r7, lr}
    96b0:	sub	sp, sp, #20
    96b4:	beq	971c <sf_gen_mtp2type_abbrev+0x74>
    96b8:	cmp	r0, #24
    96bc:	beq	97ac <sf_gen_mtp2type_abbrev+0x104>
    96c0:	cmp	r0, #22
    96c4:	bne	97f4 <sf_gen_mtp2type_abbrev+0x14c>
    96c8:	ldr	r1, [pc, #296]	; 97f8 <sf_gen_mtp2type_abbrev+0x150>
    96cc:	add	r1, pc, r1
    96d0:	ldr	r3, [r1, #856]	; 0x358
    96d4:	sub	r0, r3, #139	; 0x8b
    96d8:	cmp	r3, #197	; 0xc5
    96dc:	cmpne	r0, #1
    96e0:	movhi	r0, #1
    96e4:	movls	r0, #0
    96e8:	bls	96f8 <sf_gen_mtp2type_abbrev+0x50>
    96ec:	ldr	r0, [pc, #264]	; 97fc <sf_gen_mtp2type_abbrev+0x154>
    96f0:	add	r0, pc, r0
    96f4:	bl	20b8 <sf_bpf_error>
    96f8:	mov	r3, #63	; 0x3f
    96fc:	mov	r2, #16
    9700:	str	r0, [sp, #8]
    9704:	str	r0, [sp, #4]
    9708:	str	r2, [sp]
    970c:	ldr	r1, [r1, #916]	; 0x394
    9710:	bl	38d0 <gen_ncmp>
    9714:	mov	r5, r0
    9718:	b	97a0 <sf_gen_mtp2type_abbrev+0xf8>
    971c:	ldr	r2, [pc, #220]	; 9800 <sf_gen_mtp2type_abbrev+0x158>
    9720:	add	r2, pc, r2
    9724:	ldr	r3, [r2, #856]	; 0x358
    9728:	sub	r4, r3, #139	; 0x8b
    972c:	cmp	r3, #197	; 0xc5
    9730:	cmpne	r4, #1
    9734:	movhi	r4, #1
    9738:	movls	r4, #0
    973c:	ldrhi	r0, [pc, #192]	; 9804 <sf_gen_mtp2type_abbrev+0x15c>
    9740:	addhi	r0, pc, r0
    9744:	bhi	96f4 <sf_gen_mtp2type_abbrev+0x4c>
    9748:	ldr	r6, [r2, #916]	; 0x394
    974c:	mov	r1, #1
    9750:	mov	r3, #2
    9754:	mov	r7, #32
    9758:	stmib	sp, {r1, r3}
    975c:	mov	r2, #16
    9760:	mov	r3, #63	; 0x3f
    9764:	mov	r1, r6
    9768:	str	r7, [sp]
    976c:	mov	r0, r4
    9770:	bl	38d0 <gen_ncmp>
    9774:	mov	r1, r6
    9778:	str	r4, [sp, #8]
    977c:	str	r4, [sp, #4]
    9780:	str	r7, [sp]
    9784:	mov	r3, #63	; 0x3f
    9788:	mov	r2, #16
    978c:	mov	r5, r0
    9790:	mov	r0, r4
    9794:	bl	38d0 <gen_ncmp>
    9798:	mov	r1, r5
    979c:	bl	2f48 <sf_gen_and>
    97a0:	mov	r0, r5
    97a4:	add	sp, sp, #20
    97a8:	pop	{r4, r5, r6, r7, pc}
    97ac:	ldr	r1, [pc, #84]	; 9808 <sf_gen_mtp2type_abbrev+0x160>
    97b0:	add	r1, pc, r1
    97b4:	ldr	r3, [r1, #856]	; 0x358
    97b8:	sub	r0, r3, #139	; 0x8b
    97bc:	cmp	r3, #197	; 0xc5
    97c0:	cmpne	r0, #1
    97c4:	movhi	r0, #1
    97c8:	movls	r0, #0
    97cc:	ldrhi	r0, [pc, #56]	; 980c <sf_gen_mtp2type_abbrev+0x164>
    97d0:	addhi	r0, pc, r0
    97d4:	bhi	96f4 <sf_gen_mtp2type_abbrev+0x4c>
    97d8:	mov	r3, #2
    97dc:	mov	r2, #16
    97e0:	stmib	sp, {r0, r3}
    97e4:	mov	r3, #32
    97e8:	str	r3, [sp]
    97ec:	mov	r3, #63	; 0x3f
    97f0:	b	970c <sf_gen_mtp2type_abbrev+0x64>
    97f4:	bl	f44 <abort@plt>
    97f8:	.word	0x00023c9c
    97fc:	.word	0x00007bb4
    9800:	.word	0x00023c48
    9804:	.word	0x00007b82
    9808:	.word	0x00023bb8
    980c:	.word	0x00007b10

00009810 <sf_gen_mtp3field_code>:
    9810:	push	{r0, r1, r2, r3, r4, lr}
    9814:	sub	r0, r0, #1
    9818:	cmp	r0, #3
    981c:	addls	pc, pc, r0, lsl #2
    9820:	b	997c <sf_gen_mtp3field_code+0x16c>
    9824:	b	9834 <sf_gen_mtp3field_code+0x24>
    9828:	b	988c <sf_gen_mtp3field_code+0x7c>
    982c:	b	98e8 <sf_gen_mtp3field_code+0xd8>
    9830:	b	9938 <sf_gen_mtp3field_code+0x128>
    9834:	ldr	r0, [pc, #324]	; 9980 <sf_gen_mtp3field_code+0x170>
    9838:	add	r0, pc, r0
    983c:	ldr	r0, [r0, #920]	; 0x398
    9840:	cmn	r0, #1
    9844:	bne	9854 <sf_gen_mtp3field_code+0x44>
    9848:	ldr	r0, [pc, #308]	; 9984 <sf_gen_mtp3field_code+0x174>
    984c:	add	r0, pc, r0
    9850:	bl	20b8 <sf_bpf_error>
    9854:	cmp	r1, #255	; 0xff
    9858:	bls	9868 <sf_gen_mtp3field_code+0x58>
    985c:	ldr	r0, [pc, #292]	; 9988 <sf_gen_mtp3field_code+0x178>
    9860:	add	r0, pc, r0
    9864:	bl	20b8 <sf_bpf_error>
    9868:	stm	sp, {r2, r3}
    986c:	str	r1, [sp, #8]
    9870:	mvn	r3, #0
    9874:	mov	r2, #16
    9878:	mov	r1, r0
    987c:	mov	r0, #0
    9880:	bl	38d0 <gen_ncmp>
    9884:	add	sp, sp, #20
    9888:	pop	{pc}		; (ldr pc, [sp], #4)
    988c:	ldr	r0, [pc, #248]	; 998c <sf_gen_mtp3field_code+0x17c>
    9890:	add	r0, pc, r0
    9894:	ldr	lr, [r0, #924]	; 0x39c
    9898:	cmn	lr, #1
    989c:	ldreq	r0, [pc, #236]	; 9990 <sf_gen_mtp3field_code+0x180>
    98a0:	addeq	r0, pc, r0
    98a4:	beq	9850 <sf_gen_mtp3field_code+0x40>
    98a8:	cmp	r1, #16384	; 0x4000
    98ac:	ldrcs	r0, [pc, #224]	; 9994 <sf_gen_mtp3field_code+0x184>
    98b0:	addcs	r0, pc, r0
    98b4:	bcs	9864 <sf_gen_mtp3field_code+0x54>
    98b8:	lsl	ip, r1, #6
    98bc:	lsl	r0, r1, #22
    98c0:	and	ip, ip, #65280	; 0xff00
    98c4:	orr	ip, ip, r1, lsr #10
    98c8:	and	r0, r0, #12582912	; 0xc00000
    98cc:	add	r0, r0, ip
    98d0:	stm	sp, {r2, r3}
    98d4:	str	r0, [sp, #8]
    98d8:	ldr	r3, [pc, #184]	; 9998 <sf_gen_mtp3field_code+0x188>
    98dc:	mov	r2, #0
    98e0:	mov	r1, lr
    98e4:	b	987c <sf_gen_mtp3field_code+0x6c>
    98e8:	ldr	r0, [pc, #172]	; 999c <sf_gen_mtp3field_code+0x18c>
    98ec:	add	r0, pc, r0
    98f0:	ldr	ip, [r0, #928]	; 0x3a0
    98f4:	cmn	ip, #1
    98f8:	ldreq	r0, [pc, #160]	; 99a0 <sf_gen_mtp3field_code+0x190>
    98fc:	addeq	r0, pc, r0
    9900:	beq	9850 <sf_gen_mtp3field_code+0x40>
    9904:	cmp	r1, #16384	; 0x4000
    9908:	ldrcs	r0, [pc, #148]	; 99a4 <sf_gen_mtp3field_code+0x194>
    990c:	addcs	r0, pc, r0
    9910:	bcs	9864 <sf_gen_mtp3field_code+0x54>
    9914:	stm	sp, {r2, r3}
    9918:	lsl	r0, r1, #8
    991c:	ldr	r3, [pc, #132]	; 99a8 <sf_gen_mtp3field_code+0x198>
    9920:	and	r0, r0, #4128768	; 0x3f0000
    9924:	mov	r2, #0
    9928:	add	r0, r0, r1, lsl #24
    992c:	str	r0, [sp, #8]
    9930:	mov	r1, ip
    9934:	b	987c <sf_gen_mtp3field_code+0x6c>
    9938:	ldr	r0, [pc, #108]	; 99ac <sf_gen_mtp3field_code+0x19c>
    993c:	add	r0, pc, r0
    9940:	ldr	ip, [r0, #932]	; 0x3a4
    9944:	cmn	ip, #1
    9948:	ldreq	r0, [pc, #96]	; 99b0 <sf_gen_mtp3field_code+0x1a0>
    994c:	addeq	r0, pc, r0
    9950:	beq	9850 <sf_gen_mtp3field_code+0x40>
    9954:	cmp	r1, #15
    9958:	ldrhi	r0, [pc, #84]	; 99b4 <sf_gen_mtp3field_code+0x1a4>
    995c:	addhi	r0, pc, r0
    9960:	bhi	9864 <sf_gen_mtp3field_code+0x54>
    9964:	lsl	r0, r1, #4
    9968:	stm	sp, {r2, r3}
    996c:	str	r0, [sp, #8]
    9970:	mov	r3, #240	; 0xf0
    9974:	mov	r2, #16
    9978:	b	9930 <sf_gen_mtp3field_code+0x120>
    997c:	bl	f44 <abort@plt>
    9980:	.word	0x00023b30
    9984:	.word	0x00007ab1
    9988:	.word	0x00007ab9
    998c:	.word	0x00023ad8
    9990:	.word	0x00007a9f
    9994:	.word	0x00007aab
    9998:	.word	0x00c0ff0f
    999c:	.word	0x00023a7c
    99a0:	.word	0x00007a87
    99a4:	.word	0x00007a93
    99a8:	.word	0xff3f0000
    99ac:	.word	0x00023a2c
    99b0:	.word	0x00007a7b
    99b4:	.word	0x00007a87

000099b8 <sf_gen_atmmulti_abbrev>:
    99b8:	ldr	r3, [pc, #552]	; 9be8 <sf_gen_atmmulti_abbrev+0x230>
    99bc:	cmp	r0, #29
    99c0:	add	r3, pc, r3
    99c4:	push	{r4, r5, r6, lr}
    99c8:	ldr	r3, [r3, #888]	; 0x378
    99cc:	beq	9a18 <sf_gen_atmmulti_abbrev+0x60>
    99d0:	bgt	99e0 <sf_gen_atmmulti_abbrev+0x28>
    99d4:	cmp	r0, #28
    99d8:	beq	9a04 <sf_gen_atmmulti_abbrev+0x4c>
    99dc:	bl	f44 <abort@plt>
    99e0:	cmp	r0, #70	; 0x46
    99e4:	beq	9a88 <sf_gen_atmmulti_abbrev+0xd0>
    99e8:	cmp	r0, #71	; 0x47
    99ec:	bne	99dc <sf_gen_atmmulti_abbrev+0x24>
    99f0:	cmp	r3, #0
    99f4:	bne	9b50 <sf_gen_atmmulti_abbrev+0x198>
    99f8:	ldr	r0, [pc, #492]	; 9bec <sf_gen_atmmulti_abbrev+0x234>
    99fc:	add	r0, pc, r0
    9a00:	b	9a14 <sf_gen_atmmulti_abbrev+0x5c>
    9a04:	cmp	r3, #0
    9a08:	bne	9a18 <sf_gen_atmmulti_abbrev+0x60>
    9a0c:	ldr	r0, [pc, #476]	; 9bf0 <sf_gen_atmmulti_abbrev+0x238>
    9a10:	add	r0, pc, r0
    9a14:	bl	20b8 <sf_bpf_error>
    9a18:	cmp	r3, #0
    9a1c:	ldreq	r0, [pc, #464]	; 9bf4 <sf_gen_atmmulti_abbrev+0x23c>
    9a20:	addeq	r0, pc, r0
    9a24:	beq	9a14 <sf_gen_atmmulti_abbrev+0x5c>
    9a28:	mov	r3, #0
    9a2c:	mov	r2, #16
    9a30:	mov	r1, #3
    9a34:	mov	r0, #52	; 0x34
    9a38:	bl	5448 <sf_gen_atmfield_code>
    9a3c:	mov	r3, #0
    9a40:	mov	r2, #16
    9a44:	mov	r1, #4
    9a48:	mov	r5, r0
    9a4c:	mov	r0, #52	; 0x34
    9a50:	bl	5448 <sf_gen_atmfield_code>
    9a54:	mov	r1, r0
    9a58:	mov	r4, r0
    9a5c:	mov	r0, r5
    9a60:	bl	2fc8 <sf_gen_or>
    9a64:	mov	r3, #0
    9a68:	mov	r2, #16
    9a6c:	mov	r1, r3
    9a70:	mov	r0, #51	; 0x33
    9a74:	bl	5448 <sf_gen_atmfield_code>
    9a78:	mov	r1, r4
    9a7c:	bl	2f48 <sf_gen_and>
    9a80:	mov	r0, r4
    9a84:	pop	{r4, r5, r6, pc}
    9a88:	cmp	r3, #0
    9a8c:	ldreq	r0, [pc, #356]	; 9bf8 <sf_gen_atmmulti_abbrev+0x240>
    9a90:	addeq	r0, pc, r0
    9a94:	beq	9a14 <sf_gen_atmmulti_abbrev+0x5c>
    9a98:	mov	r3, #0
    9a9c:	mov	r2, #16
    9aa0:	mov	r1, #5
    9aa4:	mov	r0, #54	; 0x36
    9aa8:	bl	5448 <sf_gen_atmfield_code>
    9aac:	mov	r3, #0
    9ab0:	mov	r2, #16
    9ab4:	mov	r1, #2
    9ab8:	mov	r5, r0
    9abc:	mov	r0, #54	; 0x36
    9ac0:	bl	5448 <sf_gen_atmfield_code>
    9ac4:	mov	r4, r0
    9ac8:	mov	r1, r0
    9acc:	mov	r0, r5
    9ad0:	bl	2fc8 <sf_gen_or>
    9ad4:	mov	r3, #0
    9ad8:	mov	r2, #16
    9adc:	mov	r1, #7
    9ae0:	mov	r0, #54	; 0x36
    9ae4:	bl	5448 <sf_gen_atmfield_code>
    9ae8:	mov	r1, r4
    9aec:	bl	2fc8 <sf_gen_or>
    9af0:	mov	r3, #0
    9af4:	mov	r2, #16
    9af8:	mov	r1, #15
    9afc:	mov	r0, #54	; 0x36
    9b00:	bl	5448 <sf_gen_atmfield_code>
    9b04:	mov	r1, r4
    9b08:	bl	2fc8 <sf_gen_or>
    9b0c:	mov	r3, #0
    9b10:	mov	r2, #16
    9b14:	mov	r1, #77	; 0x4d
    9b18:	mov	r0, #54	; 0x36
    9b1c:	bl	5448 <sf_gen_atmfield_code>
    9b20:	mov	r1, r4
    9b24:	bl	2fc8 <sf_gen_or>
    9b28:	mov	r3, #0
    9b2c:	mov	r2, #16
    9b30:	mov	r1, #90	; 0x5a
    9b34:	mov	r0, #54	; 0x36
    9b38:	bl	5448 <sf_gen_atmfield_code>
    9b3c:	mov	r1, r4
    9b40:	bl	2fc8 <sf_gen_or>
    9b44:	mov	r0, #26
    9b48:	bl	93c4 <sf_gen_atmtype_abbrev>
    9b4c:	b	9a78 <sf_gen_atmmulti_abbrev+0xc0>
    9b50:	mov	r3, #0
    9b54:	mov	r2, #16
    9b58:	mov	r1, #5
    9b5c:	mov	r0, #54	; 0x36
    9b60:	bl	5448 <sf_gen_atmfield_code>
    9b64:	mov	r3, #0
    9b68:	mov	r2, #16
    9b6c:	mov	r1, #2
    9b70:	mov	r5, r0
    9b74:	mov	r0, #54	; 0x36
    9b78:	bl	5448 <sf_gen_atmfield_code>
    9b7c:	mov	r4, r0
    9b80:	mov	r1, r0
    9b84:	mov	r0, r5
    9b88:	bl	2fc8 <sf_gen_or>
    9b8c:	mov	r3, #0
    9b90:	mov	r2, #16
    9b94:	mov	r1, #7
    9b98:	mov	r0, #54	; 0x36
    9b9c:	bl	5448 <sf_gen_atmfield_code>
    9ba0:	mov	r1, r4
    9ba4:	bl	2fc8 <sf_gen_or>
    9ba8:	mov	r3, #0
    9bac:	mov	r2, #16
    9bb0:	mov	r1, #77	; 0x4d
    9bb4:	mov	r0, #54	; 0x36
    9bb8:	bl	5448 <sf_gen_atmfield_code>
    9bbc:	mov	r1, r4
    9bc0:	bl	2fc8 <sf_gen_or>
    9bc4:	mov	r3, #0
    9bc8:	mov	r2, #16
    9bcc:	mov	r1, #90	; 0x5a
    9bd0:	mov	r0, #54	; 0x36
    9bd4:	bl	5448 <sf_gen_atmfield_code>
    9bd8:	mov	r1, r4
    9bdc:	bl	2fc8 <sf_gen_or>
    9be0:	mov	r0, #22
    9be4:	b	9b48 <sf_gen_atmmulti_abbrev+0x190>
    9be8:	.word	0x000239a8
    9bec:	.word	0x00007a75
    9bf0:	.word	0x000079f8
    9bf4:	.word	0x00007a08
    9bf8:	.word	0x000079ba

00009bfc <xdtoi>:
    9bfc:	push	{r4, lr}
    9c00:	mov	r4, r0
    9c04:	bl	e60 <__ctype_b_loc@plt>
    9c08:	lsl	r3, r4, #1
    9c0c:	ldr	r2, [r0]
    9c10:	ldrh	r3, [r2, r3]
    9c14:	tst	r3, #2048	; 0x800
    9c18:	beq	9c24 <xdtoi+0x28>
    9c1c:	sub	r0, r4, #48	; 0x30
    9c20:	pop	{r4, pc}
    9c24:	tst	r3, #512	; 0x200
    9c28:	subne	r0, r4, #87	; 0x57
    9c2c:	subeq	r0, r4, #55	; 0x37
    9c30:	pop	{r4, pc}

00009c34 <pcap_nametoaddr>:
    9c34:	push	{r4, lr}
    9c38:	bl	f2c <gethostbyname@plt>
    9c3c:	cmp	r0, #0
    9c40:	ldrne	r3, [r0, #16]
    9c44:	subne	r3, r3, #4
    9c48:	bne	9c5c <pcap_nametoaddr+0x28>
    9c4c:	pop	{r4, pc}
    9c50:	ldr	r1, [r2]
    9c54:	rev	r1, r1
    9c58:	str	r1, [r2]
    9c5c:	ldr	r2, [r3, #4]!
    9c60:	cmp	r2, #0
    9c64:	bne	9c50 <pcap_nametoaddr+0x1c>
    9c68:	ldr	r0, [r0, #16]
    9c6c:	pop	{r4, pc}

00009c70 <pcap_nametoaddrinfo>:
    9c70:	push	{r4, r5, lr}
    9c74:	sub	sp, sp, #44	; 0x2c
    9c78:	add	r4, sp, #8
    9c7c:	mov	r5, r0
    9c80:	mov	r2, #32
    9c84:	mov	r1, #0
    9c88:	mov	r0, r4
    9c8c:	bl	eb4 <memset@plt>
    9c90:	mov	r3, #1
    9c94:	str	r3, [sp, #16]
    9c98:	mov	r3, #6
    9c9c:	str	r3, [sp, #20]
    9ca0:	mov	r2, r4
    9ca4:	add	r3, sp, #4
    9ca8:	mov	r1, #0
    9cac:	mov	r0, r5
    9cb0:	bl	f14 <getaddrinfo@plt>
    9cb4:	cmp	r0, #0
    9cb8:	movne	r0, #0
    9cbc:	ldreq	r0, [sp, #4]
    9cc0:	add	sp, sp, #44	; 0x2c
    9cc4:	pop	{r4, r5, pc}

00009cc8 <pcap_nametonetaddr>:
    9cc8:	push	{r4, lr}
    9ccc:	bl	dd0 <getnetbyname@plt>
    9cd0:	cmp	r0, #0
    9cd4:	ldrne	r0, [r0, #12]
    9cd8:	pop	{r4, pc}

00009cdc <pcap_nametoport>:
    9cdc:	push	{r4, r5, r6, r7, r8, lr}
    9ce0:	mov	r6, r1
    9ce4:	ldr	r1, [pc, #132]	; 9d70 <pcap_nametoport+0x94>
    9ce8:	mov	r7, r0
    9cec:	add	r1, pc, r1
    9cf0:	mov	r5, r2
    9cf4:	bl	ea8 <getservbyname@plt>
    9cf8:	cmp	r0, #0
    9cfc:	mvneq	r4, #0
    9d00:	ldrne	r4, [r0, #8]
    9d04:	rev16ne	r4, r4
    9d08:	uxthne	r4, r4
    9d0c:	ldr	r1, [pc, #96]	; 9d74 <pcap_nametoport+0x98>
    9d10:	mov	r0, r7
    9d14:	add	r1, pc, r1
    9d18:	bl	ea8 <getservbyname@plt>
    9d1c:	cmp	r0, #0
    9d20:	beq	9d60 <pcap_nametoport+0x84>
    9d24:	ldr	r3, [r0, #8]
    9d28:	cmn	r4, #1
    9d2c:	rev16	r3, r3
    9d30:	uxth	r3, r3
    9d34:	streq	r3, [r6]
    9d38:	moveq	r3, #17
    9d3c:	beq	9d54 <pcap_nametoport+0x78>
    9d40:	cmp	r4, r3
    9d44:	str	r4, [r6]
    9d48:	mvneq	r3, #0
    9d4c:	beq	9d54 <pcap_nametoport+0x78>
    9d50:	mov	r3, #6
    9d54:	str	r3, [r5]
    9d58:	mov	r0, #1
    9d5c:	pop	{r4, r5, r6, r7, r8, pc}
    9d60:	cmn	r4, #1
    9d64:	strne	r4, [r6]
    9d68:	bne	9d50 <pcap_nametoport+0x74>
    9d6c:	pop	{r4, r5, r6, r7, r8, pc}
    9d70:	.word	0x00007432
    9d74:	.word	0x0000743f

00009d78 <pcap_nametoportrange>:
    9d78:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    9d7c:	mov	r4, r1
    9d80:	ldr	r1, [pc, #212]	; 9e5c <pcap_nametoportrange+0xe4>
    9d84:	mov	r8, r2
    9d88:	mov	r5, r3
    9d8c:	mov	r2, sp
    9d90:	add	r3, sp, #4
    9d94:	add	r1, pc, r1
    9d98:	mov	r6, r0
    9d9c:	bl	ee4 <sscanf@plt>
    9da0:	cmp	r0, #2
    9da4:	beq	9e48 <pcap_nametoportrange+0xd0>
    9da8:	mov	r0, r6
    9dac:	bl	df4 <strdup@plt>
    9db0:	subs	r6, r0, #0
    9db4:	moveq	r4, r6
    9db8:	beq	9dd8 <pcap_nametoportrange+0x60>
    9dbc:	mov	r1, #45	; 0x2d
    9dc0:	bl	e84 <strchr@plt>
    9dc4:	subs	r7, r0, #0
    9dc8:	bne	9de4 <pcap_nametoportrange+0x6c>
    9dcc:	mov	r0, r6
    9dd0:	bl	dc4 <free@plt>
    9dd4:	mov	r4, r7
    9dd8:	mov	r0, r4
    9ddc:	add	sp, sp, #12
    9de0:	pop	{r4, r5, r6, r7, r8, r9, pc}
    9de4:	mov	r3, #0
    9de8:	mov	r1, r4
    9dec:	strb	r3, [r7]
    9df0:	mov	r2, r5
    9df4:	mov	r0, r6
    9df8:	bl	9cdc <pcap_nametoport>
    9dfc:	subs	r4, r0, #0
    9e00:	bne	9e10 <pcap_nametoportrange+0x98>
    9e04:	mov	r0, r6
    9e08:	bl	dc4 <free@plt>
    9e0c:	b	9dd8 <pcap_nametoportrange+0x60>
    9e10:	mov	r2, r5
    9e14:	mov	r1, r8
    9e18:	add	r0, r7, #1
    9e1c:	ldr	r9, [r5]
    9e20:	bl	9cdc <pcap_nametoport>
    9e24:	subs	r4, r0, #0
    9e28:	beq	9e04 <pcap_nametoportrange+0x8c>
    9e2c:	ldr	r3, [r5]
    9e30:	cmp	r9, r3
    9e34:	beq	9e40 <pcap_nametoportrange+0xc8>
    9e38:	mvn	r3, #0
    9e3c:	str	r3, [r5]
    9e40:	mov	r4, #1
    9e44:	b	9dd8 <pcap_nametoportrange+0x60>
    9e48:	ldr	r3, [sp]
    9e4c:	str	r3, [r4]
    9e50:	ldr	r3, [sp, #4]
    9e54:	str	r3, [r8]
    9e58:	b	9e38 <pcap_nametoportrange+0xc0>
    9e5c:	.word	0x00007705

00009e60 <pcap_nametoproto>:
    9e60:	push	{r4, lr}
    9e64:	bl	da0 <getprotobyname@plt>
    9e68:	cmp	r0, #0
    9e6c:	ldrne	r0, [r0, #8]
    9e70:	mvneq	r0, #0
    9e74:	pop	{r4, pc}

00009e78 <pcap_nametoeproto>:
    9e78:	push	{r4, r5, r6, lr}
    9e7c:	mov	r5, r0
    9e80:	ldr	r4, [pc, #52]	; 9ebc <pcap_nametoeproto+0x44>
    9e84:	add	r4, pc, r4
    9e88:	ldr	r0, [r4]
    9e8c:	cmp	r0, #0
    9e90:	bne	9e9c <pcap_nametoeproto+0x24>
    9e94:	mvn	r0, #0
    9e98:	pop	{r4, r5, r6, pc}
    9e9c:	mov	r1, r5
    9ea0:	bl	d70 <strcmp@plt>
    9ea4:	cmp	r0, #0
    9ea8:	bne	9eb4 <pcap_nametoeproto+0x3c>
    9eac:	ldrh	r0, [r4, #4]
    9eb0:	pop	{r4, r5, r6, pc}
    9eb4:	add	r4, r4, #8
    9eb8:	b	9e88 <pcap_nametoeproto+0x10>
    9ebc:	.word	0x00023408

00009ec0 <pcap_nametollc>:
    9ec0:	push	{r4, r5, r6, lr}
    9ec4:	mov	r5, r0
    9ec8:	ldr	r4, [pc, #56]	; 9f08 <pcap_nametollc+0x48>
    9ecc:	add	r4, pc, r4
    9ed0:	add	r4, r4, #168	; 0xa8
    9ed4:	ldr	r0, [r4]
    9ed8:	cmp	r0, #0
    9edc:	bne	9ee8 <pcap_nametollc+0x28>
    9ee0:	mvn	r0, #0
    9ee4:	pop	{r4, r5, r6, pc}
    9ee8:	mov	r1, r5
    9eec:	bl	d70 <strcmp@plt>
    9ef0:	cmp	r0, #0
    9ef4:	bne	9f00 <pcap_nametollc+0x40>
    9ef8:	ldrh	r0, [r4, #4]
    9efc:	pop	{r4, r5, r6, pc}
    9f00:	add	r4, r4, #8
    9f04:	b	9ed4 <pcap_nametollc+0x14>
    9f08:	.word	0x000233c0

00009f0c <__pcap_atoin>:
    9f0c:	mov	r2, #0
    9f10:	push	{r4, r5, lr}
    9f14:	mov	r5, r2
    9f18:	mov	r4, #10
    9f1c:	str	r2, [r1]
    9f20:	mov	r3, r5
    9f24:	mov	lr, r0
    9f28:	ldrb	ip, [r0], #1
    9f2c:	cmp	ip, #0
    9f30:	cmpne	ip, #46	; 0x2e
    9f34:	bne	9f60 <__pcap_atoin+0x54>
    9f38:	ldr	r0, [r1]
    9f3c:	uxtb	r3, r3
    9f40:	add	r2, r2, #8
    9f44:	orr	r3, r3, r0, lsl #8
    9f48:	str	r3, [r1]
    9f4c:	ldrb	r3, [lr]
    9f50:	cmp	r3, #0
    9f54:	beq	9f6c <__pcap_atoin+0x60>
    9f58:	add	r0, lr, #1
    9f5c:	b	9f20 <__pcap_atoin+0x14>
    9f60:	mla	r3, r4, r3, ip
    9f64:	sub	r3, r3, #48	; 0x30
    9f68:	b	9f24 <__pcap_atoin+0x18>
    9f6c:	mov	r0, r2
    9f70:	pop	{r4, r5, pc}

00009f74 <__pcap_atodn>:
    9f74:	push	{r0, r1, r2, r4, r5, lr}
    9f78:	mov	r4, r1
    9f7c:	ldr	r1, [pc, #84]	; 9fd8 <__pcap_atodn+0x64>
    9f80:	mov	r3, sp
    9f84:	add	r2, sp, #4
    9f88:	add	r1, pc, r1
    9f8c:	mov	r5, r0
    9f90:	bl	ee4 <sscanf@plt>
    9f94:	cmp	r0, #2
    9f98:	beq	9fac <__pcap_atodn+0x38>
    9f9c:	ldr	r0, [pc, #56]	; 9fdc <__pcap_atodn+0x68>
    9fa0:	mov	r1, r5
    9fa4:	add	r0, pc, r0
    9fa8:	bl	20b8 <sf_bpf_error>
    9fac:	ldr	r2, [sp, #4]
    9fb0:	ldr	r3, [pc, #40]	; 9fe0 <__pcap_atodn+0x6c>
    9fb4:	mov	r0, #32
    9fb8:	and	r3, r3, r2, lsl #10
    9fbc:	ldr	r2, [sp]
    9fc0:	lsl	r2, r2, #22
    9fc4:	lsr	r2, r2, #22
    9fc8:	orr	r3, r3, r2
    9fcc:	str	r3, [r4]
    9fd0:	add	sp, sp, #12
    9fd4:	pop	{r4, r5, pc}
    9fd8:	.word	0x00007517
    9fdc:	.word	0x00007501
    9fe0:	.word	0x0000ffff

00009fe4 <pcap_ether_aton>:
    9fe4:	push	{r4, r5, r6, r7, r8, lr}
    9fe8:	mov	r4, r0
    9fec:	mov	r0, #6
    9ff0:	bl	e48 <malloc@plt>
    9ff4:	subs	r6, r0, #0
    9ff8:	movne	r7, r6
    9ffc:	bne	a05c <pcap_ether_aton+0x78>
    a000:	mov	r0, r6
    a004:	pop	{r4, r5, r6, r7, r8, pc}
    a008:	sub	r2, r3, #45	; 0x2d
    a00c:	cmp	r3, #58	; 0x3a
    a010:	cmpne	r2, #1
    a014:	addls	r4, r4, #1
    a018:	ldrb	r0, [r4]
    a01c:	bl	9bfc <xdtoi>
    a020:	mov	r5, r0
    a024:	bl	e60 <__ctype_b_loc@plt>
    a028:	ldrb	r3, [r4, #1]
    a02c:	lsl	r2, r3, #1
    a030:	ldr	r1, [r0]
    a034:	ldrh	r2, [r1, r2]
    a038:	tst	r2, #4096	; 0x1000
    a03c:	addeq	r4, r4, #1
    a040:	beq	a058 <pcap_ether_aton+0x74>
    a044:	mov	r0, r3
    a048:	bl	9bfc <xdtoi>
    a04c:	lsl	r5, r5, #4
    a050:	add	r4, r4, #2
    a054:	orr	r5, r0, r5
    a058:	strb	r5, [r7], #1
    a05c:	ldrb	r3, [r4]
    a060:	cmp	r3, #0
    a064:	bne	a008 <pcap_ether_aton+0x24>
    a068:	b	a000 <pcap_ether_aton+0x1c>

0000a06c <pcap_ether_hostton>:
    a06c:	push	{r4, r5, r6, lr}
    a070:	mov	r6, r0
    a074:	ldr	r4, [pc, #160]	; a11c <pcap_ether_hostton+0xb0>
    a078:	add	r4, pc, r4
    a07c:	ldr	r3, [r4]
    a080:	cmp	r3, #0
    a084:	bne	a0c0 <pcap_ether_hostton+0x54>
    a088:	ldr	r1, [pc, #144]	; a120 <pcap_ether_hostton+0xb4>
    a08c:	ldr	r0, [pc, #144]	; a124 <pcap_ether_hostton+0xb8>
    a090:	add	r1, pc, r1
    a094:	add	r0, pc, r0
    a098:	bl	d94 <fopen@plt>
    a09c:	ldr	r3, [r4]
    a0a0:	add	r3, r3, #1
    a0a4:	str	r3, [r4]
    a0a8:	cmp	r0, #0
    a0ac:	str	r0, [r4, #4]
    a0b0:	bne	a0d0 <pcap_ether_hostton+0x64>
    a0b4:	mov	r3, #0
    a0b8:	mov	r0, r3
    a0bc:	pop	{r4, r5, r6, pc}
    a0c0:	ldr	r0, [r4, #4]
    a0c4:	cmp	r0, #0
    a0c8:	beq	a0b4 <pcap_ether_hostton+0x48>
    a0cc:	bl	e00 <rewind@plt>
    a0d0:	ldr	r5, [pc, #80]	; a128 <pcap_ether_hostton+0xbc>
    a0d4:	add	r5, pc, r5
    a0d8:	ldr	r0, [r5, #4]
    a0dc:	bl	c750 <pcap_next_etherent>
    a0e0:	subs	r4, r0, #0
    a0e4:	beq	a0b4 <pcap_ether_hostton+0x48>
    a0e8:	mov	r1, r6
    a0ec:	add	r0, r4, #6
    a0f0:	bl	d70 <strcmp@plt>
    a0f4:	cmp	r0, #0
    a0f8:	bne	a0d8 <pcap_ether_hostton+0x6c>
    a0fc:	mov	r0, #6
    a100:	bl	e48 <malloc@plt>
    a104:	subs	r3, r0, #0
    a108:	ldrne	r0, [r4]
    a10c:	strne	r0, [r3]
    a110:	ldrhne	r2, [r4, #4]
    a114:	strhne	r2, [r3, #4]
    a118:	b	a0b8 <pcap_ether_hostton+0x4c>
    a11c:	.word	0x000236b0
    a120:	.word	0x00008912
    a124:	.word	0x0000742f
    a128:	.word	0x00023654

0000a12c <__pcap_nametodnaddr>:
    a12c:	mov	r1, r0
    a130:	ldr	r0, [pc, #8]	; a140 <__pcap_nametodnaddr+0x14>
    a134:	push	{r4, lr}
    a138:	add	r0, pc, r0
    a13c:	bl	20b8 <sf_bpf_error>
    a140:	.word	0x00007397

0000a144 <find_levels_r>:
    a144:	ldr	r3, [pc, #128]	; a1cc <find_levels_r+0x88>
    a148:	push	{r4, r5, r6, lr}
    a14c:	add	r3, pc, r3
    a150:	ldr	r2, [r0, #24]
    a154:	ldr	r3, [r3]
    a158:	ldr	r5, [pc, #112]	; a1d0 <find_levels_r+0x8c>
    a15c:	cmp	r2, r3
    a160:	add	r5, pc, r5
    a164:	popeq	{r4, r5, r6, pc}
    a168:	str	r3, [r0, #24]
    a16c:	mov	r3, #0
    a170:	mov	r4, r0
    a174:	str	r3, [r0, #100]	; 0x64
    a178:	ldr	r0, [r0, #60]	; 0x3c
    a17c:	cmp	r0, r3
    a180:	beq	a1ac <find_levels_r+0x68>
    a184:	bl	a144 <find_levels_r>
    a188:	ldr	r0, [r4, #84]	; 0x54
    a18c:	bl	a144 <find_levels_r>
    a190:	ldr	r3, [r4, #84]	; 0x54
    a194:	ldr	r2, [r4, #60]	; 0x3c
    a198:	ldr	r3, [r3, #36]	; 0x24
    a19c:	ldr	r0, [r2, #36]	; 0x24
    a1a0:	cmp	r3, r0
    a1a4:	movlt	r3, r0
    a1a8:	add	r0, r3, #1
    a1ac:	ldr	r3, [pc, #32]	; a1d4 <find_levels_r+0x90>
    a1b0:	str	r0, [r4, #36]	; 0x24
    a1b4:	ldr	r3, [r5, r3]
    a1b8:	ldr	r3, [r3]
    a1bc:	ldr	r2, [r3, r0, lsl #2]
    a1c0:	str	r2, [r4, #100]	; 0x64
    a1c4:	str	r4, [r3, r0, lsl #2]
    a1c8:	pop	{r4, r5, r6, pc}
    a1cc:	.word	0x000235e4
    a1d0:	.word	0x00022e98
    a1d4:	.word	0x000000cc

0000a1d8 <propedom>:
    a1d8:	push	{r4, lr}
    a1dc:	mov	lr, #1
    a1e0:	ldr	r3, [r0]
    a1e4:	ldr	r1, [r0, #8]
    a1e8:	lsr	ip, r3, #5
    a1ec:	and	r3, r3, #31
    a1f0:	ldr	r2, [r1, ip, lsl #2]
    a1f4:	orr	r3, r2, lr, lsl r3
    a1f8:	str	r3, [r1, ip, lsl #2]
    a1fc:	ldr	r3, [r0, #12]
    a200:	cmp	r3, #0
    a204:	popeq	{r4, pc}
    a208:	ldr	r1, [r3, #56]	; 0x38
    a20c:	ldr	r3, [pc, #84]	; a268 <propedom+0x90>
    a210:	ldr	lr, [r0, #8]
    a214:	add	r3, pc, r3
    a218:	ldr	r3, [r3, #4]
    a21c:	mov	r2, r3
    a220:	subs	r2, r2, #1
    a224:	bpl	a240 <propedom+0x68>
    a228:	ldr	r2, [r0, #12]
    a22c:	ldr	r0, [r0, #8]
    a230:	ldr	r2, [r2, #80]	; 0x50
    a234:	subs	r3, r3, #1
    a238:	bpl	a254 <propedom+0x7c>
    a23c:	pop	{r4, pc}
    a240:	ldr	ip, [r1], #4
    a244:	ldr	r4, [lr], #4
    a248:	and	ip, ip, r4
    a24c:	str	ip, [r1, #-4]
    a250:	b	a220 <propedom+0x48>
    a254:	ldr	r1, [r2], #4
    a258:	ldr	ip, [r0], #4
    a25c:	and	r1, r1, ip
    a260:	str	r1, [r2, #-4]
    a264:	b	a234 <propedom+0x5c>
    a268:	.word	0x0002351c

0000a26c <atomdef>:
    a26c:	ldr	r3, [r0]
    a270:	cmn	r3, #1
    a274:	beq	a2ac <atomdef+0x40>
    a278:	and	r2, r3, #7
    a27c:	cmp	r2, #7
    a280:	addls	pc, pc, r2, lsl #2
    a284:	b	a2cc <atomdef+0x60>
    a288:	b	a2d4 <atomdef+0x68>
    a28c:	b	a2a8 <atomdef+0x3c>
    a290:	b	a2b4 <atomdef+0x48>
    a294:	b	a2b4 <atomdef+0x48>
    a298:	b	a2d4 <atomdef+0x68>
    a29c:	b	a2cc <atomdef+0x60>
    a2a0:	b	a2cc <atomdef+0x60>
    a2a4:	b	a2bc <atomdef+0x50>
    a2a8:	mov	r3, #17
    a2ac:	mov	r0, r3
    a2b0:	bx	lr
    a2b4:	ldr	r3, [r0, #12]
    a2b8:	b	a2ac <atomdef+0x40>
    a2bc:	tst	r3, #248	; 0xf8
    a2c0:	moveq	r3, #17
    a2c4:	movne	r3, #16
    a2c8:	b	a2ac <atomdef+0x40>
    a2cc:	mvn	r3, #0
    a2d0:	b	a2ac <atomdef+0x40>
    a2d4:	mov	r3, #16
    a2d8:	b	a2ac <atomdef+0x40>

0000a2dc <F>:
    a2dc:	push	{r4, r5, r6, r7, r8, lr}
    a2e0:	mov	r5, r1
    a2e4:	mov	r4, r0
    a2e8:	eor	r0, r0, r2, lsl #8
    a2ec:	mov	r1, #213	; 0xd5
    a2f0:	eor	r0, r0, r5, lsl #4
    a2f4:	mov	r6, r2
    a2f8:	bl	fce8 <__aeabi_uidivmod>
    a2fc:	ldr	r3, [pc, #204]	; a3d0 <F+0xf4>
    a300:	ldr	r7, [pc, #204]	; a3d4 <F+0xf8>
    a304:	add	r3, pc, r3
    a308:	add	r7, pc, r7
    a30c:	lsl	r1, r1, #2
    a310:	add	r3, r3, r1
    a314:	ldr	r3, [r3, #8]
    a318:	cmp	r3, #0
    a31c:	bne	a39c <F+0xc0>
    a320:	ldr	r3, [pc, #176]	; a3d8 <F+0xfc>
    a324:	tst	r4, #224	; 0xe0
    a328:	add	r3, pc, r3
    a32c:	ldr	r0, [r3, #860]	; 0x35c
    a330:	add	r0, r0, #1
    a334:	str	r0, [r3, #860]	; 0x35c
    a338:	bne	a364 <F+0x88>
    a33c:	and	r3, r4, #7
    a340:	cmp	r3, #1
    a344:	bhi	a364 <F+0x88>
    a348:	ldr	r3, [pc, #140]	; a3dc <F+0x100>
    a34c:	ldr	r3, [r7, r3]
    a350:	ldr	r3, [r3]
    a354:	add	r2, r3, r0, lsl #3
    a358:	str	r5, [r2, #4]
    a35c:	mov	r2, #1
    a360:	str	r2, [r3, r0, lsl #3]
    a364:	ldr	r3, [pc, #116]	; a3e0 <F+0x104>
    a368:	ldr	r2, [r7, r3]
    a36c:	ldr	r3, [r2]
    a370:	add	ip, r3, #20
    a374:	str	ip, [r2]
    a378:	ldr	r2, [pc, #100]	; a3e4 <F+0x108>
    a37c:	str	r0, [r3, #12]
    a380:	add	r2, pc, r2
    a384:	add	r1, r2, r1
    a388:	stm	r3, {r4, r5, r6}
    a38c:	ldr	r2, [r1, #8]
    a390:	str	r2, [r3, #16]
    a394:	str	r3, [r1, #8]
    a398:	pop	{r4, r5, r6, r7, r8, pc}
    a39c:	ldr	r2, [r3]
    a3a0:	cmp	r4, r2
    a3a4:	bne	a3c8 <F+0xec>
    a3a8:	ldr	r2, [r3, #4]
    a3ac:	cmp	r5, r2
    a3b0:	bne	a3c8 <F+0xec>
    a3b4:	ldr	r2, [r3, #8]
    a3b8:	cmp	r6, r2
    a3bc:	bne	a3c8 <F+0xec>
    a3c0:	ldr	r0, [r3, #12]
    a3c4:	pop	{r4, r5, r6, r7, r8, pc}
    a3c8:	ldr	r3, [r3, #16]
    a3cc:	b	a318 <F+0x3c>
    a3d0:	.word	0x0002342c
    a3d4:	.word	0x00022cf0
    a3d8:	.word	0x00023408
    a3dc:	.word	0x0000010c
    a3e0:	.word	0x000000f4
    a3e4:	.word	0x000233b0

0000a3e8 <this_op>:
    a3e8:	cmp	r0, #0
    a3ec:	bxeq	lr
    a3f0:	ldr	r3, [r0]
    a3f4:	cmn	r3, #1
    a3f8:	beq	a400 <this_op+0x18>
    a3fc:	bx	lr
    a400:	ldr	r0, [r0, #16]
    a404:	b	a3e8 <this_op>

0000a408 <use_conflict>:
    a408:	ldr	r3, [r1, #128]	; 0x80
    a40c:	cmp	r3, #0
    a410:	beq	a45c <use_conflict+0x54>
    a414:	add	r0, r0, #136	; 0x88
    a418:	add	r1, r1, #136	; 0x88
    a41c:	mov	r2, #0
    a420:	mov	ip, #1
    a424:	push	{r4, lr}
    a428:	ands	lr, r3, ip, lsl r2
    a42c:	beq	a440 <use_conflict+0x38>
    a430:	ldr	r4, [r0]
    a434:	ldr	lr, [r1]
    a438:	cmp	r4, lr
    a43c:	bne	a464 <use_conflict+0x5c>
    a440:	add	r2, r2, #1
    a444:	cmp	r2, #18
    a448:	add	r0, r0, #4
    a44c:	add	r1, r1, #4
    a450:	bne	a428 <use_conflict+0x20>
    a454:	mov	r0, #0
    a458:	pop	{r4, pc}
    a45c:	mov	r0, r3
    a460:	bx	lr
    a464:	mov	r0, #1
    a468:	pop	{r4, pc}

0000a46c <make_marks>:
    a46c:	push	{r4, r5, r6, lr}
    a470:	mov	r4, r0
    a474:	ldr	r5, [pc, #52]	; a4b0 <make_marks+0x44>
    a478:	add	r5, pc, r5
    a47c:	ldr	r3, [r5]
    a480:	ldr	r2, [r4, #24]
    a484:	cmp	r2, r3
    a488:	popeq	{r4, r5, r6, pc}
    a48c:	str	r3, [r4, #24]
    a490:	ldr	r3, [r4, #8]
    a494:	and	r3, r3, #7
    a498:	cmp	r3, #6
    a49c:	popeq	{r4, r5, r6, pc}
    a4a0:	ldr	r0, [r4, #60]	; 0x3c
    a4a4:	bl	a46c <make_marks>
    a4a8:	ldr	r4, [r4, #84]	; 0x54
    a4ac:	b	a47c <make_marks+0x10>
    a4b0:	.word	0x000232b8

0000a4b4 <slength>:
    a4b4:	mov	r3, r0
    a4b8:	mov	r0, #0
    a4bc:	cmp	r3, #0
    a4c0:	bne	a4c8 <slength+0x14>
    a4c4:	bx	lr
    a4c8:	ldr	r2, [r3]
    a4cc:	ldr	r3, [r3, #16]
    a4d0:	cmn	r2, #1
    a4d4:	addne	r0, r0, #1
    a4d8:	b	a4bc <slength+0x8>

0000a4dc <count_blocks>:
    a4dc:	push	{r4, r5, r6, lr}
    a4e0:	mov	r4, r0
    a4e4:	ldr	r6, [pc, #64]	; a52c <count_blocks+0x50>
    a4e8:	mov	r5, #0
    a4ec:	add	r6, pc, r6
    a4f0:	cmp	r4, #0
    a4f4:	beq	a524 <count_blocks+0x48>
    a4f8:	ldr	r3, [r6]
    a4fc:	ldr	r2, [r4, #24]
    a500:	cmp	r2, r3
    a504:	beq	a524 <count_blocks+0x48>
    a508:	str	r3, [r4, #24]
    a50c:	ldr	r0, [r4, #60]	; 0x3c
    a510:	bl	a4dc <count_blocks>
    a514:	ldr	r4, [r4, #84]	; 0x54
    a518:	add	r0, r0, #1
    a51c:	add	r5, r5, r0
    a520:	b	a4f0 <count_blocks+0x14>
    a524:	mov	r0, r5
    a528:	pop	{r4, r5, r6, pc}
    a52c:	.word	0x00023244

0000a530 <number_blks_r>:
    a530:	push	{r4, r5, r6, lr}
    a534:	mov	r4, r0
    a538:	ldr	r5, [pc, #84]	; a594 <number_blks_r+0x64>
    a53c:	ldr	r6, [pc, #84]	; a598 <number_blks_r+0x68>
    a540:	add	r5, pc, r5
    a544:	add	r6, pc, r6
    a548:	cmp	r4, #0
    a54c:	popeq	{r4, r5, r6, pc}
    a550:	ldr	r3, [r5]
    a554:	ldr	r2, [r4, #24]
    a558:	cmp	r2, r3
    a55c:	popeq	{r4, r5, r6, pc}
    a560:	str	r3, [r4, #24]
    a564:	ldr	r3, [r5, #864]	; 0x360
    a568:	add	r2, r3, #1
    a56c:	str	r2, [r5, #864]	; 0x360
    a570:	ldr	r2, [pc, #36]	; a59c <number_blks_r+0x6c>
    a574:	str	r3, [r4]
    a578:	ldr	r2, [r6, r2]
    a57c:	ldr	r2, [r2]
    a580:	str	r4, [r2, r3, lsl #2]
    a584:	ldr	r0, [r4, #60]	; 0x3c
    a588:	bl	a530 <number_blks_r>
    a58c:	ldr	r4, [r4, #84]	; 0x54
    a590:	b	a548 <number_blks_r+0x18>
    a594:	.word	0x000231f0
    a598:	.word	0x00022ab4
    a59c:	.word	0x000000d4

0000a5a0 <count_stmts>:
    a5a0:	cmp	r0, #0
    a5a4:	bxeq	lr
    a5a8:	ldr	r3, [pc, #96]	; a610 <count_stmts+0x70>
    a5ac:	ldr	r2, [r0, #24]
    a5b0:	add	r3, pc, r3
    a5b4:	ldr	r3, [r3]
    a5b8:	cmp	r2, r3
    a5bc:	beq	a608 <count_stmts+0x68>
    a5c0:	push	{r4, r5, r6, lr}
    a5c4:	mov	r4, r0
    a5c8:	str	r3, [r0, #24]
    a5cc:	ldr	r0, [r0, #60]	; 0x3c
    a5d0:	bl	a5a0 <count_stmts>
    a5d4:	mov	r5, r0
    a5d8:	ldr	r0, [r4, #84]	; 0x54
    a5dc:	bl	a5a0 <count_stmts>
    a5e0:	add	r5, r5, r0
    a5e4:	ldr	r0, [r4, #4]
    a5e8:	bl	a4b4 <slength>
    a5ec:	ldr	r1, [r4, #28]
    a5f0:	add	r0, r5, r0
    a5f4:	add	r0, r0, #1
    a5f8:	add	r1, r0, r1
    a5fc:	ldr	r0, [r4, #32]
    a600:	add	r0, r1, r0
    a604:	pop	{r4, r5, r6, pc}
    a608:	mov	r0, #0
    a60c:	bx	lr
    a610:	.word	0x00023180

0000a614 <atomuse>:
    a614:	ldr	r3, [r0]
    a618:	cmn	r3, #1
    a61c:	beq	a690 <atomuse+0x7c>
    a620:	and	r2, r3, #7
    a624:	sub	r2, r2, #2
    a628:	cmp	r2, #5
    a62c:	addls	pc, pc, r2, lsl #2
    a630:	b	a668 <atomuse+0x54>
    a634:	b	a6a8 <atomuse+0x94>
    a638:	b	a6b0 <atomuse+0x9c>
    a63c:	b	a684 <atomuse+0x70>
    a640:	b	a684 <atomuse+0x70>
    a644:	b	a64c <atomuse+0x38>
    a648:	b	a698 <atomuse+0x84>
    a64c:	and	r3, r3, #24
    a650:	cmp	r3, #16
    a654:	beq	a690 <atomuse+0x7c>
    a658:	cmp	r3, #8
    a65c:	mvnne	r3, #0
    a660:	moveq	r3, #17
    a664:	b	a690 <atomuse+0x7c>
    a668:	and	r3, r3, #224	; 0xe0
    a66c:	cmp	r3, #64	; 0x40
    a670:	beq	a6b0 <atomuse+0x9c>
    a674:	cmp	r3, #96	; 0x60
    a678:	ldreq	r3, [r0, #12]
    a67c:	mvnne	r3, #0
    a680:	b	a690 <atomuse+0x7c>
    a684:	tst	r3, #8
    a688:	moveq	r3, #16
    a68c:	movne	r3, #18
    a690:	mov	r0, r3
    a694:	bx	lr
    a698:	and	r3, r3, #248	; 0xf8
    a69c:	cmp	r3, #128	; 0x80
    a6a0:	movne	r3, #16
    a6a4:	b	a660 <atomuse+0x4c>
    a6a8:	mov	r3, #16
    a6ac:	b	a690 <atomuse+0x7c>
    a6b0:	mov	r3, #17
    a6b4:	b	a690 <atomuse+0x7c>

0000a6b8 <deadstmt>:
    a6b8:	push	{r4, lr}
    a6bc:	mov	r4, r0
    a6c0:	bl	a614 <atomuse>
    a6c4:	cmp	r0, #0
    a6c8:	blt	a6e0 <deadstmt+0x28>
    a6cc:	cmp	r0, #18
    a6d0:	mov	r3, #0
    a6d4:	streq	r3, [r1, #68]	; 0x44
    a6d8:	streq	r3, [r1, #64]	; 0x40
    a6dc:	strne	r3, [r1, r0, lsl #2]
    a6e0:	mov	r0, r4
    a6e4:	bl	a26c <atomdef>
    a6e8:	cmp	r0, #0
    a6ec:	poplt	{r4, pc}
    a6f0:	ldr	r3, [r1, r0, lsl #2]
    a6f4:	cmp	r3, #0
    a6f8:	beq	a714 <deadstmt+0x5c>
    a6fc:	ldr	r2, [pc, #24]	; a71c <deadstmt+0x64>
    a700:	mov	ip, #0
    a704:	add	r2, pc, r2
    a708:	str	ip, [r2, #868]	; 0x364
    a70c:	mvn	r2, #0
    a710:	str	r2, [r3]
    a714:	str	r4, [r1, r0, lsl #2]
    a718:	pop	{r4, pc}
    a71c:	.word	0x0002302c

0000a720 <fold_op>:
    a720:	ldr	r3, [pc, #244]	; a81c <fold_op+0xfc>
    a724:	push	{r4, lr}
    a728:	mov	r4, r0
    a72c:	ldr	r0, [pc, #236]	; a820 <fold_op+0x100>
    a730:	add	r3, pc, r3
    a734:	ldr	r3, [r3, r0]
    a738:	ldr	r3, [r3]
    a73c:	add	r1, r3, r1, lsl #3
    a740:	add	r2, r3, r2, lsl #3
    a744:	ldr	r3, [r4]
    a748:	ldr	r0, [r1, #4]
    a74c:	and	r3, r3, #240	; 0xf0
    a750:	cmp	r3, #64	; 0x40
    a754:	ldr	r1, [r2, #4]
    a758:	beq	a804 <fold_op+0xe4>
    a75c:	bgt	a7a0 <fold_op+0x80>
    a760:	cmp	r3, #16
    a764:	beq	a7ec <fold_op+0xcc>
    a768:	bgt	a77c <fold_op+0x5c>
    a76c:	cmp	r3, #0
    a770:	addeq	r0, r0, r1
    a774:	beq	a7b8 <fold_op+0x98>
    a778:	bl	f44 <abort@plt>
    a77c:	cmp	r3, #32
    a780:	beq	a7f4 <fold_op+0xd4>
    a784:	cmp	r3, #48	; 0x30
    a788:	bne	a778 <fold_op+0x58>
    a78c:	cmp	r1, #0
    a790:	bne	a7fc <fold_op+0xdc>
    a794:	ldr	r0, [pc, #136]	; a824 <fold_op+0x104>
    a798:	add	r0, pc, r0
    a79c:	bl	20b8 <sf_bpf_error>
    a7a0:	cmp	r3, #96	; 0x60
    a7a4:	beq	a80c <fold_op+0xec>
    a7a8:	bgt	a7d4 <fold_op+0xb4>
    a7ac:	cmp	r3, #80	; 0x50
    a7b0:	andeq	r0, r0, r1
    a7b4:	bne	a778 <fold_op+0x58>
    a7b8:	ldr	r2, [pc, #104]	; a828 <fold_op+0x108>
    a7bc:	mov	r3, #0
    a7c0:	add	r2, pc, r2
    a7c4:	str	r0, [r4, #12]
    a7c8:	str	r3, [r4]
    a7cc:	str	r3, [r2, #868]	; 0x364
    a7d0:	pop	{r4, pc}
    a7d4:	cmp	r3, #112	; 0x70
    a7d8:	beq	a814 <fold_op+0xf4>
    a7dc:	cmp	r3, #128	; 0x80
    a7e0:	rsbeq	r0, r0, #0
    a7e4:	beq	a7b8 <fold_op+0x98>
    a7e8:	b	a778 <fold_op+0x58>
    a7ec:	sub	r0, r0, r1
    a7f0:	b	a7b8 <fold_op+0x98>
    a7f4:	mul	r0, r1, r0
    a7f8:	b	a7b8 <fold_op+0x98>
    a7fc:	bl	fafc <__udivsi3>
    a800:	b	a7b8 <fold_op+0x98>
    a804:	orr	r0, r0, r1
    a808:	b	a7b8 <fold_op+0x98>
    a80c:	lsl	r0, r0, r1
    a810:	b	a7b8 <fold_op+0x98>
    a814:	lsr	r0, r0, r1
    a818:	b	a7b8 <fold_op+0x98>
    a81c:	.word	0x000228c8
    a820:	.word	0x0000010c
    a824:	.word	0x00006df9
    a828:	.word	0x00022f70

0000a82c <convert_code_r>:
    a82c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a830:	subs	r5, r0, #0
    a834:	bne	a840 <convert_code_r+0x14>
    a838:	mov	r0, #1
    a83c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a840:	ldr	r8, [pc, #740]	; ab2c <convert_code_r+0x300>
    a844:	ldr	r2, [r5, #24]
    a848:	add	r8, pc, r8
    a84c:	ldr	r3, [r8]
    a850:	cmp	r2, r3
    a854:	beq	a838 <convert_code_r+0xc>
    a858:	str	r3, [r5, #24]
    a85c:	ldr	r0, [r5, #84]	; 0x54
    a860:	bl	a82c <convert_code_r>
    a864:	cmp	r0, #0
    a868:	bne	a874 <convert_code_r+0x48>
    a86c:	mov	r0, #0
    a870:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a874:	ldr	r0, [r5, #60]	; 0x3c
    a878:	bl	a82c <convert_code_r>
    a87c:	cmp	r0, #0
    a880:	beq	a86c <convert_code_r+0x40>
    a884:	ldr	r6, [r5, #4]
    a888:	mov	r0, r6
    a88c:	bl	a4b4 <slength>
    a890:	ldr	r3, [r5, #28]
    a894:	add	r4, r0, #1
    a898:	add	r4, r4, r3
    a89c:	ldr	r3, [r5, #32]
    a8a0:	cmp	r0, #0
    a8a4:	add	r3, r4, r3
    a8a8:	ldr	r4, [r8, #872]	; 0x368
    a8ac:	mov	r7, r0
    a8b0:	sub	r4, r4, r3, lsl #3
    a8b4:	ldr	r3, [r8, #876]	; 0x36c
    a8b8:	str	r4, [r8, #872]	; 0x368
    a8bc:	sub	r3, r4, r3
    a8c0:	asr	r3, r3, #3
    a8c4:	str	r3, [r5, #40]	; 0x28
    a8c8:	beq	a908 <convert_code_r+0xdc>
    a8cc:	mov	r1, #4
    a8d0:	bl	d58 <calloc@plt>
    a8d4:	cmp	r0, #0
    a8d8:	movne	r3, r6
    a8dc:	movne	r2, #0
    a8e0:	bne	a8fc <convert_code_r+0xd0>
    a8e4:	ldr	r0, [pc, #580]	; ab30 <convert_code_r+0x304>
    a8e8:	add	r0, pc, r0
    a8ec:	bl	20b8 <sf_bpf_error>
    a8f0:	str	r3, [r0, r2, lsl #2]
    a8f4:	ldr	r3, [r3, #16]
    a8f8:	add	r2, r2, #1
    a8fc:	cmp	r3, #0
    a900:	cmpne	r2, r7
    a904:	bcc	a8f0 <convert_code_r+0xc4>
    a908:	mov	r2, #0
    a90c:	sub	fp, r7, #2
    a910:	mov	r8, #1
    a914:	cmp	r6, #0
    a918:	bne	a978 <convert_code_r+0x14c>
    a91c:	cmp	r0, #0
    a920:	beq	a928 <convert_code_r+0xfc>
    a924:	bl	dc4 <free@plt>
    a928:	ldr	r3, [r5, #8]
    a92c:	strh	r3, [r4]
    a930:	ldr	r3, [r5, #20]
    a934:	str	r3, [r4, #4]
    a938:	ldr	r1, [r5, #60]	; 0x3c
    a93c:	cmp	r1, #0
    a940:	beq	a838 <convert_code_r+0xc>
    a944:	ldr	r3, [r5, #40]	; 0x28
    a948:	add	r2, r7, r3
    a94c:	ldr	r3, [r1, #40]	; 0x28
    a950:	sub	r3, r3, r2
    a954:	sub	r3, r3, #1
    a958:	cmp	r3, #255	; 0xff
    a95c:	bls	aaf4 <convert_code_r+0x2c8>
    a960:	ldr	r0, [r5, #28]
    a964:	cmp	r0, #0
    a968:	bne	aaa0 <convert_code_r+0x274>
    a96c:	mov	r3, #1
    a970:	str	r3, [r5, #28]
    a974:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a978:	ldr	r3, [r6]
    a97c:	cmn	r3, #1
    a980:	beq	aa98 <convert_code_r+0x26c>
    a984:	strh	r3, [r4]
    a988:	ldr	r3, [r6, #12]
    a98c:	str	r3, [r4, #4]
    a990:	ldr	r3, [r6]
    a994:	and	r1, r3, #7
    a998:	sub	r3, r3, #5
    a99c:	clz	r3, r3
    a9a0:	lsr	r3, r3, #5
    a9a4:	cmp	r1, #5
    a9a8:	orrne	r3, r3, #1
    a9ac:	cmp	r3, #0
    a9b0:	bne	aa90 <convert_code_r+0x264>
    a9b4:	cmp	r2, fp
    a9b8:	beq	aa90 <convert_code_r+0x264>
    a9bc:	ldr	r1, [r6, #4]
    a9c0:	cmp	r1, #0
    a9c4:	beq	aa10 <convert_code_r+0x1e4>
    a9c8:	ldr	r1, [r6, #8]
    a9cc:	cmp	r1, #0
    a9d0:	beq	aa10 <convert_code_r+0x1e4>
    a9d4:	mvn	r1, r2
    a9d8:	mov	ip, #0
    a9dc:	uxtb	r1, r1
    a9e0:	mov	lr, ip
    a9e4:	cmp	r3, r7
    a9e8:	blt	aa24 <convert_code_r+0x1f8>
    a9ec:	eor	lr, lr, #1
    a9f0:	eor	ip, ip, #1
    a9f4:	orrs	r3, lr, ip
    a9f8:	beq	aa90 <convert_code_r+0x264>
    a9fc:	ldr	r1, [pc, #304]	; ab34 <convert_code_r+0x308>
    aa00:	ldr	r0, [pc, #304]	; ab38 <convert_code_r+0x30c>
    aa04:	add	r1, pc, r1
    aa08:	add	r0, pc, r0
    aa0c:	b	aa20 <convert_code_r+0x1f4>
    aa10:	ldr	r1, [pc, #292]	; ab3c <convert_code_r+0x310>
    aa14:	ldr	r0, [pc, #292]	; ab40 <convert_code_r+0x314>
    aa18:	add	r1, pc, r1
    aa1c:	add	r0, pc, r0
    aa20:	bl	20b8 <sf_bpf_error>
    aa24:	ldr	r9, [r0, r3, lsl #2]
    aa28:	ldr	sl, [r6, #4]
    aa2c:	cmp	r9, sl
    aa30:	bne	aa54 <convert_code_r+0x228>
    aa34:	cmp	lr, #0
    aa38:	ldrne	r1, [pc, #260]	; ab44 <convert_code_r+0x318>
    aa3c:	ldrne	r0, [pc, #260]	; ab48 <convert_code_r+0x31c>
    aa40:	addne	r1, pc, r1
    aa44:	addne	r0, pc, r0
    aa48:	bne	aa20 <convert_code_r+0x1f4>
    aa4c:	mov	lr, r8
    aa50:	strb	r1, [r4, #2]
    aa54:	ldr	sl, [r6, #8]
    aa58:	cmp	r9, sl
    aa5c:	bne	aa80 <convert_code_r+0x254>
    aa60:	cmp	ip, #0
    aa64:	ldrne	r1, [pc, #224]	; ab4c <convert_code_r+0x320>
    aa68:	ldrne	r0, [pc, #224]	; ab50 <convert_code_r+0x324>
    aa6c:	addne	r1, pc, r1
    aa70:	addne	r0, pc, r0
    aa74:	bne	aa20 <convert_code_r+0x1f4>
    aa78:	mov	ip, r8
    aa7c:	strb	r1, [r4, #3]
    aa80:	add	r1, r1, #1
    aa84:	add	r3, r3, #1
    aa88:	uxtb	r1, r1
    aa8c:	b	a9e4 <convert_code_r+0x1b8>
    aa90:	add	r4, r4, #8
    aa94:	add	r2, r2, #1
    aa98:	ldr	r6, [r6, #16]
    aa9c:	b	a914 <convert_code_r+0xe8>
    aaa0:	mov	r2, #0
    aaa4:	strb	r2, [r4, #2]
    aaa8:	mov	r2, #5
    aaac:	strh	r2, [r4, #8]
    aab0:	mov	r2, #1
    aab4:	sub	r3, r3, #1
    aab8:	str	r3, [r4, #12]
    aabc:	ldr	r3, [r5, #84]	; 0x54
    aac0:	ldr	r1, [r5, #40]	; 0x28
    aac4:	ldr	r3, [r3, #40]	; 0x28
    aac8:	add	r7, r7, r1
    aacc:	sub	r7, r3, r7
    aad0:	sub	r7, r7, #1
    aad4:	cmp	r7, #255	; 0xff
    aad8:	mov	r3, #1
    aadc:	bls	ab24 <convert_code_r+0x2f8>
    aae0:	ldr	r0, [r5, #32]
    aae4:	cmp	r0, #0
    aae8:	bne	ab00 <convert_code_r+0x2d4>
    aaec:	str	r3, [r5, #32]
    aaf0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aaf4:	strb	r3, [r4, #2]
    aaf8:	mov	r2, #0
    aafc:	b	aabc <convert_code_r+0x290>
    ab00:	strb	r2, [r4, #3]
    ab04:	add	r2, r2, #1
    ab08:	mov	ip, #5
    ab0c:	lsl	r1, r2, #3
    ab10:	add	r0, r4, r1
    ab14:	sub	r7, r7, r2
    ab18:	strh	ip, [r4, r1]
    ab1c:	str	r7, [r0, #4]
    ab20:	b	a838 <convert_code_r+0xc>
    ab24:	strb	r7, [r4, #3]
    ab28:	b	a838 <convert_code_r+0xc>
    ab2c:	.word	0x00022ee8
    ab30:	.word	0x00006cba
    ab34:	.word	0x00006bfb
    ab38:	.word	0x00006bbd
    ab3c:	.word	0x00006b9a
    ab40:	.word	0x00006ba9
    ab44:	.word	0x00006bae
    ab48:	.word	0x00006b81
    ab4c:	.word	0x00006b82
    ab50:	.word	0x00006b55

0000ab54 <vstore.isra.0>:
    ab54:	cmp	r3, #0
    ab58:	beq	ab74 <vstore.isra.0+0x20>
    ab5c:	ldr	r3, [r1]
    ab60:	cmp	r3, r2
    ab64:	bne	ab74 <vstore.isra.0+0x20>
    ab68:	mvn	r3, #0
    ab6c:	str	r3, [r0]
    ab70:	bx	lr
    ab74:	str	r2, [r1]
    ab78:	bx	lr

0000ab7c <find_inedges.isra.2>:
    ab7c:	ldr	r3, [pc, #152]	; ac1c <find_inedges.isra.2+0xa0>
    ab80:	ldr	r1, [pc, #152]	; ac20 <find_inedges.isra.2+0xa4>
    ab84:	add	r3, pc, r3
    ab88:	push	{r4, lr}
    ab8c:	add	r1, pc, r1
    ab90:	ldr	r2, [r3, #864]	; 0x360
    ab94:	ldr	r3, [pc, #136]	; ac24 <find_inedges.isra.2+0xa8>
    ab98:	ldr	r3, [r1, r3]
    ab9c:	ldr	ip, [r3]
    aba0:	mov	r3, #0
    aba4:	mov	lr, r3
    aba8:	cmp	r3, r2
    abac:	blt	abcc <find_inedges.isra.2+0x50>
    abb0:	ldr	r3, [pc, #112]	; ac28 <find_inedges.isra.2+0xac>
    abb4:	ldr	r2, [r0]
    abb8:	ldr	r3, [r1, r3]
    abbc:	ldr	r0, [r3]
    abc0:	cmp	r2, #0
    abc4:	bgt	abdc <find_inedges.isra.2+0x60>
    abc8:	pop	{r4, pc}
    abcc:	ldr	r4, [ip, r3, lsl #2]
    abd0:	add	r3, r3, #1
    abd4:	str	lr, [r4, #112]	; 0x70
    abd8:	b	aba8 <find_inedges.isra.2+0x2c>
    abdc:	ldr	r3, [r0, r2, lsl #2]
    abe0:	cmp	r3, #0
    abe4:	subeq	r2, r2, #1
    abe8:	beq	abc0 <find_inedges.isra.2+0x44>
    abec:	ldr	r1, [r3, #60]	; 0x3c
    abf0:	ldr	ip, [r1, #112]	; 0x70
    abf4:	str	ip, [r3, #68]	; 0x44
    abf8:	add	ip, r3, #48	; 0x30
    abfc:	str	ip, [r1, #112]	; 0x70
    ac00:	ldr	r1, [r3, #84]	; 0x54
    ac04:	ldr	ip, [r1, #112]	; 0x70
    ac08:	str	ip, [r3, #92]	; 0x5c
    ac0c:	add	ip, r3, #72	; 0x48
    ac10:	str	ip, [r1, #112]	; 0x70
    ac14:	ldr	r3, [r3, #100]	; 0x64
    ac18:	b	abe0 <find_inedges.isra.2+0x64>
    ac1c:	.word	0x00022bac
    ac20:	.word	0x0002246c
    ac24:	.word	0x000000d4
    ac28:	.word	0x000000cc

0000ac2c <opt_j>:
    ac2c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ac30:	ldr	r3, [r0, #12]
    ac34:	ldr	r6, [pc, #344]	; ad94 <opt_j+0x168>
    ac38:	ldr	r5, [r3, #60]	; 0x3c
    ac3c:	add	r6, pc, r6
    ac40:	cmp	r5, #0
    ac44:	beq	ad74 <opt_j+0x148>
    ac48:	ldr	r3, [r3, #84]	; 0x54
    ac4c:	mov	r4, r0
    ac50:	cmp	r5, r3
    ac54:	bne	ac78 <opt_j+0x4c>
    ac58:	mov	r1, r5
    ac5c:	ldr	r0, [r0, #16]
    ac60:	bl	a408 <use_conflict>
    ac64:	cmp	r0, #0
    ac68:	ldreq	r3, [pc, #296]	; ad98 <opt_j+0x16c>
    ac6c:	streq	r5, [r4, #12]
    ac70:	addeq	r3, pc, r3
    ac74:	streq	r0, [r3, #868]	; 0x364
    ac78:	ldr	r3, [pc, #284]	; ad9c <opt_j+0x170>
    ac7c:	ldr	r9, [pc, #284]	; ada0 <opt_j+0x174>
    ac80:	add	r3, pc, r3
    ac84:	mov	r8, #0
    ac88:	ldr	r3, [r3, #4]
    ac8c:	add	r9, pc, r9
    ac90:	str	r3, [sp]
    ac94:	ldr	r3, [pc, #264]	; ada4 <opt_j+0x178>
    ac98:	ldr	r3, [r6, r3]
    ac9c:	mov	r6, #1
    aca0:	ldr	r7, [r3]
    aca4:	mov	r5, #0
    aca8:	ldr	r3, [sp]
    acac:	cmp	r5, r3
    acb0:	bge	ad74 <opt_j+0x148>
    acb4:	ldr	r3, [r4, #8]
    acb8:	lsl	sl, r5, #5
    acbc:	ldr	fp, [r3, r5, lsl #2]
    acc0:	cmp	fp, #0
    acc4:	addeq	r5, r5, #1
    acc8:	beq	aca8 <opt_j+0x7c>
    accc:	mov	r0, fp
    acd0:	bl	f20 <ffs@plt>
    acd4:	ldr	r3, [r4, #12]
    acd8:	ldr	ip, [r3, #8]
    acdc:	sub	r0, r0, #1
    ace0:	bic	fp, fp, r6, lsl r0
    ace4:	add	r0, r0, sl
    ace8:	ldr	r0, [r7, r0, lsl #2]
    acec:	ldr	r1, [r0, #4]
    acf0:	cmp	r1, #0
    acf4:	rsblt	r1, r1, #0
    acf8:	movlt	r2, r8
    acfc:	movge	r2, r6
    ad00:	cmp	ip, r1
    ad04:	bne	acc0 <opt_j+0x94>
    ad08:	ldr	r0, [r0, #16]
    ad0c:	ldr	lr, [r3, #200]	; 0xc8
    ad10:	ldr	ip, [r0, #200]	; 0xc8
    ad14:	cmp	lr, ip
    ad18:	bne	acc0 <opt_j+0x94>
    ad1c:	ldr	ip, [r3, #132]	; 0x84
    ad20:	ldr	r0, [r0, #132]	; 0x84
    ad24:	cmp	ip, r0
    ad28:	bne	ad7c <opt_j+0x150>
    ad2c:	cmp	r2, #0
    ad30:	ldrne	r3, [r3, #60]	; 0x3c
    ad34:	bne	ad3c <opt_j+0x110>
    ad38:	ldr	r3, [r3, #84]	; 0x54
    ad3c:	cmp	r3, #0
    ad40:	beq	acc0 <opt_j+0x94>
    ad44:	mov	r1, r3
    ad48:	ldr	r0, [r4, #16]
    ad4c:	str	r3, [sp, #4]
    ad50:	bl	a408 <use_conflict>
    ad54:	ldr	r3, [sp, #4]
    ad58:	cmp	r0, #0
    ad5c:	bne	acc0 <opt_j+0x94>
    ad60:	str	r3, [r4, #12]
    ad64:	ldr	r3, [r3, #60]	; 0x3c
    ad68:	str	r0, [r9, #868]	; 0x364
    ad6c:	cmp	r3, #0
    ad70:	bne	aca4 <opt_j+0x78>
    ad74:	add	sp, sp, #12
    ad78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ad7c:	cmp	r1, #21
    ad80:	movne	r2, #0
    ad84:	andeq	r2, r2, #1
    ad88:	cmp	r2, #0
    ad8c:	bne	ad38 <opt_j+0x10c>
    ad90:	b	acc0 <opt_j+0x94>
    ad94:	.word	0x000223bc
    ad98:	.word	0x00022ac0
    ad9c:	.word	0x00022ab0
    ada0:	.word	0x00022aa4
    ada4:	.word	0x000000ec

0000ada8 <opt_loop>:
    ada8:	ldr	r3, [pc, #3972]	; bd34 <opt_loop+0xf8c>
    adac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    adb0:	sub	sp, sp, #140	; 0x8c
    adb4:	add	r3, pc, r3
    adb8:	str	r3, [sp, #16]
    adbc:	ldr	r3, [pc, #3956]	; bd38 <opt_loop+0xf90>
    adc0:	mov	r4, r1
    adc4:	add	r3, pc, r3
    adc8:	str	r3, [sp, #12]
    adcc:	ldr	r3, [pc, #3944]	; bd3c <opt_loop+0xf94>
    add0:	mov	sl, #1
    add4:	add	r3, pc, r3
    add8:	str	r3, [sp, #56]	; 0x38
    addc:	ldr	r3, [pc, #3932]	; bd40 <opt_loop+0xf98>
    ade0:	str	r0, [sp, #4]
    ade4:	add	r3, pc, r3
    ade8:	str	r3, [sp, #36]	; 0x24
    adec:	add	r3, r3, #8
    adf0:	str	r3, [sp, #60]	; 0x3c
    adf4:	ldr	r3, [sp, #12]
    adf8:	ldr	r2, [sp, #16]
    adfc:	mov	r1, #0
    ae00:	ldr	r6, [r3, #864]	; 0x360
    ae04:	str	sl, [r3, #868]	; 0x364
    ae08:	ldr	r3, [pc, #3892]	; bd44 <opt_loop+0xf9c>
    ae0c:	ldr	r3, [r2, r3]
    ae10:	lsl	r2, r6, #2
    ae14:	str	r3, [sp, #8]
    ae18:	ldr	r0, [r3]
    ae1c:	bl	eb4 <memset@plt>
    ae20:	ldr	r3, [sp, #12]
    ae24:	ldr	r2, [sp, #12]
    ae28:	ldr	r0, [sp, #4]
    ae2c:	ldr	r3, [r3]
    ae30:	add	r3, r3, #1
    ae34:	str	r3, [r2]
    ae38:	bl	a144 <find_levels_r>
    ae3c:	ldr	r3, [sp, #12]
    ae40:	mvn	r0, #0
    ae44:	ldr	r5, [r3, #884]	; 0x374
    ae48:	ldr	r1, [r3, #880]	; 0x370
    ae4c:	mul	r2, r6, r5
    ae50:	mov	r3, r2
    ae54:	subs	r3, r3, #1
    ae58:	bpl	b00c <opt_loop+0x264>
    ae5c:	lsl	r1, r5, #2
    ae60:	mov	r3, r5
    ae64:	mov	r0, #0
    ae68:	subs	r3, r3, #1
    ae6c:	sub	r1, r1, #4
    ae70:	bpl	b014 <opt_loop+0x26c>
    ae74:	ldr	r3, [sp, #4]
    ae78:	ldr	r1, [r3, #36]	; 0x24
    ae7c:	lsl	r0, r1, #2
    ae80:	cmp	r1, #0
    ae84:	bge	b024 <opt_loop+0x27c>
    ae88:	ldr	r3, [sp, #56]	; 0x38
    ae8c:	lsl	r2, r2, #2
    ae90:	mov	r1, #0
    ae94:	ldr	r0, [r3, #888]	; 0x378
    ae98:	bl	eb4 <memset@plt>
    ae9c:	ldr	r3, [sp, #4]
    aea0:	ldr	r2, [r3, #36]	; 0x24
    aea4:	lsl	r1, r2, #2
    aea8:	cmp	r2, #0
    aeac:	bge	b0c0 <opt_loop+0x318>
    aeb0:	ldr	r3, [sp, #4]
    aeb4:	ldr	r3, [r3, #36]	; 0x24
    aeb8:	str	r3, [sp, #20]
    aebc:	ldr	r3, [sp, #8]
    aec0:	ldr	r7, [sp, #20]
    aec4:	ldr	r9, [r3]
    aec8:	cmp	r7, #0
    aecc:	bge	b15c <opt_loop+0x3b4>
    aed0:	mov	r1, #1
    aed4:	ldr	r3, [sp, #20]
    aed8:	cmp	r3, r1
    aedc:	bge	b264 <opt_loop+0x4bc>
    aee0:	ldr	r3, [pc, #3680]	; bd48 <opt_loop+0xfa0>
    aee4:	mvn	r1, #0
    aee8:	add	r3, pc, r3
    aeec:	ldr	r5, [r3, #4]
    aef0:	ldr	r2, [r3, #892]	; 0x37c
    aef4:	ldr	r3, [r3, #896]	; 0x380
    aef8:	mul	r3, r3, r5
    aefc:	subs	r3, r3, #1
    af00:	bpl	b2b0 <opt_loop+0x508>
    af04:	ldr	r3, [sp, #4]
    af08:	lsl	r5, r5, #2
    af0c:	mov	r2, r5
    af10:	mov	r1, #0
    af14:	ldr	r0, [r3, #56]	; 0x38
    af18:	bl	eb4 <memset@plt>
    af1c:	ldr	r3, [sp, #4]
    af20:	mov	r2, r5
    af24:	mov	r1, #0
    af28:	ldr	r0, [r3, #80]	; 0x50
    af2c:	bl	eb4 <memset@plt>
    af30:	ldr	r3, [sp, #4]
    af34:	ldr	r6, [r3, #36]	; 0x24
    af38:	lsl	r7, r6, #2
    af3c:	cmp	r6, #0
    af40:	bge	b2b8 <opt_loop+0x510>
    af44:	ldr	r3, [sp, #36]	; 0x24
    af48:	mov	r5, #0
    af4c:	ldr	r2, [sp, #16]
    af50:	str	r5, [r3, #860]	; 0x35c
    af54:	ldr	r3, [pc, #3568]	; bd4c <opt_loop+0xfa4>
    af58:	ldr	r1, [sp, #16]
    af5c:	ldr	r3, [r2, r3]
    af60:	ldr	r2, [pc, #3560]	; bd50 <opt_loop+0xfa8>
    af64:	ldr	r2, [r1, r2]
    af68:	ldr	r2, [r2]
    af6c:	str	r2, [r3]
    af70:	ldr	r3, [sp, #36]	; 0x24
    af74:	ldr	r2, [r3, #900]	; 0x384
    af78:	ldr	r3, [pc, #3540]	; bd54 <opt_loop+0xfac>
    af7c:	lsl	r2, r2, #3
    af80:	ldr	r6, [r1, r3]
    af84:	mov	r1, r5
    af88:	ldr	r0, [r6]
    af8c:	bl	eb4 <memset@plt>
    af90:	mov	r2, #852	; 0x354
    af94:	mov	r1, r5
    af98:	ldr	r0, [sp, #60]	; 0x3c
    af9c:	bl	eb4 <memset@plt>
    afa0:	ldr	r3, [sp, #4]
    afa4:	ldr	r2, [r3, #36]!	; 0x24
    afa8:	mov	r0, r3
    afac:	str	r3, [sp, #24]
    afb0:	str	r2, [sp, #20]
    afb4:	bl	ab7c <find_inedges.isra.2>
    afb8:	ldr	r3, [sp, #20]
    afbc:	lsl	r3, r3, #2
    afc0:	str	r3, [sp, #32]
    afc4:	ldr	r3, [sp, #20]
    afc8:	str	r3, [sp, #28]
    afcc:	ldr	r3, [pc, #3460]	; bd58 <opt_loop+0xfb0>
    afd0:	add	r3, pc, r3
    afd4:	str	r3, [sp, #52]	; 0x34
    afd8:	ldr	r3, [sp, #28]
    afdc:	cmp	r3, #0
    afe0:	bge	b2ec <opt_loop+0x544>
    afe4:	cmp	r4, #0
    afe8:	moveq	r6, #1
    afec:	beq	bdb8 <opt_loop+0x1010>
    aff0:	ldr	r3, [pc, #3428]	; bd5c <opt_loop+0xfb4>
    aff4:	add	r3, pc, r3
    aff8:	ldr	r3, [r3, #868]	; 0x364
    affc:	cmp	r3, #0
    b000:	beq	adf4 <opt_loop+0x4c>
    b004:	add	sp, sp, #140	; 0x8c
    b008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b00c:	str	r0, [r1], #4
    b010:	b	ae54 <opt_loop+0xac>
    b014:	ldr	ip, [sp, #4]
    b018:	ldr	ip, [ip, #104]	; 0x68
    b01c:	str	r0, [ip, r1]
    b020:	b	ae68 <opt_loop+0xc0>
    b024:	ldr	r3, [sp, #8]
    b028:	ldr	r3, [r3]
    b02c:	ldr	r3, [r3, r0]
    b030:	cmp	r3, #0
    b034:	subeq	r1, r1, #1
    b038:	subeq	r0, r0, #4
    b03c:	beq	ae80 <opt_loop+0xd8>
    b040:	ldr	ip, [r3]
    b044:	ldr	r6, [r3, #104]	; 0x68
    b048:	lsr	r7, ip, #5
    b04c:	and	ip, ip, #31
    b050:	ldr	lr, [r6, r7, lsl #2]
    b054:	orr	ip, lr, sl, lsl ip
    b058:	str	ip, [r6, r7, lsl #2]
    b05c:	ldr	ip, [r3, #60]	; 0x3c
    b060:	cmp	ip, #0
    b064:	ldrne	lr, [ip, #104]	; 0x68
    b068:	ldrne	r7, [r3, #104]	; 0x68
    b06c:	movne	ip, r5
    b070:	bne	b08c <opt_loop+0x2e4>
    b074:	ldr	r3, [r3, #100]	; 0x64
    b078:	b	b030 <opt_loop+0x288>
    b07c:	ldr	r6, [lr], #4
    b080:	ldr	r8, [r7], #4
    b084:	and	r6, r6, r8
    b088:	str	r6, [lr, #-4]
    b08c:	subs	ip, ip, #1
    b090:	bpl	b07c <opt_loop+0x2d4>
    b094:	ldr	ip, [r3, #84]	; 0x54
    b098:	ldr	r7, [r3, #104]	; 0x68
    b09c:	ldr	lr, [ip, #104]	; 0x68
    b0a0:	mov	ip, r5
    b0a4:	subs	ip, ip, #1
    b0a8:	bmi	b074 <opt_loop+0x2cc>
    b0ac:	ldr	r6, [lr], #4
    b0b0:	ldr	r8, [r7], #4
    b0b4:	and	r6, r6, r8
    b0b8:	str	r6, [lr, #-4]
    b0bc:	b	b0a4 <opt_loop+0x2fc>
    b0c0:	ldr	r3, [sp, #8]
    b0c4:	ldr	r3, [r3]
    b0c8:	ldr	r3, [r3, r1]
    b0cc:	cmp	r3, #0
    b0d0:	subeq	r2, r2, #1
    b0d4:	subeq	r1, r1, #4
    b0d8:	beq	aea8 <opt_loop+0x100>
    b0dc:	ldr	r0, [r3]
    b0e0:	ldr	lr, [r3, #108]	; 0x6c
    b0e4:	lsr	r6, r0, #5
    b0e8:	and	r0, r0, #31
    b0ec:	ldr	ip, [lr, r6, lsl #2]
    b0f0:	orr	r0, ip, sl, lsl r0
    b0f4:	str	r0, [lr, r6, lsl #2]
    b0f8:	ldr	r0, [r3, #60]	; 0x3c
    b0fc:	cmp	r0, #0
    b100:	ldrne	ip, [r0, #108]	; 0x6c
    b104:	ldrne	r6, [r3, #108]	; 0x6c
    b108:	movne	r0, r5
    b10c:	bne	b128 <opt_loop+0x380>
    b110:	ldr	r3, [r3, #100]	; 0x64
    b114:	b	b0cc <opt_loop+0x324>
    b118:	ldr	lr, [ip], #4
    b11c:	ldr	r7, [r6], #4
    b120:	orr	lr, lr, r7
    b124:	str	lr, [ip, #-4]
    b128:	subs	r0, r0, #1
    b12c:	bpl	b118 <opt_loop+0x370>
    b130:	ldr	r0, [r3, #84]	; 0x54
    b134:	ldr	r6, [r3, #108]	; 0x6c
    b138:	ldr	ip, [r0, #108]	; 0x6c
    b13c:	mov	r0, r5
    b140:	subs	r0, r0, #1
    b144:	bmi	b110 <opt_loop+0x368>
    b148:	ldr	lr, [ip], #4
    b14c:	ldr	r7, [r6], #4
    b150:	orr	lr, lr, r7
    b154:	str	lr, [ip, #-4]
    b158:	b	b140 <opt_loop+0x398>
    b15c:	ldr	r5, [r9, r7, lsl #2]
    b160:	cmp	r5, #0
    b164:	subeq	r7, r7, #1
    b168:	beq	aec8 <opt_loop+0x120>
    b16c:	mov	r8, #0
    b170:	ldr	fp, [r5, #4]
    b174:	mov	r1, r8
    b178:	mov	r6, r8
    b17c:	cmp	fp, #0
    b180:	bne	b1d8 <opt_loop+0x430>
    b184:	ldr	r2, [r5, #8]
    b188:	and	r2, r2, #7
    b18c:	cmp	r2, #5
    b190:	bne	b1bc <opt_loop+0x414>
    b194:	add	r0, r5, #8
    b198:	bl	a614 <atomuse>
    b19c:	cmp	r0, #0
    b1a0:	blt	b1bc <opt_loop+0x414>
    b1a4:	cmp	r0, #18
    b1a8:	bne	b24c <opt_loop+0x4a4>
    b1ac:	tst	r6, #131072	; 0x20000
    b1b0:	orreq	r1, r1, #131072	; 0x20000
    b1b4:	tst	r6, #65536	; 0x10000
    b1b8:	orreq	r1, r1, #65536	; 0x10000
    b1bc:	mov	r3, #0
    b1c0:	str	r6, [r5, #116]	; 0x74
    b1c4:	str	r8, [r5, #120]	; 0x78
    b1c8:	str	r1, [r5, #124]	; 0x7c
    b1cc:	str	r3, [r5, #128]	; 0x80
    b1d0:	ldr	r5, [r5, #100]	; 0x64
    b1d4:	b	b160 <opt_loop+0x3b8>
    b1d8:	ldr	r2, [fp]
    b1dc:	cmn	r2, #1
    b1e0:	beq	b22c <opt_loop+0x484>
    b1e4:	mov	r0, fp
    b1e8:	bl	a614 <atomuse>
    b1ec:	cmp	r0, #0
    b1f0:	blt	b20c <opt_loop+0x464>
    b1f4:	cmp	r0, #18
    b1f8:	bne	b234 <opt_loop+0x48c>
    b1fc:	tst	r6, #131072	; 0x20000
    b200:	orreq	r1, r1, #131072	; 0x20000
    b204:	tst	r6, #65536	; 0x10000
    b208:	orreq	r1, r1, #65536	; 0x10000
    b20c:	mov	r0, fp
    b210:	bl	a26c <atomdef>
    b214:	cmp	r0, #0
    b218:	blt	b22c <opt_loop+0x484>
    b21c:	lsl	r0, sl, r0
    b220:	tst	r0, r1
    b224:	orreq	r8, r8, r0
    b228:	orr	r6, r6, r0
    b22c:	ldr	fp, [fp, #16]
    b230:	b	b17c <opt_loop+0x3d4>
    b234:	cmp	r0, #17
    b238:	bgt	bba4 <opt_loop+0xdfc>
    b23c:	lsl	r0, sl, r0
    b240:	tst	r6, r0
    b244:	orreq	r1, r1, r0
    b248:	b	b20c <opt_loop+0x464>
    b24c:	cmp	r0, #17
    b250:	bgt	bba4 <opt_loop+0xdfc>
    b254:	lsl	r0, sl, r0
    b258:	tst	r6, r0
    b25c:	orreq	r1, r1, r0
    b260:	b	b1bc <opt_loop+0x414>
    b264:	ldr	r3, [r9, r1, lsl #2]
    b268:	cmp	r3, #0
    b26c:	addeq	r1, r1, #1
    b270:	beq	aed4 <opt_loop+0x12c>
    b274:	ldr	r2, [r3, #60]	; 0x3c
    b278:	ldr	r0, [r3, #84]	; 0x54
    b27c:	ldr	r2, [r2, #124]	; 0x7c
    b280:	ldr	r0, [r0, #124]	; 0x7c
    b284:	orr	r2, r2, r0
    b288:	ldr	r0, [r3, #128]	; 0x80
    b28c:	orr	r2, r2, r0
    b290:	ldr	r0, [r3, #120]	; 0x78
    b294:	str	r2, [r3, #128]	; 0x80
    b298:	bic	r2, r2, r0
    b29c:	ldr	r0, [r3, #124]	; 0x7c
    b2a0:	orr	r2, r0, r2
    b2a4:	str	r2, [r3, #124]	; 0x7c
    b2a8:	ldr	r3, [r3, #100]	; 0x64
    b2ac:	b	b268 <opt_loop+0x4c0>
    b2b0:	str	r1, [r2, r3, lsl #2]
    b2b4:	b	aefc <opt_loop+0x154>
    b2b8:	ldr	r3, [sp, #8]
    b2bc:	ldr	r3, [r3]
    b2c0:	ldr	r5, [r3, r7]
    b2c4:	cmp	r5, #0
    b2c8:	subeq	r6, r6, #1
    b2cc:	subeq	r7, r7, #4
    b2d0:	beq	af3c <opt_loop+0x194>
    b2d4:	add	r0, r5, #48	; 0x30
    b2d8:	bl	a1d8 <propedom>
    b2dc:	add	r0, r5, #72	; 0x48
    b2e0:	bl	a1d8 <propedom>
    b2e4:	ldr	r5, [r5, #100]	; 0x64
    b2e8:	b	b2c4 <opt_loop+0x51c>
    b2ec:	ldr	r3, [sp, #8]
    b2f0:	ldr	r2, [sp, #32]
    b2f4:	ldr	r3, [r3]
    b2f8:	ldr	r5, [r3, r2]
    b2fc:	ldr	r3, [pc, #2652]	; bd60 <opt_loop+0xfb8>
    b300:	add	r3, pc, r3
    b304:	str	r3, [sp, #48]	; 0x30
    b308:	cmp	r5, #0
    b30c:	bne	b32c <opt_loop+0x584>
    b310:	ldr	r3, [sp, #28]
    b314:	sub	r3, r3, #1
    b318:	str	r3, [sp, #28]
    b31c:	ldr	r3, [sp, #32]
    b320:	sub	r3, r3, #4
    b324:	str	r3, [sp, #32]
    b328:	b	afd8 <opt_loop+0x230>
    b32c:	ldr	r7, [r5, #112]	; 0x70
    b330:	add	r0, r5, #136	; 0x88
    b334:	cmp	r7, #0
    b338:	bne	b428 <opt_loop+0x680>
    b33c:	mov	r2, #72	; 0x48
    b340:	mov	r1, r7
    b344:	bl	eb4 <memset@plt>
    b348:	ldr	r3, [r5, #200]	; 0xc8
    b34c:	ldr	fp, [r5, #204]	; 0xcc
    b350:	str	r3, [sp, #40]	; 0x28
    b354:	ldr	r8, [r5, #4]
    b358:	ldr	r3, [pc, #2564]	; bd64 <opt_loop+0xfbc>
    b35c:	add	r3, pc, r3
    b360:	str	r3, [sp, #44]	; 0x2c
    b364:	cmp	r8, #0
    b368:	bne	b47c <opt_loop+0x6d4>
    b36c:	cmp	r4, #0
    b370:	beq	b934 <opt_loop+0xb8c>
    b374:	ldr	r2, [sp, #40]	; 0x28
    b378:	ldr	r3, [r5, #128]	; 0x80
    b37c:	cmp	r2, #0
    b380:	clz	r3, r3
    b384:	lsr	r3, r3, #5
    b388:	moveq	r3, #0
    b38c:	cmp	r3, #0
    b390:	beq	b3c0 <opt_loop+0x618>
    b394:	ldr	r3, [r5, #200]	; 0xc8
    b398:	cmp	fp, #0
    b39c:	sub	r2, r3, r2
    b3a0:	clz	r2, r2
    b3a4:	lsr	r2, r2, #5
    b3a8:	moveq	r2, #0
    b3ac:	cmp	r2, #0
    b3b0:	beq	b3c0 <opt_loop+0x618>
    b3b4:	ldr	r3, [r5, #204]	; 0xcc
    b3b8:	cmp	fp, r3
    b3bc:	beq	b3d0 <opt_loop+0x628>
    b3c0:	ldr	r3, [r5, #8]
    b3c4:	and	r3, r3, #7
    b3c8:	cmp	r3, #6
    b3cc:	bne	b934 <opt_loop+0xb8c>
    b3d0:	ldr	r3, [r5, #4]
    b3d4:	cmp	r3, #0
    b3d8:	ldrne	r2, [pc, #2440]	; bd68 <opt_loop+0xfc0>
    b3dc:	movne	r3, #0
    b3e0:	addne	r2, pc, r2
    b3e4:	strne	r3, [r5, #4]
    b3e8:	strne	r3, [r2, #868]	; 0x364
    b3ec:	ldr	r2, [r5, #8]
    b3f0:	ands	r2, r2, #8
    b3f4:	ldrne	r3, [r5, #204]	; 0xcc
    b3f8:	strne	r3, [r5, #132]	; 0x84
    b3fc:	bne	b410 <opt_loop+0x668>
    b400:	ldr	r1, [r5, #20]
    b404:	mov	r0, r2
    b408:	bl	a2dc <F>
    b40c:	str	r0, [r5, #132]	; 0x84
    b410:	ldr	r3, [r5, #8]
    b414:	str	r3, [r5, #52]	; 0x34
    b418:	rsb	r3, r3, #0
    b41c:	str	r3, [r5, #76]	; 0x4c
    b420:	ldr	r5, [r5, #100]	; 0x64
    b424:	b	b308 <opt_loop+0x560>
    b428:	ldr	r1, [r7, #16]
    b42c:	mov	r2, #72	; 0x48
    b430:	add	r1, r1, #136	; 0x88
    b434:	bl	de8 <memcpy@plt>
    b438:	mov	r0, #0
    b43c:	ldr	r7, [r7, #20]
    b440:	cmp	r7, #0
    b444:	beq	b348 <opt_loop+0x5a0>
    b448:	add	r2, r5, #136	; 0x88
    b44c:	mov	r3, #0
    b450:	ldr	ip, [r7, #16]
    b454:	add	r1, r3, #34	; 0x22
    b458:	ldr	lr, [r2]
    b45c:	ldr	r1, [ip, r1, lsl #2]
    b460:	add	r3, r3, #1
    b464:	cmp	lr, r1
    b468:	strne	r0, [r2]
    b46c:	cmp	r3, #18
    b470:	add	r2, r2, #4
    b474:	bne	b450 <opt_loop+0x6a8>
    b478:	b	b43c <opt_loop+0x694>
    b47c:	ldr	r7, [r8]
    b480:	add	r1, r5, #136	; 0x88
    b484:	cmp	r7, #64	; 0x40
    b488:	beq	b6c0 <opt_loop+0x918>
    b48c:	bgt	b5ec <opt_loop+0x844>
    b490:	cmp	r7, #20
    b494:	beq	b4ec <opt_loop+0x744>
    b498:	bgt	b544 <opt_loop+0x79c>
    b49c:	cmp	r7, #3
    b4a0:	beq	b924 <opt_loop+0xb7c>
    b4a4:	bgt	b4cc <opt_loop+0x724>
    b4a8:	cmp	r7, #1
    b4ac:	beq	b730 <opt_loop+0x988>
    b4b0:	bgt	b910 <opt_loop+0xb68>
    b4b4:	cmp	r7, #0
    b4b8:	moveq	r2, #0
    b4bc:	ldreq	r1, [r8, #12]
    b4c0:	beq	b854 <opt_loop+0xaac>
    b4c4:	ldr	r8, [r8, #16]
    b4c8:	b	b364 <opt_loop+0x5bc>
    b4cc:	cmp	r7, #7
    b4d0:	moveq	r3, r4
    b4d4:	ldreq	r2, [r5, #200]	; 0xc8
    b4d8:	beq	b6a8 <opt_loop+0x900>
    b4dc:	cmp	r7, #12
    b4e0:	beq	b568 <opt_loop+0x7c0>
    b4e4:	cmp	r7, #4
    b4e8:	bne	b4c4 <opt_loop+0x71c>
    b4ec:	cmp	r4, #0
    b4f0:	beq	b7d8 <opt_loop+0xa30>
    b4f4:	ldr	r1, [r8, #12]
    b4f8:	cmp	r1, #0
    b4fc:	bne	b79c <opt_loop+0x9f4>
    b500:	tst	r7, #176	; 0xb0
    b504:	and	r3, r7, #224	; 0xe0
    b508:	moveq	r2, #1
    b50c:	movne	r2, #0
    b510:	cmp	r3, #96	; 0x60
    b514:	orreq	r2, r2, #1
    b518:	cmp	r2, #0
    b51c:	mvnne	r3, #0
    b520:	strne	r3, [r8]
    b524:	bne	b4c4 <opt_loop+0x71c>
    b528:	and	r3, r7, #240	; 0xf0
    b52c:	cmp	r3, #80	; 0x50
    b530:	cmpne	r3, #32
    b534:	bne	b79c <opt_loop+0x9f4>
    b538:	str	r2, [r8]
    b53c:	mov	r1, r2
    b540:	b	b77c <opt_loop+0x9d4>
    b544:	cmp	r7, #40	; 0x28
    b548:	beq	b6b0 <opt_loop+0x908>
    b54c:	bgt	b5c8 <opt_loop+0x820>
    b550:	cmp	r7, #32
    b554:	beq	b6b0 <opt_loop+0x908>
    b558:	cmp	r7, #36	; 0x24
    b55c:	beq	b4ec <opt_loop+0x744>
    b560:	cmp	r7, #28
    b564:	bne	b4c4 <opt_loop+0x71c>
    b568:	cmp	r4, #0
    b56c:	beq	b85c <opt_loop+0xab4>
    b570:	ldr	r3, [r6]
    b574:	ldr	r2, [r5, #204]	; 0xcc
    b578:	and	r0, r7, #240	; 0xf0
    b57c:	ldr	r1, [r3, r2, lsl #3]
    b580:	cmp	r1, #0
    b584:	ldr	r1, [r5, #200]	; 0xc8
    b588:	beq	b7fc <opt_loop+0xa54>
    b58c:	ldr	r3, [r3, r1, lsl #3]
    b590:	cmp	r3, #0
    b594:	bne	b7c4 <opt_loop+0xa1c>
    b598:	orr	r7, r0, #4
    b59c:	str	r7, [r8]
    b5a0:	ldr	r1, [r5, #204]	; 0xcc
    b5a4:	ldr	r2, [r6]
    b5a8:	add	r2, r2, r1, lsl #3
    b5ac:	ldr	r1, [r2, #4]
    b5b0:	ldr	r2, [sp, #48]	; 0x30
    b5b4:	str	r1, [r8, #12]
    b5b8:	ldr	r9, [r5, #200]	; 0xc8
    b5bc:	str	r3, [r2, #868]	; 0x364
    b5c0:	mov	r2, r3
    b5c4:	b	b7e4 <opt_loop+0xa3c>
    b5c8:	cmp	r7, #48	; 0x30
    b5cc:	beq	b6b0 <opt_loop+0x908>
    b5d0:	bgt	b5dc <opt_loop+0x834>
    b5d4:	cmp	r7, #44	; 0x2c
    b5d8:	b	b564 <opt_loop+0x7bc>
    b5dc:	cmp	r7, #52	; 0x34
    b5e0:	beq	b4ec <opt_loop+0x744>
    b5e4:	cmp	r7, #60	; 0x3c
    b5e8:	b	b564 <opt_loop+0x7bc>
    b5ec:	cmp	r7, #97	; 0x61
    b5f0:	beq	b8c4 <opt_loop+0xb1c>
    b5f4:	bgt	b634 <opt_loop+0x88c>
    b5f8:	cmp	r7, #80	; 0x50
    b5fc:	beq	b6c0 <opt_loop+0x918>
    b600:	bgt	b61c <opt_loop+0x874>
    b604:	cmp	r7, #72	; 0x48
    b608:	beq	b6c0 <opt_loop+0x918>
    b60c:	cmp	r7, #76	; 0x4c
    b610:	beq	b568 <opt_loop+0x7c0>
    b614:	cmp	r7, #68	; 0x44
    b618:	b	b4e8 <opt_loop+0x740>
    b61c:	cmp	r7, #92	; 0x5c
    b620:	beq	b568 <opt_loop+0x7c0>
    b624:	cmp	r7, #96	; 0x60
    b628:	beq	b874 <opt_loop+0xacc>
    b62c:	cmp	r7, #84	; 0x54
    b630:	b	b4e8 <opt_loop+0x740>
    b634:	cmp	r7, #124	; 0x7c
    b638:	beq	b568 <opt_loop+0x7c0>
    b63c:	bgt	b658 <opt_loop+0x8b0>
    b640:	cmp	r7, #108	; 0x6c
    b644:	beq	b568 <opt_loop+0x7c0>
    b648:	cmp	r7, #116	; 0x74
    b64c:	beq	b4ec <opt_loop+0x744>
    b650:	cmp	r7, #100	; 0x64
    b654:	b	b4e8 <opt_loop+0x740>
    b658:	cmp	r7, #132	; 0x84
    b65c:	beq	b740 <opt_loop+0x998>
    b660:	bgt	b680 <opt_loop+0x8d8>
    b664:	cmp	r7, #128	; 0x80
    b668:	moveq	r2, #0
    b66c:	moveq	r1, r2
    b670:	moveq	r0, #128	; 0x80
    b674:	bne	b4c4 <opt_loop+0x71c>
    b678:	bl	a2dc <F>
    b67c:	b	b718 <opt_loop+0x970>
    b680:	cmp	r7, #135	; 0x87
    b684:	beq	b868 <opt_loop+0xac0>
    b688:	cmp	r7, #177	; 0xb1
    b68c:	moveq	r2, #0
    b690:	ldreq	r1, [r8, #12]
    b694:	moveq	r0, r7
    b698:	bne	b4c4 <opt_loop+0x71c>
    b69c:	bl	a2dc <F>
    b6a0:	mov	r3, r4
    b6a4:	mov	r2, r0
    b6a8:	add	r1, r5, #204	; 0xcc
    b6ac:	b	b724 <opt_loop+0x97c>
    b6b0:	mov	r2, #0
    b6b4:	ldr	r1, [r8, #12]
    b6b8:	mov	r0, r7
    b6bc:	b	b678 <opt_loop+0x8d0>
    b6c0:	cmp	r4, #0
    b6c4:	ldr	r2, [r5, #204]	; 0xcc
    b6c8:	beq	b6b4 <opt_loop+0x90c>
    b6cc:	ldr	r3, [r6]
    b6d0:	lsl	r1, r2, #3
    b6d4:	ldr	r3, [r3, r2, lsl #3]
    b6d8:	cmp	r3, #0
    b6dc:	beq	b6b4 <opt_loop+0x90c>
    b6e0:	and	r0, r7, #24
    b6e4:	orr	r0, r0, #32
    b6e8:	str	r0, [r8]
    b6ec:	ldr	r3, [r6]
    b6f0:	mov	r2, #0
    b6f4:	add	r3, r3, r1
    b6f8:	ldr	r1, [r3, #4]
    b6fc:	ldr	r3, [r8, #12]
    b700:	add	r1, r1, r3
    b704:	str	r1, [r8, #12]
    b708:	bl	a2dc <F>
    b70c:	ldr	r2, [sp, #52]	; 0x34
    b710:	mov	r3, #0
    b714:	str	r3, [r2, #868]	; 0x364
    b718:	mov	r3, r4
    b71c:	mov	r2, r0
    b720:	add	r1, r5, #200	; 0xc8
    b724:	mov	r0, r8
    b728:	bl	ab54 <vstore.isra.0>
    b72c:	b	b4c4 <opt_loop+0x71c>
    b730:	mov	r2, #0
    b734:	ldr	r1, [r8, #12]
    b738:	mov	r0, r2
    b73c:	b	b69c <opt_loop+0x8f4>
    b740:	cmp	r4, #0
    b744:	beq	b784 <opt_loop+0x9dc>
    b748:	ldr	r2, [r5, #200]	; 0xc8
    b74c:	ldr	r3, [r6]
    b750:	ldr	r3, [r3, r2, lsl #3]
    b754:	cmp	r3, #0
    b758:	beq	b784 <opt_loop+0x9dc>
    b75c:	mov	r2, #0
    b760:	str	r2, [r8]
    b764:	ldr	r1, [r5, #200]	; 0xc8
    b768:	ldr	r3, [r6]
    b76c:	add	r3, r3, r1, lsl #3
    b770:	ldr	r1, [r3, #4]
    b774:	rsb	r1, r1, #0
    b778:	str	r1, [r8, #12]
    b77c:	mov	r0, r2
    b780:	b	b790 <opt_loop+0x9e8>
    b784:	ldr	r1, [r5, #200]	; 0xc8
    b788:	mov	r2, #0
    b78c:	mov	r0, #132	; 0x84
    b790:	bl	a2dc <F>
    b794:	str	r0, [r5, #200]	; 0xc8
    b798:	b	b4c4 <opt_loop+0x71c>
    b79c:	ldr	r9, [r5, #200]	; 0xc8
    b7a0:	ldr	r3, [r6]
    b7a4:	ldr	r3, [r3, r9, lsl #3]
    b7a8:	cmp	r3, #0
    b7ac:	beq	b7d8 <opt_loop+0xa30>
    b7b0:	mov	r2, #0
    b7b4:	mov	r0, r2
    b7b8:	bl	a2dc <F>
    b7bc:	mov	r1, r9
    b7c0:	mov	r2, r0
    b7c4:	mov	r0, r8
    b7c8:	bl	a720 <fold_op>
    b7cc:	mov	r2, #0
    b7d0:	ldr	r1, [r8, #12]
    b7d4:	b	b77c <opt_loop+0x9d4>
    b7d8:	ldr	r9, [r5, #200]	; 0xc8
    b7dc:	ldr	r1, [r8, #12]
    b7e0:	mov	r2, #0
    b7e4:	mov	r0, r2
    b7e8:	bl	a2dc <F>
    b7ec:	mov	r1, r9
    b7f0:	mov	r2, r0
    b7f4:	mov	r0, r7
    b7f8:	b	b790 <opt_loop+0x9e8>
    b7fc:	add	r2, r3, r1, lsl #3
    b800:	ldr	r3, [r3, r1, lsl #3]
    b804:	cmp	r3, #0
    b808:	beq	b85c <opt_loop+0xab4>
    b80c:	ldr	r3, [r2, #4]
    b810:	cmp	r3, #0
    b814:	bne	b85c <opt_loop+0xab4>
    b818:	tst	r7, #176	; 0xb0
    b81c:	moveq	r3, #135	; 0x87
    b820:	streq	r3, [r8]
    b824:	beq	b868 <opt_loop+0xac0>
    b828:	and	r3, r7, #224	; 0xe0
    b82c:	cmp	r3, #32
    b830:	beq	b844 <opt_loop+0xa9c>
    b834:	and	r3, r7, #208	; 0xd0
    b838:	cmp	r0, #96	; 0x60
    b83c:	cmpne	r3, #80	; 0x50
    b840:	bne	b85c <opt_loop+0xab4>
    b844:	mov	r2, #0
    b848:	mov	r1, r2
    b84c:	str	r2, [r8]
    b850:	str	r2, [r8, #12]
    b854:	mov	r0, r2
    b858:	b	b678 <opt_loop+0x8d0>
    b85c:	ldr	r2, [r5, #204]	; 0xcc
    b860:	ldr	r1, [r5, #200]	; 0xc8
    b864:	b	b7f4 <opt_loop+0xa4c>
    b868:	mov	r3, r4
    b86c:	ldr	r2, [r5, #204]	; 0xcc
    b870:	b	b720 <opt_loop+0x978>
    b874:	ldr	r3, [r8, #12]
    b878:	cmp	r4, #0
    b87c:	ldr	r2, [r1, r3, lsl #2]
    b880:	beq	b8bc <opt_loop+0xb14>
    b884:	ldr	r3, [r6]
    b888:	lsl	r0, r2, #3
    b88c:	ldr	r3, [r3, r2, lsl #3]
    b890:	cmp	r3, #0
    b894:	beq	b8bc <opt_loop+0xb14>
    b898:	mov	r1, #0
    b89c:	str	r1, [r8]
    b8a0:	ldr	r3, [r6]
    b8a4:	add	r3, r3, r0
    b8a8:	ldr	r3, [r3, #4]
    b8ac:	str	r3, [r8, #12]
    b8b0:	ldr	r3, [pc, #1204]	; bd6c <opt_loop+0xfc4>
    b8b4:	add	r3, pc, r3
    b8b8:	str	r1, [r3, #868]	; 0x364
    b8bc:	mov	r3, r4
    b8c0:	b	b720 <opt_loop+0x978>
    b8c4:	ldr	r3, [r8, #12]
    b8c8:	cmp	r4, #0
    b8cc:	ldr	r2, [r1, r3, lsl #2]
    b8d0:	beq	b908 <opt_loop+0xb60>
    b8d4:	ldr	r3, [r6]
    b8d8:	lsl	r1, r2, #3
    b8dc:	ldr	r3, [r3, r2, lsl #3]
    b8e0:	cmp	r3, #0
    b8e4:	beq	b908 <opt_loop+0xb60>
    b8e8:	str	sl, [r8]
    b8ec:	ldr	r3, [r6]
    b8f0:	add	r3, r3, r1
    b8f4:	ldr	r1, [sp, #44]	; 0x2c
    b8f8:	ldr	r3, [r3, #4]
    b8fc:	str	r3, [r8, #12]
    b900:	mov	r3, #0
    b904:	str	r3, [r1, #868]	; 0x364
    b908:	mov	r3, r4
    b90c:	b	b6a8 <opt_loop+0x900>
    b910:	ldr	r0, [r8, #12]
    b914:	ldr	r2, [r5, #200]	; 0xc8
    b918:	mov	r3, r4
    b91c:	add	r1, r1, r0, lsl #2
    b920:	b	b724 <opt_loop+0x97c>
    b924:	ldr	r0, [r8, #12]
    b928:	mov	r3, r4
    b92c:	ldr	r2, [r5, #204]	; 0xcc
    b930:	b	b91c <opt_loop+0xb74>
    b934:	ldr	r7, [r5, #4]
    b938:	cmp	r7, #0
    b93c:	beq	bc74 <opt_loop+0xecc>
    b940:	ldr	r9, [pc, #1064]	; bd70 <opt_loop+0xfc8>
    b944:	ldr	r8, [pc, #1064]	; bd74 <opt_loop+0xfcc>
    b948:	ldr	r3, [pc, #1064]	; bd78 <opt_loop+0xfd0>
    b94c:	add	r9, pc, r9
    b950:	add	r8, pc, r8
    b954:	add	r3, pc, r3
    b958:	str	r3, [sp, #40]	; 0x28
    b95c:	mov	r0, r7
    b960:	bl	a3e8 <this_op>
    b964:	subs	r1, r0, #0
    b968:	beq	ba88 <opt_loop+0xce0>
    b96c:	ldr	r0, [r1, #16]
    b970:	bl	a3e8 <this_op>
    b974:	subs	r2, r0, #0
    b978:	beq	ba88 <opt_loop+0xce0>
    b97c:	ldr	r3, [r1]
    b980:	cmp	r3, #2
    b984:	bne	b9b0 <opt_loop+0xc08>
    b988:	ldr	r3, [r2]
    b98c:	cmp	r3, #97	; 0x61
    b990:	bne	b9b0 <opt_loop+0xc08>
    b994:	ldr	r3, [r2, #12]
    b998:	ldr	r0, [r1, #12]
    b99c:	cmp	r0, r3
    b9a0:	moveq	r3, #0
    b9a4:	streq	r3, [r9, #868]	; 0x364
    b9a8:	moveq	r3, #7
    b9ac:	streq	r3, [r2]
    b9b0:	ldr	r3, [r1]
    b9b4:	cmp	r3, #0
    b9b8:	bne	b9d8 <opt_loop+0xc30>
    b9bc:	ldr	r0, [r2]
    b9c0:	cmp	r0, #7
    b9c4:	moveq	r0, #135	; 0x87
    b9c8:	streq	sl, [r1]
    b9cc:	streq	r0, [r2]
    b9d0:	ldreq	r0, [sp, #40]	; 0x28
    b9d4:	streq	r3, [r0, #868]	; 0x364
    b9d8:	ldr	r3, [r1]
    b9dc:	cmp	r3, #0
    b9e0:	bne	ba80 <opt_loop+0xcd8>
    b9e4:	ldr	r3, [r5, #128]	; 0x80
    b9e8:	tst	r3, #131072	; 0x20000
    b9ec:	bne	ba80 <opt_loop+0xcd8>
    b9f0:	ldr	r3, [r2]
    b9f4:	cmp	r3, #177	; 0xb1
    b9f8:	movne	r7, r2
    b9fc:	bne	ba10 <opt_loop+0xc68>
    ba00:	ldr	r0, [r2, #16]
    ba04:	bl	a3e8 <this_op>
    ba08:	subs	r7, r0, #0
    ba0c:	beq	ba80 <opt_loop+0xcd8>
    ba10:	ldr	r3, [r7]
    ba14:	cmp	r3, #12
    ba18:	bne	ba80 <opt_loop+0xcd8>
    ba1c:	ldr	r0, [r7, #16]
    ba20:	bl	a3e8 <this_op>
    ba24:	subs	fp, r0, #0
    ba28:	beq	ba80 <opt_loop+0xcd8>
    ba2c:	ldr	r3, [fp]
    ba30:	cmp	r3, #7
    ba34:	bne	ba80 <opt_loop+0xcd8>
    ba38:	ldr	r0, [fp, #16]
    ba3c:	bl	a3e8 <this_op>
    ba40:	cmp	r0, #0
    ba44:	beq	ba80 <opt_loop+0xcd8>
    ba48:	ldr	r3, [r0]
    ba4c:	and	r3, r3, #231	; 0xe7
    ba50:	cmp	r3, #64	; 0x40
    ba54:	bne	ba80 <opt_loop+0xcd8>
    ba58:	ldr	r3, [r0, #12]
    ba5c:	ldr	ip, [r1, #12]
    ba60:	add	r3, r3, ip
    ba64:	str	r3, [r0, #12]
    ba68:	mvn	r3, #0
    ba6c:	str	r3, [r1]
    ba70:	str	r3, [r7]
    ba74:	str	r3, [fp]
    ba78:	mov	r3, #0
    ba7c:	str	r3, [r8, #868]	; 0x364
    ba80:	mov	r7, r2
    ba84:	b	b95c <opt_loop+0xbb4>
    ba88:	ldr	r3, [r5, #8]
    ba8c:	cmp	r3, #21
    ba90:	bne	bb10 <opt_loop+0xd68>
    ba94:	ldr	r3, [r5, #128]	; 0x80
    ba98:	ands	r3, r3, #65536	; 0x10000
    ba9c:	bne	bb10 <opt_loop+0xd68>
    baa0:	ldr	r2, [r7]
    baa4:	cmp	r2, #28
    baa8:	bne	bba8 <opt_loop+0xe00>
    baac:	ldr	r1, [r5, #204]	; 0xcc
    bab0:	ldr	r2, [r6]
    bab4:	add	r0, r2, r1, lsl #3
    bab8:	ldr	r2, [r2, r1, lsl #3]
    babc:	cmp	r2, #0
    bac0:	ldr	r2, [r5, #20]
    bac4:	beq	baec <opt_loop+0xd44>
    bac8:	ldr	r1, [r0, #4]
    bacc:	add	r2, r2, r1
    bad0:	str	r2, [r5, #20]
    bad4:	mvn	r2, #0
    bad8:	str	r2, [r7]
    badc:	ldr	r2, [pc, #664]	; bd7c <opt_loop+0xfd4>
    bae0:	add	r2, pc, r2
    bae4:	str	r3, [r2, #868]	; 0x364
    bae8:	b	bb10 <opt_loop+0xd68>
    baec:	cmp	r2, #0
    baf0:	bne	bb10 <opt_loop+0xd68>
    baf4:	mvn	r3, #0
    baf8:	str	r3, [r7]
    bafc:	mov	r3, #29
    bb00:	str	r3, [r5, #8]
    bb04:	ldr	r3, [pc, #628]	; bd80 <opt_loop+0xfd8>
    bb08:	add	r3, pc, r3
    bb0c:	str	r2, [r3, #868]	; 0x364
    bb10:	ldr	r3, [r5, #8]
    bb14:	cmp	r3, #69	; 0x45
    bb18:	bne	bb3c <opt_loop+0xd94>
    bb1c:	ldr	r2, [r5, #20]
    bb20:	cmp	r2, #0
    bb24:	ldreq	r2, [r5, #84]	; 0x54
    bb28:	streq	r2, [r5, #60]	; 0x3c
    bb2c:	beq	bb3c <opt_loop+0xd94>
    bb30:	cmn	r2, #1
    bb34:	ldreq	r2, [r5, #60]	; 0x3c
    bb38:	streq	r2, [r5, #84]	; 0x54
    bb3c:	ldr	r2, [r6]
    bb40:	ldr	r1, [r5, #204]	; 0xcc
    bb44:	add	r0, r2, r1, lsl #3
    bb48:	ldr	r1, [r2, r1, lsl #3]
    bb4c:	cmp	r1, #0
    bb50:	beq	bb68 <opt_loop+0xdc0>
    bb54:	tst	r3, #8
    bb58:	bicne	r3, r3, #8
    bb5c:	ldrne	r1, [r0, #4]
    bb60:	strne	r3, [r5, #8]
    bb64:	strne	r1, [r5, #20]
    bb68:	ldr	r3, [r5, #200]	; 0xc8
    bb6c:	add	r1, r2, r3, lsl #3
    bb70:	ldr	r3, [r2, r3, lsl #3]
    bb74:	cmp	r3, #0
    bb78:	beq	bc74 <opt_loop+0xecc>
    bb7c:	ldr	r2, [r5, #8]
    bb80:	tst	r2, #8
    bb84:	bne	bc74 <opt_loop+0xecc>
    bb88:	and	r2, r2, #240	; 0xf0
    bb8c:	cmp	r2, #32
    bb90:	ldr	r3, [r1, #4]
    bb94:	beq	bcfc <opt_loop+0xf54>
    bb98:	bgt	bc20 <opt_loop+0xe78>
    bb9c:	cmp	r2, #16
    bba0:	beq	bc3c <opt_loop+0xe94>
    bba4:	bl	f44 <abort@plt>
    bba8:	cmp	r2, #20
    bbac:	bne	bbd4 <opt_loop+0xe2c>
    bbb0:	mvn	r2, #0
    bbb4:	str	r2, [r7]
    bbb8:	ldr	r1, [r7, #12]
    bbbc:	ldr	r2, [r5, #20]
    bbc0:	add	r2, r2, r1
    bbc4:	str	r2, [r5, #20]
    bbc8:	ldr	r2, [pc, #436]	; bd84 <opt_loop+0xfdc>
    bbcc:	add	r2, pc, r2
    bbd0:	b	bae4 <opt_loop+0xd3c>
    bbd4:	cmp	r2, #84	; 0x54
    bbd8:	bne	bb10 <opt_loop+0xd68>
    bbdc:	ldr	r3, [r5, #20]
    bbe0:	cmp	r3, #0
    bbe4:	bne	bb10 <opt_loop+0xd68>
    bbe8:	ldr	r2, [r7, #12]
    bbec:	str	r2, [r5, #20]
    bbf0:	mov	r2, #69	; 0x45
    bbf4:	str	r2, [r5, #8]
    bbf8:	mvn	r2, #0
    bbfc:	str	r2, [r7]
    bc00:	ldr	r2, [pc, #384]	; bd88 <opt_loop+0xfe0>
    bc04:	add	r2, pc, r2
    bc08:	str	r3, [r2, #868]	; 0x364
    bc0c:	ldr	r3, [r5, #60]	; 0x3c
    bc10:	ldr	r2, [r5, #84]	; 0x54
    bc14:	str	r3, [r5, #84]	; 0x54
    bc18:	str	r2, [r5, #60]	; 0x3c
    bc1c:	b	bb10 <opt_loop+0xd68>
    bc20:	cmp	r2, #48	; 0x30
    bc24:	beq	bd10 <opt_loop+0xf68>
    bc28:	cmp	r2, #64	; 0x40
    bc2c:	bne	bba4 <opt_loop+0xdfc>
    bc30:	ldr	r2, [r5, #20]
    bc34:	and	r3, r3, r2
    bc38:	b	bc4c <opt_loop+0xea4>
    bc3c:	ldr	r2, [r5, #20]
    bc40:	sub	r3, r2, r3
    bc44:	clz	r3, r3
    bc48:	lsr	r3, r3, #5
    bc4c:	ldr	r2, [r5, #84]	; 0x54
    bc50:	ldr	r1, [r5, #60]	; 0x3c
    bc54:	cmp	r2, r1
    bc58:	ldrne	r0, [pc, #300]	; bd8c <opt_loop+0xfe4>
    bc5c:	movne	ip, #0
    bc60:	addne	r0, pc, r0
    bc64:	strne	ip, [r0, #868]	; 0x364
    bc68:	cmp	r3, #0
    bc6c:	strne	r1, [r5, #84]	; 0x54
    bc70:	streq	r2, [r5, #60]	; 0x3c
    bc74:	add	r7, sp, #64	; 0x40
    bc78:	mov	r2, #72	; 0x48
    bc7c:	mov	r1, #0
    bc80:	mov	r0, r7
    bc84:	bl	eb4 <memset@plt>
    bc88:	ldr	r8, [r5, #4]
    bc8c:	cmp	r8, #0
    bc90:	mov	r1, r7
    bc94:	bne	bd24 <opt_loop+0xf7c>
    bc98:	add	r0, r5, #8
    bc9c:	bl	a6b8 <deadstmt>
    bca0:	ldr	r3, [pc, #232]	; bd90 <opt_loop+0xfe8>
    bca4:	mov	r0, r8
    bca8:	add	r3, pc, r3
    bcac:	mvn	ip, #0
    bcb0:	ldr	r2, [r3, #868]	; 0x364
    bcb4:	mov	lr, r8
    bcb8:	mov	r3, r8
    bcbc:	ldr	r1, [r7, r3, lsl #2]
    bcc0:	cmp	r1, #0
    bcc4:	beq	bcdc <opt_loop+0xf34>
    bcc8:	ldr	r8, [r5, #128]	; 0x80
    bccc:	ands	r8, r8, sl, lsl r3
    bcd0:	moveq	r0, sl
    bcd4:	moveq	r2, lr
    bcd8:	streq	ip, [r1]
    bcdc:	add	r3, r3, #1
    bce0:	cmp	r3, #18
    bce4:	bne	bcbc <opt_loop+0xf14>
    bce8:	cmp	r0, #0
    bcec:	ldrne	r3, [pc, #160]	; bd94 <opt_loop+0xfec>
    bcf0:	addne	r3, pc, r3
    bcf4:	strne	r2, [r3, #868]	; 0x364
    bcf8:	b	b3ec <opt_loop+0x644>
    bcfc:	ldr	r2, [r5, #20]
    bd00:	cmp	r2, r3
    bd04:	movcs	r3, #0
    bd08:	movcc	r3, #1
    bd0c:	b	bc4c <opt_loop+0xea4>
    bd10:	ldr	r2, [r5, #20]
    bd14:	cmp	r2, r3
    bd18:	movhi	r3, #0
    bd1c:	movls	r3, #1
    bd20:	b	bc4c <opt_loop+0xea4>
    bd24:	mov	r0, r8
    bd28:	bl	a6b8 <deadstmt>
    bd2c:	ldr	r8, [r8, #16]
    bd30:	b	bc8c <opt_loop+0xee4>
    bd34:	.word	0x00022244
    bd38:	.word	0x0002296c
    bd3c:	.word	0x0002295c
    bd40:	.word	0x0002294c
    bd44:	.word	0x000000cc
    bd48:	.word	0x00022848
    bd4c:	.word	0x000000f4
    bd50:	.word	0x00000100
    bd54:	.word	0x0000010c
    bd58:	.word	0x00022760
    bd5c:	.word	0x0002273c
    bd60:	.word	0x00022430
    bd64:	.word	0x000223d4
    bd68:	.word	0x00022350
    bd6c:	.word	0x00021e7c
    bd70:	.word	0x00021de4
    bd74:	.word	0x00021de0
    bd78:	.word	0x00021ddc
    bd7c:	.word	0x00021c50
    bd80:	.word	0x00021c28
    bd84:	.word	0x00021b64
    bd88:	.word	0x00021b2c
    bd8c:	.word	0x00021ad0
    bd90:	.word	0x00021a88
    bd94:	.word	0x00021a40
    bd98:	.word	0x0002195c
    bd9c:	.word	0x00021934
    bda0:	ldr	r3, [sp, #8]
    bda4:	ldr	r3, [r3]
    bda8:	ldr	r5, [r3, r6, lsl #2]
    bdac:	cmp	r5, #0
    bdb0:	bne	be08 <opt_loop+0x1060>
    bdb4:	add	r6, r6, #1
    bdb8:	ldr	r3, [sp, #20]
    bdbc:	cmp	r3, r6
    bdc0:	bge	bda0 <opt_loop+0xff8>
    bdc4:	ldr	r0, [sp, #24]
    bdc8:	bl	ab7c <find_inedges.isra.2>
    bdcc:	ldr	r3, [pc, #-60]	; bd98 <opt_loop+0xff0>
    bdd0:	mov	r6, #0
    bdd4:	add	r3, pc, r3
    bdd8:	ldr	r5, [r3, #868]	; 0x364
    bddc:	mov	r3, #1
    bde0:	str	r3, [sp, #24]
    bde4:	ldr	r2, [sp, #24]
    bde8:	ldr	r3, [sp, #20]
    bdec:	cmp	r3, r2
    bdf0:	bge	be20 <opt_loop+0x1078>
    bdf4:	cmp	r6, #0
    bdf8:	ldrne	r3, [pc, #-100]	; bd9c <opt_loop+0xff4>
    bdfc:	addne	r3, pc, r3
    be00:	strne	r5, [r3, #868]	; 0x364
    be04:	b	aff0 <opt_loop+0x248>
    be08:	add	r0, r5, #48	; 0x30
    be0c:	bl	ac2c <opt_j>
    be10:	add	r0, r5, #72	; 0x48
    be14:	bl	ac2c <opt_j>
    be18:	ldr	r5, [r5, #100]	; 0x64
    be1c:	b	bdac <opt_loop+0x1004>
    be20:	ldr	r3, [sp, #8]
    be24:	ldr	r2, [sp, #24]
    be28:	ldr	r3, [r3]
    be2c:	ldr	r3, [r3, r2, lsl #2]
    be30:	cmp	r3, #0
    be34:	ldreq	r3, [sp, #24]
    be38:	addeq	r3, r3, #1
    be3c:	beq	bde0 <opt_loop+0x1038>
    be40:	ldr	r2, [r3, #112]	; 0x70
    be44:	cmp	r2, #0
    be48:	ldrne	r1, [r2, #16]
    be4c:	ldrne	r7, [r1, #200]	; 0xc8
    be50:	bne	be80 <opt_loop+0x10d8>
    be54:	ldr	r2, [r3, #112]	; 0x70
    be58:	cmp	r2, #0
    be5c:	ldrne	r1, [r2, #16]
    be60:	ldrne	r7, [r1, #200]	; 0xc8
    be64:	bne	bf94 <opt_loop+0x11ec>
    be68:	ldr	r3, [r3, #100]	; 0x64
    be6c:	b	be30 <opt_loop+0x1088>
    be70:	ldr	r0, [r2, #16]
    be74:	ldr	r0, [r0, #200]	; 0xc8
    be78:	cmp	r7, r0
    be7c:	bne	be54 <opt_loop+0x10ac>
    be80:	ldr	r2, [r2, #20]
    be84:	cmp	r2, #0
    be88:	bne	be70 <opt_loop+0x10c8>
    be8c:	ldr	r2, [r1, #60]	; 0x3c
    be90:	mov	r8, sl
    be94:	cmp	r3, r2
    be98:	addeq	r1, r1, #60	; 0x3c
    be9c:	addne	r1, r1, #84	; 0x54
    bea0:	ldr	r2, [r1]
    bea4:	cmp	r2, #0
    bea8:	beq	be54 <opt_loop+0x10ac>
    beac:	ldr	r9, [r2, #60]	; 0x3c
    beb0:	ldr	r0, [r3, #60]	; 0x3c
    beb4:	cmp	r9, r0
    beb8:	bne	be54 <opt_loop+0x10ac>
    bebc:	ldr	r0, [r3]
    bec0:	lsr	ip, r0, #5
    bec4:	and	r0, r0, #31
    bec8:	lsl	fp, ip, #2
    becc:	mov	lr, fp
    bed0:	ldr	fp, [r2, #104]	; 0x68
    bed4:	lsl	r0, sl, r0
    bed8:	ldr	ip, [fp, ip, lsl #2]
    bedc:	tst	r0, ip
    bee0:	beq	be54 <opt_loop+0x10ac>
    bee4:	ldr	ip, [r2, #200]	; 0xc8
    bee8:	cmp	r7, ip
    beec:	add	ip, r2, #84	; 0x54
    bef0:	moveq	r1, ip
    bef4:	moveq	r8, r4
    bef8:	beq	bea0 <opt_loop+0x10f8>
    befc:	ldr	r2, [r2, #84]	; 0x54
    bf00:	cmp	r2, #0
    bf04:	beq	be54 <opt_loop+0x10ac>
    bf08:	ldr	fp, [r2, #60]	; 0x3c
    bf0c:	cmp	r9, fp
    bf10:	bne	be54 <opt_loop+0x10ac>
    bf14:	ldr	fp, [r2, #104]	; 0x68
    bf18:	ldr	fp, [fp, lr]
    bf1c:	tst	r0, fp
    bf20:	beq	be54 <opt_loop+0x10ac>
    bf24:	ldr	fp, [r2, #200]	; 0xc8
    bf28:	cmp	r7, fp
    bf2c:	addne	ip, r2, #84	; 0x54
    bf30:	bne	befc <opt_loop+0x1154>
    bf34:	ldr	r0, [r2, #84]	; 0x54
    bf38:	cmp	r8, #0
    bf3c:	str	r0, [ip]
    bf40:	ldr	r0, [r1]
    bf44:	str	r0, [r2, #84]	; 0x54
    bf48:	ldrne	r1, [r3, #112]	; 0x70
    bf4c:	bne	bf70 <opt_loop+0x11c8>
    bf50:	str	r2, [r1]
    bf54:	b	bf78 <opt_loop+0x11d0>
    bf58:	ldr	r0, [r1, #16]
    bf5c:	ldr	ip, [r0, #60]	; 0x3c
    bf60:	cmp	r3, ip
    bf64:	streq	r2, [r0, #60]	; 0x3c
    bf68:	strne	r2, [r0, #84]	; 0x54
    bf6c:	ldr	r1, [r1, #20]
    bf70:	cmp	r1, #0
    bf74:	bne	bf58 <opt_loop+0x11b0>
    bf78:	mov	r5, r4
    bf7c:	mov	r6, sl
    bf80:	b	be54 <opt_loop+0x10ac>
    bf84:	ldr	r0, [r2, #16]
    bf88:	ldr	r0, [r0, #200]	; 0xc8
    bf8c:	cmp	r7, r0
    bf90:	bne	be68 <opt_loop+0x10c0>
    bf94:	ldr	r2, [r2, #20]
    bf98:	cmp	r2, #0
    bf9c:	bne	bf84 <opt_loop+0x11dc>
    bfa0:	ldr	r2, [r1, #60]	; 0x3c
    bfa4:	mov	r8, sl
    bfa8:	cmp	r3, r2
    bfac:	addeq	r1, r1, #60	; 0x3c
    bfb0:	addne	r1, r1, #84	; 0x54
    bfb4:	ldr	r2, [r1]
    bfb8:	cmp	r2, #0
    bfbc:	beq	be68 <opt_loop+0x10c0>
    bfc0:	ldr	r9, [r2, #84]	; 0x54
    bfc4:	ldr	r0, [r3, #84]	; 0x54
    bfc8:	cmp	r9, r0
    bfcc:	bne	be68 <opt_loop+0x10c0>
    bfd0:	ldr	r0, [r3]
    bfd4:	ldr	fp, [r2, #104]	; 0x68
    bfd8:	lsr	ip, r0, #5
    bfdc:	and	r0, r0, #31
    bfe0:	lsl	lr, ip, #2
    bfe4:	lsl	r0, sl, r0
    bfe8:	ldr	ip, [fp, ip, lsl #2]
    bfec:	tst	r0, ip
    bff0:	beq	be68 <opt_loop+0x10c0>
    bff4:	ldr	ip, [r2, #200]	; 0xc8
    bff8:	cmp	r7, ip
    bffc:	add	ip, r2, #60	; 0x3c
    c000:	moveq	r1, ip
    c004:	moveq	r8, r4
    c008:	beq	bfb4 <opt_loop+0x120c>
    c00c:	ldr	r2, [r2, #60]	; 0x3c
    c010:	cmp	r2, #0
    c014:	beq	be68 <opt_loop+0x10c0>
    c018:	ldr	fp, [r2, #84]	; 0x54
    c01c:	cmp	r9, fp
    c020:	bne	be68 <opt_loop+0x10c0>
    c024:	ldr	fp, [r2, #104]	; 0x68
    c028:	ldr	fp, [fp, lr]
    c02c:	tst	r0, fp
    c030:	beq	be68 <opt_loop+0x10c0>
    c034:	ldr	fp, [r2, #200]	; 0xc8
    c038:	cmp	r7, fp
    c03c:	addne	ip, r2, #60	; 0x3c
    c040:	bne	c00c <opt_loop+0x1264>
    c044:	ldr	r0, [r2, #60]	; 0x3c
    c048:	cmp	r8, #0
    c04c:	str	r0, [ip]
    c050:	ldr	r0, [r1]
    c054:	str	r0, [r2, #60]	; 0x3c
    c058:	ldrne	r1, [r3, #112]	; 0x70
    c05c:	bne	c080 <opt_loop+0x12d8>
    c060:	str	r2, [r1]
    c064:	b	c088 <opt_loop+0x12e0>
    c068:	ldr	r0, [r1, #16]
    c06c:	ldr	ip, [r0, #60]	; 0x3c
    c070:	cmp	r3, ip
    c074:	streq	r2, [r0, #60]	; 0x3c
    c078:	strne	r2, [r0, #84]	; 0x54
    c07c:	ldr	r1, [r1, #20]
    c080:	cmp	r1, #0
    c084:	bne	c068 <opt_loop+0x12c0>
    c088:	mov	r5, r4
    c08c:	mov	r6, sl
    c090:	b	be68 <opt_loop+0x10c0>

0000c094 <sf_bpf_optimize>:
    c094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c098:	mov	r6, r0
    c09c:	ldr	r8, [pc, #1296]	; c5b4 <sf_bpf_optimize+0x520>
    c0a0:	ldr	r7, [r0]
    c0a4:	add	r8, pc, r8
    c0a8:	sub	sp, sp, #36	; 0x24
    c0ac:	ldr	r4, [r8]
    c0b0:	mov	r0, r7
    c0b4:	add	r3, r4, #1
    c0b8:	str	r3, [r8]
    c0bc:	bl	a4dc <count_blocks>
    c0c0:	mov	r1, #4
    c0c4:	ldr	r9, [pc, #1260]	; c5b8 <sf_bpf_optimize+0x524>
    c0c8:	add	r9, pc, r9
    c0cc:	mov	sl, r0
    c0d0:	bl	d58 <calloc@plt>
    c0d4:	ldr	r3, [pc, #1248]	; c5bc <sf_bpf_optimize+0x528>
    c0d8:	ldr	r5, [r9, r3]
    c0dc:	cmp	r0, #0
    c0e0:	str	r0, [r5]
    c0e4:	bne	c0f4 <sf_bpf_optimize+0x60>
    c0e8:	ldr	r0, [pc, #1232]	; c5c0 <sf_bpf_optimize+0x52c>
    c0ec:	add	r0, pc, r0
    c0f0:	bl	20b8 <sf_bpf_error>
    c0f4:	mov	r3, #0
    c0f8:	add	r4, r4, #2
    c0fc:	mov	r0, r7
    c100:	str	r3, [r8, #864]	; 0x360
    c104:	str	r4, [r8]
    c108:	bl	a530 <number_blks_r>
    c10c:	ldr	r4, [r8, #864]	; 0x360
    c110:	mov	r1, #4
    c114:	lsl	fp, r4, #1
    c118:	mov	r0, fp
    c11c:	str	fp, [r8, #896]	; 0x380
    c120:	bl	d58 <calloc@plt>
    c124:	ldr	r3, [pc, #1176]	; c5c4 <sf_bpf_optimize+0x530>
    c128:	ldr	r3, [r9, r3]
    c12c:	str	r3, [sp, #4]
    c130:	cmp	r0, #0
    c134:	str	r0, [r3]
    c138:	beq	c0e8 <sf_bpf_optimize+0x54>
    c13c:	mov	r1, #4
    c140:	mov	r0, r4
    c144:	bl	d58 <calloc@plt>
    c148:	ldr	r3, [pc, #1144]	; c5c8 <sf_bpf_optimize+0x534>
    c14c:	ldr	r3, [r9, r3]
    c150:	str	r3, [sp, #12]
    c154:	cmp	r0, #0
    c158:	str	r0, [r3]
    c15c:	beq	c0e8 <sf_bpf_optimize+0x54>
    c160:	lsr	r3, fp, #5
    c164:	add	r3, r3, #1
    c168:	lsr	r1, r4, #5
    c16c:	mul	r0, r3, fp
    c170:	add	r1, r1, #1
    c174:	str	r3, [r8, #4]
    c178:	mla	r0, r1, fp, r0
    c17c:	str	r3, [sp, #20]
    c180:	str	r1, [r8, #884]	; 0x374
    c184:	lsl	r0, r0, #2
    c188:	str	r1, [sp, #8]
    c18c:	bl	e48 <malloc@plt>
    c190:	ldr	r2, [pc, #1076]	; c5cc <sf_bpf_optimize+0x538>
    c194:	ldr	r3, [r9, r2]
    c198:	str	r3, [sp, #16]
    c19c:	cmp	r0, #0
    c1a0:	str	r0, [r3]
    c1a4:	beq	c0e8 <sf_bpf_optimize+0x54>
    c1a8:	ldr	r1, [sp, #8]
    c1ac:	ldr	lr, [r5]
    c1b0:	ldr	r3, [sp, #20]
    c1b4:	lsl	r1, r1, #2
    c1b8:	mov	r2, r0
    c1bc:	mov	fp, #0
    c1c0:	str	r0, [r8, #880]	; 0x370
    c1c4:	cmp	sl, fp
    c1c8:	bgt	c3a0 <sf_bpf_optimize+0x30c>
    c1cc:	bic	r2, sl, sl, asr #31
    c1d0:	ldr	ip, [pc, #1016]	; c5d0 <sf_bpf_optimize+0x53c>
    c1d4:	mul	r2, r1, r2
    c1d8:	add	ip, pc, ip
    c1dc:	add	r0, r0, r2
    c1e0:	str	r0, [ip, #888]	; 0x378
    c1e4:	mov	r8, r0
    c1e8:	mov	ip, #0
    c1ec:	cmp	sl, ip
    c1f0:	bgt	c3b4 <sf_bpf_optimize+0x320>
    c1f4:	add	r0, r0, r2
    c1f8:	ldr	r2, [pc, #980]	; c5d4 <sf_bpf_optimize+0x540>
    c1fc:	lsl	r8, r3, #2
    c200:	add	r2, pc, r2
    c204:	lsl	r3, r3, #3
    c208:	mov	r1, #0
    c20c:	str	r0, [r2, #892]	; 0x37c
    c210:	cmp	sl, r1
    c214:	bgt	c3c8 <sf_bpf_optimize+0x334>
    c218:	mov	r3, #0
    c21c:	ldr	fp, [r5]
    c220:	mov	r8, r3
    c224:	str	r3, [sp, #8]
    c228:	cmp	sl, r8
    c22c:	bgt	c41c <sf_bpf_optimize+0x388>
    c230:	ldr	r3, [sp, #8]
    c234:	ldr	r8, [pc, #924]	; c5d8 <sf_bpf_optimize+0x544>
    c238:	mov	r1, #8
    c23c:	add	fp, r3, r3, lsl #1
    c240:	add	r8, pc, r8
    c244:	mov	r0, fp
    c248:	str	fp, [r8, #900]	; 0x384
    c24c:	bl	d58 <calloc@plt>
    c250:	ldr	r3, [pc, #900]	; c5dc <sf_bpf_optimize+0x548>
    c254:	mov	r1, #20
    c258:	ldr	r3, [r9, r3]
    c25c:	str	r3, [sp, #20]
    c260:	mov	sl, r0
    c264:	str	r0, [r3]
    c268:	mov	r0, fp
    c26c:	bl	d58 <calloc@plt>
    c270:	ldr	r3, [pc, #872]	; c5e0 <sf_bpf_optimize+0x54c>
    c274:	ldr	r3, [r9, r3]
    c278:	str	r3, [sp, #24]
    c27c:	cmp	sl, #0
    c280:	cmpne	r0, #0
    c284:	str	r0, [r3]
    c288:	moveq	sl, #1
    c28c:	movne	sl, #0
    c290:	beq	c0e8 <sf_bpf_optimize+0x54>
    c294:	mov	r1, sl
    c298:	mov	r0, r7
    c29c:	bl	ada8 <opt_loop>
    c2a0:	mov	r1, #1
    c2a4:	mov	r0, r7
    c2a8:	bl	ada8 <opt_loop>
    c2ac:	str	sl, [sp, #8]
    c2b0:	str	r8, [sp, #28]
    c2b4:	ldr	r2, [r5]
    c2b8:	mov	r3, #0
    c2bc:	cmp	r3, r4
    c2c0:	blt	c440 <sf_bpf_optimize+0x3ac>
    c2c4:	ldr	r3, [sp, #28]
    c2c8:	mov	r0, r7
    c2cc:	ldr	r8, [r3]
    c2d0:	add	r8, r8, #1
    c2d4:	str	r8, [r3]
    c2d8:	bl	a46c <make_marks>
    c2dc:	ldr	r9, [r5]
    c2e0:	sub	ip, r4, #1
    c2e4:	subs	fp, ip, #1
    c2e8:	bpl	c454 <sf_bpf_optimize+0x3c0>
    c2ec:	mov	r0, #1
    c2f0:	mov	r3, #0
    c2f4:	cmp	r3, r4
    c2f8:	blt	c554 <sf_bpf_optimize+0x4c0>
    c2fc:	cmp	r0, #0
    c300:	beq	c2b4 <sf_bpf_optimize+0x220>
    c304:	ldr	r3, [r6]
    c308:	mov	r2, #0
    c30c:	ldr	r4, [r3, #4]
    c310:	str	r2, [r3, #4]
    c314:	ldr	r3, [r6]
    c318:	ldr	r2, [r3, #8]
    c31c:	and	r2, r2, #7
    c320:	cmp	r2, #5
    c324:	beq	c590 <sf_bpf_optimize+0x4fc>
    c328:	ldr	r1, [r3, #4]
    c32c:	cmp	r1, #0
    c330:	bne	c5a8 <sf_bpf_optimize+0x514>
    c334:	ldr	r3, [r6]
    c338:	str	r4, [r3, #4]
    c33c:	ldr	r2, [r6]
    c340:	ldr	r3, [r2, #8]
    c344:	and	r3, r3, #7
    c348:	cmp	r3, #6
    c34c:	moveq	r3, #0
    c350:	streq	r3, [r2, #4]
    c354:	ldr	r3, [sp, #24]
    c358:	ldr	r0, [r3]
    c35c:	bl	dc4 <free@plt>
    c360:	ldr	r3, [sp, #20]
    c364:	ldr	r0, [r3]
    c368:	bl	dc4 <free@plt>
    c36c:	ldr	r3, [sp, #4]
    c370:	ldr	r0, [r3]
    c374:	bl	dc4 <free@plt>
    c378:	ldr	r3, [sp, #16]
    c37c:	ldr	r0, [r3]
    c380:	bl	dc4 <free@plt>
    c384:	ldr	r3, [sp, #12]
    c388:	ldr	r0, [r3]
    c38c:	bl	dc4 <free@plt>
    c390:	ldr	r0, [r5]
    c394:	add	sp, sp, #36	; 0x24
    c398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c39c:	b	dc4 <free@plt>
    c3a0:	ldr	ip, [lr, fp, lsl #2]
    c3a4:	add	fp, fp, #1
    c3a8:	str	r2, [ip, #104]	; 0x68
    c3ac:	add	r2, r2, r1
    c3b0:	b	c1c4 <sf_bpf_optimize+0x130>
    c3b4:	ldr	fp, [lr, ip, lsl #2]
    c3b8:	add	ip, ip, #1
    c3bc:	str	r8, [fp, #108]	; 0x6c
    c3c0:	add	r8, r8, r1
    c3c4:	b	c1ec <sf_bpf_optimize+0x158>
    c3c8:	ldr	r2, [r5]
    c3cc:	ldr	lr, [sp, #4]
    c3d0:	add	ip, r0, r8
    c3d4:	ldr	r2, [r2, r1, lsl #2]
    c3d8:	ldr	lr, [lr]
    c3dc:	ldr	fp, [sp, #4]
    c3e0:	str	ip, [r2, #80]	; 0x50
    c3e4:	mov	ip, r2
    c3e8:	str	r0, [r2, #56]	; 0x38
    c3ec:	str	r1, [ip, #48]!	; 0x30
    c3f0:	str	ip, [lr, r1, lsl #2]
    c3f4:	ldr	fp, [fp]
    c3f8:	add	lr, r1, r4
    c3fc:	mov	ip, r2
    c400:	add	r0, r0, r3
    c404:	str	lr, [ip, #72]!	; 0x48
    c408:	add	r1, r1, #1
    c40c:	str	ip, [fp, lr, lsl #2]
    c410:	str	r2, [r2, #64]	; 0x40
    c414:	str	r2, [r2, #88]	; 0x58
    c418:	b	c210 <sf_bpf_optimize+0x17c>
    c41c:	ldr	r3, [fp, r8, lsl #2]
    c420:	add	r8, r8, #1
    c424:	ldr	r0, [r3, #4]
    c428:	bl	a4b4 <slength>
    c42c:	ldr	r3, [sp, #8]
    c430:	add	r0, r0, #1
    c434:	add	r3, r3, r0
    c438:	str	r3, [sp, #8]
    c43c:	b	c228 <sf_bpf_optimize+0x194>
    c440:	ldr	r0, [r2, r3, lsl #2]
    c444:	ldr	r1, [sp, #8]
    c448:	add	r3, r3, #1
    c44c:	str	r1, [r0, #100]	; 0x64
    c450:	b	c2bc <sf_bpf_optimize+0x228>
    c454:	ldr	r0, [r9, fp, lsl #2]
    c458:	ldr	r3, [r0, #24]
    c45c:	cmp	r3, r8
    c460:	bne	c46c <sf_bpf_optimize+0x3d8>
    c464:	cmp	ip, r4
    c468:	blt	c474 <sf_bpf_optimize+0x3e0>
    c46c:	mov	ip, fp
    c470:	b	c2e4 <sf_bpf_optimize+0x250>
    c474:	ldr	r2, [r9, ip, lsl #2]
    c478:	ldr	r3, [r2, #24]
    c47c:	cmp	r3, r8
    c480:	bne	c4cc <sf_bpf_optimize+0x438>
    c484:	ldr	lr, [r0, #8]
    c488:	ldr	r3, [r2, #8]
    c48c:	cmp	lr, r3
    c490:	bne	c4cc <sf_bpf_optimize+0x438>
    c494:	ldr	lr, [r0, #20]
    c498:	ldr	r3, [r2, #20]
    c49c:	cmp	lr, r3
    c4a0:	bne	c4cc <sf_bpf_optimize+0x438>
    c4a4:	ldr	lr, [r0, #60]	; 0x3c
    c4a8:	ldr	r3, [r2, #60]	; 0x3c
    c4ac:	cmp	lr, r3
    c4b0:	bne	c4cc <sf_bpf_optimize+0x438>
    c4b4:	ldr	lr, [r0, #84]	; 0x54
    c4b8:	ldr	r3, [r2, #84]	; 0x54
    c4bc:	cmp	lr, r3
    c4c0:	ldreq	r3, [r0, #4]
    c4c4:	ldreq	lr, [r2, #4]
    c4c8:	beq	c51c <sf_bpf_optimize+0x488>
    c4cc:	add	ip, ip, #1
    c4d0:	b	c464 <sf_bpf_optimize+0x3d0>
    c4d4:	ldr	lr, [lr, #16]
    c4d8:	b	c534 <sf_bpf_optimize+0x4a0>
    c4dc:	cmp	r3, #0
    c4e0:	bne	c4cc <sf_bpf_optimize+0x438>
    c4e4:	ldr	r3, [r2, #100]	; 0x64
    c4e8:	cmp	r3, #0
    c4ec:	moveq	r3, r2
    c4f0:	str	r3, [r0, #100]	; 0x64
    c4f4:	b	c46c <sf_bpf_optimize+0x3d8>
    c4f8:	ldr	sl, [r3]
    c4fc:	cmp	r1, sl
    c500:	bne	c4cc <sf_bpf_optimize+0x438>
    c504:	ldr	r1, [r3, #12]
    c508:	ldr	sl, [lr, #12]
    c50c:	cmp	r1, sl
    c510:	bne	c4cc <sf_bpf_optimize+0x438>
    c514:	ldr	r3, [r3, #16]
    c518:	ldr	lr, [lr, #16]
    c51c:	cmp	r3, #0
    c520:	beq	c534 <sf_bpf_optimize+0x4a0>
    c524:	ldr	r1, [r3]
    c528:	cmn	r1, #1
    c52c:	ldreq	r3, [r3, #16]
    c530:	beq	c51c <sf_bpf_optimize+0x488>
    c534:	cmp	lr, #0
    c538:	beq	c4dc <sf_bpf_optimize+0x448>
    c53c:	ldr	r1, [lr]
    c540:	cmn	r1, #1
    c544:	beq	c4d4 <sf_bpf_optimize+0x440>
    c548:	cmp	r3, #0
    c54c:	bne	c4f8 <sf_bpf_optimize+0x464>
    c550:	b	c4cc <sf_bpf_optimize+0x438>
    c554:	ldr	r2, [r9, r3, lsl #2]
    c558:	ldr	ip, [r2, #60]	; 0x3c
    c55c:	cmp	ip, #0
    c560:	beq	c588 <sf_bpf_optimize+0x4f4>
    c564:	ldr	ip, [ip, #100]	; 0x64
    c568:	cmp	ip, #0
    c56c:	strne	ip, [r2, #60]	; 0x3c
    c570:	ldr	ip, [r2, #84]	; 0x54
    c574:	ldrne	r0, [sp, #8]
    c578:	ldr	ip, [ip, #100]	; 0x64
    c57c:	cmp	ip, #0
    c580:	strne	ip, [r2, #84]	; 0x54
    c584:	ldrne	r0, [sp, #8]
    c588:	add	r3, r3, #1
    c58c:	b	c2f4 <sf_bpf_optimize+0x260>
    c590:	ldr	r2, [r3, #60]	; 0x3c
    c594:	ldr	r1, [r3, #84]	; 0x54
    c598:	cmp	r2, r1
    c59c:	bne	c328 <sf_bpf_optimize+0x294>
    c5a0:	str	r2, [r6]
    c5a4:	b	c314 <sf_bpf_optimize+0x280>
    c5a8:	mov	r0, r4
    c5ac:	bl	304c <sf_append>
    c5b0:	b	c334 <sf_bpf_optimize+0x2a0>
    c5b4:	.word	0x0002168c
    c5b8:	.word	0x00020f30
    c5bc:	.word	0x000000d4
    c5c0:	.word	0x00005528
    c5c4:	.word	0x000000ec
    c5c8:	.word	0x000000cc
    c5cc:	.word	0x000000bc
    c5d0:	.word	0x00021558
    c5d4:	.word	0x00021530
    c5d8:	.word	0x000214f0
    c5dc:	.word	0x0000010c
    c5e0:	.word	0x00000100

0000c5e4 <sf_icode_to_fcode>:
    c5e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    c5e8:	mov	r7, r0
    c5ec:	ldr	r5, [pc, #128]	; c674 <sf_icode_to_fcode+0x90>
    c5f0:	mov	r8, r1
    c5f4:	add	r5, pc, r5
    c5f8:	mov	r9, #0
    c5fc:	ldr	r6, [r5]
    c600:	mov	r0, r7
    c604:	add	r3, r6, #1
    c608:	str	r3, [r5]
    c60c:	bl	a5a0 <count_stmts>
    c610:	lsl	r4, r0, #3
    c614:	str	r0, [r8]
    c618:	mov	r0, r4
    c61c:	bl	e48 <malloc@plt>
    c620:	subs	sl, r0, #0
    c624:	bne	c634 <sf_icode_to_fcode+0x50>
    c628:	ldr	r0, [pc, #72]	; c678 <sf_icode_to_fcode+0x94>
    c62c:	add	r0, pc, r0
    c630:	bl	20b8 <sf_bpf_error>
    c634:	mov	r2, r4
    c638:	mov	r1, r9
    c63c:	bl	eb4 <memset@plt>
    c640:	add	r4, sl, r4
    c644:	add	r6, r6, #2
    c648:	mov	r0, r7
    c64c:	str	sl, [r5, #876]	; 0x36c
    c650:	str	r4, [r5, #872]	; 0x368
    c654:	str	r6, [r5]
    c658:	bl	a82c <convert_code_r>
    c65c:	cmp	r0, #0
    c660:	mov	r0, sl
    c664:	bne	c670 <sf_icode_to_fcode+0x8c>
    c668:	bl	dc4 <free@plt>
    c66c:	b	c5fc <sf_icode_to_fcode+0x18>
    c670:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c674:	.word	0x0002113c
    c678:	.word	0x00004fe8

0000c67c <xdtoi>:
    c67c:	push	{r4, lr}
    c680:	mov	r4, r0
    c684:	bl	e60 <__ctype_b_loc@plt>
    c688:	lsl	r3, r4, #1
    c68c:	ldr	r2, [r0]
    c690:	ldrh	r3, [r2, r3]
    c694:	tst	r3, #2048	; 0x800
    c698:	beq	c6a4 <xdtoi+0x28>
    c69c:	sub	r0, r4, #48	; 0x30
    c6a0:	pop	{r4, pc}
    c6a4:	tst	r3, #512	; 0x200
    c6a8:	subne	r0, r4, #87	; 0x57
    c6ac:	subeq	r0, r4, #55	; 0x37
    c6b0:	pop	{r4, pc}

0000c6b4 <skip_space>:
    c6b4:	push	{r4, r5, r6, lr}
    c6b8:	mov	r5, r0
    c6bc:	mov	r0, r5
    c6c0:	bl	f50 <getc@plt>
    c6c4:	mov	r4, r0
    c6c8:	bl	e60 <__ctype_b_loc@plt>
    c6cc:	lsl	r3, r4, #1
    c6d0:	ldr	r2, [r0]
    c6d4:	ldrh	r3, [r2, r3]
    c6d8:	tst	r3, #8192	; 0x2000
    c6dc:	beq	c6e8 <skip_space+0x34>
    c6e0:	cmp	r4, #10
    c6e4:	bne	c6bc <skip_space+0x8>
    c6e8:	mov	r0, r4
    c6ec:	pop	{r4, r5, r6, pc}

0000c6f0 <skip_line>:
    c6f0:	push	{r4, lr}
    c6f4:	mov	r4, r0
    c6f8:	mov	r0, r4
    c6fc:	bl	f50 <getc@plt>
    c700:	cmp	r0, #10
    c704:	cmnne	r0, #1
    c708:	bne	c6f8 <skip_line+0x8>
    c70c:	pop	{r4, pc}

0000c710 <sfbpf_strcasecmp>:
    c710:	ldr	ip, [pc, #52]	; c74c <sfbpf_strcasecmp+0x3c>
    c714:	push	{lr}		; (str lr, [sp, #-4]!)
    c718:	add	ip, pc, ip
    c71c:	sub	lr, r0, #1
    c720:	ldrb	r0, [lr, #1]!
    c724:	ldrb	r3, [r1], #1
    c728:	ldrb	r2, [ip, r0]
    c72c:	ldrb	r3, [ip, r3]
    c730:	cmp	r2, r3
    c734:	beq	c740 <sfbpf_strcasecmp+0x30>
    c738:	sub	r0, r2, r3
    c73c:	pop	{pc}		; (ldr pc, [sp], #4)
    c740:	cmp	r0, #0
    c744:	bne	c720 <sfbpf_strcasecmp+0x10>
    c748:	pop	{pc}		; (ldr pc, [sp], #4)
    c74c:	.word	0x00004f03

0000c750 <pcap_next_etherent>:
    c750:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    c754:	mov	r5, r0
    c758:	ldr	r0, [pc, #372]	; c8d4 <pcap_next_etherent+0x184>
    c75c:	mov	r2, #128	; 0x80
    c760:	mov	r1, #0
    c764:	add	r0, pc, r0
    c768:	bl	eb4 <memset@plt>
    c76c:	ldr	r8, [pc, #356]	; c8d8 <pcap_next_etherent+0x188>
    c770:	add	r8, pc, r8
    c774:	mov	r0, r5
    c778:	bl	c6b4 <skip_space>
    c77c:	cmp	r0, #10
    c780:	mov	r4, r0
    c784:	beq	c774 <pcap_next_etherent+0x24>
    c788:	bl	e60 <__ctype_b_loc@plt>
    c78c:	lsl	r3, r4, #1
    c790:	ldr	r2, [r0]
    c794:	mov	r7, r0
    c798:	ldrh	r3, [r2, r3]
    c79c:	tst	r3, #4096	; 0x1000
    c7a0:	movne	r9, #0
    c7a4:	bne	c7b0 <pcap_next_etherent+0x60>
    c7a8:	mov	r0, r5
    c7ac:	b	c840 <pcap_next_etherent+0xf0>
    c7b0:	mov	r0, r4
    c7b4:	bl	c67c <xdtoi>
    c7b8:	mov	r6, r0
    c7bc:	mov	r0, r5
    c7c0:	bl	f50 <getc@plt>
    c7c4:	ldr	r2, [r7]
    c7c8:	lsl	r3, r0, #1
    c7cc:	mov	r4, r0
    c7d0:	ldrh	r3, [r2, r3]
    c7d4:	tst	r3, #4096	; 0x1000
    c7d8:	beq	c7f4 <pcap_next_etherent+0xa4>
    c7dc:	bl	c67c <xdtoi>
    c7e0:	lsl	r6, r6, #4
    c7e4:	orr	r6, r6, r0
    c7e8:	mov	r0, r5
    c7ec:	bl	f50 <getc@plt>
    c7f0:	mov	r4, r0
    c7f4:	cmp	r4, #58	; 0x3a
    c7f8:	strb	r6, [r9, r8]
    c7fc:	bne	c818 <pcap_next_etherent+0xc8>
    c800:	mov	r0, r5
    c804:	bl	f50 <getc@plt>
    c808:	add	r9, r9, #1
    c80c:	cmp	r9, #6
    c810:	mov	r4, r0
    c814:	bne	c7b0 <pcap_next_etherent+0x60>
    c818:	cmn	r4, #1
    c81c:	bne	c828 <pcap_next_etherent+0xd8>
    c820:	mov	r0, #0
    c824:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c828:	ldr	r3, [r7]
    c82c:	lsl	r4, r4, #1
    c830:	mov	r0, r5
    c834:	ldrh	r3, [r3, r4]
    c838:	tst	r3, #8192	; 0x2000
    c83c:	bne	c850 <pcap_next_etherent+0x100>
    c840:	bl	c6f0 <skip_line>
    c844:	cmn	r0, #1
    c848:	bne	c774 <pcap_next_etherent+0x24>
    c84c:	b	c820 <pcap_next_etherent+0xd0>
    c850:	bl	c6b4 <skip_space>
    c854:	cmp	r0, #10
    c858:	beq	c774 <pcap_next_etherent+0x24>
    c85c:	cmp	r0, #35	; 0x23
    c860:	beq	c7a8 <pcap_next_etherent+0x58>
    c864:	ldr	r4, [pc, #112]	; c8dc <pcap_next_etherent+0x18c>
    c868:	mov	r6, #121	; 0x79
    c86c:	add	r4, pc, r4
    c870:	add	r4, r4, #6
    c874:	strb	r0, [r4], #1
    c878:	mov	r0, r5
    c87c:	bl	f50 <getc@plt>
    c880:	ldr	r2, [r7]
    c884:	lsl	r3, r0, #1
    c888:	ldrh	r3, [r2, r3]
    c88c:	tst	r3, #8192	; 0x2000
    c890:	bne	c8a4 <pcap_next_etherent+0x154>
    c894:	cmn	r0, #1
    c898:	beq	c8a4 <pcap_next_etherent+0x154>
    c89c:	subs	r6, r6, #1
    c8a0:	bne	c874 <pcap_next_etherent+0x124>
    c8a4:	mov	r3, #0
    c8a8:	cmp	r0, #10
    c8ac:	strb	r3, [r4]
    c8b0:	beq	c8c8 <pcap_next_etherent+0x178>
    c8b4:	mov	r0, r5
    c8b8:	bl	c6f0 <skip_line>
    c8bc:	ldr	r0, [pc, #28]	; c8e0 <pcap_next_etherent+0x190>
    c8c0:	add	r0, pc, r0
    c8c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c8c8:	ldr	r0, [pc, #20]	; c8e4 <pcap_next_etherent+0x194>
    c8cc:	add	r0, pc, r0
    c8d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c8d4:	.word	0x00021354
    c8d8:	.word	0x00021348
    c8dc:	.word	0x0002124c
    c8e0:	.word	0x000211f8
    c8e4:	.word	0x000211ec

0000c8e8 <str2tok>:
    c8e8:	push	{r4, r5, r6, lr}
    c8ec:	mov	r6, r0
    c8f0:	mov	r4, r1
    c8f4:	ldr	r0, [r4, #4]
    c8f8:	mov	r5, r4
    c8fc:	cmp	r0, #0
    c900:	bne	c90c <str2tok+0x24>
    c904:	mvn	r0, #0
    c908:	pop	{r4, r5, r6, pc}
    c90c:	mov	r1, r6
    c910:	bl	c710 <sfbpf_strcasecmp>
    c914:	add	r4, r4, #8
    c918:	cmp	r0, #0
    c91c:	bne	c8f4 <str2tok+0xc>
    c920:	ldr	r0, [r5]
    c924:	pop	{r4, r5, r6, pc}

0000c928 <sfbpf_parse>:
    c928:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c92c:	sub	sp, sp, #3648	; 0xe40
    c930:	ldr	fp, [pc, #4036]	; d8fc <sfbpf_parse+0xfd4>
    c934:	ldr	r3, [pc, #4036]	; d900 <sfbpf_parse+0xfd8>
    c938:	add	fp, pc, fp
    c93c:	sub	sp, sp, #12
    c940:	ldr	r3, [fp, r3]
    c944:	mov	r5, #0
    c948:	str	r3, [sp, #16]
    c94c:	str	r5, [r3]
    c950:	ldr	r3, [pc, #4012]	; d904 <sfbpf_parse+0xfdc>
    c954:	add	r9, sp, #56	; 0x38
    c958:	mov	sl, r9
    c95c:	ldr	r3, [fp, r3]
    c960:	add	r4, sp, #456	; 0x1c8
    c964:	str	r3, [sp, #4]
    c968:	ldr	r2, [sp, #4]
    c96c:	mvn	r3, #1
    c970:	str	r4, [sp, #28]
    c974:	str	r3, [r2]
    c978:	mov	r3, #200	; 0xc8
    c97c:	str	r3, [sp, #8]
    c980:	ldr	r3, [pc, #3968]	; d908 <sfbpf_parse+0xfe0>
    c984:	add	r3, pc, r3
    c988:	sub	r3, r3, #3904	; 0xf40
    c98c:	sub	r3, r3, #2
    c990:	str	r3, [sp, #20]
    c994:	ldr	r3, [pc, #3952]	; d90c <sfbpf_parse+0xfe4>
    c998:	add	r3, pc, r3
    c99c:	sub	r3, r3, #3808	; 0xee0
    c9a0:	sub	r3, r3, #6
    c9a4:	str	r3, [sp, #24]
    c9a8:	ldr	r3, [sp, #8]
    c9ac:	strh	r5, [r9]
    c9b0:	sub	r3, r3, #-2147483647	; 0x80000001
    c9b4:	lsl	r3, r3, #1
    c9b8:	add	r2, sl, r3
    c9bc:	cmp	r9, r2
    c9c0:	bcc	ca80 <sfbpf_parse+0x158>
    c9c4:	sub	r4, r9, sl
    c9c8:	ldr	r2, [pc, #3904]	; d910 <sfbpf_parse+0xfe8>
    c9cc:	ldr	r1, [sp, #8]
    c9d0:	asr	r4, r4, #1
    c9d4:	cmp	r1, r2
    c9d8:	add	r4, r4, #1
    c9dc:	bhi	df48 <sfbpf_parse+0x1620>
    c9e0:	add	r3, r3, #2
    c9e4:	add	r2, r2, #1
    c9e8:	cmp	r3, r2
    c9ec:	movcs	r3, r2
    c9f0:	mov	r0, #18
    c9f4:	str	r3, [sp, #8]
    c9f8:	mul	r0, r0, r3
    c9fc:	add	r0, r0, #15
    ca00:	bl	e48 <malloc@plt>
    ca04:	subs	r8, r0, #0
    ca08:	beq	df48 <sfbpf_parse+0x1620>
    ca0c:	lsl	r9, r4, #1
    ca10:	mov	r2, r9
    ca14:	mov	r1, sl
    ca18:	bl	de8 <memcpy@plt>
    ca1c:	ldr	r3, [sp, #8]
    ca20:	lsl	r4, r4, #4
    ca24:	mov	r2, r4
    ca28:	lsl	r7, r3, #1
    ca2c:	add	r6, r7, #15
    ca30:	bic	r6, r6, #15
    ca34:	add	r6, r8, r6
    ca38:	ldr	r1, [sp, #28]
    ca3c:	mov	r0, r6
    ca40:	bl	de8 <memcpy@plt>
    ca44:	add	r3, sp, #56	; 0x38
    ca48:	cmp	sl, r3
    ca4c:	beq	ca58 <sfbpf_parse+0x130>
    ca50:	mov	r0, sl
    ca54:	bl	dc4 <free@plt>
    ca58:	sub	r9, r9, #2
    ca5c:	sub	r7, r7, #2
    ca60:	add	r9, r8, r9
    ca64:	add	r7, r8, r7
    ca68:	sub	r4, r4, #16
    ca6c:	cmp	r9, r7
    ca70:	add	r4, r6, r4
    ca74:	bcs	df70 <sfbpf_parse+0x1648>
    ca78:	mov	sl, r8
    ca7c:	str	r6, [sp, #28]
    ca80:	cmp	r5, #3
    ca84:	beq	df9c <sfbpf_parse+0x1674>
    ca88:	ldr	r2, [pc, #3716]	; d914 <sfbpf_parse+0xfec>
    ca8c:	lsl	r3, r5, #1
    ca90:	add	r2, pc, r2
    ca94:	ldrsh	r6, [r2, r3]
    ca98:	cmn	r6, #198	; 0xc6
    ca9c:	beq	cb64 <sfbpf_parse+0x23c>
    caa0:	ldr	r3, [sp, #4]
    caa4:	ldr	r3, [r3]
    caa8:	cmn	r3, #2
    caac:	bne	cabc <sfbpf_parse+0x194>
    cab0:	bl	e394 <sfbpf_lex>
    cab4:	ldr	r3, [sp, #4]
    cab8:	str	r0, [r3]
    cabc:	ldr	r3, [sp, #4]
    cac0:	ldr	r2, [r3]
    cac4:	cmp	r2, #0
    cac8:	movle	r2, #0
    cacc:	strle	r2, [r3]
    cad0:	ble	caf0 <sfbpf_parse+0x1c8>
    cad4:	ldr	r3, [pc, #3644]	; d918 <sfbpf_parse+0xff0>
    cad8:	cmp	r2, r3
    cadc:	movgt	r2, #2
    cae0:	ldrle	r3, [pc, #3636]	; d91c <sfbpf_parse+0xff4>
    cae4:	addle	r3, pc, r3
    cae8:	addle	r3, r3, r2
    caec:	ldrble	r2, [r3, #548]	; 0x224
    caf0:	ldr	r3, [pc, #3624]	; d920 <sfbpf_parse+0xff8>
    caf4:	add	r6, r2, r6
    caf8:	cmp	r6, r3
    cafc:	bhi	cb64 <sfbpf_parse+0x23c>
    cb00:	ldr	r3, [pc, #3612]	; d924 <sfbpf_parse+0xffc>
    cb04:	lsl	r6, r6, #1
    cb08:	add	r3, pc, r3
    cb0c:	add	r1, r3, #912	; 0x390
    cb10:	add	r1, r1, #2
    cb14:	ldrsh	r1, [r1, r6]
    cb18:	cmp	r2, r1
    cb1c:	bne	cb64 <sfbpf_parse+0x23c>
    cb20:	add	r3, r3, #2240	; 0x8c0
    cb24:	add	r3, r3, #14
    cb28:	ldrsh	r5, [r3, r6]
    cb2c:	cmp	r5, #0
    cb30:	rsble	r3, r5, #0
    cb34:	strle	r3, [sp, #12]
    cb38:	ble	cb80 <sfbpf_parse+0x258>
    cb3c:	ldr	r2, [sp, #4]
    cb40:	mvn	r3, #1
    cb44:	add	r4, r4, #16
    cb48:	str	r3, [r2]
    cb4c:	ldr	r3, [pc, #3540]	; d928 <sfbpf_parse+0x1000>
    cb50:	ldr	r3, [fp, r3]
    cb54:	ldm	r3, {r0, r1, r2, r3}
    cb58:	stm	r4, {r0, r1, r2, r3}
    cb5c:	add	r9, r9, #2
    cb60:	b	c9a8 <sfbpf_parse+0x80>
    cb64:	ldr	r3, [pc, #3520]	; d92c <sfbpf_parse+0x1004>
    cb68:	add	r3, pc, r3
    cb6c:	add	r5, r3, r5
    cb70:	ldrb	r3, [r5, #3594]	; 0xe0a
    cb74:	cmp	r3, #0
    cb78:	str	r3, [sp, #12]
    cb7c:	beq	df0c <sfbpf_parse+0x15e4>
    cb80:	ldr	r3, [pc, #3496]	; d930 <sfbpf_parse+0x1008>
    cb84:	ldr	r2, [sp, #12]
    cb88:	add	r3, pc, r3
    cb8c:	add	r3, r3, r2
    cb90:	add	r6, sp, #40	; 0x28
    cb94:	ldrb	r3, [r3, #3868]	; 0xf1c
    cb98:	str	r3, [sp, #32]
    cb9c:	rsb	r3, r3, #1
    cba0:	add	r3, r4, r3, lsl #4
    cba4:	ldm	r3, {r0, r1, r2, r3}
    cba8:	stm	r6, {r0, r1, r2, r3}
    cbac:	mov	r5, r3
    cbb0:	ldr	r3, [sp, #12]
    cbb4:	mov	r8, r1
    cbb8:	sub	r3, r3, #2
    cbbc:	mov	r7, r2
    cbc0:	cmp	r3, #200	; 0xc8
    cbc4:	addls	pc, pc, r3, lsl #2
    cbc8:	b	cef8 <sfbpf_parse+0x5d0>
    cbcc:	b	cef0 <sfbpf_parse+0x5c8>
    cbd0:	b	cef8 <sfbpf_parse+0x5d0>
    cbd4:	b	cf88 <sfbpf_parse+0x660>
    cbd8:	b	cef8 <sfbpf_parse+0x5d0>
    cbdc:	b	cf9c <sfbpf_parse+0x674>
    cbe0:	b	cfc4 <sfbpf_parse+0x69c>
    cbe4:	b	cfec <sfbpf_parse+0x6c4>
    cbe8:	b	d014 <sfbpf_parse+0x6ec>
    cbec:	b	d03c <sfbpf_parse+0x714>
    cbf0:	b	d054 <sfbpf_parse+0x72c>
    cbf4:	b	cef8 <sfbpf_parse+0x5d0>
    cbf8:	b	d06c <sfbpf_parse+0x744>
    cbfc:	b	d088 <sfbpf_parse+0x760>
    cc00:	b	d0a0 <sfbpf_parse+0x778>
    cc04:	b	d0b8 <sfbpf_parse+0x790>
    cc08:	b	d0d8 <sfbpf_parse+0x7b0>
    cc0c:	b	d0f8 <sfbpf_parse+0x7d0>
    cc10:	b	d15c <sfbpf_parse+0x834>
    cc14:	b	d17c <sfbpf_parse+0x854>
    cc18:	b	d19c <sfbpf_parse+0x874>
    cc1c:	b	d1c0 <sfbpf_parse+0x898>
    cc20:	b	d1e4 <sfbpf_parse+0x8bc>
    cc24:	b	d204 <sfbpf_parse+0x8dc>
    cc28:	b	d21c <sfbpf_parse+0x8f4>
    cc2c:	b	cef8 <sfbpf_parse+0x5d0>
    cc30:	b	d234 <sfbpf_parse+0x90c>
    cc34:	b	d25c <sfbpf_parse+0x934>
    cc38:	b	d284 <sfbpf_parse+0x95c>
    cc3c:	b	cef8 <sfbpf_parse+0x5d0>
    cc40:	b	cef8 <sfbpf_parse+0x5d0>
    cc44:	b	d2a0 <sfbpf_parse+0x978>
    cc48:	b	d2c0 <sfbpf_parse+0x998>
    cc4c:	b	d2dc <sfbpf_parse+0x9b4>
    cc50:	b	d2f8 <sfbpf_parse+0x9d0>
    cc54:	b	d314 <sfbpf_parse+0x9ec>
    cc58:	b	d330 <sfbpf_parse+0xa08>
    cc5c:	b	d34c <sfbpf_parse+0xa24>
    cc60:	b	d368 <sfbpf_parse+0xa40>
    cc64:	b	d380 <sfbpf_parse+0xa58>
    cc68:	b	d390 <sfbpf_parse+0xa68>
    cc6c:	b	d3b0 <sfbpf_parse+0xa88>
    cc70:	b	d3dc <sfbpf_parse+0xab4>
    cc74:	b	d408 <sfbpf_parse+0xae0>
    cc78:	b	d420 <sfbpf_parse+0xaf8>
    cc7c:	b	d440 <sfbpf_parse+0xb18>
    cc80:	b	d460 <sfbpf_parse+0xb38>
    cc84:	b	d478 <sfbpf_parse+0xb50>
    cc88:	b	d498 <sfbpf_parse+0xb70>
    cc8c:	b	cef8 <sfbpf_parse+0x5d0>
    cc90:	b	d4b0 <sfbpf_parse+0xb88>
    cc94:	b	d4bc <sfbpf_parse+0xb94>
    cc98:	b	d4c8 <sfbpf_parse+0xba0>
    cc9c:	b	d4d4 <sfbpf_parse+0xbac>
    cca0:	b	d4e0 <sfbpf_parse+0xbb8>
    cca4:	b	d4ec <sfbpf_parse+0xbc4>
    cca8:	b	d4f8 <sfbpf_parse+0xbd0>
    ccac:	b	d504 <sfbpf_parse+0xbdc>
    ccb0:	b	d510 <sfbpf_parse+0xbe8>
    ccb4:	b	d51c <sfbpf_parse+0xbf4>
    ccb8:	b	d528 <sfbpf_parse+0xc00>
    ccbc:	b	d534 <sfbpf_parse+0xc0c>
    ccc0:	b	d540 <sfbpf_parse+0xc18>
    ccc4:	b	d54c <sfbpf_parse+0xc24>
    ccc8:	b	d558 <sfbpf_parse+0xc30>
    cccc:	b	d564 <sfbpf_parse+0xc3c>
    ccd0:	b	d570 <sfbpf_parse+0xc48>
    ccd4:	b	d57c <sfbpf_parse+0xc54>
    ccd8:	b	d588 <sfbpf_parse+0xc60>
    ccdc:	b	d594 <sfbpf_parse+0xc6c>
    cce0:	b	d5a0 <sfbpf_parse+0xc78>
    cce4:	b	d5ac <sfbpf_parse+0xc84>
    cce8:	b	d5b8 <sfbpf_parse+0xc90>
    ccec:	b	d5c4 <sfbpf_parse+0xc9c>
    ccf0:	b	d5d0 <sfbpf_parse+0xca8>
    ccf4:	b	d5dc <sfbpf_parse+0xcb4>
    ccf8:	b	d5e8 <sfbpf_parse+0xcc0>
    ccfc:	b	d5f4 <sfbpf_parse+0xccc>
    cd00:	b	d600 <sfbpf_parse+0xcd8>
    cd04:	b	d60c <sfbpf_parse+0xce4>
    cd08:	b	d618 <sfbpf_parse+0xcf0>
    cd0c:	b	d624 <sfbpf_parse+0xcfc>
    cd10:	b	d630 <sfbpf_parse+0xd08>
    cd14:	b	d63c <sfbpf_parse+0xd14>
    cd18:	b	d648 <sfbpf_parse+0xd20>
    cd1c:	b	d654 <sfbpf_parse+0xd2c>
    cd20:	b	d660 <sfbpf_parse+0xd38>
    cd24:	b	d66c <sfbpf_parse+0xd44>
    cd28:	b	d678 <sfbpf_parse+0xd50>
    cd2c:	b	d684 <sfbpf_parse+0xd5c>
    cd30:	b	d690 <sfbpf_parse+0xd68>
    cd34:	b	d69c <sfbpf_parse+0xd74>
    cd38:	b	d6a8 <sfbpf_parse+0xd80>
    cd3c:	b	d6b4 <sfbpf_parse+0xd8c>
    cd40:	b	d6c0 <sfbpf_parse+0xd98>
    cd44:	b	d6cc <sfbpf_parse+0xda4>
    cd48:	b	d6d8 <sfbpf_parse+0xdb0>
    cd4c:	b	d6e4 <sfbpf_parse+0xdbc>
    cd50:	b	d6f0 <sfbpf_parse+0xdc8>
    cd54:	b	d6fc <sfbpf_parse+0xdd4>
    cd58:	b	d708 <sfbpf_parse+0xde0>
    cd5c:	b	d714 <sfbpf_parse+0xdec>
    cd60:	b	d720 <sfbpf_parse+0xdf8>
    cd64:	b	d72c <sfbpf_parse+0xe04>
    cd68:	b	d738 <sfbpf_parse+0xe10>
    cd6c:	b	d748 <sfbpf_parse+0xe20>
    cd70:	b	d758 <sfbpf_parse+0xe30>
    cd74:	b	d768 <sfbpf_parse+0xe40>
    cd78:	b	d778 <sfbpf_parse+0xe50>
    cd7c:	b	d790 <sfbpf_parse+0xe68>
    cd80:	b	d7a0 <sfbpf_parse+0xe78>
    cd84:	b	d7b0 <sfbpf_parse+0xe88>
    cd88:	b	d7c0 <sfbpf_parse+0xe98>
    cd8c:	b	d7d0 <sfbpf_parse+0xea8>
    cd90:	b	d7e0 <sfbpf_parse+0xeb8>
    cd94:	b	d7f0 <sfbpf_parse+0xec8>
    cd98:	b	d7fc <sfbpf_parse+0xed4>
    cd9c:	b	d808 <sfbpf_parse+0xee0>
    cda0:	b	d814 <sfbpf_parse+0xeec>
    cda4:	b	d820 <sfbpf_parse+0xef8>
    cda8:	b	d830 <sfbpf_parse+0xf08>
    cdac:	b	d840 <sfbpf_parse+0xf18>
    cdb0:	b	d850 <sfbpf_parse+0xf28>
    cdb4:	b	d860 <sfbpf_parse+0xf38>
    cdb8:	b	d870 <sfbpf_parse+0xf48>
    cdbc:	b	d880 <sfbpf_parse+0xf58>
    cdc0:	b	d89c <sfbpf_parse+0xf74>
    cdc4:	b	d8b0 <sfbpf_parse+0xf88>
    cdc8:	b	d8c4 <sfbpf_parse+0xf9c>
    cdcc:	b	cef8 <sfbpf_parse+0x5d0>
    cdd0:	b	d8d4 <sfbpf_parse+0xfac>
    cdd4:	b	cef8 <sfbpf_parse+0x5d0>
    cdd8:	b	d9c8 <sfbpf_parse+0x10a0>
    cddc:	b	da18 <sfbpf_parse+0x10f0>
    cde0:	b	cef8 <sfbpf_parse+0x5d0>
    cde4:	b	da78 <sfbpf_parse+0x1150>
    cde8:	b	db04 <sfbpf_parse+0x11dc>
    cdec:	b	db10 <sfbpf_parse+0x11e8>
    cdf0:	b	db1c <sfbpf_parse+0x11f4>
    cdf4:	b	db28 <sfbpf_parse+0x1200>
    cdf8:	b	db34 <sfbpf_parse+0x120c>
    cdfc:	b	db40 <sfbpf_parse+0x1218>
    ce00:	b	db4c <sfbpf_parse+0x1224>
    ce04:	b	db58 <sfbpf_parse+0x1230>
    ce08:	b	db64 <sfbpf_parse+0x123c>
    ce0c:	b	db70 <sfbpf_parse+0x1248>
    ce10:	b	cef8 <sfbpf_parse+0x5d0>
    ce14:	b	db80 <sfbpf_parse+0x1258>
    ce18:	b	db98 <sfbpf_parse+0x1270>
    ce1c:	b	dbb0 <sfbpf_parse+0x1288>
    ce20:	b	dbc8 <sfbpf_parse+0x12a0>
    ce24:	b	dbe0 <sfbpf_parse+0x12b8>
    ce28:	b	dbf8 <sfbpf_parse+0x12d0>
    ce2c:	b	dc10 <sfbpf_parse+0x12e8>
    ce30:	b	dc28 <sfbpf_parse+0x1300>
    ce34:	b	dc40 <sfbpf_parse+0x1318>
    ce38:	b	dc58 <sfbpf_parse+0x1330>
    ce3c:	b	dc70 <sfbpf_parse+0x1348>
    ce40:	b	dc80 <sfbpf_parse+0x1358>
    ce44:	b	dc8c <sfbpf_parse+0x1364>
    ce48:	b	dc98 <sfbpf_parse+0x1370>
    ce4c:	b	dca4 <sfbpf_parse+0x137c>
    ce50:	b	dcb0 <sfbpf_parse+0x1388>
    ce54:	b	dcbc <sfbpf_parse+0x1394>
    ce58:	b	dcc8 <sfbpf_parse+0x13a0>
    ce5c:	b	cef8 <sfbpf_parse+0x5d0>
    ce60:	b	dcd4 <sfbpf_parse+0x13ac>
    ce64:	b	dce0 <sfbpf_parse+0x13b8>
    ce68:	b	dcec <sfbpf_parse+0x13c4>
    ce6c:	b	dcf8 <sfbpf_parse+0x13d0>
    ce70:	b	dd04 <sfbpf_parse+0x13dc>
    ce74:	b	dd10 <sfbpf_parse+0x13e8>
    ce78:	b	dd1c <sfbpf_parse+0x13f4>
    ce7c:	b	dd28 <sfbpf_parse+0x1400>
    ce80:	b	dd34 <sfbpf_parse+0x140c>
    ce84:	b	dd40 <sfbpf_parse+0x1418>
    ce88:	b	dd4c <sfbpf_parse+0x1424>
    ce8c:	b	dd58 <sfbpf_parse+0x1430>
    ce90:	b	dd64 <sfbpf_parse+0x143c>
    ce94:	b	df04 <sfbpf_parse+0x15dc>
    ce98:	b	dd70 <sfbpf_parse+0x1448>
    ce9c:	b	cef8 <sfbpf_parse+0x5d0>
    cea0:	b	dd78 <sfbpf_parse+0x1450>
    cea4:	b	dd94 <sfbpf_parse+0x146c>
    cea8:	b	ddb0 <sfbpf_parse+0x1488>
    ceac:	b	ddc8 <sfbpf_parse+0x14a0>
    ceb0:	b	cef8 <sfbpf_parse+0x5d0>
    ceb4:	b	ddf4 <sfbpf_parse+0x14cc>
    ceb8:	b	de1c <sfbpf_parse+0x14f4>
    cebc:	b	de28 <sfbpf_parse+0x1500>
    cec0:	b	de34 <sfbpf_parse+0x150c>
    cec4:	b	de40 <sfbpf_parse+0x1518>
    cec8:	b	de48 <sfbpf_parse+0x1520>
    cecc:	b	de50 <sfbpf_parse+0x1528>
    ced0:	b	de58 <sfbpf_parse+0x1530>
    ced4:	b	cef8 <sfbpf_parse+0x5d0>
    ced8:	b	de60 <sfbpf_parse+0x1538>
    cedc:	b	de7c <sfbpf_parse+0x1554>
    cee0:	b	de98 <sfbpf_parse+0x1570>
    cee4:	b	deb0 <sfbpf_parse+0x1588>
    cee8:	b	cef8 <sfbpf_parse+0x5d0>
    ceec:	b	dedc <sfbpf_parse+0x15b4>
    cef0:	ldr	r0, [r4, #12]
    cef4:	bl	3138 <sf_finish_parse>
    cef8:	ldrsh	r3, [sp, #32]
    cefc:	str	r8, [sp, #44]	; 0x2c
    cf00:	str	r7, [sp, #48]	; 0x30
    cf04:	str	r5, [sp, #52]	; 0x34
    cf08:	sub	r4, r4, r3, lsl #4
    cf0c:	sub	r9, r9, r3, lsl #1
    cf10:	add	r3, sp, #40	; 0x28
    cf14:	add	r4, r4, #16
    cf18:	ldm	r3, {r0, r1, r2, r3}
    cf1c:	stm	r4, {r0, r1, r2, r3}
    cf20:	ldr	r3, [pc, #2572]	; d934 <sfbpf_parse+0x100c>
    cf24:	ldr	r2, [sp, #12]
    cf28:	add	r3, pc, r3
    cf2c:	add	r2, r3, r2
    cf30:	ldrsh	ip, [r9]
    cf34:	ldrb	r1, [r2, #4075]	; 0xfeb
    cf38:	ldr	r2, [sp, #20]
    cf3c:	ldr	r0, [pc, #2524]	; d920 <sfbpf_parse+0xff8>
    cf40:	sub	r1, r1, #126	; 0x7e
    cf44:	lsl	r1, r1, #1
    cf48:	ldrsh	r2, [r2, r1]
    cf4c:	add	r2, r2, ip
    cf50:	cmp	r2, r0
    cf54:	bhi	cf7c <sfbpf_parse+0x654>
    cf58:	add	r0, r3, #912	; 0x390
    cf5c:	lsl	r2, r2, #1
    cf60:	add	r0, r0, #2
    cf64:	ldrsh	r0, [r0, r2]
    cf68:	cmp	r0, ip
    cf6c:	addeq	r3, r3, #2240	; 0x8c0
    cf70:	addeq	r3, r3, #14
    cf74:	ldrsheq	r5, [r3, r2]
    cf78:	beq	cb5c <sfbpf_parse+0x234>
    cf7c:	ldr	r3, [sp, #24]
    cf80:	ldrsh	r5, [r3, r1]
    cf84:	b	cb5c <sfbpf_parse+0x234>
    cf88:	ldr	r3, [pc, #2472]	; d938 <sfbpf_parse+0x1010>
    cf8c:	add	r3, pc, r3
    cf90:	ldr	r0, [r3, #4071]	; 0xfe7
    cf94:	str	r0, [sp, #40]	; 0x28
    cf98:	b	cef8 <sfbpf_parse+0x5d0>
    cf9c:	ldr	r5, [r4, #12]
    cfa0:	ldr	r0, [r4, #-20]	; 0xffffffec
    cfa4:	mov	r1, r5
    cfa8:	bl	2f48 <sf_gen_and>
    cfac:	ldm	r4, {r0, r1, r2, r3}
    cfb0:	add	ip, sp, #40	; 0x28
    cfb4:	mov	r8, r1
    cfb8:	stm	ip, {r0, r1, r2, r3}
    cfbc:	mov	r7, r2
    cfc0:	b	cef8 <sfbpf_parse+0x5d0>
    cfc4:	ldr	r5, [r4, #12]
    cfc8:	ldr	r0, [r4, #-20]	; 0xffffffec
    cfcc:	mov	r1, r5
    cfd0:	bl	2f48 <sf_gen_and>
    cfd4:	ldm	r4, {r0, r1, r2, r3}
    cfd8:	add	ip, sp, #40	; 0x28
    cfdc:	mov	r8, r1
    cfe0:	stm	ip, {r0, r1, r2, r3}
    cfe4:	mov	r7, r2
    cfe8:	b	cef8 <sfbpf_parse+0x5d0>
    cfec:	ldr	r5, [r4, #12]
    cff0:	ldr	r0, [r4, #-20]	; 0xffffffec
    cff4:	mov	r1, r5
    cff8:	bl	2fc8 <sf_gen_or>
    cffc:	ldm	r4, {r0, r1, r2, r3}
    d000:	add	ip, sp, #40	; 0x28
    d004:	mov	r8, r1
    d008:	stm	ip, {r0, r1, r2, r3}
    d00c:	mov	r7, r2
    d010:	b	cef8 <sfbpf_parse+0x5d0>
    d014:	ldr	r5, [r4, #12]
    d018:	ldr	r0, [r4, #-20]	; 0xffffffec
    d01c:	mov	r1, r5
    d020:	bl	2fc8 <sf_gen_or>
    d024:	ldm	r4, {r0, r1, r2, r3}
    d028:	add	ip, sp, #40	; 0x28
    d02c:	mov	r8, r1
    d030:	stm	ip, {r0, r1, r2, r3}
    d034:	mov	r7, r2
    d038:	b	cef8 <sfbpf_parse+0x5d0>
    d03c:	ldmdb	r4, {r0, r1, r2, r3}
    d040:	stm	r6, {r0, r1, r2, r3}
    d044:	mov	r8, r1
    d048:	mov	r7, r2
    d04c:	mov	r5, r3
    d050:	b	cef8 <sfbpf_parse+0x5d0>
    d054:	ldmdb	r4, {r0, r1, r2, r3}
    d058:	stm	r6, {r0, r1, r2, r3}
    d05c:	mov	r8, r1
    d060:	mov	r7, r2
    d064:	mov	r5, r3
    d068:	b	cef8 <sfbpf_parse+0x5d0>
    d06c:	ldr	r2, [r4, #-16]
    d070:	ldr	r1, [r4]
    d074:	mov	r0, #0
    d078:	str	r2, [sp, #40]	; 0x28
    d07c:	bl	7dbc <sf_gen_ncode>
    d080:	mov	r5, r0
    d084:	b	cef8 <sfbpf_parse+0x5d0>
    d088:	ldmdb	r4, {r0, r1, r2, r3}
    d08c:	stm	r6, {r0, r1, r2, r3}
    d090:	mov	r8, r1
    d094:	mov	r7, r2
    d098:	mov	r5, r3
    d09c:	b	cef8 <sfbpf_parse+0x5d0>
    d0a0:	ldr	r1, [r4, #-16]
    d0a4:	ldr	r0, [r4]
    d0a8:	str	r1, [sp, #40]	; 0x28
    d0ac:	bl	8cec <sf_gen_scode>
    d0b0:	mov	r5, r0
    d0b4:	b	cef8 <sfbpf_parse+0x5d0>
    d0b8:	ldr	r3, [r4, #-48]	; 0xffffffd0
    d0bc:	ldr	r2, [r4]
    d0c0:	mov	r1, #0
    d0c4:	ldr	r0, [r4, #-32]	; 0xffffffe0
    d0c8:	str	r3, [sp, #40]	; 0x28
    d0cc:	bl	73a8 <sf_gen_mcode>
    d0d0:	mov	r5, r0
    d0d4:	b	cef8 <sfbpf_parse+0x5d0>
    d0d8:	ldr	r3, [r4, #-48]	; 0xffffffd0
    d0dc:	mov	r2, #0
    d0e0:	ldr	r1, [r4]
    d0e4:	ldr	r0, [r4, #-32]	; 0xffffffe0
    d0e8:	str	r3, [sp, #40]	; 0x28
    d0ec:	bl	73a8 <sf_gen_mcode>
    d0f0:	mov	r5, r0
    d0f4:	b	cef8 <sfbpf_parse+0x5d0>
    d0f8:	ldr	r2, [r4, #-16]
    d0fc:	str	r2, [sp, #40]	; 0x28
    d100:	uxtb	r3, r2
    d104:	cmp	r3, #3
    d108:	bne	d118 <sfbpf_parse+0x7f0>
    d10c:	ldr	r0, [pc, #2088]	; d93c <sfbpf_parse+0x1014>
    d110:	add	r0, pc, r0
    d114:	bl	20b8 <sf_bpf_error>
    d118:	cmp	r3, #7
    d11c:	ldreq	r0, [pc, #2076]	; d940 <sfbpf_parse+0x1018>
    d120:	addeq	r0, pc, r0
    d124:	beq	d114 <sfbpf_parse+0x7ec>
    d128:	cmp	r3, #5
    d12c:	ldreq	r0, [pc, #2064]	; d944 <sfbpf_parse+0x101c>
    d130:	addeq	r0, pc, r0
    d134:	beq	d114 <sfbpf_parse+0x7ec>
    d138:	cmp	r3, #6
    d13c:	ldreq	r0, [pc, #2052]	; d948 <sfbpf_parse+0x1020>
    d140:	addeq	r0, pc, r0
    d144:	beq	d114 <sfbpf_parse+0x7ec>
    d148:	mov	r1, #0
    d14c:	ldr	r0, [r4]
    d150:	bl	7dbc <sf_gen_ncode>
    d154:	mov	r5, r0
    d158:	b	cef8 <sfbpf_parse+0x5d0>
    d15c:	ldr	r3, [r4, #-48]	; 0xffffffd0
    d160:	ldr	r2, [r4]
    d164:	mov	r1, #0
    d168:	ldr	r0, [r4, #-32]	; 0xffffffe0
    d16c:	str	r3, [sp, #40]	; 0x28
    d170:	bl	8b44 <sf_gen_mcode6>
    d174:	mov	r5, r0
    d178:	b	cef8 <sfbpf_parse+0x5d0>
    d17c:	ldr	r3, [r4, #-16]
    d180:	mov	r2, #128	; 0x80
    d184:	mov	r1, #0
    d188:	ldr	r0, [r4]
    d18c:	str	r3, [sp, #40]	; 0x28
    d190:	bl	8b44 <sf_gen_mcode6>
    d194:	mov	r5, r0
    d198:	b	cef8 <sfbpf_parse+0x5d0>
    d19c:	ldr	r6, [r4]
    d1a0:	ldr	r1, [r4, #-16]
    d1a4:	mov	r0, r6
    d1a8:	str	r1, [sp, #40]	; 0x28
    d1ac:	bl	46fc <sf_gen_ecode>
    d1b0:	mov	r5, r0
    d1b4:	mov	r0, r6
    d1b8:	bl	dc4 <free@plt>
    d1bc:	b	cef8 <sfbpf_parse+0x5d0>
    d1c0:	ldr	r6, [r4]
    d1c4:	ldr	r1, [r4, #-16]
    d1c8:	mov	r0, r6
    d1cc:	str	r1, [sp, #40]	; 0x28
    d1d0:	bl	52f4 <sf_gen_acode>
    d1d4:	mov	r5, r0
    d1d8:	mov	r0, r6
    d1dc:	bl	dc4 <free@plt>
    d1e0:	b	cef8 <sfbpf_parse+0x5d0>
    d1e4:	ldr	r5, [r4, #12]
    d1e8:	mov	r0, r5
    d1ec:	bl	3038 <sf_gen_not>
    d1f0:	ldm	r4, {r0, r1, r2, r3}
    d1f4:	stm	r6, {r0, r1, r2, r3}
    d1f8:	mov	r8, r1
    d1fc:	mov	r7, r2
    d200:	b	cef8 <sfbpf_parse+0x5d0>
    d204:	ldmdb	r4, {r0, r1, r2, r3}
    d208:	stm	r6, {r0, r1, r2, r3}
    d20c:	mov	r8, r1
    d210:	mov	r7, r2
    d214:	mov	r5, r3
    d218:	b	cef8 <sfbpf_parse+0x5d0>
    d21c:	ldmdb	r4, {r0, r1, r2, r3}
    d220:	stm	r6, {r0, r1, r2, r3}
    d224:	mov	r8, r1
    d228:	mov	r7, r2
    d22c:	mov	r5, r3
    d230:	b	cef8 <sfbpf_parse+0x5d0>
    d234:	ldr	r5, [r4, #12]
    d238:	ldr	r0, [r4, #-20]	; 0xffffffec
    d23c:	mov	r1, r5
    d240:	bl	2f48 <sf_gen_and>
    d244:	ldm	r4, {r0, r1, r2, r3}
    d248:	add	ip, sp, #40	; 0x28
    d24c:	mov	r8, r1
    d250:	stm	ip, {r0, r1, r2, r3}
    d254:	mov	r7, r2
    d258:	b	cef8 <sfbpf_parse+0x5d0>
    d25c:	ldr	r5, [r4, #12]
    d260:	ldr	r0, [r4, #-20]	; 0xffffffec
    d264:	mov	r1, r5
    d268:	bl	2fc8 <sf_gen_or>
    d26c:	ldm	r4, {r0, r1, r2, r3}
    d270:	add	ip, sp, #40	; 0x28
    d274:	mov	r8, r1
    d278:	stm	ip, {r0, r1, r2, r3}
    d27c:	mov	r7, r2
    d280:	b	cef8 <sfbpf_parse+0x5d0>
    d284:	ldr	r2, [r4, #-16]
    d288:	ldr	r1, [r4]
    d28c:	mov	r0, #0
    d290:	str	r2, [sp, #40]	; 0x28
    d294:	bl	7dbc <sf_gen_ncode>
    d298:	mov	r5, r0
    d29c:	b	cef8 <sfbpf_parse+0x5d0>
    d2a0:	ldr	r5, [r4, #12]
    d2a4:	mov	r0, r5
    d2a8:	bl	3038 <sf_gen_not>
    d2ac:	ldm	r4, {r0, r1, r2, r3}
    d2b0:	stm	r6, {r0, r1, r2, r3}
    d2b4:	mov	r8, r1
    d2b8:	mov	r7, r2
    d2bc:	b	cef8 <sfbpf_parse+0x5d0>
    d2c0:	ldr	r3, [r4, #-32]	; 0xffffffe0
    d2c4:	strb	r3, [sp, #41]	; 0x29
    d2c8:	ldr	r3, [r4, #-16]
    d2cc:	strb	r3, [sp, #42]	; 0x2a
    d2d0:	ldr	r3, [r4]
    d2d4:	strb	r3, [sp, #40]	; 0x28
    d2d8:	b	cef8 <sfbpf_parse+0x5d0>
    d2dc:	ldr	r3, [r4, #-16]
    d2e0:	strb	r3, [sp, #41]	; 0x29
    d2e4:	ldr	r3, [r4]
    d2e8:	strb	r3, [sp, #42]	; 0x2a
    d2ec:	mov	r3, #0
    d2f0:	strb	r3, [sp, #40]	; 0x28
    d2f4:	b	cef8 <sfbpf_parse+0x5d0>
    d2f8:	ldr	r3, [r4, #-16]
    d2fc:	strb	r3, [sp, #41]	; 0x29
    d300:	mov	r3, #0
    d304:	strb	r3, [sp, #42]	; 0x2a
    d308:	ldr	r3, [r4]
    d30c:	strb	r3, [sp, #40]	; 0x28
    d310:	b	cef8 <sfbpf_parse+0x5d0>
    d314:	ldr	r3, [r4, #-16]
    d318:	strb	r3, [sp, #41]	; 0x29
    d31c:	mov	r3, #0
    d320:	strb	r3, [sp, #42]	; 0x2a
    d324:	mov	r3, #5
    d328:	strb	r3, [sp, #40]	; 0x28
    d32c:	b	cef8 <sfbpf_parse+0x5d0>
    d330:	ldr	r3, [r4, #-16]
    d334:	strb	r3, [sp, #41]	; 0x29
    d338:	mov	r3, #0
    d33c:	strb	r3, [sp, #42]	; 0x2a
    d340:	mov	r3, #6
    d344:	strb	r3, [sp, #40]	; 0x28
    d348:	b	cef8 <sfbpf_parse+0x5d0>
    d34c:	ldr	r3, [r4, #-16]
    d350:	strb	r3, [sp, #41]	; 0x29
    d354:	mov	r3, #0
    d358:	strb	r3, [sp, #42]	; 0x2a
    d35c:	ldr	r3, [r4]
    d360:	strb	r3, [sp, #40]	; 0x28
    d364:	b	cef8 <sfbpf_parse+0x5d0>
    d368:	ldm	r4, {r0, r1, r2, r3}
    d36c:	stm	r6, {r0, r1, r2, r3}
    d370:	mov	r8, r1
    d374:	mov	r7, r2
    d378:	mov	r5, r3
    d37c:	b	cef8 <sfbpf_parse+0x5d0>
    d380:	ldr	r3, [r4, #-32]	; 0xffffffe0
    d384:	ldr	r5, [r4, #-4]
    d388:	str	r3, [sp, #40]	; 0x28
    d38c:	b	cef8 <sfbpf_parse+0x5d0>
    d390:	ldr	r0, [r4]
    d394:	bl	637c <sf_gen_proto_abbrev>
    d398:	ldr	r3, [pc, #1452]	; d94c <sfbpf_parse+0x1024>
    d39c:	add	r3, pc, r3
    d3a0:	mov	r5, r0
    d3a4:	ldr	r0, [r3, #4071]	; 0xfe7
    d3a8:	str	r0, [sp, #40]	; 0x28
    d3ac:	b	cef8 <sfbpf_parse+0x5d0>
    d3b0:	mov	r3, #0
    d3b4:	ldr	r2, [r4]
    d3b8:	ldr	r1, [r4, #-32]	; 0xffffffe0
    d3bc:	ldr	r0, [r4, #-16]
    d3c0:	bl	4ddc <sf_gen_relation>
    d3c4:	ldr	r3, [pc, #1412]	; d950 <sfbpf_parse+0x1028>
    d3c8:	add	r3, pc, r3
    d3cc:	mov	r5, r0
    d3d0:	ldr	r0, [r3, #4071]	; 0xfe7
    d3d4:	str	r0, [sp, #40]	; 0x28
    d3d8:	b	cef8 <sfbpf_parse+0x5d0>
    d3dc:	mov	r3, #1
    d3e0:	ldr	r2, [r4]
    d3e4:	ldr	r1, [r4, #-32]	; 0xffffffe0
    d3e8:	ldr	r0, [r4, #-16]
    d3ec:	bl	4ddc <sf_gen_relation>
    d3f0:	ldr	r3, [pc, #1372]	; d954 <sfbpf_parse+0x102c>
    d3f4:	add	r3, pc, r3
    d3f8:	mov	r5, r0
    d3fc:	ldr	r0, [r3, #4071]	; 0xfe7
    d400:	str	r0, [sp, #40]	; 0x28
    d404:	b	cef8 <sfbpf_parse+0x5d0>
    d408:	ldr	r3, [pc, #1352]	; d958 <sfbpf_parse+0x1030>
    d40c:	ldr	r5, [r4]
    d410:	add	r3, pc, r3
    d414:	ldr	r0, [r3, #4071]	; 0xfe7
    d418:	str	r0, [sp, #40]	; 0x28
    d41c:	b	cef8 <sfbpf_parse+0x5d0>
    d420:	ldr	r0, [r4]
    d424:	bl	93c4 <sf_gen_atmtype_abbrev>
    d428:	ldr	r3, [pc, #1324]	; d95c <sfbpf_parse+0x1034>
    d42c:	add	r3, pc, r3
    d430:	mov	r5, r0
    d434:	ldr	r0, [r3, #4071]	; 0xfe7
    d438:	str	r0, [sp, #40]	; 0x28
    d43c:	b	cef8 <sfbpf_parse+0x5d0>
    d440:	ldr	r0, [r4]
    d444:	bl	99b8 <sf_gen_atmmulti_abbrev>
    d448:	ldr	r3, [pc, #1296]	; d960 <sfbpf_parse+0x1038>
    d44c:	add	r3, pc, r3
    d450:	mov	r5, r0
    d454:	ldr	r0, [r3, #4071]	; 0xfe7
    d458:	str	r0, [sp, #40]	; 0x28
    d45c:	b	cef8 <sfbpf_parse+0x5d0>
    d460:	ldr	r3, [pc, #1276]	; d964 <sfbpf_parse+0x103c>
    d464:	ldr	r5, [r4, #12]
    d468:	add	r3, pc, r3
    d46c:	ldr	r0, [r3, #4071]	; 0xfe7
    d470:	str	r0, [sp, #40]	; 0x28
    d474:	b	cef8 <sfbpf_parse+0x5d0>
    d478:	ldr	r0, [r4]
    d47c:	bl	96a8 <sf_gen_mtp2type_abbrev>
    d480:	ldr	r3, [pc, #1248]	; d968 <sfbpf_parse+0x1040>
    d484:	add	r3, pc, r3
    d488:	mov	r5, r0
    d48c:	ldr	r0, [r3, #4071]	; 0xfe7
    d490:	str	r0, [sp, #40]	; 0x28
    d494:	b	cef8 <sfbpf_parse+0x5d0>
    d498:	ldr	r3, [pc, #1228]	; d96c <sfbpf_parse+0x1044>
    d49c:	ldr	r5, [r4, #12]
    d4a0:	add	r3, pc, r3
    d4a4:	ldr	r0, [r3, #4071]	; 0xfe7
    d4a8:	str	r0, [sp, #40]	; 0x28
    d4ac:	b	cef8 <sfbpf_parse+0x5d0>
    d4b0:	mov	r3, #0
    d4b4:	str	r3, [sp, #40]	; 0x28
    d4b8:	b	cef8 <sfbpf_parse+0x5d0>
    d4bc:	mov	r3, #1
    d4c0:	str	r3, [sp, #40]	; 0x28
    d4c4:	b	cef8 <sfbpf_parse+0x5d0>
    d4c8:	mov	r3, #2
    d4cc:	str	r3, [sp, #40]	; 0x28
    d4d0:	b	cef8 <sfbpf_parse+0x5d0>
    d4d4:	mov	r3, #3
    d4d8:	str	r3, [sp, #40]	; 0x28
    d4dc:	b	cef8 <sfbpf_parse+0x5d0>
    d4e0:	mov	r3, #3
    d4e4:	str	r3, [sp, #40]	; 0x28
    d4e8:	b	cef8 <sfbpf_parse+0x5d0>
    d4ec:	mov	r3, #4
    d4f0:	str	r3, [sp, #40]	; 0x28
    d4f4:	b	cef8 <sfbpf_parse+0x5d0>
    d4f8:	mov	r3, #4
    d4fc:	str	r3, [sp, #40]	; 0x28
    d500:	b	cef8 <sfbpf_parse+0x5d0>
    d504:	mov	r3, #5
    d508:	str	r3, [sp, #40]	; 0x28
    d50c:	b	cef8 <sfbpf_parse+0x5d0>
    d510:	mov	r3, #6
    d514:	str	r3, [sp, #40]	; 0x28
    d518:	b	cef8 <sfbpf_parse+0x5d0>
    d51c:	mov	r3, #7
    d520:	str	r3, [sp, #40]	; 0x28
    d524:	b	cef8 <sfbpf_parse+0x5d0>
    d528:	mov	r3, #8
    d52c:	str	r3, [sp, #40]	; 0x28
    d530:	b	cef8 <sfbpf_parse+0x5d0>
    d534:	mov	r3, #1
    d538:	str	r3, [sp, #40]	; 0x28
    d53c:	b	cef8 <sfbpf_parse+0x5d0>
    d540:	mov	r3, #2
    d544:	str	r3, [sp, #40]	; 0x28
    d548:	b	cef8 <sfbpf_parse+0x5d0>
    d54c:	mov	r3, #3
    d550:	str	r3, [sp, #40]	; 0x28
    d554:	b	cef8 <sfbpf_parse+0x5d0>
    d558:	mov	r3, #7
    d55c:	str	r3, [sp, #40]	; 0x28
    d560:	b	cef8 <sfbpf_parse+0x5d0>
    d564:	mov	r3, #4
    d568:	str	r3, [sp, #40]	; 0x28
    d56c:	b	cef8 <sfbpf_parse+0x5d0>
    d570:	mov	r3, #1
    d574:	str	r3, [sp, #40]	; 0x28
    d578:	b	cef8 <sfbpf_parse+0x5d0>
    d57c:	mov	r3, #2
    d580:	str	r3, [sp, #40]	; 0x28
    d584:	b	cef8 <sfbpf_parse+0x5d0>
    d588:	mov	r3, #3
    d58c:	str	r3, [sp, #40]	; 0x28
    d590:	b	cef8 <sfbpf_parse+0x5d0>
    d594:	mov	r3, #4
    d598:	str	r3, [sp, #40]	; 0x28
    d59c:	b	cef8 <sfbpf_parse+0x5d0>
    d5a0:	mov	r3, #5
    d5a4:	str	r3, [sp, #40]	; 0x28
    d5a8:	b	cef8 <sfbpf_parse+0x5d0>
    d5ac:	mov	r3, #6
    d5b0:	str	r3, [sp, #40]	; 0x28
    d5b4:	b	cef8 <sfbpf_parse+0x5d0>
    d5b8:	mov	r3, #7
    d5bc:	str	r3, [sp, #40]	; 0x28
    d5c0:	b	cef8 <sfbpf_parse+0x5d0>
    d5c4:	mov	r3, #8
    d5c8:	str	r3, [sp, #40]	; 0x28
    d5cc:	b	cef8 <sfbpf_parse+0x5d0>
    d5d0:	mov	r3, #9
    d5d4:	str	r3, [sp, #40]	; 0x28
    d5d8:	b	cef8 <sfbpf_parse+0x5d0>
    d5dc:	mov	r3, #10
    d5e0:	str	r3, [sp, #40]	; 0x28
    d5e4:	b	cef8 <sfbpf_parse+0x5d0>
    d5e8:	mov	r3, #21
    d5ec:	str	r3, [sp, #40]	; 0x28
    d5f0:	b	cef8 <sfbpf_parse+0x5d0>
    d5f4:	mov	r3, #22
    d5f8:	str	r3, [sp, #40]	; 0x28
    d5fc:	b	cef8 <sfbpf_parse+0x5d0>
    d600:	mov	r3, #11
    d604:	str	r3, [sp, #40]	; 0x28
    d608:	b	cef8 <sfbpf_parse+0x5d0>
    d60c:	mov	r3, #23
    d610:	str	r3, [sp, #40]	; 0x28
    d614:	b	cef8 <sfbpf_parse+0x5d0>
    d618:	mov	r3, #12
    d61c:	str	r3, [sp, #40]	; 0x28
    d620:	b	cef8 <sfbpf_parse+0x5d0>
    d624:	mov	r3, #13
    d628:	str	r3, [sp, #40]	; 0x28
    d62c:	b	cef8 <sfbpf_parse+0x5d0>
    d630:	mov	r3, #14
    d634:	str	r3, [sp, #40]	; 0x28
    d638:	b	cef8 <sfbpf_parse+0x5d0>
    d63c:	mov	r3, #16
    d640:	str	r3, [sp, #40]	; 0x28
    d644:	b	cef8 <sfbpf_parse+0x5d0>
    d648:	mov	r3, #15
    d64c:	str	r3, [sp, #40]	; 0x28
    d650:	b	cef8 <sfbpf_parse+0x5d0>
    d654:	mov	r3, #17
    d658:	str	r3, [sp, #40]	; 0x28
    d65c:	b	cef8 <sfbpf_parse+0x5d0>
    d660:	mov	r3, #18
    d664:	str	r3, [sp, #40]	; 0x28
    d668:	b	cef8 <sfbpf_parse+0x5d0>
    d66c:	mov	r3, #19
    d670:	str	r3, [sp, #40]	; 0x28
    d674:	b	cef8 <sfbpf_parse+0x5d0>
    d678:	mov	r3, #20
    d67c:	str	r3, [sp, #40]	; 0x28
    d680:	b	cef8 <sfbpf_parse+0x5d0>
    d684:	mov	r3, #24
    d688:	str	r3, [sp, #40]	; 0x28
    d68c:	b	cef8 <sfbpf_parse+0x5d0>
    d690:	mov	r3, #25
    d694:	str	r3, [sp, #40]	; 0x28
    d698:	b	cef8 <sfbpf_parse+0x5d0>
    d69c:	mov	r3, #26
    d6a0:	str	r3, [sp, #40]	; 0x28
    d6a4:	b	cef8 <sfbpf_parse+0x5d0>
    d6a8:	mov	r3, #31
    d6ac:	str	r3, [sp, #40]	; 0x28
    d6b0:	b	cef8 <sfbpf_parse+0x5d0>
    d6b4:	mov	r3, #32
    d6b8:	str	r3, [sp, #40]	; 0x28
    d6bc:	b	cef8 <sfbpf_parse+0x5d0>
    d6c0:	mov	r3, #33	; 0x21
    d6c4:	str	r3, [sp, #40]	; 0x28
    d6c8:	b	cef8 <sfbpf_parse+0x5d0>
    d6cc:	mov	r3, #39	; 0x27
    d6d0:	str	r3, [sp, #40]	; 0x28
    d6d4:	b	cef8 <sfbpf_parse+0x5d0>
    d6d8:	mov	r3, #36	; 0x24
    d6dc:	str	r3, [sp, #40]	; 0x28
    d6e0:	b	cef8 <sfbpf_parse+0x5d0>
    d6e4:	mov	r3, #38	; 0x26
    d6e8:	str	r3, [sp, #40]	; 0x28
    d6ec:	b	cef8 <sfbpf_parse+0x5d0>
    d6f0:	mov	r3, #37	; 0x25
    d6f4:	str	r3, [sp, #40]	; 0x28
    d6f8:	b	cef8 <sfbpf_parse+0x5d0>
    d6fc:	mov	r3, #27
    d700:	str	r3, [sp, #40]	; 0x28
    d704:	b	cef8 <sfbpf_parse+0x5d0>
    d708:	mov	r3, #28
    d70c:	str	r3, [sp, #40]	; 0x28
    d710:	b	cef8 <sfbpf_parse+0x5d0>
    d714:	mov	r3, #29
    d718:	str	r3, [sp, #40]	; 0x28
    d71c:	b	cef8 <sfbpf_parse+0x5d0>
    d720:	mov	r3, #30
    d724:	str	r3, [sp, #40]	; 0x28
    d728:	b	cef8 <sfbpf_parse+0x5d0>
    d72c:	mov	r3, #40	; 0x28
    d730:	str	r3, [sp, #40]	; 0x28
    d734:	b	cef8 <sfbpf_parse+0x5d0>
    d738:	ldr	r0, [r4, #-16]
    d73c:	bl	803c <sf_gen_broadcast>
    d740:	str	r0, [sp, #40]	; 0x28
    d744:	b	cef8 <sfbpf_parse+0x5d0>
    d748:	ldr	r0, [r4, #-16]
    d74c:	bl	8298 <sf_gen_multicast>
    d750:	str	r0, [sp, #40]	; 0x28
    d754:	b	cef8 <sfbpf_parse+0x5d0>
    d758:	ldr	r0, [r4]
    d75c:	bl	50b0 <sf_gen_less>
    d760:	str	r0, [sp, #40]	; 0x28
    d764:	b	cef8 <sfbpf_parse+0x5d0>
    d768:	ldr	r0, [r4]
    d76c:	bl	5088 <sf_gen_greater>
    d770:	str	r0, [sp, #40]	; 0x28
    d774:	b	cef8 <sfbpf_parse+0x5d0>
    d778:	ldr	r2, [r4]
    d77c:	ldr	r1, [r4, #-32]	; 0xffffffe0
    d780:	ldr	r0, [r4, #-16]
    d784:	bl	50e8 <sf_gen_byteop>
    d788:	str	r0, [sp, #40]	; 0x28
    d78c:	b	cef8 <sfbpf_parse+0x5d0>
    d790:	mov	r0, #0
    d794:	bl	6b94 <sf_gen_inbound>
    d798:	str	r0, [sp, #40]	; 0x28
    d79c:	b	cef8 <sfbpf_parse+0x5d0>
    d7a0:	mov	r0, #1
    d7a4:	bl	6b94 <sf_gen_inbound>
    d7a8:	str	r0, [sp, #40]	; 0x28
    d7ac:	b	cef8 <sfbpf_parse+0x5d0>
    d7b0:	ldr	r0, [r4]
    d7b4:	bl	5364 <sf_gen_vlan>
    d7b8:	str	r0, [sp, #40]	; 0x28
    d7bc:	b	cef8 <sfbpf_parse+0x5d0>
    d7c0:	mvn	r0, #0
    d7c4:	bl	5364 <sf_gen_vlan>
    d7c8:	str	r0, [sp, #40]	; 0x28
    d7cc:	b	cef8 <sfbpf_parse+0x5d0>
    d7d0:	ldr	r0, [r4]
    d7d4:	bl	859c <sf_gen_mpls>
    d7d8:	str	r0, [sp, #40]	; 0x28
    d7dc:	b	cef8 <sfbpf_parse+0x5d0>
    d7e0:	mvn	r0, #0
    d7e4:	bl	859c <sf_gen_mpls>
    d7e8:	str	r0, [sp, #40]	; 0x28
    d7ec:	b	cef8 <sfbpf_parse+0x5d0>
    d7f0:	bl	86b4 <sf_gen_pppoed>
    d7f4:	str	r0, [sp, #40]	; 0x28
    d7f8:	b	cef8 <sfbpf_parse+0x5d0>
    d7fc:	bl	86c0 <sf_gen_pppoes>
    d800:	str	r0, [sp, #40]	; 0x28
    d804:	b	cef8 <sfbpf_parse+0x5d0>
    d808:	ldr	r3, [r4]
    d80c:	str	r3, [sp, #40]	; 0x28
    d810:	b	cef8 <sfbpf_parse+0x5d0>
    d814:	ldr	r3, [r4]
    d818:	str	r3, [sp, #40]	; 0x28
    d81c:	b	cef8 <sfbpf_parse+0x5d0>
    d820:	ldr	r0, [r4]
    d824:	bl	51a8 <sf_gen_pf_ifname>
    d828:	str	r0, [sp, #40]	; 0x28
    d82c:	b	cef8 <sfbpf_parse+0x5d0>
    d830:	ldr	r0, [r4]
    d834:	bl	51bc <sf_gen_pf_ruleset>
    d838:	str	r0, [sp, #40]	; 0x28
    d83c:	b	cef8 <sfbpf_parse+0x5d0>
    d840:	ldr	r0, [r4]
    d844:	bl	51d0 <sf_gen_pf_rnr>
    d848:	str	r0, [sp, #40]	; 0x28
    d84c:	b	cef8 <sfbpf_parse+0x5d0>
    d850:	ldr	r0, [r4]
    d854:	bl	51e4 <sf_gen_pf_srnr>
    d858:	str	r0, [sp, #40]	; 0x28
    d85c:	b	cef8 <sfbpf_parse+0x5d0>
    d860:	ldr	r0, [r4]
    d864:	bl	51f8 <sf_gen_pf_reason>
    d868:	str	r0, [sp, #40]	; 0x28
    d86c:	b	cef8 <sfbpf_parse+0x5d0>
    d870:	ldr	r0, [r4]
    d874:	bl	520c <sf_gen_pf_action>
    d878:	str	r0, [sp, #40]	; 0x28
    d87c:	b	cef8 <sfbpf_parse+0x5d0>
    d880:	ldr	r0, [r4, #-32]	; 0xffffffe0
    d884:	ldr	r3, [r4]
    d888:	mov	r1, #252	; 0xfc
    d88c:	orr	r0, r0, r3
    d890:	bl	5220 <sf_gen_p80211_type>
    d894:	str	r0, [sp, #40]	; 0x28
    d898:	b	cef8 <sfbpf_parse+0x5d0>
    d89c:	mov	r1, #12
    d8a0:	ldr	r0, [r4]
    d8a4:	bl	5220 <sf_gen_p80211_type>
    d8a8:	str	r0, [sp, #40]	; 0x28
    d8ac:	b	cef8 <sfbpf_parse+0x5d0>
    d8b0:	mov	r1, #252	; 0xfc
    d8b4:	ldr	r0, [r4]
    d8b8:	bl	5220 <sf_gen_p80211_type>
    d8bc:	str	r0, [sp, #40]	; 0x28
    d8c0:	b	cef8 <sfbpf_parse+0x5d0>
    d8c4:	ldr	r0, [r4]
    d8c8:	bl	5288 <sf_gen_p80211_fcdir>
    d8cc:	str	r0, [sp, #40]	; 0x28
    d8d0:	b	cef8 <sfbpf_parse+0x5d0>
    d8d4:	ldr	r1, [pc, #148]	; d970 <sfbpf_parse+0x1048>
    d8d8:	ldr	r0, [r4]
    d8dc:	add	r1, pc, r1
    d8e0:	bl	c8e8 <str2tok>
    d8e4:	cmn	r0, #1
    d8e8:	str	r0, [sp, #40]	; 0x28
    d8ec:	bne	cef8 <sfbpf_parse+0x5d0>
    d8f0:	ldr	r0, [pc, #124]	; d974 <sfbpf_parse+0x104c>
    d8f4:	add	r0, pc, r0
    d8f8:	b	d114 <sfbpf_parse+0x7ec>
    d8fc:	.word	0x000206c0
    d900:	.word	0x000000d0
    d904:	.word	0x000000b8
    d908:	.word	0x00006d90
    d90c:	.word	0x00006d7c
    d910:	.word	0x0000270f
    d914:	.word	0x00004c8c
    d918:	.word	0x0000016d
    d91c:	.word	0x00004c38
    d920:	.word	0x0000029d
    d924:	.word	0x00004c14
    d928:	.word	0x000000f8
    d92c:	.word	0x00004bb4
    d930:	.word	0x00004b94
    d934:	.word	0x000047f4
    d938:	.word	0x00004790
    d93c:	.word	0x0000577a
    d940:	.word	0x0000578d
    d944:	.word	0x000057a5
    d948:	.word	0x000057b9
    d94c:	.word	0x00004380
    d950:	.word	0x00004354
    d954:	.word	0x00004328
    d958:	.word	0x0000430c
    d95c:	.word	0x000042f0
    d960:	.word	0x000042d0
    d964:	.word	0x000042b4
    d968:	.word	0x00004298
    d96c:	.word	0x0000427c
    d970:	.word	0x0001f484
    d974:	.word	0x0000502e
    d978:	.word	0x0001f394
    d97c:	.word	0x00004f5b
    d980:	.word	0x00004f3f
    d984:	.word	0x0001f340
    d988:	.word	0x0001f308
    d98c:	.word	0x00004ee7
    d990:	.word	0x00004ed9
    d994:	.word	0x00004eb0
    d998:	.word	0x00004e97
    d99c:	.word	0x00004e82
    d9a0:	.word	0x00002590
    d9a4:	.word	0x00002584
    d9a8:	.word	0x00003964
    d9ac:	.word	0x0000387c
    d9b0:	.word	0x00004a6b
    d9b4:	.word	0x00002f44
    d9b8:	.word	0x0001fc08
    d9bc:	.word	0x0001fbe8
    d9c0:	.word	0x00004a48
    d9c4:	.word	0x00002f10
    d9c8:	ldr	r3, [pc, #-88]	; d978 <sfbpf_parse+0x1050>
    d9cc:	add	r3, pc, r3
    d9d0:	add	r3, r3, #48	; 0x30
    d9d4:	ldr	r1, [r3, #4]
    d9d8:	cmp	r1, #0
    d9dc:	ldreq	r0, [pc, #-104]	; d97c <sfbpf_parse+0x1054>
    d9e0:	addeq	r0, pc, r0
    d9e4:	beq	d114 <sfbpf_parse+0x7ec>
    d9e8:	ldr	r0, [r4, #-32]	; 0xffffffe0
    d9ec:	ldr	r2, [r3], #8
    d9f0:	cmp	r0, r2
    d9f4:	bne	d9d4 <sfbpf_parse+0x10ac>
    d9f8:	ldr	r0, [r4]
    d9fc:	bl	c8e8 <str2tok>
    da00:	cmn	r0, #1
    da04:	str	r0, [sp, #40]	; 0x28
    da08:	bne	cef8 <sfbpf_parse+0x5d0>
    da0c:	ldr	r0, [pc, #-148]	; d980 <sfbpf_parse+0x1058>
    da10:	add	r0, pc, r0
    da14:	b	d114 <sfbpf_parse+0x7ec>
    da18:	ldr	r6, [pc, #-156]	; d984 <sfbpf_parse+0x105c>
    da1c:	mov	r3, #0
    da20:	add	r6, pc, r6
    da24:	add	r6, r6, #48	; 0x30
    da28:	ldr	r1, [r6, #4]
    da2c:	str	r3, [sp, #36]	; 0x24
    da30:	cmp	r1, #0
    da34:	beq	d8f0 <sfbpf_parse+0xfc8>
    da38:	ldr	r0, [r4]
    da3c:	bl	c8e8 <str2tok>
    da40:	add	r6, r6, #8
    da44:	ldr	r3, [sp, #36]	; 0x24
    da48:	cmn	r0, #1
    da4c:	str	r0, [sp, #40]	; 0x28
    da50:	beq	da70 <sfbpf_parse+0x1148>
    da54:	ldr	r2, [pc, #-212]	; d988 <sfbpf_parse+0x1060>
    da58:	add	r2, pc, r2
    da5c:	add	r3, r2, r3, lsl #3
    da60:	ldr	r3, [r3, #48]	; 0x30
    da64:	orr	r0, r3, r0
    da68:	str	r0, [sp, #40]	; 0x28
    da6c:	b	cef8 <sfbpf_parse+0x5d0>
    da70:	add	r3, r3, #1
    da74:	b	da28 <sfbpf_parse+0x1100>
    da78:	ldr	r6, [r4]
    da7c:	ldr	r1, [pc, #-248]	; d98c <sfbpf_parse+0x1064>
    da80:	mov	r0, r6
    da84:	add	r1, pc, r1
    da88:	bl	c710 <sfbpf_strcasecmp>
    da8c:	cmp	r0, #0
    da90:	streq	r0, [sp, #40]	; 0x28
    da94:	beq	cef8 <sfbpf_parse+0x5d0>
    da98:	ldr	r1, [pc, #-272]	; d990 <sfbpf_parse+0x1068>
    da9c:	mov	r0, r6
    daa0:	add	r1, pc, r1
    daa4:	bl	c710 <sfbpf_strcasecmp>
    daa8:	cmp	r0, #0
    daac:	moveq	r3, #1
    dab0:	streq	r3, [sp, #40]	; 0x28
    dab4:	beq	cef8 <sfbpf_parse+0x5d0>
    dab8:	ldr	r1, [pc, #-300]	; d994 <sfbpf_parse+0x106c>
    dabc:	mov	r0, r6
    dac0:	add	r1, pc, r1
    dac4:	bl	c710 <sfbpf_strcasecmp>
    dac8:	cmp	r0, #0
    dacc:	moveq	r3, #2
    dad0:	streq	r3, [sp, #40]	; 0x28
    dad4:	beq	cef8 <sfbpf_parse+0x5d0>
    dad8:	ldr	r1, [pc, #-328]	; d998 <sfbpf_parse+0x1070>
    dadc:	mov	r0, r6
    dae0:	add	r1, pc, r1
    dae4:	bl	c710 <sfbpf_strcasecmp>
    dae8:	cmp	r0, #0
    daec:	moveq	r3, #3
    daf0:	streq	r3, [sp, #40]	; 0x28
    daf4:	beq	cef8 <sfbpf_parse+0x5d0>
    daf8:	ldr	r0, [pc, #-356]	; d99c <sfbpf_parse+0x1074>
    dafc:	add	r0, pc, r0
    db00:	b	d114 <sfbpf_parse+0x7ec>
    db04:	ldr	r3, [r4]
    db08:	str	r3, [sp, #40]	; 0x28
    db0c:	b	cef8 <sfbpf_parse+0x5d0>
    db10:	ldr	r0, [pc, #-376]	; d9a0 <sfbpf_parse+0x1078>
    db14:	add	r0, pc, r0
    db18:	b	d114 <sfbpf_parse+0x7ec>
    db1c:	ldr	r0, [pc, #-384]	; d9a4 <sfbpf_parse+0x107c>
    db20:	add	r0, pc, r0
    db24:	b	d114 <sfbpf_parse+0x7ec>
    db28:	mov	r3, #32
    db2c:	str	r3, [sp, #40]	; 0x28
    db30:	b	cef8 <sfbpf_parse+0x5d0>
    db34:	mov	r3, #48	; 0x30
    db38:	str	r3, [sp, #40]	; 0x28
    db3c:	b	cef8 <sfbpf_parse+0x5d0>
    db40:	mov	r3, #16
    db44:	str	r3, [sp, #40]	; 0x28
    db48:	b	cef8 <sfbpf_parse+0x5d0>
    db4c:	mov	r3, #32
    db50:	str	r3, [sp, #40]	; 0x28
    db54:	b	cef8 <sfbpf_parse+0x5d0>
    db58:	mov	r3, #48	; 0x30
    db5c:	str	r3, [sp, #40]	; 0x28
    db60:	b	cef8 <sfbpf_parse+0x5d0>
    db64:	mov	r3, #16
    db68:	str	r3, [sp, #40]	; 0x28
    db6c:	b	cef8 <sfbpf_parse+0x5d0>
    db70:	ldr	r0, [r4]
    db74:	bl	4f30 <sf_gen_loadi>
    db78:	str	r0, [sp, #40]	; 0x28
    db7c:	b	cef8 <sfbpf_parse+0x5d0>
    db80:	mov	r2, #1
    db84:	ldr	r1, [r4, #-16]
    db88:	ldr	r0, [r4, #-48]	; 0xffffffd0
    db8c:	bl	684c <sf_gen_load>
    db90:	str	r0, [sp, #40]	; 0x28
    db94:	b	cef8 <sfbpf_parse+0x5d0>
    db98:	ldr	r2, [r4, #-16]
    db9c:	ldr	r1, [r4, #-48]	; 0xffffffd0
    dba0:	ldr	r0, [r4, #-80]	; 0xffffffb0
    dba4:	bl	684c <sf_gen_load>
    dba8:	str	r0, [sp, #40]	; 0x28
    dbac:	b	cef8 <sfbpf_parse+0x5d0>
    dbb0:	ldr	r2, [r4]
    dbb4:	ldr	r1, [r4, #-32]	; 0xffffffe0
    dbb8:	mov	r0, #0
    dbbc:	bl	4fd4 <sf_gen_arth>
    dbc0:	str	r0, [sp, #40]	; 0x28
    dbc4:	b	cef8 <sfbpf_parse+0x5d0>
    dbc8:	ldr	r2, [r4]
    dbcc:	ldr	r1, [r4, #-32]	; 0xffffffe0
    dbd0:	mov	r0, #16
    dbd4:	bl	4fd4 <sf_gen_arth>
    dbd8:	str	r0, [sp, #40]	; 0x28
    dbdc:	b	cef8 <sfbpf_parse+0x5d0>
    dbe0:	ldr	r2, [r4]
    dbe4:	ldr	r1, [r4, #-32]	; 0xffffffe0
    dbe8:	mov	r0, #32
    dbec:	bl	4fd4 <sf_gen_arth>
    dbf0:	str	r0, [sp, #40]	; 0x28
    dbf4:	b	cef8 <sfbpf_parse+0x5d0>
    dbf8:	ldr	r2, [r4]
    dbfc:	ldr	r1, [r4, #-32]	; 0xffffffe0
    dc00:	mov	r0, #48	; 0x30
    dc04:	bl	4fd4 <sf_gen_arth>
    dc08:	str	r0, [sp, #40]	; 0x28
    dc0c:	b	cef8 <sfbpf_parse+0x5d0>
    dc10:	ldr	r2, [r4]
    dc14:	ldr	r1, [r4, #-32]	; 0xffffffe0
    dc18:	mov	r0, #80	; 0x50
    dc1c:	bl	4fd4 <sf_gen_arth>
    dc20:	str	r0, [sp, #40]	; 0x28
    dc24:	b	cef8 <sfbpf_parse+0x5d0>
    dc28:	ldr	r2, [r4]
    dc2c:	ldr	r1, [r4, #-32]	; 0xffffffe0
    dc30:	mov	r0, #64	; 0x40
    dc34:	bl	4fd4 <sf_gen_arth>
    dc38:	str	r0, [sp, #40]	; 0x28
    dc3c:	b	cef8 <sfbpf_parse+0x5d0>
    dc40:	ldr	r2, [r4]
    dc44:	ldr	r1, [r4, #-32]	; 0xffffffe0
    dc48:	mov	r0, #96	; 0x60
    dc4c:	bl	4fd4 <sf_gen_arth>
    dc50:	str	r0, [sp, #40]	; 0x28
    dc54:	b	cef8 <sfbpf_parse+0x5d0>
    dc58:	ldr	r2, [r4]
    dc5c:	ldr	r1, [r4, #-32]	; 0xffffffe0
    dc60:	mov	r0, #112	; 0x70
    dc64:	bl	4fd4 <sf_gen_arth>
    dc68:	str	r0, [sp, #40]	; 0x28
    dc6c:	b	cef8 <sfbpf_parse+0x5d0>
    dc70:	ldr	r0, [r4]
    dc74:	bl	4f78 <sf_gen_neg>
    dc78:	str	r0, [sp, #40]	; 0x28
    dc7c:	b	cef8 <sfbpf_parse+0x5d0>
    dc80:	ldr	r3, [r4, #-16]
    dc84:	str	r3, [sp, #40]	; 0x28
    dc88:	b	cef8 <sfbpf_parse+0x5d0>
    dc8c:	bl	4eec <sf_gen_loadlen>
    dc90:	str	r0, [sp, #40]	; 0x28
    dc94:	b	cef8 <sfbpf_parse+0x5d0>
    dc98:	mov	r3, #38	; 0x26
    dc9c:	str	r3, [sp, #40]	; 0x28
    dca0:	b	cef8 <sfbpf_parse+0x5d0>
    dca4:	mov	r3, #124	; 0x7c
    dca8:	str	r3, [sp, #40]	; 0x28
    dcac:	b	cef8 <sfbpf_parse+0x5d0>
    dcb0:	mov	r3, #60	; 0x3c
    dcb4:	str	r3, [sp, #40]	; 0x28
    dcb8:	b	cef8 <sfbpf_parse+0x5d0>
    dcbc:	mov	r3, #62	; 0x3e
    dcc0:	str	r3, [sp, #40]	; 0x28
    dcc4:	b	cef8 <sfbpf_parse+0x5d0>
    dcc8:	mov	r3, #61	; 0x3d
    dccc:	str	r3, [sp, #40]	; 0x28
    dcd0:	b	cef8 <sfbpf_parse+0x5d0>
    dcd4:	ldr	r3, [r4, #-16]
    dcd8:	str	r3, [sp, #40]	; 0x28
    dcdc:	b	cef8 <sfbpf_parse+0x5d0>
    dce0:	mov	r3, #30
    dce4:	str	r3, [sp, #40]	; 0x28
    dce8:	b	cef8 <sfbpf_parse+0x5d0>
    dcec:	mov	r3, #31
    dcf0:	str	r3, [sp, #40]	; 0x28
    dcf4:	b	cef8 <sfbpf_parse+0x5d0>
    dcf8:	mov	r3, #22
    dcfc:	str	r3, [sp, #40]	; 0x28
    dd00:	b	cef8 <sfbpf_parse+0x5d0>
    dd04:	mov	r3, #23
    dd08:	str	r3, [sp, #40]	; 0x28
    dd0c:	b	cef8 <sfbpf_parse+0x5d0>
    dd10:	mov	r3, #25
    dd14:	str	r3, [sp, #40]	; 0x28
    dd18:	b	cef8 <sfbpf_parse+0x5d0>
    dd1c:	mov	r3, #24
    dd20:	str	r3, [sp, #40]	; 0x28
    dd24:	b	cef8 <sfbpf_parse+0x5d0>
    dd28:	mov	r3, #26
    dd2c:	str	r3, [sp, #40]	; 0x28
    dd30:	b	cef8 <sfbpf_parse+0x5d0>
    dd34:	mov	r3, #27
    dd38:	str	r3, [sp, #40]	; 0x28
    dd3c:	b	cef8 <sfbpf_parse+0x5d0>
    dd40:	mov	r3, #28
    dd44:	str	r3, [sp, #40]	; 0x28
    dd48:	b	cef8 <sfbpf_parse+0x5d0>
    dd4c:	mov	r3, #29
    dd50:	str	r3, [sp, #40]	; 0x28
    dd54:	b	cef8 <sfbpf_parse+0x5d0>
    dd58:	mov	r3, #70	; 0x46
    dd5c:	str	r3, [sp, #40]	; 0x28
    dd60:	b	cef8 <sfbpf_parse+0x5d0>
    dd64:	mov	r3, #71	; 0x47
    dd68:	str	r3, [sp, #40]	; 0x28
    dd6c:	b	cef8 <sfbpf_parse+0x5d0>
    dd70:	mov	r8, #52	; 0x34
    dd74:	b	cef8 <sfbpf_parse+0x5d0>
    dd78:	mov	r3, #0
    dd7c:	ldr	r2, [r4, #-16]
    dd80:	ldr	r1, [r4]
    dd84:	ldr	r0, [r4, #-28]	; 0xffffffe4
    dd88:	bl	5448 <sf_gen_atmfield_code>
    dd8c:	mov	r5, r0
    dd90:	b	cef8 <sfbpf_parse+0x5d0>
    dd94:	mov	r3, #1
    dd98:	ldr	r2, [r4, #-16]
    dd9c:	ldr	r1, [r4]
    dda0:	ldr	r0, [r4, #-28]	; 0xffffffe4
    dda4:	bl	5448 <sf_gen_atmfield_code>
    dda8:	mov	r5, r0
    ddac:	b	cef8 <sfbpf_parse+0x5d0>
    ddb0:	ldr	r3, [pc, #-1040]	; d9a8 <sfbpf_parse+0x1080>
    ddb4:	ldr	r5, [r4, #-4]
    ddb8:	add	r3, pc, r3
    ddbc:	ldr	r0, [r3, #4071]	; 0xfe7
    ddc0:	str	r0, [sp, #40]	; 0x28
    ddc4:	b	cef8 <sfbpf_parse+0x5d0>
    ddc8:	ldr	r8, [r4, #-12]
    ddcc:	sub	r3, r8, #51	; 0x33
    ddd0:	cmp	r3, #1
    ddd4:	bhi	cef8 <sfbpf_parse+0x5d0>
    ddd8:	mov	r3, #0
    dddc:	mov	r2, #16
    dde0:	ldr	r1, [r4]
    dde4:	mov	r0, r8
    dde8:	bl	5448 <sf_gen_atmfield_code>
    ddec:	mov	r5, r0
    ddf0:	b	cef8 <sfbpf_parse+0x5d0>
    ddf4:	ldr	r5, [r4, #12]
    ddf8:	ldr	r0, [r4, #-20]	; 0xffffffec
    ddfc:	mov	r1, r5
    de00:	bl	2fc8 <sf_gen_or>
    de04:	ldm	r4, {r0, r1, r2, r3}
    de08:	add	ip, sp, #40	; 0x28
    de0c:	mov	r8, r1
    de10:	stm	ip, {r0, r1, r2, r3}
    de14:	mov	r7, r2
    de18:	b	cef8 <sfbpf_parse+0x5d0>
    de1c:	mov	r3, #22
    de20:	str	r3, [sp, #40]	; 0x28
    de24:	b	cef8 <sfbpf_parse+0x5d0>
    de28:	mov	r3, #23
    de2c:	str	r3, [sp, #40]	; 0x28
    de30:	b	cef8 <sfbpf_parse+0x5d0>
    de34:	mov	r3, #24
    de38:	str	r3, [sp, #40]	; 0x28
    de3c:	b	cef8 <sfbpf_parse+0x5d0>
    de40:	mov	r7, #1
    de44:	b	cef8 <sfbpf_parse+0x5d0>
    de48:	mov	r7, #2
    de4c:	b	cef8 <sfbpf_parse+0x5d0>
    de50:	mov	r7, #3
    de54:	b	cef8 <sfbpf_parse+0x5d0>
    de58:	mov	r7, #4
    de5c:	b	cef8 <sfbpf_parse+0x5d0>
    de60:	mov	r3, #0
    de64:	ldr	r2, [r4, #-16]
    de68:	ldr	r1, [r4]
    de6c:	ldr	r0, [r4, #-24]	; 0xffffffe8
    de70:	bl	9810 <sf_gen_mtp3field_code>
    de74:	mov	r5, r0
    de78:	b	cef8 <sfbpf_parse+0x5d0>
    de7c:	mov	r3, #1
    de80:	ldr	r2, [r4, #-16]
    de84:	ldr	r1, [r4]
    de88:	ldr	r0, [r4, #-24]	; 0xffffffe8
    de8c:	bl	9810 <sf_gen_mtp3field_code>
    de90:	mov	r5, r0
    de94:	b	cef8 <sfbpf_parse+0x5d0>
    de98:	ldr	r3, [pc, #-1268]	; d9ac <sfbpf_parse+0x1084>
    de9c:	ldr	r5, [r4, #-4]
    dea0:	add	r3, pc, r3
    dea4:	ldr	r0, [r3, #4071]	; 0xfe7
    dea8:	str	r0, [sp, #40]	; 0x28
    deac:	b	cef8 <sfbpf_parse+0x5d0>
    deb0:	ldr	r7, [r4, #-8]
    deb4:	sub	r3, r7, #1
    deb8:	cmp	r3, #3
    debc:	bhi	cef8 <sfbpf_parse+0x5d0>
    dec0:	mov	r3, #0
    dec4:	mov	r2, #16
    dec8:	ldr	r1, [r4]
    decc:	mov	r0, r7
    ded0:	bl	9810 <sf_gen_mtp3field_code>
    ded4:	mov	r5, r0
    ded8:	b	cef8 <sfbpf_parse+0x5d0>
    dedc:	ldr	r5, [r4, #12]
    dee0:	ldr	r0, [r4, #-20]	; 0xffffffec
    dee4:	mov	r1, r5
    dee8:	bl	2fc8 <sf_gen_or>
    deec:	ldm	r4, {r0, r1, r2, r3}
    def0:	add	ip, sp, #40	; 0x28
    def4:	mov	r8, r1
    def8:	stm	ip, {r0, r1, r2, r3}
    defc:	mov	r7, r2
    df00:	b	cef8 <sfbpf_parse+0x5d0>
    df04:	mov	r8, #51	; 0x33
    df08:	b	cef8 <sfbpf_parse+0x5d0>
    df0c:	ldr	r3, [sp, #16]
    df10:	ldr	r2, [sp, #16]
    df14:	ldr	r1, [pc, #-1388]	; d9b0 <sfbpf_parse+0x1088>
    df18:	ldr	r3, [r3]
    df1c:	ldr	r0, [pc, #-1392]	; d9b4 <sfbpf_parse+0x108c>
    df20:	add	r3, r3, #1
    df24:	str	r3, [r2]
    df28:	ldr	r2, [pc, #-1400]	; d9b8 <sfbpf_parse+0x1090>
    df2c:	add	r1, pc, r1
    df30:	add	r2, pc, r2
    df34:	add	r0, pc, r0
    df38:	ldr	r3, [r2]
    df3c:	add	r3, r3, #1
    df40:	str	r3, [r2]
    df44:	bl	20b8 <sf_bpf_error>
    df48:	ldr	r2, [pc, #-1428]	; d9bc <sfbpf_parse+0x1094>
    df4c:	ldr	r1, [pc, #-1428]	; d9c0 <sfbpf_parse+0x1098>
    df50:	add	r2, pc, r2
    df54:	ldr	r0, [pc, #-1432]	; d9c4 <sfbpf_parse+0x109c>
    df58:	ldr	r3, [r2]
    df5c:	add	r1, pc, r1
    df60:	add	r3, r3, #1
    df64:	str	r3, [r2]
    df68:	add	r0, pc, r0
    df6c:	b	df44 <sfbpf_parse+0x161c>
    df70:	mov	sl, r8
    df74:	mov	r4, #1
    df78:	add	r3, sp, #56	; 0x38
    df7c:	cmp	sl, r3
    df80:	beq	df8c <sfbpf_parse+0x1664>
    df84:	mov	r0, sl
    df88:	bl	dc4 <free@plt>
    df8c:	mov	r0, r4
    df90:	add	sp, sp, #3648	; 0xe40
    df94:	add	sp, sp, #12
    df98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    df9c:	mov	r4, #0
    dfa0:	b	df78 <sfbpf_parse+0x1650>

0000dfa4 <sfbpf__load_buffer_state>:
    dfa4:	ldr	r3, [pc, #76]	; dff8 <sfbpf__load_buffer_state+0x54>
    dfa8:	push	{lr}		; (str lr, [sp, #-4]!)
    dfac:	add	r3, pc, r3
    dfb0:	ldr	ip, [pc, #68]	; dffc <sfbpf__load_buffer_state+0x58>
    dfb4:	ldr	r0, [r3, #20]
    dfb8:	ldr	r1, [r3, #16]
    dfbc:	add	ip, pc, ip
    dfc0:	ldr	r2, [r1, r0, lsl #2]
    dfc4:	ldr	lr, [r2, #16]
    dfc8:	ldr	r2, [r2, #8]
    dfcc:	str	lr, [r3, #24]
    dfd0:	ldr	lr, [pc, #40]	; e000 <sfbpf__load_buffer_state+0x5c>
    dfd4:	str	r2, [r3, #4]
    dfd8:	ldr	ip, [ip, lr]
    dfdc:	str	r2, [ip]
    dfe0:	ldr	r1, [r1, r0, lsl #2]
    dfe4:	ldr	r1, [r1]
    dfe8:	str	r1, [r3, #28]
    dfec:	ldrb	r2, [r2]
    dff0:	strb	r2, [r3, #32]
    dff4:	pop	{pc}		; (ldr pc, [sp], #4)
    dff8:	.word	0x0001fb90
    dffc:	.word	0x0001f03c
    e000:	.word	0x000000e0

0000e004 <yy_fatal_error>:
    e004:	ldr	r3, [pc, #40]	; e034 <yy_fatal_error+0x30>
    e008:	ldr	r2, [pc, #40]	; e038 <yy_fatal_error+0x34>
    e00c:	add	r3, pc, r3
    e010:	push	{r4, lr}
    e014:	ldr	r3, [r3, r2]
    e018:	ldr	r1, [pc, #28]	; e03c <yy_fatal_error+0x38>
    e01c:	mov	r2, r0
    e020:	add	r1, pc, r1
    e024:	ldr	r0, [r3]
    e028:	bl	e90 <fprintf@plt>
    e02c:	mov	r0, #2
    e030:	bl	e6c <exit@plt>
    e034:	.word	0x0001efec
    e038:	.word	0x000000d8
    e03c:	.word	0x00001d43

0000e040 <sfbpf_ensure_buffer_stack>:
    e040:	push	{r4, r5, r6, r7, r8, lr}
    e044:	ldr	r4, [pc, #144]	; e0dc <sfbpf_ensure_buffer_stack+0x9c>
    e048:	add	r4, pc, r4
    e04c:	ldr	r7, [r4, #16]
    e050:	cmp	r7, #0
    e054:	bne	e08c <sfbpf_ensure_buffer_stack+0x4c>
    e058:	mov	r0, #4
    e05c:	bl	e48 <malloc@plt>
    e060:	cmp	r0, #0
    e064:	str	r0, [r4, #16]
    e068:	bne	e078 <sfbpf_ensure_buffer_stack+0x38>
    e06c:	ldr	r0, [pc, #108]	; e0e0 <sfbpf_ensure_buffer_stack+0xa0>
    e070:	add	r0, pc, r0
    e074:	bl	e004 <yy_fatal_error>
    e078:	mov	r3, #1
    e07c:	str	r7, [r0]
    e080:	str	r3, [r4, #36]	; 0x24
    e084:	str	r7, [r4, #20]
    e088:	pop	{r4, r5, r6, r7, r8, pc}
    e08c:	ldr	r5, [r4, #36]	; 0x24
    e090:	ldr	r3, [r4, #20]
    e094:	sub	r2, r5, #1
    e098:	cmp	r2, r3
    e09c:	pophi	{r4, r5, r6, r7, r8, pc}
    e0a0:	add	r5, r5, #8
    e0a4:	mov	r0, r7
    e0a8:	lsl	r6, r5, #2
    e0ac:	mov	r1, r6
    e0b0:	bl	e0c <realloc@plt>
    e0b4:	cmp	r0, #0
    e0b8:	str	r0, [r4, #16]
    e0bc:	beq	e06c <sfbpf_ensure_buffer_stack+0x2c>
    e0c0:	sub	r6, r6, #32
    e0c4:	mov	r2, #32
    e0c8:	mov	r1, #0
    e0cc:	add	r0, r0, r6
    e0d0:	bl	eb4 <memset@plt>
    e0d4:	str	r5, [r4, #36]	; 0x24
    e0d8:	pop	{r4, r5, r6, r7, r8, pc}
    e0dc:	.word	0x0001faf4
    e0e0:	.word	0x0000e8f8

0000e0e4 <sfbpf__switch_to_buffer>:
    e0e4:	push	{r4, lr}
    e0e8:	mov	r4, r0
    e0ec:	bl	e040 <sfbpf_ensure_buffer_stack>
    e0f0:	ldr	r2, [pc, #104]	; e160 <sfbpf__switch_to_buffer+0x7c>
    e0f4:	add	r2, pc, r2
    e0f8:	ldr	r3, [r2, #16]
    e0fc:	cmp	r3, #0
    e100:	beq	e154 <sfbpf__switch_to_buffer+0x70>
    e104:	ldr	r1, [r2, #20]
    e108:	ldr	r0, [r3, r1, lsl #2]
    e10c:	cmp	r0, r4
    e110:	popeq	{r4, pc}
    e114:	cmp	r0, #0
    e118:	beq	e13c <sfbpf__switch_to_buffer+0x58>
    e11c:	ldr	r0, [r2, #4]
    e120:	ldrb	ip, [r2, #32]
    e124:	ldr	r2, [r2, #24]
    e128:	strb	ip, [r0]
    e12c:	ldr	ip, [r3, r1, lsl #2]
    e130:	str	r0, [ip, #8]
    e134:	ldr	r1, [r3, r1, lsl #2]
    e138:	str	r2, [r1, #16]
    e13c:	ldr	r2, [pc, #32]	; e164 <sfbpf__switch_to_buffer+0x80>
    e140:	add	r2, pc, r2
    e144:	ldr	r2, [r2, #20]
    e148:	str	r4, [r3, r2, lsl #2]
    e14c:	pop	{r4, lr}
    e150:	b	dfa4 <sfbpf__load_buffer_state>
    e154:	cmp	r4, #0
    e158:	bne	e13c <sfbpf__switch_to_buffer+0x58>
    e15c:	pop	{r4, pc}
    e160:	.word	0x0001fa48
    e164:	.word	0x0001f9fc

0000e168 <sfbpf__delete_buffer>:
    e168:	push	{r4, lr}
    e16c:	subs	r4, r0, #0
    e170:	popeq	{r4, pc}
    e174:	ldr	r2, [pc, #64]	; e1bc <sfbpf__delete_buffer+0x54>
    e178:	add	r2, pc, r2
    e17c:	ldr	r3, [r2, #16]
    e180:	cmp	r3, #0
    e184:	beq	e19c <sfbpf__delete_buffer+0x34>
    e188:	ldr	r2, [r2, #20]
    e18c:	ldr	r1, [r3, r2, lsl #2]
    e190:	cmp	r4, r1
    e194:	moveq	r1, #0
    e198:	streq	r1, [r3, r2, lsl #2]
    e19c:	ldr	r3, [r4, #20]
    e1a0:	cmp	r3, #0
    e1a4:	beq	e1b0 <sfbpf__delete_buffer+0x48>
    e1a8:	ldr	r0, [r4, #4]
    e1ac:	bl	dc4 <free@plt>
    e1b0:	mov	r0, r4
    e1b4:	pop	{r4, lr}
    e1b8:	b	dc4 <free@plt>
    e1bc:	.word	0x0001f9c4

0000e1c0 <sfbpf__flush_buffer>:
    e1c0:	cmp	r0, #0
    e1c4:	bxeq	lr
    e1c8:	ldr	r2, [r0, #4]
    e1cc:	mov	r3, #0
    e1d0:	str	r3, [r0, #16]
    e1d4:	strb	r3, [r2]
    e1d8:	ldr	r2, [r0, #4]
    e1dc:	strb	r3, [r2, #1]
    e1e0:	ldr	r2, [r0, #4]
    e1e4:	str	r3, [r0, #44]	; 0x2c
    e1e8:	str	r2, [r0, #8]
    e1ec:	mov	r2, #1
    e1f0:	str	r2, [r0, #28]
    e1f4:	ldr	r2, [pc, #32]	; e21c <sfbpf__flush_buffer+0x5c>
    e1f8:	add	r2, pc, r2
    e1fc:	ldr	r3, [r2, #16]
    e200:	cmp	r3, #0
    e204:	bxeq	lr
    e208:	ldr	r2, [r2, #20]
    e20c:	ldr	r3, [r3, r2, lsl #2]
    e210:	cmp	r0, r3
    e214:	bxne	lr
    e218:	b	dfa4 <sfbpf__load_buffer_state>
    e21c:	.word	0x0001f944

0000e220 <sfbpf__init_buffer>:
    e220:	push	{r4, r5, r6, r7, r8, lr}
    e224:	mov	r4, r0
    e228:	mov	r5, r1
    e22c:	bl	e9c <__errno_location@plt>
    e230:	ldr	r7, [r0]
    e234:	mov	r6, r0
    e238:	mov	r0, r4
    e23c:	bl	e1c0 <sfbpf__flush_buffer>
    e240:	ldr	r2, [pc, #100]	; e2ac <sfbpf__init_buffer+0x8c>
    e244:	mov	r3, #1
    e248:	add	r2, pc, r2
    e24c:	str	r3, [r4, #40]	; 0x28
    e250:	ldr	r3, [r2, #16]
    e254:	str	r5, [r4]
    e258:	cmp	r3, #0
    e25c:	beq	e270 <sfbpf__init_buffer+0x50>
    e260:	ldr	r2, [r2, #20]
    e264:	ldr	r3, [r3, r2, lsl #2]
    e268:	cmp	r4, r3
    e26c:	beq	e280 <sfbpf__init_buffer+0x60>
    e270:	mov	r3, #1
    e274:	str	r3, [r4, #32]
    e278:	mov	r3, #0
    e27c:	str	r3, [r4, #36]	; 0x24
    e280:	cmp	r5, #0
    e284:	beq	e2a0 <sfbpf__init_buffer+0x80>
    e288:	mov	r0, r5
    e28c:	bl	ed8 <fileno@plt>
    e290:	bl	f38 <isatty@plt>
    e294:	cmp	r0, #0
    e298:	movle	r5, #0
    e29c:	movgt	r5, #1
    e2a0:	str	r5, [r4, #24]
    e2a4:	str	r7, [r6]
    e2a8:	pop	{r4, r5, r6, r7, r8, pc}
    e2ac:	.word	0x0001f8f4

0000e2b0 <sfbpf__create_buffer>:
    e2b0:	push	{r4, r5, r6, lr}
    e2b4:	mov	r6, r0
    e2b8:	mov	r0, #48	; 0x30
    e2bc:	mov	r5, r1
    e2c0:	bl	e48 <malloc@plt>
    e2c4:	subs	r4, r0, #0
    e2c8:	bne	e2d8 <sfbpf__create_buffer+0x28>
    e2cc:	ldr	r0, [pc, #56]	; e30c <sfbpf__create_buffer+0x5c>
    e2d0:	add	r0, pc, r0
    e2d4:	bl	e004 <yy_fatal_error>
    e2d8:	str	r5, [r4, #12]
    e2dc:	add	r0, r5, #2
    e2e0:	bl	e48 <malloc@plt>
    e2e4:	cmp	r0, #0
    e2e8:	str	r0, [r4, #4]
    e2ec:	beq	e2cc <sfbpf__create_buffer+0x1c>
    e2f0:	mov	r3, #1
    e2f4:	mov	r0, r4
    e2f8:	str	r3, [r4, #20]
    e2fc:	mov	r1, r6
    e300:	bl	e220 <sfbpf__init_buffer>
    e304:	mov	r0, r4
    e308:	pop	{r4, r5, r6, pc}
    e30c:	.word	0x0000e6c9

0000e310 <sfbpf_restart>:
    e310:	ldr	r2, [pc, #112]	; e388 <sfbpf_restart+0x78>
    e314:	push	{r4, r5, r6, lr}
    e318:	add	r2, pc, r2
    e31c:	mov	r4, r0
    e320:	ldr	r3, [r2, #16]
    e324:	cmp	r3, #0
    e328:	beq	e33c <sfbpf_restart+0x2c>
    e32c:	ldr	r2, [r2, #20]
    e330:	ldr	r3, [r3, r2, lsl #2]
    e334:	cmp	r3, #0
    e338:	bne	e360 <sfbpf_restart+0x50>
    e33c:	bl	e040 <sfbpf_ensure_buffer_stack>
    e340:	ldr	r3, [pc, #68]	; e38c <sfbpf_restart+0x7c>
    e344:	mov	r1, #16384	; 0x4000
    e348:	add	r3, pc, r3
    e34c:	ldr	r0, [r3, #28]
    e350:	ldr	r6, [r3, #20]
    e354:	ldr	r5, [r3, #16]
    e358:	bl	e2b0 <sfbpf__create_buffer>
    e35c:	str	r0, [r5, r6, lsl #2]
    e360:	ldr	r3, [pc, #40]	; e390 <sfbpf_restart+0x80>
    e364:	mov	r1, r4
    e368:	add	r3, pc, r3
    e36c:	ldr	r0, [r3, #16]
    e370:	cmp	r0, #0
    e374:	ldrne	r3, [r3, #20]
    e378:	ldrne	r0, [r0, r3, lsl #2]
    e37c:	bl	e220 <sfbpf__init_buffer>
    e380:	pop	{r4, r5, r6, lr}
    e384:	b	dfa4 <sfbpf__load_buffer_state>
    e388:	.word	0x0001f824
    e38c:	.word	0x0001f7f4
    e390:	.word	0x0001f7d4

0000e394 <sfbpf_lex>:
    e394:	ldr	r3, [pc, #3876]	; f2c0 <sfbpf_lex+0xf2c>
    e398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e39c:	add	r3, pc, r3
    e3a0:	ldr	r4, [pc, #3868]	; f2c4 <sfbpf_lex+0xf30>
    e3a4:	ldr	r2, [r3, #40]	; 0x28
    e3a8:	add	r4, pc, r4
    e3ac:	cmp	r2, #0
    e3b0:	sub	sp, sp, #92	; 0x5c
    e3b4:	bne	e458 <sfbpf_lex+0xc4>
    e3b8:	ldr	r1, [r3]
    e3bc:	mov	r2, #1
    e3c0:	cmp	r1, #0
    e3c4:	streq	r2, [r3]
    e3c8:	str	r2, [r3, #40]	; 0x28
    e3cc:	ldr	r3, [pc, #3828]	; f2c8 <sfbpf_lex+0xf34>
    e3d0:	add	r3, pc, r3
    e3d4:	ldr	r2, [r3, #28]
    e3d8:	cmp	r2, #0
    e3dc:	ldreq	r2, [pc, #3816]	; f2cc <sfbpf_lex+0xf38>
    e3e0:	ldreq	r2, [r4, r2]
    e3e4:	ldreq	r2, [r2]
    e3e8:	streq	r2, [r3, #28]
    e3ec:	ldr	r3, [pc, #3804]	; f2d0 <sfbpf_lex+0xf3c>
    e3f0:	add	r3, pc, r3
    e3f4:	ldr	r2, [r3, #44]	; 0x2c
    e3f8:	cmp	r2, #0
    e3fc:	ldreq	r2, [pc, #3792]	; f2d4 <sfbpf_lex+0xf40>
    e400:	ldreq	r2, [r4, r2]
    e404:	ldreq	r2, [r2]
    e408:	streq	r2, [r3, #44]	; 0x2c
    e40c:	ldr	r2, [pc, #3780]	; f2d8 <sfbpf_lex+0xf44>
    e410:	add	r2, pc, r2
    e414:	ldr	r3, [r2, #16]
    e418:	cmp	r3, #0
    e41c:	beq	e430 <sfbpf_lex+0x9c>
    e420:	ldr	r2, [r2, #20]
    e424:	ldr	r3, [r3, r2, lsl #2]
    e428:	cmp	r3, #0
    e42c:	bne	e454 <sfbpf_lex+0xc0>
    e430:	bl	e040 <sfbpf_ensure_buffer_stack>
    e434:	ldr	r3, [pc, #3744]	; f2dc <sfbpf_lex+0xf48>
    e438:	mov	r1, #16384	; 0x4000
    e43c:	add	r3, pc, r3
    e440:	ldr	r0, [r3, #28]
    e444:	ldr	r6, [r3, #20]
    e448:	ldr	r5, [r3, #16]
    e44c:	bl	e2b0 <sfbpf__create_buffer>
    e450:	str	r0, [r5, r6, lsl #2]
    e454:	bl	dfa4 <sfbpf__load_buffer_state>
    e458:	ldr	r3, [pc, #3712]	; f2e0 <sfbpf_lex+0xf4c>
    e45c:	add	r3, pc, r3
    e460:	str	r3, [sp, #12]
    e464:	sub	r3, r3, #1216	; 0x4c0
    e468:	sub	r3, r3, #2
    e46c:	str	r3, [sp, #8]
    e470:	ldr	r3, [pc, #3692]	; f2e4 <sfbpf_lex+0xf50>
    e474:	add	r3, pc, r3
    e478:	add	r3, r3, #1104	; 0x450
    e47c:	add	r3, r3, #8
    e480:	str	r3, [sp, #40]	; 0x28
    e484:	ldr	r3, [pc, #3676]	; f2e8 <sfbpf_lex+0xf54>
    e488:	add	r3, pc, r3
    e48c:	str	r3, [sp, #36]	; 0x24
    e490:	sub	r3, r3, #1216	; 0x4c0
    e494:	sub	r3, r3, #2
    e498:	str	r3, [sp, #20]
    e49c:	ldr	r3, [pc, #3656]	; f2ec <sfbpf_lex+0xf58>
    e4a0:	add	r3, pc, r3
    e4a4:	ldr	r5, [r3, #4]
    e4a8:	ldrb	r2, [r3, #32]
    e4ac:	ldr	r0, [r3]
    e4b0:	str	r5, [sp]
    e4b4:	strb	r2, [r5]
    e4b8:	ldr	r9, [pc, #3632]	; f2f0 <sfbpf_lex+0xf5c>
    e4bc:	ldr	r3, [pc, #3632]	; f2f4 <sfbpf_lex+0xf60>
    e4c0:	add	r9, pc, r9
    e4c4:	add	r2, r9, #256	; 0x100
    e4c8:	str	r2, [sp, #4]
    e4cc:	ldr	r2, [pc, #3620]	; f2f8 <sfbpf_lex+0xf64>
    e4d0:	add	r3, pc, r3
    e4d4:	mov	ip, #0
    e4d8:	add	r2, pc, r2
    e4dc:	ldr	r6, [r3, #8]
    e4e0:	ldr	r7, [r3, #12]
    e4e4:	add	r2, r2, #3120	; 0xc30
    e4e8:	mov	r3, r5
    e4ec:	mov	r8, ip
    e4f0:	add	r2, r2, #4
    e4f4:	str	r2, [sp, #16]
    e4f8:	ldr	r5, [sp, #4]
    e4fc:	lsl	lr, r0, #1
    e500:	mov	r2, r3
    e504:	ldrsh	lr, [r5, lr]
    e508:	ldrb	r1, [r2]
    e50c:	ldr	fp, [pc, #3560]	; f2fc <sfbpf_lex+0xf68>
    e510:	cmp	lr, #0
    e514:	movne	r7, r2
    e518:	ldr	r2, [sp, #12]
    e51c:	ldrb	r1, [r9, r1]
    e520:	movne	ip, #1
    e524:	add	lr, r2, #2560	; 0xa00
    e528:	add	r3, r3, #1
    e52c:	movne	r6, r0
    e530:	movne	r8, ip
    e534:	add	lr, lr, #10
    e538:	ldr	r2, [sp, #8]
    e53c:	lsl	r5, r0, #1
    e540:	ldrsh	r2, [r2, r5]
    e544:	add	r2, r2, r1
    e548:	lsl	r2, r2, #1
    e54c:	ldrsh	sl, [lr, r2]
    e550:	cmp	r0, sl
    e554:	bne	e894 <sfbpf_lex+0x500>
    e558:	ldr	r1, [sp, #40]	; 0x28
    e55c:	mov	r5, r3
    e560:	ldrsh	r0, [r1, r2]
    e564:	ldr	r1, [sp, #8]
    e568:	lsl	r2, r0, #1
    e56c:	ldrsh	r1, [r1, r2]
    e570:	ldr	r2, [pc, #3464]	; f300 <sfbpf_lex+0xf6c>
    e574:	cmp	r1, r2
    e578:	bne	e4f8 <sfbpf_lex+0x164>
    e57c:	cmp	r8, #0
    e580:	ldrne	r3, [pc, #3452]	; f304 <sfbpf_lex+0xf70>
    e584:	addne	r3, pc, r3
    e588:	strne	r7, [r3, #12]
    e58c:	cmp	ip, #0
    e590:	ldrne	r3, [pc, #3440]	; f308 <sfbpf_lex+0xf74>
    e594:	addne	r3, pc, r3
    e598:	strne	r6, [r3, #8]
    e59c:	ldr	r3, [pc, #3432]	; f30c <sfbpf_lex+0xf78>
    e5a0:	add	r3, pc, r3
    e5a4:	add	r3, r3, #256	; 0x100
    e5a8:	str	r3, [sp, #28]
    e5ac:	ldr	r3, [pc, #3420]	; f310 <sfbpf_lex+0xf7c>
    e5b0:	add	r3, pc, r3
    e5b4:	str	r3, [sp, #16]
    e5b8:	ldr	r3, [sp, #28]
    e5bc:	lsl	r0, r0, #1
    e5c0:	ldrsh	r3, [r3, r0]
    e5c4:	cmp	r3, #0
    e5c8:	bne	e5e8 <sfbpf_lex+0x254>
    e5cc:	ldr	r3, [pc, #3392]	; f314 <sfbpf_lex+0xf80>
    e5d0:	ldr	r2, [sp, #28]
    e5d4:	add	r3, pc, r3
    e5d8:	ldr	r5, [r3, #12]
    e5dc:	ldr	r3, [r3, #8]
    e5e0:	lsl	r3, r3, #1
    e5e4:	ldrsh	r3, [r2, r3]
    e5e8:	ldr	r2, [pc, #3368]	; f318 <sfbpf_lex+0xf84>
    e5ec:	ldr	r6, [r4, r2]
    e5f0:	ldr	r2, [sp]
    e5f4:	str	r2, [r6]
    e5f8:	ldr	r2, [pc, #3356]	; f31c <sfbpf_lex+0xf88>
    e5fc:	ldr	r2, [r4, r2]
    e600:	str	r2, [sp, #32]
    e604:	ldr	r1, [sp, #32]
    e608:	ldr	r2, [sp]
    e60c:	sub	r2, r5, r2
    e610:	str	r2, [r1]
    e614:	ldr	r2, [pc, #3332]	; f320 <sfbpf_lex+0xf8c>
    e618:	ldrb	r1, [r5]
    e61c:	add	r2, pc, r2
    e620:	strb	r1, [r2, #32]
    e624:	str	r5, [r2, #4]
    e628:	ldr	r2, [pc, #3316]	; f324 <sfbpf_lex+0xf90>
    e62c:	mov	r1, #0
    e630:	add	r2, pc, r2
    e634:	strb	r1, [r5]
    e638:	str	r2, [sp, #4]
    e63c:	cmp	r3, #146	; 0x92
    e640:	addls	pc, pc, r3, lsl #2
    e644:	b	f78c <sfbpf_lex+0x13f8>
    e648:	b	e8bc <sfbpf_lex+0x528>
    e64c:	b	f798 <sfbpf_lex+0x1404>
    e650:	b	e8b0 <sfbpf_lex+0x51c>
    e654:	b	f7a0 <sfbpf_lex+0x140c>
    e658:	b	f7a0 <sfbpf_lex+0x140c>
    e65c:	b	e8d8 <sfbpf_lex+0x544>
    e660:	b	e8e0 <sfbpf_lex+0x54c>
    e664:	b	e8e8 <sfbpf_lex+0x554>
    e668:	b	e8f0 <sfbpf_lex+0x55c>
    e66c:	b	e8f8 <sfbpf_lex+0x564>
    e670:	b	e900 <sfbpf_lex+0x56c>
    e674:	b	e908 <sfbpf_lex+0x574>
    e678:	b	e910 <sfbpf_lex+0x57c>
    e67c:	b	e918 <sfbpf_lex+0x584>
    e680:	b	e920 <sfbpf_lex+0x58c>
    e684:	b	e928 <sfbpf_lex+0x594>
    e688:	b	e930 <sfbpf_lex+0x59c>
    e68c:	b	e938 <sfbpf_lex+0x5a4>
    e690:	b	e940 <sfbpf_lex+0x5ac>
    e694:	b	e948 <sfbpf_lex+0x5b4>
    e698:	b	e950 <sfbpf_lex+0x5bc>
    e69c:	b	e958 <sfbpf_lex+0x5c4>
    e6a0:	b	e960 <sfbpf_lex+0x5cc>
    e6a4:	b	e968 <sfbpf_lex+0x5d4>
    e6a8:	b	e970 <sfbpf_lex+0x5dc>
    e6ac:	b	e978 <sfbpf_lex+0x5e4>
    e6b0:	b	e980 <sfbpf_lex+0x5ec>
    e6b4:	b	e988 <sfbpf_lex+0x5f4>
    e6b8:	b	e990 <sfbpf_lex+0x5fc>
    e6bc:	b	e998 <sfbpf_lex+0x604>
    e6c0:	b	e9a0 <sfbpf_lex+0x60c>
    e6c4:	b	e9a8 <sfbpf_lex+0x614>
    e6c8:	b	e9b0 <sfbpf_lex+0x61c>
    e6cc:	b	e9b8 <sfbpf_lex+0x624>
    e6d0:	b	e9c0 <sfbpf_lex+0x62c>
    e6d4:	b	e9c8 <sfbpf_lex+0x634>
    e6d8:	b	e9d0 <sfbpf_lex+0x63c>
    e6dc:	b	e9d8 <sfbpf_lex+0x644>
    e6e0:	b	e9e0 <sfbpf_lex+0x64c>
    e6e4:	b	e9e8 <sfbpf_lex+0x654>
    e6e8:	b	e9f0 <sfbpf_lex+0x65c>
    e6ec:	b	e9f8 <sfbpf_lex+0x664>
    e6f0:	b	ea00 <sfbpf_lex+0x66c>
    e6f4:	b	ea08 <sfbpf_lex+0x674>
    e6f8:	b	ea10 <sfbpf_lex+0x67c>
    e6fc:	b	ea18 <sfbpf_lex+0x684>
    e700:	b	ea20 <sfbpf_lex+0x68c>
    e704:	b	ea28 <sfbpf_lex+0x694>
    e708:	b	ea30 <sfbpf_lex+0x69c>
    e70c:	b	ea38 <sfbpf_lex+0x6a4>
    e710:	b	ea40 <sfbpf_lex+0x6ac>
    e714:	b	ea48 <sfbpf_lex+0x6b4>
    e718:	b	ea50 <sfbpf_lex+0x6bc>
    e71c:	b	ea58 <sfbpf_lex+0x6c4>
    e720:	b	ea60 <sfbpf_lex+0x6cc>
    e724:	b	ea68 <sfbpf_lex+0x6d4>
    e728:	b	ea70 <sfbpf_lex+0x6dc>
    e72c:	b	ea78 <sfbpf_lex+0x6e4>
    e730:	b	ea80 <sfbpf_lex+0x6ec>
    e734:	b	ea88 <sfbpf_lex+0x6f4>
    e738:	b	ea90 <sfbpf_lex+0x6fc>
    e73c:	b	ea98 <sfbpf_lex+0x704>
    e740:	b	eaa0 <sfbpf_lex+0x70c>
    e744:	b	eaa8 <sfbpf_lex+0x714>
    e748:	b	eab0 <sfbpf_lex+0x71c>
    e74c:	b	eab8 <sfbpf_lex+0x724>
    e750:	b	eac0 <sfbpf_lex+0x72c>
    e754:	b	eac8 <sfbpf_lex+0x734>
    e758:	b	ead0 <sfbpf_lex+0x73c>
    e75c:	b	ead8 <sfbpf_lex+0x744>
    e760:	b	eae0 <sfbpf_lex+0x74c>
    e764:	b	eae8 <sfbpf_lex+0x754>
    e768:	b	eaf0 <sfbpf_lex+0x75c>
    e76c:	b	eaf8 <sfbpf_lex+0x764>
    e770:	b	eb00 <sfbpf_lex+0x76c>
    e774:	b	eb08 <sfbpf_lex+0x774>
    e778:	b	eb10 <sfbpf_lex+0x77c>
    e77c:	b	eb18 <sfbpf_lex+0x784>
    e780:	b	eb20 <sfbpf_lex+0x78c>
    e784:	b	eb28 <sfbpf_lex+0x794>
    e788:	b	eb30 <sfbpf_lex+0x79c>
    e78c:	b	eb38 <sfbpf_lex+0x7a4>
    e790:	b	eb40 <sfbpf_lex+0x7ac>
    e794:	b	eb48 <sfbpf_lex+0x7b4>
    e798:	b	eb50 <sfbpf_lex+0x7bc>
    e79c:	b	eb58 <sfbpf_lex+0x7c4>
    e7a0:	b	eb60 <sfbpf_lex+0x7cc>
    e7a4:	b	eb68 <sfbpf_lex+0x7d4>
    e7a8:	b	eb70 <sfbpf_lex+0x7dc>
    e7ac:	b	eb78 <sfbpf_lex+0x7e4>
    e7b0:	b	eb80 <sfbpf_lex+0x7ec>
    e7b4:	b	eb88 <sfbpf_lex+0x7f4>
    e7b8:	b	eb90 <sfbpf_lex+0x7fc>
    e7bc:	b	eb98 <sfbpf_lex+0x804>
    e7c0:	b	eba0 <sfbpf_lex+0x80c>
    e7c4:	b	eba8 <sfbpf_lex+0x814>
    e7c8:	b	ebb0 <sfbpf_lex+0x81c>
    e7cc:	b	ebb8 <sfbpf_lex+0x824>
    e7d0:	b	ebc0 <sfbpf_lex+0x82c>
    e7d4:	b	ebc8 <sfbpf_lex+0x834>
    e7d8:	b	ebd0 <sfbpf_lex+0x83c>
    e7dc:	b	ebd8 <sfbpf_lex+0x844>
    e7e0:	b	e49c <sfbpf_lex+0x108>
    e7e4:	b	ebe0 <sfbpf_lex+0x84c>
    e7e8:	b	ebec <sfbpf_lex+0x858>
    e7ec:	b	ebf4 <sfbpf_lex+0x860>
    e7f0:	b	ebfc <sfbpf_lex+0x868>
    e7f4:	b	ec04 <sfbpf_lex+0x870>
    e7f8:	b	ec0c <sfbpf_lex+0x878>
    e7fc:	b	ec14 <sfbpf_lex+0x880>
    e800:	b	ec1c <sfbpf_lex+0x888>
    e804:	b	ec3c <sfbpf_lex+0x8a8>
    e808:	b	ec58 <sfbpf_lex+0x8c4>
    e80c:	b	ece0 <sfbpf_lex+0x94c>
    e810:	b	ecfc <sfbpf_lex+0x968>
    e814:	b	ed70 <sfbpf_lex+0x9dc>
    e818:	b	ed80 <sfbpf_lex+0x9ec>
    e81c:	b	ed98 <sfbpf_lex+0xa04>
    e820:	b	edb0 <sfbpf_lex+0xa1c>
    e824:	b	edc8 <sfbpf_lex+0xa34>
    e828:	b	ede0 <sfbpf_lex+0xa4c>
    e82c:	b	edf8 <sfbpf_lex+0xa64>
    e830:	b	ee10 <sfbpf_lex+0xa7c>
    e834:	b	ee28 <sfbpf_lex+0xa94>
    e838:	b	ee40 <sfbpf_lex+0xaac>
    e83c:	b	ee58 <sfbpf_lex+0xac4>
    e840:	b	ee70 <sfbpf_lex+0xadc>
    e844:	b	ee88 <sfbpf_lex+0xaf4>
    e848:	b	eea0 <sfbpf_lex+0xb0c>
    e84c:	b	eeb8 <sfbpf_lex+0xb24>
    e850:	b	eed0 <sfbpf_lex+0xb3c>
    e854:	b	eee8 <sfbpf_lex+0xb54>
    e858:	b	ef00 <sfbpf_lex+0xb6c>
    e85c:	b	ef18 <sfbpf_lex+0xb84>
    e860:	b	ef30 <sfbpf_lex+0xb9c>
    e864:	b	ef48 <sfbpf_lex+0xbb4>
    e868:	b	ef60 <sfbpf_lex+0xbcc>
    e86c:	b	ef78 <sfbpf_lex+0xbe4>
    e870:	b	ef90 <sfbpf_lex+0xbfc>
    e874:	b	efa8 <sfbpf_lex+0xc14>
    e878:	b	efc0 <sfbpf_lex+0xc2c>
    e87c:	b	efdc <sfbpf_lex+0xc48>
    e880:	b	effc <sfbpf_lex+0xc68>
    e884:	b	f00c <sfbpf_lex+0xc78>
    e888:	b	f020 <sfbpf_lex+0xc8c>
    e88c:	b	f04c <sfbpf_lex+0xcb8>
    e890:	b	f044 <sfbpf_lex+0xcb0>
    e894:	ldr	r2, [sp, #16]
    e898:	ldrsh	r0, [r2, r5]
    e89c:	cmp	r0, fp
    e8a0:	ldrgt	r2, [sp, #12]
    e8a4:	addgt	r1, r2, r1
    e8a8:	ldrbgt	r1, [r1, #-1272]	; 0xfffffb08
    e8ac:	b	e538 <sfbpf_lex+0x1a4>
    e8b0:	ldr	r0, [pc, #2672]	; f328 <sfbpf_lex+0xf94>
    e8b4:	add	sp, sp, #92	; 0x5c
    e8b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e8bc:	ldr	r3, [pc, #2664]	; f32c <sfbpf_lex+0xf98>
    e8c0:	add	r3, pc, r3
    e8c4:	ldrb	r2, [r3, #32]
    e8c8:	ldr	r0, [r3, #8]
    e8cc:	strb	r2, [r5]
    e8d0:	ldr	r5, [r3, #12]
    e8d4:	b	e5b8 <sfbpf_lex+0x224>
    e8d8:	ldr	r0, [pc, #2640]	; f330 <sfbpf_lex+0xf9c>
    e8dc:	b	e8b4 <sfbpf_lex+0x520>
    e8e0:	mov	r0, #272	; 0x110
    e8e4:	b	e8b4 <sfbpf_lex+0x520>
    e8e8:	ldr	r0, [pc, #2628]	; f334 <sfbpf_lex+0xfa0>
    e8ec:	b	e8b4 <sfbpf_lex+0x520>
    e8f0:	ldr	r0, [pc, #2624]	; f338 <sfbpf_lex+0xfa4>
    e8f4:	b	e8b4 <sfbpf_lex+0x520>
    e8f8:	ldr	r0, [pc, #2620]	; f33c <sfbpf_lex+0xfa8>
    e8fc:	b	e8b4 <sfbpf_lex+0x520>
    e900:	mov	r0, #276	; 0x114
    e904:	b	e8b4 <sfbpf_lex+0x520>
    e908:	ldr	r0, [pc, #2608]	; f340 <sfbpf_lex+0xfac>
    e90c:	b	e8b4 <sfbpf_lex+0x520>
    e910:	ldr	r0, [pc, #2604]	; f344 <sfbpf_lex+0xfb0>
    e914:	b	e8b4 <sfbpf_lex+0x520>
    e918:	ldr	r0, [pc, #2600]	; f348 <sfbpf_lex+0xfb4>
    e91c:	b	e8b4 <sfbpf_lex+0x520>
    e920:	mov	r0, #280	; 0x118
    e924:	b	e8b4 <sfbpf_lex+0x520>
    e928:	ldr	r0, [pc, #2588]	; f34c <sfbpf_lex+0xfb8>
    e92c:	b	e8b4 <sfbpf_lex+0x520>
    e930:	ldr	r0, [pc, #2584]	; f350 <sfbpf_lex+0xfbc>
    e934:	b	e8b4 <sfbpf_lex+0x520>
    e938:	ldr	r0, [pc, #2580]	; f354 <sfbpf_lex+0xfc0>
    e93c:	b	e8b4 <sfbpf_lex+0x520>
    e940:	mov	r0, #320	; 0x140
    e944:	b	e8b4 <sfbpf_lex+0x520>
    e948:	ldr	r0, [pc, #2568]	; f358 <sfbpf_lex+0xfc4>
    e94c:	b	e8b4 <sfbpf_lex+0x520>
    e950:	ldr	r0, [pc, #2564]	; f35c <sfbpf_lex+0xfc8>
    e954:	b	e8b4 <sfbpf_lex+0x520>
    e958:	ldr	r0, [pc, #2560]	; f360 <sfbpf_lex+0xfcc>
    e95c:	b	e8b4 <sfbpf_lex+0x520>
    e960:	ldr	r0, [pc, #2556]	; f364 <sfbpf_lex+0xfd0>
    e964:	b	e8b4 <sfbpf_lex+0x520>
    e968:	mov	r0, #284	; 0x11c
    e96c:	b	e8b4 <sfbpf_lex+0x520>
    e970:	ldr	r0, [pc, #2544]	; f368 <sfbpf_lex+0xfd4>
    e974:	b	e8b4 <sfbpf_lex+0x520>
    e978:	ldr	r0, [pc, #2540]	; f36c <sfbpf_lex+0xfd8>
    e97c:	b	e8b4 <sfbpf_lex+0x520>
    e980:	ldr	r0, [pc, #2536]	; f370 <sfbpf_lex+0xfdc>
    e984:	b	e8b4 <sfbpf_lex+0x520>
    e988:	mov	r0, #288	; 0x120
    e98c:	b	e8b4 <sfbpf_lex+0x520>
    e990:	ldr	r0, [pc, #2524]	; f374 <sfbpf_lex+0xfe0>
    e994:	b	e8b4 <sfbpf_lex+0x520>
    e998:	mov	r0, #328	; 0x148
    e99c:	b	e8b4 <sfbpf_lex+0x520>
    e9a0:	mov	r0, #328	; 0x148
    e9a4:	b	e8b4 <sfbpf_lex+0x520>
    e9a8:	ldr	r0, [pc, #2504]	; f378 <sfbpf_lex+0xfe4>
    e9ac:	b	e8b4 <sfbpf_lex+0x520>
    e9b0:	ldr	r0, [pc, #2496]	; f378 <sfbpf_lex+0xfe4>
    e9b4:	b	e8b4 <sfbpf_lex+0x520>
    e9b8:	ldr	r0, [pc, #2492]	; f37c <sfbpf_lex+0xfe8>
    e9bc:	b	e8b4 <sfbpf_lex+0x520>
    e9c0:	mov	r0, #332	; 0x14c
    e9c4:	b	e8b4 <sfbpf_lex+0x520>
    e9c8:	ldr	r0, [pc, #2480]	; f380 <sfbpf_lex+0xfec>
    e9cc:	b	e8b4 <sfbpf_lex+0x520>
    e9d0:	ldr	r0, [pc, #2476]	; f384 <sfbpf_lex+0xff0>
    e9d4:	b	e8b4 <sfbpf_lex+0x520>
    e9d8:	ldr	r0, [pc, #2472]	; f388 <sfbpf_lex+0xff4>
    e9dc:	b	e8b4 <sfbpf_lex+0x520>
    e9e0:	mov	r0, #336	; 0x150
    e9e4:	b	e8b4 <sfbpf_lex+0x520>
    e9e8:	ldr	r0, [pc, #2460]	; f38c <sfbpf_lex+0xff8>
    e9ec:	b	e8b4 <sfbpf_lex+0x520>
    e9f0:	ldr	r0, [pc, #2456]	; f390 <sfbpf_lex+0xffc>
    e9f4:	b	e8b4 <sfbpf_lex+0x520>
    e9f8:	ldr	r0, [pc, #2452]	; f394 <sfbpf_lex+0x1000>
    e9fc:	b	e8b4 <sfbpf_lex+0x520>
    ea00:	ldr	r0, [pc, #2448]	; f398 <sfbpf_lex+0x1004>
    ea04:	b	e8b4 <sfbpf_lex+0x520>
    ea08:	mov	r0, #340	; 0x154
    ea0c:	b	e8b4 <sfbpf_lex+0x520>
    ea10:	mov	r0, #260	; 0x104
    ea14:	b	e8b4 <sfbpf_lex+0x520>
    ea18:	ldr	r0, [pc, #2428]	; f39c <sfbpf_lex+0x1008>
    ea1c:	b	e8b4 <sfbpf_lex+0x520>
    ea20:	ldr	r0, [pc, #2424]	; f3a0 <sfbpf_lex+0x100c>
    ea24:	b	e8b4 <sfbpf_lex+0x520>
    ea28:	mov	r0, #264	; 0x108
    ea2c:	b	e8b4 <sfbpf_lex+0x520>
    ea30:	ldr	r0, [pc, #2412]	; f3a4 <sfbpf_lex+0x1010>
    ea34:	b	e8b4 <sfbpf_lex+0x520>
    ea38:	mov	r0, #268	; 0x10c
    ea3c:	b	e8b4 <sfbpf_lex+0x520>
    ea40:	ldr	r0, [pc, #2400]	; f3a8 <sfbpf_lex+0x1014>
    ea44:	b	e8b4 <sfbpf_lex+0x520>
    ea48:	ldr	r0, [pc, #2396]	; f3ac <sfbpf_lex+0x1018>
    ea4c:	b	e8b4 <sfbpf_lex+0x520>
    ea50:	mov	r0, #300	; 0x12c
    ea54:	b	e8b4 <sfbpf_lex+0x520>
    ea58:	ldr	r0, [pc, #2384]	; f3b0 <sfbpf_lex+0x101c>
    ea5c:	b	e8b4 <sfbpf_lex+0x520>
    ea60:	ldr	r0, [pc, #2380]	; f3b4 <sfbpf_lex+0x1020>
    ea64:	b	e8b4 <sfbpf_lex+0x520>
    ea68:	ldr	r0, [pc, #2376]	; f3b8 <sfbpf_lex+0x1024>
    ea6c:	b	e8b4 <sfbpf_lex+0x520>
    ea70:	mov	r0, #304	; 0x130
    ea74:	b	e8b4 <sfbpf_lex+0x520>
    ea78:	ldr	r0, [pc, #2364]	; f3bc <sfbpf_lex+0x1028>
    ea7c:	b	e8b4 <sfbpf_lex+0x520>
    ea80:	ldr	r0, [pc, #2360]	; f3c0 <sfbpf_lex+0x102c>
    ea84:	b	e8b4 <sfbpf_lex+0x520>
    ea88:	ldr	r0, [pc, #2356]	; f3c4 <sfbpf_lex+0x1030>
    ea8c:	b	e8b4 <sfbpf_lex+0x520>
    ea90:	ldr	r0, [pc, #2352]	; f3c8 <sfbpf_lex+0x1034>
    ea94:	b	e8b4 <sfbpf_lex+0x520>
    ea98:	ldr	r0, [pc, #2348]	; f3cc <sfbpf_lex+0x1038>
    ea9c:	b	e8b4 <sfbpf_lex+0x520>
    eaa0:	ldr	r0, [pc, #2344]	; f3d0 <sfbpf_lex+0x103c>
    eaa4:	b	e8b4 <sfbpf_lex+0x520>
    eaa8:	ldr	r0, [pc, #2340]	; f3d4 <sfbpf_lex+0x1040>
    eaac:	b	e8b4 <sfbpf_lex+0x520>
    eab0:	mov	r0, #364	; 0x16c
    eab4:	b	e8b4 <sfbpf_lex+0x520>
    eab8:	ldr	r0, [pc, #2328]	; f3d8 <sfbpf_lex+0x1044>
    eabc:	b	e8b4 <sfbpf_lex+0x520>
    eac0:	mov	r0, #33	; 0x21
    eac4:	b	e8b4 <sfbpf_lex+0x520>
    eac8:	ldr	r0, [pc, #2316]	; f3dc <sfbpf_lex+0x1048>
    eacc:	b	e8b4 <sfbpf_lex+0x520>
    ead0:	mov	r0, #292	; 0x124
    ead4:	b	e8b4 <sfbpf_lex+0x520>
    ead8:	ldr	r0, [pc, #2304]	; f3e0 <sfbpf_lex+0x104c>
    eadc:	b	e8b4 <sfbpf_lex+0x520>
    eae0:	ldr	r0, [pc, #2300]	; f3e4 <sfbpf_lex+0x1050>
    eae4:	b	e8b4 <sfbpf_lex+0x520>
    eae8:	mov	r0, #324	; 0x144
    eaec:	b	e8b4 <sfbpf_lex+0x520>
    eaf0:	ldr	r0, [pc, #2288]	; f3e8 <sfbpf_lex+0x1054>
    eaf4:	b	e8b4 <sfbpf_lex+0x520>
    eaf8:	ldr	r0, [pc, #2284]	; f3ec <sfbpf_lex+0x1058>
    eafc:	b	e8b4 <sfbpf_lex+0x520>
    eb00:	ldr	r0, [pc, #2280]	; f3f0 <sfbpf_lex+0x105c>
    eb04:	b	e8b4 <sfbpf_lex+0x520>
    eb08:	ldr	r0, [pc, #2276]	; f3f4 <sfbpf_lex+0x1060>
    eb0c:	b	e8b4 <sfbpf_lex+0x520>
    eb10:	ldr	r0, [pc, #2272]	; f3f8 <sfbpf_lex+0x1064>
    eb14:	b	e8b4 <sfbpf_lex+0x520>
    eb18:	mov	r0, #344	; 0x158
    eb1c:	b	e8b4 <sfbpf_lex+0x520>
    eb20:	ldr	r0, [pc, #2260]	; f3fc <sfbpf_lex+0x1068>
    eb24:	b	e8b4 <sfbpf_lex+0x520>
    eb28:	ldr	r0, [pc, #2256]	; f400 <sfbpf_lex+0x106c>
    eb2c:	b	e8b4 <sfbpf_lex+0x520>
    eb30:	ldr	r0, [pc, #2252]	; f404 <sfbpf_lex+0x1070>
    eb34:	b	e8b4 <sfbpf_lex+0x520>
    eb38:	mov	r0, #348	; 0x15c
    eb3c:	b	e8b4 <sfbpf_lex+0x520>
    eb40:	ldr	r0, [pc, #2240]	; f408 <sfbpf_lex+0x1074>
    eb44:	b	e8b4 <sfbpf_lex+0x520>
    eb48:	ldr	r0, [pc, #2236]	; f40c <sfbpf_lex+0x1078>
    eb4c:	b	e8b4 <sfbpf_lex+0x520>
    eb50:	ldr	r0, [pc, #2232]	; f410 <sfbpf_lex+0x107c>
    eb54:	b	e8b4 <sfbpf_lex+0x520>
    eb58:	ldr	r0, [pc, #2228]	; f414 <sfbpf_lex+0x1080>
    eb5c:	b	e8b4 <sfbpf_lex+0x520>
    eb60:	ldr	r0, [pc, #2224]	; f418 <sfbpf_lex+0x1084>
    eb64:	b	e8b4 <sfbpf_lex+0x520>
    eb68:	mov	r0, #352	; 0x160
    eb6c:	b	e8b4 <sfbpf_lex+0x520>
    eb70:	ldr	r0, [pc, #2212]	; f41c <sfbpf_lex+0x1088>
    eb74:	b	e8b4 <sfbpf_lex+0x520>
    eb78:	ldr	r0, [pc, #2208]	; f420 <sfbpf_lex+0x108c>
    eb7c:	b	e8b4 <sfbpf_lex+0x520>
    eb80:	mov	r0, #296	; 0x128
    eb84:	b	e8b4 <sfbpf_lex+0x520>
    eb88:	ldr	r0, [pc, #2196]	; f424 <sfbpf_lex+0x1090>
    eb8c:	b	e8b4 <sfbpf_lex+0x520>
    eb90:	ldr	r0, [pc, #2192]	; f428 <sfbpf_lex+0x1094>
    eb94:	b	e8b4 <sfbpf_lex+0x520>
    eb98:	ldr	r0, [pc, #2188]	; f42c <sfbpf_lex+0x1098>
    eb9c:	b	e8b4 <sfbpf_lex+0x520>
    eba0:	mov	r0, #356	; 0x164
    eba4:	b	e8b4 <sfbpf_lex+0x520>
    eba8:	ldr	r0, [pc, #2176]	; f430 <sfbpf_lex+0x109c>
    ebac:	b	e8b4 <sfbpf_lex+0x520>
    ebb0:	ldr	r0, [pc, #2168]	; f430 <sfbpf_lex+0x109c>
    ebb4:	b	e8b4 <sfbpf_lex+0x520>
    ebb8:	ldr	r0, [pc, #2164]	; f434 <sfbpf_lex+0x10a0>
    ebbc:	b	e8b4 <sfbpf_lex+0x520>
    ebc0:	ldr	r0, [pc, #2160]	; f438 <sfbpf_lex+0x10a4>
    ebc4:	b	e8b4 <sfbpf_lex+0x520>
    ebc8:	mov	r0, #360	; 0x168
    ebcc:	b	e8b4 <sfbpf_lex+0x520>
    ebd0:	ldr	r0, [pc, #2148]	; f43c <sfbpf_lex+0x10a8>
    ebd4:	b	e8b4 <sfbpf_lex+0x520>
    ebd8:	ldr	r0, [pc, #2144]	; f440 <sfbpf_lex+0x10ac>
    ebdc:	b	e8b4 <sfbpf_lex+0x520>
    ebe0:	ldr	r3, [r6]
    ebe4:	ldrb	r0, [r3]
    ebe8:	b	e8b4 <sfbpf_lex+0x520>
    ebec:	mov	r0, #308	; 0x134
    ebf0:	b	e8b4 <sfbpf_lex+0x520>
    ebf4:	ldr	r0, [pc, #2120]	; f444 <sfbpf_lex+0x10b0>
    ebf8:	b	e8b4 <sfbpf_lex+0x520>
    ebfc:	ldr	r0, [pc, #2116]	; f448 <sfbpf_lex+0x10b4>
    ec00:	b	e8b4 <sfbpf_lex+0x520>
    ec04:	mov	r0, #61	; 0x3d
    ec08:	b	e8b4 <sfbpf_lex+0x520>
    ec0c:	mov	r0, #316	; 0x13c
    ec10:	b	e8b4 <sfbpf_lex+0x520>
    ec14:	ldr	r0, [pc, #2096]	; f44c <sfbpf_lex+0x10b8>
    ec18:	b	e8b4 <sfbpf_lex+0x520>
    ec1c:	ldr	r0, [r6]
    ec20:	add	r0, r0, #1
    ec24:	bl	9fe4 <pcap_ether_aton>
    ec28:	ldr	r3, [pc, #2080]	; f450 <sfbpf_lex+0x10bc>
    ec2c:	ldr	r3, [r4, r3]
    ec30:	str	r0, [r3]
    ec34:	ldr	r0, [pc, #2072]	; f454 <sfbpf_lex+0x10c0>
    ec38:	b	e8b4 <sfbpf_lex+0x520>
    ec3c:	ldr	r0, [r6]
    ec40:	bl	9fe4 <pcap_ether_aton>
    ec44:	ldr	r3, [pc, #2052]	; f450 <sfbpf_lex+0x10bc>
    ec48:	ldr	r3, [r4, r3]
    ec4c:	str	r0, [r3]
    ec50:	mov	r0, #312	; 0x138
    ec54:	b	e8b4 <sfbpf_lex+0x520>
    ec58:	ldr	r3, [r6]
    ec5c:	ldrb	r2, [r3]
    ec60:	cmp	r2, #48	; 0x30
    ec64:	movne	r8, #10
    ec68:	bne	ec88 <sfbpf_lex+0x8f4>
    ec6c:	ldrb	r2, [r3, #1]
    ec70:	and	r2, r2, #223	; 0xdf
    ec74:	cmp	r2, #88	; 0x58
    ec78:	addeq	r3, r3, #2
    ec7c:	moveq	r8, #16
    ec80:	addne	r3, r3, #1
    ec84:	movne	r8, #8
    ec88:	sub	r5, r3, #1
    ec8c:	mov	r3, #0
    ec90:	ldrb	r6, [r5, #1]!
    ec94:	cmp	r6, #0
    ec98:	ldreq	r2, [pc, #1968]	; f450 <sfbpf_lex+0x10bc>
    ec9c:	ldreq	r0, [pc, #1972]	; f458 <sfbpf_lex+0x10c4>
    eca0:	ldreq	r2, [r4, r2]
    eca4:	streq	r3, [r2]
    eca8:	beq	e8b4 <sfbpf_lex+0x520>
    ecac:	mul	r7, r8, r3
    ecb0:	bl	e60 <__ctype_b_loc@plt>
    ecb4:	lsl	r3, r6, #1
    ecb8:	ldr	r2, [r0]
    ecbc:	ldrh	r3, [r2, r3]
    ecc0:	tst	r3, #2048	; 0x800
    ecc4:	subne	r6, r6, #48	; 0x30
    ecc8:	bne	ecd8 <sfbpf_lex+0x944>
    eccc:	tst	r3, #512	; 0x200
    ecd0:	subne	r6, r6, #87	; 0x57
    ecd4:	subeq	r6, r6, #55	; 0x37
    ecd8:	add	r3, r7, r6
    ecdc:	b	ec90 <sfbpf_lex+0x8fc>
    ece0:	ldr	r0, [r6]
    ece4:	bl	24f4 <sf_sdup>
    ece8:	ldr	r3, [pc, #1888]	; f450 <sfbpf_lex+0x10bc>
    ecec:	ldr	r3, [r4, r3]
    ecf0:	str	r0, [r3]
    ecf4:	ldr	r0, [pc, #1888]	; f45c <sfbpf_lex+0x10c8>
    ecf8:	b	e8b4 <sfbpf_lex+0x520>
    ecfc:	add	r5, sp, #56	; 0x38
    ed00:	mov	r2, #32
    ed04:	mov	r1, #0
    ed08:	mov	r0, r5
    ed0c:	bl	eb4 <memset@plt>
    ed10:	mov	r3, #10
    ed14:	str	r3, [sp, #60]	; 0x3c
    ed18:	mov	r3, #4
    ed1c:	str	r3, [sp, #56]	; 0x38
    ed20:	mov	r2, r5
    ed24:	add	r3, sp, #52	; 0x34
    ed28:	mov	r1, #0
    ed2c:	ldr	r0, [r6]
    ed30:	bl	f14 <getaddrinfo@plt>
    ed34:	cmp	r0, #0
    ed38:	beq	ed4c <sfbpf_lex+0x9b8>
    ed3c:	ldr	r0, [pc, #1820]	; f460 <sfbpf_lex+0x10cc>
    ed40:	ldr	r1, [r6]
    ed44:	add	r0, pc, r0
    ed48:	bl	20b8 <sf_bpf_error>
    ed4c:	ldr	r0, [sp, #52]	; 0x34
    ed50:	bl	f08 <freeaddrinfo@plt>
    ed54:	ldr	r0, [r6]
    ed58:	bl	24f4 <sf_sdup>
    ed5c:	ldr	r3, [pc, #1772]	; f450 <sfbpf_lex+0x10bc>
    ed60:	ldr	r3, [r4, r3]
    ed64:	str	r0, [r3]
    ed68:	ldr	r0, [pc, #1780]	; f464 <sfbpf_lex+0x10d0>
    ed6c:	b	e8b4 <sfbpf_lex+0x520>
    ed70:	ldr	r0, [pc, #1776]	; f468 <sfbpf_lex+0x10d4>
    ed74:	ldr	r1, [r6]
    ed78:	add	r0, pc, r0
    ed7c:	b	ed48 <sfbpf_lex+0x9b4>
    ed80:	ldr	r3, [pc, #1736]	; f450 <sfbpf_lex+0x10bc>
    ed84:	mov	r2, #0
    ed88:	ldr	r0, [pc, #1736]	; f458 <sfbpf_lex+0x10c4>
    ed8c:	ldr	r3, [r4, r3]
    ed90:	str	r2, [r3]
    ed94:	b	e8b4 <sfbpf_lex+0x520>
    ed98:	ldr	r3, [pc, #1712]	; f450 <sfbpf_lex+0x10bc>
    ed9c:	mov	r2, #1
    eda0:	ldr	r0, [pc, #1712]	; f458 <sfbpf_lex+0x10c4>
    eda4:	ldr	r3, [r4, r3]
    eda8:	str	r2, [r3]
    edac:	b	e8b4 <sfbpf_lex+0x520>
    edb0:	ldr	r3, [pc, #1688]	; f450 <sfbpf_lex+0x10bc>
    edb4:	mov	r2, #0
    edb8:	ldr	r0, [pc, #1688]	; f458 <sfbpf_lex+0x10c4>
    edbc:	ldr	r3, [r4, r3]
    edc0:	str	r2, [r3]
    edc4:	b	e8b4 <sfbpf_lex+0x520>
    edc8:	ldr	r3, [pc, #1664]	; f450 <sfbpf_lex+0x10bc>
    edcc:	mov	r2, #3
    edd0:	ldr	r0, [pc, #1664]	; f458 <sfbpf_lex+0x10c4>
    edd4:	ldr	r3, [r4, r3]
    edd8:	str	r2, [r3]
    eddc:	b	e8b4 <sfbpf_lex+0x520>
    ede0:	ldr	r3, [pc, #1640]	; f450 <sfbpf_lex+0x10bc>
    ede4:	mov	r2, #4
    ede8:	ldr	r0, [pc, #1640]	; f458 <sfbpf_lex+0x10c4>
    edec:	ldr	r3, [r4, r3]
    edf0:	str	r2, [r3]
    edf4:	b	e8b4 <sfbpf_lex+0x520>
    edf8:	ldr	r3, [pc, #1616]	; f450 <sfbpf_lex+0x10bc>
    edfc:	mov	r2, #5
    ee00:	ldr	r0, [pc, #1616]	; f458 <sfbpf_lex+0x10c4>
    ee04:	ldr	r3, [r4, r3]
    ee08:	str	r2, [r3]
    ee0c:	b	e8b4 <sfbpf_lex+0x520>
    ee10:	ldr	r3, [pc, #1592]	; f450 <sfbpf_lex+0x10bc>
    ee14:	mov	r2, #8
    ee18:	ldr	r0, [pc, #1592]	; f458 <sfbpf_lex+0x10c4>
    ee1c:	ldr	r3, [r4, r3]
    ee20:	str	r2, [r3]
    ee24:	b	e8b4 <sfbpf_lex+0x520>
    ee28:	ldr	r3, [pc, #1568]	; f450 <sfbpf_lex+0x10bc>
    ee2c:	mov	r2, #9
    ee30:	ldr	r0, [pc, #1568]	; f458 <sfbpf_lex+0x10c4>
    ee34:	ldr	r3, [r4, r3]
    ee38:	str	r2, [r3]
    ee3c:	b	e8b4 <sfbpf_lex+0x520>
    ee40:	ldr	r3, [pc, #1544]	; f450 <sfbpf_lex+0x10bc>
    ee44:	mov	r2, #10
    ee48:	ldr	r0, [pc, #1544]	; f458 <sfbpf_lex+0x10c4>
    ee4c:	ldr	r3, [r4, r3]
    ee50:	str	r2, [r3]
    ee54:	b	e8b4 <sfbpf_lex+0x520>
    ee58:	ldr	r3, [pc, #1520]	; f450 <sfbpf_lex+0x10bc>
    ee5c:	mov	r2, #11
    ee60:	ldr	r0, [pc, #1520]	; f458 <sfbpf_lex+0x10c4>
    ee64:	ldr	r3, [r4, r3]
    ee68:	str	r2, [r3]
    ee6c:	b	e8b4 <sfbpf_lex+0x520>
    ee70:	ldr	r3, [pc, #1496]	; f450 <sfbpf_lex+0x10bc>
    ee74:	mov	r2, #12
    ee78:	ldr	r0, [pc, #1496]	; f458 <sfbpf_lex+0x10c4>
    ee7c:	ldr	r3, [r4, r3]
    ee80:	str	r2, [r3]
    ee84:	b	e8b4 <sfbpf_lex+0x520>
    ee88:	ldr	r3, [pc, #1472]	; f450 <sfbpf_lex+0x10bc>
    ee8c:	mov	r2, #13
    ee90:	ldr	r0, [pc, #1472]	; f458 <sfbpf_lex+0x10c4>
    ee94:	ldr	r3, [r4, r3]
    ee98:	str	r2, [r3]
    ee9c:	b	e8b4 <sfbpf_lex+0x520>
    eea0:	ldr	r3, [pc, #1448]	; f450 <sfbpf_lex+0x10bc>
    eea4:	mov	r2, #14
    eea8:	ldr	r0, [pc, #1448]	; f458 <sfbpf_lex+0x10c4>
    eeac:	ldr	r3, [r4, r3]
    eeb0:	str	r2, [r3]
    eeb4:	b	e8b4 <sfbpf_lex+0x520>
    eeb8:	ldr	r3, [pc, #1424]	; f450 <sfbpf_lex+0x10bc>
    eebc:	mov	r2, #15
    eec0:	ldr	r0, [pc, #1424]	; f458 <sfbpf_lex+0x10c4>
    eec4:	ldr	r3, [r4, r3]
    eec8:	str	r2, [r3]
    eecc:	b	e8b4 <sfbpf_lex+0x520>
    eed0:	ldr	r3, [pc, #1400]	; f450 <sfbpf_lex+0x10bc>
    eed4:	mov	r2, #16
    eed8:	ldr	r0, [pc, #1400]	; f458 <sfbpf_lex+0x10c4>
    eedc:	ldr	r3, [r4, r3]
    eee0:	str	r2, [r3]
    eee4:	b	e8b4 <sfbpf_lex+0x520>
    eee8:	ldr	r3, [pc, #1376]	; f450 <sfbpf_lex+0x10bc>
    eeec:	mov	r2, #17
    eef0:	ldr	r0, [pc, #1376]	; f458 <sfbpf_lex+0x10c4>
    eef4:	ldr	r3, [r4, r3]
    eef8:	str	r2, [r3]
    eefc:	b	e8b4 <sfbpf_lex+0x520>
    ef00:	ldr	r3, [pc, #1352]	; f450 <sfbpf_lex+0x10bc>
    ef04:	mov	r2, #18
    ef08:	ldr	r0, [pc, #1352]	; f458 <sfbpf_lex+0x10c4>
    ef0c:	ldr	r3, [r4, r3]
    ef10:	str	r2, [r3]
    ef14:	b	e8b4 <sfbpf_lex+0x520>
    ef18:	ldr	r3, [pc, #1328]	; f450 <sfbpf_lex+0x10bc>
    ef1c:	mov	r2, #13
    ef20:	ldr	r0, [pc, #1328]	; f458 <sfbpf_lex+0x10c4>
    ef24:	ldr	r3, [r4, r3]
    ef28:	str	r2, [r3]
    ef2c:	b	e8b4 <sfbpf_lex+0x520>
    ef30:	ldr	r3, [pc, #1304]	; f450 <sfbpf_lex+0x10bc>
    ef34:	mov	r2, #1
    ef38:	ldr	r0, [pc, #1304]	; f458 <sfbpf_lex+0x10c4>
    ef3c:	ldr	r3, [r4, r3]
    ef40:	str	r2, [r3]
    ef44:	b	e8b4 <sfbpf_lex+0x520>
    ef48:	ldr	r3, [pc, #1280]	; f450 <sfbpf_lex+0x10bc>
    ef4c:	mov	r2, #2
    ef50:	ldr	r0, [pc, #1280]	; f458 <sfbpf_lex+0x10c4>
    ef54:	ldr	r3, [r4, r3]
    ef58:	str	r2, [r3]
    ef5c:	b	e8b4 <sfbpf_lex+0x520>
    ef60:	ldr	r3, [pc, #1256]	; f450 <sfbpf_lex+0x10bc>
    ef64:	mov	r2, #4
    ef68:	ldr	r0, [pc, #1256]	; f458 <sfbpf_lex+0x10c4>
    ef6c:	ldr	r3, [r4, r3]
    ef70:	str	r2, [r3]
    ef74:	b	e8b4 <sfbpf_lex+0x520>
    ef78:	ldr	r3, [pc, #1232]	; f450 <sfbpf_lex+0x10bc>
    ef7c:	mov	r2, #8
    ef80:	ldr	r0, [pc, #1232]	; f458 <sfbpf_lex+0x10c4>
    ef84:	ldr	r3, [r4, r3]
    ef88:	str	r2, [r3]
    ef8c:	b	e8b4 <sfbpf_lex+0x520>
    ef90:	ldr	r3, [pc, #1208]	; f450 <sfbpf_lex+0x10bc>
    ef94:	mov	r2, #16
    ef98:	ldr	r0, [pc, #1208]	; f458 <sfbpf_lex+0x10c4>
    ef9c:	ldr	r3, [r4, r3]
    efa0:	str	r2, [r3]
    efa4:	b	e8b4 <sfbpf_lex+0x520>
    efa8:	ldr	r3, [pc, #1184]	; f450 <sfbpf_lex+0x10bc>
    efac:	mov	r2, #32
    efb0:	ldr	r0, [pc, #1184]	; f458 <sfbpf_lex+0x10c4>
    efb4:	ldr	r3, [r4, r3]
    efb8:	str	r2, [r3]
    efbc:	b	e8b4 <sfbpf_lex+0x520>
    efc0:	ldr	r0, [r6]
    efc4:	bl	24f4 <sf_sdup>
    efc8:	ldr	r3, [pc, #1152]	; f450 <sfbpf_lex+0x10bc>
    efcc:	ldr	r3, [r4, r3]
    efd0:	str	r0, [r3]
    efd4:	ldr	r0, [pc, #1168]	; f46c <sfbpf_lex+0x10d8>
    efd8:	b	e8b4 <sfbpf_lex+0x520>
    efdc:	ldr	r0, [r6]
    efe0:	add	r0, r0, #1
    efe4:	bl	24f4 <sf_sdup>
    efe8:	ldr	r3, [pc, #1120]	; f450 <sfbpf_lex+0x10bc>
    efec:	ldr	r3, [r4, r3]
    eff0:	str	r0, [r3]
    eff4:	ldr	r0, [pc, #1136]	; f46c <sfbpf_lex+0x10d8>
    eff8:	b	e8b4 <sfbpf_lex+0x520>
    effc:	ldr	r0, [pc, #1132]	; f470 <sfbpf_lex+0x10dc>
    f000:	ldr	r1, [r6]
    f004:	add	r0, pc, r0
    f008:	b	ed48 <sfbpf_lex+0x9b4>
    f00c:	ldr	r3, [r6]
    f010:	ldr	r0, [pc, #1116]	; f474 <sfbpf_lex+0x10e0>
    f014:	ldrb	r1, [r3]
    f018:	add	r0, pc, r0
    f01c:	b	ed48 <sfbpf_lex+0x9b4>
    f020:	ldr	r3, [pc, #1104]	; f478 <sfbpf_lex+0x10e4>
    f024:	ldr	r1, [sp, #32]
    f028:	add	r3, pc, r3
    f02c:	mov	r2, #1
    f030:	ldr	r3, [r3, #44]	; 0x2c
    f034:	ldr	r1, [r1]
    f038:	ldr	r0, [r6]
    f03c:	bl	e18 <fwrite@plt>
    f040:	b	e49c <sfbpf_lex+0x108>
    f044:	mov	r0, #0
    f048:	b	e8b4 <sfbpf_lex+0x520>
    f04c:	ldr	r3, [r6]
    f050:	sub	r3, r5, r3
    f054:	sub	r3, r3, #1
    f058:	str	r3, [sp, #24]
    f05c:	ldr	r3, [sp, #4]
    f060:	ldrb	r3, [r3, #32]
    f064:	strb	r3, [r5]
    f068:	ldr	r3, [sp, #4]
    f06c:	ldr	r0, [r3, #20]
    f070:	ldr	r1, [r3, #16]
    f074:	ldr	r3, [r1, r0, lsl #2]
    f078:	ldr	r2, [r3, #44]	; 0x2c
    f07c:	cmp	r2, #0
    f080:	bne	f0a4 <sfbpf_lex+0xd10>
    f084:	ldr	ip, [sp, #4]
    f088:	ldr	r2, [r3, #16]
    f08c:	str	r2, [ip, #24]
    f090:	ldr	r2, [ip, #28]
    f094:	str	r2, [r3]
    f098:	ldr	r3, [r1, r0, lsl #2]
    f09c:	mov	r2, #1
    f0a0:	str	r2, [r3, #44]	; 0x2c
    f0a4:	ldr	r7, [pc, #976]	; f47c <sfbpf_lex+0x10e8>
    f0a8:	ldr	lr, [r1, r0, lsl #2]
    f0ac:	add	r7, pc, r7
    f0b0:	ldr	r3, [lr, #4]
    f0b4:	ldr	r2, [r7, #24]
    f0b8:	ldr	fp, [r7, #4]
    f0bc:	add	ip, r3, r2
    f0c0:	cmp	fp, ip
    f0c4:	bhi	f18c <sfbpf_lex+0xdf8>
    f0c8:	ldr	r3, [sp, #24]
    f0cc:	ldr	r5, [r6]
    f0d0:	add	r5, r5, r3
    f0d4:	str	r5, [r7, #4]
    f0d8:	bl	f5c <yy_get_previous_state>
    f0dc:	ldr	r3, [pc, #924]	; f480 <sfbpf_lex+0x10ec>
    f0e0:	add	r3, pc, r3
    f0e4:	add	r3, r3, #256	; 0x100
    f0e8:	lsl	r2, r0, #1
    f0ec:	mov	r1, r0
    f0f0:	ldrsh	r3, [r3, r2]
    f0f4:	ldr	r2, [pc, #904]	; f484 <sfbpf_lex+0x10f0>
    f0f8:	cmp	r3, #0
    f0fc:	ldr	r3, [sp, #36]	; 0x24
    f100:	add	r2, pc, r2
    f104:	add	ip, r3, #2560	; 0xa00
    f108:	add	r2, r2, #3120	; 0xc30
    f10c:	add	ip, ip, #10
    f110:	add	r2, r2, #4
    f114:	strne	r0, [r7, #8]
    f118:	strne	r5, [r7, #12]
    f11c:	ldr	r3, [sp, #20]
    f120:	lsl	lr, r1, #1
    f124:	ldrsh	r3, [r3, lr]
    f128:	add	r3, r3, #1
    f12c:	lsl	r3, r3, #1
    f130:	ldrsh	r7, [ip, r3]
    f134:	cmp	r1, r7
    f138:	bne	f184 <sfbpf_lex+0xdf0>
    f13c:	ldr	r2, [pc, #836]	; f488 <sfbpf_lex+0x10f4>
    f140:	add	r2, pc, r2
    f144:	add	r2, r2, #1104	; 0x450
    f148:	add	r2, r2, #8
    f14c:	ldrsh	r3, [r2, r3]
    f150:	ldr	r2, [pc, #420]	; f2fc <sfbpf_lex+0xf68>
    f154:	cmp	r3, r2
    f158:	moveq	r3, #0
    f15c:	ldr	r2, [r6]
    f160:	cmp	r3, #0
    f164:	str	r2, [sp]
    f168:	beq	e5b8 <sfbpf_lex+0x224>
    f16c:	ldr	r2, [pc, #792]	; f48c <sfbpf_lex+0x10f8>
    f170:	add	r5, r5, #1
    f174:	add	r2, pc, r2
    f178:	str	r5, [r2, #4]
    f17c:	mov	r0, r3
    f180:	b	e4b8 <sfbpf_lex+0x124>
    f184:	ldrsh	r1, [r2, lr]
    f188:	b	f11c <sfbpf_lex+0xd88>
    f18c:	add	r2, r2, #1
    f190:	add	r2, r3, r2
    f194:	cmp	fp, r2
    f198:	ldr	ip, [r6]
    f19c:	bls	f1ac <sfbpf_lex+0xe18>
    f1a0:	ldr	r0, [pc, #744]	; f490 <sfbpf_lex+0x10fc>
    f1a4:	add	r0, pc, r0
    f1a8:	bl	e004 <yy_fatal_error>
    f1ac:	ldr	r2, [lr, #40]	; 0x28
    f1b0:	sub	fp, fp, ip
    f1b4:	cmp	r2, #0
    f1b8:	bne	f1ec <sfbpf_lex+0xe58>
    f1bc:	cmp	fp, #1
    f1c0:	bne	f758 <sfbpf_lex+0x13c4>
    f1c4:	ldr	r3, [pc, #712]	; f494 <sfbpf_lex+0x1100>
    f1c8:	ldr	r2, [r6]
    f1cc:	add	r3, pc, r3
    f1d0:	str	r2, [r3, #4]
    f1d4:	ldr	r3, [r3]
    f1d8:	sub	r3, r3, #1
    f1dc:	add	r3, r3, r3, lsr #31
    f1e0:	asr	r3, r3, #1
    f1e4:	add	r3, r3, #146	; 0x92
    f1e8:	b	e63c <sfbpf_lex+0x2a8>
    f1ec:	sub	r9, fp, #1
    f1f0:	sub	r3, r3, #1
    f1f4:	mov	r2, ip
    f1f8:	sub	lr, r2, ip
    f1fc:	cmp	r9, lr
    f200:	bgt	f2b4 <sfbpf_lex+0xf20>
    f204:	ldr	r3, [r1, r0, lsl #2]
    f208:	ldr	r2, [r3, #44]	; 0x2c
    f20c:	cmp	r2, #2
    f210:	bne	f4d4 <sfbpf_lex+0x1140>
    f214:	ldr	r1, [pc, #636]	; f498 <sfbpf_lex+0x1104>
    f218:	mov	r2, #0
    f21c:	add	r1, pc, r1
    f220:	str	r2, [r3, #16]
    f224:	str	r2, [r1, #24]
    f228:	ldr	r3, [pc, #620]	; f49c <sfbpf_lex+0x1108>
    f22c:	add	r3, pc, r3
    f230:	ldr	r2, [r3, #24]
    f234:	cmp	r2, #0
    f238:	movne	r7, #0
    f23c:	bne	f254 <sfbpf_lex+0xec0>
    f240:	cmp	r9, #0
    f244:	bne	f6d0 <sfbpf_lex+0x133c>
    f248:	ldr	r0, [r3, #28]
    f24c:	bl	e310 <sfbpf_restart>
    f250:	mov	r7, #1
    f254:	ldr	r3, [pc, #580]	; f4a0 <sfbpf_lex+0x110c>
    f258:	add	r3, pc, r3
    f25c:	ldr	fp, [r3, #20]
    f260:	ldr	sl, [r3, #16]
    f264:	ldr	r8, [r3, #24]
    f268:	ldr	r3, [sl, fp, lsl #2]
    f26c:	add	r9, r9, r8
    f270:	ldr	r2, [r3, #12]
    f274:	cmp	r9, r2
    f278:	ble	f6f0 <sfbpf_lex+0x135c>
    f27c:	add	r8, r9, r8, asr #1
    f280:	ldr	r0, [r3, #4]
    f284:	mov	r1, r8
    f288:	str	r3, [sp, #44]	; 0x2c
    f28c:	bl	e0c <realloc@plt>
    f290:	ldr	r3, [sp, #44]	; 0x2c
    f294:	str	r0, [r3, #4]
    f298:	ldr	r3, [sl, fp, lsl #2]
    f29c:	ldr	r2, [r3, #4]
    f2a0:	cmp	r2, #0
    f2a4:	bne	f6e8 <sfbpf_lex+0x1354>
    f2a8:	ldr	r0, [pc, #500]	; f4a4 <sfbpf_lex+0x1110>
    f2ac:	add	r0, pc, r0
    f2b0:	b	f1a8 <sfbpf_lex+0xe14>
    f2b4:	ldrb	lr, [r2], #1
    f2b8:	strb	lr, [r3, #1]!
    f2bc:	b	f1f8 <sfbpf_lex+0xe64>
    f2c0:	.word	0x0001f7a0
    f2c4:	.word	0x0001ec50
    f2c8:	.word	0x0001f76c
    f2cc:	.word	0x000000e8
    f2d0:	.word	0x0001f74c
    f2d4:	.word	0x000000f0
    f2d8:	.word	0x0001f72c
    f2dc:	.word	0x0001f700
    f2e0:	.word	0x00006686
    f2e4:	.word	0x0000a65e
    f2e8:	.word	0x0000665a
    f2ec:	.word	0x0001f69c
    f2f0:	.word	0x0000462a
    f2f4:	.word	0x0001f66c
    f2f8:	.word	0x00004612
    f2fc:	.word	0x00000599
    f300:	.word	0x00001ce9
    f304:	.word	0x0001f5b8
    f308:	.word	0x0001f5a8
    f30c:	.word	0x0000454a
    f310:	.word	0x0001f58c
    f314:	.word	0x0001f568
    f318:	.word	0x000000e0
    f31c:	.word	0x000000c8
    f320:	.word	0x0001f520
    f324:	.word	0x0001f50c
    f328:	.word	0x00000103
    f32c:	.word	0x0001f27c
    f330:	.word	0x0000010f
    f334:	.word	0x00000111
    f338:	.word	0x00000112
    f33c:	.word	0x00000113
    f340:	.word	0x00000115
    f344:	.word	0x00000116
    f348:	.word	0x00000117
    f34c:	.word	0x00000119
    f350:	.word	0x00000163
    f354:	.word	0x0000013f
    f358:	.word	0x00000141
    f35c:	.word	0x00000142
    f360:	.word	0x0000011a
    f364:	.word	0x0000011b
    f368:	.word	0x0000011d
    f36c:	.word	0x0000011e
    f370:	.word	0x0000011f
    f374:	.word	0x00000147
    f378:	.word	0x0000014a
    f37c:	.word	0x0000014b
    f380:	.word	0x0000014d
    f384:	.word	0x0000014e
    f388:	.word	0x0000014f
    f38c:	.word	0x00000151
    f390:	.word	0x00000149
    f394:	.word	0x00000152
    f398:	.word	0x00000153
    f39c:	.word	0x00000106
    f3a0:	.word	0x00000107
    f3a4:	.word	0x00000109
    f3a8:	.word	0x0000010d
    f3ac:	.word	0x00000105
    f3b0:	.word	0x0000012d
    f3b4:	.word	0x0000012e
    f3b8:	.word	0x0000012f
    f3bc:	.word	0x00000131
    f3c0:	.word	0x00000132
    f3c4:	.word	0x0000010a
    f3c8:	.word	0x0000010b
    f3cc:	.word	0x0000010e
    f3d0:	.word	0x00000121
    f3d4:	.word	0x00000122
    f3d8:	.word	0x0000016b
    f3dc:	.word	0x0000013e
    f3e0:	.word	0x00000125
    f3e4:	.word	0x00000143
    f3e8:	.word	0x00000145
    f3ec:	.word	0x00000146
    f3f0:	.word	0x00000155
    f3f4:	.word	0x00000156
    f3f8:	.word	0x00000157
    f3fc:	.word	0x0000015d
    f400:	.word	0x0000015e
    f404:	.word	0x0000015b
    f408:	.word	0x00000159
    f40c:	.word	0x0000015a
    f410:	.word	0x00000161
    f414:	.word	0x00000162
    f418:	.word	0x0000015f
    f41c:	.word	0x00000126
    f420:	.word	0x00000127
    f424:	.word	0x00000129
    f428:	.word	0x0000012a
    f42c:	.word	0x0000012b
    f430:	.word	0x00000165
    f434:	.word	0x00000166
    f438:	.word	0x00000167
    f43c:	.word	0x00000169
    f440:	.word	0x0000016a
    f444:	.word	0x00000135
    f448:	.word	0x00000136
    f44c:	.word	0x0000013d
    f450:	.word	0x000000f8
    f454:	.word	0x0000013b
    f458:	.word	0x00000123
    f45c:	.word	0x00000139
    f460:	.word	0x0000dc81
    f464:	.word	0x0000013a
    f468:	.word	0x0000dc63
    f46c:	.word	0x00000137
    f470:	.word	0x0000d9f1
    f474:	.word	0x0000d9ef
    f478:	.word	0x0001eb14
    f47c:	.word	0x0001ea90
    f480:	.word	0x00003a0a
    f484:	.word	0x000039ea
    f488:	.word	0x00009992
    f48c:	.word	0x0001e9c8
    f490:	.word	0x0000d875
    f494:	.word	0x0001e970
    f498:	.word	0x0001e920
    f49c:	.word	0x0001e910
    f4a0:	.word	0x0001e8e4
    f4a4:	.word	0x0000d7ee
    f4a8:	.word	0x0001e658
    f4ac:	.word	0x0001e644
    f4b0:	.word	0x0000d44d
    f4b4:	.word	0x0001e4e0
    f4b8:	.word	0x0001e4d4
    f4bc:	.word	0x0001e43c
    f4c0:	.word	0x0001e3e0
    f4c4:	.word	0x0000d338
    f4c8:	.word	0x00000102
    f4cc:	.word	0x00000133
    f4d0:	.word	0x0000d2c1
    f4d4:	ldr	r7, [r3, #12]
    f4d8:	ldr	r8, [pc, #-56]	; f4a8 <sfbpf_lex+0x1114>
    f4dc:	sub	r7, r7, r9
    f4e0:	sub	r7, r7, #1
    f4e4:	add	r8, pc, r8
    f4e8:	cmp	r7, #0
    f4ec:	ble	f594 <sfbpf_lex+0x1200>
    f4f0:	ldr	r8, [pc, #-76]	; f4ac <sfbpf_lex+0x1118>
    f4f4:	cmp	r7, #8192	; 0x2000
    f4f8:	add	r8, pc, r8
    f4fc:	movge	r7, #8192	; 0x2000
    f500:	ldr	r2, [r8, #20]
    f504:	ldr	r3, [r8, #16]
    f508:	ldr	r3, [r3, r2, lsl #2]
    f50c:	ldr	r3, [r3, #24]
    f510:	cmp	r3, #0
    f514:	bne	f684 <sfbpf_lex+0x12f0>
    f518:	str	r3, [sp, #44]	; 0x2c
    f51c:	bl	e9c <__errno_location@plt>
    f520:	mov	fp, #1
    f524:	ldr	r3, [sp, #44]	; 0x2c
    f528:	mov	sl, r0
    f52c:	str	r3, [r0]
    f530:	ldr	r2, [r8, #20]
    f534:	ldr	r3, [r8, #16]
    f538:	mov	r1, fp
    f53c:	ldr	r3, [r3, r2, lsl #2]
    f540:	mov	r2, r7
    f544:	ldr	r0, [r3, #4]
    f548:	ldr	r3, [r8, #28]
    f54c:	add	r0, r0, r9
    f550:	bl	e30 <fread@plt>
    f554:	cmp	r0, #0
    f558:	str	r0, [r8, #24]
    f55c:	str	r0, [sp, #44]	; 0x2c
    f560:	bne	f664 <sfbpf_lex+0x12d0>
    f564:	ldr	r0, [r8, #28]
    f568:	bl	ddc <ferror@plt>
    f56c:	ldr	r3, [sp, #44]	; 0x2c
    f570:	cmp	r0, #0
    f574:	beq	f664 <sfbpf_lex+0x12d0>
    f578:	ldr	r2, [sl]
    f57c:	cmp	r2, #4
    f580:	bne	f7b8 <sfbpf_lex+0x1424>
    f584:	str	r3, [sl]
    f588:	ldr	r0, [r8, #28]
    f58c:	bl	ef0 <clearerr@plt>
    f590:	b	f530 <sfbpf_lex+0x119c>
    f594:	ldr	r3, [sp, #16]
    f598:	ldr	r2, [r3, #20]
    f59c:	ldr	r3, [r3, #16]
    f5a0:	ldr	r7, [r3, r2, lsl #2]
    f5a4:	ldr	r3, [sp, #16]
    f5a8:	ldr	r0, [r7, #4]
    f5ac:	ldr	sl, [r3, #4]
    f5b0:	ldr	r3, [r7, #20]
    f5b4:	sub	sl, sl, r0
    f5b8:	cmp	r3, #0
    f5bc:	streq	r3, [r7, #4]
    f5c0:	beq	f5f8 <sfbpf_lex+0x1264>
    f5c4:	ldr	r3, [r7, #12]
    f5c8:	cmp	r3, #0
    f5cc:	lsl	r2, r3, #1
    f5d0:	strgt	r2, [r7, #12]
    f5d4:	bgt	f5e8 <sfbpf_lex+0x1254>
    f5d8:	add	r2, r3, #7
    f5dc:	movge	r2, r3
    f5e0:	add	r3, r3, r2, asr #3
    f5e4:	str	r3, [r7, #12]
    f5e8:	ldr	r1, [r7, #12]
    f5ec:	add	r1, r1, #2
    f5f0:	bl	e0c <realloc@plt>
    f5f4:	str	r0, [r7, #4]
    f5f8:	ldr	r3, [r7, #4]
    f5fc:	cmp	r3, #0
    f600:	ldreq	r0, [pc, #-344]	; f4b0 <sfbpf_lex+0x111c>
    f604:	addeq	r0, pc, r0
    f608:	beq	f1a8 <sfbpf_lex+0xe14>
    f60c:	add	sl, r3, sl
    f610:	ldr	r2, [r8, #20]
    f614:	ldr	r3, [r8, #16]
    f618:	str	sl, [r8, #4]
    f61c:	ldr	r3, [r3, r2, lsl #2]
    f620:	ldr	r7, [r3, #12]
    f624:	sub	r7, r7, r9
    f628:	sub	r7, r7, #1
    f62c:	b	f4e8 <sfbpf_lex+0x1154>
    f630:	ldr	ip, [r3, #20]
    f634:	ldr	r1, [r3, #16]
    f638:	cmp	r7, r2
    f63c:	ldr	r1, [r1, ip, lsl #2]
    f640:	ldr	r1, [r1, #4]
    f644:	add	r1, r1, fp
    f648:	add	sl, r1, sl
    f64c:	strb	r0, [sl, #-1]
    f650:	mov	sl, r2
    f654:	bgt	f68c <sfbpf_lex+0x12f8>
    f658:	ldr	r3, [pc, #-428]	; f4b4 <sfbpf_lex+0x1120>
    f65c:	add	r3, pc, r3
    f660:	str	sl, [r3, #24]
    f664:	ldr	r3, [pc, #-436]	; f4b8 <sfbpf_lex+0x1124>
    f668:	add	r3, pc, r3
    f66c:	ldr	r1, [r3, #20]
    f670:	ldr	r2, [r3, #16]
    f674:	ldr	r3, [r3, #24]
    f678:	ldr	r2, [r2, r1, lsl #2]
    f67c:	str	r3, [r2, #16]
    f680:	b	f228 <sfbpf_lex+0xe94>
    f684:	mov	sl, #0
    f688:	mov	r3, r8
    f68c:	ldr	r0, [r3, #28]
    f690:	str	r3, [sp, #44]	; 0x2c
    f694:	bl	f50 <getc@plt>
    f698:	cmn	r0, #1
    f69c:	beq	f7a8 <sfbpf_lex+0x1414>
    f6a0:	cmp	r0, #10
    f6a4:	add	r2, sl, #1
    f6a8:	ldr	r3, [sp, #44]	; 0x2c
    f6ac:	bne	f630 <sfbpf_lex+0x129c>
    f6b0:	ldr	r1, [r8, #20]
    f6b4:	ldr	r3, [r8, #16]
    f6b8:	ldr	r3, [r3, r1, lsl #2]
    f6bc:	ldr	r3, [r3, #4]
    f6c0:	add	r3, r3, r9
    f6c4:	strb	r0, [r3, sl]
    f6c8:	mov	sl, r2
    f6cc:	b	f658 <sfbpf_lex+0x12c4>
    f6d0:	ldr	r2, [r3, #20]
    f6d4:	ldr	r3, [r3, #16]
    f6d8:	mov	r7, #2
    f6dc:	ldr	r3, [r3, r2, lsl #2]
    f6e0:	str	r7, [r3, #44]	; 0x2c
    f6e4:	b	f254 <sfbpf_lex+0xec0>
    f6e8:	sub	r8, r8, #2
    f6ec:	str	r8, [r3, #12]
    f6f0:	ldr	r3, [sl, fp, lsl #2]
    f6f4:	mov	r1, #0
    f6f8:	ldr	r2, [pc, #-580]	; f4bc <sfbpf_lex+0x1128>
    f6fc:	ldr	r3, [r3, #4]
    f700:	add	r2, pc, r2
    f704:	cmp	r7, #1
    f708:	strb	r1, [r3, r9]
    f70c:	ldr	r3, [sl, fp, lsl #2]
    f710:	str	r9, [r2, #24]
    f714:	ldr	r3, [r3, #4]
    f718:	add	r9, r3, r9
    f71c:	strb	r1, [r9, #1]
    f720:	ldr	r3, [sl, fp, lsl #2]
    f724:	ldr	r3, [r3, #4]
    f728:	str	r3, [r6]
    f72c:	beq	f1c4 <sfbpf_lex+0xe30>
    f730:	cmp	r7, #2
    f734:	beq	f758 <sfbpf_lex+0x13c4>
    f738:	ldr	r1, [sp, #24]
    f73c:	add	r5, r3, r1
    f740:	str	r5, [r2, #4]
    f744:	bl	f5c <yy_get_previous_state>
    f748:	ldr	r2, [r6]
    f74c:	str	r2, [sp]
    f750:	mov	r3, r0
    f754:	b	f17c <sfbpf_lex+0xde8>
    f758:	ldr	r3, [pc, #-672]	; f4c0 <sfbpf_lex+0x112c>
    f75c:	add	r3, pc, r3
    f760:	ldr	r1, [r3, #20]
    f764:	ldr	r2, [r3, #16]
    f768:	ldr	r2, [r2, r1, lsl #2]
    f76c:	ldr	r5, [r2, #4]
    f770:	ldr	r2, [r3, #24]
    f774:	add	r5, r5, r2
    f778:	str	r5, [r3, #4]
    f77c:	bl	f5c <yy_get_previous_state>
    f780:	ldr	r3, [r6]
    f784:	str	r3, [sp]
    f788:	b	e5b8 <sfbpf_lex+0x224>
    f78c:	ldr	r0, [pc, #-720]	; f4c4 <sfbpf_lex+0x1130>
    f790:	add	r0, pc, r0
    f794:	b	f1a8 <sfbpf_lex+0xe14>
    f798:	ldr	r0, [pc, #-728]	; f4c8 <sfbpf_lex+0x1134>
    f79c:	b	e8b4 <sfbpf_lex+0x520>
    f7a0:	ldr	r0, [pc, #-732]	; f4cc <sfbpf_lex+0x1138>
    f7a4:	b	e8b4 <sfbpf_lex+0x520>
    f7a8:	ldr	r0, [r8, #28]
    f7ac:	bl	ddc <ferror@plt>
    f7b0:	cmp	r0, #0
    f7b4:	beq	f658 <sfbpf_lex+0x12c4>
    f7b8:	ldr	r0, [pc, #-752]	; f4d0 <sfbpf_lex+0x113c>
    f7bc:	add	r0, pc, r0
    f7c0:	b	f1a8 <sfbpf_lex+0xe14>

0000f7c4 <sfbpf_push_buffer_state>:
    f7c4:	push	{r4, lr}
    f7c8:	subs	r4, r0, #0
    f7cc:	popeq	{r4, pc}
    f7d0:	bl	e040 <sfbpf_ensure_buffer_stack>
    f7d4:	ldr	r1, [pc, #108]	; f848 <sfbpf_push_buffer_state+0x84>
    f7d8:	add	r1, pc, r1
    f7dc:	ldr	r2, [r1, #16]
    f7e0:	cmp	r2, #0
    f7e4:	beq	f830 <sfbpf_push_buffer_state+0x6c>
    f7e8:	ldr	r3, [r1, #20]
    f7ec:	ldr	r0, [r2, r3, lsl #2]
    f7f0:	cmp	r0, #0
    f7f4:	beq	f818 <sfbpf_push_buffer_state+0x54>
    f7f8:	ldr	r0, [r1, #4]
    f7fc:	ldrb	ip, [r1, #32]
    f800:	ldr	r1, [r1, #24]
    f804:	strb	ip, [r0]
    f808:	ldr	ip, [r2, r3, lsl #2]
    f80c:	str	r0, [ip, #8]
    f810:	ldr	r0, [r2, r3, lsl #2]
    f814:	str	r1, [r0, #16]
    f818:	ldr	r1, [r2, r3, lsl #2]
    f81c:	cmp	r1, #0
    f820:	ldrne	r1, [pc, #36]	; f84c <sfbpf_push_buffer_state+0x88>
    f824:	addne	r3, r3, #1
    f828:	addne	r1, pc, r1
    f82c:	strne	r3, [r1, #20]
    f830:	ldr	r3, [pc, #24]	; f850 <sfbpf_push_buffer_state+0x8c>
    f834:	add	r3, pc, r3
    f838:	ldr	r3, [r3, #20]
    f83c:	str	r4, [r2, r3, lsl #2]
    f840:	pop	{r4, lr}
    f844:	b	dfa4 <sfbpf__load_buffer_state>
    f848:	.word	0x0001e364
    f84c:	.word	0x0001e314
    f850:	.word	0x0001e308

0000f854 <sfbpf_pop_buffer_state>:
    f854:	push	{r4, r5, r6, lr}
    f858:	ldr	r6, [pc, #84]	; f8b4 <sfbpf_pop_buffer_state+0x60>
    f85c:	add	r6, pc, r6
    f860:	ldr	r5, [r6, #16]
    f864:	cmp	r5, #0
    f868:	popeq	{r4, r5, r6, pc}
    f86c:	ldr	r4, [r6, #20]
    f870:	ldr	r0, [r5, r4, lsl #2]
    f874:	cmp	r0, #0
    f878:	popeq	{r4, r5, r6, pc}
    f87c:	bl	e168 <sfbpf__delete_buffer>
    f880:	mov	r3, #0
    f884:	cmp	r4, r3
    f888:	str	r3, [r5, r4, lsl #2]
    f88c:	ldr	r3, [pc, #36]	; f8b8 <sfbpf_pop_buffer_state+0x64>
    f890:	subne	r4, r4, #1
    f894:	add	r3, pc, r3
    f898:	strne	r4, [r6, #20]
    f89c:	ldr	r3, [r3, #20]
    f8a0:	ldr	r3, [r5, r3, lsl #2]
    f8a4:	cmp	r3, #0
    f8a8:	popeq	{r4, r5, r6, pc}
    f8ac:	pop	{r4, r5, r6, lr}
    f8b0:	b	dfa4 <sfbpf__load_buffer_state>
    f8b4:	.word	0x0001e2e0
    f8b8:	.word	0x0001e2a8

0000f8bc <sfbpf__scan_buffer>:
    f8bc:	cmp	r1, #1
    f8c0:	bls	f940 <sfbpf__scan_buffer+0x84>
    f8c4:	push	{r4, r5, r6, r7, r8, lr}
    f8c8:	sub	r7, r1, #2
    f8cc:	ldrb	r4, [r0, r7]
    f8d0:	cmp	r4, #0
    f8d4:	bne	f948 <sfbpf__scan_buffer+0x8c>
    f8d8:	add	r1, r0, r1
    f8dc:	ldrb	r5, [r1, #-1]
    f8e0:	cmp	r5, #0
    f8e4:	bne	f938 <sfbpf__scan_buffer+0x7c>
    f8e8:	mov	r6, r0
    f8ec:	mov	r0, #48	; 0x30
    f8f0:	bl	e48 <malloc@plt>
    f8f4:	subs	r4, r0, #0
    f8f8:	bne	f908 <sfbpf__scan_buffer+0x4c>
    f8fc:	ldr	r0, [pc, #76]	; f950 <sfbpf__scan_buffer+0x94>
    f900:	add	r0, pc, r0
    f904:	bl	e004 <yy_fatal_error>
    f908:	mov	r3, #1
    f90c:	str	r7, [r4, #12]
    f910:	str	r6, [r4, #4]
    f914:	str	r6, [r4, #8]
    f918:	str	r5, [r4, #20]
    f91c:	str	r5, [r4]
    f920:	str	r7, [r4, #16]
    f924:	str	r5, [r4, #24]
    f928:	str	r3, [r4, #28]
    f92c:	str	r5, [r4, #40]	; 0x28
    f930:	str	r5, [r4, #44]	; 0x2c
    f934:	bl	e0e4 <sfbpf__switch_to_buffer>
    f938:	mov	r0, r4
    f93c:	pop	{r4, r5, r6, r7, r8, pc}
    f940:	mov	r0, #0
    f944:	bx	lr
    f948:	mov	r0, #0
    f94c:	pop	{r4, r5, r6, r7, r8, pc}
    f950:	.word	0x0000d1fb

0000f954 <sfbpf__scan_bytes>:
    f954:	push	{r4, r5, r6, lr}
    f958:	add	r5, r1, #2
    f95c:	mov	r6, r0
    f960:	mov	r0, r5
    f964:	mov	r4, r1
    f968:	bl	e48 <malloc@plt>
    f96c:	cmp	r0, #0
    f970:	movne	r3, #0
    f974:	bne	f990 <sfbpf__scan_bytes+0x3c>
    f978:	ldr	r0, [pc, #76]	; f9cc <sfbpf__scan_bytes+0x78>
    f97c:	add	r0, pc, r0
    f980:	bl	e004 <yy_fatal_error>
    f984:	ldrb	r2, [r6, r3]
    f988:	strb	r2, [r0, r3]
    f98c:	add	r3, r3, #1
    f990:	cmp	r3, r4
    f994:	blt	f984 <sfbpf__scan_bytes+0x30>
    f998:	add	r2, r0, r4
    f99c:	mov	r3, #0
    f9a0:	strb	r3, [r2, #1]
    f9a4:	mov	r1, r5
    f9a8:	strb	r3, [r0, r4]
    f9ac:	bl	f8bc <sfbpf__scan_buffer>
    f9b0:	subs	r3, r0, #0
    f9b4:	ldreq	r0, [pc, #20]	; f9d0 <sfbpf__scan_bytes+0x7c>
    f9b8:	addeq	r0, pc, r0
    f9bc:	beq	f980 <sfbpf__scan_bytes+0x2c>
    f9c0:	mov	r2, #1
    f9c4:	str	r2, [r3, #20]
    f9c8:	pop	{r4, r5, r6, pc}
    f9cc:	.word	0x0000d1a9
    f9d0:	.word	0x0000d196

0000f9d4 <sfbpf__scan_string>:
    f9d4:	push	{r4, lr}
    f9d8:	mov	r4, r0
    f9dc:	bl	e78 <strlen@plt>
    f9e0:	mov	r1, r0
    f9e4:	mov	r0, r4
    f9e8:	pop	{r4, lr}
    f9ec:	b	f954 <sfbpf__scan_bytes>

0000f9f0 <sfbpf_get_debug>:
    f9f0:	ldr	r3, [pc, #8]	; fa00 <sfbpf_get_debug+0x10>
    f9f4:	add	r3, pc, r3
    f9f8:	ldr	r0, [r3, #48]	; 0x30
    f9fc:	bx	lr
    fa00:	.word	0x0001e148

0000fa04 <sfbpf_set_debug>:
    fa04:	ldr	r3, [pc, #8]	; fa14 <sfbpf_set_debug+0x10>
    fa08:	add	r3, pc, r3
    fa0c:	str	r0, [r3, #48]	; 0x30
    fa10:	bx	lr
    fa14:	.word	0x0001e134

0000fa18 <sfbpf_lex_destroy>:
    fa18:	push	{r4, r5, r6, r7, r8, lr}
    fa1c:	mov	r7, #0
    fa20:	ldr	r6, [pc, #100]	; fa8c <sfbpf_lex_destroy+0x74>
    fa24:	add	r6, pc, r6
    fa28:	ldr	r4, [r6, #16]
    fa2c:	cmp	r4, #0
    fa30:	beq	fa44 <sfbpf_lex_destroy+0x2c>
    fa34:	ldr	r5, [r6, #20]
    fa38:	ldr	r0, [r4, r5, lsl #2]
    fa3c:	cmp	r0, #0
    fa40:	bne	fa7c <sfbpf_lex_destroy+0x64>
    fa44:	mov	r0, r4
    fa48:	bl	dc4 <free@plt>
    fa4c:	ldr	r3, [pc, #60]	; fa90 <sfbpf_lex_destroy+0x78>
    fa50:	mov	r0, #0
    fa54:	add	r3, pc, r3
    fa58:	str	r0, [r3, #16]
    fa5c:	str	r0, [r3, #20]
    fa60:	str	r0, [r3, #36]	; 0x24
    fa64:	str	r0, [r3, #4]
    fa68:	str	r0, [r3, #40]	; 0x28
    fa6c:	str	r0, [r3]
    fa70:	str	r0, [r3, #28]
    fa74:	str	r0, [r3, #44]	; 0x2c
    fa78:	pop	{r4, r5, r6, r7, r8, pc}
    fa7c:	bl	e168 <sfbpf__delete_buffer>
    fa80:	str	r7, [r4, r5, lsl #2]
    fa84:	bl	f854 <sfbpf_pop_buffer_state>
    fa88:	b	fa28 <sfbpf_lex_destroy+0x10>
    fa8c:	.word	0x0001e118
    fa90:	.word	0x0001e0e8

0000fa94 <sfbpf_alloc>:
    fa94:	b	e48 <malloc@plt>

0000fa98 <sfbpf_realloc>:
    fa98:	b	e0c <realloc@plt>

0000fa9c <sfbpf_free>:
    fa9c:	b	dc4 <free@plt>

0000faa0 <sf_lex_init>:
    faa0:	push	{r4, lr}
    faa4:	bl	f9d4 <sfbpf__scan_string>
    faa8:	ldr	r3, [pc, #8]	; fab8 <sf_lex_init+0x18>
    faac:	add	r3, pc, r3
    fab0:	str	r0, [r3, #52]	; 0x34
    fab4:	pop	{r4, pc}
    fab8:	.word	0x0001e090

0000fabc <sf_lex_cleanup>:
    fabc:	ldr	r3, [pc, #40]	; faec <sf_lex_cleanup+0x30>
    fac0:	push	{r4, lr}
    fac4:	add	r3, pc, r3
    fac8:	ldr	r0, [r3, #52]	; 0x34
    facc:	cmp	r0, #0
    fad0:	beq	fad8 <sf_lex_cleanup+0x1c>
    fad4:	bl	e168 <sfbpf__delete_buffer>
    fad8:	ldr	r3, [pc, #16]	; faf0 <sf_lex_cleanup+0x34>
    fadc:	mov	r2, #0
    fae0:	add	r3, pc, r3
    fae4:	str	r2, [r3, #52]	; 0x34
    fae8:	pop	{r4, pc}
    faec:	.word	0x0001e078
    faf0:	.word	0x0001e05c

0000faf4 <sfbpf_wrap>:
    faf4:	mov	r0, #1
    faf8:	bx	lr

0000fafc <__udivsi3>:
    fafc:	subs	r2, r1, #1
    fb00:	bxeq	lr
    fb04:	bcc	fcdc <__udivsi3+0x1e0>
    fb08:	cmp	r0, r1
    fb0c:	bls	fcc0 <__udivsi3+0x1c4>
    fb10:	tst	r1, r2
    fb14:	beq	fccc <__udivsi3+0x1d0>
    fb18:	clz	r3, r0
    fb1c:	clz	r2, r1
    fb20:	sub	r3, r2, r3
    fb24:	rsbs	r3, r3, #31
    fb28:	addne	r3, r3, r3, lsl #1
    fb2c:	mov	r2, #0
    fb30:	addne	pc, pc, r3, lsl #2
    fb34:	nop			; (mov r0, r0)
    fb38:	cmp	r0, r1, lsl #31
    fb3c:	adc	r2, r2, r2
    fb40:	subcs	r0, r0, r1, lsl #31
    fb44:	cmp	r0, r1, lsl #30
    fb48:	adc	r2, r2, r2
    fb4c:	subcs	r0, r0, r1, lsl #30
    fb50:	cmp	r0, r1, lsl #29
    fb54:	adc	r2, r2, r2
    fb58:	subcs	r0, r0, r1, lsl #29
    fb5c:	cmp	r0, r1, lsl #28
    fb60:	adc	r2, r2, r2
    fb64:	subcs	r0, r0, r1, lsl #28
    fb68:	cmp	r0, r1, lsl #27
    fb6c:	adc	r2, r2, r2
    fb70:	subcs	r0, r0, r1, lsl #27
    fb74:	cmp	r0, r1, lsl #26
    fb78:	adc	r2, r2, r2
    fb7c:	subcs	r0, r0, r1, lsl #26
    fb80:	cmp	r0, r1, lsl #25
    fb84:	adc	r2, r2, r2
    fb88:	subcs	r0, r0, r1, lsl #25
    fb8c:	cmp	r0, r1, lsl #24
    fb90:	adc	r2, r2, r2
    fb94:	subcs	r0, r0, r1, lsl #24
    fb98:	cmp	r0, r1, lsl #23
    fb9c:	adc	r2, r2, r2
    fba0:	subcs	r0, r0, r1, lsl #23
    fba4:	cmp	r0, r1, lsl #22
    fba8:	adc	r2, r2, r2
    fbac:	subcs	r0, r0, r1, lsl #22
    fbb0:	cmp	r0, r1, lsl #21
    fbb4:	adc	r2, r2, r2
    fbb8:	subcs	r0, r0, r1, lsl #21
    fbbc:	cmp	r0, r1, lsl #20
    fbc0:	adc	r2, r2, r2
    fbc4:	subcs	r0, r0, r1, lsl #20
    fbc8:	cmp	r0, r1, lsl #19
    fbcc:	adc	r2, r2, r2
    fbd0:	subcs	r0, r0, r1, lsl #19
    fbd4:	cmp	r0, r1, lsl #18
    fbd8:	adc	r2, r2, r2
    fbdc:	subcs	r0, r0, r1, lsl #18
    fbe0:	cmp	r0, r1, lsl #17
    fbe4:	adc	r2, r2, r2
    fbe8:	subcs	r0, r0, r1, lsl #17
    fbec:	cmp	r0, r1, lsl #16
    fbf0:	adc	r2, r2, r2
    fbf4:	subcs	r0, r0, r1, lsl #16
    fbf8:	cmp	r0, r1, lsl #15
    fbfc:	adc	r2, r2, r2
    fc00:	subcs	r0, r0, r1, lsl #15
    fc04:	cmp	r0, r1, lsl #14
    fc08:	adc	r2, r2, r2
    fc0c:	subcs	r0, r0, r1, lsl #14
    fc10:	cmp	r0, r1, lsl #13
    fc14:	adc	r2, r2, r2
    fc18:	subcs	r0, r0, r1, lsl #13
    fc1c:	cmp	r0, r1, lsl #12
    fc20:	adc	r2, r2, r2
    fc24:	subcs	r0, r0, r1, lsl #12
    fc28:	cmp	r0, r1, lsl #11
    fc2c:	adc	r2, r2, r2
    fc30:	subcs	r0, r0, r1, lsl #11
    fc34:	cmp	r0, r1, lsl #10
    fc38:	adc	r2, r2, r2
    fc3c:	subcs	r0, r0, r1, lsl #10
    fc40:	cmp	r0, r1, lsl #9
    fc44:	adc	r2, r2, r2
    fc48:	subcs	r0, r0, r1, lsl #9
    fc4c:	cmp	r0, r1, lsl #8
    fc50:	adc	r2, r2, r2
    fc54:	subcs	r0, r0, r1, lsl #8
    fc58:	cmp	r0, r1, lsl #7
    fc5c:	adc	r2, r2, r2
    fc60:	subcs	r0, r0, r1, lsl #7
    fc64:	cmp	r0, r1, lsl #6
    fc68:	adc	r2, r2, r2
    fc6c:	subcs	r0, r0, r1, lsl #6
    fc70:	cmp	r0, r1, lsl #5
    fc74:	adc	r2, r2, r2
    fc78:	subcs	r0, r0, r1, lsl #5
    fc7c:	cmp	r0, r1, lsl #4
    fc80:	adc	r2, r2, r2
    fc84:	subcs	r0, r0, r1, lsl #4
    fc88:	cmp	r0, r1, lsl #3
    fc8c:	adc	r2, r2, r2
    fc90:	subcs	r0, r0, r1, lsl #3
    fc94:	cmp	r0, r1, lsl #2
    fc98:	adc	r2, r2, r2
    fc9c:	subcs	r0, r0, r1, lsl #2
    fca0:	cmp	r0, r1, lsl #1
    fca4:	adc	r2, r2, r2
    fca8:	subcs	r0, r0, r1, lsl #1
    fcac:	cmp	r0, r1
    fcb0:	adc	r2, r2, r2
    fcb4:	subcs	r0, r0, r1
    fcb8:	mov	r0, r2
    fcbc:	bx	lr
    fcc0:	moveq	r0, #1
    fcc4:	movne	r0, #0
    fcc8:	bx	lr
    fccc:	clz	r2, r1
    fcd0:	rsb	r2, r2, #31
    fcd4:	lsr	r0, r0, r2
    fcd8:	bx	lr
    fcdc:	cmp	r0, #0
    fce0:	mvnne	r0, #0
    fce4:	b	fd08 <__aeabi_idiv0>

0000fce8 <__aeabi_uidivmod>:
    fce8:	cmp	r1, #0
    fcec:	beq	fcdc <__udivsi3+0x1e0>
    fcf0:	push	{r0, r1, lr}
    fcf4:	bl	fafc <__udivsi3>
    fcf8:	pop	{r1, r2, lr}
    fcfc:	mul	r3, r2, r0
    fd00:	sub	r1, r1, r3
    fd04:	bx	lr

0000fd08 <__aeabi_idiv0>:
    fd08:	push	{r1, lr}
    fd0c:	mov	r0, #8
    fd10:	bl	d64 <raise@plt>
    fd14:	pop	{r1, pc}

Disassembly of section .fini:

0000fd18 <_fini>:
    fd18:	push	{r3, lr}
    fd1c:	pop	{r3, pc}
