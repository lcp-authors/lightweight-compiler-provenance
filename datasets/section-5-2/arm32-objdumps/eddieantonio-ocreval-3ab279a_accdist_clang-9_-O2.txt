
../repos/eddieantonio-ocreval-3ab279a/accdist/accdist:     file format elf32-littlearm


Disassembly of section .init:

000109e8 <.init>:
   109e8:	push	{r3, lr}
   109ec:	bl	10bc4 <getc@plt+0x48>
   109f0:	pop	{r3, pc}

Disassembly of section .plt:

000109f4 <calloc@plt-0x14>:
   109f4:	push	{lr}		; (str lr, [sp, #-4]!)
   109f8:	ldr	lr, [pc, #4]	; 10a04 <calloc@plt-0x4>
   109fc:	add	lr, pc, lr
   10a00:	ldr	pc, [lr, #8]!
   10a04:	strdeq	r4, [r1], -ip

00010a08 <calloc@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #20, 20	; 0x14000
   10a10:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a14 <strcmp@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #20, 20	; 0x14000
   10a1c:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a20 <fopen@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #20, 20	; 0x14000
   10a28:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a2c <free@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #20, 20	; 0x14000
   10a34:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a38 <utf8proc_get_property@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #20, 20	; 0x14000
   10a40:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a44 <fgets@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #20, 20	; 0x14000
   10a4c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a50 <utf8proc_encode_char@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #20, 20	; 0x14000
   10a58:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a5c <strdup@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #20, 20	; 0x14000
   10a64:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a68 <rewind@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #20, 20	; 0x14000
   10a70:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a74 <unlink@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #20, 20	; 0x14000
   10a7c:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a80 <utf8proc_tolower@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #20, 20	; 0x14000
   10a88:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a8c <__xstat@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #20, 20	; 0x14000
   10a94:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a98 <fwrite@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #20, 20	; 0x14000
   10aa0:	ldr	pc, [ip, #1436]!	; 0x59c

00010aa4 <fread@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #20, 20	; 0x14000
   10aac:	ldr	pc, [ip, #1428]!	; 0x594

00010ab0 <utf8proc_iterate@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #20, 20	; 0x14000
   10ab8:	ldr	pc, [ip, #1420]!	; 0x58c

00010abc <__libc_start_main@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #20, 20	; 0x14000
   10ac4:	ldr	pc, [ip, #1412]!	; 0x584

00010ac8 <__sysv_signal@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #20, 20	; 0x14000
   10ad0:	ldr	pc, [ip, #1404]!	; 0x57c

00010ad4 <__gmon_start__@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #20, 20	; 0x14000
   10adc:	ldr	pc, [ip, #1396]!	; 0x574

00010ae0 <getpid@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #20, 20	; 0x14000
   10ae8:	ldr	pc, [ip, #1388]!	; 0x56c

00010aec <exit@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #20, 20	; 0x14000
   10af4:	ldr	pc, [ip, #1380]!	; 0x564

00010af8 <bcmp@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #20, 20	; 0x14000
   10b00:	ldr	pc, [ip, #1372]!	; 0x55c

00010b04 <utf8proc_category@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #20, 20	; 0x14000
   10b0c:	ldr	pc, [ip, #1364]!	; 0x554

00010b10 <strlen@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #20, 20	; 0x14000
   10b18:	ldr	pc, [ip, #1356]!	; 0x54c

00010b1c <fprintf@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #20, 20	; 0x14000
   10b24:	ldr	pc, [ip, #1348]!	; 0x544

00010b28 <__isoc99_sscanf@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #20, 20	; 0x14000
   10b30:	ldr	pc, [ip, #1340]!	; 0x53c

00010b34 <fclose@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #20, 20	; 0x14000
   10b3c:	ldr	pc, [ip, #1332]!	; 0x534

00010b40 <sprintf@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #20, 20	; 0x14000
   10b48:	ldr	pc, [ip, #1324]!	; 0x52c

00010b4c <utf8proc_errmsg@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #20, 20	; 0x14000
   10b54:	ldr	pc, [ip, #1316]!	; 0x524

00010b58 <fputs@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #20, 20	; 0x14000
   10b60:	ldr	pc, [ip, #1308]!	; 0x51c

00010b64 <strncmp@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #20, 20	; 0x14000
   10b6c:	ldr	pc, [ip, #1300]!	; 0x514

00010b70 <abort@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #20, 20	; 0x14000
   10b78:	ldr	pc, [ip, #1292]!	; 0x50c

00010b7c <getc@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #20, 20	; 0x14000
   10b84:	ldr	pc, [ip, #1284]!	; 0x504

Disassembly of section .text:

00010b88 <error@@Base-0x1ec0>:
   10b88:	mov	fp, #0
   10b8c:	mov	lr, #0
   10b90:	pop	{r1}		; (ldr r1, [sp], #4)
   10b94:	mov	r2, sp
   10b98:	push	{r2}		; (str r2, [sp, #-4]!)
   10b9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10ba0:	ldr	ip, [pc, #16]	; 10bb8 <getc@plt+0x3c>
   10ba4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ba8:	ldr	r0, [pc, #12]	; 10bbc <getc@plt+0x40>
   10bac:	ldr	r3, [pc, #12]	; 10bc0 <getc@plt+0x44>
   10bb0:	bl	10abc <__libc_start_main@plt>
   10bb4:	bl	10b70 <abort@plt>
   10bb8:	andeq	r3, r1, r8, lsr #12
   10bbc:			; <UNDEFINED> instruction: 0x00010cbc
   10bc0:	andeq	r3, r1, r8, asr #11
   10bc4:	ldr	r3, [pc, #20]	; 10be0 <getc@plt+0x64>
   10bc8:	ldr	r2, [pc, #20]	; 10be4 <getc@plt+0x68>
   10bcc:	add	r3, pc, r3
   10bd0:	ldr	r2, [r3, r2]
   10bd4:	cmp	r2, #0
   10bd8:	bxeq	lr
   10bdc:	b	10ad4 <__gmon_start__@plt>
   10be0:	andeq	r4, r1, ip, lsr #8
   10be4:	muleq	r0, ip, r0
   10be8:	ldr	r0, [pc, #24]	; 10c08 <getc@plt+0x8c>
   10bec:	ldr	r3, [pc, #24]	; 10c0c <getc@plt+0x90>
   10bf0:	cmp	r3, r0
   10bf4:	bxeq	lr
   10bf8:	ldr	r3, [pc, #16]	; 10c10 <getc@plt+0x94>
   10bfc:	cmp	r3, #0
   10c00:	bxeq	lr
   10c04:	bx	r3
   10c08:	andeq	r5, r2, ip, asr #1
   10c0c:	andeq	r5, r2, ip, asr #1
   10c10:	andeq	r0, r0, r0
   10c14:	ldr	r0, [pc, #36]	; 10c40 <getc@plt+0xc4>
   10c18:	ldr	r1, [pc, #36]	; 10c44 <getc@plt+0xc8>
   10c1c:	sub	r1, r1, r0
   10c20:	asr	r1, r1, #2
   10c24:	add	r1, r1, r1, lsr #31
   10c28:	asrs	r1, r1, #1
   10c2c:	bxeq	lr
   10c30:	ldr	r3, [pc, #16]	; 10c48 <getc@plt+0xcc>
   10c34:	cmp	r3, #0
   10c38:	bxeq	lr
   10c3c:	bx	r3
   10c40:	andeq	r5, r2, ip, asr #1
   10c44:	andeq	r5, r2, ip, asr #1
   10c48:	andeq	r0, r0, r0
   10c4c:	push	{r4, lr}
   10c50:	ldr	r4, [pc, #24]	; 10c70 <getc@plt+0xf4>
   10c54:	ldrb	r3, [r4]
   10c58:	cmp	r3, #0
   10c5c:	popne	{r4, pc}
   10c60:	bl	10be8 <getc@plt+0x6c>
   10c64:	mov	r3, #1
   10c68:	strb	r3, [r4]
   10c6c:	pop	{r4, pc}
   10c70:	andeq	r5, r2, ip, asr #1
   10c74:	b	10c14 <getc@plt+0x98>
   10c78:	push	{r4, r5, r6, sl, fp, lr}
   10c7c:	add	fp, sp, #16
   10c80:	ldr	r4, [pc, #44]	; 10cb4 <getc@plt+0x138>
   10c84:	mov	r1, r0
   10c88:	ldr	r4, [pc, r4]
   10c8c:	ldm	r4, {r5, r6}
   10c90:	mov	r0, r4
   10c94:	bl	10e54 <getc@plt+0x2d8>
   10c98:	ldm	r4, {r0, r2}
   10c9c:	sub	r2, r2, r6
   10ca0:	sub	r1, r0, r5
   10ca4:	ldr	r0, [pc, #12]	; 10cb8 <getc@plt+0x13c>
   10ca8:	ldr	r0, [pc, r0]
   10cac:	pop	{r4, r5, r6, sl, fp, lr}
   10cb0:	b	11e50 <getc@plt+0x12d4>
   10cb4:	andeq	r4, r1, r0, lsl #8
   10cb8:	andeq	r4, r1, r0, lsl #8
   10cbc:	push	{fp, lr}
   10cc0:	mov	fp, sp
   10cc4:	sub	sp, sp, #8
   10cc8:	str	r0, [sp, #4]
   10ccc:	add	r0, sp, #4
   10cd0:	mov	r3, #0
   10cd4:	mov	r9, r1
   10cd8:	mov	r7, #0
   10cdc:	ldr	r2, [pc, #108]	; 10d50 <getc@plt+0x1d4>
   10ce0:	add	r2, pc, r2
   10ce4:	bl	127c0 <getc@plt+0x1c44>
   10ce8:	ldr	r0, [sp, #4]
   10cec:	cmp	r0, #1
   10cf0:	blt	10d3c <getc@plt+0x1c0>
   10cf4:	ldr	r5, [pc, #88]	; 10d54 <getc@plt+0x1d8>
   10cf8:	ldr	r5, [pc, r5]
   10cfc:	ldr	r8, [pc, #84]	; 10d58 <getc@plt+0x1dc>
   10d00:	ldr	r8, [pc, r8]
   10d04:	ldr	r1, [r9, r7, lsl #2]
   10d08:	ldr	r6, [r5]
   10d0c:	ldr	r4, [r5, #4]
   10d10:	mov	r0, r5
   10d14:	bl	10e54 <getc@plt+0x2d8>
   10d18:	ldm	r5, {r0, r2}
   10d1c:	sub	r2, r2, r4
   10d20:	sub	r1, r0, r6
   10d24:	mov	r0, r8
   10d28:	bl	11e50 <getc@plt+0x12d4>
   10d2c:	ldr	r0, [sp, #4]
   10d30:	add	r7, r7, #1
   10d34:	cmp	r7, r0
   10d38:	blt	10d04 <getc@plt+0x188>
   10d3c:	ldr	r0, [pc, #24]	; 10d5c <getc@plt+0x1e0>
   10d40:	mov	r1, #0
   10d44:	ldr	r0, [pc, r0]
   10d48:	bl	11ed8 <getc@plt+0x135c>
   10d4c:	bl	12a04 <getc@plt+0x1e88>
   10d50:	andeq	r2, r0, r0, asr r9
   10d54:	muleq	r1, r0, r3
   10d58:	andeq	r4, r1, r8, lsr #7
   10d5c:	andeq	r4, r1, r4, ror #6
   10d60:	push	{r4, r5, r6, r7, fp, lr}
   10d64:	add	fp, sp, #16
   10d68:	mov	r7, r0
   10d6c:	mov	r0, r1
   10d70:	mov	r4, r3
   10d74:	mov	r5, r2
   10d78:	mov	r6, r1
   10d7c:	bl	12244 <getc@plt+0x16c8>
   10d80:	add	r0, r7, r0, lsl #3
   10d84:	ldr	r1, [r0, #68]	; 0x44
   10d88:	ldr	r2, [r0, #72]	; 0x48
   10d8c:	add	r1, r1, r5
   10d90:	add	r2, r2, r4
   10d94:	str	r1, [r0, #68]	; 0x44
   10d98:	str	r2, [r0, #72]	; 0x48
   10d9c:	ldr	r0, [r7, #2116]	; 0x844
   10da0:	ldr	r1, [r7, #2120]	; 0x848
   10da4:	add	r0, r0, r5
   10da8:	add	r1, r1, r4
   10dac:	str	r0, [r7, #2116]	; 0x844
   10db0:	add	r0, r7, r6, lsl #3
   10db4:	str	r1, [r7, #2120]	; 0x848
   10db8:	movw	r1, #10180	; 0x27c4
   10dbc:	ldr	r1, [r0, r1]!
   10dc0:	add	r1, r1, r5
   10dc4:	str	r1, [r0]
   10dc8:	ldr	r1, [r0, #4]
   10dcc:	add	r1, r1, r4
   10dd0:	str	r1, [r0, #4]
   10dd4:	pop	{r4, r5, r6, r7, fp, pc}
   10dd8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10ddc:	add	fp, sp, #24
   10de0:	mov	r7, r1
   10de4:	movw	r1, #2124	; 0x84c
   10de8:	mov	r8, r3
   10dec:	mov	r5, r2
   10df0:	add	r6, r0, r1
   10df4:	mov	r1, r7
   10df8:	mov	r0, r6
   10dfc:	bl	11fcc <getc@plt+0x1450>
   10e00:	cmp	r0, #0
   10e04:	beq	10e24 <getc@plt+0x2a8>
   10e08:	ldr	r1, [r0, #12]
   10e0c:	ldr	r2, [r0, #16]
   10e10:	add	r1, r1, r5
   10e14:	add	r2, r2, r8
   10e18:	str	r1, [r0, #12]
   10e1c:	str	r2, [r0, #16]
   10e20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10e24:	mov	r0, #1
   10e28:	mov	r1, #20
   10e2c:	bl	12578 <getc@plt+0x19fc>
   10e30:	mov	r4, r0
   10e34:	mov	r0, r7
   10e38:	bl	10a5c <strdup@plt>
   10e3c:	add	r1, r4, #8
   10e40:	stm	r1, {r0, r5, r8}
   10e44:	mov	r0, r6
   10e48:	mov	r1, r4
   10e4c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10e50:	b	1205c <getc@plt+0x14e0>
   10e54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e58:	add	fp, sp, #28
   10e5c:	sub	sp, sp, #76	; 0x4c
   10e60:	bfc	sp, #0, #4
   10e64:	mov	r2, r1
   10e68:	ldr	r1, [pc, #1680]	; 11500 <getc@plt+0x984>
   10e6c:	mov	r4, r0
   10e70:	mov	r0, r2
   10e74:	str	r2, [sp, #28]
   10e78:	add	r1, pc, r1
   10e7c:	bl	12620 <getc@plt+0x1aa4>
   10e80:	mov	r7, r0
   10e84:	ldr	r0, [pc, #1656]	; 11504 <getc@plt+0x988>
   10e88:	mov	r1, #99	; 0x63
   10e8c:	mov	r2, r7
   10e90:	add	r0, pc, r0
   10e94:	bl	10a44 <fgets@plt>
   10e98:	cmp	r0, #0
   10e9c:	beq	114e0 <getc@plt+0x964>
   10ea0:	ldr	r0, [pc, #1632]	; 11508 <getc@plt+0x98c>
   10ea4:	ldr	r1, [pc, #1632]	; 1150c <getc@plt+0x990>
   10ea8:	mov	r2, #40	; 0x28
   10eac:	add	r0, pc, r0
   10eb0:	add	r1, pc, r1
   10eb4:	bl	10af8 <bcmp@plt>
   10eb8:	cmp	r0, #0
   10ebc:	bne	114e0 <getc@plt+0x964>
   10ec0:	ldr	r0, [pc, #1608]	; 11510 <getc@plt+0x994>
   10ec4:	mov	r1, #99	; 0x63
   10ec8:	mov	r2, r7
   10ecc:	add	r0, pc, r0
   10ed0:	bl	10a44 <fgets@plt>
   10ed4:	cmp	r0, #0
   10ed8:	beq	114e0 <getc@plt+0x964>
   10edc:	ldr	r0, [pc, #1584]	; 11514 <getc@plt+0x998>
   10ee0:	ldr	r1, [pc, #1584]	; 11518 <getc@plt+0x99c>
   10ee4:	mov	r2, #43	; 0x2b
   10ee8:	add	r0, pc, r0
   10eec:	add	r1, pc, r1
   10ef0:	bl	10af8 <bcmp@plt>
   10ef4:	cmp	r0, #0
   10ef8:	bne	114e0 <getc@plt+0x964>
   10efc:	ldr	r0, [pc, #1560]	; 1151c <getc@plt+0x9a0>
   10f00:	mov	r1, #99	; 0x63
   10f04:	mov	r2, r7
   10f08:	add	r0, pc, r0
   10f0c:	bl	10a44 <fgets@plt>
   10f10:	cmp	r0, #0
   10f14:	beq	114e0 <getc@plt+0x964>
   10f18:	ldr	r0, [pc, #1536]	; 11520 <getc@plt+0x9a4>
   10f1c:	ldr	r1, [pc, #1536]	; 11524 <getc@plt+0x9a8>
   10f20:	add	r2, sp, #44	; 0x2c
   10f24:	add	r0, pc, r0
   10f28:	add	r1, pc, r1
   10f2c:	bl	10b28 <__isoc99_sscanf@plt>
   10f30:	cmp	r0, #1
   10f34:	bne	114e0 <getc@plt+0x964>
   10f38:	ldr	r0, [r4]
   10f3c:	ldr	r1, [sp, #44]	; 0x2c
   10f40:	mov	r2, r7
   10f44:	add	r0, r0, r1
   10f48:	mov	r1, #99	; 0x63
   10f4c:	str	r0, [r4]
   10f50:	ldr	r0, [pc, #1488]	; 11528 <getc@plt+0x9ac>
   10f54:	add	r0, pc, r0
   10f58:	bl	10a44 <fgets@plt>
   10f5c:	cmp	r0, #0
   10f60:	beq	114e0 <getc@plt+0x964>
   10f64:	ldr	r0, [pc, #1472]	; 1152c <getc@plt+0x9b0>
   10f68:	ldr	r1, [pc, #1472]	; 11530 <getc@plt+0x9b4>
   10f6c:	add	r2, sp, #40	; 0x28
   10f70:	add	r0, pc, r0
   10f74:	add	r1, pc, r1
   10f78:	bl	10b28 <__isoc99_sscanf@plt>
   10f7c:	cmp	r0, #1
   10f80:	bne	114e0 <getc@plt+0x964>
   10f84:	ldr	r0, [r4, #4]
   10f88:	ldr	r1, [sp, #40]	; 0x28
   10f8c:	mov	r2, r7
   10f90:	add	r0, r0, r1
   10f94:	mov	r1, #99	; 0x63
   10f98:	str	r0, [r4, #4]
   10f9c:	ldr	r0, [pc, #1424]	; 11534 <getc@plt+0x9b8>
   10fa0:	add	r0, pc, r0
   10fa4:	bl	10a44 <fgets@plt>
   10fa8:	cmp	r0, #0
   10fac:	beq	114e0 <getc@plt+0x964>
   10fb0:	ldr	r0, [pc, #1408]	; 11538 <getc@plt+0x9bc>
   10fb4:	mov	r1, #99	; 0x63
   10fb8:	mov	r2, r7
   10fbc:	add	r0, pc, r0
   10fc0:	bl	10a44 <fgets@plt>
   10fc4:	cmp	r0, #0
   10fc8:	beq	114e0 <getc@plt+0x964>
   10fcc:	ldr	r0, [pc, #1384]	; 1153c <getc@plt+0x9c0>
   10fd0:	mov	r1, #99	; 0x63
   10fd4:	mov	r2, r7
   10fd8:	add	r0, pc, r0
   10fdc:	bl	10a44 <fgets@plt>
   10fe0:	cmp	r0, #0
   10fe4:	beq	114e0 <getc@plt+0x964>
   10fe8:	ldr	r0, [pc, #1360]	; 11540 <getc@plt+0x9c4>
   10fec:	ldr	r1, [pc, #1360]	; 11544 <getc@plt+0x9c8>
   10ff0:	add	r2, sp, #36	; 0x24
   10ff4:	add	r0, pc, r0
   10ff8:	add	r1, pc, r1
   10ffc:	bl	10b28 <__isoc99_sscanf@plt>
   11000:	cmp	r0, #1
   11004:	bne	114e0 <getc@plt+0x964>
   11008:	ldr	r0, [r4, #8]
   1100c:	ldr	r1, [sp, #36]	; 0x24
   11010:	mov	r2, r7
   11014:	add	r0, r0, r1
   11018:	mov	r1, #99	; 0x63
   1101c:	str	r0, [r4, #8]
   11020:	ldr	r0, [pc, #1312]	; 11548 <getc@plt+0x9cc>
   11024:	add	r0, pc, r0
   11028:	bl	10a44 <fgets@plt>
   1102c:	cmp	r0, #0
   11030:	beq	114e0 <getc@plt+0x964>
   11034:	ldr	r0, [pc, #1296]	; 1154c <getc@plt+0x9d0>
   11038:	ldr	r1, [pc, #1296]	; 11550 <getc@plt+0x9d4>
   1103c:	add	r2, sp, #36	; 0x24
   11040:	add	r0, pc, r0
   11044:	add	r1, pc, r1
   11048:	bl	10b28 <__isoc99_sscanf@plt>
   1104c:	cmp	r0, #1
   11050:	bne	114e0 <getc@plt+0x964>
   11054:	ldr	r0, [r4, #12]
   11058:	ldr	r1, [sp, #36]	; 0x24
   1105c:	mov	r2, r7
   11060:	add	r0, r0, r1
   11064:	mov	r1, #99	; 0x63
   11068:	str	r0, [r4, #12]
   1106c:	ldr	r0, [pc, #1248]	; 11554 <getc@plt+0x9d8>
   11070:	add	r0, pc, r0
   11074:	bl	10a44 <fgets@plt>
   11078:	cmp	r0, #0
   1107c:	beq	114e0 <getc@plt+0x964>
   11080:	ldr	r0, [pc, #1232]	; 11558 <getc@plt+0x9dc>
   11084:	ldr	r1, [pc, #1232]	; 1155c <getc@plt+0x9e0>
   11088:	add	r2, sp, #36	; 0x24
   1108c:	add	r0, pc, r0
   11090:	add	r1, pc, r1
   11094:	bl	10b28 <__isoc99_sscanf@plt>
   11098:	cmp	r0, #1
   1109c:	bne	114e0 <getc@plt+0x964>
   110a0:	ldr	r0, [r4, #16]
   110a4:	ldr	r1, [sp, #36]	; 0x24
   110a8:	mov	r2, r7
   110ac:	add	r0, r0, r1
   110b0:	mov	r1, #99	; 0x63
   110b4:	str	r0, [r4, #16]
   110b8:	ldr	r0, [pc, #1184]	; 11560 <getc@plt+0x9e4>
   110bc:	add	r0, pc, r0
   110c0:	bl	10a44 <fgets@plt>
   110c4:	cmp	r0, #0
   110c8:	beq	114e0 <getc@plt+0x964>
   110cc:	ldr	r0, [pc, #1168]	; 11564 <getc@plt+0x9e8>
   110d0:	mov	r1, #99	; 0x63
   110d4:	mov	r2, r7
   110d8:	add	r0, pc, r0
   110dc:	bl	10a44 <fgets@plt>
   110e0:	cmp	r0, #0
   110e4:	beq	114e0 <getc@plt+0x964>
   110e8:	ldr	r0, [pc, #1144]	; 11568 <getc@plt+0x9ec>
   110ec:	mov	r1, #99	; 0x63
   110f0:	mov	r2, r7
   110f4:	add	r0, pc, r0
   110f8:	bl	10a44 <fgets@plt>
   110fc:	cmp	r0, #0
   11100:	beq	114e0 <getc@plt+0x964>
   11104:	ldr	r0, [pc, #1120]	; 1156c <getc@plt+0x9f0>
   11108:	mov	r1, #99	; 0x63
   1110c:	mov	r2, r7
   11110:	add	r0, pc, r0
   11114:	bl	10a44 <fgets@plt>
   11118:	cmp	r0, #0
   1111c:	beq	114e0 <getc@plt+0x964>
   11120:	ldr	r0, [pc, #1096]	; 11570 <getc@plt+0x9f4>
   11124:	mov	r1, #99	; 0x63
   11128:	mov	r2, r7
   1112c:	add	r0, pc, r0
   11130:	bl	10a44 <fgets@plt>
   11134:	cmp	r0, #0
   11138:	beq	114e0 <getc@plt+0x964>
   1113c:	add	r5, sp, #48	; 0x30
   11140:	orr	r6, r5, #8
   11144:	orr	r9, r5, #12
   11148:	orr	sl, r5, #4
   1114c:	mov	r2, r5
   11150:	stm	sp, {r6, r9}
   11154:	mov	r3, sl
   11158:	ldr	r0, [pc, #1044]	; 11574 <getc@plt+0x9f8>
   1115c:	ldr	r1, [pc, #1044]	; 11578 <getc@plt+0x9fc>
   11160:	add	r0, pc, r0
   11164:	add	r1, pc, r1
   11168:	bl	10b28 <__isoc99_sscanf@plt>
   1116c:	cmp	r0, #4
   11170:	bne	114e0 <getc@plt+0x964>
   11174:	add	r8, r4, #20
   11178:	vld1.64	{d16-d17}, [r5 :128]
   1117c:	mov	r1, #99	; 0x63
   11180:	mov	r2, r7
   11184:	vld1.32	{d18-d19}, [r8]
   11188:	vadd.i32	q8, q9, q8
   1118c:	vst1.32	{d16-d17}, [r8]
   11190:	ldr	r0, [pc, #996]	; 1157c <getc@plt+0xa00>
   11194:	add	r0, pc, r0
   11198:	bl	10a44 <fgets@plt>
   1119c:	cmp	r0, #0
   111a0:	beq	114e0 <getc@plt+0x964>
   111a4:	stm	sp, {r6, r9}
   111a8:	mov	r2, r5
   111ac:	mov	r3, sl
   111b0:	ldr	r0, [pc, #968]	; 11580 <getc@plt+0xa04>
   111b4:	ldr	r1, [pc, #968]	; 11584 <getc@plt+0xa08>
   111b8:	add	r0, pc, r0
   111bc:	add	r1, pc, r1
   111c0:	bl	10b28 <__isoc99_sscanf@plt>
   111c4:	cmp	r0, #4
   111c8:	bne	114e0 <getc@plt+0x964>
   111cc:	add	r0, r8, #16
   111d0:	vld1.64	{d16-d17}, [r5 :128]
   111d4:	mov	r1, #99	; 0x63
   111d8:	mov	r2, r7
   111dc:	vld1.32	{d18-d19}, [r0]
   111e0:	vadd.i32	q8, q9, q8
   111e4:	vst1.32	{d16-d17}, [r0]
   111e8:	ldr	r0, [pc, #920]	; 11588 <getc@plt+0xa0c>
   111ec:	add	r0, pc, r0
   111f0:	bl	10a44 <fgets@plt>
   111f4:	cmp	r0, #0
   111f8:	beq	114e0 <getc@plt+0x964>
   111fc:	stm	sp, {r6, r9}
   11200:	mov	r2, r5
   11204:	mov	r3, sl
   11208:	ldr	r0, [pc, #892]	; 1158c <getc@plt+0xa10>
   1120c:	ldr	r1, [pc, #892]	; 11590 <getc@plt+0xa14>
   11210:	add	r0, pc, r0
   11214:	add	r1, pc, r1
   11218:	bl	10b28 <__isoc99_sscanf@plt>
   1121c:	cmp	r0, #4
   11220:	bne	114e0 <getc@plt+0x964>
   11224:	add	r0, r8, #32
   11228:	vld1.64	{d16-d17}, [r5 :128]
   1122c:	mov	r1, #99	; 0x63
   11230:	mov	r2, r7
   11234:	vld1.32	{d18-d19}, [r0]
   11238:	vadd.i32	q8, q9, q8
   1123c:	vst1.32	{d16-d17}, [r0]
   11240:	ldr	r6, [pc, #844]	; 11594 <getc@plt+0xa18>
   11244:	add	r6, pc, r6
   11248:	mov	r0, r6
   1124c:	bl	10a44 <fgets@plt>
   11250:	cmp	r0, #0
   11254:	beq	114e0 <getc@plt+0x964>
   11258:	str	r4, [sp, #20]
   1125c:	mov	r0, r6
   11260:	mov	r1, #99	; 0x63
   11264:	mov	r2, r7
   11268:	bl	10a44 <fgets@plt>
   1126c:	cmp	r0, #0
   11270:	ldrbne	r0, [r6]
   11274:	cmpne	r0, #10
   11278:	bne	1125c <getc@plt+0x6e0>
   1127c:	ldr	r0, [sp, #40]	; 0x28
   11280:	cmp	r0, #1
   11284:	blt	11398 <getc@plt+0x81c>
   11288:	ldr	r0, [pc, #776]	; 11598 <getc@plt+0xa1c>
   1128c:	mov	r1, #99	; 0x63
   11290:	mov	r2, r7
   11294:	add	r0, pc, r0
   11298:	bl	10a44 <fgets@plt>
   1129c:	cmp	r0, #0
   112a0:	beq	11398 <getc@plt+0x81c>
   112a4:	ldr	r4, [pc, #752]	; 1159c <getc@plt+0xa20>
   112a8:	mov	r1, #99	; 0x63
   112ac:	mov	r2, r7
   112b0:	add	r4, pc, r4
   112b4:	mov	r0, r4
   112b8:	bl	10a44 <fgets@plt>
   112bc:	cmp	r0, #0
   112c0:	beq	11398 <getc@plt+0x81c>
   112c4:	ldr	r1, [sp, #20]
   112c8:	movw	r0, #2124	; 0x84c
   112cc:	add	r8, sp, #36	; 0x24
   112d0:	add	r0, r1, r0
   112d4:	str	r0, [sp, #28]
   112d8:	add	r0, r4, #20
   112dc:	ldr	r9, [pc, #700]	; 115a0 <getc@plt+0xa24>
   112e0:	str	r0, [sp, #24]
   112e4:	ldr	r5, [sp, #24]
   112e8:	add	r9, pc, r9
   112ec:	b	11344 <getc@plt+0x7c8>
   112f0:	mov	r0, #1
   112f4:	mov	r1, #20
   112f8:	bl	12578 <getc@plt+0x19fc>
   112fc:	mov	r4, r9
   11300:	mov	r9, r0
   11304:	mov	r0, r5
   11308:	bl	10a5c <strdup@plt>
   1130c:	add	r1, r9, #8
   11310:	stm	r1, {r0, r6, sl}
   11314:	mov	r1, r9
   11318:	mov	r9, r4
   1131c:	ldr	r0, [sp, #28]
   11320:	ldr	r4, [pc, #636]	; 115a4 <getc@plt+0xa28>
   11324:	add	r4, pc, r4
   11328:	bl	1205c <getc@plt+0x14e0>
   1132c:	mov	r0, r4
   11330:	mov	r1, #99	; 0x63
   11334:	mov	r2, r7
   11338:	bl	10a44 <fgets@plt>
   1133c:	cmp	r0, #0
   11340:	beq	11398 <getc@plt+0x81c>
   11344:	mov	r0, r4
   11348:	mov	r1, r9
   1134c:	mov	r2, r8
   11350:	add	r3, sp, #48	; 0x30
   11354:	bl	10b28 <__isoc99_sscanf@plt>
   11358:	cmp	r0, #2
   1135c:	bne	11398 <getc@plt+0x81c>
   11360:	ldr	r0, [sp, #28]
   11364:	ldr	sl, [sp, #48]	; 0x30
   11368:	ldr	r6, [sp, #36]	; 0x24
   1136c:	mov	r1, r5
   11370:	bl	11fcc <getc@plt+0x1450>
   11374:	cmp	r0, #0
   11378:	beq	112f0 <getc@plt+0x774>
   1137c:	ldr	r1, [r0, #12]
   11380:	ldr	r2, [r0, #16]
   11384:	add	r1, r1, r6
   11388:	add	r2, r2, sl
   1138c:	str	r1, [r0, #12]
   11390:	str	r2, [r0, #16]
   11394:	b	1132c <getc@plt+0x7b0>
   11398:	ldr	r0, [sp, #44]	; 0x2c
   1139c:	ldr	r4, [sp, #20]
   113a0:	cmp	r0, #1
   113a4:	blt	114d0 <getc@plt+0x954>
   113a8:	ldr	r0, [pc, #504]	; 115a8 <getc@plt+0xa2c>
   113ac:	mov	r1, #99	; 0x63
   113b0:	mov	r2, r7
   113b4:	add	r0, pc, r0
   113b8:	bl	10a44 <fgets@plt>
   113bc:	cmp	r0, #0
   113c0:	beq	114d0 <getc@plt+0x954>
   113c4:	ldr	r6, [pc, #480]	; 115ac <getc@plt+0xa30>
   113c8:	mov	r1, #99	; 0x63
   113cc:	mov	r2, r7
   113d0:	add	r6, pc, r6
   113d4:	mov	r0, r6
   113d8:	bl	10a44 <fgets@plt>
   113dc:	cmp	r0, #0
   113e0:	beq	114d0 <getc@plt+0x954>
   113e4:	add	r5, sp, #48	; 0x30
   113e8:	add	r0, r6, #31
   113ec:	str	r0, [sp, #28]
   113f0:	b	11478 <getc@plt+0x8fc>
   113f4:	mov	sl, #10
   113f8:	str	sl, [sp, #32]
   113fc:	ldr	r8, [sp, #48]	; 0x30
   11400:	ldr	r9, [sp, #36]	; 0x24
   11404:	mov	r0, sl
   11408:	bl	12244 <getc@plt+0x16c8>
   1140c:	add	r0, r4, r0, lsl #3
   11410:	ldr	r1, [r0, #68]	; 0x44
   11414:	ldr	r2, [r0, #72]	; 0x48
   11418:	add	r1, r1, r9
   1141c:	add	r2, r2, r8
   11420:	str	r1, [r0, #68]	; 0x44
   11424:	str	r2, [r0, #72]	; 0x48
   11428:	mov	r2, r7
   1142c:	ldr	r0, [r4, #2116]	; 0x844
   11430:	ldr	r1, [r4, #2120]	; 0x848
   11434:	add	r0, r0, r9
   11438:	add	r1, r1, r8
   1143c:	str	r0, [r4, #2116]	; 0x844
   11440:	add	r0, r4, sl, lsl #3
   11444:	str	r1, [r4, #2120]	; 0x848
   11448:	movw	r1, #10180	; 0x27c4
   1144c:	ldr	r1, [r0, r1]!
   11450:	add	r1, r1, r9
   11454:	str	r1, [r0]
   11458:	ldr	r1, [r0, #4]
   1145c:	add	r1, r1, r8
   11460:	str	r1, [r0, #4]
   11464:	mov	r0, r6
   11468:	mov	r1, #99	; 0x63
   1146c:	bl	10a44 <fgets@plt>
   11470:	cmp	r0, #0
   11474:	beq	114d0 <getc@plt+0x954>
   11478:	ldr	r1, [pc, #304]	; 115b0 <getc@plt+0xa34>
   1147c:	mov	r0, r6
   11480:	add	r2, sp, #36	; 0x24
   11484:	mov	r3, r5
   11488:	add	r1, pc, r1
   1148c:	bl	10b28 <__isoc99_sscanf@plt>
   11490:	cmp	r0, #2
   11494:	bne	114d0 <getc@plt+0x954>
   11498:	ldrb	r0, [r6, #31]
   1149c:	cmp	r0, #92	; 0x5c
   114a0:	beq	113f4 <getc@plt+0x878>
   114a4:	cmp	r0, #125	; 0x7d
   114a8:	bne	114b4 <getc@plt+0x938>
   114ac:	ldrb	sl, [r6, #30]
   114b0:	b	113f8 <getc@plt+0x87c>
   114b4:	ldr	r0, [sp, #28]
   114b8:	ldr	r1, [pc, #244]	; 115b4 <getc@plt+0xa38>
   114bc:	add	r2, sp, #32
   114c0:	add	r1, pc, r1
   114c4:	bl	10b28 <__isoc99_sscanf@plt>
   114c8:	ldr	sl, [sp, #32]
   114cc:	b	113fc <getc@plt+0x880>
   114d0:	mov	r0, r7
   114d4:	bl	126a8 <getc@plt+0x1b2c>
   114d8:	sub	sp, fp, #28
   114dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114e0:	ldr	r1, [pc, #208]	; 115b8 <getc@plt+0xa3c>
   114e4:	ldr	r0, [sp, #28]
   114e8:	cmp	r0, #0
   114ec:	add	r1, pc, r1
   114f0:	movne	r1, r0
   114f4:	ldr	r0, [pc, #192]	; 115bc <getc@plt+0xa40>
   114f8:	add	r0, pc, r0
   114fc:	bl	12a98 <error@@Base+0x50>
   11500:	strdeq	r3, [r0], -r0
   11504:	andeq	r4, r1, r5, lsr r2
   11508:	andeq	r4, r1, r9, lsl r2
   1150c:	andeq	r2, r0, lr, lsr #15
   11510:	strdeq	r4, [r1], -r9
   11514:	ldrdeq	r4, [r1], -sp
   11518:	andeq	r3, r0, fp, lsr r0
   1151c:			; <UNDEFINED> instruction: 0x000141bd
   11520:	andeq	r4, r1, r1, lsr #3
   11524:	andeq	r2, r0, sl, lsl #17
   11528:	andeq	r4, r1, r1, ror r1
   1152c:	andeq	r4, r1, r5, asr r1
   11530:	andeq	r2, r0, lr, lsr r8
   11534:	andeq	r4, r1, r5, lsr #2
   11538:	andeq	r4, r1, r9, lsl #2
   1153c:	andeq	r4, r1, sp, ror #1
   11540:	ldrdeq	r4, [r1], -r1
   11544:			; <UNDEFINED> instruction: 0x000027ba
   11548:	andeq	r4, r1, r1, lsr #1
   1154c:	andeq	r4, r1, r5, lsl #1
   11550:	andeq	r2, r0, lr, ror #14
   11554:	andeq	r4, r1, r5, asr r0
   11558:	andeq	r4, r1, r9, lsr r0
   1155c:	andeq	r2, r0, r2, lsr #14
   11560:	andeq	r4, r1, r9
   11564:	andeq	r3, r1, sp, ror #31
   11568:	ldrdeq	r3, [r1], -r1
   1156c:			; <UNDEFINED> instruction: 0x00013fb5
   11570:	muleq	r1, r9, pc	; <UNPREDICTABLE>
   11574:	andeq	r3, r1, r5, ror #30
   11578:	andeq	r2, r0, r2, asr #12
   1157c:	andeq	r3, r1, r1, lsr pc
   11580:	andeq	r3, r1, sp, lsl #30
   11584:	andeq	r2, r0, sl, ror #11
   11588:	ldrdeq	r3, [r1], -r9
   1158c:			; <UNDEFINED> instruction: 0x00013eb5
   11590:	muleq	r0, r2, r5
   11594:	andeq	r3, r1, r1, lsl #29
   11598:	andeq	r3, r1, r1, lsr lr
   1159c:	andeq	r3, r1, r5, lsl lr
   115a0:	andeq	r2, r0, r6, asr #9
   115a4:	andeq	r3, r1, r1, lsr #27
   115a8:	andeq	r3, r1, r1, lsl sp
   115ac:	strdeq	r3, [r1], -r5
   115b0:	andeq	r2, r0, r6, lsr #6
   115b4:	andeq	r2, r0, r9, asr #3
   115b8:			; <UNDEFINED> instruction: 0x000021b3
   115bc:	muleq	r0, r5, r1
   115c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115c4:	add	fp, sp, #28
   115c8:	sub	sp, sp, #4
   115cc:	vpush	{d8}
   115d0:	sub	sp, sp, #32
   115d4:	mov	r2, r1
   115d8:	ldr	r1, [pc, #1536]	; 11be0 <getc@plt+0x1064>
   115dc:	mov	sl, r0
   115e0:	mov	r0, r2
   115e4:	add	r1, pc, r1
   115e8:	bl	12620 <getc@plt+0x1aa4>
   115ec:	ldr	r1, [pc, #1520]	; 11be4 <getc@plt+0x1068>
   115f0:	ldr	r2, [pc, #1520]	; 11be8 <getc@plt+0x106c>
   115f4:	ldr	r3, [pc, #1520]	; 11bec <getc@plt+0x1070>
   115f8:	mov	r4, r0
   115fc:	add	r1, pc, r1
   11600:	add	r2, pc, r2
   11604:	add	r3, pc, r3
   11608:	bl	10b1c <fprintf@plt>
   1160c:	ldr	r2, [sl]
   11610:	ldr	r6, [pc, #1496]	; 11bf0 <getc@plt+0x1074>
   11614:	ldr	r3, [pc, #1496]	; 11bf4 <getc@plt+0x1078>
   11618:	mov	r0, r4
   1161c:	add	r6, pc, r6
   11620:	add	r3, pc, r3
   11624:	mov	r1, r6
   11628:	bl	10b1c <fprintf@plt>
   1162c:	ldr	r2, [sl, #4]
   11630:	ldr	r3, [pc, #1472]	; 11bf8 <getc@plt+0x107c>
   11634:	mov	r0, r4
   11638:	mov	r1, r6
   1163c:	add	r3, pc, r3
   11640:	bl	10b1c <fprintf@plt>
   11644:	ldr	r0, [sl]
   11648:	cmp	r0, #0
   1164c:	beq	1168c <getc@plt+0xb10>
   11650:	ldr	r1, [sl, #4]
   11654:	vldr	d16, [pc, #932]	; 11a00 <getc@plt+0xe84>
   11658:	vmov	s2, r0
   1165c:	sub	r1, r0, r1
   11660:	mov	r0, r4
   11664:	vmov	s0, r1
   11668:	vcvt.f64.s32	d17, s0
   1166c:	vcvt.f64.s32	d18, s2
   11670:	ldr	r1, [pc, #1416]	; 11c00 <getc@plt+0x1084>
   11674:	add	r1, pc, r1
   11678:	vmul.f64	d16, d17, d16
   1167c:	vdiv.f64	d16, d16, d18
   11680:	vmov	r2, r3, d16
   11684:	bl	10b1c <fprintf@plt>
   11688:	b	116a4 <getc@plt+0xb28>
   1168c:	ldr	r0, [pc, #1384]	; 11bfc <getc@plt+0x1080>
   11690:	mov	r1, #8
   11694:	mov	r2, #1
   11698:	mov	r3, r4
   1169c:	add	r0, pc, r0
   116a0:	bl	10a98 <fwrite@plt>
   116a4:	ldr	r1, [pc, #1368]	; 11c04 <getc@plt+0x1088>
   116a8:	mov	r0, r4
   116ac:	add	r1, pc, r1
   116b0:	bl	10b1c <fprintf@plt>
   116b4:	ldr	r2, [sl, #8]
   116b8:	ldr	r6, [pc, #1352]	; 11c08 <getc@plt+0x108c>
   116bc:	ldr	r3, [pc, #1352]	; 11c0c <getc@plt+0x1090>
   116c0:	mov	r0, r4
   116c4:	add	r6, pc, r6
   116c8:	add	r3, pc, r3
   116cc:	mov	r1, r6
   116d0:	bl	10b1c <fprintf@plt>
   116d4:	ldr	r2, [sl, #12]
   116d8:	ldr	r3, [pc, #1328]	; 11c10 <getc@plt+0x1094>
   116dc:	mov	r0, r4
   116e0:	mov	r1, r6
   116e4:	add	r3, pc, r3
   116e8:	bl	10b1c <fprintf@plt>
   116ec:	ldr	r2, [sl, #16]
   116f0:	ldr	r3, [pc, #1308]	; 11c14 <getc@plt+0x1098>
   116f4:	mov	r0, r4
   116f8:	mov	r1, r6
   116fc:	add	r3, pc, r3
   11700:	bl	10b1c <fprintf@plt>
   11704:	ldr	r0, [sl]
   11708:	cmp	r0, #0
   1170c:	beq	11750 <getc@plt+0xbd4>
   11710:	ldr	r1, [sl, #8]
   11714:	ldr	r2, [sl, #12]
   11718:	vmov	s2, r0
   1171c:	vldr	d16, [pc, #732]	; 11a00 <getc@plt+0xe84>
   11720:	mov	r0, r4
   11724:	add	r1, r2, r1
   11728:	vmov	s0, r1
   1172c:	vcvt.f64.s32	d17, s0
   11730:	vcvt.f64.s32	d18, s2
   11734:	ldr	r1, [pc, #1248]	; 11c1c <getc@plt+0x10a0>
   11738:	add	r1, pc, r1
   1173c:	vmul.f64	d16, d17, d16
   11740:	vdiv.f64	d16, d16, d18
   11744:	vmov	r2, r3, d16
   11748:	bl	10b1c <fprintf@plt>
   1174c:	b	11768 <getc@plt+0xbec>
   11750:	ldr	r0, [pc, #1216]	; 11c18 <getc@plt+0x109c>
   11754:	mov	r1, #8
   11758:	mov	r2, #1
   1175c:	mov	r3, r4
   11760:	add	r0, pc, r0
   11764:	bl	10a98 <fwrite@plt>
   11768:	ldr	r1, [pc, #1200]	; 11c20 <getc@plt+0x10a4>
   1176c:	mov	r0, r4
   11770:	movw	r6, #10172	; 0x27bc
   11774:	add	r1, pc, r1
   11778:	bl	10b1c <fprintf@plt>
   1177c:	ldr	r0, [sl]
   11780:	cmp	r0, #0
   11784:	beq	117c4 <getc@plt+0xc48>
   11788:	ldr	r1, [sl, #48]	; 0x30
   1178c:	vldr	d16, [pc, #620]	; 11a00 <getc@plt+0xe84>
   11790:	vmov	s2, r0
   11794:	sub	r1, r0, r1
   11798:	mov	r0, r4
   1179c:	vmov	s0, r1
   117a0:	vcvt.f64.s32	d17, s0
   117a4:	vcvt.f64.s32	d18, s2
   117a8:	ldr	r1, [pc, #1144]	; 11c28 <getc@plt+0x10ac>
   117ac:	add	r1, pc, r1
   117b0:	vmul.f64	d16, d17, d16
   117b4:	vdiv.f64	d16, d16, d18
   117b8:	vmov	r2, r3, d16
   117bc:	bl	10b1c <fprintf@plt>
   117c0:	b	117dc <getc@plt+0xc60>
   117c4:	ldr	r0, [pc, #1112]	; 11c24 <getc@plt+0x10a8>
   117c8:	mov	r1, #8
   117cc:	mov	r2, #1
   117d0:	mov	r3, r4
   117d4:	add	r0, pc, r0
   117d8:	bl	10a98 <fwrite@plt>
   117dc:	add	r0, sl, r6
   117e0:	str	r0, [sp, #16]
   117e4:	mov	r0, r4
   117e8:	ldr	r1, [pc, #1084]	; 11c2c <getc@plt+0x10b0>
   117ec:	add	r1, pc, r1
   117f0:	bl	10b1c <fprintf@plt>
   117f4:	ldr	r0, [pc, #1076]	; 11c30 <getc@plt+0x10b4>
   117f8:	mov	r1, #37	; 0x25
   117fc:	mov	r2, #1
   11800:	mov	r3, r4
   11804:	add	r0, pc, r0
   11808:	bl	10a98 <fwrite@plt>
   1180c:	ldr	r2, [sl, #20]
   11810:	ldr	r3, [sl, #24]
   11814:	ldr	r0, [sl, #28]
   11818:	ldr	r1, [sl, #32]
   1181c:	ldr	r7, [pc, #1040]	; 11c34 <getc@plt+0x10b8>
   11820:	add	r7, pc, r7
   11824:	stm	sp, {r0, r1, r7}
   11828:	mov	r0, r4
   1182c:	ldr	r6, [pc, #1028]	; 11c38 <getc@plt+0x10bc>
   11830:	add	r6, pc, r6
   11834:	mov	r1, r6
   11838:	bl	10b1c <fprintf@plt>
   1183c:	ldr	r2, [sl, #36]	; 0x24
   11840:	ldr	r3, [sl, #40]	; 0x28
   11844:	ldr	r0, [sl, #44]	; 0x2c
   11848:	ldr	r1, [sl, #48]	; 0x30
   1184c:	ldr	r7, [pc, #1000]	; 11c3c <getc@plt+0x10c0>
   11850:	add	r7, pc, r7
   11854:	stm	sp, {r0, r1, r7}
   11858:	mov	r0, r4
   1185c:	mov	r1, r6
   11860:	bl	10b1c <fprintf@plt>
   11864:	ldr	r2, [sl, #52]	; 0x34
   11868:	ldr	r3, [sl, #56]	; 0x38
   1186c:	ldr	r0, [sl, #60]	; 0x3c
   11870:	ldr	r1, [sl, #64]	; 0x40
   11874:	ldr	r7, [pc, #964]	; 11c40 <getc@plt+0x10c4>
   11878:	add	r7, pc, r7
   1187c:	stm	sp, {r0, r1, r7}
   11880:	mov	r0, r4
   11884:	mov	r1, r6
   11888:	bl	10b1c <fprintf@plt>
   1188c:	ldr	r1, [pc, #944]	; 11c44 <getc@plt+0x10c8>
   11890:	mov	r0, r4
   11894:	add	r1, pc, r1
   11898:	bl	10b1c <fprintf@plt>
   1189c:	ldr	r7, [pc, #932]	; 11c48 <getc@plt+0x10cc>
   118a0:	vldr	d8, [pc, #816]	; 11bd8 <getc@plt+0x105c>
   118a4:	mov	r6, #0
   118a8:	add	r7, pc, r7
   118ac:	b	118f0 <getc@plt+0xd74>
   118b0:	mov	r5, r7
   118b4:	add	r7, sp, #23
   118b8:	mov	r0, #0
   118bc:	mov	r1, #0
   118c0:	mov	r3, #1
   118c4:	mov	r2, r7
   118c8:	bl	13070 <error@@Base+0x628>
   118cc:	ldr	r1, [pc, #900]	; 11c58 <getc@plt+0x10dc>
   118d0:	mov	r2, r7
   118d4:	mov	r0, r4
   118d8:	mov	r7, r5
   118dc:	add	r1, pc, r1
   118e0:	bl	10b1c <fprintf@plt>
   118e4:	add	r6, r6, #1
   118e8:	cmp	r6, #256	; 0x100
   118ec:	beq	119a0 <getc@plt+0xe24>
   118f0:	add	r9, sl, r6, lsl #3
   118f4:	ldr	r0, [r9, #68]	; 0x44
   118f8:	cmp	r0, #1
   118fc:	blt	118e4 <getc@plt+0xd68>
   11900:	mov	r0, r6
   11904:	bl	123cc <getc@plt+0x1850>
   11908:	ldr	r2, [r9, #68]	; 0x44
   1190c:	ldr	r3, [r9, #72]	; 0x48
   11910:	mov	r8, r0
   11914:	mov	r0, r4
   11918:	mov	r1, r7
   1191c:	bl	10b1c <fprintf@plt>
   11920:	ldr	r0, [r9, #68]	; 0x44
   11924:	cmp	r0, #0
   11928:	beq	1196c <getc@plt+0xdf0>
   1192c:	ldr	r1, [r9, #72]	; 0x48
   11930:	vmov	s2, r0
   11934:	sub	r1, r0, r1
   11938:	mov	r0, r4
   1193c:	vmov	s0, r1
   11940:	vcvt.f64.s32	d16, s0
   11944:	vcvt.f64.s32	d17, s2
   11948:	ldr	r1, [pc, #768]	; 11c50 <getc@plt+0x10d4>
   1194c:	add	r1, pc, r1
   11950:	vmul.f64	d16, d16, d8
   11954:	vdiv.f64	d16, d16, d17
   11958:	vmov	r2, r3, d16
   1195c:	bl	10b1c <fprintf@plt>
   11960:	cmp	r8, #0
   11964:	bne	1198c <getc@plt+0xe10>
   11968:	b	118b0 <getc@plt+0xd34>
   1196c:	ldr	r0, [pc, #728]	; 11c4c <getc@plt+0x10d0>
   11970:	mov	r1, #8
   11974:	mov	r2, #1
   11978:	mov	r3, r4
   1197c:	add	r0, pc, r0
   11980:	bl	10a98 <fwrite@plt>
   11984:	cmp	r8, #0
   11988:	beq	118b0 <getc@plt+0xd34>
   1198c:	ldr	r1, [pc, #704]	; 11c54 <getc@plt+0x10d8>
   11990:	mov	r0, r4
   11994:	mov	r2, r8
   11998:	add	r1, pc, r1
   1199c:	b	118e0 <getc@plt+0xd64>
   119a0:	ldr	r2, [sl, #2116]	; 0x844
   119a4:	ldr	r3, [sl, #2120]	; 0x848
   119a8:	ldr	r1, [pc, #684]	; 11c5c <getc@plt+0x10e0>
   119ac:	mov	r0, r4
   119b0:	add	r1, pc, r1
   119b4:	bl	10b1c <fprintf@plt>
   119b8:	ldr	r0, [sl, #2116]	; 0x844
   119bc:	cmp	r0, #0
   119c0:	beq	11a08 <getc@plt+0xe8c>
   119c4:	ldr	r1, [sl, #2120]	; 0x848
   119c8:	vmov	s2, r0
   119cc:	sub	r1, r0, r1
   119d0:	mov	r0, r4
   119d4:	vmov	s0, r1
   119d8:	vcvt.f64.s32	d16, s0
   119dc:	vcvt.f64.s32	d17, s2
   119e0:	ldr	r1, [pc, #636]	; 11c64 <getc@plt+0x10e8>
   119e4:	add	r1, pc, r1
   119e8:	vmul.f64	d16, d16, d8
   119ec:	vdiv.f64	d16, d16, d17
   119f0:	vmov	r2, r3, d16
   119f4:	bl	10b1c <fprintf@plt>
   119f8:	b	11a20 <getc@plt+0xea4>
   119fc:	nop	{0}
   11a00:	andeq	r0, r0, r0
   11a04:	subsmi	r0, r9, r0
   11a08:	ldr	r0, [pc, #592]	; 11c60 <getc@plt+0x10e4>
   11a0c:	mov	r1, #8
   11a10:	mov	r2, #1
   11a14:	mov	r3, r4
   11a18:	add	r0, pc, r0
   11a1c:	bl	10a98 <fwrite@plt>
   11a20:	ldr	r1, [pc, #576]	; 11c68 <getc@plt+0x10ec>
   11a24:	ldr	r2, [pc, #576]	; 11c6c <getc@plt+0x10f0>
   11a28:	mov	r0, r4
   11a2c:	add	r1, pc, r1
   11a30:	add	r2, pc, r2
   11a34:	bl	10b1c <fprintf@plt>
   11a38:	ldr	r0, [sl, #4]
   11a3c:	ldr	r5, [sp, #16]
   11a40:	cmp	r0, #1
   11a44:	blt	11ac8 <getc@plt+0xf4c>
   11a48:	movw	r0, #2124	; 0x84c
   11a4c:	add	r0, sl, r0
   11a50:	bl	1216c <getc@plt+0x15f0>
   11a54:	ldr	r1, [r5]
   11a58:	ldr	r0, [r5, #4]
   11a5c:	ldr	r2, [pc, #524]	; 11c70 <getc@plt+0x10f4>
   11a60:	add	r2, pc, r2
   11a64:	bl	11cc4 <getc@plt+0x1148>
   11a68:	ldr	r0, [pc, #516]	; 11c74 <getc@plt+0x10f8>
   11a6c:	mov	r1, #39	; 0x27
   11a70:	mov	r2, #1
   11a74:	mov	r3, r4
   11a78:	add	r0, pc, r0
   11a7c:	bl	10a98 <fwrite@plt>
   11a80:	ldr	r0, [r5, #4]
   11a84:	cmp	r0, #1
   11a88:	blt	11ac8 <getc@plt+0xf4c>
   11a8c:	ldr	r6, [pc, #484]	; 11c78 <getc@plt+0x10fc>
   11a90:	mov	r7, #0
   11a94:	add	r6, pc, r6
   11a98:	ldr	r0, [r5]
   11a9c:	ldr	r0, [r0, r7, lsl #2]
   11aa0:	add	r3, r0, #8
   11aa4:	mov	r0, r4
   11aa8:	ldm	r3, {r1, r2, r3}
   11aac:	str	r1, [sp]
   11ab0:	mov	r1, r6
   11ab4:	bl	10b1c <fprintf@plt>
   11ab8:	ldr	r0, [r5, #4]
   11abc:	add	r7, r7, #1
   11ac0:	cmp	r7, r0
   11ac4:	blt	11a98 <getc@plt+0xf1c>
   11ac8:	ldr	r0, [sl]
   11acc:	cmp	r0, #1
   11ad0:	blt	11bc0 <getc@plt+0x1044>
   11ad4:	ldr	r1, [pc, #416]	; 11c7c <getc@plt+0x1100>
   11ad8:	mov	r0, r4
   11adc:	add	r1, pc, r1
   11ae0:	bl	10b1c <fprintf@plt>
   11ae4:	ldr	r6, [pc, #404]	; 11c80 <getc@plt+0x1104>
   11ae8:	movw	r9, #65535	; 0xffff
   11aec:	movw	r0, #10180	; 0x27c4
   11af0:	mov	r5, #0
   11af4:	add	r7, sp, #23
   11af8:	add	r8, sl, r0
   11afc:	movw	r0, #10184	; 0x27c8
   11b00:	movt	r9, #16
   11b04:	add	sl, sl, r0
   11b08:	add	r6, pc, r6
   11b0c:	b	11b78 <getc@plt+0xffc>
   11b10:	lsl	r1, r5, #1
   11b14:	vmov	s2, r0
   11b18:	ldr	r1, [sl, r1, lsl #2]
   11b1c:	sub	r1, r0, r1
   11b20:	mov	r0, r4
   11b24:	vmov	s0, r1
   11b28:	vcvt.f64.s32	d16, s0
   11b2c:	vcvt.f64.s32	d17, s2
   11b30:	ldr	r1, [pc, #340]	; 11c8c <getc@plt+0x1110>
   11b34:	add	r1, pc, r1
   11b38:	vmul.f64	d16, d16, d8
   11b3c:	vdiv.f64	d16, d16, d17
   11b40:	vmov	r2, r3, d16
   11b44:	bl	10b1c <fprintf@plt>
   11b48:	mov	r0, #0
   11b4c:	mov	r1, r5
   11b50:	mov	r2, r7
   11b54:	mov	r3, #1
   11b58:	bl	13070 <error@@Base+0x628>
   11b5c:	mov	r0, r4
   11b60:	mov	r1, r6
   11b64:	mov	r2, r7
   11b68:	bl	10b1c <fprintf@plt>
   11b6c:	add	r5, r5, #1
   11b70:	cmp	r5, r9
   11b74:	beq	11bc0 <getc@plt+0x1044>
   11b78:	ldr	r2, [r8, r5, lsl #3]
   11b7c:	cmp	r2, #1
   11b80:	blt	11b6c <getc@plt+0xff0>
   11b84:	ldr	r3, [sl, r5, lsl #3]
   11b88:	ldr	r1, [pc, #244]	; 11c84 <getc@plt+0x1108>
   11b8c:	mov	r0, r4
   11b90:	add	r1, pc, r1
   11b94:	bl	10b1c <fprintf@plt>
   11b98:	ldr	r0, [r8, r5, lsl #3]
   11b9c:	cmp	r0, #0
   11ba0:	bne	11b10 <getc@plt+0xf94>
   11ba4:	ldr	r0, [pc, #220]	; 11c88 <getc@plt+0x110c>
   11ba8:	mov	r1, #8
   11bac:	mov	r2, #1
   11bb0:	mov	r3, r4
   11bb4:	add	r0, pc, r0
   11bb8:	bl	10a98 <fwrite@plt>
   11bbc:	b	11b48 <getc@plt+0xfcc>
   11bc0:	mov	r0, r4
   11bc4:	bl	126a8 <getc@plt+0x1b2c>
   11bc8:	sub	sp, fp, #40	; 0x28
   11bcc:	vpop	{d8}
   11bd0:	add	sp, sp, #4
   11bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bd8:	andeq	r0, r0, r0
   11bdc:	subsmi	r0, r9, r0
   11be0:	andeq	r2, r0, r9, lsl r4
   11be4:	andeq	r2, r0, r9, lsr #1
   11be8:	andeq	r2, r0, lr, asr r0
   11bec:	andeq	r2, r0, r3, lsr #18
   11bf0:			; <UNDEFINED> instruction: 0x000021b8
   11bf4:	andeq	r2, r0, pc, asr #5
   11bf8:	andeq	r2, r0, lr, rrx
   11bfc:	andeq	r2, r0, sl, lsl r1
   11c00:	andeq	r2, r0, fp, asr #2
   11c04:	andeq	r2, r0, r5
   11c08:	andeq	r2, r0, r0, lsl r1
   11c0c:	strdeq	r1, [r0], -r8
   11c10:	andeq	r1, r0, lr, ror #31
   11c14:	andeq	r1, r0, r6, ror #31
   11c18:	andeq	r2, r0, r6, asr r0
   11c1c:	andeq	r2, r0, r7, lsl #1
   11c20:	andeq	r1, r0, sl, ror pc
   11c24:	andeq	r1, r0, r2, ror #31
   11c28:	andeq	r2, r0, r3, lsl r0
   11c2c:	andeq	r1, r0, r9, lsl pc
   11c30:	andeq	r1, r0, r0, lsr #30
   11c34:	andeq	r1, r0, sl, lsr #30
   11c38:	muleq	r0, r5, pc	; <UNPREDICTABLE>
   11c3c:	andeq	r1, r0, r1, lsl #30
   11c40:	andeq	r1, r0, r2, ror #29
   11c44:	andeq	r1, r0, ip, asr #29
   11c48:	andeq	r1, r0, r7, lsr pc
   11c4c:	andeq	r1, r0, sl, lsr lr
   11c50:	andeq	r1, r0, r3, ror lr
   11c54:	andeq	r1, r0, r0, asr #28
   11c58:	andeq	r1, r0, lr, lsl #30
   11c5c:	andeq	r1, r0, pc, lsr #28
   11c60:	muleq	r0, lr, sp
   11c64:	ldrdeq	r1, [r0], -fp
   11c68:	andeq	r1, r0, ip, lsr #27
   11c6c:	andeq	r1, r0, sl, lsr #26
   11c70:	andeq	r0, r0, r8, lsr #4
   11c74:	andeq	r1, r0, r6, lsl #26
   11c78:	andeq	r1, r0, pc, asr sp
   11c7c:	andeq	r1, r0, r4, lsl #25
   11c80:	andeq	r1, r0, r2, ror #25
   11c84:	andeq	r1, r0, pc, asr #24
   11c88:	andeq	r1, r0, r2, lsl #24
   11c8c:	andeq	r1, r0, fp, lsl #25
   11c90:	ldr	r2, [r1, #12]
   11c94:	ldr	r3, [r0, #12]
   11c98:	cmp	r2, r3
   11c9c:	bne	11cbc <getc@plt+0x1140>
   11ca0:	ldr	r2, [r1, #16]
   11ca4:	ldr	r3, [r0, #16]
   11ca8:	cmp	r2, r3
   11cac:	bne	11cbc <getc@plt+0x1140>
   11cb0:	ldr	r1, [r1, #8]
   11cb4:	ldr	r0, [r0, #8]
   11cb8:	b	1259c <getc@plt+0x1a20>
   11cbc:	sub	r0, r2, r3
   11cc0:	bx	lr
   11cc4:	cmp	r0, #2
   11cc8:	bxlt	lr
   11ccc:	ldr	r3, [pc, #28]	; 11cf0 <getc@plt+0x1174>
   11cd0:	add	r3, pc, r3
   11cd4:	str	r2, [r3]
   11cd8:	ldr	r2, [pc, #20]	; 11cf4 <getc@plt+0x1178>
   11cdc:	add	r2, pc, r2
   11ce0:	str	r1, [r2]
   11ce4:	sub	r1, r0, #1
   11ce8:	mov	r0, #0
   11cec:	b	11cf8 <getc@plt+0x117c>
   11cf0:	andeq	r3, r1, r0, ror #8
   11cf4:	andeq	r3, r1, r0, asr r4
   11cf8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11cfc:	add	fp, sp, #24
   11d00:	mov	r8, r1
   11d04:	mov	r5, r0
   11d08:	b	11d38 <getc@plt+0x11bc>
   11d0c:	mov	r7, r4
   11d10:	ldr	r0, [pc, #308]	; 11e4c <getc@plt+0x12d0>
   11d14:	ldr	r0, [pc, r0]
   11d18:	sub	r1, r4, #1
   11d1c:	str	r6, [r0, r4, lsl #2]
   11d20:	cmp	r1, r5
   11d24:	movgt	r0, r5
   11d28:	blgt	11cf8 <getc@plt+0x117c>
   11d2c:	add	r5, r7, #1
   11d30:	cmp	r5, r8
   11d34:	bge	11e2c <getc@plt+0x12b0>
   11d38:	ldr	r0, [pc, #240]	; 11e30 <getc@plt+0x12b4>
   11d3c:	cmp	r5, r8
   11d40:	mov	r4, r8
   11d44:	mov	r7, r5
   11d48:	ldr	r0, [pc, r0]
   11d4c:	ldr	r6, [r0, r5, lsl #2]
   11d50:	bge	11d18 <getc@plt+0x119c>
   11d54:	mov	r7, r5
   11d58:	mov	r4, r8
   11d5c:	cmp	r7, r4
   11d60:	blt	11d78 <getc@plt+0x11fc>
   11d64:	b	11da8 <getc@plt+0x122c>
   11d68:	cmp	r7, r4
   11d6c:	bge	11d10 <getc@plt+0x1194>
   11d70:	cmp	r7, r4
   11d74:	bge	11da8 <getc@plt+0x122c>
   11d78:	ldr	r0, [pc, #180]	; 11e34 <getc@plt+0x12b8>
   11d7c:	ldr	r0, [pc, r0]
   11d80:	ldr	r1, [r0, r4, lsl #2]
   11d84:	ldr	r2, [pc, #172]	; 11e38 <getc@plt+0x12bc>
   11d88:	mov	r0, r6
   11d8c:	ldr	r2, [pc, r2]
   11d90:	blx	r2
   11d94:	cmn	r0, #1
   11d98:	bgt	11da8 <getc@plt+0x122c>
   11d9c:	sub	r4, r4, #1
   11da0:	cmp	r7, r4
   11da4:	blt	11d78 <getc@plt+0x11fc>
   11da8:	cmp	r7, r4
   11dac:	bne	11dbc <getc@plt+0x1240>
   11db0:	cmp	r7, r4
   11db4:	blt	11dd8 <getc@plt+0x125c>
   11db8:	b	11e0c <getc@plt+0x1290>
   11dbc:	ldr	r0, [pc, #120]	; 11e3c <getc@plt+0x12c0>
   11dc0:	ldr	r0, [pc, r0]
   11dc4:	ldr	r1, [r0, r4, lsl #2]
   11dc8:	str	r1, [r0, r7, lsl #2]
   11dcc:	add	r7, r7, #1
   11dd0:	cmp	r7, r4
   11dd4:	bge	11e0c <getc@plt+0x1290>
   11dd8:	ldr	r0, [pc, #96]	; 11e40 <getc@plt+0x12c4>
   11ddc:	ldr	r0, [pc, r0]
   11de0:	ldr	r1, [r0, r7, lsl #2]
   11de4:	ldr	r2, [pc, #88]	; 11e44 <getc@plt+0x12c8>
   11de8:	mov	r0, r6
   11dec:	ldr	r2, [pc, r2]
   11df0:	blx	r2
   11df4:	cmp	r0, #1
   11df8:	blt	11e0c <getc@plt+0x1290>
   11dfc:	add	r7, r7, #1
   11e00:	cmp	r4, r7
   11e04:	bne	11dd8 <getc@plt+0x125c>
   11e08:	b	11d0c <getc@plt+0x1190>
   11e0c:	cmp	r7, r4
   11e10:	beq	11d68 <getc@plt+0x11ec>
   11e14:	ldr	r0, [pc, #44]	; 11e48 <getc@plt+0x12cc>
   11e18:	ldr	r0, [pc, r0]
   11e1c:	ldr	r1, [r0, r7, lsl #2]
   11e20:	str	r1, [r0, r4, lsl #2]
   11e24:	sub	r4, r4, #1
   11e28:	b	11d68 <getc@plt+0x11ec>
   11e2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11e30:	andeq	r3, r1, r4, ror #7
   11e34:			; <UNDEFINED> instruction: 0x000133b0
   11e38:	andeq	r3, r1, r4, lsr #7
   11e3c:	andeq	r3, r1, ip, ror #6
   11e40:	andeq	r3, r1, r0, asr r3
   11e44:	andeq	r3, r1, r4, asr #6
   11e48:	andeq	r3, r1, r4, lsl r3
   11e4c:	andeq	r3, r1, r8, lsl r4
   11e50:	cmp	r1, #0
   11e54:	bxeq	lr
   11e58:	push	{fp, lr}
   11e5c:	mov	fp, sp
   11e60:	sub	r2, r1, r2
   11e64:	vldr	d16, [pc, #100]	; 11ed0 <getc@plt+0x1354>
   11e68:	vmov	s2, r1
   11e6c:	vmov	s0, r2
   11e70:	vcvt.f64.s32	d17, s0
   11e74:	vcvt.f64.s32	d18, s2
   11e78:	vmul.f64	d16, d17, d16
   11e7c:	vdiv.f64	d16, d16, d18
   11e80:	vcmpe.f64	d16, #0.0
   11e84:	vmrs	APSR_nzcv, fpscr
   11e88:	blt	11ebc <getc@plt+0x1340>
   11e8c:	mov	r2, #0
   11e90:	sxth	ip, r2
   11e94:	add	r2, r2, #1
   11e98:	ldr	r3, [r0, ip, lsl #2]
   11e9c:	add	lr, r3, r1
   11ea0:	sxth	r3, r2
   11ea4:	str	lr, [r0, ip, lsl #2]
   11ea8:	vmov	s0, r3
   11eac:	vcvt.f64.s32	d17, s0
   11eb0:	vcmpe.f64	d16, d17
   11eb4:	vmrs	APSR_nzcv, fpscr
   11eb8:	bge	11e90 <getc@plt+0x1314>
   11ebc:	ldr	r2, [r0, #404]	; 0x194
   11ec0:	add	r1, r2, r1
   11ec4:	str	r1, [r0, #404]	; 0x194
   11ec8:	pop	{fp, lr}
   11ecc:	bx	lr
   11ed0:	andeq	r0, r0, r0
   11ed4:	subsmi	r0, r9, r0
   11ed8:	push	{r4, r5, r6, r7, fp, lr}
   11edc:	add	fp, sp, #16
   11ee0:	vpush	{d8}
   11ee4:	sub	sp, sp, #8
   11ee8:	mov	r4, r0
   11eec:	ldr	r0, [r0, #404]	; 0x194
   11ef0:	cmp	r0, #0
   11ef4:	beq	11f70 <getc@plt+0x13f4>
   11ef8:	ldr	r2, [pc, #136]	; 11f88 <getc@plt+0x140c>
   11efc:	mov	r0, r1
   11f00:	add	r2, pc, r2
   11f04:	mov	r1, r2
   11f08:	bl	12620 <getc@plt+0x1aa4>
   11f0c:	ldr	r7, [pc, #120]	; 11f8c <getc@plt+0x1410>
   11f10:	vldr	d8, [pc, #104]	; 11f80 <getc@plt+0x1404>
   11f14:	mov	r5, r0
   11f18:	mov	r6, #0
   11f1c:	add	r7, pc, r7
   11f20:	add	r0, r4, r6, lsl #2
   11f24:	vldr	s2, [r4, #404]	; 0x194
   11f28:	mov	r1, r7
   11f2c:	mov	r2, r6
   11f30:	vldr	s0, [r0]
   11f34:	mov	r0, r5
   11f38:	vcvt.f64.s32	d16, s0
   11f3c:	vcvt.f64.s32	d17, s2
   11f40:	vmul.f64	d16, d16, d8
   11f44:	vdiv.f64	d16, d16, d17
   11f48:	vstr	d16, [sp]
   11f4c:	bl	10b1c <fprintf@plt>
   11f50:	add	r6, r6, #1
   11f54:	cmp	r6, #101	; 0x65
   11f58:	bne	11f20 <getc@plt+0x13a4>
   11f5c:	mov	r0, r5
   11f60:	sub	sp, fp, #24
   11f64:	vpop	{d8}
   11f68:	pop	{r4, r5, r6, r7, fp, lr}
   11f6c:	b	126a8 <getc@plt+0x1b2c>
   11f70:	sub	sp, fp, #24
   11f74:	vpop	{d8}
   11f78:	pop	{r4, r5, r6, r7, fp, pc}
   11f7c:	nop	{0}
   11f80:	andeq	r0, r0, r0
   11f84:	subsmi	r0, r9, r0
   11f88:	strdeq	r1, [r0], -sp
   11f8c:	andeq	r1, r0, r6, ror #17
   11f90:	push	{r4, r5, r6, sl, fp, lr}
   11f94:	add	fp, sp, #16
   11f98:	mov	r4, r0
   11f9c:	movw	r0, #8048	; 0x1f70
   11fa0:	movw	r6, #503	; 0x1f7
   11fa4:	add	r5, r4, r0
   11fa8:	mov	r0, r4
   11fac:	bl	13310 <error@@Base+0x8c8>
   11fb0:	subs	r6, r6, #1
   11fb4:	add	r4, r4, #16
   11fb8:	bne	11fa8 <getc@plt+0x142c>
   11fbc:	mov	r0, #0
   11fc0:	str	r0, [r5]
   11fc4:	str	r0, [r5, #4]
   11fc8:	pop	{r4, r5, r6, sl, fp, pc}
   11fcc:	push	{r4, r5, r6, sl, fp, lr}
   11fd0:	add	fp, sp, #16
   11fd4:	mov	r5, r1
   11fd8:	ldrb	r1, [r1]
   11fdc:	mov	r4, #0
   11fe0:	mov	r2, #0
   11fe4:	cmp	r1, #0
   11fe8:	beq	1201c <getc@plt+0x14a0>
   11fec:	add	r3, r5, #1
   11ff0:	mov	r2, #0
   11ff4:	uxtab	r2, r2, r1
   11ff8:	ldrb	r1, [r3], #1
   11ffc:	cmp	r1, #0
   12000:	bne	11ff4 <getc@plt+0x1478>
   12004:	movw	r1, #20065	; 0x4e61
   12008:	movt	r1, #33354	; 0x824a
   1200c:	umull	r1, r3, r2, r1
   12010:	lsr	r1, r3, #8
   12014:	movw	r3, #503	; 0x1f7
   12018:	mls	r2, r1, r3, r2
   1201c:	ldr	r6, [r0, r2, lsl #4]
   12020:	cmp	r6, #0
   12024:	beq	12048 <getc@plt+0x14cc>
   12028:	ldr	r1, [r6, #8]
   1202c:	mov	r0, r5
   12030:	bl	10a14 <strcmp@plt>
   12034:	cmp	r0, #0
   12038:	beq	12050 <getc@plt+0x14d4>
   1203c:	ldr	r6, [r6, #4]
   12040:	cmp	r6, #0
   12044:	bne	12028 <getc@plt+0x14ac>
   12048:	mov	r0, r4
   1204c:	pop	{r4, r5, r6, sl, fp, pc}
   12050:	mov	r4, r6
   12054:	mov	r0, r4
   12058:	pop	{r4, r5, r6, sl, fp, pc}
   1205c:	push	{r4, r5, fp, lr}
   12060:	add	fp, sp, #8
   12064:	movw	r2, #8048	; 0x1f70
   12068:	add	r5, r0, r2
   1206c:	ldr	r2, [r1, #8]
   12070:	ldrb	r3, [r2]
   12074:	cmp	r3, #0
   12078:	beq	120b0 <getc@plt+0x1534>
   1207c:	add	r4, r2, #1
   12080:	mov	r2, #0
   12084:	uxtab	r2, r2, r3
   12088:	ldrb	r3, [r4], #1
   1208c:	cmp	r3, #0
   12090:	bne	12084 <getc@plt+0x1508>
   12094:	movw	r3, #20065	; 0x4e61
   12098:	movt	r3, #33354	; 0x824a
   1209c:	umull	r3, r4, r2, r3
   120a0:	lsr	r3, r4, #8
   120a4:	movw	r4, #503	; 0x1f7
   120a8:	mls	r2, r3, r4, r2
   120ac:	b	120b4 <getc@plt+0x1538>
   120b0:	mov	r2, #0
   120b4:	add	r0, r0, r2, lsl #4
   120b8:	bl	1331c <error@@Base+0x8d4>
   120bc:	ldr	r0, [r5]
   120c0:	cmp	r0, #0
   120c4:	beq	120d4 <getc@plt+0x1558>
   120c8:	bl	10a2c <free@plt>
   120cc:	mov	r0, #0
   120d0:	str	r0, [r5]
   120d4:	ldr	r0, [r5, #4]
   120d8:	add	r0, r0, #1
   120dc:	str	r0, [r5, #4]
   120e0:	pop	{r4, r5, fp, pc}
   120e4:	push	{r4, r5, fp, lr}
   120e8:	add	fp, sp, #8
   120ec:	movw	r2, #8048	; 0x1f70
   120f0:	add	r5, r0, r2
   120f4:	ldr	r2, [r1, #8]
   120f8:	ldrb	r3, [r2]
   120fc:	cmp	r3, #0
   12100:	beq	12138 <getc@plt+0x15bc>
   12104:	add	r4, r2, #1
   12108:	mov	r2, #0
   1210c:	uxtab	r2, r2, r3
   12110:	ldrb	r3, [r4], #1
   12114:	cmp	r3, #0
   12118:	bne	1210c <getc@plt+0x1590>
   1211c:	movw	r3, #20065	; 0x4e61
   12120:	movt	r3, #33354	; 0x824a
   12124:	umull	r3, r4, r2, r3
   12128:	lsr	r3, r4, #8
   1212c:	movw	r4, #503	; 0x1f7
   12130:	mls	r2, r3, r4, r2
   12134:	b	1213c <getc@plt+0x15c0>
   12138:	mov	r2, #0
   1213c:	add	r0, r0, r2, lsl #4
   12140:	bl	13464 <error@@Base+0xa1c>
   12144:	ldr	r0, [r5]
   12148:	cmp	r0, #0
   1214c:	beq	1215c <getc@plt+0x15e0>
   12150:	bl	10a2c <free@plt>
   12154:	mov	r0, #0
   12158:	str	r0, [r5]
   1215c:	ldr	r0, [r5, #4]
   12160:	sub	r0, r0, #1
   12164:	str	r0, [r5, #4]
   12168:	pop	{r4, r5, fp, pc}
   1216c:	push	{r4, r5, fp, lr}
   12170:	add	fp, sp, #8
   12174:	mov	r4, r0
   12178:	movw	r0, #8048	; 0x1f70
   1217c:	mov	r5, r4
   12180:	ldr	r0, [r5, r0]!
   12184:	cmp	r0, #0
   12188:	bne	121e8 <getc@plt+0x166c>
   1218c:	ldr	r0, [r5, #4]
   12190:	cmp	r0, #0
   12194:	popeq	{r4, r5, fp, pc}
   12198:	mov	r1, #4
   1219c:	bl	12578 <getc@plt+0x19fc>
   121a0:	str	r0, [r5]
   121a4:	mov	r0, #0
   121a8:	movw	ip, #503	; 0x1f7
   121ac:	mov	r2, #0
   121b0:	b	121c0 <getc@plt+0x1644>
   121b4:	add	r2, r2, #1
   121b8:	cmp	r2, ip
   121bc:	beq	121e8 <getc@plt+0x166c>
   121c0:	ldr	r3, [r4, r2, lsl #4]
   121c4:	cmp	r3, #0
   121c8:	beq	121b4 <getc@plt+0x1638>
   121cc:	ldr	r1, [r5]
   121d0:	str	r3, [r1, r0, lsl #2]
   121d4:	add	r0, r0, #1
   121d8:	ldr	r3, [r3, #4]
   121dc:	cmp	r3, #0
   121e0:	bne	121cc <getc@plt+0x1650>
   121e4:	b	121b4 <getc@plt+0x1638>
   121e8:	pop	{r4, r5, fp, pc}
   121ec:	push	{r4, r5, r6, r7, fp, lr}
   121f0:	add	fp, sp, #16
   121f4:	mov	r5, r0
   121f8:	movw	r0, #8048	; 0x1f70
   121fc:	mov	r4, r1
   12200:	movw	r7, #503	; 0x1f7
   12204:	add	r6, r5, r0
   12208:	mov	r0, r5
   1220c:	mov	r1, r4
   12210:	bl	13538 <error@@Base+0xaf0>
   12214:	subs	r7, r7, #1
   12218:	add	r5, r5, #16
   1221c:	bne	12208 <getc@plt+0x168c>
   12220:	ldr	r0, [r6]
   12224:	cmp	r0, #0
   12228:	beq	12238 <getc@plt+0x16bc>
   1222c:	bl	10a2c <free@plt>
   12230:	mov	r0, #0
   12234:	str	r0, [r6]
   12238:	mov	r0, #0
   1223c:	str	r0, [r6, #4]
   12240:	pop	{r4, r5, r6, r7, fp, pc}
   12244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12248:	add	fp, sp, #28
   1224c:	push	{r0}		; (str r0, [sp, #-4]!)
   12250:	ldr	r0, [pc, #336]	; 123a8 <getc@plt+0x182c>
   12254:	add	r0, pc, r0
   12258:	ldrh	r0, [r0]
   1225c:	ldr	r7, [pc, #328]	; 123ac <getc@plt+0x1830>
   12260:	cmp	r0, #0
   12264:	add	r7, pc, r7
   12268:	bne	1238c <getc@plt+0x1810>
   1226c:	ldr	r3, [pc, #316]	; 123b0 <getc@plt+0x1834>
   12270:	mov	r6, #0
   12274:	mov	r8, #0
   12278:	mov	r4, #0
   1227c:	add	r3, pc, r3
   12280:	b	12294 <getc@plt+0x1718>
   12284:	add	r4, r4, #1
   12288:	mov	r8, r0
   1228c:	cmp	r4, #91	; 0x5b
   12290:	beq	1238c <getc@plt+0x1810>
   12294:	sxth	sl, r8
   12298:	cmp	sl, #1
   1229c:	blt	12310 <getc@plt+0x1794>
   122a0:	add	r0, r4, r4, lsl #1
   122a4:	ldr	r1, [pc, #264]	; 123b4 <getc@plt+0x1838>
   122a8:	add	r0, r3, r0, lsl #2
   122ac:	ldr	r5, [r0, #8]
   122b0:	ldr	r1, [pc, r1]
   122b4:	mov	r0, r5
   122b8:	bl	10a14 <strcmp@plt>
   122bc:	cmp	r0, #0
   122c0:	mov	r0, r6
   122c4:	mov	r9, #0
   122c8:	beq	12318 <getc@plt+0x179c>
   122cc:	mov	r8, r6
   122d0:	sxth	sl, r6
   122d4:	ldr	r6, [pc, #220]	; 123b8 <getc@plt+0x183c>
   122d8:	mov	r1, #1
   122dc:	add	r6, pc, r6
   122e0:	mov	r9, r1
   122e4:	cmp	r1, sl
   122e8:	bge	12304 <getc@plt+0x1788>
   122ec:	ldr	r1, [r6, r9, lsl #2]
   122f0:	mov	r0, r5
   122f4:	bl	10a14 <strcmp@plt>
   122f8:	add	r1, r9, #1
   122fc:	cmp	r0, #0
   12300:	bne	122e0 <getc@plt+0x1764>
   12304:	mov	r6, r8
   12308:	mov	r0, r8
   1230c:	b	12318 <getc@plt+0x179c>
   12310:	mov	r0, r8
   12314:	mov	r9, #0
   12318:	ldr	r3, [pc, #156]	; 123bc <getc@plt+0x1840>
   1231c:	cmp	r9, sl
   12320:	add	r3, pc, r3
   12324:	bne	12360 <getc@plt+0x17e4>
   12328:	uxth	r0, r8
   1232c:	cmp	r0, #256	; 0x100
   12330:	beq	1239c <getc@plt+0x1820>
   12334:	ldr	r0, [pc, #132]	; 123c0 <getc@plt+0x1844>
   12338:	add	r6, r8, #1
   1233c:	add	r0, pc, r0
   12340:	strh	r6, [r0]
   12344:	add	r0, r4, r4, lsl #1
   12348:	ldr	r1, [pc, #116]	; 123c4 <getc@plt+0x1848>
   1234c:	add	r0, r3, r0, lsl #2
   12350:	ldr	r0, [r0, #8]
   12354:	add	r1, pc, r1
   12358:	str	r0, [r1, r9, lsl #2]
   1235c:	mov	r0, r6
   12360:	add	r1, r4, r4, lsl #1
   12364:	mov	r2, r3
   12368:	ldr	r1, [r2, r1, lsl #2]!
   1236c:	ldr	r2, [r2, #4]
   12370:	cmp	r1, r2
   12374:	bhi	12284 <getc@plt+0x1708>
   12378:	strb	r9, [r7, r1]
   1237c:	add	r1, r1, #1
   12380:	cmp	r1, r2
   12384:	bls	12378 <getc@plt+0x17fc>
   12388:	b	12284 <getc@plt+0x1708>
   1238c:	ldr	r0, [sp]
   12390:	ldrb	r0, [r7, r0]
   12394:	sub	sp, fp, #28
   12398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1239c:	ldr	r0, [pc, #36]	; 123c8 <getc@plt+0x184c>
   123a0:	add	r0, pc, r0
   123a4:	bl	12a48 <error@@Base>
   123a8:	andeq	r2, r1, r0, ror #29
   123ac:	ldrdeq	r2, [r1], -r2	; <UNPREDICTABLE>
   123b0:	andeq	r2, r1, r8, lsr r8
   123b4:	andseq	r2, r2, r8, lsl #29
   123b8:	andseq	r2, r2, ip, asr lr
   123bc:	muleq	r1, r4, r7
   123c0:	strdeq	r2, [r1], -r8
   123c4:	andseq	r2, r2, r4, ror #27
   123c8:	andeq	r1, r0, r5, lsl #9
   123cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123d0:	add	fp, sp, #28
   123d4:	push	{r0}		; (str r0, [sp, #-4]!)
   123d8:	ldr	r0, [pc, #364]	; 1254c <getc@plt+0x19d0>
   123dc:	add	r0, pc, r0
   123e0:	ldrh	r6, [r0]
   123e4:	cmp	r6, #0
   123e8:	bne	12510 <getc@plt+0x1994>
   123ec:	ldr	r3, [pc, #348]	; 12550 <getc@plt+0x19d4>
   123f0:	ldr	r7, [pc, #348]	; 12554 <getc@plt+0x19d8>
   123f4:	mov	r6, #0
   123f8:	mov	r4, #0
   123fc:	mov	r8, #0
   12400:	add	r3, pc, r3
   12404:	add	r7, pc, r7
   12408:	b	1241c <getc@plt+0x18a0>
   1240c:	add	r8, r8, #1
   12410:	mov	r4, r0
   12414:	cmp	r8, #91	; 0x5b
   12418:	beq	12510 <getc@plt+0x1994>
   1241c:	sxth	sl, r4
   12420:	cmp	sl, #1
   12424:	blt	12494 <getc@plt+0x1918>
   12428:	add	r0, r8, r8, lsl #1
   1242c:	ldr	r1, [pc, #292]	; 12558 <getc@plt+0x19dc>
   12430:	add	r0, r3, r0, lsl #2
   12434:	ldr	r5, [r0, #8]
   12438:	ldr	r1, [pc, r1]
   1243c:	mov	r0, r5
   12440:	bl	10a14 <strcmp@plt>
   12444:	cmp	r0, #0
   12448:	mov	r0, r6
   1244c:	mov	r9, #0
   12450:	beq	1249c <getc@plt+0x1920>
   12454:	ldr	r4, [pc, #256]	; 1255c <getc@plt+0x19e0>
   12458:	sxth	sl, r6
   1245c:	mov	r1, #1
   12460:	add	r4, pc, r4
   12464:	mov	r9, r1
   12468:	cmp	r1, sl
   1246c:	bge	12488 <getc@plt+0x190c>
   12470:	ldr	r1, [r4, r9, lsl #2]
   12474:	mov	r0, r5
   12478:	bl	10a14 <strcmp@plt>
   1247c:	add	r1, r9, #1
   12480:	cmp	r0, #0
   12484:	bne	12464 <getc@plt+0x18e8>
   12488:	mov	r0, r6
   1248c:	mov	r4, r6
   12490:	b	1249c <getc@plt+0x1920>
   12494:	mov	r0, r4
   12498:	mov	r9, #0
   1249c:	ldr	r3, [pc, #188]	; 12560 <getc@plt+0x19e4>
   124a0:	cmp	r9, sl
   124a4:	add	r3, pc, r3
   124a8:	bne	124e4 <getc@plt+0x1968>
   124ac:	uxth	r0, r4
   124b0:	cmp	r0, #256	; 0x100
   124b4:	beq	12540 <getc@plt+0x19c4>
   124b8:	ldr	r0, [pc, #164]	; 12564 <getc@plt+0x19e8>
   124bc:	add	r6, r4, #1
   124c0:	add	r0, pc, r0
   124c4:	strh	r6, [r0]
   124c8:	add	r0, r8, r8, lsl #1
   124cc:	ldr	r1, [pc, #148]	; 12568 <getc@plt+0x19ec>
   124d0:	add	r0, r3, r0, lsl #2
   124d4:	ldr	r0, [r0, #8]
   124d8:	add	r1, pc, r1
   124dc:	str	r0, [r1, r9, lsl #2]
   124e0:	mov	r0, r6
   124e4:	add	r1, r8, r8, lsl #1
   124e8:	mov	r2, r3
   124ec:	ldr	r1, [r2, r1, lsl #2]!
   124f0:	ldr	r2, [r2, #4]
   124f4:	cmp	r1, r2
   124f8:	bhi	1240c <getc@plt+0x1890>
   124fc:	strb	r9, [r7, r1]
   12500:	add	r1, r1, #1
   12504:	cmp	r1, r2
   12508:	bls	124fc <getc@plt+0x1980>
   1250c:	b	1240c <getc@plt+0x1890>
   12510:	ldr	r0, [sp]
   12514:	sxth	r1, r6
   12518:	uxtb	r0, r0
   1251c:	cmp	r0, r1
   12520:	ldrlt	r1, [pc, #68]	; 1256c <getc@plt+0x19f0>
   12524:	addlt	r1, pc, r1
   12528:	ldrlt	r0, [r1, r0, lsl #2]
   1252c:	sublt	sp, fp, #28
   12530:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12534:	ldr	r0, [pc, #56]	; 12574 <getc@plt+0x19f8>
   12538:	add	r0, pc, r0
   1253c:	bl	12a48 <error@@Base>
   12540:	ldr	r0, [pc, #40]	; 12570 <getc@plt+0x19f4>
   12544:	add	r0, pc, r0
   12548:	bl	12a48 <error@@Base>
   1254c:	andeq	r2, r1, r8, asr sp
   12550:			; <UNDEFINED> instruction: 0x000126b4
   12554:	andeq	r2, r1, r2, lsr sp
   12558:	andseq	r2, r2, r0, lsl #26
   1255c:			; <UNDEFINED> instruction: 0x00122cd8
   12560:	andeq	r2, r1, r0, lsl r6
   12564:	andeq	r2, r1, r4, ror ip
   12568:	andseq	r2, r2, r0, ror #24
   1256c:	andseq	r2, r2, r4, lsl ip
   12570:	andeq	r1, r0, r1, ror #5
   12574:	ldrdeq	r1, [r0], -r5
   12578:	push	{fp, lr}
   1257c:	mov	fp, sp
   12580:	bl	10a08 <calloc@plt>
   12584:	cmp	r0, #0
   12588:	popne	{fp, pc}
   1258c:	ldr	r0, [pc, #4]	; 12598 <getc@plt+0x1a1c>
   12590:	add	r0, pc, r0
   12594:	bl	12a48 <error@@Base>
   12598:	andeq	r1, r0, r3, ror #16
   1259c:	push	{r4, r5, r6, sl, fp, lr}
   125a0:	add	fp, sp, #16
   125a4:	ldrb	r3, [r0]
   125a8:	ldrb	ip, [r1]
   125ac:	mov	r2, r0
   125b0:	mov	r0, #0
   125b4:	cmp	r3, #0
   125b8:	beq	125f8 <getc@plt+0x1a7c>
   125bc:	add	r6, r2, #1
   125c0:	add	lr, r1, #1
   125c4:	mov	r2, #0
   125c8:	uxtb	r4, ip
   125cc:	uxtb	r5, r3
   125d0:	cmp	r5, r4
   125d4:	bne	12608 <getc@plt+0x1a8c>
   125d8:	ldrb	r3, [r6, r2]
   125dc:	ldrb	ip, [lr, r2]
   125e0:	add	r2, r2, #1
   125e4:	cmp	r3, #0
   125e8:	bne	125c8 <getc@plt+0x1a4c>
   125ec:	cmp	ip, #0
   125f0:	bne	12604 <getc@plt+0x1a88>
   125f4:	pop	{r4, r5, r6, sl, fp, pc}
   125f8:	mov	r2, #0
   125fc:	cmp	ip, #0
   12600:	beq	125f4 <getc@plt+0x1a78>
   12604:	mov	r3, #0
   12608:	ldrb	r1, [r1, r2]
   1260c:	uxtb	r2, r3
   12610:	mov	r0, #1
   12614:	cmp	r2, r1
   12618:	mvncc	r0, #0
   1261c:	pop	{r4, r5, r6, sl, fp, pc}
   12620:	push	{r4, r5, fp, lr}
   12624:	add	fp, sp, #8
   12628:	mov	r5, r1
   1262c:	cmp	r0, #0
   12630:	beq	12664 <getc@plt+0x1ae8>
   12634:	mov	r1, r5
   12638:	mov	r4, r0
   1263c:	bl	10a20 <fopen@plt>
   12640:	cmp	r0, #0
   12644:	popne	{r4, r5, fp, pc}
   12648:	ldrb	r0, [r5]
   1264c:	cmp	r0, #119	; 0x77
   12650:	bne	12688 <getc@plt+0x1b0c>
   12654:	ldr	r0, [pc, #72]	; 126a4 <getc@plt+0x1b28>
   12658:	mov	r1, r4
   1265c:	add	r0, pc, r0
   12660:	bl	12a98 <error@@Base+0x50>
   12664:	ldrb	r0, [r5]
   12668:	ldr	r1, [pc, #40]	; 12698 <getc@plt+0x1b1c>
   1266c:	ldr	r1, [pc, r1]
   12670:	ldr	r2, [pc, #36]	; 1269c <getc@plt+0x1b20>
   12674:	cmp	r0, #114	; 0x72
   12678:	ldr	r2, [pc, r2]
   1267c:	moveq	r2, r1
   12680:	ldr	r0, [r2]
   12684:	pop	{r4, r5, fp, pc}
   12688:	ldr	r0, [pc, #16]	; 126a0 <getc@plt+0x1b24>
   1268c:	mov	r1, r4
   12690:	add	r0, pc, r0
   12694:	bl	12a98 <error@@Base+0x50>
   12698:	andeq	r2, r1, r8, lsr sl
   1269c:	andeq	r2, r1, r4, lsr sl
   126a0:	muleq	r0, r3, r7
   126a4:			; <UNDEFINED> instruction: 0x000017b1
   126a8:	ldr	r1, [pc, #40]	; 126d8 <getc@plt+0x1b5c>
   126ac:	ldr	r1, [pc, r1]
   126b0:	ldr	r1, [r1]
   126b4:	cmp	r1, r0
   126b8:	bxeq	lr
   126bc:	ldr	r1, [pc, #24]	; 126dc <getc@plt+0x1b60>
   126c0:	ldr	r1, [pc, r1]
   126c4:	ldr	r1, [r1]
   126c8:	cmp	r1, r0
   126cc:	beq	126d4 <getc@plt+0x1b58>
   126d0:	b	10b34 <fclose@plt>
   126d4:	bx	lr
   126d8:	strdeq	r2, [r1], -r8
   126dc:	andeq	r2, r1, ip, ror #19
   126e0:	push	{fp, lr}
   126e4:	mov	fp, sp
   126e8:	sub	sp, sp, #88	; 0x58
   126ec:	mov	r1, r0
   126f0:	mov	r2, sp
   126f4:	mov	r0, #3
   126f8:	bl	10a8c <__xstat@plt>
   126fc:	clz	r0, r0
   12700:	lsr	r0, r0, #5
   12704:	mov	sp, fp
   12708:	pop	{fp, pc}
   1270c:	push	{r4, r5, fp, lr}
   12710:	add	fp, sp, #8
   12714:	sub	sp, sp, #104	; 0x68
   12718:	ldr	r0, [pc, #92]	; 1277c <getc@plt+0x1c00>
   1271c:	add	r0, pc, r0
   12720:	ldrh	r1, [r0]
   12724:	add	r5, r1, #1
   12728:	strh	r5, [r0]
   1272c:	ldr	r0, [pc, #76]	; 12780 <getc@plt+0x1c04>
   12730:	ldr	r0, [pc, r0]
   12734:	ldr	r4, [r0]
   12738:	bl	10ae0 <getpid@plt>
   1273c:	mov	r3, r0
   12740:	sxth	r0, r5
   12744:	add	r5, sp, #4
   12748:	mov	r2, r4
   1274c:	str	r0, [sp]
   12750:	mov	r0, r5
   12754:	ldr	r1, [pc, #40]	; 12784 <getc@plt+0x1c08>
   12758:	add	r1, pc, r1
   1275c:	bl	10b40 <sprintf@plt>
   12760:	mov	r0, r5
   12764:	bl	10a5c <strdup@plt>
   12768:	mov	r4, r0
   1276c:	bl	10a74 <unlink@plt>
   12770:	mov	r0, r4
   12774:	sub	sp, fp, #8
   12778:	pop	{r4, r5, fp, pc}
   1277c:	andseq	r2, r2, ip, lsl lr
   12780:	andeq	r2, r1, r8, ror #18
   12784:	strdeq	r1, [r0], -r4
   12788:	push	{r4, sl, fp, lr}
   1278c:	add	fp, sp, #8
   12790:	mov	r4, r0
   12794:	bl	10b10 <strlen@plt>
   12798:	sub	r0, r0, #1
   1279c:	sxth	r0, r0
   127a0:	cmp	r0, #0
   127a4:	bmi	127b4 <getc@plt+0x1c38>
   127a8:	ldrb	r1, [r4, r0]
   127ac:	cmp	r1, #47	; 0x2f
   127b0:	bne	12798 <getc@plt+0x1c1c>
   127b4:	add	r0, r0, r4
   127b8:	add	r0, r0, #1
   127bc:	pop	{r4, sl, fp, pc}
   127c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127c4:	add	fp, sp, #28
   127c8:	sub	sp, sp, #12
   127cc:	stmib	sp, {r0, r1}
   127d0:	mov	r6, r3
   127d4:	str	r2, [sp]
   127d8:	ldr	r4, [r1]
   127dc:	mov	r0, r4
   127e0:	bl	10b10 <strlen@plt>
   127e4:	sub	r0, r0, #1
   127e8:	sxth	r0, r0
   127ec:	cmp	r0, #0
   127f0:	bmi	12800 <getc@plt+0x1c84>
   127f4:	ldrb	r1, [r4, r0]
   127f8:	cmp	r1, #47	; 0x2f
   127fc:	bne	127e4 <getc@plt+0x1c68>
   12800:	ldr	r1, [pc, #484]	; 129ec <getc@plt+0x1e70>
   12804:	add	r0, r0, r4
   12808:	add	r0, r0, #1
   1280c:	ldr	r1, [pc, r1]
   12810:	str	r0, [r1]
   12814:	mov	r0, #2
   12818:	ldr	r4, [pc, #464]	; 129f0 <getc@plt+0x1e74>
   1281c:	add	r4, pc, r4
   12820:	mov	r1, r4
   12824:	bl	10ac8 <__sysv_signal@plt>
   12828:	mov	r0, #15
   1282c:	mov	r1, r4
   12830:	bl	10ac8 <__sysv_signal@plt>
   12834:	ldr	r0, [sp, #4]
   12838:	ldr	r5, [r0]
   1283c:	cmp	r5, #1
   12840:	bne	12858 <getc@plt+0x1cdc>
   12844:	ldr	r0, [pc, #424]	; 129f4 <getc@plt+0x1e78>
   12848:	ldr	r0, [pc, r0]
   1284c:	ldrb	r0, [r0]
   12850:	cmp	r0, #0
   12854:	bne	129d4 <getc@plt+0x1e58>
   12858:	ldr	ip, [sp, #8]
   1285c:	mov	r8, #0
   12860:	cmp	r5, #2
   12864:	blt	129b0 <getc@plt+0x1e34>
   12868:	mov	r8, #0
   1286c:	mov	r7, #1
   12870:	mov	r9, #1
   12874:	ldr	r4, [ip, r7, lsl #2]
   12878:	ldrb	r0, [r4]
   1287c:	cmp	r0, #45	; 0x2d
   12880:	bne	12958 <getc@plt+0x1ddc>
   12884:	ldrb	sl, [r4, #1]
   12888:	cmp	sl, #0
   1288c:	beq	12958 <getc@plt+0x1ddc>
   12890:	mov	r0, r4
   12894:	bl	10b10 <strlen@plt>
   12898:	mov	r2, r0
   1289c:	ldr	r0, [pc, #340]	; 129f8 <getc@plt+0x1e7c>
   128a0:	mov	r1, r4
   128a4:	add	r0, pc, r0
   128a8:	bl	10b64 <strncmp@plt>
   128ac:	cmp	r0, #0
   128b0:	beq	129d4 <getc@plt+0x1e58>
   128b4:	ldr	ip, [sp, #8]
   128b8:	add	r1, r7, #1
   128bc:	mov	r0, #0
   128c0:	cmp	r1, r5
   128c4:	ldrlt	r0, [ip, r1, lsl #2]
   128c8:	cmp	r6, #0
   128cc:	ldrbne	r2, [r6]
   128d0:	cmpne	r2, #0
   128d4:	beq	129c4 <getc@plt+0x1e48>
   128d8:	mov	r1, #0
   128dc:	cmp	sl, r2
   128e0:	beq	12908 <getc@plt+0x1d8c>
   128e4:	mov	r2, #1
   128e8:	sxth	r1, r2
   128ec:	add	r3, r1, r1, lsl #1
   128f0:	ldrb	r3, [r6, r3, lsl #2]
   128f4:	cmp	r3, #0
   128f8:	beq	129c4 <getc@plt+0x1e48>
   128fc:	add	r2, r2, #1
   12900:	cmp	sl, r3
   12904:	bne	128e8 <getc@plt+0x1d6c>
   12908:	add	r1, r1, r1, lsl #1
   1290c:	add	r3, r6, r1, lsl #2
   12910:	ldr	r1, [r3, #4]
   12914:	cmp	r1, #0
   12918:	beq	12978 <getc@plt+0x1dfc>
   1291c:	mov	r2, r4
   12920:	cmp	r0, #0
   12924:	ldrb	r7, [r2, #2]!
   12928:	cmpeq	r7, #0
   1292c:	beq	12978 <getc@plt+0x1dfc>
   12930:	ldr	r3, [r1]
   12934:	cmp	r3, #0
   12938:	bne	129dc <getc@plt+0x1e60>
   1293c:	cmp	r7, #0
   12940:	movne	r0, r2
   12944:	str	r0, [r1]
   12948:	ldrb	r0, [r2]
   1294c:	cmp	r0, #0
   12950:	addeq	r9, r9, #1
   12954:	b	12964 <getc@plt+0x1de8>
   12958:	sxth	r0, r8
   1295c:	add	r8, r8, #1
   12960:	str	r4, [ip, r0, lsl #2]
   12964:	add	r9, r9, #1
   12968:	sxth	r7, r9
   1296c:	cmp	r5, r7
   12970:	bgt	12874 <getc@plt+0x1cf8>
   12974:	b	129b0 <getc@plt+0x1e34>
   12978:	ldr	r0, [r3, #8]
   1297c:	cmp	r0, #0
   12980:	beq	129c4 <getc@plt+0x1e48>
   12984:	ldrb	r1, [r4, #2]
   12988:	cmp	r1, #0
   1298c:	bne	129c4 <getc@plt+0x1e48>
   12990:	ldrb	r1, [r0]
   12994:	cmp	r1, #0
   12998:	bne	129dc <getc@plt+0x1e60>
   1299c:	mov	r1, #1
   129a0:	strb	r1, [r0]
   129a4:	ldr	r0, [sp, #4]
   129a8:	ldr	r5, [r0]
   129ac:	b	12964 <getc@plt+0x1de8>
   129b0:	ldr	r1, [sp, #4]
   129b4:	sxth	r0, r8
   129b8:	str	r0, [r1]
   129bc:	sub	sp, fp, #28
   129c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129c4:	ldr	r0, [pc, #52]	; 12a00 <getc@plt+0x1e84>
   129c8:	mov	r1, r4
   129cc:	add	r0, pc, r0
   129d0:	bl	12a98 <error@@Base+0x50>
   129d4:	ldr	r0, [sp]
   129d8:	bl	12b74 <error@@Base+0x12c>
   129dc:	ldr	r0, [pc, #24]	; 129fc <getc@plt+0x1e80>
   129e0:	mov	r1, r4
   129e4:	add	r0, pc, r0
   129e8:	bl	12a98 <error@@Base+0x50>
   129ec:	andeq	r2, r1, ip, lsl #17
   129f0:	andeq	r0, r0, r8, lsl r3
   129f4:	andeq	r2, r1, ip, lsr r8
   129f8:	andeq	r1, r0, r5, asr #11
   129fc:	andeq	r1, r0, r9, lsr #9
   12a00:			; <UNDEFINED> instruction: 0x000014b2
   12a04:	push	{fp, lr}
   12a08:	mov	fp, sp
   12a0c:	mov	r0, #0
   12a10:	bl	12a14 <getc@plt+0x1e98>
   12a14:	push	{fp, lr}
   12a18:	mov	fp, sp
   12a1c:	mov	r4, r0
   12a20:	ldr	r0, [pc, #28]	; 12a44 <getc@plt+0x1ec8>
   12a24:	ldr	r0, [pc, r0]
   12a28:	ldr	r0, [r0]
   12a2c:	cmp	r0, #0
   12a30:	beq	12a38 <getc@plt+0x1ebc>
   12a34:	blx	r0
   12a38:	bl	12bd4 <error@@Base+0x18c>
   12a3c:	mov	r0, r4
   12a40:	bl	10aec <exit@plt>
   12a44:	andeq	r2, r1, r8, ror r6

00012a48 <error@@Base>:
   12a48:	push	{fp, lr}
   12a4c:	mov	fp, sp
   12a50:	mov	r3, r0
   12a54:	ldr	r0, [pc, #44]	; 12a88 <error@@Base+0x40>
   12a58:	ldr	r0, [pc, r0]
   12a5c:	ldr	r2, [r0]
   12a60:	ldr	r0, [pc, #36]	; 12a8c <error@@Base+0x44>
   12a64:	ldr	r0, [pc, r0]
   12a68:	ldr	r0, [r0]
   12a6c:	ldr	r1, [pc, #28]	; 12a90 <error@@Base+0x48>
   12a70:	add	r1, pc, r1
   12a74:	bl	10b1c <fprintf@plt>
   12a78:	ldr	r0, [pc, #20]	; 12a94 <error@@Base+0x4c>
   12a7c:	ldr	r0, [pc, r0]
   12a80:	ldr	r0, [r0]
   12a84:	bl	12a14 <getc@plt+0x1e98>
   12a88:	andeq	r2, r1, r0, asr #12
   12a8c:	andeq	r2, r1, ip, lsr #12
   12a90:	andeq	r1, r0, r7, asr #7
   12a94:	andeq	r2, r1, r4, lsr r6
   12a98:	push	{fp, lr}
   12a9c:	mov	fp, sp
   12aa0:	sub	sp, sp, #8
   12aa4:	mov	r3, r0
   12aa8:	ldr	r0, [pc, #48]	; 12ae0 <error@@Base+0x98>
   12aac:	ldr	r0, [pc, r0]
   12ab0:	ldr	r2, [r0]
   12ab4:	ldr	r0, [pc, #40]	; 12ae4 <error@@Base+0x9c>
   12ab8:	ldr	r0, [pc, r0]
   12abc:	str	r1, [sp]
   12ac0:	ldr	r0, [r0]
   12ac4:	ldr	r1, [pc, #28]	; 12ae8 <error@@Base+0xa0>
   12ac8:	add	r1, pc, r1
   12acc:	bl	10b1c <fprintf@plt>
   12ad0:	ldr	r0, [pc, #20]	; 12aec <error@@Base+0xa4>
   12ad4:	ldr	r0, [pc, r0]
   12ad8:	ldr	r0, [r0]
   12adc:	bl	12a14 <getc@plt+0x1e98>
   12ae0:	andeq	r2, r1, ip, ror #11
   12ae4:	ldrdeq	r2, [r1], -r8
   12ae8:	andeq	r1, r0, r7, ror r3
   12aec:	ldrdeq	r2, [r1], -ip
   12af0:	push	{fp, lr}
   12af4:	mov	fp, sp
   12af8:	sub	sp, sp, #8
   12afc:	mov	r3, r0
   12b00:	ldr	r0, [pc, #40]	; 12b30 <error@@Base+0xe8>
   12b04:	ldr	r0, [pc, r0]
   12b08:	ldr	r2, [r0]
   12b0c:	ldr	r0, [pc, #32]	; 12b34 <error@@Base+0xec>
   12b10:	ldr	r0, [pc, r0]
   12b14:	str	r1, [sp]
   12b18:	ldr	r0, [r0]
   12b1c:	ldr	r1, [pc, #20]	; 12b38 <error@@Base+0xf0>
   12b20:	add	r1, pc, r1
   12b24:	bl	10b1c <fprintf@plt>
   12b28:	mov	sp, fp
   12b2c:	pop	{fp, pc}
   12b30:	muleq	r1, r4, r5
   12b34:	andeq	r2, r1, r0, lsl #11
   12b38:	andeq	r1, r0, pc, lsl r3
   12b3c:	push	{fp, lr}
   12b40:	mov	fp, sp
   12b44:	ldr	r0, [pc, #32]	; 12b6c <error@@Base+0x124>
   12b48:	add	r0, pc, r0
   12b4c:	ldrb	r1, [r0]
   12b50:	cmp	r1, #1
   12b54:	popeq	{fp, pc}
   12b58:	mov	r1, #1
   12b5c:	strb	r1, [r0]
   12b60:	ldr	r0, [pc, #8]	; 12b70 <error@@Base+0x128>
   12b64:	add	r0, pc, r0
   12b68:	bl	12a48 <error@@Base>
   12b6c:			; <UNDEFINED> instruction: 0x001229f2
   12b70:	strdeq	r1, [r0], -r6
   12b74:	push	{fp, lr}
   12b78:	mov	fp, sp
   12b7c:	mov	r3, r0
   12b80:	ldr	r0, [pc, #60]	; 12bc4 <error@@Base+0x17c>
   12b84:	ldr	r0, [pc, r0]
   12b88:	ldr	r0, [r0]
   12b8c:	cmp	r0, #0
   12b90:	bne	12bbc <error@@Base+0x174>
   12b94:	ldr	r0, [pc, #44]	; 12bc8 <error@@Base+0x180>
   12b98:	ldr	r0, [pc, r0]
   12b9c:	ldr	r2, [r0]
   12ba0:	ldr	r0, [pc, #36]	; 12bcc <error@@Base+0x184>
   12ba4:	ldr	r0, [pc, r0]
   12ba8:	ldr	r0, [r0]
   12bac:	ldr	r1, [pc, #28]	; 12bd0 <error@@Base+0x188>
   12bb0:	add	r1, pc, r1
   12bb4:	bl	10b1c <fprintf@plt>
   12bb8:	bl	12a04 <getc@plt+0x1e88>
   12bbc:	blx	r0
   12bc0:	bl	12a04 <getc@plt+0x1e88>
   12bc4:	andeq	r2, r1, r8, lsl #10
   12bc8:	andeq	r2, r1, r0, lsl #10
   12bcc:	andeq	r2, r1, ip, ror #9
   12bd0:			; <UNDEFINED> instruction: 0x000012bf
   12bd4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12bd8:	add	fp, sp, #24
   12bdc:	sub	sp, sp, #104	; 0x68
   12be0:	ldr	r8, [pc, #124]	; 12c64 <error@@Base+0x21c>
   12be4:	add	r8, pc, r8
   12be8:	ldrsh	r0, [r8]
   12bec:	cmp	r0, #1
   12bf0:	blt	12c5c <error@@Base+0x214>
   12bf4:	ldr	r9, [pc, #108]	; 12c68 <error@@Base+0x220>
   12bf8:	mov	r7, #1
   12bfc:	add	r4, sp, #4
   12c00:	ldr	r9, [pc, r9]
   12c04:	ldr	r5, [pc, #96]	; 12c6c <error@@Base+0x224>
   12c08:	add	r5, pc, r5
   12c0c:	ldr	r6, [r9]
   12c10:	bl	10ae0 <getpid@plt>
   12c14:	mov	r3, r0
   12c18:	sxth	r0, r7
   12c1c:	mov	r1, r5
   12c20:	mov	r2, r6
   12c24:	str	r0, [sp]
   12c28:	mov	r0, r4
   12c2c:	bl	10b40 <sprintf@plt>
   12c30:	mov	r0, r4
   12c34:	bl	10a5c <strdup@plt>
   12c38:	mov	r6, r0
   12c3c:	bl	10a74 <unlink@plt>
   12c40:	mov	r0, r6
   12c44:	bl	10a2c <free@plt>
   12c48:	add	r0, r7, #1
   12c4c:	sxth	r7, r0
   12c50:	ldrsh	r0, [r8]
   12c54:	cmp	r7, r0
   12c58:	ble	12c0c <error@@Base+0x1c4>
   12c5c:	sub	sp, fp, #24
   12c60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12c64:	andseq	r2, r2, r4, asr r9
   12c68:	muleq	r1, r8, r4
   12c6c:	andeq	r1, r0, r4, asr #4
   12c70:	push	{r4, r5, r6, sl, fp, lr}
   12c74:	add	fp, sp, #16
   12c78:	mov	r5, r1
   12c7c:	mov	r6, r0
   12c80:	mov	r0, #1
   12c84:	mov	r1, #16
   12c88:	mov	r4, r2
   12c8c:	bl	12578 <getc@plt+0x19fc>
   12c90:	str	r4, [r0, #12]
   12c94:	mov	r1, r0
   12c98:	strb	r5, [r0, #8]
   12c9c:	mov	r0, r6
   12ca0:	pop	{r4, r5, r6, sl, fp, lr}
   12ca4:	b	1336c <error@@Base+0x924>
   12ca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cac:	add	fp, sp, #28
   12cb0:	sub	sp, sp, #124	; 0x7c
   12cb4:	mov	r4, r2
   12cb8:	mov	r2, r1
   12cbc:	cmp	r1, #0
   12cc0:	str	r0, [sp, #16]
   12cc4:	bne	12cd4 <error@@Base+0x28c>
   12cc8:	ldrb	r0, [r4]
   12ccc:	cmp	r0, #0
   12cd0:	bne	13014 <error@@Base+0x5cc>
   12cd4:	ldr	r0, [sp, #16]
   12cd8:	ldr	r0, [r0, #4]
   12cdc:	str	r0, [sp, #4]
   12ce0:	mov	r0, r2
   12ce4:	ldr	r1, [pc, #828]	; 13028 <error@@Base+0x5e0>
   12ce8:	add	r1, pc, r1
   12cec:	bl	12620 <getc@plt+0x1aa4>
   12cf0:	mov	r6, r0
   12cf4:	ldrb	r0, [r4]
   12cf8:	cmp	r0, #0
   12cfc:	beq	12d44 <error@@Base+0x2fc>
   12d00:	add	r0, sp, #20
   12d04:	mov	r1, #99	; 0x63
   12d08:	mov	r2, r6
   12d0c:	bl	10a44 <fgets@plt>
   12d10:	cmp	r0, #0
   12d14:	beq	12d34 <error@@Base+0x2ec>
   12d18:	ldr	r1, [pc, #780]	; 1302c <error@@Base+0x5e4>
   12d1c:	add	r0, sp, #20
   12d20:	mov	r2, #51	; 0x33
   12d24:	add	r1, pc, r1
   12d28:	bl	10af8 <bcmp@plt>
   12d2c:	cmp	r0, #0
   12d30:	beq	12fa0 <error@@Base+0x558>
   12d34:	mov	r0, r6
   12d38:	bl	10a68 <rewind@plt>
   12d3c:	mov	r5, #0
   12d40:	strb	r5, [r4, #11]
   12d44:	ldr	r9, [r4, #4]
   12d48:	ldrb	r8, [r4, #1]
   12d4c:	mov	r0, r6
   12d50:	str	r4, [sp, #8]
   12d54:	cmp	r9, #0
   12d58:	movweq	r9, #94	; 0x5e
   12d5c:	bl	10b7c <getc@plt>
   12d60:	cmn	r0, #1
   12d64:	beq	12e30 <error@@Base+0x3e8>
   12d68:	add	r1, sp, #20
   12d6c:	mov	sl, #0
   12d70:	sub	r4, fp, #32
   12d74:	add	r1, r1, #1
   12d78:	str	r1, [sp, #12]
   12d7c:	b	12db8 <error@@Base+0x370>
   12d80:	mov	r0, #1
   12d84:	mov	r1, #16
   12d88:	bl	12578 <getc@plt+0x19fc>
   12d8c:	str	r5, [r0, #12]
   12d90:	mov	r1, r0
   12d94:	strb	sl, [r0, #8]
   12d98:	ldr	r0, [sp, #16]
   12d9c:	bl	1336c <error@@Base+0x924>
   12da0:	mov	r7, #0
   12da4:	mov	r0, r6
   12da8:	bl	10b7c <getc@plt>
   12dac:	cmn	r0, #1
   12db0:	mov	sl, r7
   12db4:	beq	12e30 <error@@Base+0x3e8>
   12db8:	ldr	r1, [pc, #628]	; 13034 <error@@Base+0x5ec>
   12dbc:	ldr	r1, [pc, r1]
   12dc0:	add	r1, r1, r0
   12dc4:	ldrsb	r5, [r1]
   12dc8:	cmp	r5, #0
   12dcc:	ble	12ff4 <error@@Base+0x5ac>
   12dd0:	cmp	r5, #1
   12dd4:	strb	r0, [sp, #20]
   12dd8:	beq	12dfc <error@@Base+0x3b4>
   12ddc:	ldr	r0, [sp, #12]
   12de0:	sub	r7, r5, #1
   12de4:	mov	r1, #1
   12de8:	mov	r3, r6
   12dec:	mov	r2, r7
   12df0:	bl	10aa4 <fread@plt>
   12df4:	cmp	r0, r7
   12df8:	bne	13008 <error@@Base+0x5c0>
   12dfc:	add	r0, sp, #20
   12e00:	mov	r1, #4
   12e04:	mov	r2, r4
   12e08:	bl	10ab0 <utf8proc_iterate@plt>
   12e0c:	cmp	r0, r5
   12e10:	bne	13000 <error@@Base+0x5b8>
   12e14:	ldr	r5, [fp, #-32]	; 0xffffffe0
   12e18:	cmp	r8, #0
   12e1c:	beq	12d80 <error@@Base+0x338>
   12e20:	mov	r7, #1
   12e24:	cmp	r5, r9
   12e28:	beq	12da4 <error@@Base+0x35c>
   12e2c:	b	12d80 <error@@Base+0x338>
   12e30:	mov	r0, r6
   12e34:	bl	126a8 <getc@plt+0x1b2c>
   12e38:	ldr	r8, [sp, #8]
   12e3c:	ldr	r9, [sp, #4]
   12e40:	ldrb	r0, [r8, #9]
   12e44:	cmp	r0, #0
   12e48:	beq	12f5c <error@@Base+0x514>
   12e4c:	cmp	r9, #0
   12e50:	ldr	r0, [sp, #16]
   12e54:	addne	r0, r9, #4
   12e58:	ldr	r6, [r0]
   12e5c:	cmp	r6, #0
   12e60:	beq	12f5c <error@@Base+0x514>
   12e64:	mov	r5, #32
   12e68:	mov	r7, r6
   12e6c:	b	12e80 <error@@Base+0x438>
   12e70:	str	r5, [r7, #12]
   12e74:	ldr	r7, [r7, #4]
   12e78:	cmp	r7, #0
   12e7c:	beq	12ed0 <error@@Base+0x488>
   12e80:	ldr	r4, [r7, #12]
   12e84:	mov	r0, r4
   12e88:	bl	10a38 <utf8proc_get_property@plt>
   12e8c:	cmp	r4, #10
   12e90:	ble	12eac <error@@Base+0x464>
   12e94:	sub	r1, r4, #11
   12e98:	cmp	r1, #3
   12e9c:	bcc	12e70 <error@@Base+0x428>
   12ea0:	cmp	r4, #160	; 0xa0
   12ea4:	beq	12e70 <error@@Base+0x428>
   12ea8:	b	12ebc <error@@Base+0x474>
   12eac:	cmp	r4, #9
   12eb0:	beq	12e70 <error@@Base+0x428>
   12eb4:	cmp	r4, #10
   12eb8:	beq	12e74 <error@@Base+0x42c>
   12ebc:	ldrsh	r0, [r0]
   12ec0:	sub	r0, r0, #23
   12ec4:	cmp	r0, #2
   12ec8:	strls	r5, [r7, #12]
   12ecc:	b	12e74 <error@@Base+0x42c>
   12ed0:	mov	r4, #0
   12ed4:	b	12f04 <error@@Base+0x4bc>
   12ed8:	tst	r4, #255	; 0xff
   12edc:	cmpne	r5, #0
   12ee0:	bne	12f30 <error@@Base+0x4e8>
   12ee4:	ldr	r0, [sp, #16]
   12ee8:	mov	r1, r6
   12eec:	bl	13464 <error@@Base+0xa1c>
   12ef0:	mov	r0, r6
   12ef4:	bl	10a2c <free@plt>
   12ef8:	cmp	r5, #0
   12efc:	mov	r6, r5
   12f00:	beq	12f5c <error@@Base+0x514>
   12f04:	ldr	r1, [r6, #12]
   12f08:	ldr	r5, [r6, #4]
   12f0c:	cmp	r1, #32
   12f10:	beq	12ed8 <error@@Base+0x490>
   12f14:	subs	r0, r1, #10
   12f18:	movwne	r0, #1
   12f1c:	tst	r4, #255	; 0xff
   12f20:	cmpeq	r1, #10
   12f24:	beq	12ee4 <error@@Base+0x49c>
   12f28:	mov	r4, r0
   12f2c:	b	12ef8 <error@@Base+0x4b0>
   12f30:	ldr	r1, [r5, #12]
   12f34:	cmp	r1, #10
   12f38:	beq	12ee4 <error@@Base+0x49c>
   12f3c:	mov	r0, #1
   12f40:	cmp	r1, #32
   12f44:	bne	12f28 <error@@Base+0x4e0>
   12f48:	ldrb	r0, [r6, #8]
   12f4c:	ldrb	r1, [r5, #8]
   12f50:	orr	r0, r1, r0
   12f54:	strb	r0, [r5, #8]
   12f58:	b	12ee4 <error@@Base+0x49c>
   12f5c:	ldrb	r0, [r8, #10]
   12f60:	cmp	r0, #0
   12f64:	beq	12f98 <error@@Base+0x550>
   12f68:	cmp	r9, #0
   12f6c:	ldr	r0, [sp, #16]
   12f70:	addne	r0, r9, #4
   12f74:	ldr	r4, [r0]
   12f78:	cmp	r4, #0
   12f7c:	beq	12f98 <error@@Base+0x550>
   12f80:	ldr	r0, [r4, #12]
   12f84:	bl	10a80 <utf8proc_tolower@plt>
   12f88:	str	r0, [r4, #12]
   12f8c:	ldr	r4, [r4, #4]
   12f90:	cmp	r4, #0
   12f94:	bne	12f80 <error@@Base+0x538>
   12f98:	sub	sp, fp, #28
   12f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fa0:	ldr	r8, [pc, #136]	; 13030 <error@@Base+0x5e8>
   12fa4:	mov	r7, #0
   12fa8:	add	r9, sp, #20
   12fac:	mov	r5, #1
   12fb0:	add	r8, pc, r8
   12fb4:	mov	r0, r9
   12fb8:	mov	r1, #99	; 0x63
   12fbc:	mov	r2, r6
   12fc0:	bl	10a44 <fgets@plt>
   12fc4:	cmp	r0, #0
   12fc8:	beq	12d40 <error@@Base+0x2f8>
   12fcc:	mov	r0, r9
   12fd0:	mov	r1, r8
   12fd4:	mov	r2, #56	; 0x38
   12fd8:	bl	10af8 <bcmp@plt>
   12fdc:	cmp	r0, #0
   12fe0:	addeq	r7, r7, #1
   12fe4:	uxth	r0, r7
   12fe8:	cmp	r0, #2
   12fec:	bcc	12fb4 <error@@Base+0x56c>
   12ff0:	b	12d40 <error@@Base+0x2f8>
   12ff4:	ldr	r0, [pc, #68]	; 13040 <error@@Base+0x5f8>
   12ff8:	add	r0, pc, r0
   12ffc:	bl	12a48 <error@@Base>
   13000:	bl	10b4c <utf8proc_errmsg@plt>
   13004:	bl	12a48 <error@@Base>
   13008:	ldr	r0, [pc, #52]	; 13044 <error@@Base+0x5fc>
   1300c:	add	r0, pc, r0
   13010:	bl	12a48 <error@@Base>
   13014:	ldr	r0, [pc, #28]	; 13038 <error@@Base+0x5f0>
   13018:	ldr	r1, [pc, #28]	; 1303c <error@@Base+0x5f4>
   1301c:	add	r0, pc, r0
   13020:	add	r1, pc, r1
   13024:	bl	12a98 <error@@Base+0x50>
   13028:	andeq	r1, r0, r0, lsl #5
   1302c:			; <UNDEFINED> instruction: 0x000011be
   13030:	andeq	r0, r0, sl, ror #30
   13034:	andeq	r2, r1, r4, ror #5
   13038:	andeq	r0, r0, r2, lsl #29
   1303c:	andeq	r0, r0, lr, lsl #29
   13040:	andeq	r0, r0, sl, asr pc
   13044:	andeq	r0, r0, lr, asr pc
   13048:	push	{fp, lr}
   1304c:	mov	fp, sp
   13050:	bl	10a50 <utf8proc_encode_char@plt>
   13054:	cmp	r0, #0
   13058:	sxtbgt	r0, r0
   1305c:	popgt	{fp, pc}
   13060:	ldr	r0, [pc, #4]	; 1306c <error@@Base+0x624>
   13064:	add	r0, pc, r0
   13068:	bl	12a48 <error@@Base>
   1306c:	andeq	r0, r0, r4, asr lr
   13070:	push	{r4, r5, r6, r7, fp, lr}
   13074:	add	fp, sp, #16
   13078:	mov	r6, r3
   1307c:	mov	r4, r2
   13080:	mov	r5, r1
   13084:	tst	r0, #255	; 0xff
   13088:	beq	130d0 <error@@Base+0x688>
   1308c:	mov	r0, #94	; 0x5e
   13090:	mov	r1, r4
   13094:	bl	10a50 <utf8proc_encode_char@plt>
   13098:	cmp	r0, #0
   1309c:	ble	13148 <error@@Base+0x700>
   130a0:	sxtb	r7, r0
   130a4:	cmp	r5, #10
   130a8:	bne	130dc <error@@Base+0x694>
   130ac:	ldr	r0, [pc, #224]	; 13194 <error@@Base+0x74c>
   130b0:	ldr	r1, [pc, #224]	; 13198 <error@@Base+0x750>
   130b4:	tst	r6, #255	; 0xff
   130b8:	add	r0, pc, r0
   130bc:	add	r1, pc, r1
   130c0:	moveq	r1, r0
   130c4:	add	r0, r4, r7
   130c8:	pop	{r4, r5, r6, r7, fp, lr}
   130cc:	b	10b40 <sprintf@plt>
   130d0:	mov	r7, #0
   130d4:	cmp	r5, #10
   130d8:	beq	130ac <error@@Base+0x664>
   130dc:	mov	r0, r5
   130e0:	bl	10a38 <utf8proc_get_property@plt>
   130e4:	cmp	r5, #32
   130e8:	beq	130fc <error@@Base+0x6b4>
   130ec:	ldrsh	r0, [r0]
   130f0:	sub	r1, r0, #1
   130f4:	cmp	r1, #22
   130f8:	bcs	13154 <error@@Base+0x70c>
   130fc:	mov	r0, r5
   13100:	bl	10b04 <utf8proc_category@plt>
   13104:	sub	r0, r0, #6
   13108:	cmp	r0, #2
   1310c:	bhi	13128 <error@@Base+0x6e0>
   13110:	add	r1, r4, r7
   13114:	movw	r0, #9676	; 0x25cc
   13118:	bl	10a50 <utf8proc_encode_char@plt>
   1311c:	cmp	r0, #0
   13120:	ble	13148 <error@@Base+0x700>
   13124:	sxtab	r7, r7, r0
   13128:	add	r1, r4, r7
   1312c:	mov	r0, r5
   13130:	bl	10a50 <utf8proc_encode_char@plt>
   13134:	cmp	r0, #0
   13138:	sxtabgt	r0, r7, r0
   1313c:	movgt	r1, #0
   13140:	strbgt	r1, [r4, r0]
   13144:	popgt	{r4, r5, r6, r7, fp, pc}
   13148:	ldr	r0, [pc, #64]	; 13190 <error@@Base+0x748>
   1314c:	add	r0, pc, r0
   13150:	bl	12a48 <error@@Base>
   13154:	cmp	r0, #29
   13158:	beq	130fc <error@@Base+0x6b4>
   1315c:	add	r0, r4, r7
   13160:	cmp	r5, #255	; 0xff
   13164:	bhi	13174 <error@@Base+0x72c>
   13168:	ldr	r1, [pc, #24]	; 13188 <error@@Base+0x740>
   1316c:	add	r1, pc, r1
   13170:	b	1317c <error@@Base+0x734>
   13174:	ldr	r1, [pc, #16]	; 1318c <error@@Base+0x744>
   13178:	add	r1, pc, r1
   1317c:	mov	r2, r5
   13180:	pop	{r4, r5, r6, r7, fp, lr}
   13184:	b	10b40 <sprintf@plt>
   13188:	andeq	r0, r0, r8, ror #26
   1318c:	andeq	r0, r0, r3, ror #26
   13190:	andeq	r0, r0, ip, ror #26
   13194:	andeq	r0, r0, r6, lsl #12
   13198:	andeq	r0, r0, r3, lsl lr
   1319c:	push	{r4, r5, r6, r7, fp, lr}
   131a0:	add	fp, sp, #16
   131a4:	sub	sp, sp, #16
   131a8:	mov	r6, r2
   131ac:	mov	r2, r1
   131b0:	ldr	r1, [pc, #180]	; 1326c <error@@Base+0x824>
   131b4:	mov	r5, r0
   131b8:	mov	r0, r2
   131bc:	add	r1, pc, r1
   131c0:	bl	12620 <getc@plt+0x1aa4>
   131c4:	mov	r4, r0
   131c8:	cmp	r6, #0
   131cc:	beq	13220 <error@@Base+0x7d8>
   131d0:	ldr	r0, [pc, #152]	; 13270 <error@@Base+0x828>
   131d4:	mov	r1, #55	; 0x37
   131d8:	mov	r2, #1
   131dc:	mov	r3, r4
   131e0:	add	r0, pc, r0
   131e4:	bl	10a98 <fwrite@plt>
   131e8:	ldr	r7, [pc, #132]	; 13274 <error@@Base+0x82c>
   131ec:	mov	r1, #55	; 0x37
   131f0:	mov	r2, #1
   131f4:	mov	r3, r4
   131f8:	add	r7, pc, r7
   131fc:	mov	r0, r7
   13200:	bl	10a98 <fwrite@plt>
   13204:	mov	r0, r4
   13208:	blx	r6
   1320c:	mov	r0, r7
   13210:	mov	r1, #55	; 0x37
   13214:	mov	r2, #1
   13218:	mov	r3, r4
   1321c:	bl	10a98 <fwrite@plt>
   13220:	ldr	r6, [r5]
   13224:	cmp	r6, #0
   13228:	beq	1325c <error@@Base+0x814>
   1322c:	add	r5, sp, #7
   13230:	ldr	r1, [r6, #12]
   13234:	ldrb	r0, [r6, #8]
   13238:	mov	r2, r5
   1323c:	mov	r3, #0
   13240:	bl	13070 <error@@Base+0x628>
   13244:	mov	r0, r5
   13248:	mov	r1, r4
   1324c:	bl	10b58 <fputs@plt>
   13250:	ldr	r6, [r6, #4]
   13254:	cmp	r6, #0
   13258:	bne	13230 <error@@Base+0x7e8>
   1325c:	mov	r0, r4
   13260:	bl	126a8 <getc@plt+0x1b2c>
   13264:	sub	sp, fp, #16
   13268:	pop	{r4, r5, r6, r7, fp, pc}
   1326c:	andeq	r0, r0, r1, asr #16
   13270:	andeq	r0, r0, r2, lsl #26
   13274:	andeq	r0, r0, r2, lsr #26
   13278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1327c:	add	fp, sp, #28
   13280:	sub	sp, sp, #4
   13284:	mov	r9, #0
   13288:	mov	sl, r0
   1328c:	str	r9, [sp]
   13290:	ldrb	r0, [r1]
   13294:	cmp	r0, #0
   13298:	beq	132f8 <error@@Base+0x8b0>
   1329c:	mov	r4, r1
   132a0:	mov	r8, sp
   132a4:	mov	r7, #1
   132a8:	mov	r0, r4
   132ac:	mvn	r1, #0
   132b0:	mov	r2, r8
   132b4:	bl	10ab0 <utf8proc_iterate@plt>
   132b8:	cmp	r0, #1
   132bc:	blt	13300 <error@@Base+0x8b8>
   132c0:	ldr	r5, [sp]
   132c4:	mov	r6, r0
   132c8:	mov	r0, #1
   132cc:	mov	r1, #16
   132d0:	bl	12578 <getc@plt+0x19fc>
   132d4:	str	r5, [r0, #12]
   132d8:	mov	r1, r0
   132dc:	strb	r9, [r0, #8]
   132e0:	mov	r0, sl
   132e4:	bl	1336c <error@@Base+0x924>
   132e8:	ldrb	r0, [r4, r6]!
   132ec:	cmp	r0, #0
   132f0:	bne	132a8 <error@@Base+0x860>
   132f4:	b	13304 <error@@Base+0x8bc>
   132f8:	mov	r7, #1
   132fc:	b	13304 <error@@Base+0x8bc>
   13300:	mov	r7, #0
   13304:	mov	r0, r7
   13308:	sub	sp, fp, #28
   1330c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13310:	vmov.i32	q8, #0	; 0x00000000
   13314:	vst1.32	{d16-d17}, [r0]
   13318:	bx	lr
   1331c:	push	{r4, r5, fp, lr}
   13320:	add	fp, sp, #8
   13324:	mov	r4, r0
   13328:	ldr	r0, [r0]
   1332c:	mov	r5, #0
   13330:	str	r5, [r1]
   13334:	cmp	r0, #0
   13338:	str	r0, [r1, #4]
   1333c:	str	r1, [r4]
   13340:	addeq	r0, r4, #4
   13344:	str	r1, [r0]
   13348:	ldr	r0, [r4, #8]
   1334c:	cmp	r0, #0
   13350:	beq	1335c <error@@Base+0x914>
   13354:	bl	10a2c <free@plt>
   13358:	str	r5, [r4, #8]
   1335c:	ldr	r0, [r4, #12]
   13360:	add	r0, r0, #1
   13364:	str	r0, [r4, #12]
   13368:	pop	{r4, r5, fp, pc}
   1336c:	push	{r4, r5, fp, lr}
   13370:	add	fp, sp, #8
   13374:	mov	r4, r0
   13378:	ldr	r0, [r0, #4]
   1337c:	mov	r5, #0
   13380:	mov	r2, r4
   13384:	cmp	r0, #0
   13388:	stm	r1, {r0, r5}
   1338c:	addne	r2, r0, #4
   13390:	str	r1, [r2]
   13394:	str	r1, [r4, #4]
   13398:	ldr	r0, [r4, #8]
   1339c:	cmp	r0, #0
   133a0:	beq	133ac <error@@Base+0x964>
   133a4:	bl	10a2c <free@plt>
   133a8:	str	r5, [r4, #8]
   133ac:	ldr	r0, [r4, #12]
   133b0:	add	r0, r0, #1
   133b4:	str	r0, [r4, #12]
   133b8:	pop	{r4, r5, fp, pc}
   133bc:	push	{r4, sl, fp, lr}
   133c0:	add	fp, sp, #8
   133c4:	mov	r4, r0
   133c8:	ldr	r0, [r2]
   133cc:	mov	r3, r4
   133d0:	cmp	r0, #0
   133d4:	stm	r1, {r0, r2}
   133d8:	addne	r3, r0, #4
   133dc:	str	r1, [r3]
   133e0:	str	r1, [r2]
   133e4:	ldr	r0, [r4, #8]
   133e8:	cmp	r0, #0
   133ec:	beq	133fc <error@@Base+0x9b4>
   133f0:	bl	10a2c <free@plt>
   133f4:	mov	r0, #0
   133f8:	str	r0, [r4, #8]
   133fc:	ldr	r0, [r4, #12]
   13400:	add	r0, r0, #1
   13404:	str	r0, [r4, #12]
   13408:	pop	{r4, sl, fp, pc}
   1340c:	push	{r4, sl, fp, lr}
   13410:	add	fp, sp, #8
   13414:	mov	r4, r0
   13418:	mov	r0, r1
   1341c:	cmp	r1, #0
   13420:	ldr	r3, [r0, #4]!
   13424:	moveq	r0, r4
   13428:	stm	r2, {r1, r3}
   1342c:	str	r2, [r0]
   13430:	cmp	r3, #0
   13434:	addeq	r3, r4, #4
   13438:	str	r2, [r3]
   1343c:	ldr	r0, [r4, #8]
   13440:	cmp	r0, #0
   13444:	beq	13454 <error@@Base+0xa0c>
   13448:	bl	10a2c <free@plt>
   1344c:	mov	r0, #0
   13450:	str	r0, [r4, #8]
   13454:	ldr	r0, [r4, #12]
   13458:	add	r0, r0, #1
   1345c:	str	r0, [r4, #12]
   13460:	pop	{r4, sl, fp, pc}
   13464:	push	{r4, r5, fp, lr}
   13468:	add	fp, sp, #8
   1346c:	mov	r4, r0
   13470:	ldm	r1, {r0, r2}
   13474:	cmp	r0, #0
   13478:	beq	13488 <error@@Base+0xa40>
   1347c:	str	r2, [r0, #4]
   13480:	ldr	r2, [r1, #4]
   13484:	b	1348c <error@@Base+0xa44>
   13488:	str	r2, [r4]
   1348c:	cmp	r2, #0
   13490:	mov	r5, #0
   13494:	addeq	r2, r4, #4
   13498:	str	r0, [r2]
   1349c:	str	r5, [r1]
   134a0:	str	r5, [r1, #4]
   134a4:	ldr	r0, [r4, #8]
   134a8:	cmp	r0, #0
   134ac:	beq	134b8 <error@@Base+0xa70>
   134b0:	bl	10a2c <free@plt>
   134b4:	str	r5, [r4, #8]
   134b8:	ldr	r0, [r4, #12]
   134bc:	sub	r0, r0, #1
   134c0:	str	r0, [r4, #12]
   134c4:	pop	{r4, r5, fp, pc}
   134c8:	push	{r4, sl, fp, lr}
   134cc:	add	fp, sp, #8
   134d0:	mov	r4, r0
   134d4:	ldr	r0, [r0, #8]
   134d8:	cmp	r0, #0
   134dc:	beq	134e4 <error@@Base+0xa9c>
   134e0:	pop	{r4, sl, fp, pc}
   134e4:	ldr	r0, [r4, #12]
   134e8:	cmp	r0, #0
   134ec:	beq	134e0 <error@@Base+0xa98>
   134f0:	mov	r1, #4
   134f4:	bl	12578 <getc@plt+0x19fc>
   134f8:	str	r0, [r4, #8]
   134fc:	ldr	r1, [r4]
   13500:	cmp	r1, #0
   13504:	beq	134e0 <error@@Base+0xa98>
   13508:	str	r1, [r0]
   1350c:	ldr	r0, [r1, #4]
   13510:	cmp	r0, #0
   13514:	popeq	{r4, sl, fp, pc}
   13518:	mov	r1, #4
   1351c:	ldr	r2, [r4, #8]
   13520:	str	r0, [r2, r1]
   13524:	add	r1, r1, #4
   13528:	ldr	r0, [r0, #4]
   1352c:	cmp	r0, #0
   13530:	bne	1351c <error@@Base+0xad4>
   13534:	b	134e0 <error@@Base+0xa98>
   13538:	push	{r4, r5, r6, r7, fp, lr}
   1353c:	add	fp, sp, #16
   13540:	ldr	r6, [r0]
   13544:	cmp	r6, #0
   13548:	beq	135c4 <error@@Base+0xb7c>
   1354c:	mov	r4, r1
   13550:	mov	r5, r0
   13554:	mov	r7, #0
   13558:	b	1357c <error@@Base+0xb34>
   1355c:	ldr	r0, [r5, #12]
   13560:	sub	r0, r0, #1
   13564:	str	r0, [r5, #12]
   13568:	mov	r0, r6
   1356c:	blx	r4
   13570:	ldr	r6, [r5]
   13574:	cmp	r6, #0
   13578:	beq	135c4 <error@@Base+0xb7c>
   1357c:	ldm	r6, {r0, r1}
   13580:	cmp	r0, #0
   13584:	beq	13594 <error@@Base+0xb4c>
   13588:	str	r1, [r0, #4]
   1358c:	ldr	r1, [r6, #4]
   13590:	b	13598 <error@@Base+0xb50>
   13594:	str	r1, [r5]
   13598:	cmp	r1, #0
   1359c:	addeq	r1, r5, #4
   135a0:	str	r0, [r1]
   135a4:	str	r7, [r6]
   135a8:	str	r7, [r6, #4]
   135ac:	ldr	r0, [r5, #8]
   135b0:	cmp	r0, #0
   135b4:	beq	1355c <error@@Base+0xb14>
   135b8:	bl	10a2c <free@plt>
   135bc:	str	r7, [r5, #8]
   135c0:	b	1355c <error@@Base+0xb14>
   135c4:	pop	{r4, r5, r6, r7, fp, pc}
   135c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   135cc:	mov	r7, r0
   135d0:	ldr	r6, [pc, #72]	; 13620 <error@@Base+0xbd8>
   135d4:	ldr	r5, [pc, #72]	; 13624 <error@@Base+0xbdc>
   135d8:	add	r6, pc, r6
   135dc:	add	r5, pc, r5
   135e0:	sub	r6, r6, r5
   135e4:	mov	r8, r1
   135e8:	mov	r9, r2
   135ec:	bl	109e8 <calloc@plt-0x20>
   135f0:	asrs	r6, r6, #2
   135f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   135f8:	mov	r4, #0
   135fc:	add	r4, r4, #1
   13600:	ldr	r3, [r5], #4
   13604:	mov	r2, r9
   13608:	mov	r1, r8
   1360c:	mov	r0, r7
   13610:	blx	r3
   13614:	cmp	r6, r4
   13618:	bne	135fc <error@@Base+0xbb4>
   1361c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13620:	ldrdeq	r1, [r1], -r8
   13624:	ldrdeq	r1, [r1], -r0
   13628:	bx	lr

Disassembly of section .fini:

0001362c <.fini>:
   1362c:	push	{r3, lr}
   13630:	pop	{r3, pc}
