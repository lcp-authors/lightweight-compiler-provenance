
../repos/coreutils/src/users:     file format elf32-littlearm


Disassembly of section .init:

00010c1c <.init>:
   10c1c:	push	{r3, lr}
   10c20:	bl	11028 <putchar_unlocked@plt+0x194>
   10c24:	pop	{r3, pc}

Disassembly of section .plt:

00010c28 <calloc@plt-0x14>:
   10c28:	push	{lr}		; (str lr, [sp, #-4]!)
   10c2c:	ldr	lr, [pc, #4]	; 10c38 <calloc@plt-0x4>
   10c30:	add	lr, pc, lr
   10c34:	ldr	pc, [lr, #8]!
   10c38:	andeq	r4, r1, r8, asr #7

00010c3c <calloc@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #20, 20	; 0x14000
   10c44:	ldr	pc, [ip, #968]!	; 0x3c8

00010c48 <fputs_unlocked@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #20, 20	; 0x14000
   10c50:	ldr	pc, [ip, #960]!	; 0x3c0

00010c54 <strcmp@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #20, 20	; 0x14000
   10c5c:	ldr	pc, [ip, #952]!	; 0x3b8

00010c60 <fflush@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #20, 20	; 0x14000
   10c68:	ldr	pc, [ip, #944]!	; 0x3b0

00010c6c <utmpxname@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #20, 20	; 0x14000
   10c74:	ldr	pc, [ip, #936]!	; 0x3a8

00010c78 <free@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #20, 20	; 0x14000
   10c80:	ldr	pc, [ip, #928]!	; 0x3a0

00010c84 <_exit@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #20, 20	; 0x14000
   10c8c:	ldr	pc, [ip, #920]!	; 0x398

00010c90 <memcpy@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #20, 20	; 0x14000
   10c98:	ldr	pc, [ip, #912]!	; 0x390

00010c9c <mbsinit@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #20, 20	; 0x14000
   10ca4:	ldr	pc, [ip, #904]!	; 0x388

00010ca8 <memcmp@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #20, 20	; 0x14000
   10cb0:	ldr	pc, [ip, #896]!	; 0x380

00010cb4 <fputc_unlocked@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #20, 20	; 0x14000
   10cbc:	ldr	pc, [ip, #888]!	; 0x378

00010cc0 <dcgettext@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #20, 20	; 0x14000
   10cc8:	ldr	pc, [ip, #880]!	; 0x370

00010ccc <setutxent@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #20, 20	; 0x14000
   10cd4:	ldr	pc, [ip, #872]!	; 0x368

00010cd8 <realloc@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #20, 20	; 0x14000
   10ce0:	ldr	pc, [ip, #864]!	; 0x360

00010ce4 <textdomain@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #20, 20	; 0x14000
   10cec:	ldr	pc, [ip, #856]!	; 0x358

00010cf0 <iswprint@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #20, 20	; 0x14000
   10cf8:	ldr	pc, [ip, #848]!	; 0x350

00010cfc <lseek64@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #20, 20	; 0x14000
   10d04:	ldr	pc, [ip, #840]!	; 0x348

00010d08 <__ctype_get_mb_cur_max@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #20, 20	; 0x14000
   10d10:	ldr	pc, [ip, #832]!	; 0x340

00010d14 <__fpending@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #20, 20	; 0x14000
   10d1c:	ldr	pc, [ip, #824]!	; 0x338

00010d20 <ferror_unlocked@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #20, 20	; 0x14000
   10d28:	ldr	pc, [ip, #816]!	; 0x330

00010d2c <mbrtowc@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #20, 20	; 0x14000
   10d34:	ldr	pc, [ip, #808]!	; 0x328

00010d38 <error@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #20, 20	; 0x14000
   10d40:	ldr	pc, [ip, #800]!	; 0x320

00010d44 <malloc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #20, 20	; 0x14000
   10d4c:	ldr	pc, [ip, #792]!	; 0x318

00010d50 <__libc_start_main@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #20, 20	; 0x14000
   10d58:	ldr	pc, [ip, #784]!	; 0x310

00010d5c <__freading@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #20, 20	; 0x14000
   10d64:	ldr	pc, [ip, #776]!	; 0x308

00010d68 <__gmon_start__@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #20, 20	; 0x14000
   10d70:	ldr	pc, [ip, #768]!	; 0x300

00010d74 <getopt_long@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #20, 20	; 0x14000
   10d7c:	ldr	pc, [ip, #760]!	; 0x2f8

00010d80 <kill@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #20, 20	; 0x14000
   10d88:	ldr	pc, [ip, #752]!	; 0x2f0

00010d8c <__ctype_b_loc@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #20, 20	; 0x14000
   10d94:	ldr	pc, [ip, #744]!	; 0x2e8

00010d98 <exit@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #20, 20	; 0x14000
   10da0:	ldr	pc, [ip, #736]!	; 0x2e0

00010da4 <strlen@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #20, 20	; 0x14000
   10dac:	ldr	pc, [ip, #728]!	; 0x2d8

00010db0 <__errno_location@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #20, 20	; 0x14000
   10db8:	ldr	pc, [ip, #720]!	; 0x2d0

00010dbc <__cxa_atexit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #20, 20	; 0x14000
   10dc4:	ldr	pc, [ip, #712]!	; 0x2c8

00010dc8 <memset@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #20, 20	; 0x14000
   10dd0:	ldr	pc, [ip, #704]!	; 0x2c0

00010dd4 <strncpy@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #20, 20	; 0x14000
   10ddc:	ldr	pc, [ip, #696]!	; 0x2b8

00010de0 <__printf_chk@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #20, 20	; 0x14000
   10de8:	ldr	pc, [ip, #688]!	; 0x2b0

00010dec <fileno@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #20, 20	; 0x14000
   10df4:	ldr	pc, [ip, #680]!	; 0x2a8

00010df8 <__fprintf_chk@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #20, 20	; 0x14000
   10e00:	ldr	pc, [ip, #672]!	; 0x2a0

00010e04 <fclose@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #20, 20	; 0x14000
   10e0c:	ldr	pc, [ip, #664]!	; 0x298

00010e10 <fseeko64@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #20, 20	; 0x14000
   10e18:	ldr	pc, [ip, #656]!	; 0x290

00010e1c <endutxent@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #20, 20	; 0x14000
   10e24:	ldr	pc, [ip, #648]!	; 0x288

00010e28 <setlocale@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #20, 20	; 0x14000
   10e30:	ldr	pc, [ip, #640]!	; 0x280

00010e34 <strrchr@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #20, 20	; 0x14000
   10e3c:	ldr	pc, [ip, #632]!	; 0x278

00010e40 <nl_langinfo@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #20, 20	; 0x14000
   10e48:	ldr	pc, [ip, #624]!	; 0x270

00010e4c <qsort@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #20, 20	; 0x14000
   10e54:	ldr	pc, [ip, #616]!	; 0x268

00010e58 <bindtextdomain@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #20, 20	; 0x14000
   10e60:	ldr	pc, [ip, #608]!	; 0x260

00010e64 <fputs@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #20, 20	; 0x14000
   10e6c:	ldr	pc, [ip, #600]!	; 0x258

00010e70 <strncmp@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #20, 20	; 0x14000
   10e78:	ldr	pc, [ip, #592]!	; 0x250

00010e7c <abort@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #20, 20	; 0x14000
   10e84:	ldr	pc, [ip, #584]!	; 0x248

00010e88 <getutxent@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #20, 20	; 0x14000
   10e90:	ldr	pc, [ip, #576]!	; 0x240

00010e94 <putchar_unlocked@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #20, 20	; 0x14000
   10e9c:	ldr	pc, [ip, #568]!	; 0x238

Disassembly of section .text:

00010ea0 <.text>:
   10ea0:	push	{r4, lr}
   10ea4:	bl	10db0 <__errno_location@plt>
   10ea8:	mov	r3, #12
   10eac:	str	r3, [r0]
   10eb0:	mov	r0, #0
   10eb4:	pop	{r4, pc}
   10eb8:	push	{r4, r5, r6, r7, r8, lr}
   10ebc:	mov	r4, r0
   10ec0:	sub	sp, sp, #24
   10ec4:	mov	r6, r1
   10ec8:	mov	r5, #0
   10ecc:	mov	r7, #1
   10ed0:	ldr	r0, [r1]
   10ed4:	bl	1170c <putchar_unlocked@plt+0x878>
   10ed8:	ldr	r1, [pc, #216]	; 10fb8 <putchar_unlocked@plt+0x124>
   10edc:	mov	r0, #6
   10ee0:	bl	10e28 <setlocale@plt>
   10ee4:	ldr	r1, [pc, #208]	; 10fbc <putchar_unlocked@plt+0x128>
   10ee8:	ldr	r0, [pc, #208]	; 10fc0 <putchar_unlocked@plt+0x12c>
   10eec:	bl	10e58 <bindtextdomain@plt>
   10ef0:	ldr	r0, [pc, #200]	; 10fc0 <putchar_unlocked@plt+0x12c>
   10ef4:	bl	10ce4 <textdomain@plt>
   10ef8:	ldr	r0, [pc, #196]	; 10fc4 <putchar_unlocked@plt+0x130>
   10efc:	bl	13b38 <putchar_unlocked@plt+0x2ca4>
   10f00:	ldr	r3, [pc, #192]	; 10fc8 <putchar_unlocked@plt+0x134>
   10f04:	mov	r0, r4
   10f08:	mov	r1, r6
   10f0c:	str	r7, [sp, #4]
   10f10:	ldr	r8, [pc, #180]	; 10fcc <putchar_unlocked@plt+0x138>
   10f14:	ldr	r2, [pc, #180]	; 10fd0 <putchar_unlocked@plt+0x13c>
   10f18:	str	r3, [sp, #16]
   10f1c:	ldr	r3, [pc, #176]	; 10fd4 <putchar_unlocked@plt+0x140>
   10f20:	str	r5, [sp, #20]
   10f24:	str	r3, [sp, #12]
   10f28:	ldr	r3, [pc, #168]	; 10fd8 <putchar_unlocked@plt+0x144>
   10f2c:	str	r3, [sp, #8]
   10f30:	ldr	r3, [pc, #164]	; 10fdc <putchar_unlocked@plt+0x148>
   10f34:	ldr	r3, [r3]
   10f38:	str	r3, [sp]
   10f3c:	ldr	r3, [pc, #156]	; 10fe0 <putchar_unlocked@plt+0x14c>
   10f40:	bl	11644 <putchar_unlocked@plt+0x7b0>
   10f44:	ldr	r3, [r8]
   10f48:	subs	r4, r4, r3
   10f4c:	beq	10fa0 <putchar_unlocked@plt+0x10c>
   10f50:	cmp	r4, r7
   10f54:	moveq	r1, r5
   10f58:	ldreq	r0, [r6, r3, lsl #2]
   10f5c:	beq	10fa8 <putchar_unlocked@plt+0x114>
   10f60:	mov	r2, #5
   10f64:	ldr	r1, [pc, #120]	; 10fe4 <putchar_unlocked@plt+0x150>
   10f68:	mov	r0, r5
   10f6c:	bl	10cc0 <dcgettext@plt>
   10f70:	ldr	r3, [r8]
   10f74:	mov	r4, r0
   10f78:	add	r3, r3, #1
   10f7c:	ldr	r0, [r6, r3, lsl #2]
   10f80:	bl	12d0c <putchar_unlocked@plt+0x1e78>
   10f84:	mov	r3, r0
   10f88:	mov	r2, r4
   10f8c:	mov	r0, r5
   10f90:	mov	r1, r5
   10f94:	bl	10d38 <error@plt>
   10f98:	mov	r0, r7
   10f9c:	bl	11214 <putchar_unlocked@plt+0x380>
   10fa0:	ldr	r0, [pc, #64]	; 10fe8 <putchar_unlocked@plt+0x154>
   10fa4:	mov	r1, r7
   10fa8:	bl	110e8 <putchar_unlocked@plt+0x254>
   10fac:	mov	r0, #0
   10fb0:	add	sp, sp, #24
   10fb4:	pop	{r4, r5, r6, r7, r8, pc}
   10fb8:	andeq	r3, r1, lr, asr #24
   10fbc:			; <UNDEFINED> instruction: 0x00013db4
   10fc0:	andeq	r3, r1, r1, lsl sp
   10fc4:	andeq	r1, r1, r8, ror #8
   10fc8:	andeq	r3, r1, ip, asr #27
   10fcc:	andeq	r5, r2, r8, lsr r1
   10fd0:	muleq	r1, r4, fp
   10fd4:	ldrdeq	r3, [r1], -ip
   10fd8:	andeq	r1, r1, r4, lsl r2
   10fdc:	andeq	r5, r2, r4, ror #1
   10fe0:	andeq	r3, r1, sp, lsl #26
   10fe4:	andeq	r3, r1, sp, ror #27
   10fe8:	andeq	r3, r1, sp, asr ip
   10fec:	mov	fp, #0
   10ff0:	mov	lr, #0
   10ff4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ff8:	mov	r2, sp
   10ffc:	push	{r2}		; (str r2, [sp, #-4]!)
   11000:	push	{r0}		; (str r0, [sp, #-4]!)
   11004:	ldr	ip, [pc, #16]	; 1101c <putchar_unlocked@plt+0x188>
   11008:	push	{ip}		; (str ip, [sp, #-4]!)
   1100c:	ldr	r0, [pc, #12]	; 11020 <putchar_unlocked@plt+0x18c>
   11010:	ldr	r3, [pc, #12]	; 11024 <putchar_unlocked@plt+0x190>
   11014:	bl	10d50 <__libc_start_main@plt>
   11018:	bl	10e7c <abort@plt>
   1101c:	andeq	r3, r1, r4, lsr fp
   11020:			; <UNDEFINED> instruction: 0x00010eb8
   11024:	ldrdeq	r3, [r1], -r4
   11028:	ldr	r3, [pc, #20]	; 11044 <putchar_unlocked@plt+0x1b0>
   1102c:	ldr	r2, [pc, #20]	; 11048 <putchar_unlocked@plt+0x1b4>
   11030:	add	r3, pc, r3
   11034:	ldr	r2, [r3, r2]
   11038:	cmp	r2, #0
   1103c:	bxeq	lr
   11040:	b	10d68 <__gmon_start__@plt>
   11044:	andeq	r3, r1, r8, asr #31
   11048:	ldrdeq	r0, [r0], -r8
   1104c:	ldr	r0, [pc, #24]	; 1106c <putchar_unlocked@plt+0x1d8>
   11050:	ldr	r3, [pc, #24]	; 11070 <putchar_unlocked@plt+0x1dc>
   11054:	cmp	r3, r0
   11058:	bxeq	lr
   1105c:	ldr	r3, [pc, #16]	; 11074 <putchar_unlocked@plt+0x1e0>
   11060:	cmp	r3, #0
   11064:	bxeq	lr
   11068:	bx	r3
   1106c:	andeq	r5, r2, ip, lsr #2
   11070:	andeq	r5, r2, ip, lsr #2
   11074:	andeq	r0, r0, r0
   11078:	ldr	r0, [pc, #36]	; 110a4 <putchar_unlocked@plt+0x210>
   1107c:	ldr	r1, [pc, #36]	; 110a8 <putchar_unlocked@plt+0x214>
   11080:	sub	r1, r1, r0
   11084:	asr	r1, r1, #2
   11088:	add	r1, r1, r1, lsr #31
   1108c:	asrs	r1, r1, #1
   11090:	bxeq	lr
   11094:	ldr	r3, [pc, #16]	; 110ac <putchar_unlocked@plt+0x218>
   11098:	cmp	r3, #0
   1109c:	bxeq	lr
   110a0:	bx	r3
   110a4:	andeq	r5, r2, ip, lsr #2
   110a8:	andeq	r5, r2, ip, lsr #2
   110ac:	andeq	r0, r0, r0
   110b0:	push	{r4, lr}
   110b4:	ldr	r4, [pc, #24]	; 110d4 <putchar_unlocked@plt+0x240>
   110b8:	ldrb	r3, [r4]
   110bc:	cmp	r3, #0
   110c0:	popne	{r4, pc}
   110c4:	bl	1104c <putchar_unlocked@plt+0x1b8>
   110c8:	mov	r3, #1
   110cc:	strb	r3, [r4]
   110d0:	pop	{r4, pc}
   110d4:	andeq	r5, r2, ip, asr #2
   110d8:	b	11078 <putchar_unlocked@plt+0x1e4>
   110dc:	ldr	r0, [r0]
   110e0:	ldr	r1, [r1]
   110e4:	b	10c54 <strcmp@plt>
   110e8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   110ec:	mov	r3, r1
   110f0:	add	r2, sp, #4
   110f4:	mov	r1, sp
   110f8:	mov	r5, r0
   110fc:	bl	12d70 <putchar_unlocked@plt+0x1edc>
   11100:	subs	r4, r0, #0
   11104:	beq	11134 <putchar_unlocked@plt+0x2a0>
   11108:	bl	10db0 <__errno_location@plt>
   1110c:	ldr	r4, [r0]
   11110:	mov	r2, r5
   11114:	mov	r1, #3
   11118:	mov	r0, #0
   1111c:	bl	12bcc <putchar_unlocked@plt+0x1d38>
   11120:	mov	r3, r0
   11124:	ldr	r2, [pc, #220]	; 11208 <putchar_unlocked@plt+0x374>
   11128:	mov	r0, #1
   1112c:	mov	r1, r4
   11130:	bl	10d38 <error@plt>
   11134:	ldr	r7, [sp]
   11138:	mov	r1, #4
   1113c:	ldr	r6, [sp, #4]
   11140:	mov	r0, r7
   11144:	bl	13420 <putchar_unlocked@plt+0x258c>
   11148:	mov	r5, r0
   1114c:	subs	r7, r7, #1
   11150:	bcs	111a4 <putchar_unlocked@plt+0x310>
   11154:	ldr	r8, [pc, #176]	; 1120c <putchar_unlocked@plt+0x378>
   11158:	mov	r2, #4
   1115c:	mov	r1, r4
   11160:	mov	r0, r5
   11164:	mov	r6, #0
   11168:	ldr	r3, [pc, #160]	; 11210 <putchar_unlocked@plt+0x37c>
   1116c:	sub	r7, r4, #1
   11170:	bl	10e4c <qsort@plt>
   11174:	cmp	r4, r6
   11178:	bne	111d4 <putchar_unlocked@plt+0x340>
   1117c:	add	r4, r5, r4, lsl #2
   11180:	mov	r6, r5
   11184:	cmp	r4, r6
   11188:	bne	111fc <putchar_unlocked@plt+0x368>
   1118c:	mov	r0, r5
   11190:	bl	1153c <putchar_unlocked@plt+0x6a8>
   11194:	ldr	r0, [sp, #4]
   11198:	bl	1153c <putchar_unlocked@plt+0x6a8>
   1119c:	add	sp, sp, #12
   111a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   111a4:	ldrb	r3, [r6, #44]	; 0x2c
   111a8:	cmp	r3, #0
   111ac:	beq	111cc <putchar_unlocked@plt+0x338>
   111b0:	ldrsh	r3, [r6]
   111b4:	cmp	r3, #7
   111b8:	bne	111cc <putchar_unlocked@plt+0x338>
   111bc:	mov	r0, r6
   111c0:	bl	12d18 <putchar_unlocked@plt+0x1e84>
   111c4:	str	r0, [r5, r4, lsl #2]
   111c8:	add	r4, r4, #1
   111cc:	add	r6, r6, #384	; 0x180
   111d0:	b	1114c <putchar_unlocked@plt+0x2b8>
   111d4:	cmp	r7, r6
   111d8:	ldr	r0, [r5, r6, lsl #2]
   111dc:	add	r6, r6, #1
   111e0:	movhi	r9, #32
   111e4:	movls	r9, #10
   111e8:	ldr	r1, [r8]
   111ec:	bl	10c48 <fputs_unlocked@plt>
   111f0:	mov	r0, r9
   111f4:	bl	10e94 <putchar_unlocked@plt>
   111f8:	b	11174 <putchar_unlocked@plt+0x2e0>
   111fc:	ldr	r0, [r6], #4
   11200:	bl	1153c <putchar_unlocked@plt+0x6a8>
   11204:	b	11184 <putchar_unlocked@plt+0x2f0>
   11208:	andeq	r3, r1, ip, ror lr
   1120c:	andeq	r5, r2, r4, asr #2
   11210:	ldrdeq	r1, [r1], -ip
   11214:	subs	r6, r0, #0
   11218:	push	{r7, lr}
   1121c:	sub	sp, sp, #56	; 0x38
   11220:	ldr	r4, [pc, #460]	; 113f4 <putchar_unlocked@plt+0x560>
   11224:	beq	1125c <putchar_unlocked@plt+0x3c8>
   11228:	mov	r2, #5
   1122c:	mov	r0, #0
   11230:	ldr	r3, [pc, #448]	; 113f8 <putchar_unlocked@plt+0x564>
   11234:	ldr	r1, [pc, #448]	; 113fc <putchar_unlocked@plt+0x568>
   11238:	ldr	r5, [r3]
   1123c:	bl	10cc0 <dcgettext@plt>
   11240:	mov	r2, r0
   11244:	mov	r1, #1
   11248:	ldr	r3, [r4]
   1124c:	mov	r0, r5
   11250:	bl	10df8 <__fprintf_chk@plt>
   11254:	mov	r0, r6
   11258:	bl	10d98 <exit@plt>
   1125c:	mov	r2, #5
   11260:	ldr	r1, [pc, #408]	; 11400 <putchar_unlocked@plt+0x56c>
   11264:	mov	r7, sp
   11268:	bl	10cc0 <dcgettext@plt>
   1126c:	mov	r1, r0
   11270:	ldr	r5, [pc, #396]	; 11404 <putchar_unlocked@plt+0x570>
   11274:	mov	r0, #1
   11278:	ldr	r2, [r4]
   1127c:	bl	10de0 <__printf_chk@plt>
   11280:	mov	r2, #5
   11284:	ldr	r1, [pc, #380]	; 11408 <putchar_unlocked@plt+0x574>
   11288:	mov	r0, r6
   1128c:	bl	10cc0 <dcgettext@plt>
   11290:	mov	r1, r0
   11294:	ldr	r3, [pc, #368]	; 1140c <putchar_unlocked@plt+0x578>
   11298:	mov	r0, #1
   1129c:	ldr	r2, [pc, #364]	; 11410 <putchar_unlocked@plt+0x57c>
   112a0:	bl	10de0 <__printf_chk@plt>
   112a4:	mov	r2, #5
   112a8:	ldr	r1, [pc, #356]	; 11414 <putchar_unlocked@plt+0x580>
   112ac:	mov	r0, r6
   112b0:	bl	10cc0 <dcgettext@plt>
   112b4:	ldr	r1, [r5]
   112b8:	bl	10c48 <fputs_unlocked@plt>
   112bc:	mov	r2, #5
   112c0:	ldr	r1, [pc, #336]	; 11418 <putchar_unlocked@plt+0x584>
   112c4:	mov	r0, r6
   112c8:	bl	10cc0 <dcgettext@plt>
   112cc:	ldr	r1, [r5]
   112d0:	bl	10c48 <fputs_unlocked@plt>
   112d4:	ldr	lr, [pc, #320]	; 1141c <putchar_unlocked@plt+0x588>
   112d8:	mov	ip, sp
   112dc:	ldr	r4, [pc, #316]	; 11420 <putchar_unlocked@plt+0x58c>
   112e0:	ldm	lr!, {r0, r1, r2, r3}
   112e4:	stmia	ip!, {r0, r1, r2, r3}
   112e8:	ldm	lr!, {r0, r1, r2, r3}
   112ec:	stmia	ip!, {r0, r1, r2, r3}
   112f0:	ldm	lr!, {r0, r1, r2, r3}
   112f4:	stmia	ip!, {r0, r1, r2, r3}
   112f8:	ldm	lr, {r0, r1}
   112fc:	stm	ip, {r0, r1}
   11300:	ldr	r1, [r7]
   11304:	cmp	r1, #0
   11308:	bne	113ac <putchar_unlocked@plt+0x518>
   1130c:	ldr	r4, [r7, #4]
   11310:	mov	r2, #5
   11314:	mov	r0, #0
   11318:	ldr	r7, [pc, #256]	; 11420 <putchar_unlocked@plt+0x58c>
   1131c:	ldr	r1, [pc, #256]	; 11424 <putchar_unlocked@plt+0x590>
   11320:	cmp	r4, #0
   11324:	moveq	r4, r7
   11328:	bl	10cc0 <dcgettext@plt>
   1132c:	mov	r1, r0
   11330:	ldr	r3, [pc, #240]	; 11428 <putchar_unlocked@plt+0x594>
   11334:	mov	r0, #1
   11338:	ldr	r2, [pc, #236]	; 1142c <putchar_unlocked@plt+0x598>
   1133c:	bl	10de0 <__printf_chk@plt>
   11340:	mov	r1, #0
   11344:	mov	r0, #5
   11348:	bl	10e28 <setlocale@plt>
   1134c:	cmp	r0, #0
   11350:	bne	113c4 <putchar_unlocked@plt+0x530>
   11354:	mov	r2, #5
   11358:	ldr	r1, [pc, #208]	; 11430 <putchar_unlocked@plt+0x59c>
   1135c:	mov	r0, #0
   11360:	bl	10cc0 <dcgettext@plt>
   11364:	mov	r1, r0
   11368:	ldr	r3, [pc, #176]	; 11420 <putchar_unlocked@plt+0x58c>
   1136c:	mov	r0, #1
   11370:	ldr	r2, [pc, #176]	; 11428 <putchar_unlocked@plt+0x594>
   11374:	bl	10de0 <__printf_chk@plt>
   11378:	mov	r2, #5
   1137c:	ldr	r1, [pc, #176]	; 11434 <putchar_unlocked@plt+0x5a0>
   11380:	mov	r0, #0
   11384:	bl	10cc0 <dcgettext@plt>
   11388:	ldr	r2, [pc, #168]	; 11438 <putchar_unlocked@plt+0x5a4>
   1138c:	cmp	r4, r7
   11390:	mov	r1, r0
   11394:	mov	r0, #1
   11398:	ldr	r3, [pc, #156]	; 1143c <putchar_unlocked@plt+0x5a8>
   1139c:	moveq	r3, r2
   113a0:	mov	r2, r4
   113a4:	bl	10de0 <__printf_chk@plt>
   113a8:	b	11254 <putchar_unlocked@plt+0x3c0>
   113ac:	mov	r0, r4
   113b0:	bl	10c54 <strcmp@plt>
   113b4:	cmp	r0, #0
   113b8:	beq	1130c <putchar_unlocked@plt+0x478>
   113bc:	add	r7, r7, #8
   113c0:	b	11300 <putchar_unlocked@plt+0x46c>
   113c4:	mov	r2, #3
   113c8:	ldr	r1, [pc, #112]	; 11440 <putchar_unlocked@plt+0x5ac>
   113cc:	bl	10e70 <strncmp@plt>
   113d0:	cmp	r0, #0
   113d4:	beq	11354 <putchar_unlocked@plt+0x4c0>
   113d8:	mov	r2, #5
   113dc:	ldr	r1, [pc, #96]	; 11444 <putchar_unlocked@plt+0x5b0>
   113e0:	mov	r0, #0
   113e4:	bl	10cc0 <dcgettext@plt>
   113e8:	ldr	r1, [r5]
   113ec:	bl	10c48 <fputs_unlocked@plt>
   113f0:	b	11354 <putchar_unlocked@plt+0x4c0>
   113f4:	andeq	r5, r2, r8, asr r1
   113f8:	andeq	r5, r2, r0, asr #2
   113fc:	muleq	r1, sl, fp
   11400:	andeq	r3, r1, r1, asr #23
   11404:	andeq	r5, r2, r4, asr #2
   11408:	ldrdeq	r3, [r1], -pc	; <UNPREDICTABLE>
   1140c:	andeq	r3, r1, pc, asr #24
   11410:	andeq	r3, r1, sp, asr ip
   11414:	andeq	r3, r1, fp, ror #24
   11418:	muleq	r1, r8, ip
   1141c:	andeq	r3, r1, ip, asr fp
   11420:	muleq	r1, r4, fp
   11424:	andeq	r3, r1, lr, asr #25
   11428:	andeq	r3, r1, r5, ror #25
   1142c:	andeq	r3, r1, sp, lsl #26
   11430:	andeq	r3, r1, r6, ror #26
   11434:	andeq	r3, r1, r1, lsl #27
   11438:	andeq	r3, r1, sl, lsl lr
   1143c:	andeq	r3, r1, lr, asr #24
   11440:	andeq	r3, r1, fp, lsl sp
   11444:	andeq	r3, r1, pc, lsl sp
   11448:	ldr	r3, [pc, #4]	; 11454 <putchar_unlocked@plt+0x5c0>
   1144c:	str	r0, [r3]
   11450:	bx	lr
   11454:	andeq	r5, r2, r0, asr r1
   11458:	ldr	r3, [pc, #4]	; 11464 <putchar_unlocked@plt+0x5d0>
   1145c:	strb	r0, [r3, #4]
   11460:	bx	lr
   11464:	andeq	r5, r2, r0, asr r1
   11468:	ldr	r3, [pc, #176]	; 11520 <putchar_unlocked@plt+0x68c>
   1146c:	push	{r0, r1, r4, r5, r6, lr}
   11470:	ldr	r0, [r3]
   11474:	bl	1371c <putchar_unlocked@plt+0x2888>
   11478:	cmp	r0, #0
   1147c:	beq	11504 <putchar_unlocked@plt+0x670>
   11480:	ldr	r4, [pc, #156]	; 11524 <putchar_unlocked@plt+0x690>
   11484:	bl	10db0 <__errno_location@plt>
   11488:	mov	r5, r0
   1148c:	ldrb	r6, [r4, #4]
   11490:	cmp	r6, #0
   11494:	beq	114a4 <putchar_unlocked@plt+0x610>
   11498:	ldr	r3, [r0]
   1149c:	cmp	r3, #32
   114a0:	beq	11504 <putchar_unlocked@plt+0x670>
   114a4:	mov	r2, #5
   114a8:	ldr	r1, [pc, #120]	; 11528 <putchar_unlocked@plt+0x694>
   114ac:	mov	r0, #0
   114b0:	bl	10cc0 <dcgettext@plt>
   114b4:	mov	r6, r0
   114b8:	ldr	r0, [r4]
   114bc:	cmp	r0, #0
   114c0:	beq	114f0 <putchar_unlocked@plt+0x65c>
   114c4:	ldr	r4, [r5]
   114c8:	bl	12bbc <putchar_unlocked@plt+0x1d28>
   114cc:	mov	r3, r0
   114d0:	ldr	r2, [pc, #84]	; 1152c <putchar_unlocked@plt+0x698>
   114d4:	mov	r0, #0
   114d8:	str	r6, [sp]
   114dc:	mov	r1, r4
   114e0:	bl	10d38 <error@plt>
   114e4:	ldr	r3, [pc, #68]	; 11530 <putchar_unlocked@plt+0x69c>
   114e8:	ldr	r0, [r3]
   114ec:	bl	10c84 <_exit@plt>
   114f0:	mov	r3, r6
   114f4:	ldr	r2, [pc, #56]	; 11534 <putchar_unlocked@plt+0x6a0>
   114f8:	ldr	r1, [r5]
   114fc:	bl	10d38 <error@plt>
   11500:	b	114e4 <putchar_unlocked@plt+0x650>
   11504:	ldr	r3, [pc, #44]	; 11538 <putchar_unlocked@plt+0x6a4>
   11508:	ldr	r0, [r3]
   1150c:	bl	1371c <putchar_unlocked@plt+0x2888>
   11510:	cmp	r0, #0
   11514:	bne	114e4 <putchar_unlocked@plt+0x650>
   11518:	add	sp, sp, #8
   1151c:	pop	{r4, r5, r6, pc}
   11520:	andeq	r5, r2, r4, asr #2
   11524:	andeq	r5, r2, r0, asr r1
   11528:	andeq	r3, r1, ip, ror #28
   1152c:	andeq	r3, r1, r8, ror lr
   11530:	andeq	r5, r2, r8, ror #1
   11534:	andeq	r3, r1, ip, ror lr
   11538:	andeq	r5, r2, r0, asr #2
   1153c:	push	{r0, r1, r2, r4, r5, lr}
   11540:	mov	r5, r0
   11544:	bl	10db0 <__errno_location@plt>
   11548:	mov	r4, r0
   1154c:	mov	r0, r5
   11550:	ldr	r3, [r4]
   11554:	str	r3, [sp]
   11558:	str	r3, [sp, #4]
   1155c:	mov	r3, #0
   11560:	str	r3, [r4]
   11564:	bl	10c78 <free@plt>
   11568:	ldr	r3, [r4]
   1156c:	add	r2, sp, #8
   11570:	clz	r3, r3
   11574:	lsr	r3, r3, #5
   11578:	add	r3, r2, r3, lsl #2
   1157c:	ldr	r3, [r3, #-8]
   11580:	str	r3, [r4]
   11584:	add	sp, sp, #12
   11588:	pop	{r4, r5, pc}
   1158c:	ldr	ip, [pc, #156]	; 11630 <putchar_unlocked@plt+0x79c>
   11590:	cmp	r0, #2
   11594:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   11598:	mov	r6, #0
   1159c:	mov	r8, ip
   115a0:	ldr	r7, [ip]
   115a4:	str	r6, [ip]
   115a8:	bne	115dc <putchar_unlocked@plt+0x748>
   115ac:	mov	r5, r3
   115b0:	mov	r4, r2
   115b4:	ldr	r3, [pc, #120]	; 11634 <putchar_unlocked@plt+0x7a0>
   115b8:	str	r6, [sp]
   115bc:	ldr	r2, [pc, #116]	; 11638 <putchar_unlocked@plt+0x7a4>
   115c0:	bl	10d74 <getopt_long@plt>
   115c4:	cmn	r0, #1
   115c8:	beq	115dc <putchar_unlocked@plt+0x748>
   115cc:	cmp	r0, #104	; 0x68
   115d0:	beq	115f4 <putchar_unlocked@plt+0x760>
   115d4:	cmp	r0, #118	; 0x76
   115d8:	beq	11604 <putchar_unlocked@plt+0x770>
   115dc:	ldr	r3, [pc, #88]	; 1163c <putchar_unlocked@plt+0x7a8>
   115e0:	mov	r2, #0
   115e4:	str	r7, [r8]
   115e8:	str	r2, [r3]
   115ec:	add	sp, sp, #16
   115f0:	pop	{r4, r5, r6, r7, r8, pc}
   115f4:	mov	r0, r6
   115f8:	ldr	r3, [sp, #44]	; 0x2c
   115fc:	blx	r3
   11600:	b	115dc <putchar_unlocked@plt+0x748>
   11604:	ldr	r0, [pc, #52]	; 11640 <putchar_unlocked@plt+0x7ac>
   11608:	add	r3, sp, #48	; 0x30
   1160c:	mov	r2, r5
   11610:	mov	r1, r4
   11614:	str	r3, [sp]
   11618:	str	r3, [sp, #12]
   1161c:	ldr	r3, [sp, #40]	; 0x28
   11620:	ldr	r0, [r0]
   11624:	bl	13254 <putchar_unlocked@plt+0x23c0>
   11628:	mov	r0, r6
   1162c:	bl	10d98 <exit@plt>
   11630:	andeq	r5, r2, r8, asr #2
   11634:	andeq	r3, r1, r0, lsl #29
   11638:			; <UNDEFINED> instruction: 0x00013eb0
   1163c:	andeq	r5, r2, r8, lsr r1
   11640:	andeq	r5, r2, r4, asr #2
   11644:	push	{r4, r5, r6, r7, r8, r9, lr}
   11648:	sub	sp, sp, #20
   1164c:	mov	r8, r3
   11650:	mov	r4, #0
   11654:	mov	r7, r2
   11658:	mov	r2, #1
   1165c:	ldrb	lr, [sp, #52]	; 0x34
   11660:	ldr	r3, [pc, #140]	; 116f4 <putchar_unlocked@plt+0x860>
   11664:	ldr	ip, [pc, #140]	; 116f8 <putchar_unlocked@plt+0x864>
   11668:	cmp	lr, r4
   1166c:	ldr	r6, [sp, #56]	; 0x38
   11670:	mov	r5, r3
   11674:	ldr	r9, [r3]
   11678:	str	r2, [r3]
   1167c:	ldr	r2, [pc, #120]	; 116fc <putchar_unlocked@plt+0x868>
   11680:	moveq	r2, ip
   11684:	str	r4, [sp]
   11688:	ldr	r3, [pc, #112]	; 11700 <putchar_unlocked@plt+0x86c>
   1168c:	bl	10d74 <getopt_long@plt>
   11690:	cmn	r0, #1
   11694:	beq	116bc <putchar_unlocked@plt+0x828>
   11698:	cmp	r0, #104	; 0x68
   1169c:	beq	116b4 <putchar_unlocked@plt+0x820>
   116a0:	cmp	r0, #118	; 0x76
   116a4:	beq	116c8 <putchar_unlocked@plt+0x834>
   116a8:	ldr	r3, [pc, #84]	; 11704 <putchar_unlocked@plt+0x870>
   116ac:	ldr	r0, [r3]
   116b0:	b	116b8 <putchar_unlocked@plt+0x824>
   116b4:	mov	r0, r4
   116b8:	blx	r6
   116bc:	str	r9, [r5]
   116c0:	add	sp, sp, #20
   116c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   116c8:	ldr	r0, [pc, #56]	; 11708 <putchar_unlocked@plt+0x874>
   116cc:	add	r3, sp, #60	; 0x3c
   116d0:	mov	r2, r8
   116d4:	mov	r1, r7
   116d8:	str	r3, [sp]
   116dc:	str	r3, [sp, #12]
   116e0:	ldr	r3, [sp, #48]	; 0x30
   116e4:	ldr	r0, [r0]
   116e8:	bl	13254 <putchar_unlocked@plt+0x23c0>
   116ec:	mov	r0, r4
   116f0:	bl	10d98 <exit@plt>
   116f4:	andeq	r5, r2, r8, asr #2
   116f8:			; <UNDEFINED> instruction: 0x00013eb0
   116fc:	andeq	r3, r1, lr, asr #24
   11700:	andeq	r3, r1, r0, lsl #29
   11704:	andeq	r5, r2, r8, ror #1
   11708:	andeq	r5, r2, r4, asr #2
   1170c:	push	{r4, r5, r6, lr}
   11710:	subs	r4, r0, #0
   11714:	bne	1172c <putchar_unlocked@plt+0x898>
   11718:	ldr	r3, [pc, #124]	; 1179c <putchar_unlocked@plt+0x908>
   1171c:	ldr	r0, [pc, #124]	; 117a0 <putchar_unlocked@plt+0x90c>
   11720:	ldr	r1, [r3]
   11724:	bl	10e64 <fputs@plt>
   11728:	bl	10e7c <abort@plt>
   1172c:	mov	r1, #47	; 0x2f
   11730:	bl	10e34 <strrchr@plt>
   11734:	subs	r6, r0, #0
   11738:	beq	11788 <putchar_unlocked@plt+0x8f4>
   1173c:	add	r5, r6, #1
   11740:	sub	r3, r5, r4
   11744:	cmp	r3, #6
   11748:	ble	11788 <putchar_unlocked@plt+0x8f4>
   1174c:	mov	r2, #7
   11750:	ldr	r1, [pc, #76]	; 117a4 <putchar_unlocked@plt+0x910>
   11754:	sub	r0, r6, #6
   11758:	bl	10e70 <strncmp@plt>
   1175c:	cmp	r0, #0
   11760:	bne	11788 <putchar_unlocked@plt+0x8f4>
   11764:	mov	r2, #3
   11768:	ldr	r1, [pc, #56]	; 117a8 <putchar_unlocked@plt+0x914>
   1176c:	mov	r0, r5
   11770:	bl	10e70 <strncmp@plt>
   11774:	cmp	r0, #0
   11778:	ldreq	r3, [pc, #44]	; 117ac <putchar_unlocked@plt+0x918>
   1177c:	addeq	r4, r6, #4
   11780:	movne	r4, r5
   11784:	streq	r4, [r3]
   11788:	ldr	r3, [pc, #32]	; 117b0 <putchar_unlocked@plt+0x91c>
   1178c:	str	r4, [r3]
   11790:	ldr	r3, [pc, #28]	; 117b4 <putchar_unlocked@plt+0x920>
   11794:	str	r4, [r3]
   11798:	pop	{r4, r5, r6, pc}
   1179c:	andeq	r5, r2, r0, asr #2
   117a0:			; <UNDEFINED> instruction: 0x00013ebf
   117a4:	strdeq	r3, [r1], -r7
   117a8:	strdeq	r3, [r1], -pc	; <UNPREDICTABLE>
   117ac:	andeq	r5, r2, r0, lsr r1
   117b0:	andeq	r5, r2, r8, asr r1
   117b4:	andeq	r5, r2, r4, lsr r1
   117b8:	push	{r4, lr}
   117bc:	mov	r2, #48	; 0x30
   117c0:	mov	r4, r1
   117c4:	mov	r1, #0
   117c8:	bl	10dc8 <memset@plt>
   117cc:	cmp	r4, #10
   117d0:	bne	117d8 <putchar_unlocked@plt+0x944>
   117d4:	bl	10e7c <abort@plt>
   117d8:	str	r4, [r0]
   117dc:	pop	{r4, pc}
   117e0:	push	{r4, r5, r6, lr}
   117e4:	mov	r2, #5
   117e8:	mov	r6, r0
   117ec:	mov	r5, r1
   117f0:	mov	r1, r0
   117f4:	mov	r0, #0
   117f8:	bl	10cc0 <dcgettext@plt>
   117fc:	cmp	r6, r0
   11800:	mov	r4, r0
   11804:	bne	11874 <putchar_unlocked@plt+0x9e0>
   11808:	bl	13944 <putchar_unlocked@plt+0x2ab0>
   1180c:	ldrb	r3, [r0]
   11810:	bic	r3, r3, #32
   11814:	cmp	r3, #85	; 0x55
   11818:	bne	1187c <putchar_unlocked@plt+0x9e8>
   1181c:	ldrb	r3, [r0, #1]
   11820:	bic	r3, r3, #32
   11824:	cmp	r3, #84	; 0x54
   11828:	bne	118ec <putchar_unlocked@plt+0xa58>
   1182c:	ldrb	r3, [r0, #2]
   11830:	bic	r3, r3, #32
   11834:	cmp	r3, #70	; 0x46
   11838:	bne	118ec <putchar_unlocked@plt+0xa58>
   1183c:	ldrb	r3, [r0, #3]
   11840:	cmp	r3, #45	; 0x2d
   11844:	bne	118ec <putchar_unlocked@plt+0xa58>
   11848:	ldrb	r3, [r0, #4]
   1184c:	cmp	r3, #56	; 0x38
   11850:	bne	118ec <putchar_unlocked@plt+0xa58>
   11854:	ldrb	r3, [r0, #5]
   11858:	cmp	r3, #0
   1185c:	bne	118ec <putchar_unlocked@plt+0xa58>
   11860:	ldrb	r2, [r4]
   11864:	ldr	r3, [pc, #144]	; 118fc <putchar_unlocked@plt+0xa68>
   11868:	ldr	r4, [pc, #144]	; 11900 <putchar_unlocked@plt+0xa6c>
   1186c:	cmp	r2, #96	; 0x60
   11870:	movne	r4, r3
   11874:	mov	r0, r4
   11878:	pop	{r4, r5, r6, pc}
   1187c:	cmp	r3, #71	; 0x47
   11880:	bne	118ec <putchar_unlocked@plt+0xa58>
   11884:	ldrb	r3, [r0, #1]
   11888:	bic	r3, r3, #32
   1188c:	cmp	r3, #66	; 0x42
   11890:	bne	118ec <putchar_unlocked@plt+0xa58>
   11894:	ldrb	r3, [r0, #2]
   11898:	cmp	r3, #49	; 0x31
   1189c:	bne	118ec <putchar_unlocked@plt+0xa58>
   118a0:	ldrb	r3, [r0, #3]
   118a4:	cmp	r3, #56	; 0x38
   118a8:	bne	118ec <putchar_unlocked@plt+0xa58>
   118ac:	ldrb	r3, [r0, #4]
   118b0:	cmp	r3, #48	; 0x30
   118b4:	bne	118ec <putchar_unlocked@plt+0xa58>
   118b8:	ldrb	r3, [r0, #5]
   118bc:	cmp	r3, #51	; 0x33
   118c0:	bne	118ec <putchar_unlocked@plt+0xa58>
   118c4:	ldrb	r3, [r0, #6]
   118c8:	cmp	r3, #48	; 0x30
   118cc:	bne	118ec <putchar_unlocked@plt+0xa58>
   118d0:	ldrb	r3, [r0, #7]
   118d4:	cmp	r3, #0
   118d8:	bne	118ec <putchar_unlocked@plt+0xa58>
   118dc:	ldrb	r2, [r4]
   118e0:	ldr	r3, [pc, #28]	; 11904 <putchar_unlocked@plt+0xa70>
   118e4:	ldr	r4, [pc, #28]	; 11908 <putchar_unlocked@plt+0xa74>
   118e8:	b	1186c <putchar_unlocked@plt+0x9d8>
   118ec:	ldr	r4, [pc, #24]	; 1190c <putchar_unlocked@plt+0xa78>
   118f0:	cmp	r5, #9
   118f4:	ldr	r3, [pc, #20]	; 11910 <putchar_unlocked@plt+0xa7c>
   118f8:	b	11870 <putchar_unlocked@plt+0x9dc>
   118fc:	andeq	r3, r1, sl, asr pc
   11900:	andeq	r3, r1, r5, ror #30
   11904:	andeq	r3, r1, lr, asr pc
   11908:	andeq	r3, r1, r1, ror #30
   1190c:	andeq	r3, r1, r8, asr pc
   11910:	andeq	r3, r1, r9, ror #30
   11914:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11918:	sub	sp, sp, #108	; 0x6c
   1191c:	mov	r8, r0
   11920:	mov	r5, r1
   11924:	mov	r6, #0
   11928:	str	r3, [sp, #40]	; 0x28
   1192c:	str	r2, [sp, #48]	; 0x30
   11930:	ldr	sl, [sp, #144]	; 0x90
   11934:	bl	10d08 <__ctype_get_mb_cur_max@plt>
   11938:	ldr	r3, [sp, #148]	; 0x94
   1193c:	str	r6, [sp, #24]
   11940:	str	r6, [sp, #32]
   11944:	str	r6, [sp, #44]	; 0x2c
   11948:	str	r6, [sp, #52]	; 0x34
   1194c:	ubfx	r7, r3, #1, #1
   11950:	mov	r3, #1
   11954:	str	r6, [sp, #60]	; 0x3c
   11958:	str	r3, [sp, #72]	; 0x48
   1195c:	str	r0, [sp, #76]	; 0x4c
   11960:	cmp	sl, #10
   11964:	ldrls	pc, [pc, sl, lsl #2]
   11968:	b	11bac <putchar_unlocked@plt+0xd18>
   1196c:	muleq	r1, r8, r9
   11970:	andeq	r1, r1, r4, asr #23
   11974:	andeq	r1, r1, r8, asr #22
   11978:	andeq	r1, r1, r0, ror #22
   1197c:	andeq	r1, r1, r0, lsr fp
   11980:	andeq	r1, r1, r8, lsl #21
   11984:	andeq	r1, r1, r8, ror #20
   11988:			; <UNDEFINED> instruction: 0x00011bb0
   1198c:			; <UNDEFINED> instruction: 0x00011ab8
   11990:			; <UNDEFINED> instruction: 0x00011ab8
   11994:			; <UNDEFINED> instruction: 0x00011ab8
   11998:	mov	r4, sl
   1199c:	mov	r7, #0
   119a0:	mov	r9, r5
   119a4:	mov	r3, #0
   119a8:	str	r6, [sp, #68]	; 0x44
   119ac:	str	r3, [sp, #28]
   119b0:	ldr	r3, [sp, #40]	; 0x28
   119b4:	cmn	r3, #1
   119b8:	bne	12558 <putchar_unlocked@plt+0x16c4>
   119bc:	ldr	r2, [sp, #28]
   119c0:	ldr	r3, [sp, #48]	; 0x30
   119c4:	ldrb	r3, [r3, r2]
   119c8:	adds	r3, r3, #0
   119cc:	movne	r3, #1
   119d0:	str	r3, [sp, #36]	; 0x24
   119d4:	ldr	r3, [sp, #36]	; 0x24
   119d8:	cmp	r3, #0
   119dc:	bne	11be8 <putchar_unlocked@plt+0xd54>
   119e0:	sub	r3, sl, #2
   119e4:	cmp	r4, #0
   119e8:	clz	r3, r3
   119ec:	movne	r2, #0
   119f0:	lsr	r3, r3, #5
   119f4:	andeq	r2, r3, r7
   119f8:	cmp	r2, #0
   119fc:	bne	11dac <putchar_unlocked@plt+0xf18>
   11a00:	eor	r7, r7, #1
   11a04:	ands	r3, r3, r7
   11a08:	beq	125d0 <putchar_unlocked@plt+0x173c>
   11a0c:	ldr	r2, [sp, #68]	; 0x44
   11a10:	cmp	r2, #0
   11a14:	beq	12598 <putchar_unlocked@plt+0x1704>
   11a18:	ldr	r3, [sp, #72]	; 0x48
   11a1c:	cmp	r3, #0
   11a20:	beq	1256c <putchar_unlocked@plt+0x16d8>
   11a24:	ldr	r2, [sp, #48]	; 0x30
   11a28:	ldr	r3, [sp, #160]	; 0xa0
   11a2c:	ldr	r1, [sp, #60]	; 0x3c
   11a30:	str	r3, [sp, #16]
   11a34:	ldr	r3, [sp, #156]	; 0x9c
   11a38:	str	r3, [sp, #12]
   11a3c:	ldr	r3, [sp, #152]	; 0x98
   11a40:	str	r3, [sp, #8]
   11a44:	ldr	r3, [sp, #148]	; 0x94
   11a48:	str	r3, [sp, #4]
   11a4c:	mov	r3, #5
   11a50:	str	r3, [sp]
   11a54:	ldr	r3, [sp, #40]	; 0x28
   11a58:	mov	r0, r8
   11a5c:	bl	11914 <putchar_unlocked@plt+0xa80>
   11a60:	mov	r4, r0
   11a64:	b	125c4 <putchar_unlocked@plt+0x1730>
   11a68:	ldr	r3, [pc, #2948]	; 125f4 <putchar_unlocked@plt+0x1760>
   11a6c:	mov	r7, #1
   11a70:	mov	r4, #0
   11a74:	mov	sl, #5
   11a78:	str	r7, [sp, #24]
   11a7c:	str	r7, [sp, #32]
   11a80:	str	r3, [sp, #44]	; 0x2c
   11a84:	b	119a0 <putchar_unlocked@plt+0xb0c>
   11a88:	cmp	r7, #0
   11a8c:	bne	11bd0 <putchar_unlocked@plt+0xd3c>
   11a90:	cmp	r5, #0
   11a94:	mov	r4, #1
   11a98:	movne	r3, #34	; 0x22
   11a9c:	strbne	r3, [r8]
   11aa0:	mov	r3, #1
   11aa4:	str	r3, [sp, #24]
   11aa8:	str	r3, [sp, #32]
   11aac:	ldr	r3, [pc, #2880]	; 125f4 <putchar_unlocked@plt+0x1760>
   11ab0:	str	r3, [sp, #44]	; 0x2c
   11ab4:	b	119a0 <putchar_unlocked@plt+0xb0c>
   11ab8:	cmp	sl, #10
   11abc:	beq	11ae0 <putchar_unlocked@plt+0xc4c>
   11ac0:	mov	r1, sl
   11ac4:	ldr	r0, [pc, #2860]	; 125f8 <putchar_unlocked@plt+0x1764>
   11ac8:	bl	117e0 <putchar_unlocked@plt+0x94c>
   11acc:	mov	r1, sl
   11ad0:	str	r0, [sp, #156]	; 0x9c
   11ad4:	ldr	r0, [pc, #2848]	; 125fc <putchar_unlocked@plt+0x1768>
   11ad8:	bl	117e0 <putchar_unlocked@plt+0x94c>
   11adc:	str	r0, [sp, #160]	; 0xa0
   11ae0:	cmp	r7, #0
   11ae4:	moveq	r4, r7
   11ae8:	beq	11b00 <putchar_unlocked@plt+0xc6c>
   11aec:	mov	r4, #0
   11af0:	b	11b10 <putchar_unlocked@plt+0xc7c>
   11af4:	cmp	r5, r4
   11af8:	strbhi	r3, [r8, r4]
   11afc:	add	r4, r4, #1
   11b00:	ldr	r3, [sp, #156]	; 0x9c
   11b04:	ldrb	r3, [r3, r4]
   11b08:	cmp	r3, #0
   11b0c:	bne	11af4 <putchar_unlocked@plt+0xc60>
   11b10:	ldr	r0, [sp, #160]	; 0xa0
   11b14:	bl	10da4 <strlen@plt>
   11b18:	ldr	r3, [sp, #160]	; 0xa0
   11b1c:	str	r0, [sp, #32]
   11b20:	str	r3, [sp, #44]	; 0x2c
   11b24:	mov	r3, #1
   11b28:	str	r3, [sp, #24]
   11b2c:	b	119a0 <putchar_unlocked@plt+0xb0c>
   11b30:	mov	r3, #1
   11b34:	cmp	r7, #0
   11b38:	streq	r3, [sp, #24]
   11b3c:	beq	11b80 <putchar_unlocked@plt+0xcec>
   11b40:	str	r3, [sp, #32]
   11b44:	b	11b6c <putchar_unlocked@plt+0xcd8>
   11b48:	cmp	r7, #0
   11b4c:	beq	11b80 <putchar_unlocked@plt+0xcec>
   11b50:	mov	r3, #1
   11b54:	str	r3, [sp, #32]
   11b58:	ldr	r3, [pc, #2716]	; 125fc <putchar_unlocked@plt+0x1768>
   11b5c:	b	11be0 <putchar_unlocked@plt+0xd4c>
   11b60:	mov	r7, #1
   11b64:	str	r7, [sp, #24]
   11b68:	str	r7, [sp, #32]
   11b6c:	ldr	r3, [pc, #2696]	; 125fc <putchar_unlocked@plt+0x1768>
   11b70:	mov	r4, #0
   11b74:	str	r3, [sp, #44]	; 0x2c
   11b78:	mov	sl, #2
   11b7c:	b	119a0 <putchar_unlocked@plt+0xb0c>
   11b80:	cmp	r5, #0
   11b84:	movne	r3, #39	; 0x27
   11b88:	movne	r7, #0
   11b8c:	strbne	r3, [r8]
   11b90:	moveq	r7, r5
   11b94:	mov	r3, #1
   11b98:	mov	r4, #1
   11b9c:	str	r3, [sp, #32]
   11ba0:	ldr	r3, [pc, #2644]	; 125fc <putchar_unlocked@plt+0x1768>
   11ba4:	str	r3, [sp, #44]	; 0x2c
   11ba8:	b	11b78 <putchar_unlocked@plt+0xce4>
   11bac:	bl	10e7c <abort@plt>
   11bb0:	mov	r3, #1
   11bb4:	mov	r7, #0
   11bb8:	str	r3, [sp, #24]
   11bbc:	mov	r4, #0
   11bc0:	b	119a0 <putchar_unlocked@plt+0xb0c>
   11bc4:	mov	r7, #1
   11bc8:	str	sl, [sp, #32]
   11bcc:	b	11b6c <putchar_unlocked@plt+0xcd8>
   11bd0:	mov	r3, #1
   11bd4:	str	r7, [sp, #24]
   11bd8:	str	r3, [sp, #32]
   11bdc:	ldr	r3, [pc, #2576]	; 125f4 <putchar_unlocked@plt+0x1760>
   11be0:	str	r3, [sp, #44]	; 0x2c
   11be4:	b	11bbc <putchar_unlocked@plt+0xd28>
   11be8:	ldr	fp, [sp, #24]
   11bec:	ldr	r3, [sp, #32]
   11bf0:	cmp	sl, #2
   11bf4:	moveq	fp, #0
   11bf8:	andne	fp, fp, #1
   11bfc:	adds	r5, r3, #0
   11c00:	movne	r5, #1
   11c04:	ands	r3, fp, r5
   11c08:	str	r3, [sp, #64]	; 0x40
   11c0c:	beq	11cdc <putchar_unlocked@plt+0xe48>
   11c10:	ldr	r3, [sp, #28]
   11c14:	ldr	r2, [sp, #32]
   11c18:	cmp	r2, #1
   11c1c:	add	r6, r3, r2
   11c20:	mov	r3, r2
   11c24:	ldr	r2, [sp, #40]	; 0x28
   11c28:	movls	r3, #0
   11c2c:	movhi	r3, #1
   11c30:	cmn	r2, #1
   11c34:	movne	r3, #0
   11c38:	cmp	r3, #0
   11c3c:	beq	11c4c <putchar_unlocked@plt+0xdb8>
   11c40:	ldr	r0, [sp, #48]	; 0x30
   11c44:	bl	10da4 <strlen@plt>
   11c48:	str	r0, [sp, #40]	; 0x28
   11c4c:	ldr	r3, [sp, #40]	; 0x28
   11c50:	cmp	r6, r3
   11c54:	bhi	11cd4 <putchar_unlocked@plt+0xe40>
   11c58:	ldr	r0, [sp, #28]
   11c5c:	ldr	r2, [sp, #32]
   11c60:	ldr	r3, [sp, #48]	; 0x30
   11c64:	ldr	r1, [sp, #44]	; 0x2c
   11c68:	add	r0, r3, r0
   11c6c:	bl	10ca8 <memcmp@plt>
   11c70:	cmp	r0, #0
   11c74:	bne	11cd4 <putchar_unlocked@plt+0xe40>
   11c78:	cmp	r7, #0
   11c7c:	beq	11cdc <putchar_unlocked@plt+0xe48>
   11c80:	str	r7, [sp, #24]
   11c84:	ldr	r3, [sp, #24]
   11c88:	mov	r1, r9
   11c8c:	ldr	r2, [sp, #48]	; 0x30
   11c90:	cmp	sl, #2
   11c94:	movne	r3, #0
   11c98:	andeq	r3, r3, #1
   11c9c:	cmp	r3, #0
   11ca0:	ldr	r3, [sp, #160]	; 0xa0
   11ca4:	movne	sl, #4
   11ca8:	str	sl, [sp]
   11cac:	str	r3, [sp, #16]
   11cb0:	ldr	r3, [sp, #156]	; 0x9c
   11cb4:	str	r3, [sp, #12]
   11cb8:	mov	r3, #0
   11cbc:	str	r3, [sp, #8]
   11cc0:	ldr	r3, [sp, #148]	; 0x94
   11cc4:	bic	r3, r3, #2
   11cc8:	str	r3, [sp, #4]
   11ccc:	ldr	r3, [sp, #40]	; 0x28
   11cd0:	b	11a58 <putchar_unlocked@plt+0xbc4>
   11cd4:	mov	r3, #0
   11cd8:	str	r3, [sp, #64]	; 0x40
   11cdc:	ldr	r2, [sp, #28]
   11ce0:	ldr	r3, [sp, #48]	; 0x30
   11ce4:	add	r3, r3, r2
   11ce8:	str	r3, [sp, #80]	; 0x50
   11cec:	ldr	r3, [sp, #48]	; 0x30
   11cf0:	ldrb	r6, [r3, r2]
   11cf4:	cmp	r6, #58	; 0x3a
   11cf8:	bhi	11e5c <putchar_unlocked@plt+0xfc8>
   11cfc:	cmp	r6, #43	; 0x2b
   11d00:	bcs	1201c <putchar_unlocked@plt+0x1188>
   11d04:	cmp	r6, #32
   11d08:	beq	12070 <putchar_unlocked@plt+0x11dc>
   11d0c:	bhi	11db4 <putchar_unlocked@plt+0xf20>
   11d10:	cmp	r6, #9
   11d14:	beq	12218 <putchar_unlocked@plt+0x1384>
   11d18:	bhi	11d78 <putchar_unlocked@plt+0xee4>
   11d1c:	cmp	r6, #7
   11d20:	beq	12228 <putchar_unlocked@plt+0x1394>
   11d24:	bhi	12244 <putchar_unlocked@plt+0x13b0>
   11d28:	cmp	r6, #0
   11d2c:	beq	1208c <putchar_unlocked@plt+0x11f8>
   11d30:	ldr	r3, [sp, #76]	; 0x4c
   11d34:	cmp	r3, #1
   11d38:	bne	12290 <putchar_unlocked@plt+0x13fc>
   11d3c:	bl	10d8c <__ctype_b_loc@plt>
   11d40:	ldr	r2, [r0]
   11d44:	sxth	r3, r6
   11d48:	lsl	r3, r3, #1
   11d4c:	ldrh	r5, [r2, r3]
   11d50:	ldr	r3, [sp, #76]	; 0x4c
   11d54:	ubfx	r5, r5, #14, #1
   11d58:	str	r3, [sp, #56]	; 0x38
   11d5c:	ldr	r3, [sp, #24]
   11d60:	eor	fp, r5, #1
   11d64:	and	fp, fp, r3
   11d68:	ands	fp, fp, #255	; 0xff
   11d6c:	beq	11f4c <putchar_unlocked@plt+0x10b8>
   11d70:	mov	r5, #0
   11d74:	b	1233c <putchar_unlocked@plt+0x14a8>
   11d78:	cmp	r6, #11
   11d7c:	beq	1224c <putchar_unlocked@plt+0x13b8>
   11d80:	bcc	12220 <putchar_unlocked@plt+0x138c>
   11d84:	cmp	r6, #12
   11d88:	beq	12254 <putchar_unlocked@plt+0x13c0>
   11d8c:	cmp	r6, #13
   11d90:	moveq	r3, #114	; 0x72
   11d94:	bne	11d30 <putchar_unlocked@plt+0xe9c>
   11d98:	cmp	sl, #2
   11d9c:	movne	r2, #0
   11da0:	andeq	r2, r7, #1
   11da4:	cmp	r2, #0
   11da8:	beq	1222c <putchar_unlocked@plt+0x1398>
   11dac:	mov	sl, #2
   11db0:	b	11c84 <putchar_unlocked@plt+0xdf0>
   11db4:	cmp	r6, #37	; 0x25
   11db8:	beq	1201c <putchar_unlocked@plt+0x1188>
   11dbc:	bhi	11dd0 <putchar_unlocked@plt+0xf3c>
   11dc0:	cmp	r6, #35	; 0x23
   11dc4:	beq	12064 <putchar_unlocked@plt+0x11d0>
   11dc8:	mov	r5, #0
   11dcc:	b	12074 <putchar_unlocked@plt+0x11e0>
   11dd0:	cmp	r6, #39	; 0x27
   11dd4:	bne	11dc8 <putchar_unlocked@plt+0xf34>
   11dd8:	cmp	sl, #2
   11ddc:	ldrne	r5, [sp, #36]	; 0x24
   11de0:	movne	r3, r5
   11de4:	strne	r3, [sp, #68]	; 0x44
   11de8:	bne	12168 <putchar_unlocked@plt+0x12d4>
   11dec:	cmp	r7, #0
   11df0:	bne	11c84 <putchar_unlocked@plt+0xdf0>
   11df4:	ldr	r3, [sp, #60]	; 0x3c
   11df8:	cmp	r9, #0
   11dfc:	clz	r3, r3
   11e00:	lsr	r3, r3, #5
   11e04:	moveq	r3, #0
   11e08:	cmp	r3, #0
   11e0c:	strne	r9, [sp, #60]	; 0x3c
   11e10:	movne	r9, #0
   11e14:	bne	11e24 <putchar_unlocked@plt+0xf90>
   11e18:	cmp	r9, r4
   11e1c:	movhi	r3, #39	; 0x27
   11e20:	strbhi	r3, [r8, r4]
   11e24:	add	r3, r4, #1
   11e28:	ldr	r5, [sp, #36]	; 0x24
   11e2c:	mov	fp, #0
   11e30:	cmp	r3, r9
   11e34:	movcc	r2, #92	; 0x5c
   11e38:	str	fp, [sp, #52]	; 0x34
   11e3c:	strbcc	r2, [r8, r3]
   11e40:	add	r3, r4, #2
   11e44:	add	r4, r4, #3
   11e48:	cmp	r3, r9
   11e4c:	str	r5, [sp, #68]	; 0x44
   11e50:	movcc	r2, #39	; 0x27
   11e54:	strbcc	r2, [r8, r3]
   11e58:	b	11f4c <putchar_unlocked@plt+0x10b8>
   11e5c:	cmp	r6, #94	; 0x5e
   11e60:	beq	11dc8 <putchar_unlocked@plt+0xf34>
   11e64:	bhi	12024 <putchar_unlocked@plt+0x1190>
   11e68:	cmp	r6, #90	; 0x5a
   11e6c:	bhi	12010 <putchar_unlocked@plt+0x117c>
   11e70:	cmp	r6, #65	; 0x41
   11e74:	bcs	1201c <putchar_unlocked@plt+0x1188>
   11e78:	cmp	r6, #62	; 0x3e
   11e7c:	bls	11dc8 <putchar_unlocked@plt+0xf34>
   11e80:	cmp	r6, #63	; 0x3f
   11e84:	bne	11d30 <putchar_unlocked@plt+0xe9c>
   11e88:	cmp	sl, #2
   11e8c:	beq	12170 <putchar_unlocked@plt+0x12dc>
   11e90:	cmp	sl, #5
   11e94:	movne	fp, #0
   11e98:	bne	12540 <putchar_unlocked@plt+0x16ac>
   11e9c:	ldr	r3, [sp, #148]	; 0x94
   11ea0:	tst	r3, #4
   11ea4:	beq	12178 <putchar_unlocked@plt+0x12e4>
   11ea8:	ldr	r3, [sp, #28]
   11eac:	add	r2, r3, #2
   11eb0:	ldr	r3, [sp, #40]	; 0x28
   11eb4:	cmp	r2, r3
   11eb8:	bcs	12178 <putchar_unlocked@plt+0x12e4>
   11ebc:	ldr	r1, [sp, #28]
   11ec0:	ldr	r3, [sp, #48]	; 0x30
   11ec4:	add	r3, r3, r1
   11ec8:	ldrb	r1, [r3, #1]
   11ecc:	cmp	r1, #63	; 0x3f
   11ed0:	bne	12178 <putchar_unlocked@plt+0x12e4>
   11ed4:	ldr	r3, [sp, #48]	; 0x30
   11ed8:	ldrb	r6, [r3, r2]
   11edc:	sub	r3, r6, #33	; 0x21
   11ee0:	uxtb	r3, r3
   11ee4:	cmp	r3, #29
   11ee8:	bhi	12548 <putchar_unlocked@plt+0x16b4>
   11eec:	ldr	r0, [pc, #1804]	; 12600 <putchar_unlocked@plt+0x176c>
   11ef0:	mov	r5, #1
   11ef4:	ands	r5, r0, r5, lsl r3
   11ef8:	beq	12550 <putchar_unlocked@plt+0x16bc>
   11efc:	cmp	r7, #0
   11f00:	bne	11c84 <putchar_unlocked@plt+0xdf0>
   11f04:	cmp	r9, r4
   11f08:	add	r3, r4, #1
   11f0c:	str	r2, [sp, #28]
   11f10:	mov	r5, #0
   11f14:	strbhi	r1, [r8, r4]
   11f18:	cmp	r9, r3
   11f1c:	mov	fp, r5
   11f20:	movhi	r1, #34	; 0x22
   11f24:	strbhi	r1, [r8, r3]
   11f28:	add	r3, r4, #2
   11f2c:	cmp	r9, r3
   11f30:	movhi	r1, #34	; 0x22
   11f34:	strbhi	r1, [r8, r3]
   11f38:	add	r3, r4, #3
   11f3c:	add	r4, r4, #4
   11f40:	cmp	r9, r3
   11f44:	movhi	r1, #63	; 0x3f
   11f48:	strbhi	r1, [r8, r3]
   11f4c:	ldr	r3, [sp, #24]
   11f50:	eor	r3, r3, #1
   11f54:	cmp	sl, #2
   11f58:	orreq	r3, r3, #1
   11f5c:	eor	r3, r3, #1
   11f60:	orr	r3, r7, r3
   11f64:	tst	r3, #255	; 0xff
   11f68:	beq	11f94 <putchar_unlocked@plt+0x1100>
   11f6c:	ldr	r3, [sp, #152]	; 0x98
   11f70:	cmp	r3, #0
   11f74:	beq	11f94 <putchar_unlocked@plt+0x1100>
   11f78:	ldr	r1, [sp, #152]	; 0x98
   11f7c:	ubfx	r2, r6, #5, #8
   11f80:	and	r3, r6, #31
   11f84:	ldr	r2, [r1, r2, lsl #2]
   11f88:	lsr	r3, r2, r3
   11f8c:	tst	r3, #1
   11f90:	bne	11fa0 <putchar_unlocked@plt+0x110c>
   11f94:	ldr	r3, [sp, #64]	; 0x40
   11f98:	cmp	r3, #0
   11f9c:	beq	12198 <putchar_unlocked@plt+0x1304>
   11fa0:	sub	r3, sl, #2
   11fa4:	cmp	r7, #0
   11fa8:	clz	r3, r3
   11fac:	lsr	r3, r3, #5
   11fb0:	bne	11c84 <putchar_unlocked@plt+0xdf0>
   11fb4:	ldr	r2, [sp, #52]	; 0x34
   11fb8:	eor	r2, r2, #1
   11fbc:	ands	r3, r3, r2
   11fc0:	beq	11ff8 <putchar_unlocked@plt+0x1164>
   11fc4:	cmp	r9, r4
   11fc8:	str	r3, [sp, #52]	; 0x34
   11fcc:	movhi	r2, #39	; 0x27
   11fd0:	strbhi	r2, [r8, r4]
   11fd4:	add	r2, r4, #1
   11fd8:	cmp	r9, r2
   11fdc:	movhi	r1, #36	; 0x24
   11fe0:	strbhi	r1, [r8, r2]
   11fe4:	add	r2, r4, #2
   11fe8:	add	r4, r4, #3
   11fec:	cmp	r9, r2
   11ff0:	movhi	r1, #39	; 0x27
   11ff4:	strbhi	r1, [r8, r2]
   11ff8:	cmp	r9, r4
   11ffc:	ldr	fp, [sp, #36]	; 0x24
   12000:	movhi	r3, #92	; 0x5c
   12004:	strbhi	r3, [r8, r4]
   12008:	add	r4, r4, #1
   1200c:	b	12198 <putchar_unlocked@plt+0x1304>
   12010:	cmp	r6, #92	; 0x5c
   12014:	beq	12180 <putchar_unlocked@plt+0x12ec>
   12018:	bls	11dc8 <putchar_unlocked@plt+0xf34>
   1201c:	ldr	r5, [sp, #36]	; 0x24
   12020:	b	12168 <putchar_unlocked@plt+0x12d4>
   12024:	cmp	r6, #122	; 0x7a
   12028:	bhi	12048 <putchar_unlocked@plt+0x11b4>
   1202c:	cmp	r6, #97	; 0x61
   12030:	bcs	1201c <putchar_unlocked@plt+0x1188>
   12034:	cmp	r6, #95	; 0x5f
   12038:	beq	1201c <putchar_unlocked@plt+0x1188>
   1203c:	cmp	r6, #96	; 0x60
   12040:	bne	11d30 <putchar_unlocked@plt+0xe9c>
   12044:	b	11dc8 <putchar_unlocked@plt+0xf34>
   12048:	cmp	r6, #124	; 0x7c
   1204c:	beq	11dc8 <putchar_unlocked@plt+0xf34>
   12050:	bcc	1225c <putchar_unlocked@plt+0x13c8>
   12054:	cmp	r6, #125	; 0x7d
   12058:	beq	1225c <putchar_unlocked@plt+0x13c8>
   1205c:	cmp	r6, #126	; 0x7e
   12060:	bne	11d30 <putchar_unlocked@plt+0xe9c>
   12064:	ldr	r3, [sp, #28]
   12068:	cmp	r3, #0
   1206c:	bne	12178 <putchar_unlocked@plt+0x12e4>
   12070:	ldr	r5, [sp, #36]	; 0x24
   12074:	cmp	sl, #2
   12078:	movne	fp, #0
   1207c:	andeq	fp, r7, #1
   12080:	cmp	fp, #0
   12084:	beq	11f4c <putchar_unlocked@plt+0x10b8>
   12088:	b	11dac <putchar_unlocked@plt+0xf18>
   1208c:	ldr	r3, [sp, #24]
   12090:	cmp	r3, #0
   12094:	beq	1215c <putchar_unlocked@plt+0x12c8>
   12098:	sub	r2, sl, #2
   1209c:	cmp	r7, #0
   120a0:	clz	r2, r2
   120a4:	lsr	r2, r2, #5
   120a8:	bne	11c80 <putchar_unlocked@plt+0xdec>
   120ac:	ldr	r3, [sp, #52]	; 0x34
   120b0:	eor	r3, r3, #1
   120b4:	ands	r2, r2, r3
   120b8:	moveq	r3, r4
   120bc:	beq	120f4 <putchar_unlocked@plt+0x1260>
   120c0:	cmp	r9, r4
   120c4:	str	r2, [sp, #52]	; 0x34
   120c8:	movhi	r3, #39	; 0x27
   120cc:	strbhi	r3, [r8, r4]
   120d0:	add	r3, r4, #1
   120d4:	cmp	r9, r3
   120d8:	movhi	r1, #36	; 0x24
   120dc:	strbhi	r1, [r8, r3]
   120e0:	add	r3, r4, #2
   120e4:	cmp	r9, r3
   120e8:	movhi	r1, #39	; 0x27
   120ec:	strbhi	r1, [r8, r3]
   120f0:	add	r3, r4, #3
   120f4:	cmp	r9, r3
   120f8:	add	r4, r3, #1
   120fc:	movhi	r2, #92	; 0x5c
   12100:	strbhi	r2, [r8, r3]
   12104:	cmp	fp, #0
   12108:	beq	12530 <putchar_unlocked@plt+0x169c>
   1210c:	ldr	r2, [sp, #28]
   12110:	ldr	r1, [sp, #40]	; 0x28
   12114:	add	r2, r2, #1
   12118:	cmp	r2, r1
   1211c:	bcs	12154 <putchar_unlocked@plt+0x12c0>
   12120:	ldr	r1, [sp, #48]	; 0x30
   12124:	mov	r6, #48	; 0x30
   12128:	ldrb	r2, [r1, r2]
   1212c:	sub	r2, r2, #48	; 0x30
   12130:	cmp	r2, #9
   12134:	bhi	12540 <putchar_unlocked@plt+0x16ac>
   12138:	cmp	r9, r4
   1213c:	add	r2, r3, #2
   12140:	strbhi	r6, [r8, r4]
   12144:	cmp	r9, r2
   12148:	add	r4, r3, #3
   1214c:	movhi	r1, #48	; 0x30
   12150:	strbhi	r1, [r8, r2]
   12154:	mov	r5, #0
   12158:	b	12538 <putchar_unlocked@plt+0x16a4>
   1215c:	ldr	r3, [sp, #148]	; 0x94
   12160:	ands	r5, r3, #1
   12164:	bne	121ec <putchar_unlocked@plt+0x1358>
   12168:	mov	fp, #0
   1216c:	b	11f4c <putchar_unlocked@plt+0x10b8>
   12170:	cmp	r7, #0
   12174:	bne	11c84 <putchar_unlocked@plt+0xdf0>
   12178:	mov	r5, #0
   1217c:	b	12168 <putchar_unlocked@plt+0x12d4>
   12180:	cmp	sl, #2
   12184:	bne	121f8 <putchar_unlocked@plt+0x1364>
   12188:	cmp	r7, #0
   1218c:	bne	11c84 <putchar_unlocked@plt+0xdf0>
   12190:	mov	r5, r7
   12194:	mov	fp, r7
   12198:	ldr	r3, [sp, #52]	; 0x34
   1219c:	eor	fp, fp, #1
   121a0:	tst	r3, fp
   121a4:	beq	121d0 <putchar_unlocked@plt+0x133c>
   121a8:	cmp	r9, r4
   121ac:	movhi	r3, #39	; 0x27
   121b0:	strbhi	r3, [r8, r4]
   121b4:	add	r3, r4, #1
   121b8:	add	r4, r4, #2
   121bc:	cmp	r9, r3
   121c0:	movhi	r2, #39	; 0x27
   121c4:	strbhi	r2, [r8, r3]
   121c8:	mov	r3, #0
   121cc:	str	r3, [sp, #52]	; 0x34
   121d0:	cmp	r9, r4
   121d4:	ldr	r3, [sp, #72]	; 0x48
   121d8:	strbhi	r6, [r8, r4]
   121dc:	cmp	r5, #0
   121e0:	add	r4, r4, #1
   121e4:	moveq	r3, #0
   121e8:	str	r3, [sp, #72]	; 0x48
   121ec:	ldr	r3, [sp, #28]
   121f0:	add	r3, r3, #1
   121f4:	b	119ac <putchar_unlocked@plt+0xb18>
   121f8:	ldr	r3, [sp, #24]
   121fc:	and	r3, r3, r7
   12200:	tst	r5, r3
   12204:	moveq	r3, r6
   12208:	beq	11d98 <putchar_unlocked@plt+0xf04>
   1220c:	mov	fp, #0
   12210:	mov	r5, fp
   12214:	b	12198 <putchar_unlocked@plt+0x1304>
   12218:	mov	r3, #116	; 0x74
   1221c:	b	11d98 <putchar_unlocked@plt+0xf04>
   12220:	mov	r3, #110	; 0x6e
   12224:	b	11d98 <putchar_unlocked@plt+0xf04>
   12228:	mov	r3, #97	; 0x61
   1222c:	ldr	r2, [sp, #24]
   12230:	cmp	r2, #0
   12234:	beq	12178 <putchar_unlocked@plt+0x12e4>
   12238:	mov	r6, r3
   1223c:	mov	r5, #0
   12240:	b	11fa0 <putchar_unlocked@plt+0x110c>
   12244:	mov	r3, #98	; 0x62
   12248:	b	1222c <putchar_unlocked@plt+0x1398>
   1224c:	mov	r3, #118	; 0x76
   12250:	b	1222c <putchar_unlocked@plt+0x1398>
   12254:	mov	r3, #102	; 0x66
   12258:	b	1222c <putchar_unlocked@plt+0x1398>
   1225c:	ldr	r3, [sp, #40]	; 0x28
   12260:	cmn	r3, #1
   12264:	bne	12284 <putchar_unlocked@plt+0x13f0>
   12268:	ldr	r3, [sp, #48]	; 0x30
   1226c:	ldrb	r3, [r3, #1]
   12270:	adds	r3, r3, #0
   12274:	movne	r3, #1
   12278:	cmp	r3, #0
   1227c:	bne	12178 <putchar_unlocked@plt+0x12e4>
   12280:	b	12064 <putchar_unlocked@plt+0x11d0>
   12284:	ldr	r3, [sp, #40]	; 0x28
   12288:	subs	r3, r3, #1
   1228c:	b	12274 <putchar_unlocked@plt+0x13e0>
   12290:	mov	r3, #0
   12294:	mov	r2, #0
   12298:	strd	r2, [sp, #96]	; 0x60
   1229c:	ldr	r3, [sp, #40]	; 0x28
   122a0:	cmn	r3, #1
   122a4:	bne	122b4 <putchar_unlocked@plt+0x1420>
   122a8:	ldr	r0, [sp, #48]	; 0x30
   122ac:	bl	10da4 <strlen@plt>
   122b0:	str	r0, [sp, #40]	; 0x28
   122b4:	ldr	r5, [sp, #36]	; 0x24
   122b8:	mov	r3, #0
   122bc:	str	r3, [sp, #56]	; 0x38
   122c0:	ldr	r3, [sp, #28]
   122c4:	add	r0, sp, #92	; 0x5c
   122c8:	ldr	r1, [sp, #40]	; 0x28
   122cc:	ldr	r2, [sp, #56]	; 0x38
   122d0:	add	r2, r3, r2
   122d4:	ldr	r3, [sp, #48]	; 0x30
   122d8:	add	fp, r3, r2
   122dc:	sub	r2, r1, r2
   122e0:	add	r3, sp, #96	; 0x60
   122e4:	mov	r1, fp
   122e8:	bl	13978 <putchar_unlocked@plt+0x2ae4>
   122ec:	subs	r2, r0, #0
   122f0:	beq	12330 <putchar_unlocked@plt+0x149c>
   122f4:	cmn	r2, #1
   122f8:	beq	12504 <putchar_unlocked@plt+0x1670>
   122fc:	cmn	r2, #2
   12300:	bne	12474 <putchar_unlocked@plt+0x15e0>
   12304:	ldr	r3, [sp, #28]
   12308:	ldr	r2, [sp, #56]	; 0x38
   1230c:	add	r3, r3, r2
   12310:	ldr	r2, [sp, #40]	; 0x28
   12314:	cmp	r2, r3
   12318:	bls	12504 <putchar_unlocked@plt+0x1670>
   1231c:	ldr	r2, [sp, #56]	; 0x38
   12320:	ldr	r3, [sp, #80]	; 0x50
   12324:	ldrb	r5, [r3, r2]
   12328:	cmp	r5, #0
   1232c:	bne	12464 <putchar_unlocked@plt+0x15d0>
   12330:	ldr	r3, [sp, #56]	; 0x38
   12334:	cmp	r3, #1
   12338:	bls	11d5c <putchar_unlocked@plt+0xec8>
   1233c:	ldr	r3, [sp, #28]
   12340:	mov	fp, #0
   12344:	mov	ip, #92	; 0x5c
   12348:	ldr	r2, [sp, #56]	; 0x38
   1234c:	add	r3, r3, r2
   12350:	ldr	r2, [sp, #24]
   12354:	str	r3, [sp, #36]	; 0x24
   12358:	eor	r3, r5, #1
   1235c:	and	r3, r3, r2
   12360:	mov	r2, #39	; 0x27
   12364:	uxtb	r3, r3
   12368:	cmp	r3, #0
   1236c:	beq	1250c <putchar_unlocked@plt+0x1678>
   12370:	sub	r0, sl, #2
   12374:	cmp	r7, #0
   12378:	clz	r0, r0
   1237c:	lsr	r0, r0, #5
   12380:	bne	11c80 <putchar_unlocked@plt+0xdec>
   12384:	ldr	r1, [sp, #52]	; 0x34
   12388:	eor	r1, r1, #1
   1238c:	ands	r1, r0, r1
   12390:	beq	123c0 <putchar_unlocked@plt+0x152c>
   12394:	cmp	r9, r4
   12398:	add	r0, r4, #1
   1239c:	str	r1, [sp, #52]	; 0x34
   123a0:	strbhi	r2, [r8, r4]
   123a4:	cmp	r9, r0
   123a8:	movhi	lr, #36	; 0x24
   123ac:	strbhi	lr, [r8, r0]
   123b0:	add	r0, r4, #2
   123b4:	add	r4, r4, #3
   123b8:	cmp	r9, r0
   123bc:	strbhi	r2, [r8, r0]
   123c0:	cmp	r9, r4
   123c4:	add	r0, r4, #1
   123c8:	mov	fp, r3
   123cc:	strbhi	ip, [r8, r4]
   123d0:	cmp	r9, r0
   123d4:	lsrhi	r1, r6, #6
   123d8:	addhi	r1, r1, #48	; 0x30
   123dc:	strbhi	r1, [r8, r0]
   123e0:	add	r0, r4, #2
   123e4:	add	r4, r4, #3
   123e8:	cmp	r9, r0
   123ec:	ubfxhi	r1, r6, #3, #3
   123f0:	and	r6, r6, #7
   123f4:	add	r6, r6, #48	; 0x30
   123f8:	addhi	r1, r1, #48	; 0x30
   123fc:	strbhi	r1, [r8, r0]
   12400:	eor	r0, fp, #1
   12404:	ldr	r1, [sp, #28]
   12408:	ldr	lr, [sp, #52]	; 0x34
   1240c:	add	r1, r1, #1
   12410:	and	r0, r0, lr
   12414:	ldr	lr, [sp, #36]	; 0x24
   12418:	cmp	r1, lr
   1241c:	bcs	12198 <putchar_unlocked@plt+0x1304>
   12420:	cmp	r0, #0
   12424:	beq	12448 <putchar_unlocked@plt+0x15b4>
   12428:	cmp	r9, r4
   1242c:	add	r0, r4, #1
   12430:	strbhi	r2, [r8, r4]
   12434:	cmp	r9, r0
   12438:	add	r4, r4, #2
   1243c:	strbhi	r2, [r8, r0]
   12440:	mov	r0, #0
   12444:	str	r0, [sp, #52]	; 0x34
   12448:	ldr	r0, [sp, #48]	; 0x30
   1244c:	cmp	r9, r4
   12450:	str	r1, [sp, #28]
   12454:	strbhi	r6, [r8, r4]
   12458:	add	r4, r4, #1
   1245c:	ldrb	r6, [r0, r1]
   12460:	b	12368 <putchar_unlocked@plt+0x14d4>
   12464:	ldr	r3, [sp, #56]	; 0x38
   12468:	add	r3, r3, #1
   1246c:	str	r3, [sp, #56]	; 0x38
   12470:	b	12304 <putchar_unlocked@plt+0x1470>
   12474:	cmp	sl, #2
   12478:	movne	r3, #0
   1247c:	andeq	r3, r7, #1
   12480:	cmp	r3, #0
   12484:	movne	r1, #1
   12488:	bne	124e4 <putchar_unlocked@plt+0x1650>
   1248c:	ldr	r0, [sp, #92]	; 0x5c
   12490:	str	r2, [sp, #84]	; 0x54
   12494:	bl	10cf0 <iswprint@plt>
   12498:	ldr	r3, [sp, #56]	; 0x38
   1249c:	cmp	r0, #0
   124a0:	add	r0, sp, #96	; 0x60
   124a4:	moveq	r5, #0
   124a8:	ldr	r2, [sp, #84]	; 0x54
   124ac:	add	r3, r3, r2
   124b0:	str	r3, [sp, #56]	; 0x38
   124b4:	bl	10c9c <mbsinit@plt>
   124b8:	cmp	r0, #0
   124bc:	beq	122c0 <putchar_unlocked@plt+0x142c>
   124c0:	b	12330 <putchar_unlocked@plt+0x149c>
   124c4:	ldrb	r3, [fp, #1]!
   124c8:	cmp	r3, #94	; 0x5e
   124cc:	beq	11dac <putchar_unlocked@plt+0xf18>
   124d0:	bhi	124f0 <putchar_unlocked@plt+0x165c>
   124d4:	sub	r3, r3, #91	; 0x5b
   124d8:	cmp	r3, #1
   124dc:	bls	11dac <putchar_unlocked@plt+0xf18>
   124e0:	add	r1, r1, #1
   124e4:	cmp	r1, r2
   124e8:	bne	124c4 <putchar_unlocked@plt+0x1630>
   124ec:	b	1248c <putchar_unlocked@plt+0x15f8>
   124f0:	cmp	r3, #96	; 0x60
   124f4:	beq	11dac <putchar_unlocked@plt+0xf18>
   124f8:	cmp	r3, #124	; 0x7c
   124fc:	bne	124e0 <putchar_unlocked@plt+0x164c>
   12500:	b	11dac <putchar_unlocked@plt+0xf18>
   12504:	mov	r5, #0
   12508:	b	12330 <putchar_unlocked@plt+0x149c>
   1250c:	ldr	r1, [sp, #64]	; 0x40
   12510:	cmp	r1, #0
   12514:	beq	12400 <putchar_unlocked@plt+0x156c>
   12518:	cmp	r9, r4
   1251c:	mov	r1, #0
   12520:	strbhi	ip, [r8, r4]
   12524:	add	r4, r4, #1
   12528:	str	r1, [sp, #64]	; 0x40
   1252c:	b	12400 <putchar_unlocked@plt+0x156c>
   12530:	mov	r5, fp
   12534:	ldr	fp, [sp, #24]
   12538:	mov	r6, #48	; 0x30
   1253c:	b	11f4c <putchar_unlocked@plt+0x10b8>
   12540:	mov	r5, #0
   12544:	b	11f4c <putchar_unlocked@plt+0x10b8>
   12548:	mov	r6, r1
   1254c:	b	12178 <putchar_unlocked@plt+0x12e4>
   12550:	mov	r6, r1
   12554:	b	12168 <putchar_unlocked@plt+0x12d4>
   12558:	ldr	r2, [sp, #28]
   1255c:	ldr	r3, [sp, #40]	; 0x28
   12560:	subs	r3, r3, r2
   12564:	movne	r3, #1
   12568:	b	119d0 <putchar_unlocked@plt+0xb3c>
   1256c:	ldr	r3, [sp, #60]	; 0x3c
   12570:	mov	sl, #2
   12574:	ldr	r7, [sp, #72]	; 0x48
   12578:	adds	r6, r3, #0
   1257c:	mov	r5, r3
   12580:	movne	r6, #1
   12584:	cmp	r9, #0
   12588:	movne	r6, #0
   1258c:	cmp	r6, #0
   12590:	bne	11960 <putchar_unlocked@plt+0xacc>
   12594:	ldr	r3, [sp, #68]	; 0x44
   12598:	ldr	r2, [sp, #44]	; 0x2c
   1259c:	cmp	r2, #0
   125a0:	moveq	r3, #0
   125a4:	andne	r3, r3, #1
   125a8:	cmp	r3, #0
   125ac:	movne	r3, r2
   125b0:	subne	r3, r3, #1
   125b4:	bne	125e4 <putchar_unlocked@plt+0x1750>
   125b8:	cmp	r9, r4
   125bc:	movhi	r3, #0
   125c0:	strbhi	r3, [r8, r4]
   125c4:	mov	r0, r4
   125c8:	add	sp, sp, #108	; 0x6c
   125cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125d0:	mov	r3, r7
   125d4:	b	12598 <putchar_unlocked@plt+0x1704>
   125d8:	cmp	r9, r4
   125dc:	strbhi	r2, [r8, r4]
   125e0:	add	r4, r4, #1
   125e4:	ldrb	r2, [r3, #1]!
   125e8:	cmp	r2, #0
   125ec:	bne	125d8 <putchar_unlocked@plt+0x1744>
   125f0:	b	125b8 <putchar_unlocked@plt+0x1724>
   125f4:	andeq	r3, r1, r8, asr pc
   125f8:	andeq	r3, r1, fp, ror #30
   125fc:	andeq	r3, r1, r9, ror #30
   12600:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12604:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12608:	sub	sp, sp, #52	; 0x34
   1260c:	mov	r6, r0
   12610:	mov	r5, r3
   12614:	mov	r8, r1
   12618:	mov	r9, r2
   1261c:	bl	10db0 <__errno_location@plt>
   12620:	ldr	r3, [r0]
   12624:	cmn	r6, #-2147483647	; 0x80000001
   12628:	str	r0, [sp, #24]
   1262c:	ldr	r7, [pc, #368]	; 127a4 <putchar_unlocked@plt+0x1910>
   12630:	str	r3, [sp, #32]
   12634:	movne	r3, #0
   12638:	moveq	r3, #1
   1263c:	orrs	r3, r3, r6, lsr #31
   12640:	ldr	r4, [r7]
   12644:	beq	1264c <putchar_unlocked@plt+0x17b8>
   12648:	bl	10e7c <abort@plt>
   1264c:	ldr	r2, [r7, #4]
   12650:	cmp	r2, r6
   12654:	bgt	126c4 <putchar_unlocked@plt+0x1830>
   12658:	add	sl, r7, #8
   1265c:	mov	r3, #8
   12660:	cmp	r4, sl
   12664:	add	r1, sp, #44	; 0x2c
   12668:	str	r2, [sp, #44]	; 0x2c
   1266c:	sub	r2, r6, r2
   12670:	movne	r0, r4
   12674:	moveq	r0, #0
   12678:	add	r2, r2, #1
   1267c:	str	r3, [sp]
   12680:	mvn	r3, #-2147483648	; 0x80000000
   12684:	bl	13498 <putchar_unlocked@plt+0x2604>
   12688:	cmp	r4, sl
   1268c:	mov	fp, r0
   12690:	str	r0, [r7]
   12694:	ldmeq	r4, {r0, r1}
   12698:	mov	r4, fp
   1269c:	ldr	r2, [sp, #44]	; 0x2c
   126a0:	stmeq	fp, {r0, r1}
   126a4:	mov	r1, #0
   126a8:	ldr	r0, [r7, #4]
   126ac:	sub	r2, r2, r0
   126b0:	add	r0, fp, r0, lsl #3
   126b4:	lsl	r2, r2, #3
   126b8:	bl	10dc8 <memset@plt>
   126bc:	ldr	r3, [sp, #44]	; 0x2c
   126c0:	str	r3, [r7, #4]
   126c4:	ldr	r3, [r5, #4]
   126c8:	add	sl, r4, r6, lsl #3
   126cc:	mov	r2, r8
   126d0:	ldr	fp, [r4, r6, lsl #3]
   126d4:	ldr	r7, [sl, #4]
   126d8:	orr	r3, r3, #1
   126dc:	str	r3, [sp, #28]
   126e0:	add	r3, r5, #8
   126e4:	mov	r1, fp
   126e8:	str	r3, [sp, #36]	; 0x24
   126ec:	mov	r0, r7
   126f0:	ldr	r3, [r5, #44]	; 0x2c
   126f4:	str	r3, [sp, #16]
   126f8:	ldr	r3, [r5, #40]	; 0x28
   126fc:	str	r3, [sp, #12]
   12700:	add	r3, r5, #8
   12704:	str	r3, [sp, #8]
   12708:	ldr	r3, [sp, #28]
   1270c:	str	r3, [sp, #4]
   12710:	ldr	r3, [r5]
   12714:	str	r3, [sp]
   12718:	mov	r3, r9
   1271c:	bl	11914 <putchar_unlocked@plt+0xa80>
   12720:	cmp	fp, r0
   12724:	bhi	1278c <putchar_unlocked@plt+0x18f8>
   12728:	ldr	r3, [pc, #120]	; 127a8 <putchar_unlocked@plt+0x1914>
   1272c:	add	fp, r0, #1
   12730:	str	fp, [r4, r6, lsl #3]
   12734:	cmp	r7, r3
   12738:	beq	12744 <putchar_unlocked@plt+0x18b0>
   1273c:	mov	r0, r7
   12740:	bl	1153c <putchar_unlocked@plt+0x6a8>
   12744:	mov	r0, fp
   12748:	bl	13388 <putchar_unlocked@plt+0x24f4>
   1274c:	ldr	r3, [r5, #44]	; 0x2c
   12750:	mov	r2, r8
   12754:	mov	r1, fp
   12758:	str	r0, [sl, #4]
   1275c:	mov	r7, r0
   12760:	str	r3, [sp, #16]
   12764:	ldr	r3, [r5, #40]	; 0x28
   12768:	str	r3, [sp, #12]
   1276c:	add	r3, r5, #8
   12770:	str	r3, [sp, #8]
   12774:	ldr	r3, [sp, #28]
   12778:	str	r3, [sp, #4]
   1277c:	ldr	r3, [r5]
   12780:	str	r3, [sp]
   12784:	mov	r3, r9
   12788:	bl	11914 <putchar_unlocked@plt+0xa80>
   1278c:	ldr	r3, [sp, #24]
   12790:	mov	r0, r7
   12794:	ldr	r2, [sp, #32]
   12798:	str	r2, [r3]
   1279c:	add	sp, sp, #52	; 0x34
   127a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127a4:	andeq	r5, r2, ip, ror #1
   127a8:	andeq	r5, r2, ip, asr r1
   127ac:	push	{r4, r5, r6, lr}
   127b0:	mov	r5, r0
   127b4:	bl	10db0 <__errno_location@plt>
   127b8:	mov	r4, r0
   127bc:	cmp	r5, #0
   127c0:	ldr	r0, [pc, #20]	; 127dc <putchar_unlocked@plt+0x1948>
   127c4:	mov	r1, #48	; 0x30
   127c8:	movne	r0, r5
   127cc:	ldr	r6, [r4]
   127d0:	bl	13588 <putchar_unlocked@plt+0x26f4>
   127d4:	str	r6, [r4]
   127d8:	pop	{r4, r5, r6, pc}
   127dc:	andeq	r5, r2, ip, asr r2
   127e0:	ldr	r3, [pc, #12]	; 127f4 <putchar_unlocked@plt+0x1960>
   127e4:	cmp	r0, #0
   127e8:	moveq	r0, r3
   127ec:	ldr	r0, [r0]
   127f0:	bx	lr
   127f4:	andeq	r5, r2, ip, asr r2
   127f8:	ldr	r3, [pc, #12]	; 1280c <putchar_unlocked@plt+0x1978>
   127fc:	cmp	r0, #0
   12800:	moveq	r0, r3
   12804:	str	r1, [r0]
   12808:	bx	lr
   1280c:	andeq	r5, r2, ip, asr r2
   12810:	ldr	r3, [pc, #52]	; 1284c <putchar_unlocked@plt+0x19b8>
   12814:	cmp	r0, #0
   12818:	push	{lr}		; (str lr, [sp, #-4]!)
   1281c:	lsr	lr, r1, #5
   12820:	and	r1, r1, #31
   12824:	moveq	r0, r3
   12828:	add	r3, r0, #8
   1282c:	ldr	ip, [r3, lr, lsl #2]
   12830:	lsr	r0, ip, r1
   12834:	eor	r2, r2, r0
   12838:	and	r0, r0, #1
   1283c:	and	r2, r2, #1
   12840:	eor	r1, ip, r2, lsl r1
   12844:	str	r1, [r3, lr, lsl #2]
   12848:	pop	{pc}		; (ldr pc, [sp], #4)
   1284c:	andeq	r5, r2, ip, asr r2
   12850:	ldr	r3, [pc, #16]	; 12868 <putchar_unlocked@plt+0x19d4>
   12854:	cmp	r0, #0
   12858:	movne	r3, r0
   1285c:	ldr	r0, [r3, #4]
   12860:	str	r1, [r3, #4]
   12864:	bx	lr
   12868:	andeq	r5, r2, ip, asr r2
   1286c:	ldr	r3, [pc, #44]	; 128a0 <putchar_unlocked@plt+0x1a0c>
   12870:	cmp	r0, #0
   12874:	moveq	r0, r3
   12878:	mov	r3, #10
   1287c:	cmp	r2, #0
   12880:	cmpne	r1, #0
   12884:	str	r3, [r0]
   12888:	bne	12894 <putchar_unlocked@plt+0x1a00>
   1288c:	push	{r4, lr}
   12890:	bl	10e7c <abort@plt>
   12894:	str	r1, [r0, #40]	; 0x28
   12898:	str	r2, [r0, #44]	; 0x2c
   1289c:	bx	lr
   128a0:	andeq	r5, r2, ip, asr r2
   128a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   128a8:	sub	sp, sp, #24
   128ac:	mov	sl, r3
   128b0:	mov	r7, r0
   128b4:	mov	r8, r1
   128b8:	mov	r9, r2
   128bc:	ldr	r4, [sp, #56]	; 0x38
   128c0:	ldr	r3, [pc, #88]	; 12920 <putchar_unlocked@plt+0x1a8c>
   128c4:	cmp	r4, #0
   128c8:	moveq	r4, r3
   128cc:	bl	10db0 <__errno_location@plt>
   128d0:	ldr	r3, [r4, #44]	; 0x2c
   128d4:	mov	r5, r0
   128d8:	mov	r2, r9
   128dc:	mov	r1, r8
   128e0:	mov	r0, r7
   128e4:	ldr	r6, [r5]
   128e8:	str	r3, [sp, #16]
   128ec:	ldr	r3, [r4, #40]	; 0x28
   128f0:	str	r3, [sp, #12]
   128f4:	add	r3, r4, #8
   128f8:	str	r3, [sp, #8]
   128fc:	ldr	r3, [r4, #4]
   12900:	str	r3, [sp, #4]
   12904:	ldr	r3, [r4]
   12908:	str	r3, [sp]
   1290c:	mov	r3, sl
   12910:	bl	11914 <putchar_unlocked@plt+0xa80>
   12914:	str	r6, [r5]
   12918:	add	sp, sp, #24
   1291c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12920:	andeq	r5, r2, ip, asr r2
   12924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12928:	cmp	r3, #0
   1292c:	sub	sp, sp, #44	; 0x2c
   12930:	mov	r6, r2
   12934:	mov	sl, r1
   12938:	mov	r9, r0
   1293c:	ldr	r4, [pc, #176]	; 129f4 <putchar_unlocked@plt+0x1b60>
   12940:	movne	r4, r3
   12944:	bl	10db0 <__errno_location@plt>
   12948:	ldr	r3, [r0]
   1294c:	mov	r1, #0
   12950:	mov	r2, r9
   12954:	mov	r8, r0
   12958:	mov	r0, r1
   1295c:	ldr	r5, [r4, #4]
   12960:	add	fp, r4, #8
   12964:	str	r3, [sp, #28]
   12968:	ldr	r3, [r4, #44]	; 0x2c
   1296c:	cmp	r6, #0
   12970:	orreq	r5, r5, #1
   12974:	str	r3, [sp, #16]
   12978:	ldr	r3, [r4, #40]	; 0x28
   1297c:	stmib	sp, {r5, fp}
   12980:	str	r3, [sp, #12]
   12984:	ldr	r3, [r4]
   12988:	str	r3, [sp]
   1298c:	mov	r3, sl
   12990:	bl	11914 <putchar_unlocked@plt+0xa80>
   12994:	add	r1, r0, #1
   12998:	mov	r7, r0
   1299c:	mov	r0, r1
   129a0:	str	r1, [sp, #36]	; 0x24
   129a4:	bl	13388 <putchar_unlocked@plt+0x24f4>
   129a8:	ldr	r3, [r4, #44]	; 0x2c
   129ac:	mov	r2, r9
   129b0:	ldr	r1, [sp, #36]	; 0x24
   129b4:	str	r3, [sp, #16]
   129b8:	ldr	r3, [r4, #40]	; 0x28
   129bc:	stmib	sp, {r5, fp}
   129c0:	str	r0, [sp, #32]
   129c4:	str	r3, [sp, #12]
   129c8:	ldr	r3, [r4]
   129cc:	str	r3, [sp]
   129d0:	mov	r3, sl
   129d4:	bl	11914 <putchar_unlocked@plt+0xa80>
   129d8:	ldr	r3, [sp, #28]
   129dc:	cmp	r6, #0
   129e0:	ldr	r0, [sp, #32]
   129e4:	str	r3, [r8]
   129e8:	strne	r7, [r6]
   129ec:	add	sp, sp, #44	; 0x2c
   129f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129f4:	andeq	r5, r2, ip, asr r2
   129f8:	mov	r3, r2
   129fc:	mov	r2, #0
   12a00:	b	12924 <putchar_unlocked@plt+0x1a90>
   12a04:	push	{r4, r5, r6, r7, r8, lr}
   12a08:	mov	r6, #1
   12a0c:	ldr	r4, [pc, #100]	; 12a78 <putchar_unlocked@plt+0x1be4>
   12a10:	ldr	r5, [r4]
   12a14:	add	r7, r5, #4
   12a18:	ldr	r3, [r4, #4]
   12a1c:	cmp	r3, r6
   12a20:	bgt	12a68 <putchar_unlocked@plt+0x1bd4>
   12a24:	ldr	r6, [pc, #80]	; 12a7c <putchar_unlocked@plt+0x1be8>
   12a28:	ldr	r0, [r5, #4]
   12a2c:	cmp	r0, r6
   12a30:	beq	12a44 <putchar_unlocked@plt+0x1bb0>
   12a34:	bl	1153c <putchar_unlocked@plt+0x6a8>
   12a38:	mov	r3, #256	; 0x100
   12a3c:	str	r3, [r4, #8]
   12a40:	str	r6, [r4, #12]
   12a44:	ldr	r6, [pc, #52]	; 12a80 <putchar_unlocked@plt+0x1bec>
   12a48:	cmp	r5, r6
   12a4c:	beq	12a5c <putchar_unlocked@plt+0x1bc8>
   12a50:	mov	r0, r5
   12a54:	bl	1153c <putchar_unlocked@plt+0x6a8>
   12a58:	str	r6, [r4]
   12a5c:	mov	r3, #1
   12a60:	str	r3, [r4, #4]
   12a64:	pop	{r4, r5, r6, r7, r8, pc}
   12a68:	ldr	r0, [r7, r6, lsl #3]
   12a6c:	add	r6, r6, #1
   12a70:	bl	1153c <putchar_unlocked@plt+0x6a8>
   12a74:	b	12a18 <putchar_unlocked@plt+0x1b84>
   12a78:	andeq	r5, r2, ip, ror #1
   12a7c:	andeq	r5, r2, ip, asr r1
   12a80:	strdeq	r5, [r2], -r4
   12a84:	ldr	r3, [pc, #4]	; 12a90 <putchar_unlocked@plt+0x1bfc>
   12a88:	mvn	r2, #0
   12a8c:	b	12604 <putchar_unlocked@plt+0x1770>
   12a90:	andeq	r5, r2, ip, asr r2
   12a94:	ldr	r3, [pc]	; 12a9c <putchar_unlocked@plt+0x1c08>
   12a98:	b	12604 <putchar_unlocked@plt+0x1770>
   12a9c:	andeq	r5, r2, ip, asr r2
   12aa0:	mov	r1, r0
   12aa4:	mov	r0, #0
   12aa8:	b	12a84 <putchar_unlocked@plt+0x1bf0>
   12aac:	mov	r2, r1
   12ab0:	mov	r1, r0
   12ab4:	mov	r0, #0
   12ab8:	b	12a94 <putchar_unlocked@plt+0x1c00>
   12abc:	push	{r4, r5, lr}
   12ac0:	sub	sp, sp, #52	; 0x34
   12ac4:	mov	r5, r2
   12ac8:	mov	r4, r0
   12acc:	mov	r0, sp
   12ad0:	bl	117b8 <putchar_unlocked@plt+0x924>
   12ad4:	mov	r3, sp
   12ad8:	mvn	r2, #0
   12adc:	mov	r1, r5
   12ae0:	mov	r0, r4
   12ae4:	bl	12604 <putchar_unlocked@plt+0x1770>
   12ae8:	add	sp, sp, #52	; 0x34
   12aec:	pop	{r4, r5, pc}
   12af0:	push	{r4, r5, r6, lr}
   12af4:	sub	sp, sp, #48	; 0x30
   12af8:	mov	r5, r2
   12afc:	mov	r6, r3
   12b00:	mov	r4, r0
   12b04:	mov	r0, sp
   12b08:	bl	117b8 <putchar_unlocked@plt+0x924>
   12b0c:	mov	r3, sp
   12b10:	mov	r2, r6
   12b14:	mov	r1, r5
   12b18:	mov	r0, r4
   12b1c:	bl	12604 <putchar_unlocked@plt+0x1770>
   12b20:	add	sp, sp, #48	; 0x30
   12b24:	pop	{r4, r5, r6, pc}
   12b28:	mov	r2, r1
   12b2c:	mov	r1, r0
   12b30:	mov	r0, #0
   12b34:	b	12abc <putchar_unlocked@plt+0x1c28>
   12b38:	mov	r3, r2
   12b3c:	mov	r2, r1
   12b40:	mov	r1, r0
   12b44:	mov	r0, #0
   12b48:	b	12af0 <putchar_unlocked@plt+0x1c5c>
   12b4c:	push	{r4, r5, r6, lr}
   12b50:	mov	r4, r0
   12b54:	mov	r5, r1
   12b58:	mov	r6, r2
   12b5c:	sub	sp, sp, #48	; 0x30
   12b60:	mov	ip, sp
   12b64:	ldr	lr, [pc, #64]	; 12bac <putchar_unlocked@plt+0x1d18>
   12b68:	ldm	lr!, {r0, r1, r2, r3}
   12b6c:	stmia	ip!, {r0, r1, r2, r3}
   12b70:	ldm	lr!, {r0, r1, r2, r3}
   12b74:	stmia	ip!, {r0, r1, r2, r3}
   12b78:	ldm	lr, {r0, r1, r2, r3}
   12b7c:	stm	ip, {r0, r1, r2, r3}
   12b80:	mov	r1, r6
   12b84:	mov	r2, #1
   12b88:	mov	r0, sp
   12b8c:	bl	12810 <putchar_unlocked@plt+0x197c>
   12b90:	mov	r3, sp
   12b94:	mov	r2, r5
   12b98:	mov	r1, r4
   12b9c:	mov	r0, #0
   12ba0:	bl	12604 <putchar_unlocked@plt+0x1770>
   12ba4:	add	sp, sp, #48	; 0x30
   12ba8:	pop	{r4, r5, r6, pc}
   12bac:	andeq	r5, r2, ip, asr r2
   12bb0:	mov	r2, r1
   12bb4:	mvn	r1, #0
   12bb8:	b	12b4c <putchar_unlocked@plt+0x1cb8>
   12bbc:	mov	r1, #58	; 0x3a
   12bc0:	b	12bb0 <putchar_unlocked@plt+0x1d1c>
   12bc4:	mov	r2, #58	; 0x3a
   12bc8:	b	12b4c <putchar_unlocked@plt+0x1cb8>
   12bcc:	push	{r4, r5, lr}
   12bd0:	sub	sp, sp, #100	; 0x64
   12bd4:	mov	r4, r0
   12bd8:	mov	r0, sp
   12bdc:	mov	r5, r2
   12be0:	bl	117b8 <putchar_unlocked@plt+0x924>
   12be4:	mov	ip, sp
   12be8:	add	lr, sp, #48	; 0x30
   12bec:	ldm	ip!, {r0, r1, r2, r3}
   12bf0:	stmia	lr!, {r0, r1, r2, r3}
   12bf4:	ldm	ip!, {r0, r1, r2, r3}
   12bf8:	stmia	lr!, {r0, r1, r2, r3}
   12bfc:	ldm	ip, {r0, r1, r2, r3}
   12c00:	stm	lr, {r0, r1, r2, r3}
   12c04:	mov	r2, #1
   12c08:	mov	r1, #58	; 0x3a
   12c0c:	add	r0, sp, #48	; 0x30
   12c10:	bl	12810 <putchar_unlocked@plt+0x197c>
   12c14:	add	r3, sp, #48	; 0x30
   12c18:	mvn	r2, #0
   12c1c:	mov	r1, r5
   12c20:	mov	r0, r4
   12c24:	bl	12604 <putchar_unlocked@plt+0x1770>
   12c28:	add	sp, sp, #100	; 0x64
   12c2c:	pop	{r4, r5, pc}
   12c30:	push	{r4, r5, r6, r7, lr}
   12c34:	mov	r4, r0
   12c38:	mov	r6, r1
   12c3c:	mov	r7, r2
   12c40:	mov	r5, r3
   12c44:	sub	sp, sp, #52	; 0x34
   12c48:	ldr	lr, [pc, #68]	; 12c94 <putchar_unlocked@plt+0x1e00>
   12c4c:	mov	ip, sp
   12c50:	ldm	lr!, {r0, r1, r2, r3}
   12c54:	stmia	ip!, {r0, r1, r2, r3}
   12c58:	ldm	lr!, {r0, r1, r2, r3}
   12c5c:	stmia	ip!, {r0, r1, r2, r3}
   12c60:	ldm	lr, {r0, r1, r2, r3}
   12c64:	stm	ip, {r0, r1, r2, r3}
   12c68:	mov	r2, r7
   12c6c:	mov	r1, r6
   12c70:	mov	r0, sp
   12c74:	bl	1286c <putchar_unlocked@plt+0x19d8>
   12c78:	ldr	r2, [sp, #72]	; 0x48
   12c7c:	mov	r3, sp
   12c80:	mov	r1, r5
   12c84:	mov	r0, r4
   12c88:	bl	12604 <putchar_unlocked@plt+0x1770>
   12c8c:	add	sp, sp, #52	; 0x34
   12c90:	pop	{r4, r5, r6, r7, pc}
   12c94:	andeq	r5, r2, ip, asr r2
   12c98:	mvn	ip, #0
   12c9c:	push	{r0, r1, r2, lr}
   12ca0:	str	ip, [sp]
   12ca4:	bl	12c30 <putchar_unlocked@plt+0x1d9c>
   12ca8:	add	sp, sp, #12
   12cac:	pop	{pc}		; (ldr pc, [sp], #4)
   12cb0:	mov	r3, r2
   12cb4:	mov	r2, r1
   12cb8:	mov	r1, r0
   12cbc:	mov	r0, #0
   12cc0:	b	12c98 <putchar_unlocked@plt+0x1e04>
   12cc4:	push	{r0, r1, r2, lr}
   12cc8:	str	r3, [sp]
   12ccc:	mov	r3, r2
   12cd0:	mov	r2, r1
   12cd4:	mov	r1, r0
   12cd8:	mov	r0, #0
   12cdc:	bl	12c30 <putchar_unlocked@plt+0x1d9c>
   12ce0:	add	sp, sp, #12
   12ce4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ce8:	ldr	r3, [pc]	; 12cf0 <putchar_unlocked@plt+0x1e5c>
   12cec:	b	12604 <putchar_unlocked@plt+0x1770>
   12cf0:	strdeq	r5, [r2], -ip
   12cf4:	mov	r2, r1
   12cf8:	mov	r1, r0
   12cfc:	mov	r0, #0
   12d00:	b	12ce8 <putchar_unlocked@plt+0x1e54>
   12d04:	mvn	r2, #0
   12d08:	b	12ce8 <putchar_unlocked@plt+0x1e54>
   12d0c:	mov	r1, r0
   12d10:	mov	r0, #0
   12d14:	b	12d04 <putchar_unlocked@plt+0x1e70>
   12d18:	push	{r4, r5, r6, lr}
   12d1c:	mov	r5, r0
   12d20:	mov	r0, #33	; 0x21
   12d24:	bl	13360 <putchar_unlocked@plt+0x24cc>
   12d28:	mov	r4, r0
   12d2c:	add	r1, r5, #44	; 0x2c
   12d30:	mov	r2, #32
   12d34:	mov	r5, #0
   12d38:	bl	10dd4 <strncpy@plt>
   12d3c:	mov	r0, r4
   12d40:	strb	r5, [r4, #32]
   12d44:	bl	10da4 <strlen@plt>
   12d48:	add	r0, r4, r0
   12d4c:	cmp	r0, r4
   12d50:	bls	12d60 <putchar_unlocked@plt+0x1ecc>
   12d54:	ldrb	r3, [r0, #-1]
   12d58:	cmp	r3, #32
   12d5c:	beq	12d68 <putchar_unlocked@plt+0x1ed4>
   12d60:	mov	r0, r4
   12d64:	pop	{r4, r5, r6, pc}
   12d68:	strb	r5, [r0, #-1]!
   12d6c:	b	12d4c <putchar_unlocked@plt+0x1eb8>
   12d70:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   12d74:	mov	r4, #0
   12d78:	eor	r7, r3, #2
   12d7c:	mov	sl, r1
   12d80:	mov	r9, r2
   12d84:	ubfx	r7, r7, #1, #1
   12d88:	mov	r8, r3
   12d8c:	mov	r6, r4
   12d90:	str	r4, [sp, #12]
   12d94:	bl	10c6c <utmpxname@plt>
   12d98:	bl	10ccc <setutxent@plt>
   12d9c:	bl	10e88 <getutxent@plt>
   12da0:	subs	r5, r0, #0
   12da4:	bne	12dc0 <putchar_unlocked@plt+0x1f2c>
   12da8:	bl	10e1c <endutxent@plt>
   12dac:	mov	r0, r5
   12db0:	str	r4, [sl]
   12db4:	str	r6, [r9]
   12db8:	add	sp, sp, #16
   12dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12dc0:	ldrb	r3, [r5, #44]	; 0x2c
   12dc4:	cmp	r3, #0
   12dc8:	ldrshne	r3, [r5]
   12dcc:	subne	r3, r3, #7
   12dd0:	clzne	r3, r3
   12dd4:	lsrne	r3, r3, #5
   12dd8:	orrs	r2, r7, r3
   12ddc:	beq	12d9c <putchar_unlocked@plt+0x1f08>
   12de0:	tst	r8, r3
   12de4:	beq	12e14 <putchar_unlocked@plt+0x1f80>
   12de8:	ldr	r0, [r5, #4]
   12dec:	cmp	r0, #0
   12df0:	ble	12e14 <putchar_unlocked@plt+0x1f80>
   12df4:	mov	r1, #0
   12df8:	bl	10d80 <kill@plt>
   12dfc:	cmp	r0, #0
   12e00:	bge	12e14 <putchar_unlocked@plt+0x1f80>
   12e04:	bl	10db0 <__errno_location@plt>
   12e08:	ldr	r3, [r0]
   12e0c:	cmp	r3, #3
   12e10:	beq	12d9c <putchar_unlocked@plt+0x1f08>
   12e14:	ldr	r3, [sp, #12]
   12e18:	cmp	r3, r4
   12e1c:	bne	12e40 <putchar_unlocked@plt+0x1fac>
   12e20:	mov	r3, #384	; 0x180
   12e24:	mov	r0, r6
   12e28:	mov	r2, #1
   12e2c:	add	r1, sp, #12
   12e30:	str	r3, [sp]
   12e34:	mvn	r3, #0
   12e38:	bl	13498 <putchar_unlocked@plt+0x2604>
   12e3c:	mov	r6, r0
   12e40:	mov	r2, #384	; 0x180
   12e44:	mov	r1, r5
   12e48:	mla	r0, r2, r4, r6
   12e4c:	add	r4, r4, #1
   12e50:	bl	10c90 <memcpy@plt>
   12e54:	b	12d9c <putchar_unlocked@plt+0x1f08>
   12e58:	push	{r4, r5, r6, lr}
   12e5c:	cmp	r1, #0
   12e60:	sub	sp, sp, #32
   12e64:	mov	r5, r0
   12e68:	ldr	r4, [sp, #48]	; 0x30
   12e6c:	ldr	r6, [sp, #52]	; 0x34
   12e70:	beq	12f24 <putchar_unlocked@plt+0x2090>
   12e74:	strd	r2, [sp]
   12e78:	mov	r3, r1
   12e7c:	mov	r1, #1
   12e80:	ldr	r2, [pc, #856]	; 131e0 <putchar_unlocked@plt+0x234c>
   12e84:	bl	10df8 <__fprintf_chk@plt>
   12e88:	mov	r2, #5
   12e8c:	ldr	r1, [pc, #848]	; 131e4 <putchar_unlocked@plt+0x2350>
   12e90:	mov	r0, #0
   12e94:	bl	10cc0 <dcgettext@plt>
   12e98:	movw	r3, #2022	; 0x7e6
   12e9c:	ldr	r2, [pc, #836]	; 131e8 <putchar_unlocked@plt+0x2354>
   12ea0:	mov	r1, #1
   12ea4:	str	r3, [sp]
   12ea8:	mov	r3, r0
   12eac:	mov	r0, r5
   12eb0:	bl	10df8 <__fprintf_chk@plt>
   12eb4:	mov	r1, r5
   12eb8:	mov	r0, #10
   12ebc:	bl	10cb4 <fputc_unlocked@plt>
   12ec0:	mov	r2, #5
   12ec4:	ldr	r1, [pc, #800]	; 131ec <putchar_unlocked@plt+0x2358>
   12ec8:	mov	r0, #0
   12ecc:	bl	10cc0 <dcgettext@plt>
   12ed0:	mov	r2, r0
   12ed4:	mov	r1, #1
   12ed8:	ldr	r3, [pc, #784]	; 131f0 <putchar_unlocked@plt+0x235c>
   12edc:	mov	r0, r5
   12ee0:	bl	10df8 <__fprintf_chk@plt>
   12ee4:	mov	r1, r5
   12ee8:	mov	r0, #10
   12eec:	bl	10cb4 <fputc_unlocked@plt>
   12ef0:	cmp	r6, #9
   12ef4:	ldrls	pc, [pc, r6, lsl #2]
   12ef8:	b	131d4 <putchar_unlocked@plt+0x2340>
   12efc:	andeq	r3, r1, r4, lsl r0
   12f00:	andeq	r2, r1, ip, lsr pc
   12f04:	andeq	r2, r1, r8, ror #30
   12f08:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12f0c:	ldrdeq	r2, [r1], -r8
   12f10:	andeq	r3, r1, ip, lsl r0
   12f14:	andeq	r3, r1, r4, rrx
   12f18:	strheq	r3, [r1], -r4
   12f1c:	andeq	r3, r1, ip, lsl #2
   12f20:	andeq	r3, r1, ip, ror #2
   12f24:	mov	r1, #1
   12f28:	str	r3, [sp]
   12f2c:	mov	r3, r2
   12f30:	ldr	r2, [pc, #700]	; 131f4 <putchar_unlocked@plt+0x2360>
   12f34:	bl	10df8 <__fprintf_chk@plt>
   12f38:	b	12e88 <putchar_unlocked@plt+0x1ff4>
   12f3c:	mov	r2, #5
   12f40:	ldr	r1, [pc, #688]	; 131f8 <putchar_unlocked@plt+0x2364>
   12f44:	mov	r0, #0
   12f48:	bl	10cc0 <dcgettext@plt>
   12f4c:	ldr	r3, [r4]
   12f50:	mov	r2, r0
   12f54:	mov	r1, #1
   12f58:	mov	r0, r5
   12f5c:	add	sp, sp, #32
   12f60:	pop	{r4, r5, r6, lr}
   12f64:	b	10df8 <__fprintf_chk@plt>
   12f68:	mov	r2, #5
   12f6c:	ldr	r1, [pc, #648]	; 131fc <putchar_unlocked@plt+0x2368>
   12f70:	mov	r0, #0
   12f74:	bl	10cc0 <dcgettext@plt>
   12f78:	ldr	r3, [r4, #4]
   12f7c:	mov	r2, r0
   12f80:	mov	r1, #1
   12f84:	mov	r0, r5
   12f88:	str	r3, [sp, #48]	; 0x30
   12f8c:	ldr	r3, [r4]
   12f90:	add	sp, sp, #32
   12f94:	pop	{r4, r5, r6, lr}
   12f98:	b	10df8 <__fprintf_chk@plt>
   12f9c:	mov	r2, #5
   12fa0:	ldr	r1, [pc, #600]	; 13200 <putchar_unlocked@plt+0x236c>
   12fa4:	mov	r0, #0
   12fa8:	bl	10cc0 <dcgettext@plt>
   12fac:	ldr	r3, [r4, #8]
   12fb0:	mov	r2, r0
   12fb4:	mov	r1, #1
   12fb8:	mov	r0, r5
   12fbc:	str	r3, [sp, #52]	; 0x34
   12fc0:	ldr	r3, [r4, #4]
   12fc4:	str	r3, [sp, #48]	; 0x30
   12fc8:	ldr	r3, [r4]
   12fcc:	add	sp, sp, #32
   12fd0:	pop	{r4, r5, r6, lr}
   12fd4:	b	10df8 <__fprintf_chk@plt>
   12fd8:	mov	r2, #5
   12fdc:	ldr	r1, [pc, #544]	; 13204 <putchar_unlocked@plt+0x2370>
   12fe0:	mov	r0, #0
   12fe4:	bl	10cc0 <dcgettext@plt>
   12fe8:	ldr	r3, [r4, #12]
   12fec:	mov	r2, r0
   12ff0:	mov	r1, #1
   12ff4:	mov	r0, r5
   12ff8:	str	r3, [sp, #8]
   12ffc:	ldr	r3, [r4, #8]
   13000:	str	r3, [sp, #4]
   13004:	ldr	r3, [r4, #4]
   13008:	str	r3, [sp]
   1300c:	ldr	r3, [r4]
   13010:	bl	10df8 <__fprintf_chk@plt>
   13014:	add	sp, sp, #32
   13018:	pop	{r4, r5, r6, pc}
   1301c:	mov	r2, #5
   13020:	ldr	r1, [pc, #480]	; 13208 <putchar_unlocked@plt+0x2374>
   13024:	mov	r0, #0
   13028:	bl	10cc0 <dcgettext@plt>
   1302c:	ldr	r3, [r4, #16]
   13030:	mov	r2, r0
   13034:	mov	r1, #1
   13038:	mov	r0, r5
   1303c:	str	r3, [sp, #12]
   13040:	ldr	r3, [r4, #12]
   13044:	str	r3, [sp, #8]
   13048:	ldr	r3, [r4, #8]
   1304c:	str	r3, [sp, #4]
   13050:	ldr	r3, [r4, #4]
   13054:	str	r3, [sp]
   13058:	ldr	r3, [r4]
   1305c:	bl	10df8 <__fprintf_chk@plt>
   13060:	b	13014 <putchar_unlocked@plt+0x2180>
   13064:	mov	r2, #5
   13068:	ldr	r1, [pc, #412]	; 1320c <putchar_unlocked@plt+0x2378>
   1306c:	mov	r0, #0
   13070:	bl	10cc0 <dcgettext@plt>
   13074:	ldr	r3, [r4, #20]
   13078:	mov	r2, r0
   1307c:	mov	r1, #1
   13080:	mov	r0, r5
   13084:	str	r3, [sp, #16]
   13088:	ldr	r3, [r4, #16]
   1308c:	str	r3, [sp, #12]
   13090:	ldr	r3, [r4, #12]
   13094:	str	r3, [sp, #8]
   13098:	ldr	r3, [r4, #8]
   1309c:	str	r3, [sp, #4]
   130a0:	ldr	r3, [r4, #4]
   130a4:	str	r3, [sp]
   130a8:	ldr	r3, [r4]
   130ac:	bl	10df8 <__fprintf_chk@plt>
   130b0:	b	13014 <putchar_unlocked@plt+0x2180>
   130b4:	mov	r2, #5
   130b8:	ldr	r1, [pc, #336]	; 13210 <putchar_unlocked@plt+0x237c>
   130bc:	mov	r0, #0
   130c0:	bl	10cc0 <dcgettext@plt>
   130c4:	ldr	r3, [r4, #24]
   130c8:	mov	r2, r0
   130cc:	mov	r1, #1
   130d0:	mov	r0, r5
   130d4:	str	r3, [sp, #20]
   130d8:	ldr	r3, [r4, #20]
   130dc:	str	r3, [sp, #16]
   130e0:	ldr	r3, [r4, #16]
   130e4:	str	r3, [sp, #12]
   130e8:	ldr	r3, [r4, #12]
   130ec:	str	r3, [sp, #8]
   130f0:	ldr	r3, [r4, #8]
   130f4:	str	r3, [sp, #4]
   130f8:	ldr	r3, [r4, #4]
   130fc:	str	r3, [sp]
   13100:	ldr	r3, [r4]
   13104:	bl	10df8 <__fprintf_chk@plt>
   13108:	b	13014 <putchar_unlocked@plt+0x2180>
   1310c:	mov	r2, #5
   13110:	ldr	r1, [pc, #252]	; 13214 <putchar_unlocked@plt+0x2380>
   13114:	mov	r0, #0
   13118:	bl	10cc0 <dcgettext@plt>
   1311c:	ldr	r3, [r4, #28]
   13120:	mov	r2, r0
   13124:	mov	r1, #1
   13128:	mov	r0, r5
   1312c:	str	r3, [sp, #24]
   13130:	ldr	r3, [r4, #24]
   13134:	str	r3, [sp, #20]
   13138:	ldr	r3, [r4, #20]
   1313c:	str	r3, [sp, #16]
   13140:	ldr	r3, [r4, #16]
   13144:	str	r3, [sp, #12]
   13148:	ldr	r3, [r4, #12]
   1314c:	str	r3, [sp, #8]
   13150:	ldr	r3, [r4, #8]
   13154:	str	r3, [sp, #4]
   13158:	ldr	r3, [r4, #4]
   1315c:	str	r3, [sp]
   13160:	ldr	r3, [r4]
   13164:	bl	10df8 <__fprintf_chk@plt>
   13168:	b	13014 <putchar_unlocked@plt+0x2180>
   1316c:	ldr	r1, [pc, #164]	; 13218 <putchar_unlocked@plt+0x2384>
   13170:	mov	r2, #5
   13174:	mov	r0, #0
   13178:	bl	10cc0 <dcgettext@plt>
   1317c:	ldr	r3, [r4, #32]
   13180:	mov	r2, r0
   13184:	mov	r1, #1
   13188:	mov	r0, r5
   1318c:	str	r3, [sp, #28]
   13190:	ldr	r3, [r4, #28]
   13194:	str	r3, [sp, #24]
   13198:	ldr	r3, [r4, #24]
   1319c:	str	r3, [sp, #20]
   131a0:	ldr	r3, [r4, #20]
   131a4:	str	r3, [sp, #16]
   131a8:	ldr	r3, [r4, #16]
   131ac:	str	r3, [sp, #12]
   131b0:	ldr	r3, [r4, #12]
   131b4:	str	r3, [sp, #8]
   131b8:	ldr	r3, [r4, #8]
   131bc:	str	r3, [sp, #4]
   131c0:	ldr	r3, [r4, #4]
   131c4:	str	r3, [sp]
   131c8:	ldr	r3, [r4]
   131cc:	bl	10df8 <__fprintf_chk@plt>
   131d0:	b	13014 <putchar_unlocked@plt+0x2180>
   131d4:	mov	r2, #5
   131d8:	ldr	r1, [pc, #60]	; 1321c <putchar_unlocked@plt+0x2388>
   131dc:	b	13174 <putchar_unlocked@plt+0x22e0>
   131e0:			; <UNDEFINED> instruction: 0x00013fbb
   131e4:	andeq	r3, r1, lr, asr #31
   131e8:	muleq	r1, ip, r2
   131ec:	ldrdeq	r3, [r1], -r2
   131f0:	andeq	r4, r1, sp, ror r0
   131f4:	andeq	r3, r1, r7, asr #31
   131f8:	muleq	r1, pc, r0	; <UNPREDICTABLE>
   131fc:	andeq	r4, r1, pc, lsr #1
   13200:	andeq	r4, r1, r6, asr #1
   13204:	andeq	r4, r1, r2, ror #1
   13208:	andeq	r4, r1, r2, lsl #2
   1320c:	andeq	r4, r1, r6, lsr #2
   13210:	andeq	r4, r1, lr, asr #2
   13214:	andeq	r4, r1, sl, ror r1
   13218:	andeq	r4, r1, sl, lsr #3
   1321c:	ldrdeq	r4, [r1], -lr
   13220:	push	{r0, r1, r4, lr}
   13224:	mov	ip, #0
   13228:	ldr	lr, [sp, #16]
   1322c:	ldr	r4, [lr, ip, lsl #2]
   13230:	cmp	r4, #0
   13234:	bne	1324c <putchar_unlocked@plt+0x23b8>
   13238:	str	lr, [sp]
   1323c:	str	ip, [sp, #4]
   13240:	bl	12e58 <putchar_unlocked@plt+0x1fc4>
   13244:	add	sp, sp, #8
   13248:	pop	{r4, pc}
   1324c:	add	ip, ip, #1
   13250:	b	1322c <putchar_unlocked@plt+0x2398>
   13254:	push	{r4, r5, r6, lr}
   13258:	sub	sp, sp, #48	; 0x30
   1325c:	mov	ip, #0
   13260:	add	lr, sp, #8
   13264:	mov	r5, lr
   13268:	ldr	r6, [sp, #64]	; 0x40
   1326c:	ldr	r4, [r6, ip, lsl #2]
   13270:	cmp	r4, #0
   13274:	str	r4, [lr], #4
   13278:	beq	13288 <putchar_unlocked@plt+0x23f4>
   1327c:	add	ip, ip, #1
   13280:	cmp	ip, #10
   13284:	bne	1326c <putchar_unlocked@plt+0x23d8>
   13288:	stm	sp, {r5, ip}
   1328c:	bl	12e58 <putchar_unlocked@plt+0x1fc4>
   13290:	add	sp, sp, #48	; 0x30
   13294:	pop	{r4, r5, r6, pc}
   13298:	push	{r3}		; (str r3, [sp, #-4]!)
   1329c:	push	{r0, r1, r2, r3, lr}
   132a0:	add	r3, sp, #24
   132a4:	str	r3, [sp]
   132a8:	str	r3, [sp, #12]
   132ac:	ldr	r3, [sp, #20]
   132b0:	bl	13254 <putchar_unlocked@plt+0x23c0>
   132b4:	add	sp, sp, #16
   132b8:	pop	{lr}		; (ldr lr, [sp], #4)
   132bc:	add	sp, sp, #4
   132c0:	bx	lr
   132c4:	ldr	r3, [pc, #116]	; 13340 <putchar_unlocked@plt+0x24ac>
   132c8:	mov	r0, #10
   132cc:	push	{r4, lr}
   132d0:	ldr	r1, [r3]
   132d4:	bl	10cb4 <fputc_unlocked@plt>
   132d8:	mov	r2, #5
   132dc:	ldr	r1, [pc, #96]	; 13344 <putchar_unlocked@plt+0x24b0>
   132e0:	mov	r0, #0
   132e4:	bl	10cc0 <dcgettext@plt>
   132e8:	mov	r1, r0
   132ec:	ldr	r2, [pc, #84]	; 13348 <putchar_unlocked@plt+0x24b4>
   132f0:	mov	r0, #1
   132f4:	bl	10de0 <__printf_chk@plt>
   132f8:	mov	r2, #5
   132fc:	ldr	r1, [pc, #72]	; 1334c <putchar_unlocked@plt+0x24b8>
   13300:	mov	r0, #0
   13304:	bl	10cc0 <dcgettext@plt>
   13308:	mov	r1, r0
   1330c:	ldr	r3, [pc, #60]	; 13350 <putchar_unlocked@plt+0x24bc>
   13310:	mov	r0, #1
   13314:	ldr	r2, [pc, #56]	; 13354 <putchar_unlocked@plt+0x24c0>
   13318:	bl	10de0 <__printf_chk@plt>
   1331c:	mov	r2, #5
   13320:	ldr	r1, [pc, #48]	; 13358 <putchar_unlocked@plt+0x24c4>
   13324:	mov	r0, #0
   13328:	bl	10cc0 <dcgettext@plt>
   1332c:	mov	r1, r0
   13330:	ldr	r2, [pc, #36]	; 1335c <putchar_unlocked@plt+0x24c8>
   13334:	mov	r0, #1
   13338:	pop	{r4, lr}
   1333c:	b	10de0 <__printf_chk@plt>
   13340:	andeq	r5, r2, r4, asr #2
   13344:	andeq	r4, r1, sl, lsl r2
   13348:	andeq	r4, r1, lr, lsr #4
   1334c:	andeq	r4, r1, r4, asr #4
   13350:	andeq	r3, r1, r5, ror #25
   13354:	andeq	r3, r1, sp, lsl #26
   13358:	andeq	r4, r1, r8, asr r2
   1335c:	andeq	r4, r1, pc, ror r2
   13360:	push	{r4, lr}
   13364:	bl	136ac <putchar_unlocked@plt+0x2818>
   13368:	cmp	r0, #0
   1336c:	popne	{r4, pc}
   13370:	bl	13618 <putchar_unlocked@plt+0x2784>
   13374:	push	{r4, lr}
   13378:	bl	136ac <putchar_unlocked@plt+0x2818>
   1337c:	cmp	r0, #0
   13380:	popne	{r4, pc}
   13384:	bl	13618 <putchar_unlocked@plt+0x2784>
   13388:	b	13360 <putchar_unlocked@plt+0x24cc>
   1338c:	push	{r4, r5, r6, lr}
   13390:	mov	r5, r0
   13394:	mov	r4, r1
   13398:	bl	136d8 <putchar_unlocked@plt+0x2844>
   1339c:	cmp	r0, #0
   133a0:	popne	{r4, r5, r6, pc}
   133a4:	adds	r4, r4, #0
   133a8:	movne	r4, #1
   133ac:	cmp	r5, #0
   133b0:	moveq	r4, #1
   133b4:	cmp	r4, #0
   133b8:	popeq	{r4, r5, r6, pc}
   133bc:	bl	13618 <putchar_unlocked@plt+0x2784>
   133c0:	push	{r4, lr}
   133c4:	bl	13920 <putchar_unlocked@plt+0x2a8c>
   133c8:	cmp	r0, #0
   133cc:	popne	{r4, pc}
   133d0:	bl	13618 <putchar_unlocked@plt+0x2784>
   133d4:	push	{r4, r5, r6, lr}
   133d8:	mov	r6, r0
   133dc:	mov	r5, r1
   133e0:	mov	r4, r2
   133e4:	bl	139c8 <putchar_unlocked@plt+0x2b34>
   133e8:	cmp	r0, #0
   133ec:	popne	{r4, r5, r6, pc}
   133f0:	cmp	r6, #0
   133f4:	beq	13404 <putchar_unlocked@plt+0x2570>
   133f8:	cmp	r5, #0
   133fc:	cmpne	r4, #0
   13400:	popeq	{r4, r5, r6, pc}
   13404:	bl	13618 <putchar_unlocked@plt+0x2784>
   13408:	b	133d4 <putchar_unlocked@plt+0x2540>
   1340c:	push	{r4, lr}
   13410:	bl	13930 <putchar_unlocked@plt+0x2a9c>
   13414:	cmp	r0, #0
   13418:	popne	{r4, pc}
   1341c:	bl	13618 <putchar_unlocked@plt+0x2784>
   13420:	mov	r2, r1
   13424:	mov	r1, r0
   13428:	mov	r0, #0
   1342c:	b	133d4 <putchar_unlocked@plt+0x2540>
   13430:	mov	r2, r1
   13434:	mov	r1, r0
   13438:	mov	r0, #0
   1343c:	b	1340c <putchar_unlocked@plt+0x2578>
   13440:	cmp	r0, #0
   13444:	push	{r4, r5, r6, lr}
   13448:	mov	r5, r1
   1344c:	ldr	r4, [r1]
   13450:	bne	1347c <putchar_unlocked@plt+0x25e8>
   13454:	cmp	r4, #0
   13458:	bne	1346c <putchar_unlocked@plt+0x25d8>
   1345c:	mov	r4, #64	; 0x40
   13460:	udiv	r4, r4, r2
   13464:	cmp	r2, #64	; 0x40
   13468:	addhi	r4, r4, #1
   1346c:	mov	r1, r4
   13470:	bl	133d4 <putchar_unlocked@plt+0x2540>
   13474:	str	r4, [r5]
   13478:	pop	{r4, r5, r6, pc}
   1347c:	lsr	r3, r4, #1
   13480:	add	r3, r3, #1
   13484:	adds	r4, r4, r3
   13488:	bcc	1346c <putchar_unlocked@plt+0x25d8>
   1348c:	bl	13618 <putchar_unlocked@plt+0x2784>
   13490:	mov	r2, #1
   13494:	b	13440 <putchar_unlocked@plt+0x25ac>
   13498:	ldr	ip, [r1]
   1349c:	push	{r4, r5, r6, r7, r8, lr}
   134a0:	mov	r5, r1
   134a4:	mvn	r8, r3
   134a8:	lsr	r8, r8, #31
   134ac:	ldr	lr, [sp, #24]
   134b0:	asr	r1, ip, #1
   134b4:	adds	r4, ip, r1
   134b8:	mvnvs	r4, #-2147483648	; 0x80000000
   134bc:	cmp	r3, r4
   134c0:	movge	r1, #0
   134c4:	andlt	r1, r8, #1
   134c8:	cmp	r1, #0
   134cc:	movne	r4, r3
   134d0:	smull	r6, r7, r4, lr
   134d4:	cmp	r7, r6, asr #31
   134d8:	bne	134f0 <putchar_unlocked@plt+0x265c>
   134dc:	cmp	r6, #63	; 0x3f
   134e0:	mov	r1, r6
   134e4:	bgt	13500 <putchar_unlocked@plt+0x266c>
   134e8:	mov	r1, #64	; 0x40
   134ec:	b	134f4 <putchar_unlocked@plt+0x2660>
   134f0:	mvn	r1, #-2147483648	; 0x80000000
   134f4:	sdiv	r4, r1, lr
   134f8:	mls	r6, lr, r4, r1
   134fc:	sub	r1, r1, r6
   13500:	cmp	r0, #0
   13504:	sub	r6, r4, ip
   13508:	streq	r0, [r5]
   1350c:	cmp	r6, r2
   13510:	bge	13544 <putchar_unlocked@plt+0x26b0>
   13514:	adds	r4, ip, r2
   13518:	bvs	13540 <putchar_unlocked@plt+0x26ac>
   1351c:	cmp	r4, r3
   13520:	movle	r3, #0
   13524:	andgt	r3, r8, #1
   13528:	cmp	r3, #0
   1352c:	bne	13540 <putchar_unlocked@plt+0x26ac>
   13530:	smull	r2, r3, r4, lr
   13534:	cmp	r3, r2, asr #31
   13538:	mov	r1, r2
   1353c:	beq	13544 <putchar_unlocked@plt+0x26b0>
   13540:	bl	13618 <putchar_unlocked@plt+0x2784>
   13544:	bl	1338c <putchar_unlocked@plt+0x24f8>
   13548:	str	r4, [r5]
   1354c:	pop	{r4, r5, r6, r7, r8, pc}
   13550:	push	{r4, lr}
   13554:	bl	13658 <putchar_unlocked@plt+0x27c4>
   13558:	cmp	r0, #0
   1355c:	popne	{r4, pc}
   13560:	bl	13618 <putchar_unlocked@plt+0x2784>
   13564:	mov	r1, #1
   13568:	b	13550 <putchar_unlocked@plt+0x26bc>
   1356c:	push	{r4, lr}
   13570:	bl	13658 <putchar_unlocked@plt+0x27c4>
   13574:	cmp	r0, #0
   13578:	popne	{r4, pc}
   1357c:	bl	13618 <putchar_unlocked@plt+0x2784>
   13580:	mov	r1, #1
   13584:	b	1356c <putchar_unlocked@plt+0x26d8>
   13588:	push	{r4, r5, r6, lr}
   1358c:	mov	r4, r1
   13590:	mov	r5, r0
   13594:	mov	r0, r1
   13598:	bl	13360 <putchar_unlocked@plt+0x24cc>
   1359c:	mov	r2, r4
   135a0:	mov	r1, r5
   135a4:	pop	{r4, r5, r6, lr}
   135a8:	b	10c90 <memcpy@plt>
   135ac:	push	{r4, r5, r6, lr}
   135b0:	mov	r4, r1
   135b4:	mov	r5, r0
   135b8:	mov	r0, r1
   135bc:	bl	13374 <putchar_unlocked@plt+0x24e0>
   135c0:	mov	r2, r4
   135c4:	mov	r1, r5
   135c8:	pop	{r4, r5, r6, lr}
   135cc:	b	10c90 <memcpy@plt>
   135d0:	push	{r4, r5, r6, lr}
   135d4:	mov	r5, r0
   135d8:	add	r0, r1, #1
   135dc:	mov	r4, r1
   135e0:	bl	13374 <putchar_unlocked@plt+0x24e0>
   135e4:	mov	r2, #0
   135e8:	mov	r1, r5
   135ec:	strb	r2, [r0, r4]
   135f0:	mov	r2, r4
   135f4:	pop	{r4, r5, r6, lr}
   135f8:	b	10c90 <memcpy@plt>
   135fc:	push	{r4, lr}
   13600:	mov	r4, r0
   13604:	bl	10da4 <strlen@plt>
   13608:	add	r1, r0, #1
   1360c:	mov	r0, r4
   13610:	pop	{r4, lr}
   13614:	b	13588 <putchar_unlocked@plt+0x26f4>
   13618:	ldr	r3, [pc, #44]	; 1364c <putchar_unlocked@plt+0x27b8>
   1361c:	mov	r2, #5
   13620:	mov	r0, #0
   13624:	push	{r4, lr}
   13628:	ldr	r1, [pc, #32]	; 13650 <putchar_unlocked@plt+0x27bc>
   1362c:	ldr	r4, [r3]
   13630:	bl	10cc0 <dcgettext@plt>
   13634:	mov	r3, r0
   13638:	ldr	r2, [pc, #20]	; 13654 <putchar_unlocked@plt+0x27c0>
   1363c:	mov	r1, #0
   13640:	mov	r0, r4
   13644:	bl	10d38 <error@plt>
   13648:	bl	10e7c <abort@plt>
   1364c:	andeq	r5, r2, r8, ror #1
   13650:	andeq	r4, r1, fp, asr #5
   13654:	andeq	r3, r1, ip, ror lr
   13658:	cmp	r1, #0
   1365c:	cmpne	r0, #0
   13660:	beq	13698 <putchar_unlocked@plt+0x2804>
   13664:	push	{r4, r5, r6, lr}
   13668:	umull	r4, r5, r0, r1
   1366c:	adds	r3, r5, #0
   13670:	movne	r3, #1
   13674:	cmp	r4, #0
   13678:	blt	13684 <putchar_unlocked@plt+0x27f0>
   1367c:	cmp	r3, #0
   13680:	beq	136a4 <putchar_unlocked@plt+0x2810>
   13684:	bl	10db0 <__errno_location@plt>
   13688:	mov	r3, #12
   1368c:	str	r3, [r0]
   13690:	mov	r0, #0
   13694:	pop	{r4, r5, r6, pc}
   13698:	mov	r1, #1
   1369c:	mov	r0, r1
   136a0:	b	10c3c <calloc@plt>
   136a4:	pop	{r4, r5, r6, lr}
   136a8:	b	136a0 <putchar_unlocked@plt+0x280c>
   136ac:	cmp	r0, #0
   136b0:	beq	136d0 <putchar_unlocked@plt+0x283c>
   136b4:	bge	136d4 <putchar_unlocked@plt+0x2840>
   136b8:	push	{r4, lr}
   136bc:	bl	10db0 <__errno_location@plt>
   136c0:	mov	r3, #12
   136c4:	str	r3, [r0]
   136c8:	mov	r0, #0
   136cc:	pop	{r4, pc}
   136d0:	mov	r0, #1
   136d4:	b	10d44 <malloc@plt>
   136d8:	cmp	r0, #0
   136dc:	bne	136e8 <putchar_unlocked@plt+0x2854>
   136e0:	mov	r0, r1
   136e4:	b	136ac <putchar_unlocked@plt+0x2818>
   136e8:	cmp	r1, #0
   136ec:	push	{r4, lr}
   136f0:	bne	13700 <putchar_unlocked@plt+0x286c>
   136f4:	bl	1153c <putchar_unlocked@plt+0x6a8>
   136f8:	mov	r0, #0
   136fc:	pop	{r4, pc}
   13700:	blt	1370c <putchar_unlocked@plt+0x2878>
   13704:	pop	{r4, lr}
   13708:	b	10cd8 <realloc@plt>
   1370c:	bl	10db0 <__errno_location@plt>
   13710:	mov	r3, #12
   13714:	str	r3, [r0]
   13718:	b	136f8 <putchar_unlocked@plt+0x2864>
   1371c:	push	{r4, r5, r6, lr}
   13720:	mov	r4, r0
   13724:	bl	10d14 <__fpending@plt>
   13728:	mov	r5, r0
   1372c:	mov	r0, r4
   13730:	bl	10d20 <ferror_unlocked@plt>
   13734:	mov	r6, r0
   13738:	mov	r0, r4
   1373c:	bl	1378c <putchar_unlocked@plt+0x28f8>
   13740:	cmp	r6, #0
   13744:	mov	r4, r0
   13748:	bne	13774 <putchar_unlocked@plt+0x28e0>
   1374c:	cmp	r0, #0
   13750:	beq	1376c <putchar_unlocked@plt+0x28d8>
   13754:	cmp	r5, #0
   13758:	bne	13784 <putchar_unlocked@plt+0x28f0>
   1375c:	bl	10db0 <__errno_location@plt>
   13760:	ldr	r4, [r0]
   13764:	subs	r4, r4, #9
   13768:	mvnne	r4, #0
   1376c:	mov	r0, r4
   13770:	pop	{r4, r5, r6, pc}
   13774:	cmp	r0, #0
   13778:	bne	13784 <putchar_unlocked@plt+0x28f0>
   1377c:	bl	10db0 <__errno_location@plt>
   13780:	str	r4, [r0]
   13784:	mvn	r4, #0
   13788:	b	1376c <putchar_unlocked@plt+0x28d8>
   1378c:	push	{r0, r1, r2, r4, r5, lr}
   13790:	mov	r4, r0
   13794:	bl	10dec <fileno@plt>
   13798:	cmp	r0, #0
   1379c:	mov	r0, r4
   137a0:	bge	137b0 <putchar_unlocked@plt+0x291c>
   137a4:	add	sp, sp, #12
   137a8:	pop	{r4, r5, lr}
   137ac:	b	10e04 <fclose@plt>
   137b0:	bl	10d5c <__freading@plt>
   137b4:	cmp	r0, #0
   137b8:	bne	137f4 <putchar_unlocked@plt+0x2960>
   137bc:	mov	r0, r4
   137c0:	bl	13834 <putchar_unlocked@plt+0x29a0>
   137c4:	cmp	r0, #0
   137c8:	bne	13828 <putchar_unlocked@plt+0x2994>
   137cc:	mov	r5, #0
   137d0:	mov	r0, r4
   137d4:	bl	10e04 <fclose@plt>
   137d8:	cmp	r5, #0
   137dc:	beq	137ec <putchar_unlocked@plt+0x2958>
   137e0:	bl	10db0 <__errno_location@plt>
   137e4:	str	r5, [r0]
   137e8:	mvn	r0, #0
   137ec:	add	sp, sp, #12
   137f0:	pop	{r4, r5, pc}
   137f4:	mov	r0, r4
   137f8:	bl	10dec <fileno@plt>
   137fc:	mov	r3, #1
   13800:	mov	r2, #0
   13804:	str	r3, [sp]
   13808:	mov	r3, #0
   1380c:	bl	10cfc <lseek64@plt>
   13810:	mvn	r3, #0
   13814:	mvn	r2, #0
   13818:	cmp	r1, r3
   1381c:	cmpeq	r0, r2
   13820:	bne	137bc <putchar_unlocked@plt+0x2928>
   13824:	b	137cc <putchar_unlocked@plt+0x2938>
   13828:	bl	10db0 <__errno_location@plt>
   1382c:	ldr	r5, [r0]
   13830:	b	137d0 <putchar_unlocked@plt+0x293c>
   13834:	push	{r0, r1, r4, lr}
   13838:	subs	r4, r0, #0
   1383c:	bne	13850 <putchar_unlocked@plt+0x29bc>
   13840:	mov	r0, r4
   13844:	add	sp, sp, #8
   13848:	pop	{r4, lr}
   1384c:	b	10c60 <fflush@plt>
   13850:	bl	10d5c <__freading@plt>
   13854:	cmp	r0, #0
   13858:	beq	13840 <putchar_unlocked@plt+0x29ac>
   1385c:	ldr	r3, [r4]
   13860:	tst	r3, #256	; 0x100
   13864:	beq	13840 <putchar_unlocked@plt+0x29ac>
   13868:	mov	r3, #1
   1386c:	mov	r2, #0
   13870:	mov	r0, r4
   13874:	str	r3, [sp]
   13878:	mov	r3, #0
   1387c:	bl	13884 <putchar_unlocked@plt+0x29f0>
   13880:	b	13840 <putchar_unlocked@plt+0x29ac>
   13884:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13888:	mov	r4, r0
   1388c:	ldmib	r0, {ip, lr}
   13890:	ldr	r8, [sp, #32]
   13894:	cmp	lr, ip
   13898:	bne	13908 <putchar_unlocked@plt+0x2a74>
   1389c:	ldr	ip, [r0, #16]
   138a0:	ldr	lr, [r0, #20]
   138a4:	cmp	lr, ip
   138a8:	bne	13908 <putchar_unlocked@plt+0x2a74>
   138ac:	ldr	r5, [r0, #36]	; 0x24
   138b0:	cmp	r5, #0
   138b4:	bne	13908 <putchar_unlocked@plt+0x2a74>
   138b8:	mov	r6, r2
   138bc:	mov	r7, r3
   138c0:	bl	10dec <fileno@plt>
   138c4:	mov	r2, r6
   138c8:	mov	r3, r7
   138cc:	str	r8, [sp]
   138d0:	bl	10cfc <lseek64@plt>
   138d4:	mvn	r3, #0
   138d8:	mvn	r2, #0
   138dc:	cmp	r1, r3
   138e0:	cmpeq	r0, r2
   138e4:	mvneq	r0, #0
   138e8:	beq	13900 <putchar_unlocked@plt+0x2a6c>
   138ec:	ldr	r3, [r4]
   138f0:	strd	r0, [r4, #80]	; 0x50
   138f4:	mov	r0, r5
   138f8:	bic	r3, r3, #16
   138fc:	str	r3, [r4]
   13900:	add	sp, sp, #8
   13904:	pop	{r4, r5, r6, r7, r8, pc}
   13908:	mov	r0, r4
   1390c:	str	r8, [sp, #32]
   13910:	add	sp, sp, #8
   13914:	pop	{r4, r5, r6, r7, r8, lr}
   13918:	b	10e10 <fseeko64@plt>
   1391c:	b	136ac <putchar_unlocked@plt+0x2818>
   13920:	cmp	r1, #0
   13924:	orreq	r1, r1, #1
   13928:	b	136d8 <putchar_unlocked@plt+0x2844>
   1392c:	b	13658 <putchar_unlocked@plt+0x27c4>
   13930:	cmp	r2, #0
   13934:	cmpne	r1, #0
   13938:	moveq	r2, #1
   1393c:	moveq	r1, r2
   13940:	b	139c8 <putchar_unlocked@plt+0x2b34>
   13944:	push	{r4, lr}
   13948:	mov	r0, #14
   1394c:	bl	10e40 <nl_langinfo@plt>
   13950:	cmp	r0, #0
   13954:	beq	1396c <putchar_unlocked@plt+0x2ad8>
   13958:	ldrb	r2, [r0]
   1395c:	ldr	r3, [pc, #16]	; 13974 <putchar_unlocked@plt+0x2ae0>
   13960:	cmp	r2, #0
   13964:	moveq	r0, r3
   13968:	pop	{r4, pc}
   1396c:	ldr	r0, [pc]	; 13974 <putchar_unlocked@plt+0x2ae0>
   13970:	pop	{r4, pc}
   13974:	ldrdeq	r4, [r1], -ip
   13978:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1397c:	subs	r5, r0, #0
   13980:	mov	r7, r2
   13984:	addeq	r5, sp, #4
   13988:	mov	r6, r1
   1398c:	mov	r0, r5
   13990:	bl	10d2c <mbrtowc@plt>
   13994:	cmp	r7, #0
   13998:	cmnne	r0, #3
   1399c:	mov	r4, r0
   139a0:	bls	139bc <putchar_unlocked@plt+0x2b28>
   139a4:	mov	r0, #0
   139a8:	bl	139f4 <putchar_unlocked@plt+0x2b60>
   139ac:	cmp	r0, #0
   139b0:	ldrbeq	r3, [r6]
   139b4:	moveq	r4, #1
   139b8:	streq	r3, [r5]
   139bc:	mov	r0, r4
   139c0:	add	sp, sp, #12
   139c4:	pop	{r4, r5, r6, r7, pc}
   139c8:	umull	r2, r3, r1, r2
   139cc:	cmp	r3, #0
   139d0:	bne	139dc <putchar_unlocked@plt+0x2b48>
   139d4:	mov	r1, r2
   139d8:	b	136d8 <putchar_unlocked@plt+0x2844>
   139dc:	push	{r4, lr}
   139e0:	bl	10db0 <__errno_location@plt>
   139e4:	mov	r3, #12
   139e8:	str	r3, [r0]
   139ec:	mov	r0, #0
   139f0:	pop	{r4, pc}
   139f4:	push	{lr}		; (str lr, [sp, #-4]!)
   139f8:	sub	sp, sp, #268	; 0x10c
   139fc:	movw	r2, #257	; 0x101
   13a00:	add	r1, sp, #4
   13a04:	bl	13a50 <putchar_unlocked@plt+0x2bbc>
   13a08:	cmp	r0, #0
   13a0c:	movne	r0, #0
   13a10:	bne	13a40 <putchar_unlocked@plt+0x2bac>
   13a14:	ldr	r1, [pc, #44]	; 13a48 <putchar_unlocked@plt+0x2bb4>
   13a18:	add	r0, sp, #4
   13a1c:	bl	10c54 <strcmp@plt>
   13a20:	cmp	r0, #0
   13a24:	beq	13a3c <putchar_unlocked@plt+0x2ba8>
   13a28:	ldr	r1, [pc, #28]	; 13a4c <putchar_unlocked@plt+0x2bb8>
   13a2c:	add	r0, sp, #4
   13a30:	bl	10c54 <strcmp@plt>
   13a34:	adds	r0, r0, #0
   13a38:	movne	r0, #1
   13a3c:	and	r0, r0, #1
   13a40:	add	sp, sp, #268	; 0x10c
   13a44:	pop	{pc}		; (ldr pc, [sp], #4)
   13a48:	andeq	r4, r1, r2, ror #5
   13a4c:	andeq	r4, r1, r4, ror #5
   13a50:	push	{r4, r5, r6, lr}
   13a54:	mov	r5, r1
   13a58:	mov	r1, #0
   13a5c:	mov	r4, r2
   13a60:	bl	10e28 <setlocale@plt>
   13a64:	subs	r6, r0, #0
   13a68:	bne	13a7c <putchar_unlocked@plt+0x2be8>
   13a6c:	cmp	r4, #0
   13a70:	mov	r0, #22
   13a74:	strbne	r6, [r5]
   13a78:	pop	{r4, r5, r6, pc}
   13a7c:	bl	10da4 <strlen@plt>
   13a80:	cmp	r4, r0
   13a84:	bls	13aa0 <putchar_unlocked@plt+0x2c0c>
   13a88:	add	r2, r0, #1
   13a8c:	mov	r1, r6
   13a90:	mov	r0, r5
   13a94:	bl	10c90 <memcpy@plt>
   13a98:	mov	r0, #0
   13a9c:	pop	{r4, r5, r6, pc}
   13aa0:	cmp	r4, #0
   13aa4:	beq	13ac4 <putchar_unlocked@plt+0x2c30>
   13aa8:	sub	r4, r4, #1
   13aac:	mov	r1, r6
   13ab0:	mov	r2, r4
   13ab4:	mov	r0, r5
   13ab8:	bl	10c90 <memcpy@plt>
   13abc:	mov	r3, #0
   13ac0:	strb	r3, [r5, r4]
   13ac4:	mov	r0, #34	; 0x22
   13ac8:	pop	{r4, r5, r6, pc}
   13acc:	mov	r1, #0
   13ad0:	b	10e28 <setlocale@plt>
   13ad4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ad8:	mov	r7, r0
   13adc:	ldr	r6, [pc, #72]	; 13b2c <putchar_unlocked@plt+0x2c98>
   13ae0:	ldr	r5, [pc, #72]	; 13b30 <putchar_unlocked@plt+0x2c9c>
   13ae4:	add	r6, pc, r6
   13ae8:	add	r5, pc, r5
   13aec:	sub	r6, r6, r5
   13af0:	mov	r8, r1
   13af4:	mov	r9, r2
   13af8:	bl	10c1c <calloc@plt-0x20>
   13afc:	asrs	r6, r6, #2
   13b00:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b04:	mov	r4, #0
   13b08:	add	r4, r4, #1
   13b0c:	ldr	r3, [r5], #4
   13b10:	mov	r2, r9
   13b14:	mov	r1, r8
   13b18:	mov	r0, r7
   13b1c:	blx	r3
   13b20:	cmp	r6, r4
   13b24:	bne	13b08 <putchar_unlocked@plt+0x2c74>
   13b28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b2c:	andeq	r1, r1, r8, lsr #8
   13b30:	andeq	r1, r1, r0, lsr #8
   13b34:	bx	lr
   13b38:	ldr	r3, [pc, #12]	; 13b4c <putchar_unlocked@plt+0x2cb8>
   13b3c:	mov	r1, #0
   13b40:	add	r3, pc, r3
   13b44:	ldr	r2, [r3]
   13b48:	b	10dbc <__cxa_atexit@plt>
   13b4c:	muleq	r1, r8, r5

Disassembly of section .fini:

00013b50 <.fini>:
   13b50:	push	{r3, lr}
   13b54:	pop	{r3, pc}
