
../repos/coreutils/src/sync:     file format elf32-littlearm


Disassembly of section .init:

00010d7c <.init>:
   10d7c:	push	{r3, lr}
   10d80:	bl	1103c <__assert_fail@plt+0x48>
   10d84:	pop	{r3, pc}

Disassembly of section .plt:

00010d88 <calloc@plt-0x14>:
   10d88:	push	{lr}		; (str lr, [sp, #-4]!)
   10d8c:	ldr	lr, [pc, #4]	; 10d98 <calloc@plt-0x4>
   10d90:	add	lr, pc, lr
   10d94:	ldr	pc, [lr, #8]!
   10d98:	andeq	sl, r1, r8, ror #4

00010d9c <calloc@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #106496	; 0x1a000
   10da4:	ldr	pc, [ip, #616]!	; 0x268

00010da8 <fputs_unlocked@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #106496	; 0x1a000
   10db0:	ldr	pc, [ip, #608]!	; 0x260

00010db4 <raise@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #106496	; 0x1a000
   10dbc:	ldr	pc, [ip, #600]!	; 0x258

00010dc0 <fsync@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #106496	; 0x1a000
   10dc8:	ldr	pc, [ip, #592]!	; 0x250

00010dcc <strcmp@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #106496	; 0x1a000
   10dd4:	ldr	pc, [ip, #584]!	; 0x248

00010dd8 <printf@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #106496	; 0x1a000
   10de0:	ldr	pc, [ip, #576]!	; 0x240

00010de4 <fflush@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #106496	; 0x1a000
   10dec:	ldr	pc, [ip, #568]!	; 0x238

00010df0 <free@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #106496	; 0x1a000
   10df8:	ldr	pc, [ip, #560]!	; 0x230

00010dfc <_exit@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #106496	; 0x1a000
   10e04:	ldr	pc, [ip, #552]!	; 0x228

00010e08 <memcpy@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #106496	; 0x1a000
   10e10:	ldr	pc, [ip, #544]!	; 0x220

00010e14 <mbsinit@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #106496	; 0x1a000
   10e1c:	ldr	pc, [ip, #536]!	; 0x218

00010e20 <memcmp@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #106496	; 0x1a000
   10e28:	ldr	pc, [ip, #528]!	; 0x210

00010e2c <syncfs@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #106496	; 0x1a000
   10e34:	ldr	pc, [ip, #520]!	; 0x208

00010e38 <realloc@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #106496	; 0x1a000
   10e40:	ldr	pc, [ip, #512]!	; 0x200

00010e44 <textdomain@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #106496	; 0x1a000
   10e4c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e50 <iswprint@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #106496	; 0x1a000
   10e58:	ldr	pc, [ip, #496]!	; 0x1f0

00010e5c <lseek64@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #106496	; 0x1a000
   10e64:	ldr	pc, [ip, #488]!	; 0x1e8

00010e68 <__ctype_get_mb_cur_max@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #106496	; 0x1a000
   10e70:	ldr	pc, [ip, #480]!	; 0x1e0

00010e74 <__fpending@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #106496	; 0x1a000
   10e7c:	ldr	pc, [ip, #472]!	; 0x1d8

00010e80 <ferror_unlocked@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #106496	; 0x1a000
   10e88:	ldr	pc, [ip, #464]!	; 0x1d0

00010e8c <mbrtowc@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #106496	; 0x1a000
   10e94:	ldr	pc, [ip, #456]!	; 0x1c8

00010e98 <error@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #106496	; 0x1a000
   10ea0:	ldr	pc, [ip, #448]!	; 0x1c0

00010ea4 <open64@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #106496	; 0x1a000
   10eac:	ldr	pc, [ip, #440]!	; 0x1b8

00010eb0 <malloc@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #106496	; 0x1a000
   10eb8:	ldr	pc, [ip, #432]!	; 0x1b0

00010ebc <__libc_start_main@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #106496	; 0x1a000
   10ec4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ec8 <__freading@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #106496	; 0x1a000
   10ed0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ed4 <__gmon_start__@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #106496	; 0x1a000
   10edc:	ldr	pc, [ip, #408]!	; 0x198

00010ee0 <getopt_long@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #106496	; 0x1a000
   10ee8:	ldr	pc, [ip, #400]!	; 0x190

00010eec <__ctype_b_loc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #106496	; 0x1a000
   10ef4:	ldr	pc, [ip, #392]!	; 0x188

00010ef8 <exit@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #106496	; 0x1a000
   10f00:	ldr	pc, [ip, #384]!	; 0x180

00010f04 <gettext@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #106496	; 0x1a000
   10f0c:	ldr	pc, [ip, #376]!	; 0x178

00010f10 <strlen@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #106496	; 0x1a000
   10f18:	ldr	pc, [ip, #368]!	; 0x170

00010f1c <fprintf@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #106496	; 0x1a000
   10f24:	ldr	pc, [ip, #360]!	; 0x168

00010f28 <__errno_location@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #106496	; 0x1a000
   10f30:	ldr	pc, [ip, #352]!	; 0x160

00010f34 <__cxa_atexit@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #106496	; 0x1a000
   10f3c:	ldr	pc, [ip, #344]!	; 0x158

00010f40 <memset@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #106496	; 0x1a000
   10f48:	ldr	pc, [ip, #336]!	; 0x150

00010f4c <fileno@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #106496	; 0x1a000
   10f54:	ldr	pc, [ip, #328]!	; 0x148

00010f58 <fclose@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #106496	; 0x1a000
   10f60:	ldr	pc, [ip, #320]!	; 0x140

00010f64 <fseeko64@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #106496	; 0x1a000
   10f6c:	ldr	pc, [ip, #312]!	; 0x138

00010f70 <fcntl64@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #106496	; 0x1a000
   10f78:	ldr	pc, [ip, #304]!	; 0x130

00010f7c <setlocale@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #106496	; 0x1a000
   10f84:	ldr	pc, [ip, #296]!	; 0x128

00010f88 <strrchr@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #106496	; 0x1a000
   10f90:	ldr	pc, [ip, #288]!	; 0x120

00010f94 <nl_langinfo@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #106496	; 0x1a000
   10f9c:	ldr	pc, [ip, #280]!	; 0x118

00010fa0 <bindtextdomain@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #106496	; 0x1a000
   10fa8:	ldr	pc, [ip, #272]!	; 0x110

00010fac <sync@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #106496	; 0x1a000
   10fb4:	ldr	pc, [ip, #264]!	; 0x108

00010fb8 <fputs@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #106496	; 0x1a000
   10fc0:	ldr	pc, [ip, #256]!	; 0x100

00010fc4 <strncmp@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #106496	; 0x1a000
   10fcc:	ldr	pc, [ip, #248]!	; 0xf8

00010fd0 <fdatasync@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #106496	; 0x1a000
   10fd8:	ldr	pc, [ip, #240]!	; 0xf0

00010fdc <abort@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #106496	; 0x1a000
   10fe4:	ldr	pc, [ip, #232]!	; 0xe8

00010fe8 <close@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #106496	; 0x1a000
   10ff0:	ldr	pc, [ip, #224]!	; 0xe0

00010ff4 <__assert_fail@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #106496	; 0x1a000
   10ffc:	ldr	pc, [ip, #216]!	; 0xd8

Disassembly of section .text:

00011000 <.text>:
   11000:	mov	fp, #0
   11004:	mov	lr, #0
   11008:	pop	{r1}		; (ldr r1, [sp], #4)
   1100c:	mov	r2, sp
   11010:	push	{r2}		; (str r2, [sp, #-4]!)
   11014:	push	{r0}		; (str r0, [sp, #-4]!)
   11018:	ldr	ip, [pc, #16]	; 11030 <__assert_fail@plt+0x3c>
   1101c:	push	{ip}		; (str ip, [sp, #-4]!)
   11020:	ldr	r0, [pc, #12]	; 11034 <__assert_fail@plt+0x40>
   11024:	ldr	r3, [pc, #12]	; 11038 <__assert_fail@plt+0x44>
   11028:	bl	10ebc <__libc_start_main@plt>
   1102c:	bl	10fdc <abort@plt>
   11030:	andeq	sl, r1, r4, asr #8
   11034:	andeq	r1, r1, ip, ror #7
   11038:	andeq	sl, r1, r4, ror #7
   1103c:	ldr	r3, [pc, #20]	; 11058 <__assert_fail@plt+0x64>
   11040:	ldr	r2, [pc, #20]	; 1105c <__assert_fail@plt+0x68>
   11044:	add	r3, pc, r3
   11048:	ldr	r2, [r3, r2]
   1104c:	cmp	r2, #0
   11050:	bxeq	lr
   11054:	b	10ed4 <__gmon_start__@plt>
   11058:			; <UNDEFINED> instruction: 0x00019fb4
   1105c:	ldrdeq	r0, [r0], -r8
   11060:	ldr	r0, [pc, #24]	; 11080 <__assert_fail@plt+0x8c>
   11064:	ldr	r3, [pc, #24]	; 11084 <__assert_fail@plt+0x90>
   11068:	cmp	r3, r0
   1106c:	bxeq	lr
   11070:	ldr	r3, [pc, #16]	; 11088 <__assert_fail@plt+0x94>
   11074:	cmp	r3, #0
   11078:	bxeq	lr
   1107c:	bx	r3
   11080:	andeq	fp, r2, ip, lsr #2
   11084:	andeq	fp, r2, ip, lsr #2
   11088:	andeq	r0, r0, r0
   1108c:	ldr	r0, [pc, #36]	; 110b8 <__assert_fail@plt+0xc4>
   11090:	ldr	r1, [pc, #36]	; 110bc <__assert_fail@plt+0xc8>
   11094:	sub	r1, r1, r0
   11098:	asr	r1, r1, #2
   1109c:	add	r1, r1, r1, lsr #31
   110a0:	asrs	r1, r1, #1
   110a4:	bxeq	lr
   110a8:	ldr	r3, [pc, #16]	; 110c0 <__assert_fail@plt+0xcc>
   110ac:	cmp	r3, #0
   110b0:	bxeq	lr
   110b4:	bx	r3
   110b8:	andeq	fp, r2, ip, lsr #2
   110bc:	andeq	fp, r2, ip, lsr #2
   110c0:	andeq	r0, r0, r0
   110c4:	push	{r4, lr}
   110c8:	ldr	r4, [pc, #24]	; 110e8 <__assert_fail@plt+0xf4>
   110cc:	ldrb	r3, [r4]
   110d0:	cmp	r3, #0
   110d4:	popne	{r4, pc}
   110d8:	bl	11060 <__assert_fail@plt+0x6c>
   110dc:	mov	r3, #1
   110e0:	strb	r3, [r4]
   110e4:	pop	{r4, pc}
   110e8:	andeq	fp, r2, r8, asr #2
   110ec:	b	1108c <__assert_fail@plt+0x98>
   110f0:	push	{fp, lr}
   110f4:	mov	fp, sp
   110f8:	sub	sp, sp, #40	; 0x28
   110fc:	str	r0, [fp, #-4]
   11100:	ldr	r0, [fp, #-4]
   11104:	cmp	r0, #0
   11108:	beq	11154 <__assert_fail@plt+0x160>
   1110c:	b	11110 <__assert_fail@plt+0x11c>
   11110:	movw	r0, #45376	; 0xb140
   11114:	movt	r0, #2
   11118:	ldr	r0, [r0]
   1111c:	movw	r1, #42092	; 0xa46c
   11120:	movt	r1, #1
   11124:	str	r0, [fp, #-8]
   11128:	mov	r0, r1
   1112c:	bl	10f04 <gettext@plt>
   11130:	movw	r1, #45400	; 0xb158
   11134:	movt	r1, #2
   11138:	ldr	r2, [r1]
   1113c:	ldr	r1, [fp, #-8]
   11140:	str	r0, [fp, #-12]
   11144:	mov	r0, r1
   11148:	ldr	r1, [fp, #-12]
   1114c:	bl	10f1c <fprintf@plt>
   11150:	b	11238 <__assert_fail@plt+0x244>
   11154:	movw	r0, #42131	; 0xa493
   11158:	movt	r0, #1
   1115c:	bl	10f04 <gettext@plt>
   11160:	movw	r1, #45400	; 0xb158
   11164:	movt	r1, #2
   11168:	ldr	r1, [r1]
   1116c:	bl	10dd8 <printf@plt>
   11170:	movw	r1, #42161	; 0xa4b1
   11174:	movt	r1, #1
   11178:	str	r0, [fp, #-16]
   1117c:	mov	r0, r1
   11180:	bl	10f04 <gettext@plt>
   11184:	movw	r1, #45380	; 0xb144
   11188:	movt	r1, #2
   1118c:	ldr	r1, [r1]
   11190:	bl	10da8 <fputs_unlocked@plt>
   11194:	movw	r1, #42298	; 0xa53a
   11198:	movt	r1, #1
   1119c:	str	r0, [sp, #20]
   111a0:	mov	r0, r1
   111a4:	bl	10f04 <gettext@plt>
   111a8:	movw	r1, #45380	; 0xb144
   111ac:	movt	r1, #2
   111b0:	ldr	r1, [r1]
   111b4:	bl	10da8 <fputs_unlocked@plt>
   111b8:	movw	r1, #42366	; 0xa57e
   111bc:	movt	r1, #1
   111c0:	str	r0, [sp, #16]
   111c4:	mov	r0, r1
   111c8:	bl	10f04 <gettext@plt>
   111cc:	movw	r1, #45380	; 0xb144
   111d0:	movt	r1, #2
   111d4:	ldr	r1, [r1]
   111d8:	bl	10da8 <fputs_unlocked@plt>
   111dc:	movw	r1, #42437	; 0xa5c5
   111e0:	movt	r1, #1
   111e4:	str	r0, [sp, #12]
   111e8:	mov	r0, r1
   111ec:	bl	10f04 <gettext@plt>
   111f0:	movw	r1, #45380	; 0xb144
   111f4:	movt	r1, #2
   111f8:	ldr	r1, [r1]
   111fc:	bl	10da8 <fputs_unlocked@plt>
   11200:	movw	r1, #42482	; 0xa5f2
   11204:	movt	r1, #1
   11208:	str	r0, [sp, #8]
   1120c:	mov	r0, r1
   11210:	bl	10f04 <gettext@plt>
   11214:	movw	r1, #45380	; 0xb144
   11218:	movt	r1, #2
   1121c:	ldr	r1, [r1]
   11220:	bl	10da8 <fputs_unlocked@plt>
   11224:	movw	r1, #42536	; 0xa628
   11228:	movt	r1, #1
   1122c:	str	r0, [sp, #4]
   11230:	mov	r0, r1
   11234:	bl	11240 <__assert_fail@plt+0x24c>
   11238:	ldr	r0, [fp, #-4]
   1123c:	bl	10ef8 <exit@plt>
   11240:	push	{fp, lr}
   11244:	mov	fp, sp
   11248:	sub	sp, sp, #88	; 0x58
   1124c:	add	r1, sp, #28
   11250:	movw	r2, #43288	; 0xa918
   11254:	movt	r2, #1
   11258:	str	r0, [fp, #-4]
   1125c:	mov	r0, r1
   11260:	str	r1, [sp, #12]
   11264:	mov	r1, r2
   11268:	movw	r2, #56	; 0x38
   1126c:	bl	10e08 <memcpy@plt>
   11270:	ldr	r0, [fp, #-4]
   11274:	str	r0, [sp, #24]
   11278:	ldr	r0, [sp, #12]
   1127c:	str	r0, [sp, #20]
   11280:	ldr	r0, [sp, #20]
   11284:	ldr	r0, [r0]
   11288:	movw	r1, #0
   1128c:	cmp	r0, r1
   11290:	movw	r0, #0
   11294:	str	r0, [sp, #8]
   11298:	beq	112c4 <__assert_fail@plt+0x2d0>
   1129c:	ldr	r0, [fp, #-4]
   112a0:	ldr	r1, [sp, #20]
   112a4:	ldr	r1, [r1]
   112a8:	bl	10dcc <strcmp@plt>
   112ac:	cmp	r0, #0
   112b0:	movw	r0, #0
   112b4:	moveq	r0, #1
   112b8:	mvn	r1, #0
   112bc:	eor	r0, r0, r1
   112c0:	str	r0, [sp, #8]
   112c4:	ldr	r0, [sp, #8]
   112c8:	tst	r0, #1
   112cc:	beq	112e0 <__assert_fail@plt+0x2ec>
   112d0:	ldr	r0, [sp, #20]
   112d4:	add	r0, r0, #8
   112d8:	str	r0, [sp, #20]
   112dc:	b	11280 <__assert_fail@plt+0x28c>
   112e0:	ldr	r0, [sp, #20]
   112e4:	ldr	r0, [r0, #4]
   112e8:	movw	r1, #0
   112ec:	cmp	r0, r1
   112f0:	beq	11300 <__assert_fail@plt+0x30c>
   112f4:	ldr	r0, [sp, #20]
   112f8:	ldr	r0, [r0, #4]
   112fc:	str	r0, [sp, #24]
   11300:	movw	r0, #42788	; 0xa724
   11304:	movt	r0, #1
   11308:	bl	10f04 <gettext@plt>
   1130c:	movw	r1, #42568	; 0xa648
   11310:	movt	r1, #1
   11314:	movw	r2, #42811	; 0xa73b
   11318:	movt	r2, #1
   1131c:	bl	10dd8 <printf@plt>
   11320:	movw	r1, #5
   11324:	str	r0, [sp, #4]
   11328:	mov	r0, r1
   1132c:	movw	r1, #0
   11330:	bl	10f7c <setlocale@plt>
   11334:	str	r0, [sp, #16]
   11338:	ldr	r0, [sp, #16]
   1133c:	movw	r1, #0
   11340:	cmp	r0, r1
   11344:	beq	11380 <__assert_fail@plt+0x38c>
   11348:	ldr	r0, [sp, #16]
   1134c:	movw	r1, #42851	; 0xa763
   11350:	movt	r1, #1
   11354:	movw	r2, #3
   11358:	bl	10fc4 <strncmp@plt>
   1135c:	cmp	r0, #0
   11360:	beq	11380 <__assert_fail@plt+0x38c>
   11364:	movw	r0, #42855	; 0xa767
   11368:	movt	r0, #1
   1136c:	bl	10f04 <gettext@plt>
   11370:	movw	r1, #45380	; 0xb144
   11374:	movt	r1, #2
   11378:	ldr	r1, [r1]
   1137c:	bl	10da8 <fputs_unlocked@plt>
   11380:	movw	r0, #42926	; 0xa7ae
   11384:	movt	r0, #1
   11388:	bl	10f04 <gettext@plt>
   1138c:	ldr	r2, [fp, #-4]
   11390:	movw	r1, #42811	; 0xa73b
   11394:	movt	r1, #1
   11398:	bl	10dd8 <printf@plt>
   1139c:	movw	r1, #42953	; 0xa7c9
   113a0:	movt	r1, #1
   113a4:	str	r0, [sp]
   113a8:	mov	r0, r1
   113ac:	bl	10f04 <gettext@plt>
   113b0:	ldr	r1, [sp, #24]
   113b4:	ldr	r2, [sp, #24]
   113b8:	ldr	r3, [fp, #-4]
   113bc:	cmp	r2, r3
   113c0:	movw	r2, #0
   113c4:	moveq	r2, #1
   113c8:	tst	r2, #1
   113cc:	movw	r2, #42297	; 0xa539
   113d0:	movt	r2, #1
   113d4:	movw	r3, #42721	; 0xa6e1
   113d8:	movt	r3, #1
   113dc:	movne	r2, r3
   113e0:	bl	10dd8 <printf@plt>
   113e4:	mov	sp, fp
   113e8:	pop	{fp, pc}
   113ec:	push	{fp, lr}
   113f0:	mov	fp, sp
   113f4:	sub	sp, sp, #64	; 0x40
   113f8:	movw	r2, #0
   113fc:	str	r2, [fp, #-4]
   11400:	str	r0, [fp, #-8]
   11404:	str	r1, [fp, #-12]
   11408:	movw	r0, #0
   1140c:	strb	r0, [fp, #-18]	; 0xffffffee
   11410:	strb	r0, [fp, #-19]	; 0xffffffed
   11414:	movw	r0, #1
   11418:	strb	r0, [fp, #-25]	; 0xffffffe7
   1141c:	ldr	r0, [fp, #-12]
   11420:	ldr	r0, [r0]
   11424:	bl	11f44 <__assert_fail@plt+0xf50>
   11428:	movw	r0, #6
   1142c:	movw	r1, #42297	; 0xa539
   11430:	movt	r1, #1
   11434:	bl	10f7c <setlocale@plt>
   11438:	movw	r1, #42572	; 0xa64c
   1143c:	movt	r1, #1
   11440:	str	r0, [sp, #32]
   11444:	mov	r0, r1
   11448:	movw	r1, #42541	; 0xa62d
   1144c:	movt	r1, #1
   11450:	bl	10fa0 <bindtextdomain@plt>
   11454:	movw	r1, #42572	; 0xa64c
   11458:	movt	r1, #1
   1145c:	str	r0, [sp, #28]
   11460:	mov	r0, r1
   11464:	bl	10e44 <textdomain@plt>
   11468:	movw	r1, #6724	; 0x1a44
   1146c:	movt	r1, #1
   11470:	str	r0, [sp, #24]
   11474:	mov	r0, r1
   11478:	bl	1a448 <__assert_fail@plt+0x9454>
   1147c:	ldr	r0, [fp, #-8]
   11480:	ldr	r1, [fp, #-12]
   11484:	movw	r2, #42565	; 0xa645
   11488:	movt	r2, #1
   1148c:	movw	r3, #43208	; 0xa8c8
   11490:	movt	r3, #1
   11494:	movw	ip, #0
   11498:	str	ip, [sp]
   1149c:	bl	10ee0 <getopt_long@plt>
   114a0:	str	r0, [fp, #-16]
   114a4:	cmn	r0, #1
   114a8:	beq	11570 <__assert_fail@plt+0x57c>
   114ac:	ldr	r0, [fp, #-16]
   114b0:	cmn	r0, #3
   114b4:	str	r0, [sp, #20]
   114b8:	beq	11510 <__assert_fail@plt+0x51c>
   114bc:	b	114c0 <__assert_fail@plt+0x4cc>
   114c0:	ldr	r0, [sp, #20]
   114c4:	cmn	r0, #2
   114c8:	beq	11508 <__assert_fail@plt+0x514>
   114cc:	b	114d0 <__assert_fail@plt+0x4dc>
   114d0:	ldr	r0, [sp, #20]
   114d4:	cmp	r0, #100	; 0x64
   114d8:	beq	114f0 <__assert_fail@plt+0x4fc>
   114dc:	b	114e0 <__assert_fail@plt+0x4ec>
   114e0:	ldr	r0, [sp, #20]
   114e4:	cmp	r0, #102	; 0x66
   114e8:	beq	114fc <__assert_fail@plt+0x508>
   114ec:	b	11564 <__assert_fail@plt+0x570>
   114f0:	movw	r0, #1
   114f4:	strb	r0, [fp, #-18]	; 0xffffffee
   114f8:	b	1156c <__assert_fail@plt+0x578>
   114fc:	movw	r0, #1
   11500:	strb	r0, [fp, #-19]	; 0xffffffed
   11504:	b	1156c <__assert_fail@plt+0x578>
   11508:	movw	r0, #0
   1150c:	bl	110f0 <__assert_fail@plt+0xfc>
   11510:	movw	r0, #45380	; 0xb144
   11514:	movt	r0, #2
   11518:	ldr	r0, [r0]
   1151c:	movw	r1, #45284	; 0xb0e4
   11520:	movt	r1, #2
   11524:	ldr	r3, [r1]
   11528:	movw	r1, #42536	; 0xa628
   1152c:	movt	r1, #1
   11530:	movw	r2, #42568	; 0xa648
   11534:	movt	r2, #1
   11538:	movw	ip, #42582	; 0xa656
   1153c:	movt	ip, #1
   11540:	str	ip, [sp]
   11544:	movw	ip, #42595	; 0xa663
   11548:	movt	ip, #1
   1154c:	str	ip, [sp, #4]
   11550:	movw	ip, #0
   11554:	str	ip, [sp, #8]
   11558:	bl	14e1c <__assert_fail@plt+0x3e28>
   1155c:	movw	r0, #0
   11560:	bl	10ef8 <exit@plt>
   11564:	movw	r0, #1
   11568:	bl	110f0 <__assert_fail@plt+0xfc>
   1156c:	b	1147c <__assert_fail@plt+0x488>
   11570:	movw	r0, #45368	; 0xb138
   11574:	movt	r0, #2
   11578:	ldr	r0, [r0]
   1157c:	ldr	r1, [fp, #-8]
   11580:	cmp	r0, r1
   11584:	movw	r0, #0
   11588:	movlt	r0, #1
   1158c:	and	r0, r0, #1
   11590:	strb	r0, [fp, #-17]	; 0xffffffef
   11594:	ldrb	r0, [fp, #-18]	; 0xffffffee
   11598:	tst	r0, #1
   1159c:	beq	115d0 <__assert_fail@plt+0x5dc>
   115a0:	ldrb	r0, [fp, #-19]	; 0xffffffed
   115a4:	tst	r0, #1
   115a8:	beq	115d0 <__assert_fail@plt+0x5dc>
   115ac:	movw	r0, #42613	; 0xa675
   115b0:	movt	r0, #1
   115b4:	bl	10f04 <gettext@plt>
   115b8:	movw	r1, #1
   115bc:	str	r0, [sp, #16]
   115c0:	mov	r0, r1
   115c4:	movw	r1, #0
   115c8:	ldr	r2, [sp, #16]
   115cc:	bl	10e98 <error@plt>
   115d0:	ldrb	r0, [fp, #-17]	; 0xffffffef
   115d4:	tst	r0, #1
   115d8:	bne	1160c <__assert_fail@plt+0x618>
   115dc:	ldrb	r0, [fp, #-18]	; 0xffffffee
   115e0:	tst	r0, #1
   115e4:	beq	1160c <__assert_fail@plt+0x618>
   115e8:	movw	r0, #42658	; 0xa6a2
   115ec:	movt	r0, #1
   115f0:	bl	10f04 <gettext@plt>
   115f4:	movw	r1, #1
   115f8:	str	r0, [sp, #12]
   115fc:	mov	r0, r1
   11600:	movw	r1, #0
   11604:	ldr	r2, [sp, #12]
   11608:	bl	10e98 <error@plt>
   1160c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11610:	tst	r0, #1
   11614:	beq	11628 <__assert_fail@plt+0x634>
   11618:	ldrb	r0, [fp, #-19]	; 0xffffffed
   1161c:	tst	r0, #1
   11620:	beq	11634 <__assert_fail@plt+0x640>
   11624:	b	11634 <__assert_fail@plt+0x640>
   11628:	movw	r0, #3
   1162c:	str	r0, [fp, #-24]	; 0xffffffe8
   11630:	b	11674 <__assert_fail@plt+0x680>
   11634:	ldrb	r0, [fp, #-19]	; 0xffffffed
   11638:	tst	r0, #1
   1163c:	beq	1164c <__assert_fail@plt+0x658>
   11640:	movw	r0, #2
   11644:	str	r0, [fp, #-24]	; 0xffffffe8
   11648:	b	11670 <__assert_fail@plt+0x67c>
   1164c:	ldrb	r0, [fp, #-18]	; 0xffffffee
   11650:	tst	r0, #1
   11654:	bne	11664 <__assert_fail@plt+0x670>
   11658:	movw	r0, #0
   1165c:	str	r0, [fp, #-24]	; 0xffffffe8
   11660:	b	1166c <__assert_fail@plt+0x678>
   11664:	movw	r0, #1
   11668:	str	r0, [fp, #-24]	; 0xffffffe8
   1166c:	b	11670 <__assert_fail@plt+0x67c>
   11670:	b	11674 <__assert_fail@plt+0x680>
   11674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11678:	cmp	r0, #3
   1167c:	bne	11688 <__assert_fail@plt+0x694>
   11680:	bl	10fac <sync@plt>
   11684:	b	11704 <__assert_fail@plt+0x710>
   11688:	b	1168c <__assert_fail@plt+0x698>
   1168c:	movw	r0, #45368	; 0xb138
   11690:	movt	r0, #2
   11694:	ldr	r0, [r0]
   11698:	ldr	r1, [fp, #-8]
   1169c:	cmp	r0, r1
   116a0:	bge	11700 <__assert_fail@plt+0x70c>
   116a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116a8:	ldr	r1, [fp, #-12]
   116ac:	movw	r2, #45368	; 0xb138
   116b0:	movt	r2, #2
   116b4:	ldr	r2, [r2]
   116b8:	add	r1, r1, r2, lsl #2
   116bc:	ldr	r1, [r1]
   116c0:	bl	1171c <__assert_fail@plt+0x728>
   116c4:	and	r0, r0, #1
   116c8:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   116cc:	and	r1, r1, #1
   116d0:	and	r0, r1, r0
   116d4:	cmp	r0, #0
   116d8:	movw	r0, #0
   116dc:	movne	r0, #1
   116e0:	and	r0, r0, #1
   116e4:	strb	r0, [fp, #-25]	; 0xffffffe7
   116e8:	movw	r0, #45368	; 0xb138
   116ec:	movt	r0, #2
   116f0:	ldr	r1, [r0]
   116f4:	add	r1, r1, #1
   116f8:	str	r1, [r0]
   116fc:	b	1168c <__assert_fail@plt+0x698>
   11700:	b	11704 <__assert_fail@plt+0x710>
   11704:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11708:	tst	r0, #1
   1170c:	movw	r0, #0
   11710:	moveq	r0, #1
   11714:	mov	sp, fp
   11718:	pop	{fp, pc}
   1171c:	push	{fp, lr}
   11720:	mov	fp, sp
   11724:	sub	sp, sp, #88	; 0x58
   11728:	str	r0, [fp, #-8]
   1172c:	str	r1, [fp, #-12]
   11730:	movw	r0, #1
   11734:	strb	r0, [fp, #-13]
   11738:	movw	r0, #2048	; 0x800
   1173c:	str	r0, [fp, #-20]	; 0xffffffec
   11740:	ldr	r0, [fp, #-12]
   11744:	ldr	r1, [fp, #-20]	; 0xffffffec
   11748:	bl	10ea4 <open64@plt>
   1174c:	str	r0, [fp, #-24]	; 0xffffffe8
   11750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11754:	cmp	r0, #0
   11758:	bge	117ec <__assert_fail@plt+0x7f8>
   1175c:	bl	10f28 <__errno_location@plt>
   11760:	ldr	r0, [r0]
   11764:	str	r0, [fp, #-28]	; 0xffffffe4
   11768:	ldr	r0, [fp, #-20]	; 0xffffffec
   1176c:	movw	r1, #2049	; 0x801
   11770:	cmp	r0, r1
   11774:	beq	11788 <__assert_fail@plt+0x794>
   11778:	ldr	r0, [fp, #-12]
   1177c:	movw	r1, #2049	; 0x801
   11780:	bl	10ea4 <open64@plt>
   11784:	str	r0, [fp, #-24]	; 0xffffffe8
   11788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1178c:	cmp	r0, #0
   11790:	bge	117e8 <__assert_fail@plt+0x7f4>
   11794:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11798:	movw	r0, #43022	; 0xa80e
   1179c:	movt	r0, #1
   117a0:	str	r1, [fp, #-40]	; 0xffffffd8
   117a4:	bl	10f04 <gettext@plt>
   117a8:	ldr	r1, [fp, #-12]
   117ac:	movw	r2, #4
   117b0:	str	r0, [sp, #44]	; 0x2c
   117b4:	mov	r0, r2
   117b8:	bl	14208 <__assert_fail@plt+0x3214>
   117bc:	movw	r1, #0
   117c0:	str	r0, [sp, #40]	; 0x28
   117c4:	mov	r0, r1
   117c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   117cc:	ldr	r2, [sp, #44]	; 0x2c
   117d0:	ldr	r3, [sp, #40]	; 0x28
   117d4:	bl	10e98 <error@plt>
   117d8:	movw	r0, #0
   117dc:	and	r0, r0, #1
   117e0:	strb	r0, [fp, #-1]
   117e4:	b	119ec <__assert_fail@plt+0x9f8>
   117e8:	b	117ec <__assert_fail@plt+0x7f8>
   117ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   117f0:	movw	r1, #3
   117f4:	bl	11b64 <__assert_fail@plt+0xb70>
   117f8:	str	r0, [fp, #-32]	; 0xffffffe0
   117fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11800:	cmn	r0, #1
   11804:	beq	11828 <__assert_fail@plt+0x834>
   11808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1180c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11810:	mvn	r2, #2048	; 0x800
   11814:	and	r2, r1, r2
   11818:	movw	r1, #4
   1181c:	bl	11b64 <__assert_fail@plt+0xb70>
   11820:	cmp	r0, #0
   11824:	bge	11878 <__assert_fail@plt+0x884>
   11828:	bl	10f28 <__errno_location@plt>
   1182c:	ldr	r1, [r0]
   11830:	movw	r0, #43039	; 0xa81f
   11834:	movt	r0, #1
   11838:	str	r1, [sp, #36]	; 0x24
   1183c:	bl	10f04 <gettext@plt>
   11840:	ldr	r1, [fp, #-12]
   11844:	movw	r2, #4
   11848:	str	r0, [sp, #32]
   1184c:	mov	r0, r2
   11850:	bl	14208 <__assert_fail@plt+0x3214>
   11854:	movw	r1, #0
   11858:	str	r0, [sp, #28]
   1185c:	mov	r0, r1
   11860:	ldr	r1, [sp, #36]	; 0x24
   11864:	ldr	r2, [sp, #32]
   11868:	ldr	r3, [sp, #28]
   1186c:	bl	10e98 <error@plt>
   11870:	movw	r0, #0
   11874:	strb	r0, [fp, #-13]
   11878:	ldrb	r0, [fp, #-13]
   1187c:	and	r0, r0, #1
   11880:	cmp	r0, #1
   11884:	bne	11980 <__assert_fail@plt+0x98c>
   11888:	mvn	r0, #0
   1188c:	str	r0, [fp, #-36]	; 0xffffffdc
   11890:	ldr	r0, [fp, #-8]
   11894:	cmp	r0, #0
   11898:	str	r0, [sp, #24]
   1189c:	beq	118d4 <__assert_fail@plt+0x8e0>
   118a0:	b	118a4 <__assert_fail@plt+0x8b0>
   118a4:	ldr	r0, [sp, #24]
   118a8:	cmp	r0, #1
   118ac:	beq	118c4 <__assert_fail@plt+0x8d0>
   118b0:	b	118b4 <__assert_fail@plt+0x8c0>
   118b4:	ldr	r0, [sp, #24]
   118b8:	cmp	r0, #2
   118bc:	beq	118e4 <__assert_fail@plt+0x8f0>
   118c0:	b	118f4 <__assert_fail@plt+0x900>
   118c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118c8:	bl	10fd0 <fdatasync@plt>
   118cc:	str	r0, [fp, #-36]	; 0xffffffdc
   118d0:	b	11920 <__assert_fail@plt+0x92c>
   118d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118d8:	bl	10dc0 <fsync@plt>
   118dc:	str	r0, [fp, #-36]	; 0xffffffdc
   118e0:	b	11920 <__assert_fail@plt+0x92c>
   118e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118e8:	bl	10e2c <syncfs@plt>
   118ec:	str	r0, [fp, #-36]	; 0xffffffdc
   118f0:	b	11920 <__assert_fail@plt+0x92c>
   118f4:	b	118f8 <__assert_fail@plt+0x904>
   118f8:	b	1191c <__assert_fail@plt+0x928>
   118fc:	movw	r0, #43093	; 0xa855
   11900:	movt	r0, #1
   11904:	movw	r1, #43113	; 0xa869
   11908:	movt	r1, #1
   1190c:	movw	r2, #152	; 0x98
   11910:	movw	r3, #43124	; 0xa874
   11914:	movt	r3, #1
   11918:	bl	10ff4 <__assert_fail@plt>
   1191c:	b	11920 <__assert_fail@plt+0x92c>
   11920:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11924:	cmp	r0, #0
   11928:	bge	1197c <__assert_fail@plt+0x988>
   1192c:	bl	10f28 <__errno_location@plt>
   11930:	ldr	r1, [r0]
   11934:	movw	r0, #43169	; 0xa8a1
   11938:	movt	r0, #1
   1193c:	str	r1, [sp, #20]
   11940:	bl	10f04 <gettext@plt>
   11944:	ldr	r1, [fp, #-12]
   11948:	movw	r2, #4
   1194c:	str	r0, [sp, #16]
   11950:	mov	r0, r2
   11954:	bl	14208 <__assert_fail@plt+0x3214>
   11958:	movw	r1, #0
   1195c:	str	r0, [sp, #12]
   11960:	mov	r0, r1
   11964:	ldr	r1, [sp, #20]
   11968:	ldr	r2, [sp, #16]
   1196c:	ldr	r3, [sp, #12]
   11970:	bl	10e98 <error@plt>
   11974:	movw	r0, #0
   11978:	strb	r0, [fp, #-13]
   1197c:	b	11980 <__assert_fail@plt+0x98c>
   11980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11984:	bl	10fe8 <close@plt>
   11988:	cmp	r0, #0
   1198c:	bge	119e0 <__assert_fail@plt+0x9ec>
   11990:	bl	10f28 <__errno_location@plt>
   11994:	ldr	r1, [r0]
   11998:	movw	r0, #43186	; 0xa8b2
   1199c:	movt	r0, #1
   119a0:	str	r1, [sp, #8]
   119a4:	bl	10f04 <gettext@plt>
   119a8:	ldr	r1, [fp, #-12]
   119ac:	movw	r2, #4
   119b0:	str	r0, [sp, #4]
   119b4:	mov	r0, r2
   119b8:	bl	14208 <__assert_fail@plt+0x3214>
   119bc:	movw	r1, #0
   119c0:	str	r0, [sp]
   119c4:	mov	r0, r1
   119c8:	ldr	r1, [sp, #8]
   119cc:	ldr	r2, [sp, #4]
   119d0:	ldr	r3, [sp]
   119d4:	bl	10e98 <error@plt>
   119d8:	movw	r0, #0
   119dc:	strb	r0, [fp, #-13]
   119e0:	ldrb	r0, [fp, #-13]
   119e4:	and	r0, r0, #1
   119e8:	strb	r0, [fp, #-1]
   119ec:	ldrb	r0, [fp, #-1]
   119f0:	and	r0, r0, #1
   119f4:	mov	sp, fp
   119f8:	pop	{fp, pc}
   119fc:	sub	sp, sp, #4
   11a00:	str	r0, [sp]
   11a04:	ldr	r0, [sp]
   11a08:	movw	r1, #45388	; 0xb14c
   11a0c:	movt	r1, #2
   11a10:	str	r0, [r1]
   11a14:	add	sp, sp, #4
   11a18:	bx	lr
   11a1c:	sub	sp, sp, #4
   11a20:	and	r0, r0, #1
   11a24:	strb	r0, [sp, #3]
   11a28:	ldrb	r0, [sp, #3]
   11a2c:	and	r0, r0, #1
   11a30:	movw	r1, #45392	; 0xb150
   11a34:	movt	r1, #2
   11a38:	strb	r0, [r1]
   11a3c:	add	sp, sp, #4
   11a40:	bx	lr
   11a44:	push	{fp, lr}
   11a48:	mov	fp, sp
   11a4c:	sub	sp, sp, #24
   11a50:	movw	r0, #45380	; 0xb144
   11a54:	movt	r0, #2
   11a58:	ldr	r0, [r0]
   11a5c:	bl	17f94 <__assert_fail@plt+0x6fa0>
   11a60:	cmp	r0, #0
   11a64:	beq	11b34 <__assert_fail@plt+0xb40>
   11a68:	movw	r0, #45392	; 0xb150
   11a6c:	movt	r0, #2
   11a70:	ldrb	r0, [r0]
   11a74:	tst	r0, #1
   11a78:	beq	11a8c <__assert_fail@plt+0xa98>
   11a7c:	bl	10f28 <__errno_location@plt>
   11a80:	ldr	r0, [r0]
   11a84:	cmp	r0, #32
   11a88:	beq	11b34 <__assert_fail@plt+0xb40>
   11a8c:	movw	r0, #43359	; 0xa95f
   11a90:	movt	r0, #1
   11a94:	bl	10f04 <gettext@plt>
   11a98:	str	r0, [fp, #-4]
   11a9c:	movw	r0, #45388	; 0xb14c
   11aa0:	movt	r0, #2
   11aa4:	ldr	r0, [r0]
   11aa8:	movw	r1, #0
   11aac:	cmp	r0, r1
   11ab0:	beq	11b08 <__assert_fail@plt+0xb14>
   11ab4:	bl	10f28 <__errno_location@plt>
   11ab8:	ldr	r1, [r0]
   11abc:	movw	r0, #45388	; 0xb14c
   11ac0:	movt	r0, #2
   11ac4:	ldr	r0, [r0]
   11ac8:	str	r1, [fp, #-8]
   11acc:	bl	14304 <__assert_fail@plt+0x3310>
   11ad0:	ldr	r1, [fp, #-4]
   11ad4:	movw	r2, #0
   11ad8:	str	r0, [sp, #12]
   11adc:	mov	r0, r2
   11ae0:	ldr	r2, [fp, #-8]
   11ae4:	str	r1, [sp, #8]
   11ae8:	mov	r1, r2
   11aec:	movw	r2, #43371	; 0xa96b
   11af0:	movt	r2, #1
   11af4:	ldr	r3, [sp, #12]
   11af8:	ldr	ip, [sp, #8]
   11afc:	str	ip, [sp]
   11b00:	bl	10e98 <error@plt>
   11b04:	b	11b24 <__assert_fail@plt+0xb30>
   11b08:	bl	10f28 <__errno_location@plt>
   11b0c:	ldr	r1, [r0]
   11b10:	ldr	r3, [fp, #-4]
   11b14:	movw	r0, #0
   11b18:	movw	r2, #43375	; 0xa96f
   11b1c:	movt	r2, #1
   11b20:	bl	10e98 <error@plt>
   11b24:	movw	r0, #45288	; 0xb0e8
   11b28:	movt	r0, #2
   11b2c:	ldr	r0, [r0]
   11b30:	bl	10dfc <_exit@plt>
   11b34:	movw	r0, #45376	; 0xb140
   11b38:	movt	r0, #2
   11b3c:	ldr	r0, [r0]
   11b40:	bl	17f94 <__assert_fail@plt+0x6fa0>
   11b44:	cmp	r0, #0
   11b48:	beq	11b5c <__assert_fail@plt+0xb68>
   11b4c:	movw	r0, #45288	; 0xb0e8
   11b50:	movt	r0, #2
   11b54:	ldr	r0, [r0]
   11b58:	bl	10dfc <_exit@plt>
   11b5c:	mov	sp, fp
   11b60:	pop	{fp, pc}
   11b64:	sub	sp, sp, #8
   11b68:	push	{fp, lr}
   11b6c:	mov	fp, sp
   11b70:	sub	sp, sp, #48	; 0x30
   11b74:	str	r3, [fp, #12]
   11b78:	str	r2, [fp, #8]
   11b7c:	str	r0, [fp, #-4]
   11b80:	str	r1, [fp, #-8]
   11b84:	mvn	r0, #0
   11b88:	str	r0, [fp, #-16]
   11b8c:	add	r0, fp, #8
   11b90:	str	r0, [fp, #-12]
   11b94:	ldr	r0, [fp, #-8]
   11b98:	cmp	r0, #0
   11b9c:	str	r0, [sp, #12]
   11ba0:	beq	11bbc <__assert_fail@plt+0xbc8>
   11ba4:	b	11ba8 <__assert_fail@plt+0xbb4>
   11ba8:	movw	r0, #1030	; 0x406
   11bac:	ldr	r1, [sp, #12]
   11bb0:	cmp	r1, r0
   11bb4:	beq	11be4 <__assert_fail@plt+0xbf0>
   11bb8:	b	11c0c <__assert_fail@plt+0xc18>
   11bbc:	ldr	r0, [fp, #-12]
   11bc0:	add	r1, r0, #4
   11bc4:	str	r1, [fp, #-12]
   11bc8:	ldr	r0, [r0]
   11bcc:	str	r0, [fp, #-20]	; 0xffffffec
   11bd0:	ldr	r0, [fp, #-4]
   11bd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   11bd8:	bl	11db8 <__assert_fail@plt+0xdc4>
   11bdc:	str	r0, [fp, #-16]
   11be0:	b	11d98 <__assert_fail@plt+0xda4>
   11be4:	ldr	r0, [fp, #-12]
   11be8:	add	r1, r0, #4
   11bec:	str	r1, [fp, #-12]
   11bf0:	ldr	r0, [r0]
   11bf4:	str	r0, [sp, #24]
   11bf8:	ldr	r0, [fp, #-4]
   11bfc:	ldr	r1, [sp, #24]
   11c00:	bl	11dec <__assert_fail@plt+0xdf8>
   11c04:	str	r0, [fp, #-16]
   11c08:	b	11d98 <__assert_fail@plt+0xda4>
   11c0c:	ldr	r0, [fp, #-8]
   11c10:	cmp	r0, #0
   11c14:	str	r0, [sp, #8]
   11c18:	beq	11d40 <__assert_fail@plt+0xd4c>
   11c1c:	b	11c20 <__assert_fail@plt+0xc2c>
   11c20:	ldr	r0, [sp, #8]
   11c24:	cmp	r0, #1
   11c28:	beq	11d2c <__assert_fail@plt+0xd38>
   11c2c:	b	11c30 <__assert_fail@plt+0xc3c>
   11c30:	ldr	r0, [sp, #8]
   11c34:	cmp	r0, #2
   11c38:	beq	11d40 <__assert_fail@plt+0xd4c>
   11c3c:	b	11c40 <__assert_fail@plt+0xc4c>
   11c40:	ldr	r0, [sp, #8]
   11c44:	cmp	r0, #3
   11c48:	beq	11d2c <__assert_fail@plt+0xd38>
   11c4c:	b	11c50 <__assert_fail@plt+0xc5c>
   11c50:	ldr	r0, [sp, #8]
   11c54:	cmp	r0, #4
   11c58:	beq	11d40 <__assert_fail@plt+0xd4c>
   11c5c:	b	11c60 <__assert_fail@plt+0xc6c>
   11c60:	ldr	r0, [sp, #8]
   11c64:	cmp	r0, #8
   11c68:	beq	11d40 <__assert_fail@plt+0xd4c>
   11c6c:	b	11c70 <__assert_fail@plt+0xc7c>
   11c70:	ldr	r0, [sp, #8]
   11c74:	cmp	r0, #9
   11c78:	beq	11d2c <__assert_fail@plt+0xd38>
   11c7c:	b	11c80 <__assert_fail@plt+0xc8c>
   11c80:	ldr	r0, [sp, #8]
   11c84:	cmp	r0, #10
   11c88:	beq	11d40 <__assert_fail@plt+0xd4c>
   11c8c:	b	11c90 <__assert_fail@plt+0xc9c>
   11c90:	ldr	r0, [sp, #8]
   11c94:	cmp	r0, #11
   11c98:	beq	11d2c <__assert_fail@plt+0xd38>
   11c9c:	b	11ca0 <__assert_fail@plt+0xcac>
   11ca0:	ldr	r0, [sp, #8]
   11ca4:	cmp	r0, #1024	; 0x400
   11ca8:	beq	11d40 <__assert_fail@plt+0xd4c>
   11cac:	b	11cb0 <__assert_fail@plt+0xcbc>
   11cb0:	movw	r0, #1025	; 0x401
   11cb4:	ldr	r1, [sp, #8]
   11cb8:	cmp	r1, r0
   11cbc:	beq	11d2c <__assert_fail@plt+0xd38>
   11cc0:	b	11cc4 <__assert_fail@plt+0xcd0>
   11cc4:	movw	r0, #1026	; 0x402
   11cc8:	ldr	r1, [sp, #8]
   11ccc:	cmp	r1, r0
   11cd0:	beq	11d40 <__assert_fail@plt+0xd4c>
   11cd4:	b	11cd8 <__assert_fail@plt+0xce4>
   11cd8:	movw	r0, #1030	; 0x406
   11cdc:	ldr	r1, [sp, #8]
   11ce0:	sub	r0, r1, r0
   11ce4:	cmp	r0, #2
   11ce8:	bcc	11d40 <__assert_fail@plt+0xd4c>
   11cec:	b	11cf0 <__assert_fail@plt+0xcfc>
   11cf0:	movw	r0, #1032	; 0x408
   11cf4:	ldr	r1, [sp, #8]
   11cf8:	cmp	r1, r0
   11cfc:	beq	11d2c <__assert_fail@plt+0xd38>
   11d00:	b	11d04 <__assert_fail@plt+0xd10>
   11d04:	movw	r0, #1033	; 0x409
   11d08:	ldr	r1, [sp, #8]
   11d0c:	cmp	r1, r0
   11d10:	beq	11d40 <__assert_fail@plt+0xd4c>
   11d14:	b	11d18 <__assert_fail@plt+0xd24>
   11d18:	movw	r0, #1034	; 0x40a
   11d1c:	ldr	r1, [sp, #8]
   11d20:	cmp	r1, r0
   11d24:	bne	11d6c <__assert_fail@plt+0xd78>
   11d28:	b	11d2c <__assert_fail@plt+0xd38>
   11d2c:	ldr	r0, [fp, #-4]
   11d30:	ldr	r1, [fp, #-8]
   11d34:	bl	10f70 <fcntl64@plt>
   11d38:	str	r0, [fp, #-16]
   11d3c:	b	11d94 <__assert_fail@plt+0xda0>
   11d40:	ldr	r0, [fp, #-12]
   11d44:	add	r1, r0, #4
   11d48:	str	r1, [fp, #-12]
   11d4c:	ldr	r0, [r0]
   11d50:	str	r0, [sp, #20]
   11d54:	ldr	r0, [fp, #-4]
   11d58:	ldr	r1, [fp, #-8]
   11d5c:	ldr	r2, [sp, #20]
   11d60:	bl	10f70 <fcntl64@plt>
   11d64:	str	r0, [fp, #-16]
   11d68:	b	11d94 <__assert_fail@plt+0xda0>
   11d6c:	ldr	r0, [fp, #-12]
   11d70:	add	r1, r0, #4
   11d74:	str	r1, [fp, #-12]
   11d78:	ldr	r0, [r0]
   11d7c:	str	r0, [sp, #16]
   11d80:	ldr	r0, [fp, #-4]
   11d84:	ldr	r1, [fp, #-8]
   11d88:	ldr	r2, [sp, #16]
   11d8c:	bl	10f70 <fcntl64@plt>
   11d90:	str	r0, [fp, #-16]
   11d94:	b	11d98 <__assert_fail@plt+0xda4>
   11d98:	sub	r0, fp, #12
   11d9c:	ldr	r1, [fp, #-16]
   11da0:	str	r0, [sp, #4]
   11da4:	mov	r0, r1
   11da8:	mov	sp, fp
   11dac:	pop	{fp, lr}
   11db0:	add	sp, sp, #8
   11db4:	bx	lr
   11db8:	push	{fp, lr}
   11dbc:	mov	fp, sp
   11dc0:	sub	sp, sp, #16
   11dc4:	str	r0, [fp, #-4]
   11dc8:	str	r1, [sp, #8]
   11dcc:	ldr	r0, [fp, #-4]
   11dd0:	ldr	r2, [sp, #8]
   11dd4:	movw	r1, #0
   11dd8:	bl	10f70 <fcntl64@plt>
   11ddc:	str	r0, [sp, #4]
   11de0:	ldr	r0, [sp, #4]
   11de4:	mov	sp, fp
   11de8:	pop	{fp, pc}
   11dec:	push	{fp, lr}
   11df0:	mov	fp, sp
   11df4:	sub	sp, sp, #32
   11df8:	str	r0, [fp, #-4]
   11dfc:	str	r1, [fp, #-8]
   11e00:	movw	r0, #45396	; 0xb154
   11e04:	movt	r0, #2
   11e08:	ldr	r0, [r0]
   11e0c:	movw	r1, #0
   11e10:	cmp	r1, r0
   11e14:	bgt	11e94 <__assert_fail@plt+0xea0>
   11e18:	ldr	r0, [fp, #-4]
   11e1c:	ldr	r2, [fp, #-8]
   11e20:	movw	r1, #1030	; 0x406
   11e24:	bl	10f70 <fcntl64@plt>
   11e28:	str	r0, [fp, #-12]
   11e2c:	ldr	r0, [fp, #-12]
   11e30:	movw	r1, #0
   11e34:	cmp	r1, r0
   11e38:	ble	11e4c <__assert_fail@plt+0xe58>
   11e3c:	bl	10f28 <__errno_location@plt>
   11e40:	ldr	r0, [r0]
   11e44:	cmp	r0, #22
   11e48:	beq	11e60 <__assert_fail@plt+0xe6c>
   11e4c:	movw	r0, #45396	; 0xb154
   11e50:	movt	r0, #2
   11e54:	movw	r1, #1
   11e58:	str	r1, [r0]
   11e5c:	b	11e90 <__assert_fail@plt+0xe9c>
   11e60:	ldr	r0, [fp, #-4]
   11e64:	ldr	r1, [fp, #-8]
   11e68:	bl	11db8 <__assert_fail@plt+0xdc4>
   11e6c:	str	r0, [fp, #-12]
   11e70:	ldr	r0, [fp, #-12]
   11e74:	cmp	r0, #0
   11e78:	blt	11e8c <__assert_fail@plt+0xe98>
   11e7c:	movw	r0, #45396	; 0xb154
   11e80:	movt	r0, #2
   11e84:	mvn	r1, #0
   11e88:	str	r1, [r0]
   11e8c:	b	11e90 <__assert_fail@plt+0xe9c>
   11e90:	b	11ea4 <__assert_fail@plt+0xeb0>
   11e94:	ldr	r0, [fp, #-4]
   11e98:	ldr	r1, [fp, #-8]
   11e9c:	bl	11db8 <__assert_fail@plt+0xdc4>
   11ea0:	str	r0, [fp, #-12]
   11ea4:	ldr	r0, [fp, #-12]
   11ea8:	movw	r1, #0
   11eac:	cmp	r1, r0
   11eb0:	bgt	11f38 <__assert_fail@plt+0xf44>
   11eb4:	movw	r0, #45396	; 0xb154
   11eb8:	movt	r0, #2
   11ebc:	ldr	r0, [r0]
   11ec0:	cmn	r0, #1
   11ec4:	bne	11f38 <__assert_fail@plt+0xf44>
   11ec8:	ldr	r0, [fp, #-12]
   11ecc:	movw	r1, #1
   11ed0:	bl	10f70 <fcntl64@plt>
   11ed4:	str	r0, [sp, #16]
   11ed8:	ldr	r0, [sp, #16]
   11edc:	cmp	r0, #0
   11ee0:	blt	11f00 <__assert_fail@plt+0xf0c>
   11ee4:	ldr	r0, [fp, #-12]
   11ee8:	ldr	r1, [sp, #16]
   11eec:	orr	r2, r1, #1
   11ef0:	movw	r1, #2
   11ef4:	bl	10f70 <fcntl64@plt>
   11ef8:	cmn	r0, #1
   11efc:	bne	11f34 <__assert_fail@plt+0xf40>
   11f00:	bl	10f28 <__errno_location@plt>
   11f04:	ldr	r0, [r0]
   11f08:	str	r0, [sp, #12]
   11f0c:	ldr	r0, [fp, #-12]
   11f10:	bl	10fe8 <close@plt>
   11f14:	ldr	r1, [sp, #12]
   11f18:	str	r0, [sp, #8]
   11f1c:	str	r1, [sp, #4]
   11f20:	bl	10f28 <__errno_location@plt>
   11f24:	ldr	r1, [sp, #4]
   11f28:	str	r1, [r0]
   11f2c:	mvn	r0, #0
   11f30:	str	r0, [fp, #-12]
   11f34:	b	11f38 <__assert_fail@plt+0xf44>
   11f38:	ldr	r0, [fp, #-12]
   11f3c:	mov	sp, fp
   11f40:	pop	{fp, pc}
   11f44:	push	{fp, lr}
   11f48:	mov	fp, sp
   11f4c:	sub	sp, sp, #24
   11f50:	str	r0, [fp, #-4]
   11f54:	ldr	r0, [fp, #-4]
   11f58:	movw	r1, #0
   11f5c:	cmp	r0, r1
   11f60:	bne	11f84 <__assert_fail@plt+0xf90>
   11f64:	movw	r0, #45376	; 0xb140
   11f68:	movt	r0, #2
   11f6c:	ldr	r1, [r0]
   11f70:	movw	r0, #43378	; 0xa972
   11f74:	movt	r0, #1
   11f78:	bl	10fb8 <fputs@plt>
   11f7c:	str	r0, [sp, #8]
   11f80:	bl	10fdc <abort@plt>
   11f84:	ldr	r0, [fp, #-4]
   11f88:	movw	r1, #47	; 0x2f
   11f8c:	bl	10f88 <strrchr@plt>
   11f90:	str	r0, [fp, #-8]
   11f94:	ldr	r0, [fp, #-8]
   11f98:	movw	r1, #0
   11f9c:	cmp	r0, r1
   11fa0:	beq	11fb4 <__assert_fail@plt+0xfc0>
   11fa4:	ldr	r0, [fp, #-8]
   11fa8:	add	r0, r0, #1
   11fac:	str	r0, [sp, #4]
   11fb0:	b	11fbc <__assert_fail@plt+0xfc8>
   11fb4:	ldr	r0, [fp, #-4]
   11fb8:	str	r0, [sp, #4]
   11fbc:	ldr	r0, [sp, #4]
   11fc0:	str	r0, [sp, #12]
   11fc4:	ldr	r0, [sp, #12]
   11fc8:	ldr	r1, [fp, #-4]
   11fcc:	sub	r0, r0, r1
   11fd0:	cmp	r0, #7
   11fd4:	blt	12040 <__assert_fail@plt+0x104c>
   11fd8:	ldr	r0, [sp, #12]
   11fdc:	mvn	r1, #6
   11fe0:	add	r0, r0, r1
   11fe4:	movw	r1, #43434	; 0xa9aa
   11fe8:	movt	r1, #1
   11fec:	movw	r2, #7
   11ff0:	bl	10fc4 <strncmp@plt>
   11ff4:	cmp	r0, #0
   11ff8:	bne	12040 <__assert_fail@plt+0x104c>
   11ffc:	ldr	r0, [sp, #12]
   12000:	str	r0, [fp, #-4]
   12004:	ldr	r0, [sp, #12]
   12008:	movw	r1, #43442	; 0xa9b2
   1200c:	movt	r1, #1
   12010:	movw	r2, #3
   12014:	bl	10fc4 <strncmp@plt>
   12018:	cmp	r0, #0
   1201c:	bne	1203c <__assert_fail@plt+0x1048>
   12020:	ldr	r0, [sp, #12]
   12024:	add	r0, r0, #3
   12028:	str	r0, [fp, #-4]
   1202c:	ldr	r0, [fp, #-4]
   12030:	movw	r1, #45360	; 0xb130
   12034:	movt	r1, #2
   12038:	str	r0, [r1]
   1203c:	b	12040 <__assert_fail@plt+0x104c>
   12040:	ldr	r0, [fp, #-4]
   12044:	movw	r1, #45400	; 0xb158
   12048:	movt	r1, #2
   1204c:	str	r0, [r1]
   12050:	ldr	r0, [fp, #-4]
   12054:	movw	r1, #45364	; 0xb134
   12058:	movt	r1, #2
   1205c:	str	r0, [r1]
   12060:	mov	sp, fp
   12064:	pop	{fp, pc}
   12068:	push	{fp, lr}
   1206c:	mov	fp, sp
   12070:	sub	sp, sp, #24
   12074:	str	r0, [fp, #-4]
   12078:	bl	10f28 <__errno_location@plt>
   1207c:	ldr	r0, [r0]
   12080:	str	r0, [fp, #-8]
   12084:	ldr	r0, [fp, #-4]
   12088:	movw	r1, #0
   1208c:	cmp	r0, r1
   12090:	beq	120a0 <__assert_fail@plt+0x10ac>
   12094:	ldr	r0, [fp, #-4]
   12098:	str	r0, [sp, #8]
   1209c:	b	120b0 <__assert_fail@plt+0x10bc>
   120a0:	movw	r0, #45404	; 0xb15c
   120a4:	movt	r0, #2
   120a8:	str	r0, [sp, #8]
   120ac:	b	120b0 <__assert_fail@plt+0x10bc>
   120b0:	ldr	r0, [sp, #8]
   120b4:	movw	r1, #48	; 0x30
   120b8:	bl	17bdc <__assert_fail@plt+0x6be8>
   120bc:	str	r0, [sp, #12]
   120c0:	ldr	r0, [fp, #-8]
   120c4:	str	r0, [sp, #4]
   120c8:	bl	10f28 <__errno_location@plt>
   120cc:	ldr	r1, [sp, #4]
   120d0:	str	r1, [r0]
   120d4:	ldr	r0, [sp, #12]
   120d8:	mov	sp, fp
   120dc:	pop	{fp, pc}
   120e0:	sub	sp, sp, #8
   120e4:	str	r0, [sp, #4]
   120e8:	ldr	r0, [sp, #4]
   120ec:	movw	r1, #0
   120f0:	cmp	r0, r1
   120f4:	beq	12104 <__assert_fail@plt+0x1110>
   120f8:	ldr	r0, [sp, #4]
   120fc:	str	r0, [sp]
   12100:	b	12114 <__assert_fail@plt+0x1120>
   12104:	movw	r0, #45404	; 0xb15c
   12108:	movt	r0, #2
   1210c:	str	r0, [sp]
   12110:	b	12114 <__assert_fail@plt+0x1120>
   12114:	ldr	r0, [sp]
   12118:	ldr	r0, [r0]
   1211c:	add	sp, sp, #8
   12120:	bx	lr
   12124:	sub	sp, sp, #16
   12128:	str	r0, [sp, #12]
   1212c:	str	r1, [sp, #8]
   12130:	ldr	r0, [sp, #8]
   12134:	ldr	r1, [sp, #12]
   12138:	movw	r2, #0
   1213c:	cmp	r1, r2
   12140:	str	r0, [sp, #4]
   12144:	beq	12154 <__assert_fail@plt+0x1160>
   12148:	ldr	r0, [sp, #12]
   1214c:	str	r0, [sp]
   12150:	b	12164 <__assert_fail@plt+0x1170>
   12154:	movw	r0, #45404	; 0xb15c
   12158:	movt	r0, #2
   1215c:	str	r0, [sp]
   12160:	b	12164 <__assert_fail@plt+0x1170>
   12164:	ldr	r0, [sp]
   12168:	ldr	r1, [sp, #4]
   1216c:	str	r1, [r0]
   12170:	add	sp, sp, #16
   12174:	bx	lr
   12178:	sub	sp, sp, #32
   1217c:	str	r0, [sp, #28]
   12180:	strb	r1, [sp, #27]
   12184:	str	r2, [sp, #20]
   12188:	ldrb	r0, [sp, #27]
   1218c:	strb	r0, [sp, #19]
   12190:	ldr	r0, [sp, #28]
   12194:	movw	r1, #0
   12198:	cmp	r0, r1
   1219c:	beq	121ac <__assert_fail@plt+0x11b8>
   121a0:	ldr	r0, [sp, #28]
   121a4:	str	r0, [sp]
   121a8:	b	121bc <__assert_fail@plt+0x11c8>
   121ac:	movw	r0, #45404	; 0xb15c
   121b0:	movt	r0, #2
   121b4:	str	r0, [sp]
   121b8:	b	121bc <__assert_fail@plt+0x11c8>
   121bc:	ldr	r0, [sp]
   121c0:	add	r0, r0, #8
   121c4:	ldrb	r1, [sp, #19]
   121c8:	lsr	r1, r1, #5
   121cc:	add	r0, r0, r1, lsl #2
   121d0:	str	r0, [sp, #12]
   121d4:	ldrb	r0, [sp, #19]
   121d8:	and	r0, r0, #31
   121dc:	str	r0, [sp, #8]
   121e0:	ldr	r0, [sp, #12]
   121e4:	ldr	r0, [r0]
   121e8:	ldr	r1, [sp, #8]
   121ec:	lsr	r0, r0, r1
   121f0:	and	r0, r0, #1
   121f4:	str	r0, [sp, #4]
   121f8:	ldr	r0, [sp, #20]
   121fc:	and	r0, r0, #1
   12200:	ldr	r1, [sp, #4]
   12204:	eor	r0, r0, r1
   12208:	ldr	r1, [sp, #8]
   1220c:	lsl	r0, r0, r1
   12210:	ldr	r1, [sp, #12]
   12214:	ldr	r2, [r1]
   12218:	eor	r0, r2, r0
   1221c:	str	r0, [r1]
   12220:	ldr	r0, [sp, #4]
   12224:	add	sp, sp, #32
   12228:	bx	lr
   1222c:	sub	sp, sp, #12
   12230:	str	r0, [sp, #8]
   12234:	str	r1, [sp, #4]
   12238:	ldr	r0, [sp, #8]
   1223c:	movw	r1, #0
   12240:	cmp	r0, r1
   12244:	bne	12254 <__assert_fail@plt+0x1260>
   12248:	movw	r0, #45404	; 0xb15c
   1224c:	movt	r0, #2
   12250:	str	r0, [sp, #8]
   12254:	ldr	r0, [sp, #8]
   12258:	ldr	r0, [r0, #4]
   1225c:	str	r0, [sp]
   12260:	ldr	r0, [sp, #4]
   12264:	ldr	r1, [sp, #8]
   12268:	str	r0, [r1, #4]
   1226c:	ldr	r0, [sp]
   12270:	add	sp, sp, #12
   12274:	bx	lr
   12278:	push	{fp, lr}
   1227c:	mov	fp, sp
   12280:	sub	sp, sp, #16
   12284:	str	r0, [fp, #-4]
   12288:	str	r1, [sp, #8]
   1228c:	str	r2, [sp, #4]
   12290:	ldr	r0, [fp, #-4]
   12294:	movw	r1, #0
   12298:	cmp	r0, r1
   1229c:	bne	122ac <__assert_fail@plt+0x12b8>
   122a0:	movw	r0, #45404	; 0xb15c
   122a4:	movt	r0, #2
   122a8:	str	r0, [fp, #-4]
   122ac:	ldr	r0, [fp, #-4]
   122b0:	movw	r1, #10
   122b4:	str	r1, [r0]
   122b8:	ldr	r0, [sp, #8]
   122bc:	movw	r1, #0
   122c0:	cmp	r0, r1
   122c4:	beq	122d8 <__assert_fail@plt+0x12e4>
   122c8:	ldr	r0, [sp, #4]
   122cc:	movw	r1, #0
   122d0:	cmp	r0, r1
   122d4:	bne	122dc <__assert_fail@plt+0x12e8>
   122d8:	bl	10fdc <abort@plt>
   122dc:	ldr	r0, [sp, #8]
   122e0:	ldr	r1, [fp, #-4]
   122e4:	str	r0, [r1, #40]	; 0x28
   122e8:	ldr	r0, [sp, #4]
   122ec:	ldr	r1, [fp, #-4]
   122f0:	str	r0, [r1, #44]	; 0x2c
   122f4:	mov	sp, fp
   122f8:	pop	{fp, pc}
   122fc:	push	{r4, r5, r6, sl, fp, lr}
   12300:	add	fp, sp, #16
   12304:	sub	sp, sp, #56	; 0x38
   12308:	ldr	ip, [fp, #8]
   1230c:	str	r0, [fp, #-20]	; 0xffffffec
   12310:	str	r1, [fp, #-24]	; 0xffffffe8
   12314:	str	r2, [fp, #-28]	; 0xffffffe4
   12318:	str	r3, [fp, #-32]	; 0xffffffe0
   1231c:	ldr	r0, [fp, #8]
   12320:	movw	r1, #0
   12324:	cmp	r0, r1
   12328:	beq	12338 <__assert_fail@plt+0x1344>
   1232c:	ldr	r0, [fp, #8]
   12330:	str	r0, [sp, #24]
   12334:	b	12348 <__assert_fail@plt+0x1354>
   12338:	movw	r0, #45404	; 0xb15c
   1233c:	movt	r0, #2
   12340:	str	r0, [sp, #24]
   12344:	b	12348 <__assert_fail@plt+0x1354>
   12348:	ldr	r0, [sp, #24]
   1234c:	str	r0, [sp, #36]	; 0x24
   12350:	bl	10f28 <__errno_location@plt>
   12354:	ldr	r0, [r0]
   12358:	str	r0, [sp, #32]
   1235c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12364:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12368:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1236c:	ldr	ip, [sp, #36]	; 0x24
   12370:	ldr	ip, [ip]
   12374:	ldr	lr, [sp, #36]	; 0x24
   12378:	ldr	lr, [lr, #4]
   1237c:	ldr	r4, [sp, #36]	; 0x24
   12380:	add	r4, r4, #8
   12384:	ldr	r5, [sp, #36]	; 0x24
   12388:	ldr	r5, [r5, #40]	; 0x28
   1238c:	ldr	r6, [sp, #36]	; 0x24
   12390:	ldr	r6, [r6, #44]	; 0x2c
   12394:	str	ip, [sp]
   12398:	str	lr, [sp, #4]
   1239c:	str	r4, [sp, #8]
   123a0:	str	r5, [sp, #12]
   123a4:	str	r6, [sp, #16]
   123a8:	bl	123d0 <__assert_fail@plt+0x13dc>
   123ac:	str	r0, [sp, #28]
   123b0:	ldr	r0, [sp, #32]
   123b4:	str	r0, [sp, #20]
   123b8:	bl	10f28 <__errno_location@plt>
   123bc:	ldr	r1, [sp, #20]
   123c0:	str	r1, [r0]
   123c4:	ldr	r0, [sp, #28]
   123c8:	sub	sp, fp, #16
   123cc:	pop	{r4, r5, r6, sl, fp, pc}
   123d0:	push	{r4, r5, r6, sl, fp, lr}
   123d4:	add	fp, sp, #16
   123d8:	sub	sp, sp, #160	; 0xa0
   123dc:	ldr	ip, [fp, #24]
   123e0:	ldr	lr, [fp, #20]
   123e4:	ldr	r4, [fp, #16]
   123e8:	ldr	r5, [fp, #12]
   123ec:	ldr	r6, [fp, #8]
   123f0:	str	r0, [fp, #-24]	; 0xffffffe8
   123f4:	str	r1, [fp, #-28]	; 0xffffffe4
   123f8:	str	r2, [fp, #-32]	; 0xffffffe0
   123fc:	str	r3, [fp, #-36]	; 0xffffffdc
   12400:	movw	r0, #0
   12404:	str	r0, [fp, #-44]	; 0xffffffd4
   12408:	str	r0, [fp, #-48]	; 0xffffffd0
   1240c:	str	r0, [fp, #-52]	; 0xffffffcc
   12410:	str	r0, [fp, #-56]	; 0xffffffc8
   12414:	movw	r0, #0
   12418:	strb	r0, [fp, #-57]	; 0xffffffc7
   1241c:	str	ip, [sp, #72]	; 0x48
   12420:	str	lr, [sp, #68]	; 0x44
   12424:	str	r4, [sp, #64]	; 0x40
   12428:	str	r5, [sp, #60]	; 0x3c
   1242c:	str	r6, [sp, #56]	; 0x38
   12430:	bl	10e68 <__ctype_get_mb_cur_max@plt>
   12434:	cmp	r0, #1
   12438:	movw	r0, #0
   1243c:	moveq	r0, #1
   12440:	and	r0, r0, #1
   12444:	strb	r0, [fp, #-58]	; 0xffffffc6
   12448:	ldr	r0, [fp, #12]
   1244c:	and	r0, r0, #2
   12450:	cmp	r0, #0
   12454:	movw	r0, #0
   12458:	movne	r0, #1
   1245c:	and	r0, r0, #1
   12460:	strb	r0, [fp, #-59]	; 0xffffffc5
   12464:	movw	r0, #0
   12468:	strb	r0, [fp, #-60]	; 0xffffffc4
   1246c:	strb	r0, [fp, #-61]	; 0xffffffc3
   12470:	movw	r0, #1
   12474:	strb	r0, [fp, #-62]	; 0xffffffc2
   12478:	ldr	r0, [fp, #8]
   1247c:	cmp	r0, #10
   12480:	str	r0, [sp, #52]	; 0x34
   12484:	bhi	126ac <__assert_fail@plt+0x16b8>
   12488:	add	r0, pc, #8
   1248c:	ldr	r1, [sp, #52]	; 0x34
   12490:	ldr	r0, [r0, r1, lsl #2]
   12494:	mov	pc, r0
   12498:	andeq	r2, r1, r0, lsr #13
   1249c:	andeq	r2, r1, ip, lsl r6
   124a0:	andeq	r2, r1, ip, lsr r6
   124a4:	andeq	r2, r1, r4, lsl r6
   124a8:	andeq	r2, r1, r4, lsr #12
   124ac:	ldrdeq	r2, [r1], -r4
   124b0:	andeq	r2, r1, r4, asr #9
   124b4:	andeq	r2, r1, r8, lsr r5
   124b8:	andeq	r2, r1, ip, asr #10
   124bc:	andeq	r2, r1, ip, asr #10
   124c0:	andeq	r2, r1, ip, asr #10
   124c4:	movw	r0, #5
   124c8:	str	r0, [fp, #8]
   124cc:	movw	r0, #1
   124d0:	strb	r0, [fp, #-59]	; 0xffffffc5
   124d4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   124d8:	tst	r0, #1
   124dc:	bne	12518 <__assert_fail@plt+0x1524>
   124e0:	b	124e4 <__assert_fail@plt+0x14f0>
   124e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   124e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   124ec:	cmp	r0, r1
   124f0:	bcs	12508 <__assert_fail@plt+0x1514>
   124f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   124f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   124fc:	add	r0, r0, r1
   12500:	movw	r1, #34	; 0x22
   12504:	strb	r1, [r0]
   12508:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1250c:	add	r0, r0, #1
   12510:	str	r0, [fp, #-44]	; 0xffffffd4
   12514:	b	12518 <__assert_fail@plt+0x1524>
   12518:	movw	r0, #1
   1251c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12520:	movw	r0, #43111	; 0xa867
   12524:	movt	r0, #1
   12528:	str	r0, [fp, #-52]	; 0xffffffcc
   1252c:	movw	r0, #1
   12530:	str	r0, [fp, #-56]	; 0xffffffc8
   12534:	b	126b0 <__assert_fail@plt+0x16bc>
   12538:	movw	r0, #1
   1253c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12540:	movw	r0, #0
   12544:	strb	r0, [fp, #-59]	; 0xffffffc5
   12548:	b	126b0 <__assert_fail@plt+0x16bc>
   1254c:	ldr	r0, [fp, #8]
   12550:	cmp	r0, #10
   12554:	beq	12580 <__assert_fail@plt+0x158c>
   12558:	ldr	r1, [fp, #8]
   1255c:	movw	r0, #43522	; 0xaa02
   12560:	movt	r0, #1
   12564:	bl	145c4 <__assert_fail@plt+0x35d0>
   12568:	str	r0, [fp, #20]
   1256c:	ldr	r1, [fp, #8]
   12570:	movw	r0, #43524	; 0xaa04
   12574:	movt	r0, #1
   12578:	bl	145c4 <__assert_fail@plt+0x35d0>
   1257c:	str	r0, [fp, #24]
   12580:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12584:	tst	r0, #1
   12588:	bne	125f4 <__assert_fail@plt+0x1600>
   1258c:	ldr	r0, [fp, #20]
   12590:	str	r0, [fp, #-52]	; 0xffffffcc
   12594:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12598:	ldrsb	r0, [r0]
   1259c:	cmp	r0, #0
   125a0:	beq	125f0 <__assert_fail@plt+0x15fc>
   125a4:	b	125a8 <__assert_fail@plt+0x15b4>
   125a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   125ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   125b0:	cmp	r0, r1
   125b4:	bcs	125d0 <__assert_fail@plt+0x15dc>
   125b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   125bc:	ldrb	r0, [r0]
   125c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   125c4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   125c8:	add	r1, r1, r2
   125cc:	strb	r0, [r1]
   125d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   125d4:	add	r0, r0, #1
   125d8:	str	r0, [fp, #-44]	; 0xffffffd4
   125dc:	b	125e0 <__assert_fail@plt+0x15ec>
   125e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   125e4:	add	r0, r0, #1
   125e8:	str	r0, [fp, #-52]	; 0xffffffcc
   125ec:	b	12594 <__assert_fail@plt+0x15a0>
   125f0:	b	125f4 <__assert_fail@plt+0x1600>
   125f4:	movw	r0, #1
   125f8:	strb	r0, [fp, #-57]	; 0xffffffc7
   125fc:	ldr	r0, [fp, #24]
   12600:	str	r0, [fp, #-52]	; 0xffffffcc
   12604:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12608:	bl	10f10 <strlen@plt>
   1260c:	str	r0, [fp, #-56]	; 0xffffffc8
   12610:	b	126b0 <__assert_fail@plt+0x16bc>
   12614:	movw	r0, #1
   12618:	strb	r0, [fp, #-57]	; 0xffffffc7
   1261c:	movw	r0, #1
   12620:	strb	r0, [fp, #-59]	; 0xffffffc5
   12624:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12628:	tst	r0, #1
   1262c:	bne	12638 <__assert_fail@plt+0x1644>
   12630:	movw	r0, #1
   12634:	strb	r0, [fp, #-57]	; 0xffffffc7
   12638:	b	1263c <__assert_fail@plt+0x1648>
   1263c:	movw	r0, #2
   12640:	str	r0, [fp, #8]
   12644:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12648:	tst	r0, #1
   1264c:	bne	12688 <__assert_fail@plt+0x1694>
   12650:	b	12654 <__assert_fail@plt+0x1660>
   12654:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12658:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1265c:	cmp	r0, r1
   12660:	bcs	12678 <__assert_fail@plt+0x1684>
   12664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12668:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1266c:	add	r0, r0, r1
   12670:	movw	r1, #39	; 0x27
   12674:	strb	r1, [r0]
   12678:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1267c:	add	r0, r0, #1
   12680:	str	r0, [fp, #-44]	; 0xffffffd4
   12684:	b	12688 <__assert_fail@plt+0x1694>
   12688:	movw	r0, #43524	; 0xaa04
   1268c:	movt	r0, #1
   12690:	str	r0, [fp, #-52]	; 0xffffffcc
   12694:	movw	r0, #1
   12698:	str	r0, [fp, #-56]	; 0xffffffc8
   1269c:	b	126b0 <__assert_fail@plt+0x16bc>
   126a0:	movw	r0, #0
   126a4:	strb	r0, [fp, #-59]	; 0xffffffc5
   126a8:	b	126b0 <__assert_fail@plt+0x16bc>
   126ac:	bl	10fdc <abort@plt>
   126b0:	movw	r0, #0
   126b4:	str	r0, [fp, #-40]	; 0xffffffd8
   126b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   126bc:	cmn	r0, #1
   126c0:	bne	126ec <__assert_fail@plt+0x16f8>
   126c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   126c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   126cc:	add	r0, r0, r1
   126d0:	ldrb	r0, [r0]
   126d4:	cmp	r0, #0
   126d8:	movw	r0, #0
   126dc:	moveq	r0, #1
   126e0:	and	r0, r0, #1
   126e4:	str	r0, [sp, #48]	; 0x30
   126e8:	b	12708 <__assert_fail@plt+0x1714>
   126ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   126f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   126f4:	cmp	r0, r1
   126f8:	movw	r0, #0
   126fc:	moveq	r0, #1
   12700:	and	r0, r0, #1
   12704:	str	r0, [sp, #48]	; 0x30
   12708:	ldr	r0, [sp, #48]	; 0x30
   1270c:	cmp	r0, #0
   12710:	movw	r0, #0
   12714:	movne	r0, #1
   12718:	mvn	r1, #0
   1271c:	eor	r0, r0, r1
   12720:	tst	r0, #1
   12724:	beq	13910 <__assert_fail@plt+0x291c>
   12728:	movw	r0, #0
   1272c:	strb	r0, [fp, #-65]	; 0xffffffbf
   12730:	strb	r0, [fp, #-66]	; 0xffffffbe
   12734:	strb	r0, [fp, #-67]	; 0xffffffbd
   12738:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1273c:	tst	r0, #1
   12740:	beq	127ec <__assert_fail@plt+0x17f8>
   12744:	ldr	r0, [fp, #8]
   12748:	cmp	r0, #2
   1274c:	beq	127ec <__assert_fail@plt+0x17f8>
   12750:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12754:	cmp	r0, #0
   12758:	beq	127ec <__assert_fail@plt+0x17f8>
   1275c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12760:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12764:	add	r0, r0, r1
   12768:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1276c:	cmn	r1, #1
   12770:	str	r0, [sp, #44]	; 0x2c
   12774:	bne	1279c <__assert_fail@plt+0x17a8>
   12778:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1277c:	movw	r1, #1
   12780:	cmp	r1, r0
   12784:	bcs	1279c <__assert_fail@plt+0x17a8>
   12788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1278c:	bl	10f10 <strlen@plt>
   12790:	str	r0, [fp, #-36]	; 0xffffffdc
   12794:	str	r0, [sp, #40]	; 0x28
   12798:	b	127a4 <__assert_fail@plt+0x17b0>
   1279c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   127a0:	str	r0, [sp, #40]	; 0x28
   127a4:	ldr	r0, [sp, #40]	; 0x28
   127a8:	ldr	r1, [sp, #44]	; 0x2c
   127ac:	cmp	r1, r0
   127b0:	bhi	127ec <__assert_fail@plt+0x17f8>
   127b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127bc:	add	r0, r0, r1
   127c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   127c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   127c8:	bl	10e20 <memcmp@plt>
   127cc:	cmp	r0, #0
   127d0:	bne	127ec <__assert_fail@plt+0x17f8>
   127d4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   127d8:	tst	r0, #1
   127dc:	beq	127e4 <__assert_fail@plt+0x17f0>
   127e0:	b	13a90 <__assert_fail@plt+0x2a9c>
   127e4:	movw	r0, #1
   127e8:	strb	r0, [fp, #-65]	; 0xffffffbf
   127ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127f4:	ldrb	r0, [r0, r1]
   127f8:	strb	r0, [fp, #-63]	; 0xffffffc1
   127fc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12800:	mov	r1, r0
   12804:	cmp	r0, #126	; 0x7e
   12808:	str	r1, [sp, #36]	; 0x24
   1280c:	bhi	1307c <__assert_fail@plt+0x2088>
   12810:	add	r0, pc, #8
   12814:	ldr	r1, [sp, #36]	; 0x24
   12818:	ldr	r0, [r0, r1, lsl #2]
   1281c:	mov	pc, r0
   12820:	andeq	r2, r1, ip, lsl sl
   12824:	andeq	r3, r1, ip, ror r0
   12828:	andeq	r3, r1, ip, ror r0
   1282c:	andeq	r3, r1, ip, ror r0
   12830:	andeq	r3, r1, ip, ror r0
   12834:	andeq	r3, r1, ip, ror r0
   12838:	andeq	r3, r1, ip, ror r0
   1283c:	andeq	r2, r1, r4, lsr #28
   12840:	andeq	r2, r1, r0, lsr lr
   12844:	andeq	r2, r1, r0, ror #28
   12848:	andeq	r2, r1, r8, asr #28
   1284c:	andeq	r2, r1, ip, ror #28
   12850:	andeq	r2, r1, ip, lsr lr
   12854:	andeq	r2, r1, r4, asr lr
   12858:	andeq	r3, r1, ip, ror r0
   1285c:	andeq	r3, r1, ip, ror r0
   12860:	andeq	r3, r1, ip, ror r0
   12864:	andeq	r3, r1, ip, ror r0
   12868:	andeq	r3, r1, ip, ror r0
   1286c:	andeq	r3, r1, ip, ror r0
   12870:	andeq	r3, r1, ip, ror r0
   12874:	andeq	r3, r1, ip, ror r0
   12878:	andeq	r3, r1, ip, ror r0
   1287c:	andeq	r3, r1, ip, ror r0
   12880:	andeq	r3, r1, ip, ror r0
   12884:	andeq	r3, r1, ip, ror r0
   12888:	andeq	r3, r1, ip, ror r0
   1288c:	andeq	r3, r1, ip, ror r0
   12890:	andeq	r3, r1, ip, ror r0
   12894:	andeq	r3, r1, ip, ror r0
   12898:	andeq	r3, r1, ip, ror r0
   1289c:	andeq	r3, r1, ip, ror r0
   128a0:	andeq	r2, r1, r0, asr pc
   128a4:	andeq	r2, r1, r8, asr pc
   128a8:	andeq	r2, r1, r8, asr pc
   128ac:	andeq	r2, r1, ip, lsr pc
   128b0:	andeq	r2, r1, r8, asr pc
   128b4:	andeq	r3, r1, r0, ror r0
   128b8:	andeq	r2, r1, r8, asr pc
   128bc:	andeq	r2, r1, r8, ror pc
   128c0:	andeq	r2, r1, r8, asr pc
   128c4:	andeq	r2, r1, r8, asr pc
   128c8:	andeq	r2, r1, r8, asr pc
   128cc:	andeq	r3, r1, r0, ror r0
   128d0:	andeq	r3, r1, r0, ror r0
   128d4:	andeq	r3, r1, r0, ror r0
   128d8:	andeq	r3, r1, r0, ror r0
   128dc:	andeq	r3, r1, r0, ror r0
   128e0:	andeq	r3, r1, r0, ror r0
   128e4:	andeq	r3, r1, r0, ror r0
   128e8:	andeq	r3, r1, r0, ror r0
   128ec:	andeq	r3, r1, r0, ror r0
   128f0:	andeq	r3, r1, r0, ror r0
   128f4:	andeq	r3, r1, r0, ror r0
   128f8:	andeq	r3, r1, r0, ror r0
   128fc:	andeq	r3, r1, r0, ror r0
   12900:	andeq	r3, r1, r0, ror r0
   12904:	andeq	r3, r1, r0, ror r0
   12908:	andeq	r3, r1, r0, ror r0
   1290c:	andeq	r2, r1, r8, asr pc
   12910:	andeq	r2, r1, r8, asr pc
   12914:	andeq	r2, r1, r8, asr pc
   12918:	andeq	r2, r1, r8, asr pc
   1291c:	andeq	r2, r1, r8, lsr #24
   12920:	andeq	r3, r1, ip, ror r0
   12924:	andeq	r3, r1, r0, ror r0
   12928:	andeq	r3, r1, r0, ror r0
   1292c:	andeq	r3, r1, r0, ror r0
   12930:	andeq	r3, r1, r0, ror r0
   12934:	andeq	r3, r1, r0, ror r0
   12938:	andeq	r3, r1, r0, ror r0
   1293c:	andeq	r3, r1, r0, ror r0
   12940:	andeq	r3, r1, r0, ror r0
   12944:	andeq	r3, r1, r0, ror r0
   12948:	andeq	r3, r1, r0, ror r0
   1294c:	andeq	r3, r1, r0, ror r0
   12950:	andeq	r3, r1, r0, ror r0
   12954:	andeq	r3, r1, r0, ror r0
   12958:	andeq	r3, r1, r0, ror r0
   1295c:	andeq	r3, r1, r0, ror r0
   12960:	andeq	r3, r1, r0, ror r0
   12964:	andeq	r3, r1, r0, ror r0
   12968:	andeq	r3, r1, r0, ror r0
   1296c:	andeq	r3, r1, r0, ror r0
   12970:	andeq	r3, r1, r0, ror r0
   12974:	andeq	r3, r1, r0, ror r0
   12978:	andeq	r3, r1, r0, ror r0
   1297c:	andeq	r3, r1, r0, ror r0
   12980:	andeq	r3, r1, r0, ror r0
   12984:	andeq	r3, r1, r0, ror r0
   12988:	andeq	r3, r1, r0, ror r0
   1298c:	andeq	r2, r1, r8, asr pc
   12990:	andeq	r2, r1, r8, ror lr
   12994:	andeq	r3, r1, r0, ror r0
   12998:	andeq	r2, r1, r8, asr pc
   1299c:	andeq	r3, r1, r0, ror r0
   129a0:	andeq	r2, r1, r8, asr pc
   129a4:	andeq	r3, r1, r0, ror r0
   129a8:	andeq	r3, r1, r0, ror r0
   129ac:	andeq	r3, r1, r0, ror r0
   129b0:	andeq	r3, r1, r0, ror r0
   129b4:	andeq	r3, r1, r0, ror r0
   129b8:	andeq	r3, r1, r0, ror r0
   129bc:	andeq	r3, r1, r0, ror r0
   129c0:	andeq	r3, r1, r0, ror r0
   129c4:	andeq	r3, r1, r0, ror r0
   129c8:	andeq	r3, r1, r0, ror r0
   129cc:	andeq	r3, r1, r0, ror r0
   129d0:	andeq	r3, r1, r0, ror r0
   129d4:	andeq	r3, r1, r0, ror r0
   129d8:	andeq	r3, r1, r0, ror r0
   129dc:	andeq	r3, r1, r0, ror r0
   129e0:	andeq	r3, r1, r0, ror r0
   129e4:	andeq	r3, r1, r0, ror r0
   129e8:	andeq	r3, r1, r0, ror r0
   129ec:	andeq	r3, r1, r0, ror r0
   129f0:	andeq	r3, r1, r0, ror r0
   129f4:	andeq	r3, r1, r0, ror r0
   129f8:	andeq	r3, r1, r0, ror r0
   129fc:	andeq	r3, r1, r0, ror r0
   12a00:	andeq	r3, r1, r0, ror r0
   12a04:	andeq	r3, r1, r0, ror r0
   12a08:	andeq	r3, r1, r0, ror r0
   12a0c:	andeq	r2, r1, r8, lsl #30
   12a10:	andeq	r2, r1, r8, asr pc
   12a14:	andeq	r2, r1, r8, lsl #30
   12a18:	andeq	r2, r1, ip, lsr pc
   12a1c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12a20:	tst	r0, #1
   12a24:	beq	12c0c <__assert_fail@plt+0x1c18>
   12a28:	b	12a2c <__assert_fail@plt+0x1a38>
   12a2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12a30:	tst	r0, #1
   12a34:	beq	12a3c <__assert_fail@plt+0x1a48>
   12a38:	b	13a90 <__assert_fail@plt+0x2a9c>
   12a3c:	movw	r0, #1
   12a40:	strb	r0, [fp, #-66]	; 0xffffffbe
   12a44:	ldr	r0, [fp, #8]
   12a48:	cmp	r0, #2
   12a4c:	bne	12b00 <__assert_fail@plt+0x1b0c>
   12a50:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   12a54:	tst	r0, #1
   12a58:	bne	12b00 <__assert_fail@plt+0x1b0c>
   12a5c:	b	12a60 <__assert_fail@plt+0x1a6c>
   12a60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a68:	cmp	r0, r1
   12a6c:	bcs	12a84 <__assert_fail@plt+0x1a90>
   12a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a78:	add	r0, r0, r1
   12a7c:	movw	r1, #39	; 0x27
   12a80:	strb	r1, [r0]
   12a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a88:	add	r0, r0, #1
   12a8c:	str	r0, [fp, #-44]	; 0xffffffd4
   12a90:	b	12a94 <__assert_fail@plt+0x1aa0>
   12a94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a9c:	cmp	r0, r1
   12aa0:	bcs	12ab8 <__assert_fail@plt+0x1ac4>
   12aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12aa8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12aac:	add	r0, r0, r1
   12ab0:	movw	r1, #36	; 0x24
   12ab4:	strb	r1, [r0]
   12ab8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12abc:	add	r0, r0, #1
   12ac0:	str	r0, [fp, #-44]	; 0xffffffd4
   12ac4:	b	12ac8 <__assert_fail@plt+0x1ad4>
   12ac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12acc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ad0:	cmp	r0, r1
   12ad4:	bcs	12aec <__assert_fail@plt+0x1af8>
   12ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12adc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12ae0:	add	r0, r0, r1
   12ae4:	movw	r1, #39	; 0x27
   12ae8:	strb	r1, [r0]
   12aec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12af0:	add	r0, r0, #1
   12af4:	str	r0, [fp, #-44]	; 0xffffffd4
   12af8:	movw	r0, #1
   12afc:	strb	r0, [fp, #-60]	; 0xffffffc4
   12b00:	b	12b04 <__assert_fail@plt+0x1b10>
   12b04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12b0c:	cmp	r0, r1
   12b10:	bcs	12b28 <__assert_fail@plt+0x1b34>
   12b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12b1c:	add	r0, r0, r1
   12b20:	movw	r1, #92	; 0x5c
   12b24:	strb	r1, [r0]
   12b28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b2c:	add	r0, r0, #1
   12b30:	str	r0, [fp, #-44]	; 0xffffffd4
   12b34:	b	12b38 <__assert_fail@plt+0x1b44>
   12b38:	ldr	r0, [fp, #8]
   12b3c:	cmp	r0, #2
   12b40:	beq	12c00 <__assert_fail@plt+0x1c0c>
   12b44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12b48:	add	r0, r0, #1
   12b4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12b50:	cmp	r0, r1
   12b54:	bcs	12c00 <__assert_fail@plt+0x1c0c>
   12b58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12b60:	add	r1, r1, #1
   12b64:	add	r0, r0, r1
   12b68:	ldrb	r0, [r0]
   12b6c:	movw	r1, #48	; 0x30
   12b70:	cmp	r1, r0
   12b74:	bgt	12c00 <__assert_fail@plt+0x1c0c>
   12b78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12b80:	add	r1, r1, #1
   12b84:	add	r0, r0, r1
   12b88:	ldrb	r0, [r0]
   12b8c:	cmp	r0, #57	; 0x39
   12b90:	bgt	12c00 <__assert_fail@plt+0x1c0c>
   12b94:	b	12b98 <__assert_fail@plt+0x1ba4>
   12b98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ba0:	cmp	r0, r1
   12ba4:	bcs	12bbc <__assert_fail@plt+0x1bc8>
   12ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12bb0:	add	r0, r0, r1
   12bb4:	movw	r1, #48	; 0x30
   12bb8:	strb	r1, [r0]
   12bbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bc0:	add	r0, r0, #1
   12bc4:	str	r0, [fp, #-44]	; 0xffffffd4
   12bc8:	b	12bcc <__assert_fail@plt+0x1bd8>
   12bcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bd4:	cmp	r0, r1
   12bd8:	bcs	12bf0 <__assert_fail@plt+0x1bfc>
   12bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12be0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12be4:	add	r0, r0, r1
   12be8:	movw	r1, #48	; 0x30
   12bec:	strb	r1, [r0]
   12bf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bf4:	add	r0, r0, #1
   12bf8:	str	r0, [fp, #-44]	; 0xffffffd4
   12bfc:	b	12c00 <__assert_fail@plt+0x1c0c>
   12c00:	movw	r0, #48	; 0x30
   12c04:	strb	r0, [fp, #-63]	; 0xffffffc1
   12c08:	b	12c24 <__assert_fail@plt+0x1c30>
   12c0c:	ldr	r0, [fp, #12]
   12c10:	and	r0, r0, #1
   12c14:	cmp	r0, #0
   12c18:	beq	12c20 <__assert_fail@plt+0x1c2c>
   12c1c:	b	13900 <__assert_fail@plt+0x290c>
   12c20:	b	12c24 <__assert_fail@plt+0x1c30>
   12c24:	b	1369c <__assert_fail@plt+0x26a8>
   12c28:	ldr	r0, [fp, #8]
   12c2c:	cmp	r0, #2
   12c30:	str	r0, [sp, #32]
   12c34:	beq	12c4c <__assert_fail@plt+0x1c58>
   12c38:	b	12c3c <__assert_fail@plt+0x1c48>
   12c3c:	ldr	r0, [sp, #32]
   12c40:	cmp	r0, #5
   12c44:	beq	12c60 <__assert_fail@plt+0x1c6c>
   12c48:	b	12e1c <__assert_fail@plt+0x1e28>
   12c4c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12c50:	tst	r0, #1
   12c54:	beq	12c5c <__assert_fail@plt+0x1c68>
   12c58:	b	13a90 <__assert_fail@plt+0x2a9c>
   12c5c:	b	12e20 <__assert_fail@plt+0x1e2c>
   12c60:	ldr	r0, [fp, #12]
   12c64:	and	r0, r0, #4
   12c68:	cmp	r0, #0
   12c6c:	beq	12e18 <__assert_fail@plt+0x1e24>
   12c70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12c74:	add	r0, r0, #2
   12c78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12c7c:	cmp	r0, r1
   12c80:	bcs	12e18 <__assert_fail@plt+0x1e24>
   12c84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12c8c:	add	r1, r1, #1
   12c90:	add	r0, r0, r1
   12c94:	ldrb	r0, [r0]
   12c98:	cmp	r0, #63	; 0x3f
   12c9c:	bne	12e18 <__assert_fail@plt+0x1e24>
   12ca0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ca4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12ca8:	add	r0, r1, r0
   12cac:	ldrb	r0, [r0, #2]
   12cb0:	mov	r1, r0
   12cb4:	cmp	r0, #33	; 0x21
   12cb8:	str	r1, [sp, #28]
   12cbc:	beq	12d0c <__assert_fail@plt+0x1d18>
   12cc0:	b	12cc4 <__assert_fail@plt+0x1cd0>
   12cc4:	ldr	r0, [sp, #28]
   12cc8:	sub	r1, r0, #39	; 0x27
   12ccc:	cmp	r1, #3
   12cd0:	bcc	12d0c <__assert_fail@plt+0x1d18>
   12cd4:	b	12cd8 <__assert_fail@plt+0x1ce4>
   12cd8:	ldr	r0, [sp, #28]
   12cdc:	cmp	r0, #45	; 0x2d
   12ce0:	beq	12d0c <__assert_fail@plt+0x1d18>
   12ce4:	b	12ce8 <__assert_fail@plt+0x1cf4>
   12ce8:	ldr	r0, [sp, #28]
   12cec:	cmp	r0, #47	; 0x2f
   12cf0:	beq	12d0c <__assert_fail@plt+0x1d18>
   12cf4:	b	12cf8 <__assert_fail@plt+0x1d04>
   12cf8:	ldr	r0, [sp, #28]
   12cfc:	sub	r1, r0, #60	; 0x3c
   12d00:	cmp	r1, #2
   12d04:	bhi	12e10 <__assert_fail@plt+0x1e1c>
   12d08:	b	12d0c <__assert_fail@plt+0x1d18>
   12d0c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12d10:	tst	r0, #1
   12d14:	beq	12d1c <__assert_fail@plt+0x1d28>
   12d18:	b	13a90 <__assert_fail@plt+0x2a9c>
   12d1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d24:	add	r1, r1, #2
   12d28:	add	r0, r0, r1
   12d2c:	ldrb	r0, [r0]
   12d30:	strb	r0, [fp, #-63]	; 0xffffffc1
   12d34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d38:	add	r0, r0, #2
   12d3c:	str	r0, [fp, #-40]	; 0xffffffd8
   12d40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d48:	cmp	r0, r1
   12d4c:	bcs	12d64 <__assert_fail@plt+0x1d70>
   12d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12d58:	add	r0, r0, r1
   12d5c:	movw	r1, #63	; 0x3f
   12d60:	strb	r1, [r0]
   12d64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d68:	add	r0, r0, #1
   12d6c:	str	r0, [fp, #-44]	; 0xffffffd4
   12d70:	b	12d74 <__assert_fail@plt+0x1d80>
   12d74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d7c:	cmp	r0, r1
   12d80:	bcs	12d98 <__assert_fail@plt+0x1da4>
   12d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12d8c:	add	r0, r0, r1
   12d90:	movw	r1, #34	; 0x22
   12d94:	strb	r1, [r0]
   12d98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d9c:	add	r0, r0, #1
   12da0:	str	r0, [fp, #-44]	; 0xffffffd4
   12da4:	b	12da8 <__assert_fail@plt+0x1db4>
   12da8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12dac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12db0:	cmp	r0, r1
   12db4:	bcs	12dcc <__assert_fail@plt+0x1dd8>
   12db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12dbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12dc0:	add	r0, r0, r1
   12dc4:	movw	r1, #34	; 0x22
   12dc8:	strb	r1, [r0]
   12dcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12dd0:	add	r0, r0, #1
   12dd4:	str	r0, [fp, #-44]	; 0xffffffd4
   12dd8:	b	12ddc <__assert_fail@plt+0x1de8>
   12ddc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12de0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12de4:	cmp	r0, r1
   12de8:	bcs	12e00 <__assert_fail@plt+0x1e0c>
   12dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12df0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12df4:	add	r0, r0, r1
   12df8:	movw	r1, #63	; 0x3f
   12dfc:	strb	r1, [r0]
   12e00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e04:	add	r0, r0, #1
   12e08:	str	r0, [fp, #-44]	; 0xffffffd4
   12e0c:	b	12e14 <__assert_fail@plt+0x1e20>
   12e10:	b	12e14 <__assert_fail@plt+0x1e20>
   12e14:	b	12e18 <__assert_fail@plt+0x1e24>
   12e18:	b	12e20 <__assert_fail@plt+0x1e2c>
   12e1c:	b	12e20 <__assert_fail@plt+0x1e2c>
   12e20:	b	1369c <__assert_fail@plt+0x26a8>
   12e24:	movw	r0, #97	; 0x61
   12e28:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e2c:	b	12eec <__assert_fail@plt+0x1ef8>
   12e30:	movw	r0, #98	; 0x62
   12e34:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e38:	b	12eec <__assert_fail@plt+0x1ef8>
   12e3c:	movw	r0, #102	; 0x66
   12e40:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e44:	b	12eec <__assert_fail@plt+0x1ef8>
   12e48:	movw	r0, #110	; 0x6e
   12e4c:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e50:	b	12ecc <__assert_fail@plt+0x1ed8>
   12e54:	movw	r0, #114	; 0x72
   12e58:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e5c:	b	12ecc <__assert_fail@plt+0x1ed8>
   12e60:	movw	r0, #116	; 0x74
   12e64:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e68:	b	12ecc <__assert_fail@plt+0x1ed8>
   12e6c:	movw	r0, #118	; 0x76
   12e70:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e74:	b	12eec <__assert_fail@plt+0x1ef8>
   12e78:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12e7c:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e80:	ldr	r0, [fp, #8]
   12e84:	cmp	r0, #2
   12e88:	bne	12ea0 <__assert_fail@plt+0x1eac>
   12e8c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12e90:	tst	r0, #1
   12e94:	beq	12e9c <__assert_fail@plt+0x1ea8>
   12e98:	b	13a90 <__assert_fail@plt+0x2a9c>
   12e9c:	b	13824 <__assert_fail@plt+0x2830>
   12ea0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12ea4:	tst	r0, #1
   12ea8:	beq	12ec8 <__assert_fail@plt+0x1ed4>
   12eac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12eb0:	tst	r0, #1
   12eb4:	beq	12ec8 <__assert_fail@plt+0x1ed4>
   12eb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12ebc:	cmp	r0, #0
   12ec0:	beq	12ec8 <__assert_fail@plt+0x1ed4>
   12ec4:	b	13824 <__assert_fail@plt+0x2830>
   12ec8:	b	12ecc <__assert_fail@plt+0x1ed8>
   12ecc:	ldr	r0, [fp, #8]
   12ed0:	cmp	r0, #2
   12ed4:	bne	12ee8 <__assert_fail@plt+0x1ef4>
   12ed8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12edc:	tst	r0, #1
   12ee0:	beq	12ee8 <__assert_fail@plt+0x1ef4>
   12ee4:	b	13a90 <__assert_fail@plt+0x2a9c>
   12ee8:	b	12eec <__assert_fail@plt+0x1ef8>
   12eec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12ef0:	tst	r0, #1
   12ef4:	beq	12f04 <__assert_fail@plt+0x1f10>
   12ef8:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   12efc:	strb	r0, [fp, #-63]	; 0xffffffc1
   12f00:	b	13710 <__assert_fail@plt+0x271c>
   12f04:	b	1369c <__assert_fail@plt+0x26a8>
   12f08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f0c:	cmn	r0, #1
   12f10:	bne	12f28 <__assert_fail@plt+0x1f34>
   12f14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f18:	ldrb	r0, [r0, #1]
   12f1c:	cmp	r0, #0
   12f20:	beq	12f38 <__assert_fail@plt+0x1f44>
   12f24:	b	12f34 <__assert_fail@plt+0x1f40>
   12f28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f2c:	cmp	r0, #1
   12f30:	beq	12f38 <__assert_fail@plt+0x1f44>
   12f34:	b	1369c <__assert_fail@plt+0x26a8>
   12f38:	b	12f3c <__assert_fail@plt+0x1f48>
   12f3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f40:	cmp	r0, #0
   12f44:	beq	12f4c <__assert_fail@plt+0x1f58>
   12f48:	b	1369c <__assert_fail@plt+0x26a8>
   12f4c:	b	12f50 <__assert_fail@plt+0x1f5c>
   12f50:	movw	r0, #1
   12f54:	strb	r0, [fp, #-67]	; 0xffffffbd
   12f58:	ldr	r0, [fp, #8]
   12f5c:	cmp	r0, #2
   12f60:	bne	12f74 <__assert_fail@plt+0x1f80>
   12f64:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12f68:	tst	r0, #1
   12f6c:	beq	12f74 <__assert_fail@plt+0x1f80>
   12f70:	b	13a90 <__assert_fail@plt+0x2a9c>
   12f74:	b	1369c <__assert_fail@plt+0x26a8>
   12f78:	movw	r0, #1
   12f7c:	strb	r0, [fp, #-61]	; 0xffffffc3
   12f80:	strb	r0, [fp, #-67]	; 0xffffffbd
   12f84:	ldr	r0, [fp, #8]
   12f88:	cmp	r0, #2
   12f8c:	bne	1306c <__assert_fail@plt+0x2078>
   12f90:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12f94:	tst	r0, #1
   12f98:	beq	12fa0 <__assert_fail@plt+0x1fac>
   12f9c:	b	13a90 <__assert_fail@plt+0x2a9c>
   12fa0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12fa4:	cmp	r0, #0
   12fa8:	beq	12fc8 <__assert_fail@plt+0x1fd4>
   12fac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12fb0:	cmp	r0, #0
   12fb4:	bne	12fc8 <__assert_fail@plt+0x1fd4>
   12fb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12fbc:	str	r0, [fp, #-48]	; 0xffffffd0
   12fc0:	movw	r0, #0
   12fc4:	str	r0, [fp, #-28]	; 0xffffffe4
   12fc8:	b	12fcc <__assert_fail@plt+0x1fd8>
   12fcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12fd4:	cmp	r0, r1
   12fd8:	bcs	12ff0 <__assert_fail@plt+0x1ffc>
   12fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fe0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12fe4:	add	r0, r0, r1
   12fe8:	movw	r1, #39	; 0x27
   12fec:	strb	r1, [r0]
   12ff0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ff4:	add	r0, r0, #1
   12ff8:	str	r0, [fp, #-44]	; 0xffffffd4
   12ffc:	b	13000 <__assert_fail@plt+0x200c>
   13000:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13004:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13008:	cmp	r0, r1
   1300c:	bcs	13024 <__assert_fail@plt+0x2030>
   13010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13014:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13018:	add	r0, r0, r1
   1301c:	movw	r1, #92	; 0x5c
   13020:	strb	r1, [r0]
   13024:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13028:	add	r0, r0, #1
   1302c:	str	r0, [fp, #-44]	; 0xffffffd4
   13030:	b	13034 <__assert_fail@plt+0x2040>
   13034:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13038:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1303c:	cmp	r0, r1
   13040:	bcs	13058 <__assert_fail@plt+0x2064>
   13044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13048:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1304c:	add	r0, r0, r1
   13050:	movw	r1, #39	; 0x27
   13054:	strb	r1, [r0]
   13058:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1305c:	add	r0, r0, #1
   13060:	str	r0, [fp, #-44]	; 0xffffffd4
   13064:	movw	r0, #0
   13068:	strb	r0, [fp, #-60]	; 0xffffffc4
   1306c:	b	1369c <__assert_fail@plt+0x26a8>
   13070:	movw	r0, #1
   13074:	strb	r0, [fp, #-67]	; 0xffffffbd
   13078:	b	1369c <__assert_fail@plt+0x26a8>
   1307c:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   13080:	tst	r0, #1
   13084:	beq	130c4 <__assert_fail@plt+0x20d0>
   13088:	mov	r0, #1
   1308c:	str	r0, [fp, #-72]	; 0xffffffb8
   13090:	bl	10eec <__ctype_b_loc@plt>
   13094:	ldr	r0, [r0]
   13098:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1309c:	mov	r2, r1
   130a0:	add	r0, r0, r1, lsl #1
   130a4:	ldrh	r0, [r0]
   130a8:	and	r0, r0, #16384	; 0x4000
   130ac:	cmp	r0, #0
   130b0:	movw	r0, #0
   130b4:	movne	r0, #1
   130b8:	and	r0, r0, #1
   130bc:	strb	r0, [fp, #-73]	; 0xffffffb7
   130c0:	b	13350 <__assert_fail@plt+0x235c>
   130c4:	sub	r0, fp, #84	; 0x54
   130c8:	movw	r1, #0
   130cc:	and	r1, r1, #255	; 0xff
   130d0:	movw	r2, #8
   130d4:	bl	10f40 <memset@plt>
   130d8:	movw	r0, #0
   130dc:	str	r0, [fp, #-72]	; 0xffffffb8
   130e0:	movw	r0, #1
   130e4:	strb	r0, [fp, #-73]	; 0xffffffb7
   130e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   130ec:	cmn	r0, #1
   130f0:	bne	13100 <__assert_fail@plt+0x210c>
   130f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   130f8:	bl	10f10 <strlen@plt>
   130fc:	str	r0, [fp, #-36]	; 0xffffffdc
   13100:	b	13104 <__assert_fail@plt+0x2110>
   13104:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13108:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1310c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13110:	add	r1, r1, r2
   13114:	add	r1, r0, r1
   13118:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1311c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13120:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13124:	add	r2, r2, r3
   13128:	sub	r2, r0, r2
   1312c:	add	r0, sp, #88	; 0x58
   13130:	sub	r3, fp, #84	; 0x54
   13134:	bl	18574 <__assert_fail@plt+0x7580>
   13138:	str	r0, [sp, #84]	; 0x54
   1313c:	ldr	r0, [sp, #84]	; 0x54
   13140:	cmp	r0, #0
   13144:	bne	1314c <__assert_fail@plt+0x2158>
   13148:	b	1334c <__assert_fail@plt+0x2358>
   1314c:	ldr	r0, [sp, #84]	; 0x54
   13150:	cmn	r0, #1
   13154:	bne	13164 <__assert_fail@plt+0x2170>
   13158:	movw	r0, #0
   1315c:	strb	r0, [fp, #-73]	; 0xffffffb7
   13160:	b	1334c <__assert_fail@plt+0x2358>
   13164:	ldr	r0, [sp, #84]	; 0x54
   13168:	cmn	r0, #2
   1316c:	bne	131e0 <__assert_fail@plt+0x21ec>
   13170:	movw	r0, #0
   13174:	strb	r0, [fp, #-73]	; 0xffffffb7
   13178:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1317c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13180:	add	r0, r0, r1
   13184:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13188:	cmp	r0, r1
   1318c:	movw	r0, #0
   13190:	str	r0, [sp, #24]
   13194:	bcs	131c0 <__assert_fail@plt+0x21cc>
   13198:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1319c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   131a0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   131a4:	add	r1, r1, r2
   131a8:	add	r0, r0, r1
   131ac:	ldrb	r0, [r0]
   131b0:	cmp	r0, #0
   131b4:	movw	r0, #0
   131b8:	movne	r0, #1
   131bc:	str	r0, [sp, #24]
   131c0:	ldr	r0, [sp, #24]
   131c4:	tst	r0, #1
   131c8:	beq	131dc <__assert_fail@plt+0x21e8>
   131cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   131d0:	add	r0, r0, #1
   131d4:	str	r0, [fp, #-72]	; 0xffffffb8
   131d8:	b	13178 <__assert_fail@plt+0x2184>
   131dc:	b	1334c <__assert_fail@plt+0x2358>
   131e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   131e4:	tst	r0, #1
   131e8:	beq	132f4 <__assert_fail@plt+0x2300>
   131ec:	ldr	r0, [fp, #8]
   131f0:	cmp	r0, #2
   131f4:	bne	132f4 <__assert_fail@plt+0x2300>
   131f8:	movw	r0, #1
   131fc:	str	r0, [sp, #80]	; 0x50
   13200:	ldr	r0, [sp, #80]	; 0x50
   13204:	ldr	r1, [sp, #84]	; 0x54
   13208:	cmp	r0, r1
   1320c:	bcs	132f0 <__assert_fail@plt+0x22fc>
   13210:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13214:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13218:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1321c:	add	r1, r1, r2
   13220:	ldr	r2, [sp, #80]	; 0x50
   13224:	add	r1, r1, r2
   13228:	ldrb	r0, [r0, r1]
   1322c:	sub	r0, r0, #91	; 0x5b
   13230:	cmp	r0, #33	; 0x21
   13234:	str	r0, [sp, #20]
   13238:	bhi	132d8 <__assert_fail@plt+0x22e4>
   1323c:	add	r0, pc, #8
   13240:	ldr	r1, [sp, #20]
   13244:	ldr	r0, [r0, r1, lsl #2]
   13248:	mov	pc, r0
   1324c:	ldrdeq	r3, [r1], -r4
   13250:	ldrdeq	r3, [r1], -r4
   13254:	ldrdeq	r3, [r1], -r8
   13258:	ldrdeq	r3, [r1], -r4
   1325c:	ldrdeq	r3, [r1], -r8
   13260:	ldrdeq	r3, [r1], -r4
   13264:	ldrdeq	r3, [r1], -r8
   13268:	ldrdeq	r3, [r1], -r8
   1326c:	ldrdeq	r3, [r1], -r8
   13270:	ldrdeq	r3, [r1], -r8
   13274:	ldrdeq	r3, [r1], -r8
   13278:	ldrdeq	r3, [r1], -r8
   1327c:	ldrdeq	r3, [r1], -r8
   13280:	ldrdeq	r3, [r1], -r8
   13284:	ldrdeq	r3, [r1], -r8
   13288:	ldrdeq	r3, [r1], -r8
   1328c:	ldrdeq	r3, [r1], -r8
   13290:	ldrdeq	r3, [r1], -r8
   13294:	ldrdeq	r3, [r1], -r8
   13298:	ldrdeq	r3, [r1], -r8
   1329c:	ldrdeq	r3, [r1], -r8
   132a0:	ldrdeq	r3, [r1], -r8
   132a4:	ldrdeq	r3, [r1], -r8
   132a8:	ldrdeq	r3, [r1], -r8
   132ac:	ldrdeq	r3, [r1], -r8
   132b0:	ldrdeq	r3, [r1], -r8
   132b4:	ldrdeq	r3, [r1], -r8
   132b8:	ldrdeq	r3, [r1], -r8
   132bc:	ldrdeq	r3, [r1], -r8
   132c0:	ldrdeq	r3, [r1], -r8
   132c4:	ldrdeq	r3, [r1], -r8
   132c8:	ldrdeq	r3, [r1], -r8
   132cc:	ldrdeq	r3, [r1], -r8
   132d0:	ldrdeq	r3, [r1], -r4
   132d4:	b	13a90 <__assert_fail@plt+0x2a9c>
   132d8:	b	132dc <__assert_fail@plt+0x22e8>
   132dc:	b	132e0 <__assert_fail@plt+0x22ec>
   132e0:	ldr	r0, [sp, #80]	; 0x50
   132e4:	add	r0, r0, #1
   132e8:	str	r0, [sp, #80]	; 0x50
   132ec:	b	13200 <__assert_fail@plt+0x220c>
   132f0:	b	132f4 <__assert_fail@plt+0x2300>
   132f4:	ldr	r0, [sp, #88]	; 0x58
   132f8:	bl	10e50 <iswprint@plt>
   132fc:	cmp	r0, #0
   13300:	bne	1330c <__assert_fail@plt+0x2318>
   13304:	movw	r0, #0
   13308:	strb	r0, [fp, #-73]	; 0xffffffb7
   1330c:	ldr	r0, [sp, #84]	; 0x54
   13310:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13314:	add	r0, r1, r0
   13318:	str	r0, [fp, #-72]	; 0xffffffb8
   1331c:	b	13320 <__assert_fail@plt+0x232c>
   13320:	b	13324 <__assert_fail@plt+0x2330>
   13324:	b	13328 <__assert_fail@plt+0x2334>
   13328:	sub	r0, fp, #84	; 0x54
   1332c:	bl	10e14 <mbsinit@plt>
   13330:	cmp	r0, #0
   13334:	movw	r0, #0
   13338:	movne	r0, #1
   1333c:	mvn	r1, #0
   13340:	eor	r0, r0, r1
   13344:	tst	r0, #1
   13348:	bne	13104 <__assert_fail@plt+0x2110>
   1334c:	b	13350 <__assert_fail@plt+0x235c>
   13350:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13354:	and	r0, r0, #1
   13358:	strb	r0, [fp, #-67]	; 0xffffffbd
   1335c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13360:	movw	r1, #1
   13364:	cmp	r1, r0
   13368:	bcc	13384 <__assert_fail@plt+0x2390>
   1336c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13370:	tst	r0, #1
   13374:	beq	13698 <__assert_fail@plt+0x26a4>
   13378:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1337c:	tst	r0, #1
   13380:	bne	13698 <__assert_fail@plt+0x26a4>
   13384:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13388:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1338c:	add	r0, r0, r1
   13390:	str	r0, [sp, #76]	; 0x4c
   13394:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13398:	tst	r0, #1
   1339c:	beq	1354c <__assert_fail@plt+0x2558>
   133a0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   133a4:	tst	r0, #1
   133a8:	bne	1354c <__assert_fail@plt+0x2558>
   133ac:	b	133b0 <__assert_fail@plt+0x23bc>
   133b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   133b4:	tst	r0, #1
   133b8:	beq	133c0 <__assert_fail@plt+0x23cc>
   133bc:	b	13a90 <__assert_fail@plt+0x2a9c>
   133c0:	movw	r0, #1
   133c4:	strb	r0, [fp, #-66]	; 0xffffffbe
   133c8:	ldr	r0, [fp, #8]
   133cc:	cmp	r0, #2
   133d0:	bne	13484 <__assert_fail@plt+0x2490>
   133d4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   133d8:	tst	r0, #1
   133dc:	bne	13484 <__assert_fail@plt+0x2490>
   133e0:	b	133e4 <__assert_fail@plt+0x23f0>
   133e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133ec:	cmp	r0, r1
   133f0:	bcs	13408 <__assert_fail@plt+0x2414>
   133f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133fc:	add	r0, r0, r1
   13400:	movw	r1, #39	; 0x27
   13404:	strb	r1, [r0]
   13408:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1340c:	add	r0, r0, #1
   13410:	str	r0, [fp, #-44]	; 0xffffffd4
   13414:	b	13418 <__assert_fail@plt+0x2424>
   13418:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1341c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13420:	cmp	r0, r1
   13424:	bcs	1343c <__assert_fail@plt+0x2448>
   13428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1342c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13430:	add	r0, r0, r1
   13434:	movw	r1, #36	; 0x24
   13438:	strb	r1, [r0]
   1343c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13440:	add	r0, r0, #1
   13444:	str	r0, [fp, #-44]	; 0xffffffd4
   13448:	b	1344c <__assert_fail@plt+0x2458>
   1344c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13450:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13454:	cmp	r0, r1
   13458:	bcs	13470 <__assert_fail@plt+0x247c>
   1345c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13460:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13464:	add	r0, r0, r1
   13468:	movw	r1, #39	; 0x27
   1346c:	strb	r1, [r0]
   13470:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13474:	add	r0, r0, #1
   13478:	str	r0, [fp, #-44]	; 0xffffffd4
   1347c:	movw	r0, #1
   13480:	strb	r0, [fp, #-60]	; 0xffffffc4
   13484:	b	13488 <__assert_fail@plt+0x2494>
   13488:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1348c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13490:	cmp	r0, r1
   13494:	bcs	134ac <__assert_fail@plt+0x24b8>
   13498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1349c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   134a0:	add	r0, r0, r1
   134a4:	movw	r1, #92	; 0x5c
   134a8:	strb	r1, [r0]
   134ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134b0:	add	r0, r0, #1
   134b4:	str	r0, [fp, #-44]	; 0xffffffd4
   134b8:	b	134bc <__assert_fail@plt+0x24c8>
   134bc:	b	134c0 <__assert_fail@plt+0x24cc>
   134c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134c8:	cmp	r0, r1
   134cc:	bcs	134ec <__assert_fail@plt+0x24f8>
   134d0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   134d4:	asr	r0, r0, #6
   134d8:	add	r0, r0, #48	; 0x30
   134dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   134e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   134e4:	add	r1, r1, r2
   134e8:	strb	r0, [r1]
   134ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134f0:	add	r0, r0, #1
   134f4:	str	r0, [fp, #-44]	; 0xffffffd4
   134f8:	b	134fc <__assert_fail@plt+0x2508>
   134fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13500:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13504:	cmp	r0, r1
   13508:	bcs	1352c <__assert_fail@plt+0x2538>
   1350c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13510:	asr	r0, r0, #3
   13514:	and	r0, r0, #7
   13518:	add	r0, r0, #48	; 0x30
   1351c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13520:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13524:	add	r1, r1, r2
   13528:	strb	r0, [r1]
   1352c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13530:	add	r0, r0, #1
   13534:	str	r0, [fp, #-44]	; 0xffffffd4
   13538:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1353c:	and	r0, r0, #7
   13540:	add	r0, r0, #48	; 0x30
   13544:	strb	r0, [fp, #-63]	; 0xffffffc1
   13548:	b	13598 <__assert_fail@plt+0x25a4>
   1354c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13550:	tst	r0, #1
   13554:	beq	13594 <__assert_fail@plt+0x25a0>
   13558:	b	1355c <__assert_fail@plt+0x2568>
   1355c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13560:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13564:	cmp	r0, r1
   13568:	bcs	13580 <__assert_fail@plt+0x258c>
   1356c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13570:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13574:	add	r0, r0, r1
   13578:	movw	r1, #92	; 0x5c
   1357c:	strb	r1, [r0]
   13580:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13584:	add	r0, r0, #1
   13588:	str	r0, [fp, #-44]	; 0xffffffd4
   1358c:	movw	r0, #0
   13590:	strb	r0, [fp, #-65]	; 0xffffffbf
   13594:	b	13598 <__assert_fail@plt+0x25a4>
   13598:	ldr	r0, [sp, #76]	; 0x4c
   1359c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   135a0:	add	r1, r1, #1
   135a4:	cmp	r0, r1
   135a8:	bhi	135b0 <__assert_fail@plt+0x25bc>
   135ac:	b	13694 <__assert_fail@plt+0x26a0>
   135b0:	b	135b4 <__assert_fail@plt+0x25c0>
   135b4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   135b8:	tst	r0, #1
   135bc:	beq	1363c <__assert_fail@plt+0x2648>
   135c0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   135c4:	tst	r0, #1
   135c8:	bne	1363c <__assert_fail@plt+0x2648>
   135cc:	b	135d0 <__assert_fail@plt+0x25dc>
   135d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   135d8:	cmp	r0, r1
   135dc:	bcs	135f4 <__assert_fail@plt+0x2600>
   135e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   135e8:	add	r0, r0, r1
   135ec:	movw	r1, #39	; 0x27
   135f0:	strb	r1, [r0]
   135f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135f8:	add	r0, r0, #1
   135fc:	str	r0, [fp, #-44]	; 0xffffffd4
   13600:	b	13604 <__assert_fail@plt+0x2610>
   13604:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13608:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1360c:	cmp	r0, r1
   13610:	bcs	13628 <__assert_fail@plt+0x2634>
   13614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13618:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1361c:	add	r0, r0, r1
   13620:	movw	r1, #39	; 0x27
   13624:	strb	r1, [r0]
   13628:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1362c:	add	r0, r0, #1
   13630:	str	r0, [fp, #-44]	; 0xffffffd4
   13634:	movw	r0, #0
   13638:	strb	r0, [fp, #-60]	; 0xffffffc4
   1363c:	b	13640 <__assert_fail@plt+0x264c>
   13640:	b	13644 <__assert_fail@plt+0x2650>
   13644:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13648:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1364c:	cmp	r0, r1
   13650:	bcs	13668 <__assert_fail@plt+0x2674>
   13654:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13658:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1365c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13660:	add	r1, r1, r2
   13664:	strb	r0, [r1]
   13668:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1366c:	add	r0, r0, #1
   13670:	str	r0, [fp, #-44]	; 0xffffffd4
   13674:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13678:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1367c:	add	r1, r1, #1
   13680:	str	r1, [fp, #-40]	; 0xffffffd8
   13684:	add	r0, r0, r1
   13688:	ldrb	r0, [r0]
   1368c:	strb	r0, [fp, #-63]	; 0xffffffc1
   13690:	b	13394 <__assert_fail@plt+0x23a0>
   13694:	b	13824 <__assert_fail@plt+0x2830>
   13698:	b	1369c <__assert_fail@plt+0x26a8>
   1369c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   136a0:	tst	r0, #1
   136a4:	beq	136b4 <__assert_fail@plt+0x26c0>
   136a8:	ldr	r0, [fp, #8]
   136ac:	cmp	r0, #2
   136b0:	bne	136c0 <__assert_fail@plt+0x26cc>
   136b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   136b8:	tst	r0, #1
   136bc:	beq	136fc <__assert_fail@plt+0x2708>
   136c0:	ldr	r0, [fp, #16]
   136c4:	movw	r1, #0
   136c8:	cmp	r0, r1
   136cc:	beq	136fc <__assert_fail@plt+0x2708>
   136d0:	ldr	r0, [fp, #16]
   136d4:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   136d8:	lsr	r1, r1, #5
   136dc:	add	r0, r0, r1, lsl #2
   136e0:	ldr	r0, [r0]
   136e4:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   136e8:	and	r1, r1, #31
   136ec:	lsr	r0, r0, r1
   136f0:	and	r0, r0, #1
   136f4:	cmp	r0, #0
   136f8:	bne	1370c <__assert_fail@plt+0x2718>
   136fc:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13700:	tst	r0, #1
   13704:	bne	1370c <__assert_fail@plt+0x2718>
   13708:	b	13824 <__assert_fail@plt+0x2830>
   1370c:	b	13710 <__assert_fail@plt+0x271c>
   13710:	b	13714 <__assert_fail@plt+0x2720>
   13714:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13718:	tst	r0, #1
   1371c:	beq	13724 <__assert_fail@plt+0x2730>
   13720:	b	13a90 <__assert_fail@plt+0x2a9c>
   13724:	movw	r0, #1
   13728:	strb	r0, [fp, #-66]	; 0xffffffbe
   1372c:	ldr	r0, [fp, #8]
   13730:	cmp	r0, #2
   13734:	bne	137e8 <__assert_fail@plt+0x27f4>
   13738:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1373c:	tst	r0, #1
   13740:	bne	137e8 <__assert_fail@plt+0x27f4>
   13744:	b	13748 <__assert_fail@plt+0x2754>
   13748:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1374c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13750:	cmp	r0, r1
   13754:	bcs	1376c <__assert_fail@plt+0x2778>
   13758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1375c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13760:	add	r0, r0, r1
   13764:	movw	r1, #39	; 0x27
   13768:	strb	r1, [r0]
   1376c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13770:	add	r0, r0, #1
   13774:	str	r0, [fp, #-44]	; 0xffffffd4
   13778:	b	1377c <__assert_fail@plt+0x2788>
   1377c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13780:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13784:	cmp	r0, r1
   13788:	bcs	137a0 <__assert_fail@plt+0x27ac>
   1378c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13790:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13794:	add	r0, r0, r1
   13798:	movw	r1, #36	; 0x24
   1379c:	strb	r1, [r0]
   137a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137a4:	add	r0, r0, #1
   137a8:	str	r0, [fp, #-44]	; 0xffffffd4
   137ac:	b	137b0 <__assert_fail@plt+0x27bc>
   137b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137b8:	cmp	r0, r1
   137bc:	bcs	137d4 <__assert_fail@plt+0x27e0>
   137c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   137c8:	add	r0, r0, r1
   137cc:	movw	r1, #39	; 0x27
   137d0:	strb	r1, [r0]
   137d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137d8:	add	r0, r0, #1
   137dc:	str	r0, [fp, #-44]	; 0xffffffd4
   137e0:	movw	r0, #1
   137e4:	strb	r0, [fp, #-60]	; 0xffffffc4
   137e8:	b	137ec <__assert_fail@plt+0x27f8>
   137ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137f4:	cmp	r0, r1
   137f8:	bcs	13810 <__assert_fail@plt+0x281c>
   137fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13800:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13804:	add	r0, r0, r1
   13808:	movw	r1, #92	; 0x5c
   1380c:	strb	r1, [r0]
   13810:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13814:	add	r0, r0, #1
   13818:	str	r0, [fp, #-44]	; 0xffffffd4
   1381c:	b	13820 <__assert_fail@plt+0x282c>
   13820:	b	13824 <__assert_fail@plt+0x2830>
   13824:	b	13828 <__assert_fail@plt+0x2834>
   13828:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1382c:	tst	r0, #1
   13830:	beq	138b0 <__assert_fail@plt+0x28bc>
   13834:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13838:	tst	r0, #1
   1383c:	bne	138b0 <__assert_fail@plt+0x28bc>
   13840:	b	13844 <__assert_fail@plt+0x2850>
   13844:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13848:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1384c:	cmp	r0, r1
   13850:	bcs	13868 <__assert_fail@plt+0x2874>
   13854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13858:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1385c:	add	r0, r0, r1
   13860:	movw	r1, #39	; 0x27
   13864:	strb	r1, [r0]
   13868:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1386c:	add	r0, r0, #1
   13870:	str	r0, [fp, #-44]	; 0xffffffd4
   13874:	b	13878 <__assert_fail@plt+0x2884>
   13878:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1387c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13880:	cmp	r0, r1
   13884:	bcs	1389c <__assert_fail@plt+0x28a8>
   13888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1388c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13890:	add	r0, r0, r1
   13894:	movw	r1, #39	; 0x27
   13898:	strb	r1, [r0]
   1389c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138a0:	add	r0, r0, #1
   138a4:	str	r0, [fp, #-44]	; 0xffffffd4
   138a8:	movw	r0, #0
   138ac:	strb	r0, [fp, #-60]	; 0xffffffc4
   138b0:	b	138b4 <__assert_fail@plt+0x28c0>
   138b4:	b	138b8 <__assert_fail@plt+0x28c4>
   138b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138c0:	cmp	r0, r1
   138c4:	bcs	138dc <__assert_fail@plt+0x28e8>
   138c8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   138cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   138d0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   138d4:	add	r1, r1, r2
   138d8:	strb	r0, [r1]
   138dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138e0:	add	r0, r0, #1
   138e4:	str	r0, [fp, #-44]	; 0xffffffd4
   138e8:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   138ec:	tst	r0, #1
   138f0:	bne	138fc <__assert_fail@plt+0x2908>
   138f4:	movw	r0, #0
   138f8:	strb	r0, [fp, #-62]	; 0xffffffc2
   138fc:	b	13900 <__assert_fail@plt+0x290c>
   13900:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13904:	add	r0, r0, #1
   13908:	str	r0, [fp, #-40]	; 0xffffffd8
   1390c:	b	126b8 <__assert_fail@plt+0x16c4>
   13910:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13914:	cmp	r0, #0
   13918:	bne	13938 <__assert_fail@plt+0x2944>
   1391c:	ldr	r0, [fp, #8]
   13920:	cmp	r0, #2
   13924:	bne	13938 <__assert_fail@plt+0x2944>
   13928:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1392c:	tst	r0, #1
   13930:	beq	13938 <__assert_fail@plt+0x2944>
   13934:	b	13a90 <__assert_fail@plt+0x2a9c>
   13938:	ldr	r0, [fp, #8]
   1393c:	cmp	r0, #2
   13940:	bne	139e0 <__assert_fail@plt+0x29ec>
   13944:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13948:	tst	r0, #1
   1394c:	bne	139e0 <__assert_fail@plt+0x29ec>
   13950:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   13954:	tst	r0, #1
   13958:	beq	139e0 <__assert_fail@plt+0x29ec>
   1395c:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   13960:	tst	r0, #1
   13964:	beq	139ac <__assert_fail@plt+0x29b8>
   13968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1396c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13970:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13974:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13978:	ldr	ip, [fp, #12]
   1397c:	ldr	lr, [fp, #16]
   13980:	ldr	r4, [fp, #20]
   13984:	ldr	r5, [fp, #24]
   13988:	movw	r6, #5
   1398c:	str	r6, [sp]
   13990:	str	ip, [sp, #4]
   13994:	str	lr, [sp, #8]
   13998:	str	r4, [sp, #12]
   1399c:	str	r5, [sp, #16]
   139a0:	bl	123d0 <__assert_fail@plt+0x13dc>
   139a4:	str	r0, [fp, #-20]	; 0xffffffec
   139a8:	b	13af8 <__assert_fail@plt+0x2b04>
   139ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   139b0:	cmp	r0, #0
   139b4:	bne	139d8 <__assert_fail@plt+0x29e4>
   139b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   139bc:	cmp	r0, #0
   139c0:	beq	139d8 <__assert_fail@plt+0x29e4>
   139c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   139c8:	str	r0, [fp, #-28]	; 0xffffffe4
   139cc:	movw	r0, #0
   139d0:	str	r0, [fp, #-44]	; 0xffffffd4
   139d4:	b	12478 <__assert_fail@plt+0x1484>
   139d8:	b	139dc <__assert_fail@plt+0x29e8>
   139dc:	b	139e0 <__assert_fail@plt+0x29ec>
   139e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   139e4:	movw	r1, #0
   139e8:	cmp	r0, r1
   139ec:	beq	13a60 <__assert_fail@plt+0x2a6c>
   139f0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   139f4:	tst	r0, #1
   139f8:	bne	13a60 <__assert_fail@plt+0x2a6c>
   139fc:	b	13a00 <__assert_fail@plt+0x2a0c>
   13a00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13a04:	ldrsb	r0, [r0]
   13a08:	cmp	r0, #0
   13a0c:	beq	13a5c <__assert_fail@plt+0x2a68>
   13a10:	b	13a14 <__assert_fail@plt+0x2a20>
   13a14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a1c:	cmp	r0, r1
   13a20:	bcs	13a3c <__assert_fail@plt+0x2a48>
   13a24:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13a28:	ldrb	r0, [r0]
   13a2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13a30:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13a34:	add	r1, r1, r2
   13a38:	strb	r0, [r1]
   13a3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a40:	add	r0, r0, #1
   13a44:	str	r0, [fp, #-44]	; 0xffffffd4
   13a48:	b	13a4c <__assert_fail@plt+0x2a58>
   13a4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13a50:	add	r0, r0, #1
   13a54:	str	r0, [fp, #-52]	; 0xffffffcc
   13a58:	b	13a00 <__assert_fail@plt+0x2a0c>
   13a5c:	b	13a60 <__assert_fail@plt+0x2a6c>
   13a60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a68:	cmp	r0, r1
   13a6c:	bcs	13a84 <__assert_fail@plt+0x2a90>
   13a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a78:	add	r0, r0, r1
   13a7c:	movw	r1, #0
   13a80:	strb	r1, [r0]
   13a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a88:	str	r0, [fp, #-20]	; 0xffffffec
   13a8c:	b	13af8 <__assert_fail@plt+0x2b04>
   13a90:	ldr	r0, [fp, #8]
   13a94:	cmp	r0, #2
   13a98:	bne	13ab0 <__assert_fail@plt+0x2abc>
   13a9c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13aa0:	tst	r0, #1
   13aa4:	beq	13ab0 <__assert_fail@plt+0x2abc>
   13aa8:	movw	r0, #4
   13aac:	str	r0, [fp, #8]
   13ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ab4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ab8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13abc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13ac0:	ldr	ip, [fp, #8]
   13ac4:	ldr	lr, [fp, #12]
   13ac8:	mvn	r4, #2
   13acc:	and	lr, lr, r4
   13ad0:	ldr	r4, [fp, #20]
   13ad4:	ldr	r5, [fp, #24]
   13ad8:	str	ip, [sp]
   13adc:	str	lr, [sp, #4]
   13ae0:	movw	ip, #0
   13ae4:	str	ip, [sp, #8]
   13ae8:	str	r4, [sp, #12]
   13aec:	str	r5, [sp, #16]
   13af0:	bl	123d0 <__assert_fail@plt+0x13dc>
   13af4:	str	r0, [fp, #-20]	; 0xffffffec
   13af8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13afc:	sub	sp, fp, #16
   13b00:	pop	{r4, r5, r6, sl, fp, pc}
   13b04:	push	{fp, lr}
   13b08:	mov	fp, sp
   13b0c:	sub	sp, sp, #16
   13b10:	str	r0, [fp, #-4]
   13b14:	str	r1, [sp, #8]
   13b18:	str	r2, [sp, #4]
   13b1c:	ldr	r0, [fp, #-4]
   13b20:	ldr	r1, [sp, #8]
   13b24:	ldr	r3, [sp, #4]
   13b28:	movw	r2, #0
   13b2c:	bl	13b38 <__assert_fail@plt+0x2b44>
   13b30:	mov	sp, fp
   13b34:	pop	{fp, pc}
   13b38:	push	{r4, r5, r6, sl, fp, lr}
   13b3c:	add	fp, sp, #16
   13b40:	sub	sp, sp, #80	; 0x50
   13b44:	str	r0, [fp, #-20]	; 0xffffffec
   13b48:	str	r1, [fp, #-24]	; 0xffffffe8
   13b4c:	str	r2, [fp, #-28]	; 0xffffffe4
   13b50:	str	r3, [fp, #-32]	; 0xffffffe0
   13b54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b58:	movw	r1, #0
   13b5c:	cmp	r0, r1
   13b60:	beq	13b70 <__assert_fail@plt+0x2b7c>
   13b64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b68:	str	r0, [sp, #40]	; 0x28
   13b6c:	b	13b80 <__assert_fail@plt+0x2b8c>
   13b70:	movw	r0, #45404	; 0xb15c
   13b74:	movt	r0, #2
   13b78:	str	r0, [sp, #40]	; 0x28
   13b7c:	b	13b80 <__assert_fail@plt+0x2b8c>
   13b80:	ldr	r0, [sp, #40]	; 0x28
   13b84:	str	r0, [fp, #-36]	; 0xffffffdc
   13b88:	bl	10f28 <__errno_location@plt>
   13b8c:	ldr	r0, [r0]
   13b90:	str	r0, [fp, #-40]	; 0xffffffd8
   13b94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13b98:	ldr	r0, [r0, #4]
   13b9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ba0:	movw	r2, #0
   13ba4:	cmp	r1, r2
   13ba8:	movw	r1, #0
   13bac:	movne	r1, #1
   13bb0:	tst	r1, #1
   13bb4:	mov	r1, r2
   13bb8:	moveq	r1, #1
   13bbc:	orr	r0, r0, r1
   13bc0:	str	r0, [fp, #-44]	; 0xffffffd4
   13bc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13bcc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13bd0:	ldr	r1, [r1]
   13bd4:	ldr	ip, [fp, #-44]	; 0xffffffd4
   13bd8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   13bdc:	add	lr, lr, #8
   13be0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13be4:	ldr	r4, [r4, #40]	; 0x28
   13be8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13bec:	ldr	r5, [r5, #44]	; 0x2c
   13bf0:	str	r0, [sp, #36]	; 0x24
   13bf4:	mov	r0, r2
   13bf8:	str	r1, [sp, #32]
   13bfc:	mov	r1, r2
   13c00:	ldr	r2, [sp, #36]	; 0x24
   13c04:	ldr	r6, [sp, #32]
   13c08:	str	r6, [sp]
   13c0c:	str	ip, [sp, #4]
   13c10:	str	lr, [sp, #8]
   13c14:	str	r4, [sp, #12]
   13c18:	str	r5, [sp, #16]
   13c1c:	bl	123d0 <__assert_fail@plt+0x13dc>
   13c20:	add	r0, r0, #1
   13c24:	str	r0, [sp, #48]	; 0x30
   13c28:	ldr	r0, [sp, #48]	; 0x30
   13c2c:	bl	1501c <__assert_fail@plt+0x4028>
   13c30:	str	r0, [sp, #44]	; 0x2c
   13c34:	ldr	r0, [sp, #44]	; 0x2c
   13c38:	ldr	r1, [sp, #48]	; 0x30
   13c3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13c44:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13c48:	ldr	ip, [ip]
   13c4c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   13c50:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13c54:	add	r4, r4, #8
   13c58:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13c5c:	ldr	r5, [r5, #40]	; 0x28
   13c60:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13c64:	ldr	r6, [r6, #44]	; 0x2c
   13c68:	str	ip, [sp]
   13c6c:	str	lr, [sp, #4]
   13c70:	str	r4, [sp, #8]
   13c74:	str	r5, [sp, #12]
   13c78:	str	r6, [sp, #16]
   13c7c:	bl	123d0 <__assert_fail@plt+0x13dc>
   13c80:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13c84:	str	r0, [sp, #28]
   13c88:	str	r1, [sp, #24]
   13c8c:	bl	10f28 <__errno_location@plt>
   13c90:	ldr	r1, [sp, #24]
   13c94:	str	r1, [r0]
   13c98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13c9c:	movw	r2, #0
   13ca0:	cmp	r0, r2
   13ca4:	beq	13cb8 <__assert_fail@plt+0x2cc4>
   13ca8:	ldr	r0, [sp, #48]	; 0x30
   13cac:	sub	r0, r0, #1
   13cb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cb4:	str	r0, [r1]
   13cb8:	ldr	r0, [sp, #44]	; 0x2c
   13cbc:	sub	sp, fp, #16
   13cc0:	pop	{r4, r5, r6, sl, fp, pc}
   13cc4:	push	{fp, lr}
   13cc8:	mov	fp, sp
   13ccc:	sub	sp, sp, #8
   13cd0:	movw	r0, #45292	; 0xb0ec
   13cd4:	movt	r0, #2
   13cd8:	ldr	r0, [r0]
   13cdc:	str	r0, [sp, #4]
   13ce0:	movw	r0, #1
   13ce4:	str	r0, [sp]
   13ce8:	ldr	r0, [sp]
   13cec:	movw	r1, #45296	; 0xb0f0
   13cf0:	movt	r1, #2
   13cf4:	ldr	r1, [r1]
   13cf8:	cmp	r0, r1
   13cfc:	bge	13d24 <__assert_fail@plt+0x2d30>
   13d00:	ldr	r0, [sp, #4]
   13d04:	ldr	r1, [sp]
   13d08:	add	r0, r0, r1, lsl #3
   13d0c:	ldr	r0, [r0, #4]
   13d10:	bl	181fc <__assert_fail@plt+0x7208>
   13d14:	ldr	r0, [sp]
   13d18:	add	r0, r0, #1
   13d1c:	str	r0, [sp]
   13d20:	b	13ce8 <__assert_fail@plt+0x2cf4>
   13d24:	ldr	r0, [sp, #4]
   13d28:	ldr	r0, [r0, #4]
   13d2c:	movw	r1, #45452	; 0xb18c
   13d30:	movt	r1, #2
   13d34:	cmp	r0, r1
   13d38:	beq	13d64 <__assert_fail@plt+0x2d70>
   13d3c:	ldr	r0, [sp, #4]
   13d40:	ldr	r0, [r0, #4]
   13d44:	bl	181fc <__assert_fail@plt+0x7208>
   13d48:	movw	r0, #256	; 0x100
   13d4c:	movw	r1, #45300	; 0xb0f4
   13d50:	movt	r1, #2
   13d54:	str	r0, [r1]
   13d58:	movw	r0, #45452	; 0xb18c
   13d5c:	movt	r0, #2
   13d60:	str	r0, [r1, #4]
   13d64:	ldr	r0, [sp, #4]
   13d68:	movw	r1, #45300	; 0xb0f4
   13d6c:	movt	r1, #2
   13d70:	cmp	r0, r1
   13d74:	beq	13d94 <__assert_fail@plt+0x2da0>
   13d78:	ldr	r0, [sp, #4]
   13d7c:	bl	181fc <__assert_fail@plt+0x7208>
   13d80:	movw	r0, #45292	; 0xb0ec
   13d84:	movt	r0, #2
   13d88:	movw	r1, #45300	; 0xb0f4
   13d8c:	movt	r1, #2
   13d90:	str	r1, [r0]
   13d94:	movw	r0, #45296	; 0xb0f0
   13d98:	movt	r0, #2
   13d9c:	movw	r1, #1
   13da0:	str	r1, [r0]
   13da4:	mov	sp, fp
   13da8:	pop	{fp, pc}
   13dac:	push	{fp, lr}
   13db0:	mov	fp, sp
   13db4:	sub	sp, sp, #8
   13db8:	str	r0, [sp, #4]
   13dbc:	str	r1, [sp]
   13dc0:	ldr	r0, [sp, #4]
   13dc4:	ldr	r1, [sp]
   13dc8:	mvn	r2, #0
   13dcc:	movw	r3, #45404	; 0xb15c
   13dd0:	movt	r3, #2
   13dd4:	bl	13de0 <__assert_fail@plt+0x2dec>
   13dd8:	mov	sp, fp
   13ddc:	pop	{fp, pc}
   13de0:	push	{r4, r5, r6, sl, fp, lr}
   13de4:	add	fp, sp, #16
   13de8:	sub	sp, sp, #80	; 0x50
   13dec:	str	r0, [fp, #-20]	; 0xffffffec
   13df0:	str	r1, [fp, #-24]	; 0xffffffe8
   13df4:	str	r2, [fp, #-28]	; 0xffffffe4
   13df8:	str	r3, [fp, #-32]	; 0xffffffe0
   13dfc:	bl	10f28 <__errno_location@plt>
   13e00:	ldr	r1, [pc, #672]	; 140a8 <__assert_fail@plt+0x30b4>
   13e04:	ldr	r0, [r0]
   13e08:	str	r0, [fp, #-36]	; 0xffffffdc
   13e0c:	movw	r0, #45292	; 0xb0ec
   13e10:	movt	r0, #2
   13e14:	ldr	r0, [r0]
   13e18:	str	r0, [fp, #-40]	; 0xffffffd8
   13e1c:	str	r1, [fp, #-44]	; 0xffffffd4
   13e20:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e24:	movw	r1, #0
   13e28:	cmp	r1, r0
   13e2c:	bgt	13e40 <__assert_fail@plt+0x2e4c>
   13e30:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e38:	cmp	r0, r1
   13e3c:	blt	13e44 <__assert_fail@plt+0x2e50>
   13e40:	bl	10fdc <abort@plt>
   13e44:	movw	r0, #45296	; 0xb0f0
   13e48:	movt	r0, #2
   13e4c:	ldr	r0, [r0]
   13e50:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e54:	cmp	r0, r1
   13e58:	bgt	13f50 <__assert_fail@plt+0x2f5c>
   13e5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e60:	movw	r1, #45300	; 0xb0f4
   13e64:	movt	r1, #2
   13e68:	cmp	r0, r1
   13e6c:	movw	r0, #0
   13e70:	moveq	r0, #1
   13e74:	and	r0, r0, #1
   13e78:	strb	r0, [fp, #-45]	; 0xffffffd3
   13e7c:	movw	r0, #45296	; 0xb0f0
   13e80:	movt	r0, #2
   13e84:	ldr	r0, [r0]
   13e88:	str	r0, [sp, #44]	; 0x2c
   13e8c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13e90:	tst	r0, #1
   13e94:	beq	13ea4 <__assert_fail@plt+0x2eb0>
   13e98:	movw	r0, #0
   13e9c:	str	r0, [sp, #24]
   13ea0:	b	13eac <__assert_fail@plt+0x2eb8>
   13ea4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ea8:	str	r0, [sp, #24]
   13eac:	ldr	r0, [sp, #24]
   13eb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13eb4:	movw	r2, #45296	; 0xb0f0
   13eb8:	movt	r2, #2
   13ebc:	ldr	r2, [r2]
   13ec0:	sub	r1, r1, r2
   13ec4:	add	r2, r1, #1
   13ec8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13ecc:	add	r1, sp, #44	; 0x2c
   13ed0:	movw	ip, #8
   13ed4:	str	ip, [sp]
   13ed8:	bl	15258 <__assert_fail@plt+0x4264>
   13edc:	str	r0, [fp, #-40]	; 0xffffffd8
   13ee0:	movw	r1, #45292	; 0xb0ec
   13ee4:	movt	r1, #2
   13ee8:	str	r0, [r1]
   13eec:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13ef0:	tst	r0, #1
   13ef4:	beq	13f14 <__assert_fail@plt+0x2f20>
   13ef8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13efc:	movw	r1, #45300	; 0xb0f4
   13f00:	movt	r1, #2
   13f04:	ldr	r2, [r1]
   13f08:	str	r2, [r0]
   13f0c:	ldr	r1, [r1, #4]
   13f10:	str	r1, [r0, #4]
   13f14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f18:	movw	r1, #45296	; 0xb0f0
   13f1c:	movt	r1, #2
   13f20:	ldr	r1, [r1]
   13f24:	add	r0, r0, r1, lsl #3
   13f28:	ldr	r2, [sp, #44]	; 0x2c
   13f2c:	sub	r1, r2, r1
   13f30:	lsl	r2, r1, #3
   13f34:	movw	r1, #0
   13f38:	and	r1, r1, #255	; 0xff
   13f3c:	bl	10f40 <memset@plt>
   13f40:	ldr	r0, [sp, #44]	; 0x2c
   13f44:	movw	r1, #45296	; 0xb0f0
   13f48:	movt	r1, #2
   13f4c:	str	r0, [r1]
   13f50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f54:	ldr	r1, [fp, #-20]	; 0xffffffec
   13f58:	ldr	r0, [r0, r1, lsl #3]
   13f5c:	str	r0, [sp, #40]	; 0x28
   13f60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f64:	ldr	r1, [fp, #-20]	; 0xffffffec
   13f68:	add	r0, r0, r1, lsl #3
   13f6c:	ldr	r0, [r0, #4]
   13f70:	str	r0, [sp, #36]	; 0x24
   13f74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f78:	ldr	r0, [r0, #4]
   13f7c:	orr	r0, r0, #1
   13f80:	str	r0, [sp, #32]
   13f84:	ldr	r0, [sp, #36]	; 0x24
   13f88:	ldr	r1, [sp, #40]	; 0x28
   13f8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13f90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f94:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13f98:	ldr	ip, [ip]
   13f9c:	ldr	lr, [sp, #32]
   13fa0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13fa4:	add	r4, r4, #8
   13fa8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13fac:	ldr	r5, [r5, #40]	; 0x28
   13fb0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13fb4:	ldr	r6, [r6, #44]	; 0x2c
   13fb8:	str	ip, [sp]
   13fbc:	str	lr, [sp, #4]
   13fc0:	str	r4, [sp, #8]
   13fc4:	str	r5, [sp, #12]
   13fc8:	str	r6, [sp, #16]
   13fcc:	bl	123d0 <__assert_fail@plt+0x13dc>
   13fd0:	str	r0, [sp, #28]
   13fd4:	ldr	r0, [sp, #40]	; 0x28
   13fd8:	ldr	r1, [sp, #28]
   13fdc:	cmp	r0, r1
   13fe0:	bhi	14088 <__assert_fail@plt+0x3094>
   13fe4:	ldr	r0, [sp, #28]
   13fe8:	add	r0, r0, #1
   13fec:	str	r0, [sp, #40]	; 0x28
   13ff0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13ff4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ff8:	add	r1, r1, r2, lsl #3
   13ffc:	str	r0, [r1]
   14000:	ldr	r0, [sp, #36]	; 0x24
   14004:	movw	r1, #45452	; 0xb18c
   14008:	movt	r1, #2
   1400c:	cmp	r0, r1
   14010:	beq	1401c <__assert_fail@plt+0x3028>
   14014:	ldr	r0, [sp, #36]	; 0x24
   14018:	bl	181fc <__assert_fail@plt+0x7208>
   1401c:	ldr	r0, [sp, #40]	; 0x28
   14020:	bl	1501c <__assert_fail@plt+0x4028>
   14024:	mov	r1, r0
   14028:	str	r0, [sp, #36]	; 0x24
   1402c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14030:	ldr	r2, [fp, #-20]	; 0xffffffec
   14034:	add	r0, r0, r2, lsl #3
   14038:	str	r1, [r0, #4]
   1403c:	ldr	r0, [sp, #36]	; 0x24
   14040:	ldr	r1, [sp, #40]	; 0x28
   14044:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14048:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1404c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14050:	ldr	ip, [ip]
   14054:	ldr	lr, [sp, #32]
   14058:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1405c:	add	r4, r4, #8
   14060:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14064:	ldr	r5, [r5, #40]	; 0x28
   14068:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1406c:	ldr	r6, [r6, #44]	; 0x2c
   14070:	str	ip, [sp]
   14074:	str	lr, [sp, #4]
   14078:	str	r4, [sp, #8]
   1407c:	str	r5, [sp, #12]
   14080:	str	r6, [sp, #16]
   14084:	bl	123d0 <__assert_fail@plt+0x13dc>
   14088:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1408c:	str	r0, [sp, #20]
   14090:	bl	10f28 <__errno_location@plt>
   14094:	ldr	r1, [sp, #20]
   14098:	str	r1, [r0]
   1409c:	ldr	r0, [sp, #36]	; 0x24
   140a0:	sub	sp, fp, #16
   140a4:	pop	{r4, r5, r6, sl, fp, pc}
   140a8:	svcvc	0x00ffffff
   140ac:	push	{fp, lr}
   140b0:	mov	fp, sp
   140b4:	sub	sp, sp, #16
   140b8:	str	r0, [fp, #-4]
   140bc:	str	r1, [sp, #8]
   140c0:	str	r2, [sp, #4]
   140c4:	ldr	r0, [fp, #-4]
   140c8:	ldr	r1, [sp, #8]
   140cc:	ldr	r2, [sp, #4]
   140d0:	movw	r3, #45404	; 0xb15c
   140d4:	movt	r3, #2
   140d8:	bl	13de0 <__assert_fail@plt+0x2dec>
   140dc:	mov	sp, fp
   140e0:	pop	{fp, pc}
   140e4:	push	{fp, lr}
   140e8:	mov	fp, sp
   140ec:	sub	sp, sp, #8
   140f0:	str	r0, [sp, #4]
   140f4:	ldr	r1, [sp, #4]
   140f8:	movw	r0, #0
   140fc:	bl	13dac <__assert_fail@plt+0x2db8>
   14100:	mov	sp, fp
   14104:	pop	{fp, pc}
   14108:	push	{fp, lr}
   1410c:	mov	fp, sp
   14110:	sub	sp, sp, #8
   14114:	str	r0, [sp, #4]
   14118:	str	r1, [sp]
   1411c:	ldr	r1, [sp, #4]
   14120:	ldr	r2, [sp]
   14124:	movw	r0, #0
   14128:	bl	140ac <__assert_fail@plt+0x30b8>
   1412c:	mov	sp, fp
   14130:	pop	{fp, pc}
   14134:	push	{fp, lr}
   14138:	mov	fp, sp
   1413c:	sub	sp, sp, #64	; 0x40
   14140:	str	r0, [fp, #-4]
   14144:	str	r1, [fp, #-8]
   14148:	str	r2, [fp, #-12]
   1414c:	ldr	r1, [fp, #-8]
   14150:	add	r0, sp, #4
   14154:	bl	14174 <__assert_fail@plt+0x3180>
   14158:	ldr	r0, [fp, #-4]
   1415c:	ldr	r1, [fp, #-12]
   14160:	mvn	r2, #0
   14164:	add	r3, sp, #4
   14168:	bl	13de0 <__assert_fail@plt+0x2dec>
   1416c:	mov	sp, fp
   14170:	pop	{fp, pc}
   14174:	push	{fp, lr}
   14178:	mov	fp, sp
   1417c:	sub	sp, sp, #8
   14180:	str	r1, [sp, #4]
   14184:	mov	r1, r0
   14188:	str	r0, [sp]
   1418c:	mov	r0, r1
   14190:	movw	r1, #0
   14194:	and	r1, r1, #255	; 0xff
   14198:	movw	r2, #48	; 0x30
   1419c:	bl	10f40 <memset@plt>
   141a0:	ldr	r0, [sp, #4]
   141a4:	cmp	r0, #10
   141a8:	bne	141b0 <__assert_fail@plt+0x31bc>
   141ac:	bl	10fdc <abort@plt>
   141b0:	ldr	r0, [sp, #4]
   141b4:	ldr	r1, [sp]
   141b8:	str	r0, [r1]
   141bc:	mov	sp, fp
   141c0:	pop	{fp, pc}
   141c4:	push	{fp, lr}
   141c8:	mov	fp, sp
   141cc:	sub	sp, sp, #64	; 0x40
   141d0:	str	r0, [fp, #-4]
   141d4:	str	r1, [fp, #-8]
   141d8:	str	r2, [fp, #-12]
   141dc:	str	r3, [fp, #-16]
   141e0:	ldr	r1, [fp, #-8]
   141e4:	mov	r0, sp
   141e8:	bl	14174 <__assert_fail@plt+0x3180>
   141ec:	ldr	r0, [fp, #-4]
   141f0:	ldr	r1, [fp, #-12]
   141f4:	ldr	r2, [fp, #-16]
   141f8:	mov	r3, sp
   141fc:	bl	13de0 <__assert_fail@plt+0x2dec>
   14200:	mov	sp, fp
   14204:	pop	{fp, pc}
   14208:	push	{fp, lr}
   1420c:	mov	fp, sp
   14210:	sub	sp, sp, #8
   14214:	str	r0, [sp, #4]
   14218:	str	r1, [sp]
   1421c:	ldr	r1, [sp, #4]
   14220:	ldr	r2, [sp]
   14224:	movw	r0, #0
   14228:	bl	14134 <__assert_fail@plt+0x3140>
   1422c:	mov	sp, fp
   14230:	pop	{fp, pc}
   14234:	push	{fp, lr}
   14238:	mov	fp, sp
   1423c:	sub	sp, sp, #16
   14240:	str	r0, [fp, #-4]
   14244:	str	r1, [sp, #8]
   14248:	str	r2, [sp, #4]
   1424c:	ldr	r1, [fp, #-4]
   14250:	ldr	r2, [sp, #8]
   14254:	ldr	r3, [sp, #4]
   14258:	movw	r0, #0
   1425c:	bl	141c4 <__assert_fail@plt+0x31d0>
   14260:	mov	sp, fp
   14264:	pop	{fp, pc}
   14268:	push	{fp, lr}
   1426c:	mov	fp, sp
   14270:	sub	sp, sp, #72	; 0x48
   14274:	movw	r3, #45404	; 0xb15c
   14278:	movt	r3, #2
   1427c:	str	r0, [fp, #-4]
   14280:	str	r1, [fp, #-8]
   14284:	strb	r2, [fp, #-9]
   14288:	add	r0, sp, #12
   1428c:	mov	r1, r0
   14290:	str	r0, [sp, #8]
   14294:	mov	r0, r1
   14298:	mov	r1, r3
   1429c:	movw	r2, #48	; 0x30
   142a0:	bl	10e08 <memcpy@plt>
   142a4:	ldr	r0, [sp, #8]
   142a8:	ldrb	r1, [fp, #-9]
   142ac:	movw	r2, #1
   142b0:	bl	12178 <__assert_fail@plt+0x1184>
   142b4:	ldr	r1, [fp, #-4]
   142b8:	ldr	r2, [fp, #-8]
   142bc:	movw	r3, #0
   142c0:	str	r0, [sp, #4]
   142c4:	mov	r0, r3
   142c8:	add	r3, sp, #12
   142cc:	bl	13de0 <__assert_fail@plt+0x2dec>
   142d0:	mov	sp, fp
   142d4:	pop	{fp, pc}
   142d8:	push	{fp, lr}
   142dc:	mov	fp, sp
   142e0:	sub	sp, sp, #8
   142e4:	str	r0, [sp, #4]
   142e8:	strb	r1, [sp, #3]
   142ec:	ldr	r0, [sp, #4]
   142f0:	mvn	r1, #0
   142f4:	ldrb	r2, [sp, #3]
   142f8:	bl	14268 <__assert_fail@plt+0x3274>
   142fc:	mov	sp, fp
   14300:	pop	{fp, pc}
   14304:	push	{fp, lr}
   14308:	mov	fp, sp
   1430c:	sub	sp, sp, #8
   14310:	str	r0, [sp, #4]
   14314:	ldr	r0, [sp, #4]
   14318:	movw	r1, #58	; 0x3a
   1431c:	and	r1, r1, #255	; 0xff
   14320:	bl	142d8 <__assert_fail@plt+0x32e4>
   14324:	mov	sp, fp
   14328:	pop	{fp, pc}
   1432c:	push	{fp, lr}
   14330:	mov	fp, sp
   14334:	sub	sp, sp, #8
   14338:	str	r0, [sp, #4]
   1433c:	str	r1, [sp]
   14340:	ldr	r0, [sp, #4]
   14344:	ldr	r1, [sp]
   14348:	movw	r2, #58	; 0x3a
   1434c:	and	r2, r2, #255	; 0xff
   14350:	bl	14268 <__assert_fail@plt+0x3274>
   14354:	mov	sp, fp
   14358:	pop	{fp, pc}
   1435c:	push	{fp, lr}
   14360:	mov	fp, sp
   14364:	sub	sp, sp, #120	; 0x78
   14368:	str	r0, [fp, #-4]
   1436c:	str	r1, [fp, #-8]
   14370:	str	r2, [fp, #-12]
   14374:	ldr	r1, [fp, #-8]
   14378:	add	r0, sp, #12
   1437c:	bl	14174 <__assert_fail@plt+0x3180>
   14380:	add	r0, sp, #60	; 0x3c
   14384:	mov	r1, r0
   14388:	add	r2, sp, #12
   1438c:	str	r0, [sp, #8]
   14390:	mov	r0, r1
   14394:	mov	r1, r2
   14398:	movw	r2, #48	; 0x30
   1439c:	bl	10e08 <memcpy@plt>
   143a0:	ldr	r0, [sp, #8]
   143a4:	movw	r1, #58	; 0x3a
   143a8:	and	r1, r1, #255	; 0xff
   143ac:	movw	r2, #1
   143b0:	bl	12178 <__assert_fail@plt+0x1184>
   143b4:	ldr	r1, [fp, #-4]
   143b8:	ldr	r2, [fp, #-12]
   143bc:	str	r0, [sp, #4]
   143c0:	mov	r0, r1
   143c4:	mov	r1, r2
   143c8:	mvn	r2, #0
   143cc:	add	r3, sp, #60	; 0x3c
   143d0:	bl	13de0 <__assert_fail@plt+0x2dec>
   143d4:	mov	sp, fp
   143d8:	pop	{fp, pc}
   143dc:	push	{fp, lr}
   143e0:	mov	fp, sp
   143e4:	sub	sp, sp, #24
   143e8:	str	r0, [fp, #-4]
   143ec:	str	r1, [fp, #-8]
   143f0:	str	r2, [sp, #12]
   143f4:	str	r3, [sp, #8]
   143f8:	ldr	r0, [fp, #-4]
   143fc:	ldr	r1, [fp, #-8]
   14400:	ldr	r2, [sp, #12]
   14404:	ldr	r3, [sp, #8]
   14408:	mvn	ip, #0
   1440c:	str	ip, [sp]
   14410:	bl	1441c <__assert_fail@plt+0x3428>
   14414:	mov	sp, fp
   14418:	pop	{fp, pc}
   1441c:	push	{fp, lr}
   14420:	mov	fp, sp
   14424:	sub	sp, sp, #72	; 0x48
   14428:	ldr	ip, [fp, #8]
   1442c:	movw	lr, #45404	; 0xb15c
   14430:	movt	lr, #2
   14434:	str	r0, [fp, #-4]
   14438:	str	r1, [fp, #-8]
   1443c:	str	r2, [fp, #-12]
   14440:	str	r3, [fp, #-16]
   14444:	add	r0, sp, #8
   14448:	mov	r1, r0
   1444c:	str	r0, [sp, #4]
   14450:	mov	r0, r1
   14454:	mov	r1, lr
   14458:	movw	r2, #48	; 0x30
   1445c:	str	ip, [sp]
   14460:	bl	10e08 <memcpy@plt>
   14464:	ldr	r1, [fp, #-8]
   14468:	ldr	r2, [fp, #-12]
   1446c:	ldr	r0, [sp, #4]
   14470:	bl	12278 <__assert_fail@plt+0x1284>
   14474:	ldr	r0, [fp, #-4]
   14478:	ldr	r1, [fp, #-16]
   1447c:	ldr	r2, [fp, #8]
   14480:	add	r3, sp, #8
   14484:	bl	13de0 <__assert_fail@plt+0x2dec>
   14488:	mov	sp, fp
   1448c:	pop	{fp, pc}
   14490:	push	{fp, lr}
   14494:	mov	fp, sp
   14498:	sub	sp, sp, #16
   1449c:	str	r0, [fp, #-4]
   144a0:	str	r1, [sp, #8]
   144a4:	str	r2, [sp, #4]
   144a8:	ldr	r1, [fp, #-4]
   144ac:	ldr	r2, [sp, #8]
   144b0:	ldr	r3, [sp, #4]
   144b4:	movw	r0, #0
   144b8:	bl	143dc <__assert_fail@plt+0x33e8>
   144bc:	mov	sp, fp
   144c0:	pop	{fp, pc}
   144c4:	push	{fp, lr}
   144c8:	mov	fp, sp
   144cc:	sub	sp, sp, #24
   144d0:	str	r0, [fp, #-4]
   144d4:	str	r1, [fp, #-8]
   144d8:	str	r2, [sp, #12]
   144dc:	str	r3, [sp, #8]
   144e0:	ldr	r1, [fp, #-4]
   144e4:	ldr	r2, [fp, #-8]
   144e8:	ldr	r3, [sp, #12]
   144ec:	ldr	r0, [sp, #8]
   144f0:	movw	ip, #0
   144f4:	str	r0, [sp, #4]
   144f8:	mov	r0, ip
   144fc:	ldr	ip, [sp, #4]
   14500:	str	ip, [sp]
   14504:	bl	1441c <__assert_fail@plt+0x3428>
   14508:	mov	sp, fp
   1450c:	pop	{fp, pc}
   14510:	push	{fp, lr}
   14514:	mov	fp, sp
   14518:	sub	sp, sp, #16
   1451c:	str	r0, [fp, #-4]
   14520:	str	r1, [sp, #8]
   14524:	str	r2, [sp, #4]
   14528:	ldr	r0, [fp, #-4]
   1452c:	ldr	r1, [sp, #8]
   14530:	ldr	r2, [sp, #4]
   14534:	movw	r3, #45308	; 0xb0fc
   14538:	movt	r3, #2
   1453c:	bl	13de0 <__assert_fail@plt+0x2dec>
   14540:	mov	sp, fp
   14544:	pop	{fp, pc}
   14548:	push	{fp, lr}
   1454c:	mov	fp, sp
   14550:	sub	sp, sp, #8
   14554:	str	r0, [sp, #4]
   14558:	str	r1, [sp]
   1455c:	ldr	r1, [sp, #4]
   14560:	ldr	r2, [sp]
   14564:	movw	r0, #0
   14568:	bl	14510 <__assert_fail@plt+0x351c>
   1456c:	mov	sp, fp
   14570:	pop	{fp, pc}
   14574:	push	{fp, lr}
   14578:	mov	fp, sp
   1457c:	sub	sp, sp, #8
   14580:	str	r0, [sp, #4]
   14584:	str	r1, [sp]
   14588:	ldr	r0, [sp, #4]
   1458c:	ldr	r1, [sp]
   14590:	mvn	r2, #0
   14594:	bl	14510 <__assert_fail@plt+0x351c>
   14598:	mov	sp, fp
   1459c:	pop	{fp, pc}
   145a0:	push	{fp, lr}
   145a4:	mov	fp, sp
   145a8:	sub	sp, sp, #8
   145ac:	str	r0, [sp, #4]
   145b0:	ldr	r1, [sp, #4]
   145b4:	movw	r0, #0
   145b8:	bl	14574 <__assert_fail@plt+0x3580>
   145bc:	mov	sp, fp
   145c0:	pop	{fp, pc}
   145c4:	push	{fp, lr}
   145c8:	mov	fp, sp
   145cc:	sub	sp, sp, #24
   145d0:	str	r0, [fp, #-8]
   145d4:	str	r1, [sp, #12]
   145d8:	ldr	r0, [fp, #-8]
   145dc:	bl	10f04 <gettext@plt>
   145e0:	str	r0, [sp, #8]
   145e4:	ldr	r0, [sp, #8]
   145e8:	ldr	r1, [fp, #-8]
   145ec:	cmp	r0, r1
   145f0:	beq	14600 <__assert_fail@plt+0x360c>
   145f4:	ldr	r0, [sp, #8]
   145f8:	str	r0, [fp, #-4]
   145fc:	b	146cc <__assert_fail@plt+0x36d8>
   14600:	bl	18518 <__assert_fail@plt+0x7524>
   14604:	str	r0, [sp, #4]
   14608:	ldr	r0, [sp, #4]
   1460c:	movw	r1, #43526	; 0xaa06
   14610:	movt	r1, #1
   14614:	bl	17edc <__assert_fail@plt+0x6ee8>
   14618:	cmp	r0, #0
   1461c:	bne	14654 <__assert_fail@plt+0x3660>
   14620:	ldr	r0, [fp, #-8]
   14624:	ldrb	r0, [r0]
   14628:	cmp	r0, #96	; 0x60
   1462c:	movw	r0, #0
   14630:	moveq	r0, #1
   14634:	tst	r0, #1
   14638:	movw	r0, #43536	; 0xaa10
   1463c:	movt	r0, #1
   14640:	movw	r1, #43532	; 0xaa0c
   14644:	movt	r1, #1
   14648:	movne	r0, r1
   1464c:	str	r0, [fp, #-4]
   14650:	b	146cc <__assert_fail@plt+0x36d8>
   14654:	ldr	r0, [sp, #4]
   14658:	movw	r1, #43540	; 0xaa14
   1465c:	movt	r1, #1
   14660:	bl	17edc <__assert_fail@plt+0x6ee8>
   14664:	cmp	r0, #0
   14668:	bne	146a0 <__assert_fail@plt+0x36ac>
   1466c:	ldr	r0, [fp, #-8]
   14670:	ldrb	r0, [r0]
   14674:	cmp	r0, #96	; 0x60
   14678:	movw	r0, #0
   1467c:	moveq	r0, #1
   14680:	tst	r0, #1
   14684:	movw	r0, #43552	; 0xaa20
   14688:	movt	r0, #1
   1468c:	movw	r1, #43548	; 0xaa1c
   14690:	movt	r1, #1
   14694:	movne	r0, r1
   14698:	str	r0, [fp, #-4]
   1469c:	b	146cc <__assert_fail@plt+0x36d8>
   146a0:	ldr	r0, [sp, #12]
   146a4:	cmp	r0, #9
   146a8:	movw	r0, #0
   146ac:	moveq	r0, #1
   146b0:	tst	r0, #1
   146b4:	movw	r0, #43524	; 0xaa04
   146b8:	movt	r0, #1
   146bc:	movw	r1, #43111	; 0xa867
   146c0:	movt	r1, #1
   146c4:	movne	r0, r1
   146c8:	str	r0, [fp, #-4]
   146cc:	ldr	r0, [fp, #-4]
   146d0:	mov	sp, fp
   146d4:	pop	{fp, pc}
   146d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146dc:	add	fp, sp, #28
   146e0:	sub	sp, sp, #196	; 0xc4
   146e4:	ldr	ip, [fp, #12]
   146e8:	ldr	lr, [fp, #8]
   146ec:	str	r0, [fp, #-32]	; 0xffffffe0
   146f0:	str	r1, [fp, #-36]	; 0xffffffdc
   146f4:	str	r2, [fp, #-40]	; 0xffffffd8
   146f8:	str	r3, [fp, #-44]	; 0xffffffd4
   146fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14700:	movw	r1, #0
   14704:	cmp	r0, r1
   14708:	beq	1473c <__assert_fail@plt+0x3748>
   1470c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14710:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14714:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14718:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1471c:	movw	ip, #43640	; 0xaa78
   14720:	movt	ip, #1
   14724:	str	r1, [fp, #-48]	; 0xffffffd0
   14728:	mov	r1, ip
   1472c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   14730:	str	ip, [sp]
   14734:	bl	10f1c <fprintf@plt>
   14738:	b	14754 <__assert_fail@plt+0x3760>
   1473c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14740:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14744:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14748:	movw	r1, #43652	; 0xaa84
   1474c:	movt	r1, #1
   14750:	bl	10f1c <fprintf@plt>
   14754:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14758:	movw	r1, #43659	; 0xaa8b
   1475c:	movt	r1, #1
   14760:	str	r0, [fp, #-52]	; 0xffffffcc
   14764:	mov	r0, r1
   14768:	bl	10f04 <gettext@plt>
   1476c:	movw	r1, #44377	; 0xad59
   14770:	movt	r1, #1
   14774:	movw	r3, #2022	; 0x7e6
   14778:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1477c:	str	r0, [fp, #-56]	; 0xffffffc8
   14780:	mov	r0, r2
   14784:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14788:	bl	10f1c <fprintf@plt>
   1478c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14790:	movw	r2, #42296	; 0xa538
   14794:	movt	r2, #1
   14798:	str	r0, [fp, #-60]	; 0xffffffc4
   1479c:	mov	r0, r2
   147a0:	str	r2, [fp, #-64]	; 0xffffffc0
   147a4:	bl	10da8 <fputs_unlocked@plt>
   147a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   147ac:	movw	r2, #43663	; 0xaa8f
   147b0:	movt	r2, #1
   147b4:	str	r0, [fp, #-68]	; 0xffffffbc
   147b8:	mov	r0, r2
   147bc:	str	r1, [fp, #-72]	; 0xffffffb8
   147c0:	bl	10f04 <gettext@plt>
   147c4:	movw	r2, #43834	; 0xab3a
   147c8:	movt	r2, #1
   147cc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   147d0:	str	r0, [fp, #-76]	; 0xffffffb4
   147d4:	mov	r0, r1
   147d8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   147dc:	bl	10f1c <fprintf@plt>
   147e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   147e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   147e8:	str	r0, [fp, #-80]	; 0xffffffb0
   147ec:	mov	r0, r2
   147f0:	bl	10da8 <fputs_unlocked@plt>
   147f4:	ldr	r1, [fp, #12]
   147f8:	cmp	r1, #9
   147fc:	str	r1, [fp, #-84]	; 0xffffffac
   14800:	bhi	14c1c <__assert_fail@plt+0x3c28>
   14804:	add	r0, pc, #8
   14808:	ldr	r1, [fp, #-84]	; 0xffffffac
   1480c:	ldr	r0, [r0, r1, lsl #2]
   14810:	mov	pc, r0
   14814:	andeq	r4, r1, ip, lsr r8
   14818:	andeq	r4, r1, r0, asr #16
   1481c:	andeq	r4, r1, r8, ror r8
   14820:			; <UNDEFINED> instruction: 0x000148b8
   14824:	andeq	r4, r1, r0, lsl r9
   14828:	andeq	r4, r1, r4, ror r9
   1482c:	andeq	r4, r1, r4, ror #19
   14830:	andeq	r4, r1, r0, ror #20
   14834:	andeq	r4, r1, r8, ror #21
   14838:	andeq	r4, r1, ip, ror fp
   1483c:	b	14cb8 <__assert_fail@plt+0x3cc4>
   14840:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14844:	movw	r1, #43868	; 0xab5c
   14848:	movt	r1, #1
   1484c:	str	r0, [fp, #-88]	; 0xffffffa8
   14850:	mov	r0, r1
   14854:	bl	10f04 <gettext@plt>
   14858:	ldr	r1, [fp, #8]
   1485c:	ldr	r2, [r1]
   14860:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14864:	str	r0, [fp, #-92]	; 0xffffffa4
   14868:	mov	r0, r1
   1486c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14870:	bl	10f1c <fprintf@plt>
   14874:	b	14cb8 <__assert_fail@plt+0x3cc4>
   14878:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1487c:	movw	r1, #43884	; 0xab6c
   14880:	movt	r1, #1
   14884:	str	r0, [fp, #-96]	; 0xffffffa0
   14888:	mov	r0, r1
   1488c:	bl	10f04 <gettext@plt>
   14890:	ldr	r1, [fp, #8]
   14894:	ldr	r2, [r1]
   14898:	ldr	r1, [fp, #8]
   1489c:	ldr	r3, [r1, #4]
   148a0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   148a4:	str	r0, [fp, #-100]	; 0xffffff9c
   148a8:	mov	r0, r1
   148ac:	ldr	r1, [fp, #-100]	; 0xffffff9c
   148b0:	bl	10f1c <fprintf@plt>
   148b4:	b	14cb8 <__assert_fail@plt+0x3cc4>
   148b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148bc:	movw	r1, #43907	; 0xab83
   148c0:	movt	r1, #1
   148c4:	str	r0, [fp, #-104]	; 0xffffff98
   148c8:	mov	r0, r1
   148cc:	bl	10f04 <gettext@plt>
   148d0:	ldr	r1, [fp, #8]
   148d4:	ldr	r2, [r1]
   148d8:	ldr	r1, [fp, #8]
   148dc:	ldr	r3, [r1, #4]
   148e0:	ldr	r1, [fp, #8]
   148e4:	ldr	r1, [r1, #8]
   148e8:	ldr	ip, [fp, #-104]	; 0xffffff98
   148ec:	str	r0, [fp, #-108]	; 0xffffff94
   148f0:	mov	r0, ip
   148f4:	ldr	lr, [fp, #-108]	; 0xffffff94
   148f8:	str	r1, [sp, #112]	; 0x70
   148fc:	mov	r1, lr
   14900:	ldr	r4, [sp, #112]	; 0x70
   14904:	str	r4, [sp]
   14908:	bl	10f1c <fprintf@plt>
   1490c:	b	14cb8 <__assert_fail@plt+0x3cc4>
   14910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14914:	movw	r1, #43935	; 0xab9f
   14918:	movt	r1, #1
   1491c:	str	r0, [sp, #108]	; 0x6c
   14920:	mov	r0, r1
   14924:	bl	10f04 <gettext@plt>
   14928:	ldr	r1, [fp, #8]
   1492c:	ldr	r2, [r1]
   14930:	ldr	r1, [fp, #8]
   14934:	ldr	r3, [r1, #4]
   14938:	ldr	r1, [fp, #8]
   1493c:	ldr	r1, [r1, #8]
   14940:	ldr	ip, [fp, #8]
   14944:	ldr	ip, [ip, #12]
   14948:	ldr	lr, [sp, #108]	; 0x6c
   1494c:	str	r0, [sp, #104]	; 0x68
   14950:	mov	r0, lr
   14954:	ldr	r4, [sp, #104]	; 0x68
   14958:	str	r1, [sp, #100]	; 0x64
   1495c:	mov	r1, r4
   14960:	ldr	r5, [sp, #100]	; 0x64
   14964:	str	r5, [sp]
   14968:	str	ip, [sp, #4]
   1496c:	bl	10f1c <fprintf@plt>
   14970:	b	14cb8 <__assert_fail@plt+0x3cc4>
   14974:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14978:	movw	r1, #43967	; 0xabbf
   1497c:	movt	r1, #1
   14980:	str	r0, [sp, #96]	; 0x60
   14984:	mov	r0, r1
   14988:	bl	10f04 <gettext@plt>
   1498c:	ldr	r1, [fp, #8]
   14990:	ldr	r2, [r1]
   14994:	ldr	r1, [fp, #8]
   14998:	ldr	r3, [r1, #4]
   1499c:	ldr	r1, [fp, #8]
   149a0:	ldr	r1, [r1, #8]
   149a4:	ldr	ip, [fp, #8]
   149a8:	ldr	ip, [ip, #12]
   149ac:	ldr	lr, [fp, #8]
   149b0:	ldr	lr, [lr, #16]
   149b4:	ldr	r4, [sp, #96]	; 0x60
   149b8:	str	r0, [sp, #92]	; 0x5c
   149bc:	mov	r0, r4
   149c0:	ldr	r5, [sp, #92]	; 0x5c
   149c4:	str	r1, [sp, #88]	; 0x58
   149c8:	mov	r1, r5
   149cc:	ldr	r6, [sp, #88]	; 0x58
   149d0:	str	r6, [sp]
   149d4:	str	ip, [sp, #4]
   149d8:	str	lr, [sp, #8]
   149dc:	bl	10f1c <fprintf@plt>
   149e0:	b	14cb8 <__assert_fail@plt+0x3cc4>
   149e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   149e8:	movw	r1, #44003	; 0xabe3
   149ec:	movt	r1, #1
   149f0:	str	r0, [sp, #84]	; 0x54
   149f4:	mov	r0, r1
   149f8:	bl	10f04 <gettext@plt>
   149fc:	ldr	r1, [fp, #8]
   14a00:	ldr	r2, [r1]
   14a04:	ldr	r1, [fp, #8]
   14a08:	ldr	r3, [r1, #4]
   14a0c:	ldr	r1, [fp, #8]
   14a10:	ldr	r1, [r1, #8]
   14a14:	ldr	ip, [fp, #8]
   14a18:	ldr	ip, [ip, #12]
   14a1c:	ldr	lr, [fp, #8]
   14a20:	ldr	lr, [lr, #16]
   14a24:	ldr	r4, [fp, #8]
   14a28:	ldr	r4, [r4, #20]
   14a2c:	ldr	r5, [sp, #84]	; 0x54
   14a30:	str	r0, [sp, #80]	; 0x50
   14a34:	mov	r0, r5
   14a38:	ldr	r6, [sp, #80]	; 0x50
   14a3c:	str	r1, [sp, #76]	; 0x4c
   14a40:	mov	r1, r6
   14a44:	ldr	r7, [sp, #76]	; 0x4c
   14a48:	str	r7, [sp]
   14a4c:	str	ip, [sp, #4]
   14a50:	str	lr, [sp, #8]
   14a54:	str	r4, [sp, #12]
   14a58:	bl	10f1c <fprintf@plt>
   14a5c:	b	14cb8 <__assert_fail@plt+0x3cc4>
   14a60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a64:	movw	r1, #44043	; 0xac0b
   14a68:	movt	r1, #1
   14a6c:	str	r0, [sp, #72]	; 0x48
   14a70:	mov	r0, r1
   14a74:	bl	10f04 <gettext@plt>
   14a78:	ldr	r1, [fp, #8]
   14a7c:	ldr	r2, [r1]
   14a80:	ldr	r1, [fp, #8]
   14a84:	ldr	r3, [r1, #4]
   14a88:	ldr	r1, [fp, #8]
   14a8c:	ldr	r1, [r1, #8]
   14a90:	ldr	ip, [fp, #8]
   14a94:	ldr	ip, [ip, #12]
   14a98:	ldr	lr, [fp, #8]
   14a9c:	ldr	lr, [lr, #16]
   14aa0:	ldr	r4, [fp, #8]
   14aa4:	ldr	r4, [r4, #20]
   14aa8:	ldr	r5, [fp, #8]
   14aac:	ldr	r5, [r5, #24]
   14ab0:	ldr	r6, [sp, #72]	; 0x48
   14ab4:	str	r0, [sp, #68]	; 0x44
   14ab8:	mov	r0, r6
   14abc:	ldr	r7, [sp, #68]	; 0x44
   14ac0:	str	r1, [sp, #64]	; 0x40
   14ac4:	mov	r1, r7
   14ac8:	ldr	r8, [sp, #64]	; 0x40
   14acc:	str	r8, [sp]
   14ad0:	str	ip, [sp, #4]
   14ad4:	str	lr, [sp, #8]
   14ad8:	str	r4, [sp, #12]
   14adc:	str	r5, [sp, #16]
   14ae0:	bl	10f1c <fprintf@plt>
   14ae4:	b	14cb8 <__assert_fail@plt+0x3cc4>
   14ae8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14aec:	movw	r1, #44087	; 0xac37
   14af0:	movt	r1, #1
   14af4:	str	r0, [sp, #60]	; 0x3c
   14af8:	mov	r0, r1
   14afc:	bl	10f04 <gettext@plt>
   14b00:	ldr	r1, [fp, #8]
   14b04:	ldr	r2, [r1]
   14b08:	ldr	r1, [fp, #8]
   14b0c:	ldr	r3, [r1, #4]
   14b10:	ldr	r1, [fp, #8]
   14b14:	ldr	r1, [r1, #8]
   14b18:	ldr	ip, [fp, #8]
   14b1c:	ldr	ip, [ip, #12]
   14b20:	ldr	lr, [fp, #8]
   14b24:	ldr	lr, [lr, #16]
   14b28:	ldr	r4, [fp, #8]
   14b2c:	ldr	r4, [r4, #20]
   14b30:	ldr	r5, [fp, #8]
   14b34:	ldr	r5, [r5, #24]
   14b38:	ldr	r6, [fp, #8]
   14b3c:	ldr	r6, [r6, #28]
   14b40:	ldr	r7, [sp, #60]	; 0x3c
   14b44:	str	r0, [sp, #56]	; 0x38
   14b48:	mov	r0, r7
   14b4c:	ldr	r8, [sp, #56]	; 0x38
   14b50:	str	r1, [sp, #52]	; 0x34
   14b54:	mov	r1, r8
   14b58:	ldr	r9, [sp, #52]	; 0x34
   14b5c:	str	r9, [sp]
   14b60:	str	ip, [sp, #4]
   14b64:	str	lr, [sp, #8]
   14b68:	str	r4, [sp, #12]
   14b6c:	str	r5, [sp, #16]
   14b70:	str	r6, [sp, #20]
   14b74:	bl	10f1c <fprintf@plt>
   14b78:	b	14cb8 <__assert_fail@plt+0x3cc4>
   14b7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b80:	movw	r1, #44135	; 0xac67
   14b84:	movt	r1, #1
   14b88:	str	r0, [sp, #48]	; 0x30
   14b8c:	mov	r0, r1
   14b90:	bl	10f04 <gettext@plt>
   14b94:	ldr	r1, [fp, #8]
   14b98:	ldr	r2, [r1]
   14b9c:	ldr	r1, [fp, #8]
   14ba0:	ldr	r3, [r1, #4]
   14ba4:	ldr	r1, [fp, #8]
   14ba8:	ldr	r1, [r1, #8]
   14bac:	ldr	ip, [fp, #8]
   14bb0:	ldr	ip, [ip, #12]
   14bb4:	ldr	lr, [fp, #8]
   14bb8:	ldr	lr, [lr, #16]
   14bbc:	ldr	r4, [fp, #8]
   14bc0:	ldr	r4, [r4, #20]
   14bc4:	ldr	r5, [fp, #8]
   14bc8:	ldr	r5, [r5, #24]
   14bcc:	ldr	r6, [fp, #8]
   14bd0:	ldr	r6, [r6, #28]
   14bd4:	ldr	r7, [fp, #8]
   14bd8:	ldr	r7, [r7, #32]
   14bdc:	ldr	r8, [sp, #48]	; 0x30
   14be0:	str	r0, [sp, #44]	; 0x2c
   14be4:	mov	r0, r8
   14be8:	ldr	r9, [sp, #44]	; 0x2c
   14bec:	str	r1, [sp, #40]	; 0x28
   14bf0:	mov	r1, r9
   14bf4:	ldr	sl, [sp, #40]	; 0x28
   14bf8:	str	sl, [sp]
   14bfc:	str	ip, [sp, #4]
   14c00:	str	lr, [sp, #8]
   14c04:	str	r4, [sp, #12]
   14c08:	str	r5, [sp, #16]
   14c0c:	str	r6, [sp, #20]
   14c10:	str	r7, [sp, #24]
   14c14:	bl	10f1c <fprintf@plt>
   14c18:	b	14cb8 <__assert_fail@plt+0x3cc4>
   14c1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c20:	movw	r1, #44187	; 0xac9b
   14c24:	movt	r1, #1
   14c28:	str	r0, [sp, #36]	; 0x24
   14c2c:	mov	r0, r1
   14c30:	bl	10f04 <gettext@plt>
   14c34:	ldr	r1, [fp, #8]
   14c38:	ldr	r2, [r1]
   14c3c:	ldr	r1, [fp, #8]
   14c40:	ldr	r3, [r1, #4]
   14c44:	ldr	r1, [fp, #8]
   14c48:	ldr	r1, [r1, #8]
   14c4c:	ldr	ip, [fp, #8]
   14c50:	ldr	ip, [ip, #12]
   14c54:	ldr	lr, [fp, #8]
   14c58:	ldr	lr, [lr, #16]
   14c5c:	ldr	r4, [fp, #8]
   14c60:	ldr	r4, [r4, #20]
   14c64:	ldr	r5, [fp, #8]
   14c68:	ldr	r5, [r5, #24]
   14c6c:	ldr	r6, [fp, #8]
   14c70:	ldr	r6, [r6, #28]
   14c74:	ldr	r7, [fp, #8]
   14c78:	ldr	r7, [r7, #32]
   14c7c:	ldr	r8, [sp, #36]	; 0x24
   14c80:	str	r0, [sp, #32]
   14c84:	mov	r0, r8
   14c88:	ldr	r9, [sp, #32]
   14c8c:	str	r1, [sp, #28]
   14c90:	mov	r1, r9
   14c94:	ldr	sl, [sp, #28]
   14c98:	str	sl, [sp]
   14c9c:	str	ip, [sp, #4]
   14ca0:	str	lr, [sp, #8]
   14ca4:	str	r4, [sp, #12]
   14ca8:	str	r5, [sp, #16]
   14cac:	str	r6, [sp, #20]
   14cb0:	str	r7, [sp, #24]
   14cb4:	bl	10f1c <fprintf@plt>
   14cb8:	sub	sp, fp, #28
   14cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cc0:	push	{fp, lr}
   14cc4:	mov	fp, sp
   14cc8:	sub	sp, sp, #32
   14ccc:	ldr	ip, [fp, #8]
   14cd0:	str	r0, [fp, #-4]
   14cd4:	str	r1, [fp, #-8]
   14cd8:	str	r2, [fp, #-12]
   14cdc:	str	r3, [sp, #16]
   14ce0:	movw	r0, #0
   14ce4:	str	r0, [sp, #12]
   14ce8:	ldr	r0, [fp, #8]
   14cec:	ldr	r1, [sp, #12]
   14cf0:	add	r0, r0, r1, lsl #2
   14cf4:	ldr	r0, [r0]
   14cf8:	movw	r1, #0
   14cfc:	cmp	r0, r1
   14d00:	beq	14d18 <__assert_fail@plt+0x3d24>
   14d04:	b	14d08 <__assert_fail@plt+0x3d14>
   14d08:	ldr	r0, [sp, #12]
   14d0c:	add	r0, r0, #1
   14d10:	str	r0, [sp, #12]
   14d14:	b	14ce8 <__assert_fail@plt+0x3cf4>
   14d18:	ldr	r0, [fp, #-4]
   14d1c:	ldr	r1, [fp, #-8]
   14d20:	ldr	r2, [fp, #-12]
   14d24:	ldr	r3, [sp, #16]
   14d28:	ldr	ip, [fp, #8]
   14d2c:	ldr	lr, [sp, #12]
   14d30:	str	ip, [sp]
   14d34:	str	lr, [sp, #4]
   14d38:	bl	146d8 <__assert_fail@plt+0x36e4>
   14d3c:	mov	sp, fp
   14d40:	pop	{fp, pc}
   14d44:	push	{fp, lr}
   14d48:	mov	fp, sp
   14d4c:	sub	sp, sp, #80	; 0x50
   14d50:	ldr	ip, [fp, #8]
   14d54:	str	ip, [fp, #-4]
   14d58:	str	r0, [fp, #-8]
   14d5c:	str	r1, [fp, #-12]
   14d60:	str	r2, [fp, #-16]
   14d64:	str	r3, [fp, #-20]	; 0xffffffec
   14d68:	movw	r0, #0
   14d6c:	str	r0, [fp, #-24]	; 0xffffffe8
   14d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d74:	cmp	r0, #10
   14d78:	movw	r0, #0
   14d7c:	str	r0, [sp, #12]
   14d80:	bcs	14db8 <__assert_fail@plt+0x3dc4>
   14d84:	ldr	r0, [fp, #-4]
   14d88:	add	r1, r0, #4
   14d8c:	str	r1, [fp, #-4]
   14d90:	ldr	r0, [r0]
   14d94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14d98:	add	r2, sp, #16
   14d9c:	add	r1, r2, r1, lsl #2
   14da0:	str	r0, [r1]
   14da4:	movw	r1, #0
   14da8:	cmp	r0, r1
   14dac:	movw	r0, #0
   14db0:	movne	r0, #1
   14db4:	str	r0, [sp, #12]
   14db8:	ldr	r0, [sp, #12]
   14dbc:	tst	r0, #1
   14dc0:	beq	14dd8 <__assert_fail@plt+0x3de4>
   14dc4:	b	14dc8 <__assert_fail@plt+0x3dd4>
   14dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14dcc:	add	r0, r0, #1
   14dd0:	str	r0, [fp, #-24]	; 0xffffffe8
   14dd4:	b	14d70 <__assert_fail@plt+0x3d7c>
   14dd8:	add	r0, sp, #16
   14ddc:	ldr	r1, [fp, #-8]
   14de0:	ldr	r2, [fp, #-12]
   14de4:	ldr	r3, [fp, #-16]
   14de8:	ldr	ip, [fp, #-20]	; 0xffffffec
   14dec:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14df0:	str	r0, [sp, #8]
   14df4:	mov	r0, r1
   14df8:	mov	r1, r2
   14dfc:	mov	r2, r3
   14e00:	mov	r3, ip
   14e04:	ldr	ip, [sp, #8]
   14e08:	str	ip, [sp]
   14e0c:	str	lr, [sp, #4]
   14e10:	bl	146d8 <__assert_fail@plt+0x36e4>
   14e14:	mov	sp, fp
   14e18:	pop	{fp, pc}
   14e1c:	push	{fp, lr}
   14e20:	mov	fp, sp
   14e24:	sub	sp, sp, #24
   14e28:	str	r0, [fp, #-4]
   14e2c:	str	r1, [fp, #-8]
   14e30:	str	r2, [sp, #12]
   14e34:	str	r3, [sp, #8]
   14e38:	add	r0, fp, #8
   14e3c:	str	r0, [sp, #4]
   14e40:	ldr	r0, [fp, #-4]
   14e44:	ldr	r1, [fp, #-8]
   14e48:	ldr	r2, [sp, #12]
   14e4c:	ldr	r3, [sp, #8]
   14e50:	ldr	ip, [sp, #4]
   14e54:	mov	lr, sp
   14e58:	str	ip, [lr]
   14e5c:	bl	14d44 <__assert_fail@plt+0x3d50>
   14e60:	add	r0, sp, #4
   14e64:	mov	sp, fp
   14e68:	pop	{fp, pc}
   14e6c:	push	{fp, lr}
   14e70:	mov	fp, sp
   14e74:	sub	sp, sp, #16
   14e78:	movw	r0, #45380	; 0xb144
   14e7c:	movt	r0, #2
   14e80:	ldr	r1, [r0]
   14e84:	movw	r0, #42296	; 0xa538
   14e88:	movt	r0, #1
   14e8c:	bl	10da8 <fputs_unlocked@plt>
   14e90:	movw	r1, #44247	; 0xacd7
   14e94:	movt	r1, #1
   14e98:	str	r0, [fp, #-4]
   14e9c:	mov	r0, r1
   14ea0:	bl	10f04 <gettext@plt>
   14ea4:	movw	r1, #44267	; 0xaceb
   14ea8:	movt	r1, #1
   14eac:	bl	10dd8 <printf@plt>
   14eb0:	movw	r1, #44289	; 0xad01
   14eb4:	movt	r1, #1
   14eb8:	str	r0, [sp, #8]
   14ebc:	mov	r0, r1
   14ec0:	bl	10f04 <gettext@plt>
   14ec4:	movw	r1, #42568	; 0xa648
   14ec8:	movt	r1, #1
   14ecc:	movw	r2, #42811	; 0xa73b
   14ed0:	movt	r2, #1
   14ed4:	bl	10dd8 <printf@plt>
   14ed8:	movw	r1, #44309	; 0xad15
   14edc:	movt	r1, #1
   14ee0:	str	r0, [sp, #4]
   14ee4:	mov	r0, r1
   14ee8:	bl	10f04 <gettext@plt>
   14eec:	movw	r1, #44348	; 0xad3c
   14ef0:	movt	r1, #1
   14ef4:	bl	10dd8 <printf@plt>
   14ef8:	mov	sp, fp
   14efc:	pop	{fp, pc}
   14f00:	push	{fp, lr}
   14f04:	mov	fp, sp
   14f08:	sub	sp, sp, #16
   14f0c:	str	r0, [fp, #-4]
   14f10:	str	r1, [sp, #8]
   14f14:	str	r2, [sp, #4]
   14f18:	ldr	r0, [fp, #-4]
   14f1c:	ldr	r1, [sp, #8]
   14f20:	ldr	r2, [sp, #4]
   14f24:	bl	14f30 <__assert_fail@plt+0x3f3c>
   14f28:	mov	sp, fp
   14f2c:	pop	{fp, pc}
   14f30:	push	{fp, lr}
   14f34:	mov	fp, sp
   14f38:	sub	sp, sp, #16
   14f3c:	str	r0, [fp, #-4]
   14f40:	str	r1, [sp, #8]
   14f44:	str	r2, [sp, #4]
   14f48:	ldr	r0, [fp, #-4]
   14f4c:	ldr	r1, [sp, #8]
   14f50:	ldr	r2, [sp, #4]
   14f54:	bl	18624 <__assert_fail@plt+0x7630>
   14f58:	str	r0, [sp]
   14f5c:	ldr	r0, [sp]
   14f60:	movw	r1, #0
   14f64:	cmp	r0, r1
   14f68:	bne	14f98 <__assert_fail@plt+0x3fa4>
   14f6c:	ldr	r0, [fp, #-4]
   14f70:	movw	r1, #0
   14f74:	cmp	r0, r1
   14f78:	beq	14f94 <__assert_fail@plt+0x3fa0>
   14f7c:	ldr	r0, [sp, #8]
   14f80:	cmp	r0, #0
   14f84:	beq	14f98 <__assert_fail@plt+0x3fa4>
   14f88:	ldr	r0, [sp, #4]
   14f8c:	cmp	r0, #0
   14f90:	beq	14f98 <__assert_fail@plt+0x3fa4>
   14f94:	bl	17cdc <__assert_fail@plt+0x6ce8>
   14f98:	ldr	r0, [sp]
   14f9c:	mov	sp, fp
   14fa0:	pop	{fp, pc}
   14fa4:	push	{fp, lr}
   14fa8:	mov	fp, sp
   14fac:	sub	sp, sp, #8
   14fb0:	str	r0, [sp, #4]
   14fb4:	ldr	r0, [sp, #4]
   14fb8:	bl	17dc8 <__assert_fail@plt+0x6dd4>
   14fbc:	bl	14fc8 <__assert_fail@plt+0x3fd4>
   14fc0:	mov	sp, fp
   14fc4:	pop	{fp, pc}
   14fc8:	push	{fp, lr}
   14fcc:	mov	fp, sp
   14fd0:	sub	sp, sp, #8
   14fd4:	str	r0, [sp, #4]
   14fd8:	ldr	r0, [sp, #4]
   14fdc:	movw	r1, #0
   14fe0:	cmp	r0, r1
   14fe4:	bne	14fec <__assert_fail@plt+0x3ff8>
   14fe8:	bl	17cdc <__assert_fail@plt+0x6ce8>
   14fec:	ldr	r0, [sp, #4]
   14ff0:	mov	sp, fp
   14ff4:	pop	{fp, pc}
   14ff8:	push	{fp, lr}
   14ffc:	mov	fp, sp
   15000:	sub	sp, sp, #8
   15004:	str	r0, [sp, #4]
   15008:	ldr	r0, [sp, #4]
   1500c:	bl	18360 <__assert_fail@plt+0x736c>
   15010:	bl	14fc8 <__assert_fail@plt+0x3fd4>
   15014:	mov	sp, fp
   15018:	pop	{fp, pc}
   1501c:	push	{fp, lr}
   15020:	mov	fp, sp
   15024:	sub	sp, sp, #8
   15028:	str	r0, [sp, #4]
   1502c:	ldr	r0, [sp, #4]
   15030:	bl	14fa4 <__assert_fail@plt+0x3fb0>
   15034:	mov	sp, fp
   15038:	pop	{fp, pc}
   1503c:	push	{fp, lr}
   15040:	mov	fp, sp
   15044:	sub	sp, sp, #16
   15048:	str	r0, [fp, #-4]
   1504c:	str	r1, [sp, #8]
   15050:	ldr	r0, [fp, #-4]
   15054:	ldr	r1, [sp, #8]
   15058:	bl	17e38 <__assert_fail@plt+0x6e44>
   1505c:	str	r0, [sp, #4]
   15060:	ldr	r0, [sp, #4]
   15064:	movw	r1, #0
   15068:	cmp	r0, r1
   1506c:	bne	15090 <__assert_fail@plt+0x409c>
   15070:	ldr	r0, [fp, #-4]
   15074:	movw	r1, #0
   15078:	cmp	r0, r1
   1507c:	beq	1508c <__assert_fail@plt+0x4098>
   15080:	ldr	r0, [sp, #8]
   15084:	cmp	r0, #0
   15088:	beq	15090 <__assert_fail@plt+0x409c>
   1508c:	bl	17cdc <__assert_fail@plt+0x6ce8>
   15090:	ldr	r0, [sp, #4]
   15094:	mov	sp, fp
   15098:	pop	{fp, pc}
   1509c:	push	{fp, lr}
   150a0:	mov	fp, sp
   150a4:	sub	sp, sp, #8
   150a8:	str	r0, [sp, #4]
   150ac:	str	r1, [sp]
   150b0:	ldr	r0, [sp, #4]
   150b4:	ldr	r1, [sp]
   150b8:	bl	183a0 <__assert_fail@plt+0x73ac>
   150bc:	bl	14fc8 <__assert_fail@plt+0x3fd4>
   150c0:	mov	sp, fp
   150c4:	pop	{fp, pc}
   150c8:	push	{fp, lr}
   150cc:	mov	fp, sp
   150d0:	sub	sp, sp, #16
   150d4:	str	r0, [fp, #-4]
   150d8:	str	r1, [sp, #8]
   150dc:	str	r2, [sp, #4]
   150e0:	ldr	r0, [fp, #-4]
   150e4:	ldr	r1, [sp, #8]
   150e8:	ldr	r2, [sp, #4]
   150ec:	bl	18498 <__assert_fail@plt+0x74a4>
   150f0:	bl	14fc8 <__assert_fail@plt+0x3fd4>
   150f4:	mov	sp, fp
   150f8:	pop	{fp, pc}
   150fc:	push	{fp, lr}
   15100:	mov	fp, sp
   15104:	sub	sp, sp, #8
   15108:	str	r0, [sp, #4]
   1510c:	str	r1, [sp]
   15110:	ldr	r1, [sp, #4]
   15114:	ldr	r2, [sp]
   15118:	movw	r0, #0
   1511c:	bl	14f30 <__assert_fail@plt+0x3f3c>
   15120:	mov	sp, fp
   15124:	pop	{fp, pc}
   15128:	push	{fp, lr}
   1512c:	mov	fp, sp
   15130:	sub	sp, sp, #8
   15134:	str	r0, [sp, #4]
   15138:	str	r1, [sp]
   1513c:	ldr	r1, [sp, #4]
   15140:	ldr	r2, [sp]
   15144:	movw	r0, #0
   15148:	bl	150c8 <__assert_fail@plt+0x40d4>
   1514c:	mov	sp, fp
   15150:	pop	{fp, pc}
   15154:	push	{fp, lr}
   15158:	mov	fp, sp
   1515c:	sub	sp, sp, #8
   15160:	str	r0, [sp, #4]
   15164:	str	r1, [sp]
   15168:	ldr	r0, [sp, #4]
   1516c:	ldr	r1, [sp]
   15170:	movw	r2, #1
   15174:	bl	15180 <__assert_fail@plt+0x418c>
   15178:	mov	sp, fp
   1517c:	pop	{fp, pc}
   15180:	push	{fp, lr}
   15184:	mov	fp, sp
   15188:	sub	sp, sp, #16
   1518c:	str	r0, [fp, #-4]
   15190:	str	r1, [sp, #8]
   15194:	str	r2, [sp, #4]
   15198:	ldr	r0, [sp, #8]
   1519c:	ldr	r0, [r0]
   151a0:	str	r0, [sp]
   151a4:	ldr	r0, [fp, #-4]
   151a8:	movw	r1, #0
   151ac:	cmp	r0, r1
   151b0:	bne	151fc <__assert_fail@plt+0x4208>
   151b4:	ldr	r0, [sp]
   151b8:	cmp	r0, #0
   151bc:	bne	151f8 <__assert_fail@plt+0x4204>
   151c0:	ldr	r0, [sp, #4]
   151c4:	movw	r1, #64	; 0x40
   151c8:	udiv	r0, r1, r0
   151cc:	str	r0, [sp]
   151d0:	ldr	r0, [sp]
   151d4:	cmp	r0, #0
   151d8:	movw	r0, #0
   151dc:	movne	r0, #1
   151e0:	mvn	r1, #0
   151e4:	eor	r0, r0, r1
   151e8:	and	r0, r0, #1
   151ec:	ldr	r1, [sp]
   151f0:	add	r0, r1, r0
   151f4:	str	r0, [sp]
   151f8:	b	1522c <__assert_fail@plt+0x4238>
   151fc:	ldr	r0, [sp]
   15200:	ldr	r1, [sp]
   15204:	lsr	r1, r1, #1
   15208:	add	r1, r1, #1
   1520c:	adds	r0, r0, r1
   15210:	mov	r1, #0
   15214:	adc	r1, r1, #0
   15218:	str	r0, [sp]
   1521c:	tst	r1, #1
   15220:	beq	15228 <__assert_fail@plt+0x4234>
   15224:	bl	17cdc <__assert_fail@plt+0x6ce8>
   15228:	b	1522c <__assert_fail@plt+0x4238>
   1522c:	ldr	r0, [fp, #-4]
   15230:	ldr	r1, [sp]
   15234:	ldr	r2, [sp, #4]
   15238:	bl	14f30 <__assert_fail@plt+0x3f3c>
   1523c:	str	r0, [fp, #-4]
   15240:	ldr	r0, [sp]
   15244:	ldr	r1, [sp, #8]
   15248:	str	r0, [r1]
   1524c:	ldr	r0, [fp, #-4]
   15250:	mov	sp, fp
   15254:	pop	{fp, pc}
   15258:	push	{fp, lr}
   1525c:	mov	fp, sp
   15260:	sub	sp, sp, #216	; 0xd8
   15264:	ldr	ip, [fp, #8]
   15268:	str	r0, [fp, #-4]
   1526c:	str	r1, [fp, #-8]
   15270:	str	r2, [fp, #-12]
   15274:	str	r3, [fp, #-16]
   15278:	ldr	r0, [fp, #-8]
   1527c:	ldr	r0, [r0]
   15280:	str	r0, [fp, #-20]	; 0xffffffec
   15284:	ldr	r0, [fp, #-20]	; 0xffffffec
   15288:	ldr	r1, [fp, #-20]	; 0xffffffec
   1528c:	asr	r1, r1, #1
   15290:	add	r1, r0, r1
   15294:	mov	r2, #1
   15298:	cmp	r1, r0
   1529c:	movwvc	r2, #0
   152a0:	str	r1, [fp, #-24]	; 0xffffffe8
   152a4:	tst	r2, #1
   152a8:	beq	152b4 <__assert_fail@plt+0x42c0>
   152ac:	ldr	r0, [pc, #4036]	; 16278 <__assert_fail@plt+0x5284>
   152b0:	str	r0, [fp, #-24]	; 0xffffffe8
   152b4:	ldr	r0, [fp, #-16]
   152b8:	movw	r1, #0
   152bc:	cmp	r1, r0
   152c0:	bgt	152dc <__assert_fail@plt+0x42e8>
   152c4:	ldr	r0, [fp, #-16]
   152c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152cc:	cmp	r0, r1
   152d0:	bge	152dc <__assert_fail@plt+0x42e8>
   152d4:	ldr	r0, [fp, #-16]
   152d8:	str	r0, [fp, #-24]	; 0xffffffe8
   152dc:	b	156b4 <__assert_fail@plt+0x46c0>
   152e0:	b	152e4 <__assert_fail@plt+0x42f0>
   152e4:	ldr	r0, [fp, #8]
   152e8:	cmp	r0, #0
   152ec:	bge	15400 <__assert_fail@plt+0x440c>
   152f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152f4:	cmp	r0, #0
   152f8:	bge	15384 <__assert_fail@plt+0x4390>
   152fc:	b	15300 <__assert_fail@plt+0x430c>
   15300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15304:	ldr	r1, [fp, #8]
   15308:	movw	r2, #127	; 0x7f
   1530c:	sdiv	r1, r2, r1
   15310:	cmp	r0, r1
   15314:	blt	154a0 <__assert_fail@plt+0x44ac>
   15318:	b	154b8 <__assert_fail@plt+0x44c4>
   1531c:	b	15320 <__assert_fail@plt+0x432c>
   15320:	ldr	r0, [pc, #4084]	; 1631c <__assert_fail@plt+0x5328>
   15324:	ldr	r1, [fp, #8]
   15328:	cmp	r1, r0
   1532c:	blt	15344 <__assert_fail@plt+0x4350>
   15330:	b	15350 <__assert_fail@plt+0x435c>
   15334:	ldr	r0, [fp, #8]
   15338:	movw	r1, #0
   1533c:	cmp	r1, r0
   15340:	bge	15350 <__assert_fail@plt+0x435c>
   15344:	movw	r0, #0
   15348:	str	r0, [fp, #-36]	; 0xffffffdc
   1534c:	b	15368 <__assert_fail@plt+0x4374>
   15350:	ldr	r0, [fp, #8]
   15354:	movw	r1, #0
   15358:	sub	r0, r1, r0
   1535c:	movw	r1, #127	; 0x7f
   15360:	sdiv	r0, r1, r0
   15364:	str	r0, [fp, #-36]	; 0xffffffdc
   15368:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1536c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15370:	mvn	r2, #0
   15374:	sub	r1, r2, r1
   15378:	cmp	r0, r1
   1537c:	ble	154a0 <__assert_fail@plt+0x44ac>
   15380:	b	154b8 <__assert_fail@plt+0x44c4>
   15384:	b	15388 <__assert_fail@plt+0x4394>
   15388:	b	153e4 <__assert_fail@plt+0x43f0>
   1538c:	b	153e4 <__assert_fail@plt+0x43f0>
   15390:	ldr	r0, [fp, #8]
   15394:	cmn	r0, #1
   15398:	bne	153e4 <__assert_fail@plt+0x43f0>
   1539c:	b	153a0 <__assert_fail@plt+0x43ac>
   153a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153a4:	mvn	r1, #127	; 0x7f
   153a8:	add	r0, r0, r1
   153ac:	movw	r1, #0
   153b0:	cmp	r1, r0
   153b4:	blt	154a0 <__assert_fail@plt+0x44ac>
   153b8:	b	154b8 <__assert_fail@plt+0x44c4>
   153bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153c0:	movw	r1, #0
   153c4:	cmp	r1, r0
   153c8:	bge	154b8 <__assert_fail@plt+0x44c4>
   153cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153d0:	sub	r0, r0, #1
   153d4:	movw	r1, #127	; 0x7f
   153d8:	cmp	r1, r0
   153dc:	blt	154a0 <__assert_fail@plt+0x44ac>
   153e0:	b	154b8 <__assert_fail@plt+0x44c4>
   153e4:	ldr	r0, [fp, #8]
   153e8:	mvn	r1, #127	; 0x7f
   153ec:	sdiv	r0, r1, r0
   153f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153f4:	cmp	r0, r1
   153f8:	blt	154a0 <__assert_fail@plt+0x44ac>
   153fc:	b	154b8 <__assert_fail@plt+0x44c4>
   15400:	ldr	r0, [fp, #8]
   15404:	cmp	r0, #0
   15408:	bne	15410 <__assert_fail@plt+0x441c>
   1540c:	b	154b8 <__assert_fail@plt+0x44c4>
   15410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15414:	cmp	r0, #0
   15418:	bge	15488 <__assert_fail@plt+0x4494>
   1541c:	b	15420 <__assert_fail@plt+0x442c>
   15420:	b	1546c <__assert_fail@plt+0x4478>
   15424:	b	1546c <__assert_fail@plt+0x4478>
   15428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1542c:	cmn	r0, #1
   15430:	bne	1546c <__assert_fail@plt+0x4478>
   15434:	b	15438 <__assert_fail@plt+0x4444>
   15438:	ldr	r0, [fp, #8]
   1543c:	mvn	r1, #127	; 0x7f
   15440:	add	r0, r0, r1
   15444:	movw	r1, #0
   15448:	cmp	r1, r0
   1544c:	blt	154a0 <__assert_fail@plt+0x44ac>
   15450:	b	154b8 <__assert_fail@plt+0x44c4>
   15454:	ldr	r0, [fp, #8]
   15458:	sub	r0, r0, #1
   1545c:	movw	r1, #127	; 0x7f
   15460:	cmp	r1, r0
   15464:	blt	154a0 <__assert_fail@plt+0x44ac>
   15468:	b	154b8 <__assert_fail@plt+0x44c4>
   1546c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15470:	mvn	r1, #127	; 0x7f
   15474:	sdiv	r0, r1, r0
   15478:	ldr	r1, [fp, #8]
   1547c:	cmp	r0, r1
   15480:	blt	154a0 <__assert_fail@plt+0x44ac>
   15484:	b	154b8 <__assert_fail@plt+0x44c4>
   15488:	ldr	r0, [fp, #8]
   1548c:	movw	r1, #127	; 0x7f
   15490:	sdiv	r0, r1, r0
   15494:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15498:	cmp	r0, r1
   1549c:	bge	154b8 <__assert_fail@plt+0x44c4>
   154a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154a4:	ldr	r1, [fp, #8]
   154a8:	mul	r0, r0, r1
   154ac:	sxtb	r0, r0
   154b0:	str	r0, [fp, #-28]	; 0xffffffe4
   154b4:	b	1667c <__assert_fail@plt+0x5688>
   154b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154bc:	ldr	r1, [fp, #8]
   154c0:	mul	r0, r0, r1
   154c4:	sxtb	r0, r0
   154c8:	str	r0, [fp, #-28]	; 0xffffffe4
   154cc:	b	16688 <__assert_fail@plt+0x5694>
   154d0:	ldr	r0, [fp, #8]
   154d4:	cmp	r0, #0
   154d8:	bge	155e8 <__assert_fail@plt+0x45f4>
   154dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154e0:	cmp	r0, #0
   154e4:	bge	15570 <__assert_fail@plt+0x457c>
   154e8:	b	154ec <__assert_fail@plt+0x44f8>
   154ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154f0:	ldr	r1, [fp, #8]
   154f4:	movw	r2, #255	; 0xff
   154f8:	sdiv	r1, r2, r1
   154fc:	cmp	r0, r1
   15500:	blt	15684 <__assert_fail@plt+0x4690>
   15504:	b	1569c <__assert_fail@plt+0x46a8>
   15508:	b	1550c <__assert_fail@plt+0x4518>
   1550c:	ldr	r0, [pc, #3592]	; 1631c <__assert_fail@plt+0x5328>
   15510:	ldr	r1, [fp, #8]
   15514:	cmp	r1, r0
   15518:	blt	15530 <__assert_fail@plt+0x453c>
   1551c:	b	1553c <__assert_fail@plt+0x4548>
   15520:	ldr	r0, [fp, #8]
   15524:	movw	r1, #0
   15528:	cmp	r1, r0
   1552c:	bge	1553c <__assert_fail@plt+0x4548>
   15530:	movw	r0, #0
   15534:	str	r0, [fp, #-40]	; 0xffffffd8
   15538:	b	15554 <__assert_fail@plt+0x4560>
   1553c:	ldr	r0, [fp, #8]
   15540:	movw	r1, #0
   15544:	sub	r0, r1, r0
   15548:	movw	r1, #255	; 0xff
   1554c:	sdiv	r0, r1, r0
   15550:	str	r0, [fp, #-40]	; 0xffffffd8
   15554:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15558:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1555c:	mvn	r2, #0
   15560:	sub	r1, r2, r1
   15564:	cmp	r0, r1
   15568:	ble	15684 <__assert_fail@plt+0x4690>
   1556c:	b	1569c <__assert_fail@plt+0x46a8>
   15570:	b	15574 <__assert_fail@plt+0x4580>
   15574:	b	155cc <__assert_fail@plt+0x45d8>
   15578:	b	155cc <__assert_fail@plt+0x45d8>
   1557c:	ldr	r0, [fp, #8]
   15580:	cmn	r0, #1
   15584:	bne	155cc <__assert_fail@plt+0x45d8>
   15588:	b	1558c <__assert_fail@plt+0x4598>
   1558c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15590:	add	r0, r0, #0
   15594:	movw	r1, #0
   15598:	cmp	r1, r0
   1559c:	blt	15684 <__assert_fail@plt+0x4690>
   155a0:	b	1569c <__assert_fail@plt+0x46a8>
   155a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155a8:	movw	r1, #0
   155ac:	cmp	r1, r0
   155b0:	bge	1569c <__assert_fail@plt+0x46a8>
   155b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155b8:	sub	r0, r0, #1
   155bc:	mvn	r1, #0
   155c0:	cmp	r1, r0
   155c4:	blt	15684 <__assert_fail@plt+0x4690>
   155c8:	b	1569c <__assert_fail@plt+0x46a8>
   155cc:	ldr	r0, [fp, #8]
   155d0:	movw	r1, #0
   155d4:	sdiv	r0, r1, r0
   155d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   155dc:	cmp	r0, r1
   155e0:	blt	15684 <__assert_fail@plt+0x4690>
   155e4:	b	1569c <__assert_fail@plt+0x46a8>
   155e8:	ldr	r0, [fp, #8]
   155ec:	cmp	r0, #0
   155f0:	bne	155f8 <__assert_fail@plt+0x4604>
   155f4:	b	1569c <__assert_fail@plt+0x46a8>
   155f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155fc:	cmp	r0, #0
   15600:	bge	1566c <__assert_fail@plt+0x4678>
   15604:	b	15608 <__assert_fail@plt+0x4614>
   15608:	b	15650 <__assert_fail@plt+0x465c>
   1560c:	b	15650 <__assert_fail@plt+0x465c>
   15610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15614:	cmn	r0, #1
   15618:	bne	15650 <__assert_fail@plt+0x465c>
   1561c:	b	15620 <__assert_fail@plt+0x462c>
   15620:	ldr	r0, [fp, #8]
   15624:	add	r0, r0, #0
   15628:	movw	r1, #0
   1562c:	cmp	r1, r0
   15630:	blt	15684 <__assert_fail@plt+0x4690>
   15634:	b	1569c <__assert_fail@plt+0x46a8>
   15638:	ldr	r0, [fp, #8]
   1563c:	sub	r0, r0, #1
   15640:	mvn	r1, #0
   15644:	cmp	r1, r0
   15648:	blt	15684 <__assert_fail@plt+0x4690>
   1564c:	b	1569c <__assert_fail@plt+0x46a8>
   15650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15654:	movw	r1, #0
   15658:	sdiv	r0, r1, r0
   1565c:	ldr	r1, [fp, #8]
   15660:	cmp	r0, r1
   15664:	blt	15684 <__assert_fail@plt+0x4690>
   15668:	b	1569c <__assert_fail@plt+0x46a8>
   1566c:	ldr	r0, [fp, #8]
   15670:	movw	r1, #255	; 0xff
   15674:	sdiv	r0, r1, r0
   15678:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1567c:	cmp	r0, r1
   15680:	bge	1569c <__assert_fail@plt+0x46a8>
   15684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15688:	ldr	r1, [fp, #8]
   1568c:	mul	r0, r0, r1
   15690:	and	r0, r0, #255	; 0xff
   15694:	str	r0, [fp, #-28]	; 0xffffffe4
   15698:	b	1667c <__assert_fail@plt+0x5688>
   1569c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156a0:	ldr	r1, [fp, #8]
   156a4:	mul	r0, r0, r1
   156a8:	and	r0, r0, #255	; 0xff
   156ac:	str	r0, [fp, #-28]	; 0xffffffe4
   156b0:	b	16688 <__assert_fail@plt+0x5694>
   156b4:	b	15a8c <__assert_fail@plt+0x4a98>
   156b8:	b	156bc <__assert_fail@plt+0x46c8>
   156bc:	ldr	r0, [fp, #8]
   156c0:	cmp	r0, #0
   156c4:	bge	157d8 <__assert_fail@plt+0x47e4>
   156c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156cc:	cmp	r0, #0
   156d0:	bge	1575c <__assert_fail@plt+0x4768>
   156d4:	b	156d8 <__assert_fail@plt+0x46e4>
   156d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156dc:	ldr	r1, [fp, #8]
   156e0:	movw	r2, #32767	; 0x7fff
   156e4:	sdiv	r1, r2, r1
   156e8:	cmp	r0, r1
   156ec:	blt	15878 <__assert_fail@plt+0x4884>
   156f0:	b	15890 <__assert_fail@plt+0x489c>
   156f4:	b	156f8 <__assert_fail@plt+0x4704>
   156f8:	ldr	r0, [pc, #3100]	; 1631c <__assert_fail@plt+0x5328>
   156fc:	ldr	r1, [fp, #8]
   15700:	cmp	r1, r0
   15704:	blt	1571c <__assert_fail@plt+0x4728>
   15708:	b	15728 <__assert_fail@plt+0x4734>
   1570c:	ldr	r0, [fp, #8]
   15710:	movw	r1, #0
   15714:	cmp	r1, r0
   15718:	bge	15728 <__assert_fail@plt+0x4734>
   1571c:	movw	r0, #0
   15720:	str	r0, [fp, #-44]	; 0xffffffd4
   15724:	b	15740 <__assert_fail@plt+0x474c>
   15728:	ldr	r0, [fp, #8]
   1572c:	movw	r1, #0
   15730:	sub	r0, r1, r0
   15734:	movw	r1, #32767	; 0x7fff
   15738:	sdiv	r0, r1, r0
   1573c:	str	r0, [fp, #-44]	; 0xffffffd4
   15740:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15744:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15748:	mvn	r2, #0
   1574c:	sub	r1, r2, r1
   15750:	cmp	r0, r1
   15754:	ble	15878 <__assert_fail@plt+0x4884>
   15758:	b	15890 <__assert_fail@plt+0x489c>
   1575c:	b	15760 <__assert_fail@plt+0x476c>
   15760:	b	157bc <__assert_fail@plt+0x47c8>
   15764:	b	157bc <__assert_fail@plt+0x47c8>
   15768:	ldr	r0, [fp, #8]
   1576c:	cmn	r0, #1
   15770:	bne	157bc <__assert_fail@plt+0x47c8>
   15774:	b	15778 <__assert_fail@plt+0x4784>
   15778:	ldr	r0, [pc, #4068]	; 16764 <__assert_fail@plt+0x5770>
   1577c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15780:	add	r0, r1, r0
   15784:	movw	r1, #0
   15788:	cmp	r1, r0
   1578c:	blt	15878 <__assert_fail@plt+0x4884>
   15790:	b	15890 <__assert_fail@plt+0x489c>
   15794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15798:	movw	r1, #0
   1579c:	cmp	r1, r0
   157a0:	bge	15890 <__assert_fail@plt+0x489c>
   157a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157a8:	sub	r0, r0, #1
   157ac:	movw	r1, #32767	; 0x7fff
   157b0:	cmp	r1, r0
   157b4:	blt	15878 <__assert_fail@plt+0x4884>
   157b8:	b	15890 <__assert_fail@plt+0x489c>
   157bc:	ldr	r0, [pc, #4000]	; 16764 <__assert_fail@plt+0x5770>
   157c0:	ldr	r1, [fp, #8]
   157c4:	sdiv	r0, r0, r1
   157c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157cc:	cmp	r0, r1
   157d0:	blt	15878 <__assert_fail@plt+0x4884>
   157d4:	b	15890 <__assert_fail@plt+0x489c>
   157d8:	ldr	r0, [fp, #8]
   157dc:	cmp	r0, #0
   157e0:	bne	157e8 <__assert_fail@plt+0x47f4>
   157e4:	b	15890 <__assert_fail@plt+0x489c>
   157e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157ec:	cmp	r0, #0
   157f0:	bge	15860 <__assert_fail@plt+0x486c>
   157f4:	b	157f8 <__assert_fail@plt+0x4804>
   157f8:	b	15844 <__assert_fail@plt+0x4850>
   157fc:	b	15844 <__assert_fail@plt+0x4850>
   15800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15804:	cmn	r0, #1
   15808:	bne	15844 <__assert_fail@plt+0x4850>
   1580c:	b	15810 <__assert_fail@plt+0x481c>
   15810:	ldr	r0, [pc, #3916]	; 16764 <__assert_fail@plt+0x5770>
   15814:	ldr	r1, [fp, #8]
   15818:	add	r0, r1, r0
   1581c:	movw	r1, #0
   15820:	cmp	r1, r0
   15824:	blt	15878 <__assert_fail@plt+0x4884>
   15828:	b	15890 <__assert_fail@plt+0x489c>
   1582c:	ldr	r0, [fp, #8]
   15830:	sub	r0, r0, #1
   15834:	movw	r1, #32767	; 0x7fff
   15838:	cmp	r1, r0
   1583c:	blt	15878 <__assert_fail@plt+0x4884>
   15840:	b	15890 <__assert_fail@plt+0x489c>
   15844:	ldr	r0, [pc, #3864]	; 16764 <__assert_fail@plt+0x5770>
   15848:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1584c:	sdiv	r0, r0, r1
   15850:	ldr	r1, [fp, #8]
   15854:	cmp	r0, r1
   15858:	blt	15878 <__assert_fail@plt+0x4884>
   1585c:	b	15890 <__assert_fail@plt+0x489c>
   15860:	ldr	r0, [fp, #8]
   15864:	movw	r1, #32767	; 0x7fff
   15868:	sdiv	r0, r1, r0
   1586c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15870:	cmp	r0, r1
   15874:	bge	15890 <__assert_fail@plt+0x489c>
   15878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1587c:	ldr	r1, [fp, #8]
   15880:	mul	r0, r0, r1
   15884:	sxth	r0, r0
   15888:	str	r0, [fp, #-28]	; 0xffffffe4
   1588c:	b	1667c <__assert_fail@plt+0x5688>
   15890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15894:	ldr	r1, [fp, #8]
   15898:	mul	r0, r0, r1
   1589c:	sxth	r0, r0
   158a0:	str	r0, [fp, #-28]	; 0xffffffe4
   158a4:	b	16688 <__assert_fail@plt+0x5694>
   158a8:	ldr	r0, [fp, #8]
   158ac:	cmp	r0, #0
   158b0:	bge	159c0 <__assert_fail@plt+0x49cc>
   158b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158b8:	cmp	r0, #0
   158bc:	bge	15948 <__assert_fail@plt+0x4954>
   158c0:	b	158c4 <__assert_fail@plt+0x48d0>
   158c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158c8:	ldr	r1, [fp, #8]
   158cc:	movw	r2, #65535	; 0xffff
   158d0:	sdiv	r1, r2, r1
   158d4:	cmp	r0, r1
   158d8:	blt	15a5c <__assert_fail@plt+0x4a68>
   158dc:	b	15a74 <__assert_fail@plt+0x4a80>
   158e0:	b	158e4 <__assert_fail@plt+0x48f0>
   158e4:	ldr	r0, [pc, #2608]	; 1631c <__assert_fail@plt+0x5328>
   158e8:	ldr	r1, [fp, #8]
   158ec:	cmp	r1, r0
   158f0:	blt	15908 <__assert_fail@plt+0x4914>
   158f4:	b	15914 <__assert_fail@plt+0x4920>
   158f8:	ldr	r0, [fp, #8]
   158fc:	movw	r1, #0
   15900:	cmp	r1, r0
   15904:	bge	15914 <__assert_fail@plt+0x4920>
   15908:	movw	r0, #0
   1590c:	str	r0, [fp, #-48]	; 0xffffffd0
   15910:	b	1592c <__assert_fail@plt+0x4938>
   15914:	ldr	r0, [fp, #8]
   15918:	movw	r1, #0
   1591c:	sub	r0, r1, r0
   15920:	movw	r1, #65535	; 0xffff
   15924:	sdiv	r0, r1, r0
   15928:	str	r0, [fp, #-48]	; 0xffffffd0
   1592c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15930:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15934:	mvn	r2, #0
   15938:	sub	r1, r2, r1
   1593c:	cmp	r0, r1
   15940:	ble	15a5c <__assert_fail@plt+0x4a68>
   15944:	b	15a74 <__assert_fail@plt+0x4a80>
   15948:	b	1594c <__assert_fail@plt+0x4958>
   1594c:	b	159a4 <__assert_fail@plt+0x49b0>
   15950:	b	159a4 <__assert_fail@plt+0x49b0>
   15954:	ldr	r0, [fp, #8]
   15958:	cmn	r0, #1
   1595c:	bne	159a4 <__assert_fail@plt+0x49b0>
   15960:	b	15964 <__assert_fail@plt+0x4970>
   15964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15968:	add	r0, r0, #0
   1596c:	movw	r1, #0
   15970:	cmp	r1, r0
   15974:	blt	15a5c <__assert_fail@plt+0x4a68>
   15978:	b	15a74 <__assert_fail@plt+0x4a80>
   1597c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15980:	movw	r1, #0
   15984:	cmp	r1, r0
   15988:	bge	15a74 <__assert_fail@plt+0x4a80>
   1598c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15990:	sub	r0, r0, #1
   15994:	mvn	r1, #0
   15998:	cmp	r1, r0
   1599c:	blt	15a5c <__assert_fail@plt+0x4a68>
   159a0:	b	15a74 <__assert_fail@plt+0x4a80>
   159a4:	ldr	r0, [fp, #8]
   159a8:	movw	r1, #0
   159ac:	sdiv	r0, r1, r0
   159b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   159b4:	cmp	r0, r1
   159b8:	blt	15a5c <__assert_fail@plt+0x4a68>
   159bc:	b	15a74 <__assert_fail@plt+0x4a80>
   159c0:	ldr	r0, [fp, #8]
   159c4:	cmp	r0, #0
   159c8:	bne	159d0 <__assert_fail@plt+0x49dc>
   159cc:	b	15a74 <__assert_fail@plt+0x4a80>
   159d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159d4:	cmp	r0, #0
   159d8:	bge	15a44 <__assert_fail@plt+0x4a50>
   159dc:	b	159e0 <__assert_fail@plt+0x49ec>
   159e0:	b	15a28 <__assert_fail@plt+0x4a34>
   159e4:	b	15a28 <__assert_fail@plt+0x4a34>
   159e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159ec:	cmn	r0, #1
   159f0:	bne	15a28 <__assert_fail@plt+0x4a34>
   159f4:	b	159f8 <__assert_fail@plt+0x4a04>
   159f8:	ldr	r0, [fp, #8]
   159fc:	add	r0, r0, #0
   15a00:	movw	r1, #0
   15a04:	cmp	r1, r0
   15a08:	blt	15a5c <__assert_fail@plt+0x4a68>
   15a0c:	b	15a74 <__assert_fail@plt+0x4a80>
   15a10:	ldr	r0, [fp, #8]
   15a14:	sub	r0, r0, #1
   15a18:	mvn	r1, #0
   15a1c:	cmp	r1, r0
   15a20:	blt	15a5c <__assert_fail@plt+0x4a68>
   15a24:	b	15a74 <__assert_fail@plt+0x4a80>
   15a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a2c:	movw	r1, #0
   15a30:	sdiv	r0, r1, r0
   15a34:	ldr	r1, [fp, #8]
   15a38:	cmp	r0, r1
   15a3c:	blt	15a5c <__assert_fail@plt+0x4a68>
   15a40:	b	15a74 <__assert_fail@plt+0x4a80>
   15a44:	ldr	r0, [fp, #8]
   15a48:	movw	r1, #65535	; 0xffff
   15a4c:	sdiv	r0, r1, r0
   15a50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a54:	cmp	r0, r1
   15a58:	bge	15a74 <__assert_fail@plt+0x4a80>
   15a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a60:	ldr	r1, [fp, #8]
   15a64:	mul	r0, r0, r1
   15a68:	uxth	r0, r0
   15a6c:	str	r0, [fp, #-28]	; 0xffffffe4
   15a70:	b	1667c <__assert_fail@plt+0x5688>
   15a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a78:	ldr	r1, [fp, #8]
   15a7c:	mul	r0, r0, r1
   15a80:	uxth	r0, r0
   15a84:	str	r0, [fp, #-28]	; 0xffffffe4
   15a88:	b	16688 <__assert_fail@plt+0x5694>
   15a8c:	b	15a90 <__assert_fail@plt+0x4a9c>
   15a90:	b	15a94 <__assert_fail@plt+0x4aa0>
   15a94:	ldr	r0, [fp, #8]
   15a98:	cmp	r0, #0
   15a9c:	bge	15ba0 <__assert_fail@plt+0x4bac>
   15aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15aa4:	cmp	r0, #0
   15aa8:	bge	15b34 <__assert_fail@plt+0x4b40>
   15aac:	b	15ab0 <__assert_fail@plt+0x4abc>
   15ab0:	ldr	r0, [pc, #1984]	; 16278 <__assert_fail@plt+0x5284>
   15ab4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ab8:	ldr	r2, [fp, #8]
   15abc:	sdiv	r0, r0, r2
   15ac0:	cmp	r1, r0
   15ac4:	blt	15c30 <__assert_fail@plt+0x4c3c>
   15ac8:	b	15c44 <__assert_fail@plt+0x4c50>
   15acc:	b	15ad0 <__assert_fail@plt+0x4adc>
   15ad0:	ldr	r0, [pc, #2116]	; 1631c <__assert_fail@plt+0x5328>
   15ad4:	ldr	r1, [fp, #8]
   15ad8:	cmp	r1, r0
   15adc:	blt	15af4 <__assert_fail@plt+0x4b00>
   15ae0:	b	15b00 <__assert_fail@plt+0x4b0c>
   15ae4:	ldr	r0, [fp, #8]
   15ae8:	movw	r1, #0
   15aec:	cmp	r1, r0
   15af0:	bge	15b00 <__assert_fail@plt+0x4b0c>
   15af4:	movw	r0, #0
   15af8:	str	r0, [fp, #-52]	; 0xffffffcc
   15afc:	b	15b18 <__assert_fail@plt+0x4b24>
   15b00:	ldr	r0, [pc, #1904]	; 16278 <__assert_fail@plt+0x5284>
   15b04:	ldr	r1, [fp, #8]
   15b08:	movw	r2, #0
   15b0c:	sub	r1, r2, r1
   15b10:	sdiv	r0, r0, r1
   15b14:	str	r0, [fp, #-52]	; 0xffffffcc
   15b18:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15b1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b20:	mvn	r2, #0
   15b24:	sub	r1, r2, r1
   15b28:	cmp	r0, r1
   15b2c:	ble	15c30 <__assert_fail@plt+0x4c3c>
   15b30:	b	15c44 <__assert_fail@plt+0x4c50>
   15b34:	ldr	r0, [fp, #8]
   15b38:	cmn	r0, #1
   15b3c:	bne	15b84 <__assert_fail@plt+0x4b90>
   15b40:	b	15b44 <__assert_fail@plt+0x4b50>
   15b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b48:	add	r0, r0, #-2147483648	; 0x80000000
   15b4c:	movw	r1, #0
   15b50:	cmp	r1, r0
   15b54:	blt	15c30 <__assert_fail@plt+0x4c3c>
   15b58:	b	15c44 <__assert_fail@plt+0x4c50>
   15b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b60:	movw	r1, #0
   15b64:	cmp	r1, r0
   15b68:	bge	15c44 <__assert_fail@plt+0x4c50>
   15b6c:	ldr	r0, [pc, #1796]	; 16278 <__assert_fail@plt+0x5284>
   15b70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b74:	sub	r1, r1, #1
   15b78:	cmp	r0, r1
   15b7c:	blt	15c30 <__assert_fail@plt+0x4c3c>
   15b80:	b	15c44 <__assert_fail@plt+0x4c50>
   15b84:	ldr	r0, [pc, #4080]	; 16b7c <__assert_fail@plt+0x5b88>
   15b88:	ldr	r1, [fp, #8]
   15b8c:	sdiv	r0, r0, r1
   15b90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b94:	cmp	r0, r1
   15b98:	blt	15c30 <__assert_fail@plt+0x4c3c>
   15b9c:	b	15c44 <__assert_fail@plt+0x4c50>
   15ba0:	ldr	r0, [fp, #8]
   15ba4:	cmp	r0, #0
   15ba8:	bne	15bb0 <__assert_fail@plt+0x4bbc>
   15bac:	b	15c44 <__assert_fail@plt+0x4c50>
   15bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bb4:	cmp	r0, #0
   15bb8:	bge	15c18 <__assert_fail@plt+0x4c24>
   15bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bc0:	cmn	r0, #1
   15bc4:	bne	15bfc <__assert_fail@plt+0x4c08>
   15bc8:	b	15bcc <__assert_fail@plt+0x4bd8>
   15bcc:	ldr	r0, [fp, #8]
   15bd0:	add	r0, r0, #-2147483648	; 0x80000000
   15bd4:	movw	r1, #0
   15bd8:	cmp	r1, r0
   15bdc:	blt	15c30 <__assert_fail@plt+0x4c3c>
   15be0:	b	15c44 <__assert_fail@plt+0x4c50>
   15be4:	ldr	r0, [pc, #1676]	; 16278 <__assert_fail@plt+0x5284>
   15be8:	ldr	r1, [fp, #8]
   15bec:	sub	r1, r1, #1
   15bf0:	cmp	r0, r1
   15bf4:	blt	15c30 <__assert_fail@plt+0x4c3c>
   15bf8:	b	15c44 <__assert_fail@plt+0x4c50>
   15bfc:	ldr	r0, [pc, #3960]	; 16b7c <__assert_fail@plt+0x5b88>
   15c00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c04:	sdiv	r0, r0, r1
   15c08:	ldr	r1, [fp, #8]
   15c0c:	cmp	r0, r1
   15c10:	blt	15c30 <__assert_fail@plt+0x4c3c>
   15c14:	b	15c44 <__assert_fail@plt+0x4c50>
   15c18:	ldr	r0, [pc, #1624]	; 16278 <__assert_fail@plt+0x5284>
   15c1c:	ldr	r1, [fp, #8]
   15c20:	sdiv	r0, r0, r1
   15c24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c28:	cmp	r0, r1
   15c2c:	bge	15c44 <__assert_fail@plt+0x4c50>
   15c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c34:	ldr	r1, [fp, #8]
   15c38:	mul	r0, r0, r1
   15c3c:	str	r0, [fp, #-28]	; 0xffffffe4
   15c40:	b	1667c <__assert_fail@plt+0x5688>
   15c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c48:	ldr	r1, [fp, #8]
   15c4c:	mul	r0, r0, r1
   15c50:	str	r0, [fp, #-28]	; 0xffffffe4
   15c54:	b	16688 <__assert_fail@plt+0x5694>
   15c58:	ldr	r0, [fp, #8]
   15c5c:	cmp	r0, #0
   15c60:	bge	15d70 <__assert_fail@plt+0x4d7c>
   15c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c68:	cmp	r0, #0
   15c6c:	bge	15cf8 <__assert_fail@plt+0x4d04>
   15c70:	b	15c90 <__assert_fail@plt+0x4c9c>
   15c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c78:	ldr	r1, [fp, #8]
   15c7c:	mvn	r2, #0
   15c80:	udiv	r1, r2, r1
   15c84:	cmp	r0, r1
   15c88:	bcc	15e0c <__assert_fail@plt+0x4e18>
   15c8c:	b	15e20 <__assert_fail@plt+0x4e2c>
   15c90:	b	15c94 <__assert_fail@plt+0x4ca0>
   15c94:	ldr	r0, [pc, #1664]	; 1631c <__assert_fail@plt+0x5328>
   15c98:	ldr	r1, [fp, #8]
   15c9c:	cmp	r1, r0
   15ca0:	blt	15cb8 <__assert_fail@plt+0x4cc4>
   15ca4:	b	15cc4 <__assert_fail@plt+0x4cd0>
   15ca8:	ldr	r0, [fp, #8]
   15cac:	movw	r1, #0
   15cb0:	cmp	r1, r0
   15cb4:	bge	15cc4 <__assert_fail@plt+0x4cd0>
   15cb8:	movw	r0, #1
   15cbc:	str	r0, [fp, #-56]	; 0xffffffc8
   15cc0:	b	15cdc <__assert_fail@plt+0x4ce8>
   15cc4:	ldr	r0, [fp, #8]
   15cc8:	movw	r1, #0
   15ccc:	sub	r0, r1, r0
   15cd0:	mvn	r1, #0
   15cd4:	udiv	r0, r1, r0
   15cd8:	str	r0, [fp, #-56]	; 0xffffffc8
   15cdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ce0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ce4:	mvn	r2, #0
   15ce8:	sub	r1, r2, r1
   15cec:	cmp	r0, r1
   15cf0:	bls	15e0c <__assert_fail@plt+0x4e18>
   15cf4:	b	15e20 <__assert_fail@plt+0x4e2c>
   15cf8:	b	15cfc <__assert_fail@plt+0x4d08>
   15cfc:	b	15d54 <__assert_fail@plt+0x4d60>
   15d00:	b	15d54 <__assert_fail@plt+0x4d60>
   15d04:	ldr	r0, [fp, #8]
   15d08:	cmn	r0, #1
   15d0c:	bne	15d54 <__assert_fail@plt+0x4d60>
   15d10:	b	15d14 <__assert_fail@plt+0x4d20>
   15d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d18:	add	r0, r0, #0
   15d1c:	movw	r1, #0
   15d20:	cmp	r1, r0
   15d24:	blt	15e0c <__assert_fail@plt+0x4e18>
   15d28:	b	15e20 <__assert_fail@plt+0x4e2c>
   15d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d30:	movw	r1, #0
   15d34:	cmp	r1, r0
   15d38:	bge	15e20 <__assert_fail@plt+0x4e2c>
   15d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d40:	sub	r0, r0, #1
   15d44:	mvn	r1, #0
   15d48:	cmp	r1, r0
   15d4c:	blt	15e0c <__assert_fail@plt+0x4e18>
   15d50:	b	15e20 <__assert_fail@plt+0x4e2c>
   15d54:	ldr	r0, [fp, #8]
   15d58:	movw	r1, #0
   15d5c:	sdiv	r0, r1, r0
   15d60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d64:	cmp	r0, r1
   15d68:	blt	15e0c <__assert_fail@plt+0x4e18>
   15d6c:	b	15e20 <__assert_fail@plt+0x4e2c>
   15d70:	ldr	r0, [fp, #8]
   15d74:	cmp	r0, #0
   15d78:	bne	15d80 <__assert_fail@plt+0x4d8c>
   15d7c:	b	15e20 <__assert_fail@plt+0x4e2c>
   15d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d84:	cmp	r0, #0
   15d88:	bge	15df4 <__assert_fail@plt+0x4e00>
   15d8c:	b	15d90 <__assert_fail@plt+0x4d9c>
   15d90:	b	15dd8 <__assert_fail@plt+0x4de4>
   15d94:	b	15dd8 <__assert_fail@plt+0x4de4>
   15d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d9c:	cmn	r0, #1
   15da0:	bne	15dd8 <__assert_fail@plt+0x4de4>
   15da4:	b	15da8 <__assert_fail@plt+0x4db4>
   15da8:	ldr	r0, [fp, #8]
   15dac:	add	r0, r0, #0
   15db0:	movw	r1, #0
   15db4:	cmp	r1, r0
   15db8:	blt	15e0c <__assert_fail@plt+0x4e18>
   15dbc:	b	15e20 <__assert_fail@plt+0x4e2c>
   15dc0:	ldr	r0, [fp, #8]
   15dc4:	sub	r0, r0, #1
   15dc8:	mvn	r1, #0
   15dcc:	cmp	r1, r0
   15dd0:	blt	15e0c <__assert_fail@plt+0x4e18>
   15dd4:	b	15e20 <__assert_fail@plt+0x4e2c>
   15dd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ddc:	movw	r1, #0
   15de0:	sdiv	r0, r1, r0
   15de4:	ldr	r1, [fp, #8]
   15de8:	cmp	r0, r1
   15dec:	blt	15e0c <__assert_fail@plt+0x4e18>
   15df0:	b	15e20 <__assert_fail@plt+0x4e2c>
   15df4:	ldr	r0, [fp, #8]
   15df8:	mvn	r1, #0
   15dfc:	udiv	r0, r1, r0
   15e00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e04:	cmp	r0, r1
   15e08:	bcs	15e20 <__assert_fail@plt+0x4e2c>
   15e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e10:	ldr	r1, [fp, #8]
   15e14:	mul	r0, r0, r1
   15e18:	str	r0, [fp, #-28]	; 0xffffffe4
   15e1c:	b	1667c <__assert_fail@plt+0x5688>
   15e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e24:	ldr	r1, [fp, #8]
   15e28:	mul	r0, r0, r1
   15e2c:	str	r0, [fp, #-28]	; 0xffffffe4
   15e30:	b	16688 <__assert_fail@plt+0x5694>
   15e34:	b	15e38 <__assert_fail@plt+0x4e44>
   15e38:	b	15e3c <__assert_fail@plt+0x4e48>
   15e3c:	ldr	r0, [fp, #8]
   15e40:	cmp	r0, #0
   15e44:	bge	15f48 <__assert_fail@plt+0x4f54>
   15e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e4c:	cmp	r0, #0
   15e50:	bge	15edc <__assert_fail@plt+0x4ee8>
   15e54:	b	15e58 <__assert_fail@plt+0x4e64>
   15e58:	ldr	r0, [pc, #1048]	; 16278 <__assert_fail@plt+0x5284>
   15e5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e60:	ldr	r2, [fp, #8]
   15e64:	sdiv	r0, r0, r2
   15e68:	cmp	r1, r0
   15e6c:	blt	15fd8 <__assert_fail@plt+0x4fe4>
   15e70:	b	15fec <__assert_fail@plt+0x4ff8>
   15e74:	b	15e78 <__assert_fail@plt+0x4e84>
   15e78:	ldr	r0, [pc, #1180]	; 1631c <__assert_fail@plt+0x5328>
   15e7c:	ldr	r1, [fp, #8]
   15e80:	cmp	r1, r0
   15e84:	blt	15e9c <__assert_fail@plt+0x4ea8>
   15e88:	b	15ea8 <__assert_fail@plt+0x4eb4>
   15e8c:	ldr	r0, [fp, #8]
   15e90:	movw	r1, #0
   15e94:	cmp	r1, r0
   15e98:	bge	15ea8 <__assert_fail@plt+0x4eb4>
   15e9c:	movw	r0, #0
   15ea0:	str	r0, [fp, #-60]	; 0xffffffc4
   15ea4:	b	15ec0 <__assert_fail@plt+0x4ecc>
   15ea8:	ldr	r0, [pc, #968]	; 16278 <__assert_fail@plt+0x5284>
   15eac:	ldr	r1, [fp, #8]
   15eb0:	movw	r2, #0
   15eb4:	sub	r1, r2, r1
   15eb8:	sdiv	r0, r0, r1
   15ebc:	str	r0, [fp, #-60]	; 0xffffffc4
   15ec0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15ec4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ec8:	mvn	r2, #0
   15ecc:	sub	r1, r2, r1
   15ed0:	cmp	r0, r1
   15ed4:	ble	15fd8 <__assert_fail@plt+0x4fe4>
   15ed8:	b	15fec <__assert_fail@plt+0x4ff8>
   15edc:	ldr	r0, [fp, #8]
   15ee0:	cmn	r0, #1
   15ee4:	bne	15f2c <__assert_fail@plt+0x4f38>
   15ee8:	b	15eec <__assert_fail@plt+0x4ef8>
   15eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ef0:	add	r0, r0, #-2147483648	; 0x80000000
   15ef4:	movw	r1, #0
   15ef8:	cmp	r1, r0
   15efc:	blt	15fd8 <__assert_fail@plt+0x4fe4>
   15f00:	b	15fec <__assert_fail@plt+0x4ff8>
   15f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f08:	movw	r1, #0
   15f0c:	cmp	r1, r0
   15f10:	bge	15fec <__assert_fail@plt+0x4ff8>
   15f14:	ldr	r0, [pc, #860]	; 16278 <__assert_fail@plt+0x5284>
   15f18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f1c:	sub	r1, r1, #1
   15f20:	cmp	r0, r1
   15f24:	blt	15fd8 <__assert_fail@plt+0x4fe4>
   15f28:	b	15fec <__assert_fail@plt+0x4ff8>
   15f2c:	ldr	r0, [pc, #3144]	; 16b7c <__assert_fail@plt+0x5b88>
   15f30:	ldr	r1, [fp, #8]
   15f34:	sdiv	r0, r0, r1
   15f38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f3c:	cmp	r0, r1
   15f40:	blt	15fd8 <__assert_fail@plt+0x4fe4>
   15f44:	b	15fec <__assert_fail@plt+0x4ff8>
   15f48:	ldr	r0, [fp, #8]
   15f4c:	cmp	r0, #0
   15f50:	bne	15f58 <__assert_fail@plt+0x4f64>
   15f54:	b	15fec <__assert_fail@plt+0x4ff8>
   15f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f5c:	cmp	r0, #0
   15f60:	bge	15fc0 <__assert_fail@plt+0x4fcc>
   15f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f68:	cmn	r0, #1
   15f6c:	bne	15fa4 <__assert_fail@plt+0x4fb0>
   15f70:	b	15f74 <__assert_fail@plt+0x4f80>
   15f74:	ldr	r0, [fp, #8]
   15f78:	add	r0, r0, #-2147483648	; 0x80000000
   15f7c:	movw	r1, #0
   15f80:	cmp	r1, r0
   15f84:	blt	15fd8 <__assert_fail@plt+0x4fe4>
   15f88:	b	15fec <__assert_fail@plt+0x4ff8>
   15f8c:	ldr	r0, [pc, #740]	; 16278 <__assert_fail@plt+0x5284>
   15f90:	ldr	r1, [fp, #8]
   15f94:	sub	r1, r1, #1
   15f98:	cmp	r0, r1
   15f9c:	blt	15fd8 <__assert_fail@plt+0x4fe4>
   15fa0:	b	15fec <__assert_fail@plt+0x4ff8>
   15fa4:	ldr	r0, [pc, #3024]	; 16b7c <__assert_fail@plt+0x5b88>
   15fa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15fac:	sdiv	r0, r0, r1
   15fb0:	ldr	r1, [fp, #8]
   15fb4:	cmp	r0, r1
   15fb8:	blt	15fd8 <__assert_fail@plt+0x4fe4>
   15fbc:	b	15fec <__assert_fail@plt+0x4ff8>
   15fc0:	ldr	r0, [pc, #688]	; 16278 <__assert_fail@plt+0x5284>
   15fc4:	ldr	r1, [fp, #8]
   15fc8:	sdiv	r0, r0, r1
   15fcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15fd0:	cmp	r0, r1
   15fd4:	bge	15fec <__assert_fail@plt+0x4ff8>
   15fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fdc:	ldr	r1, [fp, #8]
   15fe0:	mul	r0, r0, r1
   15fe4:	str	r0, [fp, #-28]	; 0xffffffe4
   15fe8:	b	1667c <__assert_fail@plt+0x5688>
   15fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ff0:	ldr	r1, [fp, #8]
   15ff4:	mul	r0, r0, r1
   15ff8:	str	r0, [fp, #-28]	; 0xffffffe4
   15ffc:	b	16688 <__assert_fail@plt+0x5694>
   16000:	ldr	r0, [fp, #8]
   16004:	cmp	r0, #0
   16008:	bge	16118 <__assert_fail@plt+0x5124>
   1600c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16010:	cmp	r0, #0
   16014:	bge	160a0 <__assert_fail@plt+0x50ac>
   16018:	b	16038 <__assert_fail@plt+0x5044>
   1601c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16020:	ldr	r1, [fp, #8]
   16024:	mvn	r2, #0
   16028:	udiv	r1, r2, r1
   1602c:	cmp	r0, r1
   16030:	bcc	161b4 <__assert_fail@plt+0x51c0>
   16034:	b	161c8 <__assert_fail@plt+0x51d4>
   16038:	b	1603c <__assert_fail@plt+0x5048>
   1603c:	ldr	r0, [pc, #728]	; 1631c <__assert_fail@plt+0x5328>
   16040:	ldr	r1, [fp, #8]
   16044:	cmp	r1, r0
   16048:	blt	16060 <__assert_fail@plt+0x506c>
   1604c:	b	1606c <__assert_fail@plt+0x5078>
   16050:	ldr	r0, [fp, #8]
   16054:	movw	r1, #0
   16058:	cmp	r1, r0
   1605c:	bge	1606c <__assert_fail@plt+0x5078>
   16060:	movw	r0, #1
   16064:	str	r0, [fp, #-64]	; 0xffffffc0
   16068:	b	16084 <__assert_fail@plt+0x5090>
   1606c:	ldr	r0, [fp, #8]
   16070:	movw	r1, #0
   16074:	sub	r0, r1, r0
   16078:	mvn	r1, #0
   1607c:	udiv	r0, r1, r0
   16080:	str	r0, [fp, #-64]	; 0xffffffc0
   16084:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16088:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1608c:	mvn	r2, #0
   16090:	sub	r1, r2, r1
   16094:	cmp	r0, r1
   16098:	bls	161b4 <__assert_fail@plt+0x51c0>
   1609c:	b	161c8 <__assert_fail@plt+0x51d4>
   160a0:	b	160a4 <__assert_fail@plt+0x50b0>
   160a4:	b	160fc <__assert_fail@plt+0x5108>
   160a8:	b	160fc <__assert_fail@plt+0x5108>
   160ac:	ldr	r0, [fp, #8]
   160b0:	cmn	r0, #1
   160b4:	bne	160fc <__assert_fail@plt+0x5108>
   160b8:	b	160bc <__assert_fail@plt+0x50c8>
   160bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160c0:	add	r0, r0, #0
   160c4:	movw	r1, #0
   160c8:	cmp	r1, r0
   160cc:	blt	161b4 <__assert_fail@plt+0x51c0>
   160d0:	b	161c8 <__assert_fail@plt+0x51d4>
   160d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160d8:	movw	r1, #0
   160dc:	cmp	r1, r0
   160e0:	bge	161c8 <__assert_fail@plt+0x51d4>
   160e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160e8:	sub	r0, r0, #1
   160ec:	mvn	r1, #0
   160f0:	cmp	r1, r0
   160f4:	blt	161b4 <__assert_fail@plt+0x51c0>
   160f8:	b	161c8 <__assert_fail@plt+0x51d4>
   160fc:	ldr	r0, [fp, #8]
   16100:	movw	r1, #0
   16104:	sdiv	r0, r1, r0
   16108:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1610c:	cmp	r0, r1
   16110:	blt	161b4 <__assert_fail@plt+0x51c0>
   16114:	b	161c8 <__assert_fail@plt+0x51d4>
   16118:	ldr	r0, [fp, #8]
   1611c:	cmp	r0, #0
   16120:	bne	16128 <__assert_fail@plt+0x5134>
   16124:	b	161c8 <__assert_fail@plt+0x51d4>
   16128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1612c:	cmp	r0, #0
   16130:	bge	1619c <__assert_fail@plt+0x51a8>
   16134:	b	16138 <__assert_fail@plt+0x5144>
   16138:	b	16180 <__assert_fail@plt+0x518c>
   1613c:	b	16180 <__assert_fail@plt+0x518c>
   16140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16144:	cmn	r0, #1
   16148:	bne	16180 <__assert_fail@plt+0x518c>
   1614c:	b	16150 <__assert_fail@plt+0x515c>
   16150:	ldr	r0, [fp, #8]
   16154:	add	r0, r0, #0
   16158:	movw	r1, #0
   1615c:	cmp	r1, r0
   16160:	blt	161b4 <__assert_fail@plt+0x51c0>
   16164:	b	161c8 <__assert_fail@plt+0x51d4>
   16168:	ldr	r0, [fp, #8]
   1616c:	sub	r0, r0, #1
   16170:	mvn	r1, #0
   16174:	cmp	r1, r0
   16178:	blt	161b4 <__assert_fail@plt+0x51c0>
   1617c:	b	161c8 <__assert_fail@plt+0x51d4>
   16180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16184:	movw	r1, #0
   16188:	sdiv	r0, r1, r0
   1618c:	ldr	r1, [fp, #8]
   16190:	cmp	r0, r1
   16194:	blt	161b4 <__assert_fail@plt+0x51c0>
   16198:	b	161c8 <__assert_fail@plt+0x51d4>
   1619c:	ldr	r0, [fp, #8]
   161a0:	mvn	r1, #0
   161a4:	udiv	r0, r1, r0
   161a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   161ac:	cmp	r0, r1
   161b0:	bcs	161c8 <__assert_fail@plt+0x51d4>
   161b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161b8:	ldr	r1, [fp, #8]
   161bc:	mul	r0, r0, r1
   161c0:	str	r0, [fp, #-28]	; 0xffffffe4
   161c4:	b	1667c <__assert_fail@plt+0x5688>
   161c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161cc:	ldr	r1, [fp, #8]
   161d0:	mul	r0, r0, r1
   161d4:	str	r0, [fp, #-28]	; 0xffffffe4
   161d8:	b	16688 <__assert_fail@plt+0x5694>
   161dc:	b	161e0 <__assert_fail@plt+0x51ec>
   161e0:	ldr	r0, [fp, #8]
   161e4:	cmp	r0, #0
   161e8:	bge	16358 <__assert_fail@plt+0x5364>
   161ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161f0:	cmp	r0, #0
   161f4:	bge	162d0 <__assert_fail@plt+0x52dc>
   161f8:	b	161fc <__assert_fail@plt+0x5208>
   161fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16200:	ldr	r1, [fp, #8]
   16204:	asr	r3, r1, #31
   16208:	mvn	r2, #0
   1620c:	mvn	ip, #-2147483648	; 0x80000000
   16210:	str	r0, [fp, #-68]	; 0xffffffbc
   16214:	mov	r0, r2
   16218:	str	r1, [fp, #-72]	; 0xffffffb8
   1621c:	mov	r1, ip
   16220:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16224:	bl	1a19c <__assert_fail@plt+0x91a8>
   16228:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1622c:	subs	r0, r2, r0
   16230:	rscs	r1, r1, r2, asr #31
   16234:	blt	16420 <__assert_fail@plt+0x542c>
   16238:	b	16434 <__assert_fail@plt+0x5440>
   1623c:	b	16240 <__assert_fail@plt+0x524c>
   16240:	ldr	r0, [pc, #212]	; 1631c <__assert_fail@plt+0x5328>
   16244:	ldr	r1, [fp, #8]
   16248:	cmp	r1, r0
   1624c:	blt	16264 <__assert_fail@plt+0x5270>
   16250:	b	1627c <__assert_fail@plt+0x5288>
   16254:	ldr	r0, [fp, #8]
   16258:	movw	r1, #0
   1625c:	cmp	r1, r0
   16260:	bge	1627c <__assert_fail@plt+0x5288>
   16264:	mov	r0, #0
   16268:	mvn	r1, #0
   1626c:	str	r1, [fp, #-76]	; 0xffffffb4
   16270:	str	r0, [fp, #-80]	; 0xffffffb0
   16274:	b	162b0 <__assert_fail@plt+0x52bc>
   16278:	svcvc	0x00ffffff
   1627c:	ldr	r0, [fp, #8]
   16280:	rsb	r0, r0, #0
   16284:	asr	r3, r0, #31
   16288:	mvn	r1, #0
   1628c:	mvn	r2, #-2147483648	; 0x80000000
   16290:	str	r0, [fp, #-84]	; 0xffffffac
   16294:	mov	r0, r1
   16298:	mov	r1, r2
   1629c:	ldr	r2, [fp, #-84]	; 0xffffffac
   162a0:	bl	1a19c <__assert_fail@plt+0x91a8>
   162a4:	str	r0, [fp, #-76]	; 0xffffffb4
   162a8:	str	r1, [fp, #-80]	; 0xffffffb0
   162ac:	b	162b0 <__assert_fail@plt+0x52bc>
   162b0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   162b4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   162b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162bc:	mvn	r2, r2
   162c0:	subs	r1, r2, r1
   162c4:	rscs	r0, r0, r2, asr #31
   162c8:	bge	16420 <__assert_fail@plt+0x542c>
   162cc:	b	16434 <__assert_fail@plt+0x5440>
   162d0:	ldr	r0, [fp, #8]
   162d4:	cmn	r0, #1
   162d8:	bne	16320 <__assert_fail@plt+0x532c>
   162dc:	b	162e0 <__assert_fail@plt+0x52ec>
   162e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162e4:	mov	r1, #-2147483648	; 0x80000000
   162e8:	add	r1, r1, r0, asr #31
   162ec:	rsbs	r0, r0, #0
   162f0:	rscs	r1, r1, #0
   162f4:	blt	16420 <__assert_fail@plt+0x542c>
   162f8:	b	16434 <__assert_fail@plt+0x5440>
   162fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16300:	movw	r1, #0
   16304:	cmp	r1, r0
   16308:	bge	16434 <__assert_fail@plt+0x5440>
   1630c:	mov	r0, #0
   16310:	cmp	r0, #0
   16314:	bne	16420 <__assert_fail@plt+0x542c>
   16318:	b	16434 <__assert_fail@plt+0x5440>
   1631c:	andhi	r0, r0, r1
   16320:	ldr	r0, [fp, #8]
   16324:	asr	r3, r0, #31
   16328:	mov	r1, #0
   1632c:	mov	r2, #-2147483648	; 0x80000000
   16330:	str	r0, [fp, #-88]	; 0xffffffa8
   16334:	mov	r0, r1
   16338:	mov	r1, r2
   1633c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16340:	bl	1a19c <__assert_fail@plt+0x91a8>
   16344:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16348:	subs	r0, r0, r2
   1634c:	sbcs	r1, r1, r2, asr #31
   16350:	blt	16420 <__assert_fail@plt+0x542c>
   16354:	b	16434 <__assert_fail@plt+0x5440>
   16358:	ldr	r0, [fp, #8]
   1635c:	cmp	r0, #0
   16360:	bne	16368 <__assert_fail@plt+0x5374>
   16364:	b	16434 <__assert_fail@plt+0x5440>
   16368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1636c:	cmp	r0, #0
   16370:	bge	163e8 <__assert_fail@plt+0x53f4>
   16374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16378:	cmn	r0, #1
   1637c:	bne	163b0 <__assert_fail@plt+0x53bc>
   16380:	b	16384 <__assert_fail@plt+0x5390>
   16384:	ldr	r0, [fp, #8]
   16388:	mov	r1, #-2147483648	; 0x80000000
   1638c:	add	r1, r1, r0, asr #31
   16390:	rsbs	r0, r0, #0
   16394:	rscs	r1, r1, #0
   16398:	blt	16420 <__assert_fail@plt+0x542c>
   1639c:	b	16434 <__assert_fail@plt+0x5440>
   163a0:	mov	r0, #0
   163a4:	cmp	r0, #0
   163a8:	bne	16420 <__assert_fail@plt+0x542c>
   163ac:	b	16434 <__assert_fail@plt+0x5440>
   163b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163b4:	asr	r3, r0, #31
   163b8:	mov	r1, #0
   163bc:	mov	r2, #-2147483648	; 0x80000000
   163c0:	str	r0, [fp, #-92]	; 0xffffffa4
   163c4:	mov	r0, r1
   163c8:	mov	r1, r2
   163cc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   163d0:	bl	1a19c <__assert_fail@plt+0x91a8>
   163d4:	ldr	r2, [fp, #8]
   163d8:	subs	r0, r0, r2
   163dc:	sbcs	r1, r1, r2, asr #31
   163e0:	blt	16420 <__assert_fail@plt+0x542c>
   163e4:	b	16434 <__assert_fail@plt+0x5440>
   163e8:	ldr	r0, [fp, #8]
   163ec:	asr	r3, r0, #31
   163f0:	mvn	r1, #0
   163f4:	mvn	r2, #-2147483648	; 0x80000000
   163f8:	str	r0, [fp, #-96]	; 0xffffffa0
   163fc:	mov	r0, r1
   16400:	mov	r1, r2
   16404:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16408:	bl	1a19c <__assert_fail@plt+0x91a8>
   1640c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16410:	subs	r0, r0, r2
   16414:	sbcs	r1, r1, r2, asr #31
   16418:	bge	16434 <__assert_fail@plt+0x5440>
   1641c:	b	16420 <__assert_fail@plt+0x542c>
   16420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16424:	ldr	r1, [fp, #8]
   16428:	mul	r0, r0, r1
   1642c:	str	r0, [fp, #-28]	; 0xffffffe4
   16430:	b	1667c <__assert_fail@plt+0x5688>
   16434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16438:	ldr	r1, [fp, #8]
   1643c:	mul	r0, r0, r1
   16440:	str	r0, [fp, #-28]	; 0xffffffe4
   16444:	b	16688 <__assert_fail@plt+0x5694>
   16448:	ldr	r0, [fp, #8]
   1644c:	cmp	r0, #0
   16450:	bge	165a0 <__assert_fail@plt+0x55ac>
   16454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16458:	cmp	r0, #0
   1645c:	bge	16528 <__assert_fail@plt+0x5534>
   16460:	b	164a0 <__assert_fail@plt+0x54ac>
   16464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16468:	ldr	r1, [fp, #8]
   1646c:	asr	r3, r1, #31
   16470:	mvn	r2, #0
   16474:	str	r0, [fp, #-100]	; 0xffffff9c
   16478:	mov	r0, r2
   1647c:	str	r1, [fp, #-104]	; 0xffffff98
   16480:	mov	r1, r2
   16484:	ldr	r2, [fp, #-104]	; 0xffffff98
   16488:	bl	1a270 <__assert_fail@plt+0x927c>
   1648c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16490:	subs	r0, r2, r0
   16494:	rscs	r1, r1, r2, asr #31
   16498:	bcc	16654 <__assert_fail@plt+0x5660>
   1649c:	b	16668 <__assert_fail@plt+0x5674>
   164a0:	b	164a4 <__assert_fail@plt+0x54b0>
   164a4:	ldr	r0, [pc, #-400]	; 1631c <__assert_fail@plt+0x5328>
   164a8:	ldr	r1, [fp, #8]
   164ac:	cmp	r1, r0
   164b0:	blt	164c8 <__assert_fail@plt+0x54d4>
   164b4:	b	164dc <__assert_fail@plt+0x54e8>
   164b8:	ldr	r0, [fp, #8]
   164bc:	movw	r1, #0
   164c0:	cmp	r1, r0
   164c4:	bge	164dc <__assert_fail@plt+0x54e8>
   164c8:	mov	r0, #1
   164cc:	mvn	r1, #0
   164d0:	str	r1, [sp, #108]	; 0x6c
   164d4:	str	r0, [sp, #104]	; 0x68
   164d8:	b	16508 <__assert_fail@plt+0x5514>
   164dc:	ldr	r0, [fp, #8]
   164e0:	rsb	r0, r0, #0
   164e4:	asr	r3, r0, #31
   164e8:	mvn	r1, #0
   164ec:	str	r0, [sp, #100]	; 0x64
   164f0:	mov	r0, r1
   164f4:	ldr	r2, [sp, #100]	; 0x64
   164f8:	bl	1a270 <__assert_fail@plt+0x927c>
   164fc:	str	r0, [sp, #108]	; 0x6c
   16500:	str	r1, [sp, #104]	; 0x68
   16504:	b	16508 <__assert_fail@plt+0x5514>
   16508:	ldr	r0, [sp, #104]	; 0x68
   1650c:	ldr	r1, [sp, #108]	; 0x6c
   16510:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16514:	mvn	r2, r2
   16518:	subs	r1, r2, r1
   1651c:	rscs	r0, r0, r2, asr #31
   16520:	bcs	16654 <__assert_fail@plt+0x5660>
   16524:	b	16668 <__assert_fail@plt+0x5674>
   16528:	b	1652c <__assert_fail@plt+0x5538>
   1652c:	b	16584 <__assert_fail@plt+0x5590>
   16530:	b	16584 <__assert_fail@plt+0x5590>
   16534:	ldr	r0, [fp, #8]
   16538:	cmn	r0, #1
   1653c:	bne	16584 <__assert_fail@plt+0x5590>
   16540:	b	16544 <__assert_fail@plt+0x5550>
   16544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16548:	add	r0, r0, #0
   1654c:	movw	r1, #0
   16550:	cmp	r1, r0
   16554:	blt	16654 <__assert_fail@plt+0x5660>
   16558:	b	16668 <__assert_fail@plt+0x5674>
   1655c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16560:	movw	r1, #0
   16564:	cmp	r1, r0
   16568:	bge	16668 <__assert_fail@plt+0x5674>
   1656c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16570:	sub	r0, r0, #1
   16574:	mvn	r1, #0
   16578:	cmp	r1, r0
   1657c:	blt	16654 <__assert_fail@plt+0x5660>
   16580:	b	16668 <__assert_fail@plt+0x5674>
   16584:	ldr	r0, [fp, #8]
   16588:	movw	r1, #0
   1658c:	sdiv	r0, r1, r0
   16590:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16594:	cmp	r0, r1
   16598:	blt	16654 <__assert_fail@plt+0x5660>
   1659c:	b	16668 <__assert_fail@plt+0x5674>
   165a0:	ldr	r0, [fp, #8]
   165a4:	cmp	r0, #0
   165a8:	bne	165b0 <__assert_fail@plt+0x55bc>
   165ac:	b	16668 <__assert_fail@plt+0x5674>
   165b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165b4:	cmp	r0, #0
   165b8:	bge	16624 <__assert_fail@plt+0x5630>
   165bc:	b	165c0 <__assert_fail@plt+0x55cc>
   165c0:	b	16608 <__assert_fail@plt+0x5614>
   165c4:	b	16608 <__assert_fail@plt+0x5614>
   165c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165cc:	cmn	r0, #1
   165d0:	bne	16608 <__assert_fail@plt+0x5614>
   165d4:	b	165d8 <__assert_fail@plt+0x55e4>
   165d8:	ldr	r0, [fp, #8]
   165dc:	add	r0, r0, #0
   165e0:	movw	r1, #0
   165e4:	cmp	r1, r0
   165e8:	blt	16654 <__assert_fail@plt+0x5660>
   165ec:	b	16668 <__assert_fail@plt+0x5674>
   165f0:	ldr	r0, [fp, #8]
   165f4:	sub	r0, r0, #1
   165f8:	mvn	r1, #0
   165fc:	cmp	r1, r0
   16600:	blt	16654 <__assert_fail@plt+0x5660>
   16604:	b	16668 <__assert_fail@plt+0x5674>
   16608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1660c:	movw	r1, #0
   16610:	sdiv	r0, r1, r0
   16614:	ldr	r1, [fp, #8]
   16618:	cmp	r0, r1
   1661c:	blt	16654 <__assert_fail@plt+0x5660>
   16620:	b	16668 <__assert_fail@plt+0x5674>
   16624:	ldr	r0, [fp, #8]
   16628:	asr	r3, r0, #31
   1662c:	mvn	r1, #0
   16630:	str	r0, [sp, #96]	; 0x60
   16634:	mov	r0, r1
   16638:	ldr	r2, [sp, #96]	; 0x60
   1663c:	bl	1a270 <__assert_fail@plt+0x927c>
   16640:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16644:	subs	r0, r0, r2
   16648:	sbcs	r1, r1, r2, asr #31
   1664c:	bcs	16668 <__assert_fail@plt+0x5674>
   16650:	b	16654 <__assert_fail@plt+0x5660>
   16654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16658:	ldr	r1, [fp, #8]
   1665c:	mul	r0, r0, r1
   16660:	str	r0, [fp, #-28]	; 0xffffffe4
   16664:	b	1667c <__assert_fail@plt+0x5688>
   16668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1666c:	ldr	r1, [fp, #8]
   16670:	mul	r0, r0, r1
   16674:	str	r0, [fp, #-28]	; 0xffffffe4
   16678:	b	16688 <__assert_fail@plt+0x5694>
   1667c:	ldr	r0, [pc, #-1036]	; 16278 <__assert_fail@plt+0x5284>
   16680:	str	r0, [sp, #92]	; 0x5c
   16684:	b	166a8 <__assert_fail@plt+0x56b4>
   16688:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1668c:	cmp	r0, #64	; 0x40
   16690:	movw	r0, #0
   16694:	movlt	r0, #1
   16698:	tst	r0, #1
   1669c:	movw	r0, #64	; 0x40
   166a0:	moveq	r0, #0
   166a4:	str	r0, [sp, #92]	; 0x5c
   166a8:	ldr	r0, [sp, #92]	; 0x5c
   166ac:	str	r0, [fp, #-32]	; 0xffffffe0
   166b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   166b4:	cmp	r0, #0
   166b8:	beq	166e8 <__assert_fail@plt+0x56f4>
   166bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   166c0:	ldr	r1, [fp, #8]
   166c4:	sdiv	r0, r0, r1
   166c8:	str	r0, [fp, #-24]	; 0xffffffe8
   166cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   166d0:	mov	r1, r0
   166d4:	ldr	r2, [fp, #8]
   166d8:	sdiv	r3, r0, r2
   166dc:	mls	r0, r3, r2, r0
   166e0:	sub	r0, r1, r0
   166e4:	str	r0, [fp, #-28]	; 0xffffffe4
   166e8:	ldr	r0, [fp, #-4]
   166ec:	movw	r1, #0
   166f0:	cmp	r0, r1
   166f4:	bne	16704 <__assert_fail@plt+0x5710>
   166f8:	ldr	r0, [fp, #-8]
   166fc:	movw	r1, #0
   16700:	str	r1, [r0]
   16704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16708:	ldr	r1, [fp, #-20]	; 0xffffffec
   1670c:	sub	r0, r0, r1
   16710:	ldr	r1, [fp, #-12]
   16714:	cmp	r0, r1
   16718:	bge	17b04 <__assert_fail@plt+0x6b10>
   1671c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16720:	ldr	r1, [fp, #-12]
   16724:	add	r1, r0, r1
   16728:	mov	r2, #1
   1672c:	cmp	r1, r0
   16730:	movwvc	r2, #0
   16734:	str	r1, [fp, #-24]	; 0xffffffe8
   16738:	tst	r2, #1
   1673c:	bne	17b00 <__assert_fail@plt+0x6b0c>
   16740:	ldr	r0, [fp, #-16]
   16744:	movw	r1, #0
   16748:	cmp	r1, r0
   1674c:	bgt	16760 <__assert_fail@plt+0x576c>
   16750:	ldr	r0, [fp, #-16]
   16754:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16758:	cmp	r0, r1
   1675c:	blt	17b00 <__assert_fail@plt+0x6b0c>
   16760:	b	16b3c <__assert_fail@plt+0x5b48>
   16764:			; <UNDEFINED> instruction: 0xffff8000
   16768:	b	1676c <__assert_fail@plt+0x5778>
   1676c:	ldr	r0, [fp, #8]
   16770:	cmp	r0, #0
   16774:	bge	16888 <__assert_fail@plt+0x5894>
   16778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1677c:	cmp	r0, #0
   16780:	bge	1680c <__assert_fail@plt+0x5818>
   16784:	b	16788 <__assert_fail@plt+0x5794>
   16788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1678c:	ldr	r1, [fp, #8]
   16790:	movw	r2, #127	; 0x7f
   16794:	sdiv	r1, r2, r1
   16798:	cmp	r0, r1
   1679c:	blt	16928 <__assert_fail@plt+0x5934>
   167a0:	b	16940 <__assert_fail@plt+0x594c>
   167a4:	b	167a8 <__assert_fail@plt+0x57b4>
   167a8:	ldr	r0, [pc, #-1172]	; 1631c <__assert_fail@plt+0x5328>
   167ac:	ldr	r1, [fp, #8]
   167b0:	cmp	r1, r0
   167b4:	blt	167cc <__assert_fail@plt+0x57d8>
   167b8:	b	167d8 <__assert_fail@plt+0x57e4>
   167bc:	ldr	r0, [fp, #8]
   167c0:	movw	r1, #0
   167c4:	cmp	r1, r0
   167c8:	bge	167d8 <__assert_fail@plt+0x57e4>
   167cc:	movw	r0, #0
   167d0:	str	r0, [sp, #88]	; 0x58
   167d4:	b	167f0 <__assert_fail@plt+0x57fc>
   167d8:	ldr	r0, [fp, #8]
   167dc:	movw	r1, #0
   167e0:	sub	r0, r1, r0
   167e4:	movw	r1, #127	; 0x7f
   167e8:	sdiv	r0, r1, r0
   167ec:	str	r0, [sp, #88]	; 0x58
   167f0:	ldr	r0, [sp, #88]	; 0x58
   167f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167f8:	mvn	r2, #0
   167fc:	sub	r1, r2, r1
   16800:	cmp	r0, r1
   16804:	ble	16928 <__assert_fail@plt+0x5934>
   16808:	b	16940 <__assert_fail@plt+0x594c>
   1680c:	b	16810 <__assert_fail@plt+0x581c>
   16810:	b	1686c <__assert_fail@plt+0x5878>
   16814:	b	1686c <__assert_fail@plt+0x5878>
   16818:	ldr	r0, [fp, #8]
   1681c:	cmn	r0, #1
   16820:	bne	1686c <__assert_fail@plt+0x5878>
   16824:	b	16828 <__assert_fail@plt+0x5834>
   16828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1682c:	mvn	r1, #127	; 0x7f
   16830:	add	r0, r0, r1
   16834:	movw	r1, #0
   16838:	cmp	r1, r0
   1683c:	blt	16928 <__assert_fail@plt+0x5934>
   16840:	b	16940 <__assert_fail@plt+0x594c>
   16844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16848:	movw	r1, #0
   1684c:	cmp	r1, r0
   16850:	bge	16940 <__assert_fail@plt+0x594c>
   16854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16858:	sub	r0, r0, #1
   1685c:	movw	r1, #127	; 0x7f
   16860:	cmp	r1, r0
   16864:	blt	16928 <__assert_fail@plt+0x5934>
   16868:	b	16940 <__assert_fail@plt+0x594c>
   1686c:	ldr	r0, [fp, #8]
   16870:	mvn	r1, #127	; 0x7f
   16874:	sdiv	r0, r1, r0
   16878:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1687c:	cmp	r0, r1
   16880:	blt	16928 <__assert_fail@plt+0x5934>
   16884:	b	16940 <__assert_fail@plt+0x594c>
   16888:	ldr	r0, [fp, #8]
   1688c:	cmp	r0, #0
   16890:	bne	16898 <__assert_fail@plt+0x58a4>
   16894:	b	16940 <__assert_fail@plt+0x594c>
   16898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1689c:	cmp	r0, #0
   168a0:	bge	16910 <__assert_fail@plt+0x591c>
   168a4:	b	168a8 <__assert_fail@plt+0x58b4>
   168a8:	b	168f4 <__assert_fail@plt+0x5900>
   168ac:	b	168f4 <__assert_fail@plt+0x5900>
   168b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168b4:	cmn	r0, #1
   168b8:	bne	168f4 <__assert_fail@plt+0x5900>
   168bc:	b	168c0 <__assert_fail@plt+0x58cc>
   168c0:	ldr	r0, [fp, #8]
   168c4:	mvn	r1, #127	; 0x7f
   168c8:	add	r0, r0, r1
   168cc:	movw	r1, #0
   168d0:	cmp	r1, r0
   168d4:	blt	16928 <__assert_fail@plt+0x5934>
   168d8:	b	16940 <__assert_fail@plt+0x594c>
   168dc:	ldr	r0, [fp, #8]
   168e0:	sub	r0, r0, #1
   168e4:	movw	r1, #127	; 0x7f
   168e8:	cmp	r1, r0
   168ec:	blt	16928 <__assert_fail@plt+0x5934>
   168f0:	b	16940 <__assert_fail@plt+0x594c>
   168f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168f8:	mvn	r1, #127	; 0x7f
   168fc:	sdiv	r0, r1, r0
   16900:	ldr	r1, [fp, #8]
   16904:	cmp	r0, r1
   16908:	blt	16928 <__assert_fail@plt+0x5934>
   1690c:	b	16940 <__assert_fail@plt+0x594c>
   16910:	ldr	r0, [fp, #8]
   16914:	movw	r1, #127	; 0x7f
   16918:	sdiv	r0, r1, r0
   1691c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16920:	cmp	r0, r1
   16924:	bge	16940 <__assert_fail@plt+0x594c>
   16928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1692c:	ldr	r1, [fp, #8]
   16930:	mul	r0, r0, r1
   16934:	sxtb	r0, r0
   16938:	str	r0, [fp, #-28]	; 0xffffffe4
   1693c:	b	17b00 <__assert_fail@plt+0x6b0c>
   16940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16944:	ldr	r1, [fp, #8]
   16948:	mul	r0, r0, r1
   1694c:	sxtb	r0, r0
   16950:	str	r0, [fp, #-28]	; 0xffffffe4
   16954:	b	17b04 <__assert_fail@plt+0x6b10>
   16958:	ldr	r0, [fp, #8]
   1695c:	cmp	r0, #0
   16960:	bge	16a70 <__assert_fail@plt+0x5a7c>
   16964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16968:	cmp	r0, #0
   1696c:	bge	169f8 <__assert_fail@plt+0x5a04>
   16970:	b	16974 <__assert_fail@plt+0x5980>
   16974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16978:	ldr	r1, [fp, #8]
   1697c:	movw	r2, #255	; 0xff
   16980:	sdiv	r1, r2, r1
   16984:	cmp	r0, r1
   16988:	blt	16b0c <__assert_fail@plt+0x5b18>
   1698c:	b	16b24 <__assert_fail@plt+0x5b30>
   16990:	b	16994 <__assert_fail@plt+0x59a0>
   16994:	ldr	r0, [pc, #-1664]	; 1631c <__assert_fail@plt+0x5328>
   16998:	ldr	r1, [fp, #8]
   1699c:	cmp	r1, r0
   169a0:	blt	169b8 <__assert_fail@plt+0x59c4>
   169a4:	b	169c4 <__assert_fail@plt+0x59d0>
   169a8:	ldr	r0, [fp, #8]
   169ac:	movw	r1, #0
   169b0:	cmp	r1, r0
   169b4:	bge	169c4 <__assert_fail@plt+0x59d0>
   169b8:	movw	r0, #0
   169bc:	str	r0, [sp, #84]	; 0x54
   169c0:	b	169dc <__assert_fail@plt+0x59e8>
   169c4:	ldr	r0, [fp, #8]
   169c8:	movw	r1, #0
   169cc:	sub	r0, r1, r0
   169d0:	movw	r1, #255	; 0xff
   169d4:	sdiv	r0, r1, r0
   169d8:	str	r0, [sp, #84]	; 0x54
   169dc:	ldr	r0, [sp, #84]	; 0x54
   169e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169e4:	mvn	r2, #0
   169e8:	sub	r1, r2, r1
   169ec:	cmp	r0, r1
   169f0:	ble	16b0c <__assert_fail@plt+0x5b18>
   169f4:	b	16b24 <__assert_fail@plt+0x5b30>
   169f8:	b	169fc <__assert_fail@plt+0x5a08>
   169fc:	b	16a54 <__assert_fail@plt+0x5a60>
   16a00:	b	16a54 <__assert_fail@plt+0x5a60>
   16a04:	ldr	r0, [fp, #8]
   16a08:	cmn	r0, #1
   16a0c:	bne	16a54 <__assert_fail@plt+0x5a60>
   16a10:	b	16a14 <__assert_fail@plt+0x5a20>
   16a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a18:	add	r0, r0, #0
   16a1c:	movw	r1, #0
   16a20:	cmp	r1, r0
   16a24:	blt	16b0c <__assert_fail@plt+0x5b18>
   16a28:	b	16b24 <__assert_fail@plt+0x5b30>
   16a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a30:	movw	r1, #0
   16a34:	cmp	r1, r0
   16a38:	bge	16b24 <__assert_fail@plt+0x5b30>
   16a3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a40:	sub	r0, r0, #1
   16a44:	mvn	r1, #0
   16a48:	cmp	r1, r0
   16a4c:	blt	16b0c <__assert_fail@plt+0x5b18>
   16a50:	b	16b24 <__assert_fail@plt+0x5b30>
   16a54:	ldr	r0, [fp, #8]
   16a58:	movw	r1, #0
   16a5c:	sdiv	r0, r1, r0
   16a60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a64:	cmp	r0, r1
   16a68:	blt	16b0c <__assert_fail@plt+0x5b18>
   16a6c:	b	16b24 <__assert_fail@plt+0x5b30>
   16a70:	ldr	r0, [fp, #8]
   16a74:	cmp	r0, #0
   16a78:	bne	16a80 <__assert_fail@plt+0x5a8c>
   16a7c:	b	16b24 <__assert_fail@plt+0x5b30>
   16a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a84:	cmp	r0, #0
   16a88:	bge	16af4 <__assert_fail@plt+0x5b00>
   16a8c:	b	16a90 <__assert_fail@plt+0x5a9c>
   16a90:	b	16ad8 <__assert_fail@plt+0x5ae4>
   16a94:	b	16ad8 <__assert_fail@plt+0x5ae4>
   16a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a9c:	cmn	r0, #1
   16aa0:	bne	16ad8 <__assert_fail@plt+0x5ae4>
   16aa4:	b	16aa8 <__assert_fail@plt+0x5ab4>
   16aa8:	ldr	r0, [fp, #8]
   16aac:	add	r0, r0, #0
   16ab0:	movw	r1, #0
   16ab4:	cmp	r1, r0
   16ab8:	blt	16b0c <__assert_fail@plt+0x5b18>
   16abc:	b	16b24 <__assert_fail@plt+0x5b30>
   16ac0:	ldr	r0, [fp, #8]
   16ac4:	sub	r0, r0, #1
   16ac8:	mvn	r1, #0
   16acc:	cmp	r1, r0
   16ad0:	blt	16b0c <__assert_fail@plt+0x5b18>
   16ad4:	b	16b24 <__assert_fail@plt+0x5b30>
   16ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16adc:	movw	r1, #0
   16ae0:	sdiv	r0, r1, r0
   16ae4:	ldr	r1, [fp, #8]
   16ae8:	cmp	r0, r1
   16aec:	blt	16b0c <__assert_fail@plt+0x5b18>
   16af0:	b	16b24 <__assert_fail@plt+0x5b30>
   16af4:	ldr	r0, [fp, #8]
   16af8:	movw	r1, #255	; 0xff
   16afc:	sdiv	r0, r1, r0
   16b00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b04:	cmp	r0, r1
   16b08:	bge	16b24 <__assert_fail@plt+0x5b30>
   16b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b10:	ldr	r1, [fp, #8]
   16b14:	mul	r0, r0, r1
   16b18:	and	r0, r0, #255	; 0xff
   16b1c:	str	r0, [fp, #-28]	; 0xffffffe4
   16b20:	b	17b00 <__assert_fail@plt+0x6b0c>
   16b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b28:	ldr	r1, [fp, #8]
   16b2c:	mul	r0, r0, r1
   16b30:	and	r0, r0, #255	; 0xff
   16b34:	str	r0, [fp, #-28]	; 0xffffffe4
   16b38:	b	17b04 <__assert_fail@plt+0x6b10>
   16b3c:	b	16f18 <__assert_fail@plt+0x5f24>
   16b40:	b	16b44 <__assert_fail@plt+0x5b50>
   16b44:	ldr	r0, [fp, #8]
   16b48:	cmp	r0, #0
   16b4c:	bge	16c64 <__assert_fail@plt+0x5c70>
   16b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b54:	cmp	r0, #0
   16b58:	bge	16be8 <__assert_fail@plt+0x5bf4>
   16b5c:	b	16b60 <__assert_fail@plt+0x5b6c>
   16b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b64:	ldr	r1, [fp, #8]
   16b68:	movw	r2, #32767	; 0x7fff
   16b6c:	sdiv	r1, r2, r1
   16b70:	cmp	r0, r1
   16b74:	blt	16d04 <__assert_fail@plt+0x5d10>
   16b78:	b	16d1c <__assert_fail@plt+0x5d28>
   16b7c:	andhi	r0, r0, r0
   16b80:	b	16b84 <__assert_fail@plt+0x5b90>
   16b84:	ldr	r0, [pc, #4004]	; 17b30 <__assert_fail@plt+0x6b3c>
   16b88:	ldr	r1, [fp, #8]
   16b8c:	cmp	r1, r0
   16b90:	blt	16ba8 <__assert_fail@plt+0x5bb4>
   16b94:	b	16bb4 <__assert_fail@plt+0x5bc0>
   16b98:	ldr	r0, [fp, #8]
   16b9c:	movw	r1, #0
   16ba0:	cmp	r1, r0
   16ba4:	bge	16bb4 <__assert_fail@plt+0x5bc0>
   16ba8:	movw	r0, #0
   16bac:	str	r0, [sp, #80]	; 0x50
   16bb0:	b	16bcc <__assert_fail@plt+0x5bd8>
   16bb4:	ldr	r0, [fp, #8]
   16bb8:	movw	r1, #0
   16bbc:	sub	r0, r1, r0
   16bc0:	movw	r1, #32767	; 0x7fff
   16bc4:	sdiv	r0, r1, r0
   16bc8:	str	r0, [sp, #80]	; 0x50
   16bcc:	ldr	r0, [sp, #80]	; 0x50
   16bd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16bd4:	mvn	r2, #0
   16bd8:	sub	r1, r2, r1
   16bdc:	cmp	r0, r1
   16be0:	ble	16d04 <__assert_fail@plt+0x5d10>
   16be4:	b	16d1c <__assert_fail@plt+0x5d28>
   16be8:	b	16bec <__assert_fail@plt+0x5bf8>
   16bec:	b	16c48 <__assert_fail@plt+0x5c54>
   16bf0:	b	16c48 <__assert_fail@plt+0x5c54>
   16bf4:	ldr	r0, [fp, #8]
   16bf8:	cmn	r0, #1
   16bfc:	bne	16c48 <__assert_fail@plt+0x5c54>
   16c00:	b	16c04 <__assert_fail@plt+0x5c10>
   16c04:	ldr	r0, [pc, #3884]	; 17b38 <__assert_fail@plt+0x6b44>
   16c08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c0c:	add	r0, r1, r0
   16c10:	movw	r1, #0
   16c14:	cmp	r1, r0
   16c18:	blt	16d04 <__assert_fail@plt+0x5d10>
   16c1c:	b	16d1c <__assert_fail@plt+0x5d28>
   16c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c24:	movw	r1, #0
   16c28:	cmp	r1, r0
   16c2c:	bge	16d1c <__assert_fail@plt+0x5d28>
   16c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c34:	sub	r0, r0, #1
   16c38:	movw	r1, #32767	; 0x7fff
   16c3c:	cmp	r1, r0
   16c40:	blt	16d04 <__assert_fail@plt+0x5d10>
   16c44:	b	16d1c <__assert_fail@plt+0x5d28>
   16c48:	ldr	r0, [pc, #3816]	; 17b38 <__assert_fail@plt+0x6b44>
   16c4c:	ldr	r1, [fp, #8]
   16c50:	sdiv	r0, r0, r1
   16c54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c58:	cmp	r0, r1
   16c5c:	blt	16d04 <__assert_fail@plt+0x5d10>
   16c60:	b	16d1c <__assert_fail@plt+0x5d28>
   16c64:	ldr	r0, [fp, #8]
   16c68:	cmp	r0, #0
   16c6c:	bne	16c74 <__assert_fail@plt+0x5c80>
   16c70:	b	16d1c <__assert_fail@plt+0x5d28>
   16c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c78:	cmp	r0, #0
   16c7c:	bge	16cec <__assert_fail@plt+0x5cf8>
   16c80:	b	16c84 <__assert_fail@plt+0x5c90>
   16c84:	b	16cd0 <__assert_fail@plt+0x5cdc>
   16c88:	b	16cd0 <__assert_fail@plt+0x5cdc>
   16c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c90:	cmn	r0, #1
   16c94:	bne	16cd0 <__assert_fail@plt+0x5cdc>
   16c98:	b	16c9c <__assert_fail@plt+0x5ca8>
   16c9c:	ldr	r0, [pc, #3732]	; 17b38 <__assert_fail@plt+0x6b44>
   16ca0:	ldr	r1, [fp, #8]
   16ca4:	add	r0, r1, r0
   16ca8:	movw	r1, #0
   16cac:	cmp	r1, r0
   16cb0:	blt	16d04 <__assert_fail@plt+0x5d10>
   16cb4:	b	16d1c <__assert_fail@plt+0x5d28>
   16cb8:	ldr	r0, [fp, #8]
   16cbc:	sub	r0, r0, #1
   16cc0:	movw	r1, #32767	; 0x7fff
   16cc4:	cmp	r1, r0
   16cc8:	blt	16d04 <__assert_fail@plt+0x5d10>
   16ccc:	b	16d1c <__assert_fail@plt+0x5d28>
   16cd0:	ldr	r0, [pc, #3680]	; 17b38 <__assert_fail@plt+0x6b44>
   16cd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cd8:	sdiv	r0, r0, r1
   16cdc:	ldr	r1, [fp, #8]
   16ce0:	cmp	r0, r1
   16ce4:	blt	16d04 <__assert_fail@plt+0x5d10>
   16ce8:	b	16d1c <__assert_fail@plt+0x5d28>
   16cec:	ldr	r0, [fp, #8]
   16cf0:	movw	r1, #32767	; 0x7fff
   16cf4:	sdiv	r0, r1, r0
   16cf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cfc:	cmp	r0, r1
   16d00:	bge	16d1c <__assert_fail@plt+0x5d28>
   16d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d08:	ldr	r1, [fp, #8]
   16d0c:	mul	r0, r0, r1
   16d10:	sxth	r0, r0
   16d14:	str	r0, [fp, #-28]	; 0xffffffe4
   16d18:	b	17b00 <__assert_fail@plt+0x6b0c>
   16d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d20:	ldr	r1, [fp, #8]
   16d24:	mul	r0, r0, r1
   16d28:	sxth	r0, r0
   16d2c:	str	r0, [fp, #-28]	; 0xffffffe4
   16d30:	b	17b04 <__assert_fail@plt+0x6b10>
   16d34:	ldr	r0, [fp, #8]
   16d38:	cmp	r0, #0
   16d3c:	bge	16e4c <__assert_fail@plt+0x5e58>
   16d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d44:	cmp	r0, #0
   16d48:	bge	16dd4 <__assert_fail@plt+0x5de0>
   16d4c:	b	16d50 <__assert_fail@plt+0x5d5c>
   16d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d54:	ldr	r1, [fp, #8]
   16d58:	movw	r2, #65535	; 0xffff
   16d5c:	sdiv	r1, r2, r1
   16d60:	cmp	r0, r1
   16d64:	blt	16ee8 <__assert_fail@plt+0x5ef4>
   16d68:	b	16f00 <__assert_fail@plt+0x5f0c>
   16d6c:	b	16d70 <__assert_fail@plt+0x5d7c>
   16d70:	ldr	r0, [pc, #3512]	; 17b30 <__assert_fail@plt+0x6b3c>
   16d74:	ldr	r1, [fp, #8]
   16d78:	cmp	r1, r0
   16d7c:	blt	16d94 <__assert_fail@plt+0x5da0>
   16d80:	b	16da0 <__assert_fail@plt+0x5dac>
   16d84:	ldr	r0, [fp, #8]
   16d88:	movw	r1, #0
   16d8c:	cmp	r1, r0
   16d90:	bge	16da0 <__assert_fail@plt+0x5dac>
   16d94:	movw	r0, #0
   16d98:	str	r0, [sp, #76]	; 0x4c
   16d9c:	b	16db8 <__assert_fail@plt+0x5dc4>
   16da0:	ldr	r0, [fp, #8]
   16da4:	movw	r1, #0
   16da8:	sub	r0, r1, r0
   16dac:	movw	r1, #65535	; 0xffff
   16db0:	sdiv	r0, r1, r0
   16db4:	str	r0, [sp, #76]	; 0x4c
   16db8:	ldr	r0, [sp, #76]	; 0x4c
   16dbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dc0:	mvn	r2, #0
   16dc4:	sub	r1, r2, r1
   16dc8:	cmp	r0, r1
   16dcc:	ble	16ee8 <__assert_fail@plt+0x5ef4>
   16dd0:	b	16f00 <__assert_fail@plt+0x5f0c>
   16dd4:	b	16dd8 <__assert_fail@plt+0x5de4>
   16dd8:	b	16e30 <__assert_fail@plt+0x5e3c>
   16ddc:	b	16e30 <__assert_fail@plt+0x5e3c>
   16de0:	ldr	r0, [fp, #8]
   16de4:	cmn	r0, #1
   16de8:	bne	16e30 <__assert_fail@plt+0x5e3c>
   16dec:	b	16df0 <__assert_fail@plt+0x5dfc>
   16df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16df4:	add	r0, r0, #0
   16df8:	movw	r1, #0
   16dfc:	cmp	r1, r0
   16e00:	blt	16ee8 <__assert_fail@plt+0x5ef4>
   16e04:	b	16f00 <__assert_fail@plt+0x5f0c>
   16e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e0c:	movw	r1, #0
   16e10:	cmp	r1, r0
   16e14:	bge	16f00 <__assert_fail@plt+0x5f0c>
   16e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e1c:	sub	r0, r0, #1
   16e20:	mvn	r1, #0
   16e24:	cmp	r1, r0
   16e28:	blt	16ee8 <__assert_fail@plt+0x5ef4>
   16e2c:	b	16f00 <__assert_fail@plt+0x5f0c>
   16e30:	ldr	r0, [fp, #8]
   16e34:	movw	r1, #0
   16e38:	sdiv	r0, r1, r0
   16e3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e40:	cmp	r0, r1
   16e44:	blt	16ee8 <__assert_fail@plt+0x5ef4>
   16e48:	b	16f00 <__assert_fail@plt+0x5f0c>
   16e4c:	ldr	r0, [fp, #8]
   16e50:	cmp	r0, #0
   16e54:	bne	16e5c <__assert_fail@plt+0x5e68>
   16e58:	b	16f00 <__assert_fail@plt+0x5f0c>
   16e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e60:	cmp	r0, #0
   16e64:	bge	16ed0 <__assert_fail@plt+0x5edc>
   16e68:	b	16e6c <__assert_fail@plt+0x5e78>
   16e6c:	b	16eb4 <__assert_fail@plt+0x5ec0>
   16e70:	b	16eb4 <__assert_fail@plt+0x5ec0>
   16e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e78:	cmn	r0, #1
   16e7c:	bne	16eb4 <__assert_fail@plt+0x5ec0>
   16e80:	b	16e84 <__assert_fail@plt+0x5e90>
   16e84:	ldr	r0, [fp, #8]
   16e88:	add	r0, r0, #0
   16e8c:	movw	r1, #0
   16e90:	cmp	r1, r0
   16e94:	blt	16ee8 <__assert_fail@plt+0x5ef4>
   16e98:	b	16f00 <__assert_fail@plt+0x5f0c>
   16e9c:	ldr	r0, [fp, #8]
   16ea0:	sub	r0, r0, #1
   16ea4:	mvn	r1, #0
   16ea8:	cmp	r1, r0
   16eac:	blt	16ee8 <__assert_fail@plt+0x5ef4>
   16eb0:	b	16f00 <__assert_fail@plt+0x5f0c>
   16eb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eb8:	movw	r1, #0
   16ebc:	sdiv	r0, r1, r0
   16ec0:	ldr	r1, [fp, #8]
   16ec4:	cmp	r0, r1
   16ec8:	blt	16ee8 <__assert_fail@plt+0x5ef4>
   16ecc:	b	16f00 <__assert_fail@plt+0x5f0c>
   16ed0:	ldr	r0, [fp, #8]
   16ed4:	movw	r1, #65535	; 0xffff
   16ed8:	sdiv	r0, r1, r0
   16edc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ee0:	cmp	r0, r1
   16ee4:	bge	16f00 <__assert_fail@plt+0x5f0c>
   16ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eec:	ldr	r1, [fp, #8]
   16ef0:	mul	r0, r0, r1
   16ef4:	uxth	r0, r0
   16ef8:	str	r0, [fp, #-28]	; 0xffffffe4
   16efc:	b	17b00 <__assert_fail@plt+0x6b0c>
   16f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f04:	ldr	r1, [fp, #8]
   16f08:	mul	r0, r0, r1
   16f0c:	uxth	r0, r0
   16f10:	str	r0, [fp, #-28]	; 0xffffffe4
   16f14:	b	17b04 <__assert_fail@plt+0x6b10>
   16f18:	b	16f1c <__assert_fail@plt+0x5f28>
   16f1c:	b	16f20 <__assert_fail@plt+0x5f2c>
   16f20:	ldr	r0, [fp, #8]
   16f24:	cmp	r0, #0
   16f28:	bge	1702c <__assert_fail@plt+0x6038>
   16f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f30:	cmp	r0, #0
   16f34:	bge	16fc0 <__assert_fail@plt+0x5fcc>
   16f38:	b	16f3c <__assert_fail@plt+0x5f48>
   16f3c:	ldr	r0, [pc, #3048]	; 17b2c <__assert_fail@plt+0x6b38>
   16f40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f44:	ldr	r2, [fp, #8]
   16f48:	sdiv	r0, r0, r2
   16f4c:	cmp	r1, r0
   16f50:	blt	170bc <__assert_fail@plt+0x60c8>
   16f54:	b	170d0 <__assert_fail@plt+0x60dc>
   16f58:	b	16f5c <__assert_fail@plt+0x5f68>
   16f5c:	ldr	r0, [pc, #3020]	; 17b30 <__assert_fail@plt+0x6b3c>
   16f60:	ldr	r1, [fp, #8]
   16f64:	cmp	r1, r0
   16f68:	blt	16f80 <__assert_fail@plt+0x5f8c>
   16f6c:	b	16f8c <__assert_fail@plt+0x5f98>
   16f70:	ldr	r0, [fp, #8]
   16f74:	movw	r1, #0
   16f78:	cmp	r1, r0
   16f7c:	bge	16f8c <__assert_fail@plt+0x5f98>
   16f80:	movw	r0, #0
   16f84:	str	r0, [sp, #72]	; 0x48
   16f88:	b	16fa4 <__assert_fail@plt+0x5fb0>
   16f8c:	ldr	r0, [pc, #2968]	; 17b2c <__assert_fail@plt+0x6b38>
   16f90:	ldr	r1, [fp, #8]
   16f94:	movw	r2, #0
   16f98:	sub	r1, r2, r1
   16f9c:	sdiv	r0, r0, r1
   16fa0:	str	r0, [sp, #72]	; 0x48
   16fa4:	ldr	r0, [sp, #72]	; 0x48
   16fa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fac:	mvn	r2, #0
   16fb0:	sub	r1, r2, r1
   16fb4:	cmp	r0, r1
   16fb8:	ble	170bc <__assert_fail@plt+0x60c8>
   16fbc:	b	170d0 <__assert_fail@plt+0x60dc>
   16fc0:	ldr	r0, [fp, #8]
   16fc4:	cmn	r0, #1
   16fc8:	bne	17010 <__assert_fail@plt+0x601c>
   16fcc:	b	16fd0 <__assert_fail@plt+0x5fdc>
   16fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fd4:	add	r0, r0, #-2147483648	; 0x80000000
   16fd8:	movw	r1, #0
   16fdc:	cmp	r1, r0
   16fe0:	blt	170bc <__assert_fail@plt+0x60c8>
   16fe4:	b	170d0 <__assert_fail@plt+0x60dc>
   16fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fec:	movw	r1, #0
   16ff0:	cmp	r1, r0
   16ff4:	bge	170d0 <__assert_fail@plt+0x60dc>
   16ff8:	ldr	r0, [pc, #2860]	; 17b2c <__assert_fail@plt+0x6b38>
   16ffc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17000:	sub	r1, r1, #1
   17004:	cmp	r0, r1
   17008:	blt	170bc <__assert_fail@plt+0x60c8>
   1700c:	b	170d0 <__assert_fail@plt+0x60dc>
   17010:	ldr	r0, [pc, #2844]	; 17b34 <__assert_fail@plt+0x6b40>
   17014:	ldr	r1, [fp, #8]
   17018:	sdiv	r0, r0, r1
   1701c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17020:	cmp	r0, r1
   17024:	blt	170bc <__assert_fail@plt+0x60c8>
   17028:	b	170d0 <__assert_fail@plt+0x60dc>
   1702c:	ldr	r0, [fp, #8]
   17030:	cmp	r0, #0
   17034:	bne	1703c <__assert_fail@plt+0x6048>
   17038:	b	170d0 <__assert_fail@plt+0x60dc>
   1703c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17040:	cmp	r0, #0
   17044:	bge	170a4 <__assert_fail@plt+0x60b0>
   17048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1704c:	cmn	r0, #1
   17050:	bne	17088 <__assert_fail@plt+0x6094>
   17054:	b	17058 <__assert_fail@plt+0x6064>
   17058:	ldr	r0, [fp, #8]
   1705c:	add	r0, r0, #-2147483648	; 0x80000000
   17060:	movw	r1, #0
   17064:	cmp	r1, r0
   17068:	blt	170bc <__assert_fail@plt+0x60c8>
   1706c:	b	170d0 <__assert_fail@plt+0x60dc>
   17070:	ldr	r0, [pc, #2740]	; 17b2c <__assert_fail@plt+0x6b38>
   17074:	ldr	r1, [fp, #8]
   17078:	sub	r1, r1, #1
   1707c:	cmp	r0, r1
   17080:	blt	170bc <__assert_fail@plt+0x60c8>
   17084:	b	170d0 <__assert_fail@plt+0x60dc>
   17088:	ldr	r0, [pc, #2724]	; 17b34 <__assert_fail@plt+0x6b40>
   1708c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17090:	sdiv	r0, r0, r1
   17094:	ldr	r1, [fp, #8]
   17098:	cmp	r0, r1
   1709c:	blt	170bc <__assert_fail@plt+0x60c8>
   170a0:	b	170d0 <__assert_fail@plt+0x60dc>
   170a4:	ldr	r0, [pc, #2688]	; 17b2c <__assert_fail@plt+0x6b38>
   170a8:	ldr	r1, [fp, #8]
   170ac:	sdiv	r0, r0, r1
   170b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170b4:	cmp	r0, r1
   170b8:	bge	170d0 <__assert_fail@plt+0x60dc>
   170bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170c0:	ldr	r1, [fp, #8]
   170c4:	mul	r0, r0, r1
   170c8:	str	r0, [fp, #-28]	; 0xffffffe4
   170cc:	b	17b00 <__assert_fail@plt+0x6b0c>
   170d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170d4:	ldr	r1, [fp, #8]
   170d8:	mul	r0, r0, r1
   170dc:	str	r0, [fp, #-28]	; 0xffffffe4
   170e0:	b	17b04 <__assert_fail@plt+0x6b10>
   170e4:	ldr	r0, [fp, #8]
   170e8:	cmp	r0, #0
   170ec:	bge	171fc <__assert_fail@plt+0x6208>
   170f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170f4:	cmp	r0, #0
   170f8:	bge	17184 <__assert_fail@plt+0x6190>
   170fc:	b	1711c <__assert_fail@plt+0x6128>
   17100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17104:	ldr	r1, [fp, #8]
   17108:	mvn	r2, #0
   1710c:	udiv	r1, r2, r1
   17110:	cmp	r0, r1
   17114:	bcc	17298 <__assert_fail@plt+0x62a4>
   17118:	b	172ac <__assert_fail@plt+0x62b8>
   1711c:	b	17120 <__assert_fail@plt+0x612c>
   17120:	ldr	r0, [pc, #2568]	; 17b30 <__assert_fail@plt+0x6b3c>
   17124:	ldr	r1, [fp, #8]
   17128:	cmp	r1, r0
   1712c:	blt	17144 <__assert_fail@plt+0x6150>
   17130:	b	17150 <__assert_fail@plt+0x615c>
   17134:	ldr	r0, [fp, #8]
   17138:	movw	r1, #0
   1713c:	cmp	r1, r0
   17140:	bge	17150 <__assert_fail@plt+0x615c>
   17144:	movw	r0, #1
   17148:	str	r0, [sp, #68]	; 0x44
   1714c:	b	17168 <__assert_fail@plt+0x6174>
   17150:	ldr	r0, [fp, #8]
   17154:	movw	r1, #0
   17158:	sub	r0, r1, r0
   1715c:	mvn	r1, #0
   17160:	udiv	r0, r1, r0
   17164:	str	r0, [sp, #68]	; 0x44
   17168:	ldr	r0, [sp, #68]	; 0x44
   1716c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17170:	mvn	r2, #0
   17174:	sub	r1, r2, r1
   17178:	cmp	r0, r1
   1717c:	bls	17298 <__assert_fail@plt+0x62a4>
   17180:	b	172ac <__assert_fail@plt+0x62b8>
   17184:	b	17188 <__assert_fail@plt+0x6194>
   17188:	b	171e0 <__assert_fail@plt+0x61ec>
   1718c:	b	171e0 <__assert_fail@plt+0x61ec>
   17190:	ldr	r0, [fp, #8]
   17194:	cmn	r0, #1
   17198:	bne	171e0 <__assert_fail@plt+0x61ec>
   1719c:	b	171a0 <__assert_fail@plt+0x61ac>
   171a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171a4:	add	r0, r0, #0
   171a8:	movw	r1, #0
   171ac:	cmp	r1, r0
   171b0:	blt	17298 <__assert_fail@plt+0x62a4>
   171b4:	b	172ac <__assert_fail@plt+0x62b8>
   171b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171bc:	movw	r1, #0
   171c0:	cmp	r1, r0
   171c4:	bge	172ac <__assert_fail@plt+0x62b8>
   171c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171cc:	sub	r0, r0, #1
   171d0:	mvn	r1, #0
   171d4:	cmp	r1, r0
   171d8:	blt	17298 <__assert_fail@plt+0x62a4>
   171dc:	b	172ac <__assert_fail@plt+0x62b8>
   171e0:	ldr	r0, [fp, #8]
   171e4:	movw	r1, #0
   171e8:	sdiv	r0, r1, r0
   171ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171f0:	cmp	r0, r1
   171f4:	blt	17298 <__assert_fail@plt+0x62a4>
   171f8:	b	172ac <__assert_fail@plt+0x62b8>
   171fc:	ldr	r0, [fp, #8]
   17200:	cmp	r0, #0
   17204:	bne	1720c <__assert_fail@plt+0x6218>
   17208:	b	172ac <__assert_fail@plt+0x62b8>
   1720c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17210:	cmp	r0, #0
   17214:	bge	17280 <__assert_fail@plt+0x628c>
   17218:	b	1721c <__assert_fail@plt+0x6228>
   1721c:	b	17264 <__assert_fail@plt+0x6270>
   17220:	b	17264 <__assert_fail@plt+0x6270>
   17224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17228:	cmn	r0, #1
   1722c:	bne	17264 <__assert_fail@plt+0x6270>
   17230:	b	17234 <__assert_fail@plt+0x6240>
   17234:	ldr	r0, [fp, #8]
   17238:	add	r0, r0, #0
   1723c:	movw	r1, #0
   17240:	cmp	r1, r0
   17244:	blt	17298 <__assert_fail@plt+0x62a4>
   17248:	b	172ac <__assert_fail@plt+0x62b8>
   1724c:	ldr	r0, [fp, #8]
   17250:	sub	r0, r0, #1
   17254:	mvn	r1, #0
   17258:	cmp	r1, r0
   1725c:	blt	17298 <__assert_fail@plt+0x62a4>
   17260:	b	172ac <__assert_fail@plt+0x62b8>
   17264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17268:	movw	r1, #0
   1726c:	sdiv	r0, r1, r0
   17270:	ldr	r1, [fp, #8]
   17274:	cmp	r0, r1
   17278:	blt	17298 <__assert_fail@plt+0x62a4>
   1727c:	b	172ac <__assert_fail@plt+0x62b8>
   17280:	ldr	r0, [fp, #8]
   17284:	mvn	r1, #0
   17288:	udiv	r0, r1, r0
   1728c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17290:	cmp	r0, r1
   17294:	bcs	172ac <__assert_fail@plt+0x62b8>
   17298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1729c:	ldr	r1, [fp, #8]
   172a0:	mul	r0, r0, r1
   172a4:	str	r0, [fp, #-28]	; 0xffffffe4
   172a8:	b	17b00 <__assert_fail@plt+0x6b0c>
   172ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172b0:	ldr	r1, [fp, #8]
   172b4:	mul	r0, r0, r1
   172b8:	str	r0, [fp, #-28]	; 0xffffffe4
   172bc:	b	17b04 <__assert_fail@plt+0x6b10>
   172c0:	b	172c4 <__assert_fail@plt+0x62d0>
   172c4:	b	172c8 <__assert_fail@plt+0x62d4>
   172c8:	ldr	r0, [fp, #8]
   172cc:	cmp	r0, #0
   172d0:	bge	173d4 <__assert_fail@plt+0x63e0>
   172d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172d8:	cmp	r0, #0
   172dc:	bge	17368 <__assert_fail@plt+0x6374>
   172e0:	b	172e4 <__assert_fail@plt+0x62f0>
   172e4:	ldr	r0, [pc, #2112]	; 17b2c <__assert_fail@plt+0x6b38>
   172e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172ec:	ldr	r2, [fp, #8]
   172f0:	sdiv	r0, r0, r2
   172f4:	cmp	r1, r0
   172f8:	blt	17464 <__assert_fail@plt+0x6470>
   172fc:	b	17478 <__assert_fail@plt+0x6484>
   17300:	b	17304 <__assert_fail@plt+0x6310>
   17304:	ldr	r0, [pc, #2084]	; 17b30 <__assert_fail@plt+0x6b3c>
   17308:	ldr	r1, [fp, #8]
   1730c:	cmp	r1, r0
   17310:	blt	17328 <__assert_fail@plt+0x6334>
   17314:	b	17334 <__assert_fail@plt+0x6340>
   17318:	ldr	r0, [fp, #8]
   1731c:	movw	r1, #0
   17320:	cmp	r1, r0
   17324:	bge	17334 <__assert_fail@plt+0x6340>
   17328:	movw	r0, #0
   1732c:	str	r0, [sp, #64]	; 0x40
   17330:	b	1734c <__assert_fail@plt+0x6358>
   17334:	ldr	r0, [pc, #2032]	; 17b2c <__assert_fail@plt+0x6b38>
   17338:	ldr	r1, [fp, #8]
   1733c:	movw	r2, #0
   17340:	sub	r1, r2, r1
   17344:	sdiv	r0, r0, r1
   17348:	str	r0, [sp, #64]	; 0x40
   1734c:	ldr	r0, [sp, #64]	; 0x40
   17350:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17354:	mvn	r2, #0
   17358:	sub	r1, r2, r1
   1735c:	cmp	r0, r1
   17360:	ble	17464 <__assert_fail@plt+0x6470>
   17364:	b	17478 <__assert_fail@plt+0x6484>
   17368:	ldr	r0, [fp, #8]
   1736c:	cmn	r0, #1
   17370:	bne	173b8 <__assert_fail@plt+0x63c4>
   17374:	b	17378 <__assert_fail@plt+0x6384>
   17378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1737c:	add	r0, r0, #-2147483648	; 0x80000000
   17380:	movw	r1, #0
   17384:	cmp	r1, r0
   17388:	blt	17464 <__assert_fail@plt+0x6470>
   1738c:	b	17478 <__assert_fail@plt+0x6484>
   17390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17394:	movw	r1, #0
   17398:	cmp	r1, r0
   1739c:	bge	17478 <__assert_fail@plt+0x6484>
   173a0:	ldr	r0, [pc, #1924]	; 17b2c <__assert_fail@plt+0x6b38>
   173a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173a8:	sub	r1, r1, #1
   173ac:	cmp	r0, r1
   173b0:	blt	17464 <__assert_fail@plt+0x6470>
   173b4:	b	17478 <__assert_fail@plt+0x6484>
   173b8:	ldr	r0, [pc, #1908]	; 17b34 <__assert_fail@plt+0x6b40>
   173bc:	ldr	r1, [fp, #8]
   173c0:	sdiv	r0, r0, r1
   173c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173c8:	cmp	r0, r1
   173cc:	blt	17464 <__assert_fail@plt+0x6470>
   173d0:	b	17478 <__assert_fail@plt+0x6484>
   173d4:	ldr	r0, [fp, #8]
   173d8:	cmp	r0, #0
   173dc:	bne	173e4 <__assert_fail@plt+0x63f0>
   173e0:	b	17478 <__assert_fail@plt+0x6484>
   173e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173e8:	cmp	r0, #0
   173ec:	bge	1744c <__assert_fail@plt+0x6458>
   173f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173f4:	cmn	r0, #1
   173f8:	bne	17430 <__assert_fail@plt+0x643c>
   173fc:	b	17400 <__assert_fail@plt+0x640c>
   17400:	ldr	r0, [fp, #8]
   17404:	add	r0, r0, #-2147483648	; 0x80000000
   17408:	movw	r1, #0
   1740c:	cmp	r1, r0
   17410:	blt	17464 <__assert_fail@plt+0x6470>
   17414:	b	17478 <__assert_fail@plt+0x6484>
   17418:	ldr	r0, [pc, #1804]	; 17b2c <__assert_fail@plt+0x6b38>
   1741c:	ldr	r1, [fp, #8]
   17420:	sub	r1, r1, #1
   17424:	cmp	r0, r1
   17428:	blt	17464 <__assert_fail@plt+0x6470>
   1742c:	b	17478 <__assert_fail@plt+0x6484>
   17430:	ldr	r0, [pc, #1788]	; 17b34 <__assert_fail@plt+0x6b40>
   17434:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17438:	sdiv	r0, r0, r1
   1743c:	ldr	r1, [fp, #8]
   17440:	cmp	r0, r1
   17444:	blt	17464 <__assert_fail@plt+0x6470>
   17448:	b	17478 <__assert_fail@plt+0x6484>
   1744c:	ldr	r0, [pc, #1752]	; 17b2c <__assert_fail@plt+0x6b38>
   17450:	ldr	r1, [fp, #8]
   17454:	sdiv	r0, r0, r1
   17458:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1745c:	cmp	r0, r1
   17460:	bge	17478 <__assert_fail@plt+0x6484>
   17464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17468:	ldr	r1, [fp, #8]
   1746c:	mul	r0, r0, r1
   17470:	str	r0, [fp, #-28]	; 0xffffffe4
   17474:	b	17b00 <__assert_fail@plt+0x6b0c>
   17478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1747c:	ldr	r1, [fp, #8]
   17480:	mul	r0, r0, r1
   17484:	str	r0, [fp, #-28]	; 0xffffffe4
   17488:	b	17b04 <__assert_fail@plt+0x6b10>
   1748c:	ldr	r0, [fp, #8]
   17490:	cmp	r0, #0
   17494:	bge	175a4 <__assert_fail@plt+0x65b0>
   17498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1749c:	cmp	r0, #0
   174a0:	bge	1752c <__assert_fail@plt+0x6538>
   174a4:	b	174c4 <__assert_fail@plt+0x64d0>
   174a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174ac:	ldr	r1, [fp, #8]
   174b0:	mvn	r2, #0
   174b4:	udiv	r1, r2, r1
   174b8:	cmp	r0, r1
   174bc:	bcc	17640 <__assert_fail@plt+0x664c>
   174c0:	b	17654 <__assert_fail@plt+0x6660>
   174c4:	b	174c8 <__assert_fail@plt+0x64d4>
   174c8:	ldr	r0, [pc, #1632]	; 17b30 <__assert_fail@plt+0x6b3c>
   174cc:	ldr	r1, [fp, #8]
   174d0:	cmp	r1, r0
   174d4:	blt	174ec <__assert_fail@plt+0x64f8>
   174d8:	b	174f8 <__assert_fail@plt+0x6504>
   174dc:	ldr	r0, [fp, #8]
   174e0:	movw	r1, #0
   174e4:	cmp	r1, r0
   174e8:	bge	174f8 <__assert_fail@plt+0x6504>
   174ec:	movw	r0, #1
   174f0:	str	r0, [sp, #60]	; 0x3c
   174f4:	b	17510 <__assert_fail@plt+0x651c>
   174f8:	ldr	r0, [fp, #8]
   174fc:	movw	r1, #0
   17500:	sub	r0, r1, r0
   17504:	mvn	r1, #0
   17508:	udiv	r0, r1, r0
   1750c:	str	r0, [sp, #60]	; 0x3c
   17510:	ldr	r0, [sp, #60]	; 0x3c
   17514:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17518:	mvn	r2, #0
   1751c:	sub	r1, r2, r1
   17520:	cmp	r0, r1
   17524:	bls	17640 <__assert_fail@plt+0x664c>
   17528:	b	17654 <__assert_fail@plt+0x6660>
   1752c:	b	17530 <__assert_fail@plt+0x653c>
   17530:	b	17588 <__assert_fail@plt+0x6594>
   17534:	b	17588 <__assert_fail@plt+0x6594>
   17538:	ldr	r0, [fp, #8]
   1753c:	cmn	r0, #1
   17540:	bne	17588 <__assert_fail@plt+0x6594>
   17544:	b	17548 <__assert_fail@plt+0x6554>
   17548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1754c:	add	r0, r0, #0
   17550:	movw	r1, #0
   17554:	cmp	r1, r0
   17558:	blt	17640 <__assert_fail@plt+0x664c>
   1755c:	b	17654 <__assert_fail@plt+0x6660>
   17560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17564:	movw	r1, #0
   17568:	cmp	r1, r0
   1756c:	bge	17654 <__assert_fail@plt+0x6660>
   17570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17574:	sub	r0, r0, #1
   17578:	mvn	r1, #0
   1757c:	cmp	r1, r0
   17580:	blt	17640 <__assert_fail@plt+0x664c>
   17584:	b	17654 <__assert_fail@plt+0x6660>
   17588:	ldr	r0, [fp, #8]
   1758c:	movw	r1, #0
   17590:	sdiv	r0, r1, r0
   17594:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17598:	cmp	r0, r1
   1759c:	blt	17640 <__assert_fail@plt+0x664c>
   175a0:	b	17654 <__assert_fail@plt+0x6660>
   175a4:	ldr	r0, [fp, #8]
   175a8:	cmp	r0, #0
   175ac:	bne	175b4 <__assert_fail@plt+0x65c0>
   175b0:	b	17654 <__assert_fail@plt+0x6660>
   175b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175b8:	cmp	r0, #0
   175bc:	bge	17628 <__assert_fail@plt+0x6634>
   175c0:	b	175c4 <__assert_fail@plt+0x65d0>
   175c4:	b	1760c <__assert_fail@plt+0x6618>
   175c8:	b	1760c <__assert_fail@plt+0x6618>
   175cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175d0:	cmn	r0, #1
   175d4:	bne	1760c <__assert_fail@plt+0x6618>
   175d8:	b	175dc <__assert_fail@plt+0x65e8>
   175dc:	ldr	r0, [fp, #8]
   175e0:	add	r0, r0, #0
   175e4:	movw	r1, #0
   175e8:	cmp	r1, r0
   175ec:	blt	17640 <__assert_fail@plt+0x664c>
   175f0:	b	17654 <__assert_fail@plt+0x6660>
   175f4:	ldr	r0, [fp, #8]
   175f8:	sub	r0, r0, #1
   175fc:	mvn	r1, #0
   17600:	cmp	r1, r0
   17604:	blt	17640 <__assert_fail@plt+0x664c>
   17608:	b	17654 <__assert_fail@plt+0x6660>
   1760c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17610:	movw	r1, #0
   17614:	sdiv	r0, r1, r0
   17618:	ldr	r1, [fp, #8]
   1761c:	cmp	r0, r1
   17620:	blt	17640 <__assert_fail@plt+0x664c>
   17624:	b	17654 <__assert_fail@plt+0x6660>
   17628:	ldr	r0, [fp, #8]
   1762c:	mvn	r1, #0
   17630:	udiv	r0, r1, r0
   17634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17638:	cmp	r0, r1
   1763c:	bcs	17654 <__assert_fail@plt+0x6660>
   17640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17644:	ldr	r1, [fp, #8]
   17648:	mul	r0, r0, r1
   1764c:	str	r0, [fp, #-28]	; 0xffffffe4
   17650:	b	17b00 <__assert_fail@plt+0x6b0c>
   17654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17658:	ldr	r1, [fp, #8]
   1765c:	mul	r0, r0, r1
   17660:	str	r0, [fp, #-28]	; 0xffffffe4
   17664:	b	17b04 <__assert_fail@plt+0x6b10>
   17668:	b	1766c <__assert_fail@plt+0x6678>
   1766c:	ldr	r0, [fp, #8]
   17670:	cmp	r0, #0
   17674:	bge	177dc <__assert_fail@plt+0x67e8>
   17678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1767c:	cmp	r0, #0
   17680:	bge	17758 <__assert_fail@plt+0x6764>
   17684:	b	17688 <__assert_fail@plt+0x6694>
   17688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1768c:	ldr	r1, [fp, #8]
   17690:	asr	r3, r1, #31
   17694:	mvn	r2, #0
   17698:	mvn	ip, #-2147483648	; 0x80000000
   1769c:	str	r0, [sp, #56]	; 0x38
   176a0:	mov	r0, r2
   176a4:	str	r1, [sp, #52]	; 0x34
   176a8:	mov	r1, ip
   176ac:	ldr	r2, [sp, #52]	; 0x34
   176b0:	bl	1a19c <__assert_fail@plt+0x91a8>
   176b4:	ldr	r2, [sp, #56]	; 0x38
   176b8:	subs	r0, r2, r0
   176bc:	rscs	r1, r1, r2, asr #31
   176c0:	blt	178a4 <__assert_fail@plt+0x68b0>
   176c4:	b	178b8 <__assert_fail@plt+0x68c4>
   176c8:	b	176cc <__assert_fail@plt+0x66d8>
   176cc:	ldr	r0, [pc, #1116]	; 17b30 <__assert_fail@plt+0x6b3c>
   176d0:	ldr	r1, [fp, #8]
   176d4:	cmp	r1, r0
   176d8:	blt	176f0 <__assert_fail@plt+0x66fc>
   176dc:	b	17704 <__assert_fail@plt+0x6710>
   176e0:	ldr	r0, [fp, #8]
   176e4:	movw	r1, #0
   176e8:	cmp	r1, r0
   176ec:	bge	17704 <__assert_fail@plt+0x6710>
   176f0:	mov	r0, #0
   176f4:	mvn	r1, #0
   176f8:	str	r1, [sp, #48]	; 0x30
   176fc:	str	r0, [sp, #44]	; 0x2c
   17700:	b	17738 <__assert_fail@plt+0x6744>
   17704:	ldr	r0, [fp, #8]
   17708:	rsb	r0, r0, #0
   1770c:	asr	r3, r0, #31
   17710:	mvn	r1, #0
   17714:	mvn	r2, #-2147483648	; 0x80000000
   17718:	str	r0, [sp, #40]	; 0x28
   1771c:	mov	r0, r1
   17720:	mov	r1, r2
   17724:	ldr	r2, [sp, #40]	; 0x28
   17728:	bl	1a19c <__assert_fail@plt+0x91a8>
   1772c:	str	r0, [sp, #48]	; 0x30
   17730:	str	r1, [sp, #44]	; 0x2c
   17734:	b	17738 <__assert_fail@plt+0x6744>
   17738:	ldr	r0, [sp, #44]	; 0x2c
   1773c:	ldr	r1, [sp, #48]	; 0x30
   17740:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17744:	mvn	r2, r2
   17748:	subs	r1, r2, r1
   1774c:	rscs	r0, r0, r2, asr #31
   17750:	bge	178a4 <__assert_fail@plt+0x68b0>
   17754:	b	178b8 <__assert_fail@plt+0x68c4>
   17758:	ldr	r0, [fp, #8]
   1775c:	cmn	r0, #1
   17760:	bne	177a4 <__assert_fail@plt+0x67b0>
   17764:	b	17768 <__assert_fail@plt+0x6774>
   17768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1776c:	mov	r1, #-2147483648	; 0x80000000
   17770:	add	r1, r1, r0, asr #31
   17774:	rsbs	r0, r0, #0
   17778:	rscs	r1, r1, #0
   1777c:	blt	178a4 <__assert_fail@plt+0x68b0>
   17780:	b	178b8 <__assert_fail@plt+0x68c4>
   17784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17788:	movw	r1, #0
   1778c:	cmp	r1, r0
   17790:	bge	178b8 <__assert_fail@plt+0x68c4>
   17794:	mov	r0, #0
   17798:	cmp	r0, #0
   1779c:	bne	178a4 <__assert_fail@plt+0x68b0>
   177a0:	b	178b8 <__assert_fail@plt+0x68c4>
   177a4:	ldr	r0, [fp, #8]
   177a8:	asr	r3, r0, #31
   177ac:	mov	r1, #0
   177b0:	mov	r2, #-2147483648	; 0x80000000
   177b4:	str	r0, [sp, #36]	; 0x24
   177b8:	mov	r0, r1
   177bc:	mov	r1, r2
   177c0:	ldr	r2, [sp, #36]	; 0x24
   177c4:	bl	1a19c <__assert_fail@plt+0x91a8>
   177c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177cc:	subs	r0, r0, r2
   177d0:	sbcs	r1, r1, r2, asr #31
   177d4:	blt	178a4 <__assert_fail@plt+0x68b0>
   177d8:	b	178b8 <__assert_fail@plt+0x68c4>
   177dc:	ldr	r0, [fp, #8]
   177e0:	cmp	r0, #0
   177e4:	bne	177ec <__assert_fail@plt+0x67f8>
   177e8:	b	178b8 <__assert_fail@plt+0x68c4>
   177ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177f0:	cmp	r0, #0
   177f4:	bge	1786c <__assert_fail@plt+0x6878>
   177f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177fc:	cmn	r0, #1
   17800:	bne	17834 <__assert_fail@plt+0x6840>
   17804:	b	17808 <__assert_fail@plt+0x6814>
   17808:	ldr	r0, [fp, #8]
   1780c:	mov	r1, #-2147483648	; 0x80000000
   17810:	add	r1, r1, r0, asr #31
   17814:	rsbs	r0, r0, #0
   17818:	rscs	r1, r1, #0
   1781c:	blt	178a4 <__assert_fail@plt+0x68b0>
   17820:	b	178b8 <__assert_fail@plt+0x68c4>
   17824:	mov	r0, #0
   17828:	cmp	r0, #0
   1782c:	bne	178a4 <__assert_fail@plt+0x68b0>
   17830:	b	178b8 <__assert_fail@plt+0x68c4>
   17834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17838:	asr	r3, r0, #31
   1783c:	mov	r1, #0
   17840:	mov	r2, #-2147483648	; 0x80000000
   17844:	str	r0, [sp, #32]
   17848:	mov	r0, r1
   1784c:	mov	r1, r2
   17850:	ldr	r2, [sp, #32]
   17854:	bl	1a19c <__assert_fail@plt+0x91a8>
   17858:	ldr	r2, [fp, #8]
   1785c:	subs	r0, r0, r2
   17860:	sbcs	r1, r1, r2, asr #31
   17864:	blt	178a4 <__assert_fail@plt+0x68b0>
   17868:	b	178b8 <__assert_fail@plt+0x68c4>
   1786c:	ldr	r0, [fp, #8]
   17870:	asr	r3, r0, #31
   17874:	mvn	r1, #0
   17878:	mvn	r2, #-2147483648	; 0x80000000
   1787c:	str	r0, [sp, #28]
   17880:	mov	r0, r1
   17884:	mov	r1, r2
   17888:	ldr	r2, [sp, #28]
   1788c:	bl	1a19c <__assert_fail@plt+0x91a8>
   17890:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17894:	subs	r0, r0, r2
   17898:	sbcs	r1, r1, r2, asr #31
   1789c:	bge	178b8 <__assert_fail@plt+0x68c4>
   178a0:	b	178a4 <__assert_fail@plt+0x68b0>
   178a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178a8:	ldr	r1, [fp, #8]
   178ac:	mul	r0, r0, r1
   178b0:	str	r0, [fp, #-28]	; 0xffffffe4
   178b4:	b	17b00 <__assert_fail@plt+0x6b0c>
   178b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178bc:	ldr	r1, [fp, #8]
   178c0:	mul	r0, r0, r1
   178c4:	str	r0, [fp, #-28]	; 0xffffffe4
   178c8:	b	17b04 <__assert_fail@plt+0x6b10>
   178cc:	ldr	r0, [fp, #8]
   178d0:	cmp	r0, #0
   178d4:	bge	17a24 <__assert_fail@plt+0x6a30>
   178d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178dc:	cmp	r0, #0
   178e0:	bge	179ac <__assert_fail@plt+0x69b8>
   178e4:	b	17924 <__assert_fail@plt+0x6930>
   178e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178ec:	ldr	r1, [fp, #8]
   178f0:	asr	r3, r1, #31
   178f4:	mvn	r2, #0
   178f8:	str	r0, [sp, #24]
   178fc:	mov	r0, r2
   17900:	str	r1, [sp, #20]
   17904:	mov	r1, r2
   17908:	ldr	r2, [sp, #20]
   1790c:	bl	1a270 <__assert_fail@plt+0x927c>
   17910:	ldr	r2, [sp, #24]
   17914:	subs	r0, r2, r0
   17918:	rscs	r1, r1, r2, asr #31
   1791c:	bcc	17ad8 <__assert_fail@plt+0x6ae4>
   17920:	b	17aec <__assert_fail@plt+0x6af8>
   17924:	b	17928 <__assert_fail@plt+0x6934>
   17928:	ldr	r0, [pc, #512]	; 17b30 <__assert_fail@plt+0x6b3c>
   1792c:	ldr	r1, [fp, #8]
   17930:	cmp	r1, r0
   17934:	blt	1794c <__assert_fail@plt+0x6958>
   17938:	b	17960 <__assert_fail@plt+0x696c>
   1793c:	ldr	r0, [fp, #8]
   17940:	movw	r1, #0
   17944:	cmp	r1, r0
   17948:	bge	17960 <__assert_fail@plt+0x696c>
   1794c:	mov	r0, #1
   17950:	mvn	r1, #0
   17954:	str	r1, [sp, #16]
   17958:	str	r0, [sp, #12]
   1795c:	b	1798c <__assert_fail@plt+0x6998>
   17960:	ldr	r0, [fp, #8]
   17964:	rsb	r0, r0, #0
   17968:	asr	r3, r0, #31
   1796c:	mvn	r1, #0
   17970:	str	r0, [sp, #8]
   17974:	mov	r0, r1
   17978:	ldr	r2, [sp, #8]
   1797c:	bl	1a270 <__assert_fail@plt+0x927c>
   17980:	str	r0, [sp, #16]
   17984:	str	r1, [sp, #12]
   17988:	b	1798c <__assert_fail@plt+0x6998>
   1798c:	ldr	r0, [sp, #12]
   17990:	ldr	r1, [sp, #16]
   17994:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17998:	mvn	r2, r2
   1799c:	subs	r1, r2, r1
   179a0:	rscs	r0, r0, r2, asr #31
   179a4:	bcs	17ad8 <__assert_fail@plt+0x6ae4>
   179a8:	b	17aec <__assert_fail@plt+0x6af8>
   179ac:	b	179b0 <__assert_fail@plt+0x69bc>
   179b0:	b	17a08 <__assert_fail@plt+0x6a14>
   179b4:	b	17a08 <__assert_fail@plt+0x6a14>
   179b8:	ldr	r0, [fp, #8]
   179bc:	cmn	r0, #1
   179c0:	bne	17a08 <__assert_fail@plt+0x6a14>
   179c4:	b	179c8 <__assert_fail@plt+0x69d4>
   179c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179cc:	add	r0, r0, #0
   179d0:	movw	r1, #0
   179d4:	cmp	r1, r0
   179d8:	blt	17ad8 <__assert_fail@plt+0x6ae4>
   179dc:	b	17aec <__assert_fail@plt+0x6af8>
   179e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179e4:	movw	r1, #0
   179e8:	cmp	r1, r0
   179ec:	bge	17aec <__assert_fail@plt+0x6af8>
   179f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179f4:	sub	r0, r0, #1
   179f8:	mvn	r1, #0
   179fc:	cmp	r1, r0
   17a00:	blt	17ad8 <__assert_fail@plt+0x6ae4>
   17a04:	b	17aec <__assert_fail@plt+0x6af8>
   17a08:	ldr	r0, [fp, #8]
   17a0c:	movw	r1, #0
   17a10:	sdiv	r0, r1, r0
   17a14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a18:	cmp	r0, r1
   17a1c:	blt	17ad8 <__assert_fail@plt+0x6ae4>
   17a20:	b	17aec <__assert_fail@plt+0x6af8>
   17a24:	ldr	r0, [fp, #8]
   17a28:	cmp	r0, #0
   17a2c:	bne	17a34 <__assert_fail@plt+0x6a40>
   17a30:	b	17aec <__assert_fail@plt+0x6af8>
   17a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a38:	cmp	r0, #0
   17a3c:	bge	17aa8 <__assert_fail@plt+0x6ab4>
   17a40:	b	17a44 <__assert_fail@plt+0x6a50>
   17a44:	b	17a8c <__assert_fail@plt+0x6a98>
   17a48:	b	17a8c <__assert_fail@plt+0x6a98>
   17a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a50:	cmn	r0, #1
   17a54:	bne	17a8c <__assert_fail@plt+0x6a98>
   17a58:	b	17a5c <__assert_fail@plt+0x6a68>
   17a5c:	ldr	r0, [fp, #8]
   17a60:	add	r0, r0, #0
   17a64:	movw	r1, #0
   17a68:	cmp	r1, r0
   17a6c:	blt	17ad8 <__assert_fail@plt+0x6ae4>
   17a70:	b	17aec <__assert_fail@plt+0x6af8>
   17a74:	ldr	r0, [fp, #8]
   17a78:	sub	r0, r0, #1
   17a7c:	mvn	r1, #0
   17a80:	cmp	r1, r0
   17a84:	blt	17ad8 <__assert_fail@plt+0x6ae4>
   17a88:	b	17aec <__assert_fail@plt+0x6af8>
   17a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a90:	movw	r1, #0
   17a94:	sdiv	r0, r1, r0
   17a98:	ldr	r1, [fp, #8]
   17a9c:	cmp	r0, r1
   17aa0:	blt	17ad8 <__assert_fail@plt+0x6ae4>
   17aa4:	b	17aec <__assert_fail@plt+0x6af8>
   17aa8:	ldr	r0, [fp, #8]
   17aac:	asr	r3, r0, #31
   17ab0:	mvn	r1, #0
   17ab4:	str	r0, [sp, #4]
   17ab8:	mov	r0, r1
   17abc:	ldr	r2, [sp, #4]
   17ac0:	bl	1a270 <__assert_fail@plt+0x927c>
   17ac4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17ac8:	subs	r0, r0, r2
   17acc:	sbcs	r1, r1, r2, asr #31
   17ad0:	bcs	17aec <__assert_fail@plt+0x6af8>
   17ad4:	b	17ad8 <__assert_fail@plt+0x6ae4>
   17ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17adc:	ldr	r1, [fp, #8]
   17ae0:	mul	r0, r0, r1
   17ae4:	str	r0, [fp, #-28]	; 0xffffffe4
   17ae8:	b	17b00 <__assert_fail@plt+0x6b0c>
   17aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17af0:	ldr	r1, [fp, #8]
   17af4:	mul	r0, r0, r1
   17af8:	str	r0, [fp, #-28]	; 0xffffffe4
   17afc:	b	17b04 <__assert_fail@plt+0x6b10>
   17b00:	bl	17cdc <__assert_fail@plt+0x6ce8>
   17b04:	ldr	r0, [fp, #-4]
   17b08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b0c:	bl	1503c <__assert_fail@plt+0x4048>
   17b10:	str	r0, [fp, #-4]
   17b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b18:	ldr	r1, [fp, #-8]
   17b1c:	str	r0, [r1]
   17b20:	ldr	r0, [fp, #-4]
   17b24:	mov	sp, fp
   17b28:	pop	{fp, pc}
   17b2c:	svcvc	0x00ffffff
   17b30:	andhi	r0, r0, r1
   17b34:	andhi	r0, r0, r0
   17b38:			; <UNDEFINED> instruction: 0xffff8000
   17b3c:	push	{fp, lr}
   17b40:	mov	fp, sp
   17b44:	sub	sp, sp, #8
   17b48:	str	r0, [sp, #4]
   17b4c:	ldr	r0, [sp, #4]
   17b50:	movw	r1, #1
   17b54:	bl	17b60 <__assert_fail@plt+0x6b6c>
   17b58:	mov	sp, fp
   17b5c:	pop	{fp, pc}
   17b60:	push	{fp, lr}
   17b64:	mov	fp, sp
   17b68:	sub	sp, sp, #8
   17b6c:	str	r0, [sp, #4]
   17b70:	str	r1, [sp]
   17b74:	ldr	r0, [sp, #4]
   17b78:	ldr	r1, [sp]
   17b7c:	bl	17d2c <__assert_fail@plt+0x6d38>
   17b80:	bl	14fc8 <__assert_fail@plt+0x3fd4>
   17b84:	mov	sp, fp
   17b88:	pop	{fp, pc}
   17b8c:	push	{fp, lr}
   17b90:	mov	fp, sp
   17b94:	sub	sp, sp, #8
   17b98:	str	r0, [sp, #4]
   17b9c:	ldr	r0, [sp, #4]
   17ba0:	movw	r1, #1
   17ba4:	bl	17bb0 <__assert_fail@plt+0x6bbc>
   17ba8:	mov	sp, fp
   17bac:	pop	{fp, pc}
   17bb0:	push	{fp, lr}
   17bb4:	mov	fp, sp
   17bb8:	sub	sp, sp, #8
   17bbc:	str	r0, [sp, #4]
   17bc0:	str	r1, [sp]
   17bc4:	ldr	r0, [sp, #4]
   17bc8:	ldr	r1, [sp]
   17bcc:	bl	18408 <__assert_fail@plt+0x7414>
   17bd0:	bl	14fc8 <__assert_fail@plt+0x3fd4>
   17bd4:	mov	sp, fp
   17bd8:	pop	{fp, pc}
   17bdc:	push	{fp, lr}
   17be0:	mov	fp, sp
   17be4:	sub	sp, sp, #16
   17be8:	str	r0, [fp, #-4]
   17bec:	str	r1, [sp, #8]
   17bf0:	ldr	r0, [sp, #8]
   17bf4:	bl	14fa4 <__assert_fail@plt+0x3fb0>
   17bf8:	ldr	r1, [fp, #-4]
   17bfc:	ldr	r2, [sp, #8]
   17c00:	str	r0, [sp, #4]
   17c04:	bl	10e08 <memcpy@plt>
   17c08:	ldr	r0, [sp, #4]
   17c0c:	mov	sp, fp
   17c10:	pop	{fp, pc}
   17c14:	push	{fp, lr}
   17c18:	mov	fp, sp
   17c1c:	sub	sp, sp, #16
   17c20:	str	r0, [fp, #-4]
   17c24:	str	r1, [sp, #8]
   17c28:	ldr	r0, [sp, #8]
   17c2c:	bl	14ff8 <__assert_fail@plt+0x4004>
   17c30:	ldr	r1, [fp, #-4]
   17c34:	ldr	r2, [sp, #8]
   17c38:	str	r0, [sp, #4]
   17c3c:	bl	10e08 <memcpy@plt>
   17c40:	ldr	r0, [sp, #4]
   17c44:	mov	sp, fp
   17c48:	pop	{fp, pc}
   17c4c:	push	{fp, lr}
   17c50:	mov	fp, sp
   17c54:	sub	sp, sp, #16
   17c58:	str	r0, [fp, #-4]
   17c5c:	str	r1, [sp, #8]
   17c60:	ldr	r0, [sp, #8]
   17c64:	add	r0, r0, #1
   17c68:	bl	14ff8 <__assert_fail@plt+0x4004>
   17c6c:	str	r0, [sp, #4]
   17c70:	ldr	r0, [sp, #4]
   17c74:	ldr	r1, [sp, #8]
   17c78:	add	r0, r0, r1
   17c7c:	movw	r1, #0
   17c80:	strb	r1, [r0]
   17c84:	ldr	r0, [sp, #4]
   17c88:	ldr	r1, [fp, #-4]
   17c8c:	ldr	r2, [sp, #8]
   17c90:	str	r0, [sp]
   17c94:	bl	10e08 <memcpy@plt>
   17c98:	ldr	r0, [sp]
   17c9c:	mov	sp, fp
   17ca0:	pop	{fp, pc}
   17ca4:	push	{fp, lr}
   17ca8:	mov	fp, sp
   17cac:	sub	sp, sp, #8
   17cb0:	str	r0, [sp, #4]
   17cb4:	ldr	r0, [sp, #4]
   17cb8:	ldr	r1, [sp, #4]
   17cbc:	str	r0, [sp]
   17cc0:	mov	r0, r1
   17cc4:	bl	10f10 <strlen@plt>
   17cc8:	add	r1, r0, #1
   17ccc:	ldr	r0, [sp]
   17cd0:	bl	17bdc <__assert_fail@plt+0x6be8>
   17cd4:	mov	sp, fp
   17cd8:	pop	{fp, pc}
   17cdc:	push	{fp, lr}
   17ce0:	mov	fp, sp
   17ce4:	sub	sp, sp, #8
   17ce8:	movw	r0, #45288	; 0xb0e8
   17cec:	movt	r0, #2
   17cf0:	ldr	r0, [r0]
   17cf4:	movw	r1, #44424	; 0xad88
   17cf8:	movt	r1, #1
   17cfc:	str	r0, [sp, #4]
   17d00:	mov	r0, r1
   17d04:	bl	10f04 <gettext@plt>
   17d08:	ldr	r1, [sp, #4]
   17d0c:	str	r0, [sp]
   17d10:	mov	r0, r1
   17d14:	movw	r1, #0
   17d18:	movw	r2, #43375	; 0xa96f
   17d1c:	movt	r2, #1
   17d20:	ldr	r3, [sp]
   17d24:	bl	10e98 <error@plt>
   17d28:	bl	10fdc <abort@plt>
   17d2c:	push	{fp, lr}
   17d30:	mov	fp, sp
   17d34:	sub	sp, sp, #16
   17d38:	str	r0, [sp, #8]
   17d3c:	str	r1, [sp, #4]
   17d40:	ldr	r0, [sp, #8]
   17d44:	cmp	r0, #0
   17d48:	beq	17d58 <__assert_fail@plt+0x6d64>
   17d4c:	ldr	r0, [sp, #4]
   17d50:	cmp	r0, #0
   17d54:	bne	17d64 <__assert_fail@plt+0x6d70>
   17d58:	movw	r0, #1
   17d5c:	str	r0, [sp, #4]
   17d60:	str	r0, [sp, #8]
   17d64:	ldr	r0, [sp, #4]
   17d68:	cmp	r0, #0
   17d6c:	beq	17da0 <__assert_fail@plt+0x6dac>
   17d70:	ldr	r0, [pc, #76]	; 17dc4 <__assert_fail@plt+0x6dd0>
   17d74:	ldr	r1, [sp, #4]
   17d78:	udiv	r0, r0, r1
   17d7c:	ldr	r1, [sp, #8]
   17d80:	cmp	r0, r1
   17d84:	bcs	17da0 <__assert_fail@plt+0x6dac>
   17d88:	bl	10f28 <__errno_location@plt>
   17d8c:	movw	r1, #12
   17d90:	str	r1, [r0]
   17d94:	movw	r0, #0
   17d98:	str	r0, [fp, #-4]
   17d9c:	b	17db8 <__assert_fail@plt+0x6dc4>
   17da0:	ldr	r0, [sp, #8]
   17da4:	ldr	r1, [sp, #4]
   17da8:	bl	10d9c <calloc@plt>
   17dac:	str	r0, [sp]
   17db0:	ldr	r0, [sp]
   17db4:	str	r0, [fp, #-4]
   17db8:	ldr	r0, [fp, #-4]
   17dbc:	mov	sp, fp
   17dc0:	pop	{fp, pc}
   17dc4:	svcvc	0x00ffffff
   17dc8:	push	{fp, lr}
   17dcc:	mov	fp, sp
   17dd0:	sub	sp, sp, #16
   17dd4:	str	r0, [sp, #8]
   17dd8:	ldr	r0, [sp, #8]
   17ddc:	cmp	r0, #0
   17de0:	bne	17dec <__assert_fail@plt+0x6df8>
   17de4:	movw	r0, #1
   17de8:	str	r0, [sp, #8]
   17dec:	ldr	r0, [pc, #64]	; 17e34 <__assert_fail@plt+0x6e40>
   17df0:	ldr	r1, [sp, #8]
   17df4:	cmp	r0, r1
   17df8:	bcs	17e14 <__assert_fail@plt+0x6e20>
   17dfc:	bl	10f28 <__errno_location@plt>
   17e00:	movw	r1, #12
   17e04:	str	r1, [r0]
   17e08:	movw	r0, #0
   17e0c:	str	r0, [fp, #-4]
   17e10:	b	17e28 <__assert_fail@plt+0x6e34>
   17e14:	ldr	r0, [sp, #8]
   17e18:	bl	10eb0 <malloc@plt>
   17e1c:	str	r0, [sp, #4]
   17e20:	ldr	r0, [sp, #4]
   17e24:	str	r0, [fp, #-4]
   17e28:	ldr	r0, [fp, #-4]
   17e2c:	mov	sp, fp
   17e30:	pop	{fp, pc}
   17e34:	svcvc	0x00ffffff
   17e38:	push	{fp, lr}
   17e3c:	mov	fp, sp
   17e40:	sub	sp, sp, #16
   17e44:	str	r0, [sp, #8]
   17e48:	str	r1, [sp, #4]
   17e4c:	ldr	r0, [sp, #8]
   17e50:	movw	r1, #0
   17e54:	cmp	r0, r1
   17e58:	bne	17e6c <__assert_fail@plt+0x6e78>
   17e5c:	ldr	r0, [sp, #4]
   17e60:	bl	17dc8 <__assert_fail@plt+0x6dd4>
   17e64:	str	r0, [fp, #-4]
   17e68:	b	17ecc <__assert_fail@plt+0x6ed8>
   17e6c:	ldr	r0, [sp, #4]
   17e70:	cmp	r0, #0
   17e74:	bne	17e8c <__assert_fail@plt+0x6e98>
   17e78:	ldr	r0, [sp, #8]
   17e7c:	bl	181fc <__assert_fail@plt+0x7208>
   17e80:	movw	r0, #0
   17e84:	str	r0, [fp, #-4]
   17e88:	b	17ecc <__assert_fail@plt+0x6ed8>
   17e8c:	ldr	r0, [pc, #68]	; 17ed8 <__assert_fail@plt+0x6ee4>
   17e90:	ldr	r1, [sp, #4]
   17e94:	cmp	r0, r1
   17e98:	bcs	17eb4 <__assert_fail@plt+0x6ec0>
   17e9c:	bl	10f28 <__errno_location@plt>
   17ea0:	movw	r1, #12
   17ea4:	str	r1, [r0]
   17ea8:	movw	r0, #0
   17eac:	str	r0, [fp, #-4]
   17eb0:	b	17ecc <__assert_fail@plt+0x6ed8>
   17eb4:	ldr	r0, [sp, #8]
   17eb8:	ldr	r1, [sp, #4]
   17ebc:	bl	10e38 <realloc@plt>
   17ec0:	str	r0, [sp]
   17ec4:	ldr	r0, [sp]
   17ec8:	str	r0, [fp, #-4]
   17ecc:	ldr	r0, [fp, #-4]
   17ed0:	mov	sp, fp
   17ed4:	pop	{fp, pc}
   17ed8:	svcvc	0x00ffffff
   17edc:	push	{fp, lr}
   17ee0:	mov	fp, sp
   17ee4:	sub	sp, sp, #24
   17ee8:	str	r0, [fp, #-8]
   17eec:	str	r1, [sp, #12]
   17ef0:	ldr	r0, [fp, #-8]
   17ef4:	str	r0, [sp, #8]
   17ef8:	ldr	r0, [sp, #12]
   17efc:	str	r0, [sp, #4]
   17f00:	ldr	r0, [sp, #8]
   17f04:	ldr	r1, [sp, #4]
   17f08:	cmp	r0, r1
   17f0c:	bne	17f1c <__assert_fail@plt+0x6f28>
   17f10:	movw	r0, #0
   17f14:	str	r0, [fp, #-4]
   17f18:	b	17f88 <__assert_fail@plt+0x6f94>
   17f1c:	b	17f20 <__assert_fail@plt+0x6f2c>
   17f20:	ldr	r0, [sp, #8]
   17f24:	ldrb	r0, [r0]
   17f28:	bl	19f1c <__assert_fail@plt+0x8f28>
   17f2c:	strb	r0, [sp, #3]
   17f30:	ldr	r0, [sp, #4]
   17f34:	ldrb	r0, [r0]
   17f38:	bl	19f1c <__assert_fail@plt+0x8f28>
   17f3c:	strb	r0, [sp, #2]
   17f40:	ldrb	r0, [sp, #3]
   17f44:	cmp	r0, #0
   17f48:	bne	17f50 <__assert_fail@plt+0x6f5c>
   17f4c:	b	17f78 <__assert_fail@plt+0x6f84>
   17f50:	ldr	r0, [sp, #8]
   17f54:	add	r0, r0, #1
   17f58:	str	r0, [sp, #8]
   17f5c:	ldr	r0, [sp, #4]
   17f60:	add	r0, r0, #1
   17f64:	str	r0, [sp, #4]
   17f68:	ldrb	r0, [sp, #3]
   17f6c:	ldrb	r1, [sp, #2]
   17f70:	cmp	r0, r1
   17f74:	beq	17f20 <__assert_fail@plt+0x6f2c>
   17f78:	ldrb	r0, [sp, #3]
   17f7c:	ldrb	r1, [sp, #2]
   17f80:	sub	r0, r0, r1
   17f84:	str	r0, [fp, #-4]
   17f88:	ldr	r0, [fp, #-4]
   17f8c:	mov	sp, fp
   17f90:	pop	{fp, pc}
   17f94:	push	{fp, lr}
   17f98:	mov	fp, sp
   17f9c:	sub	sp, sp, #16
   17fa0:	str	r0, [sp, #8]
   17fa4:	ldr	r0, [sp, #8]
   17fa8:	bl	10e74 <__fpending@plt>
   17fac:	cmp	r0, #0
   17fb0:	movw	r0, #0
   17fb4:	movne	r0, #1
   17fb8:	and	r0, r0, #1
   17fbc:	strb	r0, [sp, #7]
   17fc0:	ldr	r0, [sp, #8]
   17fc4:	bl	10e80 <ferror_unlocked@plt>
   17fc8:	cmp	r0, #0
   17fcc:	movw	r0, #0
   17fd0:	movne	r0, #1
   17fd4:	and	r0, r0, #1
   17fd8:	strb	r0, [sp, #6]
   17fdc:	ldr	r0, [sp, #8]
   17fe0:	bl	18064 <__assert_fail@plt+0x7070>
   17fe4:	cmp	r0, #0
   17fe8:	movw	r0, #0
   17fec:	movne	r0, #1
   17ff0:	and	r0, r0, #1
   17ff4:	strb	r0, [sp, #5]
   17ff8:	ldrb	r0, [sp, #6]
   17ffc:	tst	r0, #1
   18000:	bne	1802c <__assert_fail@plt+0x7038>
   18004:	ldrb	r0, [sp, #5]
   18008:	tst	r0, #1
   1800c:	beq	18050 <__assert_fail@plt+0x705c>
   18010:	ldrb	r0, [sp, #7]
   18014:	tst	r0, #1
   18018:	bne	1802c <__assert_fail@plt+0x7038>
   1801c:	bl	10f28 <__errno_location@plt>
   18020:	ldr	r0, [r0]
   18024:	cmp	r0, #9
   18028:	beq	18050 <__assert_fail@plt+0x705c>
   1802c:	ldrb	r0, [sp, #5]
   18030:	tst	r0, #1
   18034:	bne	18044 <__assert_fail@plt+0x7050>
   18038:	bl	10f28 <__errno_location@plt>
   1803c:	movw	r1, #0
   18040:	str	r1, [r0]
   18044:	mvn	r0, #0
   18048:	str	r0, [fp, #-4]
   1804c:	b	18058 <__assert_fail@plt+0x7064>
   18050:	movw	r0, #0
   18054:	str	r0, [fp, #-4]
   18058:	ldr	r0, [fp, #-4]
   1805c:	mov	sp, fp
   18060:	pop	{fp, pc}
   18064:	push	{fp, lr}
   18068:	mov	fp, sp
   1806c:	sub	sp, sp, #32
   18070:	str	r0, [fp, #-8]
   18074:	movw	r0, #0
   18078:	str	r0, [fp, #-12]
   1807c:	str	r0, [sp, #12]
   18080:	ldr	r0, [fp, #-8]
   18084:	bl	10f4c <fileno@plt>
   18088:	str	r0, [sp, #16]
   1808c:	ldr	r0, [sp, #16]
   18090:	cmp	r0, #0
   18094:	bge	180a8 <__assert_fail@plt+0x70b4>
   18098:	ldr	r0, [fp, #-8]
   1809c:	bl	10f58 <fclose@plt>
   180a0:	str	r0, [fp, #-4]
   180a4:	b	18144 <__assert_fail@plt+0x7150>
   180a8:	ldr	r0, [fp, #-8]
   180ac:	bl	10ec8 <__freading@plt>
   180b0:	cmp	r0, #0
   180b4:	beq	180ec <__assert_fail@plt+0x70f8>
   180b8:	ldr	r0, [fp, #-8]
   180bc:	bl	10f4c <fileno@plt>
   180c0:	mov	r1, sp
   180c4:	mov	r2, #1
   180c8:	str	r2, [r1]
   180cc:	mov	r1, #0
   180d0:	mov	r2, r1
   180d4:	mov	r3, r1
   180d8:	bl	10e5c <lseek64@plt>
   180dc:	and	r0, r0, r1
   180e0:	cmn	r0, #1
   180e4:	beq	18108 <__assert_fail@plt+0x7114>
   180e8:	b	180ec <__assert_fail@plt+0x70f8>
   180ec:	ldr	r0, [fp, #-8]
   180f0:	bl	18150 <__assert_fail@plt+0x715c>
   180f4:	cmp	r0, #0
   180f8:	beq	18108 <__assert_fail@plt+0x7114>
   180fc:	bl	10f28 <__errno_location@plt>
   18100:	ldr	r0, [r0]
   18104:	str	r0, [fp, #-12]
   18108:	ldr	r0, [fp, #-8]
   1810c:	bl	10f58 <fclose@plt>
   18110:	str	r0, [sp, #12]
   18114:	ldr	r0, [fp, #-12]
   18118:	cmp	r0, #0
   1811c:	beq	1813c <__assert_fail@plt+0x7148>
   18120:	ldr	r0, [fp, #-12]
   18124:	str	r0, [sp, #8]
   18128:	bl	10f28 <__errno_location@plt>
   1812c:	ldr	r1, [sp, #8]
   18130:	str	r1, [r0]
   18134:	mvn	r0, #0
   18138:	str	r0, [sp, #12]
   1813c:	ldr	r0, [sp, #12]
   18140:	str	r0, [fp, #-4]
   18144:	ldr	r0, [fp, #-4]
   18148:	mov	sp, fp
   1814c:	pop	{fp, pc}
   18150:	push	{fp, lr}
   18154:	mov	fp, sp
   18158:	sub	sp, sp, #8
   1815c:	str	r0, [sp]
   18160:	ldr	r0, [sp]
   18164:	movw	r1, #0
   18168:	cmp	r0, r1
   1816c:	beq	18180 <__assert_fail@plt+0x718c>
   18170:	ldr	r0, [sp]
   18174:	bl	10ec8 <__freading@plt>
   18178:	cmp	r0, #0
   1817c:	bne	18190 <__assert_fail@plt+0x719c>
   18180:	ldr	r0, [sp]
   18184:	bl	10de4 <fflush@plt>
   18188:	str	r0, [sp, #4]
   1818c:	b	181a4 <__assert_fail@plt+0x71b0>
   18190:	ldr	r0, [sp]
   18194:	bl	181b0 <__assert_fail@plt+0x71bc>
   18198:	ldr	r0, [sp]
   1819c:	bl	10de4 <fflush@plt>
   181a0:	str	r0, [sp, #4]
   181a4:	ldr	r0, [sp, #4]
   181a8:	mov	sp, fp
   181ac:	pop	{fp, pc}
   181b0:	push	{fp, lr}
   181b4:	mov	fp, sp
   181b8:	sub	sp, sp, #8
   181bc:	str	r0, [sp, #4]
   181c0:	ldr	r0, [sp, #4]
   181c4:	ldr	r0, [r0]
   181c8:	and	r0, r0, #256	; 0x100
   181cc:	cmp	r0, #0
   181d0:	beq	181f4 <__assert_fail@plt+0x7200>
   181d4:	ldr	r0, [sp, #4]
   181d8:	mov	r1, sp
   181dc:	mov	r2, #1
   181e0:	str	r2, [r1]
   181e4:	mov	r1, #0
   181e8:	mov	r2, r1
   181ec:	mov	r3, r1
   181f0:	bl	1823c <__assert_fail@plt+0x7248>
   181f4:	mov	sp, fp
   181f8:	pop	{fp, pc}
   181fc:	push	{fp, lr}
   18200:	mov	fp, sp
   18204:	sub	sp, sp, #16
   18208:	str	r0, [fp, #-4]
   1820c:	bl	10f28 <__errno_location@plt>
   18210:	ldr	r0, [r0]
   18214:	str	r0, [sp, #8]
   18218:	ldr	r0, [fp, #-4]
   1821c:	bl	10df0 <free@plt>
   18220:	ldr	r0, [sp, #8]
   18224:	str	r0, [sp, #4]
   18228:	bl	10f28 <__errno_location@plt>
   1822c:	ldr	r1, [sp, #4]
   18230:	str	r1, [r0]
   18234:	mov	sp, fp
   18238:	pop	{fp, pc}
   1823c:	push	{fp, lr}
   18240:	mov	fp, sp
   18244:	sub	sp, sp, #32
   18248:	ldr	r1, [fp, #8]
   1824c:	str	r0, [fp, #-8]
   18250:	str	r3, [sp, #20]
   18254:	str	r2, [sp, #16]
   18258:	ldr	r0, [fp, #-8]
   1825c:	ldr	r0, [r0, #8]
   18260:	ldr	r2, [fp, #-8]
   18264:	ldr	r2, [r2, #4]
   18268:	cmp	r0, r2
   1826c:	bne	18318 <__assert_fail@plt+0x7324>
   18270:	ldr	r0, [fp, #-8]
   18274:	ldr	r0, [r0, #20]
   18278:	ldr	r1, [fp, #-8]
   1827c:	ldr	r1, [r1, #16]
   18280:	cmp	r0, r1
   18284:	bne	18318 <__assert_fail@plt+0x7324>
   18288:	ldr	r0, [fp, #-8]
   1828c:	ldr	r0, [r0, #36]	; 0x24
   18290:	movw	r1, #0
   18294:	cmp	r0, r1
   18298:	bne	18318 <__assert_fail@plt+0x7324>
   1829c:	ldr	r0, [fp, #-8]
   182a0:	bl	10f4c <fileno@plt>
   182a4:	ldr	r2, [sp, #16]
   182a8:	ldr	r3, [sp, #20]
   182ac:	ldr	r1, [fp, #8]
   182b0:	mov	ip, sp
   182b4:	str	r1, [ip]
   182b8:	bl	10e5c <lseek64@plt>
   182bc:	str	r1, [sp, #12]
   182c0:	str	r0, [sp, #8]
   182c4:	ldr	r0, [sp, #8]
   182c8:	ldr	r1, [sp, #12]
   182cc:	and	r0, r0, r1
   182d0:	cmn	r0, #1
   182d4:	bne	182e8 <__assert_fail@plt+0x72f4>
   182d8:	b	182dc <__assert_fail@plt+0x72e8>
   182dc:	mvn	r0, #0
   182e0:	str	r0, [fp, #-4]
   182e4:	b	18338 <__assert_fail@plt+0x7344>
   182e8:	ldr	r0, [fp, #-8]
   182ec:	ldr	r1, [r0]
   182f0:	bic	r1, r1, #16
   182f4:	str	r1, [r0]
   182f8:	ldr	r0, [sp, #8]
   182fc:	ldr	r1, [sp, #12]
   18300:	ldr	r2, [fp, #-8]
   18304:	str	r1, [r2, #84]	; 0x54
   18308:	str	r0, [r2, #80]	; 0x50
   1830c:	movw	r0, #0
   18310:	str	r0, [fp, #-4]
   18314:	b	18338 <__assert_fail@plt+0x7344>
   18318:	ldr	r0, [fp, #-8]
   1831c:	ldr	r2, [sp, #16]
   18320:	ldr	r3, [sp, #20]
   18324:	ldr	r1, [fp, #8]
   18328:	mov	ip, sp
   1832c:	str	r1, [ip]
   18330:	bl	10f64 <fseeko64@plt>
   18334:	str	r0, [fp, #-4]
   18338:	ldr	r0, [fp, #-4]
   1833c:	mov	sp, fp
   18340:	pop	{fp, pc}
   18344:	push	{fp, lr}
   18348:	mov	fp, sp
   1834c:	bl	10f28 <__errno_location@plt>
   18350:	movw	r1, #12
   18354:	str	r1, [r0]
   18358:	movw	r0, #0
   1835c:	pop	{fp, pc}
   18360:	push	{fp, lr}
   18364:	mov	fp, sp
   18368:	sub	sp, sp, #8
   1836c:	str	r0, [sp, #4]
   18370:	ldr	r0, [sp, #4]
   18374:	cmn	r0, #1
   18378:	bhi	1838c <__assert_fail@plt+0x7398>
   1837c:	ldr	r0, [sp, #4]
   18380:	bl	17dc8 <__assert_fail@plt+0x6dd4>
   18384:	str	r0, [sp]
   18388:	b	18394 <__assert_fail@plt+0x73a0>
   1838c:	bl	18344 <__assert_fail@plt+0x7350>
   18390:	str	r0, [sp]
   18394:	ldr	r0, [sp]
   18398:	mov	sp, fp
   1839c:	pop	{fp, pc}
   183a0:	push	{fp, lr}
   183a4:	mov	fp, sp
   183a8:	sub	sp, sp, #16
   183ac:	str	r0, [fp, #-4]
   183b0:	str	r1, [sp, #8]
   183b4:	ldr	r0, [sp, #8]
   183b8:	cmn	r0, #1
   183bc:	bhi	183f4 <__assert_fail@plt+0x7400>
   183c0:	ldr	r0, [fp, #-4]
   183c4:	ldr	r1, [sp, #8]
   183c8:	ldr	r2, [sp, #8]
   183cc:	cmp	r2, #0
   183d0:	movw	r2, #0
   183d4:	movne	r2, #1
   183d8:	mvn	r3, #0
   183dc:	eor	r2, r2, r3
   183e0:	and	r2, r2, #1
   183e4:	orr	r1, r1, r2
   183e8:	bl	17e38 <__assert_fail@plt+0x6e44>
   183ec:	str	r0, [sp, #4]
   183f0:	b	183fc <__assert_fail@plt+0x7408>
   183f4:	bl	18344 <__assert_fail@plt+0x7350>
   183f8:	str	r0, [sp, #4]
   183fc:	ldr	r0, [sp, #4]
   18400:	mov	sp, fp
   18404:	pop	{fp, pc}
   18408:	push	{fp, lr}
   1840c:	mov	fp, sp
   18410:	sub	sp, sp, #16
   18414:	str	r0, [sp, #8]
   18418:	str	r1, [sp, #4]
   1841c:	ldr	r0, [sp, #8]
   18420:	mvn	r1, #0
   18424:	cmp	r1, r0
   18428:	bcs	1844c <__assert_fail@plt+0x7458>
   1842c:	ldr	r0, [sp, #4]
   18430:	cmp	r0, #0
   18434:	beq	18444 <__assert_fail@plt+0x7450>
   18438:	bl	18344 <__assert_fail@plt+0x7350>
   1843c:	str	r0, [fp, #-4]
   18440:	b	1848c <__assert_fail@plt+0x7498>
   18444:	movw	r0, #0
   18448:	str	r0, [sp, #8]
   1844c:	ldr	r0, [sp, #4]
   18450:	mvn	r1, #0
   18454:	cmp	r1, r0
   18458:	bcs	1847c <__assert_fail@plt+0x7488>
   1845c:	ldr	r0, [sp, #8]
   18460:	cmp	r0, #0
   18464:	beq	18474 <__assert_fail@plt+0x7480>
   18468:	bl	18344 <__assert_fail@plt+0x7350>
   1846c:	str	r0, [fp, #-4]
   18470:	b	1848c <__assert_fail@plt+0x7498>
   18474:	movw	r0, #0
   18478:	str	r0, [sp, #4]
   1847c:	ldr	r0, [sp, #8]
   18480:	ldr	r1, [sp, #4]
   18484:	bl	17d2c <__assert_fail@plt+0x6d38>
   18488:	str	r0, [fp, #-4]
   1848c:	ldr	r0, [fp, #-4]
   18490:	mov	sp, fp
   18494:	pop	{fp, pc}
   18498:	push	{fp, lr}
   1849c:	mov	fp, sp
   184a0:	sub	sp, sp, #16
   184a4:	str	r0, [fp, #-4]
   184a8:	str	r1, [sp, #8]
   184ac:	str	r2, [sp, #4]
   184b0:	ldr	r0, [sp, #8]
   184b4:	cmp	r0, #0
   184b8:	beq	184c8 <__assert_fail@plt+0x74d4>
   184bc:	ldr	r0, [sp, #4]
   184c0:	cmp	r0, #0
   184c4:	bne	184d4 <__assert_fail@plt+0x74e0>
   184c8:	movw	r0, #1
   184cc:	str	r0, [sp, #4]
   184d0:	str	r0, [sp, #8]
   184d4:	ldr	r0, [sp, #8]
   184d8:	cmn	r0, #1
   184dc:	bhi	18504 <__assert_fail@plt+0x7510>
   184e0:	ldr	r0, [sp, #4]
   184e4:	cmn	r0, #1
   184e8:	bhi	18504 <__assert_fail@plt+0x7510>
   184ec:	ldr	r0, [fp, #-4]
   184f0:	ldr	r1, [sp, #8]
   184f4:	ldr	r2, [sp, #4]
   184f8:	bl	18624 <__assert_fail@plt+0x7630>
   184fc:	str	r0, [sp]
   18500:	b	1850c <__assert_fail@plt+0x7518>
   18504:	bl	18344 <__assert_fail@plt+0x7350>
   18508:	str	r0, [sp]
   1850c:	ldr	r0, [sp]
   18510:	mov	sp, fp
   18514:	pop	{fp, pc}
   18518:	push	{fp, lr}
   1851c:	mov	fp, sp
   18520:	sub	sp, sp, #8
   18524:	movw	r0, #14
   18528:	bl	10f94 <nl_langinfo@plt>
   1852c:	str	r0, [sp, #4]
   18530:	ldr	r0, [sp, #4]
   18534:	movw	r1, #0
   18538:	cmp	r0, r1
   1853c:	bne	1854c <__assert_fail@plt+0x7558>
   18540:	movw	r0, #42297	; 0xa539
   18544:	movt	r0, #1
   18548:	str	r0, [sp, #4]
   1854c:	ldr	r0, [sp, #4]
   18550:	ldrb	r0, [r0]
   18554:	cmp	r0, #0
   18558:	bne	18568 <__assert_fail@plt+0x7574>
   1855c:	movw	r0, #44441	; 0xad99
   18560:	movt	r0, #1
   18564:	str	r0, [sp, #4]
   18568:	ldr	r0, [sp, #4]
   1856c:	mov	sp, fp
   18570:	pop	{fp, pc}
   18574:	push	{fp, lr}
   18578:	mov	fp, sp
   1857c:	sub	sp, sp, #32
   18580:	str	r0, [fp, #-8]
   18584:	str	r1, [fp, #-12]
   18588:	str	r2, [sp, #16]
   1858c:	str	r3, [sp, #12]
   18590:	ldr	r0, [fp, #-8]
   18594:	movw	r1, #0
   18598:	cmp	r0, r1
   1859c:	bne	185a8 <__assert_fail@plt+0x75b4>
   185a0:	add	r0, sp, #4
   185a4:	str	r0, [fp, #-8]
   185a8:	ldr	r0, [fp, #-8]
   185ac:	ldr	r1, [fp, #-12]
   185b0:	ldr	r2, [sp, #16]
   185b4:	ldr	r3, [sp, #12]
   185b8:	bl	10e8c <mbrtowc@plt>
   185bc:	str	r0, [sp, #8]
   185c0:	ldr	r0, [sp, #8]
   185c4:	mvn	r1, #1
   185c8:	cmp	r1, r0
   185cc:	bhi	18610 <__assert_fail@plt+0x761c>
   185d0:	ldr	r0, [sp, #16]
   185d4:	cmp	r0, #0
   185d8:	beq	18610 <__assert_fail@plt+0x761c>
   185dc:	movw	r0, #0
   185e0:	bl	19fa4 <__assert_fail@plt+0x8fb0>
   185e4:	tst	r0, #1
   185e8:	bne	18610 <__assert_fail@plt+0x761c>
   185ec:	ldr	r0, [fp, #-12]
   185f0:	ldrb	r0, [r0]
   185f4:	strb	r0, [sp, #3]
   185f8:	ldrb	r0, [sp, #3]
   185fc:	ldr	r1, [fp, #-8]
   18600:	str	r0, [r1]
   18604:	movw	r0, #1
   18608:	str	r0, [fp, #-4]
   1860c:	b	18618 <__assert_fail@plt+0x7624>
   18610:	ldr	r0, [sp, #8]
   18614:	str	r0, [fp, #-4]
   18618:	ldr	r0, [fp, #-4]
   1861c:	mov	sp, fp
   18620:	pop	{fp, pc}
   18624:	push	{fp, lr}
   18628:	mov	fp, sp
   1862c:	sub	sp, sp, #96	; 0x60
   18630:	str	r0, [fp, #-8]
   18634:	str	r1, [fp, #-12]
   18638:	str	r2, [fp, #-16]
   1863c:	b	189f4 <__assert_fail@plt+0x7a00>
   18640:	b	18814 <__assert_fail@plt+0x7820>
   18644:	ldr	r0, [fp, #-16]
   18648:	cmp	r0, #0
   1864c:	bcs	18750 <__assert_fail@plt+0x775c>
   18650:	ldr	r0, [fp, #-12]
   18654:	cmp	r0, #0
   18658:	bcs	186e0 <__assert_fail@plt+0x76ec>
   1865c:	b	1867c <__assert_fail@plt+0x7688>
   18660:	ldr	r0, [fp, #-12]
   18664:	ldr	r1, [fp, #-16]
   18668:	movw	r2, #127	; 0x7f
   1866c:	udiv	r1, r2, r1
   18670:	cmp	r0, r1
   18674:	bcc	187e4 <__assert_fail@plt+0x77f0>
   18678:	b	187fc <__assert_fail@plt+0x7808>
   1867c:	b	18690 <__assert_fail@plt+0x769c>
   18680:	ldr	r0, [fp, #-16]
   18684:	cmp	r0, #1
   18688:	bcc	186a0 <__assert_fail@plt+0x76ac>
   1868c:	b	186ac <__assert_fail@plt+0x76b8>
   18690:	ldr	r0, [fp, #-16]
   18694:	movw	r1, #0
   18698:	cmp	r1, r0
   1869c:	bcs	186ac <__assert_fail@plt+0x76b8>
   186a0:	movw	r0, #0
   186a4:	str	r0, [fp, #-24]	; 0xffffffe8
   186a8:	b	186c4 <__assert_fail@plt+0x76d0>
   186ac:	ldr	r0, [fp, #-16]
   186b0:	movw	r1, #0
   186b4:	sub	r0, r1, r0
   186b8:	movw	r1, #127	; 0x7f
   186bc:	udiv	r0, r1, r0
   186c0:	str	r0, [fp, #-24]	; 0xffffffe8
   186c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186c8:	ldr	r1, [fp, #-12]
   186cc:	mvn	r2, #0
   186d0:	sub	r1, r2, r1
   186d4:	cmp	r0, r1
   186d8:	bls	187e4 <__assert_fail@plt+0x77f0>
   186dc:	b	187fc <__assert_fail@plt+0x7808>
   186e0:	ldr	r0, [fp, #-16]
   186e4:	cmn	r0, #1
   186e8:	bne	18734 <__assert_fail@plt+0x7740>
   186ec:	b	1870c <__assert_fail@plt+0x7718>
   186f0:	ldr	r0, [fp, #-12]
   186f4:	mvn	r1, #127	; 0x7f
   186f8:	add	r0, r0, r1
   186fc:	movw	r1, #0
   18700:	cmp	r1, r0
   18704:	bcc	187e4 <__assert_fail@plt+0x77f0>
   18708:	b	187fc <__assert_fail@plt+0x7808>
   1870c:	ldr	r0, [fp, #-12]
   18710:	movw	r1, #0
   18714:	cmp	r1, r0
   18718:	bcs	187fc <__assert_fail@plt+0x7808>
   1871c:	ldr	r0, [fp, #-12]
   18720:	sub	r0, r0, #1
   18724:	movw	r1, #127	; 0x7f
   18728:	cmp	r1, r0
   1872c:	bcc	187e4 <__assert_fail@plt+0x77f0>
   18730:	b	187fc <__assert_fail@plt+0x7808>
   18734:	ldr	r0, [fp, #-16]
   18738:	mvn	r1, #127	; 0x7f
   1873c:	udiv	r0, r1, r0
   18740:	ldr	r1, [fp, #-12]
   18744:	cmp	r0, r1
   18748:	bcc	187e4 <__assert_fail@plt+0x77f0>
   1874c:	b	187fc <__assert_fail@plt+0x7808>
   18750:	ldr	r0, [fp, #-16]
   18754:	cmp	r0, #0
   18758:	bne	18760 <__assert_fail@plt+0x776c>
   1875c:	b	187fc <__assert_fail@plt+0x7808>
   18760:	ldr	r0, [fp, #-12]
   18764:	cmp	r0, #0
   18768:	bcs	187cc <__assert_fail@plt+0x77d8>
   1876c:	ldr	r0, [fp, #-12]
   18770:	cmn	r0, #1
   18774:	bne	187b0 <__assert_fail@plt+0x77bc>
   18778:	b	18798 <__assert_fail@plt+0x77a4>
   1877c:	ldr	r0, [fp, #-16]
   18780:	mvn	r1, #127	; 0x7f
   18784:	add	r0, r0, r1
   18788:	movw	r1, #0
   1878c:	cmp	r1, r0
   18790:	bcc	187e4 <__assert_fail@plt+0x77f0>
   18794:	b	187fc <__assert_fail@plt+0x7808>
   18798:	ldr	r0, [fp, #-16]
   1879c:	sub	r0, r0, #1
   187a0:	movw	r1, #127	; 0x7f
   187a4:	cmp	r1, r0
   187a8:	bcc	187e4 <__assert_fail@plt+0x77f0>
   187ac:	b	187fc <__assert_fail@plt+0x7808>
   187b0:	ldr	r0, [fp, #-12]
   187b4:	mvn	r1, #127	; 0x7f
   187b8:	udiv	r0, r1, r0
   187bc:	ldr	r1, [fp, #-16]
   187c0:	cmp	r0, r1
   187c4:	bcc	187e4 <__assert_fail@plt+0x77f0>
   187c8:	b	187fc <__assert_fail@plt+0x7808>
   187cc:	ldr	r0, [fp, #-16]
   187d0:	movw	r1, #127	; 0x7f
   187d4:	udiv	r0, r1, r0
   187d8:	ldr	r1, [fp, #-12]
   187dc:	cmp	r0, r1
   187e0:	bcs	187fc <__assert_fail@plt+0x7808>
   187e4:	ldr	r0, [fp, #-12]
   187e8:	ldr	r1, [fp, #-16]
   187ec:	mul	r0, r0, r1
   187f0:	sxtb	r0, r0
   187f4:	str	r0, [fp, #-20]	; 0xffffffec
   187f8:	b	19924 <__assert_fail@plt+0x8930>
   187fc:	ldr	r0, [fp, #-12]
   18800:	ldr	r1, [fp, #-16]
   18804:	mul	r0, r0, r1
   18808:	sxtb	r0, r0
   1880c:	str	r0, [fp, #-20]	; 0xffffffec
   18810:	b	1993c <__assert_fail@plt+0x8948>
   18814:	ldr	r0, [fp, #-16]
   18818:	cmp	r0, #0
   1881c:	bcs	18928 <__assert_fail@plt+0x7934>
   18820:	ldr	r0, [fp, #-12]
   18824:	cmp	r0, #0
   18828:	bcs	188b0 <__assert_fail@plt+0x78bc>
   1882c:	b	1884c <__assert_fail@plt+0x7858>
   18830:	ldr	r0, [fp, #-12]
   18834:	ldr	r1, [fp, #-16]
   18838:	movw	r2, #255	; 0xff
   1883c:	udiv	r1, r2, r1
   18840:	cmp	r0, r1
   18844:	bcc	189c4 <__assert_fail@plt+0x79d0>
   18848:	b	189dc <__assert_fail@plt+0x79e8>
   1884c:	b	18860 <__assert_fail@plt+0x786c>
   18850:	ldr	r0, [fp, #-16]
   18854:	cmp	r0, #1
   18858:	bcc	18870 <__assert_fail@plt+0x787c>
   1885c:	b	1887c <__assert_fail@plt+0x7888>
   18860:	ldr	r0, [fp, #-16]
   18864:	movw	r1, #0
   18868:	cmp	r1, r0
   1886c:	bcs	1887c <__assert_fail@plt+0x7888>
   18870:	movw	r0, #0
   18874:	str	r0, [fp, #-28]	; 0xffffffe4
   18878:	b	18894 <__assert_fail@plt+0x78a0>
   1887c:	ldr	r0, [fp, #-16]
   18880:	movw	r1, #0
   18884:	sub	r0, r1, r0
   18888:	movw	r1, #255	; 0xff
   1888c:	udiv	r0, r1, r0
   18890:	str	r0, [fp, #-28]	; 0xffffffe4
   18894:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18898:	ldr	r1, [fp, #-12]
   1889c:	mvn	r2, #0
   188a0:	sub	r1, r2, r1
   188a4:	cmp	r0, r1
   188a8:	bls	189c4 <__assert_fail@plt+0x79d0>
   188ac:	b	189dc <__assert_fail@plt+0x79e8>
   188b0:	b	188b8 <__assert_fail@plt+0x78c4>
   188b4:	b	188bc <__assert_fail@plt+0x78c8>
   188b8:	b	1890c <__assert_fail@plt+0x7918>
   188bc:	ldr	r0, [fp, #-16]
   188c0:	cmn	r0, #1
   188c4:	bne	1890c <__assert_fail@plt+0x7918>
   188c8:	b	188e4 <__assert_fail@plt+0x78f0>
   188cc:	ldr	r0, [fp, #-12]
   188d0:	add	r0, r0, #0
   188d4:	movw	r1, #0
   188d8:	cmp	r1, r0
   188dc:	bcc	189c4 <__assert_fail@plt+0x79d0>
   188e0:	b	189dc <__assert_fail@plt+0x79e8>
   188e4:	ldr	r0, [fp, #-12]
   188e8:	movw	r1, #0
   188ec:	cmp	r1, r0
   188f0:	bcs	189dc <__assert_fail@plt+0x79e8>
   188f4:	ldr	r0, [fp, #-12]
   188f8:	sub	r0, r0, #1
   188fc:	mvn	r1, #0
   18900:	cmp	r1, r0
   18904:	bcc	189c4 <__assert_fail@plt+0x79d0>
   18908:	b	189dc <__assert_fail@plt+0x79e8>
   1890c:	ldr	r0, [fp, #-16]
   18910:	movw	r1, #0
   18914:	udiv	r0, r1, r0
   18918:	ldr	r1, [fp, #-12]
   1891c:	cmp	r0, r1
   18920:	bcc	189c4 <__assert_fail@plt+0x79d0>
   18924:	b	189dc <__assert_fail@plt+0x79e8>
   18928:	ldr	r0, [fp, #-16]
   1892c:	cmp	r0, #0
   18930:	bne	18938 <__assert_fail@plt+0x7944>
   18934:	b	189dc <__assert_fail@plt+0x79e8>
   18938:	ldr	r0, [fp, #-12]
   1893c:	cmp	r0, #0
   18940:	bcs	189ac <__assert_fail@plt+0x79b8>
   18944:	b	1894c <__assert_fail@plt+0x7958>
   18948:	b	18950 <__assert_fail@plt+0x795c>
   1894c:	b	18990 <__assert_fail@plt+0x799c>
   18950:	ldr	r0, [fp, #-12]
   18954:	cmn	r0, #1
   18958:	bne	18990 <__assert_fail@plt+0x799c>
   1895c:	b	18978 <__assert_fail@plt+0x7984>
   18960:	ldr	r0, [fp, #-16]
   18964:	add	r0, r0, #0
   18968:	movw	r1, #0
   1896c:	cmp	r1, r0
   18970:	bcc	189c4 <__assert_fail@plt+0x79d0>
   18974:	b	189dc <__assert_fail@plt+0x79e8>
   18978:	ldr	r0, [fp, #-16]
   1897c:	sub	r0, r0, #1
   18980:	mvn	r1, #0
   18984:	cmp	r1, r0
   18988:	bcc	189c4 <__assert_fail@plt+0x79d0>
   1898c:	b	189dc <__assert_fail@plt+0x79e8>
   18990:	ldr	r0, [fp, #-12]
   18994:	movw	r1, #0
   18998:	udiv	r0, r1, r0
   1899c:	ldr	r1, [fp, #-16]
   189a0:	cmp	r0, r1
   189a4:	bcc	189c4 <__assert_fail@plt+0x79d0>
   189a8:	b	189dc <__assert_fail@plt+0x79e8>
   189ac:	ldr	r0, [fp, #-16]
   189b0:	movw	r1, #255	; 0xff
   189b4:	udiv	r0, r1, r0
   189b8:	ldr	r1, [fp, #-12]
   189bc:	cmp	r0, r1
   189c0:	bcs	189dc <__assert_fail@plt+0x79e8>
   189c4:	ldr	r0, [fp, #-12]
   189c8:	ldr	r1, [fp, #-16]
   189cc:	mul	r0, r0, r1
   189d0:	and	r0, r0, #255	; 0xff
   189d4:	str	r0, [fp, #-20]	; 0xffffffec
   189d8:	b	19924 <__assert_fail@plt+0x8930>
   189dc:	ldr	r0, [fp, #-12]
   189e0:	ldr	r1, [fp, #-16]
   189e4:	mul	r0, r0, r1
   189e8:	and	r0, r0, #255	; 0xff
   189ec:	str	r0, [fp, #-20]	; 0xffffffec
   189f0:	b	1993c <__assert_fail@plt+0x8948>
   189f4:	b	18dac <__assert_fail@plt+0x7db8>
   189f8:	b	18bcc <__assert_fail@plt+0x7bd8>
   189fc:	ldr	r0, [fp, #-16]
   18a00:	cmp	r0, #0
   18a04:	bcs	18b08 <__assert_fail@plt+0x7b14>
   18a08:	ldr	r0, [fp, #-12]
   18a0c:	cmp	r0, #0
   18a10:	bcs	18a98 <__assert_fail@plt+0x7aa4>
   18a14:	b	18a34 <__assert_fail@plt+0x7a40>
   18a18:	ldr	r0, [fp, #-12]
   18a1c:	ldr	r1, [fp, #-16]
   18a20:	movw	r2, #32767	; 0x7fff
   18a24:	udiv	r1, r2, r1
   18a28:	cmp	r0, r1
   18a2c:	bcc	18b9c <__assert_fail@plt+0x7ba8>
   18a30:	b	18bb4 <__assert_fail@plt+0x7bc0>
   18a34:	b	18a48 <__assert_fail@plt+0x7a54>
   18a38:	ldr	r0, [fp, #-16]
   18a3c:	cmp	r0, #1
   18a40:	bcc	18a58 <__assert_fail@plt+0x7a64>
   18a44:	b	18a64 <__assert_fail@plt+0x7a70>
   18a48:	ldr	r0, [fp, #-16]
   18a4c:	movw	r1, #0
   18a50:	cmp	r1, r0
   18a54:	bcs	18a64 <__assert_fail@plt+0x7a70>
   18a58:	movw	r0, #0
   18a5c:	str	r0, [fp, #-32]	; 0xffffffe0
   18a60:	b	18a7c <__assert_fail@plt+0x7a88>
   18a64:	ldr	r0, [fp, #-16]
   18a68:	movw	r1, #0
   18a6c:	sub	r0, r1, r0
   18a70:	movw	r1, #32767	; 0x7fff
   18a74:	udiv	r0, r1, r0
   18a78:	str	r0, [fp, #-32]	; 0xffffffe0
   18a7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a80:	ldr	r1, [fp, #-12]
   18a84:	mvn	r2, #0
   18a88:	sub	r1, r2, r1
   18a8c:	cmp	r0, r1
   18a90:	bls	18b9c <__assert_fail@plt+0x7ba8>
   18a94:	b	18bb4 <__assert_fail@plt+0x7bc0>
   18a98:	ldr	r0, [fp, #-16]
   18a9c:	cmn	r0, #1
   18aa0:	bne	18aec <__assert_fail@plt+0x7af8>
   18aa4:	b	18ac4 <__assert_fail@plt+0x7ad0>
   18aa8:	ldr	r0, [pc, #3760]	; 19960 <__assert_fail@plt+0x896c>
   18aac:	ldr	r1, [fp, #-12]
   18ab0:	add	r0, r1, r0
   18ab4:	movw	r1, #0
   18ab8:	cmp	r1, r0
   18abc:	bcc	18b9c <__assert_fail@plt+0x7ba8>
   18ac0:	b	18bb4 <__assert_fail@plt+0x7bc0>
   18ac4:	ldr	r0, [fp, #-12]
   18ac8:	movw	r1, #0
   18acc:	cmp	r1, r0
   18ad0:	bcs	18bb4 <__assert_fail@plt+0x7bc0>
   18ad4:	ldr	r0, [fp, #-12]
   18ad8:	sub	r0, r0, #1
   18adc:	movw	r1, #32767	; 0x7fff
   18ae0:	cmp	r1, r0
   18ae4:	bcc	18b9c <__assert_fail@plt+0x7ba8>
   18ae8:	b	18bb4 <__assert_fail@plt+0x7bc0>
   18aec:	ldr	r0, [pc, #3692]	; 19960 <__assert_fail@plt+0x896c>
   18af0:	ldr	r1, [fp, #-16]
   18af4:	udiv	r0, r0, r1
   18af8:	ldr	r1, [fp, #-12]
   18afc:	cmp	r0, r1
   18b00:	bcc	18b9c <__assert_fail@plt+0x7ba8>
   18b04:	b	18bb4 <__assert_fail@plt+0x7bc0>
   18b08:	ldr	r0, [fp, #-16]
   18b0c:	cmp	r0, #0
   18b10:	bne	18b18 <__assert_fail@plt+0x7b24>
   18b14:	b	18bb4 <__assert_fail@plt+0x7bc0>
   18b18:	ldr	r0, [fp, #-12]
   18b1c:	cmp	r0, #0
   18b20:	bcs	18b84 <__assert_fail@plt+0x7b90>
   18b24:	ldr	r0, [fp, #-12]
   18b28:	cmn	r0, #1
   18b2c:	bne	18b68 <__assert_fail@plt+0x7b74>
   18b30:	b	18b50 <__assert_fail@plt+0x7b5c>
   18b34:	ldr	r0, [pc, #3620]	; 19960 <__assert_fail@plt+0x896c>
   18b38:	ldr	r1, [fp, #-16]
   18b3c:	add	r0, r1, r0
   18b40:	movw	r1, #0
   18b44:	cmp	r1, r0
   18b48:	bcc	18b9c <__assert_fail@plt+0x7ba8>
   18b4c:	b	18bb4 <__assert_fail@plt+0x7bc0>
   18b50:	ldr	r0, [fp, #-16]
   18b54:	sub	r0, r0, #1
   18b58:	movw	r1, #32767	; 0x7fff
   18b5c:	cmp	r1, r0
   18b60:	bcc	18b9c <__assert_fail@plt+0x7ba8>
   18b64:	b	18bb4 <__assert_fail@plt+0x7bc0>
   18b68:	ldr	r0, [pc, #3568]	; 19960 <__assert_fail@plt+0x896c>
   18b6c:	ldr	r1, [fp, #-12]
   18b70:	udiv	r0, r0, r1
   18b74:	ldr	r1, [fp, #-16]
   18b78:	cmp	r0, r1
   18b7c:	bcc	18b9c <__assert_fail@plt+0x7ba8>
   18b80:	b	18bb4 <__assert_fail@plt+0x7bc0>
   18b84:	ldr	r0, [fp, #-16]
   18b88:	movw	r1, #32767	; 0x7fff
   18b8c:	udiv	r0, r1, r0
   18b90:	ldr	r1, [fp, #-12]
   18b94:	cmp	r0, r1
   18b98:	bcs	18bb4 <__assert_fail@plt+0x7bc0>
   18b9c:	ldr	r0, [fp, #-12]
   18ba0:	ldr	r1, [fp, #-16]
   18ba4:	mul	r0, r0, r1
   18ba8:	sxth	r0, r0
   18bac:	str	r0, [fp, #-20]	; 0xffffffec
   18bb0:	b	19924 <__assert_fail@plt+0x8930>
   18bb4:	ldr	r0, [fp, #-12]
   18bb8:	ldr	r1, [fp, #-16]
   18bbc:	mul	r0, r0, r1
   18bc0:	sxth	r0, r0
   18bc4:	str	r0, [fp, #-20]	; 0xffffffec
   18bc8:	b	1993c <__assert_fail@plt+0x8948>
   18bcc:	ldr	r0, [fp, #-16]
   18bd0:	cmp	r0, #0
   18bd4:	bcs	18ce0 <__assert_fail@plt+0x7cec>
   18bd8:	ldr	r0, [fp, #-12]
   18bdc:	cmp	r0, #0
   18be0:	bcs	18c68 <__assert_fail@plt+0x7c74>
   18be4:	b	18c04 <__assert_fail@plt+0x7c10>
   18be8:	ldr	r0, [fp, #-12]
   18bec:	ldr	r1, [fp, #-16]
   18bf0:	movw	r2, #65535	; 0xffff
   18bf4:	udiv	r1, r2, r1
   18bf8:	cmp	r0, r1
   18bfc:	bcc	18d7c <__assert_fail@plt+0x7d88>
   18c00:	b	18d94 <__assert_fail@plt+0x7da0>
   18c04:	b	18c18 <__assert_fail@plt+0x7c24>
   18c08:	ldr	r0, [fp, #-16]
   18c0c:	cmp	r0, #1
   18c10:	bcc	18c28 <__assert_fail@plt+0x7c34>
   18c14:	b	18c34 <__assert_fail@plt+0x7c40>
   18c18:	ldr	r0, [fp, #-16]
   18c1c:	movw	r1, #0
   18c20:	cmp	r1, r0
   18c24:	bcs	18c34 <__assert_fail@plt+0x7c40>
   18c28:	movw	r0, #0
   18c2c:	str	r0, [fp, #-36]	; 0xffffffdc
   18c30:	b	18c4c <__assert_fail@plt+0x7c58>
   18c34:	ldr	r0, [fp, #-16]
   18c38:	movw	r1, #0
   18c3c:	sub	r0, r1, r0
   18c40:	movw	r1, #65535	; 0xffff
   18c44:	udiv	r0, r1, r0
   18c48:	str	r0, [fp, #-36]	; 0xffffffdc
   18c4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18c50:	ldr	r1, [fp, #-12]
   18c54:	mvn	r2, #0
   18c58:	sub	r1, r2, r1
   18c5c:	cmp	r0, r1
   18c60:	bls	18d7c <__assert_fail@plt+0x7d88>
   18c64:	b	18d94 <__assert_fail@plt+0x7da0>
   18c68:	b	18c70 <__assert_fail@plt+0x7c7c>
   18c6c:	b	18c74 <__assert_fail@plt+0x7c80>
   18c70:	b	18cc4 <__assert_fail@plt+0x7cd0>
   18c74:	ldr	r0, [fp, #-16]
   18c78:	cmn	r0, #1
   18c7c:	bne	18cc4 <__assert_fail@plt+0x7cd0>
   18c80:	b	18c9c <__assert_fail@plt+0x7ca8>
   18c84:	ldr	r0, [fp, #-12]
   18c88:	add	r0, r0, #0
   18c8c:	movw	r1, #0
   18c90:	cmp	r1, r0
   18c94:	bcc	18d7c <__assert_fail@plt+0x7d88>
   18c98:	b	18d94 <__assert_fail@plt+0x7da0>
   18c9c:	ldr	r0, [fp, #-12]
   18ca0:	movw	r1, #0
   18ca4:	cmp	r1, r0
   18ca8:	bcs	18d94 <__assert_fail@plt+0x7da0>
   18cac:	ldr	r0, [fp, #-12]
   18cb0:	sub	r0, r0, #1
   18cb4:	mvn	r1, #0
   18cb8:	cmp	r1, r0
   18cbc:	bcc	18d7c <__assert_fail@plt+0x7d88>
   18cc0:	b	18d94 <__assert_fail@plt+0x7da0>
   18cc4:	ldr	r0, [fp, #-16]
   18cc8:	movw	r1, #0
   18ccc:	udiv	r0, r1, r0
   18cd0:	ldr	r1, [fp, #-12]
   18cd4:	cmp	r0, r1
   18cd8:	bcc	18d7c <__assert_fail@plt+0x7d88>
   18cdc:	b	18d94 <__assert_fail@plt+0x7da0>
   18ce0:	ldr	r0, [fp, #-16]
   18ce4:	cmp	r0, #0
   18ce8:	bne	18cf0 <__assert_fail@plt+0x7cfc>
   18cec:	b	18d94 <__assert_fail@plt+0x7da0>
   18cf0:	ldr	r0, [fp, #-12]
   18cf4:	cmp	r0, #0
   18cf8:	bcs	18d64 <__assert_fail@plt+0x7d70>
   18cfc:	b	18d04 <__assert_fail@plt+0x7d10>
   18d00:	b	18d08 <__assert_fail@plt+0x7d14>
   18d04:	b	18d48 <__assert_fail@plt+0x7d54>
   18d08:	ldr	r0, [fp, #-12]
   18d0c:	cmn	r0, #1
   18d10:	bne	18d48 <__assert_fail@plt+0x7d54>
   18d14:	b	18d30 <__assert_fail@plt+0x7d3c>
   18d18:	ldr	r0, [fp, #-16]
   18d1c:	add	r0, r0, #0
   18d20:	movw	r1, #0
   18d24:	cmp	r1, r0
   18d28:	bcc	18d7c <__assert_fail@plt+0x7d88>
   18d2c:	b	18d94 <__assert_fail@plt+0x7da0>
   18d30:	ldr	r0, [fp, #-16]
   18d34:	sub	r0, r0, #1
   18d38:	mvn	r1, #0
   18d3c:	cmp	r1, r0
   18d40:	bcc	18d7c <__assert_fail@plt+0x7d88>
   18d44:	b	18d94 <__assert_fail@plt+0x7da0>
   18d48:	ldr	r0, [fp, #-12]
   18d4c:	movw	r1, #0
   18d50:	udiv	r0, r1, r0
   18d54:	ldr	r1, [fp, #-16]
   18d58:	cmp	r0, r1
   18d5c:	bcc	18d7c <__assert_fail@plt+0x7d88>
   18d60:	b	18d94 <__assert_fail@plt+0x7da0>
   18d64:	ldr	r0, [fp, #-16]
   18d68:	movw	r1, #65535	; 0xffff
   18d6c:	udiv	r0, r1, r0
   18d70:	ldr	r1, [fp, #-12]
   18d74:	cmp	r0, r1
   18d78:	bcs	18d94 <__assert_fail@plt+0x7da0>
   18d7c:	ldr	r0, [fp, #-12]
   18d80:	ldr	r1, [fp, #-16]
   18d84:	mul	r0, r0, r1
   18d88:	uxth	r0, r0
   18d8c:	str	r0, [fp, #-20]	; 0xffffffec
   18d90:	b	19924 <__assert_fail@plt+0x8930>
   18d94:	ldr	r0, [fp, #-12]
   18d98:	ldr	r1, [fp, #-16]
   18d9c:	mul	r0, r0, r1
   18da0:	uxth	r0, r0
   18da4:	str	r0, [fp, #-20]	; 0xffffffec
   18da8:	b	1993c <__assert_fail@plt+0x8948>
   18dac:	b	18db0 <__assert_fail@plt+0x7dbc>
   18db0:	b	18f74 <__assert_fail@plt+0x7f80>
   18db4:	ldr	r0, [fp, #-16]
   18db8:	cmp	r0, #0
   18dbc:	bcs	18ebc <__assert_fail@plt+0x7ec8>
   18dc0:	ldr	r0, [fp, #-12]
   18dc4:	cmp	r0, #0
   18dc8:	bcs	18e50 <__assert_fail@plt+0x7e5c>
   18dcc:	b	18dec <__assert_fail@plt+0x7df8>
   18dd0:	ldr	r0, [pc, #2944]	; 19958 <__assert_fail@plt+0x8964>
   18dd4:	ldr	r1, [fp, #-12]
   18dd8:	ldr	r2, [fp, #-16]
   18ddc:	udiv	r0, r0, r2
   18de0:	cmp	r1, r0
   18de4:	bcc	18f4c <__assert_fail@plt+0x7f58>
   18de8:	b	18f60 <__assert_fail@plt+0x7f6c>
   18dec:	b	18e00 <__assert_fail@plt+0x7e0c>
   18df0:	ldr	r0, [fp, #-16]
   18df4:	cmp	r0, #1
   18df8:	bcc	18e10 <__assert_fail@plt+0x7e1c>
   18dfc:	b	18e1c <__assert_fail@plt+0x7e28>
   18e00:	ldr	r0, [fp, #-16]
   18e04:	movw	r1, #0
   18e08:	cmp	r1, r0
   18e0c:	bcs	18e1c <__assert_fail@plt+0x7e28>
   18e10:	movw	r0, #0
   18e14:	str	r0, [fp, #-40]	; 0xffffffd8
   18e18:	b	18e34 <__assert_fail@plt+0x7e40>
   18e1c:	ldr	r0, [pc, #2868]	; 19958 <__assert_fail@plt+0x8964>
   18e20:	ldr	r1, [fp, #-16]
   18e24:	movw	r2, #0
   18e28:	sub	r1, r2, r1
   18e2c:	udiv	r0, r0, r1
   18e30:	str	r0, [fp, #-40]	; 0xffffffd8
   18e34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18e38:	ldr	r1, [fp, #-12]
   18e3c:	mvn	r2, #0
   18e40:	sub	r1, r2, r1
   18e44:	cmp	r0, r1
   18e48:	bls	18f4c <__assert_fail@plt+0x7f58>
   18e4c:	b	18f60 <__assert_fail@plt+0x7f6c>
   18e50:	ldr	r0, [fp, #-16]
   18e54:	cmn	r0, #1
   18e58:	bne	18ea0 <__assert_fail@plt+0x7eac>
   18e5c:	b	18e78 <__assert_fail@plt+0x7e84>
   18e60:	ldr	r0, [fp, #-12]
   18e64:	add	r0, r0, #-2147483648	; 0x80000000
   18e68:	movw	r1, #0
   18e6c:	cmp	r1, r0
   18e70:	bcc	18f4c <__assert_fail@plt+0x7f58>
   18e74:	b	18f60 <__assert_fail@plt+0x7f6c>
   18e78:	ldr	r0, [fp, #-12]
   18e7c:	movw	r1, #0
   18e80:	cmp	r1, r0
   18e84:	bcs	18f60 <__assert_fail@plt+0x7f6c>
   18e88:	ldr	r0, [pc, #2760]	; 19958 <__assert_fail@plt+0x8964>
   18e8c:	ldr	r1, [fp, #-12]
   18e90:	sub	r1, r1, #1
   18e94:	cmp	r0, r1
   18e98:	bcc	18f4c <__assert_fail@plt+0x7f58>
   18e9c:	b	18f60 <__assert_fail@plt+0x7f6c>
   18ea0:	ldr	r0, [pc, #2740]	; 1995c <__assert_fail@plt+0x8968>
   18ea4:	ldr	r1, [fp, #-16]
   18ea8:	udiv	r0, r0, r1
   18eac:	ldr	r1, [fp, #-12]
   18eb0:	cmp	r0, r1
   18eb4:	bcc	18f4c <__assert_fail@plt+0x7f58>
   18eb8:	b	18f60 <__assert_fail@plt+0x7f6c>
   18ebc:	ldr	r0, [fp, #-16]
   18ec0:	cmp	r0, #0
   18ec4:	bne	18ecc <__assert_fail@plt+0x7ed8>
   18ec8:	b	18f60 <__assert_fail@plt+0x7f6c>
   18ecc:	ldr	r0, [fp, #-12]
   18ed0:	cmp	r0, #0
   18ed4:	bcs	18f34 <__assert_fail@plt+0x7f40>
   18ed8:	ldr	r0, [fp, #-12]
   18edc:	cmn	r0, #1
   18ee0:	bne	18f18 <__assert_fail@plt+0x7f24>
   18ee4:	b	18f00 <__assert_fail@plt+0x7f0c>
   18ee8:	ldr	r0, [fp, #-16]
   18eec:	add	r0, r0, #-2147483648	; 0x80000000
   18ef0:	movw	r1, #0
   18ef4:	cmp	r1, r0
   18ef8:	bcc	18f4c <__assert_fail@plt+0x7f58>
   18efc:	b	18f60 <__assert_fail@plt+0x7f6c>
   18f00:	ldr	r0, [pc, #2640]	; 19958 <__assert_fail@plt+0x8964>
   18f04:	ldr	r1, [fp, #-16]
   18f08:	sub	r1, r1, #1
   18f0c:	cmp	r0, r1
   18f10:	bcc	18f4c <__assert_fail@plt+0x7f58>
   18f14:	b	18f60 <__assert_fail@plt+0x7f6c>
   18f18:	ldr	r0, [pc, #2620]	; 1995c <__assert_fail@plt+0x8968>
   18f1c:	ldr	r1, [fp, #-12]
   18f20:	udiv	r0, r0, r1
   18f24:	ldr	r1, [fp, #-16]
   18f28:	cmp	r0, r1
   18f2c:	bcc	18f4c <__assert_fail@plt+0x7f58>
   18f30:	b	18f60 <__assert_fail@plt+0x7f6c>
   18f34:	ldr	r0, [pc, #2588]	; 19958 <__assert_fail@plt+0x8964>
   18f38:	ldr	r1, [fp, #-16]
   18f3c:	udiv	r0, r0, r1
   18f40:	ldr	r1, [fp, #-12]
   18f44:	cmp	r0, r1
   18f48:	bcs	18f60 <__assert_fail@plt+0x7f6c>
   18f4c:	ldr	r0, [fp, #-12]
   18f50:	ldr	r1, [fp, #-16]
   18f54:	mul	r0, r0, r1
   18f58:	str	r0, [fp, #-20]	; 0xffffffec
   18f5c:	b	19924 <__assert_fail@plt+0x8930>
   18f60:	ldr	r0, [fp, #-12]
   18f64:	ldr	r1, [fp, #-16]
   18f68:	mul	r0, r0, r1
   18f6c:	str	r0, [fp, #-20]	; 0xffffffec
   18f70:	b	1993c <__assert_fail@plt+0x8948>
   18f74:	ldr	r0, [fp, #-16]
   18f78:	cmp	r0, #0
   18f7c:	bcs	19088 <__assert_fail@plt+0x8094>
   18f80:	ldr	r0, [fp, #-12]
   18f84:	cmp	r0, #0
   18f88:	bcs	19010 <__assert_fail@plt+0x801c>
   18f8c:	b	18fac <__assert_fail@plt+0x7fb8>
   18f90:	ldr	r0, [fp, #-12]
   18f94:	ldr	r1, [fp, #-16]
   18f98:	mvn	r2, #0
   18f9c:	udiv	r1, r2, r1
   18fa0:	cmp	r0, r1
   18fa4:	bcc	19124 <__assert_fail@plt+0x8130>
   18fa8:	b	19138 <__assert_fail@plt+0x8144>
   18fac:	b	18fc0 <__assert_fail@plt+0x7fcc>
   18fb0:	ldr	r0, [fp, #-16]
   18fb4:	cmp	r0, #1
   18fb8:	bcc	18fd0 <__assert_fail@plt+0x7fdc>
   18fbc:	b	18fdc <__assert_fail@plt+0x7fe8>
   18fc0:	ldr	r0, [fp, #-16]
   18fc4:	movw	r1, #0
   18fc8:	cmp	r1, r0
   18fcc:	bcs	18fdc <__assert_fail@plt+0x7fe8>
   18fd0:	movw	r0, #1
   18fd4:	str	r0, [fp, #-44]	; 0xffffffd4
   18fd8:	b	18ff4 <__assert_fail@plt+0x8000>
   18fdc:	ldr	r0, [fp, #-16]
   18fe0:	movw	r1, #0
   18fe4:	sub	r0, r1, r0
   18fe8:	mvn	r1, #0
   18fec:	udiv	r0, r1, r0
   18ff0:	str	r0, [fp, #-44]	; 0xffffffd4
   18ff4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18ff8:	ldr	r1, [fp, #-12]
   18ffc:	mvn	r2, #0
   19000:	sub	r1, r2, r1
   19004:	cmp	r0, r1
   19008:	bls	19124 <__assert_fail@plt+0x8130>
   1900c:	b	19138 <__assert_fail@plt+0x8144>
   19010:	b	19018 <__assert_fail@plt+0x8024>
   19014:	b	1901c <__assert_fail@plt+0x8028>
   19018:	b	1906c <__assert_fail@plt+0x8078>
   1901c:	ldr	r0, [fp, #-16]
   19020:	cmn	r0, #1
   19024:	bne	1906c <__assert_fail@plt+0x8078>
   19028:	b	19044 <__assert_fail@plt+0x8050>
   1902c:	ldr	r0, [fp, #-12]
   19030:	add	r0, r0, #0
   19034:	movw	r1, #0
   19038:	cmp	r1, r0
   1903c:	bcc	19124 <__assert_fail@plt+0x8130>
   19040:	b	19138 <__assert_fail@plt+0x8144>
   19044:	ldr	r0, [fp, #-12]
   19048:	movw	r1, #0
   1904c:	cmp	r1, r0
   19050:	bcs	19138 <__assert_fail@plt+0x8144>
   19054:	ldr	r0, [fp, #-12]
   19058:	sub	r0, r0, #1
   1905c:	mvn	r1, #0
   19060:	cmp	r1, r0
   19064:	bcc	19124 <__assert_fail@plt+0x8130>
   19068:	b	19138 <__assert_fail@plt+0x8144>
   1906c:	ldr	r0, [fp, #-16]
   19070:	movw	r1, #0
   19074:	udiv	r0, r1, r0
   19078:	ldr	r1, [fp, #-12]
   1907c:	cmp	r0, r1
   19080:	bcc	19124 <__assert_fail@plt+0x8130>
   19084:	b	19138 <__assert_fail@plt+0x8144>
   19088:	ldr	r0, [fp, #-16]
   1908c:	cmp	r0, #0
   19090:	bne	19098 <__assert_fail@plt+0x80a4>
   19094:	b	19138 <__assert_fail@plt+0x8144>
   19098:	ldr	r0, [fp, #-12]
   1909c:	cmp	r0, #0
   190a0:	bcs	1910c <__assert_fail@plt+0x8118>
   190a4:	b	190ac <__assert_fail@plt+0x80b8>
   190a8:	b	190b0 <__assert_fail@plt+0x80bc>
   190ac:	b	190f0 <__assert_fail@plt+0x80fc>
   190b0:	ldr	r0, [fp, #-12]
   190b4:	cmn	r0, #1
   190b8:	bne	190f0 <__assert_fail@plt+0x80fc>
   190bc:	b	190d8 <__assert_fail@plt+0x80e4>
   190c0:	ldr	r0, [fp, #-16]
   190c4:	add	r0, r0, #0
   190c8:	movw	r1, #0
   190cc:	cmp	r1, r0
   190d0:	bcc	19124 <__assert_fail@plt+0x8130>
   190d4:	b	19138 <__assert_fail@plt+0x8144>
   190d8:	ldr	r0, [fp, #-16]
   190dc:	sub	r0, r0, #1
   190e0:	mvn	r1, #0
   190e4:	cmp	r1, r0
   190e8:	bcc	19124 <__assert_fail@plt+0x8130>
   190ec:	b	19138 <__assert_fail@plt+0x8144>
   190f0:	ldr	r0, [fp, #-12]
   190f4:	movw	r1, #0
   190f8:	udiv	r0, r1, r0
   190fc:	ldr	r1, [fp, #-16]
   19100:	cmp	r0, r1
   19104:	bcc	19124 <__assert_fail@plt+0x8130>
   19108:	b	19138 <__assert_fail@plt+0x8144>
   1910c:	ldr	r0, [fp, #-16]
   19110:	mvn	r1, #0
   19114:	udiv	r0, r1, r0
   19118:	ldr	r1, [fp, #-12]
   1911c:	cmp	r0, r1
   19120:	bcs	19138 <__assert_fail@plt+0x8144>
   19124:	ldr	r0, [fp, #-12]
   19128:	ldr	r1, [fp, #-16]
   1912c:	mul	r0, r0, r1
   19130:	str	r0, [fp, #-20]	; 0xffffffec
   19134:	b	19924 <__assert_fail@plt+0x8930>
   19138:	ldr	r0, [fp, #-12]
   1913c:	ldr	r1, [fp, #-16]
   19140:	mul	r0, r0, r1
   19144:	str	r0, [fp, #-20]	; 0xffffffec
   19148:	b	1993c <__assert_fail@plt+0x8948>
   1914c:	b	19150 <__assert_fail@plt+0x815c>
   19150:	b	19314 <__assert_fail@plt+0x8320>
   19154:	ldr	r0, [fp, #-16]
   19158:	cmp	r0, #0
   1915c:	bcs	1925c <__assert_fail@plt+0x8268>
   19160:	ldr	r0, [fp, #-12]
   19164:	cmp	r0, #0
   19168:	bcs	191f0 <__assert_fail@plt+0x81fc>
   1916c:	b	1918c <__assert_fail@plt+0x8198>
   19170:	ldr	r0, [pc, #2016]	; 19958 <__assert_fail@plt+0x8964>
   19174:	ldr	r1, [fp, #-12]
   19178:	ldr	r2, [fp, #-16]
   1917c:	udiv	r0, r0, r2
   19180:	cmp	r1, r0
   19184:	bcc	192ec <__assert_fail@plt+0x82f8>
   19188:	b	19300 <__assert_fail@plt+0x830c>
   1918c:	b	191a0 <__assert_fail@plt+0x81ac>
   19190:	ldr	r0, [fp, #-16]
   19194:	cmp	r0, #1
   19198:	bcc	191b0 <__assert_fail@plt+0x81bc>
   1919c:	b	191bc <__assert_fail@plt+0x81c8>
   191a0:	ldr	r0, [fp, #-16]
   191a4:	movw	r1, #0
   191a8:	cmp	r1, r0
   191ac:	bcs	191bc <__assert_fail@plt+0x81c8>
   191b0:	movw	r0, #0
   191b4:	str	r0, [sp, #48]	; 0x30
   191b8:	b	191d4 <__assert_fail@plt+0x81e0>
   191bc:	ldr	r0, [pc, #1940]	; 19958 <__assert_fail@plt+0x8964>
   191c0:	ldr	r1, [fp, #-16]
   191c4:	movw	r2, #0
   191c8:	sub	r1, r2, r1
   191cc:	udiv	r0, r0, r1
   191d0:	str	r0, [sp, #48]	; 0x30
   191d4:	ldr	r0, [sp, #48]	; 0x30
   191d8:	ldr	r1, [fp, #-12]
   191dc:	mvn	r2, #0
   191e0:	sub	r1, r2, r1
   191e4:	cmp	r0, r1
   191e8:	bls	192ec <__assert_fail@plt+0x82f8>
   191ec:	b	19300 <__assert_fail@plt+0x830c>
   191f0:	ldr	r0, [fp, #-16]
   191f4:	cmn	r0, #1
   191f8:	bne	19240 <__assert_fail@plt+0x824c>
   191fc:	b	19218 <__assert_fail@plt+0x8224>
   19200:	ldr	r0, [fp, #-12]
   19204:	add	r0, r0, #-2147483648	; 0x80000000
   19208:	movw	r1, #0
   1920c:	cmp	r1, r0
   19210:	bcc	192ec <__assert_fail@plt+0x82f8>
   19214:	b	19300 <__assert_fail@plt+0x830c>
   19218:	ldr	r0, [fp, #-12]
   1921c:	movw	r1, #0
   19220:	cmp	r1, r0
   19224:	bcs	19300 <__assert_fail@plt+0x830c>
   19228:	ldr	r0, [pc, #1832]	; 19958 <__assert_fail@plt+0x8964>
   1922c:	ldr	r1, [fp, #-12]
   19230:	sub	r1, r1, #1
   19234:	cmp	r0, r1
   19238:	bcc	192ec <__assert_fail@plt+0x82f8>
   1923c:	b	19300 <__assert_fail@plt+0x830c>
   19240:	ldr	r0, [pc, #1812]	; 1995c <__assert_fail@plt+0x8968>
   19244:	ldr	r1, [fp, #-16]
   19248:	udiv	r0, r0, r1
   1924c:	ldr	r1, [fp, #-12]
   19250:	cmp	r0, r1
   19254:	bcc	192ec <__assert_fail@plt+0x82f8>
   19258:	b	19300 <__assert_fail@plt+0x830c>
   1925c:	ldr	r0, [fp, #-16]
   19260:	cmp	r0, #0
   19264:	bne	1926c <__assert_fail@plt+0x8278>
   19268:	b	19300 <__assert_fail@plt+0x830c>
   1926c:	ldr	r0, [fp, #-12]
   19270:	cmp	r0, #0
   19274:	bcs	192d4 <__assert_fail@plt+0x82e0>
   19278:	ldr	r0, [fp, #-12]
   1927c:	cmn	r0, #1
   19280:	bne	192b8 <__assert_fail@plt+0x82c4>
   19284:	b	192a0 <__assert_fail@plt+0x82ac>
   19288:	ldr	r0, [fp, #-16]
   1928c:	add	r0, r0, #-2147483648	; 0x80000000
   19290:	movw	r1, #0
   19294:	cmp	r1, r0
   19298:	bcc	192ec <__assert_fail@plt+0x82f8>
   1929c:	b	19300 <__assert_fail@plt+0x830c>
   192a0:	ldr	r0, [pc, #1712]	; 19958 <__assert_fail@plt+0x8964>
   192a4:	ldr	r1, [fp, #-16]
   192a8:	sub	r1, r1, #1
   192ac:	cmp	r0, r1
   192b0:	bcc	192ec <__assert_fail@plt+0x82f8>
   192b4:	b	19300 <__assert_fail@plt+0x830c>
   192b8:	ldr	r0, [pc, #1692]	; 1995c <__assert_fail@plt+0x8968>
   192bc:	ldr	r1, [fp, #-12]
   192c0:	udiv	r0, r0, r1
   192c4:	ldr	r1, [fp, #-16]
   192c8:	cmp	r0, r1
   192cc:	bcc	192ec <__assert_fail@plt+0x82f8>
   192d0:	b	19300 <__assert_fail@plt+0x830c>
   192d4:	ldr	r0, [pc, #1660]	; 19958 <__assert_fail@plt+0x8964>
   192d8:	ldr	r1, [fp, #-16]
   192dc:	udiv	r0, r0, r1
   192e0:	ldr	r1, [fp, #-12]
   192e4:	cmp	r0, r1
   192e8:	bcs	19300 <__assert_fail@plt+0x830c>
   192ec:	ldr	r0, [fp, #-12]
   192f0:	ldr	r1, [fp, #-16]
   192f4:	mul	r0, r0, r1
   192f8:	str	r0, [fp, #-20]	; 0xffffffec
   192fc:	b	19924 <__assert_fail@plt+0x8930>
   19300:	ldr	r0, [fp, #-12]
   19304:	ldr	r1, [fp, #-16]
   19308:	mul	r0, r0, r1
   1930c:	str	r0, [fp, #-20]	; 0xffffffec
   19310:	b	1993c <__assert_fail@plt+0x8948>
   19314:	ldr	r0, [fp, #-16]
   19318:	cmp	r0, #0
   1931c:	bcs	19428 <__assert_fail@plt+0x8434>
   19320:	ldr	r0, [fp, #-12]
   19324:	cmp	r0, #0
   19328:	bcs	193b0 <__assert_fail@plt+0x83bc>
   1932c:	b	1934c <__assert_fail@plt+0x8358>
   19330:	ldr	r0, [fp, #-12]
   19334:	ldr	r1, [fp, #-16]
   19338:	mvn	r2, #0
   1933c:	udiv	r1, r2, r1
   19340:	cmp	r0, r1
   19344:	bcc	194c4 <__assert_fail@plt+0x84d0>
   19348:	b	194d8 <__assert_fail@plt+0x84e4>
   1934c:	b	19360 <__assert_fail@plt+0x836c>
   19350:	ldr	r0, [fp, #-16]
   19354:	cmp	r0, #1
   19358:	bcc	19370 <__assert_fail@plt+0x837c>
   1935c:	b	1937c <__assert_fail@plt+0x8388>
   19360:	ldr	r0, [fp, #-16]
   19364:	movw	r1, #0
   19368:	cmp	r1, r0
   1936c:	bcs	1937c <__assert_fail@plt+0x8388>
   19370:	movw	r0, #1
   19374:	str	r0, [sp, #44]	; 0x2c
   19378:	b	19394 <__assert_fail@plt+0x83a0>
   1937c:	ldr	r0, [fp, #-16]
   19380:	movw	r1, #0
   19384:	sub	r0, r1, r0
   19388:	mvn	r1, #0
   1938c:	udiv	r0, r1, r0
   19390:	str	r0, [sp, #44]	; 0x2c
   19394:	ldr	r0, [sp, #44]	; 0x2c
   19398:	ldr	r1, [fp, #-12]
   1939c:	mvn	r2, #0
   193a0:	sub	r1, r2, r1
   193a4:	cmp	r0, r1
   193a8:	bls	194c4 <__assert_fail@plt+0x84d0>
   193ac:	b	194d8 <__assert_fail@plt+0x84e4>
   193b0:	b	193b8 <__assert_fail@plt+0x83c4>
   193b4:	b	193bc <__assert_fail@plt+0x83c8>
   193b8:	b	1940c <__assert_fail@plt+0x8418>
   193bc:	ldr	r0, [fp, #-16]
   193c0:	cmn	r0, #1
   193c4:	bne	1940c <__assert_fail@plt+0x8418>
   193c8:	b	193e4 <__assert_fail@plt+0x83f0>
   193cc:	ldr	r0, [fp, #-12]
   193d0:	add	r0, r0, #0
   193d4:	movw	r1, #0
   193d8:	cmp	r1, r0
   193dc:	bcc	194c4 <__assert_fail@plt+0x84d0>
   193e0:	b	194d8 <__assert_fail@plt+0x84e4>
   193e4:	ldr	r0, [fp, #-12]
   193e8:	movw	r1, #0
   193ec:	cmp	r1, r0
   193f0:	bcs	194d8 <__assert_fail@plt+0x84e4>
   193f4:	ldr	r0, [fp, #-12]
   193f8:	sub	r0, r0, #1
   193fc:	mvn	r1, #0
   19400:	cmp	r1, r0
   19404:	bcc	194c4 <__assert_fail@plt+0x84d0>
   19408:	b	194d8 <__assert_fail@plt+0x84e4>
   1940c:	ldr	r0, [fp, #-16]
   19410:	movw	r1, #0
   19414:	udiv	r0, r1, r0
   19418:	ldr	r1, [fp, #-12]
   1941c:	cmp	r0, r1
   19420:	bcc	194c4 <__assert_fail@plt+0x84d0>
   19424:	b	194d8 <__assert_fail@plt+0x84e4>
   19428:	ldr	r0, [fp, #-16]
   1942c:	cmp	r0, #0
   19430:	bne	19438 <__assert_fail@plt+0x8444>
   19434:	b	194d8 <__assert_fail@plt+0x84e4>
   19438:	ldr	r0, [fp, #-12]
   1943c:	cmp	r0, #0
   19440:	bcs	194ac <__assert_fail@plt+0x84b8>
   19444:	b	1944c <__assert_fail@plt+0x8458>
   19448:	b	19450 <__assert_fail@plt+0x845c>
   1944c:	b	19490 <__assert_fail@plt+0x849c>
   19450:	ldr	r0, [fp, #-12]
   19454:	cmn	r0, #1
   19458:	bne	19490 <__assert_fail@plt+0x849c>
   1945c:	b	19478 <__assert_fail@plt+0x8484>
   19460:	ldr	r0, [fp, #-16]
   19464:	add	r0, r0, #0
   19468:	movw	r1, #0
   1946c:	cmp	r1, r0
   19470:	bcc	194c4 <__assert_fail@plt+0x84d0>
   19474:	b	194d8 <__assert_fail@plt+0x84e4>
   19478:	ldr	r0, [fp, #-16]
   1947c:	sub	r0, r0, #1
   19480:	mvn	r1, #0
   19484:	cmp	r1, r0
   19488:	bcc	194c4 <__assert_fail@plt+0x84d0>
   1948c:	b	194d8 <__assert_fail@plt+0x84e4>
   19490:	ldr	r0, [fp, #-12]
   19494:	movw	r1, #0
   19498:	udiv	r0, r1, r0
   1949c:	ldr	r1, [fp, #-16]
   194a0:	cmp	r0, r1
   194a4:	bcc	194c4 <__assert_fail@plt+0x84d0>
   194a8:	b	194d8 <__assert_fail@plt+0x84e4>
   194ac:	ldr	r0, [fp, #-16]
   194b0:	mvn	r1, #0
   194b4:	udiv	r0, r1, r0
   194b8:	ldr	r1, [fp, #-12]
   194bc:	cmp	r0, r1
   194c0:	bcs	194d8 <__assert_fail@plt+0x84e4>
   194c4:	ldr	r0, [fp, #-12]
   194c8:	ldr	r1, [fp, #-16]
   194cc:	mul	r0, r0, r1
   194d0:	str	r0, [fp, #-20]	; 0xffffffec
   194d4:	b	19924 <__assert_fail@plt+0x8930>
   194d8:	ldr	r0, [fp, #-12]
   194dc:	ldr	r1, [fp, #-16]
   194e0:	mul	r0, r0, r1
   194e4:	str	r0, [fp, #-20]	; 0xffffffec
   194e8:	b	1993c <__assert_fail@plt+0x8948>
   194ec:	b	19708 <__assert_fail@plt+0x8714>
   194f0:	ldr	r0, [fp, #-16]
   194f4:	cmp	r0, #0
   194f8:	bcs	19638 <__assert_fail@plt+0x8644>
   194fc:	ldr	r0, [fp, #-12]
   19500:	cmp	r0, #0
   19504:	bcs	195c4 <__assert_fail@plt+0x85d0>
   19508:	b	1950c <__assert_fail@plt+0x8518>
   1950c:	ldr	r0, [fp, #-12]
   19510:	ldr	r2, [fp, #-16]
   19514:	mvn	r1, #0
   19518:	mvn	r3, #-2147483648	; 0x80000000
   1951c:	mov	ip, #0
   19520:	str	r0, [sp, #40]	; 0x28
   19524:	mov	r0, r1
   19528:	mov	r1, r3
   1952c:	mov	r3, ip
   19530:	bl	1a270 <__assert_fail@plt+0x927c>
   19534:	ldr	r2, [sp, #40]	; 0x28
   19538:	subs	r0, r2, r0
   1953c:	rscs	r1, r1, #0
   19540:	blt	196e0 <__assert_fail@plt+0x86ec>
   19544:	b	196f4 <__assert_fail@plt+0x8700>
   19548:	b	1955c <__assert_fail@plt+0x8568>
   1954c:	ldr	r0, [fp, #-16]
   19550:	cmp	r0, #1
   19554:	bcc	1956c <__assert_fail@plt+0x8578>
   19558:	b	19580 <__assert_fail@plt+0x858c>
   1955c:	ldr	r0, [fp, #-16]
   19560:	movw	r1, #0
   19564:	cmp	r1, r0
   19568:	bcs	19580 <__assert_fail@plt+0x858c>
   1956c:	mov	r0, #0
   19570:	mvn	r1, #0
   19574:	str	r1, [sp, #36]	; 0x24
   19578:	str	r0, [sp, #32]
   1957c:	b	195a4 <__assert_fail@plt+0x85b0>
   19580:	ldr	r0, [fp, #-16]
   19584:	rsb	r2, r0, #0
   19588:	mvn	r0, #0
   1958c:	mvn	r1, #-2147483648	; 0x80000000
   19590:	mov	r3, #0
   19594:	bl	1a270 <__assert_fail@plt+0x927c>
   19598:	str	r0, [sp, #36]	; 0x24
   1959c:	str	r1, [sp, #32]
   195a0:	b	195a4 <__assert_fail@plt+0x85b0>
   195a4:	ldr	r0, [sp, #32]
   195a8:	ldr	r1, [sp, #36]	; 0x24
   195ac:	ldr	r2, [fp, #-12]
   195b0:	mvn	r2, r2
   195b4:	subs	r1, r2, r1
   195b8:	rscs	r0, r0, #0
   195bc:	bge	196e0 <__assert_fail@plt+0x86ec>
   195c0:	b	196f4 <__assert_fail@plt+0x8700>
   195c4:	ldr	r0, [fp, #-16]
   195c8:	cmn	r0, #1
   195cc:	bne	1960c <__assert_fail@plt+0x8618>
   195d0:	b	195ec <__assert_fail@plt+0x85f8>
   195d4:	ldr	r0, [fp, #-12]
   195d8:	rsbs	r0, r0, #0
   195dc:	mov	r1, #0
   195e0:	sbcs	r1, r1, #-2147483648	; 0x80000000
   195e4:	blt	196e0 <__assert_fail@plt+0x86ec>
   195e8:	b	196f4 <__assert_fail@plt+0x8700>
   195ec:	ldr	r0, [fp, #-12]
   195f0:	movw	r1, #0
   195f4:	cmp	r1, r0
   195f8:	bcs	196f4 <__assert_fail@plt+0x8700>
   195fc:	mov	r0, #0
   19600:	cmp	r0, #0
   19604:	bne	196e0 <__assert_fail@plt+0x86ec>
   19608:	b	196f4 <__assert_fail@plt+0x8700>
   1960c:	ldr	r2, [fp, #-16]
   19610:	mov	r1, #-2147483648	; 0x80000000
   19614:	mov	r0, #0
   19618:	str	r0, [sp, #28]
   1961c:	ldr	r3, [sp, #28]
   19620:	bl	1a19c <__assert_fail@plt+0x91a8>
   19624:	ldr	r2, [fp, #-12]
   19628:	subs	r0, r0, r2
   1962c:	sbcs	r1, r1, #0
   19630:	blt	196e0 <__assert_fail@plt+0x86ec>
   19634:	b	196f4 <__assert_fail@plt+0x8700>
   19638:	ldr	r0, [fp, #-16]
   1963c:	cmp	r0, #0
   19640:	bne	19648 <__assert_fail@plt+0x8654>
   19644:	b	196f4 <__assert_fail@plt+0x8700>
   19648:	ldr	r0, [fp, #-12]
   1964c:	cmp	r0, #0
   19650:	bcs	196b8 <__assert_fail@plt+0x86c4>
   19654:	ldr	r0, [fp, #-12]
   19658:	cmn	r0, #1
   1965c:	bne	1968c <__assert_fail@plt+0x8698>
   19660:	b	1967c <__assert_fail@plt+0x8688>
   19664:	ldr	r0, [fp, #-16]
   19668:	rsbs	r0, r0, #0
   1966c:	mov	r1, #0
   19670:	sbcs	r1, r1, #-2147483648	; 0x80000000
   19674:	blt	196e0 <__assert_fail@plt+0x86ec>
   19678:	b	196f4 <__assert_fail@plt+0x8700>
   1967c:	mov	r0, #0
   19680:	cmp	r0, #0
   19684:	bne	196e0 <__assert_fail@plt+0x86ec>
   19688:	b	196f4 <__assert_fail@plt+0x8700>
   1968c:	ldr	r2, [fp, #-12]
   19690:	mov	r1, #-2147483648	; 0x80000000
   19694:	mov	r0, #0
   19698:	str	r0, [sp, #24]
   1969c:	ldr	r3, [sp, #24]
   196a0:	bl	1a19c <__assert_fail@plt+0x91a8>
   196a4:	ldr	r2, [fp, #-16]
   196a8:	subs	r0, r0, r2
   196ac:	sbcs	r1, r1, #0
   196b0:	blt	196e0 <__assert_fail@plt+0x86ec>
   196b4:	b	196f4 <__assert_fail@plt+0x8700>
   196b8:	ldr	r2, [fp, #-16]
   196bc:	mvn	r0, #0
   196c0:	mvn	r1, #-2147483648	; 0x80000000
   196c4:	mov	r3, #0
   196c8:	bl	1a270 <__assert_fail@plt+0x927c>
   196cc:	ldr	r2, [fp, #-12]
   196d0:	subs	r0, r0, r2
   196d4:	sbcs	r1, r1, #0
   196d8:	bge	196f4 <__assert_fail@plt+0x8700>
   196dc:	b	196e0 <__assert_fail@plt+0x86ec>
   196e0:	ldr	r0, [fp, #-12]
   196e4:	ldr	r1, [fp, #-16]
   196e8:	mul	r0, r0, r1
   196ec:	str	r0, [fp, #-20]	; 0xffffffec
   196f0:	b	19924 <__assert_fail@plt+0x8930>
   196f4:	ldr	r0, [fp, #-12]
   196f8:	ldr	r1, [fp, #-16]
   196fc:	mul	r0, r0, r1
   19700:	str	r0, [fp, #-20]	; 0xffffffec
   19704:	b	1993c <__assert_fail@plt+0x8948>
   19708:	ldr	r0, [fp, #-16]
   1970c:	cmp	r0, #0
   19710:	bcs	1984c <__assert_fail@plt+0x8858>
   19714:	ldr	r0, [fp, #-12]
   19718:	cmp	r0, #0
   1971c:	bcs	197d4 <__assert_fail@plt+0x87e0>
   19720:	b	19754 <__assert_fail@plt+0x8760>
   19724:	ldr	r0, [fp, #-12]
   19728:	ldr	r2, [fp, #-16]
   1972c:	mvn	r1, #0
   19730:	mov	r3, #0
   19734:	str	r0, [sp, #20]
   19738:	mov	r0, r1
   1973c:	bl	1a270 <__assert_fail@plt+0x927c>
   19740:	ldr	r2, [sp, #20]
   19744:	subs	r0, r2, r0
   19748:	rscs	r1, r1, #0
   1974c:	bcc	198fc <__assert_fail@plt+0x8908>
   19750:	b	19910 <__assert_fail@plt+0x891c>
   19754:	b	19768 <__assert_fail@plt+0x8774>
   19758:	ldr	r0, [fp, #-16]
   1975c:	cmp	r0, #1
   19760:	bcc	19778 <__assert_fail@plt+0x8784>
   19764:	b	1978c <__assert_fail@plt+0x8798>
   19768:	ldr	r0, [fp, #-16]
   1976c:	movw	r1, #0
   19770:	cmp	r1, r0
   19774:	bcs	1978c <__assert_fail@plt+0x8798>
   19778:	mov	r0, #1
   1977c:	mvn	r1, #0
   19780:	str	r1, [sp, #16]
   19784:	str	r0, [sp, #12]
   19788:	b	197b4 <__assert_fail@plt+0x87c0>
   1978c:	ldr	r0, [fp, #-16]
   19790:	rsb	r2, r0, #0
   19794:	mvn	r0, #0
   19798:	mov	r3, #0
   1979c:	str	r0, [sp, #8]
   197a0:	ldr	r1, [sp, #8]
   197a4:	bl	1a270 <__assert_fail@plt+0x927c>
   197a8:	str	r0, [sp, #16]
   197ac:	str	r1, [sp, #12]
   197b0:	b	197b4 <__assert_fail@plt+0x87c0>
   197b4:	ldr	r0, [sp, #12]
   197b8:	ldr	r1, [sp, #16]
   197bc:	ldr	r2, [fp, #-12]
   197c0:	mvn	r2, r2
   197c4:	subs	r1, r2, r1
   197c8:	rscs	r0, r0, #0
   197cc:	bcs	198fc <__assert_fail@plt+0x8908>
   197d0:	b	19910 <__assert_fail@plt+0x891c>
   197d4:	b	197dc <__assert_fail@plt+0x87e8>
   197d8:	b	197e0 <__assert_fail@plt+0x87ec>
   197dc:	b	19830 <__assert_fail@plt+0x883c>
   197e0:	ldr	r0, [fp, #-16]
   197e4:	cmn	r0, #1
   197e8:	bne	19830 <__assert_fail@plt+0x883c>
   197ec:	b	19808 <__assert_fail@plt+0x8814>
   197f0:	ldr	r0, [fp, #-12]
   197f4:	add	r0, r0, #0
   197f8:	movw	r1, #0
   197fc:	cmp	r1, r0
   19800:	bcc	198fc <__assert_fail@plt+0x8908>
   19804:	b	19910 <__assert_fail@plt+0x891c>
   19808:	ldr	r0, [fp, #-12]
   1980c:	movw	r1, #0
   19810:	cmp	r1, r0
   19814:	bcs	19910 <__assert_fail@plt+0x891c>
   19818:	ldr	r0, [fp, #-12]
   1981c:	sub	r0, r0, #1
   19820:	mvn	r1, #0
   19824:	cmp	r1, r0
   19828:	bcc	198fc <__assert_fail@plt+0x8908>
   1982c:	b	19910 <__assert_fail@plt+0x891c>
   19830:	ldr	r0, [fp, #-16]
   19834:	movw	r1, #0
   19838:	udiv	r0, r1, r0
   1983c:	ldr	r1, [fp, #-12]
   19840:	cmp	r0, r1
   19844:	bcc	198fc <__assert_fail@plt+0x8908>
   19848:	b	19910 <__assert_fail@plt+0x891c>
   1984c:	ldr	r0, [fp, #-16]
   19850:	cmp	r0, #0
   19854:	bne	1985c <__assert_fail@plt+0x8868>
   19858:	b	19910 <__assert_fail@plt+0x891c>
   1985c:	ldr	r0, [fp, #-12]
   19860:	cmp	r0, #0
   19864:	bcs	198d0 <__assert_fail@plt+0x88dc>
   19868:	b	19870 <__assert_fail@plt+0x887c>
   1986c:	b	19874 <__assert_fail@plt+0x8880>
   19870:	b	198b4 <__assert_fail@plt+0x88c0>
   19874:	ldr	r0, [fp, #-12]
   19878:	cmn	r0, #1
   1987c:	bne	198b4 <__assert_fail@plt+0x88c0>
   19880:	b	1989c <__assert_fail@plt+0x88a8>
   19884:	ldr	r0, [fp, #-16]
   19888:	add	r0, r0, #0
   1988c:	movw	r1, #0
   19890:	cmp	r1, r0
   19894:	bcc	198fc <__assert_fail@plt+0x8908>
   19898:	b	19910 <__assert_fail@plt+0x891c>
   1989c:	ldr	r0, [fp, #-16]
   198a0:	sub	r0, r0, #1
   198a4:	mvn	r1, #0
   198a8:	cmp	r1, r0
   198ac:	bcc	198fc <__assert_fail@plt+0x8908>
   198b0:	b	19910 <__assert_fail@plt+0x891c>
   198b4:	ldr	r0, [fp, #-12]
   198b8:	movw	r1, #0
   198bc:	udiv	r0, r1, r0
   198c0:	ldr	r1, [fp, #-16]
   198c4:	cmp	r0, r1
   198c8:	bcc	198fc <__assert_fail@plt+0x8908>
   198cc:	b	19910 <__assert_fail@plt+0x891c>
   198d0:	ldr	r2, [fp, #-16]
   198d4:	mvn	r0, #0
   198d8:	mov	r3, #0
   198dc:	str	r0, [sp, #4]
   198e0:	ldr	r1, [sp, #4]
   198e4:	bl	1a270 <__assert_fail@plt+0x927c>
   198e8:	ldr	r2, [fp, #-12]
   198ec:	subs	r0, r0, r2
   198f0:	sbcs	r1, r1, #0
   198f4:	bcs	19910 <__assert_fail@plt+0x891c>
   198f8:	b	198fc <__assert_fail@plt+0x8908>
   198fc:	ldr	r0, [fp, #-12]
   19900:	ldr	r1, [fp, #-16]
   19904:	mul	r0, r0, r1
   19908:	str	r0, [fp, #-20]	; 0xffffffec
   1990c:	b	19924 <__assert_fail@plt+0x8930>
   19910:	ldr	r0, [fp, #-12]
   19914:	ldr	r1, [fp, #-16]
   19918:	mul	r0, r0, r1
   1991c:	str	r0, [fp, #-20]	; 0xffffffec
   19920:	b	1993c <__assert_fail@plt+0x8948>
   19924:	bl	10f28 <__errno_location@plt>
   19928:	movw	r1, #12
   1992c:	str	r1, [r0]
   19930:	movw	r0, #0
   19934:	str	r0, [fp, #-4]
   19938:	b	1994c <__assert_fail@plt+0x8958>
   1993c:	ldr	r0, [fp, #-8]
   19940:	ldr	r1, [fp, #-20]	; 0xffffffec
   19944:	bl	17e38 <__assert_fail@plt+0x6e44>
   19948:	str	r0, [fp, #-4]
   1994c:	ldr	r0, [fp, #-4]
   19950:	mov	sp, fp
   19954:	pop	{fp, pc}
   19958:	svcvc	0x00ffffff
   1995c:	andhi	r0, r0, r0
   19960:			; <UNDEFINED> instruction: 0xffff8000
   19964:	sub	sp, sp, #12
   19968:	str	r0, [sp, #4]
   1996c:	ldr	r0, [sp, #4]
   19970:	sub	r1, r0, #48	; 0x30
   19974:	cmp	r1, #10
   19978:	str	r0, [sp]
   1997c:	bcc	199ac <__assert_fail@plt+0x89b8>
   19980:	b	19984 <__assert_fail@plt+0x8990>
   19984:	ldr	r0, [sp]
   19988:	sub	r1, r0, #65	; 0x41
   1998c:	cmp	r1, #26
   19990:	bcc	199ac <__assert_fail@plt+0x89b8>
   19994:	b	19998 <__assert_fail@plt+0x89a4>
   19998:	ldr	r0, [sp]
   1999c:	sub	r1, r0, #97	; 0x61
   199a0:	cmp	r1, #25
   199a4:	bhi	199bc <__assert_fail@plt+0x89c8>
   199a8:	b	199ac <__assert_fail@plt+0x89b8>
   199ac:	movw	r0, #1
   199b0:	and	r0, r0, #1
   199b4:	strb	r0, [sp, #11]
   199b8:	b	199c8 <__assert_fail@plt+0x89d4>
   199bc:	movw	r0, #0
   199c0:	and	r0, r0, #1
   199c4:	strb	r0, [sp, #11]
   199c8:	ldrb	r0, [sp, #11]
   199cc:	and	r0, r0, #1
   199d0:	add	sp, sp, #12
   199d4:	bx	lr
   199d8:	sub	sp, sp, #12
   199dc:	str	r0, [sp, #4]
   199e0:	ldr	r0, [sp, #4]
   199e4:	sub	r1, r0, #65	; 0x41
   199e8:	cmp	r1, #26
   199ec:	str	r0, [sp]
   199f0:	bcc	19a0c <__assert_fail@plt+0x8a18>
   199f4:	b	199f8 <__assert_fail@plt+0x8a04>
   199f8:	ldr	r0, [sp]
   199fc:	sub	r1, r0, #97	; 0x61
   19a00:	cmp	r1, #25
   19a04:	bhi	19a1c <__assert_fail@plt+0x8a28>
   19a08:	b	19a0c <__assert_fail@plt+0x8a18>
   19a0c:	movw	r0, #1
   19a10:	and	r0, r0, #1
   19a14:	strb	r0, [sp, #11]
   19a18:	b	19a28 <__assert_fail@plt+0x8a34>
   19a1c:	movw	r0, #0
   19a20:	and	r0, r0, #1
   19a24:	strb	r0, [sp, #11]
   19a28:	ldrb	r0, [sp, #11]
   19a2c:	and	r0, r0, #1
   19a30:	add	sp, sp, #12
   19a34:	bx	lr
   19a38:	sub	sp, sp, #8
   19a3c:	str	r0, [sp]
   19a40:	ldr	r0, [sp]
   19a44:	cmp	r0, #127	; 0x7f
   19a48:	bhi	19a60 <__assert_fail@plt+0x8a6c>
   19a4c:	b	19a50 <__assert_fail@plt+0x8a5c>
   19a50:	movw	r0, #1
   19a54:	and	r0, r0, #1
   19a58:	strb	r0, [sp, #7]
   19a5c:	b	19a6c <__assert_fail@plt+0x8a78>
   19a60:	movw	r0, #0
   19a64:	and	r0, r0, #1
   19a68:	strb	r0, [sp, #7]
   19a6c:	ldrb	r0, [sp, #7]
   19a70:	and	r0, r0, #1
   19a74:	add	sp, sp, #8
   19a78:	bx	lr
   19a7c:	sub	sp, sp, #8
   19a80:	str	r0, [sp, #4]
   19a84:	ldr	r0, [sp, #4]
   19a88:	cmp	r0, #32
   19a8c:	movw	r0, #1
   19a90:	str	r0, [sp]
   19a94:	beq	19aac <__assert_fail@plt+0x8ab8>
   19a98:	ldr	r0, [sp, #4]
   19a9c:	cmp	r0, #9
   19aa0:	movw	r0, #0
   19aa4:	moveq	r0, #1
   19aa8:	str	r0, [sp]
   19aac:	ldr	r0, [sp]
   19ab0:	and	r0, r0, #1
   19ab4:	add	sp, sp, #8
   19ab8:	bx	lr
   19abc:	sub	sp, sp, #12
   19ac0:	str	r0, [sp, #4]
   19ac4:	ldr	r0, [sp, #4]
   19ac8:	cmp	r0, #32
   19acc:	str	r0, [sp]
   19ad0:	bcc	19ae8 <__assert_fail@plt+0x8af4>
   19ad4:	b	19ad8 <__assert_fail@plt+0x8ae4>
   19ad8:	ldr	r0, [sp]
   19adc:	cmp	r0, #127	; 0x7f
   19ae0:	bne	19af8 <__assert_fail@plt+0x8b04>
   19ae4:	b	19ae8 <__assert_fail@plt+0x8af4>
   19ae8:	movw	r0, #1
   19aec:	and	r0, r0, #1
   19af0:	strb	r0, [sp, #11]
   19af4:	b	19b04 <__assert_fail@plt+0x8b10>
   19af8:	movw	r0, #0
   19afc:	and	r0, r0, #1
   19b00:	strb	r0, [sp, #11]
   19b04:	ldrb	r0, [sp, #11]
   19b08:	and	r0, r0, #1
   19b0c:	add	sp, sp, #12
   19b10:	bx	lr
   19b14:	sub	sp, sp, #8
   19b18:	str	r0, [sp]
   19b1c:	ldr	r0, [sp]
   19b20:	sub	r0, r0, #48	; 0x30
   19b24:	cmp	r0, #9
   19b28:	bhi	19b40 <__assert_fail@plt+0x8b4c>
   19b2c:	b	19b30 <__assert_fail@plt+0x8b3c>
   19b30:	movw	r0, #1
   19b34:	and	r0, r0, #1
   19b38:	strb	r0, [sp, #7]
   19b3c:	b	19b4c <__assert_fail@plt+0x8b58>
   19b40:	movw	r0, #0
   19b44:	and	r0, r0, #1
   19b48:	strb	r0, [sp, #7]
   19b4c:	ldrb	r0, [sp, #7]
   19b50:	and	r0, r0, #1
   19b54:	add	sp, sp, #8
   19b58:	bx	lr
   19b5c:	sub	sp, sp, #8
   19b60:	str	r0, [sp]
   19b64:	ldr	r0, [sp]
   19b68:	sub	r0, r0, #33	; 0x21
   19b6c:	cmp	r0, #93	; 0x5d
   19b70:	bhi	19b88 <__assert_fail@plt+0x8b94>
   19b74:	b	19b78 <__assert_fail@plt+0x8b84>
   19b78:	movw	r0, #1
   19b7c:	and	r0, r0, #1
   19b80:	strb	r0, [sp, #7]
   19b84:	b	19b94 <__assert_fail@plt+0x8ba0>
   19b88:	movw	r0, #0
   19b8c:	and	r0, r0, #1
   19b90:	strb	r0, [sp, #7]
   19b94:	ldrb	r0, [sp, #7]
   19b98:	and	r0, r0, #1
   19b9c:	add	sp, sp, #8
   19ba0:	bx	lr
   19ba4:	sub	sp, sp, #8
   19ba8:	str	r0, [sp]
   19bac:	ldr	r0, [sp]
   19bb0:	sub	r0, r0, #97	; 0x61
   19bb4:	cmp	r0, #25
   19bb8:	bhi	19bd0 <__assert_fail@plt+0x8bdc>
   19bbc:	b	19bc0 <__assert_fail@plt+0x8bcc>
   19bc0:	movw	r0, #1
   19bc4:	and	r0, r0, #1
   19bc8:	strb	r0, [sp, #7]
   19bcc:	b	19bdc <__assert_fail@plt+0x8be8>
   19bd0:	movw	r0, #0
   19bd4:	and	r0, r0, #1
   19bd8:	strb	r0, [sp, #7]
   19bdc:	ldrb	r0, [sp, #7]
   19be0:	and	r0, r0, #1
   19be4:	add	sp, sp, #8
   19be8:	bx	lr
   19bec:	sub	sp, sp, #8
   19bf0:	str	r0, [sp]
   19bf4:	ldr	r0, [sp]
   19bf8:	sub	r0, r0, #32
   19bfc:	cmp	r0, #94	; 0x5e
   19c00:	bhi	19c18 <__assert_fail@plt+0x8c24>
   19c04:	b	19c08 <__assert_fail@plt+0x8c14>
   19c08:	movw	r0, #1
   19c0c:	and	r0, r0, #1
   19c10:	strb	r0, [sp, #7]
   19c14:	b	19c24 <__assert_fail@plt+0x8c30>
   19c18:	movw	r0, #0
   19c1c:	and	r0, r0, #1
   19c20:	strb	r0, [sp, #7]
   19c24:	ldrb	r0, [sp, #7]
   19c28:	and	r0, r0, #1
   19c2c:	add	sp, sp, #8
   19c30:	bx	lr
   19c34:	sub	sp, sp, #12
   19c38:	str	r0, [sp, #4]
   19c3c:	ldr	r0, [sp, #4]
   19c40:	sub	r0, r0, #33	; 0x21
   19c44:	cmp	r0, #93	; 0x5d
   19c48:	str	r0, [sp]
   19c4c:	bhi	19de8 <__assert_fail@plt+0x8df4>
   19c50:	add	r0, pc, #8
   19c54:	ldr	r1, [sp]
   19c58:	ldr	r0, [r0, r1, lsl #2]
   19c5c:	mov	pc, r0
   19c60:	ldrdeq	r9, [r1], -r8
   19c64:	ldrdeq	r9, [r1], -r8
   19c68:	ldrdeq	r9, [r1], -r8
   19c6c:	ldrdeq	r9, [r1], -r8
   19c70:	ldrdeq	r9, [r1], -r8
   19c74:	ldrdeq	r9, [r1], -r8
   19c78:	ldrdeq	r9, [r1], -r8
   19c7c:	ldrdeq	r9, [r1], -r8
   19c80:	ldrdeq	r9, [r1], -r8
   19c84:	ldrdeq	r9, [r1], -r8
   19c88:	ldrdeq	r9, [r1], -r8
   19c8c:	ldrdeq	r9, [r1], -r8
   19c90:	ldrdeq	r9, [r1], -r8
   19c94:	ldrdeq	r9, [r1], -r8
   19c98:	ldrdeq	r9, [r1], -r8
   19c9c:	andeq	r9, r1, r8, ror #27
   19ca0:	andeq	r9, r1, r8, ror #27
   19ca4:	andeq	r9, r1, r8, ror #27
   19ca8:	andeq	r9, r1, r8, ror #27
   19cac:	andeq	r9, r1, r8, ror #27
   19cb0:	andeq	r9, r1, r8, ror #27
   19cb4:	andeq	r9, r1, r8, ror #27
   19cb8:	andeq	r9, r1, r8, ror #27
   19cbc:	andeq	r9, r1, r8, ror #27
   19cc0:	andeq	r9, r1, r8, ror #27
   19cc4:	ldrdeq	r9, [r1], -r8
   19cc8:	ldrdeq	r9, [r1], -r8
   19ccc:	ldrdeq	r9, [r1], -r8
   19cd0:	ldrdeq	r9, [r1], -r8
   19cd4:	ldrdeq	r9, [r1], -r8
   19cd8:	ldrdeq	r9, [r1], -r8
   19cdc:	ldrdeq	r9, [r1], -r8
   19ce0:	andeq	r9, r1, r8, ror #27
   19ce4:	andeq	r9, r1, r8, ror #27
   19ce8:	andeq	r9, r1, r8, ror #27
   19cec:	andeq	r9, r1, r8, ror #27
   19cf0:	andeq	r9, r1, r8, ror #27
   19cf4:	andeq	r9, r1, r8, ror #27
   19cf8:	andeq	r9, r1, r8, ror #27
   19cfc:	andeq	r9, r1, r8, ror #27
   19d00:	andeq	r9, r1, r8, ror #27
   19d04:	andeq	r9, r1, r8, ror #27
   19d08:	andeq	r9, r1, r8, ror #27
   19d0c:	andeq	r9, r1, r8, ror #27
   19d10:	andeq	r9, r1, r8, ror #27
   19d14:	andeq	r9, r1, r8, ror #27
   19d18:	andeq	r9, r1, r8, ror #27
   19d1c:	andeq	r9, r1, r8, ror #27
   19d20:	andeq	r9, r1, r8, ror #27
   19d24:	andeq	r9, r1, r8, ror #27
   19d28:	andeq	r9, r1, r8, ror #27
   19d2c:	andeq	r9, r1, r8, ror #27
   19d30:	andeq	r9, r1, r8, ror #27
   19d34:	andeq	r9, r1, r8, ror #27
   19d38:	andeq	r9, r1, r8, ror #27
   19d3c:	andeq	r9, r1, r8, ror #27
   19d40:	andeq	r9, r1, r8, ror #27
   19d44:	andeq	r9, r1, r8, ror #27
   19d48:	ldrdeq	r9, [r1], -r8
   19d4c:	ldrdeq	r9, [r1], -r8
   19d50:	ldrdeq	r9, [r1], -r8
   19d54:	ldrdeq	r9, [r1], -r8
   19d58:	ldrdeq	r9, [r1], -r8
   19d5c:	ldrdeq	r9, [r1], -r8
   19d60:	andeq	r9, r1, r8, ror #27
   19d64:	andeq	r9, r1, r8, ror #27
   19d68:	andeq	r9, r1, r8, ror #27
   19d6c:	andeq	r9, r1, r8, ror #27
   19d70:	andeq	r9, r1, r8, ror #27
   19d74:	andeq	r9, r1, r8, ror #27
   19d78:	andeq	r9, r1, r8, ror #27
   19d7c:	andeq	r9, r1, r8, ror #27
   19d80:	andeq	r9, r1, r8, ror #27
   19d84:	andeq	r9, r1, r8, ror #27
   19d88:	andeq	r9, r1, r8, ror #27
   19d8c:	andeq	r9, r1, r8, ror #27
   19d90:	andeq	r9, r1, r8, ror #27
   19d94:	andeq	r9, r1, r8, ror #27
   19d98:	andeq	r9, r1, r8, ror #27
   19d9c:	andeq	r9, r1, r8, ror #27
   19da0:	andeq	r9, r1, r8, ror #27
   19da4:	andeq	r9, r1, r8, ror #27
   19da8:	andeq	r9, r1, r8, ror #27
   19dac:	andeq	r9, r1, r8, ror #27
   19db0:	andeq	r9, r1, r8, ror #27
   19db4:	andeq	r9, r1, r8, ror #27
   19db8:	andeq	r9, r1, r8, ror #27
   19dbc:	andeq	r9, r1, r8, ror #27
   19dc0:	andeq	r9, r1, r8, ror #27
   19dc4:	andeq	r9, r1, r8, ror #27
   19dc8:	ldrdeq	r9, [r1], -r8
   19dcc:	ldrdeq	r9, [r1], -r8
   19dd0:	ldrdeq	r9, [r1], -r8
   19dd4:	ldrdeq	r9, [r1], -r8
   19dd8:	movw	r0, #1
   19ddc:	and	r0, r0, #1
   19de0:	strb	r0, [sp, #11]
   19de4:	b	19df4 <__assert_fail@plt+0x8e00>
   19de8:	movw	r0, #0
   19dec:	and	r0, r0, #1
   19df0:	strb	r0, [sp, #11]
   19df4:	ldrb	r0, [sp, #11]
   19df8:	and	r0, r0, #1
   19dfc:	add	sp, sp, #12
   19e00:	bx	lr
   19e04:	sub	sp, sp, #12
   19e08:	str	r0, [sp, #4]
   19e0c:	ldr	r0, [sp, #4]
   19e10:	sub	r1, r0, #9
   19e14:	cmp	r1, #5
   19e18:	str	r0, [sp]
   19e1c:	bcc	19e34 <__assert_fail@plt+0x8e40>
   19e20:	b	19e24 <__assert_fail@plt+0x8e30>
   19e24:	ldr	r0, [sp]
   19e28:	cmp	r0, #32
   19e2c:	bne	19e44 <__assert_fail@plt+0x8e50>
   19e30:	b	19e34 <__assert_fail@plt+0x8e40>
   19e34:	movw	r0, #1
   19e38:	and	r0, r0, #1
   19e3c:	strb	r0, [sp, #11]
   19e40:	b	19e50 <__assert_fail@plt+0x8e5c>
   19e44:	movw	r0, #0
   19e48:	and	r0, r0, #1
   19e4c:	strb	r0, [sp, #11]
   19e50:	ldrb	r0, [sp, #11]
   19e54:	and	r0, r0, #1
   19e58:	add	sp, sp, #12
   19e5c:	bx	lr
   19e60:	sub	sp, sp, #8
   19e64:	str	r0, [sp]
   19e68:	ldr	r0, [sp]
   19e6c:	sub	r0, r0, #65	; 0x41
   19e70:	cmp	r0, #25
   19e74:	bhi	19e8c <__assert_fail@plt+0x8e98>
   19e78:	b	19e7c <__assert_fail@plt+0x8e88>
   19e7c:	movw	r0, #1
   19e80:	and	r0, r0, #1
   19e84:	strb	r0, [sp, #7]
   19e88:	b	19e98 <__assert_fail@plt+0x8ea4>
   19e8c:	movw	r0, #0
   19e90:	and	r0, r0, #1
   19e94:	strb	r0, [sp, #7]
   19e98:	ldrb	r0, [sp, #7]
   19e9c:	and	r0, r0, #1
   19ea0:	add	sp, sp, #8
   19ea4:	bx	lr
   19ea8:	sub	sp, sp, #12
   19eac:	str	r0, [sp, #4]
   19eb0:	ldr	r0, [sp, #4]
   19eb4:	sub	r1, r0, #48	; 0x30
   19eb8:	cmp	r1, #10
   19ebc:	str	r0, [sp]
   19ec0:	bcc	19ef0 <__assert_fail@plt+0x8efc>
   19ec4:	b	19ec8 <__assert_fail@plt+0x8ed4>
   19ec8:	ldr	r0, [sp]
   19ecc:	sub	r1, r0, #65	; 0x41
   19ed0:	cmp	r1, #6
   19ed4:	bcc	19ef0 <__assert_fail@plt+0x8efc>
   19ed8:	b	19edc <__assert_fail@plt+0x8ee8>
   19edc:	ldr	r0, [sp]
   19ee0:	sub	r1, r0, #97	; 0x61
   19ee4:	cmp	r1, #5
   19ee8:	bhi	19f00 <__assert_fail@plt+0x8f0c>
   19eec:	b	19ef0 <__assert_fail@plt+0x8efc>
   19ef0:	movw	r0, #1
   19ef4:	and	r0, r0, #1
   19ef8:	strb	r0, [sp, #11]
   19efc:	b	19f0c <__assert_fail@plt+0x8f18>
   19f00:	movw	r0, #0
   19f04:	and	r0, r0, #1
   19f08:	strb	r0, [sp, #11]
   19f0c:	ldrb	r0, [sp, #11]
   19f10:	and	r0, r0, #1
   19f14:	add	sp, sp, #12
   19f18:	bx	lr
   19f1c:	sub	sp, sp, #8
   19f20:	str	r0, [sp]
   19f24:	ldr	r0, [sp]
   19f28:	sub	r0, r0, #65	; 0x41
   19f2c:	cmp	r0, #25
   19f30:	bhi	19f4c <__assert_fail@plt+0x8f58>
   19f34:	b	19f38 <__assert_fail@plt+0x8f44>
   19f38:	ldr	r0, [sp]
   19f3c:	sub	r0, r0, #65	; 0x41
   19f40:	add	r0, r0, #97	; 0x61
   19f44:	str	r0, [sp, #4]
   19f48:	b	19f54 <__assert_fail@plt+0x8f60>
   19f4c:	ldr	r0, [sp]
   19f50:	str	r0, [sp, #4]
   19f54:	ldr	r0, [sp, #4]
   19f58:	add	sp, sp, #8
   19f5c:	bx	lr
   19f60:	sub	sp, sp, #8
   19f64:	str	r0, [sp]
   19f68:	ldr	r0, [sp]
   19f6c:	sub	r0, r0, #97	; 0x61
   19f70:	cmp	r0, #25
   19f74:	bhi	19f90 <__assert_fail@plt+0x8f9c>
   19f78:	b	19f7c <__assert_fail@plt+0x8f88>
   19f7c:	ldr	r0, [sp]
   19f80:	sub	r0, r0, #97	; 0x61
   19f84:	add	r0, r0, #65	; 0x41
   19f88:	str	r0, [sp, #4]
   19f8c:	b	19f98 <__assert_fail@plt+0x8fa4>
   19f90:	ldr	r0, [sp]
   19f94:	str	r0, [sp, #4]
   19f98:	ldr	r0, [sp, #4]
   19f9c:	add	sp, sp, #8
   19fa0:	bx	lr
   19fa4:	push	{r4, r5, fp, lr}
   19fa8:	add	fp, sp, #8
   19fac:	sub	sp, sp, #272	; 0x110
   19fb0:	add	r1, sp, #7
   19fb4:	str	r0, [fp, #-16]
   19fb8:	ldr	r0, [fp, #-16]
   19fbc:	movw	r2, #257	; 0x101
   19fc0:	bl	1a040 <__assert_fail@plt+0x904c>
   19fc4:	cmp	r0, #0
   19fc8:	beq	19fdc <__assert_fail@plt+0x8fe8>
   19fcc:	movw	r0, #0
   19fd0:	and	r0, r0, #1
   19fd4:	strb	r0, [fp, #-9]
   19fd8:	b	1a030 <__assert_fail@plt+0x903c>
   19fdc:	add	r0, sp, #7
   19fe0:	movw	r1, #44447	; 0xad9f
   19fe4:	movt	r1, #1
   19fe8:	bl	10dcc <strcmp@plt>
   19fec:	cmp	r0, #0
   19ff0:	movw	r0, #1
   19ff4:	str	r0, [sp]
   19ff8:	beq	1a01c <__assert_fail@plt+0x9028>
   19ffc:	add	r0, sp, #7
   1a000:	movw	r1, #44449	; 0xada1
   1a004:	movt	r1, #1
   1a008:	bl	10dcc <strcmp@plt>
   1a00c:	cmp	r0, #0
   1a010:	movw	r0, #0
   1a014:	moveq	r0, #1
   1a018:	str	r0, [sp]
   1a01c:	ldr	r0, [sp]
   1a020:	mvn	r1, #0
   1a024:	eor	r0, r0, r1
   1a028:	and	r0, r0, #1
   1a02c:	strb	r0, [fp, #-9]
   1a030:	ldrb	r0, [fp, #-9]
   1a034:	and	r0, r0, #1
   1a038:	sub	sp, fp, #8
   1a03c:	pop	{r4, r5, fp, pc}
   1a040:	push	{fp, lr}
   1a044:	mov	fp, sp
   1a048:	sub	sp, sp, #16
   1a04c:	str	r0, [fp, #-4]
   1a050:	str	r1, [sp, #8]
   1a054:	str	r2, [sp, #4]
   1a058:	ldr	r0, [fp, #-4]
   1a05c:	ldr	r1, [sp, #8]
   1a060:	ldr	r2, [sp, #4]
   1a064:	bl	1a070 <__assert_fail@plt+0x907c>
   1a068:	mov	sp, fp
   1a06c:	pop	{fp, pc}
   1a070:	push	{fp, lr}
   1a074:	mov	fp, sp
   1a078:	sub	sp, sp, #24
   1a07c:	str	r0, [fp, #-8]
   1a080:	str	r1, [sp, #12]
   1a084:	str	r2, [sp, #8]
   1a088:	ldr	r0, [fp, #-8]
   1a08c:	bl	1a170 <__assert_fail@plt+0x917c>
   1a090:	str	r0, [sp, #4]
   1a094:	ldr	r0, [sp, #4]
   1a098:	movw	r1, #0
   1a09c:	cmp	r0, r1
   1a0a0:	bne	1a0c8 <__assert_fail@plt+0x90d4>
   1a0a4:	ldr	r0, [sp, #8]
   1a0a8:	cmp	r0, #0
   1a0ac:	bls	1a0bc <__assert_fail@plt+0x90c8>
   1a0b0:	ldr	r0, [sp, #12]
   1a0b4:	movw	r1, #0
   1a0b8:	strb	r1, [r0]
   1a0bc:	movw	r0, #22
   1a0c0:	str	r0, [fp, #-4]
   1a0c4:	b	1a144 <__assert_fail@plt+0x9150>
   1a0c8:	ldr	r0, [sp, #4]
   1a0cc:	bl	10f10 <strlen@plt>
   1a0d0:	str	r0, [sp]
   1a0d4:	ldr	r0, [sp]
   1a0d8:	ldr	r1, [sp, #8]
   1a0dc:	cmp	r0, r1
   1a0e0:	bcs	1a104 <__assert_fail@plt+0x9110>
   1a0e4:	ldr	r0, [sp, #12]
   1a0e8:	ldr	r1, [sp, #4]
   1a0ec:	ldr	r2, [sp]
   1a0f0:	add	r2, r2, #1
   1a0f4:	bl	10e08 <memcpy@plt>
   1a0f8:	movw	r0, #0
   1a0fc:	str	r0, [fp, #-4]
   1a100:	b	1a144 <__assert_fail@plt+0x9150>
   1a104:	ldr	r0, [sp, #8]
   1a108:	cmp	r0, #0
   1a10c:	bls	1a13c <__assert_fail@plt+0x9148>
   1a110:	ldr	r0, [sp, #12]
   1a114:	ldr	r1, [sp, #4]
   1a118:	ldr	r2, [sp, #8]
   1a11c:	sub	r2, r2, #1
   1a120:	bl	10e08 <memcpy@plt>
   1a124:	ldr	r0, [sp, #12]
   1a128:	ldr	r1, [sp, #8]
   1a12c:	sub	r1, r1, #1
   1a130:	add	r0, r0, r1
   1a134:	movw	r1, #0
   1a138:	strb	r1, [r0]
   1a13c:	movw	r0, #34	; 0x22
   1a140:	str	r0, [fp, #-4]
   1a144:	ldr	r0, [fp, #-4]
   1a148:	mov	sp, fp
   1a14c:	pop	{fp, pc}
   1a150:	push	{fp, lr}
   1a154:	mov	fp, sp
   1a158:	sub	sp, sp, #8
   1a15c:	str	r0, [sp, #4]
   1a160:	ldr	r0, [sp, #4]
   1a164:	bl	1a170 <__assert_fail@plt+0x917c>
   1a168:	mov	sp, fp
   1a16c:	pop	{fp, pc}
   1a170:	push	{fp, lr}
   1a174:	mov	fp, sp
   1a178:	sub	sp, sp, #8
   1a17c:	str	r0, [sp, #4]
   1a180:	ldr	r0, [sp, #4]
   1a184:	movw	r1, #0
   1a188:	bl	10f7c <setlocale@plt>
   1a18c:	str	r0, [sp]
   1a190:	ldr	r0, [sp]
   1a194:	mov	sp, fp
   1a198:	pop	{fp, pc}
   1a19c:	cmp	r3, #0
   1a1a0:	cmpeq	r2, #0
   1a1a4:	bne	1a1c8 <__assert_fail@plt+0x91d4>
   1a1a8:	cmp	r1, #0
   1a1ac:	movlt	r1, #-2147483648	; 0x80000000
   1a1b0:	movlt	r0, #0
   1a1b4:	blt	1a1c4 <__assert_fail@plt+0x91d0>
   1a1b8:	cmpeq	r0, #0
   1a1bc:	mvnne	r1, #-2147483648	; 0x80000000
   1a1c0:	mvnne	r0, #0
   1a1c4:	b	1a2ac <__assert_fail@plt+0x92b8>
   1a1c8:	sub	sp, sp, #8
   1a1cc:	push	{sp, lr}
   1a1d0:	cmp	r1, #0
   1a1d4:	blt	1a1f4 <__assert_fail@plt+0x9200>
   1a1d8:	cmp	r3, #0
   1a1dc:	blt	1a228 <__assert_fail@plt+0x9234>
   1a1e0:	bl	1a2bc <__assert_fail@plt+0x92c8>
   1a1e4:	ldr	lr, [sp, #4]
   1a1e8:	add	sp, sp, #8
   1a1ec:	pop	{r2, r3}
   1a1f0:	bx	lr
   1a1f4:	rsbs	r0, r0, #0
   1a1f8:	sbc	r1, r1, r1, lsl #1
   1a1fc:	cmp	r3, #0
   1a200:	blt	1a24c <__assert_fail@plt+0x9258>
   1a204:	bl	1a2bc <__assert_fail@plt+0x92c8>
   1a208:	ldr	lr, [sp, #4]
   1a20c:	add	sp, sp, #8
   1a210:	pop	{r2, r3}
   1a214:	rsbs	r0, r0, #0
   1a218:	sbc	r1, r1, r1, lsl #1
   1a21c:	rsbs	r2, r2, #0
   1a220:	sbc	r3, r3, r3, lsl #1
   1a224:	bx	lr
   1a228:	rsbs	r2, r2, #0
   1a22c:	sbc	r3, r3, r3, lsl #1
   1a230:	bl	1a2bc <__assert_fail@plt+0x92c8>
   1a234:	ldr	lr, [sp, #4]
   1a238:	add	sp, sp, #8
   1a23c:	pop	{r2, r3}
   1a240:	rsbs	r0, r0, #0
   1a244:	sbc	r1, r1, r1, lsl #1
   1a248:	bx	lr
   1a24c:	rsbs	r2, r2, #0
   1a250:	sbc	r3, r3, r3, lsl #1
   1a254:	bl	1a2bc <__assert_fail@plt+0x92c8>
   1a258:	ldr	lr, [sp, #4]
   1a25c:	add	sp, sp, #8
   1a260:	pop	{r2, r3}
   1a264:	rsbs	r2, r2, #0
   1a268:	sbc	r3, r3, r3, lsl #1
   1a26c:	bx	lr
   1a270:	cmp	r3, #0
   1a274:	cmpeq	r2, #0
   1a278:	bne	1a290 <__assert_fail@plt+0x929c>
   1a27c:	cmp	r1, #0
   1a280:	cmpeq	r0, #0
   1a284:	mvnne	r1, #0
   1a288:	mvnne	r0, #0
   1a28c:	b	1a2ac <__assert_fail@plt+0x92b8>
   1a290:	sub	sp, sp, #8
   1a294:	push	{sp, lr}
   1a298:	bl	1a2bc <__assert_fail@plt+0x92c8>
   1a29c:	ldr	lr, [sp, #4]
   1a2a0:	add	sp, sp, #8
   1a2a4:	pop	{r2, r3}
   1a2a8:	bx	lr
   1a2ac:	push	{r1, lr}
   1a2b0:	mov	r0, #8
   1a2b4:	bl	10db4 <raise@plt>
   1a2b8:	pop	{r1, pc}
   1a2bc:	cmp	r1, r3
   1a2c0:	cmpeq	r0, r2
   1a2c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a2c8:	mov	r4, r0
   1a2cc:	movcc	r0, #0
   1a2d0:	mov	r5, r1
   1a2d4:	ldr	lr, [sp, #36]	; 0x24
   1a2d8:	movcc	r1, r0
   1a2dc:	bcc	1a3d8 <__assert_fail@plt+0x93e4>
   1a2e0:	cmp	r3, #0
   1a2e4:	clzeq	ip, r2
   1a2e8:	clzne	ip, r3
   1a2ec:	addeq	ip, ip, #32
   1a2f0:	cmp	r5, #0
   1a2f4:	clzeq	r1, r4
   1a2f8:	addeq	r1, r1, #32
   1a2fc:	clzne	r1, r5
   1a300:	sub	ip, ip, r1
   1a304:	sub	sl, ip, #32
   1a308:	lsl	r9, r3, ip
   1a30c:	rsb	fp, ip, #32
   1a310:	orr	r9, r9, r2, lsl sl
   1a314:	orr	r9, r9, r2, lsr fp
   1a318:	lsl	r8, r2, ip
   1a31c:	cmp	r5, r9
   1a320:	cmpeq	r4, r8
   1a324:	movcc	r0, #0
   1a328:	movcc	r1, r0
   1a32c:	bcc	1a348 <__assert_fail@plt+0x9354>
   1a330:	mov	r0, #1
   1a334:	subs	r4, r4, r8
   1a338:	lsl	r1, r0, sl
   1a33c:	orr	r1, r1, r0, lsr fp
   1a340:	lsl	r0, r0, ip
   1a344:	sbc	r5, r5, r9
   1a348:	cmp	ip, #0
   1a34c:	beq	1a3d8 <__assert_fail@plt+0x93e4>
   1a350:	lsr	r6, r8, #1
   1a354:	orr	r6, r6, r9, lsl #31
   1a358:	lsr	r7, r9, #1
   1a35c:	mov	r2, ip
   1a360:	b	1a384 <__assert_fail@plt+0x9390>
   1a364:	subs	r3, r4, r6
   1a368:	sbc	r8, r5, r7
   1a36c:	adds	r3, r3, r3
   1a370:	adc	r8, r8, r8
   1a374:	adds	r4, r3, #1
   1a378:	adc	r5, r8, #0
   1a37c:	subs	r2, r2, #1
   1a380:	beq	1a3a0 <__assert_fail@plt+0x93ac>
   1a384:	cmp	r5, r7
   1a388:	cmpeq	r4, r6
   1a38c:	bcs	1a364 <__assert_fail@plt+0x9370>
   1a390:	adds	r4, r4, r4
   1a394:	adc	r5, r5, r5
   1a398:	subs	r2, r2, #1
   1a39c:	bne	1a384 <__assert_fail@plt+0x9390>
   1a3a0:	lsr	r3, r4, ip
   1a3a4:	orr	r3, r3, r5, lsl fp
   1a3a8:	lsr	r2, r5, ip
   1a3ac:	orr	r3, r3, r5, lsr sl
   1a3b0:	adds	r0, r0, r4
   1a3b4:	mov	r4, r3
   1a3b8:	lsl	r3, r2, ip
   1a3bc:	orr	r3, r3, r4, lsl sl
   1a3c0:	lsl	ip, r4, ip
   1a3c4:	orr	r3, r3, r4, lsr fp
   1a3c8:	adc	r1, r1, r5
   1a3cc:	subs	r0, r0, ip
   1a3d0:	mov	r5, r2
   1a3d4:	sbc	r1, r1, r3
   1a3d8:	cmp	lr, #0
   1a3dc:	strdne	r4, [lr]
   1a3e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a3e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a3e8:	mov	r7, r0
   1a3ec:	ldr	r6, [pc, #72]	; 1a43c <__assert_fail@plt+0x9448>
   1a3f0:	ldr	r5, [pc, #72]	; 1a440 <__assert_fail@plt+0x944c>
   1a3f4:	add	r6, pc, r6
   1a3f8:	add	r5, pc, r5
   1a3fc:	sub	r6, r6, r5
   1a400:	mov	r8, r1
   1a404:	mov	r9, r2
   1a408:	bl	10d7c <calloc@plt-0x20>
   1a40c:	asrs	r6, r6, #2
   1a410:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a414:	mov	r4, #0
   1a418:	add	r4, r4, #1
   1a41c:	ldr	r3, [r5], #4
   1a420:	mov	r2, r9
   1a424:	mov	r1, r8
   1a428:	mov	r0, r7
   1a42c:	blx	r3
   1a430:	cmp	r6, r4
   1a434:	bne	1a418 <__assert_fail@plt+0x9424>
   1a438:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a43c:	andeq	r0, r1, r0, lsl fp
   1a440:	andeq	r0, r1, r8, lsl #22
   1a444:	bx	lr
   1a448:	ldr	r3, [pc, #12]	; 1a45c <__assert_fail@plt+0x9468>
   1a44c:	mov	r1, #0
   1a450:	add	r3, pc, r3
   1a454:	ldr	r2, [r3]
   1a458:	b	10f34 <__cxa_atexit@plt>
   1a45c:	andeq	r0, r1, r8, lsl #25

Disassembly of section .fini:

0001a460 <.fini>:
   1a460:	push	{r3, lr}
   1a464:	pop	{r3, pc}
