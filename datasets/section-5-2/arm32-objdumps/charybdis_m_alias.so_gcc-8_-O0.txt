
../repos/charybdis/modules/.libs/m_alias.so:     file format elf32-littlearm


Disassembly of section .init:

00000754 <_init>:
 754:	push	{r3, lr}
 758:	bl	894 <call_weak_fn>
 75c:	pop	{r3, pc}

Disassembly of section .plt:

00000760 <.plt>:
 760:	push	{lr}		; (str lr, [sp, #-4]!)
 764:	ldr	lr, [pc, #4]	; 770 <.plt+0x10>
 768:	add	lr, pc, lr
 76c:	ldr	pc, [lr, #8]!
 770:	.word	0x00011890

00000774 <calloc@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2192]!	; 0x890

00000780 <mod_del_cmd@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2184]!	; 0x888

0000078c <__cxa_finalize@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2176]!	; 0x880

00000798 <sendto_one@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2168]!	; 0x878

000007a4 <free@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2160]!	; 0x870

000007b0 <memcpy@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2152]!	; 0x868

000007bc <rb_outofmemory@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2144]!	; 0x860

000007c8 <rb_free_rb_dlink_node@plt>:
 7c8:	add	ip, pc, #0, 12
 7cc:	add	ip, ip, #69632	; 0x11000
 7d0:	ldr	pc, [ip, #2136]!	; 0x858

000007d4 <strcpy@plt>:
 7d4:	add	ip, pc, #0, 12
 7d8:	add	ip, ip, #69632	; 0x11000
 7dc:	ldr	pc, [ip, #2128]!	; 0x850

000007e0 <rb_dictionary_foreach_start@plt>:
 7e0:	add	ip, pc, #0, 12
 7e4:	add	ip, ip, #69632	; 0x11000
 7e8:	ldr	pc, [ip, #2120]!	; 0x848

000007ec <msgbuf_reconstruct_tail@plt>:
 7ec:	add	ip, pc, #0, 12
 7f0:	add	ip, ip, #69632	; 0x11000
 7f4:	ldr	pc, [ip, #2112]!	; 0x840

000007f8 <__gmon_start__@plt>:
 7f8:	add	ip, pc, #0, 12
 7fc:	add	ip, ip, #69632	; 0x11000
 800:	ldr	pc, [ip, #2104]!	; 0x838

00000804 <rb_make_rb_dlink_node@plt>:
 804:	add	ip, pc, #0, 12
 808:	add	ip, ip, #69632	; 0x11000
 80c:	ldr	pc, [ip, #2096]!	; 0x830

00000810 <sendto_one_numeric@plt>:
 810:	add	ip, pc, #0, 12
 814:	add	ip, ip, #69632	; 0x11000
 818:	ldr	pc, [ip, #2088]!	; 0x828

0000081c <strlen@plt>:
 81c:	add	ip, pc, #0, 12
 820:	add	ip, ip, #69632	; 0x11000
 824:	ldr	pc, [ip, #2080]!	; 0x820

00000828 <strchr@plt>:
 828:	add	ip, pc, #0, 12
 82c:	add	ip, ip, #69632	; 0x11000
 830:	ldr	pc, [ip, #2072]!	; 0x818

00000834 <find_server@plt>:
 834:	add	ip, pc, #0, 12
 838:	add	ip, ip, #69632	; 0x11000
 83c:	ldr	pc, [ip, #2064]!	; 0x810

00000840 <rb_dictionary_foreach_cur@plt>:
 840:	add	ip, pc, #0, 12
 844:	add	ip, ip, #69632	; 0x11000
 848:	ldr	pc, [ip, #2056]!	; 0x808

0000084c <find_named_person@plt>:
 84c:	add	ip, pc, #0, 12
 850:	add	ip, ip, #69632	; 0x11000
 854:	ldr	pc, [ip, #2048]!	; 0x800

00000858 <flood_endgrace@plt>:
 858:	add	ip, pc, #0, 12
 85c:	add	ip, ip, #69632	; 0x11000
 860:	ldr	pc, [ip, #2040]!	; 0x7f8

00000864 <rb_dictionary_foreach_next@plt>:
 864:	add	ip, pc, #0, 12
 868:	add	ip, ip, #69632	; 0x11000
 86c:	ldr	pc, [ip, #2032]!	; 0x7f0

00000870 <mod_add_cmd@plt>:
 870:	add	ip, pc, #0, 12
 874:	add	ip, ip, #69632	; 0x11000
 878:	ldr	pc, [ip, #2024]!	; 0x7e8

0000087c <rb_dictionary_retrieve@plt>:
 87c:	add	ip, pc, #0, 12
 880:	add	ip, ip, #69632	; 0x11000
 884:	ldr	pc, [ip, #2016]!	; 0x7e0

00000888 <__assert_fail@plt>:
 888:	add	ip, pc, #0, 12
 88c:	add	ip, ip, #69632	; 0x11000
 890:	ldr	pc, [ip, #2008]!	; 0x7d8

Disassembly of section .text:

00000894 <call_weak_fn>:
     894:	ldr	r3, [pc, #20]	; 8b0 <call_weak_fn+0x1c>
     898:	ldr	r2, [pc, #20]	; 8b4 <call_weak_fn+0x20>
     89c:	add	r3, pc, r3
     8a0:	ldr	r2, [r3, r2]
     8a4:	cmp	r2, #0
     8a8:	bxeq	lr
     8ac:	b	7f8 <__gmon_start__@plt>
     8b0:	.word	0x0001175c
     8b4:	.word	0x00000078

000008b8 <deregister_tm_clones>:
     8b8:	ldr	r0, [pc, #44]	; 8ec <deregister_tm_clones+0x34>
     8bc:	ldr	r3, [pc, #44]	; 8f0 <deregister_tm_clones+0x38>
     8c0:	add	r0, pc, r0
     8c4:	add	r3, pc, r3
     8c8:	cmp	r3, r0
     8cc:	ldr	r3, [pc, #32]	; 8f4 <deregister_tm_clones+0x3c>
     8d0:	add	r3, pc, r3
     8d4:	bxeq	lr
     8d8:	ldr	r2, [pc, #24]	; 8f8 <deregister_tm_clones+0x40>
     8dc:	ldr	r3, [r3, r2]
     8e0:	cmp	r3, #0
     8e4:	bxeq	lr
     8e8:	bx	r3
     8ec:	.word	0x00011800
     8f0:	.word	0x000117fc
     8f4:	.word	0x00011728
     8f8:	.word	0x00000070

000008fc <register_tm_clones>:
     8fc:	ldr	r0, [pc, #56]	; 93c <register_tm_clones+0x40>
     900:	ldr	r3, [pc, #56]	; 940 <register_tm_clones+0x44>
     904:	add	r0, pc, r0
     908:	add	r3, pc, r3
     90c:	sub	r1, r3, r0
     910:	ldr	r3, [pc, #44]	; 944 <register_tm_clones+0x48>
     914:	asr	r1, r1, #2
     918:	add	r3, pc, r3
     91c:	add	r1, r1, r1, lsr #31
     920:	asrs	r1, r1, #1
     924:	bxeq	lr
     928:	ldr	r2, [pc, #24]	; 948 <register_tm_clones+0x4c>
     92c:	ldr	r3, [r3, r2]
     930:	cmp	r3, #0
     934:	bxeq	lr
     938:	bx	r3
     93c:	.word	0x000117bc
     940:	.word	0x000117b8
     944:	.word	0x000116e0
     948:	.word	0x0000007c

0000094c <__do_global_dtors_aux>:
     94c:	ldr	r3, [pc, #76]	; 9a0 <__do_global_dtors_aux+0x54>
     950:	ldr	r2, [pc, #76]	; 9a4 <__do_global_dtors_aux+0x58>
     954:	add	r3, pc, r3
     958:	add	r2, pc, r2
     95c:	ldrb	r3, [r3]
     960:	cmp	r3, #0
     964:	bxne	lr
     968:	ldr	r3, [pc, #56]	; 9a8 <__do_global_dtors_aux+0x5c>
     96c:	push	{r4, lr}
     970:	ldr	r3, [r2, r3]
     974:	cmp	r3, #0
     978:	beq	988 <__do_global_dtors_aux+0x3c>
     97c:	ldr	r3, [pc, #40]	; 9ac <__do_global_dtors_aux+0x60>
     980:	ldr	r0, [pc, r3]
     984:	bl	78c <__cxa_finalize@plt>
     988:	bl	8b8 <deregister_tm_clones>
     98c:	ldr	r3, [pc, #28]	; 9b0 <__do_global_dtors_aux+0x64>
     990:	mov	r2, #1
     994:	add	r3, pc, r3
     998:	strb	r2, [r3]
     99c:	pop	{r4, pc}
     9a0:	.word	0x0001176c
     9a4:	.word	0x000116a0
     9a8:	.word	0x0000006c
     9ac:	.word	0x000116fc
     9b0:	.word	0x0001172c

000009b4 <frame_dummy>:
     9b4:	b	8fc <register_tm_clones>

000009b8 <rb_dlinkAdd>:
     9b8:	str	fp, [sp, #-8]!
     9bc:	str	lr, [sp, #4]
     9c0:	add	fp, sp, #4
     9c4:	sub	sp, sp, #16
     9c8:	str	r0, [fp, #-8]
     9cc:	str	r1, [fp, #-12]
     9d0:	str	r2, [fp, #-16]
     9d4:	ldr	r3, [fp, #-8]
     9d8:	cmp	r3, #0
     9dc:	bne	a00 <rb_dlinkAdd+0x48>
     9e0:	ldr	r3, [pc, #268]	; af4 <rb_dlinkAdd+0x13c>
     9e4:	add	r3, pc, r3
     9e8:	mov	r2, #143	; 0x8f
     9ec:	ldr	r1, [pc, #260]	; af8 <rb_dlinkAdd+0x140>
     9f0:	add	r1, pc, r1
     9f4:	ldr	r0, [pc, #256]	; afc <rb_dlinkAdd+0x144>
     9f8:	add	r0, pc, r0
     9fc:	bl	888 <__assert_fail@plt>
     a00:	ldr	r3, [fp, #-12]
     a04:	cmp	r3, #0
     a08:	bne	a2c <rb_dlinkAdd+0x74>
     a0c:	ldr	r3, [pc, #236]	; b00 <rb_dlinkAdd+0x148>
     a10:	add	r3, pc, r3
     a14:	mov	r2, #144	; 0x90
     a18:	ldr	r1, [pc, #228]	; b04 <rb_dlinkAdd+0x14c>
     a1c:	add	r1, pc, r1
     a20:	ldr	r0, [pc, #224]	; b08 <rb_dlinkAdd+0x150>
     a24:	add	r0, pc, r0
     a28:	bl	888 <__assert_fail@plt>
     a2c:	ldr	r3, [fp, #-16]
     a30:	cmp	r3, #0
     a34:	bne	a58 <rb_dlinkAdd+0xa0>
     a38:	ldr	r3, [pc, #204]	; b0c <rb_dlinkAdd+0x154>
     a3c:	add	r3, pc, r3
     a40:	mov	r2, #145	; 0x91
     a44:	ldr	r1, [pc, #196]	; b10 <rb_dlinkAdd+0x158>
     a48:	add	r1, pc, r1
     a4c:	ldr	r0, [pc, #192]	; b14 <rb_dlinkAdd+0x15c>
     a50:	add	r0, pc, r0
     a54:	bl	888 <__assert_fail@plt>
     a58:	ldr	r3, [fp, #-12]
     a5c:	ldr	r2, [fp, #-8]
     a60:	str	r2, [r3]
     a64:	ldr	r3, [fp, #-12]
     a68:	mov	r2, #0
     a6c:	str	r2, [r3, #4]
     a70:	ldr	r3, [fp, #-16]
     a74:	ldr	r2, [r3]
     a78:	ldr	r3, [fp, #-12]
     a7c:	str	r2, [r3, #8]
     a80:	ldr	r3, [fp, #-16]
     a84:	ldr	r3, [r3]
     a88:	cmp	r3, #0
     a8c:	beq	aa4 <rb_dlinkAdd+0xec>
     a90:	ldr	r3, [fp, #-16]
     a94:	ldr	r3, [r3]
     a98:	ldr	r2, [fp, #-12]
     a9c:	str	r2, [r3, #4]
     aa0:	b	ac0 <rb_dlinkAdd+0x108>
     aa4:	ldr	r3, [fp, #-16]
     aa8:	ldr	r3, [r3, #4]
     aac:	cmp	r3, #0
     ab0:	bne	ac0 <rb_dlinkAdd+0x108>
     ab4:	ldr	r3, [fp, #-16]
     ab8:	ldr	r2, [fp, #-12]
     abc:	str	r2, [r3, #4]
     ac0:	ldr	r3, [fp, #-16]
     ac4:	ldr	r2, [fp, #-12]
     ac8:	str	r2, [r3]
     acc:	ldr	r3, [fp, #-16]
     ad0:	ldr	r3, [r3, #8]
     ad4:	add	r2, r3, #1
     ad8:	ldr	r3, [fp, #-16]
     adc:	str	r2, [r3, #8]
     ae0:	nop	{0}
     ae4:	sub	sp, fp, #4
     ae8:	ldr	fp, [sp]
     aec:	add	sp, sp, #4
     af0:	pop	{pc}		; (ldr pc, [sp], #4)
     af4:	.word	0x000009e0
     af8:	.word	0x000008e0
     afc:	.word	0x000008f4
     b00:	.word	0x000009b4
     b04:	.word	0x000008b4
     b08:	.word	0x000008d8
     b0c:	.word	0x00000988
     b10:	.word	0x00000888
     b14:	.word	0x000008b8

00000b18 <rb_dlinkDelete>:
     b18:	str	fp, [sp, #-8]!
     b1c:	str	lr, [sp, #4]
     b20:	add	fp, sp, #4
     b24:	sub	sp, sp, #8
     b28:	str	r0, [fp, #-8]
     b2c:	str	r1, [fp, #-12]
     b30:	ldr	r3, [fp, #-8]
     b34:	cmp	r3, #0
     b38:	bne	b5c <rb_dlinkDelete+0x44>
     b3c:	ldr	r3, [pc, #248]	; c3c <rb_dlinkDelete+0x124>
     b40:	add	r3, pc, r3
     b44:	mov	r2, #235	; 0xeb
     b48:	ldr	r1, [pc, #240]	; c40 <rb_dlinkDelete+0x128>
     b4c:	add	r1, pc, r1
     b50:	ldr	r0, [pc, #236]	; c44 <rb_dlinkDelete+0x12c>
     b54:	add	r0, pc, r0
     b58:	bl	888 <__assert_fail@plt>
     b5c:	ldr	r3, [fp, #-12]
     b60:	cmp	r3, #0
     b64:	bne	b88 <rb_dlinkDelete+0x70>
     b68:	ldr	r3, [pc, #216]	; c48 <rb_dlinkDelete+0x130>
     b6c:	add	r3, pc, r3
     b70:	mov	r2, #236	; 0xec
     b74:	ldr	r1, [pc, #208]	; c4c <rb_dlinkDelete+0x134>
     b78:	add	r1, pc, r1
     b7c:	ldr	r0, [pc, #204]	; c50 <rb_dlinkDelete+0x138>
     b80:	add	r0, pc, r0
     b84:	bl	888 <__assert_fail@plt>
     b88:	ldr	r3, [fp, #-8]
     b8c:	ldr	r3, [r3, #8]
     b90:	cmp	r3, #0
     b94:	beq	bb0 <rb_dlinkDelete+0x98>
     b98:	ldr	r3, [fp, #-8]
     b9c:	ldr	r3, [r3, #8]
     ba0:	ldr	r2, [fp, #-8]
     ba4:	ldr	r2, [r2, #4]
     ba8:	str	r2, [r3, #4]
     bac:	b	bc0 <rb_dlinkDelete+0xa8>
     bb0:	ldr	r3, [fp, #-8]
     bb4:	ldr	r2, [r3, #4]
     bb8:	ldr	r3, [fp, #-12]
     bbc:	str	r2, [r3, #4]
     bc0:	ldr	r3, [fp, #-8]
     bc4:	ldr	r3, [r3, #4]
     bc8:	cmp	r3, #0
     bcc:	beq	be8 <rb_dlinkDelete+0xd0>
     bd0:	ldr	r3, [fp, #-8]
     bd4:	ldr	r3, [r3, #4]
     bd8:	ldr	r2, [fp, #-8]
     bdc:	ldr	r2, [r2, #8]
     be0:	str	r2, [r3, #8]
     be4:	b	bf8 <rb_dlinkDelete+0xe0>
     be8:	ldr	r3, [fp, #-8]
     bec:	ldr	r2, [r3, #8]
     bf0:	ldr	r3, [fp, #-12]
     bf4:	str	r2, [r3]
     bf8:	ldr	r3, [fp, #-8]
     bfc:	mov	r2, #0
     c00:	str	r2, [r3, #4]
     c04:	ldr	r3, [fp, #-8]
     c08:	ldr	r2, [r3, #4]
     c0c:	ldr	r3, [fp, #-8]
     c10:	str	r2, [r3, #8]
     c14:	ldr	r3, [fp, #-12]
     c18:	ldr	r3, [r3, #8]
     c1c:	sub	r2, r3, #1
     c20:	ldr	r3, [fp, #-12]
     c24:	str	r2, [r3, #8]
     c28:	nop	{0}
     c2c:	sub	sp, fp, #4
     c30:	ldr	fp, [sp]
     c34:	add	sp, sp, #4
     c38:	pop	{pc}		; (ldr pc, [sp], #4)
     c3c:	.word	0x00000890
     c40:	.word	0x00000784
     c44:	.word	0x000007a8
     c48:	.word	0x00000864
     c4c:	.word	0x00000758
     c50:	.word	0x00000788

00000c54 <rb_malloc>:
     c54:	str	fp, [sp, #-8]!
     c58:	str	lr, [sp, #4]
     c5c:	add	fp, sp, #4
     c60:	sub	sp, sp, #16
     c64:	str	r0, [fp, #-16]
     c68:	ldr	r1, [fp, #-16]
     c6c:	mov	r0, #1
     c70:	bl	774 <calloc@plt>
     c74:	mov	r3, r0
     c78:	str	r3, [fp, #-8]
     c7c:	ldr	r3, [fp, #-8]
     c80:	cmp	r3, #0
     c84:	moveq	r3, #1
     c88:	movne	r3, #0
     c8c:	uxtb	r3, r3
     c90:	cmp	r3, #0
     c94:	beq	c9c <rb_malloc+0x48>
     c98:	bl	7bc <rb_outofmemory@plt>
     c9c:	ldr	r3, [fp, #-8]
     ca0:	mov	r0, r3
     ca4:	sub	sp, fp, #4
     ca8:	ldr	fp, [sp]
     cac:	add	sp, sp, #4
     cb0:	pop	{pc}		; (ldr pc, [sp], #4)

00000cb4 <rb_free>:
     cb4:	str	fp, [sp, #-8]!
     cb8:	str	lr, [sp, #4]
     cbc:	add	fp, sp, #4
     cc0:	sub	sp, sp, #8
     cc4:	str	r0, [fp, #-8]
     cc8:	ldr	r3, [fp, #-8]
     ccc:	cmp	r3, #0
     cd0:	movne	r3, #1
     cd4:	moveq	r3, #0
     cd8:	uxtb	r3, r3
     cdc:	cmp	r3, #0
     ce0:	beq	cec <rb_free+0x38>
     ce4:	ldr	r0, [fp, #-8]
     ce8:	bl	7a4 <free@plt>
     cec:	nop	{0}
     cf0:	sub	sp, fp, #4
     cf4:	ldr	fp, [sp]
     cf8:	add	sp, sp, #4
     cfc:	pop	{pc}		; (ldr pc, [sp], #4)

00000d00 <create_aliases>:
     d00:	str	r4, [sp, #-12]!
     d04:	str	fp, [sp, #4]
     d08:	str	lr, [sp, #8]
     d0c:	add	fp, sp, #8
     d10:	sub	sp, sp, #28
     d14:	ldr	r4, [pc, #272]	; e2c <create_aliases+0x12c>
     d18:	add	r4, pc, r4
     d1c:	ldr	r3, [pc, #268]	; e30 <create_aliases+0x130>
     d20:	ldr	r3, [r4, r3]
     d24:	ldr	r3, [r3]
     d28:	sub	r2, fp, #32
     d2c:	mov	r1, r2
     d30:	mov	r0, r3
     d34:	bl	7e0 <rb_dictionary_foreach_start@plt>
     d38:	b	de8 <create_aliases+0xe8>
     d3c:	ldr	r3, [fp, #-16]
     d40:	ldr	r3, [r3]
     d44:	mov	r0, r3
     d48:	bl	81c <strlen@plt>
     d4c:	mov	r3, r0
     d50:	add	r3, r3, #69	; 0x45
     d54:	mov	r0, r3
     d58:	bl	c54 <rb_malloc>
     d5c:	str	r0, [fp, #-20]	; 0xffffffec
     d60:	ldr	r3, [fp, #-20]	; 0xffffffec
     d64:	add	r3, r3, #68	; 0x44
     d68:	str	r3, [fp, #-24]	; 0xffffffe8
     d6c:	ldr	r3, [fp, #-16]
     d70:	ldr	r3, [r3]
     d74:	mov	r1, r3
     d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d7c:	bl	7d4 <strcpy@plt>
     d80:	ldr	r3, [fp, #-20]	; 0xffffffec
     d84:	ldr	r2, [fp, #-24]	; 0xffffffe8
     d88:	str	r2, [r3]
     d8c:	ldr	r3, [fp, #-20]	; 0xffffffec
     d90:	add	r3, r3, #20
     d94:	mov	r2, #48	; 0x30
     d98:	ldr	r1, [pc, #148]	; e34 <create_aliases+0x134>
     d9c:	add	r1, pc, r1
     da0:	mov	r0, r3
     da4:	bl	7b0 <memcpy@plt>
     da8:	ldr	r0, [fp, #-20]	; 0xffffffec
     dac:	bl	870 <mod_add_cmd@plt>
     db0:	bl	804 <rb_make_rb_dlink_node@plt>
     db4:	mov	r1, r0
     db8:	ldr	r3, [pc, #120]	; e38 <create_aliases+0x138>
     dbc:	add	r3, pc, r3
     dc0:	mov	r2, r3
     dc4:	ldr	r0, [fp, #-20]	; 0xffffffec
     dc8:	bl	9b8 <rb_dlinkAdd>
     dcc:	ldr	r3, [pc, #92]	; e30 <create_aliases+0x130>
     dd0:	ldr	r3, [r4, r3]
     dd4:	ldr	r3, [r3]
     dd8:	sub	r2, fp, #32
     ddc:	mov	r1, r2
     de0:	mov	r0, r3
     de4:	bl	864 <rb_dictionary_foreach_next@plt>
     de8:	ldr	r3, [pc, #64]	; e30 <create_aliases+0x130>
     dec:	ldr	r3, [r4, r3]
     df0:	ldr	r3, [r3]
     df4:	sub	r2, fp, #32
     df8:	mov	r1, r2
     dfc:	mov	r0, r3
     e00:	bl	840 <rb_dictionary_foreach_cur@plt>
     e04:	str	r0, [fp, #-16]
     e08:	ldr	r3, [fp, #-16]
     e0c:	cmp	r3, #0
     e10:	bne	d3c <create_aliases+0x3c>
     e14:	nop	{0}
     e18:	sub	sp, fp, #8
     e1c:	ldr	r4, [sp]
     e20:	ldr	fp, [sp, #4]
     e24:	add	sp, sp, #8
     e28:	pop	{pc}		; (ldr pc, [sp], #4)
     e2c:	.word	0x000112e0
     e30:	.word	0x00000074
     e34:	.word	0x0001112c
     e38:	.word	0x00011308

00000e3c <destroy_aliases>:
     e3c:	str	fp, [sp, #-8]!
     e40:	str	lr, [sp, #4]
     e44:	add	fp, sp, #4
     e48:	sub	sp, sp, #8
     e4c:	ldr	r3, [pc, #176]	; f04 <destroy_aliases+0xc8>
     e50:	add	r3, pc, r3
     e54:	ldr	r3, [r3]
     e58:	str	r3, [fp, #-8]
     e5c:	ldr	r3, [fp, #-8]
     e60:	cmp	r3, #0
     e64:	beq	e74 <destroy_aliases+0x38>
     e68:	ldr	r3, [fp, #-8]
     e6c:	ldr	r3, [r3, #8]
     e70:	b	e78 <destroy_aliases+0x3c>
     e74:	mov	r3, #0
     e78:	str	r3, [fp, #-12]
     e7c:	b	ee4 <destroy_aliases+0xa8>
     e80:	ldr	r3, [fp, #-8]
     e84:	ldr	r3, [r3]
     e88:	mov	r0, r3
     e8c:	bl	780 <mod_del_cmd@plt>
     e90:	ldr	r3, [fp, #-8]
     e94:	ldr	r3, [r3]
     e98:	mov	r0, r3
     e9c:	bl	cb4 <rb_free>
     ea0:	ldr	r3, [pc, #96]	; f08 <destroy_aliases+0xcc>
     ea4:	add	r3, pc, r3
     ea8:	mov	r1, r3
     eac:	ldr	r0, [fp, #-8]
     eb0:	bl	b18 <rb_dlinkDelete>
     eb4:	ldr	r0, [fp, #-8]
     eb8:	bl	7c8 <rb_free_rb_dlink_node@plt>
     ebc:	ldr	r3, [fp, #-12]
     ec0:	str	r3, [fp, #-8]
     ec4:	ldr	r3, [fp, #-8]
     ec8:	cmp	r3, #0
     ecc:	beq	edc <destroy_aliases+0xa0>
     ed0:	ldr	r3, [fp, #-8]
     ed4:	ldr	r3, [r3, #8]
     ed8:	b	ee0 <destroy_aliases+0xa4>
     edc:	mov	r3, #0
     ee0:	str	r3, [fp, #-12]
     ee4:	ldr	r3, [fp, #-8]
     ee8:	cmp	r3, #0
     eec:	bne	e80 <destroy_aliases+0x44>
     ef0:	nop	{0}
     ef4:	sub	sp, fp, #4
     ef8:	ldr	fp, [sp]
     efc:	add	sp, sp, #4
     f00:	pop	{pc}		; (ldr pc, [sp], #4)
     f04:	.word	0x00011274
     f08:	.word	0x00011220

00000f0c <_modinit>:
     f0c:	str	fp, [sp, #-8]!
     f10:	str	lr, [sp, #4]
     f14:	add	fp, sp, #4
     f18:	bl	d00 <create_aliases>
     f1c:	mov	r3, #0
     f20:	mov	r0, r3
     f24:	sub	sp, fp, #4
     f28:	ldr	fp, [sp]
     f2c:	add	sp, sp, #4
     f30:	pop	{pc}		; (ldr pc, [sp], #4)

00000f34 <_moddeinit>:
     f34:	str	fp, [sp, #-8]!
     f38:	str	lr, [sp, #4]
     f3c:	add	fp, sp, #4
     f40:	bl	e3c <destroy_aliases>
     f44:	nop	{0}
     f48:	sub	sp, fp, #4
     f4c:	ldr	fp, [sp]
     f50:	add	sp, sp, #4
     f54:	pop	{pc}		; (ldr pc, [sp], #4)

00000f58 <reload_aliases>:
     f58:	str	fp, [sp, #-8]!
     f5c:	str	lr, [sp, #4]
     f60:	add	fp, sp, #4
     f64:	sub	sp, sp, #8
     f68:	str	r0, [fp, #-8]
     f6c:	bl	e3c <destroy_aliases>
     f70:	bl	d00 <create_aliases>
     f74:	mov	r3, #0
     f78:	mov	r0, r3
     f7c:	sub	sp, fp, #4
     f80:	ldr	fp, [sp]
     f84:	add	sp, sp, #4
     f88:	pop	{pc}		; (ldr pc, [sp], #4)

00000f8c <m_alias>:
     f8c:	str	r4, [sp, #-20]!	; 0xffffffec
     f90:	strd	r6, [sp, #4]
     f94:	str	fp, [sp, #12]
     f98:	str	lr, [sp, #16]
     f9c:	add	fp, sp, #16
     fa0:	sub	sp, sp, #44	; 0x2c
     fa4:	str	r0, [fp, #-40]	; 0xffffffd8
     fa8:	str	r1, [fp, #-44]	; 0xffffffd4
     fac:	str	r2, [fp, #-48]	; 0xffffffd0
     fb0:	str	r3, [fp, #-52]	; 0xffffffcc
     fb4:	ldr	r4, [pc, #760]	; 12b4 <m_alias+0x328>
     fb8:	add	r4, pc, r4
     fbc:	ldr	r3, [pc, #756]	; 12b8 <m_alias+0x32c>
     fc0:	ldr	r3, [r4, r3]
     fc4:	ldr	r2, [r3]
     fc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     fcc:	ldr	r3, [r3, #192]	; 0xc0
     fd0:	mov	r1, r3
     fd4:	mov	r0, r2
     fd8:	bl	87c <rb_dictionary_retrieve@plt>
     fdc:	str	r0, [fp, #-28]	; 0xffffffe4
     fe0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fe4:	cmp	r3, #0
     fe8:	bne	1044 <m_alias+0xb8>
     fec:	ldr	r3, [fp, #-44]	; 0xffffffd4
     ff0:	ldrh	r3, [r3, #80]	; 0x50
     ff4:	cmp	r3, #64	; 0x40
     ff8:	bne	1298 <m_alias+0x30c>
     ffc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1000:	ldr	r3, [r3, #24]
    1004:	cmp	r3, #0
    1008:	beq	1298 <m_alias+0x30c>
    100c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1010:	add	r2, r3, #88	; 0x58
    1014:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1018:	ldr	r3, [r3, #192]	; 0xc0
    101c:	str	r3, [sp]
    1020:	mov	r3, r2
    1024:	ldr	r2, [pc, #656]	; 12bc <m_alias+0x330>
    1028:	ldr	r2, [r4, r2]
    102c:	add	r2, r2, #88	; 0x58
    1030:	ldr	r1, [pc, #648]	; 12c0 <m_alias+0x334>
    1034:	add	r1, pc, r1
    1038:	ldr	r0, [fp, #-44]	; 0xffffffd4
    103c:	bl	798 <sendto_one@plt>
    1040:	b	1298 <m_alias+0x30c>
    1044:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1048:	ldrd	r2, [r3, #64]	; 0x40
    104c:	mov	r0, #256	; 0x100
    1050:	mov	r1, #0
    1054:	and	r6, r2, r0
    1058:	and	r7, r3, r1
    105c:	orrs	r3, r6, r7
    1060:	bne	1080 <m_alias+0xf4>
    1064:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1068:	ldr	r3, [r3, #432]	; 0x1b0
    106c:	ldr	r3, [r3, #116]	; 0x74
    1070:	cmp	r3, #20
    1074:	bls	1080 <m_alias+0xf4>
    1078:	ldr	r0, [fp, #-44]	; 0xffffffd4
    107c:	bl	858 <flood_endgrace@plt>
    1080:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1084:	ldr	r3, [r3, #4]
    1088:	mov	r1, #64	; 0x40
    108c:	mov	r0, r3
    1090:	bl	828 <strchr@plt>
    1094:	str	r0, [fp, #-32]	; 0xffffffe0
    1098:	ldr	r3, [fp, #-32]	; 0xffffffe0
    109c:	cmp	r3, #0
    10a0:	beq	10e4 <m_alias+0x158>
    10a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    10a8:	add	r3, r3, #1
    10ac:	mov	r1, r3
    10b0:	mov	r0, #0
    10b4:	bl	834 <find_server@plt>
    10b8:	str	r0, [fp, #-24]	; 0xffffffe8
    10bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10c0:	cmp	r3, #0
    10c4:	beq	1120 <m_alias+0x194>
    10c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10cc:	ldrh	r3, [r3, #80]	; 0x50
    10d0:	cmp	r3, #4
    10d4:	bne	1120 <m_alias+0x194>
    10d8:	mov	r3, #0
    10dc:	str	r3, [fp, #-24]	; 0xffffffe8
    10e0:	b	1120 <m_alias+0x194>
    10e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10e8:	ldr	r3, [r3, #4]
    10ec:	mov	r0, r3
    10f0:	bl	84c <find_named_person@plt>
    10f4:	str	r0, [fp, #-24]	; 0xffffffe8
    10f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10fc:	cmp	r3, #0
    1100:	beq	1120 <m_alias+0x194>
    1104:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1108:	ldr	r3, [r3, #56]	; 0x38
    110c:	and	r3, r3, #64	; 0x40
    1110:	cmp	r3, #0
    1114:	bne	1120 <m_alias+0x194>
    1118:	mov	r3, #0
    111c:	str	r3, [fp, #-24]	; 0xffffffe8
    1120:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1124:	cmp	r3, #0
    1128:	bne	114c <m_alias+0x1c0>
    112c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1130:	ldr	r3, [r3, #4]
    1134:	ldr	r2, [pc, #392]	; 12c4 <m_alias+0x338>
    1138:	add	r2, pc, r2
    113c:	mov	r1, #440	; 0x1b8
    1140:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1144:	bl	810 <sendto_one_numeric@plt>
    1148:	b	129c <m_alias+0x310>
    114c:	mov	r1, #1
    1150:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1154:	bl	7ec <msgbuf_reconstruct_tail@plt>
    1158:	ldr	r3, [fp, #4]
    115c:	add	r3, r3, #4
    1160:	ldr	r3, [r3]
    1164:	cmp	r3, #0
    1168:	beq	1184 <m_alias+0x1f8>
    116c:	ldr	r3, [fp, #4]
    1170:	add	r3, r3, #4
    1174:	ldr	r3, [r3]
    1178:	ldrb	r3, [r3]
    117c:	cmp	r3, #0
    1180:	bne	11ac <m_alias+0x220>
    1184:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1188:	add	r3, r3, #88	; 0x58
    118c:	ldr	r2, [pc, #296]	; 12bc <m_alias+0x330>
    1190:	ldr	r2, [r4, r2]
    1194:	add	r2, r2, #88	; 0x58
    1198:	ldr	r1, [pc, #296]	; 12c8 <m_alias+0x33c>
    119c:	add	r1, pc, r1
    11a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    11a4:	bl	798 <sendto_one@plt>
    11a8:	b	129c <m_alias+0x310>
    11ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11b0:	ldr	r3, [r3, #36]	; 0x24
    11b4:	ldrh	r3, [r3, #80]	; 0x50
    11b8:	cmp	r3, #32
    11bc:	bne	11fc <m_alias+0x270>
    11c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11c4:	ldr	r3, [r3, #36]	; 0x24
    11c8:	ldrb	r3, [r3, #396]	; 0x18c
    11cc:	cmp	r3, #0
    11d0:	beq	11fc <m_alias+0x270>
    11d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    11d8:	ldrb	r3, [r3, #396]	; 0x18c
    11dc:	cmp	r3, #0
    11e0:	beq	11f0 <m_alias+0x264>
    11e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    11e8:	add	r2, r3, #396	; 0x18c
    11ec:	b	1204 <m_alias+0x278>
    11f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    11f4:	add	r2, r3, #88	; 0x58
    11f8:	b	1204 <m_alias+0x278>
    11fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1200:	add	r2, r3, #88	; 0x58
    1204:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1208:	cmp	r3, #0
    120c:	beq	121c <m_alias+0x290>
    1210:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1214:	ldr	r3, [r3, #4]
    1218:	b	1274 <m_alias+0x2e8>
    121c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1220:	ldr	r3, [r3, #36]	; 0x24
    1224:	ldrh	r3, [r3, #80]	; 0x50
    1228:	cmp	r3, #32
    122c:	bne	126c <m_alias+0x2e0>
    1230:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1234:	ldr	r3, [r3, #36]	; 0x24
    1238:	ldrb	r3, [r3, #396]	; 0x18c
    123c:	cmp	r3, #0
    1240:	beq	126c <m_alias+0x2e0>
    1244:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1248:	ldrb	r3, [r3, #396]	; 0x18c
    124c:	cmp	r3, #0
    1250:	beq	1260 <m_alias+0x2d4>
    1254:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1258:	add	r3, r3, #396	; 0x18c
    125c:	b	1274 <m_alias+0x2e8>
    1260:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1264:	add	r3, r3, #88	; 0x58
    1268:	b	1274 <m_alias+0x2e8>
    126c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1270:	add	r3, r3, #88	; 0x58
    1274:	ldr	r1, [fp, #4]
    1278:	add	r1, r1, #4
    127c:	ldr	r1, [r1]
    1280:	str	r1, [sp]
    1284:	ldr	r1, [pc, #64]	; 12cc <m_alias+0x340>
    1288:	add	r1, pc, r1
    128c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1290:	bl	798 <sendto_one@plt>
    1294:	b	129c <m_alias+0x310>
    1298:	nop	{0}
    129c:	sub	sp, fp, #16
    12a0:	ldr	r4, [sp]
    12a4:	ldrd	r6, [sp, #4]
    12a8:	ldr	fp, [sp, #12]
    12ac:	add	sp, sp, #16
    12b0:	pop	{pc}		; (ldr pc, [sp], #4)
    12b4:	.word	0x00011040
    12b8:	.word	0x00000074
    12bc:	.word	0x00000080
    12c0:	.word	0x00000318
    12c4:	.word	0x00000234
    12c8:	.word	0x000001f8
    12cc:	.word	0x00000128

Disassembly of section .fini:

000012d0 <_fini>:
    12d0:	push	{r3, lr}
    12d4:	pop	{r3, pc}
