
../repos/coreutils/src/timeout:     file format elf32-littlearm


Disassembly of section .init:

0001101c <.init>:
   1101c:	push	{r3, lr}
   11020:	bl	11aa4 <__snprintf_chk@plt+0x738>
   11024:	pop	{r3, pc}

Disassembly of section .plt:

00011028 <calloc@plt-0x14>:
   11028:	push	{lr}		; (str lr, [sp, #-4]!)
   1102c:	ldr	lr, [pc, #4]	; 11038 <calloc@plt-0x4>
   11030:	add	lr, pc, lr
   11034:	ldr	pc, [lr, #8]!
   11038:	andeq	r8, r1, r8, asr #31

0001103c <calloc@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #24, 20	; 0x18000
   11044:	ldr	pc, [ip, #4040]!	; 0xfc8

00011048 <fputs_unlocked@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #24, 20	; 0x18000
   11050:	ldr	pc, [ip, #4032]!	; 0xfc0

00011054 <raise@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #24, 20	; 0x18000
   1105c:	ldr	pc, [ip, #4024]!	; 0xfb8

00011060 <strcmp@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #24, 20	; 0x18000
   11068:	ldr	pc, [ip, #4016]!	; 0xfb0

0001106c <strtol@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #24, 20	; 0x18000
   11074:	ldr	pc, [ip, #4008]!	; 0xfa8

00011078 <fflush@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #24, 20	; 0x18000
   11080:	ldr	pc, [ip, #4000]!	; 0xfa0

00011084 <sigprocmask@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #24, 20	; 0x18000
   1108c:	ldr	pc, [ip, #3992]!	; 0xf98

00011090 <free@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #24, 20	; 0x18000
   11098:	ldr	pc, [ip, #3984]!	; 0xf90

0001109c <_exit@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #24, 20	; 0x18000
   110a4:	ldr	pc, [ip, #3976]!	; 0xf88

000110a8 <memcpy@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #24, 20	; 0x18000
   110b0:	ldr	pc, [ip, #3968]!	; 0xf80

000110b4 <execvp@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #24, 20	; 0x18000
   110bc:	ldr	pc, [ip, #3960]!	; 0xf78

000110c0 <mbsinit@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #24, 20	; 0x18000
   110c8:	ldr	pc, [ip, #3952]!	; 0xf70

000110cc <signal@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #24, 20	; 0x18000
   110d4:	ldr	pc, [ip, #3944]!	; 0xf68

000110d8 <memcmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #24, 20	; 0x18000
   110e0:	ldr	pc, [ip, #3936]!	; 0xf60

000110e4 <fputc_unlocked@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #24, 20	; 0x18000
   110ec:	ldr	pc, [ip, #3928]!	; 0xf58

000110f0 <dcgettext@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #24, 20	; 0x18000
   110f8:	ldr	pc, [ip, #3920]!	; 0xf50

000110fc <alarm@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #24, 20	; 0x18000
   11104:	ldr	pc, [ip, #3912]!	; 0xf48

00011108 <realloc@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #24, 20	; 0x18000
   11110:	ldr	pc, [ip, #3904]!	; 0xf40

00011114 <timer_create@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #24, 20	; 0x18000
   1111c:	ldr	pc, [ip, #3896]!	; 0xf38

00011120 <textdomain@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #24, 20	; 0x18000
   11128:	ldr	pc, [ip, #3888]!	; 0xf30

0001112c <iswprint@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #24, 20	; 0x18000
   11134:	ldr	pc, [ip, #3880]!	; 0xf28

00011138 <timer_settime@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #24, 20	; 0x18000
   11140:	ldr	pc, [ip, #3872]!	; 0xf20

00011144 <sigaction@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #24, 20	; 0x18000
   1114c:	ldr	pc, [ip, #3864]!	; 0xf18

00011150 <fwrite@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #24, 20	; 0x18000
   11158:	ldr	pc, [ip, #3856]!	; 0xf10

0001115c <lseek64@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #24, 20	; 0x18000
   11164:	ldr	pc, [ip, #3848]!	; 0xf08

00011168 <waitpid@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #24, 20	; 0x18000
   11170:	ldr	pc, [ip, #3840]!	; 0xf00

00011174 <__ctype_get_mb_cur_max@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #24, 20	; 0x18000
   1117c:	ldr	pc, [ip, #3832]!	; 0xef8

00011180 <strcpy@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #24, 20	; 0x18000
   11188:	ldr	pc, [ip, #3824]!	; 0xef0

0001118c <__fpending@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #24, 20	; 0x18000
   11194:	ldr	pc, [ip, #3816]!	; 0xee8

00011198 <mbrtowc@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #24, 20	; 0x18000
   111a0:	ldr	pc, [ip, #3808]!	; 0xee0

000111a4 <error@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #24, 20	; 0x18000
   111ac:	ldr	pc, [ip, #3800]!	; 0xed8

000111b0 <timer_delete@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #24, 20	; 0x18000
   111b8:	ldr	pc, [ip, #3792]!	; 0xed0

000111bc <malloc@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #24, 20	; 0x18000
   111c4:	ldr	pc, [ip, #3784]!	; 0xec8

000111c8 <sigaddset@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #24, 20	; 0x18000
   111d0:	ldr	pc, [ip, #3776]!	; 0xec0

000111d4 <__libc_start_main@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #24, 20	; 0x18000
   111dc:	ldr	pc, [ip, #3768]!	; 0xeb8

000111e0 <__freading@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #24, 20	; 0x18000
   111e8:	ldr	pc, [ip, #3760]!	; 0xeb0

000111ec <__gmon_start__@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #24, 20	; 0x18000
   111f4:	ldr	pc, [ip, #3752]!	; 0xea8

000111f8 <getopt_long@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #24, 20	; 0x18000
   11200:	ldr	pc, [ip, #3744]!	; 0xea0

00011204 <kill@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #24, 20	; 0x18000
   1120c:	ldr	pc, [ip, #3736]!	; 0xe98

00011210 <__ctype_b_loc@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #24, 20	; 0x18000
   11218:	ldr	pc, [ip, #3728]!	; 0xe90

0001121c <exit@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #24, 20	; 0x18000
   11224:	ldr	pc, [ip, #3720]!	; 0xe88

00011228 <strlen@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #24, 20	; 0x18000
   11230:	ldr	pc, [ip, #3712]!	; 0xe80

00011234 <__libc_current_sigrtmax@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #24, 20	; 0x18000
   1123c:	ldr	pc, [ip, #3704]!	; 0xe78

00011240 <strchr@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #24, 20	; 0x18000
   11248:	ldr	pc, [ip, #3696]!	; 0xe70

0001124c <__errno_location@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #24, 20	; 0x18000
   11254:	ldr	pc, [ip, #3688]!	; 0xe68

00011258 <__sprintf_chk@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #24, 20	; 0x18000
   11260:	ldr	pc, [ip, #3680]!	; 0xe60

00011264 <__cxa_atexit@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #24, 20	; 0x18000
   1126c:	ldr	pc, [ip, #3672]!	; 0xe58

00011270 <memset@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #24, 20	; 0x18000
   11278:	ldr	pc, [ip, #3664]!	; 0xe50

0001127c <sigsuspend@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #24, 20	; 0x18000
   11284:	ldr	pc, [ip, #3656]!	; 0xe48

00011288 <__printf_chk@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #24, 20	; 0x18000
   11290:	ldr	pc, [ip, #3648]!	; 0xe40

00011294 <prctl@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #24, 20	; 0x18000
   1129c:	ldr	pc, [ip, #3640]!	; 0xe38

000112a0 <strtod@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #24, 20	; 0x18000
   112a8:	ldr	pc, [ip, #3632]!	; 0xe30

000112ac <fileno@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #24, 20	; 0x18000
   112b4:	ldr	pc, [ip, #3624]!	; 0xe28

000112b8 <__fprintf_chk@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #24, 20	; 0x18000
   112c0:	ldr	pc, [ip, #3616]!	; 0xe20

000112c4 <fclose@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #24, 20	; 0x18000
   112cc:	ldr	pc, [ip, #3608]!	; 0xe18

000112d0 <fseeko64@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #24, 20	; 0x18000
   112d8:	ldr	pc, [ip, #3600]!	; 0xe10

000112dc <strtod_l@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #24, 20	; 0x18000
   112e4:	ldr	pc, [ip, #3592]!	; 0xe08

000112e8 <setlocale@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #24, 20	; 0x18000
   112f0:	ldr	pc, [ip, #3584]!	; 0xe00

000112f4 <sigemptyset@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #24, 20	; 0x18000
   112fc:	ldr	pc, [ip, #3576]!	; 0xdf8

00011300 <fork@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #24, 20	; 0x18000
   11308:	ldr	pc, [ip, #3568]!	; 0xdf0

0001130c <strrchr@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #24, 20	; 0x18000
   11314:	ldr	pc, [ip, #3560]!	; 0xde8

00011318 <nl_langinfo@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #24, 20	; 0x18000
   11320:	ldr	pc, [ip, #3552]!	; 0xde0

00011324 <newlocale@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #24, 20	; 0x18000
   1132c:	ldr	pc, [ip, #3544]!	; 0xdd8

00011330 <setpgid@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #24, 20	; 0x18000
   11338:	ldr	pc, [ip, #3536]!	; 0xdd0

0001133c <bindtextdomain@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #24, 20	; 0x18000
   11344:	ldr	pc, [ip, #3528]!	; 0xdc8

00011348 <__libc_current_sigrtmin@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #24, 20	; 0x18000
   11350:	ldr	pc, [ip, #3520]!	; 0xdc0

00011354 <strncmp@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #24, 20	; 0x18000
   1135c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011360 <abort@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #24, 20	; 0x18000
   11368:	ldr	pc, [ip, #3504]!	; 0xdb0

0001136c <__snprintf_chk@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #24, 20	; 0x18000
   11374:	ldr	pc, [ip, #3496]!	; 0xda8

Disassembly of section .text:

00011378 <.text>:
   11378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1137c:	vpush	{d8}
   11380:	mov	r6, r0
   11384:	ldr	r0, [r1]
   11388:	mov	r5, r1
   1138c:	sub	sp, sp, #308	; 0x134
   11390:	bl	12764 <__snprintf_chk@plt+0x13f8>
   11394:	ldr	r1, [pc, #1628]	; 119f8 <__snprintf_chk@plt+0x68c>
   11398:	mov	r0, #6
   1139c:	bl	112e8 <setlocale@plt>
   113a0:	ldr	r1, [pc, #1620]	; 119fc <__snprintf_chk@plt+0x690>
   113a4:	ldr	r0, [pc, #1620]	; 11a00 <__snprintf_chk@plt+0x694>
   113a8:	bl	1133c <bindtextdomain@plt>
   113ac:	ldr	r0, [pc, #1612]	; 11a00 <__snprintf_chk@plt+0x694>
   113b0:	bl	11120 <textdomain@plt>
   113b4:	ldr	r3, [pc, #1608]	; 11a04 <__snprintf_chk@plt+0x698>
   113b8:	mov	r2, #125	; 0x7d
   113bc:	ldr	r0, [pc, #1604]	; 11a08 <__snprintf_chk@plt+0x69c>
   113c0:	str	r2, [r3]
   113c4:	bl	18578 <__snprintf_chk@plt+0x720c>
   113c8:	ldr	r8, [pc, #1596]	; 11a0c <__snprintf_chk@plt+0x6a0>
   113cc:	ldr	r7, [pc, #1596]	; 11a10 <__snprintf_chk@plt+0x6a4>
   113d0:	ldr	sl, [pc, #1596]	; 11a14 <__snprintf_chk@plt+0x6a8>
   113d4:	ldr	fp, [pc, #1596]	; 11a18 <__snprintf_chk@plt+0x6ac>
   113d8:	ldr	r9, [pc, #1596]	; 11a1c <__snprintf_chk@plt+0x6b0>
   113dc:	mov	r4, #0
   113e0:	str	r4, [sp]
   113e4:	mov	r3, r8
   113e8:	mov	r2, r7
   113ec:	mov	r1, r5
   113f0:	mov	r0, r6
   113f4:	bl	111f8 <getopt_long@plt>
   113f8:	cmn	r0, #1
   113fc:	beq	114d0 <__snprintf_chk@plt+0x164>
   11400:	cmp	r0, #115	; 0x73
   11404:	beq	114b4 <__snprintf_chk@plt+0x148>
   11408:	bgt	11454 <__snprintf_chk@plt+0xe8>
   1140c:	cmn	r0, #2
   11410:	beq	11494 <__snprintf_chk@plt+0x128>
   11414:	cmp	r0, #107	; 0x6b
   11418:	beq	11484 <__snprintf_chk@plt+0x118>
   1141c:	cmn	r0, #3
   11420:	bne	11470 <__snprintf_chk@plt+0x104>
   11424:	ldr	r1, [pc, #1524]	; 11a20 <__snprintf_chk@plt+0x6b4>
   11428:	ldr	r3, [pc, #1524]	; 11a24 <__snprintf_chk@plt+0x6b8>
   1142c:	ldr	r2, [pc, #1524]	; 11a28 <__snprintf_chk@plt+0x6bc>
   11430:	str	r4, [sp, #4]
   11434:	ldr	r0, [r1]
   11438:	ldr	r3, [r3]
   1143c:	ldr	r1, [pc, #1512]	; 11a2c <__snprintf_chk@plt+0x6c0>
   11440:	str	r2, [sp]
   11444:	ldr	r2, [pc, #1508]	; 11a30 <__snprintf_chk@plt+0x6c4>
   11448:	bl	17270 <__snprintf_chk@plt+0x5f04>
   1144c:	mov	r0, r4
   11450:	bl	1121c <exit@plt>
   11454:	cmp	r0, #256	; 0x100
   11458:	beq	1149c <__snprintf_chk@plt+0x130>
   1145c:	ldr	r3, [pc, #1488]	; 11a34 <__snprintf_chk@plt+0x6c8>
   11460:	cmp	r0, r3
   11464:	beq	11478 <__snprintf_chk@plt+0x10c>
   11468:	cmp	r0, #118	; 0x76
   1146c:	beq	114a8 <__snprintf_chk@plt+0x13c>
   11470:	mov	r0, #125	; 0x7d
   11474:	bl	11e58 <__snprintf_chk@plt+0xaec>
   11478:	mov	r3, #1
   1147c:	strb	r3, [r9, #25]
   11480:	b	113dc <__snprintf_chk@plt+0x70>
   11484:	ldr	r0, [sl]
   11488:	bl	121cc <__snprintf_chk@plt+0xe60>
   1148c:	vstr	d0, [r9, #8]
   11490:	b	113dc <__snprintf_chk@plt+0x70>
   11494:	mov	r0, r4
   11498:	bl	11e58 <__snprintf_chk@plt+0xaec>
   1149c:	mov	r3, #1
   114a0:	strb	r3, [r9, #24]
   114a4:	b	113dc <__snprintf_chk@plt+0x70>
   114a8:	mov	r3, #1
   114ac:	strb	r3, [r9, #16]
   114b0:	b	113dc <__snprintf_chk@plt+0x70>
   114b4:	add	r1, sp, #16
   114b8:	ldr	r0, [sl]
   114bc:	bl	12320 <__snprintf_chk@plt+0xfb4>
   114c0:	cmn	r0, #1
   114c4:	str	r0, [fp]
   114c8:	bne	113dc <__snprintf_chk@plt+0x70>
   114cc:	b	11470 <__snprintf_chk@plt+0x104>
   114d0:	ldr	r4, [pc, #1376]	; 11a38 <__snprintf_chk@plt+0x6cc>
   114d4:	ldr	r3, [r4]
   114d8:	sub	r6, r6, r3
   114dc:	cmp	r6, #1
   114e0:	ble	11470 <__snprintf_chk@plt+0x104>
   114e4:	add	r2, r3, #1
   114e8:	ldr	r0, [r5, r3, lsl #2]
   114ec:	str	r2, [r4]
   114f0:	bl	121cc <__snprintf_chk@plt+0xe60>
   114f4:	ldr	r6, [pc, #1312]	; 11a1c <__snprintf_chk@plt+0x6b0>
   114f8:	ldr	r4, [r4]
   114fc:	ldrb	r1, [r6, #24]
   11500:	ldr	r3, [r5, r4, lsl #2]
   11504:	add	sl, r5, r4, lsl #2
   11508:	cmp	r1, #0
   1150c:	str	r3, [r6, #20]
   11510:	vmov.f64	d8, d0
   11514:	beq	11674 <__snprintf_chk@plt+0x308>
   11518:	ldr	r9, [pc, #1272]	; 11a18 <__snprintf_chk@plt+0x6ac>
   1151c:	add	r8, sp, #168	; 0xa8
   11520:	mov	r0, r8
   11524:	ldr	fp, [r9]
   11528:	bl	112f4 <sigemptyset@plt>
   1152c:	ldr	r3, [pc, #1288]	; 11a3c <__snprintf_chk@plt+0x6d0>
   11530:	mov	r7, #268435456	; 0x10000000
   11534:	add	r1, sp, #164	; 0xa4
   11538:	mov	r2, #0
   1153c:	mov	r0, #14
   11540:	str	r3, [sp, #164]	; 0xa4
   11544:	str	r7, [sp, #296]	; 0x128
   11548:	bl	11144 <sigaction@plt>
   1154c:	add	r1, sp, #164	; 0xa4
   11550:	mov	r2, #0
   11554:	mov	r0, #2
   11558:	bl	11144 <sigaction@plt>
   1155c:	add	r1, sp, #164	; 0xa4
   11560:	mov	r2, #0
   11564:	mov	r0, #3
   11568:	bl	11144 <sigaction@plt>
   1156c:	add	r1, sp, #164	; 0xa4
   11570:	mov	r2, #0
   11574:	mov	r0, #1
   11578:	bl	11144 <sigaction@plt>
   1157c:	add	r1, sp, #164	; 0xa4
   11580:	mov	r2, #0
   11584:	mov	r0, #15
   11588:	bl	11144 <sigaction@plt>
   1158c:	mov	r2, #0
   11590:	add	r1, sp, #164	; 0xa4
   11594:	mov	r0, fp
   11598:	bl	11144 <sigaction@plt>
   1159c:	mov	r1, #1
   115a0:	mov	r0, #21
   115a4:	bl	110cc <signal@plt>
   115a8:	mov	r1, #1
   115ac:	mov	r0, #22
   115b0:	bl	110cc <signal@plt>
   115b4:	mov	r0, r8
   115b8:	bl	112f4 <sigemptyset@plt>
   115bc:	ldr	r3, [pc, #1148]	; 11a40 <__snprintf_chk@plt+0x6d4>
   115c0:	add	r1, sp, #164	; 0xa4
   115c4:	mov	r2, #0
   115c8:	mov	r0, #17
   115cc:	str	r3, [sp, #164]	; 0xa4
   115d0:	str	r7, [sp, #296]	; 0x128
   115d4:	bl	11144 <sigaction@plt>
   115d8:	mov	r0, #17
   115dc:	bl	11b94 <__snprintf_chk@plt+0x828>
   115e0:	bl	11300 <fork@plt>
   115e4:	cmn	r0, #1
   115e8:	mov	r7, r0
   115ec:	str	r0, [r6, #4]
   115f0:	beq	11680 <__snprintf_chk@plt+0x314>
   115f4:	cmp	r0, #0
   115f8:	bne	116b0 <__snprintf_chk@plt+0x344>
   115fc:	mov	r1, r0
   11600:	mov	r0, #21
   11604:	bl	110cc <signal@plt>
   11608:	mov	r1, r7
   1160c:	mov	r0, #22
   11610:	bl	110cc <signal@plt>
   11614:	mov	r1, sl
   11618:	ldr	r0, [r5, r4, lsl #2]
   1161c:	bl	110b4 <execvp@plt>
   11620:	bl	1124c <__errno_location@plt>
   11624:	mov	r2, #5
   11628:	ldr	r1, [pc, #1044]	; 11a44 <__snprintf_chk@plt+0x6d8>
   1162c:	ldr	r4, [r0]
   11630:	mov	r0, r7
   11634:	bl	110f0 <dcgettext@plt>
   11638:	mov	r5, r0
   1163c:	ldr	r0, [r6, #20]
   11640:	bl	16630 <__snprintf_chk@plt+0x52c4>
   11644:	mov	r1, r4
   11648:	cmp	r4, #2
   1164c:	mov	r2, r5
   11650:	moveq	r4, #127	; 0x7f
   11654:	movne	r4, #126	; 0x7e
   11658:	mov	r3, r0
   1165c:	mov	r0, r7
   11660:	bl	111a4 <error@plt>
   11664:	mov	r0, r4
   11668:	add	sp, sp, #308	; 0x134
   1166c:	vpop	{d8}
   11670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11674:	mov	r0, r1
   11678:	bl	11330 <setpgid@plt>
   1167c:	b	11518 <__snprintf_chk@plt+0x1ac>
   11680:	bl	1124c <__errno_location@plt>
   11684:	mov	r2, #5
   11688:	ldr	r1, [pc, #952]	; 11a48 <__snprintf_chk@plt+0x6dc>
   1168c:	mov	r4, #125	; 0x7d
   11690:	ldr	r5, [r0]
   11694:	mov	r0, #0
   11698:	bl	110f0 <dcgettext@plt>
   1169c:	mov	r1, r5
   116a0:	mov	r2, r0
   116a4:	mov	r0, #0
   116a8:	bl	111a4 <error@plt>
   116ac:	b	11664 <__snprintf_chk@plt+0x2f8>
   116b0:	mov	r0, #14
   116b4:	add	r4, sp, #36	; 0x24
   116b8:	bl	11b94 <__snprintf_chk@plt+0x828>
   116bc:	mov	r0, r4
   116c0:	vmov.f64	d0, d8
   116c4:	bl	12640 <__snprintf_chk@plt+0x12d4>
   116c8:	ldm	r4, {r0, r1}
   116cc:	add	r3, sp, #172	; 0xac
   116d0:	mov	r5, #0
   116d4:	stm	r3, {r0, r1}
   116d8:	add	r2, sp, #12
   116dc:	mov	r1, r5
   116e0:	mov	r0, r5
   116e4:	str	r5, [sp, #164]	; 0xa4
   116e8:	str	r5, [sp, #168]	; 0xa8
   116ec:	bl	11114 <timer_create@plt>
   116f0:	subs	r7, r0, #0
   116f4:	beq	118b8 <__snprintf_chk@plt+0x54c>
   116f8:	bl	1124c <__errno_location@plt>
   116fc:	ldr	r7, [r0]
   11700:	cmp	r7, #38	; 0x26
   11704:	beq	11728 <__snprintf_chk@plt+0x3bc>
   11708:	mov	r2, #5
   1170c:	ldr	r1, [pc, #824]	; 11a4c <__snprintf_chk@plt+0x6e0>
   11710:	mov	r0, r5
   11714:	bl	110f0 <dcgettext@plt>
   11718:	mov	r1, r7
   1171c:	mov	r2, r0
   11720:	mov	r0, r5
   11724:	bl	111a4 <error@plt>
   11728:	vldr	d7, [pc, #704]	; 119f0 <__snprintf_chk@plt+0x684>
   1172c:	vcmpe.f64	d8, d7
   11730:	vmrs	APSR_nzcv, fpscr
   11734:	mvnge	r0, #0
   11738:	bge	1175c <__snprintf_chk@plt+0x3f0>
   1173c:	vcvt.u32.f64	s15, d8
   11740:	vcvt.f64.u32	d6, s15
   11744:	vmov	r3, s15
   11748:	vcmpe.f64	d8, d6
   1174c:	vmrs	APSR_nzcv, fpscr
   11750:	movgt	r0, #1
   11754:	movle	r0, #0
   11758:	add	r0, r0, r3
   1175c:	bl	110fc <alarm@plt>
   11760:	add	r0, sp, #164	; 0xa4
   11764:	ldr	r5, [r9]
   11768:	bl	112f4 <sigemptyset@plt>
   1176c:	mov	r1, #14
   11770:	add	r0, sp, #164	; 0xa4
   11774:	bl	111c8 <sigaddset@plt>
   11778:	mov	r1, #2
   1177c:	add	r0, sp, #164	; 0xa4
   11780:	bl	111c8 <sigaddset@plt>
   11784:	mov	r1, #3
   11788:	add	r0, sp, #164	; 0xa4
   1178c:	bl	111c8 <sigaddset@plt>
   11790:	mov	r1, #1
   11794:	add	r0, sp, #164	; 0xa4
   11798:	bl	111c8 <sigaddset@plt>
   1179c:	mov	r1, #15
   117a0:	add	r0, sp, #164	; 0xa4
   117a4:	bl	111c8 <sigaddset@plt>
   117a8:	mov	r1, r5
   117ac:	add	r0, sp, #164	; 0xa4
   117b0:	bl	111c8 <sigaddset@plt>
   117b4:	mov	r1, #17
   117b8:	add	r0, sp, #164	; 0xa4
   117bc:	bl	111c8 <sigaddset@plt>
   117c0:	mov	r2, r4
   117c4:	add	r1, sp, #164	; 0xa4
   117c8:	mov	r0, #0
   117cc:	bl	11084 <sigprocmask@plt>
   117d0:	cmp	r0, #0
   117d4:	beq	11800 <__snprintf_chk@plt+0x494>
   117d8:	bl	1124c <__errno_location@plt>
   117dc:	mov	r2, #5
   117e0:	ldr	r1, [pc, #616]	; 11a50 <__snprintf_chk@plt+0x6e4>
   117e4:	ldr	r5, [r0]
   117e8:	mov	r0, #0
   117ec:	bl	110f0 <dcgettext@plt>
   117f0:	mov	r1, r5
   117f4:	mov	r2, r0
   117f8:	mov	r0, #0
   117fc:	bl	111a4 <error@plt>
   11800:	mov	r5, #1
   11804:	b	11810 <__snprintf_chk@plt+0x4a4>
   11808:	mov	r0, r4
   1180c:	bl	1127c <sigsuspend@plt>
   11810:	mov	r2, r5
   11814:	add	r1, sp, #164	; 0xa4
   11818:	ldr	r0, [r6, #4]
   1181c:	bl	11168 <waitpid@plt>
   11820:	cmp	r0, #0
   11824:	beq	11808 <__snprintf_chk@plt+0x49c>
   11828:	blt	11908 <__snprintf_chk@plt+0x59c>
   1182c:	ldr	r3, [sp, #164]	; 0xa4
   11830:	ands	r4, r3, #127	; 0x7f
   11834:	bne	11868 <__snprintf_chk@plt+0x4fc>
   11838:	asr	r3, r3, #8
   1183c:	uxtb	r3, r3
   11840:	str	r3, [sp, #164]	; 0xa4
   11844:	ldr	r3, [r6]
   11848:	cmp	r3, #0
   1184c:	beq	11860 <__snprintf_chk@plt+0x4f4>
   11850:	ldrb	r3, [r6, #25]
   11854:	cmp	r3, #0
   11858:	moveq	r3, #124	; 0x7c
   1185c:	streq	r3, [sp, #164]	; 0xa4
   11860:	ldr	r4, [sp, #164]	; 0xa4
   11864:	b	11664 <__snprintf_chk@plt+0x2f8>
   11868:	add	r2, r4, #1
   1186c:	sxtb	r2, r2
   11870:	cmp	r2, #1
   11874:	ble	11990 <__snprintf_chk@plt+0x624>
   11878:	tst	r3, #128	; 0x80
   1187c:	bne	1196c <__snprintf_chk@plt+0x600>
   11880:	ldr	r5, [r6]
   11884:	cmp	r5, #0
   11888:	beq	1193c <__snprintf_chk@plt+0x5d0>
   1188c:	ldr	r3, [r6]
   11890:	adds	r3, r3, #0
   11894:	movne	r3, #1
   11898:	cmp	r4, #9
   1189c:	movne	r3, #0
   118a0:	cmp	r3, #0
   118a4:	movne	r3, #1
   118a8:	add	r4, r4, #128	; 0x80
   118ac:	strbne	r3, [r6, #25]
   118b0:	str	r4, [sp, #164]	; 0xa4
   118b4:	b	11844 <__snprintf_chk@plt+0x4d8>
   118b8:	mov	r3, r7
   118bc:	add	r2, sp, #164	; 0xa4
   118c0:	mov	r1, r7
   118c4:	ldr	r0, [sp, #12]
   118c8:	bl	11138 <timer_settime@plt>
   118cc:	cmp	r0, r5
   118d0:	beq	11760 <__snprintf_chk@plt+0x3f4>
   118d4:	bl	1124c <__errno_location@plt>
   118d8:	mov	r2, #5
   118dc:	ldr	r1, [pc, #368]	; 11a54 <__snprintf_chk@plt+0x6e8>
   118e0:	ldr	r5, [r0]
   118e4:	mov	r0, r7
   118e8:	bl	110f0 <dcgettext@plt>
   118ec:	mov	r1, r5
   118f0:	mov	r2, r0
   118f4:	mov	r0, r7
   118f8:	bl	111a4 <error@plt>
   118fc:	ldr	r0, [sp, #12]
   11900:	bl	111b0 <timer_delete@plt>
   11904:	b	11728 <__snprintf_chk@plt+0x3bc>
   11908:	bl	1124c <__errno_location@plt>
   1190c:	mov	r2, #5
   11910:	ldr	r1, [pc, #320]	; 11a58 <__snprintf_chk@plt+0x6ec>
   11914:	ldr	r4, [r0]
   11918:	mov	r0, #0
   1191c:	bl	110f0 <dcgettext@plt>
   11920:	mov	r1, r4
   11924:	mov	r2, r0
   11928:	mov	r0, #0
   1192c:	bl	111a4 <error@plt>
   11930:	mov	r3, #125	; 0x7d
   11934:	str	r3, [sp, #164]	; 0xa4
   11938:	b	11844 <__snprintf_chk@plt+0x4d8>
   1193c:	mov	r1, r5
   11940:	mov	r0, #4
   11944:	bl	11294 <prctl@plt>
   11948:	subs	r1, r0, #0
   1194c:	bne	119c0 <__snprintf_chk@plt+0x654>
   11950:	mov	r0, r4
   11954:	bl	110cc <signal@plt>
   11958:	mov	r0, r4
   1195c:	bl	11b94 <__snprintf_chk@plt+0x828>
   11960:	mov	r0, r4
   11964:	bl	11054 <raise@plt>
   11968:	b	1188c <__snprintf_chk@plt+0x520>
   1196c:	mov	r2, #5
   11970:	ldr	r1, [pc, #228]	; 11a5c <__snprintf_chk@plt+0x6f0>
   11974:	mov	r0, #0
   11978:	bl	110f0 <dcgettext@plt>
   1197c:	mov	r1, #0
   11980:	mov	r2, r0
   11984:	mov	r0, r1
   11988:	bl	111a4 <error@plt>
   1198c:	b	11880 <__snprintf_chk@plt+0x514>
   11990:	mov	r2, #5
   11994:	ldr	r1, [pc, #196]	; 11a60 <__snprintf_chk@plt+0x6f4>
   11998:	mov	r0, #0
   1199c:	bl	110f0 <dcgettext@plt>
   119a0:	mov	r1, #0
   119a4:	ldr	r3, [sp, #164]	; 0xa4
   119a8:	mov	r2, r0
   119ac:	mov	r0, r1
   119b0:	bl	111a4 <error@plt>
   119b4:	mov	r3, #1
   119b8:	str	r3, [sp, #164]	; 0xa4
   119bc:	b	11844 <__snprintf_chk@plt+0x4d8>
   119c0:	bl	1124c <__errno_location@plt>
   119c4:	mov	r2, #5
   119c8:	ldr	r1, [pc, #148]	; 11a64 <__snprintf_chk@plt+0x6f8>
   119cc:	ldr	r7, [r0]
   119d0:	mov	r0, r5
   119d4:	bl	110f0 <dcgettext@plt>
   119d8:	mov	r1, r7
   119dc:	mov	r2, r0
   119e0:	mov	r0, r5
   119e4:	bl	111a4 <error@plt>
   119e8:	b	1188c <__snprintf_chk@plt+0x520>
   119ec:	nop			; (mov r0, r0)
   119f0:			; <UNDEFINED> instruction: 0xffe00000
   119f4:	strdmi	pc, [pc, #255]	; 11afb <__snprintf_chk@plt+0x78f>
   119f8:	andeq	r8, r1, r0, asr #14
   119fc:	andeq	r8, r1, r4, lsl pc
   11a00:	andeq	r8, r1, r0, asr lr
   11a04:	andeq	sl, r2, r4, lsr r1
   11a08:	andeq	r2, r1, r8, asr r5
   11a0c:	ldrdeq	r8, [r1], -r4
   11a10:	andeq	r8, r1, ip, lsr pc
   11a14:	andeq	sl, r2, r8, lsr r3
   11a18:	andeq	sl, r2, ip, lsr #2
   11a1c:	andeq	sl, r2, r0, asr #6
   11a20:	andeq	sl, r2, r4, lsr r3
   11a24:	andeq	sl, r2, r0, lsr r1
   11a28:	andeq	r8, r1, ip, lsr #30
   11a2c:	muleq	r1, r0, r6
   11a30:	andeq	r8, r1, ip, asr #28
   11a34:	andeq	r0, r0, r1, lsl #2
   11a38:	andeq	sl, r2, r8, lsr #6
   11a3c:	andeq	r1, r1, r0, lsl #24
   11a40:	muleq	r1, r0, fp
   11a44:	andeq	r8, r1, ip, asr pc
   11a48:	andeq	r8, r1, r4, asr #30
   11a4c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11a50:	andeq	r8, r1, r4, asr r6
   11a54:	andeq	r8, r1, r8, ror pc
   11a58:	andeq	r8, r1, r8, lsr #31
   11a5c:	andeq	r8, r1, r4, asr #31
   11a60:	andeq	r9, r1, r0, lsl r0
   11a64:	andeq	r8, r1, r8, ror #31
   11a68:	mov	fp, #0
   11a6c:	mov	lr, #0
   11a70:	pop	{r1}		; (ldr r1, [sp], #4)
   11a74:	mov	r2, sp
   11a78:	push	{r2}		; (str r2, [sp, #-4]!)
   11a7c:	push	{r0}		; (str r0, [sp, #-4]!)
   11a80:	ldr	ip, [pc, #16]	; 11a98 <__snprintf_chk@plt+0x72c>
   11a84:	push	{ip}		; (str ip, [sp, #-4]!)
   11a88:	ldr	r0, [pc, #12]	; 11a9c <__snprintf_chk@plt+0x730>
   11a8c:	ldr	r3, [pc, #12]	; 11aa0 <__snprintf_chk@plt+0x734>
   11a90:	bl	111d4 <__libc_start_main@plt>
   11a94:	bl	11360 <abort@plt>
   11a98:	andeq	r8, r1, r4, ror r5
   11a9c:	andeq	r1, r1, r8, ror r3
   11aa0:	andeq	r8, r1, r4, lsl r5
   11aa4:	ldr	r3, [pc, #20]	; 11ac0 <__snprintf_chk@plt+0x754>
   11aa8:	ldr	r2, [pc, #20]	; 11ac4 <__snprintf_chk@plt+0x758>
   11aac:	add	r3, pc, r3
   11ab0:	ldr	r2, [r3, r2]
   11ab4:	cmp	r2, #0
   11ab8:	bxeq	lr
   11abc:	b	111ec <__gmon_start__@plt>
   11ac0:	andeq	r8, r1, ip, asr #10
   11ac4:	andeq	r0, r0, r0, lsr #2
   11ac8:	ldr	r3, [pc, #28]	; 11aec <__snprintf_chk@plt+0x780>
   11acc:	ldr	r0, [pc, #28]	; 11af0 <__snprintf_chk@plt+0x784>
   11ad0:	sub	r3, r3, r0
   11ad4:	cmp	r3, #6
   11ad8:	bxls	lr
   11adc:	ldr	r3, [pc, #16]	; 11af4 <__snprintf_chk@plt+0x788>
   11ae0:	cmp	r3, #0
   11ae4:	bxeq	lr
   11ae8:	bx	r3
   11aec:	andeq	sl, r2, pc, lsl r3
   11af0:	andeq	sl, r2, ip, lsl r3
   11af4:	andeq	r0, r0, r0
   11af8:	ldr	r1, [pc, #36]	; 11b24 <__snprintf_chk@plt+0x7b8>
   11afc:	ldr	r0, [pc, #36]	; 11b28 <__snprintf_chk@plt+0x7bc>
   11b00:	sub	r1, r1, r0
   11b04:	asr	r1, r1, #2
   11b08:	add	r1, r1, r1, lsr #31
   11b0c:	asrs	r1, r1, #1
   11b10:	bxeq	lr
   11b14:	ldr	r3, [pc, #16]	; 11b2c <__snprintf_chk@plt+0x7c0>
   11b18:	cmp	r3, #0
   11b1c:	bxeq	lr
   11b20:	bx	r3
   11b24:	andeq	sl, r2, ip, lsl r3
   11b28:	andeq	sl, r2, ip, lsl r3
   11b2c:	andeq	r0, r0, r0
   11b30:	push	{r4, lr}
   11b34:	ldr	r4, [pc, #24]	; 11b54 <__snprintf_chk@plt+0x7e8>
   11b38:	ldrb	r3, [r4]
   11b3c:	cmp	r3, #0
   11b40:	popne	{r4, pc}
   11b44:	bl	11ac8 <__snprintf_chk@plt+0x75c>
   11b48:	mov	r3, #1
   11b4c:	strb	r3, [r4]
   11b50:	pop	{r4, pc}
   11b54:	andeq	sl, r2, ip, lsr r3
   11b58:	ldr	r0, [pc, #40]	; 11b88 <__snprintf_chk@plt+0x81c>
   11b5c:	ldr	r3, [r0]
   11b60:	cmp	r3, #0
   11b64:	bne	11b6c <__snprintf_chk@plt+0x800>
   11b68:	b	11af8 <__snprintf_chk@plt+0x78c>
   11b6c:	ldr	r3, [pc, #24]	; 11b8c <__snprintf_chk@plt+0x820>
   11b70:	cmp	r3, #0
   11b74:	beq	11b68 <__snprintf_chk@plt+0x7fc>
   11b78:	push	{r4, lr}
   11b7c:	blx	r3
   11b80:	pop	{r4, lr}
   11b84:	b	11af8 <__snprintf_chk@plt+0x78c>
   11b88:	andeq	r9, r2, r4, lsl #30
   11b8c:	andeq	r0, r0, r0
   11b90:	bx	lr
   11b94:	push	{r4, lr}
   11b98:	sub	sp, sp, #128	; 0x80
   11b9c:	mov	r4, r0
   11ba0:	mov	r0, sp
   11ba4:	bl	112f4 <sigemptyset@plt>
   11ba8:	mov	r1, r4
   11bac:	mov	r0, sp
   11bb0:	bl	111c8 <sigaddset@plt>
   11bb4:	mov	r1, sp
   11bb8:	mov	r2, #0
   11bbc:	mov	r0, #1
   11bc0:	bl	11084 <sigprocmask@plt>
   11bc4:	cmp	r0, #0
   11bc8:	beq	11bf4 <__snprintf_chk@plt+0x888>
   11bcc:	bl	1124c <__errno_location@plt>
   11bd0:	mov	r2, #5
   11bd4:	ldr	r1, [pc, #32]	; 11bfc <__snprintf_chk@plt+0x890>
   11bd8:	ldr	r4, [r0]
   11bdc:	mov	r0, #0
   11be0:	bl	110f0 <dcgettext@plt>
   11be4:	mov	r1, r4
   11be8:	mov	r2, r0
   11bec:	mov	r0, #0
   11bf0:	bl	111a4 <error@plt>
   11bf4:	add	sp, sp, #128	; 0x80
   11bf8:	pop	{r4, pc}
   11bfc:	andeq	r8, r1, r4, asr r6
   11c00:	cmp	r0, #14
   11c04:	push	{r4, r5, r6, r7, r8, r9, lr}
   11c08:	vpush	{d8}
   11c0c:	ldreq	r4, [pc, #564]	; 11e48 <__snprintf_chk@plt+0xadc>
   11c10:	ldrne	r4, [pc, #560]	; 11e48 <__snprintf_chk@plt+0xadc>
   11c14:	ldreq	r2, [pc, #560]	; 11e4c <__snprintf_chk@plt+0xae0>
   11c18:	moveq	r3, #1
   11c1c:	ldr	r6, [r4, #4]
   11c20:	movne	r5, r0
   11c24:	ldreq	r5, [r2]
   11c28:	streq	r3, [r4]
   11c2c:	cmp	r6, #0
   11c30:	sub	sp, sp, #44	; 0x2c
   11c34:	beq	11e34 <__snprintf_chk@plt+0xac8>
   11c38:	vldr	d8, [r4, #8]
   11c3c:	vcmp.f64	d8, #0.0
   11c40:	vmrs	APSR_nzcv, fpscr
   11c44:	bne	11ce0 <__snprintf_chk@plt+0x974>
   11c48:	ldrb	r3, [r4, #16]
   11c4c:	cmp	r3, #0
   11c50:	bne	11d8c <__snprintf_chk@plt+0xa20>
   11c54:	mov	r1, r5
   11c58:	mov	r0, r6
   11c5c:	bl	11204 <kill@plt>
   11c60:	ldrb	r4, [r4, #24]
   11c64:	cmp	r4, #0
   11c68:	beq	11c78 <__snprintf_chk@plt+0x90c>
   11c6c:	add	sp, sp, #44	; 0x2c
   11c70:	vpop	{d8}
   11c74:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11c78:	mov	r1, #1
   11c7c:	mov	r0, r5
   11c80:	bl	110cc <signal@plt>
   11c84:	mov	r1, r5
   11c88:	mov	r0, r4
   11c8c:	bl	11204 <kill@plt>
   11c90:	cmp	r5, #9
   11c94:	cmpne	r5, #18
   11c98:	beq	11c6c <__snprintf_chk@plt+0x900>
   11c9c:	cmp	r6, #0
   11ca0:	bne	11cb0 <__snprintf_chk@plt+0x944>
   11ca4:	mov	r1, #1
   11ca8:	mov	r0, #18
   11cac:	bl	110cc <signal@plt>
   11cb0:	mov	r0, r6
   11cb4:	mov	r1, #18
   11cb8:	bl	11204 <kill@plt>
   11cbc:	mov	r1, #1
   11cc0:	mov	r0, #18
   11cc4:	bl	110cc <signal@plt>
   11cc8:	mov	r1, #18
   11ccc:	mov	r0, #0
   11cd0:	bl	11204 <kill@plt>
   11cd4:	add	sp, sp, #44	; 0x2c
   11cd8:	vpop	{d8}
   11cdc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11ce0:	bl	1124c <__errno_location@plt>
   11ce4:	ldr	r3, [pc, #352]	; 11e4c <__snprintf_chk@plt+0xae0>
   11ce8:	add	r7, sp, #12
   11cec:	mov	r2, #9
   11cf0:	vmov.f64	d0, d8
   11cf4:	str	r2, [r3]
   11cf8:	mov	r8, r0
   11cfc:	mov	r0, r7
   11d00:	ldr	r9, [r8]
   11d04:	bl	12640 <__snprintf_chk@plt+0x12d4>
   11d08:	ldm	r7, {r0, r1}
   11d0c:	add	r2, sp, #28
   11d10:	mov	r3, #0
   11d14:	stm	r2, {r0, r1}
   11d18:	mov	r1, r3
   11d1c:	mov	r0, r3
   11d20:	add	r2, sp, #8
   11d24:	str	r3, [sp, #20]
   11d28:	str	r3, [sp, #24]
   11d2c:	bl	11114 <timer_create@plt>
   11d30:	subs	r3, r0, #0
   11d34:	beq	11df0 <__snprintf_chk@plt+0xa84>
   11d38:	vldr	d7, [pc, #256]	; 11e40 <__snprintf_chk@plt+0xad4>
   11d3c:	vcmpe.f64	d8, d7
   11d40:	vmrs	APSR_nzcv, fpscr
   11d44:	mvnge	r0, #0
   11d48:	bge	11d6c <__snprintf_chk@plt+0xa00>
   11d4c:	vcvt.u32.f64	s15, d8
   11d50:	vcvt.f64.u32	d6, s15
   11d54:	vmov	r3, s15
   11d58:	vcmpe.f64	d8, d6
   11d5c:	vmrs	APSR_nzcv, fpscr
   11d60:	movgt	r0, #1
   11d64:	movle	r0, #0
   11d68:	add	r0, r0, r3
   11d6c:	bl	110fc <alarm@plt>
   11d70:	ldrb	r1, [r4, #16]
   11d74:	mov	r2, #0
   11d78:	mov	r3, #0
   11d7c:	cmp	r1, #0
   11d80:	str	r9, [r8]
   11d84:	strd	r2, [r4, #8]
   11d88:	beq	11c54 <__snprintf_chk@plt+0x8e8>
   11d8c:	add	r1, sp, #20
   11d90:	mov	r0, r5
   11d94:	bl	1692c <__snprintf_chk@plt+0x55c0>
   11d98:	cmp	r0, #0
   11d9c:	bne	11e14 <__snprintf_chk@plt+0xaa8>
   11da0:	mov	r2, #5
   11da4:	ldr	r1, [pc, #164]	; 11e50 <__snprintf_chk@plt+0xae4>
   11da8:	mov	r0, #0
   11dac:	bl	110f0 <dcgettext@plt>
   11db0:	mov	r6, r0
   11db4:	ldr	r0, [r4, #20]
   11db8:	bl	16630 <__snprintf_chk@plt+0x52c4>
   11dbc:	mov	r1, #0
   11dc0:	mov	r2, r6
   11dc4:	add	r3, sp, #20
   11dc8:	str	r0, [sp]
   11dcc:	mov	r0, r1
   11dd0:	bl	111a4 <error@plt>
   11dd4:	ldr	r6, [r4, #4]
   11dd8:	cmp	r6, #0
   11ddc:	bne	11c54 <__snprintf_chk@plt+0x8e8>
   11de0:	mov	r1, #1
   11de4:	mov	r0, r5
   11de8:	bl	110cc <signal@plt>
   11dec:	b	11c54 <__snprintf_chk@plt+0x8e8>
   11df0:	mov	r1, r3
   11df4:	add	r2, sp, #20
   11df8:	ldr	r0, [sp, #8]
   11dfc:	bl	11138 <timer_settime@plt>
   11e00:	cmp	r0, #0
   11e04:	beq	11d70 <__snprintf_chk@plt+0xa04>
   11e08:	ldr	r0, [sp, #8]
   11e0c:	bl	111b0 <timer_delete@plt>
   11e10:	b	11d38 <__snprintf_chk@plt+0x9cc>
   11e14:	ldr	r2, [pc, #56]	; 11e54 <__snprintf_chk@plt+0xae8>
   11e18:	mov	r3, #19
   11e1c:	mov	r1, r3
   11e20:	stm	sp, {r2, r5}
   11e24:	add	r0, sp, #20
   11e28:	mov	r2, #1
   11e2c:	bl	1136c <__snprintf_chk@plt>
   11e30:	b	11da0 <__snprintf_chk@plt+0xa34>
   11e34:	add	r0, r5, #128	; 0x80
   11e38:	bl	1109c <_exit@plt>
   11e3c:	nop			; (mov r0, r0)
   11e40:			; <UNDEFINED> instruction: 0xffe00000
   11e44:	strdmi	pc, [pc, #255]	; 11f4b <__snprintf_chk@plt+0xbdf>
   11e48:	andeq	sl, r2, r0, asr #6
   11e4c:	andeq	sl, r2, ip, lsr #2
   11e50:	andeq	r8, r1, r0, ror r6
   11e54:	andeq	r8, r1, ip, ror #12
   11e58:	subs	r5, r0, #0
   11e5c:	push	{r7, lr}
   11e60:	sub	sp, sp, #56	; 0x38
   11e64:	beq	11ea0 <__snprintf_chk@plt+0xb34>
   11e68:	ldr	r3, [pc, #760]	; 12168 <__snprintf_chk@plt+0xdfc>
   11e6c:	mov	r2, #5
   11e70:	ldr	r1, [pc, #756]	; 1216c <__snprintf_chk@plt+0xe00>
   11e74:	mov	r0, #0
   11e78:	ldr	r4, [r3]
   11e7c:	bl	110f0 <dcgettext@plt>
   11e80:	ldr	r3, [pc, #744]	; 12170 <__snprintf_chk@plt+0xe04>
   11e84:	mov	r1, #1
   11e88:	ldr	r3, [r3]
   11e8c:	mov	r2, r0
   11e90:	mov	r0, r4
   11e94:	bl	112b8 <__fprintf_chk@plt>
   11e98:	mov	r0, r5
   11e9c:	bl	1121c <exit@plt>
   11ea0:	mov	r2, #5
   11ea4:	ldr	r1, [pc, #712]	; 12174 <__snprintf_chk@plt+0xe08>
   11ea8:	bl	110f0 <dcgettext@plt>
   11eac:	ldr	r3, [pc, #700]	; 12170 <__snprintf_chk@plt+0xe04>
   11eb0:	ldr	r7, [pc, #704]	; 12178 <__snprintf_chk@plt+0xe0c>
   11eb4:	ldr	r4, [pc, #704]	; 1217c <__snprintf_chk@plt+0xe10>
   11eb8:	ldr	r3, [r3]
   11ebc:	mov	r2, r3
   11ec0:	mov	r1, r0
   11ec4:	mov	r0, #1
   11ec8:	bl	11288 <__printf_chk@plt>
   11ecc:	mov	r2, #5
   11ed0:	ldr	r1, [pc, #680]	; 12180 <__snprintf_chk@plt+0xe14>
   11ed4:	mov	r0, r5
   11ed8:	bl	110f0 <dcgettext@plt>
   11edc:	ldr	r1, [r7]
   11ee0:	bl	11048 <fputs_unlocked@plt>
   11ee4:	mov	r2, #5
   11ee8:	ldr	r1, [pc, #660]	; 12184 <__snprintf_chk@plt+0xe18>
   11eec:	mov	r0, r5
   11ef0:	bl	110f0 <dcgettext@plt>
   11ef4:	ldr	r1, [r7]
   11ef8:	bl	11048 <fputs_unlocked@plt>
   11efc:	mov	r2, #5
   11f00:	ldr	r1, [pc, #640]	; 12188 <__snprintf_chk@plt+0xe1c>
   11f04:	mov	r0, r5
   11f08:	bl	110f0 <dcgettext@plt>
   11f0c:	ldr	r1, [r7]
   11f10:	bl	11048 <fputs_unlocked@plt>
   11f14:	mov	r2, #5
   11f18:	ldr	r1, [pc, #620]	; 1218c <__snprintf_chk@plt+0xe20>
   11f1c:	mov	r0, r5
   11f20:	bl	110f0 <dcgettext@plt>
   11f24:	ldr	r1, [r7]
   11f28:	bl	11048 <fputs_unlocked@plt>
   11f2c:	mov	r2, #5
   11f30:	ldr	r1, [pc, #600]	; 12190 <__snprintf_chk@plt+0xe24>
   11f34:	mov	r0, r5
   11f38:	bl	110f0 <dcgettext@plt>
   11f3c:	ldr	r1, [r7]
   11f40:	bl	11048 <fputs_unlocked@plt>
   11f44:	mov	r2, #5
   11f48:	ldr	r1, [pc, #580]	; 12194 <__snprintf_chk@plt+0xe28>
   11f4c:	mov	r0, r5
   11f50:	bl	110f0 <dcgettext@plt>
   11f54:	ldr	r1, [r7]
   11f58:	bl	11048 <fputs_unlocked@plt>
   11f5c:	mov	r2, #5
   11f60:	ldr	r1, [pc, #560]	; 12198 <__snprintf_chk@plt+0xe2c>
   11f64:	mov	r0, r5
   11f68:	bl	110f0 <dcgettext@plt>
   11f6c:	ldr	r1, [r7]
   11f70:	bl	11048 <fputs_unlocked@plt>
   11f74:	mov	r2, #5
   11f78:	ldr	r1, [pc, #540]	; 1219c <__snprintf_chk@plt+0xe30>
   11f7c:	mov	r0, r5
   11f80:	bl	110f0 <dcgettext@plt>
   11f84:	ldr	r1, [r7]
   11f88:	bl	11048 <fputs_unlocked@plt>
   11f8c:	mov	r2, #5
   11f90:	ldr	r1, [pc, #520]	; 121a0 <__snprintf_chk@plt+0xe34>
   11f94:	mov	r0, r5
   11f98:	bl	110f0 <dcgettext@plt>
   11f9c:	ldr	r1, [r7]
   11fa0:	bl	11048 <fputs_unlocked@plt>
   11fa4:	ldm	r4!, {r0, r1, r2, r3}
   11fa8:	mov	lr, sp
   11fac:	stmia	lr!, {r0, r1, r2, r3}
   11fb0:	ldm	r4!, {r0, r1, r2, r3}
   11fb4:	ldr	ip, [sp]
   11fb8:	stmia	lr!, {r0, r1, r2, r3}
   11fbc:	cmp	ip, #0
   11fc0:	ldm	r4!, {r0, r1, r2, r3}
   11fc4:	stmia	lr!, {r0, r1, r2, r3}
   11fc8:	ldm	r4, {r0, r1}
   11fcc:	moveq	r4, sp
   11fd0:	stm	lr, {r0, r1}
   11fd4:	beq	12004 <__snprintf_chk@plt+0xc98>
   11fd8:	ldr	r6, [pc, #452]	; 121a4 <__snprintf_chk@plt+0xe38>
   11fdc:	mov	r4, sp
   11fe0:	b	11ff0 <__snprintf_chk@plt+0xc84>
   11fe4:	ldr	ip, [r4, #8]!
   11fe8:	cmp	ip, #0
   11fec:	beq	12004 <__snprintf_chk@plt+0xc98>
   11ff0:	mov	r1, ip
   11ff4:	mov	r0, r6
   11ff8:	bl	11060 <strcmp@plt>
   11ffc:	cmp	r0, #0
   12000:	bne	11fe4 <__snprintf_chk@plt+0xc78>
   12004:	ldr	r4, [r4, #4]
   12008:	mov	r2, #5
   1200c:	cmp	r4, #0
   12010:	ldr	r1, [pc, #400]	; 121a8 <__snprintf_chk@plt+0xe3c>
   12014:	beq	120bc <__snprintf_chk@plt+0xd50>
   12018:	mov	r0, #0
   1201c:	bl	110f0 <dcgettext@plt>
   12020:	ldr	r3, [pc, #388]	; 121ac <__snprintf_chk@plt+0xe40>
   12024:	ldr	r2, [pc, #388]	; 121b0 <__snprintf_chk@plt+0xe44>
   12028:	mov	r1, r0
   1202c:	mov	r0, #1
   12030:	bl	11288 <__printf_chk@plt>
   12034:	mov	r1, #0
   12038:	mov	r0, #5
   1203c:	bl	112e8 <setlocale@plt>
   12040:	cmp	r0, #0
   12044:	ldreq	r6, [pc, #344]	; 121a4 <__snprintf_chk@plt+0xe38>
   12048:	beq	12064 <__snprintf_chk@plt+0xcf8>
   1204c:	mov	r2, #3
   12050:	ldr	r1, [pc, #348]	; 121b4 <__snprintf_chk@plt+0xe48>
   12054:	bl	11354 <strncmp@plt>
   12058:	ldr	r6, [pc, #324]	; 121a4 <__snprintf_chk@plt+0xe38>
   1205c:	cmp	r0, #0
   12060:	bne	1214c <__snprintf_chk@plt+0xde0>
   12064:	mov	r2, #5
   12068:	ldr	r1, [pc, #328]	; 121b8 <__snprintf_chk@plt+0xe4c>
   1206c:	mov	r0, #0
   12070:	bl	110f0 <dcgettext@plt>
   12074:	ldr	r3, [pc, #296]	; 121a4 <__snprintf_chk@plt+0xe38>
   12078:	ldr	r2, [pc, #300]	; 121ac <__snprintf_chk@plt+0xe40>
   1207c:	mov	r1, r0
   12080:	mov	r0, #1
   12084:	bl	11288 <__printf_chk@plt>
   12088:	mov	r2, #5
   1208c:	ldr	r1, [pc, #296]	; 121bc <__snprintf_chk@plt+0xe50>
   12090:	mov	r0, #0
   12094:	bl	110f0 <dcgettext@plt>
   12098:	ldr	r2, [pc, #288]	; 121c0 <__snprintf_chk@plt+0xe54>
   1209c:	cmp	r4, r6
   120a0:	ldr	r3, [pc, #284]	; 121c4 <__snprintf_chk@plt+0xe58>
   120a4:	movne	r3, r2
   120a8:	mov	r1, r0
   120ac:	mov	r2, r4
   120b0:	mov	r0, #1
   120b4:	bl	11288 <__printf_chk@plt>
   120b8:	b	11e98 <__snprintf_chk@plt+0xb2c>
   120bc:	mov	r0, r4
   120c0:	bl	110f0 <dcgettext@plt>
   120c4:	ldr	r3, [pc, #224]	; 121ac <__snprintf_chk@plt+0xe40>
   120c8:	ldr	r2, [pc, #224]	; 121b0 <__snprintf_chk@plt+0xe44>
   120cc:	mov	r1, r0
   120d0:	mov	r0, #1
   120d4:	bl	11288 <__printf_chk@plt>
   120d8:	mov	r1, r4
   120dc:	mov	r0, #5
   120e0:	bl	112e8 <setlocale@plt>
   120e4:	cmp	r0, #0
   120e8:	beq	12100 <__snprintf_chk@plt+0xd94>
   120ec:	mov	r2, #3
   120f0:	ldr	r1, [pc, #188]	; 121b4 <__snprintf_chk@plt+0xe48>
   120f4:	bl	11354 <strncmp@plt>
   120f8:	cmp	r0, #0
   120fc:	bne	12144 <__snprintf_chk@plt+0xdd8>
   12100:	mov	r2, #5
   12104:	ldr	r1, [pc, #172]	; 121b8 <__snprintf_chk@plt+0xe4c>
   12108:	mov	r0, #0
   1210c:	bl	110f0 <dcgettext@plt>
   12110:	ldr	r3, [pc, #140]	; 121a4 <__snprintf_chk@plt+0xe38>
   12114:	ldr	r2, [pc, #144]	; 121ac <__snprintf_chk@plt+0xe40>
   12118:	mov	r4, r3
   1211c:	mov	r1, r0
   12120:	mov	r0, #1
   12124:	bl	11288 <__printf_chk@plt>
   12128:	ldr	r1, [pc, #140]	; 121bc <__snprintf_chk@plt+0xe50>
   1212c:	mov	r2, #5
   12130:	mov	r0, #0
   12134:	bl	110f0 <dcgettext@plt>
   12138:	ldr	r3, [pc, #132]	; 121c4 <__snprintf_chk@plt+0xe58>
   1213c:	mov	r1, r0
   12140:	b	120ac <__snprintf_chk@plt+0xd40>
   12144:	ldr	r6, [pc, #88]	; 121a4 <__snprintf_chk@plt+0xe38>
   12148:	mov	r4, r6
   1214c:	mov	r2, #5
   12150:	ldr	r1, [pc, #112]	; 121c8 <__snprintf_chk@plt+0xe5c>
   12154:	mov	r0, #0
   12158:	bl	110f0 <dcgettext@plt>
   1215c:	ldr	r1, [r7]
   12160:	bl	11048 <fputs_unlocked@plt>
   12164:	b	12064 <__snprintf_chk@plt+0xcf8>
   12168:	andeq	sl, r2, r0, lsr r3
   1216c:	muleq	r1, r8, r6
   12170:	andeq	sl, r2, r4, ror #6
   12174:	andeq	r8, r1, r0, asr #13
   12178:	andeq	sl, r2, r4, lsr r3
   1217c:	muleq	r1, ip, r5
   12180:	andeq	r8, r1, r4, lsl #14
   12184:	andeq	r8, r1, r4, asr #14
   12188:	muleq	r1, r0, r7
   1218c:	andeq	r8, r1, ip, ror #20
   12190:			; <UNDEFINED> instruction: 0x00018ab0
   12194:	andeq	r8, r1, r0, ror #21
   12198:	andeq	r8, r1, r8, lsl fp
   1219c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   121a0:	andeq	r8, r1, r4, asr #25
   121a4:	muleq	r1, r0, r6
   121a8:	andeq	r8, r1, ip, lsl #28
   121ac:	andeq	r8, r1, r4, lsr #28
   121b0:	andeq	r8, r1, ip, asr #28
   121b4:	andeq	r8, r1, ip, asr lr
   121b8:	andeq	r8, r1, r8, lsr #29
   121bc:	andeq	r8, r1, r4, asr #29
   121c0:	andeq	r8, r1, r0, asr #14
   121c4:	andeq	r9, r1, ip, lsr r0
   121c8:	andeq	r8, r1, r0, ror #28
   121cc:	push	{r4, r5, lr}
   121d0:	sub	sp, sp, #20
   121d4:	ldr	r3, [pc, #316]	; 12318 <__snprintf_chk@plt+0xfac>
   121d8:	add	r2, sp, #8
   121dc:	add	r1, sp, #4
   121e0:	mov	r4, r0
   121e4:	bl	17ae0 <__snprintf_chk@plt+0x6774>
   121e8:	cmp	r0, #0
   121ec:	bne	12200 <__snprintf_chk@plt+0xe94>
   121f0:	bl	1124c <__errno_location@plt>
   121f4:	ldr	r3, [r0]
   121f8:	cmp	r3, #34	; 0x22
   121fc:	bne	122bc <__snprintf_chk@plt+0xf50>
   12200:	vldr	d0, [sp, #8]
   12204:	vcmpe.f64	d0, #0.0
   12208:	vmrs	APSR_nzcv, fpscr
   1220c:	blt	122bc <__snprintf_chk@plt+0xf50>
   12210:	ldr	r2, [sp, #4]
   12214:	ldrb	r3, [r2]
   12218:	cmp	r3, #0
   1221c:	beq	1227c <__snprintf_chk@plt+0xf10>
   12220:	ldrb	r2, [r2, #1]
   12224:	cmp	r2, #0
   12228:	bne	122bc <__snprintf_chk@plt+0xf50>
   1222c:	sub	r3, r3, #100	; 0x64
   12230:	cmp	r3, #15
   12234:	ldrls	pc, [pc, r3, lsl #2]
   12238:	b	122bc <__snprintf_chk@plt+0xf50>
   1223c:	muleq	r1, ip, r2
   12240:			; <UNDEFINED> instruction: 0x000122bc
   12244:			; <UNDEFINED> instruction: 0x000122bc
   12248:			; <UNDEFINED> instruction: 0x000122bc
   1224c:	andeq	r2, r1, ip, lsl #5
   12250:			; <UNDEFINED> instruction: 0x000122bc
   12254:			; <UNDEFINED> instruction: 0x000122bc
   12258:			; <UNDEFINED> instruction: 0x000122bc
   1225c:			; <UNDEFINED> instruction: 0x000122bc
   12260:	andeq	r2, r1, ip, lsr #5
   12264:			; <UNDEFINED> instruction: 0x000122bc
   12268:			; <UNDEFINED> instruction: 0x000122bc
   1226c:			; <UNDEFINED> instruction: 0x000122bc
   12270:			; <UNDEFINED> instruction: 0x000122bc
   12274:			; <UNDEFINED> instruction: 0x000122bc
   12278:	andeq	r2, r1, ip, ror r2
   1227c:	vldr	d7, [pc, #116]	; 122f8 <__snprintf_chk@plt+0xf8c>
   12280:	vmul.f64	d0, d0, d7
   12284:	add	sp, sp, #20
   12288:	pop	{r4, r5, pc}
   1228c:	vldr	d7, [pc, #108]	; 12300 <__snprintf_chk@plt+0xf94>
   12290:	vmul.f64	d0, d0, d7
   12294:	add	sp, sp, #20
   12298:	pop	{r4, r5, pc}
   1229c:	vldr	d7, [pc, #100]	; 12308 <__snprintf_chk@plt+0xf9c>
   122a0:	vmul.f64	d0, d0, d7
   122a4:	add	sp, sp, #20
   122a8:	pop	{r4, r5, pc}
   122ac:	vldr	d7, [pc, #92]	; 12310 <__snprintf_chk@plt+0xfa4>
   122b0:	vmul.f64	d0, d0, d7
   122b4:	add	sp, sp, #20
   122b8:	pop	{r4, r5, pc}
   122bc:	mov	r2, #5
   122c0:	ldr	r1, [pc, #84]	; 1231c <__snprintf_chk@plt+0xfb0>
   122c4:	mov	r0, #0
   122c8:	bl	110f0 <dcgettext@plt>
   122cc:	mov	r5, r0
   122d0:	mov	r0, r4
   122d4:	bl	16630 <__snprintf_chk@plt+0x52c4>
   122d8:	mov	r1, #0
   122dc:	mov	r2, r5
   122e0:	mov	r3, r0
   122e4:	mov	r0, r1
   122e8:	bl	111a4 <error@plt>
   122ec:	mov	r0, #125	; 0x7d
   122f0:	bl	11e58 <__snprintf_chk@plt+0xaec>
   122f4:	nop			; (mov r0, r0)
   122f8:	andeq	r0, r0, r0
   122fc:	svccc	0x00f00000	; IMB
   12300:	andeq	r0, r0, r0
   12304:	adcmi	r2, ip, r0
   12308:	andeq	r0, r0, r0
   1230c:	rscsmi	r1, r5, r0, lsl #16
   12310:	andeq	r0, r0, r0
   12314:	submi	r0, lr, r0
   12318:			; <UNDEFINED> instruction: 0x000124bc
   1231c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12320:	push	{r4, r5, r6, r7, r8, r9, lr}
   12324:	mov	r7, r0
   12328:	ldrb	r3, [r0]
   1232c:	sub	sp, sp, #12
   12330:	mov	r8, r1
   12334:	sub	r3, r3, #48	; 0x30
   12338:	cmp	r3, #9
   1233c:	bhi	123a8 <__snprintf_chk@plt+0x103c>
   12340:	bl	1124c <__errno_location@plt>
   12344:	mov	r3, #0
   12348:	mov	r2, #10
   1234c:	add	r1, sp, #4
   12350:	str	r3, [r0]
   12354:	mov	r4, r0
   12358:	mov	r0, r7
   1235c:	bl	1106c <strtol@plt>
   12360:	ldr	r3, [sp, #4]
   12364:	cmp	r7, r3
   12368:	beq	12444 <__snprintf_chk@plt+0x10d8>
   1236c:	ldrb	r3, [r3]
   12370:	cmp	r3, #0
   12374:	bne	12444 <__snprintf_chk@plt+0x10d8>
   12378:	ldr	r3, [r4]
   1237c:	cmp	r3, #0
   12380:	bne	12444 <__snprintf_chk@plt+0x10d8>
   12384:	cmn	r0, #1
   12388:	streq	r0, [sp]
   1238c:	beq	1244c <__snprintf_chk@plt+0x10e0>
   12390:	cmp	r0, #254	; 0xfe
   12394:	movle	r3, #127	; 0x7f
   12398:	movgt	r3, #255	; 0xff
   1239c:	and	r0, r0, r3
   123a0:	str	r0, [sp]
   123a4:	b	12408 <__snprintf_chk@plt+0x109c>
   123a8:	bl	17a68 <__snprintf_chk@plt+0x66fc>
   123ac:	ldrb	r4, [r0]
   123b0:	mov	r9, r0
   123b4:	cmp	r4, #0
   123b8:	movne	r5, r0
   123bc:	ldrne	r6, [pc, #240]	; 124b4 <__snprintf_chk@plt+0x1148>
   123c0:	beq	123e8 <__snprintf_chk@plt+0x107c>
   123c4:	mov	r1, r4
   123c8:	mov	r0, r6
   123cc:	bl	11240 <strchr@plt>
   123d0:	sub	r4, r4, #32
   123d4:	cmp	r0, #0
   123d8:	strbne	r4, [r5]
   123dc:	ldrb	r4, [r5, #1]!
   123e0:	cmp	r4, #0
   123e4:	bne	123c4 <__snprintf_chk@plt+0x1058>
   123e8:	mov	r1, sp
   123ec:	mov	r0, r9
   123f0:	bl	167b0 <__snprintf_chk@plt+0x5444>
   123f4:	cmp	r0, #0
   123f8:	bne	1242c <__snprintf_chk@plt+0x10c0>
   123fc:	mov	r0, r9
   12400:	bl	1270c <__snprintf_chk@plt+0x13a0>
   12404:	ldr	r0, [sp]
   12408:	cmp	r0, #0
   1240c:	blt	1244c <__snprintf_chk@plt+0x10e0>
   12410:	mov	r1, r8
   12414:	bl	1692c <__snprintf_chk@plt+0x55c0>
   12418:	cmp	r0, #0
   1241c:	bne	1244c <__snprintf_chk@plt+0x10e0>
   12420:	ldr	r0, [sp]
   12424:	add	sp, sp, #12
   12428:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1242c:	ldrb	r3, [r9]
   12430:	cmp	r3, #83	; 0x53
   12434:	beq	12484 <__snprintf_chk@plt+0x1118>
   12438:	mvn	r3, #0
   1243c:	str	r3, [sp]
   12440:	b	123fc <__snprintf_chk@plt+0x1090>
   12444:	mvn	r3, #0
   12448:	str	r3, [sp]
   1244c:	mov	r2, #5
   12450:	ldr	r1, [pc, #96]	; 124b8 <__snprintf_chk@plt+0x114c>
   12454:	mov	r0, #0
   12458:	bl	110f0 <dcgettext@plt>
   1245c:	mov	r4, r0
   12460:	mov	r0, r7
   12464:	bl	16630 <__snprintf_chk@plt+0x52c4>
   12468:	mov	r1, #0
   1246c:	mov	r2, r4
   12470:	mov	r3, r0
   12474:	mov	r0, r1
   12478:	bl	111a4 <error@plt>
   1247c:	mvn	r0, #0
   12480:	b	12424 <__snprintf_chk@plt+0x10b8>
   12484:	ldrb	r3, [r9, #1]
   12488:	cmp	r3, #73	; 0x49
   1248c:	bne	12438 <__snprintf_chk@plt+0x10cc>
   12490:	ldrb	r3, [r9, #2]
   12494:	cmp	r3, #71	; 0x47
   12498:	bne	12438 <__snprintf_chk@plt+0x10cc>
   1249c:	mov	r1, sp
   124a0:	add	r0, r9, #3
   124a4:	bl	167b0 <__snprintf_chk@plt+0x5444>
   124a8:	cmp	r0, #0
   124ac:	bne	12438 <__snprintf_chk@plt+0x10cc>
   124b0:	b	123fc <__snprintf_chk@plt+0x1090>
   124b4:	andeq	r9, r1, r0, ror #1
   124b8:	strdeq	r9, [r1], -ip
   124bc:	push	{r4, r5, r6, lr}
   124c0:	vpush	{d8}
   124c4:	mov	r4, r1
   124c8:	mov	r5, r0
   124cc:	sub	sp, sp, #8
   124d0:	mov	r1, sp
   124d4:	bl	112a0 <strtod@plt>
   124d8:	ldr	r3, [sp]
   124dc:	ldrb	r3, [r3]
   124e0:	cmp	r3, #0
   124e4:	vmov.f64	d8, d0
   124e8:	bne	12508 <__snprintf_chk@plt+0x119c>
   124ec:	cmp	r4, #0
   124f0:	vmov.f64	d0, d8
   124f4:	ldrne	r3, [sp]
   124f8:	strne	r3, [r4]
   124fc:	add	sp, sp, #8
   12500:	vpop	{d8}
   12504:	pop	{r4, r5, r6, pc}
   12508:	bl	1124c <__errno_location@plt>
   1250c:	add	r1, sp, #4
   12510:	mov	r6, r0
   12514:	mov	r0, r5
   12518:	ldr	r5, [r6]
   1251c:	bl	17c58 <__snprintf_chk@plt+0x68ec>
   12520:	ldm	sp, {r2, r3}
   12524:	cmp	r2, r3
   12528:	strcc	r3, [sp]
   1252c:	strcs	r5, [r6]
   12530:	vmovcc.f64	d8, d0
   12534:	b	124ec <__snprintf_chk@plt+0x1180>
   12538:	ldr	r3, [pc, #4]	; 12544 <__snprintf_chk@plt+0x11d8>
   1253c:	str	r0, [r3]
   12540:	bx	lr
   12544:	andeq	sl, r2, ip, asr r3
   12548:	ldr	r3, [pc, #4]	; 12554 <__snprintf_chk@plt+0x11e8>
   1254c:	strb	r0, [r3, #4]
   12550:	bx	lr
   12554:	andeq	sl, r2, ip, asr r3
   12558:	ldr	r3, [pc, #192]	; 12620 <__snprintf_chk@plt+0x12b4>
   1255c:	push	{r4, r5, r6, lr}
   12560:	sub	sp, sp, #8
   12564:	ldr	r0, [r3]
   12568:	bl	17cd4 <__snprintf_chk@plt+0x6968>
   1256c:	cmp	r0, #0
   12570:	beq	12594 <__snprintf_chk@plt+0x1228>
   12574:	ldr	r4, [pc, #168]	; 12624 <__snprintf_chk@plt+0x12b8>
   12578:	ldrb	r3, [r4, #4]
   1257c:	cmp	r3, #0
   12580:	beq	125b0 <__snprintf_chk@plt+0x1244>
   12584:	bl	1124c <__errno_location@plt>
   12588:	ldr	r3, [r0]
   1258c:	cmp	r3, #32
   12590:	bne	125b0 <__snprintf_chk@plt+0x1244>
   12594:	ldr	r3, [pc, #140]	; 12628 <__snprintf_chk@plt+0x12bc>
   12598:	ldr	r0, [r3]
   1259c:	bl	17cd4 <__snprintf_chk@plt+0x6968>
   125a0:	cmp	r0, #0
   125a4:	bne	125f8 <__snprintf_chk@plt+0x128c>
   125a8:	add	sp, sp, #8
   125ac:	pop	{r4, r5, r6, pc}
   125b0:	mov	r2, #5
   125b4:	ldr	r1, [pc, #112]	; 1262c <__snprintf_chk@plt+0x12c0>
   125b8:	mov	r0, #0
   125bc:	bl	110f0 <dcgettext@plt>
   125c0:	ldr	r4, [r4]
   125c4:	cmp	r4, #0
   125c8:	mov	r5, r0
   125cc:	beq	12604 <__snprintf_chk@plt+0x1298>
   125d0:	bl	1124c <__errno_location@plt>
   125d4:	ldr	r6, [r0]
   125d8:	mov	r0, r4
   125dc:	bl	153d0 <__snprintf_chk@plt+0x4064>
   125e0:	mov	r1, r6
   125e4:	str	r5, [sp]
   125e8:	ldr	r2, [pc, #64]	; 12630 <__snprintf_chk@plt+0x12c4>
   125ec:	mov	r3, r0
   125f0:	mov	r0, #0
   125f4:	bl	111a4 <error@plt>
   125f8:	ldr	r3, [pc, #52]	; 12634 <__snprintf_chk@plt+0x12c8>
   125fc:	ldr	r0, [r3]
   12600:	bl	1109c <_exit@plt>
   12604:	bl	1124c <__errno_location@plt>
   12608:	mov	r3, r5
   1260c:	ldr	r2, [pc, #36]	; 12638 <__snprintf_chk@plt+0x12cc>
   12610:	ldr	r1, [r0]
   12614:	mov	r0, r4
   12618:	bl	111a4 <error@plt>
   1261c:	b	125f8 <__snprintf_chk@plt+0x128c>
   12620:	andeq	sl, r2, r4, lsr r3
   12624:	andeq	sl, r2, ip, asr r3
   12628:	andeq	sl, r2, r0, lsr r3
   1262c:	andeq	r9, r1, r0, lsr #2
   12630:	andeq	r9, r1, ip, lsr #2
   12634:	andeq	sl, r2, r4, lsr r1
   12638:	andeq	r9, r1, r0, lsr r1
   1263c:	andeq	r0, r0, r0
   12640:	vldr	d7, [pc, #160]	; 126e8 <__snprintf_chk@plt+0x137c>
   12644:	vcmpe.f64	d0, d7
   12648:	vmrs	APSR_nzcv, fpscr
   1264c:	ble	126d8 <__snprintf_chk@plt+0x136c>
   12650:	vldr	d7, [pc, #152]	; 126f0 <__snprintf_chk@plt+0x1384>
   12654:	vcmpe.f64	d0, d7
   12658:	vmrs	APSR_nzcv, fpscr
   1265c:	bpl	126c8 <__snprintf_chk@plt+0x135c>
   12660:	vcvt.s32.f64	s14, d0
   12664:	vldr	d6, [pc, #140]	; 126f8 <__snprintf_chk@plt+0x138c>
   12668:	ldr	r2, [pc, #144]	; 12700 <__snprintf_chk@plt+0x1394>
   1266c:	ldr	ip, [pc, #144]	; 12704 <__snprintf_chk@plt+0x1398>
   12670:	vcvt.f64.s32	d5, s14
   12674:	vsub.f64	d0, d0, d5
   12678:	vmul.f64	d0, d0, d6
   1267c:	vcvt.s32.f64	s15, d0
   12680:	vcvt.f64.s32	d6, s15
   12684:	vmov	r1, s15
   12688:	vcmpe.f64	d0, d6
   1268c:	vmrs	APSR_nzcv, fpscr
   12690:	movgt	r3, #1
   12694:	movle	r3, #0
   12698:	add	r3, r1, r3
   1269c:	smull	r2, r1, r2, r3
   126a0:	asr	r2, r3, #31
   126a4:	rsb	r2, r2, r1, asr #28
   126a8:	vmov	r1, s14
   126ac:	add	r1, r2, r1
   126b0:	mul	r2, ip, r2
   126b4:	subs	r3, r3, r2
   126b8:	submi	r1, r1, #1
   126bc:	addmi	r3, r3, ip
   126c0:	stm	r0, {r1, r3}
   126c4:	bx	lr
   126c8:	ldr	r3, [pc, #56]	; 12708 <__snprintf_chk@plt+0x139c>
   126cc:	mvn	r2, #-2147483648	; 0x80000000
   126d0:	stm	r0, {r2, r3}
   126d4:	bx	lr
   126d8:	mov	r2, #-2147483648	; 0x80000000
   126dc:	mov	r3, #0
   126e0:	stm	r0, {r2, r3}
   126e4:	bx	lr
   126e8:	andeq	r0, r0, r0
   126ec:	mvngt	r0, r0
   126f0:	andeq	r0, r0, r0
   126f4:	mvnmi	r0, r0
   126f8:	andeq	r0, r0, r0
   126fc:	bicmi	ip, sp, r5, ror #26
   12700:	ldrtmi	r2, [r8], #4001	; 0xfa1
   12704:	blcc	fe6c4f0c <optarg@@GLIBC_2.4+0xfe69abd4>
   12708:	blcc	fe6c4f0c <optarg@@GLIBC_2.4+0xfe69abd4>
   1270c:	push	{r4, r5, lr}
   12710:	sub	sp, sp, #12
   12714:	mov	r5, r0
   12718:	bl	1124c <__errno_location@plt>
   1271c:	mov	r2, #0
   12720:	mov	r4, r0
   12724:	ldr	r3, [r0]
   12728:	str	r2, [r4]
   1272c:	mov	r0, r5
   12730:	str	r3, [sp]
   12734:	str	r3, [sp, #4]
   12738:	bl	11090 <free@plt>
   1273c:	ldr	r3, [r4]
   12740:	add	r2, sp, #8
   12744:	cmp	r3, #0
   12748:	moveq	r3, #4
   1274c:	movne	r3, #0
   12750:	add	r3, r2, r3
   12754:	ldr	r3, [r3, #-8]
   12758:	str	r3, [r4]
   1275c:	add	sp, sp, #12
   12760:	pop	{r4, r5, pc}
   12764:	push	{r4, r5, r6, lr}
   12768:	subs	r4, r0, #0
   1276c:	beq	127e0 <__snprintf_chk@plt+0x1474>
   12770:	mov	r1, #47	; 0x2f
   12774:	bl	1130c <strrchr@plt>
   12778:	subs	r5, r0, #0
   1277c:	beq	127cc <__snprintf_chk@plt+0x1460>
   12780:	add	r6, r5, #1
   12784:	sub	r3, r6, r4
   12788:	cmp	r3, #6
   1278c:	ble	127cc <__snprintf_chk@plt+0x1460>
   12790:	mov	r2, #7
   12794:	ldr	r1, [pc, #96]	; 127fc <__snprintf_chk@plt+0x1490>
   12798:	sub	r0, r5, #6
   1279c:	bl	11354 <strncmp@plt>
   127a0:	cmp	r0, #0
   127a4:	bne	127cc <__snprintf_chk@plt+0x1460>
   127a8:	mov	r2, #3
   127ac:	ldr	r1, [pc, #76]	; 12800 <__snprintf_chk@plt+0x1494>
   127b0:	mov	r0, r6
   127b4:	bl	11354 <strncmp@plt>
   127b8:	cmp	r0, #0
   127bc:	movne	r4, r6
   127c0:	ldreq	r3, [pc, #60]	; 12804 <__snprintf_chk@plt+0x1498>
   127c4:	addeq	r4, r5, #4
   127c8:	streq	r4, [r3]
   127cc:	ldr	r2, [pc, #52]	; 12808 <__snprintf_chk@plt+0x149c>
   127d0:	ldr	r3, [pc, #52]	; 1280c <__snprintf_chk@plt+0x14a0>
   127d4:	str	r4, [r2]
   127d8:	str	r4, [r3]
   127dc:	pop	{r4, r5, r6, pc}
   127e0:	ldr	r3, [pc, #40]	; 12810 <__snprintf_chk@plt+0x14a4>
   127e4:	mov	r2, #55	; 0x37
   127e8:	mov	r1, #1
   127ec:	ldr	r3, [r3]
   127f0:	ldr	r0, [pc, #28]	; 12814 <__snprintf_chk@plt+0x14a8>
   127f4:	bl	11150 <fwrite@plt>
   127f8:	bl	11360 <abort@plt>
   127fc:	andeq	r9, r1, ip, ror #2
   12800:	andeq	r9, r1, r4, ror r1
   12804:	andeq	sl, r2, r0, lsr #6
   12808:	andeq	sl, r2, r4, ror #6
   1280c:	andeq	sl, r2, r4, lsr #6
   12810:	andeq	sl, r2, r0, lsr r3
   12814:	andeq	r9, r1, r4, lsr r1
   12818:	push	{r4, r5, r6, lr}
   1281c:	mov	r4, r0
   12820:	mov	r5, r1
   12824:	bl	17ef0 <__snprintf_chk@plt+0x6b84>
   12828:	ldrb	r3, [r0]
   1282c:	bic	r3, r3, #32
   12830:	cmp	r3, #85	; 0x55
   12834:	bne	12894 <__snprintf_chk@plt+0x1528>
   12838:	ldrb	r3, [r0, #1]
   1283c:	bic	r3, r3, #32
   12840:	cmp	r3, #84	; 0x54
   12844:	bne	128d0 <__snprintf_chk@plt+0x1564>
   12848:	ldrb	r3, [r0, #2]
   1284c:	bic	r3, r3, #32
   12850:	cmp	r3, #70	; 0x46
   12854:	bne	128d0 <__snprintf_chk@plt+0x1564>
   12858:	ldrb	r3, [r0, #3]
   1285c:	cmp	r3, #45	; 0x2d
   12860:	bne	128d0 <__snprintf_chk@plt+0x1564>
   12864:	ldrb	r3, [r0, #4]
   12868:	cmp	r3, #56	; 0x38
   1286c:	bne	128d0 <__snprintf_chk@plt+0x1564>
   12870:	ldrb	r3, [r0, #5]
   12874:	cmp	r3, #0
   12878:	bne	128d0 <__snprintf_chk@plt+0x1564>
   1287c:	ldrb	r2, [r4]
   12880:	ldr	r3, [pc, #152]	; 12920 <__snprintf_chk@plt+0x15b4>
   12884:	ldr	r0, [pc, #152]	; 12924 <__snprintf_chk@plt+0x15b8>
   12888:	cmp	r2, #96	; 0x60
   1288c:	movne	r0, r3
   12890:	pop	{r4, r5, r6, pc}
   12894:	cmp	r3, #71	; 0x47
   12898:	bne	128d0 <__snprintf_chk@plt+0x1564>
   1289c:	ldrb	r3, [r0, #1]
   128a0:	bic	r3, r3, #32
   128a4:	cmp	r3, #66	; 0x42
   128a8:	bne	128d0 <__snprintf_chk@plt+0x1564>
   128ac:	ldrb	r3, [r0, #2]
   128b0:	cmp	r3, #49	; 0x31
   128b4:	bne	128d0 <__snprintf_chk@plt+0x1564>
   128b8:	ldrb	r3, [r0, #3]
   128bc:	cmp	r3, #56	; 0x38
   128c0:	bne	128d0 <__snprintf_chk@plt+0x1564>
   128c4:	ldrb	r3, [r0, #4]
   128c8:	cmp	r3, #48	; 0x30
   128cc:	beq	128e4 <__snprintf_chk@plt+0x1578>
   128d0:	ldr	r3, [pc, #80]	; 12928 <__snprintf_chk@plt+0x15bc>
   128d4:	cmp	r5, #9
   128d8:	ldr	r0, [pc, #76]	; 1292c <__snprintf_chk@plt+0x15c0>
   128dc:	movne	r0, r3
   128e0:	pop	{r4, r5, r6, pc}
   128e4:	ldrb	r3, [r0, #5]
   128e8:	cmp	r3, #51	; 0x33
   128ec:	bne	128d0 <__snprintf_chk@plt+0x1564>
   128f0:	ldrb	r3, [r0, #6]
   128f4:	cmp	r3, #48	; 0x30
   128f8:	bne	128d0 <__snprintf_chk@plt+0x1564>
   128fc:	ldrb	r3, [r0, #7]
   12900:	cmp	r3, #0
   12904:	bne	128d0 <__snprintf_chk@plt+0x1564>
   12908:	ldrb	r2, [r4]
   1290c:	ldr	r3, [pc, #28]	; 12930 <__snprintf_chk@plt+0x15c4>
   12910:	ldr	r0, [pc, #28]	; 12934 <__snprintf_chk@plt+0x15c8>
   12914:	cmp	r2, #96	; 0x60
   12918:	movne	r0, r3
   1291c:	pop	{r4, r5, r6, pc}
   12920:	ldrdeq	r9, [r1], -r0
   12924:	andeq	r9, r1, ip, asr #3
   12928:	andeq	r9, r1, r0, ror #3
   1292c:	ldrdeq	r9, [r1], -ip
   12930:	ldrdeq	r9, [r1], -r8
   12934:	ldrdeq	r9, [r1], -r4
   12938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1293c:	sub	sp, sp, #140	; 0x8c
   12940:	mov	r9, r1
   12944:	str	r3, [sp, #24]
   12948:	mov	r3, #1
   1294c:	mov	sl, r0
   12950:	str	r2, [sp, #44]	; 0x2c
   12954:	str	r3, [sp, #28]
   12958:	bl	11174 <__ctype_get_mb_cur_max@plt>
   1295c:	ldr	r3, [sp, #180]	; 0xb4
   12960:	mov	fp, r9
   12964:	mov	r9, sl
   12968:	lsr	r3, r3, #1
   1296c:	and	r3, r3, #1
   12970:	str	r3, [sp, #40]	; 0x28
   12974:	ldr	r3, [sp, #180]	; 0xb4
   12978:	mov	r2, #0
   1297c:	and	r3, r3, #4
   12980:	str	r3, [sp, #100]	; 0x64
   12984:	ldr	r3, [sp, #180]	; 0xb4
   12988:	str	r2, [sp, #76]	; 0x4c
   1298c:	and	r3, r3, #1
   12990:	str	r3, [sp, #96]	; 0x60
   12994:	str	r2, [sp, #36]	; 0x24
   12998:	str	r2, [sp, #56]	; 0x38
   1299c:	str	r2, [sp, #68]	; 0x44
   129a0:	str	r2, [sp, #72]	; 0x48
   129a4:	str	r2, [sp, #84]	; 0x54
   129a8:	str	r0, [sp, #80]	; 0x50
   129ac:	ldr	r3, [sp, #176]	; 0xb0
   129b0:	cmp	r3, #10
   129b4:	ldrls	pc, [pc, r3, lsl #2]
   129b8:	b	13b90 <__snprintf_chk@plt+0x2824>
   129bc:	andeq	r2, r1, r8, ror #19
   129c0:	andeq	r2, r1, r8, lsl #26
   129c4:	andeq	r2, r1, r0, ror #28
   129c8:	andeq	r2, r1, ip, lsr sp
   129cc:			; <UNDEFINED> instruction: 0x00012eb4
   129d0:	muleq	r1, r4, lr
   129d4:	andeq	r2, r1, ip, asr sp
   129d8:	andeq	r2, r1, r0, lsl #27
   129dc:	andeq	r2, r1, r8, lsr #27
   129e0:	andeq	r2, r1, r8, lsr #27
   129e4:	andeq	r2, r1, r8, lsr #27
   129e8:	mov	r3, #0
   129ec:	ldr	r1, [sp, #56]	; 0x38
   129f0:	ldr	r2, [sp, #176]	; 0xb0
   129f4:	ldr	lr, [sp, #176]	; 0xb0
   129f8:	mov	r8, r3
   129fc:	mov	ip, r3
   12a00:	str	r3, [sp, #40]	; 0x28
   12a04:	mov	r3, r1
   12a08:	cmp	r2, #2
   12a0c:	moveq	r3, #0
   12a10:	andne	r3, r3, #1
   12a14:	mov	r0, r3
   12a18:	str	r3, [sp, #92]	; 0x5c
   12a1c:	ldr	r3, [sp, #68]	; 0x44
   12a20:	sub	lr, lr, #2
   12a24:	adds	r2, r3, #0
   12a28:	movne	r2, #1
   12a2c:	and	r3, r1, ip
   12a30:	and	r3, r2, r3
   12a34:	clz	lr, lr
   12a38:	str	r3, [sp, #88]	; 0x58
   12a3c:	lsr	lr, lr, #5
   12a40:	mov	r3, ip
   12a44:	and	r3, r3, lr
   12a48:	mov	sl, #0
   12a4c:	and	r0, r2, r0
   12a50:	str	r3, [sp, #64]	; 0x40
   12a54:	eor	r3, r1, #1
   12a58:	str	lr, [sp, #52]	; 0x34
   12a5c:	str	r0, [sp, #48]	; 0x30
   12a60:	str	r3, [sp, #60]	; 0x3c
   12a64:	ldr	r3, [sp, #24]
   12a68:	cmn	r3, #1
   12a6c:	beq	12f9c <__snprintf_chk@plt+0x1c30>
   12a70:	subs	r7, r3, sl
   12a74:	movne	r7, #1
   12a78:	cmp	r7, #0
   12a7c:	beq	12fb4 <__snprintf_chk@plt+0x1c48>
   12a80:	ldr	r3, [sp, #48]	; 0x30
   12a84:	cmp	r3, #0
   12a88:	beq	13320 <__snprintf_chk@plt+0x1fb4>
   12a8c:	ldr	r2, [sp, #68]	; 0x44
   12a90:	ldr	r1, [sp, #24]
   12a94:	cmp	r2, #1
   12a98:	mov	r3, r2
   12a9c:	movls	r3, #0
   12aa0:	movhi	r3, #1
   12aa4:	cmn	r1, #1
   12aa8:	movne	r3, #0
   12aac:	cmp	r3, #0
   12ab0:	add	r4, sl, r2
   12ab4:	beq	12ac4 <__snprintf_chk@plt+0x1758>
   12ab8:	ldr	r0, [sp, #44]	; 0x2c
   12abc:	bl	11228 <strlen@plt>
   12ac0:	str	r0, [sp, #24]
   12ac4:	ldr	r3, [sp, #24]
   12ac8:	cmp	r3, r4
   12acc:	ldr	r3, [sp, #44]	; 0x2c
   12ad0:	add	r5, r3, sl
   12ad4:	bcc	13328 <__snprintf_chk@plt+0x1fbc>
   12ad8:	mov	r0, r5
   12adc:	ldr	r2, [sp, #68]	; 0x44
   12ae0:	ldr	r1, [sp, #72]	; 0x48
   12ae4:	bl	110d8 <memcmp@plt>
   12ae8:	cmp	r0, #0
   12aec:	bne	13328 <__snprintf_chk@plt+0x1fbc>
   12af0:	ldr	r3, [sp, #40]	; 0x28
   12af4:	cmp	r3, #0
   12af8:	bne	13ce4 <__snprintf_chk@plt+0x2978>
   12afc:	ldrb	r4, [r5]
   12b00:	cmp	r4, #126	; 0x7e
   12b04:	ldrls	pc, [pc, r4, lsl #2]
   12b08:	b	13c20 <__snprintf_chk@plt+0x28b4>
   12b0c:	andeq	r3, r1, r0, ror #3
   12b10:	andeq	r3, r1, r0, lsr #24
   12b14:	andeq	r3, r1, r0, lsr #24
   12b18:	andeq	r3, r1, r0, lsr #24
   12b1c:	andeq	r3, r1, r0, lsr #24
   12b20:	andeq	r3, r1, r0, lsr #24
   12b24:	andeq	r3, r1, r0, lsr #24
   12b28:	andeq	r3, r1, ip, asr #3
   12b2c:			; <UNDEFINED> instruction: 0x000131b8
   12b30:	muleq	r1, r4, r1
   12b34:	andeq	r3, r1, r4, ror r1
   12b38:	andeq	r3, r1, r4, lsr #3
   12b3c:	ldrdeq	r3, [r1], -ip
   12b40:	andeq	r3, r1, r0, lsl r3
   12b44:	andeq	r3, r1, r0, lsr #24
   12b48:	andeq	r3, r1, r0, lsr #24
   12b4c:	andeq	r3, r1, r0, lsr #24
   12b50:	andeq	r3, r1, r0, lsr #24
   12b54:	andeq	r3, r1, r0, lsr #24
   12b58:	andeq	r3, r1, r0, lsr #24
   12b5c:	andeq	r3, r1, r0, lsr #24
   12b60:	andeq	r3, r1, r0, lsr #24
   12b64:	andeq	r3, r1, r0, lsr #24
   12b68:	andeq	r3, r1, r0, lsr #24
   12b6c:	andeq	r3, r1, r0, lsr #24
   12b70:	andeq	r3, r1, r0, lsr #24
   12b74:	andeq	r3, r1, r0, lsr #24
   12b78:	andeq	r3, r1, r0, lsr #24
   12b7c:	andeq	r3, r1, r0, lsr #24
   12b80:	andeq	r3, r1, r0, lsr #24
   12b84:	andeq	r3, r1, r0, lsr #24
   12b88:	andeq	r3, r1, r0, lsr #24
   12b8c:	andeq	r3, r1, r0, lsl #6
   12b90:	andeq	r3, r1, r0, ror #5
   12b94:	andeq	r3, r1, r0, ror #5
   12b98:	andeq	r3, r1, r0, asr #5
   12b9c:	andeq	r3, r1, r0, ror #5
   12ba0:	andeq	r3, r1, ip, asr #1
   12ba4:	andeq	r3, r1, r0, ror #5
   12ba8:	andeq	r3, r1, r8, lsr #1
   12bac:	andeq	r3, r1, r0, ror #5
   12bb0:	andeq	r3, r1, r0, ror #5
   12bb4:	andeq	r3, r1, r0, ror #5
   12bb8:	andeq	r3, r1, ip, asr #1
   12bbc:	andeq	r3, r1, ip, asr #1
   12bc0:	andeq	r3, r1, ip, asr #1
   12bc4:	andeq	r3, r1, ip, asr #1
   12bc8:	andeq	r3, r1, ip, asr #1
   12bcc:	andeq	r3, r1, ip, asr #1
   12bd0:	andeq	r3, r1, ip, asr #1
   12bd4:	andeq	r3, r1, ip, asr #1
   12bd8:	andeq	r3, r1, ip, asr #1
   12bdc:	andeq	r3, r1, ip, asr #1
   12be0:	andeq	r3, r1, ip, asr #1
   12be4:	andeq	r3, r1, ip, asr #1
   12be8:	andeq	r3, r1, ip, asr #1
   12bec:	andeq	r3, r1, ip, asr #1
   12bf0:	andeq	r3, r1, ip, asr #1
   12bf4:	andeq	r3, r1, ip, asr #1
   12bf8:	andeq	r3, r1, r0, ror #5
   12bfc:	andeq	r3, r1, r0, ror #5
   12c00:	andeq	r3, r1, r0, ror #5
   12c04:	andeq	r3, r1, r0, ror #5
   12c08:	andeq	r3, r1, r8, asr r0
   12c0c:	andeq	r3, r1, r0, lsr #24
   12c10:	andeq	r3, r1, ip, asr #1
   12c14:	andeq	r3, r1, ip, asr #1
   12c18:	andeq	r3, r1, ip, asr #1
   12c1c:	andeq	r3, r1, ip, asr #1
   12c20:	andeq	r3, r1, ip, asr #1
   12c24:	andeq	r3, r1, ip, asr #1
   12c28:	andeq	r3, r1, ip, asr #1
   12c2c:	andeq	r3, r1, ip, asr #1
   12c30:	andeq	r3, r1, ip, asr #1
   12c34:	andeq	r3, r1, ip, asr #1
   12c38:	andeq	r3, r1, ip, asr #1
   12c3c:	andeq	r3, r1, ip, asr #1
   12c40:	andeq	r3, r1, ip, asr #1
   12c44:	andeq	r3, r1, ip, asr #1
   12c48:	andeq	r3, r1, ip, asr #1
   12c4c:	andeq	r3, r1, ip, asr #1
   12c50:	andeq	r3, r1, ip, asr #1
   12c54:	andeq	r3, r1, ip, asr #1
   12c58:	andeq	r3, r1, ip, asr #1
   12c5c:	andeq	r3, r1, ip, asr #1
   12c60:	andeq	r3, r1, ip, asr #1
   12c64:	andeq	r3, r1, ip, asr #1
   12c68:	andeq	r3, r1, ip, asr #1
   12c6c:	andeq	r3, r1, ip, asr #1
   12c70:	andeq	r3, r1, ip, asr #1
   12c74:	andeq	r3, r1, ip, asr #1
   12c78:	andeq	r3, r1, r0, ror #5
   12c7c:	andeq	r3, r1, r4, lsr #32
   12c80:	andeq	r3, r1, ip, asr #1
   12c84:	andeq	r3, r1, r0, ror #5
   12c88:	andeq	r3, r1, ip, asr #1
   12c8c:	andeq	r3, r1, r0, ror #5
   12c90:	andeq	r3, r1, ip, asr #1
   12c94:	andeq	r3, r1, ip, asr #1
   12c98:	andeq	r3, r1, ip, asr #1
   12c9c:	andeq	r3, r1, ip, asr #1
   12ca0:	andeq	r3, r1, ip, asr #1
   12ca4:	andeq	r3, r1, ip, asr #1
   12ca8:	andeq	r3, r1, ip, asr #1
   12cac:	andeq	r3, r1, ip, asr #1
   12cb0:	andeq	r3, r1, ip, asr #1
   12cb4:	andeq	r3, r1, ip, asr #1
   12cb8:	andeq	r3, r1, ip, asr #1
   12cbc:	andeq	r3, r1, ip, asr #1
   12cc0:	andeq	r3, r1, ip, asr #1
   12cc4:	andeq	r3, r1, ip, asr #1
   12cc8:	andeq	r3, r1, ip, asr #1
   12ccc:	andeq	r3, r1, ip, asr #1
   12cd0:	andeq	r3, r1, ip, asr #1
   12cd4:	andeq	r3, r1, ip, asr #1
   12cd8:	andeq	r3, r1, ip, asr #1
   12cdc:	andeq	r3, r1, ip, asr #1
   12ce0:	andeq	r3, r1, ip, asr #1
   12ce4:	andeq	r3, r1, ip, asr #1
   12ce8:	andeq	r3, r1, ip, asr #1
   12cec:	andeq	r3, r1, ip, asr #1
   12cf0:	andeq	r3, r1, ip, asr #1
   12cf4:	andeq	r3, r1, ip, asr #1
   12cf8:	ldrdeq	r2, [r1], -ip
   12cfc:	andeq	r3, r1, r0, ror #5
   12d00:	ldrdeq	r2, [r1], -ip
   12d04:	andeq	r3, r1, r0, asr #5
   12d08:	mov	r3, #1
   12d0c:	str	r3, [sp, #40]	; 0x28
   12d10:	str	r3, [sp, #68]	; 0x44
   12d14:	mov	r8, #0
   12d18:	ldr	r3, [pc, #4056]	; 13cf8 <__snprintf_chk@plt+0x298c>
   12d1c:	str	r3, [sp, #72]	; 0x48
   12d20:	mov	r3, #2
   12d24:	str	r3, [sp, #176]	; 0xb0
   12d28:	ldr	r1, [sp, #56]	; 0x38
   12d2c:	mov	r2, r3
   12d30:	ldr	ip, [sp, #40]	; 0x28
   12d34:	mov	lr, r3
   12d38:	b	12a04 <__snprintf_chk@plt+0x1698>
   12d3c:	mov	r3, #1
   12d40:	str	r3, [sp, #56]	; 0x38
   12d44:	str	r3, [sp, #68]	; 0x44
   12d48:	str	r3, [sp, #40]	; 0x28
   12d4c:	ldr	r3, [pc, #4004]	; 13cf8 <__snprintf_chk@plt+0x298c>
   12d50:	mov	r8, #0
   12d54:	str	r3, [sp, #72]	; 0x48
   12d58:	b	12d20 <__snprintf_chk@plt+0x19b4>
   12d5c:	mov	r3, #1
   12d60:	str	r3, [sp, #56]	; 0x38
   12d64:	str	r3, [sp, #68]	; 0x44
   12d68:	str	r3, [sp, #40]	; 0x28
   12d6c:	ldr	r3, [pc, #3976]	; 13cfc <__snprintf_chk@plt+0x2990>
   12d70:	mov	r8, #0
   12d74:	str	r3, [sp, #72]	; 0x48
   12d78:	mov	r3, #5
   12d7c:	b	12d24 <__snprintf_chk@plt+0x19b8>
   12d80:	mov	r3, #0
   12d84:	str	r3, [sp, #40]	; 0x28
   12d88:	mov	r3, #1
   12d8c:	str	r3, [sp, #56]	; 0x38
   12d90:	mov	r8, #0
   12d94:	mov	r1, r3
   12d98:	ldr	r2, [sp, #176]	; 0xb0
   12d9c:	ldr	ip, [sp, #40]	; 0x28
   12da0:	ldr	lr, [sp, #176]	; 0xb0
   12da4:	b	12a04 <__snprintf_chk@plt+0x1698>
   12da8:	ldr	r3, [sp, #176]	; 0xb0
   12dac:	cmp	r3, #10
   12db0:	beq	12df4 <__snprintf_chk@plt+0x1a88>
   12db4:	mov	r2, #5
   12db8:	ldr	r1, [pc, #3904]	; 13d00 <__snprintf_chk@plt+0x2994>
   12dbc:	mov	r0, #0
   12dc0:	bl	110f0 <dcgettext@plt>
   12dc4:	ldr	r2, [pc, #3892]	; 13d00 <__snprintf_chk@plt+0x2994>
   12dc8:	cmp	r0, r2
   12dcc:	str	r0, [sp, #188]	; 0xbc
   12dd0:	beq	13e8c <__snprintf_chk@plt+0x2b20>
   12dd4:	mov	r2, #5
   12dd8:	ldr	r1, [pc, #3864]	; 13cf8 <__snprintf_chk@plt+0x298c>
   12ddc:	mov	r0, #0
   12de0:	bl	110f0 <dcgettext@plt>
   12de4:	ldr	r2, [pc, #3852]	; 13cf8 <__snprintf_chk@plt+0x298c>
   12de8:	cmp	r0, r2
   12dec:	str	r0, [sp, #192]	; 0xc0
   12df0:	beq	13e7c <__snprintf_chk@plt+0x2b10>
   12df4:	ldr	r8, [sp, #40]	; 0x28
   12df8:	cmp	r8, #0
   12dfc:	movne	r8, #0
   12e00:	bne	12e30 <__snprintf_chk@plt+0x1ac4>
   12e04:	ldr	r3, [sp, #188]	; 0xbc
   12e08:	ldrb	r3, [r3]
   12e0c:	cmp	r3, #0
   12e10:	beq	12e30 <__snprintf_chk@plt+0x1ac4>
   12e14:	ldr	r2, [sp, #188]	; 0xbc
   12e18:	cmp	fp, r8
   12e1c:	strbhi	r3, [r9, r8]
   12e20:	ldrb	r3, [r2, #1]!
   12e24:	add	r8, r8, #1
   12e28:	cmp	r3, #0
   12e2c:	bne	12e18 <__snprintf_chk@plt+0x1aac>
   12e30:	ldr	r0, [sp, #192]	; 0xc0
   12e34:	bl	11228 <strlen@plt>
   12e38:	ldr	r3, [sp, #192]	; 0xc0
   12e3c:	ldr	r2, [sp, #176]	; 0xb0
   12e40:	str	r3, [sp, #72]	; 0x48
   12e44:	mov	r3, #1
   12e48:	str	r3, [sp, #56]	; 0x38
   12e4c:	mov	r1, r3
   12e50:	ldr	ip, [sp, #40]	; 0x28
   12e54:	ldr	lr, [sp, #176]	; 0xb0
   12e58:	str	r0, [sp, #68]	; 0x44
   12e5c:	b	12a04 <__snprintf_chk@plt+0x1698>
   12e60:	ldr	r3, [sp, #40]	; 0x28
   12e64:	cmp	r3, #0
   12e68:	beq	13b10 <__snprintf_chk@plt+0x27a4>
   12e6c:	mov	r3, #1
   12e70:	str	r3, [sp, #68]	; 0x44
   12e74:	ldr	r3, [pc, #3708]	; 13cf8 <__snprintf_chk@plt+0x298c>
   12e78:	str	r3, [sp, #72]	; 0x48
   12e7c:	mov	r8, #0
   12e80:	ldr	r1, [sp, #56]	; 0x38
   12e84:	ldr	r2, [sp, #176]	; 0xb0
   12e88:	ldr	ip, [sp, #40]	; 0x28
   12e8c:	ldr	lr, [sp, #176]	; 0xb0
   12e90:	b	12a04 <__snprintf_chk@plt+0x1698>
   12e94:	ldr	r3, [sp, #40]	; 0x28
   12e98:	cmp	r3, #0
   12e9c:	beq	13b94 <__snprintf_chk@plt+0x2828>
   12ea0:	str	r3, [sp, #56]	; 0x38
   12ea4:	mov	r3, #1
   12ea8:	str	r3, [sp, #68]	; 0x44
   12eac:	ldr	r3, [pc, #3656]	; 13cfc <__snprintf_chk@plt+0x2990>
   12eb0:	b	12e78 <__snprintf_chk@plt+0x1b0c>
   12eb4:	ldr	r3, [sp, #40]	; 0x28
   12eb8:	cmp	r3, #0
   12ebc:	mov	r3, #1
   12ec0:	streq	r3, [sp, #56]	; 0x38
   12ec4:	beq	13b10 <__snprintf_chk@plt+0x27a4>
   12ec8:	str	r3, [sp, #68]	; 0x44
   12ecc:	ldr	r3, [pc, #3620]	; 13cf8 <__snprintf_chk@plt+0x298c>
   12ed0:	mov	r8, #0
   12ed4:	str	r3, [sp, #72]	; 0x48
   12ed8:	b	12d20 <__snprintf_chk@plt+0x19b4>
   12edc:	ldr	r3, [sp, #24]
   12ee0:	ldr	r6, [sp, #48]	; 0x30
   12ee4:	cmn	r3, #1
   12ee8:	beq	13544 <__snprintf_chk@plt+0x21d8>
   12eec:	subs	r3, r3, #1
   12ef0:	movne	r3, #1
   12ef4:	cmp	r3, #0
   12ef8:	beq	132c4 <__snprintf_chk@plt+0x1f58>
   12efc:	ldr	r1, [sp, #52]	; 0x34
   12f00:	mov	r7, r3
   12f04:	mov	r3, #0
   12f08:	str	r3, [sp, #32]
   12f0c:	ldr	r3, [sp, #60]	; 0x3c
   12f10:	orr	r2, r1, r3
   12f14:	ldr	r3, [sp, #40]	; 0x28
   12f18:	eor	r2, r2, #1
   12f1c:	orr	r2, r3, r2
   12f20:	tst	r2, #255	; 0xff
   12f24:	bne	13848 <__snprintf_chk@plt+0x24dc>
   12f28:	cmp	r6, #0
   12f2c:	bne	13108 <__snprintf_chk@plt+0x1d9c>
   12f30:	ldr	r3, [sp, #36]	; 0x24
   12f34:	add	sl, sl, #1
   12f38:	and	r3, r3, r7
   12f3c:	uxtb	r6, r3
   12f40:	cmp	r6, #0
   12f44:	beq	12f70 <__snprintf_chk@plt+0x1c04>
   12f48:	cmp	fp, r8
   12f4c:	movhi	r3, #39	; 0x27
   12f50:	strbhi	r3, [r9, r8]
   12f54:	add	r3, r8, #1
   12f58:	cmp	fp, r3
   12f5c:	movhi	r2, #39	; 0x27
   12f60:	add	r8, r8, #2
   12f64:	strbhi	r2, [r9, r3]
   12f68:	mov	r3, #0
   12f6c:	str	r3, [sp, #36]	; 0x24
   12f70:	ldr	r2, [sp, #32]
   12f74:	cmp	r8, fp
   12f78:	ldr	r3, [sp, #28]
   12f7c:	strbcc	r4, [r9, r8]
   12f80:	cmp	r2, #0
   12f84:	moveq	r3, #0
   12f88:	str	r3, [sp, #28]
   12f8c:	ldr	r3, [sp, #24]
   12f90:	add	r8, r8, #1
   12f94:	cmn	r3, #1
   12f98:	bne	12a70 <__snprintf_chk@plt+0x1704>
   12f9c:	ldr	r3, [sp, #44]	; 0x2c
   12fa0:	ldrb	r3, [r3, sl]
   12fa4:	adds	r7, r3, #0
   12fa8:	movne	r7, #1
   12fac:	cmp	r7, #0
   12fb0:	bne	12a80 <__snprintf_chk@plt+0x1714>
   12fb4:	ldr	r3, [sp, #64]	; 0x40
   12fb8:	cmp	r8, #0
   12fbc:	movne	r3, #0
   12fc0:	andeq	r3, r3, #1
   12fc4:	cmp	r3, #0
   12fc8:	str	r3, [sp, #64]	; 0x40
   12fcc:	bne	13a70 <__snprintf_chk@plt+0x2704>
   12fd0:	ldr	r3, [sp, #40]	; 0x28
   12fd4:	ldr	r2, [sp, #52]	; 0x34
   12fd8:	eor	r3, r3, #1
   12fdc:	ands	r2, r2, r3
   12fe0:	beq	13e9c <__snprintf_chk@plt+0x2b30>
   12fe4:	ldr	r3, [sp, #76]	; 0x4c
   12fe8:	cmp	r3, #0
   12fec:	beq	13e6c <__snprintf_chk@plt+0x2b00>
   12ff0:	ldr	r3, [sp, #28]
   12ff4:	cmp	r3, #0
   12ff8:	bne	13e28 <__snprintf_chk@plt+0x2abc>
   12ffc:	ldr	r2, [sp, #84]	; 0x54
   13000:	clz	r3, fp
   13004:	cmp	r2, #0
   13008:	lsr	r3, r3, #5
   1300c:	moveq	r3, #0
   13010:	cmp	r3, #0
   13014:	beq	13dc8 <__snprintf_chk@plt+0x2a5c>
   13018:	mov	fp, r2
   1301c:	str	r3, [sp, #76]	; 0x4c
   13020:	b	129ac <__snprintf_chk@plt+0x1640>
   13024:	ldr	r3, [sp, #176]	; 0xb0
   13028:	ldr	r6, [sp, #48]	; 0x30
   1302c:	cmp	r3, #2
   13030:	beq	13568 <__snprintf_chk@plt+0x21fc>
   13034:	ldr	r3, [sp, #88]	; 0x58
   13038:	cmp	r3, #0
   1303c:	beq	13aec <__snprintf_chk@plt+0x2780>
   13040:	mov	r3, #0
   13044:	add	sl, sl, #1
   13048:	ldr	r6, [sp, #36]	; 0x24
   1304c:	str	r3, [sp, #32]
   13050:	mov	r4, #92	; 0x5c
   13054:	b	12f40 <__snprintf_chk@plt+0x1bd4>
   13058:	ldr	r3, [sp, #176]	; 0xb0
   1305c:	ldr	r6, [sp, #48]	; 0x30
   13060:	cmp	r3, #2
   13064:	beq	13598 <__snprintf_chk@plt+0x222c>
   13068:	cmp	r3, #5
   1306c:	bne	13afc <__snprintf_chk@plt+0x2790>
   13070:	ldr	r3, [sp, #100]	; 0x64
   13074:	cmp	r3, #0
   13078:	beq	13b60 <__snprintf_chk@plt+0x27f4>
   1307c:	ldr	r2, [sp, #24]
   13080:	add	r3, sl, #2
   13084:	cmp	r2, r3
   13088:	bls	13098 <__snprintf_chk@plt+0x1d2c>
   1308c:	ldrb	r4, [r5, #1]
   13090:	cmp	r4, #63	; 0x3f
   13094:	beq	13d08 <__snprintf_chk@plt+0x299c>
   13098:	mov	r1, #0
   1309c:	str	r1, [sp, #32]
   130a0:	mov	r4, #63	; 0x3f
   130a4:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   130a8:	ldr	r3, [sp, #176]	; 0xb0
   130ac:	ldr	r6, [sp, #48]	; 0x30
   130b0:	cmp	r3, #2
   130b4:	beq	135c4 <__snprintf_chk@plt+0x2258>
   130b8:	str	r7, [sp, #32]
   130bc:	str	r7, [sp, #76]	; 0x4c
   130c0:	mov	r1, #0
   130c4:	mov	r4, #39	; 0x27
   130c8:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   130cc:	ldr	r6, [sp, #48]	; 0x30
   130d0:	ldr	r1, [sp, #52]	; 0x34
   130d4:	str	r7, [sp, #32]
   130d8:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   130dc:	ldr	r6, [sp, #48]	; 0x30
   130e0:	ldr	r1, [sp, #52]	; 0x34
   130e4:	mov	r4, #12
   130e8:	mov	r3, #102	; 0x66
   130ec:	ldr	r2, [sp, #56]	; 0x38
   130f0:	cmp	r2, #0
   130f4:	streq	r2, [sp, #32]
   130f8:	beq	12f0c <__snprintf_chk@plt+0x1ba0>
   130fc:	mov	r4, r3
   13100:	mov	r3, #0
   13104:	str	r3, [sp, #32]
   13108:	ldr	r3, [sp, #40]	; 0x28
   1310c:	cmp	r3, #0
   13110:	bne	13880 <__snprintf_chk@plt+0x2514>
   13114:	ldr	r3, [sp, #36]	; 0x24
   13118:	eor	r3, r3, #1
   1311c:	and	r3, r3, r1
   13120:	ands	r3, r3, #255	; 0xff
   13124:	beq	1315c <__snprintf_chk@plt+0x1df0>
   13128:	cmp	fp, r8
   1312c:	movhi	r2, #39	; 0x27
   13130:	strbhi	r2, [r9, r8]
   13134:	add	r2, r8, #1
   13138:	cmp	fp, r2
   1313c:	movhi	r1, #36	; 0x24
   13140:	strbhi	r1, [r9, r2]
   13144:	add	r2, r8, #2
   13148:	cmp	fp, r2
   1314c:	add	r8, r8, #3
   13150:	movhi	r1, #39	; 0x27
   13154:	strbhi	r1, [r9, r2]
   13158:	str	r3, [sp, #36]	; 0x24
   1315c:	cmp	fp, r8
   13160:	movhi	r3, #92	; 0x5c
   13164:	strbhi	r3, [r9, r8]
   13168:	add	sl, sl, #1
   1316c:	add	r8, r8, #1
   13170:	b	12f70 <__snprintf_chk@plt+0x1c04>
   13174:	ldr	r6, [sp, #48]	; 0x30
   13178:	mov	r4, #10
   1317c:	mov	r3, #110	; 0x6e
   13180:	ldr	r2, [sp, #64]	; 0x40
   13184:	cmp	r2, #0
   13188:	bne	13c08 <__snprintf_chk@plt+0x289c>
   1318c:	ldr	r1, [sp, #52]	; 0x34
   13190:	b	130ec <__snprintf_chk@plt+0x1d80>
   13194:	ldr	r6, [sp, #48]	; 0x30
   13198:	ldr	r1, [sp, #52]	; 0x34
   1319c:	mov	r3, #116	; 0x74
   131a0:	b	130ec <__snprintf_chk@plt+0x1d80>
   131a4:	ldr	r6, [sp, #48]	; 0x30
   131a8:	ldr	r1, [sp, #52]	; 0x34
   131ac:	mov	r4, #11
   131b0:	mov	r3, #118	; 0x76
   131b4:	b	130ec <__snprintf_chk@plt+0x1d80>
   131b8:	ldr	r6, [sp, #48]	; 0x30
   131bc:	ldr	r1, [sp, #52]	; 0x34
   131c0:	mov	r4, #8
   131c4:	mov	r3, #98	; 0x62
   131c8:	b	130ec <__snprintf_chk@plt+0x1d80>
   131cc:	ldr	r6, [sp, #48]	; 0x30
   131d0:	ldr	r1, [sp, #52]	; 0x34
   131d4:	mov	r4, #7
   131d8:	mov	r3, #97	; 0x61
   131dc:	b	130ec <__snprintf_chk@plt+0x1d80>
   131e0:	ldr	r3, [sp, #56]	; 0x38
   131e4:	ldr	r6, [sp, #48]	; 0x30
   131e8:	cmp	r3, #0
   131ec:	beq	136b0 <__snprintf_chk@plt+0x2344>
   131f0:	ldr	r3, [sp, #40]	; 0x28
   131f4:	cmp	r3, #0
   131f8:	bne	13ce4 <__snprintf_chk@plt+0x2978>
   131fc:	ldr	r3, [sp, #36]	; 0x24
   13200:	ldr	r2, [sp, #52]	; 0x34
   13204:	eor	r3, r3, #1
   13208:	ands	r3, r2, r3
   1320c:	moveq	r2, r8
   13210:	beq	13248 <__snprintf_chk@plt+0x1edc>
   13214:	cmp	fp, r8
   13218:	movhi	r2, #39	; 0x27
   1321c:	strbhi	r2, [r9, r8]
   13220:	add	r2, r8, #1
   13224:	cmp	fp, r2
   13228:	movhi	r1, #36	; 0x24
   1322c:	strbhi	r1, [r9, r2]
   13230:	add	r2, r8, #2
   13234:	cmp	fp, r2
   13238:	movhi	r1, #39	; 0x27
   1323c:	strbhi	r1, [r9, r2]
   13240:	add	r2, r8, #3
   13244:	str	r3, [sp, #36]	; 0x24
   13248:	cmp	fp, r2
   1324c:	movhi	r3, #92	; 0x5c
   13250:	strbhi	r3, [r9, r2]
   13254:	ldr	r3, [sp, #92]	; 0x5c
   13258:	add	r8, r2, #1
   1325c:	cmp	r3, #0
   13260:	beq	13be4 <__snprintf_chk@plt+0x2878>
   13264:	ldr	r1, [sp, #24]
   13268:	add	r3, sl, #1
   1326c:	cmp	r1, r3
   13270:	bls	132a8 <__snprintf_chk@plt+0x1f3c>
   13274:	ldr	r1, [sp, #44]	; 0x2c
   13278:	ldrb	r3, [r1, r3]
   1327c:	sub	r3, r3, #48	; 0x30
   13280:	cmp	r3, #9
   13284:	bhi	132a8 <__snprintf_chk@plt+0x1f3c>
   13288:	cmp	fp, r8
   1328c:	movhi	r3, #48	; 0x30
   13290:	strbhi	r3, [r9, r8]
   13294:	add	r3, r2, #2
   13298:	cmp	fp, r3
   1329c:	add	r8, r2, #3
   132a0:	movhi	r1, #48	; 0x30
   132a4:	strbhi	r1, [r9, r3]
   132a8:	ldr	r3, [sp, #40]	; 0x28
   132ac:	ldr	r1, [sp, #52]	; 0x34
   132b0:	mov	r7, r3
   132b4:	str	r3, [sp, #32]
   132b8:	mov	r4, #48	; 0x30
   132bc:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   132c0:	ldr	r6, [sp, #48]	; 0x30
   132c4:	cmp	sl, #0
   132c8:	streq	r7, [sp, #32]
   132cc:	beq	132ec <__snprintf_chk@plt+0x1f80>
   132d0:	mov	r3, #0
   132d4:	ldr	r1, [sp, #52]	; 0x34
   132d8:	str	r3, [sp, #32]
   132dc:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   132e0:	ldr	r6, [sp, #48]	; 0x30
   132e4:	mov	r3, #0
   132e8:	str	r3, [sp, #32]
   132ec:	ldr	r3, [sp, #64]	; 0x40
   132f0:	cmp	r3, #0
   132f4:	bne	13a70 <__snprintf_chk@plt+0x2704>
   132f8:	ldr	r1, [sp, #52]	; 0x34
   132fc:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   13300:	ldr	r3, [sp, #48]	; 0x30
   13304:	mov	r6, r3
   13308:	str	r3, [sp, #32]
   1330c:	b	132ec <__snprintf_chk@plt+0x1f80>
   13310:	ldr	r6, [sp, #48]	; 0x30
   13314:	mov	r4, #13
   13318:	mov	r3, #114	; 0x72
   1331c:	b	13180 <__snprintf_chk@plt+0x1e14>
   13320:	ldr	r3, [sp, #44]	; 0x2c
   13324:	add	r5, r3, sl
   13328:	ldrb	r4, [r5]
   1332c:	cmp	r4, #126	; 0x7e
   13330:	ldrls	pc, [pc, r4, lsl #2]
   13334:	b	136d0 <__snprintf_chk@plt+0x2364>
   13338:	andeq	r3, r1, r0, lsr #13
   1333c:	ldrdeq	r3, [r1], -r0
   13340:	ldrdeq	r3, [r1], -r0
   13344:	ldrdeq	r3, [r1], -r0
   13348:	ldrdeq	r3, [r1], -r0
   1334c:	ldrdeq	r3, [r1], -r0
   13350:	ldrdeq	r3, [r1], -r0
   13354:	muleq	r1, r8, r6
   13358:	muleq	r1, r0, r6
   1335c:	andeq	r3, r1, r4, lsl #13
   13360:	andeq	r3, r1, ip, ror r6
   13364:	andeq	r3, r1, r4, ror r6
   13368:	andeq	r3, r1, ip, ror #12
   1336c:	andeq	r3, r1, r4, ror #12
   13370:	ldrdeq	r3, [r1], -r0
   13374:	ldrdeq	r3, [r1], -r0
   13378:	ldrdeq	r3, [r1], -r0
   1337c:	ldrdeq	r3, [r1], -r0
   13380:	ldrdeq	r3, [r1], -r0
   13384:	ldrdeq	r3, [r1], -r0
   13388:	ldrdeq	r3, [r1], -r0
   1338c:	ldrdeq	r3, [r1], -r0
   13390:	ldrdeq	r3, [r1], -r0
   13394:	ldrdeq	r3, [r1], -r0
   13398:	ldrdeq	r3, [r1], -r0
   1339c:	ldrdeq	r3, [r1], -r0
   133a0:	ldrdeq	r3, [r1], -r0
   133a4:	ldrdeq	r3, [r1], -r0
   133a8:	ldrdeq	r3, [r1], -r0
   133ac:	ldrdeq	r3, [r1], -r0
   133b0:	ldrdeq	r3, [r1], -r0
   133b4:	ldrdeq	r3, [r1], -r0
   133b8:	andeq	r3, r1, r8, asr r6
   133bc:	andeq	r3, r1, r0, asr r6
   133c0:	andeq	r3, r1, r0, asr r6
   133c4:	andeq	r3, r1, r8, asr #12
   133c8:	andeq	r3, r1, r0, asr r6
   133cc:	andeq	r3, r1, r0, asr #12
   133d0:	andeq	r3, r1, r0, asr r6
   133d4:			; <UNDEFINED> instruction: 0x000135b4
   133d8:	andeq	r3, r1, r0, asr r6
   133dc:	andeq	r3, r1, r0, asr r6
   133e0:	andeq	r3, r1, r0, asr r6
   133e4:	andeq	r3, r1, r0, asr #12
   133e8:	andeq	r3, r1, r0, asr #12
   133ec:	andeq	r3, r1, r0, asr #12
   133f0:	andeq	r3, r1, r0, asr #12
   133f4:	andeq	r3, r1, r0, asr #12
   133f8:	andeq	r3, r1, r0, asr #12
   133fc:	andeq	r3, r1, r0, asr #12
   13400:	andeq	r3, r1, r0, asr #12
   13404:	andeq	r3, r1, r0, asr #12
   13408:	andeq	r3, r1, r0, asr #12
   1340c:	andeq	r3, r1, r0, asr #12
   13410:	andeq	r3, r1, r0, asr #12
   13414:	andeq	r3, r1, r0, asr #12
   13418:	andeq	r3, r1, r0, asr #12
   1341c:	andeq	r3, r1, r0, asr #12
   13420:	andeq	r3, r1, r0, asr #12
   13424:	andeq	r3, r1, r0, asr r6
   13428:	andeq	r3, r1, r0, asr r6
   1342c:	andeq	r3, r1, r0, asr r6
   13430:	andeq	r3, r1, r0, asr r6
   13434:	andeq	r3, r1, r8, lsl #11
   13438:	ldrdeq	r3, [r1], -r0
   1343c:	andeq	r3, r1, r0, asr #12
   13440:	andeq	r3, r1, r0, asr #12
   13444:	andeq	r3, r1, r0, asr #12
   13448:	andeq	r3, r1, r0, asr #12
   1344c:	andeq	r3, r1, r0, asr #12
   13450:	andeq	r3, r1, r0, asr #12
   13454:	andeq	r3, r1, r0, asr #12
   13458:	andeq	r3, r1, r0, asr #12
   1345c:	andeq	r3, r1, r0, asr #12
   13460:	andeq	r3, r1, r0, asr #12
   13464:	andeq	r3, r1, r0, asr #12
   13468:	andeq	r3, r1, r0, asr #12
   1346c:	andeq	r3, r1, r0, asr #12
   13470:	andeq	r3, r1, r0, asr #12
   13474:	andeq	r3, r1, r0, asr #12
   13478:	andeq	r3, r1, r0, asr #12
   1347c:	andeq	r3, r1, r0, asr #12
   13480:	andeq	r3, r1, r0, asr #12
   13484:	andeq	r3, r1, r0, asr #12
   13488:	andeq	r3, r1, r0, asr #12
   1348c:	andeq	r3, r1, r0, asr #12
   13490:	andeq	r3, r1, r0, asr #12
   13494:	andeq	r3, r1, r0, asr #12
   13498:	andeq	r3, r1, r0, asr #12
   1349c:	andeq	r3, r1, r0, asr #12
   134a0:	andeq	r3, r1, r0, asr #12
   134a4:	andeq	r3, r1, r0, asr r6
   134a8:	andeq	r3, r1, r8, asr r5
   134ac:	andeq	r3, r1, r0, asr #12
   134b0:	andeq	r3, r1, r0, asr r6
   134b4:	andeq	r3, r1, r0, asr #12
   134b8:	andeq	r3, r1, r0, asr r6
   134bc:	andeq	r3, r1, r0, asr #12
   134c0:	andeq	r3, r1, r0, asr #12
   134c4:	andeq	r3, r1, r0, asr #12
   134c8:	andeq	r3, r1, r0, asr #12
   134cc:	andeq	r3, r1, r0, asr #12
   134d0:	andeq	r3, r1, r0, asr #12
   134d4:	andeq	r3, r1, r0, asr #12
   134d8:	andeq	r3, r1, r0, asr #12
   134dc:	andeq	r3, r1, r0, asr #12
   134e0:	andeq	r3, r1, r0, asr #12
   134e4:	andeq	r3, r1, r0, asr #12
   134e8:	andeq	r3, r1, r0, asr #12
   134ec:	andeq	r3, r1, r0, asr #12
   134f0:	andeq	r3, r1, r0, asr #12
   134f4:	andeq	r3, r1, r0, asr #12
   134f8:	andeq	r3, r1, r0, asr #12
   134fc:	andeq	r3, r1, r0, asr #12
   13500:	andeq	r3, r1, r0, asr #12
   13504:	andeq	r3, r1, r0, asr #12
   13508:	andeq	r3, r1, r0, asr #12
   1350c:	andeq	r3, r1, r0, asr #12
   13510:	andeq	r3, r1, r0, asr #12
   13514:	andeq	r3, r1, r0, asr #12
   13518:	andeq	r3, r1, r0, asr #12
   1351c:	andeq	r3, r1, r0, asr #12
   13520:	andeq	r3, r1, r0, asr #12
   13524:	andeq	r3, r1, r4, lsr r5
   13528:	andeq	r3, r1, r0, asr r6
   1352c:	andeq	r3, r1, r4, lsr r5
   13530:	andeq	r3, r1, r8, asr #12
   13534:	ldr	r3, [sp, #24]
   13538:	mov	r6, #0
   1353c:	cmn	r3, #1
   13540:	bne	12eec <__snprintf_chk@plt+0x1b80>
   13544:	ldr	r3, [sp, #44]	; 0x2c
   13548:	ldrb	r3, [r3, #1]
   1354c:	adds	r3, r3, #0
   13550:	movne	r3, #1
   13554:	b	12ef4 <__snprintf_chk@plt+0x1b88>
   13558:	ldr	r3, [sp, #176]	; 0xb0
   1355c:	mov	r6, #0
   13560:	cmp	r3, #2
   13564:	bne	13034 <__snprintf_chk@plt+0x1cc8>
   13568:	ldr	r3, [sp, #64]	; 0x40
   1356c:	cmp	r3, #0
   13570:	bne	13da8 <__snprintf_chk@plt+0x2a3c>
   13574:	add	sl, sl, #1
   13578:	ldr	r6, [sp, #36]	; 0x24
   1357c:	str	r3, [sp, #32]
   13580:	mov	r4, #92	; 0x5c
   13584:	b	12f40 <__snprintf_chk@plt+0x1bd4>
   13588:	ldr	r3, [sp, #176]	; 0xb0
   1358c:	mov	r6, #0
   13590:	cmp	r3, #2
   13594:	bne	13068 <__snprintf_chk@plt+0x1cfc>
   13598:	ldr	r3, [sp, #40]	; 0x28
   1359c:	cmp	r3, #0
   135a0:	bne	13884 <__snprintf_chk@plt+0x2518>
   135a4:	mov	r1, r7
   135a8:	str	r3, [sp, #32]
   135ac:	mov	r4, #63	; 0x3f
   135b0:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   135b4:	ldr	r3, [sp, #176]	; 0xb0
   135b8:	mov	r6, #0
   135bc:	cmp	r3, #2
   135c0:	bne	130b8 <__snprintf_chk@plt+0x1d4c>
   135c4:	ldr	r3, [sp, #64]	; 0x40
   135c8:	cmp	r3, #0
   135cc:	bne	13da8 <__snprintf_chk@plt+0x2a3c>
   135d0:	ldr	r2, [sp, #84]	; 0x54
   135d4:	adds	r3, fp, #0
   135d8:	movne	r3, #1
   135dc:	cmp	r2, #0
   135e0:	movne	r3, #0
   135e4:	cmp	r3, #0
   135e8:	strne	fp, [sp, #84]	; 0x54
   135ec:	movne	fp, #0
   135f0:	bne	13620 <__snprintf_chk@plt+0x22b4>
   135f4:	cmp	fp, r8
   135f8:	movhi	r3, #39	; 0x27
   135fc:	strbhi	r3, [r9, r8]
   13600:	add	r3, r8, #1
   13604:	cmp	fp, r3
   13608:	movhi	r2, #92	; 0x5c
   1360c:	strbhi	r2, [r9, r3]
   13610:	add	r3, r8, #2
   13614:	cmp	fp, r3
   13618:	movhi	r2, #39	; 0x27
   1361c:	strbhi	r2, [r9, r3]
   13620:	ldr	r3, [sp, #64]	; 0x40
   13624:	add	r8, r8, #3
   13628:	mov	r1, r7
   1362c:	str	r7, [sp, #32]
   13630:	str	r7, [sp, #76]	; 0x4c
   13634:	str	r3, [sp, #36]	; 0x24
   13638:	mov	r4, #39	; 0x27
   1363c:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   13640:	mov	r6, #0
   13644:	b	130d0 <__snprintf_chk@plt+0x1d64>
   13648:	mov	r6, #0
   1364c:	b	132c4 <__snprintf_chk@plt+0x1f58>
   13650:	mov	r6, #0
   13654:	b	132e4 <__snprintf_chk@plt+0x1f78>
   13658:	str	r7, [sp, #32]
   1365c:	mov	r6, #0
   13660:	b	132ec <__snprintf_chk@plt+0x1f80>
   13664:	mov	r6, #0
   13668:	b	13314 <__snprintf_chk@plt+0x1fa8>
   1366c:	mov	r6, #0
   13670:	b	130e0 <__snprintf_chk@plt+0x1d74>
   13674:	mov	r6, #0
   13678:	b	131a8 <__snprintf_chk@plt+0x1e3c>
   1367c:	mov	r6, #0
   13680:	b	13178 <__snprintf_chk@plt+0x1e0c>
   13684:	mov	r6, #0
   13688:	mov	r3, #116	; 0x74
   1368c:	b	13180 <__snprintf_chk@plt+0x1e14>
   13690:	mov	r6, #0
   13694:	b	131bc <__snprintf_chk@plt+0x1e50>
   13698:	mov	r6, #0
   1369c:	b	131d0 <__snprintf_chk@plt+0x1e64>
   136a0:	ldr	r3, [sp, #56]	; 0x38
   136a4:	mov	r6, #0
   136a8:	cmp	r3, #0
   136ac:	bne	131f0 <__snprintf_chk@plt+0x1e84>
   136b0:	ldr	r3, [sp, #96]	; 0x60
   136b4:	cmp	r3, #0
   136b8:	addne	sl, sl, #1
   136bc:	bne	12a64 <__snprintf_chk@plt+0x16f8>
   136c0:	ldr	r1, [sp, #52]	; 0x34
   136c4:	str	r3, [sp, #32]
   136c8:	mov	r4, r3
   136cc:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   136d0:	mov	r6, #0
   136d4:	ldr	r3, [sp, #80]	; 0x50
   136d8:	cmp	r3, #1
   136dc:	bne	138cc <__snprintf_chk@plt+0x2560>
   136e0:	bl	11210 <__ctype_b_loc@plt>
   136e4:	ldr	r2, [sp, #80]	; 0x50
   136e8:	sxth	r3, r4
   136ec:	mov	r1, r2
   136f0:	lsl	r3, r3, #1
   136f4:	ldr	r2, [r0]
   136f8:	ldrh	r3, [r2, r3]
   136fc:	and	r3, r3, #16384	; 0x4000
   13700:	cmp	r3, #0
   13704:	movne	r3, #1
   13708:	moveq	r3, #0
   1370c:	str	r3, [sp, #32]
   13710:	moveq	r3, #1
   13714:	movne	r3, #0
   13718:	ldr	r2, [sp, #56]	; 0x38
   1371c:	and	r3, r3, r2
   13720:	ands	r3, r3, #255	; 0xff
   13724:	beq	132f8 <__snprintf_chk@plt+0x1f8c>
   13728:	add	r1, sl, r1
   1372c:	mov	r0, #0
   13730:	ldr	r7, [sp, #40]	; 0x28
   13734:	ldr	r2, [sp, #36]	; 0x24
   13738:	ldr	lr, [sp, #52]	; 0x34
   1373c:	b	137ec <__snprintf_chk@plt+0x2480>
   13740:	cmp	r7, #0
   13744:	bne	13b40 <__snprintf_chk@plt+0x27d4>
   13748:	eor	r0, r2, #1
   1374c:	ands	r0, lr, r0
   13750:	beq	13788 <__snprintf_chk@plt+0x241c>
   13754:	cmp	fp, r8
   13758:	movhi	r2, #39	; 0x27
   1375c:	strbhi	r2, [r9, r8]
   13760:	add	r2, r8, #1
   13764:	cmp	fp, r2
   13768:	movhi	ip, #36	; 0x24
   1376c:	strbhi	ip, [r9, r2]
   13770:	add	r2, r8, #2
   13774:	cmp	fp, r2
   13778:	movhi	ip, #39	; 0x27
   1377c:	strbhi	ip, [r9, r2]
   13780:	add	r8, r8, #3
   13784:	mov	r2, r0
   13788:	cmp	fp, r8
   1378c:	movhi	r0, #92	; 0x5c
   13790:	strbhi	r0, [r9, r8]
   13794:	add	r0, r8, #1
   13798:	cmp	fp, r0
   1379c:	lsrhi	ip, r4, #6
   137a0:	addhi	ip, ip, #48	; 0x30
   137a4:	strbhi	ip, [r9, r0]
   137a8:	add	ip, r8, #2
   137ac:	cmp	fp, ip
   137b0:	lsrhi	r0, r4, #3
   137b4:	andhi	r0, r0, #7
   137b8:	addhi	r0, r0, #48	; 0x30
   137bc:	add	sl, sl, #1
   137c0:	strbhi	r0, [r9, ip]
   137c4:	and	r4, r4, #7
   137c8:	cmp	sl, r1
   137cc:	add	r4, r4, #48	; 0x30
   137d0:	add	r8, r8, #3
   137d4:	bcs	13b58 <__snprintf_chk@plt+0x27ec>
   137d8:	mov	r0, r3
   137dc:	cmp	fp, r8
   137e0:	strbhi	r4, [r9, r8]
   137e4:	ldrb	r4, [r5, #1]!
   137e8:	add	r8, r8, #1
   137ec:	cmp	r3, #0
   137f0:	bne	13740 <__snprintf_chk@plt+0x23d4>
   137f4:	cmp	r6, #0
   137f8:	bne	1389c <__snprintf_chk@plt+0x2530>
   137fc:	eor	r6, r0, #1
   13800:	and	r6, r6, r2
   13804:	add	sl, sl, #1
   13808:	cmp	r1, sl
   1380c:	uxtb	r6, r6
   13810:	bls	138c4 <__snprintf_chk@plt+0x2558>
   13814:	cmp	r6, #0
   13818:	beq	137dc <__snprintf_chk@plt+0x2470>
   1381c:	cmp	fp, r8
   13820:	movhi	r2, #39	; 0x27
   13824:	strbhi	r2, [r9, r8]
   13828:	add	r2, r8, #1
   1382c:	cmp	fp, r2
   13830:	movhi	ip, #39	; 0x27
   13834:	strbhi	ip, [r9, r2]
   13838:	add	r8, r8, #2
   1383c:	mov	r6, r3
   13840:	mov	r2, r3
   13844:	b	137dc <__snprintf_chk@plt+0x2470>
   13848:	ldr	r3, [sp, #184]	; 0xb8
   1384c:	cmp	r3, #0
   13850:	beq	12f28 <__snprintf_chk@plt+0x1bbc>
   13854:	lsr	r2, r4, #5
   13858:	mov	r0, r3
   1385c:	uxtb	r2, r2
   13860:	and	r3, r4, #31
   13864:	ldr	r2, [r0, r2, lsl #2]
   13868:	lsr	r3, r2, r3
   1386c:	tst	r3, #1
   13870:	beq	12f28 <__snprintf_chk@plt+0x1bbc>
   13874:	ldr	r3, [sp, #40]	; 0x28
   13878:	cmp	r3, #0
   1387c:	beq	13114 <__snprintf_chk@plt+0x1da8>
   13880:	mov	r3, r1
   13884:	str	r3, [sp, #64]	; 0x40
   13888:	mov	sl, r9
   1388c:	ldr	r3, [sp, #56]	; 0x38
   13890:	mov	r9, fp
   13894:	ldr	r2, [sp, #64]	; 0x40
   13898:	b	13a88 <__snprintf_chk@plt+0x271c>
   1389c:	cmp	fp, r8
   138a0:	eor	r6, r0, #1
   138a4:	movhi	ip, #92	; 0x5c
   138a8:	and	r6, r6, r2
   138ac:	add	sl, sl, #1
   138b0:	strbhi	ip, [r9, r8]
   138b4:	cmp	r1, sl
   138b8:	add	r8, r8, #1
   138bc:	uxtb	r6, r6
   138c0:	bhi	13814 <__snprintf_chk@plt+0x24a8>
   138c4:	str	r2, [sp, #36]	; 0x24
   138c8:	b	12f40 <__snprintf_chk@plt+0x1bd4>
   138cc:	ldr	r3, [sp, #24]
   138d0:	cmn	r3, #1
   138d4:	mov	r3, #0
   138d8:	str	r3, [sp, #128]	; 0x80
   138dc:	str	r3, [sp, #132]	; 0x84
   138e0:	beq	13bd4 <__snprintf_chk@plt+0x2868>
   138e4:	mov	r2, r7
   138e8:	mov	r3, #0
   138ec:	str	r7, [sp, #104]	; 0x68
   138f0:	str	r5, [sp, #116]	; 0x74
   138f4:	mov	r7, r3
   138f8:	mov	r5, r2
   138fc:	str	r4, [sp, #32]
   13900:	str	r6, [sp, #108]	; 0x6c
   13904:	str	r8, [sp, #112]	; 0x70
   13908:	ldr	r3, [sp, #44]	; 0x2c
   1390c:	add	r6, sl, r7
   13910:	add	r4, r3, r6
   13914:	ldr	r3, [sp, #24]
   13918:	mov	r1, r4
   1391c:	sub	r2, r3, r6
   13920:	add	r0, sp, #124	; 0x7c
   13924:	add	r3, sp, #128	; 0x80
   13928:	bl	17f24 <__snprintf_chk@plt+0x6bb8>
   1392c:	subs	r8, r0, #0
   13930:	beq	13cb8 <__snprintf_chk@plt+0x294c>
   13934:	cmn	r8, #1
   13938:	beq	13c90 <__snprintf_chk@plt+0x2924>
   1393c:	cmn	r8, #2
   13940:	beq	13c28 <__snprintf_chk@plt+0x28bc>
   13944:	ldr	r3, [sp, #64]	; 0x40
   13948:	cmp	r3, #0
   1394c:	beq	13a0c <__snprintf_chk@plt+0x26a0>
   13950:	cmp	r8, #1
   13954:	beq	13a0c <__snprintf_chk@plt+0x26a0>
   13958:	sub	r3, r8, #1
   1395c:	add	r6, r3, r6
   13960:	ldr	r3, [sp, #44]	; 0x2c
   13964:	add	r6, r3, r6
   13968:	ldrb	r3, [r4, #1]!
   1396c:	sub	r3, r3, #91	; 0x5b
   13970:	cmp	r3, #33	; 0x21
   13974:	ldrls	pc, [pc, r3, lsl #2]
   13978:	b	13a04 <__snprintf_chk@plt+0x2698>
   1397c:	andeq	r3, r1, r0, ror sl
   13980:	andeq	r3, r1, r0, ror sl
   13984:	andeq	r3, r1, r4, lsl #20
   13988:	andeq	r3, r1, r0, ror sl
   1398c:	andeq	r3, r1, r4, lsl #20
   13990:	andeq	r3, r1, r0, ror sl
   13994:	andeq	r3, r1, r4, lsl #20
   13998:	andeq	r3, r1, r4, lsl #20
   1399c:	andeq	r3, r1, r4, lsl #20
   139a0:	andeq	r3, r1, r4, lsl #20
   139a4:	andeq	r3, r1, r4, lsl #20
   139a8:	andeq	r3, r1, r4, lsl #20
   139ac:	andeq	r3, r1, r4, lsl #20
   139b0:	andeq	r3, r1, r4, lsl #20
   139b4:	andeq	r3, r1, r4, lsl #20
   139b8:	andeq	r3, r1, r4, lsl #20
   139bc:	andeq	r3, r1, r4, lsl #20
   139c0:	andeq	r3, r1, r4, lsl #20
   139c4:	andeq	r3, r1, r4, lsl #20
   139c8:	andeq	r3, r1, r4, lsl #20
   139cc:	andeq	r3, r1, r4, lsl #20
   139d0:	andeq	r3, r1, r4, lsl #20
   139d4:	andeq	r3, r1, r4, lsl #20
   139d8:	andeq	r3, r1, r4, lsl #20
   139dc:	andeq	r3, r1, r4, lsl #20
   139e0:	andeq	r3, r1, r4, lsl #20
   139e4:	andeq	r3, r1, r4, lsl #20
   139e8:	andeq	r3, r1, r4, lsl #20
   139ec:	andeq	r3, r1, r4, lsl #20
   139f0:	andeq	r3, r1, r4, lsl #20
   139f4:	andeq	r3, r1, r4, lsl #20
   139f8:	andeq	r3, r1, r4, lsl #20
   139fc:	andeq	r3, r1, r4, lsl #20
   13a00:	andeq	r3, r1, r0, ror sl
   13a04:	cmp	r6, r4
   13a08:	bne	13968 <__snprintf_chk@plt+0x25fc>
   13a0c:	ldr	r0, [sp, #124]	; 0x7c
   13a10:	bl	1112c <iswprint@plt>
   13a14:	add	r7, r7, r8
   13a18:	cmp	r0, #0
   13a1c:	add	r0, sp, #128	; 0x80
   13a20:	moveq	r5, #0
   13a24:	bl	110c0 <mbsinit@plt>
   13a28:	cmp	r0, #0
   13a2c:	beq	13908 <__snprintf_chk@plt+0x259c>
   13a30:	ldr	r4, [sp, #32]
   13a34:	str	r5, [sp, #32]
   13a38:	ldr	r3, [sp, #32]
   13a3c:	mov	r1, r7
   13a40:	eor	r3, r3, #1
   13a44:	ldr	r7, [sp, #104]	; 0x68
   13a48:	ldr	r6, [sp, #108]	; 0x6c
   13a4c:	ldr	r8, [sp, #112]	; 0x70
   13a50:	ldr	r5, [sp, #116]	; 0x74
   13a54:	uxtb	r3, r3
   13a58:	cmp	r1, #1
   13a5c:	bls	13718 <__snprintf_chk@plt+0x23ac>
   13a60:	ldr	r2, [sp, #56]	; 0x38
   13a64:	and	r3, r3, r2
   13a68:	uxtb	r3, r3
   13a6c:	b	13728 <__snprintf_chk@plt+0x23bc>
   13a70:	mov	r3, #2
   13a74:	str	r3, [sp, #176]	; 0xb0
   13a78:	ldr	r2, [sp, #64]	; 0x40
   13a7c:	ldr	r3, [sp, #56]	; 0x38
   13a80:	mov	sl, r9
   13a84:	mov	r9, fp
   13a88:	and	r3, r3, r2
   13a8c:	tst	r3, #255	; 0xff
   13a90:	ldr	r3, [sp, #176]	; 0xb0
   13a94:	movne	r3, #4
   13a98:	str	r3, [sp, #176]	; 0xb0
   13a9c:	ldr	r3, [sp, #180]	; 0xb4
   13aa0:	mov	ip, #0
   13aa4:	bic	r3, r3, #2
   13aa8:	str	r3, [sp, #4]
   13aac:	ldr	r3, [sp, #192]	; 0xc0
   13ab0:	ldr	r2, [sp, #44]	; 0x2c
   13ab4:	str	r3, [sp, #16]
   13ab8:	ldr	r3, [sp, #188]	; 0xbc
   13abc:	mov	r1, r9
   13ac0:	str	r3, [sp, #12]
   13ac4:	ldr	r3, [sp, #176]	; 0xb0
   13ac8:	mov	r0, sl
   13acc:	str	r3, [sp]
   13ad0:	str	ip, [sp, #8]
   13ad4:	ldr	r3, [sp, #24]
   13ad8:	bl	12938 <__snprintf_chk@plt+0x15cc>
   13adc:	mov	fp, r0
   13ae0:	mov	r0, fp
   13ae4:	add	sp, sp, #140	; 0x8c
   13ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13aec:	mov	r4, #92	; 0x5c
   13af0:	mov	r1, #0
   13af4:	mov	r3, r4
   13af8:	b	130ec <__snprintf_chk@plt+0x1d80>
   13afc:	mov	r3, #0
   13b00:	ldr	r1, [sp, #52]	; 0x34
   13b04:	str	r3, [sp, #32]
   13b08:	mov	r4, #63	; 0x3f
   13b0c:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   13b10:	cmp	fp, #0
   13b14:	beq	13b70 <__snprintf_chk@plt+0x2804>
   13b18:	mov	r3, #39	; 0x27
   13b1c:	strb	r3, [r9]
   13b20:	mov	r3, #0
   13b24:	str	r3, [sp, #40]	; 0x28
   13b28:	mov	r3, #1
   13b2c:	str	r3, [sp, #68]	; 0x44
   13b30:	ldr	r3, [pc, #448]	; 13cf8 <__snprintf_chk@plt+0x298c>
   13b34:	mov	r8, #1
   13b38:	str	r3, [sp, #72]	; 0x48
   13b3c:	b	12d20 <__snprintf_chk@plt+0x19b4>
   13b40:	ldr	r3, [sp, #40]	; 0x28
   13b44:	mov	sl, r9
   13b48:	str	r3, [sp, #56]	; 0x38
   13b4c:	mov	r9, fp
   13b50:	ldr	r2, [sp, #64]	; 0x40
   13b54:	b	13a88 <__snprintf_chk@plt+0x271c>
   13b58:	str	r2, [sp, #36]	; 0x24
   13b5c:	b	12f70 <__snprintf_chk@plt+0x1c04>
   13b60:	mov	r1, #0
   13b64:	str	r3, [sp, #32]
   13b68:	mov	r4, #63	; 0x3f
   13b6c:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   13b70:	ldr	r3, [pc, #384]	; 13cf8 <__snprintf_chk@plt+0x298c>
   13b74:	str	r3, [sp, #72]	; 0x48
   13b78:	mov	r3, #0
   13b7c:	str	r3, [sp, #40]	; 0x28
   13b80:	mov	r3, #1
   13b84:	str	r3, [sp, #68]	; 0x44
   13b88:	mov	r8, r3
   13b8c:	b	12d20 <__snprintf_chk@plt+0x19b4>
   13b90:	bl	11360 <abort@plt>
   13b94:	cmp	fp, #0
   13b98:	beq	13bf8 <__snprintf_chk@plt+0x288c>
   13b9c:	mov	r2, #1
   13ba0:	mov	r3, #34	; 0x22
   13ba4:	strb	r3, [r9]
   13ba8:	mov	r8, r2
   13bac:	mov	r3, r2
   13bb0:	str	r2, [sp, #68]	; 0x44
   13bb4:	str	r3, [sp, #56]	; 0x38
   13bb8:	ldr	r3, [pc, #316]	; 13cfc <__snprintf_chk@plt+0x2990>
   13bbc:	ldr	r1, [sp, #56]	; 0x38
   13bc0:	str	r3, [sp, #72]	; 0x48
   13bc4:	ldr	r2, [sp, #176]	; 0xb0
   13bc8:	ldr	ip, [sp, #40]	; 0x28
   13bcc:	ldr	lr, [sp, #176]	; 0xb0
   13bd0:	b	12a04 <__snprintf_chk@plt+0x1698>
   13bd4:	ldr	r0, [sp, #44]	; 0x2c
   13bd8:	bl	11228 <strlen@plt>
   13bdc:	str	r0, [sp, #24]
   13be0:	b	138e4 <__snprintf_chk@plt+0x2578>
   13be4:	mov	r7, #0
   13be8:	ldr	r1, [sp, #52]	; 0x34
   13bec:	str	r3, [sp, #32]
   13bf0:	mov	r4, #48	; 0x30
   13bf4:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   13bf8:	mov	r3, #1
   13bfc:	str	r3, [sp, #68]	; 0x44
   13c00:	mov	r8, r3
   13c04:	b	13bb4 <__snprintf_chk@plt+0x2848>
   13c08:	mov	r3, #2
   13c0c:	mov	sl, r9
   13c10:	str	r3, [sp, #176]	; 0xb0
   13c14:	mov	r9, fp
   13c18:	ldr	r3, [sp, #56]	; 0x38
   13c1c:	b	13a88 <__snprintf_chk@plt+0x271c>
   13c20:	ldr	r6, [sp, #48]	; 0x30
   13c24:	b	136d4 <__snprintf_chk@plt+0x2368>
   13c28:	ldr	r0, [sp, #24]
   13c2c:	mov	ip, r6
   13c30:	cmp	r0, ip
   13c34:	mov	r1, r7
   13c38:	mov	r2, r4
   13c3c:	ldr	r7, [sp, #104]	; 0x68
   13c40:	ldr	r4, [sp, #32]
   13c44:	ldr	r6, [sp, #108]	; 0x6c
   13c48:	ldr	r8, [sp, #112]	; 0x70
   13c4c:	ldr	r5, [sp, #116]	; 0x74
   13c50:	bls	13c80 <__snprintf_chk@plt+0x2914>
   13c54:	ldrb	r3, [r2]
   13c58:	cmp	r3, #0
   13c5c:	bne	13c70 <__snprintf_chk@plt+0x2904>
   13c60:	b	13d90 <__snprintf_chk@plt+0x2a24>
   13c64:	ldrb	r3, [r2, #1]!
   13c68:	cmp	r3, #0
   13c6c:	beq	13d90 <__snprintf_chk@plt+0x2a24>
   13c70:	add	r1, r1, #1
   13c74:	add	r3, sl, r1
   13c78:	cmp	r0, r3
   13c7c:	bhi	13c64 <__snprintf_chk@plt+0x28f8>
   13c80:	mov	r2, #0
   13c84:	mov	r3, r7
   13c88:	str	r2, [sp, #32]
   13c8c:	b	13a58 <__snprintf_chk@plt+0x26ec>
   13c90:	mov	r1, r7
   13c94:	ldr	r7, [sp, #104]	; 0x68
   13c98:	mov	r2, #0
   13c9c:	ldr	r4, [sp, #32]
   13ca0:	ldr	r6, [sp, #108]	; 0x6c
   13ca4:	ldr	r8, [sp, #112]	; 0x70
   13ca8:	ldr	r5, [sp, #116]	; 0x74
   13cac:	mov	r3, r7
   13cb0:	str	r2, [sp, #32]
   13cb4:	b	13a58 <__snprintf_chk@plt+0x26ec>
   13cb8:	mov	r3, r5
   13cbc:	eor	r3, r3, #1
   13cc0:	ldr	r4, [sp, #32]
   13cc4:	mov	r1, r7
   13cc8:	str	r5, [sp, #32]
   13ccc:	ldr	r7, [sp, #104]	; 0x68
   13cd0:	ldr	r6, [sp, #108]	; 0x6c
   13cd4:	ldr	r8, [sp, #112]	; 0x70
   13cd8:	ldr	r5, [sp, #116]	; 0x74
   13cdc:	uxtb	r3, r3
   13ce0:	b	13a58 <__snprintf_chk@plt+0x26ec>
   13ce4:	mov	sl, r9
   13ce8:	str	r3, [sp, #56]	; 0x38
   13cec:	mov	r9, fp
   13cf0:	ldr	r2, [sp, #64]	; 0x40
   13cf4:	b	13a88 <__snprintf_chk@plt+0x271c>
   13cf8:	andeq	r9, r1, r0, ror #3
   13cfc:	ldrdeq	r9, [r1], -ip
   13d00:	andeq	r9, r1, r4, ror #3
   13d04:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13d08:	ldr	r2, [sp, #44]	; 0x2c
   13d0c:	ldrb	r1, [r2, r3]
   13d10:	sub	r2, r1, #33	; 0x21
   13d14:	uxtb	r2, r2
   13d18:	cmp	r2, #29
   13d1c:	bhi	13d9c <__snprintf_chk@plt+0x2a30>
   13d20:	ldr	r0, [pc, #-36]	; 13d04 <__snprintf_chk@plt+0x2998>
   13d24:	mov	ip, #1
   13d28:	ands	r2, r0, ip, lsl r2
   13d2c:	beq	13dbc <__snprintf_chk@plt+0x2a50>
   13d30:	ldr	r2, [sp, #40]	; 0x28
   13d34:	cmp	r2, #0
   13d38:	bne	13eb0 <__snprintf_chk@plt+0x2b44>
   13d3c:	add	r2, r8, #1
   13d40:	cmp	fp, r8
   13d44:	strbhi	r4, [r9, r8]
   13d48:	cmp	fp, r2
   13d4c:	movhi	r0, #34	; 0x22
   13d50:	strbhi	r0, [r9, r2]
   13d54:	add	r2, r8, #2
   13d58:	cmp	fp, r2
   13d5c:	movhi	r0, #34	; 0x22
   13d60:	strbhi	r0, [r9, r2]
   13d64:	add	r2, r8, #3
   13d68:	cmp	fp, r2
   13d6c:	mov	sl, r3
   13d70:	ldr	r3, [sp, #40]	; 0x28
   13d74:	movhi	r0, #63	; 0x3f
   13d78:	mov	r4, r1
   13d7c:	strbhi	r0, [r9, r2]
   13d80:	add	r8, r8, #4
   13d84:	mov	r1, r3
   13d88:	str	r3, [sp, #32]
   13d8c:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   13d90:	str	r3, [sp, #32]
   13d94:	mov	r3, r7
   13d98:	b	13a58 <__snprintf_chk@plt+0x26ec>
   13d9c:	mov	r1, #0
   13da0:	str	r1, [sp, #32]
   13da4:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   13da8:	mov	sl, r9
   13dac:	ldr	r3, [sp, #56]	; 0x38
   13db0:	mov	r9, fp
   13db4:	ldr	r2, [sp, #64]	; 0x40
   13db8:	b	13a88 <__snprintf_chk@plt+0x271c>
   13dbc:	str	r2, [sp, #32]
   13dc0:	mov	r1, #0
   13dc4:	b	12f0c <__snprintf_chk@plt+0x1ba0>
   13dc8:	ldr	r2, [sp, #76]	; 0x4c
   13dcc:	mov	sl, r9
   13dd0:	mov	r9, fp
   13dd4:	mov	fp, r8
   13dd8:	ldr	r1, [sp, #72]	; 0x48
   13ddc:	cmp	r1, #0
   13de0:	moveq	r3, #0
   13de4:	andne	r3, r2, #1
   13de8:	cmp	r3, #0
   13dec:	beq	13e18 <__snprintf_chk@plt+0x2aac>
   13df0:	ldrb	r3, [r1]
   13df4:	cmp	r3, #0
   13df8:	beq	13e18 <__snprintf_chk@plt+0x2aac>
   13dfc:	mov	r2, r1
   13e00:	cmp	r9, fp
   13e04:	strbhi	r3, [sl, fp]
   13e08:	ldrb	r3, [r2, #1]!
   13e0c:	add	fp, fp, #1
   13e10:	cmp	r3, #0
   13e14:	bne	13e00 <__snprintf_chk@plt+0x2a94>
   13e18:	cmp	r9, fp
   13e1c:	movhi	r3, #0
   13e20:	strbhi	r3, [sl, fp]
   13e24:	b	13ae0 <__snprintf_chk@plt+0x2774>
   13e28:	ldr	r3, [sp, #192]	; 0xc0
   13e2c:	mov	ip, #5
   13e30:	str	r3, [sp, #16]
   13e34:	ldr	r3, [sp, #188]	; 0xbc
   13e38:	ldr	r2, [sp, #44]	; 0x2c
   13e3c:	str	r3, [sp, #12]
   13e40:	ldr	r3, [sp, #184]	; 0xb8
   13e44:	ldr	r1, [sp, #84]	; 0x54
   13e48:	str	r3, [sp, #8]
   13e4c:	ldr	r3, [sp, #180]	; 0xb4
   13e50:	mov	r0, r9
   13e54:	str	r3, [sp, #4]
   13e58:	str	ip, [sp]
   13e5c:	ldr	r3, [sp, #24]
   13e60:	bl	12938 <__snprintf_chk@plt+0x15cc>
   13e64:	mov	fp, r0
   13e68:	b	13ae0 <__snprintf_chk@plt+0x2774>
   13e6c:	mov	sl, r9
   13e70:	mov	r9, fp
   13e74:	mov	fp, r8
   13e78:	b	13dd8 <__snprintf_chk@plt+0x2a6c>
   13e7c:	ldr	r1, [sp, #176]	; 0xb0
   13e80:	bl	12818 <__snprintf_chk@plt+0x14ac>
   13e84:	str	r0, [sp, #192]	; 0xc0
   13e88:	b	12df4 <__snprintf_chk@plt+0x1a88>
   13e8c:	ldr	r1, [sp, #176]	; 0xb0
   13e90:	bl	12818 <__snprintf_chk@plt+0x14ac>
   13e94:	str	r0, [sp, #188]	; 0xbc
   13e98:	b	12dd4 <__snprintf_chk@plt+0x1a68>
   13e9c:	mov	sl, r9
   13ea0:	mov	r2, r3
   13ea4:	mov	r9, fp
   13ea8:	mov	fp, r8
   13eac:	b	13dd8 <__snprintf_chk@plt+0x2a6c>
   13eb0:	mov	sl, r9
   13eb4:	mov	r9, fp
   13eb8:	b	13a9c <__snprintf_chk@plt+0x2730>
   13ebc:	push	{r4, r5, r6, lr}
   13ec0:	mov	r5, r0
   13ec4:	bl	1124c <__errno_location@plt>
   13ec8:	cmp	r5, #0
   13ecc:	mov	r1, #48	; 0x30
   13ed0:	mov	r4, r0
   13ed4:	ldr	r0, [pc, #16]	; 13eec <__snprintf_chk@plt+0x2b80>
   13ed8:	ldr	r6, [r4]
   13edc:	movne	r0, r5
   13ee0:	bl	179c4 <__snprintf_chk@plt+0x6658>
   13ee4:	str	r6, [r4]
   13ee8:	pop	{r4, r5, r6, pc}
   13eec:	andeq	sl, r2, r8, ror #6
   13ef0:	ldr	r3, [pc, #12]	; 13f04 <__snprintf_chk@plt+0x2b98>
   13ef4:	cmp	r0, #0
   13ef8:	moveq	r0, r3
   13efc:	ldr	r0, [r0]
   13f00:	bx	lr
   13f04:	andeq	sl, r2, r8, ror #6
   13f08:	ldr	r3, [pc, #12]	; 13f1c <__snprintf_chk@plt+0x2bb0>
   13f0c:	cmp	r0, #0
   13f10:	moveq	r0, r3
   13f14:	str	r1, [r0]
   13f18:	bx	lr
   13f1c:	andeq	sl, r2, r8, ror #6
   13f20:	ldr	r3, [pc, #52]	; 13f5c <__snprintf_chk@plt+0x2bf0>
   13f24:	cmp	r0, #0
   13f28:	moveq	r0, r3
   13f2c:	add	r3, r0, #8
   13f30:	push	{lr}		; (str lr, [sp, #-4]!)
   13f34:	lsr	lr, r1, #5
   13f38:	and	r1, r1, #31
   13f3c:	ldr	ip, [r3, lr, lsl #2]
   13f40:	lsr	r0, ip, r1
   13f44:	eor	r2, r2, r0
   13f48:	and	r2, r2, #1
   13f4c:	and	r0, r0, #1
   13f50:	eor	r1, ip, r2, lsl r1
   13f54:	str	r1, [r3, lr, lsl #2]
   13f58:	pop	{pc}		; (ldr pc, [sp], #4)
   13f5c:	andeq	sl, r2, r8, ror #6
   13f60:	ldr	r3, [pc, #16]	; 13f78 <__snprintf_chk@plt+0x2c0c>
   13f64:	cmp	r0, #0
   13f68:	movne	r3, r0
   13f6c:	ldr	r0, [r3, #4]
   13f70:	str	r1, [r3, #4]
   13f74:	bx	lr
   13f78:	andeq	sl, r2, r8, ror #6
   13f7c:	ldr	r3, [pc, #44]	; 13fb0 <__snprintf_chk@plt+0x2c44>
   13f80:	cmp	r0, #0
   13f84:	moveq	r0, r3
   13f88:	mov	ip, #10
   13f8c:	cmp	r2, #0
   13f90:	cmpne	r1, #0
   13f94:	str	ip, [r0]
   13f98:	beq	13fa8 <__snprintf_chk@plt+0x2c3c>
   13f9c:	str	r1, [r0, #40]	; 0x28
   13fa0:	str	r2, [r0, #44]	; 0x2c
   13fa4:	bx	lr
   13fa8:	push	{r4, lr}
   13fac:	bl	11360 <abort@plt>
   13fb0:	andeq	sl, r2, r8, ror #6
   13fb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13fb8:	sub	sp, sp, #24
   13fbc:	ldr	ip, [pc, #108]	; 14030 <__snprintf_chk@plt+0x2cc4>
   13fc0:	ldr	r4, [sp, #56]	; 0x38
   13fc4:	mov	r9, r2
   13fc8:	cmp	r4, #0
   13fcc:	moveq	r4, ip
   13fd0:	mov	sl, r3
   13fd4:	mov	r7, r0
   13fd8:	mov	r8, r1
   13fdc:	bl	1124c <__errno_location@plt>
   13fe0:	ldr	r3, [r4, #44]	; 0x2c
   13fe4:	mov	r1, r8
   13fe8:	ldr	r6, [r0]
   13fec:	str	r3, [sp, #16]
   13ff0:	ldr	r2, [r4, #40]	; 0x28
   13ff4:	add	r3, r4, #8
   13ff8:	str	r3, [sp, #8]
   13ffc:	str	r2, [sp, #12]
   14000:	ldr	r2, [r4, #4]
   14004:	mov	r5, r0
   14008:	str	r2, [sp, #4]
   1400c:	ldr	ip, [r4]
   14010:	mov	r3, sl
   14014:	mov	r2, r9
   14018:	mov	r0, r7
   1401c:	str	ip, [sp]
   14020:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14024:	str	r6, [r5]
   14028:	add	sp, sp, #24
   1402c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14030:	andeq	sl, r2, r8, ror #6
   14034:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14038:	cmp	r2, #0
   1403c:	sub	sp, sp, #36	; 0x24
   14040:	ldr	r4, [pc, #164]	; 140ec <__snprintf_chk@plt+0x2d80>
   14044:	mov	r8, r1
   14048:	movne	r4, r2
   1404c:	mov	r7, r0
   14050:	bl	1124c <__errno_location@plt>
   14054:	ldr	r3, [r4, #44]	; 0x2c
   14058:	ldr	r5, [r4, #4]
   1405c:	add	r9, r4, #8
   14060:	orr	r5, r5, #1
   14064:	mov	r1, #0
   14068:	mov	r2, r7
   1406c:	ldr	fp, [r0]
   14070:	str	r3, [sp, #16]
   14074:	ldr	r3, [r4, #40]	; 0x28
   14078:	stmib	sp, {r5, r9}
   1407c:	str	r3, [sp, #12]
   14080:	ldr	r3, [r4]
   14084:	mov	r6, r0
   14088:	str	r3, [sp]
   1408c:	mov	r0, r1
   14090:	mov	r3, r8
   14094:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14098:	add	r1, r0, #1
   1409c:	mov	r0, r1
   140a0:	str	r1, [sp, #28]
   140a4:	bl	17480 <__snprintf_chk@plt+0x6114>
   140a8:	ldr	r3, [r4, #44]	; 0x2c
   140ac:	ldr	r1, [sp, #28]
   140b0:	str	r3, [sp, #16]
   140b4:	ldr	r3, [r4, #40]	; 0x28
   140b8:	str	r5, [sp, #4]
   140bc:	str	r3, [sp, #12]
   140c0:	str	r9, [sp, #8]
   140c4:	ldr	ip, [r4]
   140c8:	mov	r3, r8
   140cc:	mov	r2, r7
   140d0:	str	ip, [sp]
   140d4:	mov	sl, r0
   140d8:	bl	12938 <__snprintf_chk@plt+0x15cc>
   140dc:	mov	r0, sl
   140e0:	str	fp, [r6]
   140e4:	add	sp, sp, #36	; 0x24
   140e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140ec:	andeq	sl, r2, r8, ror #6
   140f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140f4:	cmp	r3, #0
   140f8:	sub	sp, sp, #44	; 0x2c
   140fc:	ldr	r4, [pc, #192]	; 141c4 <__snprintf_chk@plt+0x2e58>
   14100:	mov	r6, r2
   14104:	movne	r4, r3
   14108:	mov	r9, r1
   1410c:	mov	r8, r0
   14110:	bl	1124c <__errno_location@plt>
   14114:	ldr	r3, [r4, #44]	; 0x2c
   14118:	ldr	r5, [r4, #4]
   1411c:	add	sl, r4, #8
   14120:	cmp	r6, #0
   14124:	orreq	r5, r5, #1
   14128:	mov	r1, #0
   1412c:	ldr	r2, [r0]
   14130:	str	r3, [sp, #16]
   14134:	ldr	r3, [r4, #40]	; 0x28
   14138:	stmib	sp, {r5, sl}
   1413c:	str	r3, [sp, #12]
   14140:	ldr	r3, [r4]
   14144:	mov	r7, r0
   14148:	str	r2, [sp, #28]
   1414c:	str	r3, [sp]
   14150:	mov	r2, r8
   14154:	mov	r3, r9
   14158:	mov	r0, r1
   1415c:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14160:	add	r1, r0, #1
   14164:	mov	fp, r0
   14168:	mov	r0, r1
   1416c:	str	r1, [sp, #36]	; 0x24
   14170:	bl	17480 <__snprintf_chk@plt+0x6114>
   14174:	ldr	r3, [r4, #44]	; 0x2c
   14178:	mov	r2, r8
   1417c:	str	r3, [sp, #16]
   14180:	ldr	r3, [r4, #40]	; 0x28
   14184:	str	r5, [sp, #4]
   14188:	str	r3, [sp, #12]
   1418c:	str	sl, [sp, #8]
   14190:	ldr	ip, [r4]
   14194:	ldr	r1, [sp, #36]	; 0x24
   14198:	mov	r3, r9
   1419c:	str	ip, [sp]
   141a0:	str	r0, [sp, #32]
   141a4:	bl	12938 <__snprintf_chk@plt+0x15cc>
   141a8:	ldr	r2, [sp, #28]
   141ac:	cmp	r6, #0
   141b0:	str	r2, [r7]
   141b4:	ldr	r0, [sp, #32]
   141b8:	strne	fp, [r6]
   141bc:	add	sp, sp, #44	; 0x2c
   141c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141c4:	andeq	sl, r2, r8, ror #6
   141c8:	push	{r4, r5, r6, r7, r8, lr}
   141cc:	ldr	r6, [pc, #116]	; 14248 <__snprintf_chk@plt+0x2edc>
   141d0:	ldr	r3, [r6, #4]
   141d4:	ldr	r7, [r6]
   141d8:	cmp	r3, #1
   141dc:	movgt	r5, r7
   141e0:	movgt	r4, #1
   141e4:	ble	14204 <__snprintf_chk@plt+0x2e98>
   141e8:	ldr	r0, [r5, #12]
   141ec:	bl	1270c <__snprintf_chk@plt+0x13a0>
   141f0:	ldr	r3, [r6, #4]
   141f4:	add	r4, r4, #1
   141f8:	cmp	r3, r4
   141fc:	add	r5, r5, #8
   14200:	bgt	141e8 <__snprintf_chk@plt+0x2e7c>
   14204:	ldr	r0, [r7, #4]
   14208:	ldr	r4, [pc, #60]	; 1424c <__snprintf_chk@plt+0x2ee0>
   1420c:	cmp	r0, r4
   14210:	beq	14224 <__snprintf_chk@plt+0x2eb8>
   14214:	bl	1270c <__snprintf_chk@plt+0x13a0>
   14218:	mov	r3, #256	; 0x100
   1421c:	str	r4, [r6, #12]
   14220:	str	r3, [r6, #8]
   14224:	ldr	r4, [pc, #36]	; 14250 <__snprintf_chk@plt+0x2ee4>
   14228:	cmp	r7, r4
   1422c:	beq	1423c <__snprintf_chk@plt+0x2ed0>
   14230:	mov	r0, r7
   14234:	bl	1270c <__snprintf_chk@plt+0x13a0>
   14238:	str	r4, [r6]
   1423c:	mov	r3, #1
   14240:	str	r3, [r6, #4]
   14244:	pop	{r4, r5, r6, r7, r8, pc}
   14248:	andeq	sl, r2, r8, lsr r1
   1424c:	muleq	r2, r8, r3
   14250:	andeq	sl, r2, r0, asr #2
   14254:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14258:	sub	sp, sp, #44	; 0x2c
   1425c:	mov	r5, r0
   14260:	mov	sl, r1
   14264:	bl	1124c <__errno_location@plt>
   14268:	ldr	r4, [pc, #400]	; 14400 <__snprintf_chk@plt+0x3094>
   1426c:	cmn	r5, #-2147483647	; 0x80000001
   14270:	ldr	r6, [r4]
   14274:	mov	r8, r0
   14278:	movne	r0, #0
   1427c:	moveq	r0, #1
   14280:	ldr	r3, [r8]
   14284:	orrs	r0, r0, r5, lsr #31
   14288:	str	r3, [sp, #24]
   1428c:	bne	143fc <__snprintf_chk@plt+0x3090>
   14290:	ldr	r2, [r4, #4]
   14294:	cmp	r5, r2
   14298:	blt	142f8 <__snprintf_chk@plt+0x2f8c>
   1429c:	add	r7, r4, #8
   142a0:	cmp	r6, r7
   142a4:	str	r2, [sp, #36]	; 0x24
   142a8:	beq	143cc <__snprintf_chk@plt+0x3060>
   142ac:	mov	r3, #8
   142b0:	sub	r2, r5, r2
   142b4:	mov	r0, r6
   142b8:	str	r3, [sp]
   142bc:	add	r2, r2, #1
   142c0:	mvn	r3, #-2147483648	; 0x80000000
   142c4:	add	r1, sp, #36	; 0x24
   142c8:	bl	1769c <__snprintf_chk@plt+0x6330>
   142cc:	mov	r6, r0
   142d0:	str	r0, [r4]
   142d4:	ldr	r0, [r4, #4]
   142d8:	ldr	r2, [sp, #36]	; 0x24
   142dc:	mov	r1, #0
   142e0:	sub	r2, r2, r0
   142e4:	add	r0, r6, r0, lsl #3
   142e8:	lsl	r2, r2, #3
   142ec:	bl	11270 <memset@plt>
   142f0:	ldr	r3, [sp, #36]	; 0x24
   142f4:	str	r3, [r4, #4]
   142f8:	ldr	r4, [pc, #260]	; 14404 <__snprintf_chk@plt+0x3098>
   142fc:	add	fp, r6, r5, lsl #3
   14300:	ldr	r9, [r6, r5, lsl #3]
   14304:	ldr	r0, [r4, #4]
   14308:	ldr	r3, [r4]
   1430c:	ldr	r7, [fp, #4]
   14310:	ldr	r1, [r4, #44]	; 0x2c
   14314:	ldr	r2, [r4, #40]	; 0x28
   14318:	orr	r0, r0, #1
   1431c:	str	r3, [sp]
   14320:	add	r3, r4, #8
   14324:	str	r0, [sp, #28]
   14328:	str	r0, [sp, #4]
   1432c:	str	r1, [sp, #16]
   14330:	str	r2, [sp, #12]
   14334:	str	r3, [sp, #8]
   14338:	mov	r0, r7
   1433c:	mov	r1, r9
   14340:	mvn	r3, #0
   14344:	mov	r2, sl
   14348:	bl	12938 <__snprintf_chk@plt+0x15cc>
   1434c:	cmp	r9, r0
   14350:	bhi	143b8 <__snprintf_chk@plt+0x304c>
   14354:	add	r3, r4, #48	; 0x30
   14358:	add	r9, r0, #1
   1435c:	cmp	r7, r3
   14360:	str	r9, [r6, r5, lsl #3]
   14364:	beq	14370 <__snprintf_chk@plt+0x3004>
   14368:	mov	r0, r7
   1436c:	bl	1270c <__snprintf_chk@plt+0x13a0>
   14370:	mov	r0, r9
   14374:	bl	17480 <__snprintf_chk@plt+0x6114>
   14378:	ldr	ip, [r4, #44]	; 0x2c
   1437c:	ldr	r3, [r4]
   14380:	ldr	lr, [r4, #40]	; 0x28
   14384:	ldr	r4, [pc, #124]	; 14408 <__snprintf_chk@plt+0x309c>
   14388:	mov	r2, sl
   1438c:	mov	r1, r9
   14390:	str	r0, [fp, #4]
   14394:	str	r4, [sp, #8]
   14398:	ldr	r4, [sp, #28]
   1439c:	str	r3, [sp]
   143a0:	str	r4, [sp, #4]
   143a4:	str	ip, [sp, #16]
   143a8:	str	lr, [sp, #12]
   143ac:	mvn	r3, #0
   143b0:	mov	r7, r0
   143b4:	bl	12938 <__snprintf_chk@plt+0x15cc>
   143b8:	ldr	r3, [sp, #24]
   143bc:	mov	r0, r7
   143c0:	str	r3, [r8]
   143c4:	add	sp, sp, #44	; 0x2c
   143c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143cc:	mov	r3, #8
   143d0:	sub	r2, r5, r2
   143d4:	str	r3, [sp]
   143d8:	add	r1, sp, #36	; 0x24
   143dc:	add	r2, r2, #1
   143e0:	mvn	r3, #-2147483648	; 0x80000000
   143e4:	bl	1769c <__snprintf_chk@plt+0x6330>
   143e8:	mov	r6, r0
   143ec:	ldm	r7, {r0, r1}
   143f0:	str	r6, [r4]
   143f4:	stm	r6, {r0, r1}
   143f8:	b	142d4 <__snprintf_chk@plt+0x2f68>
   143fc:	bl	11360 <abort@plt>
   14400:	andeq	sl, r2, r8, lsr r1
   14404:	andeq	sl, r2, r8, ror #6
   14408:	andeq	sl, r2, r0, ror r3
   1440c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14410:	sub	sp, sp, #52	; 0x34
   14414:	mov	r5, r0
   14418:	mov	sl, r1
   1441c:	mov	fp, r2
   14420:	bl	1124c <__errno_location@plt>
   14424:	ldr	r4, [pc, #408]	; 145c4 <__snprintf_chk@plt+0x3258>
   14428:	cmn	r5, #-2147483647	; 0x80000001
   1442c:	ldr	r6, [r4]
   14430:	mov	r8, r0
   14434:	movne	r0, #0
   14438:	moveq	r0, #1
   1443c:	ldr	r3, [r8]
   14440:	orrs	r0, r0, r5, lsr #31
   14444:	str	r3, [sp, #28]
   14448:	bne	145c0 <__snprintf_chk@plt+0x3254>
   1444c:	ldr	r2, [r4, #4]
   14450:	cmp	r5, r2
   14454:	blt	144b4 <__snprintf_chk@plt+0x3148>
   14458:	add	r7, r4, #8
   1445c:	cmp	r6, r7
   14460:	str	r2, [sp, #44]	; 0x2c
   14464:	beq	14590 <__snprintf_chk@plt+0x3224>
   14468:	mov	r3, #8
   1446c:	sub	r2, r5, r2
   14470:	mov	r0, r6
   14474:	str	r3, [sp]
   14478:	add	r2, r2, #1
   1447c:	mvn	r3, #-2147483648	; 0x80000000
   14480:	add	r1, sp, #44	; 0x2c
   14484:	bl	1769c <__snprintf_chk@plt+0x6330>
   14488:	mov	r6, r0
   1448c:	str	r0, [r4]
   14490:	ldr	r0, [r4, #4]
   14494:	ldr	r2, [sp, #44]	; 0x2c
   14498:	mov	r1, #0
   1449c:	sub	r2, r2, r0
   144a0:	add	r0, r6, r0, lsl #3
   144a4:	lsl	r2, r2, #3
   144a8:	bl	11270 <memset@plt>
   144ac:	ldr	r3, [sp, #44]	; 0x2c
   144b0:	str	r3, [r4, #4]
   144b4:	ldr	r4, [pc, #268]	; 145c8 <__snprintf_chk@plt+0x325c>
   144b8:	add	r3, r6, r5, lsl #3
   144bc:	str	r3, [sp, #32]
   144c0:	ldr	r7, [r3, #4]
   144c4:	ldr	r0, [r4, #4]
   144c8:	ldr	r3, [r4]
   144cc:	ldr	r9, [r6, r5, lsl #3]
   144d0:	ldr	r1, [r4, #44]	; 0x2c
   144d4:	ldr	r2, [r4, #40]	; 0x28
   144d8:	orr	r0, r0, #1
   144dc:	str	r3, [sp]
   144e0:	add	r3, r4, #8
   144e4:	str	r0, [sp, #36]	; 0x24
   144e8:	str	r0, [sp, #4]
   144ec:	str	r1, [sp, #16]
   144f0:	str	r2, [sp, #12]
   144f4:	str	r3, [sp, #8]
   144f8:	mov	r0, r7
   144fc:	mov	r1, r9
   14500:	mov	r3, fp
   14504:	mov	r2, sl
   14508:	bl	12938 <__snprintf_chk@plt+0x15cc>
   1450c:	cmp	r9, r0
   14510:	bhi	1457c <__snprintf_chk@plt+0x3210>
   14514:	add	r3, r4, #48	; 0x30
   14518:	add	r9, r0, #1
   1451c:	cmp	r7, r3
   14520:	str	r9, [r6, r5, lsl #3]
   14524:	beq	14530 <__snprintf_chk@plt+0x31c4>
   14528:	mov	r0, r7
   1452c:	bl	1270c <__snprintf_chk@plt+0x13a0>
   14530:	mov	r0, r9
   14534:	bl	17480 <__snprintf_chk@plt+0x6114>
   14538:	ldr	ip, [sp, #32]
   1453c:	ldr	lr, [r4, #44]	; 0x2c
   14540:	ldr	r5, [r4, #40]	; 0x28
   14544:	mov	r3, fp
   14548:	mov	r2, sl
   1454c:	mov	r1, r9
   14550:	str	r0, [ip, #4]
   14554:	ldr	ip, [r4]
   14558:	ldr	r4, [pc, #108]	; 145cc <__snprintf_chk@plt+0x3260>
   1455c:	str	lr, [sp, #16]
   14560:	str	r4, [sp, #8]
   14564:	ldr	r4, [sp, #36]	; 0x24
   14568:	str	r5, [sp, #12]
   1456c:	str	r4, [sp, #4]
   14570:	str	ip, [sp]
   14574:	mov	r7, r0
   14578:	bl	12938 <__snprintf_chk@plt+0x15cc>
   1457c:	ldr	r3, [sp, #28]
   14580:	mov	r0, r7
   14584:	str	r3, [r8]
   14588:	add	sp, sp, #52	; 0x34
   1458c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14590:	mov	r3, #8
   14594:	sub	r2, r5, r2
   14598:	str	r3, [sp]
   1459c:	add	r1, sp, #44	; 0x2c
   145a0:	add	r2, r2, #1
   145a4:	mvn	r3, #-2147483648	; 0x80000000
   145a8:	bl	1769c <__snprintf_chk@plt+0x6330>
   145ac:	mov	r6, r0
   145b0:	ldm	r7, {r0, r1}
   145b4:	str	r6, [r4]
   145b8:	stm	r6, {r0, r1}
   145bc:	b	14490 <__snprintf_chk@plt+0x3124>
   145c0:	bl	11360 <abort@plt>
   145c4:	andeq	sl, r2, r8, lsr r1
   145c8:	andeq	sl, r2, r8, ror #6
   145cc:	andeq	sl, r2, r0, ror r3
   145d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145d4:	sub	sp, sp, #44	; 0x2c
   145d8:	mov	sl, r0
   145dc:	bl	1124c <__errno_location@plt>
   145e0:	ldr	r4, [pc, #352]	; 14748 <__snprintf_chk@plt+0x33dc>
   145e4:	ldr	r2, [r4, #4]
   145e8:	ldr	r5, [r4]
   145ec:	cmp	r2, #0
   145f0:	ldr	r3, [r0]
   145f4:	mov	r8, r0
   145f8:	str	r3, [sp, #28]
   145fc:	bgt	14658 <__snprintf_chk@plt+0x32ec>
   14600:	add	r6, r4, #8
   14604:	cmp	r5, r6
   14608:	str	r2, [sp, #36]	; 0x24
   1460c:	beq	14718 <__snprintf_chk@plt+0x33ac>
   14610:	mov	r3, #8
   14614:	mov	r0, r5
   14618:	str	r3, [sp]
   1461c:	rsb	r2, r2, #1
   14620:	mvn	r3, #-2147483648	; 0x80000000
   14624:	add	r1, sp, #36	; 0x24
   14628:	bl	1769c <__snprintf_chk@plt+0x6330>
   1462c:	mov	r5, r0
   14630:	str	r0, [r4]
   14634:	ldr	r0, [r4, #4]
   14638:	ldr	r2, [sp, #36]	; 0x24
   1463c:	mov	r1, #0
   14640:	sub	r2, r2, r0
   14644:	add	r0, r5, r0, lsl #3
   14648:	lsl	r2, r2, #3
   1464c:	bl	11270 <memset@plt>
   14650:	ldr	r3, [sp, #36]	; 0x24
   14654:	str	r3, [r4, #4]
   14658:	ldr	r4, [pc, #236]	; 1474c <__snprintf_chk@plt+0x33e0>
   1465c:	ldr	r9, [r5]
   14660:	ldr	r6, [r5, #4]
   14664:	ldr	r7, [r4, #4]
   14668:	ldr	r1, [r4, #44]	; 0x2c
   1466c:	ldr	r2, [r4, #40]	; 0x28
   14670:	ldr	r3, [r4]
   14674:	orr	r7, r7, #1
   14678:	add	fp, r4, #8
   1467c:	str	r1, [sp, #16]
   14680:	str	r2, [sp, #12]
   14684:	str	r3, [sp]
   14688:	str	r7, [sp, #4]
   1468c:	str	fp, [sp, #8]
   14690:	mov	r1, r9
   14694:	mov	r0, r6
   14698:	mvn	r3, #0
   1469c:	mov	r2, sl
   146a0:	bl	12938 <__snprintf_chk@plt+0x15cc>
   146a4:	cmp	r9, r0
   146a8:	bhi	14704 <__snprintf_chk@plt+0x3398>
   146ac:	add	r3, r4, #48	; 0x30
   146b0:	add	r9, r0, #1
   146b4:	cmp	r6, r3
   146b8:	str	r9, [r5]
   146bc:	beq	146c8 <__snprintf_chk@plt+0x335c>
   146c0:	mov	r0, r6
   146c4:	bl	1270c <__snprintf_chk@plt+0x13a0>
   146c8:	mov	r0, r9
   146cc:	bl	17480 <__snprintf_chk@plt+0x6114>
   146d0:	ldr	ip, [r4, #44]	; 0x2c
   146d4:	ldr	r3, [r4]
   146d8:	ldr	lr, [r4, #40]	; 0x28
   146dc:	mov	r2, sl
   146e0:	mov	r1, r9
   146e4:	str	r0, [r5, #4]
   146e8:	str	r3, [sp]
   146ec:	stmib	sp, {r7, fp}
   146f0:	str	ip, [sp, #16]
   146f4:	str	lr, [sp, #12]
   146f8:	mvn	r3, #0
   146fc:	mov	r6, r0
   14700:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14704:	ldr	r3, [sp, #28]
   14708:	mov	r0, r6
   1470c:	str	r3, [r8]
   14710:	add	sp, sp, #44	; 0x2c
   14714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14718:	mov	r3, #8
   1471c:	str	r3, [sp]
   14720:	add	r1, sp, #36	; 0x24
   14724:	rsb	r2, r2, #1
   14728:	mvn	r3, #-2147483648	; 0x80000000
   1472c:	mov	r0, #0
   14730:	bl	1769c <__snprintf_chk@plt+0x6330>
   14734:	mov	r5, r0
   14738:	ldm	r6, {r0, r1}
   1473c:	str	r5, [r4]
   14740:	stm	r5, {r0, r1}
   14744:	b	14634 <__snprintf_chk@plt+0x32c8>
   14748:	andeq	sl, r2, r8, lsr r1
   1474c:	andeq	sl, r2, r8, ror #6
   14750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14754:	sub	sp, sp, #44	; 0x2c
   14758:	mov	r9, r0
   1475c:	mov	sl, r1
   14760:	bl	1124c <__errno_location@plt>
   14764:	ldr	r4, [pc, #364]	; 148d8 <__snprintf_chk@plt+0x356c>
   14768:	ldr	r2, [r4, #4]
   1476c:	ldr	r5, [r4]
   14770:	cmp	r2, #0
   14774:	ldr	r3, [r0]
   14778:	mov	r7, r0
   1477c:	str	r3, [sp, #24]
   14780:	bgt	147dc <__snprintf_chk@plt+0x3470>
   14784:	add	r6, r4, #8
   14788:	cmp	r5, r6
   1478c:	str	r2, [sp, #36]	; 0x24
   14790:	beq	148a8 <__snprintf_chk@plt+0x353c>
   14794:	mov	r3, #8
   14798:	mov	r0, r5
   1479c:	str	r3, [sp]
   147a0:	rsb	r2, r2, #1
   147a4:	mvn	r3, #-2147483648	; 0x80000000
   147a8:	add	r1, sp, #36	; 0x24
   147ac:	bl	1769c <__snprintf_chk@plt+0x6330>
   147b0:	mov	r5, r0
   147b4:	str	r0, [r4]
   147b8:	ldr	r0, [r4, #4]
   147bc:	ldr	r2, [sp, #36]	; 0x24
   147c0:	mov	r1, #0
   147c4:	sub	r2, r2, r0
   147c8:	add	r0, r5, r0, lsl #3
   147cc:	lsl	r2, r2, #3
   147d0:	bl	11270 <memset@plt>
   147d4:	ldr	r3, [sp, #36]	; 0x24
   147d8:	str	r3, [r4, #4]
   147dc:	ldr	r4, [pc, #248]	; 148dc <__snprintf_chk@plt+0x3570>
   147e0:	ldr	r8, [r5]
   147e4:	ldr	r6, [r5, #4]
   147e8:	ldr	r0, [r4, #4]
   147ec:	ldr	r1, [r4, #44]	; 0x2c
   147f0:	ldr	r2, [r4, #40]	; 0x28
   147f4:	ldr	r3, [r4]
   147f8:	orr	r0, r0, #1
   147fc:	add	fp, r4, #8
   14800:	str	r0, [sp, #28]
   14804:	str	r0, [sp, #4]
   14808:	str	r1, [sp, #16]
   1480c:	str	r2, [sp, #12]
   14810:	str	r3, [sp]
   14814:	str	fp, [sp, #8]
   14818:	mov	r1, r8
   1481c:	mov	r0, r6
   14820:	mov	r3, sl
   14824:	mov	r2, r9
   14828:	bl	12938 <__snprintf_chk@plt+0x15cc>
   1482c:	cmp	r8, r0
   14830:	bhi	14894 <__snprintf_chk@plt+0x3528>
   14834:	add	r3, r4, #48	; 0x30
   14838:	add	r8, r0, #1
   1483c:	cmp	r6, r3
   14840:	str	r8, [r5]
   14844:	beq	14850 <__snprintf_chk@plt+0x34e4>
   14848:	mov	r0, r6
   1484c:	bl	1270c <__snprintf_chk@plt+0x13a0>
   14850:	mov	r0, r8
   14854:	bl	17480 <__snprintf_chk@plt+0x6114>
   14858:	ldr	lr, [r4, #44]	; 0x2c
   1485c:	ldr	ip, [r4]
   14860:	mov	r3, sl
   14864:	mov	r2, r9
   14868:	mov	r1, r8
   1486c:	str	r0, [r5, #4]
   14870:	ldr	r5, [r4, #40]	; 0x28
   14874:	ldr	r4, [sp, #28]
   14878:	str	fp, [sp, #8]
   1487c:	str	r4, [sp, #4]
   14880:	str	lr, [sp, #16]
   14884:	str	r5, [sp, #12]
   14888:	str	ip, [sp]
   1488c:	mov	r6, r0
   14890:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14894:	ldr	r3, [sp, #24]
   14898:	mov	r0, r6
   1489c:	str	r3, [r7]
   148a0:	add	sp, sp, #44	; 0x2c
   148a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148a8:	mov	r3, #8
   148ac:	str	r3, [sp]
   148b0:	add	r1, sp, #36	; 0x24
   148b4:	rsb	r2, r2, #1
   148b8:	mvn	r3, #-2147483648	; 0x80000000
   148bc:	mov	r0, #0
   148c0:	bl	1769c <__snprintf_chk@plt+0x6330>
   148c4:	mov	r5, r0
   148c8:	ldm	r6, {r0, r1}
   148cc:	str	r5, [r4]
   148d0:	stm	r5, {r0, r1}
   148d4:	b	147b8 <__snprintf_chk@plt+0x344c>
   148d8:	andeq	sl, r2, r8, lsr r1
   148dc:	andeq	sl, r2, r8, ror #6
   148e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148e4:	sub	sp, sp, #132	; 0x84
   148e8:	mov	r5, r1
   148ec:	mov	r4, r0
   148f0:	mov	r9, r2
   148f4:	add	r0, sp, #80	; 0x50
   148f8:	mov	r2, #48	; 0x30
   148fc:	mov	r1, #0
   14900:	bl	11270 <memset@plt>
   14904:	cmp	r5, #10
   14908:	beq	14ac0 <__snprintf_chk@plt+0x3754>
   1490c:	add	lr, sp, #80	; 0x50
   14910:	str	r5, [sp, #80]	; 0x50
   14914:	ldm	lr!, {r0, r1, r2, r3}
   14918:	add	ip, sp, #32
   1491c:	ldr	r6, [pc, #416]	; 14ac4 <__snprintf_chk@plt+0x3758>
   14920:	stmia	ip!, {r0, r1, r2, r3}
   14924:	ldm	lr!, {r0, r1, r2, r3}
   14928:	stmia	ip!, {r0, r1, r2, r3}
   1492c:	ldm	lr, {r0, r1, r2, r3}
   14930:	stm	ip, {r0, r1, r2, r3}
   14934:	bl	1124c <__errno_location@plt>
   14938:	cmn	r4, #-2147483647	; 0x80000001
   1493c:	ldr	r5, [r6]
   14940:	mov	r7, r0
   14944:	movne	r0, #0
   14948:	moveq	r0, #1
   1494c:	ldr	r3, [r7]
   14950:	orrs	r0, r0, r4, lsr #31
   14954:	str	r3, [sp, #24]
   14958:	bne	14ac0 <__snprintf_chk@plt+0x3754>
   1495c:	ldr	r2, [r6, #4]
   14960:	cmp	r4, r2
   14964:	blt	149c4 <__snprintf_chk@plt+0x3658>
   14968:	add	r8, r6, #8
   1496c:	cmp	r5, r8
   14970:	str	r2, [sp, #80]	; 0x50
   14974:	beq	14a90 <__snprintf_chk@plt+0x3724>
   14978:	mov	r3, #8
   1497c:	sub	r2, r4, r2
   14980:	mov	r0, r5
   14984:	str	r3, [sp]
   14988:	add	r2, r2, #1
   1498c:	add	r1, sp, #80	; 0x50
   14990:	mvn	r3, #-2147483648	; 0x80000000
   14994:	bl	1769c <__snprintf_chk@plt+0x6330>
   14998:	mov	r5, r0
   1499c:	str	r0, [r6]
   149a0:	ldr	r0, [r6, #4]
   149a4:	ldr	r2, [sp, #80]	; 0x50
   149a8:	mov	r1, #0
   149ac:	sub	r2, r2, r0
   149b0:	add	r0, r5, r0, lsl #3
   149b4:	lsl	r2, r2, #3
   149b8:	bl	11270 <memset@plt>
   149bc:	ldr	r3, [sp, #80]	; 0x50
   149c0:	str	r3, [r6, #4]
   149c4:	add	fp, r5, r4, lsl #3
   149c8:	ldr	r1, [sp, #36]	; 0x24
   149cc:	ldr	r8, [r5, r4, lsl #3]
   149d0:	ldr	r6, [fp, #4]
   149d4:	ldr	r2, [sp, #72]	; 0x48
   149d8:	ldr	r3, [sp, #32]
   149dc:	ldr	ip, [sp, #76]	; 0x4c
   149e0:	orr	r1, r1, #1
   149e4:	add	sl, sp, #40	; 0x28
   149e8:	str	r1, [sp, #28]
   149ec:	str	r1, [sp, #4]
   149f0:	str	r2, [sp, #12]
   149f4:	str	r3, [sp]
   149f8:	mov	r0, r6
   149fc:	mov	r1, r8
   14a00:	str	ip, [sp, #16]
   14a04:	str	sl, [sp, #8]
   14a08:	mvn	r3, #0
   14a0c:	mov	r2, r9
   14a10:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14a14:	cmp	r8, r0
   14a18:	bhi	14a7c <__snprintf_chk@plt+0x3710>
   14a1c:	ldr	r3, [pc, #164]	; 14ac8 <__snprintf_chk@plt+0x375c>
   14a20:	add	r8, r0, #1
   14a24:	cmp	r6, r3
   14a28:	str	r8, [r5, r4, lsl #3]
   14a2c:	beq	14a38 <__snprintf_chk@plt+0x36cc>
   14a30:	mov	r0, r6
   14a34:	bl	1270c <__snprintf_chk@plt+0x13a0>
   14a38:	mov	r0, r8
   14a3c:	bl	17480 <__snprintf_chk@plt+0x6114>
   14a40:	ldr	lr, [sp, #76]	; 0x4c
   14a44:	ldr	r3, [sp, #32]
   14a48:	ldr	ip, [sp, #72]	; 0x48
   14a4c:	ldr	r4, [sp, #28]
   14a50:	mov	r2, r9
   14a54:	mov	r1, r8
   14a58:	str	r0, [fp, #4]
   14a5c:	str	r3, [sp]
   14a60:	str	sl, [sp, #8]
   14a64:	str	r4, [sp, #4]
   14a68:	str	lr, [sp, #16]
   14a6c:	str	ip, [sp, #12]
   14a70:	mvn	r3, #0
   14a74:	mov	r6, r0
   14a78:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14a7c:	ldr	r3, [sp, #24]
   14a80:	mov	r0, r6
   14a84:	str	r3, [r7]
   14a88:	add	sp, sp, #132	; 0x84
   14a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a90:	mov	r3, #8
   14a94:	sub	r2, r4, r2
   14a98:	add	r1, sp, #80	; 0x50
   14a9c:	str	r3, [sp]
   14aa0:	add	r2, r2, #1
   14aa4:	mvn	r3, #-2147483648	; 0x80000000
   14aa8:	bl	1769c <__snprintf_chk@plt+0x6330>
   14aac:	mov	r5, r0
   14ab0:	ldm	r8, {r0, r1}
   14ab4:	str	r5, [r6]
   14ab8:	stm	r5, {r0, r1}
   14abc:	b	149a0 <__snprintf_chk@plt+0x3634>
   14ac0:	bl	11360 <abort@plt>
   14ac4:	andeq	sl, r2, r8, lsr r1
   14ac8:	muleq	r2, r8, r3
   14acc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ad0:	sub	sp, sp, #132	; 0x84
   14ad4:	mov	r5, r1
   14ad8:	mov	r4, r0
   14adc:	mov	r9, r2
   14ae0:	add	r0, sp, #80	; 0x50
   14ae4:	mov	r2, #48	; 0x30
   14ae8:	mov	r1, #0
   14aec:	mov	sl, r3
   14af0:	bl	11270 <memset@plt>
   14af4:	cmp	r5, #10
   14af8:	beq	14cb4 <__snprintf_chk@plt+0x3948>
   14afc:	add	lr, sp, #80	; 0x50
   14b00:	str	r5, [sp, #80]	; 0x50
   14b04:	ldm	lr!, {r0, r1, r2, r3}
   14b08:	add	ip, sp, #32
   14b0c:	ldr	r6, [pc, #420]	; 14cb8 <__snprintf_chk@plt+0x394c>
   14b10:	stmia	ip!, {r0, r1, r2, r3}
   14b14:	ldm	lr!, {r0, r1, r2, r3}
   14b18:	stmia	ip!, {r0, r1, r2, r3}
   14b1c:	ldm	lr, {r0, r1, r2, r3}
   14b20:	stm	ip, {r0, r1, r2, r3}
   14b24:	bl	1124c <__errno_location@plt>
   14b28:	cmn	r4, #-2147483647	; 0x80000001
   14b2c:	ldr	r5, [r6]
   14b30:	mov	r7, r0
   14b34:	movne	r0, #0
   14b38:	moveq	r0, #1
   14b3c:	ldr	r3, [r7]
   14b40:	orrs	r0, r0, r4, lsr #31
   14b44:	str	r3, [sp, #24]
   14b48:	bne	14cb4 <__snprintf_chk@plt+0x3948>
   14b4c:	ldr	r2, [r6, #4]
   14b50:	cmp	r4, r2
   14b54:	blt	14bb4 <__snprintf_chk@plt+0x3848>
   14b58:	add	r8, r6, #8
   14b5c:	cmp	r5, r8
   14b60:	str	r2, [sp, #80]	; 0x50
   14b64:	beq	14c84 <__snprintf_chk@plt+0x3918>
   14b68:	mov	r3, #8
   14b6c:	sub	r2, r4, r2
   14b70:	mov	r0, r5
   14b74:	str	r3, [sp]
   14b78:	add	r2, r2, #1
   14b7c:	add	r1, sp, #80	; 0x50
   14b80:	mvn	r3, #-2147483648	; 0x80000000
   14b84:	bl	1769c <__snprintf_chk@plt+0x6330>
   14b88:	mov	r5, r0
   14b8c:	str	r0, [r6]
   14b90:	ldr	r0, [r6, #4]
   14b94:	ldr	r2, [sp, #80]	; 0x50
   14b98:	mov	r1, #0
   14b9c:	sub	r2, r2, r0
   14ba0:	add	r0, r5, r0, lsl #3
   14ba4:	lsl	r2, r2, #3
   14ba8:	bl	11270 <memset@plt>
   14bac:	ldr	r3, [sp, #80]	; 0x50
   14bb0:	str	r3, [r6, #4]
   14bb4:	add	fp, r5, r4, lsl #3
   14bb8:	ldr	r3, [sp, #32]
   14bbc:	ldr	r1, [sp, #36]	; 0x24
   14bc0:	ldr	r8, [r5, r4, lsl #3]
   14bc4:	ldr	r6, [fp, #4]
   14bc8:	ldr	r2, [sp, #72]	; 0x48
   14bcc:	ldr	ip, [sp, #76]	; 0x4c
   14bd0:	orr	r1, r1, #1
   14bd4:	str	r3, [sp]
   14bd8:	add	r3, sp, #40	; 0x28
   14bdc:	str	r1, [sp, #28]
   14be0:	str	r1, [sp, #4]
   14be4:	str	r2, [sp, #12]
   14be8:	str	r3, [sp, #8]
   14bec:	mov	r0, r6
   14bf0:	mov	r1, r8
   14bf4:	str	ip, [sp, #16]
   14bf8:	mov	r3, sl
   14bfc:	mov	r2, r9
   14c00:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14c04:	cmp	r8, r0
   14c08:	bhi	14c70 <__snprintf_chk@plt+0x3904>
   14c0c:	ldr	r3, [pc, #168]	; 14cbc <__snprintf_chk@plt+0x3950>
   14c10:	add	r8, r0, #1
   14c14:	cmp	r6, r3
   14c18:	str	r8, [r5, r4, lsl #3]
   14c1c:	beq	14c28 <__snprintf_chk@plt+0x38bc>
   14c20:	mov	r0, r6
   14c24:	bl	1270c <__snprintf_chk@plt+0x13a0>
   14c28:	mov	r0, r8
   14c2c:	bl	17480 <__snprintf_chk@plt+0x6114>
   14c30:	add	lr, sp, #40	; 0x28
   14c34:	ldr	ip, [sp, #76]	; 0x4c
   14c38:	ldr	r4, [sp, #72]	; 0x48
   14c3c:	ldr	r5, [sp, #28]
   14c40:	mov	r3, sl
   14c44:	mov	r2, r9
   14c48:	mov	r1, r8
   14c4c:	str	r0, [fp, #4]
   14c50:	str	lr, [sp, #8]
   14c54:	ldr	lr, [sp, #32]
   14c58:	str	r5, [sp, #4]
   14c5c:	str	ip, [sp, #16]
   14c60:	str	r4, [sp, #12]
   14c64:	str	lr, [sp]
   14c68:	mov	r6, r0
   14c6c:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14c70:	ldr	r3, [sp, #24]
   14c74:	mov	r0, r6
   14c78:	str	r3, [r7]
   14c7c:	add	sp, sp, #132	; 0x84
   14c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c84:	mov	r3, #8
   14c88:	sub	r2, r4, r2
   14c8c:	add	r1, sp, #80	; 0x50
   14c90:	str	r3, [sp]
   14c94:	add	r2, r2, #1
   14c98:	mvn	r3, #-2147483648	; 0x80000000
   14c9c:	bl	1769c <__snprintf_chk@plt+0x6330>
   14ca0:	mov	r5, r0
   14ca4:	ldm	r8, {r0, r1}
   14ca8:	str	r5, [r6]
   14cac:	stm	r5, {r0, r1}
   14cb0:	b	14b90 <__snprintf_chk@plt+0x3824>
   14cb4:	bl	11360 <abort@plt>
   14cb8:	andeq	sl, r2, r8, lsr r1
   14cbc:	muleq	r2, r8, r3
   14cc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14cc4:	sub	sp, sp, #124	; 0x7c
   14cc8:	mov	r4, r0
   14ccc:	mov	r9, r1
   14cd0:	add	r0, sp, #72	; 0x48
   14cd4:	mov	r2, #48	; 0x30
   14cd8:	mov	r1, #0
   14cdc:	bl	11270 <memset@plt>
   14ce0:	cmp	r4, #10
   14ce4:	beq	14e70 <__snprintf_chk@plt+0x3b04>
   14ce8:	add	lr, sp, #72	; 0x48
   14cec:	str	r4, [sp, #72]	; 0x48
   14cf0:	ldm	lr!, {r0, r1, r2, r3}
   14cf4:	add	ip, sp, #24
   14cf8:	ldr	r5, [pc, #372]	; 14e74 <__snprintf_chk@plt+0x3b08>
   14cfc:	stmia	ip!, {r0, r1, r2, r3}
   14d00:	ldm	lr!, {r0, r1, r2, r3}
   14d04:	stmia	ip!, {r0, r1, r2, r3}
   14d08:	ldm	lr, {r0, r1, r2, r3}
   14d0c:	stm	ip, {r0, r1, r2, r3}
   14d10:	bl	1124c <__errno_location@plt>
   14d14:	ldr	r2, [r5, #4]
   14d18:	ldr	r4, [r5]
   14d1c:	cmp	r2, #0
   14d20:	mov	r7, r0
   14d24:	ldr	fp, [r0]
   14d28:	bgt	14d84 <__snprintf_chk@plt+0x3a18>
   14d2c:	add	r6, r5, #8
   14d30:	cmp	r4, r6
   14d34:	str	r2, [sp, #72]	; 0x48
   14d38:	beq	14e40 <__snprintf_chk@plt+0x3ad4>
   14d3c:	mov	r3, #8
   14d40:	mov	r0, r4
   14d44:	str	r3, [sp]
   14d48:	rsb	r2, r2, #1
   14d4c:	add	r1, sp, #72	; 0x48
   14d50:	mvn	r3, #-2147483648	; 0x80000000
   14d54:	bl	1769c <__snprintf_chk@plt+0x6330>
   14d58:	mov	r4, r0
   14d5c:	str	r0, [r5]
   14d60:	ldr	r0, [r5, #4]
   14d64:	ldr	r2, [sp, #72]	; 0x48
   14d68:	mov	r1, #0
   14d6c:	sub	r2, r2, r0
   14d70:	add	r0, r4, r0, lsl #3
   14d74:	lsl	r2, r2, #3
   14d78:	bl	11270 <memset@plt>
   14d7c:	ldr	r3, [sp, #72]	; 0x48
   14d80:	str	r3, [r5, #4]
   14d84:	ldr	r6, [sp, #28]
   14d88:	ldr	r8, [r4]
   14d8c:	ldr	r5, [r4, #4]
   14d90:	ldr	r2, [sp, #64]	; 0x40
   14d94:	ldr	r3, [sp, #24]
   14d98:	ldr	ip, [sp, #68]	; 0x44
   14d9c:	orr	r6, r6, #1
   14da0:	add	sl, sp, #32
   14da4:	str	r2, [sp, #12]
   14da8:	str	r3, [sp]
   14dac:	str	r6, [sp, #4]
   14db0:	mov	r1, r8
   14db4:	mov	r0, r5
   14db8:	str	ip, [sp, #16]
   14dbc:	str	sl, [sp, #8]
   14dc0:	mvn	r3, #0
   14dc4:	mov	r2, r9
   14dc8:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14dcc:	cmp	r8, r0
   14dd0:	bhi	14e30 <__snprintf_chk@plt+0x3ac4>
   14dd4:	ldr	r3, [pc, #156]	; 14e78 <__snprintf_chk@plt+0x3b0c>
   14dd8:	add	r8, r0, #1
   14ddc:	cmp	r5, r3
   14de0:	str	r8, [r4]
   14de4:	beq	14df0 <__snprintf_chk@plt+0x3a84>
   14de8:	mov	r0, r5
   14dec:	bl	1270c <__snprintf_chk@plt+0x13a0>
   14df0:	mov	r0, r8
   14df4:	bl	17480 <__snprintf_chk@plt+0x6114>
   14df8:	ldr	lr, [sp, #68]	; 0x44
   14dfc:	ldr	r3, [sp, #24]
   14e00:	ldr	ip, [sp, #64]	; 0x40
   14e04:	mov	r2, r9
   14e08:	mov	r1, r8
   14e0c:	str	r0, [r4, #4]
   14e10:	str	r3, [sp]
   14e14:	str	sl, [sp, #8]
   14e18:	str	r6, [sp, #4]
   14e1c:	str	lr, [sp, #16]
   14e20:	str	ip, [sp, #12]
   14e24:	mvn	r3, #0
   14e28:	mov	r5, r0
   14e2c:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14e30:	mov	r0, r5
   14e34:	str	fp, [r7]
   14e38:	add	sp, sp, #124	; 0x7c
   14e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e40:	mov	r3, #8
   14e44:	add	r1, sp, #72	; 0x48
   14e48:	str	r3, [sp]
   14e4c:	rsb	r2, r2, #1
   14e50:	mvn	r3, #-2147483648	; 0x80000000
   14e54:	mov	r0, #0
   14e58:	bl	1769c <__snprintf_chk@plt+0x6330>
   14e5c:	mov	r4, r0
   14e60:	ldm	r6, {r0, r1}
   14e64:	str	r4, [r5]
   14e68:	stm	r4, {r0, r1}
   14e6c:	b	14d60 <__snprintf_chk@plt+0x39f4>
   14e70:	bl	11360 <abort@plt>
   14e74:	andeq	sl, r2, r8, lsr r1
   14e78:	muleq	r2, r8, r3
   14e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e80:	sub	sp, sp, #132	; 0x84
   14e84:	mov	r4, r0
   14e88:	mov	r9, r1
   14e8c:	mov	sl, r2
   14e90:	add	r0, sp, #80	; 0x50
   14e94:	mov	r2, #48	; 0x30
   14e98:	mov	r1, #0
   14e9c:	bl	11270 <memset@plt>
   14ea0:	cmp	r4, #10
   14ea4:	beq	15038 <__snprintf_chk@plt+0x3ccc>
   14ea8:	add	lr, sp, #80	; 0x50
   14eac:	str	r4, [sp, #80]	; 0x50
   14eb0:	ldm	lr!, {r0, r1, r2, r3}
   14eb4:	add	ip, sp, #32
   14eb8:	ldr	r5, [pc, #380]	; 1503c <__snprintf_chk@plt+0x3cd0>
   14ebc:	stmia	ip!, {r0, r1, r2, r3}
   14ec0:	ldm	lr!, {r0, r1, r2, r3}
   14ec4:	stmia	ip!, {r0, r1, r2, r3}
   14ec8:	ldm	lr, {r0, r1, r2, r3}
   14ecc:	stm	ip, {r0, r1, r2, r3}
   14ed0:	bl	1124c <__errno_location@plt>
   14ed4:	ldr	r2, [r5, #4]
   14ed8:	ldr	r4, [r5]
   14edc:	cmp	r2, #0
   14ee0:	ldr	r3, [r0]
   14ee4:	mov	r7, r0
   14ee8:	str	r3, [sp, #28]
   14eec:	bgt	14f48 <__snprintf_chk@plt+0x3bdc>
   14ef0:	add	r6, r5, #8
   14ef4:	cmp	r4, r6
   14ef8:	str	r2, [sp, #80]	; 0x50
   14efc:	beq	15008 <__snprintf_chk@plt+0x3c9c>
   14f00:	mov	r3, #8
   14f04:	mov	r0, r4
   14f08:	str	r3, [sp]
   14f0c:	rsb	r2, r2, #1
   14f10:	add	r1, sp, #80	; 0x50
   14f14:	mvn	r3, #-2147483648	; 0x80000000
   14f18:	bl	1769c <__snprintf_chk@plt+0x6330>
   14f1c:	mov	r4, r0
   14f20:	str	r0, [r5]
   14f24:	ldr	r0, [r5, #4]
   14f28:	ldr	r2, [sp, #80]	; 0x50
   14f2c:	mov	r1, #0
   14f30:	sub	r2, r2, r0
   14f34:	add	r0, r4, r0, lsl #3
   14f38:	lsl	r2, r2, #3
   14f3c:	bl	11270 <memset@plt>
   14f40:	ldr	r3, [sp, #80]	; 0x50
   14f44:	str	r3, [r5, #4]
   14f48:	ldr	r6, [sp, #36]	; 0x24
   14f4c:	ldr	r8, [r4]
   14f50:	ldr	r5, [r4, #4]
   14f54:	ldr	r2, [sp, #72]	; 0x48
   14f58:	ldr	r3, [sp, #32]
   14f5c:	ldr	ip, [sp, #76]	; 0x4c
   14f60:	orr	r6, r6, #1
   14f64:	add	fp, sp, #40	; 0x28
   14f68:	str	r2, [sp, #12]
   14f6c:	str	r3, [sp]
   14f70:	str	r6, [sp, #4]
   14f74:	mov	r1, r8
   14f78:	mov	r0, r5
   14f7c:	str	ip, [sp, #16]
   14f80:	str	fp, [sp, #8]
   14f84:	mov	r3, sl
   14f88:	mov	r2, r9
   14f8c:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14f90:	cmp	r8, r0
   14f94:	bhi	14ff4 <__snprintf_chk@plt+0x3c88>
   14f98:	ldr	r3, [pc, #160]	; 15040 <__snprintf_chk@plt+0x3cd4>
   14f9c:	add	r8, r0, #1
   14fa0:	cmp	r5, r3
   14fa4:	str	r8, [r4]
   14fa8:	beq	14fb4 <__snprintf_chk@plt+0x3c48>
   14fac:	mov	r0, r5
   14fb0:	bl	1270c <__snprintf_chk@plt+0x13a0>
   14fb4:	mov	r0, r8
   14fb8:	bl	17480 <__snprintf_chk@plt+0x6114>
   14fbc:	ldr	ip, [sp, #76]	; 0x4c
   14fc0:	ldr	lr, [sp, #32]
   14fc4:	mov	r3, sl
   14fc8:	mov	r2, r9
   14fcc:	mov	r1, r8
   14fd0:	str	r0, [r4, #4]
   14fd4:	ldr	r4, [sp, #72]	; 0x48
   14fd8:	str	fp, [sp, #8]
   14fdc:	str	r6, [sp, #4]
   14fe0:	str	ip, [sp, #16]
   14fe4:	str	r4, [sp, #12]
   14fe8:	str	lr, [sp]
   14fec:	mov	r5, r0
   14ff0:	bl	12938 <__snprintf_chk@plt+0x15cc>
   14ff4:	ldr	r3, [sp, #28]
   14ff8:	mov	r0, r5
   14ffc:	str	r3, [r7]
   15000:	add	sp, sp, #132	; 0x84
   15004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15008:	mov	r3, #8
   1500c:	add	r1, sp, #80	; 0x50
   15010:	str	r3, [sp]
   15014:	rsb	r2, r2, #1
   15018:	mvn	r3, #-2147483648	; 0x80000000
   1501c:	mov	r0, #0
   15020:	bl	1769c <__snprintf_chk@plt+0x6330>
   15024:	mov	r4, r0
   15028:	ldm	r6, {r0, r1}
   1502c:	str	r4, [r5]
   15030:	stm	r4, {r0, r1}
   15034:	b	14f24 <__snprintf_chk@plt+0x3bb8>
   15038:	bl	11360 <abort@plt>
   1503c:	andeq	sl, r2, r8, lsr r1
   15040:	muleq	r2, r8, r3
   15044:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15048:	mov	r4, r2
   1504c:	ldr	lr, [pc, #432]	; 15204 <__snprintf_chk@plt+0x3e98>
   15050:	mov	sl, r0
   15054:	mov	fp, r1
   15058:	ldm	lr!, {r0, r1, r2, r3}
   1505c:	sub	sp, sp, #92	; 0x5c
   15060:	add	ip, sp, #40	; 0x28
   15064:	lsr	r7, r4, #5
   15068:	stmia	ip!, {r0, r1, r2, r3}
   1506c:	add	r6, sp, #48	; 0x30
   15070:	ldm	lr!, {r0, r1, r2, r3}
   15074:	and	r4, r4, #31
   15078:	ldr	r5, [pc, #392]	; 15208 <__snprintf_chk@plt+0x3e9c>
   1507c:	stmia	ip!, {r0, r1, r2, r3}
   15080:	ldm	lr, {r0, r1, r2, r3}
   15084:	stm	ip, {r0, r1, r2, r3}
   15088:	ldr	r2, [r6, r7, lsl #2]
   1508c:	lsr	r3, r2, r4
   15090:	eor	r3, r3, #1
   15094:	and	r3, r3, #1
   15098:	eor	r4, r2, r3, lsl r4
   1509c:	str	r4, [r6, r7, lsl #2]
   150a0:	bl	1124c <__errno_location@plt>
   150a4:	ldr	r2, [r5, #4]
   150a8:	ldr	r4, [r5]
   150ac:	cmp	r2, #0
   150b0:	ldr	r3, [r0]
   150b4:	mov	r8, r0
   150b8:	str	r3, [sp, #28]
   150bc:	bgt	15118 <__snprintf_chk@plt+0x3dac>
   150c0:	add	r7, r5, #8
   150c4:	cmp	r4, r7
   150c8:	str	r2, [sp, #36]	; 0x24
   150cc:	beq	151d4 <__snprintf_chk@plt+0x3e68>
   150d0:	mov	r3, #8
   150d4:	mov	r0, r4
   150d8:	str	r3, [sp]
   150dc:	rsb	r2, r2, #1
   150e0:	mvn	r3, #-2147483648	; 0x80000000
   150e4:	add	r1, sp, #36	; 0x24
   150e8:	bl	1769c <__snprintf_chk@plt+0x6330>
   150ec:	mov	r4, r0
   150f0:	str	r0, [r5]
   150f4:	ldr	r0, [r5, #4]
   150f8:	ldr	r2, [sp, #36]	; 0x24
   150fc:	mov	r1, #0
   15100:	sub	r2, r2, r0
   15104:	add	r0, r4, r0, lsl #3
   15108:	lsl	r2, r2, #3
   1510c:	bl	11270 <memset@plt>
   15110:	ldr	r3, [sp, #36]	; 0x24
   15114:	str	r3, [r5, #4]
   15118:	ldr	r7, [sp, #44]	; 0x2c
   1511c:	ldr	r9, [r4]
   15120:	ldr	r5, [r4, #4]
   15124:	ldr	r2, [sp, #80]	; 0x50
   15128:	ldr	r3, [sp, #40]	; 0x28
   1512c:	ldr	ip, [sp, #84]	; 0x54
   15130:	orr	r7, r7, #1
   15134:	str	r2, [sp, #12]
   15138:	str	r3, [sp]
   1513c:	str	r7, [sp, #4]
   15140:	str	r6, [sp, #8]
   15144:	mov	r1, r9
   15148:	mov	r0, r5
   1514c:	str	ip, [sp, #16]
   15150:	mov	r3, fp
   15154:	mov	r2, sl
   15158:	bl	12938 <__snprintf_chk@plt+0x15cc>
   1515c:	cmp	r9, r0
   15160:	bhi	151c0 <__snprintf_chk@plt+0x3e54>
   15164:	ldr	r3, [pc, #160]	; 1520c <__snprintf_chk@plt+0x3ea0>
   15168:	add	r9, r0, #1
   1516c:	cmp	r5, r3
   15170:	str	r9, [r4]
   15174:	beq	15180 <__snprintf_chk@plt+0x3e14>
   15178:	mov	r0, r5
   1517c:	bl	1270c <__snprintf_chk@plt+0x13a0>
   15180:	mov	r0, r9
   15184:	bl	17480 <__snprintf_chk@plt+0x6114>
   15188:	ldr	ip, [sp, #84]	; 0x54
   1518c:	ldr	lr, [sp, #40]	; 0x28
   15190:	mov	r3, fp
   15194:	mov	r2, sl
   15198:	mov	r1, r9
   1519c:	str	r0, [r4, #4]
   151a0:	ldr	r4, [sp, #80]	; 0x50
   151a4:	str	r6, [sp, #8]
   151a8:	str	r7, [sp, #4]
   151ac:	str	ip, [sp, #16]
   151b0:	str	r4, [sp, #12]
   151b4:	str	lr, [sp]
   151b8:	mov	r5, r0
   151bc:	bl	12938 <__snprintf_chk@plt+0x15cc>
   151c0:	ldr	r3, [sp, #28]
   151c4:	mov	r0, r5
   151c8:	str	r3, [r8]
   151cc:	add	sp, sp, #92	; 0x5c
   151d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151d4:	mov	r3, #8
   151d8:	str	r3, [sp]
   151dc:	add	r1, sp, #36	; 0x24
   151e0:	rsb	r2, r2, #1
   151e4:	mvn	r3, #-2147483648	; 0x80000000
   151e8:	mov	r0, #0
   151ec:	bl	1769c <__snprintf_chk@plt+0x6330>
   151f0:	mov	r4, r0
   151f4:	ldm	r7, {r0, r1}
   151f8:	str	r4, [r5]
   151fc:	stm	r4, {r0, r1}
   15200:	b	150f4 <__snprintf_chk@plt+0x3d88>
   15204:	andeq	sl, r2, r8, ror #6
   15208:	andeq	sl, r2, r8, lsr r1
   1520c:	muleq	r2, r8, r3
   15210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15214:	mov	r4, r1
   15218:	ldr	lr, [pc, #420]	; 153c4 <__snprintf_chk@plt+0x4058>
   1521c:	mov	r6, r0
   15220:	sub	sp, sp, #84	; 0x54
   15224:	ldm	lr!, {r0, r1, r2, r3}
   15228:	add	ip, sp, #32
   1522c:	lsr	r8, r4, #5
   15230:	add	r5, sp, #40	; 0x28
   15234:	stmia	ip!, {r0, r1, r2, r3}
   15238:	and	r4, r4, #31
   1523c:	ldm	lr!, {r0, r1, r2, r3}
   15240:	ldr	r7, [pc, #384]	; 153c8 <__snprintf_chk@plt+0x405c>
   15244:	stmia	ip!, {r0, r1, r2, r3}
   15248:	ldm	lr, {r0, r1, r2, r3}
   1524c:	stm	ip, {r0, r1, r2, r3}
   15250:	ldr	r2, [r5, r8, lsl #2]
   15254:	lsr	r3, r2, r4
   15258:	eor	r3, r3, #1
   1525c:	and	r3, r3, #1
   15260:	eor	r4, r2, r3, lsl r4
   15264:	str	r4, [r5, r8, lsl #2]
   15268:	bl	1124c <__errno_location@plt>
   1526c:	ldr	r2, [r7, #4]
   15270:	ldr	r4, [r7]
   15274:	cmp	r2, #0
   15278:	mov	r9, r0
   1527c:	ldr	sl, [r0]
   15280:	bgt	152dc <__snprintf_chk@plt+0x3f70>
   15284:	add	r8, r7, #8
   15288:	cmp	r4, r8
   1528c:	str	r2, [sp, #28]
   15290:	beq	15394 <__snprintf_chk@plt+0x4028>
   15294:	mov	r3, #8
   15298:	mov	r0, r4
   1529c:	str	r3, [sp]
   152a0:	rsb	r2, r2, #1
   152a4:	mvn	r3, #-2147483648	; 0x80000000
   152a8:	add	r1, sp, #28
   152ac:	bl	1769c <__snprintf_chk@plt+0x6330>
   152b0:	mov	r4, r0
   152b4:	str	r0, [r7]
   152b8:	ldr	r0, [r7, #4]
   152bc:	ldr	r2, [sp, #28]
   152c0:	mov	r1, #0
   152c4:	sub	r2, r2, r0
   152c8:	add	r0, r4, r0, lsl #3
   152cc:	lsl	r2, r2, #3
   152d0:	bl	11270 <memset@plt>
   152d4:	ldr	r3, [sp, #28]
   152d8:	str	r3, [r7, #4]
   152dc:	ldr	r8, [sp, #36]	; 0x24
   152e0:	ldr	fp, [r4]
   152e4:	ldr	r7, [r4, #4]
   152e8:	ldr	r2, [sp, #72]	; 0x48
   152ec:	ldr	r3, [sp, #32]
   152f0:	ldr	ip, [sp, #76]	; 0x4c
   152f4:	orr	r8, r8, #1
   152f8:	str	r2, [sp, #12]
   152fc:	str	r3, [sp]
   15300:	str	r8, [sp, #4]
   15304:	str	r5, [sp, #8]
   15308:	mov	r1, fp
   1530c:	mov	r0, r7
   15310:	str	ip, [sp, #16]
   15314:	mvn	r3, #0
   15318:	mov	r2, r6
   1531c:	bl	12938 <__snprintf_chk@plt+0x15cc>
   15320:	cmp	fp, r0
   15324:	bhi	15384 <__snprintf_chk@plt+0x4018>
   15328:	ldr	r3, [pc, #156]	; 153cc <__snprintf_chk@plt+0x4060>
   1532c:	add	fp, r0, #1
   15330:	cmp	r7, r3
   15334:	str	fp, [r4]
   15338:	beq	15344 <__snprintf_chk@plt+0x3fd8>
   1533c:	mov	r0, r7
   15340:	bl	1270c <__snprintf_chk@plt+0x13a0>
   15344:	mov	r0, fp
   15348:	bl	17480 <__snprintf_chk@plt+0x6114>
   1534c:	ldr	lr, [sp, #76]	; 0x4c
   15350:	ldr	r3, [sp, #32]
   15354:	ldr	ip, [sp, #72]	; 0x48
   15358:	mov	r2, r6
   1535c:	mov	r1, fp
   15360:	str	r0, [r4, #4]
   15364:	str	r3, [sp]
   15368:	str	r5, [sp, #8]
   1536c:	str	r8, [sp, #4]
   15370:	str	lr, [sp, #16]
   15374:	str	ip, [sp, #12]
   15378:	mvn	r3, #0
   1537c:	mov	r7, r0
   15380:	bl	12938 <__snprintf_chk@plt+0x15cc>
   15384:	mov	r0, r7
   15388:	str	sl, [r9]
   1538c:	add	sp, sp, #84	; 0x54
   15390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15394:	mov	r3, #8
   15398:	str	r3, [sp]
   1539c:	add	r1, sp, #28
   153a0:	rsb	r2, r2, #1
   153a4:	mvn	r3, #-2147483648	; 0x80000000
   153a8:	mov	r0, #0
   153ac:	bl	1769c <__snprintf_chk@plt+0x6330>
   153b0:	mov	r4, r0
   153b4:	ldm	r8, {r0, r1}
   153b8:	str	r4, [r7]
   153bc:	stm	r4, {r0, r1}
   153c0:	b	152b8 <__snprintf_chk@plt+0x3f4c>
   153c4:	andeq	sl, r2, r8, ror #6
   153c8:	andeq	sl, r2, r8, lsr r1
   153cc:	muleq	r2, r8, r3
   153d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153d4:	mov	r6, r0
   153d8:	ldr	lr, [pc, #404]	; 15574 <__snprintf_chk@plt+0x4208>
   153dc:	sub	sp, sp, #84	; 0x54
   153e0:	add	ip, sp, #32
   153e4:	ldm	lr!, {r0, r1, r2, r3}
   153e8:	ldr	r5, [pc, #392]	; 15578 <__snprintf_chk@plt+0x420c>
   153ec:	stmia	ip!, {r0, r1, r2, r3}
   153f0:	ldm	lr!, {r0, r1, r2, r3}
   153f4:	ldr	r4, [sp, #44]	; 0x2c
   153f8:	stmia	ip!, {r0, r1, r2, r3}
   153fc:	ldm	lr, {r0, r1, r2, r3}
   15400:	mvn	lr, r4
   15404:	and	lr, lr, #67108864	; 0x4000000
   15408:	eor	lr, lr, r4
   1540c:	stm	ip, {r0, r1, r2, r3}
   15410:	str	lr, [sp, #44]	; 0x2c
   15414:	bl	1124c <__errno_location@plt>
   15418:	ldr	r2, [r5, #4]
   1541c:	ldr	r4, [r5]
   15420:	cmp	r2, #0
   15424:	mov	r8, r0
   15428:	ldr	sl, [r0]
   1542c:	bgt	15488 <__snprintf_chk@plt+0x411c>
   15430:	add	r7, r5, #8
   15434:	cmp	r4, r7
   15438:	str	r2, [sp, #28]
   1543c:	beq	15544 <__snprintf_chk@plt+0x41d8>
   15440:	mov	r3, #8
   15444:	mov	r0, r4
   15448:	str	r3, [sp]
   1544c:	rsb	r2, r2, #1
   15450:	mvn	r3, #-2147483648	; 0x80000000
   15454:	add	r1, sp, #28
   15458:	bl	1769c <__snprintf_chk@plt+0x6330>
   1545c:	mov	r4, r0
   15460:	str	r0, [r5]
   15464:	ldr	r0, [r5, #4]
   15468:	ldr	r2, [sp, #28]
   1546c:	mov	r1, #0
   15470:	sub	r2, r2, r0
   15474:	add	r0, r4, r0, lsl #3
   15478:	lsl	r2, r2, #3
   1547c:	bl	11270 <memset@plt>
   15480:	ldr	r3, [sp, #28]
   15484:	str	r3, [r5, #4]
   15488:	ldr	r7, [sp, #36]	; 0x24
   1548c:	ldr	r9, [r4]
   15490:	ldr	r5, [r4, #4]
   15494:	ldr	r2, [sp, #72]	; 0x48
   15498:	ldr	r3, [sp, #32]
   1549c:	ldr	ip, [sp, #76]	; 0x4c
   154a0:	orr	r7, r7, #1
   154a4:	add	fp, sp, #40	; 0x28
   154a8:	str	r2, [sp, #12]
   154ac:	str	r3, [sp]
   154b0:	str	r7, [sp, #4]
   154b4:	mov	r1, r9
   154b8:	mov	r0, r5
   154bc:	str	ip, [sp, #16]
   154c0:	str	fp, [sp, #8]
   154c4:	mvn	r3, #0
   154c8:	mov	r2, r6
   154cc:	bl	12938 <__snprintf_chk@plt+0x15cc>
   154d0:	cmp	r9, r0
   154d4:	bhi	15534 <__snprintf_chk@plt+0x41c8>
   154d8:	ldr	r3, [pc, #156]	; 1557c <__snprintf_chk@plt+0x4210>
   154dc:	add	r9, r0, #1
   154e0:	cmp	r5, r3
   154e4:	str	r9, [r4]
   154e8:	beq	154f4 <__snprintf_chk@plt+0x4188>
   154ec:	mov	r0, r5
   154f0:	bl	1270c <__snprintf_chk@plt+0x13a0>
   154f4:	mov	r0, r9
   154f8:	bl	17480 <__snprintf_chk@plt+0x6114>
   154fc:	ldr	lr, [sp, #76]	; 0x4c
   15500:	ldr	r3, [sp, #32]
   15504:	ldr	ip, [sp, #72]	; 0x48
   15508:	mov	r2, r6
   1550c:	mov	r1, r9
   15510:	str	r0, [r4, #4]
   15514:	str	r3, [sp]
   15518:	str	fp, [sp, #8]
   1551c:	str	r7, [sp, #4]
   15520:	str	lr, [sp, #16]
   15524:	str	ip, [sp, #12]
   15528:	mvn	r3, #0
   1552c:	mov	r5, r0
   15530:	bl	12938 <__snprintf_chk@plt+0x15cc>
   15534:	mov	r0, r5
   15538:	str	sl, [r8]
   1553c:	add	sp, sp, #84	; 0x54
   15540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15544:	mov	r3, #8
   15548:	str	r3, [sp]
   1554c:	add	r1, sp, #28
   15550:	rsb	r2, r2, #1
   15554:	mvn	r3, #-2147483648	; 0x80000000
   15558:	mov	r0, #0
   1555c:	bl	1769c <__snprintf_chk@plt+0x6330>
   15560:	mov	r4, r0
   15564:	ldm	r7, {r0, r1}
   15568:	str	r4, [r5]
   1556c:	stm	r4, {r0, r1}
   15570:	b	15464 <__snprintf_chk@plt+0x40f8>
   15574:	andeq	sl, r2, r8, ror #6
   15578:	andeq	sl, r2, r8, lsr r1
   1557c:	muleq	r2, r8, r3
   15580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15584:	mov	r9, r0
   15588:	ldr	lr, [pc, #416]	; 15730 <__snprintf_chk@plt+0x43c4>
   1558c:	mov	sl, r1
   15590:	sub	sp, sp, #92	; 0x5c
   15594:	ldm	lr!, {r0, r1, r2, r3}
   15598:	add	ip, sp, #40	; 0x28
   1559c:	ldr	r5, [pc, #400]	; 15734 <__snprintf_chk@plt+0x43c8>
   155a0:	stmia	ip!, {r0, r1, r2, r3}
   155a4:	ldm	lr!, {r0, r1, r2, r3}
   155a8:	ldr	r4, [sp, #52]	; 0x34
   155ac:	stmia	ip!, {r0, r1, r2, r3}
   155b0:	ldm	lr, {r0, r1, r2, r3}
   155b4:	mvn	lr, r4
   155b8:	and	lr, lr, #67108864	; 0x4000000
   155bc:	eor	lr, lr, r4
   155c0:	stm	ip, {r0, r1, r2, r3}
   155c4:	str	lr, [sp, #52]	; 0x34
   155c8:	bl	1124c <__errno_location@plt>
   155cc:	ldr	r2, [r5, #4]
   155d0:	ldr	r4, [r5]
   155d4:	cmp	r2, #0
   155d8:	ldr	r3, [r0]
   155dc:	mov	r7, r0
   155e0:	str	r3, [sp, #28]
   155e4:	bgt	15640 <__snprintf_chk@plt+0x42d4>
   155e8:	add	r6, r5, #8
   155ec:	cmp	r4, r6
   155f0:	str	r2, [sp, #36]	; 0x24
   155f4:	beq	15700 <__snprintf_chk@plt+0x4394>
   155f8:	mov	r3, #8
   155fc:	mov	r0, r4
   15600:	str	r3, [sp]
   15604:	rsb	r2, r2, #1
   15608:	mvn	r3, #-2147483648	; 0x80000000
   1560c:	add	r1, sp, #36	; 0x24
   15610:	bl	1769c <__snprintf_chk@plt+0x6330>
   15614:	mov	r4, r0
   15618:	str	r0, [r5]
   1561c:	ldr	r0, [r5, #4]
   15620:	ldr	r2, [sp, #36]	; 0x24
   15624:	mov	r1, #0
   15628:	sub	r2, r2, r0
   1562c:	add	r0, r4, r0, lsl #3
   15630:	lsl	r2, r2, #3
   15634:	bl	11270 <memset@plt>
   15638:	ldr	r3, [sp, #36]	; 0x24
   1563c:	str	r3, [r5, #4]
   15640:	ldr	r6, [sp, #44]	; 0x2c
   15644:	ldr	r8, [r4]
   15648:	ldr	r5, [r4, #4]
   1564c:	ldr	r2, [sp, #80]	; 0x50
   15650:	ldr	r3, [sp, #40]	; 0x28
   15654:	ldr	ip, [sp, #84]	; 0x54
   15658:	orr	r6, r6, #1
   1565c:	add	fp, sp, #48	; 0x30
   15660:	str	r2, [sp, #12]
   15664:	str	r3, [sp]
   15668:	str	r6, [sp, #4]
   1566c:	mov	r1, r8
   15670:	mov	r0, r5
   15674:	str	ip, [sp, #16]
   15678:	str	fp, [sp, #8]
   1567c:	mov	r3, sl
   15680:	mov	r2, r9
   15684:	bl	12938 <__snprintf_chk@plt+0x15cc>
   15688:	cmp	r8, r0
   1568c:	bhi	156ec <__snprintf_chk@plt+0x4380>
   15690:	ldr	r3, [pc, #160]	; 15738 <__snprintf_chk@plt+0x43cc>
   15694:	add	r8, r0, #1
   15698:	cmp	r5, r3
   1569c:	str	r8, [r4]
   156a0:	beq	156ac <__snprintf_chk@plt+0x4340>
   156a4:	mov	r0, r5
   156a8:	bl	1270c <__snprintf_chk@plt+0x13a0>
   156ac:	mov	r0, r8
   156b0:	bl	17480 <__snprintf_chk@plt+0x6114>
   156b4:	ldr	ip, [sp, #84]	; 0x54
   156b8:	ldr	lr, [sp, #40]	; 0x28
   156bc:	mov	r3, sl
   156c0:	mov	r2, r9
   156c4:	mov	r1, r8
   156c8:	str	r0, [r4, #4]
   156cc:	ldr	r4, [sp, #80]	; 0x50
   156d0:	str	fp, [sp, #8]
   156d4:	str	r6, [sp, #4]
   156d8:	str	ip, [sp, #16]
   156dc:	str	r4, [sp, #12]
   156e0:	str	lr, [sp]
   156e4:	mov	r5, r0
   156e8:	bl	12938 <__snprintf_chk@plt+0x15cc>
   156ec:	ldr	r3, [sp, #28]
   156f0:	mov	r0, r5
   156f4:	str	r3, [r7]
   156f8:	add	sp, sp, #92	; 0x5c
   156fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15700:	mov	r3, #8
   15704:	str	r3, [sp]
   15708:	add	r1, sp, #36	; 0x24
   1570c:	rsb	r2, r2, #1
   15710:	mvn	r3, #-2147483648	; 0x80000000
   15714:	mov	r0, #0
   15718:	bl	1769c <__snprintf_chk@plt+0x6330>
   1571c:	mov	r4, r0
   15720:	ldm	r6, {r0, r1}
   15724:	str	r4, [r5]
   15728:	stm	r4, {r0, r1}
   1572c:	b	1561c <__snprintf_chk@plt+0x42b0>
   15730:	andeq	sl, r2, r8, ror #6
   15734:	andeq	sl, r2, r8, lsr r1
   15738:	muleq	r2, r8, r3
   1573c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15740:	sub	sp, sp, #180	; 0xb4
   15744:	mov	r6, r1
   15748:	mov	r4, r0
   1574c:	mov	r9, r2
   15750:	add	r0, sp, #80	; 0x50
   15754:	mov	r2, #48	; 0x30
   15758:	mov	r1, #0
   1575c:	bl	11270 <memset@plt>
   15760:	cmp	r6, #10
   15764:	beq	15944 <__snprintf_chk@plt+0x45d8>
   15768:	add	r5, sp, #80	; 0x50
   1576c:	str	r6, [sp, #80]	; 0x50
   15770:	ldm	r5!, {r0, r1, r2, r3}
   15774:	add	ip, sp, #128	; 0x80
   15778:	mov	r7, ip
   1577c:	add	lr, sp, #32
   15780:	stmia	ip!, {r0, r1, r2, r3}
   15784:	mov	r8, #67108864	; 0x4000000
   15788:	ldm	r5!, {r0, r1, r2, r3}
   1578c:	ldr	r6, [pc, #436]	; 15948 <__snprintf_chk@plt+0x45dc>
   15790:	stmia	ip!, {r0, r1, r2, r3}
   15794:	ldm	r5, {r0, r1, r2, r3}
   15798:	stm	ip, {r0, r1, r2, r3}
   1579c:	ldm	r7!, {r0, r1, r2, r3}
   157a0:	stmia	lr!, {r0, r1, r2, r3}
   157a4:	ldm	r7!, {r0, r1, r2, r3}
   157a8:	str	r8, [sp, #44]	; 0x2c
   157ac:	stmia	lr!, {r0, r1, r2, r3}
   157b0:	ldm	ip, {r0, r1, r2, r3}
   157b4:	stm	lr, {r0, r1, r2, r3}
   157b8:	bl	1124c <__errno_location@plt>
   157bc:	cmn	r4, #-2147483647	; 0x80000001
   157c0:	ldr	r5, [r6]
   157c4:	mov	r7, r0
   157c8:	movne	r0, #0
   157cc:	moveq	r0, #1
   157d0:	ldr	r3, [r7]
   157d4:	orrs	r0, r0, r4, lsr #31
   157d8:	str	r3, [sp, #24]
   157dc:	bne	15944 <__snprintf_chk@plt+0x45d8>
   157e0:	ldr	r2, [r6, #4]
   157e4:	cmp	r4, r2
   157e8:	blt	15848 <__snprintf_chk@plt+0x44dc>
   157ec:	add	r8, r6, #8
   157f0:	cmp	r5, r8
   157f4:	str	r2, [sp, #80]	; 0x50
   157f8:	beq	15914 <__snprintf_chk@plt+0x45a8>
   157fc:	mov	r3, #8
   15800:	sub	r2, r4, r2
   15804:	mov	r0, r5
   15808:	str	r3, [sp]
   1580c:	add	r2, r2, #1
   15810:	add	r1, sp, #80	; 0x50
   15814:	mvn	r3, #-2147483648	; 0x80000000
   15818:	bl	1769c <__snprintf_chk@plt+0x6330>
   1581c:	mov	r5, r0
   15820:	str	r0, [r6]
   15824:	ldr	r0, [r6, #4]
   15828:	ldr	r2, [sp, #80]	; 0x50
   1582c:	mov	r1, #0
   15830:	sub	r2, r2, r0
   15834:	add	r0, r5, r0, lsl #3
   15838:	lsl	r2, r2, #3
   1583c:	bl	11270 <memset@plt>
   15840:	ldr	r3, [sp, #80]	; 0x50
   15844:	str	r3, [r6, #4]
   15848:	add	fp, r5, r4, lsl #3
   1584c:	ldr	r1, [sp, #36]	; 0x24
   15850:	ldr	r8, [r5, r4, lsl #3]
   15854:	ldr	r6, [fp, #4]
   15858:	ldr	r2, [sp, #72]	; 0x48
   1585c:	ldr	r3, [sp, #32]
   15860:	ldr	ip, [sp, #76]	; 0x4c
   15864:	orr	r1, r1, #1
   15868:	add	sl, sp, #40	; 0x28
   1586c:	str	r1, [sp, #28]
   15870:	str	r1, [sp, #4]
   15874:	str	r2, [sp, #12]
   15878:	str	r3, [sp]
   1587c:	mov	r0, r6
   15880:	mov	r1, r8
   15884:	str	ip, [sp, #16]
   15888:	str	sl, [sp, #8]
   1588c:	mvn	r3, #0
   15890:	mov	r2, r9
   15894:	bl	12938 <__snprintf_chk@plt+0x15cc>
   15898:	cmp	r8, r0
   1589c:	bhi	15900 <__snprintf_chk@plt+0x4594>
   158a0:	ldr	r3, [pc, #164]	; 1594c <__snprintf_chk@plt+0x45e0>
   158a4:	add	r8, r0, #1
   158a8:	cmp	r6, r3
   158ac:	str	r8, [r5, r4, lsl #3]
   158b0:	beq	158bc <__snprintf_chk@plt+0x4550>
   158b4:	mov	r0, r6
   158b8:	bl	1270c <__snprintf_chk@plt+0x13a0>
   158bc:	mov	r0, r8
   158c0:	bl	17480 <__snprintf_chk@plt+0x6114>
   158c4:	ldr	lr, [sp, #76]	; 0x4c
   158c8:	ldr	r3, [sp, #32]
   158cc:	ldr	ip, [sp, #72]	; 0x48
   158d0:	ldr	r4, [sp, #28]
   158d4:	mov	r2, r9
   158d8:	mov	r1, r8
   158dc:	str	r0, [fp, #4]
   158e0:	str	r3, [sp]
   158e4:	str	sl, [sp, #8]
   158e8:	str	r4, [sp, #4]
   158ec:	str	lr, [sp, #16]
   158f0:	str	ip, [sp, #12]
   158f4:	mvn	r3, #0
   158f8:	mov	r6, r0
   158fc:	bl	12938 <__snprintf_chk@plt+0x15cc>
   15900:	ldr	r3, [sp, #24]
   15904:	mov	r0, r6
   15908:	str	r3, [r7]
   1590c:	add	sp, sp, #180	; 0xb4
   15910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15914:	mov	r3, #8
   15918:	sub	r2, r4, r2
   1591c:	add	r1, sp, #80	; 0x50
   15920:	str	r3, [sp]
   15924:	add	r2, r2, #1
   15928:	mvn	r3, #-2147483648	; 0x80000000
   1592c:	bl	1769c <__snprintf_chk@plt+0x6330>
   15930:	mov	r5, r0
   15934:	ldm	r8, {r0, r1}
   15938:	str	r5, [r6]
   1593c:	stm	r5, {r0, r1}
   15940:	b	15824 <__snprintf_chk@plt+0x44b8>
   15944:	bl	11360 <abort@plt>
   15948:	andeq	sl, r2, r8, lsr r1
   1594c:	muleq	r2, r8, r3
   15950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15954:	mov	r7, r1
   15958:	ldr	lr, [pc, #492]	; 15b4c <__snprintf_chk@plt+0x47e0>
   1595c:	mov	r8, r2
   15960:	mov	r4, r0
   15964:	mov	fp, r3
   15968:	ldm	lr!, {r0, r1, r2, r3}
   1596c:	sub	sp, sp, #100	; 0x64
   15970:	add	ip, sp, #48	; 0x30
   15974:	mov	sl, #10
   15978:	stmia	ip!, {r0, r1, r2, r3}
   1597c:	cmp	r8, #0
   15980:	cmpne	r7, #0
   15984:	ldm	lr!, {r0, r1, r2, r3}
   15988:	str	sl, [sp, #48]	; 0x30
   1598c:	stmia	ip!, {r0, r1, r2, r3}
   15990:	ldm	lr, {r0, r1, r2, r3}
   15994:	stm	ip, {r0, r1, r2, r3}
   15998:	beq	15b48 <__snprintf_chk@plt+0x47dc>
   1599c:	str	r7, [sp, #88]	; 0x58
   159a0:	str	r8, [sp, #92]	; 0x5c
   159a4:	bl	1124c <__errno_location@plt>
   159a8:	ldr	r6, [pc, #416]	; 15b50 <__snprintf_chk@plt+0x47e4>
   159ac:	cmn	r4, #-2147483647	; 0x80000001
   159b0:	ldr	r5, [r6]
   159b4:	mov	r9, r0
   159b8:	movne	r0, #0
   159bc:	moveq	r0, #1
   159c0:	ldr	r3, [r9]
   159c4:	orrs	r0, r0, r4, lsr #31
   159c8:	str	r3, [sp, #28]
   159cc:	bne	15b48 <__snprintf_chk@plt+0x47dc>
   159d0:	ldr	r2, [r6, #4]
   159d4:	cmp	r4, r2
   159d8:	movlt	r3, sl
   159dc:	blt	15a48 <__snprintf_chk@plt+0x46dc>
   159e0:	add	r7, r6, #8
   159e4:	cmp	r5, r7
   159e8:	str	r2, [sp, #44]	; 0x2c
   159ec:	beq	15b18 <__snprintf_chk@plt+0x47ac>
   159f0:	mov	r3, #8
   159f4:	sub	r2, r4, r2
   159f8:	mov	r0, r5
   159fc:	str	r3, [sp]
   15a00:	add	r2, r2, #1
   15a04:	mvn	r3, #-2147483648	; 0x80000000
   15a08:	add	r1, sp, #44	; 0x2c
   15a0c:	bl	1769c <__snprintf_chk@plt+0x6330>
   15a10:	mov	r5, r0
   15a14:	str	r0, [r6]
   15a18:	ldr	r0, [r6, #4]
   15a1c:	ldr	r2, [sp, #44]	; 0x2c
   15a20:	mov	r1, #0
   15a24:	sub	r2, r2, r0
   15a28:	add	r0, r5, r0, lsl #3
   15a2c:	lsl	r2, r2, #3
   15a30:	bl	11270 <memset@plt>
   15a34:	ldr	r3, [sp, #48]	; 0x30
   15a38:	ldr	r7, [sp, #88]	; 0x58
   15a3c:	ldr	r8, [sp, #92]	; 0x5c
   15a40:	ldr	r2, [sp, #44]	; 0x2c
   15a44:	str	r2, [r6, #4]
   15a48:	add	r2, r5, r4, lsl #3
   15a4c:	mov	r1, r2
   15a50:	str	r2, [sp, #32]
   15a54:	ldr	r2, [sp, #52]	; 0x34
   15a58:	ldr	r6, [r1, #4]
   15a5c:	ldr	sl, [r5, r4, lsl #3]
   15a60:	orr	r2, r2, #1
   15a64:	str	r3, [sp]
   15a68:	add	r3, sp, #56	; 0x38
   15a6c:	str	r2, [sp, #36]	; 0x24
   15a70:	str	r2, [sp, #4]
   15a74:	str	r3, [sp, #8]
   15a78:	mov	r0, r6
   15a7c:	str	r8, [sp, #16]
   15a80:	str	r7, [sp, #12]
   15a84:	mov	r1, sl
   15a88:	mvn	r3, #0
   15a8c:	mov	r2, fp
   15a90:	bl	12938 <__snprintf_chk@plt+0x15cc>
   15a94:	cmp	sl, r0
   15a98:	bhi	15b04 <__snprintf_chk@plt+0x4798>
   15a9c:	ldr	r3, [pc, #176]	; 15b54 <__snprintf_chk@plt+0x47e8>
   15aa0:	add	r7, r0, #1
   15aa4:	cmp	r6, r3
   15aa8:	str	r7, [r5, r4, lsl #3]
   15aac:	beq	15ab8 <__snprintf_chk@plt+0x474c>
   15ab0:	mov	r0, r6
   15ab4:	bl	1270c <__snprintf_chk@plt+0x13a0>
   15ab8:	mov	r0, r7
   15abc:	bl	17480 <__snprintf_chk@plt+0x6114>
   15ac0:	ldr	r3, [sp, #32]
   15ac4:	ldr	lr, [sp, #92]	; 0x5c
   15ac8:	ldr	ip, [sp, #88]	; 0x58
   15acc:	ldr	r4, [sp, #36]	; 0x24
   15ad0:	mov	r2, fp
   15ad4:	mov	r1, r7
   15ad8:	str	r0, [r3, #4]
   15adc:	add	r3, sp, #56	; 0x38
   15ae0:	str	r3, [sp, #8]
   15ae4:	ldr	r3, [sp, #48]	; 0x30
   15ae8:	str	r4, [sp, #4]
   15aec:	str	r3, [sp]
   15af0:	str	lr, [sp, #16]
   15af4:	str	ip, [sp, #12]
   15af8:	mvn	r3, #0
   15afc:	mov	r6, r0
   15b00:	bl	12938 <__snprintf_chk@plt+0x15cc>
   15b04:	ldr	r3, [sp, #28]
   15b08:	mov	r0, r6
   15b0c:	str	r3, [r9]
   15b10:	add	sp, sp, #100	; 0x64
   15b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b18:	mov	r3, #8
   15b1c:	sub	r2, r4, r2
   15b20:	str	r3, [sp]
   15b24:	add	r1, sp, #44	; 0x2c
   15b28:	add	r2, r2, #1
   15b2c:	mvn	r3, #-2147483648	; 0x80000000
   15b30:	bl	1769c <__snprintf_chk@plt+0x6330>
   15b34:	mov	r5, r0
   15b38:	ldm	r7, {r0, r1}
   15b3c:	str	r5, [r6]
   15b40:	stm	r5, {r0, r1}
   15b44:	b	15a18 <__snprintf_chk@plt+0x46ac>
   15b48:	bl	11360 <abort@plt>
   15b4c:	andeq	sl, r2, r8, ror #6
   15b50:	andeq	sl, r2, r8, lsr r1
   15b54:	muleq	r2, r8, r3
   15b58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b5c:	mov	r7, r1
   15b60:	ldr	lr, [pc, #492]	; 15d54 <__snprintf_chk@plt+0x49e8>
   15b64:	mov	r8, r2
   15b68:	mov	r4, r0
   15b6c:	mov	fp, r3
   15b70:	ldm	lr!, {r0, r1, r2, r3}
   15b74:	sub	sp, sp, #100	; 0x64
   15b78:	add	ip, sp, #48	; 0x30
   15b7c:	mov	sl, #10
   15b80:	stmia	ip!, {r0, r1, r2, r3}
   15b84:	cmp	r8, #0
   15b88:	cmpne	r7, #0
   15b8c:	ldm	lr!, {r0, r1, r2, r3}
   15b90:	str	sl, [sp, #48]	; 0x30
   15b94:	stmia	ip!, {r0, r1, r2, r3}
   15b98:	ldm	lr, {r0, r1, r2, r3}
   15b9c:	stm	ip, {r0, r1, r2, r3}
   15ba0:	beq	15d50 <__snprintf_chk@plt+0x49e4>
   15ba4:	str	r7, [sp, #88]	; 0x58
   15ba8:	str	r8, [sp, #92]	; 0x5c
   15bac:	bl	1124c <__errno_location@plt>
   15bb0:	ldr	r6, [pc, #416]	; 15d58 <__snprintf_chk@plt+0x49ec>
   15bb4:	cmn	r4, #-2147483647	; 0x80000001
   15bb8:	ldr	r5, [r6]
   15bbc:	mov	r9, r0
   15bc0:	movne	r0, #0
   15bc4:	moveq	r0, #1
   15bc8:	ldr	r3, [r9]
   15bcc:	orrs	r0, r0, r4, lsr #31
   15bd0:	str	r3, [sp, #28]
   15bd4:	bne	15d50 <__snprintf_chk@plt+0x49e4>
   15bd8:	ldr	r2, [r6, #4]
   15bdc:	cmp	r4, r2
   15be0:	movlt	r3, sl
   15be4:	blt	15c50 <__snprintf_chk@plt+0x48e4>
   15be8:	add	r7, r6, #8
   15bec:	cmp	r5, r7
   15bf0:	str	r2, [sp, #44]	; 0x2c
   15bf4:	beq	15d20 <__snprintf_chk@plt+0x49b4>
   15bf8:	mov	r3, #8
   15bfc:	sub	r2, r4, r2
   15c00:	mov	r0, r5
   15c04:	str	r3, [sp]
   15c08:	add	r2, r2, #1
   15c0c:	mvn	r3, #-2147483648	; 0x80000000
   15c10:	add	r1, sp, #44	; 0x2c
   15c14:	bl	1769c <__snprintf_chk@plt+0x6330>
   15c18:	mov	r5, r0
   15c1c:	str	r0, [r6]
   15c20:	ldr	r0, [r6, #4]
   15c24:	ldr	r2, [sp, #44]	; 0x2c
   15c28:	mov	r1, #0
   15c2c:	sub	r2, r2, r0
   15c30:	add	r0, r5, r0, lsl #3
   15c34:	lsl	r2, r2, #3
   15c38:	bl	11270 <memset@plt>
   15c3c:	ldr	r3, [sp, #48]	; 0x30
   15c40:	ldr	r7, [sp, #88]	; 0x58
   15c44:	ldr	r8, [sp, #92]	; 0x5c
   15c48:	ldr	r2, [sp, #44]	; 0x2c
   15c4c:	str	r2, [r6, #4]
   15c50:	add	r2, r5, r4, lsl #3
   15c54:	mov	r1, r2
   15c58:	str	r2, [sp, #32]
   15c5c:	ldr	r2, [sp, #52]	; 0x34
   15c60:	ldr	r6, [r1, #4]
   15c64:	ldr	sl, [r5, r4, lsl #3]
   15c68:	orr	r2, r2, #1
   15c6c:	str	r3, [sp]
   15c70:	add	r3, sp, #56	; 0x38
   15c74:	str	r2, [sp, #36]	; 0x24
   15c78:	str	r2, [sp, #4]
   15c7c:	str	r3, [sp, #8]
   15c80:	mov	r0, r6
   15c84:	str	r8, [sp, #16]
   15c88:	str	r7, [sp, #12]
   15c8c:	mov	r1, sl
   15c90:	ldr	r3, [sp, #136]	; 0x88
   15c94:	mov	r2, fp
   15c98:	bl	12938 <__snprintf_chk@plt+0x15cc>
   15c9c:	cmp	sl, r0
   15ca0:	bhi	15d0c <__snprintf_chk@plt+0x49a0>
   15ca4:	ldr	r3, [pc, #176]	; 15d5c <__snprintf_chk@plt+0x49f0>
   15ca8:	add	r7, r0, #1
   15cac:	cmp	r6, r3
   15cb0:	str	r7, [r5, r4, lsl #3]
   15cb4:	beq	15cc0 <__snprintf_chk@plt+0x4954>
   15cb8:	mov	r0, r6
   15cbc:	bl	1270c <__snprintf_chk@plt+0x13a0>
   15cc0:	mov	r0, r7
   15cc4:	bl	17480 <__snprintf_chk@plt+0x6114>
   15cc8:	ldr	r3, [sp, #32]
   15ccc:	ldr	lr, [sp, #92]	; 0x5c
   15cd0:	ldr	ip, [sp, #88]	; 0x58
   15cd4:	ldr	r4, [sp, #36]	; 0x24
   15cd8:	mov	r2, fp
   15cdc:	mov	r1, r7
   15ce0:	str	r0, [r3, #4]
   15ce4:	add	r3, sp, #56	; 0x38
   15ce8:	str	r3, [sp, #8]
   15cec:	ldr	r3, [sp, #48]	; 0x30
   15cf0:	str	r4, [sp, #4]
   15cf4:	str	r3, [sp]
   15cf8:	str	lr, [sp, #16]
   15cfc:	str	ip, [sp, #12]
   15d00:	ldr	r3, [sp, #136]	; 0x88
   15d04:	mov	r6, r0
   15d08:	bl	12938 <__snprintf_chk@plt+0x15cc>
   15d0c:	ldr	r3, [sp, #28]
   15d10:	mov	r0, r6
   15d14:	str	r3, [r9]
   15d18:	add	sp, sp, #100	; 0x64
   15d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d20:	mov	r3, #8
   15d24:	sub	r2, r4, r2
   15d28:	str	r3, [sp]
   15d2c:	add	r1, sp, #44	; 0x2c
   15d30:	add	r2, r2, #1
   15d34:	mvn	r3, #-2147483648	; 0x80000000
   15d38:	bl	1769c <__snprintf_chk@plt+0x6330>
   15d3c:	mov	r5, r0
   15d40:	ldm	r7, {r0, r1}
   15d44:	str	r5, [r6]
   15d48:	stm	r5, {r0, r1}
   15d4c:	b	15c20 <__snprintf_chk@plt+0x48b4>
   15d50:	bl	11360 <abort@plt>
   15d54:	andeq	sl, r2, r8, ror #6
   15d58:	andeq	sl, r2, r8, lsr r1
   15d5c:	muleq	r2, r8, r3
   15d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d64:	mov	r5, r0
   15d68:	ldr	lr, [pc, #452]	; 15f34 <__snprintf_chk@plt+0x4bc8>
   15d6c:	mov	r6, r1
   15d70:	mov	sl, r2
   15d74:	ldm	lr!, {r0, r1, r2, r3}
   15d78:	sub	sp, sp, #92	; 0x5c
   15d7c:	add	ip, sp, #40	; 0x28
   15d80:	cmp	r6, #0
   15d84:	cmpne	r5, #0
   15d88:	stmia	ip!, {r0, r1, r2, r3}
   15d8c:	mov	r9, #10
   15d90:	ldm	lr!, {r0, r1, r2, r3}
   15d94:	moveq	fp, #1
   15d98:	movne	fp, #0
   15d9c:	str	r9, [sp, #40]	; 0x28
   15da0:	stmia	ip!, {r0, r1, r2, r3}
   15da4:	ldm	lr, {r0, r1, r2, r3}
   15da8:	stm	ip, {r0, r1, r2, r3}
   15dac:	beq	15f30 <__snprintf_chk@plt+0x4bc4>
   15db0:	str	r5, [sp, #80]	; 0x50
   15db4:	str	r6, [sp, #84]	; 0x54
   15db8:	bl	1124c <__errno_location@plt>
   15dbc:	ldr	r7, [pc, #372]	; 15f38 <__snprintf_chk@plt+0x4bcc>
   15dc0:	ldr	r2, [r7, #4]
   15dc4:	ldr	r4, [r7]
   15dc8:	cmp	r2, #0
   15dcc:	ldr	r3, [r0]
   15dd0:	mov	r8, r0
   15dd4:	str	r3, [sp, #24]
   15dd8:	movgt	r3, r9
   15ddc:	bgt	15e44 <__snprintf_chk@plt+0x4ad8>
   15de0:	add	r5, r7, #8
   15de4:	cmp	r4, r5
   15de8:	str	r2, [sp, #36]	; 0x24
   15dec:	beq	15f00 <__snprintf_chk@plt+0x4b94>
   15df0:	mov	r3, #8
   15df4:	mov	r0, r4
   15df8:	str	r3, [sp]
   15dfc:	rsb	r2, r2, #1
   15e00:	mvn	r3, #-2147483648	; 0x80000000
   15e04:	add	r1, sp, #36	; 0x24
   15e08:	bl	1769c <__snprintf_chk@plt+0x6330>
   15e0c:	mov	r4, r0
   15e10:	str	r0, [r7]
   15e14:	ldr	r0, [r7, #4]
   15e18:	ldr	r2, [sp, #36]	; 0x24
   15e1c:	mov	r1, #0
   15e20:	sub	r2, r2, r0
   15e24:	add	r0, r4, r0, lsl #3
   15e28:	lsl	r2, r2, #3
   15e2c:	bl	11270 <memset@plt>
   15e30:	ldr	r3, [sp, #40]	; 0x28
   15e34:	ldr	r5, [sp, #80]	; 0x50
   15e38:	ldr	r6, [sp, #84]	; 0x54
   15e3c:	ldr	r2, [sp, #36]	; 0x24
   15e40:	str	r2, [r7, #4]
   15e44:	ldr	r2, [sp, #44]	; 0x2c
   15e48:	ldr	r9, [r4]
   15e4c:	ldr	r7, [r4, #4]
   15e50:	orr	r2, r2, #1
   15e54:	add	fp, sp, #48	; 0x30
   15e58:	str	r2, [sp, #28]
   15e5c:	str	r2, [sp, #4]
   15e60:	str	r3, [sp]
   15e64:	str	r6, [sp, #16]
   15e68:	str	r5, [sp, #12]
   15e6c:	mov	r1, r9
   15e70:	mov	r0, r7
   15e74:	str	fp, [sp, #8]
   15e78:	mvn	r3, #0
   15e7c:	mov	r2, sl
   15e80:	bl	12938 <__snprintf_chk@plt+0x15cc>
   15e84:	cmp	r9, r0
   15e88:	bhi	15eec <__snprintf_chk@plt+0x4b80>
   15e8c:	ldr	r3, [pc, #168]	; 15f3c <__snprintf_chk@plt+0x4bd0>
   15e90:	add	r5, r0, #1
   15e94:	cmp	r7, r3
   15e98:	str	r5, [r4]
   15e9c:	beq	15ea8 <__snprintf_chk@plt+0x4b3c>
   15ea0:	mov	r0, r7
   15ea4:	bl	1270c <__snprintf_chk@plt+0x13a0>
   15ea8:	mov	r0, r5
   15eac:	bl	17480 <__snprintf_chk@plt+0x6114>
   15eb0:	ldr	lr, [sp, #84]	; 0x54
   15eb4:	ldr	r3, [sp, #40]	; 0x28
   15eb8:	ldr	ip, [sp, #80]	; 0x50
   15ebc:	mov	r2, sl
   15ec0:	mov	r1, r5
   15ec4:	str	r0, [r4, #4]
   15ec8:	ldr	r4, [sp, #28]
   15ecc:	str	r3, [sp]
   15ed0:	str	fp, [sp, #8]
   15ed4:	str	r4, [sp, #4]
   15ed8:	str	lr, [sp, #16]
   15edc:	str	ip, [sp, #12]
   15ee0:	mvn	r3, #0
   15ee4:	mov	r7, r0
   15ee8:	bl	12938 <__snprintf_chk@plt+0x15cc>
   15eec:	ldr	r3, [sp, #24]
   15ef0:	mov	r0, r7
   15ef4:	str	r3, [r8]
   15ef8:	add	sp, sp, #92	; 0x5c
   15efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f00:	mov	r3, #8
   15f04:	str	r3, [sp]
   15f08:	add	r1, sp, #36	; 0x24
   15f0c:	rsb	r2, r2, #1
   15f10:	mov	r0, fp
   15f14:	mvn	r3, #-2147483648	; 0x80000000
   15f18:	bl	1769c <__snprintf_chk@plt+0x6330>
   15f1c:	mov	r4, r0
   15f20:	ldm	r5, {r0, r1}
   15f24:	str	r4, [r7]
   15f28:	stm	r4, {r0, r1}
   15f2c:	b	15e14 <__snprintf_chk@plt+0x4aa8>
   15f30:	bl	11360 <abort@plt>
   15f34:	andeq	sl, r2, r8, ror #6
   15f38:	andeq	sl, r2, r8, lsr r1
   15f3c:	muleq	r2, r8, r3
   15f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f44:	mov	r5, r0
   15f48:	ldr	lr, [pc, #464]	; 16120 <__snprintf_chk@plt+0x4db4>
   15f4c:	mov	r6, r1
   15f50:	mov	sl, r2
   15f54:	mov	fp, r3
   15f58:	ldm	lr!, {r0, r1, r2, r3}
   15f5c:	sub	sp, sp, #92	; 0x5c
   15f60:	add	ip, sp, #40	; 0x28
   15f64:	cmp	r6, #0
   15f68:	cmpne	r5, #0
   15f6c:	stmia	ip!, {r0, r1, r2, r3}
   15f70:	moveq	r4, #1
   15f74:	ldm	lr!, {r0, r1, r2, r3}
   15f78:	movne	r4, #0
   15f7c:	mov	r9, #10
   15f80:	str	r4, [sp, #28]
   15f84:	stmia	ip!, {r0, r1, r2, r3}
   15f88:	ldm	lr, {r0, r1, r2, r3}
   15f8c:	str	r9, [sp, #40]	; 0x28
   15f90:	stm	ip, {r0, r1, r2, r3}
   15f94:	beq	1611c <__snprintf_chk@plt+0x4db0>
   15f98:	str	r5, [sp, #80]	; 0x50
   15f9c:	str	r6, [sp, #84]	; 0x54
   15fa0:	bl	1124c <__errno_location@plt>
   15fa4:	ldr	r7, [pc, #376]	; 16124 <__snprintf_chk@plt+0x4db8>
   15fa8:	ldr	r2, [r7, #4]
   15fac:	ldr	r4, [r7]
   15fb0:	cmp	r2, #0
   15fb4:	ldr	r3, [r0]
   15fb8:	mov	r8, r0
   15fbc:	str	r3, [sp, #24]
   15fc0:	movgt	r3, r9
   15fc4:	bgt	1602c <__snprintf_chk@plt+0x4cc0>
   15fc8:	add	r5, r7, #8
   15fcc:	cmp	r4, r5
   15fd0:	str	r2, [sp, #36]	; 0x24
   15fd4:	beq	160ec <__snprintf_chk@plt+0x4d80>
   15fd8:	mov	r3, #8
   15fdc:	mov	r0, r4
   15fe0:	str	r3, [sp]
   15fe4:	rsb	r2, r2, #1
   15fe8:	mvn	r3, #-2147483648	; 0x80000000
   15fec:	add	r1, sp, #36	; 0x24
   15ff0:	bl	1769c <__snprintf_chk@plt+0x6330>
   15ff4:	mov	r4, r0
   15ff8:	str	r0, [r7]
   15ffc:	ldr	r0, [r7, #4]
   16000:	ldr	r2, [sp, #36]	; 0x24
   16004:	mov	r1, #0
   16008:	sub	r2, r2, r0
   1600c:	add	r0, r4, r0, lsl #3
   16010:	lsl	r2, r2, #3
   16014:	bl	11270 <memset@plt>
   16018:	ldr	r3, [sp, #40]	; 0x28
   1601c:	ldr	r5, [sp, #80]	; 0x50
   16020:	ldr	r6, [sp, #84]	; 0x54
   16024:	ldr	r2, [sp, #36]	; 0x24
   16028:	str	r2, [r7, #4]
   1602c:	ldr	r2, [sp, #44]	; 0x2c
   16030:	ldr	r9, [r4]
   16034:	ldr	r7, [r4, #4]
   16038:	orr	r2, r2, #1
   1603c:	str	r3, [sp]
   16040:	add	r3, sp, #48	; 0x30
   16044:	str	r2, [sp, #28]
   16048:	str	r2, [sp, #4]
   1604c:	str	r3, [sp, #8]
   16050:	str	r6, [sp, #16]
   16054:	str	r5, [sp, #12]
   16058:	mov	r1, r9
   1605c:	mov	r0, r7
   16060:	mov	r3, fp
   16064:	mov	r2, sl
   16068:	bl	12938 <__snprintf_chk@plt+0x15cc>
   1606c:	cmp	r9, r0
   16070:	bhi	160d8 <__snprintf_chk@plt+0x4d6c>
   16074:	ldr	r3, [pc, #172]	; 16128 <__snprintf_chk@plt+0x4dbc>
   16078:	add	r5, r0, #1
   1607c:	cmp	r7, r3
   16080:	str	r5, [r4]
   16084:	beq	16090 <__snprintf_chk@plt+0x4d24>
   16088:	mov	r0, r7
   1608c:	bl	1270c <__snprintf_chk@plt+0x13a0>
   16090:	mov	r0, r5
   16094:	bl	17480 <__snprintf_chk@plt+0x6114>
   16098:	add	lr, sp, #48	; 0x30
   1609c:	ldr	ip, [sp, #84]	; 0x54
   160a0:	mov	r1, r5
   160a4:	ldr	r5, [sp, #28]
   160a8:	mov	r3, fp
   160ac:	mov	r2, sl
   160b0:	str	r0, [r4, #4]
   160b4:	ldr	r4, [sp, #80]	; 0x50
   160b8:	str	lr, [sp, #8]
   160bc:	ldr	lr, [sp, #40]	; 0x28
   160c0:	str	r5, [sp, #4]
   160c4:	str	ip, [sp, #16]
   160c8:	str	r4, [sp, #12]
   160cc:	str	lr, [sp]
   160d0:	mov	r7, r0
   160d4:	bl	12938 <__snprintf_chk@plt+0x15cc>
   160d8:	ldr	r3, [sp, #24]
   160dc:	mov	r0, r7
   160e0:	str	r3, [r8]
   160e4:	add	sp, sp, #92	; 0x5c
   160e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160ec:	mov	r3, #8
   160f0:	str	r3, [sp]
   160f4:	add	r1, sp, #36	; 0x24
   160f8:	rsb	r2, r2, #1
   160fc:	ldr	r0, [sp, #28]
   16100:	mvn	r3, #-2147483648	; 0x80000000
   16104:	bl	1769c <__snprintf_chk@plt+0x6330>
   16108:	mov	r4, r0
   1610c:	ldm	r5, {r0, r1}
   16110:	str	r4, [r7]
   16114:	stm	r4, {r0, r1}
   16118:	b	15ffc <__snprintf_chk@plt+0x4c90>
   1611c:	bl	11360 <abort@plt>
   16120:	andeq	sl, r2, r8, ror #6
   16124:	andeq	sl, r2, r8, lsr r1
   16128:	muleq	r2, r8, r3
   1612c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16130:	sub	sp, sp, #52	; 0x34
   16134:	mov	r5, r0
   16138:	mov	sl, r1
   1613c:	mov	fp, r2
   16140:	bl	1124c <__errno_location@plt>
   16144:	ldr	r4, [pc, #404]	; 162e0 <__snprintf_chk@plt+0x4f74>
   16148:	cmn	r5, #-2147483647	; 0x80000001
   1614c:	ldr	r6, [r4]
   16150:	mov	r8, r0
   16154:	movne	r0, #0
   16158:	moveq	r0, #1
   1615c:	ldr	r3, [r8]
   16160:	orrs	r0, r0, r5, lsr #31
   16164:	str	r3, [sp, #28]
   16168:	bne	162dc <__snprintf_chk@plt+0x4f70>
   1616c:	ldr	r2, [r4, #4]
   16170:	cmp	r5, r2
   16174:	blt	161d4 <__snprintf_chk@plt+0x4e68>
   16178:	add	r7, r4, #8
   1617c:	cmp	r6, r7
   16180:	str	r2, [sp, #44]	; 0x2c
   16184:	beq	162ac <__snprintf_chk@plt+0x4f40>
   16188:	mov	r3, #8
   1618c:	sub	r2, r5, r2
   16190:	mov	r0, r6
   16194:	str	r3, [sp]
   16198:	add	r2, r2, #1
   1619c:	mvn	r3, #-2147483648	; 0x80000000
   161a0:	add	r1, sp, #44	; 0x2c
   161a4:	bl	1769c <__snprintf_chk@plt+0x6330>
   161a8:	mov	r6, r0
   161ac:	str	r0, [r4]
   161b0:	ldr	r0, [r4, #4]
   161b4:	ldr	r2, [sp, #44]	; 0x2c
   161b8:	mov	r1, #0
   161bc:	sub	r2, r2, r0
   161c0:	add	r0, r6, r0, lsl #3
   161c4:	lsl	r2, r2, #3
   161c8:	bl	11270 <memset@plt>
   161cc:	ldr	r3, [sp, #44]	; 0x2c
   161d0:	str	r3, [r4, #4]
   161d4:	ldr	r2, [r4, #56]	; 0x38
   161d8:	add	r3, r6, r5, lsl #3
   161dc:	ldr	r1, [r4, #20]
   161e0:	ldr	r7, [r3, #4]
   161e4:	ldr	r9, [r6, r5, lsl #3]
   161e8:	ldr	ip, [r4, #60]	; 0x3c
   161ec:	str	r3, [sp, #32]
   161f0:	ldr	r3, [r4, #16]
   161f4:	str	r2, [sp, #12]
   161f8:	ldr	r2, [pc, #228]	; 162e4 <__snprintf_chk@plt+0x4f78>
   161fc:	orr	r1, r1, #1
   16200:	str	r1, [sp, #36]	; 0x24
   16204:	str	r1, [sp, #4]
   16208:	str	r2, [sp, #8]
   1620c:	str	r3, [sp]
   16210:	mov	r0, r7
   16214:	mov	r1, r9
   16218:	str	ip, [sp, #16]
   1621c:	mov	r3, fp
   16220:	mov	r2, sl
   16224:	bl	12938 <__snprintf_chk@plt+0x15cc>
   16228:	cmp	r9, r0
   1622c:	bhi	16298 <__snprintf_chk@plt+0x4f2c>
   16230:	ldr	r3, [pc, #176]	; 162e8 <__snprintf_chk@plt+0x4f7c>
   16234:	add	r9, r0, #1
   16238:	cmp	r7, r3
   1623c:	str	r9, [r6, r5, lsl #3]
   16240:	beq	1624c <__snprintf_chk@plt+0x4ee0>
   16244:	mov	r0, r7
   16248:	bl	1270c <__snprintf_chk@plt+0x13a0>
   1624c:	mov	r0, r9
   16250:	bl	17480 <__snprintf_chk@plt+0x6114>
   16254:	ldr	ip, [sp, #32]
   16258:	ldr	lr, [r4, #60]	; 0x3c
   1625c:	ldr	r5, [r4, #56]	; 0x38
   16260:	mov	r3, fp
   16264:	mov	r2, sl
   16268:	mov	r1, r9
   1626c:	str	r0, [ip, #4]
   16270:	ldr	ip, [r4, #16]
   16274:	ldr	r4, [pc, #104]	; 162e4 <__snprintf_chk@plt+0x4f78>
   16278:	str	lr, [sp, #16]
   1627c:	str	r4, [sp, #8]
   16280:	ldr	r4, [sp, #36]	; 0x24
   16284:	str	r5, [sp, #12]
   16288:	str	r4, [sp, #4]
   1628c:	str	ip, [sp]
   16290:	mov	r7, r0
   16294:	bl	12938 <__snprintf_chk@plt+0x15cc>
   16298:	ldr	r3, [sp, #28]
   1629c:	mov	r0, r7
   162a0:	str	r3, [r8]
   162a4:	add	sp, sp, #52	; 0x34
   162a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162ac:	mov	r3, #8
   162b0:	sub	r2, r5, r2
   162b4:	str	r3, [sp]
   162b8:	add	r1, sp, #44	; 0x2c
   162bc:	add	r2, r2, #1
   162c0:	mvn	r3, #-2147483648	; 0x80000000
   162c4:	bl	1769c <__snprintf_chk@plt+0x6330>
   162c8:	mov	r6, r0
   162cc:	ldm	r7, {r0, r1}
   162d0:	str	r6, [r4]
   162d4:	stm	r6, {r0, r1}
   162d8:	b	161b0 <__snprintf_chk@plt+0x4e44>
   162dc:	bl	11360 <abort@plt>
   162e0:	andeq	sl, r2, r8, lsr r1
   162e4:	andeq	sl, r2, r0, asr r1
   162e8:	muleq	r2, r8, r3
   162ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162f0:	sub	sp, sp, #44	; 0x2c
   162f4:	mov	r9, r0
   162f8:	mov	sl, r1
   162fc:	bl	1124c <__errno_location@plt>
   16300:	ldr	r4, [pc, #360]	; 16470 <__snprintf_chk@plt+0x5104>
   16304:	ldr	r2, [r4, #4]
   16308:	ldr	r5, [r4]
   1630c:	cmp	r2, #0
   16310:	ldr	r3, [r0]
   16314:	mov	r7, r0
   16318:	str	r3, [sp, #24]
   1631c:	bgt	16378 <__snprintf_chk@plt+0x500c>
   16320:	add	r6, r4, #8
   16324:	cmp	r5, r6
   16328:	str	r2, [sp, #36]	; 0x24
   1632c:	beq	16440 <__snprintf_chk@plt+0x50d4>
   16330:	mov	r3, #8
   16334:	mov	r0, r5
   16338:	str	r3, [sp]
   1633c:	rsb	r2, r2, #1
   16340:	mvn	r3, #-2147483648	; 0x80000000
   16344:	add	r1, sp, #36	; 0x24
   16348:	bl	1769c <__snprintf_chk@plt+0x6330>
   1634c:	mov	r5, r0
   16350:	str	r0, [r4]
   16354:	ldr	r0, [r4, #4]
   16358:	ldr	r2, [sp, #36]	; 0x24
   1635c:	mov	r1, #0
   16360:	sub	r2, r2, r0
   16364:	add	r0, r5, r0, lsl #3
   16368:	lsl	r2, r2, #3
   1636c:	bl	11270 <memset@plt>
   16370:	ldr	r3, [sp, #36]	; 0x24
   16374:	str	r3, [r4, #4]
   16378:	ldr	r1, [r4, #20]
   1637c:	ldr	r8, [r5]
   16380:	ldr	r6, [r5, #4]
   16384:	ldr	r2, [r4, #56]	; 0x38
   16388:	ldr	r3, [r4, #16]
   1638c:	ldr	ip, [r4, #60]	; 0x3c
   16390:	ldr	fp, [pc, #220]	; 16474 <__snprintf_chk@plt+0x5108>
   16394:	orr	r1, r1, #1
   16398:	str	r1, [sp, #28]
   1639c:	str	r1, [sp, #4]
   163a0:	str	r2, [sp, #12]
   163a4:	str	r3, [sp]
   163a8:	mov	r1, r8
   163ac:	mov	r0, r6
   163b0:	str	ip, [sp, #16]
   163b4:	str	fp, [sp, #8]
   163b8:	mov	r3, sl
   163bc:	mov	r2, r9
   163c0:	bl	12938 <__snprintf_chk@plt+0x15cc>
   163c4:	cmp	r8, r0
   163c8:	bhi	1642c <__snprintf_chk@plt+0x50c0>
   163cc:	ldr	r3, [pc, #164]	; 16478 <__snprintf_chk@plt+0x510c>
   163d0:	add	r8, r0, #1
   163d4:	cmp	r6, r3
   163d8:	str	r8, [r5]
   163dc:	beq	163e8 <__snprintf_chk@plt+0x507c>
   163e0:	mov	r0, r6
   163e4:	bl	1270c <__snprintf_chk@plt+0x13a0>
   163e8:	mov	r0, r8
   163ec:	bl	17480 <__snprintf_chk@plt+0x6114>
   163f0:	ldr	lr, [r4, #60]	; 0x3c
   163f4:	ldr	ip, [r4, #16]
   163f8:	mov	r3, sl
   163fc:	mov	r2, r9
   16400:	mov	r1, r8
   16404:	str	r0, [r5, #4]
   16408:	ldr	r5, [r4, #56]	; 0x38
   1640c:	ldr	r4, [sp, #28]
   16410:	str	fp, [sp, #8]
   16414:	str	r4, [sp, #4]
   16418:	str	lr, [sp, #16]
   1641c:	str	r5, [sp, #12]
   16420:	str	ip, [sp]
   16424:	mov	r6, r0
   16428:	bl	12938 <__snprintf_chk@plt+0x15cc>
   1642c:	ldr	r3, [sp, #24]
   16430:	mov	r0, r6
   16434:	str	r3, [r7]
   16438:	add	sp, sp, #44	; 0x2c
   1643c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16440:	mov	r3, #8
   16444:	str	r3, [sp]
   16448:	add	r1, sp, #36	; 0x24
   1644c:	rsb	r2, r2, #1
   16450:	mvn	r3, #-2147483648	; 0x80000000
   16454:	mov	r0, #0
   16458:	bl	1769c <__snprintf_chk@plt+0x6330>
   1645c:	mov	r5, r0
   16460:	ldm	r6, {r0, r1}
   16464:	str	r5, [r4]
   16468:	stm	r5, {r0, r1}
   1646c:	b	16354 <__snprintf_chk@plt+0x4fe8>
   16470:	andeq	sl, r2, r8, lsr r1
   16474:	andeq	sl, r2, r0, asr r1
   16478:	muleq	r2, r8, r3
   1647c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16480:	sub	sp, sp, #44	; 0x2c
   16484:	mov	r5, r0
   16488:	mov	sl, r1
   1648c:	bl	1124c <__errno_location@plt>
   16490:	ldr	r4, [pc, #396]	; 16624 <__snprintf_chk@plt+0x52b8>
   16494:	cmn	r5, #-2147483647	; 0x80000001
   16498:	ldr	r6, [r4]
   1649c:	mov	r8, r0
   164a0:	movne	r0, #0
   164a4:	moveq	r0, #1
   164a8:	ldr	r3, [r8]
   164ac:	orrs	r0, r0, r5, lsr #31
   164b0:	str	r3, [sp, #24]
   164b4:	bne	16620 <__snprintf_chk@plt+0x52b4>
   164b8:	ldr	r2, [r4, #4]
   164bc:	cmp	r5, r2
   164c0:	blt	16520 <__snprintf_chk@plt+0x51b4>
   164c4:	add	r7, r4, #8
   164c8:	cmp	r6, r7
   164cc:	str	r2, [sp, #36]	; 0x24
   164d0:	beq	165f0 <__snprintf_chk@plt+0x5284>
   164d4:	mov	r3, #8
   164d8:	sub	r2, r5, r2
   164dc:	mov	r0, r6
   164e0:	str	r3, [sp]
   164e4:	add	r2, r2, #1
   164e8:	mvn	r3, #-2147483648	; 0x80000000
   164ec:	add	r1, sp, #36	; 0x24
   164f0:	bl	1769c <__snprintf_chk@plt+0x6330>
   164f4:	mov	r6, r0
   164f8:	str	r0, [r4]
   164fc:	ldr	r0, [r4, #4]
   16500:	ldr	r2, [sp, #36]	; 0x24
   16504:	mov	r1, #0
   16508:	sub	r2, r2, r0
   1650c:	add	r0, r6, r0, lsl #3
   16510:	lsl	r2, r2, #3
   16514:	bl	11270 <memset@plt>
   16518:	ldr	r3, [sp, #36]	; 0x24
   1651c:	str	r3, [r4, #4]
   16520:	ldr	r2, [r4, #56]	; 0x38
   16524:	add	fp, r6, r5, lsl #3
   16528:	ldr	r1, [r4, #20]
   1652c:	ldr	r9, [r6, r5, lsl #3]
   16530:	ldr	r7, [fp, #4]
   16534:	ldr	r3, [r4, #16]
   16538:	ldr	ip, [r4, #60]	; 0x3c
   1653c:	str	r2, [sp, #12]
   16540:	ldr	r2, [pc, #224]	; 16628 <__snprintf_chk@plt+0x52bc>
   16544:	orr	r1, r1, #1
   16548:	str	r1, [sp, #28]
   1654c:	str	r1, [sp, #4]
   16550:	str	r2, [sp, #8]
   16554:	str	r3, [sp]
   16558:	mov	r0, r7
   1655c:	mov	r1, r9
   16560:	str	ip, [sp, #16]
   16564:	mvn	r3, #0
   16568:	mov	r2, sl
   1656c:	bl	12938 <__snprintf_chk@plt+0x15cc>
   16570:	cmp	r9, r0
   16574:	bhi	165dc <__snprintf_chk@plt+0x5270>
   16578:	ldr	r3, [pc, #172]	; 1662c <__snprintf_chk@plt+0x52c0>
   1657c:	add	r9, r0, #1
   16580:	cmp	r7, r3
   16584:	str	r9, [r6, r5, lsl #3]
   16588:	beq	16594 <__snprintf_chk@plt+0x5228>
   1658c:	mov	r0, r7
   16590:	bl	1270c <__snprintf_chk@plt+0x13a0>
   16594:	mov	r0, r9
   16598:	bl	17480 <__snprintf_chk@plt+0x6114>
   1659c:	ldr	ip, [r4, #60]	; 0x3c
   165a0:	ldr	r3, [r4, #16]
   165a4:	ldr	lr, [r4, #56]	; 0x38
   165a8:	ldr	r4, [pc, #120]	; 16628 <__snprintf_chk@plt+0x52bc>
   165ac:	mov	r2, sl
   165b0:	mov	r1, r9
   165b4:	str	r0, [fp, #4]
   165b8:	str	r4, [sp, #8]
   165bc:	ldr	r4, [sp, #28]
   165c0:	str	r3, [sp]
   165c4:	str	r4, [sp, #4]
   165c8:	str	ip, [sp, #16]
   165cc:	str	lr, [sp, #12]
   165d0:	mvn	r3, #0
   165d4:	mov	r7, r0
   165d8:	bl	12938 <__snprintf_chk@plt+0x15cc>
   165dc:	ldr	r3, [sp, #24]
   165e0:	mov	r0, r7
   165e4:	str	r3, [r8]
   165e8:	add	sp, sp, #44	; 0x2c
   165ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165f0:	mov	r3, #8
   165f4:	sub	r2, r5, r2
   165f8:	str	r3, [sp]
   165fc:	add	r1, sp, #36	; 0x24
   16600:	add	r2, r2, #1
   16604:	mvn	r3, #-2147483648	; 0x80000000
   16608:	bl	1769c <__snprintf_chk@plt+0x6330>
   1660c:	mov	r6, r0
   16610:	ldm	r7, {r0, r1}
   16614:	str	r6, [r4]
   16618:	stm	r6, {r0, r1}
   1661c:	b	164fc <__snprintf_chk@plt+0x5190>
   16620:	bl	11360 <abort@plt>
   16624:	andeq	sl, r2, r8, lsr r1
   16628:	andeq	sl, r2, r0, asr r1
   1662c:	muleq	r2, r8, r3
   16630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16634:	sub	sp, sp, #44	; 0x2c
   16638:	mov	sl, r0
   1663c:	bl	1124c <__errno_location@plt>
   16640:	ldr	r4, [pc, #348]	; 167a4 <__snprintf_chk@plt+0x5438>
   16644:	ldr	r2, [r4, #4]
   16648:	ldr	r5, [r4]
   1664c:	cmp	r2, #0
   16650:	ldr	r3, [r0]
   16654:	mov	r8, r0
   16658:	str	r3, [sp, #28]
   1665c:	bgt	166b8 <__snprintf_chk@plt+0x534c>
   16660:	add	r6, r4, #8
   16664:	cmp	r5, r6
   16668:	str	r2, [sp, #36]	; 0x24
   1666c:	beq	16774 <__snprintf_chk@plt+0x5408>
   16670:	mov	r3, #8
   16674:	mov	r0, r5
   16678:	str	r3, [sp]
   1667c:	rsb	r2, r2, #1
   16680:	mvn	r3, #-2147483648	; 0x80000000
   16684:	add	r1, sp, #36	; 0x24
   16688:	bl	1769c <__snprintf_chk@plt+0x6330>
   1668c:	mov	r5, r0
   16690:	str	r0, [r4]
   16694:	ldr	r0, [r4, #4]
   16698:	ldr	r2, [sp, #36]	; 0x24
   1669c:	mov	r1, #0
   166a0:	sub	r2, r2, r0
   166a4:	add	r0, r5, r0, lsl #3
   166a8:	lsl	r2, r2, #3
   166ac:	bl	11270 <memset@plt>
   166b0:	ldr	r3, [sp, #36]	; 0x24
   166b4:	str	r3, [r4, #4]
   166b8:	ldr	r7, [r4, #20]
   166bc:	ldr	r9, [r5]
   166c0:	ldr	r6, [r5, #4]
   166c4:	ldr	r2, [r4, #56]	; 0x38
   166c8:	ldr	r3, [r4, #16]
   166cc:	ldr	ip, [r4, #60]	; 0x3c
   166d0:	ldr	fp, [pc, #208]	; 167a8 <__snprintf_chk@plt+0x543c>
   166d4:	orr	r7, r7, #1
   166d8:	str	r2, [sp, #12]
   166dc:	str	r3, [sp]
   166e0:	str	r7, [sp, #4]
   166e4:	mov	r1, r9
   166e8:	mov	r0, r6
   166ec:	str	ip, [sp, #16]
   166f0:	str	fp, [sp, #8]
   166f4:	mvn	r3, #0
   166f8:	mov	r2, sl
   166fc:	bl	12938 <__snprintf_chk@plt+0x15cc>
   16700:	cmp	r9, r0
   16704:	bhi	16760 <__snprintf_chk@plt+0x53f4>
   16708:	ldr	r3, [pc, #156]	; 167ac <__snprintf_chk@plt+0x5440>
   1670c:	add	r9, r0, #1
   16710:	cmp	r6, r3
   16714:	str	r9, [r5]
   16718:	beq	16724 <__snprintf_chk@plt+0x53b8>
   1671c:	mov	r0, r6
   16720:	bl	1270c <__snprintf_chk@plt+0x13a0>
   16724:	mov	r0, r9
   16728:	bl	17480 <__snprintf_chk@plt+0x6114>
   1672c:	ldr	ip, [r4, #60]	; 0x3c
   16730:	ldr	r3, [r4, #16]
   16734:	ldr	lr, [r4, #56]	; 0x38
   16738:	mov	r2, sl
   1673c:	mov	r1, r9
   16740:	str	r0, [r5, #4]
   16744:	str	r3, [sp]
   16748:	stmib	sp, {r7, fp}
   1674c:	str	ip, [sp, #16]
   16750:	str	lr, [sp, #12]
   16754:	mvn	r3, #0
   16758:	mov	r6, r0
   1675c:	bl	12938 <__snprintf_chk@plt+0x15cc>
   16760:	ldr	r3, [sp, #28]
   16764:	mov	r0, r6
   16768:	str	r3, [r8]
   1676c:	add	sp, sp, #44	; 0x2c
   16770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16774:	mov	r3, #8
   16778:	str	r3, [sp]
   1677c:	add	r1, sp, #36	; 0x24
   16780:	rsb	r2, r2, #1
   16784:	mvn	r3, #-2147483648	; 0x80000000
   16788:	mov	r0, #0
   1678c:	bl	1769c <__snprintf_chk@plt+0x6330>
   16790:	mov	r5, r0
   16794:	ldm	r6, {r0, r1}
   16798:	str	r5, [r4]
   1679c:	stm	r5, {r0, r1}
   167a0:	b	16694 <__snprintf_chk@plt+0x5328>
   167a4:	andeq	sl, r2, r8, lsr r1
   167a8:	andeq	sl, r2, r0, asr r1
   167ac:	muleq	r2, r8, r3
   167b0:	push	{r4, r5, r6, r7, lr}
   167b4:	mov	r7, r1
   167b8:	ldrb	r3, [r0]
   167bc:	sub	sp, sp, #12
   167c0:	sub	r3, r3, #48	; 0x30
   167c4:	cmp	r3, #9
   167c8:	bls	1681c <__snprintf_chk@plt+0x54b0>
   167cc:	mov	r6, r0
   167d0:	ldr	r5, [pc, #324]	; 1691c <__snprintf_chk@plt+0x55b0>
   167d4:	mov	r4, #0
   167d8:	b	167e8 <__snprintf_chk@plt+0x547c>
   167dc:	add	r4, r4, #1
   167e0:	cmp	r4, #35	; 0x23
   167e4:	beq	1684c <__snprintf_chk@plt+0x54e0>
   167e8:	mov	r0, r5
   167ec:	mov	r1, r6
   167f0:	bl	11060 <strcmp@plt>
   167f4:	add	r5, r5, #12
   167f8:	cmp	r0, #0
   167fc:	bne	167dc <__snprintf_chk@plt+0x5470>
   16800:	ldr	r3, [pc, #280]	; 16920 <__snprintf_chk@plt+0x55b4>
   16804:	add	r4, r4, r4, lsl #1
   16808:	ldr	r0, [r3, r4, lsl #2]
   1680c:	str	r0, [r7]
   16810:	asr	r0, r0, #31
   16814:	add	sp, sp, #12
   16818:	pop	{r4, r5, r6, r7, pc}
   1681c:	mov	r2, #10
   16820:	add	r1, sp, #4
   16824:	bl	1106c <strtol@plt>
   16828:	ldr	r3, [sp, #4]
   1682c:	ldrb	r3, [r3]
   16830:	cmp	r0, #64	; 0x40
   16834:	cmple	r3, #0
   16838:	beq	1680c <__snprintf_chk@plt+0x54a0>
   1683c:	mvn	r3, #0
   16840:	mov	r0, r3
   16844:	str	r3, [r7]
   16848:	b	16814 <__snprintf_chk@plt+0x54a8>
   1684c:	bl	11348 <__libc_current_sigrtmin@plt>
   16850:	mov	r5, r0
   16854:	bl	11234 <__libc_current_sigrtmax@plt>
   16858:	cmp	r5, #0
   1685c:	mov	r4, r0
   16860:	ble	1687c <__snprintf_chk@plt+0x5510>
   16864:	mov	r2, #5
   16868:	ldr	r1, [pc, #180]	; 16924 <__snprintf_chk@plt+0x55b8>
   1686c:	mov	r0, r6
   16870:	bl	11354 <strncmp@plt>
   16874:	cmp	r0, #0
   16878:	beq	168e4 <__snprintf_chk@plt+0x5578>
   1687c:	cmp	r4, #0
   16880:	ble	1683c <__snprintf_chk@plt+0x54d0>
   16884:	mov	r2, #5
   16888:	ldr	r1, [pc, #152]	; 16928 <__snprintf_chk@plt+0x55bc>
   1688c:	mov	r0, r6
   16890:	bl	11354 <strncmp@plt>
   16894:	cmp	r0, #0
   16898:	bne	1683c <__snprintf_chk@plt+0x54d0>
   1689c:	add	r0, r6, #5
   168a0:	mov	r2, #10
   168a4:	add	r1, sp, #4
   168a8:	bl	1106c <strtol@plt>
   168ac:	ldr	r3, [sp, #4]
   168b0:	ldrb	r3, [r3]
   168b4:	cmp	r3, #0
   168b8:	bne	1683c <__snprintf_chk@plt+0x54d0>
   168bc:	sub	r5, r5, r4
   168c0:	cmp	r0, r5
   168c4:	movlt	r5, #0
   168c8:	movge	r5, #1
   168cc:	cmp	r0, #0
   168d0:	movgt	r5, #0
   168d4:	cmp	r5, #0
   168d8:	beq	1683c <__snprintf_chk@plt+0x54d0>
   168dc:	add	r0, r4, r0
   168e0:	b	1680c <__snprintf_chk@plt+0x54a0>
   168e4:	add	r0, r6, #5
   168e8:	mov	r2, #10
   168ec:	add	r1, sp, #4
   168f0:	bl	1106c <strtol@plt>
   168f4:	ldr	r3, [sp, #4]
   168f8:	ldrb	r3, [r3]
   168fc:	cmp	r0, #0
   16900:	cmpge	r3, #0
   16904:	bne	1683c <__snprintf_chk@plt+0x54d0>
   16908:	sub	r4, r4, r5
   1690c:	cmp	r0, r4
   16910:	bgt	1683c <__snprintf_chk@plt+0x54d0>
   16914:	add	r0, r5, r0
   16918:	b	1680c <__snprintf_chk@plt+0x54a0>
   1691c:	andeq	sl, r2, ip, ror r1
   16920:	andeq	sl, r2, r8, ror r1
   16924:	andeq	r9, r1, r0, asr r2
   16928:	andeq	r9, r1, r8, asr r2
   1692c:	mov	r3, #0
   16930:	push	{r4, r5, r6, lr}
   16934:	mov	r2, r3
   16938:	sub	sp, sp, #8
   1693c:	ldr	lr, [pc, #200]	; 16a0c <__snprintf_chk@plt+0x56a0>
   16940:	mov	r4, r0
   16944:	mov	r5, r1
   16948:	b	16958 <__snprintf_chk@plt+0x55ec>
   1694c:	add	r2, r2, #1
   16950:	cmp	r2, #35	; 0x23
   16954:	beq	16988 <__snprintf_chk@plt+0x561c>
   16958:	ldr	ip, [lr, r3]
   1695c:	add	r3, r3, #12
   16960:	cmp	ip, r4
   16964:	bne	1694c <__snprintf_chk@plt+0x55e0>
   16968:	add	r2, r2, r2, lsl #1
   1696c:	mov	r0, r5
   16970:	add	r2, lr, r2, lsl #2
   16974:	add	r1, r2, #4
   16978:	bl	11180 <strcpy@plt>
   1697c:	mov	r0, #0
   16980:	add	sp, sp, #8
   16984:	pop	{r4, r5, r6, pc}
   16988:	bl	11348 <__libc_current_sigrtmin@plt>
   1698c:	mov	r6, r0
   16990:	bl	11234 <__libc_current_sigrtmax@plt>
   16994:	cmp	r4, r0
   16998:	movle	r3, #0
   1699c:	movgt	r3, #1
   169a0:	cmp	r4, r6
   169a4:	orrlt	r3, r3, #1
   169a8:	cmp	r3, #0
   169ac:	bne	16a04 <__snprintf_chk@plt+0x5698>
   169b0:	sub	r3, r0, r6
   169b4:	add	r3, r6, r3, asr #1
   169b8:	cmp	r4, r3
   169bc:	movgt	r6, r0
   169c0:	ldrle	r3, [pc, #72]	; 16a10 <__snprintf_chk@plt+0x56a4>
   169c4:	ldrgt	r3, [pc, #72]	; 16a14 <__snprintf_chk@plt+0x56a8>
   169c8:	ldr	r0, [r3]
   169cc:	ldrh	r2, [r3, #4]
   169d0:	str	r0, [r5]
   169d4:	subs	r0, r4, r6
   169d8:	strh	r2, [r5, #4]
   169dc:	beq	16980 <__snprintf_chk@plt+0x5614>
   169e0:	str	r0, [sp]
   169e4:	ldr	r3, [pc, #44]	; 16a18 <__snprintf_chk@plt+0x56ac>
   169e8:	add	r0, r5, #5
   169ec:	mvn	r2, #0
   169f0:	mov	r1, #1
   169f4:	bl	11258 <__sprintf_chk@plt>
   169f8:	mov	r0, #0
   169fc:	add	sp, sp, #8
   16a00:	pop	{r4, r5, r6, pc}
   16a04:	mvn	r0, #0
   16a08:	b	16980 <__snprintf_chk@plt+0x5614>
   16a0c:	andeq	sl, r2, r8, ror r1
   16a10:	andeq	r9, r1, r0, asr r2
   16a14:	andeq	r9, r1, r8, asr r2
   16a18:	andeq	r9, r1, r0, ror #4
   16a1c:	push	{r4, r5, r6, lr}
   16a20:	sub	sp, sp, #32
   16a24:	cmp	r1, #0
   16a28:	mov	r4, r0
   16a2c:	ldr	r5, [sp, #48]	; 0x30
   16a30:	ldr	r6, [sp, #52]	; 0x34
   16a34:	beq	16d4c <__snprintf_chk@plt+0x59e0>
   16a38:	stm	sp, {r2, r3}
   16a3c:	mov	r3, r1
   16a40:	ldr	r2, [pc, #808]	; 16d70 <__snprintf_chk@plt+0x5a04>
   16a44:	mov	r1, #1
   16a48:	bl	112b8 <__fprintf_chk@plt>
   16a4c:	mov	r2, #5
   16a50:	ldr	r1, [pc, #796]	; 16d74 <__snprintf_chk@plt+0x5a08>
   16a54:	mov	r0, #0
   16a58:	bl	110f0 <dcgettext@plt>
   16a5c:	ldr	r3, [pc, #788]	; 16d78 <__snprintf_chk@plt+0x5a0c>
   16a60:	ldr	r2, [pc, #788]	; 16d7c <__snprintf_chk@plt+0x5a10>
   16a64:	str	r3, [sp]
   16a68:	mov	r1, #1
   16a6c:	mov	r3, r0
   16a70:	mov	r0, r4
   16a74:	bl	112b8 <__fprintf_chk@plt>
   16a78:	mov	r1, r4
   16a7c:	mov	r0, #10
   16a80:	bl	110e4 <fputc_unlocked@plt>
   16a84:	mov	r2, #5
   16a88:	ldr	r1, [pc, #752]	; 16d80 <__snprintf_chk@plt+0x5a14>
   16a8c:	mov	r0, #0
   16a90:	bl	110f0 <dcgettext@plt>
   16a94:	mov	r1, #1
   16a98:	ldr	r3, [pc, #740]	; 16d84 <__snprintf_chk@plt+0x5a18>
   16a9c:	mov	r2, r0
   16aa0:	mov	r0, r4
   16aa4:	bl	112b8 <__fprintf_chk@plt>
   16aa8:	mov	r1, r4
   16aac:	mov	r0, #10
   16ab0:	bl	110e4 <fputc_unlocked@plt>
   16ab4:	cmp	r6, #9
   16ab8:	ldrls	pc, [pc, r6, lsl #2]
   16abc:	b	16d64 <__snprintf_chk@plt+0x59f8>
   16ac0:	andeq	r6, r1, r4, asr #22
   16ac4:	andeq	r6, r1, ip, asr #22
   16ac8:	andeq	r6, r1, r8, ror fp
   16acc:	andeq	r6, r1, ip, lsr #23
   16ad0:	andeq	r6, r1, r8, ror #23
   16ad4:	andeq	r6, r1, r4, lsr #24
   16ad8:	andeq	r6, r1, r0, ror #24
   16adc:	andeq	r6, r1, r4, lsr #25
   16ae0:	strdeq	r6, [r1], -r4
   16ae4:	andeq	r6, r1, r8, ror #21
   16ae8:	ldr	r1, [pc, #664]	; 16d88 <__snprintf_chk@plt+0x5a1c>
   16aec:	mov	r2, #5
   16af0:	mov	r0, #0
   16af4:	bl	110f0 <dcgettext@plt>
   16af8:	ldr	ip, [r5, #32]
   16afc:	ldr	r1, [r5, #28]
   16b00:	ldr	r2, [r5, #24]
   16b04:	ldr	r3, [r5]
   16b08:	ldr	r6, [r5, #20]
   16b0c:	str	ip, [sp, #28]
   16b10:	ldr	lr, [r5, #16]
   16b14:	str	r1, [sp, #24]
   16b18:	ldr	ip, [r5, #12]
   16b1c:	str	r2, [sp, #20]
   16b20:	ldr	r1, [r5, #8]
   16b24:	ldr	r2, [r5, #4]
   16b28:	str	r6, [sp, #16]
   16b2c:	stmib	sp, {r1, ip, lr}
   16b30:	mov	r1, #1
   16b34:	str	r2, [sp]
   16b38:	mov	r2, r0
   16b3c:	mov	r0, r4
   16b40:	bl	112b8 <__fprintf_chk@plt>
   16b44:	add	sp, sp, #32
   16b48:	pop	{r4, r5, r6, pc}
   16b4c:	mov	r2, #5
   16b50:	ldr	r1, [pc, #564]	; 16d8c <__snprintf_chk@plt+0x5a20>
   16b54:	mov	r0, #0
   16b58:	bl	110f0 <dcgettext@plt>
   16b5c:	ldr	r3, [r5]
   16b60:	mov	r1, #1
   16b64:	mov	r2, r0
   16b68:	mov	r0, r4
   16b6c:	add	sp, sp, #32
   16b70:	pop	{r4, r5, r6, lr}
   16b74:	b	112b8 <__fprintf_chk@plt>
   16b78:	mov	r2, #5
   16b7c:	ldr	r1, [pc, #524]	; 16d90 <__snprintf_chk@plt+0x5a24>
   16b80:	mov	r0, #0
   16b84:	bl	110f0 <dcgettext@plt>
   16b88:	ldr	r2, [r5, #4]
   16b8c:	ldr	r3, [r5]
   16b90:	mov	r1, #1
   16b94:	str	r2, [sp, #48]	; 0x30
   16b98:	mov	r2, r0
   16b9c:	mov	r0, r4
   16ba0:	add	sp, sp, #32
   16ba4:	pop	{r4, r5, r6, lr}
   16ba8:	b	112b8 <__fprintf_chk@plt>
   16bac:	mov	r2, #5
   16bb0:	ldr	r1, [pc, #476]	; 16d94 <__snprintf_chk@plt+0x5a28>
   16bb4:	mov	r0, #0
   16bb8:	bl	110f0 <dcgettext@plt>
   16bbc:	ldr	r1, [r5, #8]
   16bc0:	ldr	r2, [r5, #4]
   16bc4:	ldr	r3, [r5]
   16bc8:	str	r1, [sp, #52]	; 0x34
   16bcc:	str	r2, [sp, #48]	; 0x30
   16bd0:	mov	r1, #1
   16bd4:	mov	r2, r0
   16bd8:	mov	r0, r4
   16bdc:	add	sp, sp, #32
   16be0:	pop	{r4, r5, r6, lr}
   16be4:	b	112b8 <__fprintf_chk@plt>
   16be8:	mov	r2, #5
   16bec:	ldr	r1, [pc, #420]	; 16d98 <__snprintf_chk@plt+0x5a2c>
   16bf0:	mov	r0, #0
   16bf4:	bl	110f0 <dcgettext@plt>
   16bf8:	ldr	r1, [r5, #8]
   16bfc:	ldr	ip, [r5, #12]
   16c00:	ldr	r2, [r5, #4]
   16c04:	ldr	r3, [r5]
   16c08:	stmib	sp, {r1, ip}
   16c0c:	str	r2, [sp]
   16c10:	mov	r1, #1
   16c14:	mov	r2, r0
   16c18:	mov	r0, r4
   16c1c:	bl	112b8 <__fprintf_chk@plt>
   16c20:	b	16b44 <__snprintf_chk@plt+0x57d8>
   16c24:	mov	r2, #5
   16c28:	ldr	r1, [pc, #364]	; 16d9c <__snprintf_chk@plt+0x5a30>
   16c2c:	mov	r0, #0
   16c30:	bl	110f0 <dcgettext@plt>
   16c34:	add	r1, r5, #8
   16c38:	ldr	r2, [r5, #4]
   16c3c:	ldm	r1, {r1, ip, lr}
   16c40:	ldr	r3, [r5]
   16c44:	str	r2, [sp]
   16c48:	stmib	sp, {r1, ip, lr}
   16c4c:	mov	r1, #1
   16c50:	mov	r2, r0
   16c54:	mov	r0, r4
   16c58:	bl	112b8 <__fprintf_chk@plt>
   16c5c:	b	16b44 <__snprintf_chk@plt+0x57d8>
   16c60:	mov	r2, #5
   16c64:	ldr	r1, [pc, #308]	; 16da0 <__snprintf_chk@plt+0x5a34>
   16c68:	mov	r0, #0
   16c6c:	bl	110f0 <dcgettext@plt>
   16c70:	add	r1, r5, #8
   16c74:	ldr	r2, [r5, #4]
   16c78:	ldm	r1, {r1, ip, lr}
   16c7c:	ldr	r6, [r5, #20]
   16c80:	ldr	r3, [r5]
   16c84:	stmib	sp, {r1, ip, lr}
   16c88:	mov	r1, #1
   16c8c:	str	r2, [sp]
   16c90:	str	r6, [sp, #16]
   16c94:	mov	r2, r0
   16c98:	mov	r0, r4
   16c9c:	bl	112b8 <__fprintf_chk@plt>
   16ca0:	b	16b44 <__snprintf_chk@plt+0x57d8>
   16ca4:	mov	r2, #5
   16ca8:	ldr	r1, [pc, #244]	; 16da4 <__snprintf_chk@plt+0x5a38>
   16cac:	mov	r0, #0
   16cb0:	bl	110f0 <dcgettext@plt>
   16cb4:	ldr	r2, [r5, #24]
   16cb8:	ldr	r3, [r5]
   16cbc:	ldr	r6, [r5, #20]
   16cc0:	ldr	lr, [r5, #16]
   16cc4:	ldr	ip, [r5, #12]
   16cc8:	str	r2, [sp, #20]
   16ccc:	ldr	r1, [r5, #8]
   16cd0:	ldr	r2, [r5, #4]
   16cd4:	str	r6, [sp, #16]
   16cd8:	stmib	sp, {r1, ip, lr}
   16cdc:	mov	r1, #1
   16ce0:	str	r2, [sp]
   16ce4:	mov	r2, r0
   16ce8:	mov	r0, r4
   16cec:	bl	112b8 <__fprintf_chk@plt>
   16cf0:	b	16b44 <__snprintf_chk@plt+0x57d8>
   16cf4:	mov	r2, #5
   16cf8:	ldr	r1, [pc, #168]	; 16da8 <__snprintf_chk@plt+0x5a3c>
   16cfc:	mov	r0, #0
   16d00:	bl	110f0 <dcgettext@plt>
   16d04:	ldr	r1, [r5, #28]
   16d08:	ldr	r2, [r5, #24]
   16d0c:	ldr	r3, [r5]
   16d10:	ldr	r6, [r5, #20]
   16d14:	ldr	lr, [r5, #16]
   16d18:	str	r1, [sp, #24]
   16d1c:	ldr	ip, [r5, #12]
   16d20:	str	r2, [sp, #20]
   16d24:	ldr	r1, [r5, #8]
   16d28:	ldr	r2, [r5, #4]
   16d2c:	str	r6, [sp, #16]
   16d30:	stmib	sp, {r1, ip, lr}
   16d34:	mov	r1, #1
   16d38:	str	r2, [sp]
   16d3c:	mov	r2, r0
   16d40:	mov	r0, r4
   16d44:	bl	112b8 <__fprintf_chk@plt>
   16d48:	b	16b44 <__snprintf_chk@plt+0x57d8>
   16d4c:	str	r3, [sp]
   16d50:	mov	r1, #1
   16d54:	mov	r3, r2
   16d58:	ldr	r2, [pc, #76]	; 16dac <__snprintf_chk@plt+0x5a40>
   16d5c:	bl	112b8 <__fprintf_chk@plt>
   16d60:	b	16a4c <__snprintf_chk@plt+0x56e0>
   16d64:	mov	r2, #5
   16d68:	ldr	r1, [pc, #64]	; 16db0 <__snprintf_chk@plt+0x5a44>
   16d6c:	b	16af0 <__snprintf_chk@plt+0x5784>
   16d70:	andeq	r9, r1, r4, ror #4
   16d74:	andeq	r9, r1, r8, ror r2
   16d78:	andeq	r0, r0, r6, ror #15
   16d7c:	andeq	r9, r1, r0, asr r5
   16d80:	andeq	r9, r1, ip, ror r2
   16d84:	andeq	r9, r1, r8, lsr #6
   16d88:	andeq	r9, r1, r8, asr r4
   16d8c:	andeq	r9, r1, ip, asr #6
   16d90:	andeq	r9, r1, ip, asr r3
   16d94:	andeq	r9, r1, r4, ror r3
   16d98:	muleq	r1, r0, r3
   16d9c:			; <UNDEFINED> instruction: 0x000193b0
   16da0:	ldrdeq	r9, [r1], -r4
   16da4:	strdeq	r9, [r1], -ip
   16da8:	andeq	r9, r1, r8, lsr #8
   16dac:	andeq	r9, r1, r0, ror r2
   16db0:	andeq	r9, r1, ip, lsl #9
   16db4:	push	{r4, r5, lr}
   16db8:	sub	sp, sp, #12
   16dbc:	ldr	r5, [sp, #24]
   16dc0:	ldr	ip, [r5]
   16dc4:	cmp	ip, #0
   16dc8:	beq	16de4 <__snprintf_chk@plt+0x5a78>
   16dcc:	mov	lr, r5
   16dd0:	mov	ip, #0
   16dd4:	ldr	r4, [lr, #4]!
   16dd8:	add	ip, ip, #1
   16ddc:	cmp	r4, #0
   16de0:	bne	16dd4 <__snprintf_chk@plt+0x5a68>
   16de4:	stm	sp, {r5, ip}
   16de8:	bl	16a1c <__snprintf_chk@plt+0x56b0>
   16dec:	add	sp, sp, #12
   16df0:	pop	{r4, r5, pc}
   16df4:	push	{r4, r5, lr}
   16df8:	sub	sp, sp, #76	; 0x4c
   16dfc:	mov	r5, r0
   16e00:	ldr	ip, [sp, #88]	; 0x58
   16e04:	ldr	r0, [ip]
   16e08:	cmp	r0, #0
   16e0c:	str	r0, [sp, #32]
   16e10:	beq	171e4 <__snprintf_chk@plt+0x5e78>
   16e14:	ldr	r0, [ip, #4]
   16e18:	cmp	r0, #0
   16e1c:	str	r0, [sp, #36]	; 0x24
   16e20:	beq	171ec <__snprintf_chk@plt+0x5e80>
   16e24:	ldr	r0, [ip, #8]
   16e28:	cmp	r0, #0
   16e2c:	str	r0, [sp, #40]	; 0x28
   16e30:	beq	171f4 <__snprintf_chk@plt+0x5e88>
   16e34:	ldr	r0, [ip, #12]
   16e38:	cmp	r0, #0
   16e3c:	str	r0, [sp, #44]	; 0x2c
   16e40:	beq	171fc <__snprintf_chk@plt+0x5e90>
   16e44:	ldr	r0, [ip, #16]
   16e48:	cmp	r0, #0
   16e4c:	str	r0, [sp, #48]	; 0x30
   16e50:	beq	17204 <__snprintf_chk@plt+0x5e98>
   16e54:	ldr	r0, [ip, #20]
   16e58:	cmp	r0, #0
   16e5c:	str	r0, [sp, #52]	; 0x34
   16e60:	beq	1720c <__snprintf_chk@plt+0x5ea0>
   16e64:	ldr	r0, [ip, #24]
   16e68:	cmp	r0, #0
   16e6c:	str	r0, [sp, #56]	; 0x38
   16e70:	beq	17214 <__snprintf_chk@plt+0x5ea8>
   16e74:	ldr	r0, [ip, #28]
   16e78:	cmp	r0, #0
   16e7c:	str	r0, [sp, #60]	; 0x3c
   16e80:	beq	1721c <__snprintf_chk@plt+0x5eb0>
   16e84:	ldr	r0, [ip, #32]
   16e88:	cmp	r0, #0
   16e8c:	str	r0, [sp, #64]	; 0x40
   16e90:	beq	17224 <__snprintf_chk@plt+0x5eb8>
   16e94:	ldr	r0, [ip, #36]	; 0x24
   16e98:	cmp	r0, #0
   16e9c:	movne	r4, #10
   16ea0:	moveq	r4, #9
   16ea4:	cmp	r1, #0
   16ea8:	beq	171bc <__snprintf_chk@plt+0x5e50>
   16eac:	stm	sp, {r2, r3}
   16eb0:	mov	r0, r5
   16eb4:	mov	r3, r1
   16eb8:	ldr	r2, [pc, #876]	; 1722c <__snprintf_chk@plt+0x5ec0>
   16ebc:	mov	r1, #1
   16ec0:	bl	112b8 <__fprintf_chk@plt>
   16ec4:	mov	r2, #5
   16ec8:	ldr	r1, [pc, #864]	; 17230 <__snprintf_chk@plt+0x5ec4>
   16ecc:	mov	r0, #0
   16ed0:	bl	110f0 <dcgettext@plt>
   16ed4:	ldr	r3, [pc, #856]	; 17234 <__snprintf_chk@plt+0x5ec8>
   16ed8:	ldr	r2, [pc, #856]	; 17238 <__snprintf_chk@plt+0x5ecc>
   16edc:	str	r3, [sp]
   16ee0:	mov	r1, #1
   16ee4:	mov	r3, r0
   16ee8:	mov	r0, r5
   16eec:	bl	112b8 <__fprintf_chk@plt>
   16ef0:	mov	r1, r5
   16ef4:	mov	r0, #10
   16ef8:	bl	110e4 <fputc_unlocked@plt>
   16efc:	mov	r2, #5
   16f00:	ldr	r1, [pc, #820]	; 1723c <__snprintf_chk@plt+0x5ed0>
   16f04:	mov	r0, #0
   16f08:	bl	110f0 <dcgettext@plt>
   16f0c:	mov	r1, #1
   16f10:	ldr	r3, [pc, #808]	; 17240 <__snprintf_chk@plt+0x5ed4>
   16f14:	mov	r2, r0
   16f18:	mov	r0, r5
   16f1c:	bl	112b8 <__fprintf_chk@plt>
   16f20:	mov	r1, r5
   16f24:	mov	r0, #10
   16f28:	bl	110e4 <fputc_unlocked@plt>
   16f2c:	cmp	r4, #9
   16f30:	ldrls	pc, [pc, r4, lsl #2]
   16f34:	b	171d8 <__snprintf_chk@plt+0x5e6c>
   16f38:			; <UNDEFINED> instruction: 0x00016fbc
   16f3c:	andeq	r6, r1, r4, asr #31
   16f40:	strdeq	r6, [r1], -r0
   16f44:	andeq	r7, r1, r4, lsr #32
   16f48:	andeq	r7, r1, ip, asr r0
   16f4c:	muleq	r1, r8, r0
   16f50:	ldrdeq	r7, [r1], -r4
   16f54:	andeq	r7, r1, r8, lsl r1
   16f58:	andeq	r7, r1, r4, ror #2
   16f5c:	andeq	r6, r1, r0, ror #30
   16f60:	ldr	r1, [pc, #732]	; 17244 <__snprintf_chk@plt+0x5ed8>
   16f64:	mov	r2, #5
   16f68:	mov	r0, #0
   16f6c:	bl	110f0 <dcgettext@plt>
   16f70:	ldr	ip, [sp, #64]	; 0x40
   16f74:	ldr	r1, [sp, #60]	; 0x3c
   16f78:	ldr	r2, [sp, #56]	; 0x38
   16f7c:	ldr	lr, [sp, #48]	; 0x30
   16f80:	str	ip, [sp, #28]
   16f84:	str	r1, [sp, #24]
   16f88:	ldr	ip, [sp, #44]	; 0x2c
   16f8c:	ldr	r1, [sp, #40]	; 0x28
   16f90:	ldr	r4, [sp, #52]	; 0x34
   16f94:	str	r2, [sp, #20]
   16f98:	ldr	r2, [sp, #36]	; 0x24
   16f9c:	stmib	sp, {r1, ip, lr}
   16fa0:	mov	r1, #1
   16fa4:	str	r2, [sp]
   16fa8:	ldr	r3, [sp, #32]
   16fac:	str	r4, [sp, #16]
   16fb0:	mov	r2, r0
   16fb4:	mov	r0, r5
   16fb8:	bl	112b8 <__fprintf_chk@plt>
   16fbc:	add	sp, sp, #76	; 0x4c
   16fc0:	pop	{r4, r5, pc}
   16fc4:	mov	r2, #5
   16fc8:	ldr	r1, [pc, #632]	; 17248 <__snprintf_chk@plt+0x5edc>
   16fcc:	mov	r0, #0
   16fd0:	bl	110f0 <dcgettext@plt>
   16fd4:	ldr	r3, [sp, #32]
   16fd8:	mov	r1, #1
   16fdc:	mov	r2, r0
   16fe0:	mov	r0, r5
   16fe4:	add	sp, sp, #76	; 0x4c
   16fe8:	pop	{r4, r5, lr}
   16fec:	b	112b8 <__fprintf_chk@plt>
   16ff0:	mov	r2, #5
   16ff4:	ldr	r1, [pc, #592]	; 1724c <__snprintf_chk@plt+0x5ee0>
   16ff8:	mov	r0, #0
   16ffc:	bl	110f0 <dcgettext@plt>
   17000:	ldr	r2, [sp, #36]	; 0x24
   17004:	ldr	r3, [sp, #32]
   17008:	str	r2, [sp, #88]	; 0x58
   1700c:	mov	r1, #1
   17010:	mov	r2, r0
   17014:	mov	r0, r5
   17018:	add	sp, sp, #76	; 0x4c
   1701c:	pop	{r4, r5, lr}
   17020:	b	112b8 <__fprintf_chk@plt>
   17024:	mov	r2, #5
   17028:	ldr	r1, [pc, #544]	; 17250 <__snprintf_chk@plt+0x5ee4>
   1702c:	mov	r0, #0
   17030:	bl	110f0 <dcgettext@plt>
   17034:	ldr	r1, [sp, #40]	; 0x28
   17038:	ldr	r2, [sp, #36]	; 0x24
   1703c:	str	r1, [sp, #4]
   17040:	str	r2, [sp]
   17044:	ldr	r3, [sp, #32]
   17048:	mov	r1, #1
   1704c:	mov	r2, r0
   17050:	mov	r0, r5
   17054:	bl	112b8 <__fprintf_chk@plt>
   17058:	b	16fbc <__snprintf_chk@plt+0x5c50>
   1705c:	mov	r2, #5
   17060:	ldr	r1, [pc, #492]	; 17254 <__snprintf_chk@plt+0x5ee8>
   17064:	mov	r0, #0
   17068:	bl	110f0 <dcgettext@plt>
   1706c:	ldr	r1, [sp, #40]	; 0x28
   17070:	ldr	ip, [sp, #44]	; 0x2c
   17074:	ldr	r2, [sp, #36]	; 0x24
   17078:	ldr	r3, [sp, #32]
   1707c:	stmib	sp, {r1, ip}
   17080:	str	r2, [sp]
   17084:	mov	r1, #1
   17088:	mov	r2, r0
   1708c:	mov	r0, r5
   17090:	bl	112b8 <__fprintf_chk@plt>
   17094:	b	16fbc <__snprintf_chk@plt+0x5c50>
   17098:	mov	r2, #5
   1709c:	ldr	r1, [pc, #436]	; 17258 <__snprintf_chk@plt+0x5eec>
   170a0:	mov	r0, #0
   170a4:	bl	110f0 <dcgettext@plt>
   170a8:	add	r1, sp, #40	; 0x28
   170ac:	ldr	r2, [sp, #36]	; 0x24
   170b0:	ldm	r1, {r1, ip, lr}
   170b4:	ldr	r3, [sp, #32]
   170b8:	str	r2, [sp]
   170bc:	stmib	sp, {r1, ip, lr}
   170c0:	mov	r1, #1
   170c4:	mov	r2, r0
   170c8:	mov	r0, r5
   170cc:	bl	112b8 <__fprintf_chk@plt>
   170d0:	b	16fbc <__snprintf_chk@plt+0x5c50>
   170d4:	mov	r2, #5
   170d8:	ldr	r1, [pc, #380]	; 1725c <__snprintf_chk@plt+0x5ef0>
   170dc:	mov	r0, #0
   170e0:	bl	110f0 <dcgettext@plt>
   170e4:	add	r1, sp, #40	; 0x28
   170e8:	ldr	r2, [sp, #36]	; 0x24
   170ec:	ldm	r1, {r1, ip, lr}
   170f0:	ldr	r4, [sp, #52]	; 0x34
   170f4:	str	r2, [sp]
   170f8:	stmib	sp, {r1, ip, lr}
   170fc:	mov	r1, #1
   17100:	ldr	r3, [sp, #32]
   17104:	str	r4, [sp, #16]
   17108:	mov	r2, r0
   1710c:	mov	r0, r5
   17110:	bl	112b8 <__fprintf_chk@plt>
   17114:	b	16fbc <__snprintf_chk@plt+0x5c50>
   17118:	mov	r2, #5
   1711c:	ldr	r1, [pc, #316]	; 17260 <__snprintf_chk@plt+0x5ef4>
   17120:	mov	r0, #0
   17124:	bl	110f0 <dcgettext@plt>
   17128:	add	r1, sp, #40	; 0x28
   1712c:	ldr	r2, [sp, #56]	; 0x38
   17130:	ldm	r1, {r1, ip, lr}
   17134:	ldr	r4, [sp, #52]	; 0x34
   17138:	str	r2, [sp, #20]
   1713c:	ldr	r2, [sp, #36]	; 0x24
   17140:	stmib	sp, {r1, ip, lr}
   17144:	mov	r1, #1
   17148:	str	r2, [sp]
   1714c:	ldr	r3, [sp, #32]
   17150:	str	r4, [sp, #16]
   17154:	mov	r2, r0
   17158:	mov	r0, r5
   1715c:	bl	112b8 <__fprintf_chk@plt>
   17160:	b	16fbc <__snprintf_chk@plt+0x5c50>
   17164:	mov	r2, #5
   17168:	ldr	r1, [pc, #244]	; 17264 <__snprintf_chk@plt+0x5ef8>
   1716c:	mov	r0, #0
   17170:	bl	110f0 <dcgettext@plt>
   17174:	ldr	r1, [sp, #60]	; 0x3c
   17178:	ldr	r2, [sp, #56]	; 0x38
   1717c:	ldr	lr, [sp, #48]	; 0x30
   17180:	ldr	ip, [sp, #44]	; 0x2c
   17184:	str	r1, [sp, #24]
   17188:	ldr	r1, [sp, #40]	; 0x28
   1718c:	ldr	r4, [sp, #52]	; 0x34
   17190:	str	r2, [sp, #20]
   17194:	ldr	r2, [sp, #36]	; 0x24
   17198:	stmib	sp, {r1, ip, lr}
   1719c:	mov	r1, #1
   171a0:	str	r2, [sp]
   171a4:	ldr	r3, [sp, #32]
   171a8:	str	r4, [sp, #16]
   171ac:	mov	r2, r0
   171b0:	mov	r0, r5
   171b4:	bl	112b8 <__fprintf_chk@plt>
   171b8:	b	16fbc <__snprintf_chk@plt+0x5c50>
   171bc:	str	r3, [sp]
   171c0:	mov	r1, #1
   171c4:	mov	r3, r2
   171c8:	mov	r0, r5
   171cc:	ldr	r2, [pc, #148]	; 17268 <__snprintf_chk@plt+0x5efc>
   171d0:	bl	112b8 <__fprintf_chk@plt>
   171d4:	b	16ec4 <__snprintf_chk@plt+0x5b58>
   171d8:	mov	r2, #5
   171dc:	ldr	r1, [pc, #136]	; 1726c <__snprintf_chk@plt+0x5f00>
   171e0:	b	16f68 <__snprintf_chk@plt+0x5bfc>
   171e4:	mov	r4, r0
   171e8:	b	16ea4 <__snprintf_chk@plt+0x5b38>
   171ec:	mov	r4, #1
   171f0:	b	16ea4 <__snprintf_chk@plt+0x5b38>
   171f4:	mov	r4, #2
   171f8:	b	16ea4 <__snprintf_chk@plt+0x5b38>
   171fc:	mov	r4, #3
   17200:	b	16ea4 <__snprintf_chk@plt+0x5b38>
   17204:	mov	r4, #4
   17208:	b	16ea4 <__snprintf_chk@plt+0x5b38>
   1720c:	mov	r4, #5
   17210:	b	16ea4 <__snprintf_chk@plt+0x5b38>
   17214:	mov	r4, #6
   17218:	b	16ea4 <__snprintf_chk@plt+0x5b38>
   1721c:	mov	r4, #7
   17220:	b	16ea4 <__snprintf_chk@plt+0x5b38>
   17224:	mov	r4, #8
   17228:	b	16ea4 <__snprintf_chk@plt+0x5b38>
   1722c:	andeq	r9, r1, r4, ror #4
   17230:	andeq	r9, r1, r8, ror r2
   17234:	andeq	r0, r0, r6, ror #15
   17238:	andeq	r9, r1, r0, asr r5
   1723c:	andeq	r9, r1, ip, ror r2
   17240:	andeq	r9, r1, r8, lsr #6
   17244:	andeq	r9, r1, r8, asr r4
   17248:	andeq	r9, r1, ip, asr #6
   1724c:	andeq	r9, r1, ip, asr r3
   17250:	andeq	r9, r1, r4, ror r3
   17254:	muleq	r1, r0, r3
   17258:			; <UNDEFINED> instruction: 0x000193b0
   1725c:	ldrdeq	r9, [r1], -r4
   17260:	strdeq	r9, [r1], -ip
   17264:	andeq	r9, r1, r8, lsr #8
   17268:	andeq	r9, r1, r0, ror r2
   1726c:	andeq	r9, r1, ip, lsl #9
   17270:	push	{r3}		; (str r3, [sp, #-4]!)
   17274:	push	{lr}		; (str lr, [sp, #-4]!)
   17278:	sub	sp, sp, #56	; 0x38
   1727c:	add	r3, sp, #64	; 0x40
   17280:	ldr	ip, [sp, #64]	; 0x40
   17284:	str	r3, [sp, #12]
   17288:	cmp	ip, #0
   1728c:	str	ip, [sp, #16]
   17290:	beq	17328 <__snprintf_chk@plt+0x5fbc>
   17294:	ldr	ip, [sp, #68]	; 0x44
   17298:	cmp	ip, #0
   1729c:	str	ip, [sp, #20]
   172a0:	beq	17348 <__snprintf_chk@plt+0x5fdc>
   172a4:	ldr	ip, [sp, #72]	; 0x48
   172a8:	cmp	ip, #0
   172ac:	str	ip, [sp, #24]
   172b0:	beq	17350 <__snprintf_chk@plt+0x5fe4>
   172b4:	ldr	ip, [sp, #76]	; 0x4c
   172b8:	cmp	ip, #0
   172bc:	str	ip, [sp, #28]
   172c0:	beq	17358 <__snprintf_chk@plt+0x5fec>
   172c4:	ldr	ip, [sp, #80]	; 0x50
   172c8:	cmp	ip, #0
   172cc:	str	ip, [sp, #32]
   172d0:	beq	17360 <__snprintf_chk@plt+0x5ff4>
   172d4:	ldr	ip, [sp, #84]	; 0x54
   172d8:	cmp	ip, #0
   172dc:	str	ip, [sp, #36]	; 0x24
   172e0:	beq	17368 <__snprintf_chk@plt+0x5ffc>
   172e4:	ldr	ip, [sp, #88]	; 0x58
   172e8:	cmp	ip, #0
   172ec:	str	ip, [sp, #40]	; 0x28
   172f0:	beq	17370 <__snprintf_chk@plt+0x6004>
   172f4:	ldr	ip, [sp, #92]	; 0x5c
   172f8:	cmp	ip, #0
   172fc:	str	ip, [sp, #44]	; 0x2c
   17300:	beq	17378 <__snprintf_chk@plt+0x600c>
   17304:	ldr	ip, [sp, #96]	; 0x60
   17308:	cmp	ip, #0
   1730c:	str	ip, [sp, #48]	; 0x30
   17310:	beq	17380 <__snprintf_chk@plt+0x6014>
   17314:	ldr	ip, [sp, #100]	; 0x64
   17318:	cmp	ip, #0
   1731c:	str	ip, [sp, #52]	; 0x34
   17320:	movne	ip, #10
   17324:	moveq	ip, #9
   17328:	add	r3, sp, #16
   1732c:	stm	sp, {r3, ip}
   17330:	ldr	r3, [sp, #60]	; 0x3c
   17334:	bl	16a1c <__snprintf_chk@plt+0x56b0>
   17338:	add	sp, sp, #56	; 0x38
   1733c:	pop	{lr}		; (ldr lr, [sp], #4)
   17340:	add	sp, sp, #4
   17344:	bx	lr
   17348:	mov	ip, #1
   1734c:	b	17328 <__snprintf_chk@plt+0x5fbc>
   17350:	mov	ip, #2
   17354:	b	17328 <__snprintf_chk@plt+0x5fbc>
   17358:	mov	ip, #3
   1735c:	b	17328 <__snprintf_chk@plt+0x5fbc>
   17360:	mov	ip, #4
   17364:	b	17328 <__snprintf_chk@plt+0x5fbc>
   17368:	mov	ip, #5
   1736c:	b	17328 <__snprintf_chk@plt+0x5fbc>
   17370:	mov	ip, #6
   17374:	b	17328 <__snprintf_chk@plt+0x5fbc>
   17378:	mov	ip, #7
   1737c:	b	17328 <__snprintf_chk@plt+0x5fbc>
   17380:	mov	ip, #8
   17384:	b	17328 <__snprintf_chk@plt+0x5fbc>
   17388:	ldr	r3, [pc, #116]	; 17404 <__snprintf_chk@plt+0x6098>
   1738c:	push	{r4, lr}
   17390:	mov	r0, #10
   17394:	ldr	r1, [r3]
   17398:	bl	110e4 <fputc_unlocked@plt>
   1739c:	mov	r2, #5
   173a0:	ldr	r1, [pc, #96]	; 17408 <__snprintf_chk@plt+0x609c>
   173a4:	mov	r0, #0
   173a8:	bl	110f0 <dcgettext@plt>
   173ac:	ldr	r2, [pc, #88]	; 1740c <__snprintf_chk@plt+0x60a0>
   173b0:	mov	r1, r0
   173b4:	mov	r0, #1
   173b8:	bl	11288 <__printf_chk@plt>
   173bc:	mov	r2, #5
   173c0:	ldr	r1, [pc, #72]	; 17410 <__snprintf_chk@plt+0x60a4>
   173c4:	mov	r0, #0
   173c8:	bl	110f0 <dcgettext@plt>
   173cc:	ldr	r3, [pc, #64]	; 17414 <__snprintf_chk@plt+0x60a8>
   173d0:	ldr	r2, [pc, #64]	; 17418 <__snprintf_chk@plt+0x60ac>
   173d4:	mov	r1, r0
   173d8:	mov	r0, #1
   173dc:	bl	11288 <__printf_chk@plt>
   173e0:	mov	r2, #5
   173e4:	ldr	r1, [pc, #48]	; 1741c <__snprintf_chk@plt+0x60b0>
   173e8:	mov	r0, #0
   173ec:	bl	110f0 <dcgettext@plt>
   173f0:	ldr	r2, [pc, #40]	; 17420 <__snprintf_chk@plt+0x60b4>
   173f4:	pop	{r4, lr}
   173f8:	mov	r1, r0
   173fc:	mov	r0, #1
   17400:	b	11288 <__printf_chk@plt>
   17404:	andeq	sl, r2, r4, lsr r3
   17408:	andeq	r9, r1, r8, asr #9
   1740c:	ldrdeq	r9, [r1], -ip
   17410:	strdeq	r9, [r1], -r4
   17414:	andeq	r8, r1, r4, lsr #28
   17418:	andeq	r8, r1, ip, asr #28
   1741c:	andeq	r9, r1, r8, lsl #10
   17420:	andeq	r9, r1, r0, lsr r5
   17424:	push	{r4, r5, r6, lr}
   17428:	mov	r6, r0
   1742c:	mov	r5, r1
   17430:	mov	r4, r2
   17434:	bl	17f78 <__snprintf_chk@plt+0x6c0c>
   17438:	cmp	r0, #0
   1743c:	popne	{r4, r5, r6, pc}
   17440:	cmp	r6, #0
   17444:	beq	17454 <__snprintf_chk@plt+0x60e8>
   17448:	cmp	r5, #0
   1744c:	cmpne	r4, #0
   17450:	popeq	{r4, r5, r6, pc}
   17454:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   17458:	push	{r4, lr}
   1745c:	bl	17bd0 <__snprintf_chk@plt+0x6864>
   17460:	cmp	r0, #0
   17464:	popne	{r4, pc}
   17468:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   1746c:	push	{r4, lr}
   17470:	bl	17bd0 <__snprintf_chk@plt+0x6864>
   17474:	cmp	r0, #0
   17478:	popne	{r4, pc}
   1747c:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   17480:	push	{r4, lr}
   17484:	bl	17bd0 <__snprintf_chk@plt+0x6864>
   17488:	cmp	r0, #0
   1748c:	popne	{r4, pc}
   17490:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   17494:	push	{r4, r5, r6, lr}
   17498:	mov	r5, r0
   1749c:	mov	r4, r1
   174a0:	bl	17bfc <__snprintf_chk@plt+0x6890>
   174a4:	cmp	r0, #0
   174a8:	popne	{r4, r5, r6, pc}
   174ac:	adds	r4, r4, #0
   174b0:	movne	r4, #1
   174b4:	cmp	r5, #0
   174b8:	orreq	r4, r4, #1
   174bc:	cmp	r4, #0
   174c0:	popeq	{r4, r5, r6, pc}
   174c4:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   174c8:	push	{r4, lr}
   174cc:	cmp	r1, #0
   174d0:	orreq	r1, r1, #1
   174d4:	bl	17bfc <__snprintf_chk@plt+0x6890>
   174d8:	cmp	r0, #0
   174dc:	popne	{r4, pc}
   174e0:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   174e4:	push	{r4, r5, r6, lr}
   174e8:	mov	r6, r0
   174ec:	mov	r5, r1
   174f0:	mov	r4, r2
   174f4:	bl	17f78 <__snprintf_chk@plt+0x6c0c>
   174f8:	cmp	r0, #0
   174fc:	popne	{r4, r5, r6, pc}
   17500:	cmp	r6, #0
   17504:	beq	17514 <__snprintf_chk@plt+0x61a8>
   17508:	cmp	r5, #0
   1750c:	cmpne	r4, #0
   17510:	popeq	{r4, r5, r6, pc}
   17514:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   17518:	cmp	r2, #0
   1751c:	cmpne	r1, #0
   17520:	moveq	r2, #1
   17524:	moveq	r1, r2
   17528:	push	{r4, lr}
   1752c:	bl	17f78 <__snprintf_chk@plt+0x6c0c>
   17530:	cmp	r0, #0
   17534:	popne	{r4, pc}
   17538:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   1753c:	push	{r4, lr}
   17540:	mov	r2, r1
   17544:	mov	r1, r0
   17548:	mov	r0, #0
   1754c:	bl	17f78 <__snprintf_chk@plt+0x6c0c>
   17550:	cmp	r0, #0
   17554:	popne	{r4, pc}
   17558:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   1755c:	cmp	r1, #0
   17560:	cmpne	r0, #0
   17564:	moveq	r2, #1
   17568:	movne	r2, r1
   1756c:	moveq	r1, r2
   17570:	movne	r1, r0
   17574:	push	{r4, lr}
   17578:	mov	r0, #0
   1757c:	bl	17f78 <__snprintf_chk@plt+0x6c0c>
   17580:	cmp	r0, #0
   17584:	popne	{r4, pc}
   17588:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   1758c:	cmp	r0, #0
   17590:	push	{r4, r5, r6, lr}
   17594:	mov	r5, r1
   17598:	ldr	r4, [r1]
   1759c:	beq	175d8 <__snprintf_chk@plt+0x626c>
   175a0:	lsr	r2, r4, #1
   175a4:	add	r3, r2, #1
   175a8:	mvn	r3, r3
   175ac:	cmp	r4, r3
   175b0:	bhi	175f4 <__snprintf_chk@plt+0x6288>
   175b4:	add	r4, r4, #1
   175b8:	add	r4, r4, r2
   175bc:	mov	r1, r4
   175c0:	mov	r2, #1
   175c4:	bl	17f78 <__snprintf_chk@plt+0x6c0c>
   175c8:	cmp	r0, #0
   175cc:	beq	175f8 <__snprintf_chk@plt+0x628c>
   175d0:	str	r4, [r5]
   175d4:	pop	{r4, r5, r6, pc}
   175d8:	cmp	r4, #0
   175dc:	moveq	r4, #64	; 0x40
   175e0:	mov	r1, r4
   175e4:	mov	r2, #1
   175e8:	bl	17f78 <__snprintf_chk@plt+0x6c0c>
   175ec:	cmp	r0, #0
   175f0:	bne	175d0 <__snprintf_chk@plt+0x6264>
   175f4:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   175f8:	cmp	r4, #0
   175fc:	bne	175f4 <__snprintf_chk@plt+0x6288>
   17600:	str	r4, [r5]
   17604:	pop	{r4, r5, r6, pc}
   17608:	cmp	r0, #0
   1760c:	push	{r4, r5, r6, lr}
   17610:	mov	r5, r1
   17614:	ldr	r4, [r1]
   17618:	mov	r6, r2
   1761c:	beq	17660 <__snprintf_chk@plt+0x62f4>
   17620:	lsr	r1, r4, #1
   17624:	add	r3, r1, #1
   17628:	mvn	r3, r3
   1762c:	cmp	r4, r3
   17630:	bhi	17698 <__snprintf_chk@plt+0x632c>
   17634:	add	r4, r4, #1
   17638:	add	r4, r4, r1
   1763c:	mov	r1, r4
   17640:	bl	17f78 <__snprintf_chk@plt+0x6c0c>
   17644:	cmp	r0, #0
   17648:	bne	17658 <__snprintf_chk@plt+0x62ec>
   1764c:	cmp	r4, #0
   17650:	cmpne	r6, #0
   17654:	bne	17698 <__snprintf_chk@plt+0x632c>
   17658:	str	r4, [r5]
   1765c:	pop	{r4, r5, r6, pc}
   17660:	cmp	r4, #0
   17664:	bne	17680 <__snprintf_chk@plt+0x6314>
   17668:	mov	r1, r2
   1766c:	mov	r0, #64	; 0x40
   17670:	bl	180b8 <__snprintf_chk@plt+0x6d4c>
   17674:	cmp	r0, #0
   17678:	movne	r4, r0
   1767c:	addeq	r4, r0, #1
   17680:	mov	r2, r6
   17684:	mov	r1, r4
   17688:	mov	r0, #0
   1768c:	bl	17f78 <__snprintf_chk@plt+0x6c0c>
   17690:	cmp	r0, #0
   17694:	bne	17658 <__snprintf_chk@plt+0x62ec>
   17698:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   1769c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176a0:	sub	sp, sp, #12
   176a4:	ldr	r6, [r1]
   176a8:	mov	r8, r1
   176ac:	mov	r9, r0
   176b0:	asrs	r4, r6, #1
   176b4:	mov	sl, r2
   176b8:	mov	fp, r3
   176bc:	ldr	r7, [sp, #48]	; 0x30
   176c0:	bmi	1783c <__snprintf_chk@plt+0x64d0>
   176c4:	mvn	r1, #-2147483648	; 0x80000000
   176c8:	sub	r1, r1, r4
   176cc:	cmp	r6, r1
   176d0:	movle	r1, #0
   176d4:	movgt	r1, #1
   176d8:	mvn	r3, fp
   176dc:	cmp	r1, #0
   176e0:	addeq	r4, r4, r6
   176e4:	mvnne	r4, #-2147483648	; 0x80000000
   176e8:	lsr	r3, r3, #31
   176ec:	cmp	fp, r4
   176f0:	movge	r2, #0
   176f4:	andlt	r2, r3, #1
   176f8:	cmp	r2, #0
   176fc:	beq	177ec <__snprintf_chk@plt+0x6480>
   17700:	cmp	r7, #0
   17704:	blt	178d4 <__snprintf_chk@plt+0x6568>
   17708:	bne	178cc <__snprintf_chk@plt+0x6560>
   1770c:	mov	r5, #64	; 0x40
   17710:	mov	r1, r7
   17714:	mov	r0, r5
   17718:	str	r3, [sp, #4]
   1771c:	bl	182c4 <__snprintf_chk@plt+0x6f58>
   17720:	mov	r1, r7
   17724:	mov	r4, r0
   17728:	mov	r0, r5
   1772c:	bl	184e4 <__snprintf_chk@plt+0x7178>
   17730:	ldr	r3, [sp, #4]
   17734:	sub	r5, r5, r1
   17738:	cmp	r9, #0
   1773c:	sub	r2, r4, r6
   17740:	streq	r9, [r8]
   17744:	cmp	r2, sl
   17748:	bge	177cc <__snprintf_chk@plt+0x6460>
   1774c:	cmp	sl, #0
   17750:	blt	1786c <__snprintf_chk@plt+0x6500>
   17754:	cmp	r6, #0
   17758:	blt	17778 <__snprintf_chk@plt+0x640c>
   1775c:	mvn	r2, #-2147483648	; 0x80000000
   17760:	sub	r2, r2, sl
   17764:	cmp	r6, r2
   17768:	movle	r2, #0
   1776c:	movgt	r2, #1
   17770:	cmp	r2, #0
   17774:	bne	17868 <__snprintf_chk@plt+0x64fc>
   17778:	add	r6, r6, sl
   1777c:	cmp	fp, r6
   17780:	movge	r3, #0
   17784:	andlt	r3, r3, #1
   17788:	cmp	r3, #0
   1778c:	mov	r4, r6
   17790:	bne	17868 <__snprintf_chk@plt+0x64fc>
   17794:	cmp	r7, #0
   17798:	blt	17880 <__snprintf_chk@plt+0x6514>
   1779c:	beq	177c8 <__snprintf_chk@plt+0x645c>
   177a0:	cmp	r6, #0
   177a4:	blt	17924 <__snprintf_chk@plt+0x65b8>
   177a8:	mov	r1, r7
   177ac:	mvn	r0, #-2147483648	; 0x80000000
   177b0:	bl	182c4 <__snprintf_chk@plt+0x6f58>
   177b4:	cmp	r6, r0
   177b8:	movle	r0, #0
   177bc:	movgt	r0, #1
   177c0:	cmp	r0, #0
   177c4:	bne	17868 <__snprintf_chk@plt+0x64fc>
   177c8:	mul	r5, r6, r7
   177cc:	mov	r1, r5
   177d0:	mov	r0, r9
   177d4:	bl	17bfc <__snprintf_chk@plt+0x6890>
   177d8:	cmp	r0, #0
   177dc:	beq	17850 <__snprintf_chk@plt+0x64e4>
   177e0:	str	r4, [r8]
   177e4:	add	sp, sp, #12
   177e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177ec:	cmp	r7, #0
   177f0:	blt	178ac <__snprintf_chk@plt+0x6540>
   177f4:	beq	1770c <__snprintf_chk@plt+0x63a0>
   177f8:	cmp	r4, #0
   177fc:	blt	178dc <__snprintf_chk@plt+0x6570>
   17800:	mov	r1, r7
   17804:	mvn	r0, #-2147483648	; 0x80000000
   17808:	str	r3, [sp, #4]
   1780c:	bl	182c4 <__snprintf_chk@plt+0x6f58>
   17810:	ldr	r3, [sp, #4]
   17814:	cmp	r0, r4
   17818:	movge	r0, #0
   1781c:	movlt	r0, #1
   17820:	cmp	r0, #0
   17824:	mvnne	r5, #-2147483648	; 0x80000000
   17828:	bne	17710 <__snprintf_chk@plt+0x63a4>
   1782c:	mul	r5, r7, r4
   17830:	cmp	r5, #63	; 0x3f
   17834:	bgt	17738 <__snprintf_chk@plt+0x63cc>
   17838:	b	1770c <__snprintf_chk@plt+0x63a0>
   1783c:	rsb	r1, r4, #-2147483648	; 0x80000000
   17840:	cmp	r6, r1
   17844:	movge	r1, #0
   17848:	movlt	r1, #1
   1784c:	b	176d8 <__snprintf_chk@plt+0x636c>
   17850:	adds	r5, r5, #0
   17854:	movne	r5, #1
   17858:	cmp	r9, #0
   1785c:	orreq	r5, r5, #1
   17860:	cmp	r5, #0
   17864:	beq	177e0 <__snprintf_chk@plt+0x6474>
   17868:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   1786c:	rsb	r2, sl, #-2147483648	; 0x80000000
   17870:	cmp	r6, r2
   17874:	movge	r2, #0
   17878:	movlt	r2, #1
   1787c:	b	17770 <__snprintf_chk@plt+0x6404>
   17880:	cmp	r6, #0
   17884:	blt	17908 <__snprintf_chk@plt+0x659c>
   17888:	cmn	r7, #1
   1788c:	beq	177c8 <__snprintf_chk@plt+0x645c>
   17890:	mov	r1, r7
   17894:	mov	r0, #-2147483648	; 0x80000000
   17898:	bl	182c4 <__snprintf_chk@plt+0x6f58>
   1789c:	cmp	r6, r0
   178a0:	movle	r0, #0
   178a4:	movgt	r0, #1
   178a8:	b	177c0 <__snprintf_chk@plt+0x6454>
   178ac:	cmp	r4, #0
   178b0:	blt	17948 <__snprintf_chk@plt+0x65dc>
   178b4:	cmn	r7, #1
   178b8:	beq	1782c <__snprintf_chk@plt+0x64c0>
   178bc:	str	r3, [sp, #4]
   178c0:	mov	r1, r7
   178c4:	mov	r0, #-2147483648	; 0x80000000
   178c8:	b	1780c <__snprintf_chk@plt+0x64a0>
   178cc:	mov	r4, fp
   178d0:	b	17800 <__snprintf_chk@plt+0x6494>
   178d4:	mov	r4, fp
   178d8:	b	178b4 <__snprintf_chk@plt+0x6548>
   178dc:	cmn	r4, #1
   178e0:	beq	1782c <__snprintf_chk@plt+0x64c0>
   178e4:	mov	r1, r4
   178e8:	mov	r0, #-2147483648	; 0x80000000
   178ec:	str	r3, [sp, #4]
   178f0:	bl	182c4 <__snprintf_chk@plt+0x6f58>
   178f4:	ldr	r3, [sp, #4]
   178f8:	cmp	r7, r0
   178fc:	movle	r0, #0
   17900:	movgt	r0, #1
   17904:	b	17820 <__snprintf_chk@plt+0x64b4>
   17908:	mov	r1, r7
   1790c:	mvn	r0, #-2147483648	; 0x80000000
   17910:	bl	182c4 <__snprintf_chk@plt+0x6f58>
   17914:	cmp	r6, r0
   17918:	movge	r0, #0
   1791c:	movlt	r0, #1
   17920:	b	177c0 <__snprintf_chk@plt+0x6454>
   17924:	cmn	r6, #1
   17928:	beq	177c8 <__snprintf_chk@plt+0x645c>
   1792c:	mov	r1, r6
   17930:	mov	r0, #-2147483648	; 0x80000000
   17934:	bl	182c4 <__snprintf_chk@plt+0x6f58>
   17938:	cmp	r7, r0
   1793c:	movle	r0, #0
   17940:	movgt	r0, #1
   17944:	b	177c0 <__snprintf_chk@plt+0x6454>
   17948:	mov	r1, r7
   1794c:	mvn	r0, #-2147483648	; 0x80000000
   17950:	str	r3, [sp, #4]
   17954:	bl	182c4 <__snprintf_chk@plt+0x6f58>
   17958:	ldr	r3, [sp, #4]
   1795c:	cmp	r0, r4
   17960:	movle	r0, #0
   17964:	movgt	r0, #1
   17968:	b	17820 <__snprintf_chk@plt+0x64b4>
   1796c:	push	{r4, lr}
   17970:	mov	r1, #1
   17974:	bl	17b88 <__snprintf_chk@plt+0x681c>
   17978:	cmp	r0, #0
   1797c:	popne	{r4, pc}
   17980:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   17984:	push	{r4, lr}
   17988:	mov	r1, #1
   1798c:	bl	17b88 <__snprintf_chk@plt+0x681c>
   17990:	cmp	r0, #0
   17994:	popne	{r4, pc}
   17998:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   1799c:	push	{r4, lr}
   179a0:	bl	17b88 <__snprintf_chk@plt+0x681c>
   179a4:	cmp	r0, #0
   179a8:	popne	{r4, pc}
   179ac:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   179b0:	push	{r4, lr}
   179b4:	bl	17b88 <__snprintf_chk@plt+0x681c>
   179b8:	cmp	r0, #0
   179bc:	popne	{r4, pc}
   179c0:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   179c4:	push	{r4, r5, r6, lr}
   179c8:	mov	r6, r0
   179cc:	mov	r0, r1
   179d0:	mov	r4, r1
   179d4:	bl	17bd0 <__snprintf_chk@plt+0x6864>
   179d8:	subs	r5, r0, #0
   179dc:	beq	179f4 <__snprintf_chk@plt+0x6688>
   179e0:	mov	r2, r4
   179e4:	mov	r1, r6
   179e8:	bl	110a8 <memcpy@plt>
   179ec:	mov	r0, r5
   179f0:	pop	{r4, r5, r6, pc}
   179f4:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   179f8:	push	{r4, r5, r6, lr}
   179fc:	mov	r6, r0
   17a00:	mov	r0, r1
   17a04:	mov	r4, r1
   17a08:	bl	17bd0 <__snprintf_chk@plt+0x6864>
   17a0c:	subs	r5, r0, #0
   17a10:	beq	17a28 <__snprintf_chk@plt+0x66bc>
   17a14:	mov	r2, r4
   17a18:	mov	r1, r6
   17a1c:	bl	110a8 <memcpy@plt>
   17a20:	mov	r0, r5
   17a24:	pop	{r4, r5, r6, pc}
   17a28:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   17a2c:	push	{r4, r5, r6, lr}
   17a30:	mov	r6, r0
   17a34:	add	r0, r1, #1
   17a38:	mov	r4, r1
   17a3c:	bl	17bd0 <__snprintf_chk@plt+0x6864>
   17a40:	subs	r5, r0, #0
   17a44:	beq	17a64 <__snprintf_chk@plt+0x66f8>
   17a48:	mov	r3, #0
   17a4c:	mov	r1, r6
   17a50:	strb	r3, [r5, r4]
   17a54:	mov	r2, r4
   17a58:	bl	110a8 <memcpy@plt>
   17a5c:	mov	r0, r5
   17a60:	pop	{r4, r5, r6, pc}
   17a64:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   17a68:	push	{r4, r5, r6, lr}
   17a6c:	mov	r6, r0
   17a70:	bl	11228 <strlen@plt>
   17a74:	add	r4, r0, #1
   17a78:	mov	r0, r4
   17a7c:	bl	17bd0 <__snprintf_chk@plt+0x6864>
   17a80:	subs	r5, r0, #0
   17a84:	beq	17a9c <__snprintf_chk@plt+0x6730>
   17a88:	mov	r2, r4
   17a8c:	mov	r1, r6
   17a90:	bl	110a8 <memcpy@plt>
   17a94:	mov	r0, r5
   17a98:	pop	{r4, r5, r6, pc}
   17a9c:	bl	17aa0 <__snprintf_chk@plt+0x6734>
   17aa0:	ldr	r3, [pc, #44]	; 17ad4 <__snprintf_chk@plt+0x6768>
   17aa4:	push	{r4, lr}
   17aa8:	mov	r2, #5
   17aac:	ldr	r1, [pc, #36]	; 17ad8 <__snprintf_chk@plt+0x676c>
   17ab0:	mov	r0, #0
   17ab4:	ldr	r4, [r3]
   17ab8:	bl	110f0 <dcgettext@plt>
   17abc:	ldr	r2, [pc, #24]	; 17adc <__snprintf_chk@plt+0x6770>
   17ac0:	mov	r1, #0
   17ac4:	mov	r3, r0
   17ac8:	mov	r0, r4
   17acc:	bl	111a4 <error@plt>
   17ad0:	bl	11360 <abort@plt>
   17ad4:	andeq	sl, r2, r4, lsr r1
   17ad8:	andeq	r9, r1, r0, lsl #11
   17adc:	andeq	r9, r1, r0, lsr r1
   17ae0:	push	{r4, r5, r6, r7, r8, r9, lr}
   17ae4:	sub	sp, sp, #12
   17ae8:	mov	r6, r0
   17aec:	mov	r9, r3
   17af0:	mov	r5, r1
   17af4:	mov	r8, r2
   17af8:	bl	1124c <__errno_location@plt>
   17afc:	mov	r4, #0
   17b00:	add	r1, sp, #4
   17b04:	str	r4, [r0]
   17b08:	mov	r7, r0
   17b0c:	mov	r0, r6
   17b10:	blx	r9
   17b14:	ldr	r3, [sp, #4]
   17b18:	cmp	r6, r3
   17b1c:	beq	17b5c <__snprintf_chk@plt+0x67f0>
   17b20:	cmp	r5, r4
   17b24:	beq	17b64 <__snprintf_chk@plt+0x67f8>
   17b28:	vcmp.f64	d0, #0.0
   17b2c:	vmrs	APSR_nzcv, fpscr
   17b30:	moveq	r0, #1
   17b34:	beq	17b4c <__snprintf_chk@plt+0x67e0>
   17b38:	ldr	r0, [r7]
   17b3c:	subs	r0, r0, #34	; 0x22
   17b40:	movne	r0, #1
   17b44:	cmp	r5, #0
   17b48:	beq	17b50 <__snprintf_chk@plt+0x67e4>
   17b4c:	str	r3, [r5]
   17b50:	vstr	d0, [r8]
   17b54:	add	sp, sp, #12
   17b58:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17b5c:	mov	r0, r4
   17b60:	b	17b44 <__snprintf_chk@plt+0x67d8>
   17b64:	ldrb	r2, [r3]
   17b68:	cmp	r2, r4
   17b6c:	movne	r0, r5
   17b70:	bne	17b50 <__snprintf_chk@plt+0x67e4>
   17b74:	vcmp.f64	d0, #0.0
   17b78:	vmrs	APSR_nzcv, fpscr
   17b7c:	bne	17b38 <__snprintf_chk@plt+0x67cc>
   17b80:	mov	r0, #1
   17b84:	b	17b50 <__snprintf_chk@plt+0x67e4>
   17b88:	cmp	r1, #0
   17b8c:	cmpne	r0, #0
   17b90:	moveq	r1, #1
   17b94:	moveq	r0, r1
   17b98:	umull	r2, r3, r0, r1
   17b9c:	adds	r3, r3, #0
   17ba0:	movne	r3, #1
   17ba4:	cmp	r2, #0
   17ba8:	blt	17bb8 <__snprintf_chk@plt+0x684c>
   17bac:	cmp	r3, #0
   17bb0:	bne	17bb8 <__snprintf_chk@plt+0x684c>
   17bb4:	b	1103c <calloc@plt>
   17bb8:	push	{r4, lr}
   17bbc:	bl	1124c <__errno_location@plt>
   17bc0:	mov	r3, #12
   17bc4:	str	r3, [r0]
   17bc8:	mov	r0, #0
   17bcc:	pop	{r4, pc}
   17bd0:	cmp	r0, #0
   17bd4:	moveq	r0, #1
   17bd8:	cmp	r0, #0
   17bdc:	blt	17be4 <__snprintf_chk@plt+0x6878>
   17be0:	b	111bc <malloc@plt>
   17be4:	push	{r4, lr}
   17be8:	bl	1124c <__errno_location@plt>
   17bec:	mov	r3, #12
   17bf0:	str	r3, [r0]
   17bf4:	mov	r0, #0
   17bf8:	pop	{r4, pc}
   17bfc:	cmp	r0, #0
   17c00:	beq	17c24 <__snprintf_chk@plt+0x68b8>
   17c04:	cmp	r1, #0
   17c08:	push	{lr}		; (str lr, [sp, #-4]!)
   17c0c:	sub	sp, sp, #12
   17c10:	beq	17c2c <__snprintf_chk@plt+0x68c0>
   17c14:	blt	17c44 <__snprintf_chk@plt+0x68d8>
   17c18:	add	sp, sp, #12
   17c1c:	pop	{lr}		; (ldr lr, [sp], #4)
   17c20:	b	11108 <realloc@plt>
   17c24:	mov	r0, r1
   17c28:	b	17bd0 <__snprintf_chk@plt+0x6864>
   17c2c:	str	r1, [sp, #4]
   17c30:	bl	1270c <__snprintf_chk@plt+0x13a0>
   17c34:	ldr	r3, [sp, #4]
   17c38:	mov	r0, r3
   17c3c:	add	sp, sp, #12
   17c40:	pop	{pc}		; (ldr pc, [sp], #4)
   17c44:	bl	1124c <__errno_location@plt>
   17c48:	mov	r2, #12
   17c4c:	mov	r3, #0
   17c50:	str	r2, [r0]
   17c54:	b	17c38 <__snprintf_chk@plt+0x68cc>
   17c58:	push	{r4, r5, r6, lr}
   17c5c:	mov	r6, r0
   17c60:	ldr	r4, [pc, #96]	; 17cc8 <__snprintf_chk@plt+0x695c>
   17c64:	mov	r5, r1
   17c68:	ldr	r2, [r4]
   17c6c:	cmp	r2, #0
   17c70:	beq	17ca4 <__snprintf_chk@plt+0x6938>
   17c74:	ldr	r2, [r4]
   17c78:	cmp	r2, #0
   17c7c:	beq	17c90 <__snprintf_chk@plt+0x6924>
   17c80:	mov	r1, r5
   17c84:	mov	r0, r6
   17c88:	pop	{r4, r5, r6, lr}
   17c8c:	b	112dc <strtod_l@plt>
   17c90:	cmp	r5, #0
   17c94:	beq	17cb8 <__snprintf_chk@plt+0x694c>
   17c98:	str	r6, [r5]
   17c9c:	vldr	d0, [pc, #28]	; 17cc0 <__snprintf_chk@plt+0x6954>
   17ca0:	pop	{r4, r5, r6, pc}
   17ca4:	ldr	r1, [pc, #32]	; 17ccc <__snprintf_chk@plt+0x6960>
   17ca8:	ldr	r0, [pc, #32]	; 17cd0 <__snprintf_chk@plt+0x6964>
   17cac:	bl	11324 <newlocale@plt>
   17cb0:	str	r0, [r4]
   17cb4:	b	17c74 <__snprintf_chk@plt+0x6908>
   17cb8:	vldr	d0, [pc]	; 17cc0 <__snprintf_chk@plt+0x6954>
   17cbc:	pop	{r4, r5, r6, pc}
	...
   17cc8:	muleq	r2, r8, r4
   17ccc:	muleq	r1, r4, r5
   17cd0:			; <UNDEFINED> instruction: 0x00001fbf
   17cd4:	push	{r4, r5, r6, lr}
   17cd8:	mov	r4, r0
   17cdc:	bl	1118c <__fpending@plt>
   17ce0:	ldr	r5, [r4]
   17ce4:	and	r5, r5, #32
   17ce8:	mov	r6, r0
   17cec:	mov	r0, r4
   17cf0:	bl	17d50 <__snprintf_chk@plt+0x69e4>
   17cf4:	cmp	r5, #0
   17cf8:	mov	r4, r0
   17cfc:	bne	17d1c <__snprintf_chk@plt+0x69b0>
   17d00:	cmp	r0, #0
   17d04:	beq	17d14 <__snprintf_chk@plt+0x69a8>
   17d08:	cmp	r6, #0
   17d0c:	beq	17d38 <__snprintf_chk@plt+0x69cc>
   17d10:	mvn	r4, #0
   17d14:	mov	r0, r4
   17d18:	pop	{r4, r5, r6, pc}
   17d1c:	cmp	r0, #0
   17d20:	bne	17d10 <__snprintf_chk@plt+0x69a4>
   17d24:	bl	1124c <__errno_location@plt>
   17d28:	str	r4, [r0]
   17d2c:	mvn	r4, #0
   17d30:	mov	r0, r4
   17d34:	pop	{r4, r5, r6, pc}
   17d38:	bl	1124c <__errno_location@plt>
   17d3c:	ldr	r4, [r0]
   17d40:	subs	r4, r4, #9
   17d44:	mvnne	r4, #0
   17d48:	mov	r0, r4
   17d4c:	pop	{r4, r5, r6, pc}
   17d50:	push	{r4, r5, lr}
   17d54:	sub	sp, sp, #12
   17d58:	mov	r4, r0
   17d5c:	bl	112ac <fileno@plt>
   17d60:	cmp	r0, #0
   17d64:	mov	r0, r4
   17d68:	blt	17de4 <__snprintf_chk@plt+0x6a78>
   17d6c:	bl	111e0 <__freading@plt>
   17d70:	cmp	r0, #0
   17d74:	bne	17db0 <__snprintf_chk@plt+0x6a44>
   17d78:	mov	r0, r4
   17d7c:	bl	17df0 <__snprintf_chk@plt+0x6a84>
   17d80:	cmp	r0, #0
   17d84:	beq	17de0 <__snprintf_chk@plt+0x6a74>
   17d88:	bl	1124c <__errno_location@plt>
   17d8c:	mov	r5, r0
   17d90:	mov	r0, r4
   17d94:	ldr	r4, [r5]
   17d98:	bl	112c4 <fclose@plt>
   17d9c:	cmp	r4, #0
   17da0:	mvnne	r0, #0
   17da4:	strne	r4, [r5]
   17da8:	add	sp, sp, #12
   17dac:	pop	{r4, r5, pc}
   17db0:	mov	r0, r4
   17db4:	bl	112ac <fileno@plt>
   17db8:	mov	r3, #1
   17dbc:	str	r3, [sp]
   17dc0:	mov	r2, #0
   17dc4:	mov	r3, #0
   17dc8:	bl	1115c <lseek64@plt>
   17dcc:	mvn	r3, #0
   17dd0:	mvn	r2, #0
   17dd4:	cmp	r1, r3
   17dd8:	cmpeq	r0, r2
   17ddc:	bne	17d78 <__snprintf_chk@plt+0x6a0c>
   17de0:	mov	r0, r4
   17de4:	add	sp, sp, #12
   17de8:	pop	{r4, r5, lr}
   17dec:	b	112c4 <fclose@plt>
   17df0:	push	{r4, lr}
   17df4:	subs	r4, r0, #0
   17df8:	sub	sp, sp, #8
   17dfc:	beq	17e18 <__snprintf_chk@plt+0x6aac>
   17e00:	bl	111e0 <__freading@plt>
   17e04:	cmp	r0, #0
   17e08:	beq	17e18 <__snprintf_chk@plt+0x6aac>
   17e0c:	ldr	r3, [r4]
   17e10:	tst	r3, #256	; 0x100
   17e14:	bne	17e28 <__snprintf_chk@plt+0x6abc>
   17e18:	mov	r0, r4
   17e1c:	add	sp, sp, #8
   17e20:	pop	{r4, lr}
   17e24:	b	11078 <fflush@plt>
   17e28:	mov	r3, #1
   17e2c:	str	r3, [sp]
   17e30:	mov	r2, #0
   17e34:	mov	r3, #0
   17e38:	mov	r0, r4
   17e3c:	bl	17e50 <__snprintf_chk@plt+0x6ae4>
   17e40:	mov	r0, r4
   17e44:	add	sp, sp, #8
   17e48:	pop	{r4, lr}
   17e4c:	b	11078 <fflush@plt>
   17e50:	push	{r4, r5, r6, r7, r8, lr}
   17e54:	sub	sp, sp, #8
   17e58:	ldmib	r0, {ip, lr}
   17e5c:	mov	r4, r0
   17e60:	ldr	r5, [sp, #32]
   17e64:	cmp	lr, ip
   17e68:	beq	17e80 <__snprintf_chk@plt+0x6b14>
   17e6c:	str	r5, [sp, #32]
   17e70:	mov	r0, r4
   17e74:	add	sp, sp, #8
   17e78:	pop	{r4, r5, r6, r7, r8, lr}
   17e7c:	b	112d0 <fseeko64@plt>
   17e80:	ldr	lr, [r0, #20]
   17e84:	ldr	ip, [r0, #16]
   17e88:	cmp	lr, ip
   17e8c:	bne	17e6c <__snprintf_chk@plt+0x6b00>
   17e90:	ldr	r8, [r0, #36]	; 0x24
   17e94:	cmp	r8, #0
   17e98:	bne	17e6c <__snprintf_chk@plt+0x6b00>
   17e9c:	mov	r6, r2
   17ea0:	mov	r7, r3
   17ea4:	bl	112ac <fileno@plt>
   17ea8:	mov	r2, r6
   17eac:	mov	r3, r7
   17eb0:	str	r5, [sp]
   17eb4:	bl	1115c <lseek64@plt>
   17eb8:	mvn	r3, #0
   17ebc:	mvn	r2, #0
   17ec0:	cmp	r1, r3
   17ec4:	cmpeq	r0, r2
   17ec8:	beq	17ee8 <__snprintf_chk@plt+0x6b7c>
   17ecc:	ldr	r3, [r4]
   17ed0:	strd	r0, [r4, #80]	; 0x50
   17ed4:	mov	r0, r8
   17ed8:	bic	r3, r3, #16
   17edc:	str	r3, [r4]
   17ee0:	add	sp, sp, #8
   17ee4:	pop	{r4, r5, r6, r7, r8, pc}
   17ee8:	mvn	r0, #0
   17eec:	b	17ee0 <__snprintf_chk@plt+0x6b74>
   17ef0:	push	{r4, lr}
   17ef4:	mov	r0, #14
   17ef8:	bl	11318 <nl_langinfo@plt>
   17efc:	cmp	r0, #0
   17f00:	beq	17f18 <__snprintf_chk@plt+0x6bac>
   17f04:	ldrb	r2, [r0]
   17f08:	ldr	r3, [pc, #16]	; 17f20 <__snprintf_chk@plt+0x6bb4>
   17f0c:	cmp	r2, #0
   17f10:	moveq	r0, r3
   17f14:	pop	{r4, pc}
   17f18:	ldr	r0, [pc]	; 17f20 <__snprintf_chk@plt+0x6bb4>
   17f1c:	pop	{r4, pc}
   17f20:	muleq	r1, r8, r5
   17f24:	push	{r4, r5, r6, r7, lr}
   17f28:	subs	r6, r0, #0
   17f2c:	sub	sp, sp, #12
   17f30:	addeq	r6, sp, #4
   17f34:	mov	r0, r6
   17f38:	mov	r5, r2
   17f3c:	mov	r7, r1
   17f40:	bl	11198 <mbrtowc@plt>
   17f44:	cmp	r5, #0
   17f48:	cmnne	r0, #3
   17f4c:	mov	r4, r0
   17f50:	bls	17f6c <__snprintf_chk@plt+0x6c00>
   17f54:	mov	r0, #0
   17f58:	bl	17fc4 <__snprintf_chk@plt+0x6c58>
   17f5c:	cmp	r0, #0
   17f60:	moveq	r4, #1
   17f64:	ldrbeq	r3, [r7]
   17f68:	streq	r3, [r6]
   17f6c:	mov	r0, r4
   17f70:	add	sp, sp, #12
   17f74:	pop	{r4, r5, r6, r7, pc}
   17f78:	push	{r4, r5, r6, lr}
   17f7c:	subs	r4, r2, #0
   17f80:	mov	r6, r0
   17f84:	mov	r5, r1
   17f88:	beq	17fb4 <__snprintf_chk@plt+0x6c48>
   17f8c:	mov	r1, r4
   17f90:	mvn	r0, #0
   17f94:	bl	180b8 <__snprintf_chk@plt+0x6d4c>
   17f98:	cmp	r0, r5
   17f9c:	bcs	17fb4 <__snprintf_chk@plt+0x6c48>
   17fa0:	bl	1124c <__errno_location@plt>
   17fa4:	mov	r3, #12
   17fa8:	str	r3, [r0]
   17fac:	mov	r0, #0
   17fb0:	pop	{r4, r5, r6, pc}
   17fb4:	mul	r1, r5, r4
   17fb8:	mov	r0, r6
   17fbc:	pop	{r4, r5, r6, lr}
   17fc0:	b	17bfc <__snprintf_chk@plt+0x6890>
   17fc4:	push	{lr}		; (str lr, [sp, #-4]!)
   17fc8:	sub	sp, sp, #268	; 0x10c
   17fcc:	add	r1, sp, #4
   17fd0:	ldr	r2, [pc, #60]	; 18014 <__snprintf_chk@plt+0x6ca8>
   17fd4:	bl	18020 <__snprintf_chk@plt+0x6cb4>
   17fd8:	cmp	r0, #0
   17fdc:	movne	r0, #0
   17fe0:	bne	1800c <__snprintf_chk@plt+0x6ca0>
   17fe4:	ldr	r1, [pc, #44]	; 18018 <__snprintf_chk@plt+0x6cac>
   17fe8:	add	r0, sp, #4
   17fec:	bl	11060 <strcmp@plt>
   17ff0:	cmp	r0, #0
   17ff4:	beq	1800c <__snprintf_chk@plt+0x6ca0>
   17ff8:	add	r0, sp, #4
   17ffc:	ldr	r1, [pc, #24]	; 1801c <__snprintf_chk@plt+0x6cb0>
   18000:	bl	11060 <strcmp@plt>
   18004:	adds	r0, r0, #0
   18008:	movne	r0, #1
   1800c:	add	sp, sp, #268	; 0x10c
   18010:	pop	{pc}		; (ldr pc, [sp], #4)
   18014:	andeq	r0, r0, r1, lsl #2
   18018:	muleq	r1, r4, r5
   1801c:	andeq	r9, r1, r0, lsr #11
   18020:	push	{r4, r5, r6, lr}
   18024:	mov	r5, r1
   18028:	mov	r1, #0
   1802c:	mov	r4, r2
   18030:	bl	112e8 <setlocale@plt>
   18034:	subs	r6, r0, #0
   18038:	beq	18094 <__snprintf_chk@plt+0x6d28>
   1803c:	bl	11228 <strlen@plt>
   18040:	cmp	r4, r0
   18044:	bhi	1807c <__snprintf_chk@plt+0x6d10>
   18048:	cmp	r4, #0
   1804c:	bne	18058 <__snprintf_chk@plt+0x6cec>
   18050:	mov	r0, #34	; 0x22
   18054:	pop	{r4, r5, r6, pc}
   18058:	sub	r4, r4, #1
   1805c:	mov	r1, r6
   18060:	mov	r2, r4
   18064:	mov	r0, r5
   18068:	bl	110a8 <memcpy@plt>
   1806c:	mov	r3, #0
   18070:	strb	r3, [r5, r4]
   18074:	mov	r0, #34	; 0x22
   18078:	pop	{r4, r5, r6, pc}
   1807c:	add	r2, r0, #1
   18080:	mov	r1, r6
   18084:	mov	r0, r5
   18088:	bl	110a8 <memcpy@plt>
   1808c:	mov	r0, #0
   18090:	pop	{r4, r5, r6, pc}
   18094:	cmp	r4, #0
   18098:	beq	180a8 <__snprintf_chk@plt+0x6d3c>
   1809c:	strb	r6, [r5]
   180a0:	mov	r0, #22
   180a4:	pop	{r4, r5, r6, pc}
   180a8:	mov	r0, #22
   180ac:	pop	{r4, r5, r6, pc}
   180b0:	mov	r1, #0
   180b4:	b	112e8 <setlocale@plt>
   180b8:	subs	r2, r1, #1
   180bc:	bxeq	lr
   180c0:	bcc	18298 <__snprintf_chk@plt+0x6f2c>
   180c4:	cmp	r0, r1
   180c8:	bls	1827c <__snprintf_chk@plt+0x6f10>
   180cc:	tst	r1, r2
   180d0:	beq	18288 <__snprintf_chk@plt+0x6f1c>
   180d4:	clz	r3, r0
   180d8:	clz	r2, r1
   180dc:	sub	r3, r2, r3
   180e0:	rsbs	r3, r3, #31
   180e4:	addne	r3, r3, r3, lsl #1
   180e8:	mov	r2, #0
   180ec:	addne	pc, pc, r3, lsl #2
   180f0:	nop			; (mov r0, r0)
   180f4:	cmp	r0, r1, lsl #31
   180f8:	adc	r2, r2, r2
   180fc:	subcs	r0, r0, r1, lsl #31
   18100:	cmp	r0, r1, lsl #30
   18104:	adc	r2, r2, r2
   18108:	subcs	r0, r0, r1, lsl #30
   1810c:	cmp	r0, r1, lsl #29
   18110:	adc	r2, r2, r2
   18114:	subcs	r0, r0, r1, lsl #29
   18118:	cmp	r0, r1, lsl #28
   1811c:	adc	r2, r2, r2
   18120:	subcs	r0, r0, r1, lsl #28
   18124:	cmp	r0, r1, lsl #27
   18128:	adc	r2, r2, r2
   1812c:	subcs	r0, r0, r1, lsl #27
   18130:	cmp	r0, r1, lsl #26
   18134:	adc	r2, r2, r2
   18138:	subcs	r0, r0, r1, lsl #26
   1813c:	cmp	r0, r1, lsl #25
   18140:	adc	r2, r2, r2
   18144:	subcs	r0, r0, r1, lsl #25
   18148:	cmp	r0, r1, lsl #24
   1814c:	adc	r2, r2, r2
   18150:	subcs	r0, r0, r1, lsl #24
   18154:	cmp	r0, r1, lsl #23
   18158:	adc	r2, r2, r2
   1815c:	subcs	r0, r0, r1, lsl #23
   18160:	cmp	r0, r1, lsl #22
   18164:	adc	r2, r2, r2
   18168:	subcs	r0, r0, r1, lsl #22
   1816c:	cmp	r0, r1, lsl #21
   18170:	adc	r2, r2, r2
   18174:	subcs	r0, r0, r1, lsl #21
   18178:	cmp	r0, r1, lsl #20
   1817c:	adc	r2, r2, r2
   18180:	subcs	r0, r0, r1, lsl #20
   18184:	cmp	r0, r1, lsl #19
   18188:	adc	r2, r2, r2
   1818c:	subcs	r0, r0, r1, lsl #19
   18190:	cmp	r0, r1, lsl #18
   18194:	adc	r2, r2, r2
   18198:	subcs	r0, r0, r1, lsl #18
   1819c:	cmp	r0, r1, lsl #17
   181a0:	adc	r2, r2, r2
   181a4:	subcs	r0, r0, r1, lsl #17
   181a8:	cmp	r0, r1, lsl #16
   181ac:	adc	r2, r2, r2
   181b0:	subcs	r0, r0, r1, lsl #16
   181b4:	cmp	r0, r1, lsl #15
   181b8:	adc	r2, r2, r2
   181bc:	subcs	r0, r0, r1, lsl #15
   181c0:	cmp	r0, r1, lsl #14
   181c4:	adc	r2, r2, r2
   181c8:	subcs	r0, r0, r1, lsl #14
   181cc:	cmp	r0, r1, lsl #13
   181d0:	adc	r2, r2, r2
   181d4:	subcs	r0, r0, r1, lsl #13
   181d8:	cmp	r0, r1, lsl #12
   181dc:	adc	r2, r2, r2
   181e0:	subcs	r0, r0, r1, lsl #12
   181e4:	cmp	r0, r1, lsl #11
   181e8:	adc	r2, r2, r2
   181ec:	subcs	r0, r0, r1, lsl #11
   181f0:	cmp	r0, r1, lsl #10
   181f4:	adc	r2, r2, r2
   181f8:	subcs	r0, r0, r1, lsl #10
   181fc:	cmp	r0, r1, lsl #9
   18200:	adc	r2, r2, r2
   18204:	subcs	r0, r0, r1, lsl #9
   18208:	cmp	r0, r1, lsl #8
   1820c:	adc	r2, r2, r2
   18210:	subcs	r0, r0, r1, lsl #8
   18214:	cmp	r0, r1, lsl #7
   18218:	adc	r2, r2, r2
   1821c:	subcs	r0, r0, r1, lsl #7
   18220:	cmp	r0, r1, lsl #6
   18224:	adc	r2, r2, r2
   18228:	subcs	r0, r0, r1, lsl #6
   1822c:	cmp	r0, r1, lsl #5
   18230:	adc	r2, r2, r2
   18234:	subcs	r0, r0, r1, lsl #5
   18238:	cmp	r0, r1, lsl #4
   1823c:	adc	r2, r2, r2
   18240:	subcs	r0, r0, r1, lsl #4
   18244:	cmp	r0, r1, lsl #3
   18248:	adc	r2, r2, r2
   1824c:	subcs	r0, r0, r1, lsl #3
   18250:	cmp	r0, r1, lsl #2
   18254:	adc	r2, r2, r2
   18258:	subcs	r0, r0, r1, lsl #2
   1825c:	cmp	r0, r1, lsl #1
   18260:	adc	r2, r2, r2
   18264:	subcs	r0, r0, r1, lsl #1
   18268:	cmp	r0, r1
   1826c:	adc	r2, r2, r2
   18270:	subcs	r0, r0, r1
   18274:	mov	r0, r2
   18278:	bx	lr
   1827c:	moveq	r0, #1
   18280:	movne	r0, #0
   18284:	bx	lr
   18288:	clz	r2, r1
   1828c:	rsb	r2, r2, #31
   18290:	lsr	r0, r0, r2
   18294:	bx	lr
   18298:	cmp	r0, #0
   1829c:	mvnne	r0, #0
   182a0:	b	18504 <__snprintf_chk@plt+0x7198>
   182a4:	cmp	r1, #0
   182a8:	beq	18298 <__snprintf_chk@plt+0x6f2c>
   182ac:	push	{r0, r1, lr}
   182b0:	bl	180b8 <__snprintf_chk@plt+0x6d4c>
   182b4:	pop	{r1, r2, lr}
   182b8:	mul	r3, r2, r0
   182bc:	sub	r1, r1, r3
   182c0:	bx	lr
   182c4:	cmp	r1, #0
   182c8:	beq	184d4 <__snprintf_chk@plt+0x7168>
   182cc:	eor	ip, r0, r1
   182d0:	rsbmi	r1, r1, #0
   182d4:	subs	r2, r1, #1
   182d8:	beq	184a0 <__snprintf_chk@plt+0x7134>
   182dc:	movs	r3, r0
   182e0:	rsbmi	r3, r0, #0
   182e4:	cmp	r3, r1
   182e8:	bls	184ac <__snprintf_chk@plt+0x7140>
   182ec:	tst	r1, r2
   182f0:	beq	184bc <__snprintf_chk@plt+0x7150>
   182f4:	clz	r2, r3
   182f8:	clz	r0, r1
   182fc:	sub	r2, r0, r2
   18300:	rsbs	r2, r2, #31
   18304:	addne	r2, r2, r2, lsl #1
   18308:	mov	r0, #0
   1830c:	addne	pc, pc, r2, lsl #2
   18310:	nop			; (mov r0, r0)
   18314:	cmp	r3, r1, lsl #31
   18318:	adc	r0, r0, r0
   1831c:	subcs	r3, r3, r1, lsl #31
   18320:	cmp	r3, r1, lsl #30
   18324:	adc	r0, r0, r0
   18328:	subcs	r3, r3, r1, lsl #30
   1832c:	cmp	r3, r1, lsl #29
   18330:	adc	r0, r0, r0
   18334:	subcs	r3, r3, r1, lsl #29
   18338:	cmp	r3, r1, lsl #28
   1833c:	adc	r0, r0, r0
   18340:	subcs	r3, r3, r1, lsl #28
   18344:	cmp	r3, r1, lsl #27
   18348:	adc	r0, r0, r0
   1834c:	subcs	r3, r3, r1, lsl #27
   18350:	cmp	r3, r1, lsl #26
   18354:	adc	r0, r0, r0
   18358:	subcs	r3, r3, r1, lsl #26
   1835c:	cmp	r3, r1, lsl #25
   18360:	adc	r0, r0, r0
   18364:	subcs	r3, r3, r1, lsl #25
   18368:	cmp	r3, r1, lsl #24
   1836c:	adc	r0, r0, r0
   18370:	subcs	r3, r3, r1, lsl #24
   18374:	cmp	r3, r1, lsl #23
   18378:	adc	r0, r0, r0
   1837c:	subcs	r3, r3, r1, lsl #23
   18380:	cmp	r3, r1, lsl #22
   18384:	adc	r0, r0, r0
   18388:	subcs	r3, r3, r1, lsl #22
   1838c:	cmp	r3, r1, lsl #21
   18390:	adc	r0, r0, r0
   18394:	subcs	r3, r3, r1, lsl #21
   18398:	cmp	r3, r1, lsl #20
   1839c:	adc	r0, r0, r0
   183a0:	subcs	r3, r3, r1, lsl #20
   183a4:	cmp	r3, r1, lsl #19
   183a8:	adc	r0, r0, r0
   183ac:	subcs	r3, r3, r1, lsl #19
   183b0:	cmp	r3, r1, lsl #18
   183b4:	adc	r0, r0, r0
   183b8:	subcs	r3, r3, r1, lsl #18
   183bc:	cmp	r3, r1, lsl #17
   183c0:	adc	r0, r0, r0
   183c4:	subcs	r3, r3, r1, lsl #17
   183c8:	cmp	r3, r1, lsl #16
   183cc:	adc	r0, r0, r0
   183d0:	subcs	r3, r3, r1, lsl #16
   183d4:	cmp	r3, r1, lsl #15
   183d8:	adc	r0, r0, r0
   183dc:	subcs	r3, r3, r1, lsl #15
   183e0:	cmp	r3, r1, lsl #14
   183e4:	adc	r0, r0, r0
   183e8:	subcs	r3, r3, r1, lsl #14
   183ec:	cmp	r3, r1, lsl #13
   183f0:	adc	r0, r0, r0
   183f4:	subcs	r3, r3, r1, lsl #13
   183f8:	cmp	r3, r1, lsl #12
   183fc:	adc	r0, r0, r0
   18400:	subcs	r3, r3, r1, lsl #12
   18404:	cmp	r3, r1, lsl #11
   18408:	adc	r0, r0, r0
   1840c:	subcs	r3, r3, r1, lsl #11
   18410:	cmp	r3, r1, lsl #10
   18414:	adc	r0, r0, r0
   18418:	subcs	r3, r3, r1, lsl #10
   1841c:	cmp	r3, r1, lsl #9
   18420:	adc	r0, r0, r0
   18424:	subcs	r3, r3, r1, lsl #9
   18428:	cmp	r3, r1, lsl #8
   1842c:	adc	r0, r0, r0
   18430:	subcs	r3, r3, r1, lsl #8
   18434:	cmp	r3, r1, lsl #7
   18438:	adc	r0, r0, r0
   1843c:	subcs	r3, r3, r1, lsl #7
   18440:	cmp	r3, r1, lsl #6
   18444:	adc	r0, r0, r0
   18448:	subcs	r3, r3, r1, lsl #6
   1844c:	cmp	r3, r1, lsl #5
   18450:	adc	r0, r0, r0
   18454:	subcs	r3, r3, r1, lsl #5
   18458:	cmp	r3, r1, lsl #4
   1845c:	adc	r0, r0, r0
   18460:	subcs	r3, r3, r1, lsl #4
   18464:	cmp	r3, r1, lsl #3
   18468:	adc	r0, r0, r0
   1846c:	subcs	r3, r3, r1, lsl #3
   18470:	cmp	r3, r1, lsl #2
   18474:	adc	r0, r0, r0
   18478:	subcs	r3, r3, r1, lsl #2
   1847c:	cmp	r3, r1, lsl #1
   18480:	adc	r0, r0, r0
   18484:	subcs	r3, r3, r1, lsl #1
   18488:	cmp	r3, r1
   1848c:	adc	r0, r0, r0
   18490:	subcs	r3, r3, r1
   18494:	cmp	ip, #0
   18498:	rsbmi	r0, r0, #0
   1849c:	bx	lr
   184a0:	teq	ip, r0
   184a4:	rsbmi	r0, r0, #0
   184a8:	bx	lr
   184ac:	movcc	r0, #0
   184b0:	asreq	r0, ip, #31
   184b4:	orreq	r0, r0, #1
   184b8:	bx	lr
   184bc:	clz	r2, r1
   184c0:	rsb	r2, r2, #31
   184c4:	cmp	ip, #0
   184c8:	lsr	r0, r3, r2
   184cc:	rsbmi	r0, r0, #0
   184d0:	bx	lr
   184d4:	cmp	r0, #0
   184d8:	mvngt	r0, #-2147483648	; 0x80000000
   184dc:	movlt	r0, #-2147483648	; 0x80000000
   184e0:	b	18504 <__snprintf_chk@plt+0x7198>
   184e4:	cmp	r1, #0
   184e8:	beq	184d4 <__snprintf_chk@plt+0x7168>
   184ec:	push	{r0, r1, lr}
   184f0:	bl	182cc <__snprintf_chk@plt+0x6f60>
   184f4:	pop	{r1, r2, lr}
   184f8:	mul	r3, r2, r0
   184fc:	sub	r1, r1, r3
   18500:	bx	lr
   18504:	push	{r1, lr}
   18508:	mov	r0, #8
   1850c:	bl	11054 <raise@plt>
   18510:	pop	{r1, pc}
   18514:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18518:	mov	r7, r0
   1851c:	ldr	r6, [pc, #72]	; 1856c <__snprintf_chk@plt+0x7200>
   18520:	ldr	r5, [pc, #72]	; 18570 <__snprintf_chk@plt+0x7204>
   18524:	add	r6, pc, r6
   18528:	add	r5, pc, r5
   1852c:	sub	r6, r6, r5
   18530:	mov	r8, r1
   18534:	mov	r9, r2
   18538:	bl	1101c <calloc@plt-0x20>
   1853c:	asrs	r6, r6, #2
   18540:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18544:	mov	r4, #0
   18548:	add	r4, r4, #1
   1854c:	ldr	r3, [r5], #4
   18550:	mov	r2, r9
   18554:	mov	r1, r8
   18558:	mov	r0, r7
   1855c:	blx	r3
   18560:	cmp	r6, r4
   18564:	bne	18548 <__snprintf_chk@plt+0x71dc>
   18568:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1856c:	ldrdeq	r1, [r1], -r4
   18570:	andeq	r1, r1, ip, asr #19
   18574:	bx	lr
   18578:	ldr	r3, [pc, #12]	; 1858c <__snprintf_chk@plt+0x7220>
   1857c:	mov	r1, #0
   18580:	add	r3, pc, r3
   18584:	ldr	r2, [r3]
   18588:	b	11264 <__cxa_atexit@plt>
   1858c:	andeq	r1, r1, r0, lsr #23

Disassembly of section .fini:

00018590 <.fini>:
   18590:	push	{r3, lr}
   18594:	pop	{r3, pc}
