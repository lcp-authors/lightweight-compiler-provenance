
../repos/prog2/3.2:     file format elf32-littlearm


Disassembly of section .init:

0001075c <.init>:
   1075c:	push	{r3, lr}
   10760:	bl	1080c <_start@@Base+0x3c>
   10764:	pop	{r3, pc}

Disassembly of section .plt:

00010768 <printf@plt-0x14>:
   10768:	push	{lr}		; (str lr, [sp, #-4]!)
   1076c:	ldr	lr, [pc, #4]	; 10778 <printf@plt-0x4>
   10770:	add	lr, pc, lr
   10774:	ldr	pc, [lr, #8]!
   10778:	andeq	r1, r1, r8, lsl #17

0001077c <printf@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2184]!	; 0x888

00010788 <memcpy@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2176]!	; 0x880

00010794 <puts@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2168]!	; 0x878

000107a0 <__libc_start_main@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2160]!	; 0x870

000107ac <__gmon_start__@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2152]!	; 0x868

000107b8 <strlen@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2144]!	; 0x860

000107c4 <abort@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2136]!	; 0x858

Disassembly of section .text:

000107d0 <_start@@Base>:
   107d0:	mov	fp, #0
   107d4:	mov	lr, #0
   107d8:	pop	{r1}		; (ldr r1, [sp], #4)
   107dc:	mov	r2, sp
   107e0:	push	{r2}		; (str r2, [sp, #-4]!)
   107e4:	push	{r0}		; (str r0, [sp, #-4]!)
   107e8:	ldr	ip, [pc, #16]	; 10800 <_start@@Base+0x30>
   107ec:	push	{ip}		; (str ip, [sp, #-4]!)
   107f0:	ldr	r0, [pc, #12]	; 10804 <_start@@Base+0x34>
   107f4:	ldr	r3, [pc, #12]	; 10808 <_start@@Base+0x38>
   107f8:	bl	107a0 <__libc_start_main@plt>
   107fc:	bl	107c4 <abort@plt>
   10800:	andeq	r1, r1, r4, ror #7
   10804:	andeq	r0, r1, ip, ror lr
   10808:	andeq	r1, r1, r4, lsl #7
   1080c:	ldr	r3, [pc, #20]	; 10828 <_start@@Base+0x58>
   10810:	ldr	r2, [pc, #20]	; 1082c <_start@@Base+0x5c>
   10814:	add	r3, pc, r3
   10818:	ldr	r2, [r3, r2]
   1081c:	cmp	r2, #0
   10820:	bxeq	lr
   10824:	b	107ac <__gmon_start__@plt>
   10828:	andeq	r1, r1, r4, ror #15
   1082c:	andeq	r0, r0, ip, lsr #32
   10830:	ldr	r0, [pc, #24]	; 10850 <_start@@Base+0x80>
   10834:	ldr	r3, [pc, #24]	; 10854 <_start@@Base+0x84>
   10838:	cmp	r3, r0
   1083c:	bxeq	lr
   10840:	ldr	r3, [pc, #16]	; 10858 <_start@@Base+0x88>
   10844:	cmp	r3, #0
   10848:	bxeq	lr
   1084c:	bx	r3
   10850:	andeq	r2, r2, ip, lsr r0
   10854:	andeq	r2, r2, ip, lsr r0
   10858:	andeq	r0, r0, r0
   1085c:	ldr	r0, [pc, #36]	; 10888 <_start@@Base+0xb8>
   10860:	ldr	r1, [pc, #36]	; 1088c <_start@@Base+0xbc>
   10864:	sub	r1, r1, r0
   10868:	asr	r1, r1, #2
   1086c:	add	r1, r1, r1, lsr #31
   10870:	asrs	r1, r1, #1
   10874:	bxeq	lr
   10878:	ldr	r3, [pc, #16]	; 10890 <_start@@Base+0xc0>
   1087c:	cmp	r3, #0
   10880:	bxeq	lr
   10884:	bx	r3
   10888:	andeq	r2, r2, ip, lsr r0
   1088c:	andeq	r2, r2, ip, lsr r0
   10890:	andeq	r0, r0, r0
   10894:	push	{r4, lr}
   10898:	ldr	r4, [pc, #24]	; 108b8 <_start@@Base+0xe8>
   1089c:	ldrb	r3, [r4]
   108a0:	cmp	r3, #0
   108a4:	popne	{r4, pc}
   108a8:	bl	10830 <_start@@Base+0x60>
   108ac:	mov	r3, #1
   108b0:	strb	r3, [r4]
   108b4:	pop	{r4, pc}
   108b8:	andeq	r2, r2, ip, lsr r0
   108bc:	b	1085c <_start@@Base+0x8c>

000108c0 <comp_int_asc@@Base>:
   108c0:	sub	sp, sp, #20
   108c4:	str	r0, [sp, #12]
   108c8:	str	r1, [sp, #8]
   108cc:	ldr	r0, [sp, #12]
   108d0:	ldr	r0, [r0]
   108d4:	str	r0, [sp, #4]
   108d8:	ldr	r0, [sp, #8]
   108dc:	ldr	r0, [r0]
   108e0:	str	r0, [sp]
   108e4:	ldr	r0, [sp]
   108e8:	ldr	r1, [sp, #4]
   108ec:	cmp	r0, r1
   108f0:	ble	10900 <comp_int_asc@@Base+0x40>
   108f4:	mvn	r0, #0
   108f8:	str	r0, [sp, #16]
   108fc:	b	10924 <comp_int_asc@@Base+0x64>
   10900:	ldr	r0, [sp, #4]
   10904:	ldr	r1, [sp]
   10908:	cmp	r0, r1
   1090c:	ble	1091c <comp_int_asc@@Base+0x5c>
   10910:	movw	r0, #1
   10914:	str	r0, [sp, #16]
   10918:	b	10924 <comp_int_asc@@Base+0x64>
   1091c:	movw	r0, #0
   10920:	str	r0, [sp, #16]
   10924:	ldr	r0, [sp, #16]
   10928:	add	sp, sp, #20
   1092c:	bx	lr

00010930 <get_elem@@Base>:
   10930:	sub	sp, sp, #12
   10934:	str	r0, [sp, #8]
   10938:	str	r1, [sp, #4]
   1093c:	str	r2, [sp]
   10940:	ldr	r0, [sp, #8]
   10944:	ldr	r1, [sp, #4]
   10948:	ldr	r2, [sp]
   1094c:	mul	r1, r1, r2
   10950:	add	r0, r0, r1
   10954:	add	sp, sp, #12
   10958:	bx	lr

0001095c <swap@@Base>:
   1095c:	sub	sp, sp, #20
   10960:	str	r0, [sp, #16]
   10964:	str	r1, [sp, #12]
   10968:	str	r2, [sp, #8]
   1096c:	movw	r0, #0
   10970:	str	r0, [sp, #4]
   10974:	ldr	r0, [sp, #4]
   10978:	ldr	r1, [sp, #8]
   1097c:	cmp	r0, r1
   10980:	bge	109dc <swap@@Base+0x80>
   10984:	ldr	r0, [sp, #16]
   10988:	ldr	r1, [sp, #4]
   1098c:	add	r0, r0, r1
   10990:	ldrb	r0, [r0]
   10994:	strb	r0, [sp, #3]
   10998:	ldr	r0, [sp, #12]
   1099c:	ldr	r1, [sp, #4]
   109a0:	add	r0, r0, r1
   109a4:	ldrb	r0, [r0]
   109a8:	ldr	r1, [sp, #16]
   109ac:	ldr	r2, [sp, #4]
   109b0:	add	r1, r1, r2
   109b4:	strb	r0, [r1]
   109b8:	ldrb	r0, [sp, #3]
   109bc:	ldr	r1, [sp, #12]
   109c0:	ldr	r2, [sp, #4]
   109c4:	add	r1, r1, r2
   109c8:	strb	r0, [r1]
   109cc:	ldr	r0, [sp, #4]
   109d0:	add	r0, r0, #1
   109d4:	str	r0, [sp, #4]
   109d8:	b	10974 <swap@@Base+0x18>
   109dc:	add	sp, sp, #20
   109e0:	bx	lr

000109e4 <sort@@Base>:
   109e4:	push	{fp, lr}
   109e8:	mov	fp, sp
   109ec:	sub	sp, sp, #40	; 0x28
   109f0:	str	r0, [fp, #-4]
   109f4:	str	r1, [fp, #-8]
   109f8:	str	r2, [fp, #-12]
   109fc:	str	r3, [fp, #-16]
   10a00:	movw	r0, #0
   10a04:	str	r0, [sp, #16]
   10a08:	ldr	r0, [sp, #16]
   10a0c:	ldr	r1, [fp, #-8]
   10a10:	cmp	r0, r1
   10a14:	bge	10ac8 <sort@@Base+0xe4>
   10a18:	ldr	r0, [fp, #-4]
   10a1c:	ldr	r1, [sp, #16]
   10a20:	ldr	r2, [fp, #-12]
   10a24:	bl	10930 <get_elem@@Base>
   10a28:	str	r0, [sp, #12]
   10a2c:	ldr	r0, [sp, #12]
   10a30:	str	r0, [sp, #8]
   10a34:	ldr	r0, [sp, #16]
   10a38:	add	r0, r0, #1
   10a3c:	str	r0, [sp, #20]
   10a40:	ldr	r0, [sp, #20]
   10a44:	ldr	r1, [fp, #-8]
   10a48:	cmp	r0, r1
   10a4c:	bge	10aa8 <sort@@Base+0xc4>
   10a50:	ldr	r0, [fp, #-4]
   10a54:	ldr	r1, [sp, #20]
   10a58:	ldr	r2, [fp, #-12]
   10a5c:	bl	10930 <get_elem@@Base>
   10a60:	str	r0, [sp, #4]
   10a64:	ldr	r0, [fp, #-16]
   10a68:	ldr	r1, [sp, #4]
   10a6c:	ldr	r2, [sp, #8]
   10a70:	str	r0, [sp]
   10a74:	mov	r0, r1
   10a78:	mov	r1, r2
   10a7c:	ldr	r2, [sp]
   10a80:	blx	r2
   10a84:	cmp	r0, #0
   10a88:	bge	10a94 <sort@@Base+0xb0>
   10a8c:	ldr	r0, [sp, #4]
   10a90:	str	r0, [sp, #8]
   10a94:	b	10a98 <sort@@Base+0xb4>
   10a98:	ldr	r0, [sp, #20]
   10a9c:	add	r0, r0, #1
   10aa0:	str	r0, [sp, #20]
   10aa4:	b	10a40 <sort@@Base+0x5c>
   10aa8:	ldr	r0, [sp, #8]
   10aac:	ldr	r1, [sp, #12]
   10ab0:	ldr	r2, [fp, #-12]
   10ab4:	bl	1095c <swap@@Base>
   10ab8:	ldr	r0, [sp, #16]
   10abc:	add	r0, r0, #1
   10ac0:	str	r0, [sp, #16]
   10ac4:	b	10a08 <sort@@Base+0x24>
   10ac8:	mov	sp, fp
   10acc:	pop	{fp, pc}

00010ad0 <linear_search@@Base>:
   10ad0:	push	{fp, lr}
   10ad4:	mov	fp, sp
   10ad8:	sub	sp, sp, #32
   10adc:	ldr	ip, [fp, #8]
   10ae0:	str	r0, [fp, #-8]
   10ae4:	str	r1, [fp, #-12]
   10ae8:	str	r2, [sp, #16]
   10aec:	str	r3, [sp, #12]
   10af0:	movw	r0, #0
   10af4:	str	r0, [sp, #8]
   10af8:	ldr	r0, [sp, #8]
   10afc:	ldr	r1, [sp, #16]
   10b00:	cmp	r0, r1
   10b04:	bge	10b6c <linear_search@@Base+0x9c>
   10b08:	ldr	r0, [fp, #8]
   10b0c:	ldr	r1, [fp, #-12]
   10b10:	ldr	r2, [sp, #8]
   10b14:	ldr	r3, [sp, #16]
   10b18:	str	r0, [sp, #4]
   10b1c:	mov	r0, r1
   10b20:	mov	r1, r2
   10b24:	mov	r2, r3
   10b28:	bl	10930 <get_elem@@Base>
   10b2c:	ldr	r1, [fp, #-8]
   10b30:	ldr	r2, [sp, #4]
   10b34:	blx	r2
   10b38:	cmp	r0, #0
   10b3c:	bne	10b58 <linear_search@@Base+0x88>
   10b40:	ldr	r0, [fp, #-12]
   10b44:	ldr	r1, [sp, #8]
   10b48:	ldr	r2, [sp, #12]
   10b4c:	bl	10930 <get_elem@@Base>
   10b50:	str	r0, [fp, #-4]
   10b54:	b	10b74 <linear_search@@Base+0xa4>
   10b58:	b	10b5c <linear_search@@Base+0x8c>
   10b5c:	ldr	r0, [sp, #8]
   10b60:	add	r0, r0, #1
   10b64:	str	r0, [sp, #8]
   10b68:	b	10af8 <linear_search@@Base+0x28>
   10b6c:	movw	r0, #0
   10b70:	str	r0, [fp, #-4]
   10b74:	ldr	r0, [fp, #-4]
   10b78:	mov	sp, fp
   10b7c:	pop	{fp, pc}

00010b80 <binary_search@@Base>:
   10b80:	push	{fp, lr}
   10b84:	mov	fp, sp
   10b88:	sub	sp, sp, #56	; 0x38
   10b8c:	ldr	ip, [fp, #8]
   10b90:	str	r0, [fp, #-8]
   10b94:	str	r1, [fp, #-12]
   10b98:	str	r2, [fp, #-16]
   10b9c:	str	r3, [fp, #-20]	; 0xffffffec
   10ba0:	movw	r0, #0
   10ba4:	str	r0, [fp, #-24]	; 0xffffffe8
   10ba8:	ldr	r0, [fp, #-16]
   10bac:	sub	r0, r0, #1
   10bb0:	str	r0, [sp, #28]
   10bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10bb8:	ldr	r1, [sp, #28]
   10bbc:	cmp	r0, r1
   10bc0:	bgt	10cb0 <binary_search@@Base+0x130>
   10bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10bc8:	ldr	r1, [sp, #28]
   10bcc:	add	r0, r0, r1
   10bd0:	movw	r1, #2
   10bd4:	sdiv	r0, r0, r1
   10bd8:	str	r0, [sp, #24]
   10bdc:	ldr	r0, [fp, #8]
   10be0:	ldr	r1, [fp, #-8]
   10be4:	ldr	r2, [fp, #-12]
   10be8:	ldr	r3, [sp, #24]
   10bec:	ldr	ip, [fp, #-20]	; 0xffffffec
   10bf0:	str	r0, [sp, #20]
   10bf4:	mov	r0, r2
   10bf8:	str	r1, [sp, #16]
   10bfc:	mov	r1, r3
   10c00:	mov	r2, ip
   10c04:	bl	10930 <get_elem@@Base>
   10c08:	ldr	r1, [sp, #16]
   10c0c:	str	r0, [sp, #12]
   10c10:	mov	r0, r1
   10c14:	ldr	r1, [sp, #12]
   10c18:	ldr	r2, [sp, #20]
   10c1c:	blx	r2
   10c20:	cmp	r0, #0
   10c24:	beq	10c40 <binary_search@@Base+0xc0>
   10c28:	ldr	r0, [fp, #-12]
   10c2c:	ldr	r1, [sp, #24]
   10c30:	ldr	r2, [fp, #-20]	; 0xffffffec
   10c34:	bl	10930 <get_elem@@Base>
   10c38:	str	r0, [fp, #-4]
   10c3c:	b	10cb8 <binary_search@@Base+0x138>
   10c40:	ldr	r0, [fp, #8]
   10c44:	ldr	r1, [fp, #-8]
   10c48:	ldr	r2, [fp, #-12]
   10c4c:	ldr	r3, [sp, #24]
   10c50:	ldr	ip, [fp, #-20]	; 0xffffffec
   10c54:	str	r0, [sp, #8]
   10c58:	mov	r0, r2
   10c5c:	str	r1, [sp, #4]
   10c60:	mov	r1, r3
   10c64:	mov	r2, ip
   10c68:	bl	10930 <get_elem@@Base>
   10c6c:	ldr	r1, [sp, #4]
   10c70:	str	r0, [sp]
   10c74:	mov	r0, r1
   10c78:	ldr	r1, [sp]
   10c7c:	ldr	r2, [sp, #8]
   10c80:	blx	r2
   10c84:	cmn	r0, #1
   10c88:	bne	10c9c <binary_search@@Base+0x11c>
   10c8c:	ldr	r0, [sp, #24]
   10c90:	sub	r0, r0, #1
   10c94:	str	r0, [sp, #28]
   10c98:	b	10ca8 <binary_search@@Base+0x128>
   10c9c:	ldr	r0, [sp, #24]
   10ca0:	add	r0, r0, #1
   10ca4:	str	r0, [fp, #-24]	; 0xffffffe8
   10ca8:	b	10cac <binary_search@@Base+0x12c>
   10cac:	b	10bb4 <binary_search@@Base+0x34>
   10cb0:	movw	r0, #0
   10cb4:	str	r0, [fp, #-4]
   10cb8:	ldr	r0, [fp, #-4]
   10cbc:	mov	sp, fp
   10cc0:	pop	{fp, pc}

00010cc4 <insertion_sort@@Base>:
   10cc4:	push	{fp, lr}
   10cc8:	mov	fp, sp
   10ccc:	sub	sp, sp, #48	; 0x30
   10cd0:	str	r0, [fp, #-4]
   10cd4:	str	r1, [fp, #-8]
   10cd8:	str	r2, [fp, #-12]
   10cdc:	str	r3, [fp, #-16]
   10ce0:	movw	r0, #1
   10ce4:	str	r0, [fp, #-20]	; 0xffffffec
   10ce8:	ldr	r0, [fp, #-20]	; 0xffffffec
   10cec:	ldr	r1, [fp, #-8]
   10cf0:	cmp	r0, r1
   10cf4:	bge	10e04 <insertion_sort@@Base+0x140>
   10cf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   10cfc:	str	r0, [sp, #24]
   10d00:	ldr	r0, [sp, #24]
   10d04:	cmp	r0, #0
   10d08:	movw	r0, #0
   10d0c:	str	r0, [sp, #20]
   10d10:	ble	10d84 <insertion_sort@@Base+0xc0>
   10d14:	ldr	r0, [fp, #-16]
   10d18:	ldr	r1, [fp, #-4]
   10d1c:	ldr	r2, [sp, #24]
   10d20:	ldr	r3, [fp, #-12]
   10d24:	str	r0, [sp, #16]
   10d28:	mov	r0, r1
   10d2c:	mov	r1, r2
   10d30:	mov	r2, r3
   10d34:	bl	10930 <get_elem@@Base>
   10d38:	ldr	r1, [fp, #-4]
   10d3c:	ldr	r2, [sp, #24]
   10d40:	sub	r2, r2, #1
   10d44:	ldr	r3, [fp, #-12]
   10d48:	str	r0, [sp, #12]
   10d4c:	mov	r0, r1
   10d50:	mov	r1, r2
   10d54:	mov	r2, r3
   10d58:	bl	10930 <get_elem@@Base>
   10d5c:	ldr	r1, [sp, #12]
   10d60:	str	r0, [sp, #8]
   10d64:	mov	r0, r1
   10d68:	ldr	r1, [sp, #8]
   10d6c:	ldr	r2, [sp, #16]
   10d70:	blx	r2
   10d74:	cmn	r0, #1
   10d78:	movw	r0, #0
   10d7c:	moveq	r0, #1
   10d80:	str	r0, [sp, #20]
   10d84:	ldr	r0, [sp, #20]
   10d88:	tst	r0, #1
   10d8c:	beq	10df0 <insertion_sort@@Base+0x12c>
   10d90:	ldr	r0, [fp, #-4]
   10d94:	ldr	r1, [sp, #24]
   10d98:	ldr	r2, [fp, #-12]
   10d9c:	bl	10930 <get_elem@@Base>
   10da0:	ldr	r1, [fp, #-4]
   10da4:	ldr	r2, [sp, #24]
   10da8:	sub	r2, r2, #1
   10dac:	ldr	r3, [fp, #-12]
   10db0:	str	r0, [sp, #4]
   10db4:	mov	r0, r1
   10db8:	mov	r1, r2
   10dbc:	mov	r2, r3
   10dc0:	bl	10930 <get_elem@@Base>
   10dc4:	ldr	r2, [fp, #-12]
   10dc8:	ldr	r1, [sp, #4]
   10dcc:	str	r0, [sp]
   10dd0:	mov	r0, r1
   10dd4:	ldr	r1, [sp]
   10dd8:	bl	1095c <swap@@Base>
   10ddc:	ldr	r0, [sp, #24]
   10de0:	mvn	r1, #0
   10de4:	add	r0, r0, r1
   10de8:	str	r0, [sp, #24]
   10dec:	b	10d00 <insertion_sort@@Base+0x3c>
   10df0:	b	10df4 <insertion_sort@@Base+0x130>
   10df4:	ldr	r0, [fp, #-20]	; 0xffffffec
   10df8:	add	r0, r0, #1
   10dfc:	str	r0, [fp, #-20]	; 0xffffffec
   10e00:	b	10ce8 <insertion_sort@@Base+0x24>
   10e04:	mov	sp, fp
   10e08:	pop	{fp, pc}

00010e0c <comp_char_desc@@Base>:
   10e0c:	sub	sp, sp, #16
   10e10:	str	r0, [sp, #8]
   10e14:	str	r1, [sp, #4]
   10e18:	ldr	r0, [sp, #8]
   10e1c:	ldrb	r0, [r0]
   10e20:	strb	r0, [sp, #3]
   10e24:	ldr	r0, [sp, #4]
   10e28:	ldrb	r0, [r0]
   10e2c:	strb	r0, [sp, #2]
   10e30:	ldrb	r0, [sp, #3]
   10e34:	ldrb	r1, [sp, #2]
   10e38:	cmp	r0, r1
   10e3c:	bge	10e4c <comp_char_desc@@Base+0x40>
   10e40:	movw	r0, #1
   10e44:	str	r0, [sp, #12]
   10e48:	b	10e70 <comp_char_desc@@Base+0x64>
   10e4c:	ldrb	r0, [sp, #3]
   10e50:	ldrb	r1, [sp, #2]
   10e54:	cmp	r0, r1
   10e58:	ble	10e68 <comp_char_desc@@Base+0x5c>
   10e5c:	mvn	r0, #0
   10e60:	str	r0, [sp, #12]
   10e64:	b	10e70 <comp_char_desc@@Base+0x64>
   10e68:	movw	r0, #0
   10e6c:	str	r0, [sp, #12]
   10e70:	ldr	r0, [sp, #12]
   10e74:	add	sp, sp, #16
   10e78:	bx	lr

00010e7c <main@@Base>:
   10e7c:	push	{fp, lr}
   10e80:	mov	fp, sp
   10e84:	sub	sp, sp, #184	; 0xb8
   10e88:	ldr	r0, [pc, #1148]	; 1130c <main@@Base+0x490>
   10e8c:	add	r0, pc, r0
   10e90:	sub	r1, fp, #28
   10e94:	sub	r2, fp, #52	; 0x34
   10e98:	ldr	r3, [pc, #1136]	; 11310 <main@@Base+0x494>
   10e9c:	add	r3, pc, r3
   10ea0:	movw	ip, #0
   10ea4:	str	ip, [fp, #-4]
   10ea8:	mov	ip, r1
   10eac:	str	r0, [fp, #-76]	; 0xffffffb4
   10eb0:	mov	r0, ip
   10eb4:	str	r1, [fp, #-80]	; 0xffffffb0
   10eb8:	mov	r1, r3
   10ebc:	movw	r3, #24
   10ec0:	str	r2, [fp, #-84]	; 0xffffffac
   10ec4:	mov	r2, r3
   10ec8:	str	r3, [fp, #-88]	; 0xffffffa8
   10ecc:	bl	10788 <memcpy@plt>
   10ed0:	ldr	r0, [fp, #-84]	; 0xffffffac
   10ed4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   10ed8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   10edc:	bl	10788 <memcpy@plt>
   10ee0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   10ee4:	bl	10794 <puts@plt>
   10ee8:	ldr	r1, [pc, #1048]	; 11308 <main@@Base+0x48c>
   10eec:	add	r1, pc, r1
   10ef0:	str	r0, [sp, #92]	; 0x5c
   10ef4:	mov	r0, r1
   10ef8:	bl	1077c <printf@plt>
   10efc:	movw	r1, #0
   10f00:	str	r1, [fp, #-56]	; 0xffffffc8
   10f04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10f08:	cmp	r0, #6
   10f0c:	bge	10f3c <main@@Base+0xc0>
   10f10:	ldr	r0, [pc, #1128]	; 11380 <main@@Base+0x504>
   10f14:	add	r0, pc, r0
   10f18:	ldr	r1, [fp, #-56]	; 0xffffffc8
   10f1c:	sub	r2, fp, #52	; 0x34
   10f20:	add	r1, r2, r1, lsl #2
   10f24:	ldr	r1, [r1]
   10f28:	bl	1077c <printf@plt>
   10f2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10f30:	add	r0, r0, #1
   10f34:	str	r0, [fp, #-56]	; 0xffffffc8
   10f38:	b	10f04 <main@@Base+0x88>
   10f3c:	ldr	r0, [pc, #984]	; 1131c <main@@Base+0x4a0>
   10f40:	add	r0, pc, r0
   10f44:	bl	10794 <puts@plt>
   10f48:	ldr	r1, [pc, #968]	; 11318 <main@@Base+0x49c>
   10f4c:	ldr	r3, [pc, r1]
   10f50:	sub	r1, fp, #52	; 0x34
   10f54:	str	r0, [sp, #88]	; 0x58
   10f58:	mov	r0, r1
   10f5c:	movw	r1, #6
   10f60:	movw	r2, #4
   10f64:	bl	109e4 <sort@@Base>
   10f68:	ldr	r0, [pc, #932]	; 11314 <main@@Base+0x498>
   10f6c:	add	r0, pc, r0
   10f70:	bl	1077c <printf@plt>
   10f74:	movw	r1, #0
   10f78:	str	r1, [fp, #-56]	; 0xffffffc8
   10f7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10f80:	cmp	r0, #6
   10f84:	bge	10fb4 <main@@Base+0x138>
   10f88:	ldr	r0, [pc, #1004]	; 1137c <main@@Base+0x500>
   10f8c:	add	r0, pc, r0
   10f90:	ldr	r1, [fp, #-56]	; 0xffffffc8
   10f94:	sub	r2, fp, #52	; 0x34
   10f98:	add	r1, r2, r1, lsl #2
   10f9c:	ldr	r1, [r1]
   10fa0:	bl	1077c <printf@plt>
   10fa4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10fa8:	add	r0, r0, #1
   10fac:	str	r0, [fp, #-56]	; 0xffffffc8
   10fb0:	b	10f7c <main@@Base+0x100>
   10fb4:	ldr	r0, [pc, #876]	; 11328 <main@@Base+0x4ac>
   10fb8:	add	r0, pc, r0
   10fbc:	bl	10794 <puts@plt>
   10fc0:	ldr	r1, [pc, #860]	; 11324 <main@@Base+0x4a8>
   10fc4:	add	r1, pc, r1
   10fc8:	sub	r2, fp, #28
   10fcc:	sub	r3, fp, #52	; 0x34
   10fd0:	str	r0, [sp, #84]	; 0x54
   10fd4:	mov	r0, r3
   10fd8:	str	r1, [sp, #80]	; 0x50
   10fdc:	mov	r1, r2
   10fe0:	movw	r2, #24
   10fe4:	bl	10788 <memcpy@plt>
   10fe8:	ldr	r0, [sp, #80]	; 0x50
   10fec:	bl	10794 <puts@plt>
   10ff0:	ldr	r1, [pc, #808]	; 11320 <main@@Base+0x4a4>
   10ff4:	ldr	r1, [pc, r1]
   10ff8:	sub	r2, fp, #52	; 0x34
   10ffc:	movw	r3, #4
   11000:	str	r3, [fp, #-60]	; 0xffffffc4
   11004:	sub	ip, fp, #60	; 0x3c
   11008:	str	r0, [sp, #76]	; 0x4c
   1100c:	mov	r0, ip
   11010:	str	r1, [sp, #72]	; 0x48
   11014:	mov	r1, r2
   11018:	movw	r2, #6
   1101c:	ldr	ip, [sp, #72]	; 0x48
   11020:	str	ip, [sp]
   11024:	bl	10ad0 <linear_search@@Base>
   11028:	str	r0, [fp, #-64]	; 0xffffffc0
   1102c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11030:	movw	r1, #0
   11034:	cmp	r0, r1
   11038:	beq	11060 <main@@Base+0x1e4>
   1103c:	ldr	r0, [pc, #748]	; 11330 <main@@Base+0x4b4>
   11040:	add	r0, pc, r0
   11044:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11048:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1104c:	sub	r3, fp, #52	; 0x34
   11050:	sub	r2, r2, r3
   11054:	asr	r2, r2, #2
   11058:	bl	1077c <printf@plt>
   1105c:	b	11070 <main@@Base+0x1f4>
   11060:	ldr	r0, [pc, #708]	; 1132c <main@@Base+0x4b0>
   11064:	add	r0, pc, r0
   11068:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1106c:	bl	1077c <printf@plt>
   11070:	ldr	r0, [pc, #708]	; 1133c <main@@Base+0x4c0>
   11074:	ldr	r3, [pc, r0]
   11078:	sub	r0, fp, #52	; 0x34
   1107c:	sub	r1, fp, #28
   11080:	mov	r2, r0
   11084:	str	r0, [sp, #68]	; 0x44
   11088:	mov	r0, r2
   1108c:	movw	r2, #24
   11090:	str	r3, [sp, #64]	; 0x40
   11094:	bl	10788 <memcpy@plt>
   11098:	ldr	r0, [sp, #68]	; 0x44
   1109c:	movw	r1, #6
   110a0:	movw	r2, #4
   110a4:	ldr	r3, [sp, #64]	; 0x40
   110a8:	bl	109e4 <sort@@Base>
   110ac:	ldr	r0, [pc, #644]	; 11338 <main@@Base+0x4bc>
   110b0:	add	r0, pc, r0
   110b4:	bl	10794 <puts@plt>
   110b8:	ldr	r1, [pc, #628]	; 11334 <main@@Base+0x4b8>
   110bc:	ldr	r1, [pc, r1]
   110c0:	sub	r2, fp, #52	; 0x34
   110c4:	sub	r3, fp, #60	; 0x3c
   110c8:	str	r0, [sp, #60]	; 0x3c
   110cc:	mov	r0, r3
   110d0:	str	r1, [sp, #56]	; 0x38
   110d4:	mov	r1, r2
   110d8:	movw	r2, #6
   110dc:	movw	r3, #4
   110e0:	ldr	ip, [sp, #56]	; 0x38
   110e4:	str	ip, [sp]
   110e8:	bl	10b80 <binary_search@@Base>
   110ec:	str	r0, [fp, #-64]	; 0xffffffc0
   110f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   110f4:	movw	r1, #0
   110f8:	cmp	r0, r1
   110fc:	beq	11124 <main@@Base+0x2a8>
   11100:	ldr	r0, [pc, #572]	; 11344 <main@@Base+0x4c8>
   11104:	add	r0, pc, r0
   11108:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1110c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11110:	sub	r3, fp, #52	; 0x34
   11114:	sub	r2, r2, r3
   11118:	asr	r2, r2, #2
   1111c:	bl	1077c <printf@plt>
   11120:	b	11134 <main@@Base+0x2b8>
   11124:	ldr	r0, [pc, #532]	; 11340 <main@@Base+0x4c4>
   11128:	add	r0, pc, r0
   1112c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11130:	bl	1077c <printf@plt>
   11134:	ldr	r0, [pc, #528]	; 1134c <main@@Base+0x4d0>
   11138:	add	r0, pc, r0
   1113c:	sub	r1, fp, #28
   11140:	sub	r2, fp, #52	; 0x34
   11144:	str	r0, [sp, #52]	; 0x34
   11148:	mov	r0, r2
   1114c:	movw	r2, #24
   11150:	bl	10788 <memcpy@plt>
   11154:	ldr	r0, [sp, #52]	; 0x34
   11158:	bl	10794 <puts@plt>
   1115c:	ldr	r1, [pc, #484]	; 11348 <main@@Base+0x4cc>
   11160:	add	r1, pc, r1
   11164:	str	r0, [sp, #48]	; 0x30
   11168:	mov	r0, r1
   1116c:	bl	1077c <printf@plt>
   11170:	movw	r1, #0
   11174:	str	r1, [fp, #-56]	; 0xffffffc8
   11178:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1117c:	cmp	r0, #6
   11180:	bge	111b0 <main@@Base+0x334>
   11184:	ldr	r0, [pc, #492]	; 11378 <main@@Base+0x4fc>
   11188:	add	r0, pc, r0
   1118c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11190:	sub	r2, fp, #52	; 0x34
   11194:	add	r1, r2, r1, lsl #2
   11198:	ldr	r1, [r1]
   1119c:	bl	1077c <printf@plt>
   111a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   111a4:	add	r0, r0, #1
   111a8:	str	r0, [fp, #-56]	; 0xffffffc8
   111ac:	b	11178 <main@@Base+0x2fc>
   111b0:	ldr	r0, [pc, #416]	; 11358 <main@@Base+0x4dc>
   111b4:	add	r0, pc, r0
   111b8:	bl	10794 <puts@plt>
   111bc:	ldr	r1, [pc, #400]	; 11354 <main@@Base+0x4d8>
   111c0:	ldr	r3, [pc, r1]
   111c4:	sub	r1, fp, #52	; 0x34
   111c8:	str	r0, [sp, #44]	; 0x2c
   111cc:	mov	r0, r1
   111d0:	movw	r1, #6
   111d4:	movw	r2, #4
   111d8:	bl	10cc4 <insertion_sort@@Base>
   111dc:	ldr	r0, [pc, #364]	; 11350 <main@@Base+0x4d4>
   111e0:	add	r0, pc, r0
   111e4:	bl	1077c <printf@plt>
   111e8:	movw	r1, #0
   111ec:	str	r1, [fp, #-56]	; 0xffffffc8
   111f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   111f4:	cmp	r0, #6
   111f8:	bge	11228 <main@@Base+0x3ac>
   111fc:	ldr	r0, [pc, #368]	; 11374 <main@@Base+0x4f8>
   11200:	add	r0, pc, r0
   11204:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11208:	sub	r2, fp, #52	; 0x34
   1120c:	add	r1, r2, r1, lsl #2
   11210:	ldr	r1, [r1]
   11214:	bl	1077c <printf@plt>
   11218:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1121c:	add	r0, r0, #1
   11220:	str	r0, [fp, #-56]	; 0xffffffc8
   11224:	b	111f0 <main@@Base+0x374>
   11228:	ldr	r0, [pc, #320]	; 11370 <main@@Base+0x4f4>
   1122c:	add	r0, pc, r0
   11230:	bl	10794 <puts@plt>
   11234:	ldr	r1, [pc, #304]	; 1136c <main@@Base+0x4f0>
   11238:	add	r1, pc, r1
   1123c:	str	r0, [sp, #40]	; 0x28
   11240:	mov	r0, r1
   11244:	bl	10794 <puts@plt>
   11248:	ldr	r1, [pc, #276]	; 11364 <main@@Base+0x4e8>
   1124c:	add	r1, pc, r1
   11250:	ldr	r2, [pc, #272]	; 11368 <main@@Base+0x4ec>
   11254:	add	r2, pc, r2
   11258:	ldrb	r3, [r2]
   1125c:	strb	r3, [fp, #-69]	; 0xffffffbb
   11260:	ldrb	r3, [r2, #1]
   11264:	strb	r3, [fp, #-68]	; 0xffffffbc
   11268:	ldrb	r3, [r2, #2]
   1126c:	strb	r3, [fp, #-67]	; 0xffffffbd
   11270:	ldrb	r3, [r2, #3]
   11274:	strb	r3, [fp, #-66]	; 0xffffffbe
   11278:	ldrb	r2, [r2, #4]
   1127c:	strb	r2, [fp, #-65]	; 0xffffffbf
   11280:	str	r0, [sp, #36]	; 0x24
   11284:	mov	r0, r1
   11288:	bl	1077c <printf@plt>
   1128c:	sub	r1, fp, #69	; 0x45
   11290:	str	r0, [sp, #32]
   11294:	mov	r0, r1
   11298:	bl	10794 <puts@plt>
   1129c:	ldr	r1, [pc, #188]	; 11360 <main@@Base+0x4e4>
   112a0:	ldr	r3, [pc, r1]
   112a4:	sub	r1, fp, #69	; 0x45
   112a8:	str	r0, [sp, #28]
   112ac:	mov	r0, r1
   112b0:	str	r3, [sp, #24]
   112b4:	str	r1, [sp, #20]
   112b8:	bl	107b8 <strlen@plt>
   112bc:	ldr	r1, [sp, #20]
   112c0:	str	r0, [sp, #16]
   112c4:	mov	r0, r1
   112c8:	ldr	r1, [sp, #16]
   112cc:	movw	r2, #1
   112d0:	ldr	r3, [sp, #24]
   112d4:	bl	109e4 <sort@@Base>
   112d8:	ldr	r0, [pc, #124]	; 1135c <main@@Base+0x4e0>
   112dc:	add	r0, pc, r0
   112e0:	bl	1077c <printf@plt>
   112e4:	sub	r1, fp, #69	; 0x45
   112e8:	str	r0, [sp, #12]
   112ec:	mov	r0, r1
   112f0:	bl	10794 <puts@plt>
   112f4:	movw	r1, #0
   112f8:	str	r0, [sp, #8]
   112fc:	mov	r0, r1
   11300:	mov	sp, fp
   11304:	pop	{fp, pc}
   11308:	andeq	r0, r0, r6, lsr #10
   1130c:	andeq	r0, r0, r8, ror r5
   11310:	andeq	r0, r0, r0, asr r5
   11314:			; <UNDEFINED> instruction: 0x000004b1
   11318:	ldrdeq	r1, [r1], -r4
   1131c:	andeq	r0, r0, fp, lsl r5
   11320:	andeq	r1, r1, ip, lsr #32
   11324:	andeq	r0, r0, r1, ror #8
   11328:	andeq	r0, r0, r3, lsr #9
   1132c:	strdeq	r0, [r0], -r8
   11330:	andeq	r0, r0, pc, ror #7
   11334:	andeq	r0, r1, r4, ror #30
   11338:	andeq	r0, r0, lr, asr #7
   1133c:	andeq	r0, r1, ip, lsr #31
   11340:	andeq	r0, r0, r4, lsr r3
   11344:	andeq	r0, r0, fp, lsr #6
   11348:			; <UNDEFINED> instruction: 0x000002b2
   1134c:	andeq	r0, r0, r0, asr r3
   11350:	andeq	r0, r0, sp, lsr r2
   11354:	andeq	r0, r1, r0, ror #28
   11358:	andeq	r0, r0, r7, lsr #5
   1135c:	andeq	r0, r0, r1, asr #2
   11360:	andeq	r0, r1, r8, lsl #27
   11364:	andeq	r0, r0, r6, asr #3
   11368:	andeq	r0, r0, r8, asr #4
   1136c:	andeq	r0, r0, sl, asr r2
   11370:	andeq	r0, r0, pc, lsr #4
   11374:	andeq	r0, r0, r9, lsl r2
   11378:	muleq	r0, r1, r2
   1137c:	andeq	r0, r0, sp, lsl #9
   11380:	andeq	r0, r0, r5, lsl #10

00011384 <__libc_csu_init@@Base>:
   11384:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11388:	mov	r7, r0
   1138c:	ldr	r6, [pc, #72]	; 113dc <__libc_csu_init@@Base+0x58>
   11390:	ldr	r5, [pc, #72]	; 113e0 <__libc_csu_init@@Base+0x5c>
   11394:	add	r6, pc, r6
   11398:	add	r5, pc, r5
   1139c:	sub	r6, r6, r5
   113a0:	mov	r8, r1
   113a4:	mov	r9, r2
   113a8:	bl	1075c <printf@plt-0x20>
   113ac:	asrs	r6, r6, #2
   113b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   113b4:	mov	r4, #0
   113b8:	add	r4, r4, #1
   113bc:	ldr	r3, [r5], #4
   113c0:	mov	r2, r9
   113c4:	mov	r1, r8
   113c8:	mov	r0, r7
   113cc:	blx	r3
   113d0:	cmp	r6, r4
   113d4:	bne	113b8 <__libc_csu_init@@Base+0x34>
   113d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   113dc:	andeq	r0, r1, r0, ror fp
   113e0:	andeq	r0, r1, r8, ror #22

000113e4 <__libc_csu_fini@@Base>:
   113e4:	bx	lr

Disassembly of section .fini:

000113e8 <.fini>:
   113e8:	push	{r3, lr}
   113ec:	pop	{r3, pc}
