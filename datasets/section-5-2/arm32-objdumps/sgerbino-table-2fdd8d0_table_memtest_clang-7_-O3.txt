
../repos/sgerbino-table-2fdd8d0/bin/table_memtest:     file format elf32-littlearm


Disassembly of section .init:

00011ec0 <.init>:
   11ec0:	push	{r3, lr}
   11ec4:	bl	11fc4 <_start@@Base+0x3c>
   11ec8:	pop	{r3, pc}

Disassembly of section .plt:

00011ecc <strcmp@plt-0x14>:
   11ecc:	push	{lr}		; (str lr, [sp, #-4]!)
   11ed0:	ldr	lr, [pc, #4]	; 11edc <strcmp@plt-0x4>
   11ed4:	add	lr, pc, lr
   11ed8:	ldr	pc, [lr, #8]!
   11edc:	andeq	r4, r1, r4, lsr #2

00011ee0 <strcmp@plt>:
   11ee0:	add	ip, pc, #0, 12
   11ee4:	add	ip, ip, #20, 20	; 0x14000
   11ee8:	ldr	pc, [ip, #292]!	; 0x124

00011eec <free@plt>:
   11eec:	add	ip, pc, #0, 12
   11ef0:	add	ip, ip, #20, 20	; 0x14000
   11ef4:	ldr	pc, [ip, #284]!	; 0x11c

00011ef8 <time@plt>:
   11ef8:	add	ip, pc, #0, 12
   11efc:	add	ip, ip, #20, 20	; 0x14000
   11f00:	ldr	pc, [ip, #276]!	; 0x114

00011f04 <realloc@plt>:
   11f04:	add	ip, pc, #0, 12
   11f08:	add	ip, ip, #20, 20	; 0x14000
   11f0c:	ldr	pc, [ip, #268]!	; 0x10c

00011f10 <strcpy@plt>:
   11f10:	add	ip, pc, #0, 12
   11f14:	add	ip, ip, #20, 20	; 0x14000
   11f18:	ldr	pc, [ip, #260]!	; 0x104

00011f1c <malloc@plt>:
   11f1c:	add	ip, pc, #0, 12
   11f20:	add	ip, ip, #20, 20	; 0x14000
   11f24:	ldr	pc, [ip, #252]!	; 0xfc

00011f28 <__libc_start_main@plt>:
   11f28:	add	ip, pc, #0, 12
   11f2c:	add	ip, ip, #20, 20	; 0x14000
   11f30:	ldr	pc, [ip, #244]!	; 0xf4

00011f34 <__gmon_start__@plt>:
   11f34:	add	ip, pc, #0, 12
   11f38:	add	ip, ip, #20, 20	; 0x14000
   11f3c:	ldr	pc, [ip, #236]!	; 0xec

00011f40 <strlen@plt>:
   11f40:	add	ip, pc, #0, 12
   11f44:	add	ip, ip, #20, 20	; 0x14000
   11f48:	ldr	pc, [ip, #228]!	; 0xe4

00011f4c <srand@plt>:
   11f4c:	add	ip, pc, #0, 12
   11f50:	add	ip, ip, #20, 20	; 0x14000
   11f54:	ldr	pc, [ip, #220]!	; 0xdc

00011f58 <snprintf@plt>:
   11f58:	add	ip, pc, #0, 12
   11f5c:	add	ip, ip, #20, 20	; 0x14000
   11f60:	ldr	pc, [ip, #212]!	; 0xd4

00011f64 <__isoc99_sscanf@plt>:
   11f64:	add	ip, pc, #0, 12
   11f68:	add	ip, ip, #20, 20	; 0x14000
   11f6c:	ldr	pc, [ip, #204]!	; 0xcc

00011f70 <rand@plt>:
   11f70:	add	ip, pc, #0, 12
   11f74:	add	ip, ip, #20, 20	; 0x14000
   11f78:	ldr	pc, [ip, #196]!	; 0xc4

00011f7c <abort@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #20, 20	; 0x14000
   11f84:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

00011f88 <_start@@Base>:
   11f88:	mov	fp, #0
   11f8c:	mov	lr, #0
   11f90:	pop	{r1}		; (ldr r1, [sp], #4)
   11f94:	mov	r2, sp
   11f98:	push	{r2}		; (str r2, [sp, #-4]!)
   11f9c:	push	{r0}		; (str r0, [sp, #-4]!)
   11fa0:	ldr	ip, [pc, #16]	; 11fb8 <_start@@Base+0x30>
   11fa4:	push	{ip}		; (str ip, [sp, #-4]!)
   11fa8:	ldr	r0, [pc, #12]	; 11fbc <_start@@Base+0x34>
   11fac:	ldr	r3, [pc, #12]	; 11fc0 <_start@@Base+0x38>
   11fb0:	bl	11f28 <__libc_start_main@plt>
   11fb4:	bl	11f7c <abort@plt>
   11fb8:	andeq	r5, r1, r8, lsl #18
   11fbc:	andeq	r2, r1, r8, ror r0
   11fc0:	andeq	r5, r1, r8, lsr #17
   11fc4:	ldr	r3, [pc, #20]	; 11fe0 <_start@@Base+0x58>
   11fc8:	ldr	r2, [pc, #20]	; 11fe4 <_start@@Base+0x5c>
   11fcc:	add	r3, pc, r3
   11fd0:	ldr	r2, [r3, r2]
   11fd4:	cmp	r2, #0
   11fd8:	bxeq	lr
   11fdc:	b	11f34 <__gmon_start__@plt>
   11fe0:	andeq	r4, r1, ip, lsr #32
   11fe4:	andeq	r0, r0, r4, asr #32
   11fe8:	ldr	r0, [pc, #24]	; 12008 <_start@@Base+0x80>
   11fec:	ldr	r3, [pc, #24]	; 1200c <_start@@Base+0x84>
   11ff0:	cmp	r3, r0
   11ff4:	bxeq	lr
   11ff8:	ldr	r3, [pc, #16]	; 12010 <_start@@Base+0x88>
   11ffc:	cmp	r3, #0
   12000:	bxeq	lr
   12004:	bx	r3
   12008:	andeq	r6, r2, r0, asr r0
   1200c:	andeq	r6, r2, r0, asr r0
   12010:	andeq	r0, r0, r0
   12014:	ldr	r0, [pc, #36]	; 12040 <_start@@Base+0xb8>
   12018:	ldr	r1, [pc, #36]	; 12044 <_start@@Base+0xbc>
   1201c:	sub	r1, r1, r0
   12020:	asr	r1, r1, #2
   12024:	add	r1, r1, r1, lsr #31
   12028:	asrs	r1, r1, #1
   1202c:	bxeq	lr
   12030:	ldr	r3, [pc, #16]	; 12048 <_start@@Base+0xc0>
   12034:	cmp	r3, #0
   12038:	bxeq	lr
   1203c:	bx	r3
   12040:	andeq	r6, r2, r0, asr r0
   12044:	andeq	r6, r2, r0, asr r0
   12048:	andeq	r0, r0, r0
   1204c:	push	{r4, lr}
   12050:	ldr	r4, [pc, #24]	; 12070 <_start@@Base+0xe8>
   12054:	ldrb	r3, [r4]
   12058:	cmp	r3, #0
   1205c:	popne	{r4, pc}
   12060:	bl	11fe8 <_start@@Base+0x60>
   12064:	mov	r3, #1
   12068:	strb	r3, [r4]
   1206c:	pop	{r4, pc}
   12070:	andeq	r6, r2, r0, asr r0
   12074:	b	12014 <_start@@Base+0x8c>

00012078 <main@@Base>:
   12078:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1207c:	add	fp, sp, #24
   12080:	sub	sp, sp, #16
   12084:	mov	r8, #0
   12088:	str	r8, [sp, #12]
   1208c:	bl	124d0 <table_new@@Base>
   12090:	mov	r4, r0
   12094:	add	r0, sp, #8
   12098:	bl	11ef8 <time@plt>
   1209c:	bl	11f4c <srand@plt>
   120a0:	movw	r1, #9404	; 0x24bc
   120a4:	add	r2, sp, #12
   120a8:	mov	r0, r4
   120ac:	mvn	r3, #0
   120b0:	movt	r1, #1
   120b4:	bl	12cc0 <table_register_callback@@Base>
   120b8:	add	r6, sp, #6
   120bc:	mov	r0, r4
   120c0:	mov	r2, #0
   120c4:	strh	r8, [sp, #6]
   120c8:	mov	r1, r6
   120cc:	bl	130ac <table_add_column@@Base>
   120d0:	mov	r0, #1
   120d4:	mov	r1, r6
   120d8:	mov	r2, #1
   120dc:	strh	r0, [sp, #6]
   120e0:	mov	r0, r4
   120e4:	bl	130ac <table_add_column@@Base>
   120e8:	mov	r0, #2
   120ec:	mov	r1, r6
   120f0:	mov	r2, #2
   120f4:	strh	r0, [sp, #6]
   120f8:	mov	r0, r4
   120fc:	bl	130ac <table_add_column@@Base>
   12100:	mov	r0, #3
   12104:	mov	r1, r6
   12108:	mov	r2, #3
   1210c:	strh	r0, [sp, #6]
   12110:	mov	r0, r4
   12114:	bl	130ac <table_add_column@@Base>
   12118:	mov	r0, #4
   1211c:	mov	r1, r6
   12120:	mov	r2, #4
   12124:	strh	r0, [sp, #6]
   12128:	mov	r0, r4
   1212c:	bl	130ac <table_add_column@@Base>
   12130:	mov	r0, #5
   12134:	mov	r1, r6
   12138:	mov	r2, #5
   1213c:	strh	r0, [sp, #6]
   12140:	mov	r0, r4
   12144:	bl	130ac <table_add_column@@Base>
   12148:	mov	r0, #6
   1214c:	mov	r1, r6
   12150:	mov	r2, #6
   12154:	strh	r0, [sp, #6]
   12158:	mov	r0, r4
   1215c:	bl	130ac <table_add_column@@Base>
   12160:	mov	r0, #7
   12164:	mov	r1, r6
   12168:	mov	r2, #7
   1216c:	strh	r0, [sp, #6]
   12170:	mov	r0, r4
   12174:	bl	130ac <table_add_column@@Base>
   12178:	mov	r0, #8
   1217c:	mov	r1, r6
   12180:	mov	r2, #8
   12184:	strh	r0, [sp, #6]
   12188:	mov	r0, r4
   1218c:	bl	130ac <table_add_column@@Base>
   12190:	mov	r0, #9
   12194:	mov	r1, r6
   12198:	mov	r2, #9
   1219c:	strh	r0, [sp, #6]
   121a0:	mov	r0, r4
   121a4:	bl	130ac <table_add_column@@Base>
   121a8:	mov	r0, #10
   121ac:	mov	r1, r6
   121b0:	mov	r2, #10
   121b4:	strh	r0, [sp, #6]
   121b8:	mov	r0, r4
   121bc:	bl	130ac <table_add_column@@Base>
   121c0:	mov	r0, #11
   121c4:	mov	r1, r6
   121c8:	mov	r2, #11
   121cc:	strh	r0, [sp, #6]
   121d0:	mov	r0, r4
   121d4:	bl	130ac <table_add_column@@Base>
   121d8:	mov	r0, #12
   121dc:	mov	r1, r6
   121e0:	mov	r2, #12
   121e4:	strh	r0, [sp, #6]
   121e8:	mov	r0, r4
   121ec:	bl	130ac <table_add_column@@Base>
   121f0:	mov	r0, #13
   121f4:	mov	r1, r6
   121f8:	mov	r2, #13
   121fc:	strh	r0, [sp, #6]
   12200:	mov	r0, r4
   12204:	bl	130ac <table_add_column@@Base>
   12208:	mov	r0, #14
   1220c:	mov	r1, r6
   12210:	mov	r2, #14
   12214:	strh	r0, [sp, #6]
   12218:	mov	r0, r4
   1221c:	bl	130ac <table_add_column@@Base>
   12220:	mov	r0, #15
   12224:	mov	r1, r6
   12228:	mov	r2, #15
   1222c:	strh	r0, [sp, #6]
   12230:	mov	r0, r4
   12234:	bl	130ac <table_add_column@@Base>
   12238:	mov	r0, #16
   1223c:	mov	r1, r6
   12240:	mov	r2, #16
   12244:	strh	r0, [sp, #6]
   12248:	mov	r0, r4
   1224c:	bl	130ac <table_add_column@@Base>
   12250:	mov	r0, #17
   12254:	mov	r1, r6
   12258:	mov	r2, #17
   1225c:	strh	r0, [sp, #6]
   12260:	mov	r0, r4
   12264:	bl	130ac <table_add_column@@Base>
   12268:	mov	r0, #18
   1226c:	mov	r1, r6
   12270:	mov	r2, #18
   12274:	strh	r0, [sp, #6]
   12278:	mov	r0, r4
   1227c:	bl	130ac <table_add_column@@Base>
   12280:	mov	r0, #19
   12284:	mov	r1, r6
   12288:	mov	r2, #19
   1228c:	strh	r0, [sp, #6]
   12290:	mov	r0, r4
   12294:	bl	130ac <table_add_column@@Base>
   12298:	mov	r0, #20
   1229c:	mov	r1, r6
   122a0:	mov	r2, #20
   122a4:	strh	r0, [sp, #6]
   122a8:	mov	r0, r4
   122ac:	bl	130ac <table_add_column@@Base>
   122b0:	mov	r0, #21
   122b4:	mov	r1, r6
   122b8:	mov	r2, #21
   122bc:	strh	r0, [sp, #6]
   122c0:	mov	r0, r4
   122c4:	bl	130ac <table_add_column@@Base>
   122c8:	mov	r0, #22
   122cc:	mov	r1, r6
   122d0:	mov	r2, #22
   122d4:	strh	r0, [sp, #6]
   122d8:	mov	r0, r4
   122dc:	bl	130ac <table_add_column@@Base>
   122e0:	mov	r0, #23
   122e4:	mov	r1, r6
   122e8:	mov	r2, #23
   122ec:	strh	r0, [sp, #6]
   122f0:	mov	r0, r4
   122f4:	bl	130ac <table_add_column@@Base>
   122f8:	mov	r0, r4
   122fc:	bl	13018 <table_get_column_length@@Base>
   12300:	cmp	r0, #0
   12304:	ble	12398 <main@@Base+0x320>
   12308:	mov	r6, r0
   1230c:	mov	r0, #64	; 0x40
   12310:	bl	11f1c <malloc@plt>
   12314:	mov	r7, r0
   12318:	mov	r5, #0
   1231c:	bl	11f70 <rand@plt>
   12320:	asr	r1, r0, #31
   12324:	add	r1, r0, r1, lsr #25
   12328:	and	r1, r1, #128	; 0x80
   1232c:	sub	r0, r0, r1
   12330:	strb	r0, [r7, -r5]
   12334:	sub	r5, r5, #1
   12338:	cmn	r5, #63	; 0x3f
   1233c:	bne	1231c <main@@Base+0x2a4>
   12340:	mov	r5, #0
   12344:	mov	r0, r4
   12348:	strb	r5, [r7, #63]	; 0x3f
   1234c:	bl	13d78 <table_add_row@@Base>
   12350:	mov	r0, r4
   12354:	mov	r1, r5
   12358:	bl	13098 <table_get_column_data_type@@Base>
   1235c:	str	r0, [sp]
   12360:	mov	r0, r4
   12364:	mov	r1, r8
   12368:	mov	r2, r5
   1236c:	mov	r3, r7
   12370:	bl	13f38 <table_set@@Base>
   12374:	add	r5, r5, #1
   12378:	cmp	r6, r5
   1237c:	bne	12350 <main@@Base+0x2d8>
   12380:	mov	r0, r7
   12384:	bl	11eec <free@plt>
   12388:	add	r8, r8, #1
   1238c:	cmp	r8, #500	; 0x1f4
   12390:	bne	1230c <main@@Base+0x294>
   12394:	b	124a8 <main@@Base+0x430>
   12398:	mov	r5, #500	; 0x1f4
   1239c:	bl	11f70 <rand@plt>
   123a0:	bl	11f70 <rand@plt>
   123a4:	bl	11f70 <rand@plt>
   123a8:	bl	11f70 <rand@plt>
   123ac:	bl	11f70 <rand@plt>
   123b0:	bl	11f70 <rand@plt>
   123b4:	bl	11f70 <rand@plt>
   123b8:	bl	11f70 <rand@plt>
   123bc:	bl	11f70 <rand@plt>
   123c0:	bl	11f70 <rand@plt>
   123c4:	bl	11f70 <rand@plt>
   123c8:	bl	11f70 <rand@plt>
   123cc:	bl	11f70 <rand@plt>
   123d0:	bl	11f70 <rand@plt>
   123d4:	bl	11f70 <rand@plt>
   123d8:	bl	11f70 <rand@plt>
   123dc:	bl	11f70 <rand@plt>
   123e0:	bl	11f70 <rand@plt>
   123e4:	bl	11f70 <rand@plt>
   123e8:	bl	11f70 <rand@plt>
   123ec:	bl	11f70 <rand@plt>
   123f0:	bl	11f70 <rand@plt>
   123f4:	bl	11f70 <rand@plt>
   123f8:	bl	11f70 <rand@plt>
   123fc:	bl	11f70 <rand@plt>
   12400:	bl	11f70 <rand@plt>
   12404:	bl	11f70 <rand@plt>
   12408:	bl	11f70 <rand@plt>
   1240c:	bl	11f70 <rand@plt>
   12410:	bl	11f70 <rand@plt>
   12414:	bl	11f70 <rand@plt>
   12418:	bl	11f70 <rand@plt>
   1241c:	bl	11f70 <rand@plt>
   12420:	bl	11f70 <rand@plt>
   12424:	bl	11f70 <rand@plt>
   12428:	bl	11f70 <rand@plt>
   1242c:	bl	11f70 <rand@plt>
   12430:	bl	11f70 <rand@plt>
   12434:	bl	11f70 <rand@plt>
   12438:	bl	11f70 <rand@plt>
   1243c:	bl	11f70 <rand@plt>
   12440:	bl	11f70 <rand@plt>
   12444:	bl	11f70 <rand@plt>
   12448:	bl	11f70 <rand@plt>
   1244c:	bl	11f70 <rand@plt>
   12450:	bl	11f70 <rand@plt>
   12454:	bl	11f70 <rand@plt>
   12458:	bl	11f70 <rand@plt>
   1245c:	bl	11f70 <rand@plt>
   12460:	bl	11f70 <rand@plt>
   12464:	bl	11f70 <rand@plt>
   12468:	bl	11f70 <rand@plt>
   1246c:	bl	11f70 <rand@plt>
   12470:	bl	11f70 <rand@plt>
   12474:	bl	11f70 <rand@plt>
   12478:	bl	11f70 <rand@plt>
   1247c:	bl	11f70 <rand@plt>
   12480:	bl	11f70 <rand@plt>
   12484:	bl	11f70 <rand@plt>
   12488:	bl	11f70 <rand@plt>
   1248c:	bl	11f70 <rand@plt>
   12490:	bl	11f70 <rand@plt>
   12494:	bl	11f70 <rand@plt>
   12498:	mov	r0, r4
   1249c:	bl	13d78 <table_add_row@@Base>
   124a0:	subs	r5, r5, #1
   124a4:	bne	1239c <main@@Base+0x324>
   124a8:	mov	r0, r4
   124ac:	bl	12560 <table_delete@@Base>
   124b0:	mov	r0, #0
   124b4:	sub	sp, fp, #24
   124b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   124bc:	ldr	r0, [sp]
   124c0:	ldr	r1, [r0]
   124c4:	orr	r1, r1, r3
   124c8:	str	r1, [r0]
   124cc:	bx	lr

000124d0 <table_new@@Base>:
   124d0:	push	{fp, lr}
   124d4:	mov	fp, sp
   124d8:	mov	r0, #56	; 0x38
   124dc:	bl	11f1c <malloc@plt>
   124e0:	mov	r1, #0
   124e4:	mov	r2, #10
   124e8:	mov	r3, #20
   124ec:	vmov.i32	q8, #0	; 0x00000000
   124f0:	str	r1, [r0]
   124f4:	stmib	r0, {r1, r2}
   124f8:	str	r1, [r0, #12]
   124fc:	str	r1, [r0, #16]
   12500:	str	r1, [r0, #20]
   12504:	str	r3, [r0, #24]
   12508:	str	r1, [r0, #28]
   1250c:	str	r2, [r0, #48]	; 0x30
   12510:	str	r1, [r0, #52]	; 0x34
   12514:	add	r1, r0, #32
   12518:	vst1.32	{d16-d17}, [r1]
   1251c:	pop	{fp, pc}

00012520 <table_init@@Base>:
   12520:	mov	r1, #0
   12524:	mov	r2, #10
   12528:	mov	r3, #20
   1252c:	vmov.i32	q8, #0	; 0x00000000
   12530:	str	r1, [r0]
   12534:	stmib	r0, {r1, r2}
   12538:	str	r1, [r0, #12]
   1253c:	str	r1, [r0, #16]
   12540:	str	r1, [r0, #20]
   12544:	str	r3, [r0, #24]
   12548:	str	r1, [r0, #28]
   1254c:	str	r2, [r0, #48]	; 0x30
   12550:	str	r1, [r0, #52]	; 0x34
   12554:	add	r0, r0, #32
   12558:	vst1.32	{d16-d17}, [r0]
   1255c:	bx	lr

00012560 <table_delete@@Base>:
   12560:	push	{r4, sl, fp, lr}
   12564:	add	fp, sp, #8
   12568:	mov	r4, r0
   1256c:	bl	1257c <table_destroy@@Base>
   12570:	mov	r0, r4
   12574:	pop	{r4, sl, fp, lr}
   12578:	b	11eec <free@plt>

0001257c <table_destroy@@Base>:
   1257c:	cmp	r0, #0
   12580:	bxeq	lr
   12584:	push	{r4, r5, r6, sl, fp, lr}
   12588:	add	fp, sp, #16
   1258c:	mvn	r1, #0
   12590:	mvn	r2, #0
   12594:	mov	r3, #64	; 0x40
   12598:	mov	r4, r0
   1259c:	bl	12f24 <table_notify@@Base>
   125a0:	mov	r0, r4
   125a4:	bl	13d70 <table_get_row_length@@Base>
   125a8:	cmp	r0, #1
   125ac:	blt	125d0 <table_destroy@@Base+0x54>
   125b0:	mov	r5, r0
   125b4:	mov	r6, #0
   125b8:	mov	r0, r4
   125bc:	mov	r1, r6
   125c0:	bl	13d18 <table_row_destroy@@Base>
   125c4:	add	r6, r6, #1
   125c8:	cmp	r5, r6
   125cc:	bne	125b8 <table_destroy@@Base+0x3c>
   125d0:	ldr	r0, [r4, #16]
   125d4:	cmp	r0, #0
   125d8:	beq	125e0 <table_destroy@@Base+0x64>
   125dc:	bl	11eec <free@plt>
   125e0:	mov	r0, r4
   125e4:	bl	13018 <table_get_column_length@@Base>
   125e8:	cmp	r0, #1
   125ec:	blt	12610 <table_destroy@@Base+0x94>
   125f0:	mov	r5, r0
   125f4:	mov	r6, #0
   125f8:	mov	r0, r4
   125fc:	mov	r1, r6
   12600:	bl	13000 <table_column_destroy@@Base>
   12604:	add	r6, r6, #1
   12608:	cmp	r5, r6
   1260c:	bne	125f8 <table_destroy@@Base+0x7c>
   12610:	ldr	r0, [r4]
   12614:	cmp	r0, #0
   12618:	beq	12620 <table_destroy@@Base+0xa4>
   1261c:	bl	11eec <free@plt>
   12620:	ldr	r0, [r4, #36]	; 0x24
   12624:	cmp	r0, #0
   12628:	beq	12630 <table_destroy@@Base+0xb4>
   1262c:	bl	11eec <free@plt>
   12630:	ldr	r0, [r4, #40]	; 0x28
   12634:	cmp	r0, #0
   12638:	beq	12640 <table_destroy@@Base+0xc4>
   1263c:	bl	11eec <free@plt>
   12640:	ldr	r0, [r4, #44]	; 0x2c
   12644:	cmp	r0, #0
   12648:	pop	{r4, r5, r6, sl, fp, lr}
   1264c:	beq	12654 <table_destroy@@Base+0xd8>
   12650:	b	11eec <free@plt>
   12654:	bx	lr

00012658 <table_dupe@@Base>:
   12658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1265c:	add	fp, sp, #28
   12660:	sub	sp, sp, #12
   12664:	mov	r4, r0
   12668:	bl	13d70 <table_get_row_length@@Base>
   1266c:	mov	r8, r0
   12670:	mov	r0, r4
   12674:	bl	13018 <table_get_column_length@@Base>
   12678:	mov	r6, r0
   1267c:	mov	r0, #56	; 0x38
   12680:	bl	11f1c <malloc@plt>
   12684:	mov	sl, r0
   12688:	mov	r5, #0
   1268c:	mov	r0, #10
   12690:	mov	r1, #20
   12694:	cmp	r6, #1
   12698:	vmov.i32	q8, #0	; 0x00000000
   1269c:	str	r5, [sl]
   126a0:	str	r5, [sl, #4]
   126a4:	str	r0, [sl, #8]
   126a8:	str	r5, [sl, #12]
   126ac:	str	r5, [sl, #16]
   126b0:	str	r5, [sl, #20]
   126b4:	str	r1, [sl, #24]
   126b8:	str	r5, [sl, #28]
   126bc:	str	r0, [sl, #48]	; 0x30
   126c0:	add	r0, sl, #32
   126c4:	str	r5, [sl, #52]	; 0x34
   126c8:	vst1.32	{d16-d17}, [r0]
   126cc:	blt	12708 <table_dupe@@Base+0xb0>
   126d0:	mov	r0, r4
   126d4:	mov	r1, r5
   126d8:	bl	13088 <table_get_column_name@@Base>
   126dc:	mov	r7, r0
   126e0:	mov	r0, r4
   126e4:	mov	r1, r5
   126e8:	bl	13098 <table_get_column_data_type@@Base>
   126ec:	mov	r2, r0
   126f0:	mov	r0, sl
   126f4:	mov	r1, r7
   126f8:	bl	130ac <table_add_column@@Base>
   126fc:	add	r5, r5, #1
   12700:	cmp	r6, r5
   12704:	bne	126d0 <table_dupe@@Base+0x78>
   12708:	cmp	r8, #1
   1270c:	blt	12c88 <table_dupe@@Base+0x630>
   12710:	mov	r5, #0
   12714:	add	r9, sp, #8
   12718:	mov	r0, sl
   1271c:	bl	13d78 <table_add_row@@Base>
   12720:	cmp	r6, #1
   12724:	blt	12c7c <table_dupe@@Base+0x624>
   12728:	mov	r7, #0
   1272c:	mov	r0, r4
   12730:	mov	r1, r7
   12734:	bl	13098 <table_get_column_data_type@@Base>
   12738:	cmp	r0, #23
   1273c:	bhi	127cc <table_dupe@@Base+0x174>
   12740:	add	r1, pc, #0
   12744:	ldr	pc, [r1, r0, lsl #2]
   12748:	andeq	r2, r1, r8, lsr #15
   1274c:	ldrdeq	r2, [r1], -ip
   12750:	andeq	r2, r1, r0, lsl r8
   12754:	andeq	r2, r1, r4, asr #16
   12758:	andeq	r2, r1, r8, ror r8
   1275c:	andeq	r2, r1, ip, lsr #17
   12760:	andeq	r2, r1, r0, ror #17
   12764:	andeq	r2, r1, r4, lsl r9
   12768:	andeq	r2, r1, r8, asr #18
   1276c:	andeq	r2, r1, ip, ror r9
   12770:			; <UNDEFINED> instruction: 0x000129b0
   12774:	andeq	r2, r1, r4, ror #19
   12778:	andeq	r2, r1, r8, lsl sl
   1277c:	andeq	r2, r1, ip, asr #20
   12780:	andeq	r2, r1, r0, lsl #21
   12784:			; <UNDEFINED> instruction: 0x00012ab4
   12788:	andeq	r2, r1, r8, ror #21
   1278c:	andeq	r2, r1, r8, lsl fp
   12790:	andeq	r2, r1, r8, asr #22
   12794:	andeq	r2, r1, r8, ror fp
   12798:	andeq	r2, r1, ip, lsr #23
   1279c:	andeq	r2, r1, r0, ror #23
   127a0:	andeq	r2, r1, r4, lsl ip
   127a4:	andeq	r2, r1, r8, asr #24
   127a8:	mov	r0, r4
   127ac:	mov	r1, r5
   127b0:	mov	r2, r7
   127b4:	bl	13ac8 <table_get_int@@Base>
   127b8:	mov	r3, r0
   127bc:	mov	r0, sl
   127c0:	mov	r1, r5
   127c4:	mov	r2, r7
   127c8:	bl	142d0 <table_set_int@@Base>
   127cc:	add	r7, r7, #1
   127d0:	cmp	r6, r7
   127d4:	bne	1272c <table_dupe@@Base+0xd4>
   127d8:	b	12c7c <table_dupe@@Base+0x624>
   127dc:	mov	r0, r4
   127e0:	mov	r1, r5
   127e4:	mov	r2, r7
   127e8:	bl	13ae0 <table_get_uint@@Base>
   127ec:	mov	r3, r0
   127f0:	mov	r0, sl
   127f4:	mov	r1, r5
   127f8:	mov	r2, r7
   127fc:	bl	14350 <table_set_uint@@Base>
   12800:	add	r7, r7, #1
   12804:	cmp	r6, r7
   12808:	bne	1272c <table_dupe@@Base+0xd4>
   1280c:	b	12c7c <table_dupe@@Base+0x624>
   12810:	mov	r0, r4
   12814:	mov	r1, r5
   12818:	mov	r2, r7
   1281c:	bl	13af8 <table_get_int8@@Base>
   12820:	mov	r3, r0
   12824:	mov	r0, sl
   12828:	mov	r1, r5
   1282c:	mov	r2, r7
   12830:	bl	143d0 <table_set_int8@@Base>
   12834:	add	r7, r7, #1
   12838:	cmp	r6, r7
   1283c:	bne	1272c <table_dupe@@Base+0xd4>
   12840:	b	12c7c <table_dupe@@Base+0x624>
   12844:	mov	r0, r4
   12848:	mov	r1, r5
   1284c:	mov	r2, r7
   12850:	bl	13b10 <table_get_uint8@@Base>
   12854:	mov	r3, r0
   12858:	mov	r0, sl
   1285c:	mov	r1, r5
   12860:	mov	r2, r7
   12864:	bl	14450 <table_set_uint8@@Base>
   12868:	add	r7, r7, #1
   1286c:	cmp	r6, r7
   12870:	bne	1272c <table_dupe@@Base+0xd4>
   12874:	b	12c7c <table_dupe@@Base+0x624>
   12878:	mov	r0, r4
   1287c:	mov	r1, r5
   12880:	mov	r2, r7
   12884:	bl	13b28 <table_get_int16@@Base>
   12888:	mov	r3, r0
   1288c:	mov	r0, sl
   12890:	mov	r1, r5
   12894:	mov	r2, r7
   12898:	bl	144d0 <table_set_int16@@Base>
   1289c:	add	r7, r7, #1
   128a0:	cmp	r6, r7
   128a4:	bne	1272c <table_dupe@@Base+0xd4>
   128a8:	b	12c7c <table_dupe@@Base+0x624>
   128ac:	mov	r0, r4
   128b0:	mov	r1, r5
   128b4:	mov	r2, r7
   128b8:	bl	13b40 <table_get_uint16@@Base>
   128bc:	mov	r3, r0
   128c0:	mov	r0, sl
   128c4:	mov	r1, r5
   128c8:	mov	r2, r7
   128cc:	bl	14550 <table_set_uint16@@Base>
   128d0:	add	r7, r7, #1
   128d4:	cmp	r6, r7
   128d8:	bne	1272c <table_dupe@@Base+0xd4>
   128dc:	b	12c7c <table_dupe@@Base+0x624>
   128e0:	mov	r0, r4
   128e4:	mov	r1, r5
   128e8:	mov	r2, r7
   128ec:	bl	13b58 <table_get_int32@@Base>
   128f0:	mov	r3, r0
   128f4:	mov	r0, sl
   128f8:	mov	r1, r5
   128fc:	mov	r2, r7
   12900:	bl	145d0 <table_set_int32@@Base>
   12904:	add	r7, r7, #1
   12908:	cmp	r6, r7
   1290c:	bne	1272c <table_dupe@@Base+0xd4>
   12910:	b	12c7c <table_dupe@@Base+0x624>
   12914:	mov	r0, r4
   12918:	mov	r1, r5
   1291c:	mov	r2, r7
   12920:	bl	13b70 <table_get_uint32@@Base>
   12924:	mov	r3, r0
   12928:	mov	r0, sl
   1292c:	mov	r1, r5
   12930:	mov	r2, r7
   12934:	bl	14650 <table_set_uint32@@Base>
   12938:	add	r7, r7, #1
   1293c:	cmp	r6, r7
   12940:	bne	1272c <table_dupe@@Base+0xd4>
   12944:	b	12c7c <table_dupe@@Base+0x624>
   12948:	mov	r0, r4
   1294c:	mov	r1, r5
   12950:	mov	r2, r7
   12954:	bl	13b88 <table_get_int64@@Base>
   12958:	stm	sp, {r0, r1}
   1295c:	mov	r0, sl
   12960:	mov	r1, r5
   12964:	mov	r2, r7
   12968:	bl	146d0 <table_set_int64@@Base>
   1296c:	add	r7, r7, #1
   12970:	cmp	r6, r7
   12974:	bne	1272c <table_dupe@@Base+0xd4>
   12978:	b	12c7c <table_dupe@@Base+0x624>
   1297c:	mov	r0, r4
   12980:	mov	r1, r5
   12984:	mov	r2, r7
   12988:	bl	13ba0 <table_get_uint64@@Base>
   1298c:	stm	sp, {r0, r1}
   12990:	mov	r0, sl
   12994:	mov	r1, r5
   12998:	mov	r2, r7
   1299c:	bl	14758 <table_set_uint64@@Base>
   129a0:	add	r7, r7, #1
   129a4:	cmp	r6, r7
   129a8:	bne	1272c <table_dupe@@Base+0xd4>
   129ac:	b	12c7c <table_dupe@@Base+0x624>
   129b0:	mov	r0, r4
   129b4:	mov	r1, r5
   129b8:	mov	r2, r7
   129bc:	bl	13bb8 <table_get_short@@Base>
   129c0:	mov	r3, r0
   129c4:	mov	r0, sl
   129c8:	mov	r1, r5
   129cc:	mov	r2, r7
   129d0:	bl	147e0 <table_set_short@@Base>
   129d4:	add	r7, r7, #1
   129d8:	cmp	r6, r7
   129dc:	bne	1272c <table_dupe@@Base+0xd4>
   129e0:	b	12c7c <table_dupe@@Base+0x624>
   129e4:	mov	r0, r4
   129e8:	mov	r1, r5
   129ec:	mov	r2, r7
   129f0:	bl	13bd0 <table_get_ushort@@Base>
   129f4:	mov	r3, r0
   129f8:	mov	r0, sl
   129fc:	mov	r1, r5
   12a00:	mov	r2, r7
   12a04:	bl	14860 <table_set_ushort@@Base>
   12a08:	add	r7, r7, #1
   12a0c:	cmp	r6, r7
   12a10:	bne	1272c <table_dupe@@Base+0xd4>
   12a14:	b	12c7c <table_dupe@@Base+0x624>
   12a18:	mov	r0, r4
   12a1c:	mov	r1, r5
   12a20:	mov	r2, r7
   12a24:	bl	13be8 <table_get_long@@Base>
   12a28:	mov	r3, r0
   12a2c:	mov	r0, sl
   12a30:	mov	r1, r5
   12a34:	mov	r2, r7
   12a38:	bl	148e0 <table_set_long@@Base>
   12a3c:	add	r7, r7, #1
   12a40:	cmp	r6, r7
   12a44:	bne	1272c <table_dupe@@Base+0xd4>
   12a48:	b	12c7c <table_dupe@@Base+0x624>
   12a4c:	mov	r0, r4
   12a50:	mov	r1, r5
   12a54:	mov	r2, r7
   12a58:	bl	13c00 <table_get_ulong@@Base>
   12a5c:	mov	r3, r0
   12a60:	mov	r0, sl
   12a64:	mov	r1, r5
   12a68:	mov	r2, r7
   12a6c:	bl	14960 <table_set_ulong@@Base>
   12a70:	add	r7, r7, #1
   12a74:	cmp	r6, r7
   12a78:	bne	1272c <table_dupe@@Base+0xd4>
   12a7c:	b	12c7c <table_dupe@@Base+0x624>
   12a80:	mov	r0, r4
   12a84:	mov	r1, r5
   12a88:	mov	r2, r7
   12a8c:	bl	13c18 <table_get_llong@@Base>
   12a90:	stm	sp, {r0, r1}
   12a94:	mov	r0, sl
   12a98:	mov	r1, r5
   12a9c:	mov	r2, r7
   12aa0:	bl	149e0 <table_set_llong@@Base>
   12aa4:	add	r7, r7, #1
   12aa8:	cmp	r6, r7
   12aac:	bne	1272c <table_dupe@@Base+0xd4>
   12ab0:	b	12c7c <table_dupe@@Base+0x624>
   12ab4:	mov	r0, r4
   12ab8:	mov	r1, r5
   12abc:	mov	r2, r7
   12ac0:	bl	13c30 <table_get_ullong@@Base>
   12ac4:	stm	sp, {r0, r1}
   12ac8:	mov	r0, sl
   12acc:	mov	r1, r5
   12ad0:	mov	r2, r7
   12ad4:	bl	14a68 <table_set_ullong@@Base>
   12ad8:	add	r7, r7, #1
   12adc:	cmp	r6, r7
   12ae0:	bne	1272c <table_dupe@@Base+0xd4>
   12ae4:	b	12c7c <table_dupe@@Base+0x624>
   12ae8:	mov	r0, r4
   12aec:	mov	r1, r5
   12af0:	mov	r2, r7
   12af4:	bl	13c48 <table_get_float@@Base>
   12af8:	mov	r0, sl
   12afc:	mov	r1, r5
   12b00:	mov	r2, r7
   12b04:	bl	14af0 <table_set_float@@Base>
   12b08:	add	r7, r7, #1
   12b0c:	cmp	r6, r7
   12b10:	bne	1272c <table_dupe@@Base+0xd4>
   12b14:	b	12c7c <table_dupe@@Base+0x624>
   12b18:	mov	r0, r4
   12b1c:	mov	r1, r5
   12b20:	mov	r2, r7
   12b24:	bl	13c60 <table_get_double@@Base>
   12b28:	mov	r0, sl
   12b2c:	mov	r1, r5
   12b30:	mov	r2, r7
   12b34:	bl	14b7c <table_set_double@@Base>
   12b38:	add	r7, r7, #1
   12b3c:	cmp	r6, r7
   12b40:	bne	1272c <table_dupe@@Base+0xd4>
   12b44:	b	12c7c <table_dupe@@Base+0x624>
   12b48:	mov	r0, r4
   12b4c:	mov	r1, r5
   12b50:	mov	r2, r7
   12b54:	bl	13c78 <table_get_ldouble@@Base>
   12b58:	mov	r0, sl
   12b5c:	mov	r1, r5
   12b60:	mov	r2, r7
   12b64:	bl	14c04 <table_set_ldouble@@Base>
   12b68:	add	r7, r7, #1
   12b6c:	cmp	r6, r7
   12b70:	bne	1272c <table_dupe@@Base+0xd4>
   12b74:	b	12c7c <table_dupe@@Base+0x624>
   12b78:	mov	r0, r4
   12b7c:	mov	r1, r5
   12b80:	mov	r2, r7
   12b84:	bl	13c90 <table_get_char@@Base>
   12b88:	mov	r3, r0
   12b8c:	mov	r0, sl
   12b90:	mov	r1, r5
   12b94:	mov	r2, r7
   12b98:	bl	14d14 <table_set_char@@Base>
   12b9c:	add	r7, r7, #1
   12ba0:	cmp	r6, r7
   12ba4:	bne	1272c <table_dupe@@Base+0xd4>
   12ba8:	b	12c7c <table_dupe@@Base+0x624>
   12bac:	mov	r0, r4
   12bb0:	mov	r1, r5
   12bb4:	mov	r2, r7
   12bb8:	bl	13ca8 <table_get_uchar@@Base>
   12bbc:	mov	r3, r0
   12bc0:	mov	r0, sl
   12bc4:	mov	r1, r5
   12bc8:	mov	r2, r7
   12bcc:	bl	14d94 <table_set_uchar@@Base>
   12bd0:	add	r7, r7, #1
   12bd4:	cmp	r6, r7
   12bd8:	bne	1272c <table_dupe@@Base+0xd4>
   12bdc:	b	12c7c <table_dupe@@Base+0x624>
   12be0:	mov	r0, r4
   12be4:	mov	r1, r5
   12be8:	mov	r2, r7
   12bec:	bl	13cc0 <table_get_string@@Base>
   12bf0:	mov	r3, r0
   12bf4:	mov	r0, sl
   12bf8:	mov	r1, r5
   12bfc:	mov	r2, r7
   12c00:	bl	14c8c <table_set_string@@Base>
   12c04:	add	r7, r7, #1
   12c08:	cmp	r6, r7
   12c0c:	bne	1272c <table_dupe@@Base+0xd4>
   12c10:	b	12c7c <table_dupe@@Base+0x624>
   12c14:	mov	r0, r4
   12c18:	mov	r1, r5
   12c1c:	mov	r2, r7
   12c20:	bl	13ab0 <table_get_bool@@Base>
   12c24:	mov	r3, r0
   12c28:	mov	r0, sl
   12c2c:	mov	r1, r5
   12c30:	mov	r2, r7
   12c34:	bl	14250 <table_set_bool@@Base>
   12c38:	add	r7, r7, #1
   12c3c:	cmp	r6, r7
   12c40:	bne	1272c <table_dupe@@Base+0xd4>
   12c44:	b	12c7c <table_dupe@@Base+0x624>
   12c48:	mov	r0, r4
   12c4c:	mov	r1, r5
   12c50:	mov	r2, r7
   12c54:	bl	13cd4 <table_get_ptr@@Base>
   12c58:	str	r0, [sp, #8]
   12c5c:	mov	r0, sl
   12c60:	mov	r1, r5
   12c64:	mov	r2, r7
   12c68:	mov	r3, r9
   12c6c:	bl	14e14 <table_set_ptr@@Base>
   12c70:	add	r7, r7, #1
   12c74:	cmp	r6, r7
   12c78:	bne	1272c <table_dupe@@Base+0xd4>
   12c7c:	add	r5, r5, #1
   12c80:	cmp	r5, r8
   12c84:	bne	12718 <table_dupe@@Base+0xc0>
   12c88:	mov	r0, sl
   12c8c:	sub	sp, fp, #28
   12c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012c94 <table_get_major_version@@Base>:
   12c94:	mov	r0, #0
   12c98:	bx	lr

00012c9c <table_get_minor_version@@Base>:
   12c9c:	mov	r0, #0
   12ca0:	bx	lr

00012ca4 <table_get_patch_version@@Base>:
   12ca4:	mov	r0, #0
   12ca8:	bx	lr

00012cac <table_get_version@@Base>:
   12cac:	movw	r0, #22976	; 0x59c0
   12cb0:	movt	r0, #1
   12cb4:	bx	lr

00012cb8 <table_get_callback_length@@Base>:
   12cb8:	ldr	r0, [r0, #32]
   12cbc:	bx	lr

00012cc0 <table_register_callback@@Base>:
   12cc0:	push	{r4, r5, r6, r7, fp, lr}
   12cc4:	add	fp, sp, #16
   12cc8:	mov	r5, r0
   12ccc:	ldr	r0, [r0, #32]
   12cd0:	mov	r4, r3
   12cd4:	mov	r6, r2
   12cd8:	mov	r7, r1
   12cdc:	cmp	r0, #1
   12ce0:	blt	12d14 <table_register_callback@@Base+0x54>
   12ce4:	ldr	r2, [r5, #36]	; 0x24
   12ce8:	mov	r1, #0
   12cec:	ldr	r3, [r2, r1, lsl #2]
   12cf0:	cmp	r3, r7
   12cf4:	bne	12d08 <table_register_callback@@Base+0x48>
   12cf8:	ldr	r3, [r5, #40]	; 0x28
   12cfc:	ldr	r3, [r3, r1, lsl #2]
   12d00:	cmp	r3, r6
   12d04:	beq	12d98 <table_register_callback@@Base+0xd8>
   12d08:	add	r1, r1, #1
   12d0c:	cmp	r1, r0
   12d10:	blt	12cec <table_register_callback@@Base+0x2c>
   12d14:	ldr	r1, [r5, #48]	; 0x30
   12d18:	udiv	r2, r0, r1
   12d1c:	mls	r2, r2, r1, r0
   12d20:	cmp	r2, #0
   12d24:	bne	12d70 <table_register_callback@@Base+0xb0>
   12d28:	ldr	r2, [r5, #52]	; 0x34
   12d2c:	ldr	r0, [r5, #36]	; 0x24
   12d30:	add	r1, r2, r1
   12d34:	str	r1, [r5, #52]	; 0x34
   12d38:	lsl	r1, r1, #2
   12d3c:	bl	11f04 <realloc@plt>
   12d40:	str	r0, [r5, #36]	; 0x24
   12d44:	ldr	r1, [r5, #52]	; 0x34
   12d48:	ldr	r0, [r5, #40]	; 0x28
   12d4c:	lsl	r1, r1, #2
   12d50:	bl	11f04 <realloc@plt>
   12d54:	str	r0, [r5, #40]	; 0x28
   12d58:	ldr	r1, [r5, #52]	; 0x34
   12d5c:	ldr	r0, [r5, #44]	; 0x2c
   12d60:	lsl	r1, r1, #2
   12d64:	bl	11f04 <realloc@plt>
   12d68:	str	r0, [r5, #44]	; 0x2c
   12d6c:	ldr	r0, [r5, #32]
   12d70:	ldr	r1, [r5, #36]	; 0x24
   12d74:	str	r7, [r1, r0, lsl #2]
   12d78:	ldr	r1, [r5, #40]	; 0x28
   12d7c:	str	r6, [r1, r0, lsl #2]
   12d80:	ldr	r1, [r5, #44]	; 0x2c
   12d84:	str	r4, [r1, r0, lsl #2]
   12d88:	ldr	r0, [r5, #32]
   12d8c:	add	r0, r0, #1
   12d90:	str	r0, [r5, #32]
   12d94:	pop	{r4, r5, r6, r7, fp, pc}
   12d98:	cmp	r1, #0
   12d9c:	ldrne	r0, [r5, #44]	; 0x2c
   12da0:	ldrne	r2, [r0, r1, lsl #2]
   12da4:	orrne	r2, r2, r4
   12da8:	strne	r2, [r0, r1, lsl #2]
   12dac:	popne	{r4, r5, r6, r7, fp, pc}
   12db0:	b	12d14 <table_register_callback@@Base+0x54>

00012db4 <table_unregister_callback@@Base>:
   12db4:	push	{r4, r5, r6, sl, fp, lr}
   12db8:	add	fp, sp, #16
   12dbc:	ldr	r4, [r0, #32]
   12dc0:	cmp	r4, #1
   12dc4:	blt	12dfc <table_unregister_callback@@Base+0x48>
   12dc8:	ldr	r3, [r0, #36]	; 0x24
   12dcc:	mov	r6, r0
   12dd0:	mov	r0, #0
   12dd4:	ldr	r5, [r3, r0, lsl #2]
   12dd8:	cmp	r5, r1
   12ddc:	bne	12df0 <table_unregister_callback@@Base+0x3c>
   12de0:	ldr	r5, [r6, #40]	; 0x28
   12de4:	ldr	r5, [r5, r0, lsl #2]
   12de8:	cmp	r5, r2
   12dec:	beq	12e00 <table_unregister_callback@@Base+0x4c>
   12df0:	add	r0, r0, #1
   12df4:	cmp	r0, r4
   12df8:	blt	12dd4 <table_unregister_callback@@Base+0x20>
   12dfc:	pop	{r4, r5, r6, sl, fp, pc}
   12e00:	sub	r1, r4, #1
   12e04:	cmp	r0, r1
   12e08:	bge	12e98 <table_unregister_callback@@Base+0xe4>
   12e0c:	add	r1, r3, r0, lsl #2
   12e10:	ldr	r1, [r1, #4]
   12e14:	str	r1, [r3, r0, lsl #2]
   12e18:	ldr	r1, [r6, #40]	; 0x28
   12e1c:	add	r2, r1, r0, lsl #2
   12e20:	ldr	r2, [r2, #4]
   12e24:	str	r2, [r1, r0, lsl #2]
   12e28:	ldr	r1, [r6, #44]	; 0x2c
   12e2c:	add	r2, r1, r0, lsl #2
   12e30:	ldr	r2, [r2, #4]
   12e34:	str	r2, [r1, r0, lsl #2]
   12e38:	add	r2, r0, #1
   12e3c:	ldr	r1, [r6, #32]
   12e40:	sub	r1, r1, #1
   12e44:	cmp	r2, r1
   12e48:	bge	12e98 <table_unregister_callback@@Base+0xe4>
   12e4c:	ldr	r1, [r6, #36]	; 0x24
   12e50:	add	r1, r1, r0, lsl #2
   12e54:	ldr	r2, [r1, #8]
   12e58:	str	r2, [r1, #4]
   12e5c:	ldr	r1, [r6, #40]	; 0x28
   12e60:	add	r1, r1, r0, lsl #2
   12e64:	ldr	r2, [r1, #8]
   12e68:	str	r2, [r1, #4]
   12e6c:	ldr	r1, [r6, #44]	; 0x2c
   12e70:	add	r1, r1, r0, lsl #2
   12e74:	ldr	r2, [r1, #8]
   12e78:	str	r2, [r1, #4]
   12e7c:	add	r2, r0, #1
   12e80:	add	r0, r0, #2
   12e84:	ldr	r1, [r6, #32]
   12e88:	sub	r1, r1, #1
   12e8c:	cmp	r0, r1
   12e90:	mov	r0, r2
   12e94:	blt	12e4c <table_unregister_callback@@Base+0x98>
   12e98:	str	r1, [r6, #32]
   12e9c:	ldr	r2, [r6, #48]	; 0x30
   12ea0:	udiv	r0, r1, r2
   12ea4:	mls	r0, r0, r2, r1
   12ea8:	cmp	r0, #0
   12eac:	popne	{r4, r5, r6, sl, fp, pc}
   12eb0:	ldr	r1, [r6, #52]	; 0x34
   12eb4:	ldr	r0, [r6, #36]	; 0x24
   12eb8:	subs	r1, r1, r2
   12ebc:	str	r1, [r6, #52]	; 0x34
   12ec0:	beq	12efc <table_unregister_callback@@Base+0x148>
   12ec4:	lsl	r1, r1, #2
   12ec8:	bl	11f04 <realloc@plt>
   12ecc:	str	r0, [r6, #36]	; 0x24
   12ed0:	ldr	r1, [r6, #52]	; 0x34
   12ed4:	ldr	r0, [r6, #40]	; 0x28
   12ed8:	lsl	r1, r1, #2
   12edc:	bl	11f04 <realloc@plt>
   12ee0:	str	r0, [r6, #40]	; 0x28
   12ee4:	ldr	r1, [r6, #52]	; 0x34
   12ee8:	ldr	r0, [r6, #44]	; 0x2c
   12eec:	lsl	r1, r1, #2
   12ef0:	bl	11f04 <realloc@plt>
   12ef4:	str	r0, [r6, #44]	; 0x2c
   12ef8:	pop	{r4, r5, r6, sl, fp, pc}
   12efc:	bl	11eec <free@plt>
   12f00:	ldr	r0, [r6, #40]	; 0x28
   12f04:	bl	11eec <free@plt>
   12f08:	ldr	r0, [r6, #44]	; 0x2c
   12f0c:	bl	11eec <free@plt>
   12f10:	mov	r0, #0
   12f14:	str	r0, [r6, #36]	; 0x24
   12f18:	str	r0, [r6, #40]	; 0x28
   12f1c:	str	r0, [r6, #44]	; 0x2c
   12f20:	pop	{r4, r5, r6, sl, fp, pc}

00012f24 <table_notify@@Base>:
   12f24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12f28:	add	fp, sp, #24
   12f2c:	sub	sp, sp, #8
   12f30:	mov	r7, r0
   12f34:	ldr	r0, [r0, #32]
   12f38:	cmp	r0, #1
   12f3c:	blt	12f98 <table_notify@@Base+0x74>
   12f40:	mov	r4, r3
   12f44:	mov	r8, r2
   12f48:	mov	r9, r1
   12f4c:	mov	r5, #0
   12f50:	ldr	r1, [r7, #44]	; 0x2c
   12f54:	ldr	r1, [r1, r5, lsl #2]
   12f58:	tst	r1, r4
   12f5c:	beq	12f8c <table_notify@@Base+0x68>
   12f60:	ldr	r0, [r7, #36]	; 0x24
   12f64:	ldr	r1, [r7, #40]	; 0x28
   12f68:	mov	r2, r8
   12f6c:	mov	r3, r4
   12f70:	ldr	r6, [r0, r5, lsl #2]
   12f74:	ldr	r0, [r1, r5, lsl #2]
   12f78:	mov	r1, r9
   12f7c:	str	r0, [sp]
   12f80:	mov	r0, r7
   12f84:	blx	r6
   12f88:	ldr	r0, [r7, #32]
   12f8c:	add	r5, r5, #1
   12f90:	cmp	r5, r0
   12f94:	blt	12f50 <table_notify@@Base+0x2c>
   12f98:	sub	sp, fp, #24
   12f9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012fa0 <table_column_init@@Base>:
   12fa0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12fa4:	add	fp, sp, #24
   12fa8:	ldr	r7, [r0]
   12fac:	mov	r0, r2
   12fb0:	mov	r4, r3
   12fb4:	mov	r5, r2
   12fb8:	mov	r6, r1
   12fbc:	bl	11f40 <strlen@plt>
   12fc0:	add	r0, r0, #1
   12fc4:	bl	11f1c <malloc@plt>
   12fc8:	ldr	r8, [fp, #8]
   12fcc:	add	r6, r6, r6, lsl #1
   12fd0:	cmp	r0, #0
   12fd4:	str	r0, [r7, r6, lsl #2]
   12fd8:	beq	12fe4 <table_column_init@@Base+0x44>
   12fdc:	mov	r1, r5
   12fe0:	bl	11f10 <strcpy@plt>
   12fe4:	add	r0, r7, r6, lsl #2
   12fe8:	stmib	r0, {r4, r8}
   12fec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012ff0 <table_get_col_ptr@@Base>:
   12ff0:	ldr	r0, [r0]
   12ff4:	add	r1, r1, r1, lsl #1
   12ff8:	add	r0, r0, r1, lsl #2
   12ffc:	bx	lr

00013000 <table_column_destroy@@Base>:
   13000:	ldr	r0, [r0]
   13004:	add	r1, r1, r1, lsl #1
   13008:	ldr	r0, [r0, r1, lsl #2]
   1300c:	cmp	r0, #0
   13010:	bxeq	lr
   13014:	b	11eec <free@plt>

00013018 <table_get_column_length@@Base>:
   13018:	ldr	r0, [r0, #4]
   1301c:	bx	lr

00013020 <table_get_column@@Base>:
   13020:	push	{r4, r5, r6, r7, fp, lr}
   13024:	add	fp, sp, #16
   13028:	ldr	r6, [r0, #4]
   1302c:	cmp	r6, #1
   13030:	blt	13074 <table_get_column@@Base+0x54>
   13034:	ldr	r7, [r0]
   13038:	mov	r5, r1
   1303c:	mov	r4, #0
   13040:	ldr	r0, [r7]
   13044:	mov	r1, r5
   13048:	bl	11ee0 <strcmp@plt>
   1304c:	cmp	r0, #0
   13050:	beq	13064 <table_get_column@@Base+0x44>
   13054:	add	r4, r4, #1
   13058:	add	r7, r7, #12
   1305c:	cmp	r4, r6
   13060:	blt	13040 <table_get_column@@Base+0x20>
   13064:	cmp	r4, r6
   13068:	mvneq	r4, #0
   1306c:	mov	r0, r4
   13070:	pop	{r4, r5, r6, r7, fp, pc}
   13074:	mov	r4, #0
   13078:	cmp	r4, r6
   1307c:	mvneq	r4, #0
   13080:	mov	r0, r4
   13084:	pop	{r4, r5, r6, r7, fp, pc}

00013088 <table_get_column_name@@Base>:
   13088:	ldr	r0, [r0]
   1308c:	add	r1, r1, r1, lsl #1
   13090:	ldr	r0, [r0, r1, lsl #2]
   13094:	bx	lr

00013098 <table_get_column_data_type@@Base>:
   13098:	ldr	r0, [r0]
   1309c:	add	r1, r1, r1, lsl #1
   130a0:	add	r0, r0, r1, lsl #2
   130a4:	ldr	r0, [r0, #4]
   130a8:	bx	lr

000130ac <table_add_column@@Base>:
   130ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130b0:	add	fp, sp, #28
   130b4:	sub	sp, sp, #4
   130b8:	mov	r4, r0
   130bc:	mov	r8, r1
   130c0:	ldr	r0, [r0, #4]
   130c4:	mov	r9, r2
   130c8:	ldr	r1, [r4, #8]
   130cc:	udiv	r2, r0, r1
   130d0:	mls	r0, r2, r1, r0
   130d4:	cmp	r0, #0
   130d8:	bne	13144 <table_add_column@@Base+0x98>
   130dc:	ldr	r2, [r4, #12]
   130e0:	ldr	r0, [r4]
   130e4:	add	r1, r2, r1
   130e8:	str	r1, [r4, #12]
   130ec:	add	r1, r1, r1, lsl #1
   130f0:	lsl	r1, r1, #2
   130f4:	bl	11f04 <realloc@plt>
   130f8:	str	r0, [r4]
   130fc:	mov	r0, r4
   13100:	bl	13d70 <table_get_row_length@@Base>
   13104:	cmp	r0, #1
   13108:	blt	13144 <table_add_column@@Base+0x98>
   1310c:	mov	r6, r0
   13110:	mov	r5, #0
   13114:	mov	r0, r4
   13118:	mov	r1, r5
   1311c:	bl	13d0c <table_get_row_ptr@@Base>
   13120:	ldr	r1, [r4, #12]
   13124:	mov	r7, r0
   13128:	ldr	r0, [r0]
   1312c:	lsl	r1, r1, #2
   13130:	bl	11f04 <realloc@plt>
   13134:	add	r5, r5, #1
   13138:	str	r0, [r7]
   1313c:	cmp	r6, r5
   13140:	bne	13114 <table_add_column@@Base+0x68>
   13144:	mov	r0, r4
   13148:	bl	13d70 <table_get_row_length@@Base>
   1314c:	ldr	r6, [r4, #4]
   13150:	mov	r7, r0
   13154:	mov	r0, r9
   13158:	bl	13a84 <table_get_default_compare_function_for_data_type@@Base>
   1315c:	ldr	r5, [r4]
   13160:	mov	sl, r0
   13164:	mov	r0, r8
   13168:	bl	11f40 <strlen@plt>
   1316c:	add	r0, r0, #1
   13170:	bl	11f1c <malloc@plt>
   13174:	mov	r1, r8
   13178:	add	r8, r6, r6, lsl #1
   1317c:	cmp	r0, #0
   13180:	str	r0, [r5, r8, lsl #2]
   13184:	beq	1318c <table_add_column@@Base+0xe0>
   13188:	bl	11f10 <strcpy@plt>
   1318c:	add	r0, r5, r8, lsl #2
   13190:	cmp	r7, #1
   13194:	stmib	r0, {r9, sl}
   13198:	blt	131bc <table_add_column@@Base+0x110>
   1319c:	mov	r5, #0
   131a0:	mov	r0, r4
   131a4:	mov	r1, r5
   131a8:	mov	r2, r6
   131ac:	bl	14e70 <table_cell_init@@Base>
   131b0:	add	r5, r5, #1
   131b4:	cmp	r7, r5
   131b8:	bne	131a0 <table_add_column@@Base+0xf4>
   131bc:	ldr	r2, [r4, #4]
   131c0:	mov	r0, r4
   131c4:	mvn	r1, #0
   131c8:	mov	r3, #8
   131cc:	bl	12f24 <table_notify@@Base>
   131d0:	ldr	r0, [r4, #4]
   131d4:	add	r1, r0, #1
   131d8:	str	r1, [r4, #4]
   131dc:	sub	sp, fp, #28
   131e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000131e4 <table_remove_column@@Base>:
   131e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   131e8:	add	fp, sp, #24
   131ec:	mov	r5, r0
   131f0:	ldr	r0, [r0]
   131f4:	add	r6, r1, r1, lsl #1
   131f8:	mov	r9, r1
   131fc:	ldr	r0, [r0, r6, lsl #2]
   13200:	cmp	r0, #0
   13204:	beq	1320c <table_remove_column@@Base+0x28>
   13208:	bl	11eec <free@plt>
   1320c:	ldr	r0, [r5, #4]
   13210:	sub	r4, r0, #1
   13214:	cmp	r4, r9
   13218:	ble	13248 <table_remove_column@@Base+0x64>
   1321c:	sub	r0, r4, r9
   13220:	lsl	r1, r6, #2
   13224:	ldr	r2, [r5]
   13228:	subs	r0, r0, #1
   1322c:	add	r2, r2, r1
   13230:	add	r1, r1, #12
   13234:	vldr	d16, [r2, #12]
   13238:	ldr	r3, [r2, #20]
   1323c:	str	r3, [r2, #8]
   13240:	vstr	d16, [r2]
   13244:	bne	13224 <table_remove_column@@Base+0x40>
   13248:	mov	r0, r5
   1324c:	bl	13d70 <table_get_row_length@@Base>
   13250:	cmp	r0, #1
   13254:	blt	132dc <table_remove_column@@Base+0xf8>
   13258:	mov	r6, r0
   1325c:	mov	r7, #0
   13260:	cmp	r4, r9
   13264:	ble	132b4 <table_remove_column@@Base+0xd0>
   13268:	mov	r0, r5
   1326c:	mov	r1, r7
   13270:	mov	r2, r9
   13274:	bl	14eac <table_cell_destroy@@Base>
   13278:	mov	r0, r5
   1327c:	mov	r1, r7
   13280:	bl	13d0c <table_get_row_ptr@@Base>
   13284:	mov	r1, r9
   13288:	ldr	r2, [r0]
   1328c:	add	r3, r2, r1, lsl #2
   13290:	ldr	r3, [r3, #4]
   13294:	str	r3, [r2, r1, lsl #2]
   13298:	add	r1, r1, #1
   1329c:	cmp	r4, r1
   132a0:	bne	13288 <table_remove_column@@Base+0xa4>
   132a4:	add	r7, r7, #1
   132a8:	cmp	r7, r6
   132ac:	bne	13268 <table_remove_column@@Base+0x84>
   132b0:	b	132dc <table_remove_column@@Base+0xf8>
   132b4:	mov	r0, r5
   132b8:	mov	r1, r7
   132bc:	mov	r2, r9
   132c0:	bl	14eac <table_cell_destroy@@Base>
   132c4:	mov	r0, r5
   132c8:	mov	r1, r7
   132cc:	bl	13d0c <table_get_row_ptr@@Base>
   132d0:	add	r7, r7, #1
   132d4:	cmp	r6, r7
   132d8:	bne	132b4 <table_remove_column@@Base+0xd0>
   132dc:	ldmib	r5, {r0, r1}
   132e0:	sub	r0, r0, #1
   132e4:	udiv	r2, r0, r1
   132e8:	str	r0, [r5, #4]
   132ec:	mls	r0, r2, r1, r0
   132f0:	cmp	r0, #0
   132f4:	bne	13360 <table_remove_column@@Base+0x17c>
   132f8:	ldr	r2, [r5, #12]
   132fc:	ldr	r0, [r5]
   13300:	sub	r1, r2, r1
   13304:	str	r1, [r5, #12]
   13308:	add	r1, r1, r1, lsl #1
   1330c:	lsl	r1, r1, #2
   13310:	bl	11f04 <realloc@plt>
   13314:	str	r0, [r5]
   13318:	mov	r0, r5
   1331c:	bl	13d70 <table_get_row_length@@Base>
   13320:	cmp	r0, #1
   13324:	blt	13360 <table_remove_column@@Base+0x17c>
   13328:	mov	r8, r0
   1332c:	mov	r7, #0
   13330:	mov	r0, r5
   13334:	mov	r1, r7
   13338:	bl	13d0c <table_get_row_ptr@@Base>
   1333c:	ldr	r1, [r5, #12]
   13340:	mov	r6, r0
   13344:	ldr	r0, [r0]
   13348:	lsl	r1, r1, #2
   1334c:	bl	11f04 <realloc@plt>
   13350:	add	r7, r7, #1
   13354:	str	r0, [r6]
   13358:	cmp	r8, r7
   1335c:	bne	13330 <table_remove_column@@Base+0x14c>
   13360:	mov	r0, r5
   13364:	mvn	r1, #0
   13368:	mov	r2, r9
   1336c:	mov	r3, #16
   13370:	bl	12f24 <table_notify@@Base>
   13374:	mov	r0, #0
   13378:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001337c <table_get_column_compare_function@@Base>:
   1337c:	ldr	r0, [r0]
   13380:	add	r1, r1, r1, lsl #1
   13384:	add	r0, r0, r1, lsl #2
   13388:	ldr	r0, [r0, #8]
   1338c:	bx	lr

00013390 <table_set_column_compare_function@@Base>:
   13390:	ldr	r0, [r0]
   13394:	add	r1, r1, r1, lsl #1
   13398:	add	r0, r0, r1, lsl #2
   1339c:	str	r2, [r0, #8]
   133a0:	bx	lr

000133a4 <table_compare_bool@@Base>:
   133a4:	cmp	r0, #0
   133a8:	beq	133dc <table_compare_bool@@Base+0x38>
   133ac:	cmp	r1, #0
   133b0:	moveq	r1, #1
   133b4:	moveq	r0, r1
   133b8:	bxeq	lr
   133bc:	ldrb	r2, [r1]
   133c0:	ldrb	r0, [r0]
   133c4:	mov	r1, #0
   133c8:	cmp	r0, r2
   133cc:	mvncc	r1, #0
   133d0:	movwhi	r1, #1
   133d4:	mov	r0, r1
   133d8:	bx	lr
   133dc:	cmp	r1, #0
   133e0:	mvnne	r1, #0
   133e4:	mov	r0, r1
   133e8:	bx	lr

000133ec <table_compare_int@@Base>:
   133ec:	cmp	r0, #0
   133f0:	beq	13424 <table_compare_int@@Base+0x38>
   133f4:	cmp	r1, #0
   133f8:	moveq	r1, #1
   133fc:	moveq	r0, r1
   13400:	bxeq	lr
   13404:	ldr	r2, [r1]
   13408:	ldr	r0, [r0]
   1340c:	mov	r1, #0
   13410:	cmp	r0, r2
   13414:	mvnlt	r1, #0
   13418:	movwgt	r1, #1
   1341c:	mov	r0, r1
   13420:	bx	lr
   13424:	cmp	r1, #0
   13428:	mvnne	r1, #0
   1342c:	mov	r0, r1
   13430:	bx	lr

00013434 <table_compare_uint@@Base>:
   13434:	cmp	r0, #0
   13438:	beq	1346c <table_compare_uint@@Base+0x38>
   1343c:	cmp	r1, #0
   13440:	moveq	r1, #1
   13444:	moveq	r0, r1
   13448:	bxeq	lr
   1344c:	ldr	r2, [r1]
   13450:	ldr	r0, [r0]
   13454:	mov	r1, #0
   13458:	cmp	r0, r2
   1345c:	mvncc	r1, #0
   13460:	movwhi	r1, #1
   13464:	mov	r0, r1
   13468:	bx	lr
   1346c:	cmp	r1, #0
   13470:	mvnne	r1, #0
   13474:	mov	r0, r1
   13478:	bx	lr

0001347c <table_compare_int8@@Base>:
   1347c:	cmp	r0, #0
   13480:	beq	134b4 <table_compare_int8@@Base+0x38>
   13484:	cmp	r1, #0
   13488:	moveq	r1, #1
   1348c:	moveq	r0, r1
   13490:	bxeq	lr
   13494:	ldrsb	r2, [r1]
   13498:	ldrsb	r0, [r0]
   1349c:	mov	r1, #0
   134a0:	cmp	r0, r2
   134a4:	mvnlt	r1, #0
   134a8:	movwgt	r1, #1
   134ac:	mov	r0, r1
   134b0:	bx	lr
   134b4:	cmp	r1, #0
   134b8:	mvnne	r1, #0
   134bc:	mov	r0, r1
   134c0:	bx	lr

000134c4 <table_compare_uint8@@Base>:
   134c4:	cmp	r0, #0
   134c8:	beq	134fc <table_compare_uint8@@Base+0x38>
   134cc:	cmp	r1, #0
   134d0:	moveq	r1, #1
   134d4:	moveq	r0, r1
   134d8:	bxeq	lr
   134dc:	ldrb	r2, [r1]
   134e0:	ldrb	r0, [r0]
   134e4:	mov	r1, #0
   134e8:	cmp	r0, r2
   134ec:	mvncc	r1, #0
   134f0:	movwhi	r1, #1
   134f4:	mov	r0, r1
   134f8:	bx	lr
   134fc:	cmp	r1, #0
   13500:	mvnne	r1, #0
   13504:	mov	r0, r1
   13508:	bx	lr

0001350c <table_compare_int16@@Base>:
   1350c:	cmp	r0, #0
   13510:	beq	13544 <table_compare_int16@@Base+0x38>
   13514:	cmp	r1, #0
   13518:	moveq	r1, #1
   1351c:	moveq	r0, r1
   13520:	bxeq	lr
   13524:	ldrsh	r2, [r1]
   13528:	ldrsh	r0, [r0]
   1352c:	mov	r1, #0
   13530:	cmp	r0, r2
   13534:	mvnlt	r1, #0
   13538:	movwgt	r1, #1
   1353c:	mov	r0, r1
   13540:	bx	lr
   13544:	cmp	r1, #0
   13548:	mvnne	r1, #0
   1354c:	mov	r0, r1
   13550:	bx	lr

00013554 <table_compare_uint16@@Base>:
   13554:	cmp	r0, #0
   13558:	beq	1358c <table_compare_uint16@@Base+0x38>
   1355c:	cmp	r1, #0
   13560:	moveq	r1, #1
   13564:	moveq	r0, r1
   13568:	bxeq	lr
   1356c:	ldrh	r2, [r1]
   13570:	ldrh	r0, [r0]
   13574:	mov	r1, #0
   13578:	cmp	r0, r2
   1357c:	mvncc	r1, #0
   13580:	movwhi	r1, #1
   13584:	mov	r0, r1
   13588:	bx	lr
   1358c:	cmp	r1, #0
   13590:	mvnne	r1, #0
   13594:	mov	r0, r1
   13598:	bx	lr

0001359c <table_compare_int32@@Base>:
   1359c:	cmp	r0, #0
   135a0:	beq	135d4 <table_compare_int32@@Base+0x38>
   135a4:	cmp	r1, #0
   135a8:	moveq	r1, #1
   135ac:	moveq	r0, r1
   135b0:	bxeq	lr
   135b4:	ldr	r2, [r1]
   135b8:	ldr	r0, [r0]
   135bc:	mov	r1, #0
   135c0:	cmp	r0, r2
   135c4:	mvnlt	r1, #0
   135c8:	movwgt	r1, #1
   135cc:	mov	r0, r1
   135d0:	bx	lr
   135d4:	cmp	r1, #0
   135d8:	mvnne	r1, #0
   135dc:	mov	r0, r1
   135e0:	bx	lr

000135e4 <table_compare_uint32@@Base>:
   135e4:	cmp	r0, #0
   135e8:	beq	1361c <table_compare_uint32@@Base+0x38>
   135ec:	cmp	r1, #0
   135f0:	moveq	r1, #1
   135f4:	moveq	r0, r1
   135f8:	bxeq	lr
   135fc:	ldr	r2, [r1]
   13600:	ldr	r0, [r0]
   13604:	mov	r1, #0
   13608:	cmp	r0, r2
   1360c:	mvncc	r1, #0
   13610:	movwhi	r1, #1
   13614:	mov	r0, r1
   13618:	bx	lr
   1361c:	cmp	r1, #0
   13620:	mvnne	r1, #0
   13624:	mov	r0, r1
   13628:	bx	lr

0001362c <table_compare_int64@@Base>:
   1362c:	cmp	r0, #0
   13630:	beq	13684 <table_compare_int64@@Base+0x58>
   13634:	cmp	r1, #0
   13638:	moveq	r1, #1
   1363c:	moveq	r0, r1
   13640:	bxeq	lr
   13644:	push	{r5, r7, fp, lr}
   13648:	add	fp, sp, #8
   1364c:	ldm	r1, {r2, r7}
   13650:	ldm	r0, {r0, r5}
   13654:	mov	r1, #0
   13658:	subs	r3, r0, r2
   1365c:	sbcs	r3, r5, r7
   13660:	movwlt	r1, #1
   13664:	cmp	r1, #0
   13668:	mvnne	r1, #0
   1366c:	subs	r0, r2, r0
   13670:	sbcs	r0, r7, r5
   13674:	movwlt	r1, #1
   13678:	pop	{r5, r7, fp, lr}
   1367c:	mov	r0, r1
   13680:	bx	lr
   13684:	cmp	r1, #0
   13688:	mvnne	r1, #0
   1368c:	mov	r0, r1
   13690:	bx	lr

00013694 <table_compare_uint64@@Base>:
   13694:	cmp	r0, #0
   13698:	beq	136ec <table_compare_uint64@@Base+0x58>
   1369c:	cmp	r1, #0
   136a0:	moveq	r1, #1
   136a4:	moveq	r0, r1
   136a8:	bxeq	lr
   136ac:	push	{r5, r7, fp, lr}
   136b0:	add	fp, sp, #8
   136b4:	ldm	r1, {r2, r7}
   136b8:	ldm	r0, {r0, r5}
   136bc:	mov	r1, #0
   136c0:	subs	r3, r0, r2
   136c4:	sbcs	r3, r5, r7
   136c8:	movwcc	r1, #1
   136cc:	cmp	r1, #0
   136d0:	mvnne	r1, #0
   136d4:	subs	r0, r2, r0
   136d8:	sbcs	r0, r7, r5
   136dc:	movwcc	r1, #1
   136e0:	pop	{r5, r7, fp, lr}
   136e4:	mov	r0, r1
   136e8:	bx	lr
   136ec:	cmp	r1, #0
   136f0:	mvnne	r1, #0
   136f4:	mov	r0, r1
   136f8:	bx	lr

000136fc <table_compare_short@@Base>:
   136fc:	cmp	r0, #0
   13700:	beq	13734 <table_compare_short@@Base+0x38>
   13704:	cmp	r1, #0
   13708:	moveq	r1, #1
   1370c:	moveq	r0, r1
   13710:	bxeq	lr
   13714:	ldrsh	r2, [r1]
   13718:	ldrsh	r0, [r0]
   1371c:	mov	r1, #0
   13720:	cmp	r0, r2
   13724:	mvnlt	r1, #0
   13728:	movwgt	r1, #1
   1372c:	mov	r0, r1
   13730:	bx	lr
   13734:	cmp	r1, #0
   13738:	mvnne	r1, #0
   1373c:	mov	r0, r1
   13740:	bx	lr

00013744 <table_compare_ushort@@Base>:
   13744:	cmp	r0, #0
   13748:	beq	1377c <table_compare_ushort@@Base+0x38>
   1374c:	cmp	r1, #0
   13750:	moveq	r1, #1
   13754:	moveq	r0, r1
   13758:	bxeq	lr
   1375c:	ldrh	r2, [r1]
   13760:	ldrh	r0, [r0]
   13764:	mov	r1, #0
   13768:	cmp	r0, r2
   1376c:	mvncc	r1, #0
   13770:	movwhi	r1, #1
   13774:	mov	r0, r1
   13778:	bx	lr
   1377c:	cmp	r1, #0
   13780:	mvnne	r1, #0
   13784:	mov	r0, r1
   13788:	bx	lr

0001378c <table_compare_long@@Base>:
   1378c:	cmp	r0, #0
   13790:	beq	137c4 <table_compare_long@@Base+0x38>
   13794:	cmp	r1, #0
   13798:	moveq	r1, #1
   1379c:	moveq	r0, r1
   137a0:	bxeq	lr
   137a4:	ldr	r2, [r1]
   137a8:	ldr	r0, [r0]
   137ac:	mov	r1, #0
   137b0:	cmp	r0, r2
   137b4:	mvnlt	r1, #0
   137b8:	movwgt	r1, #1
   137bc:	mov	r0, r1
   137c0:	bx	lr
   137c4:	cmp	r1, #0
   137c8:	mvnne	r1, #0
   137cc:	mov	r0, r1
   137d0:	bx	lr

000137d4 <table_compare_ulong@@Base>:
   137d4:	cmp	r0, #0
   137d8:	beq	1380c <table_compare_ulong@@Base+0x38>
   137dc:	cmp	r1, #0
   137e0:	moveq	r1, #1
   137e4:	moveq	r0, r1
   137e8:	bxeq	lr
   137ec:	ldr	r2, [r1]
   137f0:	ldr	r0, [r0]
   137f4:	mov	r1, #0
   137f8:	cmp	r0, r2
   137fc:	mvncc	r1, #0
   13800:	movwhi	r1, #1
   13804:	mov	r0, r1
   13808:	bx	lr
   1380c:	cmp	r1, #0
   13810:	mvnne	r1, #0
   13814:	mov	r0, r1
   13818:	bx	lr

0001381c <table_compare_llong@@Base>:
   1381c:	cmp	r0, #0
   13820:	beq	13874 <table_compare_llong@@Base+0x58>
   13824:	cmp	r1, #0
   13828:	moveq	r1, #1
   1382c:	moveq	r0, r1
   13830:	bxeq	lr
   13834:	push	{r5, r7, fp, lr}
   13838:	add	fp, sp, #8
   1383c:	ldm	r1, {r2, r7}
   13840:	ldm	r0, {r0, r5}
   13844:	mov	r1, #0
   13848:	subs	r3, r0, r2
   1384c:	sbcs	r3, r5, r7
   13850:	movwlt	r1, #1
   13854:	cmp	r1, #0
   13858:	mvnne	r1, #0
   1385c:	subs	r0, r2, r0
   13860:	sbcs	r0, r7, r5
   13864:	movwlt	r1, #1
   13868:	pop	{r5, r7, fp, lr}
   1386c:	mov	r0, r1
   13870:	bx	lr
   13874:	cmp	r1, #0
   13878:	mvnne	r1, #0
   1387c:	mov	r0, r1
   13880:	bx	lr

00013884 <table_compare_ullong@@Base>:
   13884:	cmp	r0, #0
   13888:	beq	138bc <table_compare_ullong@@Base+0x38>
   1388c:	cmp	r1, #0
   13890:	moveq	r1, #1
   13894:	moveq	r0, r1
   13898:	bxeq	lr
   1389c:	ldr	r2, [r1]
   138a0:	ldr	r0, [r0]
   138a4:	mov	r1, #0
   138a8:	cmp	r0, r2
   138ac:	mvncc	r1, #0
   138b0:	movwhi	r1, #1
   138b4:	mov	r0, r1
   138b8:	bx	lr
   138bc:	cmp	r1, #0
   138c0:	mvnne	r1, #0
   138c4:	mov	r0, r1
   138c8:	bx	lr

000138cc <table_compare_float@@Base>:
   138cc:	cmp	r0, #0
   138d0:	beq	13908 <table_compare_float@@Base+0x3c>
   138d4:	cmp	r1, #0
   138d8:	moveq	r1, #1
   138dc:	moveq	r0, r1
   138e0:	bxeq	lr
   138e4:	vldr	s0, [r1]
   138e8:	vldr	s2, [r0]
   138ec:	mov	r1, #0
   138f0:	vcmpe.f32	s2, s0
   138f4:	vmrs	APSR_nzcv, fpscr
   138f8:	mvnmi	r1, #0
   138fc:	movwgt	r1, #1
   13900:	mov	r0, r1
   13904:	bx	lr
   13908:	cmp	r1, #0
   1390c:	mvnne	r1, #0
   13910:	mov	r0, r1
   13914:	bx	lr

00013918 <table_compare_double@@Base>:
   13918:	cmp	r0, #0
   1391c:	beq	13954 <table_compare_double@@Base+0x3c>
   13920:	cmp	r1, #0
   13924:	moveq	r1, #1
   13928:	moveq	r0, r1
   1392c:	bxeq	lr
   13930:	vldr	d16, [r1]
   13934:	vldr	d17, [r0]
   13938:	mov	r1, #0
   1393c:	vcmpe.f64	d17, d16
   13940:	vmrs	APSR_nzcv, fpscr
   13944:	mvnmi	r1, #0
   13948:	movwgt	r1, #1
   1394c:	mov	r0, r1
   13950:	bx	lr
   13954:	cmp	r1, #0
   13958:	mvnne	r1, #0
   1395c:	mov	r0, r1
   13960:	bx	lr

00013964 <table_compare_ldouble@@Base>:
   13964:	cmp	r0, #0
   13968:	beq	139a0 <table_compare_ldouble@@Base+0x3c>
   1396c:	cmp	r1, #0
   13970:	moveq	r1, #1
   13974:	moveq	r0, r1
   13978:	bxeq	lr
   1397c:	vldr	d16, [r1]
   13980:	vldr	d17, [r0]
   13984:	mov	r1, #0
   13988:	vcmpe.f64	d17, d16
   1398c:	vmrs	APSR_nzcv, fpscr
   13990:	mvnmi	r1, #0
   13994:	movwgt	r1, #1
   13998:	mov	r0, r1
   1399c:	bx	lr
   139a0:	cmp	r1, #0
   139a4:	mvnne	r1, #0
   139a8:	mov	r0, r1
   139ac:	bx	lr

000139b0 <table_compare_char@@Base>:
   139b0:	cmp	r0, #0
   139b4:	beq	139e8 <table_compare_char@@Base+0x38>
   139b8:	cmp	r1, #0
   139bc:	moveq	r1, #1
   139c0:	moveq	r0, r1
   139c4:	bxeq	lr
   139c8:	ldrb	r2, [r1]
   139cc:	ldrb	r0, [r0]
   139d0:	mov	r1, #0
   139d4:	cmp	r0, r2
   139d8:	mvncc	r1, #0
   139dc:	movwhi	r1, #1
   139e0:	mov	r0, r1
   139e4:	bx	lr
   139e8:	cmp	r1, #0
   139ec:	mvnne	r1, #0
   139f0:	mov	r0, r1
   139f4:	bx	lr

000139f8 <table_compare_uchar@@Base>:
   139f8:	cmp	r0, #0
   139fc:	beq	13a30 <table_compare_uchar@@Base+0x38>
   13a00:	cmp	r1, #0
   13a04:	moveq	r1, #1
   13a08:	moveq	r0, r1
   13a0c:	bxeq	lr
   13a10:	ldrb	r2, [r1]
   13a14:	ldrb	r0, [r0]
   13a18:	mov	r1, #0
   13a1c:	cmp	r0, r2
   13a20:	mvncc	r1, #0
   13a24:	movwhi	r1, #1
   13a28:	mov	r0, r1
   13a2c:	bx	lr
   13a30:	cmp	r1, #0
   13a34:	mvnne	r1, #0
   13a38:	mov	r0, r1
   13a3c:	bx	lr

00013a40 <table_compare_string@@Base>:
   13a40:	cmp	r0, #0
   13a44:	beq	13a5c <table_compare_string@@Base+0x1c>
   13a48:	cmp	r1, #0
   13a4c:	moveq	r1, #1
   13a50:	moveq	r0, r1
   13a54:	bxeq	lr
   13a58:	b	11ee0 <strcmp@plt>
   13a5c:	cmp	r1, #0
   13a60:	mvnne	r1, #0
   13a64:	mov	r0, r1
   13a68:	bx	lr

00013a6c <table_compare_ptr@@Base>:
   13a6c:	mov	r2, #0
   13a70:	cmp	r0, r1
   13a74:	mvncc	r2, #0
   13a78:	movwhi	r2, #1
   13a7c:	mov	r0, r2
   13a80:	bx	lr

00013a84 <table_get_default_compare_function_for_data_type@@Base>:
   13a84:	cmp	r0, #23
   13a88:	movwls	r1, #22832	; 0x5930
   13a8c:	movhi	r0, #0
   13a90:	movtls	r1, #1
   13a94:	ldrls	r0, [r1, r0, lsl #2]
   13a98:	bx	lr

00013a9c <table_get@@Base>:
   13a9c:	push	{fp, lr}
   13aa0:	mov	fp, sp
   13aa4:	bl	14e90 <table_get_cell_ptr@@Base>
   13aa8:	ldr	r0, [r0]
   13aac:	pop	{fp, pc}

00013ab0 <table_get_bool@@Base>:
   13ab0:	push	{fp, lr}
   13ab4:	mov	fp, sp
   13ab8:	bl	14e90 <table_get_cell_ptr@@Base>
   13abc:	ldr	r0, [r0]
   13ac0:	ldrb	r0, [r0]
   13ac4:	pop	{fp, pc}

00013ac8 <table_get_int@@Base>:
   13ac8:	push	{fp, lr}
   13acc:	mov	fp, sp
   13ad0:	bl	14e90 <table_get_cell_ptr@@Base>
   13ad4:	ldr	r0, [r0]
   13ad8:	ldr	r0, [r0]
   13adc:	pop	{fp, pc}

00013ae0 <table_get_uint@@Base>:
   13ae0:	push	{fp, lr}
   13ae4:	mov	fp, sp
   13ae8:	bl	14e90 <table_get_cell_ptr@@Base>
   13aec:	ldr	r0, [r0]
   13af0:	ldr	r0, [r0]
   13af4:	pop	{fp, pc}

00013af8 <table_get_int8@@Base>:
   13af8:	push	{fp, lr}
   13afc:	mov	fp, sp
   13b00:	bl	14e90 <table_get_cell_ptr@@Base>
   13b04:	ldr	r0, [r0]
   13b08:	ldrsb	r0, [r0]
   13b0c:	pop	{fp, pc}

00013b10 <table_get_uint8@@Base>:
   13b10:	push	{fp, lr}
   13b14:	mov	fp, sp
   13b18:	bl	14e90 <table_get_cell_ptr@@Base>
   13b1c:	ldr	r0, [r0]
   13b20:	ldrb	r0, [r0]
   13b24:	pop	{fp, pc}

00013b28 <table_get_int16@@Base>:
   13b28:	push	{fp, lr}
   13b2c:	mov	fp, sp
   13b30:	bl	14e90 <table_get_cell_ptr@@Base>
   13b34:	ldr	r0, [r0]
   13b38:	ldrsh	r0, [r0]
   13b3c:	pop	{fp, pc}

00013b40 <table_get_uint16@@Base>:
   13b40:	push	{fp, lr}
   13b44:	mov	fp, sp
   13b48:	bl	14e90 <table_get_cell_ptr@@Base>
   13b4c:	ldr	r0, [r0]
   13b50:	ldrh	r0, [r0]
   13b54:	pop	{fp, pc}

00013b58 <table_get_int32@@Base>:
   13b58:	push	{fp, lr}
   13b5c:	mov	fp, sp
   13b60:	bl	14e90 <table_get_cell_ptr@@Base>
   13b64:	ldr	r0, [r0]
   13b68:	ldr	r0, [r0]
   13b6c:	pop	{fp, pc}

00013b70 <table_get_uint32@@Base>:
   13b70:	push	{fp, lr}
   13b74:	mov	fp, sp
   13b78:	bl	14e90 <table_get_cell_ptr@@Base>
   13b7c:	ldr	r0, [r0]
   13b80:	ldr	r0, [r0]
   13b84:	pop	{fp, pc}

00013b88 <table_get_int64@@Base>:
   13b88:	push	{fp, lr}
   13b8c:	mov	fp, sp
   13b90:	bl	14e90 <table_get_cell_ptr@@Base>
   13b94:	ldr	r0, [r0]
   13b98:	ldrd	r0, [r0]
   13b9c:	pop	{fp, pc}

00013ba0 <table_get_uint64@@Base>:
   13ba0:	push	{fp, lr}
   13ba4:	mov	fp, sp
   13ba8:	bl	14e90 <table_get_cell_ptr@@Base>
   13bac:	ldr	r0, [r0]
   13bb0:	ldrd	r0, [r0]
   13bb4:	pop	{fp, pc}

00013bb8 <table_get_short@@Base>:
   13bb8:	push	{fp, lr}
   13bbc:	mov	fp, sp
   13bc0:	bl	14e90 <table_get_cell_ptr@@Base>
   13bc4:	ldr	r0, [r0]
   13bc8:	ldrsh	r0, [r0]
   13bcc:	pop	{fp, pc}

00013bd0 <table_get_ushort@@Base>:
   13bd0:	push	{fp, lr}
   13bd4:	mov	fp, sp
   13bd8:	bl	14e90 <table_get_cell_ptr@@Base>
   13bdc:	ldr	r0, [r0]
   13be0:	ldrh	r0, [r0]
   13be4:	pop	{fp, pc}

00013be8 <table_get_long@@Base>:
   13be8:	push	{fp, lr}
   13bec:	mov	fp, sp
   13bf0:	bl	14e90 <table_get_cell_ptr@@Base>
   13bf4:	ldr	r0, [r0]
   13bf8:	ldr	r0, [r0]
   13bfc:	pop	{fp, pc}

00013c00 <table_get_ulong@@Base>:
   13c00:	push	{fp, lr}
   13c04:	mov	fp, sp
   13c08:	bl	14e90 <table_get_cell_ptr@@Base>
   13c0c:	ldr	r0, [r0]
   13c10:	ldr	r0, [r0]
   13c14:	pop	{fp, pc}

00013c18 <table_get_llong@@Base>:
   13c18:	push	{fp, lr}
   13c1c:	mov	fp, sp
   13c20:	bl	14e90 <table_get_cell_ptr@@Base>
   13c24:	ldr	r0, [r0]
   13c28:	ldrd	r0, [r0]
   13c2c:	pop	{fp, pc}

00013c30 <table_get_ullong@@Base>:
   13c30:	push	{fp, lr}
   13c34:	mov	fp, sp
   13c38:	bl	14e90 <table_get_cell_ptr@@Base>
   13c3c:	ldr	r0, [r0]
   13c40:	ldrd	r0, [r0]
   13c44:	pop	{fp, pc}

00013c48 <table_get_float@@Base>:
   13c48:	push	{fp, lr}
   13c4c:	mov	fp, sp
   13c50:	bl	14e90 <table_get_cell_ptr@@Base>
   13c54:	ldr	r0, [r0]
   13c58:	vldr	s0, [r0]
   13c5c:	pop	{fp, pc}

00013c60 <table_get_double@@Base>:
   13c60:	push	{fp, lr}
   13c64:	mov	fp, sp
   13c68:	bl	14e90 <table_get_cell_ptr@@Base>
   13c6c:	ldr	r0, [r0]
   13c70:	vldr	d0, [r0]
   13c74:	pop	{fp, pc}

00013c78 <table_get_ldouble@@Base>:
   13c78:	push	{fp, lr}
   13c7c:	mov	fp, sp
   13c80:	bl	14e90 <table_get_cell_ptr@@Base>
   13c84:	ldr	r0, [r0]
   13c88:	vldr	d0, [r0]
   13c8c:	pop	{fp, pc}

00013c90 <table_get_char@@Base>:
   13c90:	push	{fp, lr}
   13c94:	mov	fp, sp
   13c98:	bl	14e90 <table_get_cell_ptr@@Base>
   13c9c:	ldr	r0, [r0]
   13ca0:	ldrb	r0, [r0]
   13ca4:	pop	{fp, pc}

00013ca8 <table_get_uchar@@Base>:
   13ca8:	push	{fp, lr}
   13cac:	mov	fp, sp
   13cb0:	bl	14e90 <table_get_cell_ptr@@Base>
   13cb4:	ldr	r0, [r0]
   13cb8:	ldrb	r0, [r0]
   13cbc:	pop	{fp, pc}

00013cc0 <table_get_string@@Base>:
   13cc0:	push	{fp, lr}
   13cc4:	mov	fp, sp
   13cc8:	bl	14e90 <table_get_cell_ptr@@Base>
   13ccc:	ldr	r0, [r0]
   13cd0:	pop	{fp, pc}

00013cd4 <table_get_ptr@@Base>:
   13cd4:	push	{fp, lr}
   13cd8:	mov	fp, sp
   13cdc:	bl	14e90 <table_get_cell_ptr@@Base>
   13ce0:	ldr	r0, [r0]
   13ce4:	pop	{fp, pc}

00013ce8 <table_row_init@@Base>:
   13ce8:	push	{r4, r5, fp, lr}
   13cec:	add	fp, sp, #8
   13cf0:	mov	r4, r1
   13cf4:	ldr	r1, [r0, #12]
   13cf8:	ldr	r5, [r0, #16]
   13cfc:	lsl	r0, r1, #2
   13d00:	bl	11f1c <malloc@plt>
   13d04:	str	r0, [r5, r4, lsl #2]
   13d08:	pop	{r4, r5, fp, pc}

00013d0c <table_get_row_ptr@@Base>:
   13d0c:	ldr	r0, [r0, #16]
   13d10:	add	r0, r0, r1, lsl #2
   13d14:	bx	lr

00013d18 <table_row_destroy@@Base>:
   13d18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13d1c:	add	fp, sp, #24
   13d20:	mov	r4, r1
   13d24:	mov	r5, r0
   13d28:	bl	13018 <table_get_column_length@@Base>
   13d2c:	ldr	r8, [r5, #16]
   13d30:	cmp	r0, #1
   13d34:	blt	13d5c <table_row_destroy@@Base+0x44>
   13d38:	mov	r6, r0
   13d3c:	mov	r7, #0
   13d40:	mov	r0, r5
   13d44:	mov	r1, r4
   13d48:	mov	r2, r7
   13d4c:	bl	14eac <table_cell_destroy@@Base>
   13d50:	add	r7, r7, #1
   13d54:	cmp	r6, r7
   13d58:	bne	13d40 <table_row_destroy@@Base+0x28>
   13d5c:	ldr	r0, [r8, r4, lsl #2]
   13d60:	cmp	r0, #0
   13d64:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13d68:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13d6c:	b	11eec <free@plt>

00013d70 <table_get_row_length@@Base>:
   13d70:	ldr	r0, [r0, #20]
   13d74:	bx	lr

00013d78 <table_add_row@@Base>:
   13d78:	push	{r4, r5, r6, r7, fp, lr}
   13d7c:	add	fp, sp, #16
   13d80:	ldr	r5, [r0, #20]
   13d84:	ldr	r1, [r0, #24]
   13d88:	mov	r4, r0
   13d8c:	udiv	r0, r5, r1
   13d90:	mls	r0, r0, r1, r5
   13d94:	cmp	r0, #0
   13d98:	bne	13dbc <table_add_row@@Base+0x44>
   13d9c:	ldr	r2, [r4, #28]
   13da0:	ldr	r0, [r4, #16]
   13da4:	add	r1, r2, r1
   13da8:	str	r1, [r4, #28]
   13dac:	lsl	r1, r1, #2
   13db0:	bl	11f04 <realloc@plt>
   13db4:	str	r0, [r4, #16]
   13db8:	ldr	r5, [r4, #20]
   13dbc:	mov	r0, r4
   13dc0:	bl	13018 <table_get_column_length@@Base>
   13dc4:	mov	r6, r0
   13dc8:	ldr	r0, [r4, #12]
   13dcc:	ldr	r7, [r4, #16]
   13dd0:	lsl	r0, r0, #2
   13dd4:	bl	11f1c <malloc@plt>
   13dd8:	cmp	r6, #1
   13ddc:	str	r0, [r7, r5, lsl #2]
   13de0:	blt	13e04 <table_add_row@@Base+0x8c>
   13de4:	mov	r7, #0
   13de8:	mov	r0, r4
   13dec:	mov	r1, r5
   13df0:	mov	r2, r7
   13df4:	bl	14e70 <table_cell_init@@Base>
   13df8:	add	r7, r7, #1
   13dfc:	cmp	r6, r7
   13e00:	bne	13de8 <table_add_row@@Base+0x70>
   13e04:	ldr	r1, [r4, #20]
   13e08:	mov	r0, r4
   13e0c:	mvn	r2, #0
   13e10:	mov	r3, #2
   13e14:	bl	12f24 <table_notify@@Base>
   13e18:	ldr	r0, [r4, #20]
   13e1c:	add	r1, r0, #1
   13e20:	str	r1, [r4, #20]
   13e24:	pop	{r4, r5, r6, r7, fp, pc}

00013e28 <table_remove_row@@Base>:
   13e28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13e2c:	add	fp, sp, #24
   13e30:	ldr	r8, [r0, #20]
   13e34:	mov	r4, r1
   13e38:	mov	r5, r0
   13e3c:	bl	13018 <table_get_column_length@@Base>
   13e40:	cmp	r0, #1
   13e44:	blt	13e90 <table_remove_row@@Base+0x68>
   13e48:	mov	r6, r0
   13e4c:	mov	r7, #0
   13e50:	mov	r0, r5
   13e54:	mov	r1, r7
   13e58:	bl	13098 <table_get_column_data_type@@Base>
   13e5c:	cmp	r0, #23
   13e60:	beq	13e84 <table_remove_row@@Base+0x5c>
   13e64:	mov	r0, r5
   13e68:	mov	r1, r4
   13e6c:	mov	r2, r7
   13e70:	bl	14e90 <table_get_cell_ptr@@Base>
   13e74:	ldr	r0, [r0]
   13e78:	cmp	r0, #0
   13e7c:	beq	13e84 <table_remove_row@@Base+0x5c>
   13e80:	bl	11eec <free@plt>
   13e84:	add	r7, r7, #1
   13e88:	cmp	r6, r7
   13e8c:	bne	13e50 <table_remove_row@@Base+0x28>
   13e90:	ldr	r0, [r5, #16]
   13e94:	ldr	r0, [r0, r4, lsl #2]
   13e98:	cmp	r0, #0
   13e9c:	beq	13ea4 <table_remove_row@@Base+0x7c>
   13ea0:	bl	11eec <free@plt>
   13ea4:	sub	r0, r8, #1
   13ea8:	cmp	r0, r4
   13eac:	ble	13ed0 <table_remove_row@@Base+0xa8>
   13eb0:	mov	r1, r4
   13eb4:	ldr	r2, [r5, #16]
   13eb8:	add	r3, r2, r1, lsl #2
   13ebc:	ldr	r3, [r3, #4]
   13ec0:	str	r3, [r2, r1, lsl #2]
   13ec4:	add	r1, r1, #1
   13ec8:	cmp	r0, r1
   13ecc:	bne	13eb4 <table_remove_row@@Base+0x8c>
   13ed0:	ldr	r0, [r5, #20]
   13ed4:	ldr	r1, [r5, #24]
   13ed8:	sub	r0, r0, #1
   13edc:	udiv	r2, r0, r1
   13ee0:	str	r0, [r5, #20]
   13ee4:	mls	r0, r2, r1, r0
   13ee8:	cmp	r0, #0
   13eec:	bne	13f0c <table_remove_row@@Base+0xe4>
   13ef0:	ldr	r2, [r5, #28]
   13ef4:	ldr	r0, [r5, #16]
   13ef8:	sub	r1, r2, r1
   13efc:	str	r1, [r5, #28]
   13f00:	lsl	r1, r1, #2
   13f04:	bl	11f04 <realloc@plt>
   13f08:	str	r0, [r5, #16]
   13f0c:	mov	r0, r5
   13f10:	mov	r1, r4
   13f14:	mvn	r2, #0
   13f18:	mov	r3, #4
   13f1c:	bl	12f24 <table_notify@@Base>
   13f20:	mov	r0, #0
   13f24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013f28 <table_set_row_ptr@@Base>:
   13f28:	ldr	r2, [r2]
   13f2c:	ldr	r0, [r0, #16]
   13f30:	str	r2, [r0, r1, lsl #2]
   13f34:	bx	lr

00013f38 <table_set@@Base>:
   13f38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f3c:	add	fp, sp, #24
   13f40:	mov	r8, r3
   13f44:	mov	r4, r2
   13f48:	mov	r9, r1
   13f4c:	mov	r6, r0
   13f50:	bl	14e90 <table_get_cell_ptr@@Base>
   13f54:	mov	r5, r0
   13f58:	mov	r0, r6
   13f5c:	mov	r1, r4
   13f60:	bl	12ff0 <table_get_col_ptr@@Base>
   13f64:	ldr	r1, [fp, #8]
   13f68:	mvn	r7, #0
   13f6c:	cmp	r1, #23
   13f70:	bhi	14234 <table_set@@Base+0x2fc>
   13f74:	add	r2, pc, #0
   13f78:	ldr	pc, [r2, r1, lsl #2]
   13f7c:	ldrdeq	r3, [r1], -ip
   13f80:	andeq	r3, r1, ip, ror #31
   13f84:	strdeq	r3, [r1], -ip
   13f88:	andeq	r4, r1, ip
   13f8c:	andeq	r4, r1, ip, lsl r0
   13f90:	andeq	r4, r1, ip, lsr #32
   13f94:	andeq	r4, r1, ip, lsr r0
   13f98:	andeq	r4, r1, ip, asr #32
   13f9c:	andeq	r4, r1, ip, asr r0
   13fa0:	andeq	r4, r1, ip, rrx
   13fa4:	andeq	r4, r1, ip, ror r0
   13fa8:	andeq	r4, r1, ip, lsl #1
   13fac:	andeq	r4, r1, r4, asr #1
   13fb0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13fb4:	andeq	r4, r1, r4, ror #1
   13fb8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13fbc:	andeq	r4, r1, r4, lsl #2
   13fc0:	andeq	r4, r1, ip, lsr r1
   13fc4:	andeq	r4, r1, ip, asr #2
   13fc8:	andeq	r4, r1, ip, lsl #3
   13fcc:	muleq	r1, ip, r1
   13fd0:	andeq	r4, r1, ip, lsr #3
   13fd4:	andeq	r4, r1, r8, ror #3
   13fd8:	andeq	r4, r1, ip, lsr r2
   13fdc:	ldr	r0, [r0, #4]
   13fe0:	cmp	r0, #0
   13fe4:	bne	14234 <table_set@@Base+0x2fc>
   13fe8:	b	14110 <table_set@@Base+0x1d8>
   13fec:	ldr	r0, [r0, #4]
   13ff0:	cmp	r0, #1
   13ff4:	beq	14110 <table_set@@Base+0x1d8>
   13ff8:	b	14234 <table_set@@Base+0x2fc>
   13ffc:	ldr	r0, [r0, #4]
   14000:	cmp	r0, #2
   14004:	beq	141f4 <table_set@@Base+0x2bc>
   14008:	b	14234 <table_set@@Base+0x2fc>
   1400c:	ldr	r0, [r0, #4]
   14010:	cmp	r0, #3
   14014:	beq	141f4 <table_set@@Base+0x2bc>
   14018:	b	14234 <table_set@@Base+0x2fc>
   1401c:	ldr	r0, [r0, #4]
   14020:	cmp	r0, #4
   14024:	beq	14098 <table_set@@Base+0x160>
   14028:	b	14234 <table_set@@Base+0x2fc>
   1402c:	ldr	r0, [r0, #4]
   14030:	cmp	r0, #5
   14034:	beq	14098 <table_set@@Base+0x160>
   14038:	b	14234 <table_set@@Base+0x2fc>
   1403c:	ldr	r0, [r0, #4]
   14040:	cmp	r0, #6
   14044:	beq	14110 <table_set@@Base+0x1d8>
   14048:	b	14234 <table_set@@Base+0x2fc>
   1404c:	ldr	r0, [r0, #4]
   14050:	cmp	r0, #7
   14054:	beq	14110 <table_set@@Base+0x1d8>
   14058:	b	14234 <table_set@@Base+0x2fc>
   1405c:	ldr	r0, [r0, #4]
   14060:	cmp	r0, #8
   14064:	beq	14158 <table_set@@Base+0x220>
   14068:	b	14234 <table_set@@Base+0x2fc>
   1406c:	ldr	r0, [r0, #4]
   14070:	cmp	r0, #9
   14074:	beq	14158 <table_set@@Base+0x220>
   14078:	b	14234 <table_set@@Base+0x2fc>
   1407c:	ldr	r0, [r0, #4]
   14080:	cmp	r0, #10
   14084:	beq	14098 <table_set@@Base+0x160>
   14088:	b	14234 <table_set@@Base+0x2fc>
   1408c:	ldr	r0, [r0, #4]
   14090:	cmp	r0, #11
   14094:	bne	14234 <table_set@@Base+0x2fc>
   14098:	ldr	r0, [r5]
   1409c:	cmp	r0, #0
   140a0:	bne	140b8 <table_set@@Base+0x180>
   140a4:	mov	r0, #2
   140a8:	bl	11f1c <malloc@plt>
   140ac:	cmp	r0, #0
   140b0:	str	r0, [r5]
   140b4:	beq	14234 <table_set@@Base+0x2fc>
   140b8:	ldrh	r1, [r8]
   140bc:	strh	r1, [r0]
   140c0:	b	1421c <table_set@@Base+0x2e4>
   140c4:	ldr	r0, [r0, #4]
   140c8:	cmp	r0, #12
   140cc:	beq	14110 <table_set@@Base+0x1d8>
   140d0:	b	14234 <table_set@@Base+0x2fc>
   140d4:	ldr	r0, [r0, #4]
   140d8:	cmp	r0, #13
   140dc:	beq	14110 <table_set@@Base+0x1d8>
   140e0:	b	14234 <table_set@@Base+0x2fc>
   140e4:	ldr	r0, [r0, #4]
   140e8:	cmp	r0, #14
   140ec:	beq	14158 <table_set@@Base+0x220>
   140f0:	b	14234 <table_set@@Base+0x2fc>
   140f4:	ldr	r0, [r0, #4]
   140f8:	cmp	r0, #15
   140fc:	beq	14158 <table_set@@Base+0x220>
   14100:	b	14234 <table_set@@Base+0x2fc>
   14104:	ldr	r0, [r0, #4]
   14108:	cmp	r0, #16
   1410c:	bne	14234 <table_set@@Base+0x2fc>
   14110:	ldr	r0, [r5]
   14114:	cmp	r0, #0
   14118:	bne	14130 <table_set@@Base+0x1f8>
   1411c:	mov	r0, #4
   14120:	bl	11f1c <malloc@plt>
   14124:	cmp	r0, #0
   14128:	str	r0, [r5]
   1412c:	beq	14234 <table_set@@Base+0x2fc>
   14130:	ldr	r1, [r8]
   14134:	str	r1, [r0]
   14138:	b	1421c <table_set@@Base+0x2e4>
   1413c:	ldr	r0, [r0, #4]
   14140:	cmp	r0, #17
   14144:	beq	14158 <table_set@@Base+0x220>
   14148:	b	14234 <table_set@@Base+0x2fc>
   1414c:	ldr	r0, [r0, #4]
   14150:	cmp	r0, #18
   14154:	bne	14234 <table_set@@Base+0x2fc>
   14158:	ldr	r0, [r5]
   1415c:	cmp	r0, #0
   14160:	bne	14178 <table_set@@Base+0x240>
   14164:	mov	r0, #8
   14168:	bl	11f1c <malloc@plt>
   1416c:	cmp	r0, #0
   14170:	str	r0, [r5]
   14174:	beq	14234 <table_set@@Base+0x2fc>
   14178:	ldr	r1, [r8]
   1417c:	ldr	r2, [r8, #4]
   14180:	str	r2, [r0, #4]
   14184:	str	r1, [r0]
   14188:	b	1421c <table_set@@Base+0x2e4>
   1418c:	ldr	r0, [r0, #4]
   14190:	cmp	r0, #19
   14194:	beq	141f4 <table_set@@Base+0x2bc>
   14198:	b	14234 <table_set@@Base+0x2fc>
   1419c:	ldr	r0, [r0, #4]
   141a0:	cmp	r0, #20
   141a4:	beq	141f4 <table_set@@Base+0x2bc>
   141a8:	b	14234 <table_set@@Base+0x2fc>
   141ac:	ldr	r0, [r0, #4]
   141b0:	cmp	r0, #21
   141b4:	bne	14234 <table_set@@Base+0x2fc>
   141b8:	mov	r0, r8
   141bc:	bl	11f40 <strlen@plt>
   141c0:	ldr	r2, [r5]
   141c4:	add	r1, r0, #1
   141c8:	mov	r0, r2
   141cc:	bl	11f04 <realloc@plt>
   141d0:	cmp	r0, #0
   141d4:	str	r0, [r5]
   141d8:	beq	14234 <table_set@@Base+0x2fc>
   141dc:	mov	r1, r8
   141e0:	bl	11f10 <strcpy@plt>
   141e4:	b	1421c <table_set@@Base+0x2e4>
   141e8:	ldr	r0, [r0, #4]
   141ec:	cmp	r0, #22
   141f0:	bne	14234 <table_set@@Base+0x2fc>
   141f4:	ldr	r0, [r5]
   141f8:	cmp	r0, #0
   141fc:	bne	14214 <table_set@@Base+0x2dc>
   14200:	mov	r0, #1
   14204:	bl	11f1c <malloc@plt>
   14208:	cmp	r0, #0
   1420c:	str	r0, [r5]
   14210:	beq	14234 <table_set@@Base+0x2fc>
   14214:	ldrb	r1, [r8]
   14218:	strb	r1, [r0]
   1421c:	mov	r0, r6
   14220:	mov	r1, r9
   14224:	mov	r2, r4
   14228:	mov	r3, #1
   1422c:	bl	12f24 <table_notify@@Base>
   14230:	mov	r7, #0
   14234:	mov	r0, r7
   14238:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1423c:	ldr	r0, [r0, #4]
   14240:	cmp	r0, #23
   14244:	bne	14234 <table_set@@Base+0x2fc>
   14248:	str	r8, [r5]
   1424c:	b	1421c <table_set@@Base+0x2e4>

00014250 <table_set_bool@@Base>:
   14250:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14254:	add	fp, sp, #24
   14258:	mov	r8, r3
   1425c:	mov	r4, r2
   14260:	mov	r9, r1
   14264:	mov	r6, r0
   14268:	bl	14e90 <table_get_cell_ptr@@Base>
   1426c:	mov	r5, r0
   14270:	mov	r0, r6
   14274:	mov	r1, r4
   14278:	bl	12ff0 <table_get_col_ptr@@Base>
   1427c:	ldr	r0, [r0, #4]
   14280:	mvn	r7, #0
   14284:	cmp	r0, #22
   14288:	bne	142c8 <table_set_bool@@Base+0x78>
   1428c:	ldr	r0, [r5]
   14290:	cmp	r0, #0
   14294:	bne	142ac <table_set_bool@@Base+0x5c>
   14298:	mov	r0, #1
   1429c:	bl	11f1c <malloc@plt>
   142a0:	cmp	r0, #0
   142a4:	str	r0, [r5]
   142a8:	beq	142c8 <table_set_bool@@Base+0x78>
   142ac:	strb	r8, [r0]
   142b0:	mov	r0, r6
   142b4:	mov	r1, r9
   142b8:	mov	r2, r4
   142bc:	mov	r3, #1
   142c0:	bl	12f24 <table_notify@@Base>
   142c4:	mov	r7, #0
   142c8:	mov	r0, r7
   142cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142d0 <table_set_int@@Base>:
   142d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142d4:	add	fp, sp, #24
   142d8:	mov	r8, r3
   142dc:	mov	r4, r2
   142e0:	mov	r5, r1
   142e4:	mov	r6, r0
   142e8:	bl	14e90 <table_get_cell_ptr@@Base>
   142ec:	mov	r9, r0
   142f0:	mov	r0, r6
   142f4:	mov	r1, r4
   142f8:	bl	12ff0 <table_get_col_ptr@@Base>
   142fc:	ldr	r0, [r0, #4]
   14300:	mvn	r7, #0
   14304:	cmp	r0, #0
   14308:	bne	14348 <table_set_int@@Base+0x78>
   1430c:	ldr	r0, [r9]
   14310:	cmp	r0, #0
   14314:	bne	1432c <table_set_int@@Base+0x5c>
   14318:	mov	r0, #4
   1431c:	bl	11f1c <malloc@plt>
   14320:	cmp	r0, #0
   14324:	str	r0, [r9]
   14328:	beq	14348 <table_set_int@@Base+0x78>
   1432c:	str	r8, [r0]
   14330:	mov	r0, r6
   14334:	mov	r1, r5
   14338:	mov	r2, r4
   1433c:	mov	r3, #1
   14340:	bl	12f24 <table_notify@@Base>
   14344:	mov	r7, #0
   14348:	mov	r0, r7
   1434c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014350 <table_set_uint@@Base>:
   14350:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14354:	add	fp, sp, #24
   14358:	mov	r8, r3
   1435c:	mov	r4, r2
   14360:	mov	r5, r1
   14364:	mov	r6, r0
   14368:	bl	14e90 <table_get_cell_ptr@@Base>
   1436c:	mov	r9, r0
   14370:	mov	r0, r6
   14374:	mov	r1, r4
   14378:	bl	12ff0 <table_get_col_ptr@@Base>
   1437c:	ldr	r0, [r0, #4]
   14380:	mvn	r7, #0
   14384:	cmp	r0, #1
   14388:	bne	143c8 <table_set_uint@@Base+0x78>
   1438c:	ldr	r0, [r9]
   14390:	cmp	r0, #0
   14394:	bne	143ac <table_set_uint@@Base+0x5c>
   14398:	mov	r0, #4
   1439c:	bl	11f1c <malloc@plt>
   143a0:	cmp	r0, #0
   143a4:	str	r0, [r9]
   143a8:	beq	143c8 <table_set_uint@@Base+0x78>
   143ac:	str	r8, [r0]
   143b0:	mov	r0, r6
   143b4:	mov	r1, r5
   143b8:	mov	r2, r4
   143bc:	mov	r3, #1
   143c0:	bl	12f24 <table_notify@@Base>
   143c4:	mov	r7, #0
   143c8:	mov	r0, r7
   143cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143d0 <table_set_int8@@Base>:
   143d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143d4:	add	fp, sp, #24
   143d8:	mov	r8, r3
   143dc:	mov	r4, r2
   143e0:	mov	r9, r1
   143e4:	mov	r6, r0
   143e8:	bl	14e90 <table_get_cell_ptr@@Base>
   143ec:	mov	r5, r0
   143f0:	mov	r0, r6
   143f4:	mov	r1, r4
   143f8:	bl	12ff0 <table_get_col_ptr@@Base>
   143fc:	ldr	r0, [r0, #4]
   14400:	mvn	r7, #0
   14404:	cmp	r0, #2
   14408:	bne	14448 <table_set_int8@@Base+0x78>
   1440c:	ldr	r0, [r5]
   14410:	cmp	r0, #0
   14414:	bne	1442c <table_set_int8@@Base+0x5c>
   14418:	mov	r0, #1
   1441c:	bl	11f1c <malloc@plt>
   14420:	cmp	r0, #0
   14424:	str	r0, [r5]
   14428:	beq	14448 <table_set_int8@@Base+0x78>
   1442c:	strb	r8, [r0]
   14430:	mov	r0, r6
   14434:	mov	r1, r9
   14438:	mov	r2, r4
   1443c:	mov	r3, #1
   14440:	bl	12f24 <table_notify@@Base>
   14444:	mov	r7, #0
   14448:	mov	r0, r7
   1444c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014450 <table_set_uint8@@Base>:
   14450:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14454:	add	fp, sp, #24
   14458:	mov	r8, r3
   1445c:	mov	r4, r2
   14460:	mov	r9, r1
   14464:	mov	r6, r0
   14468:	bl	14e90 <table_get_cell_ptr@@Base>
   1446c:	mov	r5, r0
   14470:	mov	r0, r6
   14474:	mov	r1, r4
   14478:	bl	12ff0 <table_get_col_ptr@@Base>
   1447c:	ldr	r0, [r0, #4]
   14480:	mvn	r7, #0
   14484:	cmp	r0, #3
   14488:	bne	144c8 <table_set_uint8@@Base+0x78>
   1448c:	ldr	r0, [r5]
   14490:	cmp	r0, #0
   14494:	bne	144ac <table_set_uint8@@Base+0x5c>
   14498:	mov	r0, #1
   1449c:	bl	11f1c <malloc@plt>
   144a0:	cmp	r0, #0
   144a4:	str	r0, [r5]
   144a8:	beq	144c8 <table_set_uint8@@Base+0x78>
   144ac:	strb	r8, [r0]
   144b0:	mov	r0, r6
   144b4:	mov	r1, r9
   144b8:	mov	r2, r4
   144bc:	mov	r3, #1
   144c0:	bl	12f24 <table_notify@@Base>
   144c4:	mov	r7, #0
   144c8:	mov	r0, r7
   144cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000144d0 <table_set_int16@@Base>:
   144d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144d4:	add	fp, sp, #24
   144d8:	mov	r8, r3
   144dc:	mov	r4, r2
   144e0:	mov	r9, r1
   144e4:	mov	r6, r0
   144e8:	bl	14e90 <table_get_cell_ptr@@Base>
   144ec:	mov	r5, r0
   144f0:	mov	r0, r6
   144f4:	mov	r1, r4
   144f8:	bl	12ff0 <table_get_col_ptr@@Base>
   144fc:	ldr	r0, [r0, #4]
   14500:	mvn	r7, #0
   14504:	cmp	r0, #4
   14508:	bne	14548 <table_set_int16@@Base+0x78>
   1450c:	ldr	r0, [r5]
   14510:	cmp	r0, #0
   14514:	bne	1452c <table_set_int16@@Base+0x5c>
   14518:	mov	r0, #2
   1451c:	bl	11f1c <malloc@plt>
   14520:	cmp	r0, #0
   14524:	str	r0, [r5]
   14528:	beq	14548 <table_set_int16@@Base+0x78>
   1452c:	strh	r8, [r0]
   14530:	mov	r0, r6
   14534:	mov	r1, r9
   14538:	mov	r2, r4
   1453c:	mov	r3, #1
   14540:	bl	12f24 <table_notify@@Base>
   14544:	mov	r7, #0
   14548:	mov	r0, r7
   1454c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014550 <table_set_uint16@@Base>:
   14550:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14554:	add	fp, sp, #24
   14558:	mov	r8, r3
   1455c:	mov	r4, r2
   14560:	mov	r9, r1
   14564:	mov	r6, r0
   14568:	bl	14e90 <table_get_cell_ptr@@Base>
   1456c:	mov	r5, r0
   14570:	mov	r0, r6
   14574:	mov	r1, r4
   14578:	bl	12ff0 <table_get_col_ptr@@Base>
   1457c:	ldr	r0, [r0, #4]
   14580:	mvn	r7, #0
   14584:	cmp	r0, #5
   14588:	bne	145c8 <table_set_uint16@@Base+0x78>
   1458c:	ldr	r0, [r5]
   14590:	cmp	r0, #0
   14594:	bne	145ac <table_set_uint16@@Base+0x5c>
   14598:	mov	r0, #2
   1459c:	bl	11f1c <malloc@plt>
   145a0:	cmp	r0, #0
   145a4:	str	r0, [r5]
   145a8:	beq	145c8 <table_set_uint16@@Base+0x78>
   145ac:	strh	r8, [r0]
   145b0:	mov	r0, r6
   145b4:	mov	r1, r9
   145b8:	mov	r2, r4
   145bc:	mov	r3, #1
   145c0:	bl	12f24 <table_notify@@Base>
   145c4:	mov	r7, #0
   145c8:	mov	r0, r7
   145cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000145d0 <table_set_int32@@Base>:
   145d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   145d4:	add	fp, sp, #24
   145d8:	mov	r8, r3
   145dc:	mov	r4, r2
   145e0:	mov	r5, r1
   145e4:	mov	r6, r0
   145e8:	bl	14e90 <table_get_cell_ptr@@Base>
   145ec:	mov	r9, r0
   145f0:	mov	r0, r6
   145f4:	mov	r1, r4
   145f8:	bl	12ff0 <table_get_col_ptr@@Base>
   145fc:	ldr	r0, [r0, #4]
   14600:	mvn	r7, #0
   14604:	cmp	r0, #6
   14608:	bne	14648 <table_set_int32@@Base+0x78>
   1460c:	ldr	r0, [r9]
   14610:	cmp	r0, #0
   14614:	bne	1462c <table_set_int32@@Base+0x5c>
   14618:	mov	r0, #4
   1461c:	bl	11f1c <malloc@plt>
   14620:	cmp	r0, #0
   14624:	str	r0, [r9]
   14628:	beq	14648 <table_set_int32@@Base+0x78>
   1462c:	str	r8, [r0]
   14630:	mov	r0, r6
   14634:	mov	r1, r5
   14638:	mov	r2, r4
   1463c:	mov	r3, #1
   14640:	bl	12f24 <table_notify@@Base>
   14644:	mov	r7, #0
   14648:	mov	r0, r7
   1464c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014650 <table_set_uint32@@Base>:
   14650:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14654:	add	fp, sp, #24
   14658:	mov	r8, r3
   1465c:	mov	r4, r2
   14660:	mov	r5, r1
   14664:	mov	r6, r0
   14668:	bl	14e90 <table_get_cell_ptr@@Base>
   1466c:	mov	r9, r0
   14670:	mov	r0, r6
   14674:	mov	r1, r4
   14678:	bl	12ff0 <table_get_col_ptr@@Base>
   1467c:	ldr	r0, [r0, #4]
   14680:	mvn	r7, #0
   14684:	cmp	r0, #7
   14688:	bne	146c8 <table_set_uint32@@Base+0x78>
   1468c:	ldr	r0, [r9]
   14690:	cmp	r0, #0
   14694:	bne	146ac <table_set_uint32@@Base+0x5c>
   14698:	mov	r0, #4
   1469c:	bl	11f1c <malloc@plt>
   146a0:	cmp	r0, #0
   146a4:	str	r0, [r9]
   146a8:	beq	146c8 <table_set_uint32@@Base+0x78>
   146ac:	str	r8, [r0]
   146b0:	mov	r0, r6
   146b4:	mov	r1, r5
   146b8:	mov	r2, r4
   146bc:	mov	r3, #1
   146c0:	bl	12f24 <table_notify@@Base>
   146c4:	mov	r7, #0
   146c8:	mov	r0, r7
   146cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000146d0 <table_set_int64@@Base>:
   146d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   146d4:	add	fp, sp, #24
   146d8:	mov	r4, r2
   146dc:	mov	r8, r1
   146e0:	mov	r6, r0
   146e4:	bl	14e90 <table_get_cell_ptr@@Base>
   146e8:	mov	r5, r0
   146ec:	mov	r0, r6
   146f0:	mov	r1, r4
   146f4:	bl	12ff0 <table_get_col_ptr@@Base>
   146f8:	ldr	r0, [r0, #4]
   146fc:	mvn	r7, #0
   14700:	cmp	r0, #8
   14704:	bne	14750 <table_set_int64@@Base+0x80>
   14708:	ldr	r0, [r5]
   1470c:	cmp	r0, #0
   14710:	bne	14728 <table_set_int64@@Base+0x58>
   14714:	mov	r0, #8
   14718:	bl	11f1c <malloc@plt>
   1471c:	cmp	r0, #0
   14720:	str	r0, [r5]
   14724:	beq	14750 <table_set_int64@@Base+0x80>
   14728:	ldr	r1, [fp, #12]
   1472c:	ldr	r2, [fp, #8]
   14730:	mov	r3, #1
   14734:	str	r2, [r0]
   14738:	str	r1, [r0, #4]
   1473c:	mov	r0, r6
   14740:	mov	r1, r8
   14744:	mov	r2, r4
   14748:	bl	12f24 <table_notify@@Base>
   1474c:	mov	r7, #0
   14750:	mov	r0, r7
   14754:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014758 <table_set_uint64@@Base>:
   14758:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1475c:	add	fp, sp, #24
   14760:	mov	r4, r2
   14764:	mov	r8, r1
   14768:	mov	r6, r0
   1476c:	bl	14e90 <table_get_cell_ptr@@Base>
   14770:	mov	r5, r0
   14774:	mov	r0, r6
   14778:	mov	r1, r4
   1477c:	bl	12ff0 <table_get_col_ptr@@Base>
   14780:	ldr	r0, [r0, #4]
   14784:	mvn	r7, #0
   14788:	cmp	r0, #9
   1478c:	bne	147d8 <table_set_uint64@@Base+0x80>
   14790:	ldr	r0, [r5]
   14794:	cmp	r0, #0
   14798:	bne	147b0 <table_set_uint64@@Base+0x58>
   1479c:	mov	r0, #8
   147a0:	bl	11f1c <malloc@plt>
   147a4:	cmp	r0, #0
   147a8:	str	r0, [r5]
   147ac:	beq	147d8 <table_set_uint64@@Base+0x80>
   147b0:	ldr	r1, [fp, #12]
   147b4:	ldr	r2, [fp, #8]
   147b8:	mov	r3, #1
   147bc:	str	r2, [r0]
   147c0:	str	r1, [r0, #4]
   147c4:	mov	r0, r6
   147c8:	mov	r1, r8
   147cc:	mov	r2, r4
   147d0:	bl	12f24 <table_notify@@Base>
   147d4:	mov	r7, #0
   147d8:	mov	r0, r7
   147dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000147e0 <table_set_short@@Base>:
   147e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   147e4:	add	fp, sp, #24
   147e8:	mov	r8, r3
   147ec:	mov	r4, r2
   147f0:	mov	r9, r1
   147f4:	mov	r6, r0
   147f8:	bl	14e90 <table_get_cell_ptr@@Base>
   147fc:	mov	r5, r0
   14800:	mov	r0, r6
   14804:	mov	r1, r4
   14808:	bl	12ff0 <table_get_col_ptr@@Base>
   1480c:	ldr	r0, [r0, #4]
   14810:	mvn	r7, #0
   14814:	cmp	r0, #10
   14818:	bne	14858 <table_set_short@@Base+0x78>
   1481c:	ldr	r0, [r5]
   14820:	cmp	r0, #0
   14824:	bne	1483c <table_set_short@@Base+0x5c>
   14828:	mov	r0, #2
   1482c:	bl	11f1c <malloc@plt>
   14830:	cmp	r0, #0
   14834:	str	r0, [r5]
   14838:	beq	14858 <table_set_short@@Base+0x78>
   1483c:	strh	r8, [r0]
   14840:	mov	r0, r6
   14844:	mov	r1, r9
   14848:	mov	r2, r4
   1484c:	mov	r3, #1
   14850:	bl	12f24 <table_notify@@Base>
   14854:	mov	r7, #0
   14858:	mov	r0, r7
   1485c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014860 <table_set_ushort@@Base>:
   14860:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14864:	add	fp, sp, #24
   14868:	mov	r8, r3
   1486c:	mov	r4, r2
   14870:	mov	r9, r1
   14874:	mov	r6, r0
   14878:	bl	14e90 <table_get_cell_ptr@@Base>
   1487c:	mov	r5, r0
   14880:	mov	r0, r6
   14884:	mov	r1, r4
   14888:	bl	12ff0 <table_get_col_ptr@@Base>
   1488c:	ldr	r0, [r0, #4]
   14890:	mvn	r7, #0
   14894:	cmp	r0, #11
   14898:	bne	148d8 <table_set_ushort@@Base+0x78>
   1489c:	ldr	r0, [r5]
   148a0:	cmp	r0, #0
   148a4:	bne	148bc <table_set_ushort@@Base+0x5c>
   148a8:	mov	r0, #2
   148ac:	bl	11f1c <malloc@plt>
   148b0:	cmp	r0, #0
   148b4:	str	r0, [r5]
   148b8:	beq	148d8 <table_set_ushort@@Base+0x78>
   148bc:	strh	r8, [r0]
   148c0:	mov	r0, r6
   148c4:	mov	r1, r9
   148c8:	mov	r2, r4
   148cc:	mov	r3, #1
   148d0:	bl	12f24 <table_notify@@Base>
   148d4:	mov	r7, #0
   148d8:	mov	r0, r7
   148dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000148e0 <table_set_long@@Base>:
   148e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148e4:	add	fp, sp, #24
   148e8:	mov	r8, r3
   148ec:	mov	r4, r2
   148f0:	mov	r5, r1
   148f4:	mov	r6, r0
   148f8:	bl	14e90 <table_get_cell_ptr@@Base>
   148fc:	mov	r9, r0
   14900:	mov	r0, r6
   14904:	mov	r1, r4
   14908:	bl	12ff0 <table_get_col_ptr@@Base>
   1490c:	ldr	r0, [r0, #4]
   14910:	mvn	r7, #0
   14914:	cmp	r0, #12
   14918:	bne	14958 <table_set_long@@Base+0x78>
   1491c:	ldr	r0, [r9]
   14920:	cmp	r0, #0
   14924:	bne	1493c <table_set_long@@Base+0x5c>
   14928:	mov	r0, #4
   1492c:	bl	11f1c <malloc@plt>
   14930:	cmp	r0, #0
   14934:	str	r0, [r9]
   14938:	beq	14958 <table_set_long@@Base+0x78>
   1493c:	str	r8, [r0]
   14940:	mov	r0, r6
   14944:	mov	r1, r5
   14948:	mov	r2, r4
   1494c:	mov	r3, #1
   14950:	bl	12f24 <table_notify@@Base>
   14954:	mov	r7, #0
   14958:	mov	r0, r7
   1495c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014960 <table_set_ulong@@Base>:
   14960:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14964:	add	fp, sp, #24
   14968:	mov	r8, r3
   1496c:	mov	r4, r2
   14970:	mov	r5, r1
   14974:	mov	r6, r0
   14978:	bl	14e90 <table_get_cell_ptr@@Base>
   1497c:	mov	r9, r0
   14980:	mov	r0, r6
   14984:	mov	r1, r4
   14988:	bl	12ff0 <table_get_col_ptr@@Base>
   1498c:	ldr	r0, [r0, #4]
   14990:	mvn	r7, #0
   14994:	cmp	r0, #13
   14998:	bne	149d8 <table_set_ulong@@Base+0x78>
   1499c:	ldr	r0, [r9]
   149a0:	cmp	r0, #0
   149a4:	bne	149bc <table_set_ulong@@Base+0x5c>
   149a8:	mov	r0, #4
   149ac:	bl	11f1c <malloc@plt>
   149b0:	cmp	r0, #0
   149b4:	str	r0, [r9]
   149b8:	beq	149d8 <table_set_ulong@@Base+0x78>
   149bc:	str	r8, [r0]
   149c0:	mov	r0, r6
   149c4:	mov	r1, r5
   149c8:	mov	r2, r4
   149cc:	mov	r3, #1
   149d0:	bl	12f24 <table_notify@@Base>
   149d4:	mov	r7, #0
   149d8:	mov	r0, r7
   149dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000149e0 <table_set_llong@@Base>:
   149e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   149e4:	add	fp, sp, #24
   149e8:	mov	r4, r2
   149ec:	mov	r8, r1
   149f0:	mov	r6, r0
   149f4:	bl	14e90 <table_get_cell_ptr@@Base>
   149f8:	mov	r5, r0
   149fc:	mov	r0, r6
   14a00:	mov	r1, r4
   14a04:	bl	12ff0 <table_get_col_ptr@@Base>
   14a08:	ldr	r0, [r0, #4]
   14a0c:	mvn	r7, #0
   14a10:	cmp	r0, #14
   14a14:	bne	14a60 <table_set_llong@@Base+0x80>
   14a18:	ldr	r0, [r5]
   14a1c:	cmp	r0, #0
   14a20:	bne	14a38 <table_set_llong@@Base+0x58>
   14a24:	mov	r0, #8
   14a28:	bl	11f1c <malloc@plt>
   14a2c:	cmp	r0, #0
   14a30:	str	r0, [r5]
   14a34:	beq	14a60 <table_set_llong@@Base+0x80>
   14a38:	ldr	r1, [fp, #12]
   14a3c:	ldr	r2, [fp, #8]
   14a40:	mov	r3, #1
   14a44:	str	r2, [r0]
   14a48:	str	r1, [r0, #4]
   14a4c:	mov	r0, r6
   14a50:	mov	r1, r8
   14a54:	mov	r2, r4
   14a58:	bl	12f24 <table_notify@@Base>
   14a5c:	mov	r7, #0
   14a60:	mov	r0, r7
   14a64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014a68 <table_set_ullong@@Base>:
   14a68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a6c:	add	fp, sp, #24
   14a70:	mov	r4, r2
   14a74:	mov	r8, r1
   14a78:	mov	r6, r0
   14a7c:	bl	14e90 <table_get_cell_ptr@@Base>
   14a80:	mov	r5, r0
   14a84:	mov	r0, r6
   14a88:	mov	r1, r4
   14a8c:	bl	12ff0 <table_get_col_ptr@@Base>
   14a90:	ldr	r0, [r0, #4]
   14a94:	mvn	r7, #0
   14a98:	cmp	r0, #15
   14a9c:	bne	14ae8 <table_set_ullong@@Base+0x80>
   14aa0:	ldr	r0, [r5]
   14aa4:	cmp	r0, #0
   14aa8:	bne	14ac0 <table_set_ullong@@Base+0x58>
   14aac:	mov	r0, #8
   14ab0:	bl	11f1c <malloc@plt>
   14ab4:	cmp	r0, #0
   14ab8:	str	r0, [r5]
   14abc:	beq	14ae8 <table_set_ullong@@Base+0x80>
   14ac0:	ldr	r1, [fp, #12]
   14ac4:	ldr	r2, [fp, #8]
   14ac8:	mov	r3, #1
   14acc:	str	r2, [r0]
   14ad0:	str	r1, [r0, #4]
   14ad4:	mov	r0, r6
   14ad8:	mov	r1, r8
   14adc:	mov	r2, r4
   14ae0:	bl	12f24 <table_notify@@Base>
   14ae4:	mov	r7, #0
   14ae8:	mov	r0, r7
   14aec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014af0 <table_set_float@@Base>:
   14af0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14af4:	add	fp, sp, #24
   14af8:	vpush	{d8}
   14afc:	vmov.f32	s16, s0
   14b00:	mov	r4, r2
   14b04:	mov	r8, r1
   14b08:	mov	r6, r0
   14b0c:	bl	14e90 <table_get_cell_ptr@@Base>
   14b10:	mov	r5, r0
   14b14:	mov	r0, r6
   14b18:	mov	r1, r4
   14b1c:	bl	12ff0 <table_get_col_ptr@@Base>
   14b20:	ldr	r0, [r0, #4]
   14b24:	mvn	r7, #0
   14b28:	cmp	r0, #16
   14b2c:	bne	14b70 <table_set_float@@Base+0x80>
   14b30:	ldr	r0, [r5]
   14b34:	cmp	r0, #0
   14b38:	bne	14b50 <table_set_float@@Base+0x60>
   14b3c:	mov	r0, #4
   14b40:	bl	11f1c <malloc@plt>
   14b44:	cmp	r0, #0
   14b48:	str	r0, [r5]
   14b4c:	beq	14b70 <table_set_float@@Base+0x80>
   14b50:	vmov	r1, s16
   14b54:	mov	r2, r4
   14b58:	mov	r3, #1
   14b5c:	str	r1, [r0]
   14b60:	mov	r0, r6
   14b64:	mov	r1, r8
   14b68:	bl	12f24 <table_notify@@Base>
   14b6c:	mov	r7, #0
   14b70:	mov	r0, r7
   14b74:	vpop	{d8}
   14b78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014b7c <table_set_double@@Base>:
   14b7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b80:	add	fp, sp, #24
   14b84:	vpush	{d8}
   14b88:	vorr	d8, d0, d0
   14b8c:	mov	r4, r2
   14b90:	mov	r5, r1
   14b94:	mov	r6, r0
   14b98:	bl	14e90 <table_get_cell_ptr@@Base>
   14b9c:	mov	r8, r0
   14ba0:	mov	r0, r6
   14ba4:	mov	r1, r4
   14ba8:	bl	12ff0 <table_get_col_ptr@@Base>
   14bac:	ldr	r0, [r0, #4]
   14bb0:	mvn	r7, #0
   14bb4:	cmp	r0, #17
   14bb8:	bne	14bf8 <table_set_double@@Base+0x7c>
   14bbc:	ldr	r0, [r8]
   14bc0:	cmp	r0, #0
   14bc4:	bne	14bdc <table_set_double@@Base+0x60>
   14bc8:	mov	r0, #8
   14bcc:	bl	11f1c <malloc@plt>
   14bd0:	cmp	r0, #0
   14bd4:	str	r0, [r8]
   14bd8:	beq	14bf8 <table_set_double@@Base+0x7c>
   14bdc:	vst1.8	{d8}, [r0]
   14be0:	mov	r0, r6
   14be4:	mov	r1, r5
   14be8:	mov	r2, r4
   14bec:	mov	r3, #1
   14bf0:	bl	12f24 <table_notify@@Base>
   14bf4:	mov	r7, #0
   14bf8:	mov	r0, r7
   14bfc:	vpop	{d8}
   14c00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014c04 <table_set_ldouble@@Base>:
   14c04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14c08:	add	fp, sp, #24
   14c0c:	vpush	{d8}
   14c10:	vorr	d8, d0, d0
   14c14:	mov	r4, r2
   14c18:	mov	r5, r1
   14c1c:	mov	r6, r0
   14c20:	bl	14e90 <table_get_cell_ptr@@Base>
   14c24:	mov	r8, r0
   14c28:	mov	r0, r6
   14c2c:	mov	r1, r4
   14c30:	bl	12ff0 <table_get_col_ptr@@Base>
   14c34:	ldr	r0, [r0, #4]
   14c38:	mvn	r7, #0
   14c3c:	cmp	r0, #18
   14c40:	bne	14c80 <table_set_ldouble@@Base+0x7c>
   14c44:	ldr	r0, [r8]
   14c48:	cmp	r0, #0
   14c4c:	bne	14c64 <table_set_ldouble@@Base+0x60>
   14c50:	mov	r0, #8
   14c54:	bl	11f1c <malloc@plt>
   14c58:	cmp	r0, #0
   14c5c:	str	r0, [r8]
   14c60:	beq	14c80 <table_set_ldouble@@Base+0x7c>
   14c64:	vst1.8	{d8}, [r0]
   14c68:	mov	r0, r6
   14c6c:	mov	r1, r5
   14c70:	mov	r2, r4
   14c74:	mov	r3, #1
   14c78:	bl	12f24 <table_notify@@Base>
   14c7c:	mov	r7, #0
   14c80:	mov	r0, r7
   14c84:	vpop	{d8}
   14c88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014c8c <table_set_string@@Base>:
   14c8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14c90:	add	fp, sp, #24
   14c94:	mov	r8, r3
   14c98:	mov	r4, r2
   14c9c:	mov	r9, r1
   14ca0:	mov	r6, r0
   14ca4:	bl	14e90 <table_get_cell_ptr@@Base>
   14ca8:	mov	r5, r0
   14cac:	mov	r0, r6
   14cb0:	mov	r1, r4
   14cb4:	bl	12ff0 <table_get_col_ptr@@Base>
   14cb8:	ldr	r0, [r0, #4]
   14cbc:	mvn	r7, #0
   14cc0:	cmp	r0, #21
   14cc4:	bne	14d0c <table_set_string@@Base+0x80>
   14cc8:	mov	r0, r8
   14ccc:	bl	11f40 <strlen@plt>
   14cd0:	ldr	r2, [r5]
   14cd4:	add	r1, r0, #1
   14cd8:	mov	r0, r2
   14cdc:	bl	11f04 <realloc@plt>
   14ce0:	cmp	r0, #0
   14ce4:	str	r0, [r5]
   14ce8:	beq	14d0c <table_set_string@@Base+0x80>
   14cec:	mov	r1, r8
   14cf0:	bl	11f10 <strcpy@plt>
   14cf4:	mov	r0, r6
   14cf8:	mov	r1, r9
   14cfc:	mov	r2, r4
   14d00:	mov	r3, #1
   14d04:	bl	12f24 <table_notify@@Base>
   14d08:	mov	r7, #0
   14d0c:	mov	r0, r7
   14d10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014d14 <table_set_char@@Base>:
   14d14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d18:	add	fp, sp, #24
   14d1c:	mov	r8, r3
   14d20:	mov	r4, r2
   14d24:	mov	r9, r1
   14d28:	mov	r6, r0
   14d2c:	bl	14e90 <table_get_cell_ptr@@Base>
   14d30:	mov	r5, r0
   14d34:	mov	r0, r6
   14d38:	mov	r1, r4
   14d3c:	bl	12ff0 <table_get_col_ptr@@Base>
   14d40:	ldr	r0, [r0, #4]
   14d44:	mvn	r7, #0
   14d48:	cmp	r0, #19
   14d4c:	bne	14d8c <table_set_char@@Base+0x78>
   14d50:	ldr	r0, [r5]
   14d54:	cmp	r0, #0
   14d58:	bne	14d70 <table_set_char@@Base+0x5c>
   14d5c:	mov	r0, #1
   14d60:	bl	11f1c <malloc@plt>
   14d64:	cmp	r0, #0
   14d68:	str	r0, [r5]
   14d6c:	beq	14d8c <table_set_char@@Base+0x78>
   14d70:	strb	r8, [r0]
   14d74:	mov	r0, r6
   14d78:	mov	r1, r9
   14d7c:	mov	r2, r4
   14d80:	mov	r3, #1
   14d84:	bl	12f24 <table_notify@@Base>
   14d88:	mov	r7, #0
   14d8c:	mov	r0, r7
   14d90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014d94 <table_set_uchar@@Base>:
   14d94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d98:	add	fp, sp, #24
   14d9c:	mov	r8, r3
   14da0:	mov	r4, r2
   14da4:	mov	r9, r1
   14da8:	mov	r6, r0
   14dac:	bl	14e90 <table_get_cell_ptr@@Base>
   14db0:	mov	r5, r0
   14db4:	mov	r0, r6
   14db8:	mov	r1, r4
   14dbc:	bl	12ff0 <table_get_col_ptr@@Base>
   14dc0:	ldr	r0, [r0, #4]
   14dc4:	mvn	r7, #0
   14dc8:	cmp	r0, #20
   14dcc:	bne	14e0c <table_set_uchar@@Base+0x78>
   14dd0:	ldr	r0, [r5]
   14dd4:	cmp	r0, #0
   14dd8:	bne	14df0 <table_set_uchar@@Base+0x5c>
   14ddc:	mov	r0, #1
   14de0:	bl	11f1c <malloc@plt>
   14de4:	cmp	r0, #0
   14de8:	str	r0, [r5]
   14dec:	beq	14e0c <table_set_uchar@@Base+0x78>
   14df0:	strb	r8, [r0]
   14df4:	mov	r0, r6
   14df8:	mov	r1, r9
   14dfc:	mov	r2, r4
   14e00:	mov	r3, #1
   14e04:	bl	12f24 <table_notify@@Base>
   14e08:	mov	r7, #0
   14e0c:	mov	r0, r7
   14e10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014e14 <table_set_ptr@@Base>:
   14e14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e18:	add	fp, sp, #24
   14e1c:	mov	r8, r3
   14e20:	mov	r4, r2
   14e24:	mov	r5, r1
   14e28:	mov	r6, r0
   14e2c:	bl	14e90 <table_get_cell_ptr@@Base>
   14e30:	mov	r7, r0
   14e34:	mov	r0, r6
   14e38:	mov	r1, r4
   14e3c:	bl	12ff0 <table_get_col_ptr@@Base>
   14e40:	ldr	r1, [r0, #4]
   14e44:	mvn	r0, #0
   14e48:	cmp	r1, #23
   14e4c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   14e50:	mov	r0, r6
   14e54:	mov	r1, r5
   14e58:	mov	r2, r4
   14e5c:	mov	r3, #1
   14e60:	str	r8, [r7]
   14e64:	bl	12f24 <table_notify@@Base>
   14e68:	mov	r0, #0
   14e6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014e70 <table_cell_init@@Base>:
   14e70:	push	{r4, sl, fp, lr}
   14e74:	add	fp, sp, #8
   14e78:	mov	r4, r2
   14e7c:	bl	13d0c <table_get_row_ptr@@Base>
   14e80:	ldr	r0, [r0]
   14e84:	mov	r1, #0
   14e88:	str	r1, [r0, r4, lsl #2]
   14e8c:	pop	{r4, sl, fp, pc}

00014e90 <table_get_cell_ptr@@Base>:
   14e90:	push	{r4, sl, fp, lr}
   14e94:	add	fp, sp, #8
   14e98:	mov	r4, r2
   14e9c:	bl	13d0c <table_get_row_ptr@@Base>
   14ea0:	ldr	r0, [r0]
   14ea4:	add	r0, r0, r4, lsl #2
   14ea8:	pop	{r4, sl, fp, pc}

00014eac <table_cell_destroy@@Base>:
   14eac:	push	{r4, r5, r6, sl, fp, lr}
   14eb0:	add	fp, sp, #16
   14eb4:	mov	r5, r1
   14eb8:	mov	r1, r2
   14ebc:	mov	r4, r2
   14ec0:	mov	r6, r0
   14ec4:	bl	13098 <table_get_column_data_type@@Base>
   14ec8:	cmp	r0, #23
   14ecc:	popeq	{r4, r5, r6, sl, fp, pc}
   14ed0:	mov	r0, r6
   14ed4:	mov	r1, r5
   14ed8:	bl	13d0c <table_get_row_ptr@@Base>
   14edc:	ldr	r0, [r0]
   14ee0:	ldr	r0, [r0, r4, lsl #2]
   14ee4:	cmp	r0, #0
   14ee8:	beq	14ef4 <table_cell_destroy@@Base+0x48>
   14eec:	pop	{r4, r5, r6, sl, fp, lr}
   14ef0:	b	11eec <free@plt>
   14ef4:	pop	{r4, r5, r6, sl, fp, pc}

00014ef8 <table_cell_to_buffer@@Base>:
   14ef8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14efc:	add	fp, sp, #24
   14f00:	sub	sp, sp, #8
   14f04:	mov	r7, r1
   14f08:	mov	r1, r2
   14f0c:	mov	r5, r3
   14f10:	mov	r6, r2
   14f14:	mov	r4, r0
   14f18:	bl	13098 <table_get_column_data_type@@Base>
   14f1c:	cmp	r0, #23
   14f20:	bhi	15190 <table_cell_to_buffer@@Base+0x298>
   14f24:	ldr	r8, [fp, #8]
   14f28:	add	r1, pc, #0
   14f2c:	ldr	pc, [r1, r0, lsl #2]
   14f30:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   14f34:	andeq	r4, r1, r4, lsr #31
   14f38:			; <UNDEFINED> instruction: 0x00014fb8
   14f3c:	andeq	r4, r1, ip, asr #31
   14f40:	andeq	r4, r1, r0, ror #31
   14f44:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14f48:	andeq	r5, r1, r8
   14f4c:	andeq	r5, r1, ip, lsl r0
   14f50:	andeq	r5, r1, ip, lsr r0
   14f54:	andeq	r5, r1, r0, asr r0
   14f58:	andeq	r5, r1, r4, rrx
   14f5c:	andeq	r5, r1, r4, lsl #1
   14f60:	andeq	r5, r1, r4, lsr #1
   14f64:	andeq	r5, r1, r4, asr #1
   14f68:	andeq	r5, r1, r4, ror #1
   14f6c:	andeq	r5, r1, r4, lsl #2
   14f70:	andeq	r5, r1, r4, lsr #2
   14f74:	andeq	r5, r1, r8, asr #2
   14f78:	andeq	r5, r1, r8, ror #2
   14f7c:	muleq	r1, ip, r1
   14f80:			; <UNDEFINED> instruction: 0x000151b0
   14f84:	ldrdeq	r5, [r1], -r0
   14f88:	strdeq	r5, [r1], -r0
   14f8c:	andeq	r5, r1, r4, lsr #4
   14f90:	mov	r0, r4
   14f94:	mov	r1, r7
   14f98:	mov	r2, r6
   14f9c:	bl	13ac8 <table_get_int@@Base>
   14fa0:	b	15200 <table_cell_to_buffer@@Base+0x308>
   14fa4:	mov	r0, r4
   14fa8:	mov	r1, r7
   14fac:	mov	r2, r6
   14fb0:	bl	13ae0 <table_get_uint@@Base>
   14fb4:	b	1502c <table_cell_to_buffer@@Base+0x134>
   14fb8:	mov	r0, r4
   14fbc:	mov	r1, r7
   14fc0:	mov	r2, r6
   14fc4:	bl	13af8 <table_get_int8@@Base>
   14fc8:	b	15200 <table_cell_to_buffer@@Base+0x308>
   14fcc:	mov	r0, r4
   14fd0:	mov	r1, r7
   14fd4:	mov	r2, r6
   14fd8:	bl	13b10 <table_get_uint8@@Base>
   14fdc:	b	1502c <table_cell_to_buffer@@Base+0x134>
   14fe0:	mov	r0, r4
   14fe4:	mov	r1, r7
   14fe8:	mov	r2, r6
   14fec:	bl	13b28 <table_get_int16@@Base>
   14ff0:	b	15200 <table_cell_to_buffer@@Base+0x308>
   14ff4:	mov	r0, r4
   14ff8:	mov	r1, r7
   14ffc:	mov	r2, r6
   15000:	bl	13b40 <table_get_uint16@@Base>
   15004:	b	1502c <table_cell_to_buffer@@Base+0x134>
   15008:	mov	r0, r4
   1500c:	mov	r1, r7
   15010:	mov	r2, r6
   15014:	bl	13b58 <table_get_int32@@Base>
   15018:	b	15200 <table_cell_to_buffer@@Base+0x308>
   1501c:	mov	r0, r4
   15020:	mov	r1, r7
   15024:	mov	r2, r6
   15028:	bl	13b70 <table_get_uint32@@Base>
   1502c:	movw	r2, #22931	; 0x5993
   15030:	mov	r3, r0
   15034:	movt	r2, #1
   15038:	b	1520c <table_cell_to_buffer@@Base+0x314>
   1503c:	mov	r0, r4
   15040:	mov	r1, r7
   15044:	mov	r2, r6
   15048:	bl	13b88 <table_get_int64@@Base>
   1504c:	b	150f4 <table_cell_to_buffer@@Base+0x1fc>
   15050:	mov	r0, r4
   15054:	mov	r1, r7
   15058:	mov	r2, r6
   1505c:	bl	13ba0 <table_get_uint64@@Base>
   15060:	b	15114 <table_cell_to_buffer@@Base+0x21c>
   15064:	mov	r0, r4
   15068:	mov	r1, r7
   1506c:	mov	r2, r6
   15070:	bl	13bb8 <table_get_short@@Base>
   15074:	movw	r2, #22944	; 0x59a0
   15078:	mov	r3, r0
   1507c:	movt	r2, #1
   15080:	b	1520c <table_cell_to_buffer@@Base+0x314>
   15084:	mov	r0, r4
   15088:	mov	r1, r7
   1508c:	mov	r2, r6
   15090:	bl	13bd0 <table_get_ushort@@Base>
   15094:	movw	r2, #22948	; 0x59a4
   15098:	mov	r3, r0
   1509c:	movt	r2, #1
   150a0:	b	1520c <table_cell_to_buffer@@Base+0x314>
   150a4:	mov	r0, r4
   150a8:	mov	r1, r7
   150ac:	mov	r2, r6
   150b0:	bl	13be8 <table_get_long@@Base>
   150b4:	movw	r2, #22952	; 0x59a8
   150b8:	mov	r3, r0
   150bc:	movt	r2, #1
   150c0:	b	1520c <table_cell_to_buffer@@Base+0x314>
   150c4:	mov	r0, r4
   150c8:	mov	r1, r7
   150cc:	mov	r2, r6
   150d0:	bl	13c00 <table_get_ulong@@Base>
   150d4:	movw	r2, #22956	; 0x59ac
   150d8:	mov	r3, r0
   150dc:	movt	r2, #1
   150e0:	b	1520c <table_cell_to_buffer@@Base+0x314>
   150e4:	mov	r0, r4
   150e8:	mov	r1, r7
   150ec:	mov	r2, r6
   150f0:	bl	13c18 <table_get_llong@@Base>
   150f4:	movw	r2, #22934	; 0x5996
   150f8:	stm	sp, {r0, r1}
   150fc:	movt	r2, #1
   15100:	b	15184 <table_cell_to_buffer@@Base+0x28c>
   15104:	mov	r0, r4
   15108:	mov	r1, r7
   1510c:	mov	r2, r6
   15110:	bl	13c30 <table_get_ullong@@Base>
   15114:	movw	r2, #22939	; 0x599b
   15118:	stm	sp, {r0, r1}
   1511c:	movt	r2, #1
   15120:	b	15184 <table_cell_to_buffer@@Base+0x28c>
   15124:	mov	r0, r4
   15128:	mov	r1, r7
   1512c:	mov	r2, r6
   15130:	bl	13c48 <table_get_float@@Base>
   15134:	movw	r2, #22963	; 0x59b3
   15138:	vcvt.f64.f32	d16, s0
   1513c:	vstr	d16, [sp]
   15140:	movt	r2, #1
   15144:	b	15184 <table_cell_to_buffer@@Base+0x28c>
   15148:	mov	r0, r4
   1514c:	mov	r1, r7
   15150:	mov	r2, r6
   15154:	bl	13c60 <table_get_double@@Base>
   15158:	movw	r2, #22966	; 0x59b6
   1515c:	vstr	d0, [sp]
   15160:	movt	r2, #1
   15164:	b	15184 <table_cell_to_buffer@@Base+0x28c>
   15168:	mov	r0, r4
   1516c:	mov	r1, r7
   15170:	mov	r2, r6
   15174:	bl	13c78 <table_get_ldouble@@Base>
   15178:	movw	r2, #22970	; 0x59ba
   1517c:	vstr	d0, [sp]
   15180:	movt	r2, #1
   15184:	mov	r0, r5
   15188:	mov	r1, r8
   1518c:	bl	11f58 <snprintf@plt>
   15190:	mov	r0, #0
   15194:	sub	sp, fp, #24
   15198:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1519c:	mov	r0, r4
   151a0:	mov	r1, r7
   151a4:	mov	r2, r6
   151a8:	bl	13c90 <table_get_char@@Base>
   151ac:	b	151c0 <table_cell_to_buffer@@Base+0x2c8>
   151b0:	mov	r0, r4
   151b4:	mov	r1, r7
   151b8:	mov	r2, r6
   151bc:	bl	13ca8 <table_get_uchar@@Base>
   151c0:	movw	r2, #22974	; 0x59be
   151c4:	mov	r3, r0
   151c8:	movt	r2, #1
   151cc:	b	1520c <table_cell_to_buffer@@Base+0x314>
   151d0:	mov	r0, r4
   151d4:	mov	r1, r7
   151d8:	mov	r2, r6
   151dc:	bl	13cc0 <table_get_string@@Base>
   151e0:	movw	r2, #22960	; 0x59b0
   151e4:	mov	r3, r0
   151e8:	movt	r2, #1
   151ec:	b	1520c <table_cell_to_buffer@@Base+0x314>
   151f0:	mov	r0, r4
   151f4:	mov	r1, r7
   151f8:	mov	r2, r6
   151fc:	bl	13ab0 <table_get_bool@@Base>
   15200:	movw	r2, #22928	; 0x5990
   15204:	mov	r3, r0
   15208:	movt	r2, #1
   1520c:	mov	r0, r5
   15210:	mov	r1, r8
   15214:	bl	11f58 <snprintf@plt>
   15218:	mov	r0, #0
   1521c:	sub	sp, fp, #24
   15220:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15224:	mov	r0, r4
   15228:	mov	r1, r7
   1522c:	mov	r2, r6
   15230:	bl	13cd4 <table_get_ptr@@Base>
   15234:	movw	r2, #22977	; 0x59c1
   15238:	mov	r3, r0
   1523c:	movt	r2, #1
   15240:	b	1520c <table_cell_to_buffer@@Base+0x314>

00015244 <table_cell_from_buffer@@Base>:
   15244:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15248:	add	fp, sp, #24
   1524c:	sub	sp, sp, #264	; 0x108
   15250:	mov	r5, r1
   15254:	mov	r1, r2
   15258:	mov	r7, r3
   1525c:	mov	r4, r2
   15260:	mov	r6, r0
   15264:	bl	13098 <table_get_column_data_type@@Base>
   15268:	cmp	r0, #23
   1526c:	bhi	15840 <table_cell_from_buffer@@Base+0x5fc>
   15270:	add	r1, pc, #0
   15274:	ldr	pc, [r1, r0, lsl #2]
   15278:	ldrdeq	r5, [r1], -r8
   1527c:	andeq	r5, r1, r0, lsl r3
   15280:	andeq	r5, r1, r8, asr #6
   15284:	andeq	r5, r1, r0, lsl #7
   15288:			; <UNDEFINED> instruction: 0x000153b8
   1528c:	strdeq	r5, [r1], -r0
   15290:	andeq	r5, r1, r8, lsr #8
   15294:	andeq	r5, r1, r0, ror #8
   15298:	muleq	r1, r8, r4
   1529c:	ldrdeq	r5, [r1], -r8
   152a0:	andeq	r5, r1, r8, lsl r5
   152a4:	andeq	r5, r1, r0, asr r5
   152a8:	andeq	r5, r1, r8, lsl #11
   152ac:	andeq	r5, r1, r0, asr #11
   152b0:	strdeq	r5, [r1], -r8
   152b4:	andeq	r5, r1, r8, lsr r6
   152b8:	andeq	r5, r1, r8, ror r6
   152bc:			; <UNDEFINED> instruction: 0x000156b0
   152c0:	andeq	r5, r1, r8, ror #13
   152c4:	andeq	r5, r1, r0, lsr #14
   152c8:	andeq	r5, r1, r8, asr r7
   152cc:	muleq	r1, r0, r7
   152d0:	andeq	r5, r1, r8, asr #15
   152d4:	andeq	r5, r1, ip, lsl #16
   152d8:	movw	r1, #22928	; 0x5990
   152dc:	add	r2, sp, #8
   152e0:	mov	r0, r7
   152e4:	movt	r1, #1
   152e8:	bl	11f64 <__isoc99_sscanf@plt>
   152ec:	mvn	r7, #0
   152f0:	cmp	r0, #1
   152f4:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   152f8:	ldr	r3, [sp, #8]
   152fc:	mov	r0, r6
   15300:	mov	r1, r5
   15304:	mov	r2, r4
   15308:	bl	142d0 <table_set_int@@Base>
   1530c:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15310:	movw	r1, #22931	; 0x5993
   15314:	add	r2, sp, #8
   15318:	mov	r0, r7
   1531c:	movt	r1, #1
   15320:	bl	11f64 <__isoc99_sscanf@plt>
   15324:	mvn	r7, #0
   15328:	cmp	r0, #1
   1532c:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15330:	ldr	r3, [sp, #8]
   15334:	mov	r0, r6
   15338:	mov	r1, r5
   1533c:	mov	r2, r4
   15340:	bl	14350 <table_set_uint@@Base>
   15344:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15348:	movw	r1, #22980	; 0x59c4
   1534c:	add	r2, sp, #8
   15350:	mov	r0, r7
   15354:	movt	r1, #1
   15358:	bl	11f64 <__isoc99_sscanf@plt>
   1535c:	mvn	r7, #0
   15360:	cmp	r0, #1
   15364:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15368:	ldrsb	r3, [sp, #8]
   1536c:	mov	r0, r6
   15370:	mov	r1, r5
   15374:	mov	r2, r4
   15378:	bl	143d0 <table_set_int8@@Base>
   1537c:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15380:	movw	r1, #22985	; 0x59c9
   15384:	add	r2, sp, #8
   15388:	mov	r0, r7
   1538c:	movt	r1, #1
   15390:	bl	11f64 <__isoc99_sscanf@plt>
   15394:	mvn	r7, #0
   15398:	cmp	r0, #1
   1539c:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   153a0:	ldrb	r3, [sp, #8]
   153a4:	mov	r0, r6
   153a8:	mov	r1, r5
   153ac:	mov	r2, r4
   153b0:	bl	14450 <table_set_uint8@@Base>
   153b4:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   153b8:	movw	r1, #22944	; 0x59a0
   153bc:	add	r2, sp, #8
   153c0:	mov	r0, r7
   153c4:	movt	r1, #1
   153c8:	bl	11f64 <__isoc99_sscanf@plt>
   153cc:	mvn	r7, #0
   153d0:	cmp	r0, #1
   153d4:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   153d8:	ldrsh	r3, [sp, #8]
   153dc:	mov	r0, r6
   153e0:	mov	r1, r5
   153e4:	mov	r2, r4
   153e8:	bl	144d0 <table_set_int16@@Base>
   153ec:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   153f0:	movw	r1, #22948	; 0x59a4
   153f4:	add	r2, sp, #8
   153f8:	mov	r0, r7
   153fc:	movt	r1, #1
   15400:	bl	11f64 <__isoc99_sscanf@plt>
   15404:	mvn	r7, #0
   15408:	cmp	r0, #1
   1540c:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15410:	ldrh	r3, [sp, #8]
   15414:	mov	r0, r6
   15418:	mov	r1, r5
   1541c:	mov	r2, r4
   15420:	bl	14550 <table_set_uint16@@Base>
   15424:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15428:	movw	r1, #22928	; 0x5990
   1542c:	add	r2, sp, #8
   15430:	mov	r0, r7
   15434:	movt	r1, #1
   15438:	bl	11f64 <__isoc99_sscanf@plt>
   1543c:	mvn	r7, #0
   15440:	cmp	r0, #1
   15444:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15448:	ldr	r3, [sp, #8]
   1544c:	mov	r0, r6
   15450:	mov	r1, r5
   15454:	mov	r2, r4
   15458:	bl	145d0 <table_set_int32@@Base>
   1545c:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15460:	movw	r1, #22931	; 0x5993
   15464:	add	r2, sp, #8
   15468:	mov	r0, r7
   1546c:	movt	r1, #1
   15470:	bl	11f64 <__isoc99_sscanf@plt>
   15474:	mvn	r7, #0
   15478:	cmp	r0, #1
   1547c:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15480:	ldr	r3, [sp, #8]
   15484:	mov	r0, r6
   15488:	mov	r1, r5
   1548c:	mov	r2, r4
   15490:	bl	14650 <table_set_uint32@@Base>
   15494:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15498:	movw	r1, #22934	; 0x5996
   1549c:	add	r2, sp, #8
   154a0:	mov	r0, r7
   154a4:	movt	r1, #1
   154a8:	bl	11f64 <__isoc99_sscanf@plt>
   154ac:	mvn	r7, #0
   154b0:	cmp	r0, #1
   154b4:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   154b8:	ldr	r0, [sp, #8]
   154bc:	ldr	r1, [sp, #12]
   154c0:	mov	r2, r4
   154c4:	stm	sp, {r0, r1}
   154c8:	mov	r0, r6
   154cc:	mov	r1, r5
   154d0:	bl	146d0 <table_set_int64@@Base>
   154d4:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   154d8:	movw	r1, #22939	; 0x599b
   154dc:	add	r2, sp, #8
   154e0:	mov	r0, r7
   154e4:	movt	r1, #1
   154e8:	bl	11f64 <__isoc99_sscanf@plt>
   154ec:	mvn	r7, #0
   154f0:	cmp	r0, #1
   154f4:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   154f8:	ldr	r0, [sp, #8]
   154fc:	ldr	r1, [sp, #12]
   15500:	mov	r2, r4
   15504:	stm	sp, {r0, r1}
   15508:	mov	r0, r6
   1550c:	mov	r1, r5
   15510:	bl	14758 <table_set_uint64@@Base>
   15514:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15518:	movw	r1, #22944	; 0x59a0
   1551c:	add	r2, sp, #8
   15520:	mov	r0, r7
   15524:	movt	r1, #1
   15528:	bl	11f64 <__isoc99_sscanf@plt>
   1552c:	mvn	r7, #0
   15530:	cmp	r0, #1
   15534:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15538:	ldrsh	r3, [sp, #8]
   1553c:	mov	r0, r6
   15540:	mov	r1, r5
   15544:	mov	r2, r4
   15548:	bl	147e0 <table_set_short@@Base>
   1554c:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15550:	movw	r1, #22948	; 0x59a4
   15554:	add	r2, sp, #8
   15558:	mov	r0, r7
   1555c:	movt	r1, #1
   15560:	bl	11f64 <__isoc99_sscanf@plt>
   15564:	mvn	r7, #0
   15568:	cmp	r0, #1
   1556c:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15570:	ldrh	r3, [sp, #8]
   15574:	mov	r0, r6
   15578:	mov	r1, r5
   1557c:	mov	r2, r4
   15580:	bl	14860 <table_set_ushort@@Base>
   15584:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15588:	movw	r1, #22952	; 0x59a8
   1558c:	add	r2, sp, #8
   15590:	mov	r0, r7
   15594:	movt	r1, #1
   15598:	bl	11f64 <__isoc99_sscanf@plt>
   1559c:	mvn	r7, #0
   155a0:	cmp	r0, #1
   155a4:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   155a8:	ldr	r3, [sp, #8]
   155ac:	mov	r0, r6
   155b0:	mov	r1, r5
   155b4:	mov	r2, r4
   155b8:	bl	148e0 <table_set_long@@Base>
   155bc:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   155c0:	movw	r1, #22956	; 0x59ac
   155c4:	add	r2, sp, #8
   155c8:	mov	r0, r7
   155cc:	movt	r1, #1
   155d0:	bl	11f64 <__isoc99_sscanf@plt>
   155d4:	mvn	r7, #0
   155d8:	cmp	r0, #1
   155dc:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   155e0:	ldr	r3, [sp, #8]
   155e4:	mov	r0, r6
   155e8:	mov	r1, r5
   155ec:	mov	r2, r4
   155f0:	bl	14960 <table_set_ulong@@Base>
   155f4:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   155f8:	movw	r1, #22934	; 0x5996
   155fc:	add	r2, sp, #8
   15600:	mov	r0, r7
   15604:	movt	r1, #1
   15608:	bl	11f64 <__isoc99_sscanf@plt>
   1560c:	mvn	r7, #0
   15610:	cmp	r0, #1
   15614:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15618:	ldr	r0, [sp, #8]
   1561c:	ldr	r1, [sp, #12]
   15620:	mov	r2, r4
   15624:	stm	sp, {r0, r1}
   15628:	mov	r0, r6
   1562c:	mov	r1, r5
   15630:	bl	149e0 <table_set_llong@@Base>
   15634:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15638:	movw	r1, #22939	; 0x599b
   1563c:	add	r2, sp, #8
   15640:	mov	r0, r7
   15644:	movt	r1, #1
   15648:	bl	11f64 <__isoc99_sscanf@plt>
   1564c:	mvn	r7, #0
   15650:	cmp	r0, #1
   15654:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15658:	ldr	r0, [sp, #8]
   1565c:	ldr	r1, [sp, #12]
   15660:	mov	r2, r4
   15664:	stm	sp, {r0, r1}
   15668:	mov	r0, r6
   1566c:	mov	r1, r5
   15670:	bl	14a68 <table_set_ullong@@Base>
   15674:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15678:	movw	r1, #22963	; 0x59b3
   1567c:	add	r2, sp, #8
   15680:	mov	r0, r7
   15684:	movt	r1, #1
   15688:	bl	11f64 <__isoc99_sscanf@plt>
   1568c:	mvn	r7, #0
   15690:	cmp	r0, #1
   15694:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15698:	vldr	s0, [sp, #8]
   1569c:	mov	r0, r6
   156a0:	mov	r1, r5
   156a4:	mov	r2, r4
   156a8:	bl	14af0 <table_set_float@@Base>
   156ac:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   156b0:	movw	r1, #22966	; 0x59b6
   156b4:	add	r2, sp, #8
   156b8:	mov	r0, r7
   156bc:	movt	r1, #1
   156c0:	bl	11f64 <__isoc99_sscanf@plt>
   156c4:	mvn	r7, #0
   156c8:	cmp	r0, #1
   156cc:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   156d0:	vldr	d0, [sp, #8]
   156d4:	mov	r0, r6
   156d8:	mov	r1, r5
   156dc:	mov	r2, r4
   156e0:	bl	14b7c <table_set_double@@Base>
   156e4:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   156e8:	movw	r1, #22970	; 0x59ba
   156ec:	add	r2, sp, #8
   156f0:	mov	r0, r7
   156f4:	movt	r1, #1
   156f8:	bl	11f64 <__isoc99_sscanf@plt>
   156fc:	mvn	r7, #0
   15700:	cmp	r0, #1
   15704:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15708:	vldr	d0, [sp, #8]
   1570c:	mov	r0, r6
   15710:	mov	r1, r5
   15714:	mov	r2, r4
   15718:	bl	14c04 <table_set_ldouble@@Base>
   1571c:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15720:	movw	r1, #22974	; 0x59be
   15724:	add	r2, sp, #8
   15728:	mov	r0, r7
   1572c:	movt	r1, #1
   15730:	bl	11f64 <__isoc99_sscanf@plt>
   15734:	mvn	r7, #0
   15738:	cmp	r0, #1
   1573c:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15740:	ldrb	r3, [sp, #8]
   15744:	mov	r0, r6
   15748:	mov	r1, r5
   1574c:	mov	r2, r4
   15750:	bl	14d14 <table_set_char@@Base>
   15754:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15758:	movw	r1, #22974	; 0x59be
   1575c:	add	r2, sp, #8
   15760:	mov	r0, r7
   15764:	movt	r1, #1
   15768:	bl	11f64 <__isoc99_sscanf@plt>
   1576c:	mvn	r7, #0
   15770:	cmp	r0, #1
   15774:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   15778:	ldrb	r3, [sp, #8]
   1577c:	mov	r0, r6
   15780:	mov	r1, r5
   15784:	mov	r2, r4
   15788:	bl	14d94 <table_set_uchar@@Base>
   1578c:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   15790:	movw	r1, #22960	; 0x59b0
   15794:	add	r2, sp, #8
   15798:	mov	r0, r7
   1579c:	movt	r1, #1
   157a0:	bl	11f64 <__isoc99_sscanf@plt>
   157a4:	mvn	r7, #0
   157a8:	cmp	r0, #1
   157ac:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   157b0:	add	r3, sp, #8
   157b4:	mov	r0, r6
   157b8:	mov	r1, r5
   157bc:	mov	r2, r4
   157c0:	bl	14c8c <table_set_string@@Base>
   157c4:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   157c8:	movw	r1, #22928	; 0x5990
   157cc:	add	r2, sp, #8
   157d0:	mov	r0, r7
   157d4:	movt	r1, #1
   157d8:	bl	11f64 <__isoc99_sscanf@plt>
   157dc:	mvn	r7, #0
   157e0:	cmp	r0, #1
   157e4:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   157e8:	ldr	r0, [sp, #8]
   157ec:	cmp	r0, #0
   157f0:	beq	15850 <table_cell_from_buffer@@Base+0x60c>
   157f4:	mov	r0, r6
   157f8:	mov	r1, r5
   157fc:	mov	r2, r4
   15800:	mov	r3, #1
   15804:	bl	14250 <table_set_bool@@Base>
   15808:	b	15840 <table_cell_from_buffer@@Base+0x5fc>
   1580c:	movw	r1, #22977	; 0x59c1
   15810:	add	r2, sp, #8
   15814:	mov	r0, r7
   15818:	movt	r1, #1
   1581c:	bl	11f64 <__isoc99_sscanf@plt>
   15820:	mvn	r7, #0
   15824:	cmp	r0, #1
   15828:	bne	15844 <table_cell_from_buffer@@Base+0x600>
   1582c:	ldr	r3, [sp, #8]
   15830:	mov	r0, r6
   15834:	mov	r1, r5
   15838:	mov	r2, r4
   1583c:	bl	14e14 <table_set_ptr@@Base>
   15840:	mov	r7, #0
   15844:	mov	r0, r7
   15848:	sub	sp, fp, #24
   1584c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15850:	mov	r0, r6
   15854:	mov	r1, r5
   15858:	mov	r2, r4
   1585c:	mov	r3, #0
   15860:	mov	r7, #0
   15864:	bl	14250 <table_set_bool@@Base>
   15868:	mov	r0, r7
   1586c:	sub	sp, fp, #24
   15870:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015874 <table_cell_nullify@@Base>:
   15874:	push	{r4, r5, fp, lr}
   15878:	add	fp, sp, #8
   1587c:	mov	r4, r2
   15880:	bl	13d0c <table_get_row_ptr@@Base>
   15884:	ldr	r5, [r0]
   15888:	ldr	r0, [r5, r4, lsl #2]
   1588c:	cmp	r0, #0
   15890:	beq	158a0 <table_cell_nullify@@Base+0x2c>
   15894:	bl	11eec <free@plt>
   15898:	mov	r0, #0
   1589c:	str	r0, [r5, r4, lsl #2]
   158a0:	mov	r0, #0
   158a4:	pop	{r4, r5, fp, pc}

000158a8 <__libc_csu_init@@Base>:
   158a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   158ac:	mov	r7, r0
   158b0:	ldr	r6, [pc, #72]	; 15900 <__libc_csu_init@@Base+0x58>
   158b4:	ldr	r5, [pc, #72]	; 15904 <__libc_csu_init@@Base+0x5c>
   158b8:	add	r6, pc, r6
   158bc:	add	r5, pc, r5
   158c0:	sub	r6, r6, r5
   158c4:	mov	r8, r1
   158c8:	mov	r9, r2
   158cc:	bl	11ec0 <strcmp@plt-0x20>
   158d0:	asrs	r6, r6, #2
   158d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   158d8:	mov	r4, #0
   158dc:	add	r4, r4, #1
   158e0:	ldr	r3, [r5], #4
   158e4:	mov	r2, r9
   158e8:	mov	r1, r8
   158ec:	mov	r0, r7
   158f0:	blx	r3
   158f4:	cmp	r6, r4
   158f8:	bne	158dc <__libc_csu_init@@Base+0x34>
   158fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15900:	andeq	r0, r1, ip, asr #12
   15904:	andeq	r0, r1, r4, asr #12

00015908 <__libc_csu_fini@@Base>:
   15908:	bx	lr

Disassembly of section .fini:

0001590c <.fini>:
   1590c:	push	{r3, lr}
   15910:	pop	{r3, pc}
