
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

0001065c <.init>:
   1065c:	push	{r3, lr}
   10660:	bl	10eec <sprintf@plt+0x774>
   10664:	pop	{r3, pc}

Disassembly of section .plt:

00010668 <open@plt-0x14>:
   10668:	push	{lr}		; (str lr, [sp, #-4]!)
   1066c:	ldr	lr, [pc, #4]	; 10678 <open@plt-0x4>
   10670:	add	lr, pc, lr
   10674:	ldr	pc, [lr, #8]!
   10678:	andeq	r1, r1, r8, lsl #19

0001067c <open@plt>:
   1067c:	add	ip, pc, #0, 12
   10680:	add	ip, ip, #69632	; 0x11000
   10684:	ldr	pc, [ip, #2440]!	; 0x988

00010688 <abort@plt>:
   10688:	add	ip, pc, #0, 12
   1068c:	add	ip, ip, #69632	; 0x11000
   10690:	ldr	pc, [ip, #2432]!	; 0x980

00010694 <srand@plt>:
   10694:	add	ip, pc, #0, 12
   10698:	add	ip, ip, #69632	; 0x11000
   1069c:	ldr	pc, [ip, #2424]!	; 0x978

000106a0 <__libc_start_main@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #69632	; 0x11000
   106a8:	ldr	pc, [ip, #2416]!	; 0x970

000106ac <__gmon_start__@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #69632	; 0x11000
   106b4:	ldr	pc, [ip, #2408]!	; 0x968

000106b8 <getpass@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #69632	; 0x11000
   106c0:	ldr	pc, [ip, #2400]!	; 0x960

000106c4 <calloc@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #69632	; 0x11000
   106cc:	ldr	pc, [ip, #2392]!	; 0x958

000106d0 <free@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #69632	; 0x11000
   106d8:	ldr	pc, [ip, #2384]!	; 0x950

000106dc <read@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #69632	; 0x11000
   106e4:	ldr	pc, [ip, #2376]!	; 0x948

000106e8 <strlen@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #69632	; 0x11000
   106f0:	ldr	pc, [ip, #2368]!	; 0x940

000106f4 <getopt@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2360]!	; 0x938

00010700 <strtol@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2352]!	; 0x930

0001070c <printf@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2344]!	; 0x928

00010718 <fwrite@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #69632	; 0x11000
   10720:	ldr	pc, [ip, #2336]!	; 0x920

00010724 <time@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #69632	; 0x11000
   1072c:	ldr	pc, [ip, #2328]!	; 0x918

00010730 <strdup@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2320]!	; 0x910

0001073c <rb_crypt@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2312]!	; 0x908

00010748 <puts@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2304]!	; 0x900

00010754 <rand@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2296]!	; 0x8f8

00010760 <strcmp@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2288]!	; 0x8f0

0001076c <exit@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2280]!	; 0x8e8

00010778 <sprintf@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2272]!	; 0x8e0

Disassembly of section .text:

00010784 <.text>:
   10784:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10788:	movw	r5, #5428	; 0x1534
   1078c:	movt	r5, #1
   10790:	strd	r6, [sp, #8]
   10794:	mov	r7, r0
   10798:	mov	r6, r1
   1079c:	strd	r8, [sp, #16]
   107a0:	mov	r9, #0
   107a4:	movw	r8, #8312	; 0x2078
   107a8:	movt	r8, #2
   107ac:	mov	r4, r9
   107b0:	strd	sl, [sp, #24]
   107b4:	movw	sl, #5404	; 0x151c
   107b8:	movt	sl, #1
   107bc:	str	lr, [sp, #32]
   107c0:	mov	fp, r9
   107c4:	sub	sp, sp, #20
   107c8:	str	r9, [sp]
   107cc:	str	r9, [sp, #4]
   107d0:	mov	r2, r5
   107d4:	mov	r1, r6
   107d8:	mov	r0, r7
   107dc:	bl	106f4 <getopt@plt>
   107e0:	cmn	r0, #1
   107e4:	beq	10970 <sprintf@plt+0x1f8>
   107e8:	sub	r3, r0, #63	; 0x3f
   107ec:	cmp	r3, #58	; 0x3a
   107f0:	ldrls	pc, [pc, r3, lsl #2]
   107f4:	b	10960 <sprintf@plt+0x1e8>
   107f8:	andeq	r0, r1, ip, lsl lr
   107fc:	andeq	r0, r1, r0, ror #18
   10800:	andeq	r0, r1, r0, ror #18
   10804:	andeq	r0, r1, r0, ror #18
   10808:	andeq	r0, r1, r0, ror #18
   1080c:	andeq	r0, r1, r0, ror #18
   10810:	andeq	r0, r1, r0, ror #18
   10814:	andeq	r0, r1, r0, ror #18
   10818:	andeq	r0, r1, r0, ror #18
   1081c:	andeq	r0, r1, r0, ror #18
   10820:	andeq	r0, r1, r0, ror #18
   10824:	andeq	r0, r1, r0, ror #18
   10828:	andeq	r0, r1, r0, ror #18
   1082c:	andeq	r0, r1, r0, ror #18
   10830:	andeq	r0, r1, r0, ror #18
   10834:	andeq	r0, r1, r0, ror #18
   10838:	andeq	r0, r1, r0, ror #18
   1083c:	andeq	r0, r1, r0, ror #18
   10840:	andeq	r0, r1, r0, ror #18
   10844:	andeq	r0, r1, r0, ror #18
   10848:	andeq	r0, r1, r0, ror #18
   1084c:	andeq	r0, r1, r0, ror #18
   10850:	andeq	r0, r1, r0, ror #18
   10854:	andeq	r0, r1, r0, ror #18
   10858:	andeq	r0, r1, r0, ror #18
   1085c:	andeq	r0, r1, r0, ror #18
   10860:	andeq	r0, r1, r0, ror #18
   10864:	andeq	r0, r1, r0, ror #18
   10868:	andeq	r0, r1, r0, ror #18
   1086c:	andeq	r0, r1, r0, ror #18
   10870:	andeq	r0, r1, r0, ror #18
   10874:	andeq	r0, r1, r0, ror #18
   10878:	andeq	r0, r1, r0, ror #18
   1087c:	andeq	r0, r1, r0, ror #18
   10880:	andeq	r0, r1, r0, ror #18
   10884:	andeq	r0, r1, r4, asr r9
   10888:	andeq	r0, r1, r0, ror #18
   1088c:	andeq	r0, r1, r0, ror #18
   10890:	andeq	r0, r1, r0, ror #18
   10894:	andeq	r0, r1, r0, ror #18
   10898:	andeq	r0, r1, r0, ror #18
   1089c:	andeq	r0, r1, r4, lsl #27
   108a0:	andeq	r0, r1, r0, ror #18
   108a4:	andeq	r0, r1, r0, ror #18
   108a8:	andeq	r0, r1, r0, ror #18
   108ac:	andeq	r0, r1, r8, lsr r9
   108b0:	andeq	r0, r1, r0, lsr r9
   108b4:	andeq	r0, r1, r0, ror #18
   108b8:	andeq	r0, r1, r0, ror #18
   108bc:	andeq	r0, r1, r0, lsr #18
   108c0:	andeq	r0, r1, r0, ror #18
   108c4:	andeq	r0, r1, r4, lsl #18
   108c8:	strdeq	r0, [r1], -r4
   108cc:	andeq	r0, r1, r0, ror #18
   108d0:	andeq	r0, r1, r0, ror #18
   108d4:	andeq	r0, r1, r0, ror #18
   108d8:	andeq	r0, r1, r0, ror #18
   108dc:	andeq	r0, r1, ip, ror #17
   108e0:	andeq	r0, r1, r4, ror #17
   108e4:	orr	r4, r4, #128	; 0x80
   108e8:	b	107d0 <sprintf@plt+0x58>
   108ec:	orr	r4, r4, #64	; 0x40
   108f0:	b	107d0 <sprintf@plt+0x58>
   108f4:	ldr	r3, [r8]
   108f8:	orr	r4, r4, #2
   108fc:	str	r3, [sp, #4]
   10900:	b	107d0 <sprintf@plt+0x58>
   10904:	mov	r2, #10
   10908:	mov	r1, #0
   1090c:	ldr	r0, [r8]
   10910:	bl	10700 <strtol@plt>
   10914:	orr	r4, r4, #32
   10918:	mov	r9, r0
   1091c:	b	107d0 <sprintf@plt+0x58>
   10920:	ldr	r3, [r8]
   10924:	orr	r4, r4, #4
   10928:	str	r3, [sp]
   1092c:	b	107d0 <sprintf@plt+0x58>
   10930:	orr	r4, r4, #1
   10934:	b	107d0 <sprintf@plt+0x58>
   10938:	mov	r2, #10
   1093c:	mov	r1, #0
   10940:	ldr	r0, [r8]
   10944:	bl	10700 <strtol@plt>
   10948:	orr	r4, r4, #8
   1094c:	mov	fp, r0
   10950:	b	107d0 <sprintf@plt+0x58>
   10954:	orr	r4, r4, #16
   10958:	mov	r9, #4
   1095c:	b	107d0 <sprintf@plt+0x58>
   10960:	mov	r1, r0
   10964:	mov	r0, sl
   10968:	bl	1070c <printf@plt>
   1096c:	b	107d0 <sprintf@plt+0x58>
   10970:	tst	r4, #1
   10974:	and	r5, r4, #2
   10978:	beq	109a8 <sprintf@plt+0x230>
   1097c:	cmp	fp, #0
   10980:	beq	109dc <sprintf@plt+0x264>
   10984:	cmp	r5, #0
   10988:	bne	109e8 <sprintf@plt+0x270>
   1098c:	cmp	fp, #16
   10990:	ble	10ba8 <sprintf@plt+0x430>
   10994:	movw	r0, #5520	; 0x1590
   10998:	movt	r0, #1
   1099c:	bl	10748 <puts@plt>
   109a0:	mov	r0, r5
   109a4:	bl	1076c <exit@plt>
   109a8:	tst	r4, #16
   109ac:	beq	10ae4 <sprintf@plt+0x36c>
   109b0:	cmp	fp, #0
   109b4:	beq	10b18 <sprintf@plt+0x3a0>
   109b8:	cmp	r5, #0
   109bc:	bne	10c94 <sprintf@plt+0x51c>
   109c0:	cmp	fp, #22
   109c4:	ble	10b24 <sprintf@plt+0x3ac>
   109c8:	movw	r0, #5636	; 0x1604
   109cc:	movt	r0, #1
   109d0:	bl	10748 <puts@plt>
   109d4:	mov	r0, r5
   109d8:	bl	1076c <exit@plt>
   109dc:	cmp	r5, #0
   109e0:	moveq	fp, #8
   109e4:	beq	10ba8 <sprintf@plt+0x430>
   109e8:	ldr	r5, [sp, #4]
   109ec:	cmp	r5, #0
   109f0:	beq	10e78 <sprintf@plt+0x700>
   109f4:	mov	r0, r5
   109f8:	bl	106e8 <strlen@plt>
   109fc:	cmp	r0, #16
   10a00:	bhi	10e78 <sprintf@plt+0x700>
   10a04:	mov	r2, r5
   10a08:	ldr	r5, [pc, #1168]	; 10ea0 <sprintf@plt+0x728>
   10a0c:	movw	r1, #5444	; 0x1544
   10a10:	movt	r1, #1
   10a14:	ldr	r0, [pc, #1156]	; 10ea0 <sprintf@plt+0x728>
   10a18:	bl	10778 <sprintf@plt>
   10a1c:	tst	r4, #4
   10a20:	beq	10a68 <sprintf@plt+0x2f0>
   10a24:	ldr	r3, [sp]
   10a28:	cmp	r3, #0
   10a2c:	beq	10ce4 <sprintf@plt+0x56c>
   10a30:	mov	r1, r5
   10a34:	ldr	r0, [sp]
   10a38:	bl	1073c <rb_crypt@plt>
   10a3c:	mov	r4, r0
   10a40:	mov	r0, r4
   10a44:	bl	10748 <puts@plt>
   10a48:	mov	r0, #0
   10a4c:	add	sp, sp, #20
   10a50:	ldrd	r4, [sp]
   10a54:	ldrd	r6, [sp, #8]
   10a58:	ldrd	r8, [sp, #16]
   10a5c:	ldrd	sl, [sp, #24]
   10a60:	add	sp, sp, #32
   10a64:	pop	{pc}		; (ldr pc, [sp], #4)
   10a68:	movw	r0, #5780	; 0x1694
   10a6c:	movt	r0, #1
   10a70:	bl	106b8 <getpass@plt>
   10a74:	mov	r1, r5
   10a78:	bl	1073c <rb_crypt@plt>
   10a7c:	cmp	r0, #0
   10a80:	beq	10be4 <sprintf@plt+0x46c>
   10a84:	bl	10730 <strdup@plt>
   10a88:	mov	r6, r0
   10a8c:	movw	r0, #5812	; 0x16b4
   10a90:	movt	r0, #1
   10a94:	mov	r4, r6
   10a98:	bl	106b8 <getpass@plt>
   10a9c:	mov	r1, r5
   10aa0:	bl	1073c <rb_crypt@plt>
   10aa4:	subs	r1, r0, #0
   10aa8:	beq	10be4 <sprintf@plt+0x46c>
   10aac:	mov	r0, r6
   10ab0:	bl	10760 <strcmp@plt>
   10ab4:	cmp	r0, #0
   10ab8:	beq	10a40 <sprintf@plt+0x2c8>
   10abc:	movw	r3, #8304	; 0x2070
   10ac0:	movt	r3, #2
   10ac4:	movw	r0, #5820	; 0x16bc
   10ac8:	movt	r0, #1
   10acc:	ldr	r3, [r3]
   10ad0:	mov	r2, #23
   10ad4:	mov	r1, #1
   10ad8:	bl	10718 <fwrite@plt>
   10adc:	mov	r0, #1
   10ae0:	b	10a4c <sprintf@plt+0x2d4>
   10ae4:	tst	r4, #64	; 0x40
   10ae8:	beq	10b7c <sprintf@plt+0x404>
   10aec:	cmp	fp, #0
   10af0:	beq	10c50 <sprintf@plt+0x4d8>
   10af4:	cmp	r5, #0
   10af8:	bne	10c5c <sprintf@plt+0x4e4>
   10afc:	cmp	fp, #16
   10b00:	ble	10d48 <sprintf@plt+0x5d0>
   10b04:	movw	r0, #5684	; 0x1634
   10b08:	movt	r0, #1
   10b0c:	bl	10748 <puts@plt>
   10b10:	mov	r0, r5
   10b14:	bl	1076c <exit@plt>
   10b18:	cmp	r5, #0
   10b1c:	moveq	fp, #22
   10b20:	bne	10c94 <sprintf@plt+0x51c>
   10b24:	mov	r2, r9
   10b28:	add	r0, sp, #12
   10b2c:	movw	r1, #5548	; 0x15ac
   10b30:	movt	r1, #1
   10b34:	movw	r5, #8320	; 0x2080
   10b38:	movt	r5, #2
   10b3c:	bl	10778 <sprintf@plt>
   10b40:	add	r2, sp, #12
   10b44:	add	r0, r5, #24
   10b48:	movw	r1, #5668	; 0x1624
   10b4c:	movt	r1, #1
   10b50:	bl	10778 <sprintf@plt>
   10b54:	mov	r1, fp
   10b58:	add	r0, r5, #31
   10b5c:	bl	11018 <sprintf@plt+0x8a0>
   10b60:	add	fp, r5, fp
   10b64:	mov	r2, #36	; 0x24
   10b68:	mov	r3, #0
   10b6c:	add	r5, r5, #24
   10b70:	strb	r2, [fp, #31]
   10b74:	strb	r3, [fp, #32]
   10b78:	b	10a1c <sprintf@plt+0x2a4>
   10b7c:	cmp	fp, #0
   10b80:	beq	10c0c <sprintf@plt+0x494>
   10b84:	cmp	r5, #0
   10b88:	bne	10c18 <sprintf@plt+0x4a0>
   10b8c:	cmp	fp, #16
   10b90:	ble	10d0c <sprintf@plt+0x594>
   10b94:	movw	r0, #5720	; 0x1658
   10b98:	movt	r0, #1
   10b9c:	bl	10748 <puts@plt>
   10ba0:	mov	r0, r5
   10ba4:	bl	1076c <exit@plt>
   10ba8:	movw	r3, #12580	; 0x3124
   10bac:	movw	r6, #8320	; 0x2080
   10bb0:	movt	r6, #2
   10bb4:	mov	r7, #36	; 0x24
   10bb8:	add	r0, r6, #3
   10bbc:	mov	r1, fp
   10bc0:	strh	r3, [r6]
   10bc4:	mov	r5, r6
   10bc8:	strb	r7, [r6, #2]
   10bcc:	add	r6, r6, fp
   10bd0:	bl	11018 <sprintf@plt+0x8a0>
   10bd4:	mov	r3, #0
   10bd8:	strb	r7, [r6, #3]
   10bdc:	strb	r3, [r6, #4]
   10be0:	b	10a1c <sprintf@plt+0x2a4>
   10be4:	movw	r3, #8304	; 0x2070
   10be8:	movt	r3, #2
   10bec:	movw	r0, #5792	; 0x16a0
   10bf0:	movt	r0, #1
   10bf4:	ldr	r3, [r3]
   10bf8:	mov	r2, #18
   10bfc:	mov	r1, #1
   10c00:	bl	10718 <fwrite@plt>
   10c04:	mov	r0, #1
   10c08:	b	10a4c <sprintf@plt+0x2d4>
   10c0c:	cmp	r5, #0
   10c10:	moveq	fp, #16
   10c14:	beq	10d0c <sprintf@plt+0x594>
   10c18:	ldr	r5, [sp, #4]
   10c1c:	cmp	r5, #0
   10c20:	beq	10e78 <sprintf@plt+0x700>
   10c24:	mov	r0, r5
   10c28:	bl	106e8 <strlen@plt>
   10c2c:	cmp	r0, #16
   10c30:	bhi	10e78 <sprintf@plt+0x700>
   10c34:	mov	r2, r5
   10c38:	movw	r1, #5712	; 0x1650
   10c3c:	movt	r1, #1
   10c40:	ldr	r0, [pc, #604]	; 10ea4 <sprintf@plt+0x72c>
   10c44:	bl	10778 <sprintf@plt>
   10c48:	ldr	r5, [pc, #596]	; 10ea4 <sprintf@plt+0x72c>
   10c4c:	b	10a1c <sprintf@plt+0x2a4>
   10c50:	cmp	r5, #0
   10c54:	moveq	fp, #16
   10c58:	beq	10d48 <sprintf@plt+0x5d0>
   10c5c:	ldr	r5, [sp, #4]
   10c60:	cmp	r5, #0
   10c64:	beq	10e78 <sprintf@plt+0x700>
   10c68:	mov	r0, r5
   10c6c:	bl	106e8 <strlen@plt>
   10c70:	cmp	r0, #16
   10c74:	bhi	10e78 <sprintf@plt+0x700>
   10c78:	mov	r2, r5
   10c7c:	movw	r1, #5676	; 0x162c
   10c80:	movt	r1, #1
   10c84:	ldr	r0, [pc, #540]	; 10ea8 <sprintf@plt+0x730>
   10c88:	bl	10778 <sprintf@plt>
   10c8c:	ldr	r5, [pc, #532]	; 10ea8 <sprintf@plt+0x730>
   10c90:	b	10a1c <sprintf@plt+0x2a4>
   10c94:	ldr	r6, [sp, #4]
   10c98:	cmp	r6, #0
   10c9c:	beq	10e8c <sprintf@plt+0x714>
   10ca0:	mov	r0, r6
   10ca4:	bl	106e8 <strlen@plt>
   10ca8:	cmp	r0, #22
   10cac:	bhi	10e8c <sprintf@plt+0x714>
   10cb0:	ldr	r5, [pc, #500]	; 10eac <sprintf@plt+0x734>
   10cb4:	mov	r2, r9
   10cb8:	add	r0, sp, #12
   10cbc:	movw	r1, #5548	; 0x15ac
   10cc0:	movt	r1, #1
   10cc4:	bl	10778 <sprintf@plt>
   10cc8:	mov	r3, r6
   10ccc:	add	r2, sp, #12
   10cd0:	movw	r1, #5556	; 0x15b4
   10cd4:	movt	r1, #1
   10cd8:	mov	r0, r5
   10cdc:	bl	10778 <sprintf@plt>
   10ce0:	b	10a1c <sprintf@plt+0x2a4>
   10ce4:	movw	r3, #8304	; 0x2070
   10ce8:	movt	r3, #2
   10cec:	movw	r0, #5748	; 0x1674
   10cf0:	movt	r0, #1
   10cf4:	ldr	r3, [r3]
   10cf8:	mov	r2, #30
   10cfc:	mov	r1, #1
   10d00:	bl	10718 <fwrite@plt>
   10d04:	mov	r0, #1
   10d08:	b	10a4c <sprintf@plt+0x2d4>
   10d0c:	movw	r3, #13860	; 0x3624
   10d10:	movw	r6, #8320	; 0x2080
   10d14:	movt	r6, #2
   10d18:	mov	r7, #36	; 0x24
   10d1c:	add	r0, r6, #107	; 0x6b
   10d20:	mov	r1, fp
   10d24:	strh	r3, [r6, #104]	; 0x68
   10d28:	add	r5, r6, #104	; 0x68
   10d2c:	strb	r7, [r6, #106]	; 0x6a
   10d30:	add	r6, r6, fp
   10d34:	bl	11018 <sprintf@plt+0x8a0>
   10d38:	mov	r3, #0
   10d3c:	strb	r7, [r6, #107]	; 0x6b
   10d40:	strb	r3, [r6, #108]	; 0x6c
   10d44:	b	10a1c <sprintf@plt+0x2a4>
   10d48:	movw	r3, #13604	; 0x3524
   10d4c:	movw	r6, #8320	; 0x2080
   10d50:	movt	r6, #2
   10d54:	mov	r7, #36	; 0x24
   10d58:	add	r0, r6, #59	; 0x3b
   10d5c:	mov	r1, fp
   10d60:	strh	r3, [r6, #56]	; 0x38
   10d64:	add	r5, r6, #56	; 0x38
   10d68:	strb	r7, [r6, #58]	; 0x3a
   10d6c:	add	r6, r6, fp
   10d70:	bl	11018 <sprintf@plt+0x8a0>
   10d74:	mov	r3, #0
   10d78:	strb	r7, [r6, #59]	; 0x3b
   10d7c:	strb	r3, [r6, #60]	; 0x3c
   10d80:	b	10a1c <sprintf@plt+0x2a4>
   10d84:	movw	r0, #4528	; 0x11b0
   10d88:	movt	r0, #1
   10d8c:	bl	10748 <puts@plt>
   10d90:	movw	r0, #4604	; 0x11fc
   10d94:	movt	r0, #1
   10d98:	bl	10748 <puts@plt>
   10d9c:	movw	r0, #4636	; 0x121c
   10da0:	movt	r0, #1
   10da4:	bl	10748 <puts@plt>
   10da8:	movw	r0, #4668	; 0x123c
   10dac:	movt	r0, #1
   10db0:	bl	10748 <puts@plt>
   10db4:	movw	r0, #4696	; 0x1258
   10db8:	movt	r0, #1
   10dbc:	bl	10748 <puts@plt>
   10dc0:	movw	r0, #4728	; 0x1278
   10dc4:	movt	r0, #1
   10dc8:	bl	10748 <puts@plt>
   10dcc:	movw	r0, #4784	; 0x12b0
   10dd0:	movt	r0, #1
   10dd4:	bl	10748 <puts@plt>
   10dd8:	movw	r0, #4840	; 0x12e8
   10ddc:	movt	r0, #1
   10de0:	bl	10748 <puts@plt>
   10de4:	movw	r0, #4884	; 0x1314
   10de8:	movt	r0, #1
   10dec:	bl	10748 <puts@plt>
   10df0:	movw	r0, #4940	; 0x134c
   10df4:	movt	r0, #1
   10df8:	bl	10748 <puts@plt>
   10dfc:	movw	r0, #4968	; 0x1368
   10e00:	movt	r0, #1
   10e04:	bl	10748 <puts@plt>
   10e08:	movw	r0, #5008	; 0x1390
   10e0c:	movt	r0, #1
   10e10:	bl	10748 <puts@plt>
   10e14:	mov	r0, #0
   10e18:	bl	1076c <exit@plt>
   10e1c:	movw	r0, #5044	; 0x13b4
   10e20:	movt	r0, #1
   10e24:	bl	10748 <puts@plt>
   10e28:	movw	r0, #5080	; 0x13d8
   10e2c:	movt	r0, #1
   10e30:	bl	10748 <puts@plt>
   10e34:	movw	r0, #5148	; 0x141c
   10e38:	movt	r0, #1
   10e3c:	bl	10748 <puts@plt>
   10e40:	movw	r0, #5212	; 0x145c
   10e44:	movt	r0, #1
   10e48:	bl	10748 <puts@plt>
   10e4c:	movw	r0, #5276	; 0x149c
   10e50:	movt	r0, #1
   10e54:	bl	10748 <puts@plt>
   10e58:	movw	r0, #5340	; 0x14dc
   10e5c:	movt	r0, #1
   10e60:	bl	10748 <puts@plt>
   10e64:	movw	r0, #5380	; 0x1504
   10e68:	movt	r0, #1
   10e6c:	bl	10748 <puts@plt>
   10e70:	mov	r0, #0
   10e74:	bl	1076c <exit@plt>
   10e78:	movw	r0, #5452	; 0x154c
   10e7c:	movt	r0, #1
   10e80:	bl	10748 <puts@plt>
   10e84:	mov	r0, #1
   10e88:	bl	1076c <exit@plt>
   10e8c:	movw	r0, #5568	; 0x15c0
   10e90:	movt	r0, #1
   10e94:	bl	10748 <puts@plt>
   10e98:	mov	r0, #1
   10e9c:	bl	1076c <exit@plt>
   10ea0:	andeq	r2, r2, r0, lsl #2
   10ea4:	ldrdeq	r2, [r2], -r0
   10ea8:	andeq	r2, r2, r8, lsr r1
   10eac:	andeq	r2, r2, r8, lsl r1
   10eb0:	mov	fp, #0
   10eb4:	mov	lr, #0
   10eb8:	pop	{r1}		; (ldr r1, [sp], #4)
   10ebc:	mov	r2, sp
   10ec0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ec4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ec8:	ldr	ip, [pc, #16]	; 10ee0 <sprintf@plt+0x768>
   10ecc:	push	{ip}		; (str ip, [sp, #-4]!)
   10ed0:	ldr	r0, [pc, #12]	; 10ee4 <sprintf@plt+0x76c>
   10ed4:	ldr	r3, [pc, #12]	; 10ee8 <sprintf@plt+0x770>
   10ed8:	bl	106a0 <__libc_start_main@plt>
   10edc:	bl	10688 <abort@plt>
   10ee0:	andeq	r1, r1, r0, asr r1
   10ee4:	andeq	r0, r1, r4, lsl #15
   10ee8:	strdeq	r1, [r1], -r0
   10eec:	ldr	r3, [pc, #20]	; 10f08 <sprintf@plt+0x790>
   10ef0:	ldr	r2, [pc, #20]	; 10f0c <sprintf@plt+0x794>
   10ef4:	add	r3, pc, r3
   10ef8:	ldr	r2, [r3, r2]
   10efc:	cmp	r2, #0
   10f00:	bxeq	lr
   10f04:	b	106ac <__gmon_start__@plt>
   10f08:	andeq	r1, r1, r4, lsl #2
   10f0c:	andeq	r0, r0, r4, rrx
   10f10:	ldr	r0, [pc, #24]	; 10f30 <sprintf@plt+0x7b8>
   10f14:	ldr	r3, [pc, #24]	; 10f34 <sprintf@plt+0x7bc>
   10f18:	cmp	r3, r0
   10f1c:	bxeq	lr
   10f20:	ldr	r3, [pc, #16]	; 10f38 <sprintf@plt+0x7c0>
   10f24:	cmp	r3, #0
   10f28:	bxeq	lr
   10f2c:	bx	r3
   10f30:	andeq	r2, r2, r0, ror r0
   10f34:	andeq	r2, r2, r0, ror r0
   10f38:	andeq	r0, r0, r0
   10f3c:	ldr	r0, [pc, #36]	; 10f68 <sprintf@plt+0x7f0>
   10f40:	ldr	r1, [pc, #36]	; 10f6c <sprintf@plt+0x7f4>
   10f44:	sub	r1, r1, r0
   10f48:	asr	r1, r1, #2
   10f4c:	add	r1, r1, r1, lsr #31
   10f50:	asrs	r1, r1, #1
   10f54:	bxeq	lr
   10f58:	ldr	r3, [pc, #16]	; 10f70 <sprintf@plt+0x7f8>
   10f5c:	cmp	r3, #0
   10f60:	bxeq	lr
   10f64:	bx	r3
   10f68:	andeq	r2, r2, r0, ror r0
   10f6c:	andeq	r2, r2, r0, ror r0
   10f70:	andeq	r0, r0, r0
   10f74:	push	{r4, lr}
   10f78:	ldr	r4, [pc, #24]	; 10f98 <sprintf@plt+0x820>
   10f7c:	ldrb	r3, [r4]
   10f80:	cmp	r3, #0
   10f84:	popne	{r4, pc}
   10f88:	bl	10f10 <sprintf@plt+0x798>
   10f8c:	mov	r3, #1
   10f90:	strb	r3, [r4]
   10f94:	pop	{r4, pc}
   10f98:	andeq	r2, r2, ip, ror r0
   10f9c:	b	10f3c <sprintf@plt+0x7c4>
   10fa0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10fa4:	mov	r5, r1
   10fa8:	strd	r6, [sp, #8]
   10fac:	mov	r7, r0
   10fb0:	mov	r0, #0
   10fb4:	str	r8, [sp, #16]
   10fb8:	str	lr, [sp, #20]
   10fbc:	bl	10724 <time@plt>
   10fc0:	bl	10694 <srand@plt>
   10fc4:	cmp	r5, #0
   10fc8:	ble	11000 <sprintf@plt+0x888>
   10fcc:	sub	r4, r7, #1
   10fd0:	movw	r6, #4448	; 0x1160
   10fd4:	movt	r6, #1
   10fd8:	add	r5, r4, r5
   10fdc:	bl	10754 <rand@plt>
   10fe0:	rsbs	r3, r0, #0
   10fe4:	and	r0, r0, #63	; 0x3f
   10fe8:	and	r3, r3, #63	; 0x3f
   10fec:	rsbpl	r0, r3, #0
   10ff0:	ldrb	r3, [r6, r0]
   10ff4:	strb	r3, [r4, #1]!
   10ff8:	cmp	r4, r5
   10ffc:	bne	10fdc <sprintf@plt+0x864>
   11000:	mov	r0, r7
   11004:	ldrd	r4, [sp]
   11008:	ldrd	r6, [sp, #8]
   1100c:	ldr	r8, [sp, #16]
   11010:	add	sp, sp, #20
   11014:	pop	{pc}		; (ldr pc, [sp], #4)
   11018:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1101c:	mov	r4, r0
   11020:	movw	r0, #4516	; 0x11a4
   11024:	movt	r0, #1
   11028:	strd	r6, [sp, #8]
   1102c:	mov	r6, r1
   11030:	mov	r1, #0
   11034:	str	r8, [sp, #16]
   11038:	str	lr, [sp, #20]
   1103c:	bl	1067c <open@plt>
   11040:	subs	r7, r0, #0
   11044:	mov	r1, r6
   11048:	blt	110d4 <sprintf@plt+0x95c>
   1104c:	mov	r0, #1
   11050:	bl	106c4 <calloc@plt>
   11054:	mov	r1, r0
   11058:	mov	r5, r0
   1105c:	mov	r2, r6
   11060:	mov	r0, r7
   11064:	bl	106dc <read@plt>
   11068:	cmp	r0, r6
   1106c:	bne	110c8 <sprintf@plt+0x950>
   11070:	cmp	r0, #0
   11074:	ble	110a8 <sprintf@plt+0x930>
   11078:	sub	r0, r0, #1
   1107c:	movw	ip, #4448	; 0x1160
   11080:	movt	ip, #1
   11084:	add	r0, r5, r0
   11088:	sub	r2, r5, #1
   1108c:	sub	r1, r4, #1
   11090:	ldrb	r3, [r2, #1]!
   11094:	and	r3, r3, #63	; 0x3f
   11098:	cmp	r0, r2
   1109c:	ldrb	r3, [ip, r3]
   110a0:	strb	r3, [r1, #1]!
   110a4:	bne	11090 <sprintf@plt+0x918>
   110a8:	mov	r0, r5
   110ac:	bl	106d0 <free@plt>
   110b0:	mov	r0, r4
   110b4:	ldrd	r4, [sp]
   110b8:	ldrd	r6, [sp, #8]
   110bc:	ldr	r8, [sp, #16]
   110c0:	add	sp, sp, #20
   110c4:	pop	{pc}		; (ldr pc, [sp], #4)
   110c8:	mov	r0, r5
   110cc:	bl	106d0 <free@plt>
   110d0:	mov	r1, r6
   110d4:	mov	r0, r4
   110d8:	ldrd	r4, [sp]
   110dc:	ldrd	r6, [sp, #8]
   110e0:	ldr	r8, [sp, #16]
   110e4:	ldr	lr, [sp, #20]
   110e8:	add	sp, sp, #24
   110ec:	b	10fa0 <sprintf@plt+0x828>
   110f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110f4:	mov	r7, r0
   110f8:	ldr	r6, [pc, #72]	; 11148 <sprintf@plt+0x9d0>
   110fc:	ldr	r5, [pc, #72]	; 1114c <sprintf@plt+0x9d4>
   11100:	add	r6, pc, r6
   11104:	add	r5, pc, r5
   11108:	sub	r6, r6, r5
   1110c:	mov	r8, r1
   11110:	mov	r9, r2
   11114:	bl	1065c <open@plt-0x20>
   11118:	asrs	r6, r6, #2
   1111c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11120:	mov	r4, #0
   11124:	add	r4, r4, #1
   11128:	ldr	r3, [r5], #4
   1112c:	mov	r2, r9
   11130:	mov	r1, r8
   11134:	mov	r0, r7
   11138:	blx	r3
   1113c:	cmp	r6, r4
   11140:	bne	11124 <sprintf@plt+0x9ac>
   11144:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11148:	strdeq	r0, [r1], -r4
   1114c:	andeq	r0, r1, ip, ror #27
   11150:	bx	lr

Disassembly of section .fini:

00011154 <.fini>:
   11154:	push	{r3, lr}
   11158:	pop	{r3, pc}
