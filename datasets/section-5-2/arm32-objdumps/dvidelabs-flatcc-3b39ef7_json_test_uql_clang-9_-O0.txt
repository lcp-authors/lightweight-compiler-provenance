
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf32-littlearm


Disassembly of section .init:

00014de0 <.init>:
   14de0:	push	{r3, lr}
   14de4:	bl	14f54 <_start@@Base+0x3c>
   14de8:	pop	{r3, pc}

Disassembly of section .plt:

00014dec <raise@plt-0x14>:
   14dec:	push	{lr}		; (str lr, [sp, #-4]!)
   14df0:	ldr	lr, [pc, #4]	; 14dfc <raise@plt-0x4>
   14df4:	add	lr, pc, lr
   14df8:	ldr	pc, [lr, #8]!
   14dfc:	andeq	sl, r4, r4, lsl #4

00014e00 <raise@plt>:
   14e00:	add	ip, pc, #0, 12
   14e04:	add	ip, ip, #303104	; 0x4a000
   14e08:	ldr	pc, [ip, #516]!	; 0x204

00014e0c <strcmp@plt>:
   14e0c:	add	ip, pc, #0, 12
   14e10:	add	ip, ip, #303104	; 0x4a000
   14e14:	ldr	pc, [ip, #508]!	; 0x1fc

00014e18 <memmove@plt>:
   14e18:	add	ip, pc, #0, 12
   14e1c:	add	ip, ip, #303104	; 0x4a000
   14e20:	ldr	pc, [ip, #500]!	; 0x1f4

00014e24 <free@plt>:
   14e24:	add	ip, pc, #0, 12
   14e28:	add	ip, ip, #303104	; 0x4a000
   14e2c:	ldr	pc, [ip, #492]!	; 0x1ec

00014e30 <memcpy@plt>:
   14e30:	add	ip, pc, #0, 12
   14e34:	add	ip, ip, #303104	; 0x4a000
   14e38:	ldr	pc, [ip, #484]!	; 0x1e4

00014e3c <memcmp@plt>:
   14e3c:	add	ip, pc, #0, 12
   14e40:	add	ip, ip, #303104	; 0x4a000
   14e44:	ldr	pc, [ip, #476]!	; 0x1dc

00014e48 <__isinff@plt>:
   14e48:	add	ip, pc, #0, 12
   14e4c:	add	ip, ip, #303104	; 0x4a000
   14e50:	ldr	pc, [ip, #468]!	; 0x1d4

00014e54 <__isinf@plt>:
   14e54:	add	ip, pc, #0, 12
   14e58:	add	ip, ip, #303104	; 0x4a000
   14e5c:	ldr	pc, [ip, #460]!	; 0x1cc

00014e60 <realloc@plt>:
   14e60:	add	ip, pc, #0, 12
   14e64:	add	ip, ip, #303104	; 0x4a000
   14e68:	ldr	pc, [ip, #452]!	; 0x1c4

00014e6c <fwrite@plt>:
   14e6c:	add	ip, pc, #0, 12
   14e70:	add	ip, ip, #303104	; 0x4a000
   14e74:	ldr	pc, [ip, #444]!	; 0x1bc

00014e78 <malloc@plt>:
   14e78:	add	ip, pc, #0, 12
   14e7c:	add	ip, ip, #303104	; 0x4a000
   14e80:	ldr	pc, [ip, #436]!	; 0x1b4

00014e84 <__libc_start_main@plt>:
   14e84:	add	ip, pc, #0, 12
   14e88:	add	ip, ip, #303104	; 0x4a000
   14e8c:	ldr	pc, [ip, #428]!	; 0x1ac

00014e90 <__gmon_start__@plt>:
   14e90:	add	ip, pc, #0, 12
   14e94:	add	ip, ip, #303104	; 0x4a000
   14e98:	ldr	pc, [ip, #420]!	; 0x1a4

00014e9c <strlen@plt>:
   14e9c:	add	ip, pc, #0, 12
   14ea0:	add	ip, ip, #303104	; 0x4a000
   14ea4:	ldr	pc, [ip, #412]!	; 0x19c

00014ea8 <fprintf@plt>:
   14ea8:	add	ip, pc, #0, 12
   14eac:	add	ip, ip, #303104	; 0x4a000
   14eb0:	ldr	pc, [ip, #404]!	; 0x194

00014eb4 <posix_memalign@plt>:
   14eb4:	add	ip, pc, #0, 12
   14eb8:	add	ip, ip, #303104	; 0x4a000
   14ebc:	ldr	pc, [ip, #396]!	; 0x18c

00014ec0 <memset@plt>:
   14ec0:	add	ip, pc, #0, 12
   14ec4:	add	ip, ip, #303104	; 0x4a000
   14ec8:	ldr	pc, [ip, #388]!	; 0x184

00014ecc <strncpy@plt>:
   14ecc:	add	ip, pc, #0, 12
   14ed0:	add	ip, ip, #303104	; 0x4a000
   14ed4:	ldr	pc, [ip, #380]!	; 0x17c

00014ed8 <strtod@plt>:
   14ed8:	add	ip, pc, #0, 12
   14edc:	add	ip, ip, #303104	; 0x4a000
   14ee0:	ldr	pc, [ip, #372]!	; 0x174

00014ee4 <memchr@plt>:
   14ee4:	add	ip, pc, #0, 12
   14ee8:	add	ip, ip, #303104	; 0x4a000
   14eec:	ldr	pc, [ip, #364]!	; 0x16c

00014ef0 <sprintf@plt>:
   14ef0:	add	ip, pc, #0, 12
   14ef4:	add	ip, ip, #303104	; 0x4a000
   14ef8:	ldr	pc, [ip, #356]!	; 0x164

00014efc <abort@plt>:
   14efc:	add	ip, pc, #0, 12
   14f00:	add	ip, ip, #303104	; 0x4a000
   14f04:	ldr	pc, [ip, #348]!	; 0x15c

00014f08 <__assert_fail@plt>:
   14f08:	add	ip, pc, #0, 12
   14f0c:	add	ip, ip, #303104	; 0x4a000
   14f10:	ldr	pc, [ip, #340]!	; 0x154

Disassembly of section .text:

00014f18 <_start@@Base>:
   14f18:	mov	fp, #0
   14f1c:	mov	lr, #0
   14f20:	pop	{r1}		; (ldr r1, [sp], #4)
   14f24:	mov	r2, sp
   14f28:	push	{r2}		; (str r2, [sp, #-4]!)
   14f2c:	push	{r0}		; (str r0, [sp, #-4]!)
   14f30:	ldr	ip, [pc, #16]	; 14f48 <_start@@Base+0x30>
   14f34:	push	{ip}		; (str ip, [sp, #-4]!)
   14f38:	ldr	r0, [pc, #12]	; 14f4c <_start@@Base+0x34>
   14f3c:	ldr	r3, [pc, #12]	; 14f50 <_start@@Base+0x38>
   14f40:	bl	14e84 <__libc_start_main@plt>
   14f44:	bl	14efc <abort@plt>
   14f48:	andeq	r7, r4, ip, lsr r2
   14f4c:	andeq	r6, r1, ip, asr #18
   14f50:	ldrdeq	r7, [r4], -ip
   14f54:	ldr	r3, [pc, #20]	; 14f70 <_start@@Base+0x58>
   14f58:	ldr	r2, [pc, #20]	; 14f74 <_start@@Base+0x5c>
   14f5c:	add	r3, pc, r3
   14f60:	ldr	r2, [r3, r2]
   14f64:	cmp	r2, #0
   14f68:	bxeq	lr
   14f6c:	b	14e90 <__gmon_start__@plt>
   14f70:	muleq	r4, ip, r0
   14f74:	andeq	r0, r0, r0, ror r0
   14f78:	ldr	r0, [pc, #24]	; 14f98 <_start@@Base+0x80>
   14f7c:	ldr	r3, [pc, #24]	; 14f9c <_start@@Base+0x84>
   14f80:	cmp	r3, r0
   14f84:	bxeq	lr
   14f88:	ldr	r3, [pc, #16]	; 14fa0 <_start@@Base+0x88>
   14f8c:	cmp	r3, #0
   14f90:	bxeq	lr
   14f94:	bx	r3
   14f98:	andeq	pc, r5, r8, asr #7
   14f9c:	andeq	pc, r5, r8, asr #7
   14fa0:	andeq	r0, r0, r0
   14fa4:	ldr	r0, [pc, #36]	; 14fd0 <_start@@Base+0xb8>
   14fa8:	ldr	r1, [pc, #36]	; 14fd4 <_start@@Base+0xbc>
   14fac:	sub	r1, r1, r0
   14fb0:	asr	r1, r1, #2
   14fb4:	add	r1, r1, r1, lsr #31
   14fb8:	asrs	r1, r1, #1
   14fbc:	bxeq	lr
   14fc0:	ldr	r3, [pc, #16]	; 14fd8 <_start@@Base+0xc0>
   14fc4:	cmp	r3, #0
   14fc8:	bxeq	lr
   14fcc:	bx	r3
   14fd0:	andeq	pc, r5, r8, asr #7
   14fd4:	andeq	pc, r5, r8, asr #7
   14fd8:	andeq	r0, r0, r0
   14fdc:	push	{r4, lr}
   14fe0:	ldr	r4, [pc, #24]	; 15000 <_start@@Base+0xe8>
   14fe4:	ldrb	r3, [r4]
   14fe8:	cmp	r3, #0
   14fec:	popne	{r4, pc}
   14ff0:	bl	14f78 <_start@@Base+0x60>
   14ff4:	mov	r3, #1
   14ff8:	strb	r3, [r4]
   14ffc:	pop	{r4, pc}
   15000:	andeq	pc, r5, r8, asr #7
   15004:	b	14fa4 <_start@@Base+0x8c>

00015008 <test_json@@Base>:
   15008:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1500c:	add	fp, sp, #24
   15010:	sub	sp, sp, #528	; 0x210
   15014:	ldr	ip, [fp, #16]
   15018:	ldr	lr, [fp, #12]
   1501c:	ldr	r4, [fp, #8]
   15020:	str	r0, [fp, #-28]	; 0xffffffe4
   15024:	str	r1, [fp, #-32]	; 0xffffffe0
   15028:	str	r2, [fp, #-36]	; 0xffffffdc
   1502c:	str	r3, [fp, #-40]	; 0xffffffd8
   15030:	mvn	r0, #0
   15034:	str	r0, [fp, #-44]	; 0xffffffd4
   15038:	movw	r0, #0
   1503c:	str	r0, [fp, #-52]	; 0xffffffcc
   15040:	str	r0, [fp, #-56]	; 0xffffffc8
   15044:	add	r0, sp, #256	; 0x100
   15048:	str	r0, [sp, #252]	; 0xfc
   1504c:	ldr	r0, [sp, #252]	; 0xfc
   15050:	str	ip, [sp, #152]	; 0x98
   15054:	str	lr, [sp, #148]	; 0x94
   15058:	str	r4, [sp, #144]	; 0x90
   1505c:	bl	29db4 <flatcc_builder_init@@Base>
   15060:	add	r1, sp, #160	; 0xa0
   15064:	str	r0, [sp, #140]	; 0x8c
   15068:	mov	r0, r1
   1506c:	movw	r1, #0
   15070:	bl	44a50 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15074:	ldr	r1, [fp, #12]
   15078:	add	r2, sp, #160	; 0xa0
   1507c:	str	r0, [sp, #136]	; 0x88
   15080:	mov	r0, r2
   15084:	bl	155ac <test_json@@Base+0x5a4>
   15088:	ldr	r0, [sp, #252]	; 0xfc
   1508c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15090:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15094:	str	r0, [sp, #132]	; 0x84
   15098:	mov	r0, r1
   1509c:	str	r2, [sp, #128]	; 0x80
   150a0:	bl	14e9c <strlen@plt>
   150a4:	ldr	r1, [fp, #8]
   150a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   150ac:	ldr	r2, [r2]
   150b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150b4:	ldr	r3, [r3, #4]
   150b8:	ldr	ip, [sp, #132]	; 0x84
   150bc:	str	r0, [sp, #124]	; 0x7c
   150c0:	mov	r0, ip
   150c4:	add	lr, sp, #208	; 0xd0
   150c8:	str	r1, [sp, #120]	; 0x78
   150cc:	mov	r1, lr
   150d0:	ldr	lr, [sp, #128]	; 0x80
   150d4:	str	r2, [sp, #116]	; 0x74
   150d8:	mov	r2, lr
   150dc:	ldr	r4, [sp, #124]	; 0x7c
   150e0:	str	r3, [sp, #112]	; 0x70
   150e4:	mov	r3, r4
   150e8:	ldr	r5, [sp, #120]	; 0x78
   150ec:	str	r5, [sp]
   150f0:	ldr	r6, [sp, #116]	; 0x74
   150f4:	str	r6, [sp, #4]
   150f8:	ldr	r7, [sp, #112]	; 0x70
   150fc:	str	r7, [sp, #8]
   15100:	bl	38390 <flatcc_json_parser_table_as_root@@Base>
   15104:	str	r0, [fp, #-48]	; 0xffffffd0
   15108:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1510c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15110:	cmp	r0, r1
   15114:	beq	15318 <test_json@@Base+0x310>
   15118:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1511c:	cmp	r0, #0
   15120:	beq	1524c <test_json@@Base+0x244>
   15124:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15128:	cmp	r0, #0
   1512c:	beq	151dc <test_json@@Base+0x1d4>
   15130:	ldr	r0, [pc, #1112]	; 15590 <test_json@@Base+0x588>
   15134:	ldr	r0, [pc, r0]
   15138:	ldr	r0, [r0]
   1513c:	ldr	r2, [fp, #16]
   15140:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15144:	str	r0, [sp, #108]	; 0x6c
   15148:	mov	r0, r1
   1514c:	str	r2, [sp, #104]	; 0x68
   15150:	bl	33b4c <flatcc_json_parser_error_string@@Base>
   15154:	ldr	r1, [pc, #1072]	; 1558c <test_json@@Base+0x584>
   15158:	add	r1, pc, r1
   1515c:	ldr	r2, [sp, #108]	; 0x6c
   15160:	str	r0, [sp, #100]	; 0x64
   15164:	mov	r0, r2
   15168:	ldr	r2, [sp, #104]	; 0x68
   1516c:	ldr	r3, [sp, #100]	; 0x64
   15170:	bl	14ea8 <fprintf@plt>
   15174:	ldr	r1, [pc, #1036]	; 15588 <test_json@@Base+0x580>
   15178:	ldr	r1, [pc, r1]
   1517c:	ldr	r1, [r1]
   15180:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15184:	str	r0, [sp, #96]	; 0x60
   15188:	mov	r0, r2
   1518c:	str	r1, [sp, #92]	; 0x5c
   15190:	bl	33b4c <flatcc_json_parser_error_string@@Base>
   15194:	ldr	r1, [pc, #1000]	; 15584 <test_json@@Base+0x57c>
   15198:	add	r1, pc, r1
   1519c:	ldr	r2, [sp, #92]	; 0x5c
   151a0:	str	r0, [sp, #88]	; 0x58
   151a4:	mov	r0, r2
   151a8:	ldr	r2, [sp, #88]	; 0x58
   151ac:	bl	14ea8 <fprintf@plt>
   151b0:	ldr	r1, [pc, #964]	; 1557c <test_json@@Base+0x574>
   151b4:	add	r1, pc, r1
   151b8:	ldr	r2, [pc, #960]	; 15580 <test_json@@Base+0x578>
   151bc:	ldr	r2, [pc, r2]
   151c0:	ldr	r2, [r2]
   151c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   151c8:	str	r0, [sp, #84]	; 0x54
   151cc:	mov	r0, r2
   151d0:	mov	r2, r3
   151d4:	bl	14ea8 <fprintf@plt>
   151d8:	b	15248 <test_json@@Base+0x240>
   151dc:	ldr	r0, [pc, #916]	; 15578 <test_json@@Base+0x570>
   151e0:	ldr	r0, [pc, r0]
   151e4:	ldr	r0, [r0]
   151e8:	ldr	r2, [fp, #16]
   151ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   151f0:	str	r0, [sp, #80]	; 0x50
   151f4:	mov	r0, r1
   151f8:	str	r2, [sp, #76]	; 0x4c
   151fc:	bl	33b4c <flatcc_json_parser_error_string@@Base>
   15200:	ldr	r1, [pc, #876]	; 15574 <test_json@@Base+0x56c>
   15204:	add	r1, pc, r1
   15208:	ldr	r2, [sp, #80]	; 0x50
   1520c:	str	r0, [sp, #72]	; 0x48
   15210:	mov	r0, r2
   15214:	ldr	r2, [sp, #76]	; 0x4c
   15218:	ldr	r3, [sp, #72]	; 0x48
   1521c:	bl	14ea8 <fprintf@plt>
   15220:	ldr	r1, [pc, #836]	; 1556c <test_json@@Base+0x564>
   15224:	add	r1, pc, r1
   15228:	ldr	r2, [pc, #832]	; 15570 <test_json@@Base+0x568>
   1522c:	ldr	r2, [pc, r2]
   15230:	ldr	r2, [r2]
   15234:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15238:	str	r0, [sp, #68]	; 0x44
   1523c:	mov	r0, r2
   15240:	mov	r2, r3
   15244:	bl	14ea8 <fprintf@plt>
   15248:	b	152b8 <test_json@@Base+0x2b0>
   1524c:	ldr	r0, [pc, #788]	; 15568 <test_json@@Base+0x560>
   15250:	ldr	r0, [pc, r0]
   15254:	ldr	r0, [r0]
   15258:	ldr	r2, [fp, #16]
   1525c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15260:	str	r0, [sp, #64]	; 0x40
   15264:	mov	r0, r1
   15268:	str	r2, [sp, #60]	; 0x3c
   1526c:	bl	33b4c <flatcc_json_parser_error_string@@Base>
   15270:	ldr	r1, [pc, #748]	; 15564 <test_json@@Base+0x55c>
   15274:	add	r1, pc, r1
   15278:	ldr	r2, [sp, #64]	; 0x40
   1527c:	str	r0, [sp, #56]	; 0x38
   15280:	mov	r0, r2
   15284:	ldr	r2, [sp, #60]	; 0x3c
   15288:	ldr	r3, [sp, #56]	; 0x38
   1528c:	bl	14ea8 <fprintf@plt>
   15290:	ldr	r1, [pc, #708]	; 1555c <test_json@@Base+0x554>
   15294:	add	r1, pc, r1
   15298:	ldr	r2, [pc, #704]	; 15560 <test_json@@Base+0x558>
   1529c:	ldr	r2, [pc, r2]
   152a0:	ldr	r2, [r2]
   152a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   152a8:	str	r0, [sp, #52]	; 0x34
   152ac:	mov	r0, r2
   152b0:	mov	r2, r3
   152b4:	bl	14ea8 <fprintf@plt>
   152b8:	movw	r0, #0
   152bc:	str	r0, [sp, #156]	; 0x9c
   152c0:	ldr	r0, [sp, #156]	; 0x9c
   152c4:	ldr	r1, [sp, #228]	; 0xe4
   152c8:	sub	r1, r1, #1
   152cc:	cmp	r0, r1
   152d0:	bge	152fc <test_json@@Base+0x2f4>
   152d4:	ldr	r0, [pc, #712]	; 155a4 <test_json@@Base+0x59c>
   152d8:	add	r1, pc, r0
   152dc:	ldr	r0, [pc, #708]	; 155a8 <test_json@@Base+0x5a0>
   152e0:	ldr	r0, [pc, r0]
   152e4:	ldr	r0, [r0]
   152e8:	bl	14ea8 <fprintf@plt>
   152ec:	ldr	r0, [sp, #156]	; 0x9c
   152f0:	add	r0, r0, #1
   152f4:	str	r0, [sp, #156]	; 0x9c
   152f8:	b	152c0 <test_json@@Base+0x2b8>
   152fc:	ldr	r0, [pc, #656]	; 15594 <test_json@@Base+0x58c>
   15300:	add	r1, pc, r0
   15304:	ldr	r0, [pc, #652]	; 15598 <test_json@@Base+0x590>
   15308:	ldr	r0, [pc, r0]
   1530c:	ldr	r0, [r0]
   15310:	bl	14ea8 <fprintf@plt>
   15314:	b	154e4 <test_json@@Base+0x4dc>
   15318:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1531c:	cmp	r0, #0
   15320:	beq	15330 <test_json@@Base+0x328>
   15324:	movw	r0, #0
   15328:	str	r0, [fp, #-44]	; 0xffffffd4
   1532c:	b	154c0 <test_json@@Base+0x4b8>
   15330:	ldr	r0, [sp, #252]	; 0xfc
   15334:	sub	r1, fp, #60	; 0x3c
   15338:	bl	2f4a4 <flatcc_builder_finalize_aligned_buffer@@Base>
   1533c:	str	r0, [fp, #-52]	; 0xffffffcc
   15340:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15344:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15348:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1534c:	ldr	r2, [r2]
   15350:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15354:	ldr	r3, [r3, #12]
   15358:	bl	3208c <flatcc_verify_table_as_root@@Base>
   1535c:	str	r0, [fp, #-44]	; 0xffffffd4
   15360:	cmp	r0, #0
   15364:	beq	153bc <test_json@@Base+0x3b4>
   15368:	ldr	r0, [pc, #488]	; 15558 <test_json@@Base+0x550>
   1536c:	ldr	r0, [pc, r0]
   15370:	ldr	r0, [r0]
   15374:	ldr	r3, [fp, #16]
   15378:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1537c:	str	r0, [sp, #48]	; 0x30
   15380:	mov	r0, r1
   15384:	str	r3, [sp, #44]	; 0x2c
   15388:	bl	30514 <flatcc_verify_error_string@@Base>
   1538c:	ldr	r1, [pc, #444]	; 15550 <test_json@@Base+0x548>
   15390:	add	r1, pc, r1
   15394:	ldr	r2, [pc, #440]	; 15554 <test_json@@Base+0x54c>
   15398:	add	r2, pc, r2
   1539c:	ldr	r3, [sp, #48]	; 0x30
   153a0:	str	r0, [sp, #40]	; 0x28
   153a4:	mov	r0, r3
   153a8:	ldr	r3, [sp, #44]	; 0x2c
   153ac:	ldr	ip, [sp, #40]	; 0x28
   153b0:	str	ip, [sp]
   153b4:	bl	14ea8 <fprintf@plt>
   153b8:	b	154e4 <test_json@@Base+0x4dc>
   153bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   153c0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   153c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   153c8:	ldr	r3, [r0]
   153cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   153d0:	ldr	r0, [r0, #8]
   153d4:	add	ip, sp, #160	; 0xa0
   153d8:	str	r0, [sp, #36]	; 0x24
   153dc:	mov	r0, ip
   153e0:	ldr	ip, [sp, #36]	; 0x24
   153e4:	str	ip, [sp]
   153e8:	bl	44220 <flatcc_json_printer_table_as_root@@Base>
   153ec:	add	r1, sp, #160	; 0xa0
   153f0:	str	r0, [sp, #32]
   153f4:	mov	r0, r1
   153f8:	sub	r1, fp, #64	; 0x40
   153fc:	bl	44c90 <flatcc_json_printer_get_buffer@@Base>
   15400:	str	r0, [fp, #-56]	; 0xffffffc8
   15404:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15408:	movw	r1, #0
   1540c:	cmp	r0, r1
   15410:	beq	15428 <test_json@@Base+0x420>
   15414:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15418:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1541c:	bl	14e0c <strcmp@plt>
   15420:	cmp	r0, #0
   15424:	beq	154b8 <test_json@@Base+0x4b0>
   15428:	ldr	r0, [pc, #280]	; 15548 <test_json@@Base+0x540>
   1542c:	add	r1, pc, r0
   15430:	ldr	r0, [pc, #276]	; 1554c <test_json@@Base+0x544>
   15434:	ldr	r0, [pc, r0]
   15438:	ldr	r0, [r0]
   1543c:	ldr	r2, [fp, #16]
   15440:	bl	14ea8 <fprintf@plt>
   15444:	ldr	r1, [pc, #244]	; 15540 <test_json@@Base+0x538>
   15448:	add	r1, pc, r1
   1544c:	ldr	r2, [pc, #240]	; 15544 <test_json@@Base+0x53c>
   15450:	ldr	r2, [pc, r2]
   15454:	ldr	r2, [r2]
   15458:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1545c:	str	r0, [sp, #28]
   15460:	mov	r0, r2
   15464:	mov	r2, r3
   15468:	bl	14ea8 <fprintf@plt>
   1546c:	ldr	r1, [pc, #196]	; 15538 <test_json@@Base+0x530>
   15470:	add	r1, pc, r1
   15474:	ldr	r2, [pc, #192]	; 1553c <test_json@@Base+0x534>
   15478:	ldr	r2, [pc, r2]
   1547c:	ldr	r2, [r2]
   15480:	str	r0, [sp, #24]
   15484:	mov	r0, r2
   15488:	bl	14ea8 <fprintf@plt>
   1548c:	ldr	r1, [pc, #156]	; 15530 <test_json@@Base+0x528>
   15490:	add	r1, pc, r1
   15494:	ldr	r2, [pc, #152]	; 15534 <test_json@@Base+0x52c>
   15498:	ldr	r2, [pc, r2]
   1549c:	ldr	r2, [r2]
   154a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   154a4:	str	r0, [sp, #20]
   154a8:	mov	r0, r2
   154ac:	mov	r2, r3
   154b0:	bl	14ea8 <fprintf@plt>
   154b4:	b	154e4 <test_json@@Base+0x4dc>
   154b8:	movw	r0, #0
   154bc:	str	r0, [fp, #-44]	; 0xffffffd4
   154c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   154c4:	bl	2f64c <flatcc_builder_aligned_free@@Base>
   154c8:	ldr	r0, [sp, #252]	; 0xfc
   154cc:	bl	2a060 <flatcc_builder_clear@@Base>
   154d0:	add	r0, sp, #160	; 0xa0
   154d4:	bl	44d44 <flatcc_json_printer_clear@@Base>
   154d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154dc:	sub	sp, fp, #24
   154e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   154e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   154e8:	movw	r1, #0
   154ec:	cmp	r0, r1
   154f0:	beq	15524 <test_json@@Base+0x51c>
   154f4:	ldr	r0, [pc, #160]	; 1559c <test_json@@Base+0x594>
   154f8:	add	r0, pc, r0
   154fc:	ldr	r1, [pc, #156]	; 155a0 <test_json@@Base+0x598>
   15500:	ldr	r1, [pc, r1]
   15504:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15508:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1550c:	ldr	r1, [r1]
   15510:	str	r1, [sp, #16]
   15514:	mov	r1, r2
   15518:	mov	r2, r3
   1551c:	ldr	r3, [sp, #16]
   15520:	bl	156a4 <test_json@@Base+0x69c>
   15524:	mvn	r0, #0
   15528:	str	r0, [fp, #-44]	; 0xffffffd4
   1552c:	b	154c0 <test_json@@Base+0x4b8>
   15530:	andeq	r5, r3, lr, lsr #11
   15534:	andeq	r9, r4, ip, asr #23
   15538:	andeq	r1, r3, ip, lsl pc
   1553c:	andeq	r9, r4, ip, ror #23
   15540:	strdeq	r5, [r3], -r6
   15544:	andeq	r9, r4, r4, lsl ip
   15548:	andeq	r1, r3, fp, lsr #30
   1554c:	andeq	r9, r4, r0, lsr ip
   15550:	andeq	r1, r3, lr, lsr pc
   15554:	andeq	r1, r3, sp, asr pc
   15558:	strdeq	r9, [r4], -r8
   1555c:	andeq	r5, r3, sl, lsr #15
   15560:	andeq	r9, r4, r8, asr #27
   15564:	andeq	r2, r3, r6, lsr r0
   15568:	andeq	r9, r4, r4, lsl lr
   1556c:	andeq	r5, r3, sl, lsl r8
   15570:	andeq	r9, r4, r8, lsr lr
   15574:	andeq	r2, r3, r6, rrx
   15578:	andeq	r9, r4, r4, lsl #29
   1557c:	andeq	r5, r3, sl, lsl #17
   15580:	andeq	r9, r4, r8, lsr #29
   15584:	strdeq	r2, [r3], -r3
   15588:	andeq	r9, r4, ip, ror #29
   1558c:	andeq	r2, r3, ip, ror #1
   15590:	andeq	r9, r4, r0, lsr pc
   15594:	andeq	r1, r3, fp, asr #31
   15598:	andeq	r9, r4, ip, asr sp
   1559c:	muleq	r3, pc, lr	; <UNPREDICTABLE>
   155a0:	andeq	r9, r4, r4, ror #22
   155a4:	andeq	r5, r3, sl, ror r7
   155a8:	andeq	r9, r4, r4, lsl #27
   155ac:	push	{fp, lr}
   155b0:	mov	fp, sp
   155b4:	sub	sp, sp, #8
   155b8:	str	r0, [sp, #4]
   155bc:	str	r1, [sp]
   155c0:	ldr	r0, [sp]
   155c4:	and	r0, r0, #1
   155c8:	cmp	r0, #0
   155cc:	movw	r0, #0
   155d0:	movne	r0, #1
   155d4:	mvn	r1, #0
   155d8:	eor	r0, r0, r1
   155dc:	eor	r0, r0, r1
   155e0:	and	r0, r0, #1
   155e4:	ldr	r2, [sp, #4]
   155e8:	strb	r0, [r2, #26]
   155ec:	ldr	r0, [sp]
   155f0:	and	r0, r0, #2
   155f4:	cmp	r0, #0
   155f8:	movw	r0, #0
   155fc:	movne	r0, #1
   15600:	eor	r0, r0, r1
   15604:	eor	r0, r0, r1
   15608:	and	r0, r0, #1
   1560c:	ldr	r2, [sp, #4]
   15610:	strb	r0, [r2, #27]
   15614:	ldr	r0, [sp]
   15618:	and	r0, r0, #4
   1561c:	cmp	r0, #0
   15620:	movw	r0, #0
   15624:	movne	r0, #1
   15628:	eor	r0, r0, r1
   1562c:	eor	r0, r0, r1
   15630:	and	r0, r0, #1
   15634:	ldr	r2, [sp, #4]
   15638:	strb	r0, [r2, #28]
   1563c:	ldr	r0, [sp]
   15640:	and	r0, r0, #8
   15644:	cmp	r0, #0
   15648:	movw	r0, #0
   1564c:	movne	r0, #1
   15650:	eor	r0, r0, r1
   15654:	eor	r0, r0, r1
   15658:	and	r0, r0, #1
   1565c:	ldr	r1, [sp, #4]
   15660:	strb	r0, [r1, #29]
   15664:	ldr	r0, [sp]
   15668:	and	r0, r0, #16
   1566c:	cmp	r0, #0
   15670:	beq	15684 <test_json@@Base+0x67c>
   15674:	ldr	r0, [sp, #4]
   15678:	movw	r1, #2
   1567c:	and	r1, r1, #255	; 0xff
   15680:	bl	17d54 <main@@Base+0x1408>
   15684:	ldr	r0, [sp]
   15688:	and	r0, r0, #32
   1568c:	cmp	r0, #0
   15690:	beq	1569c <test_json@@Base+0x694>
   15694:	ldr	r0, [sp, #4]
   15698:	bl	17d74 <main@@Base+0x1428>
   1569c:	mov	sp, fp
   156a0:	pop	{fp, pc}
   156a4:	push	{fp, lr}
   156a8:	mov	fp, sp
   156ac:	sub	sp, sp, #48	; 0x30
   156b0:	str	r0, [fp, #-4]
   156b4:	str	r1, [fp, #-8]
   156b8:	str	r2, [fp, #-12]
   156bc:	str	r3, [fp, #-16]
   156c0:	ldr	r0, [fp, #-8]
   156c4:	str	r0, [sp, #4]
   156c8:	ldr	r0, [fp, #-4]
   156cc:	movw	r1, #0
   156d0:	cmp	r0, r1
   156d4:	beq	156ec <test_json@@Base+0x6e4>
   156d8:	ldr	r0, [pc, #412]	; 1587c <test_json@@Base+0x874>
   156dc:	add	r1, pc, r0
   156e0:	ldr	r0, [fp, #-16]
   156e4:	ldr	r2, [fp, #-4]
   156e8:	bl	14ea8 <fprintf@plt>
   156ec:	movw	r0, #0
   156f0:	str	r0, [fp, #-20]	; 0xffffffec
   156f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   156f8:	ldr	r1, [fp, #-12]
   156fc:	cmp	r0, r1
   15700:	bcs	1582c <test_json@@Base+0x824>
   15704:	ldr	r0, [fp, #-20]	; 0xffffffec
   15708:	and	r0, r0, #15
   1570c:	cmp	r0, #0
   15710:	bne	1574c <test_json@@Base+0x744>
   15714:	ldr	r0, [fp, #-20]	; 0xffffffec
   15718:	cmp	r0, #0
   1571c:	beq	15734 <test_json@@Base+0x72c>
   15720:	ldr	r0, [pc, #356]	; 1588c <test_json@@Base+0x884>
   15724:	add	r1, pc, r0
   15728:	add	r2, sp, #11
   1572c:	ldr	r0, [fp, #-16]
   15730:	bl	14ea8 <fprintf@plt>
   15734:	ldr	r0, [pc, #340]	; 15890 <test_json@@Base+0x888>
   15738:	add	r1, pc, r0
   1573c:	ldr	r0, [fp, #-16]
   15740:	ldr	r2, [fp, #-20]	; 0xffffffec
   15744:	bl	14ea8 <fprintf@plt>
   15748:	b	15770 <test_json@@Base+0x768>
   1574c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15750:	and	r0, r0, #7
   15754:	cmp	r0, #0
   15758:	bne	1576c <test_json@@Base+0x764>
   1575c:	ldr	r0, [pc, #292]	; 15888 <test_json@@Base+0x880>
   15760:	add	r1, pc, r0
   15764:	ldr	r0, [fp, #-16]
   15768:	bl	14ea8 <fprintf@plt>
   1576c:	b	15770 <test_json@@Base+0x768>
   15770:	ldr	r0, [pc, #284]	; 15894 <test_json@@Base+0x88c>
   15774:	add	r1, pc, r0
   15778:	ldr	r0, [fp, #-16]
   1577c:	ldr	r2, [sp, #4]
   15780:	ldr	r3, [fp, #-20]	; 0xffffffec
   15784:	add	r2, r2, r3
   15788:	ldrb	r2, [r2]
   1578c:	bl	14ea8 <fprintf@plt>
   15790:	ldr	r1, [sp, #4]
   15794:	ldr	r2, [fp, #-20]	; 0xffffffec
   15798:	add	r1, r1, r2
   1579c:	ldrb	r1, [r1]
   157a0:	cmp	r1, #32
   157a4:	blt	157c0 <test_json@@Base+0x7b8>
   157a8:	ldr	r0, [sp, #4]
   157ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   157b0:	add	r0, r0, r1
   157b4:	ldrb	r0, [r0]
   157b8:	cmp	r0, #126	; 0x7e
   157bc:	ble	157dc <test_json@@Base+0x7d4>
   157c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   157c4:	and	r0, r0, #15
   157c8:	add	r1, sp, #11
   157cc:	add	r0, r1, r0
   157d0:	movw	r1, #46	; 0x2e
   157d4:	strb	r1, [r0]
   157d8:	b	15800 <test_json@@Base+0x7f8>
   157dc:	ldr	r0, [sp, #4]
   157e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   157e4:	add	r0, r0, r1
   157e8:	ldrb	r0, [r0]
   157ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   157f0:	and	r1, r1, #15
   157f4:	add	r2, sp, #11
   157f8:	add	r1, r2, r1
   157fc:	strb	r0, [r1]
   15800:	ldr	r0, [fp, #-20]	; 0xffffffec
   15804:	and	r0, r0, #15
   15808:	add	r0, r0, #1
   1580c:	add	r1, sp, #11
   15810:	add	r0, r1, r0
   15814:	movw	r1, #0
   15818:	strb	r1, [r0]
   1581c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15820:	add	r0, r0, #1
   15824:	str	r0, [fp, #-20]	; 0xffffffec
   15828:	b	156f4 <test_json@@Base+0x6ec>
   1582c:	b	15830 <test_json@@Base+0x828>
   15830:	ldr	r0, [fp, #-20]	; 0xffffffec
   15834:	and	r0, r0, #15
   15838:	cmp	r0, #0
   1583c:	beq	15860 <test_json@@Base+0x858>
   15840:	ldr	r0, [pc, #60]	; 15884 <test_json@@Base+0x87c>
   15844:	add	r1, pc, r0
   15848:	ldr	r0, [fp, #-16]
   1584c:	bl	14ea8 <fprintf@plt>
   15850:	ldr	r1, [fp, #-20]	; 0xffffffec
   15854:	add	r1, r1, #1
   15858:	str	r1, [fp, #-20]	; 0xffffffec
   1585c:	b	15830 <test_json@@Base+0x828>
   15860:	ldr	r0, [pc, #24]	; 15880 <test_json@@Base+0x878>
   15864:	add	r1, pc, r0
   15868:	add	r2, sp, #11
   1586c:	ldr	r0, [fp, #-16]
   15870:	bl	14ea8 <fprintf@plt>
   15874:	mov	sp, fp
   15878:	pop	{fp, pc}
   1587c:	andeq	r5, r3, fp, asr r3
   15880:	ldrdeq	r5, [r3], -r8
   15884:	andeq	r5, r3, ip, lsl #4
   15888:	strdeq	r5, [r3], -r2
   1588c:	andeq	r5, r3, r8, lsl r3
   15890:	andeq	r5, r3, sl, lsl #6
   15894:	ldrdeq	r5, [r3], -r6

00015898 <edge_case_tests@@Base>:
   15898:	push	{fp, lr}
   1589c:	mov	fp, sp
   158a0:	sub	sp, sp, #72	; 0x48
   158a4:	ldr	r0, [pc, #1276]	; 15da8 <edge_case_tests@@Base+0x510>
   158a8:	add	r1, pc, r0
   158ac:	ldr	r0, [pc, #1272]	; 15dac <edge_case_tests@@Base+0x514>
   158b0:	add	r2, pc, r0
   158b4:	ldr	r0, [pc, #1268]	; 15db0 <edge_case_tests@@Base+0x518>
   158b8:	add	r0, pc, r0
   158bc:	movw	r3, #0
   158c0:	str	r3, [fp, #-4]
   158c4:	str	r0, [fp, #-8]
   158c8:	ldr	r0, [fp, #-8]
   158cc:	str	r3, [fp, #-12]
   158d0:	ldr	ip, [fp, #-12]
   158d4:	str	ip, [sp]
   158d8:	str	ip, [sp, #4]
   158dc:	movw	lr, #155	; 0x9b
   158e0:	str	lr, [sp, #8]
   158e4:	bl	15008 <test_json@@Base>
   158e8:	ldr	r1, [pc, #1200]	; 15da0 <edge_case_tests@@Base+0x508>
   158ec:	add	r1, pc, r1
   158f0:	ldr	r2, [pc, #1196]	; 15da4 <edge_case_tests@@Base+0x50c>
   158f4:	add	r2, pc, r2
   158f8:	ldr	r3, [fp, #-4]
   158fc:	orr	r0, r3, r0
   15900:	str	r0, [fp, #-4]
   15904:	ldr	r0, [fp, #-8]
   15908:	movw	r3, #0
   1590c:	str	r3, [fp, #-16]
   15910:	movw	ip, #2
   15914:	str	ip, [sp]
   15918:	ldr	ip, [fp, #-16]
   1591c:	str	ip, [sp, #4]
   15920:	movw	lr, #168	; 0xa8
   15924:	str	lr, [sp, #8]
   15928:	bl	15008 <test_json@@Base>
   1592c:	ldr	r1, [pc, #1124]	; 15d98 <edge_case_tests@@Base+0x500>
   15930:	add	r1, pc, r1
   15934:	ldr	r2, [pc, #1120]	; 15d9c <edge_case_tests@@Base+0x504>
   15938:	add	r2, pc, r2
   1593c:	ldr	r3, [fp, #-4]
   15940:	orr	r0, r3, r0
   15944:	str	r0, [fp, #-4]
   15948:	ldr	r0, [fp, #-8]
   1594c:	movw	r3, #0
   15950:	str	r3, [fp, #-20]	; 0xffffffec
   15954:	ldr	ip, [fp, #-20]	; 0xffffffec
   15958:	str	ip, [sp]
   1595c:	movw	lr, #2
   15960:	str	lr, [sp, #4]
   15964:	movw	lr, #172	; 0xac
   15968:	str	lr, [sp, #8]
   1596c:	bl	15008 <test_json@@Base>
   15970:	ldr	r1, [pc, #1048]	; 15d90 <edge_case_tests@@Base+0x4f8>
   15974:	add	r1, pc, r1
   15978:	ldr	r2, [pc, #1044]	; 15d94 <edge_case_tests@@Base+0x4fc>
   1597c:	add	r2, pc, r2
   15980:	ldr	r3, [fp, #-4]
   15984:	orr	r0, r3, r0
   15988:	str	r0, [fp, #-4]
   1598c:	ldr	r0, [fp, #-8]
   15990:	movw	r3, #0
   15994:	movw	ip, #2
   15998:	str	ip, [sp]
   1599c:	movw	ip, #4
   159a0:	str	ip, [sp, #4]
   159a4:	movw	ip, #176	; 0xb0
   159a8:	str	ip, [sp, #8]
   159ac:	bl	15008 <test_json@@Base>
   159b0:	ldr	r1, [pc, #976]	; 15d88 <edge_case_tests@@Base+0x4f0>
   159b4:	add	r1, pc, r1
   159b8:	ldr	r2, [pc, #972]	; 15d8c <edge_case_tests@@Base+0x4f4>
   159bc:	add	r2, pc, r2
   159c0:	ldr	r3, [fp, #-4]
   159c4:	orr	r0, r3, r0
   159c8:	str	r0, [fp, #-4]
   159cc:	ldr	r0, [fp, #-8]
   159d0:	movw	r3, #0
   159d4:	str	r3, [fp, #-24]	; 0xffffffe8
   159d8:	ldr	ip, [fp, #-24]	; 0xffffffe8
   159dc:	str	ip, [sp]
   159e0:	movw	lr, #8
   159e4:	str	lr, [sp, #4]
   159e8:	movw	lr, #180	; 0xb4
   159ec:	str	lr, [sp, #8]
   159f0:	bl	15008 <test_json@@Base>
   159f4:	ldr	r1, [pc, #900]	; 15d80 <edge_case_tests@@Base+0x4e8>
   159f8:	add	r1, pc, r1
   159fc:	ldr	r2, [pc, #896]	; 15d84 <edge_case_tests@@Base+0x4ec>
   15a00:	add	r2, pc, r2
   15a04:	ldr	r3, [fp, #-4]
   15a08:	orr	r0, r3, r0
   15a0c:	str	r0, [fp, #-4]
   15a10:	ldr	r0, [fp, #-8]
   15a14:	movw	r3, #0
   15a18:	str	r3, [fp, #-28]	; 0xffffffe4
   15a1c:	movw	ip, #2
   15a20:	str	ip, [sp]
   15a24:	ldr	ip, [fp, #-28]	; 0xffffffe4
   15a28:	str	ip, [sp, #4]
   15a2c:	movw	lr, #195	; 0xc3
   15a30:	str	lr, [sp, #8]
   15a34:	bl	15008 <test_json@@Base>
   15a38:	ldr	r1, [pc, #824]	; 15d78 <edge_case_tests@@Base+0x4e0>
   15a3c:	add	r1, pc, r1
   15a40:	ldr	r2, [pc, #820]	; 15d7c <edge_case_tests@@Base+0x4e4>
   15a44:	add	r2, pc, r2
   15a48:	ldr	r3, [fp, #-4]
   15a4c:	orr	r0, r3, r0
   15a50:	str	r0, [fp, #-4]
   15a54:	ldr	r0, [fp, #-8]
   15a58:	movw	r3, #0
   15a5c:	str	r3, [fp, #-32]	; 0xffffffe0
   15a60:	movw	ip, #1
   15a64:	str	ip, [sp]
   15a68:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15a6c:	str	ip, [sp, #4]
   15a70:	movw	lr, #199	; 0xc7
   15a74:	str	lr, [sp, #8]
   15a78:	bl	15008 <test_json@@Base>
   15a7c:	ldr	r1, [pc, #748]	; 15d70 <edge_case_tests@@Base+0x4d8>
   15a80:	add	r1, pc, r1
   15a84:	ldr	r2, [pc, #744]	; 15d74 <edge_case_tests@@Base+0x4dc>
   15a88:	add	r2, pc, r2
   15a8c:	ldr	r3, [fp, #-4]
   15a90:	orr	r0, r3, r0
   15a94:	str	r0, [fp, #-4]
   15a98:	ldr	r0, [fp, #-8]
   15a9c:	movw	r3, #0
   15aa0:	movw	ip, #1
   15aa4:	str	ip, [sp]
   15aa8:	str	ip, [sp, #4]
   15aac:	movw	ip, #203	; 0xcb
   15ab0:	str	ip, [sp, #8]
   15ab4:	bl	15008 <test_json@@Base>
   15ab8:	ldr	r1, [pc, #680]	; 15d68 <edge_case_tests@@Base+0x4d0>
   15abc:	add	r1, pc, r1
   15ac0:	ldr	r2, [pc, #676]	; 15d6c <edge_case_tests@@Base+0x4d4>
   15ac4:	add	r2, pc, r2
   15ac8:	ldr	r3, [fp, #-4]
   15acc:	orr	r0, r3, r0
   15ad0:	str	r0, [fp, #-4]
   15ad4:	ldr	r0, [fp, #-8]
   15ad8:	movw	r3, #0
   15adc:	str	r3, [sp, #36]	; 0x24
   15ae0:	movw	ip, #1
   15ae4:	str	ip, [sp]
   15ae8:	ldr	ip, [sp, #36]	; 0x24
   15aec:	str	ip, [sp, #4]
   15af0:	movw	lr, #209	; 0xd1
   15af4:	str	lr, [sp, #8]
   15af8:	bl	15008 <test_json@@Base>
   15afc:	ldr	r1, [pc, #604]	; 15d60 <edge_case_tests@@Base+0x4c8>
   15b00:	add	r1, pc, r1
   15b04:	ldr	r2, [pc, #600]	; 15d64 <edge_case_tests@@Base+0x4cc>
   15b08:	add	r2, pc, r2
   15b0c:	ldr	r3, [fp, #-4]
   15b10:	orr	r0, r3, r0
   15b14:	str	r0, [fp, #-4]
   15b18:	ldr	r0, [fp, #-8]
   15b1c:	movw	r3, #0
   15b20:	str	r3, [sp, #32]
   15b24:	movw	ip, #2
   15b28:	str	ip, [sp]
   15b2c:	ldr	ip, [sp, #32]
   15b30:	str	ip, [sp, #4]
   15b34:	movw	lr, #217	; 0xd9
   15b38:	str	lr, [sp, #8]
   15b3c:	bl	15008 <test_json@@Base>
   15b40:	ldr	r1, [pc, #528]	; 15d58 <edge_case_tests@@Base+0x4c0>
   15b44:	add	r1, pc, r1
   15b48:	ldr	r2, [pc, #524]	; 15d5c <edge_case_tests@@Base+0x4c4>
   15b4c:	add	r2, pc, r2
   15b50:	ldr	r3, [fp, #-4]
   15b54:	orr	r0, r3, r0
   15b58:	str	r0, [fp, #-4]
   15b5c:	ldr	r0, [fp, #-8]
   15b60:	movw	r3, #0
   15b64:	str	r3, [sp, #28]
   15b68:	ldr	ip, [sp, #28]
   15b6c:	str	ip, [sp]
   15b70:	movw	lr, #2
   15b74:	str	lr, [sp, #4]
   15b78:	movw	lr, #221	; 0xdd
   15b7c:	str	lr, [sp, #8]
   15b80:	bl	15008 <test_json@@Base>
   15b84:	ldr	r1, [pc, #452]	; 15d50 <edge_case_tests@@Base+0x4b8>
   15b88:	add	r1, pc, r1
   15b8c:	ldr	r2, [pc, #448]	; 15d54 <edge_case_tests@@Base+0x4bc>
   15b90:	add	r2, pc, r2
   15b94:	ldr	r3, [fp, #-4]
   15b98:	orr	r0, r3, r0
   15b9c:	str	r0, [fp, #-4]
   15ba0:	ldr	r0, [fp, #-8]
   15ba4:	movw	r3, #0
   15ba8:	movw	ip, #2
   15bac:	str	ip, [sp]
   15bb0:	movw	ip, #4
   15bb4:	str	ip, [sp, #4]
   15bb8:	movw	ip, #225	; 0xe1
   15bbc:	str	ip, [sp, #8]
   15bc0:	bl	15008 <test_json@@Base>
   15bc4:	ldr	r1, [pc, #380]	; 15d48 <edge_case_tests@@Base+0x4b0>
   15bc8:	add	r1, pc, r1
   15bcc:	ldr	r2, [pc, #376]	; 15d4c <edge_case_tests@@Base+0x4b4>
   15bd0:	add	r2, pc, r2
   15bd4:	ldr	r3, [fp, #-4]
   15bd8:	orr	r0, r3, r0
   15bdc:	str	r0, [fp, #-4]
   15be0:	ldr	r0, [fp, #-8]
   15be4:	movw	r3, #0
   15be8:	str	r3, [sp, #24]
   15bec:	ldr	ip, [sp, #24]
   15bf0:	str	ip, [sp]
   15bf4:	movw	lr, #8
   15bf8:	str	lr, [sp, #4]
   15bfc:	movw	lr, #229	; 0xe5
   15c00:	str	lr, [sp, #8]
   15c04:	bl	15008 <test_json@@Base>
   15c08:	ldr	r1, [pc, #304]	; 15d40 <edge_case_tests@@Base+0x4a8>
   15c0c:	add	r1, pc, r1
   15c10:	ldr	r2, [pc, #300]	; 15d44 <edge_case_tests@@Base+0x4ac>
   15c14:	add	r2, pc, r2
   15c18:	ldr	r3, [fp, #-4]
   15c1c:	orr	r0, r3, r0
   15c20:	str	r0, [fp, #-4]
   15c24:	ldr	r0, [fp, #-8]
   15c28:	movw	r3, #0
   15c2c:	str	r3, [sp, #20]
   15c30:	movw	ip, #2
   15c34:	str	ip, [sp]
   15c38:	ldr	ip, [sp, #20]
   15c3c:	str	ip, [sp, #4]
   15c40:	movw	lr, #233	; 0xe9
   15c44:	str	lr, [sp, #8]
   15c48:	bl	15008 <test_json@@Base>
   15c4c:	ldr	r1, [pc, #228]	; 15d38 <edge_case_tests@@Base+0x4a0>
   15c50:	add	r1, pc, r1
   15c54:	ldr	r2, [pc, #224]	; 15d3c <edge_case_tests@@Base+0x4a4>
   15c58:	add	r2, pc, r2
   15c5c:	ldr	r3, [fp, #-4]
   15c60:	orr	r0, r3, r0
   15c64:	str	r0, [fp, #-4]
   15c68:	ldr	r0, [fp, #-8]
   15c6c:	movw	r3, #0
   15c70:	str	r3, [sp, #16]
   15c74:	movw	ip, #1
   15c78:	str	ip, [sp]
   15c7c:	ldr	ip, [sp, #16]
   15c80:	str	ip, [sp, #4]
   15c84:	movw	lr, #237	; 0xed
   15c88:	str	lr, [sp, #8]
   15c8c:	bl	15008 <test_json@@Base>
   15c90:	ldr	r1, [pc, #152]	; 15d30 <edge_case_tests@@Base+0x498>
   15c94:	add	r1, pc, r1
   15c98:	ldr	r2, [pc, #148]	; 15d34 <edge_case_tests@@Base+0x49c>
   15c9c:	add	r2, pc, r2
   15ca0:	ldr	r3, [fp, #-4]
   15ca4:	orr	r0, r3, r0
   15ca8:	str	r0, [fp, #-4]
   15cac:	ldr	r0, [fp, #-8]
   15cb0:	movw	r3, #0
   15cb4:	movw	ip, #1
   15cb8:	str	ip, [sp]
   15cbc:	str	ip, [sp, #4]
   15cc0:	movw	ip, #241	; 0xf1
   15cc4:	str	ip, [sp, #8]
   15cc8:	bl	15008 <test_json@@Base>
   15ccc:	ldr	r1, [pc, #84]	; 15d28 <edge_case_tests@@Base+0x490>
   15cd0:	add	r1, pc, r1
   15cd4:	ldr	r2, [pc, #80]	; 15d2c <edge_case_tests@@Base+0x494>
   15cd8:	add	r2, pc, r2
   15cdc:	ldr	r3, [fp, #-4]
   15ce0:	orr	r0, r3, r0
   15ce4:	str	r0, [fp, #-4]
   15ce8:	ldr	r0, [fp, #-8]
   15cec:	movw	r3, #0
   15cf0:	str	r3, [sp, #12]
   15cf4:	movw	ip, #1
   15cf8:	str	ip, [sp]
   15cfc:	ldr	ip, [sp, #12]
   15d00:	str	ip, [sp, #4]
   15d04:	movw	lr, #247	; 0xf7
   15d08:	str	lr, [sp, #8]
   15d0c:	bl	15008 <test_json@@Base>
   15d10:	ldr	r1, [fp, #-4]
   15d14:	orr	r0, r1, r0
   15d18:	str	r0, [fp, #-4]
   15d1c:	ldr	r0, [fp, #-4]
   15d20:	mov	sp, fp
   15d24:	pop	{fp, pc}
   15d28:	muleq	r3, pc, fp	; <UNPREDICTABLE>
   15d2c:	andeq	r1, r3, r2, asr #18
   15d30:			; <UNDEFINED> instruction: 0x00031bb1
   15d34:	muleq	r3, r9, r9
   15d38:	strdeq	r1, [r3], -r5
   15d3c:	andeq	r1, r3, r2, asr #19
   15d40:	andeq	r1, r3, r9, lsl ip
   15d44:	andeq	r1, r3, r1, lsl #16
   15d48:	andeq	r1, r3, r3, lsr fp
   15d4c:	andeq	r1, r3, lr, lsr fp
   15d50:	andeq	r1, r3, r5, lsr fp
   15d54:	andeq	r1, r3, fp, ror #17
   15d58:	muleq	r3, r6, fp
   15d5c:	andeq	r1, r3, r2, lsl r9
   15d60:			; <UNDEFINED> instruction: 0x00031bbd
   15d64:	andeq	r1, r3, sp, lsl #18
   15d68:	muleq	r3, r0, fp
   15d6c:	andeq	r1, r3, r6, asr fp
   15d70:	andeq	r1, r3, r8, ror #22
   15d74:	andeq	r1, r3, sp, lsr #23
   15d78:	andeq	r1, r3, ip, lsr #23
   15d7c:	ldrdeq	r1, [r3], -r6
   15d80:	andeq	r1, r3, sl, asr #23
   15d84:	andeq	r1, r3, r5, lsl sl
   15d88:	ldrdeq	r1, [r3], -sl
   15d8c:	strdeq	r1, [r3], -r4
   15d90:	andeq	r1, r3, r0, lsl #21
   15d94:	strdeq	r1, [r3], -pc	; <UNPREDICTABLE>
   15d98:	andeq	r1, r3, r7, lsl #22
   15d9c:	andeq	r1, r3, r6, lsr #22
   15da0:	andeq	r1, r3, r8, lsl #22
   15da4:	andeq	r1, r3, r1, lsr #22
   15da8:	strdeq	r1, [r3], -sp
   15dac:	andeq	r1, r3, r6, lsr #22
   15db0:	andeq	r9, r4, r0, lsr #12

00015db4 <error_case_tests@@Base>:
   15db4:	push	{fp, lr}
   15db8:	mov	fp, sp
   15dbc:	sub	sp, sp, #96	; 0x60
   15dc0:	ldr	r0, [pc, #1168]	; 16258 <error_case_tests@@Base+0x4a4>
   15dc4:	add	r1, pc, r0
   15dc8:	ldr	r0, [pc, #1164]	; 1625c <error_case_tests@@Base+0x4a8>
   15dcc:	add	r0, pc, r0
   15dd0:	movw	r2, #0
   15dd4:	str	r2, [fp, #-4]
   15dd8:	str	r0, [fp, #-8]
   15ddc:	ldr	r0, [fp, #-8]
   15de0:	str	r2, [fp, #-12]
   15de4:	movw	r3, #13
   15de8:	ldr	ip, [fp, #-12]
   15dec:	str	ip, [sp]
   15df0:	str	ip, [sp, #4]
   15df4:	movw	lr, #285	; 0x11d
   15df8:	str	lr, [sp, #8]
   15dfc:	bl	15008 <test_json@@Base>
   15e00:	ldr	r1, [pc, #1100]	; 16254 <error_case_tests@@Base+0x4a0>
   15e04:	add	r1, pc, r1
   15e08:	ldr	r2, [fp, #-4]
   15e0c:	orr	r0, r2, r0
   15e10:	str	r0, [fp, #-4]
   15e14:	ldr	r0, [fp, #-8]
   15e18:	movw	r2, #0
   15e1c:	str	r2, [fp, #-16]
   15e20:	movw	r3, #13
   15e24:	ldr	ip, [fp, #-16]
   15e28:	str	ip, [sp]
   15e2c:	str	ip, [sp, #4]
   15e30:	movw	lr, #287	; 0x11f
   15e34:	str	lr, [sp, #8]
   15e38:	bl	15008 <test_json@@Base>
   15e3c:	ldr	r1, [pc, #1036]	; 16250 <error_case_tests@@Base+0x49c>
   15e40:	add	r1, pc, r1
   15e44:	ldr	r2, [fp, #-4]
   15e48:	orr	r0, r2, r0
   15e4c:	str	r0, [fp, #-4]
   15e50:	ldr	r0, [fp, #-8]
   15e54:	movw	r2, #0
   15e58:	str	r2, [fp, #-20]	; 0xffffffec
   15e5c:	movw	r3, #13
   15e60:	ldr	ip, [fp, #-20]	; 0xffffffec
   15e64:	str	ip, [sp]
   15e68:	str	ip, [sp, #4]
   15e6c:	movw	lr, #289	; 0x121
   15e70:	str	lr, [sp, #8]
   15e74:	bl	15008 <test_json@@Base>
   15e78:	ldr	r1, [pc, #972]	; 1624c <error_case_tests@@Base+0x498>
   15e7c:	add	r1, pc, r1
   15e80:	ldr	r2, [fp, #-4]
   15e84:	orr	r0, r2, r0
   15e88:	str	r0, [fp, #-4]
   15e8c:	ldr	r0, [fp, #-8]
   15e90:	movw	r2, #0
   15e94:	str	r2, [fp, #-24]	; 0xffffffe8
   15e98:	movw	r3, #13
   15e9c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   15ea0:	str	ip, [sp]
   15ea4:	str	ip, [sp, #4]
   15ea8:	movw	lr, #291	; 0x123
   15eac:	str	lr, [sp, #8]
   15eb0:	bl	15008 <test_json@@Base>
   15eb4:	ldr	r1, [pc, #908]	; 16248 <error_case_tests@@Base+0x494>
   15eb8:	add	r1, pc, r1
   15ebc:	ldr	r2, [fp, #-4]
   15ec0:	orr	r0, r2, r0
   15ec4:	str	r0, [fp, #-4]
   15ec8:	ldr	r0, [fp, #-8]
   15ecc:	movw	r2, #0
   15ed0:	str	r2, [fp, #-28]	; 0xffffffe4
   15ed4:	movw	r3, #13
   15ed8:	ldr	ip, [fp, #-28]	; 0xffffffe4
   15edc:	str	ip, [sp]
   15ee0:	str	ip, [sp, #4]
   15ee4:	movw	lr, #293	; 0x125
   15ee8:	str	lr, [sp, #8]
   15eec:	bl	15008 <test_json@@Base>
   15ef0:	ldr	r1, [pc, #844]	; 16244 <error_case_tests@@Base+0x490>
   15ef4:	add	r1, pc, r1
   15ef8:	ldr	r2, [fp, #-4]
   15efc:	orr	r0, r2, r0
   15f00:	str	r0, [fp, #-4]
   15f04:	ldr	r0, [fp, #-8]
   15f08:	movw	r2, #0
   15f0c:	str	r2, [fp, #-32]	; 0xffffffe0
   15f10:	movw	r3, #13
   15f14:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15f18:	str	ip, [sp]
   15f1c:	str	ip, [sp, #4]
   15f20:	movw	lr, #296	; 0x128
   15f24:	str	lr, [sp, #8]
   15f28:	bl	15008 <test_json@@Base>
   15f2c:	ldr	r1, [pc, #780]	; 16240 <error_case_tests@@Base+0x48c>
   15f30:	add	r1, pc, r1
   15f34:	ldr	r2, [fp, #-4]
   15f38:	orr	r0, r2, r0
   15f3c:	str	r0, [fp, #-4]
   15f40:	ldr	r0, [fp, #-8]
   15f44:	movw	r2, #0
   15f48:	str	r2, [fp, #-36]	; 0xffffffdc
   15f4c:	movw	r3, #13
   15f50:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15f54:	str	ip, [sp]
   15f58:	str	ip, [sp, #4]
   15f5c:	movw	lr, #299	; 0x12b
   15f60:	str	lr, [sp, #8]
   15f64:	bl	15008 <test_json@@Base>
   15f68:	ldr	r1, [pc, #716]	; 1623c <error_case_tests@@Base+0x488>
   15f6c:	add	r1, pc, r1
   15f70:	ldr	r2, [fp, #-4]
   15f74:	orr	r0, r2, r0
   15f78:	str	r0, [fp, #-4]
   15f7c:	ldr	r0, [fp, #-8]
   15f80:	movw	r2, #0
   15f84:	str	r2, [fp, #-40]	; 0xffffffd8
   15f88:	movw	r3, #13
   15f8c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   15f90:	str	ip, [sp]
   15f94:	str	ip, [sp, #4]
   15f98:	movw	lr, #303	; 0x12f
   15f9c:	str	lr, [sp, #8]
   15fa0:	bl	15008 <test_json@@Base>
   15fa4:	ldr	r1, [pc, #652]	; 16238 <error_case_tests@@Base+0x484>
   15fa8:	add	r1, pc, r1
   15fac:	ldr	r2, [fp, #-4]
   15fb0:	orr	r0, r2, r0
   15fb4:	str	r0, [fp, #-4]
   15fb8:	ldr	r0, [fp, #-8]
   15fbc:	movw	r2, #0
   15fc0:	str	r2, [fp, #-44]	; 0xffffffd4
   15fc4:	movw	r3, #13
   15fc8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15fcc:	str	ip, [sp]
   15fd0:	str	ip, [sp, #4]
   15fd4:	movw	lr, #307	; 0x133
   15fd8:	str	lr, [sp, #8]
   15fdc:	bl	15008 <test_json@@Base>
   15fe0:	ldr	r1, [pc, #588]	; 16234 <error_case_tests@@Base+0x480>
   15fe4:	add	r1, pc, r1
   15fe8:	ldr	r2, [fp, #-4]
   15fec:	orr	r0, r2, r0
   15ff0:	str	r0, [fp, #-4]
   15ff4:	ldr	r0, [fp, #-8]
   15ff8:	movw	r2, #0
   15ffc:	str	r2, [sp, #48]	; 0x30
   16000:	movw	r3, #13
   16004:	ldr	ip, [sp, #48]	; 0x30
   16008:	str	ip, [sp]
   1600c:	str	ip, [sp, #4]
   16010:	movw	lr, #322	; 0x142
   16014:	str	lr, [sp, #8]
   16018:	bl	15008 <test_json@@Base>
   1601c:	ldr	r1, [pc, #524]	; 16230 <error_case_tests@@Base+0x47c>
   16020:	add	r1, pc, r1
   16024:	ldr	r2, [fp, #-4]
   16028:	orr	r0, r2, r0
   1602c:	str	r0, [fp, #-4]
   16030:	ldr	r0, [fp, #-8]
   16034:	movw	r2, #0
   16038:	str	r2, [sp, #44]	; 0x2c
   1603c:	movw	r3, #13
   16040:	ldr	ip, [sp, #44]	; 0x2c
   16044:	str	ip, [sp]
   16048:	str	ip, [sp, #4]
   1604c:	movw	lr, #324	; 0x144
   16050:	str	lr, [sp, #8]
   16054:	bl	15008 <test_json@@Base>
   16058:	ldr	r1, [pc, #460]	; 1622c <error_case_tests@@Base+0x478>
   1605c:	add	r1, pc, r1
   16060:	ldr	r2, [fp, #-4]
   16064:	orr	r0, r2, r0
   16068:	str	r0, [fp, #-4]
   1606c:	ldr	r0, [fp, #-8]
   16070:	movw	r2, #0
   16074:	str	r2, [sp, #40]	; 0x28
   16078:	movw	r3, #13
   1607c:	ldr	ip, [sp, #40]	; 0x28
   16080:	str	ip, [sp]
   16084:	str	ip, [sp, #4]
   16088:	movw	lr, #326	; 0x146
   1608c:	str	lr, [sp, #8]
   16090:	bl	15008 <test_json@@Base>
   16094:	ldr	r1, [pc, #396]	; 16228 <error_case_tests@@Base+0x474>
   16098:	add	r1, pc, r1
   1609c:	ldr	r2, [fp, #-4]
   160a0:	orr	r0, r2, r0
   160a4:	str	r0, [fp, #-4]
   160a8:	ldr	r0, [fp, #-8]
   160ac:	movw	r2, #0
   160b0:	str	r2, [sp, #36]	; 0x24
   160b4:	movw	r3, #13
   160b8:	ldr	ip, [sp, #36]	; 0x24
   160bc:	str	ip, [sp]
   160c0:	str	ip, [sp, #4]
   160c4:	movw	lr, #328	; 0x148
   160c8:	str	lr, [sp, #8]
   160cc:	bl	15008 <test_json@@Base>
   160d0:	ldr	r1, [pc, #332]	; 16224 <error_case_tests@@Base+0x470>
   160d4:	add	r1, pc, r1
   160d8:	ldr	r2, [fp, #-4]
   160dc:	orr	r0, r2, r0
   160e0:	str	r0, [fp, #-4]
   160e4:	ldr	r0, [fp, #-8]
   160e8:	movw	r2, #0
   160ec:	str	r2, [sp, #32]
   160f0:	movw	r3, #13
   160f4:	ldr	ip, [sp, #32]
   160f8:	str	ip, [sp]
   160fc:	str	ip, [sp, #4]
   16100:	movw	lr, #330	; 0x14a
   16104:	str	lr, [sp, #8]
   16108:	bl	15008 <test_json@@Base>
   1610c:	ldr	r1, [pc, #268]	; 16220 <error_case_tests@@Base+0x46c>
   16110:	add	r1, pc, r1
   16114:	ldr	r2, [fp, #-4]
   16118:	orr	r0, r2, r0
   1611c:	str	r0, [fp, #-4]
   16120:	ldr	r0, [fp, #-8]
   16124:	movw	r2, #0
   16128:	str	r2, [sp, #28]
   1612c:	movw	r3, #13
   16130:	ldr	ip, [sp, #28]
   16134:	str	ip, [sp]
   16138:	str	ip, [sp, #4]
   1613c:	movw	lr, #333	; 0x14d
   16140:	str	lr, [sp, #8]
   16144:	bl	15008 <test_json@@Base>
   16148:	ldr	r1, [pc, #204]	; 1621c <error_case_tests@@Base+0x468>
   1614c:	add	r1, pc, r1
   16150:	ldr	r2, [fp, #-4]
   16154:	orr	r0, r2, r0
   16158:	str	r0, [fp, #-4]
   1615c:	ldr	r0, [fp, #-8]
   16160:	movw	r2, #0
   16164:	str	r2, [sp, #24]
   16168:	movw	r3, #13
   1616c:	ldr	ip, [sp, #24]
   16170:	str	ip, [sp]
   16174:	str	ip, [sp, #4]
   16178:	movw	lr, #336	; 0x150
   1617c:	str	lr, [sp, #8]
   16180:	bl	15008 <test_json@@Base>
   16184:	ldr	r1, [pc, #140]	; 16218 <error_case_tests@@Base+0x464>
   16188:	add	r1, pc, r1
   1618c:	ldr	r2, [fp, #-4]
   16190:	orr	r0, r2, r0
   16194:	str	r0, [fp, #-4]
   16198:	ldr	r0, [fp, #-8]
   1619c:	movw	r2, #0
   161a0:	str	r2, [sp, #20]
   161a4:	movw	r3, #13
   161a8:	ldr	ip, [sp, #20]
   161ac:	str	ip, [sp]
   161b0:	str	ip, [sp, #4]
   161b4:	movw	lr, #340	; 0x154
   161b8:	str	lr, [sp, #8]
   161bc:	bl	15008 <test_json@@Base>
   161c0:	ldr	r1, [pc, #76]	; 16214 <error_case_tests@@Base+0x460>
   161c4:	add	r1, pc, r1
   161c8:	ldr	r2, [fp, #-4]
   161cc:	orr	r0, r2, r0
   161d0:	str	r0, [fp, #-4]
   161d4:	ldr	r0, [fp, #-8]
   161d8:	movw	r2, #0
   161dc:	str	r2, [sp, #16]
   161e0:	movw	r3, #13
   161e4:	ldr	ip, [sp, #16]
   161e8:	str	ip, [sp]
   161ec:	str	ip, [sp, #4]
   161f0:	movw	lr, #344	; 0x158
   161f4:	str	lr, [sp, #8]
   161f8:	bl	15008 <test_json@@Base>
   161fc:	ldr	r1, [fp, #-4]
   16200:	orr	r0, r1, r0
   16204:	str	r0, [fp, #-4]
   16208:	ldr	r0, [fp, #-4]
   1620c:	mov	sp, fp
   16210:	pop	{fp, pc}
   16214:	andeq	r1, r3, r7, ror lr
   16218:	andeq	r1, r3, r4, lsl #28
   1621c:			; <UNDEFINED> instruction: 0x00031db7
   16220:	andeq	r1, r3, r7, ror #26
   16224:	andeq	r1, r3, r6, asr sp
   16228:	andeq	r1, r3, r2, asr #26
   1622c:	andeq	r1, r3, ip, lsr #26
   16230:	andeq	r1, r3, r3, lsl sp
   16234:	andeq	r1, r3, r7, lsr sp
   16238:	andeq	r1, r3, ip, lsr #25
   1623c:	andeq	r1, r3, r1, lsr #24
   16240:	andeq	r1, r3, r2, asr #23
   16244:	andeq	r1, r3, r0, ror #22
   16248:	andeq	r1, r3, r7, asr #22
   1624c:	andeq	r1, r3, fp, lsr #22
   16250:	andeq	r1, r3, r9, lsl #22
   16254:	andeq	r1, r3, r4, ror #21
   16258:	andeq	r1, r3, sl, lsl #22
   1625c:	andeq	r9, r4, ip, lsl #2

00016260 <base64_tests@@Base>:
   16260:	push	{fp, lr}
   16264:	mov	fp, sp
   16268:	sub	sp, sp, #64	; 0x40
   1626c:	ldr	r0, [pc, #716]	; 16540 <base64_tests@@Base+0x2e0>
   16270:	add	r1, pc, r0
   16274:	ldr	r0, [pc, #712]	; 16544 <base64_tests@@Base+0x2e4>
   16278:	add	r2, pc, r0
   1627c:	ldr	r0, [pc, #708]	; 16548 <base64_tests@@Base+0x2e8>
   16280:	add	r0, pc, r0
   16284:	movw	r3, #0
   16288:	str	r3, [fp, #-4]
   1628c:	str	r0, [fp, #-8]
   16290:	ldr	r0, [fp, #-8]
   16294:	str	r3, [fp, #-12]
   16298:	ldr	ip, [fp, #-12]
   1629c:	str	ip, [sp]
   162a0:	str	ip, [sp, #4]
   162a4:	movw	lr, #369	; 0x171
   162a8:	str	lr, [sp, #8]
   162ac:	bl	15008 <test_json@@Base>
   162b0:	ldr	r1, [pc, #640]	; 16538 <base64_tests@@Base+0x2d8>
   162b4:	add	r1, pc, r1
   162b8:	ldr	r2, [pc, #636]	; 1653c <base64_tests@@Base+0x2dc>
   162bc:	add	r2, pc, r2
   162c0:	ldr	r3, [fp, #-4]
   162c4:	orr	r0, r3, r0
   162c8:	str	r0, [fp, #-4]
   162cc:	ldr	r0, [fp, #-8]
   162d0:	movw	r3, #0
   162d4:	str	r3, [fp, #-16]
   162d8:	ldr	ip, [fp, #-16]
   162dc:	str	ip, [sp]
   162e0:	str	ip, [sp, #4]
   162e4:	movw	lr, #372	; 0x174
   162e8:	str	lr, [sp, #8]
   162ec:	bl	15008 <test_json@@Base>
   162f0:	ldr	r1, [pc, #568]	; 16530 <base64_tests@@Base+0x2d0>
   162f4:	add	r1, pc, r1
   162f8:	ldr	r2, [pc, #564]	; 16534 <base64_tests@@Base+0x2d4>
   162fc:	add	r2, pc, r2
   16300:	ldr	r3, [fp, #-4]
   16304:	orr	r0, r3, r0
   16308:	str	r0, [fp, #-4]
   1630c:	ldr	r0, [fp, #-8]
   16310:	movw	r3, #0
   16314:	str	r3, [fp, #-20]	; 0xffffffec
   16318:	ldr	ip, [fp, #-20]	; 0xffffffec
   1631c:	str	ip, [sp]
   16320:	str	ip, [sp, #4]
   16324:	movw	lr, #376	; 0x178
   16328:	str	lr, [sp, #8]
   1632c:	bl	15008 <test_json@@Base>
   16330:	ldr	r1, [pc, #496]	; 16528 <base64_tests@@Base+0x2c8>
   16334:	add	r1, pc, r1
   16338:	ldr	r2, [pc, #492]	; 1652c <base64_tests@@Base+0x2cc>
   1633c:	add	r2, pc, r2
   16340:	ldr	r3, [fp, #-4]
   16344:	orr	r0, r3, r0
   16348:	str	r0, [fp, #-4]
   1634c:	ldr	r0, [fp, #-8]
   16350:	movw	r3, #0
   16354:	str	r3, [fp, #-24]	; 0xffffffe8
   16358:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1635c:	str	ip, [sp]
   16360:	str	ip, [sp, #4]
   16364:	movw	lr, #379	; 0x17b
   16368:	str	lr, [sp, #8]
   1636c:	bl	15008 <test_json@@Base>
   16370:	ldr	r1, [pc, #424]	; 16520 <base64_tests@@Base+0x2c0>
   16374:	add	r1, pc, r1
   16378:	ldr	r2, [pc, #420]	; 16524 <base64_tests@@Base+0x2c4>
   1637c:	add	r2, pc, r2
   16380:	ldr	r3, [fp, #-4]
   16384:	orr	r0, r3, r0
   16388:	str	r0, [fp, #-4]
   1638c:	ldr	r0, [fp, #-8]
   16390:	movw	r3, #0
   16394:	str	r3, [fp, #-28]	; 0xffffffe4
   16398:	ldr	ip, [fp, #-28]	; 0xffffffe4
   1639c:	str	ip, [sp]
   163a0:	str	ip, [sp, #4]
   163a4:	movw	lr, #382	; 0x17e
   163a8:	str	lr, [sp, #8]
   163ac:	bl	15008 <test_json@@Base>
   163b0:	ldr	r1, [pc, #352]	; 16518 <base64_tests@@Base+0x2b8>
   163b4:	add	r1, pc, r1
   163b8:	ldr	r2, [pc, #348]	; 1651c <base64_tests@@Base+0x2bc>
   163bc:	add	r2, pc, r2
   163c0:	ldr	r3, [fp, #-4]
   163c4:	orr	r0, r3, r0
   163c8:	str	r0, [fp, #-4]
   163cc:	ldr	r0, [fp, #-8]
   163d0:	movw	r3, #0
   163d4:	str	r3, [sp, #32]
   163d8:	ldr	ip, [sp, #32]
   163dc:	str	ip, [sp]
   163e0:	str	ip, [sp, #4]
   163e4:	movw	lr, #385	; 0x181
   163e8:	str	lr, [sp, #8]
   163ec:	bl	15008 <test_json@@Base>
   163f0:	ldr	r1, [pc, #284]	; 16514 <base64_tests@@Base+0x2b4>
   163f4:	add	r1, pc, r1
   163f8:	ldr	r2, [fp, #-4]
   163fc:	orr	r0, r2, r0
   16400:	str	r0, [fp, #-4]
   16404:	ldr	r0, [fp, #-8]
   16408:	movw	r2, #0
   1640c:	str	r2, [sp, #28]
   16410:	movw	r3, #31
   16414:	ldr	ip, [sp, #28]
   16418:	str	ip, [sp]
   1641c:	str	ip, [sp, #4]
   16420:	movw	lr, #388	; 0x184
   16424:	str	lr, [sp, #8]
   16428:	bl	15008 <test_json@@Base>
   1642c:	ldr	r1, [pc, #220]	; 16510 <base64_tests@@Base+0x2b0>
   16430:	add	r1, pc, r1
   16434:	ldr	r2, [fp, #-4]
   16438:	orr	r0, r2, r0
   1643c:	str	r0, [fp, #-4]
   16440:	ldr	r0, [fp, #-8]
   16444:	movw	r2, #0
   16448:	str	r2, [sp, #24]
   1644c:	movw	r3, #32
   16450:	ldr	ip, [sp, #24]
   16454:	str	ip, [sp]
   16458:	str	ip, [sp, #4]
   1645c:	movw	lr, #391	; 0x187
   16460:	str	lr, [sp, #8]
   16464:	bl	15008 <test_json@@Base>
   16468:	ldr	r1, [pc, #152]	; 16508 <base64_tests@@Base+0x2a8>
   1646c:	add	r1, pc, r1
   16470:	ldr	r2, [pc, #148]	; 1650c <base64_tests@@Base+0x2ac>
   16474:	add	r2, pc, r2
   16478:	ldr	r3, [fp, #-4]
   1647c:	orr	r0, r3, r0
   16480:	str	r0, [fp, #-4]
   16484:	ldr	r0, [fp, #-8]
   16488:	movw	r3, #0
   1648c:	str	r3, [sp, #20]
   16490:	ldr	ip, [sp, #20]
   16494:	str	ip, [sp]
   16498:	str	ip, [sp, #4]
   1649c:	movw	lr, #406	; 0x196
   164a0:	str	lr, [sp, #8]
   164a4:	bl	15008 <test_json@@Base>
   164a8:	ldr	r1, [pc, #80]	; 16500 <base64_tests@@Base+0x2a0>
   164ac:	add	r1, pc, r1
   164b0:	ldr	r2, [pc, #76]	; 16504 <base64_tests@@Base+0x2a4>
   164b4:	add	r2, pc, r2
   164b8:	ldr	r3, [fp, #-4]
   164bc:	orr	r0, r3, r0
   164c0:	str	r0, [fp, #-4]
   164c4:	ldr	r0, [fp, #-8]
   164c8:	movw	r3, #0
   164cc:	str	r3, [sp, #16]
   164d0:	ldr	ip, [sp, #16]
   164d4:	str	ip, [sp]
   164d8:	str	ip, [sp, #4]
   164dc:	movw	lr, #419	; 0x1a3
   164e0:	str	lr, [sp, #8]
   164e4:	bl	15008 <test_json@@Base>
   164e8:	ldr	r1, [fp, #-4]
   164ec:	orr	r0, r1, r0
   164f0:	str	r0, [fp, #-4]
   164f4:	ldr	r0, [fp, #-4]
   164f8:	mov	sp, fp
   164fc:	pop	{fp, pc}
   16500:	andeq	r2, r3, r9, lsl #8
   16504:	andeq	r2, r3, ip, lsr #6
   16508:	andeq	r2, r3, r4, lsr #5
   1650c:	andeq	r2, r3, ip, ror #6
   16510:	andeq	r2, r3, r4, lsr #4
   16514:	andeq	r2, r3, r7, lsr #3
   16518:	andeq	r2, r3, sp, lsr #2
   1651c:			; <UNDEFINED> instruction: 0x00031fb7
   16520:	strheq	r2, [r3], -r6
   16524:	andeq	r1, r3, r7, lsl #29
   16528:	andeq	r1, r3, r3, lsl #31
   1652c:	andeq	r2, r3, r7, lsr r0
   16530:	andeq	r1, r3, r6, asr lr
   16534:	andeq	r1, r3, r7, lsl #30
   16538:	andeq	r1, r3, ip, asr #28
   1653c:	andeq	r1, r3, fp, ror #28
   16540:	andeq	r1, r3, sl, ror lr
   16544:	andeq	r1, r3, r3, lsl #4
   16548:	andeq	r8, r4, r8, asr ip

0001654c <mixed_type_union_tests@@Base>:
   1654c:	push	{fp, lr}
   16550:	mov	fp, sp
   16554:	sub	sp, sp, #48	; 0x30
   16558:	ldr	r0, [pc, #516]	; 16764 <mixed_type_union_tests@@Base+0x218>
   1655c:	add	r1, pc, r0
   16560:	ldr	r0, [pc, #512]	; 16768 <mixed_type_union_tests@@Base+0x21c>
   16564:	add	r2, pc, r0
   16568:	ldr	r0, [pc, #508]	; 1676c <mixed_type_union_tests@@Base+0x220>
   1656c:	add	r0, pc, r0
   16570:	movw	r3, #0
   16574:	str	r3, [fp, #-4]
   16578:	str	r0, [fp, #-8]
   1657c:	ldr	r0, [fp, #-8]
   16580:	str	r3, [fp, #-12]
   16584:	ldr	ip, [fp, #-12]
   16588:	str	ip, [sp]
   1658c:	str	ip, [sp, #4]
   16590:	movw	lr, #432	; 0x1b0
   16594:	str	lr, [sp, #8]
   16598:	bl	15008 <test_json@@Base>
   1659c:	ldr	r1, [pc, #440]	; 1675c <mixed_type_union_tests@@Base+0x210>
   165a0:	add	r1, pc, r1
   165a4:	ldr	r2, [pc, #436]	; 16760 <mixed_type_union_tests@@Base+0x214>
   165a8:	add	r2, pc, r2
   165ac:	ldr	r3, [fp, #-4]
   165b0:	orr	r0, r3, r0
   165b4:	str	r0, [fp, #-4]
   165b8:	ldr	r0, [fp, #-8]
   165bc:	movw	r3, #0
   165c0:	str	r3, [fp, #-16]
   165c4:	ldr	ip, [fp, #-16]
   165c8:	str	ip, [sp]
   165cc:	str	ip, [sp, #4]
   165d0:	movw	lr, #437	; 0x1b5
   165d4:	str	lr, [sp, #8]
   165d8:	bl	15008 <test_json@@Base>
   165dc:	ldr	r1, [pc, #368]	; 16754 <mixed_type_union_tests@@Base+0x208>
   165e0:	add	r1, pc, r1
   165e4:	ldr	r2, [pc, #364]	; 16758 <mixed_type_union_tests@@Base+0x20c>
   165e8:	add	r2, pc, r2
   165ec:	ldr	r3, [fp, #-4]
   165f0:	orr	r0, r3, r0
   165f4:	str	r0, [fp, #-4]
   165f8:	ldr	r0, [fp, #-8]
   165fc:	movw	r3, #0
   16600:	str	r3, [fp, #-20]	; 0xffffffec
   16604:	ldr	ip, [fp, #-20]	; 0xffffffec
   16608:	str	ip, [sp]
   1660c:	str	ip, [sp, #4]
   16610:	movw	lr, #442	; 0x1ba
   16614:	str	lr, [sp, #8]
   16618:	bl	15008 <test_json@@Base>
   1661c:	ldr	r1, [pc, #296]	; 1674c <mixed_type_union_tests@@Base+0x200>
   16620:	add	r1, pc, r1
   16624:	ldr	r2, [pc, #292]	; 16750 <mixed_type_union_tests@@Base+0x204>
   16628:	add	r2, pc, r2
   1662c:	ldr	r3, [fp, #-4]
   16630:	orr	r0, r3, r0
   16634:	str	r0, [fp, #-4]
   16638:	ldr	r0, [fp, #-8]
   1663c:	movw	r3, #0
   16640:	str	r3, [sp, #24]
   16644:	ldr	ip, [sp, #24]
   16648:	str	ip, [sp]
   1664c:	str	ip, [sp, #4]
   16650:	movw	lr, #449	; 0x1c1
   16654:	str	lr, [sp, #8]
   16658:	bl	15008 <test_json@@Base>
   1665c:	ldr	r1, [pc, #224]	; 16744 <mixed_type_union_tests@@Base+0x1f8>
   16660:	add	r1, pc, r1
   16664:	ldr	r2, [pc, #220]	; 16748 <mixed_type_union_tests@@Base+0x1fc>
   16668:	add	r2, pc, r2
   1666c:	ldr	r3, [fp, #-4]
   16670:	orr	r0, r3, r0
   16674:	str	r0, [fp, #-4]
   16678:	ldr	r0, [fp, #-8]
   1667c:	movw	r3, #0
   16680:	str	r3, [sp, #20]
   16684:	ldr	ip, [sp, #20]
   16688:	str	ip, [sp]
   1668c:	str	ip, [sp, #4]
   16690:	movw	lr, #458	; 0x1ca
   16694:	str	lr, [sp, #8]
   16698:	bl	15008 <test_json@@Base>
   1669c:	ldr	r1, [pc, #152]	; 1673c <mixed_type_union_tests@@Base+0x1f0>
   166a0:	add	r1, pc, r1
   166a4:	ldr	r2, [pc, #148]	; 16740 <mixed_type_union_tests@@Base+0x1f4>
   166a8:	add	r2, pc, r2
   166ac:	ldr	r3, [fp, #-4]
   166b0:	orr	r0, r3, r0
   166b4:	str	r0, [fp, #-4]
   166b8:	ldr	r0, [fp, #-8]
   166bc:	movw	r3, #0
   166c0:	str	r3, [sp, #16]
   166c4:	ldr	ip, [sp, #16]
   166c8:	str	ip, [sp]
   166cc:	str	ip, [sp, #4]
   166d0:	movw	lr, #469	; 0x1d5
   166d4:	str	lr, [sp, #8]
   166d8:	bl	15008 <test_json@@Base>
   166dc:	ldr	r1, [pc, #80]	; 16734 <mixed_type_union_tests@@Base+0x1e8>
   166e0:	add	r1, pc, r1
   166e4:	ldr	r2, [pc, #76]	; 16738 <mixed_type_union_tests@@Base+0x1ec>
   166e8:	add	r2, pc, r2
   166ec:	ldr	r3, [fp, #-4]
   166f0:	orr	r0, r3, r0
   166f4:	str	r0, [fp, #-4]
   166f8:	ldr	r0, [fp, #-8]
   166fc:	movw	r3, #0
   16700:	str	r3, [sp, #12]
   16704:	ldr	ip, [sp, #12]
   16708:	str	ip, [sp]
   1670c:	str	ip, [sp, #4]
   16710:	movw	lr, #474	; 0x1da
   16714:	str	lr, [sp, #8]
   16718:	bl	15008 <test_json@@Base>
   1671c:	ldr	r1, [fp, #-4]
   16720:	orr	r0, r1, r0
   16724:	str	r0, [fp, #-4]
   16728:	ldr	r0, [fp, #-4]
   1672c:	mov	sp, fp
   16730:	pop	{fp, pc}
   16734:	andeq	r2, r3, r8, lsl #22
   16738:			; <UNDEFINED> instruction: 0x000323b2
   1673c:	andeq	r2, r3, r1, lsl #17
   16740:	strdeq	r2, [r3], -sl
   16744:	ldrdeq	r2, [r3], -sp
   16748:	ldrdeq	r2, [r3], -fp
   1674c:	andeq	r2, r3, r7, lsl #11
   16750:	andeq	r2, r3, ip, asr r6
   16754:	andeq	r2, r3, r1, lsr r5
   16758:			; <UNDEFINED> instruction: 0x000324b2
   1675c:	andeq	r2, r3, r7, ror r4
   16760:	strdeq	r2, [r3], -r2	; <UNPREDICTABLE>
   16764:	andeq	r2, r3, r5, lsr #8
   16768:	andeq	r2, r3, ip, ror #8
   1676c:	andeq	r8, r4, ip, ror r9

00016770 <union_vector_tests@@Base>:
   16770:	push	{fp, lr}
   16774:	mov	fp, sp
   16778:	sub	sp, sp, #48	; 0x30
   1677c:	ldr	r0, [pc, #444]	; 16940 <union_vector_tests@@Base+0x1d0>
   16780:	add	r1, pc, r0
   16784:	ldr	r0, [pc, #440]	; 16944 <union_vector_tests@@Base+0x1d4>
   16788:	add	r2, pc, r0
   1678c:	ldr	r0, [pc, #436]	; 16948 <union_vector_tests@@Base+0x1d8>
   16790:	add	r0, pc, r0
   16794:	movw	r3, #0
   16798:	str	r3, [fp, #-4]
   1679c:	str	r0, [fp, #-8]
   167a0:	ldr	r0, [fp, #-8]
   167a4:	str	r3, [fp, #-12]
   167a8:	ldr	ip, [fp, #-12]
   167ac:	str	ip, [sp]
   167b0:	str	ip, [sp, #4]
   167b4:	movw	lr, #485	; 0x1e5
   167b8:	str	lr, [sp, #8]
   167bc:	bl	15008 <test_json@@Base>
   167c0:	ldr	r1, [pc, #368]	; 16938 <union_vector_tests@@Base+0x1c8>
   167c4:	add	r1, pc, r1
   167c8:	ldr	r2, [pc, #364]	; 1693c <union_vector_tests@@Base+0x1cc>
   167cc:	add	r2, pc, r2
   167d0:	ldr	r3, [fp, #-4]
   167d4:	orr	r0, r3, r0
   167d8:	str	r0, [fp, #-4]
   167dc:	ldr	r0, [fp, #-8]
   167e0:	movw	r3, #0
   167e4:	str	r3, [fp, #-16]
   167e8:	ldr	ip, [fp, #-16]
   167ec:	str	ip, [sp]
   167f0:	str	ip, [sp, #4]
   167f4:	movw	lr, #488	; 0x1e8
   167f8:	str	lr, [sp, #8]
   167fc:	bl	15008 <test_json@@Base>
   16800:	ldr	r1, [pc, #296]	; 16930 <union_vector_tests@@Base+0x1c0>
   16804:	add	r1, pc, r1
   16808:	ldr	r2, [pc, #292]	; 16934 <union_vector_tests@@Base+0x1c4>
   1680c:	add	r2, pc, r2
   16810:	ldr	r3, [fp, #-4]
   16814:	orr	r0, r3, r0
   16818:	str	r0, [fp, #-4]
   1681c:	ldr	r0, [fp, #-8]
   16820:	movw	r3, #0
   16824:	str	r3, [fp, #-20]	; 0xffffffec
   16828:	ldr	ip, [fp, #-20]	; 0xffffffec
   1682c:	str	ip, [sp]
   16830:	str	ip, [sp, #4]
   16834:	movw	lr, #491	; 0x1eb
   16838:	str	lr, [sp, #8]
   1683c:	bl	15008 <test_json@@Base>
   16840:	ldr	r1, [pc, #224]	; 16928 <union_vector_tests@@Base+0x1b8>
   16844:	add	r1, pc, r1
   16848:	ldr	r2, [pc, #220]	; 1692c <union_vector_tests@@Base+0x1bc>
   1684c:	add	r2, pc, r2
   16850:	ldr	r3, [fp, #-4]
   16854:	orr	r0, r3, r0
   16858:	str	r0, [fp, #-4]
   1685c:	ldr	r0, [fp, #-8]
   16860:	movw	r3, #0
   16864:	str	r3, [sp, #24]
   16868:	ldr	ip, [sp, #24]
   1686c:	str	ip, [sp]
   16870:	str	ip, [sp, #4]
   16874:	movw	lr, #494	; 0x1ee
   16878:	str	lr, [sp, #8]
   1687c:	bl	15008 <test_json@@Base>
   16880:	ldr	r1, [pc, #152]	; 16920 <union_vector_tests@@Base+0x1b0>
   16884:	add	r1, pc, r1
   16888:	ldr	r2, [pc, #148]	; 16924 <union_vector_tests@@Base+0x1b4>
   1688c:	add	r2, pc, r2
   16890:	ldr	r3, [fp, #-4]
   16894:	orr	r0, r3, r0
   16898:	str	r0, [fp, #-4]
   1689c:	ldr	r0, [fp, #-8]
   168a0:	movw	r3, #0
   168a4:	str	r3, [sp, #20]
   168a8:	ldr	ip, [sp, #20]
   168ac:	str	ip, [sp]
   168b0:	str	ip, [sp, #4]
   168b4:	movw	lr, #497	; 0x1f1
   168b8:	str	lr, [sp, #8]
   168bc:	bl	15008 <test_json@@Base>
   168c0:	ldr	r1, [pc, #80]	; 16918 <union_vector_tests@@Base+0x1a8>
   168c4:	add	r1, pc, r1
   168c8:	ldr	r2, [pc, #76]	; 1691c <union_vector_tests@@Base+0x1ac>
   168cc:	add	r2, pc, r2
   168d0:	ldr	r3, [fp, #-4]
   168d4:	orr	r0, r3, r0
   168d8:	str	r0, [fp, #-4]
   168dc:	ldr	r0, [fp, #-8]
   168e0:	movw	r3, #0
   168e4:	str	r3, [sp, #16]
   168e8:	ldr	ip, [sp, #16]
   168ec:	str	ip, [sp]
   168f0:	str	ip, [sp, #4]
   168f4:	movw	lr, #500	; 0x1f4
   168f8:	str	lr, [sp, #8]
   168fc:	bl	15008 <test_json@@Base>
   16900:	ldr	r1, [fp, #-4]
   16904:	orr	r0, r1, r0
   16908:	str	r0, [fp, #-4]
   1690c:	ldr	r0, [fp, #-4]
   16910:	mov	sp, fp
   16914:	pop	{fp, pc}
   16918:	andeq	r2, r3, r0, asr #24
   1691c:	muleq	r3, lr, ip
   16920:	andeq	r2, r3, r1, asr #24
   16924:	andeq	r2, r3, r9, lsr #20
   16928:	muleq	r3, r8, fp
   1692c:	andeq	r2, r3, sp, lsl #24
   16930:	andeq	r2, r3, r7, asr #22
   16934:	andeq	r2, r3, ip, lsl #23
   16938:	andeq	r2, r3, r9, lsr #22
   1693c:	andeq	r2, r3, r4, asr fp
   16940:	strdeq	r2, [r3], -r5
   16944:	andeq	r2, r3, sp, lsr #22
   16948:	andeq	r8, r4, r8, ror #14

0001694c <main@@Base>:
   1694c:	push	{fp, lr}
   16950:	mov	fp, sp
   16954:	sub	sp, sp, #304	; 0x130
   16958:	ldr	r0, [pc, #4084]	; 17954 <main@@Base+0x1008>
   1695c:	add	r0, pc, r0
   16960:	movw	r1, #0
   16964:	str	r1, [fp, #-4]
   16968:	str	r1, [fp, #-8]
   1696c:	str	r0, [fp, #-12]
   16970:	bl	15898 <edge_case_tests@@Base>
   16974:	ldr	r1, [fp, #-8]
   16978:	orr	r0, r1, r0
   1697c:	str	r0, [fp, #-8]
   16980:	bl	15db4 <error_case_tests@@Base>
   16984:	ldr	r1, [fp, #-8]
   16988:	orr	r0, r1, r0
   1698c:	str	r0, [fp, #-8]
   16990:	bl	16770 <union_vector_tests@@Base>
   16994:	ldr	r1, [fp, #-8]
   16998:	orr	r0, r1, r0
   1699c:	str	r0, [fp, #-8]
   169a0:	bl	16260 <base64_tests@@Base>
   169a4:	ldr	r1, [fp, #-8]
   169a8:	orr	r0, r1, r0
   169ac:	str	r0, [fp, #-8]
   169b0:	bl	1654c <mixed_type_union_tests@@Base>
   169b4:	ldr	r1, [pc, #3996]	; 17958 <main@@Base+0x100c>
   169b8:	add	r1, pc, r1
   169bc:	ldr	r2, [pc, #3992]	; 1795c <main@@Base+0x1010>
   169c0:	add	r2, pc, r2
   169c4:	ldr	r3, [fp, #-8]
   169c8:	orr	r0, r3, r0
   169cc:	str	r0, [fp, #-8]
   169d0:	ldr	r0, [fp, #-12]
   169d4:	movw	r3, #0
   169d8:	str	r3, [fp, #-16]
   169dc:	ldr	ip, [fp, #-16]
   169e0:	str	ip, [sp]
   169e4:	str	ip, [sp, #4]
   169e8:	movw	lr, #525	; 0x20d
   169ec:	str	lr, [sp, #8]
   169f0:	bl	15008 <test_json@@Base>
   169f4:	ldr	r1, [pc, #3940]	; 17960 <main@@Base+0x1014>
   169f8:	add	r1, pc, r1
   169fc:	ldr	r2, [pc, #3936]	; 17964 <main@@Base+0x1018>
   16a00:	add	r2, pc, r2
   16a04:	ldr	r3, [fp, #-8]
   16a08:	orr	r0, r3, r0
   16a0c:	str	r0, [fp, #-8]
   16a10:	ldr	r0, [fp, #-12]
   16a14:	movw	r3, #0
   16a18:	str	r3, [fp, #-20]	; 0xffffffec
   16a1c:	ldr	ip, [fp, #-20]	; 0xffffffec
   16a20:	str	ip, [sp]
   16a24:	str	ip, [sp, #4]
   16a28:	movw	lr, #528	; 0x210
   16a2c:	str	lr, [sp, #8]
   16a30:	bl	15008 <test_json@@Base>
   16a34:	ldr	r1, [pc, #3884]	; 17968 <main@@Base+0x101c>
   16a38:	add	r1, pc, r1
   16a3c:	ldr	r2, [pc, #3880]	; 1796c <main@@Base+0x1020>
   16a40:	add	r2, pc, r2
   16a44:	ldr	r3, [fp, #-8]
   16a48:	orr	r0, r3, r0
   16a4c:	str	r0, [fp, #-8]
   16a50:	ldr	r0, [fp, #-12]
   16a54:	movw	r3, #0
   16a58:	str	r3, [fp, #-24]	; 0xffffffe8
   16a5c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   16a60:	str	ip, [sp]
   16a64:	str	ip, [sp, #4]
   16a68:	movw	lr, #531	; 0x213
   16a6c:	str	lr, [sp, #8]
   16a70:	bl	15008 <test_json@@Base>
   16a74:	ldr	r1, [pc, #3828]	; 17970 <main@@Base+0x1024>
   16a78:	add	r1, pc, r1
   16a7c:	ldr	r2, [pc, #3824]	; 17974 <main@@Base+0x1028>
   16a80:	add	r2, pc, r2
   16a84:	ldr	r3, [fp, #-8]
   16a88:	orr	r0, r3, r0
   16a8c:	str	r0, [fp, #-8]
   16a90:	ldr	r0, [fp, #-12]
   16a94:	movw	r3, #0
   16a98:	str	r3, [fp, #-28]	; 0xffffffe4
   16a9c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   16aa0:	str	ip, [sp]
   16aa4:	str	ip, [sp, #4]
   16aa8:	movw	lr, #534	; 0x216
   16aac:	str	lr, [sp, #8]
   16ab0:	bl	15008 <test_json@@Base>
   16ab4:	ldr	r1, [pc, #3772]	; 17978 <main@@Base+0x102c>
   16ab8:	add	r1, pc, r1
   16abc:	ldr	r2, [pc, #3768]	; 1797c <main@@Base+0x1030>
   16ac0:	add	r2, pc, r2
   16ac4:	ldr	r3, [fp, #-8]
   16ac8:	orr	r0, r3, r0
   16acc:	str	r0, [fp, #-8]
   16ad0:	ldr	r0, [fp, #-12]
   16ad4:	movw	r3, #0
   16ad8:	str	r3, [fp, #-32]	; 0xffffffe0
   16adc:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16ae0:	str	ip, [sp]
   16ae4:	str	ip, [sp, #4]
   16ae8:	movw	lr, #537	; 0x219
   16aec:	str	lr, [sp, #8]
   16af0:	bl	15008 <test_json@@Base>
   16af4:	ldr	r1, [pc, #3716]	; 17980 <main@@Base+0x1034>
   16af8:	add	r1, pc, r1
   16afc:	ldr	r2, [pc, #3712]	; 17984 <main@@Base+0x1038>
   16b00:	add	r2, pc, r2
   16b04:	ldr	r3, [fp, #-8]
   16b08:	orr	r0, r3, r0
   16b0c:	str	r0, [fp, #-8]
   16b10:	ldr	r0, [fp, #-12]
   16b14:	movw	r3, #0
   16b18:	str	r3, [fp, #-36]	; 0xffffffdc
   16b1c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16b20:	str	ip, [sp]
   16b24:	str	ip, [sp, #4]
   16b28:	movw	lr, #540	; 0x21c
   16b2c:	str	lr, [sp, #8]
   16b30:	bl	15008 <test_json@@Base>
   16b34:	ldr	r1, [pc, #3660]	; 17988 <main@@Base+0x103c>
   16b38:	add	r1, pc, r1
   16b3c:	ldr	r2, [pc, #3656]	; 1798c <main@@Base+0x1040>
   16b40:	add	r2, pc, r2
   16b44:	ldr	r3, [fp, #-8]
   16b48:	orr	r0, r3, r0
   16b4c:	str	r0, [fp, #-8]
   16b50:	ldr	r0, [fp, #-12]
   16b54:	movw	r3, #0
   16b58:	str	r3, [fp, #-40]	; 0xffffffd8
   16b5c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   16b60:	str	ip, [sp]
   16b64:	str	ip, [sp, #4]
   16b68:	movw	lr, #543	; 0x21f
   16b6c:	str	lr, [sp, #8]
   16b70:	bl	15008 <test_json@@Base>
   16b74:	ldr	r1, [pc, #4072]	; 17b64 <main@@Base+0x1218>
   16b78:	add	r1, pc, r1
   16b7c:	ldr	r2, [pc, #4068]	; 17b68 <main@@Base+0x121c>
   16b80:	add	r2, pc, r2
   16b84:	ldr	r3, [fp, #-8]
   16b88:	orr	r0, r3, r0
   16b8c:	str	r0, [fp, #-8]
   16b90:	ldr	r0, [fp, #-12]
   16b94:	movw	r3, #0
   16b98:	str	r3, [fp, #-44]	; 0xffffffd4
   16b9c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   16ba0:	str	ip, [sp]
   16ba4:	str	ip, [sp, #4]
   16ba8:	movw	lr, #547	; 0x223
   16bac:	str	lr, [sp, #8]
   16bb0:	bl	15008 <test_json@@Base>
   16bb4:	ldr	r1, [pc, #4016]	; 17b6c <main@@Base+0x1220>
   16bb8:	add	r1, pc, r1
   16bbc:	ldr	r2, [pc, #4012]	; 17b70 <main@@Base+0x1224>
   16bc0:	add	r2, pc, r2
   16bc4:	ldr	r3, [fp, #-8]
   16bc8:	orr	r0, r3, r0
   16bcc:	str	r0, [fp, #-8]
   16bd0:	ldr	r0, [fp, #-12]
   16bd4:	movw	r3, #0
   16bd8:	str	r3, [fp, #-48]	; 0xffffffd0
   16bdc:	ldr	ip, [fp, #-48]	; 0xffffffd0
   16be0:	str	ip, [sp]
   16be4:	str	ip, [sp, #4]
   16be8:	movw	lr, #551	; 0x227
   16bec:	str	lr, [sp, #8]
   16bf0:	bl	15008 <test_json@@Base>
   16bf4:	ldr	r1, [pc, #3960]	; 17b74 <main@@Base+0x1228>
   16bf8:	add	r1, pc, r1
   16bfc:	ldr	r2, [pc, #3956]	; 17b78 <main@@Base+0x122c>
   16c00:	add	r2, pc, r2
   16c04:	ldr	r3, [fp, #-8]
   16c08:	orr	r0, r3, r0
   16c0c:	str	r0, [fp, #-8]
   16c10:	ldr	r0, [fp, #-12]
   16c14:	movw	r3, #0
   16c18:	str	r3, [fp, #-52]	; 0xffffffcc
   16c1c:	ldr	ip, [fp, #-52]	; 0xffffffcc
   16c20:	str	ip, [sp]
   16c24:	str	ip, [sp, #4]
   16c28:	movw	lr, #555	; 0x22b
   16c2c:	str	lr, [sp, #8]
   16c30:	bl	15008 <test_json@@Base>
   16c34:	ldr	r1, [pc, #3904]	; 17b7c <main@@Base+0x1230>
   16c38:	add	r1, pc, r1
   16c3c:	ldr	r2, [pc, #3900]	; 17b80 <main@@Base+0x1234>
   16c40:	add	r2, pc, r2
   16c44:	ldr	r3, [fp, #-8]
   16c48:	orr	r0, r3, r0
   16c4c:	str	r0, [fp, #-8]
   16c50:	ldr	r0, [fp, #-12]
   16c54:	movw	r3, #0
   16c58:	str	r3, [fp, #-56]	; 0xffffffc8
   16c5c:	ldr	ip, [fp, #-56]	; 0xffffffc8
   16c60:	str	ip, [sp]
   16c64:	str	ip, [sp, #4]
   16c68:	movw	lr, #558	; 0x22e
   16c6c:	str	lr, [sp, #8]
   16c70:	bl	15008 <test_json@@Base>
   16c74:	ldr	r1, [pc, #3848]	; 17b84 <main@@Base+0x1238>
   16c78:	add	r1, pc, r1
   16c7c:	ldr	r2, [pc, #3844]	; 17b88 <main@@Base+0x123c>
   16c80:	add	r2, pc, r2
   16c84:	ldr	r3, [fp, #-8]
   16c88:	orr	r0, r3, r0
   16c8c:	str	r0, [fp, #-8]
   16c90:	ldr	r0, [fp, #-12]
   16c94:	movw	r3, #0
   16c98:	str	r3, [fp, #-60]	; 0xffffffc4
   16c9c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   16ca0:	str	ip, [sp]
   16ca4:	str	ip, [sp, #4]
   16ca8:	movw	lr, #561	; 0x231
   16cac:	str	lr, [sp, #8]
   16cb0:	bl	15008 <test_json@@Base>
   16cb4:	ldr	r1, [pc, #3792]	; 17b8c <main@@Base+0x1240>
   16cb8:	add	r1, pc, r1
   16cbc:	ldr	r2, [pc, #3788]	; 17b90 <main@@Base+0x1244>
   16cc0:	add	r2, pc, r2
   16cc4:	ldr	r3, [fp, #-8]
   16cc8:	orr	r0, r3, r0
   16ccc:	str	r0, [fp, #-8]
   16cd0:	ldr	r0, [fp, #-12]
   16cd4:	movw	r3, #0
   16cd8:	str	r3, [fp, #-64]	; 0xffffffc0
   16cdc:	ldr	ip, [fp, #-64]	; 0xffffffc0
   16ce0:	str	ip, [sp]
   16ce4:	str	ip, [sp, #4]
   16ce8:	movw	lr, #564	; 0x234
   16cec:	str	lr, [sp, #8]
   16cf0:	bl	15008 <test_json@@Base>
   16cf4:	ldr	r1, [pc, #3736]	; 17b94 <main@@Base+0x1248>
   16cf8:	add	r1, pc, r1
   16cfc:	ldr	r2, [pc, #3732]	; 17b98 <main@@Base+0x124c>
   16d00:	add	r2, pc, r2
   16d04:	ldr	r3, [fp, #-8]
   16d08:	orr	r0, r3, r0
   16d0c:	str	r0, [fp, #-8]
   16d10:	ldr	r0, [fp, #-12]
   16d14:	movw	r3, #0
   16d18:	str	r3, [fp, #-68]	; 0xffffffbc
   16d1c:	ldr	ip, [fp, #-68]	; 0xffffffbc
   16d20:	str	ip, [sp]
   16d24:	str	ip, [sp, #4]
   16d28:	movw	lr, #567	; 0x237
   16d2c:	str	lr, [sp, #8]
   16d30:	bl	15008 <test_json@@Base>
   16d34:	ldr	r1, [pc, #3680]	; 17b9c <main@@Base+0x1250>
   16d38:	add	r1, pc, r1
   16d3c:	ldr	r2, [pc, #3676]	; 17ba0 <main@@Base+0x1254>
   16d40:	add	r2, pc, r2
   16d44:	ldr	r3, [fp, #-8]
   16d48:	orr	r0, r3, r0
   16d4c:	str	r0, [fp, #-8]
   16d50:	ldr	r0, [fp, #-12]
   16d54:	movw	r3, #0
   16d58:	str	r3, [fp, #-72]	; 0xffffffb8
   16d5c:	ldr	ip, [fp, #-72]	; 0xffffffb8
   16d60:	str	ip, [sp]
   16d64:	str	ip, [sp, #4]
   16d68:	movw	lr, #570	; 0x23a
   16d6c:	str	lr, [sp, #8]
   16d70:	bl	15008 <test_json@@Base>
   16d74:	ldr	r1, [pc, #4048]	; 17d4c <main@@Base+0x1400>
   16d78:	add	r1, pc, r1
   16d7c:	ldr	r2, [pc, #4044]	; 17d50 <main@@Base+0x1404>
   16d80:	add	r2, pc, r2
   16d84:	ldr	r3, [fp, #-8]
   16d88:	orr	r0, r3, r0
   16d8c:	str	r0, [fp, #-8]
   16d90:	ldr	r0, [fp, #-12]
   16d94:	movw	r3, #0
   16d98:	str	r3, [fp, #-76]	; 0xffffffb4
   16d9c:	ldr	ip, [fp, #-76]	; 0xffffffb4
   16da0:	str	ip, [sp]
   16da4:	str	ip, [sp, #4]
   16da8:	movw	lr, #573	; 0x23d
   16dac:	str	lr, [sp, #8]
   16db0:	bl	15008 <test_json@@Base>
   16db4:	ldr	r1, [pc, #3976]	; 17d44 <main@@Base+0x13f8>
   16db8:	add	r1, pc, r1
   16dbc:	ldr	r2, [pc, #3972]	; 17d48 <main@@Base+0x13fc>
   16dc0:	add	r2, pc, r2
   16dc4:	ldr	r3, [fp, #-8]
   16dc8:	orr	r0, r3, r0
   16dcc:	str	r0, [fp, #-8]
   16dd0:	ldr	r0, [fp, #-12]
   16dd4:	movw	r3, #0
   16dd8:	str	r3, [fp, #-80]	; 0xffffffb0
   16ddc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   16de0:	str	ip, [sp]
   16de4:	str	ip, [sp, #4]
   16de8:	movw	lr, #577	; 0x241
   16dec:	str	lr, [sp, #8]
   16df0:	bl	15008 <test_json@@Base>
   16df4:	ldr	r1, [pc, #3904]	; 17d3c <main@@Base+0x13f0>
   16df8:	add	r1, pc, r1
   16dfc:	ldr	r2, [pc, #3900]	; 17d40 <main@@Base+0x13f4>
   16e00:	add	r2, pc, r2
   16e04:	ldr	r3, [fp, #-8]
   16e08:	orr	r0, r3, r0
   16e0c:	str	r0, [fp, #-8]
   16e10:	ldr	r0, [fp, #-12]
   16e14:	movw	r3, #0
   16e18:	str	r3, [fp, #-84]	; 0xffffffac
   16e1c:	ldr	ip, [fp, #-84]	; 0xffffffac
   16e20:	str	ip, [sp]
   16e24:	str	ip, [sp, #4]
   16e28:	movw	lr, #581	; 0x245
   16e2c:	str	lr, [sp, #8]
   16e30:	bl	15008 <test_json@@Base>
   16e34:	ldr	r1, [pc, #3832]	; 17d34 <main@@Base+0x13e8>
   16e38:	add	r1, pc, r1
   16e3c:	ldr	r2, [pc, #3828]	; 17d38 <main@@Base+0x13ec>
   16e40:	add	r2, pc, r2
   16e44:	ldr	r3, [fp, #-8]
   16e48:	orr	r0, r3, r0
   16e4c:	str	r0, [fp, #-8]
   16e50:	ldr	r0, [fp, #-12]
   16e54:	movw	r3, #0
   16e58:	str	r3, [fp, #-88]	; 0xffffffa8
   16e5c:	ldr	ip, [fp, #-88]	; 0xffffffa8
   16e60:	str	ip, [sp]
   16e64:	str	ip, [sp, #4]
   16e68:	movw	lr, #585	; 0x249
   16e6c:	str	lr, [sp, #8]
   16e70:	bl	15008 <test_json@@Base>
   16e74:	ldr	r1, [pc, #3760]	; 17d2c <main@@Base+0x13e0>
   16e78:	add	r1, pc, r1
   16e7c:	ldr	r2, [pc, #3756]	; 17d30 <main@@Base+0x13e4>
   16e80:	add	r2, pc, r2
   16e84:	ldr	r3, [fp, #-8]
   16e88:	orr	r0, r3, r0
   16e8c:	str	r0, [fp, #-8]
   16e90:	ldr	r0, [fp, #-12]
   16e94:	movw	r3, #0
   16e98:	str	r3, [fp, #-92]	; 0xffffffa4
   16e9c:	ldr	ip, [fp, #-92]	; 0xffffffa4
   16ea0:	str	ip, [sp]
   16ea4:	str	ip, [sp, #4]
   16ea8:	movw	lr, #591	; 0x24f
   16eac:	str	lr, [sp, #8]
   16eb0:	bl	15008 <test_json@@Base>
   16eb4:	ldr	r1, [pc, #3688]	; 17d24 <main@@Base+0x13d8>
   16eb8:	add	r1, pc, r1
   16ebc:	ldr	r2, [pc, #3684]	; 17d28 <main@@Base+0x13dc>
   16ec0:	add	r2, pc, r2
   16ec4:	ldr	r3, [fp, #-8]
   16ec8:	orr	r0, r3, r0
   16ecc:	str	r0, [fp, #-8]
   16ed0:	ldr	r0, [fp, #-12]
   16ed4:	movw	r3, #0
   16ed8:	str	r3, [fp, #-96]	; 0xffffffa0
   16edc:	ldr	ip, [fp, #-96]	; 0xffffffa0
   16ee0:	str	ip, [sp]
   16ee4:	str	ip, [sp, #4]
   16ee8:	movw	lr, #594	; 0x252
   16eec:	str	lr, [sp, #8]
   16ef0:	bl	15008 <test_json@@Base>
   16ef4:	ldr	r1, [pc, #3616]	; 17d1c <main@@Base+0x13d0>
   16ef8:	add	r1, pc, r1
   16efc:	ldr	r2, [pc, #3612]	; 17d20 <main@@Base+0x13d4>
   16f00:	add	r2, pc, r2
   16f04:	ldr	r3, [fp, #-8]
   16f08:	orr	r0, r3, r0
   16f0c:	str	r0, [fp, #-8]
   16f10:	ldr	r0, [fp, #-12]
   16f14:	movw	r3, #0
   16f18:	str	r3, [fp, #-100]	; 0xffffff9c
   16f1c:	ldr	ip, [fp, #-100]	; 0xffffff9c
   16f20:	str	ip, [sp]
   16f24:	str	ip, [sp, #4]
   16f28:	movw	lr, #597	; 0x255
   16f2c:	str	lr, [sp, #8]
   16f30:	bl	15008 <test_json@@Base>
   16f34:	ldr	r1, [pc, #3544]	; 17d14 <main@@Base+0x13c8>
   16f38:	add	r1, pc, r1
   16f3c:	ldr	r2, [pc, #3540]	; 17d18 <main@@Base+0x13cc>
   16f40:	add	r2, pc, r2
   16f44:	ldr	r3, [fp, #-8]
   16f48:	orr	r0, r3, r0
   16f4c:	str	r0, [fp, #-8]
   16f50:	ldr	r0, [fp, #-12]
   16f54:	movw	r3, #0
   16f58:	str	r3, [fp, #-104]	; 0xffffff98
   16f5c:	ldr	ip, [fp, #-104]	; 0xffffff98
   16f60:	str	ip, [sp]
   16f64:	str	ip, [sp, #4]
   16f68:	movw	lr, #601	; 0x259
   16f6c:	str	lr, [sp, #8]
   16f70:	bl	15008 <test_json@@Base>
   16f74:	ldr	r1, [pc, #3472]	; 17d0c <main@@Base+0x13c0>
   16f78:	add	r1, pc, r1
   16f7c:	ldr	r2, [pc, #3468]	; 17d10 <main@@Base+0x13c4>
   16f80:	add	r2, pc, r2
   16f84:	ldr	r3, [fp, #-8]
   16f88:	orr	r0, r3, r0
   16f8c:	str	r0, [fp, #-8]
   16f90:	ldr	r0, [fp, #-12]
   16f94:	movw	r3, #0
   16f98:	str	r3, [fp, #-108]	; 0xffffff94
   16f9c:	ldr	ip, [fp, #-108]	; 0xffffff94
   16fa0:	str	ip, [sp]
   16fa4:	str	ip, [sp, #4]
   16fa8:	movw	lr, #604	; 0x25c
   16fac:	str	lr, [sp, #8]
   16fb0:	bl	15008 <test_json@@Base>
   16fb4:	ldr	r1, [pc, #3400]	; 17d04 <main@@Base+0x13b8>
   16fb8:	add	r1, pc, r1
   16fbc:	ldr	r2, [pc, #3396]	; 17d08 <main@@Base+0x13bc>
   16fc0:	add	r2, pc, r2
   16fc4:	ldr	r3, [fp, #-8]
   16fc8:	orr	r0, r3, r0
   16fcc:	str	r0, [fp, #-8]
   16fd0:	ldr	r0, [fp, #-12]
   16fd4:	movw	r3, #0
   16fd8:	str	r3, [fp, #-112]	; 0xffffff90
   16fdc:	ldr	ip, [fp, #-112]	; 0xffffff90
   16fe0:	str	ip, [sp]
   16fe4:	str	ip, [sp, #4]
   16fe8:	movw	lr, #607	; 0x25f
   16fec:	str	lr, [sp, #8]
   16ff0:	bl	15008 <test_json@@Base>
   16ff4:	ldr	r1, [pc, #3328]	; 17cfc <main@@Base+0x13b0>
   16ff8:	add	r1, pc, r1
   16ffc:	ldr	r2, [pc, #3324]	; 17d00 <main@@Base+0x13b4>
   17000:	add	r2, pc, r2
   17004:	ldr	r3, [fp, #-8]
   17008:	orr	r0, r3, r0
   1700c:	str	r0, [fp, #-8]
   17010:	ldr	r0, [fp, #-12]
   17014:	movw	r3, #0
   17018:	str	r3, [fp, #-116]	; 0xffffff8c
   1701c:	ldr	ip, [fp, #-116]	; 0xffffff8c
   17020:	str	ip, [sp]
   17024:	str	ip, [sp, #4]
   17028:	movw	lr, #610	; 0x262
   1702c:	str	lr, [sp, #8]
   17030:	bl	15008 <test_json@@Base>
   17034:	ldr	r1, [pc, #3256]	; 17cf4 <main@@Base+0x13a8>
   17038:	add	r1, pc, r1
   1703c:	ldr	r2, [pc, #3252]	; 17cf8 <main@@Base+0x13ac>
   17040:	add	r2, pc, r2
   17044:	ldr	r3, [fp, #-8]
   17048:	orr	r0, r3, r0
   1704c:	str	r0, [fp, #-8]
   17050:	ldr	r0, [fp, #-12]
   17054:	movw	r3, #0
   17058:	str	r3, [fp, #-120]	; 0xffffff88
   1705c:	ldr	ip, [fp, #-120]	; 0xffffff88
   17060:	str	ip, [sp]
   17064:	str	ip, [sp, #4]
   17068:	movw	lr, #613	; 0x265
   1706c:	str	lr, [sp, #8]
   17070:	bl	15008 <test_json@@Base>
   17074:	ldr	r1, [pc, #3184]	; 17cec <main@@Base+0x13a0>
   17078:	add	r1, pc, r1
   1707c:	ldr	r2, [pc, #3180]	; 17cf0 <main@@Base+0x13a4>
   17080:	add	r2, pc, r2
   17084:	ldr	r3, [fp, #-8]
   17088:	orr	r0, r3, r0
   1708c:	str	r0, [fp, #-8]
   17090:	ldr	r0, [fp, #-12]
   17094:	movw	r3, #0
   17098:	str	r3, [fp, #-124]	; 0xffffff84
   1709c:	ldr	ip, [fp, #-124]	; 0xffffff84
   170a0:	str	ip, [sp]
   170a4:	str	ip, [sp, #4]
   170a8:	movw	lr, #616	; 0x268
   170ac:	str	lr, [sp, #8]
   170b0:	bl	15008 <test_json@@Base>
   170b4:	ldr	r1, [pc, #3112]	; 17ce4 <main@@Base+0x1398>
   170b8:	add	r1, pc, r1
   170bc:	ldr	r2, [pc, #3108]	; 17ce8 <main@@Base+0x139c>
   170c0:	add	r2, pc, r2
   170c4:	ldr	r3, [fp, #-8]
   170c8:	orr	r0, r3, r0
   170cc:	str	r0, [fp, #-8]
   170d0:	ldr	r0, [fp, #-12]
   170d4:	movw	r3, #0
   170d8:	str	r3, [fp, #-128]	; 0xffffff80
   170dc:	ldr	ip, [fp, #-128]	; 0xffffff80
   170e0:	str	ip, [sp]
   170e4:	str	ip, [sp, #4]
   170e8:	movw	lr, #619	; 0x26b
   170ec:	str	lr, [sp, #8]
   170f0:	bl	15008 <test_json@@Base>
   170f4:	ldr	r1, [pc, #3040]	; 17cdc <main@@Base+0x1390>
   170f8:	add	r1, pc, r1
   170fc:	ldr	r2, [pc, #3036]	; 17ce0 <main@@Base+0x1394>
   17100:	add	r2, pc, r2
   17104:	ldr	r3, [fp, #-8]
   17108:	orr	r0, r3, r0
   1710c:	str	r0, [fp, #-8]
   17110:	ldr	r0, [fp, #-12]
   17114:	movw	r3, #0
   17118:	str	r3, [fp, #-132]	; 0xffffff7c
   1711c:	ldr	ip, [fp, #-132]	; 0xffffff7c
   17120:	str	ip, [sp]
   17124:	str	ip, [sp, #4]
   17128:	movw	lr, #622	; 0x26e
   1712c:	str	lr, [sp, #8]
   17130:	bl	15008 <test_json@@Base>
   17134:	ldr	r1, [pc, #2968]	; 17cd4 <main@@Base+0x1388>
   17138:	add	r1, pc, r1
   1713c:	ldr	r2, [pc, #2964]	; 17cd8 <main@@Base+0x138c>
   17140:	add	r2, pc, r2
   17144:	ldr	r3, [fp, #-8]
   17148:	orr	r0, r3, r0
   1714c:	str	r0, [fp, #-8]
   17150:	ldr	r0, [fp, #-12]
   17154:	movw	r3, #0
   17158:	str	r3, [fp, #-136]	; 0xffffff78
   1715c:	ldr	ip, [fp, #-136]	; 0xffffff78
   17160:	str	ip, [sp]
   17164:	str	ip, [sp, #4]
   17168:	movw	lr, #625	; 0x271
   1716c:	str	lr, [sp, #8]
   17170:	bl	15008 <test_json@@Base>
   17174:	ldr	r1, [pc, #2896]	; 17ccc <main@@Base+0x1380>
   17178:	add	r1, pc, r1
   1717c:	ldr	r2, [pc, #2892]	; 17cd0 <main@@Base+0x1384>
   17180:	add	r2, pc, r2
   17184:	ldr	r3, [fp, #-8]
   17188:	orr	r0, r3, r0
   1718c:	str	r0, [fp, #-8]
   17190:	ldr	r0, [fp, #-12]
   17194:	movw	r3, #0
   17198:	str	r3, [fp, #-140]	; 0xffffff74
   1719c:	ldr	ip, [fp, #-140]	; 0xffffff74
   171a0:	str	ip, [sp]
   171a4:	str	ip, [sp, #4]
   171a8:	movw	lr, #628	; 0x274
   171ac:	str	lr, [sp, #8]
   171b0:	bl	15008 <test_json@@Base>
   171b4:	ldr	r1, [pc, #2824]	; 17cc4 <main@@Base+0x1378>
   171b8:	add	r1, pc, r1
   171bc:	ldr	r2, [pc, #2820]	; 17cc8 <main@@Base+0x137c>
   171c0:	add	r2, pc, r2
   171c4:	ldr	r3, [fp, #-8]
   171c8:	orr	r0, r3, r0
   171cc:	str	r0, [fp, #-8]
   171d0:	ldr	r0, [fp, #-12]
   171d4:	movw	r3, #0
   171d8:	str	r3, [fp, #-144]	; 0xffffff70
   171dc:	ldr	ip, [fp, #-144]	; 0xffffff70
   171e0:	str	ip, [sp]
   171e4:	str	ip, [sp, #4]
   171e8:	movw	lr, #631	; 0x277
   171ec:	str	lr, [sp, #8]
   171f0:	bl	15008 <test_json@@Base>
   171f4:	ldr	r1, [pc, #2752]	; 17cbc <main@@Base+0x1370>
   171f8:	add	r1, pc, r1
   171fc:	ldr	r2, [pc, #2748]	; 17cc0 <main@@Base+0x1374>
   17200:	add	r2, pc, r2
   17204:	ldr	r3, [fp, #-8]
   17208:	orr	r0, r3, r0
   1720c:	str	r0, [fp, #-8]
   17210:	ldr	r0, [fp, #-12]
   17214:	movw	r3, #0
   17218:	str	r3, [fp, #-148]	; 0xffffff6c
   1721c:	ldr	ip, [fp, #-148]	; 0xffffff6c
   17220:	str	ip, [sp]
   17224:	str	ip, [sp, #4]
   17228:	movw	lr, #634	; 0x27a
   1722c:	str	lr, [sp, #8]
   17230:	bl	15008 <test_json@@Base>
   17234:	ldr	r1, [pc, #2680]	; 17cb4 <main@@Base+0x1368>
   17238:	add	r1, pc, r1
   1723c:	ldr	r2, [pc, #2676]	; 17cb8 <main@@Base+0x136c>
   17240:	add	r2, pc, r2
   17244:	ldr	r3, [fp, #-8]
   17248:	orr	r0, r3, r0
   1724c:	str	r0, [fp, #-8]
   17250:	ldr	r0, [fp, #-12]
   17254:	movw	r3, #0
   17258:	str	r3, [sp, #152]	; 0x98
   1725c:	ldr	ip, [sp, #152]	; 0x98
   17260:	str	ip, [sp]
   17264:	str	ip, [sp, #4]
   17268:	movw	lr, #638	; 0x27e
   1726c:	str	lr, [sp, #8]
   17270:	bl	15008 <test_json@@Base>
   17274:	ldr	r1, [pc, #2608]	; 17cac <main@@Base+0x1360>
   17278:	add	r1, pc, r1
   1727c:	ldr	r2, [pc, #2604]	; 17cb0 <main@@Base+0x1364>
   17280:	add	r2, pc, r2
   17284:	ldr	r3, [fp, #-8]
   17288:	orr	r0, r3, r0
   1728c:	str	r0, [fp, #-8]
   17290:	ldr	r0, [fp, #-12]
   17294:	movw	r3, #0
   17298:	str	r3, [sp, #148]	; 0x94
   1729c:	ldr	ip, [sp, #148]	; 0x94
   172a0:	str	ip, [sp]
   172a4:	str	ip, [sp, #4]
   172a8:	movw	lr, #642	; 0x282
   172ac:	str	lr, [sp, #8]
   172b0:	bl	15008 <test_json@@Base>
   172b4:	ldr	r1, [pc, #2536]	; 17ca4 <main@@Base+0x1358>
   172b8:	add	r1, pc, r1
   172bc:	ldr	r2, [pc, #2532]	; 17ca8 <main@@Base+0x135c>
   172c0:	add	r2, pc, r2
   172c4:	ldr	r3, [fp, #-8]
   172c8:	orr	r0, r3, r0
   172cc:	str	r0, [fp, #-8]
   172d0:	ldr	r0, [fp, #-12]
   172d4:	movw	r3, #0
   172d8:	str	r3, [sp, #144]	; 0x90
   172dc:	ldr	ip, [sp, #144]	; 0x90
   172e0:	str	ip, [sp]
   172e4:	str	ip, [sp, #4]
   172e8:	movw	lr, #646	; 0x286
   172ec:	str	lr, [sp, #8]
   172f0:	bl	15008 <test_json@@Base>
   172f4:	ldr	r1, [pc, #2464]	; 17c9c <main@@Base+0x1350>
   172f8:	add	r1, pc, r1
   172fc:	ldr	r2, [pc, #2460]	; 17ca0 <main@@Base+0x1354>
   17300:	add	r2, pc, r2
   17304:	ldr	r3, [fp, #-8]
   17308:	orr	r0, r3, r0
   1730c:	str	r0, [fp, #-8]
   17310:	ldr	r0, [fp, #-12]
   17314:	movw	r3, #0
   17318:	str	r3, [sp, #140]	; 0x8c
   1731c:	ldr	ip, [sp, #140]	; 0x8c
   17320:	str	ip, [sp]
   17324:	str	ip, [sp, #4]
   17328:	movw	lr, #649	; 0x289
   1732c:	str	lr, [sp, #8]
   17330:	bl	15008 <test_json@@Base>
   17334:	ldr	r1, [pc, #2392]	; 17c94 <main@@Base+0x1348>
   17338:	add	r1, pc, r1
   1733c:	ldr	r2, [pc, #2388]	; 17c98 <main@@Base+0x134c>
   17340:	add	r2, pc, r2
   17344:	ldr	r3, [fp, #-8]
   17348:	orr	r0, r3, r0
   1734c:	str	r0, [fp, #-8]
   17350:	ldr	r0, [fp, #-12]
   17354:	movw	r3, #0
   17358:	str	r3, [sp, #136]	; 0x88
   1735c:	ldr	ip, [sp, #136]	; 0x88
   17360:	str	ip, [sp]
   17364:	str	ip, [sp, #4]
   17368:	movw	lr, #653	; 0x28d
   1736c:	str	lr, [sp, #8]
   17370:	bl	15008 <test_json@@Base>
   17374:	ldr	r1, [pc, #2320]	; 17c8c <main@@Base+0x1340>
   17378:	add	r1, pc, r1
   1737c:	ldr	r2, [pc, #2316]	; 17c90 <main@@Base+0x1344>
   17380:	add	r2, pc, r2
   17384:	ldr	r3, [fp, #-8]
   17388:	orr	r0, r3, r0
   1738c:	str	r0, [fp, #-8]
   17390:	ldr	r0, [fp, #-12]
   17394:	movw	r3, #0
   17398:	str	r3, [sp, #132]	; 0x84
   1739c:	ldr	ip, [sp, #132]	; 0x84
   173a0:	str	ip, [sp]
   173a4:	str	ip, [sp, #4]
   173a8:	movw	lr, #656	; 0x290
   173ac:	str	lr, [sp, #8]
   173b0:	bl	15008 <test_json@@Base>
   173b4:	ldr	r1, [pc, #2248]	; 17c84 <main@@Base+0x1338>
   173b8:	add	r1, pc, r1
   173bc:	ldr	r2, [pc, #2244]	; 17c88 <main@@Base+0x133c>
   173c0:	add	r2, pc, r2
   173c4:	ldr	r3, [fp, #-8]
   173c8:	orr	r0, r3, r0
   173cc:	str	r0, [fp, #-8]
   173d0:	ldr	r0, [fp, #-12]
   173d4:	movw	r3, #0
   173d8:	str	r3, [sp, #128]	; 0x80
   173dc:	ldr	ip, [sp, #128]	; 0x80
   173e0:	str	ip, [sp]
   173e4:	str	ip, [sp, #4]
   173e8:	movw	lr, #659	; 0x293
   173ec:	str	lr, [sp, #8]
   173f0:	bl	15008 <test_json@@Base>
   173f4:	ldr	r1, [pc, #2176]	; 17c7c <main@@Base+0x1330>
   173f8:	add	r1, pc, r1
   173fc:	ldr	r2, [pc, #2172]	; 17c80 <main@@Base+0x1334>
   17400:	add	r2, pc, r2
   17404:	ldr	r3, [fp, #-8]
   17408:	orr	r0, r3, r0
   1740c:	str	r0, [fp, #-8]
   17410:	ldr	r0, [fp, #-12]
   17414:	movw	r3, #0
   17418:	str	r3, [sp, #124]	; 0x7c
   1741c:	ldr	ip, [sp, #124]	; 0x7c
   17420:	str	ip, [sp]
   17424:	str	ip, [sp, #4]
   17428:	movw	lr, #662	; 0x296
   1742c:	str	lr, [sp, #8]
   17430:	bl	15008 <test_json@@Base>
   17434:	ldr	r1, [pc, #2104]	; 17c74 <main@@Base+0x1328>
   17438:	add	r1, pc, r1
   1743c:	ldr	r2, [pc, #2100]	; 17c78 <main@@Base+0x132c>
   17440:	add	r2, pc, r2
   17444:	ldr	r3, [fp, #-8]
   17448:	orr	r0, r3, r0
   1744c:	str	r0, [fp, #-8]
   17450:	ldr	r0, [fp, #-12]
   17454:	movw	r3, #0
   17458:	str	r3, [sp, #120]	; 0x78
   1745c:	ldr	ip, [sp, #120]	; 0x78
   17460:	str	ip, [sp]
   17464:	str	ip, [sp, #4]
   17468:	movw	lr, #665	; 0x299
   1746c:	str	lr, [sp, #8]
   17470:	bl	15008 <test_json@@Base>
   17474:	ldr	r1, [pc, #2032]	; 17c6c <main@@Base+0x1320>
   17478:	add	r1, pc, r1
   1747c:	ldr	r2, [pc, #2028]	; 17c70 <main@@Base+0x1324>
   17480:	add	r2, pc, r2
   17484:	ldr	r3, [fp, #-8]
   17488:	orr	r0, r3, r0
   1748c:	str	r0, [fp, #-8]
   17490:	ldr	r0, [fp, #-12]
   17494:	movw	r3, #0
   17498:	str	r3, [sp, #116]	; 0x74
   1749c:	ldr	ip, [sp, #116]	; 0x74
   174a0:	str	ip, [sp]
   174a4:	str	ip, [sp, #4]
   174a8:	movw	lr, #668	; 0x29c
   174ac:	str	lr, [sp, #8]
   174b0:	bl	15008 <test_json@@Base>
   174b4:	ldr	r1, [pc, #1960]	; 17c64 <main@@Base+0x1318>
   174b8:	add	r1, pc, r1
   174bc:	ldr	r2, [pc, #1956]	; 17c68 <main@@Base+0x131c>
   174c0:	add	r2, pc, r2
   174c4:	ldr	r3, [fp, #-8]
   174c8:	orr	r0, r3, r0
   174cc:	str	r0, [fp, #-8]
   174d0:	ldr	r0, [fp, #-12]
   174d4:	movw	r3, #0
   174d8:	str	r3, [sp, #112]	; 0x70
   174dc:	ldr	ip, [sp, #112]	; 0x70
   174e0:	str	ip, [sp]
   174e4:	str	ip, [sp, #4]
   174e8:	movw	lr, #671	; 0x29f
   174ec:	str	lr, [sp, #8]
   174f0:	bl	15008 <test_json@@Base>
   174f4:	ldr	r1, [pc, #1888]	; 17c5c <main@@Base+0x1310>
   174f8:	add	r1, pc, r1
   174fc:	ldr	r2, [pc, #1884]	; 17c60 <main@@Base+0x1314>
   17500:	add	r2, pc, r2
   17504:	ldr	r3, [fp, #-8]
   17508:	orr	r0, r3, r0
   1750c:	str	r0, [fp, #-8]
   17510:	ldr	r0, [fp, #-12]
   17514:	movw	r3, #0
   17518:	str	r3, [sp, #108]	; 0x6c
   1751c:	ldr	ip, [sp, #108]	; 0x6c
   17520:	str	ip, [sp]
   17524:	str	ip, [sp, #4]
   17528:	movw	lr, #674	; 0x2a2
   1752c:	str	lr, [sp, #8]
   17530:	bl	15008 <test_json@@Base>
   17534:	ldr	r1, [pc, #1816]	; 17c54 <main@@Base+0x1308>
   17538:	add	r1, pc, r1
   1753c:	ldr	r2, [pc, #1812]	; 17c58 <main@@Base+0x130c>
   17540:	add	r2, pc, r2
   17544:	ldr	r3, [fp, #-8]
   17548:	orr	r0, r3, r0
   1754c:	str	r0, [fp, #-8]
   17550:	ldr	r0, [fp, #-12]
   17554:	movw	r3, #0
   17558:	str	r3, [sp, #104]	; 0x68
   1755c:	ldr	ip, [sp, #104]	; 0x68
   17560:	str	ip, [sp]
   17564:	str	ip, [sp, #4]
   17568:	movw	lr, #677	; 0x2a5
   1756c:	str	lr, [sp, #8]
   17570:	bl	15008 <test_json@@Base>
   17574:	ldr	r1, [pc, #1744]	; 17c4c <main@@Base+0x1300>
   17578:	add	r1, pc, r1
   1757c:	ldr	r2, [pc, #1740]	; 17c50 <main@@Base+0x1304>
   17580:	add	r2, pc, r2
   17584:	ldr	r3, [fp, #-8]
   17588:	orr	r0, r3, r0
   1758c:	str	r0, [fp, #-8]
   17590:	ldr	r0, [fp, #-12]
   17594:	movw	r3, #0
   17598:	str	r3, [sp, #100]	; 0x64
   1759c:	ldr	ip, [sp, #100]	; 0x64
   175a0:	str	ip, [sp]
   175a4:	str	ip, [sp, #4]
   175a8:	movw	lr, #680	; 0x2a8
   175ac:	str	lr, [sp, #8]
   175b0:	bl	15008 <test_json@@Base>
   175b4:	ldr	r1, [pc, #1672]	; 17c44 <main@@Base+0x12f8>
   175b8:	add	r1, pc, r1
   175bc:	ldr	r2, [pc, #1668]	; 17c48 <main@@Base+0x12fc>
   175c0:	add	r2, pc, r2
   175c4:	ldr	r3, [fp, #-8]
   175c8:	orr	r0, r3, r0
   175cc:	str	r0, [fp, #-8]
   175d0:	ldr	r0, [fp, #-12]
   175d4:	movw	r3, #0
   175d8:	str	r3, [sp, #96]	; 0x60
   175dc:	ldr	ip, [sp, #96]	; 0x60
   175e0:	str	ip, [sp]
   175e4:	str	ip, [sp, #4]
   175e8:	movw	lr, #683	; 0x2ab
   175ec:	str	lr, [sp, #8]
   175f0:	bl	15008 <test_json@@Base>
   175f4:	ldr	r1, [pc, #1600]	; 17c3c <main@@Base+0x12f0>
   175f8:	add	r1, pc, r1
   175fc:	ldr	r2, [pc, #1596]	; 17c40 <main@@Base+0x12f4>
   17600:	add	r2, pc, r2
   17604:	ldr	r3, [fp, #-8]
   17608:	orr	r0, r3, r0
   1760c:	str	r0, [fp, #-8]
   17610:	ldr	r0, [fp, #-12]
   17614:	movw	r3, #0
   17618:	str	r3, [sp, #92]	; 0x5c
   1761c:	ldr	ip, [sp, #92]	; 0x5c
   17620:	str	ip, [sp]
   17624:	str	ip, [sp, #4]
   17628:	movw	lr, #686	; 0x2ae
   1762c:	str	lr, [sp, #8]
   17630:	bl	15008 <test_json@@Base>
   17634:	ldr	r1, [pc, #1528]	; 17c34 <main@@Base+0x12e8>
   17638:	add	r1, pc, r1
   1763c:	ldr	r2, [pc, #1524]	; 17c38 <main@@Base+0x12ec>
   17640:	add	r2, pc, r2
   17644:	ldr	r3, [fp, #-8]
   17648:	orr	r0, r3, r0
   1764c:	str	r0, [fp, #-8]
   17650:	ldr	r0, [fp, #-12]
   17654:	movw	r3, #0
   17658:	str	r3, [sp, #88]	; 0x58
   1765c:	ldr	ip, [sp, #88]	; 0x58
   17660:	str	ip, [sp]
   17664:	str	ip, [sp, #4]
   17668:	movw	lr, #690	; 0x2b2
   1766c:	str	lr, [sp, #8]
   17670:	bl	15008 <test_json@@Base>
   17674:	ldr	r1, [pc, #1456]	; 17c2c <main@@Base+0x12e0>
   17678:	add	r1, pc, r1
   1767c:	ldr	r2, [pc, #1452]	; 17c30 <main@@Base+0x12e4>
   17680:	add	r2, pc, r2
   17684:	ldr	r3, [fp, #-8]
   17688:	orr	r0, r3, r0
   1768c:	str	r0, [fp, #-8]
   17690:	ldr	r0, [fp, #-12]
   17694:	movw	r3, #0
   17698:	str	r3, [sp, #84]	; 0x54
   1769c:	ldr	ip, [sp, #84]	; 0x54
   176a0:	str	ip, [sp]
   176a4:	str	ip, [sp, #4]
   176a8:	movw	lr, #694	; 0x2b6
   176ac:	str	lr, [sp, #8]
   176b0:	bl	15008 <test_json@@Base>
   176b4:	ldr	r1, [pc, #1384]	; 17c24 <main@@Base+0x12d8>
   176b8:	add	r1, pc, r1
   176bc:	ldr	r2, [pc, #1380]	; 17c28 <main@@Base+0x12dc>
   176c0:	add	r2, pc, r2
   176c4:	ldr	r3, [fp, #-8]
   176c8:	orr	r0, r3, r0
   176cc:	str	r0, [fp, #-8]
   176d0:	ldr	r0, [fp, #-12]
   176d4:	movw	r3, #0
   176d8:	str	r3, [sp, #80]	; 0x50
   176dc:	ldr	ip, [sp, #80]	; 0x50
   176e0:	str	ip, [sp]
   176e4:	str	ip, [sp, #4]
   176e8:	movw	lr, #698	; 0x2ba
   176ec:	str	lr, [sp, #8]
   176f0:	bl	15008 <test_json@@Base>
   176f4:	ldr	r1, [pc, #1312]	; 17c1c <main@@Base+0x12d0>
   176f8:	add	r1, pc, r1
   176fc:	ldr	r2, [pc, #1308]	; 17c20 <main@@Base+0x12d4>
   17700:	add	r2, pc, r2
   17704:	ldr	r3, [fp, #-8]
   17708:	orr	r0, r3, r0
   1770c:	str	r0, [fp, #-8]
   17710:	ldr	r0, [fp, #-12]
   17714:	movw	r3, #0
   17718:	str	r3, [sp, #76]	; 0x4c
   1771c:	ldr	ip, [sp, #76]	; 0x4c
   17720:	str	ip, [sp]
   17724:	str	ip, [sp, #4]
   17728:	movw	lr, #701	; 0x2bd
   1772c:	str	lr, [sp, #8]
   17730:	bl	15008 <test_json@@Base>
   17734:	ldr	r1, [pc, #1240]	; 17c14 <main@@Base+0x12c8>
   17738:	add	r1, pc, r1
   1773c:	ldr	r2, [pc, #1236]	; 17c18 <main@@Base+0x12cc>
   17740:	add	r2, pc, r2
   17744:	ldr	r3, [fp, #-8]
   17748:	orr	r0, r3, r0
   1774c:	str	r0, [fp, #-8]
   17750:	ldr	r0, [fp, #-12]
   17754:	movw	r3, #0
   17758:	str	r3, [sp, #72]	; 0x48
   1775c:	ldr	ip, [sp, #72]	; 0x48
   17760:	str	ip, [sp]
   17764:	str	ip, [sp, #4]
   17768:	movw	lr, #711	; 0x2c7
   1776c:	str	lr, [sp, #8]
   17770:	bl	15008 <test_json@@Base>
   17774:	ldr	r1, [pc, #1168]	; 17c0c <main@@Base+0x12c0>
   17778:	add	r1, pc, r1
   1777c:	ldr	r2, [pc, #1164]	; 17c10 <main@@Base+0x12c4>
   17780:	add	r2, pc, r2
   17784:	ldr	r3, [fp, #-8]
   17788:	orr	r0, r3, r0
   1778c:	str	r0, [fp, #-8]
   17790:	ldr	r0, [fp, #-12]
   17794:	movw	r3, #0
   17798:	str	r3, [sp, #68]	; 0x44
   1779c:	ldr	ip, [sp, #68]	; 0x44
   177a0:	str	ip, [sp]
   177a4:	str	ip, [sp, #4]
   177a8:	movw	lr, #716	; 0x2cc
   177ac:	str	lr, [sp, #8]
   177b0:	bl	15008 <test_json@@Base>
   177b4:	ldr	r1, [pc, #1096]	; 17c04 <main@@Base+0x12b8>
   177b8:	add	r1, pc, r1
   177bc:	ldr	r2, [pc, #1092]	; 17c08 <main@@Base+0x12bc>
   177c0:	add	r2, pc, r2
   177c4:	ldr	r3, [fp, #-8]
   177c8:	orr	r0, r3, r0
   177cc:	str	r0, [fp, #-8]
   177d0:	ldr	r0, [fp, #-12]
   177d4:	movw	r3, #0
   177d8:	str	r3, [sp, #64]	; 0x40
   177dc:	ldr	ip, [sp, #64]	; 0x40
   177e0:	str	ip, [sp]
   177e4:	str	ip, [sp, #4]
   177e8:	movw	lr, #731	; 0x2db
   177ec:	str	lr, [sp, #8]
   177f0:	bl	15008 <test_json@@Base>
   177f4:	ldr	r1, [pc, #1024]	; 17bfc <main@@Base+0x12b0>
   177f8:	add	r1, pc, r1
   177fc:	ldr	r2, [pc, #1020]	; 17c00 <main@@Base+0x12b4>
   17800:	add	r2, pc, r2
   17804:	ldr	r3, [fp, #-8]
   17808:	orr	r0, r3, r0
   1780c:	str	r0, [fp, #-8]
   17810:	ldr	r0, [fp, #-12]
   17814:	movw	r3, #0
   17818:	str	r3, [sp, #60]	; 0x3c
   1781c:	ldr	ip, [sp, #60]	; 0x3c
   17820:	str	ip, [sp]
   17824:	str	ip, [sp, #4]
   17828:	movw	lr, #734	; 0x2de
   1782c:	str	lr, [sp, #8]
   17830:	bl	15008 <test_json@@Base>
   17834:	ldr	r1, [pc, #952]	; 17bf4 <main@@Base+0x12a8>
   17838:	add	r1, pc, r1
   1783c:	ldr	r2, [pc, #948]	; 17bf8 <main@@Base+0x12ac>
   17840:	add	r2, pc, r2
   17844:	ldr	r3, [fp, #-8]
   17848:	orr	r0, r3, r0
   1784c:	str	r0, [fp, #-8]
   17850:	ldr	r0, [fp, #-12]
   17854:	movw	r3, #0
   17858:	str	r3, [sp, #56]	; 0x38
   1785c:	ldr	ip, [sp, #56]	; 0x38
   17860:	str	ip, [sp]
   17864:	str	ip, [sp, #4]
   17868:	movw	lr, #738	; 0x2e2
   1786c:	str	lr, [sp, #8]
   17870:	bl	15008 <test_json@@Base>
   17874:	ldr	r1, [pc, #880]	; 17bec <main@@Base+0x12a0>
   17878:	add	r1, pc, r1
   1787c:	ldr	r2, [pc, #876]	; 17bf0 <main@@Base+0x12a4>
   17880:	add	r2, pc, r2
   17884:	ldr	r3, [fp, #-8]
   17888:	orr	r0, r3, r0
   1788c:	str	r0, [fp, #-8]
   17890:	ldr	r0, [fp, #-12]
   17894:	movw	r3, #0
   17898:	str	r3, [sp, #52]	; 0x34
   1789c:	ldr	ip, [sp, #52]	; 0x34
   178a0:	str	ip, [sp]
   178a4:	str	ip, [sp, #4]
   178a8:	movw	lr, #750	; 0x2ee
   178ac:	str	lr, [sp, #8]
   178b0:	bl	15008 <test_json@@Base>
   178b4:	ldr	r1, [pc, #808]	; 17be4 <main@@Base+0x1298>
   178b8:	add	r1, pc, r1
   178bc:	ldr	r2, [pc, #804]	; 17be8 <main@@Base+0x129c>
   178c0:	add	r2, pc, r2
   178c4:	ldr	r3, [fp, #-8]
   178c8:	orr	r0, r3, r0
   178cc:	str	r0, [fp, #-8]
   178d0:	ldr	r0, [fp, #-12]
   178d4:	movw	r3, #0
   178d8:	str	r3, [sp, #48]	; 0x30
   178dc:	ldr	ip, [sp, #48]	; 0x30
   178e0:	str	ip, [sp]
   178e4:	str	ip, [sp, #4]
   178e8:	movw	lr, #766	; 0x2fe
   178ec:	str	lr, [sp, #8]
   178f0:	bl	15008 <test_json@@Base>
   178f4:	ldr	r1, [pc, #736]	; 17bdc <main@@Base+0x1290>
   178f8:	add	r1, pc, r1
   178fc:	ldr	r2, [pc, #732]	; 17be0 <main@@Base+0x1294>
   17900:	add	r2, pc, r2
   17904:	ldr	r3, [fp, #-8]
   17908:	orr	r0, r3, r0
   1790c:	str	r0, [fp, #-8]
   17910:	ldr	r0, [fp, #-12]
   17914:	movw	r3, #0
   17918:	str	r3, [sp, #44]	; 0x2c
   1791c:	ldr	ip, [sp, #44]	; 0x2c
   17920:	str	ip, [sp]
   17924:	str	ip, [sp, #4]
   17928:	movw	lr, #770	; 0x302
   1792c:	str	lr, [sp, #8]
   17930:	bl	15008 <test_json@@Base>
   17934:	ldr	r1, [pc, #664]	; 17bd4 <main@@Base+0x1288>
   17938:	add	r1, pc, r1
   1793c:	ldr	r2, [pc, #660]	; 17bd8 <main@@Base+0x128c>
   17940:	add	r2, pc, r2
   17944:	ldr	r3, [fp, #-8]
   17948:	orr	r0, r3, r0
   1794c:	str	r0, [fp, #-8]
   17950:	b	17990 <main@@Base+0x1044>
   17954:	andeq	r8, r4, ip, ror r5
   17958:	andeq	r2, r3, lr, lsl #24
   1795c:			; <UNDEFINED> instruction: 0x00030abb
   17960:	andeq	r2, r3, r5, ror #23
   17964:	andeq	r2, r3, r4, lsl #24
   17968:	andeq	r2, r3, sp, ror #23
   1796c:	andeq	r2, r3, sp, lsl #24
   17970:	strdeq	r2, [r3], -r8
   17974:	andeq	r2, r3, r1, lsr #24
   17978:	andeq	r2, r3, r5, lsl ip
   1797c:	andeq	r2, r3, r1, ror #23
   17980:	andeq	r2, r3, pc, lsl #24
   17984:	andeq	r2, r3, r4, lsl #22
   17988:	strdeq	r2, [r3], -r5
   1798c:	andeq	r2, r3, sp, lsl #22
   17990:	ldr	r0, [fp, #-12]
   17994:	movw	r3, #0
   17998:	str	r3, [sp, #40]	; 0x28
   1799c:	ldr	ip, [sp, #40]	; 0x28
   179a0:	str	ip, [sp]
   179a4:	str	ip, [sp, #4]
   179a8:	movw	lr, #776	; 0x308
   179ac:	str	lr, [sp, #8]
   179b0:	bl	15008 <test_json@@Base>
   179b4:	ldr	r1, [pc, #528]	; 17bcc <main@@Base+0x1280>
   179b8:	add	r1, pc, r1
   179bc:	ldr	r2, [pc, #524]	; 17bd0 <main@@Base+0x1284>
   179c0:	add	r2, pc, r2
   179c4:	ldr	r3, [fp, #-8]
   179c8:	orr	r0, r3, r0
   179cc:	str	r0, [fp, #-8]
   179d0:	ldr	r0, [fp, #-12]
   179d4:	movw	r3, #0
   179d8:	str	r3, [sp, #36]	; 0x24
   179dc:	ldr	ip, [sp, #36]	; 0x24
   179e0:	str	ip, [sp]
   179e4:	str	ip, [sp, #4]
   179e8:	movw	lr, #781	; 0x30d
   179ec:	str	lr, [sp, #8]
   179f0:	bl	15008 <test_json@@Base>
   179f4:	ldr	r1, [pc, #456]	; 17bc4 <main@@Base+0x1278>
   179f8:	add	r1, pc, r1
   179fc:	ldr	r2, [pc, #452]	; 17bc8 <main@@Base+0x127c>
   17a00:	add	r2, pc, r2
   17a04:	ldr	r3, [fp, #-8]
   17a08:	orr	r0, r3, r0
   17a0c:	str	r0, [fp, #-8]
   17a10:	ldr	r0, [fp, #-12]
   17a14:	movw	r3, #0
   17a18:	str	r3, [sp, #32]
   17a1c:	ldr	ip, [sp, #32]
   17a20:	str	ip, [sp]
   17a24:	str	ip, [sp, #4]
   17a28:	movw	lr, #786	; 0x312
   17a2c:	str	lr, [sp, #8]
   17a30:	bl	15008 <test_json@@Base>
   17a34:	ldr	r1, [pc, #384]	; 17bbc <main@@Base+0x1270>
   17a38:	add	r1, pc, r1
   17a3c:	ldr	r2, [pc, #380]	; 17bc0 <main@@Base+0x1274>
   17a40:	add	r2, pc, r2
   17a44:	ldr	r3, [fp, #-8]
   17a48:	orr	r0, r3, r0
   17a4c:	str	r0, [fp, #-8]
   17a50:	ldr	r0, [fp, #-12]
   17a54:	movw	r3, #0
   17a58:	str	r3, [sp, #28]
   17a5c:	ldr	ip, [sp, #28]
   17a60:	str	ip, [sp]
   17a64:	str	ip, [sp, #4]
   17a68:	movw	lr, #791	; 0x317
   17a6c:	str	lr, [sp, #8]
   17a70:	bl	15008 <test_json@@Base>
   17a74:	ldr	r1, [pc, #312]	; 17bb4 <main@@Base+0x1268>
   17a78:	add	r1, pc, r1
   17a7c:	ldr	r2, [pc, #308]	; 17bb8 <main@@Base+0x126c>
   17a80:	add	r2, pc, r2
   17a84:	ldr	r3, [fp, #-8]
   17a88:	orr	r0, r3, r0
   17a8c:	str	r0, [fp, #-8]
   17a90:	ldr	r0, [fp, #-12]
   17a94:	movw	r3, #0
   17a98:	str	r3, [sp, #24]
   17a9c:	ldr	ip, [sp, #24]
   17aa0:	str	ip, [sp]
   17aa4:	str	ip, [sp, #4]
   17aa8:	movw	lr, #796	; 0x31c
   17aac:	str	lr, [sp, #8]
   17ab0:	bl	15008 <test_json@@Base>
   17ab4:	ldr	r1, [pc, #240]	; 17bac <main@@Base+0x1260>
   17ab8:	add	r1, pc, r1
   17abc:	ldr	r2, [pc, #236]	; 17bb0 <main@@Base+0x1264>
   17ac0:	add	r2, pc, r2
   17ac4:	ldr	r3, [fp, #-8]
   17ac8:	orr	r0, r3, r0
   17acc:	str	r0, [fp, #-8]
   17ad0:	ldr	r0, [fp, #-12]
   17ad4:	movw	r3, #0
   17ad8:	str	r3, [sp, #20]
   17adc:	ldr	ip, [sp, #20]
   17ae0:	str	ip, [sp]
   17ae4:	str	ip, [sp, #4]
   17ae8:	movw	lr, #801	; 0x321
   17aec:	str	lr, [sp, #8]
   17af0:	bl	15008 <test_json@@Base>
   17af4:	ldr	r1, [pc, #168]	; 17ba4 <main@@Base+0x1258>
   17af8:	add	r1, pc, r1
   17afc:	ldr	r2, [pc, #164]	; 17ba8 <main@@Base+0x125c>
   17b00:	add	r2, pc, r2
   17b04:	ldr	r3, [fp, #-8]
   17b08:	orr	r0, r3, r0
   17b0c:	str	r0, [fp, #-8]
   17b10:	ldr	r0, [fp, #-12]
   17b14:	movw	r3, #0
   17b18:	str	r3, [sp, #16]
   17b1c:	ldr	ip, [sp, #16]
   17b20:	str	ip, [sp]
   17b24:	str	ip, [sp, #4]
   17b28:	movw	lr, #806	; 0x326
   17b2c:	str	lr, [sp, #8]
   17b30:	bl	15008 <test_json@@Base>
   17b34:	ldr	r1, [fp, #-8]
   17b38:	orr	r0, r1, r0
   17b3c:	str	r0, [fp, #-8]
   17b40:	ldr	r0, [fp, #-8]
   17b44:	cmp	r0, #0
   17b48:	movw	r0, #0
   17b4c:	movne	r0, #1
   17b50:	tst	r0, #1
   17b54:	mvn	r0, #0
   17b58:	moveq	r0, #0
   17b5c:	mov	sp, fp
   17b60:	pop	{fp, pc}
   17b64:	ldrdeq	r2, [r3], -lr
   17b68:	strdeq	r0, [r3], -fp
   17b6c:	andeq	r0, r3, ip, lsr r8
   17b70:			; <UNDEFINED> instruction: 0x000308bb
   17b74:	andeq	r2, r3, r5, lsl #23
   17b78:	andeq	r0, r3, fp, ror r8
   17b7c:	andeq	r2, r3, sl, asr fp
   17b80:	andeq	r2, r3, r4, asr #19
   17b84:	andeq	r2, r3, sp, lsr fp
   17b88:	andeq	r2, r3, sp, asr #19
   17b8c:	andeq	r2, r3, r1, lsr #22
   17b90:	andeq	r2, r3, r1, ror #19
   17b94:	andeq	r2, r3, lr, lsl #22
   17b98:	andeq	r2, r3, r1, lsr #19
   17b9c:	andeq	r2, r3, r4, lsl #22
   17ba0:	andeq	r2, r3, r4, asr #17
   17ba4:	andeq	r2, r3, ip, lsr #28
   17ba8:			; <UNDEFINED> instruction: 0x00032eb3
   17bac:	andeq	r2, r3, r3, ror #26
   17bb0:	andeq	r2, r3, r5, ror #27
   17bb4:			; <UNDEFINED> instruction: 0x00032cb8
   17bb8:	andeq	r2, r3, fp, lsr #26
   17bbc:	andeq	r2, r3, pc, ror #23
   17bc0:	andeq	r2, r3, r2, ror ip
   17bc4:	andeq	r2, r3, r6, asr #22
   17bc8:			; <UNDEFINED> instruction: 0x00032bb8
   17bcc:	andeq	r2, r3, lr, lsl #22
   17bd0:			; <UNDEFINED> instruction: 0x0002fabb
   17bd4:	andeq	r2, r3, r3, lsr #21
   17bd8:	andeq	r2, r3, r6, lsl fp
   17bdc:	andeq	r2, r3, sl, lsl #21
   17be0:			; <UNDEFINED> instruction: 0x00032ab1
   17be4:	andeq	r2, r3, r1, lsl #21
   17be8:	andeq	r2, r3, r0, lsr #21
   17bec:	andeq	r2, r3, r4, lsr #20
   17bf0:	ldrdeq	r2, [r3], -fp
   17bf4:	ldrdeq	r2, [r3], -fp
   17bf8:	andeq	r2, r3, fp, lsl sl
   17bfc:	andeq	r2, r3, pc, ror #19
   17c00:	andeq	r2, r3, r1, lsl #20
   17c04:	andeq	r2, r3, r2, asr #19
   17c08:	strdeq	r2, [r3], -r7
   17c0c:	muleq	r3, r5, r9
   17c10:	andeq	r2, r3, pc, lsr #18
   17c14:	andeq	r2, r3, sl, lsl r9
   17c18:	andeq	r2, r3, pc, ror #18
   17c1c:	andeq	r2, r3, r8, lsr r9
   17c20:	andeq	pc, r2, fp, ror sp	; <UNPREDICTABLE>
   17c24:	andeq	r2, r3, r3, asr r9
   17c28:			; <UNDEFINED> instruction: 0x0002fdbb
   17c2c:	andeq	r2, r3, r4, lsr r9
   17c30:	muleq	r3, ip, r6
   17c34:	andeq	r2, r3, r9, lsr #18
   17c38:	andeq	r2, r3, r3, lsr #12
   17c3c:	andeq	r2, r3, r2, lsr #18
   17c40:	andeq	r2, r3, r7, asr #11
   17c44:	andeq	r2, r3, lr, lsr r9
   17c48:	muleq	r3, ip, r5
   17c4c:	andeq	r2, r3, lr, ror r9
   17c50:	ldrdeq	r2, [r3], -ip
   17c54:	andeq	r2, r3, sl, lsl #19
   17c58:	andeq	r2, r3, r4, asr #1
   17c5c:	andeq	r2, r3, r5, lsr #19
   17c60:	andeq	r2, r3, r4, lsl #2
   17c64:	andeq	r2, r3, r8, asr #19
   17c68:	strdeq	r2, [r3], -r0
   17c6c:	andeq	r2, r3, sl, ror #19
   17c70:	strdeq	r2, [r3], -r1
   17c74:	andeq	r2, r3, ip, lsl #20
   17c78:	strdeq	r2, [r3], -r1
   17c7c:	andeq	r2, r3, lr, lsr #20
   17c80:	andeq	r2, r3, r1, lsr #5
   17c84:	andeq	r2, r3, r1, asr sl
   17c88:	andeq	r2, r3, r7, lsl #12
   17c8c:	andeq	r2, r3, r4, ror sl
   17c90:	andeq	r2, r3, sp, asr #5
   17c94:	muleq	r3, r7, sl
   17c98:	andeq	r2, r3, r4, asr #5
   17c9c:			; <UNDEFINED> instruction: 0x00032ab1
   17ca0:	andeq	r0, r3, fp, ror r1
   17ca4:	andeq	r2, r3, r6, asr #21
   17ca8:			; <UNDEFINED> instruction: 0x000301bb
   17cac:	andeq	r2, r3, r5, lsr sl
   17cb0:	muleq	r3, ip, sl
   17cb4:	ldrdeq	r2, [r3], -r6
   17cb8:	andeq	r2, r3, r3, lsr #20
   17cbc:	andeq	r2, r3, lr, ror r9
   17cc0:	andeq	r2, r3, r7, asr #19
   17cc4:	andeq	r2, r3, sl, ror r9
   17cc8:	muleq	r3, ip, r9
   17ccc:			; <UNDEFINED> instruction: 0x000329ba
   17cd0:	ldrdeq	r2, [r3], -ip
   17cd4:	andeq	r2, r3, r0, asr #19
   17cd8:	andeq	r2, r3, r4, asr #9
   17cdc:	ldrdeq	r2, [r3], -r5
   17ce0:	andeq	r2, r3, r4, lsl #10
   17ce4:	ldrdeq	r2, [r3], -r7
   17ce8:	strdeq	r2, [r3], -r0
   17cec:	ldrdeq	r2, [r3], -r7
   17cf0:	strdeq	r2, [r3], -r1
   17cf4:	ldrdeq	r2, [r3], -r7
   17cf8:	strdeq	r2, [r3], -r1
   17cfc:	strdeq	r2, [r3], -r5
   17d00:	andeq	r2, r3, r1, lsr #13
   17d04:	andeq	r2, r3, lr, ror #19
   17d08:	andeq	r2, r3, r7, lsl #20
   17d0c:	andeq	r2, r3, sp, lsl #20
   17d10:	andeq	r2, r3, sp, asr #13
   17d14:	andeq	r2, r3, ip, lsr #20
   17d18:	andeq	r2, r3, r4, asr #13
   17d1c:	andeq	r2, r3, lr, lsr sl
   17d20:	andeq	r2, r3, r1, lsr #15
   17d24:	andeq	r2, r3, r9, asr sl
   17d28:	andeq	r2, r3, r5, lsl #20
   17d2c:	andeq	r2, r3, r4, ror sl
   17d30:	andeq	r2, r3, r5, asr #20
   17d34:	andeq	r2, r3, r7, ror #20
   17d38:	andeq	r2, r3, r5, lsl #21
   17d3c:	andeq	r0, r3, r5, asr #17
   17d40:	andeq	r0, r3, fp, ror r6
   17d44:	andeq	r2, r3, r6, asr #21
   17d48:			; <UNDEFINED> instruction: 0x000306bb
   17d4c:	andeq	r2, r3, r4, ror #21
   17d50:	andeq	r2, r3, sp, asr #17
   17d54:	sub	sp, sp, #8
   17d58:	str	r0, [sp, #4]
   17d5c:	strb	r1, [sp, #3]
   17d60:	ldrb	r0, [sp, #3]
   17d64:	ldr	r1, [sp, #4]
   17d68:	strb	r0, [r1, #25]
   17d6c:	add	sp, sp, #8
   17d70:	bx	lr
   17d74:	push	{fp, lr}
   17d78:	mov	fp, sp
   17d7c:	sub	sp, sp, #8
   17d80:	str	r0, [sp, #4]
   17d84:	ldr	r0, [sp, #4]
   17d88:	movw	r1, #2
   17d8c:	and	r1, r1, #255	; 0xff
   17d90:	bl	17d54 <main@@Base+0x1408>
   17d94:	ldr	r0, [sp, #4]
   17d98:	movw	r1, #1
   17d9c:	bl	17db4 <main@@Base+0x1468>
   17da0:	ldr	r0, [sp, #4]
   17da4:	movw	r1, #0
   17da8:	bl	17df0 <main@@Base+0x14a4>
   17dac:	mov	sp, fp
   17db0:	pop	{fp, pc}
   17db4:	sub	sp, sp, #8
   17db8:	str	r0, [sp, #4]
   17dbc:	str	r1, [sp]
   17dc0:	ldr	r0, [sp]
   17dc4:	cmp	r0, #0
   17dc8:	movw	r0, #0
   17dcc:	movne	r0, #1
   17dd0:	mvn	r1, #0
   17dd4:	eor	r0, r0, r1
   17dd8:	eor	r0, r0, r1
   17ddc:	and	r0, r0, #1
   17de0:	ldr	r1, [sp, #4]
   17de4:	strb	r0, [r1, #26]
   17de8:	add	sp, sp, #8
   17dec:	bx	lr
   17df0:	sub	sp, sp, #8
   17df4:	str	r0, [sp, #4]
   17df8:	str	r1, [sp]
   17dfc:	ldr	r0, [sp]
   17e00:	cmp	r0, #0
   17e04:	movw	r0, #0
   17e08:	movne	r0, #1
   17e0c:	mvn	r1, #0
   17e10:	eor	r0, r0, r1
   17e14:	eor	r0, r0, r1
   17e18:	and	r0, r0, #1
   17e1c:	ldr	r1, [sp, #4]
   17e20:	strb	r0, [r1, #27]
   17e24:	add	sp, sp, #8
   17e28:	bx	lr
   17e2c:	nop	{0}
   17e30:	push	{fp, lr}
   17e34:	mov	fp, sp
   17e38:	sub	sp, sp, #192	; 0xc0
   17e3c:	str	r0, [fp, #-8]
   17e40:	str	r1, [fp, #-12]
   17e44:	str	r2, [fp, #-16]
   17e48:	str	r3, [fp, #-20]	; 0xffffffec
   17e4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17e50:	movw	r1, #0
   17e54:	str	r1, [r0]
   17e58:	ldr	r0, [fp, #-8]
   17e5c:	ldr	r0, [r0]
   17e60:	movw	r1, #36	; 0x24
   17e64:	bl	2c618 <flatcc_builder_start_table@@Base>
   17e68:	cmp	r0, #0
   17e6c:	beq	17e74 <main@@Base+0x1528>
   17e70:	b	1b7d4 <main@@Base+0x4e88>
   17e74:	ldr	r0, [fp, #-16]
   17e78:	ldr	r1, [fp, #-8]
   17e7c:	ldr	r2, [fp, #-12]
   17e80:	ldr	r3, [fp, #-16]
   17e84:	str	r0, [sp, #36]	; 0x24
   17e88:	mov	r0, r1
   17e8c:	mov	r1, r2
   17e90:	mov	r2, r3
   17e94:	movw	r3, #1
   17e98:	sub	ip, fp, #52	; 0x34
   17e9c:	str	ip, [sp]
   17ea0:	bl	371ec <flatcc_json_parser_prepare_unions@@Base>
   17ea4:	ldr	r1, [sp, #36]	; 0x24
   17ea8:	cmp	r1, r0
   17eac:	bne	17eb4 <main@@Base+0x1568>
   17eb0:	b	1b7d4 <main@@Base+0x4e88>
   17eb4:	ldr	r0, [fp, #-8]
   17eb8:	ldr	r1, [fp, #-12]
   17ebc:	ldr	r2, [fp, #-16]
   17ec0:	sub	r3, fp, #24
   17ec4:	bl	1c7d0 <main@@Base+0x5e84>
   17ec8:	str	r0, [fp, #-12]
   17ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ed0:	cmp	r0, #0
   17ed4:	beq	1b73c <main@@Base+0x4df0>
   17ed8:	ldr	r0, [fp, #-8]
   17edc:	ldr	r1, [fp, #-12]
   17ee0:	ldr	r2, [fp, #-16]
   17ee4:	bl	1c8b4 <main@@Base+0x5f68>
   17ee8:	str	r0, [fp, #-12]
   17eec:	ldr	r0, [fp, #-12]
   17ef0:	ldr	r1, [fp, #-16]
   17ef4:	bl	1c960 <main@@Base+0x6014>
   17ef8:	str	r1, [fp, #-44]	; 0xffffffd4
   17efc:	str	r0, [fp, #-48]	; 0xffffffd0
   17f00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17f04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17f08:	movw	r2, #29280	; 0x7260
   17f0c:	movt	r2, #24946	; 0x6172
   17f10:	subs	r0, r2, r0
   17f14:	movw	r2, #29556	; 0x7374
   17f18:	movt	r2, #29797	; 0x7465
   17f1c:	sbcs	r1, r2, r1
   17f20:	bcc	190a4 <main@@Base+0x2758>
   17f24:	b	17f28 <main@@Base+0x15dc>
   17f28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17f2c:	movw	r1, #28004	; 0x6d64
   17f30:	movt	r1, #28257	; 0x6e61
   17f34:	cmp	r0, r1
   17f38:	bhi	18898 <main@@Base+0x1f4c>
   17f3c:	b	17f40 <main@@Base+0x15f4>
   17f40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17f44:	movw	r1, #25975	; 0x6577
   17f48:	movt	r1, #26220	; 0x666c
   17f4c:	cmp	r0, r1
   17f50:	bhi	18188 <main@@Base+0x183c>
   17f54:	b	17f58 <main@@Base+0x160c>
   17f58:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   17f5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17f60:	movw	r2, #25965	; 0x656d
   17f64:	movt	r2, #25966	; 0x656e
   17f68:	eor	r1, r1, r2
   17f6c:	eor	r0, r0, #121	; 0x79
   17f70:	orr	r0, r1, r0, lsl #24
   17f74:	cmp	r0, #0
   17f78:	bne	1801c <main@@Base+0x16d0>
   17f7c:	b	17f80 <main@@Base+0x1634>
   17f80:	ldr	r0, [fp, #-8]
   17f84:	ldr	r1, [fp, #-12]
   17f88:	str	r1, [fp, #-40]	; 0xffffffd8
   17f8c:	ldr	r2, [fp, #-16]
   17f90:	movw	r3, #5
   17f94:	bl	1c998 <main@@Base+0x604c>
   17f98:	str	r0, [fp, #-12]
   17f9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17fa0:	ldr	r1, [fp, #-12]
   17fa4:	cmp	r0, r1
   17fa8:	beq	18004 <main@@Base+0x16b8>
   17fac:	ldr	r0, [fp, #-8]
   17fb0:	ldr	r1, [fp, #-12]
   17fb4:	ldr	r2, [fp, #-16]
   17fb8:	sub	r3, fp, #32
   17fbc:	bl	17e30 <main@@Base+0x14e4>
   17fc0:	str	r0, [fp, #-12]
   17fc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17fc8:	cmp	r0, #0
   17fcc:	beq	17ff0 <main@@Base+0x16a4>
   17fd0:	ldr	r0, [fp, #-8]
   17fd4:	ldr	r0, [r0]
   17fd8:	movw	r1, #12
   17fdc:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   17fe0:	str	r0, [fp, #-36]	; 0xffffffdc
   17fe4:	movw	r1, #0
   17fe8:	cmp	r0, r1
   17fec:	bne	17ff4 <main@@Base+0x16a8>
   17ff0:	b	1b7d4 <main@@Base+0x4e88>
   17ff4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ff8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17ffc:	str	r0, [r1]
   18000:	b	18018 <main@@Base+0x16cc>
   18004:	ldr	r0, [fp, #-8]
   18008:	ldr	r1, [fp, #-12]
   1800c:	ldr	r2, [fp, #-16]
   18010:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18014:	str	r0, [fp, #-12]
   18018:	b	18184 <main@@Base+0x1838>
   1801c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   18020:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18024:	movw	r2, #27759	; 0x6c6f
   18028:	movt	r2, #25455	; 0x636f
   1802c:	eor	r1, r1, r2
   18030:	eor	r0, r0, #114	; 0x72
   18034:	orr	r0, r1, r0, lsl #24
   18038:	cmp	r0, #0
   1803c:	bne	1816c <main@@Base+0x1820>
   18040:	b	18044 <main@@Base+0x16f8>
   18044:	ldr	r0, [fp, #-8]
   18048:	ldr	r1, [fp, #-12]
   1804c:	str	r1, [fp, #-40]	; 0xffffffd8
   18050:	ldr	r2, [fp, #-16]
   18054:	movw	r3, #5
   18058:	bl	1c998 <main@@Base+0x604c>
   1805c:	str	r0, [fp, #-12]
   18060:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18064:	ldr	r1, [fp, #-12]
   18068:	cmp	r0, r1
   1806c:	beq	18154 <main@@Base+0x1808>
   18070:	movw	r0, #0
   18074:	strb	r0, [fp, #-53]	; 0xffffffcb
   18078:	ldr	r0, [fp, #-8]
   1807c:	ldr	r1, [fp, #-12]
   18080:	str	r1, [fp, #-40]	; 0xffffffd8
   18084:	ldr	r2, [fp, #-16]
   18088:	sub	r3, fp, #53	; 0x35
   1808c:	bl	1deb4 <main@@Base+0x7568>
   18090:	str	r0, [fp, #-12]
   18094:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18098:	ldr	r1, [fp, #-12]
   1809c:	cmp	r0, r1
   180a0:	bne	180f4 <main@@Base+0x17a8>
   180a4:	ldr	r0, [pc, #4084]	; 190a0 <main@@Base+0x2754>
   180a8:	add	r3, pc, r0
   180ac:	ldr	r0, [fp, #-8]
   180b0:	ldr	r1, [fp, #-12]
   180b4:	str	r1, [fp, #-40]	; 0xffffffd8
   180b8:	ldr	r2, [fp, #-16]
   180bc:	sub	ip, fp, #53	; 0x35
   180c0:	str	ip, [sp]
   180c4:	bl	1df90 <main@@Base+0x7644>
   180c8:	str	r0, [fp, #-12]
   180cc:	ldr	r0, [fp, #-12]
   180d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   180d4:	cmp	r0, r1
   180d8:	beq	180ec <main@@Base+0x17a0>
   180dc:	ldr	r0, [fp, #-12]
   180e0:	ldr	r1, [fp, #-16]
   180e4:	cmp	r0, r1
   180e8:	bne	180f0 <main@@Base+0x17a4>
   180ec:	b	1b7d4 <main@@Base+0x4e88>
   180f0:	b	180f4 <main@@Base+0x17a8>
   180f4:	ldrsb	r0, [fp, #-53]	; 0xffffffcb
   180f8:	cmp	r0, #8
   180fc:	bne	18114 <main@@Base+0x17c8>
   18100:	ldr	r0, [fp, #-8]
   18104:	ldr	r0, [r0, #8]
   18108:	and	r0, r0, #2
   1810c:	cmp	r0, #0
   18110:	beq	18150 <main@@Base+0x1804>
   18114:	ldr	r0, [fp, #-8]
   18118:	ldr	r0, [r0]
   1811c:	movw	r1, #6
   18120:	movw	r2, #1
   18124:	movw	r3, #1
   18128:	uxth	r3, r3
   1812c:	bl	2debc <flatcc_builder_table_add@@Base>
   18130:	str	r0, [fp, #-28]	; 0xffffffe4
   18134:	movw	r1, #0
   18138:	cmp	r0, r1
   1813c:	bne	18144 <main@@Base+0x17f8>
   18140:	b	1b7d4 <main@@Base+0x4e88>
   18144:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18148:	ldrsb	r1, [fp, #-53]	; 0xffffffcb
   1814c:	bl	1e174 <main@@Base+0x7828>
   18150:	b	18168 <main@@Base+0x181c>
   18154:	ldr	r0, [fp, #-8]
   18158:	ldr	r1, [fp, #-12]
   1815c:	ldr	r2, [fp, #-16]
   18160:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18164:	str	r0, [fp, #-12]
   18168:	b	18180 <main@@Base+0x1834>
   1816c:	ldr	r0, [fp, #-8]
   18170:	ldr	r1, [fp, #-12]
   18174:	ldr	r2, [fp, #-16]
   18178:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1817c:	str	r0, [fp, #-12]
   18180:	b	18184 <main@@Base+0x1838>
   18184:	b	18894 <main@@Base+0x1f48>
   18188:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1818c:	movw	r1, #65535	; 0xffff
   18190:	movt	r1, #26735	; 0x686f
   18194:	cmp	r0, r1
   18198:	bhi	18380 <main@@Base+0x1a34>
   1819c:	b	181a0 <main@@Base+0x1854>
   181a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   181a4:	movw	r1, #25976	; 0x6578
   181a8:	movt	r1, #26220	; 0x666c
   181ac:	teq	r0, r1
   181b0:	bne	18368 <main@@Base+0x1a1c>
   181b4:	b	181b8 <main@@Base+0x186c>
   181b8:	ldr	r0, [fp, #-8]
   181bc:	ldr	r1, [fp, #-12]
   181c0:	str	r1, [fp, #-40]	; 0xffffffd8
   181c4:	ldr	r2, [fp, #-16]
   181c8:	movw	r3, #4
   181cc:	bl	1c998 <main@@Base+0x604c>
   181d0:	str	r0, [fp, #-12]
   181d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   181d8:	ldr	r1, [fp, #-12]
   181dc:	cmp	r0, r1
   181e0:	beq	18350 <main@@Base+0x1a04>
   181e4:	ldr	r0, [fp, #-8]
   181e8:	ldr	r0, [r0]
   181ec:	movw	r1, #1
   181f0:	movw	r2, #1
   181f4:	uxth	r2, r2
   181f8:	mvn	r3, #0
   181fc:	bl	2c1a4 <flatcc_builder_start_vector@@Base>
   18200:	cmp	r0, #0
   18204:	beq	1820c <main@@Base+0x18c0>
   18208:	b	1b7d4 <main@@Base+0x4e88>
   1820c:	ldr	r0, [fp, #-8]
   18210:	ldr	r1, [fp, #-12]
   18214:	ldr	r2, [fp, #-16]
   18218:	sub	r3, fp, #24
   1821c:	bl	1e1a0 <main@@Base+0x7854>
   18220:	str	r0, [fp, #-12]
   18224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18228:	cmp	r0, #0
   1822c:	beq	18300 <main@@Base+0x19b4>
   18230:	movw	r0, #0
   18234:	strb	r0, [fp, #-54]	; 0xffffffca
   18238:	ldr	r0, [fp, #-8]
   1823c:	ldr	r0, [r0]
   18240:	movw	r1, #1
   18244:	bl	2b6a8 <flatcc_builder_extend_vector@@Base>
   18248:	str	r0, [fp, #-28]	; 0xffffffe4
   1824c:	movw	r1, #0
   18250:	cmp	r0, r1
   18254:	bne	1825c <main@@Base+0x1910>
   18258:	b	1b7d4 <main@@Base+0x4e88>
   1825c:	ldr	r0, [fp, #-8]
   18260:	ldr	r1, [fp, #-12]
   18264:	str	r1, [fp, #-40]	; 0xffffffd8
   18268:	ldr	r2, [fp, #-16]
   1826c:	sub	r3, fp, #54	; 0x36
   18270:	bl	1e284 <main@@Base+0x7938>
   18274:	str	r0, [fp, #-12]
   18278:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1827c:	ldr	r1, [fp, #-12]
   18280:	cmp	r0, r1
   18284:	bne	182d8 <main@@Base+0x198c>
   18288:	ldr	r0, [pc, #3976]	; 19218 <main@@Base+0x28cc>
   1828c:	add	r3, pc, r0
   18290:	ldr	r0, [fp, #-8]
   18294:	ldr	r1, [fp, #-12]
   18298:	str	r1, [fp, #-40]	; 0xffffffd8
   1829c:	ldr	r2, [fp, #-16]
   182a0:	sub	ip, fp, #54	; 0x36
   182a4:	str	ip, [sp]
   182a8:	bl	1e360 <main@@Base+0x7a14>
   182ac:	str	r0, [fp, #-12]
   182b0:	ldr	r0, [fp, #-12]
   182b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   182b8:	cmp	r0, r1
   182bc:	beq	182d0 <main@@Base+0x1984>
   182c0:	ldr	r0, [fp, #-12]
   182c4:	ldr	r1, [fp, #-16]
   182c8:	cmp	r0, r1
   182cc:	bne	182d4 <main@@Base+0x1988>
   182d0:	b	1b7d4 <main@@Base+0x4e88>
   182d4:	b	182d8 <main@@Base+0x198c>
   182d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   182dc:	ldrb	r1, [fp, #-54]	; 0xffffffca
   182e0:	bl	1e544 <main@@Base+0x7bf8>
   182e4:	ldr	r0, [fp, #-8]
   182e8:	ldr	r1, [fp, #-12]
   182ec:	ldr	r2, [fp, #-16]
   182f0:	sub	r3, fp, #24
   182f4:	bl	1e570 <main@@Base+0x7c24>
   182f8:	str	r0, [fp, #-12]
   182fc:	b	18224 <main@@Base+0x18d8>
   18300:	ldr	r0, [fp, #-8]
   18304:	ldr	r0, [r0]
   18308:	bl	2d684 <flatcc_builder_end_vector@@Base>
   1830c:	str	r0, [fp, #-32]	; 0xffffffe0
   18310:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18314:	cmp	r0, #0
   18318:	beq	1833c <main@@Base+0x19f0>
   1831c:	ldr	r0, [fp, #-8]
   18320:	ldr	r0, [r0]
   18324:	movw	r1, #30
   18328:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   1832c:	str	r0, [fp, #-36]	; 0xffffffdc
   18330:	movw	r1, #0
   18334:	cmp	r0, r1
   18338:	bne	18340 <main@@Base+0x19f4>
   1833c:	b	1b7d4 <main@@Base+0x4e88>
   18340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18344:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18348:	str	r0, [r1]
   1834c:	b	18364 <main@@Base+0x1a18>
   18350:	ldr	r0, [fp, #-8]
   18354:	ldr	r1, [fp, #-12]
   18358:	ldr	r2, [fp, #-16]
   1835c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18360:	str	r0, [fp, #-12]
   18364:	b	1837c <main@@Base+0x1a30>
   18368:	ldr	r0, [fp, #-8]
   1836c:	ldr	r1, [fp, #-12]
   18370:	ldr	r2, [fp, #-16]
   18374:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18378:	str	r0, [fp, #-12]
   1837c:	b	18890 <main@@Base+0x1f44>
   18380:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18384:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18388:	movw	r2, #28529	; 0x6f71
   1838c:	movt	r2, #28276	; 0x6e74
   18390:	subs	r0, r2, r0
   18394:	movw	r2, #30309	; 0x7665
   18398:	movt	r2, #26990	; 0x696e
   1839c:	sbcs	r1, r2, r1
   183a0:	bcc	18504 <main@@Base+0x1bb8>
   183a4:	b	183a8 <main@@Base+0x1a5c>
   183a8:	ldrh	r0, [fp, #-42]	; 0xffffffd6
   183ac:	movw	r1, #0
   183b0:	movt	r1, #26736	; 0x6870
   183b4:	teq	r1, r0, lsl #16
   183b8:	bne	184ec <main@@Base+0x1ba0>
   183bc:	b	183c0 <main@@Base+0x1a74>
   183c0:	ldr	r0, [fp, #-8]
   183c4:	ldr	r1, [fp, #-12]
   183c8:	str	r1, [fp, #-40]	; 0xffffffd8
   183cc:	ldr	r2, [fp, #-16]
   183d0:	movw	r3, #2
   183d4:	bl	1c998 <main@@Base+0x604c>
   183d8:	str	r0, [fp, #-12]
   183dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   183e0:	ldr	r1, [fp, #-12]
   183e4:	cmp	r0, r1
   183e8:	beq	184d4 <main@@Base+0x1b88>
   183ec:	movw	r0, #0
   183f0:	strh	r0, [fp, #-56]	; 0xffffffc8
   183f4:	ldr	r0, [fp, #-8]
   183f8:	ldr	r1, [fp, #-12]
   183fc:	str	r1, [fp, #-40]	; 0xffffffd8
   18400:	ldr	r2, [fp, #-16]
   18404:	sub	r3, fp, #56	; 0x38
   18408:	bl	1e6d4 <main@@Base+0x7d88>
   1840c:	str	r0, [fp, #-12]
   18410:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18414:	ldr	r1, [fp, #-12]
   18418:	cmp	r0, r1
   1841c:	bne	18470 <main@@Base+0x1b24>
   18420:	ldr	r0, [pc, #4052]	; 193fc <main@@Base+0x2ab0>
   18424:	add	r3, pc, r0
   18428:	ldr	r0, [fp, #-8]
   1842c:	ldr	r1, [fp, #-12]
   18430:	str	r1, [fp, #-40]	; 0xffffffd8
   18434:	ldr	r2, [fp, #-16]
   18438:	sub	ip, fp, #56	; 0x38
   1843c:	str	ip, [sp]
   18440:	bl	1e7b0 <main@@Base+0x7e64>
   18444:	str	r0, [fp, #-12]
   18448:	ldr	r0, [fp, #-12]
   1844c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18450:	cmp	r0, r1
   18454:	beq	18468 <main@@Base+0x1b1c>
   18458:	ldr	r0, [fp, #-12]
   1845c:	ldr	r1, [fp, #-16]
   18460:	cmp	r0, r1
   18464:	bne	1846c <main@@Base+0x1b20>
   18468:	b	1b7d4 <main@@Base+0x4e88>
   1846c:	b	18470 <main@@Base+0x1b24>
   18470:	ldrsh	r0, [fp, #-56]	; 0xffffffc8
   18474:	cmp	r0, #100	; 0x64
   18478:	bne	18490 <main@@Base+0x1b44>
   1847c:	ldr	r0, [fp, #-8]
   18480:	ldr	r0, [r0, #8]
   18484:	and	r0, r0, #2
   18488:	cmp	r0, #0
   1848c:	beq	184d0 <main@@Base+0x1b84>
   18490:	ldr	r0, [fp, #-8]
   18494:	ldr	r0, [r0]
   18498:	movw	r1, #2
   1849c:	str	r1, [sp, #32]
   184a0:	ldr	r2, [sp, #32]
   184a4:	movw	r3, #2
   184a8:	uxth	r3, r3
   184ac:	bl	2debc <flatcc_builder_table_add@@Base>
   184b0:	str	r0, [fp, #-28]	; 0xffffffe4
   184b4:	movw	r1, #0
   184b8:	cmp	r0, r1
   184bc:	bne	184c4 <main@@Base+0x1b78>
   184c0:	b	1b7d4 <main@@Base+0x4e88>
   184c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   184c8:	ldrsh	r1, [fp, #-56]	; 0xffffffc8
   184cc:	bl	1e994 <main@@Base+0x8048>
   184d0:	b	184e8 <main@@Base+0x1b9c>
   184d4:	ldr	r0, [fp, #-8]
   184d8:	ldr	r1, [fp, #-12]
   184dc:	ldr	r2, [fp, #-16]
   184e0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   184e4:	str	r0, [fp, #-12]
   184e8:	b	18500 <main@@Base+0x1bb4>
   184ec:	ldr	r0, [fp, #-8]
   184f0:	ldr	r1, [fp, #-12]
   184f4:	ldr	r2, [fp, #-16]
   184f8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   184fc:	str	r0, [fp, #-12]
   18500:	b	1888c <main@@Base+0x1f40>
   18504:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18508:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1850c:	movw	r2, #30309	; 0x7665
   18510:	movt	r2, #26990	; 0x696e
   18514:	eor	r1, r1, r2
   18518:	movw	r2, #28530	; 0x6f72
   1851c:	movt	r2, #28276	; 0x6e74
   18520:	eor	r0, r0, r2
   18524:	orr	r0, r0, r1
   18528:	cmp	r0, #0
   1852c:	bne	18730 <main@@Base+0x1de4>
   18530:	b	18534 <main@@Base+0x1be8>
   18534:	ldr	r0, [fp, #-12]
   18538:	add	r0, r0, #8
   1853c:	str	r0, [fp, #-12]
   18540:	ldr	r0, [fp, #-12]
   18544:	ldr	r1, [fp, #-16]
   18548:	bl	1c960 <main@@Base+0x6014>
   1854c:	str	r1, [fp, #-44]	; 0xffffffd4
   18550:	str	r0, [fp, #-48]	; 0xffffffd0
   18554:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   18558:	mov	r1, #2030043136	; 0x79000000
   1855c:	teq	r1, r0, lsl #24
   18560:	bne	18718 <main@@Base+0x1dcc>
   18564:	b	18568 <main@@Base+0x1c1c>
   18568:	ldr	r0, [fp, #-8]
   1856c:	ldr	r1, [fp, #-12]
   18570:	str	r1, [fp, #-40]	; 0xffffffd8
   18574:	ldr	r2, [fp, #-16]
   18578:	movw	r3, #1
   1857c:	bl	1c998 <main@@Base+0x604c>
   18580:	str	r0, [fp, #-12]
   18584:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18588:	ldr	r1, [fp, #-12]
   1858c:	cmp	r0, r1
   18590:	beq	18700 <main@@Base+0x1db4>
   18594:	ldr	r0, [fp, #-8]
   18598:	ldr	r0, [r0]
   1859c:	movw	r1, #1
   185a0:	movw	r2, #1
   185a4:	uxth	r2, r2
   185a8:	mvn	r3, #0
   185ac:	bl	2c1a4 <flatcc_builder_start_vector@@Base>
   185b0:	cmp	r0, #0
   185b4:	beq	185bc <main@@Base+0x1c70>
   185b8:	b	1b7d4 <main@@Base+0x4e88>
   185bc:	ldr	r0, [fp, #-8]
   185c0:	ldr	r1, [fp, #-12]
   185c4:	ldr	r2, [fp, #-16]
   185c8:	sub	r3, fp, #24
   185cc:	bl	1e1a0 <main@@Base+0x7854>
   185d0:	str	r0, [fp, #-12]
   185d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185d8:	cmp	r0, #0
   185dc:	beq	186b0 <main@@Base+0x1d64>
   185e0:	movw	r0, #0
   185e4:	strb	r0, [fp, #-57]	; 0xffffffc7
   185e8:	ldr	r0, [fp, #-8]
   185ec:	ldr	r0, [r0]
   185f0:	movw	r1, #1
   185f4:	bl	2b6a8 <flatcc_builder_extend_vector@@Base>
   185f8:	str	r0, [fp, #-28]	; 0xffffffe4
   185fc:	movw	r1, #0
   18600:	cmp	r0, r1
   18604:	bne	1860c <main@@Base+0x1cc0>
   18608:	b	1b7d4 <main@@Base+0x4e88>
   1860c:	ldr	r0, [fp, #-8]
   18610:	ldr	r1, [fp, #-12]
   18614:	str	r1, [fp, #-40]	; 0xffffffd8
   18618:	ldr	r2, [fp, #-16]
   1861c:	sub	r3, fp, #57	; 0x39
   18620:	bl	1e284 <main@@Base+0x7938>
   18624:	str	r0, [fp, #-12]
   18628:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1862c:	ldr	r1, [fp, #-12]
   18630:	cmp	r0, r1
   18634:	bne	18688 <main@@Base+0x1d3c>
   18638:	ldr	r0, [pc, #4080]	; 19630 <main@@Base+0x2ce4>
   1863c:	add	r3, pc, r0
   18640:	ldr	r0, [fp, #-8]
   18644:	ldr	r1, [fp, #-12]
   18648:	str	r1, [fp, #-40]	; 0xffffffd8
   1864c:	ldr	r2, [fp, #-16]
   18650:	sub	ip, fp, #57	; 0x39
   18654:	str	ip, [sp]
   18658:	bl	1e360 <main@@Base+0x7a14>
   1865c:	str	r0, [fp, #-12]
   18660:	ldr	r0, [fp, #-12]
   18664:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18668:	cmp	r0, r1
   1866c:	beq	18680 <main@@Base+0x1d34>
   18670:	ldr	r0, [fp, #-12]
   18674:	ldr	r1, [fp, #-16]
   18678:	cmp	r0, r1
   1867c:	bne	18684 <main@@Base+0x1d38>
   18680:	b	1b7d4 <main@@Base+0x4e88>
   18684:	b	18688 <main@@Base+0x1d3c>
   18688:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1868c:	ldrb	r1, [fp, #-57]	; 0xffffffc7
   18690:	bl	1e544 <main@@Base+0x7bf8>
   18694:	ldr	r0, [fp, #-8]
   18698:	ldr	r1, [fp, #-12]
   1869c:	ldr	r2, [fp, #-16]
   186a0:	sub	r3, fp, #24
   186a4:	bl	1e570 <main@@Base+0x7c24>
   186a8:	str	r0, [fp, #-12]
   186ac:	b	185d4 <main@@Base+0x1c88>
   186b0:	ldr	r0, [fp, #-8]
   186b4:	ldr	r0, [r0]
   186b8:	bl	2d684 <flatcc_builder_end_vector@@Base>
   186bc:	str	r0, [fp, #-32]	; 0xffffffe0
   186c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   186c4:	cmp	r0, #0
   186c8:	beq	186ec <main@@Base+0x1da0>
   186cc:	ldr	r0, [fp, #-8]
   186d0:	ldr	r0, [r0]
   186d4:	movw	r1, #5
   186d8:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   186dc:	str	r0, [fp, #-36]	; 0xffffffdc
   186e0:	movw	r1, #0
   186e4:	cmp	r0, r1
   186e8:	bne	186f0 <main@@Base+0x1da4>
   186ec:	b	1b7d4 <main@@Base+0x4e88>
   186f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   186f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   186f8:	str	r0, [r1]
   186fc:	b	18714 <main@@Base+0x1dc8>
   18700:	ldr	r0, [fp, #-8]
   18704:	ldr	r1, [fp, #-12]
   18708:	ldr	r2, [fp, #-16]
   1870c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18710:	str	r0, [fp, #-12]
   18714:	b	1872c <main@@Base+0x1de0>
   18718:	ldr	r0, [fp, #-8]
   1871c:	ldr	r1, [fp, #-12]
   18720:	ldr	r2, [fp, #-16]
   18724:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18728:	str	r0, [fp, #-12]
   1872c:	b	18888 <main@@Base+0x1f3c>
   18730:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18734:	movw	r1, #28257	; 0x6e61
   18738:	movt	r1, #28001	; 0x6d61
   1873c:	teq	r0, r1
   18740:	bne	18870 <main@@Base+0x1f24>
   18744:	b	18748 <main@@Base+0x1dfc>
   18748:	ldr	r0, [fp, #-8]
   1874c:	ldr	r1, [fp, #-12]
   18750:	str	r1, [fp, #-40]	; 0xffffffd8
   18754:	ldr	r2, [fp, #-16]
   18758:	movw	r3, #4
   1875c:	bl	1c998 <main@@Base+0x604c>
   18760:	str	r0, [fp, #-12]
   18764:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18768:	ldr	r1, [fp, #-12]
   1876c:	cmp	r0, r1
   18770:	beq	18858 <main@@Base+0x1f0c>
   18774:	movw	r0, #0
   18778:	strh	r0, [fp, #-60]	; 0xffffffc4
   1877c:	ldr	r0, [fp, #-8]
   18780:	ldr	r1, [fp, #-12]
   18784:	str	r1, [fp, #-40]	; 0xffffffd8
   18788:	ldr	r2, [fp, #-16]
   1878c:	sub	r3, fp, #60	; 0x3c
   18790:	bl	1e6d4 <main@@Base+0x7d88>
   18794:	str	r0, [fp, #-12]
   18798:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1879c:	ldr	r1, [fp, #-12]
   187a0:	cmp	r0, r1
   187a4:	bne	187f8 <main@@Base+0x1eac>
   187a8:	ldr	r0, [pc, #4056]	; 19788 <main@@Base+0x2e3c>
   187ac:	add	r3, pc, r0
   187b0:	ldr	r0, [fp, #-8]
   187b4:	ldr	r1, [fp, #-12]
   187b8:	str	r1, [fp, #-40]	; 0xffffffd8
   187bc:	ldr	r2, [fp, #-16]
   187c0:	sub	ip, fp, #60	; 0x3c
   187c4:	str	ip, [sp]
   187c8:	bl	1e7b0 <main@@Base+0x7e64>
   187cc:	str	r0, [fp, #-12]
   187d0:	ldr	r0, [fp, #-12]
   187d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   187d8:	cmp	r0, r1
   187dc:	beq	187f0 <main@@Base+0x1ea4>
   187e0:	ldr	r0, [fp, #-12]
   187e4:	ldr	r1, [fp, #-16]
   187e8:	cmp	r0, r1
   187ec:	bne	187f4 <main@@Base+0x1ea8>
   187f0:	b	1b7d4 <main@@Base+0x4e88>
   187f4:	b	187f8 <main@@Base+0x1eac>
   187f8:	ldrsh	r0, [fp, #-60]	; 0xffffffc4
   187fc:	cmp	r0, #150	; 0x96
   18800:	bne	18818 <main@@Base+0x1ecc>
   18804:	ldr	r0, [fp, #-8]
   18808:	ldr	r0, [r0, #8]
   1880c:	and	r0, r0, #2
   18810:	cmp	r0, #0
   18814:	beq	18854 <main@@Base+0x1f08>
   18818:	ldr	r0, [fp, #-8]
   1881c:	ldr	r0, [r0]
   18820:	movw	r1, #1
   18824:	movw	r2, #2
   18828:	movw	r3, #2
   1882c:	uxth	r3, r3
   18830:	bl	2debc <flatcc_builder_table_add@@Base>
   18834:	str	r0, [fp, #-28]	; 0xffffffe4
   18838:	movw	r1, #0
   1883c:	cmp	r0, r1
   18840:	bne	18848 <main@@Base+0x1efc>
   18844:	b	1b7d4 <main@@Base+0x4e88>
   18848:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1884c:	ldrsh	r1, [fp, #-60]	; 0xffffffc4
   18850:	bl	1e994 <main@@Base+0x8048>
   18854:	b	1886c <main@@Base+0x1f20>
   18858:	ldr	r0, [fp, #-8]
   1885c:	ldr	r1, [fp, #-12]
   18860:	ldr	r2, [fp, #-16]
   18864:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18868:	str	r0, [fp, #-12]
   1886c:	b	18884 <main@@Base+0x1f38>
   18870:	ldr	r0, [fp, #-8]
   18874:	ldr	r1, [fp, #-12]
   18878:	ldr	r2, [fp, #-16]
   1887c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18880:	str	r0, [fp, #-12]
   18884:	b	18888 <main@@Base+0x1f3c>
   18888:	b	1888c <main@@Base+0x1f40>
   1888c:	b	18890 <main@@Base+0x1f44>
   18890:	b	18894 <main@@Base+0x1f48>
   18894:	b	1909c <main@@Base+0x2750>
   18898:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1889c:	movw	r1, #29555	; 0x7373
   188a0:	movt	r1, #29797	; 0x7465
   188a4:	cmp	r0, r1
   188a8:	bhi	18c04 <main@@Base+0x22b8>
   188ac:	b	188b0 <main@@Base+0x1f64>
   188b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   188b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   188b8:	movw	r2, #24429	; 0x5f6d
   188bc:	movt	r2, #28276	; 0x6e74
   188c0:	subs	r0, r2, r0
   188c4:	movw	r2, #29285	; 0x7265
   188c8:	movt	r2, #28769	; 0x7061
   188cc:	sbcs	r1, r2, r1
   188d0:	bcc	189a4 <main@@Base+0x2058>
   188d4:	b	188d8 <main@@Base+0x1f8c>
   188d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   188dc:	movw	r1, #28005	; 0x6d65
   188e0:	movt	r1, #28257	; 0x6e61
   188e4:	teq	r0, r1
   188e8:	bne	1898c <main@@Base+0x2040>
   188ec:	b	188f0 <main@@Base+0x1fa4>
   188f0:	ldr	r0, [fp, #-8]
   188f4:	ldr	r1, [fp, #-12]
   188f8:	str	r1, [fp, #-40]	; 0xffffffd8
   188fc:	ldr	r2, [fp, #-16]
   18900:	movw	r3, #4
   18904:	bl	1c998 <main@@Base+0x604c>
   18908:	str	r0, [fp, #-12]
   1890c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18910:	ldr	r1, [fp, #-12]
   18914:	cmp	r0, r1
   18918:	beq	18974 <main@@Base+0x2028>
   1891c:	ldr	r0, [fp, #-8]
   18920:	ldr	r1, [fp, #-12]
   18924:	ldr	r2, [fp, #-16]
   18928:	sub	r3, fp, #32
   1892c:	bl	36fe4 <flatcc_json_parser_build_string@@Base>
   18930:	str	r0, [fp, #-12]
   18934:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18938:	cmp	r0, #0
   1893c:	beq	18960 <main@@Base+0x2014>
   18940:	ldr	r0, [fp, #-8]
   18944:	ldr	r0, [r0]
   18948:	movw	r1, #3
   1894c:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   18950:	str	r0, [fp, #-36]	; 0xffffffdc
   18954:	movw	r1, #0
   18958:	cmp	r0, r1
   1895c:	bne	18964 <main@@Base+0x2018>
   18960:	b	1b7d4 <main@@Base+0x4e88>
   18964:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18968:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1896c:	str	r0, [r1]
   18970:	b	18988 <main@@Base+0x203c>
   18974:	ldr	r0, [fp, #-8]
   18978:	ldr	r1, [fp, #-12]
   1897c:	ldr	r2, [fp, #-16]
   18980:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18984:	str	r0, [fp, #-12]
   18988:	b	189a0 <main@@Base+0x2054>
   1898c:	ldr	r0, [fp, #-8]
   18990:	ldr	r1, [fp, #-12]
   18994:	ldr	r2, [fp, #-16]
   18998:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1899c:	str	r0, [fp, #-12]
   189a0:	b	18c00 <main@@Base+0x22b4>
   189a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   189a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   189ac:	movw	r2, #29285	; 0x7265
   189b0:	movt	r2, #28769	; 0x7061
   189b4:	eor	r1, r1, r2
   189b8:	movw	r2, #24430	; 0x5f6e
   189bc:	movt	r2, #28276	; 0x6e74
   189c0:	eor	r0, r0, r2
   189c4:	orr	r0, r0, r1
   189c8:	cmp	r0, #0
   189cc:	bne	18b38 <main@@Base+0x21ec>
   189d0:	b	189d4 <main@@Base+0x2088>
   189d4:	ldr	r0, [fp, #-12]
   189d8:	add	r0, r0, #8
   189dc:	str	r0, [fp, #-12]
   189e0:	ldr	r0, [fp, #-12]
   189e4:	ldr	r1, [fp, #-16]
   189e8:	bl	1c960 <main@@Base+0x6014>
   189ec:	str	r1, [fp, #-44]	; 0xffffffd4
   189f0:	str	r0, [fp, #-48]	; 0xffffffd0
   189f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   189f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   189fc:	movw	r2, #25971	; 0x6573
   18a00:	movt	r2, #24941	; 0x616d
   18a04:	eor	r1, r1, r2
   18a08:	movw	r2, #25445	; 0x6365
   18a0c:	movt	r2, #28769	; 0x7061
   18a10:	eor	r0, r0, r2
   18a14:	orr	r0, r0, r1
   18a18:	cmp	r0, #0
   18a1c:	bne	18b20 <main@@Base+0x21d4>
   18a20:	b	18a24 <main@@Base+0x20d8>
   18a24:	ldr	r0, [fp, #-12]
   18a28:	add	r0, r0, #8
   18a2c:	str	r0, [fp, #-12]
   18a30:	ldr	r0, [fp, #-12]
   18a34:	ldr	r1, [fp, #-16]
   18a38:	bl	1c960 <main@@Base+0x6014>
   18a3c:	str	r1, [fp, #-44]	; 0xffffffd4
   18a40:	str	r0, [fp, #-48]	; 0xffffffd0
   18a44:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   18a48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18a4c:	movw	r2, #25971	; 0x6573
   18a50:	movt	r2, #24436	; 0x5f74
   18a54:	eor	r1, r1, r2
   18a58:	eor	r0, r0, #116	; 0x74
   18a5c:	orr	r0, r1, r0, lsl #24
   18a60:	cmp	r0, #0
   18a64:	bne	18b08 <main@@Base+0x21bc>
   18a68:	b	18a6c <main@@Base+0x2120>
   18a6c:	ldr	r0, [fp, #-8]
   18a70:	ldr	r1, [fp, #-12]
   18a74:	str	r1, [fp, #-40]	; 0xffffffd8
   18a78:	ldr	r2, [fp, #-16]
   18a7c:	movw	r3, #5
   18a80:	bl	1c998 <main@@Base+0x604c>
   18a84:	str	r0, [fp, #-12]
   18a88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a8c:	ldr	r1, [fp, #-12]
   18a90:	cmp	r0, r1
   18a94:	beq	18af0 <main@@Base+0x21a4>
   18a98:	ldr	r0, [fp, #-8]
   18a9c:	ldr	r1, [fp, #-12]
   18aa0:	ldr	r2, [fp, #-16]
   18aa4:	sub	r3, fp, #32
   18aa8:	bl	1e9c0 <main@@Base+0x8074>
   18aac:	str	r0, [fp, #-12]
   18ab0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ab4:	cmp	r0, #0
   18ab8:	beq	18adc <main@@Base+0x2190>
   18abc:	ldr	r0, [fp, #-8]
   18ac0:	ldr	r0, [r0]
   18ac4:	movw	r1, #34	; 0x22
   18ac8:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   18acc:	str	r0, [fp, #-36]	; 0xffffffdc
   18ad0:	movw	r1, #0
   18ad4:	cmp	r0, r1
   18ad8:	bne	18ae0 <main@@Base+0x2194>
   18adc:	b	1b7d4 <main@@Base+0x4e88>
   18ae0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ae4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18ae8:	str	r0, [r1]
   18aec:	b	18b04 <main@@Base+0x21b8>
   18af0:	ldr	r0, [fp, #-8]
   18af4:	ldr	r1, [fp, #-12]
   18af8:	ldr	r2, [fp, #-16]
   18afc:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18b00:	str	r0, [fp, #-12]
   18b04:	b	18b1c <main@@Base+0x21d0>
   18b08:	ldr	r0, [fp, #-8]
   18b0c:	ldr	r1, [fp, #-12]
   18b10:	ldr	r2, [fp, #-16]
   18b14:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18b18:	str	r0, [fp, #-12]
   18b1c:	b	18b34 <main@@Base+0x21e8>
   18b20:	ldr	r0, [fp, #-8]
   18b24:	ldr	r1, [fp, #-12]
   18b28:	ldr	r2, [fp, #-16]
   18b2c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18b30:	str	r0, [fp, #-12]
   18b34:	b	18bfc <main@@Base+0x22b0>
   18b38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18b3c:	bic	r0, r0, #255	; 0xff
   18b40:	movw	r1, #29440	; 0x7300
   18b44:	movt	r1, #28783	; 0x706f
   18b48:	teq	r0, r1
   18b4c:	bne	18be4 <main@@Base+0x2298>
   18b50:	b	18b54 <main@@Base+0x2208>
   18b54:	ldr	r0, [fp, #-8]
   18b58:	ldr	r1, [fp, #-12]
   18b5c:	str	r1, [fp, #-40]	; 0xffffffd8
   18b60:	ldr	r2, [fp, #-16]
   18b64:	movw	r3, #3
   18b68:	bl	1c998 <main@@Base+0x604c>
   18b6c:	str	r0, [fp, #-12]
   18b70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18b74:	ldr	r1, [fp, #-12]
   18b78:	cmp	r0, r1
   18b7c:	beq	18bcc <main@@Base+0x2280>
   18b80:	ldr	r0, [fp, #-8]
   18b84:	ldr	r0, [r0]
   18b88:	movw	r1, #0
   18b8c:	movw	r2, #32
   18b90:	movw	r3, #16
   18b94:	uxth	r3, r3
   18b98:	bl	2debc <flatcc_builder_table_add@@Base>
   18b9c:	str	r0, [fp, #-28]	; 0xffffffe4
   18ba0:	movw	r1, #0
   18ba4:	cmp	r0, r1
   18ba8:	bne	18bb0 <main@@Base+0x2264>
   18bac:	b	1b7d4 <main@@Base+0x4e88>
   18bb0:	ldr	r0, [fp, #-8]
   18bb4:	ldr	r1, [fp, #-12]
   18bb8:	ldr	r2, [fp, #-16]
   18bbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18bc0:	bl	1ead0 <main@@Base+0x8184>
   18bc4:	str	r0, [fp, #-12]
   18bc8:	b	18be0 <main@@Base+0x2294>
   18bcc:	ldr	r0, [fp, #-8]
   18bd0:	ldr	r1, [fp, #-12]
   18bd4:	ldr	r2, [fp, #-16]
   18bd8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18bdc:	str	r0, [fp, #-12]
   18be0:	b	18bf8 <main@@Base+0x22ac>
   18be4:	ldr	r0, [fp, #-8]
   18be8:	ldr	r1, [fp, #-12]
   18bec:	ldr	r2, [fp, #-16]
   18bf0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   18bf4:	str	r0, [fp, #-12]
   18bf8:	b	18bfc <main@@Base+0x22b0>
   18bfc:	b	18c00 <main@@Base+0x22b4>
   18c00:	b	19098 <main@@Base+0x274c>
   18c04:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   18c08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18c0c:	movw	r2, #29556	; 0x7374
   18c10:	movt	r2, #29797	; 0x7465
   18c14:	eor	r1, r1, r2
   18c18:	eor	r0, r0, #52	; 0x34
   18c1c:	orr	r0, r1, r0, lsl #24
   18c20:	cmp	r0, #0
   18c24:	bne	18d54 <main@@Base+0x2408>
   18c28:	b	18c2c <main@@Base+0x22e0>
   18c2c:	ldr	r0, [fp, #-8]
   18c30:	ldr	r1, [fp, #-12]
   18c34:	str	r1, [fp, #-40]	; 0xffffffd8
   18c38:	ldr	r2, [fp, #-16]
   18c3c:	movw	r3, #5
   18c40:	bl	1c998 <main@@Base+0x604c>
   18c44:	str	r0, [fp, #-12]
   18c48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c4c:	ldr	r1, [fp, #-12]
   18c50:	cmp	r0, r1
   18c54:	beq	18d4c <main@@Base+0x2400>
   18c58:	ldr	r3, [pc, #4052]	; 19c34 <main@@Base+0x32e8>
   18c5c:	ldr	r0, [fp, #-8]
   18c60:	ldr	r0, [r0]
   18c64:	movw	r1, #4
   18c68:	movw	r2, #2
   18c6c:	uxth	r2, r2
   18c70:	bl	2c1a4 <flatcc_builder_start_vector@@Base>
   18c74:	cmp	r0, #0
   18c78:	beq	18c80 <main@@Base+0x2334>
   18c7c:	b	1b7d4 <main@@Base+0x4e88>
   18c80:	ldr	r0, [fp, #-8]
   18c84:	ldr	r1, [fp, #-12]
   18c88:	ldr	r2, [fp, #-16]
   18c8c:	sub	r3, fp, #24
   18c90:	bl	1e1a0 <main@@Base+0x7854>
   18c94:	str	r0, [fp, #-12]
   18c98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c9c:	cmp	r0, #0
   18ca0:	beq	18cfc <main@@Base+0x23b0>
   18ca4:	ldr	r0, [fp, #-8]
   18ca8:	ldr	r0, [r0]
   18cac:	movw	r1, #1
   18cb0:	bl	2b6a8 <flatcc_builder_extend_vector@@Base>
   18cb4:	str	r0, [fp, #-28]	; 0xffffffe4
   18cb8:	movw	r1, #0
   18cbc:	cmp	r0, r1
   18cc0:	bne	18cc8 <main@@Base+0x237c>
   18cc4:	b	1b7d4 <main@@Base+0x4e88>
   18cc8:	ldr	r0, [fp, #-8]
   18ccc:	ldr	r1, [fp, #-12]
   18cd0:	ldr	r2, [fp, #-16]
   18cd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18cd8:	bl	1f1ec <main@@Base+0x88a0>
   18cdc:	str	r0, [fp, #-12]
   18ce0:	ldr	r0, [fp, #-8]
   18ce4:	ldr	r1, [fp, #-12]
   18ce8:	ldr	r2, [fp, #-16]
   18cec:	sub	r3, fp, #24
   18cf0:	bl	1e570 <main@@Base+0x7c24>
   18cf4:	str	r0, [fp, #-12]
   18cf8:	b	18c98 <main@@Base+0x234c>
   18cfc:	ldr	r0, [fp, #-8]
   18d00:	ldr	r0, [r0]
   18d04:	bl	2d684 <flatcc_builder_end_vector@@Base>
   18d08:	str	r0, [fp, #-32]	; 0xffffffe0
   18d0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d10:	cmp	r0, #0
   18d14:	beq	18d38 <main@@Base+0x23ec>
   18d18:	ldr	r0, [fp, #-8]
   18d1c:	ldr	r0, [r0]
   18d20:	movw	r1, #9
   18d24:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   18d28:	str	r0, [fp, #-36]	; 0xffffffdc
   18d2c:	movw	r1, #0
   18d30:	cmp	r0, r1
   18d34:	bne	18d3c <main@@Base+0x23f0>
   18d38:	b	1b7d4 <main@@Base+0x4e88>
   18d3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18d44:	str	r0, [r1]
   18d48:	b	18d50 <main@@Base+0x2404>
   18d4c:	b	18dfc <main@@Base+0x24b0>
   18d50:	b	18df8 <main@@Base+0x24ac>
   18d54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d58:	movw	r1, #29556	; 0x7374
   18d5c:	movt	r1, #29797	; 0x7465
   18d60:	teq	r0, r1
   18d64:	bne	18df0 <main@@Base+0x24a4>
   18d68:	b	18d6c <main@@Base+0x2420>
   18d6c:	ldr	r0, [fp, #-8]
   18d70:	ldr	r1, [fp, #-12]
   18d74:	str	r1, [fp, #-40]	; 0xffffffd8
   18d78:	ldr	r2, [fp, #-16]
   18d7c:	movw	r3, #4
   18d80:	bl	1c998 <main@@Base+0x604c>
   18d84:	str	r0, [fp, #-12]
   18d88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18d8c:	ldr	r1, [fp, #-12]
   18d90:	cmp	r0, r1
   18d94:	beq	18de8 <main@@Base+0x249c>
   18d98:	ldr	r0, [pc, #4024]	; 19d58 <main@@Base+0x340c>
   18d9c:	add	r0, pc, r0
   18da0:	ldr	r1, [fp, #-8]
   18da4:	ldr	r2, [fp, #-12]
   18da8:	ldr	r3, [fp, #-16]
   18dac:	ldr	ip, [fp, #-52]	; 0xffffffcc
   18db0:	str	r0, [sp, #28]
   18db4:	mov	r0, r1
   18db8:	mov	r1, r2
   18dbc:	mov	r2, r3
   18dc0:	movw	r3, #0
   18dc4:	movw	lr, #8
   18dc8:	uxth	lr, lr
   18dcc:	str	lr, [sp]
   18dd0:	str	ip, [sp, #4]
   18dd4:	ldr	ip, [sp, #28]
   18dd8:	str	ip, [sp, #8]
   18ddc:	bl	37310 <flatcc_json_parser_union@@Base>
   18de0:	str	r0, [fp, #-12]
   18de4:	b	18dec <main@@Base+0x24a0>
   18de8:	b	18dfc <main@@Base+0x24b0>
   18dec:	b	18df4 <main@@Base+0x24a8>
   18df0:	b	18dfc <main@@Base+0x24b0>
   18df4:	b	18df8 <main@@Base+0x24ac>
   18df8:	b	19094 <main@@Base+0x2748>
   18dfc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   18e00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18e04:	movw	r2, #29556	; 0x7374
   18e08:	movt	r2, #29797	; 0x7465
   18e0c:	eor	r1, r1, r2
   18e10:	eor	r0, r0, #53	; 0x35
   18e14:	orr	r0, r1, r0, lsl #24
   18e18:	cmp	r0, #0
   18e1c:	bne	18f4c <main@@Base+0x2600>
   18e20:	b	18e24 <main@@Base+0x24d8>
   18e24:	ldr	r0, [fp, #-8]
   18e28:	ldr	r1, [fp, #-12]
   18e2c:	str	r1, [fp, #-40]	; 0xffffffd8
   18e30:	ldr	r2, [fp, #-16]
   18e34:	movw	r3, #5
   18e38:	bl	1c998 <main@@Base+0x604c>
   18e3c:	str	r0, [fp, #-12]
   18e40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18e44:	ldr	r1, [fp, #-12]
   18e48:	cmp	r0, r1
   18e4c:	beq	18f44 <main@@Base+0x25f8>
   18e50:	ldr	r3, [pc, #3548]	; 19c34 <main@@Base+0x32e8>
   18e54:	ldr	r0, [fp, #-8]
   18e58:	ldr	r0, [r0]
   18e5c:	movw	r1, #4
   18e60:	movw	r2, #2
   18e64:	uxth	r2, r2
   18e68:	bl	2c1a4 <flatcc_builder_start_vector@@Base>
   18e6c:	cmp	r0, #0
   18e70:	beq	18e78 <main@@Base+0x252c>
   18e74:	b	1b7d4 <main@@Base+0x4e88>
   18e78:	ldr	r0, [fp, #-8]
   18e7c:	ldr	r1, [fp, #-12]
   18e80:	ldr	r2, [fp, #-16]
   18e84:	sub	r3, fp, #24
   18e88:	bl	1e1a0 <main@@Base+0x7854>
   18e8c:	str	r0, [fp, #-12]
   18e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e94:	cmp	r0, #0
   18e98:	beq	18ef4 <main@@Base+0x25a8>
   18e9c:	ldr	r0, [fp, #-8]
   18ea0:	ldr	r0, [r0]
   18ea4:	movw	r1, #1
   18ea8:	bl	2b6a8 <flatcc_builder_extend_vector@@Base>
   18eac:	str	r0, [fp, #-28]	; 0xffffffe4
   18eb0:	movw	r1, #0
   18eb4:	cmp	r0, r1
   18eb8:	bne	18ec0 <main@@Base+0x2574>
   18ebc:	b	1b7d4 <main@@Base+0x4e88>
   18ec0:	ldr	r0, [fp, #-8]
   18ec4:	ldr	r1, [fp, #-12]
   18ec8:	ldr	r2, [fp, #-16]
   18ecc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ed0:	bl	1f1ec <main@@Base+0x88a0>
   18ed4:	str	r0, [fp, #-12]
   18ed8:	ldr	r0, [fp, #-8]
   18edc:	ldr	r1, [fp, #-12]
   18ee0:	ldr	r2, [fp, #-16]
   18ee4:	sub	r3, fp, #24
   18ee8:	bl	1e570 <main@@Base+0x7c24>
   18eec:	str	r0, [fp, #-12]
   18ef0:	b	18e90 <main@@Base+0x2544>
   18ef4:	ldr	r0, [fp, #-8]
   18ef8:	ldr	r0, [r0]
   18efc:	bl	2d684 <flatcc_builder_end_vector@@Base>
   18f00:	str	r0, [fp, #-32]	; 0xffffffe0
   18f04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f08:	cmp	r0, #0
   18f0c:	beq	18f30 <main@@Base+0x25e4>
   18f10:	ldr	r0, [fp, #-8]
   18f14:	ldr	r0, [r0]
   18f18:	movw	r1, #31
   18f1c:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   18f20:	str	r0, [fp, #-36]	; 0xffffffdc
   18f24:	movw	r1, #0
   18f28:	cmp	r0, r1
   18f2c:	bne	18f34 <main@@Base+0x25e8>
   18f30:	b	1b7d4 <main@@Base+0x4e88>
   18f34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18f3c:	str	r0, [r1]
   18f40:	b	18f48 <main@@Base+0x25fc>
   18f44:	b	18f54 <main@@Base+0x2608>
   18f48:	b	18f50 <main@@Base+0x2604>
   18f4c:	b	18f54 <main@@Base+0x2608>
   18f50:	b	19090 <main@@Base+0x2744>
   18f54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18f58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18f5c:	movw	r2, #29556	; 0x7374
   18f60:	movt	r2, #29797	; 0x7465
   18f64:	eor	r1, r1, r2
   18f68:	movw	r2, #31088	; 0x7970
   18f6c:	movt	r2, #24436	; 0x5f74
   18f70:	eor	r0, r0, r2
   18f74:	orr	r0, r0, r1
   18f78:	cmp	r0, #0
   18f7c:	bne	19078 <main@@Base+0x272c>
   18f80:	b	18f84 <main@@Base+0x2638>
   18f84:	ldr	r0, [fp, #-12]
   18f88:	add	r0, r0, #8
   18f8c:	str	r0, [fp, #-12]
   18f90:	ldr	r0, [fp, #-12]
   18f94:	ldr	r1, [fp, #-16]
   18f98:	bl	1c960 <main@@Base+0x6014>
   18f9c:	str	r1, [fp, #-44]	; 0xffffffd4
   18fa0:	str	r0, [fp, #-48]	; 0xffffffd0
   18fa4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   18fa8:	mov	r1, #1694498816	; 0x65000000
   18fac:	teq	r1, r0, lsl #24
   18fb0:	bne	19060 <main@@Base+0x2714>
   18fb4:	b	18fb8 <main@@Base+0x266c>
   18fb8:	ldr	r0, [fp, #-8]
   18fbc:	ldr	r1, [fp, #-12]
   18fc0:	str	r1, [fp, #-40]	; 0xffffffd8
   18fc4:	ldr	r2, [fp, #-16]
   18fc8:	movw	r3, #1
   18fcc:	bl	1c998 <main@@Base+0x604c>
   18fd0:	str	r0, [fp, #-12]
   18fd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18fd8:	ldr	r1, [fp, #-12]
   18fdc:	cmp	r0, r1
   18fe0:	beq	19048 <main@@Base+0x26fc>
   18fe4:	ldr	r0, [pc, #4040]	; 19fb4 <main@@Base+0x3668>
   18fe8:	add	r0, pc, r0
   18fec:	ldr	r1, [pc, #4036]	; 19fb8 <main@@Base+0x366c>
   18ff0:	add	r1, pc, r1
   18ff4:	ldr	r2, [fp, #-8]
   18ff8:	ldr	r3, [fp, #-12]
   18ffc:	ldr	ip, [fp, #-16]
   19000:	ldr	lr, [fp, #-52]	; 0xffffffcc
   19004:	str	r0, [sp, #24]
   19008:	mov	r0, r2
   1900c:	str	r1, [sp, #20]
   19010:	mov	r1, r3
   19014:	mov	r2, ip
   19018:	movw	r3, #0
   1901c:	movw	ip, #8
   19020:	uxth	ip, ip
   19024:	str	ip, [sp]
   19028:	str	lr, [sp, #4]
   1902c:	ldr	ip, [sp, #24]
   19030:	str	ip, [sp, #8]
   19034:	ldr	lr, [sp, #20]
   19038:	str	lr, [sp, #12]
   1903c:	bl	374fc <flatcc_json_parser_union_type@@Base>
   19040:	str	r0, [fp, #-12]
   19044:	b	1905c <main@@Base+0x2710>
   19048:	ldr	r0, [fp, #-8]
   1904c:	ldr	r1, [fp, #-12]
   19050:	ldr	r2, [fp, #-16]
   19054:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19058:	str	r0, [fp, #-12]
   1905c:	b	19074 <main@@Base+0x2728>
   19060:	ldr	r0, [fp, #-8]
   19064:	ldr	r1, [fp, #-12]
   19068:	ldr	r2, [fp, #-16]
   1906c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19070:	str	r0, [fp, #-12]
   19074:	b	1908c <main@@Base+0x2740>
   19078:	ldr	r0, [fp, #-8]
   1907c:	ldr	r1, [fp, #-12]
   19080:	ldr	r2, [fp, #-16]
   19084:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19088:	str	r0, [fp, #-12]
   1908c:	b	19090 <main@@Base+0x2744>
   19090:	b	19094 <main@@Base+0x2748>
   19094:	b	19098 <main@@Base+0x274c>
   19098:	b	1909c <main@@Base+0x2750>
   1909c:	b	1b720 <main@@Base+0x4dd4>
   190a0:	ldrdeq	r6, [r4], -r8
   190a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   190a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   190ac:	movw	r2, #65535	; 0xffff
   190b0:	movt	r2, #26162	; 0x6632
   190b4:	subs	r0, r2, r0
   190b8:	movw	r2, #29556	; 0x7374
   190bc:	movt	r2, #29797	; 0x7465
   190c0:	sbcs	r1, r2, r1
   190c4:	bcc	1a118 <main@@Base+0x37cc>
   190c8:	b	190cc <main@@Base+0x2780>
   190cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   190d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   190d4:	movw	r2, #29556	; 0x7374
   190d8:	movt	r2, #29797	; 0x7465
   190dc:	eor	r1, r1, r2
   190e0:	movw	r2, #29281	; 0x7261
   190e4:	movt	r2, #24946	; 0x6172
   190e8:	eor	r0, r0, r2
   190ec:	orr	r0, r0, r1
   190f0:	cmp	r0, #0
   190f4:	bne	19a14 <main@@Base+0x30c8>
   190f8:	b	190fc <main@@Base+0x27b0>
   190fc:	ldr	r0, [fp, #-12]
   19100:	add	r0, r0, #8
   19104:	str	r0, [fp, #-12]
   19108:	ldr	r0, [fp, #-12]
   1910c:	ldr	r1, [fp, #-16]
   19110:	bl	1c960 <main@@Base+0x6014>
   19114:	str	r1, [fp, #-44]	; 0xffffffd4
   19118:	str	r0, [fp, #-48]	; 0xffffffd0
   1911c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19120:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19124:	movw	r2, #26989	; 0x696d
   19128:	movt	r2, #29810	; 0x7472
   1912c:	subs	r0, r2, r0
   19130:	movw	r2, #26227	; 0x6673
   19134:	movt	r2, #31087	; 0x796f
   19138:	sbcs	r1, r2, r1
   1913c:	bcc	19518 <main@@Base+0x2bcc>
   19140:	b	19144 <main@@Base+0x27f8>
   19144:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19148:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1914c:	movw	r2, #26210	; 0x6662
   19150:	movt	r2, #31087	; 0x796f
   19154:	eor	r1, r1, r2
   19158:	movw	r2, #27763	; 0x6c73
   1915c:	movt	r2, #28527	; 0x6f6f
   19160:	eor	r0, r0, r2
   19164:	orr	r0, r0, r1
   19168:	cmp	r0, #0
   1916c:	bne	19318 <main@@Base+0x29cc>
   19170:	b	19174 <main@@Base+0x2828>
   19174:	ldr	r0, [fp, #-8]
   19178:	ldr	r1, [fp, #-12]
   1917c:	str	r1, [fp, #-40]	; 0xffffffd8
   19180:	ldr	r2, [fp, #-16]
   19184:	movw	r3, #8
   19188:	bl	1c998 <main@@Base+0x604c>
   1918c:	str	r0, [fp, #-12]
   19190:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19194:	ldr	r1, [fp, #-12]
   19198:	cmp	r0, r1
   1919c:	beq	19310 <main@@Base+0x29c4>
   191a0:	ldr	r0, [fp, #-8]
   191a4:	ldr	r0, [r0]
   191a8:	movw	r1, #1
   191ac:	movw	r2, #1
   191b0:	uxth	r2, r2
   191b4:	mvn	r3, #0
   191b8:	bl	2c1a4 <flatcc_builder_start_vector@@Base>
   191bc:	cmp	r0, #0
   191c0:	beq	191c8 <main@@Base+0x287c>
   191c4:	b	1b7d4 <main@@Base+0x4e88>
   191c8:	ldr	r0, [fp, #-8]
   191cc:	ldr	r1, [fp, #-12]
   191d0:	ldr	r2, [fp, #-16]
   191d4:	sub	r3, fp, #24
   191d8:	bl	1e1a0 <main@@Base+0x7854>
   191dc:	str	r0, [fp, #-12]
   191e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191e4:	cmp	r0, #0
   191e8:	beq	192c0 <main@@Base+0x2974>
   191ec:	movw	r0, #0
   191f0:	strb	r0, [fp, #-61]	; 0xffffffc3
   191f4:	ldr	r0, [fp, #-8]
   191f8:	ldr	r0, [r0]
   191fc:	movw	r1, #1
   19200:	bl	2b6a8 <flatcc_builder_extend_vector@@Base>
   19204:	str	r0, [fp, #-28]	; 0xffffffe4
   19208:	movw	r1, #0
   1920c:	cmp	r0, r1
   19210:	bne	1921c <main@@Base+0x28d0>
   19214:	b	1b7d4 <main@@Base+0x4e88>
   19218:	andeq	r6, r4, r4, lsl #28
   1921c:	ldr	r0, [fp, #-8]
   19220:	ldr	r1, [fp, #-12]
   19224:	str	r1, [fp, #-40]	; 0xffffffd8
   19228:	ldr	r2, [fp, #-16]
   1922c:	sub	r3, fp, #61	; 0x3d
   19230:	bl	1fabc <main@@Base+0x9170>
   19234:	str	r0, [fp, #-12]
   19238:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1923c:	ldr	r1, [fp, #-12]
   19240:	cmp	r0, r1
   19244:	bne	19298 <main@@Base+0x294c>
   19248:	ldr	r0, [pc, #4044]	; 1a21c <main@@Base+0x38d0>
   1924c:	add	r3, pc, r0
   19250:	ldr	r0, [fp, #-8]
   19254:	ldr	r1, [fp, #-12]
   19258:	str	r1, [fp, #-40]	; 0xffffffd8
   1925c:	ldr	r2, [fp, #-16]
   19260:	sub	ip, fp, #61	; 0x3d
   19264:	str	ip, [sp]
   19268:	bl	1fbd8 <main@@Base+0x928c>
   1926c:	str	r0, [fp, #-12]
   19270:	ldr	r0, [fp, #-12]
   19274:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19278:	cmp	r0, r1
   1927c:	beq	19290 <main@@Base+0x2944>
   19280:	ldr	r0, [fp, #-12]
   19284:	ldr	r1, [fp, #-16]
   19288:	cmp	r0, r1
   1928c:	bne	19294 <main@@Base+0x2948>
   19290:	b	1b7d4 <main@@Base+0x4e88>
   19294:	b	19298 <main@@Base+0x294c>
   19298:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1929c:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   192a0:	bl	1fdbc <main@@Base+0x9470>
   192a4:	ldr	r0, [fp, #-8]
   192a8:	ldr	r1, [fp, #-12]
   192ac:	ldr	r2, [fp, #-16]
   192b0:	sub	r3, fp, #24
   192b4:	bl	1e570 <main@@Base+0x7c24>
   192b8:	str	r0, [fp, #-12]
   192bc:	b	191e0 <main@@Base+0x2894>
   192c0:	ldr	r0, [fp, #-8]
   192c4:	ldr	r0, [r0]
   192c8:	bl	2d684 <flatcc_builder_end_vector@@Base>
   192cc:	str	r0, [fp, #-32]	; 0xffffffe0
   192d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   192d4:	cmp	r0, #0
   192d8:	beq	192fc <main@@Base+0x29b0>
   192dc:	ldr	r0, [fp, #-8]
   192e0:	ldr	r0, [r0]
   192e4:	movw	r1, #24
   192e8:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   192ec:	str	r0, [fp, #-36]	; 0xffffffdc
   192f0:	movw	r1, #0
   192f4:	cmp	r0, r1
   192f8:	bne	19300 <main@@Base+0x29b4>
   192fc:	b	1b7d4 <main@@Base+0x4e88>
   19300:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19304:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19308:	str	r0, [r1]
   1930c:	b	19314 <main@@Base+0x29c8>
   19310:	b	19320 <main@@Base+0x29d4>
   19314:	b	1931c <main@@Base+0x29d0>
   19318:	b	19320 <main@@Base+0x29d4>
   1931c:	b	19514 <main@@Base+0x2bc8>
   19320:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19324:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19328:	movw	r2, #26227	; 0x6673
   1932c:	movt	r2, #31087	; 0x796f
   19330:	eor	r1, r1, r2
   19334:	movw	r2, #29797	; 0x7465
   19338:	movt	r2, #28530	; 0x6f72
   1933c:	eor	r0, r0, r2
   19340:	orr	r0, r0, r1
   19344:	cmp	r0, #0
   19348:	bne	194fc <main@@Base+0x2bb0>
   1934c:	b	19350 <main@@Base+0x2a04>
   19350:	ldr	r0, [fp, #-12]
   19354:	add	r0, r0, #8
   19358:	str	r0, [fp, #-12]
   1935c:	ldr	r0, [fp, #-12]
   19360:	ldr	r1, [fp, #-16]
   19364:	bl	1c960 <main@@Base+0x6014>
   19368:	str	r1, [fp, #-44]	; 0xffffffd4
   1936c:	str	r0, [fp, #-48]	; 0xffffffd0
   19370:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19374:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19378:	movw	r2, #29556	; 0x7374
   1937c:	movt	r2, #100	; 0x64
   19380:	eor	r2, r2, r1, lsr #8
   19384:	lsr	r0, r0, #8
   19388:	orr	r0, r0, r1, lsl #24
   1938c:	movw	r1, #25460	; 0x6374
   19390:	movt	r1, #29301	; 0x7275
   19394:	eor	r0, r0, r1
   19398:	orr	r0, r0, r2
   1939c:	cmp	r0, #0
   193a0:	bne	194e4 <main@@Base+0x2b98>
   193a4:	b	193a8 <main@@Base+0x2a5c>
   193a8:	ldr	r0, [fp, #-8]
   193ac:	ldr	r1, [fp, #-12]
   193b0:	str	r1, [fp, #-40]	; 0xffffffd8
   193b4:	ldr	r2, [fp, #-16]
   193b8:	movw	r3, #7
   193bc:	bl	1c998 <main@@Base+0x604c>
   193c0:	str	r0, [fp, #-12]
   193c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   193c8:	ldr	r1, [fp, #-12]
   193cc:	cmp	r0, r1
   193d0:	beq	194cc <main@@Base+0x2b80>
   193d4:	ldr	r3, [pc, #3980]	; 1a368 <main@@Base+0x3a1c>
   193d8:	ldr	r0, [fp, #-8]
   193dc:	ldr	r0, [r0]
   193e0:	movw	r1, #8
   193e4:	movw	r2, #4
   193e8:	uxth	r2, r2
   193ec:	bl	2c1a4 <flatcc_builder_start_vector@@Base>
   193f0:	cmp	r0, #0
   193f4:	beq	19400 <main@@Base+0x2ab4>
   193f8:	b	1b7d4 <main@@Base+0x4e88>
   193fc:	andeq	r6, r4, r8, ror ip
   19400:	ldr	r0, [fp, #-8]
   19404:	ldr	r1, [fp, #-12]
   19408:	ldr	r2, [fp, #-16]
   1940c:	sub	r3, fp, #24
   19410:	bl	1e1a0 <main@@Base+0x7854>
   19414:	str	r0, [fp, #-12]
   19418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1941c:	cmp	r0, #0
   19420:	beq	1947c <main@@Base+0x2b30>
   19424:	ldr	r0, [fp, #-8]
   19428:	ldr	r0, [r0]
   1942c:	movw	r1, #1
   19430:	bl	2b6a8 <flatcc_builder_extend_vector@@Base>
   19434:	str	r0, [fp, #-28]	; 0xffffffe4
   19438:	movw	r1, #0
   1943c:	cmp	r0, r1
   19440:	bne	19448 <main@@Base+0x2afc>
   19444:	b	1b7d4 <main@@Base+0x4e88>
   19448:	ldr	r0, [fp, #-8]
   1944c:	ldr	r1, [fp, #-12]
   19450:	ldr	r2, [fp, #-16]
   19454:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19458:	bl	1fde8 <main@@Base+0x949c>
   1945c:	str	r0, [fp, #-12]
   19460:	ldr	r0, [fp, #-8]
   19464:	ldr	r1, [fp, #-12]
   19468:	ldr	r2, [fp, #-16]
   1946c:	sub	r3, fp, #24
   19470:	bl	1e570 <main@@Base+0x7c24>
   19474:	str	r0, [fp, #-12]
   19478:	b	19418 <main@@Base+0x2acc>
   1947c:	ldr	r0, [fp, #-8]
   19480:	ldr	r0, [r0]
   19484:	bl	2d684 <flatcc_builder_end_vector@@Base>
   19488:	str	r0, [fp, #-32]	; 0xffffffe0
   1948c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19490:	cmp	r0, #0
   19494:	beq	194b8 <main@@Base+0x2b6c>
   19498:	ldr	r0, [fp, #-8]
   1949c:	ldr	r0, [r0]
   194a0:	movw	r1, #29
   194a4:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   194a8:	str	r0, [fp, #-36]	; 0xffffffdc
   194ac:	movw	r1, #0
   194b0:	cmp	r0, r1
   194b4:	bne	194bc <main@@Base+0x2b70>
   194b8:	b	1b7d4 <main@@Base+0x4e88>
   194bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   194c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   194c4:	str	r0, [r1]
   194c8:	b	194e0 <main@@Base+0x2b94>
   194cc:	ldr	r0, [fp, #-8]
   194d0:	ldr	r1, [fp, #-12]
   194d4:	ldr	r2, [fp, #-16]
   194d8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   194dc:	str	r0, [fp, #-12]
   194e0:	b	194f8 <main@@Base+0x2bac>
   194e4:	ldr	r0, [fp, #-8]
   194e8:	ldr	r1, [fp, #-12]
   194ec:	ldr	r2, [fp, #-16]
   194f0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   194f4:	str	r0, [fp, #-12]
   194f8:	b	19510 <main@@Base+0x2bc4>
   194fc:	ldr	r0, [fp, #-8]
   19500:	ldr	r1, [fp, #-12]
   19504:	ldr	r2, [fp, #-16]
   19508:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1950c:	str	r0, [fp, #-12]
   19510:	b	19514 <main@@Base+0x2bc8>
   19514:	b	19a10 <main@@Base+0x30c4>
   19518:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1951c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19520:	movw	r2, #26227	; 0x6673
   19524:	movt	r2, #31087	; 0x796f
   19528:	eor	r1, r1, r2
   1952c:	movw	r2, #26990	; 0x696e
   19530:	movt	r2, #29810	; 0x7472
   19534:	eor	r0, r0, r2
   19538:	orr	r0, r0, r1
   1953c:	cmp	r0, #0
   19540:	bne	19838 <main@@Base+0x2eec>
   19544:	b	19548 <main@@Base+0x2bfc>
   19548:	ldr	r0, [fp, #-12]
   1954c:	add	r0, r0, #8
   19550:	str	r0, [fp, #-12]
   19554:	ldr	r0, [fp, #-12]
   19558:	ldr	r1, [fp, #-16]
   1955c:	bl	1c960 <main@@Base+0x6014>
   19560:	str	r1, [fp, #-44]	; 0xffffffd4
   19564:	str	r0, [fp, #-48]	; 0xffffffd0
   19568:	ldrh	r0, [fp, #-42]	; 0xffffffd6
   1956c:	movw	r1, #0
   19570:	movt	r1, #26418	; 0x6732
   19574:	teq	r1, r0, lsl #16
   19578:	bne	196c4 <main@@Base+0x2d78>
   1957c:	b	19580 <main@@Base+0x2c34>
   19580:	ldr	r0, [fp, #-8]
   19584:	ldr	r1, [fp, #-12]
   19588:	str	r1, [fp, #-40]	; 0xffffffd8
   1958c:	ldr	r2, [fp, #-16]
   19590:	movw	r3, #2
   19594:	bl	1c998 <main@@Base+0x604c>
   19598:	str	r0, [fp, #-12]
   1959c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   195a0:	ldr	r1, [fp, #-12]
   195a4:	cmp	r0, r1
   195a8:	beq	196ac <main@@Base+0x2d60>
   195ac:	ldr	r0, [fp, #-8]
   195b0:	ldr	r0, [r0]
   195b4:	bl	2c284 <flatcc_builder_start_offset_vector@@Base>
   195b8:	cmp	r0, #0
   195bc:	beq	195c4 <main@@Base+0x2c78>
   195c0:	b	1b7d4 <main@@Base+0x4e88>
   195c4:	ldr	r0, [fp, #-8]
   195c8:	ldr	r1, [fp, #-12]
   195cc:	ldr	r2, [fp, #-16]
   195d0:	sub	r3, fp, #24
   195d4:	bl	1e1a0 <main@@Base+0x7854>
   195d8:	str	r0, [fp, #-12]
   195dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195e0:	cmp	r0, #0
   195e4:	beq	1965c <main@@Base+0x2d10>
   195e8:	ldr	r0, [fp, #-8]
   195ec:	ldr	r1, [fp, #-12]
   195f0:	ldr	r2, [fp, #-16]
   195f4:	sub	r3, fp, #32
   195f8:	bl	36fe4 <flatcc_json_parser_build_string@@Base>
   195fc:	str	r0, [fp, #-12]
   19600:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19604:	cmp	r0, #0
   19608:	beq	1962c <main@@Base+0x2ce0>
   1960c:	ldr	r0, [fp, #-8]
   19610:	ldr	r0, [r0]
   19614:	movw	r1, #1
   19618:	bl	2ba18 <flatcc_builder_extend_offset_vector@@Base>
   1961c:	str	r0, [fp, #-36]	; 0xffffffdc
   19620:	movw	r1, #0
   19624:	cmp	r0, r1
   19628:	bne	19634 <main@@Base+0x2ce8>
   1962c:	b	1b7d4 <main@@Base+0x4e88>
   19630:	andeq	r6, r4, ip, ror #20
   19634:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19638:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1963c:	str	r0, [r1]
   19640:	ldr	r0, [fp, #-8]
   19644:	ldr	r1, [fp, #-12]
   19648:	ldr	r2, [fp, #-16]
   1964c:	sub	r3, fp, #24
   19650:	bl	1e570 <main@@Base+0x7c24>
   19654:	str	r0, [fp, #-12]
   19658:	b	195dc <main@@Base+0x2c90>
   1965c:	ldr	r0, [fp, #-8]
   19660:	ldr	r0, [r0]
   19664:	bl	2c390 <flatcc_builder_end_offset_vector@@Base>
   19668:	str	r0, [fp, #-32]	; 0xffffffe0
   1966c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19670:	cmp	r0, #0
   19674:	beq	19698 <main@@Base+0x2d4c>
   19678:	ldr	r0, [fp, #-8]
   1967c:	ldr	r0, [r0]
   19680:	movw	r1, #28
   19684:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   19688:	str	r0, [fp, #-36]	; 0xffffffdc
   1968c:	movw	r1, #0
   19690:	cmp	r0, r1
   19694:	bne	1969c <main@@Base+0x2d50>
   19698:	b	1b7d4 <main@@Base+0x4e88>
   1969c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   196a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   196a4:	str	r0, [r1]
   196a8:	b	196c0 <main@@Base+0x2d74>
   196ac:	ldr	r0, [fp, #-8]
   196b0:	ldr	r1, [fp, #-12]
   196b4:	ldr	r2, [fp, #-16]
   196b8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   196bc:	str	r0, [fp, #-12]
   196c0:	b	19834 <main@@Base+0x2ee8>
   196c4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   196c8:	mov	r1, #1728053248	; 0x67000000
   196cc:	teq	r1, r0, lsl #24
   196d0:	bne	1981c <main@@Base+0x2ed0>
   196d4:	b	196d8 <main@@Base+0x2d8c>
   196d8:	ldr	r0, [fp, #-8]
   196dc:	ldr	r1, [fp, #-12]
   196e0:	str	r1, [fp, #-40]	; 0xffffffd8
   196e4:	ldr	r2, [fp, #-16]
   196e8:	movw	r3, #1
   196ec:	bl	1c998 <main@@Base+0x604c>
   196f0:	str	r0, [fp, #-12]
   196f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   196f8:	ldr	r1, [fp, #-12]
   196fc:	cmp	r0, r1
   19700:	beq	19804 <main@@Base+0x2eb8>
   19704:	ldr	r0, [fp, #-8]
   19708:	ldr	r0, [r0]
   1970c:	bl	2c284 <flatcc_builder_start_offset_vector@@Base>
   19710:	cmp	r0, #0
   19714:	beq	1971c <main@@Base+0x2dd0>
   19718:	b	1b7d4 <main@@Base+0x4e88>
   1971c:	ldr	r0, [fp, #-8]
   19720:	ldr	r1, [fp, #-12]
   19724:	ldr	r2, [fp, #-16]
   19728:	sub	r3, fp, #24
   1972c:	bl	1e1a0 <main@@Base+0x7854>
   19730:	str	r0, [fp, #-12]
   19734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19738:	cmp	r0, #0
   1973c:	beq	197b4 <main@@Base+0x2e68>
   19740:	ldr	r0, [fp, #-8]
   19744:	ldr	r1, [fp, #-12]
   19748:	ldr	r2, [fp, #-16]
   1974c:	sub	r3, fp, #32
   19750:	bl	36fe4 <flatcc_json_parser_build_string@@Base>
   19754:	str	r0, [fp, #-12]
   19758:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1975c:	cmp	r0, #0
   19760:	beq	19784 <main@@Base+0x2e38>
   19764:	ldr	r0, [fp, #-8]
   19768:	ldr	r0, [r0]
   1976c:	movw	r1, #1
   19770:	bl	2ba18 <flatcc_builder_extend_offset_vector@@Base>
   19774:	str	r0, [fp, #-36]	; 0xffffffdc
   19778:	movw	r1, #0
   1977c:	cmp	r0, r1
   19780:	bne	1978c <main@@Base+0x2e40>
   19784:	b	1b7d4 <main@@Base+0x4e88>
   19788:	andeq	r6, r4, r8, lsl #18
   1978c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19790:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19794:	str	r0, [r1]
   19798:	ldr	r0, [fp, #-8]
   1979c:	ldr	r1, [fp, #-12]
   197a0:	ldr	r2, [fp, #-16]
   197a4:	sub	r3, fp, #24
   197a8:	bl	1e570 <main@@Base+0x7c24>
   197ac:	str	r0, [fp, #-12]
   197b0:	b	19734 <main@@Base+0x2de8>
   197b4:	ldr	r0, [fp, #-8]
   197b8:	ldr	r0, [r0]
   197bc:	bl	2c390 <flatcc_builder_end_offset_vector@@Base>
   197c0:	str	r0, [fp, #-32]	; 0xffffffe0
   197c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   197c8:	cmp	r0, #0
   197cc:	beq	197f0 <main@@Base+0x2ea4>
   197d0:	ldr	r0, [fp, #-8]
   197d4:	ldr	r0, [r0]
   197d8:	movw	r1, #10
   197dc:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   197e0:	str	r0, [fp, #-36]	; 0xffffffdc
   197e4:	movw	r1, #0
   197e8:	cmp	r0, r1
   197ec:	bne	197f4 <main@@Base+0x2ea8>
   197f0:	b	1b7d4 <main@@Base+0x4e88>
   197f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   197f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   197fc:	str	r0, [r1]
   19800:	b	19818 <main@@Base+0x2ecc>
   19804:	ldr	r0, [fp, #-8]
   19808:	ldr	r1, [fp, #-12]
   1980c:	ldr	r2, [fp, #-16]
   19810:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19814:	str	r0, [fp, #-12]
   19818:	b	19830 <main@@Base+0x2ee4>
   1981c:	ldr	r0, [fp, #-8]
   19820:	ldr	r1, [fp, #-12]
   19824:	ldr	r2, [fp, #-16]
   19828:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1982c:	str	r0, [fp, #-12]
   19830:	b	19834 <main@@Base+0x2ee8>
   19834:	b	19a0c <main@@Base+0x30c0>
   19838:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1983c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19840:	movw	r2, #26228	; 0x6674
   19844:	movt	r2, #31087	; 0x796f
   19848:	eor	r1, r1, r2
   1984c:	movw	r2, #27749	; 0x6c65
   19850:	movt	r2, #24930	; 0x6162
   19854:	eor	r0, r0, r2
   19858:	orr	r0, r0, r1
   1985c:	cmp	r0, #0
   19860:	bne	199f4 <main@@Base+0x30a8>
   19864:	b	19868 <main@@Base+0x2f1c>
   19868:	ldr	r0, [fp, #-12]
   1986c:	add	r0, r0, #8
   19870:	str	r0, [fp, #-12]
   19874:	ldr	r0, [fp, #-12]
   19878:	ldr	r1, [fp, #-16]
   1987c:	bl	1c960 <main@@Base+0x6014>
   19880:	str	r1, [fp, #-44]	; 0xffffffd4
   19884:	str	r0, [fp, #-48]	; 0xffffffd0
   19888:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   1988c:	mov	r1, #1929379840	; 0x73000000
   19890:	teq	r1, r0, lsl #24
   19894:	bne	199dc <main@@Base+0x3090>
   19898:	b	1989c <main@@Base+0x2f50>
   1989c:	ldr	r0, [fp, #-8]
   198a0:	ldr	r1, [fp, #-12]
   198a4:	str	r1, [fp, #-40]	; 0xffffffd8
   198a8:	ldr	r2, [fp, #-16]
   198ac:	movw	r3, #1
   198b0:	bl	1c998 <main@@Base+0x604c>
   198b4:	str	r0, [fp, #-12]
   198b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   198bc:	ldr	r1, [fp, #-12]
   198c0:	cmp	r0, r1
   198c4:	beq	199c4 <main@@Base+0x3078>
   198c8:	ldr	r0, [fp, #-8]
   198cc:	ldr	r0, [r0]
   198d0:	bl	2c284 <flatcc_builder_start_offset_vector@@Base>
   198d4:	cmp	r0, #0
   198d8:	beq	198e0 <main@@Base+0x2f94>
   198dc:	b	1b7d4 <main@@Base+0x4e88>
   198e0:	ldr	r0, [fp, #-8]
   198e4:	ldr	r1, [fp, #-12]
   198e8:	ldr	r2, [fp, #-16]
   198ec:	sub	r3, fp, #24
   198f0:	bl	1e1a0 <main@@Base+0x7854>
   198f4:	str	r0, [fp, #-12]
   198f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198fc:	cmp	r0, #0
   19900:	beq	19974 <main@@Base+0x3028>
   19904:	ldr	r0, [fp, #-8]
   19908:	ldr	r1, [fp, #-12]
   1990c:	ldr	r2, [fp, #-16]
   19910:	sub	r3, fp, #32
   19914:	bl	17e30 <main@@Base+0x14e4>
   19918:	str	r0, [fp, #-12]
   1991c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19920:	cmp	r0, #0
   19924:	beq	19948 <main@@Base+0x2ffc>
   19928:	ldr	r0, [fp, #-8]
   1992c:	ldr	r0, [r0]
   19930:	movw	r1, #1
   19934:	bl	2ba18 <flatcc_builder_extend_offset_vector@@Base>
   19938:	str	r0, [fp, #-36]	; 0xffffffdc
   1993c:	movw	r1, #0
   19940:	cmp	r0, r1
   19944:	bne	1994c <main@@Base+0x3000>
   19948:	b	1b7d4 <main@@Base+0x4e88>
   1994c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19950:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19954:	str	r0, [r1]
   19958:	ldr	r0, [fp, #-8]
   1995c:	ldr	r1, [fp, #-12]
   19960:	ldr	r2, [fp, #-16]
   19964:	sub	r3, fp, #24
   19968:	bl	1e570 <main@@Base+0x7c24>
   1996c:	str	r0, [fp, #-12]
   19970:	b	198f8 <main@@Base+0x2fac>
   19974:	ldr	r0, [fp, #-8]
   19978:	ldr	r0, [r0]
   1997c:	bl	2c390 <flatcc_builder_end_offset_vector@@Base>
   19980:	str	r0, [fp, #-32]	; 0xffffffe0
   19984:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19988:	cmp	r0, #0
   1998c:	beq	199b0 <main@@Base+0x3064>
   19990:	ldr	r0, [fp, #-8]
   19994:	ldr	r0, [r0]
   19998:	movw	r1, #11
   1999c:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   199a0:	str	r0, [fp, #-36]	; 0xffffffdc
   199a4:	movw	r1, #0
   199a8:	cmp	r0, r1
   199ac:	bne	199b4 <main@@Base+0x3068>
   199b0:	b	1b7d4 <main@@Base+0x4e88>
   199b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   199b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   199bc:	str	r0, [r1]
   199c0:	b	199d8 <main@@Base+0x308c>
   199c4:	ldr	r0, [fp, #-8]
   199c8:	ldr	r1, [fp, #-12]
   199cc:	ldr	r2, [fp, #-16]
   199d0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   199d4:	str	r0, [fp, #-12]
   199d8:	b	199f0 <main@@Base+0x30a4>
   199dc:	ldr	r0, [fp, #-8]
   199e0:	ldr	r1, [fp, #-12]
   199e4:	ldr	r2, [fp, #-16]
   199e8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   199ec:	str	r0, [fp, #-12]
   199f0:	b	19a08 <main@@Base+0x30bc>
   199f4:	ldr	r0, [fp, #-8]
   199f8:	ldr	r1, [fp, #-12]
   199fc:	ldr	r2, [fp, #-16]
   19a00:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19a04:	str	r0, [fp, #-12]
   19a08:	b	19a0c <main@@Base+0x30c0>
   19a0c:	b	19a10 <main@@Base+0x30c4>
   19a10:	b	1a114 <main@@Base+0x37c8>
   19a14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19a18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a1c:	movw	r2, #28787	; 0x7073
   19a20:	movt	r2, #25965	; 0x656d
   19a24:	subs	r0, r2, r0
   19a28:	movw	r2, #29556	; 0x7374
   19a2c:	movt	r2, #29797	; 0x7465
   19a30:	sbcs	r1, r2, r1
   19a34:	bcc	19cd0 <main@@Base+0x3384>
   19a38:	b	19a3c <main@@Base+0x30f0>
   19a3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19a40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a44:	movw	r2, #29556	; 0x7374
   19a48:	movt	r2, #29797	; 0x7465
   19a4c:	eor	r1, r1, r2
   19a50:	movw	r2, #29541	; 0x7365
   19a54:	movt	r2, #25185	; 0x6261
   19a58:	eor	r0, r0, r2
   19a5c:	orr	r0, r0, r1
   19a60:	cmp	r0, #0
   19a64:	bne	19b58 <main@@Base+0x320c>
   19a68:	b	19a6c <main@@Base+0x3120>
   19a6c:	ldr	r0, [fp, #-12]
   19a70:	add	r0, r0, #8
   19a74:	str	r0, [fp, #-12]
   19a78:	ldr	r0, [fp, #-12]
   19a7c:	ldr	r1, [fp, #-16]
   19a80:	bl	1c960 <main@@Base+0x6014>
   19a84:	str	r1, [fp, #-44]	; 0xffffffd4
   19a88:	str	r0, [fp, #-48]	; 0xffffffd0
   19a8c:	ldrh	r0, [fp, #-42]	; 0xffffffd6
   19a90:	movw	r1, #0
   19a94:	movt	r1, #13876	; 0x3634
   19a98:	teq	r1, r0, lsl #16
   19a9c:	bne	19b40 <main@@Base+0x31f4>
   19aa0:	b	19aa4 <main@@Base+0x3158>
   19aa4:	ldr	r0, [fp, #-8]
   19aa8:	ldr	r1, [fp, #-12]
   19aac:	str	r1, [fp, #-40]	; 0xffffffd8
   19ab0:	ldr	r2, [fp, #-16]
   19ab4:	movw	r3, #2
   19ab8:	bl	1c998 <main@@Base+0x604c>
   19abc:	str	r0, [fp, #-12]
   19ac0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19ac4:	ldr	r1, [fp, #-12]
   19ac8:	cmp	r0, r1
   19acc:	beq	19b28 <main@@Base+0x31dc>
   19ad0:	ldr	r0, [fp, #-8]
   19ad4:	ldr	r1, [fp, #-12]
   19ad8:	ldr	r2, [fp, #-16]
   19adc:	sub	r3, fp, #32
   19ae0:	bl	200cc <main@@Base+0x9780>
   19ae4:	str	r0, [fp, #-12]
   19ae8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19aec:	cmp	r0, #0
   19af0:	beq	19b14 <main@@Base+0x31c8>
   19af4:	ldr	r0, [fp, #-8]
   19af8:	ldr	r0, [r0]
   19afc:	movw	r1, #35	; 0x23
   19b00:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   19b04:	str	r0, [fp, #-36]	; 0xffffffdc
   19b08:	movw	r1, #0
   19b0c:	cmp	r0, r1
   19b10:	bne	19b18 <main@@Base+0x31cc>
   19b14:	b	1b7d4 <main@@Base+0x4e88>
   19b18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19b20:	str	r0, [r1]
   19b24:	b	19b3c <main@@Base+0x31f0>
   19b28:	ldr	r0, [fp, #-8]
   19b2c:	ldr	r1, [fp, #-12]
   19b30:	ldr	r2, [fp, #-16]
   19b34:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19b38:	str	r0, [fp, #-12]
   19b3c:	b	19b54 <main@@Base+0x3208>
   19b40:	ldr	r0, [fp, #-8]
   19b44:	ldr	r1, [fp, #-12]
   19b48:	ldr	r2, [fp, #-16]
   19b4c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19b50:	str	r0, [fp, #-12]
   19b54:	b	19ccc <main@@Base+0x3380>
   19b58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19b5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19b60:	movw	r2, #29556	; 0x7374
   19b64:	movt	r2, #29797	; 0x7465
   19b68:	eor	r1, r1, r2
   19b6c:	movw	r2, #28524	; 0x6f6c
   19b70:	movt	r2, #25199	; 0x626f
   19b74:	eor	r0, r0, r2
   19b78:	orr	r0, r0, r1
   19b7c:	cmp	r0, #0
   19b80:	bne	19cb4 <main@@Base+0x3368>
   19b84:	b	19b88 <main@@Base+0x323c>
   19b88:	ldr	r0, [fp, #-8]
   19b8c:	ldr	r1, [fp, #-12]
   19b90:	str	r1, [fp, #-40]	; 0xffffffd8
   19b94:	ldr	r2, [fp, #-16]
   19b98:	movw	r3, #8
   19b9c:	bl	1c998 <main@@Base+0x604c>
   19ba0:	str	r0, [fp, #-12]
   19ba4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19ba8:	ldr	r1, [fp, #-12]
   19bac:	cmp	r0, r1
   19bb0:	beq	19c9c <main@@Base+0x3350>
   19bb4:	movw	r0, #0
   19bb8:	strb	r0, [fp, #-62]	; 0xffffffc2
   19bbc:	ldr	r0, [fp, #-8]
   19bc0:	ldr	r1, [fp, #-12]
   19bc4:	str	r1, [fp, #-40]	; 0xffffffd8
   19bc8:	ldr	r2, [fp, #-16]
   19bcc:	sub	r3, fp, #62	; 0x3e
   19bd0:	bl	1fabc <main@@Base+0x9170>
   19bd4:	str	r0, [fp, #-12]
   19bd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19bdc:	ldr	r1, [fp, #-12]
   19be0:	cmp	r0, r1
   19be4:	bne	19c3c <main@@Base+0x32f0>
   19be8:	ldr	r0, [pc, #4064]	; 1abd0 <main@@Base+0x4284>
   19bec:	add	r3, pc, r0
   19bf0:	ldr	r0, [fp, #-8]
   19bf4:	ldr	r1, [fp, #-12]
   19bf8:	str	r1, [fp, #-40]	; 0xffffffd8
   19bfc:	ldr	r2, [fp, #-16]
   19c00:	sub	ip, fp, #62	; 0x3e
   19c04:	str	ip, [sp]
   19c08:	bl	1fbd8 <main@@Base+0x928c>
   19c0c:	str	r0, [fp, #-12]
   19c10:	ldr	r0, [fp, #-12]
   19c14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19c18:	cmp	r0, r1
   19c1c:	beq	19c30 <main@@Base+0x32e4>
   19c20:	ldr	r0, [fp, #-12]
   19c24:	ldr	r1, [fp, #-16]
   19c28:	cmp	r0, r1
   19c2c:	bne	19c38 <main@@Base+0x32ec>
   19c30:	b	1b7d4 <main@@Base+0x4e88>
   19c34:	svccc	0x00ffffff
   19c38:	b	19c3c <main@@Base+0x32f0>
   19c3c:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   19c40:	cmp	r0, #1
   19c44:	bne	19c5c <main@@Base+0x3310>
   19c48:	ldr	r0, [fp, #-8]
   19c4c:	ldr	r0, [r0, #8]
   19c50:	and	r0, r0, #2
   19c54:	cmp	r0, #0
   19c58:	beq	19c98 <main@@Base+0x334c>
   19c5c:	ldr	r0, [fp, #-8]
   19c60:	ldr	r0, [r0]
   19c64:	movw	r1, #15
   19c68:	movw	r2, #1
   19c6c:	movw	r3, #1
   19c70:	uxth	r3, r3
   19c74:	bl	2debc <flatcc_builder_table_add@@Base>
   19c78:	str	r0, [fp, #-28]	; 0xffffffe4
   19c7c:	movw	r1, #0
   19c80:	cmp	r0, r1
   19c84:	bne	19c8c <main@@Base+0x3340>
   19c88:	b	1b7d4 <main@@Base+0x4e88>
   19c8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19c90:	ldrb	r1, [fp, #-62]	; 0xffffffc2
   19c94:	bl	1fdbc <main@@Base+0x9470>
   19c98:	b	19cb0 <main@@Base+0x3364>
   19c9c:	ldr	r0, [fp, #-8]
   19ca0:	ldr	r1, [fp, #-12]
   19ca4:	ldr	r2, [fp, #-16]
   19ca8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19cac:	str	r0, [fp, #-12]
   19cb0:	b	19cc8 <main@@Base+0x337c>
   19cb4:	ldr	r0, [fp, #-8]
   19cb8:	ldr	r1, [fp, #-12]
   19cbc:	ldr	r2, [fp, #-16]
   19cc0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19cc4:	str	r0, [fp, #-12]
   19cc8:	b	19ccc <main@@Base+0x3380>
   19ccc:	b	1a110 <main@@Base+0x37c4>
   19cd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19cd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19cd8:	mvn	r2, #-1711276032	; 0x9a000000
   19cdc:	subs	r0, r2, r0
   19ce0:	movw	r2, #29556	; 0x7374
   19ce4:	movt	r2, #29797	; 0x7465
   19ce8:	sbcs	r1, r2, r1
   19cec:	bcc	19e28 <main@@Base+0x34dc>
   19cf0:	b	19cf4 <main@@Base+0x33a8>
   19cf4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19cf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19cfc:	movw	r2, #29556	; 0x7374
   19d00:	movt	r2, #29797	; 0x7465
   19d04:	eor	r1, r1, r2
   19d08:	movw	r2, #28788	; 0x7074
   19d0c:	movt	r2, #25965	; 0x656d
   19d10:	eor	r0, r0, r2
   19d14:	orr	r0, r0, r1
   19d18:	cmp	r0, #0
   19d1c:	bne	19e10 <main@@Base+0x34c4>
   19d20:	b	19d24 <main@@Base+0x33d8>
   19d24:	ldr	r0, [fp, #-12]
   19d28:	add	r0, r0, #8
   19d2c:	str	r0, [fp, #-12]
   19d30:	ldr	r0, [fp, #-12]
   19d34:	ldr	r1, [fp, #-16]
   19d38:	bl	1c960 <main@@Base+0x6014>
   19d3c:	str	r1, [fp, #-44]	; 0xffffffd4
   19d40:	str	r0, [fp, #-48]	; 0xffffffd0
   19d44:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   19d48:	mov	r1, #2030043136	; 0x79000000
   19d4c:	teq	r1, r0, lsl #24
   19d50:	bne	19df8 <main@@Base+0x34ac>
   19d54:	b	19d5c <main@@Base+0x3410>
   19d58:	andeq	r6, r0, ip, lsl #14
   19d5c:	ldr	r0, [fp, #-8]
   19d60:	ldr	r1, [fp, #-12]
   19d64:	str	r1, [fp, #-40]	; 0xffffffd8
   19d68:	ldr	r2, [fp, #-16]
   19d6c:	movw	r3, #1
   19d70:	bl	1c998 <main@@Base+0x604c>
   19d74:	str	r0, [fp, #-12]
   19d78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19d7c:	ldr	r1, [fp, #-12]
   19d80:	cmp	r0, r1
   19d84:	beq	19de0 <main@@Base+0x3494>
   19d88:	ldr	r0, [fp, #-8]
   19d8c:	ldr	r1, [fp, #-12]
   19d90:	ldr	r2, [fp, #-16]
   19d94:	sub	r3, fp, #32
   19d98:	bl	204a4 <main@@Base+0x9b58>
   19d9c:	str	r0, [fp, #-12]
   19da0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19da4:	cmp	r0, #0
   19da8:	beq	19dcc <main@@Base+0x3480>
   19dac:	ldr	r0, [fp, #-8]
   19db0:	ldr	r0, [r0]
   19db4:	movw	r1, #14
   19db8:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   19dbc:	str	r0, [fp, #-36]	; 0xffffffdc
   19dc0:	movw	r1, #0
   19dc4:	cmp	r0, r1
   19dc8:	bne	19dd0 <main@@Base+0x3484>
   19dcc:	b	1b7d4 <main@@Base+0x4e88>
   19dd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19dd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19dd8:	str	r0, [r1]
   19ddc:	b	19df4 <main@@Base+0x34a8>
   19de0:	ldr	r0, [fp, #-8]
   19de4:	ldr	r1, [fp, #-12]
   19de8:	ldr	r2, [fp, #-16]
   19dec:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19df0:	str	r0, [fp, #-12]
   19df4:	b	19e0c <main@@Base+0x34c0>
   19df8:	ldr	r0, [fp, #-8]
   19dfc:	ldr	r1, [fp, #-12]
   19e00:	ldr	r2, [fp, #-16]
   19e04:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19e08:	str	r0, [fp, #-12]
   19e0c:	b	19e24 <main@@Base+0x34d8>
   19e10:	ldr	r0, [fp, #-8]
   19e14:	ldr	r1, [fp, #-12]
   19e18:	ldr	r2, [fp, #-16]
   19e1c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19e20:	str	r0, [fp, #-12]
   19e24:	b	1a10c <main@@Base+0x37c0>
   19e28:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   19e2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19e30:	movw	r2, #29797	; 0x7465
   19e34:	eor	r2, r2, r1, lsr #16
   19e38:	orr	r0, r0, r1, lsl #16
   19e3c:	movw	r1, #26162	; 0x6632
   19e40:	movt	r1, #29556	; 0x7374
   19e44:	eor	r0, r0, r1
   19e48:	orr	r0, r0, r2
   19e4c:	cmp	r0, #0
   19e50:	bne	19f8c <main@@Base+0x3640>
   19e54:	b	19e58 <main@@Base+0x350c>
   19e58:	ldr	r0, [fp, #-8]
   19e5c:	ldr	r1, [fp, #-12]
   19e60:	str	r1, [fp, #-40]	; 0xffffffd8
   19e64:	ldr	r2, [fp, #-16]
   19e68:	movw	r3, #6
   19e6c:	bl	1c998 <main@@Base+0x604c>
   19e70:	str	r0, [fp, #-12]
   19e74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19e78:	ldr	r1, [fp, #-12]
   19e7c:	cmp	r0, r1
   19e80:	beq	19f74 <main@@Base+0x3628>
   19e84:	vldr	s0, [pc, #1008]	; 1a27c <main@@Base+0x3930>
   19e88:	vstr	s0, [fp, #-68]	; 0xffffffbc
   19e8c:	ldr	r0, [fp, #-8]
   19e90:	ldr	r1, [fp, #-12]
   19e94:	str	r1, [fp, #-40]	; 0xffffffd8
   19e98:	ldr	r2, [fp, #-16]
   19e9c:	sub	r3, fp, #68	; 0x44
   19ea0:	bl	35ac0 <flatcc_json_parser_float@@Base>
   19ea4:	str	r0, [fp, #-12]
   19ea8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19eac:	ldr	r1, [fp, #-12]
   19eb0:	cmp	r0, r1
   19eb4:	bne	19f08 <main@@Base+0x35bc>
   19eb8:	ldr	r0, [pc, #4084]	; 1aeb4 <main@@Base+0x4568>
   19ebc:	add	r3, pc, r0
   19ec0:	ldr	r0, [fp, #-8]
   19ec4:	ldr	r1, [fp, #-12]
   19ec8:	str	r1, [fp, #-40]	; 0xffffffd8
   19ecc:	ldr	r2, [fp, #-16]
   19ed0:	sub	ip, fp, #68	; 0x44
   19ed4:	str	ip, [sp]
   19ed8:	bl	20968 <main@@Base+0xa01c>
   19edc:	str	r0, [fp, #-12]
   19ee0:	ldr	r0, [fp, #-12]
   19ee4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19ee8:	cmp	r0, r1
   19eec:	beq	19f00 <main@@Base+0x35b4>
   19ef0:	ldr	r0, [fp, #-12]
   19ef4:	ldr	r1, [fp, #-16]
   19ef8:	cmp	r0, r1
   19efc:	bne	19f04 <main@@Base+0x35b8>
   19f00:	b	1b7d4 <main@@Base+0x4e88>
   19f04:	b	19f08 <main@@Base+0x35bc>
   19f08:	vldr	s0, [fp, #-68]	; 0xffffffbc
   19f0c:	vcvt.f64.f32	d16, s0
   19f10:	vmov.f64	d17, #8	; 0x40400000  3.0
   19f14:	vcmp.f64	d16, d17
   19f18:	vmrs	APSR_nzcv, fpscr
   19f1c:	bne	19f34 <main@@Base+0x35e8>
   19f20:	ldr	r0, [fp, #-8]
   19f24:	ldr	r0, [r0, #8]
   19f28:	and	r0, r0, #2
   19f2c:	cmp	r0, #0
   19f30:	beq	19f70 <main@@Base+0x3624>
   19f34:	ldr	r0, [fp, #-8]
   19f38:	ldr	r0, [r0]
   19f3c:	movw	r1, #26
   19f40:	movw	r2, #4
   19f44:	movw	r3, #4
   19f48:	uxth	r3, r3
   19f4c:	bl	2debc <flatcc_builder_table_add@@Base>
   19f50:	str	r0, [fp, #-28]	; 0xffffffe4
   19f54:	movw	r1, #0
   19f58:	cmp	r0, r1
   19f5c:	bne	19f64 <main@@Base+0x3618>
   19f60:	b	1b7d4 <main@@Base+0x4e88>
   19f64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19f68:	vldr	s0, [fp, #-68]	; 0xffffffbc
   19f6c:	bl	20b50 <main@@Base+0xa204>
   19f70:	b	19f88 <main@@Base+0x363c>
   19f74:	ldr	r0, [fp, #-8]
   19f78:	ldr	r1, [fp, #-12]
   19f7c:	ldr	r2, [fp, #-16]
   19f80:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   19f84:	str	r0, [fp, #-12]
   19f88:	b	1a108 <main@@Base+0x37bc>
   19f8c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   19f90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19f94:	movw	r2, #29556	; 0x7374
   19f98:	movt	r2, #29797	; 0x7465
   19f9c:	eor	r1, r1, r2
   19fa0:	eor	r0, r0, #102	; 0x66
   19fa4:	orr	r0, r1, r0, lsl #24
   19fa8:	cmp	r0, #0
   19fac:	bne	1a0f0 <main@@Base+0x37a4>
   19fb0:	b	19fbc <main@@Base+0x3670>
   19fb4:	ldrdeq	r6, [r4], -r8
   19fb8:			; <UNDEFINED> instruction: 0x000064b8
   19fbc:	ldr	r0, [fp, #-8]
   19fc0:	ldr	r1, [fp, #-12]
   19fc4:	str	r1, [fp, #-40]	; 0xffffffd8
   19fc8:	ldr	r2, [fp, #-16]
   19fcc:	movw	r3, #5
   19fd0:	bl	1c998 <main@@Base+0x604c>
   19fd4:	str	r0, [fp, #-12]
   19fd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19fdc:	ldr	r1, [fp, #-12]
   19fe0:	cmp	r0, r1
   19fe4:	beq	1a0d8 <main@@Base+0x378c>
   19fe8:	vldr	s0, [pc, #652]	; 1a27c <main@@Base+0x3930>
   19fec:	vstr	s0, [fp, #-72]	; 0xffffffb8
   19ff0:	ldr	r0, [fp, #-8]
   19ff4:	ldr	r1, [fp, #-12]
   19ff8:	str	r1, [fp, #-40]	; 0xffffffd8
   19ffc:	ldr	r2, [fp, #-16]
   1a000:	sub	r3, fp, #72	; 0x48
   1a004:	bl	35ac0 <flatcc_json_parser_float@@Base>
   1a008:	str	r0, [fp, #-12]
   1a00c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a010:	ldr	r1, [fp, #-12]
   1a014:	cmp	r0, r1
   1a018:	bne	1a06c <main@@Base+0x3720>
   1a01c:	ldr	r0, [pc, #4020]	; 1afd8 <main@@Base+0x468c>
   1a020:	add	r3, pc, r0
   1a024:	ldr	r0, [fp, #-8]
   1a028:	ldr	r1, [fp, #-12]
   1a02c:	str	r1, [fp, #-40]	; 0xffffffd8
   1a030:	ldr	r2, [fp, #-16]
   1a034:	sub	ip, fp, #72	; 0x48
   1a038:	str	ip, [sp]
   1a03c:	bl	20968 <main@@Base+0xa01c>
   1a040:	str	r0, [fp, #-12]
   1a044:	ldr	r0, [fp, #-12]
   1a048:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a04c:	cmp	r0, r1
   1a050:	beq	1a064 <main@@Base+0x3718>
   1a054:	ldr	r0, [fp, #-12]
   1a058:	ldr	r1, [fp, #-16]
   1a05c:	cmp	r0, r1
   1a060:	bne	1a068 <main@@Base+0x371c>
   1a064:	b	1b7d4 <main@@Base+0x4e88>
   1a068:	b	1a06c <main@@Base+0x3720>
   1a06c:	vldr	d16, [pc, #932]	; 1a418 <main@@Base+0x3acc>
   1a070:	vldr	s0, [fp, #-72]	; 0xffffffb8
   1a074:	vcvt.f64.f32	d17, s0
   1a078:	vcmp.f64	d17, d16
   1a07c:	vmrs	APSR_nzcv, fpscr
   1a080:	bne	1a098 <main@@Base+0x374c>
   1a084:	ldr	r0, [fp, #-8]
   1a088:	ldr	r0, [r0, #8]
   1a08c:	and	r0, r0, #2
   1a090:	cmp	r0, #0
   1a094:	beq	1a0d4 <main@@Base+0x3788>
   1a098:	ldr	r0, [fp, #-8]
   1a09c:	ldr	r0, [r0]
   1a0a0:	movw	r1, #25
   1a0a4:	movw	r2, #4
   1a0a8:	movw	r3, #4
   1a0ac:	uxth	r3, r3
   1a0b0:	bl	2debc <flatcc_builder_table_add@@Base>
   1a0b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a0b8:	movw	r1, #0
   1a0bc:	cmp	r0, r1
   1a0c0:	bne	1a0c8 <main@@Base+0x377c>
   1a0c4:	b	1b7d4 <main@@Base+0x4e88>
   1a0c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a0cc:	vldr	s0, [fp, #-72]	; 0xffffffb8
   1a0d0:	bl	20b50 <main@@Base+0xa204>
   1a0d4:	b	1a0ec <main@@Base+0x37a0>
   1a0d8:	ldr	r0, [fp, #-8]
   1a0dc:	ldr	r1, [fp, #-12]
   1a0e0:	ldr	r2, [fp, #-16]
   1a0e4:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1a0e8:	str	r0, [fp, #-12]
   1a0ec:	b	1a104 <main@@Base+0x37b8>
   1a0f0:	ldr	r0, [fp, #-8]
   1a0f4:	ldr	r1, [fp, #-12]
   1a0f8:	ldr	r2, [fp, #-16]
   1a0fc:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1a100:	str	r0, [fp, #-12]
   1a104:	b	1a108 <main@@Base+0x37bc>
   1a108:	b	1a10c <main@@Base+0x37c0>
   1a10c:	b	1a110 <main@@Base+0x37c4>
   1a110:	b	1a114 <main@@Base+0x37c8>
   1a114:	b	1b71c <main@@Base+0x4dd0>
   1a118:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a11c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a120:	movw	r2, #29543	; 0x7367
   1a124:	movt	r2, #26721	; 0x6861
   1a128:	subs	r0, r2, r0
   1a12c:	movw	r2, #29556	; 0x7374
   1a130:	movt	r2, #29797	; 0x7465
   1a134:	sbcs	r1, r2, r1
   1a138:	bcc	1a2c0 <main@@Base+0x3974>
   1a13c:	b	1a140 <main@@Base+0x37f4>
   1a140:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   1a144:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a148:	movw	r2, #29797	; 0x7465
   1a14c:	eor	r2, r2, r1, lsr #16
   1a150:	orr	r0, r0, r1, lsl #16
   1a154:	movw	r1, #26163	; 0x6633
   1a158:	movt	r1, #29556	; 0x7374
   1a15c:	eor	r0, r0, r1
   1a160:	orr	r0, r0, r2
   1a164:	cmp	r0, #0
   1a168:	bne	1a2a8 <main@@Base+0x395c>
   1a16c:	b	1a170 <main@@Base+0x3824>
   1a170:	ldr	r0, [fp, #-8]
   1a174:	ldr	r1, [fp, #-12]
   1a178:	str	r1, [fp, #-40]	; 0xffffffd8
   1a17c:	ldr	r2, [fp, #-16]
   1a180:	movw	r3, #6
   1a184:	bl	1c998 <main@@Base+0x604c>
   1a188:	str	r0, [fp, #-12]
   1a18c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a190:	ldr	r1, [fp, #-12]
   1a194:	cmp	r0, r1
   1a198:	beq	1a290 <main@@Base+0x3944>
   1a19c:	vldr	s0, [pc, #216]	; 1a27c <main@@Base+0x3930>
   1a1a0:	vstr	s0, [fp, #-76]	; 0xffffffb4
   1a1a4:	ldr	r0, [fp, #-8]
   1a1a8:	ldr	r1, [fp, #-12]
   1a1ac:	str	r1, [fp, #-40]	; 0xffffffd8
   1a1b0:	ldr	r2, [fp, #-16]
   1a1b4:	sub	r3, fp, #76	; 0x4c
   1a1b8:	bl	35ac0 <flatcc_json_parser_float@@Base>
   1a1bc:	str	r0, [fp, #-12]
   1a1c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a1c4:	ldr	r1, [fp, #-12]
   1a1c8:	cmp	r0, r1
   1a1cc:	bne	1a224 <main@@Base+0x38d8>
   1a1d0:	ldr	r0, [pc, #4052]	; 1b1ac <main@@Base+0x4860>
   1a1d4:	add	r3, pc, r0
   1a1d8:	ldr	r0, [fp, #-8]
   1a1dc:	ldr	r1, [fp, #-12]
   1a1e0:	str	r1, [fp, #-40]	; 0xffffffd8
   1a1e4:	ldr	r2, [fp, #-16]
   1a1e8:	sub	ip, fp, #76	; 0x4c
   1a1ec:	str	ip, [sp]
   1a1f0:	bl	20968 <main@@Base+0xa01c>
   1a1f4:	str	r0, [fp, #-12]
   1a1f8:	ldr	r0, [fp, #-12]
   1a1fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a200:	cmp	r0, r1
   1a204:	beq	1a218 <main@@Base+0x38cc>
   1a208:	ldr	r0, [fp, #-12]
   1a20c:	ldr	r1, [fp, #-16]
   1a210:	cmp	r0, r1
   1a214:	bne	1a220 <main@@Base+0x38d4>
   1a218:	b	1b7d4 <main@@Base+0x4e88>
   1a21c:	andeq	r5, r4, r4, lsl #29
   1a220:	b	1a224 <main@@Base+0x38d8>
   1a224:	vldr	s0, [fp, #-76]	; 0xffffffb4
   1a228:	vcvt.f64.f32	d16, s0
   1a22c:	vcmp.f64	d16, #0.0
   1a230:	vmrs	APSR_nzcv, fpscr
   1a234:	bne	1a24c <main@@Base+0x3900>
   1a238:	ldr	r0, [fp, #-8]
   1a23c:	ldr	r0, [r0, #8]
   1a240:	and	r0, r0, #2
   1a244:	cmp	r0, #0
   1a248:	beq	1a28c <main@@Base+0x3940>
   1a24c:	ldr	r0, [fp, #-8]
   1a250:	ldr	r0, [r0]
   1a254:	movw	r1, #27
   1a258:	movw	r2, #4
   1a25c:	movw	r3, #4
   1a260:	uxth	r3, r3
   1a264:	bl	2debc <flatcc_builder_table_add@@Base>
   1a268:	str	r0, [fp, #-28]	; 0xffffffe4
   1a26c:	movw	r1, #0
   1a270:	cmp	r0, r1
   1a274:	bne	1a280 <main@@Base+0x3934>
   1a278:	b	1b7d4 <main@@Base+0x4e88>
   1a27c:	andeq	r0, r0, r0
   1a280:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a284:	vldr	s0, [fp, #-76]	; 0xffffffb4
   1a288:	bl	20b50 <main@@Base+0xa204>
   1a28c:	b	1a2a4 <main@@Base+0x3958>
   1a290:	ldr	r0, [fp, #-8]
   1a294:	ldr	r1, [fp, #-12]
   1a298:	ldr	r2, [fp, #-16]
   1a29c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1a2a0:	str	r0, [fp, #-12]
   1a2a4:	b	1a2bc <main@@Base+0x3970>
   1a2a8:	ldr	r0, [fp, #-8]
   1a2ac:	ldr	r1, [fp, #-12]
   1a2b0:	ldr	r2, [fp, #-16]
   1a2b4:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1a2b8:	str	r0, [fp, #-12]
   1a2bc:	b	1b718 <main@@Base+0x4dcc>
   1a2c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a2c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2c8:	movw	r2, #29556	; 0x7374
   1a2cc:	movt	r2, #29797	; 0x7465
   1a2d0:	eor	r1, r1, r2
   1a2d4:	movw	r2, #29544	; 0x7368
   1a2d8:	movt	r2, #26721	; 0x6861
   1a2dc:	eor	r0, r0, r2
   1a2e0:	orr	r0, r0, r1
   1a2e4:	cmp	r0, #0
   1a2e8:	bne	1aef8 <main@@Base+0x45ac>
   1a2ec:	b	1a2f0 <main@@Base+0x39a4>
   1a2f0:	ldr	r0, [fp, #-12]
   1a2f4:	add	r0, r0, #8
   1a2f8:	str	r0, [fp, #-12]
   1a2fc:	ldr	r0, [fp, #-12]
   1a300:	ldr	r1, [fp, #-16]
   1a304:	bl	1c960 <main@@Base+0x6014>
   1a308:	str	r1, [fp, #-44]	; 0xffffffd4
   1a30c:	str	r0, [fp, #-48]	; 0xffffffd0
   1a310:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a314:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a318:	movw	r2, #30256	; 0x7630
   1a31c:	movt	r2, #26222	; 0x666e
   1a320:	subs	r0, r2, r0
   1a324:	movw	r2, #13407	; 0x345f
   1a328:	movt	r2, #29494	; 0x7336
   1a32c:	sbcs	r1, r2, r1
   1a330:	bcc	1a614 <main@@Base+0x3cc8>
   1a334:	b	1a338 <main@@Base+0x39ec>
   1a338:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a33c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a340:	movw	r2, #12895	; 0x325f
   1a344:	movt	r2, #29491	; 0x7333
   1a348:	eor	r1, r1, r2
   1a34c:	movw	r2, #30257	; 0x7631
   1a350:	movt	r2, #26222	; 0x666e
   1a354:	eor	r0, r0, r2
   1a358:	orr	r0, r0, r1
   1a35c:	cmp	r0, #0
   1a360:	bne	1a5fc <main@@Base+0x3cb0>
   1a364:	b	1a36c <main@@Base+0x3a20>
   1a368:	svcne	0x00ffffff
   1a36c:	ldr	r0, [fp, #-8]
   1a370:	ldr	r1, [fp, #-12]
   1a374:	str	r1, [fp, #-40]	; 0xffffffd8
   1a378:	ldr	r2, [fp, #-16]
   1a37c:	movw	r3, #8
   1a380:	bl	1c998 <main@@Base+0x604c>
   1a384:	str	r0, [fp, #-12]
   1a388:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a38c:	ldr	r1, [fp, #-12]
   1a390:	cmp	r0, r1
   1a394:	beq	1a484 <main@@Base+0x3b38>
   1a398:	movw	r0, #0
   1a39c:	str	r0, [fp, #-80]	; 0xffffffb0
   1a3a0:	ldr	r0, [fp, #-8]
   1a3a4:	ldr	r1, [fp, #-12]
   1a3a8:	str	r1, [fp, #-40]	; 0xffffffd8
   1a3ac:	ldr	r2, [fp, #-16]
   1a3b0:	sub	r3, fp, #80	; 0x50
   1a3b4:	bl	20b7c <main@@Base+0xa230>
   1a3b8:	str	r0, [fp, #-12]
   1a3bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a3c0:	ldr	r1, [fp, #-12]
   1a3c4:	cmp	r0, r1
   1a3c8:	bne	1a424 <main@@Base+0x3ad8>
   1a3cc:	ldr	r0, [pc, #4072]	; 1b3bc <main@@Base+0x4a70>
   1a3d0:	add	r3, pc, r0
   1a3d4:	ldr	r0, [fp, #-8]
   1a3d8:	ldr	r1, [fp, #-12]
   1a3dc:	str	r1, [fp, #-40]	; 0xffffffd8
   1a3e0:	ldr	r2, [fp, #-16]
   1a3e4:	sub	ip, fp, #80	; 0x50
   1a3e8:	str	ip, [sp]
   1a3ec:	bl	20c54 <main@@Base+0xa308>
   1a3f0:	str	r0, [fp, #-12]
   1a3f4:	ldr	r0, [fp, #-12]
   1a3f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a3fc:	cmp	r0, r1
   1a400:	beq	1a414 <main@@Base+0x3ac8>
   1a404:	ldr	r0, [fp, #-12]
   1a408:	ldr	r1, [fp, #-16]
   1a40c:	cmp	r0, r1
   1a410:	bne	1a420 <main@@Base+0x3ad4>
   1a414:	b	1b7d4 <main@@Base+0x4e88>
   1a418:	andeq	r0, r0, r0
   1a41c:			; <UNDEFINED> instruction: 0x41132cbc
   1a420:	b	1a424 <main@@Base+0x3ad8>
   1a424:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a428:	cmp	r0, #0
   1a42c:	bne	1a444 <main@@Base+0x3af8>
   1a430:	ldr	r0, [fp, #-8]
   1a434:	ldr	r0, [r0, #8]
   1a438:	and	r0, r0, #2
   1a43c:	cmp	r0, #0
   1a440:	beq	1a480 <main@@Base+0x3b34>
   1a444:	ldr	r0, [fp, #-8]
   1a448:	ldr	r0, [r0]
   1a44c:	movw	r1, #16
   1a450:	movw	r2, #4
   1a454:	movw	r3, #4
   1a458:	uxth	r3, r3
   1a45c:	bl	2debc <flatcc_builder_table_add@@Base>
   1a460:	str	r0, [fp, #-28]	; 0xffffffe4
   1a464:	movw	r1, #0
   1a468:	cmp	r0, r1
   1a46c:	bne	1a474 <main@@Base+0x3b28>
   1a470:	b	1b7d4 <main@@Base+0x4e88>
   1a474:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a478:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a47c:	bl	20e38 <main@@Base+0xa4ec>
   1a480:	b	1a5f8 <main@@Base+0x3cac>
   1a484:	ldr	r0, [fp, #-12]
   1a488:	add	r0, r0, #8
   1a48c:	str	r0, [fp, #-12]
   1a490:	ldr	r0, [fp, #-12]
   1a494:	ldr	r1, [fp, #-16]
   1a498:	bl	1c960 <main@@Base+0x6014>
   1a49c:	str	r1, [fp, #-44]	; 0xffffffd4
   1a4a0:	str	r0, [fp, #-48]	; 0xffffffd0
   1a4a4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   1a4a8:	mov	r1, #1627389952	; 0x61000000
   1a4ac:	teq	r1, r0, lsl #24
   1a4b0:	bne	1a5e0 <main@@Base+0x3c94>
   1a4b4:	b	1a4b8 <main@@Base+0x3b6c>
   1a4b8:	ldr	r0, [fp, #-8]
   1a4bc:	ldr	r1, [fp, #-12]
   1a4c0:	str	r1, [fp, #-40]	; 0xffffffd8
   1a4c4:	ldr	r2, [fp, #-16]
   1a4c8:	movw	r3, #1
   1a4cc:	bl	1c998 <main@@Base+0x604c>
   1a4d0:	str	r0, [fp, #-12]
   1a4d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a4d8:	ldr	r1, [fp, #-12]
   1a4dc:	cmp	r0, r1
   1a4e0:	beq	1a5c8 <main@@Base+0x3c7c>
   1a4e4:	movw	r0, #0
   1a4e8:	str	r0, [fp, #-84]	; 0xffffffac
   1a4ec:	ldr	r0, [fp, #-8]
   1a4f0:	ldr	r1, [fp, #-12]
   1a4f4:	str	r1, [fp, #-40]	; 0xffffffd8
   1a4f8:	ldr	r2, [fp, #-16]
   1a4fc:	sub	r3, fp, #84	; 0x54
   1a500:	bl	20b7c <main@@Base+0xa230>
   1a504:	str	r0, [fp, #-12]
   1a508:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a50c:	ldr	r1, [fp, #-12]
   1a510:	cmp	r0, r1
   1a514:	bne	1a568 <main@@Base+0x3c1c>
   1a518:	ldr	r0, [pc, #4092]	; 1b51c <main@@Base+0x4bd0>
   1a51c:	add	r3, pc, r0
   1a520:	ldr	r0, [fp, #-8]
   1a524:	ldr	r1, [fp, #-12]
   1a528:	str	r1, [fp, #-40]	; 0xffffffd8
   1a52c:	ldr	r2, [fp, #-16]
   1a530:	sub	ip, fp, #84	; 0x54
   1a534:	str	ip, [sp]
   1a538:	bl	20c54 <main@@Base+0xa308>
   1a53c:	str	r0, [fp, #-12]
   1a540:	ldr	r0, [fp, #-12]
   1a544:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a548:	cmp	r0, r1
   1a54c:	beq	1a560 <main@@Base+0x3c14>
   1a550:	ldr	r0, [fp, #-12]
   1a554:	ldr	r1, [fp, #-16]
   1a558:	cmp	r0, r1
   1a55c:	bne	1a564 <main@@Base+0x3c18>
   1a560:	b	1b7d4 <main@@Base+0x4e88>
   1a564:	b	1a568 <main@@Base+0x3c1c>
   1a568:	ldr	r0, [fp, #-84]	; 0xffffffac
   1a56c:	cmp	r0, #0
   1a570:	bne	1a588 <main@@Base+0x3c3c>
   1a574:	ldr	r0, [fp, #-8]
   1a578:	ldr	r0, [r0, #8]
   1a57c:	and	r0, r0, #2
   1a580:	cmp	r0, #0
   1a584:	beq	1a5c4 <main@@Base+0x3c78>
   1a588:	ldr	r0, [fp, #-8]
   1a58c:	ldr	r0, [r0]
   1a590:	movw	r1, #20
   1a594:	movw	r2, #4
   1a598:	movw	r3, #4
   1a59c:	uxth	r3, r3
   1a5a0:	bl	2debc <flatcc_builder_table_add@@Base>
   1a5a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a5a8:	movw	r1, #0
   1a5ac:	cmp	r0, r1
   1a5b0:	bne	1a5b8 <main@@Base+0x3c6c>
   1a5b4:	b	1b7d4 <main@@Base+0x4e88>
   1a5b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a5bc:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a5c0:	bl	20e38 <main@@Base+0xa4ec>
   1a5c4:	b	1a5dc <main@@Base+0x3c90>
   1a5c8:	ldr	r0, [fp, #-8]
   1a5cc:	ldr	r1, [fp, #-12]
   1a5d0:	ldr	r2, [fp, #-16]
   1a5d4:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1a5d8:	str	r0, [fp, #-12]
   1a5dc:	b	1a5f4 <main@@Base+0x3ca8>
   1a5e0:	ldr	r0, [fp, #-8]
   1a5e4:	ldr	r1, [fp, #-12]
   1a5e8:	ldr	r2, [fp, #-16]
   1a5ec:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1a5f0:	str	r0, [fp, #-12]
   1a5f4:	b	1a5f8 <main@@Base+0x3cac>
   1a5f8:	b	1a610 <main@@Base+0x3cc4>
   1a5fc:	ldr	r0, [fp, #-8]
   1a600:	ldr	r1, [fp, #-12]
   1a604:	ldr	r2, [fp, #-16]
   1a608:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1a60c:	str	r0, [fp, #-12]
   1a610:	b	1aef4 <main@@Base+0x45a8>
   1a614:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a618:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a61c:	movw	r2, #30256	; 0x7630
   1a620:	movt	r2, #26222	; 0x666e
   1a624:	subs	r0, r2, r0
   1a628:	movw	r2, #12895	; 0x325f
   1a62c:	movt	r2, #30003	; 0x7533
   1a630:	sbcs	r1, r2, r1
   1a634:	bcc	1a934 <main@@Base+0x3fe8>
   1a638:	b	1a63c <main@@Base+0x3cf0>
   1a63c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a640:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a644:	movw	r2, #13407	; 0x345f
   1a648:	movt	r2, #29494	; 0x7336
   1a64c:	eor	r1, r1, r2
   1a650:	movw	r2, #30257	; 0x7631
   1a654:	movt	r2, #26222	; 0x666e
   1a658:	eor	r0, r0, r2
   1a65c:	orr	r0, r0, r1
   1a660:	cmp	r0, #0
   1a664:	bne	1a91c <main@@Base+0x3fd0>
   1a668:	b	1a66c <main@@Base+0x3d20>
   1a66c:	ldr	r0, [fp, #-8]
   1a670:	ldr	r1, [fp, #-12]
   1a674:	str	r1, [fp, #-40]	; 0xffffffd8
   1a678:	ldr	r2, [fp, #-16]
   1a67c:	movw	r3, #8
   1a680:	bl	1c998 <main@@Base+0x604c>
   1a684:	str	r0, [fp, #-12]
   1a688:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a68c:	ldr	r1, [fp, #-12]
   1a690:	cmp	r0, r1
   1a694:	beq	1a790 <main@@Base+0x3e44>
   1a698:	mov	r0, #0
   1a69c:	str	r0, [sp, #100]	; 0x64
   1a6a0:	str	r0, [sp, #96]	; 0x60
   1a6a4:	ldr	r0, [fp, #-8]
   1a6a8:	ldr	r1, [fp, #-12]
   1a6ac:	str	r1, [fp, #-40]	; 0xffffffd8
   1a6b0:	ldr	r2, [fp, #-16]
   1a6b4:	add	r3, sp, #96	; 0x60
   1a6b8:	bl	20e64 <main@@Base+0xa518>
   1a6bc:	str	r0, [fp, #-12]
   1a6c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a6c4:	ldr	r1, [fp, #-12]
   1a6c8:	cmp	r0, r1
   1a6cc:	bne	1a720 <main@@Base+0x3dd4>
   1a6d0:	ldr	r0, [pc, #4072]	; 1b6c0 <main@@Base+0x4d74>
   1a6d4:	add	r3, pc, r0
   1a6d8:	ldr	r0, [fp, #-8]
   1a6dc:	ldr	r1, [fp, #-12]
   1a6e0:	str	r1, [fp, #-40]	; 0xffffffd8
   1a6e4:	ldr	r2, [fp, #-16]
   1a6e8:	add	ip, sp, #96	; 0x60
   1a6ec:	str	ip, [sp]
   1a6f0:	bl	20f3c <main@@Base+0xa5f0>
   1a6f4:	str	r0, [fp, #-12]
   1a6f8:	ldr	r0, [fp, #-12]
   1a6fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a700:	cmp	r0, r1
   1a704:	beq	1a718 <main@@Base+0x3dcc>
   1a708:	ldr	r0, [fp, #-12]
   1a70c:	ldr	r1, [fp, #-16]
   1a710:	cmp	r0, r1
   1a714:	bne	1a71c <main@@Base+0x3dd0>
   1a718:	b	1b7d4 <main@@Base+0x4e88>
   1a71c:	b	1a720 <main@@Base+0x3dd4>
   1a720:	ldr	r0, [sp, #96]	; 0x60
   1a724:	ldr	r1, [sp, #100]	; 0x64
   1a728:	orr	r0, r0, r1
   1a72c:	cmp	r0, #0
   1a730:	bne	1a74c <main@@Base+0x3e00>
   1a734:	b	1a738 <main@@Base+0x3dec>
   1a738:	ldr	r0, [fp, #-8]
   1a73c:	ldr	r0, [r0, #8]
   1a740:	and	r0, r0, #2
   1a744:	cmp	r0, #0
   1a748:	beq	1a78c <main@@Base+0x3e40>
   1a74c:	ldr	r0, [fp, #-8]
   1a750:	ldr	r0, [r0]
   1a754:	movw	r1, #18
   1a758:	movw	r2, #8
   1a75c:	movw	r3, #8
   1a760:	uxth	r3, r3
   1a764:	bl	2debc <flatcc_builder_table_add@@Base>
   1a768:	str	r0, [fp, #-28]	; 0xffffffe4
   1a76c:	movw	r1, #0
   1a770:	cmp	r0, r1
   1a774:	bne	1a77c <main@@Base+0x3e30>
   1a778:	b	1b7d4 <main@@Base+0x4e88>
   1a77c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a780:	ldr	r2, [sp, #96]	; 0x60
   1a784:	ldr	r3, [sp, #100]	; 0x64
   1a788:	bl	21138 <main@@Base+0xa7ec>
   1a78c:	b	1a918 <main@@Base+0x3fcc>
   1a790:	ldr	r0, [fp, #-12]
   1a794:	add	r0, r0, #8
   1a798:	str	r0, [fp, #-12]
   1a79c:	ldr	r0, [fp, #-12]
   1a7a0:	ldr	r1, [fp, #-16]
   1a7a4:	bl	1c960 <main@@Base+0x6014>
   1a7a8:	str	r1, [fp, #-44]	; 0xffffffd4
   1a7ac:	str	r0, [fp, #-48]	; 0xffffffd0
   1a7b0:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   1a7b4:	mov	r1, #1627389952	; 0x61000000
   1a7b8:	teq	r1, r0, lsl #24
   1a7bc:	bne	1a900 <main@@Base+0x3fb4>
   1a7c0:	b	1a7c4 <main@@Base+0x3e78>
   1a7c4:	ldr	r0, [fp, #-8]
   1a7c8:	ldr	r1, [fp, #-12]
   1a7cc:	str	r1, [fp, #-40]	; 0xffffffd8
   1a7d0:	ldr	r2, [fp, #-16]
   1a7d4:	movw	r3, #1
   1a7d8:	bl	1c998 <main@@Base+0x604c>
   1a7dc:	str	r0, [fp, #-12]
   1a7e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a7e4:	ldr	r1, [fp, #-12]
   1a7e8:	cmp	r0, r1
   1a7ec:	beq	1a8e8 <main@@Base+0x3f9c>
   1a7f0:	mov	r0, #0
   1a7f4:	str	r0, [sp, #92]	; 0x5c
   1a7f8:	str	r0, [sp, #88]	; 0x58
   1a7fc:	ldr	r0, [fp, #-8]
   1a800:	ldr	r1, [fp, #-12]
   1a804:	str	r1, [fp, #-40]	; 0xffffffd8
   1a808:	ldr	r2, [fp, #-16]
   1a80c:	add	r3, sp, #88	; 0x58
   1a810:	bl	20e64 <main@@Base+0xa518>
   1a814:	str	r0, [fp, #-12]
   1a818:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a81c:	ldr	r1, [fp, #-12]
   1a820:	cmp	r0, r1
   1a824:	bne	1a878 <main@@Base+0x3f2c>
   1a828:	ldr	r0, [pc, #4072]	; 1b818 <main@@Base+0x4ecc>
   1a82c:	add	r3, pc, r0
   1a830:	ldr	r0, [fp, #-8]
   1a834:	ldr	r1, [fp, #-12]
   1a838:	str	r1, [fp, #-40]	; 0xffffffd8
   1a83c:	ldr	r2, [fp, #-16]
   1a840:	add	ip, sp, #88	; 0x58
   1a844:	str	ip, [sp]
   1a848:	bl	20f3c <main@@Base+0xa5f0>
   1a84c:	str	r0, [fp, #-12]
   1a850:	ldr	r0, [fp, #-12]
   1a854:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a858:	cmp	r0, r1
   1a85c:	beq	1a870 <main@@Base+0x3f24>
   1a860:	ldr	r0, [fp, #-12]
   1a864:	ldr	r1, [fp, #-16]
   1a868:	cmp	r0, r1
   1a86c:	bne	1a874 <main@@Base+0x3f28>
   1a870:	b	1b7d4 <main@@Base+0x4e88>
   1a874:	b	1a878 <main@@Base+0x3f2c>
   1a878:	ldr	r0, [sp, #88]	; 0x58
   1a87c:	ldr	r1, [sp, #92]	; 0x5c
   1a880:	orr	r0, r0, r1
   1a884:	cmp	r0, #0
   1a888:	bne	1a8a4 <main@@Base+0x3f58>
   1a88c:	b	1a890 <main@@Base+0x3f44>
   1a890:	ldr	r0, [fp, #-8]
   1a894:	ldr	r0, [r0, #8]
   1a898:	and	r0, r0, #2
   1a89c:	cmp	r0, #0
   1a8a0:	beq	1a8e4 <main@@Base+0x3f98>
   1a8a4:	ldr	r0, [fp, #-8]
   1a8a8:	ldr	r0, [r0]
   1a8ac:	movw	r1, #22
   1a8b0:	movw	r2, #8
   1a8b4:	movw	r3, #8
   1a8b8:	uxth	r3, r3
   1a8bc:	bl	2debc <flatcc_builder_table_add@@Base>
   1a8c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a8c4:	movw	r1, #0
   1a8c8:	cmp	r0, r1
   1a8cc:	bne	1a8d4 <main@@Base+0x3f88>
   1a8d0:	b	1b7d4 <main@@Base+0x4e88>
   1a8d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a8d8:	ldr	r2, [sp, #88]	; 0x58
   1a8dc:	ldr	r3, [sp, #92]	; 0x5c
   1a8e0:	bl	21138 <main@@Base+0xa7ec>
   1a8e4:	b	1a8fc <main@@Base+0x3fb0>
   1a8e8:	ldr	r0, [fp, #-8]
   1a8ec:	ldr	r1, [fp, #-12]
   1a8f0:	ldr	r2, [fp, #-16]
   1a8f4:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1a8f8:	str	r0, [fp, #-12]
   1a8fc:	b	1a914 <main@@Base+0x3fc8>
   1a900:	ldr	r0, [fp, #-8]
   1a904:	ldr	r1, [fp, #-12]
   1a908:	ldr	r2, [fp, #-16]
   1a90c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1a910:	str	r0, [fp, #-12]
   1a914:	b	1a918 <main@@Base+0x3fcc>
   1a918:	b	1a930 <main@@Base+0x3fe4>
   1a91c:	ldr	r0, [fp, #-8]
   1a920:	ldr	r1, [fp, #-12]
   1a924:	ldr	r2, [fp, #-16]
   1a928:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1a92c:	str	r0, [fp, #-12]
   1a930:	b	1aef0 <main@@Base+0x45a4>
   1a934:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a938:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a93c:	movw	r2, #12895	; 0x325f
   1a940:	movt	r2, #30003	; 0x7533
   1a944:	eor	r1, r1, r2
   1a948:	movw	r2, #30257	; 0x7631
   1a94c:	movt	r2, #26222	; 0x666e
   1a950:	eor	r0, r0, r2
   1a954:	orr	r0, r0, r1
   1a958:	cmp	r0, #0
   1a95c:	bne	1abf0 <main@@Base+0x42a4>
   1a960:	b	1a964 <main@@Base+0x4018>
   1a964:	ldr	r0, [fp, #-8]
   1a968:	ldr	r1, [fp, #-12]
   1a96c:	str	r1, [fp, #-40]	; 0xffffffd8
   1a970:	ldr	r2, [fp, #-16]
   1a974:	movw	r3, #8
   1a978:	bl	1c998 <main@@Base+0x604c>
   1a97c:	str	r0, [fp, #-12]
   1a980:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a984:	ldr	r1, [fp, #-12]
   1a988:	cmp	r0, r1
   1a98c:	beq	1aa74 <main@@Base+0x4128>
   1a990:	movw	r0, #0
   1a994:	str	r0, [sp, #84]	; 0x54
   1a998:	ldr	r0, [fp, #-8]
   1a99c:	ldr	r1, [fp, #-12]
   1a9a0:	str	r1, [fp, #-40]	; 0xffffffd8
   1a9a4:	ldr	r2, [fp, #-16]
   1a9a8:	add	r3, sp, #84	; 0x54
   1a9ac:	bl	21170 <main@@Base+0xa824>
   1a9b0:	str	r0, [fp, #-12]
   1a9b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a9b8:	ldr	r1, [fp, #-12]
   1a9bc:	cmp	r0, r1
   1a9c0:	bne	1aa14 <main@@Base+0x40c8>
   1a9c4:	ldr	r0, [pc, #3656]	; 1b814 <main@@Base+0x4ec8>
   1a9c8:	add	r3, pc, r0
   1a9cc:	ldr	r0, [fp, #-8]
   1a9d0:	ldr	r1, [fp, #-12]
   1a9d4:	str	r1, [fp, #-40]	; 0xffffffd8
   1a9d8:	ldr	r2, [fp, #-16]
   1a9dc:	add	ip, sp, #84	; 0x54
   1a9e0:	str	ip, [sp]
   1a9e4:	bl	21248 <main@@Base+0xa8fc>
   1a9e8:	str	r0, [fp, #-12]
   1a9ec:	ldr	r0, [fp, #-12]
   1a9f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a9f4:	cmp	r0, r1
   1a9f8:	beq	1aa0c <main@@Base+0x40c0>
   1a9fc:	ldr	r0, [fp, #-12]
   1aa00:	ldr	r1, [fp, #-16]
   1aa04:	cmp	r0, r1
   1aa08:	bne	1aa10 <main@@Base+0x40c4>
   1aa0c:	b	1b7d4 <main@@Base+0x4e88>
   1aa10:	b	1aa14 <main@@Base+0x40c8>
   1aa14:	ldr	r0, [sp, #84]	; 0x54
   1aa18:	cmp	r0, #0
   1aa1c:	bne	1aa34 <main@@Base+0x40e8>
   1aa20:	ldr	r0, [fp, #-8]
   1aa24:	ldr	r0, [r0, #8]
   1aa28:	and	r0, r0, #2
   1aa2c:	cmp	r0, #0
   1aa30:	beq	1aa70 <main@@Base+0x4124>
   1aa34:	ldr	r0, [fp, #-8]
   1aa38:	ldr	r0, [r0]
   1aa3c:	movw	r1, #17
   1aa40:	movw	r2, #4
   1aa44:	movw	r3, #4
   1aa48:	uxth	r3, r3
   1aa4c:	bl	2debc <flatcc_builder_table_add@@Base>
   1aa50:	str	r0, [fp, #-28]	; 0xffffffe4
   1aa54:	movw	r1, #0
   1aa58:	cmp	r0, r1
   1aa5c:	bne	1aa64 <main@@Base+0x4118>
   1aa60:	b	1b7d4 <main@@Base+0x4e88>
   1aa64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aa68:	ldr	r1, [sp, #84]	; 0x54
   1aa6c:	bl	2142c <main@@Base+0xaae0>
   1aa70:	b	1abec <main@@Base+0x42a0>
   1aa74:	ldr	r0, [fp, #-12]
   1aa78:	add	r0, r0, #8
   1aa7c:	str	r0, [fp, #-12]
   1aa80:	ldr	r0, [fp, #-12]
   1aa84:	ldr	r1, [fp, #-16]
   1aa88:	bl	1c960 <main@@Base+0x6014>
   1aa8c:	str	r1, [fp, #-44]	; 0xffffffd4
   1aa90:	str	r0, [fp, #-48]	; 0xffffffd0
   1aa94:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   1aa98:	mov	r1, #1627389952	; 0x61000000
   1aa9c:	teq	r1, r0, lsl #24
   1aaa0:	bne	1abd4 <main@@Base+0x4288>
   1aaa4:	b	1aaa8 <main@@Base+0x415c>
   1aaa8:	ldr	r0, [fp, #-8]
   1aaac:	ldr	r1, [fp, #-12]
   1aab0:	str	r1, [fp, #-40]	; 0xffffffd8
   1aab4:	ldr	r2, [fp, #-16]
   1aab8:	movw	r3, #1
   1aabc:	bl	1c998 <main@@Base+0x604c>
   1aac0:	str	r0, [fp, #-12]
   1aac4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aac8:	ldr	r1, [fp, #-12]
   1aacc:	cmp	r0, r1
   1aad0:	beq	1abb8 <main@@Base+0x426c>
   1aad4:	movw	r0, #0
   1aad8:	str	r0, [sp, #80]	; 0x50
   1aadc:	ldr	r0, [fp, #-8]
   1aae0:	ldr	r1, [fp, #-12]
   1aae4:	str	r1, [fp, #-40]	; 0xffffffd8
   1aae8:	ldr	r2, [fp, #-16]
   1aaec:	add	r3, sp, #80	; 0x50
   1aaf0:	bl	21170 <main@@Base+0xa824>
   1aaf4:	str	r0, [fp, #-12]
   1aaf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aafc:	ldr	r1, [fp, #-12]
   1ab00:	cmp	r0, r1
   1ab04:	bne	1ab58 <main@@Base+0x420c>
   1ab08:	ldr	r0, [pc, #3328]	; 1b810 <main@@Base+0x4ec4>
   1ab0c:	add	r3, pc, r0
   1ab10:	ldr	r0, [fp, #-8]
   1ab14:	ldr	r1, [fp, #-12]
   1ab18:	str	r1, [fp, #-40]	; 0xffffffd8
   1ab1c:	ldr	r2, [fp, #-16]
   1ab20:	add	ip, sp, #80	; 0x50
   1ab24:	str	ip, [sp]
   1ab28:	bl	21248 <main@@Base+0xa8fc>
   1ab2c:	str	r0, [fp, #-12]
   1ab30:	ldr	r0, [fp, #-12]
   1ab34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ab38:	cmp	r0, r1
   1ab3c:	beq	1ab50 <main@@Base+0x4204>
   1ab40:	ldr	r0, [fp, #-12]
   1ab44:	ldr	r1, [fp, #-16]
   1ab48:	cmp	r0, r1
   1ab4c:	bne	1ab54 <main@@Base+0x4208>
   1ab50:	b	1b7d4 <main@@Base+0x4e88>
   1ab54:	b	1ab58 <main@@Base+0x420c>
   1ab58:	ldr	r0, [sp, #80]	; 0x50
   1ab5c:	cmp	r0, #0
   1ab60:	bne	1ab78 <main@@Base+0x422c>
   1ab64:	ldr	r0, [fp, #-8]
   1ab68:	ldr	r0, [r0, #8]
   1ab6c:	and	r0, r0, #2
   1ab70:	cmp	r0, #0
   1ab74:	beq	1abb4 <main@@Base+0x4268>
   1ab78:	ldr	r0, [fp, #-8]
   1ab7c:	ldr	r0, [r0]
   1ab80:	movw	r1, #21
   1ab84:	movw	r2, #4
   1ab88:	movw	r3, #4
   1ab8c:	uxth	r3, r3
   1ab90:	bl	2debc <flatcc_builder_table_add@@Base>
   1ab94:	str	r0, [fp, #-28]	; 0xffffffe4
   1ab98:	movw	r1, #0
   1ab9c:	cmp	r0, r1
   1aba0:	bne	1aba8 <main@@Base+0x425c>
   1aba4:	b	1b7d4 <main@@Base+0x4e88>
   1aba8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1abac:	ldr	r1, [sp, #80]	; 0x50
   1abb0:	bl	2142c <main@@Base+0xaae0>
   1abb4:	b	1abcc <main@@Base+0x4280>
   1abb8:	ldr	r0, [fp, #-8]
   1abbc:	ldr	r1, [fp, #-12]
   1abc0:	ldr	r2, [fp, #-16]
   1abc4:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1abc8:	str	r0, [fp, #-12]
   1abcc:	b	1abe8 <main@@Base+0x429c>
   1abd0:	strdeq	r5, [r4], -r0
   1abd4:	ldr	r0, [fp, #-8]
   1abd8:	ldr	r1, [fp, #-12]
   1abdc:	ldr	r2, [fp, #-16]
   1abe0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1abe4:	str	r0, [fp, #-12]
   1abe8:	b	1abec <main@@Base+0x42a0>
   1abec:	b	1aeec <main@@Base+0x45a0>
   1abf0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1abf4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1abf8:	movw	r2, #13407	; 0x345f
   1abfc:	movt	r2, #30006	; 0x7536
   1ac00:	eor	r1, r1, r2
   1ac04:	movw	r2, #30257	; 0x7631
   1ac08:	movt	r2, #26222	; 0x666e
   1ac0c:	eor	r0, r0, r2
   1ac10:	orr	r0, r0, r1
   1ac14:	cmp	r0, #0
   1ac18:	bne	1aed4 <main@@Base+0x4588>
   1ac1c:	b	1ac20 <main@@Base+0x42d4>
   1ac20:	ldr	r0, [fp, #-8]
   1ac24:	ldr	r1, [fp, #-12]
   1ac28:	str	r1, [fp, #-40]	; 0xffffffd8
   1ac2c:	ldr	r2, [fp, #-16]
   1ac30:	movw	r3, #8
   1ac34:	bl	1c998 <main@@Base+0x604c>
   1ac38:	str	r0, [fp, #-12]
   1ac3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ac40:	ldr	r1, [fp, #-12]
   1ac44:	cmp	r0, r1
   1ac48:	beq	1ad44 <main@@Base+0x43f8>
   1ac4c:	mov	r0, #0
   1ac50:	str	r0, [sp, #76]	; 0x4c
   1ac54:	str	r0, [sp, #72]	; 0x48
   1ac58:	ldr	r0, [fp, #-8]
   1ac5c:	ldr	r1, [fp, #-12]
   1ac60:	str	r1, [fp, #-40]	; 0xffffffd8
   1ac64:	ldr	r2, [fp, #-16]
   1ac68:	add	r3, sp, #72	; 0x48
   1ac6c:	bl	21458 <main@@Base+0xab0c>
   1ac70:	str	r0, [fp, #-12]
   1ac74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ac78:	ldr	r1, [fp, #-12]
   1ac7c:	cmp	r0, r1
   1ac80:	bne	1acd4 <main@@Base+0x4388>
   1ac84:	ldr	r0, [pc, #2944]	; 1b80c <main@@Base+0x4ec0>
   1ac88:	add	r3, pc, r0
   1ac8c:	ldr	r0, [fp, #-8]
   1ac90:	ldr	r1, [fp, #-12]
   1ac94:	str	r1, [fp, #-40]	; 0xffffffd8
   1ac98:	ldr	r2, [fp, #-16]
   1ac9c:	add	ip, sp, #72	; 0x48
   1aca0:	str	ip, [sp]
   1aca4:	bl	21530 <main@@Base+0xabe4>
   1aca8:	str	r0, [fp, #-12]
   1acac:	ldr	r0, [fp, #-12]
   1acb0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1acb4:	cmp	r0, r1
   1acb8:	beq	1accc <main@@Base+0x4380>
   1acbc:	ldr	r0, [fp, #-12]
   1acc0:	ldr	r1, [fp, #-16]
   1acc4:	cmp	r0, r1
   1acc8:	bne	1acd0 <main@@Base+0x4384>
   1accc:	b	1b7d4 <main@@Base+0x4e88>
   1acd0:	b	1acd4 <main@@Base+0x4388>
   1acd4:	ldr	r0, [sp, #72]	; 0x48
   1acd8:	ldr	r1, [sp, #76]	; 0x4c
   1acdc:	orr	r0, r0, r1
   1ace0:	cmp	r0, #0
   1ace4:	bne	1ad00 <main@@Base+0x43b4>
   1ace8:	b	1acec <main@@Base+0x43a0>
   1acec:	ldr	r0, [fp, #-8]
   1acf0:	ldr	r0, [r0, #8]
   1acf4:	and	r0, r0, #2
   1acf8:	cmp	r0, #0
   1acfc:	beq	1ad40 <main@@Base+0x43f4>
   1ad00:	ldr	r0, [fp, #-8]
   1ad04:	ldr	r0, [r0]
   1ad08:	movw	r1, #19
   1ad0c:	movw	r2, #8
   1ad10:	movw	r3, #8
   1ad14:	uxth	r3, r3
   1ad18:	bl	2debc <flatcc_builder_table_add@@Base>
   1ad1c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ad20:	movw	r1, #0
   1ad24:	cmp	r0, r1
   1ad28:	bne	1ad30 <main@@Base+0x43e4>
   1ad2c:	b	1b7d4 <main@@Base+0x4e88>
   1ad30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ad34:	ldr	r2, [sp, #72]	; 0x48
   1ad38:	ldr	r3, [sp, #76]	; 0x4c
   1ad3c:	bl	2172c <main@@Base+0xade0>
   1ad40:	b	1aed0 <main@@Base+0x4584>
   1ad44:	ldr	r0, [fp, #-12]
   1ad48:	add	r0, r0, #8
   1ad4c:	str	r0, [fp, #-12]
   1ad50:	ldr	r0, [fp, #-12]
   1ad54:	ldr	r1, [fp, #-16]
   1ad58:	bl	1c960 <main@@Base+0x6014>
   1ad5c:	str	r1, [fp, #-44]	; 0xffffffd4
   1ad60:	str	r0, [fp, #-48]	; 0xffffffd0
   1ad64:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   1ad68:	mov	r1, #1627389952	; 0x61000000
   1ad6c:	teq	r1, r0, lsl #24
   1ad70:	bne	1aeb8 <main@@Base+0x456c>
   1ad74:	b	1ad78 <main@@Base+0x442c>
   1ad78:	ldr	r0, [fp, #-8]
   1ad7c:	ldr	r1, [fp, #-12]
   1ad80:	str	r1, [fp, #-40]	; 0xffffffd8
   1ad84:	ldr	r2, [fp, #-16]
   1ad88:	movw	r3, #1
   1ad8c:	bl	1c998 <main@@Base+0x604c>
   1ad90:	str	r0, [fp, #-12]
   1ad94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad98:	ldr	r1, [fp, #-12]
   1ad9c:	cmp	r0, r1
   1ada0:	beq	1ae9c <main@@Base+0x4550>
   1ada4:	mov	r0, #0
   1ada8:	str	r0, [sp, #68]	; 0x44
   1adac:	str	r0, [sp, #64]	; 0x40
   1adb0:	ldr	r0, [fp, #-8]
   1adb4:	ldr	r1, [fp, #-12]
   1adb8:	str	r1, [fp, #-40]	; 0xffffffd8
   1adbc:	ldr	r2, [fp, #-16]
   1adc0:	add	r3, sp, #64	; 0x40
   1adc4:	bl	21458 <main@@Base+0xab0c>
   1adc8:	str	r0, [fp, #-12]
   1adcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1add0:	ldr	r1, [fp, #-12]
   1add4:	cmp	r0, r1
   1add8:	bne	1ae2c <main@@Base+0x44e0>
   1addc:	ldr	r0, [pc, #2596]	; 1b808 <main@@Base+0x4ebc>
   1ade0:	add	r3, pc, r0
   1ade4:	ldr	r0, [fp, #-8]
   1ade8:	ldr	r1, [fp, #-12]
   1adec:	str	r1, [fp, #-40]	; 0xffffffd8
   1adf0:	ldr	r2, [fp, #-16]
   1adf4:	add	ip, sp, #64	; 0x40
   1adf8:	str	ip, [sp]
   1adfc:	bl	21530 <main@@Base+0xabe4>
   1ae00:	str	r0, [fp, #-12]
   1ae04:	ldr	r0, [fp, #-12]
   1ae08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ae0c:	cmp	r0, r1
   1ae10:	beq	1ae24 <main@@Base+0x44d8>
   1ae14:	ldr	r0, [fp, #-12]
   1ae18:	ldr	r1, [fp, #-16]
   1ae1c:	cmp	r0, r1
   1ae20:	bne	1ae28 <main@@Base+0x44dc>
   1ae24:	b	1b7d4 <main@@Base+0x4e88>
   1ae28:	b	1ae2c <main@@Base+0x44e0>
   1ae2c:	ldr	r0, [sp, #64]	; 0x40
   1ae30:	ldr	r1, [sp, #68]	; 0x44
   1ae34:	orr	r0, r0, r1
   1ae38:	cmp	r0, #0
   1ae3c:	bne	1ae58 <main@@Base+0x450c>
   1ae40:	b	1ae44 <main@@Base+0x44f8>
   1ae44:	ldr	r0, [fp, #-8]
   1ae48:	ldr	r0, [r0, #8]
   1ae4c:	and	r0, r0, #2
   1ae50:	cmp	r0, #0
   1ae54:	beq	1ae98 <main@@Base+0x454c>
   1ae58:	ldr	r0, [fp, #-8]
   1ae5c:	ldr	r0, [r0]
   1ae60:	movw	r1, #23
   1ae64:	movw	r2, #8
   1ae68:	movw	r3, #8
   1ae6c:	uxth	r3, r3
   1ae70:	bl	2debc <flatcc_builder_table_add@@Base>
   1ae74:	str	r0, [fp, #-28]	; 0xffffffe4
   1ae78:	movw	r1, #0
   1ae7c:	cmp	r0, r1
   1ae80:	bne	1ae88 <main@@Base+0x453c>
   1ae84:	b	1b7d4 <main@@Base+0x4e88>
   1ae88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ae8c:	ldr	r2, [sp, #64]	; 0x40
   1ae90:	ldr	r3, [sp, #68]	; 0x44
   1ae94:	bl	2172c <main@@Base+0xade0>
   1ae98:	b	1aeb0 <main@@Base+0x4564>
   1ae9c:	ldr	r0, [fp, #-8]
   1aea0:	ldr	r1, [fp, #-12]
   1aea4:	ldr	r2, [fp, #-16]
   1aea8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1aeac:	str	r0, [fp, #-12]
   1aeb0:	b	1aecc <main@@Base+0x4580>
   1aeb4:	andeq	r5, r4, ip, lsr #4
   1aeb8:	ldr	r0, [fp, #-8]
   1aebc:	ldr	r1, [fp, #-12]
   1aec0:	ldr	r2, [fp, #-16]
   1aec4:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1aec8:	str	r0, [fp, #-12]
   1aecc:	b	1aed0 <main@@Base+0x4584>
   1aed0:	b	1aee8 <main@@Base+0x459c>
   1aed4:	ldr	r0, [fp, #-8]
   1aed8:	ldr	r1, [fp, #-12]
   1aedc:	ldr	r2, [fp, #-16]
   1aee0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1aee4:	str	r0, [fp, #-12]
   1aee8:	b	1aeec <main@@Base+0x45a0>
   1aeec:	b	1aef0 <main@@Base+0x45a4>
   1aef0:	b	1aef4 <main@@Base+0x45a8>
   1aef4:	b	1b714 <main@@Base+0x4dc8>
   1aef8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aefc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1af00:	movw	r2, #24430	; 0x5f6e
   1af04:	movt	r2, #28530	; 0x6f72
   1af08:	subs	r0, r2, r0
   1af0c:	movw	r2, #25460	; 0x6374
   1af10:	movt	r2, #30309	; 0x7665
   1af14:	sbcs	r1, r2, r1
   1af18:	bcc	1b264 <main@@Base+0x4918>
   1af1c:	b	1af20 <main@@Base+0x45d4>
   1af20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1af24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1af28:	movw	r2, #29556	; 0x7374
   1af2c:	movt	r2, #29797	; 0x7465
   1af30:	eor	r1, r1, r2
   1af34:	movw	r2, #29556	; 0x7374
   1af38:	movt	r2, #28261	; 0x6e65
   1af3c:	eor	r0, r0, r2
   1af40:	orr	r0, r0, r1
   1af44:	cmp	r0, #0
   1af48:	bne	1b24c <main@@Base+0x4900>
   1af4c:	b	1af50 <main@@Base+0x4604>
   1af50:	ldr	r0, [fp, #-12]
   1af54:	add	r0, r0, #8
   1af58:	str	r0, [fp, #-12]
   1af5c:	ldr	r0, [fp, #-12]
   1af60:	ldr	r1, [fp, #-16]
   1af64:	bl	1c960 <main@@Base+0x6014>
   1af68:	str	r1, [fp, #-44]	; 0xffffffd4
   1af6c:	str	r0, [fp, #-48]	; 0xffffffd0
   1af70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1af74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1af78:	movw	r2, #26220	; 0x666c
   1af7c:	movt	r2, #25956	; 0x6564
   1af80:	eor	r1, r1, r2
   1af84:	movw	r2, #25205	; 0x6275
   1af88:	movt	r2, #24948	; 0x6174
   1af8c:	eor	r0, r0, r2
   1af90:	orr	r0, r0, r1
   1af94:	cmp	r0, #0
   1af98:	bne	1b234 <main@@Base+0x48e8>
   1af9c:	b	1afa0 <main@@Base+0x4654>
   1afa0:	ldr	r0, [fp, #-12]
   1afa4:	add	r0, r0, #8
   1afa8:	str	r0, [fp, #-12]
   1afac:	ldr	r0, [fp, #-12]
   1afb0:	ldr	r1, [fp, #-16]
   1afb4:	bl	1c960 <main@@Base+0x6014>
   1afb8:	str	r1, [fp, #-44]	; 0xffffffd4
   1afbc:	str	r0, [fp, #-48]	; 0xffffffd0
   1afc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1afc4:	movw	r1, #25970	; 0x6572
   1afc8:	movt	r1, #26214	; 0x6666
   1afcc:	teq	r0, r1
   1afd0:	bne	1b21c <main@@Base+0x48d0>
   1afd4:	b	1afdc <main@@Base+0x4690>
   1afd8:	ldrdeq	r5, [r4], -r4
   1afdc:	ldr	r0, [fp, #-8]
   1afe0:	ldr	r1, [fp, #-12]
   1afe4:	str	r1, [fp, #-40]	; 0xffffffd8
   1afe8:	ldr	r2, [fp, #-16]
   1afec:	movw	r3, #4
   1aff0:	bl	1c998 <main@@Base+0x604c>
   1aff4:	str	r0, [fp, #-12]
   1aff8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1affc:	ldr	r1, [fp, #-12]
   1b000:	cmp	r0, r1
   1b004:	beq	1b204 <main@@Base+0x48b8>
   1b008:	ldr	r0, [fp, #-12]
   1b00c:	ldr	r1, [fp, #-16]
   1b010:	cmp	r0, r1
   1b014:	beq	1b158 <main@@Base+0x480c>
   1b018:	ldr	r0, [fp, #-12]
   1b01c:	ldrb	r0, [r0]
   1b020:	cmp	r0, #91	; 0x5b
   1b024:	bne	1b158 <main@@Base+0x480c>
   1b028:	ldr	r0, [fp, #-8]
   1b02c:	ldr	r0, [r0]
   1b030:	movw	r1, #1
   1b034:	movw	r2, #1
   1b038:	uxth	r2, r2
   1b03c:	mvn	r3, #0
   1b040:	bl	2c1a4 <flatcc_builder_start_vector@@Base>
   1b044:	cmp	r0, #0
   1b048:	beq	1b050 <main@@Base+0x4704>
   1b04c:	b	1b7d4 <main@@Base+0x4e88>
   1b050:	ldr	r0, [fp, #-8]
   1b054:	ldr	r1, [fp, #-12]
   1b058:	ldr	r2, [fp, #-16]
   1b05c:	sub	r3, fp, #24
   1b060:	bl	1e1a0 <main@@Base+0x7854>
   1b064:	str	r0, [fp, #-12]
   1b068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b06c:	cmp	r0, #0
   1b070:	beq	1b144 <main@@Base+0x47f8>
   1b074:	movw	r0, #0
   1b078:	strb	r0, [sp, #63]	; 0x3f
   1b07c:	ldr	r0, [fp, #-8]
   1b080:	ldr	r0, [r0]
   1b084:	movw	r1, #1
   1b088:	bl	2b6a8 <flatcc_builder_extend_vector@@Base>
   1b08c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b090:	movw	r1, #0
   1b094:	cmp	r0, r1
   1b098:	bne	1b0a0 <main@@Base+0x4754>
   1b09c:	b	1b7d4 <main@@Base+0x4e88>
   1b0a0:	ldr	r0, [fp, #-8]
   1b0a4:	ldr	r1, [fp, #-12]
   1b0a8:	str	r1, [fp, #-40]	; 0xffffffd8
   1b0ac:	ldr	r2, [fp, #-16]
   1b0b0:	add	r3, sp, #63	; 0x3f
   1b0b4:	bl	1e284 <main@@Base+0x7938>
   1b0b8:	str	r0, [fp, #-12]
   1b0bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b0c0:	ldr	r1, [fp, #-12]
   1b0c4:	cmp	r0, r1
   1b0c8:	bne	1b11c <main@@Base+0x47d0>
   1b0cc:	ldr	r0, [pc, #1840]	; 1b804 <main@@Base+0x4eb8>
   1b0d0:	add	r3, pc, r0
   1b0d4:	ldr	r0, [fp, #-8]
   1b0d8:	ldr	r1, [fp, #-12]
   1b0dc:	str	r1, [fp, #-40]	; 0xffffffd8
   1b0e0:	ldr	r2, [fp, #-16]
   1b0e4:	add	ip, sp, #63	; 0x3f
   1b0e8:	str	ip, [sp]
   1b0ec:	bl	1e360 <main@@Base+0x7a14>
   1b0f0:	str	r0, [fp, #-12]
   1b0f4:	ldr	r0, [fp, #-12]
   1b0f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b0fc:	cmp	r0, r1
   1b100:	beq	1b114 <main@@Base+0x47c8>
   1b104:	ldr	r0, [fp, #-12]
   1b108:	ldr	r1, [fp, #-16]
   1b10c:	cmp	r0, r1
   1b110:	bne	1b118 <main@@Base+0x47cc>
   1b114:	b	1b7d4 <main@@Base+0x4e88>
   1b118:	b	1b11c <main@@Base+0x47d0>
   1b11c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b120:	ldrb	r1, [sp, #63]	; 0x3f
   1b124:	bl	1e544 <main@@Base+0x7bf8>
   1b128:	ldr	r0, [fp, #-8]
   1b12c:	ldr	r1, [fp, #-12]
   1b130:	ldr	r2, [fp, #-16]
   1b134:	sub	r3, fp, #24
   1b138:	bl	1e570 <main@@Base+0x7c24>
   1b13c:	str	r0, [fp, #-12]
   1b140:	b	1b068 <main@@Base+0x471c>
   1b144:	ldr	r0, [fp, #-8]
   1b148:	ldr	r0, [r0]
   1b14c:	bl	2d684 <flatcc_builder_end_vector@@Base>
   1b150:	str	r0, [fp, #-32]	; 0xffffffe0
   1b154:	b	1b1c4 <main@@Base+0x4878>
   1b158:	ldr	r0, [fp, #-8]
   1b15c:	ldr	r0, [r0]
   1b160:	movw	r1, #0
   1b164:	str	r1, [sp, #16]
   1b168:	movw	r2, #0
   1b16c:	uxth	r2, r2
   1b170:	ldr	r3, [sp, #16]
   1b174:	bl	2aef0 <flatcc_builder_start_buffer@@Base>
   1b178:	cmp	r0, #0
   1b17c:	beq	1b184 <main@@Base+0x4838>
   1b180:	b	1b7d4 <main@@Base+0x4e88>
   1b184:	ldr	r0, [fp, #-8]
   1b188:	ldr	r1, [fp, #-12]
   1b18c:	ldr	r2, [fp, #-16]
   1b190:	sub	r3, fp, #32
   1b194:	bl	17e30 <main@@Base+0x14e4>
   1b198:	str	r0, [fp, #-12]
   1b19c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b1a0:	cmp	r0, #0
   1b1a4:	bne	1b1b0 <main@@Base+0x4864>
   1b1a8:	b	1b7d4 <main@@Base+0x4e88>
   1b1ac:	andeq	r4, r4, ip, lsr #30
   1b1b0:	ldr	r0, [fp, #-8]
   1b1b4:	ldr	r0, [r0]
   1b1b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b1bc:	bl	2b234 <flatcc_builder_end_buffer@@Base>
   1b1c0:	str	r0, [fp, #-32]	; 0xffffffe0
   1b1c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b1c8:	cmp	r0, #0
   1b1cc:	beq	1b1f0 <main@@Base+0x48a4>
   1b1d0:	ldr	r0, [fp, #-8]
   1b1d4:	ldr	r0, [r0]
   1b1d8:	movw	r1, #13
   1b1dc:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   1b1e0:	str	r0, [fp, #-36]	; 0xffffffdc
   1b1e4:	movw	r1, #0
   1b1e8:	cmp	r0, r1
   1b1ec:	bne	1b1f4 <main@@Base+0x48a8>
   1b1f0:	b	1b7d4 <main@@Base+0x4e88>
   1b1f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b1f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b1fc:	str	r0, [r1]
   1b200:	b	1b218 <main@@Base+0x48cc>
   1b204:	ldr	r0, [fp, #-8]
   1b208:	ldr	r1, [fp, #-12]
   1b20c:	ldr	r2, [fp, #-16]
   1b210:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1b214:	str	r0, [fp, #-12]
   1b218:	b	1b230 <main@@Base+0x48e4>
   1b21c:	ldr	r0, [fp, #-8]
   1b220:	ldr	r1, [fp, #-12]
   1b224:	ldr	r2, [fp, #-16]
   1b228:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1b22c:	str	r0, [fp, #-12]
   1b230:	b	1b248 <main@@Base+0x48fc>
   1b234:	ldr	r0, [fp, #-8]
   1b238:	ldr	r1, [fp, #-12]
   1b23c:	ldr	r2, [fp, #-16]
   1b240:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1b244:	str	r0, [fp, #-12]
   1b248:	b	1b260 <main@@Base+0x4914>
   1b24c:	ldr	r0, [fp, #-8]
   1b250:	ldr	r1, [fp, #-12]
   1b254:	ldr	r2, [fp, #-16]
   1b258:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1b25c:	str	r0, [fp, #-12]
   1b260:	b	1b710 <main@@Base+0x4dc4>
   1b264:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b268:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b26c:	movw	r2, #25460	; 0x6374
   1b270:	movt	r2, #30309	; 0x7665
   1b274:	eor	r1, r1, r2
   1b278:	movw	r2, #24431	; 0x5f6f
   1b27c:	movt	r2, #28530	; 0x6f72
   1b280:	eor	r0, r0, r2
   1b284:	orr	r0, r0, r1
   1b288:	cmp	r0, #0
   1b28c:	bne	1b6f8 <main@@Base+0x4dac>
   1b290:	b	1b294 <main@@Base+0x4948>
   1b294:	ldr	r0, [fp, #-12]
   1b298:	add	r0, r0, #8
   1b29c:	str	r0, [fp, #-12]
   1b2a0:	ldr	r0, [fp, #-12]
   1b2a4:	ldr	r1, [fp, #-16]
   1b2a8:	bl	1c960 <main@@Base+0x6014>
   1b2ac:	str	r1, [fp, #-44]	; 0xffffffd4
   1b2b0:	str	r0, [fp, #-48]	; 0xffffffd0
   1b2b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b2b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b2bc:	movw	r2, #25711	; 0x646f
   1b2c0:	movt	r2, #26207	; 0x665f
   1b2c4:	eor	r1, r1, r2
   1b2c8:	movw	r2, #27749	; 0x6c65
   1b2cc:	movt	r2, #30050	; 0x7562
   1b2d0:	eor	r0, r0, r2
   1b2d4:	orr	r0, r0, r1
   1b2d8:	cmp	r0, #0
   1b2dc:	bne	1b4e4 <main@@Base+0x4b98>
   1b2e0:	b	1b2e4 <main@@Base+0x4998>
   1b2e4:	ldr	r0, [fp, #-12]
   1b2e8:	add	r0, r0, #8
   1b2ec:	str	r0, [fp, #-12]
   1b2f0:	ldr	r0, [fp, #-12]
   1b2f4:	ldr	r1, [fp, #-16]
   1b2f8:	bl	1c960 <main@@Base+0x6014>
   1b2fc:	str	r1, [fp, #-44]	; 0xffffffd4
   1b300:	str	r0, [fp, #-48]	; 0xffffffd0
   1b304:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   1b308:	mov	r1, #1929379840	; 0x73000000
   1b30c:	teq	r1, r0, lsl #24
   1b310:	bne	1b4cc <main@@Base+0x4b80>
   1b314:	b	1b318 <main@@Base+0x49cc>
   1b318:	ldr	r0, [fp, #-8]
   1b31c:	ldr	r1, [fp, #-12]
   1b320:	str	r1, [fp, #-40]	; 0xffffffd8
   1b324:	ldr	r2, [fp, #-16]
   1b328:	movw	r3, #1
   1b32c:	bl	1c998 <main@@Base+0x604c>
   1b330:	str	r0, [fp, #-12]
   1b334:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b338:	ldr	r1, [fp, #-12]
   1b33c:	cmp	r0, r1
   1b340:	beq	1b4b4 <main@@Base+0x4b68>
   1b344:	ldr	r3, [pc, #1196]	; 1b7f8 <main@@Base+0x4eac>
   1b348:	ldr	r0, [fp, #-8]
   1b34c:	ldr	r0, [r0]
   1b350:	movw	r1, #8
   1b354:	movw	r2, #8
   1b358:	uxth	r2, r2
   1b35c:	bl	2c1a4 <flatcc_builder_start_vector@@Base>
   1b360:	cmp	r0, #0
   1b364:	beq	1b36c <main@@Base+0x4a20>
   1b368:	b	1b7d4 <main@@Base+0x4e88>
   1b36c:	ldr	r0, [fp, #-8]
   1b370:	ldr	r1, [fp, #-12]
   1b374:	ldr	r2, [fp, #-16]
   1b378:	sub	r3, fp, #24
   1b37c:	bl	1e1a0 <main@@Base+0x7854>
   1b380:	str	r0, [fp, #-12]
   1b384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b388:	cmp	r0, #0
   1b38c:	beq	1b464 <main@@Base+0x4b18>
   1b390:	vldr	d16, [pc, #1008]	; 1b788 <main@@Base+0x4e3c>
   1b394:	vstr	d16, [sp, #48]	; 0x30
   1b398:	ldr	r0, [fp, #-8]
   1b39c:	ldr	r0, [r0]
   1b3a0:	movw	r1, #1
   1b3a4:	bl	2b6a8 <flatcc_builder_extend_vector@@Base>
   1b3a8:	str	r0, [fp, #-28]	; 0xffffffe4
   1b3ac:	movw	r1, #0
   1b3b0:	cmp	r0, r1
   1b3b4:	bne	1b3c0 <main@@Base+0x4a74>
   1b3b8:	b	1b7d4 <main@@Base+0x4e88>
   1b3bc:	andeq	r4, r4, ip, lsr sp
   1b3c0:	ldr	r0, [fp, #-8]
   1b3c4:	ldr	r1, [fp, #-12]
   1b3c8:	str	r1, [fp, #-40]	; 0xffffffd8
   1b3cc:	ldr	r2, [fp, #-16]
   1b3d0:	add	r3, sp, #48	; 0x30
   1b3d4:	bl	35900 <flatcc_json_parser_double@@Base>
   1b3d8:	str	r0, [fp, #-12]
   1b3dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b3e0:	ldr	r1, [fp, #-12]
   1b3e4:	cmp	r0, r1
   1b3e8:	bne	1b43c <main@@Base+0x4af0>
   1b3ec:	ldr	r0, [pc, #1036]	; 1b800 <main@@Base+0x4eb4>
   1b3f0:	add	r3, pc, r0
   1b3f4:	ldr	r0, [fp, #-8]
   1b3f8:	ldr	r1, [fp, #-12]
   1b3fc:	str	r1, [fp, #-40]	; 0xffffffd8
   1b400:	ldr	r2, [fp, #-16]
   1b404:	add	ip, sp, #48	; 0x30
   1b408:	str	ip, [sp]
   1b40c:	bl	21768 <main@@Base+0xae1c>
   1b410:	str	r0, [fp, #-12]
   1b414:	ldr	r0, [fp, #-12]
   1b418:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b41c:	cmp	r0, r1
   1b420:	beq	1b434 <main@@Base+0x4ae8>
   1b424:	ldr	r0, [fp, #-12]
   1b428:	ldr	r1, [fp, #-16]
   1b42c:	cmp	r0, r1
   1b430:	bne	1b438 <main@@Base+0x4aec>
   1b434:	b	1b7d4 <main@@Base+0x4e88>
   1b438:	b	1b43c <main@@Base+0x4af0>
   1b43c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b440:	vldr	d0, [sp, #48]	; 0x30
   1b444:	bl	21958 <main@@Base+0xb00c>
   1b448:	ldr	r0, [fp, #-8]
   1b44c:	ldr	r1, [fp, #-12]
   1b450:	ldr	r2, [fp, #-16]
   1b454:	sub	r3, fp, #24
   1b458:	bl	1e570 <main@@Base+0x7c24>
   1b45c:	str	r0, [fp, #-12]
   1b460:	b	1b384 <main@@Base+0x4a38>
   1b464:	ldr	r0, [fp, #-8]
   1b468:	ldr	r0, [r0]
   1b46c:	bl	2d684 <flatcc_builder_end_vector@@Base>
   1b470:	str	r0, [fp, #-32]	; 0xffffffe0
   1b474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b478:	cmp	r0, #0
   1b47c:	beq	1b4a0 <main@@Base+0x4b54>
   1b480:	ldr	r0, [fp, #-8]
   1b484:	ldr	r0, [r0]
   1b488:	movw	r1, #33	; 0x21
   1b48c:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   1b490:	str	r0, [fp, #-36]	; 0xffffffdc
   1b494:	movw	r1, #0
   1b498:	cmp	r0, r1
   1b49c:	bne	1b4a4 <main@@Base+0x4b58>
   1b4a0:	b	1b7d4 <main@@Base+0x4e88>
   1b4a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b4a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b4ac:	str	r0, [r1]
   1b4b0:	b	1b4c8 <main@@Base+0x4b7c>
   1b4b4:	ldr	r0, [fp, #-8]
   1b4b8:	ldr	r1, [fp, #-12]
   1b4bc:	ldr	r2, [fp, #-16]
   1b4c0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1b4c4:	str	r0, [fp, #-12]
   1b4c8:	b	1b4e0 <main@@Base+0x4b94>
   1b4cc:	ldr	r0, [fp, #-8]
   1b4d0:	ldr	r1, [fp, #-12]
   1b4d4:	ldr	r2, [fp, #-16]
   1b4d8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1b4dc:	str	r0, [fp, #-12]
   1b4e0:	b	1b6f4 <main@@Base+0x4da8>
   1b4e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b4e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b4ec:	movw	r2, #24428	; 0x5f6c
   1b4f0:	movt	r2, #102	; 0x66
   1b4f4:	eor	r2, r2, r1, lsr #8
   1b4f8:	lsr	r0, r0, #8
   1b4fc:	orr	r0, r0, r1, lsl #24
   1b500:	movw	r1, #26483	; 0x6773
   1b504:	movt	r1, #28526	; 0x6f6e
   1b508:	eor	r0, r0, r1
   1b50c:	orr	r0, r0, r2
   1b510:	cmp	r0, #0
   1b514:	bne	1b6dc <main@@Base+0x4d90>
   1b518:	b	1b520 <main@@Base+0x4bd4>
   1b51c:	strdeq	r4, [r4], -ip
   1b520:	ldr	r0, [fp, #-8]
   1b524:	ldr	r1, [fp, #-12]
   1b528:	str	r1, [fp, #-40]	; 0xffffffd8
   1b52c:	ldr	r2, [fp, #-16]
   1b530:	movw	r3, #7
   1b534:	bl	1c998 <main@@Base+0x604c>
   1b538:	str	r0, [fp, #-12]
   1b53c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b540:	ldr	r1, [fp, #-12]
   1b544:	cmp	r0, r1
   1b548:	beq	1b6c4 <main@@Base+0x4d78>
   1b54c:	ldr	r3, [pc, #676]	; 1b7f8 <main@@Base+0x4eac>
   1b550:	ldr	r0, [fp, #-8]
   1b554:	ldr	r0, [r0]
   1b558:	movw	r1, #8
   1b55c:	movw	r2, #8
   1b560:	uxth	r2, r2
   1b564:	bl	2c1a4 <flatcc_builder_start_vector@@Base>
   1b568:	cmp	r0, #0
   1b56c:	beq	1b574 <main@@Base+0x4c28>
   1b570:	b	1b7d4 <main@@Base+0x4e88>
   1b574:	ldr	r0, [fp, #-8]
   1b578:	ldr	r1, [fp, #-12]
   1b57c:	ldr	r2, [fp, #-16]
   1b580:	sub	r3, fp, #24
   1b584:	bl	1e1a0 <main@@Base+0x7854>
   1b588:	str	r0, [fp, #-12]
   1b58c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b590:	cmp	r0, #0
   1b594:	beq	1b670 <main@@Base+0x4d24>
   1b598:	mov	r0, #0
   1b59c:	str	r0, [sp, #44]	; 0x2c
   1b5a0:	str	r0, [sp, #40]	; 0x28
   1b5a4:	ldr	r0, [fp, #-8]
   1b5a8:	ldr	r0, [r0]
   1b5ac:	movw	r1, #1
   1b5b0:	bl	2b6a8 <flatcc_builder_extend_vector@@Base>
   1b5b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1b5b8:	movw	r1, #0
   1b5bc:	cmp	r0, r1
   1b5c0:	bne	1b5c8 <main@@Base+0x4c7c>
   1b5c4:	b	1b7d4 <main@@Base+0x4e88>
   1b5c8:	ldr	r0, [fp, #-8]
   1b5cc:	ldr	r1, [fp, #-12]
   1b5d0:	str	r1, [fp, #-40]	; 0xffffffd8
   1b5d4:	ldr	r2, [fp, #-16]
   1b5d8:	add	r3, sp, #40	; 0x28
   1b5dc:	bl	20e64 <main@@Base+0xa518>
   1b5e0:	str	r0, [fp, #-12]
   1b5e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b5e8:	ldr	r1, [fp, #-12]
   1b5ec:	cmp	r0, r1
   1b5f0:	bne	1b644 <main@@Base+0x4cf8>
   1b5f4:	ldr	r0, [pc, #512]	; 1b7fc <main@@Base+0x4eb0>
   1b5f8:	add	r3, pc, r0
   1b5fc:	ldr	r0, [fp, #-8]
   1b600:	ldr	r1, [fp, #-12]
   1b604:	str	r1, [fp, #-40]	; 0xffffffd8
   1b608:	ldr	r2, [fp, #-16]
   1b60c:	add	ip, sp, #40	; 0x28
   1b610:	str	ip, [sp]
   1b614:	bl	20f3c <main@@Base+0xa5f0>
   1b618:	str	r0, [fp, #-12]
   1b61c:	ldr	r0, [fp, #-12]
   1b620:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b624:	cmp	r0, r1
   1b628:	beq	1b63c <main@@Base+0x4cf0>
   1b62c:	ldr	r0, [fp, #-12]
   1b630:	ldr	r1, [fp, #-16]
   1b634:	cmp	r0, r1
   1b638:	bne	1b640 <main@@Base+0x4cf4>
   1b63c:	b	1b7d4 <main@@Base+0x4e88>
   1b640:	b	1b644 <main@@Base+0x4cf8>
   1b644:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b648:	ldr	r2, [sp, #40]	; 0x28
   1b64c:	ldr	r3, [sp, #44]	; 0x2c
   1b650:	bl	21138 <main@@Base+0xa7ec>
   1b654:	ldr	r0, [fp, #-8]
   1b658:	ldr	r1, [fp, #-12]
   1b65c:	ldr	r2, [fp, #-16]
   1b660:	sub	r3, fp, #24
   1b664:	bl	1e570 <main@@Base+0x7c24>
   1b668:	str	r0, [fp, #-12]
   1b66c:	b	1b58c <main@@Base+0x4c40>
   1b670:	ldr	r0, [fp, #-8]
   1b674:	ldr	r0, [r0]
   1b678:	bl	2d684 <flatcc_builder_end_vector@@Base>
   1b67c:	str	r0, [fp, #-32]	; 0xffffffe0
   1b680:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b684:	cmp	r0, #0
   1b688:	beq	1b6ac <main@@Base+0x4d60>
   1b68c:	ldr	r0, [fp, #-8]
   1b690:	ldr	r0, [r0]
   1b694:	movw	r1, #32
   1b698:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   1b69c:	str	r0, [fp, #-36]	; 0xffffffdc
   1b6a0:	movw	r1, #0
   1b6a4:	cmp	r0, r1
   1b6a8:	bne	1b6b0 <main@@Base+0x4d64>
   1b6ac:	b	1b7d4 <main@@Base+0x4e88>
   1b6b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b6b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b6b8:	str	r0, [r1]
   1b6bc:	b	1b6d8 <main@@Base+0x4d8c>
   1b6c0:	andeq	r4, r4, r0, asr sl
   1b6c4:	ldr	r0, [fp, #-8]
   1b6c8:	ldr	r1, [fp, #-12]
   1b6cc:	ldr	r2, [fp, #-16]
   1b6d0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1b6d4:	str	r0, [fp, #-12]
   1b6d8:	b	1b6f0 <main@@Base+0x4da4>
   1b6dc:	ldr	r0, [fp, #-8]
   1b6e0:	ldr	r1, [fp, #-12]
   1b6e4:	ldr	r2, [fp, #-16]
   1b6e8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1b6ec:	str	r0, [fp, #-12]
   1b6f0:	b	1b6f4 <main@@Base+0x4da8>
   1b6f4:	b	1b70c <main@@Base+0x4dc0>
   1b6f8:	ldr	r0, [fp, #-8]
   1b6fc:	ldr	r1, [fp, #-12]
   1b700:	ldr	r2, [fp, #-16]
   1b704:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1b708:	str	r0, [fp, #-12]
   1b70c:	b	1b710 <main@@Base+0x4dc4>
   1b710:	b	1b714 <main@@Base+0x4dc8>
   1b714:	b	1b718 <main@@Base+0x4dcc>
   1b718:	b	1b71c <main@@Base+0x4dd0>
   1b71c:	b	1b720 <main@@Base+0x4dd4>
   1b720:	ldr	r0, [fp, #-8]
   1b724:	ldr	r1, [fp, #-12]
   1b728:	ldr	r2, [fp, #-16]
   1b72c:	sub	r3, fp, #24
   1b730:	bl	21984 <main@@Base+0xb038>
   1b734:	str	r0, [fp, #-12]
   1b738:	b	17ecc <main@@Base+0x1580>
   1b73c:	ldr	r0, [fp, #-8]
   1b740:	ldr	r0, [r0, #24]
   1b744:	cmp	r0, #0
   1b748:	beq	1b750 <main@@Base+0x4e04>
   1b74c:	b	1b7d4 <main@@Base+0x4e88>
   1b750:	ldr	r0, [fp, #-8]
   1b754:	ldr	r0, [r0]
   1b758:	movw	r1, #3
   1b75c:	uxth	r1, r1
   1b760:	bl	2cf8c <flatcc_builder_check_required_field@@Base>
   1b764:	cmp	r0, #0
   1b768:	bne	1b790 <main@@Base+0x4e44>
   1b76c:	ldr	r0, [fp, #-8]
   1b770:	ldr	r1, [fp, #-12]
   1b774:	ldr	r2, [fp, #-16]
   1b778:	movw	r3, #29
   1b77c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1b780:	str	r0, [fp, #-12]
   1b784:	b	1b7d4 <main@@Base+0x4e88>
	...
   1b790:	ldr	r0, [fp, #-8]
   1b794:	ldr	r1, [fp, #-12]
   1b798:	ldr	r2, [fp, #-16]
   1b79c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b7a0:	bl	37294 <flatcc_json_parser_finalize_unions@@Base>
   1b7a4:	str	r0, [fp, #-12]
   1b7a8:	ldr	r0, [fp, #-8]
   1b7ac:	ldr	r0, [r0]
   1b7b0:	bl	2d280 <flatcc_builder_end_table@@Base>
   1b7b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b7b8:	str	r0, [r1]
   1b7bc:	cmp	r0, #0
   1b7c0:	bne	1b7c8 <main@@Base+0x4e7c>
   1b7c4:	b	1b7d4 <main@@Base+0x4e88>
   1b7c8:	ldr	r0, [fp, #-12]
   1b7cc:	str	r0, [fp, #-4]
   1b7d0:	b	1b7ec <main@@Base+0x4ea0>
   1b7d4:	ldr	r0, [fp, #-8]
   1b7d8:	ldr	r1, [fp, #-12]
   1b7dc:	ldr	r2, [fp, #-16]
   1b7e0:	movw	r3, #33	; 0x21
   1b7e4:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1b7e8:	str	r0, [fp, #-4]
   1b7ec:	ldr	r0, [fp, #-4]
   1b7f0:	mov	sp, fp
   1b7f4:	pop	{fp, pc}
   1b7f8:	svcne	0x00ffffff
   1b7fc:	andeq	r3, r4, ip, lsl #23
   1b800:	andeq	r3, r4, r8, lsl #27
   1b804:	muleq	r4, ip, r0
   1b808:	andeq	r4, r4, r0, lsl #7
   1b80c:	andeq	r4, r4, ip, asr #9
   1b810:	andeq	r4, r4, ip, lsr r6
   1b814:	andeq	r4, r4, r4, ror r7
   1b818:	andeq	r4, r4, r4, lsl #18
   1b81c:	push	{fp, lr}
   1b820:	mov	fp, sp
   1b824:	sub	sp, sp, #104	; 0x68
   1b828:	ldr	r2, [pc, #1928]	; 1bfb8 <main@@Base+0x566c>
   1b82c:	add	r3, pc, r2
   1b830:	ldr	r2, [pc, #1924]	; 1bfbc <main@@Base+0x5670>
   1b834:	add	r2, pc, r2
   1b838:	str	r0, [fp, #-4]
   1b83c:	str	r1, [fp, #-8]
   1b840:	ldr	r0, [fp, #-4]
   1b844:	ldr	r1, [fp, #-8]
   1b848:	movw	ip, #0
   1b84c:	str	r2, [fp, #-12]
   1b850:	mov	r2, ip
   1b854:	movw	ip, #3
   1b858:	str	ip, [sp]
   1b85c:	ldr	ip, [fp, #-12]
   1b860:	str	ip, [sp, #4]
   1b864:	bl	43df8 <flatcc_json_printer_struct_field@@Base>
   1b868:	ldr	r0, [pc, #1860]	; 1bfb4 <main@@Base+0x5668>
   1b86c:	add	r3, pc, r0
   1b870:	ldr	r0, [fp, #-4]
   1b874:	ldr	r1, [fp, #-8]
   1b878:	movw	r2, #1
   1b87c:	movw	ip, #4
   1b880:	str	ip, [sp]
   1b884:	movw	ip, #150	; 0x96
   1b888:	sxth	ip, ip
   1b88c:	str	ip, [sp, #4]
   1b890:	bl	3ce04 <flatcc_json_printer_int16_field@@Base>
   1b894:	ldr	r0, [pc, #1812]	; 1bfb0 <main@@Base+0x5664>
   1b898:	add	r3, pc, r0
   1b89c:	ldr	r0, [fp, #-4]
   1b8a0:	ldr	r1, [fp, #-8]
   1b8a4:	movw	r2, #2
   1b8a8:	str	r2, [fp, #-16]
   1b8ac:	ldr	ip, [fp, #-16]
   1b8b0:	str	ip, [sp]
   1b8b4:	movw	lr, #100	; 0x64
   1b8b8:	sxth	lr, lr
   1b8bc:	str	lr, [sp, #4]
   1b8c0:	bl	3ce04 <flatcc_json_printer_int16_field@@Base>
   1b8c4:	ldr	r0, [pc, #1760]	; 1bfac <main@@Base+0x5660>
   1b8c8:	add	r3, pc, r0
   1b8cc:	ldr	r0, [fp, #-4]
   1b8d0:	ldr	r1, [fp, #-8]
   1b8d4:	movw	r2, #3
   1b8d8:	movw	ip, #4
   1b8dc:	str	ip, [sp]
   1b8e0:	bl	3c230 <flatcc_json_printer_string_field@@Base>
   1b8e4:	ldr	r0, [pc, #1724]	; 1bfa8 <main@@Base+0x565c>
   1b8e8:	add	r3, pc, r0
   1b8ec:	ldr	r0, [fp, #-4]
   1b8f0:	ldr	r1, [fp, #-8]
   1b8f4:	movw	r2, #5
   1b8f8:	movw	ip, #9
   1b8fc:	str	ip, [sp]
   1b900:	bl	3f2d4 <flatcc_json_printer_uint8_vector_field@@Base>
   1b904:	ldr	r0, [pc, #1684]	; 1bfa0 <main@@Base+0x5654>
   1b908:	add	r3, pc, r0
   1b90c:	ldr	r0, [pc, #1680]	; 1bfa4 <main@@Base+0x5658>
   1b910:	add	r0, pc, r0
   1b914:	ldr	r1, [fp, #-4]
   1b918:	ldr	r2, [fp, #-8]
   1b91c:	str	r0, [fp, #-20]	; 0xffffffec
   1b920:	mov	r0, r1
   1b924:	mov	r1, r2
   1b928:	movw	r2, #6
   1b92c:	movw	ip, #5
   1b930:	str	ip, [sp]
   1b934:	movw	ip, #8
   1b938:	sxtb	ip, ip
   1b93c:	str	ip, [sp, #4]
   1b940:	ldr	ip, [fp, #-20]	; 0xffffffec
   1b944:	str	ip, [sp, #8]
   1b948:	bl	3db24 <flatcc_json_printer_int8_enum_field@@Base>
   1b94c:	ldr	r0, [pc, #1600]	; 1bf94 <main@@Base+0x5648>
   1b950:	add	r3, pc, r0
   1b954:	ldr	r0, [pc, #1596]	; 1bf98 <main@@Base+0x564c>
   1b958:	add	r0, pc, r0
   1b95c:	ldr	r1, [pc, #1592]	; 1bf9c <main@@Base+0x5650>
   1b960:	add	r1, pc, r1
   1b964:	ldr	r2, [fp, #-4]
   1b968:	ldr	ip, [fp, #-8]
   1b96c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b970:	mov	r0, r2
   1b974:	str	r1, [fp, #-28]	; 0xffffffe4
   1b978:	mov	r1, ip
   1b97c:	movw	r2, #8
   1b980:	movw	ip, #4
   1b984:	str	ip, [sp]
   1b988:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1b98c:	str	ip, [sp, #4]
   1b990:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1b994:	str	lr, [sp, #8]
   1b998:	bl	43858 <flatcc_json_printer_union_field@@Base>
   1b99c:	ldr	r0, [pc, #1512]	; 1bf8c <main@@Base+0x5640>
   1b9a0:	add	r3, pc, r0
   1b9a4:	ldr	r0, [pc, #1508]	; 1bf90 <main@@Base+0x5644>
   1b9a8:	add	r0, pc, r0
   1b9ac:	ldr	r1, [fp, #-4]
   1b9b0:	ldr	r2, [fp, #-8]
   1b9b4:	str	r0, [fp, #-32]	; 0xffffffe0
   1b9b8:	mov	r0, r1
   1b9bc:	mov	r1, r2
   1b9c0:	movw	r2, #9
   1b9c4:	movw	ip, #5
   1b9c8:	str	ip, [sp]
   1b9cc:	movw	ip, #4
   1b9d0:	str	ip, [sp, #4]
   1b9d4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1b9d8:	str	ip, [sp, #8]
   1b9dc:	bl	429e8 <flatcc_json_printer_struct_vector_field@@Base>
   1b9e0:	ldr	r0, [pc, #1440]	; 1bf88 <main@@Base+0x563c>
   1b9e4:	add	r3, pc, r0
   1b9e8:	ldr	r0, [fp, #-4]
   1b9ec:	ldr	r1, [fp, #-8]
   1b9f0:	movw	r2, #10
   1b9f4:	movw	ip, #17
   1b9f8:	str	ip, [sp]
   1b9fc:	bl	42d6c <flatcc_json_printer_string_vector_field@@Base>
   1ba00:	ldr	r0, [pc, #1400]	; 1bf80 <main@@Base+0x5634>
   1ba04:	add	r3, pc, r0
   1ba08:	ldr	r0, [pc, #1396]	; 1bf84 <main@@Base+0x5638>
   1ba0c:	add	r0, pc, r0
   1ba10:	ldr	r1, [fp, #-4]
   1ba14:	ldr	r2, [fp, #-8]
   1ba18:	str	r0, [fp, #-36]	; 0xffffffdc
   1ba1c:	mov	r0, r1
   1ba20:	mov	r1, r2
   1ba24:	movw	r2, #11
   1ba28:	movw	ip, #17
   1ba2c:	str	ip, [sp]
   1ba30:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1ba34:	str	ip, [sp, #4]
   1ba38:	bl	42fdc <flatcc_json_printer_table_vector_field@@Base>
   1ba3c:	ldr	r0, [pc, #1332]	; 1bf78 <main@@Base+0x562c>
   1ba40:	add	r3, pc, r0
   1ba44:	ldr	r0, [pc, #1328]	; 1bf7c <main@@Base+0x5630>
   1ba48:	add	r0, pc, r0
   1ba4c:	ldr	r1, [fp, #-4]
   1ba50:	ldr	r2, [fp, #-8]
   1ba54:	str	r0, [fp, #-40]	; 0xffffffd8
   1ba58:	mov	r0, r1
   1ba5c:	mov	r1, r2
   1ba60:	movw	r2, #12
   1ba64:	movw	ip, #5
   1ba68:	str	ip, [sp]
   1ba6c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1ba70:	str	ip, [sp, #4]
   1ba74:	bl	43790 <flatcc_json_printer_table_field@@Base>
   1ba78:	ldr	r0, [pc, #1264]	; 1bf70 <main@@Base+0x5624>
   1ba7c:	add	r3, pc, r0
   1ba80:	ldr	r0, [pc, #1260]	; 1bf74 <main@@Base+0x5628>
   1ba84:	add	r0, pc, r0
   1ba88:	ldr	r1, [fp, #-4]
   1ba8c:	ldr	r2, [fp, #-8]
   1ba90:	str	r0, [fp, #-44]	; 0xffffffd4
   1ba94:	mov	r0, r1
   1ba98:	mov	r1, r2
   1ba9c:	movw	r2, #13
   1baa0:	movw	ip, #20
   1baa4:	str	ip, [sp]
   1baa8:	movw	ip, #0
   1baac:	str	ip, [sp, #4]
   1bab0:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1bab4:	str	ip, [sp, #8]
   1bab8:	bl	444e8 <flatcc_json_printer_table_as_nested_root@@Base>
   1babc:	ldr	r0, [pc, #1188]	; 1bf68 <main@@Base+0x561c>
   1bac0:	add	r3, pc, r0
   1bac4:	ldr	r0, [pc, #1184]	; 1bf6c <main@@Base+0x5620>
   1bac8:	add	r0, pc, r0
   1bacc:	ldr	r1, [fp, #-4]
   1bad0:	ldr	r2, [fp, #-8]
   1bad4:	str	r0, [fp, #-48]	; 0xffffffd0
   1bad8:	mov	r0, r1
   1badc:	mov	r1, r2
   1bae0:	movw	r2, #14
   1bae4:	movw	ip, #9
   1bae8:	str	ip, [sp]
   1baec:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1baf0:	str	ip, [sp, #4]
   1baf4:	bl	43790 <flatcc_json_printer_table_field@@Base>
   1baf8:	ldr	r0, [pc, #1124]	; 1bf64 <main@@Base+0x5618>
   1bafc:	add	r3, pc, r0
   1bb00:	ldr	r0, [fp, #-4]
   1bb04:	ldr	r1, [fp, #-8]
   1bb08:	movw	r2, #15
   1bb0c:	movw	ip, #8
   1bb10:	str	ip, [sp]
   1bb14:	movw	ip, #1
   1bb18:	and	ip, ip, #255	; 0xff
   1bb1c:	str	ip, [sp, #4]
   1bb20:	bl	3d1c4 <flatcc_json_printer_bool_field@@Base>
   1bb24:	ldr	r0, [pc, #1076]	; 1bf60 <main@@Base+0x5614>
   1bb28:	add	r3, pc, r0
   1bb2c:	ldr	r0, [fp, #-4]
   1bb30:	ldr	r1, [fp, #-8]
   1bb34:	movw	r2, #16
   1bb38:	str	r2, [sp, #52]	; 0x34
   1bb3c:	ldr	ip, [sp, #52]	; 0x34
   1bb40:	str	ip, [sp]
   1bb44:	movw	lr, #0
   1bb48:	str	lr, [sp, #4]
   1bb4c:	bl	3cf34 <flatcc_json_printer_int32_field@@Base>
   1bb50:	ldr	r0, [pc, #1028]	; 1bf5c <main@@Base+0x5610>
   1bb54:	add	r3, pc, r0
   1bb58:	ldr	r0, [fp, #-4]
   1bb5c:	ldr	r1, [fp, #-8]
   1bb60:	movw	r2, #17
   1bb64:	movw	ip, #16
   1bb68:	str	ip, [sp]
   1bb6c:	movw	ip, #0
   1bb70:	str	ip, [sp, #4]
   1bb74:	bl	3ca44 <flatcc_json_printer_uint32_field@@Base>
   1bb78:	ldr	r0, [pc, #984]	; 1bf58 <main@@Base+0x560c>
   1bb7c:	add	r0, pc, r0
   1bb80:	ldr	r1, [fp, #-4]
   1bb84:	ldr	r2, [fp, #-8]
   1bb88:	mov	r3, sp
   1bb8c:	mov	ip, #0
   1bb90:	str	ip, [r3, #12]
   1bb94:	str	ip, [r3, #8]
   1bb98:	mov	ip, #16
   1bb9c:	str	ip, [r3]
   1bba0:	ldr	r3, [pc, #1048]	; 1bfc0 <main@@Base+0x5674>
   1bba4:	add	r3, pc, r3
   1bba8:	mov	ip, #18
   1bbac:	str	r0, [sp, #48]	; 0x30
   1bbb0:	mov	r0, r1
   1bbb4:	mov	r1, r2
   1bbb8:	mov	r2, ip
   1bbbc:	bl	3d05c <flatcc_json_printer_int64_field@@Base>
   1bbc0:	ldr	r0, [pc, #908]	; 1bf54 <main@@Base+0x5608>
   1bbc4:	add	r0, pc, r0
   1bbc8:	ldr	r1, [fp, #-4]
   1bbcc:	ldr	r2, [fp, #-8]
   1bbd0:	mov	r3, sp
   1bbd4:	mov	ip, #0
   1bbd8:	str	ip, [r3, #12]
   1bbdc:	str	ip, [r3, #8]
   1bbe0:	mov	ip, #16
   1bbe4:	str	ip, [r3]
   1bbe8:	ldr	r3, [pc, #980]	; 1bfc4 <main@@Base+0x5678>
   1bbec:	add	r3, pc, r3
   1bbf0:	mov	ip, #19
   1bbf4:	str	r0, [sp, #44]	; 0x2c
   1bbf8:	mov	r0, r1
   1bbfc:	mov	r1, r2
   1bc00:	mov	r2, ip
   1bc04:	bl	3cb6c <flatcc_json_printer_uint64_field@@Base>
   1bc08:	ldr	r0, [pc, #832]	; 1bf50 <main@@Base+0x5604>
   1bc0c:	add	r3, pc, r0
   1bc10:	ldr	r0, [fp, #-4]
   1bc14:	ldr	r1, [fp, #-8]
   1bc18:	movw	r2, #20
   1bc1c:	movw	ip, #17
   1bc20:	str	ip, [sp]
   1bc24:	movw	ip, #0
   1bc28:	str	ip, [sp, #4]
   1bc2c:	bl	3cf34 <flatcc_json_printer_int32_field@@Base>
   1bc30:	ldr	r0, [pc, #788]	; 1bf4c <main@@Base+0x5600>
   1bc34:	add	r3, pc, r0
   1bc38:	ldr	r0, [fp, #-4]
   1bc3c:	ldr	r1, [fp, #-8]
   1bc40:	movw	r2, #21
   1bc44:	movw	ip, #17
   1bc48:	str	ip, [sp]
   1bc4c:	movw	ip, #0
   1bc50:	str	ip, [sp, #4]
   1bc54:	bl	3ca44 <flatcc_json_printer_uint32_field@@Base>
   1bc58:	ldr	r0, [pc, #744]	; 1bf48 <main@@Base+0x55fc>
   1bc5c:	add	r0, pc, r0
   1bc60:	ldr	r1, [fp, #-4]
   1bc64:	ldr	r2, [fp, #-8]
   1bc68:	mov	r3, sp
   1bc6c:	mov	ip, #0
   1bc70:	str	ip, [r3, #12]
   1bc74:	str	ip, [r3, #8]
   1bc78:	mov	ip, #17
   1bc7c:	str	ip, [r3]
   1bc80:	ldr	r3, [pc, #832]	; 1bfc8 <main@@Base+0x567c>
   1bc84:	add	r3, pc, r3
   1bc88:	mov	ip, #22
   1bc8c:	str	r0, [sp, #40]	; 0x28
   1bc90:	mov	r0, r1
   1bc94:	mov	r1, r2
   1bc98:	mov	r2, ip
   1bc9c:	bl	3d05c <flatcc_json_printer_int64_field@@Base>
   1bca0:	ldr	r0, [pc, #668]	; 1bf44 <main@@Base+0x55f8>
   1bca4:	add	r0, pc, r0
   1bca8:	ldr	r1, [fp, #-4]
   1bcac:	ldr	r2, [fp, #-8]
   1bcb0:	mov	r3, sp
   1bcb4:	mov	ip, #0
   1bcb8:	str	ip, [r3, #12]
   1bcbc:	str	ip, [r3, #8]
   1bcc0:	mov	ip, #17
   1bcc4:	str	ip, [r3]
   1bcc8:	ldr	r3, [pc, #764]	; 1bfcc <main@@Base+0x5680>
   1bccc:	add	r3, pc, r3
   1bcd0:	mov	ip, #23
   1bcd4:	str	r0, [sp, #36]	; 0x24
   1bcd8:	mov	r0, r1
   1bcdc:	mov	r1, r2
   1bce0:	mov	r2, ip
   1bce4:	bl	3cb6c <flatcc_json_printer_uint64_field@@Base>
   1bce8:	ldr	r0, [pc, #592]	; 1bf40 <main@@Base+0x55f4>
   1bcec:	add	r3, pc, r0
   1bcf0:	ldr	r0, [fp, #-4]
   1bcf4:	ldr	r1, [fp, #-8]
   1bcf8:	movw	r2, #24
   1bcfc:	movw	ip, #16
   1bd00:	str	ip, [sp]
   1bd04:	bl	40694 <flatcc_json_printer_bool_vector_field@@Base>
   1bd08:	ldr	r0, [pc, #552]	; 1bf38 <main@@Base+0x55ec>
   1bd0c:	add	r3, pc, r0
   1bd10:	vldr	s0, [pc, #548]	; 1bf3c <main@@Base+0x55f0>
   1bd14:	ldr	r0, [fp, #-4]
   1bd18:	ldr	r1, [fp, #-8]
   1bd1c:	movw	r2, #25
   1bd20:	movw	ip, #5
   1bd24:	str	ip, [sp]
   1bd28:	bl	3d3a0 <flatcc_json_printer_float_field@@Base>
   1bd2c:	ldr	r0, [pc, #512]	; 1bf34 <main@@Base+0x55e8>
   1bd30:	add	r3, pc, r0
   1bd34:	ldr	r0, [fp, #-4]
   1bd38:	ldr	r1, [fp, #-8]
   1bd3c:	movw	r2, #26
   1bd40:	movw	ip, #6
   1bd44:	str	ip, [sp]
   1bd48:	vmov.f32	s0, #8	; 0x40400000  3.0
   1bd4c:	bl	3d3a0 <flatcc_json_printer_float_field@@Base>
   1bd50:	ldr	r0, [pc, #468]	; 1bf2c <main@@Base+0x55e0>
   1bd54:	add	r3, pc, r0
   1bd58:	vldr	s0, [pc, #464]	; 1bf30 <main@@Base+0x55e4>
   1bd5c:	ldr	r0, [fp, #-4]
   1bd60:	ldr	r1, [fp, #-8]
   1bd64:	movw	r2, #27
   1bd68:	movw	ip, #6
   1bd6c:	str	ip, [sp]
   1bd70:	bl	3d3a0 <flatcc_json_printer_float_field@@Base>
   1bd74:	ldr	r0, [pc, #428]	; 1bf28 <main@@Base+0x55dc>
   1bd78:	add	r3, pc, r0
   1bd7c:	ldr	r0, [fp, #-4]
   1bd80:	ldr	r1, [fp, #-8]
   1bd84:	movw	r2, #28
   1bd88:	movw	ip, #18
   1bd8c:	str	ip, [sp]
   1bd90:	bl	42d6c <flatcc_json_printer_string_vector_field@@Base>
   1bd94:	ldr	r0, [pc, #388]	; 1bf20 <main@@Base+0x55d4>
   1bd98:	add	r3, pc, r0
   1bd9c:	ldr	r0, [pc, #384]	; 1bf24 <main@@Base+0x55d8>
   1bda0:	add	r0, pc, r0
   1bda4:	ldr	r1, [fp, #-4]
   1bda8:	ldr	r2, [fp, #-8]
   1bdac:	str	r0, [sp, #32]
   1bdb0:	mov	r0, r1
   1bdb4:	mov	r1, r2
   1bdb8:	movw	r2, #29
   1bdbc:	movw	ip, #23
   1bdc0:	str	ip, [sp]
   1bdc4:	movw	ip, #8
   1bdc8:	str	ip, [sp, #4]
   1bdcc:	ldr	ip, [sp, #32]
   1bdd0:	str	ip, [sp, #8]
   1bdd4:	bl	429e8 <flatcc_json_printer_struct_vector_field@@Base>
   1bdd8:	ldr	r0, [pc, #316]	; 1bf1c <main@@Base+0x55d0>
   1bddc:	add	r3, pc, r0
   1bde0:	ldr	r0, [fp, #-4]
   1bde4:	ldr	r1, [fp, #-8]
   1bde8:	movw	r2, #30
   1bdec:	movw	ip, #4
   1bdf0:	str	ip, [sp]
   1bdf4:	bl	3f2d4 <flatcc_json_printer_uint8_vector_field@@Base>
   1bdf8:	ldr	r0, [pc, #276]	; 1bf14 <main@@Base+0x55c8>
   1bdfc:	add	r3, pc, r0
   1be00:	ldr	r0, [pc, #272]	; 1bf18 <main@@Base+0x55cc>
   1be04:	add	r0, pc, r0
   1be08:	ldr	r1, [fp, #-4]
   1be0c:	ldr	r2, [fp, #-8]
   1be10:	str	r0, [sp, #28]
   1be14:	mov	r0, r1
   1be18:	mov	r1, r2
   1be1c:	movw	r2, #31
   1be20:	movw	ip, #5
   1be24:	str	ip, [sp]
   1be28:	movw	ip, #4
   1be2c:	str	ip, [sp, #4]
   1be30:	ldr	ip, [sp, #28]
   1be34:	str	ip, [sp, #8]
   1be38:	bl	429e8 <flatcc_json_printer_struct_vector_field@@Base>
   1be3c:	ldr	r0, [pc, #204]	; 1bf10 <main@@Base+0x55c4>
   1be40:	add	r3, pc, r0
   1be44:	ldr	r0, [fp, #-4]
   1be48:	ldr	r1, [fp, #-8]
   1be4c:	movw	r2, #32
   1be50:	movw	ip, #15
   1be54:	str	ip, [sp]
   1be58:	bl	40420 <flatcc_json_printer_int64_vector_field@@Base>
   1be5c:	ldr	r0, [pc, #168]	; 1bf0c <main@@Base+0x55c0>
   1be60:	add	r3, pc, r0
   1be64:	ldr	r0, [fp, #-4]
   1be68:	ldr	r1, [fp, #-8]
   1be6c:	movw	r2, #33	; 0x21
   1be70:	movw	ip, #17
   1be74:	str	ip, [sp]
   1be78:	bl	40b8c <flatcc_json_printer_double_vector_field@@Base>
   1be7c:	ldr	r0, [pc, #128]	; 1bf04 <main@@Base+0x55b8>
   1be80:	add	r3, pc, r0
   1be84:	ldr	r0, [pc, #124]	; 1bf08 <main@@Base+0x55bc>
   1be88:	add	r0, pc, r0
   1be8c:	ldr	r1, [fp, #-4]
   1be90:	ldr	r2, [fp, #-8]
   1be94:	str	r0, [sp, #24]
   1be98:	mov	r0, r1
   1be9c:	mov	r1, r2
   1bea0:	movw	r2, #34	; 0x22
   1bea4:	movw	ip, #21
   1bea8:	str	ip, [sp]
   1beac:	ldr	ip, [sp, #24]
   1beb0:	str	ip, [sp, #4]
   1beb4:	bl	43790 <flatcc_json_printer_table_field@@Base>
   1beb8:	ldr	r0, [pc, #60]	; 1befc <main@@Base+0x55b0>
   1bebc:	add	r3, pc, r0
   1bec0:	ldr	r0, [pc, #56]	; 1bf00 <main@@Base+0x55b4>
   1bec4:	add	r0, pc, r0
   1bec8:	ldr	r1, [fp, #-4]
   1becc:	ldr	r2, [fp, #-8]
   1bed0:	str	r0, [sp, #20]
   1bed4:	mov	r0, r1
   1bed8:	mov	r1, r2
   1bedc:	movw	r2, #35	; 0x23
   1bee0:	movw	ip, #10
   1bee4:	str	ip, [sp]
   1bee8:	ldr	ip, [sp, #20]
   1beec:	str	ip, [sp, #4]
   1bef0:	bl	43790 <flatcc_json_printer_table_field@@Base>
   1bef4:	mov	sp, fp
   1bef8:	pop	{fp, pc}
   1befc:	andeq	lr, r2, r0, asr #26
   1bf00:			; <UNDEFINED> instruction: 0x0000c4b0
   1bf04:	andeq	lr, r2, r6, ror #26
   1bf08:	ldrdeq	ip, [r0], -r8
   1bf0c:	andeq	lr, r2, r4, ror sp
   1bf10:	andeq	lr, r2, r4, lsl #27
   1bf14:	andeq	lr, r2, r2, asr #27
   1bf18:	andeq	ip, r0, r0, ror r3
   1bf1c:	ldrdeq	lr, [r2], -sp
   1bf20:	andeq	lr, r2, r9, lsl #28
   1bf24:	andeq	ip, r0, ip, lsr #10
   1bf28:	andeq	lr, r2, r6, lsl lr
   1bf2c:	andeq	lr, r2, r3, lsr lr
   1bf30:	andeq	r0, r0, r0
   1bf34:	andeq	lr, r2, r0, asr lr
   1bf38:	andeq	lr, r2, lr, ror #28
   1bf3c:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   1bf40:	andeq	lr, r2, sp, ror lr
   1bf44:			; <UNDEFINED> instruction: 0x0002eeb3
   1bf48:	andeq	lr, r2, r9, ror #29
   1bf4c:	strdeq	lr, [r2], -pc	; <UNPREDICTABLE>
   1bf50:	andeq	lr, r2, r5, lsl pc
   1bf54:	andeq	lr, r2, ip, asr #30
   1bf58:	andeq	lr, r2, r3, lsl #31
   1bf5c:	muleq	r2, sl, pc	; <UNPREDICTABLE>
   1bf60:			; <UNDEFINED> instruction: 0x0002efb5
   1bf64:	ldrdeq	lr, [r2], -r8
   1bf68:	andeq	pc, r2, sl
   1bf6c:	andeq	ip, r0, r4, asr #14
   1bf70:	andeq	pc, r2, r9, lsr r0	; <UNPREDICTABLE>
   1bf74:			; <UNDEFINED> instruction: 0xfffffd90
   1bf78:	andeq	pc, r2, pc, rrx
   1bf7c:			; <UNDEFINED> instruction: 0xfffffdcc
   1bf80:	muleq	r2, r9, r0
   1bf84:			; <UNDEFINED> instruction: 0xfffffe08
   1bf88:	andeq	pc, r2, r7, lsr #1
   1bf8c:	andeq	pc, r2, r5, ror #1
   1bf90:	andeq	ip, r0, ip, asr #15
   1bf94:	andeq	pc, r2, r7, lsr #5
   1bf98:	andeq	ip, r0, ip, ror r6
   1bf9c:	andeq	ip, r0, ip, asr #14
   1bfa0:	andeq	pc, r2, r7, ror r1	; <UNPREDICTABLE>
   1bfa4:	muleq	r0, r4, r5
   1bfa8:	andeq	pc, r2, sp, lsl #3
   1bfac:	andeq	pc, r2, r8, lsr #3
   1bfb0:	ldrdeq	pc, [r2], -r5
   1bfb4:	strdeq	pc, [r2], -ip
   1bfb8:	andeq	pc, r2, r8, lsr r2	; <UNPREDICTABLE>
   1bfbc:			; <UNDEFINED> instruction: 0x0000c4b4
   1bfc0:	andeq	lr, r2, fp, asr pc
   1bfc4:	andeq	lr, r2, r4, lsr #30
   1bfc8:	andeq	lr, r2, r1, asr #29
   1bfcc:	andeq	lr, r2, fp, lsl #29
   1bfd0:	push	{fp, lr}
   1bfd4:	mov	fp, sp
   1bfd8:	sub	sp, sp, #56	; 0x38
   1bfdc:	str	r0, [fp, #-8]
   1bfe0:	ldr	r0, [fp, #-8]
   1bfe4:	movw	r1, #0
   1bfe8:	uxth	r1, r1
   1bfec:	movw	r2, #32
   1bff0:	movw	r3, #16
   1bff4:	uxth	r3, r3
   1bff8:	bl	308d0 <flatcc_verify_field@@Base>
   1bffc:	str	r0, [fp, #-12]
   1c000:	cmp	r0, #0
   1c004:	beq	1c014 <main@@Base+0x56c8>
   1c008:	ldr	r0, [fp, #-12]
   1c00c:	str	r0, [fp, #-4]
   1c010:	b	1c7a0 <main@@Base+0x5e54>
   1c014:	ldr	r0, [fp, #-8]
   1c018:	movw	r1, #2
   1c01c:	uxth	r2, r1
   1c020:	str	r1, [fp, #-16]
   1c024:	mov	r1, r2
   1c028:	movw	r2, #2
   1c02c:	ldr	r3, [fp, #-16]
   1c030:	uxth	r3, r3
   1c034:	bl	308d0 <flatcc_verify_field@@Base>
   1c038:	str	r0, [fp, #-12]
   1c03c:	cmp	r0, #0
   1c040:	beq	1c050 <main@@Base+0x5704>
   1c044:	ldr	r0, [fp, #-12]
   1c048:	str	r0, [fp, #-4]
   1c04c:	b	1c7a0 <main@@Base+0x5e54>
   1c050:	ldr	r0, [fp, #-8]
   1c054:	movw	r1, #1
   1c058:	uxth	r1, r1
   1c05c:	movw	r2, #2
   1c060:	movw	r3, #2
   1c064:	uxth	r3, r3
   1c068:	bl	308d0 <flatcc_verify_field@@Base>
   1c06c:	str	r0, [fp, #-12]
   1c070:	cmp	r0, #0
   1c074:	beq	1c084 <main@@Base+0x5738>
   1c078:	ldr	r0, [fp, #-12]
   1c07c:	str	r0, [fp, #-4]
   1c080:	b	1c7a0 <main@@Base+0x5e54>
   1c084:	ldr	r0, [fp, #-8]
   1c088:	movw	r1, #3
   1c08c:	uxth	r1, r1
   1c090:	movw	r2, #1
   1c094:	bl	30adc <flatcc_verify_string_field@@Base>
   1c098:	str	r0, [fp, #-12]
   1c09c:	cmp	r0, #0
   1c0a0:	beq	1c0b0 <main@@Base+0x5764>
   1c0a4:	ldr	r0, [fp, #-12]
   1c0a8:	str	r0, [fp, #-4]
   1c0ac:	b	1c7a0 <main@@Base+0x5e54>
   1c0b0:	ldr	r0, [fp, #-8]
   1c0b4:	movw	r1, #6
   1c0b8:	uxth	r1, r1
   1c0bc:	movw	r2, #1
   1c0c0:	movw	r3, #1
   1c0c4:	uxth	r3, r3
   1c0c8:	bl	308d0 <flatcc_verify_field@@Base>
   1c0cc:	str	r0, [fp, #-12]
   1c0d0:	cmp	r0, #0
   1c0d4:	beq	1c0e4 <main@@Base+0x5798>
   1c0d8:	ldr	r0, [fp, #-12]
   1c0dc:	str	r0, [fp, #-4]
   1c0e0:	b	1c7a0 <main@@Base+0x5e54>
   1c0e4:	ldr	r0, [fp, #-8]
   1c0e8:	movw	r1, #5
   1c0ec:	uxth	r1, r1
   1c0f0:	movw	r2, #0
   1c0f4:	movw	r3, #1
   1c0f8:	movw	ip, #1
   1c0fc:	uxth	ip, ip
   1c100:	str	ip, [sp]
   1c104:	mvn	ip, #0
   1c108:	str	ip, [sp, #4]
   1c10c:	bl	30e38 <flatcc_verify_vector_field@@Base>
   1c110:	str	r0, [fp, #-12]
   1c114:	cmp	r0, #0
   1c118:	beq	1c128 <main@@Base+0x57dc>
   1c11c:	ldr	r0, [fp, #-12]
   1c120:	str	r0, [fp, #-4]
   1c124:	b	1c7a0 <main@@Base+0x5e54>
   1c128:	ldr	r0, [pc, #1660]	; 1c7ac <main@@Base+0x5e60>
   1c12c:	add	r3, pc, r0
   1c130:	ldr	r0, [fp, #-8]
   1c134:	movw	r1, #11
   1c138:	uxth	r1, r1
   1c13c:	movw	r2, #0
   1c140:	bl	316b0 <flatcc_verify_table_vector_field@@Base>
   1c144:	str	r0, [fp, #-12]
   1c148:	cmp	r0, #0
   1c14c:	beq	1c15c <main@@Base+0x5810>
   1c150:	ldr	r0, [fp, #-12]
   1c154:	str	r0, [fp, #-4]
   1c158:	b	1c7a0 <main@@Base+0x5e54>
   1c15c:	ldr	r0, [fp, #-8]
   1c160:	movw	r1, #10
   1c164:	uxth	r1, r1
   1c168:	movw	r2, #0
   1c16c:	bl	3106c <flatcc_verify_string_vector_field@@Base>
   1c170:	str	r0, [fp, #-12]
   1c174:	cmp	r0, #0
   1c178:	beq	1c188 <main@@Base+0x583c>
   1c17c:	ldr	r0, [fp, #-12]
   1c180:	str	r0, [fp, #-4]
   1c184:	b	1c7a0 <main@@Base+0x5e54>
   1c188:	ldr	r0, [fp, #-8]
   1c18c:	movw	r1, #28
   1c190:	uxth	r1, r1
   1c194:	movw	r2, #0
   1c198:	bl	3106c <flatcc_verify_string_vector_field@@Base>
   1c19c:	str	r0, [fp, #-12]
   1c1a0:	cmp	r0, #0
   1c1a4:	beq	1c1b4 <main@@Base+0x5868>
   1c1a8:	ldr	r0, [fp, #-12]
   1c1ac:	str	r0, [fp, #-4]
   1c1b0:	b	1c7a0 <main@@Base+0x5e54>
   1c1b4:	ldr	r0, [fp, #-8]
   1c1b8:	movw	r1, #24
   1c1bc:	uxth	r1, r1
   1c1c0:	movw	r2, #0
   1c1c4:	movw	r3, #1
   1c1c8:	movw	ip, #1
   1c1cc:	uxth	ip, ip
   1c1d0:	str	ip, [sp]
   1c1d4:	mvn	ip, #0
   1c1d8:	str	ip, [sp, #4]
   1c1dc:	bl	30e38 <flatcc_verify_vector_field@@Base>
   1c1e0:	str	r0, [fp, #-12]
   1c1e4:	cmp	r0, #0
   1c1e8:	beq	1c1f8 <main@@Base+0x58ac>
   1c1ec:	ldr	r0, [fp, #-12]
   1c1f0:	str	r0, [fp, #-4]
   1c1f4:	b	1c7a0 <main@@Base+0x5e54>
   1c1f8:	ldr	r0, [pc, #1456]	; 1c7b0 <main@@Base+0x5e64>
   1c1fc:	ldr	r1, [fp, #-8]
   1c200:	str	r0, [fp, #-20]	; 0xffffffec
   1c204:	mov	r0, r1
   1c208:	movw	r1, #29
   1c20c:	uxth	r1, r1
   1c210:	movw	r2, #0
   1c214:	movw	r3, #8
   1c218:	movw	ip, #4
   1c21c:	uxth	ip, ip
   1c220:	str	ip, [sp]
   1c224:	ldr	ip, [fp, #-20]	; 0xffffffec
   1c228:	str	ip, [sp, #4]
   1c22c:	bl	30e38 <flatcc_verify_vector_field@@Base>
   1c230:	str	r0, [fp, #-12]
   1c234:	cmp	r0, #0
   1c238:	beq	1c248 <main@@Base+0x58fc>
   1c23c:	ldr	r0, [fp, #-12]
   1c240:	str	r0, [fp, #-4]
   1c244:	b	1c7a0 <main@@Base+0x5e54>
   1c248:	ldr	r0, [pc, #1380]	; 1c7b4 <main@@Base+0x5e68>
   1c24c:	add	r3, pc, r0
   1c250:	ldr	r0, [fp, #-8]
   1c254:	movw	r1, #12
   1c258:	uxth	r1, r1
   1c25c:	movw	r2, #0
   1c260:	bl	312ec <flatcc_verify_table_field@@Base>
   1c264:	str	r0, [fp, #-12]
   1c268:	cmp	r0, #0
   1c26c:	beq	1c27c <main@@Base+0x5930>
   1c270:	ldr	r0, [fp, #-12]
   1c274:	str	r0, [fp, #-4]
   1c278:	b	1c7a0 <main@@Base+0x5e54>
   1c27c:	ldr	r0, [pc, #1332]	; 1c7b8 <main@@Base+0x5e6c>
   1c280:	add	r3, pc, r0
   1c284:	ldr	r0, [fp, #-8]
   1c288:	movw	r1, #8
   1c28c:	uxth	r1, r1
   1c290:	movw	r2, #0
   1c294:	bl	32538 <flatcc_verify_union_field@@Base>
   1c298:	str	r0, [fp, #-12]
   1c29c:	cmp	r0, #0
   1c2a0:	beq	1c2b0 <main@@Base+0x5964>
   1c2a4:	ldr	r0, [fp, #-12]
   1c2a8:	str	r0, [fp, #-4]
   1c2ac:	b	1c7a0 <main@@Base+0x5e54>
   1c2b0:	ldr	r0, [pc, #1284]	; 1c7bc <main@@Base+0x5e70>
   1c2b4:	ldr	r1, [fp, #-8]
   1c2b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c2bc:	mov	r0, r1
   1c2c0:	movw	r1, #9
   1c2c4:	uxth	r1, r1
   1c2c8:	movw	r2, #0
   1c2cc:	movw	r3, #4
   1c2d0:	movw	ip, #2
   1c2d4:	uxth	ip, ip
   1c2d8:	str	ip, [sp]
   1c2dc:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1c2e0:	str	ip, [sp, #4]
   1c2e4:	bl	30e38 <flatcc_verify_vector_field@@Base>
   1c2e8:	str	r0, [fp, #-12]
   1c2ec:	cmp	r0, #0
   1c2f0:	beq	1c300 <main@@Base+0x59b4>
   1c2f4:	ldr	r0, [fp, #-12]
   1c2f8:	str	r0, [fp, #-4]
   1c2fc:	b	1c7a0 <main@@Base+0x5e54>
   1c300:	ldr	r0, [pc, #1204]	; 1c7bc <main@@Base+0x5e70>
   1c304:	ldr	r1, [fp, #-8]
   1c308:	str	r0, [sp, #28]
   1c30c:	mov	r0, r1
   1c310:	movw	r1, #31
   1c314:	uxth	r1, r1
   1c318:	movw	r2, #0
   1c31c:	movw	r3, #4
   1c320:	movw	ip, #2
   1c324:	uxth	ip, ip
   1c328:	str	ip, [sp]
   1c32c:	ldr	ip, [sp, #28]
   1c330:	str	ip, [sp, #4]
   1c334:	bl	30e38 <flatcc_verify_vector_field@@Base>
   1c338:	str	r0, [fp, #-12]
   1c33c:	cmp	r0, #0
   1c340:	beq	1c350 <main@@Base+0x5a04>
   1c344:	ldr	r0, [fp, #-12]
   1c348:	str	r0, [fp, #-4]
   1c34c:	b	1c7a0 <main@@Base+0x5e54>
   1c350:	ldr	r0, [pc, #1128]	; 1c7c0 <main@@Base+0x5e74>
   1c354:	add	r0, pc, r0
   1c358:	ldr	r1, [fp, #-8]
   1c35c:	str	r0, [sp, #24]
   1c360:	mov	r0, r1
   1c364:	movw	r1, #13
   1c368:	uxth	r1, r1
   1c36c:	movw	r2, #0
   1c370:	str	r2, [sp, #20]
   1c374:	ldr	r3, [sp, #20]
   1c378:	movw	ip, #1
   1c37c:	uxth	ip, ip
   1c380:	str	ip, [sp]
   1c384:	ldr	ip, [sp, #24]
   1c388:	str	ip, [sp, #4]
   1c38c:	bl	32390 <flatcc_verify_table_as_nested_root@@Base>
   1c390:	str	r0, [fp, #-12]
   1c394:	cmp	r0, #0
   1c398:	beq	1c3a8 <main@@Base+0x5a5c>
   1c39c:	ldr	r0, [fp, #-12]
   1c3a0:	str	r0, [fp, #-4]
   1c3a4:	b	1c7a0 <main@@Base+0x5e54>
   1c3a8:	ldr	r0, [pc, #1044]	; 1c7c4 <main@@Base+0x5e78>
   1c3ac:	add	r3, pc, r0
   1c3b0:	ldr	r0, [fp, #-8]
   1c3b4:	movw	r1, #14
   1c3b8:	uxth	r1, r1
   1c3bc:	movw	r2, #0
   1c3c0:	bl	312ec <flatcc_verify_table_field@@Base>
   1c3c4:	str	r0, [fp, #-12]
   1c3c8:	cmp	r0, #0
   1c3cc:	beq	1c3dc <main@@Base+0x5a90>
   1c3d0:	ldr	r0, [fp, #-12]
   1c3d4:	str	r0, [fp, #-4]
   1c3d8:	b	1c7a0 <main@@Base+0x5e54>
   1c3dc:	ldr	r0, [fp, #-8]
   1c3e0:	movw	r1, #15
   1c3e4:	uxth	r1, r1
   1c3e8:	movw	r2, #1
   1c3ec:	movw	r3, #1
   1c3f0:	uxth	r3, r3
   1c3f4:	bl	308d0 <flatcc_verify_field@@Base>
   1c3f8:	str	r0, [fp, #-12]
   1c3fc:	cmp	r0, #0
   1c400:	beq	1c410 <main@@Base+0x5ac4>
   1c404:	ldr	r0, [fp, #-12]
   1c408:	str	r0, [fp, #-4]
   1c40c:	b	1c7a0 <main@@Base+0x5e54>
   1c410:	ldr	r0, [fp, #-8]
   1c414:	movw	r1, #16
   1c418:	uxth	r1, r1
   1c41c:	movw	r2, #4
   1c420:	movw	r3, #4
   1c424:	uxth	r3, r3
   1c428:	bl	308d0 <flatcc_verify_field@@Base>
   1c42c:	str	r0, [fp, #-12]
   1c430:	cmp	r0, #0
   1c434:	beq	1c444 <main@@Base+0x5af8>
   1c438:	ldr	r0, [fp, #-12]
   1c43c:	str	r0, [fp, #-4]
   1c440:	b	1c7a0 <main@@Base+0x5e54>
   1c444:	ldr	r0, [fp, #-8]
   1c448:	movw	r1, #17
   1c44c:	uxth	r1, r1
   1c450:	movw	r2, #4
   1c454:	movw	r3, #4
   1c458:	uxth	r3, r3
   1c45c:	bl	308d0 <flatcc_verify_field@@Base>
   1c460:	str	r0, [fp, #-12]
   1c464:	cmp	r0, #0
   1c468:	beq	1c478 <main@@Base+0x5b2c>
   1c46c:	ldr	r0, [fp, #-12]
   1c470:	str	r0, [fp, #-4]
   1c474:	b	1c7a0 <main@@Base+0x5e54>
   1c478:	ldr	r0, [fp, #-8]
   1c47c:	movw	r1, #18
   1c480:	uxth	r1, r1
   1c484:	movw	r2, #8
   1c488:	movw	r3, #8
   1c48c:	uxth	r3, r3
   1c490:	bl	308d0 <flatcc_verify_field@@Base>
   1c494:	str	r0, [fp, #-12]
   1c498:	cmp	r0, #0
   1c49c:	beq	1c4ac <main@@Base+0x5b60>
   1c4a0:	ldr	r0, [fp, #-12]
   1c4a4:	str	r0, [fp, #-4]
   1c4a8:	b	1c7a0 <main@@Base+0x5e54>
   1c4ac:	ldr	r0, [fp, #-8]
   1c4b0:	movw	r1, #19
   1c4b4:	uxth	r1, r1
   1c4b8:	movw	r2, #8
   1c4bc:	movw	r3, #8
   1c4c0:	uxth	r3, r3
   1c4c4:	bl	308d0 <flatcc_verify_field@@Base>
   1c4c8:	str	r0, [fp, #-12]
   1c4cc:	cmp	r0, #0
   1c4d0:	beq	1c4e0 <main@@Base+0x5b94>
   1c4d4:	ldr	r0, [fp, #-12]
   1c4d8:	str	r0, [fp, #-4]
   1c4dc:	b	1c7a0 <main@@Base+0x5e54>
   1c4e0:	ldr	r0, [fp, #-8]
   1c4e4:	movw	r1, #20
   1c4e8:	uxth	r1, r1
   1c4ec:	movw	r2, #4
   1c4f0:	movw	r3, #4
   1c4f4:	uxth	r3, r3
   1c4f8:	bl	308d0 <flatcc_verify_field@@Base>
   1c4fc:	str	r0, [fp, #-12]
   1c500:	cmp	r0, #0
   1c504:	beq	1c514 <main@@Base+0x5bc8>
   1c508:	ldr	r0, [fp, #-12]
   1c50c:	str	r0, [fp, #-4]
   1c510:	b	1c7a0 <main@@Base+0x5e54>
   1c514:	ldr	r0, [fp, #-8]
   1c518:	movw	r1, #21
   1c51c:	uxth	r1, r1
   1c520:	movw	r2, #4
   1c524:	movw	r3, #4
   1c528:	uxth	r3, r3
   1c52c:	bl	308d0 <flatcc_verify_field@@Base>
   1c530:	str	r0, [fp, #-12]
   1c534:	cmp	r0, #0
   1c538:	beq	1c548 <main@@Base+0x5bfc>
   1c53c:	ldr	r0, [fp, #-12]
   1c540:	str	r0, [fp, #-4]
   1c544:	b	1c7a0 <main@@Base+0x5e54>
   1c548:	ldr	r0, [fp, #-8]
   1c54c:	movw	r1, #22
   1c550:	uxth	r1, r1
   1c554:	movw	r2, #8
   1c558:	movw	r3, #8
   1c55c:	uxth	r3, r3
   1c560:	bl	308d0 <flatcc_verify_field@@Base>
   1c564:	str	r0, [fp, #-12]
   1c568:	cmp	r0, #0
   1c56c:	beq	1c57c <main@@Base+0x5c30>
   1c570:	ldr	r0, [fp, #-12]
   1c574:	str	r0, [fp, #-4]
   1c578:	b	1c7a0 <main@@Base+0x5e54>
   1c57c:	ldr	r0, [fp, #-8]
   1c580:	movw	r1, #23
   1c584:	uxth	r1, r1
   1c588:	movw	r2, #8
   1c58c:	movw	r3, #8
   1c590:	uxth	r3, r3
   1c594:	bl	308d0 <flatcc_verify_field@@Base>
   1c598:	str	r0, [fp, #-12]
   1c59c:	cmp	r0, #0
   1c5a0:	beq	1c5b0 <main@@Base+0x5c64>
   1c5a4:	ldr	r0, [fp, #-12]
   1c5a8:	str	r0, [fp, #-4]
   1c5ac:	b	1c7a0 <main@@Base+0x5e54>
   1c5b0:	ldr	r0, [fp, #-8]
   1c5b4:	movw	r1, #25
   1c5b8:	uxth	r1, r1
   1c5bc:	movw	r2, #4
   1c5c0:	movw	r3, #4
   1c5c4:	uxth	r3, r3
   1c5c8:	bl	308d0 <flatcc_verify_field@@Base>
   1c5cc:	str	r0, [fp, #-12]
   1c5d0:	cmp	r0, #0
   1c5d4:	beq	1c5e4 <main@@Base+0x5c98>
   1c5d8:	ldr	r0, [fp, #-12]
   1c5dc:	str	r0, [fp, #-4]
   1c5e0:	b	1c7a0 <main@@Base+0x5e54>
   1c5e4:	ldr	r0, [fp, #-8]
   1c5e8:	movw	r1, #26
   1c5ec:	uxth	r1, r1
   1c5f0:	movw	r2, #4
   1c5f4:	movw	r3, #4
   1c5f8:	uxth	r3, r3
   1c5fc:	bl	308d0 <flatcc_verify_field@@Base>
   1c600:	str	r0, [fp, #-12]
   1c604:	cmp	r0, #0
   1c608:	beq	1c618 <main@@Base+0x5ccc>
   1c60c:	ldr	r0, [fp, #-12]
   1c610:	str	r0, [fp, #-4]
   1c614:	b	1c7a0 <main@@Base+0x5e54>
   1c618:	ldr	r0, [fp, #-8]
   1c61c:	movw	r1, #27
   1c620:	uxth	r1, r1
   1c624:	movw	r2, #4
   1c628:	movw	r3, #4
   1c62c:	uxth	r3, r3
   1c630:	bl	308d0 <flatcc_verify_field@@Base>
   1c634:	str	r0, [fp, #-12]
   1c638:	cmp	r0, #0
   1c63c:	beq	1c64c <main@@Base+0x5d00>
   1c640:	ldr	r0, [fp, #-12]
   1c644:	str	r0, [fp, #-4]
   1c648:	b	1c7a0 <main@@Base+0x5e54>
   1c64c:	ldr	r0, [fp, #-8]
   1c650:	movw	r1, #30
   1c654:	uxth	r1, r1
   1c658:	movw	r2, #0
   1c65c:	movw	r3, #1
   1c660:	movw	ip, #1
   1c664:	uxth	ip, ip
   1c668:	str	ip, [sp]
   1c66c:	mvn	ip, #0
   1c670:	str	ip, [sp, #4]
   1c674:	bl	30e38 <flatcc_verify_vector_field@@Base>
   1c678:	str	r0, [fp, #-12]
   1c67c:	cmp	r0, #0
   1c680:	beq	1c690 <main@@Base+0x5d44>
   1c684:	ldr	r0, [fp, #-12]
   1c688:	str	r0, [fp, #-4]
   1c68c:	b	1c7a0 <main@@Base+0x5e54>
   1c690:	ldr	r0, [pc, #280]	; 1c7b0 <main@@Base+0x5e64>
   1c694:	ldr	r1, [fp, #-8]
   1c698:	str	r0, [sp, #16]
   1c69c:	mov	r0, r1
   1c6a0:	movw	r1, #32
   1c6a4:	uxth	r1, r1
   1c6a8:	movw	r2, #0
   1c6ac:	movw	r3, #8
   1c6b0:	movw	ip, #8
   1c6b4:	uxth	ip, ip
   1c6b8:	str	ip, [sp]
   1c6bc:	ldr	ip, [sp, #16]
   1c6c0:	str	ip, [sp, #4]
   1c6c4:	bl	30e38 <flatcc_verify_vector_field@@Base>
   1c6c8:	str	r0, [fp, #-12]
   1c6cc:	cmp	r0, #0
   1c6d0:	beq	1c6e0 <main@@Base+0x5d94>
   1c6d4:	ldr	r0, [fp, #-12]
   1c6d8:	str	r0, [fp, #-4]
   1c6dc:	b	1c7a0 <main@@Base+0x5e54>
   1c6e0:	ldr	r0, [pc, #200]	; 1c7b0 <main@@Base+0x5e64>
   1c6e4:	ldr	r1, [fp, #-8]
   1c6e8:	str	r0, [sp, #12]
   1c6ec:	mov	r0, r1
   1c6f0:	movw	r1, #33	; 0x21
   1c6f4:	uxth	r1, r1
   1c6f8:	movw	r2, #0
   1c6fc:	movw	r3, #8
   1c700:	movw	ip, #8
   1c704:	uxth	ip, ip
   1c708:	str	ip, [sp]
   1c70c:	ldr	ip, [sp, #12]
   1c710:	str	ip, [sp, #4]
   1c714:	bl	30e38 <flatcc_verify_vector_field@@Base>
   1c718:	str	r0, [fp, #-12]
   1c71c:	cmp	r0, #0
   1c720:	beq	1c730 <main@@Base+0x5de4>
   1c724:	ldr	r0, [fp, #-12]
   1c728:	str	r0, [fp, #-4]
   1c72c:	b	1c7a0 <main@@Base+0x5e54>
   1c730:	ldr	r0, [pc, #144]	; 1c7c8 <main@@Base+0x5e7c>
   1c734:	add	r3, pc, r0
   1c738:	ldr	r0, [fp, #-8]
   1c73c:	movw	r1, #34	; 0x22
   1c740:	uxth	r1, r1
   1c744:	movw	r2, #0
   1c748:	bl	312ec <flatcc_verify_table_field@@Base>
   1c74c:	str	r0, [fp, #-12]
   1c750:	cmp	r0, #0
   1c754:	beq	1c764 <main@@Base+0x5e18>
   1c758:	ldr	r0, [fp, #-12]
   1c75c:	str	r0, [fp, #-4]
   1c760:	b	1c7a0 <main@@Base+0x5e54>
   1c764:	ldr	r0, [pc, #96]	; 1c7cc <main@@Base+0x5e80>
   1c768:	add	r3, pc, r0
   1c76c:	ldr	r0, [fp, #-8]
   1c770:	movw	r1, #35	; 0x23
   1c774:	uxth	r1, r1
   1c778:	movw	r2, #0
   1c77c:	bl	312ec <flatcc_verify_table_field@@Base>
   1c780:	str	r0, [fp, #-12]
   1c784:	cmp	r0, #0
   1c788:	beq	1c798 <main@@Base+0x5e4c>
   1c78c:	ldr	r0, [fp, #-12]
   1c790:	str	r0, [fp, #-4]
   1c794:	b	1c7a0 <main@@Base+0x5e54>
   1c798:	movw	r0, #0
   1c79c:	str	r0, [fp, #-4]
   1c7a0:	ldr	r0, [fp, #-4]
   1c7a4:	mov	sp, fp
   1c7a8:	pop	{fp, pc}
   1c7ac:			; <UNDEFINED> instruction: 0xfffffe9c
   1c7b0:	svcne	0x00ffffff
   1c7b4:			; <UNDEFINED> instruction: 0xfffffd7c
   1c7b8:	andeq	ip, r0, r8, lsl #26
   1c7bc:	svccc	0x00ffffff
   1c7c0:			; <UNDEFINED> instruction: 0xfffffc74
   1c7c4:	andeq	ip, r0, r8, lsr #25
   1c7c8:	andeq	ip, r0, r0, ror #19
   1c7cc:	andeq	ip, r0, r0, asr #19
   1c7d0:	push	{fp, lr}
   1c7d4:	mov	fp, sp
   1c7d8:	sub	sp, sp, #24
   1c7dc:	str	r0, [fp, #-8]
   1c7e0:	str	r1, [sp, #12]
   1c7e4:	str	r2, [sp, #8]
   1c7e8:	str	r3, [sp, #4]
   1c7ec:	ldr	r0, [sp, #12]
   1c7f0:	ldr	r1, [sp, #8]
   1c7f4:	cmp	r0, r1
   1c7f8:	beq	1c80c <main@@Base+0x5ec0>
   1c7fc:	ldr	r0, [sp, #12]
   1c800:	ldrb	r0, [r0]
   1c804:	cmp	r0, #123	; 0x7b
   1c808:	beq	1c834 <main@@Base+0x5ee8>
   1c80c:	ldr	r0, [sp, #4]
   1c810:	movw	r1, #0
   1c814:	str	r1, [r0]
   1c818:	ldr	r0, [fp, #-8]
   1c81c:	ldr	r1, [sp, #12]
   1c820:	ldr	r2, [sp, #8]
   1c824:	movw	r3, #21
   1c828:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1c82c:	str	r0, [fp, #-4]
   1c830:	b	1c8a8 <main@@Base+0x5f5c>
   1c834:	ldr	r0, [fp, #-8]
   1c838:	ldr	r1, [sp, #12]
   1c83c:	add	r1, r1, #1
   1c840:	ldr	r2, [sp, #8]
   1c844:	bl	21ae8 <main@@Base+0xb19c>
   1c848:	str	r0, [sp, #12]
   1c84c:	ldr	r0, [sp, #12]
   1c850:	ldr	r1, [sp, #8]
   1c854:	cmp	r0, r1
   1c858:	beq	1c894 <main@@Base+0x5f48>
   1c85c:	ldr	r0, [sp, #12]
   1c860:	ldrb	r0, [r0]
   1c864:	cmp	r0, #125	; 0x7d
   1c868:	bne	1c894 <main@@Base+0x5f48>
   1c86c:	ldr	r0, [sp, #4]
   1c870:	movw	r1, #0
   1c874:	str	r1, [r0]
   1c878:	ldr	r0, [fp, #-8]
   1c87c:	ldr	r1, [sp, #12]
   1c880:	add	r1, r1, #1
   1c884:	ldr	r2, [sp, #8]
   1c888:	bl	21ae8 <main@@Base+0xb19c>
   1c88c:	str	r0, [fp, #-4]
   1c890:	b	1c8a8 <main@@Base+0x5f5c>
   1c894:	ldr	r0, [sp, #4]
   1c898:	movw	r1, #1
   1c89c:	str	r1, [r0]
   1c8a0:	ldr	r0, [sp, #12]
   1c8a4:	str	r0, [fp, #-4]
   1c8a8:	ldr	r0, [fp, #-4]
   1c8ac:	mov	sp, fp
   1c8b0:	pop	{fp, pc}
   1c8b4:	push	{fp, lr}
   1c8b8:	mov	fp, sp
   1c8bc:	sub	sp, sp, #16
   1c8c0:	str	r0, [sp, #8]
   1c8c4:	str	r1, [sp, #4]
   1c8c8:	str	r2, [sp]
   1c8cc:	ldr	r0, [sp, #4]
   1c8d0:	ldr	r1, [sp]
   1c8d4:	cmp	r0, r1
   1c8d8:	bne	1c8e8 <main@@Base+0x5f9c>
   1c8dc:	ldr	r0, [sp, #4]
   1c8e0:	str	r0, [fp, #-4]
   1c8e4:	b	1c954 <main@@Base+0x6008>
   1c8e8:	ldr	r0, [sp, #4]
   1c8ec:	ldrb	r0, [r0]
   1c8f0:	cmp	r0, #34	; 0x22
   1c8f4:	bne	1c914 <main@@Base+0x5fc8>
   1c8f8:	ldr	r0, [sp, #4]
   1c8fc:	add	r0, r0, #1
   1c900:	str	r0, [sp, #4]
   1c904:	ldr	r0, [sp, #8]
   1c908:	movw	r1, #0
   1c90c:	str	r1, [r0, #12]
   1c910:	b	1c94c <main@@Base+0x6000>
   1c914:	ldr	r0, [sp, #4]
   1c918:	ldrb	r0, [r0]
   1c91c:	cmp	r0, #46	; 0x2e
   1c920:	bne	1c940 <main@@Base+0x5ff4>
   1c924:	ldr	r0, [sp, #8]
   1c928:	ldr	r1, [sp, #4]
   1c92c:	ldr	r2, [sp]
   1c930:	movw	r3, #5
   1c934:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1c938:	str	r0, [fp, #-4]
   1c93c:	b	1c954 <main@@Base+0x6008>
   1c940:	ldr	r0, [sp, #8]
   1c944:	movw	r1, #1
   1c948:	str	r1, [r0, #12]
   1c94c:	ldr	r0, [sp, #4]
   1c950:	str	r0, [fp, #-4]
   1c954:	ldr	r0, [fp, #-4]
   1c958:	mov	sp, fp
   1c95c:	pop	{fp, pc}
   1c960:	push	{fp, lr}
   1c964:	mov	fp, sp
   1c968:	sub	sp, sp, #16
   1c96c:	str	r0, [fp, #-4]
   1c970:	str	r1, [sp, #8]
   1c974:	ldr	r0, [sp, #8]
   1c978:	ldr	r1, [fp, #-4]
   1c97c:	sub	r0, r0, r1
   1c980:	str	r0, [sp, #4]
   1c984:	ldr	r0, [fp, #-4]
   1c988:	ldr	r1, [sp, #8]
   1c98c:	bl	21b84 <main@@Base+0xb238>
   1c990:	mov	sp, fp
   1c994:	pop	{fp, pc}
   1c998:	push	{fp, lr}
   1c99c:	mov	fp, sp
   1c9a0:	sub	sp, sp, #24
   1c9a4:	str	r0, [fp, #-8]
   1c9a8:	str	r1, [sp, #12]
   1c9ac:	str	r2, [sp, #8]
   1c9b0:	str	r3, [sp, #4]
   1c9b4:	ldr	r0, [sp, #12]
   1c9b8:	str	r0, [sp]
   1c9bc:	ldr	r0, [sp, #8]
   1c9c0:	ldr	r1, [sp, #12]
   1c9c4:	sub	r0, r0, r1
   1c9c8:	ldr	r1, [sp, #4]
   1c9cc:	cmp	r0, r1
   1c9d0:	bgt	1c9e0 <main@@Base+0x6094>
   1c9d4:	ldr	r0, [sp]
   1c9d8:	str	r0, [fp, #-4]
   1c9dc:	b	1caf4 <main@@Base+0x61a8>
   1c9e0:	ldr	r0, [fp, #-8]
   1c9e4:	ldr	r0, [r0, #12]
   1c9e8:	cmp	r0, #0
   1c9ec:	beq	1ca4c <main@@Base+0x6100>
   1c9f0:	ldr	r0, [sp, #12]
   1c9f4:	ldr	r1, [sp, #4]
   1c9f8:	add	r0, r0, r1
   1c9fc:	ldrb	r0, [r0]
   1ca00:	cmp	r0, #32
   1ca04:	ble	1ca2c <main@@Base+0x60e0>
   1ca08:	ldr	r0, [sp, #12]
   1ca0c:	ldr	r1, [sp, #4]
   1ca10:	add	r0, r0, r1
   1ca14:	ldrb	r0, [r0]
   1ca18:	cmp	r0, #58	; 0x3a
   1ca1c:	beq	1ca2c <main@@Base+0x60e0>
   1ca20:	ldr	r0, [sp]
   1ca24:	str	r0, [fp, #-4]
   1ca28:	b	1caf4 <main@@Base+0x61a8>
   1ca2c:	ldr	r0, [sp, #4]
   1ca30:	ldr	r1, [sp, #12]
   1ca34:	add	r0, r1, r0
   1ca38:	str	r0, [sp, #12]
   1ca3c:	ldr	r0, [fp, #-8]
   1ca40:	movw	r1, #0
   1ca44:	str	r1, [r0, #12]
   1ca48:	b	1ca84 <main@@Base+0x6138>
   1ca4c:	ldr	r0, [sp, #12]
   1ca50:	ldr	r1, [sp, #4]
   1ca54:	add	r0, r0, r1
   1ca58:	ldrb	r0, [r0]
   1ca5c:	cmp	r0, #34	; 0x22
   1ca60:	beq	1ca70 <main@@Base+0x6124>
   1ca64:	ldr	r0, [sp]
   1ca68:	str	r0, [fp, #-4]
   1ca6c:	b	1caf4 <main@@Base+0x61a8>
   1ca70:	ldr	r0, [sp, #4]
   1ca74:	add	r0, r0, #1
   1ca78:	ldr	r1, [sp, #12]
   1ca7c:	add	r0, r1, r0
   1ca80:	str	r0, [sp, #12]
   1ca84:	ldr	r0, [fp, #-8]
   1ca88:	ldr	r1, [sp, #12]
   1ca8c:	ldr	r2, [sp, #8]
   1ca90:	bl	21ae8 <main@@Base+0xb19c>
   1ca94:	str	r0, [sp, #12]
   1ca98:	ldr	r0, [sp, #12]
   1ca9c:	ldr	r1, [sp, #8]
   1caa0:	cmp	r0, r1
   1caa4:	beq	1cadc <main@@Base+0x6190>
   1caa8:	ldr	r0, [sp, #12]
   1caac:	ldrb	r0, [r0]
   1cab0:	cmp	r0, #58	; 0x3a
   1cab4:	bne	1cadc <main@@Base+0x6190>
   1cab8:	ldr	r0, [sp, #12]
   1cabc:	add	r0, r0, #1
   1cac0:	str	r0, [sp, #12]
   1cac4:	ldr	r0, [fp, #-8]
   1cac8:	ldr	r1, [sp, #12]
   1cacc:	ldr	r2, [sp, #8]
   1cad0:	bl	21ae8 <main@@Base+0xb19c>
   1cad4:	str	r0, [fp, #-4]
   1cad8:	b	1caf4 <main@@Base+0x61a8>
   1cadc:	ldr	r0, [fp, #-8]
   1cae0:	ldr	r1, [sp, #12]
   1cae4:	ldr	r2, [sp, #8]
   1cae8:	movw	r3, #4
   1caec:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1caf0:	str	r0, [fp, #-4]
   1caf4:	ldr	r0, [fp, #-4]
   1caf8:	mov	sp, fp
   1cafc:	pop	{fp, pc}
   1cb00:	push	{fp, lr}
   1cb04:	mov	fp, sp
   1cb08:	sub	sp, sp, #64	; 0x40
   1cb0c:	ldr	ip, [fp, #12]
   1cb10:	ldr	lr, [fp, #8]
   1cb14:	str	r0, [fp, #-8]
   1cb18:	str	r1, [fp, #-12]
   1cb1c:	str	r2, [fp, #-16]
   1cb20:	str	r3, [fp, #-20]	; 0xffffffec
   1cb24:	ldr	r0, [fp, #-12]
   1cb28:	str	r0, [fp, #-24]	; 0xffffffe8
   1cb2c:	ldr	r0, [fp, #-12]
   1cb30:	ldr	r1, [fp, #-16]
   1cb34:	str	ip, [sp, #20]
   1cb38:	str	lr, [sp, #16]
   1cb3c:	bl	1c960 <main@@Base+0x6014>
   1cb40:	str	r1, [sp, #28]
   1cb44:	str	r0, [sp, #24]
   1cb48:	ldr	r0, [sp, #24]
   1cb4c:	ldr	r1, [sp, #28]
   1cb50:	mvn	r2, #-1845493760	; 0x92000000
   1cb54:	subs	r0, r2, r0
   1cb58:	movw	r2, #25957	; 0x6565
   1cb5c:	movt	r2, #18290	; 0x4772
   1cb60:	sbcs	r1, r2, r1
   1cb64:	bcc	1cc08 <main@@Base+0x62bc>
   1cb68:	b	1cb6c <main@@Base+0x6220>
   1cb6c:	ldr	r0, [sp, #28]
   1cb70:	movw	r1, #30053	; 0x7565
   1cb74:	movt	r1, #17004	; 0x426c
   1cb78:	teq	r0, r1
   1cb7c:	bne	1cbf8 <main@@Base+0x62ac>
   1cb80:	b	1cb84 <main@@Base+0x6238>
   1cb84:	ldr	r0, [fp, #-8]
   1cb88:	ldr	r1, [fp, #-12]
   1cb8c:	str	r1, [fp, #-28]	; 0xffffffe4
   1cb90:	ldr	r2, [fp, #-16]
   1cb94:	ldr	r3, [fp, #12]
   1cb98:	movw	ip, #4
   1cb9c:	str	r3, [sp, #12]
   1cba0:	mov	r3, ip
   1cba4:	ldr	ip, [sp, #12]
   1cba8:	str	ip, [sp]
   1cbac:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   1cbb0:	str	r0, [fp, #-12]
   1cbb4:	ldr	r0, [fp, #-12]
   1cbb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cbbc:	cmp	r0, r1
   1cbc0:	beq	1cbe8 <main@@Base+0x629c>
   1cbc4:	ldr	r0, [fp, #8]
   1cbc8:	mov	r1, #0
   1cbcc:	str	r1, [r0, #4]
   1cbd0:	mov	r1, #8
   1cbd4:	str	r1, [r0]
   1cbd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cbdc:	movw	r1, #0
   1cbe0:	str	r1, [r0]
   1cbe4:	b	1cbf4 <main@@Base+0x62a8>
   1cbe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbec:	str	r0, [fp, #-4]
   1cbf0:	b	1cd50 <main@@Base+0x6404>
   1cbf4:	b	1cc04 <main@@Base+0x62b8>
   1cbf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbfc:	str	r0, [fp, #-4]
   1cc00:	b	1cd50 <main@@Base+0x6404>
   1cc04:	b	1cd48 <main@@Base+0x63fc>
   1cc08:	ldr	r0, [sp, #28]
   1cc0c:	bic	r0, r0, #255	; 0xff
   1cc10:	movw	r1, #25600	; 0x6400
   1cc14:	movt	r1, #21093	; 0x5265
   1cc18:	teq	r0, r1
   1cc1c:	bne	1cc98 <main@@Base+0x634c>
   1cc20:	b	1cc24 <main@@Base+0x62d8>
   1cc24:	ldr	r0, [fp, #-8]
   1cc28:	ldr	r1, [fp, #-12]
   1cc2c:	str	r1, [fp, #-28]	; 0xffffffe4
   1cc30:	ldr	r2, [fp, #-16]
   1cc34:	ldr	r3, [fp, #12]
   1cc38:	movw	ip, #3
   1cc3c:	str	r3, [sp, #8]
   1cc40:	mov	r3, ip
   1cc44:	ldr	ip, [sp, #8]
   1cc48:	str	ip, [sp]
   1cc4c:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   1cc50:	str	r0, [fp, #-12]
   1cc54:	ldr	r0, [fp, #-12]
   1cc58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc5c:	cmp	r0, r1
   1cc60:	beq	1cc88 <main@@Base+0x633c>
   1cc64:	ldr	r0, [fp, #8]
   1cc68:	mov	r1, #0
   1cc6c:	str	r1, [r0, #4]
   1cc70:	mov	r1, #1
   1cc74:	str	r1, [r0]
   1cc78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cc7c:	movw	r1, #0
   1cc80:	str	r1, [r0]
   1cc84:	b	1cc94 <main@@Base+0x6348>
   1cc88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc8c:	str	r0, [fp, #-4]
   1cc90:	b	1cd50 <main@@Base+0x6404>
   1cc94:	b	1cd44 <main@@Base+0x63f8>
   1cc98:	ldrb	r0, [sp, #27]
   1cc9c:	ldr	r1, [sp, #28]
   1cca0:	movw	r2, #25957	; 0x6565
   1cca4:	movt	r2, #18290	; 0x4772
   1cca8:	eor	r1, r1, r2
   1ccac:	eor	r0, r0, #110	; 0x6e
   1ccb0:	orr	r0, r1, r0, lsl #24
   1ccb4:	cmp	r0, #0
   1ccb8:	bne	1cd34 <main@@Base+0x63e8>
   1ccbc:	b	1ccc0 <main@@Base+0x6374>
   1ccc0:	ldr	r0, [fp, #-8]
   1ccc4:	ldr	r1, [fp, #-12]
   1ccc8:	str	r1, [fp, #-28]	; 0xffffffe4
   1cccc:	ldr	r2, [fp, #-16]
   1ccd0:	ldr	r3, [fp, #12]
   1ccd4:	movw	ip, #5
   1ccd8:	str	r3, [sp, #4]
   1ccdc:	mov	r3, ip
   1cce0:	ldr	ip, [sp, #4]
   1cce4:	str	ip, [sp]
   1cce8:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   1ccec:	str	r0, [fp, #-12]
   1ccf0:	ldr	r0, [fp, #-12]
   1ccf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ccf8:	cmp	r0, r1
   1ccfc:	beq	1cd24 <main@@Base+0x63d8>
   1cd00:	ldr	r0, [fp, #8]
   1cd04:	mov	r1, #0
   1cd08:	str	r1, [r0, #4]
   1cd0c:	mov	r1, #2
   1cd10:	str	r1, [r0]
   1cd14:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cd18:	movw	r1, #0
   1cd1c:	str	r1, [r0]
   1cd20:	b	1cd30 <main@@Base+0x63e4>
   1cd24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd28:	str	r0, [fp, #-4]
   1cd2c:	b	1cd50 <main@@Base+0x6404>
   1cd30:	b	1cd40 <main@@Base+0x63f4>
   1cd34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd38:	str	r0, [fp, #-4]
   1cd3c:	b	1cd50 <main@@Base+0x6404>
   1cd40:	b	1cd44 <main@@Base+0x63f8>
   1cd44:	b	1cd48 <main@@Base+0x63fc>
   1cd48:	ldr	r0, [fp, #-12]
   1cd4c:	str	r0, [fp, #-4]
   1cd50:	ldr	r0, [fp, #-4]
   1cd54:	mov	sp, fp
   1cd58:	pop	{fp, pc}
   1cd5c:	push	{fp, lr}
   1cd60:	mov	fp, sp
   1cd64:	sub	sp, sp, #56	; 0x38
   1cd68:	ldr	ip, [fp, #12]
   1cd6c:	ldr	lr, [fp, #8]
   1cd70:	str	r0, [fp, #-8]
   1cd74:	str	r1, [fp, #-12]
   1cd78:	str	r2, [fp, #-16]
   1cd7c:	str	r3, [fp, #-20]	; 0xffffffec
   1cd80:	ldr	r0, [fp, #-12]
   1cd84:	str	r0, [fp, #-24]	; 0xffffffe8
   1cd88:	ldr	r0, [fp, #-12]
   1cd8c:	ldr	r1, [fp, #-16]
   1cd90:	str	ip, [sp, #12]
   1cd94:	str	lr, [sp, #8]
   1cd98:	bl	1c960 <main@@Base+0x6014>
   1cd9c:	str	r1, [sp, #20]
   1cda0:	str	r0, [sp, #16]
   1cda4:	ldr	r0, [sp, #16]
   1cda8:	ldr	r1, [sp, #20]
   1cdac:	movw	r2, #30060	; 0x756c
   1cdb0:	movt	r2, #25966	; 0x656e
   1cdb4:	subs	r0, r2, r0
   1cdb8:	movw	r2, #30815	; 0x785f
   1cdbc:	movt	r2, #26725	; 0x6865
   1cdc0:	sbcs	r1, r2, r1
   1cdc4:	bcc	1cfb0 <main@@Base+0x6664>
   1cdc8:	b	1cdcc <main@@Base+0x6480>
   1cdcc:	ldr	r0, [sp, #16]
   1cdd0:	ldr	r1, [sp, #20]
   1cdd4:	mvn	r2, #-1912602624	; 0x8e000000
   1cdd8:	subs	r0, r2, r0
   1cddc:	movw	r2, #27759	; 0x6c6f
   1cde0:	movt	r2, #17263	; 0x436f
   1cde4:	sbcs	r1, r2, r1
   1cde8:	bcc	1ce84 <main@@Base+0x6538>
   1cdec:	b	1cdf0 <main@@Base+0x64a4>
   1cdf0:	ldr	r0, [sp, #20]
   1cdf4:	bic	r0, r0, #255	; 0xff
   1cdf8:	movw	r1, #30976	; 0x7900
   1cdfc:	movt	r1, #16750	; 0x416e
   1ce00:	teq	r0, r1
   1ce04:	bne	1ce74 <main@@Base+0x6528>
   1ce08:	b	1ce0c <main@@Base+0x64c0>
   1ce0c:	ldr	r0, [fp, #-8]
   1ce10:	ldr	r1, [fp, #-12]
   1ce14:	str	r1, [sp, #28]
   1ce18:	ldr	r2, [fp, #-16]
   1ce1c:	movw	r3, #3
   1ce20:	bl	21cf8 <main@@Base+0xb3ac>
   1ce24:	str	r0, [fp, #-12]
   1ce28:	ldr	r0, [fp, #-12]
   1ce2c:	ldr	r1, [sp, #28]
   1ce30:	cmp	r0, r1
   1ce34:	beq	1ce64 <main@@Base+0x6518>
   1ce38:	ldr	r0, [fp, #-8]
   1ce3c:	ldr	r1, [fp, #-12]
   1ce40:	ldr	r2, [fp, #-16]
   1ce44:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ce48:	ldr	ip, [fp, #8]
   1ce4c:	ldr	lr, [fp, #12]
   1ce50:	str	ip, [sp]
   1ce54:	str	lr, [sp, #4]
   1ce58:	bl	1f640 <main@@Base+0x8cf4>
   1ce5c:	str	r0, [fp, #-12]
   1ce60:	b	1ce70 <main@@Base+0x6524>
   1ce64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce68:	str	r0, [fp, #-4]
   1ce6c:	b	1d2ec <main@@Base+0x69a0>
   1ce70:	b	1ce80 <main@@Base+0x6534>
   1ce74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce78:	str	r0, [fp, #-4]
   1ce7c:	b	1d2ec <main@@Base+0x69a0>
   1ce80:	b	1cfac <main@@Base+0x6660>
   1ce84:	ldr	r0, [sp, #20]
   1ce88:	bic	r0, r0, #255	; 0xff
   1ce8c:	movw	r1, #28416	; 0x6f00
   1ce90:	movt	r1, #18031	; 0x466f
   1ce94:	teq	r0, r1
   1ce98:	bne	1cf08 <main@@Base+0x65bc>
   1ce9c:	b	1cea0 <main@@Base+0x6554>
   1cea0:	ldr	r0, [fp, #-8]
   1cea4:	ldr	r1, [fp, #-12]
   1cea8:	str	r1, [sp, #28]
   1ceac:	ldr	r2, [fp, #-16]
   1ceb0:	movw	r3, #3
   1ceb4:	bl	21cf8 <main@@Base+0xb3ac>
   1ceb8:	str	r0, [fp, #-12]
   1cebc:	ldr	r0, [fp, #-12]
   1cec0:	ldr	r1, [sp, #28]
   1cec4:	cmp	r0, r1
   1cec8:	beq	1cef8 <main@@Base+0x65ac>
   1cecc:	ldr	r0, [fp, #-8]
   1ced0:	ldr	r1, [fp, #-12]
   1ced4:	ldr	r2, [fp, #-16]
   1ced8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cedc:	ldr	ip, [fp, #8]
   1cee0:	ldr	lr, [fp, #12]
   1cee4:	str	ip, [sp]
   1cee8:	str	lr, [sp, #4]
   1ceec:	bl	21d7c <main@@Base+0xb430>
   1cef0:	str	r0, [fp, #-12]
   1cef4:	b	1cf04 <main@@Base+0x65b8>
   1cef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cefc:	str	r0, [fp, #-4]
   1cf00:	b	1d2ec <main@@Base+0x69a0>
   1cf04:	b	1cfa8 <main@@Base+0x665c>
   1cf08:	ldrb	r0, [sp, #19]
   1cf0c:	ldr	r1, [sp, #20]
   1cf10:	movw	r2, #27759	; 0x6c6f
   1cf14:	movt	r2, #17263	; 0x436f
   1cf18:	eor	r1, r1, r2
   1cf1c:	eor	r0, r0, #114	; 0x72
   1cf20:	orr	r0, r1, r0, lsl #24
   1cf24:	cmp	r0, #0
   1cf28:	bne	1cf98 <main@@Base+0x664c>
   1cf2c:	b	1cf30 <main@@Base+0x65e4>
   1cf30:	ldr	r0, [fp, #-8]
   1cf34:	ldr	r1, [fp, #-12]
   1cf38:	str	r1, [sp, #28]
   1cf3c:	ldr	r2, [fp, #-16]
   1cf40:	movw	r3, #5
   1cf44:	bl	21cf8 <main@@Base+0xb3ac>
   1cf48:	str	r0, [fp, #-12]
   1cf4c:	ldr	r0, [fp, #-12]
   1cf50:	ldr	r1, [sp, #28]
   1cf54:	cmp	r0, r1
   1cf58:	beq	1cf88 <main@@Base+0x663c>
   1cf5c:	ldr	r0, [fp, #-8]
   1cf60:	ldr	r1, [fp, #-12]
   1cf64:	ldr	r2, [fp, #-16]
   1cf68:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf6c:	ldr	ip, [fp, #8]
   1cf70:	ldr	lr, [fp, #12]
   1cf74:	str	ip, [sp]
   1cf78:	str	lr, [sp, #4]
   1cf7c:	bl	1cb00 <main@@Base+0x61b4>
   1cf80:	str	r0, [fp, #-12]
   1cf84:	b	1cf94 <main@@Base+0x6648>
   1cf88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf8c:	str	r0, [fp, #-4]
   1cf90:	b	1d2ec <main@@Base+0x69a0>
   1cf94:	b	1cfa4 <main@@Base+0x6658>
   1cf98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf9c:	str	r0, [fp, #-4]
   1cfa0:	b	1d2ec <main@@Base+0x69a0>
   1cfa4:	b	1cfa8 <main@@Base+0x665c>
   1cfa8:	b	1cfac <main@@Base+0x6660>
   1cfac:	b	1d2e4 <main@@Base+0x6998>
   1cfb0:	ldr	r0, [sp, #16]
   1cfb4:	ldr	r1, [sp, #20]
   1cfb8:	movw	r2, #30060	; 0x756c
   1cfbc:	movt	r2, #25966	; 0x656e
   1cfc0:	subs	r0, r2, r0
   1cfc4:	movw	r2, #29791	; 0x745f
   1cfc8:	movt	r2, #26990	; 0x696e
   1cfcc:	sbcs	r1, r2, r1
   1cfd0:	bcc	1d080 <main@@Base+0x6734>
   1cfd4:	b	1cfd8 <main@@Base+0x668c>
   1cfd8:	ldr	r0, [sp, #16]
   1cfdc:	ldr	r1, [sp, #20]
   1cfe0:	movw	r2, #30815	; 0x785f
   1cfe4:	movt	r2, #26725	; 0x6865
   1cfe8:	eor	r1, r1, r2
   1cfec:	movw	r2, #30061	; 0x756d
   1cff0:	movt	r2, #25966	; 0x656e
   1cff4:	eor	r0, r0, r2
   1cff8:	orr	r0, r0, r1
   1cffc:	cmp	r0, #0
   1d000:	bne	1d070 <main@@Base+0x6724>
   1d004:	b	1d008 <main@@Base+0x66bc>
   1d008:	ldr	r0, [fp, #-8]
   1d00c:	ldr	r1, [fp, #-12]
   1d010:	str	r1, [sp, #28]
   1d014:	ldr	r2, [fp, #-16]
   1d018:	movw	r3, #8
   1d01c:	bl	21cf8 <main@@Base+0xb3ac>
   1d020:	str	r0, [fp, #-12]
   1d024:	ldr	r0, [fp, #-12]
   1d028:	ldr	r1, [sp, #28]
   1d02c:	cmp	r0, r1
   1d030:	beq	1d060 <main@@Base+0x6714>
   1d034:	ldr	r0, [fp, #-8]
   1d038:	ldr	r1, [fp, #-12]
   1d03c:	ldr	r2, [fp, #-16]
   1d040:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d044:	ldr	ip, [fp, #8]
   1d048:	ldr	lr, [fp, #12]
   1d04c:	str	ip, [sp]
   1d050:	str	lr, [sp, #4]
   1d054:	bl	21fb8 <main@@Base+0xb66c>
   1d058:	str	r0, [fp, #-12]
   1d05c:	b	1d06c <main@@Base+0x6720>
   1d060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d064:	str	r0, [fp, #-4]
   1d068:	b	1d2ec <main@@Base+0x69a0>
   1d06c:	b	1d07c <main@@Base+0x6730>
   1d070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d074:	str	r0, [fp, #-4]
   1d078:	b	1d2ec <main@@Base+0x69a0>
   1d07c:	b	1d2e0 <main@@Base+0x6994>
   1d080:	ldr	r0, [sp, #16]
   1d084:	ldr	r1, [sp, #20]
   1d088:	movw	r2, #30060	; 0x756c
   1d08c:	movt	r2, #25966	; 0x656e
   1d090:	subs	r0, r2, r0
   1d094:	movw	r2, #26463	; 0x675f
   1d098:	movt	r2, #28261	; 0x6e65
   1d09c:	sbcs	r1, r2, r1
   1d0a0:	bcc	1d150 <main@@Base+0x6804>
   1d0a4:	b	1d0a8 <main@@Base+0x675c>
   1d0a8:	ldr	r0, [sp, #16]
   1d0ac:	ldr	r1, [sp, #20]
   1d0b0:	movw	r2, #29791	; 0x745f
   1d0b4:	movt	r2, #26990	; 0x696e
   1d0b8:	eor	r1, r1, r2
   1d0bc:	movw	r2, #30061	; 0x756d
   1d0c0:	movt	r2, #25966	; 0x656e
   1d0c4:	eor	r0, r0, r2
   1d0c8:	orr	r0, r0, r1
   1d0cc:	cmp	r0, #0
   1d0d0:	bne	1d140 <main@@Base+0x67f4>
   1d0d4:	b	1d0d8 <main@@Base+0x678c>
   1d0d8:	ldr	r0, [fp, #-8]
   1d0dc:	ldr	r1, [fp, #-12]
   1d0e0:	str	r1, [sp, #28]
   1d0e4:	ldr	r2, [fp, #-16]
   1d0e8:	movw	r3, #8
   1d0ec:	bl	21cf8 <main@@Base+0xb3ac>
   1d0f0:	str	r0, [fp, #-12]
   1d0f4:	ldr	r0, [fp, #-12]
   1d0f8:	ldr	r1, [sp, #28]
   1d0fc:	cmp	r0, r1
   1d100:	beq	1d130 <main@@Base+0x67e4>
   1d104:	ldr	r0, [fp, #-8]
   1d108:	ldr	r1, [fp, #-12]
   1d10c:	ldr	r2, [fp, #-16]
   1d110:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d114:	ldr	ip, [fp, #8]
   1d118:	ldr	lr, [fp, #12]
   1d11c:	str	ip, [sp]
   1d120:	str	lr, [sp, #4]
   1d124:	bl	22210 <main@@Base+0xb8c4>
   1d128:	str	r0, [fp, #-12]
   1d12c:	b	1d13c <main@@Base+0x67f0>
   1d130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d134:	str	r0, [fp, #-4]
   1d138:	b	1d2ec <main@@Base+0x69a0>
   1d13c:	b	1d14c <main@@Base+0x6800>
   1d140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d144:	str	r0, [fp, #-4]
   1d148:	b	1d2ec <main@@Base+0x69a0>
   1d14c:	b	1d2dc <main@@Base+0x6990>
   1d150:	ldr	r0, [sp, #16]
   1d154:	ldr	r1, [sp, #20]
   1d158:	movw	r2, #26463	; 0x675f
   1d15c:	movt	r2, #28261	; 0x6e65
   1d160:	eor	r1, r1, r2
   1d164:	movw	r2, #30061	; 0x756d
   1d168:	movt	r2, #25966	; 0x656e
   1d16c:	eor	r0, r0, r2
   1d170:	orr	r0, r0, r1
   1d174:	cmp	r0, #0
   1d178:	bne	1d1e0 <main@@Base+0x6894>
   1d17c:	b	1d180 <main@@Base+0x6834>
   1d180:	ldr	r0, [fp, #-8]
   1d184:	ldr	r1, [fp, #-12]
   1d188:	str	r1, [sp, #28]
   1d18c:	ldr	r2, [fp, #-16]
   1d190:	movw	r3, #8
   1d194:	bl	21cf8 <main@@Base+0xb3ac>
   1d198:	str	r0, [fp, #-12]
   1d19c:	ldr	r0, [fp, #-12]
   1d1a0:	ldr	r1, [sp, #28]
   1d1a4:	cmp	r0, r1
   1d1a8:	beq	1d1d8 <main@@Base+0x688c>
   1d1ac:	ldr	r0, [fp, #-8]
   1d1b0:	ldr	r1, [fp, #-12]
   1d1b4:	ldr	r2, [fp, #-16]
   1d1b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1bc:	ldr	ip, [fp, #8]
   1d1c0:	ldr	lr, [fp, #12]
   1d1c4:	str	ip, [sp]
   1d1c8:	str	lr, [sp, #4]
   1d1cc:	bl	22548 <main@@Base+0xbbfc>
   1d1d0:	str	r0, [fp, #-12]
   1d1d4:	b	1d1dc <main@@Base+0x6890>
   1d1d8:	b	1d1e8 <main@@Base+0x689c>
   1d1dc:	b	1d1e4 <main@@Base+0x6898>
   1d1e0:	b	1d1e8 <main@@Base+0x689c>
   1d1e4:	b	1d2d8 <main@@Base+0x698c>
   1d1e8:	ldr	r0, [sp, #16]
   1d1ec:	ldr	r1, [sp, #20]
   1d1f0:	movw	r2, #29797	; 0x7465
   1d1f4:	movt	r2, #28271	; 0x6e6f
   1d1f8:	eor	r1, r1, r2
   1d1fc:	movw	r2, #29817	; 0x7479
   1d200:	movt	r2, #28016	; 0x6d70
   1d204:	eor	r0, r0, r2
   1d208:	orr	r0, r0, r1
   1d20c:	cmp	r0, #0
   1d210:	bne	1d2c8 <main@@Base+0x697c>
   1d214:	b	1d218 <main@@Base+0x68cc>
   1d218:	ldr	r0, [fp, #-12]
   1d21c:	add	r0, r0, #8
   1d220:	str	r0, [fp, #-12]
   1d224:	ldr	r0, [fp, #-12]
   1d228:	ldr	r1, [fp, #-16]
   1d22c:	bl	1c960 <main@@Base+0x6014>
   1d230:	str	r1, [sp, #20]
   1d234:	str	r0, [sp, #16]
   1d238:	ldr	r0, [sp, #20]
   1d23c:	movw	r1, #30061	; 0x756d
   1d240:	movt	r1, #25966	; 0x656e
   1d244:	teq	r0, r1
   1d248:	bne	1d2b8 <main@@Base+0x696c>
   1d24c:	b	1d250 <main@@Base+0x6904>
   1d250:	ldr	r0, [fp, #-8]
   1d254:	ldr	r1, [fp, #-12]
   1d258:	str	r1, [sp, #28]
   1d25c:	ldr	r2, [fp, #-16]
   1d260:	movw	r3, #4
   1d264:	bl	21cf8 <main@@Base+0xb3ac>
   1d268:	str	r0, [fp, #-12]
   1d26c:	ldr	r0, [fp, #-12]
   1d270:	ldr	r1, [sp, #28]
   1d274:	cmp	r0, r1
   1d278:	beq	1d2a8 <main@@Base+0x695c>
   1d27c:	ldr	r0, [fp, #-8]
   1d280:	ldr	r1, [fp, #-12]
   1d284:	ldr	r2, [fp, #-16]
   1d288:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d28c:	ldr	ip, [fp, #8]
   1d290:	ldr	lr, [fp, #12]
   1d294:	str	ip, [sp]
   1d298:	str	lr, [sp, #4]
   1d29c:	bl	22784 <main@@Base+0xbe38>
   1d2a0:	str	r0, [fp, #-12]
   1d2a4:	b	1d2b4 <main@@Base+0x6968>
   1d2a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2ac:	str	r0, [fp, #-4]
   1d2b0:	b	1d2ec <main@@Base+0x69a0>
   1d2b4:	b	1d2c4 <main@@Base+0x6978>
   1d2b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2bc:	str	r0, [fp, #-4]
   1d2c0:	b	1d2ec <main@@Base+0x69a0>
   1d2c4:	b	1d2d4 <main@@Base+0x6988>
   1d2c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2cc:	str	r0, [fp, #-4]
   1d2d0:	b	1d2ec <main@@Base+0x69a0>
   1d2d4:	b	1d2d8 <main@@Base+0x698c>
   1d2d8:	b	1d2dc <main@@Base+0x6990>
   1d2dc:	b	1d2e0 <main@@Base+0x6994>
   1d2e0:	b	1d2e4 <main@@Base+0x6998>
   1d2e4:	ldr	r0, [fp, #-12]
   1d2e8:	str	r0, [fp, #-4]
   1d2ec:	ldr	r0, [fp, #-4]
   1d2f0:	mov	sp, fp
   1d2f4:	pop	{fp, pc}
   1d2f8:	push	{fp, lr}
   1d2fc:	mov	fp, sp
   1d300:	sub	sp, sp, #56	; 0x38
   1d304:	ldr	ip, [fp, #12]
   1d308:	ldr	lr, [fp, #8]
   1d30c:	str	r0, [fp, #-8]
   1d310:	str	r1, [fp, #-12]
   1d314:	str	r2, [fp, #-16]
   1d318:	str	r3, [fp, #-20]	; 0xffffffec
   1d31c:	ldr	r0, [fp, #-12]
   1d320:	str	r0, [fp, #-24]	; 0xffffffe8
   1d324:	ldr	r0, [fp, #-12]
   1d328:	ldr	r1, [fp, #-16]
   1d32c:	str	ip, [sp, #12]
   1d330:	str	lr, [sp, #8]
   1d334:	bl	1c960 <main@@Base+0x6014>
   1d338:	str	r1, [sp, #20]
   1d33c:	str	r0, [sp, #16]
   1d340:	ldr	r0, [sp, #16]
   1d344:	ldr	r1, [sp, #20]
   1d348:	movw	r2, #11844	; 0x2e44
   1d34c:	movt	r2, #28005	; 0x6d65
   1d350:	subs	r0, r2, r0
   1d354:	movw	r2, #18273	; 0x4761
   1d358:	movt	r2, #19833	; 0x4d79
   1d35c:	sbcs	r1, r2, r1
   1d360:	bcc	1d4b4 <main@@Base+0x6b68>
   1d364:	b	1d368 <main@@Base+0x6a1c>
   1d368:	ldr	r0, [sp, #16]
   1d36c:	ldr	r1, [sp, #20]
   1d370:	movw	r2, #28276	; 0x6e74
   1d374:	movt	r2, #18017	; 0x4661
   1d378:	eor	r1, r1, r2
   1d37c:	movw	r2, #31022	; 0x792e
   1d380:	movt	r2, #24947	; 0x6173
   1d384:	eor	r0, r0, r2
   1d388:	orr	r0, r0, r1
   1d38c:	cmp	r0, #0
   1d390:	bne	1d4a4 <main@@Base+0x6b58>
   1d394:	b	1d398 <main@@Base+0x6a4c>
   1d398:	ldr	r0, [fp, #-12]
   1d39c:	add	r0, r0, #8
   1d3a0:	str	r0, [fp, #-12]
   1d3a4:	ldr	r0, [fp, #-12]
   1d3a8:	ldr	r1, [fp, #-16]
   1d3ac:	bl	1c960 <main@@Base+0x6014>
   1d3b0:	str	r1, [sp, #20]
   1d3b4:	str	r0, [sp, #16]
   1d3b8:	ldr	r0, [sp, #16]
   1d3bc:	ldr	r1, [sp, #20]
   1d3c0:	movw	r2, #24946	; 0x6172
   1d3c4:	movt	r2, #17256	; 0x4368
   1d3c8:	eor	r1, r1, r2
   1d3cc:	movw	r2, #29797	; 0x7465
   1d3d0:	movt	r2, #24931	; 0x6163
   1d3d4:	eor	r0, r0, r2
   1d3d8:	orr	r0, r0, r1
   1d3dc:	cmp	r0, #0
   1d3e0:	bne	1d494 <main@@Base+0x6b48>
   1d3e4:	b	1d3e8 <main@@Base+0x6a9c>
   1d3e8:	ldr	r0, [fp, #-12]
   1d3ec:	add	r0, r0, #8
   1d3f0:	str	r0, [fp, #-12]
   1d3f4:	ldr	r0, [fp, #-12]
   1d3f8:	ldr	r1, [fp, #-16]
   1d3fc:	bl	1c960 <main@@Base+0x6014>
   1d400:	str	r1, [sp, #20]
   1d404:	str	r0, [sp, #16]
   1d408:	ldrb	r0, [sp, #23]
   1d40c:	mov	r1, #1912602624	; 0x72000000
   1d410:	teq	r1, r0, lsl #24
   1d414:	bne	1d484 <main@@Base+0x6b38>
   1d418:	b	1d41c <main@@Base+0x6ad0>
   1d41c:	ldr	r0, [fp, #-8]
   1d420:	ldr	r1, [fp, #-12]
   1d424:	str	r1, [sp, #28]
   1d428:	ldr	r2, [fp, #-16]
   1d42c:	movw	r3, #1
   1d430:	bl	21cf8 <main@@Base+0xb3ac>
   1d434:	str	r0, [fp, #-12]
   1d438:	ldr	r0, [fp, #-12]
   1d43c:	ldr	r1, [sp, #28]
   1d440:	cmp	r0, r1
   1d444:	beq	1d474 <main@@Base+0x6b28>
   1d448:	ldr	r0, [fp, #-8]
   1d44c:	ldr	r1, [fp, #-12]
   1d450:	ldr	r2, [fp, #-16]
   1d454:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d458:	ldr	ip, [fp, #8]
   1d45c:	ldr	lr, [fp, #12]
   1d460:	str	ip, [sp]
   1d464:	str	lr, [sp, #4]
   1d468:	bl	22870 <main@@Base+0xbf24>
   1d46c:	str	r0, [fp, #-12]
   1d470:	b	1d480 <main@@Base+0x6b34>
   1d474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d478:	str	r0, [fp, #-4]
   1d47c:	b	1dea8 <main@@Base+0x755c>
   1d480:	b	1d490 <main@@Base+0x6b44>
   1d484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d488:	str	r0, [fp, #-4]
   1d48c:	b	1dea8 <main@@Base+0x755c>
   1d490:	b	1d4a0 <main@@Base+0x6b54>
   1d494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d498:	str	r0, [fp, #-4]
   1d49c:	b	1dea8 <main@@Base+0x755c>
   1d4a0:	b	1d4b0 <main@@Base+0x6b64>
   1d4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4a8:	str	r0, [fp, #-4]
   1d4ac:	b	1dea8 <main@@Base+0x755c>
   1d4b0:	b	1dea0 <main@@Base+0x7554>
   1d4b4:	ldr	r0, [sp, #16]
   1d4b8:	ldr	r1, [sp, #20]
   1d4bc:	movw	r2, #18273	; 0x4761
   1d4c0:	movt	r2, #19833	; 0x4d79
   1d4c4:	eor	r1, r1, r2
   1d4c8:	movw	r2, #11845	; 0x2e45
   1d4cc:	movt	r2, #28005	; 0x6d65
   1d4d0:	eor	r0, r0, r2
   1d4d4:	orr	r0, r0, r1
   1d4d8:	cmp	r0, #0
   1d4dc:	bne	1dc90 <main@@Base+0x7344>
   1d4e0:	b	1d4e4 <main@@Base+0x6b98>
   1d4e4:	ldr	r0, [fp, #-12]
   1d4e8:	add	r0, r0, #8
   1d4ec:	str	r0, [fp, #-12]
   1d4f0:	ldr	r0, [fp, #-12]
   1d4f4:	ldr	r1, [fp, #-16]
   1d4f8:	bl	1c960 <main@@Base+0x6014>
   1d4fc:	str	r1, [sp, #20]
   1d500:	str	r0, [sp, #16]
   1d504:	ldr	r0, [sp, #16]
   1d508:	ldr	r1, [sp, #20]
   1d50c:	movw	r2, #11879	; 0x2e67
   1d510:	movt	r2, #27749	; 0x6c65
   1d514:	subs	r0, r2, r0
   1d518:	movw	r2, #28016	; 0x6d70
   1d51c:	movt	r2, #30817	; 0x7861
   1d520:	sbcs	r1, r2, r1
   1d524:	bcc	1d81c <main@@Base+0x6ed0>
   1d528:	b	1d52c <main@@Base+0x6be0>
   1d52c:	ldr	r0, [sp, #16]
   1d530:	ldr	r1, [sp, #20]
   1d534:	movw	r2, #11842	; 0x2e42
   1d538:	movt	r2, #27749	; 0x6c65
   1d53c:	subs	r0, r2, r0
   1d540:	movw	r2, #28016	; 0x6d70
   1d544:	movt	r2, #30817	; 0x7861
   1d548:	sbcs	r1, r2, r1
   1d54c:	bcc	1d644 <main@@Base+0x6cf8>
   1d550:	b	1d554 <main@@Base+0x6c08>
   1d554:	ldr	r0, [sp, #16]
   1d558:	ldr	r1, [sp, #20]
   1d55c:	movw	r2, #28016	; 0x6d70
   1d560:	movt	r2, #30817	; 0x7861
   1d564:	eor	r1, r1, r2
   1d568:	movw	r2, #11841	; 0x2e41
   1d56c:	movt	r2, #27749	; 0x6c65
   1d570:	eor	r0, r0, r2
   1d574:	orr	r0, r0, r1
   1d578:	cmp	r0, #0
   1d57c:	bne	1d634 <main@@Base+0x6ce8>
   1d580:	b	1d584 <main@@Base+0x6c38>
   1d584:	ldr	r0, [fp, #-12]
   1d588:	add	r0, r0, #8
   1d58c:	str	r0, [fp, #-12]
   1d590:	ldr	r0, [fp, #-12]
   1d594:	ldr	r1, [fp, #-16]
   1d598:	bl	1c960 <main@@Base+0x6014>
   1d59c:	str	r1, [sp, #20]
   1d5a0:	str	r0, [sp, #16]
   1d5a4:	ldrh	r0, [sp, #22]
   1d5a8:	movw	r1, #0
   1d5ac:	movt	r1, #28281	; 0x6e79
   1d5b0:	teq	r1, r0, lsl #16
   1d5b4:	bne	1d624 <main@@Base+0x6cd8>
   1d5b8:	b	1d5bc <main@@Base+0x6c70>
   1d5bc:	ldr	r0, [fp, #-8]
   1d5c0:	ldr	r1, [fp, #-12]
   1d5c4:	str	r1, [sp, #28]
   1d5c8:	ldr	r2, [fp, #-16]
   1d5cc:	movw	r3, #2
   1d5d0:	bl	21cf8 <main@@Base+0xb3ac>
   1d5d4:	str	r0, [fp, #-12]
   1d5d8:	ldr	r0, [fp, #-12]
   1d5dc:	ldr	r1, [sp, #28]
   1d5e0:	cmp	r0, r1
   1d5e4:	beq	1d614 <main@@Base+0x6cc8>
   1d5e8:	ldr	r0, [fp, #-8]
   1d5ec:	ldr	r1, [fp, #-12]
   1d5f0:	ldr	r2, [fp, #-16]
   1d5f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d5f8:	ldr	ip, [fp, #8]
   1d5fc:	ldr	lr, [fp, #12]
   1d600:	str	ip, [sp]
   1d604:	str	lr, [sp, #4]
   1d608:	bl	1f640 <main@@Base+0x8cf4>
   1d60c:	str	r0, [fp, #-12]
   1d610:	b	1d620 <main@@Base+0x6cd4>
   1d614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d618:	str	r0, [fp, #-4]
   1d61c:	b	1dea8 <main@@Base+0x755c>
   1d620:	b	1d630 <main@@Base+0x6ce4>
   1d624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d628:	str	r0, [fp, #-4]
   1d62c:	b	1dea8 <main@@Base+0x755c>
   1d630:	b	1d640 <main@@Base+0x6cf4>
   1d634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d638:	str	r0, [fp, #-4]
   1d63c:	b	1dea8 <main@@Base+0x755c>
   1d640:	b	1d818 <main@@Base+0x6ecc>
   1d644:	ldr	r0, [sp, #16]
   1d648:	ldr	r1, [sp, #20]
   1d64c:	movw	r2, #28016	; 0x6d70
   1d650:	movt	r2, #30817	; 0x7861
   1d654:	eor	r1, r1, r2
   1d658:	movw	r2, #11843	; 0x2e43
   1d65c:	movt	r2, #27749	; 0x6c65
   1d660:	eor	r0, r0, r2
   1d664:	orr	r0, r0, r1
   1d668:	cmp	r0, #0
   1d66c:	bne	1d724 <main@@Base+0x6dd8>
   1d670:	b	1d674 <main@@Base+0x6d28>
   1d674:	ldr	r0, [fp, #-12]
   1d678:	add	r0, r0, #8
   1d67c:	str	r0, [fp, #-12]
   1d680:	ldr	r0, [fp, #-12]
   1d684:	ldr	r1, [fp, #-16]
   1d688:	bl	1c960 <main@@Base+0x6014>
   1d68c:	str	r1, [sp, #20]
   1d690:	str	r0, [sp, #16]
   1d694:	ldr	r0, [sp, #20]
   1d698:	movw	r1, #28530	; 0x6f72
   1d69c:	movt	r1, #28524	; 0x6f6c
   1d6a0:	teq	r0, r1
   1d6a4:	bne	1d714 <main@@Base+0x6dc8>
   1d6a8:	b	1d6ac <main@@Base+0x6d60>
   1d6ac:	ldr	r0, [fp, #-8]
   1d6b0:	ldr	r1, [fp, #-12]
   1d6b4:	str	r1, [sp, #28]
   1d6b8:	ldr	r2, [fp, #-16]
   1d6bc:	movw	r3, #4
   1d6c0:	bl	21cf8 <main@@Base+0xb3ac>
   1d6c4:	str	r0, [fp, #-12]
   1d6c8:	ldr	r0, [fp, #-12]
   1d6cc:	ldr	r1, [sp, #28]
   1d6d0:	cmp	r0, r1
   1d6d4:	beq	1d704 <main@@Base+0x6db8>
   1d6d8:	ldr	r0, [fp, #-8]
   1d6dc:	ldr	r1, [fp, #-12]
   1d6e0:	ldr	r2, [fp, #-16]
   1d6e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d6e8:	ldr	ip, [fp, #8]
   1d6ec:	ldr	lr, [fp, #12]
   1d6f0:	str	ip, [sp]
   1d6f4:	str	lr, [sp, #4]
   1d6f8:	bl	1cb00 <main@@Base+0x61b4>
   1d6fc:	str	r0, [fp, #-12]
   1d700:	b	1d710 <main@@Base+0x6dc4>
   1d704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d708:	str	r0, [fp, #-4]
   1d70c:	b	1dea8 <main@@Base+0x755c>
   1d710:	b	1d720 <main@@Base+0x6dd4>
   1d714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d718:	str	r0, [fp, #-4]
   1d71c:	b	1dea8 <main@@Base+0x755c>
   1d720:	b	1d814 <main@@Base+0x6ec8>
   1d724:	ldr	r0, [sp, #16]
   1d728:	ldr	r1, [sp, #20]
   1d72c:	movw	r2, #28016	; 0x6d70
   1d730:	movt	r2, #30817	; 0x7861
   1d734:	eor	r1, r1, r2
   1d738:	movw	r2, #11846	; 0x2e46
   1d73c:	movt	r2, #27749	; 0x6c65
   1d740:	eor	r0, r0, r2
   1d744:	orr	r0, r0, r1
   1d748:	cmp	r0, #0
   1d74c:	bne	1d804 <main@@Base+0x6eb8>
   1d750:	b	1d754 <main@@Base+0x6e08>
   1d754:	ldr	r0, [fp, #-12]
   1d758:	add	r0, r0, #8
   1d75c:	str	r0, [fp, #-12]
   1d760:	ldr	r0, [fp, #-12]
   1d764:	ldr	r1, [fp, #-16]
   1d768:	bl	1c960 <main@@Base+0x6014>
   1d76c:	str	r1, [sp, #20]
   1d770:	str	r0, [sp, #16]
   1d774:	ldrh	r0, [sp, #22]
   1d778:	movw	r1, #0
   1d77c:	movt	r1, #28527	; 0x6f6f
   1d780:	teq	r1, r0, lsl #16
   1d784:	bne	1d7f4 <main@@Base+0x6ea8>
   1d788:	b	1d78c <main@@Base+0x6e40>
   1d78c:	ldr	r0, [fp, #-8]
   1d790:	ldr	r1, [fp, #-12]
   1d794:	str	r1, [sp, #28]
   1d798:	ldr	r2, [fp, #-16]
   1d79c:	movw	r3, #2
   1d7a0:	bl	21cf8 <main@@Base+0xb3ac>
   1d7a4:	str	r0, [fp, #-12]
   1d7a8:	ldr	r0, [fp, #-12]
   1d7ac:	ldr	r1, [sp, #28]
   1d7b0:	cmp	r0, r1
   1d7b4:	beq	1d7e4 <main@@Base+0x6e98>
   1d7b8:	ldr	r0, [fp, #-8]
   1d7bc:	ldr	r1, [fp, #-12]
   1d7c0:	ldr	r2, [fp, #-16]
   1d7c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d7c8:	ldr	ip, [fp, #8]
   1d7cc:	ldr	lr, [fp, #12]
   1d7d0:	str	ip, [sp]
   1d7d4:	str	lr, [sp, #4]
   1d7d8:	bl	21d7c <main@@Base+0xb430>
   1d7dc:	str	r0, [fp, #-12]
   1d7e0:	b	1d7f0 <main@@Base+0x6ea4>
   1d7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7e8:	str	r0, [fp, #-4]
   1d7ec:	b	1dea8 <main@@Base+0x755c>
   1d7f0:	b	1d800 <main@@Base+0x6eb4>
   1d7f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7f8:	str	r0, [fp, #-4]
   1d7fc:	b	1dea8 <main@@Base+0x755c>
   1d800:	b	1d810 <main@@Base+0x6ec4>
   1d804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d808:	str	r0, [fp, #-4]
   1d80c:	b	1dea8 <main@@Base+0x755c>
   1d810:	b	1d814 <main@@Base+0x6ec8>
   1d814:	b	1d818 <main@@Base+0x6ecc>
   1d818:	b	1dc8c <main@@Base+0x7340>
   1d81c:	ldr	r0, [sp, #16]
   1d820:	ldr	r1, [sp, #20]
   1d824:	movw	r2, #11880	; 0x2e68
   1d828:	movt	r2, #27749	; 0x6c65
   1d82c:	subs	r0, r2, r0
   1d830:	movw	r2, #28016	; 0x6d70
   1d834:	movt	r2, #30817	; 0x7861
   1d838:	sbcs	r1, r2, r1
   1d83c:	bcc	1d954 <main@@Base+0x7008>
   1d840:	b	1d844 <main@@Base+0x6ef8>
   1d844:	ldr	r0, [sp, #16]
   1d848:	ldr	r1, [sp, #20]
   1d84c:	movw	r2, #28016	; 0x6d70
   1d850:	movt	r2, #30817	; 0x7861
   1d854:	eor	r1, r1, r2
   1d858:	movw	r2, #11880	; 0x2e68
   1d85c:	movt	r2, #27749	; 0x6c65
   1d860:	eor	r0, r0, r2
   1d864:	orr	r0, r0, r1
   1d868:	cmp	r0, #0
   1d86c:	bne	1d944 <main@@Base+0x6ff8>
   1d870:	b	1d874 <main@@Base+0x6f28>
   1d874:	ldr	r0, [fp, #-12]
   1d878:	add	r0, r0, #8
   1d87c:	str	r0, [fp, #-12]
   1d880:	ldr	r0, [fp, #-12]
   1d884:	ldr	r1, [fp, #-16]
   1d888:	bl	1c960 <main@@Base+0x6014>
   1d88c:	str	r1, [sp, #20]
   1d890:	str	r0, [sp, #16]
   1d894:	ldr	r0, [sp, #16]
   1d898:	ldr	r1, [sp, #20]
   1d89c:	movw	r2, #30815	; 0x785f
   1d8a0:	movt	r2, #101	; 0x65
   1d8a4:	eor	r2, r2, r1, lsr #8
   1d8a8:	lsr	r0, r0, #8
   1d8ac:	orr	r0, r0, r1, lsl #24
   1d8b0:	movw	r1, #30061	; 0x756d
   1d8b4:	movt	r1, #25966	; 0x656e
   1d8b8:	eor	r0, r0, r1
   1d8bc:	orr	r0, r0, r2
   1d8c0:	cmp	r0, #0
   1d8c4:	bne	1d934 <main@@Base+0x6fe8>
   1d8c8:	b	1d8cc <main@@Base+0x6f80>
   1d8cc:	ldr	r0, [fp, #-8]
   1d8d0:	ldr	r1, [fp, #-12]
   1d8d4:	str	r1, [sp, #28]
   1d8d8:	ldr	r2, [fp, #-16]
   1d8dc:	movw	r3, #7
   1d8e0:	bl	21cf8 <main@@Base+0xb3ac>
   1d8e4:	str	r0, [fp, #-12]
   1d8e8:	ldr	r0, [fp, #-12]
   1d8ec:	ldr	r1, [sp, #28]
   1d8f0:	cmp	r0, r1
   1d8f4:	beq	1d924 <main@@Base+0x6fd8>
   1d8f8:	ldr	r0, [fp, #-8]
   1d8fc:	ldr	r1, [fp, #-12]
   1d900:	ldr	r2, [fp, #-16]
   1d904:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d908:	ldr	ip, [fp, #8]
   1d90c:	ldr	lr, [fp, #12]
   1d910:	str	ip, [sp]
   1d914:	str	lr, [sp, #4]
   1d918:	bl	21fb8 <main@@Base+0xb66c>
   1d91c:	str	r0, [fp, #-12]
   1d920:	b	1d930 <main@@Base+0x6fe4>
   1d924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d928:	str	r0, [fp, #-4]
   1d92c:	b	1dea8 <main@@Base+0x755c>
   1d930:	b	1d940 <main@@Base+0x6ff4>
   1d934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d938:	str	r0, [fp, #-4]
   1d93c:	b	1dea8 <main@@Base+0x755c>
   1d940:	b	1d950 <main@@Base+0x7004>
   1d944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d948:	str	r0, [fp, #-4]
   1d94c:	b	1dea8 <main@@Base+0x755c>
   1d950:	b	1dc88 <main@@Base+0x733c>
   1d954:	ldr	r0, [sp, #16]
   1d958:	ldr	r1, [sp, #20]
   1d95c:	movw	r2, #11885	; 0x2e6d
   1d960:	movt	r2, #27749	; 0x6c65
   1d964:	subs	r0, r2, r0
   1d968:	movw	r2, #28016	; 0x6d70
   1d96c:	movt	r2, #30817	; 0x7861
   1d970:	sbcs	r1, r2, r1
   1d974:	bcc	1da8c <main@@Base+0x7140>
   1d978:	b	1d97c <main@@Base+0x7030>
   1d97c:	ldr	r0, [sp, #16]
   1d980:	ldr	r1, [sp, #20]
   1d984:	movw	r2, #28016	; 0x6d70
   1d988:	movt	r2, #30817	; 0x7861
   1d98c:	eor	r1, r1, r2
   1d990:	movw	r2, #11881	; 0x2e69
   1d994:	movt	r2, #27749	; 0x6c65
   1d998:	eor	r0, r0, r2
   1d99c:	orr	r0, r0, r1
   1d9a0:	cmp	r0, #0
   1d9a4:	bne	1da7c <main@@Base+0x7130>
   1d9a8:	b	1d9ac <main@@Base+0x7060>
   1d9ac:	ldr	r0, [fp, #-12]
   1d9b0:	add	r0, r0, #8
   1d9b4:	str	r0, [fp, #-12]
   1d9b8:	ldr	r0, [fp, #-12]
   1d9bc:	ldr	r1, [fp, #-16]
   1d9c0:	bl	1c960 <main@@Base+0x6014>
   1d9c4:	str	r1, [sp, #20]
   1d9c8:	str	r0, [sp, #16]
   1d9cc:	ldr	r0, [sp, #16]
   1d9d0:	ldr	r1, [sp, #20]
   1d9d4:	movw	r2, #29791	; 0x745f
   1d9d8:	movt	r2, #110	; 0x6e
   1d9dc:	eor	r2, r2, r1, lsr #8
   1d9e0:	lsr	r0, r0, #8
   1d9e4:	orr	r0, r0, r1, lsl #24
   1d9e8:	movw	r1, #30061	; 0x756d
   1d9ec:	movt	r1, #25966	; 0x656e
   1d9f0:	eor	r0, r0, r1
   1d9f4:	orr	r0, r0, r2
   1d9f8:	cmp	r0, #0
   1d9fc:	bne	1da6c <main@@Base+0x7120>
   1da00:	b	1da04 <main@@Base+0x70b8>
   1da04:	ldr	r0, [fp, #-8]
   1da08:	ldr	r1, [fp, #-12]
   1da0c:	str	r1, [sp, #28]
   1da10:	ldr	r2, [fp, #-16]
   1da14:	movw	r3, #7
   1da18:	bl	21cf8 <main@@Base+0xb3ac>
   1da1c:	str	r0, [fp, #-12]
   1da20:	ldr	r0, [fp, #-12]
   1da24:	ldr	r1, [sp, #28]
   1da28:	cmp	r0, r1
   1da2c:	beq	1da5c <main@@Base+0x7110>
   1da30:	ldr	r0, [fp, #-8]
   1da34:	ldr	r1, [fp, #-12]
   1da38:	ldr	r2, [fp, #-16]
   1da3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da40:	ldr	ip, [fp, #8]
   1da44:	ldr	lr, [fp, #12]
   1da48:	str	ip, [sp]
   1da4c:	str	lr, [sp, #4]
   1da50:	bl	22210 <main@@Base+0xb8c4>
   1da54:	str	r0, [fp, #-12]
   1da58:	b	1da68 <main@@Base+0x711c>
   1da5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da60:	str	r0, [fp, #-4]
   1da64:	b	1dea8 <main@@Base+0x755c>
   1da68:	b	1da78 <main@@Base+0x712c>
   1da6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da70:	str	r0, [fp, #-4]
   1da74:	b	1dea8 <main@@Base+0x755c>
   1da78:	b	1da88 <main@@Base+0x713c>
   1da7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da80:	str	r0, [fp, #-4]
   1da84:	b	1dea8 <main@@Base+0x755c>
   1da88:	b	1dc84 <main@@Base+0x7338>
   1da8c:	ldr	r0, [sp, #16]
   1da90:	ldr	r1, [sp, #20]
   1da94:	movw	r2, #28016	; 0x6d70
   1da98:	movt	r2, #30817	; 0x7861
   1da9c:	eor	r1, r1, r2
   1daa0:	movw	r2, #11886	; 0x2e6e
   1daa4:	movt	r2, #27749	; 0x6c65
   1daa8:	eor	r0, r0, r2
   1daac:	orr	r0, r0, r1
   1dab0:	cmp	r0, #0
   1dab4:	bne	1dc74 <main@@Base+0x7328>
   1dab8:	b	1dabc <main@@Base+0x7170>
   1dabc:	ldr	r0, [fp, #-12]
   1dac0:	add	r0, r0, #8
   1dac4:	str	r0, [fp, #-12]
   1dac8:	ldr	r0, [fp, #-12]
   1dacc:	ldr	r1, [fp, #-16]
   1dad0:	bl	1c960 <main@@Base+0x6014>
   1dad4:	str	r1, [sp, #20]
   1dad8:	str	r0, [sp, #16]
   1dadc:	ldr	r0, [sp, #16]
   1dae0:	ldr	r1, [sp, #20]
   1dae4:	movw	r2, #26463	; 0x675f
   1dae8:	movt	r2, #101	; 0x65
   1daec:	eor	r2, r2, r1, lsr #8
   1daf0:	lsr	r0, r0, #8
   1daf4:	orr	r0, r0, r1, lsl #24
   1daf8:	movw	r1, #30061	; 0x756d
   1dafc:	movt	r1, #25966	; 0x656e
   1db00:	eor	r0, r0, r1
   1db04:	orr	r0, r0, r2
   1db08:	cmp	r0, #0
   1db0c:	bne	1db74 <main@@Base+0x7228>
   1db10:	b	1db14 <main@@Base+0x71c8>
   1db14:	ldr	r0, [fp, #-8]
   1db18:	ldr	r1, [fp, #-12]
   1db1c:	str	r1, [sp, #28]
   1db20:	ldr	r2, [fp, #-16]
   1db24:	movw	r3, #7
   1db28:	bl	21cf8 <main@@Base+0xb3ac>
   1db2c:	str	r0, [fp, #-12]
   1db30:	ldr	r0, [fp, #-12]
   1db34:	ldr	r1, [sp, #28]
   1db38:	cmp	r0, r1
   1db3c:	beq	1db6c <main@@Base+0x7220>
   1db40:	ldr	r0, [fp, #-8]
   1db44:	ldr	r1, [fp, #-12]
   1db48:	ldr	r2, [fp, #-16]
   1db4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1db50:	ldr	ip, [fp, #8]
   1db54:	ldr	lr, [fp, #12]
   1db58:	str	ip, [sp]
   1db5c:	str	lr, [sp, #4]
   1db60:	bl	22548 <main@@Base+0xbbfc>
   1db64:	str	r0, [fp, #-12]
   1db68:	b	1db70 <main@@Base+0x7224>
   1db6c:	b	1db7c <main@@Base+0x7230>
   1db70:	b	1db78 <main@@Base+0x722c>
   1db74:	b	1db7c <main@@Base+0x7230>
   1db78:	b	1dc70 <main@@Base+0x7324>
   1db7c:	ldr	r0, [sp, #16]
   1db80:	ldr	r1, [sp, #20]
   1db84:	movw	r2, #25965	; 0x656d
   1db88:	movt	r2, #28532	; 0x6f74
   1db8c:	eor	r1, r1, r2
   1db90:	movw	r2, #31077	; 0x7965
   1db94:	movt	r2, #28788	; 0x7074
   1db98:	eor	r0, r0, r2
   1db9c:	orr	r0, r0, r1
   1dba0:	cmp	r0, #0
   1dba4:	bne	1dc60 <main@@Base+0x7314>
   1dba8:	b	1dbac <main@@Base+0x7260>
   1dbac:	ldr	r0, [fp, #-12]
   1dbb0:	add	r0, r0, #8
   1dbb4:	str	r0, [fp, #-12]
   1dbb8:	ldr	r0, [fp, #-12]
   1dbbc:	ldr	r1, [fp, #-16]
   1dbc0:	bl	1c960 <main@@Base+0x6014>
   1dbc4:	str	r1, [sp, #20]
   1dbc8:	str	r0, [sp, #16]
   1dbcc:	ldr	r0, [sp, #20]
   1dbd0:	bic	r0, r0, #255	; 0xff
   1dbd4:	movw	r1, #27904	; 0x6d00
   1dbd8:	movt	r1, #28277	; 0x6e75
   1dbdc:	teq	r0, r1
   1dbe0:	bne	1dc50 <main@@Base+0x7304>
   1dbe4:	b	1dbe8 <main@@Base+0x729c>
   1dbe8:	ldr	r0, [fp, #-8]
   1dbec:	ldr	r1, [fp, #-12]
   1dbf0:	str	r1, [sp, #28]
   1dbf4:	ldr	r2, [fp, #-16]
   1dbf8:	movw	r3, #3
   1dbfc:	bl	21cf8 <main@@Base+0xb3ac>
   1dc00:	str	r0, [fp, #-12]
   1dc04:	ldr	r0, [fp, #-12]
   1dc08:	ldr	r1, [sp, #28]
   1dc0c:	cmp	r0, r1
   1dc10:	beq	1dc40 <main@@Base+0x72f4>
   1dc14:	ldr	r0, [fp, #-8]
   1dc18:	ldr	r1, [fp, #-12]
   1dc1c:	ldr	r2, [fp, #-16]
   1dc20:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dc24:	ldr	ip, [fp, #8]
   1dc28:	ldr	lr, [fp, #12]
   1dc2c:	str	ip, [sp]
   1dc30:	str	lr, [sp, #4]
   1dc34:	bl	22784 <main@@Base+0xbe38>
   1dc38:	str	r0, [fp, #-12]
   1dc3c:	b	1dc4c <main@@Base+0x7300>
   1dc40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc44:	str	r0, [fp, #-4]
   1dc48:	b	1dea8 <main@@Base+0x755c>
   1dc4c:	b	1dc5c <main@@Base+0x7310>
   1dc50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc54:	str	r0, [fp, #-4]
   1dc58:	b	1dea8 <main@@Base+0x755c>
   1dc5c:	b	1dc6c <main@@Base+0x7320>
   1dc60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc64:	str	r0, [fp, #-4]
   1dc68:	b	1dea8 <main@@Base+0x755c>
   1dc6c:	b	1dc70 <main@@Base+0x7324>
   1dc70:	b	1dc80 <main@@Base+0x7334>
   1dc74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc78:	str	r0, [fp, #-4]
   1dc7c:	b	1dea8 <main@@Base+0x755c>
   1dc80:	b	1dc84 <main@@Base+0x7338>
   1dc84:	b	1dc88 <main@@Base+0x733c>
   1dc88:	b	1dc8c <main@@Base+0x7340>
   1dc8c:	b	1de9c <main@@Base+0x7550>
   1dc90:	ldr	r0, [sp, #16]
   1dc94:	ldr	r1, [sp, #20]
   1dc98:	movw	r2, #18273	; 0x4761
   1dc9c:	movt	r2, #19833	; 0x4d79
   1dca0:	eor	r1, r1, r2
   1dca4:	movw	r2, #11855	; 0x2e4f
   1dca8:	movt	r2, #28005	; 0x6d65
   1dcac:	eor	r0, r0, r2
   1dcb0:	orr	r0, r0, r1
   1dcb4:	cmp	r0, #0
   1dcb8:	bne	1de8c <main@@Base+0x7540>
   1dcbc:	b	1dcc0 <main@@Base+0x7374>
   1dcc0:	ldr	r0, [fp, #-12]
   1dcc4:	add	r0, r0, #8
   1dcc8:	str	r0, [fp, #-12]
   1dccc:	ldr	r0, [fp, #-12]
   1dcd0:	ldr	r1, [fp, #-16]
   1dcd4:	bl	1c960 <main@@Base+0x6014>
   1dcd8:	str	r1, [sp, #20]
   1dcdc:	str	r0, [sp, #16]
   1dce0:	ldr	r0, [sp, #16]
   1dce4:	ldr	r1, [sp, #20]
   1dce8:	movw	r2, #25970	; 0x6572
   1dcec:	movt	r2, #29800	; 0x7468
   1dcf0:	eor	r1, r1, r2
   1dcf4:	movw	r2, #28005	; 0x6d65
   1dcf8:	movt	r2, #20065	; 0x4e61
   1dcfc:	eor	r0, r0, r2
   1dd00:	orr	r0, r0, r1
   1dd04:	cmp	r0, #0
   1dd08:	bne	1de7c <main@@Base+0x7530>
   1dd0c:	b	1dd10 <main@@Base+0x73c4>
   1dd10:	ldr	r0, [fp, #-12]
   1dd14:	add	r0, r0, #8
   1dd18:	str	r0, [fp, #-12]
   1dd1c:	ldr	r0, [fp, #-12]
   1dd20:	ldr	r1, [fp, #-16]
   1dd24:	bl	1c960 <main@@Base+0x6014>
   1dd28:	str	r1, [sp, #20]
   1dd2c:	str	r0, [sp, #16]
   1dd30:	ldr	r0, [sp, #16]
   1dd34:	ldr	r1, [sp, #20]
   1dd38:	movw	r2, #24931	; 0x6163
   1dd3c:	movt	r2, #21360	; 0x5370
   1dd40:	eor	r1, r1, r2
   1dd44:	movw	r2, #18034	; 0x4672
   1dd48:	movt	r2, #25902	; 0x652e
   1dd4c:	eor	r0, r0, r2
   1dd50:	orr	r0, r0, r1
   1dd54:	cmp	r0, #0
   1dd58:	bne	1de6c <main@@Base+0x7520>
   1dd5c:	b	1dd60 <main@@Base+0x7414>
   1dd60:	ldr	r0, [fp, #-12]
   1dd64:	add	r0, r0, #8
   1dd68:	str	r0, [fp, #-12]
   1dd6c:	ldr	r0, [fp, #-12]
   1dd70:	ldr	r1, [fp, #-16]
   1dd74:	bl	1c960 <main@@Base+0x6014>
   1dd78:	str	r1, [sp, #20]
   1dd7c:	str	r0, [sp, #16]
   1dd80:	ldr	r0, [sp, #16]
   1dd84:	ldr	r1, [sp, #20]
   1dd88:	movw	r2, #18798	; 0x496e
   1dd8c:	movt	r2, #28525	; 0x6f6d
   1dd90:	eor	r1, r1, r2
   1dd94:	movw	r2, #30052	; 0x7564
   1dd98:	movt	r2, #25452	; 0x636c
   1dd9c:	eor	r0, r0, r2
   1dda0:	orr	r0, r0, r1
   1dda4:	cmp	r0, #0
   1dda8:	bne	1de5c <main@@Base+0x7510>
   1ddac:	b	1ddb0 <main@@Base+0x7464>
   1ddb0:	ldr	r0, [fp, #-12]
   1ddb4:	add	r0, r0, #8
   1ddb8:	str	r0, [fp, #-12]
   1ddbc:	ldr	r0, [fp, #-12]
   1ddc0:	ldr	r1, [fp, #-16]
   1ddc4:	bl	1c960 <main@@Base+0x6014>
   1ddc8:	str	r1, [sp, #20]
   1ddcc:	str	r0, [sp, #16]
   1ddd0:	ldrb	r0, [sp, #23]
   1ddd4:	mov	r1, #1694498816	; 0x65000000
   1ddd8:	teq	r1, r0, lsl #24
   1dddc:	bne	1de4c <main@@Base+0x7500>
   1dde0:	b	1dde4 <main@@Base+0x7498>
   1dde4:	ldr	r0, [fp, #-8]
   1dde8:	ldr	r1, [fp, #-12]
   1ddec:	str	r1, [sp, #28]
   1ddf0:	ldr	r2, [fp, #-16]
   1ddf4:	movw	r3, #1
   1ddf8:	bl	21cf8 <main@@Base+0xb3ac>
   1ddfc:	str	r0, [fp, #-12]
   1de00:	ldr	r0, [fp, #-12]
   1de04:	ldr	r1, [sp, #28]
   1de08:	cmp	r0, r1
   1de0c:	beq	1de3c <main@@Base+0x74f0>
   1de10:	ldr	r0, [fp, #-8]
   1de14:	ldr	r1, [fp, #-12]
   1de18:	ldr	r2, [fp, #-16]
   1de1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1de20:	ldr	ip, [fp, #8]
   1de24:	ldr	lr, [fp, #12]
   1de28:	str	ip, [sp]
   1de2c:	str	lr, [sp, #4]
   1de30:	bl	22e0c <main@@Base+0xc4c0>
   1de34:	str	r0, [fp, #-12]
   1de38:	b	1de48 <main@@Base+0x74fc>
   1de3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de40:	str	r0, [fp, #-4]
   1de44:	b	1dea8 <main@@Base+0x755c>
   1de48:	b	1de58 <main@@Base+0x750c>
   1de4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de50:	str	r0, [fp, #-4]
   1de54:	b	1dea8 <main@@Base+0x755c>
   1de58:	b	1de68 <main@@Base+0x751c>
   1de5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de60:	str	r0, [fp, #-4]
   1de64:	b	1dea8 <main@@Base+0x755c>
   1de68:	b	1de78 <main@@Base+0x752c>
   1de6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de70:	str	r0, [fp, #-4]
   1de74:	b	1dea8 <main@@Base+0x755c>
   1de78:	b	1de88 <main@@Base+0x753c>
   1de7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de80:	str	r0, [fp, #-4]
   1de84:	b	1dea8 <main@@Base+0x755c>
   1de88:	b	1de98 <main@@Base+0x754c>
   1de8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de90:	str	r0, [fp, #-4]
   1de94:	b	1dea8 <main@@Base+0x755c>
   1de98:	b	1de9c <main@@Base+0x7550>
   1de9c:	b	1dea0 <main@@Base+0x7554>
   1dea0:	ldr	r0, [fp, #-12]
   1dea4:	str	r0, [fp, #-4]
   1dea8:	ldr	r0, [fp, #-4]
   1deac:	mov	sp, fp
   1deb0:	pop	{fp, pc}
   1deb4:	push	{r4, r5, fp, lr}
   1deb8:	add	fp, sp, #8
   1debc:	sub	sp, sp, #56	; 0x38
   1dec0:	str	r0, [fp, #-16]
   1dec4:	str	r1, [fp, #-20]	; 0xffffffec
   1dec8:	str	r2, [fp, #-24]	; 0xffffffe8
   1decc:	str	r3, [fp, #-28]	; 0xffffffe4
   1ded0:	mov	r0, #0
   1ded4:	str	r0, [sp, #28]
   1ded8:	str	r0, [sp, #24]
   1dedc:	movw	r0, #0
   1dee0:	str	r0, [sp, #20]
   1dee4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dee8:	str	r0, [sp, #16]
   1deec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1def0:	movw	r1, #0
   1def4:	strb	r1, [r0]
   1def8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1defc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1df00:	cmp	r0, r1
   1df04:	bne	1df14 <main@@Base+0x75c8>
   1df08:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df0c:	str	r0, [fp, #-12]
   1df10:	b	1df84 <main@@Base+0x7638>
   1df14:	ldr	r0, [fp, #-16]
   1df18:	ldr	r1, [fp, #-20]	; 0xffffffec
   1df1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1df20:	add	r3, sp, #20
   1df24:	add	ip, sp, #24
   1df28:	str	ip, [sp]
   1df2c:	bl	365ac <flatcc_json_parser_integer@@Base>
   1df30:	str	r0, [fp, #-20]	; 0xffffffec
   1df34:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df38:	ldr	r1, [sp, #16]
   1df3c:	cmp	r0, r1
   1df40:	beq	1df7c <main@@Base+0x7630>
   1df44:	ldr	r0, [fp, #-16]
   1df48:	ldr	r1, [fp, #-20]	; 0xffffffec
   1df4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1df50:	ldr	r3, [sp, #20]
   1df54:	ldr	ip, [sp, #24]
   1df58:	ldr	lr, [sp, #28]
   1df5c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1df60:	mov	r5, sp
   1df64:	str	r4, [r5, #8]
   1df68:	str	lr, [r5, #4]
   1df6c:	str	ip, [r5]
   1df70:	bl	22ff0 <main@@Base+0xc6a4>
   1df74:	str	r0, [fp, #-12]
   1df78:	b	1df84 <main@@Base+0x7638>
   1df7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df80:	str	r0, [fp, #-12]
   1df84:	ldr	r0, [fp, #-12]
   1df88:	sub	sp, fp, #8
   1df8c:	pop	{r4, r5, fp, pc}
   1df90:	push	{r4, r5, r6, sl, fp, lr}
   1df94:	add	fp, sp, #16
   1df98:	sub	sp, sp, #80	; 0x50
   1df9c:	ldr	ip, [fp, #8]
   1dfa0:	str	r0, [fp, #-24]	; 0xffffffe8
   1dfa4:	str	r1, [fp, #-28]	; 0xffffffe4
   1dfa8:	str	r2, [fp, #-32]	; 0xffffffe0
   1dfac:	str	r3, [fp, #-36]	; 0xffffffdc
   1dfb0:	movw	r0, #0
   1dfb4:	strb	r0, [fp, #-45]	; 0xffffffd3
   1dfb8:	ldr	r1, [fp, #8]
   1dfbc:	strb	r0, [r1]
   1dfc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dfc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dfcc:	str	ip, [sp, #28]
   1dfd0:	bl	230c8 <main@@Base+0xc77c>
   1dfd4:	str	r0, [fp, #-28]	; 0xffffffe4
   1dfd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dfdc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dfe0:	cmp	r0, r1
   1dfe4:	bne	1dff4 <main@@Base+0x76a8>
   1dfe8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dfec:	str	r0, [fp, #-20]	; 0xffffffec
   1dff0:	b	1e168 <main@@Base+0x781c>
   1dff4:	b	1dff8 <main@@Base+0x76ac>
   1dff8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dffc:	str	r0, [fp, #-40]	; 0xffffffd8
   1e000:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e004:	ldr	r0, [r0]
   1e008:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e00c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e010:	str	r2, [fp, #-44]	; 0xffffffd4
   1e014:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e018:	str	r0, [sp, #24]
   1e01c:	mov	r0, r1
   1e020:	mov	r1, r2
   1e024:	mov	r2, r3
   1e028:	add	r3, sp, #36	; 0x24
   1e02c:	add	ip, sp, #40	; 0x28
   1e030:	str	ip, [sp]
   1e034:	add	ip, sp, #32
   1e038:	str	ip, [sp, #4]
   1e03c:	ldr	ip, [sp, #24]
   1e040:	blx	ip
   1e044:	str	r0, [fp, #-28]	; 0xffffffe4
   1e048:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e04c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e050:	cmp	r0, r1
   1e054:	bne	1e064 <main@@Base+0x7718>
   1e058:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e05c:	str	r0, [fp, #-20]	; 0xffffffec
   1e060:	b	1e168 <main@@Base+0x781c>
   1e064:	b	1e068 <main@@Base+0x771c>
   1e068:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e06c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e070:	cmp	r0, r1
   1e074:	movw	r0, #0
   1e078:	str	r0, [sp, #20]
   1e07c:	bne	1e0a4 <main@@Base+0x7758>
   1e080:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e084:	add	r1, r0, #4
   1e088:	str	r1, [fp, #-40]	; 0xffffffd8
   1e08c:	ldr	r0, [r0, #4]
   1e090:	movw	r1, #0
   1e094:	cmp	r0, r1
   1e098:	movw	r0, #0
   1e09c:	movne	r0, #1
   1e0a0:	str	r0, [sp, #20]
   1e0a4:	ldr	r0, [sp, #20]
   1e0a8:	tst	r0, #1
   1e0ac:	bne	1e000 <main@@Base+0x76b4>
   1e0b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e0b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e0b8:	cmp	r0, r1
   1e0bc:	bne	1e0dc <main@@Base+0x7790>
   1e0c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e0c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e0cc:	movw	r3, #23
   1e0d0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1e0d4:	str	r0, [fp, #-20]	; 0xffffffec
   1e0d8:	b	1e168 <main@@Base+0x781c>
   1e0dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e0e0:	mov	r1, r0
   1e0e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e0e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e0ec:	ldr	ip, [sp, #36]	; 0x24
   1e0f0:	ldr	lr, [sp, #40]	; 0x28
   1e0f4:	ldr	r4, [sp, #44]	; 0x2c
   1e0f8:	mov	r5, sp
   1e0fc:	sub	r6, fp, #45	; 0x2d
   1e100:	str	r6, [r5, #8]
   1e104:	str	r4, [r5, #4]
   1e108:	str	lr, [r5]
   1e10c:	str	r0, [sp, #16]
   1e110:	mov	r0, r2
   1e114:	str	r1, [sp, #12]
   1e118:	mov	r1, r3
   1e11c:	ldr	r2, [sp, #16]
   1e120:	mov	r3, ip
   1e124:	bl	22ff0 <main@@Base+0xc6a4>
   1e128:	ldr	r1, [sp, #12]
   1e12c:	cmp	r1, r0
   1e130:	bne	1e140 <main@@Base+0x77f4>
   1e134:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e138:	str	r0, [fp, #-20]	; 0xffffffec
   1e13c:	b	1e168 <main@@Base+0x781c>
   1e140:	ldrsb	r0, [fp, #-45]	; 0xffffffd3
   1e144:	ldr	r1, [fp, #8]
   1e148:	ldrsb	r2, [r1]
   1e14c:	add	r0, r2, r0
   1e150:	strb	r0, [r1]
   1e154:	ldr	r0, [sp, #32]
   1e158:	cmp	r0, #0
   1e15c:	bne	1dff8 <main@@Base+0x76ac>
   1e160:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e164:	str	r0, [fp, #-20]	; 0xffffffec
   1e168:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e16c:	sub	sp, fp, #16
   1e170:	pop	{r4, r5, r6, sl, fp, pc}
   1e174:	push	{fp, lr}
   1e178:	mov	fp, sp
   1e17c:	sub	sp, sp, #8
   1e180:	str	r0, [sp, #4]
   1e184:	strb	r1, [sp, #3]
   1e188:	ldrsb	r0, [sp, #3]
   1e18c:	bl	23124 <main@@Base+0xc7d8>
   1e190:	ldr	r1, [sp, #4]
   1e194:	strb	r0, [r1]
   1e198:	mov	sp, fp
   1e19c:	pop	{fp, pc}
   1e1a0:	push	{fp, lr}
   1e1a4:	mov	fp, sp
   1e1a8:	sub	sp, sp, #24
   1e1ac:	str	r0, [fp, #-8]
   1e1b0:	str	r1, [sp, #12]
   1e1b4:	str	r2, [sp, #8]
   1e1b8:	str	r3, [sp, #4]
   1e1bc:	ldr	r0, [sp, #12]
   1e1c0:	ldr	r1, [sp, #8]
   1e1c4:	cmp	r0, r1
   1e1c8:	beq	1e1dc <main@@Base+0x7890>
   1e1cc:	ldr	r0, [sp, #12]
   1e1d0:	ldrb	r0, [r0]
   1e1d4:	cmp	r0, #91	; 0x5b
   1e1d8:	beq	1e204 <main@@Base+0x78b8>
   1e1dc:	ldr	r0, [sp, #4]
   1e1e0:	movw	r1, #0
   1e1e4:	str	r1, [r0]
   1e1e8:	ldr	r0, [fp, #-8]
   1e1ec:	ldr	r1, [sp, #12]
   1e1f0:	ldr	r2, [sp, #8]
   1e1f4:	movw	r3, #22
   1e1f8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1e1fc:	str	r0, [fp, #-4]
   1e200:	b	1e278 <main@@Base+0x792c>
   1e204:	ldr	r0, [fp, #-8]
   1e208:	ldr	r1, [sp, #12]
   1e20c:	add	r1, r1, #1
   1e210:	ldr	r2, [sp, #8]
   1e214:	bl	21ae8 <main@@Base+0xb19c>
   1e218:	str	r0, [sp, #12]
   1e21c:	ldr	r0, [sp, #12]
   1e220:	ldr	r1, [sp, #8]
   1e224:	cmp	r0, r1
   1e228:	beq	1e264 <main@@Base+0x7918>
   1e22c:	ldr	r0, [sp, #12]
   1e230:	ldrb	r0, [r0]
   1e234:	cmp	r0, #93	; 0x5d
   1e238:	bne	1e264 <main@@Base+0x7918>
   1e23c:	ldr	r0, [sp, #4]
   1e240:	movw	r1, #0
   1e244:	str	r1, [r0]
   1e248:	ldr	r0, [fp, #-8]
   1e24c:	ldr	r1, [sp, #12]
   1e250:	add	r1, r1, #1
   1e254:	ldr	r2, [sp, #8]
   1e258:	bl	21ae8 <main@@Base+0xb19c>
   1e25c:	str	r0, [fp, #-4]
   1e260:	b	1e278 <main@@Base+0x792c>
   1e264:	ldr	r0, [sp, #4]
   1e268:	movw	r1, #1
   1e26c:	str	r1, [r0]
   1e270:	ldr	r0, [sp, #12]
   1e274:	str	r0, [fp, #-4]
   1e278:	ldr	r0, [fp, #-4]
   1e27c:	mov	sp, fp
   1e280:	pop	{fp, pc}
   1e284:	push	{r4, r5, fp, lr}
   1e288:	add	fp, sp, #8
   1e28c:	sub	sp, sp, #56	; 0x38
   1e290:	str	r0, [fp, #-16]
   1e294:	str	r1, [fp, #-20]	; 0xffffffec
   1e298:	str	r2, [fp, #-24]	; 0xffffffe8
   1e29c:	str	r3, [fp, #-28]	; 0xffffffe4
   1e2a0:	mov	r0, #0
   1e2a4:	str	r0, [sp, #28]
   1e2a8:	str	r0, [sp, #24]
   1e2ac:	movw	r0, #0
   1e2b0:	str	r0, [sp, #20]
   1e2b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e2b8:	str	r0, [sp, #16]
   1e2bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e2c0:	movw	r1, #0
   1e2c4:	strb	r1, [r0]
   1e2c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e2cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e2d0:	cmp	r0, r1
   1e2d4:	bne	1e2e4 <main@@Base+0x7998>
   1e2d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e2dc:	str	r0, [fp, #-12]
   1e2e0:	b	1e354 <main@@Base+0x7a08>
   1e2e4:	ldr	r0, [fp, #-16]
   1e2e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e2ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e2f0:	add	r3, sp, #20
   1e2f4:	add	ip, sp, #24
   1e2f8:	str	ip, [sp]
   1e2fc:	bl	365ac <flatcc_json_parser_integer@@Base>
   1e300:	str	r0, [fp, #-20]	; 0xffffffec
   1e304:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e308:	ldr	r1, [sp, #16]
   1e30c:	cmp	r0, r1
   1e310:	beq	1e34c <main@@Base+0x7a00>
   1e314:	ldr	r0, [fp, #-16]
   1e318:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e31c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e320:	ldr	r3, [sp, #20]
   1e324:	ldr	ip, [sp, #24]
   1e328:	ldr	lr, [sp, #28]
   1e32c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1e330:	mov	r5, sp
   1e334:	str	r4, [r5, #8]
   1e338:	str	lr, [r5, #4]
   1e33c:	str	ip, [r5]
   1e340:	bl	23138 <main@@Base+0xc7ec>
   1e344:	str	r0, [fp, #-12]
   1e348:	b	1e354 <main@@Base+0x7a08>
   1e34c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e350:	str	r0, [fp, #-12]
   1e354:	ldr	r0, [fp, #-12]
   1e358:	sub	sp, fp, #8
   1e35c:	pop	{r4, r5, fp, pc}
   1e360:	push	{r4, r5, r6, sl, fp, lr}
   1e364:	add	fp, sp, #16
   1e368:	sub	sp, sp, #80	; 0x50
   1e36c:	ldr	ip, [fp, #8]
   1e370:	str	r0, [fp, #-24]	; 0xffffffe8
   1e374:	str	r1, [fp, #-28]	; 0xffffffe4
   1e378:	str	r2, [fp, #-32]	; 0xffffffe0
   1e37c:	str	r3, [fp, #-36]	; 0xffffffdc
   1e380:	movw	r0, #0
   1e384:	strb	r0, [fp, #-45]	; 0xffffffd3
   1e388:	ldr	r1, [fp, #8]
   1e38c:	strb	r0, [r1]
   1e390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e394:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e398:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e39c:	str	ip, [sp, #28]
   1e3a0:	bl	230c8 <main@@Base+0xc77c>
   1e3a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e3a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e3ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e3b0:	cmp	r0, r1
   1e3b4:	bne	1e3c4 <main@@Base+0x7a78>
   1e3b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e3bc:	str	r0, [fp, #-20]	; 0xffffffec
   1e3c0:	b	1e538 <main@@Base+0x7bec>
   1e3c4:	b	1e3c8 <main@@Base+0x7a7c>
   1e3c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e3cc:	str	r0, [fp, #-40]	; 0xffffffd8
   1e3d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e3d4:	ldr	r0, [r0]
   1e3d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e3dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e3e0:	str	r2, [fp, #-44]	; 0xffffffd4
   1e3e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e3e8:	str	r0, [sp, #24]
   1e3ec:	mov	r0, r1
   1e3f0:	mov	r1, r2
   1e3f4:	mov	r2, r3
   1e3f8:	add	r3, sp, #36	; 0x24
   1e3fc:	add	ip, sp, #40	; 0x28
   1e400:	str	ip, [sp]
   1e404:	add	ip, sp, #32
   1e408:	str	ip, [sp, #4]
   1e40c:	ldr	ip, [sp, #24]
   1e410:	blx	ip
   1e414:	str	r0, [fp, #-28]	; 0xffffffe4
   1e418:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e41c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e420:	cmp	r0, r1
   1e424:	bne	1e434 <main@@Base+0x7ae8>
   1e428:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e42c:	str	r0, [fp, #-20]	; 0xffffffec
   1e430:	b	1e538 <main@@Base+0x7bec>
   1e434:	b	1e438 <main@@Base+0x7aec>
   1e438:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e43c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e440:	cmp	r0, r1
   1e444:	movw	r0, #0
   1e448:	str	r0, [sp, #20]
   1e44c:	bne	1e474 <main@@Base+0x7b28>
   1e450:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e454:	add	r1, r0, #4
   1e458:	str	r1, [fp, #-40]	; 0xffffffd8
   1e45c:	ldr	r0, [r0, #4]
   1e460:	movw	r1, #0
   1e464:	cmp	r0, r1
   1e468:	movw	r0, #0
   1e46c:	movne	r0, #1
   1e470:	str	r0, [sp, #20]
   1e474:	ldr	r0, [sp, #20]
   1e478:	tst	r0, #1
   1e47c:	bne	1e3d0 <main@@Base+0x7a84>
   1e480:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e484:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e488:	cmp	r0, r1
   1e48c:	bne	1e4ac <main@@Base+0x7b60>
   1e490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e494:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e498:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e49c:	movw	r3, #23
   1e4a0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1e4a4:	str	r0, [fp, #-20]	; 0xffffffec
   1e4a8:	b	1e538 <main@@Base+0x7bec>
   1e4ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e4b0:	mov	r1, r0
   1e4b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e4b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e4bc:	ldr	ip, [sp, #36]	; 0x24
   1e4c0:	ldr	lr, [sp, #40]	; 0x28
   1e4c4:	ldr	r4, [sp, #44]	; 0x2c
   1e4c8:	mov	r5, sp
   1e4cc:	sub	r6, fp, #45	; 0x2d
   1e4d0:	str	r6, [r5, #8]
   1e4d4:	str	r4, [r5, #4]
   1e4d8:	str	lr, [r5]
   1e4dc:	str	r0, [sp, #16]
   1e4e0:	mov	r0, r2
   1e4e4:	str	r1, [sp, #12]
   1e4e8:	mov	r1, r3
   1e4ec:	ldr	r2, [sp, #16]
   1e4f0:	mov	r3, ip
   1e4f4:	bl	23138 <main@@Base+0xc7ec>
   1e4f8:	ldr	r1, [sp, #12]
   1e4fc:	cmp	r1, r0
   1e500:	bne	1e510 <main@@Base+0x7bc4>
   1e504:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e508:	str	r0, [fp, #-20]	; 0xffffffec
   1e50c:	b	1e538 <main@@Base+0x7bec>
   1e510:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1e514:	ldr	r1, [fp, #8]
   1e518:	ldrb	r2, [r1]
   1e51c:	add	r0, r2, r0
   1e520:	strb	r0, [r1]
   1e524:	ldr	r0, [sp, #32]
   1e528:	cmp	r0, #0
   1e52c:	bne	1e3c8 <main@@Base+0x7a7c>
   1e530:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e534:	str	r0, [fp, #-20]	; 0xffffffec
   1e538:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e53c:	sub	sp, fp, #16
   1e540:	pop	{r4, r5, r6, sl, fp, pc}
   1e544:	push	{fp, lr}
   1e548:	mov	fp, sp
   1e54c:	sub	sp, sp, #8
   1e550:	str	r0, [sp, #4]
   1e554:	strb	r1, [sp, #3]
   1e558:	ldrb	r0, [sp, #3]
   1e55c:	bl	231e4 <main@@Base+0xc898>
   1e560:	ldr	r1, [sp, #4]
   1e564:	strb	r0, [r1]
   1e568:	mov	sp, fp
   1e56c:	pop	{fp, pc}
   1e570:	push	{fp, lr}
   1e574:	mov	fp, sp
   1e578:	sub	sp, sp, #24
   1e57c:	str	r0, [fp, #-8]
   1e580:	str	r1, [sp, #12]
   1e584:	str	r2, [sp, #8]
   1e588:	str	r3, [sp, #4]
   1e58c:	ldr	r0, [fp, #-8]
   1e590:	ldr	r1, [sp, #12]
   1e594:	ldr	r2, [sp, #8]
   1e598:	bl	21ae8 <main@@Base+0xb19c>
   1e59c:	str	r0, [sp, #12]
   1e5a0:	ldr	r0, [sp, #12]
   1e5a4:	ldr	r1, [sp, #8]
   1e5a8:	cmp	r0, r1
   1e5ac:	bne	1e5c8 <main@@Base+0x7c7c>
   1e5b0:	ldr	r0, [sp, #4]
   1e5b4:	movw	r1, #0
   1e5b8:	str	r1, [r0]
   1e5bc:	ldr	r0, [sp, #12]
   1e5c0:	str	r0, [fp, #-4]
   1e5c4:	b	1e6c8 <main@@Base+0x7d7c>
   1e5c8:	ldr	r0, [sp, #12]
   1e5cc:	ldrb	r0, [r0]
   1e5d0:	cmp	r0, #44	; 0x2c
   1e5d4:	beq	1e62c <main@@Base+0x7ce0>
   1e5d8:	ldr	r0, [sp, #4]
   1e5dc:	movw	r1, #0
   1e5e0:	str	r1, [r0]
   1e5e4:	ldr	r0, [sp, #12]
   1e5e8:	ldrb	r0, [r0]
   1e5ec:	cmp	r0, #93	; 0x5d
   1e5f0:	beq	1e610 <main@@Base+0x7cc4>
   1e5f4:	ldr	r0, [fp, #-8]
   1e5f8:	ldr	r1, [sp, #12]
   1e5fc:	ldr	r2, [sp, #8]
   1e600:	movw	r3, #9
   1e604:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1e608:	str	r0, [fp, #-4]
   1e60c:	b	1e6c8 <main@@Base+0x7d7c>
   1e610:	ldr	r0, [fp, #-8]
   1e614:	ldr	r1, [sp, #12]
   1e618:	add	r1, r1, #1
   1e61c:	ldr	r2, [sp, #8]
   1e620:	bl	21ae8 <main@@Base+0xb19c>
   1e624:	str	r0, [fp, #-4]
   1e628:	b	1e6c8 <main@@Base+0x7d7c>
   1e62c:	ldr	r0, [fp, #-8]
   1e630:	ldr	r1, [sp, #12]
   1e634:	add	r1, r1, #1
   1e638:	ldr	r2, [sp, #8]
   1e63c:	bl	21ae8 <main@@Base+0xb19c>
   1e640:	str	r0, [sp, #12]
   1e644:	ldr	r0, [sp, #12]
   1e648:	ldr	r1, [sp, #8]
   1e64c:	cmp	r0, r1
   1e650:	bne	1e67c <main@@Base+0x7d30>
   1e654:	ldr	r0, [sp, #4]
   1e658:	movw	r1, #0
   1e65c:	str	r1, [r0]
   1e660:	ldr	r0, [fp, #-8]
   1e664:	ldr	r1, [sp, #12]
   1e668:	ldr	r2, [sp, #8]
   1e66c:	movw	r3, #9
   1e670:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1e674:	str	r0, [fp, #-4]
   1e678:	b	1e6c8 <main@@Base+0x7d7c>
   1e67c:	ldr	r0, [sp, #12]
   1e680:	ldrb	r0, [r0]
   1e684:	cmp	r0, #93	; 0x5d
   1e688:	bne	1e6b4 <main@@Base+0x7d68>
   1e68c:	ldr	r0, [sp, #4]
   1e690:	movw	r1, #0
   1e694:	str	r1, [r0]
   1e698:	ldr	r0, [fp, #-8]
   1e69c:	ldr	r1, [sp, #12]
   1e6a0:	add	r1, r1, #1
   1e6a4:	ldr	r2, [sp, #8]
   1e6a8:	bl	21ae8 <main@@Base+0xb19c>
   1e6ac:	str	r0, [fp, #-4]
   1e6b0:	b	1e6c8 <main@@Base+0x7d7c>
   1e6b4:	ldr	r0, [sp, #4]
   1e6b8:	movw	r1, #1
   1e6bc:	str	r1, [r0]
   1e6c0:	ldr	r0, [sp, #12]
   1e6c4:	str	r0, [fp, #-4]
   1e6c8:	ldr	r0, [fp, #-4]
   1e6cc:	mov	sp, fp
   1e6d0:	pop	{fp, pc}
   1e6d4:	push	{r4, r5, fp, lr}
   1e6d8:	add	fp, sp, #8
   1e6dc:	sub	sp, sp, #56	; 0x38
   1e6e0:	str	r0, [fp, #-16]
   1e6e4:	str	r1, [fp, #-20]	; 0xffffffec
   1e6e8:	str	r2, [fp, #-24]	; 0xffffffe8
   1e6ec:	str	r3, [fp, #-28]	; 0xffffffe4
   1e6f0:	mov	r0, #0
   1e6f4:	str	r0, [sp, #28]
   1e6f8:	str	r0, [sp, #24]
   1e6fc:	movw	r0, #0
   1e700:	str	r0, [sp, #20]
   1e704:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e708:	str	r0, [sp, #16]
   1e70c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e710:	movw	r1, #0
   1e714:	strh	r1, [r0]
   1e718:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e71c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e720:	cmp	r0, r1
   1e724:	bne	1e734 <main@@Base+0x7de8>
   1e728:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e72c:	str	r0, [fp, #-12]
   1e730:	b	1e7a4 <main@@Base+0x7e58>
   1e734:	ldr	r0, [fp, #-16]
   1e738:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e73c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e740:	add	r3, sp, #20
   1e744:	add	ip, sp, #24
   1e748:	str	ip, [sp]
   1e74c:	bl	365ac <flatcc_json_parser_integer@@Base>
   1e750:	str	r0, [fp, #-20]	; 0xffffffec
   1e754:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e758:	ldr	r1, [sp, #16]
   1e75c:	cmp	r0, r1
   1e760:	beq	1e79c <main@@Base+0x7e50>
   1e764:	ldr	r0, [fp, #-16]
   1e768:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e76c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e770:	ldr	r3, [sp, #20]
   1e774:	ldr	ip, [sp, #24]
   1e778:	ldr	lr, [sp, #28]
   1e77c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1e780:	mov	r5, sp
   1e784:	str	r4, [r5, #8]
   1e788:	str	lr, [r5, #4]
   1e78c:	str	ip, [r5]
   1e790:	bl	231f8 <main@@Base+0xc8ac>
   1e794:	str	r0, [fp, #-12]
   1e798:	b	1e7a4 <main@@Base+0x7e58>
   1e79c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e7a0:	str	r0, [fp, #-12]
   1e7a4:	ldr	r0, [fp, #-12]
   1e7a8:	sub	sp, fp, #8
   1e7ac:	pop	{r4, r5, fp, pc}
   1e7b0:	push	{r4, r5, r6, sl, fp, lr}
   1e7b4:	add	fp, sp, #16
   1e7b8:	sub	sp, sp, #80	; 0x50
   1e7bc:	ldr	ip, [fp, #8]
   1e7c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1e7c4:	str	r1, [fp, #-28]	; 0xffffffe4
   1e7c8:	str	r2, [fp, #-32]	; 0xffffffe0
   1e7cc:	str	r3, [fp, #-36]	; 0xffffffdc
   1e7d0:	movw	r0, #0
   1e7d4:	strh	r0, [fp, #-46]	; 0xffffffd2
   1e7d8:	ldr	r1, [fp, #8]
   1e7dc:	strh	r0, [r1]
   1e7e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e7e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e7ec:	str	ip, [sp, #28]
   1e7f0:	bl	230c8 <main@@Base+0xc77c>
   1e7f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e7f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e7fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e800:	cmp	r0, r1
   1e804:	bne	1e814 <main@@Base+0x7ec8>
   1e808:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e80c:	str	r0, [fp, #-20]	; 0xffffffec
   1e810:	b	1e988 <main@@Base+0x803c>
   1e814:	b	1e818 <main@@Base+0x7ecc>
   1e818:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e81c:	str	r0, [fp, #-40]	; 0xffffffd8
   1e820:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e824:	ldr	r0, [r0]
   1e828:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e82c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e830:	str	r2, [fp, #-44]	; 0xffffffd4
   1e834:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e838:	str	r0, [sp, #24]
   1e83c:	mov	r0, r1
   1e840:	mov	r1, r2
   1e844:	mov	r2, r3
   1e848:	add	r3, sp, #36	; 0x24
   1e84c:	add	ip, sp, #40	; 0x28
   1e850:	str	ip, [sp]
   1e854:	add	ip, sp, #32
   1e858:	str	ip, [sp, #4]
   1e85c:	ldr	ip, [sp, #24]
   1e860:	blx	ip
   1e864:	str	r0, [fp, #-28]	; 0xffffffe4
   1e868:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e86c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e870:	cmp	r0, r1
   1e874:	bne	1e884 <main@@Base+0x7f38>
   1e878:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e87c:	str	r0, [fp, #-20]	; 0xffffffec
   1e880:	b	1e988 <main@@Base+0x803c>
   1e884:	b	1e888 <main@@Base+0x7f3c>
   1e888:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e88c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e890:	cmp	r0, r1
   1e894:	movw	r0, #0
   1e898:	str	r0, [sp, #20]
   1e89c:	bne	1e8c4 <main@@Base+0x7f78>
   1e8a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e8a4:	add	r1, r0, #4
   1e8a8:	str	r1, [fp, #-40]	; 0xffffffd8
   1e8ac:	ldr	r0, [r0, #4]
   1e8b0:	movw	r1, #0
   1e8b4:	cmp	r0, r1
   1e8b8:	movw	r0, #0
   1e8bc:	movne	r0, #1
   1e8c0:	str	r0, [sp, #20]
   1e8c4:	ldr	r0, [sp, #20]
   1e8c8:	tst	r0, #1
   1e8cc:	bne	1e820 <main@@Base+0x7ed4>
   1e8d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e8d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e8d8:	cmp	r0, r1
   1e8dc:	bne	1e8fc <main@@Base+0x7fb0>
   1e8e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e8e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e8ec:	movw	r3, #23
   1e8f0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1e8f4:	str	r0, [fp, #-20]	; 0xffffffec
   1e8f8:	b	1e988 <main@@Base+0x803c>
   1e8fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e900:	mov	r1, r0
   1e904:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e908:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e90c:	ldr	ip, [sp, #36]	; 0x24
   1e910:	ldr	lr, [sp, #40]	; 0x28
   1e914:	ldr	r4, [sp, #44]	; 0x2c
   1e918:	mov	r5, sp
   1e91c:	sub	r6, fp, #46	; 0x2e
   1e920:	str	r6, [r5, #8]
   1e924:	str	r4, [r5, #4]
   1e928:	str	lr, [r5]
   1e92c:	str	r0, [sp, #16]
   1e930:	mov	r0, r2
   1e934:	str	r1, [sp, #12]
   1e938:	mov	r1, r3
   1e93c:	ldr	r2, [sp, #16]
   1e940:	mov	r3, ip
   1e944:	bl	231f8 <main@@Base+0xc8ac>
   1e948:	ldr	r1, [sp, #12]
   1e94c:	cmp	r1, r0
   1e950:	bne	1e960 <main@@Base+0x8014>
   1e954:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e958:	str	r0, [fp, #-20]	; 0xffffffec
   1e95c:	b	1e988 <main@@Base+0x803c>
   1e960:	ldrsh	r0, [fp, #-46]	; 0xffffffd2
   1e964:	ldr	r1, [fp, #8]
   1e968:	ldrsh	r2, [r1]
   1e96c:	add	r0, r2, r0
   1e970:	strh	r0, [r1]
   1e974:	ldr	r0, [sp, #32]
   1e978:	cmp	r0, #0
   1e97c:	bne	1e818 <main@@Base+0x7ecc>
   1e980:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e984:	str	r0, [fp, #-20]	; 0xffffffec
   1e988:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e98c:	sub	sp, fp, #16
   1e990:	pop	{r4, r5, r6, sl, fp, pc}
   1e994:	push	{fp, lr}
   1e998:	mov	fp, sp
   1e99c:	sub	sp, sp, #8
   1e9a0:	str	r0, [sp, #4]
   1e9a4:	strh	r1, [sp, #2]
   1e9a8:	ldrsh	r0, [sp, #2]
   1e9ac:	bl	232d4 <main@@Base+0xc988>
   1e9b0:	ldr	r1, [sp, #4]
   1e9b4:	strh	r0, [r1]
   1e9b8:	mov	sp, fp
   1e9bc:	pop	{fp, pc}
   1e9c0:	push	{fp, lr}
   1e9c4:	mov	fp, sp
   1e9c8:	sub	sp, sp, #24
   1e9cc:	str	r0, [fp, #-8]
   1e9d0:	str	r1, [sp, #12]
   1e9d4:	str	r2, [sp, #8]
   1e9d8:	str	r3, [sp, #4]
   1e9dc:	ldr	r0, [sp, #4]
   1e9e0:	movw	r1, #0
   1e9e4:	str	r1, [r0]
   1e9e8:	ldr	r0, [fp, #-8]
   1e9ec:	ldr	r0, [r0]
   1e9f0:	bl	2c618 <flatcc_builder_start_table@@Base>
   1e9f4:	cmp	r0, #0
   1e9f8:	beq	1ea00 <main@@Base+0x80b4>
   1e9fc:	b	1eaa8 <main@@Base+0x815c>
   1ea00:	ldr	r0, [fp, #-8]
   1ea04:	ldr	r1, [sp, #12]
   1ea08:	ldr	r2, [sp, #8]
   1ea0c:	mov	r3, sp
   1ea10:	bl	1c7d0 <main@@Base+0x5e84>
   1ea14:	str	r0, [sp, #12]
   1ea18:	ldr	r0, [sp]
   1ea1c:	cmp	r0, #0
   1ea20:	beq	1ea68 <main@@Base+0x811c>
   1ea24:	ldr	r0, [fp, #-8]
   1ea28:	ldr	r1, [sp, #12]
   1ea2c:	ldr	r2, [sp, #8]
   1ea30:	bl	1c8b4 <main@@Base+0x5f68>
   1ea34:	str	r0, [sp, #12]
   1ea38:	ldr	r0, [fp, #-8]
   1ea3c:	ldr	r1, [sp, #12]
   1ea40:	ldr	r2, [sp, #8]
   1ea44:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1ea48:	str	r0, [sp, #12]
   1ea4c:	ldr	r0, [fp, #-8]
   1ea50:	ldr	r1, [sp, #12]
   1ea54:	ldr	r2, [sp, #8]
   1ea58:	mov	r3, sp
   1ea5c:	bl	21984 <main@@Base+0xb038>
   1ea60:	str	r0, [sp, #12]
   1ea64:	b	1ea18 <main@@Base+0x80cc>
   1ea68:	ldr	r0, [fp, #-8]
   1ea6c:	ldr	r0, [r0, #24]
   1ea70:	cmp	r0, #0
   1ea74:	beq	1ea7c <main@@Base+0x8130>
   1ea78:	b	1eaa8 <main@@Base+0x815c>
   1ea7c:	ldr	r0, [fp, #-8]
   1ea80:	ldr	r0, [r0]
   1ea84:	bl	2d280 <flatcc_builder_end_table@@Base>
   1ea88:	ldr	r1, [sp, #4]
   1ea8c:	str	r0, [r1]
   1ea90:	cmp	r0, #0
   1ea94:	bne	1ea9c <main@@Base+0x8150>
   1ea98:	b	1eaa8 <main@@Base+0x815c>
   1ea9c:	ldr	r0, [sp, #12]
   1eaa0:	str	r0, [fp, #-4]
   1eaa4:	b	1eac0 <main@@Base+0x8174>
   1eaa8:	ldr	r0, [fp, #-8]
   1eaac:	ldr	r1, [sp, #12]
   1eab0:	ldr	r2, [sp, #8]
   1eab4:	movw	r3, #33	; 0x21
   1eab8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1eabc:	str	r0, [fp, #-4]
   1eac0:	ldr	r0, [fp, #-4]
   1eac4:	mov	sp, fp
   1eac8:	pop	{fp, pc}
   1eacc:	nop	{0}
   1ead0:	push	{fp, lr}
   1ead4:	mov	fp, sp
   1ead8:	sub	sp, sp, #80	; 0x50
   1eadc:	str	r0, [fp, #-8]
   1eae0:	str	r1, [fp, #-12]
   1eae4:	str	r2, [fp, #-16]
   1eae8:	str	r3, [fp, #-20]	; 0xffffffec
   1eaec:	ldr	r0, [fp, #-8]
   1eaf0:	ldr	r1, [fp, #-12]
   1eaf4:	ldr	r2, [fp, #-16]
   1eaf8:	sub	r3, fp, #24
   1eafc:	bl	1c7d0 <main@@Base+0x5e84>
   1eb00:	str	r0, [fp, #-12]
   1eb04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb08:	cmp	r0, #0
   1eb0c:	beq	1f1a4 <main@@Base+0x8858>
   1eb10:	ldr	r0, [fp, #-8]
   1eb14:	ldr	r1, [fp, #-12]
   1eb18:	ldr	r2, [fp, #-16]
   1eb1c:	bl	1c8b4 <main@@Base+0x5f68>
   1eb20:	str	r0, [fp, #-12]
   1eb24:	ldr	r0, [fp, #-12]
   1eb28:	ldr	r1, [fp, #-16]
   1eb2c:	bl	1c960 <main@@Base+0x6014>
   1eb30:	str	r1, [sp, #36]	; 0x24
   1eb34:	str	r0, [sp, #32]
   1eb38:	ldr	r0, [sp, #32]
   1eb3c:	ldr	r1, [sp, #36]	; 0x24
   1eb40:	mvn	r2, #-855638016	; 0xcd000000
   1eb44:	subs	r0, r2, r0
   1eb48:	movw	r2, #29556	; 0x7374
   1eb4c:	movt	r2, #29797	; 0x7465
   1eb50:	sbcs	r1, r2, r1
   1eb54:	bcc	1ed90 <main@@Base+0x8444>
   1eb58:	b	1eb5c <main@@Base+0x8210>
   1eb5c:	ldrb	r0, [sp, #35]	; 0x23
   1eb60:	ldr	r1, [sp, #36]	; 0x24
   1eb64:	movw	r2, #29556	; 0x7374
   1eb68:	movt	r2, #29797	; 0x7465
   1eb6c:	eor	r1, r1, r2
   1eb70:	eor	r0, r0, #50	; 0x32
   1eb74:	orr	r0, r1, r0, lsl #24
   1eb78:	cmp	r0, #0
   1eb7c:	bne	1ec68 <main@@Base+0x831c>
   1eb80:	b	1eb84 <main@@Base+0x8238>
   1eb84:	ldr	r0, [fp, #-8]
   1eb88:	ldr	r1, [fp, #-12]
   1eb8c:	str	r1, [fp, #-36]	; 0xffffffdc
   1eb90:	ldr	r2, [fp, #-16]
   1eb94:	movw	r3, #5
   1eb98:	bl	1c998 <main@@Base+0x604c>
   1eb9c:	str	r0, [fp, #-12]
   1eba0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1eba4:	ldr	r1, [fp, #-12]
   1eba8:	cmp	r0, r1
   1ebac:	beq	1ec50 <main@@Base+0x8304>
   1ebb0:	movw	r0, #0
   1ebb4:	strb	r0, [sp, #31]
   1ebb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ebbc:	add	r0, r0, #24
   1ebc0:	str	r0, [fp, #-32]	; 0xffffffe0
   1ebc4:	ldr	r0, [fp, #-8]
   1ebc8:	ldr	r1, [fp, #-12]
   1ebcc:	str	r1, [fp, #-36]	; 0xffffffdc
   1ebd0:	ldr	r2, [fp, #-16]
   1ebd4:	add	r3, sp, #31
   1ebd8:	bl	1deb4 <main@@Base+0x7568>
   1ebdc:	str	r0, [fp, #-12]
   1ebe0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ebe4:	ldr	r1, [fp, #-12]
   1ebe8:	cmp	r0, r1
   1ebec:	bne	1ec40 <main@@Base+0x82f4>
   1ebf0:	ldr	r0, [pc, #1520]	; 1f1e8 <main@@Base+0x889c>
   1ebf4:	add	r3, pc, r0
   1ebf8:	ldr	r0, [fp, #-8]
   1ebfc:	ldr	r1, [fp, #-12]
   1ec00:	str	r1, [fp, #-36]	; 0xffffffdc
   1ec04:	ldr	r2, [fp, #-16]
   1ec08:	add	ip, sp, #31
   1ec0c:	str	ip, [sp]
   1ec10:	bl	1df90 <main@@Base+0x7644>
   1ec14:	str	r0, [fp, #-12]
   1ec18:	ldr	r0, [fp, #-12]
   1ec1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ec20:	cmp	r0, r1
   1ec24:	beq	1ec38 <main@@Base+0x82ec>
   1ec28:	ldr	r0, [fp, #-12]
   1ec2c:	ldr	r1, [fp, #-16]
   1ec30:	cmp	r0, r1
   1ec34:	bne	1ec3c <main@@Base+0x82f0>
   1ec38:	b	1f1b0 <main@@Base+0x8864>
   1ec3c:	b	1ec40 <main@@Base+0x82f4>
   1ec40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ec44:	ldrsb	r1, [sp, #31]
   1ec48:	bl	1e174 <main@@Base+0x7828>
   1ec4c:	b	1ec64 <main@@Base+0x8318>
   1ec50:	ldr	r0, [fp, #-8]
   1ec54:	ldr	r1, [fp, #-12]
   1ec58:	ldr	r2, [fp, #-16]
   1ec5c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1ec60:	str	r0, [fp, #-12]
   1ec64:	b	1ed8c <main@@Base+0x8440>
   1ec68:	ldrb	r0, [sp, #35]	; 0x23
   1ec6c:	ldr	r1, [sp, #36]	; 0x24
   1ec70:	movw	r2, #29556	; 0x7374
   1ec74:	movt	r2, #29797	; 0x7465
   1ec78:	eor	r1, r1, r2
   1ec7c:	eor	r0, r0, #49	; 0x31
   1ec80:	orr	r0, r1, r0, lsl #24
   1ec84:	cmp	r0, #0
   1ec88:	bne	1ed74 <main@@Base+0x8428>
   1ec8c:	b	1ec90 <main@@Base+0x8344>
   1ec90:	ldr	r0, [fp, #-8]
   1ec94:	ldr	r1, [fp, #-12]
   1ec98:	str	r1, [fp, #-36]	; 0xffffffdc
   1ec9c:	ldr	r2, [fp, #-16]
   1eca0:	movw	r3, #5
   1eca4:	bl	1c998 <main@@Base+0x604c>
   1eca8:	str	r0, [fp, #-12]
   1ecac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ecb0:	ldr	r1, [fp, #-12]
   1ecb4:	cmp	r0, r1
   1ecb8:	beq	1ed5c <main@@Base+0x8410>
   1ecbc:	vldr	d16, [pc, #948]	; 1f078 <main@@Base+0x872c>
   1ecc0:	vstr	d16, [sp, #16]
   1ecc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ecc8:	add	r0, r0, #16
   1eccc:	str	r0, [fp, #-32]	; 0xffffffe0
   1ecd0:	ldr	r0, [fp, #-8]
   1ecd4:	ldr	r1, [fp, #-12]
   1ecd8:	str	r1, [fp, #-36]	; 0xffffffdc
   1ecdc:	ldr	r2, [fp, #-16]
   1ece0:	add	r3, sp, #16
   1ece4:	bl	35900 <flatcc_json_parser_double@@Base>
   1ece8:	str	r0, [fp, #-12]
   1ecec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ecf0:	ldr	r1, [fp, #-12]
   1ecf4:	cmp	r0, r1
   1ecf8:	bne	1ed4c <main@@Base+0x8400>
   1ecfc:	ldr	r0, [pc, #1248]	; 1f1e4 <main@@Base+0x8898>
   1ed00:	add	r3, pc, r0
   1ed04:	ldr	r0, [fp, #-8]
   1ed08:	ldr	r1, [fp, #-12]
   1ed0c:	str	r1, [fp, #-36]	; 0xffffffdc
   1ed10:	ldr	r2, [fp, #-16]
   1ed14:	add	ip, sp, #16
   1ed18:	str	ip, [sp]
   1ed1c:	bl	21768 <main@@Base+0xae1c>
   1ed20:	str	r0, [fp, #-12]
   1ed24:	ldr	r0, [fp, #-12]
   1ed28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ed2c:	cmp	r0, r1
   1ed30:	beq	1ed44 <main@@Base+0x83f8>
   1ed34:	ldr	r0, [fp, #-12]
   1ed38:	ldr	r1, [fp, #-16]
   1ed3c:	cmp	r0, r1
   1ed40:	bne	1ed48 <main@@Base+0x83fc>
   1ed44:	b	1f1b0 <main@@Base+0x8864>
   1ed48:	b	1ed4c <main@@Base+0x8400>
   1ed4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ed50:	vldr	d0, [sp, #16]
   1ed54:	bl	21958 <main@@Base+0xb00c>
   1ed58:	b	1ed70 <main@@Base+0x8424>
   1ed5c:	ldr	r0, [fp, #-8]
   1ed60:	ldr	r1, [fp, #-12]
   1ed64:	ldr	r2, [fp, #-16]
   1ed68:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1ed6c:	str	r0, [fp, #-12]
   1ed70:	b	1ed88 <main@@Base+0x843c>
   1ed74:	ldr	r0, [fp, #-8]
   1ed78:	ldr	r1, [fp, #-12]
   1ed7c:	ldr	r2, [fp, #-16]
   1ed80:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1ed84:	str	r0, [fp, #-12]
   1ed88:	b	1ed8c <main@@Base+0x8440>
   1ed8c:	b	1f188 <main@@Base+0x883c>
   1ed90:	ldr	r0, [sp, #36]	; 0x24
   1ed94:	cmn	r0, #-2013265919	; 0x88000001
   1ed98:	bhi	1ee4c <main@@Base+0x8500>
   1ed9c:	b	1eda0 <main@@Base+0x8454>
   1eda0:	ldrb	r0, [sp, #35]	; 0x23
   1eda4:	ldr	r1, [sp, #36]	; 0x24
   1eda8:	movw	r2, #29556	; 0x7374
   1edac:	movt	r2, #29797	; 0x7465
   1edb0:	eor	r1, r1, r2
   1edb4:	eor	r0, r0, #51	; 0x33
   1edb8:	orr	r0, r1, r0, lsl #24
   1edbc:	cmp	r0, #0
   1edc0:	bne	1ee34 <main@@Base+0x84e8>
   1edc4:	b	1edc8 <main@@Base+0x847c>
   1edc8:	ldr	r0, [fp, #-8]
   1edcc:	ldr	r1, [fp, #-12]
   1edd0:	str	r1, [fp, #-36]	; 0xffffffdc
   1edd4:	ldr	r2, [fp, #-16]
   1edd8:	movw	r3, #5
   1eddc:	bl	1c998 <main@@Base+0x604c>
   1ede0:	str	r0, [fp, #-12]
   1ede4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ede8:	ldr	r1, [fp, #-12]
   1edec:	cmp	r0, r1
   1edf0:	beq	1ee1c <main@@Base+0x84d0>
   1edf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1edf8:	add	r0, r0, #26
   1edfc:	str	r0, [fp, #-32]	; 0xffffffe0
   1ee00:	ldr	r0, [fp, #-8]
   1ee04:	ldr	r1, [fp, #-12]
   1ee08:	ldr	r2, [fp, #-16]
   1ee0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ee10:	bl	1f1ec <main@@Base+0x88a0>
   1ee14:	str	r0, [fp, #-12]
   1ee18:	b	1ee30 <main@@Base+0x84e4>
   1ee1c:	ldr	r0, [fp, #-8]
   1ee20:	ldr	r1, [fp, #-12]
   1ee24:	ldr	r2, [fp, #-16]
   1ee28:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1ee2c:	str	r0, [fp, #-12]
   1ee30:	b	1ee48 <main@@Base+0x84fc>
   1ee34:	ldr	r0, [fp, #-8]
   1ee38:	ldr	r1, [fp, #-12]
   1ee3c:	ldr	r2, [fp, #-16]
   1ee40:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1ee44:	str	r0, [fp, #-12]
   1ee48:	b	1f184 <main@@Base+0x8838>
   1ee4c:	ldrb	r0, [sp, #39]	; 0x27
   1ee50:	cmp	r0, #120	; 0x78
   1ee54:	bhi	1ef6c <main@@Base+0x8620>
   1ee58:	b	1ee5c <main@@Base+0x8510>
   1ee5c:	ldrb	r0, [sp, #39]	; 0x27
   1ee60:	mov	r1, #2013265920	; 0x78000000
   1ee64:	teq	r1, r0, lsl #24
   1ee68:	bne	1ef54 <main@@Base+0x8608>
   1ee6c:	b	1ee70 <main@@Base+0x8524>
   1ee70:	ldr	r0, [fp, #-8]
   1ee74:	ldr	r1, [fp, #-12]
   1ee78:	str	r1, [fp, #-36]	; 0xffffffdc
   1ee7c:	ldr	r2, [fp, #-16]
   1ee80:	movw	r3, #1
   1ee84:	bl	1c998 <main@@Base+0x604c>
   1ee88:	str	r0, [fp, #-12]
   1ee8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ee90:	ldr	r1, [fp, #-12]
   1ee94:	cmp	r0, r1
   1ee98:	beq	1ef3c <main@@Base+0x85f0>
   1ee9c:	vldr	s0, [pc, #816]	; 1f1d4 <main@@Base+0x8888>
   1eea0:	vstr	s0, [sp, #12]
   1eea4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eea8:	add	r0, r0, #0
   1eeac:	str	r0, [fp, #-32]	; 0xffffffe0
   1eeb0:	ldr	r0, [fp, #-8]
   1eeb4:	ldr	r1, [fp, #-12]
   1eeb8:	str	r1, [fp, #-36]	; 0xffffffdc
   1eebc:	ldr	r2, [fp, #-16]
   1eec0:	add	r3, sp, #12
   1eec4:	bl	35ac0 <flatcc_json_parser_float@@Base>
   1eec8:	str	r0, [fp, #-12]
   1eecc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1eed0:	ldr	r1, [fp, #-12]
   1eed4:	cmp	r0, r1
   1eed8:	bne	1ef2c <main@@Base+0x85e0>
   1eedc:	ldr	r0, [pc, #764]	; 1f1e0 <main@@Base+0x8894>
   1eee0:	add	r3, pc, r0
   1eee4:	ldr	r0, [fp, #-8]
   1eee8:	ldr	r1, [fp, #-12]
   1eeec:	str	r1, [fp, #-36]	; 0xffffffdc
   1eef0:	ldr	r2, [fp, #-16]
   1eef4:	add	ip, sp, #12
   1eef8:	str	ip, [sp]
   1eefc:	bl	20968 <main@@Base+0xa01c>
   1ef00:	str	r0, [fp, #-12]
   1ef04:	ldr	r0, [fp, #-12]
   1ef08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ef0c:	cmp	r0, r1
   1ef10:	beq	1ef24 <main@@Base+0x85d8>
   1ef14:	ldr	r0, [fp, #-12]
   1ef18:	ldr	r1, [fp, #-16]
   1ef1c:	cmp	r0, r1
   1ef20:	bne	1ef28 <main@@Base+0x85dc>
   1ef24:	b	1f1b0 <main@@Base+0x8864>
   1ef28:	b	1ef2c <main@@Base+0x85e0>
   1ef2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ef30:	vldr	s0, [sp, #12]
   1ef34:	bl	20b50 <main@@Base+0xa204>
   1ef38:	b	1ef50 <main@@Base+0x8604>
   1ef3c:	ldr	r0, [fp, #-8]
   1ef40:	ldr	r1, [fp, #-12]
   1ef44:	ldr	r2, [fp, #-16]
   1ef48:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1ef4c:	str	r0, [fp, #-12]
   1ef50:	b	1ef68 <main@@Base+0x861c>
   1ef54:	ldr	r0, [fp, #-8]
   1ef58:	ldr	r1, [fp, #-12]
   1ef5c:	ldr	r2, [fp, #-16]
   1ef60:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1ef64:	str	r0, [fp, #-12]
   1ef68:	b	1f180 <main@@Base+0x8834>
   1ef6c:	ldrb	r0, [sp, #39]	; 0x27
   1ef70:	mov	r1, #2046820352	; 0x7a000000
   1ef74:	teq	r1, r0, lsl #24
   1ef78:	bne	1f064 <main@@Base+0x8718>
   1ef7c:	b	1ef80 <main@@Base+0x8634>
   1ef80:	ldr	r0, [fp, #-8]
   1ef84:	ldr	r1, [fp, #-12]
   1ef88:	str	r1, [fp, #-36]	; 0xffffffdc
   1ef8c:	ldr	r2, [fp, #-16]
   1ef90:	movw	r3, #1
   1ef94:	bl	1c998 <main@@Base+0x604c>
   1ef98:	str	r0, [fp, #-12]
   1ef9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1efa0:	ldr	r1, [fp, #-12]
   1efa4:	cmp	r0, r1
   1efa8:	beq	1f04c <main@@Base+0x8700>
   1efac:	vldr	s0, [pc, #544]	; 1f1d4 <main@@Base+0x8888>
   1efb0:	vstr	s0, [sp, #8]
   1efb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1efb8:	add	r0, r0, #8
   1efbc:	str	r0, [fp, #-32]	; 0xffffffe0
   1efc0:	ldr	r0, [fp, #-8]
   1efc4:	ldr	r1, [fp, #-12]
   1efc8:	str	r1, [fp, #-36]	; 0xffffffdc
   1efcc:	ldr	r2, [fp, #-16]
   1efd0:	add	r3, sp, #8
   1efd4:	bl	35ac0 <flatcc_json_parser_float@@Base>
   1efd8:	str	r0, [fp, #-12]
   1efdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1efe0:	ldr	r1, [fp, #-12]
   1efe4:	cmp	r0, r1
   1efe8:	bne	1f03c <main@@Base+0x86f0>
   1efec:	ldr	r0, [pc, #488]	; 1f1dc <main@@Base+0x8890>
   1eff0:	add	r3, pc, r0
   1eff4:	ldr	r0, [fp, #-8]
   1eff8:	ldr	r1, [fp, #-12]
   1effc:	str	r1, [fp, #-36]	; 0xffffffdc
   1f000:	ldr	r2, [fp, #-16]
   1f004:	add	ip, sp, #8
   1f008:	str	ip, [sp]
   1f00c:	bl	20968 <main@@Base+0xa01c>
   1f010:	str	r0, [fp, #-12]
   1f014:	ldr	r0, [fp, #-12]
   1f018:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f01c:	cmp	r0, r1
   1f020:	beq	1f034 <main@@Base+0x86e8>
   1f024:	ldr	r0, [fp, #-12]
   1f028:	ldr	r1, [fp, #-16]
   1f02c:	cmp	r0, r1
   1f030:	bne	1f038 <main@@Base+0x86ec>
   1f034:	b	1f1b0 <main@@Base+0x8864>
   1f038:	b	1f03c <main@@Base+0x86f0>
   1f03c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f040:	vldr	s0, [sp, #8]
   1f044:	bl	20b50 <main@@Base+0xa204>
   1f048:	b	1f060 <main@@Base+0x8714>
   1f04c:	ldr	r0, [fp, #-8]
   1f050:	ldr	r1, [fp, #-12]
   1f054:	ldr	r2, [fp, #-16]
   1f058:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1f05c:	str	r0, [fp, #-12]
   1f060:	b	1f17c <main@@Base+0x8830>
   1f064:	ldrb	r0, [sp, #39]	; 0x27
   1f068:	mov	r1, #2030043136	; 0x79000000
   1f06c:	teq	r1, r0, lsl #24
   1f070:	bne	1f164 <main@@Base+0x8818>
   1f074:	b	1f080 <main@@Base+0x8734>
	...
   1f080:	ldr	r0, [fp, #-8]
   1f084:	ldr	r1, [fp, #-12]
   1f088:	str	r1, [fp, #-36]	; 0xffffffdc
   1f08c:	ldr	r2, [fp, #-16]
   1f090:	movw	r3, #1
   1f094:	bl	1c998 <main@@Base+0x604c>
   1f098:	str	r0, [fp, #-12]
   1f09c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f0a0:	ldr	r1, [fp, #-12]
   1f0a4:	cmp	r0, r1
   1f0a8:	beq	1f14c <main@@Base+0x8800>
   1f0ac:	vldr	s0, [pc, #288]	; 1f1d4 <main@@Base+0x8888>
   1f0b0:	vstr	s0, [sp, #4]
   1f0b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f0b8:	add	r0, r0, #4
   1f0bc:	str	r0, [fp, #-32]	; 0xffffffe0
   1f0c0:	ldr	r0, [fp, #-8]
   1f0c4:	ldr	r1, [fp, #-12]
   1f0c8:	str	r1, [fp, #-36]	; 0xffffffdc
   1f0cc:	ldr	r2, [fp, #-16]
   1f0d0:	add	r3, sp, #4
   1f0d4:	bl	35ac0 <flatcc_json_parser_float@@Base>
   1f0d8:	str	r0, [fp, #-12]
   1f0dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f0e0:	ldr	r1, [fp, #-12]
   1f0e4:	cmp	r0, r1
   1f0e8:	bne	1f13c <main@@Base+0x87f0>
   1f0ec:	ldr	r0, [pc, #228]	; 1f1d8 <main@@Base+0x888c>
   1f0f0:	add	r3, pc, r0
   1f0f4:	ldr	r0, [fp, #-8]
   1f0f8:	ldr	r1, [fp, #-12]
   1f0fc:	str	r1, [fp, #-36]	; 0xffffffdc
   1f100:	ldr	r2, [fp, #-16]
   1f104:	add	ip, sp, #4
   1f108:	str	ip, [sp]
   1f10c:	bl	20968 <main@@Base+0xa01c>
   1f110:	str	r0, [fp, #-12]
   1f114:	ldr	r0, [fp, #-12]
   1f118:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f11c:	cmp	r0, r1
   1f120:	beq	1f134 <main@@Base+0x87e8>
   1f124:	ldr	r0, [fp, #-12]
   1f128:	ldr	r1, [fp, #-16]
   1f12c:	cmp	r0, r1
   1f130:	bne	1f138 <main@@Base+0x87ec>
   1f134:	b	1f1b0 <main@@Base+0x8864>
   1f138:	b	1f13c <main@@Base+0x87f0>
   1f13c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f140:	vldr	s0, [sp, #4]
   1f144:	bl	20b50 <main@@Base+0xa204>
   1f148:	b	1f160 <main@@Base+0x8814>
   1f14c:	ldr	r0, [fp, #-8]
   1f150:	ldr	r1, [fp, #-12]
   1f154:	ldr	r2, [fp, #-16]
   1f158:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1f15c:	str	r0, [fp, #-12]
   1f160:	b	1f178 <main@@Base+0x882c>
   1f164:	ldr	r0, [fp, #-8]
   1f168:	ldr	r1, [fp, #-12]
   1f16c:	ldr	r2, [fp, #-16]
   1f170:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1f174:	str	r0, [fp, #-12]
   1f178:	b	1f17c <main@@Base+0x8830>
   1f17c:	b	1f180 <main@@Base+0x8834>
   1f180:	b	1f184 <main@@Base+0x8838>
   1f184:	b	1f188 <main@@Base+0x883c>
   1f188:	ldr	r0, [fp, #-8]
   1f18c:	ldr	r1, [fp, #-12]
   1f190:	ldr	r2, [fp, #-16]
   1f194:	sub	r3, fp, #24
   1f198:	bl	21984 <main@@Base+0xb038>
   1f19c:	str	r0, [fp, #-12]
   1f1a0:	b	1eb04 <main@@Base+0x81b8>
   1f1a4:	ldr	r0, [fp, #-12]
   1f1a8:	str	r0, [fp, #-4]
   1f1ac:	b	1f1c8 <main@@Base+0x887c>
   1f1b0:	ldr	r0, [fp, #-8]
   1f1b4:	ldr	r1, [fp, #-12]
   1f1b8:	ldr	r2, [fp, #-16]
   1f1bc:	movw	r3, #33	; 0x21
   1f1c0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1f1c4:	str	r0, [fp, #-4]
   1f1c8:	ldr	r0, [fp, #-4]
   1f1cc:	mov	sp, fp
   1f1d0:	pop	{fp, pc}
   1f1d4:	andeq	r0, r0, r0
   1f1d8:	ldrdeq	r0, [r4], -r4
   1f1dc:	andeq	r0, r4, r8, asr #3
   1f1e0:	andeq	r0, r4, ip, asr #5
   1f1e4:	andeq	r0, r4, r0, lsr #9
   1f1e8:	muleq	r4, ip, r5
   1f1ec:	push	{fp, lr}
   1f1f0:	mov	fp, sp
   1f1f4:	sub	sp, sp, #56	; 0x38
   1f1f8:	str	r0, [fp, #-8]
   1f1fc:	str	r1, [fp, #-12]
   1f200:	str	r2, [fp, #-16]
   1f204:	str	r3, [fp, #-20]	; 0xffffffec
   1f208:	ldr	r0, [fp, #-8]
   1f20c:	ldr	r1, [fp, #-12]
   1f210:	ldr	r2, [fp, #-16]
   1f214:	sub	r3, fp, #24
   1f218:	bl	1c7d0 <main@@Base+0x5e84>
   1f21c:	str	r0, [fp, #-12]
   1f220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f224:	cmp	r0, #0
   1f228:	beq	1f478 <main@@Base+0x8b2c>
   1f22c:	ldr	r0, [fp, #-8]
   1f230:	ldr	r1, [fp, #-12]
   1f234:	ldr	r2, [fp, #-16]
   1f238:	bl	1c8b4 <main@@Base+0x5f68>
   1f23c:	str	r0, [fp, #-12]
   1f240:	ldr	r0, [fp, #-12]
   1f244:	ldr	r1, [fp, #-16]
   1f248:	bl	1c960 <main@@Base+0x6014>
   1f24c:	str	r1, [sp, #12]
   1f250:	str	r0, [sp, #8]
   1f254:	ldrb	r0, [sp, #15]
   1f258:	mov	r1, #1644167168	; 0x62000000
   1f25c:	teq	r1, r0, lsl #24
   1f260:	bne	1f34c <main@@Base+0x8a00>
   1f264:	b	1f268 <main@@Base+0x891c>
   1f268:	ldr	r0, [fp, #-8]
   1f26c:	ldr	r1, [fp, #-12]
   1f270:	str	r1, [sp, #20]
   1f274:	ldr	r2, [fp, #-16]
   1f278:	movw	r3, #1
   1f27c:	bl	1c998 <main@@Base+0x604c>
   1f280:	str	r0, [fp, #-12]
   1f284:	ldr	r0, [sp, #20]
   1f288:	ldr	r1, [fp, #-12]
   1f28c:	cmp	r0, r1
   1f290:	beq	1f334 <main@@Base+0x89e8>
   1f294:	movw	r0, #0
   1f298:	strb	r0, [sp, #7]
   1f29c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f2a0:	add	r0, r0, #2
   1f2a4:	str	r0, [sp, #24]
   1f2a8:	ldr	r0, [fp, #-8]
   1f2ac:	ldr	r1, [fp, #-12]
   1f2b0:	str	r1, [sp, #20]
   1f2b4:	ldr	r2, [fp, #-16]
   1f2b8:	add	r3, sp, #7
   1f2bc:	bl	1deb4 <main@@Base+0x7568>
   1f2c0:	str	r0, [fp, #-12]
   1f2c4:	ldr	r0, [sp, #20]
   1f2c8:	ldr	r1, [fp, #-12]
   1f2cc:	cmp	r0, r1
   1f2d0:	bne	1f324 <main@@Base+0x89d8>
   1f2d4:	ldr	r0, [pc, #464]	; 1f4ac <main@@Base+0x8b60>
   1f2d8:	add	r3, pc, r0
   1f2dc:	ldr	r0, [fp, #-8]
   1f2e0:	ldr	r1, [fp, #-12]
   1f2e4:	str	r1, [sp, #20]
   1f2e8:	ldr	r2, [fp, #-16]
   1f2ec:	add	ip, sp, #7
   1f2f0:	str	ip, [sp]
   1f2f4:	bl	1df90 <main@@Base+0x7644>
   1f2f8:	str	r0, [fp, #-12]
   1f2fc:	ldr	r0, [fp, #-12]
   1f300:	ldr	r1, [sp, #20]
   1f304:	cmp	r0, r1
   1f308:	beq	1f31c <main@@Base+0x89d0>
   1f30c:	ldr	r0, [fp, #-12]
   1f310:	ldr	r1, [fp, #-16]
   1f314:	cmp	r0, r1
   1f318:	bne	1f320 <main@@Base+0x89d4>
   1f31c:	b	1f484 <main@@Base+0x8b38>
   1f320:	b	1f324 <main@@Base+0x89d8>
   1f324:	ldr	r0, [sp, #24]
   1f328:	ldrsb	r1, [sp, #7]
   1f32c:	bl	1e174 <main@@Base+0x7828>
   1f330:	b	1f348 <main@@Base+0x89fc>
   1f334:	ldr	r0, [fp, #-8]
   1f338:	ldr	r1, [fp, #-12]
   1f33c:	ldr	r2, [fp, #-16]
   1f340:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1f344:	str	r0, [fp, #-12]
   1f348:	b	1f45c <main@@Base+0x8b10>
   1f34c:	ldrb	r0, [sp, #15]
   1f350:	mov	r1, #1627389952	; 0x61000000
   1f354:	teq	r1, r0, lsl #24
   1f358:	bne	1f444 <main@@Base+0x8af8>
   1f35c:	b	1f360 <main@@Base+0x8a14>
   1f360:	ldr	r0, [fp, #-8]
   1f364:	ldr	r1, [fp, #-12]
   1f368:	str	r1, [sp, #20]
   1f36c:	ldr	r2, [fp, #-16]
   1f370:	movw	r3, #1
   1f374:	bl	1c998 <main@@Base+0x604c>
   1f378:	str	r0, [fp, #-12]
   1f37c:	ldr	r0, [sp, #20]
   1f380:	ldr	r1, [fp, #-12]
   1f384:	cmp	r0, r1
   1f388:	beq	1f42c <main@@Base+0x8ae0>
   1f38c:	movw	r0, #0
   1f390:	strh	r0, [sp, #4]
   1f394:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f398:	add	r0, r0, #0
   1f39c:	str	r0, [sp, #24]
   1f3a0:	ldr	r0, [fp, #-8]
   1f3a4:	ldr	r1, [fp, #-12]
   1f3a8:	str	r1, [sp, #20]
   1f3ac:	ldr	r2, [fp, #-16]
   1f3b0:	add	r3, sp, #4
   1f3b4:	bl	1e6d4 <main@@Base+0x7d88>
   1f3b8:	str	r0, [fp, #-12]
   1f3bc:	ldr	r0, [sp, #20]
   1f3c0:	ldr	r1, [fp, #-12]
   1f3c4:	cmp	r0, r1
   1f3c8:	bne	1f41c <main@@Base+0x8ad0>
   1f3cc:	ldr	r0, [pc, #212]	; 1f4a8 <main@@Base+0x8b5c>
   1f3d0:	add	r3, pc, r0
   1f3d4:	ldr	r0, [fp, #-8]
   1f3d8:	ldr	r1, [fp, #-12]
   1f3dc:	str	r1, [sp, #20]
   1f3e0:	ldr	r2, [fp, #-16]
   1f3e4:	add	ip, sp, #4
   1f3e8:	str	ip, [sp]
   1f3ec:	bl	1e7b0 <main@@Base+0x7e64>
   1f3f0:	str	r0, [fp, #-12]
   1f3f4:	ldr	r0, [fp, #-12]
   1f3f8:	ldr	r1, [sp, #20]
   1f3fc:	cmp	r0, r1
   1f400:	beq	1f414 <main@@Base+0x8ac8>
   1f404:	ldr	r0, [fp, #-12]
   1f408:	ldr	r1, [fp, #-16]
   1f40c:	cmp	r0, r1
   1f410:	bne	1f418 <main@@Base+0x8acc>
   1f414:	b	1f484 <main@@Base+0x8b38>
   1f418:	b	1f41c <main@@Base+0x8ad0>
   1f41c:	ldr	r0, [sp, #24]
   1f420:	ldrsh	r1, [sp, #4]
   1f424:	bl	1e994 <main@@Base+0x8048>
   1f428:	b	1f440 <main@@Base+0x8af4>
   1f42c:	ldr	r0, [fp, #-8]
   1f430:	ldr	r1, [fp, #-12]
   1f434:	ldr	r2, [fp, #-16]
   1f438:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1f43c:	str	r0, [fp, #-12]
   1f440:	b	1f458 <main@@Base+0x8b0c>
   1f444:	ldr	r0, [fp, #-8]
   1f448:	ldr	r1, [fp, #-12]
   1f44c:	ldr	r2, [fp, #-16]
   1f450:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1f454:	str	r0, [fp, #-12]
   1f458:	b	1f45c <main@@Base+0x8b10>
   1f45c:	ldr	r0, [fp, #-8]
   1f460:	ldr	r1, [fp, #-12]
   1f464:	ldr	r2, [fp, #-16]
   1f468:	sub	r3, fp, #24
   1f46c:	bl	21984 <main@@Base+0xb038>
   1f470:	str	r0, [fp, #-12]
   1f474:	b	1f220 <main@@Base+0x88d4>
   1f478:	ldr	r0, [fp, #-12]
   1f47c:	str	r0, [fp, #-4]
   1f480:	b	1f49c <main@@Base+0x8b50>
   1f484:	ldr	r0, [fp, #-8]
   1f488:	ldr	r1, [fp, #-12]
   1f48c:	ldr	r2, [fp, #-16]
   1f490:	movw	r3, #33	; 0x21
   1f494:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1f498:	str	r0, [fp, #-4]
   1f49c:	ldr	r0, [fp, #-4]
   1f4a0:	mov	sp, fp
   1f4a4:	pop	{fp, pc}
   1f4a8:	andeq	pc, r3, ip, lsl #28
   1f4ac:	strdeq	pc, [r3], -r8
   1f4b0:	push	{fp, lr}
   1f4b4:	mov	fp, sp
   1f4b8:	sub	sp, sp, #24
   1f4bc:	ldr	ip, [fp, #8]
   1f4c0:	str	r0, [fp, #-8]
   1f4c4:	str	r1, [sp, #12]
   1f4c8:	str	r2, [sp, #8]
   1f4cc:	strb	r3, [sp, #7]
   1f4d0:	ldr	r0, [fp, #8]
   1f4d4:	mov	r1, #0
   1f4d8:	str	r1, [r0]
   1f4dc:	ldrb	r0, [sp, #7]
   1f4e0:	mov	r1, r0
   1f4e4:	cmp	r0, #4
   1f4e8:	str	r1, [sp]
   1f4ec:	bhi	1f59c <main@@Base+0x8c50>
   1f4f0:	add	r0, pc, #8
   1f4f4:	ldr	r1, [sp]
   1f4f8:	ldr	r2, [r0, r1, lsl #2]
   1f4fc:	add	pc, r0, r2
   1f500:	andeq	r0, r0, r4, lsl r0
   1f504:	andeq	r0, r0, ip, lsr #32
   1f508:	andeq	r0, r0, r8, asr #32
   1f50c:	andeq	r0, r0, r4, rrx
   1f510:	andeq	r0, r0, r0, lsl #1
   1f514:	ldr	r0, [fp, #-8]
   1f518:	ldr	r1, [sp, #12]
   1f51c:	ldr	r2, [sp, #8]
   1f520:	bl	232e8 <main@@Base+0xc99c>
   1f524:	str	r0, [fp, #-4]
   1f528:	b	1f634 <main@@Base+0x8ce8>
   1f52c:	ldr	r0, [fp, #-8]
   1f530:	ldr	r1, [sp, #12]
   1f534:	ldr	r2, [sp, #8]
   1f538:	ldr	r3, [fp, #8]
   1f53c:	bl	17e30 <main@@Base+0x14e4>
   1f540:	str	r0, [sp, #12]
   1f544:	b	1f5e4 <main@@Base+0x8c98>
   1f548:	ldr	r0, [fp, #-8]
   1f54c:	ldr	r1, [sp, #12]
   1f550:	ldr	r2, [sp, #8]
   1f554:	ldr	r3, [fp, #8]
   1f558:	bl	23368 <main@@Base+0xca1c>
   1f55c:	str	r0, [sp, #12]
   1f560:	b	1f5e4 <main@@Base+0x8c98>
   1f564:	ldr	r0, [fp, #-8]
   1f568:	ldr	r1, [sp, #12]
   1f56c:	ldr	r2, [sp, #8]
   1f570:	ldr	r3, [fp, #8]
   1f574:	bl	239c0 <main@@Base+0xd074>
   1f578:	str	r0, [sp, #12]
   1f57c:	b	1f5e4 <main@@Base+0x8c98>
   1f580:	ldr	r0, [fp, #-8]
   1f584:	ldr	r1, [sp, #12]
   1f588:	ldr	r2, [sp, #8]
   1f58c:	ldr	r3, [fp, #8]
   1f590:	bl	23acc <main@@Base+0xd180>
   1f594:	str	r0, [sp, #12]
   1f598:	b	1f5e4 <main@@Base+0x8c98>
   1f59c:	ldr	r0, [fp, #-8]
   1f5a0:	ldr	r0, [r0, #8]
   1f5a4:	and	r0, r0, #1
   1f5a8:	cmp	r0, #0
   1f5ac:	bne	1f5cc <main@@Base+0x8c80>
   1f5b0:	ldr	r0, [fp, #-8]
   1f5b4:	ldr	r1, [sp, #12]
   1f5b8:	ldr	r2, [sp, #8]
   1f5bc:	movw	r3, #15
   1f5c0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1f5c4:	str	r0, [fp, #-4]
   1f5c8:	b	1f634 <main@@Base+0x8ce8>
   1f5cc:	ldr	r0, [fp, #-8]
   1f5d0:	ldr	r1, [sp, #12]
   1f5d4:	ldr	r2, [sp, #8]
   1f5d8:	bl	35304 <flatcc_json_parser_generic_json@@Base>
   1f5dc:	str	r0, [fp, #-4]
   1f5e0:	b	1f634 <main@@Base+0x8ce8>
   1f5e4:	ldr	r0, [fp, #-8]
   1f5e8:	ldr	r0, [r0, #24]
   1f5ec:	cmp	r0, #0
   1f5f0:	beq	1f600 <main@@Base+0x8cb4>
   1f5f4:	ldr	r0, [sp, #12]
   1f5f8:	str	r0, [fp, #-4]
   1f5fc:	b	1f634 <main@@Base+0x8ce8>
   1f600:	ldr	r0, [fp, #8]
   1f604:	ldr	r0, [r0]
   1f608:	cmp	r0, #0
   1f60c:	bne	1f62c <main@@Base+0x8ce0>
   1f610:	ldr	r0, [fp, #-8]
   1f614:	ldr	r1, [sp, #12]
   1f618:	ldr	r2, [sp, #8]
   1f61c:	movw	r3, #33	; 0x21
   1f620:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1f624:	str	r0, [fp, #-4]
   1f628:	b	1f634 <main@@Base+0x8ce8>
   1f62c:	ldr	r0, [sp, #12]
   1f630:	str	r0, [fp, #-4]
   1f634:	ldr	r0, [fp, #-4]
   1f638:	mov	sp, fp
   1f63c:	pop	{fp, pc}
   1f640:	push	{fp, lr}
   1f644:	mov	fp, sp
   1f648:	sub	sp, sp, #72	; 0x48
   1f64c:	ldr	ip, [fp, #12]
   1f650:	ldr	lr, [fp, #8]
   1f654:	str	r0, [fp, #-8]
   1f658:	str	r1, [fp, #-12]
   1f65c:	str	r2, [fp, #-16]
   1f660:	str	r3, [fp, #-20]	; 0xffffffec
   1f664:	ldr	r0, [fp, #-12]
   1f668:	str	r0, [fp, #-24]	; 0xffffffe8
   1f66c:	ldr	r0, [fp, #-12]
   1f670:	ldr	r1, [fp, #-16]
   1f674:	str	ip, [sp, #28]
   1f678:	str	lr, [sp, #24]
   1f67c:	bl	1c960 <main@@Base+0x6014>
   1f680:	str	r1, [sp, #36]	; 0x24
   1f684:	str	r0, [sp, #32]
   1f688:	ldr	r0, [sp, #32]
   1f68c:	ldr	r1, [sp, #36]	; 0x24
   1f690:	movw	r2, #29183	; 0x71ff
   1f694:	movt	r2, #29797	; 0x7465
   1f698:	subs	r0, r2, r0
   1f69c:	movw	r2, #28275	; 0x6e73
   1f6a0:	movt	r2, #19823	; 0x4d6f
   1f6a4:	sbcs	r1, r2, r1
   1f6a8:	bcc	1f750 <main@@Base+0x8e04>
   1f6ac:	b	1f6b0 <main@@Base+0x8d64>
   1f6b0:	ldr	r0, [sp, #36]	; 0x24
   1f6b4:	bic	r0, r0, #255	; 0xff
   1f6b8:	movw	r1, #29696	; 0x7400
   1f6bc:	movt	r1, #16748	; 0x416c
   1f6c0:	teq	r0, r1
   1f6c4:	bne	1f740 <main@@Base+0x8df4>
   1f6c8:	b	1f6cc <main@@Base+0x8d80>
   1f6cc:	ldr	r0, [fp, #-8]
   1f6d0:	ldr	r1, [fp, #-12]
   1f6d4:	str	r1, [fp, #-28]	; 0xffffffe4
   1f6d8:	ldr	r2, [fp, #-16]
   1f6dc:	ldr	r3, [fp, #12]
   1f6e0:	movw	ip, #3
   1f6e4:	str	r3, [sp, #20]
   1f6e8:	mov	r3, ip
   1f6ec:	ldr	ip, [sp, #20]
   1f6f0:	str	ip, [sp]
   1f6f4:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   1f6f8:	str	r0, [fp, #-12]
   1f6fc:	ldr	r0, [fp, #-12]
   1f700:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f704:	cmp	r0, r1
   1f708:	beq	1f730 <main@@Base+0x8de4>
   1f70c:	ldr	r0, [fp, #8]
   1f710:	mov	r1, #0
   1f714:	str	r1, [r0, #4]
   1f718:	mov	r1, #4
   1f71c:	str	r1, [r0]
   1f720:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f724:	movw	r1, #0
   1f728:	str	r1, [r0]
   1f72c:	b	1f73c <main@@Base+0x8df0>
   1f730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f734:	str	r0, [fp, #-4]
   1f738:	b	1fab0 <main@@Base+0x9164>
   1f73c:	b	1f74c <main@@Base+0x8e00>
   1f740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f744:	str	r0, [fp, #-4]
   1f748:	b	1fab0 <main@@Base+0x9164>
   1f74c:	b	1faa8 <main@@Base+0x915c>
   1f750:	ldr	r0, [sp, #32]
   1f754:	ldr	r1, [sp, #36]	; 0x24
   1f758:	movw	r2, #28275	; 0x6e73
   1f75c:	movt	r2, #19823	; 0x4d6f
   1f760:	eor	r1, r1, r2
   1f764:	movw	r2, #29234	; 0x7232
   1f768:	movt	r2, #29797	; 0x7465
   1f76c:	eor	r0, r0, r2
   1f770:	orr	r0, r0, r1
   1f774:	cmp	r0, #0
   1f778:	bne	1f7ec <main@@Base+0x8ea0>
   1f77c:	b	1f780 <main@@Base+0x8e34>
   1f780:	ldr	r0, [fp, #-8]
   1f784:	ldr	r1, [fp, #-12]
   1f788:	str	r1, [fp, #-28]	; 0xffffffe4
   1f78c:	ldr	r2, [fp, #-16]
   1f790:	ldr	r3, [fp, #12]
   1f794:	movw	ip, #8
   1f798:	str	r3, [sp, #16]
   1f79c:	mov	r3, ip
   1f7a0:	ldr	ip, [sp, #16]
   1f7a4:	str	ip, [sp]
   1f7a8:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   1f7ac:	str	r0, [fp, #-12]
   1f7b0:	ldr	r0, [fp, #-12]
   1f7b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f7b8:	cmp	r0, r1
   1f7bc:	beq	1f7e4 <main@@Base+0x8e98>
   1f7c0:	ldr	r0, [fp, #8]
   1f7c4:	mov	r1, #0
   1f7c8:	str	r1, [r0, #4]
   1f7cc:	mov	r1, #3
   1f7d0:	str	r1, [r0]
   1f7d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f7d8:	movw	r1, #0
   1f7dc:	str	r1, [r0]
   1f7e0:	b	1f7e8 <main@@Base+0x8e9c>
   1f7e4:	b	1f89c <main@@Base+0x8f50>
   1f7e8:	b	1f898 <main@@Base+0x8f4c>
   1f7ec:	ldr	r0, [sp, #32]
   1f7f0:	ldr	r1, [sp, #36]	; 0x24
   1f7f4:	movw	r2, #28526	; 0x6f6e
   1f7f8:	movt	r2, #77	; 0x4d
   1f7fc:	eor	r2, r2, r1, lsr #8
   1f800:	lsr	r0, r0, #8
   1f804:	orr	r0, r0, r1, lsl #24
   1f808:	movw	r1, #25970	; 0x6572
   1f80c:	movt	r1, #29556	; 0x7374
   1f810:	eor	r0, r0, r1
   1f814:	orr	r0, r0, r2
   1f818:	cmp	r0, #0
   1f81c:	bne	1f890 <main@@Base+0x8f44>
   1f820:	b	1f824 <main@@Base+0x8ed8>
   1f824:	ldr	r0, [fp, #-8]
   1f828:	ldr	r1, [fp, #-12]
   1f82c:	str	r1, [fp, #-28]	; 0xffffffe4
   1f830:	ldr	r2, [fp, #-16]
   1f834:	ldr	r3, [fp, #12]
   1f838:	movw	ip, #7
   1f83c:	str	r3, [sp, #12]
   1f840:	mov	r3, ip
   1f844:	ldr	ip, [sp, #12]
   1f848:	str	ip, [sp]
   1f84c:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   1f850:	str	r0, [fp, #-12]
   1f854:	ldr	r0, [fp, #-12]
   1f858:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f85c:	cmp	r0, r1
   1f860:	beq	1f888 <main@@Base+0x8f3c>
   1f864:	ldr	r0, [fp, #8]
   1f868:	mov	r1, #0
   1f86c:	str	r1, [r0, #4]
   1f870:	mov	r1, #1
   1f874:	str	r1, [r0]
   1f878:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f87c:	movw	r1, #0
   1f880:	str	r1, [r0]
   1f884:	b	1f88c <main@@Base+0x8f40>
   1f888:	b	1f89c <main@@Base+0x8f50>
   1f88c:	b	1f894 <main@@Base+0x8f48>
   1f890:	b	1f89c <main@@Base+0x8f50>
   1f894:	b	1f898 <main@@Base+0x8f4c>
   1f898:	b	1faa4 <main@@Base+0x9158>
   1f89c:	ldr	r0, [sp, #36]	; 0x24
   1f8a0:	movw	r1, #20037	; 0x4e45
   1f8a4:	movt	r1, #20047	; 0x4e4f
   1f8a8:	teq	r0, r1
   1f8ac:	bne	1f91c <main@@Base+0x8fd0>
   1f8b0:	b	1f8b4 <main@@Base+0x8f68>
   1f8b4:	ldr	r0, [fp, #-8]
   1f8b8:	ldr	r1, [fp, #-12]
   1f8bc:	str	r1, [fp, #-28]	; 0xffffffe4
   1f8c0:	ldr	r2, [fp, #-16]
   1f8c4:	ldr	r3, [fp, #12]
   1f8c8:	movw	ip, #4
   1f8cc:	str	r3, [sp, #8]
   1f8d0:	mov	r3, ip
   1f8d4:	ldr	ip, [sp, #8]
   1f8d8:	str	ip, [sp]
   1f8dc:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   1f8e0:	str	r0, [fp, #-12]
   1f8e4:	ldr	r0, [fp, #-12]
   1f8e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f8ec:	cmp	r0, r1
   1f8f0:	beq	1f914 <main@@Base+0x8fc8>
   1f8f4:	ldr	r0, [fp, #8]
   1f8f8:	mov	r1, #0
   1f8fc:	str	r1, [r0, #4]
   1f900:	str	r1, [r0]
   1f904:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f908:	movw	r1, #0
   1f90c:	str	r1, [r0]
   1f910:	b	1f918 <main@@Base+0x8fcc>
   1f914:	b	1f924 <main@@Base+0x8fd8>
   1f918:	b	1f920 <main@@Base+0x8fd4>
   1f91c:	b	1f924 <main@@Base+0x8fd8>
   1f920:	b	1faa0 <main@@Base+0x9154>
   1f924:	ldr	r0, [sp, #32]
   1f928:	ldr	r1, [sp, #36]	; 0x24
   1f92c:	movw	r2, #29556	; 0x7374
   1f930:	movt	r2, #21605	; 0x5465
   1f934:	eor	r1, r1, r2
   1f938:	movw	r2, #28016	; 0x6d70
   1f93c:	movt	r2, #21353	; 0x5369
   1f940:	eor	r0, r0, r2
   1f944:	orr	r0, r0, r1
   1f948:	cmp	r0, #0
   1f94c:	bne	1fa90 <main@@Base+0x9144>
   1f950:	b	1f954 <main@@Base+0x9008>
   1f954:	ldr	r0, [fp, #-12]
   1f958:	add	r0, r0, #8
   1f95c:	str	r0, [fp, #-12]
   1f960:	ldr	r0, [fp, #-12]
   1f964:	ldr	r1, [fp, #-16]
   1f968:	bl	1c960 <main@@Base+0x6014>
   1f96c:	str	r1, [sp, #36]	; 0x24
   1f970:	str	r0, [sp, #32]
   1f974:	ldr	r0, [sp, #32]
   1f978:	ldr	r1, [sp, #36]	; 0x24
   1f97c:	movw	r2, #21601	; 0x5461
   1f980:	movt	r2, #27749	; 0x6c65
   1f984:	eor	r1, r1, r2
   1f988:	movw	r2, #25943	; 0x6557
   1f98c:	movt	r2, #25196	; 0x626c
   1f990:	eor	r0, r0, r2
   1f994:	orr	r0, r0, r1
   1f998:	cmp	r0, #0
   1f99c:	bne	1fa80 <main@@Base+0x9134>
   1f9a0:	b	1f9a4 <main@@Base+0x9058>
   1f9a4:	ldr	r0, [fp, #-12]
   1f9a8:	add	r0, r0, #8
   1f9ac:	str	r0, [fp, #-12]
   1f9b0:	ldr	r0, [fp, #-12]
   1f9b4:	ldr	r1, [fp, #-16]
   1f9b8:	bl	1c960 <main@@Base+0x6014>
   1f9bc:	str	r1, [sp, #36]	; 0x24
   1f9c0:	str	r0, [sp, #32]
   1f9c4:	ldr	r0, [sp, #32]
   1f9c8:	ldr	r1, [sp, #36]	; 0x24
   1f9cc:	movw	r2, #29800	; 0x7468
   1f9d0:	movt	r2, #105	; 0x69
   1f9d4:	eor	r2, r2, r1, lsr #8
   1f9d8:	lsr	r0, r0, #8
   1f9dc:	orr	r0, r0, r1, lsl #24
   1f9e0:	movw	r1, #30061	; 0x756d
   1f9e4:	movt	r1, #17774	; 0x456e
   1f9e8:	eor	r0, r0, r1
   1f9ec:	orr	r0, r0, r2
   1f9f0:	cmp	r0, #0
   1f9f4:	bne	1fa70 <main@@Base+0x9124>
   1f9f8:	b	1f9fc <main@@Base+0x90b0>
   1f9fc:	ldr	r0, [fp, #-8]
   1fa00:	ldr	r1, [fp, #-12]
   1fa04:	str	r1, [fp, #-28]	; 0xffffffe4
   1fa08:	ldr	r2, [fp, #-16]
   1fa0c:	ldr	r3, [fp, #12]
   1fa10:	movw	ip, #7
   1fa14:	str	r3, [sp, #4]
   1fa18:	mov	r3, ip
   1fa1c:	ldr	ip, [sp, #4]
   1fa20:	str	ip, [sp]
   1fa24:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   1fa28:	str	r0, [fp, #-12]
   1fa2c:	ldr	r0, [fp, #-12]
   1fa30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fa34:	cmp	r0, r1
   1fa38:	beq	1fa60 <main@@Base+0x9114>
   1fa3c:	ldr	r0, [fp, #8]
   1fa40:	mov	r1, #0
   1fa44:	str	r1, [r0, #4]
   1fa48:	mov	r1, #2
   1fa4c:	str	r1, [r0]
   1fa50:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fa54:	movw	r1, #0
   1fa58:	str	r1, [r0]
   1fa5c:	b	1fa6c <main@@Base+0x9120>
   1fa60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fa64:	str	r0, [fp, #-4]
   1fa68:	b	1fab0 <main@@Base+0x9164>
   1fa6c:	b	1fa7c <main@@Base+0x9130>
   1fa70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fa74:	str	r0, [fp, #-4]
   1fa78:	b	1fab0 <main@@Base+0x9164>
   1fa7c:	b	1fa8c <main@@Base+0x9140>
   1fa80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fa84:	str	r0, [fp, #-4]
   1fa88:	b	1fab0 <main@@Base+0x9164>
   1fa8c:	b	1fa9c <main@@Base+0x9150>
   1fa90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fa94:	str	r0, [fp, #-4]
   1fa98:	b	1fab0 <main@@Base+0x9164>
   1fa9c:	b	1faa0 <main@@Base+0x9154>
   1faa0:	b	1faa4 <main@@Base+0x9158>
   1faa4:	b	1faa8 <main@@Base+0x915c>
   1faa8:	ldr	r0, [fp, #-12]
   1faac:	str	r0, [fp, #-4]
   1fab0:	ldr	r0, [fp, #-4]
   1fab4:	mov	sp, fp
   1fab8:	pop	{fp, pc}
   1fabc:	push	{fp, lr}
   1fac0:	mov	fp, sp
   1fac4:	sub	sp, sp, #32
   1fac8:	str	r0, [fp, #-8]
   1facc:	str	r1, [fp, #-12]
   1fad0:	str	r2, [sp, #16]
   1fad4:	str	r3, [sp, #12]
   1fad8:	ldr	r0, [fp, #-12]
   1fadc:	str	r0, [sp, #8]
   1fae0:	ldr	r0, [sp, #16]
   1fae4:	ldr	r1, [fp, #-12]
   1fae8:	sub	r0, r0, r1
   1faec:	cmp	r0, #4
   1faf0:	blt	1fb30 <main@@Base+0x91e4>
   1faf4:	ldr	r0, [fp, #-12]
   1faf8:	ldr	r0, [r0]
   1fafc:	movw	r1, #29300	; 0x7274
   1fb00:	movt	r1, #25973	; 0x6575
   1fb04:	subs	r0, r0, r1
   1fb08:	movwne	r0, #1
   1fb0c:	cmp	r0, #0
   1fb10:	bne	1fb30 <main@@Base+0x91e4>
   1fb14:	ldr	r0, [sp, #12]
   1fb18:	movw	r1, #1
   1fb1c:	strb	r1, [r0]
   1fb20:	ldr	r0, [sp, #8]
   1fb24:	add	r0, r0, #4
   1fb28:	str	r0, [fp, #-4]
   1fb2c:	b	1fbc8 <main@@Base+0x927c>
   1fb30:	ldr	r0, [sp, #16]
   1fb34:	ldr	r1, [fp, #-12]
   1fb38:	sub	r0, r0, r1
   1fb3c:	cmp	r0, #5
   1fb40:	blt	1fb7c <main@@Base+0x9230>
   1fb44:	ldr	r0, [fp, #-12]
   1fb48:	ldr	r1, [pc, #132]	; 1fbd4 <main@@Base+0x9288>
   1fb4c:	add	r1, pc, r1
   1fb50:	mov	r2, #5
   1fb54:	bl	14e3c <memcmp@plt>
   1fb58:	cmp	r0, #0
   1fb5c:	bne	1fb7c <main@@Base+0x9230>
   1fb60:	ldr	r0, [sp, #12]
   1fb64:	movw	r1, #0
   1fb68:	strb	r1, [r0]
   1fb6c:	ldr	r0, [sp, #8]
   1fb70:	add	r0, r0, #5
   1fb74:	str	r0, [fp, #-4]
   1fb78:	b	1fbc8 <main@@Base+0x927c>
   1fb7c:	b	1fb80 <main@@Base+0x9234>
   1fb80:	ldr	r0, [fp, #-8]
   1fb84:	ldr	r1, [fp, #-12]
   1fb88:	ldr	r2, [sp, #16]
   1fb8c:	add	r3, sp, #7
   1fb90:	bl	1e284 <main@@Base+0x7938>
   1fb94:	str	r0, [fp, #-12]
   1fb98:	ldrsb	r0, [sp, #7]
   1fb9c:	cmp	r0, #0
   1fba0:	movw	r0, #0
   1fba4:	movne	r0, #1
   1fba8:	mvn	r1, #0
   1fbac:	eor	r0, r0, r1
   1fbb0:	eor	r0, r0, r1
   1fbb4:	and	r0, r0, #1
   1fbb8:	ldr	r1, [sp, #12]
   1fbbc:	strb	r0, [r1]
   1fbc0:	ldr	r0, [fp, #-12]
   1fbc4:	str	r0, [fp, #-4]
   1fbc8:	ldr	r0, [fp, #-4]
   1fbcc:	mov	sp, fp
   1fbd0:	pop	{fp, pc}
   1fbd4:	andeq	sl, r2, r2, lsl pc
   1fbd8:	push	{r4, r5, r6, sl, fp, lr}
   1fbdc:	add	fp, sp, #16
   1fbe0:	sub	sp, sp, #80	; 0x50
   1fbe4:	ldr	ip, [fp, #8]
   1fbe8:	str	r0, [fp, #-24]	; 0xffffffe8
   1fbec:	str	r1, [fp, #-28]	; 0xffffffe4
   1fbf0:	str	r2, [fp, #-32]	; 0xffffffe0
   1fbf4:	str	r3, [fp, #-36]	; 0xffffffdc
   1fbf8:	movw	r0, #0
   1fbfc:	strb	r0, [fp, #-45]	; 0xffffffd3
   1fc00:	ldr	r1, [fp, #8]
   1fc04:	strb	r0, [r1]
   1fc08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fc0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fc10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fc14:	str	ip, [sp, #28]
   1fc18:	bl	230c8 <main@@Base+0xc77c>
   1fc1c:	str	r0, [fp, #-28]	; 0xffffffe4
   1fc20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fc24:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fc28:	cmp	r0, r1
   1fc2c:	bne	1fc3c <main@@Base+0x92f0>
   1fc30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fc34:	str	r0, [fp, #-20]	; 0xffffffec
   1fc38:	b	1fdb0 <main@@Base+0x9464>
   1fc3c:	b	1fc40 <main@@Base+0x92f4>
   1fc40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fc44:	str	r0, [fp, #-40]	; 0xffffffd8
   1fc48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fc4c:	ldr	r0, [r0]
   1fc50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fc54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fc58:	str	r2, [fp, #-44]	; 0xffffffd4
   1fc5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc60:	str	r0, [sp, #24]
   1fc64:	mov	r0, r1
   1fc68:	mov	r1, r2
   1fc6c:	mov	r2, r3
   1fc70:	add	r3, sp, #36	; 0x24
   1fc74:	add	ip, sp, #40	; 0x28
   1fc78:	str	ip, [sp]
   1fc7c:	add	ip, sp, #32
   1fc80:	str	ip, [sp, #4]
   1fc84:	ldr	ip, [sp, #24]
   1fc88:	blx	ip
   1fc8c:	str	r0, [fp, #-28]	; 0xffffffe4
   1fc90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fc94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fc98:	cmp	r0, r1
   1fc9c:	bne	1fcac <main@@Base+0x9360>
   1fca0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fca4:	str	r0, [fp, #-20]	; 0xffffffec
   1fca8:	b	1fdb0 <main@@Base+0x9464>
   1fcac:	b	1fcb0 <main@@Base+0x9364>
   1fcb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fcb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1fcb8:	cmp	r0, r1
   1fcbc:	movw	r0, #0
   1fcc0:	str	r0, [sp, #20]
   1fcc4:	bne	1fcec <main@@Base+0x93a0>
   1fcc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fccc:	add	r1, r0, #4
   1fcd0:	str	r1, [fp, #-40]	; 0xffffffd8
   1fcd4:	ldr	r0, [r0, #4]
   1fcd8:	movw	r1, #0
   1fcdc:	cmp	r0, r1
   1fce0:	movw	r0, #0
   1fce4:	movne	r0, #1
   1fce8:	str	r0, [sp, #20]
   1fcec:	ldr	r0, [sp, #20]
   1fcf0:	tst	r0, #1
   1fcf4:	bne	1fc48 <main@@Base+0x92fc>
   1fcf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fcfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fd00:	cmp	r0, r1
   1fd04:	bne	1fd24 <main@@Base+0x93d8>
   1fd08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fd0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fd10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd14:	movw	r3, #23
   1fd18:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   1fd1c:	str	r0, [fp, #-20]	; 0xffffffec
   1fd20:	b	1fdb0 <main@@Base+0x9464>
   1fd24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fd28:	mov	r1, r0
   1fd2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fd30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fd34:	ldr	ip, [sp, #36]	; 0x24
   1fd38:	ldr	lr, [sp, #40]	; 0x28
   1fd3c:	ldr	r4, [sp, #44]	; 0x2c
   1fd40:	mov	r5, sp
   1fd44:	sub	r6, fp, #45	; 0x2d
   1fd48:	str	r6, [r5, #8]
   1fd4c:	str	r4, [r5, #4]
   1fd50:	str	lr, [r5]
   1fd54:	str	r0, [sp, #16]
   1fd58:	mov	r0, r2
   1fd5c:	str	r1, [sp, #12]
   1fd60:	mov	r1, r3
   1fd64:	ldr	r2, [sp, #16]
   1fd68:	mov	r3, ip
   1fd6c:	bl	277bc <main@@Base+0x10e70>
   1fd70:	ldr	r1, [sp, #12]
   1fd74:	cmp	r1, r0
   1fd78:	bne	1fd88 <main@@Base+0x943c>
   1fd7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fd80:	str	r0, [fp, #-20]	; 0xffffffec
   1fd84:	b	1fdb0 <main@@Base+0x9464>
   1fd88:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1fd8c:	ldr	r1, [fp, #8]
   1fd90:	ldrb	r2, [r1]
   1fd94:	add	r0, r2, r0
   1fd98:	strb	r0, [r1]
   1fd9c:	ldr	r0, [sp, #32]
   1fda0:	cmp	r0, #0
   1fda4:	bne	1fc40 <main@@Base+0x92f4>
   1fda8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fdac:	str	r0, [fp, #-20]	; 0xffffffec
   1fdb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fdb4:	sub	sp, fp, #16
   1fdb8:	pop	{r4, r5, r6, sl, fp, pc}
   1fdbc:	push	{fp, lr}
   1fdc0:	mov	fp, sp
   1fdc4:	sub	sp, sp, #8
   1fdc8:	str	r0, [sp, #4]
   1fdcc:	strb	r1, [sp, #3]
   1fdd0:	ldrb	r0, [sp, #3]
   1fdd4:	bl	27854 <main@@Base+0x10f08>
   1fdd8:	ldr	r1, [sp, #4]
   1fddc:	strb	r0, [r1]
   1fde0:	mov	sp, fp
   1fde4:	pop	{fp, pc}
   1fde8:	push	{fp, lr}
   1fdec:	mov	fp, sp
   1fdf0:	sub	sp, sp, #64	; 0x40
   1fdf4:	str	r0, [fp, #-8]
   1fdf8:	str	r1, [fp, #-12]
   1fdfc:	str	r2, [fp, #-16]
   1fe00:	str	r3, [fp, #-20]	; 0xffffffec
   1fe04:	ldr	r0, [fp, #-8]
   1fe08:	ldr	r1, [fp, #-12]
   1fe0c:	ldr	r2, [fp, #-16]
   1fe10:	sub	r3, fp, #24
   1fe14:	bl	1c7d0 <main@@Base+0x5e84>
   1fe18:	str	r0, [fp, #-12]
   1fe1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fe20:	cmp	r0, #0
   1fe24:	beq	20094 <main@@Base+0x9748>
   1fe28:	ldr	r0, [fp, #-8]
   1fe2c:	ldr	r1, [fp, #-12]
   1fe30:	ldr	r2, [fp, #-16]
   1fe34:	bl	1c8b4 <main@@Base+0x5f68>
   1fe38:	str	r0, [fp, #-12]
   1fe3c:	ldr	r0, [fp, #-12]
   1fe40:	ldr	r1, [fp, #-16]
   1fe44:	bl	1c960 <main@@Base+0x6014>
   1fe48:	str	r1, [sp, #20]
   1fe4c:	str	r0, [sp, #16]
   1fe50:	ldrh	r0, [sp, #22]
   1fe54:	movw	r1, #0
   1fe58:	movt	r1, #26980	; 0x6964
   1fe5c:	teq	r1, r0, lsl #16
   1fe60:	bne	1ff4c <main@@Base+0x9600>
   1fe64:	b	1fe68 <main@@Base+0x951c>
   1fe68:	ldr	r0, [fp, #-8]
   1fe6c:	ldr	r1, [fp, #-12]
   1fe70:	str	r1, [sp, #28]
   1fe74:	ldr	r2, [fp, #-16]
   1fe78:	movw	r3, #2
   1fe7c:	bl	1c998 <main@@Base+0x604c>
   1fe80:	str	r0, [fp, #-12]
   1fe84:	ldr	r0, [sp, #28]
   1fe88:	ldr	r1, [fp, #-12]
   1fe8c:	cmp	r0, r1
   1fe90:	beq	1ff34 <main@@Base+0x95e8>
   1fe94:	movw	r0, #0
   1fe98:	str	r0, [sp, #12]
   1fe9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fea0:	add	r0, r0, #0
   1fea4:	str	r0, [sp, #32]
   1fea8:	ldr	r0, [fp, #-8]
   1feac:	ldr	r1, [fp, #-12]
   1feb0:	str	r1, [sp, #28]
   1feb4:	ldr	r2, [fp, #-16]
   1feb8:	add	r3, sp, #12
   1febc:	bl	21170 <main@@Base+0xa824>
   1fec0:	str	r0, [fp, #-12]
   1fec4:	ldr	r0, [sp, #28]
   1fec8:	ldr	r1, [fp, #-12]
   1fecc:	cmp	r0, r1
   1fed0:	bne	1ff24 <main@@Base+0x95d8>
   1fed4:	ldr	r0, [pc, #492]	; 200c8 <main@@Base+0x977c>
   1fed8:	add	r3, pc, r0
   1fedc:	ldr	r0, [fp, #-8]
   1fee0:	ldr	r1, [fp, #-12]
   1fee4:	str	r1, [sp, #28]
   1fee8:	ldr	r2, [fp, #-16]
   1feec:	add	ip, sp, #12
   1fef0:	str	ip, [sp]
   1fef4:	bl	21248 <main@@Base+0xa8fc>
   1fef8:	str	r0, [fp, #-12]
   1fefc:	ldr	r0, [fp, #-12]
   1ff00:	ldr	r1, [sp, #28]
   1ff04:	cmp	r0, r1
   1ff08:	beq	1ff1c <main@@Base+0x95d0>
   1ff0c:	ldr	r0, [fp, #-12]
   1ff10:	ldr	r1, [fp, #-16]
   1ff14:	cmp	r0, r1
   1ff18:	bne	1ff20 <main@@Base+0x95d4>
   1ff1c:	b	200a0 <main@@Base+0x9754>
   1ff20:	b	1ff24 <main@@Base+0x95d8>
   1ff24:	ldr	r0, [sp, #32]
   1ff28:	ldr	r1, [sp, #12]
   1ff2c:	bl	2142c <main@@Base+0xaae0>
   1ff30:	b	1ff48 <main@@Base+0x95fc>
   1ff34:	ldr	r0, [fp, #-8]
   1ff38:	ldr	r1, [fp, #-12]
   1ff3c:	ldr	r2, [fp, #-16]
   1ff40:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   1ff44:	str	r0, [fp, #-12]
   1ff48:	b	20078 <main@@Base+0x972c>
   1ff4c:	ldr	r0, [sp, #16]
   1ff50:	ldr	r1, [sp, #20]
   1ff54:	movw	r2, #29556	; 0x7374
   1ff58:	movt	r2, #25705	; 0x6469
   1ff5c:	eor	r1, r1, r2
   1ff60:	movw	r2, #25445	; 0x6365
   1ff64:	movt	r2, #24942	; 0x616e
   1ff68:	eor	r0, r0, r2
   1ff6c:	orr	r0, r0, r1
   1ff70:	cmp	r0, #0
   1ff74:	bne	20060 <main@@Base+0x9714>
   1ff78:	b	1ff7c <main@@Base+0x9630>
   1ff7c:	ldr	r0, [fp, #-8]
   1ff80:	ldr	r1, [fp, #-12]
   1ff84:	str	r1, [sp, #28]
   1ff88:	ldr	r2, [fp, #-16]
   1ff8c:	movw	r3, #8
   1ff90:	bl	1c998 <main@@Base+0x604c>
   1ff94:	str	r0, [fp, #-12]
   1ff98:	ldr	r0, [sp, #28]
   1ff9c:	ldr	r1, [fp, #-12]
   1ffa0:	cmp	r0, r1
   1ffa4:	beq	20048 <main@@Base+0x96fc>
   1ffa8:	movw	r0, #0
   1ffac:	str	r0, [sp, #8]
   1ffb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ffb4:	add	r0, r0, #4
   1ffb8:	str	r0, [sp, #32]
   1ffbc:	ldr	r0, [fp, #-8]
   1ffc0:	ldr	r1, [fp, #-12]
   1ffc4:	str	r1, [sp, #28]
   1ffc8:	ldr	r2, [fp, #-16]
   1ffcc:	add	r3, sp, #8
   1ffd0:	bl	21170 <main@@Base+0xa824>
   1ffd4:	str	r0, [fp, #-12]
   1ffd8:	ldr	r0, [sp, #28]
   1ffdc:	ldr	r1, [fp, #-12]
   1ffe0:	cmp	r0, r1
   1ffe4:	bne	20038 <main@@Base+0x96ec>
   1ffe8:	ldr	r0, [pc, #212]	; 200c4 <main@@Base+0x9778>
   1ffec:	add	r3, pc, r0
   1fff0:	ldr	r0, [fp, #-8]
   1fff4:	ldr	r1, [fp, #-12]
   1fff8:	str	r1, [sp, #28]
   1fffc:	ldr	r2, [fp, #-16]
   20000:	add	ip, sp, #8
   20004:	str	ip, [sp]
   20008:	bl	21248 <main@@Base+0xa8fc>
   2000c:	str	r0, [fp, #-12]
   20010:	ldr	r0, [fp, #-12]
   20014:	ldr	r1, [sp, #28]
   20018:	cmp	r0, r1
   2001c:	beq	20030 <main@@Base+0x96e4>
   20020:	ldr	r0, [fp, #-12]
   20024:	ldr	r1, [fp, #-16]
   20028:	cmp	r0, r1
   2002c:	bne	20034 <main@@Base+0x96e8>
   20030:	b	200a0 <main@@Base+0x9754>
   20034:	b	20038 <main@@Base+0x96ec>
   20038:	ldr	r0, [sp, #32]
   2003c:	ldr	r1, [sp, #8]
   20040:	bl	2142c <main@@Base+0xaae0>
   20044:	b	2005c <main@@Base+0x9710>
   20048:	ldr	r0, [fp, #-8]
   2004c:	ldr	r1, [fp, #-12]
   20050:	ldr	r2, [fp, #-16]
   20054:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   20058:	str	r0, [fp, #-12]
   2005c:	b	20074 <main@@Base+0x9728>
   20060:	ldr	r0, [fp, #-8]
   20064:	ldr	r1, [fp, #-12]
   20068:	ldr	r2, [fp, #-16]
   2006c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   20070:	str	r0, [fp, #-12]
   20074:	b	20078 <main@@Base+0x972c>
   20078:	ldr	r0, [fp, #-8]
   2007c:	ldr	r1, [fp, #-12]
   20080:	ldr	r2, [fp, #-16]
   20084:	sub	r3, fp, #24
   20088:	bl	21984 <main@@Base+0xb038>
   2008c:	str	r0, [fp, #-12]
   20090:	b	1fe1c <main@@Base+0x94d0>
   20094:	ldr	r0, [fp, #-12]
   20098:	str	r0, [fp, #-4]
   2009c:	b	200b8 <main@@Base+0x976c>
   200a0:	ldr	r0, [fp, #-8]
   200a4:	ldr	r1, [fp, #-12]
   200a8:	ldr	r2, [fp, #-16]
   200ac:	movw	r3, #33	; 0x21
   200b0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   200b4:	str	r0, [fp, #-4]
   200b8:	ldr	r0, [fp, #-4]
   200bc:	mov	sp, fp
   200c0:	pop	{fp, pc}
   200c4:	andeq	pc, r3, ip, lsr r3	; <UNPREDICTABLE>
   200c8:	andeq	pc, r3, r4, asr #8
   200cc:	push	{fp, lr}
   200d0:	mov	fp, sp
   200d4:	sub	sp, sp, #56	; 0x38
   200d8:	str	r0, [fp, #-8]
   200dc:	str	r1, [fp, #-12]
   200e0:	str	r2, [fp, #-16]
   200e4:	str	r3, [fp, #-20]	; 0xffffffec
   200e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   200ec:	movw	r1, #0
   200f0:	str	r1, [r0]
   200f4:	ldr	r0, [fp, #-8]
   200f8:	ldr	r0, [r0]
   200fc:	movw	r1, #3
   20100:	bl	2c618 <flatcc_builder_start_table@@Base>
   20104:	cmp	r0, #0
   20108:	beq	20110 <main@@Base+0x97c4>
   2010c:	b	20480 <main@@Base+0x9b34>
   20110:	ldr	r0, [fp, #-8]
   20114:	ldr	r1, [fp, #-12]
   20118:	ldr	r2, [fp, #-16]
   2011c:	sub	r3, fp, #24
   20120:	bl	1c7d0 <main@@Base+0x5e84>
   20124:	str	r0, [fp, #-12]
   20128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2012c:	cmp	r0, #0
   20130:	beq	20440 <main@@Base+0x9af4>
   20134:	ldr	r0, [fp, #-8]
   20138:	ldr	r1, [fp, #-12]
   2013c:	ldr	r2, [fp, #-16]
   20140:	bl	1c8b4 <main@@Base+0x5f68>
   20144:	str	r0, [fp, #-12]
   20148:	ldr	r0, [fp, #-12]
   2014c:	ldr	r1, [fp, #-16]
   20150:	bl	1c960 <main@@Base+0x6014>
   20154:	str	r1, [sp, #12]
   20158:	str	r0, [sp, #8]
   2015c:	ldr	r0, [sp, #8]
   20160:	ldr	r1, [sp, #12]
   20164:	movw	r2, #65535	; 0xffff
   20168:	movt	r2, #25955	; 0x6563
   2016c:	subs	r0, r2, r0
   20170:	movw	r2, #29556	; 0x7374
   20174:	movt	r2, #28261	; 0x6e65
   20178:	sbcs	r1, r2, r1
   2017c:	bcc	20258 <main@@Base+0x990c>
   20180:	b	20184 <main@@Base+0x9838>
   20184:	ldr	r0, [sp, #12]
   20188:	movw	r1, #29793	; 0x7461
   2018c:	movt	r1, #25697	; 0x6461
   20190:	teq	r0, r1
   20194:	bne	20240 <main@@Base+0x98f4>
   20198:	b	2019c <main@@Base+0x9850>
   2019c:	ldr	r0, [fp, #-8]
   201a0:	ldr	r1, [fp, #-12]
   201a4:	str	r1, [sp, #16]
   201a8:	ldr	r2, [fp, #-16]
   201ac:	movw	r3, #4
   201b0:	bl	1c998 <main@@Base+0x604c>
   201b4:	str	r0, [fp, #-12]
   201b8:	ldr	r0, [sp, #16]
   201bc:	ldr	r1, [fp, #-12]
   201c0:	cmp	r0, r1
   201c4:	beq	20228 <main@@Base+0x98dc>
   201c8:	ldr	r0, [fp, #-8]
   201cc:	ldr	r1, [fp, #-12]
   201d0:	ldr	r2, [fp, #-16]
   201d4:	add	r3, sp, #24
   201d8:	movw	ip, #0
   201dc:	str	ip, [sp]
   201e0:	bl	367cc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   201e4:	str	r0, [fp, #-12]
   201e8:	ldr	r0, [sp, #24]
   201ec:	cmp	r0, #0
   201f0:	beq	20214 <main@@Base+0x98c8>
   201f4:	ldr	r0, [fp, #-8]
   201f8:	ldr	r0, [r0]
   201fc:	movw	r1, #0
   20200:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   20204:	str	r0, [sp, #20]
   20208:	movw	r1, #0
   2020c:	cmp	r0, r1
   20210:	bne	20218 <main@@Base+0x98cc>
   20214:	b	20480 <main@@Base+0x9b34>
   20218:	ldr	r0, [sp, #24]
   2021c:	ldr	r1, [sp, #20]
   20220:	str	r0, [r1]
   20224:	b	2023c <main@@Base+0x98f0>
   20228:	ldr	r0, [fp, #-8]
   2022c:	ldr	r1, [fp, #-12]
   20230:	ldr	r2, [fp, #-16]
   20234:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   20238:	str	r0, [fp, #-12]
   2023c:	b	20254 <main@@Base+0x9908>
   20240:	ldr	r0, [fp, #-8]
   20244:	ldr	r1, [fp, #-12]
   20248:	ldr	r2, [fp, #-16]
   2024c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   20250:	str	r0, [fp, #-12]
   20254:	b	20424 <main@@Base+0x9ad8>
   20258:	ldr	r0, [sp, #8]
   2025c:	ldr	r1, [sp, #12]
   20260:	movw	r2, #29292	; 0x726c
   20264:	movt	r2, #117	; 0x75
   20268:	eor	r2, r2, r1, lsr #8
   2026c:	lsr	r0, r0, #8
   20270:	orr	r0, r0, r1, lsl #24
   20274:	movw	r1, #29793	; 0x7461
   20278:	movt	r1, #25697	; 0x6461
   2027c:	eor	r0, r0, r1
   20280:	orr	r0, r0, r2
   20284:	cmp	r0, #0
   20288:	bne	20334 <main@@Base+0x99e8>
   2028c:	b	20290 <main@@Base+0x9944>
   20290:	ldr	r0, [fp, #-8]
   20294:	ldr	r1, [fp, #-12]
   20298:	str	r1, [sp, #16]
   2029c:	ldr	r2, [fp, #-16]
   202a0:	movw	r3, #7
   202a4:	bl	1c998 <main@@Base+0x604c>
   202a8:	str	r0, [fp, #-12]
   202ac:	ldr	r0, [sp, #16]
   202b0:	ldr	r1, [fp, #-12]
   202b4:	cmp	r0, r1
   202b8:	beq	2031c <main@@Base+0x99d0>
   202bc:	ldr	r0, [fp, #-8]
   202c0:	ldr	r1, [fp, #-12]
   202c4:	ldr	r2, [fp, #-16]
   202c8:	add	r3, sp, #24
   202cc:	movw	ip, #1
   202d0:	str	ip, [sp]
   202d4:	bl	367cc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   202d8:	str	r0, [fp, #-12]
   202dc:	ldr	r0, [sp, #24]
   202e0:	cmp	r0, #0
   202e4:	beq	20308 <main@@Base+0x99bc>
   202e8:	ldr	r0, [fp, #-8]
   202ec:	ldr	r0, [r0]
   202f0:	movw	r1, #1
   202f4:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   202f8:	str	r0, [sp, #20]
   202fc:	movw	r1, #0
   20300:	cmp	r0, r1
   20304:	bne	2030c <main@@Base+0x99c0>
   20308:	b	20480 <main@@Base+0x9b34>
   2030c:	ldr	r0, [sp, #24]
   20310:	ldr	r1, [sp, #20]
   20314:	str	r0, [r1]
   20318:	b	20330 <main@@Base+0x99e4>
   2031c:	ldr	r0, [fp, #-8]
   20320:	ldr	r1, [fp, #-12]
   20324:	ldr	r2, [fp, #-16]
   20328:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   2032c:	str	r0, [fp, #-12]
   20330:	b	20420 <main@@Base+0x9ad4>
   20334:	ldrh	r0, [sp, #10]
   20338:	ldr	r1, [sp, #12]
   2033c:	movw	r2, #28261	; 0x6e65
   20340:	eor	r2, r2, r1, lsr #16
   20344:	orr	r0, r0, r1, lsl #16
   20348:	movw	r1, #25956	; 0x6564
   2034c:	movt	r1, #29556	; 0x7374
   20350:	eor	r0, r0, r1
   20354:	orr	r0, r0, r2
   20358:	cmp	r0, #0
   2035c:	bne	20408 <main@@Base+0x9abc>
   20360:	b	20364 <main@@Base+0x9a18>
   20364:	ldr	r0, [fp, #-8]
   20368:	ldr	r1, [fp, #-12]
   2036c:	str	r1, [sp, #16]
   20370:	ldr	r2, [fp, #-16]
   20374:	movw	r3, #6
   20378:	bl	1c998 <main@@Base+0x604c>
   2037c:	str	r0, [fp, #-12]
   20380:	ldr	r0, [sp, #16]
   20384:	ldr	r1, [fp, #-12]
   20388:	cmp	r0, r1
   2038c:	beq	203f0 <main@@Base+0x9aa4>
   20390:	ldr	r0, [fp, #-8]
   20394:	ldr	r1, [fp, #-12]
   20398:	ldr	r2, [fp, #-16]
   2039c:	add	r3, sp, #24
   203a0:	movw	ip, #0
   203a4:	str	ip, [sp]
   203a8:	bl	367cc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   203ac:	str	r0, [fp, #-12]
   203b0:	ldr	r0, [sp, #24]
   203b4:	cmp	r0, #0
   203b8:	beq	203dc <main@@Base+0x9a90>
   203bc:	ldr	r0, [fp, #-8]
   203c0:	ldr	r0, [r0]
   203c4:	movw	r1, #2
   203c8:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   203cc:	str	r0, [sp, #20]
   203d0:	movw	r1, #0
   203d4:	cmp	r0, r1
   203d8:	bne	203e0 <main@@Base+0x9a94>
   203dc:	b	20480 <main@@Base+0x9b34>
   203e0:	ldr	r0, [sp, #24]
   203e4:	ldr	r1, [sp, #20]
   203e8:	str	r0, [r1]
   203ec:	b	20404 <main@@Base+0x9ab8>
   203f0:	ldr	r0, [fp, #-8]
   203f4:	ldr	r1, [fp, #-12]
   203f8:	ldr	r2, [fp, #-16]
   203fc:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   20400:	str	r0, [fp, #-12]
   20404:	b	2041c <main@@Base+0x9ad0>
   20408:	ldr	r0, [fp, #-8]
   2040c:	ldr	r1, [fp, #-12]
   20410:	ldr	r2, [fp, #-16]
   20414:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   20418:	str	r0, [fp, #-12]
   2041c:	b	20420 <main@@Base+0x9ad4>
   20420:	b	20424 <main@@Base+0x9ad8>
   20424:	ldr	r0, [fp, #-8]
   20428:	ldr	r1, [fp, #-12]
   2042c:	ldr	r2, [fp, #-16]
   20430:	sub	r3, fp, #24
   20434:	bl	21984 <main@@Base+0xb038>
   20438:	str	r0, [fp, #-12]
   2043c:	b	20128 <main@@Base+0x97dc>
   20440:	ldr	r0, [fp, #-8]
   20444:	ldr	r0, [r0, #24]
   20448:	cmp	r0, #0
   2044c:	beq	20454 <main@@Base+0x9b08>
   20450:	b	20480 <main@@Base+0x9b34>
   20454:	ldr	r0, [fp, #-8]
   20458:	ldr	r0, [r0]
   2045c:	bl	2d280 <flatcc_builder_end_table@@Base>
   20460:	ldr	r1, [fp, #-20]	; 0xffffffec
   20464:	str	r0, [r1]
   20468:	cmp	r0, #0
   2046c:	bne	20474 <main@@Base+0x9b28>
   20470:	b	20480 <main@@Base+0x9b34>
   20474:	ldr	r0, [fp, #-12]
   20478:	str	r0, [fp, #-4]
   2047c:	b	20498 <main@@Base+0x9b4c>
   20480:	ldr	r0, [fp, #-8]
   20484:	ldr	r1, [fp, #-12]
   20488:	ldr	r2, [fp, #-16]
   2048c:	movw	r3, #33	; 0x21
   20490:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   20494:	str	r0, [fp, #-4]
   20498:	ldr	r0, [fp, #-4]
   2049c:	mov	sp, fp
   204a0:	pop	{fp, pc}
   204a4:	push	{fp, lr}
   204a8:	mov	fp, sp
   204ac:	sub	sp, sp, #72	; 0x48
   204b0:	str	r0, [fp, #-8]
   204b4:	str	r1, [fp, #-12]
   204b8:	str	r2, [fp, #-16]
   204bc:	str	r3, [fp, #-20]	; 0xffffffec
   204c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   204c4:	movw	r1, #0
   204c8:	str	r1, [r0]
   204cc:	ldr	r0, [fp, #-8]
   204d0:	ldr	r0, [r0]
   204d4:	movw	r1, #3
   204d8:	bl	2c618 <flatcc_builder_start_table@@Base>
   204dc:	cmp	r0, #0
   204e0:	beq	204e8 <main@@Base+0x9b9c>
   204e4:	b	2093c <main@@Base+0x9ff0>
   204e8:	ldr	r0, [fp, #-8]
   204ec:	ldr	r1, [fp, #-12]
   204f0:	ldr	r2, [fp, #-16]
   204f4:	sub	r3, fp, #24
   204f8:	bl	1c7d0 <main@@Base+0x5e84>
   204fc:	str	r0, [fp, #-12]
   20500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20504:	cmp	r0, #0
   20508:	beq	208fc <main@@Base+0x9fb0>
   2050c:	ldr	r0, [fp, #-8]
   20510:	ldr	r1, [fp, #-12]
   20514:	ldr	r2, [fp, #-16]
   20518:	bl	1c8b4 <main@@Base+0x5f68>
   2051c:	str	r0, [fp, #-12]
   20520:	ldr	r0, [fp, #-12]
   20524:	ldr	r1, [fp, #-16]
   20528:	bl	1c960 <main@@Base+0x6014>
   2052c:	str	r1, [sp, #28]
   20530:	str	r0, [sp, #24]
   20534:	ldr	r0, [sp, #28]
   20538:	movw	r1, #65535	; 0xffff
   2053c:	movt	r1, #26979	; 0x6963
   20540:	cmp	r0, r1
   20544:	bhi	206b8 <main@@Base+0x9d6c>
   20548:	b	2054c <main@@Base+0x9c00>
   2054c:	ldrb	r0, [sp, #27]
   20550:	ldr	r1, [sp, #28]
   20554:	movw	r2, #30062	; 0x756e
   20558:	movt	r2, #25455	; 0x636f
   2055c:	eor	r1, r1, r2
   20560:	eor	r0, r0, #116	; 0x74
   20564:	orr	r0, r1, r0, lsl #24
   20568:	cmp	r0, #0
   2056c:	bne	206a0 <main@@Base+0x9d54>
   20570:	b	20574 <main@@Base+0x9c28>
   20574:	ldr	r0, [fp, #-8]
   20578:	ldr	r1, [fp, #-12]
   2057c:	str	r1, [sp, #32]
   20580:	ldr	r2, [fp, #-16]
   20584:	movw	r3, #5
   20588:	bl	1c998 <main@@Base+0x604c>
   2058c:	str	r0, [fp, #-12]
   20590:	ldr	r0, [sp, #32]
   20594:	ldr	r1, [fp, #-12]
   20598:	cmp	r0, r1
   2059c:	beq	20688 <main@@Base+0x9d3c>
   205a0:	movw	r0, #0
   205a4:	strh	r0, [sp, #22]
   205a8:	ldr	r0, [fp, #-8]
   205ac:	ldr	r1, [fp, #-12]
   205b0:	str	r1, [sp, #32]
   205b4:	ldr	r2, [fp, #-16]
   205b8:	add	r3, sp, #22
   205bc:	bl	271e0 <main@@Base+0x10894>
   205c0:	str	r0, [fp, #-12]
   205c4:	ldr	r0, [sp, #32]
   205c8:	ldr	r1, [fp, #-12]
   205cc:	cmp	r0, r1
   205d0:	bne	20624 <main@@Base+0x9cd8>
   205d4:	ldr	r0, [pc, #904]	; 20964 <main@@Base+0xa018>
   205d8:	add	r3, pc, r0
   205dc:	ldr	r0, [fp, #-8]
   205e0:	ldr	r1, [fp, #-12]
   205e4:	str	r1, [sp, #32]
   205e8:	ldr	r2, [fp, #-16]
   205ec:	add	ip, sp, #22
   205f0:	str	ip, [sp]
   205f4:	bl	272bc <main@@Base+0x10970>
   205f8:	str	r0, [fp, #-12]
   205fc:	ldr	r0, [fp, #-12]
   20600:	ldr	r1, [sp, #32]
   20604:	cmp	r0, r1
   20608:	beq	2061c <main@@Base+0x9cd0>
   2060c:	ldr	r0, [fp, #-12]
   20610:	ldr	r1, [fp, #-16]
   20614:	cmp	r0, r1
   20618:	bne	20620 <main@@Base+0x9cd4>
   2061c:	b	2093c <main@@Base+0x9ff0>
   20620:	b	20624 <main@@Base+0x9cd8>
   20624:	ldrh	r0, [sp, #22]
   20628:	cmp	r0, #0
   2062c:	bne	20644 <main@@Base+0x9cf8>
   20630:	ldr	r0, [fp, #-8]
   20634:	ldr	r0, [r0, #8]
   20638:	and	r0, r0, #2
   2063c:	cmp	r0, #0
   20640:	beq	20684 <main@@Base+0x9d38>
   20644:	ldr	r0, [fp, #-8]
   20648:	ldr	r0, [r0]
   2064c:	movw	r1, #2
   20650:	str	r1, [sp, #4]
   20654:	ldr	r2, [sp, #4]
   20658:	movw	r3, #2
   2065c:	uxth	r3, r3
   20660:	bl	2debc <flatcc_builder_table_add@@Base>
   20664:	str	r0, [fp, #-28]	; 0xffffffe4
   20668:	movw	r1, #0
   2066c:	cmp	r0, r1
   20670:	bne	20678 <main@@Base+0x9d2c>
   20674:	b	2093c <main@@Base+0x9ff0>
   20678:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2067c:	ldrh	r1, [sp, #22]
   20680:	bl	274a0 <main@@Base+0x10b54>
   20684:	b	2069c <main@@Base+0x9d50>
   20688:	ldr	r0, [fp, #-8]
   2068c:	ldr	r1, [fp, #-12]
   20690:	ldr	r2, [fp, #-16]
   20694:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   20698:	str	r0, [fp, #-12]
   2069c:	b	206b4 <main@@Base+0x9d68>
   206a0:	ldr	r0, [fp, #-8]
   206a4:	ldr	r1, [fp, #-12]
   206a8:	ldr	r2, [fp, #-16]
   206ac:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   206b0:	str	r0, [fp, #-12]
   206b4:	b	208e0 <main@@Base+0x9f94>
   206b8:	ldr	r0, [sp, #28]
   206bc:	bic	r0, r0, #255	; 0xff
   206c0:	movw	r1, #27648	; 0x6c00
   206c4:	movt	r1, #30305	; 0x7661
   206c8:	teq	r0, r1
   206cc:	bne	20810 <main@@Base+0x9ec4>
   206d0:	b	206d4 <main@@Base+0x9d88>
   206d4:	ldr	r0, [fp, #-8]
   206d8:	ldr	r1, [fp, #-12]
   206dc:	str	r1, [sp, #32]
   206e0:	ldr	r2, [fp, #-16]
   206e4:	movw	r3, #3
   206e8:	bl	1c998 <main@@Base+0x604c>
   206ec:	str	r0, [fp, #-12]
   206f0:	ldr	r0, [sp, #32]
   206f4:	ldr	r1, [fp, #-12]
   206f8:	cmp	r0, r1
   206fc:	beq	207f8 <main@@Base+0x9eac>
   20700:	mov	r0, #0
   20704:	str	r0, [sp, #12]
   20708:	str	r0, [sp, #8]
   2070c:	ldr	r0, [fp, #-8]
   20710:	ldr	r1, [fp, #-12]
   20714:	str	r1, [sp, #32]
   20718:	ldr	r2, [fp, #-16]
   2071c:	add	r3, sp, #8
   20720:	bl	20e64 <main@@Base+0xa518>
   20724:	str	r0, [fp, #-12]
   20728:	ldr	r0, [sp, #32]
   2072c:	ldr	r1, [fp, #-12]
   20730:	cmp	r0, r1
   20734:	bne	20788 <main@@Base+0x9e3c>
   20738:	ldr	r0, [pc, #544]	; 20960 <main@@Base+0xa014>
   2073c:	add	r3, pc, r0
   20740:	ldr	r0, [fp, #-8]
   20744:	ldr	r1, [fp, #-12]
   20748:	str	r1, [sp, #32]
   2074c:	ldr	r2, [fp, #-16]
   20750:	add	ip, sp, #8
   20754:	str	ip, [sp]
   20758:	bl	20f3c <main@@Base+0xa5f0>
   2075c:	str	r0, [fp, #-12]
   20760:	ldr	r0, [fp, #-12]
   20764:	ldr	r1, [sp, #32]
   20768:	cmp	r0, r1
   2076c:	beq	20780 <main@@Base+0x9e34>
   20770:	ldr	r0, [fp, #-12]
   20774:	ldr	r1, [fp, #-16]
   20778:	cmp	r0, r1
   2077c:	bne	20784 <main@@Base+0x9e38>
   20780:	b	2093c <main@@Base+0x9ff0>
   20784:	b	20788 <main@@Base+0x9e3c>
   20788:	ldr	r0, [sp, #8]
   2078c:	ldr	r1, [sp, #12]
   20790:	orr	r0, r0, r1
   20794:	cmp	r0, #0
   20798:	bne	207b4 <main@@Base+0x9e68>
   2079c:	b	207a0 <main@@Base+0x9e54>
   207a0:	ldr	r0, [fp, #-8]
   207a4:	ldr	r0, [r0, #8]
   207a8:	and	r0, r0, #2
   207ac:	cmp	r0, #0
   207b0:	beq	207f4 <main@@Base+0x9ea8>
   207b4:	ldr	r0, [fp, #-8]
   207b8:	ldr	r0, [r0]
   207bc:	movw	r1, #1
   207c0:	movw	r2, #8
   207c4:	movw	r3, #8
   207c8:	uxth	r3, r3
   207cc:	bl	2debc <flatcc_builder_table_add@@Base>
   207d0:	str	r0, [fp, #-28]	; 0xffffffe4
   207d4:	movw	r1, #0
   207d8:	cmp	r0, r1
   207dc:	bne	207e4 <main@@Base+0x9e98>
   207e0:	b	2093c <main@@Base+0x9ff0>
   207e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   207e8:	ldr	r2, [sp, #8]
   207ec:	ldr	r3, [sp, #12]
   207f0:	bl	21138 <main@@Base+0xa7ec>
   207f4:	b	2080c <main@@Base+0x9ec0>
   207f8:	ldr	r0, [fp, #-8]
   207fc:	ldr	r1, [fp, #-12]
   20800:	ldr	r2, [fp, #-16]
   20804:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   20808:	str	r0, [fp, #-12]
   2080c:	b	208dc <main@@Base+0x9f90>
   20810:	ldrh	r0, [sp, #30]
   20814:	movw	r1, #0
   20818:	movt	r1, #26980	; 0x6964
   2081c:	teq	r1, r0, lsl #16
   20820:	bne	208c4 <main@@Base+0x9f78>
   20824:	b	20828 <main@@Base+0x9edc>
   20828:	ldr	r0, [fp, #-8]
   2082c:	ldr	r1, [fp, #-12]
   20830:	str	r1, [sp, #32]
   20834:	ldr	r2, [fp, #-16]
   20838:	movw	r3, #2
   2083c:	bl	1c998 <main@@Base+0x604c>
   20840:	str	r0, [fp, #-12]
   20844:	ldr	r0, [sp, #32]
   20848:	ldr	r1, [fp, #-12]
   2084c:	cmp	r0, r1
   20850:	beq	208ac <main@@Base+0x9f60>
   20854:	ldr	r0, [fp, #-8]
   20858:	ldr	r1, [fp, #-12]
   2085c:	ldr	r2, [fp, #-16]
   20860:	sub	r3, fp, #32
   20864:	bl	36fe4 <flatcc_json_parser_build_string@@Base>
   20868:	str	r0, [fp, #-12]
   2086c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20870:	cmp	r0, #0
   20874:	beq	20898 <main@@Base+0x9f4c>
   20878:	ldr	r0, [fp, #-8]
   2087c:	ldr	r0, [r0]
   20880:	movw	r1, #0
   20884:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   20888:	str	r0, [sp, #36]	; 0x24
   2088c:	movw	r1, #0
   20890:	cmp	r0, r1
   20894:	bne	2089c <main@@Base+0x9f50>
   20898:	b	2093c <main@@Base+0x9ff0>
   2089c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   208a0:	ldr	r1, [sp, #36]	; 0x24
   208a4:	str	r0, [r1]
   208a8:	b	208c0 <main@@Base+0x9f74>
   208ac:	ldr	r0, [fp, #-8]
   208b0:	ldr	r1, [fp, #-12]
   208b4:	ldr	r2, [fp, #-16]
   208b8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   208bc:	str	r0, [fp, #-12]
   208c0:	b	208d8 <main@@Base+0x9f8c>
   208c4:	ldr	r0, [fp, #-8]
   208c8:	ldr	r1, [fp, #-12]
   208cc:	ldr	r2, [fp, #-16]
   208d0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   208d4:	str	r0, [fp, #-12]
   208d8:	b	208dc <main@@Base+0x9f90>
   208dc:	b	208e0 <main@@Base+0x9f94>
   208e0:	ldr	r0, [fp, #-8]
   208e4:	ldr	r1, [fp, #-12]
   208e8:	ldr	r2, [fp, #-16]
   208ec:	sub	r3, fp, #24
   208f0:	bl	21984 <main@@Base+0xb038>
   208f4:	str	r0, [fp, #-12]
   208f8:	b	20500 <main@@Base+0x9bb4>
   208fc:	ldr	r0, [fp, #-8]
   20900:	ldr	r0, [r0, #24]
   20904:	cmp	r0, #0
   20908:	beq	20910 <main@@Base+0x9fc4>
   2090c:	b	2093c <main@@Base+0x9ff0>
   20910:	ldr	r0, [fp, #-8]
   20914:	ldr	r0, [r0]
   20918:	bl	2d280 <flatcc_builder_end_table@@Base>
   2091c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20920:	str	r0, [r1]
   20924:	cmp	r0, #0
   20928:	bne	20930 <main@@Base+0x9fe4>
   2092c:	b	2093c <main@@Base+0x9ff0>
   20930:	ldr	r0, [fp, #-12]
   20934:	str	r0, [fp, #-4]
   20938:	b	20954 <main@@Base+0xa008>
   2093c:	ldr	r0, [fp, #-8]
   20940:	ldr	r1, [fp, #-12]
   20944:	ldr	r2, [fp, #-16]
   20948:	movw	r3, #33	; 0x21
   2094c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   20950:	str	r0, [fp, #-4]
   20954:	ldr	r0, [fp, #-4]
   20958:	mov	sp, fp
   2095c:	pop	{fp, pc}
   20960:	andeq	lr, r3, r4, lsl #24
   20964:	andeq	lr, r3, ip, asr sp
   20968:	push	{r4, r5, r6, sl, fp, lr}
   2096c:	add	fp, sp, #16
   20970:	sub	sp, sp, #80	; 0x50
   20974:	ldr	ip, [fp, #8]
   20978:	vldr	s0, [pc, #460]	; 20b4c <main@@Base+0xa200>
   2097c:	str	r0, [fp, #-24]	; 0xffffffe8
   20980:	str	r1, [fp, #-28]	; 0xffffffe4
   20984:	str	r2, [fp, #-32]	; 0xffffffe0
   20988:	str	r3, [fp, #-36]	; 0xffffffdc
   2098c:	vstr	s0, [sp, #48]	; 0x30
   20990:	ldr	r0, [fp, #8]
   20994:	vstr	s0, [r0]
   20998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2099c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   209a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   209a4:	str	ip, [sp, #28]
   209a8:	bl	230c8 <main@@Base+0xc77c>
   209ac:	str	r0, [fp, #-28]	; 0xffffffe4
   209b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   209b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   209b8:	cmp	r0, r1
   209bc:	bne	209cc <main@@Base+0xa080>
   209c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   209c4:	str	r0, [fp, #-20]	; 0xffffffec
   209c8:	b	20b40 <main@@Base+0xa1f4>
   209cc:	b	209d0 <main@@Base+0xa084>
   209d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   209d4:	str	r0, [fp, #-40]	; 0xffffffd8
   209d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   209dc:	ldr	r0, [r0]
   209e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   209e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   209e8:	str	r2, [fp, #-44]	; 0xffffffd4
   209ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   209f0:	str	r0, [sp, #24]
   209f4:	mov	r0, r1
   209f8:	mov	r1, r2
   209fc:	mov	r2, r3
   20a00:	add	r3, sp, #36	; 0x24
   20a04:	add	ip, sp, #40	; 0x28
   20a08:	str	ip, [sp]
   20a0c:	add	ip, sp, #32
   20a10:	str	ip, [sp, #4]
   20a14:	ldr	ip, [sp, #24]
   20a18:	blx	ip
   20a1c:	str	r0, [fp, #-28]	; 0xffffffe4
   20a20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20a24:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20a28:	cmp	r0, r1
   20a2c:	bne	20a3c <main@@Base+0xa0f0>
   20a30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20a34:	str	r0, [fp, #-20]	; 0xffffffec
   20a38:	b	20b40 <main@@Base+0xa1f4>
   20a3c:	b	20a40 <main@@Base+0xa0f4>
   20a40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20a44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20a48:	cmp	r0, r1
   20a4c:	movw	r0, #0
   20a50:	str	r0, [sp, #20]
   20a54:	bne	20a7c <main@@Base+0xa130>
   20a58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20a5c:	add	r1, r0, #4
   20a60:	str	r1, [fp, #-40]	; 0xffffffd8
   20a64:	ldr	r0, [r0, #4]
   20a68:	movw	r1, #0
   20a6c:	cmp	r0, r1
   20a70:	movw	r0, #0
   20a74:	movne	r0, #1
   20a78:	str	r0, [sp, #20]
   20a7c:	ldr	r0, [sp, #20]
   20a80:	tst	r0, #1
   20a84:	bne	209d8 <main@@Base+0xa08c>
   20a88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20a8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20a90:	cmp	r0, r1
   20a94:	bne	20ab4 <main@@Base+0xa168>
   20a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20a9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20aa0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20aa4:	movw	r3, #23
   20aa8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   20aac:	str	r0, [fp, #-20]	; 0xffffffec
   20ab0:	b	20b40 <main@@Base+0xa1f4>
   20ab4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20ab8:	mov	r1, r0
   20abc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20ac0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20ac4:	ldr	ip, [sp, #36]	; 0x24
   20ac8:	ldr	lr, [sp, #40]	; 0x28
   20acc:	ldr	r4, [sp, #44]	; 0x2c
   20ad0:	mov	r5, sp
   20ad4:	add	r6, sp, #48	; 0x30
   20ad8:	str	r6, [r5, #8]
   20adc:	str	r4, [r5, #4]
   20ae0:	str	lr, [r5]
   20ae4:	str	r0, [sp, #16]
   20ae8:	mov	r0, r2
   20aec:	str	r1, [sp, #12]
   20af0:	mov	r1, r3
   20af4:	ldr	r2, [sp, #16]
   20af8:	mov	r3, ip
   20afc:	bl	27868 <main@@Base+0x10f1c>
   20b00:	ldr	r1, [sp, #12]
   20b04:	cmp	r1, r0
   20b08:	bne	20b18 <main@@Base+0xa1cc>
   20b0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20b10:	str	r0, [fp, #-20]	; 0xffffffec
   20b14:	b	20b40 <main@@Base+0xa1f4>
   20b18:	vldr	s0, [sp, #48]	; 0x30
   20b1c:	ldr	r0, [fp, #8]
   20b20:	vldr	s2, [r0]
   20b24:	vadd.f32	s0, s2, s0
   20b28:	vstr	s0, [r0]
   20b2c:	ldr	r0, [sp, #32]
   20b30:	cmp	r0, #0
   20b34:	bne	209d0 <main@@Base+0xa084>
   20b38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20b3c:	str	r0, [fp, #-20]	; 0xffffffec
   20b40:	ldr	r0, [fp, #-20]	; 0xffffffec
   20b44:	sub	sp, fp, #16
   20b48:	pop	{r4, r5, r6, sl, fp, pc}
   20b4c:	andeq	r0, r0, r0
   20b50:	push	{fp, lr}
   20b54:	mov	fp, sp
   20b58:	sub	sp, sp, #8
   20b5c:	str	r0, [sp, #4]
   20b60:	vstr	s0, [sp]
   20b64:	vldr	s0, [sp]
   20b68:	bl	278ec <main@@Base+0x10fa0>
   20b6c:	ldr	r0, [sp, #4]
   20b70:	vstr	s0, [r0]
   20b74:	mov	sp, fp
   20b78:	pop	{fp, pc}
   20b7c:	push	{r4, r5, fp, lr}
   20b80:	add	fp, sp, #8
   20b84:	sub	sp, sp, #56	; 0x38
   20b88:	str	r0, [fp, #-16]
   20b8c:	str	r1, [fp, #-20]	; 0xffffffec
   20b90:	str	r2, [fp, #-24]	; 0xffffffe8
   20b94:	str	r3, [fp, #-28]	; 0xffffffe4
   20b98:	mov	r0, #0
   20b9c:	str	r0, [sp, #28]
   20ba0:	str	r0, [sp, #24]
   20ba4:	movw	r0, #0
   20ba8:	str	r0, [sp, #20]
   20bac:	ldr	r1, [fp, #-20]	; 0xffffffec
   20bb0:	str	r1, [sp, #16]
   20bb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20bb8:	str	r0, [r1]
   20bbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   20bc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20bc4:	cmp	r0, r1
   20bc8:	bne	20bd8 <main@@Base+0xa28c>
   20bcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   20bd0:	str	r0, [fp, #-12]
   20bd4:	b	20c48 <main@@Base+0xa2fc>
   20bd8:	ldr	r0, [fp, #-16]
   20bdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   20be0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20be4:	add	r3, sp, #20
   20be8:	add	ip, sp, #24
   20bec:	str	ip, [sp]
   20bf0:	bl	365ac <flatcc_json_parser_integer@@Base>
   20bf4:	str	r0, [fp, #-20]	; 0xffffffec
   20bf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   20bfc:	ldr	r1, [sp, #16]
   20c00:	cmp	r0, r1
   20c04:	beq	20c40 <main@@Base+0xa2f4>
   20c08:	ldr	r0, [fp, #-16]
   20c0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20c10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20c14:	ldr	r3, [sp, #20]
   20c18:	ldr	ip, [sp, #24]
   20c1c:	ldr	lr, [sp, #28]
   20c20:	ldr	r4, [fp, #-28]	; 0xffffffe4
   20c24:	mov	r5, sp
   20c28:	str	r4, [r5, #8]
   20c2c:	str	lr, [r5, #4]
   20c30:	str	ip, [r5]
   20c34:	bl	27910 <main@@Base+0x10fc4>
   20c38:	str	r0, [fp, #-12]
   20c3c:	b	20c48 <main@@Base+0xa2fc>
   20c40:	ldr	r0, [fp, #-20]	; 0xffffffec
   20c44:	str	r0, [fp, #-12]
   20c48:	ldr	r0, [fp, #-12]
   20c4c:	sub	sp, fp, #8
   20c50:	pop	{r4, r5, fp, pc}
   20c54:	push	{r4, r5, r6, sl, fp, lr}
   20c58:	add	fp, sp, #16
   20c5c:	sub	sp, sp, #80	; 0x50
   20c60:	ldr	ip, [fp, #8]
   20c64:	str	r0, [fp, #-24]	; 0xffffffe8
   20c68:	str	r1, [fp, #-28]	; 0xffffffe4
   20c6c:	str	r2, [fp, #-32]	; 0xffffffe0
   20c70:	str	r3, [fp, #-36]	; 0xffffffdc
   20c74:	movw	r0, #0
   20c78:	str	r0, [sp, #48]	; 0x30
   20c7c:	ldr	r1, [fp, #8]
   20c80:	str	r0, [r1]
   20c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20c88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20c8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20c90:	str	ip, [sp, #28]
   20c94:	bl	230c8 <main@@Base+0xc77c>
   20c98:	str	r0, [fp, #-28]	; 0xffffffe4
   20c9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20ca0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20ca4:	cmp	r0, r1
   20ca8:	bne	20cb8 <main@@Base+0xa36c>
   20cac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20cb0:	str	r0, [fp, #-20]	; 0xffffffec
   20cb4:	b	20e2c <main@@Base+0xa4e0>
   20cb8:	b	20cbc <main@@Base+0xa370>
   20cbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20cc0:	str	r0, [fp, #-40]	; 0xffffffd8
   20cc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20cc8:	ldr	r0, [r0]
   20ccc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20cd0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20cd4:	str	r2, [fp, #-44]	; 0xffffffd4
   20cd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20cdc:	str	r0, [sp, #24]
   20ce0:	mov	r0, r1
   20ce4:	mov	r1, r2
   20ce8:	mov	r2, r3
   20cec:	add	r3, sp, #36	; 0x24
   20cf0:	add	ip, sp, #40	; 0x28
   20cf4:	str	ip, [sp]
   20cf8:	add	ip, sp, #32
   20cfc:	str	ip, [sp, #4]
   20d00:	ldr	ip, [sp, #24]
   20d04:	blx	ip
   20d08:	str	r0, [fp, #-28]	; 0xffffffe4
   20d0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20d10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20d14:	cmp	r0, r1
   20d18:	bne	20d28 <main@@Base+0xa3dc>
   20d1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20d20:	str	r0, [fp, #-20]	; 0xffffffec
   20d24:	b	20e2c <main@@Base+0xa4e0>
   20d28:	b	20d2c <main@@Base+0xa3e0>
   20d2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20d30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20d34:	cmp	r0, r1
   20d38:	movw	r0, #0
   20d3c:	str	r0, [sp, #20]
   20d40:	bne	20d68 <main@@Base+0xa41c>
   20d44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20d48:	add	r1, r0, #4
   20d4c:	str	r1, [fp, #-40]	; 0xffffffd8
   20d50:	ldr	r0, [r0, #4]
   20d54:	movw	r1, #0
   20d58:	cmp	r0, r1
   20d5c:	movw	r0, #0
   20d60:	movne	r0, #1
   20d64:	str	r0, [sp, #20]
   20d68:	ldr	r0, [sp, #20]
   20d6c:	tst	r0, #1
   20d70:	bne	20cc4 <main@@Base+0xa378>
   20d74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20d78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20d7c:	cmp	r0, r1
   20d80:	bne	20da0 <main@@Base+0xa454>
   20d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20d88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20d8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20d90:	movw	r3, #23
   20d94:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   20d98:	str	r0, [fp, #-20]	; 0xffffffec
   20d9c:	b	20e2c <main@@Base+0xa4e0>
   20da0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20da4:	mov	r1, r0
   20da8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20dac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20db0:	ldr	ip, [sp, #36]	; 0x24
   20db4:	ldr	lr, [sp, #40]	; 0x28
   20db8:	ldr	r4, [sp, #44]	; 0x2c
   20dbc:	mov	r5, sp
   20dc0:	add	r6, sp, #48	; 0x30
   20dc4:	str	r6, [r5, #8]
   20dc8:	str	r4, [r5, #4]
   20dcc:	str	lr, [r5]
   20dd0:	str	r0, [sp, #16]
   20dd4:	mov	r0, r2
   20dd8:	str	r1, [sp, #12]
   20ddc:	mov	r1, r3
   20de0:	ldr	r2, [sp, #16]
   20de4:	mov	r3, ip
   20de8:	bl	27910 <main@@Base+0x10fc4>
   20dec:	ldr	r1, [sp, #12]
   20df0:	cmp	r1, r0
   20df4:	bne	20e04 <main@@Base+0xa4b8>
   20df8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20dfc:	str	r0, [fp, #-20]	; 0xffffffec
   20e00:	b	20e2c <main@@Base+0xa4e0>
   20e04:	ldr	r0, [sp, #48]	; 0x30
   20e08:	ldr	r1, [fp, #8]
   20e0c:	ldr	r2, [r1]
   20e10:	add	r0, r2, r0
   20e14:	str	r0, [r1]
   20e18:	ldr	r0, [sp, #32]
   20e1c:	cmp	r0, #0
   20e20:	bne	20cbc <main@@Base+0xa370>
   20e24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20e28:	str	r0, [fp, #-20]	; 0xffffffec
   20e2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20e30:	sub	sp, fp, #16
   20e34:	pop	{r4, r5, r6, sl, fp, pc}
   20e38:	push	{fp, lr}
   20e3c:	mov	fp, sp
   20e40:	sub	sp, sp, #8
   20e44:	str	r0, [sp, #4]
   20e48:	str	r1, [sp]
   20e4c:	ldr	r0, [sp]
   20e50:	bl	279e8 <main@@Base+0x1109c>
   20e54:	ldr	r1, [sp, #4]
   20e58:	str	r0, [r1]
   20e5c:	mov	sp, fp
   20e60:	pop	{fp, pc}
   20e64:	push	{r4, r5, fp, lr}
   20e68:	add	fp, sp, #8
   20e6c:	sub	sp, sp, #56	; 0x38
   20e70:	str	r0, [fp, #-16]
   20e74:	str	r1, [fp, #-20]	; 0xffffffec
   20e78:	str	r2, [fp, #-24]	; 0xffffffe8
   20e7c:	str	r3, [fp, #-28]	; 0xffffffe4
   20e80:	mov	r0, #0
   20e84:	str	r0, [sp, #28]
   20e88:	str	r0, [sp, #24]
   20e8c:	str	r0, [sp, #20]
   20e90:	ldr	r1, [fp, #-20]	; 0xffffffec
   20e94:	str	r1, [sp, #16]
   20e98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20e9c:	str	r0, [r1, #4]
   20ea0:	str	r0, [r1]
   20ea4:	ldr	r0, [fp, #-20]	; 0xffffffec
   20ea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20eac:	cmp	r0, r1
   20eb0:	bne	20ec0 <main@@Base+0xa574>
   20eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   20eb8:	str	r0, [fp, #-12]
   20ebc:	b	20f30 <main@@Base+0xa5e4>
   20ec0:	ldr	r0, [fp, #-16]
   20ec4:	ldr	r1, [fp, #-20]	; 0xffffffec
   20ec8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20ecc:	add	r3, sp, #20
   20ed0:	add	ip, sp, #24
   20ed4:	str	ip, [sp]
   20ed8:	bl	365ac <flatcc_json_parser_integer@@Base>
   20edc:	str	r0, [fp, #-20]	; 0xffffffec
   20ee0:	ldr	r0, [fp, #-20]	; 0xffffffec
   20ee4:	ldr	r1, [sp, #16]
   20ee8:	cmp	r0, r1
   20eec:	beq	20f28 <main@@Base+0xa5dc>
   20ef0:	ldr	r0, [fp, #-16]
   20ef4:	ldr	r1, [fp, #-20]	; 0xffffffec
   20ef8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20efc:	ldr	r3, [sp, #20]
   20f00:	ldr	ip, [sp, #24]
   20f04:	ldr	lr, [sp, #28]
   20f08:	ldr	r4, [fp, #-28]	; 0xffffffe4
   20f0c:	mov	r5, sp
   20f10:	str	r4, [r5, #8]
   20f14:	str	lr, [r5, #4]
   20f18:	str	ip, [r5]
   20f1c:	bl	279fc <main@@Base+0x110b0>
   20f20:	str	r0, [fp, #-12]
   20f24:	b	20f30 <main@@Base+0xa5e4>
   20f28:	ldr	r0, [fp, #-20]	; 0xffffffec
   20f2c:	str	r0, [fp, #-12]
   20f30:	ldr	r0, [fp, #-12]
   20f34:	sub	sp, fp, #8
   20f38:	pop	{r4, r5, fp, pc}
   20f3c:	push	{r4, r5, r6, sl, fp, lr}
   20f40:	add	fp, sp, #16
   20f44:	sub	sp, sp, #88	; 0x58
   20f48:	ldr	ip, [fp, #8]
   20f4c:	str	r0, [fp, #-24]	; 0xffffffe8
   20f50:	str	r1, [fp, #-28]	; 0xffffffe4
   20f54:	str	r2, [fp, #-32]	; 0xffffffe0
   20f58:	str	r3, [fp, #-36]	; 0xffffffdc
   20f5c:	mov	r0, #0
   20f60:	str	r0, [sp, #52]	; 0x34
   20f64:	str	r0, [sp, #48]	; 0x30
   20f68:	ldr	r1, [fp, #8]
   20f6c:	str	r0, [r1, #4]
   20f70:	str	r0, [r1]
   20f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20f78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20f7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20f80:	str	ip, [sp, #28]
   20f84:	bl	230c8 <main@@Base+0xc77c>
   20f88:	str	r0, [fp, #-28]	; 0xffffffe4
   20f8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20f90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20f94:	cmp	r0, r1
   20f98:	bne	20fa8 <main@@Base+0xa65c>
   20f9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20fa0:	str	r0, [fp, #-20]	; 0xffffffec
   20fa4:	b	2112c <main@@Base+0xa7e0>
   20fa8:	b	20fac <main@@Base+0xa660>
   20fac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20fb0:	str	r0, [fp, #-40]	; 0xffffffd8
   20fb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20fb8:	ldr	r0, [r0]
   20fbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20fc0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20fc4:	str	r2, [fp, #-44]	; 0xffffffd4
   20fc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20fcc:	str	r0, [sp, #24]
   20fd0:	mov	r0, r1
   20fd4:	mov	r1, r2
   20fd8:	mov	r2, r3
   20fdc:	add	r3, sp, #36	; 0x24
   20fe0:	add	ip, sp, #40	; 0x28
   20fe4:	str	ip, [sp]
   20fe8:	add	ip, sp, #32
   20fec:	str	ip, [sp, #4]
   20ff0:	ldr	ip, [sp, #24]
   20ff4:	blx	ip
   20ff8:	str	r0, [fp, #-28]	; 0xffffffe4
   20ffc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21000:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21004:	cmp	r0, r1
   21008:	bne	21018 <main@@Base+0xa6cc>
   2100c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21010:	str	r0, [fp, #-20]	; 0xffffffec
   21014:	b	2112c <main@@Base+0xa7e0>
   21018:	b	2101c <main@@Base+0xa6d0>
   2101c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21020:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21024:	cmp	r0, r1
   21028:	movw	r0, #0
   2102c:	str	r0, [sp, #20]
   21030:	bne	21058 <main@@Base+0xa70c>
   21034:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21038:	add	r1, r0, #4
   2103c:	str	r1, [fp, #-40]	; 0xffffffd8
   21040:	ldr	r0, [r0, #4]
   21044:	movw	r1, #0
   21048:	cmp	r0, r1
   2104c:	movw	r0, #0
   21050:	movne	r0, #1
   21054:	str	r0, [sp, #20]
   21058:	ldr	r0, [sp, #20]
   2105c:	tst	r0, #1
   21060:	bne	20fb4 <main@@Base+0xa668>
   21064:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21068:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2106c:	cmp	r0, r1
   21070:	bne	21090 <main@@Base+0xa744>
   21074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21078:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2107c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21080:	movw	r3, #23
   21084:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   21088:	str	r0, [fp, #-20]	; 0xffffffec
   2108c:	b	2112c <main@@Base+0xa7e0>
   21090:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21094:	mov	r1, r0
   21098:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2109c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   210a0:	ldr	ip, [sp, #36]	; 0x24
   210a4:	ldr	lr, [sp, #40]	; 0x28
   210a8:	ldr	r4, [sp, #44]	; 0x2c
   210ac:	mov	r5, sp
   210b0:	add	r6, sp, #48	; 0x30
   210b4:	str	r6, [r5, #8]
   210b8:	str	r4, [r5, #4]
   210bc:	str	lr, [r5]
   210c0:	str	r0, [sp, #16]
   210c4:	mov	r0, r2
   210c8:	str	r1, [sp, #12]
   210cc:	mov	r1, r3
   210d0:	ldr	r2, [sp, #16]
   210d4:	mov	r3, ip
   210d8:	bl	279fc <main@@Base+0x110b0>
   210dc:	ldr	r1, [sp, #12]
   210e0:	cmp	r1, r0
   210e4:	bne	210f4 <main@@Base+0xa7a8>
   210e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   210ec:	str	r0, [fp, #-20]	; 0xffffffec
   210f0:	b	2112c <main@@Base+0xa7e0>
   210f4:	ldr	r0, [sp, #48]	; 0x30
   210f8:	ldr	r1, [sp, #52]	; 0x34
   210fc:	ldr	r2, [fp, #8]
   21100:	ldr	r3, [r2]
   21104:	ldr	ip, [r2, #4]
   21108:	adds	r0, r3, r0
   2110c:	adc	r1, ip, r1
   21110:	str	r0, [r2]
   21114:	str	r1, [r2, #4]
   21118:	ldr	r0, [sp, #32]
   2111c:	cmp	r0, #0
   21120:	bne	20fac <main@@Base+0xa660>
   21124:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21128:	str	r0, [fp, #-20]	; 0xffffffec
   2112c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21130:	sub	sp, fp, #16
   21134:	pop	{r4, r5, r6, sl, fp, pc}
   21138:	push	{fp, lr}
   2113c:	mov	fp, sp
   21140:	sub	sp, sp, #16
   21144:	str	r0, [fp, #-4]
   21148:	str	r3, [sp, #4]
   2114c:	str	r2, [sp]
   21150:	ldr	r0, [sp]
   21154:	ldr	r1, [sp, #4]
   21158:	bl	27ae0 <main@@Base+0x11194>
   2115c:	ldr	r2, [fp, #-4]
   21160:	str	r1, [r2, #4]
   21164:	str	r0, [r2]
   21168:	mov	sp, fp
   2116c:	pop	{fp, pc}
   21170:	push	{r4, r5, fp, lr}
   21174:	add	fp, sp, #8
   21178:	sub	sp, sp, #56	; 0x38
   2117c:	str	r0, [fp, #-16]
   21180:	str	r1, [fp, #-20]	; 0xffffffec
   21184:	str	r2, [fp, #-24]	; 0xffffffe8
   21188:	str	r3, [fp, #-28]	; 0xffffffe4
   2118c:	mov	r0, #0
   21190:	str	r0, [sp, #28]
   21194:	str	r0, [sp, #24]
   21198:	movw	r0, #0
   2119c:	str	r0, [sp, #20]
   211a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   211a4:	str	r1, [sp, #16]
   211a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   211ac:	str	r0, [r1]
   211b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   211b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   211b8:	cmp	r0, r1
   211bc:	bne	211cc <main@@Base+0xa880>
   211c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   211c4:	str	r0, [fp, #-12]
   211c8:	b	2123c <main@@Base+0xa8f0>
   211cc:	ldr	r0, [fp, #-16]
   211d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   211d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   211d8:	add	r3, sp, #20
   211dc:	add	ip, sp, #24
   211e0:	str	ip, [sp]
   211e4:	bl	365ac <flatcc_json_parser_integer@@Base>
   211e8:	str	r0, [fp, #-20]	; 0xffffffec
   211ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   211f0:	ldr	r1, [sp, #16]
   211f4:	cmp	r0, r1
   211f8:	beq	21234 <main@@Base+0xa8e8>
   211fc:	ldr	r0, [fp, #-16]
   21200:	ldr	r1, [fp, #-20]	; 0xffffffec
   21204:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21208:	ldr	r3, [sp, #20]
   2120c:	ldr	ip, [sp, #24]
   21210:	ldr	lr, [sp, #28]
   21214:	ldr	r4, [fp, #-28]	; 0xffffffe4
   21218:	mov	r5, sp
   2121c:	str	r4, [r5, #8]
   21220:	str	lr, [r5, #4]
   21224:	str	ip, [r5]
   21228:	bl	27afc <main@@Base+0x111b0>
   2122c:	str	r0, [fp, #-12]
   21230:	b	2123c <main@@Base+0xa8f0>
   21234:	ldr	r0, [fp, #-20]	; 0xffffffec
   21238:	str	r0, [fp, #-12]
   2123c:	ldr	r0, [fp, #-12]
   21240:	sub	sp, fp, #8
   21244:	pop	{r4, r5, fp, pc}
   21248:	push	{r4, r5, r6, sl, fp, lr}
   2124c:	add	fp, sp, #16
   21250:	sub	sp, sp, #80	; 0x50
   21254:	ldr	ip, [fp, #8]
   21258:	str	r0, [fp, #-24]	; 0xffffffe8
   2125c:	str	r1, [fp, #-28]	; 0xffffffe4
   21260:	str	r2, [fp, #-32]	; 0xffffffe0
   21264:	str	r3, [fp, #-36]	; 0xffffffdc
   21268:	movw	r0, #0
   2126c:	str	r0, [sp, #48]	; 0x30
   21270:	ldr	r1, [fp, #8]
   21274:	str	r0, [r1]
   21278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2127c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21280:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21284:	str	ip, [sp, #28]
   21288:	bl	230c8 <main@@Base+0xc77c>
   2128c:	str	r0, [fp, #-28]	; 0xffffffe4
   21290:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21294:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21298:	cmp	r0, r1
   2129c:	bne	212ac <main@@Base+0xa960>
   212a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   212a4:	str	r0, [fp, #-20]	; 0xffffffec
   212a8:	b	21420 <main@@Base+0xaad4>
   212ac:	b	212b0 <main@@Base+0xa964>
   212b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   212b4:	str	r0, [fp, #-40]	; 0xffffffd8
   212b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   212bc:	ldr	r0, [r0]
   212c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   212c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   212c8:	str	r2, [fp, #-44]	; 0xffffffd4
   212cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   212d0:	str	r0, [sp, #24]
   212d4:	mov	r0, r1
   212d8:	mov	r1, r2
   212dc:	mov	r2, r3
   212e0:	add	r3, sp, #36	; 0x24
   212e4:	add	ip, sp, #40	; 0x28
   212e8:	str	ip, [sp]
   212ec:	add	ip, sp, #32
   212f0:	str	ip, [sp, #4]
   212f4:	ldr	ip, [sp, #24]
   212f8:	blx	ip
   212fc:	str	r0, [fp, #-28]	; 0xffffffe4
   21300:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21304:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21308:	cmp	r0, r1
   2130c:	bne	2131c <main@@Base+0xa9d0>
   21310:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21314:	str	r0, [fp, #-20]	; 0xffffffec
   21318:	b	21420 <main@@Base+0xaad4>
   2131c:	b	21320 <main@@Base+0xa9d4>
   21320:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21324:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21328:	cmp	r0, r1
   2132c:	movw	r0, #0
   21330:	str	r0, [sp, #20]
   21334:	bne	2135c <main@@Base+0xaa10>
   21338:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2133c:	add	r1, r0, #4
   21340:	str	r1, [fp, #-40]	; 0xffffffd8
   21344:	ldr	r0, [r0, #4]
   21348:	movw	r1, #0
   2134c:	cmp	r0, r1
   21350:	movw	r0, #0
   21354:	movne	r0, #1
   21358:	str	r0, [sp, #20]
   2135c:	ldr	r0, [sp, #20]
   21360:	tst	r0, #1
   21364:	bne	212b8 <main@@Base+0xa96c>
   21368:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2136c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21370:	cmp	r0, r1
   21374:	bne	21394 <main@@Base+0xaa48>
   21378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2137c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21380:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21384:	movw	r3, #23
   21388:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   2138c:	str	r0, [fp, #-20]	; 0xffffffec
   21390:	b	21420 <main@@Base+0xaad4>
   21394:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21398:	mov	r1, r0
   2139c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   213a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   213a4:	ldr	ip, [sp, #36]	; 0x24
   213a8:	ldr	lr, [sp, #40]	; 0x28
   213ac:	ldr	r4, [sp, #44]	; 0x2c
   213b0:	mov	r5, sp
   213b4:	add	r6, sp, #48	; 0x30
   213b8:	str	r6, [r5, #8]
   213bc:	str	r4, [r5, #4]
   213c0:	str	lr, [r5]
   213c4:	str	r0, [sp, #16]
   213c8:	mov	r0, r2
   213cc:	str	r1, [sp, #12]
   213d0:	mov	r1, r3
   213d4:	ldr	r2, [sp, #16]
   213d8:	mov	r3, ip
   213dc:	bl	27afc <main@@Base+0x111b0>
   213e0:	ldr	r1, [sp, #12]
   213e4:	cmp	r1, r0
   213e8:	bne	213f8 <main@@Base+0xaaac>
   213ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   213f0:	str	r0, [fp, #-20]	; 0xffffffec
   213f4:	b	21420 <main@@Base+0xaad4>
   213f8:	ldr	r0, [sp, #48]	; 0x30
   213fc:	ldr	r1, [fp, #8]
   21400:	ldr	r2, [r1]
   21404:	add	r0, r2, r0
   21408:	str	r0, [r1]
   2140c:	ldr	r0, [sp, #32]
   21410:	cmp	r0, #0
   21414:	bne	212b0 <main@@Base+0xa964>
   21418:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2141c:	str	r0, [fp, #-20]	; 0xffffffec
   21420:	ldr	r0, [fp, #-20]	; 0xffffffec
   21424:	sub	sp, fp, #16
   21428:	pop	{r4, r5, r6, sl, fp, pc}
   2142c:	push	{fp, lr}
   21430:	mov	fp, sp
   21434:	sub	sp, sp, #8
   21438:	str	r0, [sp, #4]
   2143c:	str	r1, [sp]
   21440:	ldr	r0, [sp]
   21444:	bl	27ba0 <main@@Base+0x11254>
   21448:	ldr	r1, [sp, #4]
   2144c:	str	r0, [r1]
   21450:	mov	sp, fp
   21454:	pop	{fp, pc}
   21458:	push	{r4, r5, fp, lr}
   2145c:	add	fp, sp, #8
   21460:	sub	sp, sp, #56	; 0x38
   21464:	str	r0, [fp, #-16]
   21468:	str	r1, [fp, #-20]	; 0xffffffec
   2146c:	str	r2, [fp, #-24]	; 0xffffffe8
   21470:	str	r3, [fp, #-28]	; 0xffffffe4
   21474:	mov	r0, #0
   21478:	str	r0, [sp, #28]
   2147c:	str	r0, [sp, #24]
   21480:	str	r0, [sp, #20]
   21484:	ldr	r1, [fp, #-20]	; 0xffffffec
   21488:	str	r1, [sp, #16]
   2148c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21490:	str	r0, [r1, #4]
   21494:	str	r0, [r1]
   21498:	ldr	r0, [fp, #-20]	; 0xffffffec
   2149c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   214a0:	cmp	r0, r1
   214a4:	bne	214b4 <main@@Base+0xab68>
   214a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   214ac:	str	r0, [fp, #-12]
   214b0:	b	21524 <main@@Base+0xabd8>
   214b4:	ldr	r0, [fp, #-16]
   214b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   214bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   214c0:	add	r3, sp, #20
   214c4:	add	ip, sp, #24
   214c8:	str	ip, [sp]
   214cc:	bl	365ac <flatcc_json_parser_integer@@Base>
   214d0:	str	r0, [fp, #-20]	; 0xffffffec
   214d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   214d8:	ldr	r1, [sp, #16]
   214dc:	cmp	r0, r1
   214e0:	beq	2151c <main@@Base+0xabd0>
   214e4:	ldr	r0, [fp, #-16]
   214e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   214ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   214f0:	ldr	r3, [sp, #20]
   214f4:	ldr	ip, [sp, #24]
   214f8:	ldr	lr, [sp, #28]
   214fc:	ldr	r4, [fp, #-28]	; 0xffffffe4
   21500:	mov	r5, sp
   21504:	str	r4, [r5, #8]
   21508:	str	lr, [r5, #4]
   2150c:	str	ip, [r5]
   21510:	bl	27bb4 <main@@Base+0x11268>
   21514:	str	r0, [fp, #-12]
   21518:	b	21524 <main@@Base+0xabd8>
   2151c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21520:	str	r0, [fp, #-12]
   21524:	ldr	r0, [fp, #-12]
   21528:	sub	sp, fp, #8
   2152c:	pop	{r4, r5, fp, pc}
   21530:	push	{r4, r5, r6, sl, fp, lr}
   21534:	add	fp, sp, #16
   21538:	sub	sp, sp, #88	; 0x58
   2153c:	ldr	ip, [fp, #8]
   21540:	str	r0, [fp, #-24]	; 0xffffffe8
   21544:	str	r1, [fp, #-28]	; 0xffffffe4
   21548:	str	r2, [fp, #-32]	; 0xffffffe0
   2154c:	str	r3, [fp, #-36]	; 0xffffffdc
   21550:	mov	r0, #0
   21554:	str	r0, [sp, #52]	; 0x34
   21558:	str	r0, [sp, #48]	; 0x30
   2155c:	ldr	r1, [fp, #8]
   21560:	str	r0, [r1, #4]
   21564:	str	r0, [r1]
   21568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2156c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21570:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21574:	str	ip, [sp, #28]
   21578:	bl	230c8 <main@@Base+0xc77c>
   2157c:	str	r0, [fp, #-28]	; 0xffffffe4
   21580:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21584:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21588:	cmp	r0, r1
   2158c:	bne	2159c <main@@Base+0xac50>
   21590:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21594:	str	r0, [fp, #-20]	; 0xffffffec
   21598:	b	21720 <main@@Base+0xadd4>
   2159c:	b	215a0 <main@@Base+0xac54>
   215a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   215a4:	str	r0, [fp, #-40]	; 0xffffffd8
   215a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   215ac:	ldr	r0, [r0]
   215b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   215b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   215b8:	str	r2, [fp, #-44]	; 0xffffffd4
   215bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   215c0:	str	r0, [sp, #24]
   215c4:	mov	r0, r1
   215c8:	mov	r1, r2
   215cc:	mov	r2, r3
   215d0:	add	r3, sp, #36	; 0x24
   215d4:	add	ip, sp, #40	; 0x28
   215d8:	str	ip, [sp]
   215dc:	add	ip, sp, #32
   215e0:	str	ip, [sp, #4]
   215e4:	ldr	ip, [sp, #24]
   215e8:	blx	ip
   215ec:	str	r0, [fp, #-28]	; 0xffffffe4
   215f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   215f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   215f8:	cmp	r0, r1
   215fc:	bne	2160c <main@@Base+0xacc0>
   21600:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21604:	str	r0, [fp, #-20]	; 0xffffffec
   21608:	b	21720 <main@@Base+0xadd4>
   2160c:	b	21610 <main@@Base+0xacc4>
   21610:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21614:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21618:	cmp	r0, r1
   2161c:	movw	r0, #0
   21620:	str	r0, [sp, #20]
   21624:	bne	2164c <main@@Base+0xad00>
   21628:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2162c:	add	r1, r0, #4
   21630:	str	r1, [fp, #-40]	; 0xffffffd8
   21634:	ldr	r0, [r0, #4]
   21638:	movw	r1, #0
   2163c:	cmp	r0, r1
   21640:	movw	r0, #0
   21644:	movne	r0, #1
   21648:	str	r0, [sp, #20]
   2164c:	ldr	r0, [sp, #20]
   21650:	tst	r0, #1
   21654:	bne	215a8 <main@@Base+0xac5c>
   21658:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2165c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21660:	cmp	r0, r1
   21664:	bne	21684 <main@@Base+0xad38>
   21668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2166c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21670:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21674:	movw	r3, #23
   21678:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   2167c:	str	r0, [fp, #-20]	; 0xffffffec
   21680:	b	21720 <main@@Base+0xadd4>
   21684:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21688:	mov	r1, r0
   2168c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21690:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21694:	ldr	ip, [sp, #36]	; 0x24
   21698:	ldr	lr, [sp, #40]	; 0x28
   2169c:	ldr	r4, [sp, #44]	; 0x2c
   216a0:	mov	r5, sp
   216a4:	add	r6, sp, #48	; 0x30
   216a8:	str	r6, [r5, #8]
   216ac:	str	r4, [r5, #4]
   216b0:	str	lr, [r5]
   216b4:	str	r0, [sp, #16]
   216b8:	mov	r0, r2
   216bc:	str	r1, [sp, #12]
   216c0:	mov	r1, r3
   216c4:	ldr	r2, [sp, #16]
   216c8:	mov	r3, ip
   216cc:	bl	27bb4 <main@@Base+0x11268>
   216d0:	ldr	r1, [sp, #12]
   216d4:	cmp	r1, r0
   216d8:	bne	216e8 <main@@Base+0xad9c>
   216dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   216e0:	str	r0, [fp, #-20]	; 0xffffffec
   216e4:	b	21720 <main@@Base+0xadd4>
   216e8:	ldr	r0, [sp, #48]	; 0x30
   216ec:	ldr	r1, [sp, #52]	; 0x34
   216f0:	ldr	r2, [fp, #8]
   216f4:	ldr	r3, [r2]
   216f8:	ldr	ip, [r2, #4]
   216fc:	adds	r0, r3, r0
   21700:	adc	r1, ip, r1
   21704:	str	r0, [r2]
   21708:	str	r1, [r2, #4]
   2170c:	ldr	r0, [sp, #32]
   21710:	cmp	r0, #0
   21714:	bne	215a0 <main@@Base+0xac54>
   21718:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2171c:	str	r0, [fp, #-20]	; 0xffffffec
   21720:	ldr	r0, [fp, #-20]	; 0xffffffec
   21724:	sub	sp, fp, #16
   21728:	pop	{r4, r5, r6, sl, fp, pc}
   2172c:	push	{fp, lr}
   21730:	mov	fp, sp
   21734:	sub	sp, sp, #16
   21738:	str	r0, [fp, #-4]
   2173c:	str	r3, [sp, #4]
   21740:	str	r2, [sp]
   21744:	ldr	r0, [sp]
   21748:	ldr	r1, [sp, #4]
   2174c:	bl	27c34 <main@@Base+0x112e8>
   21750:	ldr	r2, [fp, #-4]
   21754:	str	r1, [r2, #4]
   21758:	str	r0, [r2]
   2175c:	mov	sp, fp
   21760:	pop	{fp, pc}
   21764:	nop	{0}
   21768:	push	{r4, r5, r6, sl, fp, lr}
   2176c:	add	fp, sp, #16
   21770:	sub	sp, sp, #88	; 0x58
   21774:	ldr	ip, [fp, #8]
   21778:	vldr	d16, [pc, #464]	; 21950 <main@@Base+0xb004>
   2177c:	str	r0, [fp, #-24]	; 0xffffffe8
   21780:	str	r1, [fp, #-28]	; 0xffffffe4
   21784:	str	r2, [fp, #-32]	; 0xffffffe0
   21788:	str	r3, [fp, #-36]	; 0xffffffdc
   2178c:	vstr	d16, [sp, #48]	; 0x30
   21790:	ldr	r0, [fp, #8]
   21794:	vstr	d16, [r0]
   21798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2179c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   217a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   217a4:	str	ip, [sp, #28]
   217a8:	bl	230c8 <main@@Base+0xc77c>
   217ac:	str	r0, [fp, #-28]	; 0xffffffe4
   217b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   217b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   217b8:	cmp	r0, r1
   217bc:	bne	217cc <main@@Base+0xae80>
   217c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   217c4:	str	r0, [fp, #-20]	; 0xffffffec
   217c8:	b	21940 <main@@Base+0xaff4>
   217cc:	b	217d0 <main@@Base+0xae84>
   217d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   217d4:	str	r0, [fp, #-40]	; 0xffffffd8
   217d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   217dc:	ldr	r0, [r0]
   217e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   217e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   217e8:	str	r2, [fp, #-44]	; 0xffffffd4
   217ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   217f0:	str	r0, [sp, #24]
   217f4:	mov	r0, r1
   217f8:	mov	r1, r2
   217fc:	mov	r2, r3
   21800:	add	r3, sp, #36	; 0x24
   21804:	add	ip, sp, #40	; 0x28
   21808:	str	ip, [sp]
   2180c:	add	ip, sp, #32
   21810:	str	ip, [sp, #4]
   21814:	ldr	ip, [sp, #24]
   21818:	blx	ip
   2181c:	str	r0, [fp, #-28]	; 0xffffffe4
   21820:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21824:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21828:	cmp	r0, r1
   2182c:	bne	2183c <main@@Base+0xaef0>
   21830:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21834:	str	r0, [fp, #-20]	; 0xffffffec
   21838:	b	21940 <main@@Base+0xaff4>
   2183c:	b	21840 <main@@Base+0xaef4>
   21840:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21844:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21848:	cmp	r0, r1
   2184c:	movw	r0, #0
   21850:	str	r0, [sp, #20]
   21854:	bne	2187c <main@@Base+0xaf30>
   21858:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2185c:	add	r1, r0, #4
   21860:	str	r1, [fp, #-40]	; 0xffffffd8
   21864:	ldr	r0, [r0, #4]
   21868:	movw	r1, #0
   2186c:	cmp	r0, r1
   21870:	movw	r0, #0
   21874:	movne	r0, #1
   21878:	str	r0, [sp, #20]
   2187c:	ldr	r0, [sp, #20]
   21880:	tst	r0, #1
   21884:	bne	217d8 <main@@Base+0xae8c>
   21888:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2188c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21890:	cmp	r0, r1
   21894:	bne	218b4 <main@@Base+0xaf68>
   21898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2189c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   218a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   218a4:	movw	r3, #23
   218a8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   218ac:	str	r0, [fp, #-20]	; 0xffffffec
   218b0:	b	21940 <main@@Base+0xaff4>
   218b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   218b8:	mov	r1, r0
   218bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   218c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   218c4:	ldr	ip, [sp, #36]	; 0x24
   218c8:	ldr	lr, [sp, #40]	; 0x28
   218cc:	ldr	r4, [sp, #44]	; 0x2c
   218d0:	mov	r5, sp
   218d4:	add	r6, sp, #48	; 0x30
   218d8:	str	r6, [r5, #8]
   218dc:	str	r4, [r5, #4]
   218e0:	str	lr, [r5]
   218e4:	str	r0, [sp, #16]
   218e8:	mov	r0, r2
   218ec:	str	r1, [sp, #12]
   218f0:	mov	r1, r3
   218f4:	ldr	r2, [sp, #16]
   218f8:	mov	r3, ip
   218fc:	bl	27c50 <main@@Base+0x11304>
   21900:	ldr	r1, [sp, #12]
   21904:	cmp	r1, r0
   21908:	bne	21918 <main@@Base+0xafcc>
   2190c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21910:	str	r0, [fp, #-20]	; 0xffffffec
   21914:	b	21940 <main@@Base+0xaff4>
   21918:	vldr	d16, [sp, #48]	; 0x30
   2191c:	ldr	r0, [fp, #8]
   21920:	vldr	d17, [r0]
   21924:	vadd.f64	d16, d17, d16
   21928:	vstr	d16, [r0]
   2192c:	ldr	r0, [sp, #32]
   21930:	cmp	r0, #0
   21934:	bne	217d0 <main@@Base+0xae84>
   21938:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2193c:	str	r0, [fp, #-20]	; 0xffffffec
   21940:	ldr	r0, [fp, #-20]	; 0xffffffec
   21944:	sub	sp, fp, #16
   21948:	pop	{r4, r5, r6, sl, fp, pc}
   2194c:	nop	{0}
	...
   21958:	push	{fp, lr}
   2195c:	mov	fp, sp
   21960:	sub	sp, sp, #16
   21964:	str	r0, [fp, #-4]
   21968:	vstr	d0, [sp]
   2196c:	vldr	d0, [sp]
   21970:	bl	27cd4 <main@@Base+0x11388>
   21974:	ldr	r0, [fp, #-4]
   21978:	vstr	d0, [r0]
   2197c:	mov	sp, fp
   21980:	pop	{fp, pc}
   21984:	push	{fp, lr}
   21988:	mov	fp, sp
   2198c:	sub	sp, sp, #24
   21990:	str	r0, [fp, #-8]
   21994:	str	r1, [sp, #12]
   21998:	str	r2, [sp, #8]
   2199c:	str	r3, [sp, #4]
   219a0:	ldr	r0, [fp, #-8]
   219a4:	ldr	r1, [sp, #12]
   219a8:	ldr	r2, [sp, #8]
   219ac:	bl	21ae8 <main@@Base+0xb19c>
   219b0:	str	r0, [sp, #12]
   219b4:	ldr	r0, [sp, #12]
   219b8:	ldr	r1, [sp, #8]
   219bc:	cmp	r0, r1
   219c0:	bne	219dc <main@@Base+0xb090>
   219c4:	ldr	r0, [sp, #4]
   219c8:	movw	r1, #0
   219cc:	str	r1, [r0]
   219d0:	ldr	r0, [sp, #12]
   219d4:	str	r0, [fp, #-4]
   219d8:	b	21adc <main@@Base+0xb190>
   219dc:	ldr	r0, [sp, #12]
   219e0:	ldrb	r0, [r0]
   219e4:	cmp	r0, #44	; 0x2c
   219e8:	beq	21a40 <main@@Base+0xb0f4>
   219ec:	ldr	r0, [sp, #4]
   219f0:	movw	r1, #0
   219f4:	str	r1, [r0]
   219f8:	ldr	r0, [sp, #12]
   219fc:	ldrb	r0, [r0]
   21a00:	cmp	r0, #125	; 0x7d
   21a04:	beq	21a24 <main@@Base+0xb0d8>
   21a08:	ldr	r0, [fp, #-8]
   21a0c:	ldr	r1, [sp, #12]
   21a10:	ldr	r2, [sp, #8]
   21a14:	movw	r3, #10
   21a18:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   21a1c:	str	r0, [fp, #-4]
   21a20:	b	21adc <main@@Base+0xb190>
   21a24:	ldr	r0, [fp, #-8]
   21a28:	ldr	r1, [sp, #12]
   21a2c:	add	r1, r1, #1
   21a30:	ldr	r2, [sp, #8]
   21a34:	bl	21ae8 <main@@Base+0xb19c>
   21a38:	str	r0, [fp, #-4]
   21a3c:	b	21adc <main@@Base+0xb190>
   21a40:	ldr	r0, [fp, #-8]
   21a44:	ldr	r1, [sp, #12]
   21a48:	add	r1, r1, #1
   21a4c:	ldr	r2, [sp, #8]
   21a50:	bl	21ae8 <main@@Base+0xb19c>
   21a54:	str	r0, [sp, #12]
   21a58:	ldr	r0, [sp, #12]
   21a5c:	ldr	r1, [sp, #8]
   21a60:	cmp	r0, r1
   21a64:	bne	21a90 <main@@Base+0xb144>
   21a68:	ldr	r0, [sp, #4]
   21a6c:	movw	r1, #0
   21a70:	str	r1, [r0]
   21a74:	ldr	r0, [fp, #-8]
   21a78:	ldr	r1, [sp, #12]
   21a7c:	ldr	r2, [sp, #8]
   21a80:	movw	r3, #10
   21a84:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   21a88:	str	r0, [fp, #-4]
   21a8c:	b	21adc <main@@Base+0xb190>
   21a90:	ldr	r0, [sp, #12]
   21a94:	ldrb	r0, [r0]
   21a98:	cmp	r0, #125	; 0x7d
   21a9c:	bne	21ac8 <main@@Base+0xb17c>
   21aa0:	ldr	r0, [sp, #4]
   21aa4:	movw	r1, #0
   21aa8:	str	r1, [r0]
   21aac:	ldr	r0, [fp, #-8]
   21ab0:	ldr	r1, [sp, #12]
   21ab4:	add	r1, r1, #1
   21ab8:	ldr	r2, [sp, #8]
   21abc:	bl	21ae8 <main@@Base+0xb19c>
   21ac0:	str	r0, [fp, #-4]
   21ac4:	b	21adc <main@@Base+0xb190>
   21ac8:	ldr	r0, [sp, #4]
   21acc:	movw	r1, #1
   21ad0:	str	r1, [r0]
   21ad4:	ldr	r0, [sp, #12]
   21ad8:	str	r0, [fp, #-4]
   21adc:	ldr	r0, [fp, #-4]
   21ae0:	mov	sp, fp
   21ae4:	pop	{fp, pc}
   21ae8:	push	{fp, lr}
   21aec:	mov	fp, sp
   21af0:	sub	sp, sp, #16
   21af4:	str	r0, [sp, #8]
   21af8:	str	r1, [sp, #4]
   21afc:	str	r2, [sp]
   21b00:	ldr	r0, [sp]
   21b04:	ldr	r1, [sp, #4]
   21b08:	sub	r0, r0, r1
   21b0c:	cmp	r0, #1
   21b10:	ble	21b64 <main@@Base+0xb218>
   21b14:	ldr	r0, [sp, #4]
   21b18:	ldrb	r0, [r0]
   21b1c:	cmp	r0, #32
   21b20:	ble	21b30 <main@@Base+0xb1e4>
   21b24:	ldr	r0, [sp, #4]
   21b28:	str	r0, [fp, #-4]
   21b2c:	b	21b78 <main@@Base+0xb22c>
   21b30:	ldr	r0, [sp, #4]
   21b34:	ldrb	r0, [r0]
   21b38:	cmp	r0, #32
   21b3c:	bne	21b60 <main@@Base+0xb214>
   21b40:	ldr	r0, [sp, #4]
   21b44:	ldrb	r0, [r0, #1]
   21b48:	cmp	r0, #32
   21b4c:	ble	21b60 <main@@Base+0xb214>
   21b50:	ldr	r0, [sp, #4]
   21b54:	add	r0, r0, #1
   21b58:	str	r0, [fp, #-4]
   21b5c:	b	21b78 <main@@Base+0xb22c>
   21b60:	b	21b64 <main@@Base+0xb218>
   21b64:	ldr	r0, [sp, #8]
   21b68:	ldr	r1, [sp, #4]
   21b6c:	ldr	r2, [sp]
   21b70:	bl	34058 <flatcc_json_parser_space_ext@@Base>
   21b74:	str	r0, [fp, #-4]
   21b78:	ldr	r0, [fp, #-4]
   21b7c:	mov	sp, fp
   21b80:	pop	{fp, pc}
   21b84:	sub	sp, sp, #24
   21b88:	str	r0, [sp, #20]
   21b8c:	str	r1, [sp, #16]
   21b90:	mov	r0, #0
   21b94:	str	r0, [sp, #12]
   21b98:	str	r0, [sp, #8]
   21b9c:	ldr	r0, [sp, #16]
   21ba0:	ldr	r1, [sp, #20]
   21ba4:	sub	r0, r0, r1
   21ba8:	str	r0, [sp, #4]
   21bac:	ldr	r0, [sp, #4]
   21bb0:	cmp	r0, #8
   21bb4:	bls	21bc0 <main@@Base+0xb274>
   21bb8:	movw	r0, #8
   21bbc:	str	r0, [sp, #4]
   21bc0:	ldr	r0, [sp, #4]
   21bc4:	cmp	r0, #8
   21bc8:	str	r0, [sp]
   21bcc:	bhi	21ce8 <main@@Base+0xb39c>
   21bd0:	add	r0, pc, #8
   21bd4:	ldr	r1, [sp]
   21bd8:	ldr	r2, [r0, r1, lsl #2]
   21bdc:	add	pc, r0, r2
   21be0:	andeq	r0, r0, r4, lsl #2
   21be4:	andeq	r0, r0, r8, ror #1
   21be8:	andeq	r0, r0, ip, asr #1
   21bec:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   21bf0:	muleq	r0, r4, r0
   21bf4:	andeq	r0, r0, r8, ror r0
   21bf8:	andeq	r0, r0, ip, asr r0
   21bfc:	andeq	r0, r0, r0, asr #32
   21c00:	andeq	r0, r0, r4, lsr #32
   21c04:	ldr	r0, [sp, #20]
   21c08:	ldrb	r0, [r0, #7]
   21c0c:	ldr	r1, [sp, #8]
   21c10:	ldr	r2, [sp, #12]
   21c14:	orr	r0, r1, r0
   21c18:	str	r2, [sp, #12]
   21c1c:	str	r0, [sp, #8]
   21c20:	ldr	r0, [sp, #20]
   21c24:	ldrb	r0, [r0, #6]
   21c28:	ldr	r1, [sp, #8]
   21c2c:	ldr	r2, [sp, #12]
   21c30:	orr	r0, r1, r0, lsl #8
   21c34:	str	r2, [sp, #12]
   21c38:	str	r0, [sp, #8]
   21c3c:	ldr	r0, [sp, #20]
   21c40:	ldrb	r0, [r0, #5]
   21c44:	ldr	r1, [sp, #8]
   21c48:	ldr	r2, [sp, #12]
   21c4c:	orr	r0, r1, r0, lsl #16
   21c50:	str	r2, [sp, #12]
   21c54:	str	r0, [sp, #8]
   21c58:	ldr	r0, [sp, #20]
   21c5c:	ldrb	r0, [r0, #4]
   21c60:	ldr	r1, [sp, #8]
   21c64:	ldr	r2, [sp, #12]
   21c68:	orr	r0, r1, r0, lsl #24
   21c6c:	str	r2, [sp, #12]
   21c70:	str	r0, [sp, #8]
   21c74:	ldr	r0, [sp, #20]
   21c78:	ldrb	r0, [r0, #3]
   21c7c:	ldr	r1, [sp, #8]
   21c80:	ldr	r2, [sp, #12]
   21c84:	orr	r0, r2, r0
   21c88:	str	r1, [sp, #8]
   21c8c:	str	r0, [sp, #12]
   21c90:	ldr	r0, [sp, #20]
   21c94:	ldrb	r0, [r0, #2]
   21c98:	ldr	r1, [sp, #8]
   21c9c:	ldr	r2, [sp, #12]
   21ca0:	orr	r0, r2, r0, lsl #8
   21ca4:	str	r1, [sp, #8]
   21ca8:	str	r0, [sp, #12]
   21cac:	ldr	r0, [sp, #20]
   21cb0:	ldrb	r0, [r0, #1]
   21cb4:	ldr	r1, [sp, #8]
   21cb8:	ldr	r2, [sp, #12]
   21cbc:	orr	r0, r2, r0, lsl #16
   21cc0:	str	r1, [sp, #8]
   21cc4:	str	r0, [sp, #12]
   21cc8:	ldr	r0, [sp, #20]
   21ccc:	ldrb	r0, [r0]
   21cd0:	ldr	r1, [sp, #8]
   21cd4:	ldr	r2, [sp, #12]
   21cd8:	orr	r0, r2, r0, lsl #24
   21cdc:	str	r1, [sp, #8]
   21ce0:	str	r0, [sp, #12]
   21ce4:	b	21ce8 <main@@Base+0xb39c>
   21ce8:	ldr	r0, [sp, #8]
   21cec:	ldr	r1, [sp, #12]
   21cf0:	add	sp, sp, #24
   21cf4:	bx	lr
   21cf8:	sub	sp, sp, #24
   21cfc:	str	r0, [sp, #16]
   21d00:	str	r1, [sp, #12]
   21d04:	str	r2, [sp, #8]
   21d08:	str	r3, [sp, #4]
   21d0c:	ldr	r0, [sp, #12]
   21d10:	str	r0, [sp]
   21d14:	ldr	r0, [sp, #8]
   21d18:	ldr	r1, [sp, #12]
   21d1c:	sub	r0, r0, r1
   21d20:	ldr	r1, [sp, #4]
   21d24:	cmp	r0, r1
   21d28:	bgt	21d38 <main@@Base+0xb3ec>
   21d2c:	ldr	r0, [sp]
   21d30:	str	r0, [sp, #20]
   21d34:	b	21d70 <main@@Base+0xb424>
   21d38:	ldr	r0, [sp, #12]
   21d3c:	ldr	r1, [sp, #4]
   21d40:	add	r0, r0, r1
   21d44:	ldrb	r0, [r0]
   21d48:	cmp	r0, #46	; 0x2e
   21d4c:	beq	21d5c <main@@Base+0xb410>
   21d50:	ldr	r0, [sp]
   21d54:	str	r0, [sp, #20]
   21d58:	b	21d70 <main@@Base+0xb424>
   21d5c:	ldr	r0, [sp, #12]
   21d60:	ldr	r1, [sp, #4]
   21d64:	add	r0, r0, r1
   21d68:	add	r0, r0, #1
   21d6c:	str	r0, [sp, #20]
   21d70:	ldr	r0, [sp, #20]
   21d74:	add	sp, sp, #24
   21d78:	bx	lr
   21d7c:	push	{fp, lr}
   21d80:	mov	fp, sp
   21d84:	sub	sp, sp, #64	; 0x40
   21d88:	ldr	ip, [fp, #12]
   21d8c:	ldr	lr, [fp, #8]
   21d90:	str	r0, [fp, #-8]
   21d94:	str	r1, [fp, #-12]
   21d98:	str	r2, [fp, #-16]
   21d9c:	str	r3, [fp, #-20]	; 0xffffffec
   21da0:	ldr	r0, [fp, #-12]
   21da4:	str	r0, [fp, #-24]	; 0xffffffe8
   21da8:	ldr	r0, [fp, #-12]
   21dac:	ldr	r1, [fp, #-16]
   21db0:	str	ip, [sp, #20]
   21db4:	str	lr, [sp, #16]
   21db8:	bl	1c960 <main@@Base+0x6014>
   21dbc:	str	r1, [sp, #28]
   21dc0:	str	r0, [sp, #24]
   21dc4:	ldr	r0, [sp, #24]
   21dc8:	ldr	r1, [sp, #28]
   21dcc:	movw	r2, #20577	; 0x5061
   21dd0:	movt	r2, #18798	; 0x496e
   21dd4:	eor	r1, r1, r2
   21dd8:	movw	r2, #28276	; 0x6e74
   21ddc:	movt	r2, #29285	; 0x7265
   21de0:	eor	r0, r0, r2
   21de4:	orr	r0, r0, r1
   21de8:	cmp	r0, #0
   21dec:	bne	21f0c <main@@Base+0xb5c0>
   21df0:	b	21df4 <main@@Base+0xb4a8>
   21df4:	ldr	r0, [fp, #-12]
   21df8:	add	r0, r0, #8
   21dfc:	str	r0, [fp, #-12]
   21e00:	ldr	r0, [fp, #-12]
   21e04:	ldr	r1, [fp, #-16]
   21e08:	bl	1c960 <main@@Base+0x6014>
   21e0c:	str	r1, [sp, #28]
   21e10:	str	r0, [sp, #24]
   21e14:	ldr	r0, [sp, #24]
   21e18:	ldr	r1, [sp, #28]
   21e1c:	movw	r2, #28005	; 0x6d65
   21e20:	movt	r2, #20065	; 0x4e61
   21e24:	eor	r1, r1, r2
   21e28:	movw	r2, #24931	; 0x6163
   21e2c:	movt	r2, #29552	; 0x7370
   21e30:	eor	r0, r0, r2
   21e34:	orr	r0, r0, r1
   21e38:	cmp	r0, #0
   21e3c:	bne	21efc <main@@Base+0xb5b0>
   21e40:	b	21e44 <main@@Base+0xb4f8>
   21e44:	ldr	r0, [fp, #-12]
   21e48:	add	r0, r0, #8
   21e4c:	str	r0, [fp, #-12]
   21e50:	ldr	r0, [fp, #-12]
   21e54:	ldr	r1, [fp, #-16]
   21e58:	bl	1c960 <main@@Base+0x6014>
   21e5c:	str	r1, [sp, #28]
   21e60:	str	r0, [sp, #24]
   21e64:	ldrb	r0, [sp, #31]
   21e68:	mov	r1, #1694498816	; 0x65000000
   21e6c:	teq	r1, r0, lsl #24
   21e70:	bne	21eec <main@@Base+0xb5a0>
   21e74:	b	21e78 <main@@Base+0xb52c>
   21e78:	ldr	r0, [fp, #-8]
   21e7c:	ldr	r1, [fp, #-12]
   21e80:	str	r1, [fp, #-28]	; 0xffffffe4
   21e84:	ldr	r2, [fp, #-16]
   21e88:	ldr	r3, [fp, #12]
   21e8c:	movw	ip, #1
   21e90:	str	r3, [sp, #12]
   21e94:	mov	r3, ip
   21e98:	ldr	ip, [sp, #12]
   21e9c:	str	ip, [sp]
   21ea0:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   21ea4:	str	r0, [fp, #-12]
   21ea8:	ldr	r0, [fp, #-12]
   21eac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21eb0:	cmp	r0, r1
   21eb4:	beq	21edc <main@@Base+0xb590>
   21eb8:	ldr	r0, [fp, #8]
   21ebc:	mov	r1, #0
   21ec0:	str	r1, [r0, #4]
   21ec4:	mov	r1, #1
   21ec8:	str	r1, [r0]
   21ecc:	ldr	r0, [fp, #-20]	; 0xffffffec
   21ed0:	movw	r1, #0
   21ed4:	str	r1, [r0]
   21ed8:	b	21ee8 <main@@Base+0xb59c>
   21edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ee0:	str	r0, [fp, #-4]
   21ee4:	b	21fac <main@@Base+0xb660>
   21ee8:	b	21ef8 <main@@Base+0xb5ac>
   21eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ef0:	str	r0, [fp, #-4]
   21ef4:	b	21fac <main@@Base+0xb660>
   21ef8:	b	21f08 <main@@Base+0xb5bc>
   21efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f00:	str	r0, [fp, #-4]
   21f04:	b	21fac <main@@Base+0xb660>
   21f08:	b	21fa4 <main@@Base+0xb658>
   21f0c:	ldr	r0, [sp, #28]
   21f10:	movw	r1, #20037	; 0x4e45
   21f14:	movt	r1, #20047	; 0x4e4f
   21f18:	teq	r0, r1
   21f1c:	bne	21f94 <main@@Base+0xb648>
   21f20:	b	21f24 <main@@Base+0xb5d8>
   21f24:	ldr	r0, [fp, #-8]
   21f28:	ldr	r1, [fp, #-12]
   21f2c:	str	r1, [fp, #-28]	; 0xffffffe4
   21f30:	ldr	r2, [fp, #-16]
   21f34:	ldr	r3, [fp, #12]
   21f38:	movw	ip, #4
   21f3c:	str	r3, [sp, #8]
   21f40:	mov	r3, ip
   21f44:	ldr	ip, [sp, #8]
   21f48:	str	ip, [sp]
   21f4c:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   21f50:	str	r0, [fp, #-12]
   21f54:	ldr	r0, [fp, #-12]
   21f58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21f5c:	cmp	r0, r1
   21f60:	beq	21f84 <main@@Base+0xb638>
   21f64:	ldr	r0, [fp, #8]
   21f68:	mov	r1, #0
   21f6c:	str	r1, [r0, #4]
   21f70:	str	r1, [r0]
   21f74:	ldr	r0, [fp, #-20]	; 0xffffffec
   21f78:	movw	r1, #0
   21f7c:	str	r1, [r0]
   21f80:	b	21f90 <main@@Base+0xb644>
   21f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f88:	str	r0, [fp, #-4]
   21f8c:	b	21fac <main@@Base+0xb660>
   21f90:	b	21fa0 <main@@Base+0xb654>
   21f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f98:	str	r0, [fp, #-4]
   21f9c:	b	21fac <main@@Base+0xb660>
   21fa0:	b	21fa4 <main@@Base+0xb658>
   21fa4:	ldr	r0, [fp, #-12]
   21fa8:	str	r0, [fp, #-4]
   21fac:	ldr	r0, [fp, #-4]
   21fb0:	mov	sp, fp
   21fb4:	pop	{fp, pc}
   21fb8:	push	{fp, lr}
   21fbc:	mov	fp, sp
   21fc0:	sub	sp, sp, #64	; 0x40
   21fc4:	ldr	ip, [fp, #12]
   21fc8:	ldr	lr, [fp, #8]
   21fcc:	str	r0, [fp, #-8]
   21fd0:	str	r1, [fp, #-12]
   21fd4:	str	r2, [fp, #-16]
   21fd8:	str	r3, [fp, #-20]	; 0xffffffec
   21fdc:	ldr	r0, [fp, #-12]
   21fe0:	str	r0, [fp, #-24]	; 0xffffffe8
   21fe4:	ldr	r0, [fp, #-12]
   21fe8:	ldr	r1, [fp, #-16]
   21fec:	str	ip, [sp, #20]
   21ff0:	str	lr, [sp, #16]
   21ff4:	bl	1c960 <main@@Base+0x6014>
   21ff8:	str	r1, [sp, #28]
   21ffc:	str	r0, [sp, #24]
   22000:	ldr	r0, [sp, #28]
   22004:	movw	r1, #30769	; 0x7831
   22008:	movt	r1, #26725	; 0x6865
   2200c:	cmp	r0, r1
   22010:	bhi	220b4 <main@@Base+0xb768>
   22014:	b	22018 <main@@Base+0xb6cc>
   22018:	ldr	r0, [sp, #28]
   2201c:	movw	r1, #30769	; 0x7831
   22020:	movt	r1, #26725	; 0x6865
   22024:	teq	r0, r1
   22028:	bne	220a4 <main@@Base+0xb758>
   2202c:	b	22030 <main@@Base+0xb6e4>
   22030:	ldr	r0, [fp, #-8]
   22034:	ldr	r1, [fp, #-12]
   22038:	str	r1, [fp, #-28]	; 0xffffffe4
   2203c:	ldr	r2, [fp, #-16]
   22040:	ldr	r3, [fp, #12]
   22044:	movw	ip, #4
   22048:	str	r3, [sp, #12]
   2204c:	mov	r3, ip
   22050:	ldr	ip, [sp, #12]
   22054:	str	ip, [sp]
   22058:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   2205c:	str	r0, [fp, #-12]
   22060:	ldr	r0, [fp, #-12]
   22064:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22068:	cmp	r0, r1
   2206c:	beq	22094 <main@@Base+0xb748>
   22070:	ldr	r0, [fp, #8]
   22074:	mov	r1, #0
   22078:	str	r1, [r0, #4]
   2207c:	mov	r1, #3
   22080:	str	r1, [r0]
   22084:	ldr	r0, [fp, #-20]	; 0xffffffec
   22088:	movw	r1, #0
   2208c:	str	r1, [r0]
   22090:	b	220a0 <main@@Base+0xb754>
   22094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22098:	str	r0, [fp, #-4]
   2209c:	b	22204 <main@@Base+0xb8b8>
   220a0:	b	220b0 <main@@Base+0xb764>
   220a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   220a8:	str	r0, [fp, #-4]
   220ac:	b	22204 <main@@Base+0xb8b8>
   220b0:	b	221fc <main@@Base+0xb8b0>
   220b4:	ldrh	r0, [sp, #26]
   220b8:	ldr	r1, [sp, #28]
   220bc:	movw	r2, #26725	; 0x6865
   220c0:	eor	r2, r2, r1, lsr #16
   220c4:	orr	r0, r0, r1, lsl #16
   220c8:	movw	r1, #25959	; 0x6567
   220cc:	movt	r1, #30830	; 0x786e
   220d0:	eor	r0, r0, r1
   220d4:	orr	r0, r0, r2
   220d8:	cmp	r0, #0
   220dc:	bne	22158 <main@@Base+0xb80c>
   220e0:	b	220e4 <main@@Base+0xb798>
   220e4:	ldr	r0, [fp, #-8]
   220e8:	ldr	r1, [fp, #-12]
   220ec:	str	r1, [fp, #-28]	; 0xffffffe4
   220f0:	ldr	r2, [fp, #-16]
   220f4:	ldr	r3, [fp, #12]
   220f8:	movw	ip, #6
   220fc:	str	r3, [sp, #8]
   22100:	mov	r3, ip
   22104:	ldr	ip, [sp, #8]
   22108:	str	ip, [sp]
   2210c:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   22110:	str	r0, [fp, #-12]
   22114:	ldr	r0, [fp, #-12]
   22118:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2211c:	cmp	r0, r1
   22120:	beq	22148 <main@@Base+0xb7fc>
   22124:	ldr	r0, [fp, #8]
   22128:	mvn	r1, #0
   2212c:	str	r1, [r0, #4]
   22130:	mvn	r1, #1
   22134:	str	r1, [r0]
   22138:	ldr	r0, [fp, #-20]	; 0xffffffec
   2213c:	movw	r1, #1
   22140:	str	r1, [r0]
   22144:	b	22154 <main@@Base+0xb808>
   22148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2214c:	str	r0, [fp, #-4]
   22150:	b	22204 <main@@Base+0xb8b8>
   22154:	b	221f8 <main@@Base+0xb8ac>
   22158:	ldr	r0, [sp, #28]
   2215c:	movw	r1, #30770	; 0x7832
   22160:	movt	r1, #26725	; 0x6865
   22164:	teq	r0, r1
   22168:	bne	221e8 <main@@Base+0xb89c>
   2216c:	b	22170 <main@@Base+0xb824>
   22170:	ldr	r0, [fp, #-8]
   22174:	ldr	r1, [fp, #-12]
   22178:	str	r1, [fp, #-28]	; 0xffffffe4
   2217c:	ldr	r2, [fp, #-16]
   22180:	ldr	r3, [fp, #12]
   22184:	movw	ip, #4
   22188:	str	r3, [sp, #4]
   2218c:	mov	r3, ip
   22190:	ldr	ip, [sp, #4]
   22194:	str	ip, [sp]
   22198:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   2219c:	str	r0, [fp, #-12]
   221a0:	ldr	r0, [fp, #-12]
   221a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   221a8:	cmp	r0, r1
   221ac:	beq	221d8 <main@@Base+0xb88c>
   221b0:	ldr	r0, [fp, #8]
   221b4:	mov	r1, #0
   221b8:	str	r1, [r0, #4]
   221bc:	movw	r1, #48815	; 0xbeaf
   221c0:	movt	r1, #32431	; 0x7eaf
   221c4:	str	r1, [r0]
   221c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   221cc:	movw	r1, #0
   221d0:	str	r1, [r0]
   221d4:	b	221e4 <main@@Base+0xb898>
   221d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   221dc:	str	r0, [fp, #-4]
   221e0:	b	22204 <main@@Base+0xb8b8>
   221e4:	b	221f4 <main@@Base+0xb8a8>
   221e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   221ec:	str	r0, [fp, #-4]
   221f0:	b	22204 <main@@Base+0xb8b8>
   221f4:	b	221f8 <main@@Base+0xb8ac>
   221f8:	b	221fc <main@@Base+0xb8b0>
   221fc:	ldr	r0, [fp, #-12]
   22200:	str	r0, [fp, #-4]
   22204:	ldr	r0, [fp, #-4]
   22208:	mov	sp, fp
   2220c:	pop	{fp, pc}
   22210:	push	{fp, lr}
   22214:	mov	fp, sp
   22218:	sub	sp, sp, #72	; 0x48
   2221c:	ldr	ip, [fp, #12]
   22220:	ldr	lr, [fp, #8]
   22224:	str	r0, [fp, #-8]
   22228:	str	r1, [fp, #-12]
   2222c:	str	r2, [fp, #-16]
   22230:	str	r3, [fp, #-20]	; 0xffffffec
   22234:	ldr	r0, [fp, #-12]
   22238:	str	r0, [fp, #-24]	; 0xffffffe8
   2223c:	ldr	r0, [fp, #-12]
   22240:	ldr	r1, [fp, #-16]
   22244:	str	ip, [sp, #28]
   22248:	str	lr, [sp, #24]
   2224c:	bl	1c960 <main@@Base+0x6014>
   22250:	str	r1, [sp, #36]	; 0x24
   22254:	str	r0, [sp, #32]
   22258:	ldr	r0, [sp, #36]	; 0x24
   2225c:	movw	r1, #29745	; 0x7431
   22260:	movt	r1, #26990	; 0x696e
   22264:	cmp	r0, r1
   22268:	bhi	2230c <main@@Base+0xb9c0>
   2226c:	b	22270 <main@@Base+0xb924>
   22270:	ldr	r0, [sp, #36]	; 0x24
   22274:	movw	r1, #29745	; 0x7431
   22278:	movt	r1, #26990	; 0x696e
   2227c:	teq	r0, r1
   22280:	bne	222fc <main@@Base+0xb9b0>
   22284:	b	22288 <main@@Base+0xb93c>
   22288:	ldr	r0, [fp, #-8]
   2228c:	ldr	r1, [fp, #-12]
   22290:	str	r1, [fp, #-28]	; 0xffffffe4
   22294:	ldr	r2, [fp, #-16]
   22298:	ldr	r3, [fp, #12]
   2229c:	movw	ip, #4
   222a0:	str	r3, [sp, #20]
   222a4:	mov	r3, ip
   222a8:	ldr	ip, [sp, #20]
   222ac:	str	ip, [sp]
   222b0:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   222b4:	str	r0, [fp, #-12]
   222b8:	ldr	r0, [fp, #-12]
   222bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   222c0:	cmp	r0, r1
   222c4:	beq	222ec <main@@Base+0xb9a0>
   222c8:	ldr	r0, [fp, #8]
   222cc:	mov	r1, #0
   222d0:	str	r1, [r0, #4]
   222d4:	mov	r1, #2
   222d8:	str	r1, [r0]
   222dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   222e0:	movw	r1, #0
   222e4:	str	r1, [r0]
   222e8:	b	222f8 <main@@Base+0xb9ac>
   222ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   222f0:	str	r0, [fp, #-4]
   222f4:	b	2253c <main@@Base+0xbbf0>
   222f8:	b	22308 <main@@Base+0xb9bc>
   222fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22300:	str	r0, [fp, #-4]
   22304:	b	2253c <main@@Base+0xbbf0>
   22308:	b	22534 <main@@Base+0xbbe8>
   2230c:	ldr	r0, [sp, #32]
   22310:	ldr	r1, [sp, #36]	; 0x24
   22314:	movw	r2, #65535	; 0xffff
   22318:	movt	r2, #25958	; 0x6566
   2231c:	subs	r0, r2, r0
   22320:	movw	r2, #29806	; 0x746e
   22324:	movt	r2, #26990	; 0x696e
   22328:	sbcs	r1, r2, r1
   2232c:	bcc	223d0 <main@@Base+0xba84>
   22330:	b	22334 <main@@Base+0xb9e8>
   22334:	ldr	r0, [sp, #36]	; 0x24
   22338:	movw	r1, #29746	; 0x7432
   2233c:	movt	r1, #26990	; 0x696e
   22340:	teq	r0, r1
   22344:	bne	223c0 <main@@Base+0xba74>
   22348:	b	2234c <main@@Base+0xba00>
   2234c:	ldr	r0, [fp, #-8]
   22350:	ldr	r1, [fp, #-12]
   22354:	str	r1, [fp, #-28]	; 0xffffffe4
   22358:	ldr	r2, [fp, #-16]
   2235c:	ldr	r3, [fp, #12]
   22360:	movw	ip, #4
   22364:	str	r3, [sp, #16]
   22368:	mov	r3, ip
   2236c:	ldr	ip, [sp, #16]
   22370:	str	ip, [sp]
   22374:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   22378:	str	r0, [fp, #-12]
   2237c:	ldr	r0, [fp, #-12]
   22380:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22384:	cmp	r0, r1
   22388:	beq	223b0 <main@@Base+0xba64>
   2238c:	ldr	r0, [fp, #8]
   22390:	mov	r1, #0
   22394:	str	r1, [r0, #4]
   22398:	mov	r1, #42	; 0x2a
   2239c:	str	r1, [r0]
   223a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   223a4:	movw	r1, #0
   223a8:	str	r1, [r0]
   223ac:	b	223bc <main@@Base+0xba70>
   223b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   223b4:	str	r0, [fp, #-4]
   223b8:	b	2253c <main@@Base+0xbbf0>
   223bc:	b	223cc <main@@Base+0xba80>
   223c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   223c4:	str	r0, [fp, #-4]
   223c8:	b	2253c <main@@Base+0xbbf0>
   223cc:	b	22530 <main@@Base+0xbbe4>
   223d0:	ldr	r0, [sp, #32]
   223d4:	ldr	r1, [sp, #36]	; 0x24
   223d8:	movw	r2, #28276	; 0x6e74
   223dc:	movt	r2, #105	; 0x69
   223e0:	eor	r2, r2, r1, lsr #8
   223e4:	lsr	r0, r0, #8
   223e8:	orr	r0, r0, r1, lsl #24
   223ec:	movw	r1, #26418	; 0x6732
   223f0:	movt	r1, #28261	; 0x6e65
   223f4:	eor	r0, r0, r1
   223f8:	orr	r0, r0, r2
   223fc:	cmp	r0, #0
   22400:	bne	22478 <main@@Base+0xbb2c>
   22404:	b	22408 <main@@Base+0xbabc>
   22408:	ldr	r0, [fp, #-8]
   2240c:	ldr	r1, [fp, #-12]
   22410:	str	r1, [fp, #-28]	; 0xffffffe4
   22414:	ldr	r2, [fp, #-16]
   22418:	ldr	r3, [fp, #12]
   2241c:	movw	ip, #7
   22420:	str	r3, [sp, #12]
   22424:	mov	r3, ip
   22428:	ldr	ip, [sp, #12]
   2242c:	str	ip, [sp]
   22430:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   22434:	str	r0, [fp, #-12]
   22438:	ldr	r0, [fp, #-12]
   2243c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22440:	cmp	r0, r1
   22444:	beq	22468 <main@@Base+0xbb1c>
   22448:	ldr	r0, [fp, #8]
   2244c:	mvn	r1, #0
   22450:	str	r1, [r0, #4]
   22454:	str	r1, [r0]
   22458:	ldr	r0, [fp, #-20]	; 0xffffffec
   2245c:	movw	r1, #1
   22460:	str	r1, [r0]
   22464:	b	22474 <main@@Base+0xbb28>
   22468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2246c:	str	r0, [fp, #-4]
   22470:	b	2253c <main@@Base+0xbbf0>
   22474:	b	2252c <main@@Base+0xbbe0>
   22478:	ldrh	r0, [sp, #34]	; 0x22
   2247c:	ldr	r1, [sp, #36]	; 0x24
   22480:	movw	r2, #26990	; 0x696e
   22484:	eor	r2, r2, r1, lsr #16
   22488:	orr	r0, r0, r1, lsl #16
   2248c:	movw	r1, #25959	; 0x6567
   22490:	movt	r1, #29806	; 0x746e
   22494:	eor	r0, r0, r1
   22498:	orr	r0, r0, r2
   2249c:	cmp	r0, #0
   224a0:	bne	2251c <main@@Base+0xbbd0>
   224a4:	b	224a8 <main@@Base+0xbb5c>
   224a8:	ldr	r0, [fp, #-8]
   224ac:	ldr	r1, [fp, #-12]
   224b0:	str	r1, [fp, #-28]	; 0xffffffe4
   224b4:	ldr	r2, [fp, #-16]
   224b8:	ldr	r3, [fp, #12]
   224bc:	movw	ip, #6
   224c0:	str	r3, [sp, #8]
   224c4:	mov	r3, ip
   224c8:	ldr	ip, [sp, #8]
   224cc:	str	ip, [sp]
   224d0:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   224d4:	str	r0, [fp, #-12]
   224d8:	ldr	r0, [fp, #-12]
   224dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   224e0:	cmp	r0, r1
   224e4:	beq	2250c <main@@Base+0xbbc0>
   224e8:	ldr	r0, [fp, #8]
   224ec:	mvn	r1, #0
   224f0:	str	r1, [r0, #4]
   224f4:	mvn	r1, #1
   224f8:	str	r1, [r0]
   224fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   22500:	movw	r1, #1
   22504:	str	r1, [r0]
   22508:	b	22518 <main@@Base+0xbbcc>
   2250c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22510:	str	r0, [fp, #-4]
   22514:	b	2253c <main@@Base+0xbbf0>
   22518:	b	22528 <main@@Base+0xbbdc>
   2251c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22520:	str	r0, [fp, #-4]
   22524:	b	2253c <main@@Base+0xbbf0>
   22528:	b	2252c <main@@Base+0xbbe0>
   2252c:	b	22530 <main@@Base+0xbbe4>
   22530:	b	22534 <main@@Base+0xbbe8>
   22534:	ldr	r0, [fp, #-12]
   22538:	str	r0, [fp, #-4]
   2253c:	ldr	r0, [fp, #-4]
   22540:	mov	sp, fp
   22544:	pop	{fp, pc}
   22548:	push	{fp, lr}
   2254c:	mov	fp, sp
   22550:	sub	sp, sp, #64	; 0x40
   22554:	ldr	ip, [fp, #12]
   22558:	ldr	lr, [fp, #8]
   2255c:	str	r0, [fp, #-8]
   22560:	str	r1, [fp, #-12]
   22564:	str	r2, [fp, #-16]
   22568:	str	r3, [fp, #-20]	; 0xffffffec
   2256c:	ldr	r0, [fp, #-12]
   22570:	str	r0, [fp, #-24]	; 0xffffffe8
   22574:	ldr	r0, [fp, #-12]
   22578:	ldr	r1, [fp, #-16]
   2257c:	str	ip, [sp, #20]
   22580:	str	lr, [sp, #16]
   22584:	bl	1c960 <main@@Base+0x6014>
   22588:	str	r1, [sp, #28]
   2258c:	str	r0, [sp, #24]
   22590:	ldr	r0, [sp, #28]
   22594:	movw	r1, #26417	; 0x6731
   22598:	movt	r1, #28261	; 0x6e65
   2259c:	cmp	r0, r1
   225a0:	bhi	22644 <main@@Base+0xbcf8>
   225a4:	b	225a8 <main@@Base+0xbc5c>
   225a8:	ldr	r0, [sp, #28]
   225ac:	movw	r1, #26417	; 0x6731
   225b0:	movt	r1, #28261	; 0x6e65
   225b4:	teq	r0, r1
   225b8:	bne	22634 <main@@Base+0xbce8>
   225bc:	b	225c0 <main@@Base+0xbc74>
   225c0:	ldr	r0, [fp, #-8]
   225c4:	ldr	r1, [fp, #-12]
   225c8:	str	r1, [fp, #-28]	; 0xffffffe4
   225cc:	ldr	r2, [fp, #-16]
   225d0:	ldr	r3, [fp, #12]
   225d4:	movw	ip, #4
   225d8:	str	r3, [sp, #12]
   225dc:	mov	r3, ip
   225e0:	ldr	ip, [sp, #12]
   225e4:	str	ip, [sp]
   225e8:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   225ec:	str	r0, [fp, #-12]
   225f0:	ldr	r0, [fp, #-12]
   225f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   225f8:	cmp	r0, r1
   225fc:	beq	22624 <main@@Base+0xbcd8>
   22600:	ldr	r0, [fp, #8]
   22604:	mvn	r1, #0
   22608:	str	r1, [r0, #4]
   2260c:	mvn	r1, #11
   22610:	str	r1, [r0]
   22614:	ldr	r0, [fp, #-20]	; 0xffffffec
   22618:	movw	r1, #1
   2261c:	str	r1, [r0]
   22620:	b	22630 <main@@Base+0xbce4>
   22624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22628:	str	r0, [fp, #-4]
   2262c:	b	22778 <main@@Base+0xbe2c>
   22630:	b	22640 <main@@Base+0xbcf4>
   22634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22638:	str	r0, [fp, #-4]
   2263c:	b	22778 <main@@Base+0xbe2c>
   22640:	b	22770 <main@@Base+0xbe24>
   22644:	ldr	r0, [sp, #28]
   22648:	movw	r1, #26419	; 0x6733
   2264c:	movt	r1, #28261	; 0x6e65
   22650:	teq	r0, r1
   22654:	bne	226d0 <main@@Base+0xbd84>
   22658:	b	2265c <main@@Base+0xbd10>
   2265c:	ldr	r0, [fp, #-8]
   22660:	ldr	r1, [fp, #-12]
   22664:	str	r1, [fp, #-28]	; 0xffffffe4
   22668:	ldr	r2, [fp, #-16]
   2266c:	ldr	r3, [fp, #12]
   22670:	movw	ip, #4
   22674:	str	r3, [sp, #8]
   22678:	mov	r3, ip
   2267c:	ldr	ip, [sp, #8]
   22680:	str	ip, [sp]
   22684:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   22688:	str	r0, [fp, #-12]
   2268c:	ldr	r0, [fp, #-12]
   22690:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22694:	cmp	r0, r1
   22698:	beq	226c0 <main@@Base+0xbd74>
   2269c:	ldr	r0, [fp, #8]
   226a0:	mvn	r1, #0
   226a4:	str	r1, [r0, #4]
   226a8:	mvn	r1, #9
   226ac:	str	r1, [r0]
   226b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   226b4:	movw	r1, #1
   226b8:	str	r1, [r0]
   226bc:	b	226cc <main@@Base+0xbd80>
   226c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   226c4:	str	r0, [fp, #-4]
   226c8:	b	22778 <main@@Base+0xbe2c>
   226cc:	b	2276c <main@@Base+0xbe20>
   226d0:	ldr	r0, [sp, #28]
   226d4:	movw	r1, #26418	; 0x6732
   226d8:	movt	r1, #28261	; 0x6e65
   226dc:	teq	r0, r1
   226e0:	bne	2275c <main@@Base+0xbe10>
   226e4:	b	226e8 <main@@Base+0xbd9c>
   226e8:	ldr	r0, [fp, #-8]
   226ec:	ldr	r1, [fp, #-12]
   226f0:	str	r1, [fp, #-28]	; 0xffffffe4
   226f4:	ldr	r2, [fp, #-16]
   226f8:	ldr	r3, [fp, #12]
   226fc:	movw	ip, #4
   22700:	str	r3, [sp, #4]
   22704:	mov	r3, ip
   22708:	ldr	ip, [sp, #4]
   2270c:	str	ip, [sp]
   22710:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   22714:	str	r0, [fp, #-12]
   22718:	ldr	r0, [fp, #-12]
   2271c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22720:	cmp	r0, r1
   22724:	beq	2274c <main@@Base+0xbe00>
   22728:	ldr	r0, [fp, #8]
   2272c:	mvn	r1, #0
   22730:	str	r1, [r0, #4]
   22734:	mvn	r1, #10
   22738:	str	r1, [r0]
   2273c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22740:	movw	r1, #1
   22744:	str	r1, [r0]
   22748:	b	22758 <main@@Base+0xbe0c>
   2274c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22750:	str	r0, [fp, #-4]
   22754:	b	22778 <main@@Base+0xbe2c>
   22758:	b	22768 <main@@Base+0xbe1c>
   2275c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22760:	str	r0, [fp, #-4]
   22764:	b	22778 <main@@Base+0xbe2c>
   22768:	b	2276c <main@@Base+0xbe20>
   2276c:	b	22770 <main@@Base+0xbe24>
   22770:	ldr	r0, [fp, #-12]
   22774:	str	r0, [fp, #-4]
   22778:	ldr	r0, [fp, #-4]
   2277c:	mov	sp, fp
   22780:	pop	{fp, pc}
   22784:	push	{fp, lr}
   22788:	mov	fp, sp
   2278c:	sub	sp, sp, #56	; 0x38
   22790:	ldr	ip, [fp, #12]
   22794:	ldr	lr, [fp, #8]
   22798:	str	r0, [fp, #-8]
   2279c:	str	r1, [fp, #-12]
   227a0:	str	r2, [fp, #-16]
   227a4:	str	r3, [fp, #-20]	; 0xffffffec
   227a8:	ldr	r0, [fp, #-12]
   227ac:	str	r0, [fp, #-24]	; 0xffffffe8
   227b0:	ldr	r0, [fp, #-12]
   227b4:	ldr	r1, [fp, #-16]
   227b8:	str	ip, [sp, #12]
   227bc:	str	lr, [sp, #8]
   227c0:	bl	1c960 <main@@Base+0x6014>
   227c4:	str	r1, [sp, #20]
   227c8:	str	r0, [sp, #16]
   227cc:	ldrb	r0, [sp, #23]
   227d0:	mov	r1, #2013265920	; 0x78000000
   227d4:	teq	r1, r0, lsl #24
   227d8:	bne	22850 <main@@Base+0xbf04>
   227dc:	b	227e0 <main@@Base+0xbe94>
   227e0:	ldr	r0, [fp, #-8]
   227e4:	ldr	r1, [fp, #-12]
   227e8:	str	r1, [sp, #28]
   227ec:	ldr	r2, [fp, #-16]
   227f0:	ldr	r3, [fp, #12]
   227f4:	movw	ip, #1
   227f8:	str	r3, [sp, #4]
   227fc:	mov	r3, ip
   22800:	ldr	ip, [sp, #4]
   22804:	str	ip, [sp]
   22808:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   2280c:	str	r0, [fp, #-12]
   22810:	ldr	r0, [fp, #-12]
   22814:	ldr	r1, [sp, #28]
   22818:	cmp	r0, r1
   2281c:	beq	22840 <main@@Base+0xbef4>
   22820:	ldr	r0, [fp, #8]
   22824:	mov	r1, #0
   22828:	str	r1, [r0, #4]
   2282c:	str	r1, [r0]
   22830:	ldr	r0, [fp, #-20]	; 0xffffffec
   22834:	movw	r1, #0
   22838:	str	r1, [r0]
   2283c:	b	2284c <main@@Base+0xbf00>
   22840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22844:	str	r0, [fp, #-4]
   22848:	b	22864 <main@@Base+0xbf18>
   2284c:	b	2285c <main@@Base+0xbf10>
   22850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22854:	str	r0, [fp, #-4]
   22858:	b	22864 <main@@Base+0xbf18>
   2285c:	ldr	r0, [fp, #-12]
   22860:	str	r0, [fp, #-4]
   22864:	ldr	r0, [fp, #-4]
   22868:	mov	sp, fp
   2286c:	pop	{fp, pc}
   22870:	push	{fp, lr}
   22874:	mov	fp, sp
   22878:	sub	sp, sp, #80	; 0x50
   2287c:	ldr	ip, [fp, #12]
   22880:	ldr	lr, [fp, #8]
   22884:	str	r0, [fp, #-8]
   22888:	str	r1, [fp, #-12]
   2288c:	str	r2, [fp, #-16]
   22890:	str	r3, [fp, #-20]	; 0xffffffec
   22894:	ldr	r0, [fp, #-12]
   22898:	str	r0, [fp, #-24]	; 0xffffffe8
   2289c:	ldr	r0, [fp, #-12]
   228a0:	ldr	r1, [fp, #-16]
   228a4:	str	ip, [sp, #36]	; 0x24
   228a8:	str	lr, [sp, #32]
   228ac:	bl	1c960 <main@@Base+0x6014>
   228b0:	str	r1, [sp, #44]	; 0x2c
   228b4:	str	r0, [sp, #40]	; 0x28
   228b8:	ldr	r0, [sp, #44]	; 0x2c
   228bc:	movw	r1, #20036	; 0x4e44
   228c0:	movt	r1, #20047	; 0x4e4f
   228c4:	cmp	r0, r1
   228c8:	bhi	22b04 <main@@Base+0xc1b8>
   228cc:	b	228d0 <main@@Base+0xbf84>
   228d0:	ldr	r0, [sp, #40]	; 0x28
   228d4:	ldr	r1, [sp, #44]	; 0x2c
   228d8:	movw	r2, #28159	; 0x6dff
   228dc:	movt	r2, #18017	; 0x4661
   228e0:	subs	r0, r2, r0
   228e4:	movw	r2, #28523	; 0x6f6b
   228e8:	movt	r2, #17007	; 0x426f
   228ec:	sbcs	r1, r2, r1
   228f0:	bcc	229a4 <main@@Base+0xc058>
   228f4:	b	228f8 <main@@Base+0xbfac>
   228f8:	ldrb	r0, [sp, #43]	; 0x2b
   228fc:	ldr	r1, [sp, #44]	; 0x2c
   22900:	movw	r2, #27756	; 0x6c6c
   22904:	movt	r2, #16997	; 0x4265
   22908:	eor	r1, r1, r2
   2290c:	eor	r0, r0, #101	; 0x65
   22910:	orr	r0, r1, r0, lsl #24
   22914:	cmp	r0, #0
   22918:	bne	22994 <main@@Base+0xc048>
   2291c:	b	22920 <main@@Base+0xbfd4>
   22920:	ldr	r0, [fp, #-8]
   22924:	ldr	r1, [fp, #-12]
   22928:	str	r1, [fp, #-28]	; 0xffffffe4
   2292c:	ldr	r2, [fp, #-16]
   22930:	ldr	r3, [fp, #12]
   22934:	movw	ip, #5
   22938:	str	r3, [sp, #28]
   2293c:	mov	r3, ip
   22940:	ldr	ip, [sp, #28]
   22944:	str	ip, [sp]
   22948:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   2294c:	str	r0, [fp, #-12]
   22950:	ldr	r0, [fp, #-12]
   22954:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22958:	cmp	r0, r1
   2295c:	beq	22984 <main@@Base+0xc038>
   22960:	ldr	r0, [fp, #8]
   22964:	mov	r1, #0
   22968:	str	r1, [r0, #4]
   2296c:	mov	r1, #9
   22970:	str	r1, [r0]
   22974:	ldr	r0, [fp, #-20]	; 0xffffffec
   22978:	movw	r1, #0
   2297c:	str	r1, [r0]
   22980:	b	22990 <main@@Base+0xc044>
   22984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22988:	str	r0, [fp, #-4]
   2298c:	b	22e00 <main@@Base+0xc4b4>
   22990:	b	229a0 <main@@Base+0xc054>
   22994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22998:	str	r0, [fp, #-4]
   2299c:	b	22e00 <main@@Base+0xc4b4>
   229a0:	b	22b00 <main@@Base+0xc1b4>
   229a4:	ldrb	r0, [sp, #43]	; 0x2b
   229a8:	ldr	r1, [sp, #44]	; 0x2c
   229ac:	movw	r2, #19553	; 0x4c61
   229b0:	movt	r2, #19829	; 0x4d75
   229b4:	eor	r1, r1, r2
   229b8:	eor	r0, r0, #110	; 0x6e
   229bc:	orr	r0, r1, r0, lsl #24
   229c0:	cmp	r0, #0
   229c4:	bne	22a40 <main@@Base+0xc0f4>
   229c8:	b	229cc <main@@Base+0xc080>
   229cc:	ldr	r0, [fp, #-8]
   229d0:	ldr	r1, [fp, #-12]
   229d4:	str	r1, [fp, #-28]	; 0xffffffe4
   229d8:	ldr	r2, [fp, #-16]
   229dc:	ldr	r3, [fp, #12]
   229e0:	movw	ip, #5
   229e4:	str	r3, [sp, #24]
   229e8:	mov	r3, ip
   229ec:	ldr	ip, [sp, #24]
   229f0:	str	ip, [sp]
   229f4:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   229f8:	str	r0, [fp, #-12]
   229fc:	ldr	r0, [fp, #-12]
   22a00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22a04:	cmp	r0, r1
   22a08:	beq	22a30 <main@@Base+0xc0e4>
   22a0c:	ldr	r0, [fp, #8]
   22a10:	mov	r1, #0
   22a14:	str	r1, [r0, #4]
   22a18:	mov	r1, #2
   22a1c:	str	r1, [r0]
   22a20:	ldr	r0, [fp, #-20]	; 0xffffffec
   22a24:	movw	r1, #0
   22a28:	str	r1, [r0]
   22a2c:	b	22a3c <main@@Base+0xc0f0>
   22a30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22a34:	str	r0, [fp, #-4]
   22a38:	b	22e00 <main@@Base+0xc4b4>
   22a3c:	b	22afc <main@@Base+0xc1b0>
   22a40:	ldr	r0, [sp, #40]	; 0x28
   22a44:	ldr	r1, [sp, #44]	; 0x2c
   22a48:	movw	r2, #28527	; 0x6f6f
   22a4c:	movt	r2, #66	; 0x42
   22a50:	eor	r2, r2, r1, lsr #8
   22a54:	lsr	r0, r0, #8
   22a58:	orr	r0, r0, r1, lsl #24
   22a5c:	movw	r1, #24942	; 0x616e
   22a60:	movt	r1, #27462	; 0x6b46
   22a64:	eor	r0, r0, r1
   22a68:	orr	r0, r0, r2
   22a6c:	cmp	r0, #0
   22a70:	bne	22aec <main@@Base+0xc1a0>
   22a74:	b	22a78 <main@@Base+0xc12c>
   22a78:	ldr	r0, [fp, #-8]
   22a7c:	ldr	r1, [fp, #-12]
   22a80:	str	r1, [fp, #-28]	; 0xffffffe4
   22a84:	ldr	r2, [fp, #-16]
   22a88:	ldr	r3, [fp, #12]
   22a8c:	movw	ip, #7
   22a90:	str	r3, [sp, #20]
   22a94:	mov	r3, ip
   22a98:	ldr	ip, [sp, #20]
   22a9c:	str	ip, [sp]
   22aa0:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   22aa4:	str	r0, [fp, #-12]
   22aa8:	ldr	r0, [fp, #-12]
   22aac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22ab0:	cmp	r0, r1
   22ab4:	beq	22adc <main@@Base+0xc190>
   22ab8:	ldr	r0, [fp, #8]
   22abc:	mov	r1, #0
   22ac0:	str	r1, [r0, #4]
   22ac4:	mov	r1, #10
   22ac8:	str	r1, [r0]
   22acc:	ldr	r0, [fp, #-20]	; 0xffffffec
   22ad0:	movw	r1, #0
   22ad4:	str	r1, [r0]
   22ad8:	b	22ae8 <main@@Base+0xc19c>
   22adc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22ae0:	str	r0, [fp, #-4]
   22ae4:	b	22e00 <main@@Base+0xc4b4>
   22ae8:	b	22af8 <main@@Base+0xc1ac>
   22aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22af0:	str	r0, [fp, #-4]
   22af4:	b	22e00 <main@@Base+0xc4b4>
   22af8:	b	22afc <main@@Base+0xc1b0>
   22afc:	b	22b00 <main@@Base+0xc1b4>
   22b00:	b	22df8 <main@@Base+0xc4ac>
   22b04:	ldr	r0, [sp, #40]	; 0x28
   22b08:	ldr	r1, [sp, #44]	; 0x2c
   22b0c:	mvn	r2, #-1912602624	; 0x8e000000
   22b10:	subs	r0, r2, r0
   22b14:	movw	r2, #26725	; 0x6865
   22b18:	movt	r2, #20340	; 0x4f74
   22b1c:	sbcs	r1, r2, r1
   22b20:	bcc	22bc0 <main@@Base+0xc274>
   22b24:	b	22b28 <main@@Base+0xc1dc>
   22b28:	ldr	r0, [sp, #44]	; 0x2c
   22b2c:	movw	r1, #20037	; 0x4e45
   22b30:	movt	r1, #20047	; 0x4e4f
   22b34:	teq	r0, r1
   22b38:	bne	22bb0 <main@@Base+0xc264>
   22b3c:	b	22b40 <main@@Base+0xc1f4>
   22b40:	ldr	r0, [fp, #-8]
   22b44:	ldr	r1, [fp, #-12]
   22b48:	str	r1, [fp, #-28]	; 0xffffffe4
   22b4c:	ldr	r2, [fp, #-16]
   22b50:	ldr	r3, [fp, #12]
   22b54:	movw	ip, #4
   22b58:	str	r3, [sp, #16]
   22b5c:	mov	r3, ip
   22b60:	ldr	ip, [sp, #16]
   22b64:	str	ip, [sp]
   22b68:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   22b6c:	str	r0, [fp, #-12]
   22b70:	ldr	r0, [fp, #-12]
   22b74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22b78:	cmp	r0, r1
   22b7c:	beq	22ba0 <main@@Base+0xc254>
   22b80:	ldr	r0, [fp, #8]
   22b84:	mov	r1, #0
   22b88:	str	r1, [r0, #4]
   22b8c:	str	r1, [r0]
   22b90:	ldr	r0, [fp, #-20]	; 0xffffffec
   22b94:	movw	r1, #0
   22b98:	str	r1, [r0]
   22b9c:	b	22bac <main@@Base+0xc260>
   22ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22ba4:	str	r0, [fp, #-4]
   22ba8:	b	22e00 <main@@Base+0xc4b4>
   22bac:	b	22bbc <main@@Base+0xc270>
   22bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22bb4:	str	r0, [fp, #-4]
   22bb8:	b	22e00 <main@@Base+0xc4b4>
   22bbc:	b	22df4 <main@@Base+0xc4a8>
   22bc0:	ldr	r0, [sp, #40]	; 0x28
   22bc4:	ldr	r1, [sp, #44]	; 0x2c
   22bc8:	movw	r2, #25963	; 0x656b
   22bcc:	movt	r2, #28282	; 0x6e7a
   22bd0:	subs	r0, r2, r0
   22bd4:	movw	r2, #28789	; 0x7075
   22bd8:	movt	r2, #21089	; 0x5261
   22bdc:	sbcs	r1, r2, r1
   22be0:	bcc	22c94 <main@@Base+0xc348>
   22be4:	b	22be8 <main@@Base+0xc29c>
   22be8:	ldrb	r0, [sp, #43]	; 0x2b
   22bec:	ldr	r1, [sp, #44]	; 0x2c
   22bf0:	movw	r2, #26725	; 0x6865
   22bf4:	movt	r2, #20340	; 0x4f74
   22bf8:	eor	r1, r1, r2
   22bfc:	eor	r0, r0, #114	; 0x72
   22c00:	orr	r0, r1, r0, lsl #24
   22c04:	cmp	r0, #0
   22c08:	bne	22c84 <main@@Base+0xc338>
   22c0c:	b	22c10 <main@@Base+0xc2c4>
   22c10:	ldr	r0, [fp, #-8]
   22c14:	ldr	r1, [fp, #-12]
   22c18:	str	r1, [fp, #-28]	; 0xffffffe4
   22c1c:	ldr	r2, [fp, #-16]
   22c20:	ldr	r3, [fp, #12]
   22c24:	movw	ip, #5
   22c28:	str	r3, [sp, #12]
   22c2c:	mov	r3, ip
   22c30:	ldr	ip, [sp, #12]
   22c34:	str	ip, [sp]
   22c38:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   22c3c:	str	r0, [fp, #-12]
   22c40:	ldr	r0, [fp, #-12]
   22c44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22c48:	cmp	r0, r1
   22c4c:	beq	22c74 <main@@Base+0xc328>
   22c50:	ldr	r0, [fp, #8]
   22c54:	mov	r1, #0
   22c58:	str	r1, [r0, #4]
   22c5c:	mov	r1, #11
   22c60:	str	r1, [r0]
   22c64:	ldr	r0, [fp, #-20]	; 0xffffffec
   22c68:	movw	r1, #0
   22c6c:	str	r1, [r0]
   22c70:	b	22c80 <main@@Base+0xc334>
   22c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22c78:	str	r0, [fp, #-4]
   22c7c:	b	22e00 <main@@Base+0xc4b4>
   22c80:	b	22c90 <main@@Base+0xc344>
   22c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22c88:	str	r0, [fp, #-4]
   22c8c:	b	22e00 <main@@Base+0xc4b4>
   22c90:	b	22df0 <main@@Base+0xc4a4>
   22c94:	ldrh	r0, [sp, #42]	; 0x2a
   22c98:	ldr	r1, [sp, #44]	; 0x2c
   22c9c:	movw	r2, #21870	; 0x556e
   22ca0:	eor	r2, r2, r1, lsr #16
   22ca4:	orr	r0, r0, r1, lsl #16
   22ca8:	movw	r1, #25956	; 0x6564
   22cac:	movt	r1, #30067	; 0x7573
   22cb0:	eor	r0, r0, r1
   22cb4:	orr	r0, r0, r2
   22cb8:	cmp	r0, #0
   22cbc:	bne	22d38 <main@@Base+0xc3ec>
   22cc0:	b	22cc4 <main@@Base+0xc378>
   22cc4:	ldr	r0, [fp, #-8]
   22cc8:	ldr	r1, [fp, #-12]
   22ccc:	str	r1, [fp, #-28]	; 0xffffffe4
   22cd0:	ldr	r2, [fp, #-16]
   22cd4:	ldr	r3, [fp, #12]
   22cd8:	movw	ip, #6
   22cdc:	str	r3, [sp, #8]
   22ce0:	mov	r3, ip
   22ce4:	ldr	ip, [sp, #8]
   22ce8:	str	ip, [sp]
   22cec:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   22cf0:	str	r0, [fp, #-12]
   22cf4:	ldr	r0, [fp, #-12]
   22cf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22cfc:	cmp	r0, r1
   22d00:	beq	22d28 <main@@Base+0xc3dc>
   22d04:	ldr	r0, [fp, #8]
   22d08:	mov	r1, #0
   22d0c:	str	r1, [r0, #4]
   22d10:	mov	r1, #255	; 0xff
   22d14:	str	r1, [r0]
   22d18:	ldr	r0, [fp, #-20]	; 0xffffffec
   22d1c:	movw	r1, #0
   22d20:	str	r1, [r0]
   22d24:	b	22d34 <main@@Base+0xc3e8>
   22d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22d2c:	str	r0, [fp, #-4]
   22d30:	b	22e00 <main@@Base+0xc4b4>
   22d34:	b	22dec <main@@Base+0xc4a0>
   22d38:	ldr	r0, [sp, #40]	; 0x28
   22d3c:	ldr	r1, [sp, #44]	; 0x2c
   22d40:	movw	r2, #28789	; 0x7075
   22d44:	movt	r2, #21089	; 0x5261
   22d48:	eor	r1, r1, r2
   22d4c:	movw	r2, #25964	; 0x656c
   22d50:	movt	r2, #28282	; 0x6e7a
   22d54:	eor	r0, r0, r2
   22d58:	orr	r0, r0, r1
   22d5c:	cmp	r0, #0
   22d60:	bne	22ddc <main@@Base+0xc490>
   22d64:	b	22d68 <main@@Base+0xc41c>
   22d68:	ldr	r0, [fp, #-8]
   22d6c:	ldr	r1, [fp, #-12]
   22d70:	str	r1, [fp, #-28]	; 0xffffffe4
   22d74:	ldr	r2, [fp, #-16]
   22d78:	ldr	r3, [fp, #12]
   22d7c:	movw	ip, #8
   22d80:	str	r3, [sp, #4]
   22d84:	mov	r3, ip
   22d88:	ldr	ip, [sp, #4]
   22d8c:	str	ip, [sp]
   22d90:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   22d94:	str	r0, [fp, #-12]
   22d98:	ldr	r0, [fp, #-12]
   22d9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22da0:	cmp	r0, r1
   22da4:	beq	22dcc <main@@Base+0xc480>
   22da8:	ldr	r0, [fp, #8]
   22dac:	mov	r1, #0
   22db0:	str	r1, [r0, #4]
   22db4:	mov	r1, #8
   22db8:	str	r1, [r0]
   22dbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   22dc0:	movw	r1, #0
   22dc4:	str	r1, [r0]
   22dc8:	b	22dd8 <main@@Base+0xc48c>
   22dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22dd0:	str	r0, [fp, #-4]
   22dd4:	b	22e00 <main@@Base+0xc4b4>
   22dd8:	b	22de8 <main@@Base+0xc49c>
   22ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22de0:	str	r0, [fp, #-4]
   22de4:	b	22e00 <main@@Base+0xc4b4>
   22de8:	b	22dec <main@@Base+0xc4a0>
   22dec:	b	22df0 <main@@Base+0xc4a4>
   22df0:	b	22df4 <main@@Base+0xc4a8>
   22df4:	b	22df8 <main@@Base+0xc4ac>
   22df8:	ldr	r0, [fp, #-12]
   22dfc:	str	r0, [fp, #-4]
   22e00:	ldr	r0, [fp, #-4]
   22e04:	mov	sp, fp
   22e08:	pop	{fp, pc}
   22e0c:	push	{fp, lr}
   22e10:	mov	fp, sp
   22e14:	sub	sp, sp, #64	; 0x40
   22e18:	ldr	ip, [fp, #12]
   22e1c:	ldr	lr, [fp, #8]
   22e20:	str	r0, [fp, #-8]
   22e24:	str	r1, [fp, #-12]
   22e28:	str	r2, [fp, #-16]
   22e2c:	str	r3, [fp, #-20]	; 0xffffffec
   22e30:	ldr	r0, [fp, #-12]
   22e34:	str	r0, [fp, #-24]	; 0xffffffe8
   22e38:	ldr	r0, [fp, #-12]
   22e3c:	ldr	r1, [fp, #-16]
   22e40:	str	ip, [sp, #20]
   22e44:	str	lr, [sp, #16]
   22e48:	bl	1c960 <main@@Base+0x6014>
   22e4c:	str	r1, [sp, #28]
   22e50:	str	r0, [sp, #24]
   22e54:	ldr	r0, [sp, #28]
   22e58:	bic	r0, r0, #255	; 0xff
   22e5c:	movw	r1, #28416	; 0x6f00
   22e60:	movt	r1, #18031	; 0x466f
   22e64:	teq	r0, r1
   22e68:	bne	22edc <main@@Base+0xc590>
   22e6c:	b	22e70 <main@@Base+0xc524>
   22e70:	ldr	r0, [fp, #-8]
   22e74:	ldr	r1, [fp, #-12]
   22e78:	str	r1, [fp, #-28]	; 0xffffffe4
   22e7c:	ldr	r2, [fp, #-16]
   22e80:	ldr	r3, [fp, #12]
   22e84:	movw	ip, #3
   22e88:	str	r3, [sp, #12]
   22e8c:	mov	r3, ip
   22e90:	ldr	ip, [sp, #12]
   22e94:	str	ip, [sp]
   22e98:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   22e9c:	str	r0, [fp, #-12]
   22ea0:	ldr	r0, [fp, #-12]
   22ea4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22ea8:	cmp	r0, r1
   22eac:	beq	22ed4 <main@@Base+0xc588>
   22eb0:	ldr	r0, [fp, #8]
   22eb4:	mov	r1, #0
   22eb8:	str	r1, [r0, #4]
   22ebc:	mov	r1, #17
   22ec0:	str	r1, [r0]
   22ec4:	ldr	r0, [fp, #-20]	; 0xffffffec
   22ec8:	movw	r1, #0
   22ecc:	str	r1, [r0]
   22ed0:	b	22ed8 <main@@Base+0xc58c>
   22ed4:	b	22ee4 <main@@Base+0xc598>
   22ed8:	b	22ee0 <main@@Base+0xc594>
   22edc:	b	22ee4 <main@@Base+0xc598>
   22ee0:	b	22fdc <main@@Base+0xc690>
   22ee4:	ldr	r0, [sp, #24]
   22ee8:	ldr	r1, [sp, #28]
   22eec:	movw	r2, #25452	; 0x636c
   22ef0:	movt	r2, #18798	; 0x496e
   22ef4:	eor	r1, r1, r2
   22ef8:	movw	r2, #25942	; 0x6556
   22efc:	movt	r2, #30052	; 0x7564
   22f00:	eor	r0, r0, r2
   22f04:	orr	r0, r0, r1
   22f08:	cmp	r0, #0
   22f0c:	bne	22fcc <main@@Base+0xc680>
   22f10:	b	22f14 <main@@Base+0xc5c8>
   22f14:	ldr	r0, [fp, #-12]
   22f18:	add	r0, r0, #8
   22f1c:	str	r0, [fp, #-12]
   22f20:	ldr	r0, [fp, #-12]
   22f24:	ldr	r1, [fp, #-16]
   22f28:	bl	1c960 <main@@Base+0x6014>
   22f2c:	str	r1, [sp, #28]
   22f30:	str	r0, [sp, #24]
   22f34:	ldrh	r0, [sp, #30]
   22f38:	movw	r1, #0
   22f3c:	movt	r1, #24940	; 0x616c
   22f40:	teq	r1, r0, lsl #16
   22f44:	bne	22fbc <main@@Base+0xc670>
   22f48:	b	22f4c <main@@Base+0xc600>
   22f4c:	ldr	r0, [fp, #-8]
   22f50:	ldr	r1, [fp, #-12]
   22f54:	str	r1, [fp, #-28]	; 0xffffffe4
   22f58:	ldr	r2, [fp, #-16]
   22f5c:	ldr	r3, [fp, #12]
   22f60:	movw	ip, #2
   22f64:	str	r3, [sp, #8]
   22f68:	mov	r3, ip
   22f6c:	ldr	ip, [sp, #8]
   22f70:	str	ip, [sp]
   22f74:	bl	34d00 <flatcc_json_parser_match_constant@@Base>
   22f78:	str	r0, [fp, #-12]
   22f7c:	ldr	r0, [fp, #-12]
   22f80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22f84:	cmp	r0, r1
   22f88:	beq	22fac <main@@Base+0xc660>
   22f8c:	ldr	r0, [fp, #8]
   22f90:	mov	r1, #0
   22f94:	str	r1, [r0, #4]
   22f98:	str	r1, [r0]
   22f9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22fa0:	movw	r1, #0
   22fa4:	str	r1, [r0]
   22fa8:	b	22fb8 <main@@Base+0xc66c>
   22fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22fb0:	str	r0, [fp, #-4]
   22fb4:	b	22fe4 <main@@Base+0xc698>
   22fb8:	b	22fc8 <main@@Base+0xc67c>
   22fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22fc0:	str	r0, [fp, #-4]
   22fc4:	b	22fe4 <main@@Base+0xc698>
   22fc8:	b	22fd8 <main@@Base+0xc68c>
   22fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22fd0:	str	r0, [fp, #-4]
   22fd4:	b	22fe4 <main@@Base+0xc698>
   22fd8:	b	22fdc <main@@Base+0xc690>
   22fdc:	ldr	r0, [fp, #-12]
   22fe0:	str	r0, [fp, #-4]
   22fe4:	ldr	r0, [fp, #-4]
   22fe8:	mov	sp, fp
   22fec:	pop	{fp, pc}
   22ff0:	push	{r4, sl, fp, lr}
   22ff4:	add	fp, sp, #8
   22ff8:	sub	sp, sp, #32
   22ffc:	ldr	ip, [fp, #12]
   23000:	ldr	lr, [fp, #8]
   23004:	ldr	r4, [fp, #16]
   23008:	str	r0, [fp, #-16]
   2300c:	str	r1, [sp, #20]
   23010:	str	r2, [sp, #16]
   23014:	str	r3, [sp, #12]
   23018:	str	ip, [sp, #4]
   2301c:	str	lr, [sp]
   23020:	ldr	r0, [sp, #12]
   23024:	cmp	r0, #0
   23028:	beq	23074 <main@@Base+0xc728>
   2302c:	ldr	r0, [sp]
   23030:	ldr	r1, [sp, #4]
   23034:	subs	r0, r0, #129	; 0x81
   23038:	sbcs	r1, r1, #0
   2303c:	bcc	23060 <main@@Base+0xc714>
   23040:	b	23044 <main@@Base+0xc6f8>
   23044:	ldr	r0, [fp, #-16]
   23048:	ldr	r1, [sp, #20]
   2304c:	ldr	r2, [sp, #16]
   23050:	movw	r3, #8
   23054:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   23058:	str	r0, [fp, #-12]
   2305c:	b	230bc <main@@Base+0xc770>
   23060:	ldr	r0, [sp]
   23064:	rsb	r0, r0, #0
   23068:	ldr	r1, [fp, #16]
   2306c:	strb	r0, [r1]
   23070:	b	230b4 <main@@Base+0xc768>
   23074:	ldr	r0, [sp]
   23078:	ldr	r1, [sp, #4]
   2307c:	subs	r0, r0, #128	; 0x80
   23080:	sbcs	r1, r1, #0
   23084:	bcc	230a8 <main@@Base+0xc75c>
   23088:	b	2308c <main@@Base+0xc740>
   2308c:	ldr	r0, [fp, #-16]
   23090:	ldr	r1, [sp, #20]
   23094:	ldr	r2, [sp, #16]
   23098:	movw	r3, #7
   2309c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   230a0:	str	r0, [fp, #-12]
   230a4:	b	230bc <main@@Base+0xc770>
   230a8:	ldrb	r0, [sp]
   230ac:	ldr	r1, [fp, #16]
   230b0:	strb	r0, [r1]
   230b4:	ldr	r0, [sp, #20]
   230b8:	str	r0, [fp, #-12]
   230bc:	ldr	r0, [fp, #-12]
   230c0:	sub	sp, fp, #8
   230c4:	pop	{r4, sl, fp, pc}
   230c8:	push	{fp, lr}
   230cc:	mov	fp, sp
   230d0:	sub	sp, sp, #16
   230d4:	str	r0, [fp, #-4]
   230d8:	str	r1, [sp, #8]
   230dc:	str	r2, [sp, #4]
   230e0:	ldr	r0, [fp, #-4]
   230e4:	ldr	r1, [sp, #8]
   230e8:	ldr	r2, [sp, #4]
   230ec:	bl	1c8b4 <main@@Base+0x5f68>
   230f0:	str	r0, [sp, #8]
   230f4:	ldr	r0, [fp, #-4]
   230f8:	ldr	r0, [r0, #12]
   230fc:	cmp	r0, #0
   23100:	bne	23118 <main@@Base+0xc7cc>
   23104:	ldr	r0, [fp, #-4]
   23108:	ldr	r1, [sp, #8]
   2310c:	ldr	r2, [sp, #4]
   23110:	bl	21ae8 <main@@Base+0xb19c>
   23114:	str	r0, [sp, #8]
   23118:	ldr	r0, [sp, #8]
   2311c:	mov	sp, fp
   23120:	pop	{fp, pc}
   23124:	sub	sp, sp, #4
   23128:	strb	r0, [sp, #3]
   2312c:	ldrsb	r0, [sp, #3]
   23130:	add	sp, sp, #4
   23134:	bx	lr
   23138:	push	{r4, sl, fp, lr}
   2313c:	add	fp, sp, #8
   23140:	sub	sp, sp, #32
   23144:	ldr	ip, [fp, #12]
   23148:	ldr	lr, [fp, #8]
   2314c:	ldr	r4, [fp, #16]
   23150:	str	r0, [fp, #-16]
   23154:	str	r1, [sp, #20]
   23158:	str	r2, [sp, #16]
   2315c:	str	r3, [sp, #12]
   23160:	str	ip, [sp, #4]
   23164:	str	lr, [sp]
   23168:	ldr	r0, [sp, #12]
   2316c:	cmp	r0, #0
   23170:	beq	23190 <main@@Base+0xc844>
   23174:	ldr	r0, [fp, #-16]
   23178:	ldr	r1, [sp, #20]
   2317c:	ldr	r2, [sp, #16]
   23180:	movw	r3, #8
   23184:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   23188:	str	r0, [fp, #-12]
   2318c:	b	231d8 <main@@Base+0xc88c>
   23190:	ldr	r0, [sp]
   23194:	ldr	r1, [sp, #4]
   23198:	subs	r0, r0, #256	; 0x100
   2319c:	sbcs	r1, r1, #0
   231a0:	bcc	231c4 <main@@Base+0xc878>
   231a4:	b	231a8 <main@@Base+0xc85c>
   231a8:	ldr	r0, [fp, #-16]
   231ac:	ldr	r1, [sp, #20]
   231b0:	ldr	r2, [sp, #16]
   231b4:	movw	r3, #7
   231b8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   231bc:	str	r0, [fp, #-12]
   231c0:	b	231d8 <main@@Base+0xc88c>
   231c4:	ldrb	r0, [sp]
   231c8:	ldr	r1, [fp, #16]
   231cc:	strb	r0, [r1]
   231d0:	ldr	r0, [sp, #20]
   231d4:	str	r0, [fp, #-12]
   231d8:	ldr	r0, [fp, #-12]
   231dc:	sub	sp, fp, #8
   231e0:	pop	{r4, sl, fp, pc}
   231e4:	sub	sp, sp, #4
   231e8:	strb	r0, [sp, #3]
   231ec:	ldrb	r0, [sp, #3]
   231f0:	add	sp, sp, #4
   231f4:	bx	lr
   231f8:	push	{r4, sl, fp, lr}
   231fc:	add	fp, sp, #8
   23200:	sub	sp, sp, #32
   23204:	ldr	ip, [fp, #12]
   23208:	ldr	lr, [fp, #8]
   2320c:	ldr	r4, [fp, #16]
   23210:	str	r0, [fp, #-16]
   23214:	str	r1, [sp, #20]
   23218:	str	r2, [sp, #16]
   2321c:	str	r3, [sp, #12]
   23220:	str	ip, [sp, #4]
   23224:	str	lr, [sp]
   23228:	ldr	r0, [sp, #12]
   2322c:	cmp	r0, #0
   23230:	beq	23280 <main@@Base+0xc934>
   23234:	ldr	r0, [sp]
   23238:	ldr	r1, [sp, #4]
   2323c:	movw	r2, #32769	; 0x8001
   23240:	subs	r0, r0, r2
   23244:	sbcs	r1, r1, #0
   23248:	bcc	2326c <main@@Base+0xc920>
   2324c:	b	23250 <main@@Base+0xc904>
   23250:	ldr	r0, [fp, #-16]
   23254:	ldr	r1, [sp, #20]
   23258:	ldr	r2, [sp, #16]
   2325c:	movw	r3, #8
   23260:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   23264:	str	r0, [fp, #-12]
   23268:	b	232c8 <main@@Base+0xc97c>
   2326c:	ldr	r0, [sp]
   23270:	rsb	r0, r0, #0
   23274:	ldr	r1, [fp, #16]
   23278:	strh	r0, [r1]
   2327c:	b	232c0 <main@@Base+0xc974>
   23280:	ldr	r0, [sp]
   23284:	ldr	r1, [sp, #4]
   23288:	subs	r0, r0, #32768	; 0x8000
   2328c:	sbcs	r1, r1, #0
   23290:	bcc	232b4 <main@@Base+0xc968>
   23294:	b	23298 <main@@Base+0xc94c>
   23298:	ldr	r0, [fp, #-16]
   2329c:	ldr	r1, [sp, #20]
   232a0:	ldr	r2, [sp, #16]
   232a4:	movw	r3, #7
   232a8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   232ac:	str	r0, [fp, #-12]
   232b0:	b	232c8 <main@@Base+0xc97c>
   232b4:	ldrh	r0, [sp]
   232b8:	ldr	r1, [fp, #16]
   232bc:	strh	r0, [r1]
   232c0:	ldr	r0, [sp, #20]
   232c4:	str	r0, [fp, #-12]
   232c8:	ldr	r0, [fp, #-12]
   232cc:	sub	sp, fp, #8
   232d0:	pop	{r4, sl, fp, pc}
   232d4:	sub	sp, sp, #4
   232d8:	strh	r0, [sp, #2]
   232dc:	ldrsh	r0, [sp, #2]
   232e0:	add	sp, sp, #4
   232e4:	bx	lr
   232e8:	push	{fp, lr}
   232ec:	mov	fp, sp
   232f0:	sub	sp, sp, #16
   232f4:	str	r0, [sp, #8]
   232f8:	str	r1, [sp, #4]
   232fc:	str	r2, [sp]
   23300:	ldr	r0, [sp]
   23304:	ldr	r1, [sp, #4]
   23308:	sub	r0, r0, r1
   2330c:	cmp	r0, #4
   23310:	blt	23344 <main@@Base+0xc9f8>
   23314:	ldr	r0, [sp, #4]
   23318:	ldr	r0, [r0]
   2331c:	movw	r1, #30062	; 0x756e
   23320:	movt	r1, #27756	; 0x6c6c
   23324:	subs	r0, r0, r1
   23328:	movwne	r0, #1
   2332c:	cmp	r0, #0
   23330:	bne	23344 <main@@Base+0xc9f8>
   23334:	ldr	r0, [sp, #4]
   23338:	add	r0, r0, #4
   2333c:	str	r0, [fp, #-4]
   23340:	b	2335c <main@@Base+0xca10>
   23344:	ldr	r0, [sp, #8]
   23348:	ldr	r1, [sp, #4]
   2334c:	ldr	r2, [sp]
   23350:	movw	r3, #26
   23354:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   23358:	str	r0, [fp, #-4]
   2335c:	ldr	r0, [fp, #-4]
   23360:	mov	sp, fp
   23364:	pop	{fp, pc}
   23368:	push	{fp, lr}
   2336c:	mov	fp, sp
   23370:	sub	sp, sp, #64	; 0x40
   23374:	str	r0, [fp, #-8]
   23378:	str	r1, [fp, #-12]
   2337c:	str	r2, [fp, #-16]
   23380:	str	r3, [fp, #-20]	; 0xffffffec
   23384:	ldr	r0, [fp, #-20]	; 0xffffffec
   23388:	movw	r1, #0
   2338c:	str	r1, [r0]
   23390:	ldr	r0, [fp, #-8]
   23394:	ldr	r0, [r0]
   23398:	movw	r1, #4
   2339c:	bl	2c618 <flatcc_builder_start_table@@Base>
   233a0:	cmp	r0, #0
   233a4:	beq	233ac <main@@Base+0xca60>
   233a8:	b	2398c <main@@Base+0xd040>
   233ac:	ldr	r0, [fp, #-8]
   233b0:	ldr	r1, [fp, #-12]
   233b4:	ldr	r2, [fp, #-16]
   233b8:	sub	r3, fp, #24
   233bc:	bl	1c7d0 <main@@Base+0x5e84>
   233c0:	str	r0, [fp, #-12]
   233c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   233c8:	cmp	r0, #0
   233cc:	beq	2394c <main@@Base+0xd000>
   233d0:	ldr	r0, [fp, #-8]
   233d4:	ldr	r1, [fp, #-12]
   233d8:	ldr	r2, [fp, #-16]
   233dc:	bl	1c8b4 <main@@Base+0x5f68>
   233e0:	str	r0, [fp, #-12]
   233e4:	ldr	r0, [fp, #-12]
   233e8:	ldr	r1, [fp, #-16]
   233ec:	bl	1c960 <main@@Base+0x6014>
   233f0:	str	r1, [sp, #20]
   233f4:	str	r0, [sp, #16]
   233f8:	ldrh	r0, [sp, #18]
   233fc:	ldr	r1, [sp, #20]
   23400:	movw	r2, #25455	; 0x636f
   23404:	eor	r2, r2, r1, lsr #16
   23408:	orr	r0, r0, r1, lsl #16
   2340c:	movw	r1, #29234	; 0x7232
   23410:	movt	r1, #27759	; 0x6c6f
   23414:	eor	r0, r0, r1
   23418:	orr	r0, r0, r2
   2341c:	cmp	r0, #0
   23420:	bne	23544 <main@@Base+0xcbf8>
   23424:	b	23428 <main@@Base+0xcadc>
   23428:	ldr	r0, [fp, #-8]
   2342c:	ldr	r1, [fp, #-12]
   23430:	str	r1, [sp, #24]
   23434:	ldr	r2, [fp, #-16]
   23438:	movw	r3, #6
   2343c:	bl	1c998 <main@@Base+0x604c>
   23440:	str	r0, [fp, #-12]
   23444:	ldr	r0, [sp, #24]
   23448:	ldr	r1, [fp, #-12]
   2344c:	cmp	r0, r1
   23450:	beq	2353c <main@@Base+0xcbf0>
   23454:	movw	r0, #0
   23458:	strb	r0, [sp, #15]
   2345c:	ldr	r0, [fp, #-8]
   23460:	ldr	r1, [fp, #-12]
   23464:	str	r1, [sp, #24]
   23468:	ldr	r2, [fp, #-16]
   2346c:	add	r3, sp, #15
   23470:	bl	1deb4 <main@@Base+0x7568>
   23474:	str	r0, [fp, #-12]
   23478:	ldr	r0, [sp, #24]
   2347c:	ldr	r1, [fp, #-12]
   23480:	cmp	r0, r1
   23484:	bne	234d8 <main@@Base+0xcb8c>
   23488:	ldr	r0, [pc, #1324]	; 239bc <main@@Base+0xd070>
   2348c:	add	r3, pc, r0
   23490:	ldr	r0, [fp, #-8]
   23494:	ldr	r1, [fp, #-12]
   23498:	str	r1, [sp, #24]
   2349c:	ldr	r2, [fp, #-16]
   234a0:	add	ip, sp, #15
   234a4:	str	ip, [sp]
   234a8:	bl	1df90 <main@@Base+0x7644>
   234ac:	str	r0, [fp, #-12]
   234b0:	ldr	r0, [fp, #-12]
   234b4:	ldr	r1, [sp, #24]
   234b8:	cmp	r0, r1
   234bc:	beq	234d0 <main@@Base+0xcb84>
   234c0:	ldr	r0, [fp, #-12]
   234c4:	ldr	r1, [fp, #-16]
   234c8:	cmp	r0, r1
   234cc:	bne	234d4 <main@@Base+0xcb88>
   234d0:	b	2398c <main@@Base+0xd040>
   234d4:	b	234d8 <main@@Base+0xcb8c>
   234d8:	ldrsb	r0, [sp, #15]
   234dc:	cmp	r0, #2
   234e0:	bne	234f8 <main@@Base+0xcbac>
   234e4:	ldr	r0, [fp, #-8]
   234e8:	ldr	r0, [r0, #8]
   234ec:	and	r0, r0, #2
   234f0:	cmp	r0, #0
   234f4:	beq	23538 <main@@Base+0xcbec>
   234f8:	ldr	r0, [fp, #-8]
   234fc:	ldr	r0, [r0]
   23500:	movw	r1, #1
   23504:	str	r1, [sp, #8]
   23508:	ldr	r2, [sp, #8]
   2350c:	movw	r3, #1
   23510:	uxth	r3, r3
   23514:	bl	2debc <flatcc_builder_table_add@@Base>
   23518:	str	r0, [fp, #-28]	; 0xffffffe4
   2351c:	movw	r1, #0
   23520:	cmp	r0, r1
   23524:	bne	2352c <main@@Base+0xcbe0>
   23528:	b	2398c <main@@Base+0xd040>
   2352c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23530:	ldrsb	r1, [sp, #15]
   23534:	bl	1e174 <main@@Base+0x7828>
   23538:	b	23540 <main@@Base+0xcbf4>
   2353c:	b	23690 <main@@Base+0xcd44>
   23540:	b	2368c <main@@Base+0xcd40>
   23544:	ldrb	r0, [sp, #19]
   23548:	ldr	r1, [sp, #20]
   2354c:	movw	r2, #27759	; 0x6c6f
   23550:	movt	r2, #25455	; 0x636f
   23554:	eor	r1, r1, r2
   23558:	eor	r0, r0, #114	; 0x72
   2355c:	orr	r0, r1, r0, lsl #24
   23560:	cmp	r0, #0
   23564:	bne	23684 <main@@Base+0xcd38>
   23568:	b	2356c <main@@Base+0xcc20>
   2356c:	ldr	r0, [fp, #-8]
   23570:	ldr	r1, [fp, #-12]
   23574:	str	r1, [sp, #24]
   23578:	ldr	r2, [fp, #-16]
   2357c:	movw	r3, #5
   23580:	bl	1c998 <main@@Base+0x604c>
   23584:	str	r0, [fp, #-12]
   23588:	ldr	r0, [sp, #24]
   2358c:	ldr	r1, [fp, #-12]
   23590:	cmp	r0, r1
   23594:	beq	2367c <main@@Base+0xcd30>
   23598:	movw	r0, #0
   2359c:	strb	r0, [sp, #14]
   235a0:	ldr	r0, [fp, #-8]
   235a4:	ldr	r1, [fp, #-12]
   235a8:	str	r1, [sp, #24]
   235ac:	ldr	r2, [fp, #-16]
   235b0:	add	r3, sp, #14
   235b4:	bl	1deb4 <main@@Base+0x7568>
   235b8:	str	r0, [fp, #-12]
   235bc:	ldr	r0, [sp, #24]
   235c0:	ldr	r1, [fp, #-12]
   235c4:	cmp	r0, r1
   235c8:	bne	2361c <main@@Base+0xccd0>
   235cc:	ldr	r0, [pc, #988]	; 239b0 <main@@Base+0xd064>
   235d0:	add	r3, pc, r0
   235d4:	ldr	r0, [fp, #-8]
   235d8:	ldr	r1, [fp, #-12]
   235dc:	str	r1, [sp, #24]
   235e0:	ldr	r2, [fp, #-16]
   235e4:	add	ip, sp, #14
   235e8:	str	ip, [sp]
   235ec:	bl	1df90 <main@@Base+0x7644>
   235f0:	str	r0, [fp, #-12]
   235f4:	ldr	r0, [fp, #-12]
   235f8:	ldr	r1, [sp, #24]
   235fc:	cmp	r0, r1
   23600:	beq	23614 <main@@Base+0xccc8>
   23604:	ldr	r0, [fp, #-12]
   23608:	ldr	r1, [fp, #-16]
   2360c:	cmp	r0, r1
   23610:	bne	23618 <main@@Base+0xcccc>
   23614:	b	2398c <main@@Base+0xd040>
   23618:	b	2361c <main@@Base+0xccd0>
   2361c:	ldrsb	r0, [sp, #14]
   23620:	cmp	r0, #2
   23624:	bne	2363c <main@@Base+0xccf0>
   23628:	ldr	r0, [fp, #-8]
   2362c:	ldr	r0, [r0, #8]
   23630:	and	r0, r0, #2
   23634:	cmp	r0, #0
   23638:	beq	23678 <main@@Base+0xcd2c>
   2363c:	ldr	r0, [fp, #-8]
   23640:	ldr	r0, [r0]
   23644:	movw	r1, #0
   23648:	movw	r2, #1
   2364c:	movw	r3, #1
   23650:	uxth	r3, r3
   23654:	bl	2debc <flatcc_builder_table_add@@Base>
   23658:	str	r0, [fp, #-28]	; 0xffffffe4
   2365c:	movw	r1, #0
   23660:	cmp	r0, r1
   23664:	bne	2366c <main@@Base+0xcd20>
   23668:	b	2398c <main@@Base+0xd040>
   2366c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23670:	ldrsb	r1, [sp, #14]
   23674:	bl	1e174 <main@@Base+0x7828>
   23678:	b	23680 <main@@Base+0xcd34>
   2367c:	b	23690 <main@@Base+0xcd44>
   23680:	b	23688 <main@@Base+0xcd3c>
   23684:	b	23690 <main@@Base+0xcd44>
   23688:	b	2368c <main@@Base+0xcd40>
   2368c:	b	23930 <main@@Base+0xcfe4>
   23690:	ldr	r0, [sp, #20]
   23694:	bic	r0, r0, #255	; 0xff
   23698:	movw	r1, #12800	; 0x3200
   2369c:	movt	r1, #30051	; 0x7563
   236a0:	teq	r0, r1
   236a4:	bne	237d4 <main@@Base+0xce88>
   236a8:	b	236ac <main@@Base+0xcd60>
   236ac:	ldr	r0, [fp, #-8]
   236b0:	ldr	r1, [fp, #-12]
   236b4:	str	r1, [sp, #24]
   236b8:	ldr	r2, [fp, #-16]
   236bc:	movw	r3, #3
   236c0:	bl	1c998 <main@@Base+0x604c>
   236c4:	str	r0, [fp, #-12]
   236c8:	ldr	r0, [sp, #24]
   236cc:	ldr	r1, [fp, #-12]
   236d0:	cmp	r0, r1
   236d4:	beq	237bc <main@@Base+0xce70>
   236d8:	movw	r0, #0
   236dc:	strb	r0, [sp, #13]
   236e0:	ldr	r0, [fp, #-8]
   236e4:	ldr	r1, [fp, #-12]
   236e8:	str	r1, [sp, #24]
   236ec:	ldr	r2, [fp, #-16]
   236f0:	add	r3, sp, #13
   236f4:	bl	1e284 <main@@Base+0x7938>
   236f8:	str	r0, [fp, #-12]
   236fc:	ldr	r0, [sp, #24]
   23700:	ldr	r1, [fp, #-12]
   23704:	cmp	r0, r1
   23708:	bne	2375c <main@@Base+0xce10>
   2370c:	ldr	r0, [pc, #676]	; 239b8 <main@@Base+0xd06c>
   23710:	add	r3, pc, r0
   23714:	ldr	r0, [fp, #-8]
   23718:	ldr	r1, [fp, #-12]
   2371c:	str	r1, [sp, #24]
   23720:	ldr	r2, [fp, #-16]
   23724:	add	ip, sp, #13
   23728:	str	ip, [sp]
   2372c:	bl	1e360 <main@@Base+0x7a14>
   23730:	str	r0, [fp, #-12]
   23734:	ldr	r0, [fp, #-12]
   23738:	ldr	r1, [sp, #24]
   2373c:	cmp	r0, r1
   23740:	beq	23754 <main@@Base+0xce08>
   23744:	ldr	r0, [fp, #-12]
   23748:	ldr	r1, [fp, #-16]
   2374c:	cmp	r0, r1
   23750:	bne	23758 <main@@Base+0xce0c>
   23754:	b	2398c <main@@Base+0xd040>
   23758:	b	2375c <main@@Base+0xce10>
   2375c:	ldrb	r0, [sp, #13]
   23760:	cmp	r0, #2
   23764:	bne	2377c <main@@Base+0xce30>
   23768:	ldr	r0, [fp, #-8]
   2376c:	ldr	r0, [r0, #8]
   23770:	and	r0, r0, #2
   23774:	cmp	r0, #0
   23778:	beq	237b8 <main@@Base+0xce6c>
   2377c:	ldr	r0, [fp, #-8]
   23780:	ldr	r0, [r0]
   23784:	movw	r1, #3
   23788:	movw	r2, #1
   2378c:	movw	r3, #1
   23790:	uxth	r3, r3
   23794:	bl	2debc <flatcc_builder_table_add@@Base>
   23798:	str	r0, [fp, #-28]	; 0xffffffe4
   2379c:	movw	r1, #0
   237a0:	cmp	r0, r1
   237a4:	bne	237ac <main@@Base+0xce60>
   237a8:	b	2398c <main@@Base+0xd040>
   237ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   237b0:	ldrb	r1, [sp, #13]
   237b4:	bl	1e544 <main@@Base+0x7bf8>
   237b8:	b	237d0 <main@@Base+0xce84>
   237bc:	ldr	r0, [fp, #-8]
   237c0:	ldr	r1, [fp, #-12]
   237c4:	ldr	r2, [fp, #-16]
   237c8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   237cc:	str	r0, [fp, #-12]
   237d0:	b	2392c <main@@Base+0xcfe0>
   237d4:	ldrh	r0, [sp, #22]
   237d8:	movw	r1, #0
   237dc:	movt	r1, #30051	; 0x7563
   237e0:	teq	r1, r0, lsl #16
   237e4:	bne	23914 <main@@Base+0xcfc8>
   237e8:	b	237ec <main@@Base+0xcea0>
   237ec:	ldr	r0, [fp, #-8]
   237f0:	ldr	r1, [fp, #-12]
   237f4:	str	r1, [sp, #24]
   237f8:	ldr	r2, [fp, #-16]
   237fc:	movw	r3, #2
   23800:	bl	1c998 <main@@Base+0x604c>
   23804:	str	r0, [fp, #-12]
   23808:	ldr	r0, [sp, #24]
   2380c:	ldr	r1, [fp, #-12]
   23810:	cmp	r0, r1
   23814:	beq	238fc <main@@Base+0xcfb0>
   23818:	movw	r0, #0
   2381c:	strb	r0, [sp, #12]
   23820:	ldr	r0, [fp, #-8]
   23824:	ldr	r1, [fp, #-12]
   23828:	str	r1, [sp, #24]
   2382c:	ldr	r2, [fp, #-16]
   23830:	add	r3, sp, #12
   23834:	bl	1e284 <main@@Base+0x7938>
   23838:	str	r0, [fp, #-12]
   2383c:	ldr	r0, [sp, #24]
   23840:	ldr	r1, [fp, #-12]
   23844:	cmp	r0, r1
   23848:	bne	2389c <main@@Base+0xcf50>
   2384c:	ldr	r0, [pc, #352]	; 239b4 <main@@Base+0xd068>
   23850:	add	r3, pc, r0
   23854:	ldr	r0, [fp, #-8]
   23858:	ldr	r1, [fp, #-12]
   2385c:	str	r1, [sp, #24]
   23860:	ldr	r2, [fp, #-16]
   23864:	add	ip, sp, #12
   23868:	str	ip, [sp]
   2386c:	bl	1e360 <main@@Base+0x7a14>
   23870:	str	r0, [fp, #-12]
   23874:	ldr	r0, [fp, #-12]
   23878:	ldr	r1, [sp, #24]
   2387c:	cmp	r0, r1
   23880:	beq	23894 <main@@Base+0xcf48>
   23884:	ldr	r0, [fp, #-12]
   23888:	ldr	r1, [fp, #-16]
   2388c:	cmp	r0, r1
   23890:	bne	23898 <main@@Base+0xcf4c>
   23894:	b	2398c <main@@Base+0xd040>
   23898:	b	2389c <main@@Base+0xcf50>
   2389c:	ldrb	r0, [sp, #12]
   238a0:	cmp	r0, #2
   238a4:	bne	238bc <main@@Base+0xcf70>
   238a8:	ldr	r0, [fp, #-8]
   238ac:	ldr	r0, [r0, #8]
   238b0:	and	r0, r0, #2
   238b4:	cmp	r0, #0
   238b8:	beq	238f8 <main@@Base+0xcfac>
   238bc:	ldr	r0, [fp, #-8]
   238c0:	ldr	r0, [r0]
   238c4:	movw	r1, #2
   238c8:	movw	r2, #1
   238cc:	movw	r3, #1
   238d0:	uxth	r3, r3
   238d4:	bl	2debc <flatcc_builder_table_add@@Base>
   238d8:	str	r0, [fp, #-28]	; 0xffffffe4
   238dc:	movw	r1, #0
   238e0:	cmp	r0, r1
   238e4:	bne	238ec <main@@Base+0xcfa0>
   238e8:	b	2398c <main@@Base+0xd040>
   238ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   238f0:	ldrb	r1, [sp, #12]
   238f4:	bl	1e544 <main@@Base+0x7bf8>
   238f8:	b	23910 <main@@Base+0xcfc4>
   238fc:	ldr	r0, [fp, #-8]
   23900:	ldr	r1, [fp, #-12]
   23904:	ldr	r2, [fp, #-16]
   23908:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   2390c:	str	r0, [fp, #-12]
   23910:	b	23928 <main@@Base+0xcfdc>
   23914:	ldr	r0, [fp, #-8]
   23918:	ldr	r1, [fp, #-12]
   2391c:	ldr	r2, [fp, #-16]
   23920:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   23924:	str	r0, [fp, #-12]
   23928:	b	2392c <main@@Base+0xcfe0>
   2392c:	b	23930 <main@@Base+0xcfe4>
   23930:	ldr	r0, [fp, #-8]
   23934:	ldr	r1, [fp, #-12]
   23938:	ldr	r2, [fp, #-16]
   2393c:	sub	r3, fp, #24
   23940:	bl	21984 <main@@Base+0xb038>
   23944:	str	r0, [fp, #-12]
   23948:	b	233c4 <main@@Base+0xca78>
   2394c:	ldr	r0, [fp, #-8]
   23950:	ldr	r0, [r0, #24]
   23954:	cmp	r0, #0
   23958:	beq	23960 <main@@Base+0xd014>
   2395c:	b	2398c <main@@Base+0xd040>
   23960:	ldr	r0, [fp, #-8]
   23964:	ldr	r0, [r0]
   23968:	bl	2d280 <flatcc_builder_end_table@@Base>
   2396c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23970:	str	r0, [r1]
   23974:	cmp	r0, #0
   23978:	bne	23980 <main@@Base+0xd034>
   2397c:	b	2398c <main@@Base+0xd040>
   23980:	ldr	r0, [fp, #-12]
   23984:	str	r0, [fp, #-4]
   23988:	b	239a4 <main@@Base+0xd058>
   2398c:	ldr	r0, [fp, #-8]
   23990:	ldr	r1, [fp, #-12]
   23994:	ldr	r2, [fp, #-16]
   23998:	movw	r3, #33	; 0x21
   2399c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   239a0:	str	r0, [fp, #-4]
   239a4:	ldr	r0, [fp, #-4]
   239a8:	mov	sp, fp
   239ac:	pop	{fp, pc}
   239b0:	andeq	fp, r3, r8, lsr #24
   239b4:	andeq	fp, r3, r4, asr #19
   239b8:	strdeq	fp, [r3], -r8
   239bc:	andeq	fp, r3, ip, asr sp
   239c0:	push	{fp, lr}
   239c4:	mov	fp, sp
   239c8:	sub	sp, sp, #24
   239cc:	str	r0, [fp, #-8]
   239d0:	str	r1, [sp, #12]
   239d4:	str	r2, [sp, #8]
   239d8:	str	r3, [sp, #4]
   239dc:	ldr	r0, [sp, #4]
   239e0:	movw	r1, #0
   239e4:	str	r1, [r0]
   239e8:	ldr	r0, [fp, #-8]
   239ec:	ldr	r0, [r0]
   239f0:	bl	2c618 <flatcc_builder_start_table@@Base>
   239f4:	cmp	r0, #0
   239f8:	beq	23a00 <main@@Base+0xd0b4>
   239fc:	b	23aa8 <main@@Base+0xd15c>
   23a00:	ldr	r0, [fp, #-8]
   23a04:	ldr	r1, [sp, #12]
   23a08:	ldr	r2, [sp, #8]
   23a0c:	mov	r3, sp
   23a10:	bl	1c7d0 <main@@Base+0x5e84>
   23a14:	str	r0, [sp, #12]
   23a18:	ldr	r0, [sp]
   23a1c:	cmp	r0, #0
   23a20:	beq	23a68 <main@@Base+0xd11c>
   23a24:	ldr	r0, [fp, #-8]
   23a28:	ldr	r1, [sp, #12]
   23a2c:	ldr	r2, [sp, #8]
   23a30:	bl	1c8b4 <main@@Base+0x5f68>
   23a34:	str	r0, [sp, #12]
   23a38:	ldr	r0, [fp, #-8]
   23a3c:	ldr	r1, [sp, #12]
   23a40:	ldr	r2, [sp, #8]
   23a44:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   23a48:	str	r0, [sp, #12]
   23a4c:	ldr	r0, [fp, #-8]
   23a50:	ldr	r1, [sp, #12]
   23a54:	ldr	r2, [sp, #8]
   23a58:	mov	r3, sp
   23a5c:	bl	21984 <main@@Base+0xb038>
   23a60:	str	r0, [sp, #12]
   23a64:	b	23a18 <main@@Base+0xd0cc>
   23a68:	ldr	r0, [fp, #-8]
   23a6c:	ldr	r0, [r0, #24]
   23a70:	cmp	r0, #0
   23a74:	beq	23a7c <main@@Base+0xd130>
   23a78:	b	23aa8 <main@@Base+0xd15c>
   23a7c:	ldr	r0, [fp, #-8]
   23a80:	ldr	r0, [r0]
   23a84:	bl	2d280 <flatcc_builder_end_table@@Base>
   23a88:	ldr	r1, [sp, #4]
   23a8c:	str	r0, [r1]
   23a90:	cmp	r0, #0
   23a94:	bne	23a9c <main@@Base+0xd150>
   23a98:	b	23aa8 <main@@Base+0xd15c>
   23a9c:	ldr	r0, [sp, #12]
   23aa0:	str	r0, [fp, #-4]
   23aa4:	b	23ac0 <main@@Base+0xd174>
   23aa8:	ldr	r0, [fp, #-8]
   23aac:	ldr	r1, [sp, #12]
   23ab0:	ldr	r2, [sp, #8]
   23ab4:	movw	r3, #33	; 0x21
   23ab8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   23abc:	str	r0, [fp, #-4]
   23ac0:	ldr	r0, [fp, #-4]
   23ac4:	mov	sp, fp
   23ac8:	pop	{fp, pc}
   23acc:	push	{r4, sl, fp, lr}
   23ad0:	add	fp, sp, #8
   23ad4:	sub	sp, sp, #96	; 0x60
   23ad8:	str	r0, [fp, #-16]
   23adc:	str	r1, [fp, #-20]	; 0xffffffec
   23ae0:	str	r2, [fp, #-24]	; 0xffffffe8
   23ae4:	str	r3, [fp, #-28]	; 0xffffffe4
   23ae8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23aec:	movw	r1, #0
   23af0:	str	r1, [r0]
   23af4:	ldr	r0, [fp, #-16]
   23af8:	ldr	r0, [r0]
   23afc:	movw	r1, #4
   23b00:	bl	2c618 <flatcc_builder_start_table@@Base>
   23b04:	cmp	r0, #0
   23b08:	beq	23b10 <main@@Base+0xd1c4>
   23b0c:	b	23fc0 <main@@Base+0xd674>
   23b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23b14:	ldr	r1, [fp, #-16]
   23b18:	ldr	r2, [fp, #-20]	; 0xffffffec
   23b1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23b20:	str	r0, [sp, #40]	; 0x28
   23b24:	mov	r0, r1
   23b28:	mov	r1, r2
   23b2c:	mov	r2, r3
   23b30:	movw	r3, #1
   23b34:	add	ip, sp, #44	; 0x2c
   23b38:	str	ip, [sp]
   23b3c:	bl	371ec <flatcc_json_parser_prepare_unions@@Base>
   23b40:	ldr	r1, [sp, #40]	; 0x28
   23b44:	cmp	r1, r0
   23b48:	bne	23b50 <main@@Base+0xd204>
   23b4c:	b	23fc0 <main@@Base+0xd674>
   23b50:	ldr	r0, [fp, #-16]
   23b54:	ldr	r1, [fp, #-20]	; 0xffffffec
   23b58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23b5c:	sub	r3, fp, #32
   23b60:	bl	1c7d0 <main@@Base+0x5e84>
   23b64:	str	r0, [fp, #-20]	; 0xffffffec
   23b68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23b6c:	cmp	r0, #0
   23b70:	beq	23f68 <main@@Base+0xd61c>
   23b74:	ldr	r0, [fp, #-16]
   23b78:	ldr	r1, [fp, #-20]	; 0xffffffec
   23b7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23b80:	bl	1c8b4 <main@@Base+0x5f68>
   23b84:	str	r0, [fp, #-20]	; 0xffffffec
   23b88:	ldr	r0, [fp, #-20]	; 0xffffffec
   23b8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23b90:	bl	1c960 <main@@Base+0x6014>
   23b94:	str	r1, [sp, #52]	; 0x34
   23b98:	str	r0, [sp, #48]	; 0x30
   23b9c:	ldr	r0, [sp, #48]	; 0x30
   23ba0:	ldr	r1, [sp, #52]	; 0x34
   23ba4:	movw	r2, #28281	; 0x6e79
   23ba8:	movt	r2, #28001	; 0x6d61
   23bac:	eor	r1, r1, r2
   23bb0:	movw	r2, #31071	; 0x795f
   23bb4:	movt	r2, #24942	; 0x616e
   23bb8:	eor	r0, r0, r2
   23bbc:	orr	r0, r0, r1
   23bc0:	cmp	r0, #0
   23bc4:	bne	23cd8 <main@@Base+0xd38c>
   23bc8:	b	23bcc <main@@Base+0xd280>
   23bcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   23bd0:	add	r0, r0, #8
   23bd4:	str	r0, [fp, #-20]	; 0xffffffec
   23bd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   23bdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23be0:	bl	1c960 <main@@Base+0x6014>
   23be4:	str	r1, [sp, #52]	; 0x34
   23be8:	str	r0, [sp, #48]	; 0x30
   23bec:	ldr	r0, [sp, #52]	; 0x34
   23bf0:	movw	r1, #28773	; 0x7065
   23bf4:	movt	r1, #29817	; 0x7479
   23bf8:	teq	r0, r1
   23bfc:	bne	23cc0 <main@@Base+0xd374>
   23c00:	b	23c04 <main@@Base+0xd2b8>
   23c04:	ldr	r0, [fp, #-16]
   23c08:	ldr	r1, [fp, #-20]	; 0xffffffec
   23c0c:	str	r1, [fp, #-48]	; 0xffffffd0
   23c10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23c14:	movw	r3, #4
   23c18:	bl	1c998 <main@@Base+0x604c>
   23c1c:	str	r0, [fp, #-20]	; 0xffffffec
   23c20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23c24:	ldr	r1, [fp, #-20]	; 0xffffffec
   23c28:	cmp	r0, r1
   23c2c:	beq	23ca8 <main@@Base+0xd35c>
   23c30:	ldr	r0, [pc, #944]	; 23fe8 <main@@Base+0xd69c>
   23c34:	add	r0, pc, r0
   23c38:	ldr	r1, [pc, #940]	; 23fec <main@@Base+0xd6a0>
   23c3c:	add	r1, pc, r1
   23c40:	ldr	r2, [pc, #936]	; 23ff0 <main@@Base+0xd6a4>
   23c44:	add	r2, pc, r2
   23c48:	ldr	r3, [fp, #-16]
   23c4c:	ldr	ip, [fp, #-20]	; 0xffffffec
   23c50:	ldr	lr, [fp, #-24]	; 0xffffffe8
   23c54:	ldr	r4, [sp, #44]	; 0x2c
   23c58:	str	r0, [sp, #36]	; 0x24
   23c5c:	mov	r0, r3
   23c60:	str	r1, [sp, #32]
   23c64:	mov	r1, ip
   23c68:	str	r2, [sp, #28]
   23c6c:	mov	r2, lr
   23c70:	movw	r3, #0
   23c74:	movw	ip, #3
   23c78:	uxth	ip, ip
   23c7c:	str	ip, [sp]
   23c80:	str	r4, [sp, #4]
   23c84:	ldr	ip, [sp, #36]	; 0x24
   23c88:	str	ip, [sp, #8]
   23c8c:	ldr	lr, [sp, #32]
   23c90:	str	lr, [sp, #12]
   23c94:	ldr	r4, [sp, #28]
   23c98:	str	r4, [sp, #16]
   23c9c:	bl	37df0 <flatcc_json_parser_union_type_vector@@Base>
   23ca0:	str	r0, [fp, #-20]	; 0xffffffec
   23ca4:	b	23cbc <main@@Base+0xd370>
   23ca8:	ldr	r0, [fp, #-16]
   23cac:	ldr	r1, [fp, #-20]	; 0xffffffec
   23cb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23cb4:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   23cb8:	str	r0, [fp, #-20]	; 0xffffffec
   23cbc:	b	23cd4 <main@@Base+0xd388>
   23cc0:	ldr	r0, [fp, #-16]
   23cc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   23cc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23ccc:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   23cd0:	str	r0, [fp, #-20]	; 0xffffffec
   23cd4:	b	23f4c <main@@Base+0xd600>
   23cd8:	ldr	r0, [sp, #48]	; 0x30
   23cdc:	ldr	r1, [sp, #52]	; 0x34
   23ce0:	movw	r2, #24942	; 0x616e
   23ce4:	movt	r2, #109	; 0x6d
   23ce8:	eor	r2, r2, r1, lsr #8
   23cec:	lsr	r0, r0, #8
   23cf0:	orr	r0, r0, r1, lsl #24
   23cf4:	movw	r1, #28281	; 0x6e79
   23cf8:	movt	r1, #31073	; 0x7961
   23cfc:	eor	r0, r0, r1
   23d00:	orr	r0, r0, r2
   23d04:	cmp	r0, #0
   23d08:	bne	23d94 <main@@Base+0xd448>
   23d0c:	b	23d10 <main@@Base+0xd3c4>
   23d10:	ldr	r0, [fp, #-16]
   23d14:	ldr	r1, [fp, #-20]	; 0xffffffec
   23d18:	str	r1, [fp, #-48]	; 0xffffffd0
   23d1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23d20:	movw	r3, #7
   23d24:	bl	1c998 <main@@Base+0x604c>
   23d28:	str	r0, [fp, #-20]	; 0xffffffec
   23d2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23d30:	ldr	r1, [fp, #-20]	; 0xffffffec
   23d34:	cmp	r0, r1
   23d38:	beq	23d8c <main@@Base+0xd440>
   23d3c:	ldr	r0, [pc, #672]	; 23fe4 <main@@Base+0xd698>
   23d40:	add	r0, pc, r0
   23d44:	ldr	r1, [fp, #-16]
   23d48:	ldr	r2, [fp, #-20]	; 0xffffffec
   23d4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23d50:	ldr	ip, [sp, #44]	; 0x2c
   23d54:	str	r0, [sp, #24]
   23d58:	mov	r0, r1
   23d5c:	mov	r1, r2
   23d60:	mov	r2, r3
   23d64:	movw	r3, #0
   23d68:	movw	lr, #3
   23d6c:	uxth	lr, lr
   23d70:	str	lr, [sp]
   23d74:	str	ip, [sp, #4]
   23d78:	ldr	ip, [sp, #24]
   23d7c:	str	ip, [sp, #8]
   23d80:	bl	37a60 <flatcc_json_parser_union_vector@@Base>
   23d84:	str	r0, [fp, #-20]	; 0xffffffec
   23d88:	b	23d90 <main@@Base+0xd444>
   23d8c:	b	23d9c <main@@Base+0xd450>
   23d90:	b	23d98 <main@@Base+0xd44c>
   23d94:	b	23d9c <main@@Base+0xd450>
   23d98:	b	23f48 <main@@Base+0xd5fc>
   23d9c:	ldrh	r0, [sp, #50]	; 0x32
   23da0:	ldr	r1, [sp, #52]	; 0x34
   23da4:	movw	r2, #28786	; 0x7072
   23da8:	eor	r2, r2, r1, lsr #16
   23dac:	orr	r0, r0, r1, lsl #16
   23db0:	movw	r1, #27000	; 0x6978
   23db4:	movt	r1, #25958	; 0x6566
   23db8:	eor	r0, r0, r1
   23dbc:	orr	r0, r0, r2
   23dc0:	cmp	r0, #0
   23dc4:	bne	23e68 <main@@Base+0xd51c>
   23dc8:	b	23dcc <main@@Base+0xd480>
   23dcc:	ldr	r0, [fp, #-16]
   23dd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23dd4:	str	r1, [fp, #-48]	; 0xffffffd0
   23dd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23ddc:	movw	r3, #6
   23de0:	bl	1c998 <main@@Base+0x604c>
   23de4:	str	r0, [fp, #-20]	; 0xffffffec
   23de8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23dec:	ldr	r1, [fp, #-20]	; 0xffffffec
   23df0:	cmp	r0, r1
   23df4:	beq	23e50 <main@@Base+0xd504>
   23df8:	ldr	r0, [fp, #-16]
   23dfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   23e00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23e04:	sub	r3, fp, #40	; 0x28
   23e08:	bl	24084 <main@@Base+0xd738>
   23e0c:	str	r0, [fp, #-20]	; 0xffffffec
   23e10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23e14:	cmp	r0, #0
   23e18:	beq	23e3c <main@@Base+0xd4f0>
   23e1c:	ldr	r0, [fp, #-16]
   23e20:	ldr	r0, [r0]
   23e24:	movw	r1, #0
   23e28:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   23e2c:	str	r0, [fp, #-44]	; 0xffffffd4
   23e30:	movw	r1, #0
   23e34:	cmp	r0, r1
   23e38:	bne	23e40 <main@@Base+0xd4f4>
   23e3c:	b	23fc0 <main@@Base+0xd674>
   23e40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23e44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23e48:	str	r0, [r1]
   23e4c:	b	23e64 <main@@Base+0xd518>
   23e50:	ldr	r0, [fp, #-16]
   23e54:	ldr	r1, [fp, #-20]	; 0xffffffec
   23e58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23e5c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   23e60:	str	r0, [fp, #-20]	; 0xffffffec
   23e64:	b	23f44 <main@@Base+0xd5f8>
   23e68:	ldrb	r0, [sp, #51]	; 0x33
   23e6c:	ldr	r1, [sp, #52]	; 0x34
   23e70:	movw	r2, #30313	; 0x7669
   23e74:	movt	r2, #28015	; 0x6d6f
   23e78:	eor	r1, r1, r2
   23e7c:	eor	r0, r0, #101	; 0x65
   23e80:	orr	r0, r1, r0, lsl #24
   23e84:	cmp	r0, #0
   23e88:	bne	23f2c <main@@Base+0xd5e0>
   23e8c:	b	23e90 <main@@Base+0xd544>
   23e90:	ldr	r0, [fp, #-16]
   23e94:	ldr	r1, [fp, #-20]	; 0xffffffec
   23e98:	str	r1, [fp, #-48]	; 0xffffffd0
   23e9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23ea0:	movw	r3, #5
   23ea4:	bl	1c998 <main@@Base+0x604c>
   23ea8:	str	r0, [fp, #-20]	; 0xffffffec
   23eac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23eb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23eb4:	cmp	r0, r1
   23eb8:	beq	23f14 <main@@Base+0xd5c8>
   23ebc:	ldr	r0, [fp, #-16]
   23ec0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23ec4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23ec8:	sub	r3, fp, #40	; 0x28
   23ecc:	bl	244c4 <main@@Base+0xdb78>
   23ed0:	str	r0, [fp, #-20]	; 0xffffffec
   23ed4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23ed8:	cmp	r0, #0
   23edc:	beq	23f00 <main@@Base+0xd5b4>
   23ee0:	ldr	r0, [fp, #-16]
   23ee4:	ldr	r0, [r0]
   23ee8:	movw	r1, #1
   23eec:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   23ef0:	str	r0, [fp, #-44]	; 0xffffffd4
   23ef4:	movw	r1, #0
   23ef8:	cmp	r0, r1
   23efc:	bne	23f04 <main@@Base+0xd5b8>
   23f00:	b	23fc0 <main@@Base+0xd674>
   23f04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23f08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23f0c:	str	r0, [r1]
   23f10:	b	23f28 <main@@Base+0xd5dc>
   23f14:	ldr	r0, [fp, #-16]
   23f18:	ldr	r1, [fp, #-20]	; 0xffffffec
   23f1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23f20:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   23f24:	str	r0, [fp, #-20]	; 0xffffffec
   23f28:	b	23f40 <main@@Base+0xd5f4>
   23f2c:	ldr	r0, [fp, #-16]
   23f30:	ldr	r1, [fp, #-20]	; 0xffffffec
   23f34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23f38:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   23f3c:	str	r0, [fp, #-20]	; 0xffffffec
   23f40:	b	23f44 <main@@Base+0xd5f8>
   23f44:	b	23f48 <main@@Base+0xd5fc>
   23f48:	b	23f4c <main@@Base+0xd600>
   23f4c:	ldr	r0, [fp, #-16]
   23f50:	ldr	r1, [fp, #-20]	; 0xffffffec
   23f54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23f58:	sub	r3, fp, #32
   23f5c:	bl	21984 <main@@Base+0xb038>
   23f60:	str	r0, [fp, #-20]	; 0xffffffec
   23f64:	b	23b68 <main@@Base+0xd21c>
   23f68:	ldr	r0, [fp, #-16]
   23f6c:	ldr	r0, [r0, #24]
   23f70:	cmp	r0, #0
   23f74:	beq	23f7c <main@@Base+0xd630>
   23f78:	b	23fc0 <main@@Base+0xd674>
   23f7c:	ldr	r0, [fp, #-16]
   23f80:	ldr	r1, [fp, #-20]	; 0xffffffec
   23f84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23f88:	ldr	r3, [sp, #44]	; 0x2c
   23f8c:	bl	37294 <flatcc_json_parser_finalize_unions@@Base>
   23f90:	str	r0, [fp, #-20]	; 0xffffffec
   23f94:	ldr	r0, [fp, #-16]
   23f98:	ldr	r0, [r0]
   23f9c:	bl	2d280 <flatcc_builder_end_table@@Base>
   23fa0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23fa4:	str	r0, [r1]
   23fa8:	cmp	r0, #0
   23fac:	bne	23fb4 <main@@Base+0xd668>
   23fb0:	b	23fc0 <main@@Base+0xd674>
   23fb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   23fb8:	str	r0, [fp, #-12]
   23fbc:	b	23fd8 <main@@Base+0xd68c>
   23fc0:	ldr	r0, [fp, #-16]
   23fc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   23fc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23fcc:	movw	r3, #33	; 0x21
   23fd0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   23fd4:	str	r0, [fp, #-12]
   23fd8:	ldr	r0, [fp, #-12]
   23fdc:	sub	sp, fp, #8
   23fe0:	pop	{r4, sl, fp, pc}
   23fe4:			; <UNDEFINED> instruction: 0xffffb768
   23fe8:	andeq	fp, r3, ip, ror #11
   23fec:			; <UNDEFINED> instruction: 0xffffb86c
   23ff0:	andeq	r0, r0, r8, lsr #7
   23ff4:	sub	sp, sp, #12
   23ff8:	strb	r0, [sp, #7]
   23ffc:	ldrb	r0, [sp, #7]
   24000:	mov	r1, r0
   24004:	cmp	r0, #4
   24008:	str	r1, [sp]
   2400c:	bhi	24070 <main@@Base+0xd724>
   24010:	add	r0, pc, #8
   24014:	ldr	r1, [sp]
   24018:	ldr	r2, [r0, r1, lsl #2]
   2401c:	add	pc, r0, r2
   24020:	andeq	r0, r0, r4, lsl r0
   24024:	andeq	r0, r0, r0, lsr #32
   24028:	andeq	r0, r0, ip, lsr #32
   2402c:	andeq	r0, r0, r8, lsr r0
   24030:	andeq	r0, r0, r4, asr #32
   24034:	movw	r0, #1
   24038:	str	r0, [sp, #8]
   2403c:	b	24078 <main@@Base+0xd72c>
   24040:	movw	r0, #1
   24044:	str	r0, [sp, #8]
   24048:	b	24078 <main@@Base+0xd72c>
   2404c:	movw	r0, #1
   24050:	str	r0, [sp, #8]
   24054:	b	24078 <main@@Base+0xd72c>
   24058:	movw	r0, #1
   2405c:	str	r0, [sp, #8]
   24060:	b	24078 <main@@Base+0xd72c>
   24064:	movw	r0, #1
   24068:	str	r0, [sp, #8]
   2406c:	b	24078 <main@@Base+0xd72c>
   24070:	movw	r0, #0
   24074:	str	r0, [sp, #8]
   24078:	ldr	r0, [sp, #8]
   2407c:	add	sp, sp, #12
   24080:	bx	lr
   24084:	push	{fp, lr}
   24088:	mov	fp, sp
   2408c:	sub	sp, sp, #48	; 0x30
   24090:	str	r0, [fp, #-8]
   24094:	str	r1, [fp, #-12]
   24098:	str	r2, [fp, #-16]
   2409c:	str	r3, [fp, #-20]	; 0xffffffec
   240a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   240a4:	movw	r1, #0
   240a8:	str	r1, [r0]
   240ac:	ldr	r0, [fp, #-8]
   240b0:	ldr	r0, [r0]
   240b4:	movw	r1, #3
   240b8:	bl	2c618 <flatcc_builder_start_table@@Base>
   240bc:	cmp	r0, #0
   240c0:	beq	240c8 <main@@Base+0xd77c>
   240c4:	b	244a0 <main@@Base+0xdb54>
   240c8:	ldr	r0, [fp, #-8]
   240cc:	ldr	r1, [fp, #-12]
   240d0:	ldr	r2, [fp, #-16]
   240d4:	add	r3, sp, #24
   240d8:	bl	1c7d0 <main@@Base+0x5e84>
   240dc:	str	r0, [fp, #-12]
   240e0:	ldr	r0, [sp, #24]
   240e4:	cmp	r0, #0
   240e8:	beq	24460 <main@@Base+0xdb14>
   240ec:	ldr	r0, [fp, #-8]
   240f0:	ldr	r1, [fp, #-12]
   240f4:	ldr	r2, [fp, #-16]
   240f8:	bl	1c8b4 <main@@Base+0x5f68>
   240fc:	str	r0, [fp, #-12]
   24100:	ldr	r0, [fp, #-12]
   24104:	ldr	r1, [fp, #-16]
   24108:	bl	1c960 <main@@Base+0x6014>
   2410c:	str	r1, [sp, #4]
   24110:	str	r0, [sp]
   24114:	ldr	r0, [sp]
   24118:	ldr	r1, [sp, #4]
   2411c:	movw	r2, #29556	; 0x7374
   24120:	movt	r2, #29797	; 0x7465
   24124:	eor	r1, r1, r2
   24128:	movw	r2, #28526	; 0x6f6e
   2412c:	movt	r2, #27251	; 0x6a73
   24130:	eor	r0, r0, r2
   24134:	orr	r0, r0, r1
   24138:	cmp	r0, #0
   2413c:	bne	24430 <main@@Base+0xdae4>
   24140:	b	24144 <main@@Base+0xd7f8>
   24144:	ldr	r0, [fp, #-12]
   24148:	add	r0, r0, #8
   2414c:	str	r0, [fp, #-12]
   24150:	ldr	r0, [fp, #-12]
   24154:	ldr	r1, [fp, #-16]
   24158:	bl	1c960 <main@@Base+0x6014>
   2415c:	str	r1, [sp, #4]
   24160:	str	r0, [sp]
   24164:	ldr	r0, [sp]
   24168:	ldr	r1, [sp, #4]
   2416c:	movw	r2, #25958	; 0x6566
   24170:	movt	r2, #28786	; 0x7072
   24174:	eor	r1, r1, r2
   24178:	movw	r2, #28769	; 0x7061
   2417c:	movt	r2, #27000	; 0x6978
   24180:	eor	r0, r0, r2
   24184:	orr	r0, r0, r1
   24188:	cmp	r0, #0
   2418c:	bne	24418 <main@@Base+0xdacc>
   24190:	b	24194 <main@@Base+0xd848>
   24194:	ldr	r0, [fp, #-12]
   24198:	add	r0, r0, #8
   2419c:	str	r0, [fp, #-12]
   241a0:	ldr	r0, [fp, #-12]
   241a4:	ldr	r1, [fp, #-16]
   241a8:	bl	1c960 <main@@Base+0x6014>
   241ac:	str	r1, [sp, #4]
   241b0:	str	r0, [sp]
   241b4:	ldrh	r0, [sp, #2]
   241b8:	ldr	r1, [sp, #4]
   241bc:	movw	r2, #29299	; 0x7273
   241c0:	eor	r2, r2, r1, lsr #16
   241c4:	orr	r0, r0, r1, lsl #16
   241c8:	movw	r1, #26418	; 0x6732
   241cc:	movt	r1, #26990	; 0x696e
   241d0:	eor	r0, r0, r1
   241d4:	orr	r0, r0, r2
   241d8:	cmp	r0, #0
   241dc:	bne	24270 <main@@Base+0xd924>
   241e0:	b	241e4 <main@@Base+0xd898>
   241e4:	ldr	r0, [fp, #-8]
   241e8:	ldr	r1, [fp, #-12]
   241ec:	str	r1, [sp, #8]
   241f0:	ldr	r2, [fp, #-16]
   241f4:	movw	r3, #6
   241f8:	bl	1c998 <main@@Base+0x604c>
   241fc:	str	r0, [fp, #-12]
   24200:	ldr	r0, [sp, #8]
   24204:	ldr	r1, [fp, #-12]
   24208:	cmp	r0, r1
   2420c:	beq	24268 <main@@Base+0xd91c>
   24210:	ldr	r0, [fp, #-8]
   24214:	ldr	r1, [fp, #-12]
   24218:	ldr	r2, [fp, #-16]
   2421c:	add	r3, sp, #16
   24220:	bl	25144 <main@@Base+0xe7f8>
   24224:	str	r0, [fp, #-12]
   24228:	ldr	r0, [sp, #16]
   2422c:	cmp	r0, #0
   24230:	beq	24254 <main@@Base+0xd908>
   24234:	ldr	r0, [fp, #-8]
   24238:	ldr	r0, [r0]
   2423c:	movw	r1, #1
   24240:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   24244:	str	r0, [sp, #12]
   24248:	movw	r1, #0
   2424c:	cmp	r0, r1
   24250:	bne	24258 <main@@Base+0xd90c>
   24254:	b	244a0 <main@@Base+0xdb54>
   24258:	ldr	r0, [sp, #16]
   2425c:	ldr	r1, [sp, #12]
   24260:	str	r0, [r1]
   24264:	b	2426c <main@@Base+0xd920>
   24268:	b	24330 <main@@Base+0xd9e4>
   2426c:	b	2432c <main@@Base+0xd9e0>
   24270:	ldrb	r0, [sp, #3]
   24274:	ldr	r1, [sp, #4]
   24278:	movw	r2, #26990	; 0x696e
   2427c:	movt	r2, #29299	; 0x7273
   24280:	eor	r1, r1, r2
   24284:	eor	r0, r0, #103	; 0x67
   24288:	orr	r0, r1, r0, lsl #24
   2428c:	cmp	r0, #0
   24290:	bne	24324 <main@@Base+0xd9d8>
   24294:	b	24298 <main@@Base+0xd94c>
   24298:	ldr	r0, [fp, #-8]
   2429c:	ldr	r1, [fp, #-12]
   242a0:	str	r1, [sp, #8]
   242a4:	ldr	r2, [fp, #-16]
   242a8:	movw	r3, #5
   242ac:	bl	1c998 <main@@Base+0x604c>
   242b0:	str	r0, [fp, #-12]
   242b4:	ldr	r0, [sp, #8]
   242b8:	ldr	r1, [fp, #-12]
   242bc:	cmp	r0, r1
   242c0:	beq	2431c <main@@Base+0xd9d0>
   242c4:	ldr	r0, [fp, #-8]
   242c8:	ldr	r1, [fp, #-12]
   242cc:	ldr	r2, [fp, #-16]
   242d0:	add	r3, sp, #16
   242d4:	bl	255a8 <main@@Base+0xec5c>
   242d8:	str	r0, [fp, #-12]
   242dc:	ldr	r0, [sp, #16]
   242e0:	cmp	r0, #0
   242e4:	beq	24308 <main@@Base+0xd9bc>
   242e8:	ldr	r0, [fp, #-8]
   242ec:	ldr	r0, [r0]
   242f0:	movw	r1, #0
   242f4:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   242f8:	str	r0, [sp, #12]
   242fc:	movw	r1, #0
   24300:	cmp	r0, r1
   24304:	bne	2430c <main@@Base+0xd9c0>
   24308:	b	244a0 <main@@Base+0xdb54>
   2430c:	ldr	r0, [sp, #16]
   24310:	ldr	r1, [sp, #12]
   24314:	str	r0, [r1]
   24318:	b	24320 <main@@Base+0xd9d4>
   2431c:	b	24330 <main@@Base+0xd9e4>
   24320:	b	24328 <main@@Base+0xd9dc>
   24324:	b	24330 <main@@Base+0xd9e4>
   24328:	b	2432c <main@@Base+0xd9e0>
   2432c:	b	24414 <main@@Base+0xdac8>
   24330:	ldrh	r0, [sp, #2]
   24334:	ldr	r1, [sp, #4]
   24338:	movw	r2, #29299	; 0x7273
   2433c:	eor	r2, r2, r1, lsr #16
   24340:	orr	r0, r0, r1, lsl #16
   24344:	movw	r1, #26419	; 0x6733
   24348:	movt	r1, #26990	; 0x696e
   2434c:	eor	r0, r0, r1
   24350:	orr	r0, r0, r2
   24354:	cmp	r0, #0
   24358:	bne	243fc <main@@Base+0xdab0>
   2435c:	b	24360 <main@@Base+0xda14>
   24360:	ldr	r0, [fp, #-8]
   24364:	ldr	r1, [fp, #-12]
   24368:	str	r1, [sp, #8]
   2436c:	ldr	r2, [fp, #-16]
   24370:	movw	r3, #6
   24374:	bl	1c998 <main@@Base+0x604c>
   24378:	str	r0, [fp, #-12]
   2437c:	ldr	r0, [sp, #8]
   24380:	ldr	r1, [fp, #-12]
   24384:	cmp	r0, r1
   24388:	beq	243e4 <main@@Base+0xda98>
   2438c:	ldr	r0, [fp, #-8]
   24390:	ldr	r1, [fp, #-12]
   24394:	ldr	r2, [fp, #-16]
   24398:	add	r3, sp, #16
   2439c:	bl	261e0 <main@@Base+0xf894>
   243a0:	str	r0, [fp, #-12]
   243a4:	ldr	r0, [sp, #16]
   243a8:	cmp	r0, #0
   243ac:	beq	243d0 <main@@Base+0xda84>
   243b0:	ldr	r0, [fp, #-8]
   243b4:	ldr	r0, [r0]
   243b8:	movw	r1, #2
   243bc:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   243c0:	str	r0, [sp, #12]
   243c4:	movw	r1, #0
   243c8:	cmp	r0, r1
   243cc:	bne	243d4 <main@@Base+0xda88>
   243d0:	b	244a0 <main@@Base+0xdb54>
   243d4:	ldr	r0, [sp, #16]
   243d8:	ldr	r1, [sp, #12]
   243dc:	str	r0, [r1]
   243e0:	b	243f8 <main@@Base+0xdaac>
   243e4:	ldr	r0, [fp, #-8]
   243e8:	ldr	r1, [fp, #-12]
   243ec:	ldr	r2, [fp, #-16]
   243f0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   243f4:	str	r0, [fp, #-12]
   243f8:	b	24410 <main@@Base+0xdac4>
   243fc:	ldr	r0, [fp, #-8]
   24400:	ldr	r1, [fp, #-12]
   24404:	ldr	r2, [fp, #-16]
   24408:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   2440c:	str	r0, [fp, #-12]
   24410:	b	24414 <main@@Base+0xdac8>
   24414:	b	2442c <main@@Base+0xdae0>
   24418:	ldr	r0, [fp, #-8]
   2441c:	ldr	r1, [fp, #-12]
   24420:	ldr	r2, [fp, #-16]
   24424:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24428:	str	r0, [fp, #-12]
   2442c:	b	24444 <main@@Base+0xdaf8>
   24430:	ldr	r0, [fp, #-8]
   24434:	ldr	r1, [fp, #-12]
   24438:	ldr	r2, [fp, #-16]
   2443c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24440:	str	r0, [fp, #-12]
   24444:	ldr	r0, [fp, #-8]
   24448:	ldr	r1, [fp, #-12]
   2444c:	ldr	r2, [fp, #-16]
   24450:	add	r3, sp, #24
   24454:	bl	21984 <main@@Base+0xb038>
   24458:	str	r0, [fp, #-12]
   2445c:	b	240e0 <main@@Base+0xd794>
   24460:	ldr	r0, [fp, #-8]
   24464:	ldr	r0, [r0, #24]
   24468:	cmp	r0, #0
   2446c:	beq	24474 <main@@Base+0xdb28>
   24470:	b	244a0 <main@@Base+0xdb54>
   24474:	ldr	r0, [fp, #-8]
   24478:	ldr	r0, [r0]
   2447c:	bl	2d280 <flatcc_builder_end_table@@Base>
   24480:	ldr	r1, [fp, #-20]	; 0xffffffec
   24484:	str	r0, [r1]
   24488:	cmp	r0, #0
   2448c:	bne	24494 <main@@Base+0xdb48>
   24490:	b	244a0 <main@@Base+0xdb54>
   24494:	ldr	r0, [fp, #-12]
   24498:	str	r0, [fp, #-4]
   2449c:	b	244b8 <main@@Base+0xdb6c>
   244a0:	ldr	r0, [fp, #-8]
   244a4:	ldr	r1, [fp, #-12]
   244a8:	ldr	r2, [fp, #-16]
   244ac:	movw	r3, #33	; 0x21
   244b0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   244b4:	str	r0, [fp, #-4]
   244b8:	ldr	r0, [fp, #-4]
   244bc:	mov	sp, fp
   244c0:	pop	{fp, pc}
   244c4:	push	{r4, sl, fp, lr}
   244c8:	add	fp, sp, #8
   244cc:	sub	sp, sp, #144	; 0x90
   244d0:	str	r0, [fp, #-16]
   244d4:	str	r1, [fp, #-20]	; 0xffffffec
   244d8:	str	r2, [fp, #-24]	; 0xffffffe8
   244dc:	str	r3, [fp, #-28]	; 0xffffffe4
   244e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   244e4:	movw	r1, #0
   244e8:	str	r1, [r0]
   244ec:	ldr	r0, [fp, #-16]
   244f0:	ldr	r0, [r0]
   244f4:	movw	r1, #10
   244f8:	bl	2c618 <flatcc_builder_start_table@@Base>
   244fc:	cmp	r0, #0
   24500:	beq	24508 <main@@Base+0xdbbc>
   24504:	b	250e0 <main@@Base+0xe794>
   24508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2450c:	ldr	r1, [fp, #-16]
   24510:	ldr	r2, [fp, #-20]	; 0xffffffec
   24514:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24518:	str	r0, [fp, #-64]	; 0xffffffc0
   2451c:	mov	r0, r1
   24520:	mov	r1, r2
   24524:	mov	r2, r3
   24528:	movw	r3, #5
   2452c:	sub	ip, fp, #60	; 0x3c
   24530:	str	ip, [sp]
   24534:	bl	371ec <flatcc_json_parser_prepare_unions@@Base>
   24538:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2453c:	cmp	r1, r0
   24540:	bne	24548 <main@@Base+0xdbfc>
   24544:	b	250e0 <main@@Base+0xe794>
   24548:	ldr	r0, [fp, #-16]
   2454c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24550:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24554:	sub	r3, fp, #32
   24558:	bl	1c7d0 <main@@Base+0x5e84>
   2455c:	str	r0, [fp, #-20]	; 0xffffffec
   24560:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24564:	cmp	r0, #0
   24568:	beq	25088 <main@@Base+0xe73c>
   2456c:	ldr	r0, [fp, #-16]
   24570:	ldr	r1, [fp, #-20]	; 0xffffffec
   24574:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24578:	bl	1c8b4 <main@@Base+0x5f68>
   2457c:	str	r0, [fp, #-20]	; 0xffffffec
   24580:	ldr	r0, [fp, #-20]	; 0xffffffec
   24584:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24588:	bl	1c960 <main@@Base+0x6014>
   2458c:	str	r1, [fp, #-52]	; 0xffffffcc
   24590:	str	r0, [fp, #-56]	; 0xffffffc8
   24594:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24598:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2459c:	movw	r2, #29796	; 0x7464
   245a0:	movt	r2, #24931	; 0x6163
   245a4:	subs	r0, r2, r0
   245a8:	movw	r2, #24946	; 0x6172
   245ac:	movt	r2, #25448	; 0x6368
   245b0:	sbcs	r1, r2, r1
   245b4:	bcc	249b8 <main@@Base+0xe06c>
   245b8:	b	245bc <main@@Base+0xdc70>
   245bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   245c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   245c4:	movw	r2, #29793	; 0x7461
   245c8:	movt	r2, #24942	; 0x616e
   245cc:	eor	r1, r1, r2
   245d0:	movw	r2, #28265	; 0x6e69
   245d4:	movt	r2, #26479	; 0x676f
   245d8:	eor	r0, r0, r2
   245dc:	orr	r0, r0, r1
   245e0:	cmp	r0, #0
   245e4:	bne	247b4 <main@@Base+0xde68>
   245e8:	b	245ec <main@@Base+0xdca0>
   245ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   245f0:	add	r0, r0, #8
   245f4:	str	r0, [fp, #-20]	; 0xffffffec
   245f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   245fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24600:	bl	1c960 <main@@Base+0x6014>
   24604:	str	r1, [fp, #-52]	; 0xffffffcc
   24608:	str	r0, [fp, #-56]	; 0xffffffc8
   2460c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24610:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24614:	movw	r2, #29791	; 0x745f
   24618:	movt	r2, #115	; 0x73
   2461c:	eor	r2, r2, r1, lsr #8
   24620:	lsr	r0, r0, #8
   24624:	orr	r0, r0, r1, lsl #24
   24628:	movw	r1, #28773	; 0x7065
   2462c:	movt	r1, #29817	; 0x7479
   24630:	eor	r0, r0, r1
   24634:	orr	r0, r0, r2
   24638:	cmp	r0, #0
   2463c:	bne	246ec <main@@Base+0xdda0>
   24640:	b	24644 <main@@Base+0xdcf8>
   24644:	ldr	r0, [fp, #-16]
   24648:	ldr	r1, [fp, #-20]	; 0xffffffec
   2464c:	str	r1, [fp, #-48]	; 0xffffffd0
   24650:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24654:	movw	r3, #7
   24658:	bl	1c998 <main@@Base+0x604c>
   2465c:	str	r0, [fp, #-20]	; 0xffffffec
   24660:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24664:	ldr	r1, [fp, #-20]	; 0xffffffec
   24668:	cmp	r0, r1
   2466c:	beq	246d4 <main@@Base+0xdd88>
   24670:	ldr	r0, [pc, #2756]	; 2513c <main@@Base+0xe7f0>
   24674:	add	r0, pc, r0
   24678:	ldr	r1, [pc, #2752]	; 25140 <main@@Base+0xe7f4>
   2467c:	add	r1, pc, r1
   24680:	ldr	r2, [fp, #-16]
   24684:	ldr	r3, [fp, #-20]	; 0xffffffec
   24688:	ldr	ip, [fp, #-24]	; 0xffffffe8
   2468c:	ldr	lr, [fp, #-60]	; 0xffffffc4
   24690:	str	r0, [fp, #-68]	; 0xffffffbc
   24694:	mov	r0, r2
   24698:	str	r1, [fp, #-72]	; 0xffffffb8
   2469c:	mov	r1, r3
   246a0:	mov	r2, ip
   246a4:	movw	r3, #1
   246a8:	movw	ip, #3
   246ac:	uxth	ip, ip
   246b0:	str	ip, [sp]
   246b4:	str	lr, [sp, #4]
   246b8:	ldr	ip, [fp, #-68]	; 0xffffffbc
   246bc:	str	ip, [sp, #8]
   246c0:	ldr	lr, [fp, #-72]	; 0xffffffb8
   246c4:	str	lr, [sp, #12]
   246c8:	bl	374fc <flatcc_json_parser_union_type@@Base>
   246cc:	str	r0, [fp, #-20]	; 0xffffffec
   246d0:	b	246e8 <main@@Base+0xdd9c>
   246d4:	ldr	r0, [fp, #-16]
   246d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   246dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   246e0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   246e4:	str	r0, [fp, #-20]	; 0xffffffec
   246e8:	b	247b0 <main@@Base+0xde64>
   246ec:	ldrh	r0, [fp, #-50]	; 0xffffffce
   246f0:	movw	r1, #0
   246f4:	movt	r1, #29556	; 0x7374
   246f8:	teq	r1, r0, lsl #16
   246fc:	bne	24798 <main@@Base+0xde4c>
   24700:	b	24704 <main@@Base+0xddb8>
   24704:	ldr	r0, [fp, #-16]
   24708:	ldr	r1, [fp, #-20]	; 0xffffffec
   2470c:	str	r1, [fp, #-48]	; 0xffffffd0
   24710:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24714:	movw	r3, #2
   24718:	bl	1c998 <main@@Base+0x604c>
   2471c:	str	r0, [fp, #-20]	; 0xffffffec
   24720:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24724:	ldr	r1, [fp, #-20]	; 0xffffffec
   24728:	cmp	r0, r1
   2472c:	beq	24780 <main@@Base+0xde34>
   24730:	ldr	r0, [pc, #2560]	; 25138 <main@@Base+0xe7ec>
   24734:	add	r0, pc, r0
   24738:	ldr	r1, [fp, #-16]
   2473c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24744:	ldr	ip, [fp, #-60]	; 0xffffffc4
   24748:	str	r0, [sp, #76]	; 0x4c
   2474c:	mov	r0, r1
   24750:	mov	r1, r2
   24754:	mov	r2, r3
   24758:	movw	r3, #1
   2475c:	movw	lr, #3
   24760:	uxth	lr, lr
   24764:	str	lr, [sp]
   24768:	str	ip, [sp, #4]
   2476c:	ldr	ip, [sp, #76]	; 0x4c
   24770:	str	ip, [sp, #8]
   24774:	bl	37310 <flatcc_json_parser_union@@Base>
   24778:	str	r0, [fp, #-20]	; 0xffffffec
   2477c:	b	24794 <main@@Base+0xde48>
   24780:	ldr	r0, [fp, #-16]
   24784:	ldr	r1, [fp, #-20]	; 0xffffffec
   24788:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2478c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24790:	str	r0, [fp, #-20]	; 0xffffffec
   24794:	b	247ac <main@@Base+0xde60>
   24798:	ldr	r0, [fp, #-16]
   2479c:	ldr	r1, [fp, #-20]	; 0xffffffec
   247a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   247a4:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   247a8:	str	r0, [fp, #-20]	; 0xffffffec
   247ac:	b	247b0 <main@@Base+0xde64>
   247b0:	b	249b4 <main@@Base+0xe068>
   247b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   247b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   247bc:	movw	r2, #28005	; 0x6d65
   247c0:	movt	r2, #25441	; 0x6361
   247c4:	eor	r1, r1, r2
   247c8:	movw	r2, #29817	; 0x7479
   247cc:	movt	r2, #28511	; 0x6f5f
   247d0:	eor	r0, r0, r2
   247d4:	orr	r0, r0, r1
   247d8:	cmp	r0, #0
   247dc:	bne	248dc <main@@Base+0xdf90>
   247e0:	b	247e4 <main@@Base+0xde98>
   247e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   247e8:	add	r0, r0, #8
   247ec:	str	r0, [fp, #-20]	; 0xffffffec
   247f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   247f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   247f8:	bl	1c960 <main@@Base+0x6014>
   247fc:	str	r1, [fp, #-52]	; 0xffffffcc
   24800:	str	r0, [fp, #-56]	; 0xffffffc8
   24804:	ldrh	r0, [fp, #-50]	; 0xffffffce
   24808:	movw	r1, #0
   2480c:	movt	r1, #28773	; 0x7065
   24810:	teq	r1, r0, lsl #16
   24814:	bne	248c4 <main@@Base+0xdf78>
   24818:	b	2481c <main@@Base+0xded0>
   2481c:	ldr	r0, [fp, #-16]
   24820:	ldr	r1, [fp, #-20]	; 0xffffffec
   24824:	str	r1, [fp, #-48]	; 0xffffffd0
   24828:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2482c:	movw	r3, #2
   24830:	bl	1c998 <main@@Base+0x604c>
   24834:	str	r0, [fp, #-20]	; 0xffffffec
   24838:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2483c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24840:	cmp	r0, r1
   24844:	beq	248ac <main@@Base+0xdf60>
   24848:	ldr	r0, [pc, #2272]	; 25130 <main@@Base+0xe7e4>
   2484c:	add	r0, pc, r0
   24850:	ldr	r1, [pc, #2268]	; 25134 <main@@Base+0xe7e8>
   24854:	add	r1, pc, r1
   24858:	ldr	r2, [fp, #-16]
   2485c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24860:	ldr	ip, [fp, #-24]	; 0xffffffe8
   24864:	ldr	lr, [fp, #-60]	; 0xffffffc4
   24868:	str	r0, [sp, #72]	; 0x48
   2486c:	mov	r0, r2
   24870:	str	r1, [sp, #68]	; 0x44
   24874:	mov	r1, r3
   24878:	mov	r2, ip
   2487c:	movw	r3, #3
   24880:	movw	ip, #7
   24884:	uxth	ip, ip
   24888:	str	ip, [sp]
   2488c:	str	lr, [sp, #4]
   24890:	ldr	ip, [sp, #72]	; 0x48
   24894:	str	ip, [sp, #8]
   24898:	ldr	lr, [sp, #68]	; 0x44
   2489c:	str	lr, [sp, #12]
   248a0:	bl	374fc <flatcc_json_parser_union_type@@Base>
   248a4:	str	r0, [fp, #-20]	; 0xffffffec
   248a8:	b	248c0 <main@@Base+0xdf74>
   248ac:	ldr	r0, [fp, #-16]
   248b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   248b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   248b8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   248bc:	str	r0, [fp, #-20]	; 0xffffffec
   248c0:	b	248d8 <main@@Base+0xdf8c>
   248c4:	ldr	r0, [fp, #-16]
   248c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   248cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   248d0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   248d4:	str	r0, [fp, #-20]	; 0xffffffec
   248d8:	b	249b0 <main@@Base+0xe064>
   248dc:	ldrb	r0, [fp, #-53]	; 0xffffffcb
   248e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   248e4:	movw	r2, #28005	; 0x6d65
   248e8:	movt	r2, #25441	; 0x6361
   248ec:	eor	r1, r1, r2
   248f0:	eor	r0, r0, #111	; 0x6f
   248f4:	orr	r0, r1, r0, lsl #24
   248f8:	cmp	r0, #0
   248fc:	bne	24998 <main@@Base+0xe04c>
   24900:	b	24904 <main@@Base+0xdfb8>
   24904:	ldr	r0, [fp, #-16]
   24908:	ldr	r1, [fp, #-20]	; 0xffffffec
   2490c:	str	r1, [fp, #-48]	; 0xffffffd0
   24910:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24914:	movw	r3, #5
   24918:	bl	1c998 <main@@Base+0x604c>
   2491c:	str	r0, [fp, #-20]	; 0xffffffec
   24920:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24924:	ldr	r1, [fp, #-20]	; 0xffffffec
   24928:	cmp	r0, r1
   2492c:	beq	24980 <main@@Base+0xe034>
   24930:	ldr	r0, [pc, #2036]	; 2512c <main@@Base+0xe7e0>
   24934:	add	r0, pc, r0
   24938:	ldr	r1, [fp, #-16]
   2493c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24940:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24944:	ldr	ip, [fp, #-60]	; 0xffffffc4
   24948:	str	r0, [sp, #64]	; 0x40
   2494c:	mov	r0, r1
   24950:	mov	r1, r2
   24954:	mov	r2, r3
   24958:	movw	r3, #3
   2495c:	movw	lr, #7
   24960:	uxth	lr, lr
   24964:	str	lr, [sp]
   24968:	str	ip, [sp, #4]
   2496c:	ldr	ip, [sp, #64]	; 0x40
   24970:	str	ip, [sp, #8]
   24974:	bl	37310 <flatcc_json_parser_union@@Base>
   24978:	str	r0, [fp, #-20]	; 0xffffffec
   2497c:	b	24994 <main@@Base+0xe048>
   24980:	ldr	r0, [fp, #-16]
   24984:	ldr	r1, [fp, #-20]	; 0xffffffec
   24988:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2498c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24990:	str	r0, [fp, #-20]	; 0xffffffec
   24994:	b	249ac <main@@Base+0xe060>
   24998:	ldr	r0, [fp, #-16]
   2499c:	ldr	r1, [fp, #-20]	; 0xffffffec
   249a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   249a4:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   249a8:	str	r0, [fp, #-20]	; 0xffffffec
   249ac:	b	249b0 <main@@Base+0xe064>
   249b0:	b	249b4 <main@@Base+0xe068>
   249b4:	b	2506c <main@@Base+0xe720>
   249b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   249bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   249c0:	movw	r2, #26720	; 0x6860
   249c4:	movt	r2, #24419	; 0x5f63
   249c8:	subs	r0, r2, r0
   249cc:	movw	r2, #26990	; 0x696e
   249d0:	movt	r2, #28001	; 0x6d61
   249d4:	sbcs	r1, r2, r1
   249d8:	bcc	24c04 <main@@Base+0xe2b8>
   249dc:	b	249e0 <main@@Base+0xe094>
   249e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   249e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   249e8:	movw	r2, #24946	; 0x6172
   249ec:	movt	r2, #25448	; 0x6368
   249f0:	eor	r1, r1, r2
   249f4:	movw	r2, #29797	; 0x7465
   249f8:	movt	r2, #24931	; 0x6163
   249fc:	eor	r0, r0, r2
   24a00:	orr	r0, r0, r1
   24a04:	cmp	r0, #0
   24a08:	bne	24bec <main@@Base+0xe2a0>
   24a0c:	b	24a10 <main@@Base+0xe0c4>
   24a10:	ldr	r0, [fp, #-20]	; 0xffffffec
   24a14:	add	r0, r0, #8
   24a18:	str	r0, [fp, #-20]	; 0xffffffec
   24a1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24a20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24a24:	bl	1c960 <main@@Base+0x6014>
   24a28:	str	r1, [fp, #-52]	; 0xffffffcc
   24a2c:	str	r0, [fp, #-56]	; 0xffffffc8
   24a30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24a34:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24a38:	movw	r2, #29535	; 0x735f
   24a3c:	movt	r2, #114	; 0x72
   24a40:	eor	r2, r2, r1, lsr #8
   24a44:	lsr	r0, r0, #8
   24a48:	orr	r0, r0, r1, lsl #24
   24a4c:	movw	r1, #28773	; 0x7065
   24a50:	movt	r1, #29817	; 0x7479
   24a54:	eor	r0, r0, r1
   24a58:	orr	r0, r0, r2
   24a5c:	cmp	r0, #0
   24a60:	bne	24b24 <main@@Base+0xe1d8>
   24a64:	b	24a68 <main@@Base+0xe11c>
   24a68:	ldr	r0, [fp, #-16]
   24a6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24a70:	str	r1, [fp, #-48]	; 0xffffffd0
   24a74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24a78:	movw	r3, #7
   24a7c:	bl	1c998 <main@@Base+0x604c>
   24a80:	str	r0, [fp, #-20]	; 0xffffffec
   24a84:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24a88:	ldr	r1, [fp, #-20]	; 0xffffffec
   24a8c:	cmp	r0, r1
   24a90:	beq	24b0c <main@@Base+0xe1c0>
   24a94:	ldr	r0, [pc, #1668]	; 25120 <main@@Base+0xe7d4>
   24a98:	add	r0, pc, r0
   24a9c:	ldr	r1, [pc, #1664]	; 25124 <main@@Base+0xe7d8>
   24aa0:	add	r1, pc, r1
   24aa4:	ldr	r2, [pc, #1660]	; 25128 <main@@Base+0xe7dc>
   24aa8:	add	r2, pc, r2
   24aac:	ldr	r3, [fp, #-16]
   24ab0:	ldr	ip, [fp, #-20]	; 0xffffffec
   24ab4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   24ab8:	ldr	r4, [fp, #-60]	; 0xffffffc4
   24abc:	str	r0, [sp, #60]	; 0x3c
   24ac0:	mov	r0, r3
   24ac4:	str	r1, [sp, #56]	; 0x38
   24ac8:	mov	r1, ip
   24acc:	str	r2, [sp, #52]	; 0x34
   24ad0:	mov	r2, lr
   24ad4:	movw	r3, #4
   24ad8:	movw	ip, #9
   24adc:	uxth	ip, ip
   24ae0:	str	ip, [sp]
   24ae4:	str	r4, [sp, #4]
   24ae8:	ldr	ip, [sp, #60]	; 0x3c
   24aec:	str	ip, [sp, #8]
   24af0:	ldr	lr, [sp, #56]	; 0x38
   24af4:	str	lr, [sp, #12]
   24af8:	ldr	r4, [sp, #52]	; 0x34
   24afc:	str	r4, [sp, #16]
   24b00:	bl	37df0 <flatcc_json_parser_union_type_vector@@Base>
   24b04:	str	r0, [fp, #-20]	; 0xffffffec
   24b08:	b	24b20 <main@@Base+0xe1d4>
   24b0c:	ldr	r0, [fp, #-16]
   24b10:	ldr	r1, [fp, #-20]	; 0xffffffec
   24b14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24b18:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24b1c:	str	r0, [fp, #-20]	; 0xffffffec
   24b20:	b	24be8 <main@@Base+0xe29c>
   24b24:	ldrh	r0, [fp, #-50]	; 0xffffffce
   24b28:	movw	r1, #0
   24b2c:	movt	r1, #29299	; 0x7273
   24b30:	teq	r1, r0, lsl #16
   24b34:	bne	24bd0 <main@@Base+0xe284>
   24b38:	b	24b3c <main@@Base+0xe1f0>
   24b3c:	ldr	r0, [fp, #-16]
   24b40:	ldr	r1, [fp, #-20]	; 0xffffffec
   24b44:	str	r1, [fp, #-48]	; 0xffffffd0
   24b48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24b4c:	movw	r3, #2
   24b50:	bl	1c998 <main@@Base+0x604c>
   24b54:	str	r0, [fp, #-20]	; 0xffffffec
   24b58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24b5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24b60:	cmp	r0, r1
   24b64:	beq	24bb8 <main@@Base+0xe26c>
   24b68:	ldr	r0, [pc, #1452]	; 2511c <main@@Base+0xe7d0>
   24b6c:	add	r0, pc, r0
   24b70:	ldr	r1, [fp, #-16]
   24b74:	ldr	r2, [fp, #-20]	; 0xffffffec
   24b78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24b7c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   24b80:	str	r0, [sp, #48]	; 0x30
   24b84:	mov	r0, r1
   24b88:	mov	r1, r2
   24b8c:	mov	r2, r3
   24b90:	movw	r3, #4
   24b94:	movw	lr, #9
   24b98:	uxth	lr, lr
   24b9c:	str	lr, [sp]
   24ba0:	str	ip, [sp, #4]
   24ba4:	ldr	ip, [sp, #48]	; 0x30
   24ba8:	str	ip, [sp, #8]
   24bac:	bl	37a60 <flatcc_json_parser_union_vector@@Base>
   24bb0:	str	r0, [fp, #-20]	; 0xffffffec
   24bb4:	b	24bcc <main@@Base+0xe280>
   24bb8:	ldr	r0, [fp, #-16]
   24bbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   24bc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24bc4:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24bc8:	str	r0, [fp, #-20]	; 0xffffffec
   24bcc:	b	24be4 <main@@Base+0xe298>
   24bd0:	ldr	r0, [fp, #-16]
   24bd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   24bd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24bdc:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24be0:	str	r0, [fp, #-20]	; 0xffffffec
   24be4:	b	24be8 <main@@Base+0xe29c>
   24be8:	b	24c00 <main@@Base+0xe2b4>
   24bec:	ldr	r0, [fp, #-16]
   24bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   24bf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24bf8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24bfc:	str	r0, [fp, #-20]	; 0xffffffec
   24c00:	b	25068 <main@@Base+0xe71c>
   24c04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24c08:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24c0c:	movw	r2, #26990	; 0x696e
   24c10:	movt	r2, #28001	; 0x6d61
   24c14:	eor	r1, r1, r2
   24c18:	movw	r2, #26721	; 0x6861
   24c1c:	movt	r2, #24419	; 0x5f63
   24c20:	eor	r0, r0, r2
   24c24:	orr	r0, r0, r1
   24c28:	cmp	r0, #0
   24c2c:	bne	24e60 <main@@Base+0xe514>
   24c30:	b	24c34 <main@@Base+0xe2e8>
   24c34:	ldr	r0, [fp, #-20]	; 0xffffffec
   24c38:	add	r0, r0, #8
   24c3c:	str	r0, [fp, #-20]	; 0xffffffec
   24c40:	ldr	r0, [fp, #-20]	; 0xffffffec
   24c44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24c48:	bl	1c960 <main@@Base+0x6014>
   24c4c:	str	r1, [fp, #-52]	; 0xffffffcc
   24c50:	str	r0, [fp, #-56]	; 0xffffffc8
   24c54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24c58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24c5c:	movw	r2, #25460	; 0x6374
   24c60:	movt	r2, #29281	; 0x7261
   24c64:	eor	r1, r1, r2
   24c68:	movw	r2, #24436	; 0x5f74
   24c6c:	movt	r2, #25970	; 0x6572
   24c70:	eor	r0, r0, r2
   24c74:	orr	r0, r0, r1
   24c78:	cmp	r0, #0
   24c7c:	bne	24d80 <main@@Base+0xe434>
   24c80:	b	24c84 <main@@Base+0xe338>
   24c84:	ldr	r0, [fp, #-20]	; 0xffffffec
   24c88:	add	r0, r0, #8
   24c8c:	str	r0, [fp, #-20]	; 0xffffffec
   24c90:	ldr	r0, [fp, #-20]	; 0xffffffec
   24c94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24c98:	bl	1c960 <main@@Base+0x6014>
   24c9c:	str	r1, [fp, #-52]	; 0xffffffcc
   24ca0:	str	r0, [fp, #-56]	; 0xffffffc8
   24ca4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   24ca8:	bic	r0, r0, #255	; 0xff
   24cac:	movw	r1, #25856	; 0x6500
   24cb0:	movt	r1, #31088	; 0x7970
   24cb4:	teq	r0, r1
   24cb8:	bne	24d68 <main@@Base+0xe41c>
   24cbc:	b	24cc0 <main@@Base+0xe374>
   24cc0:	ldr	r0, [fp, #-16]
   24cc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   24cc8:	str	r1, [fp, #-48]	; 0xffffffd0
   24ccc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24cd0:	movw	r3, #3
   24cd4:	bl	1c998 <main@@Base+0x604c>
   24cd8:	str	r0, [fp, #-20]	; 0xffffffec
   24cdc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24ce0:	ldr	r1, [fp, #-20]	; 0xffffffec
   24ce4:	cmp	r0, r1
   24ce8:	beq	24d50 <main@@Base+0xe404>
   24cec:	ldr	r0, [pc, #1056]	; 25114 <main@@Base+0xe7c8>
   24cf0:	add	r0, pc, r0
   24cf4:	ldr	r1, [pc, #1052]	; 25118 <main@@Base+0xe7cc>
   24cf8:	add	r1, pc, r1
   24cfc:	ldr	r2, [fp, #-16]
   24d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   24d04:	ldr	ip, [fp, #-24]	; 0xffffffe8
   24d08:	ldr	lr, [fp, #-60]	; 0xffffffc4
   24d0c:	str	r0, [sp, #44]	; 0x2c
   24d10:	mov	r0, r2
   24d14:	str	r1, [sp, #40]	; 0x28
   24d18:	mov	r1, r3
   24d1c:	mov	r2, ip
   24d20:	movw	r3, #0
   24d24:	movw	ip, #1
   24d28:	uxth	ip, ip
   24d2c:	str	ip, [sp]
   24d30:	str	lr, [sp, #4]
   24d34:	ldr	ip, [sp, #44]	; 0x2c
   24d38:	str	ip, [sp, #8]
   24d3c:	ldr	lr, [sp, #40]	; 0x28
   24d40:	str	lr, [sp, #12]
   24d44:	bl	374fc <flatcc_json_parser_union_type@@Base>
   24d48:	str	r0, [fp, #-20]	; 0xffffffec
   24d4c:	b	24d64 <main@@Base+0xe418>
   24d50:	ldr	r0, [fp, #-16]
   24d54:	ldr	r1, [fp, #-20]	; 0xffffffec
   24d58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24d5c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24d60:	str	r0, [fp, #-20]	; 0xffffffec
   24d64:	b	24d7c <main@@Base+0xe430>
   24d68:	ldr	r0, [fp, #-16]
   24d6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24d70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24d74:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24d78:	str	r0, [fp, #-20]	; 0xffffffec
   24d7c:	b	24e5c <main@@Base+0xe510>
   24d80:	ldrh	r0, [fp, #-54]	; 0xffffffca
   24d84:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24d88:	movw	r2, #29281	; 0x7261
   24d8c:	eor	r2, r2, r1, lsr #16
   24d90:	orr	r0, r0, r1, lsl #16
   24d94:	movw	r1, #25970	; 0x6572
   24d98:	movt	r1, #25460	; 0x6374
   24d9c:	eor	r0, r0, r1
   24da0:	orr	r0, r0, r2
   24da4:	cmp	r0, #0
   24da8:	bne	24e44 <main@@Base+0xe4f8>
   24dac:	b	24db0 <main@@Base+0xe464>
   24db0:	ldr	r0, [fp, #-16]
   24db4:	ldr	r1, [fp, #-20]	; 0xffffffec
   24db8:	str	r1, [fp, #-48]	; 0xffffffd0
   24dbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24dc0:	movw	r3, #6
   24dc4:	bl	1c998 <main@@Base+0x604c>
   24dc8:	str	r0, [fp, #-20]	; 0xffffffec
   24dcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24dd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   24dd4:	cmp	r0, r1
   24dd8:	beq	24e2c <main@@Base+0xe4e0>
   24ddc:	ldr	r0, [pc, #812]	; 25110 <main@@Base+0xe7c4>
   24de0:	add	r0, pc, r0
   24de4:	ldr	r1, [fp, #-16]
   24de8:	ldr	r2, [fp, #-20]	; 0xffffffec
   24dec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24df0:	ldr	ip, [fp, #-60]	; 0xffffffc4
   24df4:	str	r0, [sp, #36]	; 0x24
   24df8:	mov	r0, r1
   24dfc:	mov	r1, r2
   24e00:	mov	r2, r3
   24e04:	movw	r3, #0
   24e08:	movw	lr, #1
   24e0c:	uxth	lr, lr
   24e10:	str	lr, [sp]
   24e14:	str	ip, [sp, #4]
   24e18:	ldr	ip, [sp, #36]	; 0x24
   24e1c:	str	ip, [sp, #8]
   24e20:	bl	37310 <flatcc_json_parser_union@@Base>
   24e24:	str	r0, [fp, #-20]	; 0xffffffec
   24e28:	b	24e40 <main@@Base+0xe4f4>
   24e2c:	ldr	r0, [fp, #-16]
   24e30:	ldr	r1, [fp, #-20]	; 0xffffffec
   24e34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24e38:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24e3c:	str	r0, [fp, #-20]	; 0xffffffec
   24e40:	b	24e58 <main@@Base+0xe50c>
   24e44:	ldr	r0, [fp, #-16]
   24e48:	ldr	r1, [fp, #-20]	; 0xffffffec
   24e4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24e50:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24e54:	str	r0, [fp, #-20]	; 0xffffffec
   24e58:	b	24e5c <main@@Base+0xe510>
   24e5c:	b	25064 <main@@Base+0xe718>
   24e60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24e64:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24e68:	movw	r2, #25701	; 0x6465
   24e6c:	movt	r2, #29545	; 0x7369
   24e70:	eor	r1, r1, r2
   24e74:	movw	r2, #26979	; 0x6963
   24e78:	movt	r2, #24427	; 0x5f6b
   24e7c:	eor	r0, r0, r2
   24e80:	orr	r0, r0, r1
   24e84:	cmp	r0, #0
   24e88:	bne	2504c <main@@Base+0xe700>
   24e8c:	b	24e90 <main@@Base+0xe544>
   24e90:	ldr	r0, [fp, #-20]	; 0xffffffec
   24e94:	add	r0, r0, #8
   24e98:	str	r0, [fp, #-20]	; 0xffffffec
   24e9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24ea0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24ea4:	bl	1c960 <main@@Base+0x6014>
   24ea8:	str	r1, [fp, #-52]	; 0xffffffcc
   24eac:	str	r0, [fp, #-56]	; 0xffffffc8
   24eb0:	ldrh	r0, [fp, #-54]	; 0xffffffca
   24eb4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24eb8:	movw	r2, #27487	; 0x6b5f
   24ebc:	eor	r2, r2, r1, lsr #16
   24ec0:	orr	r0, r0, r1, lsl #16
   24ec4:	movw	r1, #28773	; 0x7065
   24ec8:	movt	r1, #29817	; 0x7479
   24ecc:	eor	r0, r0, r1
   24ed0:	orr	r0, r0, r2
   24ed4:	cmp	r0, #0
   24ed8:	bne	24f88 <main@@Base+0xe63c>
   24edc:	b	24ee0 <main@@Base+0xe594>
   24ee0:	ldr	r0, [fp, #-16]
   24ee4:	ldr	r1, [fp, #-20]	; 0xffffffec
   24ee8:	str	r1, [fp, #-48]	; 0xffffffd0
   24eec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24ef0:	movw	r3, #6
   24ef4:	bl	1c998 <main@@Base+0x604c>
   24ef8:	str	r0, [fp, #-20]	; 0xffffffec
   24efc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24f00:	ldr	r1, [fp, #-20]	; 0xffffffec
   24f04:	cmp	r0, r1
   24f08:	beq	24f70 <main@@Base+0xe624>
   24f0c:	ldr	r0, [pc, #500]	; 25108 <main@@Base+0xe7bc>
   24f10:	add	r0, pc, r0
   24f14:	ldr	r1, [pc, #496]	; 2510c <main@@Base+0xe7c0>
   24f18:	add	r1, pc, r1
   24f1c:	ldr	r2, [fp, #-16]
   24f20:	ldr	r3, [fp, #-20]	; 0xffffffec
   24f24:	ldr	ip, [fp, #-24]	; 0xffffffe8
   24f28:	ldr	lr, [fp, #-60]	; 0xffffffc4
   24f2c:	str	r0, [sp, #32]
   24f30:	mov	r0, r2
   24f34:	str	r1, [sp, #28]
   24f38:	mov	r1, r3
   24f3c:	mov	r2, ip
   24f40:	movw	r3, #2
   24f44:	movw	ip, #5
   24f48:	uxth	ip, ip
   24f4c:	str	ip, [sp]
   24f50:	str	lr, [sp, #4]
   24f54:	ldr	ip, [sp, #32]
   24f58:	str	ip, [sp, #8]
   24f5c:	ldr	lr, [sp, #28]
   24f60:	str	lr, [sp, #12]
   24f64:	bl	374fc <flatcc_json_parser_union_type@@Base>
   24f68:	str	r0, [fp, #-20]	; 0xffffffec
   24f6c:	b	24f84 <main@@Base+0xe638>
   24f70:	ldr	r0, [fp, #-16]
   24f74:	ldr	r1, [fp, #-20]	; 0xffffffec
   24f78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24f7c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   24f80:	str	r0, [fp, #-20]	; 0xffffffec
   24f84:	b	25048 <main@@Base+0xe6fc>
   24f88:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   24f8c:	mov	r1, #1795162112	; 0x6b000000
   24f90:	teq	r1, r0, lsl #24
   24f94:	bne	25030 <main@@Base+0xe6e4>
   24f98:	b	24f9c <main@@Base+0xe650>
   24f9c:	ldr	r0, [fp, #-16]
   24fa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   24fa4:	str	r1, [fp, #-48]	; 0xffffffd0
   24fa8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24fac:	movw	r3, #1
   24fb0:	bl	1c998 <main@@Base+0x604c>
   24fb4:	str	r0, [fp, #-20]	; 0xffffffec
   24fb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   24fc0:	cmp	r0, r1
   24fc4:	beq	25018 <main@@Base+0xe6cc>
   24fc8:	ldr	r0, [pc, #308]	; 25104 <main@@Base+0xe7b8>
   24fcc:	add	r0, pc, r0
   24fd0:	ldr	r1, [fp, #-16]
   24fd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   24fd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24fdc:	ldr	ip, [fp, #-60]	; 0xffffffc4
   24fe0:	str	r0, [sp, #24]
   24fe4:	mov	r0, r1
   24fe8:	mov	r1, r2
   24fec:	mov	r2, r3
   24ff0:	movw	r3, #2
   24ff4:	movw	lr, #5
   24ff8:	uxth	lr, lr
   24ffc:	str	lr, [sp]
   25000:	str	ip, [sp, #4]
   25004:	ldr	ip, [sp, #24]
   25008:	str	ip, [sp, #8]
   2500c:	bl	37310 <flatcc_json_parser_union@@Base>
   25010:	str	r0, [fp, #-20]	; 0xffffffec
   25014:	b	2502c <main@@Base+0xe6e0>
   25018:	ldr	r0, [fp, #-16]
   2501c:	ldr	r1, [fp, #-20]	; 0xffffffec
   25020:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25024:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   25028:	str	r0, [fp, #-20]	; 0xffffffec
   2502c:	b	25044 <main@@Base+0xe6f8>
   25030:	ldr	r0, [fp, #-16]
   25034:	ldr	r1, [fp, #-20]	; 0xffffffec
   25038:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2503c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   25040:	str	r0, [fp, #-20]	; 0xffffffec
   25044:	b	25048 <main@@Base+0xe6fc>
   25048:	b	25060 <main@@Base+0xe714>
   2504c:	ldr	r0, [fp, #-16]
   25050:	ldr	r1, [fp, #-20]	; 0xffffffec
   25054:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25058:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   2505c:	str	r0, [fp, #-20]	; 0xffffffec
   25060:	b	25064 <main@@Base+0xe718>
   25064:	b	25068 <main@@Base+0xe71c>
   25068:	b	2506c <main@@Base+0xe720>
   2506c:	ldr	r0, [fp, #-16]
   25070:	ldr	r1, [fp, #-20]	; 0xffffffec
   25074:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25078:	sub	r3, fp, #32
   2507c:	bl	21984 <main@@Base+0xb038>
   25080:	str	r0, [fp, #-20]	; 0xffffffec
   25084:	b	24560 <main@@Base+0xdc14>
   25088:	ldr	r0, [fp, #-16]
   2508c:	ldr	r0, [r0, #24]
   25090:	cmp	r0, #0
   25094:	beq	2509c <main@@Base+0xe750>
   25098:	b	250e0 <main@@Base+0xe794>
   2509c:	ldr	r0, [fp, #-16]
   250a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   250a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   250a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   250ac:	bl	37294 <flatcc_json_parser_finalize_unions@@Base>
   250b0:	str	r0, [fp, #-20]	; 0xffffffec
   250b4:	ldr	r0, [fp, #-16]
   250b8:	ldr	r0, [r0]
   250bc:	bl	2d280 <flatcc_builder_end_table@@Base>
   250c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   250c4:	str	r0, [r1]
   250c8:	cmp	r0, #0
   250cc:	bne	250d4 <main@@Base+0xe788>
   250d0:	b	250e0 <main@@Base+0xe794>
   250d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   250d8:	str	r0, [fp, #-12]
   250dc:	b	250f8 <main@@Base+0xe7ac>
   250e0:	ldr	r0, [fp, #-16]
   250e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   250e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   250ec:	movw	r3, #33	; 0x21
   250f0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   250f4:	str	r0, [fp, #-12]
   250f8:	ldr	r0, [fp, #-12]
   250fc:	sub	sp, fp, #8
   25100:	pop	{r4, sl, fp, pc}
   25104:	andeq	r1, r0, r4, lsl r8
   25108:	ldrdeq	sl, [r3], -r8
   2510c:	andeq	r1, r0, r8, asr #17
   25110:	andeq	r1, r0, r0, lsl #20
   25114:	andeq	sl, r3, r8, ror #11
   25118:	andeq	r1, r0, r8, ror #21
   2511c:	andeq	r1, r0, r4, ror ip
   25120:	andeq	sl, r3, r0, lsr r8
   25124:	andeq	r1, r0, r0, asr #26
   25128:	andeq	r1, r0, r0, asr #30
   2512c:	andeq	r1, r0, ip, lsr #29
   25130:	andeq	sl, r3, ip, ror #20
   25134:	andeq	r1, r0, ip, lsl #31
   25138:	andeq	r2, r0, ip, lsr #1
   2513c:	andeq	sl, r3, r4, lsr ip
   25140:	andeq	r2, r0, r4, ror #2
   25144:	push	{fp, lr}
   25148:	mov	fp, sp
   2514c:	sub	sp, sp, #64	; 0x40
   25150:	str	r0, [fp, #-8]
   25154:	str	r1, [fp, #-12]
   25158:	str	r2, [fp, #-16]
   2515c:	str	r3, [fp, #-20]	; 0xffffffec
   25160:	ldr	r0, [fp, #-20]	; 0xffffffec
   25164:	movw	r1, #0
   25168:	str	r1, [r0]
   2516c:	ldr	r0, [fp, #-8]
   25170:	ldr	r0, [r0]
   25174:	movw	r1, #2
   25178:	bl	2c618 <flatcc_builder_start_table@@Base>
   2517c:	cmp	r0, #0
   25180:	beq	25188 <main@@Base+0xe83c>
   25184:	b	2557c <main@@Base+0xec30>
   25188:	ldr	r0, [fp, #-8]
   2518c:	ldr	r1, [fp, #-12]
   25190:	ldr	r2, [fp, #-16]
   25194:	sub	r3, fp, #24
   25198:	bl	1c7d0 <main@@Base+0x5e84>
   2519c:	str	r0, [fp, #-12]
   251a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   251a4:	cmp	r0, #0
   251a8:	beq	2553c <main@@Base+0xebf0>
   251ac:	ldr	r0, [fp, #-8]
   251b0:	ldr	r1, [fp, #-12]
   251b4:	ldr	r2, [fp, #-16]
   251b8:	bl	1c8b4 <main@@Base+0x5f68>
   251bc:	str	r0, [fp, #-12]
   251c0:	ldr	r0, [fp, #-12]
   251c4:	ldr	r1, [fp, #-16]
   251c8:	bl	1c960 <main@@Base+0x6014>
   251cc:	str	r1, [sp, #20]
   251d0:	str	r0, [sp, #16]
   251d4:	ldr	r0, [sp, #16]
   251d8:	ldr	r1, [sp, #20]
   251dc:	movw	r2, #24929	; 0x6161
   251e0:	movt	r2, #24929	; 0x6161
   251e4:	eor	r1, r1, r2
   251e8:	movw	r2, #25186	; 0x6262
   251ec:	movt	r2, #24418	; 0x5f62
   251f0:	eor	r0, r0, r2
   251f4:	orr	r0, r0, r1
   251f8:	cmp	r0, #0
   251fc:	bne	2550c <main@@Base+0xebc0>
   25200:	b	25204 <main@@Base+0xe8b8>
   25204:	ldr	r0, [fp, #-12]
   25208:	add	r0, r0, #8
   2520c:	str	r0, [fp, #-12]
   25210:	ldr	r0, [fp, #-12]
   25214:	ldr	r1, [fp, #-16]
   25218:	bl	1c960 <main@@Base+0x6014>
   2521c:	str	r1, [sp, #20]
   25220:	str	r0, [sp, #16]
   25224:	ldr	r0, [sp, #16]
   25228:	ldr	r1, [sp, #20]
   2522c:	movw	r2, #24435	; 0x5f73
   25230:	movt	r2, #98	; 0x62
   25234:	eor	r2, r2, r1, lsr #8
   25238:	lsr	r0, r0, #8
   2523c:	orr	r0, r0, r1, lsl #24
   25240:	movw	r1, #28787	; 0x7073
   25244:	movt	r1, #29797	; 0x7465
   25248:	eor	r0, r0, r1
   2524c:	orr	r0, r0, r2
   25250:	cmp	r0, #0
   25254:	bne	25398 <main@@Base+0xea4c>
   25258:	b	2525c <main@@Base+0xe910>
   2525c:	ldr	r0, [fp, #-8]
   25260:	ldr	r1, [fp, #-12]
   25264:	str	r1, [sp, #24]
   25268:	ldr	r2, [fp, #-16]
   2526c:	movw	r3, #7
   25270:	bl	1c998 <main@@Base+0x604c>
   25274:	str	r0, [fp, #-12]
   25278:	ldr	r0, [sp, #24]
   2527c:	ldr	r1, [fp, #-12]
   25280:	cmp	r0, r1
   25284:	beq	25380 <main@@Base+0xea34>
   25288:	mov	r0, #0
   2528c:	str	r0, [sp, #12]
   25290:	str	r0, [sp, #8]
   25294:	ldr	r0, [fp, #-8]
   25298:	ldr	r1, [fp, #-12]
   2529c:	str	r1, [sp, #24]
   252a0:	ldr	r2, [fp, #-16]
   252a4:	add	r3, sp, #8
   252a8:	bl	20e64 <main@@Base+0xa518>
   252ac:	str	r0, [fp, #-12]
   252b0:	ldr	r0, [sp, #24]
   252b4:	ldr	r1, [fp, #-12]
   252b8:	cmp	r0, r1
   252bc:	bne	25310 <main@@Base+0xe9c4>
   252c0:	ldr	r0, [pc, #732]	; 255a4 <main@@Base+0xec58>
   252c4:	add	r3, pc, r0
   252c8:	ldr	r0, [fp, #-8]
   252cc:	ldr	r1, [fp, #-12]
   252d0:	str	r1, [sp, #24]
   252d4:	ldr	r2, [fp, #-16]
   252d8:	add	ip, sp, #8
   252dc:	str	ip, [sp]
   252e0:	bl	20f3c <main@@Base+0xa5f0>
   252e4:	str	r0, [fp, #-12]
   252e8:	ldr	r0, [fp, #-12]
   252ec:	ldr	r1, [sp, #24]
   252f0:	cmp	r0, r1
   252f4:	beq	25308 <main@@Base+0xe9bc>
   252f8:	ldr	r0, [fp, #-12]
   252fc:	ldr	r1, [fp, #-16]
   25300:	cmp	r0, r1
   25304:	bne	2530c <main@@Base+0xe9c0>
   25308:	b	2557c <main@@Base+0xec30>
   2530c:	b	25310 <main@@Base+0xe9c4>
   25310:	ldr	r0, [sp, #8]
   25314:	ldr	r1, [sp, #12]
   25318:	orr	r0, r0, r1
   2531c:	cmp	r0, #0
   25320:	bne	2533c <main@@Base+0xe9f0>
   25324:	b	25328 <main@@Base+0xe9dc>
   25328:	ldr	r0, [fp, #-8]
   2532c:	ldr	r0, [r0, #8]
   25330:	and	r0, r0, #2
   25334:	cmp	r0, #0
   25338:	beq	2537c <main@@Base+0xea30>
   2533c:	ldr	r0, [fp, #-8]
   25340:	ldr	r0, [r0]
   25344:	movw	r1, #0
   25348:	movw	r2, #8
   2534c:	movw	r3, #8
   25350:	uxth	r3, r3
   25354:	bl	2debc <flatcc_builder_table_add@@Base>
   25358:	str	r0, [fp, #-28]	; 0xffffffe4
   2535c:	movw	r1, #0
   25360:	cmp	r0, r1
   25364:	bne	2536c <main@@Base+0xea20>
   25368:	b	2557c <main@@Base+0xec30>
   2536c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25370:	ldr	r2, [sp, #8]
   25374:	ldr	r3, [sp, #12]
   25378:	bl	21138 <main@@Base+0xa7ec>
   2537c:	b	25394 <main@@Base+0xea48>
   25380:	ldr	r0, [fp, #-8]
   25384:	ldr	r1, [fp, #-12]
   25388:	ldr	r2, [fp, #-16]
   2538c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   25390:	str	r0, [fp, #-12]
   25394:	b	25508 <main@@Base+0xebbc>
   25398:	ldr	r0, [sp, #16]
   2539c:	ldr	r1, [sp, #20]
   253a0:	movw	r2, #29556	; 0x7374
   253a4:	movt	r2, #25183	; 0x625f
   253a8:	eor	r1, r1, r2
   253ac:	movw	r2, #29791	; 0x745f
   253b0:	movt	r2, #24946	; 0x6172
   253b4:	eor	r0, r0, r2
   253b8:	orr	r0, r0, r1
   253bc:	cmp	r0, #0
   253c0:	bne	254f0 <main@@Base+0xeba4>
   253c4:	b	253c8 <main@@Base+0xea7c>
   253c8:	ldr	r0, [fp, #-8]
   253cc:	ldr	r1, [fp, #-12]
   253d0:	str	r1, [sp, #24]
   253d4:	ldr	r2, [fp, #-16]
   253d8:	movw	r3, #8
   253dc:	bl	1c998 <main@@Base+0x604c>
   253e0:	str	r0, [fp, #-12]
   253e4:	ldr	r0, [sp, #24]
   253e8:	ldr	r1, [fp, #-12]
   253ec:	cmp	r0, r1
   253f0:	beq	254d8 <main@@Base+0xeb8c>
   253f4:	movw	r0, #0
   253f8:	str	r0, [sp, #4]
   253fc:	ldr	r0, [fp, #-8]
   25400:	ldr	r1, [fp, #-12]
   25404:	str	r1, [sp, #24]
   25408:	ldr	r2, [fp, #-16]
   2540c:	add	r3, sp, #4
   25410:	bl	21170 <main@@Base+0xa824>
   25414:	str	r0, [fp, #-12]
   25418:	ldr	r0, [sp, #24]
   2541c:	ldr	r1, [fp, #-12]
   25420:	cmp	r0, r1
   25424:	bne	25478 <main@@Base+0xeb2c>
   25428:	ldr	r0, [pc, #368]	; 255a0 <main@@Base+0xec54>
   2542c:	add	r3, pc, r0
   25430:	ldr	r0, [fp, #-8]
   25434:	ldr	r1, [fp, #-12]
   25438:	str	r1, [sp, #24]
   2543c:	ldr	r2, [fp, #-16]
   25440:	add	ip, sp, #4
   25444:	str	ip, [sp]
   25448:	bl	21248 <main@@Base+0xa8fc>
   2544c:	str	r0, [fp, #-12]
   25450:	ldr	r0, [fp, #-12]
   25454:	ldr	r1, [sp, #24]
   25458:	cmp	r0, r1
   2545c:	beq	25470 <main@@Base+0xeb24>
   25460:	ldr	r0, [fp, #-12]
   25464:	ldr	r1, [fp, #-16]
   25468:	cmp	r0, r1
   2546c:	bne	25474 <main@@Base+0xeb28>
   25470:	b	2557c <main@@Base+0xec30>
   25474:	b	25478 <main@@Base+0xeb2c>
   25478:	ldr	r0, [sp, #4]
   2547c:	cmp	r0, #0
   25480:	bne	25498 <main@@Base+0xeb4c>
   25484:	ldr	r0, [fp, #-8]
   25488:	ldr	r0, [r0, #8]
   2548c:	and	r0, r0, #2
   25490:	cmp	r0, #0
   25494:	beq	254d4 <main@@Base+0xeb88>
   25498:	ldr	r0, [fp, #-8]
   2549c:	ldr	r0, [r0]
   254a0:	movw	r1, #1
   254a4:	movw	r2, #4
   254a8:	movw	r3, #4
   254ac:	uxth	r3, r3
   254b0:	bl	2debc <flatcc_builder_table_add@@Base>
   254b4:	str	r0, [fp, #-28]	; 0xffffffe4
   254b8:	movw	r1, #0
   254bc:	cmp	r0, r1
   254c0:	bne	254c8 <main@@Base+0xeb7c>
   254c4:	b	2557c <main@@Base+0xec30>
   254c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   254cc:	ldr	r1, [sp, #4]
   254d0:	bl	2142c <main@@Base+0xaae0>
   254d4:	b	254ec <main@@Base+0xeba0>
   254d8:	ldr	r0, [fp, #-8]
   254dc:	ldr	r1, [fp, #-12]
   254e0:	ldr	r2, [fp, #-16]
   254e4:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   254e8:	str	r0, [fp, #-12]
   254ec:	b	25504 <main@@Base+0xebb8>
   254f0:	ldr	r0, [fp, #-8]
   254f4:	ldr	r1, [fp, #-12]
   254f8:	ldr	r2, [fp, #-16]
   254fc:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   25500:	str	r0, [fp, #-12]
   25504:	b	25508 <main@@Base+0xebbc>
   25508:	b	25520 <main@@Base+0xebd4>
   2550c:	ldr	r0, [fp, #-8]
   25510:	ldr	r1, [fp, #-12]
   25514:	ldr	r2, [fp, #-16]
   25518:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   2551c:	str	r0, [fp, #-12]
   25520:	ldr	r0, [fp, #-8]
   25524:	ldr	r1, [fp, #-12]
   25528:	ldr	r2, [fp, #-16]
   2552c:	sub	r3, fp, #24
   25530:	bl	21984 <main@@Base+0xb038>
   25534:	str	r0, [fp, #-12]
   25538:	b	251a0 <main@@Base+0xe854>
   2553c:	ldr	r0, [fp, #-8]
   25540:	ldr	r0, [r0, #24]
   25544:	cmp	r0, #0
   25548:	beq	25550 <main@@Base+0xec04>
   2554c:	b	2557c <main@@Base+0xec30>
   25550:	ldr	r0, [fp, #-8]
   25554:	ldr	r0, [r0]
   25558:	bl	2d280 <flatcc_builder_end_table@@Base>
   2555c:	ldr	r1, [fp, #-20]	; 0xffffffec
   25560:	str	r0, [r1]
   25564:	cmp	r0, #0
   25568:	bne	25570 <main@@Base+0xec24>
   2556c:	b	2557c <main@@Base+0xec30>
   25570:	ldr	r0, [fp, #-12]
   25574:	str	r0, [fp, #-4]
   25578:	b	25594 <main@@Base+0xec48>
   2557c:	ldr	r0, [fp, #-8]
   25580:	ldr	r1, [fp, #-12]
   25584:	ldr	r2, [fp, #-16]
   25588:	movw	r3, #33	; 0x21
   2558c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   25590:	str	r0, [fp, #-4]
   25594:	ldr	r0, [fp, #-4]
   25598:	mov	sp, fp
   2559c:	pop	{fp, pc}
   255a0:	andeq	r9, r3, r0, lsl lr
   255a4:	andeq	r9, r3, ip, ror #30
   255a8:	push	{fp, lr}
   255ac:	mov	fp, sp
   255b0:	sub	sp, sp, #96	; 0x60
   255b4:	str	r0, [fp, #-8]
   255b8:	str	r1, [fp, #-12]
   255bc:	str	r2, [fp, #-16]
   255c0:	str	r3, [fp, #-20]	; 0xffffffec
   255c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   255c8:	movw	r1, #0
   255cc:	str	r1, [r0]
   255d0:	ldr	r0, [fp, #-8]
   255d4:	ldr	r0, [r0]
   255d8:	movw	r1, #9
   255dc:	bl	2c618 <flatcc_builder_start_table@@Base>
   255e0:	cmp	r0, #0
   255e4:	beq	255ec <main@@Base+0xeca0>
   255e8:	b	261a4 <main@@Base+0xf858>
   255ec:	ldr	r0, [fp, #-8]
   255f0:	ldr	r1, [fp, #-12]
   255f4:	ldr	r2, [fp, #-16]
   255f8:	sub	r3, fp, #24
   255fc:	bl	1c7d0 <main@@Base+0x5e84>
   25600:	str	r0, [fp, #-12]
   25604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25608:	cmp	r0, #0
   2560c:	beq	26164 <main@@Base+0xf818>
   25610:	ldr	r0, [fp, #-8]
   25614:	ldr	r1, [fp, #-12]
   25618:	ldr	r2, [fp, #-16]
   2561c:	bl	1c8b4 <main@@Base+0x5f68>
   25620:	str	r0, [fp, #-12]
   25624:	ldr	r0, [fp, #-12]
   25628:	ldr	r1, [fp, #-16]
   2562c:	bl	1c960 <main@@Base+0x6014>
   25630:	str	r1, [sp, #52]	; 0x34
   25634:	str	r0, [sp, #48]	; 0x30
   25638:	ldr	r0, [sp, #52]	; 0x34
   2563c:	movw	r1, #25442	; 0x6362
   25640:	movt	r1, #25443	; 0x6363
   25644:	cmp	r0, r1
   25648:	bhi	25ae4 <main@@Base+0xf198>
   2564c:	b	25650 <main@@Base+0xed04>
   25650:	ldr	r0, [sp, #48]	; 0x30
   25654:	ldr	r1, [sp, #52]	; 0x34
   25658:	movw	r2, #24929	; 0x6161
   2565c:	movt	r2, #24929	; 0x6161
   25660:	eor	r1, r1, r2
   25664:	movw	r2, #13108	; 0x3334
   25668:	movt	r2, #12594	; 0x3132
   2566c:	eor	r0, r0, r2
   25670:	orr	r0, r0, r1
   25674:	cmp	r0, #0
   25678:	bne	257f4 <main@@Base+0xeea8>
   2567c:	b	25680 <main@@Base+0xed34>
   25680:	ldr	r0, [fp, #-12]
   25684:	add	r0, r0, #8
   25688:	str	r0, [fp, #-12]
   2568c:	ldr	r0, [fp, #-12]
   25690:	ldr	r1, [fp, #-16]
   25694:	bl	1c960 <main@@Base+0x6014>
   25698:	str	r1, [sp, #52]	; 0x34
   2569c:	str	r0, [sp, #48]	; 0x30
   256a0:	ldrb	r0, [sp, #55]	; 0x37
   256a4:	mov	r1, #889192448	; 0x35000000
   256a8:	teq	r1, r0, lsl #24
   256ac:	bne	257dc <main@@Base+0xee90>
   256b0:	b	256b4 <main@@Base+0xed68>
   256b4:	ldr	r0, [fp, #-8]
   256b8:	ldr	r1, [fp, #-12]
   256bc:	str	r1, [fp, #-40]	; 0xffffffd8
   256c0:	ldr	r2, [fp, #-16]
   256c4:	movw	r3, #1
   256c8:	bl	1c998 <main@@Base+0x604c>
   256cc:	str	r0, [fp, #-12]
   256d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   256d4:	ldr	r1, [fp, #-12]
   256d8:	cmp	r0, r1
   256dc:	beq	257c4 <main@@Base+0xee78>
   256e0:	movw	r0, #0
   256e4:	str	r0, [sp, #44]	; 0x2c
   256e8:	ldr	r0, [fp, #-8]
   256ec:	ldr	r1, [fp, #-12]
   256f0:	str	r1, [fp, #-40]	; 0xffffffd8
   256f4:	ldr	r2, [fp, #-16]
   256f8:	add	r3, sp, #44	; 0x2c
   256fc:	bl	21170 <main@@Base+0xa824>
   25700:	str	r0, [fp, #-12]
   25704:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25708:	ldr	r1, [fp, #-12]
   2570c:	cmp	r0, r1
   25710:	bne	25764 <main@@Base+0xee18>
   25714:	ldr	r0, [pc, #2752]	; 261dc <main@@Base+0xf890>
   25718:	add	r3, pc, r0
   2571c:	ldr	r0, [fp, #-8]
   25720:	ldr	r1, [fp, #-12]
   25724:	str	r1, [fp, #-40]	; 0xffffffd8
   25728:	ldr	r2, [fp, #-16]
   2572c:	add	ip, sp, #44	; 0x2c
   25730:	str	ip, [sp]
   25734:	bl	21248 <main@@Base+0xa8fc>
   25738:	str	r0, [fp, #-12]
   2573c:	ldr	r0, [fp, #-12]
   25740:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25744:	cmp	r0, r1
   25748:	beq	2575c <main@@Base+0xee10>
   2574c:	ldr	r0, [fp, #-12]
   25750:	ldr	r1, [fp, #-16]
   25754:	cmp	r0, r1
   25758:	bne	25760 <main@@Base+0xee14>
   2575c:	b	261a4 <main@@Base+0xf858>
   25760:	b	25764 <main@@Base+0xee18>
   25764:	ldr	r0, [sp, #44]	; 0x2c
   25768:	cmp	r0, #0
   2576c:	bne	25784 <main@@Base+0xee38>
   25770:	ldr	r0, [fp, #-8]
   25774:	ldr	r0, [r0, #8]
   25778:	and	r0, r0, #2
   2577c:	cmp	r0, #0
   25780:	beq	257c0 <main@@Base+0xee74>
   25784:	ldr	r0, [fp, #-8]
   25788:	ldr	r0, [r0]
   2578c:	movw	r1, #1
   25790:	movw	r2, #4
   25794:	movw	r3, #4
   25798:	uxth	r3, r3
   2579c:	bl	2debc <flatcc_builder_table_add@@Base>
   257a0:	str	r0, [fp, #-28]	; 0xffffffe4
   257a4:	movw	r1, #0
   257a8:	cmp	r0, r1
   257ac:	bne	257b4 <main@@Base+0xee68>
   257b0:	b	261a4 <main@@Base+0xf858>
   257b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   257b8:	ldr	r1, [sp, #44]	; 0x2c
   257bc:	bl	2142c <main@@Base+0xaae0>
   257c0:	b	257d8 <main@@Base+0xee8c>
   257c4:	ldr	r0, [fp, #-8]
   257c8:	ldr	r1, [fp, #-12]
   257cc:	ldr	r2, [fp, #-16]
   257d0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   257d4:	str	r0, [fp, #-12]
   257d8:	b	257f0 <main@@Base+0xeea4>
   257dc:	ldr	r0, [fp, #-8]
   257e0:	ldr	r1, [fp, #-12]
   257e4:	ldr	r2, [fp, #-16]
   257e8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   257ec:	str	r0, [fp, #-12]
   257f0:	b	25ae0 <main@@Base+0xf194>
   257f4:	ldr	r0, [sp, #52]	; 0x34
   257f8:	movw	r1, #24929	; 0x6161
   257fc:	movt	r1, #24929	; 0x6161
   25800:	teq	r0, r1
   25804:	bne	25898 <main@@Base+0xef4c>
   25808:	b	2580c <main@@Base+0xeec0>
   2580c:	ldr	r0, [fp, #-8]
   25810:	ldr	r1, [fp, #-12]
   25814:	str	r1, [fp, #-40]	; 0xffffffd8
   25818:	ldr	r2, [fp, #-16]
   2581c:	movw	r3, #4
   25820:	bl	1c998 <main@@Base+0x604c>
   25824:	str	r0, [fp, #-12]
   25828:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2582c:	ldr	r1, [fp, #-12]
   25830:	cmp	r0, r1
   25834:	beq	25890 <main@@Base+0xef44>
   25838:	ldr	r0, [fp, #-8]
   2583c:	ldr	r1, [fp, #-12]
   25840:	ldr	r2, [fp, #-16]
   25844:	sub	r3, fp, #32
   25848:	bl	36fe4 <flatcc_json_parser_build_string@@Base>
   2584c:	str	r0, [fp, #-12]
   25850:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25854:	cmp	r0, #0
   25858:	beq	2587c <main@@Base+0xef30>
   2585c:	ldr	r0, [fp, #-8]
   25860:	ldr	r0, [r0]
   25864:	movw	r1, #0
   25868:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   2586c:	str	r0, [fp, #-36]	; 0xffffffdc
   25870:	movw	r1, #0
   25874:	cmp	r0, r1
   25878:	bne	25880 <main@@Base+0xef34>
   2587c:	b	261a4 <main@@Base+0xf858>
   25880:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25884:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25888:	str	r0, [r1]
   2588c:	b	25894 <main@@Base+0xef48>
   25890:	b	258a0 <main@@Base+0xef54>
   25894:	b	2589c <main@@Base+0xef50>
   25898:	b	258a0 <main@@Base+0xef54>
   2589c:	b	25adc <main@@Base+0xf190>
   258a0:	ldr	r0, [sp, #48]	; 0x30
   258a4:	ldr	r1, [sp, #52]	; 0x34
   258a8:	movw	r2, #25186	; 0x6262
   258ac:	movt	r2, #25186	; 0x6262
   258b0:	eor	r1, r1, r2
   258b4:	movw	r2, #13108	; 0x3334
   258b8:	movt	r2, #12594	; 0x3132
   258bc:	eor	r0, r0, r2
   258c0:	orr	r0, r0, r1
   258c4:	cmp	r0, #0
   258c8:	bne	25a0c <main@@Base+0xf0c0>
   258cc:	b	258d0 <main@@Base+0xef84>
   258d0:	ldr	r0, [fp, #-8]
   258d4:	ldr	r1, [fp, #-12]
   258d8:	str	r1, [fp, #-40]	; 0xffffffd8
   258dc:	ldr	r2, [fp, #-16]
   258e0:	movw	r3, #8
   258e4:	bl	1c998 <main@@Base+0x604c>
   258e8:	str	r0, [fp, #-12]
   258ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   258f0:	ldr	r1, [fp, #-12]
   258f4:	cmp	r0, r1
   258f8:	beq	259f4 <main@@Base+0xf0a8>
   258fc:	mov	r0, #0
   25900:	str	r0, [sp, #36]	; 0x24
   25904:	str	r0, [sp, #32]
   25908:	ldr	r0, [fp, #-8]
   2590c:	ldr	r1, [fp, #-12]
   25910:	str	r1, [fp, #-40]	; 0xffffffd8
   25914:	ldr	r2, [fp, #-16]
   25918:	add	r3, sp, #32
   2591c:	bl	20e64 <main@@Base+0xa518>
   25920:	str	r0, [fp, #-12]
   25924:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25928:	ldr	r1, [fp, #-12]
   2592c:	cmp	r0, r1
   25930:	bne	25984 <main@@Base+0xf038>
   25934:	ldr	r0, [pc, #2204]	; 261d8 <main@@Base+0xf88c>
   25938:	add	r3, pc, r0
   2593c:	ldr	r0, [fp, #-8]
   25940:	ldr	r1, [fp, #-12]
   25944:	str	r1, [fp, #-40]	; 0xffffffd8
   25948:	ldr	r2, [fp, #-16]
   2594c:	add	ip, sp, #32
   25950:	str	ip, [sp]
   25954:	bl	20f3c <main@@Base+0xa5f0>
   25958:	str	r0, [fp, #-12]
   2595c:	ldr	r0, [fp, #-12]
   25960:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25964:	cmp	r0, r1
   25968:	beq	2597c <main@@Base+0xf030>
   2596c:	ldr	r0, [fp, #-12]
   25970:	ldr	r1, [fp, #-16]
   25974:	cmp	r0, r1
   25978:	bne	25980 <main@@Base+0xf034>
   2597c:	b	261a4 <main@@Base+0xf858>
   25980:	b	25984 <main@@Base+0xf038>
   25984:	ldr	r0, [sp, #32]
   25988:	ldr	r1, [sp, #36]	; 0x24
   2598c:	orr	r0, r0, r1
   25990:	cmp	r0, #0
   25994:	bne	259b0 <main@@Base+0xf064>
   25998:	b	2599c <main@@Base+0xf050>
   2599c:	ldr	r0, [fp, #-8]
   259a0:	ldr	r0, [r0, #8]
   259a4:	and	r0, r0, #2
   259a8:	cmp	r0, #0
   259ac:	beq	259f0 <main@@Base+0xf0a4>
   259b0:	ldr	r0, [fp, #-8]
   259b4:	ldr	r0, [r0]
   259b8:	movw	r1, #3
   259bc:	movw	r2, #8
   259c0:	movw	r3, #8
   259c4:	uxth	r3, r3
   259c8:	bl	2debc <flatcc_builder_table_add@@Base>
   259cc:	str	r0, [fp, #-28]	; 0xffffffe4
   259d0:	movw	r1, #0
   259d4:	cmp	r0, r1
   259d8:	bne	259e0 <main@@Base+0xf094>
   259dc:	b	261a4 <main@@Base+0xf858>
   259e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   259e4:	ldr	r2, [sp, #32]
   259e8:	ldr	r3, [sp, #36]	; 0x24
   259ec:	bl	21138 <main@@Base+0xa7ec>
   259f0:	b	25a08 <main@@Base+0xf0bc>
   259f4:	ldr	r0, [fp, #-8]
   259f8:	ldr	r1, [fp, #-12]
   259fc:	ldr	r2, [fp, #-16]
   25a00:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   25a04:	str	r0, [fp, #-12]
   25a08:	b	25ad8 <main@@Base+0xf18c>
   25a0c:	ldr	r0, [sp, #52]	; 0x34
   25a10:	movw	r1, #25186	; 0x6262
   25a14:	movt	r1, #25186	; 0x6262
   25a18:	teq	r0, r1
   25a1c:	bne	25ac0 <main@@Base+0xf174>
   25a20:	b	25a24 <main@@Base+0xf0d8>
   25a24:	ldr	r0, [fp, #-8]
   25a28:	ldr	r1, [fp, #-12]
   25a2c:	str	r1, [fp, #-40]	; 0xffffffd8
   25a30:	ldr	r2, [fp, #-16]
   25a34:	movw	r3, #4
   25a38:	bl	1c998 <main@@Base+0x604c>
   25a3c:	str	r0, [fp, #-12]
   25a40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25a44:	ldr	r1, [fp, #-12]
   25a48:	cmp	r0, r1
   25a4c:	beq	25aa8 <main@@Base+0xf15c>
   25a50:	ldr	r0, [fp, #-8]
   25a54:	ldr	r1, [fp, #-12]
   25a58:	ldr	r2, [fp, #-16]
   25a5c:	sub	r3, fp, #32
   25a60:	bl	36fe4 <flatcc_json_parser_build_string@@Base>
   25a64:	str	r0, [fp, #-12]
   25a68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25a6c:	cmp	r0, #0
   25a70:	beq	25a94 <main@@Base+0xf148>
   25a74:	ldr	r0, [fp, #-8]
   25a78:	ldr	r0, [r0]
   25a7c:	movw	r1, #2
   25a80:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   25a84:	str	r0, [fp, #-36]	; 0xffffffdc
   25a88:	movw	r1, #0
   25a8c:	cmp	r0, r1
   25a90:	bne	25a98 <main@@Base+0xf14c>
   25a94:	b	261a4 <main@@Base+0xf858>
   25a98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25a9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25aa0:	str	r0, [r1]
   25aa4:	b	25abc <main@@Base+0xf170>
   25aa8:	ldr	r0, [fp, #-8]
   25aac:	ldr	r1, [fp, #-12]
   25ab0:	ldr	r2, [fp, #-16]
   25ab4:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   25ab8:	str	r0, [fp, #-12]
   25abc:	b	25ad4 <main@@Base+0xf188>
   25ac0:	ldr	r0, [fp, #-8]
   25ac4:	ldr	r1, [fp, #-12]
   25ac8:	ldr	r2, [fp, #-16]
   25acc:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   25ad0:	str	r0, [fp, #-12]
   25ad4:	b	25ad8 <main@@Base+0xf18c>
   25ad8:	b	25adc <main@@Base+0xf190>
   25adc:	b	25ae0 <main@@Base+0xf194>
   25ae0:	b	26148 <main@@Base+0xf7fc>
   25ae4:	ldr	r0, [sp, #48]	; 0x30
   25ae8:	ldr	r1, [sp, #52]	; 0x34
   25aec:	movw	r2, #25443	; 0x6363
   25af0:	movt	r2, #25443	; 0x6363
   25af4:	eor	r1, r1, r2
   25af8:	movw	r2, #13108	; 0x3334
   25afc:	movt	r2, #12594	; 0x3132
   25b00:	eor	r0, r0, r2
   25b04:	orr	r0, r0, r1
   25b08:	cmp	r0, #0
   25b0c:	bne	25db0 <main@@Base+0xf464>
   25b10:	b	25b14 <main@@Base+0xf1c8>
   25b14:	ldr	r0, [fp, #-8]
   25b18:	ldr	r1, [fp, #-12]
   25b1c:	str	r1, [fp, #-40]	; 0xffffffd8
   25b20:	ldr	r2, [fp, #-16]
   25b24:	movw	r3, #8
   25b28:	bl	1c998 <main@@Base+0x604c>
   25b2c:	str	r0, [fp, #-12]
   25b30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25b34:	ldr	r1, [fp, #-12]
   25b38:	cmp	r0, r1
   25b3c:	beq	25c38 <main@@Base+0xf2ec>
   25b40:	mov	r0, #0
   25b44:	str	r0, [sp, #28]
   25b48:	str	r0, [sp, #24]
   25b4c:	ldr	r0, [fp, #-8]
   25b50:	ldr	r1, [fp, #-12]
   25b54:	str	r1, [fp, #-40]	; 0xffffffd8
   25b58:	ldr	r2, [fp, #-16]
   25b5c:	add	r3, sp, #24
   25b60:	bl	20e64 <main@@Base+0xa518>
   25b64:	str	r0, [fp, #-12]
   25b68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25b6c:	ldr	r1, [fp, #-12]
   25b70:	cmp	r0, r1
   25b74:	bne	25bc8 <main@@Base+0xf27c>
   25b78:	ldr	r0, [pc, #1620]	; 261d4 <main@@Base+0xf888>
   25b7c:	add	r3, pc, r0
   25b80:	ldr	r0, [fp, #-8]
   25b84:	ldr	r1, [fp, #-12]
   25b88:	str	r1, [fp, #-40]	; 0xffffffd8
   25b8c:	ldr	r2, [fp, #-16]
   25b90:	add	ip, sp, #24
   25b94:	str	ip, [sp]
   25b98:	bl	20f3c <main@@Base+0xa5f0>
   25b9c:	str	r0, [fp, #-12]
   25ba0:	ldr	r0, [fp, #-12]
   25ba4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25ba8:	cmp	r0, r1
   25bac:	beq	25bc0 <main@@Base+0xf274>
   25bb0:	ldr	r0, [fp, #-12]
   25bb4:	ldr	r1, [fp, #-16]
   25bb8:	cmp	r0, r1
   25bbc:	bne	25bc4 <main@@Base+0xf278>
   25bc0:	b	261a4 <main@@Base+0xf858>
   25bc4:	b	25bc8 <main@@Base+0xf27c>
   25bc8:	ldr	r0, [sp, #24]
   25bcc:	ldr	r1, [sp, #28]
   25bd0:	orr	r0, r0, r1
   25bd4:	cmp	r0, #0
   25bd8:	bne	25bf4 <main@@Base+0xf2a8>
   25bdc:	b	25be0 <main@@Base+0xf294>
   25be0:	ldr	r0, [fp, #-8]
   25be4:	ldr	r0, [r0, #8]
   25be8:	and	r0, r0, #2
   25bec:	cmp	r0, #0
   25bf0:	beq	25c34 <main@@Base+0xf2e8>
   25bf4:	ldr	r0, [fp, #-8]
   25bf8:	ldr	r0, [r0]
   25bfc:	movw	r1, #5
   25c00:	movw	r2, #8
   25c04:	movw	r3, #8
   25c08:	uxth	r3, r3
   25c0c:	bl	2debc <flatcc_builder_table_add@@Base>
   25c10:	str	r0, [fp, #-28]	; 0xffffffe4
   25c14:	movw	r1, #0
   25c18:	cmp	r0, r1
   25c1c:	bne	25c24 <main@@Base+0xf2d8>
   25c20:	b	261a4 <main@@Base+0xf858>
   25c24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25c28:	ldr	r2, [sp, #24]
   25c2c:	ldr	r3, [sp, #28]
   25c30:	bl	21138 <main@@Base+0xa7ec>
   25c34:	b	25dac <main@@Base+0xf460>
   25c38:	ldr	r0, [fp, #-12]
   25c3c:	add	r0, r0, #8
   25c40:	str	r0, [fp, #-12]
   25c44:	ldr	r0, [fp, #-12]
   25c48:	ldr	r1, [fp, #-16]
   25c4c:	bl	1c960 <main@@Base+0x6014>
   25c50:	str	r1, [sp, #52]	; 0x34
   25c54:	str	r0, [sp, #48]	; 0x30
   25c58:	ldrb	r0, [sp, #55]	; 0x37
   25c5c:	mov	r1, #889192448	; 0x35000000
   25c60:	teq	r1, r0, lsl #24
   25c64:	bne	25d94 <main@@Base+0xf448>
   25c68:	b	25c6c <main@@Base+0xf320>
   25c6c:	ldr	r0, [fp, #-8]
   25c70:	ldr	r1, [fp, #-12]
   25c74:	str	r1, [fp, #-40]	; 0xffffffd8
   25c78:	ldr	r2, [fp, #-16]
   25c7c:	movw	r3, #1
   25c80:	bl	1c998 <main@@Base+0x604c>
   25c84:	str	r0, [fp, #-12]
   25c88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25c8c:	ldr	r1, [fp, #-12]
   25c90:	cmp	r0, r1
   25c94:	beq	25d7c <main@@Base+0xf430>
   25c98:	movw	r0, #0
   25c9c:	str	r0, [sp, #20]
   25ca0:	ldr	r0, [fp, #-8]
   25ca4:	ldr	r1, [fp, #-12]
   25ca8:	str	r1, [fp, #-40]	; 0xffffffd8
   25cac:	ldr	r2, [fp, #-16]
   25cb0:	add	r3, sp, #20
   25cb4:	bl	21170 <main@@Base+0xa824>
   25cb8:	str	r0, [fp, #-12]
   25cbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25cc0:	ldr	r1, [fp, #-12]
   25cc4:	cmp	r0, r1
   25cc8:	bne	25d1c <main@@Base+0xf3d0>
   25ccc:	ldr	r0, [pc, #1276]	; 261d0 <main@@Base+0xf884>
   25cd0:	add	r3, pc, r0
   25cd4:	ldr	r0, [fp, #-8]
   25cd8:	ldr	r1, [fp, #-12]
   25cdc:	str	r1, [fp, #-40]	; 0xffffffd8
   25ce0:	ldr	r2, [fp, #-16]
   25ce4:	add	ip, sp, #20
   25ce8:	str	ip, [sp]
   25cec:	bl	21248 <main@@Base+0xa8fc>
   25cf0:	str	r0, [fp, #-12]
   25cf4:	ldr	r0, [fp, #-12]
   25cf8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25cfc:	cmp	r0, r1
   25d00:	beq	25d14 <main@@Base+0xf3c8>
   25d04:	ldr	r0, [fp, #-12]
   25d08:	ldr	r1, [fp, #-16]
   25d0c:	cmp	r0, r1
   25d10:	bne	25d18 <main@@Base+0xf3cc>
   25d14:	b	261a4 <main@@Base+0xf858>
   25d18:	b	25d1c <main@@Base+0xf3d0>
   25d1c:	ldr	r0, [sp, #20]
   25d20:	cmp	r0, #0
   25d24:	bne	25d3c <main@@Base+0xf3f0>
   25d28:	ldr	r0, [fp, #-8]
   25d2c:	ldr	r0, [r0, #8]
   25d30:	and	r0, r0, #2
   25d34:	cmp	r0, #0
   25d38:	beq	25d78 <main@@Base+0xf42c>
   25d3c:	ldr	r0, [fp, #-8]
   25d40:	ldr	r0, [r0]
   25d44:	movw	r1, #6
   25d48:	movw	r2, #4
   25d4c:	movw	r3, #4
   25d50:	uxth	r3, r3
   25d54:	bl	2debc <flatcc_builder_table_add@@Base>
   25d58:	str	r0, [fp, #-28]	; 0xffffffe4
   25d5c:	movw	r1, #0
   25d60:	cmp	r0, r1
   25d64:	bne	25d6c <main@@Base+0xf420>
   25d68:	b	261a4 <main@@Base+0xf858>
   25d6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25d70:	ldr	r1, [sp, #20]
   25d74:	bl	2142c <main@@Base+0xaae0>
   25d78:	b	25d90 <main@@Base+0xf444>
   25d7c:	ldr	r0, [fp, #-8]
   25d80:	ldr	r1, [fp, #-12]
   25d84:	ldr	r2, [fp, #-16]
   25d88:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   25d8c:	str	r0, [fp, #-12]
   25d90:	b	25da8 <main@@Base+0xf45c>
   25d94:	ldr	r0, [fp, #-8]
   25d98:	ldr	r1, [fp, #-12]
   25d9c:	ldr	r2, [fp, #-16]
   25da0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   25da4:	str	r0, [fp, #-12]
   25da8:	b	25dac <main@@Base+0xf460>
   25dac:	b	26144 <main@@Base+0xf7f8>
   25db0:	ldr	r0, [sp, #52]	; 0x34
   25db4:	movw	r1, #25443	; 0x6363
   25db8:	movt	r1, #25443	; 0x6363
   25dbc:	teq	r0, r1
   25dc0:	bne	25e54 <main@@Base+0xf508>
   25dc4:	b	25dc8 <main@@Base+0xf47c>
   25dc8:	ldr	r0, [fp, #-8]
   25dcc:	ldr	r1, [fp, #-12]
   25dd0:	str	r1, [fp, #-40]	; 0xffffffd8
   25dd4:	ldr	r2, [fp, #-16]
   25dd8:	movw	r3, #4
   25ddc:	bl	1c998 <main@@Base+0x604c>
   25de0:	str	r0, [fp, #-12]
   25de4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25de8:	ldr	r1, [fp, #-12]
   25dec:	cmp	r0, r1
   25df0:	beq	25e4c <main@@Base+0xf500>
   25df4:	ldr	r0, [fp, #-8]
   25df8:	ldr	r1, [fp, #-12]
   25dfc:	ldr	r2, [fp, #-16]
   25e00:	sub	r3, fp, #32
   25e04:	bl	36fe4 <flatcc_json_parser_build_string@@Base>
   25e08:	str	r0, [fp, #-12]
   25e0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25e10:	cmp	r0, #0
   25e14:	beq	25e38 <main@@Base+0xf4ec>
   25e18:	ldr	r0, [fp, #-8]
   25e1c:	ldr	r0, [r0]
   25e20:	movw	r1, #4
   25e24:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   25e28:	str	r0, [fp, #-36]	; 0xffffffdc
   25e2c:	movw	r1, #0
   25e30:	cmp	r0, r1
   25e34:	bne	25e3c <main@@Base+0xf4f0>
   25e38:	b	261a4 <main@@Base+0xf858>
   25e3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25e40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25e44:	str	r0, [r1]
   25e48:	b	25e50 <main@@Base+0xf504>
   25e4c:	b	25e5c <main@@Base+0xf510>
   25e50:	b	25e58 <main@@Base+0xf50c>
   25e54:	b	25e5c <main@@Base+0xf510>
   25e58:	b	26140 <main@@Base+0xf7f4>
   25e5c:	ldr	r0, [sp, #48]	; 0x30
   25e60:	ldr	r1, [sp, #52]	; 0x34
   25e64:	movw	r2, #25700	; 0x6464
   25e68:	movt	r2, #25700	; 0x6464
   25e6c:	eor	r1, r1, r2
   25e70:	movw	r2, #13108	; 0x3334
   25e74:	movt	r2, #12594	; 0x3132
   25e78:	eor	r0, r0, r2
   25e7c:	orr	r0, r0, r1
   25e80:	cmp	r0, #0
   25e84:	bne	26128 <main@@Base+0xf7dc>
   25e88:	b	25e8c <main@@Base+0xf540>
   25e8c:	ldr	r0, [fp, #-8]
   25e90:	ldr	r1, [fp, #-12]
   25e94:	str	r1, [fp, #-40]	; 0xffffffd8
   25e98:	ldr	r2, [fp, #-16]
   25e9c:	movw	r3, #8
   25ea0:	bl	1c998 <main@@Base+0x604c>
   25ea4:	str	r0, [fp, #-12]
   25ea8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25eac:	ldr	r1, [fp, #-12]
   25eb0:	cmp	r0, r1
   25eb4:	beq	25fb0 <main@@Base+0xf664>
   25eb8:	mov	r0, #0
   25ebc:	str	r0, [sp, #12]
   25ec0:	str	r0, [sp, #8]
   25ec4:	ldr	r0, [fp, #-8]
   25ec8:	ldr	r1, [fp, #-12]
   25ecc:	str	r1, [fp, #-40]	; 0xffffffd8
   25ed0:	ldr	r2, [fp, #-16]
   25ed4:	add	r3, sp, #8
   25ed8:	bl	20e64 <main@@Base+0xa518>
   25edc:	str	r0, [fp, #-12]
   25ee0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25ee4:	ldr	r1, [fp, #-12]
   25ee8:	cmp	r0, r1
   25eec:	bne	25f40 <main@@Base+0xf5f4>
   25ef0:	ldr	r0, [pc, #724]	; 261cc <main@@Base+0xf880>
   25ef4:	add	r3, pc, r0
   25ef8:	ldr	r0, [fp, #-8]
   25efc:	ldr	r1, [fp, #-12]
   25f00:	str	r1, [fp, #-40]	; 0xffffffd8
   25f04:	ldr	r2, [fp, #-16]
   25f08:	add	ip, sp, #8
   25f0c:	str	ip, [sp]
   25f10:	bl	20f3c <main@@Base+0xa5f0>
   25f14:	str	r0, [fp, #-12]
   25f18:	ldr	r0, [fp, #-12]
   25f1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25f20:	cmp	r0, r1
   25f24:	beq	25f38 <main@@Base+0xf5ec>
   25f28:	ldr	r0, [fp, #-12]
   25f2c:	ldr	r1, [fp, #-16]
   25f30:	cmp	r0, r1
   25f34:	bne	25f3c <main@@Base+0xf5f0>
   25f38:	b	261a4 <main@@Base+0xf858>
   25f3c:	b	25f40 <main@@Base+0xf5f4>
   25f40:	ldr	r0, [sp, #8]
   25f44:	ldr	r1, [sp, #12]
   25f48:	orr	r0, r0, r1
   25f4c:	cmp	r0, #0
   25f50:	bne	25f6c <main@@Base+0xf620>
   25f54:	b	25f58 <main@@Base+0xf60c>
   25f58:	ldr	r0, [fp, #-8]
   25f5c:	ldr	r0, [r0, #8]
   25f60:	and	r0, r0, #2
   25f64:	cmp	r0, #0
   25f68:	beq	25fac <main@@Base+0xf660>
   25f6c:	ldr	r0, [fp, #-8]
   25f70:	ldr	r0, [r0]
   25f74:	movw	r1, #7
   25f78:	movw	r2, #8
   25f7c:	movw	r3, #8
   25f80:	uxth	r3, r3
   25f84:	bl	2debc <flatcc_builder_table_add@@Base>
   25f88:	str	r0, [fp, #-28]	; 0xffffffe4
   25f8c:	movw	r1, #0
   25f90:	cmp	r0, r1
   25f94:	bne	25f9c <main@@Base+0xf650>
   25f98:	b	261a4 <main@@Base+0xf858>
   25f9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25fa0:	ldr	r2, [sp, #8]
   25fa4:	ldr	r3, [sp, #12]
   25fa8:	bl	21138 <main@@Base+0xa7ec>
   25fac:	b	26124 <main@@Base+0xf7d8>
   25fb0:	ldr	r0, [fp, #-12]
   25fb4:	add	r0, r0, #8
   25fb8:	str	r0, [fp, #-12]
   25fbc:	ldr	r0, [fp, #-12]
   25fc0:	ldr	r1, [fp, #-16]
   25fc4:	bl	1c960 <main@@Base+0x6014>
   25fc8:	str	r1, [sp, #52]	; 0x34
   25fcc:	str	r0, [sp, #48]	; 0x30
   25fd0:	ldrb	r0, [sp, #55]	; 0x37
   25fd4:	mov	r1, #889192448	; 0x35000000
   25fd8:	teq	r1, r0, lsl #24
   25fdc:	bne	2610c <main@@Base+0xf7c0>
   25fe0:	b	25fe4 <main@@Base+0xf698>
   25fe4:	ldr	r0, [fp, #-8]
   25fe8:	ldr	r1, [fp, #-12]
   25fec:	str	r1, [fp, #-40]	; 0xffffffd8
   25ff0:	ldr	r2, [fp, #-16]
   25ff4:	movw	r3, #1
   25ff8:	bl	1c998 <main@@Base+0x604c>
   25ffc:	str	r0, [fp, #-12]
   26000:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26004:	ldr	r1, [fp, #-12]
   26008:	cmp	r0, r1
   2600c:	beq	260f4 <main@@Base+0xf7a8>
   26010:	movw	r0, #0
   26014:	str	r0, [sp, #4]
   26018:	ldr	r0, [fp, #-8]
   2601c:	ldr	r1, [fp, #-12]
   26020:	str	r1, [fp, #-40]	; 0xffffffd8
   26024:	ldr	r2, [fp, #-16]
   26028:	add	r3, sp, #4
   2602c:	bl	21170 <main@@Base+0xa824>
   26030:	str	r0, [fp, #-12]
   26034:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26038:	ldr	r1, [fp, #-12]
   2603c:	cmp	r0, r1
   26040:	bne	26094 <main@@Base+0xf748>
   26044:	ldr	r0, [pc, #380]	; 261c8 <main@@Base+0xf87c>
   26048:	add	r3, pc, r0
   2604c:	ldr	r0, [fp, #-8]
   26050:	ldr	r1, [fp, #-12]
   26054:	str	r1, [fp, #-40]	; 0xffffffd8
   26058:	ldr	r2, [fp, #-16]
   2605c:	add	ip, sp, #4
   26060:	str	ip, [sp]
   26064:	bl	21248 <main@@Base+0xa8fc>
   26068:	str	r0, [fp, #-12]
   2606c:	ldr	r0, [fp, #-12]
   26070:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26074:	cmp	r0, r1
   26078:	beq	2608c <main@@Base+0xf740>
   2607c:	ldr	r0, [fp, #-12]
   26080:	ldr	r1, [fp, #-16]
   26084:	cmp	r0, r1
   26088:	bne	26090 <main@@Base+0xf744>
   2608c:	b	261a4 <main@@Base+0xf858>
   26090:	b	26094 <main@@Base+0xf748>
   26094:	ldr	r0, [sp, #4]
   26098:	cmp	r0, #0
   2609c:	bne	260b4 <main@@Base+0xf768>
   260a0:	ldr	r0, [fp, #-8]
   260a4:	ldr	r0, [r0, #8]
   260a8:	and	r0, r0, #2
   260ac:	cmp	r0, #0
   260b0:	beq	260f0 <main@@Base+0xf7a4>
   260b4:	ldr	r0, [fp, #-8]
   260b8:	ldr	r0, [r0]
   260bc:	movw	r1, #8
   260c0:	movw	r2, #4
   260c4:	movw	r3, #4
   260c8:	uxth	r3, r3
   260cc:	bl	2debc <flatcc_builder_table_add@@Base>
   260d0:	str	r0, [fp, #-28]	; 0xffffffe4
   260d4:	movw	r1, #0
   260d8:	cmp	r0, r1
   260dc:	bne	260e4 <main@@Base+0xf798>
   260e0:	b	261a4 <main@@Base+0xf858>
   260e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   260e8:	ldr	r1, [sp, #4]
   260ec:	bl	2142c <main@@Base+0xaae0>
   260f0:	b	26108 <main@@Base+0xf7bc>
   260f4:	ldr	r0, [fp, #-8]
   260f8:	ldr	r1, [fp, #-12]
   260fc:	ldr	r2, [fp, #-16]
   26100:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   26104:	str	r0, [fp, #-12]
   26108:	b	26120 <main@@Base+0xf7d4>
   2610c:	ldr	r0, [fp, #-8]
   26110:	ldr	r1, [fp, #-12]
   26114:	ldr	r2, [fp, #-16]
   26118:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   2611c:	str	r0, [fp, #-12]
   26120:	b	26124 <main@@Base+0xf7d8>
   26124:	b	2613c <main@@Base+0xf7f0>
   26128:	ldr	r0, [fp, #-8]
   2612c:	ldr	r1, [fp, #-12]
   26130:	ldr	r2, [fp, #-16]
   26134:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   26138:	str	r0, [fp, #-12]
   2613c:	b	26140 <main@@Base+0xf7f4>
   26140:	b	26144 <main@@Base+0xf7f8>
   26144:	b	26148 <main@@Base+0xf7fc>
   26148:	ldr	r0, [fp, #-8]
   2614c:	ldr	r1, [fp, #-12]
   26150:	ldr	r2, [fp, #-16]
   26154:	sub	r3, fp, #24
   26158:	bl	21984 <main@@Base+0xb038>
   2615c:	str	r0, [fp, #-12]
   26160:	b	25604 <main@@Base+0xecb8>
   26164:	ldr	r0, [fp, #-8]
   26168:	ldr	r0, [r0, #24]
   2616c:	cmp	r0, #0
   26170:	beq	26178 <main@@Base+0xf82c>
   26174:	b	261a4 <main@@Base+0xf858>
   26178:	ldr	r0, [fp, #-8]
   2617c:	ldr	r0, [r0]
   26180:	bl	2d280 <flatcc_builder_end_table@@Base>
   26184:	ldr	r1, [fp, #-20]	; 0xffffffec
   26188:	str	r0, [r1]
   2618c:	cmp	r0, #0
   26190:	bne	26198 <main@@Base+0xf84c>
   26194:	b	261a4 <main@@Base+0xf858>
   26198:	ldr	r0, [fp, #-12]
   2619c:	str	r0, [fp, #-4]
   261a0:	b	261bc <main@@Base+0xf870>
   261a4:	ldr	r0, [fp, #-8]
   261a8:	ldr	r1, [fp, #-12]
   261ac:	ldr	r2, [fp, #-16]
   261b0:	movw	r3, #33	; 0x21
   261b4:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   261b8:	str	r0, [fp, #-4]
   261bc:	ldr	r0, [fp, #-4]
   261c0:	mov	sp, fp
   261c4:	pop	{fp, pc}
   261c8:	andeq	r9, r3, ip, lsr r2
   261cc:	andeq	r9, r3, r4, lsl #7
   261d0:	muleq	r3, ip, r5
   261d4:	andeq	r9, r3, r4, ror #13
   261d8:	andeq	r9, r3, ip, lsl r9
   261dc:	andeq	r9, r3, r0, lsr fp
   261e0:	push	{fp, lr}
   261e4:	mov	fp, sp
   261e8:	sub	sp, sp, #72	; 0x48
   261ec:	str	r0, [fp, #-8]
   261f0:	str	r1, [fp, #-12]
   261f4:	str	r2, [fp, #-16]
   261f8:	str	r3, [fp, #-20]	; 0xffffffec
   261fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   26200:	movw	r1, #0
   26204:	str	r1, [r0]
   26208:	ldr	r0, [fp, #-8]
   2620c:	ldr	r0, [r0]
   26210:	movw	r1, #2
   26214:	bl	2c618 <flatcc_builder_start_table@@Base>
   26218:	cmp	r0, #0
   2621c:	beq	26224 <main@@Base+0xf8d8>
   26220:	b	26678 <main@@Base+0xfd2c>
   26224:	ldr	r0, [fp, #-8]
   26228:	ldr	r1, [fp, #-12]
   2622c:	ldr	r2, [fp, #-16]
   26230:	sub	r3, fp, #24
   26234:	bl	1c7d0 <main@@Base+0x5e84>
   26238:	str	r0, [fp, #-12]
   2623c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26240:	cmp	r0, #0
   26244:	beq	26638 <main@@Base+0xfcec>
   26248:	ldr	r0, [fp, #-8]
   2624c:	ldr	r1, [fp, #-12]
   26250:	ldr	r2, [fp, #-16]
   26254:	bl	1c8b4 <main@@Base+0x5f68>
   26258:	str	r0, [fp, #-12]
   2625c:	ldr	r0, [fp, #-12]
   26260:	ldr	r1, [fp, #-16]
   26264:	bl	1c960 <main@@Base+0x6014>
   26268:	str	r1, [sp, #28]
   2626c:	str	r0, [sp, #24]
   26270:	ldr	r0, [sp, #24]
   26274:	ldr	r1, [sp, #28]
   26278:	movw	r2, #24929	; 0x6161
   2627c:	movt	r2, #24929	; 0x6161
   26280:	eor	r1, r1, r2
   26284:	movw	r2, #25186	; 0x6262
   26288:	movt	r2, #24418	; 0x5f62
   2628c:	eor	r0, r0, r2
   26290:	orr	r0, r0, r1
   26294:	cmp	r0, #0
   26298:	bne	26608 <main@@Base+0xfcbc>
   2629c:	b	262a0 <main@@Base+0xf954>
   262a0:	ldr	r0, [fp, #-12]
   262a4:	add	r0, r0, #8
   262a8:	str	r0, [fp, #-12]
   262ac:	ldr	r0, [fp, #-12]
   262b0:	ldr	r1, [fp, #-16]
   262b4:	bl	1c960 <main@@Base+0x6014>
   262b8:	str	r1, [sp, #28]
   262bc:	str	r0, [sp, #24]
   262c0:	ldr	r0, [sp, #24]
   262c4:	ldr	r1, [sp, #28]
   262c8:	movw	r2, #29556	; 0x7374
   262cc:	movt	r2, #25183	; 0x625f
   262d0:	eor	r1, r1, r2
   262d4:	movw	r2, #29791	; 0x745f
   262d8:	movt	r2, #24946	; 0x6172
   262dc:	eor	r0, r0, r2
   262e0:	orr	r0, r0, r1
   262e4:	cmp	r0, #0
   262e8:	bne	26478 <main@@Base+0xfb2c>
   262ec:	b	262f0 <main@@Base+0xf9a4>
   262f0:	ldr	r0, [fp, #-12]
   262f4:	add	r0, r0, #8
   262f8:	str	r0, [fp, #-12]
   262fc:	ldr	r0, [fp, #-12]
   26300:	ldr	r1, [fp, #-16]
   26304:	bl	1c960 <main@@Base+0x6014>
   26308:	str	r1, [sp, #28]
   2630c:	str	r0, [sp, #24]
   26310:	ldrb	r0, [sp, #27]
   26314:	ldr	r1, [sp, #28]
   26318:	movw	r2, #25968	; 0x6570
   2631c:	movt	r2, #29556	; 0x7374
   26320:	eor	r1, r1, r2
   26324:	eor	r0, r0, #115	; 0x73
   26328:	orr	r0, r1, r0, lsl #24
   2632c:	cmp	r0, #0
   26330:	bne	26460 <main@@Base+0xfb14>
   26334:	b	26338 <main@@Base+0xf9ec>
   26338:	ldr	r0, [fp, #-8]
   2633c:	ldr	r1, [fp, #-12]
   26340:	str	r1, [sp, #32]
   26344:	ldr	r2, [fp, #-16]
   26348:	movw	r3, #5
   2634c:	bl	1c998 <main@@Base+0x604c>
   26350:	str	r0, [fp, #-12]
   26354:	ldr	r0, [sp, #32]
   26358:	ldr	r1, [fp, #-12]
   2635c:	cmp	r0, r1
   26360:	beq	26448 <main@@Base+0xfafc>
   26364:	movw	r0, #0
   26368:	str	r0, [sp, #20]
   2636c:	ldr	r0, [fp, #-8]
   26370:	ldr	r1, [fp, #-12]
   26374:	str	r1, [sp, #32]
   26378:	ldr	r2, [fp, #-16]
   2637c:	add	r3, sp, #20
   26380:	bl	21170 <main@@Base+0xa824>
   26384:	str	r0, [fp, #-12]
   26388:	ldr	r0, [sp, #32]
   2638c:	ldr	r1, [fp, #-12]
   26390:	cmp	r0, r1
   26394:	bne	263e8 <main@@Base+0xfa9c>
   26398:	ldr	r0, [pc, #768]	; 266a0 <main@@Base+0xfd54>
   2639c:	add	r3, pc, r0
   263a0:	ldr	r0, [fp, #-8]
   263a4:	ldr	r1, [fp, #-12]
   263a8:	str	r1, [sp, #32]
   263ac:	ldr	r2, [fp, #-16]
   263b0:	add	ip, sp, #20
   263b4:	str	ip, [sp]
   263b8:	bl	21248 <main@@Base+0xa8fc>
   263bc:	str	r0, [fp, #-12]
   263c0:	ldr	r0, [fp, #-12]
   263c4:	ldr	r1, [sp, #32]
   263c8:	cmp	r0, r1
   263cc:	beq	263e0 <main@@Base+0xfa94>
   263d0:	ldr	r0, [fp, #-12]
   263d4:	ldr	r1, [fp, #-16]
   263d8:	cmp	r0, r1
   263dc:	bne	263e4 <main@@Base+0xfa98>
   263e0:	b	26678 <main@@Base+0xfd2c>
   263e4:	b	263e8 <main@@Base+0xfa9c>
   263e8:	ldr	r0, [sp, #20]
   263ec:	cmp	r0, #0
   263f0:	bne	26408 <main@@Base+0xfabc>
   263f4:	ldr	r0, [fp, #-8]
   263f8:	ldr	r0, [r0, #8]
   263fc:	and	r0, r0, #2
   26400:	cmp	r0, #0
   26404:	beq	26444 <main@@Base+0xfaf8>
   26408:	ldr	r0, [fp, #-8]
   2640c:	ldr	r0, [r0]
   26410:	movw	r1, #1
   26414:	movw	r2, #4
   26418:	movw	r3, #4
   2641c:	uxth	r3, r3
   26420:	bl	2debc <flatcc_builder_table_add@@Base>
   26424:	str	r0, [fp, #-28]	; 0xffffffe4
   26428:	movw	r1, #0
   2642c:	cmp	r0, r1
   26430:	bne	26438 <main@@Base+0xfaec>
   26434:	b	26678 <main@@Base+0xfd2c>
   26438:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2643c:	ldr	r1, [sp, #20]
   26440:	bl	2142c <main@@Base+0xaae0>
   26444:	b	2645c <main@@Base+0xfb10>
   26448:	ldr	r0, [fp, #-8]
   2644c:	ldr	r1, [fp, #-12]
   26450:	ldr	r2, [fp, #-16]
   26454:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   26458:	str	r0, [fp, #-12]
   2645c:	b	26474 <main@@Base+0xfb28>
   26460:	ldr	r0, [fp, #-8]
   26464:	ldr	r1, [fp, #-12]
   26468:	ldr	r2, [fp, #-16]
   2646c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   26470:	str	r0, [fp, #-12]
   26474:	b	26604 <main@@Base+0xfcb8>
   26478:	ldr	r0, [sp, #24]
   2647c:	ldr	r1, [sp, #28]
   26480:	movw	r2, #24435	; 0x5f73
   26484:	movt	r2, #98	; 0x62
   26488:	eor	r2, r2, r1, lsr #8
   2648c:	lsr	r0, r0, #8
   26490:	orr	r0, r0, r1, lsl #24
   26494:	movw	r1, #28787	; 0x7073
   26498:	movt	r1, #29797	; 0x7465
   2649c:	eor	r0, r0, r1
   264a0:	orr	r0, r0, r2
   264a4:	cmp	r0, #0
   264a8:	bne	265ec <main@@Base+0xfca0>
   264ac:	b	264b0 <main@@Base+0xfb64>
   264b0:	ldr	r0, [fp, #-8]
   264b4:	ldr	r1, [fp, #-12]
   264b8:	str	r1, [sp, #32]
   264bc:	ldr	r2, [fp, #-16]
   264c0:	movw	r3, #7
   264c4:	bl	1c998 <main@@Base+0x604c>
   264c8:	str	r0, [fp, #-12]
   264cc:	ldr	r0, [sp, #32]
   264d0:	ldr	r1, [fp, #-12]
   264d4:	cmp	r0, r1
   264d8:	beq	265d4 <main@@Base+0xfc88>
   264dc:	mov	r0, #0
   264e0:	str	r0, [sp, #12]
   264e4:	str	r0, [sp, #8]
   264e8:	ldr	r0, [fp, #-8]
   264ec:	ldr	r1, [fp, #-12]
   264f0:	str	r1, [sp, #32]
   264f4:	ldr	r2, [fp, #-16]
   264f8:	add	r3, sp, #8
   264fc:	bl	20e64 <main@@Base+0xa518>
   26500:	str	r0, [fp, #-12]
   26504:	ldr	r0, [sp, #32]
   26508:	ldr	r1, [fp, #-12]
   2650c:	cmp	r0, r1
   26510:	bne	26564 <main@@Base+0xfc18>
   26514:	ldr	r0, [pc, #384]	; 2669c <main@@Base+0xfd50>
   26518:	add	r3, pc, r0
   2651c:	ldr	r0, [fp, #-8]
   26520:	ldr	r1, [fp, #-12]
   26524:	str	r1, [sp, #32]
   26528:	ldr	r2, [fp, #-16]
   2652c:	add	ip, sp, #8
   26530:	str	ip, [sp]
   26534:	bl	20f3c <main@@Base+0xa5f0>
   26538:	str	r0, [fp, #-12]
   2653c:	ldr	r0, [fp, #-12]
   26540:	ldr	r1, [sp, #32]
   26544:	cmp	r0, r1
   26548:	beq	2655c <main@@Base+0xfc10>
   2654c:	ldr	r0, [fp, #-12]
   26550:	ldr	r1, [fp, #-16]
   26554:	cmp	r0, r1
   26558:	bne	26560 <main@@Base+0xfc14>
   2655c:	b	26678 <main@@Base+0xfd2c>
   26560:	b	26564 <main@@Base+0xfc18>
   26564:	ldr	r0, [sp, #8]
   26568:	ldr	r1, [sp, #12]
   2656c:	orr	r0, r0, r1
   26570:	cmp	r0, #0
   26574:	bne	26590 <main@@Base+0xfc44>
   26578:	b	2657c <main@@Base+0xfc30>
   2657c:	ldr	r0, [fp, #-8]
   26580:	ldr	r0, [r0, #8]
   26584:	and	r0, r0, #2
   26588:	cmp	r0, #0
   2658c:	beq	265d0 <main@@Base+0xfc84>
   26590:	ldr	r0, [fp, #-8]
   26594:	ldr	r0, [r0]
   26598:	movw	r1, #0
   2659c:	movw	r2, #8
   265a0:	movw	r3, #8
   265a4:	uxth	r3, r3
   265a8:	bl	2debc <flatcc_builder_table_add@@Base>
   265ac:	str	r0, [fp, #-28]	; 0xffffffe4
   265b0:	movw	r1, #0
   265b4:	cmp	r0, r1
   265b8:	bne	265c0 <main@@Base+0xfc74>
   265bc:	b	26678 <main@@Base+0xfd2c>
   265c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   265c4:	ldr	r2, [sp, #8]
   265c8:	ldr	r3, [sp, #12]
   265cc:	bl	21138 <main@@Base+0xa7ec>
   265d0:	b	265e8 <main@@Base+0xfc9c>
   265d4:	ldr	r0, [fp, #-8]
   265d8:	ldr	r1, [fp, #-12]
   265dc:	ldr	r2, [fp, #-16]
   265e0:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   265e4:	str	r0, [fp, #-12]
   265e8:	b	26600 <main@@Base+0xfcb4>
   265ec:	ldr	r0, [fp, #-8]
   265f0:	ldr	r1, [fp, #-12]
   265f4:	ldr	r2, [fp, #-16]
   265f8:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   265fc:	str	r0, [fp, #-12]
   26600:	b	26604 <main@@Base+0xfcb8>
   26604:	b	2661c <main@@Base+0xfcd0>
   26608:	ldr	r0, [fp, #-8]
   2660c:	ldr	r1, [fp, #-12]
   26610:	ldr	r2, [fp, #-16]
   26614:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   26618:	str	r0, [fp, #-12]
   2661c:	ldr	r0, [fp, #-8]
   26620:	ldr	r1, [fp, #-12]
   26624:	ldr	r2, [fp, #-16]
   26628:	sub	r3, fp, #24
   2662c:	bl	21984 <main@@Base+0xb038>
   26630:	str	r0, [fp, #-12]
   26634:	b	2623c <main@@Base+0xf8f0>
   26638:	ldr	r0, [fp, #-8]
   2663c:	ldr	r0, [r0, #24]
   26640:	cmp	r0, #0
   26644:	beq	2664c <main@@Base+0xfd00>
   26648:	b	26678 <main@@Base+0xfd2c>
   2664c:	ldr	r0, [fp, #-8]
   26650:	ldr	r0, [r0]
   26654:	bl	2d280 <flatcc_builder_end_table@@Base>
   26658:	ldr	r1, [fp, #-20]	; 0xffffffec
   2665c:	str	r0, [r1]
   26660:	cmp	r0, #0
   26664:	bne	2666c <main@@Base+0xfd20>
   26668:	b	26678 <main@@Base+0xfd2c>
   2666c:	ldr	r0, [fp, #-12]
   26670:	str	r0, [fp, #-4]
   26674:	b	26690 <main@@Base+0xfd44>
   26678:	ldr	r0, [fp, #-8]
   2667c:	ldr	r1, [fp, #-12]
   26680:	ldr	r2, [fp, #-16]
   26684:	movw	r3, #33	; 0x21
   26688:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   2668c:	str	r0, [fp, #-4]
   26690:	ldr	r0, [fp, #-4]
   26694:	mov	sp, fp
   26698:	pop	{fp, pc}
   2669c:	andeq	r8, r3, r4, lsl #27
   266a0:	strdeq	r8, [r3], -r4
   266a4:	push	{fp, lr}
   266a8:	mov	fp, sp
   266ac:	sub	sp, sp, #56	; 0x38
   266b0:	ldr	ip, [fp, #12]
   266b4:	ldr	lr, [fp, #8]
   266b8:	str	r0, [fp, #-8]
   266bc:	str	r1, [fp, #-12]
   266c0:	str	r2, [fp, #-16]
   266c4:	str	r3, [fp, #-20]	; 0xffffffec
   266c8:	ldr	r0, [fp, #-12]
   266cc:	str	r0, [fp, #-24]	; 0xffffffe8
   266d0:	ldr	r0, [fp, #-12]
   266d4:	ldr	r1, [fp, #-16]
   266d8:	str	ip, [sp, #12]
   266dc:	str	lr, [sp, #8]
   266e0:	bl	1c960 <main@@Base+0x6014>
   266e4:	str	r1, [sp, #20]
   266e8:	str	r0, [sp, #16]
   266ec:	ldr	r0, [sp, #16]
   266f0:	ldr	r1, [sp, #20]
   266f4:	movw	r2, #24946	; 0x6172
   266f8:	movt	r2, #17256	; 0x4368
   266fc:	eor	r1, r1, r2
   26700:	movw	r2, #29797	; 0x7465
   26704:	movt	r2, #24931	; 0x6163
   26708:	eor	r0, r0, r2
   2670c:	orr	r0, r0, r1
   26710:	cmp	r0, #0
   26714:	bne	267c8 <main@@Base+0xfe7c>
   26718:	b	2671c <main@@Base+0xfdd0>
   2671c:	ldr	r0, [fp, #-12]
   26720:	add	r0, r0, #8
   26724:	str	r0, [fp, #-12]
   26728:	ldr	r0, [fp, #-12]
   2672c:	ldr	r1, [fp, #-16]
   26730:	bl	1c960 <main@@Base+0x6014>
   26734:	str	r1, [sp, #20]
   26738:	str	r0, [sp, #16]
   2673c:	ldrb	r0, [sp, #23]
   26740:	mov	r1, #1912602624	; 0x72000000
   26744:	teq	r1, r0, lsl #24
   26748:	bne	267b8 <main@@Base+0xfe6c>
   2674c:	b	26750 <main@@Base+0xfe04>
   26750:	ldr	r0, [fp, #-8]
   26754:	ldr	r1, [fp, #-12]
   26758:	str	r1, [sp, #28]
   2675c:	ldr	r2, [fp, #-16]
   26760:	movw	r3, #1
   26764:	bl	21cf8 <main@@Base+0xb3ac>
   26768:	str	r0, [fp, #-12]
   2676c:	ldr	r0, [fp, #-12]
   26770:	ldr	r1, [sp, #28]
   26774:	cmp	r0, r1
   26778:	beq	267a8 <main@@Base+0xfe5c>
   2677c:	ldr	r0, [fp, #-8]
   26780:	ldr	r1, [fp, #-12]
   26784:	ldr	r2, [fp, #-16]
   26788:	ldr	r3, [fp, #-20]	; 0xffffffec
   2678c:	ldr	ip, [fp, #8]
   26790:	ldr	lr, [fp, #12]
   26794:	str	ip, [sp]
   26798:	str	lr, [sp, #4]
   2679c:	bl	22870 <main@@Base+0xbf24>
   267a0:	str	r0, [fp, #-12]
   267a4:	b	267b4 <main@@Base+0xfe68>
   267a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267ac:	str	r0, [fp, #-4]
   267b0:	b	267dc <main@@Base+0xfe90>
   267b4:	b	267c4 <main@@Base+0xfe78>
   267b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267bc:	str	r0, [fp, #-4]
   267c0:	b	267dc <main@@Base+0xfe90>
   267c4:	b	267d4 <main@@Base+0xfe88>
   267c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267cc:	str	r0, [fp, #-4]
   267d0:	b	267dc <main@@Base+0xfe90>
   267d4:	ldr	r0, [fp, #-12]
   267d8:	str	r0, [fp, #-4]
   267dc:	ldr	r0, [fp, #-4]
   267e0:	mov	sp, fp
   267e4:	pop	{fp, pc}
   267e8:	push	{fp, lr}
   267ec:	mov	fp, sp
   267f0:	sub	sp, sp, #24
   267f4:	ldr	ip, [fp, #8]
   267f8:	str	r0, [fp, #-8]
   267fc:	str	r1, [sp, #12]
   26800:	str	r2, [sp, #8]
   26804:	strb	r3, [sp, #7]
   26808:	ldr	r0, [fp, #8]
   2680c:	mov	r1, #0
   26810:	str	r1, [r0]
   26814:	ldrb	r0, [sp, #7]
   26818:	mov	r1, r0
   2681c:	cmp	r0, #0
   26820:	str	r1, [sp]
   26824:	beq	2688c <main@@Base+0xff40>
   26828:	b	2682c <main@@Base+0xfee0>
   2682c:	ldr	r0, [sp]
   26830:	cmp	r0, #2
   26834:	beq	268a4 <main@@Base+0xff58>
   26838:	b	2683c <main@@Base+0xfef0>
   2683c:	ldr	r0, [sp]
   26840:	cmp	r0, #8
   26844:	beq	268c0 <main@@Base+0xff74>
   26848:	b	2684c <main@@Base+0xff00>
   2684c:	ldr	r0, [sp]
   26850:	cmp	r0, #9
   26854:	beq	268dc <main@@Base+0xff90>
   26858:	b	2685c <main@@Base+0xff10>
   2685c:	ldr	r0, [sp]
   26860:	cmp	r0, #10
   26864:	beq	268f8 <main@@Base+0xffac>
   26868:	b	2686c <main@@Base+0xff20>
   2686c:	ldr	r0, [sp]
   26870:	cmp	r0, #11
   26874:	beq	26914 <main@@Base+0xffc8>
   26878:	b	2687c <main@@Base+0xff30>
   2687c:	ldr	r0, [sp]
   26880:	cmp	r0, #255	; 0xff
   26884:	beq	26930 <main@@Base+0xffe4>
   26888:	b	2694c <main@@Base+0x10000>
   2688c:	ldr	r0, [fp, #-8]
   26890:	ldr	r1, [sp, #12]
   26894:	ldr	r2, [sp, #8]
   26898:	bl	232e8 <main@@Base+0xc99c>
   2689c:	str	r0, [fp, #-4]
   268a0:	b	269e4 <main@@Base+0x10098>
   268a4:	ldr	r0, [fp, #-8]
   268a8:	ldr	r1, [sp, #12]
   268ac:	ldr	r2, [sp, #8]
   268b0:	ldr	r3, [fp, #8]
   268b4:	bl	26ad8 <main@@Base+0x1018c>
   268b8:	str	r0, [sp, #12]
   268bc:	b	26994 <main@@Base+0x10048>
   268c0:	ldr	r0, [fp, #-8]
   268c4:	ldr	r1, [sp, #12]
   268c8:	ldr	r2, [sp, #8]
   268cc:	ldr	r3, [fp, #8]
   268d0:	bl	26e14 <main@@Base+0x104c8>
   268d4:	str	r0, [sp, #12]
   268d8:	b	26994 <main@@Base+0x10048>
   268dc:	ldr	r0, [fp, #-8]
   268e0:	ldr	r1, [sp, #12]
   268e4:	ldr	r2, [sp, #8]
   268e8:	ldr	r3, [fp, #8]
   268ec:	bl	26ee0 <main@@Base+0x10594>
   268f0:	str	r0, [sp, #12]
   268f4:	b	26994 <main@@Base+0x10048>
   268f8:	ldr	r0, [fp, #-8]
   268fc:	ldr	r1, [sp, #12]
   26900:	ldr	r2, [sp, #8]
   26904:	ldr	r3, [fp, #8]
   26908:	bl	26ee0 <main@@Base+0x10594>
   2690c:	str	r0, [sp, #12]
   26910:	b	26994 <main@@Base+0x10048>
   26914:	ldr	r0, [fp, #-8]
   26918:	ldr	r1, [sp, #12]
   2691c:	ldr	r2, [sp, #8]
   26920:	ldr	r3, [fp, #8]
   26924:	bl	36fe4 <flatcc_json_parser_build_string@@Base>
   26928:	str	r0, [sp, #12]
   2692c:	b	26994 <main@@Base+0x10048>
   26930:	ldr	r0, [fp, #-8]
   26934:	ldr	r1, [sp, #12]
   26938:	ldr	r2, [sp, #8]
   2693c:	ldr	r3, [fp, #8]
   26940:	bl	36fe4 <flatcc_json_parser_build_string@@Base>
   26944:	str	r0, [sp, #12]
   26948:	b	26994 <main@@Base+0x10048>
   2694c:	ldr	r0, [fp, #-8]
   26950:	ldr	r0, [r0, #8]
   26954:	and	r0, r0, #1
   26958:	cmp	r0, #0
   2695c:	bne	2697c <main@@Base+0x10030>
   26960:	ldr	r0, [fp, #-8]
   26964:	ldr	r1, [sp, #12]
   26968:	ldr	r2, [sp, #8]
   2696c:	movw	r3, #15
   26970:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   26974:	str	r0, [fp, #-4]
   26978:	b	269e4 <main@@Base+0x10098>
   2697c:	ldr	r0, [fp, #-8]
   26980:	ldr	r1, [sp, #12]
   26984:	ldr	r2, [sp, #8]
   26988:	bl	35304 <flatcc_json_parser_generic_json@@Base>
   2698c:	str	r0, [fp, #-4]
   26990:	b	269e4 <main@@Base+0x10098>
   26994:	ldr	r0, [fp, #-8]
   26998:	ldr	r0, [r0, #24]
   2699c:	cmp	r0, #0
   269a0:	beq	269b0 <main@@Base+0x10064>
   269a4:	ldr	r0, [sp, #12]
   269a8:	str	r0, [fp, #-4]
   269ac:	b	269e4 <main@@Base+0x10098>
   269b0:	ldr	r0, [fp, #8]
   269b4:	ldr	r0, [r0]
   269b8:	cmp	r0, #0
   269bc:	bne	269dc <main@@Base+0x10090>
   269c0:	ldr	r0, [fp, #-8]
   269c4:	ldr	r1, [sp, #12]
   269c8:	ldr	r2, [sp, #8]
   269cc:	movw	r3, #33	; 0x21
   269d0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   269d4:	str	r0, [fp, #-4]
   269d8:	b	269e4 <main@@Base+0x10098>
   269dc:	ldr	r0, [sp, #12]
   269e0:	str	r0, [fp, #-4]
   269e4:	ldr	r0, [fp, #-4]
   269e8:	mov	sp, fp
   269ec:	pop	{fp, pc}
   269f0:	sub	sp, sp, #12
   269f4:	strb	r0, [sp, #7]
   269f8:	ldrb	r0, [sp, #7]
   269fc:	mov	r1, r0
   26a00:	cmp	r0, #0
   26a04:	str	r1, [sp]
   26a08:	beq	26a70 <main@@Base+0x10124>
   26a0c:	b	26a10 <main@@Base+0x100c4>
   26a10:	ldr	r0, [sp]
   26a14:	cmp	r0, #2
   26a18:	beq	26a7c <main@@Base+0x10130>
   26a1c:	b	26a20 <main@@Base+0x100d4>
   26a20:	ldr	r0, [sp]
   26a24:	cmp	r0, #8
   26a28:	beq	26a88 <main@@Base+0x1013c>
   26a2c:	b	26a30 <main@@Base+0x100e4>
   26a30:	ldr	r0, [sp]
   26a34:	cmp	r0, #9
   26a38:	beq	26a94 <main@@Base+0x10148>
   26a3c:	b	26a40 <main@@Base+0x100f4>
   26a40:	ldr	r0, [sp]
   26a44:	cmp	r0, #10
   26a48:	beq	26aa0 <main@@Base+0x10154>
   26a4c:	b	26a50 <main@@Base+0x10104>
   26a50:	ldr	r0, [sp]
   26a54:	cmp	r0, #11
   26a58:	beq	26aac <main@@Base+0x10160>
   26a5c:	b	26a60 <main@@Base+0x10114>
   26a60:	ldr	r0, [sp]
   26a64:	cmp	r0, #255	; 0xff
   26a68:	beq	26ab8 <main@@Base+0x1016c>
   26a6c:	b	26ac4 <main@@Base+0x10178>
   26a70:	movw	r0, #1
   26a74:	str	r0, [sp, #8]
   26a78:	b	26acc <main@@Base+0x10180>
   26a7c:	movw	r0, #1
   26a80:	str	r0, [sp, #8]
   26a84:	b	26acc <main@@Base+0x10180>
   26a88:	movw	r0, #1
   26a8c:	str	r0, [sp, #8]
   26a90:	b	26acc <main@@Base+0x10180>
   26a94:	movw	r0, #1
   26a98:	str	r0, [sp, #8]
   26a9c:	b	26acc <main@@Base+0x10180>
   26aa0:	movw	r0, #1
   26aa4:	str	r0, [sp, #8]
   26aa8:	b	26acc <main@@Base+0x10180>
   26aac:	movw	r0, #1
   26ab0:	str	r0, [sp, #8]
   26ab4:	b	26acc <main@@Base+0x10180>
   26ab8:	movw	r0, #1
   26abc:	str	r0, [sp, #8]
   26ac0:	b	26acc <main@@Base+0x10180>
   26ac4:	movw	r0, #0
   26ac8:	str	r0, [sp, #8]
   26acc:	ldr	r0, [sp, #8]
   26ad0:	add	sp, sp, #12
   26ad4:	bx	lr
   26ad8:	push	{fp, lr}
   26adc:	mov	fp, sp
   26ae0:	sub	sp, sp, #56	; 0x38
   26ae4:	str	r0, [fp, #-8]
   26ae8:	str	r1, [fp, #-12]
   26aec:	str	r2, [fp, #-16]
   26af0:	str	r3, [fp, #-20]	; 0xffffffec
   26af4:	ldr	r0, [fp, #-20]	; 0xffffffec
   26af8:	movw	r1, #0
   26afc:	str	r1, [r0]
   26b00:	ldr	r0, [fp, #-8]
   26b04:	ldr	r0, [r0]
   26b08:	movw	r1, #1
   26b0c:	bl	2c618 <flatcc_builder_start_table@@Base>
   26b10:	cmp	r0, #0
   26b14:	beq	26b1c <main@@Base+0x101d0>
   26b18:	b	26dec <main@@Base+0x104a0>
   26b1c:	ldr	r0, [fp, #-8]
   26b20:	ldr	r1, [fp, #-12]
   26b24:	ldr	r2, [fp, #-16]
   26b28:	sub	r3, fp, #24
   26b2c:	bl	1c7d0 <main@@Base+0x5e84>
   26b30:	str	r0, [fp, #-12]
   26b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26b38:	cmp	r0, #0
   26b3c:	beq	26dac <main@@Base+0x10460>
   26b40:	ldr	r0, [fp, #-8]
   26b44:	ldr	r1, [fp, #-12]
   26b48:	ldr	r2, [fp, #-16]
   26b4c:	bl	1c8b4 <main@@Base+0x5f68>
   26b50:	str	r0, [fp, #-12]
   26b54:	ldr	r0, [fp, #-12]
   26b58:	ldr	r1, [fp, #-16]
   26b5c:	bl	1c960 <main@@Base+0x6014>
   26b60:	str	r1, [sp, #12]
   26b64:	str	r0, [sp, #8]
   26b68:	ldr	r0, [sp, #8]
   26b6c:	ldr	r1, [sp, #12]
   26b70:	movw	r2, #28530	; 0x6f72
   26b74:	movt	r2, #29559	; 0x7377
   26b78:	eor	r1, r1, r2
   26b7c:	movw	r2, #24948	; 0x6174
   26b80:	movt	r2, #25695	; 0x645f
   26b84:	eor	r0, r0, r2
   26b88:	orr	r0, r0, r1
   26b8c:	cmp	r0, #0
   26b90:	bne	26d7c <main@@Base+0x10430>
   26b94:	b	26b98 <main@@Base+0x1024c>
   26b98:	ldr	r0, [fp, #-12]
   26b9c:	add	r0, r0, #8
   26ba0:	str	r0, [fp, #-12]
   26ba4:	ldr	r0, [fp, #-12]
   26ba8:	ldr	r1, [fp, #-16]
   26bac:	bl	1c960 <main@@Base+0x6014>
   26bb0:	str	r1, [sp, #12]
   26bb4:	str	r0, [sp, #8]
   26bb8:	ldr	r0, [sp, #8]
   26bbc:	ldr	r1, [sp, #12]
   26bc0:	movw	r2, #25451	; 0x636b
   26bc4:	movt	r2, #29793	; 0x7461
   26bc8:	eor	r1, r1, r2
   26bcc:	movw	r2, #24941	; 0x616d
   26bd0:	movt	r2, #24420	; 0x5f64
   26bd4:	eor	r0, r0, r2
   26bd8:	orr	r0, r0, r1
   26bdc:	cmp	r0, #0
   26be0:	bne	26d64 <main@@Base+0x10418>
   26be4:	b	26be8 <main@@Base+0x1029c>
   26be8:	ldr	r0, [fp, #-12]
   26bec:	add	r0, r0, #8
   26bf0:	str	r0, [fp, #-12]
   26bf4:	ldr	r0, [fp, #-12]
   26bf8:	ldr	r1, [fp, #-16]
   26bfc:	bl	1c960 <main@@Base+0x6014>
   26c00:	str	r1, [sp, #12]
   26c04:	str	r0, [sp, #8]
   26c08:	ldr	r0, [sp, #12]
   26c0c:	bic	r0, r0, #255	; 0xff
   26c10:	movw	r1, #25856	; 0x6500
   26c14:	movt	r1, #24935	; 0x6167
   26c18:	teq	r0, r1
   26c1c:	bne	26d4c <main@@Base+0x10400>
   26c20:	b	26c24 <main@@Base+0x102d8>
   26c24:	ldr	r0, [fp, #-8]
   26c28:	ldr	r1, [fp, #-12]
   26c2c:	str	r1, [sp, #16]
   26c30:	ldr	r2, [fp, #-16]
   26c34:	movw	r3, #3
   26c38:	bl	1c998 <main@@Base+0x604c>
   26c3c:	str	r0, [fp, #-12]
   26c40:	ldr	r0, [sp, #16]
   26c44:	ldr	r1, [fp, #-12]
   26c48:	cmp	r0, r1
   26c4c:	beq	26d34 <main@@Base+0x103e8>
   26c50:	movw	r0, #0
   26c54:	str	r0, [sp, #4]
   26c58:	ldr	r0, [fp, #-8]
   26c5c:	ldr	r1, [fp, #-12]
   26c60:	str	r1, [sp, #16]
   26c64:	ldr	r2, [fp, #-16]
   26c68:	add	r3, sp, #4
   26c6c:	bl	20b7c <main@@Base+0xa230>
   26c70:	str	r0, [fp, #-12]
   26c74:	ldr	r0, [sp, #16]
   26c78:	ldr	r1, [fp, #-12]
   26c7c:	cmp	r0, r1
   26c80:	bne	26cd4 <main@@Base+0x10388>
   26c84:	ldr	r0, [pc, #388]	; 26e10 <main@@Base+0x104c4>
   26c88:	add	r3, pc, r0
   26c8c:	ldr	r0, [fp, #-8]
   26c90:	ldr	r1, [fp, #-12]
   26c94:	str	r1, [sp, #16]
   26c98:	ldr	r2, [fp, #-16]
   26c9c:	add	ip, sp, #4
   26ca0:	str	ip, [sp]
   26ca4:	bl	20c54 <main@@Base+0xa308>
   26ca8:	str	r0, [fp, #-12]
   26cac:	ldr	r0, [fp, #-12]
   26cb0:	ldr	r1, [sp, #16]
   26cb4:	cmp	r0, r1
   26cb8:	beq	26ccc <main@@Base+0x10380>
   26cbc:	ldr	r0, [fp, #-12]
   26cc0:	ldr	r1, [fp, #-16]
   26cc4:	cmp	r0, r1
   26cc8:	bne	26cd0 <main@@Base+0x10384>
   26ccc:	b	26dec <main@@Base+0x104a0>
   26cd0:	b	26cd4 <main@@Base+0x10388>
   26cd4:	ldr	r0, [sp, #4]
   26cd8:	cmp	r0, #0
   26cdc:	bne	26cf4 <main@@Base+0x103a8>
   26ce0:	ldr	r0, [fp, #-8]
   26ce4:	ldr	r0, [r0, #8]
   26ce8:	and	r0, r0, #2
   26cec:	cmp	r0, #0
   26cf0:	beq	26d30 <main@@Base+0x103e4>
   26cf4:	ldr	r0, [fp, #-8]
   26cf8:	ldr	r0, [r0]
   26cfc:	movw	r1, #0
   26d00:	movw	r2, #4
   26d04:	movw	r3, #4
   26d08:	uxth	r3, r3
   26d0c:	bl	2debc <flatcc_builder_table_add@@Base>
   26d10:	str	r0, [sp, #28]
   26d14:	movw	r1, #0
   26d18:	cmp	r0, r1
   26d1c:	bne	26d24 <main@@Base+0x103d8>
   26d20:	b	26dec <main@@Base+0x104a0>
   26d24:	ldr	r0, [sp, #28]
   26d28:	ldr	r1, [sp, #4]
   26d2c:	bl	20e38 <main@@Base+0xa4ec>
   26d30:	b	26d48 <main@@Base+0x103fc>
   26d34:	ldr	r0, [fp, #-8]
   26d38:	ldr	r1, [fp, #-12]
   26d3c:	ldr	r2, [fp, #-16]
   26d40:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   26d44:	str	r0, [fp, #-12]
   26d48:	b	26d60 <main@@Base+0x10414>
   26d4c:	ldr	r0, [fp, #-8]
   26d50:	ldr	r1, [fp, #-12]
   26d54:	ldr	r2, [fp, #-16]
   26d58:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   26d5c:	str	r0, [fp, #-12]
   26d60:	b	26d78 <main@@Base+0x1042c>
   26d64:	ldr	r0, [fp, #-8]
   26d68:	ldr	r1, [fp, #-12]
   26d6c:	ldr	r2, [fp, #-16]
   26d70:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   26d74:	str	r0, [fp, #-12]
   26d78:	b	26d90 <main@@Base+0x10444>
   26d7c:	ldr	r0, [fp, #-8]
   26d80:	ldr	r1, [fp, #-12]
   26d84:	ldr	r2, [fp, #-16]
   26d88:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   26d8c:	str	r0, [fp, #-12]
   26d90:	ldr	r0, [fp, #-8]
   26d94:	ldr	r1, [fp, #-12]
   26d98:	ldr	r2, [fp, #-16]
   26d9c:	sub	r3, fp, #24
   26da0:	bl	21984 <main@@Base+0xb038>
   26da4:	str	r0, [fp, #-12]
   26da8:	b	26b34 <main@@Base+0x101e8>
   26dac:	ldr	r0, [fp, #-8]
   26db0:	ldr	r0, [r0, #24]
   26db4:	cmp	r0, #0
   26db8:	beq	26dc0 <main@@Base+0x10474>
   26dbc:	b	26dec <main@@Base+0x104a0>
   26dc0:	ldr	r0, [fp, #-8]
   26dc4:	ldr	r0, [r0]
   26dc8:	bl	2d280 <flatcc_builder_end_table@@Base>
   26dcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   26dd0:	str	r0, [r1]
   26dd4:	cmp	r0, #0
   26dd8:	bne	26de0 <main@@Base+0x10494>
   26ddc:	b	26dec <main@@Base+0x104a0>
   26de0:	ldr	r0, [fp, #-12]
   26de4:	str	r0, [fp, #-4]
   26de8:	b	26e04 <main@@Base+0x104b8>
   26dec:	ldr	r0, [fp, #-8]
   26df0:	ldr	r1, [fp, #-12]
   26df4:	ldr	r2, [fp, #-16]
   26df8:	movw	r3, #33	; 0x21
   26dfc:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   26e00:	str	r0, [fp, #-4]
   26e04:	ldr	r0, [fp, #-4]
   26e08:	mov	sp, fp
   26e0c:	pop	{fp, pc}
   26e10:	andeq	r8, r3, r0, ror r6
   26e14:	push	{fp, lr}
   26e18:	mov	fp, sp
   26e1c:	sub	sp, sp, #24
   26e20:	str	r0, [fp, #-8]
   26e24:	str	r1, [sp, #12]
   26e28:	str	r2, [sp, #8]
   26e2c:	str	r3, [sp, #4]
   26e30:	ldr	r0, [sp, #4]
   26e34:	movw	r1, #0
   26e38:	str	r1, [r0]
   26e3c:	ldr	r0, [fp, #-8]
   26e40:	ldr	r0, [r0]
   26e44:	movw	r1, #2
   26e48:	movw	r2, #2
   26e4c:	uxth	r2, r2
   26e50:	bl	2b454 <flatcc_builder_start_struct@@Base>
   26e54:	str	r0, [sp]
   26e58:	movw	r1, #0
   26e5c:	cmp	r0, r1
   26e60:	bne	26e68 <main@@Base+0x1051c>
   26e64:	b	26ebc <main@@Base+0x10570>
   26e68:	ldr	r0, [fp, #-8]
   26e6c:	ldr	r1, [sp, #12]
   26e70:	ldr	r2, [sp, #8]
   26e74:	ldr	r3, [sp]
   26e78:	bl	26fac <main@@Base+0x10660>
   26e7c:	str	r0, [sp, #12]
   26e80:	ldr	r0, [sp, #12]
   26e84:	ldr	r1, [sp, #8]
   26e88:	cmp	r0, r1
   26e8c:	beq	26eac <main@@Base+0x10560>
   26e90:	ldr	r0, [fp, #-8]
   26e94:	ldr	r0, [r0]
   26e98:	bl	2b5fc <flatcc_builder_end_struct@@Base>
   26e9c:	ldr	r1, [sp, #4]
   26ea0:	str	r0, [r1]
   26ea4:	cmp	r0, #0
   26ea8:	bne	26eb0 <main@@Base+0x10564>
   26eac:	b	26ebc <main@@Base+0x10570>
   26eb0:	ldr	r0, [sp, #12]
   26eb4:	str	r0, [fp, #-4]
   26eb8:	b	26ed4 <main@@Base+0x10588>
   26ebc:	ldr	r0, [fp, #-8]
   26ec0:	ldr	r1, [sp, #12]
   26ec4:	ldr	r2, [sp, #8]
   26ec8:	movw	r3, #33	; 0x21
   26ecc:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   26ed0:	str	r0, [fp, #-4]
   26ed4:	ldr	r0, [fp, #-4]
   26ed8:	mov	sp, fp
   26edc:	pop	{fp, pc}
   26ee0:	push	{fp, lr}
   26ee4:	mov	fp, sp
   26ee8:	sub	sp, sp, #24
   26eec:	str	r0, [fp, #-8]
   26ef0:	str	r1, [sp, #12]
   26ef4:	str	r2, [sp, #8]
   26ef8:	str	r3, [sp, #4]
   26efc:	ldr	r0, [sp, #4]
   26f00:	movw	r1, #0
   26f04:	str	r1, [r0]
   26f08:	ldr	r0, [fp, #-8]
   26f0c:	ldr	r0, [r0]
   26f10:	movw	r1, #4
   26f14:	movw	r2, #4
   26f18:	uxth	r2, r2
   26f1c:	bl	2b454 <flatcc_builder_start_struct@@Base>
   26f20:	str	r0, [sp]
   26f24:	movw	r1, #0
   26f28:	cmp	r0, r1
   26f2c:	bne	26f34 <main@@Base+0x105e8>
   26f30:	b	26f88 <main@@Base+0x1063c>
   26f34:	ldr	r0, [fp, #-8]
   26f38:	ldr	r1, [sp, #12]
   26f3c:	ldr	r2, [sp, #8]
   26f40:	ldr	r3, [sp]
   26f44:	bl	2758c <main@@Base+0x10c40>
   26f48:	str	r0, [sp, #12]
   26f4c:	ldr	r0, [sp, #12]
   26f50:	ldr	r1, [sp, #8]
   26f54:	cmp	r0, r1
   26f58:	beq	26f78 <main@@Base+0x1062c>
   26f5c:	ldr	r0, [fp, #-8]
   26f60:	ldr	r0, [r0]
   26f64:	bl	2b5fc <flatcc_builder_end_struct@@Base>
   26f68:	ldr	r1, [sp, #4]
   26f6c:	str	r0, [r1]
   26f70:	cmp	r0, #0
   26f74:	bne	26f7c <main@@Base+0x10630>
   26f78:	b	26f88 <main@@Base+0x1063c>
   26f7c:	ldr	r0, [sp, #12]
   26f80:	str	r0, [fp, #-4]
   26f84:	b	26fa0 <main@@Base+0x10654>
   26f88:	ldr	r0, [fp, #-8]
   26f8c:	ldr	r1, [sp, #12]
   26f90:	ldr	r2, [sp, #8]
   26f94:	movw	r3, #33	; 0x21
   26f98:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   26f9c:	str	r0, [fp, #-4]
   26fa0:	ldr	r0, [fp, #-4]
   26fa4:	mov	sp, fp
   26fa8:	pop	{fp, pc}
   26fac:	push	{fp, lr}
   26fb0:	mov	fp, sp
   26fb4:	sub	sp, sp, #56	; 0x38
   26fb8:	str	r0, [fp, #-8]
   26fbc:	str	r1, [fp, #-12]
   26fc0:	str	r2, [fp, #-16]
   26fc4:	str	r3, [fp, #-20]	; 0xffffffec
   26fc8:	ldr	r0, [fp, #-8]
   26fcc:	ldr	r1, [fp, #-12]
   26fd0:	ldr	r2, [fp, #-16]
   26fd4:	sub	r3, fp, #24
   26fd8:	bl	1c7d0 <main@@Base+0x5e84>
   26fdc:	str	r0, [fp, #-12]
   26fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26fe4:	cmp	r0, #0
   26fe8:	beq	271ac <main@@Base+0x10860>
   26fec:	ldr	r0, [fp, #-8]
   26ff0:	ldr	r1, [fp, #-12]
   26ff4:	ldr	r2, [fp, #-16]
   26ff8:	bl	1c8b4 <main@@Base+0x5f68>
   26ffc:	str	r0, [fp, #-12]
   27000:	ldr	r0, [fp, #-12]
   27004:	ldr	r1, [fp, #-16]
   27008:	bl	1c960 <main@@Base+0x6014>
   2700c:	str	r1, [sp, #12]
   27010:	str	r0, [sp, #8]
   27014:	ldr	r0, [sp, #8]
   27018:	ldr	r1, [sp, #12]
   2701c:	movw	r2, #26994	; 0x6972
   27020:	movt	r2, #26721	; 0x6861
   27024:	eor	r1, r1, r2
   27028:	movw	r2, #25966	; 0x656e
   2702c:	movt	r2, #24428	; 0x5f6c
   27030:	eor	r0, r0, r2
   27034:	orr	r0, r0, r1
   27038:	cmp	r0, #0
   2703c:	bne	2717c <main@@Base+0x10830>
   27040:	b	27044 <main@@Base+0x106f8>
   27044:	ldr	r0, [fp, #-12]
   27048:	add	r0, r0, #8
   2704c:	str	r0, [fp, #-12]
   27050:	ldr	r0, [fp, #-12]
   27054:	ldr	r1, [fp, #-16]
   27058:	bl	1c960 <main@@Base+0x6014>
   2705c:	str	r1, [sp, #12]
   27060:	str	r0, [sp, #8]
   27064:	ldr	r0, [sp, #12]
   27068:	bic	r0, r0, #255	; 0xff
   2706c:	movw	r1, #26624	; 0x6800
   27070:	movt	r1, #26484	; 0x6774
   27074:	teq	r0, r1
   27078:	bne	27164 <main@@Base+0x10818>
   2707c:	b	27080 <main@@Base+0x10734>
   27080:	ldr	r0, [fp, #-8]
   27084:	ldr	r1, [fp, #-12]
   27088:	str	r1, [sp, #20]
   2708c:	ldr	r2, [fp, #-16]
   27090:	movw	r3, #3
   27094:	bl	1c998 <main@@Base+0x604c>
   27098:	str	r0, [fp, #-12]
   2709c:	ldr	r0, [sp, #20]
   270a0:	ldr	r1, [fp, #-12]
   270a4:	cmp	r0, r1
   270a8:	beq	2714c <main@@Base+0x10800>
   270ac:	movw	r0, #0
   270b0:	strh	r0, [sp, #6]
   270b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   270b8:	add	r0, r0, #0
   270bc:	str	r0, [sp, #24]
   270c0:	ldr	r0, [fp, #-8]
   270c4:	ldr	r1, [fp, #-12]
   270c8:	str	r1, [sp, #20]
   270cc:	ldr	r2, [fp, #-16]
   270d0:	add	r3, sp, #6
   270d4:	bl	271e0 <main@@Base+0x10894>
   270d8:	str	r0, [fp, #-12]
   270dc:	ldr	r0, [sp, #20]
   270e0:	ldr	r1, [fp, #-12]
   270e4:	cmp	r0, r1
   270e8:	bne	2713c <main@@Base+0x107f0>
   270ec:	ldr	r0, [pc, #232]	; 271dc <main@@Base+0x10890>
   270f0:	add	r3, pc, r0
   270f4:	ldr	r0, [fp, #-8]
   270f8:	ldr	r1, [fp, #-12]
   270fc:	str	r1, [sp, #20]
   27100:	ldr	r2, [fp, #-16]
   27104:	add	ip, sp, #6
   27108:	str	ip, [sp]
   2710c:	bl	272bc <main@@Base+0x10970>
   27110:	str	r0, [fp, #-12]
   27114:	ldr	r0, [fp, #-12]
   27118:	ldr	r1, [sp, #20]
   2711c:	cmp	r0, r1
   27120:	beq	27134 <main@@Base+0x107e8>
   27124:	ldr	r0, [fp, #-12]
   27128:	ldr	r1, [fp, #-16]
   2712c:	cmp	r0, r1
   27130:	bne	27138 <main@@Base+0x107ec>
   27134:	b	271b8 <main@@Base+0x1086c>
   27138:	b	2713c <main@@Base+0x107f0>
   2713c:	ldr	r0, [sp, #24]
   27140:	ldrh	r1, [sp, #6]
   27144:	bl	274a0 <main@@Base+0x10b54>
   27148:	b	27160 <main@@Base+0x10814>
   2714c:	ldr	r0, [fp, #-8]
   27150:	ldr	r1, [fp, #-12]
   27154:	ldr	r2, [fp, #-16]
   27158:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   2715c:	str	r0, [fp, #-12]
   27160:	b	27178 <main@@Base+0x1082c>
   27164:	ldr	r0, [fp, #-8]
   27168:	ldr	r1, [fp, #-12]
   2716c:	ldr	r2, [fp, #-16]
   27170:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   27174:	str	r0, [fp, #-12]
   27178:	b	27190 <main@@Base+0x10844>
   2717c:	ldr	r0, [fp, #-8]
   27180:	ldr	r1, [fp, #-12]
   27184:	ldr	r2, [fp, #-16]
   27188:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   2718c:	str	r0, [fp, #-12]
   27190:	ldr	r0, [fp, #-8]
   27194:	ldr	r1, [fp, #-12]
   27198:	ldr	r2, [fp, #-16]
   2719c:	sub	r3, fp, #24
   271a0:	bl	21984 <main@@Base+0xb038>
   271a4:	str	r0, [fp, #-12]
   271a8:	b	26fe0 <main@@Base+0x10694>
   271ac:	ldr	r0, [fp, #-12]
   271b0:	str	r0, [fp, #-4]
   271b4:	b	271d0 <main@@Base+0x10884>
   271b8:	ldr	r0, [fp, #-8]
   271bc:	ldr	r1, [fp, #-12]
   271c0:	ldr	r2, [fp, #-16]
   271c4:	movw	r3, #33	; 0x21
   271c8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   271cc:	str	r0, [fp, #-4]
   271d0:	ldr	r0, [fp, #-4]
   271d4:	mov	sp, fp
   271d8:	pop	{fp, pc}
   271dc:	andeq	r8, r3, r4, lsl r2
   271e0:	push	{r4, r5, fp, lr}
   271e4:	add	fp, sp, #8
   271e8:	sub	sp, sp, #56	; 0x38
   271ec:	str	r0, [fp, #-16]
   271f0:	str	r1, [fp, #-20]	; 0xffffffec
   271f4:	str	r2, [fp, #-24]	; 0xffffffe8
   271f8:	str	r3, [fp, #-28]	; 0xffffffe4
   271fc:	mov	r0, #0
   27200:	str	r0, [sp, #28]
   27204:	str	r0, [sp, #24]
   27208:	movw	r0, #0
   2720c:	str	r0, [sp, #20]
   27210:	ldr	r0, [fp, #-20]	; 0xffffffec
   27214:	str	r0, [sp, #16]
   27218:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2721c:	movw	r1, #0
   27220:	strh	r1, [r0]
   27224:	ldr	r0, [fp, #-20]	; 0xffffffec
   27228:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2722c:	cmp	r0, r1
   27230:	bne	27240 <main@@Base+0x108f4>
   27234:	ldr	r0, [fp, #-20]	; 0xffffffec
   27238:	str	r0, [fp, #-12]
   2723c:	b	272b0 <main@@Base+0x10964>
   27240:	ldr	r0, [fp, #-16]
   27244:	ldr	r1, [fp, #-20]	; 0xffffffec
   27248:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2724c:	add	r3, sp, #20
   27250:	add	ip, sp, #24
   27254:	str	ip, [sp]
   27258:	bl	365ac <flatcc_json_parser_integer@@Base>
   2725c:	str	r0, [fp, #-20]	; 0xffffffec
   27260:	ldr	r0, [fp, #-20]	; 0xffffffec
   27264:	ldr	r1, [sp, #16]
   27268:	cmp	r0, r1
   2726c:	beq	272a8 <main@@Base+0x1095c>
   27270:	ldr	r0, [fp, #-16]
   27274:	ldr	r1, [fp, #-20]	; 0xffffffec
   27278:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2727c:	ldr	r3, [sp, #20]
   27280:	ldr	ip, [sp, #24]
   27284:	ldr	lr, [sp, #28]
   27288:	ldr	r4, [fp, #-28]	; 0xffffffe4
   2728c:	mov	r5, sp
   27290:	str	r4, [r5, #8]
   27294:	str	lr, [r5, #4]
   27298:	str	ip, [r5]
   2729c:	bl	274cc <main@@Base+0x10b80>
   272a0:	str	r0, [fp, #-12]
   272a4:	b	272b0 <main@@Base+0x10964>
   272a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   272ac:	str	r0, [fp, #-12]
   272b0:	ldr	r0, [fp, #-12]
   272b4:	sub	sp, fp, #8
   272b8:	pop	{r4, r5, fp, pc}
   272bc:	push	{r4, r5, r6, sl, fp, lr}
   272c0:	add	fp, sp, #16
   272c4:	sub	sp, sp, #80	; 0x50
   272c8:	ldr	ip, [fp, #8]
   272cc:	str	r0, [fp, #-24]	; 0xffffffe8
   272d0:	str	r1, [fp, #-28]	; 0xffffffe4
   272d4:	str	r2, [fp, #-32]	; 0xffffffe0
   272d8:	str	r3, [fp, #-36]	; 0xffffffdc
   272dc:	movw	r0, #0
   272e0:	strh	r0, [fp, #-46]	; 0xffffffd2
   272e4:	ldr	r1, [fp, #8]
   272e8:	strh	r0, [r1]
   272ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   272f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   272f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   272f8:	str	ip, [sp, #28]
   272fc:	bl	230c8 <main@@Base+0xc77c>
   27300:	str	r0, [fp, #-28]	; 0xffffffe4
   27304:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27308:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2730c:	cmp	r0, r1
   27310:	bne	27320 <main@@Base+0x109d4>
   27314:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27318:	str	r0, [fp, #-20]	; 0xffffffec
   2731c:	b	27494 <main@@Base+0x10b48>
   27320:	b	27324 <main@@Base+0x109d8>
   27324:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27328:	str	r0, [fp, #-40]	; 0xffffffd8
   2732c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27330:	ldr	r0, [r0]
   27334:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27338:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2733c:	str	r2, [fp, #-44]	; 0xffffffd4
   27340:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27344:	str	r0, [sp, #24]
   27348:	mov	r0, r1
   2734c:	mov	r1, r2
   27350:	mov	r2, r3
   27354:	add	r3, sp, #36	; 0x24
   27358:	add	ip, sp, #40	; 0x28
   2735c:	str	ip, [sp]
   27360:	add	ip, sp, #32
   27364:	str	ip, [sp, #4]
   27368:	ldr	ip, [sp, #24]
   2736c:	blx	ip
   27370:	str	r0, [fp, #-28]	; 0xffffffe4
   27374:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27378:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2737c:	cmp	r0, r1
   27380:	bne	27390 <main@@Base+0x10a44>
   27384:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27388:	str	r0, [fp, #-20]	; 0xffffffec
   2738c:	b	27494 <main@@Base+0x10b48>
   27390:	b	27394 <main@@Base+0x10a48>
   27394:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27398:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2739c:	cmp	r0, r1
   273a0:	movw	r0, #0
   273a4:	str	r0, [sp, #20]
   273a8:	bne	273d0 <main@@Base+0x10a84>
   273ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   273b0:	add	r1, r0, #4
   273b4:	str	r1, [fp, #-40]	; 0xffffffd8
   273b8:	ldr	r0, [r0, #4]
   273bc:	movw	r1, #0
   273c0:	cmp	r0, r1
   273c4:	movw	r0, #0
   273c8:	movne	r0, #1
   273cc:	str	r0, [sp, #20]
   273d0:	ldr	r0, [sp, #20]
   273d4:	tst	r0, #1
   273d8:	bne	2732c <main@@Base+0x109e0>
   273dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   273e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   273e4:	cmp	r0, r1
   273e8:	bne	27408 <main@@Base+0x10abc>
   273ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   273f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   273f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   273f8:	movw	r3, #23
   273fc:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   27400:	str	r0, [fp, #-20]	; 0xffffffec
   27404:	b	27494 <main@@Base+0x10b48>
   27408:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2740c:	mov	r1, r0
   27410:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27418:	ldr	ip, [sp, #36]	; 0x24
   2741c:	ldr	lr, [sp, #40]	; 0x28
   27420:	ldr	r4, [sp, #44]	; 0x2c
   27424:	mov	r5, sp
   27428:	sub	r6, fp, #46	; 0x2e
   2742c:	str	r6, [r5, #8]
   27430:	str	r4, [r5, #4]
   27434:	str	lr, [r5]
   27438:	str	r0, [sp, #16]
   2743c:	mov	r0, r2
   27440:	str	r1, [sp, #12]
   27444:	mov	r1, r3
   27448:	ldr	r2, [sp, #16]
   2744c:	mov	r3, ip
   27450:	bl	274cc <main@@Base+0x10b80>
   27454:	ldr	r1, [sp, #12]
   27458:	cmp	r1, r0
   2745c:	bne	2746c <main@@Base+0x10b20>
   27460:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27464:	str	r0, [fp, #-20]	; 0xffffffec
   27468:	b	27494 <main@@Base+0x10b48>
   2746c:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   27470:	ldr	r1, [fp, #8]
   27474:	ldrh	r2, [r1]
   27478:	add	r0, r2, r0
   2747c:	strh	r0, [r1]
   27480:	ldr	r0, [sp, #32]
   27484:	cmp	r0, #0
   27488:	bne	27324 <main@@Base+0x109d8>
   2748c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27490:	str	r0, [fp, #-20]	; 0xffffffec
   27494:	ldr	r0, [fp, #-20]	; 0xffffffec
   27498:	sub	sp, fp, #16
   2749c:	pop	{r4, r5, r6, sl, fp, pc}
   274a0:	push	{fp, lr}
   274a4:	mov	fp, sp
   274a8:	sub	sp, sp, #8
   274ac:	str	r0, [sp, #4]
   274b0:	strh	r1, [sp, #2]
   274b4:	ldrh	r0, [sp, #2]
   274b8:	bl	27578 <main@@Base+0x10c2c>
   274bc:	ldr	r1, [sp, #4]
   274c0:	strh	r0, [r1]
   274c4:	mov	sp, fp
   274c8:	pop	{fp, pc}
   274cc:	push	{r4, sl, fp, lr}
   274d0:	add	fp, sp, #8
   274d4:	sub	sp, sp, #32
   274d8:	ldr	ip, [fp, #12]
   274dc:	ldr	lr, [fp, #8]
   274e0:	ldr	r4, [fp, #16]
   274e4:	str	r0, [fp, #-16]
   274e8:	str	r1, [sp, #20]
   274ec:	str	r2, [sp, #16]
   274f0:	str	r3, [sp, #12]
   274f4:	str	ip, [sp, #4]
   274f8:	str	lr, [sp]
   274fc:	ldr	r0, [sp, #12]
   27500:	cmp	r0, #0
   27504:	beq	27524 <main@@Base+0x10bd8>
   27508:	ldr	r0, [fp, #-16]
   2750c:	ldr	r1, [sp, #20]
   27510:	ldr	r2, [sp, #16]
   27514:	movw	r3, #8
   27518:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   2751c:	str	r0, [fp, #-12]
   27520:	b	2756c <main@@Base+0x10c20>
   27524:	ldr	r0, [sp]
   27528:	ldr	r1, [sp, #4]
   2752c:	subs	r0, r0, #65536	; 0x10000
   27530:	sbcs	r1, r1, #0
   27534:	bcc	27558 <main@@Base+0x10c0c>
   27538:	b	2753c <main@@Base+0x10bf0>
   2753c:	ldr	r0, [fp, #-16]
   27540:	ldr	r1, [sp, #20]
   27544:	ldr	r2, [sp, #16]
   27548:	movw	r3, #7
   2754c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   27550:	str	r0, [fp, #-12]
   27554:	b	2756c <main@@Base+0x10c20>
   27558:	ldrh	r0, [sp]
   2755c:	ldr	r1, [fp, #16]
   27560:	strh	r0, [r1]
   27564:	ldr	r0, [sp, #20]
   27568:	str	r0, [fp, #-12]
   2756c:	ldr	r0, [fp, #-12]
   27570:	sub	sp, fp, #8
   27574:	pop	{r4, sl, fp, pc}
   27578:	sub	sp, sp, #4
   2757c:	strh	r0, [sp, #2]
   27580:	ldrh	r0, [sp, #2]
   27584:	add	sp, sp, #4
   27588:	bx	lr
   2758c:	push	{fp, lr}
   27590:	mov	fp, sp
   27594:	sub	sp, sp, #56	; 0x38
   27598:	str	r0, [fp, #-8]
   2759c:	str	r1, [fp, #-12]
   275a0:	str	r2, [fp, #-16]
   275a4:	str	r3, [fp, #-20]	; 0xffffffec
   275a8:	ldr	r0, [fp, #-8]
   275ac:	ldr	r1, [fp, #-12]
   275b0:	ldr	r2, [fp, #-16]
   275b4:	sub	r3, fp, #24
   275b8:	bl	1c7d0 <main@@Base+0x5e84>
   275bc:	str	r0, [fp, #-12]
   275c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   275c4:	cmp	r0, #0
   275c8:	beq	27788 <main@@Base+0x10e3c>
   275cc:	ldr	r0, [fp, #-8]
   275d0:	ldr	r1, [fp, #-12]
   275d4:	ldr	r2, [fp, #-16]
   275d8:	bl	1c8b4 <main@@Base+0x5f68>
   275dc:	str	r0, [fp, #-12]
   275e0:	ldr	r0, [fp, #-12]
   275e4:	ldr	r1, [fp, #-16]
   275e8:	bl	1c960 <main@@Base+0x6014>
   275ec:	str	r1, [sp, #12]
   275f0:	str	r0, [sp, #8]
   275f4:	ldr	r0, [sp, #8]
   275f8:	ldr	r1, [sp, #12]
   275fc:	movw	r2, #28523	; 0x6f6b
   27600:	movt	r2, #25199	; 0x626f
   27604:	eor	r1, r1, r2
   27608:	movw	r2, #29285	; 0x7265
   2760c:	movt	r2, #29535	; 0x735f
   27610:	eor	r0, r0, r2
   27614:	orr	r0, r0, r1
   27618:	cmp	r0, #0
   2761c:	bne	27758 <main@@Base+0x10e0c>
   27620:	b	27624 <main@@Base+0x10cd8>
   27624:	ldr	r0, [fp, #-12]
   27628:	add	r0, r0, #8
   2762c:	str	r0, [fp, #-12]
   27630:	ldr	r0, [fp, #-12]
   27634:	ldr	r1, [fp, #-16]
   27638:	bl	1c960 <main@@Base+0x6014>
   2763c:	str	r1, [sp, #12]
   27640:	str	r0, [sp, #8]
   27644:	ldrh	r0, [sp, #14]
   27648:	movw	r1, #0
   2764c:	movt	r1, #24932	; 0x6164
   27650:	teq	r1, r0, lsl #16
   27654:	bne	27740 <main@@Base+0x10df4>
   27658:	b	2765c <main@@Base+0x10d10>
   2765c:	ldr	r0, [fp, #-8]
   27660:	ldr	r1, [fp, #-12]
   27664:	str	r1, [sp, #20]
   27668:	ldr	r2, [fp, #-16]
   2766c:	movw	r3, #2
   27670:	bl	1c998 <main@@Base+0x604c>
   27674:	str	r0, [fp, #-12]
   27678:	ldr	r0, [sp, #20]
   2767c:	ldr	r1, [fp, #-12]
   27680:	cmp	r0, r1
   27684:	beq	27728 <main@@Base+0x10ddc>
   27688:	movw	r0, #0
   2768c:	str	r0, [sp, #4]
   27690:	ldr	r0, [fp, #-20]	; 0xffffffec
   27694:	add	r0, r0, #0
   27698:	str	r0, [sp, #24]
   2769c:	ldr	r0, [fp, #-8]
   276a0:	ldr	r1, [fp, #-12]
   276a4:	str	r1, [sp, #20]
   276a8:	ldr	r2, [fp, #-16]
   276ac:	add	r3, sp, #4
   276b0:	bl	20b7c <main@@Base+0xa230>
   276b4:	str	r0, [fp, #-12]
   276b8:	ldr	r0, [sp, #20]
   276bc:	ldr	r1, [fp, #-12]
   276c0:	cmp	r0, r1
   276c4:	bne	27718 <main@@Base+0x10dcc>
   276c8:	ldr	r0, [pc, #232]	; 277b8 <main@@Base+0x10e6c>
   276cc:	add	r3, pc, r0
   276d0:	ldr	r0, [fp, #-8]
   276d4:	ldr	r1, [fp, #-12]
   276d8:	str	r1, [sp, #20]
   276dc:	ldr	r2, [fp, #-16]
   276e0:	add	ip, sp, #4
   276e4:	str	ip, [sp]
   276e8:	bl	20c54 <main@@Base+0xa308>
   276ec:	str	r0, [fp, #-12]
   276f0:	ldr	r0, [fp, #-12]
   276f4:	ldr	r1, [sp, #20]
   276f8:	cmp	r0, r1
   276fc:	beq	27710 <main@@Base+0x10dc4>
   27700:	ldr	r0, [fp, #-12]
   27704:	ldr	r1, [fp, #-16]
   27708:	cmp	r0, r1
   2770c:	bne	27714 <main@@Base+0x10dc8>
   27710:	b	27794 <main@@Base+0x10e48>
   27714:	b	27718 <main@@Base+0x10dcc>
   27718:	ldr	r0, [sp, #24]
   2771c:	ldr	r1, [sp, #4]
   27720:	bl	20e38 <main@@Base+0xa4ec>
   27724:	b	2773c <main@@Base+0x10df0>
   27728:	ldr	r0, [fp, #-8]
   2772c:	ldr	r1, [fp, #-12]
   27730:	ldr	r2, [fp, #-16]
   27734:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   27738:	str	r0, [fp, #-12]
   2773c:	b	27754 <main@@Base+0x10e08>
   27740:	ldr	r0, [fp, #-8]
   27744:	ldr	r1, [fp, #-12]
   27748:	ldr	r2, [fp, #-16]
   2774c:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   27750:	str	r0, [fp, #-12]
   27754:	b	2776c <main@@Base+0x10e20>
   27758:	ldr	r0, [fp, #-8]
   2775c:	ldr	r1, [fp, #-12]
   27760:	ldr	r2, [fp, #-16]
   27764:	bl	35000 <flatcc_json_parser_unmatched_symbol@@Base>
   27768:	str	r0, [fp, #-12]
   2776c:	ldr	r0, [fp, #-8]
   27770:	ldr	r1, [fp, #-12]
   27774:	ldr	r2, [fp, #-16]
   27778:	sub	r3, fp, #24
   2777c:	bl	21984 <main@@Base+0xb038>
   27780:	str	r0, [fp, #-12]
   27784:	b	275c0 <main@@Base+0x10c74>
   27788:	ldr	r0, [fp, #-12]
   2778c:	str	r0, [fp, #-4]
   27790:	b	277ac <main@@Base+0x10e60>
   27794:	ldr	r0, [fp, #-8]
   27798:	ldr	r1, [fp, #-12]
   2779c:	ldr	r2, [fp, #-16]
   277a0:	movw	r3, #33	; 0x21
   277a4:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   277a8:	str	r0, [fp, #-4]
   277ac:	ldr	r0, [fp, #-4]
   277b0:	mov	sp, fp
   277b4:	pop	{fp, pc}
   277b8:	andeq	r7, r3, r4, asr #24
   277bc:	push	{r4, sl, fp, lr}
   277c0:	add	fp, sp, #8
   277c4:	sub	sp, sp, #32
   277c8:	ldr	ip, [fp, #12]
   277cc:	ldr	lr, [fp, #8]
   277d0:	ldr	r4, [fp, #16]
   277d4:	str	r0, [fp, #-16]
   277d8:	str	r1, [sp, #20]
   277dc:	str	r2, [sp, #16]
   277e0:	str	r3, [sp, #12]
   277e4:	str	ip, [sp, #4]
   277e8:	str	lr, [sp]
   277ec:	ldr	r0, [sp, #12]
   277f0:	cmp	r0, #0
   277f4:	beq	27814 <main@@Base+0x10ec8>
   277f8:	ldr	r0, [fp, #-16]
   277fc:	ldr	r1, [sp, #20]
   27800:	ldr	r2, [sp, #16]
   27804:	movw	r3, #8
   27808:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   2780c:	str	r0, [fp, #-12]
   27810:	b	27848 <main@@Base+0x10efc>
   27814:	ldr	r0, [sp]
   27818:	ldr	r1, [sp, #4]
   2781c:	orr	r0, r0, r1
   27820:	cmp	r0, #0
   27824:	movwne	r0, #1
   27828:	mvn	r1, #0
   2782c:	eor	r0, r0, r1
   27830:	eor	r0, r0, r1
   27834:	and	r0, r0, #1
   27838:	ldr	r1, [fp, #16]
   2783c:	strb	r0, [r1]
   27840:	ldr	r0, [sp, #20]
   27844:	str	r0, [fp, #-12]
   27848:	ldr	r0, [fp, #-12]
   2784c:	sub	sp, fp, #8
   27850:	pop	{r4, sl, fp, pc}
   27854:	sub	sp, sp, #4
   27858:	strb	r0, [sp, #3]
   2785c:	ldrb	r0, [sp, #3]
   27860:	add	sp, sp, #4
   27864:	bx	lr
   27868:	push	{r4, sl, fp, lr}
   2786c:	add	fp, sp, #8
   27870:	sub	sp, sp, #32
   27874:	ldr	ip, [fp, #12]
   27878:	ldr	lr, [fp, #8]
   2787c:	ldr	r4, [fp, #16]
   27880:	str	r0, [fp, #-12]
   27884:	str	r1, [fp, #-16]
   27888:	str	r2, [sp, #20]
   2788c:	str	r3, [sp, #16]
   27890:	str	ip, [sp, #12]
   27894:	str	lr, [sp, #8]
   27898:	ldr	r0, [sp, #16]
   2789c:	cmp	r0, #0
   278a0:	beq	278c0 <main@@Base+0x10f74>
   278a4:	ldr	r0, [sp, #8]
   278a8:	ldr	r1, [sp, #12]
   278ac:	bl	46fdc <flatcc_json_printer_clear@@Base+0x2298>
   278b0:	vmov	s0, r0
   278b4:	vneg.f32	s0, s0
   278b8:	vstr	s0, [sp, #4]
   278bc:	b	278d4 <main@@Base+0x10f88>
   278c0:	ldr	r0, [sp, #8]
   278c4:	ldr	r1, [sp, #12]
   278c8:	bl	46fdc <flatcc_json_printer_clear@@Base+0x2298>
   278cc:	vmov	s0, r0
   278d0:	vstr	s0, [sp, #4]
   278d4:	vldr	s0, [sp, #4]
   278d8:	ldr	r0, [fp, #16]
   278dc:	vstr	s0, [r0]
   278e0:	ldr	r0, [fp, #-16]
   278e4:	sub	sp, fp, #8
   278e8:	pop	{r4, sl, fp, pc}
   278ec:	sub	sp, sp, #8
   278f0:	vstr	s0, [sp, #4]
   278f4:	vldr	s0, [sp, #4]
   278f8:	vstr	s0, [sp]
   278fc:	ldr	r0, [sp]
   27900:	str	r0, [sp]
   27904:	vldr	s0, [sp]
   27908:	add	sp, sp, #8
   2790c:	bx	lr
   27910:	push	{r4, sl, fp, lr}
   27914:	add	fp, sp, #8
   27918:	sub	sp, sp, #32
   2791c:	ldr	ip, [fp, #12]
   27920:	ldr	lr, [fp, #8]
   27924:	ldr	r4, [fp, #16]
   27928:	str	r0, [fp, #-16]
   2792c:	str	r1, [sp, #20]
   27930:	str	r2, [sp, #16]
   27934:	str	r3, [sp, #12]
   27938:	str	ip, [sp, #4]
   2793c:	str	lr, [sp]
   27940:	ldr	r0, [sp, #12]
   27944:	cmp	r0, #0
   27948:	beq	27994 <main@@Base+0x11048>
   2794c:	ldr	r0, [sp]
   27950:	ldr	r1, [sp, #4]
   27954:	subs	r0, r0, #-2147483647	; 0x80000001
   27958:	sbcs	r1, r1, #0
   2795c:	bcc	27980 <main@@Base+0x11034>
   27960:	b	27964 <main@@Base+0x11018>
   27964:	ldr	r0, [fp, #-16]
   27968:	ldr	r1, [sp, #20]
   2796c:	ldr	r2, [sp, #16]
   27970:	movw	r3, #8
   27974:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   27978:	str	r0, [fp, #-12]
   2797c:	b	279dc <main@@Base+0x11090>
   27980:	ldr	r0, [sp]
   27984:	rsb	r0, r0, #0
   27988:	ldr	r1, [fp, #16]
   2798c:	str	r0, [r1]
   27990:	b	279d4 <main@@Base+0x11088>
   27994:	ldr	r0, [sp]
   27998:	ldr	r1, [sp, #4]
   2799c:	subs	r0, r0, #-2147483648	; 0x80000000
   279a0:	sbcs	r1, r1, #0
   279a4:	bcc	279c8 <main@@Base+0x1107c>
   279a8:	b	279ac <main@@Base+0x11060>
   279ac:	ldr	r0, [fp, #-16]
   279b0:	ldr	r1, [sp, #20]
   279b4:	ldr	r2, [sp, #16]
   279b8:	movw	r3, #7
   279bc:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   279c0:	str	r0, [fp, #-12]
   279c4:	b	279dc <main@@Base+0x11090>
   279c8:	ldr	r0, [sp]
   279cc:	ldr	r1, [fp, #16]
   279d0:	str	r0, [r1]
   279d4:	ldr	r0, [sp, #20]
   279d8:	str	r0, [fp, #-12]
   279dc:	ldr	r0, [fp, #-12]
   279e0:	sub	sp, fp, #8
   279e4:	pop	{r4, sl, fp, pc}
   279e8:	sub	sp, sp, #4
   279ec:	str	r0, [sp]
   279f0:	ldr	r0, [sp]
   279f4:	add	sp, sp, #4
   279f8:	bx	lr
   279fc:	push	{r4, sl, fp, lr}
   27a00:	add	fp, sp, #8
   27a04:	sub	sp, sp, #32
   27a08:	ldr	ip, [fp, #12]
   27a0c:	ldr	lr, [fp, #8]
   27a10:	ldr	r4, [fp, #16]
   27a14:	str	r0, [fp, #-16]
   27a18:	str	r1, [sp, #20]
   27a1c:	str	r2, [sp, #16]
   27a20:	str	r3, [sp, #12]
   27a24:	str	ip, [sp, #4]
   27a28:	str	lr, [sp]
   27a2c:	ldr	r0, [sp, #12]
   27a30:	cmp	r0, #0
   27a34:	beq	27a8c <main@@Base+0x11140>
   27a38:	ldr	r0, [sp]
   27a3c:	ldr	r1, [sp, #4]
   27a40:	subs	r0, r0, #1
   27a44:	sbcs	r1, r1, #-2147483648	; 0x80000000
   27a48:	bcc	27a6c <main@@Base+0x11120>
   27a4c:	b	27a50 <main@@Base+0x11104>
   27a50:	ldr	r0, [fp, #-16]
   27a54:	ldr	r1, [sp, #20]
   27a58:	ldr	r2, [sp, #16]
   27a5c:	movw	r3, #8
   27a60:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   27a64:	str	r0, [fp, #-12]
   27a68:	b	27ad4 <main@@Base+0x11188>
   27a6c:	ldr	r0, [sp]
   27a70:	ldr	r1, [sp, #4]
   27a74:	rsbs	r0, r0, #0
   27a78:	rsc	r1, r1, #0
   27a7c:	ldr	r2, [fp, #16]
   27a80:	str	r0, [r2]
   27a84:	str	r1, [r2, #4]
   27a88:	b	27acc <main@@Base+0x11180>
   27a8c:	ldr	r0, [sp, #4]
   27a90:	cmn	r0, #1
   27a94:	bgt	27ab8 <main@@Base+0x1116c>
   27a98:	b	27a9c <main@@Base+0x11150>
   27a9c:	ldr	r0, [fp, #-16]
   27aa0:	ldr	r1, [sp, #20]
   27aa4:	ldr	r2, [sp, #16]
   27aa8:	movw	r3, #7
   27aac:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   27ab0:	str	r0, [fp, #-12]
   27ab4:	b	27ad4 <main@@Base+0x11188>
   27ab8:	ldr	r0, [sp]
   27abc:	ldr	r1, [sp, #4]
   27ac0:	ldr	r2, [fp, #16]
   27ac4:	str	r1, [r2, #4]
   27ac8:	str	r0, [r2]
   27acc:	ldr	r0, [sp, #20]
   27ad0:	str	r0, [fp, #-12]
   27ad4:	ldr	r0, [fp, #-12]
   27ad8:	sub	sp, fp, #8
   27adc:	pop	{r4, sl, fp, pc}
   27ae0:	sub	sp, sp, #8
   27ae4:	str	r0, [sp]
   27ae8:	str	r1, [sp, #4]
   27aec:	ldr	r0, [sp]
   27af0:	ldr	r1, [sp, #4]
   27af4:	add	sp, sp, #8
   27af8:	bx	lr
   27afc:	push	{r4, sl, fp, lr}
   27b00:	add	fp, sp, #8
   27b04:	sub	sp, sp, #32
   27b08:	ldr	ip, [fp, #12]
   27b0c:	ldr	lr, [fp, #8]
   27b10:	ldr	r4, [fp, #16]
   27b14:	str	r0, [fp, #-16]
   27b18:	str	r1, [sp, #20]
   27b1c:	str	r2, [sp, #16]
   27b20:	str	r3, [sp, #12]
   27b24:	str	ip, [sp, #4]
   27b28:	str	lr, [sp]
   27b2c:	ldr	r0, [sp, #12]
   27b30:	cmp	r0, #0
   27b34:	beq	27b54 <main@@Base+0x11208>
   27b38:	ldr	r0, [fp, #-16]
   27b3c:	ldr	r1, [sp, #20]
   27b40:	ldr	r2, [sp, #16]
   27b44:	movw	r3, #8
   27b48:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   27b4c:	str	r0, [fp, #-12]
   27b50:	b	27b94 <main@@Base+0x11248>
   27b54:	ldr	r0, [sp, #4]
   27b58:	cmp	r0, #0
   27b5c:	beq	27b80 <main@@Base+0x11234>
   27b60:	b	27b64 <main@@Base+0x11218>
   27b64:	ldr	r0, [fp, #-16]
   27b68:	ldr	r1, [sp, #20]
   27b6c:	ldr	r2, [sp, #16]
   27b70:	movw	r3, #7
   27b74:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   27b78:	str	r0, [fp, #-12]
   27b7c:	b	27b94 <main@@Base+0x11248>
   27b80:	ldr	r0, [sp]
   27b84:	ldr	r1, [fp, #16]
   27b88:	str	r0, [r1]
   27b8c:	ldr	r0, [sp, #20]
   27b90:	str	r0, [fp, #-12]
   27b94:	ldr	r0, [fp, #-12]
   27b98:	sub	sp, fp, #8
   27b9c:	pop	{r4, sl, fp, pc}
   27ba0:	sub	sp, sp, #4
   27ba4:	str	r0, [sp]
   27ba8:	ldr	r0, [sp]
   27bac:	add	sp, sp, #4
   27bb0:	bx	lr
   27bb4:	push	{r4, sl, fp, lr}
   27bb8:	add	fp, sp, #8
   27bbc:	sub	sp, sp, #32
   27bc0:	ldr	ip, [fp, #12]
   27bc4:	ldr	lr, [fp, #8]
   27bc8:	ldr	r4, [fp, #16]
   27bcc:	str	r0, [fp, #-16]
   27bd0:	str	r1, [sp, #20]
   27bd4:	str	r2, [sp, #16]
   27bd8:	str	r3, [sp, #12]
   27bdc:	str	ip, [sp, #4]
   27be0:	str	lr, [sp]
   27be4:	ldr	r0, [sp, #12]
   27be8:	cmp	r0, #0
   27bec:	beq	27c0c <main@@Base+0x112c0>
   27bf0:	ldr	r0, [fp, #-16]
   27bf4:	ldr	r1, [sp, #20]
   27bf8:	ldr	r2, [sp, #16]
   27bfc:	movw	r3, #8
   27c00:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   27c04:	str	r0, [fp, #-12]
   27c08:	b	27c28 <main@@Base+0x112dc>
   27c0c:	ldr	r0, [sp]
   27c10:	ldr	r1, [sp, #4]
   27c14:	ldr	r2, [fp, #16]
   27c18:	str	r1, [r2, #4]
   27c1c:	str	r0, [r2]
   27c20:	ldr	r0, [sp, #20]
   27c24:	str	r0, [fp, #-12]
   27c28:	ldr	r0, [fp, #-12]
   27c2c:	sub	sp, fp, #8
   27c30:	pop	{r4, sl, fp, pc}
   27c34:	sub	sp, sp, #8
   27c38:	str	r0, [sp]
   27c3c:	str	r1, [sp, #4]
   27c40:	ldr	r0, [sp]
   27c44:	ldr	r1, [sp, #4]
   27c48:	add	sp, sp, #8
   27c4c:	bx	lr
   27c50:	push	{r4, sl, fp, lr}
   27c54:	add	fp, sp, #8
   27c58:	sub	sp, sp, #32
   27c5c:	ldr	ip, [fp, #12]
   27c60:	ldr	lr, [fp, #8]
   27c64:	ldr	r4, [fp, #16]
   27c68:	str	r0, [fp, #-12]
   27c6c:	str	r1, [fp, #-16]
   27c70:	str	r2, [sp, #20]
   27c74:	str	r3, [sp, #16]
   27c78:	str	ip, [sp, #12]
   27c7c:	str	lr, [sp, #8]
   27c80:	ldr	r0, [sp, #16]
   27c84:	cmp	r0, #0
   27c88:	beq	27ca8 <main@@Base+0x1135c>
   27c8c:	ldr	r0, [sp, #8]
   27c90:	ldr	r1, [sp, #12]
   27c94:	bl	46da4 <flatcc_json_printer_clear@@Base+0x2060>
   27c98:	vmov	d16, r0, r1
   27c9c:	vneg.f64	d16, d16
   27ca0:	vstr	d16, [sp]
   27ca4:	b	27cbc <main@@Base+0x11370>
   27ca8:	ldr	r0, [sp, #8]
   27cac:	ldr	r1, [sp, #12]
   27cb0:	bl	46da4 <flatcc_json_printer_clear@@Base+0x2060>
   27cb4:	vmov	d16, r0, r1
   27cb8:	vstr	d16, [sp]
   27cbc:	vldr	d16, [sp]
   27cc0:	ldr	r0, [fp, #16]
   27cc4:	vstr	d16, [r0]
   27cc8:	ldr	r0, [fp, #-16]
   27ccc:	sub	sp, fp, #8
   27cd0:	pop	{r4, sl, fp, pc}
   27cd4:	sub	sp, sp, #16
   27cd8:	vstr	d0, [sp, #8]
   27cdc:	vldr	d16, [sp, #8]
   27ce0:	vstr	d16, [sp]
   27ce4:	vldr	d0, [sp]
   27ce8:	add	sp, sp, #16
   27cec:	bx	lr
   27cf0:	push	{r4, sl, fp, lr}
   27cf4:	add	fp, sp, #8
   27cf8:	sub	sp, sp, #64	; 0x40
   27cfc:	ldr	r2, [pc, #420]	; 27ea8 <main@@Base+0x1155c>
   27d00:	add	r2, pc, r2
   27d04:	str	r0, [fp, #-12]
   27d08:	str	r1, [fp, #-16]
   27d0c:	ldr	r0, [fp, #-12]
   27d10:	ldr	r1, [fp, #-16]
   27d14:	movw	r3, #0
   27d18:	str	r1, [fp, #-20]	; 0xffffffec
   27d1c:	mov	r1, r3
   27d20:	ldr	ip, [fp, #-20]	; 0xffffffec
   27d24:	str	r2, [fp, #-24]	; 0xffffffe8
   27d28:	mov	r2, ip
   27d2c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   27d30:	str	lr, [sp]
   27d34:	movw	r4, #1
   27d38:	str	r4, [sp, #4]
   27d3c:	bl	3e72c <flatcc_json_printer_float_struct_field@@Base>
   27d40:	ldr	r0, [pc, #348]	; 27ea4 <main@@Base+0x11558>
   27d44:	add	r0, pc, r0
   27d48:	ldr	r1, [fp, #-12]
   27d4c:	ldr	r2, [fp, #-16]
   27d50:	str	r0, [fp, #-28]	; 0xffffffe4
   27d54:	mov	r0, r1
   27d58:	movw	r1, #1
   27d5c:	str	r1, [fp, #-32]	; 0xffffffe0
   27d60:	movw	r3, #4
   27d64:	ldr	ip, [fp, #-28]	; 0xffffffe4
   27d68:	str	ip, [sp]
   27d6c:	ldr	lr, [fp, #-32]	; 0xffffffe0
   27d70:	str	lr, [sp, #4]
   27d74:	bl	3e72c <flatcc_json_printer_float_struct_field@@Base>
   27d78:	ldr	r0, [pc, #288]	; 27ea0 <main@@Base+0x11554>
   27d7c:	add	r0, pc, r0
   27d80:	ldr	r1, [fp, #-12]
   27d84:	ldr	r2, [fp, #-16]
   27d88:	str	r0, [sp, #36]	; 0x24
   27d8c:	mov	r0, r1
   27d90:	movw	r1, #2
   27d94:	movw	r3, #8
   27d98:	ldr	ip, [sp, #36]	; 0x24
   27d9c:	str	ip, [sp]
   27da0:	movw	lr, #1
   27da4:	str	lr, [sp, #4]
   27da8:	bl	3e72c <flatcc_json_printer_float_struct_field@@Base>
   27dac:	ldr	r0, [pc, #232]	; 27e9c <main@@Base+0x11550>
   27db0:	add	r0, pc, r0
   27db4:	ldr	r1, [fp, #-12]
   27db8:	ldr	r2, [fp, #-16]
   27dbc:	str	r0, [sp, #32]
   27dc0:	mov	r0, r1
   27dc4:	movw	r1, #3
   27dc8:	movw	r3, #16
   27dcc:	ldr	ip, [sp, #32]
   27dd0:	str	ip, [sp]
   27dd4:	movw	lr, #5
   27dd8:	str	lr, [sp, #4]
   27ddc:	bl	3e7cc <flatcc_json_printer_double_struct_field@@Base>
   27de0:	ldr	r0, [pc, #172]	; 27e94 <main@@Base+0x11548>
   27de4:	add	r0, pc, r0
   27de8:	ldr	r1, [pc, #168]	; 27e98 <main@@Base+0x1154c>
   27dec:	add	r1, pc, r1
   27df0:	ldr	r2, [fp, #-12]
   27df4:	ldr	r3, [fp, #-16]
   27df8:	str	r0, [sp, #28]
   27dfc:	mov	r0, r2
   27e00:	movw	r2, #4
   27e04:	str	r1, [sp, #24]
   27e08:	mov	r1, r2
   27e0c:	mov	r2, r3
   27e10:	movw	r3, #24
   27e14:	ldr	ip, [sp, #28]
   27e18:	str	ip, [sp]
   27e1c:	movw	lr, #5
   27e20:	str	lr, [sp, #4]
   27e24:	ldr	lr, [sp, #24]
   27e28:	str	lr, [sp, #8]
   27e2c:	bl	3ebd0 <flatcc_json_printer_int8_enum_struct_field@@Base>
   27e30:	ldr	r0, [pc, #84]	; 27e8c <main@@Base+0x11540>
   27e34:	add	r0, pc, r0
   27e38:	ldr	r1, [pc, #80]	; 27e90 <main@@Base+0x11544>
   27e3c:	add	r1, pc, r1
   27e40:	ldr	r2, [fp, #-12]
   27e44:	ldr	r3, [fp, #-16]
   27e48:	str	r0, [sp, #20]
   27e4c:	mov	r0, r2
   27e50:	movw	r2, #5
   27e54:	str	r1, [sp, #16]
   27e58:	mov	r1, r2
   27e5c:	str	r2, [sp, #12]
   27e60:	mov	r2, r3
   27e64:	movw	r3, #26
   27e68:	ldr	ip, [sp, #20]
   27e6c:	str	ip, [sp]
   27e70:	ldr	lr, [sp, #12]
   27e74:	str	lr, [sp, #4]
   27e78:	ldr	r4, [sp, #16]
   27e7c:	str	r4, [sp, #8]
   27e80:	bl	43ce8 <flatcc_json_printer_embedded_struct_field@@Base>
   27e84:	sub	sp, fp, #8
   27e88:	pop	{r4, sl, fp, pc}
   27e8c:	andeq	r2, r2, r1, ror #27
   27e90:	andeq	r0, r0, r8, lsr r3
   27e94:	andeq	r2, r2, fp, lsr #28
   27e98:	strheq	r0, [r0], -r8
   27e9c:	andeq	r2, r2, r9, asr lr
   27ea0:	andeq	r2, r2, fp, lsl #29
   27ea4:	andeq	r4, r2, fp, ror sl
   27ea8:	andeq	r2, r2, lr, asr #26
   27eac:	push	{fp, lr}
   27eb0:	mov	fp, sp
   27eb4:	sub	sp, sp, #16
   27eb8:	str	r0, [fp, #-4]
   27ebc:	strb	r1, [fp, #-5]
   27ec0:	ldrb	r0, [fp, #-5]
   27ec4:	strb	r0, [fp, #-6]
   27ec8:	ldrb	r0, [fp, #-6]
   27ecc:	ldrb	r1, [fp, #-6]
   27ed0:	sub	r1, r1, #1
   27ed4:	and	r0, r0, r1
   27ed8:	movw	r1, #0
   27edc:	cmp	r1, r0
   27ee0:	movw	r0, #0
   27ee4:	movne	r0, #1
   27ee8:	and	r0, r0, #1
   27eec:	str	r0, [sp, #4]
   27ef0:	str	r1, [sp]
   27ef4:	ldrb	r0, [fp, #-6]
   27ef8:	and	r0, r0, #244	; 0xf4
   27efc:	cmp	r0, #0
   27f00:	bne	27f10 <main@@Base+0x115c4>
   27f04:	ldrb	r0, [fp, #-6]
   27f08:	cmp	r0, #0
   27f0c:	bne	27f20 <main@@Base+0x115d4>
   27f10:	ldr	r0, [fp, #-4]
   27f14:	ldrsb	r1, [fp, #-5]
   27f18:	bl	3bcd0 <flatcc_json_printer_int8@@Base>
   27f1c:	b	27fc8 <main@@Base+0x1167c>
   27f20:	ldr	r0, [fp, #-4]
   27f24:	ldr	r1, [sp, #4]
   27f28:	bl	3c158 <flatcc_json_printer_delimit_enum_flags@@Base>
   27f2c:	ldrb	r0, [fp, #-6]
   27f30:	and	r0, r0, #1
   27f34:	cmp	r0, #0
   27f38:	beq	27f5c <main@@Base+0x11610>
   27f3c:	ldr	r0, [pc, #140]	; 27fd0 <main@@Base+0x11684>
   27f40:	add	r2, pc, r0
   27f44:	ldr	r0, [fp, #-4]
   27f48:	ldr	r1, [sp]
   27f4c:	add	r3, r1, #1
   27f50:	str	r3, [sp]
   27f54:	movw	r3, #3
   27f58:	bl	3c1c8 <flatcc_json_printer_enum_flag@@Base>
   27f5c:	ldrb	r0, [fp, #-6]
   27f60:	and	r0, r0, #2
   27f64:	cmp	r0, #0
   27f68:	beq	27f8c <main@@Base+0x11640>
   27f6c:	ldr	r0, [pc, #96]	; 27fd4 <main@@Base+0x11688>
   27f70:	add	r2, pc, r0
   27f74:	ldr	r0, [fp, #-4]
   27f78:	ldr	r1, [sp]
   27f7c:	add	r3, r1, #1
   27f80:	str	r3, [sp]
   27f84:	movw	r3, #5
   27f88:	bl	3c1c8 <flatcc_json_printer_enum_flag@@Base>
   27f8c:	ldrb	r0, [fp, #-6]
   27f90:	and	r0, r0, #8
   27f94:	cmp	r0, #0
   27f98:	beq	27fbc <main@@Base+0x11670>
   27f9c:	ldr	r0, [pc, #52]	; 27fd8 <main@@Base+0x1168c>
   27fa0:	add	r2, pc, r0
   27fa4:	ldr	r0, [fp, #-4]
   27fa8:	ldr	r1, [sp]
   27fac:	add	r3, r1, #1
   27fb0:	str	r3, [sp]
   27fb4:	movw	r3, #4
   27fb8:	bl	3c1c8 <flatcc_json_printer_enum_flag@@Base>
   27fbc:	ldr	r0, [fp, #-4]
   27fc0:	ldr	r1, [sp, #4]
   27fc4:	bl	3c158 <flatcc_json_printer_delimit_enum_flags@@Base>
   27fc8:	mov	sp, fp
   27fcc:	pop	{fp, pc}
   27fd0:	ldrdeq	r2, [r2], -fp
   27fd4:	andeq	r2, r2, pc, lsr #25
   27fd8:	andeq	r2, r2, r5, lsl #25
   27fdc:	push	{fp, lr}
   27fe0:	mov	fp, sp
   27fe4:	sub	sp, sp, #16
   27fe8:	str	r0, [fp, #-4]
   27fec:	strb	r1, [fp, #-5]
   27ff0:	ldrb	r0, [fp, #-5]
   27ff4:	sub	r0, r0, #1
   27ff8:	cmp	r0, #3
   27ffc:	str	r0, [sp, #4]
   28000:	bhi	28084 <main@@Base+0x11738>
   28004:	add	r0, pc, #8
   28008:	ldr	r1, [sp, #4]
   2800c:	ldr	r2, [r0, r1, lsl #2]
   28010:	add	pc, r0, r2
   28014:	andeq	r0, r0, r0, lsl r0
   28018:	andeq	r0, r0, r8, lsr #32
   2801c:	andeq	r0, r0, r0, asr #32
   28020:	andeq	r0, r0, r8, asr r0
   28024:	ldr	r0, [pc, #128]	; 280ac <main@@Base+0x11760>
   28028:	add	r1, pc, r0
   2802c:	ldr	r0, [fp, #-4]
   28030:	movw	r2, #7
   28034:	bl	3c02c <flatcc_json_printer_enum@@Base>
   28038:	b	28098 <main@@Base+0x1174c>
   2803c:	ldr	r0, [pc, #100]	; 280a8 <main@@Base+0x1175c>
   28040:	add	r1, pc, r0
   28044:	ldr	r0, [fp, #-4]
   28048:	movw	r2, #23
   2804c:	bl	3c02c <flatcc_json_printer_enum@@Base>
   28050:	b	28098 <main@@Base+0x1174c>
   28054:	ldr	r0, [pc, #72]	; 280a4 <main@@Base+0x11758>
   28058:	add	r1, pc, r0
   2805c:	ldr	r0, [fp, #-4]
   28060:	movw	r2, #8
   28064:	bl	3c02c <flatcc_json_printer_enum@@Base>
   28068:	b	28098 <main@@Base+0x1174c>
   2806c:	ldr	r0, [pc, #44]	; 280a0 <main@@Base+0x11754>
   28070:	add	r1, pc, r0
   28074:	ldr	r0, [fp, #-4]
   28078:	movw	r2, #3
   2807c:	bl	3c02c <flatcc_json_printer_enum@@Base>
   28080:	b	28098 <main@@Base+0x1174c>
   28084:	ldr	r0, [pc, #36]	; 280b0 <main@@Base+0x11764>
   28088:	add	r1, pc, r0
   2808c:	ldr	r0, [fp, #-4]
   28090:	movw	r2, #4
   28094:	bl	3c02c <flatcc_json_printer_enum@@Base>
   28098:	mov	sp, fp
   2809c:	pop	{fp, pc}
   280a0:	andeq	r2, r2, r3, ror #23
   280a4:	strdeq	r2, [r2], -r2	; <UNPREDICTABLE>
   280a8:	strdeq	r2, [r2], -r2	; <UNPREDICTABLE>
   280ac:	andeq	r2, r2, r2, lsl #24
   280b0:	andeq	r4, r2, pc, ror #8
   280b4:	push	{fp, lr}
   280b8:	mov	fp, sp
   280bc:	sub	sp, sp, #16
   280c0:	str	r0, [fp, #-4]
   280c4:	str	r1, [sp, #8]
   280c8:	ldr	r0, [sp, #8]
   280cc:	ldrb	r0, [r0, #8]
   280d0:	sub	r0, r0, #1
   280d4:	cmp	r0, #3
   280d8:	str	r0, [sp, #4]
   280dc:	bhi	28160 <main@@Base+0x11814>
   280e0:	add	r0, pc, #8
   280e4:	ldr	r1, [sp, #4]
   280e8:	ldr	r2, [r0, r1, lsl #2]
   280ec:	add	pc, r0, r2
   280f0:	andeq	r0, r0, r0, lsl r0
   280f4:	andeq	r0, r0, r8, lsr #32
   280f8:	andeq	r0, r0, r0, asr #32
   280fc:	andeq	r0, r0, r8, asr r0
   28100:	ldr	r0, [pc, #112]	; 28178 <main@@Base+0x1182c>
   28104:	add	r2, pc, r0
   28108:	ldr	r0, [fp, #-4]
   2810c:	ldr	r1, [sp, #8]
   28110:	bl	43b6c <flatcc_json_printer_union_table@@Base>
   28114:	b	28164 <main@@Base+0x11818>
   28118:	ldr	r0, [pc, #84]	; 28174 <main@@Base+0x11828>
   2811c:	add	r2, pc, r0
   28120:	ldr	r0, [fp, #-4]
   28124:	ldr	r1, [sp, #8]
   28128:	bl	43b6c <flatcc_json_printer_union_table@@Base>
   2812c:	b	28164 <main@@Base+0x11818>
   28130:	ldr	r0, [pc, #56]	; 28170 <main@@Base+0x11824>
   28134:	add	r2, pc, r0
   28138:	ldr	r0, [fp, #-4]
   2813c:	ldr	r1, [sp, #8]
   28140:	bl	43b6c <flatcc_json_printer_union_table@@Base>
   28144:	b	28164 <main@@Base+0x11818>
   28148:	ldr	r0, [pc, #28]	; 2816c <main@@Base+0x11820>
   2814c:	add	r2, pc, r0
   28150:	ldr	r0, [fp, #-4]
   28154:	ldr	r1, [sp, #8]
   28158:	bl	43b6c <flatcc_json_printer_union_table@@Base>
   2815c:	b	28164 <main@@Base+0x11818>
   28160:	b	28164 <main@@Base+0x11818>
   28164:	mov	sp, fp
   28168:	pop	{fp, pc}
   2816c:	andeq	r0, r0, r4, lsl #8
   28170:	andeq	r0, r0, r8, lsl #8
   28174:	andeq	r0, r0, r0, lsl #6
   28178:			; <UNDEFINED> instruction: 0xffff3710
   2817c:	push	{r4, sl, fp, lr}
   28180:	add	fp, sp, #8
   28184:	sub	sp, sp, #32
   28188:	ldr	r2, [pc, #128]	; 28210 <main@@Base+0x118c4>
   2818c:	add	r2, pc, r2
   28190:	str	r0, [fp, #-12]
   28194:	str	r1, [fp, #-16]
   28198:	ldr	r0, [fp, #-12]
   2819c:	ldr	r1, [fp, #-16]
   281a0:	movw	r3, #0
   281a4:	str	r1, [sp, #20]
   281a8:	mov	r1, r3
   281ac:	ldr	ip, [sp, #20]
   281b0:	str	r2, [sp, #16]
   281b4:	mov	r2, ip
   281b8:	ldr	lr, [sp, #16]
   281bc:	str	lr, [sp]
   281c0:	movw	r4, #1
   281c4:	str	r4, [sp, #4]
   281c8:	bl	3e4b0 <flatcc_json_printer_int16_struct_field@@Base>
   281cc:	ldr	r0, [pc, #56]	; 2820c <main@@Base+0x118c0>
   281d0:	add	r0, pc, r0
   281d4:	ldr	r1, [fp, #-12]
   281d8:	ldr	r2, [fp, #-16]
   281dc:	str	r0, [sp, #12]
   281e0:	mov	r0, r1
   281e4:	movw	r1, #1
   281e8:	str	r1, [sp, #8]
   281ec:	movw	r3, #2
   281f0:	ldr	ip, [sp, #12]
   281f4:	str	ip, [sp]
   281f8:	ldr	lr, [sp, #8]
   281fc:	str	lr, [sp, #4]
   28200:	bl	3e410 <flatcc_json_printer_int8_struct_field@@Base>
   28204:	sub	sp, fp, #8
   28208:	pop	{r4, sl, fp, pc}
   2820c:	andeq	r2, r2, r0, lsl #22
   28210:	andeq	r2, r2, r5, lsr #19
   28214:	push	{fp, lr}
   28218:	mov	fp, sp
   2821c:	sub	sp, sp, #32
   28220:	ldr	r2, [pc, #164]	; 282cc <main@@Base+0x11980>
   28224:	add	r3, pc, r2
   28228:	str	r0, [fp, #-4]
   2822c:	str	r1, [fp, #-8]
   28230:	ldr	r0, [fp, #-4]
   28234:	ldr	r1, [fp, #-8]
   28238:	movw	r2, #0
   2823c:	movw	ip, #2
   28240:	str	ip, [sp]
   28244:	bl	3c230 <flatcc_json_printer_string_field@@Base>
   28248:	ldr	r0, [pc, #120]	; 282c8 <main@@Base+0x1197c>
   2824c:	add	r0, pc, r0
   28250:	ldr	r1, [fp, #-4]
   28254:	ldr	r2, [fp, #-8]
   28258:	mov	r3, sp
   2825c:	mov	ip, #0
   28260:	str	ip, [r3, #12]
   28264:	str	ip, [r3, #8]
   28268:	mov	ip, #3
   2826c:	str	ip, [r3]
   28270:	ldr	r3, [pc, #88]	; 282d0 <main@@Base+0x11984>
   28274:	add	r3, pc, r3
   28278:	mov	ip, #1
   2827c:	str	r0, [fp, #-12]
   28280:	mov	r0, r1
   28284:	mov	r1, r2
   28288:	mov	r2, ip
   2828c:	bl	3d05c <flatcc_json_printer_int64_field@@Base>
   28290:	ldr	r0, [pc, #44]	; 282c4 <main@@Base+0x11978>
   28294:	add	r3, pc, r0
   28298:	ldr	r0, [fp, #-4]
   2829c:	ldr	r1, [fp, #-8]
   282a0:	movw	r2, #2
   282a4:	movw	ip, #5
   282a8:	str	ip, [sp]
   282ac:	movw	ip, #0
   282b0:	uxth	ip, ip
   282b4:	str	ip, [sp, #4]
   282b8:	bl	3c914 <flatcc_json_printer_uint16_field@@Base>
   282bc:	mov	sp, fp
   282c0:	pop	{fp, pc}
   282c4:			; <UNDEFINED> instruction: 0x000233bf
   282c8:	andeq	r2, r2, lr, ror fp
   282cc:	andeq	r2, r2, r3, lsr #23
   282d0:	andeq	r2, r2, r6, asr fp
   282d4:	push	{r4, sl, fp, lr}
   282d8:	add	fp, sp, #8
   282dc:	sub	sp, sp, #32
   282e0:	ldr	r2, [pc, #124]	; 28364 <main@@Base+0x11a18>
   282e4:	add	r2, pc, r2
   282e8:	str	r0, [fp, #-12]
   282ec:	str	r1, [fp, #-16]
   282f0:	ldr	r0, [fp, #-12]
   282f4:	ldr	r1, [fp, #-16]
   282f8:	movw	r3, #0
   282fc:	str	r1, [sp, #20]
   28300:	mov	r1, r3
   28304:	ldr	ip, [sp, #20]
   28308:	str	r2, [sp, #16]
   2830c:	mov	r2, ip
   28310:	ldr	lr, [sp, #16]
   28314:	str	lr, [sp]
   28318:	movw	r4, #2
   2831c:	str	r4, [sp, #4]
   28320:	bl	3e2d0 <flatcc_json_printer_uint32_struct_field@@Base>
   28324:	ldr	r0, [pc, #52]	; 28360 <main@@Base+0x11a14>
   28328:	add	r0, pc, r0
   2832c:	ldr	r1, [fp, #-12]
   28330:	ldr	r2, [fp, #-16]
   28334:	str	r0, [sp, #12]
   28338:	mov	r0, r1
   2833c:	movw	r1, #1
   28340:	movw	r3, #4
   28344:	ldr	ip, [sp, #12]
   28348:	str	ip, [sp]
   2834c:	movw	lr, #8
   28350:	str	lr, [sp, #4]
   28354:	bl	3e2d0 <flatcc_json_printer_uint32_struct_field@@Base>
   28358:	sub	sp, fp, #8
   2835c:	pop	{r4, sl, fp, pc}
   28360:	andeq	r2, r2, r6, lsr #21
   28364:	andeq	r2, r2, r3, ror #21
   28368:	sub	sp, sp, #8
   2836c:	str	r0, [sp, #4]
   28370:	str	r1, [sp]
   28374:	add	sp, sp, #8
   28378:	bx	lr
   2837c:	push	{fp, lr}
   28380:	mov	fp, sp
   28384:	sub	sp, sp, #24
   28388:	ldr	r2, [pc, #144]	; 28420 <main@@Base+0x11ad4>
   2838c:	add	r3, pc, r2
   28390:	str	r0, [fp, #-4]
   28394:	str	r1, [fp, #-8]
   28398:	ldr	r0, [fp, #-4]
   2839c:	ldr	r1, [fp, #-8]
   283a0:	movw	r2, #0
   283a4:	str	r2, [sp, #12]
   283a8:	movw	ip, #4
   283ac:	str	ip, [sp]
   283b0:	ldr	ip, [sp, #12]
   283b4:	str	ip, [sp, #4]
   283b8:	bl	3c4bc <flatcc_json_printer_uint8_vector_base64_field@@Base>
   283bc:	ldr	r0, [pc, #88]	; 2841c <main@@Base+0x11ad0>
   283c0:	add	r3, pc, r0
   283c4:	ldr	r0, [fp, #-4]
   283c8:	ldr	r1, [fp, #-8]
   283cc:	movw	r2, #1
   283d0:	str	r2, [sp, #8]
   283d4:	movw	ip, #7
   283d8:	str	ip, [sp]
   283dc:	ldr	ip, [sp, #8]
   283e0:	str	ip, [sp, #4]
   283e4:	bl	3c4bc <flatcc_json_printer_uint8_vector_base64_field@@Base>
   283e8:	ldr	r0, [pc, #40]	; 28418 <main@@Base+0x11acc>
   283ec:	add	r3, pc, r0
   283f0:	ldr	r0, [fp, #-4]
   283f4:	ldr	r1, [fp, #-8]
   283f8:	movw	r2, #2
   283fc:	movw	ip, #6
   28400:	str	ip, [sp]
   28404:	movw	ip, #0
   28408:	str	ip, [sp, #4]
   2840c:	bl	3c4bc <flatcc_json_printer_uint8_vector_base64_field@@Base>
   28410:	mov	sp, fp
   28414:	pop	{fp, pc}
   28418:	strdeq	r2, [r2], -r3
   2841c:	andeq	r2, r2, r7, lsl sl
   28420:	andeq	r2, r2, lr, asr #20
   28424:	push	{fp, lr}
   28428:	mov	fp, sp
   2842c:	sub	sp, sp, #40	; 0x28
   28430:	ldr	r2, [pc, #260]	; 2853c <main@@Base+0x11bf0>
   28434:	add	r3, pc, r2
   28438:	ldr	r2, [pc, #256]	; 28540 <main@@Base+0x11bf4>
   2843c:	add	r2, pc, r2
   28440:	str	r0, [fp, #-4]
   28444:	str	r1, [fp, #-8]
   28448:	ldr	r0, [fp, #-4]
   2844c:	ldr	r1, [fp, #-8]
   28450:	movw	ip, #0
   28454:	str	r2, [fp, #-12]
   28458:	mov	r2, ip
   2845c:	movw	ip, #5
   28460:	str	ip, [sp]
   28464:	movw	ip, #2
   28468:	sxtb	ip, ip
   2846c:	str	ip, [sp, #4]
   28470:	ldr	ip, [fp, #-12]
   28474:	str	ip, [sp, #8]
   28478:	bl	3db24 <flatcc_json_printer_int8_enum_field@@Base>
   2847c:	ldr	r0, [pc, #176]	; 28534 <main@@Base+0x11be8>
   28480:	add	r3, pc, r0
   28484:	ldr	r0, [pc, #172]	; 28538 <main@@Base+0x11bec>
   28488:	add	r0, pc, r0
   2848c:	ldr	r1, [fp, #-4]
   28490:	ldr	r2, [fp, #-8]
   28494:	str	r0, [fp, #-16]
   28498:	mov	r0, r1
   2849c:	mov	r1, r2
   284a0:	movw	r2, #1
   284a4:	movw	ip, #6
   284a8:	str	ip, [sp]
   284ac:	movw	ip, #2
   284b0:	sxtb	ip, ip
   284b4:	str	ip, [sp, #4]
   284b8:	ldr	ip, [fp, #-16]
   284bc:	str	ip, [sp, #8]
   284c0:	bl	3db24 <flatcc_json_printer_int8_enum_field@@Base>
   284c4:	ldr	r0, [pc, #100]	; 28530 <main@@Base+0x11be4>
   284c8:	add	r3, pc, r0
   284cc:	ldr	r0, [fp, #-4]
   284d0:	ldr	r1, [fp, #-8]
   284d4:	movw	r2, #2
   284d8:	str	r2, [sp, #20]
   284dc:	ldr	ip, [sp, #20]
   284e0:	str	ip, [sp]
   284e4:	movw	lr, #2
   284e8:	and	lr, lr, #255	; 0xff
   284ec:	str	lr, [sp, #4]
   284f0:	bl	3c7e4 <flatcc_json_printer_uint8_field@@Base>
   284f4:	ldr	r0, [pc, #48]	; 2852c <main@@Base+0x11be0>
   284f8:	add	r3, pc, r0
   284fc:	ldr	r0, [fp, #-4]
   28500:	ldr	r1, [fp, #-8]
   28504:	movw	r2, #3
   28508:	str	r2, [sp, #16]
   2850c:	ldr	ip, [sp, #16]
   28510:	str	ip, [sp]
   28514:	movw	lr, #2
   28518:	and	lr, lr, #255	; 0xff
   2851c:	str	lr, [sp, #4]
   28520:	bl	3c7e4 <flatcc_json_printer_uint8_field@@Base>
   28524:	mov	sp, fp
   28528:	pop	{fp, pc}
   2852c:	andeq	r2, r2, r9, ror #14
   28530:	muleq	r2, r6, r7
   28534:	ldrdeq	r2, [r2], -r7
   28538:			; <UNDEFINED> instruction: 0xfffffa1c
   2853c:	andeq	r2, r2, fp, asr #12
   28540:			; <UNDEFINED> instruction: 0xfffffa68
   28544:	sub	sp, sp, #8
   28548:	str	r0, [sp, #4]
   2854c:	str	r1, [sp]
   28550:	add	sp, sp, #8
   28554:	bx	lr
   28558:	push	{fp, lr}
   2855c:	mov	fp, sp
   28560:	sub	sp, sp, #40	; 0x28
   28564:	ldr	r2, [pc, #224]	; 2864c <main@@Base+0x11d00>
   28568:	add	r3, pc, r2
   2856c:	ldr	r2, [pc, #220]	; 28650 <main@@Base+0x11d04>
   28570:	add	r2, pc, r2
   28574:	str	r0, [fp, #-4]
   28578:	str	r1, [fp, #-8]
   2857c:	ldr	r0, [fp, #-4]
   28580:	ldr	r1, [fp, #-8]
   28584:	movw	ip, #0
   28588:	str	r2, [fp, #-12]
   2858c:	mov	r2, ip
   28590:	movw	ip, #6
   28594:	str	ip, [sp]
   28598:	ldr	ip, [fp, #-12]
   2859c:	str	ip, [sp, #4]
   285a0:	bl	43790 <flatcc_json_printer_table_field@@Base>
   285a4:	ldr	r0, [pc, #152]	; 28644 <main@@Base+0x11cf8>
   285a8:	add	r3, pc, r0
   285ac:	ldr	r0, [pc, #148]	; 28648 <main@@Base+0x11cfc>
   285b0:	add	r0, pc, r0
   285b4:	ldr	r1, [fp, #-4]
   285b8:	ldr	r2, [fp, #-8]
   285bc:	str	r0, [fp, #-16]
   285c0:	mov	r0, r1
   285c4:	mov	r1, r2
   285c8:	movw	r2, #1
   285cc:	movw	ip, #5
   285d0:	str	ip, [sp]
   285d4:	ldr	ip, [fp, #-16]
   285d8:	str	ip, [sp, #4]
   285dc:	bl	43790 <flatcc_json_printer_table_field@@Base>
   285e0:	ldr	r0, [pc, #80]	; 28638 <main@@Base+0x11cec>
   285e4:	add	r3, pc, r0
   285e8:	ldr	r0, [pc, #76]	; 2863c <main@@Base+0x11cf0>
   285ec:	add	r0, pc, r0
   285f0:	ldr	r1, [pc, #72]	; 28640 <main@@Base+0x11cf4>
   285f4:	add	r1, pc, r1
   285f8:	ldr	r2, [fp, #-4]
   285fc:	ldr	ip, [fp, #-8]
   28600:	str	r0, [sp, #20]
   28604:	mov	r0, r2
   28608:	str	r1, [sp, #16]
   2860c:	mov	r1, ip
   28610:	movw	r2, #3
   28614:	movw	ip, #7
   28618:	str	ip, [sp]
   2861c:	ldr	ip, [sp, #20]
   28620:	str	ip, [sp, #4]
   28624:	ldr	lr, [sp, #16]
   28628:	str	lr, [sp, #8]
   2862c:	bl	43328 <flatcc_json_printer_union_vector_field@@Base>
   28630:	mov	sp, fp
   28634:	pop	{fp, pc}
   28638:	andeq	r2, r2, lr, lsl #13
   2863c:			; <UNDEFINED> instruction: 0xfffff9e8
   28640:			; <UNDEFINED> instruction: 0xfffffab8
   28644:	andeq	r2, r2, r4, asr #13
   28648:	andeq	r0, r0, r0, lsl #3
   2864c:	strdeq	r2, [r2], -sp
   28650:	ldrdeq	r0, [r0], -ip
   28654:	push	{fp, lr}
   28658:	mov	fp, sp
   2865c:	sub	sp, sp, #32
   28660:	ldr	r2, [pc, #200]	; 28730 <main@@Base+0x11de4>
   28664:	add	r3, pc, r2
   28668:	ldr	r2, [pc, #196]	; 28734 <main@@Base+0x11de8>
   2866c:	add	r2, pc, r2
   28670:	str	r0, [fp, #-4]
   28674:	str	r1, [fp, #-8]
   28678:	ldr	r0, [fp, #-4]
   2867c:	ldr	r1, [fp, #-8]
   28680:	movw	ip, #0
   28684:	str	r2, [fp, #-12]
   28688:	mov	r2, ip
   2868c:	movw	ip, #21
   28690:	str	ip, [sp]
   28694:	ldr	ip, [fp, #-12]
   28698:	str	ip, [sp, #4]
   2869c:	bl	43790 <flatcc_json_printer_table_field@@Base>
   286a0:	ldr	r0, [pc, #128]	; 28728 <main@@Base+0x11ddc>
   286a4:	add	r3, pc, r0
   286a8:	ldr	r0, [pc, #124]	; 2872c <main@@Base+0x11de0>
   286ac:	add	r0, pc, r0
   286b0:	ldr	r1, [fp, #-4]
   286b4:	ldr	r2, [fp, #-8]
   286b8:	str	r0, [sp, #16]
   286bc:	mov	r0, r1
   286c0:	mov	r1, r2
   286c4:	movw	r2, #1
   286c8:	movw	ip, #22
   286cc:	str	ip, [sp]
   286d0:	ldr	ip, [sp, #16]
   286d4:	str	ip, [sp, #4]
   286d8:	bl	43790 <flatcc_json_printer_table_field@@Base>
   286dc:	ldr	r0, [pc, #60]	; 28720 <main@@Base+0x11dd4>
   286e0:	add	r3, pc, r0
   286e4:	ldr	r0, [pc, #56]	; 28724 <main@@Base+0x11dd8>
   286e8:	add	r0, pc, r0
   286ec:	ldr	r1, [fp, #-4]
   286f0:	ldr	r2, [fp, #-8]
   286f4:	str	r0, [sp, #12]
   286f8:	mov	r0, r1
   286fc:	mov	r1, r2
   28700:	movw	r2, #2
   28704:	movw	ip, #22
   28708:	str	ip, [sp]
   2870c:	ldr	ip, [sp, #12]
   28710:	str	ip, [sp, #4]
   28714:	bl	43790 <flatcc_json_printer_table_field@@Base>
   28718:	mov	sp, fp
   2871c:	pop	{fp, pc}
   28720:	andeq	r2, r2, r7, asr #11
   28724:			; <UNDEFINED> instruction: 0x000004b0
   28728:	andeq	r2, r2, ip, ror #11
   2872c:	andeq	r0, r0, r0, ror #8
   28730:	andeq	r2, r2, r6, lsl r6
   28734:	andeq	r0, r0, r0, lsr #5
   28738:	push	{fp, lr}
   2873c:	mov	fp, sp
   28740:	sub	sp, sp, #56	; 0x38
   28744:	ldr	r2, [pc, #444]	; 28908 <main@@Base+0x11fbc>
   28748:	add	r3, pc, r2
   2874c:	ldr	r2, [pc, #440]	; 2890c <main@@Base+0x11fc0>
   28750:	add	r2, pc, r2
   28754:	ldr	ip, [pc, #436]	; 28910 <main@@Base+0x11fc4>
   28758:	add	ip, pc, ip
   2875c:	str	r0, [fp, #-4]
   28760:	str	r1, [fp, #-8]
   28764:	ldr	r0, [fp, #-4]
   28768:	ldr	r1, [fp, #-8]
   2876c:	movw	lr, #1
   28770:	str	r2, [fp, #-12]
   28774:	mov	r2, lr
   28778:	movw	lr, #14
   2877c:	str	lr, [sp]
   28780:	ldr	lr, [fp, #-12]
   28784:	str	lr, [sp, #4]
   28788:	str	ip, [sp, #8]
   2878c:	bl	43858 <flatcc_json_printer_union_field@@Base>
   28790:	ldr	r0, [pc, #356]	; 288fc <main@@Base+0x11fb0>
   28794:	add	r3, pc, r0
   28798:	ldr	r0, [pc, #352]	; 28900 <main@@Base+0x11fb4>
   2879c:	add	r0, pc, r0
   287a0:	ldr	r1, [pc, #348]	; 28904 <main@@Base+0x11fb8>
   287a4:	add	r1, pc, r1
   287a8:	ldr	r2, [fp, #-4]
   287ac:	ldr	ip, [fp, #-8]
   287b0:	str	r0, [fp, #-16]
   287b4:	mov	r0, r2
   287b8:	str	r1, [fp, #-20]	; 0xffffffec
   287bc:	mov	r1, ip
   287c0:	movw	r2, #3
   287c4:	movw	ip, #10
   287c8:	str	ip, [sp]
   287cc:	ldr	ip, [fp, #-16]
   287d0:	str	ip, [sp, #4]
   287d4:	ldr	lr, [fp, #-20]	; 0xffffffec
   287d8:	str	lr, [sp, #8]
   287dc:	bl	43858 <flatcc_json_printer_union_field@@Base>
   287e0:	ldr	r0, [pc, #264]	; 288f0 <main@@Base+0x11fa4>
   287e4:	add	r3, pc, r0
   287e8:	ldr	r0, [pc, #260]	; 288f4 <main@@Base+0x11fa8>
   287ec:	add	r0, pc, r0
   287f0:	ldr	r1, [pc, #256]	; 288f8 <main@@Base+0x11fac>
   287f4:	add	r1, pc, r1
   287f8:	ldr	r2, [fp, #-4]
   287fc:	ldr	ip, [fp, #-8]
   28800:	str	r0, [fp, #-24]	; 0xffffffe8
   28804:	mov	r0, r2
   28808:	str	r1, [sp, #28]
   2880c:	mov	r1, ip
   28810:	movw	r2, #5
   28814:	movw	ip, #9
   28818:	str	ip, [sp]
   2881c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   28820:	str	ip, [sp, #4]
   28824:	ldr	lr, [sp, #28]
   28828:	str	lr, [sp, #8]
   2882c:	bl	43858 <flatcc_json_printer_union_field@@Base>
   28830:	ldr	r0, [pc, #172]	; 288e4 <main@@Base+0x11f98>
   28834:	add	r3, pc, r0
   28838:	ldr	r0, [pc, #168]	; 288e8 <main@@Base+0x11f9c>
   2883c:	add	r0, pc, r0
   28840:	ldr	r1, [pc, #164]	; 288ec <main@@Base+0x11fa0>
   28844:	add	r1, pc, r1
   28848:	ldr	r2, [fp, #-4]
   2884c:	ldr	ip, [fp, #-8]
   28850:	str	r0, [sp, #24]
   28854:	mov	r0, r2
   28858:	str	r1, [sp, #20]
   2885c:	mov	r1, ip
   28860:	movw	r2, #7
   28864:	movw	ip, #5
   28868:	str	ip, [sp]
   2886c:	ldr	ip, [sp, #24]
   28870:	str	ip, [sp, #4]
   28874:	ldr	lr, [sp, #20]
   28878:	str	lr, [sp, #8]
   2887c:	bl	43858 <flatcc_json_printer_union_field@@Base>
   28880:	ldr	r0, [pc, #80]	; 288d8 <main@@Base+0x11f8c>
   28884:	add	r3, pc, r0
   28888:	ldr	r0, [pc, #76]	; 288dc <main@@Base+0x11f90>
   2888c:	add	r0, pc, r0
   28890:	ldr	r1, [pc, #72]	; 288e0 <main@@Base+0x11f94>
   28894:	add	r1, pc, r1
   28898:	ldr	r2, [fp, #-4]
   2889c:	ldr	ip, [fp, #-8]
   288a0:	str	r0, [sp, #16]
   288a4:	mov	r0, r2
   288a8:	str	r1, [sp, #12]
   288ac:	mov	r1, ip
   288b0:	movw	r2, #9
   288b4:	movw	ip, #10
   288b8:	str	ip, [sp]
   288bc:	ldr	ip, [sp, #16]
   288c0:	str	ip, [sp, #4]
   288c4:	ldr	lr, [sp, #12]
   288c8:	str	lr, [sp, #8]
   288cc:	bl	43328 <flatcc_json_printer_union_vector_field@@Base>
   288d0:	mov	sp, fp
   288d4:	pop	{fp, pc}
   288d8:	andeq	r2, r2, r3, ror #9
   288dc:	muleq	r0, r8, r3
   288e0:	ldrdeq	r0, [r0], -r4
   288e4:	andeq	r2, r2, sp, lsr #10
   288e8:	andeq	r0, r0, r8, ror #7
   288ec:	andeq	r0, r0, r4, lsr #10
   288f0:	andeq	r2, r2, r3, ror r5
   288f4:	andeq	r0, r0, r8, lsr r4
   288f8:	andeq	r0, r0, r4, ror r5
   288fc:			; <UNDEFINED> instruction: 0x000225b8
   28900:	andeq	r0, r0, r8, lsl #9
   28904:	andeq	r0, r0, r4, asr #11
   28908:	strdeq	r2, [r2], -r5
   2890c:	ldrdeq	r0, [r0], -r4
   28910:	andeq	r0, r0, r0, lsl r6
   28914:	push	{fp, lr}
   28918:	mov	fp, sp
   2891c:	sub	sp, sp, #40	; 0x28
   28920:	ldr	r2, [pc, #476]	; 28b04 <main@@Base+0x121b8>
   28924:	add	r3, pc, r2
   28928:	str	r0, [fp, #-4]
   2892c:	str	r1, [fp, #-8]
   28930:	ldr	r0, [fp, #-4]
   28934:	ldr	r1, [fp, #-8]
   28938:	movw	r2, #0
   2893c:	movw	ip, #4
   28940:	str	ip, [sp]
   28944:	bl	3c230 <flatcc_json_printer_string_field@@Base>
   28948:	ldr	r0, [pc, #432]	; 28b00 <main@@Base+0x121b4>
   2894c:	add	r3, pc, r0
   28950:	ldr	r0, [fp, #-4]
   28954:	ldr	r1, [fp, #-8]
   28958:	movw	r2, #1
   2895c:	movw	ip, #9
   28960:	str	ip, [sp]
   28964:	movw	ip, #0
   28968:	str	ip, [sp, #4]
   2896c:	bl	3ca44 <flatcc_json_printer_uint32_field@@Base>
   28970:	ldr	r0, [pc, #388]	; 28afc <main@@Base+0x121b0>
   28974:	add	r3, pc, r0
   28978:	ldr	r0, [fp, #-4]
   2897c:	ldr	r1, [fp, #-8]
   28980:	movw	r2, #2
   28984:	movw	ip, #4
   28988:	str	ip, [sp]
   2898c:	bl	3c230 <flatcc_json_printer_string_field@@Base>
   28990:	ldr	r0, [pc, #352]	; 28af8 <main@@Base+0x121ac>
   28994:	add	r0, pc, r0
   28998:	ldr	r1, [fp, #-4]
   2899c:	ldr	r2, [fp, #-8]
   289a0:	mov	r3, sp
   289a4:	mov	ip, #0
   289a8:	str	ip, [r3, #12]
   289ac:	str	ip, [r3, #8]
   289b0:	mov	ip, #8
   289b4:	str	ip, [r3]
   289b8:	ldr	r3, [pc, #328]	; 28b08 <main@@Base+0x121bc>
   289bc:	add	r3, pc, r3
   289c0:	mov	ip, #3
   289c4:	str	r0, [fp, #-12]
   289c8:	mov	r0, r1
   289cc:	mov	r1, r2
   289d0:	mov	r2, ip
   289d4:	bl	3d05c <flatcc_json_printer_int64_field@@Base>
   289d8:	ldr	r0, [pc, #276]	; 28af4 <main@@Base+0x121a8>
   289dc:	add	r3, pc, r0
   289e0:	ldr	r0, [fp, #-4]
   289e4:	ldr	r1, [fp, #-8]
   289e8:	movw	r2, #4
   289ec:	str	r2, [fp, #-16]
   289f0:	ldr	ip, [fp, #-16]
   289f4:	str	ip, [sp]
   289f8:	bl	3c230 <flatcc_json_printer_string_field@@Base>
   289fc:	ldr	r0, [pc, #236]	; 28af0 <main@@Base+0x121a4>
   28a00:	add	r0, pc, r0
   28a04:	ldr	r1, [fp, #-4]
   28a08:	ldr	r2, [fp, #-8]
   28a0c:	mov	r3, sp
   28a10:	mov	ip, #0
   28a14:	str	ip, [r3, #12]
   28a18:	str	ip, [r3, #8]
   28a1c:	mov	ip, #8
   28a20:	str	ip, [r3]
   28a24:	ldr	r3, [pc, #224]	; 28b0c <main@@Base+0x121c0>
   28a28:	add	r3, pc, r3
   28a2c:	mov	ip, #5
   28a30:	str	r0, [sp, #20]
   28a34:	mov	r0, r1
   28a38:	mov	r1, r2
   28a3c:	mov	r2, ip
   28a40:	bl	3d05c <flatcc_json_printer_int64_field@@Base>
   28a44:	ldr	r0, [pc, #160]	; 28aec <main@@Base+0x121a0>
   28a48:	add	r3, pc, r0
   28a4c:	ldr	r0, [fp, #-4]
   28a50:	ldr	r1, [fp, #-8]
   28a54:	movw	r2, #6
   28a58:	movw	ip, #9
   28a5c:	str	ip, [sp]
   28a60:	movw	ip, #0
   28a64:	str	ip, [sp, #4]
   28a68:	bl	3ca44 <flatcc_json_printer_uint32_field@@Base>
   28a6c:	ldr	r0, [pc, #116]	; 28ae8 <main@@Base+0x1219c>
   28a70:	add	r0, pc, r0
   28a74:	ldr	r1, [fp, #-4]
   28a78:	ldr	r2, [fp, #-8]
   28a7c:	mov	r3, sp
   28a80:	mov	ip, #0
   28a84:	str	ip, [r3, #12]
   28a88:	str	ip, [r3, #8]
   28a8c:	mov	ip, #8
   28a90:	str	ip, [r3]
   28a94:	ldr	r3, [pc, #116]	; 28b10 <main@@Base+0x121c4>
   28a98:	add	r3, pc, r3
   28a9c:	mov	ip, #7
   28aa0:	str	r0, [sp, #16]
   28aa4:	mov	r0, r1
   28aa8:	mov	r1, r2
   28aac:	mov	r2, ip
   28ab0:	bl	3d05c <flatcc_json_printer_int64_field@@Base>
   28ab4:	ldr	r0, [pc, #40]	; 28ae4 <main@@Base+0x12198>
   28ab8:	add	r3, pc, r0
   28abc:	ldr	r0, [fp, #-4]
   28ac0:	ldr	r1, [fp, #-8]
   28ac4:	movw	r2, #8
   28ac8:	movw	ip, #9
   28acc:	str	ip, [sp]
   28ad0:	movw	ip, #0
   28ad4:	str	ip, [sp, #4]
   28ad8:	bl	3ca44 <flatcc_json_printer_uint32_field@@Base>
   28adc:	mov	sp, fp
   28ae0:	pop	{fp, pc}
   28ae4:	andeq	r2, r2, r4, asr #4
   28ae8:	andeq	r2, r2, r3, lsl #5
   28aec:	andeq	r2, r2, r1, lsr #5
   28af0:	andeq	r2, r2, r0, ror #5
   28af4:	strdeq	r2, [r2], -pc	; <UNPREDICTABLE>
   28af8:	andeq	r2, r2, lr, lsr r3
   28afc:	andeq	r2, r2, r9, asr r3
   28b00:	andeq	r2, r2, r7, ror r3
   28b04:	muleq	r2, sl, r3
   28b08:	andeq	r2, r2, r6, lsl r3
   28b0c:			; <UNDEFINED> instruction: 0x000222b8
   28b10:	andeq	r2, r2, fp, asr r2
   28b14:	push	{fp, lr}
   28b18:	mov	fp, sp
   28b1c:	sub	sp, sp, #32
   28b20:	ldr	r2, [pc, #112]	; 28b98 <main@@Base+0x1224c>
   28b24:	add	r2, pc, r2
   28b28:	str	r0, [fp, #-4]
   28b2c:	str	r1, [fp, #-8]
   28b30:	ldr	r0, [fp, #-4]
   28b34:	ldr	r1, [fp, #-8]
   28b38:	mov	r3, sp
   28b3c:	mov	ip, #0
   28b40:	str	ip, [r3, #12]
   28b44:	str	ip, [r3, #8]
   28b48:	mov	lr, #15
   28b4c:	str	lr, [r3]
   28b50:	ldr	r3, [pc, #68]	; 28b9c <main@@Base+0x12250>
   28b54:	add	r3, pc, r3
   28b58:	str	r2, [fp, #-12]
   28b5c:	mov	r2, ip
   28b60:	bl	3d05c <flatcc_json_printer_int64_field@@Base>
   28b64:	ldr	r0, [pc, #40]	; 28b94 <main@@Base+0x12248>
   28b68:	add	r3, pc, r0
   28b6c:	ldr	r0, [fp, #-4]
   28b70:	ldr	r1, [fp, #-8]
   28b74:	movw	r2, #1
   28b78:	movw	ip, #16
   28b7c:	str	ip, [sp]
   28b80:	movw	ip, #0
   28b84:	str	ip, [sp, #4]
   28b88:	bl	3ca44 <flatcc_json_printer_uint32_field@@Base>
   28b8c:	mov	sp, fp
   28b90:	pop	{fp, pc}
   28b94:	andeq	r2, r2, lr, lsr #3
   28b98:	andeq	r2, r2, r2, ror #3
   28b9c:			; <UNDEFINED> instruction: 0x000221b2
   28ba0:	push	{fp, lr}
   28ba4:	mov	fp, sp
   28ba8:	sub	sp, sp, #32
   28bac:	ldr	r2, [pc, #112]	; 28c24 <main@@Base+0x122d8>
   28bb0:	add	r2, pc, r2
   28bb4:	str	r0, [fp, #-4]
   28bb8:	str	r1, [fp, #-8]
   28bbc:	ldr	r0, [fp, #-4]
   28bc0:	ldr	r1, [fp, #-8]
   28bc4:	mov	r3, sp
   28bc8:	mov	ip, #0
   28bcc:	str	ip, [r3, #12]
   28bd0:	str	ip, [r3, #8]
   28bd4:	mov	lr, #15
   28bd8:	str	lr, [r3]
   28bdc:	ldr	r3, [pc, #68]	; 28c28 <main@@Base+0x122dc>
   28be0:	add	r3, pc, r3
   28be4:	str	r2, [fp, #-12]
   28be8:	mov	r2, ip
   28bec:	bl	3d05c <flatcc_json_printer_int64_field@@Base>
   28bf0:	ldr	r0, [pc, #40]	; 28c20 <main@@Base+0x122d4>
   28bf4:	add	r3, pc, r0
   28bf8:	ldr	r0, [fp, #-4]
   28bfc:	ldr	r1, [fp, #-8]
   28c00:	movw	r2, #1
   28c04:	movw	ip, #21
   28c08:	str	ip, [sp]
   28c0c:	movw	ip, #0
   28c10:	str	ip, [sp, #4]
   28c14:	bl	3ca44 <flatcc_json_printer_uint32_field@@Base>
   28c18:	mov	sp, fp
   28c1c:	pop	{fp, pc}
   28c20:	andeq	r2, r2, r3, lsr r1
   28c24:	andeq	r2, r2, r6, asr r1
   28c28:	andeq	r2, r2, r6, lsr #2
   28c2c:	push	{fp, lr}
   28c30:	mov	fp, sp
   28c34:	sub	sp, sp, #16
   28c38:	str	r0, [fp, #-4]
   28c3c:	strb	r1, [fp, #-5]
   28c40:	ldrb	r0, [fp, #-5]
   28c44:	mov	r1, r0
   28c48:	cmp	r0, #2
   28c4c:	str	r1, [sp, #4]
   28c50:	beq	28ca8 <main@@Base+0x1235c>
   28c54:	b	28c58 <main@@Base+0x1230c>
   28c58:	ldr	r0, [sp, #4]
   28c5c:	cmp	r0, #8
   28c60:	beq	28cc0 <main@@Base+0x12374>
   28c64:	b	28c68 <main@@Base+0x1231c>
   28c68:	ldr	r0, [sp, #4]
   28c6c:	cmp	r0, #9
   28c70:	beq	28cd8 <main@@Base+0x1238c>
   28c74:	b	28c78 <main@@Base+0x1232c>
   28c78:	ldr	r0, [sp, #4]
   28c7c:	cmp	r0, #10
   28c80:	beq	28cf0 <main@@Base+0x123a4>
   28c84:	b	28c88 <main@@Base+0x1233c>
   28c88:	ldr	r0, [sp, #4]
   28c8c:	cmp	r0, #11
   28c90:	beq	28d08 <main@@Base+0x123bc>
   28c94:	b	28c98 <main@@Base+0x1234c>
   28c98:	ldr	r0, [sp, #4]
   28c9c:	cmp	r0, #255	; 0xff
   28ca0:	beq	28d20 <main@@Base+0x123d4>
   28ca4:	b	28d38 <main@@Base+0x123ec>
   28ca8:	ldr	r0, [pc, #184]	; 28d68 <main@@Base+0x1241c>
   28cac:	add	r1, pc, r0
   28cb0:	ldr	r0, [fp, #-4]
   28cb4:	movw	r2, #5
   28cb8:	bl	3c02c <flatcc_json_printer_enum@@Base>
   28cbc:	b	28d4c <main@@Base+0x12400>
   28cc0:	ldr	r0, [pc, #156]	; 28d64 <main@@Base+0x12418>
   28cc4:	add	r1, pc, r0
   28cc8:	ldr	r0, [fp, #-4]
   28ccc:	movw	r2, #8
   28cd0:	bl	3c02c <flatcc_json_printer_enum@@Base>
   28cd4:	b	28d4c <main@@Base+0x12400>
   28cd8:	ldr	r0, [pc, #128]	; 28d60 <main@@Base+0x12414>
   28cdc:	add	r1, pc, r0
   28ce0:	ldr	r0, [fp, #-4]
   28ce4:	movw	r2, #5
   28ce8:	bl	3c02c <flatcc_json_printer_enum@@Base>
   28cec:	b	28d4c <main@@Base+0x12400>
   28cf0:	ldr	r0, [pc, #100]	; 28d5c <main@@Base+0x12410>
   28cf4:	add	r1, pc, r0
   28cf8:	ldr	r0, [fp, #-4]
   28cfc:	movw	r2, #7
   28d00:	bl	3c02c <flatcc_json_printer_enum@@Base>
   28d04:	b	28d4c <main@@Base+0x12400>
   28d08:	ldr	r0, [pc, #72]	; 28d58 <main@@Base+0x1240c>
   28d0c:	add	r1, pc, r0
   28d10:	ldr	r0, [fp, #-4]
   28d14:	movw	r2, #5
   28d18:	bl	3c02c <flatcc_json_printer_enum@@Base>
   28d1c:	b	28d4c <main@@Base+0x12400>
   28d20:	ldr	r0, [pc, #44]	; 28d54 <main@@Base+0x12408>
   28d24:	add	r1, pc, r0
   28d28:	ldr	r0, [fp, #-4]
   28d2c:	movw	r2, #6
   28d30:	bl	3c02c <flatcc_json_printer_enum@@Base>
   28d34:	b	28d4c <main@@Base+0x12400>
   28d38:	ldr	r0, [pc, #44]	; 28d6c <main@@Base+0x12420>
   28d3c:	add	r1, pc, r0
   28d40:	ldr	r0, [fp, #-4]
   28d44:	movw	r2, #4
   28d48:	bl	3c02c <flatcc_json_printer_enum@@Base>
   28d4c:	mov	sp, fp
   28d50:	pop	{fp, pc}
   28d54:	andeq	r2, r2, r1, ror r0
   28d58:	andeq	r2, r2, r3, lsl #1
   28d5c:	muleq	r2, r3, r0
   28d60:	andeq	r2, r2, r5, lsr #1
   28d64:	strheq	r2, [r2], -r4
   28d68:	andeq	r2, r2, r6, asr #1
   28d6c:			; <UNDEFINED> instruction: 0x000237bb
   28d70:	push	{fp, lr}
   28d74:	mov	fp, sp
   28d78:	sub	sp, sp, #16
   28d7c:	str	r0, [fp, #-4]
   28d80:	str	r1, [sp, #8]
   28d84:	ldr	r0, [sp, #8]
   28d88:	ldrb	r0, [r0, #8]
   28d8c:	mov	r1, r0
   28d90:	cmp	r0, #2
   28d94:	str	r1, [sp, #4]
   28d98:	beq	28df0 <main@@Base+0x124a4>
   28d9c:	b	28da0 <main@@Base+0x12454>
   28da0:	ldr	r0, [sp, #4]
   28da4:	cmp	r0, #8
   28da8:	beq	28e08 <main@@Base+0x124bc>
   28dac:	b	28db0 <main@@Base+0x12464>
   28db0:	ldr	r0, [sp, #4]
   28db4:	cmp	r0, #9
   28db8:	beq	28e20 <main@@Base+0x124d4>
   28dbc:	b	28dc0 <main@@Base+0x12474>
   28dc0:	ldr	r0, [sp, #4]
   28dc4:	cmp	r0, #10
   28dc8:	beq	28e38 <main@@Base+0x124ec>
   28dcc:	b	28dd0 <main@@Base+0x12484>
   28dd0:	ldr	r0, [sp, #4]
   28dd4:	cmp	r0, #11
   28dd8:	beq	28e50 <main@@Base+0x12504>
   28ddc:	b	28de0 <main@@Base+0x12494>
   28de0:	ldr	r0, [sp, #4]
   28de4:	cmp	r0, #255	; 0xff
   28de8:	beq	28e60 <main@@Base+0x12514>
   28dec:	b	28e70 <main@@Base+0x12524>
   28df0:	ldr	r0, [pc, #144]	; 28e88 <main@@Base+0x1253c>
   28df4:	add	r2, pc, r0
   28df8:	ldr	r0, [fp, #-4]
   28dfc:	ldr	r1, [sp, #8]
   28e00:	bl	43b6c <flatcc_json_printer_union_table@@Base>
   28e04:	b	28e74 <main@@Base+0x12528>
   28e08:	ldr	r0, [pc, #116]	; 28e84 <main@@Base+0x12538>
   28e0c:	add	r2, pc, r0
   28e10:	ldr	r0, [fp, #-4]
   28e14:	ldr	r1, [sp, #8]
   28e18:	bl	43bc4 <flatcc_json_printer_union_struct@@Base>
   28e1c:	b	28e74 <main@@Base+0x12528>
   28e20:	ldr	r0, [pc, #88]	; 28e80 <main@@Base+0x12534>
   28e24:	add	r2, pc, r0
   28e28:	ldr	r0, [fp, #-4]
   28e2c:	ldr	r1, [sp, #8]
   28e30:	bl	43bc4 <flatcc_json_printer_union_struct@@Base>
   28e34:	b	28e74 <main@@Base+0x12528>
   28e38:	ldr	r0, [pc, #60]	; 28e7c <main@@Base+0x12530>
   28e3c:	add	r2, pc, r0
   28e40:	ldr	r0, [fp, #-4]
   28e44:	ldr	r1, [sp, #8]
   28e48:	bl	43bc4 <flatcc_json_printer_union_struct@@Base>
   28e4c:	b	28e74 <main@@Base+0x12528>
   28e50:	ldr	r0, [fp, #-4]
   28e54:	ldr	r1, [sp, #8]
   28e58:	bl	43ca0 <flatcc_json_printer_union_string@@Base>
   28e5c:	b	28e74 <main@@Base+0x12528>
   28e60:	ldr	r0, [fp, #-4]
   28e64:	ldr	r1, [sp, #8]
   28e68:	bl	43ca0 <flatcc_json_printer_union_string@@Base>
   28e6c:	b	28e74 <main@@Base+0x12528>
   28e70:	b	28e74 <main@@Base+0x12528>
   28e74:	mov	sp, fp
   28e78:	pop	{fp, pc}
   28e7c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28e80:	andeq	r0, r0, r8, lsl #2
   28e84:	andeq	r0, r0, r4, asr #1
   28e88:	muleq	r0, r0, r0
   28e8c:	push	{fp, lr}
   28e90:	mov	fp, sp
   28e94:	sub	sp, sp, #24
   28e98:	ldr	r2, [pc, #52]	; 28ed4 <main@@Base+0x12588>
   28e9c:	add	r3, pc, r2
   28ea0:	str	r0, [fp, #-4]
   28ea4:	str	r1, [fp, #-8]
   28ea8:	ldr	r0, [fp, #-4]
   28eac:	ldr	r1, [fp, #-8]
   28eb0:	movw	r2, #0
   28eb4:	str	r2, [sp, #12]
   28eb8:	movw	ip, #19
   28ebc:	str	ip, [sp]
   28ec0:	ldr	ip, [sp, #12]
   28ec4:	str	ip, [sp, #4]
   28ec8:	bl	3cf34 <flatcc_json_printer_int32_field@@Base>
   28ecc:	mov	sp, fp
   28ed0:	pop	{fp, pc}
   28ed4:	andeq	r1, r2, r0, lsl #30
   28ed8:	push	{r4, sl, fp, lr}
   28edc:	add	fp, sp, #8
   28ee0:	sub	sp, sp, #24
   28ee4:	ldr	r2, [pc, #68]	; 28f30 <main@@Base+0x125e4>
   28ee8:	add	r2, pc, r2
   28eec:	str	r0, [fp, #-12]
   28ef0:	str	r1, [sp, #16]
   28ef4:	ldr	r0, [fp, #-12]
   28ef8:	ldr	r1, [sp, #16]
   28efc:	movw	r3, #0
   28f00:	str	r1, [sp, #12]
   28f04:	mov	r1, r3
   28f08:	ldr	ip, [sp, #12]
   28f0c:	str	r2, [sp, #8]
   28f10:	mov	r2, ip
   28f14:	ldr	lr, [sp, #8]
   28f18:	str	lr, [sp]
   28f1c:	movw	r4, #11
   28f20:	str	r4, [sp, #4]
   28f24:	bl	3e230 <flatcc_json_printer_uint16_struct_field@@Base>
   28f28:	sub	sp, fp, #8
   28f2c:	pop	{r4, sl, fp, pc}
   28f30:	andeq	r1, r2, r8, asr #29
   28f34:	push	{r4, sl, fp, lr}
   28f38:	add	fp, sp, #8
   28f3c:	sub	sp, sp, #24
   28f40:	ldr	r2, [pc, #68]	; 28f8c <main@@Base+0x12640>
   28f44:	add	r2, pc, r2
   28f48:	str	r0, [fp, #-12]
   28f4c:	str	r1, [sp, #16]
   28f50:	ldr	r0, [fp, #-12]
   28f54:	ldr	r1, [sp, #16]
   28f58:	movw	r3, #0
   28f5c:	str	r1, [sp, #12]
   28f60:	mov	r1, r3
   28f64:	ldr	ip, [sp, #12]
   28f68:	str	r2, [sp, #8]
   28f6c:	mov	r2, ip
   28f70:	ldr	lr, [sp, #8]
   28f74:	str	lr, [sp]
   28f78:	movw	r4, #10
   28f7c:	str	r4, [sp, #4]
   28f80:	bl	3e550 <flatcc_json_printer_int32_struct_field@@Base>
   28f84:	sub	sp, fp, #8
   28f88:	pop	{r4, sl, fp, pc}
   28f8c:	andeq	r1, r2, r8, ror lr
   28f90:	push	{fp, lr}
   28f94:	mov	fp, sp
   28f98:	sub	sp, sp, #16
   28f9c:	str	r0, [sp, #8]
   28fa0:	ldr	r0, [sp, #8]
   28fa4:	ldrb	r0, [r0, #12]
   28fa8:	sub	r0, r0, #1
   28fac:	cmp	r0, #3
   28fb0:	str	r0, [sp, #4]
   28fb4:	bhi	29038 <main@@Base+0x126ec>
   28fb8:	add	r0, pc, #8
   28fbc:	ldr	r1, [sp, #4]
   28fc0:	ldr	r2, [r0, r1, lsl #2]
   28fc4:	add	pc, r0, r2
   28fc8:	andeq	r0, r0, r0, lsl r0
   28fcc:	andeq	r0, r0, r8, lsr #32
   28fd0:	andeq	r0, r0, r0, asr #32
   28fd4:	andeq	r0, r0, r8, asr r0
   28fd8:	ldr	r0, [pc, #120]	; 29058 <main@@Base+0x1270c>
   28fdc:	add	r1, pc, r0
   28fe0:	ldr	r0, [sp, #8]
   28fe4:	bl	31a10 <flatcc_verify_union_table@@Base>
   28fe8:	str	r0, [fp, #-4]
   28fec:	b	29040 <main@@Base+0x126f4>
   28ff0:	ldr	r0, [pc, #92]	; 29054 <main@@Base+0x12708>
   28ff4:	add	r1, pc, r0
   28ff8:	ldr	r0, [sp, #8]
   28ffc:	bl	31a10 <flatcc_verify_union_table@@Base>
   29000:	str	r0, [fp, #-4]
   29004:	b	29040 <main@@Base+0x126f4>
   29008:	ldr	r0, [pc, #64]	; 29050 <main@@Base+0x12704>
   2900c:	add	r1, pc, r0
   29010:	ldr	r0, [sp, #8]
   29014:	bl	31a10 <flatcc_verify_union_table@@Base>
   29018:	str	r0, [fp, #-4]
   2901c:	b	29040 <main@@Base+0x126f4>
   29020:	ldr	r0, [pc, #36]	; 2904c <main@@Base+0x12700>
   29024:	add	r1, pc, r0
   29028:	ldr	r0, [sp, #8]
   2902c:	bl	31a10 <flatcc_verify_union_table@@Base>
   29030:	str	r0, [fp, #-4]
   29034:	b	29040 <main@@Base+0x126f4>
   29038:	movw	r0, #0
   2903c:	str	r0, [fp, #-4]
   29040:	ldr	r0, [fp, #-4]
   29044:	mov	sp, fp
   29048:	pop	{fp, pc}
   2904c:	andeq	r0, r0, r4, lsr #6
   29050:	andeq	r0, r0, r8, lsr #6
   29054:	andeq	r0, r0, r4, asr #4
   29058:			; <UNDEFINED> instruction: 0xffff2fec
   2905c:	push	{fp, lr}
   29060:	mov	fp, sp
   29064:	sub	sp, sp, #16
   29068:	str	r0, [sp, #8]
   2906c:	ldr	r0, [sp, #8]
   29070:	movw	r1, #0
   29074:	uxth	r1, r1
   29078:	movw	r2, #0
   2907c:	bl	30adc <flatcc_verify_string_field@@Base>
   29080:	str	r0, [sp, #4]
   29084:	cmp	r0, #0
   29088:	beq	29098 <main@@Base+0x1274c>
   2908c:	ldr	r0, [sp, #4]
   29090:	str	r0, [fp, #-4]
   29094:	b	29110 <main@@Base+0x127c4>
   29098:	ldr	r0, [sp, #8]
   2909c:	movw	r1, #1
   290a0:	uxth	r1, r1
   290a4:	movw	r2, #8
   290a8:	movw	r3, #8
   290ac:	uxth	r3, r3
   290b0:	bl	308d0 <flatcc_verify_field@@Base>
   290b4:	str	r0, [sp, #4]
   290b8:	cmp	r0, #0
   290bc:	beq	290cc <main@@Base+0x12780>
   290c0:	ldr	r0, [sp, #4]
   290c4:	str	r0, [fp, #-4]
   290c8:	b	29110 <main@@Base+0x127c4>
   290cc:	ldr	r0, [sp, #8]
   290d0:	movw	r1, #2
   290d4:	uxth	r2, r1
   290d8:	str	r1, [sp]
   290dc:	mov	r1, r2
   290e0:	movw	r2, #2
   290e4:	ldr	r3, [sp]
   290e8:	uxth	r3, r3
   290ec:	bl	308d0 <flatcc_verify_field@@Base>
   290f0:	str	r0, [sp, #4]
   290f4:	cmp	r0, #0
   290f8:	beq	29108 <main@@Base+0x127bc>
   290fc:	ldr	r0, [sp, #4]
   29100:	str	r0, [fp, #-4]
   29104:	b	29110 <main@@Base+0x127c4>
   29108:	movw	r0, #0
   2910c:	str	r0, [fp, #-4]
   29110:	ldr	r0, [fp, #-4]
   29114:	mov	sp, fp
   29118:	pop	{fp, pc}
   2911c:	sub	sp, sp, #4
   29120:	str	r0, [sp]
   29124:	movw	r0, #0
   29128:	add	sp, sp, #4
   2912c:	bx	lr
   29130:	push	{fp, lr}
   29134:	mov	fp, sp
   29138:	sub	sp, sp, #32
   2913c:	str	r0, [fp, #-8]
   29140:	ldr	r0, [fp, #-8]
   29144:	movw	r1, #0
   29148:	uxth	r1, r1
   2914c:	movw	r2, #0
   29150:	movw	r3, #1
   29154:	movw	ip, #1
   29158:	uxth	ip, ip
   2915c:	str	ip, [sp]
   29160:	mvn	ip, #0
   29164:	str	ip, [sp, #4]
   29168:	bl	30e38 <flatcc_verify_vector_field@@Base>
   2916c:	str	r0, [fp, #-12]
   29170:	cmp	r0, #0
   29174:	beq	29184 <main@@Base+0x12838>
   29178:	ldr	r0, [fp, #-12]
   2917c:	str	r0, [fp, #-4]
   29180:	b	29230 <main@@Base+0x128e4>
   29184:	ldr	r0, [fp, #-8]
   29188:	movw	r1, #1
   2918c:	uxth	r2, r1
   29190:	str	r1, [sp, #16]
   29194:	mov	r1, r2
   29198:	movw	r2, #0
   2919c:	movw	r3, #1
   291a0:	ldr	ip, [sp, #16]
   291a4:	uxth	lr, ip
   291a8:	str	lr, [sp]
   291ac:	mvn	lr, #0
   291b0:	str	lr, [sp, #4]
   291b4:	bl	30e38 <flatcc_verify_vector_field@@Base>
   291b8:	str	r0, [fp, #-12]
   291bc:	cmp	r0, #0
   291c0:	beq	291d0 <main@@Base+0x12884>
   291c4:	ldr	r0, [fp, #-12]
   291c8:	str	r0, [fp, #-4]
   291cc:	b	29230 <main@@Base+0x128e4>
   291d0:	ldr	r0, [pc, #100]	; 2923c <main@@Base+0x128f0>
   291d4:	add	r0, pc, r0
   291d8:	ldr	r1, [fp, #-8]
   291dc:	str	r0, [sp, #12]
   291e0:	mov	r0, r1
   291e4:	movw	r1, #2
   291e8:	uxth	r1, r1
   291ec:	movw	r2, #0
   291f0:	str	r2, [sp, #8]
   291f4:	ldr	r3, [sp, #8]
   291f8:	movw	ip, #1
   291fc:	uxth	ip, ip
   29200:	str	ip, [sp]
   29204:	ldr	ip, [sp, #12]
   29208:	str	ip, [sp, #4]
   2920c:	bl	32390 <flatcc_verify_table_as_nested_root@@Base>
   29210:	str	r0, [fp, #-12]
   29214:	cmp	r0, #0
   29218:	beq	29228 <main@@Base+0x128dc>
   2921c:	ldr	r0, [fp, #-12]
   29220:	str	r0, [fp, #-4]
   29224:	b	29230 <main@@Base+0x128e4>
   29228:	movw	r0, #0
   2922c:	str	r0, [fp, #-4]
   29230:	ldr	r0, [fp, #-4]
   29234:	mov	sp, fp
   29238:	pop	{fp, pc}
   2923c:			; <UNDEFINED> instruction: 0xffff2df4
   29240:	push	{fp, lr}
   29244:	mov	fp, sp
   29248:	sub	sp, sp, #16
   2924c:	str	r0, [sp, #8]
   29250:	ldr	r0, [sp, #8]
   29254:	movw	r1, #0
   29258:	uxth	r1, r1
   2925c:	movw	r2, #1
   29260:	movw	r3, #1
   29264:	uxth	r3, r3
   29268:	bl	308d0 <flatcc_verify_field@@Base>
   2926c:	str	r0, [sp, #4]
   29270:	cmp	r0, #0
   29274:	beq	29284 <main@@Base+0x12938>
   29278:	ldr	r0, [sp, #4]
   2927c:	str	r0, [fp, #-4]
   29280:	b	29330 <main@@Base+0x129e4>
   29284:	ldr	r0, [sp, #8]
   29288:	movw	r1, #1
   2928c:	uxth	r2, r1
   29290:	str	r1, [sp]
   29294:	mov	r1, r2
   29298:	movw	r2, #1
   2929c:	ldr	r3, [sp]
   292a0:	uxth	r3, r3
   292a4:	bl	308d0 <flatcc_verify_field@@Base>
   292a8:	str	r0, [sp, #4]
   292ac:	cmp	r0, #0
   292b0:	beq	292c0 <main@@Base+0x12974>
   292b4:	ldr	r0, [sp, #4]
   292b8:	str	r0, [fp, #-4]
   292bc:	b	29330 <main@@Base+0x129e4>
   292c0:	ldr	r0, [sp, #8]
   292c4:	movw	r1, #2
   292c8:	uxth	r1, r1
   292cc:	movw	r2, #1
   292d0:	movw	r3, #1
   292d4:	uxth	r3, r3
   292d8:	bl	308d0 <flatcc_verify_field@@Base>
   292dc:	str	r0, [sp, #4]
   292e0:	cmp	r0, #0
   292e4:	beq	292f4 <main@@Base+0x129a8>
   292e8:	ldr	r0, [sp, #4]
   292ec:	str	r0, [fp, #-4]
   292f0:	b	29330 <main@@Base+0x129e4>
   292f4:	ldr	r0, [sp, #8]
   292f8:	movw	r1, #3
   292fc:	uxth	r1, r1
   29300:	movw	r2, #1
   29304:	movw	r3, #1
   29308:	uxth	r3, r3
   2930c:	bl	308d0 <flatcc_verify_field@@Base>
   29310:	str	r0, [sp, #4]
   29314:	cmp	r0, #0
   29318:	beq	29328 <main@@Base+0x129dc>
   2931c:	ldr	r0, [sp, #4]
   29320:	str	r0, [fp, #-4]
   29324:	b	29330 <main@@Base+0x129e4>
   29328:	movw	r0, #0
   2932c:	str	r0, [fp, #-4]
   29330:	ldr	r0, [fp, #-4]
   29334:	mov	sp, fp
   29338:	pop	{fp, pc}
   2933c:	sub	sp, sp, #4
   29340:	str	r0, [sp]
   29344:	movw	r0, #0
   29348:	add	sp, sp, #4
   2934c:	bx	lr
   29350:	push	{fp, lr}
   29354:	mov	fp, sp
   29358:	sub	sp, sp, #16
   2935c:	ldr	r1, [pc, #172]	; 29410 <main@@Base+0x12ac4>
   29360:	add	r3, pc, r1
   29364:	str	r0, [sp, #8]
   29368:	ldr	r0, [sp, #8]
   2936c:	movw	r1, #0
   29370:	uxth	r1, r1
   29374:	movw	r2, #0
   29378:	bl	312ec <flatcc_verify_table_field@@Base>
   2937c:	str	r0, [sp, #4]
   29380:	cmp	r0, #0
   29384:	beq	29394 <main@@Base+0x12a48>
   29388:	ldr	r0, [sp, #4]
   2938c:	str	r0, [fp, #-4]
   29390:	b	29404 <main@@Base+0x12ab8>
   29394:	ldr	r0, [pc, #120]	; 29414 <main@@Base+0x12ac8>
   29398:	add	r3, pc, r0
   2939c:	ldr	r0, [sp, #8]
   293a0:	movw	r1, #1
   293a4:	uxth	r1, r1
   293a8:	movw	r2, #0
   293ac:	bl	312ec <flatcc_verify_table_field@@Base>
   293b0:	str	r0, [sp, #4]
   293b4:	cmp	r0, #0
   293b8:	beq	293c8 <main@@Base+0x12a7c>
   293bc:	ldr	r0, [sp, #4]
   293c0:	str	r0, [fp, #-4]
   293c4:	b	29404 <main@@Base+0x12ab8>
   293c8:	ldr	r0, [pc, #72]	; 29418 <main@@Base+0x12acc>
   293cc:	add	r3, pc, r0
   293d0:	ldr	r0, [sp, #8]
   293d4:	movw	r1, #3
   293d8:	uxth	r1, r1
   293dc:	movw	r2, #0
   293e0:	bl	32830 <flatcc_verify_union_vector_field@@Base>
   293e4:	str	r0, [sp, #4]
   293e8:	cmp	r0, #0
   293ec:	beq	293fc <main@@Base+0x12ab0>
   293f0:	ldr	r0, [sp, #4]
   293f4:	str	r0, [fp, #-4]
   293f8:	b	29404 <main@@Base+0x12ab8>
   293fc:	movw	r0, #0
   29400:	str	r0, [fp, #-4]
   29404:	ldr	r0, [fp, #-4]
   29408:	mov	sp, fp
   2940c:	pop	{fp, pc}
   29410:	strheq	r0, [r0], -r4
   29414:	andeq	r0, r0, r8, asr #2
   29418:			; <UNDEFINED> instruction: 0xfffffbbc
   2941c:	push	{fp, lr}
   29420:	mov	fp, sp
   29424:	sub	sp, sp, #16
   29428:	ldr	r1, [pc, #172]	; 294dc <main@@Base+0x12b90>
   2942c:	add	r3, pc, r1
   29430:	str	r0, [sp, #8]
   29434:	ldr	r0, [sp, #8]
   29438:	movw	r1, #0
   2943c:	uxth	r1, r1
   29440:	movw	r2, #0
   29444:	bl	312ec <flatcc_verify_table_field@@Base>
   29448:	str	r0, [sp, #4]
   2944c:	cmp	r0, #0
   29450:	beq	29460 <main@@Base+0x12b14>
   29454:	ldr	r0, [sp, #4]
   29458:	str	r0, [fp, #-4]
   2945c:	b	294d0 <main@@Base+0x12b84>
   29460:	ldr	r0, [pc, #120]	; 294e0 <main@@Base+0x12b94>
   29464:	add	r3, pc, r0
   29468:	ldr	r0, [sp, #8]
   2946c:	movw	r1, #1
   29470:	uxth	r1, r1
   29474:	movw	r2, #0
   29478:	bl	312ec <flatcc_verify_table_field@@Base>
   2947c:	str	r0, [sp, #4]
   29480:	cmp	r0, #0
   29484:	beq	29494 <main@@Base+0x12b48>
   29488:	ldr	r0, [sp, #4]
   2948c:	str	r0, [fp, #-4]
   29490:	b	294d0 <main@@Base+0x12b84>
   29494:	ldr	r0, [pc, #72]	; 294e4 <main@@Base+0x12b98>
   29498:	add	r3, pc, r0
   2949c:	ldr	r0, [sp, #8]
   294a0:	movw	r1, #2
   294a4:	uxth	r1, r1
   294a8:	movw	r2, #0
   294ac:	bl	312ec <flatcc_verify_table_field@@Base>
   294b0:	str	r0, [sp, #4]
   294b4:	cmp	r0, #0
   294b8:	beq	294c8 <main@@Base+0x12b7c>
   294bc:	ldr	r0, [sp, #4]
   294c0:	str	r0, [fp, #-4]
   294c4:	b	294d0 <main@@Base+0x12b84>
   294c8:	movw	r0, #0
   294cc:	str	r0, [fp, #-4]
   294d0:	ldr	r0, [fp, #-4]
   294d4:	mov	sp, fp
   294d8:	pop	{fp, pc}
   294dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   294e0:	muleq	r0, r8, r3
   294e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   294e8:	push	{fp, lr}
   294ec:	mov	fp, sp
   294f0:	sub	sp, sp, #16
   294f4:	ldr	r1, [pc, #276]	; 29610 <main@@Base+0x12cc4>
   294f8:	add	r3, pc, r1
   294fc:	str	r0, [sp, #8]
   29500:	ldr	r0, [sp, #8]
   29504:	movw	r1, #1
   29508:	uxth	r1, r1
   2950c:	movw	r2, #0
   29510:	bl	32538 <flatcc_verify_union_field@@Base>
   29514:	str	r0, [sp, #4]
   29518:	cmp	r0, #0
   2951c:	beq	2952c <main@@Base+0x12be0>
   29520:	ldr	r0, [sp, #4]
   29524:	str	r0, [fp, #-4]
   29528:	b	29604 <main@@Base+0x12cb8>
   2952c:	ldr	r0, [pc, #224]	; 29614 <main@@Base+0x12cc8>
   29530:	add	r3, pc, r0
   29534:	ldr	r0, [sp, #8]
   29538:	movw	r1, #3
   2953c:	uxth	r1, r1
   29540:	movw	r2, #0
   29544:	bl	32538 <flatcc_verify_union_field@@Base>
   29548:	str	r0, [sp, #4]
   2954c:	cmp	r0, #0
   29550:	beq	29560 <main@@Base+0x12c14>
   29554:	ldr	r0, [sp, #4]
   29558:	str	r0, [fp, #-4]
   2955c:	b	29604 <main@@Base+0x12cb8>
   29560:	ldr	r0, [pc, #176]	; 29618 <main@@Base+0x12ccc>
   29564:	add	r3, pc, r0
   29568:	ldr	r0, [sp, #8]
   2956c:	movw	r1, #5
   29570:	uxth	r1, r1
   29574:	movw	r2, #0
   29578:	bl	32538 <flatcc_verify_union_field@@Base>
   2957c:	str	r0, [sp, #4]
   29580:	cmp	r0, #0
   29584:	beq	29594 <main@@Base+0x12c48>
   29588:	ldr	r0, [sp, #4]
   2958c:	str	r0, [fp, #-4]
   29590:	b	29604 <main@@Base+0x12cb8>
   29594:	ldr	r0, [pc, #128]	; 2961c <main@@Base+0x12cd0>
   29598:	add	r3, pc, r0
   2959c:	ldr	r0, [sp, #8]
   295a0:	movw	r1, #7
   295a4:	uxth	r1, r1
   295a8:	movw	r2, #0
   295ac:	bl	32538 <flatcc_verify_union_field@@Base>
   295b0:	str	r0, [sp, #4]
   295b4:	cmp	r0, #0
   295b8:	beq	295c8 <main@@Base+0x12c7c>
   295bc:	ldr	r0, [sp, #4]
   295c0:	str	r0, [fp, #-4]
   295c4:	b	29604 <main@@Base+0x12cb8>
   295c8:	ldr	r0, [pc, #80]	; 29620 <main@@Base+0x12cd4>
   295cc:	add	r3, pc, r0
   295d0:	ldr	r0, [sp, #8]
   295d4:	movw	r1, #9
   295d8:	uxth	r1, r1
   295dc:	movw	r2, #0
   295e0:	bl	32830 <flatcc_verify_union_vector_field@@Base>
   295e4:	str	r0, [sp, #4]
   295e8:	cmp	r0, #0
   295ec:	beq	295fc <main@@Base+0x12cb0>
   295f0:	ldr	r0, [sp, #4]
   295f4:	str	r0, [fp, #-4]
   295f8:	b	29604 <main@@Base+0x12cb8>
   295fc:	movw	r0, #0
   29600:	str	r0, [fp, #-4]
   29604:	ldr	r0, [fp, #-4]
   29608:	mov	sp, fp
   2960c:	pop	{fp, pc}
   29610:	andeq	r0, r0, ip, lsl r4
   29614:	andeq	r0, r0, r4, ror #7
   29618:			; <UNDEFINED> instruction: 0x000003b0
   2961c:	andeq	r0, r0, ip, ror r3
   29620:	andeq	r0, r0, r8, asr #6
   29624:	push	{fp, lr}
   29628:	mov	fp, sp
   2962c:	sub	sp, sp, #16
   29630:	str	r0, [sp, #8]
   29634:	ldr	r0, [sp, #8]
   29638:	movw	r1, #0
   2963c:	uxth	r1, r1
   29640:	movw	r2, #0
   29644:	bl	30adc <flatcc_verify_string_field@@Base>
   29648:	str	r0, [sp, #4]
   2964c:	cmp	r0, #0
   29650:	beq	29660 <main@@Base+0x12d14>
   29654:	ldr	r0, [sp, #4]
   29658:	str	r0, [fp, #-4]
   2965c:	b	297f8 <main@@Base+0x12eac>
   29660:	ldr	r0, [sp, #8]
   29664:	movw	r1, #1
   29668:	uxth	r1, r1
   2966c:	movw	r2, #4
   29670:	movw	r3, #4
   29674:	uxth	r3, r3
   29678:	bl	308d0 <flatcc_verify_field@@Base>
   2967c:	str	r0, [sp, #4]
   29680:	cmp	r0, #0
   29684:	beq	29694 <main@@Base+0x12d48>
   29688:	ldr	r0, [sp, #4]
   2968c:	str	r0, [fp, #-4]
   29690:	b	297f8 <main@@Base+0x12eac>
   29694:	ldr	r0, [sp, #8]
   29698:	movw	r1, #2
   2969c:	uxth	r1, r1
   296a0:	movw	r2, #0
   296a4:	bl	30adc <flatcc_verify_string_field@@Base>
   296a8:	str	r0, [sp, #4]
   296ac:	cmp	r0, #0
   296b0:	beq	296c0 <main@@Base+0x12d74>
   296b4:	ldr	r0, [sp, #4]
   296b8:	str	r0, [fp, #-4]
   296bc:	b	297f8 <main@@Base+0x12eac>
   296c0:	ldr	r0, [sp, #8]
   296c4:	movw	r1, #3
   296c8:	uxth	r1, r1
   296cc:	movw	r2, #8
   296d0:	movw	r3, #8
   296d4:	uxth	r3, r3
   296d8:	bl	308d0 <flatcc_verify_field@@Base>
   296dc:	str	r0, [sp, #4]
   296e0:	cmp	r0, #0
   296e4:	beq	296f4 <main@@Base+0x12da8>
   296e8:	ldr	r0, [sp, #4]
   296ec:	str	r0, [fp, #-4]
   296f0:	b	297f8 <main@@Base+0x12eac>
   296f4:	ldr	r0, [sp, #8]
   296f8:	movw	r1, #4
   296fc:	uxth	r1, r1
   29700:	movw	r2, #0
   29704:	bl	30adc <flatcc_verify_string_field@@Base>
   29708:	str	r0, [sp, #4]
   2970c:	cmp	r0, #0
   29710:	beq	29720 <main@@Base+0x12dd4>
   29714:	ldr	r0, [sp, #4]
   29718:	str	r0, [fp, #-4]
   2971c:	b	297f8 <main@@Base+0x12eac>
   29720:	ldr	r0, [sp, #8]
   29724:	movw	r1, #5
   29728:	uxth	r1, r1
   2972c:	movw	r2, #8
   29730:	movw	r3, #8
   29734:	uxth	r3, r3
   29738:	bl	308d0 <flatcc_verify_field@@Base>
   2973c:	str	r0, [sp, #4]
   29740:	cmp	r0, #0
   29744:	beq	29754 <main@@Base+0x12e08>
   29748:	ldr	r0, [sp, #4]
   2974c:	str	r0, [fp, #-4]
   29750:	b	297f8 <main@@Base+0x12eac>
   29754:	ldr	r0, [sp, #8]
   29758:	movw	r1, #6
   2975c:	uxth	r1, r1
   29760:	movw	r2, #4
   29764:	movw	r3, #4
   29768:	uxth	r3, r3
   2976c:	bl	308d0 <flatcc_verify_field@@Base>
   29770:	str	r0, [sp, #4]
   29774:	cmp	r0, #0
   29778:	beq	29788 <main@@Base+0x12e3c>
   2977c:	ldr	r0, [sp, #4]
   29780:	str	r0, [fp, #-4]
   29784:	b	297f8 <main@@Base+0x12eac>
   29788:	ldr	r0, [sp, #8]
   2978c:	movw	r1, #7
   29790:	uxth	r1, r1
   29794:	movw	r2, #8
   29798:	movw	r3, #8
   2979c:	uxth	r3, r3
   297a0:	bl	308d0 <flatcc_verify_field@@Base>
   297a4:	str	r0, [sp, #4]
   297a8:	cmp	r0, #0
   297ac:	beq	297bc <main@@Base+0x12e70>
   297b0:	ldr	r0, [sp, #4]
   297b4:	str	r0, [fp, #-4]
   297b8:	b	297f8 <main@@Base+0x12eac>
   297bc:	ldr	r0, [sp, #8]
   297c0:	movw	r1, #8
   297c4:	uxth	r1, r1
   297c8:	movw	r2, #4
   297cc:	movw	r3, #4
   297d0:	uxth	r3, r3
   297d4:	bl	308d0 <flatcc_verify_field@@Base>
   297d8:	str	r0, [sp, #4]
   297dc:	cmp	r0, #0
   297e0:	beq	297f0 <main@@Base+0x12ea4>
   297e4:	ldr	r0, [sp, #4]
   297e8:	str	r0, [fp, #-4]
   297ec:	b	297f8 <main@@Base+0x12eac>
   297f0:	movw	r0, #0
   297f4:	str	r0, [fp, #-4]
   297f8:	ldr	r0, [fp, #-4]
   297fc:	mov	sp, fp
   29800:	pop	{fp, pc}
   29804:	push	{fp, lr}
   29808:	mov	fp, sp
   2980c:	sub	sp, sp, #16
   29810:	str	r0, [sp, #8]
   29814:	ldr	r0, [sp, #8]
   29818:	movw	r1, #0
   2981c:	uxth	r1, r1
   29820:	movw	r2, #8
   29824:	movw	r3, #8
   29828:	uxth	r3, r3
   2982c:	bl	308d0 <flatcc_verify_field@@Base>
   29830:	str	r0, [sp, #4]
   29834:	cmp	r0, #0
   29838:	beq	29848 <main@@Base+0x12efc>
   2983c:	ldr	r0, [sp, #4]
   29840:	str	r0, [fp, #-4]
   29844:	b	29884 <main@@Base+0x12f38>
   29848:	ldr	r0, [sp, #8]
   2984c:	movw	r1, #1
   29850:	uxth	r1, r1
   29854:	movw	r2, #4
   29858:	movw	r3, #4
   2985c:	uxth	r3, r3
   29860:	bl	308d0 <flatcc_verify_field@@Base>
   29864:	str	r0, [sp, #4]
   29868:	cmp	r0, #0
   2986c:	beq	2987c <main@@Base+0x12f30>
   29870:	ldr	r0, [sp, #4]
   29874:	str	r0, [fp, #-4]
   29878:	b	29884 <main@@Base+0x12f38>
   2987c:	movw	r0, #0
   29880:	str	r0, [fp, #-4]
   29884:	ldr	r0, [fp, #-4]
   29888:	mov	sp, fp
   2988c:	pop	{fp, pc}
   29890:	push	{fp, lr}
   29894:	mov	fp, sp
   29898:	sub	sp, sp, #16
   2989c:	str	r0, [sp, #8]
   298a0:	ldr	r0, [sp, #8]
   298a4:	movw	r1, #0
   298a8:	uxth	r1, r1
   298ac:	movw	r2, #8
   298b0:	movw	r3, #8
   298b4:	uxth	r3, r3
   298b8:	bl	308d0 <flatcc_verify_field@@Base>
   298bc:	str	r0, [sp, #4]
   298c0:	cmp	r0, #0
   298c4:	beq	298d4 <main@@Base+0x12f88>
   298c8:	ldr	r0, [sp, #4]
   298cc:	str	r0, [fp, #-4]
   298d0:	b	29910 <main@@Base+0x12fc4>
   298d4:	ldr	r0, [sp, #8]
   298d8:	movw	r1, #1
   298dc:	uxth	r1, r1
   298e0:	movw	r2, #4
   298e4:	movw	r3, #4
   298e8:	uxth	r3, r3
   298ec:	bl	308d0 <flatcc_verify_field@@Base>
   298f0:	str	r0, [sp, #4]
   298f4:	cmp	r0, #0
   298f8:	beq	29908 <main@@Base+0x12fbc>
   298fc:	ldr	r0, [sp, #4]
   29900:	str	r0, [fp, #-4]
   29904:	b	29910 <main@@Base+0x12fc4>
   29908:	movw	r0, #0
   2990c:	str	r0, [fp, #-4]
   29910:	ldr	r0, [fp, #-4]
   29914:	mov	sp, fp
   29918:	pop	{fp, pc}
   2991c:	push	{fp, lr}
   29920:	mov	fp, sp
   29924:	sub	sp, sp, #16
   29928:	str	r0, [sp, #8]
   2992c:	ldr	r0, [sp, #8]
   29930:	ldrb	r0, [r0, #12]
   29934:	mov	r1, r0
   29938:	cmp	r0, #2
   2993c:	str	r1, [sp, #4]
   29940:	beq	29998 <main@@Base+0x1304c>
   29944:	b	29948 <main@@Base+0x12ffc>
   29948:	ldr	r0, [sp, #4]
   2994c:	cmp	r0, #8
   29950:	beq	299b0 <main@@Base+0x13064>
   29954:	b	29958 <main@@Base+0x1300c>
   29958:	ldr	r0, [sp, #4]
   2995c:	cmp	r0, #9
   29960:	beq	299cc <main@@Base+0x13080>
   29964:	b	29968 <main@@Base+0x1301c>
   29968:	ldr	r0, [sp, #4]
   2996c:	cmp	r0, #10
   29970:	beq	299e8 <main@@Base+0x1309c>
   29974:	b	29978 <main@@Base+0x1302c>
   29978:	ldr	r0, [sp, #4]
   2997c:	cmp	r0, #11
   29980:	beq	29a04 <main@@Base+0x130b8>
   29984:	b	29988 <main@@Base+0x1303c>
   29988:	ldr	r0, [sp, #4]
   2998c:	cmp	r0, #255	; 0xff
   29990:	beq	29a14 <main@@Base+0x130c8>
   29994:	b	29a24 <main@@Base+0x130d8>
   29998:	ldr	r0, [pc, #152]	; 29a38 <main@@Base+0x130ec>
   2999c:	add	r1, pc, r0
   299a0:	ldr	r0, [sp, #8]
   299a4:	bl	31a10 <flatcc_verify_union_table@@Base>
   299a8:	str	r0, [fp, #-4]
   299ac:	b	29a2c <main@@Base+0x130e0>
   299b0:	ldr	r0, [sp, #8]
   299b4:	movw	r1, #2
   299b8:	movw	r2, #2
   299bc:	uxth	r2, r2
   299c0:	bl	31a64 <flatcc_verify_union_struct@@Base>
   299c4:	str	r0, [fp, #-4]
   299c8:	b	29a2c <main@@Base+0x130e0>
   299cc:	ldr	r0, [sp, #8]
   299d0:	movw	r1, #4
   299d4:	movw	r2, #4
   299d8:	uxth	r2, r2
   299dc:	bl	31a64 <flatcc_verify_union_struct@@Base>
   299e0:	str	r0, [fp, #-4]
   299e4:	b	29a2c <main@@Base+0x130e0>
   299e8:	ldr	r0, [sp, #8]
   299ec:	movw	r1, #4
   299f0:	movw	r2, #4
   299f4:	uxth	r2, r2
   299f8:	bl	31a64 <flatcc_verify_union_struct@@Base>
   299fc:	str	r0, [fp, #-4]
   29a00:	b	29a2c <main@@Base+0x130e0>
   29a04:	ldr	r0, [sp, #8]
   29a08:	bl	31bec <flatcc_verify_union_string@@Base>
   29a0c:	str	r0, [fp, #-4]
   29a10:	b	29a2c <main@@Base+0x130e0>
   29a14:	ldr	r0, [sp, #8]
   29a18:	bl	31bec <flatcc_verify_union_string@@Base>
   29a1c:	str	r0, [fp, #-4]
   29a20:	b	29a2c <main@@Base+0x130e0>
   29a24:	movw	r0, #0
   29a28:	str	r0, [fp, #-4]
   29a2c:	ldr	r0, [fp, #-4]
   29a30:	mov	sp, fp
   29a34:	pop	{fp, pc}
   29a38:	muleq	r0, r8, r0
   29a3c:	push	{fp, lr}
   29a40:	mov	fp, sp
   29a44:	sub	sp, sp, #16
   29a48:	str	r0, [sp, #8]
   29a4c:	ldr	r0, [sp, #8]
   29a50:	movw	r1, #0
   29a54:	uxth	r1, r1
   29a58:	movw	r2, #4
   29a5c:	movw	r3, #4
   29a60:	uxth	r3, r3
   29a64:	bl	308d0 <flatcc_verify_field@@Base>
   29a68:	str	r0, [sp, #4]
   29a6c:	cmp	r0, #0
   29a70:	beq	29a80 <main@@Base+0x13134>
   29a74:	ldr	r0, [sp, #4]
   29a78:	str	r0, [fp, #-4]
   29a7c:	b	29a88 <main@@Base+0x1313c>
   29a80:	movw	r0, #0
   29a84:	str	r0, [fp, #-4]
   29a88:	ldr	r0, [fp, #-4]
   29a8c:	mov	sp, fp
   29a90:	pop	{fp, pc}

00029a94 <flatcc_builder_default_alloc@@Base>:
   29a94:	push	{fp, lr}
   29a98:	mov	fp, sp
   29a9c:	sub	sp, sp, #32
   29aa0:	ldr	ip, [fp, #8]
   29aa4:	str	r0, [fp, #-8]
   29aa8:	str	r1, [fp, #-12]
   29aac:	str	r2, [sp, #16]
   29ab0:	str	r3, [sp, #12]
   29ab4:	ldr	r0, [sp, #16]
   29ab8:	cmp	r0, #0
   29abc:	bne	29b00 <flatcc_builder_default_alloc@@Base+0x6c>
   29ac0:	ldr	r0, [fp, #-12]
   29ac4:	ldr	r0, [r0]
   29ac8:	movw	r1, #0
   29acc:	cmp	r0, r1
   29ad0:	beq	29af4 <flatcc_builder_default_alloc@@Base+0x60>
   29ad4:	ldr	r0, [fp, #-12]
   29ad8:	ldr	r0, [r0]
   29adc:	bl	14e24 <free@plt>
   29ae0:	ldr	r0, [fp, #-12]
   29ae4:	movw	r1, #0
   29ae8:	str	r1, [r0]
   29aec:	ldr	r0, [fp, #-12]
   29af0:	str	r1, [r0, #4]
   29af4:	movw	r0, #0
   29af8:	str	r0, [fp, #-4]
   29afc:	b	29c6c <flatcc_builder_default_alloc@@Base+0x1d8>
   29b00:	ldr	r0, [fp, #8]
   29b04:	sub	r0, r0, #1
   29b08:	cmp	r0, #6
   29b0c:	str	r0, [sp]
   29b10:	bhi	29b70 <flatcc_builder_default_alloc@@Base+0xdc>
   29b14:	add	r0, pc, #8
   29b18:	ldr	r1, [sp]
   29b1c:	ldr	r2, [r0, r1, lsl #2]
   29b20:	add	pc, r0, r2
   29b24:	andeq	r0, r0, ip, lsl r0
   29b28:	andeq	r0, r0, ip, asr #32
   29b2c:	andeq	r0, r0, ip, asr #32
   29b30:	andeq	r0, r0, r4, lsr r0
   29b34:	andeq	r0, r0, r8, lsr #32
   29b38:	andeq	r0, r0, ip, asr #32
   29b3c:	andeq	r0, r0, r0, asr #32
   29b40:	movw	r0, #256	; 0x100
   29b44:	str	r0, [sp, #4]
   29b48:	b	29b78 <flatcc_builder_default_alloc@@Base+0xe4>
   29b4c:	ldr	r0, [sp, #16]
   29b50:	str	r0, [sp, #4]
   29b54:	b	29b78 <flatcc_builder_default_alloc@@Base+0xe4>
   29b58:	movw	r0, #288	; 0x120
   29b5c:	str	r0, [sp, #4]
   29b60:	b	29b78 <flatcc_builder_default_alloc@@Base+0xe4>
   29b64:	movw	r0, #64	; 0x40
   29b68:	str	r0, [sp, #4]
   29b6c:	b	29b78 <flatcc_builder_default_alloc@@Base+0xe4>
   29b70:	movw	r0, #32
   29b74:	str	r0, [sp, #4]
   29b78:	b	29b7c <flatcc_builder_default_alloc@@Base+0xe8>
   29b7c:	ldr	r0, [sp, #4]
   29b80:	ldr	r1, [sp, #16]
   29b84:	cmp	r0, r1
   29b88:	bcs	29b9c <flatcc_builder_default_alloc@@Base+0x108>
   29b8c:	ldr	r0, [sp, #4]
   29b90:	lsl	r0, r0, #1
   29b94:	str	r0, [sp, #4]
   29b98:	b	29b7c <flatcc_builder_default_alloc@@Base+0xe8>
   29b9c:	ldr	r0, [sp, #16]
   29ba0:	ldr	r1, [fp, #-12]
   29ba4:	ldr	r1, [r1, #4]
   29ba8:	cmp	r0, r1
   29bac:	bhi	29bd4 <flatcc_builder_default_alloc@@Base+0x140>
   29bb0:	ldr	r0, [fp, #-12]
   29bb4:	ldr	r0, [r0, #4]
   29bb8:	lsr	r0, r0, #1
   29bbc:	ldr	r1, [sp, #4]
   29bc0:	cmp	r0, r1
   29bc4:	bcc	29bd4 <flatcc_builder_default_alloc@@Base+0x140>
   29bc8:	movw	r0, #0
   29bcc:	str	r0, [fp, #-4]
   29bd0:	b	29c6c <flatcc_builder_default_alloc@@Base+0x1d8>
   29bd4:	ldr	r0, [fp, #-12]
   29bd8:	ldr	r0, [r0]
   29bdc:	ldr	r1, [sp, #4]
   29be0:	bl	14e60 <realloc@plt>
   29be4:	str	r0, [sp, #8]
   29be8:	movw	r1, #0
   29bec:	cmp	r0, r1
   29bf0:	bne	29c00 <flatcc_builder_default_alloc@@Base+0x16c>
   29bf4:	mvn	r0, #0
   29bf8:	str	r0, [fp, #-4]
   29bfc:	b	29c6c <flatcc_builder_default_alloc@@Base+0x1d8>
   29c00:	ldr	r0, [sp, #12]
   29c04:	cmp	r0, #0
   29c08:	beq	29c4c <flatcc_builder_default_alloc@@Base+0x1b8>
   29c0c:	ldr	r0, [fp, #-12]
   29c10:	ldr	r0, [r0, #4]
   29c14:	ldr	r1, [sp, #4]
   29c18:	cmp	r0, r1
   29c1c:	bcs	29c4c <flatcc_builder_default_alloc@@Base+0x1b8>
   29c20:	ldr	r0, [sp, #8]
   29c24:	ldr	r1, [fp, #-12]
   29c28:	ldr	r1, [r1, #4]
   29c2c:	add	r0, r0, r1
   29c30:	ldr	r1, [sp, #4]
   29c34:	ldr	r2, [fp, #-12]
   29c38:	ldr	r2, [r2, #4]
   29c3c:	sub	r2, r1, r2
   29c40:	movw	r1, #0
   29c44:	and	r1, r1, #255	; 0xff
   29c48:	bl	14ec0 <memset@plt>
   29c4c:	ldr	r0, [sp, #8]
   29c50:	ldr	r1, [fp, #-12]
   29c54:	str	r0, [r1]
   29c58:	ldr	r0, [sp, #4]
   29c5c:	ldr	r1, [fp, #-12]
   29c60:	str	r0, [r1, #4]
   29c64:	movw	r0, #0
   29c68:	str	r0, [fp, #-4]
   29c6c:	ldr	r0, [fp, #-4]
   29c70:	mov	sp, fp
   29c74:	pop	{fp, pc}

00029c78 <flatcc_builder_flush_vtable_cache@@Base>:
   29c78:	push	{fp, lr}
   29c7c:	mov	fp, sp
   29c80:	sub	sp, sp, #8
   29c84:	str	r0, [sp, #4]
   29c88:	ldr	r0, [sp, #4]
   29c8c:	add	r0, r0, #52	; 0x34
   29c90:	add	r0, r0, #40	; 0x28
   29c94:	str	r0, [sp]
   29c98:	ldr	r0, [sp, #4]
   29c9c:	ldr	r0, [r0, #116]	; 0x74
   29ca0:	cmp	r0, #0
   29ca4:	bne	29cac <flatcc_builder_flush_vtable_cache@@Base+0x34>
   29ca8:	b	29ce0 <flatcc_builder_flush_vtable_cache@@Base+0x68>
   29cac:	ldr	r0, [sp]
   29cb0:	ldr	r0, [r0]
   29cb4:	ldr	r1, [sp]
   29cb8:	ldr	r2, [r1, #4]
   29cbc:	movw	r1, #0
   29cc0:	and	r1, r1, #255	; 0xff
   29cc4:	bl	14ec0 <memset@plt>
   29cc8:	ldr	r0, [sp, #4]
   29ccc:	movw	r1, #16
   29cd0:	str	r1, [r0, #124]	; 0x7c
   29cd4:	ldr	r0, [sp, #4]
   29cd8:	movw	r1, #0
   29cdc:	str	r1, [r0, #120]	; 0x78
   29ce0:	mov	sp, fp
   29ce4:	pop	{fp, pc}

00029ce8 <flatcc_builder_custom_init@@Base>:
   29ce8:	push	{fp, lr}
   29cec:	mov	fp, sp
   29cf0:	sub	sp, sp, #24
   29cf4:	ldr	ip, [fp, #8]
   29cf8:	str	r0, [fp, #-4]
   29cfc:	str	r1, [fp, #-8]
   29d00:	str	r2, [sp, #12]
   29d04:	str	r3, [sp, #8]
   29d08:	ldr	r0, [fp, #-4]
   29d0c:	movw	r1, #0
   29d10:	and	r1, r1, #255	; 0xff
   29d14:	movw	r2, #232	; 0xe8
   29d18:	str	ip, [sp, #4]
   29d1c:	bl	14ec0 <memset@plt>
   29d20:	ldr	r0, [fp, #-8]
   29d24:	movw	r1, #0
   29d28:	cmp	r0, r1
   29d2c:	bne	29d54 <flatcc_builder_custom_init@@Base+0x6c>
   29d30:	ldr	r0, [pc, #116]	; 29dac <flatcc_builder_custom_init@@Base+0xc4>
   29d34:	ldr	r0, [pc, r0]
   29d38:	ldr	r1, [fp, #-4]
   29d3c:	movw	r2, #1
   29d40:	str	r2, [r1, #184]	; 0xb8
   29d44:	str	r0, [fp, #-8]
   29d48:	ldr	r0, [fp, #-4]
   29d4c:	add	r0, r0, #188	; 0xbc
   29d50:	str	r0, [sp, #12]
   29d54:	ldr	r0, [sp, #8]
   29d58:	movw	r1, #0
   29d5c:	cmp	r0, r1
   29d60:	bne	29d70 <flatcc_builder_custom_init@@Base+0x88>
   29d64:	ldr	r0, [pc, #68]	; 29db0 <flatcc_builder_custom_init@@Base+0xc8>
   29d68:	ldr	r0, [pc, r0]
   29d6c:	str	r0, [sp, #8]
   29d70:	ldr	r0, [fp, #8]
   29d74:	ldr	r1, [fp, #-4]
   29d78:	str	r0, [r1, #40]	; 0x28
   29d7c:	ldr	r0, [sp, #8]
   29d80:	ldr	r1, [fp, #-4]
   29d84:	str	r0, [r1, #48]	; 0x30
   29d88:	ldr	r0, [sp, #12]
   29d8c:	ldr	r1, [fp, #-4]
   29d90:	str	r0, [r1, #36]	; 0x24
   29d94:	ldr	r0, [fp, #-8]
   29d98:	ldr	r1, [fp, #-4]
   29d9c:	str	r0, [r1, #44]	; 0x2c
   29da0:	movw	r0, #0
   29da4:	mov	sp, fp
   29da8:	pop	{fp, pc}
   29dac:	andeq	r5, r3, r0, asr #6
   29db0:	andeq	r5, r3, r4, lsl #6

00029db4 <flatcc_builder_init@@Base>:
   29db4:	push	{fp, lr}
   29db8:	mov	fp, sp
   29dbc:	sub	sp, sp, #16
   29dc0:	str	r0, [fp, #-4]
   29dc4:	ldr	r0, [fp, #-4]
   29dc8:	movw	r1, #0
   29dcc:	str	r1, [sp, #8]
   29dd0:	ldr	r2, [sp, #8]
   29dd4:	ldr	r3, [sp, #8]
   29dd8:	ldr	ip, [sp, #8]
   29ddc:	str	ip, [sp]
   29de0:	bl	29ce8 <flatcc_builder_custom_init@@Base>
   29de4:	mov	sp, fp
   29de8:	pop	{fp, pc}

00029dec <flatcc_builder_custom_reset@@Base>:
   29dec:	push	{r4, sl, fp, lr}
   29df0:	add	fp, sp, #8
   29df4:	sub	sp, sp, #40	; 0x28
   29df8:	str	r0, [fp, #-16]
   29dfc:	str	r1, [fp, #-20]	; 0xffffffec
   29e00:	str	r2, [sp, #24]
   29e04:	movw	r0, #0
   29e08:	str	r0, [sp, #16]
   29e0c:	ldr	r0, [sp, #16]
   29e10:	cmp	r0, #8
   29e14:	bge	29f20 <flatcc_builder_custom_reset@@Base+0x134>
   29e18:	ldr	r0, [fp, #-16]
   29e1c:	add	r0, r0, #52	; 0x34
   29e20:	ldr	r1, [sp, #16]
   29e24:	add	r0, r0, r1, lsl #3
   29e28:	str	r0, [sp, #20]
   29e2c:	ldr	r0, [sp, #20]
   29e30:	ldr	r0, [r0]
   29e34:	movw	r1, #0
   29e38:	cmp	r0, r1
   29e3c:	beq	29ed4 <flatcc_builder_custom_reset@@Base+0xe8>
   29e40:	ldr	r0, [sp, #16]
   29e44:	cmp	r0, #5
   29e48:	beq	29eb4 <flatcc_builder_custom_reset@@Base+0xc8>
   29e4c:	ldr	r0, [sp, #24]
   29e50:	cmp	r0, #0
   29e54:	beq	29eb4 <flatcc_builder_custom_reset@@Base+0xc8>
   29e58:	ldr	r0, [fp, #-16]
   29e5c:	ldr	r0, [r0, #48]	; 0x30
   29e60:	ldr	r1, [fp, #-16]
   29e64:	ldr	r1, [r1, #40]	; 0x28
   29e68:	ldr	r2, [sp, #20]
   29e6c:	ldr	r3, [sp, #16]
   29e70:	str	r0, [sp, #12]
   29e74:	mov	r0, r1
   29e78:	mov	r1, r2
   29e7c:	movw	r2, #1
   29e80:	str	r2, [sp, #8]
   29e84:	ldr	ip, [sp, #8]
   29e88:	str	r3, [sp, #4]
   29e8c:	mov	r3, ip
   29e90:	ldr	lr, [sp, #4]
   29e94:	str	lr, [sp]
   29e98:	ldr	r4, [sp, #12]
   29e9c:	blx	r4
   29ea0:	cmp	r0, #0
   29ea4:	beq	29eb4 <flatcc_builder_custom_reset@@Base+0xc8>
   29ea8:	mvn	r0, #0
   29eac:	str	r0, [fp, #-12]
   29eb0:	b	2a01c <flatcc_builder_custom_reset@@Base+0x230>
   29eb4:	ldr	r0, [sp, #20]
   29eb8:	ldr	r0, [r0]
   29ebc:	ldr	r1, [sp, #20]
   29ec0:	ldr	r2, [r1, #4]
   29ec4:	movw	r1, #0
   29ec8:	and	r1, r1, #255	; 0xff
   29ecc:	bl	14ec0 <memset@plt>
   29ed0:	b	29f0c <flatcc_builder_custom_reset@@Base+0x120>
   29ed4:	ldr	r0, [sp, #20]
   29ed8:	ldr	r0, [r0, #4]
   29edc:	cmp	r0, #0
   29ee0:	bne	29ee8 <flatcc_builder_custom_reset@@Base+0xfc>
   29ee4:	b	29f08 <flatcc_builder_custom_reset@@Base+0x11c>
   29ee8:	ldr	r0, [pc, #312]	; 2a028 <flatcc_builder_custom_reset@@Base+0x23c>
   29eec:	add	r0, pc, r0
   29ef0:	ldr	r1, [pc, #308]	; 2a02c <flatcc_builder_custom_reset@@Base+0x240>
   29ef4:	add	r1, pc, r1
   29ef8:	ldr	r2, [pc, #304]	; 2a030 <flatcc_builder_custom_reset@@Base+0x244>
   29efc:	add	r3, pc, r2
   29f00:	movw	r2, #434	; 0x1b2
   29f04:	bl	14f08 <__assert_fail@plt>
   29f08:	b	29f0c <flatcc_builder_custom_reset@@Base+0x120>
   29f0c:	b	29f10 <flatcc_builder_custom_reset@@Base+0x124>
   29f10:	ldr	r0, [sp, #16]
   29f14:	add	r0, r0, #1
   29f18:	str	r0, [sp, #16]
   29f1c:	b	29e0c <flatcc_builder_custom_reset@@Base+0x20>
   29f20:	ldr	r0, [fp, #-16]
   29f24:	movw	r1, #0
   29f28:	str	r1, [r0, #120]	; 0x78
   29f2c:	ldr	r0, [fp, #-16]
   29f30:	ldr	r0, [r0, #124]	; 0x7c
   29f34:	cmp	r0, #0
   29f38:	bls	29f48 <flatcc_builder_custom_reset@@Base+0x15c>
   29f3c:	ldr	r0, [fp, #-16]
   29f40:	movw	r1, #16
   29f44:	str	r1, [r0, #124]	; 0x7c
   29f48:	ldr	r0, [fp, #-16]
   29f4c:	movw	r1, #0
   29f50:	strh	r1, [r0, #128]	; 0x80
   29f54:	ldr	r0, [fp, #-16]
   29f58:	movw	r1, #0
   29f5c:	str	r1, [r0, #136]	; 0x88
   29f60:	ldr	r0, [fp, #-16]
   29f64:	str	r1, [r0, #140]	; 0x8c
   29f68:	ldr	r0, [fp, #-16]
   29f6c:	str	r1, [r0, #156]	; 0x9c
   29f70:	ldr	r0, [fp, #-16]
   29f74:	str	r1, [r0, #160]	; 0xa0
   29f78:	ldr	r0, [fp, #-16]
   29f7c:	str	r1, [r0, #20]
   29f80:	ldr	r0, [fp, #-16]
   29f84:	str	r1, [r0, #24]
   29f88:	ldr	r0, [fp, #-16]
   29f8c:	str	r1, [r0, #148]	; 0x94
   29f90:	ldr	r0, [fp, #-16]
   29f94:	str	r1, [r0, #152]	; 0x98
   29f98:	ldr	r0, [fp, #-16]
   29f9c:	ldr	r0, [r0, #60]	; 0x3c
   29fa0:	ldr	r2, [fp, #-16]
   29fa4:	str	r0, [r2, #16]
   29fa8:	ldr	r0, [fp, #-16]
   29fac:	ldr	r0, [r0, #76]	; 0x4c
   29fb0:	ldr	r2, [fp, #-16]
   29fb4:	str	r0, [r2]
   29fb8:	ldr	r0, [fp, #-16]
   29fbc:	ldr	r0, [r0, #52]	; 0x34
   29fc0:	ldr	r2, [fp, #-16]
   29fc4:	str	r0, [r2, #4]
   29fc8:	ldr	r0, [fp, #-16]
   29fcc:	str	r1, [r0, #32]
   29fd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   29fd4:	cmp	r0, #0
   29fd8:	beq	29ff8 <flatcc_builder_custom_reset@@Base+0x20c>
   29fdc:	ldr	r0, [fp, #-16]
   29fe0:	movw	r1, #0
   29fe4:	str	r1, [r0, #172]	; 0xac
   29fe8:	ldr	r0, [fp, #-16]
   29fec:	str	r1, [r0, #176]	; 0xb0
   29ff0:	ldr	r0, [fp, #-16]
   29ff4:	str	r1, [r0, #180]	; 0xb4
   29ff8:	ldr	r0, [fp, #-16]
   29ffc:	ldr	r0, [r0, #184]	; 0xb8
   2a000:	cmp	r0, #0
   2a004:	beq	2a014 <flatcc_builder_custom_reset@@Base+0x228>
   2a008:	ldr	r0, [fp, #-16]
   2a00c:	add	r0, r0, #188	; 0xbc
   2a010:	bl	2f99c <flatcc_emitter_reset@@Base>
   2a014:	movw	r0, #0
   2a018:	str	r0, [fp, #-12]
   2a01c:	ldr	r0, [fp, #-12]
   2a020:	sub	sp, fp, #8
   2a024:	pop	{r4, sl, fp, pc}
   2a028:	andeq	r1, r2, r4, lsl #2
   2a02c:	andeq	r1, r2, lr, lsl #2
   2a030:	andeq	r1, r2, r3, ror #2

0002a034 <flatcc_builder_reset@@Base>:
   2a034:	push	{fp, lr}
   2a038:	mov	fp, sp
   2a03c:	sub	sp, sp, #8
   2a040:	str	r0, [sp, #4]
   2a044:	ldr	r0, [sp, #4]
   2a048:	movw	r1, #0
   2a04c:	str	r1, [sp]
   2a050:	ldr	r2, [sp]
   2a054:	bl	29dec <flatcc_builder_custom_reset@@Base>
   2a058:	mov	sp, fp
   2a05c:	pop	{fp, pc}

0002a060 <flatcc_builder_clear@@Base>:
   2a060:	push	{r4, sl, fp, lr}
   2a064:	add	fp, sp, #8
   2a068:	sub	sp, sp, #32
   2a06c:	str	r0, [fp, #-12]
   2a070:	movw	r0, #0
   2a074:	str	r0, [sp, #20]
   2a078:	ldr	r0, [sp, #20]
   2a07c:	cmp	r0, #8
   2a080:	bge	2a0f0 <flatcc_builder_clear@@Base+0x90>
   2a084:	ldr	r0, [fp, #-12]
   2a088:	add	r0, r0, #52	; 0x34
   2a08c:	ldr	r1, [sp, #20]
   2a090:	add	r0, r0, r1, lsl #3
   2a094:	str	r0, [fp, #-16]
   2a098:	ldr	r0, [fp, #-12]
   2a09c:	ldr	r0, [r0, #48]	; 0x30
   2a0a0:	ldr	r1, [fp, #-12]
   2a0a4:	ldr	r1, [r1, #40]	; 0x28
   2a0a8:	ldr	r2, [fp, #-16]
   2a0ac:	ldr	r3, [sp, #20]
   2a0b0:	str	r0, [sp, #16]
   2a0b4:	mov	r0, r1
   2a0b8:	mov	r1, r2
   2a0bc:	movw	r2, #0
   2a0c0:	str	r2, [sp, #12]
   2a0c4:	ldr	ip, [sp, #12]
   2a0c8:	str	r3, [sp, #8]
   2a0cc:	mov	r3, ip
   2a0d0:	ldr	lr, [sp, #8]
   2a0d4:	str	lr, [sp]
   2a0d8:	ldr	r4, [sp, #16]
   2a0dc:	blx	r4
   2a0e0:	ldr	r0, [sp, #20]
   2a0e4:	add	r0, r0, #1
   2a0e8:	str	r0, [sp, #20]
   2a0ec:	b	2a078 <flatcc_builder_clear@@Base+0x18>
   2a0f0:	ldr	r0, [fp, #-12]
   2a0f4:	ldr	r0, [r0, #184]	; 0xb8
   2a0f8:	cmp	r0, #0
   2a0fc:	beq	2a10c <flatcc_builder_clear@@Base+0xac>
   2a100:	ldr	r0, [fp, #-12]
   2a104:	add	r0, r0, #188	; 0xbc
   2a108:	bl	2fb34 <flatcc_emitter_clear@@Base>
   2a10c:	ldr	r0, [fp, #-12]
   2a110:	movw	r1, #0
   2a114:	and	r1, r1, #255	; 0xff
   2a118:	movw	r2, #232	; 0xe8
   2a11c:	bl	14ec0 <memset@plt>
   2a120:	sub	sp, fp, #8
   2a124:	pop	{r4, sl, fp, pc}

0002a128 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2a128:	push	{fp, lr}
   2a12c:	mov	fp, sp
   2a130:	sub	sp, sp, #24
   2a134:	str	r0, [fp, #-8]
   2a138:	str	r1, [sp, #12]
   2a13c:	ldr	r0, [sp, #12]
   2a140:	add	r0, r0, #4
   2a144:	sub	r0, r0, #1
   2a148:	mvn	r1, #3
   2a14c:	and	r0, r0, r1
   2a150:	add	r0, r0, #4
   2a154:	str	r0, [sp, #12]
   2a158:	ldr	r0, [fp, #-8]
   2a15c:	ldr	r1, [fp, #-8]
   2a160:	ldr	r2, [r1, #228]	; 0xe4
   2a164:	ldr	r3, [sp, #12]
   2a168:	movw	r1, #7
   2a16c:	movw	ip, #0
   2a170:	str	ip, [sp]
   2a174:	bl	2a1fc <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2a178:	str	r0, [sp, #8]
   2a17c:	movw	r1, #0
   2a180:	cmp	r0, r1
   2a184:	bne	2a194 <flatcc_builder_enter_user_frame_ptr@@Base+0x6c>
   2a188:	movw	r0, #0
   2a18c:	str	r0, [fp, #-4]
   2a190:	b	2a1f0 <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   2a194:	ldr	r0, [sp, #8]
   2a198:	ldr	r2, [sp, #12]
   2a19c:	movw	r1, #0
   2a1a0:	and	r1, r1, #255	; 0xff
   2a1a4:	bl	14ec0 <memset@plt>
   2a1a8:	ldr	r0, [fp, #-8]
   2a1ac:	ldr	r0, [r0, #224]	; 0xe0
   2a1b0:	ldr	r1, [sp, #8]
   2a1b4:	add	r2, r1, #4
   2a1b8:	str	r2, [sp, #8]
   2a1bc:	str	r0, [r1]
   2a1c0:	ldr	r0, [fp, #-8]
   2a1c4:	ldr	r0, [r0, #228]	; 0xe4
   2a1c8:	add	r0, r0, #4
   2a1cc:	ldr	r1, [fp, #-8]
   2a1d0:	str	r0, [r1, #224]	; 0xe0
   2a1d4:	ldr	r0, [sp, #12]
   2a1d8:	ldr	r1, [fp, #-8]
   2a1dc:	ldr	r2, [r1, #228]	; 0xe4
   2a1e0:	add	r0, r2, r0
   2a1e4:	str	r0, [r1, #228]	; 0xe4
   2a1e8:	ldr	r0, [sp, #8]
   2a1ec:	str	r0, [fp, #-4]
   2a1f0:	ldr	r0, [fp, #-4]
   2a1f4:	mov	sp, fp
   2a1f8:	pop	{fp, pc}
   2a1fc:	push	{fp, lr}
   2a200:	mov	fp, sp
   2a204:	sub	sp, sp, #32
   2a208:	ldr	ip, [fp, #8]
   2a20c:	str	r0, [fp, #-4]
   2a210:	str	r1, [fp, #-8]
   2a214:	str	r2, [fp, #-12]
   2a218:	str	r3, [sp, #16]
   2a21c:	ldr	r0, [fp, #-4]
   2a220:	add	r0, r0, #52	; 0x34
   2a224:	ldr	r1, [fp, #-8]
   2a228:	add	r0, r0, r1, lsl #3
   2a22c:	str	r0, [sp, #12]
   2a230:	ldr	r0, [fp, #-12]
   2a234:	ldr	r1, [sp, #16]
   2a238:	add	r0, r0, r1
   2a23c:	ldr	r1, [sp, #12]
   2a240:	ldr	r1, [r1, #4]
   2a244:	cmp	r0, r1
   2a248:	bls	2a2c0 <flatcc_builder_enter_user_frame_ptr@@Base+0x198>
   2a24c:	ldr	r0, [fp, #-4]
   2a250:	ldr	r0, [r0, #48]	; 0x30
   2a254:	ldr	r1, [fp, #-4]
   2a258:	ldr	r1, [r1, #40]	; 0x28
   2a25c:	ldr	r2, [sp, #12]
   2a260:	ldr	r3, [fp, #-12]
   2a264:	ldr	ip, [sp, #16]
   2a268:	add	r3, r3, ip
   2a26c:	ldr	ip, [fp, #8]
   2a270:	ldr	lr, [fp, #-8]
   2a274:	str	r0, [sp, #8]
   2a278:	mov	r0, r1
   2a27c:	mov	r1, r2
   2a280:	mov	r2, r3
   2a284:	mov	r3, ip
   2a288:	str	lr, [sp]
   2a28c:	ldr	ip, [sp, #8]
   2a290:	blx	ip
   2a294:	cmp	r0, #0
   2a298:	beq	2a2bc <flatcc_builder_enter_user_frame_ptr@@Base+0x194>
   2a29c:	ldr	r0, [pc, #52]	; 2a2d8 <flatcc_builder_enter_user_frame_ptr@@Base+0x1b0>
   2a2a0:	add	r0, pc, r0
   2a2a4:	ldr	r1, [pc, #48]	; 2a2dc <flatcc_builder_enter_user_frame_ptr@@Base+0x1b4>
   2a2a8:	add	r1, pc, r1
   2a2ac:	ldr	r2, [pc, #44]	; 2a2e0 <flatcc_builder_enter_user_frame_ptr@@Base+0x1b8>
   2a2b0:	add	r3, pc, r2
   2a2b4:	movw	r2, #308	; 0x134
   2a2b8:	bl	14f08 <__assert_fail@plt>
   2a2bc:	b	2a2c0 <flatcc_builder_enter_user_frame_ptr@@Base+0x198>
   2a2c0:	ldr	r0, [sp, #12]
   2a2c4:	ldr	r0, [r0]
   2a2c8:	ldr	r1, [fp, #-12]
   2a2cc:	add	r0, r0, r1
   2a2d0:	mov	sp, fp
   2a2d4:	pop	{fp, pc}
   2a2d8:	andeq	r1, r2, pc, lsl pc
   2a2dc:	andeq	r0, r2, sl, asr sp
   2a2e0:	andeq	r1, r2, r9, asr #26

0002a2e4 <flatcc_builder_enter_user_frame@@Base>:
   2a2e4:	push	{fp, lr}
   2a2e8:	mov	fp, sp
   2a2ec:	sub	sp, sp, #24
   2a2f0:	str	r0, [fp, #-8]
   2a2f4:	str	r1, [sp, #12]
   2a2f8:	ldr	r0, [sp, #12]
   2a2fc:	add	r0, r0, #4
   2a300:	sub	r0, r0, #1
   2a304:	mvn	r1, #3
   2a308:	and	r0, r0, r1
   2a30c:	add	r0, r0, #4
   2a310:	str	r0, [sp, #12]
   2a314:	ldr	r0, [fp, #-8]
   2a318:	ldr	r1, [fp, #-8]
   2a31c:	ldr	r2, [r1, #228]	; 0xe4
   2a320:	ldr	r3, [sp, #12]
   2a324:	movw	r1, #7
   2a328:	movw	ip, #0
   2a32c:	str	ip, [sp]
   2a330:	bl	2a1fc <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2a334:	str	r0, [sp, #8]
   2a338:	movw	r1, #0
   2a33c:	cmp	r0, r1
   2a340:	bne	2a350 <flatcc_builder_enter_user_frame@@Base+0x6c>
   2a344:	movw	r0, #0
   2a348:	str	r0, [fp, #-4]
   2a34c:	b	2a3b0 <flatcc_builder_enter_user_frame@@Base+0xcc>
   2a350:	ldr	r0, [sp, #8]
   2a354:	ldr	r2, [sp, #12]
   2a358:	movw	r1, #0
   2a35c:	and	r1, r1, #255	; 0xff
   2a360:	bl	14ec0 <memset@plt>
   2a364:	ldr	r0, [fp, #-8]
   2a368:	ldr	r0, [r0, #224]	; 0xe0
   2a36c:	ldr	r1, [sp, #8]
   2a370:	add	r2, r1, #4
   2a374:	str	r2, [sp, #8]
   2a378:	str	r0, [r1]
   2a37c:	ldr	r0, [fp, #-8]
   2a380:	ldr	r0, [r0, #228]	; 0xe4
   2a384:	add	r0, r0, #4
   2a388:	ldr	r1, [fp, #-8]
   2a38c:	str	r0, [r1, #224]	; 0xe0
   2a390:	ldr	r0, [sp, #12]
   2a394:	ldr	r1, [fp, #-8]
   2a398:	ldr	r2, [r1, #228]	; 0xe4
   2a39c:	add	r0, r2, r0
   2a3a0:	str	r0, [r1, #228]	; 0xe4
   2a3a4:	ldr	r0, [fp, #-8]
   2a3a8:	ldr	r0, [r0, #224]	; 0xe0
   2a3ac:	str	r0, [fp, #-4]
   2a3b0:	ldr	r0, [fp, #-4]
   2a3b4:	mov	sp, fp
   2a3b8:	pop	{fp, pc}

0002a3bc <flatcc_builder_exit_user_frame@@Base>:
   2a3bc:	push	{fp, lr}
   2a3c0:	mov	fp, sp
   2a3c4:	sub	sp, sp, #8
   2a3c8:	str	r0, [sp, #4]
   2a3cc:	ldr	r0, [sp, #4]
   2a3d0:	ldr	r0, [r0, #224]	; 0xe0
   2a3d4:	cmp	r0, #0
   2a3d8:	bls	2a3e0 <flatcc_builder_exit_user_frame@@Base+0x24>
   2a3dc:	b	2a400 <flatcc_builder_exit_user_frame@@Base+0x44>
   2a3e0:	ldr	r0, [pc, #100]	; 2a44c <flatcc_builder_exit_user_frame@@Base+0x90>
   2a3e4:	add	r0, pc, r0
   2a3e8:	ldr	r1, [pc, #96]	; 2a450 <flatcc_builder_exit_user_frame@@Base+0x94>
   2a3ec:	add	r1, pc, r1
   2a3f0:	ldr	r2, [pc, #92]	; 2a454 <flatcc_builder_exit_user_frame@@Base+0x98>
   2a3f4:	add	r3, pc, r2
   2a3f8:	movw	r2, #542	; 0x21e
   2a3fc:	bl	14f08 <__assert_fail@plt>
   2a400:	ldr	r0, [sp, #4]
   2a404:	ldr	r0, [r0, #108]	; 0x6c
   2a408:	ldr	r1, [sp, #4]
   2a40c:	ldr	r1, [r1, #224]	; 0xe0
   2a410:	add	r0, r0, r1
   2a414:	str	r0, [sp]
   2a418:	ldr	r0, [sp, #4]
   2a41c:	ldr	r0, [r0, #224]	; 0xe0
   2a420:	sub	r0, r0, #4
   2a424:	ldr	r1, [sp, #4]
   2a428:	str	r0, [r1, #228]	; 0xe4
   2a42c:	ldr	r0, [sp]
   2a430:	mvn	r1, #3
   2a434:	add	r0, r0, r1
   2a438:	ldr	r0, [r0]
   2a43c:	ldr	r1, [sp, #4]
   2a440:	str	r0, [r1, #224]	; 0xe0
   2a444:	mov	sp, fp
   2a448:	pop	{fp, pc}
   2a44c:			; <UNDEFINED> instruction: 0x00020cb9
   2a450:	andeq	r0, r2, r6, lsl ip
   2a454:	andeq	r0, r2, r2, asr #25

0002a458 <flatcc_builder_exit_user_frame_at@@Base>:
   2a458:	push	{fp, lr}
   2a45c:	mov	fp, sp
   2a460:	sub	sp, sp, #8
   2a464:	str	r0, [sp, #4]
   2a468:	str	r1, [sp]
   2a46c:	ldr	r0, [sp, #4]
   2a470:	ldr	r0, [r0, #224]	; 0xe0
   2a474:	ldr	r1, [sp]
   2a478:	cmp	r0, r1
   2a47c:	bcc	2a484 <flatcc_builder_exit_user_frame_at@@Base+0x2c>
   2a480:	b	2a4a4 <flatcc_builder_exit_user_frame_at@@Base+0x4c>
   2a484:	ldr	r0, [pc, #52]	; 2a4c0 <flatcc_builder_exit_user_frame_at@@Base+0x68>
   2a488:	add	r0, pc, r0
   2a48c:	ldr	r1, [pc, #48]	; 2a4c4 <flatcc_builder_exit_user_frame_at@@Base+0x6c>
   2a490:	add	r1, pc, r1
   2a494:	ldr	r2, [pc, #44]	; 2a4c8 <flatcc_builder_exit_user_frame_at@@Base+0x70>
   2a498:	add	r3, pc, r2
   2a49c:	movw	r2, #551	; 0x227
   2a4a0:	bl	14f08 <__assert_fail@plt>
   2a4a4:	ldr	r0, [sp]
   2a4a8:	ldr	r1, [sp, #4]
   2a4ac:	str	r0, [r1, #224]	; 0xe0
   2a4b0:	ldr	r0, [sp, #4]
   2a4b4:	bl	2a3bc <flatcc_builder_exit_user_frame@@Base>
   2a4b8:	mov	sp, fp
   2a4bc:	pop	{fp, pc}
   2a4c0:	andeq	r0, r2, r8, ror #24
   2a4c4:	andeq	r0, r2, r2, ror fp
   2a4c8:	andeq	r0, r2, r7, ror ip

0002a4cc <flatcc_builder_get_current_user_frame@@Base>:
   2a4cc:	sub	sp, sp, #4
   2a4d0:	str	r0, [sp]
   2a4d4:	ldr	r0, [sp]
   2a4d8:	ldr	r0, [r0, #224]	; 0xe0
   2a4dc:	add	sp, sp, #4
   2a4e0:	bx	lr

0002a4e4 <flatcc_builder_get_user_frame_ptr@@Base>:
   2a4e4:	sub	sp, sp, #8
   2a4e8:	str	r0, [sp, #4]
   2a4ec:	str	r1, [sp]
   2a4f0:	ldr	r0, [sp, #4]
   2a4f4:	ldr	r0, [r0, #108]	; 0x6c
   2a4f8:	ldr	r1, [sp]
   2a4fc:	add	r0, r0, r1
   2a500:	add	sp, sp, #8
   2a504:	bx	lr

0002a508 <flatcc_builder_embed_buffer@@Base>:
   2a508:	push	{fp, lr}
   2a50c:	mov	fp, sp
   2a510:	sub	sp, sp, #120	; 0x78
   2a514:	ldr	ip, [fp, #12]
   2a518:	ldr	lr, [fp, #8]
   2a51c:	str	r0, [fp, #-8]
   2a520:	strh	r1, [fp, #-10]
   2a524:	str	r2, [fp, #-16]
   2a528:	str	r3, [fp, #-20]	; 0xffffffec
   2a52c:	strh	lr, [fp, #-22]	; 0xffffffea
   2a530:	ldr	r0, [fp, #12]
   2a534:	and	r0, r0, #2
   2a538:	str	r0, [sp, #12]
   2a53c:	ldr	r0, [fp, #-8]
   2a540:	ldrh	r1, [fp, #-10]
   2a544:	ldr	r2, [fp, #-8]
   2a548:	ldr	r2, [r2, #152]	; 0x98
   2a54c:	cmp	r2, #0
   2a550:	movw	r2, #0
   2a554:	moveq	r2, #1
   2a558:	mvn	r3, #0
   2a55c:	eor	r2, r2, r3
   2a560:	and	r3, r2, #1
   2a564:	sub	r2, fp, #22
   2a568:	str	r1, [sp, #8]
   2a56c:	mov	r1, r2
   2a570:	ldr	r2, [sp, #8]
   2a574:	uxth	r2, r2
   2a578:	str	ip, [sp, #4]
   2a57c:	bl	2a6f0 <flatcc_builder_embed_buffer@@Base+0x1e8>
   2a580:	cmp	r0, #0
   2a584:	beq	2a594 <flatcc_builder_embed_buffer@@Base+0x8c>
   2a588:	movw	r0, #0
   2a58c:	str	r0, [fp, #-4]
   2a590:	b	2a6e0 <flatcc_builder_embed_buffer@@Base+0x1d8>
   2a594:	ldr	r0, [fp, #-8]
   2a598:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a59c:	ldr	r2, [sp, #12]
   2a5a0:	cmp	r2, #0
   2a5a4:	movw	r2, #0
   2a5a8:	movne	r2, #1
   2a5ac:	tst	r2, #1
   2a5b0:	movw	r2, #4
   2a5b4:	moveq	r2, #0
   2a5b8:	add	r1, r1, r2
   2a5bc:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2a5c0:	bl	2a85c <flatcc_builder_embed_buffer@@Base+0x354>
   2a5c4:	str	r0, [fp, #-32]	; 0xffffffe0
   2a5c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a5cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a5d0:	add	r0, r0, r1
   2a5d4:	bl	2a890 <flatcc_builder_embed_buffer@@Base+0x388>
   2a5d8:	str	r0, [fp, #-28]	; 0xffffffe4
   2a5dc:	movw	r0, #0
   2a5e0:	str	r0, [sp, #16]
   2a5e4:	str	r0, [sp, #20]
   2a5e8:	ldr	r0, [fp, #-8]
   2a5ec:	ldr	r0, [r0, #152]	; 0x98
   2a5f0:	cmp	r0, #0
   2a5f4:	beq	2a634 <flatcc_builder_embed_buffer@@Base+0x12c>
   2a5f8:	ldr	r0, [sp, #16]
   2a5fc:	add	r0, r0, #4
   2a600:	str	r0, [sp, #16]
   2a604:	add	r0, sp, #16
   2a608:	add	r0, r0, #8
   2a60c:	ldr	r1, [sp, #20]
   2a610:	sub	r2, fp, #28
   2a614:	str	r2, [r0, r1, lsl #3]
   2a618:	ldr	r1, [sp, #20]
   2a61c:	add	r0, r0, r1, lsl #3
   2a620:	movw	r1, #4
   2a624:	str	r1, [r0, #4]
   2a628:	ldr	r0, [sp, #20]
   2a62c:	add	r0, r0, #1
   2a630:	str	r0, [sp, #20]
   2a634:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a638:	cmp	r0, #0
   2a63c:	bls	2a680 <flatcc_builder_embed_buffer@@Base+0x178>
   2a640:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a644:	ldr	r1, [sp, #16]
   2a648:	add	r0, r1, r0
   2a64c:	str	r0, [sp, #16]
   2a650:	ldr	r0, [fp, #-16]
   2a654:	add	r1, sp, #16
   2a658:	add	r1, r1, #8
   2a65c:	ldr	r2, [sp, #20]
   2a660:	str	r0, [r1, r2, lsl #3]
   2a664:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a668:	ldr	r2, [sp, #20]
   2a66c:	add	r1, r1, r2, lsl #3
   2a670:	str	r0, [r1, #4]
   2a674:	ldr	r0, [sp, #20]
   2a678:	add	r0, r0, #1
   2a67c:	str	r0, [sp, #20]
   2a680:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a684:	cmp	r0, #0
   2a688:	bls	2a6d0 <flatcc_builder_embed_buffer@@Base+0x1c8>
   2a68c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a690:	ldr	r1, [sp, #16]
   2a694:	add	r0, r1, r0
   2a698:	str	r0, [sp, #16]
   2a69c:	add	r0, sp, #16
   2a6a0:	add	r0, r0, #8
   2a6a4:	ldr	r1, [sp, #20]
   2a6a8:	ldr	r2, [pc, #60]	; 2a6ec <flatcc_builder_embed_buffer@@Base+0x1e4>
   2a6ac:	ldr	r2, [pc, r2]
   2a6b0:	str	r2, [r0, r1, lsl #3]
   2a6b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a6b8:	ldr	r2, [sp, #20]
   2a6bc:	add	r0, r0, r2, lsl #3
   2a6c0:	str	r1, [r0, #4]
   2a6c4:	ldr	r0, [sp, #20]
   2a6c8:	add	r0, r0, #1
   2a6cc:	str	r0, [sp, #20]
   2a6d0:	ldr	r0, [fp, #-8]
   2a6d4:	add	r1, sp, #16
   2a6d8:	bl	2a8a4 <flatcc_builder_embed_buffer@@Base+0x39c>
   2a6dc:	str	r0, [fp, #-4]
   2a6e0:	ldr	r0, [fp, #-4]
   2a6e4:	mov	sp, fp
   2a6e8:	pop	{fp, pc}
   2a6ec:			; <UNDEFINED> instruction: 0x000349b4
   2a6f0:	push	{fp, lr}
   2a6f4:	mov	fp, sp
   2a6f8:	sub	sp, sp, #104	; 0x68
   2a6fc:	str	r0, [fp, #-4]
   2a700:	str	r1, [fp, #-8]
   2a704:	strh	r2, [fp, #-10]
   2a708:	str	r3, [fp, #-16]
   2a70c:	ldrh	r0, [fp, #-10]
   2a710:	cmp	r0, #0
   2a714:	beq	2a724 <flatcc_builder_embed_buffer@@Base+0x21c>
   2a718:	ldrh	r0, [fp, #-10]
   2a71c:	str	r0, [sp, #8]
   2a720:	b	2a758 <flatcc_builder_embed_buffer@@Base+0x250>
   2a724:	ldr	r0, [fp, #-4]
   2a728:	ldrh	r0, [r0, #132]	; 0x84
   2a72c:	cmp	r0, #0
   2a730:	beq	2a744 <flatcc_builder_embed_buffer@@Base+0x23c>
   2a734:	ldr	r0, [fp, #-4]
   2a738:	ldrh	r0, [r0, #132]	; 0x84
   2a73c:	str	r0, [sp, #4]
   2a740:	b	2a750 <flatcc_builder_embed_buffer@@Base+0x248>
   2a744:	movw	r0, #1
   2a748:	str	r0, [sp, #4]
   2a74c:	b	2a750 <flatcc_builder_embed_buffer@@Base+0x248>
   2a750:	ldr	r0, [sp, #4]
   2a754:	str	r0, [sp, #8]
   2a758:	ldr	r0, [sp, #8]
   2a75c:	strh	r0, [fp, #-10]
   2a760:	ldr	r0, [fp, #-8]
   2a764:	movw	r1, #4
   2a768:	uxth	r1, r1
   2a76c:	bl	2c250 <flatcc_builder_start_vector@@Base+0xac>
   2a770:	ldr	r0, [fp, #-8]
   2a774:	ldrh	r1, [fp, #-10]
   2a778:	bl	2c250 <flatcc_builder_start_vector@@Base+0xac>
   2a77c:	ldr	r0, [fp, #-16]
   2a780:	cmp	r0, #0
   2a784:	bne	2a840 <flatcc_builder_embed_buffer@@Base+0x338>
   2a788:	ldr	r0, [fp, #-4]
   2a78c:	ldrh	r1, [fp, #-10]
   2a790:	bl	2f684 <flatcc_builder_get_emit_context@@Base+0x18>
   2a794:	str	r0, [fp, #-20]	; 0xffffffec
   2a798:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a79c:	cmp	r0, #0
   2a7a0:	beq	2a83c <flatcc_builder_embed_buffer@@Base+0x334>
   2a7a4:	movw	r0, #0
   2a7a8:	str	r0, [sp, #12]
   2a7ac:	str	r0, [sp, #16]
   2a7b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a7b4:	cmp	r0, #0
   2a7b8:	bls	2a800 <flatcc_builder_embed_buffer@@Base+0x2f8>
   2a7bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a7c0:	ldr	r1, [sp, #12]
   2a7c4:	add	r0, r1, r0
   2a7c8:	str	r0, [sp, #12]
   2a7cc:	add	r0, sp, #12
   2a7d0:	add	r0, r0, #8
   2a7d4:	ldr	r1, [sp, #16]
   2a7d8:	ldr	r2, [pc, #120]	; 2a858 <flatcc_builder_embed_buffer@@Base+0x350>
   2a7dc:	ldr	r2, [pc, r2]
   2a7e0:	str	r2, [r0, r1, lsl #3]
   2a7e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a7e8:	ldr	r2, [sp, #16]
   2a7ec:	add	r0, r0, r2, lsl #3
   2a7f0:	str	r1, [r0, #4]
   2a7f4:	ldr	r0, [sp, #16]
   2a7f8:	add	r0, r0, #1
   2a7fc:	str	r0, [sp, #16]
   2a800:	ldr	r0, [fp, #-4]
   2a804:	add	r1, sp, #12
   2a808:	bl	2c834 <flatcc_builder_create_vtable@@Base+0x104>
   2a80c:	movw	r1, #0
   2a810:	cmp	r1, r0
   2a814:	bne	2a838 <flatcc_builder_embed_buffer@@Base+0x330>
   2a818:	ldr	r0, [pc, #44]	; 2a84c <flatcc_builder_embed_buffer@@Base+0x344>
   2a81c:	add	r0, pc, r0
   2a820:	ldr	r1, [pc, #40]	; 2a850 <flatcc_builder_embed_buffer@@Base+0x348>
   2a824:	add	r1, pc, r1
   2a828:	ldr	r2, [pc, #36]	; 2a854 <flatcc_builder_embed_buffer@@Base+0x34c>
   2a82c:	add	r3, pc, r2
   2a830:	movw	r2, #702	; 0x2be
   2a834:	bl	14f08 <__assert_fail@plt>
   2a838:	b	2a83c <flatcc_builder_embed_buffer@@Base+0x334>
   2a83c:	b	2a840 <flatcc_builder_embed_buffer@@Base+0x338>
   2a840:	movw	r0, #0
   2a844:	mov	sp, fp
   2a848:	pop	{fp, pc}
   2a84c:	andeq	r1, r2, r3, lsr #19
   2a850:	ldrdeq	r0, [r2], -lr
   2a854:	andeq	r1, r2, r0, lsl r8
   2a858:	andeq	r4, r3, r4, lsl #17
   2a85c:	sub	sp, sp, #12
   2a860:	str	r0, [sp, #8]
   2a864:	str	r1, [sp, #4]
   2a868:	strh	r2, [sp, #2]
   2a86c:	ldr	r0, [sp, #8]
   2a870:	ldr	r0, [r0, #136]	; 0x88
   2a874:	ldr	r1, [sp, #4]
   2a878:	sub	r0, r0, r1
   2a87c:	ldrh	r1, [sp, #2]
   2a880:	sub	r1, r1, #1
   2a884:	and	r0, r0, r1
   2a888:	add	sp, sp, #12
   2a88c:	bx	lr
   2a890:	sub	sp, sp, #4
   2a894:	str	r0, [sp]
   2a898:	ldr	r0, [sp]
   2a89c:	add	sp, sp, #4
   2a8a0:	bx	lr
   2a8a4:	push	{fp, lr}
   2a8a8:	mov	fp, sp
   2a8ac:	sub	sp, sp, #24
   2a8b0:	str	r0, [fp, #-4]
   2a8b4:	str	r1, [fp, #-8]
   2a8b8:	ldr	r0, [fp, #-4]
   2a8bc:	ldr	r0, [r0, #136]	; 0x88
   2a8c0:	ldr	r1, [fp, #-8]
   2a8c4:	ldr	r1, [r1]
   2a8c8:	sub	r0, r0, r1
   2a8cc:	str	r0, [sp, #12]
   2a8d0:	ldr	r0, [fp, #-8]
   2a8d4:	ldr	r0, [r0]
   2a8d8:	cmp	r0, #16
   2a8dc:	bls	2a8f4 <flatcc_builder_embed_buffer@@Base+0x3ec>
   2a8e0:	ldr	r0, [fp, #-8]
   2a8e4:	ldr	r0, [r0]
   2a8e8:	sub	r0, r0, #16
   2a8ec:	cmn	r0, #1
   2a8f0:	bhi	2a908 <flatcc_builder_embed_buffer@@Base+0x400>
   2a8f4:	ldr	r0, [sp, #12]
   2a8f8:	ldr	r1, [fp, #-4]
   2a8fc:	ldr	r1, [r1, #136]	; 0x88
   2a900:	cmp	r0, r1
   2a904:	blt	2a928 <flatcc_builder_embed_buffer@@Base+0x420>
   2a908:	ldr	r0, [pc, #172]	; 2a9bc <flatcc_builder_embed_buffer@@Base+0x4b4>
   2a90c:	add	r0, pc, r0
   2a910:	ldr	r1, [pc, #168]	; 2a9c0 <flatcc_builder_embed_buffer@@Base+0x4b8>
   2a914:	add	r1, pc, r1
   2a918:	ldr	r2, [pc, #164]	; 2a9c4 <flatcc_builder_embed_buffer@@Base+0x4bc>
   2a91c:	add	r3, pc, r2
   2a920:	movw	r2, #647	; 0x287
   2a924:	bl	14f08 <__assert_fail@plt>
   2a928:	ldr	r0, [fp, #-4]
   2a92c:	ldr	r0, [r0, #44]	; 0x2c
   2a930:	ldr	r1, [fp, #-4]
   2a934:	ldr	r1, [r1, #36]	; 0x24
   2a938:	ldr	r2, [fp, #-8]
   2a93c:	add	r2, r2, #8
   2a940:	ldr	r3, [fp, #-8]
   2a944:	ldr	r3, [r3, #4]
   2a948:	ldr	ip, [sp, #12]
   2a94c:	ldr	lr, [fp, #-8]
   2a950:	ldr	lr, [lr]
   2a954:	str	r0, [sp, #8]
   2a958:	mov	r0, r1
   2a95c:	mov	r1, r2
   2a960:	mov	r2, r3
   2a964:	mov	r3, ip
   2a968:	str	lr, [sp]
   2a96c:	ldr	ip, [sp, #8]
   2a970:	blx	ip
   2a974:	cmp	r0, #0
   2a978:	beq	2a99c <flatcc_builder_embed_buffer@@Base+0x494>
   2a97c:	ldr	r0, [pc, #44]	; 2a9b0 <flatcc_builder_embed_buffer@@Base+0x4a8>
   2a980:	add	r0, pc, r0
   2a984:	ldr	r1, [pc, #40]	; 2a9b4 <flatcc_builder_embed_buffer@@Base+0x4ac>
   2a988:	add	r1, pc, r1
   2a98c:	ldr	r2, [pc, #36]	; 2a9b8 <flatcc_builder_embed_buffer@@Base+0x4b0>
   2a990:	add	r3, pc, r2
   2a994:	movw	r2, #651	; 0x28b
   2a998:	bl	14f08 <__assert_fail@plt>
   2a99c:	ldr	r0, [sp, #12]
   2a9a0:	ldr	r1, [fp, #-4]
   2a9a4:	str	r0, [r1, #136]	; 0x88
   2a9a8:	mov	sp, fp
   2a9ac:	pop	{fp, pc}
   2a9b0:	andeq	r1, r2, pc, lsr r8
   2a9b4:	andeq	r0, r2, sl, ror r6
   2a9b8:	andeq	r1, r2, lr, ror #13
   2a9bc:			; <UNDEFINED> instruction: 0x000218b3
   2a9c0:	andeq	r0, r2, lr, ror #13
   2a9c4:	andeq	r1, r2, r2, ror #14

0002a9c8 <flatcc_builder_create_buffer@@Base>:
   2a9c8:	push	{fp, lr}
   2a9cc:	mov	fp, sp
   2a9d0:	sub	sp, sp, #152	; 0x98
   2a9d4:	ldr	ip, [fp, #12]
   2a9d8:	ldr	lr, [fp, #8]
   2a9dc:	str	r0, [fp, #-8]
   2a9e0:	str	r1, [fp, #-12]
   2a9e4:	strh	r2, [fp, #-14]
   2a9e8:	str	r3, [fp, #-20]	; 0xffffffec
   2a9ec:	strh	lr, [fp, #-22]	; 0xffffffea
   2a9f0:	movw	r0, #0
   2a9f4:	str	r0, [fp, #-36]	; 0xffffffdc
   2a9f8:	str	r0, [sp, #28]
   2a9fc:	ldr	r0, [fp, #12]
   2aa00:	and	r0, r0, #1
   2aa04:	cmp	r0, #0
   2aa08:	movw	r0, #0
   2aa0c:	movne	r0, #1
   2aa10:	and	r0, r0, #1
   2aa14:	str	r0, [sp, #24]
   2aa18:	ldr	r0, [fp, #12]
   2aa1c:	and	r0, r0, #2
   2aa20:	cmp	r0, #0
   2aa24:	movw	r0, #0
   2aa28:	movne	r0, #1
   2aa2c:	and	r0, r0, #1
   2aa30:	str	r0, [sp, #20]
   2aa34:	ldr	r0, [fp, #-8]
   2aa38:	ldrh	r1, [fp, #-14]
   2aa3c:	ldr	r3, [sp, #24]
   2aa40:	sub	r2, fp, #22
   2aa44:	str	r1, [sp, #16]
   2aa48:	mov	r1, r2
   2aa4c:	ldr	r2, [sp, #16]
   2aa50:	uxth	r2, r2
   2aa54:	str	ip, [sp, #12]
   2aa58:	bl	2a6f0 <flatcc_builder_embed_buffer@@Base+0x1e8>
   2aa5c:	cmp	r0, #0
   2aa60:	beq	2aa70 <flatcc_builder_create_buffer@@Base+0xa8>
   2aa64:	movw	r0, #0
   2aa68:	str	r0, [fp, #-4]
   2aa6c:	b	2ad54 <flatcc_builder_create_buffer@@Base+0x38c>
   2aa70:	ldr	r0, [fp, #-8]
   2aa74:	ldrh	r1, [fp, #-22]	; 0xffffffea
   2aa78:	bl	2ad70 <flatcc_builder_create_buffer@@Base+0x3a8>
   2aa7c:	ldr	r0, [fp, #-12]
   2aa80:	movw	r1, #0
   2aa84:	cmp	r0, r1
   2aa88:	beq	2aac8 <flatcc_builder_create_buffer@@Base+0x100>
   2aa8c:	ldr	r0, [fp, #-12]
   2aa90:	ldrb	r1, [r0]
   2aa94:	strb	r1, [sp, #28]
   2aa98:	ldrb	r1, [r0, #1]
   2aa9c:	strb	r1, [sp, #29]
   2aaa0:	ldrb	r1, [r0, #2]
   2aaa4:	strb	r1, [sp, #30]
   2aaa8:	ldrb	r0, [r0, #3]
   2aaac:	strb	r0, [sp, #31]
   2aab0:	ldr	r0, [sp, #28]
   2aab4:	bl	2ada4 <flatcc_builder_create_buffer@@Base+0x3dc>
   2aab8:	str	r0, [sp, #28]
   2aabc:	ldr	r0, [sp, #28]
   2aac0:	bl	2a890 <flatcc_builder_embed_buffer@@Base+0x388>
   2aac4:	str	r0, [sp, #28]
   2aac8:	ldr	r0, [sp, #28]
   2aacc:	cmp	r0, #0
   2aad0:	movw	r0, #0
   2aad4:	movne	r0, #1
   2aad8:	tst	r0, #1
   2aadc:	movw	r0, #4
   2aae0:	mov	r1, r0
   2aae4:	moveq	r1, #0
   2aae8:	str	r1, [fp, #-36]	; 0xffffffdc
   2aaec:	ldr	r1, [fp, #-8]
   2aaf0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2aaf4:	add	r2, r2, #4
   2aaf8:	ldr	r3, [sp, #20]
   2aafc:	cmp	r3, #0
   2ab00:	movw	r3, #0
   2ab04:	movne	r3, #1
   2ab08:	tst	r3, #1
   2ab0c:	moveq	r0, #0
   2ab10:	add	r0, r2, r0
   2ab14:	str	r0, [sp, #8]
   2ab18:	mov	r0, r1
   2ab1c:	ldr	r1, [sp, #8]
   2ab20:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2ab24:	bl	2a85c <flatcc_builder_embed_buffer@@Base+0x354>
   2ab28:	str	r0, [fp, #-32]	; 0xffffffe0
   2ab2c:	movw	r0, #0
   2ab30:	str	r0, [sp, #32]
   2ab34:	str	r0, [sp, #36]	; 0x24
   2ab38:	ldr	r0, [sp, #24]
   2ab3c:	cmp	r0, #0
   2ab40:	bne	2ab50 <flatcc_builder_create_buffer@@Base+0x188>
   2ab44:	ldr	r0, [sp, #20]
   2ab48:	cmp	r0, #0
   2ab4c:	beq	2ab8c <flatcc_builder_create_buffer@@Base+0x1c4>
   2ab50:	ldr	r0, [sp, #32]
   2ab54:	add	r0, r0, #4
   2ab58:	str	r0, [sp, #32]
   2ab5c:	add	r0, sp, #32
   2ab60:	add	r0, r0, #8
   2ab64:	ldr	r1, [sp, #36]	; 0x24
   2ab68:	sub	r2, fp, #44	; 0x2c
   2ab6c:	str	r2, [r0, r1, lsl #3]
   2ab70:	ldr	r1, [sp, #36]	; 0x24
   2ab74:	add	r0, r0, r1, lsl #3
   2ab78:	movw	r1, #4
   2ab7c:	str	r1, [r0, #4]
   2ab80:	ldr	r0, [sp, #36]	; 0x24
   2ab84:	add	r0, r0, #1
   2ab88:	str	r0, [sp, #36]	; 0x24
   2ab8c:	ldr	r0, [sp, #32]
   2ab90:	add	r0, r0, #4
   2ab94:	str	r0, [sp, #32]
   2ab98:	add	r0, sp, #32
   2ab9c:	add	r0, r0, #8
   2aba0:	ldr	r1, [sp, #36]	; 0x24
   2aba4:	sub	r2, fp, #40	; 0x28
   2aba8:	str	r2, [r0, r1, lsl #3]
   2abac:	ldr	r1, [sp, #36]	; 0x24
   2abb0:	add	r0, r0, r1, lsl #3
   2abb4:	movw	r1, #4
   2abb8:	str	r1, [r0, #4]
   2abbc:	ldr	r0, [sp, #36]	; 0x24
   2abc0:	add	r0, r0, #1
   2abc4:	str	r0, [sp, #36]	; 0x24
   2abc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2abcc:	cmp	r0, #0
   2abd0:	bls	2ac14 <flatcc_builder_create_buffer@@Base+0x24c>
   2abd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2abd8:	ldr	r1, [sp, #32]
   2abdc:	add	r0, r1, r0
   2abe0:	str	r0, [sp, #32]
   2abe4:	add	r0, sp, #32
   2abe8:	add	r0, r0, #8
   2abec:	ldr	r1, [sp, #36]	; 0x24
   2abf0:	add	r2, sp, #28
   2abf4:	str	r2, [r0, r1, lsl #3]
   2abf8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2abfc:	ldr	r2, [sp, #36]	; 0x24
   2ac00:	add	r0, r0, r2, lsl #3
   2ac04:	str	r1, [r0, #4]
   2ac08:	ldr	r0, [sp, #36]	; 0x24
   2ac0c:	add	r0, r0, #1
   2ac10:	str	r0, [sp, #36]	; 0x24
   2ac14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ac18:	cmp	r0, #0
   2ac1c:	bls	2ac64 <flatcc_builder_create_buffer@@Base+0x29c>
   2ac20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ac24:	ldr	r1, [sp, #32]
   2ac28:	add	r0, r1, r0
   2ac2c:	str	r0, [sp, #32]
   2ac30:	add	r0, sp, #32
   2ac34:	add	r0, r0, #8
   2ac38:	ldr	r1, [sp, #36]	; 0x24
   2ac3c:	ldr	r2, [pc, #296]	; 2ad6c <flatcc_builder_create_buffer@@Base+0x3a4>
   2ac40:	ldr	r2, [pc, r2]
   2ac44:	str	r2, [r0, r1, lsl #3]
   2ac48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ac4c:	ldr	r2, [sp, #36]	; 0x24
   2ac50:	add	r0, r0, r2, lsl #3
   2ac54:	str	r1, [r0, #4]
   2ac58:	ldr	r0, [sp, #36]	; 0x24
   2ac5c:	add	r0, r0, #1
   2ac60:	str	r0, [sp, #36]	; 0x24
   2ac64:	ldr	r0, [fp, #-8]
   2ac68:	ldr	r0, [r0, #136]	; 0x88
   2ac6c:	ldr	r1, [sp, #32]
   2ac70:	sub	r0, r0, r1
   2ac74:	ldr	r1, [sp, #24]
   2ac78:	cmp	r1, #0
   2ac7c:	movw	r1, #1
   2ac80:	str	r0, [sp, #4]
   2ac84:	str	r1, [sp]
   2ac88:	bne	2aca0 <flatcc_builder_create_buffer@@Base+0x2d8>
   2ac8c:	ldr	r0, [sp, #20]
   2ac90:	cmp	r0, #0
   2ac94:	movw	r0, #0
   2ac98:	movne	r0, #1
   2ac9c:	str	r0, [sp]
   2aca0:	ldr	r0, [sp]
   2aca4:	tst	r0, #1
   2aca8:	movw	r0, #4
   2acac:	moveq	r0, #0
   2acb0:	ldr	r1, [sp, #4]
   2acb4:	add	r0, r1, r0
   2acb8:	str	r0, [fp, #-48]	; 0xffffffd0
   2acbc:	ldr	r0, [sp, #24]
   2acc0:	cmp	r0, #0
   2acc4:	beq	2ace4 <flatcc_builder_create_buffer@@Base+0x31c>
   2acc8:	ldr	r0, [fp, #-8]
   2accc:	ldr	r0, [r0, #144]	; 0x90
   2acd0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2acd4:	sub	r0, r0, r1
   2acd8:	bl	2a890 <flatcc_builder_embed_buffer@@Base+0x388>
   2acdc:	str	r0, [fp, #-44]	; 0xffffffd4
   2ace0:	b	2acfc <flatcc_builder_create_buffer@@Base+0x334>
   2ace4:	ldr	r0, [fp, #-8]
   2ace8:	ldr	r0, [r0, #140]	; 0x8c
   2acec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2acf0:	sub	r0, r0, r1
   2acf4:	bl	2a890 <flatcc_builder_embed_buffer@@Base+0x388>
   2acf8:	str	r0, [fp, #-44]	; 0xffffffd4
   2acfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ad00:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2ad04:	sub	r0, r0, r1
   2ad08:	bl	2a890 <flatcc_builder_embed_buffer@@Base+0x388>
   2ad0c:	str	r0, [fp, #-40]	; 0xffffffd8
   2ad10:	ldr	r0, [fp, #-8]
   2ad14:	add	r1, sp, #32
   2ad18:	bl	2a8a4 <flatcc_builder_embed_buffer@@Base+0x39c>
   2ad1c:	str	r0, [fp, #-28]	; 0xffffffe4
   2ad20:	movw	r1, #0
   2ad24:	cmp	r1, r0
   2ad28:	bne	2ad4c <flatcc_builder_create_buffer@@Base+0x384>
   2ad2c:	ldr	r0, [pc, #44]	; 2ad60 <flatcc_builder_create_buffer@@Base+0x398>
   2ad30:	add	r0, pc, r0
   2ad34:	ldr	r1, [pc, #40]	; 2ad64 <flatcc_builder_create_buffer@@Base+0x39c>
   2ad38:	add	r1, pc, r1
   2ad3c:	ldr	r2, [pc, #36]	; 2ad68 <flatcc_builder_create_buffer@@Base+0x3a0>
   2ad40:	add	r3, pc, r2
   2ad44:	movw	r2, #772	; 0x304
   2ad48:	bl	14f08 <__assert_fail@plt>
   2ad4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ad50:	str	r0, [fp, #-4]
   2ad54:	ldr	r0, [fp, #-4]
   2ad58:	mov	sp, fp
   2ad5c:	pop	{fp, pc}
   2ad60:	andeq	r1, r2, pc, lsl #9
   2ad64:	andeq	r0, r2, sl, asr #5
   2ad68:	andeq	r0, r2, r4, lsl r4
   2ad6c:	andeq	r4, r3, r0, lsr #8
   2ad70:	sub	sp, sp, #8
   2ad74:	str	r0, [sp, #4]
   2ad78:	strh	r1, [sp, #2]
   2ad7c:	ldr	r0, [sp, #4]
   2ad80:	ldrh	r0, [r0, #128]	; 0x80
   2ad84:	ldrh	r1, [sp, #2]
   2ad88:	cmp	r0, r1
   2ad8c:	bge	2ad9c <flatcc_builder_create_buffer@@Base+0x3d4>
   2ad90:	ldrh	r0, [sp, #2]
   2ad94:	ldr	r1, [sp, #4]
   2ad98:	strh	r0, [r1, #128]	; 0x80
   2ad9c:	add	sp, sp, #8
   2ada0:	bx	lr
   2ada4:	sub	sp, sp, #4
   2ada8:	str	r0, [sp]
   2adac:	ldr	r0, [sp]
   2adb0:	add	sp, sp, #4
   2adb4:	bx	lr

0002adb8 <flatcc_builder_create_struct@@Base>:
   2adb8:	push	{fp, lr}
   2adbc:	mov	fp, sp
   2adc0:	sub	sp, sp, #96	; 0x60
   2adc4:	str	r0, [fp, #-4]
   2adc8:	str	r1, [fp, #-8]
   2adcc:	str	r2, [fp, #-12]
   2add0:	strh	r3, [fp, #-14]
   2add4:	ldrh	r0, [fp, #-14]
   2add8:	cmp	r0, #1
   2addc:	blt	2ade4 <flatcc_builder_create_struct@@Base+0x2c>
   2ade0:	b	2ae04 <flatcc_builder_create_struct@@Base+0x4c>
   2ade4:	ldr	r0, [pc, #244]	; 2aee0 <flatcc_builder_create_struct@@Base+0x128>
   2ade8:	add	r0, pc, r0
   2adec:	ldr	r1, [pc, #240]	; 2aee4 <flatcc_builder_create_struct@@Base+0x12c>
   2adf0:	add	r1, pc, r1
   2adf4:	ldr	r2, [pc, #236]	; 2aee8 <flatcc_builder_create_struct@@Base+0x130>
   2adf8:	add	r3, pc, r2
   2adfc:	movw	r2, #783	; 0x30f
   2ae00:	bl	14f08 <__assert_fail@plt>
   2ae04:	ldr	r0, [fp, #-4]
   2ae08:	ldrh	r1, [fp, #-14]
   2ae0c:	bl	2ad70 <flatcc_builder_create_buffer@@Base+0x3a8>
   2ae10:	ldr	r0, [fp, #-4]
   2ae14:	ldr	r1, [fp, #-12]
   2ae18:	ldrh	r2, [fp, #-14]
   2ae1c:	bl	2a85c <flatcc_builder_embed_buffer@@Base+0x354>
   2ae20:	str	r0, [fp, #-20]	; 0xffffffec
   2ae24:	movw	r0, #0
   2ae28:	str	r0, [sp, #4]
   2ae2c:	str	r0, [sp, #8]
   2ae30:	ldr	r0, [fp, #-12]
   2ae34:	cmp	r0, #0
   2ae38:	bls	2ae7c <flatcc_builder_create_struct@@Base+0xc4>
   2ae3c:	ldr	r0, [fp, #-12]
   2ae40:	ldr	r1, [sp, #4]
   2ae44:	add	r0, r1, r0
   2ae48:	str	r0, [sp, #4]
   2ae4c:	ldr	r0, [fp, #-8]
   2ae50:	add	r1, sp, #4
   2ae54:	add	r1, r1, #8
   2ae58:	ldr	r2, [sp, #8]
   2ae5c:	str	r0, [r1, r2, lsl #3]
   2ae60:	ldr	r0, [fp, #-12]
   2ae64:	ldr	r2, [sp, #8]
   2ae68:	add	r1, r1, r2, lsl #3
   2ae6c:	str	r0, [r1, #4]
   2ae70:	ldr	r0, [sp, #8]
   2ae74:	add	r0, r0, #1
   2ae78:	str	r0, [sp, #8]
   2ae7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ae80:	cmp	r0, #0
   2ae84:	bls	2aecc <flatcc_builder_create_struct@@Base+0x114>
   2ae88:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ae8c:	ldr	r1, [sp, #4]
   2ae90:	add	r0, r1, r0
   2ae94:	str	r0, [sp, #4]
   2ae98:	add	r0, sp, #4
   2ae9c:	add	r0, r0, #8
   2aea0:	ldr	r1, [sp, #8]
   2aea4:	ldr	r2, [pc, #64]	; 2aeec <flatcc_builder_create_struct@@Base+0x134>
   2aea8:	ldr	r2, [pc, r2]
   2aeac:	str	r2, [r0, r1, lsl #3]
   2aeb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2aeb4:	ldr	r2, [sp, #8]
   2aeb8:	add	r0, r0, r2, lsl #3
   2aebc:	str	r1, [r0, #4]
   2aec0:	ldr	r0, [sp, #8]
   2aec4:	add	r0, r0, #1
   2aec8:	str	r0, [sp, #8]
   2aecc:	ldr	r0, [fp, #-4]
   2aed0:	add	r1, sp, #4
   2aed4:	bl	2a8a4 <flatcc_builder_embed_buffer@@Base+0x39c>
   2aed8:	mov	sp, fp
   2aedc:	pop	{fp, pc}
   2aee0:	andeq	r0, r2, pc, ror #7
   2aee4:	andeq	r0, r2, r2, lsl r2
   2aee8:	andeq	r0, r2, sl, ror #7
   2aeec:			; <UNDEFINED> instruction: 0x000341b8

0002aef0 <flatcc_builder_start_buffer@@Base>:
   2aef0:	push	{fp, lr}
   2aef4:	mov	fp, sp
   2aef8:	sub	sp, sp, #32
   2aefc:	str	r0, [fp, #-8]
   2af00:	str	r1, [fp, #-12]
   2af04:	strh	r2, [fp, #-14]
   2af08:	str	r3, [sp, #12]
   2af0c:	ldr	r0, [fp, #-8]
   2af10:	ldr	r1, [fp, #-8]
   2af14:	ldrh	r1, [r1, #128]	; 0x80
   2af18:	bl	2b068 <flatcc_builder_start_buffer@@Base+0x178>
   2af1c:	cmp	r0, #0
   2af20:	beq	2af30 <flatcc_builder_start_buffer@@Base+0x40>
   2af24:	mvn	r0, #0
   2af28:	str	r0, [fp, #-4]
   2af2c:	b	2b058 <flatcc_builder_start_buffer@@Base+0x168>
   2af30:	ldr	r0, [fp, #-8]
   2af34:	movw	r1, #1
   2af38:	strh	r1, [r0, #128]	; 0x80
   2af3c:	ldr	r0, [fp, #-8]
   2af40:	ldrh	r0, [r0, #132]	; 0x84
   2af44:	ldr	r1, [fp, #-8]
   2af48:	ldr	r1, [r1, #32]
   2af4c:	strh	r0, [r1, #34]	; 0x22
   2af50:	ldrh	r0, [fp, #-14]
   2af54:	ldr	r1, [fp, #-8]
   2af58:	strh	r0, [r1, #132]	; 0x84
   2af5c:	ldr	r0, [fp, #-8]
   2af60:	ldrh	r0, [r0, #164]	; 0xa4
   2af64:	ldr	r1, [fp, #-8]
   2af68:	ldr	r1, [r1, #32]
   2af6c:	strh	r0, [r1, #32]
   2af70:	ldr	r0, [sp, #12]
   2af74:	ldr	r1, [fp, #-8]
   2af78:	strh	r0, [r1, #164]	; 0xa4
   2af7c:	ldr	r0, [fp, #-8]
   2af80:	ldr	r0, [r0, #144]	; 0x90
   2af84:	ldr	r1, [fp, #-8]
   2af88:	ldr	r1, [r1, #32]
   2af8c:	str	r0, [r1, #20]
   2af90:	ldr	r0, [fp, #-8]
   2af94:	ldr	r0, [r0, #152]	; 0x98
   2af98:	ldr	r1, [fp, #-8]
   2af9c:	ldr	r1, [r1, #32]
   2afa0:	str	r0, [r1, #28]
   2afa4:	ldr	r0, [fp, #-8]
   2afa8:	ldr	r0, [r0, #136]	; 0x88
   2afac:	ldr	r1, [fp, #-8]
   2afb0:	str	r0, [r1, #144]	; 0x90
   2afb4:	ldr	r0, [fp, #-8]
   2afb8:	ldr	r1, [r0, #148]	; 0x94
   2afbc:	add	r2, r1, #1
   2afc0:	str	r2, [r0, #148]	; 0x94
   2afc4:	ldr	r0, [fp, #-8]
   2afc8:	str	r1, [r0, #152]	; 0x98
   2afcc:	ldr	r0, [fp, #-8]
   2afd0:	ldr	r0, [r0, #168]	; 0xa8
   2afd4:	ldr	r1, [fp, #-8]
   2afd8:	ldr	r1, [r1, #32]
   2afdc:	str	r0, [r1, #16]
   2afe0:	ldr	r0, [fp, #-8]
   2afe4:	add	r0, r0, #168	; 0xa8
   2afe8:	ldr	r1, [fp, #-12]
   2afec:	movw	r2, #0
   2aff0:	cmp	r1, r2
   2aff4:	str	r0, [sp, #8]
   2aff8:	beq	2b008 <flatcc_builder_start_buffer@@Base+0x118>
   2affc:	ldr	r0, [fp, #-12]
   2b000:	str	r0, [sp, #4]
   2b004:	b	2b018 <flatcc_builder_start_buffer@@Base+0x128>
   2b008:	ldr	r0, [pc, #84]	; 2b064 <flatcc_builder_start_buffer@@Base+0x174>
   2b00c:	ldr	r0, [pc, r0]
   2b010:	str	r0, [sp, #4]
   2b014:	b	2b018 <flatcc_builder_start_buffer@@Base+0x128>
   2b018:	ldr	r0, [sp, #4]
   2b01c:	ldrb	r1, [r0]
   2b020:	ldr	r2, [sp, #8]
   2b024:	strb	r1, [r2]
   2b028:	ldrb	r1, [r0, #1]
   2b02c:	strb	r1, [r2, #1]
   2b030:	ldrb	r1, [r0, #2]
   2b034:	strb	r1, [r2, #2]
   2b038:	ldrb	r0, [r0, #3]
   2b03c:	strb	r0, [r2, #3]
   2b040:	ldr	r0, [fp, #-8]
   2b044:	ldr	r0, [r0, #32]
   2b048:	movw	r1, #1
   2b04c:	strh	r1, [r0, #14]
   2b050:	movw	r0, #0
   2b054:	str	r0, [fp, #-4]
   2b058:	ldr	r0, [fp, #-4]
   2b05c:	mov	sp, fp
   2b060:	pop	{fp, pc}
   2b064:	andeq	r4, r3, r4, asr r0
   2b068:	push	{fp, lr}
   2b06c:	mov	fp, sp
   2b070:	sub	sp, sp, #24
   2b074:	str	r0, [fp, #-8]
   2b078:	strh	r1, [fp, #-10]
   2b07c:	ldr	r0, [fp, #-8]
   2b080:	ldr	r1, [r0, #156]	; 0x9c
   2b084:	add	r1, r1, #1
   2b088:	str	r1, [r0, #156]	; 0x9c
   2b08c:	ldr	r0, [fp, #-8]
   2b090:	ldr	r0, [r0, #160]	; 0xa0
   2b094:	cmp	r1, r0
   2b098:	ble	2b184 <flatcc_builder_start_buffer@@Base+0x294>
   2b09c:	ldr	r0, [fp, #-8]
   2b0a0:	ldr	r0, [r0, #176]	; 0xb0
   2b0a4:	cmp	r0, #0
   2b0a8:	ble	2b0d0 <flatcc_builder_start_buffer@@Base+0x1e0>
   2b0ac:	ldr	r0, [fp, #-8]
   2b0b0:	ldr	r0, [r0, #156]	; 0x9c
   2b0b4:	ldr	r1, [fp, #-8]
   2b0b8:	ldr	r1, [r1, #176]	; 0xb0
   2b0bc:	cmp	r0, r1
   2b0c0:	ble	2b0d0 <flatcc_builder_start_buffer@@Base+0x1e0>
   2b0c4:	mvn	r0, #0
   2b0c8:	str	r0, [fp, #-4]
   2b0cc:	b	2b228 <flatcc_builder_start_buffer@@Base+0x338>
   2b0d0:	ldr	r0, [fp, #-8]
   2b0d4:	ldr	r1, [fp, #-8]
   2b0d8:	ldr	r1, [r1, #156]	; 0x9c
   2b0dc:	sub	r1, r1, #1
   2b0e0:	movw	r2, #36	; 0x24
   2b0e4:	mul	r1, r1, r2
   2b0e8:	movw	r3, #4
   2b0ec:	str	r1, [sp, #8]
   2b0f0:	mov	r1, r3
   2b0f4:	ldr	r3, [sp, #8]
   2b0f8:	str	r2, [sp, #4]
   2b0fc:	mov	r2, r3
   2b100:	ldr	r3, [sp, #4]
   2b104:	movw	ip, #0
   2b108:	str	ip, [sp]
   2b10c:	bl	2a1fc <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2b110:	ldr	r1, [fp, #-8]
   2b114:	str	r0, [r1, #32]
   2b118:	movw	r1, #0
   2b11c:	cmp	r0, r1
   2b120:	bne	2b130 <flatcc_builder_start_buffer@@Base+0x240>
   2b124:	mvn	r0, #0
   2b128:	str	r0, [fp, #-4]
   2b12c:	b	2b228 <flatcc_builder_start_buffer@@Base+0x338>
   2b130:	ldr	r0, [fp, #-8]
   2b134:	ldr	r0, [r0, #88]	; 0x58
   2b138:	movw	r1, #36	; 0x24
   2b13c:	udiv	r0, r0, r1
   2b140:	ldr	r1, [fp, #-8]
   2b144:	str	r0, [r1, #160]	; 0xa0
   2b148:	ldr	r0, [fp, #-8]
   2b14c:	ldr	r0, [r0, #176]	; 0xb0
   2b150:	cmp	r0, #0
   2b154:	ble	2b180 <flatcc_builder_start_buffer@@Base+0x290>
   2b158:	ldr	r0, [fp, #-8]
   2b15c:	ldr	r0, [r0, #176]	; 0xb0
   2b160:	ldr	r1, [fp, #-8]
   2b164:	ldr	r1, [r1, #160]	; 0xa0
   2b168:	cmp	r0, r1
   2b16c:	bge	2b180 <flatcc_builder_start_buffer@@Base+0x290>
   2b170:	ldr	r0, [fp, #-8]
   2b174:	ldr	r0, [r0, #176]	; 0xb0
   2b178:	ldr	r1, [fp, #-8]
   2b17c:	str	r0, [r1, #160]	; 0xa0
   2b180:	b	2b194 <flatcc_builder_start_buffer@@Base+0x2a4>
   2b184:	ldr	r0, [fp, #-8]
   2b188:	ldr	r1, [r0, #32]
   2b18c:	add	r1, r1, #36	; 0x24
   2b190:	str	r1, [r0, #32]
   2b194:	ldr	r0, [fp, #-8]
   2b198:	ldr	r0, [r0, #20]
   2b19c:	ldr	r1, [fp, #-8]
   2b1a0:	ldr	r1, [r1, #32]
   2b1a4:	str	r0, [r1, #8]
   2b1a8:	ldr	r0, [fp, #-8]
   2b1ac:	ldrh	r0, [r0, #130]	; 0x82
   2b1b0:	ldr	r1, [fp, #-8]
   2b1b4:	ldr	r1, [r1, #32]
   2b1b8:	strh	r0, [r1, #12]
   2b1bc:	ldrh	r0, [fp, #-10]
   2b1c0:	ldr	r1, [fp, #-8]
   2b1c4:	strh	r0, [r1, #130]	; 0x82
   2b1c8:	ldr	r0, [fp, #-8]
   2b1cc:	ldr	r0, [r0, #28]
   2b1d0:	ldr	r1, [fp, #-8]
   2b1d4:	ldr	r1, [r1, #32]
   2b1d8:	str	r0, [r1]
   2b1dc:	ldr	r0, [fp, #-8]
   2b1e0:	ldr	r0, [r0, #32]
   2b1e4:	mvn	r1, #3
   2b1e8:	str	r1, [r0, #4]
   2b1ec:	ldr	r0, [fp, #-8]
   2b1f0:	ldr	r0, [r0, #28]
   2b1f4:	ldr	r1, [fp, #-8]
   2b1f8:	ldr	r1, [r1, #20]
   2b1fc:	add	r0, r0, r1
   2b200:	add	r0, r0, #8
   2b204:	sub	r0, r0, #1
   2b208:	mvn	r1, #7
   2b20c:	and	r0, r0, r1
   2b210:	ldr	r1, [fp, #-8]
   2b214:	str	r0, [r1, #28]
   2b218:	ldr	r0, [fp, #-8]
   2b21c:	movw	r1, #0
   2b220:	str	r1, [r0, #20]
   2b224:	str	r1, [fp, #-4]
   2b228:	ldr	r0, [fp, #-4]
   2b22c:	mov	sp, fp
   2b230:	pop	{fp, pc}

0002b234 <flatcc_builder_end_buffer@@Base>:
   2b234:	push	{fp, lr}
   2b238:	mov	fp, sp
   2b23c:	sub	sp, sp, #32
   2b240:	str	r0, [fp, #-8]
   2b244:	str	r1, [fp, #-12]
   2b248:	ldr	r0, [fp, #-8]
   2b24c:	ldrh	r0, [r0, #164]	; 0xa4
   2b250:	and	r0, r0, #2
   2b254:	str	r0, [sp, #12]
   2b258:	ldr	r0, [fp, #-8]
   2b25c:	ldr	r0, [r0, #152]	; 0x98
   2b260:	cmp	r0, #0
   2b264:	movw	r0, #0
   2b268:	moveq	r0, #1
   2b26c:	tst	r0, #1
   2b270:	movw	r0, #0
   2b274:	moveq	r0, #1
   2b278:	ldr	r1, [sp, #12]
   2b27c:	orr	r0, r1, r0
   2b280:	str	r0, [sp, #12]
   2b284:	ldr	r0, [fp, #-8]
   2b288:	ldr	r0, [r0, #32]
   2b28c:	ldrh	r0, [r0, #14]
   2b290:	cmp	r0, #1
   2b294:	bne	2b29c <flatcc_builder_end_buffer@@Base+0x68>
   2b298:	b	2b2bc <flatcc_builder_end_buffer@@Base+0x88>
   2b29c:	ldr	r0, [pc, #232]	; 2b38c <flatcc_builder_end_buffer@@Base+0x158>
   2b2a0:	add	r0, pc, r0
   2b2a4:	ldr	r1, [pc, #228]	; 2b390 <flatcc_builder_end_buffer@@Base+0x15c>
   2b2a8:	add	r1, pc, r1
   2b2ac:	ldr	r2, [pc, #224]	; 2b394 <flatcc_builder_end_buffer@@Base+0x160>
   2b2b0:	add	r3, pc, r2
   2b2b4:	movw	r2, #838	; 0x346
   2b2b8:	bl	14f08 <__assert_fail@plt>
   2b2bc:	ldr	r0, [fp, #-8]
   2b2c0:	ldr	r1, [fp, #-8]
   2b2c4:	ldrh	r1, [r1, #132]	; 0x84
   2b2c8:	bl	2ad70 <flatcc_builder_create_buffer@@Base+0x3a8>
   2b2cc:	ldr	r0, [fp, #-8]
   2b2d0:	ldr	r1, [fp, #-8]
   2b2d4:	add	r1, r1, #168	; 0xa8
   2b2d8:	ldr	r2, [fp, #-8]
   2b2dc:	ldrh	r2, [r2, #132]	; 0x84
   2b2e0:	ldr	r3, [fp, #-12]
   2b2e4:	ldr	ip, [fp, #-8]
   2b2e8:	ldrh	ip, [ip, #128]	; 0x80
   2b2ec:	ldr	lr, [sp, #12]
   2b2f0:	uxth	r2, r2
   2b2f4:	uxth	ip, ip
   2b2f8:	str	ip, [sp]
   2b2fc:	str	lr, [sp, #4]
   2b300:	bl	2a9c8 <flatcc_builder_create_buffer@@Base>
   2b304:	str	r0, [sp, #16]
   2b308:	movw	r1, #0
   2b30c:	cmp	r1, r0
   2b310:	bne	2b320 <flatcc_builder_end_buffer@@Base+0xec>
   2b314:	movw	r0, #0
   2b318:	str	r0, [fp, #-4]
   2b31c:	b	2b380 <flatcc_builder_end_buffer@@Base+0x14c>
   2b320:	ldr	r0, [fp, #-8]
   2b324:	ldr	r0, [r0, #32]
   2b328:	ldr	r0, [r0, #20]
   2b32c:	ldr	r1, [fp, #-8]
   2b330:	str	r0, [r1, #144]	; 0x90
   2b334:	ldr	r0, [fp, #-8]
   2b338:	ldr	r0, [r0, #32]
   2b33c:	ldr	r0, [r0, #28]
   2b340:	ldr	r1, [fp, #-8]
   2b344:	str	r0, [r1, #152]	; 0x98
   2b348:	ldr	r0, [fp, #-8]
   2b34c:	ldr	r0, [r0, #32]
   2b350:	ldr	r0, [r0, #16]
   2b354:	ldr	r1, [fp, #-8]
   2b358:	str	r0, [r1, #168]	; 0xa8
   2b35c:	ldr	r0, [fp, #-8]
   2b360:	ldr	r0, [r0, #32]
   2b364:	ldrh	r0, [r0, #32]
   2b368:	ldr	r1, [fp, #-8]
   2b36c:	strh	r0, [r1, #164]	; 0xa4
   2b370:	ldr	r0, [fp, #-8]
   2b374:	bl	2b398 <flatcc_builder_end_buffer@@Base+0x164>
   2b378:	ldr	r0, [sp, #16]
   2b37c:	str	r0, [fp, #-4]
   2b380:	ldr	r0, [fp, #-4]
   2b384:	mov	sp, fp
   2b388:	pop	{fp, pc}
   2b38c:	andeq	pc, r1, r8, lsr #31
   2b390:	andeq	pc, r1, sl, asr sp	; <UNPREDICTABLE>
   2b394:	andeq	pc, r1, r4, asr #31
   2b398:	push	{fp, lr}
   2b39c:	mov	fp, sp
   2b3a0:	sub	sp, sp, #8
   2b3a4:	str	r0, [sp, #4]
   2b3a8:	ldr	r0, [sp, #4]
   2b3ac:	ldr	r0, [r0, #16]
   2b3b0:	ldr	r1, [sp, #4]
   2b3b4:	ldr	r2, [r1, #20]
   2b3b8:	movw	r1, #0
   2b3bc:	and	r1, r1, #255	; 0xff
   2b3c0:	bl	14ec0 <memset@plt>
   2b3c4:	ldr	r0, [sp, #4]
   2b3c8:	ldr	r0, [r0, #32]
   2b3cc:	ldr	r0, [r0, #8]
   2b3d0:	ldr	r1, [sp, #4]
   2b3d4:	str	r0, [r1, #20]
   2b3d8:	ldr	r0, [sp, #4]
   2b3dc:	ldr	r0, [r0, #32]
   2b3e0:	ldr	r0, [r0]
   2b3e4:	ldr	r1, [sp, #4]
   2b3e8:	str	r0, [r1, #28]
   2b3ec:	ldr	r0, [sp, #4]
   2b3f0:	ldr	r1, [sp, #4]
   2b3f4:	ldr	r1, [r1, #32]
   2b3f8:	ldr	r1, [r1, #4]
   2b3fc:	bl	2b4c4 <flatcc_builder_start_struct@@Base+0x70>
   2b400:	ldr	r0, [sp, #4]
   2b404:	ldr	r1, [sp, #4]
   2b408:	ldrh	r1, [r1, #130]	; 0x82
   2b40c:	bl	2ad70 <flatcc_builder_create_buffer@@Base+0x3a8>
   2b410:	ldr	r0, [sp, #4]
   2b414:	ldr	r0, [r0, #32]
   2b418:	ldrh	r0, [r0, #12]
   2b41c:	ldr	r1, [sp, #4]
   2b420:	strh	r0, [r1, #130]	; 0x82
   2b424:	ldr	r0, [sp, #4]
   2b428:	ldr	r1, [r0, #32]
   2b42c:	mvn	r2, #35	; 0x23
   2b430:	add	r1, r1, r2
   2b434:	str	r1, [r0, #32]
   2b438:	ldr	r0, [sp, #4]
   2b43c:	ldr	r1, [r0, #156]	; 0x9c
   2b440:	mvn	r2, #0
   2b444:	add	r1, r1, r2
   2b448:	str	r1, [r0, #156]	; 0x9c
   2b44c:	mov	sp, fp
   2b450:	pop	{fp, pc}

0002b454 <flatcc_builder_start_struct@@Base>:
   2b454:	push	{fp, lr}
   2b458:	mov	fp, sp
   2b45c:	sub	sp, sp, #16
   2b460:	str	r0, [sp, #8]
   2b464:	str	r1, [sp, #4]
   2b468:	strh	r2, [sp, #2]
   2b46c:	ldr	r0, [sp, #8]
   2b470:	ldrh	r1, [sp, #2]
   2b474:	bl	2b068 <flatcc_builder_start_buffer@@Base+0x178>
   2b478:	cmp	r0, #0
   2b47c:	beq	2b48c <flatcc_builder_start_struct@@Base+0x38>
   2b480:	movw	r0, #0
   2b484:	str	r0, [fp, #-4]
   2b488:	b	2b4b8 <flatcc_builder_start_struct@@Base+0x64>
   2b48c:	ldr	r0, [sp, #8]
   2b490:	ldr	r0, [r0, #32]
   2b494:	movw	r1, #2
   2b498:	strh	r1, [r0, #14]
   2b49c:	ldr	r0, [sp, #8]
   2b4a0:	mvn	r1, #3
   2b4a4:	bl	2b4c4 <flatcc_builder_start_struct@@Base+0x70>
   2b4a8:	ldr	r0, [sp, #8]
   2b4ac:	ldr	r1, [sp, #4]
   2b4b0:	bl	2b550 <flatcc_builder_start_struct@@Base+0xfc>
   2b4b4:	str	r0, [fp, #-4]
   2b4b8:	ldr	r0, [fp, #-4]
   2b4bc:	mov	sp, fp
   2b4c0:	pop	{fp, pc}
   2b4c4:	sub	sp, sp, #12
   2b4c8:	str	r0, [sp, #8]
   2b4cc:	str	r1, [sp, #4]
   2b4d0:	ldr	r0, [sp, #8]
   2b4d4:	add	r0, r0, #52	; 0x34
   2b4d8:	add	r0, r0, #8
   2b4dc:	str	r0, [sp]
   2b4e0:	ldr	r0, [sp, #8]
   2b4e4:	ldr	r0, [r0, #60]	; 0x3c
   2b4e8:	ldr	r1, [sp, #8]
   2b4ec:	ldr	r1, [r1, #28]
   2b4f0:	add	r0, r0, r1
   2b4f4:	ldr	r1, [sp, #8]
   2b4f8:	str	r0, [r1, #16]
   2b4fc:	ldr	r0, [sp]
   2b500:	ldr	r0, [r0, #4]
   2b504:	ldr	r1, [sp, #8]
   2b508:	ldr	r1, [r1, #28]
   2b50c:	sub	r0, r0, r1
   2b510:	ldr	r1, [sp, #8]
   2b514:	str	r0, [r1, #24]
   2b518:	ldr	r0, [sp, #8]
   2b51c:	ldr	r0, [r0, #24]
   2b520:	ldr	r1, [sp, #4]
   2b524:	cmp	r0, r1
   2b528:	bls	2b538 <flatcc_builder_start_struct@@Base+0xe4>
   2b52c:	ldr	r0, [sp, #4]
   2b530:	ldr	r1, [sp, #8]
   2b534:	str	r0, [r1, #24]
   2b538:	ldr	r0, [sp, #4]
   2b53c:	ldr	r1, [sp, #8]
   2b540:	ldr	r1, [r1, #32]
   2b544:	str	r0, [r1, #4]
   2b548:	add	sp, sp, #12
   2b54c:	bx	lr
   2b550:	push	{fp, lr}
   2b554:	mov	fp, sp
   2b558:	sub	sp, sp, #16
   2b55c:	str	r0, [sp, #8]
   2b560:	str	r1, [sp, #4]
   2b564:	ldr	r0, [sp, #8]
   2b568:	ldr	r0, [r0, #20]
   2b56c:	str	r0, [sp]
   2b570:	ldr	r0, [sp, #4]
   2b574:	ldr	r1, [sp, #8]
   2b578:	ldr	r2, [r1, #20]
   2b57c:	add	r0, r2, r0
   2b580:	str	r0, [r1, #20]
   2b584:	ldr	r1, [sp, #8]
   2b588:	ldr	r1, [r1, #24]
   2b58c:	cmp	r0, r1
   2b590:	bcc	2b5c4 <flatcc_builder_start_struct@@Base+0x170>
   2b594:	ldr	r0, [sp, #8]
   2b598:	ldr	r1, [sp, #8]
   2b59c:	ldr	r1, [r1, #20]
   2b5a0:	add	r1, r1, #1
   2b5a4:	mvn	r2, #3
   2b5a8:	bl	2f6ac <flatcc_builder_get_emit_context@@Base+0x40>
   2b5ac:	cmp	r0, #0
   2b5b0:	beq	2b5c0 <flatcc_builder_start_struct@@Base+0x16c>
   2b5b4:	movw	r0, #0
   2b5b8:	str	r0, [fp, #-4]
   2b5bc:	b	2b5d8 <flatcc_builder_start_struct@@Base+0x184>
   2b5c0:	b	2b5c4 <flatcc_builder_start_struct@@Base+0x170>
   2b5c4:	ldr	r0, [sp, #8]
   2b5c8:	ldr	r0, [r0, #16]
   2b5cc:	ldr	r1, [sp]
   2b5d0:	add	r0, r0, r1
   2b5d4:	str	r0, [fp, #-4]
   2b5d8:	ldr	r0, [fp, #-4]
   2b5dc:	mov	sp, fp
   2b5e0:	pop	{fp, pc}

0002b5e4 <flatcc_builder_struct_edit@@Base>:
   2b5e4:	sub	sp, sp, #4
   2b5e8:	str	r0, [sp]
   2b5ec:	ldr	r0, [sp]
   2b5f0:	ldr	r0, [r0, #16]
   2b5f4:	add	sp, sp, #4
   2b5f8:	bx	lr

0002b5fc <flatcc_builder_end_struct@@Base>:
   2b5fc:	push	{fp, lr}
   2b600:	mov	fp, sp
   2b604:	sub	sp, sp, #16
   2b608:	str	r0, [sp, #8]
   2b60c:	ldr	r0, [sp, #8]
   2b610:	ldr	r0, [r0, #32]
   2b614:	ldrh	r0, [r0, #14]
   2b618:	cmp	r0, #2
   2b61c:	bne	2b624 <flatcc_builder_end_struct@@Base+0x28>
   2b620:	b	2b644 <flatcc_builder_end_struct@@Base+0x48>
   2b624:	ldr	r0, [pc, #112]	; 2b69c <flatcc_builder_end_struct@@Base+0xa0>
   2b628:	add	r0, pc, r0
   2b62c:	ldr	r1, [pc, #108]	; 2b6a0 <flatcc_builder_end_struct@@Base+0xa4>
   2b630:	add	r1, pc, r1
   2b634:	ldr	r2, [pc, #104]	; 2b6a4 <flatcc_builder_end_struct@@Base+0xa8>
   2b638:	add	r3, pc, r2
   2b63c:	movw	r2, #872	; 0x368
   2b640:	bl	14f08 <__assert_fail@plt>
   2b644:	ldr	r0, [sp, #8]
   2b648:	ldr	r1, [sp, #8]
   2b64c:	ldr	r1, [r1, #16]
   2b650:	ldr	r2, [sp, #8]
   2b654:	ldr	r2, [r2, #20]
   2b658:	ldr	r3, [sp, #8]
   2b65c:	ldrh	r3, [r3, #130]	; 0x82
   2b660:	bl	2adb8 <flatcc_builder_create_struct@@Base>
   2b664:	str	r0, [sp, #4]
   2b668:	movw	r1, #0
   2b66c:	cmp	r1, r0
   2b670:	bne	2b680 <flatcc_builder_end_struct@@Base+0x84>
   2b674:	movw	r0, #0
   2b678:	str	r0, [fp, #-4]
   2b67c:	b	2b690 <flatcc_builder_end_struct@@Base+0x94>
   2b680:	ldr	r0, [sp, #8]
   2b684:	bl	2b398 <flatcc_builder_end_buffer@@Base+0x164>
   2b688:	ldr	r0, [sp, #4]
   2b68c:	str	r0, [fp, #-4]
   2b690:	ldr	r0, [fp, #-4]
   2b694:	mov	sp, fp
   2b698:	pop	{fp, pc}
   2b69c:	andeq	pc, r1, r5, lsr #25
   2b6a0:	ldrdeq	pc, [r1], -r2
   2b6a4:	andeq	pc, r1, r1, asr #25

0002b6a8 <flatcc_builder_extend_vector@@Base>:
   2b6a8:	push	{fp, lr}
   2b6ac:	mov	fp, sp
   2b6b0:	sub	sp, sp, #16
   2b6b4:	str	r0, [sp, #8]
   2b6b8:	str	r1, [sp, #4]
   2b6bc:	ldr	r0, [sp, #8]
   2b6c0:	ldr	r1, [sp, #4]
   2b6c4:	ldr	r2, [sp, #8]
   2b6c8:	ldr	r2, [r2, #32]
   2b6cc:	ldr	r2, [r2, #24]
   2b6d0:	bl	2b714 <flatcc_builder_extend_vector@@Base+0x6c>
   2b6d4:	cmp	r0, #0
   2b6d8:	beq	2b6e8 <flatcc_builder_extend_vector@@Base+0x40>
   2b6dc:	movw	r0, #0
   2b6e0:	str	r0, [fp, #-4]
   2b6e4:	b	2b708 <flatcc_builder_extend_vector@@Base+0x60>
   2b6e8:	ldr	r0, [sp, #8]
   2b6ec:	ldr	r1, [sp, #8]
   2b6f0:	ldr	r1, [r1, #32]
   2b6f4:	ldr	r1, [r1, #16]
   2b6f8:	ldr	r2, [sp, #4]
   2b6fc:	mul	r1, r1, r2
   2b700:	bl	2b550 <flatcc_builder_start_struct@@Base+0xfc>
   2b704:	str	r0, [fp, #-4]
   2b708:	ldr	r0, [fp, #-4]
   2b70c:	mov	sp, fp
   2b710:	pop	{fp, pc}
   2b714:	push	{fp, lr}
   2b718:	mov	fp, sp
   2b71c:	sub	sp, sp, #24
   2b720:	str	r0, [fp, #-8]
   2b724:	str	r1, [sp, #12]
   2b728:	str	r2, [sp, #8]
   2b72c:	ldr	r0, [fp, #-8]
   2b730:	ldr	r0, [r0, #32]
   2b734:	ldr	r0, [r0, #20]
   2b738:	str	r0, [sp, #4]
   2b73c:	ldr	r0, [sp, #4]
   2b740:	ldr	r1, [sp, #12]
   2b744:	add	r0, r0, r1
   2b748:	str	r0, [sp]
   2b74c:	ldr	r0, [sp, #4]
   2b750:	ldr	r1, [sp]
   2b754:	cmp	r0, r1
   2b758:	bhi	2b76c <flatcc_builder_extend_vector@@Base+0xc4>
   2b75c:	ldr	r0, [sp]
   2b760:	ldr	r1, [sp, #8]
   2b764:	cmp	r0, r1
   2b768:	bls	2b7bc <flatcc_builder_extend_vector@@Base+0x114>
   2b76c:	ldr	r0, [sp, #4]
   2b770:	ldr	r1, [sp]
   2b774:	cmp	r0, r1
   2b778:	bhi	2b790 <flatcc_builder_extend_vector@@Base+0xe8>
   2b77c:	ldr	r0, [sp]
   2b780:	ldr	r1, [sp, #8]
   2b784:	cmp	r0, r1
   2b788:	bhi	2b790 <flatcc_builder_extend_vector@@Base+0xe8>
   2b78c:	b	2b7b0 <flatcc_builder_extend_vector@@Base+0x108>
   2b790:	ldr	r0, [pc, #72]	; 2b7e0 <flatcc_builder_extend_vector@@Base+0x138>
   2b794:	add	r0, pc, r0
   2b798:	ldr	r1, [pc, #68]	; 2b7e4 <flatcc_builder_extend_vector@@Base+0x13c>
   2b79c:	add	r1, pc, r1
   2b7a0:	ldr	r2, [pc, #64]	; 2b7e8 <flatcc_builder_extend_vector@@Base+0x140>
   2b7a4:	add	r3, pc, r2
   2b7a8:	movw	r2, #892	; 0x37c
   2b7ac:	bl	14f08 <__assert_fail@plt>
   2b7b0:	mvn	r0, #0
   2b7b4:	str	r0, [fp, #-4]
   2b7b8:	b	2b7d4 <flatcc_builder_extend_vector@@Base+0x12c>
   2b7bc:	ldr	r0, [sp]
   2b7c0:	ldr	r1, [fp, #-8]
   2b7c4:	ldr	r1, [r1, #32]
   2b7c8:	str	r0, [r1, #20]
   2b7cc:	movw	r0, #0
   2b7d0:	str	r0, [fp, #-4]
   2b7d4:	ldr	r0, [fp, #-4]
   2b7d8:	mov	sp, fp
   2b7dc:	pop	{fp, pc}
   2b7e0:	andeq	r0, r2, r4, lsr r9
   2b7e4:	andeq	pc, r1, r6, ror #16
   2b7e8:	andeq	r0, r2, pc, lsr r9

0002b7ec <flatcc_builder_vector_push@@Base>:
   2b7ec:	push	{fp, lr}
   2b7f0:	mov	fp, sp
   2b7f4:	sub	sp, sp, #16
   2b7f8:	str	r0, [sp, #8]
   2b7fc:	str	r1, [sp, #4]
   2b800:	ldr	r0, [sp, #8]
   2b804:	ldr	r0, [r0, #32]
   2b808:	ldrh	r0, [r0, #14]
   2b80c:	cmp	r0, #4
   2b810:	bne	2b818 <flatcc_builder_vector_push@@Base+0x2c>
   2b814:	b	2b838 <flatcc_builder_vector_push@@Base+0x4c>
   2b818:	ldr	r0, [pc, #196]	; 2b8e4 <flatcc_builder_vector_push@@Base+0xf8>
   2b81c:	add	r0, pc, r0
   2b820:	ldr	r1, [pc, #192]	; 2b8e8 <flatcc_builder_vector_push@@Base+0xfc>
   2b824:	add	r1, pc, r1
   2b828:	ldr	r2, [pc, #188]	; 2b8ec <flatcc_builder_vector_push@@Base+0x100>
   2b82c:	add	r3, pc, r2
   2b830:	movw	r2, #907	; 0x38b
   2b834:	bl	14f08 <__assert_fail@plt>
   2b838:	ldr	r0, [sp, #8]
   2b83c:	ldr	r0, [r0, #32]
   2b840:	ldr	r0, [r0, #20]
   2b844:	ldr	r1, [sp, #8]
   2b848:	ldr	r1, [r1, #32]
   2b84c:	ldr	r1, [r1, #24]
   2b850:	cmp	r0, r1
   2b854:	bls	2b8a8 <flatcc_builder_vector_push@@Base+0xbc>
   2b858:	ldr	r0, [sp, #8]
   2b85c:	ldr	r0, [r0, #32]
   2b860:	ldr	r0, [r0, #20]
   2b864:	ldr	r1, [sp, #8]
   2b868:	ldr	r1, [r1, #32]
   2b86c:	ldr	r1, [r1, #24]
   2b870:	cmp	r0, r1
   2b874:	bhi	2b87c <flatcc_builder_vector_push@@Base+0x90>
   2b878:	b	2b89c <flatcc_builder_vector_push@@Base+0xb0>
   2b87c:	ldr	r0, [pc, #108]	; 2b8f0 <flatcc_builder_vector_push@@Base+0x104>
   2b880:	add	r0, pc, r0
   2b884:	ldr	r1, [pc, #104]	; 2b8f4 <flatcc_builder_vector_push@@Base+0x108>
   2b888:	add	r1, pc, r1
   2b88c:	ldr	r2, [pc, #100]	; 2b8f8 <flatcc_builder_vector_push@@Base+0x10c>
   2b890:	add	r3, pc, r2
   2b894:	movw	r2, #908	; 0x38c
   2b898:	bl	14f08 <__assert_fail@plt>
   2b89c:	movw	r0, #0
   2b8a0:	str	r0, [fp, #-4]
   2b8a4:	b	2b8d8 <flatcc_builder_vector_push@@Base+0xec>
   2b8a8:	ldr	r0, [sp, #8]
   2b8ac:	ldr	r0, [r0, #32]
   2b8b0:	ldr	r1, [r0, #20]
   2b8b4:	add	r1, r1, #1
   2b8b8:	str	r1, [r0, #20]
   2b8bc:	ldr	r0, [sp, #8]
   2b8c0:	ldr	r1, [sp, #4]
   2b8c4:	ldr	r2, [sp, #8]
   2b8c8:	ldr	r2, [r2, #32]
   2b8cc:	ldr	r2, [r2, #16]
   2b8d0:	bl	2b8fc <flatcc_builder_vector_push@@Base+0x110>
   2b8d4:	str	r0, [fp, #-4]
   2b8d8:	ldr	r0, [fp, #-4]
   2b8dc:	mov	sp, fp
   2b8e0:	pop	{fp, pc}
   2b8e4:	andeq	pc, r1, r0, lsr #22
   2b8e8:	ldrdeq	pc, [r1], -lr
   2b8ec:	andeq	pc, r1, ip, lsr fp	; <UNPREDICTABLE>
   2b8f0:	andeq	pc, r1, fp, lsr #22
   2b8f4:	andeq	pc, r1, sl, ror r7	; <UNPREDICTABLE>
   2b8f8:	ldrdeq	pc, [r1], -r8
   2b8fc:	push	{fp, lr}
   2b900:	mov	fp, sp
   2b904:	sub	sp, sp, #24
   2b908:	str	r0, [fp, #-8]
   2b90c:	str	r1, [sp, #12]
   2b910:	str	r2, [sp, #8]
   2b914:	ldr	r0, [fp, #-8]
   2b918:	ldr	r1, [sp, #8]
   2b91c:	bl	2b550 <flatcc_builder_start_struct@@Base+0xfc>
   2b920:	str	r0, [sp, #4]
   2b924:	movw	r1, #0
   2b928:	cmp	r0, r1
   2b92c:	bne	2b93c <flatcc_builder_vector_push@@Base+0x150>
   2b930:	movw	r0, #0
   2b934:	str	r0, [fp, #-4]
   2b938:	b	2b954 <flatcc_builder_vector_push@@Base+0x168>
   2b93c:	ldr	r0, [sp, #4]
   2b940:	ldr	r1, [sp, #12]
   2b944:	ldr	r2, [sp, #8]
   2b948:	bl	14e30 <memcpy@plt>
   2b94c:	ldr	r0, [sp, #4]
   2b950:	str	r0, [fp, #-4]
   2b954:	ldr	r0, [fp, #-4]
   2b958:	mov	sp, fp
   2b95c:	pop	{fp, pc}

0002b960 <flatcc_builder_append_vector@@Base>:
   2b960:	push	{fp, lr}
   2b964:	mov	fp, sp
   2b968:	sub	sp, sp, #16
   2b96c:	str	r0, [sp, #8]
   2b970:	str	r1, [sp, #4]
   2b974:	str	r2, [sp]
   2b978:	ldr	r0, [sp, #8]
   2b97c:	ldr	r0, [r0, #32]
   2b980:	ldrh	r0, [r0, #14]
   2b984:	cmp	r0, #4
   2b988:	bne	2b990 <flatcc_builder_append_vector@@Base+0x30>
   2b98c:	b	2b9b0 <flatcc_builder_append_vector@@Base+0x50>
   2b990:	ldr	r0, [pc, #116]	; 2ba0c <flatcc_builder_append_vector@@Base+0xac>
   2b994:	add	r0, pc, r0
   2b998:	ldr	r1, [pc, #112]	; 2ba10 <flatcc_builder_append_vector@@Base+0xb0>
   2b99c:	add	r1, pc, r1
   2b9a0:	ldr	r2, [pc, #108]	; 2ba14 <flatcc_builder_append_vector@@Base+0xb4>
   2b9a4:	add	r3, pc, r2
   2b9a8:	movw	r2, #915	; 0x393
   2b9ac:	bl	14f08 <__assert_fail@plt>
   2b9b0:	ldr	r0, [sp, #8]
   2b9b4:	ldr	r1, [sp]
   2b9b8:	ldr	r2, [sp, #8]
   2b9bc:	ldr	r2, [r2, #32]
   2b9c0:	ldr	r2, [r2, #24]
   2b9c4:	bl	2b714 <flatcc_builder_extend_vector@@Base+0x6c>
   2b9c8:	cmp	r0, #0
   2b9cc:	beq	2b9dc <flatcc_builder_append_vector@@Base+0x7c>
   2b9d0:	movw	r0, #0
   2b9d4:	str	r0, [fp, #-4]
   2b9d8:	b	2ba00 <flatcc_builder_append_vector@@Base+0xa0>
   2b9dc:	ldr	r0, [sp, #8]
   2b9e0:	ldr	r1, [sp, #4]
   2b9e4:	ldr	r2, [sp, #8]
   2b9e8:	ldr	r2, [r2, #32]
   2b9ec:	ldr	r2, [r2, #16]
   2b9f0:	ldr	r3, [sp]
   2b9f4:	mul	r2, r2, r3
   2b9f8:	bl	2b8fc <flatcc_builder_vector_push@@Base+0x110>
   2b9fc:	str	r0, [fp, #-4]
   2ba00:	ldr	r0, [fp, #-4]
   2ba04:	mov	sp, fp
   2ba08:	pop	{fp, pc}
   2ba0c:	andeq	pc, r1, r8, lsr #19
   2ba10:	andeq	pc, r1, r6, ror #12
   2ba14:	andeq	pc, r1, r4, asr #20

0002ba18 <flatcc_builder_extend_offset_vector@@Base>:
   2ba18:	push	{fp, lr}
   2ba1c:	mov	fp, sp
   2ba20:	sub	sp, sp, #16
   2ba24:	ldr	r2, [pc, #68]	; 2ba70 <flatcc_builder_extend_offset_vector@@Base+0x58>
   2ba28:	str	r0, [sp, #8]
   2ba2c:	str	r1, [sp, #4]
   2ba30:	ldr	r0, [sp, #8]
   2ba34:	ldr	r1, [sp, #4]
   2ba38:	bl	2b714 <flatcc_builder_extend_vector@@Base+0x6c>
   2ba3c:	cmp	r0, #0
   2ba40:	beq	2ba50 <flatcc_builder_extend_offset_vector@@Base+0x38>
   2ba44:	movw	r0, #0
   2ba48:	str	r0, [fp, #-4]
   2ba4c:	b	2ba64 <flatcc_builder_extend_offset_vector@@Base+0x4c>
   2ba50:	ldr	r0, [sp, #8]
   2ba54:	ldr	r1, [sp, #4]
   2ba58:	lsl	r1, r1, #2
   2ba5c:	bl	2b550 <flatcc_builder_start_struct@@Base+0xfc>
   2ba60:	str	r0, [fp, #-4]
   2ba64:	ldr	r0, [fp, #-4]
   2ba68:	mov	sp, fp
   2ba6c:	pop	{fp, pc}
   2ba70:	svccc	0x00ffffff

0002ba74 <flatcc_builder_offset_vector_push@@Base>:
   2ba74:	push	{fp, lr}
   2ba78:	mov	fp, sp
   2ba7c:	sub	sp, sp, #16
   2ba80:	str	r0, [sp, #8]
   2ba84:	str	r1, [sp, #4]
   2ba88:	ldr	r0, [sp, #8]
   2ba8c:	ldr	r0, [r0, #32]
   2ba90:	ldrh	r0, [r0, #14]
   2ba94:	cmp	r0, #5
   2ba98:	bne	2baa0 <flatcc_builder_offset_vector_push@@Base+0x2c>
   2ba9c:	b	2bac0 <flatcc_builder_offset_vector_push@@Base+0x4c>
   2baa0:	ldr	r0, [pc, #152]	; 2bb40 <flatcc_builder_offset_vector_push@@Base+0xcc>
   2baa4:	add	r0, pc, r0
   2baa8:	ldr	r1, [pc, #148]	; 2bb44 <flatcc_builder_offset_vector_push@@Base+0xd0>
   2baac:	add	r1, pc, r1
   2bab0:	ldr	r2, [pc, #144]	; 2bb48 <flatcc_builder_offset_vector_push@@Base+0xd4>
   2bab4:	add	r3, pc, r2
   2bab8:	movw	r2, #934	; 0x3a6
   2babc:	bl	14f08 <__assert_fail@plt>
   2bac0:	ldr	r0, [pc, #132]	; 2bb4c <flatcc_builder_offset_vector_push@@Base+0xd8>
   2bac4:	ldr	r1, [sp, #8]
   2bac8:	ldr	r1, [r1, #32]
   2bacc:	ldr	r1, [r1, #20]
   2bad0:	cmp	r1, r0
   2bad4:	bne	2bae4 <flatcc_builder_offset_vector_push@@Base+0x70>
   2bad8:	movw	r0, #0
   2badc:	str	r0, [fp, #-4]
   2bae0:	b	2bb34 <flatcc_builder_offset_vector_push@@Base+0xc0>
   2bae4:	ldr	r0, [sp, #8]
   2bae8:	ldr	r0, [r0, #32]
   2baec:	ldr	r1, [r0, #20]
   2baf0:	add	r1, r1, #1
   2baf4:	str	r1, [r0, #20]
   2baf8:	ldr	r0, [sp, #8]
   2bafc:	movw	r1, #4
   2bb00:	bl	2b550 <flatcc_builder_start_struct@@Base+0xfc>
   2bb04:	str	r0, [sp]
   2bb08:	movw	r1, #0
   2bb0c:	cmp	r1, r0
   2bb10:	bne	2bb20 <flatcc_builder_offset_vector_push@@Base+0xac>
   2bb14:	movw	r0, #0
   2bb18:	str	r0, [fp, #-4]
   2bb1c:	b	2bb34 <flatcc_builder_offset_vector_push@@Base+0xc0>
   2bb20:	ldr	r0, [sp, #4]
   2bb24:	ldr	r1, [sp]
   2bb28:	str	r0, [r1]
   2bb2c:	ldr	r0, [sp]
   2bb30:	str	r0, [fp, #-4]
   2bb34:	ldr	r0, [fp, #-4]
   2bb38:	mov	sp, fp
   2bb3c:	pop	{fp, pc}
   2bb40:	muleq	r1, r1, r9
   2bb44:	andeq	pc, r1, r6, asr r5	; <UNPREDICTABLE>
   2bb48:			; <UNDEFINED> instruction: 0x0001f9b4
   2bb4c:	svccc	0x00ffffff

0002bb50 <flatcc_builder_append_offset_vector@@Base>:
   2bb50:	push	{fp, lr}
   2bb54:	mov	fp, sp
   2bb58:	sub	sp, sp, #16
   2bb5c:	str	r0, [sp, #8]
   2bb60:	str	r1, [sp, #4]
   2bb64:	str	r2, [sp]
   2bb68:	ldr	r0, [sp, #8]
   2bb6c:	ldr	r0, [r0, #32]
   2bb70:	ldrh	r0, [r0, #14]
   2bb74:	cmp	r0, #5
   2bb78:	bne	2bb80 <flatcc_builder_append_offset_vector@@Base+0x30>
   2bb7c:	b	2bba0 <flatcc_builder_append_offset_vector@@Base+0x50>
   2bb80:	ldr	r0, [pc, #96]	; 2bbe8 <flatcc_builder_append_offset_vector@@Base+0x98>
   2bb84:	add	r0, pc, r0
   2bb88:	ldr	r1, [pc, #92]	; 2bbec <flatcc_builder_append_offset_vector@@Base+0x9c>
   2bb8c:	add	r1, pc, r1
   2bb90:	ldr	r2, [pc, #88]	; 2bbf0 <flatcc_builder_append_offset_vector@@Base+0xa0>
   2bb94:	add	r3, pc, r2
   2bb98:	movw	r2, #948	; 0x3b4
   2bb9c:	bl	14f08 <__assert_fail@plt>
   2bba0:	ldr	r2, [pc, #76]	; 2bbf4 <flatcc_builder_append_offset_vector@@Base+0xa4>
   2bba4:	ldr	r0, [sp, #8]
   2bba8:	ldr	r1, [sp]
   2bbac:	bl	2b714 <flatcc_builder_extend_vector@@Base+0x6c>
   2bbb0:	cmp	r0, #0
   2bbb4:	beq	2bbc4 <flatcc_builder_append_offset_vector@@Base+0x74>
   2bbb8:	movw	r0, #0
   2bbbc:	str	r0, [fp, #-4]
   2bbc0:	b	2bbdc <flatcc_builder_append_offset_vector@@Base+0x8c>
   2bbc4:	ldr	r0, [sp, #8]
   2bbc8:	ldr	r1, [sp, #4]
   2bbcc:	ldr	r2, [sp]
   2bbd0:	lsl	r2, r2, #2
   2bbd4:	bl	2b8fc <flatcc_builder_vector_push@@Base+0x110>
   2bbd8:	str	r0, [fp, #-4]
   2bbdc:	ldr	r0, [fp, #-4]
   2bbe0:	mov	sp, fp
   2bbe4:	pop	{fp, pc}
   2bbe8:			; <UNDEFINED> instruction: 0x0001f8b1
   2bbec:	andeq	pc, r1, r6, ror r4	; <UNPREDICTABLE>
   2bbf0:	andeq	pc, r1, r6, lsr r9	; <UNPREDICTABLE>
   2bbf4:	svccc	0x00ffffff

0002bbf8 <flatcc_builder_extend_string@@Base>:
   2bbf8:	push	{fp, lr}
   2bbfc:	mov	fp, sp
   2bc00:	sub	sp, sp, #16
   2bc04:	str	r0, [sp, #8]
   2bc08:	str	r1, [sp, #4]
   2bc0c:	ldr	r0, [sp, #8]
   2bc10:	ldr	r0, [r0, #32]
   2bc14:	ldrh	r0, [r0, #14]
   2bc18:	cmp	r0, #6
   2bc1c:	bne	2bc24 <flatcc_builder_extend_string@@Base+0x2c>
   2bc20:	b	2bc44 <flatcc_builder_extend_string@@Base+0x4c>
   2bc24:	ldr	r0, [pc, #88]	; 2bc84 <flatcc_builder_extend_string@@Base+0x8c>
   2bc28:	add	r0, pc, r0
   2bc2c:	ldr	r1, [pc, #84]	; 2bc88 <flatcc_builder_extend_string@@Base+0x90>
   2bc30:	add	r1, pc, r1
   2bc34:	ldr	r2, [pc, #80]	; 2bc8c <flatcc_builder_extend_string@@Base+0x94>
   2bc38:	add	r3, pc, r2
   2bc3c:	movw	r2, #957	; 0x3bd
   2bc40:	bl	14f08 <__assert_fail@plt>
   2bc44:	ldr	r0, [sp, #8]
   2bc48:	ldr	r1, [sp, #4]
   2bc4c:	mvn	r2, #0
   2bc50:	bl	2b714 <flatcc_builder_extend_vector@@Base+0x6c>
   2bc54:	cmp	r0, #0
   2bc58:	beq	2bc68 <flatcc_builder_extend_string@@Base+0x70>
   2bc5c:	movw	r0, #0
   2bc60:	str	r0, [fp, #-4]
   2bc64:	b	2bc78 <flatcc_builder_extend_string@@Base+0x80>
   2bc68:	ldr	r0, [sp, #8]
   2bc6c:	ldr	r1, [sp, #4]
   2bc70:	bl	2b550 <flatcc_builder_start_struct@@Base+0xfc>
   2bc74:	str	r0, [fp, #-4]
   2bc78:	ldr	r0, [fp, #-4]
   2bc7c:	mov	sp, fp
   2bc80:	pop	{fp, pc}
   2bc84:	andeq	pc, r1, r6, lsl r9	; <UNPREDICTABLE>
   2bc88:	ldrdeq	pc, [r1], -r2
   2bc8c:	andeq	pc, r1, r2, lsr r9	; <UNPREDICTABLE>

0002bc90 <flatcc_builder_append_string@@Base>:
   2bc90:	push	{fp, lr}
   2bc94:	mov	fp, sp
   2bc98:	sub	sp, sp, #16
   2bc9c:	str	r0, [sp, #8]
   2bca0:	str	r1, [sp, #4]
   2bca4:	str	r2, [sp]
   2bca8:	ldr	r0, [sp, #8]
   2bcac:	ldr	r0, [r0, #32]
   2bcb0:	ldrh	r0, [r0, #14]
   2bcb4:	cmp	r0, #6
   2bcb8:	bne	2bcc0 <flatcc_builder_append_string@@Base+0x30>
   2bcbc:	b	2bce0 <flatcc_builder_append_string@@Base+0x50>
   2bcc0:	ldr	r0, [pc, #92]	; 2bd24 <flatcc_builder_append_string@@Base+0x94>
   2bcc4:	add	r0, pc, r0
   2bcc8:	ldr	r1, [pc, #88]	; 2bd28 <flatcc_builder_append_string@@Base+0x98>
   2bccc:	add	r1, pc, r1
   2bcd0:	ldr	r2, [pc, #84]	; 2bd2c <flatcc_builder_append_string@@Base+0x9c>
   2bcd4:	add	r3, pc, r2
   2bcd8:	movw	r2, #966	; 0x3c6
   2bcdc:	bl	14f08 <__assert_fail@plt>
   2bce0:	ldr	r0, [sp, #8]
   2bce4:	ldr	r1, [sp]
   2bce8:	mvn	r2, #0
   2bcec:	bl	2b714 <flatcc_builder_extend_vector@@Base+0x6c>
   2bcf0:	cmp	r0, #0
   2bcf4:	beq	2bd04 <flatcc_builder_append_string@@Base+0x74>
   2bcf8:	movw	r0, #0
   2bcfc:	str	r0, [fp, #-4]
   2bd00:	b	2bd18 <flatcc_builder_append_string@@Base+0x88>
   2bd04:	ldr	r0, [sp, #8]
   2bd08:	ldr	r1, [sp, #4]
   2bd0c:	ldr	r2, [sp]
   2bd10:	bl	2b8fc <flatcc_builder_vector_push@@Base+0x110>
   2bd14:	str	r0, [fp, #-4]
   2bd18:	ldr	r0, [fp, #-4]
   2bd1c:	mov	sp, fp
   2bd20:	pop	{fp, pc}
   2bd24:	andeq	pc, r1, sl, ror r8	; <UNPREDICTABLE>
   2bd28:	andeq	pc, r1, r6, lsr r3	; <UNPREDICTABLE>
   2bd2c:	ldrdeq	pc, [r1], -r5

0002bd30 <flatcc_builder_append_string_str@@Base>:
   2bd30:	push	{fp, lr}
   2bd34:	mov	fp, sp
   2bd38:	sub	sp, sp, #24
   2bd3c:	str	r0, [fp, #-4]
   2bd40:	str	r1, [fp, #-8]
   2bd44:	ldr	r0, [fp, #-4]
   2bd48:	ldr	r1, [fp, #-8]
   2bd4c:	ldr	r2, [fp, #-8]
   2bd50:	str	r0, [sp, #12]
   2bd54:	mov	r0, r2
   2bd58:	str	r1, [sp, #8]
   2bd5c:	bl	14e9c <strlen@plt>
   2bd60:	ldr	r1, [sp, #12]
   2bd64:	str	r0, [sp, #4]
   2bd68:	mov	r0, r1
   2bd6c:	ldr	r1, [sp, #8]
   2bd70:	ldr	r2, [sp, #4]
   2bd74:	bl	2bc90 <flatcc_builder_append_string@@Base>
   2bd78:	mov	sp, fp
   2bd7c:	pop	{fp, pc}

0002bd80 <flatcc_builder_append_string_strn@@Base>:
   2bd80:	push	{fp, lr}
   2bd84:	mov	fp, sp
   2bd88:	sub	sp, sp, #24
   2bd8c:	str	r0, [fp, #-4]
   2bd90:	str	r1, [fp, #-8]
   2bd94:	str	r2, [sp, #12]
   2bd98:	ldr	r0, [fp, #-4]
   2bd9c:	ldr	r1, [fp, #-8]
   2bda0:	ldr	r2, [fp, #-8]
   2bda4:	ldr	r3, [sp, #12]
   2bda8:	str	r0, [sp, #8]
   2bdac:	mov	r0, r2
   2bdb0:	str	r1, [sp, #4]
   2bdb4:	mov	r1, r3
   2bdb8:	bl	2bddc <flatcc_builder_append_string_strn@@Base+0x5c>
   2bdbc:	ldr	r1, [sp, #8]
   2bdc0:	str	r0, [sp]
   2bdc4:	mov	r0, r1
   2bdc8:	ldr	r1, [sp, #4]
   2bdcc:	ldr	r2, [sp]
   2bdd0:	bl	2bc90 <flatcc_builder_append_string@@Base>
   2bdd4:	mov	sp, fp
   2bdd8:	pop	{fp, pc}
   2bddc:	push	{fp, lr}
   2bde0:	mov	fp, sp
   2bde4:	sub	sp, sp, #16
   2bde8:	str	r0, [fp, #-4]
   2bdec:	str	r1, [sp, #8]
   2bdf0:	ldr	r0, [fp, #-4]
   2bdf4:	ldr	r2, [sp, #8]
   2bdf8:	mov	r1, #0
   2bdfc:	bl	14ee4 <memchr@plt>
   2be00:	str	r0, [sp, #4]
   2be04:	ldr	r0, [sp, #4]
   2be08:	movw	r1, #0
   2be0c:	cmp	r0, r1
   2be10:	beq	2be28 <flatcc_builder_append_string_strn@@Base+0xa8>
   2be14:	ldr	r0, [sp, #4]
   2be18:	ldr	r1, [fp, #-4]
   2be1c:	sub	r0, r0, r1
   2be20:	str	r0, [sp]
   2be24:	b	2be30 <flatcc_builder_append_string_strn@@Base+0xb0>
   2be28:	ldr	r0, [sp, #8]
   2be2c:	str	r0, [sp]
   2be30:	ldr	r0, [sp]
   2be34:	mov	sp, fp
   2be38:	pop	{fp, pc}

0002be3c <flatcc_builder_truncate_vector@@Base>:
   2be3c:	push	{fp, lr}
   2be40:	mov	fp, sp
   2be44:	sub	sp, sp, #16
   2be48:	str	r0, [sp, #8]
   2be4c:	str	r1, [sp, #4]
   2be50:	ldr	r0, [sp, #8]
   2be54:	ldr	r0, [r0, #32]
   2be58:	ldrh	r0, [r0, #14]
   2be5c:	cmp	r0, #4
   2be60:	bne	2be68 <flatcc_builder_truncate_vector@@Base+0x2c>
   2be64:	b	2be88 <flatcc_builder_truncate_vector@@Base+0x4c>
   2be68:	ldr	r0, [pc, #192]	; 2bf30 <flatcc_builder_truncate_vector@@Base+0xf4>
   2be6c:	add	r0, pc, r0
   2be70:	ldr	r1, [pc, #188]	; 2bf34 <flatcc_builder_truncate_vector@@Base+0xf8>
   2be74:	add	r1, pc, r1
   2be78:	ldr	r2, [pc, #184]	; 2bf38 <flatcc_builder_truncate_vector@@Base+0xfc>
   2be7c:	add	r3, pc, r2
   2be80:	movw	r2, #985	; 0x3d9
   2be84:	bl	14f08 <__assert_fail@plt>
   2be88:	ldr	r0, [sp, #8]
   2be8c:	ldr	r0, [r0, #32]
   2be90:	ldr	r0, [r0, #20]
   2be94:	ldr	r1, [sp, #4]
   2be98:	cmp	r0, r1
   2be9c:	bcs	2bee8 <flatcc_builder_truncate_vector@@Base+0xac>
   2bea0:	ldr	r0, [sp, #8]
   2bea4:	ldr	r0, [r0, #32]
   2bea8:	ldr	r0, [r0, #20]
   2beac:	ldr	r1, [sp, #4]
   2beb0:	cmp	r0, r1
   2beb4:	bcc	2bebc <flatcc_builder_truncate_vector@@Base+0x80>
   2beb8:	b	2bedc <flatcc_builder_truncate_vector@@Base+0xa0>
   2bebc:	ldr	r0, [pc, #120]	; 2bf3c <flatcc_builder_truncate_vector@@Base+0x100>
   2bec0:	add	r0, pc, r0
   2bec4:	ldr	r1, [pc, #116]	; 2bf40 <flatcc_builder_truncate_vector@@Base+0x104>
   2bec8:	add	r1, pc, r1
   2becc:	ldr	r2, [pc, #112]	; 2bf44 <flatcc_builder_truncate_vector@@Base+0x108>
   2bed0:	add	r3, pc, r2
   2bed4:	movw	r2, #986	; 0x3da
   2bed8:	bl	14f08 <__assert_fail@plt>
   2bedc:	mvn	r0, #0
   2bee0:	str	r0, [fp, #-4]
   2bee4:	b	2bf24 <flatcc_builder_truncate_vector@@Base+0xe8>
   2bee8:	ldr	r0, [sp, #4]
   2beec:	ldr	r1, [sp, #8]
   2bef0:	ldr	r1, [r1, #32]
   2bef4:	ldr	r2, [r1, #20]
   2bef8:	sub	r0, r2, r0
   2befc:	str	r0, [r1, #20]
   2bf00:	ldr	r0, [sp, #8]
   2bf04:	ldr	r1, [sp, #8]
   2bf08:	ldr	r1, [r1, #32]
   2bf0c:	ldr	r1, [r1, #16]
   2bf10:	ldr	r2, [sp, #4]
   2bf14:	mul	r1, r1, r2
   2bf18:	bl	2bf48 <flatcc_builder_truncate_vector@@Base+0x10c>
   2bf1c:	movw	r0, #0
   2bf20:	str	r0, [fp, #-4]
   2bf24:	ldr	r0, [fp, #-4]
   2bf28:	mov	sp, fp
   2bf2c:	pop	{fp, pc}
   2bf30:	ldrdeq	pc, [r1], -r0
   2bf34:	andeq	pc, r1, lr, lsl #3
   2bf38:	andeq	pc, r1, sl, ror r7	; <UNPREDICTABLE>
   2bf3c:	andeq	pc, r1, r5, ror r7	; <UNPREDICTABLE>
   2bf40:	andeq	pc, r1, sl, lsr r1	; <UNPREDICTABLE>
   2bf44:	andeq	pc, r1, r6, lsr #14
   2bf48:	push	{fp, lr}
   2bf4c:	mov	fp, sp
   2bf50:	sub	sp, sp, #8
   2bf54:	str	r0, [sp, #4]
   2bf58:	str	r1, [sp]
   2bf5c:	ldr	r0, [sp]
   2bf60:	ldr	r1, [sp, #4]
   2bf64:	ldr	r2, [r1, #20]
   2bf68:	sub	r0, r2, r0
   2bf6c:	str	r0, [r1, #20]
   2bf70:	ldr	r0, [sp, #4]
   2bf74:	ldr	r0, [r0, #16]
   2bf78:	ldr	r1, [sp, #4]
   2bf7c:	ldr	r1, [r1, #20]
   2bf80:	add	r0, r0, r1
   2bf84:	ldr	r2, [sp]
   2bf88:	movw	r1, #0
   2bf8c:	and	r1, r1, #255	; 0xff
   2bf90:	bl	14ec0 <memset@plt>
   2bf94:	mov	sp, fp
   2bf98:	pop	{fp, pc}

0002bf9c <flatcc_builder_truncate_offset_vector@@Base>:
   2bf9c:	push	{fp, lr}
   2bfa0:	mov	fp, sp
   2bfa4:	sub	sp, sp, #16
   2bfa8:	str	r0, [sp, #8]
   2bfac:	str	r1, [sp, #4]
   2bfb0:	ldr	r0, [sp, #8]
   2bfb4:	ldr	r0, [r0, #32]
   2bfb8:	ldrh	r0, [r0, #14]
   2bfbc:	cmp	r0, #5
   2bfc0:	bne	2bfc8 <flatcc_builder_truncate_offset_vector@@Base+0x2c>
   2bfc4:	b	2bfe8 <flatcc_builder_truncate_offset_vector@@Base+0x4c>
   2bfc8:	ldr	r0, [pc, #192]	; 2c090 <flatcc_builder_truncate_offset_vector@@Base+0xf4>
   2bfcc:	add	r0, pc, r0
   2bfd0:	ldr	r1, [pc, #188]	; 2c094 <flatcc_builder_truncate_offset_vector@@Base+0xf8>
   2bfd4:	add	r1, pc, r1
   2bfd8:	ldr	r2, [pc, #184]	; 2c098 <flatcc_builder_truncate_offset_vector@@Base+0xfc>
   2bfdc:	add	r3, pc, r2
   2bfe0:	movw	r2, #994	; 0x3e2
   2bfe4:	bl	14f08 <__assert_fail@plt>
   2bfe8:	ldr	r0, [sp, #8]
   2bfec:	ldr	r0, [r0, #32]
   2bff0:	ldr	r0, [r0, #20]
   2bff4:	ldr	r1, [sp, #4]
   2bff8:	cmp	r0, r1
   2bffc:	bcs	2c048 <flatcc_builder_truncate_offset_vector@@Base+0xac>
   2c000:	ldr	r0, [sp, #8]
   2c004:	ldr	r0, [r0, #32]
   2c008:	ldr	r0, [r0, #20]
   2c00c:	ldr	r1, [sp, #4]
   2c010:	cmp	r0, r1
   2c014:	bcc	2c01c <flatcc_builder_truncate_offset_vector@@Base+0x80>
   2c018:	b	2c03c <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   2c01c:	ldr	r0, [pc, #120]	; 2c09c <flatcc_builder_truncate_offset_vector@@Base+0x100>
   2c020:	add	r0, pc, r0
   2c024:	ldr	r1, [pc, #116]	; 2c0a0 <flatcc_builder_truncate_offset_vector@@Base+0x104>
   2c028:	add	r1, pc, r1
   2c02c:	ldr	r2, [pc, #112]	; 2c0a4 <flatcc_builder_truncate_offset_vector@@Base+0x108>
   2c030:	add	r3, pc, r2
   2c034:	movw	r2, #995	; 0x3e3
   2c038:	bl	14f08 <__assert_fail@plt>
   2c03c:	mvn	r0, #0
   2c040:	str	r0, [fp, #-4]
   2c044:	b	2c084 <flatcc_builder_truncate_offset_vector@@Base+0xe8>
   2c048:	ldr	r0, [sp, #4]
   2c04c:	ldr	r1, [sp, #8]
   2c050:	ldr	r1, [r1, #32]
   2c054:	ldr	r2, [r1, #20]
   2c058:	sub	r0, r2, r0
   2c05c:	str	r0, [r1, #20]
   2c060:	ldr	r0, [sp, #8]
   2c064:	ldr	r1, [sp, #8]
   2c068:	ldr	r1, [r1, #32]
   2c06c:	ldr	r1, [r1, #16]
   2c070:	ldr	r2, [sp, #4]
   2c074:	mul	r1, r1, r2
   2c078:	bl	2bf48 <flatcc_builder_truncate_vector@@Base+0x10c>
   2c07c:	movw	r0, #0
   2c080:	str	r0, [fp, #-4]
   2c084:	ldr	r0, [fp, #-4]
   2c088:	mov	sp, fp
   2c08c:	pop	{fp, pc}
   2c090:	andeq	pc, r1, r9, ror #8
   2c094:	andeq	pc, r1, lr, lsr #32
   2c098:	andeq	pc, r1, sp, ror r6	; <UNPREDICTABLE>
   2c09c:	andeq	pc, r1, pc, ror r6	; <UNPREDICTABLE>
   2c0a0:	ldrdeq	lr, [r1], -sl
   2c0a4:	andeq	pc, r1, r9, lsr #12

0002c0a8 <flatcc_builder_truncate_string@@Base>:
   2c0a8:	push	{fp, lr}
   2c0ac:	mov	fp, sp
   2c0b0:	sub	sp, sp, #16
   2c0b4:	str	r0, [sp, #8]
   2c0b8:	str	r1, [sp, #4]
   2c0bc:	ldr	r0, [sp, #8]
   2c0c0:	ldr	r0, [r0, #32]
   2c0c4:	ldrh	r0, [r0, #14]
   2c0c8:	cmp	r0, #6
   2c0cc:	bne	2c0d4 <flatcc_builder_truncate_string@@Base+0x2c>
   2c0d0:	b	2c0f4 <flatcc_builder_truncate_string@@Base+0x4c>
   2c0d4:	ldr	r0, [pc, #176]	; 2c18c <flatcc_builder_truncate_string@@Base+0xe4>
   2c0d8:	add	r0, pc, r0
   2c0dc:	ldr	r1, [pc, #172]	; 2c190 <flatcc_builder_truncate_string@@Base+0xe8>
   2c0e0:	add	r1, pc, r1
   2c0e4:	ldr	r2, [pc, #168]	; 2c194 <flatcc_builder_truncate_string@@Base+0xec>
   2c0e8:	add	r3, pc, r2
   2c0ec:	movw	r2, #1003	; 0x3eb
   2c0f0:	bl	14f08 <__assert_fail@plt>
   2c0f4:	ldr	r0, [sp, #8]
   2c0f8:	ldr	r0, [r0, #32]
   2c0fc:	ldr	r0, [r0, #20]
   2c100:	ldr	r1, [sp, #4]
   2c104:	cmp	r0, r1
   2c108:	bcs	2c154 <flatcc_builder_truncate_string@@Base+0xac>
   2c10c:	ldr	r0, [sp, #8]
   2c110:	ldr	r0, [r0, #32]
   2c114:	ldr	r0, [r0, #20]
   2c118:	ldr	r1, [sp, #4]
   2c11c:	cmp	r0, r1
   2c120:	bcc	2c128 <flatcc_builder_truncate_string@@Base+0x80>
   2c124:	b	2c148 <flatcc_builder_truncate_string@@Base+0xa0>
   2c128:	ldr	r0, [pc, #104]	; 2c198 <flatcc_builder_truncate_string@@Base+0xf0>
   2c12c:	add	r0, pc, r0
   2c130:	ldr	r1, [pc, #100]	; 2c19c <flatcc_builder_truncate_string@@Base+0xf4>
   2c134:	add	r1, pc, r1
   2c138:	ldr	r2, [pc, #96]	; 2c1a0 <flatcc_builder_truncate_string@@Base+0xf8>
   2c13c:	add	r3, pc, r2
   2c140:	movw	r2, #1004	; 0x3ec
   2c144:	bl	14f08 <__assert_fail@plt>
   2c148:	mvn	r0, #0
   2c14c:	str	r0, [fp, #-4]
   2c150:	b	2c180 <flatcc_builder_truncate_string@@Base+0xd8>
   2c154:	ldr	r0, [sp, #4]
   2c158:	ldr	r1, [sp, #8]
   2c15c:	ldr	r1, [r1, #32]
   2c160:	ldr	r2, [r1, #20]
   2c164:	sub	r0, r2, r0
   2c168:	str	r0, [r1, #20]
   2c16c:	ldr	r0, [sp, #8]
   2c170:	ldr	r1, [sp, #4]
   2c174:	bl	2bf48 <flatcc_builder_truncate_vector@@Base+0x10c>
   2c178:	movw	r0, #0
   2c17c:	str	r0, [fp, #-4]
   2c180:	ldr	r0, [fp, #-4]
   2c184:	mov	sp, fp
   2c188:	pop	{fp, pc}
   2c18c:	andeq	pc, r1, r6, ror #8
   2c190:	andeq	lr, r1, r2, lsr #30
   2c194:	strdeq	pc, [r1], -r2
   2c198:	andeq	pc, r1, sp, ror #11
   2c19c:	andeq	lr, r1, lr, asr #29
   2c1a0:	muleq	r1, lr, r5

0002c1a4 <flatcc_builder_start_vector@@Base>:
   2c1a4:	push	{fp, lr}
   2c1a8:	mov	fp, sp
   2c1ac:	sub	sp, sp, #24
   2c1b0:	str	r0, [fp, #-8]
   2c1b4:	str	r1, [sp, #12]
   2c1b8:	strh	r2, [sp, #10]
   2c1bc:	str	r3, [sp, #4]
   2c1c0:	add	r0, sp, #10
   2c1c4:	movw	r1, #4
   2c1c8:	uxth	r1, r1
   2c1cc:	bl	2c250 <flatcc_builder_start_vector@@Base+0xac>
   2c1d0:	ldr	r0, [fp, #-8]
   2c1d4:	ldrh	r1, [sp, #10]
   2c1d8:	bl	2b068 <flatcc_builder_start_buffer@@Base+0x178>
   2c1dc:	cmp	r0, #0
   2c1e0:	beq	2c1f0 <flatcc_builder_start_vector@@Base+0x4c>
   2c1e4:	mvn	r0, #0
   2c1e8:	str	r0, [fp, #-4]
   2c1ec:	b	2c244 <flatcc_builder_start_vector@@Base+0xa0>
   2c1f0:	ldr	r0, [sp, #12]
   2c1f4:	ldr	r1, [fp, #-8]
   2c1f8:	ldr	r1, [r1, #32]
   2c1fc:	str	r0, [r1, #16]
   2c200:	ldr	r0, [fp, #-8]
   2c204:	ldr	r0, [r0, #32]
   2c208:	movw	r1, #0
   2c20c:	str	r1, [r0, #20]
   2c210:	ldr	r0, [sp, #4]
   2c214:	ldr	r1, [fp, #-8]
   2c218:	ldr	r1, [r1, #32]
   2c21c:	str	r0, [r1, #24]
   2c220:	ldr	r0, [fp, #-8]
   2c224:	ldr	r0, [r0, #32]
   2c228:	movw	r1, #4
   2c22c:	strh	r1, [r0, #14]
   2c230:	ldr	r0, [fp, #-8]
   2c234:	mvn	r1, #3
   2c238:	bl	2b4c4 <flatcc_builder_start_struct@@Base+0x70>
   2c23c:	movw	r0, #0
   2c240:	str	r0, [fp, #-4]
   2c244:	ldr	r0, [fp, #-4]
   2c248:	mov	sp, fp
   2c24c:	pop	{fp, pc}
   2c250:	sub	sp, sp, #8
   2c254:	str	r0, [sp, #4]
   2c258:	strh	r1, [sp, #2]
   2c25c:	ldr	r0, [sp, #4]
   2c260:	ldrh	r0, [r0]
   2c264:	ldrh	r1, [sp, #2]
   2c268:	cmp	r0, r1
   2c26c:	bge	2c27c <flatcc_builder_start_vector@@Base+0xd8>
   2c270:	ldrh	r0, [sp, #2]
   2c274:	ldr	r1, [sp, #4]
   2c278:	strh	r0, [r1]
   2c27c:	add	sp, sp, #8
   2c280:	bx	lr

0002c284 <flatcc_builder_start_offset_vector@@Base>:
   2c284:	push	{fp, lr}
   2c288:	mov	fp, sp
   2c28c:	sub	sp, sp, #8
   2c290:	str	r0, [sp]
   2c294:	ldr	r0, [sp]
   2c298:	movw	r1, #4
   2c29c:	uxth	r1, r1
   2c2a0:	bl	2b068 <flatcc_builder_start_buffer@@Base+0x178>
   2c2a4:	cmp	r0, #0
   2c2a8:	beq	2c2b8 <flatcc_builder_start_offset_vector@@Base+0x34>
   2c2ac:	mvn	r0, #0
   2c2b0:	str	r0, [sp, #4]
   2c2b4:	b	2c2fc <flatcc_builder_start_offset_vector@@Base+0x78>
   2c2b8:	ldr	r0, [sp]
   2c2bc:	ldr	r0, [r0, #32]
   2c2c0:	movw	r1, #4
   2c2c4:	str	r1, [r0, #16]
   2c2c8:	ldr	r0, [sp]
   2c2cc:	ldr	r0, [r0, #32]
   2c2d0:	movw	r1, #0
   2c2d4:	str	r1, [r0, #20]
   2c2d8:	ldr	r0, [sp]
   2c2dc:	ldr	r0, [r0, #32]
   2c2e0:	movw	r1, #5
   2c2e4:	strh	r1, [r0, #14]
   2c2e8:	ldr	r0, [sp]
   2c2ec:	mvn	r1, #3
   2c2f0:	bl	2b4c4 <flatcc_builder_start_struct@@Base+0x70>
   2c2f4:	movw	r0, #0
   2c2f8:	str	r0, [sp, #4]
   2c2fc:	ldr	r0, [sp, #4]
   2c300:	mov	sp, fp
   2c304:	pop	{fp, pc}

0002c308 <flatcc_builder_create_offset_vector@@Base>:
   2c308:	push	{fp, lr}
   2c30c:	mov	fp, sp
   2c310:	sub	sp, sp, #24
   2c314:	str	r0, [fp, #-8]
   2c318:	str	r1, [sp, #12]
   2c31c:	str	r2, [sp, #8]
   2c320:	ldr	r0, [fp, #-8]
   2c324:	bl	2c284 <flatcc_builder_start_offset_vector@@Base>
   2c328:	cmp	r0, #0
   2c32c:	beq	2c33c <flatcc_builder_create_offset_vector@@Base+0x34>
   2c330:	movw	r0, #0
   2c334:	str	r0, [fp, #-4]
   2c338:	b	2c384 <flatcc_builder_create_offset_vector@@Base+0x7c>
   2c33c:	ldr	r0, [fp, #-8]
   2c340:	ldr	r1, [sp, #8]
   2c344:	bl	2ba18 <flatcc_builder_extend_offset_vector@@Base>
   2c348:	str	r0, [sp, #4]
   2c34c:	movw	r1, #0
   2c350:	cmp	r0, r1
   2c354:	bne	2c364 <flatcc_builder_create_offset_vector@@Base+0x5c>
   2c358:	movw	r0, #0
   2c35c:	str	r0, [fp, #-4]
   2c360:	b	2c384 <flatcc_builder_create_offset_vector@@Base+0x7c>
   2c364:	ldr	r0, [sp, #4]
   2c368:	ldr	r1, [sp, #12]
   2c36c:	ldr	r2, [sp, #8]
   2c370:	lsl	r2, r2, #2
   2c374:	bl	14e30 <memcpy@plt>
   2c378:	ldr	r0, [fp, #-8]
   2c37c:	bl	2c390 <flatcc_builder_end_offset_vector@@Base>
   2c380:	str	r0, [fp, #-4]
   2c384:	ldr	r0, [fp, #-4]
   2c388:	mov	sp, fp
   2c38c:	pop	{fp, pc}

0002c390 <flatcc_builder_end_offset_vector@@Base>:
   2c390:	push	{fp, lr}
   2c394:	mov	fp, sp
   2c398:	sub	sp, sp, #16
   2c39c:	str	r0, [sp, #8]
   2c3a0:	ldr	r0, [sp, #8]
   2c3a4:	ldr	r0, [r0, #32]
   2c3a8:	ldrh	r0, [r0, #14]
   2c3ac:	cmp	r0, #5
   2c3b0:	bne	2c3b8 <flatcc_builder_end_offset_vector@@Base+0x28>
   2c3b4:	b	2c3d8 <flatcc_builder_end_offset_vector@@Base+0x48>
   2c3b8:	ldr	r0, [pc, #108]	; 2c42c <flatcc_builder_end_offset_vector@@Base+0x9c>
   2c3bc:	add	r0, pc, r0
   2c3c0:	ldr	r1, [pc, #104]	; 2c430 <flatcc_builder_end_offset_vector@@Base+0xa0>
   2c3c4:	add	r1, pc, r1
   2c3c8:	ldr	r2, [pc, #100]	; 2c434 <flatcc_builder_end_offset_vector@@Base+0xa4>
   2c3cc:	add	r3, pc, r2
   2c3d0:	movw	r2, #1480	; 0x5c8
   2c3d4:	bl	14f08 <__assert_fail@plt>
   2c3d8:	ldr	r0, [sp, #8]
   2c3dc:	ldr	r1, [sp, #8]
   2c3e0:	ldr	r1, [r1, #16]
   2c3e4:	ldr	r2, [sp, #8]
   2c3e8:	ldr	r2, [r2, #32]
   2c3ec:	ldr	r2, [r2, #20]
   2c3f0:	bl	2d78c <flatcc_builder_create_offset_vector_direct@@Base>
   2c3f4:	str	r0, [sp, #4]
   2c3f8:	movw	r1, #0
   2c3fc:	cmp	r1, r0
   2c400:	bne	2c410 <flatcc_builder_end_offset_vector@@Base+0x80>
   2c404:	movw	r0, #0
   2c408:	str	r0, [fp, #-4]
   2c40c:	b	2c420 <flatcc_builder_end_offset_vector@@Base+0x90>
   2c410:	ldr	r0, [sp, #8]
   2c414:	bl	2b398 <flatcc_builder_end_buffer@@Base+0x164>
   2c418:	ldr	r0, [sp, #4]
   2c41c:	str	r0, [fp, #-4]
   2c420:	ldr	r0, [fp, #-4]
   2c424:	mov	sp, fp
   2c428:	pop	{fp, pc}
   2c42c:	andeq	pc, r1, r9, ror r0	; <UNPREDICTABLE>
   2c430:	andeq	lr, r1, lr, lsr ip
   2c434:	muleq	r1, r8, r6

0002c438 <flatcc_builder_start_string@@Base>:
   2c438:	push	{fp, lr}
   2c43c:	mov	fp, sp
   2c440:	sub	sp, sp, #8
   2c444:	str	r0, [sp]
   2c448:	ldr	r0, [sp]
   2c44c:	movw	r1, #1
   2c450:	uxth	r1, r1
   2c454:	bl	2b068 <flatcc_builder_start_buffer@@Base+0x178>
   2c458:	cmp	r0, #0
   2c45c:	beq	2c46c <flatcc_builder_start_string@@Base+0x34>
   2c460:	mvn	r0, #0
   2c464:	str	r0, [sp, #4]
   2c468:	b	2c4b0 <flatcc_builder_start_string@@Base+0x78>
   2c46c:	ldr	r0, [sp]
   2c470:	ldr	r0, [r0, #32]
   2c474:	movw	r1, #1
   2c478:	str	r1, [r0, #16]
   2c47c:	ldr	r0, [sp]
   2c480:	ldr	r0, [r0, #32]
   2c484:	movw	r1, #0
   2c488:	str	r1, [r0, #20]
   2c48c:	ldr	r0, [sp]
   2c490:	ldr	r0, [r0, #32]
   2c494:	movw	r1, #6
   2c498:	strh	r1, [r0, #14]
   2c49c:	ldr	r0, [sp]
   2c4a0:	mvn	r1, #3
   2c4a4:	bl	2b4c4 <flatcc_builder_start_struct@@Base+0x70>
   2c4a8:	movw	r0, #0
   2c4ac:	str	r0, [sp, #4]
   2c4b0:	ldr	r0, [sp, #4]
   2c4b4:	mov	sp, fp
   2c4b8:	pop	{fp, pc}

0002c4bc <flatcc_builder_reserve_table@@Base>:
   2c4bc:	push	{fp, lr}
   2c4c0:	mov	fp, sp
   2c4c4:	sub	sp, sp, #8
   2c4c8:	str	r0, [sp, #4]
   2c4cc:	str	r1, [sp]
   2c4d0:	ldr	r0, [sp]
   2c4d4:	cmp	r0, #0
   2c4d8:	blt	2c4e0 <flatcc_builder_reserve_table@@Base+0x24>
   2c4dc:	b	2c500 <flatcc_builder_reserve_table@@Base+0x44>
   2c4e0:	ldr	r0, [pc, #44]	; 2c514 <flatcc_builder_reserve_table@@Base+0x58>
   2c4e4:	add	r0, pc, r0
   2c4e8:	ldr	r1, [pc, #40]	; 2c518 <flatcc_builder_reserve_table@@Base+0x5c>
   2c4ec:	add	r1, pc, r1
   2c4f0:	ldr	r2, [pc, #36]	; 2c51c <flatcc_builder_reserve_table@@Base+0x60>
   2c4f4:	add	r3, pc, r2
   2c4f8:	movw	r2, #1065	; 0x429
   2c4fc:	bl	14f08 <__assert_fail@plt>
   2c500:	ldr	r0, [sp, #4]
   2c504:	ldr	r1, [sp]
   2c508:	bl	2c520 <flatcc_builder_reserve_table@@Base+0x64>
   2c50c:	mov	sp, fp
   2c510:	pop	{fp, pc}
   2c514:	muleq	r1, r8, r2
   2c518:	andeq	lr, r1, r6, lsl fp
   2c51c:	andeq	pc, r1, r7, asr #4
   2c520:	push	{fp, lr}
   2c524:	mov	fp, sp
   2c528:	sub	sp, sp, #24
   2c52c:	str	r0, [fp, #-8]
   2c530:	str	r1, [sp, #12]
   2c534:	ldr	r0, [fp, #-8]
   2c538:	ldr	r0, [r0, #32]
   2c53c:	ldr	r1, [r0, #16]
   2c540:	ldrh	r0, [r0, #28]
   2c544:	add	r0, r1, r0, lsl #1
   2c548:	str	r0, [sp, #8]
   2c54c:	ldr	r0, [sp, #12]
   2c550:	add	r0, r0, #2
   2c554:	lsl	r0, r0, #1
   2c558:	str	r0, [sp, #4]
   2c55c:	ldr	r0, [fp, #-8]
   2c560:	ldr	r2, [sp, #8]
   2c564:	ldr	r3, [sp, #4]
   2c568:	movw	r1, #0
   2c56c:	movw	ip, #1
   2c570:	str	ip, [sp]
   2c574:	bl	2a1fc <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2c578:	ldr	r1, [fp, #-8]
   2c57c:	str	r0, [r1, #4]
   2c580:	movw	r1, #0
   2c584:	cmp	r0, r1
   2c588:	bne	2c598 <flatcc_builder_reserve_table@@Base+0xdc>
   2c58c:	mvn	r0, #0
   2c590:	str	r0, [fp, #-4]
   2c594:	b	2c60c <flatcc_builder_reserve_table@@Base+0x150>
   2c598:	ldr	r0, [fp, #-8]
   2c59c:	ldr	r1, [r0, #4]
   2c5a0:	add	r1, r1, #4
   2c5a4:	str	r1, [r0, #4]
   2c5a8:	ldr	r0, [fp, #-8]
   2c5ac:	ldr	r0, [r0, #32]
   2c5b0:	ldr	r0, [r0, #20]
   2c5b4:	str	r0, [sp, #8]
   2c5b8:	ldr	r0, [sp, #12]
   2c5bc:	lsl	r0, r0, #1
   2c5c0:	add	r0, r0, #1
   2c5c4:	str	r0, [sp, #4]
   2c5c8:	ldr	r0, [fp, #-8]
   2c5cc:	ldr	r2, [sp, #8]
   2c5d0:	ldr	r3, [sp, #4]
   2c5d4:	movw	r1, #3
   2c5d8:	movw	ip, #0
   2c5dc:	str	ip, [sp]
   2c5e0:	bl	2a1fc <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2c5e4:	ldr	r1, [fp, #-8]
   2c5e8:	str	r0, [r1]
   2c5ec:	movw	r1, #0
   2c5f0:	cmp	r0, r1
   2c5f4:	bne	2c604 <flatcc_builder_reserve_table@@Base+0x148>
   2c5f8:	mvn	r0, #0
   2c5fc:	str	r0, [fp, #-4]
   2c600:	b	2c60c <flatcc_builder_reserve_table@@Base+0x150>
   2c604:	movw	r0, #0
   2c608:	str	r0, [fp, #-4]
   2c60c:	ldr	r0, [fp, #-4]
   2c610:	mov	sp, fp
   2c614:	pop	{fp, pc}

0002c618 <flatcc_builder_start_table@@Base>:
   2c618:	push	{fp, lr}
   2c61c:	mov	fp, sp
   2c620:	sub	sp, sp, #16
   2c624:	str	r0, [sp, #8]
   2c628:	str	r1, [sp, #4]
   2c62c:	ldr	r0, [sp, #8]
   2c630:	movw	r1, #4
   2c634:	uxth	r1, r1
   2c638:	bl	2b068 <flatcc_builder_start_buffer@@Base+0x178>
   2c63c:	cmp	r0, #0
   2c640:	beq	2c650 <flatcc_builder_start_table@@Base+0x38>
   2c644:	mvn	r0, #0
   2c648:	str	r0, [fp, #-4]
   2c64c:	b	2c720 <flatcc_builder_start_table@@Base+0x108>
   2c650:	ldr	r0, [pc, #212]	; 2c72c <flatcc_builder_start_table@@Base+0x114>
   2c654:	ldr	r1, [sp, #8]
   2c658:	ldr	r1, [r1, #4]
   2c65c:	ldr	r2, [sp, #8]
   2c660:	ldr	r2, [r2, #52]	; 0x34
   2c664:	sub	r1, r1, r2
   2c668:	ldr	r2, [sp, #8]
   2c66c:	ldr	r2, [r2, #32]
   2c670:	str	r1, [r2, #16]
   2c674:	ldr	r1, [sp, #8]
   2c678:	ldr	r1, [r1]
   2c67c:	ldr	r2, [sp, #8]
   2c680:	ldr	r2, [r2, #76]	; 0x4c
   2c684:	sub	r1, r1, r2
   2c688:	ldr	r2, [sp, #8]
   2c68c:	ldr	r2, [r2, #32]
   2c690:	str	r1, [r2, #20]
   2c694:	ldr	r1, [sp, #8]
   2c698:	ldr	r1, [r1, #12]
   2c69c:	ldr	r2, [sp, #8]
   2c6a0:	ldr	r2, [r2, #32]
   2c6a4:	str	r1, [r2, #24]
   2c6a8:	ldr	r1, [sp, #8]
   2c6ac:	ldrh	r1, [r1, #8]
   2c6b0:	ldr	r2, [sp, #8]
   2c6b4:	ldr	r2, [r2, #32]
   2c6b8:	strh	r1, [r2, #28]
   2c6bc:	ldr	r1, [sp, #8]
   2c6c0:	movw	r2, #0
   2c6c4:	str	r2, [r1, #12]
   2c6c8:	ldr	r1, [sp, #8]
   2c6cc:	str	r0, [r1, #12]
   2c6d0:	ldr	r0, [sp, #8]
   2c6d4:	movw	r1, #0
   2c6d8:	strh	r1, [r0, #8]
   2c6dc:	ldr	r0, [sp, #8]
   2c6e0:	ldr	r0, [r0, #32]
   2c6e4:	movw	r1, #3
   2c6e8:	strh	r1, [r0, #14]
   2c6ec:	ldr	r0, [sp, #8]
   2c6f0:	ldr	r1, [sp, #4]
   2c6f4:	bl	2c520 <flatcc_builder_reserve_table@@Base+0x64>
   2c6f8:	cmp	r0, #0
   2c6fc:	beq	2c70c <flatcc_builder_start_table@@Base+0xf4>
   2c700:	mvn	r0, #0
   2c704:	str	r0, [fp, #-4]
   2c708:	b	2c720 <flatcc_builder_start_table@@Base+0x108>
   2c70c:	ldr	r0, [sp, #8]
   2c710:	movw	r1, #65532	; 0xfffc
   2c714:	bl	2b4c4 <flatcc_builder_start_struct@@Base+0x70>
   2c718:	movw	r0, #0
   2c71c:	str	r0, [fp, #-4]
   2c720:	ldr	r0, [fp, #-4]
   2c724:	mov	sp, fp
   2c728:	pop	{fp, pc}
   2c72c:	svccs	0x00693b52

0002c730 <flatcc_builder_create_vtable@@Base>:
   2c730:	push	{fp, lr}
   2c734:	mov	fp, sp
   2c738:	sub	sp, sp, #104	; 0x68
   2c73c:	str	r0, [fp, #-8]
   2c740:	str	r1, [fp, #-12]
   2c744:	strh	r2, [fp, #-14]
   2c748:	movw	r0, #0
   2c74c:	str	r0, [sp, #12]
   2c750:	str	r0, [sp, #16]
   2c754:	ldrh	r0, [fp, #-14]
   2c758:	cmp	r0, #0
   2c75c:	ble	2c7a0 <flatcc_builder_create_vtable@@Base+0x70>
   2c760:	ldrh	r0, [fp, #-14]
   2c764:	ldr	r1, [sp, #12]
   2c768:	add	r0, r1, r0
   2c76c:	str	r0, [sp, #12]
   2c770:	ldr	r0, [fp, #-12]
   2c774:	add	r1, sp, #12
   2c778:	add	r1, r1, #8
   2c77c:	ldr	r2, [sp, #16]
   2c780:	str	r0, [r1, r2, lsl #3]
   2c784:	ldrh	r0, [fp, #-14]
   2c788:	ldr	r2, [sp, #16]
   2c78c:	add	r1, r1, r2, lsl #3
   2c790:	str	r0, [r1, #4]
   2c794:	ldr	r0, [sp, #16]
   2c798:	add	r0, r0, #1
   2c79c:	str	r0, [sp, #16]
   2c7a0:	ldr	r0, [fp, #-8]
   2c7a4:	ldr	r0, [r0, #152]	; 0x98
   2c7a8:	cmp	r0, #0
   2c7ac:	bne	2c7ec <flatcc_builder_create_vtable@@Base+0xbc>
   2c7b0:	ldr	r0, [fp, #-8]
   2c7b4:	ldr	r0, [r0, #180]	; 0xb4
   2c7b8:	cmp	r0, #0
   2c7bc:	bne	2c7ec <flatcc_builder_create_vtable@@Base+0xbc>
   2c7c0:	ldr	r0, [fp, #-8]
   2c7c4:	add	r1, sp, #12
   2c7c8:	bl	2c834 <flatcc_builder_create_vtable@@Base+0x104>
   2c7cc:	str	r0, [fp, #-20]	; 0xffffffec
   2c7d0:	movw	r1, #0
   2c7d4:	cmp	r1, r0
   2c7d8:	bne	2c7e8 <flatcc_builder_create_vtable@@Base+0xb8>
   2c7dc:	movw	r0, #0
   2c7e0:	str	r0, [fp, #-4]
   2c7e4:	b	2c828 <flatcc_builder_create_vtable@@Base+0xf8>
   2c7e8:	b	2c820 <flatcc_builder_create_vtable@@Base+0xf0>
   2c7ec:	ldr	r0, [fp, #-8]
   2c7f0:	add	r1, sp, #12
   2c7f4:	bl	2a8a4 <flatcc_builder_embed_buffer@@Base+0x39c>
   2c7f8:	str	r0, [fp, #-20]	; 0xffffffec
   2c7fc:	movw	r1, #0
   2c800:	cmp	r1, r0
   2c804:	bne	2c814 <flatcc_builder_create_vtable@@Base+0xe4>
   2c808:	movw	r0, #0
   2c80c:	str	r0, [fp, #-4]
   2c810:	b	2c828 <flatcc_builder_create_vtable@@Base+0xf8>
   2c814:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c818:	add	r0, r0, #1
   2c81c:	str	r0, [fp, #-20]	; 0xffffffec
   2c820:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c824:	str	r0, [fp, #-4]
   2c828:	ldr	r0, [fp, #-4]
   2c82c:	mov	sp, fp
   2c830:	pop	{fp, pc}
   2c834:	push	{fp, lr}
   2c838:	mov	fp, sp
   2c83c:	sub	sp, sp, #24
   2c840:	str	r0, [fp, #-4]
   2c844:	str	r1, [fp, #-8]
   2c848:	ldr	r0, [fp, #-4]
   2c84c:	ldr	r0, [r0, #140]	; 0x8c
   2c850:	str	r0, [sp, #12]
   2c854:	ldr	r0, [sp, #12]
   2c858:	ldr	r1, [fp, #-8]
   2c85c:	ldr	r1, [r1]
   2c860:	add	r0, r0, r1
   2c864:	ldr	r1, [fp, #-4]
   2c868:	str	r0, [r1, #140]	; 0x8c
   2c86c:	ldr	r0, [fp, #-4]
   2c870:	ldr	r0, [r0, #140]	; 0x8c
   2c874:	ldr	r1, [sp, #12]
   2c878:	cmp	r0, r1
   2c87c:	bge	2c8a0 <flatcc_builder_create_vtable@@Base+0x170>
   2c880:	ldr	r0, [pc, #168]	; 2c930 <flatcc_builder_create_vtable@@Base+0x200>
   2c884:	add	r0, pc, r0
   2c888:	ldr	r1, [pc, #164]	; 2c934 <flatcc_builder_create_vtable@@Base+0x204>
   2c88c:	add	r1, pc, r1
   2c890:	ldr	r2, [pc, #160]	; 2c938 <flatcc_builder_create_vtable@@Base+0x208>
   2c894:	add	r3, pc, r2
   2c898:	movw	r2, #673	; 0x2a1
   2c89c:	bl	14f08 <__assert_fail@plt>
   2c8a0:	ldr	r0, [fp, #-4]
   2c8a4:	ldr	r0, [r0, #44]	; 0x2c
   2c8a8:	ldr	r1, [fp, #-4]
   2c8ac:	ldr	r1, [r1, #36]	; 0x24
   2c8b0:	ldr	r2, [fp, #-8]
   2c8b4:	add	r2, r2, #8
   2c8b8:	ldr	r3, [fp, #-8]
   2c8bc:	ldr	r3, [r3, #4]
   2c8c0:	ldr	ip, [sp, #12]
   2c8c4:	ldr	lr, [fp, #-8]
   2c8c8:	ldr	lr, [lr]
   2c8cc:	str	r0, [sp, #8]
   2c8d0:	mov	r0, r1
   2c8d4:	mov	r1, r2
   2c8d8:	mov	r2, r3
   2c8dc:	mov	r3, ip
   2c8e0:	str	lr, [sp]
   2c8e4:	ldr	ip, [sp, #8]
   2c8e8:	blx	ip
   2c8ec:	cmp	r0, #0
   2c8f0:	beq	2c914 <flatcc_builder_create_vtable@@Base+0x1e4>
   2c8f4:	ldr	r0, [pc, #40]	; 2c924 <flatcc_builder_create_vtable@@Base+0x1f4>
   2c8f8:	add	r0, pc, r0
   2c8fc:	ldr	r1, [pc, #36]	; 2c928 <flatcc_builder_create_vtable@@Base+0x1f8>
   2c900:	add	r1, pc, r1
   2c904:	ldr	r2, [pc, #32]	; 2c92c <flatcc_builder_create_vtable@@Base+0x1fc>
   2c908:	add	r3, pc, r2
   2c90c:	movw	r2, #677	; 0x2a5
   2c910:	bl	14f08 <__assert_fail@plt>
   2c914:	ldr	r0, [sp, #12]
   2c918:	add	r0, r0, #1
   2c91c:	mov	sp, fp
   2c920:	pop	{fp, pc}
   2c924:	andeq	pc, r1, r7, asr #17
   2c928:	andeq	lr, r1, r2, lsl #14
   2c92c:	andeq	pc, r1, r2, lsr r8	; <UNPREDICTABLE>
   2c930:	andeq	pc, r1, fp, lsr r9	; <UNPREDICTABLE>
   2c934:	andeq	lr, r1, r6, ror r7
   2c938:	andeq	pc, r1, r6, lsr #17

0002c93c <flatcc_builder_create_cached_vtable@@Base>:
   2c93c:	push	{fp, lr}
   2c940:	mov	fp, sp
   2c944:	sub	sp, sp, #48	; 0x30
   2c948:	str	r0, [fp, #-8]
   2c94c:	str	r1, [fp, #-12]
   2c950:	strh	r2, [fp, #-14]
   2c954:	str	r3, [fp, #-20]	; 0xffffffec
   2c958:	ldr	r0, [fp, #-8]
   2c95c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c960:	bl	2cc48 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   2c964:	str	r0, [sp, #12]
   2c968:	movw	r1, #0
   2c96c:	cmp	r0, r1
   2c970:	bne	2c980 <flatcc_builder_create_cached_vtable@@Base+0x44>
   2c974:	movw	r0, #0
   2c978:	str	r0, [fp, #-4]
   2c97c:	b	2cc3c <flatcc_builder_create_cached_vtable@@Base+0x300>
   2c980:	ldr	r0, [sp, #12]
   2c984:	str	r0, [sp, #16]
   2c988:	ldr	r0, [sp, #16]
   2c98c:	ldr	r0, [r0]
   2c990:	str	r0, [sp, #8]
   2c994:	movw	r0, #0
   2c998:	str	r0, [sp, #20]
   2c99c:	ldr	r0, [sp, #8]
   2c9a0:	cmp	r0, #0
   2c9a4:	beq	2caa8 <flatcc_builder_create_cached_vtable@@Base+0x16c>
   2c9a8:	ldr	r0, [fp, #-8]
   2c9ac:	ldr	r0, [r0, #100]	; 0x64
   2c9b0:	ldr	r1, [sp, #8]
   2c9b4:	add	r0, r0, r1
   2c9b8:	str	r0, [sp, #24]
   2c9bc:	ldr	r0, [fp, #-8]
   2c9c0:	ldr	r0, [r0, #68]	; 0x44
   2c9c4:	ldr	r1, [sp, #24]
   2c9c8:	ldr	r1, [r1, #8]
   2c9cc:	add	r0, r0, r1
   2c9d0:	str	r0, [sp, #4]
   2c9d4:	ldr	r0, [sp, #4]
   2c9d8:	ldrh	r0, [r0]
   2c9dc:	ldrh	r1, [fp, #-14]
   2c9e0:	cmp	r0, r1
   2c9e4:	bne	2ca04 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2c9e8:	ldr	r0, [fp, #-12]
   2c9ec:	ldr	r1, [sp, #4]
   2c9f0:	ldrh	r2, [fp, #-14]
   2c9f4:	bl	14e3c <memcmp@plt>
   2c9f8:	movw	r1, #0
   2c9fc:	cmp	r1, r0
   2ca00:	beq	2ca20 <flatcc_builder_create_cached_vtable@@Base+0xe4>
   2ca04:	ldr	r0, [sp, #24]
   2ca08:	add	r0, r0, #12
   2ca0c:	str	r0, [sp, #16]
   2ca10:	ldr	r0, [sp, #24]
   2ca14:	ldr	r0, [r0, #12]
   2ca18:	str	r0, [sp, #8]
   2ca1c:	b	2c99c <flatcc_builder_create_cached_vtable@@Base+0x60>
   2ca20:	ldr	r0, [sp, #24]
   2ca24:	ldr	r0, [r0, #4]
   2ca28:	ldr	r1, [fp, #-8]
   2ca2c:	ldr	r1, [r1, #152]	; 0x98
   2ca30:	cmp	r0, r1
   2ca34:	beq	2ca5c <flatcc_builder_create_cached_vtable@@Base+0x120>
   2ca38:	ldr	r0, [sp, #24]
   2ca3c:	str	r0, [sp, #20]
   2ca40:	ldr	r0, [sp, #24]
   2ca44:	add	r0, r0, #12
   2ca48:	str	r0, [sp, #16]
   2ca4c:	ldr	r0, [sp, #24]
   2ca50:	ldr	r0, [r0, #12]
   2ca54:	str	r0, [sp, #8]
   2ca58:	b	2c99c <flatcc_builder_create_cached_vtable@@Base+0x60>
   2ca5c:	ldr	r0, [sp, #16]
   2ca60:	ldr	r1, [sp, #12]
   2ca64:	cmp	r0, r1
   2ca68:	beq	2ca98 <flatcc_builder_create_cached_vtable@@Base+0x15c>
   2ca6c:	ldr	r0, [sp, #24]
   2ca70:	ldr	r0, [r0, #12]
   2ca74:	ldr	r1, [sp, #16]
   2ca78:	str	r0, [r1]
   2ca7c:	ldr	r0, [sp, #12]
   2ca80:	ldr	r0, [r0]
   2ca84:	ldr	r1, [sp, #24]
   2ca88:	str	r0, [r1, #12]
   2ca8c:	ldr	r0, [sp, #8]
   2ca90:	ldr	r1, [sp, #12]
   2ca94:	str	r0, [r1]
   2ca98:	ldr	r0, [sp, #24]
   2ca9c:	ldr	r0, [r0]
   2caa0:	str	r0, [fp, #-4]
   2caa4:	b	2cc3c <flatcc_builder_create_cached_vtable@@Base+0x300>
   2caa8:	ldr	r0, [fp, #-8]
   2caac:	ldr	r1, [fp, #-8]
   2cab0:	ldr	r2, [r1, #124]	; 0x7c
   2cab4:	movw	r1, #6
   2cab8:	movw	r3, #16
   2cabc:	movw	ip, #0
   2cac0:	str	ip, [sp]
   2cac4:	bl	2a1fc <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2cac8:	str	r0, [sp, #24]
   2cacc:	movw	r1, #0
   2cad0:	cmp	r0, r1
   2cad4:	bne	2cae4 <flatcc_builder_create_cached_vtable@@Base+0x1a8>
   2cad8:	movw	r0, #0
   2cadc:	str	r0, [fp, #-4]
   2cae0:	b	2cc3c <flatcc_builder_create_cached_vtable@@Base+0x300>
   2cae4:	ldr	r0, [fp, #-8]
   2cae8:	ldr	r0, [r0, #124]	; 0x7c
   2caec:	str	r0, [sp, #8]
   2caf0:	ldr	r0, [fp, #-8]
   2caf4:	ldr	r1, [r0, #124]	; 0x7c
   2caf8:	add	r1, r1, #16
   2cafc:	str	r1, [r0, #124]	; 0x7c
   2cb00:	ldr	r0, [fp, #-8]
   2cb04:	ldr	r0, [r0, #152]	; 0x98
   2cb08:	ldr	r1, [sp, #24]
   2cb0c:	str	r0, [r1, #4]
   2cb10:	ldr	r0, [sp, #12]
   2cb14:	ldr	r0, [r0]
   2cb18:	ldr	r1, [sp, #24]
   2cb1c:	str	r0, [r1, #12]
   2cb20:	ldr	r0, [sp, #8]
   2cb24:	ldr	r1, [sp, #12]
   2cb28:	str	r0, [r1]
   2cb2c:	ldr	r0, [fp, #-8]
   2cb30:	ldr	r1, [fp, #-12]
   2cb34:	ldrh	r2, [fp, #-14]
   2cb38:	bl	2c730 <flatcc_builder_create_vtable@@Base>
   2cb3c:	ldr	r1, [sp, #24]
   2cb40:	str	r0, [r1]
   2cb44:	movw	r1, #0
   2cb48:	cmp	r1, r0
   2cb4c:	bne	2cb5c <flatcc_builder_create_cached_vtable@@Base+0x220>
   2cb50:	movw	r0, #0
   2cb54:	str	r0, [fp, #-4]
   2cb58:	b	2cc3c <flatcc_builder_create_cached_vtable@@Base+0x300>
   2cb5c:	ldr	r0, [sp, #20]
   2cb60:	movw	r1, #0
   2cb64:	cmp	r0, r1
   2cb68:	beq	2cb80 <flatcc_builder_create_cached_vtable@@Base+0x244>
   2cb6c:	ldr	r0, [sp, #20]
   2cb70:	ldr	r0, [r0, #8]
   2cb74:	ldr	r1, [sp, #24]
   2cb78:	str	r0, [r1, #8]
   2cb7c:	b	2cc30 <flatcc_builder_create_cached_vtable@@Base+0x2f4>
   2cb80:	ldr	r0, [fp, #-8]
   2cb84:	ldr	r0, [r0, #172]	; 0xac
   2cb88:	cmp	r0, #0
   2cb8c:	beq	2cbbc <flatcc_builder_create_cached_vtable@@Base+0x280>
   2cb90:	ldr	r0, [fp, #-8]
   2cb94:	ldr	r0, [r0, #172]	; 0xac
   2cb98:	ldr	r1, [fp, #-8]
   2cb9c:	ldr	r1, [r1, #120]	; 0x78
   2cba0:	ldrh	r2, [fp, #-14]
   2cba4:	add	r1, r1, r2
   2cba8:	cmp	r0, r1
   2cbac:	bcs	2cbbc <flatcc_builder_create_cached_vtable@@Base+0x280>
   2cbb0:	ldr	r0, [fp, #-8]
   2cbb4:	bl	29c78 <flatcc_builder_flush_vtable_cache@@Base>
   2cbb8:	b	2cc2c <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2cbbc:	ldr	r0, [fp, #-8]
   2cbc0:	ldr	r1, [fp, #-8]
   2cbc4:	ldr	r2, [r1, #120]	; 0x78
   2cbc8:	ldrh	r3, [fp, #-14]
   2cbcc:	movw	r1, #2
   2cbd0:	movw	ip, #0
   2cbd4:	str	ip, [sp]
   2cbd8:	bl	2a1fc <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2cbdc:	str	r0, [sp, #4]
   2cbe0:	movw	r1, #0
   2cbe4:	cmp	r0, r1
   2cbe8:	bne	2cbf8 <flatcc_builder_create_cached_vtable@@Base+0x2bc>
   2cbec:	mvn	r0, #0
   2cbf0:	str	r0, [fp, #-4]
   2cbf4:	b	2cc3c <flatcc_builder_create_cached_vtable@@Base+0x300>
   2cbf8:	ldr	r0, [fp, #-8]
   2cbfc:	ldr	r0, [r0, #120]	; 0x78
   2cc00:	ldr	r1, [sp, #24]
   2cc04:	str	r0, [r1, #8]
   2cc08:	ldrh	r0, [fp, #-14]
   2cc0c:	ldr	r1, [fp, #-8]
   2cc10:	ldr	r2, [r1, #120]	; 0x78
   2cc14:	add	r0, r2, r0
   2cc18:	str	r0, [r1, #120]	; 0x78
   2cc1c:	ldr	r0, [sp, #4]
   2cc20:	ldr	r1, [fp, #-12]
   2cc24:	ldrh	r2, [fp, #-14]
   2cc28:	bl	14e30 <memcpy@plt>
   2cc2c:	b	2cc30 <flatcc_builder_create_cached_vtable@@Base+0x2f4>
   2cc30:	ldr	r0, [sp, #24]
   2cc34:	ldr	r0, [r0]
   2cc38:	str	r0, [fp, #-4]
   2cc3c:	ldr	r0, [fp, #-4]
   2cc40:	mov	sp, fp
   2cc44:	pop	{fp, pc}
   2cc48:	push	{fp, lr}
   2cc4c:	mov	fp, sp
   2cc50:	sub	sp, sp, #16
   2cc54:	str	r0, [sp, #8]
   2cc58:	str	r1, [sp, #4]
   2cc5c:	ldr	r0, [sp, #8]
   2cc60:	ldr	r0, [r0, #116]	; 0x74
   2cc64:	cmp	r0, #0
   2cc68:	bne	2cc8c <flatcc_builder_create_cached_vtable@@Base+0x350>
   2cc6c:	ldr	r0, [sp, #8]
   2cc70:	bl	2f754 <flatcc_builder_get_emit_context@@Base+0xe8>
   2cc74:	cmp	r0, #0
   2cc78:	beq	2cc88 <flatcc_builder_create_cached_vtable@@Base+0x34c>
   2cc7c:	movw	r0, #0
   2cc80:	str	r0, [fp, #-4]
   2cc84:	b	2ccbc <flatcc_builder_create_cached_vtable@@Base+0x380>
   2cc88:	b	2cc8c <flatcc_builder_create_cached_vtable@@Base+0x350>
   2cc8c:	ldr	r0, [sp, #8]
   2cc90:	ldr	r0, [r0, #92]	; 0x5c
   2cc94:	str	r0, [sp]
   2cc98:	ldr	r0, [sp]
   2cc9c:	ldr	r1, [sp, #4]
   2cca0:	ldr	r2, [sp, #8]
   2cca4:	ldr	r2, [r2, #116]	; 0x74
   2cca8:	rsb	r2, r2, #32
   2ccac:	lsr	r1, r1, r2
   2ccb0:	mov	r2, r1
   2ccb4:	add	r0, r0, r1, lsl #2
   2ccb8:	str	r0, [fp, #-4]
   2ccbc:	ldr	r0, [fp, #-4]
   2ccc0:	mov	sp, fp
   2ccc4:	pop	{fp, pc}

0002ccc8 <flatcc_builder_create_table@@Base>:
   2ccc8:	push	{r4, sl, fp, lr}
   2cccc:	add	fp, sp, #8
   2ccd0:	sub	sp, sp, #128	; 0x80
   2ccd4:	ldr	ip, [fp, #16]
   2ccd8:	ldr	lr, [fp, #12]
   2ccdc:	ldr	r4, [fp, #8]
   2cce0:	str	r0, [fp, #-16]
   2cce4:	str	r1, [fp, #-20]	; 0xffffffec
   2cce8:	str	r2, [fp, #-24]	; 0xffffffe8
   2ccec:	strh	r3, [fp, #-26]	; 0xffffffe6
   2ccf0:	ldr	r0, [fp, #12]
   2ccf4:	cmp	r0, #0
   2ccf8:	blt	2cd00 <flatcc_builder_create_table@@Base+0x38>
   2ccfc:	b	2cd20 <flatcc_builder_create_table@@Base+0x58>
   2cd00:	ldr	r0, [pc, #616]	; 2cf70 <flatcc_builder_create_table@@Base+0x2a8>
   2cd04:	add	r0, pc, r0
   2cd08:	ldr	r1, [pc, #612]	; 2cf74 <flatcc_builder_create_table@@Base+0x2ac>
   2cd0c:	add	r1, pc, r1
   2cd10:	ldr	r2, [pc, #608]	; 2cf78 <flatcc_builder_create_table@@Base+0x2b0>
   2cd14:	add	r3, pc, r2
   2cd18:	movw	r2, #1237	; 0x4d5
   2cd1c:	bl	14f08 <__assert_fail@plt>
   2cd20:	ldr	r0, [fp, #16]
   2cd24:	and	r0, r0, #1
   2cd28:	cmp	r0, #0
   2cd2c:	beq	2cd34 <flatcc_builder_create_table@@Base+0x6c>
   2cd30:	b	2cd54 <flatcc_builder_create_table@@Base+0x8c>
   2cd34:	ldr	r0, [pc, #576]	; 2cf7c <flatcc_builder_create_table@@Base+0x2b4>
   2cd38:	add	r0, pc, r0
   2cd3c:	ldr	r1, [pc, #572]	; 2cf80 <flatcc_builder_create_table@@Base+0x2b8>
   2cd40:	add	r1, pc, r1
   2cd44:	ldr	r2, [pc, #568]	; 2cf84 <flatcc_builder_create_table@@Base+0x2bc>
   2cd48:	add	r3, pc, r2
   2cd4c:	movw	r2, #1243	; 0x4db
   2cd50:	bl	14f08 <__assert_fail@plt>
   2cd54:	sub	r0, fp, #26
   2cd58:	movw	r1, #4
   2cd5c:	uxth	r1, r1
   2cd60:	bl	2c250 <flatcc_builder_start_vector@@Base+0xac>
   2cd64:	ldr	r0, [fp, #-16]
   2cd68:	ldrh	r1, [fp, #-26]	; 0xffffffe6
   2cd6c:	bl	2ad70 <flatcc_builder_create_buffer@@Base+0x3a8>
   2cd70:	ldr	r0, [fp, #-16]
   2cd74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cd78:	ldrh	r2, [fp, #-26]	; 0xffffffe6
   2cd7c:	bl	2a85c <flatcc_builder_embed_buffer@@Base+0x354>
   2cd80:	str	r0, [fp, #-36]	; 0xffffffdc
   2cd84:	ldr	r0, [fp, #-16]
   2cd88:	ldr	r0, [r0, #136]	; 0x88
   2cd8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2cd90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2cd94:	add	r1, r1, r2
   2cd98:	add	r1, r1, #4
   2cd9c:	sub	r0, r0, r1
   2cda0:	str	r0, [fp, #-52]	; 0xffffffcc
   2cda4:	ldr	r0, [fp, #16]
   2cda8:	sub	r0, r0, #1
   2cdac:	str	r0, [fp, #-48]	; 0xffffffd0
   2cdb0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2cdb4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2cdb8:	sub	r0, r0, r1
   2cdbc:	str	r0, [fp, #-40]	; 0xffffffd8
   2cdc0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2cdc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2cdc8:	sub	r0, r0, r1
   2cdcc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2cdd0:	cmp	r0, r1
   2cdd4:	beq	2cde4 <flatcc_builder_create_table@@Base+0x11c>
   2cdd8:	mvn	r0, #0
   2cddc:	str	r0, [fp, #-12]
   2cde0:	b	2cf64 <flatcc_builder_create_table@@Base+0x29c>
   2cde4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2cde8:	bl	2a890 <flatcc_builder_embed_buffer@@Base+0x388>
   2cdec:	str	r0, [fp, #-44]	; 0xffffffd4
   2cdf0:	movw	r0, #0
   2cdf4:	str	r0, [fp, #-32]	; 0xffffffe0
   2cdf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cdfc:	ldr	r1, [fp, #12]
   2ce00:	cmp	r0, r1
   2ce04:	bge	2ce70 <flatcc_builder_create_table@@Base+0x1a8>
   2ce08:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ce0c:	ldr	r1, [fp, #8]
   2ce10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ce14:	add	r1, r1, r2, lsl #1
   2ce18:	ldrh	r1, [r1]
   2ce1c:	add	r0, r0, r1
   2ce20:	str	r0, [fp, #-60]	; 0xffffffc4
   2ce24:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2ce28:	ldr	r0, [r0]
   2ce2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2ce30:	sub	r0, r0, r1
   2ce34:	ldr	r1, [fp, #8]
   2ce38:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ce3c:	add	r1, r1, r2, lsl #1
   2ce40:	ldrh	r1, [r1]
   2ce44:	sub	r0, r0, r1
   2ce48:	sub	r0, r0, #4
   2ce4c:	str	r0, [fp, #-56]	; 0xffffffc8
   2ce50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ce54:	bl	2a890 <flatcc_builder_embed_buffer@@Base+0x388>
   2ce58:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2ce5c:	str	r0, [r1]
   2ce60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ce64:	add	r0, r0, #1
   2ce68:	str	r0, [fp, #-32]	; 0xffffffe0
   2ce6c:	b	2cdf8 <flatcc_builder_create_table@@Base+0x130>
   2ce70:	mov	r0, #0
   2ce74:	str	r0, [sp, #4]
   2ce78:	str	r0, [sp, #8]
   2ce7c:	ldr	r0, [sp, #4]
   2ce80:	add	r0, r0, #4
   2ce84:	str	r0, [sp, #4]
   2ce88:	add	r0, sp, #4
   2ce8c:	add	r0, r0, #8
   2ce90:	ldr	r1, [sp, #8]
   2ce94:	sub	r2, fp, #44	; 0x2c
   2ce98:	str	r2, [r0, r1, lsl #3]
   2ce9c:	ldr	r1, [sp, #8]
   2cea0:	add	r0, r0, r1, lsl #3
   2cea4:	movw	r1, #4
   2cea8:	str	r1, [r0, #4]
   2ceac:	ldr	r0, [sp, #8]
   2ceb0:	add	r0, r0, #1
   2ceb4:	str	r0, [sp, #8]
   2ceb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cebc:	cmp	r0, #0
   2cec0:	bls	2cf04 <flatcc_builder_create_table@@Base+0x23c>
   2cec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cec8:	ldr	r1, [sp, #4]
   2cecc:	add	r0, r1, r0
   2ced0:	str	r0, [sp, #4]
   2ced4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ced8:	add	r1, sp, #4
   2cedc:	add	r1, r1, #8
   2cee0:	ldr	r2, [sp, #8]
   2cee4:	str	r0, [r1, r2, lsl #3]
   2cee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ceec:	ldr	r2, [sp, #8]
   2cef0:	add	r1, r1, r2, lsl #3
   2cef4:	str	r0, [r1, #4]
   2cef8:	ldr	r0, [sp, #8]
   2cefc:	add	r0, r0, #1
   2cf00:	str	r0, [sp, #8]
   2cf04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2cf08:	cmp	r0, #0
   2cf0c:	bls	2cf54 <flatcc_builder_create_table@@Base+0x28c>
   2cf10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2cf14:	ldr	r1, [sp, #4]
   2cf18:	add	r0, r1, r0
   2cf1c:	str	r0, [sp, #4]
   2cf20:	add	r0, sp, #4
   2cf24:	add	r0, r0, #8
   2cf28:	ldr	r1, [sp, #8]
   2cf2c:	ldr	r2, [pc, #84]	; 2cf88 <flatcc_builder_create_table@@Base+0x2c0>
   2cf30:	ldr	r2, [pc, r2]
   2cf34:	str	r2, [r0, r1, lsl #3]
   2cf38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2cf3c:	ldr	r2, [sp, #8]
   2cf40:	add	r0, r0, r2, lsl #3
   2cf44:	str	r1, [r0, #4]
   2cf48:	ldr	r0, [sp, #8]
   2cf4c:	add	r0, r0, #1
   2cf50:	str	r0, [sp, #8]
   2cf54:	ldr	r0, [fp, #-16]
   2cf58:	add	r1, sp, #4
   2cf5c:	bl	2a8a4 <flatcc_builder_embed_buffer@@Base+0x39c>
   2cf60:	str	r0, [fp, #-12]
   2cf64:	ldr	r0, [fp, #-12]
   2cf68:	sub	sp, fp, #8
   2cf6c:	pop	{r4, sl, fp, pc}
   2cf70:	andeq	lr, r1, r1, ror sl
   2cf74:	strdeq	lr, [r1], -r6
   2cf78:	andeq	lr, r1, r3, ror sl
   2cf7c:	andeq	lr, r1, fp, ror #21
   2cf80:	andeq	lr, r1, r2, asr #5
   2cf84:	andeq	lr, r1, pc, lsr sl
   2cf88:	andeq	r2, r3, r0, lsr r1

0002cf8c <flatcc_builder_check_required_field@@Base>:
   2cf8c:	push	{fp, lr}
   2cf90:	mov	fp, sp
   2cf94:	sub	sp, sp, #16
   2cf98:	str	r0, [fp, #-4]
   2cf9c:	strh	r1, [fp, #-6]
   2cfa0:	ldr	r0, [fp, #-4]
   2cfa4:	ldr	r0, [r0, #32]
   2cfa8:	ldrh	r0, [r0, #14]
   2cfac:	cmp	r0, #3
   2cfb0:	bne	2cfb8 <flatcc_builder_check_required_field@@Base+0x2c>
   2cfb4:	b	2cfd8 <flatcc_builder_check_required_field@@Base+0x4c>
   2cfb8:	ldr	r0, [pc, #104]	; 2d028 <flatcc_builder_check_required_field@@Base+0x9c>
   2cfbc:	add	r0, pc, r0
   2cfc0:	ldr	r1, [pc, #100]	; 2d02c <flatcc_builder_check_required_field@@Base+0xa0>
   2cfc4:	add	r1, pc, r1
   2cfc8:	ldr	r2, [pc, #96]	; 2d030 <flatcc_builder_check_required_field@@Base+0xa4>
   2cfcc:	add	r3, pc, r2
   2cfd0:	movw	r2, #1272	; 0x4f8
   2cfd4:	bl	14f08 <__assert_fail@plt>
   2cfd8:	ldrh	r0, [fp, #-6]
   2cfdc:	ldr	r1, [fp, #-4]
   2cfe0:	ldrh	r1, [r1, #8]
   2cfe4:	cmp	r0, r1
   2cfe8:	movw	r0, #0
   2cfec:	str	r0, [sp, #4]
   2cff0:	bge	2d018 <flatcc_builder_check_required_field@@Base+0x8c>
   2cff4:	ldr	r0, [fp, #-4]
   2cff8:	ldr	r0, [r0, #4]
   2cffc:	ldrh	r1, [fp, #-6]
   2d000:	add	r0, r0, r1, lsl #1
   2d004:	ldrh	r0, [r0]
   2d008:	cmp	r0, #0
   2d00c:	movw	r0, #0
   2d010:	movne	r0, #1
   2d014:	str	r0, [sp, #4]
   2d018:	ldr	r0, [sp, #4]
   2d01c:	and	r0, r0, #1
   2d020:	mov	sp, fp
   2d024:	pop	{fp, pc}
   2d028:	andeq	lr, r1, r2, ror r8
   2d02c:	andeq	lr, r1, lr, lsr r0
   2d030:	andeq	lr, r1, sp, lsl #17

0002d034 <flatcc_builder_check_union_field@@Base>:
   2d034:	push	{fp, lr}
   2d038:	mov	fp, sp
   2d03c:	sub	sp, sp, #16
   2d040:	str	r0, [sp, #8]
   2d044:	strh	r1, [sp, #6]
   2d048:	ldr	r0, [sp, #8]
   2d04c:	ldr	r0, [r0, #32]
   2d050:	ldrh	r0, [r0, #14]
   2d054:	cmp	r0, #3
   2d058:	bne	2d060 <flatcc_builder_check_union_field@@Base+0x2c>
   2d05c:	b	2d080 <flatcc_builder_check_union_field@@Base+0x4c>
   2d060:	ldr	r0, [pc, #284]	; 2d184 <flatcc_builder_check_union_field@@Base+0x150>
   2d064:	add	r0, pc, r0
   2d068:	ldr	r1, [pc, #280]	; 2d188 <flatcc_builder_check_union_field@@Base+0x154>
   2d06c:	add	r1, pc, r1
   2d070:	ldr	r2, [pc, #276]	; 2d18c <flatcc_builder_check_union_field@@Base+0x158>
   2d074:	add	r3, pc, r2
   2d078:	movw	r2, #1279	; 0x4ff
   2d07c:	bl	14f08 <__assert_fail@plt>
   2d080:	ldrh	r0, [sp, #6]
   2d084:	cmp	r0, #0
   2d088:	beq	2d0a0 <flatcc_builder_check_union_field@@Base+0x6c>
   2d08c:	ldrh	r0, [sp, #6]
   2d090:	ldr	r1, [sp, #8]
   2d094:	ldrh	r1, [r1, #8]
   2d098:	cmp	r0, r1
   2d09c:	blt	2d0ac <flatcc_builder_check_union_field@@Base+0x78>
   2d0a0:	movw	r0, #0
   2d0a4:	str	r0, [fp, #-4]
   2d0a8:	b	2d178 <flatcc_builder_check_union_field@@Base+0x144>
   2d0ac:	ldr	r0, [sp, #8]
   2d0b0:	ldr	r0, [r0, #4]
   2d0b4:	ldrh	r1, [sp, #6]
   2d0b8:	sub	r1, r1, #1
   2d0bc:	add	r0, r0, r1, lsl #1
   2d0c0:	ldrh	r0, [r0]
   2d0c4:	cmp	r0, #0
   2d0c8:	bne	2d0f8 <flatcc_builder_check_union_field@@Base+0xc4>
   2d0cc:	ldr	r0, [sp, #8]
   2d0d0:	ldr	r0, [r0, #4]
   2d0d4:	ldrh	r1, [sp, #6]
   2d0d8:	add	r0, r0, r1, lsl #1
   2d0dc:	ldrh	r0, [r0]
   2d0e0:	cmp	r0, #0
   2d0e4:	movw	r0, #0
   2d0e8:	moveq	r0, #1
   2d0ec:	and	r0, r0, #1
   2d0f0:	str	r0, [fp, #-4]
   2d0f4:	b	2d178 <flatcc_builder_check_union_field@@Base+0x144>
   2d0f8:	ldr	r0, [sp, #8]
   2d0fc:	ldr	r1, [r0, #4]
   2d100:	ldr	r0, [r0, #16]
   2d104:	ldrh	r2, [sp, #6]
   2d108:	sub	r2, r2, #1
   2d10c:	add	r1, r1, r2, lsl #1
   2d110:	ldrh	r1, [r1]
   2d114:	add	r0, r0, r1
   2d118:	ldrsb	r0, [r0]
   2d11c:	cmp	r0, #0
   2d120:	beq	2d150 <flatcc_builder_check_union_field@@Base+0x11c>
   2d124:	ldr	r0, [sp, #8]
   2d128:	ldr	r0, [r0, #4]
   2d12c:	ldrh	r1, [sp, #6]
   2d130:	add	r0, r0, r1, lsl #1
   2d134:	ldrh	r0, [r0]
   2d138:	cmp	r0, #0
   2d13c:	movw	r0, #0
   2d140:	movne	r0, #1
   2d144:	and	r0, r0, #1
   2d148:	str	r0, [fp, #-4]
   2d14c:	b	2d178 <flatcc_builder_check_union_field@@Base+0x144>
   2d150:	ldr	r0, [sp, #8]
   2d154:	ldr	r0, [r0, #4]
   2d158:	ldrh	r1, [sp, #6]
   2d15c:	add	r0, r0, r1, lsl #1
   2d160:	ldrh	r0, [r0]
   2d164:	cmp	r0, #0
   2d168:	movw	r0, #0
   2d16c:	moveq	r0, #1
   2d170:	and	r0, r0, #1
   2d174:	str	r0, [fp, #-4]
   2d178:	ldr	r0, [fp, #-4]
   2d17c:	mov	sp, fp
   2d180:	pop	{fp, pc}
   2d184:	andeq	lr, r1, sl, asr #15
   2d188:	muleq	r1, r6, pc	; <UNPREDICTABLE>
   2d18c:	andeq	lr, r1, r8, lsr r8

0002d190 <flatcc_builder_check_required@@Base>:
   2d190:	push	{fp, lr}
   2d194:	mov	fp, sp
   2d198:	sub	sp, sp, #24
   2d19c:	str	r0, [fp, #-8]
   2d1a0:	str	r1, [sp, #12]
   2d1a4:	str	r2, [sp, #8]
   2d1a8:	ldr	r0, [fp, #-8]
   2d1ac:	ldr	r0, [r0, #32]
   2d1b0:	ldrh	r0, [r0, #14]
   2d1b4:	cmp	r0, #3
   2d1b8:	bne	2d1c0 <flatcc_builder_check_required@@Base+0x30>
   2d1bc:	b	2d1e0 <flatcc_builder_check_required@@Base+0x50>
   2d1c0:	ldr	r0, [pc, #172]	; 2d274 <flatcc_builder_check_required@@Base+0xe4>
   2d1c4:	add	r0, pc, r0
   2d1c8:	ldr	r1, [pc, #168]	; 2d278 <flatcc_builder_check_required@@Base+0xe8>
   2d1cc:	add	r1, pc, r1
   2d1d0:	ldr	r2, [pc, #164]	; 2d27c <flatcc_builder_check_required@@Base+0xec>
   2d1d4:	add	r3, pc, r2
   2d1d8:	movw	r2, #1297	; 0x511
   2d1dc:	bl	14f08 <__assert_fail@plt>
   2d1e0:	ldr	r0, [fp, #-8]
   2d1e4:	ldrh	r0, [r0, #8]
   2d1e8:	ldr	r1, [sp, #8]
   2d1ec:	cmp	r0, r1
   2d1f0:	bge	2d200 <flatcc_builder_check_required@@Base+0x70>
   2d1f4:	movw	r0, #0
   2d1f8:	str	r0, [fp, #-4]
   2d1fc:	b	2d268 <flatcc_builder_check_required@@Base+0xd8>
   2d200:	movw	r0, #0
   2d204:	str	r0, [sp, #4]
   2d208:	ldr	r0, [sp, #4]
   2d20c:	ldr	r1, [sp, #8]
   2d210:	cmp	r0, r1
   2d214:	bge	2d260 <flatcc_builder_check_required@@Base+0xd0>
   2d218:	ldr	r0, [fp, #-8]
   2d21c:	ldr	r0, [r0, #4]
   2d220:	ldr	r1, [sp, #12]
   2d224:	ldr	r2, [sp, #4]
   2d228:	add	r1, r1, r2, lsl #1
   2d22c:	ldrh	r1, [r1]
   2d230:	add	r0, r0, r1, lsl #1
   2d234:	ldrh	r0, [r0]
   2d238:	cmp	r0, #0
   2d23c:	bne	2d24c <flatcc_builder_check_required@@Base+0xbc>
   2d240:	movw	r0, #0
   2d244:	str	r0, [fp, #-4]
   2d248:	b	2d268 <flatcc_builder_check_required@@Base+0xd8>
   2d24c:	b	2d250 <flatcc_builder_check_required@@Base+0xc0>
   2d250:	ldr	r0, [sp, #4]
   2d254:	add	r0, r0, #1
   2d258:	str	r0, [sp, #4]
   2d25c:	b	2d208 <flatcc_builder_check_required@@Base+0x78>
   2d260:	movw	r0, #1
   2d264:	str	r0, [fp, #-4]
   2d268:	ldr	r0, [fp, #-4]
   2d26c:	mov	sp, fp
   2d270:	pop	{fp, pc}
   2d274:	andeq	lr, r1, sl, ror #12
   2d278:	andeq	sp, r1, r6, lsr lr
   2d27c:	andeq	lr, r1, r8, lsr #14

0002d280 <flatcc_builder_end_table@@Base>:
   2d280:	push	{r4, r5, fp, lr}
   2d284:	add	fp, sp, #8
   2d288:	sub	sp, sp, #48	; 0x30
   2d28c:	str	r0, [fp, #-16]
   2d290:	ldr	r0, [fp, #-16]
   2d294:	ldr	r0, [r0, #32]
   2d298:	ldrh	r0, [r0, #14]
   2d29c:	cmp	r0, #3
   2d2a0:	bne	2d2a8 <flatcc_builder_end_table@@Base+0x28>
   2d2a4:	b	2d2c8 <flatcc_builder_end_table@@Base+0x48>
   2d2a8:	ldr	r0, [pc, #500]	; 2d4a4 <flatcc_builder_end_table@@Base+0x224>
   2d2ac:	add	r0, pc, r0
   2d2b0:	ldr	r1, [pc, #496]	; 2d4a8 <flatcc_builder_end_table@@Base+0x228>
   2d2b4:	add	r1, pc, r1
   2d2b8:	ldr	r2, [pc, #492]	; 2d4ac <flatcc_builder_end_table@@Base+0x22c>
   2d2bc:	add	r3, pc, r2
   2d2c0:	movw	r2, #1317	; 0x525
   2d2c4:	bl	14f08 <__assert_fail@plt>
   2d2c8:	ldr	r0, [pc, #480]	; 2d4b0 <flatcc_builder_end_table@@Base+0x230>
   2d2cc:	ldr	r1, [fp, #-16]
   2d2d0:	ldr	r1, [r1, #4]
   2d2d4:	sub	r1, r1, #4
   2d2d8:	str	r1, [fp, #-20]	; 0xffffffec
   2d2dc:	ldr	r1, [fp, #-16]
   2d2e0:	ldrh	r1, [r1, #8]
   2d2e4:	add	r1, r1, #2
   2d2e8:	lsl	r1, r1, #1
   2d2ec:	strh	r1, [fp, #-22]	; 0xffffffea
   2d2f0:	ldrh	r1, [fp, #-22]	; 0xffffffea
   2d2f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d2f8:	strh	r1, [r2]
   2d2fc:	ldr	r1, [fp, #-16]
   2d300:	ldr	r1, [r1, #20]
   2d304:	uxth	r1, r1
   2d308:	add	r1, r1, #4
   2d30c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d310:	strh	r1, [r2, #2]
   2d314:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d318:	ldrh	r1, [r1]
   2d31c:	ldr	r2, [fp, #-16]
   2d320:	ldr	r2, [r2, #12]
   2d324:	eor	r1, r1, r2
   2d328:	mul	r1, r1, r0
   2d32c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d330:	ldrh	r2, [r2, #2]
   2d334:	eor	r1, r1, r2
   2d338:	mul	r0, r1, r0
   2d33c:	ldr	r1, [fp, #-16]
   2d340:	str	r0, [r1, #12]
   2d344:	ldr	r0, [fp, #-16]
   2d348:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d34c:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2d350:	ldr	r3, [fp, #-16]
   2d354:	ldr	r3, [r3, #12]
   2d358:	uxth	r2, r2
   2d35c:	bl	2c93c <flatcc_builder_create_cached_vtable@@Base>
   2d360:	str	r0, [sp, #24]
   2d364:	cmp	r0, #0
   2d368:	bne	2d378 <flatcc_builder_end_table@@Base+0xf8>
   2d36c:	movw	r0, #0
   2d370:	str	r0, [fp, #-12]
   2d374:	b	2d498 <flatcc_builder_end_table@@Base+0x218>
   2d378:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d37c:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2d380:	mov	r1, #0
   2d384:	bl	14ec0 <memset@plt>
   2d388:	ldr	r1, [fp, #-16]
   2d38c:	ldr	r2, [r1, #32]
   2d390:	ldr	r1, [r1, #76]	; 0x4c
   2d394:	ldr	r2, [r2, #20]
   2d398:	add	r1, r1, r2
   2d39c:	str	r1, [sp, #16]
   2d3a0:	ldr	r1, [fp, #-16]
   2d3a4:	ldr	r1, [r1]
   2d3a8:	ldr	r2, [sp, #16]
   2d3ac:	sub	r1, r1, r2
   2d3b0:	asr	r1, r1, #1
   2d3b4:	str	r1, [sp, #20]
   2d3b8:	ldr	r1, [fp, #-16]
   2d3bc:	ldr	r2, [fp, #-16]
   2d3c0:	ldr	r2, [r2, #16]
   2d3c4:	ldr	r3, [fp, #-16]
   2d3c8:	ldr	r3, [r3, #20]
   2d3cc:	ldr	ip, [fp, #-16]
   2d3d0:	ldrh	ip, [ip, #130]	; 0x82
   2d3d4:	ldr	lr, [sp, #16]
   2d3d8:	ldr	r4, [sp, #20]
   2d3dc:	ldr	r5, [sp, #24]
   2d3e0:	str	r0, [sp, #12]
   2d3e4:	mov	r0, r1
   2d3e8:	mov	r1, r2
   2d3ec:	mov	r2, r3
   2d3f0:	uxth	r3, ip
   2d3f4:	str	lr, [sp]
   2d3f8:	str	r4, [sp, #4]
   2d3fc:	str	r5, [sp, #8]
   2d400:	bl	2ccc8 <flatcc_builder_create_table@@Base>
   2d404:	str	r0, [sp, #28]
   2d408:	movw	r1, #0
   2d40c:	cmp	r1, r0
   2d410:	bne	2d420 <flatcc_builder_end_table@@Base+0x1a0>
   2d414:	movw	r0, #0
   2d418:	str	r0, [fp, #-12]
   2d41c:	b	2d498 <flatcc_builder_end_table@@Base+0x218>
   2d420:	ldr	r0, [fp, #-16]
   2d424:	ldr	r0, [r0, #32]
   2d428:	ldr	r0, [r0, #24]
   2d42c:	ldr	r1, [fp, #-16]
   2d430:	str	r0, [r1, #12]
   2d434:	ldr	r0, [fp, #-16]
   2d438:	ldr	r0, [r0, #32]
   2d43c:	ldrh	r0, [r0, #28]
   2d440:	ldr	r1, [fp, #-16]
   2d444:	strh	r0, [r1, #8]
   2d448:	ldr	r0, [fp, #-16]
   2d44c:	ldr	r0, [r0, #52]	; 0x34
   2d450:	ldr	r1, [fp, #-16]
   2d454:	ldr	r1, [r1, #32]
   2d458:	ldr	r1, [r1, #16]
   2d45c:	add	r0, r0, r1
   2d460:	ldr	r1, [fp, #-16]
   2d464:	str	r0, [r1, #4]
   2d468:	ldr	r0, [fp, #-16]
   2d46c:	ldr	r0, [r0, #76]	; 0x4c
   2d470:	ldr	r1, [fp, #-16]
   2d474:	ldr	r1, [r1, #32]
   2d478:	ldr	r1, [r1, #20]
   2d47c:	add	r0, r0, r1
   2d480:	ldr	r1, [fp, #-16]
   2d484:	str	r0, [r1]
   2d488:	ldr	r0, [fp, #-16]
   2d48c:	bl	2b398 <flatcc_builder_end_buffer@@Base+0x164>
   2d490:	ldr	r0, [sp, #28]
   2d494:	str	r0, [fp, #-12]
   2d498:	ldr	r0, [fp, #-12]
   2d49c:	sub	sp, fp, #8
   2d4a0:	pop	{r4, r5, fp, pc}
   2d4a4:	andeq	lr, r1, r2, lsl #11
   2d4a8:	andeq	sp, r1, lr, asr #26
   2d4ac:	muleq	r1, sl, r6
   2d4b0:			; <UNDEFINED> instruction: 0x9e3779b1

0002d4b4 <flatcc_builder_create_vector@@Base>:
   2d4b4:	push	{fp, lr}
   2d4b8:	mov	fp, sp
   2d4bc:	sub	sp, sp, #112	; 0x70
   2d4c0:	ldr	ip, [fp, #12]
   2d4c4:	ldr	lr, [fp, #8]
   2d4c8:	str	r0, [fp, #-8]
   2d4cc:	str	r1, [fp, #-12]
   2d4d0:	str	r2, [fp, #-16]
   2d4d4:	str	r3, [fp, #-20]	; 0xffffffec
   2d4d8:	strh	lr, [fp, #-22]	; 0xffffffea
   2d4dc:	ldr	r0, [fp, #-16]
   2d4e0:	ldr	r1, [fp, #12]
   2d4e4:	cmp	r0, r1
   2d4e8:	bls	2d52c <flatcc_builder_create_vector@@Base+0x78>
   2d4ec:	ldr	r0, [fp, #-16]
   2d4f0:	ldr	r1, [fp, #12]
   2d4f4:	cmp	r0, r1
   2d4f8:	bhi	2d500 <flatcc_builder_create_vector@@Base+0x4c>
   2d4fc:	b	2d520 <flatcc_builder_create_vector@@Base+0x6c>
   2d500:	ldr	r0, [pc, #364]	; 2d674 <flatcc_builder_create_vector@@Base+0x1c0>
   2d504:	add	r0, pc, r0
   2d508:	ldr	r1, [pc, #360]	; 2d678 <flatcc_builder_create_vector@@Base+0x1c4>
   2d50c:	add	r1, pc, r1
   2d510:	ldr	r2, [pc, #356]	; 2d67c <flatcc_builder_create_vector@@Base+0x1c8>
   2d514:	add	r3, pc, r2
   2d518:	movw	r2, #1365	; 0x555
   2d51c:	bl	14f08 <__assert_fail@plt>
   2d520:	movw	r0, #0
   2d524:	str	r0, [fp, #-4]
   2d528:	b	2d668 <flatcc_builder_create_vector@@Base+0x1b4>
   2d52c:	sub	r0, fp, #22
   2d530:	mov	r1, #4
   2d534:	bl	2c250 <flatcc_builder_start_vector@@Base+0xac>
   2d538:	ldr	r0, [fp, #-8]
   2d53c:	ldrh	r1, [fp, #-22]	; 0xffffffea
   2d540:	bl	2ad70 <flatcc_builder_create_buffer@@Base+0x3a8>
   2d544:	ldr	r0, [fp, #-16]
   2d548:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d54c:	mul	r0, r0, r1
   2d550:	str	r0, [fp, #-28]	; 0xffffffe4
   2d554:	ldr	r0, [fp, #-16]
   2d558:	bl	2a890 <flatcc_builder_embed_buffer@@Base+0x388>
   2d55c:	str	r0, [fp, #-36]	; 0xffffffdc
   2d560:	ldr	r0, [fp, #-8]
   2d564:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d568:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2d56c:	bl	2a85c <flatcc_builder_embed_buffer@@Base+0x354>
   2d570:	str	r0, [fp, #-32]	; 0xffffffe0
   2d574:	mov	r0, #0
   2d578:	str	r0, [sp, #4]
   2d57c:	str	r0, [sp, #8]
   2d580:	ldr	r0, [sp, #4]
   2d584:	add	r0, r0, #4
   2d588:	str	r0, [sp, #4]
   2d58c:	add	r0, sp, #4
   2d590:	add	r0, r0, #8
   2d594:	ldr	r1, [sp, #8]
   2d598:	sub	r2, fp, #36	; 0x24
   2d59c:	str	r2, [r0, r1, lsl #3]
   2d5a0:	ldr	r1, [sp, #8]
   2d5a4:	add	r0, r0, r1, lsl #3
   2d5a8:	movw	r1, #4
   2d5ac:	str	r1, [r0, #4]
   2d5b0:	ldr	r0, [sp, #8]
   2d5b4:	add	r0, r0, #1
   2d5b8:	str	r0, [sp, #8]
   2d5bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d5c0:	cmp	r0, #0
   2d5c4:	bls	2d608 <flatcc_builder_create_vector@@Base+0x154>
   2d5c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d5cc:	ldr	r1, [sp, #4]
   2d5d0:	add	r0, r1, r0
   2d5d4:	str	r0, [sp, #4]
   2d5d8:	ldr	r0, [fp, #-12]
   2d5dc:	add	r1, sp, #4
   2d5e0:	add	r1, r1, #8
   2d5e4:	ldr	r2, [sp, #8]
   2d5e8:	str	r0, [r1, r2, lsl #3]
   2d5ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d5f0:	ldr	r2, [sp, #8]
   2d5f4:	add	r1, r1, r2, lsl #3
   2d5f8:	str	r0, [r1, #4]
   2d5fc:	ldr	r0, [sp, #8]
   2d600:	add	r0, r0, #1
   2d604:	str	r0, [sp, #8]
   2d608:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d60c:	cmp	r0, #0
   2d610:	bls	2d658 <flatcc_builder_create_vector@@Base+0x1a4>
   2d614:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d618:	ldr	r1, [sp, #4]
   2d61c:	add	r0, r1, r0
   2d620:	str	r0, [sp, #4]
   2d624:	add	r0, sp, #4
   2d628:	add	r0, r0, #8
   2d62c:	ldr	r1, [sp, #8]
   2d630:	ldr	r2, [pc, #72]	; 2d680 <flatcc_builder_create_vector@@Base+0x1cc>
   2d634:	ldr	r2, [pc, r2]
   2d638:	str	r2, [r0, r1, lsl #3]
   2d63c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2d640:	ldr	r2, [sp, #8]
   2d644:	add	r0, r0, r2, lsl #3
   2d648:	str	r1, [r0, #4]
   2d64c:	ldr	r0, [sp, #8]
   2d650:	add	r0, r0, #1
   2d654:	str	r0, [sp, #8]
   2d658:	ldr	r0, [fp, #-8]
   2d65c:	add	r1, sp, #4
   2d660:	bl	2a8a4 <flatcc_builder_embed_buffer@@Base+0x39c>
   2d664:	str	r0, [fp, #-4]
   2d668:	ldr	r0, [fp, #-4]
   2d66c:	mov	sp, fp
   2d670:	pop	{fp, pc}
   2d674:	muleq	r1, r4, r4
   2d678:	strdeq	sp, [r1], -r6
   2d67c:	muleq	r1, r7, r4
   2d680:	andeq	r1, r3, ip, lsr #20

0002d684 <flatcc_builder_end_vector@@Base>:
   2d684:	push	{fp, lr}
   2d688:	mov	fp, sp
   2d68c:	sub	sp, sp, #24
   2d690:	str	r0, [fp, #-8]
   2d694:	ldr	r0, [fp, #-8]
   2d698:	ldr	r0, [r0, #32]
   2d69c:	ldrh	r0, [r0, #14]
   2d6a0:	cmp	r0, #4
   2d6a4:	bne	2d6ac <flatcc_builder_end_vector@@Base+0x28>
   2d6a8:	b	2d6cc <flatcc_builder_end_vector@@Base+0x48>
   2d6ac:	ldr	r0, [pc, #152]	; 2d74c <flatcc_builder_end_vector@@Base+0xc8>
   2d6b0:	add	r0, pc, r0
   2d6b4:	ldr	r1, [pc, #148]	; 2d750 <flatcc_builder_end_vector@@Base+0xcc>
   2d6b8:	add	r1, pc, r1
   2d6bc:	ldr	r2, [pc, #144]	; 2d754 <flatcc_builder_end_vector@@Base+0xd0>
   2d6c0:	add	r3, pc, r2
   2d6c4:	movw	r2, #1400	; 0x578
   2d6c8:	bl	14f08 <__assert_fail@plt>
   2d6cc:	ldr	r0, [fp, #-8]
   2d6d0:	ldr	r1, [fp, #-8]
   2d6d4:	ldr	r1, [r1, #16]
   2d6d8:	ldr	r2, [fp, #-8]
   2d6dc:	ldr	r2, [r2, #32]
   2d6e0:	ldr	r2, [r2, #20]
   2d6e4:	ldr	r3, [fp, #-8]
   2d6e8:	ldr	r3, [r3, #32]
   2d6ec:	ldr	r3, [r3, #16]
   2d6f0:	ldr	ip, [fp, #-8]
   2d6f4:	ldrh	ip, [ip, #130]	; 0x82
   2d6f8:	ldr	lr, [fp, #-8]
   2d6fc:	ldr	lr, [lr, #32]
   2d700:	ldr	lr, [lr, #24]
   2d704:	uxth	ip, ip
   2d708:	str	ip, [sp]
   2d70c:	str	lr, [sp, #4]
   2d710:	bl	2d4b4 <flatcc_builder_create_vector@@Base>
   2d714:	str	r0, [sp, #12]
   2d718:	movw	r1, #0
   2d71c:	cmp	r1, r0
   2d720:	bne	2d730 <flatcc_builder_end_vector@@Base+0xac>
   2d724:	movw	r0, #0
   2d728:	str	r0, [fp, #-4]
   2d72c:	b	2d740 <flatcc_builder_end_vector@@Base+0xbc>
   2d730:	ldr	r0, [fp, #-8]
   2d734:	bl	2b398 <flatcc_builder_end_buffer@@Base+0x164>
   2d738:	ldr	r0, [sp, #12]
   2d73c:	str	r0, [fp, #-4]
   2d740:	ldr	r0, [fp, #-4]
   2d744:	mov	sp, fp
   2d748:	pop	{fp, pc}
   2d74c:	andeq	sp, r1, ip, lsl #25
   2d750:	andeq	sp, r1, sl, asr #18
   2d754:	andeq	lr, r1, r1, ror #6

0002d758 <flatcc_builder_vector_count@@Base>:
   2d758:	sub	sp, sp, #4
   2d75c:	str	r0, [sp]
   2d760:	ldr	r0, [sp]
   2d764:	ldr	r0, [r0, #32]
   2d768:	ldr	r0, [r0, #20]
   2d76c:	add	sp, sp, #4
   2d770:	bx	lr

0002d774 <flatcc_builder_vector_edit@@Base>:
   2d774:	sub	sp, sp, #4
   2d778:	str	r0, [sp]
   2d77c:	ldr	r0, [sp]
   2d780:	ldr	r0, [r0, #16]
   2d784:	add	sp, sp, #4
   2d788:	bx	lr

0002d78c <flatcc_builder_create_offset_vector_direct@@Base>:
   2d78c:	push	{fp, lr}
   2d790:	mov	fp, sp
   2d794:	sub	sp, sp, #16
   2d798:	str	r0, [fp, #-4]
   2d79c:	str	r1, [sp, #8]
   2d7a0:	str	r2, [sp, #4]
   2d7a4:	ldr	r0, [fp, #-4]
   2d7a8:	ldr	r1, [sp, #8]
   2d7ac:	ldr	r2, [sp, #4]
   2d7b0:	movw	r3, #0
   2d7b4:	bl	2d7c0 <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   2d7b8:	mov	sp, fp
   2d7bc:	pop	{fp, pc}
   2d7c0:	push	{fp, lr}
   2d7c4:	mov	fp, sp
   2d7c8:	sub	sp, sp, #120	; 0x78
   2d7cc:	ldr	ip, [pc, #696]	; 2da8c <flatcc_builder_create_offset_vector_direct@@Base+0x300>
   2d7d0:	str	r0, [fp, #-8]
   2d7d4:	str	r1, [fp, #-12]
   2d7d8:	str	r2, [fp, #-16]
   2d7dc:	str	r3, [fp, #-20]	; 0xffffffec
   2d7e0:	ldr	r0, [fp, #-16]
   2d7e4:	cmp	r0, ip
   2d7e8:	bls	2d7f8 <flatcc_builder_create_offset_vector_direct@@Base+0x6c>
   2d7ec:	movw	r0, #0
   2d7f0:	str	r0, [fp, #-4]
   2d7f4:	b	2da80 <flatcc_builder_create_offset_vector_direct@@Base+0x2f4>
   2d7f8:	ldr	r0, [fp, #-8]
   2d7fc:	mov	r1, #4
   2d800:	str	r1, [sp]
   2d804:	bl	2ad70 <flatcc_builder_create_buffer@@Base+0x3a8>
   2d808:	ldr	r0, [fp, #-16]
   2d80c:	lsl	r0, r0, #2
   2d810:	str	r0, [fp, #-24]	; 0xffffffe8
   2d814:	ldr	r0, [fp, #-16]
   2d818:	bl	2a890 <flatcc_builder_embed_buffer@@Base+0x388>
   2d81c:	str	r0, [fp, #-32]	; 0xffffffe0
   2d820:	ldr	r0, [fp, #-8]
   2d824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d828:	ldr	r2, [sp]
   2d82c:	bl	2a85c <flatcc_builder_embed_buffer@@Base+0x354>
   2d830:	str	r0, [fp, #-28]	; 0xffffffe4
   2d834:	mov	r0, #0
   2d838:	str	r0, [sp, #4]
   2d83c:	str	r0, [sp, #8]
   2d840:	ldr	r0, [sp, #4]
   2d844:	add	r0, r0, #4
   2d848:	str	r0, [sp, #4]
   2d84c:	add	r0, sp, #4
   2d850:	add	r0, r0, #8
   2d854:	ldr	r1, [sp, #8]
   2d858:	sub	r2, fp, #32
   2d85c:	str	r2, [r0, r1, lsl #3]
   2d860:	ldr	r1, [sp, #8]
   2d864:	add	r0, r0, r1, lsl #3
   2d868:	movw	r1, #4
   2d86c:	str	r1, [r0, #4]
   2d870:	ldr	r0, [sp, #8]
   2d874:	add	r0, r0, #1
   2d878:	str	r0, [sp, #8]
   2d87c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d880:	cmp	r0, #0
   2d884:	bls	2d8c8 <flatcc_builder_create_offset_vector_direct@@Base+0x13c>
   2d888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d88c:	ldr	r1, [sp, #4]
   2d890:	add	r0, r1, r0
   2d894:	str	r0, [sp, #4]
   2d898:	ldr	r0, [fp, #-12]
   2d89c:	add	r1, sp, #4
   2d8a0:	add	r1, r1, #8
   2d8a4:	ldr	r2, [sp, #8]
   2d8a8:	str	r0, [r1, r2, lsl #3]
   2d8ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d8b0:	ldr	r2, [sp, #8]
   2d8b4:	add	r1, r1, r2, lsl #3
   2d8b8:	str	r0, [r1, #4]
   2d8bc:	ldr	r0, [sp, #8]
   2d8c0:	add	r0, r0, #1
   2d8c4:	str	r0, [sp, #8]
   2d8c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d8cc:	cmp	r0, #0
   2d8d0:	bls	2d918 <flatcc_builder_create_offset_vector_direct@@Base+0x18c>
   2d8d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d8d8:	ldr	r1, [sp, #4]
   2d8dc:	add	r0, r1, r0
   2d8e0:	str	r0, [sp, #4]
   2d8e4:	add	r0, sp, #4
   2d8e8:	add	r0, r0, #8
   2d8ec:	ldr	r1, [sp, #8]
   2d8f0:	ldr	r2, [pc, #444]	; 2dab4 <flatcc_builder_create_offset_vector_direct@@Base+0x328>
   2d8f4:	ldr	r2, [pc, r2]
   2d8f8:	str	r2, [r0, r1, lsl #3]
   2d8fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d900:	ldr	r2, [sp, #8]
   2d904:	add	r0, r0, r2, lsl #3
   2d908:	str	r1, [r0, #4]
   2d90c:	ldr	r0, [sp, #8]
   2d910:	add	r0, r0, #1
   2d914:	str	r0, [sp, #8]
   2d918:	ldr	r0, [fp, #-8]
   2d91c:	ldr	r0, [r0, #136]	; 0x88
   2d920:	ldr	r1, [sp, #4]
   2d924:	sub	r0, r0, r1
   2d928:	str	r0, [fp, #-36]	; 0xffffffdc
   2d92c:	movw	r0, #0
   2d930:	str	r0, [fp, #-44]	; 0xffffffd4
   2d934:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d938:	ldr	r1, [fp, #-16]
   2d93c:	cmp	r0, r1
   2d940:	bcs	2da70 <flatcc_builder_create_offset_vector_direct@@Base+0x2e4>
   2d944:	ldr	r0, [fp, #-12]
   2d948:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d94c:	add	r0, r0, r1, lsl #2
   2d950:	ldr	r0, [r0]
   2d954:	cmp	r0, #0
   2d958:	beq	2d9e8 <flatcc_builder_create_offset_vector_direct@@Base+0x25c>
   2d95c:	ldr	r0, [fp, #-12]
   2d960:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d964:	ldr	r0, [r0, r1, lsl #2]
   2d968:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d96c:	sub	r0, r0, r2
   2d970:	sub	r0, r0, r1, lsl #2
   2d974:	sub	r0, r0, #4
   2d978:	str	r0, [fp, #-40]	; 0xffffffd8
   2d97c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d980:	bl	2a890 <flatcc_builder_embed_buffer@@Base+0x388>
   2d984:	ldr	r1, [fp, #-12]
   2d988:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2d98c:	add	r1, r1, r2, lsl #2
   2d990:	str	r0, [r1]
   2d994:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d998:	movw	r1, #0
   2d99c:	cmp	r0, r1
   2d9a0:	beq	2d9e4 <flatcc_builder_create_offset_vector_direct@@Base+0x258>
   2d9a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d9a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d9ac:	add	r0, r0, r1
   2d9b0:	ldrb	r0, [r0]
   2d9b4:	cmp	r0, #0
   2d9b8:	beq	2d9c0 <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   2d9bc:	b	2d9e0 <flatcc_builder_create_offset_vector_direct@@Base+0x254>
   2d9c0:	ldr	r0, [pc, #224]	; 2daa8 <flatcc_builder_create_offset_vector_direct@@Base+0x31c>
   2d9c4:	add	r0, pc, r0
   2d9c8:	ldr	r1, [pc, #220]	; 2daac <flatcc_builder_create_offset_vector_direct@@Base+0x320>
   2d9cc:	add	r1, pc, r1
   2d9d0:	ldr	r2, [pc, #216]	; 2dab0 <flatcc_builder_create_offset_vector_direct@@Base+0x324>
   2d9d4:	add	r3, pc, r2
   2d9d8:	movw	r2, #1457	; 0x5b1
   2d9dc:	bl	14f08 <__assert_fail@plt>
   2d9e0:	b	2d9e4 <flatcc_builder_create_offset_vector_direct@@Base+0x258>
   2d9e4:	b	2da5c <flatcc_builder_create_offset_vector_direct@@Base+0x2d0>
   2d9e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d9ec:	movw	r1, #0
   2d9f0:	cmp	r0, r1
   2d9f4:	beq	2da38 <flatcc_builder_create_offset_vector_direct@@Base+0x2ac>
   2d9f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d9fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2da00:	add	r0, r0, r1
   2da04:	ldrb	r0, [r0]
   2da08:	cmp	r0, #0
   2da0c:	bne	2da14 <flatcc_builder_create_offset_vector_direct@@Base+0x288>
   2da10:	b	2da34 <flatcc_builder_create_offset_vector_direct@@Base+0x2a8>
   2da14:	ldr	r0, [pc, #128]	; 2da9c <flatcc_builder_create_offset_vector_direct@@Base+0x310>
   2da18:	add	r0, pc, r0
   2da1c:	ldr	r1, [pc, #124]	; 2daa0 <flatcc_builder_create_offset_vector_direct@@Base+0x314>
   2da20:	add	r1, pc, r1
   2da24:	ldr	r2, [pc, #120]	; 2daa4 <flatcc_builder_create_offset_vector_direct@@Base+0x318>
   2da28:	add	r3, pc, r2
   2da2c:	movw	r2, #1461	; 0x5b5
   2da30:	bl	14f08 <__assert_fail@plt>
   2da34:	b	2da58 <flatcc_builder_create_offset_vector_direct@@Base+0x2cc>
   2da38:	ldr	r0, [pc, #80]	; 2da90 <flatcc_builder_create_offset_vector_direct@@Base+0x304>
   2da3c:	add	r0, pc, r0
   2da40:	ldr	r1, [pc, #76]	; 2da94 <flatcc_builder_create_offset_vector_direct@@Base+0x308>
   2da44:	add	r1, pc, r1
   2da48:	ldr	r2, [pc, #72]	; 2da98 <flatcc_builder_create_offset_vector_direct@@Base+0x30c>
   2da4c:	add	r3, pc, r2
   2da50:	movw	r2, #1463	; 0x5b7
   2da54:	bl	14f08 <__assert_fail@plt>
   2da58:	b	2da5c <flatcc_builder_create_offset_vector_direct@@Base+0x2d0>
   2da5c:	b	2da60 <flatcc_builder_create_offset_vector_direct@@Base+0x2d4>
   2da60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2da64:	add	r0, r0, #1
   2da68:	str	r0, [fp, #-44]	; 0xffffffd4
   2da6c:	b	2d934 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   2da70:	ldr	r0, [fp, #-8]
   2da74:	add	r1, sp, #4
   2da78:	bl	2a8a4 <flatcc_builder_embed_buffer@@Base+0x39c>
   2da7c:	str	r0, [fp, #-4]
   2da80:	ldr	r0, [fp, #-4]
   2da84:	mov	sp, fp
   2da88:	pop	{fp, pc}
   2da8c:	svccc	0x00ffffff
   2da90:	andeq	lr, r1, r3, lsl #15
   2da94:			; <UNDEFINED> instruction: 0x0001d5be
   2da98:	andeq	lr, r1, r5, ror r7
   2da9c:	andeq	lr, r1, ip, lsr #16
   2daa0:	andeq	sp, r1, r2, ror #11
   2daa4:	muleq	r1, r9, r7
   2daa8:	andeq	lr, r1, pc, ror #15
   2daac:	andeq	sp, r1, r6, lsr r6
   2dab0:	andeq	lr, r1, sp, ror #15
   2dab4:	andeq	r1, r3, ip, ror #14

0002dab8 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2dab8:	push	{fp, lr}
   2dabc:	mov	fp, sp
   2dac0:	sub	sp, sp, #16
   2dac4:	str	r0, [sp, #8]
   2dac8:	str	r1, [sp, #4]
   2dacc:	ldr	r0, [sp, #8]
   2dad0:	ldr	r0, [r0, #32]
   2dad4:	ldrh	r0, [r0, #14]
   2dad8:	cmp	r0, #5
   2dadc:	bne	2dae4 <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   2dae0:	b	2db04 <flatcc_builder_end_offset_vector_for_unions@@Base+0x4c>
   2dae4:	ldr	r0, [pc, #112]	; 2db5c <flatcc_builder_end_offset_vector_for_unions@@Base+0xa4>
   2dae8:	add	r0, pc, r0
   2daec:	ldr	r1, [pc, #108]	; 2db60 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa8>
   2daf0:	add	r1, pc, r1
   2daf4:	ldr	r2, [pc, #104]	; 2db64 <flatcc_builder_end_offset_vector_for_unions@@Base+0xac>
   2daf8:	add	r3, pc, r2
   2dafc:	movw	r2, #1493	; 0x5d5
   2db00:	bl	14f08 <__assert_fail@plt>
   2db04:	ldr	r0, [sp, #8]
   2db08:	ldr	r1, [sp, #8]
   2db0c:	ldr	r1, [r1, #16]
   2db10:	ldr	r2, [sp, #8]
   2db14:	ldr	r2, [r2, #32]
   2db18:	ldr	r2, [r2, #20]
   2db1c:	ldr	r3, [sp, #4]
   2db20:	bl	2d7c0 <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   2db24:	str	r0, [sp]
   2db28:	movw	r1, #0
   2db2c:	cmp	r1, r0
   2db30:	bne	2db40 <flatcc_builder_end_offset_vector_for_unions@@Base+0x88>
   2db34:	movw	r0, #0
   2db38:	str	r0, [fp, #-4]
   2db3c:	b	2db50 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
   2db40:	ldr	r0, [sp, #8]
   2db44:	bl	2b398 <flatcc_builder_end_buffer@@Base+0x164>
   2db48:	ldr	r0, [sp]
   2db4c:	str	r0, [fp, #-4]
   2db50:	ldr	r0, [fp, #-4]
   2db54:	mov	sp, fp
   2db58:	pop	{fp, pc}
   2db5c:	andeq	sp, r1, sp, asr #18
   2db60:	andeq	sp, r1, r2, lsl r5
   2db64:			; <UNDEFINED> instruction: 0x0001dfb6

0002db68 <flatcc_builder_offset_vector_edit@@Base>:
   2db68:	sub	sp, sp, #4
   2db6c:	str	r0, [sp]
   2db70:	ldr	r0, [sp]
   2db74:	ldr	r0, [r0, #16]
   2db78:	add	sp, sp, #4
   2db7c:	bx	lr

0002db80 <flatcc_builder_offset_vector_count@@Base>:
   2db80:	sub	sp, sp, #4
   2db84:	str	r0, [sp]
   2db88:	ldr	r0, [sp]
   2db8c:	ldr	r0, [r0, #32]
   2db90:	ldr	r0, [r0, #20]
   2db94:	add	sp, sp, #4
   2db98:	bx	lr

0002db9c <flatcc_builder_table_add_union@@Base>:
   2db9c:	push	{fp, lr}
   2dba0:	mov	fp, sp
   2dba4:	sub	sp, sp, #32
   2dba8:	str	r2, [fp, #-12]
   2dbac:	str	r3, [fp, #-8]
   2dbb0:	str	r0, [sp, #16]
   2dbb4:	str	r1, [sp, #12]
   2dbb8:	ldr	r0, [sp, #16]
   2dbbc:	ldr	r0, [r0, #32]
   2dbc0:	ldrh	r0, [r0, #14]
   2dbc4:	cmp	r0, #3
   2dbc8:	bne	2dbd0 <flatcc_builder_table_add_union@@Base+0x34>
   2dbcc:	b	2dbf0 <flatcc_builder_table_add_union@@Base+0x54>
   2dbd0:	ldr	r0, [pc, #388]	; 2dd5c <flatcc_builder_table_add_union@@Base+0x1c0>
   2dbd4:	add	r0, pc, r0
   2dbd8:	ldr	r1, [pc, #384]	; 2dd60 <flatcc_builder_table_add_union@@Base+0x1c4>
   2dbdc:	add	r1, pc, r1
   2dbe0:	ldr	r2, [pc, #380]	; 2dd64 <flatcc_builder_table_add_union@@Base+0x1c8>
   2dbe4:	add	r3, pc, r2
   2dbe8:	movw	r2, #1518	; 0x5ee
   2dbec:	bl	14f08 <__assert_fail@plt>
   2dbf0:	ldrb	r0, [fp, #-12]
   2dbf4:	cmp	r0, #0
   2dbf8:	bne	2dc50 <flatcc_builder_table_add_union@@Base+0xb4>
   2dbfc:	ldr	r0, [fp, #-8]
   2dc00:	cmp	r0, #0
   2dc04:	beq	2dc50 <flatcc_builder_table_add_union@@Base+0xb4>
   2dc08:	ldrb	r0, [fp, #-12]
   2dc0c:	cmp	r0, #0
   2dc10:	bne	2dc20 <flatcc_builder_table_add_union@@Base+0x84>
   2dc14:	ldr	r0, [fp, #-8]
   2dc18:	cmp	r0, #0
   2dc1c:	bne	2dc24 <flatcc_builder_table_add_union@@Base+0x88>
   2dc20:	b	2dc44 <flatcc_builder_table_add_union@@Base+0xa8>
   2dc24:	ldr	r0, [pc, #316]	; 2dd68 <flatcc_builder_table_add_union@@Base+0x1cc>
   2dc28:	add	r0, pc, r0
   2dc2c:	ldr	r1, [pc, #312]	; 2dd6c <flatcc_builder_table_add_union@@Base+0x1d0>
   2dc30:	add	r1, pc, r1
   2dc34:	ldr	r2, [pc, #308]	; 2dd70 <flatcc_builder_table_add_union@@Base+0x1d4>
   2dc38:	add	r3, pc, r2
   2dc3c:	movw	r2, #1519	; 0x5ef
   2dc40:	bl	14f08 <__assert_fail@plt>
   2dc44:	mvn	r0, #0
   2dc48:	str	r0, [fp, #-4]
   2dc4c:	b	2dd50 <flatcc_builder_table_add_union@@Base+0x1b4>
   2dc50:	ldr	r0, [fp, #-8]
   2dc54:	cmp	r0, #0
   2dc58:	beq	2dcc8 <flatcc_builder_table_add_union@@Base+0x12c>
   2dc5c:	ldr	r0, [sp, #16]
   2dc60:	ldr	r1, [sp, #12]
   2dc64:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   2dc68:	str	r0, [sp, #8]
   2dc6c:	ldr	r0, [sp, #8]
   2dc70:	movw	r1, #0
   2dc74:	cmp	r0, r1
   2dc78:	bne	2dcbc <flatcc_builder_table_add_union@@Base+0x120>
   2dc7c:	ldr	r0, [sp, #8]
   2dc80:	movw	r1, #0
   2dc84:	cmp	r0, r1
   2dc88:	beq	2dc90 <flatcc_builder_table_add_union@@Base+0xf4>
   2dc8c:	b	2dcb0 <flatcc_builder_table_add_union@@Base+0x114>
   2dc90:	ldr	r0, [pc, #220]	; 2dd74 <flatcc_builder_table_add_union@@Base+0x1d8>
   2dc94:	add	r0, pc, r0
   2dc98:	ldr	r1, [pc, #216]	; 2dd78 <flatcc_builder_table_add_union@@Base+0x1dc>
   2dc9c:	add	r1, pc, r1
   2dca0:	ldr	r2, [pc, #212]	; 2dd7c <flatcc_builder_table_add_union@@Base+0x1e0>
   2dca4:	add	r3, pc, r2
   2dca8:	movw	r2, #1522	; 0x5f2
   2dcac:	bl	14f08 <__assert_fail@plt>
   2dcb0:	mvn	r0, #0
   2dcb4:	str	r0, [fp, #-4]
   2dcb8:	b	2dd50 <flatcc_builder_table_add_union@@Base+0x1b4>
   2dcbc:	ldr	r0, [fp, #-8]
   2dcc0:	ldr	r1, [sp, #8]
   2dcc4:	str	r0, [r1]
   2dcc8:	ldr	r0, [sp, #16]
   2dccc:	ldr	r1, [sp, #12]
   2dcd0:	sub	r1, r1, #1
   2dcd4:	movw	r2, #1
   2dcd8:	movw	r3, #1
   2dcdc:	uxth	r3, r3
   2dce0:	bl	2debc <flatcc_builder_table_add@@Base>
   2dce4:	str	r0, [sp, #4]
   2dce8:	ldr	r0, [sp, #4]
   2dcec:	movw	r1, #0
   2dcf0:	cmp	r0, r1
   2dcf4:	bne	2dd38 <flatcc_builder_table_add_union@@Base+0x19c>
   2dcf8:	ldr	r0, [sp, #4]
   2dcfc:	movw	r1, #0
   2dd00:	cmp	r0, r1
   2dd04:	beq	2dd0c <flatcc_builder_table_add_union@@Base+0x170>
   2dd08:	b	2dd2c <flatcc_builder_table_add_union@@Base+0x190>
   2dd0c:	ldr	r0, [pc, #108]	; 2dd80 <flatcc_builder_table_add_union@@Base+0x1e4>
   2dd10:	add	r0, pc, r0
   2dd14:	ldr	r1, [pc, #104]	; 2dd84 <flatcc_builder_table_add_union@@Base+0x1e8>
   2dd18:	add	r1, pc, r1
   2dd1c:	ldr	r2, [pc, #100]	; 2dd88 <flatcc_builder_table_add_union@@Base+0x1ec>
   2dd20:	add	r3, pc, r2
   2dd24:	movw	r2, #1526	; 0x5f6
   2dd28:	bl	14f08 <__assert_fail@plt>
   2dd2c:	mvn	r0, #0
   2dd30:	str	r0, [fp, #-4]
   2dd34:	b	2dd50 <flatcc_builder_table_add_union@@Base+0x1b4>
   2dd38:	ldrb	r0, [fp, #-12]
   2dd3c:	bl	2e024 <flatcc_builder_table_add@@Base+0x168>
   2dd40:	ldr	r1, [sp, #4]
   2dd44:	strb	r0, [r1]
   2dd48:	movw	r0, #0
   2dd4c:	str	r0, [fp, #-4]
   2dd50:	ldr	r0, [fp, #-4]
   2dd54:	mov	sp, fp
   2dd58:	pop	{fp, pc}
   2dd5c:	andeq	sp, r1, sl, asr ip
   2dd60:	andeq	sp, r1, r6, lsr #8
   2dd64:	andeq	sp, r1, ip, lsr pc
   2dd68:	andeq	sp, r1, r0, asr pc
   2dd6c:	ldrdeq	sp, [r1], -r2
   2dd70:	andeq	sp, r1, r8, ror #29
   2dd74:	andeq	sp, r1, r6, lsl #30
   2dd78:	andeq	sp, r1, r6, ror #6
   2dd7c:	andeq	sp, r1, ip, ror lr
   2dd80:	muleq	r1, r4, lr
   2dd84:	andeq	sp, r1, sl, ror #5
   2dd88:	andeq	sp, r1, r0, lsl #28

0002dd8c <flatcc_builder_table_add_offset@@Base>:
   2dd8c:	push	{fp, lr}
   2dd90:	mov	fp, sp
   2dd94:	sub	sp, sp, #8
   2dd98:	str	r0, [sp, #4]
   2dd9c:	str	r1, [sp]
   2dda0:	ldr	r0, [sp, #4]
   2dda4:	ldr	r0, [r0, #32]
   2dda8:	ldrh	r0, [r0, #14]
   2ddac:	cmp	r0, #3
   2ddb0:	bne	2ddb8 <flatcc_builder_table_add_offset@@Base+0x2c>
   2ddb4:	b	2ddd8 <flatcc_builder_table_add_offset@@Base+0x4c>
   2ddb8:	ldr	r0, [pc, #212]	; 2de94 <flatcc_builder_table_add_offset@@Base+0x108>
   2ddbc:	add	r0, pc, r0
   2ddc0:	ldr	r1, [pc, #208]	; 2de98 <flatcc_builder_table_add_offset@@Base+0x10c>
   2ddc4:	add	r1, pc, r1
   2ddc8:	ldr	r2, [pc, #204]	; 2de9c <flatcc_builder_table_add_offset@@Base+0x110>
   2ddcc:	add	r3, pc, r2
   2ddd0:	movw	r2, #1811	; 0x713
   2ddd4:	bl	14f08 <__assert_fail@plt>
   2ddd8:	ldr	r0, [sp]
   2dddc:	cmp	r0, #0
   2dde0:	blt	2ddf8 <flatcc_builder_table_add_offset@@Base+0x6c>
   2dde4:	ldr	r0, [sp]
   2dde8:	movw	r1, #32764	; 0x7ffc
   2ddec:	cmp	r0, r1
   2ddf0:	bgt	2ddf8 <flatcc_builder_table_add_offset@@Base+0x6c>
   2ddf4:	b	2de18 <flatcc_builder_table_add_offset@@Base+0x8c>
   2ddf8:	ldr	r0, [pc, #160]	; 2dea0 <flatcc_builder_table_add_offset@@Base+0x114>
   2ddfc:	add	r0, pc, r0
   2de00:	ldr	r1, [pc, #156]	; 2dea4 <flatcc_builder_table_add_offset@@Base+0x118>
   2de04:	add	r1, pc, r1
   2de08:	ldr	r2, [pc, #152]	; 2dea8 <flatcc_builder_table_add_offset@@Base+0x11c>
   2de0c:	add	r3, pc, r2
   2de10:	movw	r2, #1812	; 0x714
   2de14:	bl	14f08 <__assert_fail@plt>
   2de18:	ldr	r0, [sp, #4]
   2de1c:	ldr	r0, [r0, #4]
   2de20:	ldr	r1, [sp]
   2de24:	add	r0, r0, r1, lsl #1
   2de28:	ldrh	r0, [r0]
   2de2c:	cmp	r0, #0
   2de30:	beq	2de54 <flatcc_builder_table_add_offset@@Base+0xc8>
   2de34:	ldr	r0, [pc, #116]	; 2deb0 <flatcc_builder_table_add_offset@@Base+0x124>
   2de38:	add	r0, pc, r0
   2de3c:	ldr	r1, [pc, #112]	; 2deb4 <flatcc_builder_table_add_offset@@Base+0x128>
   2de40:	add	r1, pc, r1
   2de44:	ldr	r2, [pc, #108]	; 2deb8 <flatcc_builder_table_add_offset@@Base+0x12c>
   2de48:	add	r3, pc, r2
   2de4c:	movw	r2, #1819	; 0x71b
   2de50:	bl	14f08 <__assert_fail@plt>
   2de54:	ldr	r0, [pc, #80]	; 2deac <flatcc_builder_table_add_offset@@Base+0x120>
   2de58:	ldr	r1, [sp]
   2de5c:	ldr	r2, [sp, #4]
   2de60:	ldr	r2, [r2, #12]
   2de64:	eor	r1, r1, r2
   2de68:	mul	r1, r1, r0
   2de6c:	eor	r1, r1, #4
   2de70:	mul	r0, r1, r0
   2de74:	ldr	r1, [sp, #4]
   2de78:	str	r0, [r1, #12]
   2de7c:	ldr	r0, [sp, #4]
   2de80:	ldr	r1, [sp]
   2de84:	uxth	r1, r1
   2de88:	bl	2ee4c <flatcc_builder_table_add_copy@@Base+0x64>
   2de8c:	mov	sp, fp
   2de90:	pop	{fp, pc}
   2de94:	andeq	sp, r1, r2, ror sl
   2de98:	andeq	sp, r1, lr, lsr r2
   2de9c:	andeq	lr, r1, r6, asr r1
   2dea0:	andeq	lr, r1, r6, lsr #1
   2dea4:	strdeq	sp, [r1], -lr
   2dea8:	andeq	lr, r1, r6, lsl r1
   2deac:			; <UNDEFINED> instruction: 0x9e3779b1
   2deb0:	andeq	lr, r1, r7, lsl #7
   2deb4:	andeq	sp, r1, r2, asr #3
   2deb8:	ldrdeq	lr, [r1], -sl

0002debc <flatcc_builder_table_add@@Base>:
   2debc:	push	{fp, lr}
   2dec0:	mov	fp, sp
   2dec4:	sub	sp, sp, #16
   2dec8:	str	r0, [fp, #-4]
   2decc:	str	r1, [sp, #8]
   2ded0:	str	r2, [sp, #4]
   2ded4:	strh	r3, [sp, #2]
   2ded8:	ldr	r0, [fp, #-4]
   2dedc:	ldr	r0, [r0, #32]
   2dee0:	ldrh	r0, [r0, #14]
   2dee4:	cmp	r0, #3
   2dee8:	bne	2def0 <flatcc_builder_table_add@@Base+0x34>
   2deec:	b	2df10 <flatcc_builder_table_add@@Base+0x54>
   2def0:	ldr	r0, [pc, #260]	; 2dffc <flatcc_builder_table_add@@Base+0x140>
   2def4:	add	r0, pc, r0
   2def8:	ldr	r1, [pc, #256]	; 2e000 <flatcc_builder_table_add@@Base+0x144>
   2defc:	add	r1, pc, r1
   2df00:	ldr	r2, [pc, #252]	; 2e004 <flatcc_builder_table_add@@Base+0x148>
   2df04:	add	r3, pc, r2
   2df08:	movw	r2, #1773	; 0x6ed
   2df0c:	bl	14f08 <__assert_fail@plt>
   2df10:	ldr	r0, [sp, #8]
   2df14:	cmp	r0, #0
   2df18:	blt	2df30 <flatcc_builder_table_add@@Base+0x74>
   2df1c:	ldr	r0, [sp, #8]
   2df20:	movw	r1, #32764	; 0x7ffc
   2df24:	cmp	r0, r1
   2df28:	bgt	2df30 <flatcc_builder_table_add@@Base+0x74>
   2df2c:	b	2df50 <flatcc_builder_table_add@@Base+0x94>
   2df30:	ldr	r0, [pc, #208]	; 2e008 <flatcc_builder_table_add@@Base+0x14c>
   2df34:	add	r0, pc, r0
   2df38:	ldr	r1, [pc, #204]	; 2e00c <flatcc_builder_table_add@@Base+0x150>
   2df3c:	add	r1, pc, r1
   2df40:	ldr	r2, [pc, #200]	; 2e010 <flatcc_builder_table_add@@Base+0x154>
   2df44:	add	r3, pc, r2
   2df48:	movw	r2, #1774	; 0x6ee
   2df4c:	bl	14f08 <__assert_fail@plt>
   2df50:	ldrh	r0, [sp, #2]
   2df54:	ldr	r1, [fp, #-4]
   2df58:	ldrh	r1, [r1, #130]	; 0x82
   2df5c:	cmp	r0, r1
   2df60:	ble	2df70 <flatcc_builder_table_add@@Base+0xb4>
   2df64:	ldrh	r0, [sp, #2]
   2df68:	ldr	r1, [fp, #-4]
   2df6c:	strh	r0, [r1, #130]	; 0x82
   2df70:	ldr	r0, [fp, #-4]
   2df74:	ldr	r0, [r0, #4]
   2df78:	ldr	r1, [sp, #8]
   2df7c:	add	r0, r0, r1, lsl #1
   2df80:	ldrh	r0, [r0]
   2df84:	cmp	r0, #0
   2df88:	beq	2dfac <flatcc_builder_table_add@@Base+0xf0>
   2df8c:	ldr	r0, [pc, #132]	; 2e018 <flatcc_builder_table_add@@Base+0x15c>
   2df90:	add	r0, pc, r0
   2df94:	ldr	r1, [pc, #128]	; 2e01c <flatcc_builder_table_add@@Base+0x160>
   2df98:	add	r1, pc, r1
   2df9c:	ldr	r2, [pc, #124]	; 2e020 <flatcc_builder_table_add@@Base+0x164>
   2dfa0:	add	r3, pc, r2
   2dfa4:	movw	r2, #1784	; 0x6f8
   2dfa8:	bl	14f08 <__assert_fail@plt>
   2dfac:	ldr	r0, [pc, #96]	; 2e014 <flatcc_builder_table_add@@Base+0x158>
   2dfb0:	ldr	r1, [sp, #8]
   2dfb4:	ldr	r2, [fp, #-4]
   2dfb8:	ldr	r2, [r2, #12]
   2dfbc:	eor	r1, r1, r2
   2dfc0:	mul	r1, r1, r0
   2dfc4:	ldr	r2, [sp, #4]
   2dfc8:	eor	r1, r1, r2
   2dfcc:	mul	r0, r1, r0
   2dfd0:	ldr	r1, [fp, #-4]
   2dfd4:	str	r0, [r1, #12]
   2dfd8:	ldr	r0, [fp, #-4]
   2dfdc:	ldr	r1, [sp, #4]
   2dfe0:	ldrh	r2, [sp, #2]
   2dfe4:	ldr	r3, [sp, #8]
   2dfe8:	uxth	r2, r2
   2dfec:	uxth	r3, r3
   2dff0:	bl	2ec68 <flatcc_builder_string_len@@Base+0x1c>
   2dff4:	mov	sp, fp
   2dff8:	pop	{fp, pc}
   2dffc:	andeq	sp, r1, sl, lsr r9
   2e000:	andeq	sp, r1, r6, lsl #2
   2e004:	andeq	sp, r1, r4, asr pc
   2e008:	andeq	sp, r1, lr, ror #30
   2e00c:	andeq	sp, r1, r6, asr #1
   2e010:	andeq	sp, r1, r4, lsl pc
   2e014:			; <UNDEFINED> instruction: 0x9e3779b1
   2e018:	andeq	lr, r1, pc, lsr #4
   2e01c:	andeq	sp, r1, sl, rrx
   2e020:			; <UNDEFINED> instruction: 0x0001deb8
   2e024:	sub	sp, sp, #4
   2e028:	strb	r0, [sp, #3]
   2e02c:	ldrb	r0, [sp, #3]
   2e030:	add	sp, sp, #4
   2e034:	bx	lr

0002e038 <flatcc_builder_table_add_union_vector@@Base>:
   2e038:	push	{fp, lr}
   2e03c:	mov	fp, sp
   2e040:	sub	sp, sp, #24
   2e044:	str	r2, [sp, #12]
   2e048:	str	r3, [sp, #16]
   2e04c:	str	r0, [sp, #8]
   2e050:	str	r1, [sp, #4]
   2e054:	ldr	r0, [sp, #8]
   2e058:	ldr	r0, [r0, #32]
   2e05c:	ldrh	r0, [r0, #14]
   2e060:	cmp	r0, #3
   2e064:	bne	2e06c <flatcc_builder_table_add_union_vector@@Base+0x34>
   2e068:	b	2e08c <flatcc_builder_table_add_union_vector@@Base+0x54>
   2e06c:	ldr	r0, [pc, #420]	; 2e218 <flatcc_builder_table_add_union_vector@@Base+0x1e0>
   2e070:	add	r0, pc, r0
   2e074:	ldr	r1, [pc, #416]	; 2e21c <flatcc_builder_table_add_union_vector@@Base+0x1e4>
   2e078:	add	r1, pc, r1
   2e07c:	ldr	r2, [pc, #412]	; 2e220 <flatcc_builder_table_add_union_vector@@Base+0x1e8>
   2e080:	add	r3, pc, r2
   2e084:	movw	r2, #1536	; 0x600
   2e088:	bl	14f08 <__assert_fail@plt>
   2e08c:	ldr	r0, [sp, #12]
   2e090:	cmp	r0, #0
   2e094:	movw	r0, #0
   2e098:	moveq	r0, #1
   2e09c:	and	r0, r0, #1
   2e0a0:	ldr	r1, [sp, #16]
   2e0a4:	cmp	r1, #0
   2e0a8:	movw	r1, #0
   2e0ac:	moveq	r1, #1
   2e0b0:	and	r1, r1, #1
   2e0b4:	cmp	r0, r1
   2e0b8:	beq	2e11c <flatcc_builder_table_add_union_vector@@Base+0xe4>
   2e0bc:	ldr	r0, [sp, #12]
   2e0c0:	cmp	r0, #0
   2e0c4:	movw	r0, #0
   2e0c8:	moveq	r0, #1
   2e0cc:	and	r0, r0, #1
   2e0d0:	ldr	r1, [sp, #16]
   2e0d4:	cmp	r1, #0
   2e0d8:	movw	r1, #0
   2e0dc:	moveq	r1, #1
   2e0e0:	and	r1, r1, #1
   2e0e4:	cmp	r0, r1
   2e0e8:	bne	2e0f0 <flatcc_builder_table_add_union_vector@@Base+0xb8>
   2e0ec:	b	2e110 <flatcc_builder_table_add_union_vector@@Base+0xd8>
   2e0f0:	ldr	r0, [pc, #300]	; 2e224 <flatcc_builder_table_add_union_vector@@Base+0x1ec>
   2e0f4:	add	r0, pc, r0
   2e0f8:	ldr	r1, [pc, #296]	; 2e228 <flatcc_builder_table_add_union_vector@@Base+0x1f0>
   2e0fc:	add	r1, pc, r1
   2e100:	ldr	r2, [pc, #292]	; 2e22c <flatcc_builder_table_add_union_vector@@Base+0x1f4>
   2e104:	add	r3, pc, r2
   2e108:	movw	r2, #1537	; 0x601
   2e10c:	bl	14f08 <__assert_fail@plt>
   2e110:	mvn	r0, #0
   2e114:	str	r0, [fp, #-4]
   2e118:	b	2e20c <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   2e11c:	ldr	r0, [sp, #12]
   2e120:	cmp	r0, #0
   2e124:	beq	2e204 <flatcc_builder_table_add_union_vector@@Base+0x1cc>
   2e128:	ldr	r0, [sp, #8]
   2e12c:	ldr	r1, [sp, #4]
   2e130:	sub	r1, r1, #1
   2e134:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   2e138:	str	r0, [sp]
   2e13c:	ldr	r0, [sp]
   2e140:	movw	r1, #0
   2e144:	cmp	r0, r1
   2e148:	bne	2e18c <flatcc_builder_table_add_union_vector@@Base+0x154>
   2e14c:	ldr	r0, [sp]
   2e150:	movw	r1, #0
   2e154:	cmp	r0, r1
   2e158:	beq	2e160 <flatcc_builder_table_add_union_vector@@Base+0x128>
   2e15c:	b	2e180 <flatcc_builder_table_add_union_vector@@Base+0x148>
   2e160:	ldr	r0, [pc, #200]	; 2e230 <flatcc_builder_table_add_union_vector@@Base+0x1f8>
   2e164:	add	r0, pc, r0
   2e168:	ldr	r1, [pc, #196]	; 2e234 <flatcc_builder_table_add_union_vector@@Base+0x1fc>
   2e16c:	add	r1, pc, r1
   2e170:	ldr	r2, [pc, #192]	; 2e238 <flatcc_builder_table_add_union_vector@@Base+0x200>
   2e174:	add	r3, pc, r2
   2e178:	movw	r2, #1540	; 0x604
   2e17c:	bl	14f08 <__assert_fail@plt>
   2e180:	mvn	r0, #0
   2e184:	str	r0, [fp, #-4]
   2e188:	b	2e20c <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   2e18c:	ldr	r0, [sp, #12]
   2e190:	ldr	r1, [sp]
   2e194:	str	r0, [r1]
   2e198:	ldr	r0, [sp, #8]
   2e19c:	ldr	r1, [sp, #4]
   2e1a0:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   2e1a4:	str	r0, [sp]
   2e1a8:	ldr	r0, [sp]
   2e1ac:	movw	r1, #0
   2e1b0:	cmp	r0, r1
   2e1b4:	bne	2e1f8 <flatcc_builder_table_add_union_vector@@Base+0x1c0>
   2e1b8:	ldr	r0, [sp]
   2e1bc:	movw	r1, #0
   2e1c0:	cmp	r0, r1
   2e1c4:	beq	2e1cc <flatcc_builder_table_add_union_vector@@Base+0x194>
   2e1c8:	b	2e1ec <flatcc_builder_table_add_union_vector@@Base+0x1b4>
   2e1cc:	ldr	r0, [pc, #104]	; 2e23c <flatcc_builder_table_add_union_vector@@Base+0x204>
   2e1d0:	add	r0, pc, r0
   2e1d4:	ldr	r1, [pc, #100]	; 2e240 <flatcc_builder_table_add_union_vector@@Base+0x208>
   2e1d8:	add	r1, pc, r1
   2e1dc:	ldr	r2, [pc, #96]	; 2e244 <flatcc_builder_table_add_union_vector@@Base+0x20c>
   2e1e0:	add	r3, pc, r2
   2e1e4:	movw	r2, #1544	; 0x608
   2e1e8:	bl	14f08 <__assert_fail@plt>
   2e1ec:	mvn	r0, #0
   2e1f0:	str	r0, [fp, #-4]
   2e1f4:	b	2e20c <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   2e1f8:	ldr	r0, [sp, #16]
   2e1fc:	ldr	r1, [sp]
   2e200:	str	r0, [r1]
   2e204:	movw	r0, #0
   2e208:	str	r0, [fp, #-4]
   2e20c:	ldr	r0, [fp, #-4]
   2e210:	mov	sp, fp
   2e214:	pop	{fp, pc}
   2e218:			; <UNDEFINED> instruction: 0x0001d7be
   2e21c:	andeq	ip, r1, sl, lsl #31
   2e220:	andeq	sp, r1, r0, lsr fp
   2e224:	andeq	sp, r1, pc, lsl fp
   2e228:	andeq	ip, r1, r6, lsl #30
   2e22c:	andeq	sp, r1, ip, lsr #21
   2e230:	andeq	sp, r1, r6, lsr sl
   2e234:	muleq	r1, r6, lr
   2e238:	andeq	sp, r1, ip, lsr sl
   2e23c:	andeq	sp, r1, sl, asr #19
   2e240:	andeq	ip, r1, sl, lsr #28
   2e244:	ldrdeq	sp, [r1], -r0

0002e248 <flatcc_builder_create_union_vector@@Base>:
   2e248:	push	{fp, lr}
   2e24c:	mov	fp, sp
   2e250:	sub	sp, sp, #48	; 0x30
   2e254:	str	r1, [fp, #-4]
   2e258:	str	r2, [fp, #-8]
   2e25c:	str	r3, [fp, #-12]
   2e260:	mov	r1, r0
   2e264:	str	r0, [sp, #12]
   2e268:	mov	r0, r1
   2e26c:	movw	r1, #0
   2e270:	and	r1, r1, #255	; 0xff
   2e274:	movw	r2, #8
   2e278:	bl	14ec0 <memset@plt>
   2e27c:	ldr	r0, [fp, #-4]
   2e280:	bl	2c284 <flatcc_builder_start_offset_vector@@Base>
   2e284:	cmp	r0, #0
   2e288:	beq	2e290 <flatcc_builder_create_union_vector@@Base+0x48>
   2e28c:	b	2e374 <flatcc_builder_create_union_vector@@Base+0x12c>
   2e290:	ldr	r0, [fp, #-4]
   2e294:	ldr	r1, [fp, #-12]
   2e298:	bl	2ba18 <flatcc_builder_extend_offset_vector@@Base>
   2e29c:	movw	r1, #0
   2e2a0:	cmp	r1, r0
   2e2a4:	bne	2e2ac <flatcc_builder_create_union_vector@@Base+0x64>
   2e2a8:	b	2e374 <flatcc_builder_create_union_vector@@Base+0x12c>
   2e2ac:	ldr	r0, [fp, #-4]
   2e2b0:	ldr	r1, [fp, #-12]
   2e2b4:	mov	r2, r1
   2e2b8:	str	r2, [sp, #8]
   2e2bc:	bl	2b550 <flatcc_builder_start_struct@@Base+0xfc>
   2e2c0:	str	r0, [fp, #-16]
   2e2c4:	movw	r1, #0
   2e2c8:	cmp	r1, r0
   2e2cc:	bne	2e2d4 <flatcc_builder_create_union_vector@@Base+0x8c>
   2e2d0:	b	2e374 <flatcc_builder_create_union_vector@@Base+0x12c>
   2e2d4:	ldr	r0, [fp, #-4]
   2e2d8:	bl	2db68 <flatcc_builder_offset_vector_edit@@Base>
   2e2dc:	str	r0, [fp, #-20]	; 0xffffffec
   2e2e0:	movw	r0, #0
   2e2e4:	str	r0, [sp, #24]
   2e2e8:	ldr	r0, [sp, #24]
   2e2ec:	ldr	r1, [fp, #-12]
   2e2f0:	cmp	r0, r1
   2e2f4:	bcs	2e338 <flatcc_builder_create_union_vector@@Base+0xf0>
   2e2f8:	ldr	r0, [fp, #-8]
   2e2fc:	ldr	r1, [sp, #24]
   2e300:	ldrb	r0, [r0, r1, lsl #3]
   2e304:	ldr	r2, [fp, #-16]
   2e308:	strb	r0, [r2, r1]
   2e30c:	ldr	r0, [fp, #-8]
   2e310:	ldr	r1, [sp, #24]
   2e314:	add	r0, r0, r1, lsl #3
   2e318:	ldr	r0, [r0, #4]
   2e31c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e320:	add	r1, r2, r1, lsl #2
   2e324:	str	r0, [r1]
   2e328:	ldr	r0, [sp, #24]
   2e32c:	add	r0, r0, #1
   2e330:	str	r0, [sp, #24]
   2e334:	b	2e2e8 <flatcc_builder_create_union_vector@@Base+0xa0>
   2e338:	ldr	r1, [fp, #-4]
   2e33c:	ldr	r2, [fp, #-16]
   2e340:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e344:	ldr	r0, [fp, #-12]
   2e348:	mov	ip, sp
   2e34c:	str	r0, [ip]
   2e350:	add	r0, sp, #16
   2e354:	bl	2e37c <flatcc_builder_create_union_vector_direct@@Base>
   2e358:	ldr	r0, [sp, #16]
   2e35c:	ldr	r1, [sp, #12]
   2e360:	str	r0, [r1]
   2e364:	ldr	r0, [sp, #20]
   2e368:	str	r0, [r1, #4]
   2e36c:	ldr	r0, [fp, #-4]
   2e370:	bl	2b398 <flatcc_builder_end_buffer@@Base+0x164>
   2e374:	mov	sp, fp
   2e378:	pop	{fp, pc}

0002e37c <flatcc_builder_create_union_vector_direct@@Base>:
   2e37c:	push	{fp, lr}
   2e380:	mov	fp, sp
   2e384:	sub	sp, sp, #32
   2e388:	ldr	ip, [fp, #8]
   2e38c:	str	r1, [fp, #-4]
   2e390:	str	r2, [fp, #-8]
   2e394:	str	r3, [fp, #-12]
   2e398:	mov	r1, r0
   2e39c:	str	r0, [sp, #16]
   2e3a0:	mov	r0, r1
   2e3a4:	movw	r1, #0
   2e3a8:	and	r1, r1, #255	; 0xff
   2e3ac:	movw	r2, #8
   2e3b0:	str	ip, [sp, #12]
   2e3b4:	bl	14ec0 <memset@plt>
   2e3b8:	ldr	r0, [fp, #-4]
   2e3bc:	ldr	r1, [fp, #-12]
   2e3c0:	ldr	r2, [fp, #8]
   2e3c4:	ldr	r3, [fp, #-8]
   2e3c8:	bl	2d7c0 <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   2e3cc:	ldr	r1, [sp, #16]
   2e3d0:	str	r0, [r1, #4]
   2e3d4:	movw	r2, #0
   2e3d8:	cmp	r2, r0
   2e3dc:	bne	2e3e4 <flatcc_builder_create_union_vector_direct@@Base+0x68>
   2e3e0:	b	2e428 <flatcc_builder_create_union_vector_direct@@Base+0xac>
   2e3e4:	ldr	r0, [fp, #-4]
   2e3e8:	ldr	r1, [fp, #-8]
   2e3ec:	ldr	r2, [fp, #8]
   2e3f0:	movw	r3, #1
   2e3f4:	movw	ip, #1
   2e3f8:	uxth	ip, ip
   2e3fc:	str	ip, [sp]
   2e400:	mvn	ip, #0
   2e404:	str	ip, [sp, #4]
   2e408:	bl	2d4b4 <flatcc_builder_create_vector@@Base>
   2e40c:	ldr	r1, [sp, #16]
   2e410:	str	r0, [r1]
   2e414:	movw	r2, #0
   2e418:	cmp	r2, r0
   2e41c:	bne	2e424 <flatcc_builder_create_union_vector_direct@@Base+0xa8>
   2e420:	b	2e428 <flatcc_builder_create_union_vector_direct@@Base+0xac>
   2e424:	b	2e428 <flatcc_builder_create_union_vector_direct@@Base+0xac>
   2e428:	mov	sp, fp
   2e42c:	pop	{fp, pc}

0002e430 <flatcc_builder_start_union_vector@@Base>:
   2e430:	push	{fp, lr}
   2e434:	mov	fp, sp
   2e438:	sub	sp, sp, #8
   2e43c:	str	r0, [sp]
   2e440:	ldr	r0, [sp]
   2e444:	movw	r1, #4
   2e448:	uxth	r1, r1
   2e44c:	bl	2b068 <flatcc_builder_start_buffer@@Base+0x178>
   2e450:	cmp	r0, #0
   2e454:	beq	2e464 <flatcc_builder_start_union_vector@@Base+0x34>
   2e458:	mvn	r0, #0
   2e45c:	str	r0, [sp, #4]
   2e460:	b	2e4a8 <flatcc_builder_start_union_vector@@Base+0x78>
   2e464:	ldr	r0, [sp]
   2e468:	ldr	r0, [r0, #32]
   2e46c:	movw	r1, #8
   2e470:	str	r1, [r0, #16]
   2e474:	ldr	r0, [sp]
   2e478:	ldr	r0, [r0, #32]
   2e47c:	movw	r1, #0
   2e480:	str	r1, [r0, #20]
   2e484:	ldr	r0, [sp]
   2e488:	ldr	r0, [r0, #32]
   2e48c:	movw	r1, #7
   2e490:	strh	r1, [r0, #14]
   2e494:	ldr	r0, [sp]
   2e498:	mvn	r1, #3
   2e49c:	bl	2b4c4 <flatcc_builder_start_struct@@Base+0x70>
   2e4a0:	movw	r0, #0
   2e4a4:	str	r0, [sp, #4]
   2e4a8:	ldr	r0, [sp, #4]
   2e4ac:	mov	sp, fp
   2e4b0:	pop	{fp, pc}

0002e4b4 <flatcc_builder_end_union_vector@@Base>:
   2e4b4:	push	{fp, lr}
   2e4b8:	mov	fp, sp
   2e4bc:	sub	sp, sp, #40	; 0x28
   2e4c0:	str	r1, [fp, #-4]
   2e4c4:	mov	r1, r0
   2e4c8:	str	r0, [sp, #4]
   2e4cc:	mov	r0, r1
   2e4d0:	movw	r1, #0
   2e4d4:	and	r1, r1, #255	; 0xff
   2e4d8:	movw	r2, #8
   2e4dc:	bl	14ec0 <memset@plt>
   2e4e0:	ldr	r0, [fp, #-4]
   2e4e4:	ldr	r0, [r0, #32]
   2e4e8:	ldrh	r0, [r0, #14]
   2e4ec:	cmp	r0, #7
   2e4f0:	bne	2e4f8 <flatcc_builder_end_union_vector@@Base+0x44>
   2e4f4:	b	2e518 <flatcc_builder_end_union_vector@@Base+0x64>
   2e4f8:	ldr	r0, [pc, #260]	; 2e604 <flatcc_builder_end_union_vector@@Base+0x150>
   2e4fc:	add	r0, pc, r0
   2e500:	ldr	r1, [pc, #256]	; 2e608 <flatcc_builder_end_union_vector@@Base+0x154>
   2e504:	add	r1, pc, r1
   2e508:	ldr	r2, [pc, #252]	; 2e60c <flatcc_builder_end_union_vector@@Base+0x158>
   2e50c:	add	r3, pc, r2
   2e510:	movw	r2, #1617	; 0x651
   2e514:	bl	14f08 <__assert_fail@plt>
   2e518:	ldr	r0, [fp, #-4]
   2e51c:	bl	2e610 <flatcc_builder_union_vector_count@@Base>
   2e520:	str	r0, [sp, #16]
   2e524:	ldr	r0, [fp, #-4]
   2e528:	ldr	r1, [sp, #16]
   2e52c:	movw	r2, #5
   2e530:	mul	r1, r1, r2
   2e534:	bl	2b550 <flatcc_builder_start_struct@@Base+0xfc>
   2e538:	str	r0, [fp, #-16]
   2e53c:	movw	r1, #0
   2e540:	cmp	r1, r0
   2e544:	bne	2e54c <flatcc_builder_end_union_vector@@Base+0x98>
   2e548:	b	2e5fc <flatcc_builder_end_union_vector@@Base+0x148>
   2e54c:	ldr	r0, [fp, #-16]
   2e550:	ldr	r1, [sp, #16]
   2e554:	add	r0, r0, r1, lsl #2
   2e558:	str	r0, [fp, #-8]
   2e55c:	ldr	r0, [fp, #-4]
   2e560:	bl	2e62c <flatcc_builder_union_vector_edit@@Base>
   2e564:	str	r0, [fp, #-12]
   2e568:	movw	r0, #0
   2e56c:	str	r0, [sp, #20]
   2e570:	ldr	r0, [sp, #20]
   2e574:	ldr	r1, [sp, #16]
   2e578:	cmp	r0, r1
   2e57c:	bcs	2e5c0 <flatcc_builder_end_union_vector@@Base+0x10c>
   2e580:	ldr	r0, [fp, #-12]
   2e584:	ldr	r1, [sp, #20]
   2e588:	ldrb	r0, [r0, r1, lsl #3]
   2e58c:	ldr	r2, [fp, #-8]
   2e590:	strb	r0, [r2, r1]
   2e594:	ldr	r0, [fp, #-12]
   2e598:	ldr	r1, [sp, #20]
   2e59c:	add	r0, r0, r1, lsl #3
   2e5a0:	ldr	r0, [r0, #4]
   2e5a4:	ldr	r2, [fp, #-16]
   2e5a8:	add	r1, r2, r1, lsl #2
   2e5ac:	str	r0, [r1]
   2e5b0:	ldr	r0, [sp, #20]
   2e5b4:	add	r0, r0, #1
   2e5b8:	str	r0, [sp, #20]
   2e5bc:	b	2e570 <flatcc_builder_end_union_vector@@Base+0xbc>
   2e5c0:	ldr	r1, [fp, #-4]
   2e5c4:	ldr	r2, [fp, #-8]
   2e5c8:	ldr	r3, [fp, #-16]
   2e5cc:	ldr	r0, [sp, #16]
   2e5d0:	mov	ip, sp
   2e5d4:	str	r0, [ip]
   2e5d8:	add	r0, sp, #8
   2e5dc:	bl	2e37c <flatcc_builder_create_union_vector_direct@@Base>
   2e5e0:	ldr	r0, [sp, #8]
   2e5e4:	ldr	r1, [sp, #4]
   2e5e8:	str	r0, [r1]
   2e5ec:	ldr	r0, [sp, #12]
   2e5f0:	str	r0, [r1, #4]
   2e5f4:	ldr	r0, [fp, #-4]
   2e5f8:	bl	2b398 <flatcc_builder_end_buffer@@Base+0x164>
   2e5fc:	mov	sp, fp
   2e600:	pop	{fp, pc}
   2e604:	andeq	sp, r1, pc, lsr r7
   2e608:	strdeq	ip, [r1], -lr
   2e60c:	andeq	sp, r1, r1, ror #14

0002e610 <flatcc_builder_union_vector_count@@Base>:
   2e610:	sub	sp, sp, #4
   2e614:	str	r0, [sp]
   2e618:	ldr	r0, [sp]
   2e61c:	ldr	r0, [r0, #32]
   2e620:	ldr	r0, [r0, #20]
   2e624:	add	sp, sp, #4
   2e628:	bx	lr

0002e62c <flatcc_builder_union_vector_edit@@Base>:
   2e62c:	sub	sp, sp, #4
   2e630:	str	r0, [sp]
   2e634:	ldr	r0, [sp]
   2e638:	ldr	r0, [r0, #16]
   2e63c:	add	sp, sp, #4
   2e640:	bx	lr

0002e644 <flatcc_builder_extend_union_vector@@Base>:
   2e644:	push	{fp, lr}
   2e648:	mov	fp, sp
   2e64c:	sub	sp, sp, #16
   2e650:	ldr	r2, [pc, #68]	; 2e69c <flatcc_builder_extend_union_vector@@Base+0x58>
   2e654:	str	r0, [sp, #8]
   2e658:	str	r1, [sp, #4]
   2e65c:	ldr	r0, [sp, #8]
   2e660:	ldr	r1, [sp, #4]
   2e664:	bl	2b714 <flatcc_builder_extend_vector@@Base+0x6c>
   2e668:	cmp	r0, #0
   2e66c:	beq	2e67c <flatcc_builder_extend_union_vector@@Base+0x38>
   2e670:	movw	r0, #0
   2e674:	str	r0, [fp, #-4]
   2e678:	b	2e690 <flatcc_builder_extend_union_vector@@Base+0x4c>
   2e67c:	ldr	r0, [sp, #8]
   2e680:	ldr	r1, [sp, #4]
   2e684:	lsl	r1, r1, #3
   2e688:	bl	2b550 <flatcc_builder_start_struct@@Base+0xfc>
   2e68c:	str	r0, [fp, #-4]
   2e690:	ldr	r0, [fp, #-4]
   2e694:	mov	sp, fp
   2e698:	pop	{fp, pc}
   2e69c:	svcne	0x00ffffff

0002e6a0 <flatcc_builder_truncate_union_vector@@Base>:
   2e6a0:	push	{fp, lr}
   2e6a4:	mov	fp, sp
   2e6a8:	sub	sp, sp, #16
   2e6ac:	str	r0, [sp, #8]
   2e6b0:	str	r1, [sp, #4]
   2e6b4:	ldr	r0, [sp, #8]
   2e6b8:	ldr	r0, [r0, #32]
   2e6bc:	ldrh	r0, [r0, #14]
   2e6c0:	cmp	r0, #7
   2e6c4:	bne	2e6cc <flatcc_builder_truncate_union_vector@@Base+0x2c>
   2e6c8:	b	2e6ec <flatcc_builder_truncate_union_vector@@Base+0x4c>
   2e6cc:	ldr	r0, [pc, #192]	; 2e794 <flatcc_builder_truncate_union_vector@@Base+0xf4>
   2e6d0:	add	r0, pc, r0
   2e6d4:	ldr	r1, [pc, #188]	; 2e798 <flatcc_builder_truncate_union_vector@@Base+0xf8>
   2e6d8:	add	r1, pc, r1
   2e6dc:	ldr	r2, [pc, #184]	; 2e79c <flatcc_builder_truncate_union_vector@@Base+0xfc>
   2e6e0:	add	r3, pc, r2
   2e6e4:	movw	r2, #1665	; 0x681
   2e6e8:	bl	14f08 <__assert_fail@plt>
   2e6ec:	ldr	r0, [sp, #8]
   2e6f0:	ldr	r0, [r0, #32]
   2e6f4:	ldr	r0, [r0, #20]
   2e6f8:	ldr	r1, [sp, #4]
   2e6fc:	cmp	r0, r1
   2e700:	bcs	2e74c <flatcc_builder_truncate_union_vector@@Base+0xac>
   2e704:	ldr	r0, [sp, #8]
   2e708:	ldr	r0, [r0, #32]
   2e70c:	ldr	r0, [r0, #20]
   2e710:	ldr	r1, [sp, #4]
   2e714:	cmp	r0, r1
   2e718:	bcc	2e720 <flatcc_builder_truncate_union_vector@@Base+0x80>
   2e71c:	b	2e740 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   2e720:	ldr	r0, [pc, #120]	; 2e7a0 <flatcc_builder_truncate_union_vector@@Base+0x100>
   2e724:	add	r0, pc, r0
   2e728:	ldr	r1, [pc, #116]	; 2e7a4 <flatcc_builder_truncate_union_vector@@Base+0x104>
   2e72c:	add	r1, pc, r1
   2e730:	ldr	r2, [pc, #112]	; 2e7a8 <flatcc_builder_truncate_union_vector@@Base+0x108>
   2e734:	add	r3, pc, r2
   2e738:	movw	r2, #1666	; 0x682
   2e73c:	bl	14f08 <__assert_fail@plt>
   2e740:	mvn	r0, #0
   2e744:	str	r0, [fp, #-4]
   2e748:	b	2e788 <flatcc_builder_truncate_union_vector@@Base+0xe8>
   2e74c:	ldr	r0, [sp, #4]
   2e750:	ldr	r1, [sp, #8]
   2e754:	ldr	r1, [r1, #32]
   2e758:	ldr	r2, [r1, #20]
   2e75c:	sub	r0, r2, r0
   2e760:	str	r0, [r1, #20]
   2e764:	ldr	r0, [sp, #8]
   2e768:	ldr	r1, [sp, #8]
   2e76c:	ldr	r1, [r1, #32]
   2e770:	ldr	r1, [r1, #16]
   2e774:	ldr	r2, [sp, #4]
   2e778:	mul	r1, r1, r2
   2e77c:	bl	2bf48 <flatcc_builder_truncate_vector@@Base+0x10c>
   2e780:	movw	r0, #0
   2e784:	str	r0, [fp, #-4]
   2e788:	ldr	r0, [fp, #-4]
   2e78c:	mov	sp, fp
   2e790:	pop	{fp, pc}
   2e794:	andeq	sp, r1, fp, ror #10
   2e798:	andeq	ip, r1, sl, lsr #18
   2e79c:	andeq	sp, r1, r0, ror #11
   2e7a0:	andeq	ip, r1, fp, ror pc
   2e7a4:	ldrdeq	ip, [r1], -r6
   2e7a8:	andeq	sp, r1, ip, lsl #11

0002e7ac <flatcc_builder_union_vector_push@@Base>:
   2e7ac:	push	{fp, lr}
   2e7b0:	mov	fp, sp
   2e7b4:	sub	sp, sp, #24
   2e7b8:	str	r1, [sp, #12]
   2e7bc:	str	r2, [sp, #16]
   2e7c0:	str	r0, [sp, #8]
   2e7c4:	ldr	r0, [sp, #8]
   2e7c8:	ldr	r0, [r0, #32]
   2e7cc:	ldrh	r0, [r0, #14]
   2e7d0:	cmp	r0, #7
   2e7d4:	bne	2e7dc <flatcc_builder_union_vector_push@@Base+0x30>
   2e7d8:	b	2e7fc <flatcc_builder_union_vector_push@@Base+0x50>
   2e7dc:	ldr	r0, [pc, #160]	; 2e884 <flatcc_builder_union_vector_push@@Base+0xd8>
   2e7e0:	add	r0, pc, r0
   2e7e4:	ldr	r1, [pc, #156]	; 2e888 <flatcc_builder_union_vector_push@@Base+0xdc>
   2e7e8:	add	r1, pc, r1
   2e7ec:	ldr	r2, [pc, #152]	; 2e88c <flatcc_builder_union_vector_push@@Base+0xe0>
   2e7f0:	add	r3, pc, r2
   2e7f4:	movw	r2, #1677	; 0x68d
   2e7f8:	bl	14f08 <__assert_fail@plt>
   2e7fc:	ldr	r0, [pc, #140]	; 2e890 <flatcc_builder_union_vector_push@@Base+0xe4>
   2e800:	ldr	r1, [sp, #8]
   2e804:	ldr	r1, [r1, #32]
   2e808:	ldr	r1, [r1, #20]
   2e80c:	cmp	r1, r0
   2e810:	bne	2e820 <flatcc_builder_union_vector_push@@Base+0x74>
   2e814:	movw	r0, #0
   2e818:	str	r0, [fp, #-4]
   2e81c:	b	2e878 <flatcc_builder_union_vector_push@@Base+0xcc>
   2e820:	ldr	r0, [sp, #8]
   2e824:	ldr	r0, [r0, #32]
   2e828:	ldr	r1, [r0, #20]
   2e82c:	add	r1, r1, #1
   2e830:	str	r1, [r0, #20]
   2e834:	ldr	r0, [sp, #8]
   2e838:	movw	r1, #8
   2e83c:	bl	2b550 <flatcc_builder_start_struct@@Base+0xfc>
   2e840:	str	r0, [sp, #4]
   2e844:	movw	r1, #0
   2e848:	cmp	r1, r0
   2e84c:	bne	2e85c <flatcc_builder_union_vector_push@@Base+0xb0>
   2e850:	movw	r0, #0
   2e854:	str	r0, [fp, #-4]
   2e858:	b	2e878 <flatcc_builder_union_vector_push@@Base+0xcc>
   2e85c:	ldr	r0, [sp, #4]
   2e860:	ldr	r1, [sp, #12]
   2e864:	str	r1, [r0]
   2e868:	ldr	r1, [sp, #16]
   2e86c:	str	r1, [r0, #4]
   2e870:	ldr	r0, [sp, #4]
   2e874:	str	r0, [fp, #-4]
   2e878:	ldr	r0, [fp, #-4]
   2e87c:	mov	sp, fp
   2e880:	pop	{fp, pc}
   2e884:	andeq	sp, r1, fp, asr r4
   2e888:	andeq	ip, r1, sl, lsl r8
   2e88c:	andeq	sp, r1, r5, lsl r5
   2e890:	svcne	0x00ffffff

0002e894 <flatcc_builder_append_union_vector@@Base>:
   2e894:	push	{fp, lr}
   2e898:	mov	fp, sp
   2e89c:	sub	sp, sp, #16
   2e8a0:	str	r0, [sp, #8]
   2e8a4:	str	r1, [sp, #4]
   2e8a8:	str	r2, [sp]
   2e8ac:	ldr	r0, [sp, #8]
   2e8b0:	ldr	r0, [r0, #32]
   2e8b4:	ldrh	r0, [r0, #14]
   2e8b8:	cmp	r0, #7
   2e8bc:	bne	2e8c4 <flatcc_builder_append_union_vector@@Base+0x30>
   2e8c0:	b	2e8e4 <flatcc_builder_append_union_vector@@Base+0x50>
   2e8c4:	ldr	r0, [pc, #96]	; 2e92c <flatcc_builder_append_union_vector@@Base+0x98>
   2e8c8:	add	r0, pc, r0
   2e8cc:	ldr	r1, [pc, #92]	; 2e930 <flatcc_builder_append_union_vector@@Base+0x9c>
   2e8d0:	add	r1, pc, r1
   2e8d4:	ldr	r2, [pc, #88]	; 2e934 <flatcc_builder_append_union_vector@@Base+0xa0>
   2e8d8:	add	r3, pc, r2
   2e8dc:	movw	r2, #1692	; 0x69c
   2e8e0:	bl	14f08 <__assert_fail@plt>
   2e8e4:	ldr	r2, [pc, #76]	; 2e938 <flatcc_builder_append_union_vector@@Base+0xa4>
   2e8e8:	ldr	r0, [sp, #8]
   2e8ec:	ldr	r1, [sp]
   2e8f0:	bl	2b714 <flatcc_builder_extend_vector@@Base+0x6c>
   2e8f4:	cmp	r0, #0
   2e8f8:	beq	2e908 <flatcc_builder_append_union_vector@@Base+0x74>
   2e8fc:	movw	r0, #0
   2e900:	str	r0, [fp, #-4]
   2e904:	b	2e920 <flatcc_builder_append_union_vector@@Base+0x8c>
   2e908:	ldr	r0, [sp, #8]
   2e90c:	ldr	r1, [sp, #4]
   2e910:	ldr	r2, [sp]
   2e914:	lsl	r2, r2, #3
   2e918:	bl	2b8fc <flatcc_builder_vector_push@@Base+0x110>
   2e91c:	str	r0, [fp, #-4]
   2e920:	ldr	r0, [fp, #-4]
   2e924:	mov	sp, fp
   2e928:	pop	{fp, pc}
   2e92c:	andeq	sp, r1, r3, ror r3
   2e930:	andeq	ip, r1, r2, lsr r7
   2e934:	muleq	r1, sl, r4
   2e938:	svcne	0x00ffffff

0002e93c <flatcc_builder_create_string@@Base>:
   2e93c:	push	{fp, lr}
   2e940:	mov	fp, sp
   2e944:	sub	sp, sp, #96	; 0x60
   2e948:	str	r0, [fp, #-8]
   2e94c:	str	r1, [fp, #-12]
   2e950:	str	r2, [fp, #-16]
   2e954:	ldr	r0, [fp, #-16]
   2e958:	cmn	r0, #1
   2e95c:	bls	2e96c <flatcc_builder_create_string@@Base+0x30>
   2e960:	movw	r0, #0
   2e964:	str	r0, [fp, #-4]
   2e968:	b	2ea88 <flatcc_builder_create_string@@Base+0x14c>
   2e96c:	ldr	r0, [fp, #-16]
   2e970:	bl	2a890 <flatcc_builder_embed_buffer@@Base+0x388>
   2e974:	str	r0, [fp, #-24]	; 0xffffffe8
   2e978:	ldr	r0, [fp, #-8]
   2e97c:	ldr	r1, [fp, #-16]
   2e980:	add	r1, r1, #1
   2e984:	mov	r2, #4
   2e988:	bl	2a85c <flatcc_builder_embed_buffer@@Base+0x354>
   2e98c:	add	r0, r0, #1
   2e990:	str	r0, [fp, #-20]	; 0xffffffec
   2e994:	mov	r0, #0
   2e998:	str	r0, [sp]
   2e99c:	str	r0, [sp, #4]
   2e9a0:	ldr	r0, [sp]
   2e9a4:	add	r0, r0, #4
   2e9a8:	str	r0, [sp]
   2e9ac:	mov	r0, sp
   2e9b0:	add	r0, r0, #8
   2e9b4:	ldr	r1, [sp, #4]
   2e9b8:	sub	r2, fp, #24
   2e9bc:	str	r2, [r0, r1, lsl #3]
   2e9c0:	ldr	r1, [sp, #4]
   2e9c4:	add	r0, r0, r1, lsl #3
   2e9c8:	movw	r1, #4
   2e9cc:	str	r1, [r0, #4]
   2e9d0:	ldr	r0, [sp, #4]
   2e9d4:	add	r0, r0, #1
   2e9d8:	str	r0, [sp, #4]
   2e9dc:	ldr	r0, [fp, #-16]
   2e9e0:	cmp	r0, #0
   2e9e4:	bls	2ea28 <flatcc_builder_create_string@@Base+0xec>
   2e9e8:	ldr	r0, [fp, #-16]
   2e9ec:	ldr	r1, [sp]
   2e9f0:	add	r0, r1, r0
   2e9f4:	str	r0, [sp]
   2e9f8:	ldr	r0, [fp, #-12]
   2e9fc:	mov	r1, sp
   2ea00:	add	r1, r1, #8
   2ea04:	ldr	r2, [sp, #4]
   2ea08:	str	r0, [r1, r2, lsl #3]
   2ea0c:	ldr	r0, [fp, #-16]
   2ea10:	ldr	r2, [sp, #4]
   2ea14:	add	r1, r1, r2, lsl #3
   2ea18:	str	r0, [r1, #4]
   2ea1c:	ldr	r0, [sp, #4]
   2ea20:	add	r0, r0, #1
   2ea24:	str	r0, [sp, #4]
   2ea28:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ea2c:	cmp	r0, #0
   2ea30:	bls	2ea78 <flatcc_builder_create_string@@Base+0x13c>
   2ea34:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ea38:	ldr	r1, [sp]
   2ea3c:	add	r0, r1, r0
   2ea40:	str	r0, [sp]
   2ea44:	mov	r0, sp
   2ea48:	add	r0, r0, #8
   2ea4c:	ldr	r1, [sp, #4]
   2ea50:	ldr	r2, [pc, #60]	; 2ea94 <flatcc_builder_create_string@@Base+0x158>
   2ea54:	ldr	r2, [pc, r2]
   2ea58:	str	r2, [r0, r1, lsl #3]
   2ea5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ea60:	ldr	r2, [sp, #4]
   2ea64:	add	r0, r0, r2, lsl #3
   2ea68:	str	r1, [r0, #4]
   2ea6c:	ldr	r0, [sp, #4]
   2ea70:	add	r0, r0, #1
   2ea74:	str	r0, [sp, #4]
   2ea78:	ldr	r0, [fp, #-8]
   2ea7c:	mov	r1, sp
   2ea80:	bl	2a8a4 <flatcc_builder_embed_buffer@@Base+0x39c>
   2ea84:	str	r0, [fp, #-4]
   2ea88:	ldr	r0, [fp, #-4]
   2ea8c:	mov	sp, fp
   2ea90:	pop	{fp, pc}
   2ea94:	andeq	r0, r3, ip, lsl #12

0002ea98 <flatcc_builder_create_string_str@@Base>:
   2ea98:	push	{fp, lr}
   2ea9c:	mov	fp, sp
   2eaa0:	sub	sp, sp, #24
   2eaa4:	str	r0, [fp, #-4]
   2eaa8:	str	r1, [fp, #-8]
   2eaac:	ldr	r0, [fp, #-4]
   2eab0:	ldr	r1, [fp, #-8]
   2eab4:	ldr	r2, [fp, #-8]
   2eab8:	str	r0, [sp, #12]
   2eabc:	mov	r0, r2
   2eac0:	str	r1, [sp, #8]
   2eac4:	bl	14e9c <strlen@plt>
   2eac8:	ldr	r1, [sp, #12]
   2eacc:	str	r0, [sp, #4]
   2ead0:	mov	r0, r1
   2ead4:	ldr	r1, [sp, #8]
   2ead8:	ldr	r2, [sp, #4]
   2eadc:	bl	2e93c <flatcc_builder_create_string@@Base>
   2eae0:	mov	sp, fp
   2eae4:	pop	{fp, pc}

0002eae8 <flatcc_builder_create_string_strn@@Base>:
   2eae8:	push	{fp, lr}
   2eaec:	mov	fp, sp
   2eaf0:	sub	sp, sp, #24
   2eaf4:	str	r0, [fp, #-4]
   2eaf8:	str	r1, [fp, #-8]
   2eafc:	str	r2, [sp, #12]
   2eb00:	ldr	r0, [fp, #-4]
   2eb04:	ldr	r1, [fp, #-8]
   2eb08:	ldr	r2, [fp, #-8]
   2eb0c:	ldr	r3, [sp, #12]
   2eb10:	str	r0, [sp, #8]
   2eb14:	mov	r0, r2
   2eb18:	str	r1, [sp, #4]
   2eb1c:	mov	r1, r3
   2eb20:	bl	2bddc <flatcc_builder_append_string_strn@@Base+0x5c>
   2eb24:	ldr	r1, [sp, #8]
   2eb28:	str	r0, [sp]
   2eb2c:	mov	r0, r1
   2eb30:	ldr	r1, [sp, #4]
   2eb34:	ldr	r2, [sp]
   2eb38:	bl	2e93c <flatcc_builder_create_string@@Base>
   2eb3c:	mov	sp, fp
   2eb40:	pop	{fp, pc}

0002eb44 <flatcc_builder_end_string@@Base>:
   2eb44:	push	{fp, lr}
   2eb48:	mov	fp, sp
   2eb4c:	sub	sp, sp, #16
   2eb50:	str	r0, [sp, #8]
   2eb54:	ldr	r0, [sp, #8]
   2eb58:	ldr	r0, [r0, #32]
   2eb5c:	ldrh	r0, [r0, #14]
   2eb60:	cmp	r0, #6
   2eb64:	bne	2eb6c <flatcc_builder_end_string@@Base+0x28>
   2eb68:	b	2eb8c <flatcc_builder_end_string@@Base+0x48>
   2eb6c:	ldr	r0, [pc, #168]	; 2ec1c <flatcc_builder_end_string@@Base+0xd8>
   2eb70:	add	r0, pc, r0
   2eb74:	ldr	r1, [pc, #164]	; 2ec20 <flatcc_builder_end_string@@Base+0xdc>
   2eb78:	add	r1, pc, r1
   2eb7c:	ldr	r2, [pc, #160]	; 2ec24 <flatcc_builder_end_string@@Base+0xe0>
   2eb80:	add	r3, pc, r2
   2eb84:	movw	r2, #1732	; 0x6c4
   2eb88:	bl	14f08 <__assert_fail@plt>
   2eb8c:	ldr	r0, [sp, #8]
   2eb90:	ldr	r0, [r0, #32]
   2eb94:	ldr	r0, [r0, #20]
   2eb98:	ldr	r1, [sp, #8]
   2eb9c:	ldr	r1, [r1, #20]
   2eba0:	cmp	r0, r1
   2eba4:	bne	2ebac <flatcc_builder_end_string@@Base+0x68>
   2eba8:	b	2ebcc <flatcc_builder_end_string@@Base+0x88>
   2ebac:	ldr	r0, [pc, #116]	; 2ec28 <flatcc_builder_end_string@@Base+0xe4>
   2ebb0:	add	r0, pc, r0
   2ebb4:	ldr	r1, [pc, #112]	; 2ec2c <flatcc_builder_end_string@@Base+0xe8>
   2ebb8:	add	r1, pc, r1
   2ebbc:	ldr	r2, [pc, #108]	; 2ec30 <flatcc_builder_end_string@@Base+0xec>
   2ebc0:	add	r3, pc, r2
   2ebc4:	movw	r2, #1733	; 0x6c5
   2ebc8:	bl	14f08 <__assert_fail@plt>
   2ebcc:	ldr	r0, [sp, #8]
   2ebd0:	ldr	r1, [sp, #8]
   2ebd4:	ldr	r1, [r1, #16]
   2ebd8:	ldr	r2, [sp, #8]
   2ebdc:	ldr	r2, [r2, #20]
   2ebe0:	bl	2e93c <flatcc_builder_create_string@@Base>
   2ebe4:	str	r0, [sp, #4]
   2ebe8:	movw	r1, #0
   2ebec:	cmp	r1, r0
   2ebf0:	bne	2ec00 <flatcc_builder_end_string@@Base+0xbc>
   2ebf4:	movw	r0, #0
   2ebf8:	str	r0, [fp, #-4]
   2ebfc:	b	2ec10 <flatcc_builder_end_string@@Base+0xcc>
   2ec00:	ldr	r0, [sp, #8]
   2ec04:	bl	2b398 <flatcc_builder_end_buffer@@Base+0x164>
   2ec08:	ldr	r0, [sp, #4]
   2ec0c:	str	r0, [fp, #-4]
   2ec10:	ldr	r0, [fp, #-4]
   2ec14:	mov	sp, fp
   2ec18:	pop	{fp, pc}
   2ec1c:	andeq	ip, r1, lr, asr #19
   2ec20:	andeq	ip, r1, sl, lsl #9
   2ec24:	andeq	sp, r1, r1, ror r2
   2ec28:	andeq	sp, r1, r4, lsl #5
   2ec2c:	andeq	ip, r1, sl, asr #8
   2ec30:	andeq	sp, r1, r1, lsr r2

0002ec34 <flatcc_builder_string_edit@@Base>:
   2ec34:	sub	sp, sp, #4
   2ec38:	str	r0, [sp]
   2ec3c:	ldr	r0, [sp]
   2ec40:	ldr	r0, [r0, #16]
   2ec44:	add	sp, sp, #4
   2ec48:	bx	lr

0002ec4c <flatcc_builder_string_len@@Base>:
   2ec4c:	sub	sp, sp, #4
   2ec50:	str	r0, [sp]
   2ec54:	ldr	r0, [sp]
   2ec58:	ldr	r0, [r0, #32]
   2ec5c:	ldr	r0, [r0, #20]
   2ec60:	add	sp, sp, #4
   2ec64:	bx	lr
   2ec68:	push	{fp, lr}
   2ec6c:	mov	fp, sp
   2ec70:	sub	sp, sp, #24
   2ec74:	str	r0, [fp, #-8]
   2ec78:	str	r1, [sp, #12]
   2ec7c:	strh	r2, [sp, #10]
   2ec80:	strh	r3, [sp, #8]
   2ec84:	ldr	r0, [fp, #-8]
   2ec88:	ldr	r0, [r0, #20]
   2ec8c:	ldrh	r1, [sp, #10]
   2ec90:	add	r0, r0, r1
   2ec94:	sub	r0, r0, #1
   2ec98:	ldrh	r1, [sp, #10]
   2ec9c:	sub	r1, r1, #1
   2eca0:	mvn	r2, #0
   2eca4:	eor	r1, r1, r2
   2eca8:	and	r0, r0, r1
   2ecac:	str	r0, [sp, #4]
   2ecb0:	ldr	r0, [sp, #4]
   2ecb4:	ldr	r1, [sp, #12]
   2ecb8:	add	r0, r0, r1
   2ecbc:	ldr	r1, [fp, #-8]
   2ecc0:	str	r0, [r1, #20]
   2ecc4:	ldr	r1, [fp, #-8]
   2ecc8:	ldr	r1, [r1, #24]
   2eccc:	cmp	r0, r1
   2ecd0:	bcc	2ed04 <flatcc_builder_string_len@@Base+0xb8>
   2ecd4:	ldr	r0, [fp, #-8]
   2ecd8:	ldr	r1, [fp, #-8]
   2ecdc:	ldr	r1, [r1, #20]
   2ece0:	add	r1, r1, #1
   2ece4:	movw	r2, #65532	; 0xfffc
   2ece8:	bl	2f6ac <flatcc_builder_get_emit_context@@Base+0x40>
   2ecec:	cmp	r0, #0
   2ecf0:	beq	2ed00 <flatcc_builder_string_len@@Base+0xb4>
   2ecf4:	movw	r0, #0
   2ecf8:	str	r0, [fp, #-4]
   2ecfc:	b	2ed58 <flatcc_builder_string_len@@Base+0x10c>
   2ed00:	b	2ed04 <flatcc_builder_string_len@@Base+0xb8>
   2ed04:	ldr	r0, [sp, #4]
   2ed08:	add	r0, r0, #4
   2ed0c:	ldr	r1, [fp, #-8]
   2ed10:	ldr	r1, [r1, #4]
   2ed14:	ldrh	r2, [sp, #8]
   2ed18:	add	r1, r1, r2, lsl #1
   2ed1c:	strh	r0, [r1]
   2ed20:	ldrh	r0, [sp, #8]
   2ed24:	ldr	r1, [fp, #-8]
   2ed28:	ldrh	r1, [r1, #8]
   2ed2c:	cmp	r0, r1
   2ed30:	blt	2ed44 <flatcc_builder_string_len@@Base+0xf8>
   2ed34:	ldrh	r0, [sp, #8]
   2ed38:	add	r0, r0, #1
   2ed3c:	ldr	r1, [fp, #-8]
   2ed40:	strh	r0, [r1, #8]
   2ed44:	ldr	r0, [fp, #-8]
   2ed48:	ldr	r0, [r0, #16]
   2ed4c:	ldr	r1, [sp, #4]
   2ed50:	add	r0, r0, r1
   2ed54:	str	r0, [fp, #-4]
   2ed58:	ldr	r0, [fp, #-4]
   2ed5c:	mov	sp, fp
   2ed60:	pop	{fp, pc}

0002ed64 <flatcc_builder_table_edit@@Base>:
   2ed64:	push	{fp, lr}
   2ed68:	mov	fp, sp
   2ed6c:	sub	sp, sp, #8
   2ed70:	str	r0, [sp, #4]
   2ed74:	str	r1, [sp]
   2ed78:	ldr	r0, [sp, #4]
   2ed7c:	ldr	r0, [r0, #32]
   2ed80:	ldrh	r0, [r0, #14]
   2ed84:	cmp	r0, #3
   2ed88:	bne	2ed90 <flatcc_builder_table_edit@@Base+0x2c>
   2ed8c:	b	2edb0 <flatcc_builder_table_edit@@Base+0x4c>
   2ed90:	ldr	r0, [pc, #68]	; 2eddc <flatcc_builder_table_edit@@Base+0x78>
   2ed94:	add	r0, pc, r0
   2ed98:	ldr	r1, [pc, #64]	; 2ede0 <flatcc_builder_table_edit@@Base+0x7c>
   2ed9c:	add	r1, pc, r1
   2eda0:	ldr	r2, [pc, #60]	; 2ede4 <flatcc_builder_table_edit@@Base+0x80>
   2eda4:	add	r3, pc, r2
   2eda8:	movw	r2, #1794	; 0x702
   2edac:	bl	14f08 <__assert_fail@plt>
   2edb0:	ldr	r0, [sp, #4]
   2edb4:	ldr	r0, [r0, #16]
   2edb8:	ldr	r1, [sp, #4]
   2edbc:	ldr	r1, [r1, #20]
   2edc0:	add	r0, r0, r1
   2edc4:	ldr	r1, [sp]
   2edc8:	movw	r2, #0
   2edcc:	sub	r1, r2, r1
   2edd0:	add	r0, r0, r1
   2edd4:	mov	sp, fp
   2edd8:	pop	{fp, pc}
   2eddc:	muleq	r1, sl, sl
   2ede0:	andeq	ip, r1, r6, ror #4
   2ede4:	andeq	sp, r1, r2, asr #2

0002ede8 <flatcc_builder_table_add_copy@@Base>:
   2ede8:	push	{fp, lr}
   2edec:	mov	fp, sp
   2edf0:	sub	sp, sp, #24
   2edf4:	ldr	ip, [fp, #8]
   2edf8:	str	r0, [fp, #-4]
   2edfc:	str	r1, [fp, #-8]
   2ee00:	str	r2, [sp, #12]
   2ee04:	str	r3, [sp, #8]
   2ee08:	strh	ip, [sp, #6]
   2ee0c:	ldr	r0, [fp, #-4]
   2ee10:	ldr	r1, [fp, #-8]
   2ee14:	ldr	r2, [sp, #8]
   2ee18:	ldrh	r3, [sp, #6]
   2ee1c:	bl	2debc <flatcc_builder_table_add@@Base>
   2ee20:	str	r0, [sp]
   2ee24:	movw	r1, #0
   2ee28:	cmp	r0, r1
   2ee2c:	beq	2ee40 <flatcc_builder_table_add_copy@@Base+0x58>
   2ee30:	ldr	r0, [sp]
   2ee34:	ldr	r1, [sp, #12]
   2ee38:	ldr	r2, [sp, #8]
   2ee3c:	bl	14e30 <memcpy@plt>
   2ee40:	ldr	r0, [sp]
   2ee44:	mov	sp, fp
   2ee48:	pop	{fp, pc}
   2ee4c:	push	{fp, lr}
   2ee50:	mov	fp, sp
   2ee54:	sub	sp, sp, #16
   2ee58:	str	r0, [sp, #8]
   2ee5c:	strh	r1, [sp, #6]
   2ee60:	ldr	r0, [sp, #8]
   2ee64:	ldr	r0, [r0, #20]
   2ee68:	add	r0, r0, #4
   2ee6c:	sub	r0, r0, #1
   2ee70:	mvn	r1, #3
   2ee74:	and	r0, r0, r1
   2ee78:	str	r0, [sp]
   2ee7c:	ldr	r0, [sp]
   2ee80:	add	r0, r0, #4
   2ee84:	ldr	r1, [sp, #8]
   2ee88:	str	r0, [r1, #20]
   2ee8c:	ldr	r1, [sp, #8]
   2ee90:	ldr	r1, [r1, #24]
   2ee94:	cmp	r0, r1
   2ee98:	bls	2eec8 <flatcc_builder_table_add_copy@@Base+0xe0>
   2ee9c:	ldr	r0, [sp, #8]
   2eea0:	ldr	r1, [sp, #8]
   2eea4:	ldr	r1, [r1, #20]
   2eea8:	movw	r2, #65532	; 0xfffc
   2eeac:	bl	2f6ac <flatcc_builder_get_emit_context@@Base+0x40>
   2eeb0:	cmp	r0, #0
   2eeb4:	beq	2eec4 <flatcc_builder_table_add_copy@@Base+0xdc>
   2eeb8:	movw	r0, #0
   2eebc:	str	r0, [fp, #-4]
   2eec0:	b	2ef34 <flatcc_builder_table_add_copy@@Base+0x14c>
   2eec4:	b	2eec8 <flatcc_builder_table_add_copy@@Base+0xe0>
   2eec8:	ldr	r0, [sp]
   2eecc:	add	r0, r0, #4
   2eed0:	ldr	r1, [sp, #8]
   2eed4:	ldr	r1, [r1, #4]
   2eed8:	ldrh	r2, [sp, #6]
   2eedc:	add	r1, r1, r2, lsl #1
   2eee0:	strh	r0, [r1]
   2eee4:	ldrh	r0, [sp, #6]
   2eee8:	ldr	r1, [sp, #8]
   2eeec:	ldrh	r1, [r1, #8]
   2eef0:	cmp	r0, r1
   2eef4:	blt	2ef08 <flatcc_builder_table_add_copy@@Base+0x120>
   2eef8:	ldrh	r0, [sp, #6]
   2eefc:	add	r0, r0, #1
   2ef00:	ldr	r1, [sp, #8]
   2ef04:	strh	r0, [r1, #8]
   2ef08:	ldr	r0, [sp]
   2ef0c:	ldr	r1, [sp, #8]
   2ef10:	ldr	r2, [r1]
   2ef14:	add	r3, r2, #2
   2ef18:	str	r3, [r1]
   2ef1c:	strh	r0, [r2]
   2ef20:	ldr	r0, [sp, #8]
   2ef24:	ldr	r0, [r0, #16]
   2ef28:	ldr	r1, [sp]
   2ef2c:	add	r0, r0, r1
   2ef30:	str	r0, [fp, #-4]
   2ef34:	ldr	r0, [fp, #-4]
   2ef38:	mov	sp, fp
   2ef3c:	pop	{fp, pc}

0002ef40 <flatcc_builder_push_buffer_alignment@@Base>:
   2ef40:	sub	sp, sp, #8
   2ef44:	str	r0, [sp, #4]
   2ef48:	ldr	r0, [sp, #4]
   2ef4c:	ldrh	r0, [r0, #128]	; 0x80
   2ef50:	strh	r0, [sp, #2]
   2ef54:	ldr	r0, [sp, #4]
   2ef58:	movw	r1, #4
   2ef5c:	strh	r1, [r0, #128]	; 0x80
   2ef60:	ldrh	r0, [sp, #2]
   2ef64:	add	sp, sp, #8
   2ef68:	bx	lr

0002ef6c <flatcc_builder_pop_buffer_alignment@@Base>:
   2ef6c:	push	{fp, lr}
   2ef70:	mov	fp, sp
   2ef74:	sub	sp, sp, #8
   2ef78:	str	r0, [sp, #4]
   2ef7c:	strh	r1, [sp, #2]
   2ef80:	ldr	r0, [sp, #4]
   2ef84:	ldrh	r1, [sp, #2]
   2ef88:	bl	2ad70 <flatcc_builder_create_buffer@@Base+0x3a8>
   2ef8c:	mov	sp, fp
   2ef90:	pop	{fp, pc}

0002ef94 <flatcc_builder_get_buffer_alignment@@Base>:
   2ef94:	sub	sp, sp, #4
   2ef98:	str	r0, [sp]
   2ef9c:	ldr	r0, [sp]
   2efa0:	ldrh	r0, [r0, #128]	; 0x80
   2efa4:	add	sp, sp, #4
   2efa8:	bx	lr

0002efac <flatcc_builder_set_vtable_clustering@@Base>:
   2efac:	sub	sp, sp, #8
   2efb0:	str	r0, [sp, #4]
   2efb4:	str	r1, [sp]
   2efb8:	ldr	r0, [sp]
   2efbc:	cmp	r0, #0
   2efc0:	movw	r0, #0
   2efc4:	movne	r0, #1
   2efc8:	mvn	r1, #0
   2efcc:	eor	r0, r0, r1
   2efd0:	and	r0, r0, #1
   2efd4:	ldr	r1, [sp, #4]
   2efd8:	str	r0, [r1, #180]	; 0xb4
   2efdc:	add	sp, sp, #8
   2efe0:	bx	lr

0002efe4 <flatcc_builder_set_block_align@@Base>:
   2efe4:	sub	sp, sp, #8
   2efe8:	str	r0, [sp, #4]
   2efec:	strh	r1, [sp, #2]
   2eff0:	ldrh	r0, [sp, #2]
   2eff4:	ldr	r1, [sp, #4]
   2eff8:	strh	r0, [r1, #132]	; 0x84
   2effc:	add	sp, sp, #8
   2f000:	bx	lr

0002f004 <flatcc_builder_get_level@@Base>:
   2f004:	sub	sp, sp, #4
   2f008:	str	r0, [sp]
   2f00c:	ldr	r0, [sp]
   2f010:	ldr	r0, [r0, #156]	; 0x9c
   2f014:	add	sp, sp, #4
   2f018:	bx	lr

0002f01c <flatcc_builder_set_max_level@@Base>:
   2f01c:	sub	sp, sp, #8
   2f020:	str	r0, [sp, #4]
   2f024:	str	r1, [sp]
   2f028:	ldr	r0, [sp]
   2f02c:	ldr	r1, [sp, #4]
   2f030:	str	r0, [r1, #176]	; 0xb0
   2f034:	ldr	r0, [sp, #4]
   2f038:	ldr	r0, [r0, #160]	; 0xa0
   2f03c:	ldr	r1, [sp, #4]
   2f040:	ldr	r1, [r1, #176]	; 0xb0
   2f044:	cmp	r0, r1
   2f048:	bge	2f05c <flatcc_builder_set_max_level@@Base+0x40>
   2f04c:	ldr	r0, [sp, #4]
   2f050:	ldr	r0, [r0, #176]	; 0xb0
   2f054:	ldr	r1, [sp, #4]
   2f058:	str	r0, [r1, #160]	; 0xa0
   2f05c:	add	sp, sp, #8
   2f060:	bx	lr

0002f064 <flatcc_builder_get_buffer_size@@Base>:
   2f064:	sub	sp, sp, #4
   2f068:	str	r0, [sp]
   2f06c:	ldr	r0, [sp]
   2f070:	ldr	r0, [r0, #140]	; 0x8c
   2f074:	ldr	r1, [sp]
   2f078:	ldr	r1, [r1, #136]	; 0x88
   2f07c:	sub	r0, r0, r1
   2f080:	add	sp, sp, #4
   2f084:	bx	lr

0002f088 <flatcc_builder_get_buffer_start@@Base>:
   2f088:	sub	sp, sp, #4
   2f08c:	str	r0, [sp]
   2f090:	ldr	r0, [sp]
   2f094:	ldr	r0, [r0, #136]	; 0x88
   2f098:	add	sp, sp, #4
   2f09c:	bx	lr

0002f0a0 <flatcc_builder_get_buffer_end@@Base>:
   2f0a0:	sub	sp, sp, #4
   2f0a4:	str	r0, [sp]
   2f0a8:	ldr	r0, [sp]
   2f0ac:	ldr	r0, [r0, #140]	; 0x8c
   2f0b0:	add	sp, sp, #4
   2f0b4:	bx	lr

0002f0b8 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2f0b8:	sub	sp, sp, #8
   2f0bc:	str	r0, [sp, #4]
   2f0c0:	str	r1, [sp]
   2f0c4:	ldr	r0, [sp]
   2f0c8:	ldr	r1, [sp, #4]
   2f0cc:	str	r0, [r1, #172]	; 0xac
   2f0d0:	add	sp, sp, #8
   2f0d4:	bx	lr

0002f0d8 <flatcc_builder_set_identifier@@Base>:
   2f0d8:	sub	sp, sp, #16
   2f0dc:	str	r0, [sp, #12]
   2f0e0:	str	r1, [sp, #8]
   2f0e4:	ldr	r0, [sp, #12]
   2f0e8:	add	r0, r0, #168	; 0xa8
   2f0ec:	ldr	r1, [sp, #8]
   2f0f0:	movw	r2, #0
   2f0f4:	cmp	r1, r2
   2f0f8:	str	r0, [sp, #4]
   2f0fc:	beq	2f10c <flatcc_builder_set_identifier@@Base+0x34>
   2f100:	ldr	r0, [sp, #8]
   2f104:	str	r0, [sp]
   2f108:	b	2f11c <flatcc_builder_set_identifier@@Base+0x44>
   2f10c:	ldr	r0, [pc, #56]	; 2f14c <flatcc_builder_set_identifier@@Base+0x74>
   2f110:	ldr	r0, [pc, r0]
   2f114:	str	r0, [sp]
   2f118:	b	2f11c <flatcc_builder_set_identifier@@Base+0x44>
   2f11c:	ldr	r0, [sp]
   2f120:	ldrb	r1, [r0]
   2f124:	ldr	r2, [sp, #4]
   2f128:	strb	r1, [r2]
   2f12c:	ldrb	r1, [r0, #1]
   2f130:	strb	r1, [r2, #1]
   2f134:	ldrb	r1, [r0, #2]
   2f138:	strb	r1, [r2, #2]
   2f13c:	ldrb	r0, [r0, #3]
   2f140:	strb	r0, [r2, #3]
   2f144:	add	sp, sp, #16
   2f148:	bx	lr
   2f14c:	andeq	pc, r2, r0, asr pc	; <UNPREDICTABLE>

0002f150 <flatcc_builder_get_type@@Base>:
   2f150:	sub	sp, sp, #8
   2f154:	str	r0, [sp, #4]
   2f158:	ldr	r0, [sp, #4]
   2f15c:	ldr	r0, [r0, #32]
   2f160:	movw	r1, #0
   2f164:	cmp	r0, r1
   2f168:	beq	2f180 <flatcc_builder_get_type@@Base+0x30>
   2f16c:	ldr	r0, [sp, #4]
   2f170:	ldr	r0, [r0, #32]
   2f174:	ldrh	r0, [r0, #14]
   2f178:	str	r0, [sp]
   2f17c:	b	2f18c <flatcc_builder_get_type@@Base+0x3c>
   2f180:	movw	r0, #0
   2f184:	str	r0, [sp]
   2f188:	b	2f18c <flatcc_builder_get_type@@Base+0x3c>
   2f18c:	ldr	r0, [sp]
   2f190:	add	sp, sp, #8
   2f194:	bx	lr

0002f198 <flatcc_builder_get_type_at@@Base>:
   2f198:	sub	sp, sp, #12
   2f19c:	str	r0, [sp, #4]
   2f1a0:	str	r1, [sp]
   2f1a4:	ldr	r0, [sp]
   2f1a8:	cmp	r0, #1
   2f1ac:	blt	2f1c4 <flatcc_builder_get_type_at@@Base+0x2c>
   2f1b0:	ldr	r0, [sp]
   2f1b4:	ldr	r1, [sp, #4]
   2f1b8:	ldr	r1, [r1, #156]	; 0x9c
   2f1bc:	cmp	r0, r1
   2f1c0:	ble	2f1d0 <flatcc_builder_get_type_at@@Base+0x38>
   2f1c4:	movw	r0, #0
   2f1c8:	str	r0, [sp, #8]
   2f1cc:	b	2f1fc <flatcc_builder_get_type_at@@Base+0x64>
   2f1d0:	ldr	r0, [sp, #4]
   2f1d4:	ldr	r0, [r0, #32]
   2f1d8:	ldr	r1, [sp]
   2f1dc:	ldr	r2, [sp, #4]
   2f1e0:	ldr	r2, [r2, #156]	; 0x9c
   2f1e4:	sub	r1, r1, r2
   2f1e8:	movw	r2, #36	; 0x24
   2f1ec:	mul	r1, r1, r2
   2f1f0:	add	r0, r0, r1
   2f1f4:	ldrh	r0, [r0, #14]
   2f1f8:	str	r0, [sp, #8]
   2f1fc:	ldr	r0, [sp, #8]
   2f200:	add	sp, sp, #12
   2f204:	bx	lr

0002f208 <flatcc_builder_get_direct_buffer@@Base>:
   2f208:	push	{fp, lr}
   2f20c:	mov	fp, sp
   2f210:	sub	sp, sp, #16
   2f214:	str	r0, [sp, #8]
   2f218:	str	r1, [sp, #4]
   2f21c:	ldr	r0, [sp, #8]
   2f220:	ldr	r0, [r0, #184]	; 0xb8
   2f224:	cmp	r0, #0
   2f228:	beq	2f244 <flatcc_builder_get_direct_buffer@@Base+0x3c>
   2f22c:	ldr	r0, [sp, #8]
   2f230:	add	r0, r0, #188	; 0xbc
   2f234:	ldr	r1, [sp, #4]
   2f238:	bl	2f278 <flatcc_builder_get_direct_buffer@@Base+0x70>
   2f23c:	str	r0, [fp, #-4]
   2f240:	b	2f26c <flatcc_builder_get_direct_buffer@@Base+0x64>
   2f244:	ldr	r0, [sp, #4]
   2f248:	movw	r1, #0
   2f24c:	cmp	r0, r1
   2f250:	beq	2f260 <flatcc_builder_get_direct_buffer@@Base+0x58>
   2f254:	ldr	r0, [sp, #4]
   2f258:	movw	r1, #0
   2f25c:	str	r1, [r0]
   2f260:	b	2f264 <flatcc_builder_get_direct_buffer@@Base+0x5c>
   2f264:	movw	r0, #0
   2f268:	str	r0, [fp, #-4]
   2f26c:	ldr	r0, [fp, #-4]
   2f270:	mov	sp, fp
   2f274:	pop	{fp, pc}
   2f278:	sub	sp, sp, #12
   2f27c:	str	r0, [sp, #4]
   2f280:	str	r1, [sp]
   2f284:	ldr	r0, [sp, #4]
   2f288:	ldr	r0, [r0]
   2f28c:	ldr	r1, [sp, #4]
   2f290:	ldr	r1, [r1, #4]
   2f294:	cmp	r0, r1
   2f298:	bne	2f2cc <flatcc_builder_get_direct_buffer@@Base+0xc4>
   2f29c:	ldr	r0, [sp]
   2f2a0:	movw	r1, #0
   2f2a4:	cmp	r0, r1
   2f2a8:	beq	2f2bc <flatcc_builder_get_direct_buffer@@Base+0xb4>
   2f2ac:	ldr	r0, [sp, #4]
   2f2b0:	ldr	r0, [r0, #24]
   2f2b4:	ldr	r1, [sp]
   2f2b8:	str	r0, [r1]
   2f2bc:	ldr	r0, [sp, #4]
   2f2c0:	ldr	r0, [r0, #8]
   2f2c4:	str	r0, [sp, #8]
   2f2c8:	b	2f2f0 <flatcc_builder_get_direct_buffer@@Base+0xe8>
   2f2cc:	ldr	r0, [sp]
   2f2d0:	movw	r1, #0
   2f2d4:	cmp	r0, r1
   2f2d8:	beq	2f2e8 <flatcc_builder_get_direct_buffer@@Base+0xe0>
   2f2dc:	ldr	r0, [sp]
   2f2e0:	movw	r1, #0
   2f2e4:	str	r1, [r0]
   2f2e8:	movw	r0, #0
   2f2ec:	str	r0, [sp, #8]
   2f2f0:	ldr	r0, [sp, #8]
   2f2f4:	add	sp, sp, #12
   2f2f8:	bx	lr

0002f2fc <flatcc_builder_copy_buffer@@Base>:
   2f2fc:	push	{fp, lr}
   2f300:	mov	fp, sp
   2f304:	sub	sp, sp, #16
   2f308:	str	r0, [sp, #8]
   2f30c:	str	r1, [sp, #4]
   2f310:	str	r2, [sp]
   2f314:	ldr	r0, [sp, #8]
   2f318:	ldr	r0, [r0, #184]	; 0xb8
   2f31c:	cmp	r0, #0
   2f320:	bne	2f330 <flatcc_builder_copy_buffer@@Base+0x34>
   2f324:	movw	r0, #0
   2f328:	str	r0, [fp, #-4]
   2f32c:	b	2f384 <flatcc_builder_copy_buffer@@Base+0x88>
   2f330:	ldr	r0, [sp, #8]
   2f334:	add	r0, r0, #188	; 0xbc
   2f338:	ldr	r1, [sp, #4]
   2f33c:	ldr	r2, [sp]
   2f340:	bl	2ffec <flatcc_emitter_copy_buffer@@Base>
   2f344:	str	r0, [sp, #4]
   2f348:	ldr	r0, [sp, #4]
   2f34c:	movw	r1, #0
   2f350:	cmp	r0, r1
   2f354:	beq	2f35c <flatcc_builder_copy_buffer@@Base+0x60>
   2f358:	b	2f37c <flatcc_builder_copy_buffer@@Base+0x80>
   2f35c:	ldr	r0, [pc, #44]	; 2f390 <flatcc_builder_copy_buffer@@Base+0x94>
   2f360:	add	r0, pc, r0
   2f364:	ldr	r1, [pc, #40]	; 2f394 <flatcc_builder_copy_buffer@@Base+0x98>
   2f368:	add	r1, pc, r1
   2f36c:	ldr	r2, [pc, #36]	; 2f398 <flatcc_builder_copy_buffer@@Base+0x9c>
   2f370:	add	r3, pc, r2
   2f374:	movw	r2, #1926	; 0x786
   2f378:	bl	14f08 <__assert_fail@plt>
   2f37c:	ldr	r0, [sp, #4]
   2f380:	str	r0, [fp, #-4]
   2f384:	ldr	r0, [fp, #-4]
   2f388:	mov	sp, fp
   2f38c:	pop	{fp, pc}
   2f390:	andeq	r8, r1, lr, lsr r0
   2f394:	muleq	r1, sl, ip
   2f398:	andeq	ip, r1, r1, lsl #24

0002f39c <flatcc_builder_finalize_buffer@@Base>:
   2f39c:	push	{fp, lr}
   2f3a0:	mov	fp, sp
   2f3a4:	sub	sp, sp, #16
   2f3a8:	str	r0, [fp, #-4]
   2f3ac:	str	r1, [sp, #8]
   2f3b0:	ldr	r0, [fp, #-4]
   2f3b4:	bl	2f064 <flatcc_builder_get_buffer_size@@Base>
   2f3b8:	str	r0, [sp]
   2f3bc:	ldr	r0, [sp, #8]
   2f3c0:	movw	r1, #0
   2f3c4:	cmp	r0, r1
   2f3c8:	beq	2f3d8 <flatcc_builder_finalize_buffer@@Base+0x3c>
   2f3cc:	ldr	r0, [sp]
   2f3d0:	ldr	r1, [sp, #8]
   2f3d4:	str	r0, [r1]
   2f3d8:	ldr	r0, [sp]
   2f3dc:	bl	14e78 <malloc@plt>
   2f3e0:	str	r0, [sp, #4]
   2f3e4:	ldr	r0, [sp, #4]
   2f3e8:	movw	r1, #0
   2f3ec:	cmp	r0, r1
   2f3f0:	bne	2f414 <flatcc_builder_finalize_buffer@@Base+0x78>
   2f3f4:	ldr	r0, [pc, #144]	; 2f48c <flatcc_builder_finalize_buffer@@Base+0xf0>
   2f3f8:	add	r0, pc, r0
   2f3fc:	ldr	r1, [pc, #140]	; 2f490 <flatcc_builder_finalize_buffer@@Base+0xf4>
   2f400:	add	r1, pc, r1
   2f404:	ldr	r2, [pc, #136]	; 2f494 <flatcc_builder_finalize_buffer@@Base+0xf8>
   2f408:	add	r3, pc, r2
   2f40c:	movw	r2, #1944	; 0x798
   2f410:	bl	14f08 <__assert_fail@plt>
   2f414:	ldr	r0, [fp, #-4]
   2f418:	ldr	r1, [sp, #4]
   2f41c:	ldr	r2, [sp]
   2f420:	bl	2f2fc <flatcc_builder_copy_buffer@@Base>
   2f424:	movw	r1, #0
   2f428:	cmp	r0, r1
   2f42c:	bne	2f450 <flatcc_builder_finalize_buffer@@Base+0xb4>
   2f430:	ldr	r0, [pc, #96]	; 2f498 <flatcc_builder_finalize_buffer@@Base+0xfc>
   2f434:	add	r0, pc, r0
   2f438:	ldr	r1, [pc, #92]	; 2f49c <flatcc_builder_finalize_buffer@@Base+0x100>
   2f43c:	add	r1, pc, r1
   2f440:	ldr	r2, [pc, #88]	; 2f4a0 <flatcc_builder_finalize_buffer@@Base+0x104>
   2f444:	add	r3, pc, r2
   2f448:	movw	r2, #1948	; 0x79c
   2f44c:	bl	14f08 <__assert_fail@plt>
   2f450:	b	2f454 <flatcc_builder_finalize_buffer@@Base+0xb8>
   2f454:	ldr	r0, [sp, #4]
   2f458:	movw	r1, #0
   2f45c:	cmp	r0, r1
   2f460:	bne	2f480 <flatcc_builder_finalize_buffer@@Base+0xe4>
   2f464:	ldr	r0, [sp, #8]
   2f468:	movw	r1, #0
   2f46c:	cmp	r0, r1
   2f470:	beq	2f480 <flatcc_builder_finalize_buffer@@Base+0xe4>
   2f474:	ldr	r0, [sp, #8]
   2f478:	movw	r1, #0
   2f47c:	str	r1, [r0]
   2f480:	ldr	r0, [sp, #4]
   2f484:	mov	sp, fp
   2f488:	pop	{fp, pc}
   2f48c:	andeq	ip, r1, r7, asr #27
   2f490:	andeq	fp, r1, r2, lsl #24
   2f494:	andeq	ip, r1, lr, lsr #23
   2f498:	andeq	ip, r1, fp, lsl #27
   2f49c:	andeq	fp, r1, r6, asr #23
   2f4a0:	andeq	ip, r1, r2, ror fp

0002f4a4 <flatcc_builder_finalize_aligned_buffer@@Base>:
   2f4a4:	push	{fp, lr}
   2f4a8:	mov	fp, sp
   2f4ac:	sub	sp, sp, #24
   2f4b0:	str	r0, [fp, #-4]
   2f4b4:	str	r1, [fp, #-8]
   2f4b8:	ldr	r0, [fp, #-4]
   2f4bc:	bl	2f064 <flatcc_builder_get_buffer_size@@Base>
   2f4c0:	str	r0, [sp, #4]
   2f4c4:	ldr	r0, [fp, #-8]
   2f4c8:	movw	r1, #0
   2f4cc:	cmp	r0, r1
   2f4d0:	beq	2f4e0 <flatcc_builder_finalize_aligned_buffer@@Base+0x3c>
   2f4d4:	ldr	r0, [sp, #4]
   2f4d8:	ldr	r1, [fp, #-8]
   2f4dc:	str	r0, [r1]
   2f4e0:	ldr	r0, [fp, #-4]
   2f4e4:	bl	2ef94 <flatcc_builder_get_buffer_alignment@@Base>
   2f4e8:	uxth	r0, r0
   2f4ec:	str	r0, [sp, #8]
   2f4f0:	ldr	r0, [sp, #4]
   2f4f4:	ldr	r1, [sp, #8]
   2f4f8:	add	r0, r0, r1
   2f4fc:	sub	r0, r0, #1
   2f500:	ldr	r1, [sp, #8]
   2f504:	sub	r1, r1, #1
   2f508:	mvn	r2, #0
   2f50c:	eor	r1, r1, r2
   2f510:	and	r0, r0, r1
   2f514:	str	r0, [sp, #4]
   2f518:	ldr	r0, [sp, #8]
   2f51c:	ldr	r1, [sp, #4]
   2f520:	bl	2f5a8 <flatcc_builder_finalize_aligned_buffer@@Base+0x104>
   2f524:	str	r0, [sp, #12]
   2f528:	ldr	r0, [sp, #12]
   2f52c:	movw	r1, #0
   2f530:	cmp	r0, r1
   2f534:	bne	2f53c <flatcc_builder_finalize_aligned_buffer@@Base+0x98>
   2f538:	b	2f570 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   2f53c:	ldr	r0, [fp, #-4]
   2f540:	ldr	r1, [sp, #12]
   2f544:	ldr	r2, [sp, #4]
   2f548:	bl	2f2fc <flatcc_builder_copy_buffer@@Base>
   2f54c:	movw	r1, #0
   2f550:	cmp	r0, r1
   2f554:	bne	2f56c <flatcc_builder_finalize_aligned_buffer@@Base+0xc8>
   2f558:	ldr	r0, [sp, #12]
   2f55c:	bl	14e24 <free@plt>
   2f560:	movw	r0, #0
   2f564:	str	r0, [sp, #12]
   2f568:	b	2f570 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   2f56c:	b	2f570 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   2f570:	ldr	r0, [sp, #12]
   2f574:	movw	r1, #0
   2f578:	cmp	r0, r1
   2f57c:	bne	2f59c <flatcc_builder_finalize_aligned_buffer@@Base+0xf8>
   2f580:	ldr	r0, [fp, #-8]
   2f584:	movw	r1, #0
   2f588:	cmp	r0, r1
   2f58c:	beq	2f59c <flatcc_builder_finalize_aligned_buffer@@Base+0xf8>
   2f590:	ldr	r0, [fp, #-8]
   2f594:	movw	r1, #0
   2f598:	str	r1, [r0]
   2f59c:	ldr	r0, [sp, #12]
   2f5a0:	mov	sp, fp
   2f5a4:	pop	{fp, pc}
   2f5a8:	push	{fp, lr}
   2f5ac:	mov	fp, sp
   2f5b0:	sub	sp, sp, #16
   2f5b4:	str	r0, [fp, #-4]
   2f5b8:	str	r1, [sp, #8]
   2f5bc:	movw	r0, #0
   2f5c0:	str	r0, [sp]
   2f5c4:	ldr	r0, [fp, #-4]
   2f5c8:	cmp	r0, #4
   2f5cc:	bcs	2f5d8 <flatcc_builder_finalize_aligned_buffer@@Base+0x134>
   2f5d0:	movw	r0, #4
   2f5d4:	str	r0, [fp, #-4]
   2f5d8:	ldr	r1, [fp, #-4]
   2f5dc:	ldr	r2, [sp, #8]
   2f5e0:	mov	r0, sp
   2f5e4:	bl	14eb4 <posix_memalign@plt>
   2f5e8:	str	r0, [sp, #4]
   2f5ec:	ldr	r0, [sp, #4]
   2f5f0:	cmp	r0, #0
   2f5f4:	beq	2f618 <flatcc_builder_finalize_aligned_buffer@@Base+0x174>
   2f5f8:	ldr	r0, [sp]
   2f5fc:	movw	r1, #0
   2f600:	cmp	r0, r1
   2f604:	beq	2f618 <flatcc_builder_finalize_aligned_buffer@@Base+0x174>
   2f608:	ldr	r0, [sp]
   2f60c:	bl	14e24 <free@plt>
   2f610:	movw	r0, #0
   2f614:	str	r0, [sp]
   2f618:	ldr	r0, [sp]
   2f61c:	mov	sp, fp
   2f620:	pop	{fp, pc}

0002f624 <flatcc_builder_aligned_alloc@@Base>:
   2f624:	push	{fp, lr}
   2f628:	mov	fp, sp
   2f62c:	sub	sp, sp, #8
   2f630:	str	r0, [sp, #4]
   2f634:	str	r1, [sp]
   2f638:	ldr	r0, [sp, #4]
   2f63c:	ldr	r1, [sp]
   2f640:	bl	2f5a8 <flatcc_builder_finalize_aligned_buffer@@Base+0x104>
   2f644:	mov	sp, fp
   2f648:	pop	{fp, pc}

0002f64c <flatcc_builder_aligned_free@@Base>:
   2f64c:	push	{fp, lr}
   2f650:	mov	fp, sp
   2f654:	sub	sp, sp, #8
   2f658:	str	r0, [sp, #4]
   2f65c:	ldr	r0, [sp, #4]
   2f660:	bl	14e24 <free@plt>
   2f664:	mov	sp, fp
   2f668:	pop	{fp, pc}

0002f66c <flatcc_builder_get_emit_context@@Base>:
   2f66c:	sub	sp, sp, #4
   2f670:	str	r0, [sp]
   2f674:	ldr	r0, [sp]
   2f678:	ldr	r0, [r0, #36]	; 0x24
   2f67c:	add	sp, sp, #4
   2f680:	bx	lr
   2f684:	sub	sp, sp, #8
   2f688:	str	r0, [sp, #4]
   2f68c:	strh	r1, [sp, #2]
   2f690:	ldr	r0, [sp, #4]
   2f694:	ldr	r0, [r0, #140]	; 0x8c
   2f698:	ldrh	r1, [sp, #2]
   2f69c:	sub	r1, r1, #1
   2f6a0:	and	r0, r0, r1
   2f6a4:	add	sp, sp, #8
   2f6a8:	bx	lr
   2f6ac:	push	{fp, lr}
   2f6b0:	mov	fp, sp
   2f6b4:	sub	sp, sp, #32
   2f6b8:	str	r0, [fp, #-8]
   2f6bc:	str	r1, [fp, #-12]
   2f6c0:	str	r2, [sp, #16]
   2f6c4:	ldr	r0, [fp, #-8]
   2f6c8:	add	r0, r0, #52	; 0x34
   2f6cc:	add	r0, r0, #8
   2f6d0:	str	r0, [sp, #12]
   2f6d4:	ldr	r0, [fp, #-8]
   2f6d8:	ldr	r0, [r0, #48]	; 0x30
   2f6dc:	ldr	r1, [fp, #-8]
   2f6e0:	ldr	r1, [r1, #40]	; 0x28
   2f6e4:	ldr	r2, [sp, #12]
   2f6e8:	ldr	r3, [fp, #-8]
   2f6ec:	ldr	r3, [r3, #28]
   2f6f0:	ldr	ip, [fp, #-12]
   2f6f4:	add	r3, r3, ip
   2f6f8:	str	r0, [sp, #8]
   2f6fc:	mov	r0, r1
   2f700:	mov	r1, r2
   2f704:	mov	r2, r3
   2f708:	movw	r3, #1
   2f70c:	str	r3, [sp, #4]
   2f710:	ldr	ip, [sp, #4]
   2f714:	str	ip, [sp]
   2f718:	ldr	lr, [sp, #8]
   2f71c:	blx	lr
   2f720:	cmp	r0, #0
   2f724:	beq	2f734 <flatcc_builder_get_emit_context@@Base+0xc8>
   2f728:	mvn	r0, #0
   2f72c:	str	r0, [fp, #-4]
   2f730:	b	2f748 <flatcc_builder_get_emit_context@@Base+0xdc>
   2f734:	ldr	r0, [fp, #-8]
   2f738:	ldr	r1, [sp, #16]
   2f73c:	bl	2b4c4 <flatcc_builder_start_struct@@Base+0x70>
   2f740:	movw	r0, #0
   2f744:	str	r0, [fp, #-4]
   2f748:	ldr	r0, [fp, #-4]
   2f74c:	mov	sp, fp
   2f750:	pop	{fp, pc}
   2f754:	push	{fp, lr}
   2f758:	mov	fp, sp
   2f75c:	sub	sp, sp, #32
   2f760:	str	r0, [fp, #-8]
   2f764:	ldr	r0, [fp, #-8]
   2f768:	add	r0, r0, #52	; 0x34
   2f76c:	add	r0, r0, #40	; 0x28
   2f770:	str	r0, [fp, #-12]
   2f774:	ldr	r0, [fp, #-8]
   2f778:	ldr	r0, [r0, #124]	; 0x7c
   2f77c:	cmp	r0, #0
   2f780:	bne	2f788 <flatcc_builder_get_emit_context@@Base+0x11c>
   2f784:	b	2f7a8 <flatcc_builder_get_emit_context@@Base+0x13c>
   2f788:	ldr	r0, [pc, #320]	; 2f8d0 <flatcc_builder_get_emit_context@@Base+0x264>
   2f78c:	add	r0, pc, r0
   2f790:	ldr	r1, [pc, #316]	; 2f8d4 <flatcc_builder_get_emit_context@@Base+0x268>
   2f794:	add	r1, pc, r1
   2f798:	ldr	r2, [pc, #312]	; 2f8d8 <flatcc_builder_get_emit_context@@Base+0x26c>
   2f79c:	add	r3, pc, r2
   2f7a0:	movw	r2, #342	; 0x156
   2f7a4:	bl	14f08 <__assert_fail@plt>
   2f7a8:	ldr	r0, [fp, #-8]
   2f7ac:	ldr	r1, [fp, #-8]
   2f7b0:	ldr	r2, [r1, #124]	; 0x7c
   2f7b4:	movw	r1, #6
   2f7b8:	movw	r3, #16
   2f7bc:	movw	ip, #0
   2f7c0:	str	ip, [sp]
   2f7c4:	bl	2a1fc <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2f7c8:	movw	r1, #0
   2f7cc:	cmp	r0, r1
   2f7d0:	bne	2f7e0 <flatcc_builder_get_emit_context@@Base+0x174>
   2f7d4:	mvn	r0, #0
   2f7d8:	str	r0, [fp, #-4]
   2f7dc:	b	2f8c4 <flatcc_builder_get_emit_context@@Base+0x258>
   2f7e0:	ldr	r0, [fp, #-8]
   2f7e4:	movw	r1, #16
   2f7e8:	str	r1, [r0, #124]	; 0x7c
   2f7ec:	movw	r0, #256	; 0x100
   2f7f0:	str	r0, [sp, #16]
   2f7f4:	ldr	r0, [fp, #-8]
   2f7f8:	ldr	r0, [r0, #48]	; 0x30
   2f7fc:	ldr	r1, [fp, #-8]
   2f800:	ldr	r1, [r1, #40]	; 0x28
   2f804:	ldr	r2, [fp, #-12]
   2f808:	ldr	r3, [sp, #16]
   2f80c:	str	r0, [sp, #8]
   2f810:	mov	r0, r1
   2f814:	mov	r1, r2
   2f818:	mov	r2, r3
   2f81c:	movw	r3, #1
   2f820:	movw	ip, #5
   2f824:	str	ip, [sp]
   2f828:	ldr	ip, [sp, #8]
   2f82c:	blx	ip
   2f830:	cmp	r0, #0
   2f834:	beq	2f844 <flatcc_builder_get_emit_context@@Base+0x1d8>
   2f838:	mvn	r0, #0
   2f83c:	str	r0, [fp, #-4]
   2f840:	b	2f8c4 <flatcc_builder_get_emit_context@@Base+0x258>
   2f844:	b	2f848 <flatcc_builder_get_emit_context@@Base+0x1dc>
   2f848:	ldr	r0, [sp, #16]
   2f84c:	lsl	r0, r0, #1
   2f850:	ldr	r1, [fp, #-12]
   2f854:	ldr	r1, [r1, #4]
   2f858:	cmp	r0, r1
   2f85c:	bhi	2f870 <flatcc_builder_get_emit_context@@Base+0x204>
   2f860:	ldr	r0, [sp, #16]
   2f864:	lsl	r0, r0, #1
   2f868:	str	r0, [sp, #16]
   2f86c:	b	2f848 <flatcc_builder_get_emit_context@@Base+0x1dc>
   2f870:	ldr	r0, [sp, #16]
   2f874:	lsr	r0, r0, #2
   2f878:	str	r0, [sp, #16]
   2f87c:	movw	r0, #0
   2f880:	str	r0, [sp, #12]
   2f884:	ldr	r0, [sp, #12]
   2f888:	movw	r1, #1
   2f88c:	lsl	r0, r1, r0
   2f890:	ldr	r1, [sp, #16]
   2f894:	cmp	r0, r1
   2f898:	bcs	2f8b0 <flatcc_builder_get_emit_context@@Base+0x244>
   2f89c:	b	2f8a0 <flatcc_builder_get_emit_context@@Base+0x234>
   2f8a0:	ldr	r0, [sp, #12]
   2f8a4:	add	r0, r0, #1
   2f8a8:	str	r0, [sp, #12]
   2f8ac:	b	2f884 <flatcc_builder_get_emit_context@@Base+0x218>
   2f8b0:	ldr	r0, [sp, #12]
   2f8b4:	ldr	r1, [fp, #-8]
   2f8b8:	str	r0, [r1, #116]	; 0x74
   2f8bc:	movw	r0, #0
   2f8c0:	str	r0, [fp, #-4]
   2f8c4:	ldr	r0, [fp, #-4]
   2f8c8:	mov	sp, fp
   2f8cc:	pop	{fp, pc}
   2f8d0:	strdeq	ip, [r1], -r7
   2f8d4:	andeq	fp, r1, lr, ror #16
   2f8d8:	strdeq	ip, [r1], -r6

0002f8dc <flatcc_emitter_recycle_page@@Base>:
   2f8dc:	sub	sp, sp, #12
   2f8e0:	str	r0, [sp, #4]
   2f8e4:	str	r1, [sp]
   2f8e8:	ldr	r0, [sp]
   2f8ec:	ldr	r1, [sp, #4]
   2f8f0:	ldr	r1, [r1]
   2f8f4:	cmp	r0, r1
   2f8f8:	beq	2f910 <flatcc_emitter_recycle_page@@Base+0x34>
   2f8fc:	ldr	r0, [sp]
   2f900:	ldr	r1, [sp, #4]
   2f904:	ldr	r1, [r1, #4]
   2f908:	cmp	r0, r1
   2f90c:	bne	2f91c <flatcc_emitter_recycle_page@@Base+0x40>
   2f910:	mvn	r0, #0
   2f914:	str	r0, [sp, #8]
   2f918:	b	2f990 <flatcc_emitter_recycle_page@@Base+0xb4>
   2f91c:	ldr	r0, [sp]
   2f920:	ldr	r0, [r0, #2948]	; 0xb84
   2f924:	ldr	r1, [sp]
   2f928:	ldr	r1, [r1, #2944]	; 0xb80
   2f92c:	str	r0, [r1, #2948]	; 0xb84
   2f930:	ldr	r0, [sp]
   2f934:	ldr	r0, [r0, #2944]	; 0xb80
   2f938:	ldr	r1, [sp]
   2f93c:	ldr	r1, [r1, #2948]	; 0xb84
   2f940:	str	r0, [r1, #2944]	; 0xb80
   2f944:	ldr	r0, [sp, #4]
   2f948:	ldr	r0, [r0]
   2f94c:	ldr	r0, [r0, #2948]	; 0xb84
   2f950:	ldr	r1, [sp]
   2f954:	str	r0, [r1, #2948]	; 0xb84
   2f958:	ldr	r0, [sp, #4]
   2f95c:	ldr	r0, [r0]
   2f960:	ldr	r1, [sp]
   2f964:	str	r0, [r1, #2944]	; 0xb80
   2f968:	ldr	r0, [sp]
   2f96c:	ldr	r1, [sp]
   2f970:	ldr	r1, [r1, #2948]	; 0xb84
   2f974:	str	r0, [r1, #2944]	; 0xb80
   2f978:	ldr	r0, [sp]
   2f97c:	ldr	r1, [sp]
   2f980:	ldr	r1, [r1, #2944]	; 0xb80
   2f984:	str	r0, [r1, #2948]	; 0xb84
   2f988:	movw	r0, #0
   2f98c:	str	r0, [sp, #8]
   2f990:	ldr	r0, [sp, #8]
   2f994:	add	sp, sp, #12
   2f998:	bx	lr

0002f99c <flatcc_emitter_reset@@Base>:
   2f99c:	push	{fp, lr}
   2f9a0:	mov	fp, sp
   2f9a4:	sub	sp, sp, #16
   2f9a8:	str	r0, [fp, #-4]
   2f9ac:	ldr	r0, [fp, #-4]
   2f9b0:	ldr	r0, [r0]
   2f9b4:	str	r0, [sp, #8]
   2f9b8:	ldr	r0, [fp, #-4]
   2f9bc:	ldr	r0, [r0]
   2f9c0:	movw	r1, #0
   2f9c4:	cmp	r0, r1
   2f9c8:	bne	2f9d0 <flatcc_emitter_reset@@Base+0x34>
   2f9cc:	b	2fb2c <flatcc_emitter_reset@@Base+0x190>
   2f9d0:	ldr	r0, [fp, #-4]
   2f9d4:	ldr	r0, [r0]
   2f9d8:	ldr	r1, [fp, #-4]
   2f9dc:	str	r0, [r1, #4]
   2f9e0:	ldr	r0, [fp, #-4]
   2f9e4:	ldr	r0, [r0]
   2f9e8:	add	r0, r0, #1472	; 0x5c0
   2f9ec:	ldr	r1, [fp, #-4]
   2f9f0:	str	r0, [r1, #8]
   2f9f4:	ldr	r0, [fp, #-4]
   2f9f8:	ldr	r0, [r0, #8]
   2f9fc:	ldr	r1, [fp, #-4]
   2fa00:	str	r0, [r1, #16]
   2fa04:	ldr	r0, [fp, #-4]
   2fa08:	movw	r1, #1472	; 0x5c0
   2fa0c:	str	r1, [r0, #12]
   2fa10:	ldr	r0, [fp, #-4]
   2fa14:	str	r1, [r0, #20]
   2fa18:	ldr	r0, [fp, #-4]
   2fa1c:	ldr	r0, [r0, #12]
   2fa20:	movw	r1, #0
   2fa24:	sub	r0, r1, r0
   2fa28:	ldr	r1, [fp, #-4]
   2fa2c:	ldr	r1, [r1]
   2fa30:	str	r0, [r1, #2952]	; 0xb88
   2fa34:	ldr	r0, [fp, #-4]
   2fa38:	ldr	r0, [r0, #32]
   2fa3c:	cmp	r0, #0
   2fa40:	bne	2fa54 <flatcc_emitter_reset@@Base+0xb8>
   2fa44:	ldr	r0, [fp, #-4]
   2fa48:	ldr	r0, [r0, #24]
   2fa4c:	ldr	r1, [fp, #-4]
   2fa50:	str	r0, [r1, #32]
   2fa54:	ldr	r0, [fp, #-4]
   2fa58:	ldr	r1, [r0, #24]
   2fa5c:	ldr	r0, [r0, #32]
   2fa60:	add	r0, r0, r0, lsl #1
   2fa64:	lsr	r0, r0, #2
   2fa68:	lsr	r1, r1, #2
   2fa6c:	add	r0, r0, r1
   2fa70:	ldr	r1, [fp, #-4]
   2fa74:	str	r0, [r1, #32]
   2fa78:	ldr	r0, [fp, #-4]
   2fa7c:	movw	r1, #0
   2fa80:	str	r1, [r0, #24]
   2fa84:	ldr	r0, [fp, #-4]
   2fa88:	ldr	r0, [r0, #32]
   2fa8c:	lsl	r0, r0, #1
   2fa90:	ldr	r1, [fp, #-4]
   2fa94:	ldr	r1, [r1, #28]
   2fa98:	cmp	r0, r1
   2fa9c:	movw	r0, #0
   2faa0:	str	r0, [sp, #4]
   2faa4:	bcs	2facc <flatcc_emitter_reset@@Base+0x130>
   2faa8:	ldr	r0, [fp, #-4]
   2faac:	ldr	r0, [r0, #4]
   2fab0:	ldr	r0, [r0, #2944]	; 0xb80
   2fab4:	ldr	r1, [fp, #-4]
   2fab8:	ldr	r1, [r1]
   2fabc:	cmp	r0, r1
   2fac0:	movw	r0, #0
   2fac4:	movne	r0, #1
   2fac8:	str	r0, [sp, #4]
   2facc:	ldr	r0, [sp, #4]
   2fad0:	tst	r0, #1
   2fad4:	beq	2fb2c <flatcc_emitter_reset@@Base+0x190>
   2fad8:	ldr	r0, [fp, #-4]
   2fadc:	ldr	r0, [r0, #4]
   2fae0:	ldr	r0, [r0, #2944]	; 0xb80
   2fae4:	str	r0, [sp, #8]
   2fae8:	ldr	r0, [sp, #8]
   2faec:	ldr	r0, [r0, #2944]	; 0xb80
   2faf0:	ldr	r1, [fp, #-4]
   2faf4:	ldr	r1, [r1, #4]
   2faf8:	str	r0, [r1, #2944]	; 0xb80
   2fafc:	ldr	r0, [fp, #-4]
   2fb00:	ldr	r0, [r0, #4]
   2fb04:	ldr	r1, [sp, #8]
   2fb08:	ldr	r1, [r1, #2944]	; 0xb80
   2fb0c:	str	r0, [r1, #2948]	; 0xb84
   2fb10:	ldr	r0, [sp, #8]
   2fb14:	bl	14e24 <free@plt>
   2fb18:	ldr	r0, [fp, #-4]
   2fb1c:	ldr	r1, [r0, #28]
   2fb20:	sub	r1, r1, #2944	; 0xb80
   2fb24:	str	r1, [r0, #28]
   2fb28:	b	2fa84 <flatcc_emitter_reset@@Base+0xe8>
   2fb2c:	mov	sp, fp
   2fb30:	pop	{fp, pc}

0002fb34 <flatcc_emitter_clear@@Base>:
   2fb34:	push	{fp, lr}
   2fb38:	mov	fp, sp
   2fb3c:	sub	sp, sp, #8
   2fb40:	str	r0, [sp, #4]
   2fb44:	ldr	r0, [sp, #4]
   2fb48:	ldr	r0, [r0]
   2fb4c:	str	r0, [sp]
   2fb50:	ldr	r0, [sp]
   2fb54:	movw	r1, #0
   2fb58:	cmp	r0, r1
   2fb5c:	bne	2fb64 <flatcc_emitter_clear@@Base+0x30>
   2fb60:	b	2fbc0 <flatcc_emitter_clear@@Base+0x8c>
   2fb64:	ldr	r0, [sp]
   2fb68:	ldr	r0, [r0, #2948]	; 0xb84
   2fb6c:	movw	r1, #0
   2fb70:	str	r1, [r0, #2944]	; 0xb80
   2fb74:	ldr	r0, [sp]
   2fb78:	ldr	r0, [r0, #2944]	; 0xb80
   2fb7c:	movw	r1, #0
   2fb80:	cmp	r0, r1
   2fb84:	beq	2fba4 <flatcc_emitter_clear@@Base+0x70>
   2fb88:	ldr	r0, [sp]
   2fb8c:	ldr	r0, [r0, #2944]	; 0xb80
   2fb90:	str	r0, [sp]
   2fb94:	ldr	r0, [sp]
   2fb98:	ldr	r0, [r0, #2948]	; 0xb84
   2fb9c:	bl	14e24 <free@plt>
   2fba0:	b	2fb74 <flatcc_emitter_clear@@Base+0x40>
   2fba4:	ldr	r0, [sp]
   2fba8:	bl	14e24 <free@plt>
   2fbac:	ldr	r0, [sp, #4]
   2fbb0:	movw	r1, #0
   2fbb4:	and	r1, r1, #255	; 0xff
   2fbb8:	movw	r2, #36	; 0x24
   2fbbc:	bl	14ec0 <memset@plt>
   2fbc0:	mov	sp, fp
   2fbc4:	pop	{fp, pc}

0002fbc8 <flatcc_emitter@@Base>:
   2fbc8:	push	{fp, lr}
   2fbcc:	mov	fp, sp
   2fbd0:	sub	sp, sp, #32
   2fbd4:	ldr	ip, [fp, #8]
   2fbd8:	str	r0, [fp, #-8]
   2fbdc:	str	r1, [fp, #-12]
   2fbe0:	str	r2, [sp, #16]
   2fbe4:	str	r3, [sp, #12]
   2fbe8:	ldr	r0, [fp, #-8]
   2fbec:	str	r0, [sp, #8]
   2fbf0:	ldr	r0, [fp, #8]
   2fbf4:	ldr	r1, [sp, #8]
   2fbf8:	ldr	r2, [r1, #24]
   2fbfc:	add	r0, r2, r0
   2fc00:	str	r0, [r1, #24]
   2fc04:	ldr	r0, [sp, #12]
   2fc08:	cmp	r0, #0
   2fc0c:	bge	2fcd0 <flatcc_emitter@@Base+0x108>
   2fc10:	ldr	r0, [fp, #8]
   2fc14:	ldr	r1, [sp, #8]
   2fc18:	ldr	r1, [r1, #12]
   2fc1c:	cmp	r0, r1
   2fc20:	bhi	2fc64 <flatcc_emitter@@Base+0x9c>
   2fc24:	ldr	r0, [fp, #8]
   2fc28:	ldr	r1, [sp, #8]
   2fc2c:	ldr	r2, [r1, #8]
   2fc30:	movw	r3, #0
   2fc34:	sub	r0, r3, r0
   2fc38:	add	r0, r2, r0
   2fc3c:	str	r0, [r1, #8]
   2fc40:	ldr	r0, [fp, #8]
   2fc44:	ldr	r1, [sp, #8]
   2fc48:	ldr	r2, [r1, #12]
   2fc4c:	sub	r0, r2, r0
   2fc50:	str	r0, [r1, #12]
   2fc54:	ldr	r0, [sp, #8]
   2fc58:	ldr	r0, [r0, #8]
   2fc5c:	str	r0, [sp, #4]
   2fc60:	b	2fd84 <flatcc_emitter@@Base+0x1bc>
   2fc64:	ldr	r0, [sp, #16]
   2fc68:	ldr	r1, [fp, #-12]
   2fc6c:	add	r0, r1, r0, lsl #3
   2fc70:	str	r0, [fp, #-12]
   2fc74:	ldr	r0, [sp, #16]
   2fc78:	mvn	r1, #0
   2fc7c:	add	r1, r0, r1
   2fc80:	str	r1, [sp, #16]
   2fc84:	cmp	r0, #0
   2fc88:	beq	2fccc <flatcc_emitter@@Base+0x104>
   2fc8c:	ldr	r0, [fp, #-12]
   2fc90:	mvn	r1, #7
   2fc94:	add	r0, r0, r1
   2fc98:	str	r0, [fp, #-12]
   2fc9c:	ldr	r0, [sp, #8]
   2fca0:	ldr	r1, [fp, #-12]
   2fca4:	ldr	r1, [r1]
   2fca8:	ldr	r2, [fp, #-12]
   2fcac:	ldr	r2, [r2, #4]
   2fcb0:	bl	2fdf0 <flatcc_emitter@@Base+0x228>
   2fcb4:	cmp	r0, #0
   2fcb8:	beq	2fcc8 <flatcc_emitter@@Base+0x100>
   2fcbc:	mvn	r0, #0
   2fcc0:	str	r0, [fp, #-4]
   2fcc4:	b	2fde4 <flatcc_emitter@@Base+0x21c>
   2fcc8:	b	2fc74 <flatcc_emitter@@Base+0xac>
   2fccc:	b	2fd78 <flatcc_emitter@@Base+0x1b0>
   2fcd0:	ldr	r0, [fp, #8]
   2fcd4:	ldr	r1, [sp, #8]
   2fcd8:	ldr	r1, [r1, #20]
   2fcdc:	cmp	r0, r1
   2fce0:	bhi	2fd1c <flatcc_emitter@@Base+0x154>
   2fce4:	ldr	r0, [sp, #8]
   2fce8:	ldr	r0, [r0, #16]
   2fcec:	str	r0, [sp, #4]
   2fcf0:	ldr	r0, [fp, #8]
   2fcf4:	ldr	r1, [sp, #8]
   2fcf8:	ldr	r2, [r1, #16]
   2fcfc:	add	r0, r2, r0
   2fd00:	str	r0, [r1, #16]
   2fd04:	ldr	r0, [fp, #8]
   2fd08:	ldr	r1, [sp, #8]
   2fd0c:	ldr	r2, [r1, #20]
   2fd10:	sub	r0, r2, r0
   2fd14:	str	r0, [r1, #20]
   2fd18:	b	2fd84 <flatcc_emitter@@Base+0x1bc>
   2fd1c:	b	2fd20 <flatcc_emitter@@Base+0x158>
   2fd20:	ldr	r0, [sp, #16]
   2fd24:	mvn	r1, #0
   2fd28:	add	r1, r0, r1
   2fd2c:	str	r1, [sp, #16]
   2fd30:	cmp	r0, #0
   2fd34:	beq	2fd74 <flatcc_emitter@@Base+0x1ac>
   2fd38:	ldr	r0, [sp, #8]
   2fd3c:	ldr	r1, [fp, #-12]
   2fd40:	ldr	r1, [r1]
   2fd44:	ldr	r2, [fp, #-12]
   2fd48:	ldr	r2, [r2, #4]
   2fd4c:	bl	2fefc <flatcc_emitter@@Base+0x334>
   2fd50:	cmp	r0, #0
   2fd54:	beq	2fd64 <flatcc_emitter@@Base+0x19c>
   2fd58:	mvn	r0, #0
   2fd5c:	str	r0, [fp, #-4]
   2fd60:	b	2fde4 <flatcc_emitter@@Base+0x21c>
   2fd64:	ldr	r0, [fp, #-12]
   2fd68:	add	r0, r0, #8
   2fd6c:	str	r0, [fp, #-12]
   2fd70:	b	2fd20 <flatcc_emitter@@Base+0x158>
   2fd74:	b	2fd78 <flatcc_emitter@@Base+0x1b0>
   2fd78:	movw	r0, #0
   2fd7c:	str	r0, [fp, #-4]
   2fd80:	b	2fde4 <flatcc_emitter@@Base+0x21c>
   2fd84:	b	2fd88 <flatcc_emitter@@Base+0x1c0>
   2fd88:	ldr	r0, [sp, #16]
   2fd8c:	mvn	r1, #0
   2fd90:	add	r1, r0, r1
   2fd94:	str	r1, [sp, #16]
   2fd98:	cmp	r0, #0
   2fd9c:	beq	2fddc <flatcc_emitter@@Base+0x214>
   2fda0:	ldr	r0, [sp, #4]
   2fda4:	ldr	r1, [fp, #-12]
   2fda8:	ldr	r1, [r1]
   2fdac:	ldr	r2, [fp, #-12]
   2fdb0:	ldr	r2, [r2, #4]
   2fdb4:	bl	14e30 <memcpy@plt>
   2fdb8:	ldr	r0, [fp, #-12]
   2fdbc:	ldr	r0, [r0, #4]
   2fdc0:	ldr	r1, [sp, #4]
   2fdc4:	add	r0, r1, r0
   2fdc8:	str	r0, [sp, #4]
   2fdcc:	ldr	r0, [fp, #-12]
   2fdd0:	add	r0, r0, #8
   2fdd4:	str	r0, [fp, #-12]
   2fdd8:	b	2fd88 <flatcc_emitter@@Base+0x1c0>
   2fddc:	movw	r0, #0
   2fde0:	str	r0, [fp, #-4]
   2fde4:	ldr	r0, [fp, #-4]
   2fde8:	mov	sp, fp
   2fdec:	pop	{fp, pc}
   2fdf0:	push	{fp, lr}
   2fdf4:	mov	fp, sp
   2fdf8:	sub	sp, sp, #24
   2fdfc:	str	r0, [fp, #-8]
   2fe00:	str	r1, [sp, #12]
   2fe04:	str	r2, [sp, #8]
   2fe08:	ldr	r0, [sp, #8]
   2fe0c:	ldr	r1, [sp, #12]
   2fe10:	add	r0, r1, r0
   2fe14:	str	r0, [sp, #12]
   2fe18:	ldr	r0, [sp, #8]
   2fe1c:	cmp	r0, #0
   2fe20:	beq	2fee8 <flatcc_emitter@@Base+0x320>
   2fe24:	ldr	r0, [sp, #8]
   2fe28:	str	r0, [sp, #4]
   2fe2c:	ldr	r0, [sp, #4]
   2fe30:	ldr	r1, [fp, #-8]
   2fe34:	ldr	r1, [r1, #12]
   2fe38:	cmp	r0, r1
   2fe3c:	bls	2fe7c <flatcc_emitter@@Base+0x2b4>
   2fe40:	ldr	r0, [fp, #-8]
   2fe44:	ldr	r0, [r0, #12]
   2fe48:	str	r0, [sp, #4]
   2fe4c:	ldr	r0, [sp, #4]
   2fe50:	cmp	r0, #0
   2fe54:	bne	2fe78 <flatcc_emitter@@Base+0x2b0>
   2fe58:	ldr	r0, [fp, #-8]
   2fe5c:	bl	30138 <flatcc_emitter_copy_buffer@@Base+0x14c>
   2fe60:	cmp	r0, #0
   2fe64:	beq	2fe74 <flatcc_emitter@@Base+0x2ac>
   2fe68:	mvn	r0, #0
   2fe6c:	str	r0, [fp, #-4]
   2fe70:	b	2fef0 <flatcc_emitter@@Base+0x328>
   2fe74:	b	2fe18 <flatcc_emitter@@Base+0x250>
   2fe78:	b	2fe7c <flatcc_emitter@@Base+0x2b4>
   2fe7c:	ldr	r0, [sp, #4]
   2fe80:	ldr	r1, [fp, #-8]
   2fe84:	ldr	r2, [r1, #8]
   2fe88:	movw	r3, #0
   2fe8c:	sub	r0, r3, r0
   2fe90:	add	r0, r2, r0
   2fe94:	str	r0, [r1, #8]
   2fe98:	ldr	r0, [sp, #4]
   2fe9c:	ldr	r1, [fp, #-8]
   2fea0:	ldr	r2, [r1, #12]
   2fea4:	sub	r0, r2, r0
   2fea8:	str	r0, [r1, #12]
   2feac:	ldr	r0, [sp, #4]
   2feb0:	ldr	r1, [sp, #12]
   2feb4:	sub	r0, r3, r0
   2feb8:	add	r0, r1, r0
   2febc:	str	r0, [sp, #12]
   2fec0:	ldr	r0, [sp, #4]
   2fec4:	ldr	r1, [sp, #8]
   2fec8:	sub	r0, r1, r0
   2fecc:	str	r0, [sp, #8]
   2fed0:	ldr	r0, [fp, #-8]
   2fed4:	ldr	r0, [r0, #8]
   2fed8:	ldr	r1, [sp, #12]
   2fedc:	ldr	r2, [sp, #4]
   2fee0:	bl	14e30 <memcpy@plt>
   2fee4:	b	2fe18 <flatcc_emitter@@Base+0x250>
   2fee8:	movw	r0, #0
   2feec:	str	r0, [fp, #-4]
   2fef0:	ldr	r0, [fp, #-4]
   2fef4:	mov	sp, fp
   2fef8:	pop	{fp, pc}
   2fefc:	push	{fp, lr}
   2ff00:	mov	fp, sp
   2ff04:	sub	sp, sp, #24
   2ff08:	str	r0, [fp, #-8]
   2ff0c:	str	r1, [sp, #12]
   2ff10:	str	r2, [sp, #8]
   2ff14:	ldr	r0, [sp, #8]
   2ff18:	cmp	r0, #0
   2ff1c:	beq	2ffd8 <flatcc_emitter@@Base+0x410>
   2ff20:	ldr	r0, [sp, #8]
   2ff24:	str	r0, [sp, #4]
   2ff28:	ldr	r0, [sp, #4]
   2ff2c:	ldr	r1, [fp, #-8]
   2ff30:	ldr	r1, [r1, #20]
   2ff34:	cmp	r0, r1
   2ff38:	bls	2ff78 <flatcc_emitter@@Base+0x3b0>
   2ff3c:	ldr	r0, [fp, #-8]
   2ff40:	ldr	r0, [r0, #20]
   2ff44:	str	r0, [sp, #4]
   2ff48:	ldr	r0, [sp, #4]
   2ff4c:	cmp	r0, #0
   2ff50:	bne	2ff74 <flatcc_emitter@@Base+0x3ac>
   2ff54:	ldr	r0, [fp, #-8]
   2ff58:	bl	30338 <flatcc_emitter_copy_buffer@@Base+0x34c>
   2ff5c:	cmp	r0, #0
   2ff60:	beq	2ff70 <flatcc_emitter@@Base+0x3a8>
   2ff64:	mvn	r0, #0
   2ff68:	str	r0, [fp, #-4]
   2ff6c:	b	2ffe0 <flatcc_emitter@@Base+0x418>
   2ff70:	b	2ff14 <flatcc_emitter@@Base+0x34c>
   2ff74:	b	2ff78 <flatcc_emitter@@Base+0x3b0>
   2ff78:	ldr	r0, [fp, #-8]
   2ff7c:	ldr	r0, [r0, #16]
   2ff80:	ldr	r1, [sp, #12]
   2ff84:	ldr	r2, [sp, #4]
   2ff88:	bl	14e30 <memcpy@plt>
   2ff8c:	ldr	r0, [sp, #4]
   2ff90:	ldr	r1, [sp, #8]
   2ff94:	sub	r0, r1, r0
   2ff98:	str	r0, [sp, #8]
   2ff9c:	ldr	r0, [sp, #4]
   2ffa0:	ldr	r1, [sp, #12]
   2ffa4:	add	r0, r1, r0
   2ffa8:	str	r0, [sp, #12]
   2ffac:	ldr	r0, [sp, #4]
   2ffb0:	ldr	r1, [fp, #-8]
   2ffb4:	ldr	r2, [r1, #16]
   2ffb8:	add	r0, r2, r0
   2ffbc:	str	r0, [r1, #16]
   2ffc0:	ldr	r0, [sp, #4]
   2ffc4:	ldr	r1, [fp, #-8]
   2ffc8:	ldr	r2, [r1, #20]
   2ffcc:	sub	r0, r2, r0
   2ffd0:	str	r0, [r1, #20]
   2ffd4:	b	2ff14 <flatcc_emitter@@Base+0x34c>
   2ffd8:	movw	r0, #0
   2ffdc:	str	r0, [fp, #-4]
   2ffe0:	ldr	r0, [fp, #-4]
   2ffe4:	mov	sp, fp
   2ffe8:	pop	{fp, pc}

0002ffec <flatcc_emitter_copy_buffer@@Base>:
   2ffec:	push	{fp, lr}
   2fff0:	mov	fp, sp
   2fff4:	sub	sp, sp, #24
   2fff8:	str	r0, [fp, #-8]
   2fffc:	str	r1, [sp, #12]
   30000:	str	r2, [sp, #8]
   30004:	ldr	r0, [sp, #8]
   30008:	ldr	r1, [fp, #-8]
   3000c:	ldr	r1, [r1, #24]
   30010:	cmp	r0, r1
   30014:	bcs	30024 <flatcc_emitter_copy_buffer@@Base+0x38>
   30018:	movw	r0, #0
   3001c:	str	r0, [fp, #-4]
   30020:	b	3012c <flatcc_emitter_copy_buffer@@Base+0x140>
   30024:	ldr	r0, [fp, #-8]
   30028:	ldr	r0, [r0]
   3002c:	movw	r1, #0
   30030:	cmp	r0, r1
   30034:	bne	30044 <flatcc_emitter_copy_buffer@@Base+0x58>
   30038:	movw	r0, #0
   3003c:	str	r0, [fp, #-4]
   30040:	b	3012c <flatcc_emitter_copy_buffer@@Base+0x140>
   30044:	ldr	r0, [fp, #-8]
   30048:	ldr	r0, [r0]
   3004c:	ldr	r1, [fp, #-8]
   30050:	ldr	r1, [r1, #4]
   30054:	cmp	r0, r1
   30058:	bne	30080 <flatcc_emitter_copy_buffer@@Base+0x94>
   3005c:	ldr	r0, [sp, #12]
   30060:	ldr	r1, [fp, #-8]
   30064:	ldr	r1, [r1, #8]
   30068:	ldr	r2, [fp, #-8]
   3006c:	ldr	r2, [r2, #24]
   30070:	bl	14e30 <memcpy@plt>
   30074:	ldr	r0, [sp, #12]
   30078:	str	r0, [fp, #-4]
   3007c:	b	3012c <flatcc_emitter_copy_buffer@@Base+0x140>
   30080:	ldr	r0, [fp, #-8]
   30084:	ldr	r0, [r0, #12]
   30088:	movw	r1, #2944	; 0xb80
   3008c:	sub	r0, r1, r0
   30090:	str	r0, [sp]
   30094:	ldr	r0, [sp, #12]
   30098:	ldr	r1, [fp, #-8]
   3009c:	ldr	r1, [r1, #8]
   300a0:	ldr	r2, [sp]
   300a4:	bl	14e30 <memcpy@plt>
   300a8:	ldr	r0, [sp, #12]
   300ac:	ldr	r1, [sp]
   300b0:	add	r0, r0, r1
   300b4:	str	r0, [sp, #12]
   300b8:	ldr	r0, [fp, #-8]
   300bc:	ldr	r0, [r0]
   300c0:	ldr	r0, [r0, #2944]	; 0xb80
   300c4:	str	r0, [sp, #4]
   300c8:	ldr	r0, [sp, #4]
   300cc:	ldr	r1, [fp, #-8]
   300d0:	ldr	r1, [r1, #4]
   300d4:	cmp	r0, r1
   300d8:	beq	30108 <flatcc_emitter_copy_buffer@@Base+0x11c>
   300dc:	ldr	r0, [sp, #12]
   300e0:	ldr	r1, [sp, #4]
   300e4:	movw	r2, #2944	; 0xb80
   300e8:	bl	14e30 <memcpy@plt>
   300ec:	ldr	r0, [sp, #12]
   300f0:	add	r0, r0, #2944	; 0xb80
   300f4:	str	r0, [sp, #12]
   300f8:	ldr	r0, [sp, #4]
   300fc:	ldr	r0, [r0, #2944]	; 0xb80
   30100:	str	r0, [sp, #4]
   30104:	b	300c8 <flatcc_emitter_copy_buffer@@Base+0xdc>
   30108:	ldr	r0, [sp, #12]
   3010c:	ldr	r1, [sp, #4]
   30110:	ldr	r2, [fp, #-8]
   30114:	ldr	r2, [r2, #20]
   30118:	movw	r3, #2944	; 0xb80
   3011c:	sub	r2, r3, r2
   30120:	bl	14e30 <memcpy@plt>
   30124:	ldr	r0, [sp, #12]
   30128:	str	r0, [fp, #-4]
   3012c:	ldr	r0, [fp, #-4]
   30130:	mov	sp, fp
   30134:	pop	{fp, pc}
   30138:	push	{fp, lr}
   3013c:	mov	fp, sp
   30140:	sub	sp, sp, #16
   30144:	str	r0, [sp, #8]
   30148:	movw	r0, #0
   3014c:	str	r0, [sp, #4]
   30150:	ldr	r1, [sp, #8]
   30154:	ldr	r1, [r1]
   30158:	cmp	r1, r0
   3015c:	beq	301b4 <flatcc_emitter_copy_buffer@@Base+0x1c8>
   30160:	ldr	r0, [sp, #8]
   30164:	ldr	r0, [r0]
   30168:	ldr	r0, [r0, #2948]	; 0xb84
   3016c:	ldr	r1, [sp, #8]
   30170:	ldr	r1, [r1, #4]
   30174:	cmp	r0, r1
   30178:	beq	301b4 <flatcc_emitter_copy_buffer@@Base+0x1c8>
   3017c:	ldr	r0, [sp, #8]
   30180:	ldr	r0, [r0]
   30184:	ldr	r0, [r0, #2952]	; 0xb88
   30188:	sub	r0, r0, #2944	; 0xb80
   3018c:	ldr	r1, [sp, #8]
   30190:	ldr	r1, [r1]
   30194:	ldr	r1, [r1, #2948]	; 0xb84
   30198:	str	r0, [r1, #2952]	; 0xb88
   3019c:	ldr	r0, [sp, #8]
   301a0:	ldr	r0, [r0]
   301a4:	ldr	r0, [r0, #2948]	; 0xb84
   301a8:	ldr	r1, [sp, #8]
   301ac:	str	r0, [r1]
   301b0:	b	302e4 <flatcc_emitter_copy_buffer@@Base+0x2f8>
   301b4:	movw	r0, #2956	; 0xb8c
   301b8:	bl	14e78 <malloc@plt>
   301bc:	str	r0, [sp, #4]
   301c0:	movw	r1, #0
   301c4:	cmp	r0, r1
   301c8:	bne	301d8 <flatcc_emitter_copy_buffer@@Base+0x1ec>
   301cc:	mvn	r0, #0
   301d0:	str	r0, [fp, #-4]
   301d4:	b	3032c <flatcc_emitter_copy_buffer@@Base+0x340>
   301d8:	ldr	r0, [sp, #8]
   301dc:	ldr	r1, [r0, #28]
   301e0:	add	r1, r1, #2944	; 0xb80
   301e4:	str	r1, [r0, #28]
   301e8:	ldr	r0, [sp, #8]
   301ec:	ldr	r0, [r0]
   301f0:	movw	r1, #0
   301f4:	cmp	r0, r1
   301f8:	beq	3024c <flatcc_emitter_copy_buffer@@Base+0x260>
   301fc:	ldr	r0, [sp, #8]
   30200:	ldr	r0, [r0, #4]
   30204:	ldr	r1, [sp, #4]
   30208:	str	r0, [r1, #2948]	; 0xb84
   3020c:	ldr	r0, [sp, #8]
   30210:	ldr	r0, [r0]
   30214:	ldr	r1, [sp, #4]
   30218:	str	r0, [r1, #2944]	; 0xb80
   3021c:	ldr	r0, [sp, #4]
   30220:	ldr	r1, [sp, #8]
   30224:	ldr	r1, [r1]
   30228:	str	r0, [r1, #2948]	; 0xb84
   3022c:	ldr	r0, [sp, #4]
   30230:	ldr	r1, [sp, #8]
   30234:	ldr	r1, [r1, #4]
   30238:	str	r0, [r1, #2944]	; 0xb80
   3023c:	ldr	r0, [sp, #4]
   30240:	ldr	r1, [sp, #8]
   30244:	str	r0, [r1]
   30248:	b	302e4 <flatcc_emitter_copy_buffer@@Base+0x2f8>
   3024c:	ldr	r0, [sp, #4]
   30250:	ldr	r1, [sp, #8]
   30254:	str	r0, [r1]
   30258:	ldr	r0, [sp, #4]
   3025c:	ldr	r1, [sp, #8]
   30260:	str	r0, [r1, #4]
   30264:	ldr	r0, [sp, #4]
   30268:	ldr	r1, [sp, #4]
   3026c:	str	r0, [r1, #2944]	; 0xb80
   30270:	ldr	r0, [sp, #4]
   30274:	ldr	r1, [sp, #4]
   30278:	str	r0, [r1, #2948]	; 0xb84
   3027c:	ldr	r0, [sp, #8]
   30280:	ldr	r0, [r0]
   30284:	add	r0, r0, #1472	; 0x5c0
   30288:	ldr	r1, [sp, #8]
   3028c:	str	r0, [r1, #8]
   30290:	ldr	r0, [sp, #8]
   30294:	ldr	r0, [r0, #8]
   30298:	ldr	r1, [sp, #8]
   3029c:	str	r0, [r1, #16]
   302a0:	ldr	r0, [sp, #8]
   302a4:	movw	r1, #1472	; 0x5c0
   302a8:	str	r1, [r0, #12]
   302ac:	ldr	r0, [sp, #8]
   302b0:	ldr	r0, [r0, #12]
   302b4:	movw	r1, #2944	; 0xb80
   302b8:	sub	r0, r1, r0
   302bc:	ldr	r1, [sp, #8]
   302c0:	str	r0, [r1, #20]
   302c4:	ldr	r0, [sp, #8]
   302c8:	ldr	r0, [r0, #12]
   302cc:	movw	r1, #0
   302d0:	sub	r0, r1, r0
   302d4:	ldr	r2, [sp, #4]
   302d8:	str	r0, [r2, #2952]	; 0xb88
   302dc:	str	r1, [fp, #-4]
   302e0:	b	3032c <flatcc_emitter_copy_buffer@@Base+0x340>
   302e4:	ldr	r0, [sp, #8]
   302e8:	ldr	r0, [r0]
   302ec:	add	r0, r0, #2944	; 0xb80
   302f0:	ldr	r1, [sp, #8]
   302f4:	str	r0, [r1, #8]
   302f8:	ldr	r0, [sp, #8]
   302fc:	movw	r1, #2944	; 0xb80
   30300:	str	r1, [r0, #12]
   30304:	ldr	r0, [sp, #8]
   30308:	ldr	r0, [r0]
   3030c:	ldr	r0, [r0, #2944]	; 0xb80
   30310:	ldr	r0, [r0, #2952]	; 0xb88
   30314:	sub	r0, r0, #2944	; 0xb80
   30318:	ldr	r1, [sp, #8]
   3031c:	ldr	r1, [r1]
   30320:	str	r0, [r1, #2952]	; 0xb88
   30324:	movw	r0, #0
   30328:	str	r0, [fp, #-4]
   3032c:	ldr	r0, [fp, #-4]
   30330:	mov	sp, fp
   30334:	pop	{fp, pc}
   30338:	push	{fp, lr}
   3033c:	mov	fp, sp
   30340:	sub	sp, sp, #16
   30344:	str	r0, [sp, #8]
   30348:	movw	r0, #0
   3034c:	str	r0, [sp, #4]
   30350:	ldr	r1, [sp, #8]
   30354:	ldr	r1, [r1, #4]
   30358:	cmp	r1, r0
   3035c:	beq	30394 <flatcc_emitter_copy_buffer@@Base+0x3a8>
   30360:	ldr	r0, [sp, #8]
   30364:	ldr	r0, [r0, #4]
   30368:	ldr	r0, [r0, #2944]	; 0xb80
   3036c:	ldr	r1, [sp, #8]
   30370:	ldr	r1, [r1]
   30374:	cmp	r0, r1
   30378:	beq	30394 <flatcc_emitter_copy_buffer@@Base+0x3a8>
   3037c:	ldr	r0, [sp, #8]
   30380:	ldr	r0, [r0, #4]
   30384:	ldr	r0, [r0, #2944]	; 0xb80
   30388:	ldr	r1, [sp, #8]
   3038c:	str	r0, [r1, #4]
   30390:	b	304c4 <flatcc_emitter_copy_buffer@@Base+0x4d8>
   30394:	movw	r0, #2956	; 0xb8c
   30398:	bl	14e78 <malloc@plt>
   3039c:	str	r0, [sp, #4]
   303a0:	movw	r1, #0
   303a4:	cmp	r0, r1
   303a8:	bne	303b8 <flatcc_emitter_copy_buffer@@Base+0x3cc>
   303ac:	mvn	r0, #0
   303b0:	str	r0, [fp, #-4]
   303b4:	b	30508 <flatcc_emitter_copy_buffer@@Base+0x51c>
   303b8:	ldr	r0, [sp, #8]
   303bc:	ldr	r1, [r0, #28]
   303c0:	add	r1, r1, #2944	; 0xb80
   303c4:	str	r1, [r0, #28]
   303c8:	ldr	r0, [sp, #8]
   303cc:	ldr	r0, [r0, #4]
   303d0:	movw	r1, #0
   303d4:	cmp	r0, r1
   303d8:	beq	3042c <flatcc_emitter_copy_buffer@@Base+0x440>
   303dc:	ldr	r0, [sp, #8]
   303e0:	ldr	r0, [r0, #4]
   303e4:	ldr	r1, [sp, #4]
   303e8:	str	r0, [r1, #2948]	; 0xb84
   303ec:	ldr	r0, [sp, #8]
   303f0:	ldr	r0, [r0]
   303f4:	ldr	r1, [sp, #4]
   303f8:	str	r0, [r1, #2944]	; 0xb80
   303fc:	ldr	r0, [sp, #4]
   30400:	ldr	r1, [sp, #8]
   30404:	ldr	r1, [r1]
   30408:	str	r0, [r1, #2948]	; 0xb84
   3040c:	ldr	r0, [sp, #4]
   30410:	ldr	r1, [sp, #8]
   30414:	ldr	r1, [r1, #4]
   30418:	str	r0, [r1, #2944]	; 0xb80
   3041c:	ldr	r0, [sp, #4]
   30420:	ldr	r1, [sp, #8]
   30424:	str	r0, [r1, #4]
   30428:	b	304c4 <flatcc_emitter_copy_buffer@@Base+0x4d8>
   3042c:	ldr	r0, [sp, #4]
   30430:	ldr	r1, [sp, #8]
   30434:	str	r0, [r1]
   30438:	ldr	r0, [sp, #4]
   3043c:	ldr	r1, [sp, #8]
   30440:	str	r0, [r1, #4]
   30444:	ldr	r0, [sp, #4]
   30448:	ldr	r1, [sp, #4]
   3044c:	str	r0, [r1, #2944]	; 0xb80
   30450:	ldr	r0, [sp, #4]
   30454:	ldr	r1, [sp, #4]
   30458:	str	r0, [r1, #2948]	; 0xb84
   3045c:	ldr	r0, [sp, #8]
   30460:	ldr	r0, [r0]
   30464:	add	r0, r0, #1472	; 0x5c0
   30468:	ldr	r1, [sp, #8]
   3046c:	str	r0, [r1, #8]
   30470:	ldr	r0, [sp, #8]
   30474:	ldr	r0, [r0, #8]
   30478:	ldr	r1, [sp, #8]
   3047c:	str	r0, [r1, #16]
   30480:	ldr	r0, [sp, #8]
   30484:	movw	r1, #1472	; 0x5c0
   30488:	str	r1, [r0, #12]
   3048c:	ldr	r0, [sp, #8]
   30490:	ldr	r0, [r0, #12]
   30494:	movw	r1, #2944	; 0xb80
   30498:	sub	r0, r1, r0
   3049c:	ldr	r1, [sp, #8]
   304a0:	str	r0, [r1, #20]
   304a4:	ldr	r0, [sp, #8]
   304a8:	ldr	r0, [r0, #12]
   304ac:	movw	r1, #0
   304b0:	sub	r0, r1, r0
   304b4:	ldr	r2, [sp, #4]
   304b8:	str	r0, [r2, #2952]	; 0xb88
   304bc:	str	r1, [fp, #-4]
   304c0:	b	30508 <flatcc_emitter_copy_buffer@@Base+0x51c>
   304c4:	ldr	r0, [sp, #8]
   304c8:	ldr	r0, [r0, #4]
   304cc:	ldr	r1, [sp, #8]
   304d0:	str	r0, [r1, #16]
   304d4:	ldr	r0, [sp, #8]
   304d8:	movw	r1, #2944	; 0xb80
   304dc:	str	r1, [r0, #20]
   304e0:	ldr	r0, [sp, #8]
   304e4:	ldr	r0, [r0, #4]
   304e8:	ldr	r0, [r0, #2948]	; 0xb84
   304ec:	ldr	r0, [r0, #2952]	; 0xb88
   304f0:	add	r0, r0, #2944	; 0xb80
   304f4:	ldr	r1, [sp, #8]
   304f8:	ldr	r1, [r1, #4]
   304fc:	str	r0, [r1, #2952]	; 0xb88
   30500:	movw	r0, #0
   30504:	str	r0, [fp, #-4]
   30508:	ldr	r0, [fp, #-4]
   3050c:	mov	sp, fp
   30510:	pop	{fp, pc}

00030514 <flatcc_verify_error_string@@Base>:
   30514:	sub	sp, sp, #12
   30518:	str	r0, [sp, #4]
   3051c:	ldr	r0, [sp, #4]
   30520:	cmp	r0, #36	; 0x24
   30524:	str	r0, [sp]
   30528:	bhi	30820 <flatcc_verify_error_string@@Base+0x30c>
   3052c:	add	r0, pc, #8
   30530:	ldr	r1, [sp]
   30534:	ldr	r2, [r0, r1, lsl #2]
   30538:	add	pc, r0, r2
   3053c:	muleq	r0, r4, r0
   30540:	andeq	r0, r0, r4, lsr #1
   30544:	strheq	r0, [r0], -r4
   30548:	andeq	r0, r0, r4, asr #1
   3054c:	ldrdeq	r0, [r0], -r4
   30550:	andeq	r0, r0, r4, ror #1
   30554:	strdeq	r0, [r0], -r4
   30558:	andeq	r0, r0, r4, lsl #2
   3055c:	andeq	r0, r0, r4, lsl r1
   30560:	andeq	r0, r0, r4, lsr #2
   30564:	andeq	r0, r0, r4, lsr r1
   30568:	andeq	r0, r0, r4, asr #2
   3056c:	andeq	r0, r0, r4, asr r1
   30570:	andeq	r0, r0, r4, ror #2
   30574:	andeq	r0, r0, r4, ror r1
   30578:	andeq	r0, r0, r4, lsl #3
   3057c:	muleq	r0, r4, r1
   30580:	andeq	r0, r0, r4, lsr #3
   30584:			; <UNDEFINED> instruction: 0x000001b4
   30588:	andeq	r0, r0, r4, asr #3
   3058c:	ldrdeq	r0, [r0], -r4
   30590:	andeq	r0, r0, r4, ror #3
   30594:	strdeq	r0, [r0], -r4
   30598:	andeq	r0, r0, r4, lsl #4
   3059c:	andeq	r0, r0, r4, lsl r2
   305a0:	andeq	r0, r0, r4, lsr #4
   305a4:	andeq	r0, r0, r4, lsr r2
   305a8:	andeq	r0, r0, r4, asr #4
   305ac:	andeq	r0, r0, r4, asr r2
   305b0:	andeq	r0, r0, r4, ror #4
   305b4:	andeq	r0, r0, r4, ror r2
   305b8:	andeq	r0, r0, r4, lsl #5
   305bc:	muleq	r0, r4, r2
   305c0:	andeq	r0, r0, r4, lsr #5
   305c4:			; <UNDEFINED> instruction: 0x000002b4
   305c8:	andeq	r0, r0, r4, asr #5
   305cc:	ldrdeq	r0, [r0], -r4
   305d0:	ldr	r0, [pc, #752]	; 308c8 <flatcc_verify_error_string@@Base+0x3b4>
   305d4:	add	r0, pc, r0
   305d8:	str	r0, [sp, #8]
   305dc:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   305e0:	ldr	r0, [pc, #732]	; 308c4 <flatcc_verify_error_string@@Base+0x3b0>
   305e4:	add	r0, pc, r0
   305e8:	str	r0, [sp, #8]
   305ec:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   305f0:	ldr	r0, [pc, #712]	; 308c0 <flatcc_verify_error_string@@Base+0x3ac>
   305f4:	add	r0, pc, r0
   305f8:	str	r0, [sp, #8]
   305fc:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30600:	ldr	r0, [pc, #692]	; 308bc <flatcc_verify_error_string@@Base+0x3a8>
   30604:	add	r0, pc, r0
   30608:	str	r0, [sp, #8]
   3060c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30610:	ldr	r0, [pc, #672]	; 308b8 <flatcc_verify_error_string@@Base+0x3a4>
   30614:	add	r0, pc, r0
   30618:	str	r0, [sp, #8]
   3061c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30620:	ldr	r0, [pc, #652]	; 308b4 <flatcc_verify_error_string@@Base+0x3a0>
   30624:	add	r0, pc, r0
   30628:	str	r0, [sp, #8]
   3062c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30630:	ldr	r0, [pc, #632]	; 308b0 <flatcc_verify_error_string@@Base+0x39c>
   30634:	add	r0, pc, r0
   30638:	str	r0, [sp, #8]
   3063c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30640:	ldr	r0, [pc, #612]	; 308ac <flatcc_verify_error_string@@Base+0x398>
   30644:	add	r0, pc, r0
   30648:	str	r0, [sp, #8]
   3064c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30650:	ldr	r0, [pc, #592]	; 308a8 <flatcc_verify_error_string@@Base+0x394>
   30654:	add	r0, pc, r0
   30658:	str	r0, [sp, #8]
   3065c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30660:	ldr	r0, [pc, #572]	; 308a4 <flatcc_verify_error_string@@Base+0x390>
   30664:	add	r0, pc, r0
   30668:	str	r0, [sp, #8]
   3066c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30670:	ldr	r0, [pc, #552]	; 308a0 <flatcc_verify_error_string@@Base+0x38c>
   30674:	add	r0, pc, r0
   30678:	str	r0, [sp, #8]
   3067c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30680:	ldr	r0, [pc, #532]	; 3089c <flatcc_verify_error_string@@Base+0x388>
   30684:	add	r0, pc, r0
   30688:	str	r0, [sp, #8]
   3068c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30690:	ldr	r0, [pc, #512]	; 30898 <flatcc_verify_error_string@@Base+0x384>
   30694:	add	r0, pc, r0
   30698:	str	r0, [sp, #8]
   3069c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   306a0:	ldr	r0, [pc, #492]	; 30894 <flatcc_verify_error_string@@Base+0x380>
   306a4:	add	r0, pc, r0
   306a8:	str	r0, [sp, #8]
   306ac:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   306b0:	ldr	r0, [pc, #472]	; 30890 <flatcc_verify_error_string@@Base+0x37c>
   306b4:	add	r0, pc, r0
   306b8:	str	r0, [sp, #8]
   306bc:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   306c0:	ldr	r0, [pc, #452]	; 3088c <flatcc_verify_error_string@@Base+0x378>
   306c4:	add	r0, pc, r0
   306c8:	str	r0, [sp, #8]
   306cc:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   306d0:	ldr	r0, [pc, #432]	; 30888 <flatcc_verify_error_string@@Base+0x374>
   306d4:	add	r0, pc, r0
   306d8:	str	r0, [sp, #8]
   306dc:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   306e0:	ldr	r0, [pc, #412]	; 30884 <flatcc_verify_error_string@@Base+0x370>
   306e4:	add	r0, pc, r0
   306e8:	str	r0, [sp, #8]
   306ec:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   306f0:	ldr	r0, [pc, #392]	; 30880 <flatcc_verify_error_string@@Base+0x36c>
   306f4:	add	r0, pc, r0
   306f8:	str	r0, [sp, #8]
   306fc:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30700:	ldr	r0, [pc, #372]	; 3087c <flatcc_verify_error_string@@Base+0x368>
   30704:	add	r0, pc, r0
   30708:	str	r0, [sp, #8]
   3070c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30710:	ldr	r0, [pc, #352]	; 30878 <flatcc_verify_error_string@@Base+0x364>
   30714:	add	r0, pc, r0
   30718:	str	r0, [sp, #8]
   3071c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30720:	ldr	r0, [pc, #332]	; 30874 <flatcc_verify_error_string@@Base+0x360>
   30724:	add	r0, pc, r0
   30728:	str	r0, [sp, #8]
   3072c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30730:	ldr	r0, [pc, #312]	; 30870 <flatcc_verify_error_string@@Base+0x35c>
   30734:	add	r0, pc, r0
   30738:	str	r0, [sp, #8]
   3073c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30740:	ldr	r0, [pc, #292]	; 3086c <flatcc_verify_error_string@@Base+0x358>
   30744:	add	r0, pc, r0
   30748:	str	r0, [sp, #8]
   3074c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30750:	ldr	r0, [pc, #272]	; 30868 <flatcc_verify_error_string@@Base+0x354>
   30754:	add	r0, pc, r0
   30758:	str	r0, [sp, #8]
   3075c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30760:	ldr	r0, [pc, #252]	; 30864 <flatcc_verify_error_string@@Base+0x350>
   30764:	add	r0, pc, r0
   30768:	str	r0, [sp, #8]
   3076c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30770:	ldr	r0, [pc, #232]	; 30860 <flatcc_verify_error_string@@Base+0x34c>
   30774:	add	r0, pc, r0
   30778:	str	r0, [sp, #8]
   3077c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30780:	ldr	r0, [pc, #212]	; 3085c <flatcc_verify_error_string@@Base+0x348>
   30784:	add	r0, pc, r0
   30788:	str	r0, [sp, #8]
   3078c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30790:	ldr	r0, [pc, #192]	; 30858 <flatcc_verify_error_string@@Base+0x344>
   30794:	add	r0, pc, r0
   30798:	str	r0, [sp, #8]
   3079c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   307a0:	ldr	r0, [pc, #172]	; 30854 <flatcc_verify_error_string@@Base+0x340>
   307a4:	add	r0, pc, r0
   307a8:	str	r0, [sp, #8]
   307ac:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   307b0:	ldr	r0, [pc, #152]	; 30850 <flatcc_verify_error_string@@Base+0x33c>
   307b4:	add	r0, pc, r0
   307b8:	str	r0, [sp, #8]
   307bc:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   307c0:	ldr	r0, [pc, #132]	; 3084c <flatcc_verify_error_string@@Base+0x338>
   307c4:	add	r0, pc, r0
   307c8:	str	r0, [sp, #8]
   307cc:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   307d0:	ldr	r0, [pc, #112]	; 30848 <flatcc_verify_error_string@@Base+0x334>
   307d4:	add	r0, pc, r0
   307d8:	str	r0, [sp, #8]
   307dc:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   307e0:	ldr	r0, [pc, #92]	; 30844 <flatcc_verify_error_string@@Base+0x330>
   307e4:	add	r0, pc, r0
   307e8:	str	r0, [sp, #8]
   307ec:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   307f0:	ldr	r0, [pc, #72]	; 30840 <flatcc_verify_error_string@@Base+0x32c>
   307f4:	add	r0, pc, r0
   307f8:	str	r0, [sp, #8]
   307fc:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30800:	ldr	r0, [pc, #52]	; 3083c <flatcc_verify_error_string@@Base+0x328>
   30804:	add	r0, pc, r0
   30808:	str	r0, [sp, #8]
   3080c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30810:	ldr	r0, [pc, #32]	; 30838 <flatcc_verify_error_string@@Base+0x324>
   30814:	add	r0, pc, r0
   30818:	str	r0, [sp, #8]
   3081c:	b	3082c <flatcc_verify_error_string@@Base+0x318>
   30820:	ldr	r0, [pc, #164]	; 308cc <flatcc_verify_error_string@@Base+0x3b8>
   30824:	add	r0, pc, r0
   30828:	str	r0, [sp, #8]
   3082c:	ldr	r0, [sp, #8]
   30830:	add	sp, sp, #12
   30834:	bx	lr
   30838:	andeq	fp, r1, fp, asr lr
   3083c:	andeq	fp, r1, r1, asr lr
   30840:	andeq	fp, r1, sp, lsr #28
   30844:	andeq	fp, r1, r8, lsl lr
   30848:	andeq	fp, r1, r1, lsl #28
   3084c:	strdeq	fp, [r1], -ip
   30850:	andeq	fp, r1, r6, ror #27
   30854:	andeq	fp, r1, lr, asr #27
   30858:	andeq	fp, r1, r6, asr #27
   3085c:			; <UNDEFINED> instruction: 0x0001bdbb
   30860:			; <UNDEFINED> instruction: 0x0001bdb7
   30864:	muleq	r1, r8, sp
   30868:	andeq	fp, r1, pc, ror sp
   3086c:	andeq	fp, r1, r6, ror #26
   30870:	andeq	fp, r1, r3, asr #26
   30874:	andeq	fp, r1, r7, lsr #26
   30878:	andeq	fp, r1, pc, lsl sp
   3087c:	andeq	fp, r1, pc, ror #28
   30880:	andeq	fp, r1, fp, lsr #26
   30884:	andeq	fp, r1, r3, lsl sp
   30888:	strdeq	fp, [r1], -fp	; <UNPREDICTABLE>
   3088c:	andeq	fp, r1, r4, ror #25
   30890:	ldrdeq	fp, [r1], -sl
   30894:	ldrdeq	fp, [r1], -r1
   30898:	andeq	fp, r1, r9, asr #25
   3089c:	andeq	fp, r1, r8, asr #25
   308a0:	andeq	fp, r1, r3, asr #25
   308a4:			; <UNDEFINED> instruction: 0x0001bcbf
   308a8:			; <UNDEFINED> instruction: 0x0001bcbb
   308ac:			; <UNDEFINED> instruction: 0x0001bcb0
   308b0:	andeq	fp, r1, r1, lsr #25
   308b4:	andeq	fp, r1, lr, lsl #25
   308b8:	andeq	fp, r1, r7, lsl #25
   308bc:	andeq	fp, r1, sp, ror ip
   308c0:	andeq	fp, r1, r9, ror ip
   308c4:	andeq	fp, r1, r1, ror ip
   308c8:	andeq	fp, r1, lr, ror ip
   308cc:	andeq	fp, r1, r9, asr lr

000308d0 <flatcc_verify_field@@Base>:
   308d0:	push	{fp, lr}
   308d4:	mov	fp, sp
   308d8:	sub	sp, sp, #24
   308dc:	str	r0, [fp, #-8]
   308e0:	strh	r1, [fp, #-10]
   308e4:	str	r2, [sp, #8]
   308e8:	strh	r3, [sp, #6]
   308ec:	ldr	r0, [fp, #-8]
   308f0:	ldrh	r1, [fp, #-10]
   308f4:	ldr	r3, [sp, #8]
   308f8:	uxth	r1, r1
   308fc:	movw	r2, #0
   30900:	ldrh	ip, [sp, #6]
   30904:	str	ip, [sp]
   30908:	bl	30950 <flatcc_verify_field@@Base+0x80>
   3090c:	cmp	r0, #0
   30910:	beq	3093c <flatcc_verify_field@@Base+0x6c>
   30914:	ldr	r0, [fp, #-8]
   30918:	ldrh	r1, [fp, #-10]
   3091c:	ldr	r3, [sp, #8]
   30920:	uxth	r1, r1
   30924:	movw	r2, #0
   30928:	ldrh	ip, [sp, #6]
   3092c:	str	ip, [sp]
   30930:	bl	30950 <flatcc_verify_field@@Base+0x80>
   30934:	str	r0, [fp, #-4]
   30938:	b	30944 <flatcc_verify_field@@Base+0x74>
   3093c:	movw	r0, #0
   30940:	str	r0, [fp, #-4]
   30944:	ldr	r0, [fp, #-4]
   30948:	mov	sp, fp
   3094c:	pop	{fp, pc}
   30950:	push	{fp, lr}
   30954:	mov	fp, sp
   30958:	sub	sp, sp, #56	; 0x38
   3095c:	ldr	ip, [fp, #8]
   30960:	str	r0, [fp, #-8]
   30964:	strh	r1, [fp, #-10]
   30968:	str	r2, [fp, #-16]
   3096c:	str	r3, [fp, #-20]	; 0xffffffec
   30970:	strh	ip, [fp, #-22]	; 0xffffffea
   30974:	ldr	r0, [fp, #-8]
   30978:	ldr	r0, [r0]
   3097c:	str	r0, [sp, #16]
   30980:	ldr	r0, [fp, #-8]
   30984:	ldrh	r1, [fp, #-10]
   30988:	bl	327c8 <flatcc_verify_union_field@@Base+0x290>
   3098c:	strh	r0, [sp, #22]
   30990:	ldrsh	r0, [sp, #22]
   30994:	cmp	r0, #0
   30998:	bne	309e8 <flatcc_verify_field@@Base+0x118>
   3099c:	b	309a0 <flatcc_verify_field@@Base+0xd0>
   309a0:	ldr	r0, [fp, #-16]
   309a4:	cmp	r0, #0
   309a8:	movw	r0, #0
   309ac:	movne	r0, #1
   309b0:	mvn	r1, #0
   309b4:	eor	r0, r0, r1
   309b8:	and	r0, r0, #1
   309bc:	str	r0, [sp, #12]
   309c0:	ldr	r0, [sp, #12]
   309c4:	cmp	r0, #0
   309c8:	bne	309d8 <flatcc_verify_field@@Base+0x108>
   309cc:	movw	r0, #4
   309d0:	str	r0, [fp, #-4]
   309d4:	b	30ad0 <flatcc_verify_field@@Base+0x200>
   309d8:	b	309dc <flatcc_verify_field@@Base+0x10c>
   309dc:	movw	r0, #0
   309e0:	str	r0, [fp, #-4]
   309e4:	b	30ad0 <flatcc_verify_field@@Base+0x200>
   309e8:	ldrh	r0, [sp, #22]
   309ec:	str	r0, [sp, #28]
   309f0:	ldr	r0, [sp, #28]
   309f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   309f8:	add	r0, r0, r1
   309fc:	str	r0, [sp, #24]
   30a00:	ldr	r0, [sp, #24]
   30a04:	ldr	r1, [fp, #-8]
   30a08:	ldrh	r1, [r1, #20]
   30a0c:	cmp	r0, r1
   30a10:	movw	r0, #0
   30a14:	movls	r0, #1
   30a18:	and	r0, r0, #1
   30a1c:	str	r0, [sp, #8]
   30a20:	ldr	r0, [sp, #8]
   30a24:	cmp	r0, #0
   30a28:	bne	30a38 <flatcc_verify_field@@Base+0x168>
   30a2c:	movw	r0, #13
   30a30:	str	r0, [fp, #-4]
   30a34:	b	30ad0 <flatcc_verify_field@@Base+0x200>
   30a38:	b	30a3c <flatcc_verify_field@@Base+0x16c>
   30a3c:	b	30a40 <flatcc_verify_field@@Base+0x170>
   30a40:	movw	r0, #1
   30a44:	str	r0, [sp, #4]
   30a48:	ldr	r0, [sp, #4]
   30a4c:	cmp	r0, #0
   30a50:	bne	30a60 <flatcc_verify_field@@Base+0x190>
   30a54:	movw	r0, #14
   30a58:	str	r0, [fp, #-4]
   30a5c:	b	30ad0 <flatcc_verify_field@@Base+0x200>
   30a60:	b	30a64 <flatcc_verify_field@@Base+0x194>
   30a64:	ldr	r0, [fp, #-8]
   30a68:	ldr	r0, [r0, #16]
   30a6c:	ldr	r1, [sp, #16]
   30a70:	add	r0, r0, r1
   30a74:	ldr	r1, [sp, #28]
   30a78:	add	r0, r1, r0
   30a7c:	str	r0, [sp, #28]
   30a80:	ldr	r0, [sp, #28]
   30a84:	ldrh	r1, [fp, #-22]	; 0xffffffea
   30a88:	sub	r1, r1, #1
   30a8c:	and	r0, r0, r1
   30a90:	cmp	r0, #0
   30a94:	movw	r0, #0
   30a98:	movne	r0, #1
   30a9c:	mvn	r1, #0
   30aa0:	eor	r0, r0, r1
   30aa4:	and	r0, r0, #1
   30aa8:	str	r0, [sp]
   30aac:	ldr	r0, [sp]
   30ab0:	cmp	r0, #0
   30ab4:	bne	30ac4 <flatcc_verify_field@@Base+0x1f4>
   30ab8:	movw	r0, #12
   30abc:	str	r0, [fp, #-4]
   30ac0:	b	30ad0 <flatcc_verify_field@@Base+0x200>
   30ac4:	b	30ac8 <flatcc_verify_field@@Base+0x1f8>
   30ac8:	movw	r0, #0
   30acc:	str	r0, [fp, #-4]
   30ad0:	ldr	r0, [fp, #-4]
   30ad4:	mov	sp, fp
   30ad8:	pop	{fp, pc}

00030adc <flatcc_verify_string_field@@Base>:
   30adc:	push	{fp, lr}
   30ae0:	mov	fp, sp
   30ae4:	sub	sp, sp, #40	; 0x28
   30ae8:	str	r0, [fp, #-8]
   30aec:	strh	r1, [fp, #-10]
   30af0:	str	r2, [fp, #-16]
   30af4:	ldr	r0, [fp, #-8]
   30af8:	ldrh	r1, [fp, #-10]
   30afc:	ldr	r2, [fp, #-16]
   30b00:	uxth	r1, r1
   30b04:	add	r3, sp, #20
   30b08:	bl	30b9c <flatcc_verify_string_field@@Base+0xc0>
   30b0c:	str	r0, [sp, #16]
   30b10:	ldr	r0, [sp, #16]
   30b14:	cmp	r0, #0
   30b18:	bne	30b28 <flatcc_verify_string_field@@Base+0x4c>
   30b1c:	ldr	r0, [sp, #20]
   30b20:	cmp	r0, #0
   30b24:	bne	30b34 <flatcc_verify_string_field@@Base+0x58>
   30b28:	ldr	r0, [sp, #16]
   30b2c:	str	r0, [fp, #-4]
   30b30:	b	30b90 <flatcc_verify_string_field@@Base+0xb4>
   30b34:	b	30b38 <flatcc_verify_string_field@@Base+0x5c>
   30b38:	ldr	r0, [fp, #-8]
   30b3c:	ldr	r0, [r0]
   30b40:	ldr	r1, [fp, #-8]
   30b44:	ldr	r1, [r1, #4]
   30b48:	ldr	r2, [sp, #20]
   30b4c:	ldr	r3, [fp, #-8]
   30b50:	ldr	r3, [r3]
   30b54:	ldr	ip, [sp, #20]
   30b58:	str	r0, [sp, #12]
   30b5c:	mov	r0, r3
   30b60:	str	r1, [sp, #8]
   30b64:	mov	r1, ip
   30b68:	str	r2, [sp, #4]
   30b6c:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   30b70:	ldr	r1, [sp, #12]
   30b74:	str	r0, [sp]
   30b78:	mov	r0, r1
   30b7c:	ldr	r1, [sp, #8]
   30b80:	ldr	r2, [sp, #4]
   30b84:	ldr	r3, [sp]
   30b88:	bl	30cf0 <flatcc_verify_string_field@@Base+0x214>
   30b8c:	str	r0, [fp, #-4]
   30b90:	ldr	r0, [fp, #-4]
   30b94:	mov	sp, fp
   30b98:	pop	{fp, pc}
   30b9c:	push	{fp, lr}
   30ba0:	mov	fp, sp
   30ba4:	sub	sp, sp, #48	; 0x30
   30ba8:	str	r0, [fp, #-8]
   30bac:	strh	r1, [fp, #-10]
   30bb0:	str	r2, [fp, #-16]
   30bb4:	str	r3, [fp, #-20]	; 0xffffffec
   30bb8:	ldr	r0, [fp, #-8]
   30bbc:	ldrh	r1, [fp, #-10]
   30bc0:	bl	327c8 <flatcc_verify_union_field@@Base+0x290>
   30bc4:	strh	r0, [sp, #18]
   30bc8:	ldrsh	r0, [sp, #18]
   30bcc:	cmp	r0, #0
   30bd0:	bne	30c04 <flatcc_verify_string_field@@Base+0x128>
   30bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   30bd8:	movw	r1, #0
   30bdc:	str	r1, [r0]
   30be0:	ldr	r0, [fp, #-16]
   30be4:	cmp	r0, #0
   30be8:	beq	30bf8 <flatcc_verify_string_field@@Base+0x11c>
   30bec:	movw	r0, #4
   30bf0:	str	r0, [fp, #-4]
   30bf4:	b	30ce4 <flatcc_verify_string_field@@Base+0x208>
   30bf8:	movw	r0, #0
   30bfc:	str	r0, [fp, #-4]
   30c00:	b	30ce4 <flatcc_verify_string_field@@Base+0x208>
   30c04:	ldrh	r0, [sp, #18]
   30c08:	str	r0, [sp, #24]
   30c0c:	ldr	r0, [sp, #24]
   30c10:	add	r0, r0, #4
   30c14:	str	r0, [sp, #20]
   30c18:	ldr	r0, [sp, #20]
   30c1c:	ldr	r1, [fp, #-8]
   30c20:	ldrh	r1, [r1, #20]
   30c24:	cmp	r0, r1
   30c28:	movw	r0, #0
   30c2c:	movls	r0, #1
   30c30:	and	r0, r0, #1
   30c34:	str	r0, [sp, #12]
   30c38:	ldr	r0, [sp, #12]
   30c3c:	cmp	r0, #0
   30c40:	bne	30c50 <flatcc_verify_string_field@@Base+0x174>
   30c44:	movw	r0, #13
   30c48:	str	r0, [fp, #-4]
   30c4c:	b	30ce4 <flatcc_verify_string_field@@Base+0x208>
   30c50:	b	30c54 <flatcc_verify_string_field@@Base+0x178>
   30c54:	b	30c58 <flatcc_verify_string_field@@Base+0x17c>
   30c58:	movw	r0, #1
   30c5c:	str	r0, [sp, #8]
   30c60:	ldr	r0, [sp, #8]
   30c64:	cmp	r0, #0
   30c68:	bne	30c78 <flatcc_verify_string_field@@Base+0x19c>
   30c6c:	movw	r0, #14
   30c70:	str	r0, [fp, #-4]
   30c74:	b	30ce4 <flatcc_verify_string_field@@Base+0x208>
   30c78:	b	30c7c <flatcc_verify_string_field@@Base+0x1a0>
   30c7c:	ldr	r0, [fp, #-8]
   30c80:	ldr	r0, [r0, #16]
   30c84:	ldr	r1, [sp, #24]
   30c88:	add	r0, r1, r0
   30c8c:	str	r0, [sp, #24]
   30c90:	ldr	r0, [sp, #24]
   30c94:	and	r0, r0, #3
   30c98:	cmp	r0, #0
   30c9c:	movw	r0, #0
   30ca0:	movne	r0, #1
   30ca4:	mvn	r1, #0
   30ca8:	eor	r0, r0, r1
   30cac:	and	r0, r0, #1
   30cb0:	str	r0, [sp, #4]
   30cb4:	ldr	r0, [sp, #4]
   30cb8:	cmp	r0, #0
   30cbc:	bne	30ccc <flatcc_verify_string_field@@Base+0x1f0>
   30cc0:	movw	r0, #12
   30cc4:	str	r0, [fp, #-4]
   30cc8:	b	30ce4 <flatcc_verify_string_field@@Base+0x208>
   30ccc:	b	30cd0 <flatcc_verify_string_field@@Base+0x1f4>
   30cd0:	ldr	r0, [sp, #24]
   30cd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   30cd8:	str	r0, [r1]
   30cdc:	movw	r0, #0
   30ce0:	str	r0, [fp, #-4]
   30ce4:	ldr	r0, [fp, #-4]
   30ce8:	mov	sp, fp
   30cec:	pop	{fp, pc}
   30cf0:	push	{fp, lr}
   30cf4:	mov	fp, sp
   30cf8:	sub	sp, sp, #40	; 0x28
   30cfc:	str	r0, [fp, #-8]
   30d00:	str	r1, [fp, #-12]
   30d04:	str	r2, [fp, #-16]
   30d08:	str	r3, [sp, #20]
   30d0c:	ldr	r0, [fp, #-12]
   30d10:	ldr	r1, [fp, #-16]
   30d14:	ldr	r2, [sp, #20]
   30d18:	bl	32d9c <flatcc_verify_union_vector_field@@Base+0x56c>
   30d1c:	str	r0, [sp, #12]
   30d20:	ldr	r0, [sp, #12]
   30d24:	cmp	r0, #0
   30d28:	bne	30d38 <flatcc_verify_string_field@@Base+0x25c>
   30d2c:	movw	r0, #17
   30d30:	str	r0, [fp, #-4]
   30d34:	b	30e00 <flatcc_verify_string_field@@Base+0x324>
   30d38:	b	30d3c <flatcc_verify_string_field@@Base+0x260>
   30d3c:	ldr	r0, [sp, #20]
   30d40:	ldr	r1, [fp, #-16]
   30d44:	add	r0, r1, r0
   30d48:	str	r0, [fp, #-16]
   30d4c:	ldr	r0, [fp, #-8]
   30d50:	ldr	r1, [fp, #-16]
   30d54:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   30d58:	str	r0, [sp, #16]
   30d5c:	ldr	r0, [fp, #-16]
   30d60:	add	r0, r0, #4
   30d64:	str	r0, [fp, #-16]
   30d68:	ldr	r0, [fp, #-12]
   30d6c:	ldr	r1, [fp, #-16]
   30d70:	sub	r0, r0, r1
   30d74:	ldr	r1, [sp, #16]
   30d78:	add	r1, r1, #1
   30d7c:	cmp	r0, r1
   30d80:	movw	r0, #0
   30d84:	movcs	r0, #1
   30d88:	and	r0, r0, #1
   30d8c:	str	r0, [sp, #8]
   30d90:	ldr	r0, [sp, #8]
   30d94:	cmp	r0, #0
   30d98:	bne	30da8 <flatcc_verify_string_field@@Base+0x2cc>
   30d9c:	movw	r0, #8
   30da0:	str	r0, [fp, #-4]
   30da4:	b	30e00 <flatcc_verify_string_field@@Base+0x324>
   30da8:	b	30dac <flatcc_verify_string_field@@Base+0x2d0>
   30dac:	b	30db0 <flatcc_verify_string_field@@Base+0x2d4>
   30db0:	ldr	r0, [fp, #-8]
   30db4:	ldr	r1, [fp, #-16]
   30db8:	add	r0, r0, r1
   30dbc:	ldr	r1, [sp, #16]
   30dc0:	add	r0, r0, r1
   30dc4:	ldrb	r0, [r0]
   30dc8:	cmp	r0, #0
   30dcc:	movw	r0, #0
   30dd0:	moveq	r0, #1
   30dd4:	and	r0, r0, #1
   30dd8:	str	r0, [sp, #4]
   30ddc:	ldr	r0, [sp, #4]
   30de0:	cmp	r0, #0
   30de4:	bne	30df4 <flatcc_verify_string_field@@Base+0x318>
   30de8:	movw	r0, #7
   30dec:	str	r0, [fp, #-4]
   30df0:	b	30e00 <flatcc_verify_string_field@@Base+0x324>
   30df4:	b	30df8 <flatcc_verify_string_field@@Base+0x31c>
   30df8:	movw	r0, #0
   30dfc:	str	r0, [fp, #-4]
   30e00:	ldr	r0, [fp, #-4]
   30e04:	mov	sp, fp
   30e08:	pop	{fp, pc}
   30e0c:	push	{fp, lr}
   30e10:	mov	fp, sp
   30e14:	sub	sp, sp, #8
   30e18:	str	r0, [sp, #4]
   30e1c:	str	r1, [sp]
   30e20:	ldr	r0, [sp, #4]
   30e24:	ldr	r1, [sp]
   30e28:	add	r0, r0, r1
   30e2c:	bl	32e20 <flatcc_verify_union_vector_field@@Base+0x5f0>
   30e30:	mov	sp, fp
   30e34:	pop	{fp, pc}

00030e38 <flatcc_verify_vector_field@@Base>:
   30e38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30e3c:	add	fp, sp, #24
   30e40:	sub	sp, sp, #72	; 0x48
   30e44:	ldr	ip, [fp, #12]
   30e48:	ldr	lr, [fp, #8]
   30e4c:	str	r0, [fp, #-32]	; 0xffffffe0
   30e50:	strh	r1, [fp, #-34]	; 0xffffffde
   30e54:	str	r2, [fp, #-40]	; 0xffffffd8
   30e58:	str	r3, [fp, #-44]	; 0xffffffd4
   30e5c:	strh	lr, [fp, #-46]	; 0xffffffd2
   30e60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30e64:	ldrh	r1, [fp, #-34]	; 0xffffffde
   30e68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   30e6c:	uxth	r1, r1
   30e70:	add	r3, sp, #44	; 0x2c
   30e74:	bl	30b9c <flatcc_verify_string_field@@Base+0xc0>
   30e78:	str	r0, [sp, #40]	; 0x28
   30e7c:	ldr	r0, [sp, #40]	; 0x28
   30e80:	cmp	r0, #0
   30e84:	bne	30e94 <flatcc_verify_vector_field@@Base+0x5c>
   30e88:	ldr	r0, [sp, #44]	; 0x2c
   30e8c:	cmp	r0, #0
   30e90:	bne	30ea0 <flatcc_verify_vector_field@@Base+0x68>
   30e94:	ldr	r0, [sp, #40]	; 0x28
   30e98:	str	r0, [fp, #-28]	; 0xffffffe4
   30e9c:	b	30f3c <flatcc_verify_vector_field@@Base+0x104>
   30ea0:	b	30ea4 <flatcc_verify_vector_field@@Base+0x6c>
   30ea4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30ea8:	ldr	r0, [r0]
   30eac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30eb0:	ldr	r1, [r1, #4]
   30eb4:	ldr	r2, [sp, #44]	; 0x2c
   30eb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30ebc:	ldr	r3, [r3]
   30ec0:	ldr	ip, [sp, #44]	; 0x2c
   30ec4:	str	r0, [sp, #36]	; 0x24
   30ec8:	mov	r0, r3
   30ecc:	str	r1, [sp, #32]
   30ed0:	mov	r1, ip
   30ed4:	str	r2, [sp, #28]
   30ed8:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   30edc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   30ee0:	ldrh	r2, [fp, #-46]	; 0xffffffd2
   30ee4:	ldr	r3, [fp, #12]
   30ee8:	ldr	ip, [sp, #36]	; 0x24
   30eec:	str	r0, [sp, #24]
   30ef0:	mov	r0, ip
   30ef4:	ldr	lr, [sp, #32]
   30ef8:	str	r1, [sp, #20]
   30efc:	mov	r1, lr
   30f00:	ldr	r4, [sp, #28]
   30f04:	str	r2, [sp, #16]
   30f08:	mov	r2, r4
   30f0c:	ldr	r5, [sp, #24]
   30f10:	str	r3, [sp, #12]
   30f14:	mov	r3, r5
   30f18:	ldr	r6, [sp, #20]
   30f1c:	str	r6, [sp]
   30f20:	ldr	r7, [sp, #16]
   30f24:	uxth	r8, r7
   30f28:	str	r8, [sp, #4]
   30f2c:	ldr	r8, [sp, #12]
   30f30:	str	r8, [sp, #8]
   30f34:	bl	30f48 <flatcc_verify_vector_field@@Base+0x110>
   30f38:	str	r0, [fp, #-28]	; 0xffffffe4
   30f3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30f40:	sub	sp, fp, #24
   30f44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30f48:	push	{r4, sl, fp, lr}
   30f4c:	add	fp, sp, #8
   30f50:	sub	sp, sp, #40	; 0x28
   30f54:	ldr	ip, [fp, #16]
   30f58:	ldr	lr, [fp, #12]
   30f5c:	ldr	r4, [fp, #8]
   30f60:	str	r0, [fp, #-16]
   30f64:	str	r1, [fp, #-20]	; 0xffffffec
   30f68:	str	r2, [sp, #24]
   30f6c:	str	r3, [sp, #20]
   30f70:	strh	lr, [sp, #18]
   30f74:	ldr	r0, [fp, #-20]	; 0xffffffec
   30f78:	ldr	r1, [sp, #24]
   30f7c:	ldr	r2, [sp, #20]
   30f80:	ldrh	r3, [sp, #18]
   30f84:	bl	32e58 <flatcc_verify_union_vector_field@@Base+0x628>
   30f88:	str	r0, [sp, #8]
   30f8c:	ldr	r0, [sp, #8]
   30f90:	cmp	r0, #0
   30f94:	bne	30fa4 <flatcc_verify_vector_field@@Base+0x16c>
   30f98:	movw	r0, #16
   30f9c:	str	r0, [fp, #-12]
   30fa0:	b	31060 <flatcc_verify_vector_field@@Base+0x228>
   30fa4:	b	30fa8 <flatcc_verify_vector_field@@Base+0x170>
   30fa8:	ldr	r0, [sp, #20]
   30fac:	ldr	r1, [sp, #24]
   30fb0:	add	r0, r1, r0
   30fb4:	str	r0, [sp, #24]
   30fb8:	ldr	r0, [fp, #-16]
   30fbc:	ldr	r1, [sp, #24]
   30fc0:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   30fc4:	str	r0, [sp, #12]
   30fc8:	ldr	r0, [sp, #24]
   30fcc:	add	r0, r0, #4
   30fd0:	str	r0, [sp, #24]
   30fd4:	ldr	r0, [sp, #12]
   30fd8:	ldr	r1, [fp, #16]
   30fdc:	cmp	r0, r1
   30fe0:	movw	r0, #0
   30fe4:	movls	r0, #1
   30fe8:	and	r0, r0, #1
   30fec:	str	r0, [sp, #4]
   30ff0:	ldr	r0, [sp, #4]
   30ff4:	cmp	r0, #0
   30ff8:	bne	31008 <flatcc_verify_vector_field@@Base+0x1d0>
   30ffc:	movw	r0, #25
   31000:	str	r0, [fp, #-12]
   31004:	b	31060 <flatcc_verify_vector_field@@Base+0x228>
   31008:	b	3100c <flatcc_verify_vector_field@@Base+0x1d4>
   3100c:	b	31010 <flatcc_verify_vector_field@@Base+0x1d8>
   31010:	ldr	r0, [fp, #-20]	; 0xffffffec
   31014:	ldr	r1, [sp, #24]
   31018:	sub	r0, r0, r1
   3101c:	ldr	r1, [sp, #12]
   31020:	ldr	r2, [fp, #8]
   31024:	mul	r1, r1, r2
   31028:	cmp	r0, r1
   3102c:	movw	r0, #0
   31030:	movcs	r0, #1
   31034:	and	r0, r0, #1
   31038:	str	r0, [sp]
   3103c:	ldr	r0, [sp]
   31040:	cmp	r0, #0
   31044:	bne	31054 <flatcc_verify_vector_field@@Base+0x21c>
   31048:	movw	r0, #26
   3104c:	str	r0, [fp, #-12]
   31050:	b	31060 <flatcc_verify_vector_field@@Base+0x228>
   31054:	b	31058 <flatcc_verify_vector_field@@Base+0x220>
   31058:	movw	r0, #0
   3105c:	str	r0, [fp, #-12]
   31060:	ldr	r0, [fp, #-12]
   31064:	sub	sp, fp, #8
   31068:	pop	{r4, sl, fp, pc}

0003106c <flatcc_verify_string_vector_field@@Base>:
   3106c:	push	{fp, lr}
   31070:	mov	fp, sp
   31074:	sub	sp, sp, #40	; 0x28
   31078:	str	r0, [fp, #-8]
   3107c:	strh	r1, [fp, #-10]
   31080:	str	r2, [fp, #-16]
   31084:	ldr	r0, [fp, #-8]
   31088:	ldrh	r1, [fp, #-10]
   3108c:	ldr	r2, [fp, #-16]
   31090:	uxth	r1, r1
   31094:	add	r3, sp, #20
   31098:	bl	30b9c <flatcc_verify_string_field@@Base+0xc0>
   3109c:	str	r0, [sp, #16]
   310a0:	ldr	r0, [sp, #16]
   310a4:	cmp	r0, #0
   310a8:	bne	310b8 <flatcc_verify_string_vector_field@@Base+0x4c>
   310ac:	ldr	r0, [sp, #20]
   310b0:	cmp	r0, #0
   310b4:	bne	310c4 <flatcc_verify_string_vector_field@@Base+0x58>
   310b8:	ldr	r0, [sp, #16]
   310bc:	str	r0, [fp, #-4]
   310c0:	b	31120 <flatcc_verify_string_vector_field@@Base+0xb4>
   310c4:	b	310c8 <flatcc_verify_string_vector_field@@Base+0x5c>
   310c8:	ldr	r0, [fp, #-8]
   310cc:	ldr	r0, [r0]
   310d0:	ldr	r1, [fp, #-8]
   310d4:	ldr	r1, [r1, #4]
   310d8:	ldr	r2, [sp, #20]
   310dc:	ldr	r3, [fp, #-8]
   310e0:	ldr	r3, [r3]
   310e4:	ldr	ip, [sp, #20]
   310e8:	str	r0, [sp, #12]
   310ec:	mov	r0, r3
   310f0:	str	r1, [sp, #8]
   310f4:	mov	r1, ip
   310f8:	str	r2, [sp, #4]
   310fc:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   31100:	ldr	r1, [sp, #12]
   31104:	str	r0, [sp]
   31108:	mov	r0, r1
   3110c:	ldr	r1, [sp, #8]
   31110:	ldr	r2, [sp, #4]
   31114:	ldr	r3, [sp]
   31118:	bl	3112c <flatcc_verify_string_vector_field@@Base+0xc0>
   3111c:	str	r0, [fp, #-4]
   31120:	ldr	r0, [fp, #-4]
   31124:	mov	sp, fp
   31128:	pop	{fp, pc}
   3112c:	push	{fp, lr}
   31130:	mov	fp, sp
   31134:	sub	sp, sp, #80	; 0x50
   31138:	ldr	ip, [pc, #424]	; 312e8 <flatcc_verify_string_vector_field@@Base+0x27c>
   3113c:	str	r0, [fp, #-8]
   31140:	str	r1, [fp, #-12]
   31144:	str	r2, [fp, #-16]
   31148:	str	r3, [fp, #-20]	; 0xffffffec
   3114c:	ldr	r0, [fp, #-8]
   31150:	ldr	r1, [fp, #-12]
   31154:	ldr	r2, [fp, #-16]
   31158:	ldr	r3, [fp, #-20]	; 0xffffffec
   3115c:	movw	lr, #4
   31160:	str	lr, [sp]
   31164:	movw	lr, #4
   31168:	uxth	lr, lr
   3116c:	str	lr, [sp, #4]
   31170:	str	ip, [sp, #8]
   31174:	bl	30f48 <flatcc_verify_vector_field@@Base+0x110>
   31178:	cmp	r0, #0
   3117c:	beq	311d0 <flatcc_verify_string_vector_field@@Base+0x164>
   31180:	ldr	r0, [pc, #352]	; 312e8 <flatcc_verify_string_vector_field@@Base+0x27c>
   31184:	ldr	r1, [fp, #-8]
   31188:	ldr	r2, [fp, #-12]
   3118c:	ldr	r3, [fp, #-16]
   31190:	ldr	ip, [fp, #-20]	; 0xffffffec
   31194:	str	r0, [fp, #-32]	; 0xffffffe0
   31198:	mov	r0, r1
   3119c:	mov	r1, r2
   311a0:	mov	r2, r3
   311a4:	mov	r3, ip
   311a8:	movw	ip, #4
   311ac:	str	ip, [sp]
   311b0:	movw	ip, #4
   311b4:	uxth	ip, ip
   311b8:	str	ip, [sp, #4]
   311bc:	ldr	ip, [fp, #-32]	; 0xffffffe0
   311c0:	str	ip, [sp, #8]
   311c4:	bl	30f48 <flatcc_verify_vector_field@@Base+0x110>
   311c8:	str	r0, [fp, #-4]
   311cc:	b	312dc <flatcc_verify_string_vector_field@@Base+0x270>
   311d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   311d4:	ldr	r1, [fp, #-16]
   311d8:	add	r0, r1, r0
   311dc:	str	r0, [fp, #-16]
   311e0:	ldr	r0, [fp, #-8]
   311e4:	ldr	r1, [fp, #-16]
   311e8:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   311ec:	str	r0, [fp, #-28]	; 0xffffffe4
   311f0:	ldr	r0, [fp, #-16]
   311f4:	add	r0, r0, #4
   311f8:	str	r0, [fp, #-16]
   311fc:	movw	r0, #0
   31200:	str	r0, [fp, #-24]	; 0xffffffe8
   31204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31208:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3120c:	cmp	r0, r1
   31210:	bcs	312d4 <flatcc_verify_string_vector_field@@Base+0x268>
   31214:	ldr	r0, [fp, #-8]
   31218:	ldr	r1, [fp, #-12]
   3121c:	ldr	r2, [fp, #-16]
   31220:	ldr	r3, [fp, #-8]
   31224:	ldr	ip, [fp, #-16]
   31228:	str	r0, [fp, #-36]	; 0xffffffdc
   3122c:	mov	r0, r3
   31230:	str	r1, [sp, #40]	; 0x28
   31234:	mov	r1, ip
   31238:	str	r2, [sp, #36]	; 0x24
   3123c:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   31240:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31244:	str	r0, [sp, #32]
   31248:	mov	r0, r1
   3124c:	ldr	r1, [sp, #40]	; 0x28
   31250:	ldr	r2, [sp, #36]	; 0x24
   31254:	ldr	r3, [sp, #32]
   31258:	bl	30cf0 <flatcc_verify_string_field@@Base+0x214>
   3125c:	cmp	r0, #0
   31260:	beq	312b4 <flatcc_verify_string_vector_field@@Base+0x248>
   31264:	ldr	r0, [fp, #-8]
   31268:	ldr	r1, [fp, #-12]
   3126c:	ldr	r2, [fp, #-16]
   31270:	ldr	r3, [fp, #-8]
   31274:	ldr	ip, [fp, #-16]
   31278:	str	r0, [sp, #28]
   3127c:	mov	r0, r3
   31280:	str	r1, [sp, #24]
   31284:	mov	r1, ip
   31288:	str	r2, [sp, #20]
   3128c:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   31290:	ldr	r1, [sp, #28]
   31294:	str	r0, [sp, #16]
   31298:	mov	r0, r1
   3129c:	ldr	r1, [sp, #24]
   312a0:	ldr	r2, [sp, #20]
   312a4:	ldr	r3, [sp, #16]
   312a8:	bl	30cf0 <flatcc_verify_string_field@@Base+0x214>
   312ac:	str	r0, [fp, #-4]
   312b0:	b	312dc <flatcc_verify_string_vector_field@@Base+0x270>
   312b4:	b	312b8 <flatcc_verify_string_vector_field@@Base+0x24c>
   312b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   312bc:	add	r0, r0, #1
   312c0:	str	r0, [fp, #-24]	; 0xffffffe8
   312c4:	ldr	r0, [fp, #-16]
   312c8:	add	r0, r0, #4
   312cc:	str	r0, [fp, #-16]
   312d0:	b	31204 <flatcc_verify_string_vector_field@@Base+0x198>
   312d4:	movw	r0, #0
   312d8:	str	r0, [fp, #-4]
   312dc:	ldr	r0, [fp, #-4]
   312e0:	mov	sp, fp
   312e4:	pop	{fp, pc}
   312e8:	svccc	0x00ffffff

000312ec <flatcc_verify_table_field@@Base>:
   312ec:	push	{r4, r5, fp, lr}
   312f0:	add	fp, sp, #8
   312f4:	sub	sp, sp, #64	; 0x40
   312f8:	str	r0, [fp, #-16]
   312fc:	strh	r1, [fp, #-18]	; 0xffffffee
   31300:	str	r2, [fp, #-24]	; 0xffffffe8
   31304:	str	r3, [fp, #-28]	; 0xffffffe4
   31308:	ldr	r0, [fp, #-16]
   3130c:	ldrh	r1, [fp, #-18]	; 0xffffffee
   31310:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31314:	uxth	r1, r1
   31318:	sub	r3, fp, #32
   3131c:	bl	30b9c <flatcc_verify_string_field@@Base+0xc0>
   31320:	str	r0, [sp, #36]	; 0x24
   31324:	ldr	r0, [sp, #36]	; 0x24
   31328:	cmp	r0, #0
   3132c:	bne	3133c <flatcc_verify_table_field@@Base+0x50>
   31330:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31334:	cmp	r0, #0
   31338:	bne	31348 <flatcc_verify_table_field@@Base+0x5c>
   3133c:	ldr	r0, [sp, #36]	; 0x24
   31340:	str	r0, [fp, #-12]
   31344:	b	313d0 <flatcc_verify_table_field@@Base+0xe4>
   31348:	b	3134c <flatcc_verify_table_field@@Base+0x60>
   3134c:	ldr	r0, [fp, #-16]
   31350:	ldr	r0, [r0]
   31354:	ldr	r1, [fp, #-16]
   31358:	ldr	r1, [r1, #4]
   3135c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31360:	ldr	r3, [fp, #-16]
   31364:	ldr	r3, [r3]
   31368:	ldr	ip, [fp, #-32]	; 0xffffffe0
   3136c:	str	r0, [sp, #32]
   31370:	mov	r0, r3
   31374:	str	r1, [sp, #28]
   31378:	mov	r1, ip
   3137c:	str	r2, [sp, #24]
   31380:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   31384:	ldr	r1, [fp, #-16]
   31388:	ldr	r1, [r1, #8]
   3138c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31390:	ldr	r3, [sp, #32]
   31394:	str	r0, [sp, #20]
   31398:	mov	r0, r3
   3139c:	ldr	ip, [sp, #28]
   313a0:	str	r1, [sp, #16]
   313a4:	mov	r1, ip
   313a8:	ldr	lr, [sp, #24]
   313ac:	str	r2, [sp, #12]
   313b0:	mov	r2, lr
   313b4:	ldr	r3, [sp, #20]
   313b8:	ldr	r4, [sp, #16]
   313bc:	str	r4, [sp]
   313c0:	ldr	r5, [sp, #12]
   313c4:	str	r5, [sp, #4]
   313c8:	bl	313dc <flatcc_verify_table_field@@Base+0xf0>
   313cc:	str	r0, [fp, #-12]
   313d0:	ldr	r0, [fp, #-12]
   313d4:	sub	sp, fp, #8
   313d8:	pop	{r4, r5, fp, pc}
   313dc:	push	{fp, lr}
   313e0:	mov	fp, sp
   313e4:	sub	sp, sp, #104	; 0x68
   313e8:	ldr	ip, [fp, #12]
   313ec:	ldr	lr, [fp, #8]
   313f0:	str	r0, [fp, #-8]
   313f4:	str	r1, [fp, #-12]
   313f8:	str	r2, [fp, #-16]
   313fc:	str	r3, [fp, #-20]	; 0xffffffec
   31400:	ldr	r0, [fp, #8]
   31404:	sub	r0, r0, #1
   31408:	str	r0, [sp, #60]	; 0x3c
   3140c:	str	r0, [sp, #48]	; 0x30
   31410:	ldr	r0, [sp, #48]	; 0x30
   31414:	cmp	r0, #0
   31418:	bne	31428 <flatcc_verify_table_field@@Base+0x13c>
   3141c:	movw	r0, #3
   31420:	str	r0, [fp, #-4]
   31424:	b	316a4 <flatcc_verify_table_field@@Base+0x3b8>
   31428:	b	3142c <flatcc_verify_table_field@@Base+0x140>
   3142c:	b	31430 <flatcc_verify_table_field@@Base+0x144>
   31430:	ldr	r0, [fp, #-12]
   31434:	ldr	r1, [fp, #-16]
   31438:	ldr	r2, [fp, #-20]	; 0xffffffec
   3143c:	bl	32d9c <flatcc_verify_union_vector_field@@Base+0x56c>
   31440:	str	r0, [sp, #44]	; 0x2c
   31444:	ldr	r0, [sp, #44]	; 0x2c
   31448:	cmp	r0, #0
   3144c:	bne	3145c <flatcc_verify_table_field@@Base+0x170>
   31450:	movw	r0, #15
   31454:	str	r0, [fp, #-4]
   31458:	b	316a4 <flatcc_verify_table_field@@Base+0x3b8>
   3145c:	b	31460 <flatcc_verify_table_field@@Base+0x174>
   31460:	ldr	r0, [fp, #-16]
   31464:	ldr	r1, [fp, #-20]	; 0xffffffec
   31468:	add	r0, r0, r1
   3146c:	str	r0, [sp, #68]	; 0x44
   31470:	ldr	r0, [sp, #68]	; 0x44
   31474:	ldr	r1, [fp, #-8]
   31478:	ldr	r2, [sp, #68]	; 0x44
   3147c:	str	r0, [sp, #16]
   31480:	mov	r0, r1
   31484:	mov	r1, r2
   31488:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   3148c:	ldr	r1, [sp, #16]
   31490:	sub	r0, r1, r0
   31494:	str	r0, [fp, #-24]	; 0xffffffe8
   31498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3149c:	cmp	r0, #0
   314a0:	movw	r0, #0
   314a4:	str	r0, [sp, #12]
   314a8:	blt	314cc <flatcc_verify_table_field@@Base+0x1e0>
   314ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   314b0:	and	r0, r0, #1
   314b4:	cmp	r0, #0
   314b8:	movw	r0, #0
   314bc:	movne	r0, #1
   314c0:	mvn	r1, #0
   314c4:	eor	r0, r0, r1
   314c8:	str	r0, [sp, #12]
   314cc:	ldr	r0, [sp, #12]
   314d0:	and	r0, r0, #1
   314d4:	str	r0, [sp, #40]	; 0x28
   314d8:	ldr	r0, [sp, #40]	; 0x28
   314dc:	cmp	r0, #0
   314e0:	bne	314f0 <flatcc_verify_table_field@@Base+0x204>
   314e4:	movw	r0, #29
   314e8:	str	r0, [fp, #-4]
   314ec:	b	316a4 <flatcc_verify_table_field@@Base+0x3b8>
   314f0:	b	314f4 <flatcc_verify_table_field@@Base+0x208>
   314f4:	b	314f8 <flatcc_verify_table_field@@Base+0x20c>
   314f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   314fc:	add	r0, r0, #2
   31500:	ldr	r1, [fp, #-12]
   31504:	cmp	r0, r1
   31508:	movw	r0, #0
   3150c:	movls	r0, #1
   31510:	and	r0, r0, #1
   31514:	str	r0, [sp, #36]	; 0x24
   31518:	ldr	r0, [sp, #36]	; 0x24
   3151c:	cmp	r0, #0
   31520:	bne	31530 <flatcc_verify_table_field@@Base+0x244>
   31524:	movw	r0, #27
   31528:	str	r0, [fp, #-4]
   3152c:	b	316a4 <flatcc_verify_table_field@@Base+0x3b8>
   31530:	b	31534 <flatcc_verify_table_field@@Base+0x248>
   31534:	ldr	r0, [fp, #-8]
   31538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3153c:	bl	32f18 <flatcc_verify_union_vector_field@@Base+0x6e8>
   31540:	strh	r0, [sp, #74]	; 0x4a
   31544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31548:	ldrh	r1, [sp, #74]	; 0x4a
   3154c:	add	r0, r0, r1
   31550:	str	r0, [fp, #-28]	; 0xffffffe4
   31554:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31558:	ldr	r1, [fp, #-12]
   3155c:	cmp	r0, r1
   31560:	movw	r0, #0
   31564:	str	r0, [sp, #8]
   31568:	bhi	3158c <flatcc_verify_table_field@@Base+0x2a0>
   3156c:	ldrh	r0, [sp, #74]	; 0x4a
   31570:	and	r0, r0, #1
   31574:	cmp	r0, #0
   31578:	movw	r0, #0
   3157c:	movne	r0, #1
   31580:	mvn	r1, #0
   31584:	eor	r0, r0, r1
   31588:	str	r0, [sp, #8]
   3158c:	ldr	r0, [sp, #8]
   31590:	and	r0, r0, #1
   31594:	str	r0, [sp, #32]
   31598:	ldr	r0, [sp, #32]
   3159c:	cmp	r0, #0
   315a0:	bne	315b0 <flatcc_verify_table_field@@Base+0x2c4>
   315a4:	movw	r0, #30
   315a8:	str	r0, [fp, #-4]
   315ac:	b	316a4 <flatcc_verify_table_field@@Base+0x3b8>
   315b0:	b	315b4 <flatcc_verify_table_field@@Base+0x2c8>
   315b4:	b	315b8 <flatcc_verify_table_field@@Base+0x2cc>
   315b8:	movw	r0, #1
   315bc:	str	r0, [sp, #28]
   315c0:	ldr	r0, [sp, #28]
   315c4:	cmp	r0, #0
   315c8:	bne	315d8 <flatcc_verify_table_field@@Base+0x2ec>
   315cc:	movw	r0, #31
   315d0:	str	r0, [fp, #-4]
   315d4:	b	316a4 <flatcc_verify_table_field@@Base+0x3b8>
   315d8:	b	315dc <flatcc_verify_table_field@@Base+0x2f0>
   315dc:	b	315e0 <flatcc_verify_table_field@@Base+0x2f4>
   315e0:	ldrh	r0, [sp, #74]	; 0x4a
   315e4:	cmp	r0, #4
   315e8:	movw	r0, #0
   315ec:	movcs	r0, #1
   315f0:	and	r0, r0, #1
   315f4:	str	r0, [sp, #24]
   315f8:	ldr	r0, [sp, #24]
   315fc:	cmp	r0, #0
   31600:	bne	31610 <flatcc_verify_table_field@@Base+0x324>
   31604:	movw	r0, #28
   31608:	str	r0, [fp, #-4]
   3160c:	b	316a4 <flatcc_verify_table_field@@Base+0x3b8>
   31610:	b	31614 <flatcc_verify_table_field@@Base+0x328>
   31614:	ldr	r0, [fp, #-8]
   31618:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3161c:	add	r1, r1, #2
   31620:	bl	32f18 <flatcc_verify_union_vector_field@@Base+0x6e8>
   31624:	strh	r0, [sp, #72]	; 0x48
   31628:	ldr	r0, [fp, #-12]
   3162c:	ldr	r1, [sp, #68]	; 0x44
   31630:	sub	r0, r0, r1
   31634:	ldrh	r1, [sp, #72]	; 0x48
   31638:	cmp	r0, r1
   3163c:	movw	r0, #0
   31640:	movcs	r0, #1
   31644:	and	r0, r0, #1
   31648:	str	r0, [sp, #20]
   3164c:	ldr	r0, [sp, #20]
   31650:	cmp	r0, #0
   31654:	bne	31664 <flatcc_verify_table_field@@Base+0x378>
   31658:	movw	r0, #20
   3165c:	str	r0, [fp, #-4]
   31660:	b	316a4 <flatcc_verify_table_field@@Base+0x3b8>
   31664:	b	31668 <flatcc_verify_table_field@@Base+0x37c>
   31668:	ldr	r0, [fp, #-8]
   3166c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31670:	add	r0, r0, r1
   31674:	str	r0, [sp, #64]	; 0x40
   31678:	ldr	r0, [fp, #-8]
   3167c:	str	r0, [sp, #52]	; 0x34
   31680:	ldr	r0, [fp, #-12]
   31684:	str	r0, [sp, #56]	; 0x38
   31688:	ldr	r0, [fp, #12]
   3168c:	add	r1, sp, #52	; 0x34
   31690:	str	r0, [sp, #4]
   31694:	mov	r0, r1
   31698:	ldr	r1, [sp, #4]
   3169c:	blx	r1
   316a0:	str	r0, [fp, #-4]
   316a4:	ldr	r0, [fp, #-4]
   316a8:	mov	sp, fp
   316ac:	pop	{fp, pc}

000316b0 <flatcc_verify_table_vector_field@@Base>:
   316b0:	push	{r4, r5, fp, lr}
   316b4:	add	fp, sp, #8
   316b8:	sub	sp, sp, #64	; 0x40
   316bc:	str	r0, [fp, #-16]
   316c0:	strh	r1, [fp, #-18]	; 0xffffffee
   316c4:	str	r2, [fp, #-24]	; 0xffffffe8
   316c8:	str	r3, [fp, #-28]	; 0xffffffe4
   316cc:	ldr	r0, [fp, #-16]
   316d0:	ldrh	r1, [fp, #-18]	; 0xffffffee
   316d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   316d8:	uxth	r1, r1
   316dc:	sub	r3, fp, #32
   316e0:	bl	30b9c <flatcc_verify_string_field@@Base+0xc0>
   316e4:	str	r0, [sp, #36]	; 0x24
   316e8:	ldr	r0, [sp, #36]	; 0x24
   316ec:	cmp	r0, #0
   316f0:	bne	31700 <flatcc_verify_table_vector_field@@Base+0x50>
   316f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   316f8:	cmp	r0, #0
   316fc:	bne	3170c <flatcc_verify_table_vector_field@@Base+0x5c>
   31700:	ldr	r0, [sp, #36]	; 0x24
   31704:	str	r0, [fp, #-12]
   31708:	b	31794 <flatcc_verify_table_vector_field@@Base+0xe4>
   3170c:	b	31710 <flatcc_verify_table_vector_field@@Base+0x60>
   31710:	ldr	r0, [fp, #-16]
   31714:	ldr	r0, [r0]
   31718:	ldr	r1, [fp, #-16]
   3171c:	ldr	r1, [r1, #4]
   31720:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31724:	ldr	r3, [fp, #-16]
   31728:	ldr	r3, [r3]
   3172c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   31730:	str	r0, [sp, #32]
   31734:	mov	r0, r3
   31738:	str	r1, [sp, #28]
   3173c:	mov	r1, ip
   31740:	str	r2, [sp, #24]
   31744:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   31748:	ldr	r1, [fp, #-16]
   3174c:	ldr	r1, [r1, #8]
   31750:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31754:	ldr	r3, [sp, #32]
   31758:	str	r0, [sp, #20]
   3175c:	mov	r0, r3
   31760:	ldr	ip, [sp, #28]
   31764:	str	r1, [sp, #16]
   31768:	mov	r1, ip
   3176c:	ldr	lr, [sp, #24]
   31770:	str	r2, [sp, #12]
   31774:	mov	r2, lr
   31778:	ldr	r3, [sp, #20]
   3177c:	ldr	r4, [sp, #16]
   31780:	str	r4, [sp]
   31784:	ldr	r5, [sp, #12]
   31788:	str	r5, [sp, #4]
   3178c:	bl	317a0 <flatcc_verify_table_vector_field@@Base+0xf0>
   31790:	str	r0, [fp, #-12]
   31794:	ldr	r0, [fp, #-12]
   31798:	sub	sp, fp, #8
   3179c:	pop	{r4, r5, fp, pc}
   317a0:	push	{r4, r5, fp, lr}
   317a4:	add	fp, sp, #8
   317a8:	sub	sp, sp, #104	; 0x68
   317ac:	ldr	ip, [fp, #12]
   317b0:	ldr	lr, [fp, #8]
   317b4:	str	r0, [fp, #-16]
   317b8:	str	r1, [fp, #-20]	; 0xffffffec
   317bc:	str	r2, [fp, #-24]	; 0xffffffe8
   317c0:	str	r3, [fp, #-28]	; 0xffffffe4
   317c4:	ldr	r0, [fp, #8]
   317c8:	mvn	r1, #0
   317cc:	add	r1, r0, r1
   317d0:	str	r1, [fp, #8]
   317d4:	cmp	r0, #0
   317d8:	movw	r0, #0
   317dc:	movgt	r0, #1
   317e0:	and	r0, r0, #1
   317e4:	str	r0, [fp, #-40]	; 0xffffffd8
   317e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   317ec:	cmp	r0, #0
   317f0:	bne	31800 <flatcc_verify_table_vector_field@@Base+0x150>
   317f4:	movw	r0, #3
   317f8:	str	r0, [fp, #-12]
   317fc:	b	31a00 <flatcc_verify_table_vector_field@@Base+0x350>
   31800:	b	31804 <flatcc_verify_table_vector_field@@Base+0x154>
   31804:	ldr	r0, [pc, #512]	; 31a0c <flatcc_verify_table_vector_field@@Base+0x35c>
   31808:	ldr	r1, [fp, #-16]
   3180c:	ldr	r2, [fp, #-20]	; 0xffffffec
   31810:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31814:	ldr	ip, [fp, #-28]	; 0xffffffe4
   31818:	str	r0, [fp, #-44]	; 0xffffffd4
   3181c:	mov	r0, r1
   31820:	mov	r1, r2
   31824:	mov	r2, r3
   31828:	mov	r3, ip
   3182c:	movw	ip, #4
   31830:	str	ip, [sp]
   31834:	movw	ip, #4
   31838:	uxth	ip, ip
   3183c:	str	ip, [sp, #4]
   31840:	ldr	ip, [fp, #-44]	; 0xffffffd4
   31844:	str	ip, [sp, #8]
   31848:	bl	30f48 <flatcc_verify_vector_field@@Base+0x110>
   3184c:	cmp	r0, #0
   31850:	beq	318a4 <flatcc_verify_table_vector_field@@Base+0x1f4>
   31854:	ldr	r0, [pc, #432]	; 31a0c <flatcc_verify_table_vector_field@@Base+0x35c>
   31858:	ldr	r1, [fp, #-16]
   3185c:	ldr	r2, [fp, #-20]	; 0xffffffec
   31860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31864:	ldr	ip, [fp, #-28]	; 0xffffffe4
   31868:	str	r0, [fp, #-48]	; 0xffffffd0
   3186c:	mov	r0, r1
   31870:	mov	r1, r2
   31874:	mov	r2, r3
   31878:	mov	r3, ip
   3187c:	movw	ip, #4
   31880:	str	ip, [sp]
   31884:	movw	ip, #4
   31888:	uxth	ip, ip
   3188c:	str	ip, [sp, #4]
   31890:	ldr	ip, [fp, #-48]	; 0xffffffd0
   31894:	str	ip, [sp, #8]
   31898:	bl	30f48 <flatcc_verify_vector_field@@Base+0x110>
   3189c:	str	r0, [fp, #-12]
   318a0:	b	31a00 <flatcc_verify_table_vector_field@@Base+0x350>
   318a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   318a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   318ac:	add	r0, r1, r0
   318b0:	str	r0, [fp, #-24]	; 0xffffffe8
   318b4:	ldr	r0, [fp, #-16]
   318b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   318bc:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   318c0:	str	r0, [fp, #-36]	; 0xffffffdc
   318c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   318c8:	add	r0, r0, #4
   318cc:	str	r0, [fp, #-24]	; 0xffffffe8
   318d0:	movw	r0, #0
   318d4:	str	r0, [fp, #-32]	; 0xffffffe0
   318d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   318dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   318e0:	cmp	r0, r1
   318e4:	bcs	319f8 <flatcc_verify_table_vector_field@@Base+0x348>
   318e8:	ldr	r0, [fp, #-16]
   318ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   318f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   318f4:	ldr	r3, [fp, #-16]
   318f8:	ldr	ip, [fp, #-24]	; 0xffffffe8
   318fc:	str	r0, [fp, #-52]	; 0xffffffcc
   31900:	mov	r0, r3
   31904:	str	r1, [sp, #56]	; 0x38
   31908:	mov	r1, ip
   3190c:	str	r2, [sp, #52]	; 0x34
   31910:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   31914:	ldr	r1, [fp, #8]
   31918:	ldr	r2, [fp, #12]
   3191c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31920:	str	r0, [sp, #48]	; 0x30
   31924:	mov	r0, r3
   31928:	ldr	ip, [sp, #56]	; 0x38
   3192c:	str	r1, [sp, #44]	; 0x2c
   31930:	mov	r1, ip
   31934:	ldr	lr, [sp, #52]	; 0x34
   31938:	str	r2, [sp, #40]	; 0x28
   3193c:	mov	r2, lr
   31940:	ldr	r3, [sp, #48]	; 0x30
   31944:	ldr	r4, [sp, #44]	; 0x2c
   31948:	str	r4, [sp]
   3194c:	ldr	r5, [sp, #40]	; 0x28
   31950:	str	r5, [sp, #4]
   31954:	bl	313dc <flatcc_verify_table_field@@Base+0xf0>
   31958:	cmp	r0, #0
   3195c:	beq	319d8 <flatcc_verify_table_vector_field@@Base+0x328>
   31960:	ldr	r0, [fp, #-16]
   31964:	ldr	r1, [fp, #-20]	; 0xffffffec
   31968:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3196c:	ldr	r3, [fp, #-16]
   31970:	ldr	ip, [fp, #-24]	; 0xffffffe8
   31974:	str	r0, [sp, #36]	; 0x24
   31978:	mov	r0, r3
   3197c:	str	r1, [sp, #32]
   31980:	mov	r1, ip
   31984:	str	r2, [sp, #28]
   31988:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   3198c:	ldr	r1, [fp, #8]
   31990:	ldr	r2, [fp, #12]
   31994:	ldr	r3, [sp, #36]	; 0x24
   31998:	str	r0, [sp, #24]
   3199c:	mov	r0, r3
   319a0:	ldr	ip, [sp, #32]
   319a4:	str	r1, [sp, #20]
   319a8:	mov	r1, ip
   319ac:	ldr	lr, [sp, #28]
   319b0:	str	r2, [sp, #16]
   319b4:	mov	r2, lr
   319b8:	ldr	r3, [sp, #24]
   319bc:	ldr	r4, [sp, #20]
   319c0:	str	r4, [sp]
   319c4:	ldr	r5, [sp, #16]
   319c8:	str	r5, [sp, #4]
   319cc:	bl	313dc <flatcc_verify_table_field@@Base+0xf0>
   319d0:	str	r0, [fp, #-12]
   319d4:	b	31a00 <flatcc_verify_table_vector_field@@Base+0x350>
   319d8:	b	319dc <flatcc_verify_table_vector_field@@Base+0x32c>
   319dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   319e0:	add	r0, r0, #1
   319e4:	str	r0, [fp, #-32]	; 0xffffffe0
   319e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   319ec:	add	r0, r0, #4
   319f0:	str	r0, [fp, #-24]	; 0xffffffe8
   319f4:	b	318d8 <flatcc_verify_table_vector_field@@Base+0x228>
   319f8:	movw	r0, #0
   319fc:	str	r0, [fp, #-12]
   31a00:	ldr	r0, [fp, #-12]
   31a04:	sub	sp, fp, #8
   31a08:	pop	{r4, r5, fp, pc}
   31a0c:	svccc	0x00ffffff

00031a10 <flatcc_verify_union_table@@Base>:
   31a10:	push	{fp, lr}
   31a14:	mov	fp, sp
   31a18:	sub	sp, sp, #16
   31a1c:	str	r0, [fp, #-4]
   31a20:	str	r1, [sp, #8]
   31a24:	ldr	r0, [fp, #-4]
   31a28:	ldr	r0, [r0]
   31a2c:	ldr	r1, [fp, #-4]
   31a30:	ldr	r1, [r1, #4]
   31a34:	ldr	r2, [fp, #-4]
   31a38:	ldr	r2, [r2, #16]
   31a3c:	ldr	r3, [fp, #-4]
   31a40:	ldr	r3, [r3, #20]
   31a44:	ldr	ip, [fp, #-4]
   31a48:	ldr	ip, [ip, #8]
   31a4c:	ldr	lr, [sp, #8]
   31a50:	str	ip, [sp]
   31a54:	str	lr, [sp, #4]
   31a58:	bl	313dc <flatcc_verify_table_field@@Base+0xf0>
   31a5c:	mov	sp, fp
   31a60:	pop	{fp, pc}

00031a64 <flatcc_verify_union_struct@@Base>:
   31a64:	push	{fp, lr}
   31a68:	mov	fp, sp
   31a6c:	sub	sp, sp, #16
   31a70:	str	r0, [fp, #-4]
   31a74:	str	r1, [sp, #8]
   31a78:	strh	r2, [sp, #6]
   31a7c:	ldr	r0, [fp, #-4]
   31a80:	ldr	r0, [r0, #4]
   31a84:	ldr	r1, [fp, #-4]
   31a88:	ldr	r1, [r1, #16]
   31a8c:	ldr	r2, [fp, #-4]
   31a90:	ldr	r2, [r2, #20]
   31a94:	ldr	r3, [sp, #8]
   31a98:	ldrh	ip, [sp, #6]
   31a9c:	str	ip, [sp]
   31aa0:	bl	31aac <flatcc_verify_union_struct@@Base+0x48>
   31aa4:	mov	sp, fp
   31aa8:	pop	{fp, pc}
   31aac:	sub	sp, sp, #36	; 0x24
   31ab0:	ldr	ip, [sp, #36]	; 0x24
   31ab4:	str	r0, [sp, #28]
   31ab8:	str	r1, [sp, #24]
   31abc:	str	r2, [sp, #20]
   31ac0:	str	r3, [sp, #16]
   31ac4:	strh	ip, [sp, #14]
   31ac8:	ldr	r0, [sp, #20]
   31acc:	cmp	r0, #0
   31ad0:	beq	31aec <flatcc_verify_union_struct@@Base+0x88>
   31ad4:	ldr	r0, [sp, #24]
   31ad8:	ldr	r1, [sp, #20]
   31adc:	add	r0, r0, r1
   31ae0:	ldr	r1, [sp, #28]
   31ae4:	cmp	r0, r1
   31ae8:	bls	31af8 <flatcc_verify_union_struct@@Base+0x94>
   31aec:	movw	r0, #18
   31af0:	str	r0, [sp, #32]
   31af4:	b	31be0 <flatcc_verify_union_struct@@Base+0x17c>
   31af8:	ldr	r0, [sp, #20]
   31afc:	ldr	r1, [sp, #24]
   31b00:	add	r0, r1, r0
   31b04:	str	r0, [sp, #24]
   31b08:	ldr	r0, [sp, #24]
   31b0c:	ldr	r1, [sp, #16]
   31b10:	add	r0, r0, r1
   31b14:	ldr	r1, [sp, #24]
   31b18:	cmp	r0, r1
   31b1c:	movw	r0, #0
   31b20:	movcs	r0, #1
   31b24:	and	r0, r0, #1
   31b28:	str	r0, [sp, #8]
   31b2c:	ldr	r0, [sp, #8]
   31b30:	cmp	r0, #0
   31b34:	bne	31b44 <flatcc_verify_union_struct@@Base+0xe0>
   31b38:	movw	r0, #10
   31b3c:	str	r0, [sp, #32]
   31b40:	b	31be0 <flatcc_verify_union_struct@@Base+0x17c>
   31b44:	b	31b48 <flatcc_verify_union_struct@@Base+0xe4>
   31b48:	b	31b4c <flatcc_verify_union_struct@@Base+0xe8>
   31b4c:	ldr	r0, [sp, #24]
   31b50:	ldr	r1, [sp, #16]
   31b54:	add	r0, r0, r1
   31b58:	ldr	r1, [sp, #28]
   31b5c:	cmp	r0, r1
   31b60:	movw	r0, #0
   31b64:	movls	r0, #1
   31b68:	and	r0, r0, #1
   31b6c:	str	r0, [sp, #4]
   31b70:	ldr	r0, [sp, #4]
   31b74:	cmp	r0, #0
   31b78:	bne	31b88 <flatcc_verify_union_struct@@Base+0x124>
   31b7c:	movw	r0, #9
   31b80:	str	r0, [sp, #32]
   31b84:	b	31be0 <flatcc_verify_union_struct@@Base+0x17c>
   31b88:	b	31b8c <flatcc_verify_union_struct@@Base+0x128>
   31b8c:	b	31b90 <flatcc_verify_union_struct@@Base+0x12c>
   31b90:	ldr	r0, [sp, #24]
   31b94:	ldrh	r1, [sp, #14]
   31b98:	sub	r1, r1, #1
   31b9c:	and	r0, r0, r1
   31ba0:	cmp	r0, #0
   31ba4:	movw	r0, #0
   31ba8:	movne	r0, #1
   31bac:	mvn	r1, #0
   31bb0:	eor	r0, r0, r1
   31bb4:	and	r0, r0, #1
   31bb8:	str	r0, [sp]
   31bbc:	ldr	r0, [sp]
   31bc0:	cmp	r0, #0
   31bc4:	bne	31bd4 <flatcc_verify_union_struct@@Base+0x170>
   31bc8:	movw	r0, #11
   31bcc:	str	r0, [sp, #32]
   31bd0:	b	31be0 <flatcc_verify_union_struct@@Base+0x17c>
   31bd4:	b	31bd8 <flatcc_verify_union_struct@@Base+0x174>
   31bd8:	movw	r0, #0
   31bdc:	str	r0, [sp, #32]
   31be0:	ldr	r0, [sp, #32]
   31be4:	add	sp, sp, #36	; 0x24
   31be8:	bx	lr

00031bec <flatcc_verify_union_string@@Base>:
   31bec:	push	{fp, lr}
   31bf0:	mov	fp, sp
   31bf4:	sub	sp, sp, #8
   31bf8:	str	r0, [sp, #4]
   31bfc:	ldr	r0, [sp, #4]
   31c00:	ldr	r0, [r0]
   31c04:	ldr	r1, [sp, #4]
   31c08:	ldr	r1, [r1, #4]
   31c0c:	ldr	r2, [sp, #4]
   31c10:	ldr	r2, [r2, #16]
   31c14:	ldr	r3, [sp, #4]
   31c18:	ldr	r3, [r3, #20]
   31c1c:	bl	30cf0 <flatcc_verify_string_field@@Base+0x214>
   31c20:	mov	sp, fp
   31c24:	pop	{fp, pc}

00031c28 <flatcc_verify_buffer_header@@Base>:
   31c28:	push	{fp, lr}
   31c2c:	mov	fp, sp
   31c30:	sub	sp, sp, #48	; 0x30
   31c34:	str	r0, [fp, #-8]
   31c38:	str	r1, [fp, #-12]
   31c3c:	str	r2, [fp, #-16]
   31c40:	ldr	r0, [fp, #-8]
   31c44:	and	r0, r0, #3
   31c48:	cmp	r0, #0
   31c4c:	movw	r0, #0
   31c50:	movne	r0, #1
   31c54:	mvn	r1, #0
   31c58:	eor	r0, r0, r1
   31c5c:	and	r0, r0, #1
   31c60:	str	r0, [sp, #20]
   31c64:	ldr	r0, [sp, #20]
   31c68:	cmp	r0, #0
   31c6c:	bne	31c7c <flatcc_verify_buffer_header@@Base+0x54>
   31c70:	movw	r0, #5
   31c74:	str	r0, [fp, #-4]
   31c78:	b	31d7c <flatcc_verify_buffer_header@@Base+0x154>
   31c7c:	b	31c80 <flatcc_verify_buffer_header@@Base+0x58>
   31c80:	b	31c84 <flatcc_verify_buffer_header@@Base+0x5c>
   31c84:	ldr	r0, [fp, #-12]
   31c88:	cmn	r0, #9
   31c8c:	movw	r0, #0
   31c90:	movls	r0, #1
   31c94:	and	r0, r0, #1
   31c98:	str	r0, [sp, #16]
   31c9c:	ldr	r0, [sp, #16]
   31ca0:	cmp	r0, #0
   31ca4:	bne	31cb4 <flatcc_verify_buffer_header@@Base+0x8c>
   31ca8:	movw	r0, #6
   31cac:	str	r0, [fp, #-4]
   31cb0:	b	31d7c <flatcc_verify_buffer_header@@Base+0x154>
   31cb4:	b	31cb8 <flatcc_verify_buffer_header@@Base+0x90>
   31cb8:	b	31cbc <flatcc_verify_buffer_header@@Base+0x94>
   31cbc:	ldr	r0, [fp, #-12]
   31cc0:	cmp	r0, #8
   31cc4:	movw	r0, #0
   31cc8:	movcs	r0, #1
   31ccc:	and	r0, r0, #1
   31cd0:	str	r0, [sp, #12]
   31cd4:	ldr	r0, [sp, #12]
   31cd8:	cmp	r0, #0
   31cdc:	bne	31cec <flatcc_verify_buffer_header@@Base+0xc4>
   31ce0:	movw	r0, #1
   31ce4:	str	r0, [fp, #-4]
   31ce8:	b	31d7c <flatcc_verify_buffer_header@@Base+0x154>
   31cec:	b	31cf0 <flatcc_verify_buffer_header@@Base+0xc8>
   31cf0:	ldr	r0, [fp, #-16]
   31cf4:	movw	r1, #0
   31cf8:	cmp	r0, r1
   31cfc:	beq	31d74 <flatcc_verify_buffer_header@@Base+0x14c>
   31d00:	ldr	r0, [fp, #-16]
   31d04:	bl	31d88 <flatcc_verify_buffer_header@@Base+0x160>
   31d08:	str	r0, [sp, #24]
   31d0c:	ldr	r0, [fp, #-8]
   31d10:	movw	r1, #4
   31d14:	bl	31dc8 <flatcc_verify_buffer_header@@Base+0x1a0>
   31d18:	str	r0, [fp, #-20]	; 0xffffffec
   31d1c:	ldr	r0, [sp, #24]
   31d20:	cmp	r0, #0
   31d24:	movw	r0, #1
   31d28:	str	r0, [sp, #4]
   31d2c:	beq	31d48 <flatcc_verify_buffer_header@@Base+0x120>
   31d30:	ldr	r0, [fp, #-20]	; 0xffffffec
   31d34:	ldr	r1, [sp, #24]
   31d38:	cmp	r0, r1
   31d3c:	movw	r0, #0
   31d40:	moveq	r0, #1
   31d44:	str	r0, [sp, #4]
   31d48:	ldr	r0, [sp, #4]
   31d4c:	and	r0, r0, #1
   31d50:	str	r0, [sp, #8]
   31d54:	ldr	r0, [sp, #8]
   31d58:	cmp	r0, #0
   31d5c:	bne	31d6c <flatcc_verify_buffer_header@@Base+0x144>
   31d60:	movw	r0, #2
   31d64:	str	r0, [fp, #-4]
   31d68:	b	31d7c <flatcc_verify_buffer_header@@Base+0x154>
   31d6c:	b	31d70 <flatcc_verify_buffer_header@@Base+0x148>
   31d70:	b	31d74 <flatcc_verify_buffer_header@@Base+0x14c>
   31d74:	movw	r0, #0
   31d78:	str	r0, [fp, #-4]
   31d7c:	ldr	r0, [fp, #-4]
   31d80:	mov	sp, fp
   31d84:	pop	{fp, pc}
   31d88:	push	{fp, lr}
   31d8c:	mov	fp, sp
   31d90:	sub	sp, sp, #16
   31d94:	str	r0, [fp, #-4]
   31d98:	movw	r0, #0
   31d9c:	str	r0, [sp, #8]
   31da0:	add	r0, sp, #8
   31da4:	ldr	r1, [fp, #-4]
   31da8:	movw	r2, #4
   31dac:	bl	14ecc <strncpy@plt>
   31db0:	ldr	r1, [sp, #8]
   31db4:	str	r0, [sp, #4]
   31db8:	mov	r0, r1
   31dbc:	bl	32f84 <flatcc_verify_union_vector_field@@Base+0x754>
   31dc0:	mov	sp, fp
   31dc4:	pop	{fp, pc}
   31dc8:	push	{fp, lr}
   31dcc:	mov	fp, sp
   31dd0:	sub	sp, sp, #8
   31dd4:	str	r0, [sp, #4]
   31dd8:	str	r1, [sp]
   31ddc:	ldr	r0, [sp, #4]
   31de0:	ldr	r1, [sp]
   31de4:	add	r0, r0, r1
   31de8:	bl	32f98 <flatcc_verify_union_vector_field@@Base+0x768>
   31dec:	mov	sp, fp
   31df0:	pop	{fp, pc}

00031df4 <flatcc_verify_typed_buffer_header@@Base>:
   31df4:	push	{fp, lr}
   31df8:	mov	fp, sp
   31dfc:	sub	sp, sp, #48	; 0x30
   31e00:	str	r0, [fp, #-8]
   31e04:	str	r1, [fp, #-12]
   31e08:	str	r2, [fp, #-16]
   31e0c:	ldr	r0, [fp, #-8]
   31e10:	and	r0, r0, #3
   31e14:	cmp	r0, #0
   31e18:	movw	r0, #0
   31e1c:	movne	r0, #1
   31e20:	mvn	r1, #0
   31e24:	eor	r0, r0, r1
   31e28:	and	r0, r0, #1
   31e2c:	str	r0, [sp, #20]
   31e30:	ldr	r0, [sp, #20]
   31e34:	cmp	r0, #0
   31e38:	bne	31e48 <flatcc_verify_typed_buffer_header@@Base+0x54>
   31e3c:	movw	r0, #5
   31e40:	str	r0, [fp, #-4]
   31e44:	b	31f40 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   31e48:	b	31e4c <flatcc_verify_typed_buffer_header@@Base+0x58>
   31e4c:	b	31e50 <flatcc_verify_typed_buffer_header@@Base+0x5c>
   31e50:	ldr	r0, [fp, #-12]
   31e54:	cmn	r0, #9
   31e58:	movw	r0, #0
   31e5c:	movls	r0, #1
   31e60:	and	r0, r0, #1
   31e64:	str	r0, [sp, #16]
   31e68:	ldr	r0, [sp, #16]
   31e6c:	cmp	r0, #0
   31e70:	bne	31e80 <flatcc_verify_typed_buffer_header@@Base+0x8c>
   31e74:	movw	r0, #6
   31e78:	str	r0, [fp, #-4]
   31e7c:	b	31f40 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   31e80:	b	31e84 <flatcc_verify_typed_buffer_header@@Base+0x90>
   31e84:	b	31e88 <flatcc_verify_typed_buffer_header@@Base+0x94>
   31e88:	ldr	r0, [fp, #-12]
   31e8c:	cmp	r0, #8
   31e90:	movw	r0, #0
   31e94:	movcs	r0, #1
   31e98:	and	r0, r0, #1
   31e9c:	str	r0, [sp, #12]
   31ea0:	ldr	r0, [sp, #12]
   31ea4:	cmp	r0, #0
   31ea8:	bne	31eb8 <flatcc_verify_typed_buffer_header@@Base+0xc4>
   31eac:	movw	r0, #1
   31eb0:	str	r0, [fp, #-4]
   31eb4:	b	31f40 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   31eb8:	b	31ebc <flatcc_verify_typed_buffer_header@@Base+0xc8>
   31ebc:	ldr	r0, [fp, #-16]
   31ec0:	cmp	r0, #0
   31ec4:	beq	31f38 <flatcc_verify_typed_buffer_header@@Base+0x144>
   31ec8:	ldr	r0, [fp, #-16]
   31ecc:	str	r0, [sp, #24]
   31ed0:	ldr	r0, [fp, #-8]
   31ed4:	movw	r1, #4
   31ed8:	bl	31dc8 <flatcc_verify_buffer_header@@Base+0x1a0>
   31edc:	str	r0, [fp, #-20]	; 0xffffffec
   31ee0:	ldr	r0, [sp, #24]
   31ee4:	cmp	r0, #0
   31ee8:	movw	r0, #1
   31eec:	str	r0, [sp, #4]
   31ef0:	beq	31f0c <flatcc_verify_typed_buffer_header@@Base+0x118>
   31ef4:	ldr	r0, [fp, #-20]	; 0xffffffec
   31ef8:	ldr	r1, [sp, #24]
   31efc:	cmp	r0, r1
   31f00:	movw	r0, #0
   31f04:	moveq	r0, #1
   31f08:	str	r0, [sp, #4]
   31f0c:	ldr	r0, [sp, #4]
   31f10:	and	r0, r0, #1
   31f14:	str	r0, [sp, #8]
   31f18:	ldr	r0, [sp, #8]
   31f1c:	cmp	r0, #0
   31f20:	bne	31f30 <flatcc_verify_typed_buffer_header@@Base+0x13c>
   31f24:	movw	r0, #2
   31f28:	str	r0, [fp, #-4]
   31f2c:	b	31f40 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   31f30:	b	31f34 <flatcc_verify_typed_buffer_header@@Base+0x140>
   31f34:	b	31f38 <flatcc_verify_typed_buffer_header@@Base+0x144>
   31f38:	movw	r0, #0
   31f3c:	str	r0, [fp, #-4]
   31f40:	ldr	r0, [fp, #-4]
   31f44:	mov	sp, fp
   31f48:	pop	{fp, pc}

00031f4c <flatcc_verify_struct_as_root@@Base>:
   31f4c:	push	{fp, lr}
   31f50:	mov	fp, sp
   31f54:	sub	sp, sp, #40	; 0x28
   31f58:	ldr	ip, [fp, #8]
   31f5c:	str	r0, [fp, #-8]
   31f60:	str	r1, [fp, #-12]
   31f64:	str	r2, [fp, #-16]
   31f68:	str	r3, [sp, #20]
   31f6c:	strh	ip, [sp, #18]
   31f70:	ldr	r0, [fp, #-8]
   31f74:	ldr	r1, [fp, #-12]
   31f78:	ldr	r2, [fp, #-16]
   31f7c:	bl	31c28 <flatcc_verify_buffer_header@@Base>
   31f80:	cmp	r0, #0
   31f84:	beq	31fa0 <flatcc_verify_struct_as_root@@Base+0x54>
   31f88:	ldr	r0, [fp, #-8]
   31f8c:	ldr	r1, [fp, #-12]
   31f90:	ldr	r2, [fp, #-16]
   31f94:	bl	31c28 <flatcc_verify_buffer_header@@Base>
   31f98:	str	r0, [fp, #-4]
   31f9c:	b	31fe0 <flatcc_verify_struct_as_root@@Base+0x94>
   31fa0:	ldr	r0, [fp, #-12]
   31fa4:	ldr	r1, [fp, #-8]
   31fa8:	str	r0, [sp, #12]
   31fac:	mov	r0, r1
   31fb0:	movw	r1, #0
   31fb4:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   31fb8:	ldr	r3, [sp, #20]
   31fbc:	ldr	r1, [sp, #12]
   31fc0:	str	r0, [sp, #8]
   31fc4:	mov	r0, r1
   31fc8:	movw	r1, #0
   31fcc:	ldr	r2, [sp, #8]
   31fd0:	ldrh	ip, [sp, #18]
   31fd4:	str	ip, [sp]
   31fd8:	bl	31aac <flatcc_verify_union_struct@@Base+0x48>
   31fdc:	str	r0, [fp, #-4]
   31fe0:	ldr	r0, [fp, #-4]
   31fe4:	mov	sp, fp
   31fe8:	pop	{fp, pc}

00031fec <flatcc_verify_struct_as_typed_root@@Base>:
   31fec:	push	{fp, lr}
   31ff0:	mov	fp, sp
   31ff4:	sub	sp, sp, #40	; 0x28
   31ff8:	ldr	ip, [fp, #8]
   31ffc:	str	r0, [fp, #-8]
   32000:	str	r1, [fp, #-12]
   32004:	str	r2, [fp, #-16]
   32008:	str	r3, [sp, #20]
   3200c:	strh	ip, [sp, #18]
   32010:	ldr	r0, [fp, #-8]
   32014:	ldr	r1, [fp, #-12]
   32018:	ldr	r2, [fp, #-16]
   3201c:	bl	31df4 <flatcc_verify_typed_buffer_header@@Base>
   32020:	cmp	r0, #0
   32024:	beq	32040 <flatcc_verify_struct_as_typed_root@@Base+0x54>
   32028:	ldr	r0, [fp, #-8]
   3202c:	ldr	r1, [fp, #-12]
   32030:	ldr	r2, [fp, #-16]
   32034:	bl	31df4 <flatcc_verify_typed_buffer_header@@Base>
   32038:	str	r0, [fp, #-4]
   3203c:	b	32080 <flatcc_verify_struct_as_typed_root@@Base+0x94>
   32040:	ldr	r0, [fp, #-12]
   32044:	ldr	r1, [fp, #-8]
   32048:	str	r0, [sp, #12]
   3204c:	mov	r0, r1
   32050:	movw	r1, #0
   32054:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   32058:	ldr	r3, [sp, #20]
   3205c:	ldr	r1, [sp, #12]
   32060:	str	r0, [sp, #8]
   32064:	mov	r0, r1
   32068:	movw	r1, #0
   3206c:	ldr	r2, [sp, #8]
   32070:	ldrh	ip, [sp, #18]
   32074:	str	ip, [sp]
   32078:	bl	31aac <flatcc_verify_union_struct@@Base+0x48>
   3207c:	str	r0, [fp, #-4]
   32080:	ldr	r0, [fp, #-4]
   32084:	mov	sp, fp
   32088:	pop	{fp, pc}

0003208c <flatcc_verify_table_as_root@@Base>:
   3208c:	push	{fp, lr}
   32090:	mov	fp, sp
   32094:	sub	sp, sp, #48	; 0x30
   32098:	str	r0, [fp, #-8]
   3209c:	str	r1, [fp, #-12]
   320a0:	str	r2, [fp, #-16]
   320a4:	str	r3, [fp, #-20]	; 0xffffffec
   320a8:	ldr	r0, [fp, #-8]
   320ac:	ldr	r1, [fp, #-12]
   320b0:	ldr	r2, [fp, #-16]
   320b4:	bl	31c28 <flatcc_verify_buffer_header@@Base>
   320b8:	cmp	r0, #0
   320bc:	beq	320d8 <flatcc_verify_table_as_root@@Base+0x4c>
   320c0:	ldr	r0, [fp, #-8]
   320c4:	ldr	r1, [fp, #-12]
   320c8:	ldr	r2, [fp, #-16]
   320cc:	bl	31c28 <flatcc_verify_buffer_header@@Base>
   320d0:	str	r0, [fp, #-4]
   320d4:	b	32138 <flatcc_verify_table_as_root@@Base+0xac>
   320d8:	ldr	r0, [fp, #-8]
   320dc:	ldr	r1, [fp, #-12]
   320e0:	ldr	r2, [fp, #-8]
   320e4:	str	r0, [sp, #24]
   320e8:	mov	r0, r2
   320ec:	movw	r2, #0
   320f0:	str	r1, [sp, #20]
   320f4:	mov	r1, r2
   320f8:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   320fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   32100:	ldr	r2, [sp, #24]
   32104:	str	r0, [sp, #16]
   32108:	mov	r0, r2
   3210c:	ldr	r3, [sp, #20]
   32110:	str	r1, [sp, #12]
   32114:	mov	r1, r3
   32118:	movw	r2, #0
   3211c:	ldr	r3, [sp, #16]
   32120:	movw	ip, #100	; 0x64
   32124:	str	ip, [sp]
   32128:	ldr	ip, [sp, #12]
   3212c:	str	ip, [sp, #4]
   32130:	bl	313dc <flatcc_verify_table_field@@Base+0xf0>
   32134:	str	r0, [fp, #-4]
   32138:	ldr	r0, [fp, #-4]
   3213c:	mov	sp, fp
   32140:	pop	{fp, pc}

00032144 <flatcc_verify_table_as_typed_root@@Base>:
   32144:	push	{fp, lr}
   32148:	mov	fp, sp
   3214c:	sub	sp, sp, #48	; 0x30
   32150:	str	r0, [fp, #-8]
   32154:	str	r1, [fp, #-12]
   32158:	str	r2, [fp, #-16]
   3215c:	str	r3, [fp, #-20]	; 0xffffffec
   32160:	ldr	r0, [fp, #-8]
   32164:	ldr	r1, [fp, #-12]
   32168:	ldr	r2, [fp, #-16]
   3216c:	bl	31df4 <flatcc_verify_typed_buffer_header@@Base>
   32170:	cmp	r0, #0
   32174:	beq	32190 <flatcc_verify_table_as_typed_root@@Base+0x4c>
   32178:	ldr	r0, [fp, #-8]
   3217c:	ldr	r1, [fp, #-12]
   32180:	ldr	r2, [fp, #-16]
   32184:	bl	31df4 <flatcc_verify_typed_buffer_header@@Base>
   32188:	str	r0, [fp, #-4]
   3218c:	b	321f0 <flatcc_verify_table_as_typed_root@@Base+0xac>
   32190:	ldr	r0, [fp, #-8]
   32194:	ldr	r1, [fp, #-12]
   32198:	ldr	r2, [fp, #-8]
   3219c:	str	r0, [sp, #24]
   321a0:	mov	r0, r2
   321a4:	movw	r2, #0
   321a8:	str	r1, [sp, #20]
   321ac:	mov	r1, r2
   321b0:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   321b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   321b8:	ldr	r2, [sp, #24]
   321bc:	str	r0, [sp, #16]
   321c0:	mov	r0, r2
   321c4:	ldr	r3, [sp, #20]
   321c8:	str	r1, [sp, #12]
   321cc:	mov	r1, r3
   321d0:	movw	r2, #0
   321d4:	ldr	r3, [sp, #16]
   321d8:	movw	ip, #100	; 0x64
   321dc:	str	ip, [sp]
   321e0:	ldr	ip, [sp, #12]
   321e4:	str	ip, [sp, #4]
   321e8:	bl	313dc <flatcc_verify_table_field@@Base+0xf0>
   321ec:	str	r0, [fp, #-4]
   321f0:	ldr	r0, [fp, #-4]
   321f4:	mov	sp, fp
   321f8:	pop	{fp, pc}

000321fc <flatcc_verify_struct_as_nested_root@@Base>:
   321fc:	push	{fp, lr}
   32200:	mov	fp, sp
   32204:	sub	sp, sp, #48	; 0x30
   32208:	ldr	ip, [fp, #12]
   3220c:	ldr	lr, [fp, #8]
   32210:	str	r0, [fp, #-8]
   32214:	strh	r1, [fp, #-10]
   32218:	str	r2, [fp, #-16]
   3221c:	str	r3, [fp, #-20]	; 0xffffffec
   32220:	strh	ip, [fp, #-22]	; 0xffffffea
   32224:	ldr	r0, [fp, #-8]
   32228:	ldrh	r1, [fp, #-10]
   3222c:	ldr	r2, [fp, #-16]
   32230:	ldrh	r3, [fp, #-22]	; 0xffffffea
   32234:	uxth	r1, r1
   32238:	movw	ip, #1
   3223c:	uxth	ip, ip
   32240:	str	ip, [sp]
   32244:	mvn	ip, #0
   32248:	str	ip, [sp, #4]
   3224c:	str	lr, [sp, #12]
   32250:	bl	30e38 <flatcc_verify_vector_field@@Base>
   32254:	cmp	r0, #0
   32258:	beq	32290 <flatcc_verify_struct_as_nested_root@@Base+0x94>
   3225c:	ldr	r0, [fp, #-8]
   32260:	ldrh	r1, [fp, #-10]
   32264:	ldr	r2, [fp, #-16]
   32268:	ldrh	r3, [fp, #-22]	; 0xffffffea
   3226c:	uxth	r1, r1
   32270:	movw	ip, #1
   32274:	uxth	ip, ip
   32278:	str	ip, [sp]
   3227c:	mvn	ip, #0
   32280:	str	ip, [sp, #4]
   32284:	bl	30e38 <flatcc_verify_vector_field@@Base>
   32288:	str	r0, [fp, #-4]
   3228c:	b	32318 <flatcc_verify_struct_as_nested_root@@Base+0x11c>
   32290:	ldr	r0, [fp, #-8]
   32294:	ldrh	r1, [fp, #-10]
   32298:	bl	32324 <flatcc_verify_struct_as_nested_root@@Base+0x128>
   3229c:	str	r0, [sp, #20]
   322a0:	movw	r1, #0
   322a4:	cmp	r1, r0
   322a8:	bne	322b8 <flatcc_verify_struct_as_nested_root@@Base+0xbc>
   322ac:	movw	r0, #0
   322b0:	str	r0, [fp, #-4]
   322b4:	b	32318 <flatcc_verify_struct_as_nested_root@@Base+0x11c>
   322b8:	ldr	r0, [sp, #20]
   322bc:	ldr	r1, [sp, #20]
   322c0:	str	r0, [sp, #8]
   322c4:	mov	r0, r1
   322c8:	movw	r1, #0
   322cc:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   322d0:	ldr	r1, [sp, #8]
   322d4:	add	r0, r1, r0
   322d8:	str	r0, [sp, #20]
   322dc:	ldr	r0, [sp, #20]
   322e0:	movw	r1, #0
   322e4:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   322e8:	str	r0, [sp, #16]
   322ec:	ldr	r0, [sp, #20]
   322f0:	add	r0, r0, #4
   322f4:	str	r0, [sp, #20]
   322f8:	ldr	r0, [sp, #20]
   322fc:	ldr	r1, [sp, #16]
   32300:	ldr	r2, [fp, #-20]	; 0xffffffec
   32304:	ldr	r3, [fp, #8]
   32308:	ldrh	ip, [fp, #-22]	; 0xffffffea
   3230c:	str	ip, [sp]
   32310:	bl	31f4c <flatcc_verify_struct_as_root@@Base>
   32314:	str	r0, [fp, #-4]
   32318:	ldr	r0, [fp, #-4]
   3231c:	mov	sp, fp
   32320:	pop	{fp, pc}
   32324:	push	{fp, lr}
   32328:	mov	fp, sp
   3232c:	sub	sp, sp, #16
   32330:	str	r0, [fp, #-4]
   32334:	strh	r1, [fp, #-6]
   32338:	ldr	r0, [fp, #-4]
   3233c:	ldrh	r1, [fp, #-6]
   32340:	bl	327c8 <flatcc_verify_union_field@@Base+0x290>
   32344:	strh	r0, [sp, #8]
   32348:	ldrh	r0, [sp, #8]
   3234c:	cmp	r0, #0
   32350:	beq	32378 <flatcc_verify_struct_as_nested_root@@Base+0x17c>
   32354:	ldr	r0, [fp, #-4]
   32358:	ldr	r0, [r0]
   3235c:	ldr	r1, [fp, #-4]
   32360:	ldr	r1, [r1, #16]
   32364:	add	r0, r0, r1
   32368:	ldrh	r1, [sp, #8]
   3236c:	add	r0, r0, r1
   32370:	str	r0, [sp, #4]
   32374:	b	32384 <flatcc_verify_struct_as_nested_root@@Base+0x188>
   32378:	movw	r0, #0
   3237c:	str	r0, [sp, #4]
   32380:	b	32384 <flatcc_verify_struct_as_nested_root@@Base+0x188>
   32384:	ldr	r0, [sp, #4]
   32388:	mov	sp, fp
   3238c:	pop	{fp, pc}

00032390 <flatcc_verify_table_as_nested_root@@Base>:
   32390:	push	{r4, sl, fp, lr}
   32394:	add	fp, sp, #8
   32398:	sub	sp, sp, #72	; 0x48
   3239c:	ldr	ip, [fp, #12]
   323a0:	ldr	lr, [fp, #8]
   323a4:	str	r0, [fp, #-16]
   323a8:	strh	r1, [fp, #-18]	; 0xffffffee
   323ac:	str	r2, [fp, #-24]	; 0xffffffe8
   323b0:	str	r3, [fp, #-28]	; 0xffffffe4
   323b4:	strh	lr, [fp, #-30]	; 0xffffffe2
   323b8:	ldr	r0, [fp, #-16]
   323bc:	ldrh	r1, [fp, #-18]	; 0xffffffee
   323c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   323c4:	ldrh	r3, [fp, #-30]	; 0xffffffe2
   323c8:	uxth	r1, r1
   323cc:	movw	lr, #1
   323d0:	uxth	lr, lr
   323d4:	str	lr, [sp]
   323d8:	mvn	lr, #0
   323dc:	str	lr, [sp, #4]
   323e0:	str	ip, [sp, #36]	; 0x24
   323e4:	bl	30e38 <flatcc_verify_vector_field@@Base>
   323e8:	cmp	r0, #0
   323ec:	beq	32424 <flatcc_verify_table_as_nested_root@@Base+0x94>
   323f0:	ldr	r0, [fp, #-16]
   323f4:	ldrh	r1, [fp, #-18]	; 0xffffffee
   323f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   323fc:	ldrh	r3, [fp, #-30]	; 0xffffffe2
   32400:	uxth	r1, r1
   32404:	movw	ip, #1
   32408:	uxth	ip, ip
   3240c:	str	ip, [sp]
   32410:	mvn	ip, #0
   32414:	str	ip, [sp, #4]
   32418:	bl	30e38 <flatcc_verify_vector_field@@Base>
   3241c:	str	r0, [fp, #-12]
   32420:	b	3252c <flatcc_verify_table_as_nested_root@@Base+0x19c>
   32424:	ldr	r0, [fp, #-16]
   32428:	ldrh	r1, [fp, #-18]	; 0xffffffee
   3242c:	bl	32324 <flatcc_verify_struct_as_nested_root@@Base+0x128>
   32430:	str	r0, [fp, #-36]	; 0xffffffdc
   32434:	movw	r1, #0
   32438:	cmp	r1, r0
   3243c:	bne	3244c <flatcc_verify_table_as_nested_root@@Base+0xbc>
   32440:	movw	r0, #0
   32444:	str	r0, [fp, #-12]
   32448:	b	3252c <flatcc_verify_table_as_nested_root@@Base+0x19c>
   3244c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32450:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32454:	str	r0, [sp, #32]
   32458:	mov	r0, r1
   3245c:	movw	r1, #0
   32460:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   32464:	ldr	r1, [sp, #32]
   32468:	add	r0, r1, r0
   3246c:	str	r0, [fp, #-36]	; 0xffffffdc
   32470:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32474:	movw	r1, #0
   32478:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   3247c:	str	r0, [sp, #40]	; 0x28
   32480:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32484:	add	r0, r0, #4
   32488:	str	r0, [fp, #-36]	; 0xffffffdc
   3248c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32490:	ldr	r1, [sp, #40]	; 0x28
   32494:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32498:	bl	31c28 <flatcc_verify_buffer_header@@Base>
   3249c:	cmp	r0, #0
   324a0:	beq	324bc <flatcc_verify_table_as_nested_root@@Base+0x12c>
   324a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   324a8:	ldr	r1, [sp, #40]	; 0x28
   324ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   324b0:	bl	31c28 <flatcc_verify_buffer_header@@Base>
   324b4:	str	r0, [fp, #-12]
   324b8:	b	3252c <flatcc_verify_table_as_nested_root@@Base+0x19c>
   324bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   324c0:	ldr	r1, [sp, #40]	; 0x28
   324c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   324c8:	str	r0, [sp, #28]
   324cc:	mov	r0, r2
   324d0:	movw	r2, #0
   324d4:	str	r1, [sp, #24]
   324d8:	mov	r1, r2
   324dc:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   324e0:	ldr	r1, [fp, #-16]
   324e4:	ldr	r1, [r1, #8]
   324e8:	ldr	r2, [fp, #12]
   324ec:	ldr	r3, [sp, #28]
   324f0:	str	r0, [sp, #20]
   324f4:	mov	r0, r3
   324f8:	ldr	ip, [sp, #24]
   324fc:	str	r1, [sp, #16]
   32500:	mov	r1, ip
   32504:	movw	lr, #0
   32508:	str	r2, [sp, #12]
   3250c:	mov	r2, lr
   32510:	ldr	r3, [sp, #20]
   32514:	ldr	lr, [sp, #16]
   32518:	str	lr, [sp]
   3251c:	ldr	r4, [sp, #12]
   32520:	str	r4, [sp, #4]
   32524:	bl	313dc <flatcc_verify_table_field@@Base+0xf0>
   32528:	str	r0, [fp, #-12]
   3252c:	ldr	r0, [fp, #-12]
   32530:	sub	sp, fp, #8
   32534:	pop	{r4, sl, fp, pc}

00032538 <flatcc_verify_union_field@@Base>:
   32538:	push	{fp, lr}
   3253c:	mov	fp, sp
   32540:	sub	sp, sp, #88	; 0x58
   32544:	str	r0, [fp, #-8]
   32548:	strh	r1, [fp, #-10]
   3254c:	str	r2, [fp, #-16]
   32550:	str	r3, [fp, #-20]	; 0xffffffec
   32554:	ldr	r0, [fp, #-8]
   32558:	ldrh	r1, [fp, #-10]
   3255c:	sub	r1, r1, #1
   32560:	uxth	r1, r1
   32564:	bl	327c8 <flatcc_verify_union_field@@Base+0x290>
   32568:	strh	r0, [fp, #-22]	; 0xffffffea
   3256c:	uxth	r0, r0
   32570:	movw	r1, #0
   32574:	cmp	r1, r0
   32578:	bne	3260c <flatcc_verify_union_field@@Base+0xd4>
   3257c:	ldr	r0, [fp, #-8]
   32580:	ldrh	r1, [fp, #-10]
   32584:	bl	327c8 <flatcc_verify_union_field@@Base+0x290>
   32588:	strh	r0, [fp, #-24]	; 0xffffffe8
   3258c:	ldrh	r0, [fp, #-24]	; 0xffffffe8
   32590:	cmp	r0, #0
   32594:	movw	r0, #0
   32598:	moveq	r0, #1
   3259c:	and	r0, r0, #1
   325a0:	str	r0, [sp, #28]
   325a4:	ldr	r0, [sp, #28]
   325a8:	cmp	r0, #0
   325ac:	bne	325bc <flatcc_verify_union_field@@Base+0x84>
   325b0:	movw	r0, #23
   325b4:	str	r0, [fp, #-4]
   325b8:	b	327bc <flatcc_verify_union_field@@Base+0x284>
   325bc:	b	325c0 <flatcc_verify_union_field@@Base+0x88>
   325c0:	b	325c4 <flatcc_verify_union_field@@Base+0x8c>
   325c4:	ldr	r0, [fp, #-16]
   325c8:	cmp	r0, #0
   325cc:	movw	r0, #0
   325d0:	movne	r0, #1
   325d4:	mvn	r1, #0
   325d8:	eor	r0, r0, r1
   325dc:	and	r0, r0, #1
   325e0:	str	r0, [sp, #24]
   325e4:	ldr	r0, [sp, #24]
   325e8:	cmp	r0, #0
   325ec:	bne	325fc <flatcc_verify_union_field@@Base+0xc4>
   325f0:	movw	r0, #21
   325f4:	str	r0, [fp, #-4]
   325f8:	b	327bc <flatcc_verify_union_field@@Base+0x284>
   325fc:	b	32600 <flatcc_verify_union_field@@Base+0xc8>
   32600:	movw	r0, #0
   32604:	str	r0, [fp, #-4]
   32608:	b	327bc <flatcc_verify_union_field@@Base+0x284>
   3260c:	ldr	r0, [fp, #-8]
   32610:	ldrh	r1, [fp, #-10]
   32614:	sub	r1, r1, #1
   32618:	uxth	r1, r1
   3261c:	movw	r2, #0
   32620:	movw	r3, #1
   32624:	movw	ip, #1
   32628:	uxth	ip, ip
   3262c:	str	ip, [sp]
   32630:	bl	30950 <flatcc_verify_field@@Base+0x80>
   32634:	cmp	r0, #0
   32638:	beq	3266c <flatcc_verify_union_field@@Base+0x134>
   3263c:	ldr	r0, [fp, #-8]
   32640:	ldrh	r1, [fp, #-10]
   32644:	sub	r1, r1, #1
   32648:	uxth	r1, r1
   3264c:	movw	r2, #0
   32650:	movw	r3, #1
   32654:	movw	ip, #1
   32658:	uxth	ip, ip
   3265c:	str	ip, [sp]
   32660:	bl	30950 <flatcc_verify_field@@Base+0x80>
   32664:	str	r0, [fp, #-4]
   32668:	b	327bc <flatcc_verify_union_field@@Base+0x284>
   3266c:	ldr	r0, [fp, #-8]
   32670:	ldrh	r1, [fp, #-10]
   32674:	bl	327c8 <flatcc_verify_union_field@@Base+0x290>
   32678:	strh	r0, [fp, #-24]	; 0xffffffe8
   3267c:	ldr	r0, [fp, #-8]
   32680:	ldr	r0, [r0]
   32684:	ldr	r1, [fp, #-8]
   32688:	ldr	r1, [r1, #16]
   3268c:	add	r0, r0, r1
   32690:	ldrh	r1, [fp, #-22]	; 0xffffffea
   32694:	add	r0, r0, r1
   32698:	str	r0, [fp, #-28]	; 0xffffffe4
   3269c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   326a0:	ldrb	r0, [r0]
   326a4:	cmp	r0, #0
   326a8:	movw	r0, #1
   326ac:	str	r0, [sp, #12]
   326b0:	bne	326c8 <flatcc_verify_union_field@@Base+0x190>
   326b4:	ldrh	r0, [fp, #-24]	; 0xffffffe8
   326b8:	cmp	r0, #0
   326bc:	movw	r0, #0
   326c0:	moveq	r0, #1
   326c4:	str	r0, [sp, #12]
   326c8:	ldr	r0, [sp, #12]
   326cc:	and	r0, r0, #1
   326d0:	str	r0, [sp, #20]
   326d4:	ldr	r0, [sp, #20]
   326d8:	cmp	r0, #0
   326dc:	bne	326ec <flatcc_verify_union_field@@Base+0x1b4>
   326e0:	movw	r0, #24
   326e4:	str	r0, [fp, #-4]
   326e8:	b	327bc <flatcc_verify_union_field@@Base+0x284>
   326ec:	b	326f0 <flatcc_verify_union_field@@Base+0x1b8>
   326f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   326f4:	ldrb	r0, [r0]
   326f8:	cmp	r0, #0
   326fc:	bne	3270c <flatcc_verify_union_field@@Base+0x1d4>
   32700:	movw	r0, #0
   32704:	str	r0, [fp, #-4]
   32708:	b	327bc <flatcc_verify_union_field@@Base+0x284>
   3270c:	b	32710 <flatcc_verify_union_field@@Base+0x1d8>
   32710:	ldr	r0, [fp, #-8]
   32714:	ldrh	r1, [fp, #-10]
   32718:	ldr	r2, [fp, #-16]
   3271c:	uxth	r1, r1
   32720:	sub	r3, fp, #32
   32724:	bl	30b9c <flatcc_verify_string_field@@Base+0xc0>
   32728:	str	r0, [sp, #16]
   3272c:	ldr	r0, [sp, #16]
   32730:	cmp	r0, #0
   32734:	bne	32744 <flatcc_verify_union_field@@Base+0x20c>
   32738:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3273c:	cmp	r0, #0
   32740:	bne	32750 <flatcc_verify_union_field@@Base+0x218>
   32744:	ldr	r0, [sp, #16]
   32748:	str	r0, [fp, #-4]
   3274c:	b	327bc <flatcc_verify_union_field@@Base+0x284>
   32750:	b	32754 <flatcc_verify_union_field@@Base+0x21c>
   32754:	ldr	r0, [fp, #-8]
   32758:	ldr	r0, [r0]
   3275c:	str	r0, [sp, #32]
   32760:	ldr	r0, [fp, #-8]
   32764:	ldr	r0, [r0, #4]
   32768:	str	r0, [sp, #36]	; 0x24
   3276c:	ldr	r0, [fp, #-8]
   32770:	ldr	r0, [r0, #8]
   32774:	str	r0, [sp, #40]	; 0x28
   32778:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3277c:	str	r0, [sp, #48]	; 0x30
   32780:	ldr	r0, [fp, #-8]
   32784:	ldr	r0, [r0]
   32788:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3278c:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   32790:	str	r0, [sp, #52]	; 0x34
   32794:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32798:	ldrb	r0, [r0]
   3279c:	strb	r0, [sp, #44]	; 0x2c
   327a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   327a4:	add	r1, sp, #32
   327a8:	str	r0, [sp, #8]
   327ac:	mov	r0, r1
   327b0:	ldr	r1, [sp, #8]
   327b4:	blx	r1
   327b8:	str	r0, [fp, #-4]
   327bc:	ldr	r0, [fp, #-4]
   327c0:	mov	sp, fp
   327c4:	pop	{fp, pc}
   327c8:	push	{fp, lr}
   327cc:	mov	fp, sp
   327d0:	sub	sp, sp, #16
   327d4:	str	r0, [sp, #8]
   327d8:	strh	r1, [sp, #6]
   327dc:	ldrh	r0, [sp, #6]
   327e0:	add	r0, r0, #2
   327e4:	lsl	r0, r0, #1
   327e8:	strh	r0, [sp, #4]
   327ec:	ldrh	r0, [sp, #4]
   327f0:	ldr	r1, [sp, #8]
   327f4:	ldrh	r1, [r1, #22]
   327f8:	cmp	r0, r1
   327fc:	blt	3280c <flatcc_verify_union_field@@Base+0x2d4>
   32800:	movw	r0, #0
   32804:	str	r0, [fp, #-4]
   32808:	b	32824 <flatcc_verify_union_field@@Base+0x2ec>
   3280c:	ldr	r0, [sp, #8]
   32810:	ldr	r0, [r0, #12]
   32814:	ldrh	r1, [sp, #4]
   32818:	bl	32f18 <flatcc_verify_union_vector_field@@Base+0x6e8>
   3281c:	uxth	r0, r0
   32820:	str	r0, [fp, #-4]
   32824:	ldr	r0, [fp, #-4]
   32828:	mov	sp, fp
   3282c:	pop	{fp, pc}

00032830 <flatcc_verify_union_vector_field@@Base>:
   32830:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   32834:	add	fp, sp, #24
   32838:	sub	sp, sp, #96	; 0x60
   3283c:	str	r0, [fp, #-32]	; 0xffffffe0
   32840:	strh	r1, [fp, #-34]	; 0xffffffde
   32844:	str	r2, [fp, #-40]	; 0xffffffd8
   32848:	str	r3, [fp, #-44]	; 0xffffffd4
   3284c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32850:	ldrh	r1, [fp, #-34]	; 0xffffffde
   32854:	sub	r1, r1, #1
   32858:	uxth	r1, r1
   3285c:	bl	327c8 <flatcc_verify_union_field@@Base+0x290>
   32860:	strh	r0, [fp, #-46]	; 0xffffffd2
   32864:	uxth	r0, r0
   32868:	movw	r1, #0
   3286c:	cmp	r1, r0
   32870:	bne	328dc <flatcc_verify_union_vector_field@@Base+0xac>
   32874:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32878:	ldrh	r1, [fp, #-34]	; 0xffffffde
   3287c:	bl	327c8 <flatcc_verify_union_field@@Base+0x290>
   32880:	strh	r0, [fp, #-48]	; 0xffffffd0
   32884:	uxth	r0, r0
   32888:	movw	r1, #0
   3288c:	cmp	r1, r0
   32890:	bne	328d8 <flatcc_verify_union_vector_field@@Base+0xa8>
   32894:	b	32898 <flatcc_verify_union_vector_field@@Base+0x68>
   32898:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3289c:	cmp	r0, #0
   328a0:	movw	r0, #0
   328a4:	movne	r0, #1
   328a8:	mvn	r1, #0
   328ac:	eor	r0, r0, r1
   328b0:	and	r0, r0, #1
   328b4:	str	r0, [sp, #52]	; 0x34
   328b8:	ldr	r0, [sp, #52]	; 0x34
   328bc:	cmp	r0, #0
   328c0:	bne	328d0 <flatcc_verify_union_vector_field@@Base+0xa0>
   328c4:	movw	r0, #22
   328c8:	str	r0, [fp, #-28]	; 0xffffffe4
   328cc:	b	32aa8 <flatcc_verify_union_vector_field@@Base+0x278>
   328d0:	b	328d4 <flatcc_verify_union_vector_field@@Base+0xa4>
   328d4:	b	328d8 <flatcc_verify_union_vector_field@@Base+0xa8>
   328d8:	b	328dc <flatcc_verify_union_vector_field@@Base+0xac>
   328dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   328e0:	ldrh	r1, [fp, #-34]	; 0xffffffde
   328e4:	sub	r1, r1, #1
   328e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   328ec:	uxth	r1, r1
   328f0:	movw	r3, #1
   328f4:	movw	ip, #1
   328f8:	uxth	ip, ip
   328fc:	str	ip, [sp]
   32900:	mvn	ip, #0
   32904:	str	ip, [sp, #4]
   32908:	bl	30e38 <flatcc_verify_vector_field@@Base>
   3290c:	cmp	r0, #0
   32910:	beq	3294c <flatcc_verify_union_vector_field@@Base+0x11c>
   32914:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32918:	ldrh	r1, [fp, #-34]	; 0xffffffde
   3291c:	sub	r1, r1, #1
   32920:	ldr	r2, [fp, #-40]	; 0xffffffd8
   32924:	uxth	r1, r1
   32928:	movw	r3, #1
   3292c:	movw	ip, #1
   32930:	uxth	ip, ip
   32934:	str	ip, [sp]
   32938:	mvn	ip, #0
   3293c:	str	ip, [sp, #4]
   32940:	bl	30e38 <flatcc_verify_vector_field@@Base>
   32944:	str	r0, [fp, #-28]	; 0xffffffe4
   32948:	b	32aa8 <flatcc_verify_union_vector_field@@Base+0x278>
   3294c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32950:	ldrh	r1, [fp, #-34]	; 0xffffffde
   32954:	sub	r1, r1, #1
   32958:	uxth	r1, r1
   3295c:	bl	32324 <flatcc_verify_struct_as_nested_root@@Base+0x128>
   32960:	str	r0, [fp, #-52]	; 0xffffffcc
   32964:	movw	r1, #0
   32968:	cmp	r1, r0
   3296c:	bne	3297c <flatcc_verify_union_vector_field@@Base+0x14c>
   32970:	movw	r0, #0
   32974:	str	r0, [fp, #-28]	; 0xffffffe4
   32978:	b	32aa8 <flatcc_verify_union_vector_field@@Base+0x278>
   3297c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   32980:	ldr	r1, [fp, #-52]	; 0xffffffcc
   32984:	str	r0, [sp, #44]	; 0x2c
   32988:	mov	r0, r1
   3298c:	movw	r1, #0
   32990:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   32994:	ldr	r1, [sp, #44]	; 0x2c
   32998:	add	r0, r1, r0
   3299c:	str	r0, [fp, #-52]	; 0xffffffcc
   329a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   329a4:	movw	r1, #0
   329a8:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   329ac:	str	r0, [sp, #60]	; 0x3c
   329b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   329b4:	add	r0, r0, #4
   329b8:	str	r0, [fp, #-52]	; 0xffffffcc
   329bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   329c0:	str	r0, [fp, #-56]	; 0xffffffc8
   329c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   329c8:	ldrh	r1, [fp, #-34]	; 0xffffffde
   329cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   329d0:	uxth	r1, r1
   329d4:	add	r3, sp, #56	; 0x38
   329d8:	bl	30b9c <flatcc_verify_string_field@@Base+0xc0>
   329dc:	str	r0, [sp, #48]	; 0x30
   329e0:	ldr	r0, [sp, #48]	; 0x30
   329e4:	cmp	r0, #0
   329e8:	bne	329f8 <flatcc_verify_union_vector_field@@Base+0x1c8>
   329ec:	ldr	r0, [sp, #56]	; 0x38
   329f0:	cmp	r0, #0
   329f4:	bne	32a04 <flatcc_verify_union_vector_field@@Base+0x1d4>
   329f8:	ldr	r0, [sp, #48]	; 0x30
   329fc:	str	r0, [fp, #-28]	; 0xffffffe4
   32a00:	b	32aa8 <flatcc_verify_union_vector_field@@Base+0x278>
   32a04:	b	32a08 <flatcc_verify_union_vector_field@@Base+0x1d8>
   32a08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32a0c:	ldr	r0, [r0]
   32a10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32a14:	ldr	r1, [r1, #4]
   32a18:	ldr	r2, [sp, #56]	; 0x38
   32a1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32a20:	ldr	r3, [r3]
   32a24:	ldr	ip, [sp, #56]	; 0x38
   32a28:	str	r0, [sp, #40]	; 0x28
   32a2c:	mov	r0, r3
   32a30:	str	r1, [sp, #36]	; 0x24
   32a34:	mov	r1, ip
   32a38:	str	r2, [sp, #32]
   32a3c:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   32a40:	ldr	r1, [sp, #60]	; 0x3c
   32a44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   32a48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32a4c:	ldr	r3, [r3, #8]
   32a50:	ldr	ip, [fp, #-44]	; 0xffffffd4
   32a54:	ldr	lr, [sp, #40]	; 0x28
   32a58:	str	r0, [sp, #28]
   32a5c:	mov	r0, lr
   32a60:	ldr	r4, [sp, #36]	; 0x24
   32a64:	str	r1, [sp, #24]
   32a68:	mov	r1, r4
   32a6c:	ldr	r5, [sp, #32]
   32a70:	str	r2, [sp, #20]
   32a74:	mov	r2, r5
   32a78:	ldr	r6, [sp, #28]
   32a7c:	str	r3, [sp, #16]
   32a80:	mov	r3, r6
   32a84:	ldr	r7, [sp, #24]
   32a88:	str	r7, [sp]
   32a8c:	ldr	r8, [sp, #20]
   32a90:	str	r8, [sp, #4]
   32a94:	ldr	r9, [sp, #16]
   32a98:	str	r9, [sp, #8]
   32a9c:	str	ip, [sp, #12]
   32aa0:	bl	32ab4 <flatcc_verify_union_vector_field@@Base+0x284>
   32aa4:	str	r0, [fp, #-28]	; 0xffffffe4
   32aa8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32aac:	sub	sp, fp, #24
   32ab0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   32ab4:	push	{r4, r5, fp, lr}
   32ab8:	add	fp, sp, #8
   32abc:	sub	sp, sp, #104	; 0x68
   32ac0:	ldr	ip, [fp, #20]
   32ac4:	ldr	lr, [fp, #16]
   32ac8:	ldr	r4, [fp, #12]
   32acc:	ldr	r5, [fp, #8]
   32ad0:	str	r0, [fp, #-16]
   32ad4:	str	r1, [fp, #-20]	; 0xffffffec
   32ad8:	str	r2, [fp, #-24]	; 0xffffffe8
   32adc:	str	r3, [fp, #-28]	; 0xffffffe4
   32ae0:	ldr	r0, [fp, #16]
   32ae4:	mvn	r1, #0
   32ae8:	add	r1, r0, r1
   32aec:	str	r1, [fp, #16]
   32af0:	cmp	r0, #0
   32af4:	movw	r0, #0
   32af8:	movgt	r0, #1
   32afc:	and	r0, r0, #1
   32b00:	str	r0, [sp, #44]	; 0x2c
   32b04:	ldr	r0, [sp, #44]	; 0x2c
   32b08:	cmp	r0, #0
   32b0c:	bne	32b1c <flatcc_verify_union_vector_field@@Base+0x2ec>
   32b10:	movw	r0, #3
   32b14:	str	r0, [fp, #-12]
   32b18:	b	32d8c <flatcc_verify_union_vector_field@@Base+0x55c>
   32b1c:	b	32b20 <flatcc_verify_union_vector_field@@Base+0x2f0>
   32b20:	ldr	r0, [pc, #624]	; 32d98 <flatcc_verify_union_vector_field@@Base+0x568>
   32b24:	ldr	r1, [fp, #-16]
   32b28:	ldr	r2, [fp, #-20]	; 0xffffffec
   32b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32b30:	ldr	ip, [fp, #-28]	; 0xffffffe4
   32b34:	str	r0, [sp, #28]
   32b38:	mov	r0, r1
   32b3c:	mov	r1, r2
   32b40:	mov	r2, r3
   32b44:	mov	r3, ip
   32b48:	movw	ip, #4
   32b4c:	str	ip, [sp]
   32b50:	movw	ip, #4
   32b54:	uxth	ip, ip
   32b58:	str	ip, [sp, #4]
   32b5c:	ldr	ip, [sp, #28]
   32b60:	str	ip, [sp, #8]
   32b64:	bl	30f48 <flatcc_verify_vector_field@@Base+0x110>
   32b68:	cmp	r0, #0
   32b6c:	beq	32bc0 <flatcc_verify_union_vector_field@@Base+0x390>
   32b70:	ldr	r0, [pc, #544]	; 32d98 <flatcc_verify_union_vector_field@@Base+0x568>
   32b74:	ldr	r1, [fp, #-16]
   32b78:	ldr	r2, [fp, #-20]	; 0xffffffec
   32b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32b80:	ldr	ip, [fp, #-28]	; 0xffffffe4
   32b84:	str	r0, [sp, #24]
   32b88:	mov	r0, r1
   32b8c:	mov	r1, r2
   32b90:	mov	r2, r3
   32b94:	mov	r3, ip
   32b98:	movw	ip, #4
   32b9c:	str	ip, [sp]
   32ba0:	movw	ip, #4
   32ba4:	uxth	ip, ip
   32ba8:	str	ip, [sp, #4]
   32bac:	ldr	ip, [sp, #24]
   32bb0:	str	ip, [sp, #8]
   32bb4:	bl	30f48 <flatcc_verify_vector_field@@Base+0x110>
   32bb8:	str	r0, [fp, #-12]
   32bbc:	b	32d8c <flatcc_verify_union_vector_field@@Base+0x55c>
   32bc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32bc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32bc8:	add	r0, r1, r0
   32bcc:	str	r0, [fp, #-24]	; 0xffffffe8
   32bd0:	ldr	r0, [fp, #-16]
   32bd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32bd8:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   32bdc:	str	r0, [fp, #-36]	; 0xffffffdc
   32be0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32be4:	ldr	r1, [fp, #8]
   32be8:	cmp	r0, r1
   32bec:	movw	r0, #0
   32bf0:	moveq	r0, #1
   32bf4:	and	r0, r0, #1
   32bf8:	str	r0, [sp, #40]	; 0x28
   32bfc:	ldr	r0, [sp, #40]	; 0x28
   32c00:	cmp	r0, #0
   32c04:	bne	32c14 <flatcc_verify_union_vector_field@@Base+0x3e4>
   32c08:	movw	r0, #34	; 0x22
   32c0c:	str	r0, [fp, #-12]
   32c10:	b	32d8c <flatcc_verify_union_vector_field@@Base+0x55c>
   32c14:	b	32c18 <flatcc_verify_union_vector_field@@Base+0x3e8>
   32c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32c1c:	add	r0, r0, #4
   32c20:	str	r0, [fp, #-24]	; 0xffffffe8
   32c24:	ldr	r0, [fp, #-16]
   32c28:	str	r0, [sp, #48]	; 0x30
   32c2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   32c30:	str	r0, [sp, #52]	; 0x34
   32c34:	ldr	r0, [fp, #16]
   32c38:	str	r0, [sp, #56]	; 0x38
   32c3c:	movw	r0, #0
   32c40:	str	r0, [fp, #-32]	; 0xffffffe0
   32c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32c48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32c4c:	cmp	r0, r1
   32c50:	bcs	32d84 <flatcc_verify_union_vector_field@@Base+0x554>
   32c54:	ldr	r0, [fp, #-16]
   32c58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32c5c:	bl	30e0c <flatcc_verify_string_field@@Base+0x330>
   32c60:	str	r0, [fp, #-40]	; 0xffffffd8
   32c64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32c68:	cmp	r0, #0
   32c6c:	bne	32cb8 <flatcc_verify_union_vector_field@@Base+0x488>
   32c70:	b	32c74 <flatcc_verify_union_vector_field@@Base+0x444>
   32c74:	ldr	r0, [fp, #12]
   32c78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32c7c:	add	r0, r0, r1
   32c80:	ldrb	r0, [r0]
   32c84:	cmp	r0, #0
   32c88:	movw	r0, #0
   32c8c:	moveq	r0, #1
   32c90:	and	r0, r0, #1
   32c94:	str	r0, [sp, #36]	; 0x24
   32c98:	ldr	r0, [sp, #36]	; 0x24
   32c9c:	cmp	r0, #0
   32ca0:	bne	32cb0 <flatcc_verify_union_vector_field@@Base+0x480>
   32ca4:	movw	r0, #32
   32ca8:	str	r0, [fp, #-12]
   32cac:	b	32d8c <flatcc_verify_union_vector_field@@Base+0x55c>
   32cb0:	b	32cb4 <flatcc_verify_union_vector_field@@Base+0x484>
   32cb4:	b	32d64 <flatcc_verify_union_vector_field@@Base+0x534>
   32cb8:	b	32cbc <flatcc_verify_union_vector_field@@Base+0x48c>
   32cbc:	ldr	r0, [fp, #12]
   32cc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32cc4:	add	r0, r0, r1
   32cc8:	ldrb	r0, [r0]
   32ccc:	cmp	r0, #0
   32cd0:	movw	r0, #0
   32cd4:	movne	r0, #1
   32cd8:	and	r0, r0, #1
   32cdc:	str	r0, [sp, #32]
   32ce0:	ldr	r0, [sp, #32]
   32ce4:	cmp	r0, #0
   32ce8:	bne	32cf8 <flatcc_verify_union_vector_field@@Base+0x4c8>
   32cec:	movw	r0, #33	; 0x21
   32cf0:	str	r0, [fp, #-12]
   32cf4:	b	32d8c <flatcc_verify_union_vector_field@@Base+0x55c>
   32cf8:	b	32cfc <flatcc_verify_union_vector_field@@Base+0x4cc>
   32cfc:	ldr	r0, [fp, #12]
   32d00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32d04:	add	r0, r0, r1
   32d08:	ldrb	r0, [r0]
   32d0c:	strb	r0, [sp, #60]	; 0x3c
   32d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32d14:	str	r0, [sp, #64]	; 0x40
   32d18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32d1c:	str	r0, [sp, #68]	; 0x44
   32d20:	ldr	r0, [fp, #20]
   32d24:	add	r1, sp, #48	; 0x30
   32d28:	str	r0, [sp, #20]
   32d2c:	mov	r0, r1
   32d30:	ldr	r1, [sp, #20]
   32d34:	blx	r1
   32d38:	cmp	r0, #0
   32d3c:	beq	32d60 <flatcc_verify_union_vector_field@@Base+0x530>
   32d40:	ldr	r0, [fp, #20]
   32d44:	add	r1, sp, #48	; 0x30
   32d48:	str	r0, [sp, #16]
   32d4c:	mov	r0, r1
   32d50:	ldr	r1, [sp, #16]
   32d54:	blx	r1
   32d58:	str	r0, [fp, #-12]
   32d5c:	b	32d8c <flatcc_verify_union_vector_field@@Base+0x55c>
   32d60:	b	32d64 <flatcc_verify_union_vector_field@@Base+0x534>
   32d64:	b	32d68 <flatcc_verify_union_vector_field@@Base+0x538>
   32d68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32d6c:	add	r0, r0, #1
   32d70:	str	r0, [fp, #-32]	; 0xffffffe0
   32d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32d78:	add	r0, r0, #4
   32d7c:	str	r0, [fp, #-24]	; 0xffffffe8
   32d80:	b	32c44 <flatcc_verify_union_vector_field@@Base+0x414>
   32d84:	movw	r0, #0
   32d88:	str	r0, [fp, #-12]
   32d8c:	ldr	r0, [fp, #-12]
   32d90:	sub	sp, fp, #8
   32d94:	pop	{r4, r5, fp, pc}
   32d98:	svccc	0x00ffffff
   32d9c:	sub	sp, sp, #20
   32da0:	str	r0, [sp, #16]
   32da4:	str	r1, [sp, #12]
   32da8:	str	r2, [sp, #8]
   32dac:	ldr	r0, [sp, #12]
   32db0:	ldr	r1, [sp, #8]
   32db4:	add	r0, r0, r1
   32db8:	str	r0, [sp, #4]
   32dbc:	ldr	r0, [sp, #4]
   32dc0:	ldr	r1, [sp, #12]
   32dc4:	cmp	r0, r1
   32dc8:	movw	r0, #0
   32dcc:	str	r0, [sp]
   32dd0:	bls	32e10 <flatcc_verify_union_vector_field@@Base+0x5e0>
   32dd4:	ldr	r0, [sp, #4]
   32dd8:	add	r0, r0, #4
   32ddc:	ldr	r1, [sp, #16]
   32de0:	cmp	r0, r1
   32de4:	movw	r0, #0
   32de8:	str	r0, [sp]
   32dec:	bhi	32e10 <flatcc_verify_union_vector_field@@Base+0x5e0>
   32df0:	ldr	r0, [sp, #4]
   32df4:	and	r0, r0, #3
   32df8:	cmp	r0, #0
   32dfc:	movw	r0, #0
   32e00:	movne	r0, #1
   32e04:	mvn	r1, #0
   32e08:	eor	r0, r0, r1
   32e0c:	str	r0, [sp]
   32e10:	ldr	r0, [sp]
   32e14:	and	r0, r0, #1
   32e18:	add	sp, sp, #20
   32e1c:	bx	lr
   32e20:	push	{fp, lr}
   32e24:	mov	fp, sp
   32e28:	sub	sp, sp, #8
   32e2c:	str	r0, [sp, #4]
   32e30:	ldr	r0, [sp, #4]
   32e34:	ldr	r0, [r0]
   32e38:	bl	32e44 <flatcc_verify_union_vector_field@@Base+0x614>
   32e3c:	mov	sp, fp
   32e40:	pop	{fp, pc}
   32e44:	sub	sp, sp, #4
   32e48:	str	r0, [sp]
   32e4c:	ldr	r0, [sp]
   32e50:	add	sp, sp, #4
   32e54:	bx	lr
   32e58:	sub	sp, sp, #28
   32e5c:	str	r0, [sp, #24]
   32e60:	str	r1, [sp, #20]
   32e64:	str	r2, [sp, #16]
   32e68:	strh	r3, [sp, #14]
   32e6c:	ldr	r0, [sp, #20]
   32e70:	ldr	r1, [sp, #16]
   32e74:	add	r0, r0, r1
   32e78:	str	r0, [sp, #8]
   32e7c:	ldrh	r0, [sp, #14]
   32e80:	cmp	r0, #4
   32e84:	bcs	32e94 <flatcc_verify_union_vector_field@@Base+0x664>
   32e88:	movw	r0, #4
   32e8c:	str	r0, [sp, #4]
   32e90:	b	32e9c <flatcc_verify_union_vector_field@@Base+0x66c>
   32e94:	ldrh	r0, [sp, #14]
   32e98:	str	r0, [sp, #4]
   32e9c:	ldr	r0, [sp, #4]
   32ea0:	strh	r0, [sp, #14]
   32ea4:	ldr	r0, [sp, #8]
   32ea8:	ldr	r1, [sp, #20]
   32eac:	cmp	r0, r1
   32eb0:	movw	r0, #0
   32eb4:	str	r0, [sp]
   32eb8:	bls	32f08 <flatcc_verify_union_vector_field@@Base+0x6d8>
   32ebc:	ldr	r0, [sp, #8]
   32ec0:	add	r0, r0, #4
   32ec4:	ldr	r1, [sp, #24]
   32ec8:	cmp	r0, r1
   32ecc:	movw	r0, #0
   32ed0:	str	r0, [sp]
   32ed4:	bhi	32f08 <flatcc_verify_union_vector_field@@Base+0x6d8>
   32ed8:	ldr	r0, [sp, #8]
   32edc:	add	r0, r0, #4
   32ee0:	ldrh	r1, [sp, #14]
   32ee4:	sub	r1, r1, #1
   32ee8:	orr	r1, r1, #3
   32eec:	and	r0, r0, r1
   32ef0:	cmp	r0, #0
   32ef4:	movw	r0, #0
   32ef8:	movne	r0, #1
   32efc:	mvn	r1, #0
   32f00:	eor	r0, r0, r1
   32f04:	str	r0, [sp]
   32f08:	ldr	r0, [sp]
   32f0c:	and	r0, r0, #1
   32f10:	add	sp, sp, #28
   32f14:	bx	lr
   32f18:	push	{fp, lr}
   32f1c:	mov	fp, sp
   32f20:	sub	sp, sp, #8
   32f24:	str	r0, [sp, #4]
   32f28:	str	r1, [sp]
   32f2c:	ldr	r0, [sp, #4]
   32f30:	ldr	r1, [sp]
   32f34:	add	r0, r0, r1
   32f38:	bl	32f48 <flatcc_verify_union_vector_field@@Base+0x718>
   32f3c:	uxth	r0, r0
   32f40:	mov	sp, fp
   32f44:	pop	{fp, pc}
   32f48:	push	{fp, lr}
   32f4c:	mov	fp, sp
   32f50:	sub	sp, sp, #8
   32f54:	str	r0, [sp, #4]
   32f58:	ldr	r0, [sp, #4]
   32f5c:	ldrh	r0, [r0]
   32f60:	bl	32f70 <flatcc_verify_union_vector_field@@Base+0x740>
   32f64:	uxth	r0, r0
   32f68:	mov	sp, fp
   32f6c:	pop	{fp, pc}
   32f70:	sub	sp, sp, #4
   32f74:	strh	r0, [sp, #2]
   32f78:	ldrh	r0, [sp, #2]
   32f7c:	add	sp, sp, #4
   32f80:	bx	lr
   32f84:	sub	sp, sp, #4
   32f88:	str	r0, [sp]
   32f8c:	ldr	r0, [sp]
   32f90:	add	sp, sp, #4
   32f94:	bx	lr
   32f98:	push	{fp, lr}
   32f9c:	mov	fp, sp
   32fa0:	sub	sp, sp, #8
   32fa4:	str	r0, [sp, #4]
   32fa8:	ldr	r0, [sp, #4]
   32fac:	ldr	r0, [r0]
   32fb0:	bl	32fbc <flatcc_verify_union_vector_field@@Base+0x78c>
   32fb4:	mov	sp, fp
   32fb8:	pop	{fp, pc}
   32fbc:	sub	sp, sp, #4
   32fc0:	str	r0, [sp]
   32fc4:	ldr	r0, [sp]
   32fc8:	add	sp, sp, #4
   32fcc:	bx	lr

00032fd0 <grisu3_diy_fp_encode_double@@Base>:
   32fd0:	push	{r4, r5, r6, sl, fp, lr}
   32fd4:	add	fp, sp, #16
   32fd8:	sub	sp, sp, #256	; 0x100
   32fdc:	ldr	ip, [fp, #12]
   32fe0:	ldr	lr, [fp, #8]
   32fe4:	str	r0, [fp, #-24]	; 0xffffffe8
   32fe8:	str	r1, [fp, #-20]	; 0xffffffec
   32fec:	str	r2, [fp, #-28]	; 0xffffffe4
   32ff0:	str	r3, [fp, #-32]	; 0xffffffe0
   32ff4:	mov	r0, #3
   32ff8:	str	r0, [fp, #-36]	; 0xffffffdc
   32ffc:	mov	r0, #8
   33000:	str	r0, [fp, #-40]	; 0xffffffd8
   33004:	movw	r0, #64462	; 0xfbce
   33008:	movt	r0, #65535	; 0xffff
   3300c:	str	r0, [fp, #-44]	; 0xffffffd4
   33010:	mov	r0, #1048576	; 0x100000
   33014:	str	r0, [fp, #-52]	; 0xffffffcc
   33018:	mov	r0, #0
   3301c:	str	r0, [fp, #-56]	; 0xffffffc8
   33020:	mov	r1, #64	; 0x40
   33024:	str	r1, [fp, #-60]	; 0xffffffc4
   33028:	mov	r1, #19
   3302c:	str	r1, [fp, #-64]	; 0xffffffc0
   33030:	ldr	r1, [fp, #8]
   33034:	cmp	r1, #0
   33038:	movwne	r1, #1
   3303c:	lsl	r1, r1, #2
   33040:	str	r1, [fp, #-68]	; 0xffffffbc
   33044:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33048:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3304c:	sub	r1, r1, r2
   33050:	str	r1, [fp, #-72]	; 0xffffffb8
   33054:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33058:	ldr	r2, [fp, #-20]	; 0xffffffec
   3305c:	str	r2, [fp, #-92]	; 0xffffffa4
   33060:	str	r1, [fp, #-96]	; 0xffffffa0
   33064:	str	r0, [fp, #-88]	; 0xffffffa8
   33068:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3306c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   33070:	ldr	r0, [fp, #-88]	; 0xffffffa8
   33074:	ldr	r1, [fp, #-84]	; 0xffffffac
   33078:	mov	r4, sp
   3307c:	str	r0, [r4]
   33080:	str	r1, [r4, #4]
   33084:	add	r0, sp, #112	; 0x70
   33088:	str	ip, [sp, #48]	; 0x30
   3308c:	str	lr, [sp, #44]	; 0x2c
   33090:	bl	33528 <grisu3_diy_fp_encode_double@@Base+0x558>
   33094:	ldr	r0, [sp, #112]	; 0x70
   33098:	str	r0, [fp, #-96]	; 0xffffffa0
   3309c:	ldr	r0, [sp, #116]	; 0x74
   330a0:	str	r0, [fp, #-92]	; 0xffffffa4
   330a4:	ldr	r0, [sp, #120]	; 0x78
   330a8:	str	r0, [fp, #-88]	; 0xffffffa8
   330ac:	ldr	r0, [sp, #124]	; 0x7c
   330b0:	str	r0, [fp, #-84]	; 0xffffffac
   330b4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   330b8:	movw	r1, #0
   330bc:	sub	r0, r1, r0
   330c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   330c4:	lsl	r0, r1, r0
   330c8:	str	r0, [fp, #-68]	; 0xffffffbc
   330cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   330d0:	sub	r1, fp, #112	; 0x70
   330d4:	bl	33660 <grisu3_diy_fp_encode_double@@Base+0x690>
   330d8:	str	r0, [fp, #-76]	; 0xffffffb4
   330dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   330e0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   330e4:	cmp	r0, r1
   330e8:	beq	331d4 <grisu3_diy_fp_encode_double@@Base+0x204>
   330ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   330f0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   330f4:	sub	r0, r0, r1
   330f8:	sub	r0, r0, #1
   330fc:	str	r0, [sp, #108]	; 0x6c
   33100:	ldr	r0, [sp, #108]	; 0x6c
   33104:	cmp	r0, #0
   33108:	blt	3311c <grisu3_diy_fp_encode_double@@Base+0x14c>
   3310c:	ldr	r0, [sp, #108]	; 0x6c
   33110:	cmp	r0, #7
   33114:	bge	3311c <grisu3_diy_fp_encode_double@@Base+0x14c>
   33118:	b	3313c <grisu3_diy_fp_encode_double@@Base+0x16c>
   3311c:	ldr	r0, [pc, #1004]	; 33510 <grisu3_diy_fp_encode_double@@Base+0x540>
   33120:	add	r0, pc, r0
   33124:	ldr	r1, [pc, #1000]	; 33514 <grisu3_diy_fp_encode_double@@Base+0x544>
   33128:	add	r1, pc, r1
   3312c:	ldr	r2, [pc, #996]	; 33518 <grisu3_diy_fp_encode_double@@Base+0x548>
   33130:	add	r3, pc, r2
   33134:	movw	r2, #185	; 0xb9
   33138:	bl	14f08 <__assert_fail@plt>
   3313c:	ldr	r0, [sp, #108]	; 0x6c
   33140:	ldr	r1, [pc, #988]	; 33524 <grisu3_diy_fp_encode_double@@Base+0x554>
   33144:	add	r1, pc, r1
   33148:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3314c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   33150:	ldr	ip, [fp, #-88]	; 0xffffffa8
   33154:	ldr	lr, [fp, #-84]	; 0xffffffac
   33158:	ldr	r0, [r1, r0, lsl #4]!
   3315c:	ldr	r4, [r1, #4]
   33160:	ldr	r5, [r1, #8]
   33164:	ldr	r1, [r1, #12]
   33168:	mov	r6, sp
   3316c:	str	r4, [r6, #12]
   33170:	str	r0, [r6, #8]
   33174:	str	r5, [r6, #16]
   33178:	str	ip, [r6]
   3317c:	str	r1, [r6, #20]
   33180:	str	lr, [r6, #4]
   33184:	add	r0, sp, #88	; 0x58
   33188:	bl	33804 <grisu3_diy_fp_encode_double@@Base+0x834>
   3318c:	ldr	r0, [sp, #88]	; 0x58
   33190:	str	r0, [fp, #-96]	; 0xffffffa0
   33194:	ldr	r0, [sp, #92]	; 0x5c
   33198:	str	r0, [fp, #-92]	; 0xffffffa4
   3319c:	ldr	r0, [sp, #96]	; 0x60
   331a0:	str	r0, [fp, #-88]	; 0xffffffa8
   331a4:	ldr	r0, [sp, #100]	; 0x64
   331a8:	str	r0, [fp, #-84]	; 0xffffffac
   331ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   331b0:	add	r0, r0, #1
   331b4:	ldr	r1, [sp, #108]	; 0x6c
   331b8:	add	r0, r0, r1
   331bc:	cmp	r0, #19
   331c0:	ble	331d0 <grisu3_diy_fp_encode_double@@Base+0x200>
   331c4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   331c8:	add	r0, r0, #4
   331cc:	str	r0, [fp, #-68]	; 0xffffffbc
   331d0:	b	331d4 <grisu3_diy_fp_encode_double@@Base+0x204>
   331d4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   331d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   331dc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   331e0:	ldr	r1, [fp, #-84]	; 0xffffffac
   331e4:	ldr	ip, [fp, #-112]	; 0xffffff90
   331e8:	ldr	lr, [fp, #-108]	; 0xffffff94
   331ec:	ldr	r4, [fp, #-104]	; 0xffffff98
   331f0:	ldr	r5, [fp, #-100]	; 0xffffff9c
   331f4:	mov	r6, sp
   331f8:	str	r5, [r6, #20]
   331fc:	str	r4, [r6, #16]
   33200:	str	lr, [r6, #12]
   33204:	str	ip, [r6, #8]
   33208:	str	r1, [r6, #4]
   3320c:	str	r0, [r6]
   33210:	add	r0, sp, #72	; 0x48
   33214:	str	r0, [sp, #40]	; 0x28
   33218:	bl	33804 <grisu3_diy_fp_encode_double@@Base+0x834>
   3321c:	ldr	r0, [sp, #40]	; 0x28
   33220:	vld1.64	{d16-d17}, [r0]
   33224:	sub	r1, fp, #96	; 0x60
   33228:	vst1.64	{d16-d17}, [r1]
   3322c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   33230:	add	r2, r1, #1
   33234:	cmp	r1, #0
   33238:	movne	r1, r2
   3323c:	add	r1, r1, #8
   33240:	str	r1, [fp, #-68]	; 0xffffffbc
   33244:	ldr	r1, [fp, #-88]	; 0xffffffa8
   33248:	str	r1, [fp, #-80]	; 0xffffffb0
   3324c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   33250:	ldr	r3, [fp, #-92]	; 0xffffffa4
   33254:	ldr	r1, [fp, #-88]	; 0xffffffa8
   33258:	ldr	ip, [fp, #-84]	; 0xffffffac
   3325c:	mov	lr, sp
   33260:	str	r1, [lr]
   33264:	str	ip, [lr, #4]
   33268:	add	r0, sp, #56	; 0x38
   3326c:	bl	33528 <grisu3_diy_fp_encode_double@@Base+0x558>
   33270:	ldr	r0, [pc, #676]	; 3351c <grisu3_diy_fp_encode_double@@Base+0x54c>
   33274:	ldr	r1, [sp, #56]	; 0x38
   33278:	str	r1, [fp, #-96]	; 0xffffffa0
   3327c:	ldr	r1, [sp, #60]	; 0x3c
   33280:	str	r1, [fp, #-92]	; 0xffffffa4
   33284:	ldr	r1, [sp, #64]	; 0x40
   33288:	str	r1, [fp, #-88]	; 0xffffffa8
   3328c:	ldr	r1, [sp, #68]	; 0x44
   33290:	str	r1, [fp, #-84]	; 0xffffffac
   33294:	ldr	r1, [fp, #-80]	; 0xffffffb0
   33298:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3329c:	sub	r1, r1, r2
   332a0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   332a4:	lsl	r1, r2, r1
   332a8:	str	r1, [fp, #-68]	; 0xffffffbc
   332ac:	ldr	r1, [fp, #-88]	; 0xffffffa8
   332b0:	add	r1, r1, #64	; 0x40
   332b4:	str	r1, [fp, #-132]	; 0xffffff7c
   332b8:	ldr	r1, [fp, #-132]	; 0xffffff7c
   332bc:	cmp	r1, r0
   332c0:	blt	332d0 <grisu3_diy_fp_encode_double@@Base+0x300>
   332c4:	movw	r0, #64	; 0x40
   332c8:	str	r0, [sp, #36]	; 0x24
   332cc:	b	33304 <grisu3_diy_fp_encode_double@@Base+0x334>
   332d0:	ldr	r0, [pc, #584]	; 33520 <grisu3_diy_fp_encode_double@@Base+0x550>
   332d4:	ldr	r1, [fp, #-132]	; 0xffffff7c
   332d8:	cmp	r1, r0
   332dc:	bgt	332ec <grisu3_diy_fp_encode_double@@Base+0x31c>
   332e0:	movw	r0, #0
   332e4:	str	r0, [sp, #32]
   332e8:	b	332fc <grisu3_diy_fp_encode_double@@Base+0x32c>
   332ec:	ldr	r0, [pc, #556]	; 33520 <grisu3_diy_fp_encode_double@@Base+0x550>
   332f0:	ldr	r1, [fp, #-132]	; 0xffffff7c
   332f4:	sub	r0, r1, r0
   332f8:	str	r0, [sp, #32]
   332fc:	ldr	r0, [sp, #32]
   33300:	str	r0, [sp, #36]	; 0x24
   33304:	ldr	r0, [sp, #36]	; 0x24
   33308:	str	r0, [fp, #-132]	; 0xffffff7c
   3330c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   33310:	movw	r1, #64	; 0x40
   33314:	sub	r0, r1, r0
   33318:	str	r0, [sp, #136]	; 0x88
   3331c:	ldr	r0, [sp, #136]	; 0x88
   33320:	add	r0, r0, #3
   33324:	cmp	r0, #64	; 0x40
   33328:	blt	333a8 <grisu3_diy_fp_encode_double@@Base+0x3d8>
   3332c:	ldr	r0, [sp, #136]	; 0x88
   33330:	sub	r0, r0, #62	; 0x3e
   33334:	str	r0, [sp, #52]	; 0x34
   33338:	ldr	r0, [sp, #52]	; 0x34
   3333c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   33340:	ldr	r2, [fp, #-92]	; 0xffffffa4
   33344:	lsr	r1, r1, r0
   33348:	rsb	r3, r0, #32
   3334c:	orr	r1, r1, r2, lsl r3
   33350:	sub	r3, r0, #32
   33354:	cmp	r3, #0
   33358:	lsrpl	r1, r2, r3
   3335c:	lsr	r0, r2, r0
   33360:	cmp	r3, #0
   33364:	movwpl	r0, #0
   33368:	str	r0, [fp, #-92]	; 0xffffffa4
   3336c:	str	r1, [fp, #-96]	; 0xffffffa0
   33370:	ldr	r0, [sp, #52]	; 0x34
   33374:	ldr	r1, [fp, #-88]	; 0xffffffa8
   33378:	add	r0, r1, r0
   3337c:	str	r0, [fp, #-88]	; 0xffffffa8
   33380:	ldr	r0, [fp, #-68]	; 0xffffffbc
   33384:	ldr	r1, [sp, #52]	; 0x34
   33388:	asr	r0, r0, r1
   3338c:	add	r0, r0, #1
   33390:	add	r0, r0, #8
   33394:	str	r0, [fp, #-68]	; 0xffffffbc
   33398:	ldr	r0, [sp, #52]	; 0x34
   3339c:	ldr	r1, [sp, #136]	; 0x88
   333a0:	sub	r0, r1, r0
   333a4:	str	r0, [sp, #136]	; 0x88
   333a8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   333ac:	ldr	r1, [fp, #-92]	; 0xffffffa4
   333b0:	ldr	r2, [sp, #136]	; 0x88
   333b4:	lsr	r0, r0, r2
   333b8:	rsb	r3, r2, #32
   333bc:	orr	r0, r0, r1, lsl r3
   333c0:	sub	r3, r2, #32
   333c4:	cmp	r3, #0
   333c8:	lsrpl	r0, r1, r3
   333cc:	lsr	r1, r1, r2
   333d0:	cmp	r3, #0
   333d4:	movwpl	r1, #0
   333d8:	str	r1, [fp, #-124]	; 0xffffff84
   333dc:	str	r0, [fp, #-128]	; 0xffffff80
   333e0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   333e4:	ldr	r1, [sp, #136]	; 0x88
   333e8:	add	r0, r0, r1
   333ec:	str	r0, [fp, #-120]	; 0xffffff88
   333f0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   333f4:	ldr	r1, [sp, #136]	; 0x88
   333f8:	sub	r2, r1, #1
   333fc:	mov	r3, #1
   33400:	lsl	r2, r3, r2
   33404:	sub	r1, r1, #33	; 0x21
   33408:	cmp	r1, #0
   3340c:	movwpl	r2, #0
   33410:	and	r0, r0, r2
   33414:	lsl	r0, r0, #3
   33418:	str	r0, [sp, #132]	; 0x84
   3341c:	ldr	r0, [sp, #136]	; 0x88
   33420:	sub	r1, r0, #1
   33424:	lsl	r1, r3, r1
   33428:	sub	r0, r0, #33	; 0x21
   3342c:	cmp	r0, #0
   33430:	movwpl	r1, #0
   33434:	lsl	r0, r1, #3
   33438:	str	r0, [sp, #128]	; 0x80
   3343c:	ldr	r0, [sp, #136]	; 0x88
   33440:	ldr	r1, [sp, #128]	; 0x80
   33444:	ldr	r2, [fp, #-68]	; 0xffffffbc
   33448:	add	r1, r1, r2
   3344c:	cmp	r0, r1
   33450:	blt	334a4 <grisu3_diy_fp_encode_double@@Base+0x4d4>
   33454:	ldr	r0, [fp, #-128]	; 0xffffff80
   33458:	ldr	r1, [fp, #-124]	; 0xffffff84
   3345c:	adds	r0, r0, #1
   33460:	adc	r1, r1, #0
   33464:	str	r0, [fp, #-128]	; 0xffffff80
   33468:	str	r1, [fp, #-124]	; 0xffffff84
   3346c:	ldrb	r0, [fp, #-122]	; 0xffffff86
   33470:	tst	r0, #32
   33474:	beq	334a0 <grisu3_diy_fp_encode_double@@Base+0x4d0>
   33478:	b	3347c <grisu3_diy_fp_encode_double@@Base+0x4ac>
   3347c:	ldr	r0, [fp, #-128]	; 0xffffff80
   33480:	ldr	r1, [fp, #-124]	; 0xffffff84
   33484:	lsrs	r1, r1, #1
   33488:	rrx	r0, r0
   3348c:	str	r1, [fp, #-124]	; 0xffffff84
   33490:	str	r0, [fp, #-128]	; 0xffffff80
   33494:	ldr	r0, [fp, #-120]	; 0xffffff88
   33498:	add	r0, r0, #1
   3349c:	str	r0, [fp, #-120]	; 0xffffff88
   334a0:	b	334a4 <grisu3_diy_fp_encode_double@@Base+0x4d4>
   334a4:	ldr	r0, [fp, #-128]	; 0xffffff80
   334a8:	ldr	r1, [fp, #-124]	; 0xffffff84
   334ac:	ldr	r2, [fp, #-120]	; 0xffffff88
   334b0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   334b4:	bl	33998 <grisu3_diy_fp_encode_double@@Base+0x9c8>
   334b8:	ldr	r0, [fp, #12]
   334bc:	vstr	d0, [r0]
   334c0:	ldr	r0, [sp, #128]	; 0x80
   334c4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   334c8:	sub	r0, r0, r1
   334cc:	ldr	r1, [sp, #132]	; 0x84
   334d0:	cmp	r0, r1
   334d4:	movw	r0, #1
   334d8:	str	r0, [sp, #28]
   334dc:	bge	33500 <grisu3_diy_fp_encode_double@@Base+0x530>
   334e0:	ldr	r0, [sp, #132]	; 0x84
   334e4:	ldr	r1, [sp, #128]	; 0x80
   334e8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   334ec:	add	r1, r1, r2
   334f0:	cmp	r0, r1
   334f4:	movw	r0, #0
   334f8:	movge	r0, #1
   334fc:	str	r0, [sp, #28]
   33500:	ldr	r0, [sp, #28]
   33504:	and	r0, r0, #1
   33508:	sub	sp, fp, #16
   3350c:	pop	{r4, r5, r6, sl, fp, pc}
   33510:	andeq	r9, r1, r5, ror #10
   33514:	andeq	r9, r1, r9, ror r5
   33518:	ldrdeq	r9, [r1], -pc	; <UNPREDICTABLE>
   3351c:			; <UNDEFINED> instruction: 0xfffffc0e
   33520:			; <UNDEFINED> instruction: 0xfffffbce
   33524:	andeq	ip, r2, ip, lsl #4
   33528:	push	{fp, lr}
   3352c:	mov	fp, sp
   33530:	sub	sp, sp, #24
   33534:	ldr	r1, [fp, #12]
   33538:	ldr	ip, [fp, #8]
   3353c:	str	r2, [sp, #8]
   33540:	str	r3, [sp, #12]
   33544:	str	ip, [sp, #16]
   33548:	str	r1, [sp, #20]
   3354c:	ldr	r1, [sp, #8]
   33550:	ldr	r2, [sp, #12]
   33554:	orr	r1, r1, r2
   33558:	cmp	r1, #0
   3355c:	str	r0, [sp, #4]
   33560:	beq	3356c <grisu3_diy_fp_encode_double@@Base+0x59c>
   33564:	b	33568 <grisu3_diy_fp_encode_double@@Base+0x598>
   33568:	b	3358c <grisu3_diy_fp_encode_double@@Base+0x5bc>
   3356c:	ldr	r0, [pc, #224]	; 33654 <grisu3_diy_fp_encode_double@@Base+0x684>
   33570:	add	r0, pc, r0
   33574:	ldr	r1, [pc, #220]	; 33658 <grisu3_diy_fp_encode_double@@Base+0x688>
   33578:	add	r1, pc, r1
   3357c:	ldr	r2, [pc, #216]	; 3365c <grisu3_diy_fp_encode_double@@Base+0x68c>
   33580:	add	r3, pc, r2
   33584:	movw	r2, #260	; 0x104
   33588:	bl	14f08 <__assert_fail@plt>
   3358c:	b	33590 <grisu3_diy_fp_encode_double@@Base+0x5c0>
   33590:	ldrh	r0, [sp, #14]
   33594:	bic	r0, r0, #63	; 0x3f
   33598:	cmp	r0, #0
   3359c:	movwne	r0, #1
   335a0:	mvn	r1, #0
   335a4:	eor	r0, r0, r1
   335a8:	tst	r0, #1
   335ac:	beq	335dc <grisu3_diy_fp_encode_double@@Base+0x60c>
   335b0:	ldr	r0, [sp, #8]
   335b4:	ldr	r1, [sp, #12]
   335b8:	lsl	r1, r1, #10
   335bc:	orr	r1, r1, r0, lsr #22
   335c0:	lsl	r0, r0, #10
   335c4:	str	r0, [sp, #8]
   335c8:	str	r1, [sp, #12]
   335cc:	ldr	r0, [sp, #16]
   335d0:	sub	r0, r0, #10
   335d4:	str	r0, [sp, #16]
   335d8:	b	33590 <grisu3_diy_fp_encode_double@@Base+0x5c0>
   335dc:	b	335e0 <grisu3_diy_fp_encode_double@@Base+0x610>
   335e0:	ldrb	r0, [sp, #15]
   335e4:	lsr	r0, r0, #7
   335e8:	mvn	r1, #0
   335ec:	eor	r0, r0, r1
   335f0:	tst	r0, #1
   335f4:	beq	33628 <grisu3_diy_fp_encode_double@@Base+0x658>
   335f8:	ldr	r0, [sp, #8]
   335fc:	ldr	r1, [sp, #12]
   33600:	lsl	r1, r1, #1
   33604:	orr	r1, r1, r0, lsr #31
   33608:	lsl	r0, r0, #1
   3360c:	str	r0, [sp, #8]
   33610:	str	r1, [sp, #12]
   33614:	ldr	r0, [sp, #16]
   33618:	mvn	r1, #0
   3361c:	add	r0, r0, r1
   33620:	str	r0, [sp, #16]
   33624:	b	335e0 <grisu3_diy_fp_encode_double@@Base+0x610>
   33628:	ldr	r0, [sp, #8]
   3362c:	ldr	r1, [sp, #4]
   33630:	str	r0, [r1]
   33634:	ldr	r0, [sp, #12]
   33638:	str	r0, [r1, #4]
   3363c:	ldr	r0, [sp, #16]
   33640:	str	r0, [r1, #8]
   33644:	ldr	r0, [sp, #20]
   33648:	str	r0, [r1, #12]
   3364c:	mov	sp, fp
   33650:	pop	{fp, pc}
   33654:	andeq	r9, r1, r9, ror #12
   33658:	andeq	r9, r1, sl, ror #12
   3365c:	andeq	r9, r1, pc, asr #13
   33660:	push	{fp, lr}
   33664:	mov	fp, sp
   33668:	sub	sp, sp, #24
   3366c:	ldr	r2, [pc, #340]	; 337c8 <grisu3_diy_fp_encode_double@@Base+0x7f8>
   33670:	str	r0, [fp, #-4]
   33674:	str	r1, [fp, #-8]
   33678:	movw	r0, #348	; 0x15c
   3367c:	str	r0, [sp, #12]
   33680:	movw	r0, #8
   33684:	str	r0, [sp, #8]
   33688:	ldr	r0, [fp, #-4]
   3368c:	cmp	r2, r0
   33690:	bgt	33698 <grisu3_diy_fp_encode_double@@Base+0x6c8>
   33694:	b	336b8 <grisu3_diy_fp_encode_double@@Base+0x6e8>
   33698:	ldr	r0, [pc, #300]	; 337cc <grisu3_diy_fp_encode_double@@Base+0x7fc>
   3369c:	add	r0, pc, r0
   336a0:	ldr	r1, [pc, #296]	; 337d0 <grisu3_diy_fp_encode_double@@Base+0x800>
   336a4:	add	r1, pc, r1
   336a8:	ldr	r2, [pc, #292]	; 337d4 <grisu3_diy_fp_encode_double@@Base+0x804>
   336ac:	add	r3, pc, r2
   336b0:	movw	r2, #80	; 0x50
   336b4:	bl	14f08 <__assert_fail@plt>
   336b8:	ldr	r0, [fp, #-4]
   336bc:	cmp	r0, #348	; 0x15c
   336c0:	bge	336c8 <grisu3_diy_fp_encode_double@@Base+0x6f8>
   336c4:	b	336e8 <grisu3_diy_fp_encode_double@@Base+0x718>
   336c8:	ldr	r0, [pc, #264]	; 337d8 <grisu3_diy_fp_encode_double@@Base+0x808>
   336cc:	add	r0, pc, r0
   336d0:	ldr	r1, [pc, #260]	; 337dc <grisu3_diy_fp_encode_double@@Base+0x80c>
   336d4:	add	r1, pc, r1
   336d8:	ldr	r2, [pc, #256]	; 337e0 <grisu3_diy_fp_encode_double@@Base+0x810>
   336dc:	add	r3, pc, r2
   336e0:	movw	r2, #81	; 0x51
   336e4:	bl	14f08 <__assert_fail@plt>
   336e8:	ldr	r0, [pc, #244]	; 337e4 <grisu3_diy_fp_encode_double@@Base+0x814>
   336ec:	add	r0, pc, r0
   336f0:	ldr	r1, [fp, #-4]
   336f4:	add	r1, r1, #348	; 0x15c
   336f8:	asr	r2, r1, #31
   336fc:	add	r1, r1, r2, lsr #29
   33700:	asr	r1, r1, #3
   33704:	str	r1, [sp, #4]
   33708:	ldr	r1, [sp, #4]
   3370c:	ldr	r2, [pc, #236]	; 33800 <grisu3_diy_fp_encode_double@@Base+0x830>
   33710:	add	r2, pc, r2
   33714:	add	r1, r2, r1, lsl #4
   33718:	ldrsh	r1, [r1, #10]
   3371c:	str	r1, [sp]
   33720:	ldr	r1, [sp, #4]
   33724:	mov	r3, r2
   33728:	ldr	r1, [r3, r1, lsl #4]!
   3372c:	ldr	r3, [r3, #4]
   33730:	ldr	ip, [fp, #-8]
   33734:	str	r3, [ip, #4]
   33738:	str	r1, [ip]
   3373c:	ldr	r1, [sp, #4]
   33740:	add	r1, r2, r1, lsl #4
   33744:	ldrsh	r1, [r1, #8]
   33748:	ldr	r2, [fp, #-8]
   3374c:	str	r1, [r2, #8]
   33750:	ldr	r1, [sp]
   33754:	ldr	r2, [fp, #-4]
   33758:	cmp	r1, r2
   3375c:	bgt	33764 <grisu3_diy_fp_encode_double@@Base+0x794>
   33760:	b	33784 <grisu3_diy_fp_encode_double@@Base+0x7b4>
   33764:	ldr	r0, [pc, #124]	; 337e8 <grisu3_diy_fp_encode_double@@Base+0x818>
   33768:	add	r0, pc, r0
   3376c:	ldr	r1, [pc, #120]	; 337ec <grisu3_diy_fp_encode_double@@Base+0x81c>
   33770:	add	r1, pc, r1
   33774:	ldr	r2, [pc, #116]	; 337f0 <grisu3_diy_fp_encode_double@@Base+0x820>
   33778:	add	r3, pc, r2
   3377c:	movw	r2, #88	; 0x58
   33780:	bl	14f08 <__assert_fail@plt>
   33784:	ldr	r0, [fp, #-4]
   33788:	ldr	r1, [sp]
   3378c:	add	r1, r1, #8
   33790:	cmp	r0, r1
   33794:	bge	3379c <grisu3_diy_fp_encode_double@@Base+0x7cc>
   33798:	b	337bc <grisu3_diy_fp_encode_double@@Base+0x7ec>
   3379c:	ldr	r0, [pc, #80]	; 337f4 <grisu3_diy_fp_encode_double@@Base+0x824>
   337a0:	add	r0, pc, r0
   337a4:	ldr	r1, [pc, #76]	; 337f8 <grisu3_diy_fp_encode_double@@Base+0x828>
   337a8:	add	r1, pc, r1
   337ac:	ldr	r2, [pc, #72]	; 337fc <grisu3_diy_fp_encode_double@@Base+0x82c>
   337b0:	add	r3, pc, r2
   337b4:	movw	r2, #89	; 0x59
   337b8:	bl	14f08 <__assert_fail@plt>
   337bc:	ldr	r0, [sp]
   337c0:	mov	sp, fp
   337c4:	pop	{fp, pc}
   337c8:			; <UNDEFINED> instruction: 0xfffffea4
   337cc:	andeq	r9, r1, ip, ror #11
   337d0:	strdeq	r8, [r1], -sp
   337d4:	strdeq	r9, [r1], -fp
   337d8:	andeq	r9, r1, r4, lsl r6
   337dc:	andeq	r8, r1, sp, asr #31
   337e0:	andeq	r9, r1, fp, asr #11
   337e4:	andeq	r9, r1, ip, asr #12
   337e8:	andeq	r9, r1, r3, lsr #11
   337ec:	andeq	r8, r1, r1, lsr pc
   337f0:	andeq	r9, r1, pc, lsr #10
   337f4:	andeq	r9, r1, sl, ror r5
   337f8:	strdeq	r8, [r1], -r9
   337fc:	strdeq	r9, [r1], -r7
   33800:	andeq	r9, r1, r8, lsr #12
   33804:	push	{r4, r5, r6, sl, fp, lr}
   33808:	add	fp, sp, #16
   3380c:	sub	sp, sp, #104	; 0x68
   33810:	ldr	r1, [fp, #28]
   33814:	ldr	ip, [fp, #24]
   33818:	ldr	lr, [fp, #20]
   3381c:	ldr	r4, [fp, #16]
   33820:	ldr	r5, [fp, #12]
   33824:	ldr	r6, [fp, #8]
   33828:	str	r2, [fp, #-32]	; 0xffffffe0
   3382c:	str	r3, [fp, #-28]	; 0xffffffe4
   33830:	str	r6, [fp, #-24]	; 0xffffffe8
   33834:	str	r5, [fp, #-20]	; 0xffffffec
   33838:	str	r1, [fp, #-36]	; 0xffffffdc
   3383c:	str	ip, [fp, #-40]	; 0xffffffd8
   33840:	str	lr, [fp, #-44]	; 0xffffffd4
   33844:	str	r4, [fp, #-48]	; 0xffffffd0
   33848:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3384c:	mov	r2, #0
   33850:	str	r2, [fp, #-52]	; 0xffffffcc
   33854:	str	r1, [fp, #-56]	; 0xffffffc8
   33858:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3385c:	str	r2, [sp, #60]	; 0x3c
   33860:	str	r1, [sp, #56]	; 0x38
   33864:	ldr	r1, [fp, #-44]	; 0xffffffd4
   33868:	str	r2, [sp, #52]	; 0x34
   3386c:	str	r1, [sp, #48]	; 0x30
   33870:	ldr	r1, [fp, #-48]	; 0xffffffd0
   33874:	str	r2, [sp, #44]	; 0x2c
   33878:	str	r1, [sp, #40]	; 0x28
   3387c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   33880:	ldr	r3, [fp, #-52]	; 0xffffffcc
   33884:	ldr	ip, [sp, #48]	; 0x30
   33888:	ldr	lr, [sp, #52]	; 0x34
   3388c:	umull	r4, r5, r1, ip
   33890:	mla	r1, r1, lr, r5
   33894:	mla	r1, r3, ip, r1
   33898:	str	r4, [sp, #32]
   3389c:	str	r1, [sp, #36]	; 0x24
   338a0:	ldr	r1, [sp, #56]	; 0x38
   338a4:	ldr	r3, [sp, #60]	; 0x3c
   338a8:	ldr	ip, [sp, #48]	; 0x30
   338ac:	ldr	lr, [sp, #52]	; 0x34
   338b0:	umull	r4, r5, r1, ip
   338b4:	mla	r1, r1, lr, r5
   338b8:	mla	r1, r3, ip, r1
   338bc:	str	r4, [sp, #24]
   338c0:	str	r1, [sp, #28]
   338c4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   338c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   338cc:	ldr	ip, [sp, #40]	; 0x28
   338d0:	ldr	lr, [sp, #44]	; 0x2c
   338d4:	umull	r4, r5, r1, ip
   338d8:	mla	r1, r1, lr, r5
   338dc:	mla	r1, r3, ip, r1
   338e0:	str	r4, [sp, #16]
   338e4:	str	r1, [sp, #20]
   338e8:	ldr	r1, [sp, #56]	; 0x38
   338ec:	ldr	r3, [sp, #60]	; 0x3c
   338f0:	ldr	ip, [sp, #40]	; 0x28
   338f4:	ldr	lr, [sp, #44]	; 0x2c
   338f8:	umull	r4, r5, r1, ip
   338fc:	mla	r1, r1, lr, r5
   33900:	mla	r1, r3, ip, r1
   33904:	str	r4, [sp, #8]
   33908:	str	r1, [sp, #12]
   3390c:	ldr	r1, [sp, #12]
   33910:	ldr	r3, [sp, #16]
   33914:	adds	r1, r1, r3
   33918:	adc	r2, r2, #0
   3391c:	ldr	r3, [sp, #24]
   33920:	adds	r1, r1, r3
   33924:	adc	r2, r2, #0
   33928:	str	r1, [sp]
   3392c:	str	r2, [sp, #4]
   33930:	ldr	r1, [sp]
   33934:	ldr	r2, [sp, #4]
   33938:	adds	r1, r1, #-2147483648	; 0x80000000
   3393c:	adc	r2, r2, #0
   33940:	str	r1, [sp]
   33944:	str	r2, [sp, #4]
   33948:	ldr	r1, [sp, #32]
   3394c:	ldr	r2, [sp, #36]	; 0x24
   33950:	ldr	r3, [sp, #20]
   33954:	adds	r1, r1, r3
   33958:	adc	r2, r2, #0
   3395c:	ldr	r3, [sp, #28]
   33960:	adds	r1, r1, r3
   33964:	adc	r2, r2, #0
   33968:	ldr	r3, [sp, #4]
   3396c:	adds	r1, r1, r3
   33970:	adc	r2, r2, #0
   33974:	str	r1, [r0]
   33978:	str	r2, [r0, #4]
   3397c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33980:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33984:	add	r1, r1, r2
   33988:	add	r1, r1, #64	; 0x40
   3398c:	str	r1, [r0, #8]
   33990:	sub	sp, fp, #16
   33994:	pop	{r4, r5, r6, sl, fp, pc}
   33998:	push	{fp, lr}
   3399c:	mov	fp, sp
   339a0:	sub	sp, sp, #88	; 0x58
   339a4:	ldr	ip, [pc, #412]	; 33b48 <grisu3_diy_fp_encode_double@@Base+0xb78>
   339a8:	str	r0, [fp, #-24]	; 0xffffffe8
   339ac:	str	r1, [fp, #-20]	; 0xffffffec
   339b0:	str	r2, [fp, #-16]
   339b4:	str	r3, [fp, #-12]
   339b8:	mov	r0, #1048576	; 0x100000
   339bc:	str	r0, [fp, #-28]	; 0xffffffe4
   339c0:	mov	r0, #0
   339c4:	str	r0, [fp, #-32]	; 0xffffffe0
   339c8:	movw	r0, #65535	; 0xffff
   339cc:	movt	r0, #15
   339d0:	str	r0, [fp, #-36]	; 0xffffffdc
   339d4:	mvn	r0, #0
   339d8:	str	r0, [fp, #-40]	; 0xffffffd8
   339dc:	str	ip, [sp, #44]	; 0x2c
   339e0:	movw	r0, #1075	; 0x433
   339e4:	str	r0, [sp, #40]	; 0x28
   339e8:	movw	r0, #52	; 0x34
   339ec:	str	r0, [sp, #36]	; 0x24
   339f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   339f4:	str	r0, [sp, #16]
   339f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   339fc:	str	r0, [sp, #20]
   33a00:	ldr	r0, [fp, #-16]
   33a04:	str	r0, [sp, #24]
   33a08:	ldr	r0, [fp, #-12]
   33a0c:	str	r0, [sp, #28]
   33a10:	ldr	r0, [sp, #20]
   33a14:	cmp	r0, #2097152	; 0x200000
   33a18:	bcc	33a48 <grisu3_diy_fp_encode_double@@Base+0xa78>
   33a1c:	b	33a20 <grisu3_diy_fp_encode_double@@Base+0xa50>
   33a20:	ldr	r0, [sp, #16]
   33a24:	ldr	r1, [sp, #20]
   33a28:	lsrs	r1, r1, #1
   33a2c:	rrx	r0, r0
   33a30:	str	r1, [sp, #20]
   33a34:	str	r0, [sp, #16]
   33a38:	ldr	r0, [sp, #24]
   33a3c:	add	r0, r0, #1
   33a40:	str	r0, [sp, #24]
   33a44:	b	33a10 <grisu3_diy_fp_encode_double@@Base+0xa40>
   33a48:	ldr	r0, [pc, #248]	; 33b48 <grisu3_diy_fp_encode_double@@Base+0xb78>
   33a4c:	ldr	r1, [sp, #24]
   33a50:	cmp	r1, r0
   33a54:	bge	33a64 <grisu3_diy_fp_encode_double@@Base+0xa94>
   33a58:	vldr	d16, [pc, #224]	; 33b40 <grisu3_diy_fp_encode_double@@Base+0xb70>
   33a5c:	vstr	d16, [fp, #-8]
   33a60:	b	33b34 <grisu3_diy_fp_encode_double@@Base+0xb64>
   33a64:	b	33a68 <grisu3_diy_fp_encode_double@@Base+0xa98>
   33a68:	ldr	r0, [pc, #216]	; 33b48 <grisu3_diy_fp_encode_double@@Base+0xb78>
   33a6c:	ldr	r1, [sp, #24]
   33a70:	cmp	r1, r0
   33a74:	movw	r0, #0
   33a78:	str	r0, [sp, #4]
   33a7c:	ble	33a94 <grisu3_diy_fp_encode_double@@Base+0xac4>
   33a80:	ldrb	r0, [sp, #22]
   33a84:	and	r0, r0, #16
   33a88:	mov	r1, #1
   33a8c:	eor	r0, r1, r0, lsr #4
   33a90:	str	r0, [sp, #4]
   33a94:	ldr	r0, [sp, #4]
   33a98:	tst	r0, #1
   33a9c:	beq	33ad0 <grisu3_diy_fp_encode_double@@Base+0xb00>
   33aa0:	ldr	r0, [sp, #16]
   33aa4:	ldr	r1, [sp, #20]
   33aa8:	lsl	r1, r1, #1
   33aac:	orr	r1, r1, r0, lsr #31
   33ab0:	lsl	r0, r0, #1
   33ab4:	str	r0, [sp, #16]
   33ab8:	str	r1, [sp, #20]
   33abc:	ldr	r0, [sp, #24]
   33ac0:	mvn	r1, #0
   33ac4:	add	r0, r0, r1
   33ac8:	str	r0, [sp, #24]
   33acc:	b	33a68 <grisu3_diy_fp_encode_double@@Base+0xa98>
   33ad0:	ldr	r0, [pc, #112]	; 33b48 <grisu3_diy_fp_encode_double@@Base+0xb78>
   33ad4:	ldr	r1, [sp, #24]
   33ad8:	cmp	r1, r0
   33adc:	bne	33b00 <grisu3_diy_fp_encode_double@@Base+0xb30>
   33ae0:	ldrb	r0, [sp, #22]
   33ae4:	tst	r0, #16
   33ae8:	bne	33b00 <grisu3_diy_fp_encode_double@@Base+0xb30>
   33aec:	b	33af0 <grisu3_diy_fp_encode_double@@Base+0xb20>
   33af0:	mov	r0, #0
   33af4:	str	r0, [sp, #12]
   33af8:	str	r0, [sp, #8]
   33afc:	b	33b18 <grisu3_diy_fp_encode_double@@Base+0xb48>
   33b00:	ldr	r0, [sp, #24]
   33b04:	movw	r1, #1075	; 0x433
   33b08:	add	r0, r0, r1
   33b0c:	asr	r1, r0, #31
   33b10:	str	r0, [sp, #8]
   33b14:	str	r1, [sp, #12]
   33b18:	ldr	r0, [sp, #16]
   33b1c:	ldr	r1, [sp, #20]
   33b20:	bfc	r1, #20, #12
   33b24:	ldr	r2, [sp, #8]
   33b28:	orr	r1, r1, r2, lsl #20
   33b2c:	bl	386e4 <flatcc_json_parser_struct_as_root@@Base+0x160>
   33b30:	vstr	d0, [fp, #-8]
   33b34:	vldr	d0, [fp, #-8]
   33b38:	mov	sp, fp
   33b3c:	pop	{fp, pc}
	...
   33b48:			; <UNDEFINED> instruction: 0xfffffbce

00033b4c <flatcc_json_parser_error_string@@Base>:
   33b4c:	sub	sp, sp, #12
   33b50:	str	r0, [sp, #4]
   33b54:	ldr	r0, [sp, #4]
   33b58:	cmp	r0, #34	; 0x22
   33b5c:	str	r0, [sp]
   33b60:	bhi	33e30 <flatcc_json_parser_error_string@@Base+0x2e4>
   33b64:	add	r0, pc, #8
   33b68:	ldr	r1, [sp]
   33b6c:	ldr	r2, [r0, r1, lsl #2]
   33b70:	add	pc, r0, r2
   33b74:	andeq	r0, r0, ip, lsl #1
   33b78:	muleq	r0, ip, r0
   33b7c:	andeq	r0, r0, ip, lsr #1
   33b80:	strheq	r0, [r0], -ip
   33b84:	andeq	r0, r0, ip, asr #1
   33b88:	ldrdeq	r0, [r0], -ip
   33b8c:	andeq	r0, r0, ip, ror #1
   33b90:	strdeq	r0, [r0], -ip
   33b94:	andeq	r0, r0, ip, lsl #2
   33b98:	andeq	r0, r0, ip, lsl r1
   33b9c:	andeq	r0, r0, ip, lsr #2
   33ba0:	andeq	r0, r0, ip, lsr r1
   33ba4:	andeq	r0, r0, ip, asr #2
   33ba8:	andeq	r0, r0, ip, asr r1
   33bac:	andeq	r0, r0, ip, ror #2
   33bb0:	andeq	r0, r0, ip, ror r1
   33bb4:	andeq	r0, r0, ip, lsl #3
   33bb8:	muleq	r0, ip, r1
   33bbc:	andeq	r0, r0, ip, lsr #3
   33bc0:			; <UNDEFINED> instruction: 0x000001bc
   33bc4:	andeq	r0, r0, ip, asr #3
   33bc8:	ldrdeq	r0, [r0], -ip
   33bcc:	andeq	r0, r0, ip, ror #3
   33bd0:	strdeq	r0, [r0], -ip
   33bd4:	andeq	r0, r0, ip, lsl #4
   33bd8:	andeq	r0, r0, ip, lsl r2
   33bdc:	andeq	r0, r0, ip, lsr #4
   33be0:	andeq	r0, r0, ip, lsr r2
   33be4:	andeq	r0, r0, ip, asr #4
   33be8:	andeq	r0, r0, ip, asr r2
   33bec:	andeq	r0, r0, ip, ror #4
   33bf0:	andeq	r0, r0, ip, ror r2
   33bf4:	andeq	r0, r0, ip, lsl #5
   33bf8:	muleq	r0, ip, r2
   33bfc:	andeq	r0, r0, ip, lsr #5
   33c00:	ldr	r0, [pc, #712]	; 33ed0 <flatcc_json_parser_error_string@@Base+0x384>
   33c04:	add	r0, pc, r0
   33c08:	str	r0, [sp, #8]
   33c0c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33c10:	ldr	r0, [pc, #692]	; 33ecc <flatcc_json_parser_error_string@@Base+0x380>
   33c14:	add	r0, pc, r0
   33c18:	str	r0, [sp, #8]
   33c1c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33c20:	ldr	r0, [pc, #672]	; 33ec8 <flatcc_json_parser_error_string@@Base+0x37c>
   33c24:	add	r0, pc, r0
   33c28:	str	r0, [sp, #8]
   33c2c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33c30:	ldr	r0, [pc, #652]	; 33ec4 <flatcc_json_parser_error_string@@Base+0x378>
   33c34:	add	r0, pc, r0
   33c38:	str	r0, [sp, #8]
   33c3c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33c40:	ldr	r0, [pc, #632]	; 33ec0 <flatcc_json_parser_error_string@@Base+0x374>
   33c44:	add	r0, pc, r0
   33c48:	str	r0, [sp, #8]
   33c4c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33c50:	ldr	r0, [pc, #612]	; 33ebc <flatcc_json_parser_error_string@@Base+0x370>
   33c54:	add	r0, pc, r0
   33c58:	str	r0, [sp, #8]
   33c5c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33c60:	ldr	r0, [pc, #592]	; 33eb8 <flatcc_json_parser_error_string@@Base+0x36c>
   33c64:	add	r0, pc, r0
   33c68:	str	r0, [sp, #8]
   33c6c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33c70:	ldr	r0, [pc, #572]	; 33eb4 <flatcc_json_parser_error_string@@Base+0x368>
   33c74:	add	r0, pc, r0
   33c78:	str	r0, [sp, #8]
   33c7c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33c80:	ldr	r0, [pc, #552]	; 33eb0 <flatcc_json_parser_error_string@@Base+0x364>
   33c84:	add	r0, pc, r0
   33c88:	str	r0, [sp, #8]
   33c8c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33c90:	ldr	r0, [pc, #532]	; 33eac <flatcc_json_parser_error_string@@Base+0x360>
   33c94:	add	r0, pc, r0
   33c98:	str	r0, [sp, #8]
   33c9c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33ca0:	ldr	r0, [pc, #512]	; 33ea8 <flatcc_json_parser_error_string@@Base+0x35c>
   33ca4:	add	r0, pc, r0
   33ca8:	str	r0, [sp, #8]
   33cac:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33cb0:	ldr	r0, [pc, #492]	; 33ea4 <flatcc_json_parser_error_string@@Base+0x358>
   33cb4:	add	r0, pc, r0
   33cb8:	str	r0, [sp, #8]
   33cbc:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33cc0:	ldr	r0, [pc, #472]	; 33ea0 <flatcc_json_parser_error_string@@Base+0x354>
   33cc4:	add	r0, pc, r0
   33cc8:	str	r0, [sp, #8]
   33ccc:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33cd0:	ldr	r0, [pc, #452]	; 33e9c <flatcc_json_parser_error_string@@Base+0x350>
   33cd4:	add	r0, pc, r0
   33cd8:	str	r0, [sp, #8]
   33cdc:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33ce0:	ldr	r0, [pc, #432]	; 33e98 <flatcc_json_parser_error_string@@Base+0x34c>
   33ce4:	add	r0, pc, r0
   33ce8:	str	r0, [sp, #8]
   33cec:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33cf0:	ldr	r0, [pc, #412]	; 33e94 <flatcc_json_parser_error_string@@Base+0x348>
   33cf4:	add	r0, pc, r0
   33cf8:	str	r0, [sp, #8]
   33cfc:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33d00:	ldr	r0, [pc, #392]	; 33e90 <flatcc_json_parser_error_string@@Base+0x344>
   33d04:	add	r0, pc, r0
   33d08:	str	r0, [sp, #8]
   33d0c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33d10:	ldr	r0, [pc, #372]	; 33e8c <flatcc_json_parser_error_string@@Base+0x340>
   33d14:	add	r0, pc, r0
   33d18:	str	r0, [sp, #8]
   33d1c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33d20:	ldr	r0, [pc, #352]	; 33e88 <flatcc_json_parser_error_string@@Base+0x33c>
   33d24:	add	r0, pc, r0
   33d28:	str	r0, [sp, #8]
   33d2c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33d30:	ldr	r0, [pc, #332]	; 33e84 <flatcc_json_parser_error_string@@Base+0x338>
   33d34:	add	r0, pc, r0
   33d38:	str	r0, [sp, #8]
   33d3c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33d40:	ldr	r0, [pc, #312]	; 33e80 <flatcc_json_parser_error_string@@Base+0x334>
   33d44:	add	r0, pc, r0
   33d48:	str	r0, [sp, #8]
   33d4c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33d50:	ldr	r0, [pc, #292]	; 33e7c <flatcc_json_parser_error_string@@Base+0x330>
   33d54:	add	r0, pc, r0
   33d58:	str	r0, [sp, #8]
   33d5c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33d60:	ldr	r0, [pc, #272]	; 33e78 <flatcc_json_parser_error_string@@Base+0x32c>
   33d64:	add	r0, pc, r0
   33d68:	str	r0, [sp, #8]
   33d6c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33d70:	ldr	r0, [pc, #252]	; 33e74 <flatcc_json_parser_error_string@@Base+0x328>
   33d74:	add	r0, pc, r0
   33d78:	str	r0, [sp, #8]
   33d7c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33d80:	ldr	r0, [pc, #232]	; 33e70 <flatcc_json_parser_error_string@@Base+0x324>
   33d84:	add	r0, pc, r0
   33d88:	str	r0, [sp, #8]
   33d8c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33d90:	ldr	r0, [pc, #212]	; 33e6c <flatcc_json_parser_error_string@@Base+0x320>
   33d94:	add	r0, pc, r0
   33d98:	str	r0, [sp, #8]
   33d9c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33da0:	ldr	r0, [pc, #192]	; 33e68 <flatcc_json_parser_error_string@@Base+0x31c>
   33da4:	add	r0, pc, r0
   33da8:	str	r0, [sp, #8]
   33dac:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33db0:	ldr	r0, [pc, #172]	; 33e64 <flatcc_json_parser_error_string@@Base+0x318>
   33db4:	add	r0, pc, r0
   33db8:	str	r0, [sp, #8]
   33dbc:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33dc0:	ldr	r0, [pc, #152]	; 33e60 <flatcc_json_parser_error_string@@Base+0x314>
   33dc4:	add	r0, pc, r0
   33dc8:	str	r0, [sp, #8]
   33dcc:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33dd0:	ldr	r0, [pc, #132]	; 33e5c <flatcc_json_parser_error_string@@Base+0x310>
   33dd4:	add	r0, pc, r0
   33dd8:	str	r0, [sp, #8]
   33ddc:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33de0:	ldr	r0, [pc, #112]	; 33e58 <flatcc_json_parser_error_string@@Base+0x30c>
   33de4:	add	r0, pc, r0
   33de8:	str	r0, [sp, #8]
   33dec:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33df0:	ldr	r0, [pc, #92]	; 33e54 <flatcc_json_parser_error_string@@Base+0x308>
   33df4:	add	r0, pc, r0
   33df8:	str	r0, [sp, #8]
   33dfc:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33e00:	ldr	r0, [pc, #72]	; 33e50 <flatcc_json_parser_error_string@@Base+0x304>
   33e04:	add	r0, pc, r0
   33e08:	str	r0, [sp, #8]
   33e0c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33e10:	ldr	r0, [pc, #52]	; 33e4c <flatcc_json_parser_error_string@@Base+0x300>
   33e14:	add	r0, pc, r0
   33e18:	str	r0, [sp, #8]
   33e1c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33e20:	ldr	r0, [pc, #32]	; 33e48 <flatcc_json_parser_error_string@@Base+0x2fc>
   33e24:	add	r0, pc, r0
   33e28:	str	r0, [sp, #8]
   33e2c:	b	33e3c <flatcc_json_parser_error_string@@Base+0x2f0>
   33e30:	ldr	r0, [pc, #156]	; 33ed4 <flatcc_json_parser_error_string@@Base+0x388>
   33e34:	add	r0, pc, r0
   33e38:	str	r0, [sp, #8]
   33e3c:	ldr	r0, [sp, #8]
   33e40:	add	sp, sp, #12
   33e44:	bx	lr
   33e48:	andeq	r8, r1, fp, asr #16
   33e4c:	andeq	r8, r1, r2, lsl #23
   33e50:	andeq	r8, r1, r8, ror fp
   33e54:	andeq	r8, r1, r1, ror fp
   33e58:	andeq	r8, r1, r4, ror #22
   33e5c:	andeq	r8, r1, r7, asr #9
   33e60:	andeq	r8, r1, sl, ror #22
   33e64:	andeq	r8, r1, pc, asr fp
   33e68:	andeq	r8, r1, r0, asr fp
   33e6c:	andeq	r8, r1, r3, asr #22
   33e70:	andeq	r8, r1, pc, lsr fp
   33e74:	andeq	r8, r1, fp, lsr #22
   33e78:	andeq	r8, r1, ip, lsr #22
   33e7c:	andeq	r8, r1, ip, lsr #22
   33e80:	andeq	r8, r1, r8, lsr #22
   33e84:	andeq	r8, r1, fp, lsr #22
   33e88:	andeq	r8, r1, ip, lsr #22
   33e8c:	andeq	r8, r1, sl, lsr #22
   33e90:	andeq	r8, r1, sl, lsr #22
   33e94:	andeq	r8, r1, r7, lsr #22
   33e98:	andeq	r8, r1, lr, lsl fp
   33e9c:	andeq	r8, r1, pc, lsl fp
   33ea0:	andeq	r8, r1, lr, lsl fp
   33ea4:	andeq	r8, r1, pc, lsl fp
   33ea8:	andeq	r8, r1, sp, lsl fp
   33eac:	andeq	r8, r1, ip, lsl fp
   33eb0:	andeq	r8, r1, r2, lsr #22
   33eb4:	andeq	r8, r1, fp, lsr #14
   33eb8:	andeq	r8, r1, r2, lsr fp
   33ebc:	andeq	r8, r1, sp, lsr #22
   33ec0:	andeq	r8, r1, lr, lsr #22
   33ec4:	andeq	r8, r1, pc, lsr #22
   33ec8:	andeq	r8, r1, r2, lsr fp
   33ecc:	andeq	r8, r1, lr, lsr fp
   33ed0:	andeq	r8, r1, lr, asr #12
   33ed4:	andeq	r8, r1, r9, asr #16

00033ed8 <flatcc_json_parser_set_error@@Base>:
   33ed8:	sub	sp, sp, #16
   33edc:	str	r0, [sp, #12]
   33ee0:	str	r1, [sp, #8]
   33ee4:	str	r2, [sp, #4]
   33ee8:	str	r3, [sp]
   33eec:	ldr	r0, [sp, #12]
   33ef0:	ldr	r0, [r0, #24]
   33ef4:	cmp	r0, #0
   33ef8:	bne	33f30 <flatcc_json_parser_set_error@@Base+0x58>
   33efc:	ldr	r0, [sp]
   33f00:	ldr	r1, [sp, #12]
   33f04:	str	r0, [r1, #24]
   33f08:	ldr	r0, [sp, #8]
   33f0c:	ldr	r1, [sp, #12]
   33f10:	ldr	r1, [r1, #4]
   33f14:	sub	r0, r0, r1
   33f18:	add	r0, r0, #1
   33f1c:	ldr	r1, [sp, #12]
   33f20:	str	r0, [r1, #20]
   33f24:	ldr	r0, [sp, #8]
   33f28:	ldr	r1, [sp, #12]
   33f2c:	str	r0, [r1, #36]	; 0x24
   33f30:	ldr	r0, [sp, #4]
   33f34:	add	sp, sp, #16
   33f38:	bx	lr

00033f3c <flatcc_json_parser_string_part@@Base>:
   33f3c:	push	{fp, lr}
   33f40:	mov	fp, sp
   33f44:	sub	sp, sp, #24
   33f48:	str	r0, [fp, #-8]
   33f4c:	str	r1, [sp, #12]
   33f50:	str	r2, [sp, #8]
   33f54:	ldr	r0, [sp, #12]
   33f58:	ldr	r1, [sp, #8]
   33f5c:	cmp	r0, r1
   33f60:	movw	r0, #0
   33f64:	str	r0, [sp, #4]
   33f68:	beq	33fb4 <flatcc_json_parser_string_part@@Base+0x78>
   33f6c:	ldr	r0, [sp, #12]
   33f70:	ldrb	r0, [r0]
   33f74:	cmp	r0, #34	; 0x22
   33f78:	movw	r0, #0
   33f7c:	str	r0, [sp, #4]
   33f80:	beq	33fb4 <flatcc_json_parser_string_part@@Base+0x78>
   33f84:	ldr	r0, [sp, #12]
   33f88:	ldrb	r0, [r0]
   33f8c:	cmp	r0, #32
   33f90:	movw	r0, #0
   33f94:	str	r0, [sp, #4]
   33f98:	blt	33fb4 <flatcc_json_parser_string_part@@Base+0x78>
   33f9c:	ldr	r0, [sp, #12]
   33fa0:	ldrb	r0, [r0]
   33fa4:	cmp	r0, #92	; 0x5c
   33fa8:	movw	r0, #0
   33fac:	movne	r0, #1
   33fb0:	str	r0, [sp, #4]
   33fb4:	ldr	r0, [sp, #4]
   33fb8:	tst	r0, #1
   33fbc:	beq	33fd0 <flatcc_json_parser_string_part@@Base+0x94>
   33fc0:	ldr	r0, [sp, #12]
   33fc4:	add	r0, r0, #1
   33fc8:	str	r0, [sp, #12]
   33fcc:	b	33f54 <flatcc_json_parser_string_part@@Base+0x18>
   33fd0:	ldr	r0, [sp, #12]
   33fd4:	ldr	r1, [sp, #8]
   33fd8:	cmp	r0, r1
   33fdc:	bne	33ffc <flatcc_json_parser_string_part@@Base+0xc0>
   33fe0:	ldr	r0, [fp, #-8]
   33fe4:	ldr	r1, [sp, #12]
   33fe8:	ldr	r2, [sp, #8]
   33fec:	movw	r3, #20
   33ff0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   33ff4:	str	r0, [fp, #-4]
   33ff8:	b	3404c <flatcc_json_parser_string_part@@Base+0x110>
   33ffc:	ldr	r0, [sp, #12]
   34000:	ldrb	r0, [r0]
   34004:	cmp	r0, #34	; 0x22
   34008:	bne	34018 <flatcc_json_parser_string_part@@Base+0xdc>
   3400c:	ldr	r0, [sp, #12]
   34010:	str	r0, [fp, #-4]
   34014:	b	3404c <flatcc_json_parser_string_part@@Base+0x110>
   34018:	ldr	r0, [sp, #12]
   3401c:	ldrb	r0, [r0]
   34020:	cmp	r0, #32
   34024:	bge	34044 <flatcc_json_parser_string_part@@Base+0x108>
   34028:	ldr	r0, [fp, #-8]
   3402c:	ldr	r1, [sp, #12]
   34030:	ldr	r2, [sp, #8]
   34034:	movw	r3, #17
   34038:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   3403c:	str	r0, [fp, #-4]
   34040:	b	3404c <flatcc_json_parser_string_part@@Base+0x110>
   34044:	ldr	r0, [sp, #12]
   34048:	str	r0, [fp, #-4]
   3404c:	ldr	r0, [fp, #-4]
   34050:	mov	sp, fp
   34054:	pop	{fp, pc}

00034058 <flatcc_json_parser_space_ext@@Base>:
   34058:	push	{fp, lr}
   3405c:	mov	fp, sp
   34060:	sub	sp, sp, #32
   34064:	str	r0, [fp, #-8]
   34068:	str	r1, [fp, #-12]
   3406c:	str	r2, [sp, #16]
   34070:	b	34074 <flatcc_json_parser_space_ext@@Base+0x1c>
   34074:	ldr	r0, [fp, #-12]
   34078:	ldr	r1, [sp, #16]
   3407c:	cmp	r0, r1
   34080:	movw	r0, #0
   34084:	str	r0, [sp, #12]
   34088:	beq	340a4 <flatcc_json_parser_space_ext@@Base+0x4c>
   3408c:	ldr	r0, [fp, #-12]
   34090:	ldrb	r0, [r0]
   34094:	cmp	r0, #32
   34098:	movw	r0, #0
   3409c:	moveq	r0, #1
   340a0:	str	r0, [sp, #12]
   340a4:	ldr	r0, [sp, #12]
   340a8:	tst	r0, #1
   340ac:	beq	340c0 <flatcc_json_parser_space_ext@@Base+0x68>
   340b0:	ldr	r0, [fp, #-12]
   340b4:	add	r0, r0, #1
   340b8:	str	r0, [fp, #-12]
   340bc:	b	34074 <flatcc_json_parser_space_ext@@Base+0x1c>
   340c0:	b	340c4 <flatcc_json_parser_space_ext@@Base+0x6c>
   340c4:	ldr	r0, [fp, #-12]
   340c8:	ldr	r1, [sp, #16]
   340cc:	cmp	r0, r1
   340d0:	movw	r0, #0
   340d4:	str	r0, [sp, #8]
   340d8:	beq	340f4 <flatcc_json_parser_space_ext@@Base+0x9c>
   340dc:	ldr	r0, [fp, #-12]
   340e0:	ldrb	r0, [r0]
   340e4:	cmp	r0, #32
   340e8:	movw	r0, #0
   340ec:	movle	r0, #1
   340f0:	str	r0, [sp, #8]
   340f4:	ldr	r0, [sp, #8]
   340f8:	tst	r0, #1
   340fc:	beq	34228 <flatcc_json_parser_space_ext@@Base+0x1d0>
   34100:	ldr	r0, [fp, #-12]
   34104:	ldrb	r0, [r0]
   34108:	sub	r0, r0, #9
   3410c:	cmp	r0, #23
   34110:	str	r0, [sp, #4]
   34114:	bhi	3420c <flatcc_json_parser_space_ext@@Base+0x1b4>
   34118:	add	r0, pc, #8
   3411c:	ldr	r1, [sp, #4]
   34120:	ldr	r2, [r0, r1, lsl #2]
   34124:	add	pc, r0, r2
   34128:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   3412c:	andeq	r0, r0, r8, lsr #1
   34130:	andeq	r0, r0, r4, ror #1
   34134:	andeq	r0, r0, r4, ror #1
   34138:	andeq	r0, r0, r0, rrx
   3413c:	andeq	r0, r0, r4, ror #1
   34140:	andeq	r0, r0, r4, ror #1
   34144:	andeq	r0, r0, r4, ror #1
   34148:	andeq	r0, r0, r4, ror #1
   3414c:	andeq	r0, r0, r4, ror #1
   34150:	andeq	r0, r0, r4, ror #1
   34154:	andeq	r0, r0, r4, ror #1
   34158:	andeq	r0, r0, r4, ror #1
   3415c:	andeq	r0, r0, r4, ror #1
   34160:	andeq	r0, r0, r4, ror #1
   34164:	andeq	r0, r0, r4, ror #1
   34168:	andeq	r0, r0, r4, ror #1
   3416c:	andeq	r0, r0, r4, ror #1
   34170:	andeq	r0, r0, r4, ror #1
   34174:	andeq	r0, r0, r4, ror #1
   34178:	andeq	r0, r0, r4, ror #1
   3417c:	andeq	r0, r0, r4, ror #1
   34180:	andeq	r0, r0, r4, ror #1
   34184:	andeq	r0, r0, r0, ror #1
   34188:	ldr	r0, [sp, #16]
   3418c:	ldr	r1, [fp, #-12]
   34190:	sub	r0, r0, r1
   34194:	cmp	r0, #1
   34198:	movw	r0, #0
   3419c:	str	r0, [sp]
   341a0:	ble	341bc <flatcc_json_parser_space_ext@@Base+0x164>
   341a4:	ldr	r0, [fp, #-12]
   341a8:	ldrb	r0, [r0, #1]
   341ac:	cmp	r0, #10
   341b0:	movw	r0, #0
   341b4:	moveq	r0, #1
   341b8:	str	r0, [sp]
   341bc:	ldr	r0, [sp]
   341c0:	and	r0, r0, #1
   341c4:	ldr	r1, [fp, #-12]
   341c8:	add	r0, r1, r0
   341cc:	str	r0, [fp, #-12]
   341d0:	ldr	r0, [fp, #-8]
   341d4:	ldr	r1, [r0, #16]
   341d8:	add	r1, r1, #1
   341dc:	str	r1, [r0, #16]
   341e0:	ldr	r0, [fp, #-12]
   341e4:	add	r0, r0, #1
   341e8:	str	r0, [fp, #-12]
   341ec:	ldr	r1, [fp, #-8]
   341f0:	str	r0, [r1, #4]
   341f4:	b	340c4 <flatcc_json_parser_space_ext@@Base+0x6c>
   341f8:	ldr	r0, [fp, #-12]
   341fc:	add	r0, r0, #1
   34200:	str	r0, [fp, #-12]
   34204:	b	340c4 <flatcc_json_parser_space_ext@@Base+0x6c>
   34208:	b	34070 <flatcc_json_parser_space_ext@@Base+0x18>
   3420c:	ldr	r0, [fp, #-8]
   34210:	ldr	r1, [fp, #-12]
   34214:	ldr	r2, [sp, #16]
   34218:	movw	r3, #5
   3421c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   34220:	str	r0, [fp, #-4]
   34224:	b	34230 <flatcc_json_parser_space_ext@@Base+0x1d8>
   34228:	ldr	r0, [fp, #-12]
   3422c:	str	r0, [fp, #-4]
   34230:	ldr	r0, [fp, #-4]
   34234:	mov	sp, fp
   34238:	pop	{fp, pc}

0003423c <flatcc_json_parser_string_escape@@Base>:
   3423c:	push	{fp, lr}
   34240:	mov	fp, sp
   34244:	sub	sp, sp, #32
   34248:	str	r0, [fp, #-8]
   3424c:	str	r1, [fp, #-12]
   34250:	str	r2, [sp, #16]
   34254:	str	r3, [sp, #12]
   34258:	ldr	r0, [sp, #16]
   3425c:	ldr	r1, [fp, #-12]
   34260:	sub	r0, r0, r1
   34264:	cmp	r0, #2
   34268:	blt	3427c <flatcc_json_parser_string_escape@@Base+0x40>
   3426c:	ldr	r0, [fp, #-12]
   34270:	ldrb	r0, [r0]
   34274:	cmp	r0, #92	; 0x5c
   34278:	beq	342a4 <flatcc_json_parser_string_escape@@Base+0x68>
   3427c:	ldr	r0, [sp, #12]
   34280:	movw	r1, #0
   34284:	strb	r1, [r0]
   34288:	ldr	r0, [fp, #-8]
   3428c:	ldr	r1, [fp, #-12]
   34290:	ldr	r2, [sp, #16]
   34294:	movw	r3, #18
   34298:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   3429c:	str	r0, [fp, #-4]
   342a0:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   342a4:	ldr	r0, [fp, #-12]
   342a8:	ldrb	r0, [r0, #1]
   342ac:	sub	r0, r0, #34	; 0x22
   342b0:	cmp	r0, #86	; 0x56
   342b4:	str	r0, [sp]
   342b8:	bhi	34b30 <flatcc_json_parser_string_escape@@Base+0x8f4>
   342bc:	add	r0, pc, #8
   342c0:	ldr	r1, [sp]
   342c4:	ldr	r2, [r0, r1, lsl #2]
   342c8:	add	pc, r0, r2
   342cc:	andeq	r0, r0, ip, ror #15
   342d0:	andeq	r0, r0, r4, ror #16
   342d4:	andeq	r0, r0, r4, ror #16
   342d8:	andeq	r0, r0, r4, ror #16
   342dc:	andeq	r0, r0, r4, ror #16
   342e0:	andeq	r0, r0, r4, ror #16
   342e4:	andeq	r0, r0, r4, ror #16
   342e8:	andeq	r0, r0, r4, ror #16
   342ec:	andeq	r0, r0, r4, ror #16
   342f0:	andeq	r0, r0, r4, ror #16
   342f4:	andeq	r0, r0, r4, ror #16
   342f8:	andeq	r0, r0, r4, ror #16
   342fc:	andeq	r0, r0, r4, ror #16
   34300:	andeq	r0, r0, ip, lsr r8
   34304:	andeq	r0, r0, r4, ror #16
   34308:	andeq	r0, r0, r4, ror #16
   3430c:	andeq	r0, r0, r4, ror #16
   34310:	andeq	r0, r0, r4, ror #16
   34314:	andeq	r0, r0, r4, ror #16
   34318:	andeq	r0, r0, r4, ror #16
   3431c:	andeq	r0, r0, r4, ror #16
   34320:	andeq	r0, r0, r4, ror #16
   34324:	andeq	r0, r0, r4, ror #16
   34328:	andeq	r0, r0, r4, ror #16
   3432c:	andeq	r0, r0, r4, ror #16
   34330:	andeq	r0, r0, r4, ror #16
   34334:	andeq	r0, r0, r4, ror #16
   34338:	andeq	r0, r0, r4, ror #16
   3433c:	andeq	r0, r0, r4, ror #16
   34340:	andeq	r0, r0, r4, ror #16
   34344:	andeq	r0, r0, r4, ror #16
   34348:	andeq	r0, r0, r4, ror #16
   3434c:	andeq	r0, r0, r4, ror #16
   34350:	andeq	r0, r0, r4, ror #16
   34354:	andeq	r0, r0, r4, ror #16
   34358:	andeq	r0, r0, r4, ror #16
   3435c:	andeq	r0, r0, r4, ror #16
   34360:	andeq	r0, r0, r4, ror #16
   34364:	andeq	r0, r0, r4, ror #16
   34368:	andeq	r0, r0, r4, ror #16
   3436c:	andeq	r0, r0, r4, ror #16
   34370:	andeq	r0, r0, r4, ror #16
   34374:	andeq	r0, r0, r4, ror #16
   34378:	andeq	r0, r0, r4, ror #16
   3437c:	andeq	r0, r0, r4, ror #16
   34380:	andeq	r0, r0, r4, ror #16
   34384:	andeq	r0, r0, r4, ror #16
   34388:	andeq	r0, r0, r4, ror #16
   3438c:	andeq	r0, r0, r4, ror #16
   34390:	andeq	r0, r0, r4, ror #16
   34394:	andeq	r0, r0, r4, ror #16
   34398:	andeq	r0, r0, r4, ror #16
   3439c:	andeq	r0, r0, r4, ror #16
   343a0:	andeq	r0, r0, r4, ror #16
   343a4:	andeq	r0, r0, r4, ror #16
   343a8:	andeq	r0, r0, r4, ror #16
   343ac:	andeq	r0, r0, r4, ror #16
   343b0:	andeq	r0, r0, r4, ror #16
   343b4:	andeq	r0, r0, r4, lsl r8
   343b8:	andeq	r0, r0, r4, ror #16
   343bc:	andeq	r0, r0, r4, ror #16
   343c0:	andeq	r0, r0, r4, ror #16
   343c4:	andeq	r0, r0, r4, ror #16
   343c8:	andeq	r0, r0, r4, ror #16
   343cc:	muleq	r0, ip, r7
   343d0:	andeq	r0, r0, r4, ror #16
   343d4:	andeq	r0, r0, r4, ror #16
   343d8:	andeq	r0, r0, r4, ror #16
   343dc:	andeq	r0, r0, r4, asr #15
   343e0:	andeq	r0, r0, r4, ror #16
   343e4:	andeq	r0, r0, r4, ror #16
   343e8:	andeq	r0, r0, r4, ror #16
   343ec:	andeq	r0, r0, r4, ror #16
   343f0:	andeq	r0, r0, r4, ror #16
   343f4:	andeq	r0, r0, r4, ror #16
   343f8:	andeq	r0, r0, r4, ror #16
   343fc:	andeq	r0, r0, ip, asr #14
   34400:	andeq	r0, r0, r4, ror #16
   34404:	andeq	r0, r0, r4, ror #16
   34408:	andeq	r0, r0, r4, ror #16
   3440c:	andeq	r0, r0, r4, ror r7
   34410:	andeq	r0, r0, r4, ror #16
   34414:	andeq	r0, r0, r4, lsr #14
   34418:	andeq	r0, r0, r0, lsr #6
   3441c:	andeq	r0, r0, r4, ror #16
   34420:	andeq	r0, r0, r4, ror #16
   34424:	andeq	r0, r0, ip, asr r1
   34428:	movw	r0, #0
   3442c:	strb	r0, [sp, #10]
   34430:	ldr	r0, [sp, #12]
   34434:	movw	r1, #1
   34438:	strb	r1, [r0]
   3443c:	ldr	r0, [sp, #16]
   34440:	ldr	r1, [fp, #-12]
   34444:	sub	r0, r0, r1
   34448:	cmp	r0, #4
   3444c:	bge	34478 <flatcc_json_parser_string_escape@@Base+0x23c>
   34450:	ldr	r0, [sp, #12]
   34454:	movw	r1, #0
   34458:	strb	r1, [r0]
   3445c:	ldr	r0, [fp, #-8]
   34460:	ldr	r1, [fp, #-12]
   34464:	ldr	r2, [sp, #16]
   34468:	movw	r3, #18
   3446c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   34470:	str	r0, [fp, #-4]
   34474:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   34478:	ldr	r0, [fp, #-12]
   3447c:	ldrb	r0, [r0, #2]
   34480:	strb	r0, [sp, #11]
   34484:	ldrb	r0, [sp, #11]
   34488:	cmp	r0, #48	; 0x30
   3448c:	blt	344b8 <flatcc_json_parser_string_escape@@Base+0x27c>
   34490:	ldrb	r0, [sp, #11]
   34494:	cmp	r0, #57	; 0x39
   34498:	bgt	344b8 <flatcc_json_parser_string_escape@@Base+0x27c>
   3449c:	ldrb	r0, [sp, #11]
   344a0:	sub	r0, r0, #48	; 0x30
   344a4:	lsl	r0, r0, #4
   344a8:	ldrb	r1, [sp, #10]
   344ac:	orr	r0, r1, r0
   344b0:	strb	r0, [sp, #10]
   344b4:	b	34528 <flatcc_json_parser_string_escape@@Base+0x2ec>
   344b8:	ldrb	r0, [sp, #11]
   344bc:	orr	r0, r0, #32
   344c0:	strb	r0, [sp, #11]
   344c4:	ldrb	r0, [sp, #11]
   344c8:	cmp	r0, #97	; 0x61
   344cc:	blt	344fc <flatcc_json_parser_string_escape@@Base+0x2c0>
   344d0:	ldrb	r0, [sp, #11]
   344d4:	cmp	r0, #102	; 0x66
   344d8:	bgt	344fc <flatcc_json_parser_string_escape@@Base+0x2c0>
   344dc:	ldrb	r0, [sp, #11]
   344e0:	sub	r0, r0, #97	; 0x61
   344e4:	add	r0, r0, #10
   344e8:	lsl	r0, r0, #4
   344ec:	ldrb	r1, [sp, #10]
   344f0:	orr	r0, r1, r0
   344f4:	strb	r0, [sp, #10]
   344f8:	b	34524 <flatcc_json_parser_string_escape@@Base+0x2e8>
   344fc:	ldr	r0, [sp, #12]
   34500:	movw	r1, #0
   34504:	strb	r1, [r0]
   34508:	ldr	r0, [fp, #-8]
   3450c:	ldr	r1, [fp, #-12]
   34510:	ldr	r2, [sp, #16]
   34514:	movw	r3, #18
   34518:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   3451c:	str	r0, [fp, #-4]
   34520:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   34524:	b	34528 <flatcc_json_parser_string_escape@@Base+0x2ec>
   34528:	ldr	r0, [fp, #-12]
   3452c:	ldrb	r0, [r0, #3]
   34530:	strb	r0, [sp, #11]
   34534:	ldrb	r0, [sp, #11]
   34538:	cmp	r0, #48	; 0x30
   3453c:	blt	34564 <flatcc_json_parser_string_escape@@Base+0x328>
   34540:	ldrb	r0, [sp, #11]
   34544:	cmp	r0, #57	; 0x39
   34548:	bgt	34564 <flatcc_json_parser_string_escape@@Base+0x328>
   3454c:	ldrb	r0, [sp, #11]
   34550:	sub	r0, r0, #48	; 0x30
   34554:	ldrb	r1, [sp, #10]
   34558:	orr	r0, r1, r0
   3455c:	strb	r0, [sp, #10]
   34560:	b	345d0 <flatcc_json_parser_string_escape@@Base+0x394>
   34564:	ldrb	r0, [sp, #11]
   34568:	orr	r0, r0, #32
   3456c:	strb	r0, [sp, #11]
   34570:	ldrb	r0, [sp, #11]
   34574:	cmp	r0, #97	; 0x61
   34578:	blt	345a4 <flatcc_json_parser_string_escape@@Base+0x368>
   3457c:	ldrb	r0, [sp, #11]
   34580:	cmp	r0, #102	; 0x66
   34584:	bgt	345a4 <flatcc_json_parser_string_escape@@Base+0x368>
   34588:	ldrb	r0, [sp, #11]
   3458c:	sub	r0, r0, #97	; 0x61
   34590:	add	r0, r0, #10
   34594:	ldrb	r1, [sp, #10]
   34598:	orr	r0, r1, r0
   3459c:	strb	r0, [sp, #10]
   345a0:	b	345cc <flatcc_json_parser_string_escape@@Base+0x390>
   345a4:	ldr	r0, [sp, #12]
   345a8:	movw	r1, #0
   345ac:	strb	r1, [r0]
   345b0:	ldr	r0, [fp, #-8]
   345b4:	ldr	r1, [fp, #-12]
   345b8:	ldr	r2, [sp, #16]
   345bc:	movw	r3, #18
   345c0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   345c4:	str	r0, [fp, #-4]
   345c8:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   345cc:	b	345d0 <flatcc_json_parser_string_escape@@Base+0x394>
   345d0:	ldrb	r0, [sp, #10]
   345d4:	ldr	r1, [sp, #12]
   345d8:	strb	r0, [r1, #1]
   345dc:	ldr	r0, [fp, #-12]
   345e0:	add	r0, r0, #4
   345e4:	str	r0, [fp, #-4]
   345e8:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   345ec:	ldr	r0, [sp, #16]
   345f0:	ldr	r1, [fp, #-12]
   345f4:	sub	r0, r0, r1
   345f8:	cmp	r0, #6
   345fc:	bge	34628 <flatcc_json_parser_string_escape@@Base+0x3ec>
   34600:	ldr	r0, [sp, #12]
   34604:	movw	r1, #0
   34608:	strb	r1, [r0]
   3460c:	ldr	r0, [fp, #-8]
   34610:	ldr	r1, [fp, #-12]
   34614:	ldr	r2, [sp, #16]
   34618:	movw	r3, #18
   3461c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   34620:	str	r0, [fp, #-4]
   34624:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   34628:	movw	r0, #0
   3462c:	strh	r0, [sp, #8]
   34630:	ldr	r0, [fp, #-12]
   34634:	ldrb	r0, [r0, #2]
   34638:	strb	r0, [sp, #11]
   3463c:	ldrb	r0, [sp, #11]
   34640:	cmp	r0, #48	; 0x30
   34644:	blt	34670 <flatcc_json_parser_string_escape@@Base+0x434>
   34648:	ldrb	r0, [sp, #11]
   3464c:	cmp	r0, #57	; 0x39
   34650:	bgt	34670 <flatcc_json_parser_string_escape@@Base+0x434>
   34654:	ldrb	r0, [sp, #11]
   34658:	sub	r0, r0, #48	; 0x30
   3465c:	strh	r0, [sp, #6]
   34660:	ldrh	r0, [sp, #6]
   34664:	lsl	r0, r0, #12
   34668:	strh	r0, [sp, #8]
   3466c:	b	346e8 <flatcc_json_parser_string_escape@@Base+0x4ac>
   34670:	ldrb	r0, [sp, #11]
   34674:	orr	r0, r0, #32
   34678:	strb	r0, [sp, #11]
   3467c:	ldrb	r0, [sp, #11]
   34680:	cmp	r0, #97	; 0x61
   34684:	blt	346bc <flatcc_json_parser_string_escape@@Base+0x480>
   34688:	ldrb	r0, [sp, #11]
   3468c:	cmp	r0, #102	; 0x66
   34690:	bgt	346bc <flatcc_json_parser_string_escape@@Base+0x480>
   34694:	ldrb	r0, [sp, #11]
   34698:	sub	r0, r0, #97	; 0x61
   3469c:	add	r0, r0, #10
   346a0:	strh	r0, [sp, #6]
   346a4:	ldrh	r0, [sp, #6]
   346a8:	lsl	r0, r0, #12
   346ac:	ldrh	r1, [sp, #8]
   346b0:	orr	r0, r1, r0
   346b4:	strh	r0, [sp, #8]
   346b8:	b	346e4 <flatcc_json_parser_string_escape@@Base+0x4a8>
   346bc:	ldr	r0, [sp, #12]
   346c0:	movw	r1, #0
   346c4:	strb	r1, [r0]
   346c8:	ldr	r0, [fp, #-8]
   346cc:	ldr	r1, [fp, #-12]
   346d0:	ldr	r2, [sp, #16]
   346d4:	movw	r3, #18
   346d8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   346dc:	str	r0, [fp, #-4]
   346e0:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   346e4:	b	346e8 <flatcc_json_parser_string_escape@@Base+0x4ac>
   346e8:	ldr	r0, [fp, #-12]
   346ec:	ldrb	r0, [r0, #3]
   346f0:	strb	r0, [sp, #11]
   346f4:	ldrb	r0, [sp, #11]
   346f8:	cmp	r0, #48	; 0x30
   346fc:	blt	34730 <flatcc_json_parser_string_escape@@Base+0x4f4>
   34700:	ldrb	r0, [sp, #11]
   34704:	cmp	r0, #57	; 0x39
   34708:	bgt	34730 <flatcc_json_parser_string_escape@@Base+0x4f4>
   3470c:	ldrb	r0, [sp, #11]
   34710:	sub	r0, r0, #48	; 0x30
   34714:	strh	r0, [sp, #6]
   34718:	ldrh	r0, [sp, #6]
   3471c:	lsl	r0, r0, #8
   34720:	ldrh	r1, [sp, #8]
   34724:	orr	r0, r1, r0
   34728:	strh	r0, [sp, #8]
   3472c:	b	347a8 <flatcc_json_parser_string_escape@@Base+0x56c>
   34730:	ldrb	r0, [sp, #11]
   34734:	orr	r0, r0, #32
   34738:	strb	r0, [sp, #11]
   3473c:	ldrb	r0, [sp, #11]
   34740:	cmp	r0, #97	; 0x61
   34744:	blt	3477c <flatcc_json_parser_string_escape@@Base+0x540>
   34748:	ldrb	r0, [sp, #11]
   3474c:	cmp	r0, #102	; 0x66
   34750:	bgt	3477c <flatcc_json_parser_string_escape@@Base+0x540>
   34754:	ldrb	r0, [sp, #11]
   34758:	sub	r0, r0, #97	; 0x61
   3475c:	add	r0, r0, #10
   34760:	strh	r0, [sp, #6]
   34764:	ldrh	r0, [sp, #6]
   34768:	lsl	r0, r0, #8
   3476c:	ldrh	r1, [sp, #8]
   34770:	orr	r0, r1, r0
   34774:	strh	r0, [sp, #8]
   34778:	b	347a4 <flatcc_json_parser_string_escape@@Base+0x568>
   3477c:	ldr	r0, [sp, #12]
   34780:	movw	r1, #0
   34784:	strb	r1, [r0]
   34788:	ldr	r0, [fp, #-8]
   3478c:	ldr	r1, [fp, #-12]
   34790:	ldr	r2, [sp, #16]
   34794:	movw	r3, #18
   34798:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   3479c:	str	r0, [fp, #-4]
   347a0:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   347a4:	b	347a8 <flatcc_json_parser_string_escape@@Base+0x56c>
   347a8:	ldr	r0, [fp, #-12]
   347ac:	ldrb	r0, [r0, #4]
   347b0:	strb	r0, [sp, #11]
   347b4:	ldrb	r0, [sp, #11]
   347b8:	cmp	r0, #48	; 0x30
   347bc:	blt	347f0 <flatcc_json_parser_string_escape@@Base+0x5b4>
   347c0:	ldrb	r0, [sp, #11]
   347c4:	cmp	r0, #57	; 0x39
   347c8:	bgt	347f0 <flatcc_json_parser_string_escape@@Base+0x5b4>
   347cc:	ldrb	r0, [sp, #11]
   347d0:	sub	r0, r0, #48	; 0x30
   347d4:	strh	r0, [sp, #6]
   347d8:	ldrh	r0, [sp, #6]
   347dc:	lsl	r0, r0, #4
   347e0:	ldrh	r1, [sp, #8]
   347e4:	orr	r0, r1, r0
   347e8:	strh	r0, [sp, #8]
   347ec:	b	34868 <flatcc_json_parser_string_escape@@Base+0x62c>
   347f0:	ldrb	r0, [sp, #11]
   347f4:	orr	r0, r0, #32
   347f8:	strb	r0, [sp, #11]
   347fc:	ldrb	r0, [sp, #11]
   34800:	cmp	r0, #97	; 0x61
   34804:	blt	3483c <flatcc_json_parser_string_escape@@Base+0x600>
   34808:	ldrb	r0, [sp, #11]
   3480c:	cmp	r0, #102	; 0x66
   34810:	bgt	3483c <flatcc_json_parser_string_escape@@Base+0x600>
   34814:	ldrb	r0, [sp, #11]
   34818:	sub	r0, r0, #97	; 0x61
   3481c:	add	r0, r0, #10
   34820:	strh	r0, [sp, #6]
   34824:	ldrh	r0, [sp, #6]
   34828:	lsl	r0, r0, #4
   3482c:	ldrh	r1, [sp, #8]
   34830:	orr	r0, r1, r0
   34834:	strh	r0, [sp, #8]
   34838:	b	34864 <flatcc_json_parser_string_escape@@Base+0x628>
   3483c:	ldr	r0, [sp, #12]
   34840:	movw	r1, #0
   34844:	strb	r1, [r0]
   34848:	ldr	r0, [fp, #-8]
   3484c:	ldr	r1, [fp, #-12]
   34850:	ldr	r2, [sp, #16]
   34854:	movw	r3, #18
   34858:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   3485c:	str	r0, [fp, #-4]
   34860:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   34864:	b	34868 <flatcc_json_parser_string_escape@@Base+0x62c>
   34868:	ldr	r0, [fp, #-12]
   3486c:	ldrb	r0, [r0, #5]
   34870:	strb	r0, [sp, #11]
   34874:	ldrb	r0, [sp, #11]
   34878:	cmp	r0, #48	; 0x30
   3487c:	blt	348ac <flatcc_json_parser_string_escape@@Base+0x670>
   34880:	ldrb	r0, [sp, #11]
   34884:	cmp	r0, #57	; 0x39
   34888:	bgt	348ac <flatcc_json_parser_string_escape@@Base+0x670>
   3488c:	ldrb	r0, [sp, #11]
   34890:	sub	r0, r0, #48	; 0x30
   34894:	strh	r0, [sp, #6]
   34898:	ldrh	r0, [sp, #6]
   3489c:	ldrh	r1, [sp, #8]
   348a0:	orr	r0, r1, r0
   348a4:	strh	r0, [sp, #8]
   348a8:	b	34920 <flatcc_json_parser_string_escape@@Base+0x6e4>
   348ac:	ldrb	r0, [sp, #11]
   348b0:	orr	r0, r0, #32
   348b4:	strb	r0, [sp, #11]
   348b8:	ldrb	r0, [sp, #11]
   348bc:	cmp	r0, #97	; 0x61
   348c0:	blt	348f4 <flatcc_json_parser_string_escape@@Base+0x6b8>
   348c4:	ldrb	r0, [sp, #11]
   348c8:	cmp	r0, #102	; 0x66
   348cc:	bgt	348f4 <flatcc_json_parser_string_escape@@Base+0x6b8>
   348d0:	ldrb	r0, [sp, #11]
   348d4:	sub	r0, r0, #97	; 0x61
   348d8:	add	r0, r0, #10
   348dc:	strh	r0, [sp, #6]
   348e0:	ldrh	r0, [sp, #6]
   348e4:	ldrh	r1, [sp, #8]
   348e8:	orr	r0, r1, r0
   348ec:	strh	r0, [sp, #8]
   348f0:	b	3491c <flatcc_json_parser_string_escape@@Base+0x6e0>
   348f4:	ldr	r0, [sp, #12]
   348f8:	movw	r1, #0
   348fc:	strb	r1, [r0]
   34900:	ldr	r0, [fp, #-8]
   34904:	ldr	r1, [fp, #-12]
   34908:	ldr	r2, [sp, #16]
   3490c:	movw	r3, #18
   34910:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   34914:	str	r0, [fp, #-4]
   34918:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   3491c:	b	34920 <flatcc_json_parser_string_escape@@Base+0x6e4>
   34920:	ldrh	r0, [sp, #8]
   34924:	cmp	r0, #127	; 0x7f
   34928:	bgt	34948 <flatcc_json_parser_string_escape@@Base+0x70c>
   3492c:	ldr	r0, [sp, #12]
   34930:	movw	r1, #1
   34934:	strb	r1, [r0]
   34938:	ldrh	r0, [sp, #8]
   3493c:	ldr	r1, [sp, #12]
   34940:	strb	r0, [r1, #1]
   34944:	b	349e0 <flatcc_json_parser_string_escape@@Base+0x7a4>
   34948:	ldrh	r0, [sp, #8]
   3494c:	movw	r1, #2047	; 0x7ff
   34950:	cmp	r0, r1
   34954:	bgt	34990 <flatcc_json_parser_string_escape@@Base+0x754>
   34958:	ldr	r0, [sp, #12]
   3495c:	movw	r1, #2
   34960:	strb	r1, [r0]
   34964:	ldrh	r0, [sp, #8]
   34968:	asr	r0, r0, #6
   3496c:	orr	r0, r0, #192	; 0xc0
   34970:	ldr	r1, [sp, #12]
   34974:	strb	r0, [r1, #1]
   34978:	ldrh	r0, [sp, #8]
   3497c:	and	r0, r0, #63	; 0x3f
   34980:	orr	r0, r0, #128	; 0x80
   34984:	ldr	r1, [sp, #12]
   34988:	strb	r0, [r1, #2]
   3498c:	b	349dc <flatcc_json_parser_string_escape@@Base+0x7a0>
   34990:	ldr	r0, [sp, #12]
   34994:	movw	r1, #3
   34998:	strb	r1, [r0]
   3499c:	ldrh	r0, [sp, #8]
   349a0:	asr	r0, r0, #12
   349a4:	orr	r0, r0, #224	; 0xe0
   349a8:	ldr	r1, [sp, #12]
   349ac:	strb	r0, [r1, #1]
   349b0:	ldrh	r0, [sp, #8]
   349b4:	asr	r0, r0, #6
   349b8:	and	r0, r0, #63	; 0x3f
   349bc:	orr	r0, r0, #128	; 0x80
   349c0:	ldr	r1, [sp, #12]
   349c4:	strb	r0, [r1, #2]
   349c8:	ldrh	r0, [sp, #8]
   349cc:	and	r0, r0, #63	; 0x3f
   349d0:	orr	r0, r0, #128	; 0x80
   349d4:	ldr	r1, [sp, #12]
   349d8:	strb	r0, [r1, #3]
   349dc:	b	349e0 <flatcc_json_parser_string_escape@@Base+0x7a4>
   349e0:	ldr	r0, [fp, #-12]
   349e4:	add	r0, r0, #6
   349e8:	str	r0, [fp, #-4]
   349ec:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   349f0:	ldr	r0, [sp, #12]
   349f4:	movw	r1, #1
   349f8:	strb	r1, [r0]
   349fc:	ldr	r0, [sp, #12]
   34a00:	movw	r1, #9
   34a04:	strb	r1, [r0, #1]
   34a08:	ldr	r0, [fp, #-12]
   34a0c:	add	r0, r0, #2
   34a10:	str	r0, [fp, #-4]
   34a14:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   34a18:	ldr	r0, [sp, #12]
   34a1c:	movw	r1, #1
   34a20:	strb	r1, [r0]
   34a24:	ldr	r0, [sp, #12]
   34a28:	movw	r1, #10
   34a2c:	strb	r1, [r0, #1]
   34a30:	ldr	r0, [fp, #-12]
   34a34:	add	r0, r0, #2
   34a38:	str	r0, [fp, #-4]
   34a3c:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   34a40:	ldr	r0, [sp, #12]
   34a44:	movw	r1, #1
   34a48:	strb	r1, [r0]
   34a4c:	ldr	r0, [sp, #12]
   34a50:	movw	r1, #13
   34a54:	strb	r1, [r0, #1]
   34a58:	ldr	r0, [fp, #-12]
   34a5c:	add	r0, r0, #2
   34a60:	str	r0, [fp, #-4]
   34a64:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   34a68:	ldr	r0, [sp, #12]
   34a6c:	movw	r1, #1
   34a70:	strb	r1, [r0]
   34a74:	ldr	r0, [sp, #12]
   34a78:	movw	r1, #8
   34a7c:	strb	r1, [r0, #1]
   34a80:	ldr	r0, [fp, #-12]
   34a84:	add	r0, r0, #2
   34a88:	str	r0, [fp, #-4]
   34a8c:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   34a90:	ldr	r0, [sp, #12]
   34a94:	movw	r1, #1
   34a98:	strb	r1, [r0]
   34a9c:	ldr	r0, [sp, #12]
   34aa0:	movw	r1, #12
   34aa4:	strb	r1, [r0, #1]
   34aa8:	ldr	r0, [fp, #-12]
   34aac:	add	r0, r0, #2
   34ab0:	str	r0, [fp, #-4]
   34ab4:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   34ab8:	ldr	r0, [sp, #12]
   34abc:	movw	r1, #1
   34ac0:	strb	r1, [r0]
   34ac4:	ldr	r0, [sp, #12]
   34ac8:	movw	r1, #34	; 0x22
   34acc:	strb	r1, [r0, #1]
   34ad0:	ldr	r0, [fp, #-12]
   34ad4:	add	r0, r0, #2
   34ad8:	str	r0, [fp, #-4]
   34adc:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   34ae0:	ldr	r0, [sp, #12]
   34ae4:	movw	r1, #1
   34ae8:	strb	r1, [r0]
   34aec:	ldr	r0, [sp, #12]
   34af0:	movw	r1, #92	; 0x5c
   34af4:	strb	r1, [r0, #1]
   34af8:	ldr	r0, [fp, #-12]
   34afc:	add	r0, r0, #2
   34b00:	str	r0, [fp, #-4]
   34b04:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   34b08:	ldr	r0, [sp, #12]
   34b0c:	movw	r1, #1
   34b10:	strb	r1, [r0]
   34b14:	ldr	r0, [sp, #12]
   34b18:	movw	r1, #47	; 0x2f
   34b1c:	strb	r1, [r0, #1]
   34b20:	ldr	r0, [fp, #-12]
   34b24:	add	r0, r0, #2
   34b28:	str	r0, [fp, #-4]
   34b2c:	b	34b54 <flatcc_json_parser_string_escape@@Base+0x918>
   34b30:	ldr	r0, [sp, #12]
   34b34:	movw	r1, #0
   34b38:	strb	r1, [r0]
   34b3c:	ldr	r0, [fp, #-8]
   34b40:	ldr	r1, [fp, #-12]
   34b44:	ldr	r2, [sp, #16]
   34b48:	movw	r3, #18
   34b4c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   34b50:	str	r0, [fp, #-4]
   34b54:	ldr	r0, [fp, #-4]
   34b58:	mov	sp, fp
   34b5c:	pop	{fp, pc}

00034b60 <flatcc_json_parser_skip_constant@@Base>:
   34b60:	push	{fp, lr}
   34b64:	mov	fp, sp
   34b68:	sub	sp, sp, #24
   34b6c:	str	r0, [fp, #-8]
   34b70:	str	r1, [sp, #12]
   34b74:	str	r2, [sp, #8]
   34b78:	ldr	r0, [sp, #12]
   34b7c:	ldr	r1, [sp, #8]
   34b80:	cmp	r0, r1
   34b84:	beq	34c50 <flatcc_json_parser_skip_constant@@Base+0xf0>
   34b88:	ldr	r0, [sp, #12]
   34b8c:	ldrb	r0, [r0]
   34b90:	strb	r0, [sp, #7]
   34b94:	ldrb	r0, [sp, #7]
   34b98:	and	r0, r0, #128	; 0x80
   34b9c:	cmp	r0, #0
   34ba0:	bne	34bd4 <flatcc_json_parser_skip_constant@@Base+0x74>
   34ba4:	ldrb	r0, [sp, #7]
   34ba8:	cmp	r0, #95	; 0x5f
   34bac:	beq	34bd4 <flatcc_json_parser_skip_constant@@Base+0x74>
   34bb0:	ldrb	r0, [sp, #7]
   34bb4:	cmp	r0, #48	; 0x30
   34bb8:	blt	34bc8 <flatcc_json_parser_skip_constant@@Base+0x68>
   34bbc:	ldrb	r0, [sp, #7]
   34bc0:	cmp	r0, #57	; 0x39
   34bc4:	ble	34bd4 <flatcc_json_parser_skip_constant@@Base+0x74>
   34bc8:	ldrb	r0, [sp, #7]
   34bcc:	cmp	r0, #46	; 0x2e
   34bd0:	bne	34be4 <flatcc_json_parser_skip_constant@@Base+0x84>
   34bd4:	ldr	r0, [sp, #12]
   34bd8:	add	r0, r0, #1
   34bdc:	str	r0, [sp, #12]
   34be0:	b	34b78 <flatcc_json_parser_skip_constant@@Base+0x18>
   34be4:	ldrb	r0, [sp, #7]
   34be8:	orr	r0, r0, #32
   34bec:	strb	r0, [sp, #7]
   34bf0:	ldrb	r0, [sp, #7]
   34bf4:	cmp	r0, #97	; 0x61
   34bf8:	blt	34c18 <flatcc_json_parser_skip_constant@@Base+0xb8>
   34bfc:	ldrb	r0, [sp, #7]
   34c00:	cmp	r0, #122	; 0x7a
   34c04:	bgt	34c18 <flatcc_json_parser_skip_constant@@Base+0xb8>
   34c08:	ldr	r0, [sp, #12]
   34c0c:	add	r0, r0, #1
   34c10:	str	r0, [sp, #12]
   34c14:	b	34b78 <flatcc_json_parser_skip_constant@@Base+0x18>
   34c18:	ldr	r0, [fp, #-8]
   34c1c:	ldr	r1, [sp, #12]
   34c20:	str	r1, [sp]
   34c24:	ldr	r2, [sp, #8]
   34c28:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   34c2c:	str	r0, [sp, #12]
   34c30:	ldr	r0, [sp, #12]
   34c34:	ldr	r1, [sp]
   34c38:	cmp	r0, r1
   34c3c:	bne	34c4c <flatcc_json_parser_skip_constant@@Base+0xec>
   34c40:	ldr	r0, [sp, #12]
   34c44:	str	r0, [fp, #-4]
   34c48:	b	34c58 <flatcc_json_parser_skip_constant@@Base+0xf8>
   34c4c:	b	34b78 <flatcc_json_parser_skip_constant@@Base+0x18>
   34c50:	ldr	r0, [sp, #12]
   34c54:	str	r0, [fp, #-4]
   34c58:	ldr	r0, [fp, #-4]
   34c5c:	mov	sp, fp
   34c60:	pop	{fp, pc}
   34c64:	push	{fp, lr}
   34c68:	mov	fp, sp
   34c6c:	sub	sp, sp, #16
   34c70:	str	r0, [sp, #8]
   34c74:	str	r1, [sp, #4]
   34c78:	str	r2, [sp]
   34c7c:	ldr	r0, [sp]
   34c80:	ldr	r1, [sp, #4]
   34c84:	sub	r0, r0, r1
   34c88:	cmp	r0, #1
   34c8c:	ble	34ce0 <flatcc_json_parser_skip_constant@@Base+0x180>
   34c90:	ldr	r0, [sp, #4]
   34c94:	ldrb	r0, [r0]
   34c98:	cmp	r0, #32
   34c9c:	ble	34cac <flatcc_json_parser_skip_constant@@Base+0x14c>
   34ca0:	ldr	r0, [sp, #4]
   34ca4:	str	r0, [fp, #-4]
   34ca8:	b	34cf4 <flatcc_json_parser_skip_constant@@Base+0x194>
   34cac:	ldr	r0, [sp, #4]
   34cb0:	ldrb	r0, [r0]
   34cb4:	cmp	r0, #32
   34cb8:	bne	34cdc <flatcc_json_parser_skip_constant@@Base+0x17c>
   34cbc:	ldr	r0, [sp, #4]
   34cc0:	ldrb	r0, [r0, #1]
   34cc4:	cmp	r0, #32
   34cc8:	ble	34cdc <flatcc_json_parser_skip_constant@@Base+0x17c>
   34ccc:	ldr	r0, [sp, #4]
   34cd0:	add	r0, r0, #1
   34cd4:	str	r0, [fp, #-4]
   34cd8:	b	34cf4 <flatcc_json_parser_skip_constant@@Base+0x194>
   34cdc:	b	34ce0 <flatcc_json_parser_skip_constant@@Base+0x180>
   34ce0:	ldr	r0, [sp, #8]
   34ce4:	ldr	r1, [sp, #4]
   34ce8:	ldr	r2, [sp]
   34cec:	bl	34058 <flatcc_json_parser_space_ext@@Base>
   34cf0:	str	r0, [fp, #-4]
   34cf4:	ldr	r0, [fp, #-4]
   34cf8:	mov	sp, fp
   34cfc:	pop	{fp, pc}

00034d00 <flatcc_json_parser_match_constant@@Base>:
   34d00:	push	{fp, lr}
   34d04:	mov	fp, sp
   34d08:	sub	sp, sp, #40	; 0x28
   34d0c:	ldr	ip, [fp, #8]
   34d10:	str	r0, [fp, #-8]
   34d14:	str	r1, [fp, #-12]
   34d18:	str	r2, [fp, #-16]
   34d1c:	str	r3, [sp, #20]
   34d20:	ldr	r0, [fp, #-12]
   34d24:	str	r0, [sp, #16]
   34d28:	ldr	r0, [fp, #-12]
   34d2c:	ldr	r1, [sp, #20]
   34d30:	add	r0, r0, r1
   34d34:	str	r0, [sp, #12]
   34d38:	ldr	r0, [fp, #-16]
   34d3c:	ldr	r1, [fp, #-12]
   34d40:	sub	r0, r0, r1
   34d44:	ldr	r1, [sp, #20]
   34d48:	cmp	r0, r1
   34d4c:	bgt	34d68 <flatcc_json_parser_match_constant@@Base+0x68>
   34d50:	ldr	r0, [fp, #8]
   34d54:	movw	r1, #0
   34d58:	str	r1, [r0]
   34d5c:	ldr	r0, [fp, #-12]
   34d60:	str	r0, [fp, #-4]
   34d64:	b	34ff4 <flatcc_json_parser_match_constant@@Base+0x2f4>
   34d68:	ldr	r0, [fp, #-8]
   34d6c:	ldr	r0, [r0, #12]
   34d70:	cmp	r0, #0
   34d74:	beq	34e98 <flatcc_json_parser_match_constant@@Base+0x198>
   34d78:	ldr	r0, [fp, #-8]
   34d7c:	ldr	r1, [sp, #12]
   34d80:	ldr	r2, [fp, #-16]
   34d84:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   34d88:	str	r0, [fp, #-12]
   34d8c:	ldr	r0, [fp, #-12]
   34d90:	ldr	r1, [fp, #-16]
   34d94:	cmp	r0, r1
   34d98:	bne	34db4 <flatcc_json_parser_match_constant@@Base+0xb4>
   34d9c:	ldr	r0, [fp, #8]
   34da0:	movw	r1, #0
   34da4:	str	r1, [r0]
   34da8:	ldr	r0, [fp, #-12]
   34dac:	str	r0, [fp, #-4]
   34db0:	b	34ff4 <flatcc_json_parser_match_constant@@Base+0x2f4>
   34db4:	ldr	r0, [fp, #-12]
   34db8:	ldr	r1, [sp, #12]
   34dbc:	cmp	r0, r1
   34dc0:	beq	34e44 <flatcc_json_parser_match_constant@@Base+0x144>
   34dc4:	ldr	r0, [fp, #-12]
   34dc8:	ldrb	r0, [r0]
   34dcc:	strb	r0, [sp, #11]
   34dd0:	ldrb	r0, [sp, #11]
   34dd4:	cmp	r0, #95	; 0x5f
   34dd8:	beq	34dec <flatcc_json_parser_match_constant@@Base+0xec>
   34ddc:	ldrb	r0, [sp, #11]
   34de0:	and	r0, r0, #128	; 0x80
   34de4:	cmp	r0, #0
   34de8:	beq	34e04 <flatcc_json_parser_match_constant@@Base+0x104>
   34dec:	ldr	r0, [fp, #8]
   34df0:	movw	r1, #1
   34df4:	str	r1, [r0]
   34df8:	ldr	r0, [fp, #-12]
   34dfc:	str	r0, [fp, #-4]
   34e00:	b	34ff4 <flatcc_json_parser_match_constant@@Base+0x2f4>
   34e04:	ldrb	r0, [sp, #11]
   34e08:	orr	r0, r0, #32
   34e0c:	strb	r0, [sp, #11]
   34e10:	ldrb	r0, [sp, #11]
   34e14:	cmp	r0, #97	; 0x61
   34e18:	blt	34e40 <flatcc_json_parser_match_constant@@Base+0x140>
   34e1c:	ldrb	r0, [sp, #11]
   34e20:	cmp	r0, #122	; 0x7a
   34e24:	bgt	34e40 <flatcc_json_parser_match_constant@@Base+0x140>
   34e28:	ldr	r0, [fp, #8]
   34e2c:	movw	r1, #1
   34e30:	str	r1, [r0]
   34e34:	ldr	r0, [fp, #-12]
   34e38:	str	r0, [fp, #-4]
   34e3c:	b	34ff4 <flatcc_json_parser_match_constant@@Base+0x2f4>
   34e40:	b	34e44 <flatcc_json_parser_match_constant@@Base+0x144>
   34e44:	ldr	r0, [fp, #8]
   34e48:	movw	r1, #0
   34e4c:	str	r1, [r0]
   34e50:	ldr	r0, [fp, #-12]
   34e54:	ldrb	r0, [r0]
   34e58:	cmp	r0, #44	; 0x2c
   34e5c:	beq	34e80 <flatcc_json_parser_match_constant@@Base+0x180>
   34e60:	ldr	r0, [fp, #-12]
   34e64:	ldrb	r0, [r0]
   34e68:	cmp	r0, #125	; 0x7d
   34e6c:	beq	34e80 <flatcc_json_parser_match_constant@@Base+0x180>
   34e70:	ldr	r0, [fp, #-12]
   34e74:	ldrb	r0, [r0]
   34e78:	cmp	r0, #93	; 0x5d
   34e7c:	bne	34e8c <flatcc_json_parser_match_constant@@Base+0x18c>
   34e80:	ldr	r0, [fp, #-12]
   34e84:	str	r0, [fp, #-4]
   34e88:	b	34ff4 <flatcc_json_parser_match_constant@@Base+0x2f4>
   34e8c:	ldr	r0, [sp, #16]
   34e90:	str	r0, [fp, #-4]
   34e94:	b	34ff4 <flatcc_json_parser_match_constant@@Base+0x2f4>
   34e98:	ldr	r0, [sp, #12]
   34e9c:	str	r0, [fp, #-12]
   34ea0:	ldr	r0, [fp, #-12]
   34ea4:	ldrb	r0, [r0]
   34ea8:	cmp	r0, #32
   34eac:	bne	34f5c <flatcc_json_parser_match_constant@@Base+0x25c>
   34eb0:	ldr	r0, [fp, #-12]
   34eb4:	add	r0, r0, #1
   34eb8:	str	r0, [fp, #-12]
   34ebc:	ldr	r0, [fp, #-12]
   34ec0:	ldr	r1, [fp, #-16]
   34ec4:	cmp	r0, r1
   34ec8:	movw	r0, #0
   34ecc:	str	r0, [sp, #4]
   34ed0:	beq	34eec <flatcc_json_parser_match_constant@@Base+0x1ec>
   34ed4:	ldr	r0, [fp, #-12]
   34ed8:	ldrb	r0, [r0]
   34edc:	cmp	r0, #32
   34ee0:	movw	r0, #0
   34ee4:	moveq	r0, #1
   34ee8:	str	r0, [sp, #4]
   34eec:	ldr	r0, [sp, #4]
   34ef0:	tst	r0, #1
   34ef4:	beq	34f08 <flatcc_json_parser_match_constant@@Base+0x208>
   34ef8:	ldr	r0, [fp, #-12]
   34efc:	add	r0, r0, #1
   34f00:	str	r0, [fp, #-12]
   34f04:	b	34ebc <flatcc_json_parser_match_constant@@Base+0x1bc>
   34f08:	ldr	r0, [fp, #-12]
   34f0c:	ldr	r1, [fp, #-16]
   34f10:	cmp	r0, r1
   34f14:	bne	34f30 <flatcc_json_parser_match_constant@@Base+0x230>
   34f18:	ldr	r0, [fp, #8]
   34f1c:	movw	r1, #0
   34f20:	str	r1, [r0]
   34f24:	ldr	r0, [fp, #-12]
   34f28:	str	r0, [fp, #-4]
   34f2c:	b	34ff4 <flatcc_json_parser_match_constant@@Base+0x2f4>
   34f30:	ldr	r0, [fp, #-12]
   34f34:	ldrb	r0, [r0]
   34f38:	cmp	r0, #34	; 0x22
   34f3c:	beq	34f58 <flatcc_json_parser_match_constant@@Base+0x258>
   34f40:	ldr	r0, [fp, #8]
   34f44:	movw	r1, #1
   34f48:	str	r1, [r0]
   34f4c:	ldr	r0, [fp, #-12]
   34f50:	str	r0, [fp, #-4]
   34f54:	b	34ff4 <flatcc_json_parser_match_constant@@Base+0x2f4>
   34f58:	b	34f5c <flatcc_json_parser_match_constant@@Base+0x25c>
   34f5c:	ldr	r0, [fp, #-12]
   34f60:	ldrb	r0, [r0]
   34f64:	mov	r1, r0
   34f68:	cmp	r0, #34	; 0x22
   34f6c:	str	r1, [sp]
   34f70:	beq	34fb0 <flatcc_json_parser_match_constant@@Base+0x2b0>
   34f74:	b	34f78 <flatcc_json_parser_match_constant@@Base+0x278>
   34f78:	ldr	r0, [sp]
   34f7c:	cmp	r0, #92	; 0x5c
   34f80:	bne	34fe0 <flatcc_json_parser_match_constant@@Base+0x2e0>
   34f84:	b	34f88 <flatcc_json_parser_match_constant@@Base+0x288>
   34f88:	ldr	r0, [fp, #8]
   34f8c:	movw	r1, #0
   34f90:	str	r1, [r0]
   34f94:	ldr	r0, [fp, #-8]
   34f98:	ldr	r1, [fp, #-12]
   34f9c:	ldr	r2, [fp, #-16]
   34fa0:	movw	r3, #18
   34fa4:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   34fa8:	str	r0, [fp, #-4]
   34fac:	b	34ff4 <flatcc_json_parser_match_constant@@Base+0x2f4>
   34fb0:	ldr	r0, [fp, #-8]
   34fb4:	ldr	r1, [fp, #-12]
   34fb8:	add	r1, r1, #1
   34fbc:	movw	r2, #0
   34fc0:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   34fc4:	str	r0, [fp, #-12]
   34fc8:	ldr	r0, [fp, #8]
   34fcc:	movw	r1, #0
   34fd0:	str	r1, [r0]
   34fd4:	ldr	r0, [fp, #-12]
   34fd8:	str	r0, [fp, #-4]
   34fdc:	b	34ff4 <flatcc_json_parser_match_constant@@Base+0x2f4>
   34fe0:	ldr	r0, [fp, #8]
   34fe4:	movw	r1, #0
   34fe8:	str	r1, [r0]
   34fec:	ldr	r0, [sp, #16]
   34ff0:	str	r0, [fp, #-4]
   34ff4:	ldr	r0, [fp, #-4]
   34ff8:	mov	sp, fp
   34ffc:	pop	{fp, pc}

00035000 <flatcc_json_parser_unmatched_symbol@@Base>:
   35000:	push	{fp, lr}
   35004:	mov	fp, sp
   35008:	sub	sp, sp, #16
   3500c:	str	r0, [sp, #8]
   35010:	str	r1, [sp, #4]
   35014:	str	r2, [sp]
   35018:	ldr	r0, [sp, #8]
   3501c:	ldr	r0, [r0, #8]
   35020:	and	r0, r0, #1
   35024:	cmp	r0, #0
   35028:	beq	350cc <flatcc_json_parser_unmatched_symbol@@Base+0xcc>
   3502c:	ldr	r0, [sp, #8]
   35030:	ldr	r1, [sp, #4]
   35034:	ldr	r2, [sp]
   35038:	bl	350f0 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   3503c:	str	r0, [sp, #4]
   35040:	ldr	r0, [sp, #8]
   35044:	ldr	r1, [sp, #4]
   35048:	ldr	r2, [sp]
   3504c:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   35050:	str	r0, [sp, #4]
   35054:	ldr	r0, [sp, #4]
   35058:	ldr	r1, [sp]
   3505c:	cmp	r0, r1
   35060:	beq	35098 <flatcc_json_parser_unmatched_symbol@@Base+0x98>
   35064:	ldr	r0, [sp, #4]
   35068:	ldrb	r0, [r0]
   3506c:	cmp	r0, #58	; 0x3a
   35070:	bne	35098 <flatcc_json_parser_unmatched_symbol@@Base+0x98>
   35074:	ldr	r0, [sp, #4]
   35078:	add	r0, r0, #1
   3507c:	str	r0, [sp, #4]
   35080:	ldr	r0, [sp, #8]
   35084:	ldr	r1, [sp, #4]
   35088:	ldr	r2, [sp]
   3508c:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   35090:	str	r0, [sp, #4]
   35094:	b	350b4 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   35098:	ldr	r0, [sp, #8]
   3509c:	ldr	r1, [sp, #4]
   350a0:	ldr	r2, [sp]
   350a4:	movw	r3, #4
   350a8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   350ac:	str	r0, [fp, #-4]
   350b0:	b	350e4 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   350b4:	ldr	r0, [sp, #8]
   350b8:	ldr	r1, [sp, #4]
   350bc:	ldr	r2, [sp]
   350c0:	bl	35304 <flatcc_json_parser_generic_json@@Base>
   350c4:	str	r0, [fp, #-4]
   350c8:	b	350e4 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   350cc:	ldr	r0, [sp, #8]
   350d0:	ldr	r1, [sp, #4]
   350d4:	ldr	r2, [sp]
   350d8:	movw	r3, #13
   350dc:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   350e0:	str	r0, [fp, #-4]
   350e4:	ldr	r0, [fp, #-4]
   350e8:	mov	sp, fp
   350ec:	pop	{fp, pc}
   350f0:	push	{fp, lr}
   350f4:	mov	fp, sp
   350f8:	sub	sp, sp, #32
   350fc:	str	r0, [fp, #-8]
   35100:	str	r1, [fp, #-12]
   35104:	str	r2, [sp, #16]
   35108:	movw	r0, #0
   3510c:	strb	r0, [sp, #14]
   35110:	ldr	r0, [fp, #-8]
   35114:	ldr	r0, [r0, #12]
   35118:	cmp	r0, #0
   3511c:	beq	35224 <flatcc_json_parser_unmatched_symbol@@Base+0x224>
   35120:	b	35124 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   35124:	ldr	r0, [fp, #-12]
   35128:	ldr	r1, [sp, #16]
   3512c:	cmp	r0, r1
   35130:	movw	r0, #0
   35134:	str	r0, [sp, #8]
   35138:	beq	35154 <flatcc_json_parser_unmatched_symbol@@Base+0x154>
   3513c:	ldr	r0, [fp, #-12]
   35140:	ldrb	r0, [r0]
   35144:	cmp	r0, #32
   35148:	movw	r0, #0
   3514c:	movgt	r0, #1
   35150:	str	r0, [sp, #8]
   35154:	ldr	r0, [sp, #8]
   35158:	tst	r0, #1
   3515c:	beq	351f8 <flatcc_json_parser_unmatched_symbol@@Base+0x1f8>
   35160:	ldr	r0, [fp, #-12]
   35164:	ldrb	r0, [r0]
   35168:	strb	r0, [sp, #15]
   3516c:	strb	r0, [sp, #14]
   35170:	ldrb	r0, [sp, #15]
   35174:	cmp	r0, #95	; 0x5f
   35178:	beq	351b0 <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
   3517c:	ldrb	r0, [sp, #15]
   35180:	cmp	r0, #46	; 0x2e
   35184:	beq	351b0 <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
   35188:	ldrb	r0, [sp, #15]
   3518c:	and	r0, r0, #128	; 0x80
   35190:	cmp	r0, #0
   35194:	bne	351b0 <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
   35198:	ldrb	r0, [sp, #15]
   3519c:	cmp	r0, #48	; 0x30
   351a0:	blt	351c0 <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   351a4:	ldrb	r0, [sp, #15]
   351a8:	cmp	r0, #57	; 0x39
   351ac:	bgt	351c0 <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   351b0:	ldr	r0, [fp, #-12]
   351b4:	add	r0, r0, #1
   351b8:	str	r0, [fp, #-12]
   351bc:	b	35124 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   351c0:	ldrb	r0, [sp, #15]
   351c4:	orr	r0, r0, #32
   351c8:	strb	r0, [sp, #15]
   351cc:	ldrb	r0, [sp, #15]
   351d0:	cmp	r0, #97	; 0x61
   351d4:	blt	351f4 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   351d8:	ldrb	r0, [sp, #15]
   351dc:	cmp	r0, #122	; 0x7a
   351e0:	bgt	351f4 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   351e4:	ldr	r0, [fp, #-12]
   351e8:	add	r0, r0, #1
   351ec:	str	r0, [fp, #-12]
   351f0:	b	35124 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   351f4:	b	351f8 <flatcc_json_parser_unmatched_symbol@@Base+0x1f8>
   351f8:	ldrb	r0, [sp, #14]
   351fc:	cmp	r0, #46	; 0x2e
   35200:	bne	35220 <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   35204:	ldr	r0, [fp, #-8]
   35208:	ldr	r1, [fp, #-12]
   3520c:	ldr	r2, [sp, #16]
   35210:	movw	r3, #5
   35214:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35218:	str	r0, [fp, #-4]
   3521c:	b	352f8 <flatcc_json_parser_unmatched_symbol@@Base+0x2f8>
   35220:	b	352f0 <flatcc_json_parser_unmatched_symbol@@Base+0x2f0>
   35224:	b	35228 <flatcc_json_parser_unmatched_symbol@@Base+0x228>
   35228:	ldr	r0, [fp, #-12]
   3522c:	ldr	r1, [sp, #16]
   35230:	cmp	r0, r1
   35234:	movw	r0, #0
   35238:	str	r0, [sp, #4]
   3523c:	beq	35258 <flatcc_json_parser_unmatched_symbol@@Base+0x258>
   35240:	ldr	r0, [fp, #-12]
   35244:	ldrb	r0, [r0]
   35248:	cmp	r0, #34	; 0x22
   3524c:	movw	r0, #0
   35250:	movne	r0, #1
   35254:	str	r0, [sp, #4]
   35258:	ldr	r0, [sp, #4]
   3525c:	tst	r0, #1
   35260:	beq	352a8 <flatcc_json_parser_unmatched_symbol@@Base+0x2a8>
   35264:	ldr	r0, [fp, #-12]
   35268:	ldrb	r0, [r0]
   3526c:	cmp	r0, #92	; 0x5c
   35270:	bne	35298 <flatcc_json_parser_unmatched_symbol@@Base+0x298>
   35274:	ldr	r0, [sp, #16]
   35278:	ldr	r1, [fp, #-12]
   3527c:	sub	r0, r0, r1
   35280:	cmp	r0, #2
   35284:	bge	3528c <flatcc_json_parser_unmatched_symbol@@Base+0x28c>
   35288:	b	352a8 <flatcc_json_parser_unmatched_symbol@@Base+0x2a8>
   3528c:	ldr	r0, [fp, #-12]
   35290:	add	r0, r0, #1
   35294:	str	r0, [fp, #-12]
   35298:	ldr	r0, [fp, #-12]
   3529c:	add	r0, r0, #1
   352a0:	str	r0, [fp, #-12]
   352a4:	b	35228 <flatcc_json_parser_unmatched_symbol@@Base+0x228>
   352a8:	ldr	r0, [fp, #-12]
   352ac:	ldr	r1, [sp, #16]
   352b0:	cmp	r0, r1
   352b4:	beq	352c8 <flatcc_json_parser_unmatched_symbol@@Base+0x2c8>
   352b8:	ldr	r0, [fp, #-12]
   352bc:	ldrb	r0, [r0]
   352c0:	cmp	r0, #34	; 0x22
   352c4:	beq	352e4 <flatcc_json_parser_unmatched_symbol@@Base+0x2e4>
   352c8:	ldr	r0, [fp, #-8]
   352cc:	ldr	r1, [fp, #-12]
   352d0:	ldr	r2, [sp, #16]
   352d4:	movw	r3, #20
   352d8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   352dc:	str	r0, [fp, #-4]
   352e0:	b	352f8 <flatcc_json_parser_unmatched_symbol@@Base+0x2f8>
   352e4:	ldr	r0, [fp, #-12]
   352e8:	add	r0, r0, #1
   352ec:	str	r0, [fp, #-12]
   352f0:	ldr	r0, [fp, #-12]
   352f4:	str	r0, [fp, #-4]
   352f8:	ldr	r0, [fp, #-4]
   352fc:	mov	sp, fp
   35300:	pop	{fp, pc}

00035304 <flatcc_json_parser_generic_json@@Base>:
   35304:	push	{r4, r5, fp, lr}
   35308:	add	fp, sp, #8
   3530c:	sub	sp, sp, #560	; 0x230
   35310:	add	r3, sp, #32
   35314:	str	r0, [fp, #-16]
   35318:	str	r1, [fp, #-20]	; 0xffffffec
   3531c:	str	r2, [fp, #-24]	; 0xffffffe8
   35320:	movw	r0, #0
   35324:	str	r0, [sp, #12]
   35328:	str	r3, [sp, #28]
   3532c:	ldr	r0, [sp, #28]
   35330:	add	r0, r0, #512	; 0x200
   35334:	str	r0, [sp, #24]
   35338:	ldr	r0, [fp, #-20]	; 0xffffffec
   3533c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35340:	cmp	r0, r1
   35344:	bne	35354 <flatcc_json_parser_generic_json@@Base+0x50>
   35348:	ldr	r0, [fp, #-20]	; 0xffffffec
   3534c:	str	r0, [fp, #-12]
   35350:	b	358f0 <flatcc_json_parser_generic_json@@Base+0x5ec>
   35354:	add	r0, sp, #32
   35358:	ldr	r1, [sp, #28]
   3535c:	cmp	r1, r0
   35360:	beq	35428 <flatcc_json_parser_generic_json@@Base+0x124>
   35364:	ldr	r0, [sp, #28]
   35368:	mvn	r1, #0
   3536c:	add	r0, r0, r1
   35370:	ldrb	r0, [r0]
   35374:	cmp	r0, #125	; 0x7d
   35378:	bne	35428 <flatcc_json_parser_generic_json@@Base+0x124>
   3537c:	ldr	r0, [fp, #-16]
   35380:	ldr	r1, [fp, #-20]	; 0xffffffec
   35384:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35388:	bl	35d14 <flatcc_json_parser_float@@Base+0x254>
   3538c:	str	r0, [fp, #-20]	; 0xffffffec
   35390:	ldr	r0, [fp, #-16]
   35394:	ldr	r1, [fp, #-20]	; 0xffffffec
   35398:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3539c:	bl	350f0 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   353a0:	str	r0, [fp, #-20]	; 0xffffffec
   353a4:	ldr	r0, [fp, #-16]
   353a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   353ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   353b0:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   353b4:	str	r0, [fp, #-20]	; 0xffffffec
   353b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   353bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   353c0:	cmp	r0, r1
   353c4:	bne	353e4 <flatcc_json_parser_generic_json@@Base+0xe0>
   353c8:	ldr	r0, [fp, #-16]
   353cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   353d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   353d4:	movw	r3, #10
   353d8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   353dc:	str	r0, [fp, #-12]
   353e0:	b	358f0 <flatcc_json_parser_generic_json@@Base+0x5ec>
   353e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   353e8:	ldrb	r0, [r0]
   353ec:	cmp	r0, #58	; 0x3a
   353f0:	beq	35410 <flatcc_json_parser_generic_json@@Base+0x10c>
   353f4:	ldr	r0, [fp, #-16]
   353f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   353fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35400:	movw	r3, #4
   35404:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35408:	str	r0, [fp, #-12]
   3540c:	b	358f0 <flatcc_json_parser_generic_json@@Base+0x5ec>
   35410:	ldr	r0, [fp, #-16]
   35414:	ldr	r1, [fp, #-20]	; 0xffffffec
   35418:	add	r1, r1, #1
   3541c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35420:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   35424:	str	r0, [fp, #-20]	; 0xffffffec
   35428:	ldr	r0, [fp, #-20]	; 0xffffffec
   3542c:	ldrb	r0, [r0]
   35430:	sub	r0, r0, #34	; 0x22
   35434:	cmp	r0, #89	; 0x59
   35438:	str	r0, [sp, #8]
   3543c:	bhi	3578c <flatcc_json_parser_generic_json@@Base+0x488>
   35440:	add	r0, pc, #8
   35444:	ldr	r1, [sp, #8]
   35448:	ldr	r2, [r0, r1, lsl #2]
   3544c:	add	pc, r0, r2
   35450:	andeq	r0, r0, r8, ror #2
   35454:	andeq	r0, r0, ip, lsr r3
   35458:	andeq	r0, r0, ip, lsr r3
   3545c:	andeq	r0, r0, ip, lsr r3
   35460:	andeq	r0, r0, ip, lsr r3
   35464:	andeq	r0, r0, ip, lsr r3
   35468:	andeq	r0, r0, ip, lsr r3
   3546c:	andeq	r0, r0, ip, lsr r3
   35470:	andeq	r0, r0, ip, lsr r3
   35474:	andeq	r0, r0, ip, lsr r3
   35478:	andeq	r0, r0, ip, lsr r3
   3547c:	andeq	r0, r0, r4, lsr #4
   35480:	andeq	r0, r0, ip, lsr r3
   35484:	andeq	r0, r0, ip, lsr r3
   35488:	andeq	r0, r0, r4, lsr #4
   3548c:	andeq	r0, r0, r4, lsr #4
   35490:	andeq	r0, r0, r4, lsr #4
   35494:	andeq	r0, r0, r4, lsr #4
   35498:	andeq	r0, r0, r4, lsr #4
   3549c:	andeq	r0, r0, r4, lsr #4
   354a0:	andeq	r0, r0, r4, lsr #4
   354a4:	andeq	r0, r0, r4, lsr #4
   354a8:	andeq	r0, r0, r4, lsr #4
   354ac:	andeq	r0, r0, r4, lsr #4
   354b0:	andeq	r0, r0, ip, lsr r3
   354b4:	andeq	r0, r0, ip, lsr r3
   354b8:	andeq	r0, r0, ip, lsr r3
   354bc:	andeq	r0, r0, ip, lsr r3
   354c0:	andeq	r0, r0, ip, lsr r3
   354c4:	andeq	r0, r0, ip, lsr r3
   354c8:	andeq	r0, r0, ip, lsr r3
   354cc:	andeq	r0, r0, ip, lsr r3
   354d0:	andeq	r0, r0, ip, lsr r3
   354d4:	andeq	r0, r0, ip, lsr r3
   354d8:	andeq	r0, r0, ip, lsr r3
   354dc:	andeq	r0, r0, ip, lsr r3
   354e0:	andeq	r0, r0, ip, lsr r3
   354e4:	andeq	r0, r0, ip, lsr r3
   354e8:	andeq	r0, r0, ip, lsr r3
   354ec:	andeq	r0, r0, ip, lsr r3
   354f0:	andeq	r0, r0, ip, lsr r3
   354f4:	andeq	r0, r0, ip, lsr r3
   354f8:	andeq	r0, r0, ip, lsr r3
   354fc:	andeq	r0, r0, ip, lsr r3
   35500:	andeq	r0, r0, ip, lsr r3
   35504:	andeq	r0, r0, ip, lsr r3
   35508:	andeq	r0, r0, ip, lsr r3
   3550c:	andeq	r0, r0, ip, lsr r3
   35510:	andeq	r0, r0, ip, lsr r3
   35514:	andeq	r0, r0, ip, lsr r3
   35518:	andeq	r0, r0, ip, lsr r3
   3551c:	andeq	r0, r0, ip, lsr r3
   35520:	andeq	r0, r0, ip, lsr r3
   35524:	andeq	r0, r0, ip, lsr r3
   35528:	andeq	r0, r0, ip, lsr r3
   3552c:	andeq	r0, r0, ip, lsr r3
   35530:	andeq	r0, r0, ip, lsr r3
   35534:	andeq	r0, r0, ip, lsr r2
   35538:	andeq	r0, r0, ip, lsr r3
   3553c:	andeq	r0, r0, ip, lsr r3
   35540:	andeq	r0, r0, ip, lsr r3
   35544:	andeq	r0, r0, ip, lsr r3
   35548:	andeq	r0, r0, ip, lsr r3
   3554c:	andeq	r0, r0, ip, lsr r3
   35550:	andeq	r0, r0, ip, lsr r3
   35554:	andeq	r0, r0, ip, lsr r3
   35558:	andeq	r0, r0, ip, lsr r3
   3555c:	andeq	r0, r0, ip, lsr r3
   35560:	andeq	r0, r0, ip, lsr r3
   35564:	andeq	r0, r0, ip, lsr r3
   35568:	andeq	r0, r0, ip, lsr r3
   3556c:	andeq	r0, r0, ip, lsr r3
   35570:	andeq	r0, r0, ip, lsr r3
   35574:	andeq	r0, r0, ip, lsr r3
   35578:	andeq	r0, r0, ip, lsr r3
   3557c:	andeq	r0, r0, ip, lsr r3
   35580:	andeq	r0, r0, ip, lsr r3
   35584:	andeq	r0, r0, ip, lsr r3
   35588:	andeq	r0, r0, ip, lsr r3
   3558c:	andeq	r0, r0, ip, lsr r3
   35590:	andeq	r0, r0, ip, lsr r3
   35594:	andeq	r0, r0, ip, lsr r3
   35598:	andeq	r0, r0, ip, lsr r3
   3559c:	andeq	r0, r0, ip, lsr r3
   355a0:	andeq	r0, r0, ip, lsr r3
   355a4:	andeq	r0, r0, ip, lsr r3
   355a8:	andeq	r0, r0, ip, lsr r3
   355ac:	andeq	r0, r0, ip, lsr r3
   355b0:	andeq	r0, r0, ip, lsr r3
   355b4:			; <UNDEFINED> instruction: 0x000002bc
   355b8:	ldr	r0, [fp, #-16]
   355bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   355c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   355c4:	bl	35dc0 <flatcc_json_parser_float@@Base+0x300>
   355c8:	str	r0, [fp, #-20]	; 0xffffffec
   355cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   355d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   355d4:	cmp	r0, r1
   355d8:	movw	r0, #0
   355dc:	str	r0, [sp, #4]
   355e0:	beq	355fc <flatcc_json_parser_generic_json@@Base+0x2f8>
   355e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   355e8:	ldrb	r0, [r0]
   355ec:	cmp	r0, #34	; 0x22
   355f0:	movw	r0, #0
   355f4:	movne	r0, #1
   355f8:	str	r0, [sp, #4]
   355fc:	ldr	r0, [sp, #4]
   35600:	tst	r0, #1
   35604:	beq	3565c <flatcc_json_parser_generic_json@@Base+0x358>
   35608:	ldr	r0, [fp, #-16]
   3560c:	ldr	r1, [fp, #-20]	; 0xffffffec
   35610:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35614:	bl	33f3c <flatcc_json_parser_string_part@@Base>
   35618:	str	r0, [fp, #-20]	; 0xffffffec
   3561c:	ldr	r0, [fp, #-20]	; 0xffffffec
   35620:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35624:	cmp	r0, r1
   35628:	beq	35640 <flatcc_json_parser_generic_json@@Base+0x33c>
   3562c:	ldr	r0, [fp, #-20]	; 0xffffffec
   35630:	ldrb	r0, [r0]
   35634:	cmp	r0, #34	; 0x22
   35638:	bne	35640 <flatcc_json_parser_generic_json@@Base+0x33c>
   3563c:	b	3565c <flatcc_json_parser_generic_json@@Base+0x358>
   35640:	add	r3, sp, #16
   35644:	ldr	r0, [fp, #-16]
   35648:	ldr	r1, [fp, #-20]	; 0xffffffec
   3564c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35650:	bl	3423c <flatcc_json_parser_string_escape@@Base>
   35654:	str	r0, [fp, #-20]	; 0xffffffec
   35658:	b	355cc <flatcc_json_parser_generic_json@@Base+0x2c8>
   3565c:	ldr	r0, [fp, #-16]
   35660:	ldr	r1, [fp, #-20]	; 0xffffffec
   35664:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35668:	bl	35e30 <flatcc_json_parser_float@@Base+0x370>
   3566c:	str	r0, [fp, #-20]	; 0xffffffec
   35670:	b	357d4 <flatcc_json_parser_generic_json@@Base+0x4d0>
   35674:	ldr	r0, [fp, #-16]
   35678:	ldr	r1, [fp, #-20]	; 0xffffffec
   3567c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35680:	bl	35ea0 <flatcc_json_parser_float@@Base+0x3e0>
   35684:	str	r0, [fp, #-20]	; 0xffffffec
   35688:	b	357d4 <flatcc_json_parser_generic_json@@Base+0x4d0>
   3568c:	ldr	r0, [sp, #28]
   35690:	ldr	r1, [sp, #24]
   35694:	cmp	r0, r1
   35698:	bne	356b8 <flatcc_json_parser_generic_json@@Base+0x3b4>
   3569c:	ldr	r0, [fp, #-16]
   356a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   356a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   356a8:	movw	r3, #2
   356ac:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   356b0:	str	r0, [fp, #-12]
   356b4:	b	358f0 <flatcc_json_parser_generic_json@@Base+0x5ec>
   356b8:	ldr	r0, [sp, #28]
   356bc:	add	r1, r0, #1
   356c0:	str	r1, [sp, #28]
   356c4:	movw	r1, #93	; 0x5d
   356c8:	strb	r1, [r0]
   356cc:	ldr	r0, [fp, #-16]
   356d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   356d4:	add	r1, r1, #1
   356d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   356dc:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   356e0:	str	r0, [fp, #-20]	; 0xffffffec
   356e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   356e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   356ec:	cmp	r0, r1
   356f0:	beq	35708 <flatcc_json_parser_generic_json@@Base+0x404>
   356f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   356f8:	ldrb	r0, [r0]
   356fc:	cmp	r0, #93	; 0x5d
   35700:	bne	35708 <flatcc_json_parser_generic_json@@Base+0x404>
   35704:	b	357d4 <flatcc_json_parser_generic_json@@Base+0x4d0>
   35708:	b	35338 <flatcc_json_parser_generic_json@@Base+0x34>
   3570c:	ldr	r0, [sp, #28]
   35710:	ldr	r1, [sp, #24]
   35714:	cmp	r0, r1
   35718:	bne	35738 <flatcc_json_parser_generic_json@@Base+0x434>
   3571c:	ldr	r0, [fp, #-16]
   35720:	ldr	r1, [fp, #-20]	; 0xffffffec
   35724:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35728:	movw	r3, #2
   3572c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35730:	str	r0, [fp, #-12]
   35734:	b	358f0 <flatcc_json_parser_generic_json@@Base+0x5ec>
   35738:	ldr	r0, [sp, #28]
   3573c:	add	r1, r0, #1
   35740:	str	r1, [sp, #28]
   35744:	movw	r1, #125	; 0x7d
   35748:	strb	r1, [r0]
   3574c:	ldr	r0, [fp, #-16]
   35750:	ldr	r1, [fp, #-20]	; 0xffffffec
   35754:	add	r1, r1, #1
   35758:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3575c:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   35760:	str	r0, [fp, #-20]	; 0xffffffec
   35764:	ldr	r0, [fp, #-20]	; 0xffffffec
   35768:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3576c:	cmp	r0, r1
   35770:	beq	35788 <flatcc_json_parser_generic_json@@Base+0x484>
   35774:	ldr	r0, [fp, #-20]	; 0xffffffec
   35778:	ldrb	r0, [r0]
   3577c:	cmp	r0, #125	; 0x7d
   35780:	bne	35788 <flatcc_json_parser_generic_json@@Base+0x484>
   35784:	b	357d4 <flatcc_json_parser_generic_json@@Base+0x4d0>
   35788:	b	35338 <flatcc_json_parser_generic_json@@Base+0x34>
   3578c:	ldr	r0, [fp, #-16]
   35790:	ldr	r1, [fp, #-20]	; 0xffffffec
   35794:	str	r1, [sp, #20]
   35798:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3579c:	bl	34b60 <flatcc_json_parser_skip_constant@@Base>
   357a0:	str	r0, [fp, #-20]	; 0xffffffec
   357a4:	ldr	r0, [sp, #20]
   357a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   357ac:	cmp	r0, r1
   357b0:	bne	357d0 <flatcc_json_parser_generic_json@@Base+0x4cc>
   357b4:	ldr	r0, [fp, #-16]
   357b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   357bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   357c0:	movw	r3, #5
   357c4:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   357c8:	str	r0, [fp, #-12]
   357cc:	b	358f0 <flatcc_json_parser_generic_json@@Base+0x5ec>
   357d0:	b	357d4 <flatcc_json_parser_generic_json@@Base+0x4d0>
   357d4:	b	357d8 <flatcc_json_parser_generic_json@@Base+0x4d4>
   357d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   357dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   357e0:	cmp	r0, r1
   357e4:	movw	r0, #0
   357e8:	str	r0, [sp]
   357ec:	beq	35808 <flatcc_json_parser_generic_json@@Base+0x504>
   357f0:	add	r0, sp, #32
   357f4:	ldr	r1, [sp, #28]
   357f8:	cmp	r1, r0
   357fc:	movw	r0, #0
   35800:	movne	r0, #1
   35804:	str	r0, [sp]
   35808:	ldr	r0, [sp]
   3580c:	tst	r0, #1
   35810:	beq	35888 <flatcc_json_parser_generic_json@@Base+0x584>
   35814:	ldr	r0, [sp, #28]
   35818:	mvn	r1, #0
   3581c:	add	r0, r0, r1
   35820:	str	r0, [sp, #28]
   35824:	ldr	r0, [sp, #28]
   35828:	ldrb	r0, [r0]
   3582c:	cmp	r0, #93	; 0x5d
   35830:	bne	35850 <flatcc_json_parser_generic_json@@Base+0x54c>
   35834:	ldr	r0, [fp, #-16]
   35838:	ldr	r1, [fp, #-20]	; 0xffffffec
   3583c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35840:	add	r3, sp, #12
   35844:	bl	362e4 <flatcc_json_parser_float@@Base+0x824>
   35848:	str	r0, [fp, #-20]	; 0xffffffec
   3584c:	b	35868 <flatcc_json_parser_generic_json@@Base+0x564>
   35850:	ldr	r0, [fp, #-16]
   35854:	ldr	r1, [fp, #-20]	; 0xffffffec
   35858:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3585c:	add	r3, sp, #12
   35860:	bl	36448 <flatcc_json_parser_float@@Base+0x988>
   35864:	str	r0, [fp, #-20]	; 0xffffffec
   35868:	ldr	r0, [sp, #12]
   3586c:	cmp	r0, #0
   35870:	beq	35884 <flatcc_json_parser_generic_json@@Base+0x580>
   35874:	ldr	r0, [sp, #28]
   35878:	add	r0, r0, #1
   3587c:	str	r0, [sp, #28]
   35880:	b	35338 <flatcc_json_parser_generic_json@@Base+0x34>
   35884:	b	357d8 <flatcc_json_parser_generic_json@@Base+0x4d4>
   35888:	ldr	r0, [fp, #-20]	; 0xffffffec
   3588c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35890:	cmp	r0, r1
   35894:	bne	358e8 <flatcc_json_parser_generic_json@@Base+0x5e4>
   35898:	add	r0, sp, #32
   3589c:	ldr	r1, [sp, #28]
   358a0:	cmp	r1, r0
   358a4:	beq	358e8 <flatcc_json_parser_generic_json@@Base+0x5e4>
   358a8:	ldr	r0, [fp, #-16]
   358ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   358b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   358b4:	ldr	r3, [sp, #28]
   358b8:	mvn	ip, #0
   358bc:	add	r3, r3, ip
   358c0:	ldrb	r3, [r3]
   358c4:	cmp	r3, #93	; 0x5d
   358c8:	movw	r3, #0
   358cc:	moveq	r3, #1
   358d0:	tst	r3, #1
   358d4:	movw	r3, #9
   358d8:	moveq	r3, #10
   358dc:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   358e0:	str	r0, [fp, #-12]
   358e4:	b	358f0 <flatcc_json_parser_generic_json@@Base+0x5ec>
   358e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   358ec:	str	r0, [fp, #-12]
   358f0:	ldr	r0, [fp, #-12]
   358f4:	sub	sp, fp, #8
   358f8:	pop	{r4, r5, fp, pc}
   358fc:	nop	{0}

00035900 <flatcc_json_parser_double@@Base>:
   35900:	push	{fp, lr}
   35904:	mov	fp, sp
   35908:	sub	sp, sp, #32
   3590c:	vldr	d16, [pc, #372]	; 35a88 <flatcc_json_parser_double@@Base+0x188>
   35910:	str	r0, [fp, #-8]
   35914:	str	r1, [fp, #-12]
   35918:	str	r2, [sp, #16]
   3591c:	str	r3, [sp, #12]
   35920:	ldr	r0, [sp, #12]
   35924:	vstr	d16, [r0]
   35928:	ldr	r0, [fp, #-12]
   3592c:	ldr	r1, [sp, #16]
   35930:	cmp	r0, r1
   35934:	bne	35944 <flatcc_json_parser_double@@Base+0x44>
   35938:	ldr	r0, [fp, #-12]
   3593c:	str	r0, [fp, #-4]
   35940:	b	35a78 <flatcc_json_parser_double@@Base+0x178>
   35944:	ldr	r0, [fp, #-12]
   35948:	str	r0, [sp, #4]
   3594c:	ldr	r0, [fp, #-12]
   35950:	ldrb	r0, [r0]
   35954:	cmp	r0, #45	; 0x2d
   35958:	bne	35968 <flatcc_json_parser_double@@Base+0x68>
   3595c:	ldr	r0, [sp, #4]
   35960:	add	r0, r0, #1
   35964:	str	r0, [sp, #4]
   35968:	ldr	r0, [sp, #16]
   3596c:	ldr	r1, [sp, #4]
   35970:	sub	r0, r0, r1
   35974:	cmp	r0, #1
   35978:	ble	359c8 <flatcc_json_parser_double@@Base+0xc8>
   3597c:	ldr	r0, [sp, #4]
   35980:	ldrb	r0, [r0]
   35984:	cmp	r0, #46	; 0x2e
   35988:	beq	359ac <flatcc_json_parser_double@@Base+0xac>
   3598c:	ldr	r0, [sp, #4]
   35990:	ldrb	r0, [r0]
   35994:	cmp	r0, #48	; 0x30
   35998:	bne	359c8 <flatcc_json_parser_double@@Base+0xc8>
   3599c:	ldr	r0, [sp, #4]
   359a0:	ldrb	r0, [r0, #1]
   359a4:	cmp	r0, #48	; 0x30
   359a8:	bne	359c8 <flatcc_json_parser_double@@Base+0xc8>
   359ac:	ldr	r0, [fp, #-8]
   359b0:	ldr	r1, [fp, #-12]
   359b4:	ldr	r2, [sp, #16]
   359b8:	movw	r3, #6
   359bc:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   359c0:	str	r0, [fp, #-4]
   359c4:	b	35a78 <flatcc_json_parser_double@@Base+0x178>
   359c8:	ldr	r0, [fp, #-12]
   359cc:	ldr	r1, [sp, #16]
   359d0:	ldr	r2, [fp, #-12]
   359d4:	sub	r1, r1, r2
   359d8:	ldr	r2, [sp, #12]
   359dc:	bl	35a90 <flatcc_json_parser_double@@Base+0x190>
   359e0:	str	r0, [sp, #8]
   359e4:	ldr	r0, [sp, #8]
   359e8:	movw	r1, #0
   359ec:	cmp	r0, r1
   359f0:	beq	35a04 <flatcc_json_parser_double@@Base+0x104>
   359f4:	ldr	r0, [sp, #8]
   359f8:	ldr	r1, [fp, #-12]
   359fc:	cmp	r0, r1
   35a00:	bne	35a70 <flatcc_json_parser_double@@Base+0x170>
   35a04:	b	35a24 <flatcc_json_parser_double@@Base+0x124>
   35a08:	ldr	r0, [sp, #12]
   35a0c:	vldr	d16, [r0]
   35a10:	vcvt.f32.f64	s0, d16
   35a14:	bl	14e48 <__isinff@plt>
   35a18:	cmp	r0, #0
   35a1c:	bne	35a38 <flatcc_json_parser_double@@Base+0x138>
   35a20:	b	35a54 <flatcc_json_parser_double@@Base+0x154>
   35a24:	ldr	r0, [sp, #12]
   35a28:	vldr	d0, [r0]
   35a2c:	bl	14e54 <__isinf@plt>
   35a30:	cmp	r0, #0
   35a34:	beq	35a54 <flatcc_json_parser_double@@Base+0x154>
   35a38:	ldr	r0, [fp, #-8]
   35a3c:	ldr	r1, [fp, #-12]
   35a40:	ldr	r2, [sp, #16]
   35a44:	movw	r3, #7
   35a48:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35a4c:	str	r0, [fp, #-4]
   35a50:	b	35a78 <flatcc_json_parser_double@@Base+0x178>
   35a54:	ldr	r0, [fp, #-8]
   35a58:	ldr	r1, [fp, #-12]
   35a5c:	ldr	r2, [sp, #16]
   35a60:	movw	r3, #6
   35a64:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35a68:	str	r0, [fp, #-4]
   35a6c:	b	35a78 <flatcc_json_parser_double@@Base+0x178>
   35a70:	ldr	r0, [sp, #8]
   35a74:	str	r0, [fp, #-4]
   35a78:	ldr	r0, [fp, #-4]
   35a7c:	mov	sp, fp
   35a80:	pop	{fp, pc}
   35a84:	nop	{0}
	...
   35a90:	push	{fp, lr}
   35a94:	mov	fp, sp
   35a98:	sub	sp, sp, #16
   35a9c:	str	r0, [fp, #-4]
   35aa0:	str	r1, [sp, #8]
   35aa4:	str	r2, [sp, #4]
   35aa8:	ldr	r0, [fp, #-4]
   35aac:	ldr	r1, [sp, #8]
   35ab0:	ldr	r2, [sp, #4]
   35ab4:	bl	38710 <flatcc_json_parser_struct_as_root@@Base+0x18c>
   35ab8:	mov	sp, fp
   35abc:	pop	{fp, pc}

00035ac0 <flatcc_json_parser_float@@Base>:
   35ac0:	push	{fp, lr}
   35ac4:	mov	fp, sp
   35ac8:	sub	sp, sp, #32
   35acc:	vldr	s0, [pc, #368]	; 35c44 <flatcc_json_parser_float@@Base+0x184>
   35ad0:	str	r0, [fp, #-8]
   35ad4:	str	r1, [fp, #-12]
   35ad8:	str	r2, [sp, #16]
   35adc:	str	r3, [sp, #12]
   35ae0:	ldr	r0, [sp, #12]
   35ae4:	vstr	s0, [r0]
   35ae8:	ldr	r0, [fp, #-12]
   35aec:	ldr	r1, [sp, #16]
   35af0:	cmp	r0, r1
   35af4:	bne	35b04 <flatcc_json_parser_float@@Base+0x44>
   35af8:	ldr	r0, [fp, #-12]
   35afc:	str	r0, [fp, #-4]
   35b00:	b	35c38 <flatcc_json_parser_float@@Base+0x178>
   35b04:	ldr	r0, [fp, #-12]
   35b08:	str	r0, [sp, #4]
   35b0c:	ldr	r0, [fp, #-12]
   35b10:	ldrb	r0, [r0]
   35b14:	cmp	r0, #45	; 0x2d
   35b18:	bne	35b28 <flatcc_json_parser_float@@Base+0x68>
   35b1c:	ldr	r0, [sp, #4]
   35b20:	add	r0, r0, #1
   35b24:	str	r0, [sp, #4]
   35b28:	ldr	r0, [sp, #16]
   35b2c:	ldr	r1, [sp, #4]
   35b30:	sub	r0, r0, r1
   35b34:	cmp	r0, #1
   35b38:	ble	35b88 <flatcc_json_parser_float@@Base+0xc8>
   35b3c:	ldr	r0, [sp, #4]
   35b40:	ldrb	r0, [r0]
   35b44:	cmp	r0, #46	; 0x2e
   35b48:	beq	35b6c <flatcc_json_parser_float@@Base+0xac>
   35b4c:	ldr	r0, [sp, #4]
   35b50:	ldrb	r0, [r0]
   35b54:	cmp	r0, #48	; 0x30
   35b58:	bne	35b88 <flatcc_json_parser_float@@Base+0xc8>
   35b5c:	ldr	r0, [sp, #4]
   35b60:	ldrb	r0, [r0, #1]
   35b64:	cmp	r0, #48	; 0x30
   35b68:	bne	35b88 <flatcc_json_parser_float@@Base+0xc8>
   35b6c:	ldr	r0, [fp, #-8]
   35b70:	ldr	r1, [fp, #-12]
   35b74:	ldr	r2, [sp, #16]
   35b78:	movw	r3, #6
   35b7c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35b80:	str	r0, [fp, #-4]
   35b84:	b	35c38 <flatcc_json_parser_float@@Base+0x178>
   35b88:	ldr	r0, [fp, #-12]
   35b8c:	ldr	r1, [sp, #16]
   35b90:	ldr	r2, [fp, #-12]
   35b94:	sub	r1, r1, r2
   35b98:	ldr	r2, [sp, #12]
   35b9c:	bl	35c48 <flatcc_json_parser_float@@Base+0x188>
   35ba0:	str	r0, [sp, #8]
   35ba4:	ldr	r0, [sp, #8]
   35ba8:	movw	r1, #0
   35bac:	cmp	r0, r1
   35bb0:	beq	35bc4 <flatcc_json_parser_float@@Base+0x104>
   35bb4:	ldr	r0, [sp, #8]
   35bb8:	ldr	r1, [fp, #-12]
   35bbc:	cmp	r0, r1
   35bc0:	bne	35c30 <flatcc_json_parser_float@@Base+0x170>
   35bc4:	b	35bc8 <flatcc_json_parser_float@@Base+0x108>
   35bc8:	ldr	r0, [sp, #12]
   35bcc:	vldr	s0, [r0]
   35bd0:	bl	14e48 <__isinff@plt>
   35bd4:	cmp	r0, #0
   35bd8:	bne	35bf8 <flatcc_json_parser_float@@Base+0x138>
   35bdc:	b	35c14 <flatcc_json_parser_float@@Base+0x154>
   35be0:	ldr	r0, [sp, #12]
   35be4:	vldr	s0, [r0]
   35be8:	vcvt.f64.f32	d0, s0
   35bec:	bl	14e54 <__isinf@plt>
   35bf0:	cmp	r0, #0
   35bf4:	beq	35c14 <flatcc_json_parser_float@@Base+0x154>
   35bf8:	ldr	r0, [fp, #-8]
   35bfc:	ldr	r1, [fp, #-12]
   35c00:	ldr	r2, [sp, #16]
   35c04:	movw	r3, #7
   35c08:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35c0c:	str	r0, [fp, #-4]
   35c10:	b	35c38 <flatcc_json_parser_float@@Base+0x178>
   35c14:	ldr	r0, [fp, #-8]
   35c18:	ldr	r1, [fp, #-12]
   35c1c:	ldr	r2, [sp, #16]
   35c20:	movw	r3, #6
   35c24:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35c28:	str	r0, [fp, #-4]
   35c2c:	b	35c38 <flatcc_json_parser_float@@Base+0x178>
   35c30:	ldr	r0, [sp, #8]
   35c34:	str	r0, [fp, #-4]
   35c38:	ldr	r0, [fp, #-4]
   35c3c:	mov	sp, fp
   35c40:	pop	{fp, pc}
   35c44:	andeq	r0, r0, r0
   35c48:	push	{fp, lr}
   35c4c:	mov	fp, sp
   35c50:	sub	sp, sp, #40	; 0x28
   35c54:	ldr	r3, [pc, #180]	; 35d10 <flatcc_json_parser_float@@Base+0x250>
   35c58:	str	r0, [fp, #-8]
   35c5c:	str	r1, [fp, #-12]
   35c60:	str	r2, [fp, #-16]
   35c64:	str	r3, [sp, #4]
   35c68:	ldr	r0, [fp, #-8]
   35c6c:	ldr	r1, [fp, #-12]
   35c70:	add	r2, sp, #8
   35c74:	bl	35a90 <flatcc_json_parser_double@@Base+0x190>
   35c78:	str	r0, [sp, #20]
   35c7c:	vldr	d16, [sp, #8]
   35c80:	vcvt.f32.f64	s0, d16
   35c84:	ldr	r0, [fp, #-16]
   35c88:	vstr	s0, [r0]
   35c8c:	ldr	r0, [fp, #-16]
   35c90:	vldr	s0, [r0]
   35c94:	bl	14e48 <__isinff@plt>
   35c98:	cmp	r0, #0
   35c9c:	bne	35cbc <flatcc_json_parser_float@@Base+0x1fc>
   35ca0:	b	35cfc <flatcc_json_parser_float@@Base+0x23c>
   35ca4:	ldr	r0, [fp, #-16]
   35ca8:	vldr	s0, [r0]
   35cac:	vcvt.f64.f32	d0, s0
   35cb0:	bl	14e54 <__isinf@plt>
   35cb4:	cmp	r0, #0
   35cb8:	beq	35cfc <flatcc_json_parser_float@@Base+0x23c>
   35cbc:	vldr	d16, [sp, #8]
   35cc0:	vcmpe.f64	d16, #0.0
   35cc4:	vmrs	APSR_nzcv, fpscr
   35cc8:	bpl	35cdc <flatcc_json_parser_float@@Base+0x21c>
   35ccc:	vldr	s0, [sp, #4]
   35cd0:	vneg.f32	s0, s0
   35cd4:	vstr	s0, [sp]
   35cd8:	b	35ce4 <flatcc_json_parser_float@@Base+0x224>
   35cdc:	vldr	s0, [sp, #4]
   35ce0:	vstr	s0, [sp]
   35ce4:	vldr	s0, [sp]
   35ce8:	ldr	r0, [fp, #-16]
   35cec:	vstr	s0, [r0]
   35cf0:	ldr	r0, [fp, #-8]
   35cf4:	str	r0, [fp, #-4]
   35cf8:	b	35d04 <flatcc_json_parser_float@@Base+0x244>
   35cfc:	ldr	r0, [sp, #20]
   35d00:	str	r0, [fp, #-4]
   35d04:	ldr	r0, [fp, #-4]
   35d08:	mov	sp, fp
   35d0c:	pop	{fp, pc}
   35d10:	svcvc	0x00800000
   35d14:	push	{fp, lr}
   35d18:	mov	fp, sp
   35d1c:	sub	sp, sp, #16
   35d20:	str	r0, [sp, #8]
   35d24:	str	r1, [sp, #4]
   35d28:	str	r2, [sp]
   35d2c:	ldr	r0, [sp, #4]
   35d30:	ldr	r1, [sp]
   35d34:	cmp	r0, r1
   35d38:	bne	35d48 <flatcc_json_parser_float@@Base+0x288>
   35d3c:	ldr	r0, [sp, #4]
   35d40:	str	r0, [fp, #-4]
   35d44:	b	35db4 <flatcc_json_parser_float@@Base+0x2f4>
   35d48:	ldr	r0, [sp, #4]
   35d4c:	ldrb	r0, [r0]
   35d50:	cmp	r0, #34	; 0x22
   35d54:	bne	35d74 <flatcc_json_parser_float@@Base+0x2b4>
   35d58:	ldr	r0, [sp, #4]
   35d5c:	add	r0, r0, #1
   35d60:	str	r0, [sp, #4]
   35d64:	ldr	r0, [sp, #8]
   35d68:	movw	r1, #0
   35d6c:	str	r1, [r0, #12]
   35d70:	b	35dac <flatcc_json_parser_float@@Base+0x2ec>
   35d74:	ldr	r0, [sp, #4]
   35d78:	ldrb	r0, [r0]
   35d7c:	cmp	r0, #46	; 0x2e
   35d80:	bne	35da0 <flatcc_json_parser_float@@Base+0x2e0>
   35d84:	ldr	r0, [sp, #8]
   35d88:	ldr	r1, [sp, #4]
   35d8c:	ldr	r2, [sp]
   35d90:	movw	r3, #5
   35d94:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35d98:	str	r0, [fp, #-4]
   35d9c:	b	35db4 <flatcc_json_parser_float@@Base+0x2f4>
   35da0:	ldr	r0, [sp, #8]
   35da4:	movw	r1, #1
   35da8:	str	r1, [r0, #12]
   35dac:	ldr	r0, [sp, #4]
   35db0:	str	r0, [fp, #-4]
   35db4:	ldr	r0, [fp, #-4]
   35db8:	mov	sp, fp
   35dbc:	pop	{fp, pc}
   35dc0:	push	{fp, lr}
   35dc4:	mov	fp, sp
   35dc8:	sub	sp, sp, #16
   35dcc:	str	r0, [sp, #8]
   35dd0:	str	r1, [sp, #4]
   35dd4:	str	r2, [sp]
   35dd8:	ldr	r0, [sp, #4]
   35ddc:	ldr	r1, [sp]
   35de0:	cmp	r0, r1
   35de4:	beq	35df8 <flatcc_json_parser_float@@Base+0x338>
   35de8:	ldr	r0, [sp, #4]
   35dec:	ldrb	r0, [r0]
   35df0:	cmp	r0, #34	; 0x22
   35df4:	beq	35e14 <flatcc_json_parser_float@@Base+0x354>
   35df8:	ldr	r0, [sp, #8]
   35dfc:	ldr	r1, [sp, #4]
   35e00:	ldr	r2, [sp]
   35e04:	movw	r3, #16
   35e08:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35e0c:	str	r0, [fp, #-4]
   35e10:	b	35e24 <flatcc_json_parser_float@@Base+0x364>
   35e14:	ldr	r0, [sp, #4]
   35e18:	add	r0, r0, #1
   35e1c:	str	r0, [sp, #4]
   35e20:	str	r0, [fp, #-4]
   35e24:	ldr	r0, [fp, #-4]
   35e28:	mov	sp, fp
   35e2c:	pop	{fp, pc}
   35e30:	push	{fp, lr}
   35e34:	mov	fp, sp
   35e38:	sub	sp, sp, #16
   35e3c:	str	r0, [sp, #8]
   35e40:	str	r1, [sp, #4]
   35e44:	str	r2, [sp]
   35e48:	ldr	r0, [sp, #4]
   35e4c:	ldr	r1, [sp]
   35e50:	cmp	r0, r1
   35e54:	beq	35e68 <flatcc_json_parser_float@@Base+0x3a8>
   35e58:	ldr	r0, [sp, #4]
   35e5c:	ldrb	r0, [r0]
   35e60:	cmp	r0, #34	; 0x22
   35e64:	beq	35e84 <flatcc_json_parser_float@@Base+0x3c4>
   35e68:	ldr	r0, [sp, #8]
   35e6c:	ldr	r1, [sp, #4]
   35e70:	ldr	r2, [sp]
   35e74:	movw	r3, #20
   35e78:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35e7c:	str	r0, [fp, #-4]
   35e80:	b	35e94 <flatcc_json_parser_float@@Base+0x3d4>
   35e84:	ldr	r0, [sp, #4]
   35e88:	add	r0, r0, #1
   35e8c:	str	r0, [sp, #4]
   35e90:	str	r0, [fp, #-4]
   35e94:	ldr	r0, [fp, #-4]
   35e98:	mov	sp, fp
   35e9c:	pop	{fp, pc}
   35ea0:	push	{fp, lr}
   35ea4:	mov	fp, sp
   35ea8:	sub	sp, sp, #32
   35eac:	str	r0, [fp, #-8]
   35eb0:	str	r1, [fp, #-12]
   35eb4:	str	r2, [sp, #16]
   35eb8:	ldr	r0, [fp, #-12]
   35ebc:	ldr	r1, [sp, #16]
   35ec0:	cmp	r0, r1
   35ec4:	bne	35ed4 <flatcc_json_parser_float@@Base+0x414>
   35ec8:	ldr	r0, [fp, #-12]
   35ecc:	str	r0, [fp, #-4]
   35ed0:	b	362d8 <flatcc_json_parser_float@@Base+0x818>
   35ed4:	ldr	r0, [fp, #-12]
   35ed8:	ldrb	r0, [r0]
   35edc:	cmp	r0, #45	; 0x2d
   35ee0:	bne	35f20 <flatcc_json_parser_float@@Base+0x460>
   35ee4:	ldr	r0, [fp, #-12]
   35ee8:	add	r0, r0, #1
   35eec:	str	r0, [fp, #-12]
   35ef0:	ldr	r0, [fp, #-12]
   35ef4:	ldr	r1, [sp, #16]
   35ef8:	cmp	r0, r1
   35efc:	bne	35f1c <flatcc_json_parser_float@@Base+0x45c>
   35f00:	ldr	r0, [fp, #-8]
   35f04:	ldr	r1, [fp, #-12]
   35f08:	ldr	r2, [sp, #16]
   35f0c:	movw	r3, #6
   35f10:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35f14:	str	r0, [fp, #-4]
   35f18:	b	362d8 <flatcc_json_parser_float@@Base+0x818>
   35f1c:	b	35f20 <flatcc_json_parser_float@@Base+0x460>
   35f20:	ldr	r0, [fp, #-12]
   35f24:	ldrb	r0, [r0]
   35f28:	cmp	r0, #48	; 0x30
   35f2c:	bne	35f40 <flatcc_json_parser_float@@Base+0x480>
   35f30:	ldr	r0, [fp, #-12]
   35f34:	add	r0, r0, #1
   35f38:	str	r0, [fp, #-12]
   35f3c:	b	35ff0 <flatcc_json_parser_float@@Base+0x530>
   35f40:	ldr	r0, [fp, #-12]
   35f44:	ldrb	r0, [r0]
   35f48:	cmp	r0, #49	; 0x31
   35f4c:	blt	35f60 <flatcc_json_parser_float@@Base+0x4a0>
   35f50:	ldr	r0, [fp, #-12]
   35f54:	ldrb	r0, [r0]
   35f58:	cmp	r0, #57	; 0x39
   35f5c:	ble	35f7c <flatcc_json_parser_float@@Base+0x4bc>
   35f60:	ldr	r0, [fp, #-8]
   35f64:	ldr	r1, [fp, #-12]
   35f68:	ldr	r2, [sp, #16]
   35f6c:	movw	r3, #6
   35f70:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   35f74:	str	r0, [fp, #-4]
   35f78:	b	362d8 <flatcc_json_parser_float@@Base+0x818>
   35f7c:	ldr	r0, [fp, #-12]
   35f80:	add	r0, r0, #1
   35f84:	str	r0, [fp, #-12]
   35f88:	ldr	r0, [fp, #-12]
   35f8c:	ldr	r1, [sp, #16]
   35f90:	cmp	r0, r1
   35f94:	movw	r0, #0
   35f98:	str	r0, [sp, #12]
   35f9c:	beq	35fd0 <flatcc_json_parser_float@@Base+0x510>
   35fa0:	ldr	r0, [fp, #-12]
   35fa4:	ldrb	r0, [r0]
   35fa8:	cmp	r0, #48	; 0x30
   35fac:	movw	r0, #0
   35fb0:	str	r0, [sp, #12]
   35fb4:	blt	35fd0 <flatcc_json_parser_float@@Base+0x510>
   35fb8:	ldr	r0, [fp, #-12]
   35fbc:	ldrb	r0, [r0]
   35fc0:	cmp	r0, #57	; 0x39
   35fc4:	movw	r0, #0
   35fc8:	movle	r0, #1
   35fcc:	str	r0, [sp, #12]
   35fd0:	ldr	r0, [sp, #12]
   35fd4:	tst	r0, #1
   35fd8:	beq	35fec <flatcc_json_parser_float@@Base+0x52c>
   35fdc:	ldr	r0, [fp, #-12]
   35fe0:	add	r0, r0, #1
   35fe4:	str	r0, [fp, #-12]
   35fe8:	b	35f88 <flatcc_json_parser_float@@Base+0x4c8>
   35fec:	b	35ff0 <flatcc_json_parser_float@@Base+0x530>
   35ff0:	ldr	r0, [fp, #-12]
   35ff4:	ldr	r1, [sp, #16]
   35ff8:	cmp	r0, r1
   35ffc:	beq	360d0 <flatcc_json_parser_float@@Base+0x610>
   36000:	ldr	r0, [fp, #-12]
   36004:	ldrb	r0, [r0]
   36008:	cmp	r0, #46	; 0x2e
   3600c:	bne	360cc <flatcc_json_parser_float@@Base+0x60c>
   36010:	ldr	r0, [fp, #-12]
   36014:	add	r0, r0, #1
   36018:	str	r0, [fp, #-12]
   3601c:	ldr	r0, [fp, #-12]
   36020:	ldrb	r0, [r0]
   36024:	cmp	r0, #48	; 0x30
   36028:	blt	3603c <flatcc_json_parser_float@@Base+0x57c>
   3602c:	ldr	r0, [fp, #-12]
   36030:	ldrb	r0, [r0]
   36034:	cmp	r0, #57	; 0x39
   36038:	ble	36058 <flatcc_json_parser_float@@Base+0x598>
   3603c:	ldr	r0, [fp, #-8]
   36040:	ldr	r1, [fp, #-12]
   36044:	ldr	r2, [sp, #16]
   36048:	movw	r3, #6
   3604c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   36050:	str	r0, [fp, #-4]
   36054:	b	362d8 <flatcc_json_parser_float@@Base+0x818>
   36058:	ldr	r0, [fp, #-12]
   3605c:	add	r0, r0, #1
   36060:	str	r0, [fp, #-12]
   36064:	ldr	r0, [fp, #-12]
   36068:	ldr	r1, [sp, #16]
   3606c:	cmp	r0, r1
   36070:	movw	r0, #0
   36074:	str	r0, [sp, #8]
   36078:	beq	360ac <flatcc_json_parser_float@@Base+0x5ec>
   3607c:	ldr	r0, [fp, #-12]
   36080:	ldrb	r0, [r0]
   36084:	cmp	r0, #48	; 0x30
   36088:	movw	r0, #0
   3608c:	str	r0, [sp, #8]
   36090:	blt	360ac <flatcc_json_parser_float@@Base+0x5ec>
   36094:	ldr	r0, [fp, #-12]
   36098:	ldrb	r0, [r0]
   3609c:	cmp	r0, #57	; 0x39
   360a0:	movw	r0, #0
   360a4:	movle	r0, #1
   360a8:	str	r0, [sp, #8]
   360ac:	ldr	r0, [sp, #8]
   360b0:	tst	r0, #1
   360b4:	beq	360c8 <flatcc_json_parser_float@@Base+0x608>
   360b8:	ldr	r0, [fp, #-12]
   360bc:	add	r0, r0, #1
   360c0:	str	r0, [fp, #-12]
   360c4:	b	36064 <flatcc_json_parser_float@@Base+0x5a4>
   360c8:	b	360cc <flatcc_json_parser_float@@Base+0x60c>
   360cc:	b	360d0 <flatcc_json_parser_float@@Base+0x610>
   360d0:	ldr	r0, [fp, #-12]
   360d4:	ldr	r1, [sp, #16]
   360d8:	cmp	r0, r1
   360dc:	beq	36224 <flatcc_json_parser_float@@Base+0x764>
   360e0:	ldr	r0, [fp, #-12]
   360e4:	ldrb	r0, [r0]
   360e8:	cmp	r0, #101	; 0x65
   360ec:	beq	36100 <flatcc_json_parser_float@@Base+0x640>
   360f0:	ldr	r0, [fp, #-12]
   360f4:	ldrb	r0, [r0]
   360f8:	cmp	r0, #69	; 0x45
   360fc:	bne	36224 <flatcc_json_parser_float@@Base+0x764>
   36100:	ldr	r0, [fp, #-12]
   36104:	add	r0, r0, #1
   36108:	str	r0, [fp, #-12]
   3610c:	ldr	r0, [fp, #-12]
   36110:	ldr	r1, [sp, #16]
   36114:	cmp	r0, r1
   36118:	bne	36138 <flatcc_json_parser_float@@Base+0x678>
   3611c:	ldr	r0, [fp, #-8]
   36120:	ldr	r1, [fp, #-12]
   36124:	ldr	r2, [sp, #16]
   36128:	movw	r3, #6
   3612c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   36130:	str	r0, [fp, #-4]
   36134:	b	362d8 <flatcc_json_parser_float@@Base+0x818>
   36138:	ldr	r0, [fp, #-12]
   3613c:	ldrb	r0, [r0]
   36140:	cmp	r0, #43	; 0x2b
   36144:	beq	36158 <flatcc_json_parser_float@@Base+0x698>
   36148:	ldr	r0, [fp, #-12]
   3614c:	ldrb	r0, [r0]
   36150:	cmp	r0, #45	; 0x2d
   36154:	bne	36164 <flatcc_json_parser_float@@Base+0x6a4>
   36158:	ldr	r0, [fp, #-12]
   3615c:	add	r0, r0, #1
   36160:	str	r0, [fp, #-12]
   36164:	ldr	r0, [fp, #-12]
   36168:	ldr	r1, [sp, #16]
   3616c:	cmp	r0, r1
   36170:	beq	36194 <flatcc_json_parser_float@@Base+0x6d4>
   36174:	ldr	r0, [fp, #-12]
   36178:	ldrb	r0, [r0]
   3617c:	cmp	r0, #48	; 0x30
   36180:	blt	36194 <flatcc_json_parser_float@@Base+0x6d4>
   36184:	ldr	r0, [fp, #-12]
   36188:	ldrb	r0, [r0]
   3618c:	cmp	r0, #57	; 0x39
   36190:	ble	361b0 <flatcc_json_parser_float@@Base+0x6f0>
   36194:	ldr	r0, [fp, #-8]
   36198:	ldr	r1, [fp, #-12]
   3619c:	ldr	r2, [sp, #16]
   361a0:	movw	r3, #6
   361a4:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   361a8:	str	r0, [fp, #-4]
   361ac:	b	362d8 <flatcc_json_parser_float@@Base+0x818>
   361b0:	ldr	r0, [fp, #-12]
   361b4:	add	r0, r0, #1
   361b8:	str	r0, [fp, #-12]
   361bc:	ldr	r0, [fp, #-12]
   361c0:	ldr	r1, [sp, #16]
   361c4:	cmp	r0, r1
   361c8:	movw	r0, #0
   361cc:	str	r0, [sp, #4]
   361d0:	beq	36204 <flatcc_json_parser_float@@Base+0x744>
   361d4:	ldr	r0, [fp, #-12]
   361d8:	ldrb	r0, [r0]
   361dc:	cmp	r0, #48	; 0x30
   361e0:	movw	r0, #0
   361e4:	str	r0, [sp, #4]
   361e8:	blt	36204 <flatcc_json_parser_float@@Base+0x744>
   361ec:	ldr	r0, [fp, #-12]
   361f0:	ldrb	r0, [r0]
   361f4:	cmp	r0, #57	; 0x39
   361f8:	movw	r0, #0
   361fc:	movle	r0, #1
   36200:	str	r0, [sp, #4]
   36204:	ldr	r0, [sp, #4]
   36208:	tst	r0, #1
   3620c:	beq	36220 <flatcc_json_parser_float@@Base+0x760>
   36210:	ldr	r0, [fp, #-12]
   36214:	add	r0, r0, #1
   36218:	str	r0, [fp, #-12]
   3621c:	b	361bc <flatcc_json_parser_float@@Base+0x6fc>
   36220:	b	36224 <flatcc_json_parser_float@@Base+0x764>
   36224:	ldr	r0, [fp, #-12]
   36228:	ldr	r1, [sp, #16]
   3622c:	cmp	r0, r1
   36230:	beq	362c0 <flatcc_json_parser_float@@Base+0x800>
   36234:	ldr	r0, [fp, #-12]
   36238:	ldrb	r0, [r0]
   3623c:	sub	r1, r0, #9
   36240:	cmp	r1, #3
   36244:	str	r0, [sp]
   36248:	bcc	362b0 <flatcc_json_parser_float@@Base+0x7f0>
   3624c:	b	36250 <flatcc_json_parser_float@@Base+0x790>
   36250:	ldr	r0, [sp]
   36254:	cmp	r0, #13
   36258:	beq	362b0 <flatcc_json_parser_float@@Base+0x7f0>
   3625c:	b	36260 <flatcc_json_parser_float@@Base+0x7a0>
   36260:	ldr	r0, [sp]
   36264:	cmp	r0, #32
   36268:	beq	362b0 <flatcc_json_parser_float@@Base+0x7f0>
   3626c:	b	36270 <flatcc_json_parser_float@@Base+0x7b0>
   36270:	ldr	r0, [sp]
   36274:	cmp	r0, #44	; 0x2c
   36278:	beq	362b0 <flatcc_json_parser_float@@Base+0x7f0>
   3627c:	b	36280 <flatcc_json_parser_float@@Base+0x7c0>
   36280:	ldr	r0, [sp]
   36284:	cmp	r0, #58	; 0x3a
   36288:	beq	362b0 <flatcc_json_parser_float@@Base+0x7f0>
   3628c:	b	36290 <flatcc_json_parser_float@@Base+0x7d0>
   36290:	ldr	r0, [sp]
   36294:	cmp	r0, #93	; 0x5d
   36298:	beq	362b0 <flatcc_json_parser_float@@Base+0x7f0>
   3629c:	b	362a0 <flatcc_json_parser_float@@Base+0x7e0>
   362a0:	ldr	r0, [sp]
   362a4:	cmp	r0, #125	; 0x7d
   362a8:	bne	362bc <flatcc_json_parser_float@@Base+0x7fc>
   362ac:	b	362b0 <flatcc_json_parser_float@@Base+0x7f0>
   362b0:	ldr	r0, [fp, #-12]
   362b4:	str	r0, [fp, #-4]
   362b8:	b	362d8 <flatcc_json_parser_float@@Base+0x818>
   362bc:	b	362c0 <flatcc_json_parser_float@@Base+0x800>
   362c0:	ldr	r0, [fp, #-8]
   362c4:	ldr	r1, [fp, #-12]
   362c8:	ldr	r2, [sp, #16]
   362cc:	movw	r3, #6
   362d0:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   362d4:	str	r0, [fp, #-4]
   362d8:	ldr	r0, [fp, #-4]
   362dc:	mov	sp, fp
   362e0:	pop	{fp, pc}
   362e4:	push	{fp, lr}
   362e8:	mov	fp, sp
   362ec:	sub	sp, sp, #24
   362f0:	str	r0, [fp, #-8]
   362f4:	str	r1, [sp, #12]
   362f8:	str	r2, [sp, #8]
   362fc:	str	r3, [sp, #4]
   36300:	ldr	r0, [fp, #-8]
   36304:	ldr	r1, [sp, #12]
   36308:	ldr	r2, [sp, #8]
   3630c:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   36310:	str	r0, [sp, #12]
   36314:	ldr	r0, [sp, #12]
   36318:	ldr	r1, [sp, #8]
   3631c:	cmp	r0, r1
   36320:	bne	3633c <flatcc_json_parser_float@@Base+0x87c>
   36324:	ldr	r0, [sp, #4]
   36328:	movw	r1, #0
   3632c:	str	r1, [r0]
   36330:	ldr	r0, [sp, #12]
   36334:	str	r0, [fp, #-4]
   36338:	b	3643c <flatcc_json_parser_float@@Base+0x97c>
   3633c:	ldr	r0, [sp, #12]
   36340:	ldrb	r0, [r0]
   36344:	cmp	r0, #44	; 0x2c
   36348:	beq	363a0 <flatcc_json_parser_float@@Base+0x8e0>
   3634c:	ldr	r0, [sp, #4]
   36350:	movw	r1, #0
   36354:	str	r1, [r0]
   36358:	ldr	r0, [sp, #12]
   3635c:	ldrb	r0, [r0]
   36360:	cmp	r0, #93	; 0x5d
   36364:	beq	36384 <flatcc_json_parser_float@@Base+0x8c4>
   36368:	ldr	r0, [fp, #-8]
   3636c:	ldr	r1, [sp, #12]
   36370:	ldr	r2, [sp, #8]
   36374:	movw	r3, #9
   36378:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   3637c:	str	r0, [fp, #-4]
   36380:	b	3643c <flatcc_json_parser_float@@Base+0x97c>
   36384:	ldr	r0, [fp, #-8]
   36388:	ldr	r1, [sp, #12]
   3638c:	add	r1, r1, #1
   36390:	ldr	r2, [sp, #8]
   36394:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   36398:	str	r0, [fp, #-4]
   3639c:	b	3643c <flatcc_json_parser_float@@Base+0x97c>
   363a0:	ldr	r0, [fp, #-8]
   363a4:	ldr	r1, [sp, #12]
   363a8:	add	r1, r1, #1
   363ac:	ldr	r2, [sp, #8]
   363b0:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   363b4:	str	r0, [sp, #12]
   363b8:	ldr	r0, [sp, #12]
   363bc:	ldr	r1, [sp, #8]
   363c0:	cmp	r0, r1
   363c4:	bne	363f0 <flatcc_json_parser_float@@Base+0x930>
   363c8:	ldr	r0, [sp, #4]
   363cc:	movw	r1, #0
   363d0:	str	r1, [r0]
   363d4:	ldr	r0, [fp, #-8]
   363d8:	ldr	r1, [sp, #12]
   363dc:	ldr	r2, [sp, #8]
   363e0:	movw	r3, #9
   363e4:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   363e8:	str	r0, [fp, #-4]
   363ec:	b	3643c <flatcc_json_parser_float@@Base+0x97c>
   363f0:	ldr	r0, [sp, #12]
   363f4:	ldrb	r0, [r0]
   363f8:	cmp	r0, #93	; 0x5d
   363fc:	bne	36428 <flatcc_json_parser_float@@Base+0x968>
   36400:	ldr	r0, [sp, #4]
   36404:	movw	r1, #0
   36408:	str	r1, [r0]
   3640c:	ldr	r0, [fp, #-8]
   36410:	ldr	r1, [sp, #12]
   36414:	add	r1, r1, #1
   36418:	ldr	r2, [sp, #8]
   3641c:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   36420:	str	r0, [fp, #-4]
   36424:	b	3643c <flatcc_json_parser_float@@Base+0x97c>
   36428:	ldr	r0, [sp, #4]
   3642c:	movw	r1, #1
   36430:	str	r1, [r0]
   36434:	ldr	r0, [sp, #12]
   36438:	str	r0, [fp, #-4]
   3643c:	ldr	r0, [fp, #-4]
   36440:	mov	sp, fp
   36444:	pop	{fp, pc}
   36448:	push	{fp, lr}
   3644c:	mov	fp, sp
   36450:	sub	sp, sp, #24
   36454:	str	r0, [fp, #-8]
   36458:	str	r1, [sp, #12]
   3645c:	str	r2, [sp, #8]
   36460:	str	r3, [sp, #4]
   36464:	ldr	r0, [fp, #-8]
   36468:	ldr	r1, [sp, #12]
   3646c:	ldr	r2, [sp, #8]
   36470:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   36474:	str	r0, [sp, #12]
   36478:	ldr	r0, [sp, #12]
   3647c:	ldr	r1, [sp, #8]
   36480:	cmp	r0, r1
   36484:	bne	364a0 <flatcc_json_parser_float@@Base+0x9e0>
   36488:	ldr	r0, [sp, #4]
   3648c:	movw	r1, #0
   36490:	str	r1, [r0]
   36494:	ldr	r0, [sp, #12]
   36498:	str	r0, [fp, #-4]
   3649c:	b	365a0 <flatcc_json_parser_float@@Base+0xae0>
   364a0:	ldr	r0, [sp, #12]
   364a4:	ldrb	r0, [r0]
   364a8:	cmp	r0, #44	; 0x2c
   364ac:	beq	36504 <flatcc_json_parser_float@@Base+0xa44>
   364b0:	ldr	r0, [sp, #4]
   364b4:	movw	r1, #0
   364b8:	str	r1, [r0]
   364bc:	ldr	r0, [sp, #12]
   364c0:	ldrb	r0, [r0]
   364c4:	cmp	r0, #125	; 0x7d
   364c8:	beq	364e8 <flatcc_json_parser_float@@Base+0xa28>
   364cc:	ldr	r0, [fp, #-8]
   364d0:	ldr	r1, [sp, #12]
   364d4:	ldr	r2, [sp, #8]
   364d8:	movw	r3, #10
   364dc:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   364e0:	str	r0, [fp, #-4]
   364e4:	b	365a0 <flatcc_json_parser_float@@Base+0xae0>
   364e8:	ldr	r0, [fp, #-8]
   364ec:	ldr	r1, [sp, #12]
   364f0:	add	r1, r1, #1
   364f4:	ldr	r2, [sp, #8]
   364f8:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   364fc:	str	r0, [fp, #-4]
   36500:	b	365a0 <flatcc_json_parser_float@@Base+0xae0>
   36504:	ldr	r0, [fp, #-8]
   36508:	ldr	r1, [sp, #12]
   3650c:	add	r1, r1, #1
   36510:	ldr	r2, [sp, #8]
   36514:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   36518:	str	r0, [sp, #12]
   3651c:	ldr	r0, [sp, #12]
   36520:	ldr	r1, [sp, #8]
   36524:	cmp	r0, r1
   36528:	bne	36554 <flatcc_json_parser_float@@Base+0xa94>
   3652c:	ldr	r0, [sp, #4]
   36530:	movw	r1, #0
   36534:	str	r1, [r0]
   36538:	ldr	r0, [fp, #-8]
   3653c:	ldr	r1, [sp, #12]
   36540:	ldr	r2, [sp, #8]
   36544:	movw	r3, #10
   36548:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   3654c:	str	r0, [fp, #-4]
   36550:	b	365a0 <flatcc_json_parser_float@@Base+0xae0>
   36554:	ldr	r0, [sp, #12]
   36558:	ldrb	r0, [r0]
   3655c:	cmp	r0, #125	; 0x7d
   36560:	bne	3658c <flatcc_json_parser_float@@Base+0xacc>
   36564:	ldr	r0, [sp, #4]
   36568:	movw	r1, #0
   3656c:	str	r1, [r0]
   36570:	ldr	r0, [fp, #-8]
   36574:	ldr	r1, [sp, #12]
   36578:	add	r1, r1, #1
   3657c:	ldr	r2, [sp, #8]
   36580:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   36584:	str	r0, [fp, #-4]
   36588:	b	365a0 <flatcc_json_parser_float@@Base+0xae0>
   3658c:	ldr	r0, [sp, #4]
   36590:	movw	r1, #1
   36594:	str	r1, [r0]
   36598:	ldr	r0, [sp, #12]
   3659c:	str	r0, [fp, #-4]
   365a0:	ldr	r0, [fp, #-4]
   365a4:	mov	sp, fp
   365a8:	pop	{fp, pc}

000365ac <flatcc_json_parser_integer@@Base>:
   365ac:	push	{fp, lr}
   365b0:	mov	fp, sp
   365b4:	sub	sp, sp, #48	; 0x30
   365b8:	ldr	ip, [fp, #8]
   365bc:	str	r0, [fp, #-8]
   365c0:	str	r1, [fp, #-12]
   365c4:	str	r2, [fp, #-16]
   365c8:	str	r3, [fp, #-20]	; 0xffffffec
   365cc:	mov	r0, #0
   365d0:	str	r0, [sp, #12]
   365d4:	str	r0, [sp, #8]
   365d8:	ldr	r0, [fp, #-12]
   365dc:	ldr	r1, [fp, #-16]
   365e0:	cmp	r0, r1
   365e4:	bne	365f4 <flatcc_json_parser_integer@@Base+0x48>
   365e8:	ldr	r0, [fp, #-12]
   365ec:	str	r0, [fp, #-4]
   365f0:	b	367c0 <flatcc_json_parser_integer@@Base+0x214>
   365f4:	ldr	r0, [fp, #-12]
   365f8:	str	r0, [sp, #4]
   365fc:	ldr	r0, [fp, #-12]
   36600:	ldrb	r0, [r0]
   36604:	cmp	r0, #45	; 0x2d
   36608:	movw	r0, #0
   3660c:	moveq	r0, #1
   36610:	and	r0, r0, #1
   36614:	ldr	r1, [fp, #-20]	; 0xffffffec
   36618:	str	r0, [r1]
   3661c:	ldr	r0, [fp, #-20]	; 0xffffffec
   36620:	ldr	r0, [r0]
   36624:	ldr	r1, [fp, #-12]
   36628:	add	r0, r1, r0
   3662c:	str	r0, [fp, #-12]
   36630:	ldr	r0, [fp, #-12]
   36634:	ldr	r1, [fp, #-16]
   36638:	cmp	r0, r1
   3663c:	movw	r0, #0
   36640:	str	r0, [sp]
   36644:	beq	36678 <flatcc_json_parser_integer@@Base+0xcc>
   36648:	ldr	r0, [fp, #-12]
   3664c:	ldrb	r0, [r0]
   36650:	cmp	r0, #48	; 0x30
   36654:	movw	r0, #0
   36658:	str	r0, [sp]
   3665c:	blt	36678 <flatcc_json_parser_integer@@Base+0xcc>
   36660:	ldr	r0, [fp, #-12]
   36664:	ldrb	r0, [r0]
   36668:	cmp	r0, #57	; 0x39
   3666c:	movw	r0, #0
   36670:	movle	r0, #1
   36674:	str	r0, [sp]
   36678:	ldr	r0, [sp]
   3667c:	tst	r0, #1
   36680:	beq	3672c <flatcc_json_parser_integer@@Base+0x180>
   36684:	ldr	r0, [sp, #8]
   36688:	ldr	r1, [sp, #12]
   3668c:	str	r1, [sp, #20]
   36690:	str	r0, [sp, #16]
   36694:	ldr	r0, [sp, #8]
   36698:	ldr	r1, [sp, #12]
   3669c:	add	r1, r1, r1, lsl #2
   366a0:	lsl	r1, r1, #1
   366a4:	ldr	r2, [fp, #-12]
   366a8:	ldrb	r2, [r2]
   366ac:	mov	r3, #10
   366b0:	umlal	r2, r1, r0, r3
   366b4:	subs	r0, r2, #48	; 0x30
   366b8:	sbc	r1, r1, #0
   366bc:	str	r0, [sp, #8]
   366c0:	str	r1, [sp, #12]
   366c4:	ldr	r0, [sp, #16]
   366c8:	ldr	r1, [sp, #20]
   366cc:	ldr	r2, [sp, #8]
   366d0:	ldr	r3, [sp, #12]
   366d4:	subs	r0, r2, r0
   366d8:	sbcs	r1, r3, r1
   366dc:	bcs	3671c <flatcc_json_parser_integer@@Base+0x170>
   366e0:	b	366e4 <flatcc_json_parser_integer@@Base+0x138>
   366e4:	ldr	r0, [fp, #-8]
   366e8:	ldr	r1, [fp, #-12]
   366ec:	ldr	r2, [fp, #-16]
   366f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   366f4:	movw	ip, #0
   366f8:	cmp	r3, ip
   366fc:	movw	r3, #0
   36700:	movne	r3, #1
   36704:	tst	r3, #1
   36708:	movw	r3, #8
   3670c:	moveq	r3, #7
   36710:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   36714:	str	r0, [fp, #-4]
   36718:	b	367c0 <flatcc_json_parser_integer@@Base+0x214>
   3671c:	ldr	r0, [fp, #-12]
   36720:	add	r0, r0, #1
   36724:	str	r0, [fp, #-12]
   36728:	b	36630 <flatcc_json_parser_integer@@Base+0x84>
   3672c:	ldr	r0, [fp, #-12]
   36730:	ldr	r1, [sp, #4]
   36734:	cmp	r0, r1
   36738:	bne	36748 <flatcc_json_parser_integer@@Base+0x19c>
   3673c:	ldr	r0, [fp, #-12]
   36740:	str	r0, [fp, #-4]
   36744:	b	367c0 <flatcc_json_parser_integer@@Base+0x214>
   36748:	ldr	r0, [fp, #-12]
   3674c:	ldr	r1, [fp, #-16]
   36750:	cmp	r0, r1
   36754:	beq	367a4 <flatcc_json_parser_integer@@Base+0x1f8>
   36758:	ldr	r0, [fp, #-12]
   3675c:	ldrb	r0, [r0]
   36760:	cmp	r0, #101	; 0x65
   36764:	beq	36788 <flatcc_json_parser_integer@@Base+0x1dc>
   36768:	ldr	r0, [fp, #-12]
   3676c:	ldrb	r0, [r0]
   36770:	cmp	r0, #69	; 0x45
   36774:	beq	36788 <flatcc_json_parser_integer@@Base+0x1dc>
   36778:	ldr	r0, [fp, #-12]
   3677c:	ldrb	r0, [r0]
   36780:	cmp	r0, #46	; 0x2e
   36784:	bne	367a4 <flatcc_json_parser_integer@@Base+0x1f8>
   36788:	ldr	r0, [fp, #-8]
   3678c:	ldr	r1, [fp, #-12]
   36790:	ldr	r2, [fp, #-16]
   36794:	movw	r3, #12
   36798:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   3679c:	str	r0, [fp, #-4]
   367a0:	b	367c0 <flatcc_json_parser_integer@@Base+0x214>
   367a4:	ldr	r0, [sp, #8]
   367a8:	ldr	r1, [sp, #12]
   367ac:	ldr	r2, [fp, #8]
   367b0:	str	r1, [r2, #4]
   367b4:	str	r0, [r2]
   367b8:	ldr	r0, [fp, #-12]
   367bc:	str	r0, [fp, #-4]
   367c0:	ldr	r0, [fp, #-4]
   367c4:	mov	sp, fp
   367c8:	pop	{fp, pc}

000367cc <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   367cc:	push	{fp, lr}
   367d0:	mov	fp, sp
   367d4:	sub	sp, sp, #64	; 0x40
   367d8:	ldr	ip, [fp, #8]
   367dc:	str	r0, [fp, #-8]
   367e0:	str	r1, [fp, #-12]
   367e4:	str	r2, [fp, #-16]
   367e8:	str	r3, [fp, #-20]	; 0xffffffec
   367ec:	ldr	r0, [fp, #8]
   367f0:	cmp	r0, #0
   367f4:	movw	r0, #0
   367f8:	movne	r0, #1
   367fc:	tst	r0, #1
   36800:	movw	r0, #1
   36804:	moveq	r0, #0
   36808:	str	r0, [sp, #20]
   3680c:	ldr	r0, [fp, #-8]
   36810:	ldr	r1, [fp, #-12]
   36814:	ldr	r2, [fp, #-16]
   36818:	str	ip, [sp, #12]
   3681c:	bl	35dc0 <flatcc_json_parser_float@@Base+0x300>
   36820:	str	r0, [fp, #-12]
   36824:	ldr	r0, [fp, #-8]
   36828:	ldr	r1, [fp, #-12]
   3682c:	str	r1, [fp, #-24]	; 0xffffffe8
   36830:	ldr	r2, [fp, #-16]
   36834:	bl	33f3c <flatcc_json_parser_string_part@@Base>
   36838:	str	r0, [fp, #-12]
   3683c:	ldr	r0, [fp, #-12]
   36840:	ldr	r1, [fp, #-16]
   36844:	cmp	r0, r1
   36848:	beq	3685c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   3684c:	ldr	r0, [fp, #-12]
   36850:	ldrb	r0, [r0]
   36854:	cmp	r0, #34	; 0x22
   36858:	beq	36860 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x94>
   3685c:	b	369e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   36860:	ldr	r0, [fp, #-12]
   36864:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36868:	sub	r0, r0, r1
   3686c:	bl	36a2c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x260>
   36870:	str	r0, [sp, #32]
   36874:	ldr	r0, [fp, #-8]
   36878:	ldr	r0, [r0]
   3687c:	movw	r1, #1
   36880:	movw	r2, #1
   36884:	uxth	r2, r2
   36888:	mvn	r3, #0
   3688c:	bl	2c1a4 <flatcc_builder_start_vector@@Base>
   36890:	cmp	r0, #0
   36894:	beq	3689c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd0>
   36898:	b	369bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   3689c:	ldr	r0, [fp, #-8]
   368a0:	ldr	r0, [r0]
   368a4:	ldr	r1, [sp, #32]
   368a8:	bl	2b6a8 <flatcc_builder_extend_vector@@Base>
   368ac:	str	r0, [fp, #-28]	; 0xffffffe4
   368b0:	movw	r1, #0
   368b4:	cmp	r0, r1
   368b8:	bne	368c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf4>
   368bc:	b	369bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   368c0:	ldr	r0, [fp, #-12]
   368c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   368c8:	sub	r0, r0, r1
   368cc:	str	r0, [sp, #24]
   368d0:	ldr	r0, [sp, #32]
   368d4:	str	r0, [sp, #28]
   368d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   368dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   368e0:	ldr	r2, [sp, #20]
   368e4:	add	r3, sp, #28
   368e8:	str	r2, [sp, #8]
   368ec:	mov	r2, r3
   368f0:	add	r3, sp, #24
   368f4:	ldr	ip, [sp, #8]
   368f8:	str	ip, [sp]
   368fc:	bl	36abc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f0>
   36900:	str	r0, [sp, #16]
   36904:	cmp	r0, #0
   36908:	beq	36920 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x154>
   3690c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36910:	ldr	r1, [sp, #24]
   36914:	add	r0, r0, r1
   36918:	str	r0, [fp, #-12]
   3691c:	b	369e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   36920:	ldr	r0, [sp, #24]
   36924:	ldr	r1, [fp, #-12]
   36928:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3692c:	sub	r1, r1, r2
   36930:	cmp	r0, r1
   36934:	beq	3694c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x180>
   36938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3693c:	ldr	r1, [sp, #24]
   36940:	add	r0, r0, r1
   36944:	str	r0, [fp, #-12]
   36948:	b	369e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   3694c:	ldr	r0, [sp, #28]
   36950:	ldr	r1, [sp, #32]
   36954:	cmp	r0, r1
   36958:	bcs	36984 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   3695c:	ldr	r0, [fp, #-8]
   36960:	ldr	r0, [r0]
   36964:	ldr	r1, [sp, #32]
   36968:	ldr	r2, [sp, #28]
   3696c:	sub	r1, r1, r2
   36970:	bl	2be3c <flatcc_builder_truncate_vector@@Base>
   36974:	cmp	r0, #0
   36978:	beq	36980 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b4>
   3697c:	b	369bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   36980:	b	36984 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   36984:	ldr	r0, [fp, #-8]
   36988:	ldr	r0, [r0]
   3698c:	bl	2d684 <flatcc_builder_end_vector@@Base>
   36990:	ldr	r1, [fp, #-20]	; 0xffffffec
   36994:	str	r0, [r1]
   36998:	cmp	r0, #0
   3699c:	bne	369a4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d8>
   369a0:	b	369bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   369a4:	ldr	r0, [fp, #-8]
   369a8:	ldr	r1, [fp, #-12]
   369ac:	ldr	r2, [fp, #-16]
   369b0:	bl	35e30 <flatcc_json_parser_float@@Base+0x370>
   369b4:	str	r0, [fp, #-4]
   369b8:	b	36a20 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   369bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   369c0:	movw	r1, #0
   369c4:	str	r1, [r0]
   369c8:	ldr	r0, [fp, #-8]
   369cc:	ldr	r1, [fp, #-12]
   369d0:	ldr	r2, [fp, #-16]
   369d4:	movw	r3, #33	; 0x21
   369d8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   369dc:	str	r0, [fp, #-4]
   369e0:	b	36a20 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   369e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   369e8:	movw	r1, #0
   369ec:	str	r1, [r0]
   369f0:	ldr	r0, [fp, #-8]
   369f4:	ldr	r1, [fp, #-12]
   369f8:	ldr	r2, [fp, #-16]
   369fc:	ldr	r3, [fp, #8]
   36a00:	cmp	r3, #0
   36a04:	movw	r3, #0
   36a08:	movne	r3, #1
   36a0c:	tst	r3, #1
   36a10:	movw	r3, #32
   36a14:	moveq	r3, #31
   36a18:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   36a1c:	str	r0, [fp, #-4]
   36a20:	ldr	r0, [fp, #-4]
   36a24:	mov	sp, fp
   36a28:	pop	{fp, pc}
   36a2c:	sub	sp, sp, #20
   36a30:	str	r0, [sp, #12]
   36a34:	ldr	r0, [sp, #12]
   36a38:	and	r0, r0, #3
   36a3c:	str	r0, [sp, #8]
   36a40:	ldr	r0, [sp, #12]
   36a44:	lsr	r0, r0, #2
   36a48:	add	r0, r0, r0, lsl #1
   36a4c:	str	r0, [sp, #4]
   36a50:	ldr	r0, [sp, #8]
   36a54:	cmp	r0, #2
   36a58:	str	r0, [sp]
   36a5c:	bcc	36aa4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   36a60:	b	36a64 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x298>
   36a64:	ldr	r0, [sp]
   36a68:	cmp	r0, #2
   36a6c:	beq	36a94 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c8>
   36a70:	b	36a74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2a8>
   36a74:	ldr	r0, [sp]
   36a78:	cmp	r0, #3
   36a7c:	bne	36aa8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   36a80:	b	36a84 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b8>
   36a84:	ldr	r0, [sp, #4]
   36a88:	add	r0, r0, #2
   36a8c:	str	r0, [sp, #16]
   36a90:	b	36ab0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   36a94:	ldr	r0, [sp, #4]
   36a98:	add	r0, r0, #1
   36a9c:	str	r0, [sp, #16]
   36aa0:	b	36ab0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   36aa4:	b	36aa8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   36aa8:	ldr	r0, [sp, #4]
   36aac:	str	r0, [sp, #16]
   36ab0:	ldr	r0, [sp, #16]
   36ab4:	add	sp, sp, #20
   36ab8:	bx	lr
   36abc:	push	{fp, lr}
   36ac0:	mov	fp, sp
   36ac4:	sub	sp, sp, #68	; 0x44
   36ac8:	ldr	ip, [fp, #8]
   36acc:	ldr	lr, [pc, #1276]	; 36fd0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x804>
   36ad0:	add	lr, pc, lr
   36ad4:	str	r0, [fp, #-4]
   36ad8:	str	r1, [fp, #-8]
   36adc:	str	r2, [fp, #-12]
   36ae0:	str	r3, [fp, #-16]
   36ae4:	movw	r0, #0
   36ae8:	str	r0, [fp, #-20]	; 0xffffffec
   36aec:	ldr	r1, [fp, #-4]
   36af0:	str	r1, [sp, #32]
   36af4:	mvn	r1, #0
   36af8:	str	r1, [sp, #28]
   36afc:	str	r1, [sp, #24]
   36b00:	str	lr, [sp, #16]
   36b04:	ldr	r1, [fp, #8]
   36b08:	and	r1, r1, #32
   36b0c:	str	r1, [sp, #12]
   36b10:	ldr	r1, [fp, #-16]
   36b14:	cmp	r1, r0
   36b18:	beq	36b28 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35c>
   36b1c:	ldr	r0, [fp, #-16]
   36b20:	ldr	r0, [r0]
   36b24:	str	r0, [sp, #24]
   36b28:	ldr	r0, [sp, #24]
   36b2c:	str	r0, [sp, #20]
   36b30:	ldr	r0, [fp, #8]
   36b34:	bic	r0, r0, #224	; 0xe0
   36b38:	str	r0, [fp, #8]
   36b3c:	ldr	r0, [fp, #8]
   36b40:	cmp	r0, #0
   36b44:	str	r0, [sp, #8]
   36b48:	beq	36b60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x394>
   36b4c:	b	36b50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x384>
   36b50:	ldr	r0, [sp, #8]
   36b54:	cmp	r0, #1
   36b58:	beq	36b90 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   36b5c:	b	36bc0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f4>
   36b60:	ldr	r0, [pc, #1140]	; 36fdc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x810>
   36b64:	add	r0, pc, r0
   36b68:	ldr	r1, [pc, #1136]	; 36fe0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x814>
   36b6c:	add	r1, pc, r1
   36b70:	ldr	r2, [sp, #12]
   36b74:	cmp	r2, #0
   36b78:	movw	r2, #0
   36b7c:	movne	r2, #1
   36b80:	tst	r2, #1
   36b84:	movne	r1, r0
   36b88:	str	r1, [sp, #16]
   36b8c:	b	36bcc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x400>
   36b90:	ldr	r0, [pc, #1084]	; 36fd4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x808>
   36b94:	add	r0, pc, r0
   36b98:	ldr	r1, [pc, #1080]	; 36fd8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x80c>
   36b9c:	add	r1, pc, r1
   36ba0:	ldr	r2, [sp, #12]
   36ba4:	cmp	r2, #0
   36ba8:	movw	r2, #0
   36bac:	movne	r2, #1
   36bb0:	tst	r2, #1
   36bb4:	movne	r1, r0
   36bb8:	str	r1, [sp, #16]
   36bbc:	b	36bcc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x400>
   36bc0:	movw	r0, #3
   36bc4:	str	r0, [fp, #-20]	; 0xffffffec
   36bc8:	b	36e50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   36bcc:	ldr	r0, [fp, #-12]
   36bd0:	movw	r1, #0
   36bd4:	cmp	r0, r1
   36bd8:	beq	36bf8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x42c>
   36bdc:	ldr	r0, [fp, #-12]
   36be0:	ldr	r0, [r0]
   36be4:	cmp	r0, #0
   36be8:	bls	36bf8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x42c>
   36bec:	ldr	r0, [fp, #-12]
   36bf0:	ldr	r0, [r0]
   36bf4:	str	r0, [sp, #28]
   36bf8:	b	36bfc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x430>
   36bfc:	ldr	r0, [sp, #28]
   36c00:	cmp	r0, #0
   36c04:	bls	36e4c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x680>
   36c08:	movw	r0, #0
   36c0c:	str	r0, [fp, #-24]	; 0xffffffe8
   36c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36c14:	cmp	r0, #4
   36c18:	bcs	36db0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5e4>
   36c1c:	ldr	r0, [sp, #24]
   36c20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36c24:	cmp	r0, r1
   36c28:	bne	36c48 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x47c>
   36c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36c30:	str	r0, [fp, #-28]	; 0xffffffe4
   36c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36c38:	ldr	r1, [sp, #24]
   36c3c:	sub	r0, r1, r0
   36c40:	str	r0, [sp, #24]
   36c44:	b	36ea4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6d8>
   36c48:	ldr	r0, [sp, #16]
   36c4c:	ldr	r1, [fp, #-8]
   36c50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36c54:	add	r1, r1, r2
   36c58:	ldrb	r1, [r1]
   36c5c:	add	r0, r0, r1
   36c60:	ldrb	r0, [r0]
   36c64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36c68:	sub	r2, fp, #32
   36c6c:	add	r1, r2, r1
   36c70:	strb	r0, [r1]
   36c74:	and	r0, r0, #255	; 0xff
   36c78:	cmp	r0, #64	; 0x40
   36c7c:	blt	36d9c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d0>
   36c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36c84:	sub	r1, fp, #32
   36c88:	add	r0, r1, r0
   36c8c:	ldrb	r0, [r0]
   36c90:	cmp	r0, #65	; 0x41
   36c94:	bne	36cc4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x4f8>
   36c98:	ldr	r0, [fp, #-8]
   36c9c:	add	r0, r0, #1
   36ca0:	str	r0, [fp, #-8]
   36ca4:	ldr	r0, [sp, #24]
   36ca8:	mvn	r1, #0
   36cac:	add	r0, r0, r1
   36cb0:	str	r0, [sp, #24]
   36cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36cb8:	add	r0, r0, r1
   36cbc:	str	r0, [fp, #-24]	; 0xffffffe8
   36cc0:	b	36da0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d4>
   36cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36cc8:	str	r0, [fp, #-28]	; 0xffffffe4
   36ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36cd0:	sub	r1, fp, #32
   36cd4:	add	r0, r1, r0
   36cd8:	ldrb	r0, [r0]
   36cdc:	cmp	r0, #66	; 0x42
   36ce0:	bne	36d88 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5bc>
   36ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36ce8:	add	r0, r0, #1
   36cec:	str	r0, [fp, #-24]	; 0xffffffe8
   36cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36cf4:	ldr	r1, [sp, #24]
   36cf8:	cmp	r0, r1
   36cfc:	movw	r0, #0
   36d00:	str	r0, [sp, #4]
   36d04:	bcs	36d1c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x550>
   36d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36d0c:	cmp	r0, #8
   36d10:	movw	r0, #0
   36d14:	movcc	r0, #1
   36d18:	str	r0, [sp, #4]
   36d1c:	ldr	r0, [sp, #4]
   36d20:	tst	r0, #1
   36d24:	beq	36d84 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5b8>
   36d28:	ldr	r0, [sp, #16]
   36d2c:	ldr	r1, [fp, #-8]
   36d30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36d34:	add	r1, r1, r2
   36d38:	ldrb	r1, [r1]
   36d3c:	add	r0, r0, r1
   36d40:	ldrb	r0, [r0]
   36d44:	cmp	r0, #66	; 0x42
   36d48:	beq	36d74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5a8>
   36d4c:	ldr	r0, [sp, #16]
   36d50:	ldr	r1, [fp, #-8]
   36d54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36d58:	add	r1, r1, r2
   36d5c:	ldrb	r1, [r1]
   36d60:	add	r0, r0, r1
   36d64:	ldrb	r0, [r0]
   36d68:	cmp	r0, #65	; 0x41
   36d6c:	beq	36d74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5a8>
   36d70:	b	36d84 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5b8>
   36d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36d78:	add	r0, r0, #1
   36d7c:	str	r0, [fp, #-24]	; 0xffffffe8
   36d80:	b	36cf0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x524>
   36d84:	b	36d88 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5bc>
   36d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36d8c:	ldr	r1, [sp, #24]
   36d90:	sub	r0, r1, r0
   36d94:	str	r0, [sp, #24]
   36d98:	b	36ea4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6d8>
   36d9c:	b	36da0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d4>
   36da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36da4:	add	r0, r0, #1
   36da8:	str	r0, [fp, #-24]	; 0xffffffe8
   36dac:	b	36c10 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x444>
   36db0:	ldr	r0, [sp, #28]
   36db4:	cmp	r0, #3
   36db8:	bcs	36dc0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5f4>
   36dbc:	b	36fc4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f8>
   36dc0:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   36dc4:	lsl	r0, r0, #2
   36dc8:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   36dcc:	asr	r1, r1, #4
   36dd0:	orr	r0, r0, r1
   36dd4:	ldr	r1, [fp, #-4]
   36dd8:	strb	r0, [r1]
   36ddc:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   36de0:	lsl	r0, r0, #4
   36de4:	ldrb	r1, [fp, #-30]	; 0xffffffe2
   36de8:	asr	r1, r1, #2
   36dec:	orr	r0, r0, r1
   36df0:	ldr	r1, [fp, #-4]
   36df4:	strb	r0, [r1, #1]
   36df8:	ldrb	r0, [fp, #-30]	; 0xffffffe2
   36dfc:	lsl	r0, r0, #6
   36e00:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   36e04:	orr	r0, r0, r1
   36e08:	ldr	r1, [fp, #-4]
   36e0c:	strb	r0, [r1, #2]
   36e10:	ldr	r0, [fp, #-4]
   36e14:	add	r0, r0, #3
   36e18:	str	r0, [fp, #-4]
   36e1c:	ldr	r0, [fp, #-8]
   36e20:	add	r0, r0, #4
   36e24:	str	r0, [fp, #-8]
   36e28:	ldr	r0, [sp, #28]
   36e2c:	sub	r0, r0, #3
   36e30:	str	r0, [sp, #28]
   36e34:	ldr	r0, [sp, #24]
   36e38:	sub	r0, r0, #4
   36e3c:	str	r0, [sp, #24]
   36e40:	ldr	r0, [sp, #24]
   36e44:	str	r0, [sp, #20]
   36e48:	b	36bfc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x430>
   36e4c:	b	36e50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   36e50:	ldr	r0, [fp, #-12]
   36e54:	movw	r1, #0
   36e58:	cmp	r0, r1
   36e5c:	beq	36e74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6a8>
   36e60:	ldr	r0, [fp, #-4]
   36e64:	ldr	r1, [sp, #32]
   36e68:	sub	r0, r0, r1
   36e6c:	ldr	r1, [fp, #-12]
   36e70:	str	r0, [r1]
   36e74:	ldr	r0, [fp, #-16]
   36e78:	movw	r1, #0
   36e7c:	cmp	r0, r1
   36e80:	beq	36e98 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6cc>
   36e84:	ldr	r0, [sp, #20]
   36e88:	ldr	r1, [fp, #-16]
   36e8c:	ldr	r2, [r1]
   36e90:	sub	r0, r2, r0
   36e94:	str	r0, [r1]
   36e98:	ldr	r0, [fp, #-20]	; 0xffffffec
   36e9c:	mov	sp, fp
   36ea0:	pop	{fp, pc}
   36ea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36ea8:	cmp	r0, #0
   36eac:	str	r0, [sp]
   36eb0:	beq	36ed8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x70c>
   36eb4:	b	36eb8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6ec>
   36eb8:	ldr	r0, [sp]
   36ebc:	cmp	r0, #2
   36ec0:	beq	36edc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x710>
   36ec4:	b	36ec8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6fc>
   36ec8:	ldr	r0, [sp]
   36ecc:	cmp	r0, #3
   36ed0:	beq	36f30 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x764>
   36ed4:	b	36fa0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7d4>
   36ed8:	b	36fac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e0>
   36edc:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   36ee0:	lsl	r0, r0, #4
   36ee4:	and	r0, r0, #255	; 0xff
   36ee8:	cmp	r0, #0
   36eec:	beq	36ef4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x728>
   36ef0:	b	36fb8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7ec>
   36ef4:	ldr	r0, [sp, #28]
   36ef8:	cmp	r0, #1
   36efc:	bcs	36f04 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x738>
   36f00:	b	36fc4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f8>
   36f04:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   36f08:	lsl	r0, r0, #2
   36f0c:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   36f10:	asr	r1, r1, #4
   36f14:	orr	r0, r0, r1
   36f18:	ldr	r1, [fp, #-4]
   36f1c:	strb	r0, [r1]
   36f20:	ldr	r0, [fp, #-4]
   36f24:	add	r0, r0, #1
   36f28:	str	r0, [fp, #-4]
   36f2c:	b	36fac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e0>
   36f30:	ldrb	r0, [fp, #-30]	; 0xffffffe2
   36f34:	lsl	r0, r0, #6
   36f38:	and	r0, r0, #255	; 0xff
   36f3c:	cmp	r0, #0
   36f40:	beq	36f48 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x77c>
   36f44:	b	36fb8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7ec>
   36f48:	ldr	r0, [sp, #28]
   36f4c:	cmp	r0, #2
   36f50:	bcs	36f58 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x78c>
   36f54:	b	36fc4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f8>
   36f58:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   36f5c:	lsl	r0, r0, #2
   36f60:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   36f64:	asr	r1, r1, #4
   36f68:	orr	r0, r0, r1
   36f6c:	ldr	r1, [fp, #-4]
   36f70:	strb	r0, [r1]
   36f74:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   36f78:	lsl	r0, r0, #4
   36f7c:	ldrb	r1, [fp, #-30]	; 0xffffffe2
   36f80:	asr	r1, r1, #2
   36f84:	orr	r0, r0, r1
   36f88:	ldr	r1, [fp, #-4]
   36f8c:	strb	r0, [r1, #1]
   36f90:	ldr	r0, [fp, #-4]
   36f94:	add	r0, r0, #2
   36f98:	str	r0, [fp, #-4]
   36f9c:	b	36fac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e0>
   36fa0:	movw	r0, #4
   36fa4:	str	r0, [fp, #-20]	; 0xffffffec
   36fa8:	b	36e50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   36fac:	ldr	r0, [sp, #24]
   36fb0:	str	r0, [sp, #20]
   36fb4:	b	36e50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   36fb8:	movw	r0, #5
   36fbc:	str	r0, [fp, #-20]	; 0xffffffec
   36fc0:	b	36e50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   36fc4:	movw	r0, #1
   36fc8:	str	r0, [fp, #-20]	; 0xffffffec
   36fcc:	b	36e50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   36fd0:	ldrdeq	r6, [r1], -fp
   36fd4:	andeq	r6, r1, r7, lsl sl
   36fd8:	andeq	r6, r1, pc, lsl #16
   36fdc:	andeq	r6, r1, r7, asr #18
   36fe0:	andeq	r6, r1, pc, lsr r7

00036fe4 <flatcc_json_parser_build_string@@Base>:
   36fe4:	push	{fp, lr}
   36fe8:	mov	fp, sp
   36fec:	sub	sp, sp, #40	; 0x28
   36ff0:	str	r0, [fp, #-8]
   36ff4:	str	r1, [fp, #-12]
   36ff8:	str	r2, [fp, #-16]
   36ffc:	str	r3, [sp, #20]
   37000:	ldr	r0, [fp, #-8]
   37004:	ldr	r1, [fp, #-12]
   37008:	ldr	r2, [fp, #-16]
   3700c:	bl	35dc0 <flatcc_json_parser_float@@Base+0x300>
   37010:	str	r0, [fp, #-12]
   37014:	ldr	r0, [fp, #-8]
   37018:	ldr	r1, [fp, #-12]
   3701c:	str	r1, [sp, #12]
   37020:	ldr	r2, [fp, #-16]
   37024:	bl	33f3c <flatcc_json_parser_string_part@@Base>
   37028:	str	r0, [fp, #-12]
   3702c:	ldr	r0, [fp, #-12]
   37030:	ldr	r1, [fp, #-16]
   37034:	cmp	r0, r1
   37038:	beq	37074 <flatcc_json_parser_build_string@@Base+0x90>
   3703c:	ldr	r0, [fp, #-12]
   37040:	ldrb	r0, [r0]
   37044:	cmp	r0, #34	; 0x22
   37048:	bne	37074 <flatcc_json_parser_build_string@@Base+0x90>
   3704c:	ldr	r0, [fp, #-8]
   37050:	ldr	r0, [r0]
   37054:	ldr	r1, [sp, #12]
   37058:	ldr	r2, [fp, #-12]
   3705c:	ldr	r3, [sp, #12]
   37060:	sub	r2, r2, r3
   37064:	bl	2e93c <flatcc_builder_create_string@@Base>
   37068:	ldr	r1, [sp, #20]
   3706c:	str	r0, [r1]
   37070:	b	371b4 <flatcc_json_parser_build_string@@Base+0x1d0>
   37074:	ldr	r0, [fp, #-8]
   37078:	ldr	r0, [r0]
   3707c:	bl	2c438 <flatcc_builder_start_string@@Base>
   37080:	cmp	r0, #0
   37084:	bne	370b0 <flatcc_json_parser_build_string@@Base+0xcc>
   37088:	ldr	r0, [fp, #-8]
   3708c:	ldr	r0, [r0]
   37090:	ldr	r1, [sp, #12]
   37094:	ldr	r2, [fp, #-12]
   37098:	ldr	r3, [sp, #12]
   3709c:	sub	r2, r2, r3
   370a0:	bl	2bc90 <flatcc_builder_append_string@@Base>
   370a4:	movw	r1, #0
   370a8:	cmp	r1, r0
   370ac:	bne	370b4 <flatcc_json_parser_build_string@@Base+0xd0>
   370b0:	b	371cc <flatcc_json_parser_build_string@@Base+0x1e8>
   370b4:	b	370b8 <flatcc_json_parser_build_string@@Base+0xd4>
   370b8:	ldr	r0, [fp, #-12]
   370bc:	ldr	r1, [fp, #-16]
   370c0:	cmp	r0, r1
   370c4:	movw	r0, #0
   370c8:	str	r0, [sp, #8]
   370cc:	beq	370e8 <flatcc_json_parser_build_string@@Base+0x104>
   370d0:	ldr	r0, [fp, #-12]
   370d4:	ldrb	r0, [r0]
   370d8:	cmp	r0, #34	; 0x22
   370dc:	movw	r0, #0
   370e0:	movne	r0, #1
   370e4:	str	r0, [sp, #8]
   370e8:	ldr	r0, [sp, #8]
   370ec:	tst	r0, #1
   370f0:	beq	371a0 <flatcc_json_parser_build_string@@Base+0x1bc>
   370f4:	add	r3, sp, #16
   370f8:	ldr	r0, [fp, #-8]
   370fc:	ldr	r1, [fp, #-12]
   37100:	ldr	r2, [fp, #-16]
   37104:	bl	3423c <flatcc_json_parser_string_escape@@Base>
   37108:	add	r1, sp, #16
   3710c:	str	r0, [fp, #-12]
   37110:	ldr	r0, [fp, #-8]
   37114:	ldr	r0, [r0]
   37118:	add	r1, r1, #1
   3711c:	ldrb	r2, [sp, #16]
   37120:	bl	2bc90 <flatcc_builder_append_string@@Base>
   37124:	movw	r1, #0
   37128:	cmp	r1, r0
   3712c:	bne	37134 <flatcc_json_parser_build_string@@Base+0x150>
   37130:	b	371cc <flatcc_json_parser_build_string@@Base+0x1e8>
   37134:	ldr	r0, [fp, #-16]
   37138:	ldr	r1, [fp, #-8]
   3713c:	ldr	r2, [fp, #-12]
   37140:	str	r2, [sp, #12]
   37144:	ldr	r3, [fp, #-16]
   37148:	str	r0, [sp, #4]
   3714c:	mov	r0, r1
   37150:	mov	r1, r2
   37154:	mov	r2, r3
   37158:	bl	33f3c <flatcc_json_parser_string_part@@Base>
   3715c:	str	r0, [fp, #-12]
   37160:	ldr	r1, [sp, #4]
   37164:	cmp	r1, r0
   37168:	beq	3719c <flatcc_json_parser_build_string@@Base+0x1b8>
   3716c:	ldr	r0, [fp, #-8]
   37170:	ldr	r0, [r0]
   37174:	ldr	r1, [sp, #12]
   37178:	ldr	r2, [fp, #-12]
   3717c:	ldr	r3, [sp, #12]
   37180:	sub	r2, r2, r3
   37184:	bl	2bc90 <flatcc_builder_append_string@@Base>
   37188:	movw	r1, #0
   3718c:	cmp	r1, r0
   37190:	bne	37198 <flatcc_json_parser_build_string@@Base+0x1b4>
   37194:	b	371cc <flatcc_json_parser_build_string@@Base+0x1e8>
   37198:	b	3719c <flatcc_json_parser_build_string@@Base+0x1b8>
   3719c:	b	370b8 <flatcc_json_parser_build_string@@Base+0xd4>
   371a0:	ldr	r0, [fp, #-8]
   371a4:	ldr	r0, [r0]
   371a8:	bl	2eb44 <flatcc_builder_end_string@@Base>
   371ac:	ldr	r1, [sp, #20]
   371b0:	str	r0, [r1]
   371b4:	ldr	r0, [fp, #-8]
   371b8:	ldr	r1, [fp, #-12]
   371bc:	ldr	r2, [fp, #-16]
   371c0:	bl	35e30 <flatcc_json_parser_float@@Base+0x370>
   371c4:	str	r0, [fp, #-4]
   371c8:	b	371e0 <flatcc_json_parser_build_string@@Base+0x1fc>
   371cc:	ldr	r0, [sp, #20]
   371d0:	movw	r1, #0
   371d4:	str	r1, [r0]
   371d8:	ldr	r0, [fp, #-12]
   371dc:	str	r0, [fp, #-4]
   371e0:	ldr	r0, [fp, #-4]
   371e4:	mov	sp, fp
   371e8:	pop	{fp, pc}

000371ec <flatcc_json_parser_prepare_unions@@Base>:
   371ec:	push	{fp, lr}
   371f0:	mov	fp, sp
   371f4:	sub	sp, sp, #32
   371f8:	ldr	ip, [fp, #8]
   371fc:	str	r0, [fp, #-8]
   37200:	str	r1, [fp, #-12]
   37204:	str	r2, [sp, #16]
   37208:	str	r3, [sp, #12]
   3720c:	ldr	r0, [fp, #-8]
   37210:	ldr	r0, [r0]
   37214:	ldr	r1, [sp, #12]
   37218:	sub	r1, r1, #1
   3721c:	movw	r2, #24
   37220:	mul	r1, r1, r2
   37224:	add	r1, r1, #32
   37228:	str	ip, [sp, #4]
   3722c:	bl	2a2e4 <flatcc_builder_enter_user_frame@@Base>
   37230:	ldr	r1, [fp, #8]
   37234:	str	r0, [r1]
   37238:	cmp	r0, #0
   3723c:	bne	3725c <flatcc_json_parser_prepare_unions@@Base+0x70>
   37240:	ldr	r0, [fp, #-8]
   37244:	ldr	r1, [fp, #-12]
   37248:	ldr	r2, [sp, #16]
   3724c:	movw	r3, #33	; 0x21
   37250:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   37254:	str	r0, [fp, #-4]
   37258:	b	37288 <flatcc_json_parser_prepare_unions@@Base+0x9c>
   3725c:	ldr	r0, [fp, #-8]
   37260:	ldr	r0, [r0]
   37264:	ldr	r1, [fp, #8]
   37268:	ldr	r1, [r1]
   3726c:	bl	2a4e4 <flatcc_builder_get_user_frame_ptr@@Base>
   37270:	str	r0, [sp, #8]
   37274:	ldr	r0, [sp, #12]
   37278:	ldr	r1, [sp, #8]
   3727c:	str	r0, [r1]
   37280:	ldr	r0, [fp, #-12]
   37284:	str	r0, [fp, #-4]
   37288:	ldr	r0, [fp, #-4]
   3728c:	mov	sp, fp
   37290:	pop	{fp, pc}

00037294 <flatcc_json_parser_finalize_unions@@Base>:
   37294:	push	{fp, lr}
   37298:	mov	fp, sp
   3729c:	sub	sp, sp, #24
   372a0:	str	r0, [fp, #-4]
   372a4:	str	r1, [fp, #-8]
   372a8:	str	r2, [sp, #12]
   372ac:	str	r3, [sp, #8]
   372b0:	ldr	r0, [fp, #-4]
   372b4:	ldr	r0, [r0]
   372b8:	ldr	r1, [sp, #8]
   372bc:	bl	2a4e4 <flatcc_builder_get_user_frame_ptr@@Base>
   372c0:	str	r0, [sp, #4]
   372c4:	ldr	r0, [sp, #4]
   372c8:	ldr	r0, [r0, #4]
   372cc:	cmp	r0, #0
   372d0:	beq	372ec <flatcc_json_parser_finalize_unions@@Base+0x58>
   372d4:	ldr	r0, [fp, #-4]
   372d8:	ldr	r1, [fp, #-8]
   372dc:	ldr	r2, [sp, #12]
   372e0:	movw	r3, #27
   372e4:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   372e8:	str	r0, [fp, #-8]
   372ec:	ldr	r0, [fp, #-4]
   372f0:	ldr	r0, [r0]
   372f4:	ldr	r1, [sp, #8]
   372f8:	bl	2a458 <flatcc_builder_exit_user_frame_at@@Base>
   372fc:	ldr	r1, [fp, #-8]
   37300:	str	r0, [sp]
   37304:	mov	r0, r1
   37308:	mov	sp, fp
   3730c:	pop	{fp, pc}

00037310 <flatcc_json_parser_union@@Base>:
   37310:	push	{r4, sl, fp, lr}
   37314:	add	fp, sp, #8
   37318:	sub	sp, sp, #56	; 0x38
   3731c:	ldr	ip, [fp, #16]
   37320:	ldr	lr, [fp, #12]
   37324:	ldr	r4, [fp, #8]
   37328:	str	r0, [fp, #-16]
   3732c:	str	r1, [fp, #-20]	; 0xffffffec
   37330:	str	r2, [fp, #-24]	; 0xffffffe8
   37334:	str	r3, [fp, #-28]	; 0xffffffe4
   37338:	strh	r4, [fp, #-30]	; 0xffffffe2
   3733c:	ldr	r0, [fp, #-16]
   37340:	ldr	r0, [r0]
   37344:	ldr	r1, [fp, #12]
   37348:	str	ip, [sp, #12]
   3734c:	str	lr, [sp, #8]
   37350:	bl	2a4e4 <flatcc_builder_get_user_frame_ptr@@Base>
   37354:	str	r0, [sp, #28]
   37358:	ldr	r0, [sp, #28]
   3735c:	add	r0, r0, #8
   37360:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37364:	movw	r2, #24
   37368:	mul	r1, r1, r2
   3736c:	add	r0, r0, r1
   37370:	str	r0, [sp, #24]
   37374:	ldr	r0, [sp, #24]
   37378:	ldr	r0, [r0]
   3737c:	movw	r1, #0
   37380:	cmp	r0, r1
   37384:	beq	373a4 <flatcc_json_parser_union@@Base+0x94>
   37388:	ldr	r0, [fp, #-16]
   3738c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37390:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37394:	movw	r3, #28
   37398:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   3739c:	str	r0, [fp, #-12]
   373a0:	b	374f0 <flatcc_json_parser_union@@Base+0x1e0>
   373a4:	ldr	r0, [sp, #24]
   373a8:	ldrsb	r0, [r0, #12]
   373ac:	cmp	r0, #0
   373b0:	bne	37404 <flatcc_json_parser_union@@Base+0xf4>
   373b4:	ldr	r0, [sp, #28]
   373b8:	ldr	r1, [r0, #4]
   373bc:	add	r1, r1, #1
   373c0:	str	r1, [r0, #4]
   373c4:	ldr	r0, [fp, #-16]
   373c8:	ldr	r0, [r0, #16]
   373cc:	ldr	r1, [sp, #24]
   373d0:	str	r0, [r1, #8]
   373d4:	ldr	r0, [fp, #-16]
   373d8:	ldr	r0, [r0, #4]
   373dc:	ldr	r1, [sp, #24]
   373e0:	str	r0, [r1, #4]
   373e4:	ldr	r0, [fp, #-16]
   373e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   373ec:	ldr	r2, [sp, #24]
   373f0:	str	r1, [r2]
   373f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   373f8:	bl	35304 <flatcc_json_parser_generic_json@@Base>
   373fc:	str	r0, [fp, #-20]	; 0xffffffec
   37400:	b	374e8 <flatcc_json_parser_union@@Base+0x1d8>
   37404:	ldr	r0, [sp, #24]
   37408:	ldrb	r0, [r0, #13]
   3740c:	strb	r0, [sp, #16]
   37410:	ldr	r0, [sp, #24]
   37414:	ldrb	r0, [r0, #13]
   37418:	cmp	r0, #0
   3741c:	bne	3743c <flatcc_json_parser_union@@Base+0x12c>
   37420:	ldr	r0, [fp, #-16]
   37424:	ldr	r1, [fp, #-20]	; 0xffffffec
   37428:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3742c:	movw	r3, #25
   37430:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   37434:	str	r0, [fp, #-12]
   37438:	b	374f0 <flatcc_json_parser_union@@Base+0x1e0>
   3743c:	ldr	r0, [sp, #28]
   37440:	ldr	r1, [r0, #4]
   37444:	mvn	r2, #0
   37448:	add	r1, r1, r2
   3744c:	str	r1, [r0, #4]
   37450:	ldr	r0, [fp, #16]
   37454:	ldr	r1, [fp, #-16]
   37458:	ldr	r2, [fp, #-20]	; 0xffffffec
   3745c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37460:	ldr	ip, [sp, #24]
   37464:	ldrb	ip, [ip, #13]
   37468:	add	lr, sp, #16
   3746c:	add	lr, lr, #4
   37470:	str	r0, [sp, #4]
   37474:	mov	r0, r1
   37478:	mov	r1, r2
   3747c:	mov	r2, r3
   37480:	and	r3, ip, #255	; 0xff
   37484:	str	lr, [sp]
   37488:	ldr	ip, [sp, #4]
   3748c:	blx	ip
   37490:	str	r0, [fp, #-20]	; 0xffffffec
   37494:	ldr	r0, [fp, #-20]	; 0xffffffec
   37498:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3749c:	cmp	r0, r1
   374a0:	beq	374e4 <flatcc_json_parser_union@@Base+0x1d4>
   374a4:	ldr	r0, [fp, #-16]
   374a8:	ldr	r0, [r0]
   374ac:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   374b0:	ldr	r2, [sp, #16]
   374b4:	ldr	r3, [sp, #20]
   374b8:	bl	2db9c <flatcc_builder_table_add_union@@Base>
   374bc:	cmp	r0, #0
   374c0:	beq	374e0 <flatcc_json_parser_union@@Base+0x1d0>
   374c4:	ldr	r0, [fp, #-16]
   374c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   374cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   374d0:	movw	r3, #28
   374d4:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   374d8:	str	r0, [fp, #-12]
   374dc:	b	374f0 <flatcc_json_parser_union@@Base+0x1e0>
   374e0:	b	374e4 <flatcc_json_parser_union@@Base+0x1d4>
   374e4:	b	374e8 <flatcc_json_parser_union@@Base+0x1d8>
   374e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   374ec:	str	r0, [fp, #-12]
   374f0:	ldr	r0, [fp, #-12]
   374f4:	sub	sp, fp, #8
   374f8:	pop	{r4, sl, fp, pc}

000374fc <flatcc_json_parser_union_type@@Base>:
   374fc:	push	{r4, r5, fp, lr}
   37500:	add	fp, sp, #8
   37504:	sub	sp, sp, #80	; 0x50
   37508:	ldr	ip, [fp, #20]
   3750c:	ldr	lr, [fp, #16]
   37510:	ldr	r4, [fp, #12]
   37514:	ldr	r5, [fp, #8]
   37518:	str	r0, [fp, #-16]
   3751c:	str	r1, [fp, #-20]	; 0xffffffec
   37520:	str	r2, [fp, #-24]	; 0xffffffe8
   37524:	str	r3, [fp, #-28]	; 0xffffffe4
   37528:	strh	r5, [fp, #-30]	; 0xffffffe2
   3752c:	ldr	r0, [fp, #-16]
   37530:	ldr	r0, [r0]
   37534:	ldr	r1, [fp, #12]
   37538:	str	ip, [sp, #24]
   3753c:	str	lr, [sp, #20]
   37540:	str	r4, [sp, #16]
   37544:	bl	2a4e4 <flatcc_builder_get_user_frame_ptr@@Base>
   37548:	str	r0, [fp, #-36]	; 0xffffffdc
   3754c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   37550:	add	r0, r0, #8
   37554:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37558:	movw	r2, #24
   3755c:	mul	r1, r1, r2
   37560:	add	r0, r0, r1
   37564:	str	r0, [fp, #-40]	; 0xffffffd8
   37568:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3756c:	ldrsb	r0, [r0, #12]
   37570:	cmp	r0, #0
   37574:	beq	37594 <flatcc_json_parser_union_type@@Base+0x98>
   37578:	ldr	r0, [fp, #-16]
   3757c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37580:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37584:	movw	r3, #28
   37588:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   3758c:	str	r0, [fp, #-12]
   37590:	b	37788 <flatcc_json_parser_union_type@@Base+0x28c>
   37594:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37598:	movw	r1, #1
   3759c:	strb	r1, [r0, #12]
   375a0:	ldr	r0, [fp, #-16]
   375a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   375a8:	str	r1, [sp, #36]	; 0x24
   375ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   375b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   375b4:	add	r3, r3, #13
   375b8:	bl	377a0 <flatcc_json_parser_union_type@@Base+0x2a4>
   375bc:	str	r0, [fp, #-20]	; 0xffffffec
   375c0:	ldr	r0, [sp, #36]	; 0x24
   375c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   375c8:	cmp	r0, r1
   375cc:	bne	375f4 <flatcc_json_parser_union_type@@Base+0xf8>
   375d0:	ldr	r0, [fp, #-16]
   375d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   375d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   375dc:	ldr	r3, [fp, #16]
   375e0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   375e4:	add	ip, ip, #13
   375e8:	str	ip, [sp]
   375ec:	bl	3787c <flatcc_json_parser_union_type@@Base+0x380>
   375f0:	str	r0, [fp, #-20]	; 0xffffffec
   375f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   375f8:	ldr	r0, [r0]
   375fc:	movw	r1, #0
   37600:	cmp	r0, r1
   37604:	bne	3763c <flatcc_json_parser_union_type@@Base+0x140>
   37608:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3760c:	ldrb	r0, [r0, #13]
   37610:	cmp	r0, #0
   37614:	movw	r0, #0
   37618:	movne	r0, #1
   3761c:	and	r0, r0, #1
   37620:	ldr	r1, [fp, #-36]	; 0xffffffdc
   37624:	ldr	r2, [r1, #4]
   37628:	add	r0, r2, r0
   3762c:	str	r0, [r1, #4]
   37630:	ldr	r0, [fp, #-20]	; 0xffffffec
   37634:	str	r0, [fp, #-12]
   37638:	b	37788 <flatcc_json_parser_union_type@@Base+0x28c>
   3763c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   37640:	ldr	r0, [r0, #4]
   37644:	cmp	r0, #0
   37648:	beq	37650 <flatcc_json_parser_union_type@@Base+0x154>
   3764c:	b	37670 <flatcc_json_parser_union_type@@Base+0x174>
   37650:	ldr	r0, [pc, #316]	; 37794 <flatcc_json_parser_union_type@@Base+0x298>
   37654:	add	r0, pc, r0
   37658:	ldr	r1, [pc, #312]	; 37798 <flatcc_json_parser_union_type@@Base+0x29c>
   3765c:	add	r1, pc, r1
   37660:	ldr	r2, [pc, #308]	; 3779c <flatcc_json_parser_union_type@@Base+0x2a0>
   37664:	add	r3, pc, r2
   37668:	movw	r2, #965	; 0x3c5
   3766c:	bl	14f08 <__assert_fail@plt>
   37670:	ldr	r0, [fp, #-36]	; 0xffffffdc
   37674:	ldr	r1, [r0, #4]
   37678:	mvn	r2, #0
   3767c:	add	r1, r1, r2
   37680:	str	r1, [r0, #4]
   37684:	ldr	r0, [fp, #-16]
   37688:	ldr	r0, [r0, #16]
   3768c:	str	r0, [sp, #32]
   37690:	ldr	r0, [fp, #-16]
   37694:	ldr	r0, [r0, #4]
   37698:	str	r0, [sp, #28]
   3769c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   376a0:	ldr	r0, [r0, #8]
   376a4:	ldr	r1, [fp, #-16]
   376a8:	str	r0, [r1, #16]
   376ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   376b0:	ldr	r0, [r0, #4]
   376b4:	ldr	r1, [fp, #-16]
   376b8:	str	r0, [r1, #4]
   376bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   376c0:	ldrb	r0, [r0, #13]
   376c4:	strb	r0, [sp, #40]	; 0x28
   376c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   376cc:	ldr	r1, [fp, #20]
   376d0:	ldr	r2, [fp, #-16]
   376d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   376d8:	ldr	r3, [r3]
   376dc:	ldr	ip, [fp, #-24]	; 0xffffffe8
   376e0:	ldr	lr, [fp, #-40]	; 0xffffffd8
   376e4:	ldrb	lr, [lr, #13]
   376e8:	add	r4, sp, #40	; 0x28
   376ec:	add	r4, r4, #4
   376f0:	str	r0, [sp, #12]
   376f4:	mov	r0, r2
   376f8:	str	r1, [sp, #8]
   376fc:	mov	r1, r3
   37700:	mov	r2, ip
   37704:	and	r3, lr, #255	; 0xff
   37708:	str	r4, [sp]
   3770c:	ldr	ip, [sp, #8]
   37710:	blx	ip
   37714:	ldr	r1, [sp, #12]
   37718:	cmp	r1, r0
   3771c:	bne	3772c <flatcc_json_parser_union_type@@Base+0x230>
   37720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37724:	str	r0, [fp, #-12]
   37728:	b	37788 <flatcc_json_parser_union_type@@Base+0x28c>
   3772c:	ldr	r0, [fp, #-16]
   37730:	ldr	r0, [r0]
   37734:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   37738:	ldr	r2, [sp, #40]	; 0x28
   3773c:	ldr	r3, [sp, #44]	; 0x2c
   37740:	bl	2db9c <flatcc_builder_table_add_union@@Base>
   37744:	cmp	r0, #0
   37748:	beq	37768 <flatcc_json_parser_union_type@@Base+0x26c>
   3774c:	ldr	r0, [fp, #-16]
   37750:	ldr	r1, [fp, #-20]	; 0xffffffec
   37754:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37758:	movw	r3, #28
   3775c:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   37760:	str	r0, [fp, #-12]
   37764:	b	37788 <flatcc_json_parser_union_type@@Base+0x28c>
   37768:	ldr	r0, [sp, #32]
   3776c:	ldr	r1, [fp, #-16]
   37770:	str	r0, [r1, #16]
   37774:	ldr	r0, [sp, #28]
   37778:	ldr	r1, [fp, #-16]
   3777c:	str	r0, [r1, #4]
   37780:	ldr	r0, [fp, #-20]	; 0xffffffec
   37784:	str	r0, [fp, #-12]
   37788:	ldr	r0, [fp, #-12]
   3778c:	sub	sp, fp, #8
   37790:	pop	{r4, r5, fp, pc}
   37794:	andeq	r5, r1, r0, asr r3
   37798:	andeq	r5, r1, r7, asr r3
   3779c:			; <UNDEFINED> instruction: 0x000153b0
   377a0:	push	{r4, r5, fp, lr}
   377a4:	add	fp, sp, #8
   377a8:	sub	sp, sp, #56	; 0x38
   377ac:	str	r0, [fp, #-16]
   377b0:	str	r1, [fp, #-20]	; 0xffffffec
   377b4:	str	r2, [fp, #-24]	; 0xffffffe8
   377b8:	str	r3, [fp, #-28]	; 0xffffffe4
   377bc:	mov	r0, #0
   377c0:	str	r0, [sp, #28]
   377c4:	str	r0, [sp, #24]
   377c8:	movw	r0, #0
   377cc:	str	r0, [sp, #20]
   377d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   377d4:	str	r0, [sp, #16]
   377d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   377dc:	movw	r1, #0
   377e0:	strb	r1, [r0]
   377e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   377e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   377ec:	cmp	r0, r1
   377f0:	bne	37800 <flatcc_json_parser_union_type@@Base+0x304>
   377f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   377f8:	str	r0, [fp, #-12]
   377fc:	b	37870 <flatcc_json_parser_union_type@@Base+0x374>
   37800:	ldr	r0, [fp, #-16]
   37804:	ldr	r1, [fp, #-20]	; 0xffffffec
   37808:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3780c:	add	r3, sp, #20
   37810:	add	ip, sp, #24
   37814:	str	ip, [sp]
   37818:	bl	365ac <flatcc_json_parser_integer@@Base>
   3781c:	str	r0, [fp, #-20]	; 0xffffffec
   37820:	ldr	r0, [fp, #-20]	; 0xffffffec
   37824:	ldr	r1, [sp, #16]
   37828:	cmp	r0, r1
   3782c:	beq	37868 <flatcc_json_parser_union_type@@Base+0x36c>
   37830:	ldr	r0, [fp, #-16]
   37834:	ldr	r1, [fp, #-20]	; 0xffffffec
   37838:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3783c:	ldr	r3, [sp, #20]
   37840:	ldr	ip, [sp, #24]
   37844:	ldr	lr, [sp, #28]
   37848:	ldr	r4, [fp, #-28]	; 0xffffffe4
   3784c:	mov	r5, sp
   37850:	str	r4, [r5, #8]
   37854:	str	lr, [r5, #4]
   37858:	str	ip, [r5]
   3785c:	bl	397b0 <flatcc_json_parser_struct_as_root@@Base+0x122c>
   37860:	str	r0, [fp, #-12]
   37864:	b	37870 <flatcc_json_parser_union_type@@Base+0x374>
   37868:	ldr	r0, [fp, #-20]	; 0xffffffec
   3786c:	str	r0, [fp, #-12]
   37870:	ldr	r0, [fp, #-12]
   37874:	sub	sp, fp, #8
   37878:	pop	{r4, r5, fp, pc}
   3787c:	push	{r4, r5, r6, sl, fp, lr}
   37880:	add	fp, sp, #16
   37884:	sub	sp, sp, #80	; 0x50
   37888:	ldr	ip, [fp, #8]
   3788c:	str	r0, [fp, #-24]	; 0xffffffe8
   37890:	str	r1, [fp, #-28]	; 0xffffffe4
   37894:	str	r2, [fp, #-32]	; 0xffffffe0
   37898:	str	r3, [fp, #-36]	; 0xffffffdc
   3789c:	movw	r0, #0
   378a0:	strb	r0, [fp, #-45]	; 0xffffffd3
   378a4:	ldr	r1, [fp, #8]
   378a8:	strb	r0, [r1]
   378ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   378b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   378b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   378b8:	str	ip, [sp, #28]
   378bc:	bl	3985c <flatcc_json_parser_struct_as_root@@Base+0x12d8>
   378c0:	str	r0, [fp, #-28]	; 0xffffffe4
   378c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   378c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   378cc:	cmp	r0, r1
   378d0:	bne	378e0 <flatcc_json_parser_union_type@@Base+0x3e4>
   378d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   378d8:	str	r0, [fp, #-20]	; 0xffffffec
   378dc:	b	37a54 <flatcc_json_parser_union_type@@Base+0x558>
   378e0:	b	378e4 <flatcc_json_parser_union_type@@Base+0x3e8>
   378e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   378e8:	str	r0, [fp, #-40]	; 0xffffffd8
   378ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   378f0:	ldr	r0, [r0]
   378f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   378f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   378fc:	str	r2, [fp, #-44]	; 0xffffffd4
   37900:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37904:	str	r0, [sp, #24]
   37908:	mov	r0, r1
   3790c:	mov	r1, r2
   37910:	mov	r2, r3
   37914:	add	r3, sp, #36	; 0x24
   37918:	add	ip, sp, #40	; 0x28
   3791c:	str	ip, [sp]
   37920:	add	ip, sp, #32
   37924:	str	ip, [sp, #4]
   37928:	ldr	ip, [sp, #24]
   3792c:	blx	ip
   37930:	str	r0, [fp, #-28]	; 0xffffffe4
   37934:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37938:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3793c:	cmp	r0, r1
   37940:	bne	37950 <flatcc_json_parser_union_type@@Base+0x454>
   37944:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37948:	str	r0, [fp, #-20]	; 0xffffffec
   3794c:	b	37a54 <flatcc_json_parser_union_type@@Base+0x558>
   37950:	b	37954 <flatcc_json_parser_union_type@@Base+0x458>
   37954:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37958:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3795c:	cmp	r0, r1
   37960:	movw	r0, #0
   37964:	str	r0, [sp, #20]
   37968:	bne	37990 <flatcc_json_parser_union_type@@Base+0x494>
   3796c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37970:	add	r1, r0, #4
   37974:	str	r1, [fp, #-40]	; 0xffffffd8
   37978:	ldr	r0, [r0, #4]
   3797c:	movw	r1, #0
   37980:	cmp	r0, r1
   37984:	movw	r0, #0
   37988:	movne	r0, #1
   3798c:	str	r0, [sp, #20]
   37990:	ldr	r0, [sp, #20]
   37994:	tst	r0, #1
   37998:	bne	378ec <flatcc_json_parser_union_type@@Base+0x3f0>
   3799c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   379a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   379a4:	cmp	r0, r1
   379a8:	bne	379c8 <flatcc_json_parser_union_type@@Base+0x4cc>
   379ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   379b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   379b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   379b8:	movw	r3, #23
   379bc:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   379c0:	str	r0, [fp, #-20]	; 0xffffffec
   379c4:	b	37a54 <flatcc_json_parser_union_type@@Base+0x558>
   379c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   379cc:	mov	r1, r0
   379d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   379d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   379d8:	ldr	ip, [sp, #36]	; 0x24
   379dc:	ldr	lr, [sp, #40]	; 0x28
   379e0:	ldr	r4, [sp, #44]	; 0x2c
   379e4:	mov	r5, sp
   379e8:	sub	r6, fp, #45	; 0x2d
   379ec:	str	r6, [r5, #8]
   379f0:	str	r4, [r5, #4]
   379f4:	str	lr, [r5]
   379f8:	str	r0, [sp, #16]
   379fc:	mov	r0, r2
   37a00:	str	r1, [sp, #12]
   37a04:	mov	r1, r3
   37a08:	ldr	r2, [sp, #16]
   37a0c:	mov	r3, ip
   37a10:	bl	397b0 <flatcc_json_parser_struct_as_root@@Base+0x122c>
   37a14:	ldr	r1, [sp, #12]
   37a18:	cmp	r1, r0
   37a1c:	bne	37a2c <flatcc_json_parser_union_type@@Base+0x530>
   37a20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37a24:	str	r0, [fp, #-20]	; 0xffffffec
   37a28:	b	37a54 <flatcc_json_parser_union_type@@Base+0x558>
   37a2c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   37a30:	ldr	r1, [fp, #8]
   37a34:	ldrb	r2, [r1]
   37a38:	add	r0, r2, r0
   37a3c:	strb	r0, [r1]
   37a40:	ldr	r0, [sp, #32]
   37a44:	cmp	r0, #0
   37a48:	bne	378e4 <flatcc_json_parser_union_type@@Base+0x3e8>
   37a4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37a50:	str	r0, [fp, #-20]	; 0xffffffec
   37a54:	ldr	r0, [fp, #-20]	; 0xffffffec
   37a58:	sub	sp, fp, #16
   37a5c:	pop	{r4, r5, r6, sl, fp, pc}

00037a60 <flatcc_json_parser_union_vector@@Base>:
   37a60:	push	{r4, sl, fp, lr}
   37a64:	add	fp, sp, #8
   37a68:	sub	sp, sp, #56	; 0x38
   37a6c:	ldr	ip, [fp, #16]
   37a70:	ldr	lr, [fp, #12]
   37a74:	ldr	r4, [fp, #8]
   37a78:	str	r0, [fp, #-16]
   37a7c:	str	r1, [fp, #-20]	; 0xffffffec
   37a80:	str	r2, [fp, #-24]	; 0xffffffe8
   37a84:	str	r3, [fp, #-28]	; 0xffffffe4
   37a88:	strh	r4, [fp, #-30]	; 0xffffffe2
   37a8c:	ldr	r0, [fp, #-16]
   37a90:	ldr	r0, [r0]
   37a94:	ldr	r1, [fp, #12]
   37a98:	str	ip, [sp, #20]
   37a9c:	str	lr, [sp, #16]
   37aa0:	bl	2a4e4 <flatcc_builder_get_user_frame_ptr@@Base>
   37aa4:	str	r0, [sp, #28]
   37aa8:	ldr	r0, [sp, #28]
   37aac:	add	r0, r0, #8
   37ab0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37ab4:	movw	r2, #24
   37ab8:	mul	r1, r1, r2
   37abc:	add	r0, r0, r1
   37ac0:	str	r0, [sp, #24]
   37ac4:	ldr	r0, [sp, #24]
   37ac8:	ldr	r0, [r0]
   37acc:	movw	r1, #0
   37ad0:	cmp	r0, r1
   37ad4:	beq	37af4 <flatcc_json_parser_union_vector@@Base+0x94>
   37ad8:	ldr	r0, [fp, #-16]
   37adc:	ldr	r1, [fp, #-20]	; 0xffffffec
   37ae0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37ae4:	movw	r3, #28
   37ae8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   37aec:	str	r0, [fp, #-12]
   37af0:	b	37bac <flatcc_json_parser_union_vector@@Base+0x14c>
   37af4:	ldr	r0, [sp, #24]
   37af8:	ldrsb	r0, [r0, #12]
   37afc:	cmp	r0, #0
   37b00:	bne	37b54 <flatcc_json_parser_union_vector@@Base+0xf4>
   37b04:	ldr	r0, [sp, #28]
   37b08:	ldr	r1, [r0, #4]
   37b0c:	add	r1, r1, #1
   37b10:	str	r1, [r0, #4]
   37b14:	ldr	r0, [fp, #-16]
   37b18:	ldr	r0, [r0, #16]
   37b1c:	ldr	r1, [sp, #24]
   37b20:	str	r0, [r1, #8]
   37b24:	ldr	r0, [fp, #-16]
   37b28:	ldr	r0, [r0, #4]
   37b2c:	ldr	r1, [sp, #24]
   37b30:	str	r0, [r1, #4]
   37b34:	ldr	r0, [fp, #-16]
   37b38:	ldr	r1, [fp, #-20]	; 0xffffffec
   37b3c:	ldr	r2, [sp, #24]
   37b40:	str	r1, [r2]
   37b44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37b48:	bl	35304 <flatcc_json_parser_generic_json@@Base>
   37b4c:	str	r0, [fp, #-20]	; 0xffffffec
   37b50:	b	37ba4 <flatcc_json_parser_union_vector@@Base+0x144>
   37b54:	ldr	r0, [sp, #28]
   37b58:	ldr	r1, [r0, #4]
   37b5c:	mvn	r2, #0
   37b60:	add	r1, r1, r2
   37b64:	str	r1, [r0, #4]
   37b68:	ldr	r0, [fp, #-16]
   37b6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37b70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37b74:	ldr	r3, [sp, #24]
   37b78:	ldr	r3, [r3, #20]
   37b7c:	ldr	ip, [sp, #24]
   37b80:	ldr	ip, [ip, #16]
   37b84:	ldrh	lr, [fp, #-30]	; 0xffffffe2
   37b88:	ldr	r4, [fp, #16]
   37b8c:	str	ip, [sp]
   37b90:	uxth	ip, lr
   37b94:	str	ip, [sp, #4]
   37b98:	str	r4, [sp, #8]
   37b9c:	bl	37bb8 <flatcc_json_parser_union_vector@@Base+0x158>
   37ba0:	str	r0, [fp, #-20]	; 0xffffffec
   37ba4:	ldr	r0, [fp, #-20]	; 0xffffffec
   37ba8:	str	r0, [fp, #-12]
   37bac:	ldr	r0, [fp, #-12]
   37bb0:	sub	sp, fp, #8
   37bb4:	pop	{r4, sl, fp, pc}
   37bb8:	push	{r4, sl, fp, lr}
   37bbc:	add	fp, sp, #8
   37bc0:	sub	sp, sp, #64	; 0x40
   37bc4:	ldr	ip, [fp, #16]
   37bc8:	ldr	lr, [fp, #12]
   37bcc:	ldr	r4, [fp, #8]
   37bd0:	str	r0, [fp, #-16]
   37bd4:	str	r1, [fp, #-20]	; 0xffffffec
   37bd8:	str	r2, [fp, #-24]	; 0xffffffe8
   37bdc:	str	r3, [fp, #-28]	; 0xffffffe4
   37be0:	strh	lr, [fp, #-30]	; 0xffffffe2
   37be4:	movw	r0, #0
   37be8:	str	r0, [sp, #36]	; 0x24
   37bec:	ldr	r0, [fp, #-16]
   37bf0:	ldr	r0, [r0]
   37bf4:	str	ip, [sp, #16]
   37bf8:	str	r4, [sp, #12]
   37bfc:	bl	2c284 <flatcc_builder_start_offset_vector@@Base>
   37c00:	cmp	r0, #0
   37c04:	beq	37c0c <flatcc_json_parser_union_vector@@Base+0x1ac>
   37c08:	b	37dcc <flatcc_json_parser_union_vector@@Base+0x36c>
   37c0c:	ldr	r0, [fp, #-16]
   37c10:	ldr	r1, [fp, #-20]	; 0xffffffec
   37c14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37c18:	add	r3, sp, #24
   37c1c:	bl	38280 <flatcc_json_parser_union_type_vector@@Base+0x490>
   37c20:	str	r0, [fp, #-20]	; 0xffffffec
   37c24:	movw	r0, #0
   37c28:	str	r0, [sp, #20]
   37c2c:	ldr	r0, [sp, #24]
   37c30:	cmp	r0, #0
   37c34:	beq	37d30 <flatcc_json_parser_union_vector@@Base+0x2d0>
   37c38:	ldr	r0, [sp, #20]
   37c3c:	ldr	r1, [fp, #8]
   37c40:	cmp	r0, r1
   37c44:	bne	37c64 <flatcc_json_parser_union_vector@@Base+0x204>
   37c48:	ldr	r0, [fp, #-16]
   37c4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37c50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37c54:	movw	r3, #30
   37c58:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   37c5c:	str	r0, [fp, #-12]
   37c60:	b	37de4 <flatcc_json_parser_union_vector@@Base+0x384>
   37c64:	ldr	r0, [fp, #-16]
   37c68:	ldr	r0, [r0]
   37c6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37c70:	bl	2a4e4 <flatcc_builder_get_user_frame_ptr@@Base>
   37c74:	str	r0, [sp, #28]
   37c78:	ldr	r0, [fp, #16]
   37c7c:	ldr	r1, [fp, #-16]
   37c80:	ldr	r2, [fp, #-20]	; 0xffffffec
   37c84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37c88:	ldr	ip, [sp, #28]
   37c8c:	ldr	lr, [sp, #20]
   37c90:	add	ip, ip, lr
   37c94:	str	r0, [sp, #8]
   37c98:	mov	r0, r1
   37c9c:	mov	r1, r2
   37ca0:	mov	r2, r3
   37ca4:	ldrb	r3, [ip]
   37ca8:	add	ip, sp, #36	; 0x24
   37cac:	str	ip, [sp]
   37cb0:	ldr	ip, [sp, #8]
   37cb4:	blx	ip
   37cb8:	str	r0, [fp, #-20]	; 0xffffffec
   37cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   37cc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37cc4:	cmp	r0, r1
   37cc8:	bne	37cd8 <flatcc_json_parser_union_vector@@Base+0x278>
   37ccc:	ldr	r0, [fp, #-20]	; 0xffffffec
   37cd0:	str	r0, [fp, #-12]
   37cd4:	b	37de4 <flatcc_json_parser_union_vector@@Base+0x384>
   37cd8:	ldr	r0, [fp, #-16]
   37cdc:	ldr	r0, [r0]
   37ce0:	movw	r1, #1
   37ce4:	bl	2ba18 <flatcc_builder_extend_offset_vector@@Base>
   37ce8:	str	r0, [sp, #32]
   37cec:	movw	r1, #0
   37cf0:	cmp	r0, r1
   37cf4:	bne	37cfc <flatcc_json_parser_union_vector@@Base+0x29c>
   37cf8:	b	37dcc <flatcc_json_parser_union_vector@@Base+0x36c>
   37cfc:	ldr	r0, [sp, #36]	; 0x24
   37d00:	ldr	r1, [sp, #32]
   37d04:	str	r0, [r1]
   37d08:	ldr	r0, [fp, #-16]
   37d0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37d10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37d14:	add	r3, sp, #24
   37d18:	bl	362e4 <flatcc_json_parser_float@@Base+0x824>
   37d1c:	str	r0, [fp, #-20]	; 0xffffffec
   37d20:	ldr	r0, [sp, #20]
   37d24:	add	r0, r0, #1
   37d28:	str	r0, [sp, #20]
   37d2c:	b	37c2c <flatcc_json_parser_union_vector@@Base+0x1cc>
   37d30:	ldr	r0, [sp, #20]
   37d34:	ldr	r1, [fp, #8]
   37d38:	cmp	r0, r1
   37d3c:	beq	37d5c <flatcc_json_parser_union_vector@@Base+0x2fc>
   37d40:	ldr	r0, [fp, #-16]
   37d44:	ldr	r1, [fp, #-20]	; 0xffffffec
   37d48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37d4c:	movw	r3, #30
   37d50:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   37d54:	str	r0, [fp, #-12]
   37d58:	b	37de4 <flatcc_json_parser_union_vector@@Base+0x384>
   37d5c:	ldr	r0, [fp, #-16]
   37d60:	ldr	r0, [r0]
   37d64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37d68:	bl	2a4e4 <flatcc_builder_get_user_frame_ptr@@Base>
   37d6c:	str	r0, [sp, #28]
   37d70:	ldr	r0, [fp, #-16]
   37d74:	ldr	r0, [r0]
   37d78:	ldr	r1, [sp, #28]
   37d7c:	bl	2dab8 <flatcc_builder_end_offset_vector_for_unions@@Base>
   37d80:	str	r0, [sp, #36]	; 0x24
   37d84:	cmp	r0, #0
   37d88:	bne	37d90 <flatcc_json_parser_union_vector@@Base+0x330>
   37d8c:	b	37dcc <flatcc_json_parser_union_vector@@Base+0x36c>
   37d90:	ldr	r0, [fp, #-16]
   37d94:	ldr	r0, [r0]
   37d98:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   37d9c:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   37da0:	str	r0, [sp, #32]
   37da4:	movw	r1, #0
   37da8:	cmp	r0, r1
   37dac:	bne	37db4 <flatcc_json_parser_union_vector@@Base+0x354>
   37db0:	b	37dcc <flatcc_json_parser_union_vector@@Base+0x36c>
   37db4:	ldr	r0, [sp, #36]	; 0x24
   37db8:	ldr	r1, [sp, #32]
   37dbc:	str	r0, [r1]
   37dc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   37dc4:	str	r0, [fp, #-12]
   37dc8:	b	37de4 <flatcc_json_parser_union_vector@@Base+0x384>
   37dcc:	ldr	r0, [fp, #-16]
   37dd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   37dd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37dd8:	movw	r3, #33	; 0x21
   37ddc:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   37de0:	str	r0, [fp, #-12]
   37de4:	ldr	r0, [fp, #-12]
   37de8:	sub	sp, fp, #8
   37dec:	pop	{r4, sl, fp, pc}

00037df0 <flatcc_json_parser_union_type_vector@@Base>:
   37df0:	push	{r4, r5, r6, sl, fp, lr}
   37df4:	add	fp, sp, #16
   37df8:	sub	sp, sp, #128	; 0x80
   37dfc:	ldr	ip, [fp, #24]
   37e00:	ldr	lr, [fp, #20]
   37e04:	ldr	r4, [fp, #16]
   37e08:	ldr	r5, [fp, #12]
   37e0c:	ldr	r6, [fp, #8]
   37e10:	str	r0, [fp, #-24]	; 0xffffffe8
   37e14:	str	r1, [fp, #-28]	; 0xffffffe4
   37e18:	str	r2, [fp, #-32]	; 0xffffffe0
   37e1c:	str	r3, [fp, #-36]	; 0xffffffdc
   37e20:	strh	r6, [fp, #-38]	; 0xffffffda
   37e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37e28:	ldr	r0, [r0]
   37e2c:	ldr	r1, [fp, #12]
   37e30:	str	ip, [sp, #44]	; 0x2c
   37e34:	str	lr, [sp, #40]	; 0x28
   37e38:	str	r4, [sp, #36]	; 0x24
   37e3c:	str	r5, [sp, #32]
   37e40:	bl	2a4e4 <flatcc_builder_get_user_frame_ptr@@Base>
   37e44:	str	r0, [fp, #-44]	; 0xffffffd4
   37e48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37e4c:	add	r0, r0, #8
   37e50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   37e54:	movw	r2, #24
   37e58:	mul	r1, r1, r2
   37e5c:	add	r0, r0, r1
   37e60:	str	r0, [fp, #-48]	; 0xffffffd0
   37e64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37e68:	ldrsb	r0, [r0, #12]
   37e6c:	cmp	r0, #0
   37e70:	beq	37e90 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   37e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37e78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37e7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37e80:	movw	r3, #28
   37e84:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   37e88:	str	r0, [fp, #-20]	; 0xffffffec
   37e8c:	b	38268 <flatcc_json_parser_union_type_vector@@Base+0x478>
   37e90:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37e94:	movw	r1, #1
   37e98:	strb	r1, [r0, #12]
   37e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37ea0:	ldr	r0, [r0]
   37ea4:	movw	r1, #1
   37ea8:	movw	r2, #1
   37eac:	uxth	r2, r2
   37eb0:	mvn	r3, #0
   37eb4:	bl	2c1a4 <flatcc_builder_start_vector@@Base>
   37eb8:	cmp	r0, #0
   37ebc:	beq	37ec4 <flatcc_json_parser_union_type_vector@@Base+0xd4>
   37ec0:	b	38250 <flatcc_json_parser_union_type_vector@@Base+0x460>
   37ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37ec8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37ecc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37ed0:	sub	r3, fp, #64	; 0x40
   37ed4:	bl	38280 <flatcc_json_parser_union_type_vector@@Base+0x490>
   37ed8:	str	r0, [fp, #-28]	; 0xffffffe4
   37edc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   37ee0:	cmp	r0, #0
   37ee4:	beq	38004 <flatcc_json_parser_union_type_vector@@Base+0x214>
   37ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37eec:	ldr	r0, [r0]
   37ef0:	movw	r1, #1
   37ef4:	bl	2b6a8 <flatcc_builder_extend_vector@@Base>
   37ef8:	str	r0, [sp, #72]	; 0x48
   37efc:	movw	r1, #0
   37f00:	cmp	r0, r1
   37f04:	bne	37f0c <flatcc_json_parser_union_type_vector@@Base+0x11c>
   37f08:	b	38250 <flatcc_json_parser_union_type_vector@@Base+0x460>
   37f0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37f14:	str	r1, [fp, #-52]	; 0xffffffcc
   37f18:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37f1c:	sub	r3, fp, #65	; 0x41
   37f20:	bl	377a0 <flatcc_json_parser_union_type@@Base+0x2a4>
   37f24:	str	r0, [fp, #-28]	; 0xffffffe4
   37f28:	ldr	r0, [fp, #-52]	; 0xffffffcc
   37f2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37f30:	cmp	r0, r1
   37f34:	bne	37f84 <flatcc_json_parser_union_type_vector@@Base+0x194>
   37f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37f40:	str	r1, [fp, #-52]	; 0xffffffcc
   37f44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37f48:	ldr	r3, [fp, #16]
   37f4c:	sub	ip, fp, #65	; 0x41
   37f50:	str	ip, [sp]
   37f54:	bl	3787c <flatcc_json_parser_union_type@@Base+0x380>
   37f58:	str	r0, [fp, #-28]	; 0xffffffe4
   37f5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37f60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37f64:	cmp	r0, r1
   37f68:	beq	37f7c <flatcc_json_parser_union_type_vector@@Base+0x18c>
   37f6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37f70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   37f74:	cmp	r0, r1
   37f78:	bne	37f80 <flatcc_json_parser_union_type_vector@@Base+0x190>
   37f7c:	b	38250 <flatcc_json_parser_union_type_vector@@Base+0x460>
   37f80:	b	37f84 <flatcc_json_parser_union_type_vector@@Base+0x194>
   37f84:	ldr	r0, [fp, #24]
   37f88:	ldrb	r1, [fp, #-65]	; 0xffffffbf
   37f8c:	str	r0, [sp, #28]
   37f90:	mov	r0, r1
   37f94:	ldr	r1, [sp, #28]
   37f98:	blx	r1
   37f9c:	cmp	r0, #0
   37fa0:	bne	37fdc <flatcc_json_parser_union_type_vector@@Base+0x1ec>
   37fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37fa8:	ldr	r0, [r0, #8]
   37fac:	and	r0, r0, #1
   37fb0:	cmp	r0, #0
   37fb4:	bne	37fd4 <flatcc_json_parser_union_type_vector@@Base+0x1e4>
   37fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37fbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37fc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37fc4:	movw	r3, #15
   37fc8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   37fcc:	str	r0, [fp, #-20]	; 0xffffffec
   37fd0:	b	38268 <flatcc_json_parser_union_type_vector@@Base+0x478>
   37fd4:	movw	r0, #0
   37fd8:	strb	r0, [fp, #-65]	; 0xffffffbf
   37fdc:	ldr	r0, [sp, #72]	; 0x48
   37fe0:	ldrb	r1, [fp, #-65]	; 0xffffffbf
   37fe4:	bl	38364 <flatcc_json_parser_union_type_vector@@Base+0x574>
   37fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37fec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37ff0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37ff4:	sub	r3, fp, #64	; 0x40
   37ff8:	bl	362e4 <flatcc_json_parser_float@@Base+0x824>
   37ffc:	str	r0, [fp, #-28]	; 0xffffffe4
   38000:	b	37edc <flatcc_json_parser_union_type_vector@@Base+0xec>
   38004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38008:	ldr	r0, [r0]
   3800c:	bl	2d758 <flatcc_builder_vector_count@@Base>
   38010:	str	r0, [sp, #48]	; 0x30
   38014:	ldr	r0, [sp, #48]	; 0x30
   38018:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3801c:	str	r0, [r1, #16]
   38020:	ldr	r0, [sp, #48]	; 0x30
   38024:	mov	r1, r0
   38028:	str	r0, [sp, #56]	; 0x38
   3802c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38030:	ldr	r0, [r0]
   38034:	ldr	r2, [sp, #56]	; 0x38
   38038:	str	r1, [sp, #24]
   3803c:	mov	r1, r2
   38040:	bl	2a2e4 <flatcc_builder_enter_user_frame@@Base>
   38044:	str	r0, [sp, #52]	; 0x34
   38048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3804c:	ldr	r0, [r0]
   38050:	ldr	r1, [sp, #52]	; 0x34
   38054:	bl	2a4e4 <flatcc_builder_get_user_frame_ptr@@Base>
   38058:	str	r0, [sp, #60]	; 0x3c
   3805c:	ldr	r0, [sp, #60]	; 0x3c
   38060:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38064:	ldr	r1, [r1]
   38068:	str	r0, [sp, #20]
   3806c:	mov	r0, r1
   38070:	bl	2d774 <flatcc_builder_vector_edit@@Base>
   38074:	ldr	r2, [sp, #56]	; 0x38
   38078:	ldr	r1, [sp, #20]
   3807c:	str	r0, [sp, #16]
   38080:	mov	r0, r1
   38084:	ldr	r1, [sp, #16]
   38088:	bl	14e30 <memcpy@plt>
   3808c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38090:	ldr	r0, [r0]
   38094:	bl	2d684 <flatcc_builder_end_vector@@Base>
   38098:	str	r0, [sp, #68]	; 0x44
   3809c:	cmp	r0, #0
   380a0:	bne	380a8 <flatcc_json_parser_union_type_vector@@Base+0x2b8>
   380a4:	b	38250 <flatcc_json_parser_union_type_vector@@Base+0x460>
   380a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   380ac:	ldr	r0, [r0]
   380b0:	ldrh	r1, [fp, #-38]	; 0xffffffda
   380b4:	sub	r1, r1, #1
   380b8:	bl	2dd8c <flatcc_builder_table_add_offset@@Base>
   380bc:	str	r0, [sp, #64]	; 0x40
   380c0:	movw	r1, #0
   380c4:	cmp	r0, r1
   380c8:	bne	380d0 <flatcc_json_parser_union_type_vector@@Base+0x2e0>
   380cc:	b	38250 <flatcc_json_parser_union_type_vector@@Base+0x460>
   380d0:	ldr	r0, [sp, #68]	; 0x44
   380d4:	ldr	r1, [sp, #64]	; 0x40
   380d8:	str	r0, [r1]
   380dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   380e0:	ldr	r0, [r0]
   380e4:	ldr	r1, [fp, #12]
   380e8:	bl	2a4e4 <flatcc_builder_get_user_frame_ptr@@Base>
   380ec:	str	r0, [fp, #-44]	; 0xffffffd4
   380f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   380f4:	add	r0, r0, #8
   380f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   380fc:	movw	r2, #24
   38100:	mul	r1, r1, r2
   38104:	add	r0, r0, r1
   38108:	str	r0, [fp, #-48]	; 0xffffffd0
   3810c:	ldr	r0, [sp, #52]	; 0x34
   38110:	ldr	r1, [fp, #-48]	; 0xffffffd0
   38114:	str	r0, [r1, #20]
   38118:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3811c:	ldr	r0, [r0]
   38120:	movw	r1, #0
   38124:	cmp	r0, r1
   38128:	bne	38148 <flatcc_json_parser_union_type_vector@@Base+0x358>
   3812c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38130:	ldr	r1, [r0, #4]
   38134:	add	r1, r1, #1
   38138:	str	r1, [r0, #4]
   3813c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38140:	str	r0, [fp, #-20]	; 0xffffffec
   38144:	b	38268 <flatcc_json_parser_union_type_vector@@Base+0x478>
   38148:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3814c:	ldr	r0, [r0, #4]
   38150:	cmp	r0, #0
   38154:	beq	3815c <flatcc_json_parser_union_type_vector@@Base+0x36c>
   38158:	b	3817c <flatcc_json_parser_union_type_vector@@Base+0x38c>
   3815c:	ldr	r0, [pc, #272]	; 38274 <flatcc_json_parser_union_type_vector@@Base+0x484>
   38160:	add	r0, pc, r0
   38164:	ldr	r1, [pc, #268]	; 38278 <flatcc_json_parser_union_type_vector@@Base+0x488>
   38168:	add	r1, pc, r1
   3816c:	ldr	r2, [pc, #264]	; 3827c <flatcc_json_parser_union_type_vector@@Base+0x48c>
   38170:	add	r3, pc, r2
   38174:	movw	r2, #1122	; 0x462
   38178:	bl	14f08 <__assert_fail@plt>
   3817c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38180:	ldr	r1, [r0, #4]
   38184:	mvn	r2, #0
   38188:	add	r1, r1, r2
   3818c:	str	r1, [r0, #4]
   38190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38194:	ldr	r0, [r0, #16]
   38198:	str	r0, [fp, #-56]	; 0xffffffc8
   3819c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   381a0:	ldr	r0, [r0, #4]
   381a4:	str	r0, [fp, #-60]	; 0xffffffc4
   381a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   381ac:	ldr	r0, [r0, #8]
   381b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   381b4:	str	r0, [r1, #16]
   381b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   381bc:	ldr	r0, [r0, #4]
   381c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   381c4:	str	r0, [r1, #4]
   381c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   381cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   381d0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   381d4:	ldr	r2, [r2]
   381d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   381dc:	ldr	ip, [sp, #52]	; 0x34
   381e0:	ldr	lr, [sp, #48]	; 0x30
   381e4:	ldrh	r4, [fp, #-38]	; 0xffffffda
   381e8:	ldr	r5, [fp, #20]
   381ec:	str	r0, [sp, #12]
   381f0:	mov	r0, r1
   381f4:	mov	r1, r2
   381f8:	mov	r2, r3
   381fc:	mov	r3, ip
   38200:	str	lr, [sp]
   38204:	uxth	ip, r4
   38208:	str	ip, [sp, #4]
   3820c:	str	r5, [sp, #8]
   38210:	bl	37bb8 <flatcc_json_parser_union_vector@@Base+0x158>
   38214:	ldr	r1, [sp, #12]
   38218:	cmp	r1, r0
   3821c:	bne	3822c <flatcc_json_parser_union_type_vector@@Base+0x43c>
   38220:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38224:	str	r0, [fp, #-20]	; 0xffffffec
   38228:	b	38268 <flatcc_json_parser_union_type_vector@@Base+0x478>
   3822c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   38230:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38234:	str	r0, [r1, #16]
   38238:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3823c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38240:	str	r0, [r1, #4]
   38244:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38248:	str	r0, [fp, #-20]	; 0xffffffec
   3824c:	b	38268 <flatcc_json_parser_union_type_vector@@Base+0x478>
   38250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38254:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38258:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3825c:	movw	r3, #33	; 0x21
   38260:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   38264:	str	r0, [fp, #-20]	; 0xffffffec
   38268:	ldr	r0, [fp, #-20]	; 0xffffffec
   3826c:	sub	sp, fp, #16
   38270:	pop	{r4, r5, r6, sl, fp, pc}
   38274:	andeq	r4, r1, r4, asr #16
   38278:	andeq	r4, r1, fp, asr #16
   3827c:	andeq	r4, r1, r0, ror r9
   38280:	push	{fp, lr}
   38284:	mov	fp, sp
   38288:	sub	sp, sp, #24
   3828c:	str	r0, [fp, #-8]
   38290:	str	r1, [sp, #12]
   38294:	str	r2, [sp, #8]
   38298:	str	r3, [sp, #4]
   3829c:	ldr	r0, [sp, #12]
   382a0:	ldr	r1, [sp, #8]
   382a4:	cmp	r0, r1
   382a8:	beq	382bc <flatcc_json_parser_union_type_vector@@Base+0x4cc>
   382ac:	ldr	r0, [sp, #12]
   382b0:	ldrb	r0, [r0]
   382b4:	cmp	r0, #91	; 0x5b
   382b8:	beq	382e4 <flatcc_json_parser_union_type_vector@@Base+0x4f4>
   382bc:	ldr	r0, [sp, #4]
   382c0:	movw	r1, #0
   382c4:	str	r1, [r0]
   382c8:	ldr	r0, [fp, #-8]
   382cc:	ldr	r1, [sp, #12]
   382d0:	ldr	r2, [sp, #8]
   382d4:	movw	r3, #22
   382d8:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   382dc:	str	r0, [fp, #-4]
   382e0:	b	38358 <flatcc_json_parser_union_type_vector@@Base+0x568>
   382e4:	ldr	r0, [fp, #-8]
   382e8:	ldr	r1, [sp, #12]
   382ec:	add	r1, r1, #1
   382f0:	ldr	r2, [sp, #8]
   382f4:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   382f8:	str	r0, [sp, #12]
   382fc:	ldr	r0, [sp, #12]
   38300:	ldr	r1, [sp, #8]
   38304:	cmp	r0, r1
   38308:	beq	38344 <flatcc_json_parser_union_type_vector@@Base+0x554>
   3830c:	ldr	r0, [sp, #12]
   38310:	ldrb	r0, [r0]
   38314:	cmp	r0, #93	; 0x5d
   38318:	bne	38344 <flatcc_json_parser_union_type_vector@@Base+0x554>
   3831c:	ldr	r0, [sp, #4]
   38320:	movw	r1, #0
   38324:	str	r1, [r0]
   38328:	ldr	r0, [fp, #-8]
   3832c:	ldr	r1, [sp, #12]
   38330:	add	r1, r1, #1
   38334:	ldr	r2, [sp, #8]
   38338:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   3833c:	str	r0, [fp, #-4]
   38340:	b	38358 <flatcc_json_parser_union_type_vector@@Base+0x568>
   38344:	ldr	r0, [sp, #4]
   38348:	movw	r1, #1
   3834c:	str	r1, [r0]
   38350:	ldr	r0, [sp, #12]
   38354:	str	r0, [fp, #-4]
   38358:	ldr	r0, [fp, #-4]
   3835c:	mov	sp, fp
   38360:	pop	{fp, pc}
   38364:	push	{fp, lr}
   38368:	mov	fp, sp
   3836c:	sub	sp, sp, #8
   38370:	str	r0, [sp, #4]
   38374:	strb	r1, [sp, #3]
   38378:	ldrb	r0, [sp, #3]
   3837c:	bl	398b8 <flatcc_json_parser_struct_as_root@@Base+0x1334>
   38380:	ldr	r1, [sp, #4]
   38384:	strb	r0, [r1]
   38388:	mov	sp, fp
   3838c:	pop	{fp, pc}

00038390 <flatcc_json_parser_table_as_root@@Base>:
   38390:	push	{r4, sl, fp, lr}
   38394:	add	fp, sp, #8
   38398:	sub	sp, sp, #88	; 0x58
   3839c:	ldr	ip, [fp, #16]
   383a0:	ldr	lr, [fp, #12]
   383a4:	ldr	r4, [fp, #8]
   383a8:	str	r0, [fp, #-16]
   383ac:	str	r1, [fp, #-20]	; 0xffffffec
   383b0:	str	r2, [fp, #-24]	; 0xffffffe8
   383b4:	str	r3, [fp, #-28]	; 0xffffffe4
   383b8:	ldr	r0, [fp, #8]
   383bc:	and	r0, r0, #4
   383c0:	cmp	r0, #0
   383c4:	movw	r0, #0
   383c8:	movne	r0, #1
   383cc:	tst	r0, #1
   383d0:	movw	r0, #2
   383d4:	moveq	r0, #0
   383d8:	str	r0, [sp, #16]
   383dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   383e0:	movw	r1, #0
   383e4:	cmp	r0, r1
   383e8:	beq	383f8 <flatcc_json_parser_table_as_root@@Base+0x68>
   383ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   383f0:	str	r0, [sp, #12]
   383f4:	b	38404 <flatcc_json_parser_table_as_root@@Base+0x74>
   383f8:	add	r0, sp, #24
   383fc:	str	r0, [sp, #12]
   38400:	b	38404 <flatcc_json_parser_table_as_root@@Base+0x74>
   38404:	ldr	r0, [sp, #12]
   38408:	str	r0, [fp, #-20]	; 0xffffffec
   3840c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38410:	ldr	r1, [fp, #-16]
   38414:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38418:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3841c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   38420:	add	r3, r3, ip
   38424:	ldr	ip, [fp, #8]
   38428:	str	ip, [sp]
   3842c:	bl	384f0 <flatcc_json_parser_table_as_root@@Base+0x160>
   38430:	ldr	r0, [fp, #-16]
   38434:	ldr	r1, [fp, #12]
   38438:	ldr	r3, [sp, #16]
   3843c:	movw	r2, #0
   38440:	uxth	r2, r2
   38444:	bl	2aef0 <flatcc_builder_start_buffer@@Base>
   38448:	cmp	r0, #0
   3844c:	beq	3845c <flatcc_json_parser_table_as_root@@Base+0xcc>
   38450:	mvn	r0, #0
   38454:	str	r0, [fp, #-12]
   38458:	b	384e4 <flatcc_json_parser_table_as_root@@Base+0x154>
   3845c:	ldr	r0, [fp, #16]
   38460:	ldr	r1, [fp, #-20]	; 0xffffffec
   38464:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3846c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   38470:	add	r3, r3, ip
   38474:	str	r0, [sp, #8]
   38478:	mov	r0, r1
   3847c:	mov	r1, r2
   38480:	mov	r2, r3
   38484:	add	r3, sp, #20
   38488:	ldr	ip, [sp, #8]
   3848c:	blx	ip
   38490:	ldr	r1, [fp, #-20]	; 0xffffffec
   38494:	ldr	r1, [r1, #24]
   38498:	cmp	r1, #0
   3849c:	beq	384b0 <flatcc_json_parser_table_as_root@@Base+0x120>
   384a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   384a4:	ldr	r0, [r0, #24]
   384a8:	str	r0, [fp, #-12]
   384ac:	b	384e4 <flatcc_json_parser_table_as_root@@Base+0x154>
   384b0:	ldr	r0, [fp, #-16]
   384b4:	ldr	r1, [sp, #20]
   384b8:	bl	2b234 <flatcc_builder_end_buffer@@Base>
   384bc:	cmp	r0, #0
   384c0:	bne	384d0 <flatcc_json_parser_table_as_root@@Base+0x140>
   384c4:	mvn	r0, #0
   384c8:	str	r0, [fp, #-12]
   384cc:	b	384e4 <flatcc_json_parser_table_as_root@@Base+0x154>
   384d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   384d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   384d8:	str	r0, [r1, #40]	; 0x28
   384dc:	movw	r0, #0
   384e0:	str	r0, [fp, #-12]
   384e4:	ldr	r0, [fp, #-12]
   384e8:	sub	sp, fp, #8
   384ec:	pop	{r4, sl, fp, pc}
   384f0:	push	{fp, lr}
   384f4:	mov	fp, sp
   384f8:	sub	sp, sp, #24
   384fc:	ldr	ip, [fp, #8]
   38500:	str	r0, [fp, #-4]
   38504:	str	r1, [fp, #-8]
   38508:	str	r2, [sp, #12]
   3850c:	str	r3, [sp, #8]
   38510:	ldr	r0, [fp, #-4]
   38514:	movw	r1, #0
   38518:	and	r1, r1, #255	; 0xff
   3851c:	movw	r2, #44	; 0x2c
   38520:	str	ip, [sp, #4]
   38524:	bl	14ec0 <memset@plt>
   38528:	ldr	r0, [fp, #-8]
   3852c:	ldr	r1, [fp, #-4]
   38530:	str	r0, [r1]
   38534:	ldr	r0, [sp, #12]
   38538:	ldr	r1, [fp, #-4]
   3853c:	str	r0, [r1, #4]
   38540:	ldr	r0, [fp, #-4]
   38544:	movw	r1, #1
   38548:	str	r1, [r0, #16]
   3854c:	ldr	r0, [fp, #8]
   38550:	ldr	r1, [fp, #-4]
   38554:	str	r0, [r1, #8]
   38558:	ldr	r0, [sp, #12]
   3855c:	ldr	r1, [fp, #-4]
   38560:	str	r0, [r1, #28]
   38564:	ldr	r0, [sp, #8]
   38568:	ldr	r1, [fp, #-4]
   3856c:	str	r0, [r1, #32]
   38570:	ldr	r0, [sp, #12]
   38574:	ldr	r1, [fp, #-4]
   38578:	str	r0, [r1, #36]	; 0x24
   3857c:	mov	sp, fp
   38580:	pop	{fp, pc}

00038584 <flatcc_json_parser_struct_as_root@@Base>:
   38584:	push	{r4, sl, fp, lr}
   38588:	add	fp, sp, #8
   3858c:	sub	sp, sp, #88	; 0x58
   38590:	ldr	ip, [fp, #16]
   38594:	ldr	lr, [fp, #12]
   38598:	ldr	r4, [fp, #8]
   3859c:	str	r0, [fp, #-16]
   385a0:	str	r1, [fp, #-20]	; 0xffffffec
   385a4:	str	r2, [fp, #-24]	; 0xffffffe8
   385a8:	str	r3, [fp, #-28]	; 0xffffffe4
   385ac:	ldr	r0, [fp, #8]
   385b0:	and	r0, r0, #4
   385b4:	cmp	r0, #0
   385b8:	movw	r0, #0
   385bc:	movne	r0, #1
   385c0:	tst	r0, #1
   385c4:	movw	r0, #2
   385c8:	moveq	r0, #0
   385cc:	str	r0, [sp, #16]
   385d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   385d4:	movw	r1, #0
   385d8:	cmp	r0, r1
   385dc:	beq	385ec <flatcc_json_parser_struct_as_root@@Base+0x68>
   385e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   385e4:	str	r0, [sp, #12]
   385e8:	b	385f8 <flatcc_json_parser_struct_as_root@@Base+0x74>
   385ec:	add	r0, sp, #24
   385f0:	str	r0, [sp, #12]
   385f4:	b	385f8 <flatcc_json_parser_struct_as_root@@Base+0x74>
   385f8:	ldr	r0, [sp, #12]
   385fc:	str	r0, [fp, #-20]	; 0xffffffec
   38600:	ldr	r0, [fp, #-20]	; 0xffffffec
   38604:	ldr	r1, [fp, #-16]
   38608:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3860c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38610:	ldr	ip, [fp, #-28]	; 0xffffffe4
   38614:	add	r3, r3, ip
   38618:	ldr	ip, [fp, #8]
   3861c:	str	ip, [sp]
   38620:	bl	384f0 <flatcc_json_parser_table_as_root@@Base+0x160>
   38624:	ldr	r0, [fp, #-16]
   38628:	ldr	r1, [fp, #12]
   3862c:	ldr	r3, [sp, #16]
   38630:	movw	r2, #0
   38634:	uxth	r2, r2
   38638:	bl	2aef0 <flatcc_builder_start_buffer@@Base>
   3863c:	cmp	r0, #0
   38640:	beq	38650 <flatcc_json_parser_struct_as_root@@Base+0xcc>
   38644:	mvn	r0, #0
   38648:	str	r0, [fp, #-12]
   3864c:	b	386d8 <flatcc_json_parser_struct_as_root@@Base+0x154>
   38650:	ldr	r0, [fp, #16]
   38654:	ldr	r1, [fp, #-20]	; 0xffffffec
   38658:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3865c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38660:	ldr	ip, [fp, #-28]	; 0xffffffe4
   38664:	add	r3, r3, ip
   38668:	str	r0, [sp, #8]
   3866c:	mov	r0, r1
   38670:	mov	r1, r2
   38674:	mov	r2, r3
   38678:	add	r3, sp, #20
   3867c:	ldr	ip, [sp, #8]
   38680:	blx	ip
   38684:	ldr	r1, [fp, #-20]	; 0xffffffec
   38688:	ldr	r1, [r1, #24]
   3868c:	cmp	r1, #0
   38690:	beq	386a4 <flatcc_json_parser_struct_as_root@@Base+0x120>
   38694:	ldr	r0, [fp, #-20]	; 0xffffffec
   38698:	ldr	r0, [r0, #24]
   3869c:	str	r0, [fp, #-12]
   386a0:	b	386d8 <flatcc_json_parser_struct_as_root@@Base+0x154>
   386a4:	ldr	r0, [fp, #-16]
   386a8:	ldr	r1, [sp, #20]
   386ac:	bl	2b234 <flatcc_builder_end_buffer@@Base>
   386b0:	cmp	r0, #0
   386b4:	bne	386c4 <flatcc_json_parser_struct_as_root@@Base+0x140>
   386b8:	mvn	r0, #0
   386bc:	str	r0, [fp, #-12]
   386c0:	b	386d8 <flatcc_json_parser_struct_as_root@@Base+0x154>
   386c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   386c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   386cc:	str	r0, [r1, #40]	; 0x28
   386d0:	movw	r0, #0
   386d4:	str	r0, [fp, #-12]
   386d8:	ldr	r0, [fp, #-12]
   386dc:	sub	sp, fp, #8
   386e0:	pop	{r4, sl, fp, pc}
   386e4:	sub	sp, sp, #16
   386e8:	str	r0, [sp, #8]
   386ec:	str	r1, [sp, #12]
   386f0:	ldr	r0, [sp, #8]
   386f4:	ldr	r1, [sp, #12]
   386f8:	str	r1, [sp, #4]
   386fc:	str	r0, [sp]
   38700:	vldr	d0, [sp]
   38704:	add	sp, sp, #16
   38708:	bx	lr
   3870c:	nop	{0}
   38710:	push	{r4, r5, r6, r7, fp, lr}
   38714:	add	fp, sp, #16
   38718:	sub	sp, sp, #136	; 0x88
   3871c:	vldr	d16, [pc, #884]	; 38a98 <flatcc_json_parser_struct_as_root@@Base+0x514>
   38720:	str	r0, [fp, #-24]	; 0xffffffe8
   38724:	str	r1, [fp, #-28]	; 0xffffffe4
   38728:	str	r2, [fp, #-32]	; 0xffffffe0
   3872c:	mov	r0, #0
   38730:	str	r0, [fp, #-48]	; 0xffffffd0
   38734:	str	r0, [fp, #-52]	; 0xffffffcc
   38738:	str	r0, [fp, #-60]	; 0xffffffc4
   3873c:	str	r0, [fp, #-64]	; 0xffffffc0
   38740:	movw	r0, #0
   38744:	str	r0, [fp, #-68]	; 0xffffffbc
   38748:	str	r0, [fp, #-72]	; 0xffffffb8
   3874c:	str	r0, [sp, #76]	; 0x4c
   38750:	str	r0, [sp, #72]	; 0x48
   38754:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38758:	vstr	d16, [r0]
   3875c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38760:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38764:	add	r0, r0, r1
   38768:	add	r0, r0, #1
   3876c:	str	r0, [fp, #-44]	; 0xffffffd4
   38770:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38774:	cmp	r0, #1000	; 0x3e8
   38778:	ble	3878c <flatcc_json_parser_struct_as_root@@Base+0x208>
   3877c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38780:	add	r0, r0, #1000	; 0x3e8
   38784:	add	r0, r0, #1
   38788:	str	r0, [fp, #-44]	; 0xffffffd4
   3878c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38790:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38794:	cmp	r0, r1
   38798:	bne	387a8 <flatcc_json_parser_struct_as_root@@Base+0x224>
   3879c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   387a0:	str	r0, [fp, #-20]	; 0xffffffec
   387a4:	b	3905c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   387a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   387ac:	str	r0, [fp, #-36]	; 0xffffffdc
   387b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   387b4:	ldrb	r0, [r0]
   387b8:	cmp	r0, #45	; 0x2d
   387bc:	bne	387f4 <flatcc_json_parser_struct_as_root@@Base+0x270>
   387c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   387c4:	add	r0, r0, #1
   387c8:	str	r0, [fp, #-24]	; 0xffffffe8
   387cc:	movw	r0, #1
   387d0:	str	r0, [fp, #-48]	; 0xffffffd0
   387d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   387d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   387dc:	cmp	r0, r1
   387e0:	bne	387f0 <flatcc_json_parser_struct_as_root@@Base+0x26c>
   387e4:	movw	r0, #0
   387e8:	str	r0, [fp, #-20]	; 0xffffffec
   387ec:	b	3905c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   387f0:	b	387f4 <flatcc_json_parser_struct_as_root@@Base+0x270>
   387f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   387f8:	ldrb	r0, [r0]
   387fc:	cmp	r0, #48	; 0x30
   38800:	bne	388c8 <flatcc_json_parser_struct_as_root@@Base+0x344>
   38804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38808:	add	r0, r0, #1
   3880c:	str	r0, [fp, #-24]	; 0xffffffe8
   38810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38814:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38818:	cmp	r0, r1
   3881c:	beq	38874 <flatcc_json_parser_struct_as_root@@Base+0x2f0>
   38820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38824:	ldrb	r0, [r0]
   38828:	orr	r0, r0, #32
   3882c:	cmp	r0, #120	; 0x78
   38830:	bne	38874 <flatcc_json_parser_struct_as_root@@Base+0x2f0>
   38834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38838:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3883c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   38840:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38844:	bl	39068 <flatcc_json_parser_struct_as_root@@Base+0xae4>
   38848:	str	r0, [fp, #-40]	; 0xffffffd8
   3884c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38850:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38854:	cmp	r0, r1
   38858:	bne	38868 <flatcc_json_parser_struct_as_root@@Base+0x2e4>
   3885c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38860:	str	r0, [fp, #-20]	; 0xffffffec
   38864:	b	3905c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   38868:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3886c:	str	r0, [fp, #-20]	; 0xffffffec
   38870:	b	3905c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   38874:	b	38878 <flatcc_json_parser_struct_as_root@@Base+0x2f4>
   38878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3887c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38880:	cmp	r0, r1
   38884:	movw	r0, #0
   38888:	str	r0, [sp, #68]	; 0x44
   3888c:	beq	388a8 <flatcc_json_parser_struct_as_root@@Base+0x324>
   38890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38894:	ldrb	r0, [r0]
   38898:	cmp	r0, #48	; 0x30
   3889c:	movw	r0, #0
   388a0:	moveq	r0, #1
   388a4:	str	r0, [sp, #68]	; 0x44
   388a8:	ldr	r0, [sp, #68]	; 0x44
   388ac:	tst	r0, #1
   388b0:	beq	388c4 <flatcc_json_parser_struct_as_root@@Base+0x340>
   388b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   388b8:	add	r0, r0, #1
   388bc:	str	r0, [fp, #-24]	; 0xffffffe8
   388c0:	b	38878 <flatcc_json_parser_struct_as_root@@Base+0x2f4>
   388c4:	b	38934 <flatcc_json_parser_struct_as_root@@Base+0x3b0>
   388c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   388cc:	ldrb	r0, [r0]
   388d0:	cmp	r0, #49	; 0x31
   388d4:	blt	388e8 <flatcc_json_parser_struct_as_root@@Base+0x364>
   388d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   388dc:	ldrb	r0, [r0]
   388e0:	cmp	r0, #57	; 0x39
   388e4:	ble	38914 <flatcc_json_parser_struct_as_root@@Base+0x390>
   388e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   388ec:	cmp	r0, #0
   388f0:	beq	38900 <flatcc_json_parser_struct_as_root@@Base+0x37c>
   388f4:	movw	r0, #0
   388f8:	str	r0, [sp, #64]	; 0x40
   388fc:	b	38908 <flatcc_json_parser_struct_as_root@@Base+0x384>
   38900:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38904:	str	r0, [sp, #64]	; 0x40
   38908:	ldr	r0, [sp, #64]	; 0x40
   3890c:	str	r0, [fp, #-20]	; 0xffffffec
   38910:	b	3905c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   38914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38918:	add	r1, r0, #1
   3891c:	str	r1, [fp, #-24]	; 0xffffffe8
   38920:	ldrb	r0, [r0]
   38924:	sub	r0, r0, #48	; 0x30
   38928:	asr	r1, r0, #31
   3892c:	str	r0, [fp, #-64]	; 0xffffffc0
   38930:	str	r1, [fp, #-60]	; 0xffffffc4
   38934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38938:	str	r0, [fp, #-40]	; 0xffffffd8
   3893c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38940:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38944:	cmp	r0, r1
   38948:	movw	r0, #0
   3894c:	str	r0, [sp, #60]	; 0x3c
   38950:	beq	38984 <flatcc_json_parser_struct_as_root@@Base+0x400>
   38954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38958:	ldrb	r0, [r0]
   3895c:	cmp	r0, #48	; 0x30
   38960:	movw	r0, #0
   38964:	str	r0, [sp, #60]	; 0x3c
   38968:	blt	38984 <flatcc_json_parser_struct_as_root@@Base+0x400>
   3896c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38970:	ldrb	r0, [r0]
   38974:	cmp	r0, #57	; 0x39
   38978:	movw	r0, #0
   3897c:	movle	r0, #1
   38980:	str	r0, [sp, #60]	; 0x3c
   38984:	ldr	r0, [sp, #60]	; 0x3c
   38988:	tst	r0, #1
   3898c:	beq	38a30 <flatcc_json_parser_struct_as_root@@Base+0x4ac>
   38990:	ldr	r0, [fp, #-64]	; 0xffffffc0
   38994:	ldr	r1, [fp, #-60]	; 0xffffffc4
   38998:	movw	r2, #39321	; 0x9999
   3899c:	movt	r2, #39321	; 0x9999
   389a0:	subs	r0, r0, r2
   389a4:	movw	r2, #39321	; 0x9999
   389a8:	movt	r2, #6553	; 0x1999
   389ac:	sbcs	r1, r1, r2
   389b0:	bcc	389f4 <flatcc_json_parser_struct_as_root@@Base+0x470>
   389b4:	b	389b8 <flatcc_json_parser_struct_as_root@@Base+0x434>
   389b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   389bc:	ldrb	r0, [r0]
   389c0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   389c4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   389c8:	adds	r3, r1, #1
   389cc:	adc	ip, r2, #0
   389d0:	cmp	r0, #52	; 0x34
   389d4:	movgt	r1, r3
   389d8:	cmp	r0, #52	; 0x34
   389dc:	movgt	r2, ip
   389e0:	str	r1, [fp, #-64]	; 0xffffffc0
   389e4:	str	r2, [fp, #-60]	; 0xffffffc4
   389e8:	movw	r0, #1
   389ec:	str	r0, [sp, #72]	; 0x48
   389f0:	b	38a30 <flatcc_json_parser_struct_as_root@@Base+0x4ac>
   389f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   389f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   389fc:	add	r1, r1, r1, lsl #2
   38a00:	lsl	r1, r1, #1
   38a04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38a08:	add	r3, r2, #1
   38a0c:	str	r3, [fp, #-24]	; 0xffffffe8
   38a10:	ldrb	r2, [r2]
   38a14:	mov	r3, #10
   38a18:	umlal	r2, r1, r0, r3
   38a1c:	subs	r0, r2, #48	; 0x30
   38a20:	sbc	r1, r1, #0
   38a24:	str	r0, [fp, #-64]	; 0xffffffc0
   38a28:	str	r1, [fp, #-60]	; 0xffffffc4
   38a2c:	b	3893c <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   38a30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38a34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   38a38:	sub	r0, r0, r1
   38a3c:	str	r0, [sp, #76]	; 0x4c
   38a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38a44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38a48:	cmp	r0, r1
   38a4c:	movw	r0, #0
   38a50:	str	r0, [sp, #56]	; 0x38
   38a54:	beq	38a70 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   38a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38a5c:	ldrb	r0, [r0]
   38a60:	cmp	r0, #48	; 0x30
   38a64:	movw	r0, #0
   38a68:	moveq	r0, #1
   38a6c:	str	r0, [sp, #56]	; 0x38
   38a70:	ldr	r0, [sp, #56]	; 0x38
   38a74:	tst	r0, #1
   38a78:	beq	38aa0 <flatcc_json_parser_struct_as_root@@Base+0x51c>
   38a7c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   38a80:	add	r0, r0, #1
   38a84:	str	r0, [fp, #-68]	; 0xffffffbc
   38a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38a8c:	add	r0, r0, #1
   38a90:	str	r0, [fp, #-24]	; 0xffffffe8
   38a94:	b	38a40 <flatcc_json_parser_struct_as_root@@Base+0x4bc>
	...
   38aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38aa4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38aa8:	cmp	r0, r1
   38aac:	beq	38b64 <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   38ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38ab4:	ldrb	r0, [r0]
   38ab8:	cmp	r0, #49	; 0x31
   38abc:	blt	38b64 <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   38ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38ac4:	ldrb	r0, [r0]
   38ac8:	cmp	r0, #57	; 0x39
   38acc:	bgt	38b64 <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   38ad0:	movw	r0, #1
   38ad4:	str	r0, [sp, #72]	; 0x48
   38ad8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   38adc:	add	r0, r0, #1
   38ae0:	str	r0, [fp, #-68]	; 0xffffffbc
   38ae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38ae8:	add	r0, r0, #1
   38aec:	str	r0, [fp, #-24]	; 0xffffffe8
   38af0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38af4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38af8:	cmp	r0, r1
   38afc:	movw	r0, #0
   38b00:	str	r0, [sp, #52]	; 0x34
   38b04:	beq	38b38 <flatcc_json_parser_struct_as_root@@Base+0x5b4>
   38b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38b0c:	ldrb	r0, [r0]
   38b10:	cmp	r0, #48	; 0x30
   38b14:	movw	r0, #0
   38b18:	str	r0, [sp, #52]	; 0x34
   38b1c:	blt	38b38 <flatcc_json_parser_struct_as_root@@Base+0x5b4>
   38b20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38b24:	ldrb	r0, [r0]
   38b28:	cmp	r0, #57	; 0x39
   38b2c:	movw	r0, #0
   38b30:	movle	r0, #1
   38b34:	str	r0, [sp, #52]	; 0x34
   38b38:	ldr	r0, [sp, #52]	; 0x34
   38b3c:	tst	r0, #1
   38b40:	beq	38b60 <flatcc_json_parser_struct_as_root@@Base+0x5dc>
   38b44:	ldr	r0, [fp, #-68]	; 0xffffffbc
   38b48:	add	r0, r0, #1
   38b4c:	str	r0, [fp, #-68]	; 0xffffffbc
   38b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38b54:	add	r0, r0, #1
   38b58:	str	r0, [fp, #-24]	; 0xffffffe8
   38b5c:	b	38af0 <flatcc_json_parser_struct_as_root@@Base+0x56c>
   38b60:	b	38b64 <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   38b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38b68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38b6c:	cmp	r0, r1
   38b70:	beq	38df8 <flatcc_json_parser_struct_as_root@@Base+0x874>
   38b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38b78:	ldrb	r0, [r0]
   38b7c:	cmp	r0, #46	; 0x2e
   38b80:	bne	38df8 <flatcc_json_parser_struct_as_root@@Base+0x874>
   38b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38b88:	add	r0, r0, #1
   38b8c:	str	r0, [fp, #-24]	; 0xffffffe8
   38b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38b94:	str	r0, [fp, #-40]	; 0xffffffd8
   38b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38b9c:	ldrb	r0, [r0]
   38ba0:	cmp	r0, #48	; 0x30
   38ba4:	blt	38bb8 <flatcc_json_parser_struct_as_root@@Base+0x634>
   38ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38bac:	ldrb	r0, [r0]
   38bb0:	cmp	r0, #57	; 0x39
   38bb4:	ble	38bc4 <flatcc_json_parser_struct_as_root@@Base+0x640>
   38bb8:	movw	r0, #0
   38bbc:	str	r0, [fp, #-20]	; 0xffffffec
   38bc0:	b	3905c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   38bc4:	b	38bc8 <flatcc_json_parser_struct_as_root@@Base+0x644>
   38bc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38bcc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38bd0:	cmp	r0, r1
   38bd4:	movw	r0, #0
   38bd8:	str	r0, [sp, #48]	; 0x30
   38bdc:	beq	38c10 <flatcc_json_parser_struct_as_root@@Base+0x68c>
   38be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38be4:	ldrb	r0, [r0]
   38be8:	cmp	r0, #48	; 0x30
   38bec:	movw	r0, #0
   38bf0:	str	r0, [sp, #48]	; 0x30
   38bf4:	blt	38c10 <flatcc_json_parser_struct_as_root@@Base+0x68c>
   38bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38bfc:	ldrb	r0, [r0]
   38c00:	cmp	r0, #57	; 0x39
   38c04:	movw	r0, #0
   38c08:	movle	r0, #1
   38c0c:	str	r0, [sp, #48]	; 0x30
   38c10:	ldr	r0, [sp, #48]	; 0x30
   38c14:	tst	r0, #1
   38c18:	beq	38cd8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   38c1c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   38c20:	ldr	r1, [fp, #-60]	; 0xffffffc4
   38c24:	movw	r2, #39321	; 0x9999
   38c28:	movt	r2, #39321	; 0x9999
   38c2c:	subs	r0, r0, r2
   38c30:	movw	r2, #39321	; 0x9999
   38c34:	movt	r2, #6553	; 0x1999
   38c38:	sbcs	r1, r1, r2
   38c3c:	bcc	38c8c <flatcc_json_parser_struct_as_root@@Base+0x708>
   38c40:	b	38c44 <flatcc_json_parser_struct_as_root@@Base+0x6c0>
   38c44:	ldr	r0, [sp, #72]	; 0x48
   38c48:	cmp	r0, #0
   38c4c:	bne	38c88 <flatcc_json_parser_struct_as_root@@Base+0x704>
   38c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38c54:	ldrb	r0, [r0]
   38c58:	ldr	r1, [fp, #-64]	; 0xffffffc0
   38c5c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   38c60:	adds	r3, r1, #1
   38c64:	adc	ip, r2, #0
   38c68:	cmp	r0, #52	; 0x34
   38c6c:	movgt	r1, r3
   38c70:	cmp	r0, #52	; 0x34
   38c74:	movgt	r2, ip
   38c78:	str	r1, [fp, #-64]	; 0xffffffc0
   38c7c:	str	r2, [fp, #-60]	; 0xffffffc4
   38c80:	movw	r0, #1
   38c84:	str	r0, [sp, #72]	; 0x48
   38c88:	b	38cd8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   38c8c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   38c90:	ldr	r1, [fp, #-60]	; 0xffffffc4
   38c94:	add	r1, r1, r1, lsl #2
   38c98:	lsl	r1, r1, #1
   38c9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38ca0:	add	r3, r2, #1
   38ca4:	str	r3, [fp, #-24]	; 0xffffffe8
   38ca8:	ldrb	r2, [r2]
   38cac:	mov	r3, #10
   38cb0:	umlal	r2, r1, r0, r3
   38cb4:	subs	r0, r2, #48	; 0x30
   38cb8:	sbc	r1, r1, #0
   38cbc:	str	r0, [fp, #-64]	; 0xffffffc0
   38cc0:	str	r1, [fp, #-60]	; 0xffffffc4
   38cc4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   38cc8:	mvn	r1, #0
   38ccc:	add	r0, r0, r1
   38cd0:	str	r0, [fp, #-68]	; 0xffffffbc
   38cd4:	b	38bc8 <flatcc_json_parser_struct_as_root@@Base+0x644>
   38cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38cdc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   38ce0:	sub	r0, r0, r1
   38ce4:	ldr	r1, [sp, #76]	; 0x4c
   38ce8:	add	r0, r1, r0
   38cec:	str	r0, [sp, #76]	; 0x4c
   38cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38cf4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38cf8:	cmp	r0, r1
   38cfc:	movw	r0, #0
   38d00:	str	r0, [sp, #44]	; 0x2c
   38d04:	beq	38d20 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   38d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38d0c:	ldrb	r0, [r0]
   38d10:	cmp	r0, #48	; 0x30
   38d14:	movw	r0, #0
   38d18:	moveq	r0, #1
   38d1c:	str	r0, [sp, #44]	; 0x2c
   38d20:	ldr	r0, [sp, #44]	; 0x2c
   38d24:	tst	r0, #1
   38d28:	beq	38d48 <flatcc_json_parser_struct_as_root@@Base+0x7c4>
   38d2c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   38d30:	add	r0, r0, #1
   38d34:	str	r0, [fp, #-68]	; 0xffffffbc
   38d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38d3c:	add	r0, r0, #1
   38d40:	str	r0, [fp, #-24]	; 0xffffffe8
   38d44:	b	38cf0 <flatcc_json_parser_struct_as_root@@Base+0x76c>
   38d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38d4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38d50:	cmp	r0, r1
   38d54:	beq	38df4 <flatcc_json_parser_struct_as_root@@Base+0x870>
   38d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38d5c:	ldrb	r0, [r0]
   38d60:	cmp	r0, #49	; 0x31
   38d64:	blt	38df4 <flatcc_json_parser_struct_as_root@@Base+0x870>
   38d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38d6c:	ldrb	r0, [r0]
   38d70:	cmp	r0, #57	; 0x39
   38d74:	bgt	38df4 <flatcc_json_parser_struct_as_root@@Base+0x870>
   38d78:	movw	r0, #1
   38d7c:	str	r0, [sp, #72]	; 0x48
   38d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38d84:	add	r0, r0, #1
   38d88:	str	r0, [fp, #-24]	; 0xffffffe8
   38d8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38d90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38d94:	cmp	r0, r1
   38d98:	movw	r0, #0
   38d9c:	str	r0, [sp, #40]	; 0x28
   38da0:	beq	38dd4 <flatcc_json_parser_struct_as_root@@Base+0x850>
   38da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38da8:	ldrb	r0, [r0]
   38dac:	cmp	r0, #48	; 0x30
   38db0:	movw	r0, #0
   38db4:	str	r0, [sp, #40]	; 0x28
   38db8:	blt	38dd4 <flatcc_json_parser_struct_as_root@@Base+0x850>
   38dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38dc0:	ldrb	r0, [r0]
   38dc4:	cmp	r0, #57	; 0x39
   38dc8:	movw	r0, #0
   38dcc:	movle	r0, #1
   38dd0:	str	r0, [sp, #40]	; 0x28
   38dd4:	ldr	r0, [sp, #40]	; 0x28
   38dd8:	tst	r0, #1
   38ddc:	beq	38df0 <flatcc_json_parser_struct_as_root@@Base+0x86c>
   38de0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38de4:	add	r0, r0, #1
   38de8:	str	r0, [fp, #-24]	; 0xffffffe8
   38dec:	b	38d8c <flatcc_json_parser_struct_as_root@@Base+0x808>
   38df0:	b	38df4 <flatcc_json_parser_struct_as_root@@Base+0x870>
   38df4:	b	38df8 <flatcc_json_parser_struct_as_root@@Base+0x874>
   38df8:	ldr	r0, [sp, #76]	; 0x4c
   38dfc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   38e00:	add	r0, r1, r0
   38e04:	str	r0, [fp, #-68]	; 0xffffffbc
   38e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38e0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38e10:	cmp	r0, r1
   38e14:	beq	38fb8 <flatcc_json_parser_struct_as_root@@Base+0xa34>
   38e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38e1c:	ldrb	r0, [r0]
   38e20:	orr	r0, r0, #32
   38e24:	cmp	r0, #101	; 0x65
   38e28:	bne	38fb8 <flatcc_json_parser_struct_as_root@@Base+0xa34>
   38e2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38e30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38e34:	sub	r0, r0, r1
   38e38:	cmp	r0, #2
   38e3c:	bge	38e4c <flatcc_json_parser_struct_as_root@@Base+0x8c8>
   38e40:	movw	r0, #0
   38e44:	str	r0, [fp, #-20]	; 0xffffffec
   38e48:	b	3905c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   38e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38e50:	add	r0, r0, #1
   38e54:	str	r0, [fp, #-24]	; 0xffffffe8
   38e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38e5c:	ldrb	r0, [r0]
   38e60:	cmp	r0, #43	; 0x2b
   38e64:	bne	38e94 <flatcc_json_parser_struct_as_root@@Base+0x910>
   38e68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38e6c:	add	r0, r0, #1
   38e70:	str	r0, [fp, #-24]	; 0xffffffe8
   38e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38e78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38e7c:	cmp	r0, r1
   38e80:	bne	38e90 <flatcc_json_parser_struct_as_root@@Base+0x90c>
   38e84:	movw	r0, #0
   38e88:	str	r0, [fp, #-20]	; 0xffffffec
   38e8c:	b	3905c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   38e90:	b	38edc <flatcc_json_parser_struct_as_root@@Base+0x958>
   38e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38e98:	ldrb	r0, [r0]
   38e9c:	cmp	r0, #45	; 0x2d
   38ea0:	bne	38ed8 <flatcc_json_parser_struct_as_root@@Base+0x954>
   38ea4:	movw	r0, #1
   38ea8:	str	r0, [fp, #-52]	; 0xffffffcc
   38eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38eb0:	add	r0, r0, #1
   38eb4:	str	r0, [fp, #-24]	; 0xffffffe8
   38eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38ebc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38ec0:	cmp	r0, r1
   38ec4:	bne	38ed4 <flatcc_json_parser_struct_as_root@@Base+0x950>
   38ec8:	movw	r0, #0
   38ecc:	str	r0, [fp, #-20]	; 0xffffffec
   38ed0:	b	3905c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   38ed4:	b	38ed8 <flatcc_json_parser_struct_as_root@@Base+0x954>
   38ed8:	b	38edc <flatcc_json_parser_struct_as_root@@Base+0x958>
   38edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38ee0:	ldrb	r0, [r0]
   38ee4:	cmp	r0, #48	; 0x30
   38ee8:	blt	38efc <flatcc_json_parser_struct_as_root@@Base+0x978>
   38eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38ef0:	ldrb	r0, [r0]
   38ef4:	cmp	r0, #57	; 0x39
   38ef8:	ble	38f08 <flatcc_json_parser_struct_as_root@@Base+0x984>
   38efc:	movw	r0, #0
   38f00:	str	r0, [fp, #-20]	; 0xffffffec
   38f04:	b	3905c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   38f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38f0c:	add	r1, r0, #1
   38f10:	str	r1, [fp, #-24]	; 0xffffffe8
   38f14:	ldrb	r0, [r0]
   38f18:	sub	r0, r0, #48	; 0x30
   38f1c:	str	r0, [fp, #-72]	; 0xffffffb8
   38f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38f24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38f28:	cmp	r0, r1
   38f2c:	movw	r0, #0
   38f30:	str	r0, [sp, #36]	; 0x24
   38f34:	beq	38f68 <flatcc_json_parser_struct_as_root@@Base+0x9e4>
   38f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38f3c:	ldrb	r0, [r0]
   38f40:	cmp	r0, #48	; 0x30
   38f44:	movw	r0, #0
   38f48:	str	r0, [sp, #36]	; 0x24
   38f4c:	blt	38f68 <flatcc_json_parser_struct_as_root@@Base+0x9e4>
   38f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38f54:	ldrb	r0, [r0]
   38f58:	cmp	r0, #57	; 0x39
   38f5c:	movw	r0, #0
   38f60:	movle	r0, #1
   38f64:	str	r0, [sp, #36]	; 0x24
   38f68:	ldr	r0, [sp, #36]	; 0x24
   38f6c:	tst	r0, #1
   38f70:	beq	38fb4 <flatcc_json_parser_struct_as_root@@Base+0xa30>
   38f74:	ldr	r0, [fp, #-72]	; 0xffffffb8
   38f78:	movw	r1, #32767	; 0x7fff
   38f7c:	cmp	r0, r1
   38f80:	bgt	38fa4 <flatcc_json_parser_struct_as_root@@Base+0xa20>
   38f84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   38f88:	movw	r1, #10
   38f8c:	mul	r0, r0, r1
   38f90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38f94:	ldrb	r1, [r1]
   38f98:	add	r0, r0, r1
   38f9c:	sub	r0, r0, #48	; 0x30
   38fa0:	str	r0, [fp, #-72]	; 0xffffffb8
   38fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38fa8:	add	r0, r0, #1
   38fac:	str	r0, [fp, #-24]	; 0xffffffe8
   38fb0:	b	38f20 <flatcc_json_parser_struct_as_root@@Base+0x99c>
   38fb4:	b	38fb8 <flatcc_json_parser_struct_as_root@@Base+0xa34>
   38fb8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   38fbc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   38fc0:	cmp	r1, #0
   38fc4:	str	r0, [sp, #32]
   38fc8:	beq	38fe0 <flatcc_json_parser_struct_as_root@@Base+0xa5c>
   38fcc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   38fd0:	movw	r1, #0
   38fd4:	sub	r0, r1, r0
   38fd8:	str	r0, [sp, #28]
   38fdc:	b	38fe8 <flatcc_json_parser_struct_as_root@@Base+0xa64>
   38fe0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   38fe4:	str	r0, [sp, #28]
   38fe8:	ldr	r0, [sp, #28]
   38fec:	ldr	r1, [sp, #32]
   38ff0:	add	r0, r1, r0
   38ff4:	str	r0, [fp, #-68]	; 0xffffffbc
   38ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38ffc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   39000:	cmp	r0, r2
   39004:	bne	39014 <flatcc_json_parser_struct_as_root@@Base+0xa90>
   39008:	movw	r0, #0
   3900c:	str	r0, [fp, #-20]	; 0xffffffec
   39010:	b	3905c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   39014:	ldr	r0, [fp, #-36]	; 0xffffffdc
   39018:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3901c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   39020:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39024:	ldr	ip, [fp, #-60]	; 0xffffffc4
   39028:	ldr	lr, [fp, #-68]	; 0xffffffbc
   3902c:	ldr	r4, [sp, #76]	; 0x4c
   39030:	ldr	r5, [sp, #72]	; 0x48
   39034:	ldr	r6, [fp, #-32]	; 0xffffffe0
   39038:	mov	r7, sp
   3903c:	str	r6, [r7, #20]
   39040:	str	r5, [r7, #16]
   39044:	str	r4, [r7, #12]
   39048:	str	lr, [r7, #8]
   3904c:	str	ip, [r7, #4]
   39050:	str	r3, [r7]
   39054:	bl	390a0 <flatcc_json_parser_struct_as_root@@Base+0xb1c>
   39058:	str	r0, [fp, #-20]	; 0xffffffec
   3905c:	ldr	r0, [fp, #-20]	; 0xffffffec
   39060:	sub	sp, fp, #16
   39064:	pop	{r4, r5, r6, r7, fp, pc}
   39068:	sub	sp, sp, #16
   3906c:	vldr	d16, [pc, #36]	; 39098 <flatcc_json_parser_struct_as_root@@Base+0xb14>
   39070:	str	r0, [sp, #12]
   39074:	str	r1, [sp, #8]
   39078:	str	r2, [sp, #4]
   3907c:	str	r3, [sp]
   39080:	ldr	r0, [sp]
   39084:	vstr	d16, [r0]
   39088:	ldr	r0, [sp, #12]
   3908c:	add	sp, sp, #16
   39090:	bx	lr
   39094:	nop	{0}
	...
   390a0:	push	{r4, r5, r6, sl, fp, lr}
   390a4:	add	fp, sp, #16
   390a8:	sub	sp, sp, #64	; 0x40
   390ac:	ldr	r3, [fp, #12]
   390b0:	ldr	ip, [fp, #8]
   390b4:	ldr	lr, [fp, #28]
   390b8:	ldr	r4, [fp, #24]
   390bc:	ldr	r5, [fp, #20]
   390c0:	ldr	r6, [fp, #16]
   390c4:	str	r0, [fp, #-24]	; 0xffffffe8
   390c8:	str	r1, [fp, #-28]	; 0xffffffe4
   390cc:	str	r2, [fp, #-32]	; 0xffffffe0
   390d0:	str	r3, [sp, #44]	; 0x2c
   390d4:	str	ip, [sp, #40]	; 0x28
   390d8:	movw	r0, #309	; 0x135
   390dc:	str	r0, [sp, #36]	; 0x24
   390e0:	movw	r0, #65212	; 0xfebc
   390e4:	movt	r0, #65535	; 0xffff
   390e8:	str	r0, [sp, #32]
   390ec:	ldr	r0, [sp, #40]	; 0x28
   390f0:	ldr	r1, [sp, #44]	; 0x2c
   390f4:	orr	r0, r0, r1
   390f8:	cmp	r0, #0
   390fc:	beq	39110 <flatcc_json_parser_struct_as_root@@Base+0xb8c>
   39100:	b	39104 <flatcc_json_parser_struct_as_root@@Base+0xb80>
   39104:	ldr	r0, [fp, #16]
   39108:	cmn	r0, #324	; 0x144
   3910c:	bge	39120 <flatcc_json_parser_struct_as_root@@Base+0xb9c>
   39110:	vldr	d16, [pc, #1008]	; 39508 <flatcc_json_parser_struct_as_root@@Base+0xf84>
   39114:	ldr	r0, [fp, #28]
   39118:	vstr	d16, [r0]
   3911c:	b	396d0 <flatcc_json_parser_struct_as_root@@Base+0x114c>
   39120:	ldr	r0, [fp, #16]
   39124:	sub	r0, r0, #1
   39128:	movw	r1, #309	; 0x135
   3912c:	cmp	r0, r1
   39130:	ble	39150 <flatcc_json_parser_struct_as_root@@Base+0xbcc>
   39134:	mov	r0, #0
   39138:	movw	r1, #0
   3913c:	movt	r1, #32752	; 0x7ff0
   39140:	bl	386e4 <flatcc_json_parser_struct_as_root@@Base+0x160>
   39144:	ldr	r0, [fp, #28]
   39148:	vstr	d0, [r0]
   3914c:	b	396d0 <flatcc_json_parser_struct_as_root@@Base+0x114c>
   39150:	ldr	r0, [sp, #44]	; 0x2c
   39154:	mov	r1, #0
   39158:	cmp	r1, r0, lsr #21
   3915c:	bne	39660 <flatcc_json_parser_struct_as_root@@Base+0x10dc>
   39160:	b	39164 <flatcc_json_parser_struct_as_root@@Base+0xbe0>
   39164:	ldr	r0, [fp, #16]
   39168:	cmp	r0, #0
   3916c:	blt	39660 <flatcc_json_parser_struct_as_root@@Base+0x10dc>
   39170:	ldr	r0, [fp, #16]
   39174:	cmp	r0, #22
   39178:	bgt	39660 <flatcc_json_parser_struct_as_root@@Base+0x10dc>
   3917c:	ldr	r0, [sp, #40]	; 0x28
   39180:	ldr	r1, [sp, #44]	; 0x2c
   39184:	bl	46da4 <flatcc_json_printer_clear@@Base+0x2060>
   39188:	str	r0, [sp, #16]
   3918c:	str	r1, [sp, #20]
   39190:	ldr	r0, [fp, #16]
   39194:	ldr	r1, [fp, #20]
   39198:	sub	r0, r0, r1
   3919c:	add	r0, r0, #22
   391a0:	cmp	r0, #44	; 0x2c
   391a4:	str	r0, [sp, #12]
   391a8:	bhi	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   391ac:	add	r0, pc, #8
   391b0:	ldr	r1, [sp, #12]
   391b4:	ldr	r2, [r0, r1, lsl #2]
   391b8:	add	pc, r0, r2
   391bc:	strheq	r0, [r0], -r4
   391c0:	andeq	r0, r0, r8, asr #1
   391c4:	ldrdeq	r0, [r0], -ip
   391c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   391cc:	andeq	r0, r0, r4, lsl #2
   391d0:	andeq	r0, r0, r8, lsl r1
   391d4:	andeq	r0, r0, ip, lsr #2
   391d8:	andeq	r0, r0, r0, asr #2
   391dc:	andeq	r0, r0, r4, asr r1
   391e0:	andeq	r0, r0, r8, ror #2
   391e4:	andeq	r0, r0, ip, ror r1
   391e8:	muleq	r0, r0, r1
   391ec:	andeq	r0, r0, r4, lsr #3
   391f0:			; <UNDEFINED> instruction: 0x000001b8
   391f4:	andeq	r0, r0, ip, asr #3
   391f8:	andeq	r0, r0, r0, ror #3
   391fc:	strdeq	r0, [r0], -r4
   39200:	andeq	r0, r0, r8, lsl #4
   39204:	andeq	r0, r0, ip, lsl r2
   39208:	andeq	r0, r0, r0, lsr r2
   3920c:	andeq	r0, r0, r4, asr #4
   39210:	andeq	r0, r0, r8, asr r2
   39214:	andeq	r0, r0, ip, ror #4
   39218:	andeq	r0, r0, r0, ror r2
   3921c:	andeq	r0, r0, r4, lsl #5
   39220:	muleq	r0, r8, r2
   39224:	andeq	r0, r0, ip, lsr #5
   39228:	andeq	r0, r0, r0, asr #5
   3922c:	ldrdeq	r0, [r0], -r4
   39230:	andeq	r0, r0, r8, ror #5
   39234:	strdeq	r0, [r0], -ip
   39238:	andeq	r0, r0, r0, lsl r3
   3923c:	andeq	r0, r0, r4, lsr #6
   39240:	andeq	r0, r0, r8, lsr r3
   39244:			; <UNDEFINED> instruction: 0x000003bc
   39248:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   3924c:	andeq	r0, r0, r4, ror #7
   39250:	strdeq	r0, [r0], -r8
   39254:	andeq	r0, r0, ip, lsl #8
   39258:	andeq	r0, r0, r0, lsr #8
   3925c:	andeq	r0, r0, r4, lsr r4
   39260:	andeq	r0, r0, r8, asr #8
   39264:	andeq	r0, r0, ip, asr r4
   39268:	andeq	r0, r0, r0, ror r4
   3926c:	andeq	r0, r0, r4, lsl #9
   39270:	vldr	d16, [pc, #664]	; 39510 <flatcc_json_parser_struct_as_root@@Base+0xf8c>
   39274:	vldr	d17, [sp, #16]
   39278:	vdiv.f64	d16, d17, d16
   3927c:	vstr	d16, [sp, #16]
   39280:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39284:	vldr	d16, [pc, #652]	; 39518 <flatcc_json_parser_struct_as_root@@Base+0xf94>
   39288:	vldr	d17, [sp, #16]
   3928c:	vdiv.f64	d16, d17, d16
   39290:	vstr	d16, [sp, #16]
   39294:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39298:	vldr	d16, [pc, #640]	; 39520 <flatcc_json_parser_struct_as_root@@Base+0xf9c>
   3929c:	vldr	d17, [sp, #16]
   392a0:	vdiv.f64	d16, d17, d16
   392a4:	vstr	d16, [sp, #16]
   392a8:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   392ac:	vldr	d16, [pc, #628]	; 39528 <flatcc_json_parser_struct_as_root@@Base+0xfa4>
   392b0:	vldr	d17, [sp, #16]
   392b4:	vdiv.f64	d16, d17, d16
   392b8:	vstr	d16, [sp, #16]
   392bc:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   392c0:	vldr	d16, [pc, #616]	; 39530 <flatcc_json_parser_struct_as_root@@Base+0xfac>
   392c4:	vldr	d17, [sp, #16]
   392c8:	vdiv.f64	d16, d17, d16
   392cc:	vstr	d16, [sp, #16]
   392d0:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   392d4:	vldr	d16, [pc, #604]	; 39538 <flatcc_json_parser_struct_as_root@@Base+0xfb4>
   392d8:	vldr	d17, [sp, #16]
   392dc:	vdiv.f64	d16, d17, d16
   392e0:	vstr	d16, [sp, #16]
   392e4:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   392e8:	vldr	d16, [pc, #592]	; 39540 <flatcc_json_parser_struct_as_root@@Base+0xfbc>
   392ec:	vldr	d17, [sp, #16]
   392f0:	vdiv.f64	d16, d17, d16
   392f4:	vstr	d16, [sp, #16]
   392f8:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   392fc:	vldr	d16, [pc, #580]	; 39548 <flatcc_json_parser_struct_as_root@@Base+0xfc4>
   39300:	vldr	d17, [sp, #16]
   39304:	vdiv.f64	d16, d17, d16
   39308:	vstr	d16, [sp, #16]
   3930c:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39310:	vldr	d16, [pc, #568]	; 39550 <flatcc_json_parser_struct_as_root@@Base+0xfcc>
   39314:	vldr	d17, [sp, #16]
   39318:	vdiv.f64	d16, d17, d16
   3931c:	vstr	d16, [sp, #16]
   39320:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39324:	vldr	d16, [pc, #556]	; 39558 <flatcc_json_parser_struct_as_root@@Base+0xfd4>
   39328:	vldr	d17, [sp, #16]
   3932c:	vdiv.f64	d16, d17, d16
   39330:	vstr	d16, [sp, #16]
   39334:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39338:	vldr	d16, [pc, #544]	; 39560 <flatcc_json_parser_struct_as_root@@Base+0xfdc>
   3933c:	vldr	d17, [sp, #16]
   39340:	vdiv.f64	d16, d17, d16
   39344:	vstr	d16, [sp, #16]
   39348:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3934c:	vldr	d16, [pc, #532]	; 39568 <flatcc_json_parser_struct_as_root@@Base+0xfe4>
   39350:	vldr	d17, [sp, #16]
   39354:	vdiv.f64	d16, d17, d16
   39358:	vstr	d16, [sp, #16]
   3935c:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39360:	vldr	d16, [pc, #520]	; 39570 <flatcc_json_parser_struct_as_root@@Base+0xfec>
   39364:	vldr	d17, [sp, #16]
   39368:	vdiv.f64	d16, d17, d16
   3936c:	vstr	d16, [sp, #16]
   39370:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39374:	vldr	d16, [pc, #1012]	; 39770 <flatcc_json_parser_struct_as_root@@Base+0x11ec>
   39378:	vldr	d17, [sp, #16]
   3937c:	vdiv.f64	d16, d17, d16
   39380:	vstr	d16, [sp, #16]
   39384:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39388:	vldr	d16, [pc, #1000]	; 39778 <flatcc_json_parser_struct_as_root@@Base+0x11f4>
   3938c:	vldr	d17, [sp, #16]
   39390:	vdiv.f64	d16, d17, d16
   39394:	vstr	d16, [sp, #16]
   39398:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3939c:	vldr	d16, [pc, #988]	; 39780 <flatcc_json_parser_struct_as_root@@Base+0x11fc>
   393a0:	vldr	d17, [sp, #16]
   393a4:	vdiv.f64	d16, d17, d16
   393a8:	vstr	d16, [sp, #16]
   393ac:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   393b0:	vldr	d16, [pc, #976]	; 39788 <flatcc_json_parser_struct_as_root@@Base+0x1204>
   393b4:	vldr	d17, [sp, #16]
   393b8:	vdiv.f64	d16, d17, d16
   393bc:	vstr	d16, [sp, #16]
   393c0:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   393c4:	vldr	d16, [pc, #964]	; 39790 <flatcc_json_parser_struct_as_root@@Base+0x120c>
   393c8:	vldr	d17, [sp, #16]
   393cc:	vdiv.f64	d16, d17, d16
   393d0:	vstr	d16, [sp, #16]
   393d4:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   393d8:	vldr	d16, [pc, #952]	; 39798 <flatcc_json_parser_struct_as_root@@Base+0x1214>
   393dc:	vldr	d17, [sp, #16]
   393e0:	vdiv.f64	d16, d17, d16
   393e4:	vstr	d16, [sp, #16]
   393e8:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   393ec:	vldr	d16, [pc, #940]	; 397a0 <flatcc_json_parser_struct_as_root@@Base+0x121c>
   393f0:	vldr	d17, [sp, #16]
   393f4:	vdiv.f64	d16, d17, d16
   393f8:	vstr	d16, [sp, #16]
   393fc:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39400:	vldr	d16, [pc, #928]	; 397a8 <flatcc_json_parser_struct_as_root@@Base+0x1224>
   39404:	vldr	d17, [sp, #16]
   39408:	vdiv.f64	d16, d17, d16
   3940c:	vstr	d16, [sp, #16]
   39410:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39414:	vldr	d16, [sp, #16]
   39418:	vmov.f64	d17, #36	; 0x41200000  10.0
   3941c:	vdiv.f64	d16, d16, d17
   39420:	vstr	d16, [sp, #16]
   39424:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39428:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3942c:	vldr	d16, [sp, #16]
   39430:	vmov.f64	d17, #36	; 0x41200000  10.0
   39434:	vmul.f64	d16, d16, d17
   39438:	vstr	d16, [sp, #16]
   3943c:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39440:	vldr	d16, [pc, #864]	; 397a8 <flatcc_json_parser_struct_as_root@@Base+0x1224>
   39444:	vldr	d17, [sp, #16]
   39448:	vmul.f64	d16, d17, d16
   3944c:	vstr	d16, [sp, #16]
   39450:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39454:	vldr	d16, [pc, #836]	; 397a0 <flatcc_json_parser_struct_as_root@@Base+0x121c>
   39458:	vldr	d17, [sp, #16]
   3945c:	vmul.f64	d16, d17, d16
   39460:	vstr	d16, [sp, #16]
   39464:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39468:	vldr	d16, [pc, #808]	; 39798 <flatcc_json_parser_struct_as_root@@Base+0x1214>
   3946c:	vldr	d17, [sp, #16]
   39470:	vmul.f64	d16, d17, d16
   39474:	vstr	d16, [sp, #16]
   39478:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3947c:	vldr	d16, [pc, #780]	; 39790 <flatcc_json_parser_struct_as_root@@Base+0x120c>
   39480:	vldr	d17, [sp, #16]
   39484:	vmul.f64	d16, d17, d16
   39488:	vstr	d16, [sp, #16]
   3948c:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39490:	vldr	d16, [pc, #752]	; 39788 <flatcc_json_parser_struct_as_root@@Base+0x1204>
   39494:	vldr	d17, [sp, #16]
   39498:	vmul.f64	d16, d17, d16
   3949c:	vstr	d16, [sp, #16]
   394a0:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   394a4:	vldr	d16, [pc, #724]	; 39780 <flatcc_json_parser_struct_as_root@@Base+0x11fc>
   394a8:	vldr	d17, [sp, #16]
   394ac:	vmul.f64	d16, d17, d16
   394b0:	vstr	d16, [sp, #16]
   394b4:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   394b8:	vldr	d16, [pc, #696]	; 39778 <flatcc_json_parser_struct_as_root@@Base+0x11f4>
   394bc:	vldr	d17, [sp, #16]
   394c0:	vmul.f64	d16, d17, d16
   394c4:	vstr	d16, [sp, #16]
   394c8:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   394cc:	vldr	d16, [pc, #668]	; 39770 <flatcc_json_parser_struct_as_root@@Base+0x11ec>
   394d0:	vldr	d17, [sp, #16]
   394d4:	vmul.f64	d16, d17, d16
   394d8:	vstr	d16, [sp, #16]
   394dc:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   394e0:	vldr	d16, [pc, #640]	; 39768 <flatcc_json_parser_struct_as_root@@Base+0x11e4>
   394e4:	vldr	d17, [sp, #16]
   394e8:	vmul.f64	d16, d17, d16
   394ec:	vstr	d16, [sp, #16]
   394f0:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   394f4:	vldr	d16, [pc, #612]	; 39760 <flatcc_json_parser_struct_as_root@@Base+0x11dc>
   394f8:	vldr	d17, [sp, #16]
   394fc:	vmul.f64	d16, d17, d16
   39500:	vstr	d16, [sp, #16]
   39504:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
	...
   39510:			; <UNDEFINED> instruction: 0x064dd592
   39514:	strmi	pc, [r0], #207	; 0xcf
   39518:	usatle	lr, #2, r0, asr #30
   3951c:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   39520:	ldmvc	r5!, {r6, sl, fp, pc}
   39524:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   39528:	addsvs	r3, r1, r0, lsl #26
   3952c:	mvnmi	r5, #228, 16	; 0xe40000
   39530:	strbvs	ip, [lr, -r0, lsl #16]
   39534:			; <UNDEFINED> instruction: 0x43abc16d
   39538:	ldrbhi	sl, [r8]
   3953c:	cmnmi	r6, #1459617792	; 0x57000000
   39540:	strbcc	r8, [r0, r0]!
   39544:	movtmi	ip, #4985	; 0x1379
   39548:	ldrtcs	r0, [r4], -r0
   3954c:	movwmi	r6, #52213	; 0xcbf5
   39550:	cdpne	0, 9, cr0, cr0, cr0, {0}
   39554:	sbcsmi	fp, r6, #196, 24	; 0xc400
   39558:	strb	r0, [r0, #-0]
   3955c:	adcmi	r3, r2, #156	; 0x9c
   39560:	andge	r0, r0, #0
   39564:	rsbmi	r1, sp, #148, 20	; 0x94000
   39568:	stmda	r0, {}	; <UNPREDICTABLE>
   3956c:	eorsmi	r4, r7, #7733248	; 0x760000
   39570:	andcs	r0, r0, r0
   39574:	andmi	sl, r2, #95	; 0x5f
   39578:	vldr	d16, [pc, #472]	; 39758 <flatcc_json_parser_struct_as_root@@Base+0x11d4>
   3957c:	vldr	d17, [sp, #16]
   39580:	vmul.f64	d16, d17, d16
   39584:	vstr	d16, [sp, #16]
   39588:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3958c:	vldr	d16, [pc, #444]	; 39750 <flatcc_json_parser_struct_as_root@@Base+0x11cc>
   39590:	vldr	d17, [sp, #16]
   39594:	vmul.f64	d16, d17, d16
   39598:	vstr	d16, [sp, #16]
   3959c:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   395a0:	vldr	d16, [pc, #416]	; 39748 <flatcc_json_parser_struct_as_root@@Base+0x11c4>
   395a4:	vldr	d17, [sp, #16]
   395a8:	vmul.f64	d16, d17, d16
   395ac:	vstr	d16, [sp, #16]
   395b0:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   395b4:	vldr	d16, [pc, #388]	; 39740 <flatcc_json_parser_struct_as_root@@Base+0x11bc>
   395b8:	vldr	d17, [sp, #16]
   395bc:	vmul.f64	d16, d17, d16
   395c0:	vstr	d16, [sp, #16]
   395c4:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   395c8:	vldr	d16, [pc, #360]	; 39738 <flatcc_json_parser_struct_as_root@@Base+0x11b4>
   395cc:	vldr	d17, [sp, #16]
   395d0:	vmul.f64	d16, d17, d16
   395d4:	vstr	d16, [sp, #16]
   395d8:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   395dc:	vldr	d16, [pc, #332]	; 39730 <flatcc_json_parser_struct_as_root@@Base+0x11ac>
   395e0:	vldr	d17, [sp, #16]
   395e4:	vmul.f64	d16, d17, d16
   395e8:	vstr	d16, [sp, #16]
   395ec:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   395f0:	vldr	d16, [pc, #304]	; 39728 <flatcc_json_parser_struct_as_root@@Base+0x11a4>
   395f4:	vldr	d17, [sp, #16]
   395f8:	vmul.f64	d16, d17, d16
   395fc:	vstr	d16, [sp, #16]
   39600:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39604:	vldr	d16, [pc, #276]	; 39720 <flatcc_json_parser_struct_as_root@@Base+0x119c>
   39608:	vldr	d17, [sp, #16]
   3960c:	vmul.f64	d16, d17, d16
   39610:	vstr	d16, [sp, #16]
   39614:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39618:	vldr	d16, [pc, #248]	; 39718 <flatcc_json_parser_struct_as_root@@Base+0x1194>
   3961c:	vldr	d17, [sp, #16]
   39620:	vmul.f64	d16, d17, d16
   39624:	vstr	d16, [sp, #16]
   39628:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3962c:	vldr	d16, [pc, #220]	; 39710 <flatcc_json_parser_struct_as_root@@Base+0x118c>
   39630:	vldr	d17, [sp, #16]
   39634:	vmul.f64	d16, d17, d16
   39638:	vstr	d16, [sp, #16]
   3963c:	b	39650 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   39640:	vldr	d16, [pc, #192]	; 39708 <flatcc_json_parser_struct_as_root@@Base+0x1184>
   39644:	vldr	d17, [sp, #16]
   39648:	vmul.f64	d16, d17, d16
   3964c:	vstr	d16, [sp, #16]
   39650:	vldr	d16, [sp, #16]
   39654:	ldr	r0, [fp, #28]
   39658:	vstr	d16, [r0]
   3965c:	b	396d0 <flatcc_json_parser_struct_as_root@@Base+0x114c>
   39660:	ldr	r0, [sp, #40]	; 0x28
   39664:	ldr	r1, [sp, #44]	; 0x2c
   39668:	ldr	r2, [fp, #16]
   3966c:	ldr	r3, [fp, #20]
   39670:	ldr	ip, [fp, #24]
   39674:	ldr	lr, [fp, #28]
   39678:	mov	r4, sp
   3967c:	str	lr, [r4, #4]
   39680:	str	ip, [r4]
   39684:	bl	32fd0 <grisu3_diy_fp_encode_double@@Base>
   39688:	cmp	r0, #0
   3968c:	beq	39694 <flatcc_json_parser_struct_as_root@@Base+0x1110>
   39690:	b	396d0 <flatcc_json_parser_struct_as_root@@Base+0x114c>
   39694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39698:	add	r1, sp, #28
   3969c:	bl	14ed8 <strtod@plt>
   396a0:	ldr	r0, [fp, #28]
   396a4:	vstr	d0, [r0]
   396a8:	ldr	r0, [sp, #28]
   396ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   396b0:	cmp	r0, r1
   396b4:	bcs	396c4 <flatcc_json_parser_struct_as_root@@Base+0x1140>
   396b8:	ldr	r0, [sp, #28]
   396bc:	str	r0, [fp, #-20]	; 0xffffffec
   396c0:	b	396f8 <flatcc_json_parser_struct_as_root@@Base+0x1174>
   396c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   396c8:	str	r0, [fp, #-20]	; 0xffffffec
   396cc:	b	396f8 <flatcc_json_parser_struct_as_root@@Base+0x1174>
   396d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   396d4:	cmp	r0, #0
   396d8:	beq	396f0 <flatcc_json_parser_struct_as_root@@Base+0x116c>
   396dc:	ldr	r0, [fp, #28]
   396e0:	vldr	d16, [r0]
   396e4:	vneg.f64	d16, d16
   396e8:	ldr	r0, [fp, #28]
   396ec:	vstr	d16, [r0]
   396f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   396f4:	str	r0, [fp, #-20]	; 0xffffffec
   396f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   396fc:	sub	sp, fp, #16
   39700:	pop	{r4, r5, r6, sl, fp, pc}
   39704:	nop	{0}
   39708:			; <UNDEFINED> instruction: 0x064dd592
   3970c:	strmi	pc, [r0], #207	; 0xcf
   39710:	usatle	lr, #2, r0, asr #30
   39714:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   39718:	ldmvc	r5!, {r6, sl, fp, pc}
   3971c:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   39720:	addsvs	r3, r1, r0, lsl #26
   39724:	mvnmi	r5, #228, 16	; 0xe40000
   39728:	strbvs	ip, [lr, -r0, lsl #16]
   3972c:			; <UNDEFINED> instruction: 0x43abc16d
   39730:	ldrbhi	sl, [r8]
   39734:	cmnmi	r6, #1459617792	; 0x57000000
   39738:	strbcc	r8, [r0, r0]!
   3973c:	movtmi	ip, #4985	; 0x1379
   39740:	ldrtcs	r0, [r4], -r0
   39744:	movwmi	r6, #52213	; 0xcbf5
   39748:	cdpne	0, 9, cr0, cr0, cr0, {0}
   3974c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   39750:	strb	r0, [r0, #-0]
   39754:	adcmi	r3, r2, #156	; 0x9c
   39758:	andge	r0, r0, #0
   3975c:	rsbmi	r1, sp, #148, 20	; 0x94000
   39760:	stmda	r0, {}	; <UNPREDICTABLE>
   39764:	eorsmi	r4, r7, #7733248	; 0x760000
   39768:	andcs	r0, r0, r0
   3976c:	andmi	sl, r2, #95	; 0x5f
   39770:	andeq	r0, r0, r0
   39774:	bicmi	ip, sp, r5, ror #26
   39778:	andeq	r0, r0, r0
   3977c:	orrsmi	sp, r7, r4, lsl #15
   39780:	andeq	r0, r0, r0
   39784:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   39788:	andeq	r0, r0, r0
   3978c:	smlawbmi	lr, r0, r4, r8
   39790:	andeq	r0, r0, r0
   39794:	rscsmi	r6, r8, r0, lsl #20
   39798:	andeq	r0, r0, r0
   3979c:	sbcmi	r8, r3, r0, lsl #16
   397a0:	andeq	r0, r0, r0
   397a4:	addmi	r4, pc, r0
   397a8:	andeq	r0, r0, r0
   397ac:	subsmi	r0, r9, r0
   397b0:	push	{r4, sl, fp, lr}
   397b4:	add	fp, sp, #8
   397b8:	sub	sp, sp, #32
   397bc:	ldr	ip, [fp, #12]
   397c0:	ldr	lr, [fp, #8]
   397c4:	ldr	r4, [fp, #16]
   397c8:	str	r0, [fp, #-16]
   397cc:	str	r1, [sp, #20]
   397d0:	str	r2, [sp, #16]
   397d4:	str	r3, [sp, #12]
   397d8:	str	ip, [sp, #4]
   397dc:	str	lr, [sp]
   397e0:	ldr	r0, [sp, #12]
   397e4:	cmp	r0, #0
   397e8:	beq	39808 <flatcc_json_parser_struct_as_root@@Base+0x1284>
   397ec:	ldr	r0, [fp, #-16]
   397f0:	ldr	r1, [sp, #20]
   397f4:	ldr	r2, [sp, #16]
   397f8:	movw	r3, #8
   397fc:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   39800:	str	r0, [fp, #-12]
   39804:	b	39850 <flatcc_json_parser_struct_as_root@@Base+0x12cc>
   39808:	ldr	r0, [sp]
   3980c:	ldr	r1, [sp, #4]
   39810:	subs	r0, r0, #256	; 0x100
   39814:	sbcs	r1, r1, #0
   39818:	bcc	3983c <flatcc_json_parser_struct_as_root@@Base+0x12b8>
   3981c:	b	39820 <flatcc_json_parser_struct_as_root@@Base+0x129c>
   39820:	ldr	r0, [fp, #-16]
   39824:	ldr	r1, [sp, #20]
   39828:	ldr	r2, [sp, #16]
   3982c:	movw	r3, #7
   39830:	bl	33ed8 <flatcc_json_parser_set_error@@Base>
   39834:	str	r0, [fp, #-12]
   39838:	b	39850 <flatcc_json_parser_struct_as_root@@Base+0x12cc>
   3983c:	ldrb	r0, [sp]
   39840:	ldr	r1, [fp, #16]
   39844:	strb	r0, [r1]
   39848:	ldr	r0, [sp, #20]
   3984c:	str	r0, [fp, #-12]
   39850:	ldr	r0, [fp, #-12]
   39854:	sub	sp, fp, #8
   39858:	pop	{r4, sl, fp, pc}
   3985c:	push	{fp, lr}
   39860:	mov	fp, sp
   39864:	sub	sp, sp, #16
   39868:	str	r0, [fp, #-4]
   3986c:	str	r1, [sp, #8]
   39870:	str	r2, [sp, #4]
   39874:	ldr	r0, [fp, #-4]
   39878:	ldr	r1, [sp, #8]
   3987c:	ldr	r2, [sp, #4]
   39880:	bl	35d14 <flatcc_json_parser_float@@Base+0x254>
   39884:	str	r0, [sp, #8]
   39888:	ldr	r0, [fp, #-4]
   3988c:	ldr	r0, [r0, #12]
   39890:	cmp	r0, #0
   39894:	bne	398ac <flatcc_json_parser_struct_as_root@@Base+0x1328>
   39898:	ldr	r0, [fp, #-4]
   3989c:	ldr	r1, [sp, #8]
   398a0:	ldr	r2, [sp, #4]
   398a4:	bl	34c64 <flatcc_json_parser_skip_constant@@Base+0x104>
   398a8:	str	r0, [sp, #8]
   398ac:	ldr	r0, [sp, #8]
   398b0:	mov	sp, fp
   398b4:	pop	{fp, pc}
   398b8:	sub	sp, sp, #4
   398bc:	strb	r0, [sp, #3]
   398c0:	ldrb	r0, [sp, #3]
   398c4:	add	sp, sp, #4
   398c8:	bx	lr
   398cc:	andeq	r0, r0, r0

000398d0 <flatcc_json_printer_error_string@@Base>:
   398d0:	sub	sp, sp, #12
   398d4:	str	r0, [sp, #4]
   398d8:	ldr	r0, [sp, #4]
   398dc:	cmp	r0, #3
   398e0:	str	r0, [sp]
   398e4:	bhi	39948 <flatcc_json_printer_error_string@@Base+0x78>
   398e8:	add	r0, pc, #8
   398ec:	ldr	r1, [sp]
   398f0:	ldr	r2, [r0, r1, lsl #2]
   398f4:	add	pc, r0, r2
   398f8:	andeq	r0, r0, r0, lsl r0
   398fc:	andeq	r0, r0, r0, lsr #32
   39900:	andeq	r0, r0, r0, lsr r0
   39904:	andeq	r0, r0, r0, asr #32
   39908:	ldr	r0, [pc, #92]	; 3996c <flatcc_json_printer_error_string@@Base+0x9c>
   3990c:	add	r0, pc, r0
   39910:	str	r0, [sp, #8]
   39914:	b	39954 <flatcc_json_printer_error_string@@Base+0x84>
   39918:	ldr	r0, [pc, #72]	; 39968 <flatcc_json_printer_error_string@@Base+0x98>
   3991c:	add	r0, pc, r0
   39920:	str	r0, [sp, #8]
   39924:	b	39954 <flatcc_json_printer_error_string@@Base+0x84>
   39928:	ldr	r0, [pc, #52]	; 39964 <flatcc_json_printer_error_string@@Base+0x94>
   3992c:	add	r0, pc, r0
   39930:	str	r0, [sp, #8]
   39934:	b	39954 <flatcc_json_printer_error_string@@Base+0x84>
   39938:	ldr	r0, [pc, #32]	; 39960 <flatcc_json_printer_error_string@@Base+0x90>
   3993c:	add	r0, pc, r0
   39940:	str	r0, [sp, #8]
   39944:	b	39954 <flatcc_json_printer_error_string@@Base+0x84>
   39948:	ldr	r0, [pc, #32]	; 39970 <flatcc_json_printer_error_string@@Base+0xa0>
   3994c:	add	r0, pc, r0
   39950:	str	r0, [sp, #8]
   39954:	ldr	r0, [sp, #8]
   39958:	add	sp, sp, #12
   3995c:	bx	lr
   39960:	andeq	r2, r1, r3, ror #20
   39964:	andeq	r3, r1, r9, lsl #27
   39968:	andeq	r3, r1, pc, lsl #27
   3996c:	andeq	r2, r1, r6, asr #18
   39970:	andeq	r2, r1, r1, lsr sp

00039974 <flatcc_json_printer_fmt_float@@Base>:
   39974:	push	{fp, lr}
   39978:	mov	fp, sp
   3997c:	sub	sp, sp, #8
   39980:	str	r0, [sp, #4]
   39984:	vstr	s0, [sp]
   39988:	vldr	s0, [sp]
   3998c:	vcvt.f64.f32	d0, s0
   39990:	ldr	r0, [sp, #4]
   39994:	bl	399a0 <flatcc_json_printer_fmt_float@@Base+0x2c>
   39998:	mov	sp, fp
   3999c:	pop	{fp, pc}
   399a0:	push	{fp, lr}
   399a4:	mov	fp, sp
   399a8:	sub	sp, sp, #72	; 0x48
   399ac:	vstr	d0, [fp, #-16]
   399b0:	str	r0, [fp, #-20]	; 0xffffffec
   399b4:	vldr	d0, [fp, #-16]
   399b8:	bl	44da0 <flatcc_json_printer_clear@@Base+0x5c>
   399bc:	str	r1, [sp, #28]
   399c0:	str	r0, [sp, #24]
   399c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   399c8:	str	r0, [sp, #20]
   399cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   399d0:	movw	r1, #0
   399d4:	cmp	r0, r1
   399d8:	beq	399e0 <flatcc_json_printer_fmt_float@@Base+0x6c>
   399dc:	b	39a00 <flatcc_json_printer_fmt_float@@Base+0x8c>
   399e0:	ldr	r0, [pc, #1304]	; 39f00 <flatcc_json_printer_fmt_float@@Base+0x58c>
   399e4:	add	r0, pc, r0
   399e8:	ldr	r1, [pc, #1300]	; 39f04 <flatcc_json_printer_fmt_float@@Base+0x590>
   399ec:	add	r1, pc, r1
   399f0:	ldr	r2, [pc, #1296]	; 39f08 <flatcc_json_printer_fmt_float@@Base+0x594>
   399f4:	add	r3, pc, r2
   399f8:	movw	r2, #189	; 0xbd
   399fc:	bl	14f08 <__assert_fail@plt>
   39a00:	ldr	r0, [sp, #24]
   39a04:	ldr	r1, [sp, #28]
   39a08:	lsl	r1, r1, #1
   39a0c:	orr	r1, r1, r0, lsr #31
   39a10:	mov	r2, #1
   39a14:	rsbs	r0, r2, r0, lsl #1
   39a18:	movw	r2, #0
   39a1c:	movt	r2, #65504	; 0xffe0
   39a20:	sbcs	r1, r1, r2
   39a24:	bcc	39a4c <flatcc_json_printer_fmt_float@@Base+0xd8>
   39a28:	b	39a2c <flatcc_json_printer_fmt_float@@Base+0xb8>
   39a2c:	ldr	r0, [pc, #1244]	; 39f10 <flatcc_json_printer_fmt_float@@Base+0x59c>
   39a30:	add	r1, pc, r0
   39a34:	ldr	r0, [fp, #-20]	; 0xffffffec
   39a38:	ldr	r3, [sp, #24]
   39a3c:	ldr	r2, [sp, #28]
   39a40:	bl	14ef0 <sprintf@plt>
   39a44:	str	r0, [fp, #-4]
   39a48:	b	39ef4 <flatcc_json_printer_fmt_float@@Base+0x580>
   39a4c:	ldrb	r0, [sp, #31]
   39a50:	tst	r0, #128	; 0x80
   39a54:	beq	39a88 <flatcc_json_printer_fmt_float@@Base+0x114>
   39a58:	b	39a5c <flatcc_json_printer_fmt_float@@Base+0xe8>
   39a5c:	ldr	r0, [sp, #20]
   39a60:	add	r1, r0, #1
   39a64:	str	r1, [sp, #20]
   39a68:	mov	r1, #45	; 0x2d
   39a6c:	strb	r1, [r0]
   39a70:	vldr	d16, [fp, #-16]
   39a74:	vneg.f64	d16, d16
   39a78:	vstr	d16, [fp, #-16]
   39a7c:	ldr	r0, [sp, #28]
   39a80:	eor	r0, r0, #-2147483648	; 0x80000000
   39a84:	str	r0, [sp, #28]
   39a88:	ldr	r0, [sp, #24]
   39a8c:	ldr	r1, [sp, #28]
   39a90:	orr	r0, r0, r1
   39a94:	cmp	r0, #0
   39a98:	bne	39ad4 <flatcc_json_printer_fmt_float@@Base+0x160>
   39a9c:	b	39aa0 <flatcc_json_printer_fmt_float@@Base+0x12c>
   39aa0:	ldr	r0, [sp, #20]
   39aa4:	add	r1, r0, #1
   39aa8:	str	r1, [sp, #20]
   39aac:	movw	r1, #48	; 0x30
   39ab0:	strb	r1, [r0]
   39ab4:	ldr	r0, [sp, #20]
   39ab8:	movw	r1, #0
   39abc:	strb	r1, [r0]
   39ac0:	ldr	r0, [sp, #20]
   39ac4:	ldr	r1, [fp, #-20]	; 0xffffffec
   39ac8:	sub	r0, r0, r1
   39acc:	str	r0, [fp, #-4]
   39ad0:	b	39ef4 <flatcc_json_printer_fmt_float@@Base+0x580>
   39ad4:	ldr	r0, [sp, #24]
   39ad8:	ldr	r1, [sp, #28]
   39adc:	movw	r2, #0
   39ae0:	movt	r2, #32752	; 0x7ff0
   39ae4:	eor	r1, r1, r2
   39ae8:	orr	r0, r0, r1
   39aec:	cmp	r0, #0
   39af0:	bne	39b54 <flatcc_json_printer_fmt_float@@Base+0x1e0>
   39af4:	b	39af8 <flatcc_json_printer_fmt_float@@Base+0x184>
   39af8:	ldr	r0, [sp, #20]
   39afc:	add	r1, r0, #1
   39b00:	str	r1, [sp, #20]
   39b04:	movw	r1, #105	; 0x69
   39b08:	strb	r1, [r0]
   39b0c:	ldr	r0, [sp, #20]
   39b10:	add	r1, r0, #1
   39b14:	str	r1, [sp, #20]
   39b18:	movw	r1, #110	; 0x6e
   39b1c:	strb	r1, [r0]
   39b20:	ldr	r0, [sp, #20]
   39b24:	add	r1, r0, #1
   39b28:	str	r1, [sp, #20]
   39b2c:	movw	r1, #102	; 0x66
   39b30:	strb	r1, [r0]
   39b34:	ldr	r0, [sp, #20]
   39b38:	movw	r1, #0
   39b3c:	strb	r1, [r0]
   39b40:	ldr	r0, [sp, #20]
   39b44:	ldr	r1, [fp, #-20]	; 0xffffffec
   39b48:	sub	r0, r0, r1
   39b4c:	str	r0, [fp, #-4]
   39b50:	b	39ef4 <flatcc_json_printer_fmt_float@@Base+0x580>
   39b54:	vldr	d0, [fp, #-16]
   39b58:	ldr	r0, [sp, #20]
   39b5c:	sub	r1, fp, #28
   39b60:	sub	r2, fp, #24
   39b64:	bl	44dc0 <flatcc_json_printer_clear@@Base+0x7c>
   39b68:	str	r0, [fp, #-32]	; 0xffffffe0
   39b6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   39b70:	cmp	r0, #0
   39b74:	bne	39ba8 <flatcc_json_printer_fmt_float@@Base+0x234>
   39b78:	ldr	r0, [pc, #908]	; 39f0c <flatcc_json_printer_fmt_float@@Base+0x598>
   39b7c:	add	r1, pc, r0
   39b80:	ldr	r0, [sp, #20]
   39b84:	vldr	d16, [fp, #-16]
   39b88:	vmov	r2, r3, d16
   39b8c:	bl	14ef0 <sprintf@plt>
   39b90:	ldr	r1, [sp, #20]
   39b94:	ldr	r2, [fp, #-20]	; 0xffffffec
   39b98:	sub	r1, r1, r2
   39b9c:	add	r0, r0, r1
   39ba0:	str	r0, [fp, #-4]
   39ba4:	b	39ef4 <flatcc_json_printer_fmt_float@@Base+0x580>
   39ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39bac:	movw	r1, #0
   39bb0:	sub	r0, r1, r0
   39bb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39bb8:	sub	r1, r1, #1
   39bbc:	movw	r2, #1
   39bc0:	cmp	r2, r1
   39bc4:	str	r0, [sp, #16]
   39bc8:	blt	39bd8 <flatcc_json_printer_fmt_float@@Base+0x264>
   39bcc:	movw	r0, #1
   39bd0:	str	r0, [sp, #12]
   39bd4:	b	39be4 <flatcc_json_printer_fmt_float@@Base+0x270>
   39bd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39bdc:	sub	r0, r0, #1
   39be0:	str	r0, [sp, #12]
   39be4:	ldr	r0, [sp, #12]
   39be8:	ldr	r1, [sp, #16]
   39bec:	cmp	r1, r0
   39bf0:	bgt	39c08 <flatcc_json_printer_fmt_float@@Base+0x294>
   39bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39bf8:	movw	r1, #0
   39bfc:	sub	r0, r1, r0
   39c00:	str	r0, [sp, #8]
   39c04:	b	39c3c <flatcc_json_printer_fmt_float@@Base+0x2c8>
   39c08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39c0c:	sub	r0, r0, #1
   39c10:	movw	r1, #1
   39c14:	cmp	r1, r0
   39c18:	blt	39c28 <flatcc_json_printer_fmt_float@@Base+0x2b4>
   39c1c:	movw	r0, #1
   39c20:	str	r0, [sp, #4]
   39c24:	b	39c34 <flatcc_json_printer_fmt_float@@Base+0x2c0>
   39c28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39c2c:	sub	r0, r0, #1
   39c30:	str	r0, [sp, #4]
   39c34:	ldr	r0, [sp, #4]
   39c38:	str	r0, [sp, #8]
   39c3c:	ldr	r0, [sp, #8]
   39c40:	str	r0, [sp, #36]	; 0x24
   39c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39c48:	cmp	r0, #0
   39c4c:	bge	39d24 <flatcc_json_printer_fmt_float@@Base+0x3b0>
   39c50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39c54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   39c58:	add	r0, r0, r1
   39c5c:	cmn	r0, #3
   39c60:	ble	39d24 <flatcc_json_printer_fmt_float@@Base+0x3b0>
   39c64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39c68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   39c6c:	movw	r2, #0
   39c70:	sub	r1, r2, r1
   39c74:	cmp	r0, r1
   39c78:	bgt	39d24 <flatcc_json_printer_fmt_float@@Base+0x3b0>
   39c7c:	ldr	r0, [sp, #20]
   39c80:	add	r0, r0, #2
   39c84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   39c88:	movw	r2, #0
   39c8c:	sub	r1, r2, r1
   39c90:	add	r0, r0, r1
   39c94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39c98:	sub	r1, r2, r1
   39c9c:	add	r0, r0, r1
   39ca0:	ldr	r1, [sp, #20]
   39ca4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39ca8:	bl	14e18 <memmove@plt>
   39cac:	ldr	r0, [sp, #20]
   39cb0:	movw	r1, #48	; 0x30
   39cb4:	strb	r1, [r0]
   39cb8:	ldr	r0, [sp, #20]
   39cbc:	movw	r1, #46	; 0x2e
   39cc0:	strb	r1, [r0, #1]
   39cc4:	movw	r0, #2
   39cc8:	str	r0, [sp, #32]
   39ccc:	ldr	r0, [sp, #32]
   39cd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   39cd4:	movw	r2, #2
   39cd8:	sub	r1, r2, r1
   39cdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39ce0:	sub	r1, r1, r2
   39ce4:	cmp	r0, r1
   39ce8:	bge	39d10 <flatcc_json_printer_fmt_float@@Base+0x39c>
   39cec:	ldr	r0, [sp, #20]
   39cf0:	ldr	r1, [sp, #32]
   39cf4:	add	r0, r0, r1
   39cf8:	movw	r1, #48	; 0x30
   39cfc:	strb	r1, [r0]
   39d00:	ldr	r0, [sp, #32]
   39d04:	add	r0, r0, #1
   39d08:	str	r0, [sp, #32]
   39d0c:	b	39ccc <flatcc_json_printer_fmt_float@@Base+0x358>
   39d10:	ldr	r0, [sp, #32]
   39d14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39d18:	add	r0, r1, r0
   39d1c:	str	r0, [fp, #-28]	; 0xffffffe4
   39d20:	b	39ec8 <flatcc_json_printer_fmt_float@@Base+0x554>
   39d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39d28:	cmp	r0, #0
   39d2c:	bge	39e18 <flatcc_json_printer_fmt_float@@Base+0x4a4>
   39d30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39d34:	cmp	r0, #1
   39d38:	ble	39e18 <flatcc_json_printer_fmt_float@@Base+0x4a4>
   39d3c:	movw	r0, #0
   39d40:	str	r0, [sp, #32]
   39d44:	ldr	r0, [sp, #32]
   39d48:	ldr	r1, [sp, #36]	; 0x24
   39d4c:	cmp	r0, r1
   39d50:	bge	39d98 <flatcc_json_printer_fmt_float@@Base+0x424>
   39d54:	ldr	r0, [sp, #20]
   39d58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39d5c:	ldr	r2, [sp, #32]
   39d60:	sub	r1, r1, r2
   39d64:	sub	r1, r1, #1
   39d68:	add	r0, r0, r1
   39d6c:	ldrb	r0, [r0]
   39d70:	ldr	r1, [sp, #20]
   39d74:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39d78:	ldr	r3, [sp, #32]
   39d7c:	sub	r2, r2, r3
   39d80:	add	r1, r1, r2
   39d84:	strb	r0, [r1]
   39d88:	ldr	r0, [sp, #32]
   39d8c:	add	r0, r0, #1
   39d90:	str	r0, [sp, #32]
   39d94:	b	39d44 <flatcc_json_printer_fmt_float@@Base+0x3d0>
   39d98:	ldr	r0, [sp, #20]
   39d9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39da0:	add	r2, r1, #1
   39da4:	str	r2, [fp, #-28]	; 0xffffffe4
   39da8:	ldr	r2, [sp, #36]	; 0x24
   39dac:	sub	r1, r1, r2
   39db0:	add	r0, r0, r1
   39db4:	movw	r1, #46	; 0x2e
   39db8:	strb	r1, [r0]
   39dbc:	ldr	r0, [sp, #36]	; 0x24
   39dc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   39dc4:	add	r0, r1, r0
   39dc8:	str	r0, [fp, #-24]	; 0xffffffe8
   39dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39dd0:	cmp	r0, #0
   39dd4:	beq	39e14 <flatcc_json_printer_fmt_float@@Base+0x4a0>
   39dd8:	ldr	r0, [sp, #20]
   39ddc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39de0:	add	r2, r1, #1
   39de4:	str	r2, [fp, #-28]	; 0xffffffe4
   39de8:	add	r0, r0, r1
   39dec:	movw	r1, #101	; 0x65
   39df0:	strb	r1, [r0]
   39df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39df8:	ldr	r1, [sp, #20]
   39dfc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39e00:	add	r1, r1, r2
   39e04:	bl	4518c <flatcc_json_printer_clear@@Base+0x448>
   39e08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39e0c:	add	r0, r1, r0
   39e10:	str	r0, [fp, #-28]	; 0xffffffe4
   39e14:	b	39ec4 <flatcc_json_printer_fmt_float@@Base+0x550>
   39e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39e1c:	cmp	r0, #0
   39e20:	blt	39e30 <flatcc_json_printer_fmt_float@@Base+0x4bc>
   39e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39e28:	cmp	r0, #2
   39e2c:	ble	39e70 <flatcc_json_printer_fmt_float@@Base+0x4fc>
   39e30:	ldr	r0, [sp, #20]
   39e34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39e38:	add	r2, r1, #1
   39e3c:	str	r2, [fp, #-28]	; 0xffffffe4
   39e40:	add	r0, r0, r1
   39e44:	movw	r1, #101	; 0x65
   39e48:	strb	r1, [r0]
   39e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39e50:	ldr	r1, [sp, #20]
   39e54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39e58:	add	r1, r1, r2
   39e5c:	bl	4518c <flatcc_json_printer_clear@@Base+0x448>
   39e60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39e64:	add	r0, r1, r0
   39e68:	str	r0, [fp, #-28]	; 0xffffffe4
   39e6c:	b	39ec0 <flatcc_json_printer_fmt_float@@Base+0x54c>
   39e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39e74:	cmp	r0, #0
   39e78:	ble	39ebc <flatcc_json_printer_fmt_float@@Base+0x548>
   39e7c:	b	39e80 <flatcc_json_printer_fmt_float@@Base+0x50c>
   39e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39e84:	mvn	r1, #0
   39e88:	add	r1, r0, r1
   39e8c:	str	r1, [fp, #-24]	; 0xffffffe8
   39e90:	cmp	r0, #0
   39e94:	ble	39eb8 <flatcc_json_printer_fmt_float@@Base+0x544>
   39e98:	ldr	r0, [sp, #20]
   39e9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39ea0:	add	r2, r1, #1
   39ea4:	str	r2, [fp, #-28]	; 0xffffffe4
   39ea8:	add	r0, r0, r1
   39eac:	movw	r1, #48	; 0x30
   39eb0:	strb	r1, [r0]
   39eb4:	b	39e80 <flatcc_json_printer_fmt_float@@Base+0x50c>
   39eb8:	b	39ebc <flatcc_json_printer_fmt_float@@Base+0x548>
   39ebc:	b	39ec0 <flatcc_json_printer_fmt_float@@Base+0x54c>
   39ec0:	b	39ec4 <flatcc_json_printer_fmt_float@@Base+0x550>
   39ec4:	b	39ec8 <flatcc_json_printer_fmt_float@@Base+0x554>
   39ec8:	ldr	r0, [sp, #20]
   39ecc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39ed0:	add	r0, r0, r1
   39ed4:	movw	r1, #0
   39ed8:	strb	r1, [r0]
   39edc:	ldr	r0, [sp, #20]
   39ee0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39ee4:	add	r0, r0, r1
   39ee8:	ldr	r1, [fp, #-20]	; 0xffffffec
   39eec:	sub	r0, r0, r1
   39ef0:	str	r0, [fp, #-4]
   39ef4:	ldr	r0, [fp, #-4]
   39ef8:	mov	sp, fp
   39efc:	pop	{fp, pc}
   39f00:	andeq	r3, r1, sl, lsl pc
   39f04:	andeq	r3, r1, r6, lsl pc
   39f08:	andeq	r3, r1, ip, ror pc
   39f0c:	andeq	r3, r1, sl, lsr #28
   39f10:	andeq	r3, r1, r8, ror #30

00039f14 <flatcc_json_printer_fmt_double@@Base>:
   39f14:	push	{fp, lr}
   39f18:	mov	fp, sp
   39f1c:	sub	sp, sp, #16
   39f20:	str	r0, [fp, #-4]
   39f24:	vstr	d0, [sp]
   39f28:	vldr	d0, [sp]
   39f2c:	ldr	r0, [fp, #-4]
   39f30:	bl	399a0 <flatcc_json_printer_fmt_float@@Base+0x2c>
   39f34:	mov	sp, fp
   39f38:	pop	{fp, pc}

00039f3c <flatcc_json_printer_fmt_bool@@Base>:
   39f3c:	sub	sp, sp, #12
   39f40:	str	r0, [sp, #4]
   39f44:	str	r1, [sp]
   39f48:	ldr	r0, [sp]
   39f4c:	cmp	r0, #0
   39f50:	beq	39f8c <flatcc_json_printer_fmt_bool@@Base+0x50>
   39f54:	ldr	r0, [pc, #124]	; 39fd8 <flatcc_json_printer_fmt_bool@@Base+0x9c>
   39f58:	add	r0, pc, r0
   39f5c:	ldr	r1, [sp, #4]
   39f60:	ldrb	r2, [r0]
   39f64:	strb	r2, [r1]
   39f68:	ldrb	r2, [r0, #1]
   39f6c:	strb	r2, [r1, #1]
   39f70:	ldrb	r2, [r0, #2]
   39f74:	strb	r2, [r1, #2]
   39f78:	ldrb	r0, [r0, #3]
   39f7c:	strb	r0, [r1, #3]
   39f80:	movw	r0, #4
   39f84:	str	r0, [sp, #8]
   39f88:	b	39fc8 <flatcc_json_printer_fmt_bool@@Base+0x8c>
   39f8c:	ldr	r0, [pc, #64]	; 39fd4 <flatcc_json_printer_fmt_bool@@Base+0x98>
   39f90:	add	r0, pc, r0
   39f94:	ldr	r1, [sp, #4]
   39f98:	ldrb	r2, [r0]
   39f9c:	strb	r2, [r1]
   39fa0:	ldrb	r2, [r0, #1]
   39fa4:	strb	r2, [r1, #1]
   39fa8:	ldrb	r2, [r0, #2]
   39fac:	strb	r2, [r1, #2]
   39fb0:	ldrb	r2, [r0, #3]
   39fb4:	strb	r2, [r1, #3]
   39fb8:	ldrb	r0, [r0, #4]
   39fbc:	strb	r0, [r1, #4]
   39fc0:	movw	r0, #5
   39fc4:	str	r0, [sp, #8]
   39fc8:	ldr	r0, [sp, #8]
   39fcc:	add	sp, sp, #12
   39fd0:	bx	lr
   39fd4:	andeq	r0, r1, lr, asr #21
   39fd8:	andeq	r0, r1, r1, lsl #22

00039fdc <flatcc_json_printer_string@@Base>:
   39fdc:	push	{fp, lr}
   39fe0:	mov	fp, sp
   39fe4:	sub	sp, sp, #16
   39fe8:	str	r0, [fp, #-4]
   39fec:	str	r1, [sp, #8]
   39ff0:	str	r2, [sp, #4]
   39ff4:	ldr	r0, [fp, #-4]
   39ff8:	ldr	r1, [sp, #8]
   39ffc:	ldr	r2, [sp, #4]
   3a000:	bl	3a00c <flatcc_json_printer_string@@Base+0x30>
   3a004:	mov	sp, fp
   3a008:	pop	{fp, pc}
   3a00c:	push	{fp, lr}
   3a010:	mov	fp, sp
   3a014:	sub	sp, sp, #32
   3a018:	str	r0, [fp, #-4]
   3a01c:	str	r1, [fp, #-8]
   3a020:	str	r2, [fp, #-12]
   3a024:	ldr	r0, [fp, #-8]
   3a028:	str	r0, [sp, #16]
   3a02c:	ldr	r0, [fp, #-4]
   3a030:	ldr	r1, [r0, #20]
   3a034:	add	r2, r1, #1
   3a038:	str	r2, [r0, #20]
   3a03c:	movw	r0, #34	; 0x22
   3a040:	strb	r0, [r1]
   3a044:	ldr	r0, [sp, #16]
   3a048:	ldrb	r0, [r0]
   3a04c:	strb	r0, [sp, #15]
   3a050:	ldrb	r0, [sp, #15]
   3a054:	cmp	r0, #32
   3a058:	movw	r0, #0
   3a05c:	str	r0, [sp, #4]
   3a060:	blt	3a08c <flatcc_json_printer_string@@Base+0xb0>
   3a064:	ldrb	r0, [sp, #15]
   3a068:	cmp	r0, #34	; 0x22
   3a06c:	movw	r0, #0
   3a070:	str	r0, [sp, #4]
   3a074:	beq	3a08c <flatcc_json_printer_string@@Base+0xb0>
   3a078:	ldrb	r0, [sp, #15]
   3a07c:	cmp	r0, #92	; 0x5c
   3a080:	movw	r0, #0
   3a084:	movne	r0, #1
   3a088:	str	r0, [sp, #4]
   3a08c:	ldr	r0, [sp, #4]
   3a090:	tst	r0, #1
   3a094:	beq	3a0b0 <flatcc_json_printer_string@@Base+0xd4>
   3a098:	ldr	r0, [sp, #16]
   3a09c:	add	r1, r0, #1
   3a0a0:	str	r1, [sp, #16]
   3a0a4:	ldrb	r0, [r0, #1]
   3a0a8:	strb	r0, [sp, #15]
   3a0ac:	b	3a050 <flatcc_json_printer_string@@Base+0x74>
   3a0b0:	ldr	r0, [sp, #16]
   3a0b4:	ldr	r1, [fp, #-8]
   3a0b8:	sub	r0, r0, r1
   3a0bc:	str	r0, [sp, #8]
   3a0c0:	ldr	r0, [fp, #-4]
   3a0c4:	ldr	r1, [fp, #-8]
   3a0c8:	ldr	r2, [sp, #8]
   3a0cc:	bl	3a3ac <flatcc_json_printer_write@@Base+0x30>
   3a0d0:	ldr	r0, [sp, #8]
   3a0d4:	ldr	r1, [fp, #-12]
   3a0d8:	sub	r0, r1, r0
   3a0dc:	str	r0, [fp, #-12]
   3a0e0:	ldr	r0, [fp, #-12]
   3a0e4:	cmp	r0, #0
   3a0e8:	bne	3a0f0 <flatcc_json_printer_string@@Base+0x114>
   3a0ec:	b	3a35c <flatcc_json_printer_string@@Base+0x380>
   3a0f0:	ldr	r0, [sp, #8]
   3a0f4:	ldr	r1, [fp, #-8]
   3a0f8:	add	r0, r1, r0
   3a0fc:	str	r0, [fp, #-8]
   3a100:	ldr	r0, [fp, #-4]
   3a104:	ldr	r1, [r0, #20]
   3a108:	add	r2, r1, #1
   3a10c:	str	r2, [r0, #20]
   3a110:	mov	r0, #92	; 0x5c
   3a114:	strb	r0, [r1]
   3a118:	ldrb	r0, [sp, #15]
   3a11c:	mov	r1, r0
   3a120:	cmp	r0, #8
   3a124:	str	r1, [sp]
   3a128:	beq	3a238 <flatcc_json_printer_string@@Base+0x25c>
   3a12c:	b	3a130 <flatcc_json_printer_string@@Base+0x154>
   3a130:	ldr	r0, [sp]
   3a134:	cmp	r0, #9
   3a138:	beq	3a1c8 <flatcc_json_printer_string@@Base+0x1ec>
   3a13c:	b	3a140 <flatcc_json_printer_string@@Base+0x164>
   3a140:	ldr	r0, [sp]
   3a144:	cmp	r0, #10
   3a148:	beq	3a21c <flatcc_json_printer_string@@Base+0x240>
   3a14c:	b	3a150 <flatcc_json_printer_string@@Base+0x174>
   3a150:	ldr	r0, [sp]
   3a154:	cmp	r0, #12
   3a158:	beq	3a1e4 <flatcc_json_printer_string@@Base+0x208>
   3a15c:	b	3a160 <flatcc_json_printer_string@@Base+0x184>
   3a160:	ldr	r0, [sp]
   3a164:	cmp	r0, #13
   3a168:	beq	3a200 <flatcc_json_printer_string@@Base+0x224>
   3a16c:	b	3a170 <flatcc_json_printer_string@@Base+0x194>
   3a170:	ldr	r0, [sp]
   3a174:	cmp	r0, #34	; 0x22
   3a178:	beq	3a190 <flatcc_json_printer_string@@Base+0x1b4>
   3a17c:	b	3a180 <flatcc_json_printer_string@@Base+0x1a4>
   3a180:	ldr	r0, [sp]
   3a184:	cmp	r0, #92	; 0x5c
   3a188:	beq	3a1ac <flatcc_json_printer_string@@Base+0x1d0>
   3a18c:	b	3a254 <flatcc_json_printer_string@@Base+0x278>
   3a190:	ldr	r0, [fp, #-4]
   3a194:	ldr	r1, [r0, #20]
   3a198:	add	r2, r1, #1
   3a19c:	str	r2, [r0, #20]
   3a1a0:	movw	r0, #34	; 0x22
   3a1a4:	strb	r0, [r1]
   3a1a8:	b	3a330 <flatcc_json_printer_string@@Base+0x354>
   3a1ac:	ldr	r0, [fp, #-4]
   3a1b0:	ldr	r1, [r0, #20]
   3a1b4:	add	r2, r1, #1
   3a1b8:	str	r2, [r0, #20]
   3a1bc:	movw	r0, #92	; 0x5c
   3a1c0:	strb	r0, [r1]
   3a1c4:	b	3a330 <flatcc_json_printer_string@@Base+0x354>
   3a1c8:	ldr	r0, [fp, #-4]
   3a1cc:	ldr	r1, [r0, #20]
   3a1d0:	add	r2, r1, #1
   3a1d4:	str	r2, [r0, #20]
   3a1d8:	movw	r0, #116	; 0x74
   3a1dc:	strb	r0, [r1]
   3a1e0:	b	3a330 <flatcc_json_printer_string@@Base+0x354>
   3a1e4:	ldr	r0, [fp, #-4]
   3a1e8:	ldr	r1, [r0, #20]
   3a1ec:	add	r2, r1, #1
   3a1f0:	str	r2, [r0, #20]
   3a1f4:	movw	r0, #102	; 0x66
   3a1f8:	strb	r0, [r1]
   3a1fc:	b	3a330 <flatcc_json_printer_string@@Base+0x354>
   3a200:	ldr	r0, [fp, #-4]
   3a204:	ldr	r1, [r0, #20]
   3a208:	add	r2, r1, #1
   3a20c:	str	r2, [r0, #20]
   3a210:	movw	r0, #114	; 0x72
   3a214:	strb	r0, [r1]
   3a218:	b	3a330 <flatcc_json_printer_string@@Base+0x354>
   3a21c:	ldr	r0, [fp, #-4]
   3a220:	ldr	r1, [r0, #20]
   3a224:	add	r2, r1, #1
   3a228:	str	r2, [r0, #20]
   3a22c:	movw	r0, #110	; 0x6e
   3a230:	strb	r0, [r1]
   3a234:	b	3a330 <flatcc_json_printer_string@@Base+0x354>
   3a238:	ldr	r0, [fp, #-4]
   3a23c:	ldr	r1, [r0, #20]
   3a240:	add	r2, r1, #1
   3a244:	str	r2, [r0, #20]
   3a248:	movw	r0, #98	; 0x62
   3a24c:	strb	r0, [r1]
   3a250:	b	3a330 <flatcc_json_printer_string@@Base+0x354>
   3a254:	ldr	r0, [fp, #-4]
   3a258:	ldr	r1, [r0, #20]
   3a25c:	add	r2, r1, #1
   3a260:	str	r2, [r0, #20]
   3a264:	movw	r0, #117	; 0x75
   3a268:	strb	r0, [r1]
   3a26c:	ldr	r0, [fp, #-4]
   3a270:	ldr	r1, [r0, #20]
   3a274:	add	r2, r1, #1
   3a278:	str	r2, [r0, #20]
   3a27c:	movw	r0, #48	; 0x30
   3a280:	strb	r0, [r1]
   3a284:	ldr	r1, [fp, #-4]
   3a288:	ldr	r2, [r1, #20]
   3a28c:	add	r3, r2, #1
   3a290:	str	r3, [r1, #20]
   3a294:	strb	r0, [r2]
   3a298:	ldrb	r0, [sp, #15]
   3a29c:	asr	r0, r0, #4
   3a2a0:	strb	r0, [sp, #14]
   3a2a4:	ldrb	r0, [sp, #14]
   3a2a8:	cmp	r0, #10
   3a2ac:	movw	r0, #0
   3a2b0:	movlt	r0, #1
   3a2b4:	tst	r0, #1
   3a2b8:	movw	r0, #48	; 0x30
   3a2bc:	mov	r1, r0
   3a2c0:	moveq	r1, #87	; 0x57
   3a2c4:	ldrb	r2, [sp, #14]
   3a2c8:	add	r1, r2, r1
   3a2cc:	strb	r1, [sp, #14]
   3a2d0:	ldrb	r1, [sp, #14]
   3a2d4:	ldr	r2, [fp, #-4]
   3a2d8:	ldr	r3, [r2, #20]
   3a2dc:	add	ip, r3, #1
   3a2e0:	str	ip, [r2, #20]
   3a2e4:	strb	r1, [r3]
   3a2e8:	ldrb	r1, [sp, #15]
   3a2ec:	and	r1, r1, #15
   3a2f0:	strb	r1, [sp, #14]
   3a2f4:	ldrb	r1, [sp, #14]
   3a2f8:	cmp	r1, #10
   3a2fc:	movw	r1, #0
   3a300:	movlt	r1, #1
   3a304:	tst	r1, #1
   3a308:	moveq	r0, #87	; 0x57
   3a30c:	ldrb	r1, [sp, #14]
   3a310:	add	r0, r1, r0
   3a314:	strb	r0, [sp, #14]
   3a318:	ldrb	r0, [sp, #14]
   3a31c:	ldr	r1, [fp, #-4]
   3a320:	ldr	r2, [r1, #20]
   3a324:	add	r3, r2, #1
   3a328:	str	r3, [r1, #20]
   3a32c:	strb	r0, [r2]
   3a330:	ldr	r0, [sp, #16]
   3a334:	add	r0, r0, #1
   3a338:	str	r0, [sp, #16]
   3a33c:	ldr	r0, [fp, #-12]
   3a340:	mvn	r1, #0
   3a344:	add	r0, r0, r1
   3a348:	str	r0, [fp, #-12]
   3a34c:	ldr	r0, [fp, #-8]
   3a350:	add	r0, r0, #1
   3a354:	str	r0, [fp, #-8]
   3a358:	b	3a044 <flatcc_json_printer_string@@Base+0x68>
   3a35c:	ldr	r0, [fp, #-4]
   3a360:	ldr	r1, [r0, #20]
   3a364:	add	r2, r1, #1
   3a368:	str	r2, [r0, #20]
   3a36c:	movw	r0, #34	; 0x22
   3a370:	strb	r0, [r1]
   3a374:	mov	sp, fp
   3a378:	pop	{fp, pc}

0003a37c <flatcc_json_printer_write@@Base>:
   3a37c:	push	{fp, lr}
   3a380:	mov	fp, sp
   3a384:	sub	sp, sp, #16
   3a388:	str	r0, [fp, #-4]
   3a38c:	str	r1, [sp, #8]
   3a390:	str	r2, [sp, #4]
   3a394:	ldr	r0, [fp, #-4]
   3a398:	ldr	r1, [sp, #8]
   3a39c:	ldr	r2, [sp, #4]
   3a3a0:	bl	3a3ac <flatcc_json_printer_write@@Base+0x30>
   3a3a4:	mov	sp, fp
   3a3a8:	pop	{fp, pc}
   3a3ac:	push	{fp, lr}
   3a3b0:	mov	fp, sp
   3a3b4:	sub	sp, sp, #16
   3a3b8:	str	r0, [fp, #-4]
   3a3bc:	str	r1, [sp, #8]
   3a3c0:	str	r2, [sp, #4]
   3a3c4:	ldr	r0, [fp, #-4]
   3a3c8:	ldr	r0, [r0, #20]
   3a3cc:	ldr	r1, [sp, #4]
   3a3d0:	add	r0, r0, r1
   3a3d4:	ldr	r1, [fp, #-4]
   3a3d8:	ldr	r1, [r1, #16]
   3a3dc:	cmp	r0, r1
   3a3e0:	bcc	3a3f8 <flatcc_json_printer_write@@Base+0x7c>
   3a3e4:	ldr	r0, [fp, #-4]
   3a3e8:	ldr	r1, [sp, #8]
   3a3ec:	ldr	r2, [sp, #4]
   3a3f0:	bl	461c8 <flatcc_json_printer_clear@@Base+0x1484>
   3a3f4:	b	3a420 <flatcc_json_printer_write@@Base+0xa4>
   3a3f8:	ldr	r0, [fp, #-4]
   3a3fc:	ldr	r0, [r0, #20]
   3a400:	ldr	r1, [sp, #8]
   3a404:	ldr	r2, [sp, #4]
   3a408:	bl	14e30 <memcpy@plt>
   3a40c:	ldr	r0, [sp, #4]
   3a410:	ldr	r1, [fp, #-4]
   3a414:	ldr	r2, [r1, #20]
   3a418:	add	r0, r2, r0
   3a41c:	str	r0, [r1, #20]
   3a420:	mov	sp, fp
   3a424:	pop	{fp, pc}

0003a428 <flatcc_json_printer_nl@@Base>:
   3a428:	push	{fp, lr}
   3a42c:	mov	fp, sp
   3a430:	sub	sp, sp, #8
   3a434:	str	r0, [sp, #4]
   3a438:	ldr	r0, [sp, #4]
   3a43c:	ldr	r1, [r0, #20]
   3a440:	add	r2, r1, #1
   3a444:	str	r2, [r0, #20]
   3a448:	movw	r0, #10
   3a44c:	strb	r0, [r1]
   3a450:	ldr	r0, [sp, #4]
   3a454:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3a458:	mov	sp, fp
   3a45c:	pop	{fp, pc}
   3a460:	push	{fp, lr}
   3a464:	mov	fp, sp
   3a468:	sub	sp, sp, #8
   3a46c:	str	r0, [sp, #4]
   3a470:	ldr	r0, [sp, #4]
   3a474:	ldr	r0, [r0, #20]
   3a478:	ldr	r1, [sp, #4]
   3a47c:	ldr	r1, [r1, #16]
   3a480:	cmp	r0, r1
   3a484:	bcc	3a4a8 <flatcc_json_printer_nl@@Base+0x80>
   3a488:	ldr	r0, [sp, #4]
   3a48c:	ldr	r0, [r0, #44]	; 0x2c
   3a490:	ldr	r1, [sp, #4]
   3a494:	str	r0, [sp]
   3a498:	mov	r0, r1
   3a49c:	movw	r1, #0
   3a4a0:	ldr	r2, [sp]
   3a4a4:	blx	r2
   3a4a8:	mov	sp, fp
   3a4ac:	pop	{fp, pc}

0003a4b0 <flatcc_json_printer_char@@Base>:
   3a4b0:	sub	sp, sp, #8
   3a4b4:	str	r0, [sp, #4]
   3a4b8:	strb	r1, [sp, #3]
   3a4bc:	ldrb	r0, [sp, #3]
   3a4c0:	ldr	r1, [sp, #4]
   3a4c4:	ldr	r2, [r1, #20]
   3a4c8:	add	r3, r2, #1
   3a4cc:	str	r3, [r1, #20]
   3a4d0:	strb	r0, [r2]
   3a4d4:	add	sp, sp, #8
   3a4d8:	bx	lr

0003a4dc <flatcc_json_printer_indent@@Base>:
   3a4dc:	push	{fp, lr}
   3a4e0:	mov	fp, sp
   3a4e4:	sub	sp, sp, #8
   3a4e8:	str	r0, [sp, #4]
   3a4ec:	ldr	r0, [sp, #4]
   3a4f0:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3a4f4:	mov	sp, fp
   3a4f8:	pop	{fp, pc}
   3a4fc:	push	{fp, lr}
   3a500:	mov	fp, sp
   3a504:	sub	sp, sp, #8
   3a508:	str	r0, [sp, #4]
   3a50c:	ldr	r0, [sp, #4]
   3a510:	ldr	r0, [r0, #32]
   3a514:	ldr	r1, [sp, #4]
   3a518:	ldrb	r1, [r1, #25]
   3a51c:	mul	r0, r0, r1
   3a520:	str	r0, [sp]
   3a524:	ldr	r0, [sp, #4]
   3a528:	ldr	r0, [r0, #20]
   3a52c:	ldr	r1, [sp]
   3a530:	add	r0, r0, r1
   3a534:	ldr	r1, [sp, #4]
   3a538:	ldr	r1, [r1, #16]
   3a53c:	cmp	r0, r1
   3a540:	bls	3a554 <flatcc_json_printer_indent@@Base+0x78>
   3a544:	ldr	r0, [sp, #4]
   3a548:	ldr	r1, [sp]
   3a54c:	bl	462f4 <flatcc_json_printer_clear@@Base+0x15b0>
   3a550:	b	3a580 <flatcc_json_printer_indent@@Base+0xa4>
   3a554:	ldr	r0, [sp, #4]
   3a558:	ldr	r0, [r0, #20]
   3a55c:	ldr	r2, [sp]
   3a560:	movw	r1, #32
   3a564:	and	r1, r1, #255	; 0xff
   3a568:	bl	14ec0 <memset@plt>
   3a56c:	ldr	r0, [sp]
   3a570:	ldr	r1, [sp, #4]
   3a574:	ldr	r2, [r1, #20]
   3a578:	add	r0, r2, r0
   3a57c:	str	r0, [r1, #20]
   3a580:	mov	sp, fp
   3a584:	pop	{fp, pc}

0003a588 <flatcc_json_printer_add_level@@Base>:
   3a588:	sub	sp, sp, #8
   3a58c:	str	r0, [sp, #4]
   3a590:	str	r1, [sp]
   3a594:	ldr	r0, [sp]
   3a598:	ldr	r1, [sp, #4]
   3a59c:	ldr	r2, [r1, #32]
   3a5a0:	add	r0, r2, r0
   3a5a4:	str	r0, [r1, #32]
   3a5a8:	add	sp, sp, #8
   3a5ac:	bx	lr

0003a5b0 <flatcc_json_printer_get_level@@Base>:
   3a5b0:	sub	sp, sp, #4
   3a5b4:	str	r0, [sp]
   3a5b8:	ldr	r0, [sp]
   3a5bc:	ldr	r0, [r0, #32]
   3a5c0:	add	sp, sp, #4
   3a5c4:	bx	lr

0003a5c8 <flatcc_json_printer_uint8@@Base>:
   3a5c8:	push	{fp, lr}
   3a5cc:	mov	fp, sp
   3a5d0:	sub	sp, sp, #8
   3a5d4:	str	r0, [sp, #4]
   3a5d8:	strb	r1, [sp, #3]
   3a5dc:	ldrb	r0, [sp, #3]
   3a5e0:	ldr	r1, [sp, #4]
   3a5e4:	ldr	r1, [r1, #20]
   3a5e8:	and	r0, r0, #255	; 0xff
   3a5ec:	bl	3a608 <flatcc_json_printer_uint8@@Base+0x40>
   3a5f0:	ldr	r1, [sp, #4]
   3a5f4:	ldr	r2, [r1, #20]
   3a5f8:	add	r0, r2, r0
   3a5fc:	str	r0, [r1, #20]
   3a600:	mov	sp, fp
   3a604:	pop	{fp, pc}
   3a608:	sub	sp, sp, #16
   3a60c:	strb	r0, [sp, #11]
   3a610:	str	r1, [sp, #4]
   3a614:	ldrb	r0, [sp, #11]
   3a618:	cmp	r0, #100	; 0x64
   3a61c:	blt	3a6c8 <flatcc_json_printer_uint8@@Base+0x100>
   3a620:	ldr	r0, [pc, #368]	; 3a798 <flatcc_json_printer_uint8@@Base+0x1d0>
   3a624:	add	r0, pc, r0
   3a628:	ldr	r1, [sp, #4]
   3a62c:	add	r1, r1, #3
   3a630:	str	r1, [sp, #4]
   3a634:	ldr	r1, [sp, #4]
   3a638:	mov	r2, #0
   3a63c:	strb	r2, [r1]
   3a640:	ldr	r1, [sp, #4]
   3a644:	sub	r1, r1, #2
   3a648:	str	r1, [sp, #4]
   3a64c:	ldrb	r1, [sp, #11]
   3a650:	movw	r2, #34079	; 0x851f
   3a654:	movt	r2, #20971	; 0x51eb
   3a658:	umull	r2, r3, r1, r2
   3a65c:	lsr	r3, r3, #5
   3a660:	mov	ip, #100	; 0x64
   3a664:	mls	r1, r3, ip, r1
   3a668:	lsl	r1, r1, #1
   3a66c:	add	r0, r0, r1
   3a670:	str	r0, [sp]
   3a674:	ldrb	r0, [sp, #11]
   3a678:	movw	r1, #100	; 0x64
   3a67c:	sdiv	r0, r0, r1
   3a680:	strb	r0, [sp, #11]
   3a684:	ldr	r0, [sp]
   3a688:	ldrb	r0, [r0]
   3a68c:	ldr	r1, [sp, #4]
   3a690:	strb	r0, [r1]
   3a694:	ldr	r0, [sp]
   3a698:	ldrb	r0, [r0, #1]
   3a69c:	ldr	r1, [sp, #4]
   3a6a0:	strb	r0, [r1, #1]
   3a6a4:	ldrb	r0, [sp, #11]
   3a6a8:	add	r0, r0, #48	; 0x30
   3a6ac:	ldr	r1, [sp, #4]
   3a6b0:	mvn	r3, #0
   3a6b4:	add	r1, r1, r3
   3a6b8:	strb	r0, [r1]
   3a6bc:	movw	r0, #3
   3a6c0:	str	r0, [sp, #12]
   3a6c4:	b	3a788 <flatcc_json_printer_uint8@@Base+0x1c0>
   3a6c8:	ldrb	r0, [sp, #11]
   3a6cc:	cmp	r0, #10
   3a6d0:	blt	3a764 <flatcc_json_printer_uint8@@Base+0x19c>
   3a6d4:	ldr	r0, [pc, #184]	; 3a794 <flatcc_json_printer_uint8@@Base+0x1cc>
   3a6d8:	add	r0, pc, r0
   3a6dc:	ldr	r1, [sp, #4]
   3a6e0:	add	r1, r1, #2
   3a6e4:	str	r1, [sp, #4]
   3a6e8:	ldr	r1, [sp, #4]
   3a6ec:	mov	r2, #0
   3a6f0:	strb	r2, [r1]
   3a6f4:	ldr	r1, [sp, #4]
   3a6f8:	sub	r1, r1, #2
   3a6fc:	str	r1, [sp, #4]
   3a700:	ldrb	r1, [sp, #11]
   3a704:	movw	r2, #34079	; 0x851f
   3a708:	movt	r2, #20971	; 0x51eb
   3a70c:	umull	r2, r3, r1, r2
   3a710:	lsr	r3, r3, #5
   3a714:	mov	ip, #100	; 0x64
   3a718:	mls	r1, r3, ip, r1
   3a71c:	lsl	r1, r1, #1
   3a720:	add	r0, r0, r1
   3a724:	str	r0, [sp]
   3a728:	ldrb	r0, [sp, #11]
   3a72c:	movw	r1, #100	; 0x64
   3a730:	sdiv	r0, r0, r1
   3a734:	strb	r0, [sp, #11]
   3a738:	ldr	r0, [sp]
   3a73c:	ldrb	r0, [r0]
   3a740:	ldr	r1, [sp, #4]
   3a744:	strb	r0, [r1]
   3a748:	ldr	r0, [sp]
   3a74c:	ldrb	r0, [r0, #1]
   3a750:	ldr	r1, [sp, #4]
   3a754:	strb	r0, [r1, #1]
   3a758:	movw	r0, #2
   3a75c:	str	r0, [sp, #12]
   3a760:	b	3a788 <flatcc_json_printer_uint8@@Base+0x1c0>
   3a764:	ldr	r0, [sp, #4]
   3a768:	movw	r1, #0
   3a76c:	strb	r1, [r0, #1]
   3a770:	ldrb	r0, [sp, #11]
   3a774:	add	r0, r0, #48	; 0x30
   3a778:	ldr	r1, [sp, #4]
   3a77c:	strb	r0, [r1]
   3a780:	movw	r0, #1
   3a784:	str	r0, [sp, #12]
   3a788:	ldr	r0, [sp, #12]
   3a78c:	add	sp, sp, #16
   3a790:	bx	lr
   3a794:	andeq	r3, r1, r4, lsl #21
   3a798:	andeq	r3, r1, r8, lsr fp

0003a79c <flatcc_json_printer_uint16@@Base>:
   3a79c:	push	{fp, lr}
   3a7a0:	mov	fp, sp
   3a7a4:	sub	sp, sp, #8
   3a7a8:	str	r0, [sp, #4]
   3a7ac:	strh	r1, [sp, #2]
   3a7b0:	ldrh	r0, [sp, #2]
   3a7b4:	ldr	r1, [sp, #4]
   3a7b8:	ldr	r1, [r1, #20]
   3a7bc:	uxth	r0, r0
   3a7c0:	bl	3a7dc <flatcc_json_printer_uint16@@Base+0x40>
   3a7c4:	ldr	r1, [sp, #4]
   3a7c8:	ldr	r2, [r1, #20]
   3a7cc:	add	r0, r2, r0
   3a7d0:	str	r0, [r1, #20]
   3a7d4:	mov	sp, fp
   3a7d8:	pop	{fp, pc}
   3a7dc:	sub	sp, sp, #24
   3a7e0:	strh	r0, [sp, #22]
   3a7e4:	str	r1, [sp, #16]
   3a7e8:	movw	r0, #0
   3a7ec:	str	r0, [sp, #12]
   3a7f0:	ldrh	r0, [sp, #22]
   3a7f4:	cmp	r0, #1000	; 0x3e8
   3a7f8:	blt	3a824 <flatcc_json_printer_uint16@@Base+0x88>
   3a7fc:	ldrh	r0, [sp, #22]
   3a800:	movw	r1, #10000	; 0x2710
   3a804:	cmp	r0, r1
   3a808:	blt	3a818 <flatcc_json_printer_uint16@@Base+0x7c>
   3a80c:	movw	r0, #5
   3a810:	str	r0, [sp, #12]
   3a814:	b	3a820 <flatcc_json_printer_uint16@@Base+0x84>
   3a818:	movw	r0, #4
   3a81c:	str	r0, [sp, #12]
   3a820:	b	3a864 <flatcc_json_printer_uint16@@Base+0xc8>
   3a824:	ldrh	r0, [sp, #22]
   3a828:	cmp	r0, #100	; 0x64
   3a82c:	blt	3a83c <flatcc_json_printer_uint16@@Base+0xa0>
   3a830:	movw	r0, #3
   3a834:	str	r0, [sp, #12]
   3a838:	b	3a860 <flatcc_json_printer_uint16@@Base+0xc4>
   3a83c:	ldrh	r0, [sp, #22]
   3a840:	cmp	r0, #10
   3a844:	blt	3a854 <flatcc_json_printer_uint16@@Base+0xb8>
   3a848:	movw	r0, #2
   3a84c:	str	r0, [sp, #12]
   3a850:	b	3a85c <flatcc_json_printer_uint16@@Base+0xc0>
   3a854:	movw	r0, #1
   3a858:	str	r0, [sp, #12]
   3a85c:	b	3a860 <flatcc_json_printer_uint16@@Base+0xc4>
   3a860:	b	3a864 <flatcc_json_printer_uint16@@Base+0xc8>
   3a864:	ldr	r0, [sp, #12]
   3a868:	ldr	r1, [sp, #16]
   3a86c:	add	r0, r1, r0
   3a870:	str	r0, [sp, #16]
   3a874:	ldr	r0, [sp, #16]
   3a878:	movw	r1, #0
   3a87c:	strb	r1, [r0]
   3a880:	ldr	r0, [sp, #12]
   3a884:	and	r0, r0, #1
   3a888:	cmp	r0, #0
   3a88c:	beq	3a9b8 <flatcc_json_printer_uint16@@Base+0x21c>
   3a890:	ldr	r0, [sp, #12]
   3a894:	cmp	r0, #1
   3a898:	str	r0, [sp, #4]
   3a89c:	beq	3a99c <flatcc_json_printer_uint16@@Base+0x200>
   3a8a0:	b	3a8a4 <flatcc_json_printer_uint16@@Base+0x108>
   3a8a4:	ldr	r0, [sp, #4]
   3a8a8:	cmp	r0, #3
   3a8ac:	beq	3a930 <flatcc_json_printer_uint16@@Base+0x194>
   3a8b0:	b	3a8b4 <flatcc_json_printer_uint16@@Base+0x118>
   3a8b4:	ldr	r0, [sp, #4]
   3a8b8:	cmp	r0, #5
   3a8bc:	bne	3a9b4 <flatcc_json_printer_uint16@@Base+0x218>
   3a8c0:	b	3a8c4 <flatcc_json_printer_uint16@@Base+0x128>
   3a8c4:	ldr	r0, [pc, #512]	; 3aacc <flatcc_json_printer_uint16@@Base+0x330>
   3a8c8:	add	r0, pc, r0
   3a8cc:	ldr	r1, [sp, #16]
   3a8d0:	sub	r1, r1, #2
   3a8d4:	str	r1, [sp, #16]
   3a8d8:	ldrh	r1, [sp, #22]
   3a8dc:	movw	r2, #34079	; 0x851f
   3a8e0:	movt	r2, #20971	; 0x51eb
   3a8e4:	umull	r2, r3, r1, r2
   3a8e8:	lsr	r3, r3, #5
   3a8ec:	mov	ip, #100	; 0x64
   3a8f0:	mls	r1, r3, ip, r1
   3a8f4:	lsl	r1, r1, #1
   3a8f8:	add	r0, r0, r1
   3a8fc:	str	r0, [sp, #8]
   3a900:	ldrh	r0, [sp, #22]
   3a904:	movw	r1, #100	; 0x64
   3a908:	sdiv	r0, r0, r1
   3a90c:	strh	r0, [sp, #22]
   3a910:	ldr	r0, [sp, #8]
   3a914:	ldrb	r0, [r0]
   3a918:	ldr	r1, [sp, #16]
   3a91c:	strb	r0, [r1]
   3a920:	ldr	r0, [sp, #8]
   3a924:	ldrb	r0, [r0, #1]
   3a928:	ldr	r1, [sp, #16]
   3a92c:	strb	r0, [r1, #1]
   3a930:	ldr	r0, [pc, #408]	; 3aad0 <flatcc_json_printer_uint16@@Base+0x334>
   3a934:	add	r0, pc, r0
   3a938:	ldr	r1, [sp, #16]
   3a93c:	sub	r1, r1, #2
   3a940:	str	r1, [sp, #16]
   3a944:	ldrh	r1, [sp, #22]
   3a948:	movw	r2, #34079	; 0x851f
   3a94c:	movt	r2, #20971	; 0x51eb
   3a950:	umull	r2, r3, r1, r2
   3a954:	lsr	r3, r3, #5
   3a958:	mov	ip, #100	; 0x64
   3a95c:	mls	r1, r3, ip, r1
   3a960:	lsl	r1, r1, #1
   3a964:	add	r0, r0, r1
   3a968:	str	r0, [sp, #8]
   3a96c:	ldrh	r0, [sp, #22]
   3a970:	movw	r1, #100	; 0x64
   3a974:	sdiv	r0, r0, r1
   3a978:	strh	r0, [sp, #22]
   3a97c:	ldr	r0, [sp, #8]
   3a980:	ldrb	r0, [r0]
   3a984:	ldr	r1, [sp, #16]
   3a988:	strb	r0, [r1]
   3a98c:	ldr	r0, [sp, #8]
   3a990:	ldrb	r0, [r0, #1]
   3a994:	ldr	r1, [sp, #16]
   3a998:	strb	r0, [r1, #1]
   3a99c:	ldrh	r0, [sp, #22]
   3a9a0:	add	r0, r0, #48	; 0x30
   3a9a4:	ldr	r1, [sp, #16]
   3a9a8:	mvn	r2, #0
   3a9ac:	add	r1, r1, r2
   3a9b0:	strb	r0, [r1]
   3a9b4:	b	3aab8 <flatcc_json_printer_uint16@@Base+0x31c>
   3a9b8:	ldr	r0, [sp, #12]
   3a9bc:	cmp	r0, #2
   3a9c0:	str	r0, [sp]
   3a9c4:	beq	3aa48 <flatcc_json_printer_uint16@@Base+0x2ac>
   3a9c8:	b	3a9cc <flatcc_json_printer_uint16@@Base+0x230>
   3a9cc:	ldr	r0, [sp]
   3a9d0:	cmp	r0, #4
   3a9d4:	bne	3aab4 <flatcc_json_printer_uint16@@Base+0x318>
   3a9d8:	b	3a9dc <flatcc_json_printer_uint16@@Base+0x240>
   3a9dc:	ldr	r0, [pc, #224]	; 3aac4 <flatcc_json_printer_uint16@@Base+0x328>
   3a9e0:	add	r0, pc, r0
   3a9e4:	ldr	r1, [sp, #16]
   3a9e8:	sub	r1, r1, #2
   3a9ec:	str	r1, [sp, #16]
   3a9f0:	ldrh	r1, [sp, #22]
   3a9f4:	movw	r2, #34079	; 0x851f
   3a9f8:	movt	r2, #20971	; 0x51eb
   3a9fc:	umull	r2, r3, r1, r2
   3aa00:	lsr	r3, r3, #5
   3aa04:	mov	ip, #100	; 0x64
   3aa08:	mls	r1, r3, ip, r1
   3aa0c:	lsl	r1, r1, #1
   3aa10:	add	r0, r0, r1
   3aa14:	str	r0, [sp, #8]
   3aa18:	ldrh	r0, [sp, #22]
   3aa1c:	movw	r1, #100	; 0x64
   3aa20:	sdiv	r0, r0, r1
   3aa24:	strh	r0, [sp, #22]
   3aa28:	ldr	r0, [sp, #8]
   3aa2c:	ldrb	r0, [r0]
   3aa30:	ldr	r1, [sp, #16]
   3aa34:	strb	r0, [r1]
   3aa38:	ldr	r0, [sp, #8]
   3aa3c:	ldrb	r0, [r0, #1]
   3aa40:	ldr	r1, [sp, #16]
   3aa44:	strb	r0, [r1, #1]
   3aa48:	ldr	r0, [pc, #120]	; 3aac8 <flatcc_json_printer_uint16@@Base+0x32c>
   3aa4c:	add	r0, pc, r0
   3aa50:	ldr	r1, [sp, #16]
   3aa54:	sub	r1, r1, #2
   3aa58:	str	r1, [sp, #16]
   3aa5c:	ldrh	r1, [sp, #22]
   3aa60:	movw	r2, #34079	; 0x851f
   3aa64:	movt	r2, #20971	; 0x51eb
   3aa68:	umull	r2, r3, r1, r2
   3aa6c:	lsr	r3, r3, #5
   3aa70:	mov	ip, #100	; 0x64
   3aa74:	mls	r1, r3, ip, r1
   3aa78:	lsl	r1, r1, #1
   3aa7c:	add	r0, r0, r1
   3aa80:	str	r0, [sp, #8]
   3aa84:	ldrh	r0, [sp, #22]
   3aa88:	movw	r1, #100	; 0x64
   3aa8c:	sdiv	r0, r0, r1
   3aa90:	strh	r0, [sp, #22]
   3aa94:	ldr	r0, [sp, #8]
   3aa98:	ldrb	r0, [r0]
   3aa9c:	ldr	r1, [sp, #16]
   3aaa0:	strb	r0, [r1]
   3aaa4:	ldr	r0, [sp, #8]
   3aaa8:	ldrb	r0, [r0, #1]
   3aaac:	ldr	r1, [sp, #16]
   3aab0:	strb	r0, [r1, #1]
   3aab4:	b	3aab8 <flatcc_json_printer_uint16@@Base+0x31c>
   3aab8:	ldr	r0, [sp, #12]
   3aabc:	add	sp, sp, #24
   3aac0:	bx	lr
   3aac4:	andeq	r3, r1, ip, ror r7
   3aac8:	andeq	r3, r1, r0, lsl r7
   3aacc:	muleq	r1, r4, r8
   3aad0:	andeq	r3, r1, r8, lsr #16

0003aad4 <flatcc_json_printer_uint32@@Base>:
   3aad4:	push	{fp, lr}
   3aad8:	mov	fp, sp
   3aadc:	sub	sp, sp, #8
   3aae0:	str	r0, [sp, #4]
   3aae4:	str	r1, [sp]
   3aae8:	ldr	r0, [sp]
   3aaec:	ldr	r1, [sp, #4]
   3aaf0:	ldr	r1, [r1, #20]
   3aaf4:	bl	3ab10 <flatcc_json_printer_uint32@@Base+0x3c>
   3aaf8:	ldr	r1, [sp, #4]
   3aafc:	ldr	r2, [r1, #20]
   3ab00:	add	r0, r2, r0
   3ab04:	str	r0, [r1, #20]
   3ab08:	mov	sp, fp
   3ab0c:	pop	{fp, pc}
   3ab10:	sub	sp, sp, #24
   3ab14:	str	r0, [sp, #20]
   3ab18:	str	r1, [sp, #16]
   3ab1c:	movw	r0, #0
   3ab20:	str	r0, [sp, #12]
   3ab24:	ldr	r0, [sp, #20]
   3ab28:	movw	r1, #10000	; 0x2710
   3ab2c:	cmp	r0, r1
   3ab30:	bcc	3abd8 <flatcc_json_printer_uint32@@Base+0x104>
   3ab34:	ldr	r0, [pc, #1448]	; 3b0e4 <flatcc_json_printer_uint32@@Base+0x610>
   3ab38:	ldr	r1, [sp, #20]
   3ab3c:	cmp	r1, r0
   3ab40:	bcc	3ab8c <flatcc_json_printer_uint32@@Base+0xb8>
   3ab44:	ldr	r0, [pc, #1444]	; 3b0f0 <flatcc_json_printer_uint32@@Base+0x61c>
   3ab48:	ldr	r1, [sp, #20]
   3ab4c:	cmp	r1, r0
   3ab50:	bcc	3ab60 <flatcc_json_printer_uint32@@Base+0x8c>
   3ab54:	movw	r0, #10
   3ab58:	str	r0, [sp, #12]
   3ab5c:	b	3ab88 <flatcc_json_printer_uint32@@Base+0xb4>
   3ab60:	ldr	r0, [pc, #1420]	; 3b0f4 <flatcc_json_printer_uint32@@Base+0x620>
   3ab64:	ldr	r1, [sp, #20]
   3ab68:	cmp	r1, r0
   3ab6c:	bcc	3ab7c <flatcc_json_printer_uint32@@Base+0xa8>
   3ab70:	movw	r0, #9
   3ab74:	str	r0, [sp, #12]
   3ab78:	b	3ab84 <flatcc_json_printer_uint32@@Base+0xb0>
   3ab7c:	movw	r0, #8
   3ab80:	str	r0, [sp, #12]
   3ab84:	b	3ab88 <flatcc_json_printer_uint32@@Base+0xb4>
   3ab88:	b	3abd4 <flatcc_json_printer_uint32@@Base+0x100>
   3ab8c:	ldr	r0, [pc, #1364]	; 3b0e8 <flatcc_json_printer_uint32@@Base+0x614>
   3ab90:	ldr	r1, [sp, #20]
   3ab94:	cmp	r1, r0
   3ab98:	bcc	3aba8 <flatcc_json_printer_uint32@@Base+0xd4>
   3ab9c:	movw	r0, #7
   3aba0:	str	r0, [sp, #12]
   3aba4:	b	3abd0 <flatcc_json_printer_uint32@@Base+0xfc>
   3aba8:	ldr	r0, [pc, #1340]	; 3b0ec <flatcc_json_printer_uint32@@Base+0x618>
   3abac:	ldr	r1, [sp, #20]
   3abb0:	cmp	r1, r0
   3abb4:	bcc	3abc4 <flatcc_json_printer_uint32@@Base+0xf0>
   3abb8:	movw	r0, #6
   3abbc:	str	r0, [sp, #12]
   3abc0:	b	3abcc <flatcc_json_printer_uint32@@Base+0xf8>
   3abc4:	movw	r0, #5
   3abc8:	str	r0, [sp, #12]
   3abcc:	b	3abd0 <flatcc_json_printer_uint32@@Base+0xfc>
   3abd0:	b	3abd4 <flatcc_json_printer_uint32@@Base+0x100>
   3abd4:	b	3ac30 <flatcc_json_printer_uint32@@Base+0x15c>
   3abd8:	ldr	r0, [sp, #20]
   3abdc:	cmp	r0, #100	; 0x64
   3abe0:	bcc	3ac08 <flatcc_json_printer_uint32@@Base+0x134>
   3abe4:	ldr	r0, [sp, #20]
   3abe8:	cmp	r0, #1000	; 0x3e8
   3abec:	bcc	3abfc <flatcc_json_printer_uint32@@Base+0x128>
   3abf0:	movw	r0, #4
   3abf4:	str	r0, [sp, #12]
   3abf8:	b	3ac04 <flatcc_json_printer_uint32@@Base+0x130>
   3abfc:	movw	r0, #3
   3ac00:	str	r0, [sp, #12]
   3ac04:	b	3ac2c <flatcc_json_printer_uint32@@Base+0x158>
   3ac08:	ldr	r0, [sp, #20]
   3ac0c:	cmp	r0, #10
   3ac10:	bcc	3ac20 <flatcc_json_printer_uint32@@Base+0x14c>
   3ac14:	movw	r0, #2
   3ac18:	str	r0, [sp, #12]
   3ac1c:	b	3ac28 <flatcc_json_printer_uint32@@Base+0x154>
   3ac20:	movw	r0, #1
   3ac24:	str	r0, [sp, #12]
   3ac28:	b	3ac2c <flatcc_json_printer_uint32@@Base+0x158>
   3ac2c:	b	3ac30 <flatcc_json_printer_uint32@@Base+0x15c>
   3ac30:	ldr	r0, [sp, #12]
   3ac34:	ldr	r1, [sp, #16]
   3ac38:	add	r0, r1, r0
   3ac3c:	str	r0, [sp, #16]
   3ac40:	ldr	r0, [sp, #16]
   3ac44:	movw	r1, #0
   3ac48:	strb	r1, [r0]
   3ac4c:	ldr	r0, [sp, #12]
   3ac50:	and	r0, r0, #1
   3ac54:	cmp	r0, #0
   3ac58:	beq	3ae70 <flatcc_json_printer_uint32@@Base+0x39c>
   3ac5c:	ldr	r0, [sp, #12]
   3ac60:	sub	r0, r0, #1
   3ac64:	cmp	r0, #8
   3ac68:	str	r0, [sp, #4]
   3ac6c:	bhi	3ae6c <flatcc_json_printer_uint32@@Base+0x398>
   3ac70:	add	r0, pc, #8
   3ac74:	ldr	r1, [sp, #4]
   3ac78:	ldr	r2, [r0, r1, lsl #2]
   3ac7c:	add	pc, r0, r2
   3ac80:	ldrdeq	r0, [r0], -r4
   3ac84:	andeq	r0, r0, ip, ror #3
   3ac88:	andeq	r0, r0, r8, ror #2
   3ac8c:	andeq	r0, r0, ip, ror #3
   3ac90:	strdeq	r0, [r0], -ip
   3ac94:	andeq	r0, r0, ip, ror #3
   3ac98:	muleq	r0, r0, r0
   3ac9c:	andeq	r0, r0, ip, ror #3
   3aca0:	andeq	r0, r0, r4, lsr #32
   3aca4:	ldr	r0, [pc, #1120]	; 3b10c <flatcc_json_printer_uint32@@Base+0x638>
   3aca8:	add	r0, pc, r0
   3acac:	ldr	r1, [sp, #16]
   3acb0:	sub	r1, r1, #2
   3acb4:	str	r1, [sp, #16]
   3acb8:	ldr	r1, [sp, #20]
   3acbc:	movw	r2, #34079	; 0x851f
   3acc0:	movt	r2, #20971	; 0x51eb
   3acc4:	umull	r2, r3, r1, r2
   3acc8:	lsr	r3, r3, #5
   3accc:	mov	ip, #100	; 0x64
   3acd0:	mls	r1, r3, ip, r1
   3acd4:	lsl	r1, r1, #1
   3acd8:	add	r0, r0, r1
   3acdc:	str	r0, [sp, #8]
   3ace0:	ldr	r0, [sp, #20]
   3ace4:	movw	r1, #100	; 0x64
   3ace8:	udiv	r0, r0, r1
   3acec:	str	r0, [sp, #20]
   3acf0:	ldr	r0, [sp, #8]
   3acf4:	ldrb	r0, [r0]
   3acf8:	ldr	r1, [sp, #16]
   3acfc:	strb	r0, [r1]
   3ad00:	ldr	r0, [sp, #8]
   3ad04:	ldrb	r0, [r0, #1]
   3ad08:	ldr	r1, [sp, #16]
   3ad0c:	strb	r0, [r1, #1]
   3ad10:	ldr	r0, [pc, #1016]	; 3b110 <flatcc_json_printer_uint32@@Base+0x63c>
   3ad14:	add	r0, pc, r0
   3ad18:	ldr	r1, [sp, #16]
   3ad1c:	sub	r1, r1, #2
   3ad20:	str	r1, [sp, #16]
   3ad24:	ldr	r1, [sp, #20]
   3ad28:	movw	r2, #34079	; 0x851f
   3ad2c:	movt	r2, #20971	; 0x51eb
   3ad30:	umull	r2, r3, r1, r2
   3ad34:	lsr	r3, r3, #5
   3ad38:	mov	ip, #100	; 0x64
   3ad3c:	mls	r1, r3, ip, r1
   3ad40:	lsl	r1, r1, #1
   3ad44:	add	r0, r0, r1
   3ad48:	str	r0, [sp, #8]
   3ad4c:	ldr	r0, [sp, #20]
   3ad50:	movw	r1, #100	; 0x64
   3ad54:	udiv	r0, r0, r1
   3ad58:	str	r0, [sp, #20]
   3ad5c:	ldr	r0, [sp, #8]
   3ad60:	ldrb	r0, [r0]
   3ad64:	ldr	r1, [sp, #16]
   3ad68:	strb	r0, [r1]
   3ad6c:	ldr	r0, [sp, #8]
   3ad70:	ldrb	r0, [r0, #1]
   3ad74:	ldr	r1, [sp, #16]
   3ad78:	strb	r0, [r1, #1]
   3ad7c:	ldr	r0, [pc, #912]	; 3b114 <flatcc_json_printer_uint32@@Base+0x640>
   3ad80:	add	r0, pc, r0
   3ad84:	ldr	r1, [sp, #16]
   3ad88:	sub	r1, r1, #2
   3ad8c:	str	r1, [sp, #16]
   3ad90:	ldr	r1, [sp, #20]
   3ad94:	movw	r2, #34079	; 0x851f
   3ad98:	movt	r2, #20971	; 0x51eb
   3ad9c:	umull	r2, r3, r1, r2
   3ada0:	lsr	r3, r3, #5
   3ada4:	mov	ip, #100	; 0x64
   3ada8:	mls	r1, r3, ip, r1
   3adac:	lsl	r1, r1, #1
   3adb0:	add	r0, r0, r1
   3adb4:	str	r0, [sp, #8]
   3adb8:	ldr	r0, [sp, #20]
   3adbc:	movw	r1, #100	; 0x64
   3adc0:	udiv	r0, r0, r1
   3adc4:	str	r0, [sp, #20]
   3adc8:	ldr	r0, [sp, #8]
   3adcc:	ldrb	r0, [r0]
   3add0:	ldr	r1, [sp, #16]
   3add4:	strb	r0, [r1]
   3add8:	ldr	r0, [sp, #8]
   3addc:	ldrb	r0, [r0, #1]
   3ade0:	ldr	r1, [sp, #16]
   3ade4:	strb	r0, [r1, #1]
   3ade8:	ldr	r0, [pc, #808]	; 3b118 <flatcc_json_printer_uint32@@Base+0x644>
   3adec:	add	r0, pc, r0
   3adf0:	ldr	r1, [sp, #16]
   3adf4:	sub	r1, r1, #2
   3adf8:	str	r1, [sp, #16]
   3adfc:	ldr	r1, [sp, #20]
   3ae00:	movw	r2, #34079	; 0x851f
   3ae04:	movt	r2, #20971	; 0x51eb
   3ae08:	umull	r2, r3, r1, r2
   3ae0c:	lsr	r3, r3, #5
   3ae10:	mov	ip, #100	; 0x64
   3ae14:	mls	r1, r3, ip, r1
   3ae18:	lsl	r1, r1, #1
   3ae1c:	add	r0, r0, r1
   3ae20:	str	r0, [sp, #8]
   3ae24:	ldr	r0, [sp, #20]
   3ae28:	movw	r1, #100	; 0x64
   3ae2c:	udiv	r0, r0, r1
   3ae30:	str	r0, [sp, #20]
   3ae34:	ldr	r0, [sp, #8]
   3ae38:	ldrb	r0, [r0]
   3ae3c:	ldr	r1, [sp, #16]
   3ae40:	strb	r0, [r1]
   3ae44:	ldr	r0, [sp, #8]
   3ae48:	ldrb	r0, [r0, #1]
   3ae4c:	ldr	r1, [sp, #16]
   3ae50:	strb	r0, [r1, #1]
   3ae54:	ldr	r0, [sp, #20]
   3ae58:	add	r0, r0, #48	; 0x30
   3ae5c:	ldr	r1, [sp, #16]
   3ae60:	mvn	r2, #0
   3ae64:	add	r1, r1, r2
   3ae68:	strb	r0, [r1]
   3ae6c:	b	3b0d8 <flatcc_json_printer_uint32@@Base+0x604>
   3ae70:	ldr	r0, [sp, #12]
   3ae74:	sub	r0, r0, #2
   3ae78:	cmp	r0, #8
   3ae7c:	str	r0, [sp]
   3ae80:	bhi	3b0d4 <flatcc_json_printer_uint32@@Base+0x600>
   3ae84:	add	r0, pc, #8
   3ae88:	ldr	r1, [sp]
   3ae8c:	ldr	r2, [r0, r1, lsl #2]
   3ae90:	add	pc, r0, r2
   3ae94:	ldrdeq	r0, [r0], -r4
   3ae98:	andeq	r0, r0, r0, asr #4
   3ae9c:	andeq	r0, r0, r8, ror #2
   3aea0:	andeq	r0, r0, r0, asr #4
   3aea4:	strdeq	r0, [r0], -ip
   3aea8:	andeq	r0, r0, r0, asr #4
   3aeac:	muleq	r0, r0, r0
   3aeb0:	andeq	r0, r0, r0, asr #4
   3aeb4:	andeq	r0, r0, r4, lsr #32
   3aeb8:	ldr	r0, [pc, #568]	; 3b0f8 <flatcc_json_printer_uint32@@Base+0x624>
   3aebc:	add	r0, pc, r0
   3aec0:	ldr	r1, [sp, #16]
   3aec4:	sub	r1, r1, #2
   3aec8:	str	r1, [sp, #16]
   3aecc:	ldr	r1, [sp, #20]
   3aed0:	movw	r2, #34079	; 0x851f
   3aed4:	movt	r2, #20971	; 0x51eb
   3aed8:	umull	r2, r3, r1, r2
   3aedc:	lsr	r3, r3, #5
   3aee0:	mov	ip, #100	; 0x64
   3aee4:	mls	r1, r3, ip, r1
   3aee8:	lsl	r1, r1, #1
   3aeec:	add	r0, r0, r1
   3aef0:	str	r0, [sp, #8]
   3aef4:	ldr	r0, [sp, #20]
   3aef8:	movw	r1, #100	; 0x64
   3aefc:	udiv	r0, r0, r1
   3af00:	str	r0, [sp, #20]
   3af04:	ldr	r0, [sp, #8]
   3af08:	ldrb	r0, [r0]
   3af0c:	ldr	r1, [sp, #16]
   3af10:	strb	r0, [r1]
   3af14:	ldr	r0, [sp, #8]
   3af18:	ldrb	r0, [r0, #1]
   3af1c:	ldr	r1, [sp, #16]
   3af20:	strb	r0, [r1, #1]
   3af24:	ldr	r0, [pc, #464]	; 3b0fc <flatcc_json_printer_uint32@@Base+0x628>
   3af28:	add	r0, pc, r0
   3af2c:	ldr	r1, [sp, #16]
   3af30:	sub	r1, r1, #2
   3af34:	str	r1, [sp, #16]
   3af38:	ldr	r1, [sp, #20]
   3af3c:	movw	r2, #34079	; 0x851f
   3af40:	movt	r2, #20971	; 0x51eb
   3af44:	umull	r2, r3, r1, r2
   3af48:	lsr	r3, r3, #5
   3af4c:	mov	ip, #100	; 0x64
   3af50:	mls	r1, r3, ip, r1
   3af54:	lsl	r1, r1, #1
   3af58:	add	r0, r0, r1
   3af5c:	str	r0, [sp, #8]
   3af60:	ldr	r0, [sp, #20]
   3af64:	movw	r1, #100	; 0x64
   3af68:	udiv	r0, r0, r1
   3af6c:	str	r0, [sp, #20]
   3af70:	ldr	r0, [sp, #8]
   3af74:	ldrb	r0, [r0]
   3af78:	ldr	r1, [sp, #16]
   3af7c:	strb	r0, [r1]
   3af80:	ldr	r0, [sp, #8]
   3af84:	ldrb	r0, [r0, #1]
   3af88:	ldr	r1, [sp, #16]
   3af8c:	strb	r0, [r1, #1]
   3af90:	ldr	r0, [pc, #360]	; 3b100 <flatcc_json_printer_uint32@@Base+0x62c>
   3af94:	add	r0, pc, r0
   3af98:	ldr	r1, [sp, #16]
   3af9c:	sub	r1, r1, #2
   3afa0:	str	r1, [sp, #16]
   3afa4:	ldr	r1, [sp, #20]
   3afa8:	movw	r2, #34079	; 0x851f
   3afac:	movt	r2, #20971	; 0x51eb
   3afb0:	umull	r2, r3, r1, r2
   3afb4:	lsr	r3, r3, #5
   3afb8:	mov	ip, #100	; 0x64
   3afbc:	mls	r1, r3, ip, r1
   3afc0:	lsl	r1, r1, #1
   3afc4:	add	r0, r0, r1
   3afc8:	str	r0, [sp, #8]
   3afcc:	ldr	r0, [sp, #20]
   3afd0:	movw	r1, #100	; 0x64
   3afd4:	udiv	r0, r0, r1
   3afd8:	str	r0, [sp, #20]
   3afdc:	ldr	r0, [sp, #8]
   3afe0:	ldrb	r0, [r0]
   3afe4:	ldr	r1, [sp, #16]
   3afe8:	strb	r0, [r1]
   3afec:	ldr	r0, [sp, #8]
   3aff0:	ldrb	r0, [r0, #1]
   3aff4:	ldr	r1, [sp, #16]
   3aff8:	strb	r0, [r1, #1]
   3affc:	ldr	r0, [pc, #256]	; 3b104 <flatcc_json_printer_uint32@@Base+0x630>
   3b000:	add	r0, pc, r0
   3b004:	ldr	r1, [sp, #16]
   3b008:	sub	r1, r1, #2
   3b00c:	str	r1, [sp, #16]
   3b010:	ldr	r1, [sp, #20]
   3b014:	movw	r2, #34079	; 0x851f
   3b018:	movt	r2, #20971	; 0x51eb
   3b01c:	umull	r2, r3, r1, r2
   3b020:	lsr	r3, r3, #5
   3b024:	mov	ip, #100	; 0x64
   3b028:	mls	r1, r3, ip, r1
   3b02c:	lsl	r1, r1, #1
   3b030:	add	r0, r0, r1
   3b034:	str	r0, [sp, #8]
   3b038:	ldr	r0, [sp, #20]
   3b03c:	movw	r1, #100	; 0x64
   3b040:	udiv	r0, r0, r1
   3b044:	str	r0, [sp, #20]
   3b048:	ldr	r0, [sp, #8]
   3b04c:	ldrb	r0, [r0]
   3b050:	ldr	r1, [sp, #16]
   3b054:	strb	r0, [r1]
   3b058:	ldr	r0, [sp, #8]
   3b05c:	ldrb	r0, [r0, #1]
   3b060:	ldr	r1, [sp, #16]
   3b064:	strb	r0, [r1, #1]
   3b068:	ldr	r0, [pc, #152]	; 3b108 <flatcc_json_printer_uint32@@Base+0x634>
   3b06c:	add	r0, pc, r0
   3b070:	ldr	r1, [sp, #16]
   3b074:	sub	r1, r1, #2
   3b078:	str	r1, [sp, #16]
   3b07c:	ldr	r1, [sp, #20]
   3b080:	movw	r2, #34079	; 0x851f
   3b084:	movt	r2, #20971	; 0x51eb
   3b088:	umull	r2, r3, r1, r2
   3b08c:	lsr	r3, r3, #5
   3b090:	mov	ip, #100	; 0x64
   3b094:	mls	r1, r3, ip, r1
   3b098:	lsl	r1, r1, #1
   3b09c:	add	r0, r0, r1
   3b0a0:	str	r0, [sp, #8]
   3b0a4:	ldr	r0, [sp, #20]
   3b0a8:	movw	r1, #100	; 0x64
   3b0ac:	udiv	r0, r0, r1
   3b0b0:	str	r0, [sp, #20]
   3b0b4:	ldr	r0, [sp, #8]
   3b0b8:	ldrb	r0, [r0]
   3b0bc:	ldr	r1, [sp, #16]
   3b0c0:	strb	r0, [r1]
   3b0c4:	ldr	r0, [sp, #8]
   3b0c8:	ldrb	r0, [r0, #1]
   3b0cc:	ldr	r1, [sp, #16]
   3b0d0:	strb	r0, [r1, #1]
   3b0d4:	b	3b0d8 <flatcc_json_printer_uint32@@Base+0x604>
   3b0d8:	ldr	r0, [sp, #12]
   3b0dc:	add	sp, sp, #24
   3b0e0:	bx	lr
   3b0e4:	addseq	r9, r8, r0, lsl #13
   3b0e8:	andeq	r4, pc, r0, asr #4
   3b0ec:	andeq	r8, r1, r0, lsr #13
   3b0f0:	blcc	fe6ed8f8 <__bss_end__@@Base+0xfe68e52c>
   3b0f4:	ldrbeq	lr, [r5, #256]!	; 0x100
   3b0f8:	andeq	r3, r1, r0, lsr #5
   3b0fc:	andeq	r3, r1, r4, lsr r2
   3b100:	andeq	r3, r1, r8, asr #3
   3b104:	andeq	r3, r1, ip, asr r1
   3b108:	strdeq	r3, [r1], -r0
   3b10c:			; <UNDEFINED> instruction: 0x000134b4
   3b110:	andeq	r3, r1, r8, asr #8
   3b114:	ldrdeq	r3, [r1], -ip
   3b118:	andeq	r3, r1, r0, ror r3

0003b11c <flatcc_json_printer_uint64@@Base>:
   3b11c:	push	{fp, lr}
   3b120:	mov	fp, sp
   3b124:	sub	sp, sp, #16
   3b128:	str	r0, [fp, #-4]
   3b12c:	str	r3, [sp, #4]
   3b130:	str	r2, [sp]
   3b134:	ldr	r0, [sp]
   3b138:	ldr	r1, [sp, #4]
   3b13c:	ldr	r2, [fp, #-4]
   3b140:	ldr	r2, [r2, #20]
   3b144:	bl	3b160 <flatcc_json_printer_uint64@@Base+0x44>
   3b148:	ldr	r1, [fp, #-4]
   3b14c:	ldr	r2, [r1, #20]
   3b150:	add	r0, r2, r0
   3b154:	str	r0, [r1, #20]
   3b158:	mov	sp, fp
   3b15c:	pop	{fp, pc}
   3b160:	push	{fp, lr}
   3b164:	mov	fp, sp
   3b168:	sub	sp, sp, #280	; 0x118
   3b16c:	str	r0, [fp, #-16]
   3b170:	str	r1, [fp, #-12]
   3b174:	str	r2, [fp, #-20]	; 0xffffffec
   3b178:	mov	r0, #0
   3b17c:	str	r0, [fp, #-24]	; 0xffffffe8
   3b180:	str	r0, [fp, #-36]	; 0xffffffdc
   3b184:	movw	r0, #51712	; 0xca00
   3b188:	movt	r0, #15258	; 0x3b9a
   3b18c:	str	r0, [fp, #-40]	; 0xffffffd8
   3b190:	ldr	r0, [fp, #-16]
   3b194:	ldr	r1, [fp, #-12]
   3b198:	movw	r2, #51711	; 0xc9ff
   3b19c:	movt	r2, #15258	; 0x3b9a
   3b1a0:	subs	r0, r2, r0
   3b1a4:	rscs	r1, r1, #0
   3b1a8:	bcc	3b1c4 <flatcc_json_printer_uint64@@Base+0xa8>
   3b1ac:	b	3b1b0 <flatcc_json_printer_uint64@@Base+0x94>
   3b1b0:	ldr	r0, [fp, #-16]
   3b1b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b1b8:	bl	3ab10 <flatcc_json_printer_uint32@@Base+0x3c>
   3b1bc:	str	r0, [fp, #-4]
   3b1c0:	b	3bc94 <flatcc_json_printer_uint64@@Base+0xb78>
   3b1c4:	ldr	r0, [fp, #-16]
   3b1c8:	ldr	r1, [fp, #-12]
   3b1cc:	movw	r2, #40960	; 0xa000
   3b1d0:	movt	r2, #20082	; 0x4e72
   3b1d4:	subs	r0, r0, r2
   3b1d8:	movw	r2, #2328	; 0x918
   3b1dc:	sbcs	r1, r1, r2
   3b1e0:	bcc	3b334 <flatcc_json_printer_uint64@@Base+0x218>
   3b1e4:	b	3b1e8 <flatcc_json_printer_uint64@@Base+0xcc>
   3b1e8:	ldr	r0, [fp, #-16]
   3b1ec:	ldr	r1, [fp, #-12]
   3b1f0:	movw	r2, #0
   3b1f4:	movt	r2, #28609	; 0x6fc1
   3b1f8:	subs	r0, r0, r2
   3b1fc:	movw	r2, #34546	; 0x86f2
   3b200:	movt	r2, #35	; 0x23
   3b204:	sbcs	r1, r1, r2
   3b208:	bcc	3b2bc <flatcc_json_printer_uint64@@Base+0x1a0>
   3b20c:	b	3b210 <flatcc_json_printer_uint64@@Base+0xf4>
   3b210:	ldr	r0, [fp, #-16]
   3b214:	ldr	r1, [fp, #-12]
   3b218:	movw	r2, #0
   3b21c:	movt	r2, #42852	; 0xa764
   3b220:	subs	r0, r0, r2
   3b224:	movw	r2, #46771	; 0xb6b3
   3b228:	movt	r2, #3552	; 0xde0
   3b22c:	sbcs	r1, r1, r2
   3b230:	bcc	3b278 <flatcc_json_printer_uint64@@Base+0x15c>
   3b234:	b	3b238 <flatcc_json_printer_uint64@@Base+0x11c>
   3b238:	ldr	r0, [fp, #-16]
   3b23c:	ldr	r1, [fp, #-12]
   3b240:	movw	r2, #0
   3b244:	movt	r2, #35304	; 0x89e8
   3b248:	subs	r0, r0, r2
   3b24c:	movw	r2, #8964	; 0x2304
   3b250:	movt	r2, #35527	; 0x8ac7
   3b254:	sbcs	r1, r1, r2
   3b258:	bcc	3b26c <flatcc_json_printer_uint64@@Base+0x150>
   3b25c:	b	3b260 <flatcc_json_printer_uint64@@Base+0x144>
   3b260:	movw	r0, #20
   3b264:	str	r0, [fp, #-24]	; 0xffffffe8
   3b268:	b	3b274 <flatcc_json_printer_uint64@@Base+0x158>
   3b26c:	movw	r0, #19
   3b270:	str	r0, [fp, #-24]	; 0xffffffe8
   3b274:	b	3b2b8 <flatcc_json_printer_uint64@@Base+0x19c>
   3b278:	ldr	r0, [fp, #-16]
   3b27c:	ldr	r1, [fp, #-12]
   3b280:	movw	r2, #0
   3b284:	movt	r2, #23946	; 0x5d8a
   3b288:	subs	r0, r0, r2
   3b28c:	movw	r2, #17784	; 0x4578
   3b290:	movt	r2, #355	; 0x163
   3b294:	sbcs	r1, r1, r2
   3b298:	bcc	3b2ac <flatcc_json_printer_uint64@@Base+0x190>
   3b29c:	b	3b2a0 <flatcc_json_printer_uint64@@Base+0x184>
   3b2a0:	movw	r0, #18
   3b2a4:	str	r0, [fp, #-24]	; 0xffffffe8
   3b2a8:	b	3b2b4 <flatcc_json_printer_uint64@@Base+0x198>
   3b2ac:	movw	r0, #17
   3b2b0:	str	r0, [fp, #-24]	; 0xffffffe8
   3b2b4:	b	3b2b8 <flatcc_json_printer_uint64@@Base+0x19c>
   3b2b8:	b	3b330 <flatcc_json_printer_uint64@@Base+0x214>
   3b2bc:	ldr	r0, [fp, #-16]
   3b2c0:	ldr	r1, [fp, #-12]
   3b2c4:	movw	r2, #32768	; 0x8000
   3b2c8:	movt	r2, #42182	; 0xa4c6
   3b2cc:	subs	r0, r0, r2
   3b2d0:	movw	r2, #36222	; 0x8d7e
   3b2d4:	movt	r2, #3
   3b2d8:	sbcs	r1, r1, r2
   3b2dc:	bcc	3b2f0 <flatcc_json_printer_uint64@@Base+0x1d4>
   3b2e0:	b	3b2e4 <flatcc_json_printer_uint64@@Base+0x1c8>
   3b2e4:	movw	r0, #16
   3b2e8:	str	r0, [fp, #-24]	; 0xffffffe8
   3b2ec:	b	3b32c <flatcc_json_printer_uint64@@Base+0x210>
   3b2f0:	ldr	r0, [fp, #-16]
   3b2f4:	ldr	r1, [fp, #-12]
   3b2f8:	movw	r2, #16384	; 0x4000
   3b2fc:	movt	r2, #4218	; 0x107a
   3b300:	subs	r0, r0, r2
   3b304:	movw	r2, #23283	; 0x5af3
   3b308:	sbcs	r1, r1, r2
   3b30c:	bcc	3b320 <flatcc_json_printer_uint64@@Base+0x204>
   3b310:	b	3b314 <flatcc_json_printer_uint64@@Base+0x1f8>
   3b314:	movw	r0, #15
   3b318:	str	r0, [fp, #-24]	; 0xffffffe8
   3b31c:	b	3b328 <flatcc_json_printer_uint64@@Base+0x20c>
   3b320:	movw	r0, #14
   3b324:	str	r0, [fp, #-24]	; 0xffffffe8
   3b328:	b	3b32c <flatcc_json_printer_uint64@@Base+0x210>
   3b32c:	b	3b330 <flatcc_json_printer_uint64@@Base+0x214>
   3b330:	b	3b3c8 <flatcc_json_printer_uint64@@Base+0x2ac>
   3b334:	ldr	r0, [fp, #-16]
   3b338:	ldr	r1, [fp, #-12]
   3b33c:	movw	r2, #59392	; 0xe800
   3b340:	movt	r2, #18550	; 0x4876
   3b344:	subs	r0, r0, r2
   3b348:	sbcs	r1, r1, #23
   3b34c:	bcc	3b38c <flatcc_json_printer_uint64@@Base+0x270>
   3b350:	b	3b354 <flatcc_json_printer_uint64@@Base+0x238>
   3b354:	ldr	r0, [fp, #-16]
   3b358:	ldr	r1, [fp, #-12]
   3b35c:	movw	r2, #4096	; 0x1000
   3b360:	movt	r2, #54437	; 0xd4a5
   3b364:	subs	r0, r0, r2
   3b368:	sbcs	r1, r1, #232	; 0xe8
   3b36c:	bcc	3b380 <flatcc_json_printer_uint64@@Base+0x264>
   3b370:	b	3b374 <flatcc_json_printer_uint64@@Base+0x258>
   3b374:	movw	r0, #13
   3b378:	str	r0, [fp, #-24]	; 0xffffffe8
   3b37c:	b	3b388 <flatcc_json_printer_uint64@@Base+0x26c>
   3b380:	movw	r0, #12
   3b384:	str	r0, [fp, #-24]	; 0xffffffe8
   3b388:	b	3b3c4 <flatcc_json_printer_uint64@@Base+0x2a8>
   3b38c:	ldr	r0, [fp, #-16]
   3b390:	ldr	r1, [fp, #-12]
   3b394:	movw	r2, #58368	; 0xe400
   3b398:	movt	r2, #21515	; 0x540b
   3b39c:	subs	r0, r0, r2
   3b3a0:	sbcs	r1, r1, #2
   3b3a4:	bcc	3b3b8 <flatcc_json_printer_uint64@@Base+0x29c>
   3b3a8:	b	3b3ac <flatcc_json_printer_uint64@@Base+0x290>
   3b3ac:	movw	r0, #11
   3b3b0:	str	r0, [fp, #-24]	; 0xffffffe8
   3b3b4:	b	3b3c0 <flatcc_json_printer_uint64@@Base+0x2a4>
   3b3b8:	movw	r0, #10
   3b3bc:	str	r0, [fp, #-24]	; 0xffffffe8
   3b3c0:	b	3b3c4 <flatcc_json_printer_uint64@@Base+0x2a8>
   3b3c4:	b	3b3c8 <flatcc_json_printer_uint64@@Base+0x2ac>
   3b3c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b3cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b3d0:	add	r0, r1, r0
   3b3d4:	str	r0, [fp, #-20]	; 0xffffffec
   3b3d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b3dc:	movw	r1, #0
   3b3e0:	strb	r1, [r0]
   3b3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b3e8:	and	r0, r0, #1
   3b3ec:	cmp	r0, #0
   3b3f0:	beq	3b72c <flatcc_json_printer_uint64@@Base+0x610>
   3b3f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b3f8:	sub	r0, r0, #11
   3b3fc:	cmp	r0, #8
   3b400:	str	r0, [fp, #-44]	; 0xffffffd4
   3b404:	bhi	3b728 <flatcc_json_printer_uint64@@Base+0x60c>
   3b408:	add	r0, pc, #8
   3b40c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3b410:	ldr	r2, [r0, r1, lsl #2]
   3b414:	add	pc, r0, r2
   3b418:	andeq	r0, r0, r4, lsr r2
   3b41c:	andeq	r0, r0, r0, lsl r3
   3b420:			; <UNDEFINED> instruction: 0x000001b0
   3b424:	andeq	r0, r0, r0, lsl r3
   3b428:	andeq	r0, r0, ip, lsr #2
   3b42c:	andeq	r0, r0, r0, lsl r3
   3b430:	andeq	r0, r0, r8, lsr #1
   3b434:	andeq	r0, r0, r0, lsl r3
   3b438:	andeq	r0, r0, r4, lsr #32
   3b43c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b440:	sub	r0, r0, #2
   3b444:	str	r0, [fp, #-20]	; 0xffffffec
   3b448:	ldr	r0, [fp, #-16]
   3b44c:	ldr	r1, [fp, #-12]
   3b450:	mov	r2, #100	; 0x64
   3b454:	mov	r3, #0
   3b458:	str	r2, [fp, #-48]	; 0xffffffd0
   3b45c:	str	r3, [fp, #-52]	; 0xffffffcc
   3b460:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b464:	ldr	r3, [pc, #2100]	; 3bca0 <flatcc_json_printer_uint64@@Base+0xb84>
   3b468:	add	r3, pc, r3
   3b46c:	add	r2, r3, r2, lsl #1
   3b470:	str	r2, [fp, #-28]	; 0xffffffe4
   3b474:	ldr	r2, [fp, #-16]
   3b478:	ldr	r3, [fp, #-12]
   3b47c:	str	r0, [fp, #-56]	; 0xffffffc8
   3b480:	mov	r0, r2
   3b484:	str	r1, [fp, #-60]	; 0xffffffc4
   3b488:	mov	r1, r3
   3b48c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3b490:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3b494:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b498:	str	r1, [fp, #-12]
   3b49c:	str	r0, [fp, #-16]
   3b4a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b4a4:	ldrb	r0, [r0]
   3b4a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b4ac:	strb	r0, [r1]
   3b4b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b4b4:	ldrb	r0, [r0, #1]
   3b4b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b4bc:	strb	r0, [r1, #1]
   3b4c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b4c4:	sub	r0, r0, #2
   3b4c8:	str	r0, [fp, #-20]	; 0xffffffec
   3b4cc:	ldr	r0, [fp, #-16]
   3b4d0:	ldr	r1, [fp, #-12]
   3b4d4:	mov	r2, #100	; 0x64
   3b4d8:	mov	r3, #0
   3b4dc:	str	r2, [fp, #-64]	; 0xffffffc0
   3b4e0:	str	r3, [fp, #-68]	; 0xffffffbc
   3b4e4:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b4e8:	ldr	r3, [pc, #1972]	; 3bca4 <flatcc_json_printer_uint64@@Base+0xb88>
   3b4ec:	add	r3, pc, r3
   3b4f0:	add	r2, r3, r2, lsl #1
   3b4f4:	str	r2, [fp, #-28]	; 0xffffffe4
   3b4f8:	ldr	r2, [fp, #-16]
   3b4fc:	ldr	r3, [fp, #-12]
   3b500:	str	r0, [fp, #-72]	; 0xffffffb8
   3b504:	mov	r0, r2
   3b508:	str	r1, [fp, #-76]	; 0xffffffb4
   3b50c:	mov	r1, r3
   3b510:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3b514:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3b518:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b51c:	str	r1, [fp, #-12]
   3b520:	str	r0, [fp, #-16]
   3b524:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b528:	ldrb	r0, [r0]
   3b52c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b530:	strb	r0, [r1]
   3b534:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b538:	ldrb	r0, [r0, #1]
   3b53c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b540:	strb	r0, [r1, #1]
   3b544:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b548:	sub	r0, r0, #2
   3b54c:	str	r0, [fp, #-20]	; 0xffffffec
   3b550:	ldr	r0, [fp, #-16]
   3b554:	ldr	r1, [fp, #-12]
   3b558:	mov	r2, #100	; 0x64
   3b55c:	mov	r3, #0
   3b560:	str	r2, [fp, #-80]	; 0xffffffb0
   3b564:	str	r3, [fp, #-84]	; 0xffffffac
   3b568:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b56c:	ldr	r3, [pc, #1844]	; 3bca8 <flatcc_json_printer_uint64@@Base+0xb8c>
   3b570:	add	r3, pc, r3
   3b574:	add	r2, r3, r2, lsl #1
   3b578:	str	r2, [fp, #-28]	; 0xffffffe4
   3b57c:	ldr	r2, [fp, #-16]
   3b580:	ldr	r3, [fp, #-12]
   3b584:	str	r0, [fp, #-88]	; 0xffffffa8
   3b588:	mov	r0, r2
   3b58c:	str	r1, [fp, #-92]	; 0xffffffa4
   3b590:	mov	r1, r3
   3b594:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3b598:	ldr	r3, [fp, #-84]	; 0xffffffac
   3b59c:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b5a0:	str	r1, [fp, #-12]
   3b5a4:	str	r0, [fp, #-16]
   3b5a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b5ac:	ldrb	r0, [r0]
   3b5b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b5b4:	strb	r0, [r1]
   3b5b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b5bc:	ldrb	r0, [r0, #1]
   3b5c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b5c4:	strb	r0, [r1, #1]
   3b5c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b5cc:	sub	r0, r0, #2
   3b5d0:	str	r0, [fp, #-20]	; 0xffffffec
   3b5d4:	ldr	r0, [fp, #-16]
   3b5d8:	ldr	r1, [fp, #-12]
   3b5dc:	mov	r2, #100	; 0x64
   3b5e0:	mov	r3, #0
   3b5e4:	str	r2, [fp, #-96]	; 0xffffffa0
   3b5e8:	str	r3, [fp, #-100]	; 0xffffff9c
   3b5ec:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b5f0:	ldr	r3, [pc, #1716]	; 3bcac <flatcc_json_printer_uint64@@Base+0xb90>
   3b5f4:	add	r3, pc, r3
   3b5f8:	add	r2, r3, r2, lsl #1
   3b5fc:	str	r2, [fp, #-28]	; 0xffffffe4
   3b600:	ldr	r2, [fp, #-16]
   3b604:	ldr	r3, [fp, #-12]
   3b608:	str	r0, [fp, #-104]	; 0xffffff98
   3b60c:	mov	r0, r2
   3b610:	str	r1, [fp, #-108]	; 0xffffff94
   3b614:	mov	r1, r3
   3b618:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3b61c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3b620:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b624:	str	r1, [fp, #-12]
   3b628:	str	r0, [fp, #-16]
   3b62c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b630:	ldrb	r0, [r0]
   3b634:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b638:	strb	r0, [r1]
   3b63c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b640:	ldrb	r0, [r0, #1]
   3b644:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b648:	strb	r0, [r1, #1]
   3b64c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b650:	sub	r0, r0, #2
   3b654:	str	r0, [fp, #-20]	; 0xffffffec
   3b658:	ldr	r0, [fp, #-16]
   3b65c:	ldr	r1, [fp, #-12]
   3b660:	mov	r2, #100	; 0x64
   3b664:	mov	r3, #0
   3b668:	str	r2, [fp, #-112]	; 0xffffff90
   3b66c:	str	r3, [fp, #-116]	; 0xffffff8c
   3b670:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b674:	ldr	r3, [pc, #1588]	; 3bcb0 <flatcc_json_printer_uint64@@Base+0xb94>
   3b678:	add	r3, pc, r3
   3b67c:	add	r2, r3, r2, lsl #1
   3b680:	str	r2, [fp, #-28]	; 0xffffffe4
   3b684:	ldr	r2, [fp, #-16]
   3b688:	ldr	r3, [fp, #-12]
   3b68c:	str	r0, [fp, #-120]	; 0xffffff88
   3b690:	mov	r0, r2
   3b694:	str	r1, [fp, #-124]	; 0xffffff84
   3b698:	mov	r1, r3
   3b69c:	ldr	r2, [fp, #-112]	; 0xffffff90
   3b6a0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   3b6a4:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b6a8:	str	r1, [fp, #-12]
   3b6ac:	str	r0, [fp, #-16]
   3b6b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b6b4:	ldrb	r0, [r0]
   3b6b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b6bc:	strb	r0, [r1]
   3b6c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b6c4:	ldrb	r0, [r0, #1]
   3b6c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b6cc:	strb	r0, [r1, #1]
   3b6d0:	ldr	r0, [fp, #-16]
   3b6d4:	ldr	r1, [fp, #-12]
   3b6d8:	mov	r2, #10
   3b6dc:	str	r2, [fp, #-128]	; 0xffffff80
   3b6e0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   3b6e4:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b6e8:	orr	r2, r2, #48	; 0x30
   3b6ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b6f0:	sub	ip, r3, #1
   3b6f4:	str	ip, [fp, #-20]	; 0xffffffec
   3b6f8:	strb	r2, [r3, #-1]
   3b6fc:	ldr	r2, [fp, #-16]
   3b700:	ldr	r3, [fp, #-12]
   3b704:	str	r0, [fp, #-132]	; 0xffffff7c
   3b708:	mov	r0, r2
   3b70c:	str	r1, [fp, #-136]	; 0xffffff78
   3b710:	mov	r1, r3
   3b714:	ldr	r2, [fp, #-128]	; 0xffffff80
   3b718:	ldr	r3, [fp, #-116]	; 0xffffff8c
   3b71c:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b720:	str	r1, [fp, #-12]
   3b724:	str	r0, [fp, #-16]
   3b728:	b	3ba98 <flatcc_json_printer_uint64@@Base+0x97c>
   3b72c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b730:	sub	r0, r0, #10
   3b734:	cmp	r0, #10
   3b738:	str	r0, [sp, #140]	; 0x8c
   3b73c:	bhi	3ba94 <flatcc_json_printer_uint64@@Base+0x978>
   3b740:	add	r0, pc, #8
   3b744:	ldr	r1, [sp, #140]	; 0x8c
   3b748:	ldr	r2, [r0, r1, lsl #2]
   3b74c:	add	pc, r0, r2
   3b750:	andeq	r0, r0, r0, asr #5
   3b754:	andeq	r0, r0, r4, asr #6
   3b758:	andeq	r0, r0, ip, lsr r2
   3b75c:	andeq	r0, r0, r4, asr #6
   3b760:			; <UNDEFINED> instruction: 0x000001b8
   3b764:	andeq	r0, r0, r4, asr #6
   3b768:	andeq	r0, r0, r4, lsr r1
   3b76c:	andeq	r0, r0, r4, asr #6
   3b770:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   3b774:	andeq	r0, r0, r4, asr #6
   3b778:	andeq	r0, r0, ip, lsr #32
   3b77c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b780:	sub	r0, r0, #2
   3b784:	str	r0, [fp, #-20]	; 0xffffffec
   3b788:	ldr	r0, [fp, #-16]
   3b78c:	ldr	r1, [fp, #-12]
   3b790:	mov	r2, #100	; 0x64
   3b794:	mov	r3, #0
   3b798:	str	r2, [sp, #136]	; 0x88
   3b79c:	str	r3, [sp, #132]	; 0x84
   3b7a0:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b7a4:	ldr	r3, [pc, #1288]	; 3bcb4 <flatcc_json_printer_uint64@@Base+0xb98>
   3b7a8:	add	r3, pc, r3
   3b7ac:	add	r2, r3, r2, lsl #1
   3b7b0:	str	r2, [fp, #-28]	; 0xffffffe4
   3b7b4:	ldr	r2, [fp, #-16]
   3b7b8:	ldr	r3, [fp, #-12]
   3b7bc:	str	r0, [sp, #128]	; 0x80
   3b7c0:	mov	r0, r2
   3b7c4:	str	r1, [sp, #124]	; 0x7c
   3b7c8:	mov	r1, r3
   3b7cc:	ldr	r2, [sp, #136]	; 0x88
   3b7d0:	ldr	r3, [sp, #132]	; 0x84
   3b7d4:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b7d8:	str	r1, [fp, #-12]
   3b7dc:	str	r0, [fp, #-16]
   3b7e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b7e4:	ldrb	r0, [r0]
   3b7e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b7ec:	strb	r0, [r1]
   3b7f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b7f4:	ldrb	r0, [r0, #1]
   3b7f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b7fc:	strb	r0, [r1, #1]
   3b800:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b804:	sub	r0, r0, #2
   3b808:	str	r0, [fp, #-20]	; 0xffffffec
   3b80c:	ldr	r0, [fp, #-16]
   3b810:	ldr	r1, [fp, #-12]
   3b814:	mov	r2, #100	; 0x64
   3b818:	mov	r3, #0
   3b81c:	str	r2, [sp, #120]	; 0x78
   3b820:	str	r3, [sp, #116]	; 0x74
   3b824:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b828:	ldr	r3, [pc, #1160]	; 3bcb8 <flatcc_json_printer_uint64@@Base+0xb9c>
   3b82c:	add	r3, pc, r3
   3b830:	add	r2, r3, r2, lsl #1
   3b834:	str	r2, [fp, #-28]	; 0xffffffe4
   3b838:	ldr	r2, [fp, #-16]
   3b83c:	ldr	r3, [fp, #-12]
   3b840:	str	r0, [sp, #112]	; 0x70
   3b844:	mov	r0, r2
   3b848:	str	r1, [sp, #108]	; 0x6c
   3b84c:	mov	r1, r3
   3b850:	ldr	r2, [sp, #120]	; 0x78
   3b854:	ldr	r3, [sp, #116]	; 0x74
   3b858:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b85c:	str	r1, [fp, #-12]
   3b860:	str	r0, [fp, #-16]
   3b864:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b868:	ldrb	r0, [r0]
   3b86c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b870:	strb	r0, [r1]
   3b874:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b878:	ldrb	r0, [r0, #1]
   3b87c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b880:	strb	r0, [r1, #1]
   3b884:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b888:	sub	r0, r0, #2
   3b88c:	str	r0, [fp, #-20]	; 0xffffffec
   3b890:	ldr	r0, [fp, #-16]
   3b894:	ldr	r1, [fp, #-12]
   3b898:	mov	r2, #100	; 0x64
   3b89c:	mov	r3, #0
   3b8a0:	str	r2, [sp, #104]	; 0x68
   3b8a4:	str	r3, [sp, #100]	; 0x64
   3b8a8:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b8ac:	ldr	r3, [pc, #1032]	; 3bcbc <flatcc_json_printer_uint64@@Base+0xba0>
   3b8b0:	add	r3, pc, r3
   3b8b4:	add	r2, r3, r2, lsl #1
   3b8b8:	str	r2, [fp, #-28]	; 0xffffffe4
   3b8bc:	ldr	r2, [fp, #-16]
   3b8c0:	ldr	r3, [fp, #-12]
   3b8c4:	str	r0, [sp, #96]	; 0x60
   3b8c8:	mov	r0, r2
   3b8cc:	str	r1, [sp, #92]	; 0x5c
   3b8d0:	mov	r1, r3
   3b8d4:	ldr	r2, [sp, #104]	; 0x68
   3b8d8:	ldr	r3, [sp, #100]	; 0x64
   3b8dc:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b8e0:	str	r1, [fp, #-12]
   3b8e4:	str	r0, [fp, #-16]
   3b8e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b8ec:	ldrb	r0, [r0]
   3b8f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b8f4:	strb	r0, [r1]
   3b8f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b8fc:	ldrb	r0, [r0, #1]
   3b900:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b904:	strb	r0, [r1, #1]
   3b908:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b90c:	sub	r0, r0, #2
   3b910:	str	r0, [fp, #-20]	; 0xffffffec
   3b914:	ldr	r0, [fp, #-16]
   3b918:	ldr	r1, [fp, #-12]
   3b91c:	mov	r2, #100	; 0x64
   3b920:	mov	r3, #0
   3b924:	str	r2, [sp, #88]	; 0x58
   3b928:	str	r3, [sp, #84]	; 0x54
   3b92c:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b930:	ldr	r3, [pc, #904]	; 3bcc0 <flatcc_json_printer_uint64@@Base+0xba4>
   3b934:	add	r3, pc, r3
   3b938:	add	r2, r3, r2, lsl #1
   3b93c:	str	r2, [fp, #-28]	; 0xffffffe4
   3b940:	ldr	r2, [fp, #-16]
   3b944:	ldr	r3, [fp, #-12]
   3b948:	str	r0, [sp, #80]	; 0x50
   3b94c:	mov	r0, r2
   3b950:	str	r1, [sp, #76]	; 0x4c
   3b954:	mov	r1, r3
   3b958:	ldr	r2, [sp, #88]	; 0x58
   3b95c:	ldr	r3, [sp, #84]	; 0x54
   3b960:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b964:	str	r1, [fp, #-12]
   3b968:	str	r0, [fp, #-16]
   3b96c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b970:	ldrb	r0, [r0]
   3b974:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b978:	strb	r0, [r1]
   3b97c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b980:	ldrb	r0, [r0, #1]
   3b984:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b988:	strb	r0, [r1, #1]
   3b98c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b990:	sub	r0, r0, #2
   3b994:	str	r0, [fp, #-20]	; 0xffffffec
   3b998:	ldr	r0, [fp, #-16]
   3b99c:	ldr	r1, [fp, #-12]
   3b9a0:	mov	r2, #100	; 0x64
   3b9a4:	mov	r3, #0
   3b9a8:	str	r2, [sp, #72]	; 0x48
   3b9ac:	str	r3, [sp, #68]	; 0x44
   3b9b0:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b9b4:	ldr	r3, [pc, #776]	; 3bcc4 <flatcc_json_printer_uint64@@Base+0xba8>
   3b9b8:	add	r3, pc, r3
   3b9bc:	add	r2, r3, r2, lsl #1
   3b9c0:	str	r2, [fp, #-28]	; 0xffffffe4
   3b9c4:	ldr	r2, [fp, #-16]
   3b9c8:	ldr	r3, [fp, #-12]
   3b9cc:	str	r0, [sp, #64]	; 0x40
   3b9d0:	mov	r0, r2
   3b9d4:	str	r1, [sp, #60]	; 0x3c
   3b9d8:	mov	r1, r3
   3b9dc:	ldr	r2, [sp, #72]	; 0x48
   3b9e0:	ldr	r3, [sp, #68]	; 0x44
   3b9e4:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3b9e8:	str	r1, [fp, #-12]
   3b9ec:	str	r0, [fp, #-16]
   3b9f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b9f4:	ldrb	r0, [r0]
   3b9f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b9fc:	strb	r0, [r1]
   3ba00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ba04:	ldrb	r0, [r0, #1]
   3ba08:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ba0c:	strb	r0, [r1, #1]
   3ba10:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ba14:	sub	r0, r0, #2
   3ba18:	str	r0, [fp, #-20]	; 0xffffffec
   3ba1c:	ldr	r0, [fp, #-16]
   3ba20:	ldr	r1, [fp, #-12]
   3ba24:	mov	r2, #100	; 0x64
   3ba28:	mov	r3, #0
   3ba2c:	str	r2, [sp, #56]	; 0x38
   3ba30:	str	r3, [sp, #52]	; 0x34
   3ba34:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3ba38:	ldr	r3, [pc, #648]	; 3bcc8 <flatcc_json_printer_uint64@@Base+0xbac>
   3ba3c:	add	r3, pc, r3
   3ba40:	add	r2, r3, r2, lsl #1
   3ba44:	str	r2, [fp, #-28]	; 0xffffffe4
   3ba48:	ldr	r2, [fp, #-16]
   3ba4c:	ldr	r3, [fp, #-12]
   3ba50:	str	r0, [sp, #48]	; 0x30
   3ba54:	mov	r0, r2
   3ba58:	str	r1, [sp, #44]	; 0x2c
   3ba5c:	mov	r1, r3
   3ba60:	ldr	r2, [sp, #56]	; 0x38
   3ba64:	ldr	r3, [sp, #52]	; 0x34
   3ba68:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3ba6c:	str	r1, [fp, #-12]
   3ba70:	str	r0, [fp, #-16]
   3ba74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ba78:	ldrb	r0, [r0]
   3ba7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ba80:	strb	r0, [r1]
   3ba84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ba88:	ldrb	r0, [r0, #1]
   3ba8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ba90:	strb	r0, [r1, #1]
   3ba94:	b	3ba98 <flatcc_json_printer_uint64@@Base+0x97c>
   3ba98:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ba9c:	sub	r0, r0, #2
   3baa0:	str	r0, [fp, #-20]	; 0xffffffec
   3baa4:	ldr	r0, [fp, #-16]
   3baa8:	ldr	r1, [fp, #-12]
   3baac:	mov	r2, #100	; 0x64
   3bab0:	mov	r3, #0
   3bab4:	str	r2, [sp, #40]	; 0x28
   3bab8:	str	r3, [sp, #36]	; 0x24
   3babc:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3bac0:	ldr	r3, [pc, #516]	; 3bccc <flatcc_json_printer_uint64@@Base+0xbb0>
   3bac4:	add	r3, pc, r3
   3bac8:	add	r2, r3, r2, lsl #1
   3bacc:	str	r2, [fp, #-28]	; 0xffffffe4
   3bad0:	ldr	r2, [fp, #-16]
   3bad4:	ldr	ip, [fp, #-12]
   3bad8:	str	r0, [sp, #32]
   3badc:	mov	r0, r2
   3bae0:	str	r1, [sp, #28]
   3bae4:	mov	r1, ip
   3bae8:	ldr	r2, [sp, #40]	; 0x28
   3baec:	ldr	ip, [sp, #36]	; 0x24
   3baf0:	str	r3, [sp, #24]
   3baf4:	mov	r3, ip
   3baf8:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3bafc:	str	r1, [fp, #-12]
   3bb00:	str	r0, [fp, #-16]
   3bb04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bb08:	ldrb	r0, [r0]
   3bb0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bb10:	strb	r0, [r1]
   3bb14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bb18:	ldrb	r0, [r0, #1]
   3bb1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bb20:	strb	r0, [r1, #1]
   3bb24:	ldr	r0, [fp, #-20]	; 0xffffffec
   3bb28:	sub	r0, r0, #2
   3bb2c:	str	r0, [fp, #-20]	; 0xffffffec
   3bb30:	ldr	r0, [fp, #-16]
   3bb34:	ldr	r1, [fp, #-12]
   3bb38:	ldr	r2, [sp, #40]	; 0x28
   3bb3c:	ldr	r3, [sp, #36]	; 0x24
   3bb40:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3bb44:	ldr	r3, [sp, #24]
   3bb48:	add	r2, r3, r2, lsl #1
   3bb4c:	str	r2, [fp, #-28]	; 0xffffffe4
   3bb50:	ldr	r2, [fp, #-16]
   3bb54:	ldr	ip, [fp, #-12]
   3bb58:	str	r0, [sp, #20]
   3bb5c:	mov	r0, r2
   3bb60:	str	r1, [sp, #16]
   3bb64:	mov	r1, ip
   3bb68:	ldr	r2, [sp, #40]	; 0x28
   3bb6c:	ldr	r3, [sp, #36]	; 0x24
   3bb70:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3bb74:	str	r1, [fp, #-12]
   3bb78:	str	r0, [fp, #-16]
   3bb7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bb80:	ldrb	r0, [r0]
   3bb84:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bb88:	strb	r0, [r1]
   3bb8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bb90:	ldrb	r0, [r0, #1]
   3bb94:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bb98:	strb	r0, [r1, #1]
   3bb9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3bba0:	sub	r0, r0, #2
   3bba4:	str	r0, [fp, #-20]	; 0xffffffec
   3bba8:	ldr	r0, [fp, #-16]
   3bbac:	ldr	r1, [fp, #-12]
   3bbb0:	ldr	r2, [sp, #40]	; 0x28
   3bbb4:	ldr	r3, [sp, #36]	; 0x24
   3bbb8:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3bbbc:	ldr	r3, [sp, #24]
   3bbc0:	add	r2, r3, r2, lsl #1
   3bbc4:	str	r2, [fp, #-28]	; 0xffffffe4
   3bbc8:	ldr	r2, [fp, #-16]
   3bbcc:	ldr	ip, [fp, #-12]
   3bbd0:	str	r0, [sp, #12]
   3bbd4:	mov	r0, r2
   3bbd8:	str	r1, [sp, #8]
   3bbdc:	mov	r1, ip
   3bbe0:	ldr	r2, [sp, #40]	; 0x28
   3bbe4:	ldr	r3, [sp, #36]	; 0x24
   3bbe8:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3bbec:	str	r1, [fp, #-12]
   3bbf0:	str	r0, [fp, #-16]
   3bbf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bbf8:	ldrb	r0, [r0]
   3bbfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bc00:	strb	r0, [r1]
   3bc04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bc08:	ldrb	r0, [r0, #1]
   3bc0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bc10:	strb	r0, [r1, #1]
   3bc14:	ldr	r0, [fp, #-20]	; 0xffffffec
   3bc18:	sub	r0, r0, #2
   3bc1c:	str	r0, [fp, #-20]	; 0xffffffec
   3bc20:	ldr	r0, [fp, #-16]
   3bc24:	ldr	r1, [fp, #-12]
   3bc28:	ldr	r2, [sp, #40]	; 0x28
   3bc2c:	ldr	r3, [sp, #36]	; 0x24
   3bc30:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3bc34:	ldr	r3, [sp, #24]
   3bc38:	add	r2, r3, r2, lsl #1
   3bc3c:	str	r2, [fp, #-28]	; 0xffffffe4
   3bc40:	ldr	r2, [fp, #-16]
   3bc44:	ldr	ip, [fp, #-12]
   3bc48:	str	r0, [sp, #4]
   3bc4c:	mov	r0, r2
   3bc50:	str	r1, [sp]
   3bc54:	mov	r1, ip
   3bc58:	ldr	r2, [sp, #40]	; 0x28
   3bc5c:	ldr	r3, [sp, #36]	; 0x24
   3bc60:	bl	47068 <flatcc_json_printer_clear@@Base+0x2324>
   3bc64:	str	r1, [fp, #-12]
   3bc68:	str	r0, [fp, #-16]
   3bc6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bc70:	ldrb	r0, [r0]
   3bc74:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bc78:	strb	r0, [r1]
   3bc7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bc80:	ldrb	r0, [r0, #1]
   3bc84:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bc88:	strb	r0, [r1, #1]
   3bc8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3bc90:	str	r0, [fp, #-4]
   3bc94:	ldr	r0, [fp, #-4]
   3bc98:	mov	sp, fp
   3bc9c:	pop	{fp, pc}
   3bca0:	strdeq	r2, [r1], -r4
   3bca4:	andeq	r2, r1, r0, ror ip
   3bca8:	andeq	r2, r1, ip, ror #23
   3bcac:	andeq	r2, r1, r8, ror #22
   3bcb0:	andeq	r2, r1, r4, ror #21
   3bcb4:			; <UNDEFINED> instruction: 0x000129b4
   3bcb8:	andeq	r2, r1, r0, lsr r9
   3bcbc:	andeq	r2, r1, ip, lsr #17
   3bcc0:	andeq	r2, r1, r8, lsr #16
   3bcc4:	andeq	r2, r1, r4, lsr #15
   3bcc8:	andeq	r2, r1, r0, lsr #14
   3bccc:	muleq	r1, r8, r6

0003bcd0 <flatcc_json_printer_int8@@Base>:
   3bcd0:	push	{fp, lr}
   3bcd4:	mov	fp, sp
   3bcd8:	sub	sp, sp, #8
   3bcdc:	str	r0, [sp, #4]
   3bce0:	strb	r1, [sp, #3]
   3bce4:	ldrb	r0, [sp, #3]
   3bce8:	ldr	r1, [sp, #4]
   3bcec:	ldr	r1, [r1, #20]
   3bcf0:	sxtb	r0, r0
   3bcf4:	bl	3bd10 <flatcc_json_printer_int8@@Base+0x40>
   3bcf8:	ldr	r1, [sp, #4]
   3bcfc:	ldr	r2, [r1, #20]
   3bd00:	add	r0, r2, r0
   3bd04:	str	r0, [r1, #20]
   3bd08:	mov	sp, fp
   3bd0c:	pop	{fp, pc}
   3bd10:	push	{fp, lr}
   3bd14:	mov	fp, sp
   3bd18:	sub	sp, sp, #16
   3bd1c:	strb	r0, [fp, #-1]
   3bd20:	str	r1, [sp, #8]
   3bd24:	ldrsb	r0, [fp, #-1]
   3bd28:	cmp	r0, #0
   3bd2c:	movw	r0, #0
   3bd30:	movlt	r0, #1
   3bd34:	and	r1, r0, #1
   3bd38:	str	r1, [sp, #4]
   3bd3c:	tst	r0, #1
   3bd40:	beq	3bd68 <flatcc_json_printer_int8@@Base+0x98>
   3bd44:	ldr	r0, [sp, #8]
   3bd48:	add	r1, r0, #1
   3bd4c:	str	r1, [sp, #8]
   3bd50:	movw	r1, #45	; 0x2d
   3bd54:	strb	r1, [r0]
   3bd58:	ldrsb	r0, [fp, #-1]
   3bd5c:	movw	r1, #0
   3bd60:	sub	r0, r1, r0
   3bd64:	strb	r0, [fp, #-1]
   3bd68:	ldrb	r0, [fp, #-1]
   3bd6c:	ldr	r1, [sp, #8]
   3bd70:	and	r0, r0, #255	; 0xff
   3bd74:	bl	3a608 <flatcc_json_printer_uint8@@Base+0x40>
   3bd78:	ldr	r1, [sp, #4]
   3bd7c:	add	r0, r0, r1
   3bd80:	mov	sp, fp
   3bd84:	pop	{fp, pc}

0003bd88 <flatcc_json_printer_int16@@Base>:
   3bd88:	push	{fp, lr}
   3bd8c:	mov	fp, sp
   3bd90:	sub	sp, sp, #8
   3bd94:	str	r0, [sp, #4]
   3bd98:	strh	r1, [sp, #2]
   3bd9c:	ldrh	r0, [sp, #2]
   3bda0:	ldr	r1, [sp, #4]
   3bda4:	ldr	r1, [r1, #20]
   3bda8:	sxth	r0, r0
   3bdac:	bl	3bdc8 <flatcc_json_printer_int16@@Base+0x40>
   3bdb0:	ldr	r1, [sp, #4]
   3bdb4:	ldr	r2, [r1, #20]
   3bdb8:	add	r0, r2, r0
   3bdbc:	str	r0, [r1, #20]
   3bdc0:	mov	sp, fp
   3bdc4:	pop	{fp, pc}
   3bdc8:	push	{fp, lr}
   3bdcc:	mov	fp, sp
   3bdd0:	sub	sp, sp, #16
   3bdd4:	strh	r0, [fp, #-2]
   3bdd8:	str	r1, [sp, #8]
   3bddc:	ldrsh	r0, [fp, #-2]
   3bde0:	cmp	r0, #0
   3bde4:	movw	r0, #0
   3bde8:	movlt	r0, #1
   3bdec:	and	r1, r0, #1
   3bdf0:	str	r1, [sp, #4]
   3bdf4:	tst	r0, #1
   3bdf8:	beq	3be20 <flatcc_json_printer_int16@@Base+0x98>
   3bdfc:	ldr	r0, [sp, #8]
   3be00:	add	r1, r0, #1
   3be04:	str	r1, [sp, #8]
   3be08:	movw	r1, #45	; 0x2d
   3be0c:	strb	r1, [r0]
   3be10:	ldrsh	r0, [fp, #-2]
   3be14:	movw	r1, #0
   3be18:	sub	r0, r1, r0
   3be1c:	strh	r0, [fp, #-2]
   3be20:	ldrh	r0, [fp, #-2]
   3be24:	ldr	r1, [sp, #8]
   3be28:	uxth	r0, r0
   3be2c:	bl	3a7dc <flatcc_json_printer_uint16@@Base+0x40>
   3be30:	ldr	r1, [sp, #4]
   3be34:	add	r0, r0, r1
   3be38:	mov	sp, fp
   3be3c:	pop	{fp, pc}

0003be40 <flatcc_json_printer_int32@@Base>:
   3be40:	push	{fp, lr}
   3be44:	mov	fp, sp
   3be48:	sub	sp, sp, #8
   3be4c:	str	r0, [sp, #4]
   3be50:	str	r1, [sp]
   3be54:	ldr	r0, [sp]
   3be58:	ldr	r1, [sp, #4]
   3be5c:	ldr	r1, [r1, #20]
   3be60:	bl	3be7c <flatcc_json_printer_int32@@Base+0x3c>
   3be64:	ldr	r1, [sp, #4]
   3be68:	ldr	r2, [r1, #20]
   3be6c:	add	r0, r2, r0
   3be70:	str	r0, [r1, #20]
   3be74:	mov	sp, fp
   3be78:	pop	{fp, pc}
   3be7c:	push	{fp, lr}
   3be80:	mov	fp, sp
   3be84:	sub	sp, sp, #16
   3be88:	str	r0, [fp, #-4]
   3be8c:	str	r1, [sp, #8]
   3be90:	ldr	r0, [fp, #-4]
   3be94:	cmp	r0, #0
   3be98:	movw	r0, #0
   3be9c:	movlt	r0, #1
   3bea0:	and	r1, r0, #1
   3bea4:	str	r1, [sp, #4]
   3bea8:	tst	r0, #1
   3beac:	beq	3bed4 <flatcc_json_printer_int32@@Base+0x94>
   3beb0:	ldr	r0, [sp, #8]
   3beb4:	add	r1, r0, #1
   3beb8:	str	r1, [sp, #8]
   3bebc:	movw	r1, #45	; 0x2d
   3bec0:	strb	r1, [r0]
   3bec4:	ldr	r0, [fp, #-4]
   3bec8:	movw	r1, #0
   3becc:	sub	r0, r1, r0
   3bed0:	str	r0, [fp, #-4]
   3bed4:	ldr	r0, [fp, #-4]
   3bed8:	ldr	r1, [sp, #8]
   3bedc:	bl	3ab10 <flatcc_json_printer_uint32@@Base+0x3c>
   3bee0:	ldr	r1, [sp, #4]
   3bee4:	add	r0, r0, r1
   3bee8:	mov	sp, fp
   3beec:	pop	{fp, pc}

0003bef0 <flatcc_json_printer_int64@@Base>:
   3bef0:	push	{fp, lr}
   3bef4:	mov	fp, sp
   3bef8:	sub	sp, sp, #16
   3befc:	str	r0, [fp, #-4]
   3bf00:	str	r3, [sp, #4]
   3bf04:	str	r2, [sp]
   3bf08:	ldr	r0, [sp]
   3bf0c:	ldr	r1, [sp, #4]
   3bf10:	ldr	r2, [fp, #-4]
   3bf14:	ldr	r2, [r2, #20]
   3bf18:	bl	3bf34 <flatcc_json_printer_int64@@Base+0x44>
   3bf1c:	ldr	r1, [fp, #-4]
   3bf20:	ldr	r2, [r1, #20]
   3bf24:	add	r0, r2, r0
   3bf28:	str	r0, [r1, #20]
   3bf2c:	mov	sp, fp
   3bf30:	pop	{fp, pc}
   3bf34:	push	{fp, lr}
   3bf38:	mov	fp, sp
   3bf3c:	sub	sp, sp, #16
   3bf40:	str	r0, [sp, #8]
   3bf44:	str	r1, [sp, #12]
   3bf48:	str	r2, [sp, #4]
   3bf4c:	ldr	r0, [sp, #12]
   3bf50:	lsr	r0, r0, #31
   3bf54:	and	r1, r0, #1
   3bf58:	str	r1, [sp]
   3bf5c:	tst	r0, #1
   3bf60:	beq	3bf90 <flatcc_json_printer_int64@@Base+0xa0>
   3bf64:	ldr	r0, [sp, #4]
   3bf68:	add	r1, r0, #1
   3bf6c:	str	r1, [sp, #4]
   3bf70:	mov	r1, #45	; 0x2d
   3bf74:	strb	r1, [r0]
   3bf78:	ldr	r0, [sp, #8]
   3bf7c:	ldr	r1, [sp, #12]
   3bf80:	rsbs	r0, r0, #0
   3bf84:	rsc	r1, r1, #0
   3bf88:	str	r0, [sp, #8]
   3bf8c:	str	r1, [sp, #12]
   3bf90:	ldr	r0, [sp, #8]
   3bf94:	ldr	r1, [sp, #12]
   3bf98:	ldr	r2, [sp, #4]
   3bf9c:	bl	3b160 <flatcc_json_printer_uint64@@Base+0x44>
   3bfa0:	ldr	r1, [sp]
   3bfa4:	add	r0, r0, r1
   3bfa8:	mov	sp, fp
   3bfac:	pop	{fp, pc}

0003bfb0 <flatcc_json_printer_float@@Base>:
   3bfb0:	push	{fp, lr}
   3bfb4:	mov	fp, sp
   3bfb8:	sub	sp, sp, #8
   3bfbc:	str	r0, [sp, #4]
   3bfc0:	vstr	s0, [sp]
   3bfc4:	vldr	s0, [sp]
   3bfc8:	vcvt.f64.f32	d0, s0
   3bfcc:	ldr	r0, [sp, #4]
   3bfd0:	ldr	r0, [r0, #20]
   3bfd4:	bl	399a0 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3bfd8:	ldr	r1, [sp, #4]
   3bfdc:	ldr	r2, [r1, #20]
   3bfe0:	add	r0, r2, r0
   3bfe4:	str	r0, [r1, #20]
   3bfe8:	mov	sp, fp
   3bfec:	pop	{fp, pc}

0003bff0 <flatcc_json_printer_double@@Base>:
   3bff0:	push	{fp, lr}
   3bff4:	mov	fp, sp
   3bff8:	sub	sp, sp, #16
   3bffc:	str	r0, [fp, #-4]
   3c000:	vstr	d0, [sp]
   3c004:	vldr	d0, [sp]
   3c008:	ldr	r0, [fp, #-4]
   3c00c:	ldr	r0, [r0, #20]
   3c010:	bl	399a0 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3c014:	ldr	r1, [fp, #-4]
   3c018:	ldr	r2, [r1, #20]
   3c01c:	add	r0, r2, r0
   3c020:	str	r0, [r1, #20]
   3c024:	mov	sp, fp
   3c028:	pop	{fp, pc}

0003c02c <flatcc_json_printer_enum@@Base>:
   3c02c:	push	{fp, lr}
   3c030:	mov	fp, sp
   3c034:	sub	sp, sp, #16
   3c038:	str	r0, [fp, #-4]
   3c03c:	str	r1, [sp, #8]
   3c040:	str	r2, [sp, #4]
   3c044:	ldr	r0, [fp, #-4]
   3c048:	ldr	r1, [sp, #8]
   3c04c:	ldr	r2, [sp, #4]
   3c050:	bl	3c05c <flatcc_json_printer_enum@@Base+0x30>
   3c054:	mov	sp, fp
   3c058:	pop	{fp, pc}
   3c05c:	push	{fp, lr}
   3c060:	mov	fp, sp
   3c064:	sub	sp, sp, #16
   3c068:	str	r0, [fp, #-4]
   3c06c:	str	r1, [sp, #8]
   3c070:	str	r2, [sp, #4]
   3c074:	ldr	r0, [fp, #-4]
   3c078:	ldr	r0, [r0, #20]
   3c07c:	movw	r1, #34	; 0x22
   3c080:	strb	r1, [r0]
   3c084:	ldr	r0, [fp, #-4]
   3c088:	ldrsb	r0, [r0, #26]
   3c08c:	cmp	r0, #0
   3c090:	movw	r0, #0
   3c094:	movne	r0, #1
   3c098:	mvn	r1, #0
   3c09c:	eor	r0, r0, r1
   3c0a0:	and	r0, r0, #1
   3c0a4:	ldr	r1, [fp, #-4]
   3c0a8:	ldr	r2, [r1, #20]
   3c0ac:	add	r0, r2, r0
   3c0b0:	str	r0, [r1, #20]
   3c0b4:	ldr	r0, [fp, #-4]
   3c0b8:	ldr	r0, [r0, #20]
   3c0bc:	ldr	r1, [sp, #4]
   3c0c0:	add	r0, r0, r1
   3c0c4:	ldr	r1, [fp, #-4]
   3c0c8:	ldr	r1, [r1, #16]
   3c0cc:	cmp	r0, r1
   3c0d0:	bcs	3c100 <flatcc_json_printer_enum@@Base+0xd4>
   3c0d4:	ldr	r0, [fp, #-4]
   3c0d8:	ldr	r0, [r0, #20]
   3c0dc:	ldr	r1, [sp, #8]
   3c0e0:	ldr	r2, [sp, #4]
   3c0e4:	bl	14e30 <memcpy@plt>
   3c0e8:	ldr	r0, [sp, #4]
   3c0ec:	ldr	r1, [fp, #-4]
   3c0f0:	ldr	r2, [r1, #20]
   3c0f4:	add	r0, r2, r0
   3c0f8:	str	r0, [r1, #20]
   3c0fc:	b	3c110 <flatcc_json_printer_enum@@Base+0xe4>
   3c100:	ldr	r0, [fp, #-4]
   3c104:	ldr	r1, [sp, #8]
   3c108:	ldr	r2, [sp, #4]
   3c10c:	bl	3a3ac <flatcc_json_printer_write@@Base+0x30>
   3c110:	ldr	r0, [fp, #-4]
   3c114:	ldr	r0, [r0, #20]
   3c118:	movw	r1, #34	; 0x22
   3c11c:	strb	r1, [r0]
   3c120:	ldr	r0, [fp, #-4]
   3c124:	ldrsb	r0, [r0, #26]
   3c128:	cmp	r0, #0
   3c12c:	movw	r0, #0
   3c130:	movne	r0, #1
   3c134:	mvn	r1, #0
   3c138:	eor	r0, r0, r1
   3c13c:	and	r0, r0, #1
   3c140:	ldr	r1, [fp, #-4]
   3c144:	ldr	r2, [r1, #20]
   3c148:	add	r0, r2, r0
   3c14c:	str	r0, [r1, #20]
   3c150:	mov	sp, fp
   3c154:	pop	{fp, pc}

0003c158 <flatcc_json_printer_delimit_enum_flags@@Base>:
   3c158:	sub	sp, sp, #16
   3c15c:	str	r0, [sp, #12]
   3c160:	str	r1, [sp, #8]
   3c164:	ldr	r0, [sp, #12]
   3c168:	ldrsb	r0, [r0, #26]
   3c16c:	cmp	r0, #0
   3c170:	movw	r0, #1
   3c174:	str	r0, [sp]
   3c178:	beq	3c190 <flatcc_json_printer_delimit_enum_flags@@Base+0x38>
   3c17c:	ldr	r0, [sp, #8]
   3c180:	cmp	r0, #0
   3c184:	movw	r0, #0
   3c188:	movne	r0, #1
   3c18c:	str	r0, [sp]
   3c190:	ldr	r0, [sp]
   3c194:	and	r0, r0, #1
   3c198:	str	r0, [sp, #4]
   3c19c:	ldr	r0, [sp, #12]
   3c1a0:	ldr	r0, [r0, #20]
   3c1a4:	movw	r1, #34	; 0x22
   3c1a8:	strb	r1, [r0]
   3c1ac:	ldr	r0, [sp, #4]
   3c1b0:	ldr	r1, [sp, #12]
   3c1b4:	ldr	r2, [r1, #20]
   3c1b8:	add	r0, r2, r0
   3c1bc:	str	r0, [r1, #20]
   3c1c0:	add	sp, sp, #16
   3c1c4:	bx	lr

0003c1c8 <flatcc_json_printer_enum_flag@@Base>:
   3c1c8:	push	{fp, lr}
   3c1cc:	mov	fp, sp
   3c1d0:	sub	sp, sp, #16
   3c1d4:	str	r0, [fp, #-4]
   3c1d8:	str	r1, [sp, #8]
   3c1dc:	str	r2, [sp, #4]
   3c1e0:	str	r3, [sp]
   3c1e4:	ldr	r0, [fp, #-4]
   3c1e8:	ldr	r0, [r0, #20]
   3c1ec:	movw	r1, #32
   3c1f0:	strb	r1, [r0]
   3c1f4:	ldr	r0, [sp, #8]
   3c1f8:	cmp	r0, #0
   3c1fc:	movw	r0, #0
   3c200:	movgt	r0, #1
   3c204:	and	r0, r0, #1
   3c208:	ldr	r1, [fp, #-4]
   3c20c:	ldr	r2, [r1, #20]
   3c210:	add	r0, r2, r0
   3c214:	str	r0, [r1, #20]
   3c218:	ldr	r0, [fp, #-4]
   3c21c:	ldr	r1, [sp, #4]
   3c220:	ldr	r2, [sp]
   3c224:	bl	3a3ac <flatcc_json_printer_write@@Base+0x30>
   3c228:	mov	sp, fp
   3c22c:	pop	{fp, pc}

0003c230 <flatcc_json_printer_string_field@@Base>:
   3c230:	push	{fp, lr}
   3c234:	mov	fp, sp
   3c238:	sub	sp, sp, #32
   3c23c:	ldr	ip, [fp, #8]
   3c240:	str	r0, [fp, #-4]
   3c244:	str	r1, [fp, #-8]
   3c248:	str	r2, [fp, #-12]
   3c24c:	str	r3, [sp, #16]
   3c250:	ldr	r0, [fp, #-8]
   3c254:	ldr	r1, [fp, #-12]
   3c258:	str	ip, [sp, #8]
   3c25c:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3c260:	str	r0, [sp, #12]
   3c264:	ldr	r0, [sp, #12]
   3c268:	movw	r1, #0
   3c26c:	cmp	r0, r1
   3c270:	beq	3c2dc <flatcc_json_printer_string_field@@Base+0xac>
   3c274:	ldr	r0, [fp, #-8]
   3c278:	ldr	r1, [r0, #16]
   3c27c:	add	r2, r1, #1
   3c280:	str	r2, [r0, #16]
   3c284:	cmp	r1, #0
   3c288:	beq	3c2a4 <flatcc_json_printer_string_field@@Base+0x74>
   3c28c:	ldr	r0, [fp, #-4]
   3c290:	ldr	r1, [r0, #20]
   3c294:	add	r2, r1, #1
   3c298:	str	r2, [r0, #20]
   3c29c:	movw	r0, #44	; 0x2c
   3c2a0:	strb	r0, [r1]
   3c2a4:	ldr	r0, [fp, #-4]
   3c2a8:	ldr	r1, [sp, #16]
   3c2ac:	ldr	r2, [fp, #8]
   3c2b0:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3c2b4:	ldr	r0, [fp, #-4]
   3c2b8:	ldr	r1, [sp, #12]
   3c2bc:	str	r0, [sp, #4]
   3c2c0:	mov	r0, r1
   3c2c4:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   3c2c8:	ldr	r1, [sp, #4]
   3c2cc:	str	r0, [sp]
   3c2d0:	mov	r0, r1
   3c2d4:	ldr	r1, [sp]
   3c2d8:	bl	3c444 <flatcc_json_printer_string_field@@Base+0x214>
   3c2dc:	mov	sp, fp
   3c2e0:	pop	{fp, pc}
   3c2e4:	push	{fp, lr}
   3c2e8:	mov	fp, sp
   3c2ec:	sub	sp, sp, #16
   3c2f0:	str	r0, [sp, #8]
   3c2f4:	str	r1, [sp, #4]
   3c2f8:	ldr	r0, [sp, #4]
   3c2fc:	add	r0, r0, #2
   3c300:	lsl	r0, r0, #1
   3c304:	str	r0, [sp]
   3c308:	ldr	r0, [sp]
   3c30c:	ldr	r1, [sp, #8]
   3c310:	ldr	r1, [r1, #8]
   3c314:	cmp	r0, r1
   3c318:	blt	3c328 <flatcc_json_printer_string_field@@Base+0xf8>
   3c31c:	movw	r0, #0
   3c320:	str	r0, [fp, #-4]
   3c324:	b	3c36c <flatcc_json_printer_string_field@@Base+0x13c>
   3c328:	ldr	r0, [sp, #8]
   3c32c:	ldr	r0, [r0, #4]
   3c330:	ldr	r1, [sp]
   3c334:	bl	46414 <flatcc_json_printer_clear@@Base+0x16d0>
   3c338:	uxth	r0, r0
   3c33c:	str	r0, [sp]
   3c340:	ldr	r0, [sp]
   3c344:	cmp	r0, #0
   3c348:	bne	3c358 <flatcc_json_printer_string_field@@Base+0x128>
   3c34c:	movw	r0, #0
   3c350:	str	r0, [fp, #-4]
   3c354:	b	3c36c <flatcc_json_printer_string_field@@Base+0x13c>
   3c358:	ldr	r0, [sp, #8]
   3c35c:	ldr	r0, [r0]
   3c360:	ldr	r1, [sp]
   3c364:	add	r0, r0, r1
   3c368:	str	r0, [fp, #-4]
   3c36c:	ldr	r0, [fp, #-4]
   3c370:	mov	sp, fp
   3c374:	pop	{fp, pc}
   3c378:	push	{fp, lr}
   3c37c:	mov	fp, sp
   3c380:	sub	sp, sp, #16
   3c384:	str	r0, [fp, #-4]
   3c388:	str	r1, [sp, #8]
   3c38c:	str	r2, [sp, #4]
   3c390:	ldr	r0, [fp, #-4]
   3c394:	ldrsb	r0, [r0, #25]
   3c398:	cmp	r0, #0
   3c39c:	beq	3c3c4 <flatcc_json_printer_string_field@@Base+0x194>
   3c3a0:	ldr	r0, [fp, #-4]
   3c3a4:	ldr	r1, [r0, #20]
   3c3a8:	add	r2, r1, #1
   3c3ac:	str	r2, [r0, #20]
   3c3b0:	movw	r0, #10
   3c3b4:	strb	r0, [r1]
   3c3b8:	ldr	r0, [fp, #-4]
   3c3bc:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3c3c0:	b	3c3cc <flatcc_json_printer_string_field@@Base+0x19c>
   3c3c4:	ldr	r0, [fp, #-4]
   3c3c8:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3c3cc:	b	3c3d0 <flatcc_json_printer_string_field@@Base+0x1a0>
   3c3d0:	ldr	r0, [fp, #-4]
   3c3d4:	ldr	r1, [sp, #8]
   3c3d8:	ldr	r2, [sp, #4]
   3c3dc:	bl	3c05c <flatcc_json_printer_enum@@Base+0x30>
   3c3e0:	ldr	r0, [fp, #-4]
   3c3e4:	ldr	r1, [r0, #20]
   3c3e8:	add	r2, r1, #1
   3c3ec:	str	r2, [r0, #20]
   3c3f0:	movw	r0, #58	; 0x3a
   3c3f4:	strb	r0, [r1]
   3c3f8:	ldr	r0, [fp, #-4]
   3c3fc:	ldr	r0, [r0, #20]
   3c400:	movw	r1, #32
   3c404:	strb	r1, [r0]
   3c408:	ldr	r0, [fp, #-4]
   3c40c:	ldrsb	r0, [r0, #25]
   3c410:	cmp	r0, #0
   3c414:	movw	r0, #0
   3c418:	movne	r0, #1
   3c41c:	mvn	r1, #0
   3c420:	eor	r0, r0, r1
   3c424:	eor	r0, r0, r1
   3c428:	and	r0, r0, #1
   3c42c:	ldr	r1, [fp, #-4]
   3c430:	ldr	r2, [r1, #20]
   3c434:	add	r0, r2, r0
   3c438:	str	r0, [r1, #20]
   3c43c:	mov	sp, fp
   3c440:	pop	{fp, pc}
   3c444:	push	{fp, lr}
   3c448:	mov	fp, sp
   3c44c:	sub	sp, sp, #16
   3c450:	str	r0, [fp, #-4]
   3c454:	str	r1, [sp, #8]
   3c458:	ldr	r0, [sp, #8]
   3c45c:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3c460:	str	r0, [sp, #4]
   3c464:	ldr	r0, [sp, #8]
   3c468:	add	r0, r0, #4
   3c46c:	str	r0, [sp]
   3c470:	ldr	r0, [fp, #-4]
   3c474:	ldr	r1, [sp]
   3c478:	ldr	r2, [sp, #4]
   3c47c:	bl	3a00c <flatcc_json_printer_string@@Base+0x30>
   3c480:	mov	sp, fp
   3c484:	pop	{fp, pc}
   3c488:	push	{fp, lr}
   3c48c:	mov	fp, sp
   3c490:	sub	sp, sp, #8
   3c494:	str	r0, [sp, #4]
   3c498:	ldr	r0, [sp, #4]
   3c49c:	ldr	r1, [sp, #4]
   3c4a0:	str	r0, [sp]
   3c4a4:	mov	r0, r1
   3c4a8:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3c4ac:	ldr	r1, [sp]
   3c4b0:	add	r0, r1, r0
   3c4b4:	mov	sp, fp
   3c4b8:	pop	{fp, pc}

0003c4bc <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   3c4bc:	push	{fp, lr}
   3c4c0:	mov	fp, sp
   3c4c4:	sub	sp, sp, #40	; 0x28
   3c4c8:	ldr	ip, [fp, #12]
   3c4cc:	ldr	lr, [fp, #8]
   3c4d0:	str	r0, [fp, #-4]
   3c4d4:	str	r1, [fp, #-8]
   3c4d8:	str	r2, [fp, #-12]
   3c4dc:	str	r3, [fp, #-16]
   3c4e0:	ldr	r0, [fp, #-8]
   3c4e4:	ldr	r1, [fp, #-12]
   3c4e8:	str	ip, [sp, #12]
   3c4ec:	str	lr, [sp, #8]
   3c4f0:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3c4f4:	str	r0, [sp, #20]
   3c4f8:	ldr	r0, [fp, #12]
   3c4fc:	cmp	r0, #0
   3c500:	movw	r0, #0
   3c504:	movne	r0, #1
   3c508:	tst	r0, #1
   3c50c:	movw	r0, #1
   3c510:	moveq	r0, #0
   3c514:	str	r0, [sp, #16]
   3c518:	ldr	r0, [sp, #16]
   3c51c:	orr	r0, r0, #128	; 0x80
   3c520:	str	r0, [sp, #16]
   3c524:	ldr	r0, [sp, #20]
   3c528:	movw	r1, #0
   3c52c:	cmp	r0, r1
   3c530:	beq	3c5a0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xe4>
   3c534:	ldr	r0, [fp, #-8]
   3c538:	ldr	r1, [r0, #16]
   3c53c:	add	r2, r1, #1
   3c540:	str	r2, [r0, #16]
   3c544:	cmp	r1, #0
   3c548:	beq	3c564 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa8>
   3c54c:	ldr	r0, [fp, #-4]
   3c550:	ldr	r1, [r0, #20]
   3c554:	add	r2, r1, #1
   3c558:	str	r2, [r0, #20]
   3c55c:	movw	r0, #44	; 0x2c
   3c560:	strb	r0, [r1]
   3c564:	ldr	r0, [fp, #-4]
   3c568:	ldr	r1, [fp, #-16]
   3c56c:	ldr	r2, [fp, #8]
   3c570:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3c574:	ldr	r0, [fp, #-4]
   3c578:	ldr	r1, [sp, #20]
   3c57c:	str	r0, [sp, #4]
   3c580:	mov	r0, r1
   3c584:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   3c588:	ldr	r2, [sp, #16]
   3c58c:	ldr	r1, [sp, #4]
   3c590:	str	r0, [sp]
   3c594:	mov	r0, r1
   3c598:	ldr	r1, [sp]
   3c59c:	bl	3c5a8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xec>
   3c5a0:	mov	sp, fp
   3c5a4:	pop	{fp, pc}
   3c5a8:	push	{fp, lr}
   3c5ac:	mov	fp, sp
   3c5b0:	sub	sp, sp, #64	; 0x40
   3c5b4:	str	r0, [fp, #-4]
   3c5b8:	str	r1, [fp, #-8]
   3c5bc:	str	r2, [fp, #-12]
   3c5c0:	ldr	r0, [fp, #-12]
   3c5c4:	mvn	r1, #128	; 0x80
   3c5c8:	and	r0, r0, r1
   3c5cc:	str	r0, [fp, #-16]
   3c5d0:	ldr	r0, [fp, #-8]
   3c5d4:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3c5d8:	str	r0, [sp, #28]
   3c5dc:	ldr	r0, [fp, #-8]
   3c5e0:	add	r0, r0, #4
   3c5e4:	str	r0, [sp, #32]
   3c5e8:	ldr	r0, [fp, #-4]
   3c5ec:	ldr	r1, [r0, #20]
   3c5f0:	add	r2, r1, #1
   3c5f4:	str	r2, [r0, #20]
   3c5f8:	movw	r0, #34	; 0x22
   3c5fc:	strb	r0, [r1]
   3c600:	ldr	r0, [sp, #28]
   3c604:	ldr	r1, [fp, #-12]
   3c608:	bl	46480 <flatcc_json_printer_clear@@Base+0x173c>
   3c60c:	str	r0, [fp, #-28]	; 0xffffffe4
   3c610:	ldr	r0, [fp, #-4]
   3c614:	ldr	r0, [r0, #20]
   3c618:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3c61c:	add	r0, r0, r1
   3c620:	ldr	r1, [fp, #-4]
   3c624:	ldr	r1, [r1, #16]
   3c628:	cmp	r0, r1
   3c62c:	bcc	3c650 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x194>
   3c630:	ldr	r0, [fp, #-4]
   3c634:	ldr	r0, [r0, #44]	; 0x2c
   3c638:	ldr	r1, [fp, #-4]
   3c63c:	str	r0, [sp, #20]
   3c640:	mov	r0, r1
   3c644:	movw	r1, #0
   3c648:	ldr	r2, [sp, #20]
   3c64c:	blx	r2
   3c650:	b	3c654 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   3c654:	ldr	r0, [fp, #-4]
   3c658:	ldr	r0, [r0, #20]
   3c65c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3c660:	add	r0, r0, r1
   3c664:	ldr	r1, [fp, #-4]
   3c668:	ldr	r1, [r1, #16]
   3c66c:	cmp	r0, r1
   3c670:	bls	3c778 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2bc>
   3c674:	ldr	r0, [fp, #-4]
   3c678:	ldr	r1, [r0, #16]
   3c67c:	ldr	r0, [r0, #20]
   3c680:	sub	r0, r1, r0
   3c684:	bic	r0, r0, #3
   3c688:	str	r0, [fp, #-20]	; 0xffffffec
   3c68c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c690:	add	r0, r0, r0, lsl #1
   3c694:	lsr	r0, r0, #2
   3c698:	str	r0, [fp, #-24]	; 0xffffffe8
   3c69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c6a0:	cmp	r0, #0
   3c6a4:	bls	3c6ac <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1f0>
   3c6a8:	b	3c6cc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x210>
   3c6ac:	ldr	r0, [pc, #292]	; 3c7d8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x31c>
   3c6b0:	add	r0, pc, r0
   3c6b4:	ldr	r1, [pc, #288]	; 3c7dc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x320>
   3c6b8:	add	r1, pc, r1
   3c6bc:	ldr	r2, [pc, #284]	; 3c7e0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x324>
   3c6c0:	add	r3, pc, r2
   3c6c4:	movw	r2, #277	; 0x115
   3c6c8:	bl	14f08 <__assert_fail@plt>
   3c6cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c6d0:	add	r0, r0, r0, lsl #1
   3c6d4:	lsr	r0, r0, #2
   3c6d8:	str	r0, [sp, #24]
   3c6dc:	ldr	r0, [fp, #-4]
   3c6e0:	ldr	r0, [r0, #20]
   3c6e4:	ldr	r1, [sp, #32]
   3c6e8:	ldr	r2, [fp, #-16]
   3c6ec:	movw	r3, #0
   3c6f0:	str	r2, [sp, #16]
   3c6f4:	mov	r2, r3
   3c6f8:	add	r3, sp, #24
   3c6fc:	ldr	ip, [sp, #16]
   3c700:	str	ip, [sp]
   3c704:	bl	4653c <flatcc_json_printer_clear@@Base+0x17f8>
   3c708:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c70c:	ldr	r2, [fp, #-4]
   3c710:	ldr	r3, [r2, #20]
   3c714:	add	r1, r3, r1
   3c718:	str	r1, [r2, #20]
   3c71c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c720:	ldr	r2, [sp, #32]
   3c724:	add	r1, r2, r1
   3c728:	str	r1, [sp, #32]
   3c72c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c730:	ldr	r2, [sp, #28]
   3c734:	sub	r1, r2, r1
   3c738:	str	r1, [sp, #28]
   3c73c:	ldr	r1, [fp, #-4]
   3c740:	ldr	r1, [r1, #44]	; 0x2c
   3c744:	ldr	r2, [fp, #-4]
   3c748:	str	r0, [sp, #12]
   3c74c:	mov	r0, r2
   3c750:	movw	r2, #0
   3c754:	str	r1, [sp, #8]
   3c758:	mov	r1, r2
   3c75c:	ldr	r2, [sp, #8]
   3c760:	blx	r2
   3c764:	ldr	r0, [sp, #28]
   3c768:	ldr	r1, [fp, #-12]
   3c76c:	bl	46480 <flatcc_json_printer_clear@@Base+0x173c>
   3c770:	str	r0, [fp, #-28]	; 0xffffffe4
   3c774:	b	3c654 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   3c778:	ldr	r0, [fp, #-4]
   3c77c:	ldr	r0, [r0, #20]
   3c780:	ldr	r1, [sp, #32]
   3c784:	ldr	r2, [fp, #-12]
   3c788:	movw	r3, #0
   3c78c:	str	r2, [sp, #4]
   3c790:	mov	r2, r3
   3c794:	add	r3, sp, #28
   3c798:	ldr	ip, [sp, #4]
   3c79c:	str	ip, [sp]
   3c7a0:	bl	4653c <flatcc_json_printer_clear@@Base+0x17f8>
   3c7a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3c7a8:	ldr	r2, [fp, #-4]
   3c7ac:	ldr	r3, [r2, #20]
   3c7b0:	add	r1, r3, r1
   3c7b4:	str	r1, [r2, #20]
   3c7b8:	ldr	r1, [fp, #-4]
   3c7bc:	ldr	r2, [r1, #20]
   3c7c0:	add	r3, r2, #1
   3c7c4:	str	r3, [r1, #20]
   3c7c8:	movw	r1, #34	; 0x22
   3c7cc:	strb	r1, [r2]
   3c7d0:	mov	sp, fp
   3c7d4:	pop	{fp, pc}
   3c7d8:	andeq	r1, r1, r9, lsr #7
   3c7dc:	andeq	r1, r1, r7, lsr #32
   3c7e0:	muleq	r1, pc, r3	; <UNPREDICTABLE>

0003c7e4 <flatcc_json_printer_uint8_field@@Base>:
   3c7e4:	push	{fp, lr}
   3c7e8:	mov	fp, sp
   3c7ec:	sub	sp, sp, #32
   3c7f0:	ldr	ip, [fp, #12]
   3c7f4:	ldr	lr, [fp, #8]
   3c7f8:	str	r0, [fp, #-4]
   3c7fc:	str	r1, [fp, #-8]
   3c800:	str	r2, [fp, #-12]
   3c804:	str	r3, [sp, #16]
   3c808:	strb	ip, [sp, #15]
   3c80c:	ldr	r0, [fp, #-8]
   3c810:	ldr	r1, [fp, #-12]
   3c814:	str	lr, [sp, #4]
   3c818:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3c81c:	str	r0, [sp, #8]
   3c820:	ldr	r0, [sp, #8]
   3c824:	movw	r1, #0
   3c828:	cmp	r0, r1
   3c82c:	beq	3c864 <flatcc_json_printer_uint8_field@@Base+0x80>
   3c830:	ldr	r0, [sp, #8]
   3c834:	bl	3c8ec <flatcc_json_printer_uint8_field@@Base+0x108>
   3c838:	strb	r0, [sp, #14]
   3c83c:	ldrb	r0, [sp, #14]
   3c840:	ldrb	r1, [sp, #15]
   3c844:	cmp	r0, r1
   3c848:	bne	3c860 <flatcc_json_printer_uint8_field@@Base+0x7c>
   3c84c:	ldr	r0, [fp, #-4]
   3c850:	ldrb	r0, [r0, #28]
   3c854:	cmp	r0, #0
   3c858:	beq	3c860 <flatcc_json_printer_uint8_field@@Base+0x7c>
   3c85c:	b	3c8e4 <flatcc_json_printer_uint8_field@@Base+0x100>
   3c860:	b	3c880 <flatcc_json_printer_uint8_field@@Base+0x9c>
   3c864:	ldr	r0, [fp, #-4]
   3c868:	ldrsb	r0, [r0, #29]
   3c86c:	cmp	r0, #0
   3c870:	bne	3c878 <flatcc_json_printer_uint8_field@@Base+0x94>
   3c874:	b	3c8e4 <flatcc_json_printer_uint8_field@@Base+0x100>
   3c878:	ldrb	r0, [sp, #15]
   3c87c:	strb	r0, [sp, #14]
   3c880:	ldr	r0, [fp, #-8]
   3c884:	ldr	r1, [r0, #16]
   3c888:	add	r2, r1, #1
   3c88c:	str	r2, [r0, #16]
   3c890:	cmp	r1, #0
   3c894:	beq	3c8b0 <flatcc_json_printer_uint8_field@@Base+0xcc>
   3c898:	ldr	r0, [fp, #-4]
   3c89c:	ldr	r1, [r0, #20]
   3c8a0:	add	r2, r1, #1
   3c8a4:	str	r2, [r0, #20]
   3c8a8:	movw	r0, #44	; 0x2c
   3c8ac:	strb	r0, [r1]
   3c8b0:	ldr	r0, [fp, #-4]
   3c8b4:	ldr	r1, [sp, #16]
   3c8b8:	ldr	r2, [fp, #8]
   3c8bc:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3c8c0:	ldrb	r0, [sp, #14]
   3c8c4:	ldr	r1, [fp, #-4]
   3c8c8:	ldr	r1, [r1, #20]
   3c8cc:	and	r0, r0, #255	; 0xff
   3c8d0:	bl	3a608 <flatcc_json_printer_uint8@@Base+0x40>
   3c8d4:	ldr	r1, [fp, #-4]
   3c8d8:	ldr	r2, [r1, #20]
   3c8dc:	add	r0, r2, r0
   3c8e0:	str	r0, [r1, #20]
   3c8e4:	mov	sp, fp
   3c8e8:	pop	{fp, pc}
   3c8ec:	push	{fp, lr}
   3c8f0:	mov	fp, sp
   3c8f4:	sub	sp, sp, #8
   3c8f8:	str	r0, [sp, #4]
   3c8fc:	ldr	r0, [sp, #4]
   3c900:	ldrb	r0, [r0]
   3c904:	bl	468a8 <flatcc_json_printer_clear@@Base+0x1b64>
   3c908:	and	r0, r0, #255	; 0xff
   3c90c:	mov	sp, fp
   3c910:	pop	{fp, pc}

0003c914 <flatcc_json_printer_uint16_field@@Base>:
   3c914:	push	{fp, lr}
   3c918:	mov	fp, sp
   3c91c:	sub	sp, sp, #32
   3c920:	ldr	ip, [fp, #12]
   3c924:	ldr	lr, [fp, #8]
   3c928:	str	r0, [fp, #-4]
   3c92c:	str	r1, [fp, #-8]
   3c930:	str	r2, [fp, #-12]
   3c934:	str	r3, [sp, #16]
   3c938:	strh	ip, [sp, #14]
   3c93c:	ldr	r0, [fp, #-8]
   3c940:	ldr	r1, [fp, #-12]
   3c944:	str	lr, [sp, #4]
   3c948:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3c94c:	str	r0, [sp, #8]
   3c950:	ldr	r0, [sp, #8]
   3c954:	movw	r1, #0
   3c958:	cmp	r0, r1
   3c95c:	beq	3c994 <flatcc_json_printer_uint16_field@@Base+0x80>
   3c960:	ldr	r0, [sp, #8]
   3c964:	bl	3ca1c <flatcc_json_printer_uint16_field@@Base+0x108>
   3c968:	strh	r0, [sp, #12]
   3c96c:	ldrh	r0, [sp, #12]
   3c970:	ldrh	r1, [sp, #14]
   3c974:	cmp	r0, r1
   3c978:	bne	3c990 <flatcc_json_printer_uint16_field@@Base+0x7c>
   3c97c:	ldr	r0, [fp, #-4]
   3c980:	ldrb	r0, [r0, #28]
   3c984:	cmp	r0, #0
   3c988:	beq	3c990 <flatcc_json_printer_uint16_field@@Base+0x7c>
   3c98c:	b	3ca14 <flatcc_json_printer_uint16_field@@Base+0x100>
   3c990:	b	3c9b0 <flatcc_json_printer_uint16_field@@Base+0x9c>
   3c994:	ldr	r0, [fp, #-4]
   3c998:	ldrsb	r0, [r0, #29]
   3c99c:	cmp	r0, #0
   3c9a0:	bne	3c9a8 <flatcc_json_printer_uint16_field@@Base+0x94>
   3c9a4:	b	3ca14 <flatcc_json_printer_uint16_field@@Base+0x100>
   3c9a8:	ldrh	r0, [sp, #14]
   3c9ac:	strh	r0, [sp, #12]
   3c9b0:	ldr	r0, [fp, #-8]
   3c9b4:	ldr	r1, [r0, #16]
   3c9b8:	add	r2, r1, #1
   3c9bc:	str	r2, [r0, #16]
   3c9c0:	cmp	r1, #0
   3c9c4:	beq	3c9e0 <flatcc_json_printer_uint16_field@@Base+0xcc>
   3c9c8:	ldr	r0, [fp, #-4]
   3c9cc:	ldr	r1, [r0, #20]
   3c9d0:	add	r2, r1, #1
   3c9d4:	str	r2, [r0, #20]
   3c9d8:	movw	r0, #44	; 0x2c
   3c9dc:	strb	r0, [r1]
   3c9e0:	ldr	r0, [fp, #-4]
   3c9e4:	ldr	r1, [sp, #16]
   3c9e8:	ldr	r2, [fp, #8]
   3c9ec:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3c9f0:	ldrh	r0, [sp, #12]
   3c9f4:	ldr	r1, [fp, #-4]
   3c9f8:	ldr	r1, [r1, #20]
   3c9fc:	uxth	r0, r0
   3ca00:	bl	3a7dc <flatcc_json_printer_uint16@@Base+0x40>
   3ca04:	ldr	r1, [fp, #-4]
   3ca08:	ldr	r2, [r1, #20]
   3ca0c:	add	r0, r2, r0
   3ca10:	str	r0, [r1, #20]
   3ca14:	mov	sp, fp
   3ca18:	pop	{fp, pc}
   3ca1c:	push	{fp, lr}
   3ca20:	mov	fp, sp
   3ca24:	sub	sp, sp, #8
   3ca28:	str	r0, [sp, #4]
   3ca2c:	ldr	r0, [sp, #4]
   3ca30:	ldrh	r0, [r0]
   3ca34:	bl	468bc <flatcc_json_printer_clear@@Base+0x1b78>
   3ca38:	uxth	r0, r0
   3ca3c:	mov	sp, fp
   3ca40:	pop	{fp, pc}

0003ca44 <flatcc_json_printer_uint32_field@@Base>:
   3ca44:	push	{fp, lr}
   3ca48:	mov	fp, sp
   3ca4c:	sub	sp, sp, #32
   3ca50:	ldr	ip, [fp, #12]
   3ca54:	ldr	lr, [fp, #8]
   3ca58:	str	r0, [fp, #-4]
   3ca5c:	str	r1, [fp, #-8]
   3ca60:	str	r2, [fp, #-12]
   3ca64:	str	r3, [sp, #16]
   3ca68:	ldr	r0, [fp, #-8]
   3ca6c:	ldr	r1, [fp, #-12]
   3ca70:	str	ip, [sp, #4]
   3ca74:	str	lr, [sp]
   3ca78:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3ca7c:	str	r0, [sp, #8]
   3ca80:	ldr	r0, [sp, #8]
   3ca84:	movw	r1, #0
   3ca88:	cmp	r0, r1
   3ca8c:	beq	3cac4 <flatcc_json_printer_uint32_field@@Base+0x80>
   3ca90:	ldr	r0, [sp, #8]
   3ca94:	bl	3cb48 <flatcc_json_printer_uint32_field@@Base+0x104>
   3ca98:	str	r0, [sp, #12]
   3ca9c:	ldr	r0, [sp, #12]
   3caa0:	ldr	r1, [fp, #12]
   3caa4:	cmp	r0, r1
   3caa8:	bne	3cac0 <flatcc_json_printer_uint32_field@@Base+0x7c>
   3caac:	ldr	r0, [fp, #-4]
   3cab0:	ldrb	r0, [r0, #28]
   3cab4:	cmp	r0, #0
   3cab8:	beq	3cac0 <flatcc_json_printer_uint32_field@@Base+0x7c>
   3cabc:	b	3cb40 <flatcc_json_printer_uint32_field@@Base+0xfc>
   3cac0:	b	3cae0 <flatcc_json_printer_uint32_field@@Base+0x9c>
   3cac4:	ldr	r0, [fp, #-4]
   3cac8:	ldrsb	r0, [r0, #29]
   3cacc:	cmp	r0, #0
   3cad0:	bne	3cad8 <flatcc_json_printer_uint32_field@@Base+0x94>
   3cad4:	b	3cb40 <flatcc_json_printer_uint32_field@@Base+0xfc>
   3cad8:	ldr	r0, [fp, #12]
   3cadc:	str	r0, [sp, #12]
   3cae0:	ldr	r0, [fp, #-8]
   3cae4:	ldr	r1, [r0, #16]
   3cae8:	add	r2, r1, #1
   3caec:	str	r2, [r0, #16]
   3caf0:	cmp	r1, #0
   3caf4:	beq	3cb10 <flatcc_json_printer_uint32_field@@Base+0xcc>
   3caf8:	ldr	r0, [fp, #-4]
   3cafc:	ldr	r1, [r0, #20]
   3cb00:	add	r2, r1, #1
   3cb04:	str	r2, [r0, #20]
   3cb08:	movw	r0, #44	; 0x2c
   3cb0c:	strb	r0, [r1]
   3cb10:	ldr	r0, [fp, #-4]
   3cb14:	ldr	r1, [sp, #16]
   3cb18:	ldr	r2, [fp, #8]
   3cb1c:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3cb20:	ldr	r0, [sp, #12]
   3cb24:	ldr	r1, [fp, #-4]
   3cb28:	ldr	r1, [r1, #20]
   3cb2c:	bl	3ab10 <flatcc_json_printer_uint32@@Base+0x3c>
   3cb30:	ldr	r1, [fp, #-4]
   3cb34:	ldr	r2, [r1, #20]
   3cb38:	add	r0, r2, r0
   3cb3c:	str	r0, [r1, #20]
   3cb40:	mov	sp, fp
   3cb44:	pop	{fp, pc}
   3cb48:	push	{fp, lr}
   3cb4c:	mov	fp, sp
   3cb50:	sub	sp, sp, #8
   3cb54:	str	r0, [sp, #4]
   3cb58:	ldr	r0, [sp, #4]
   3cb5c:	ldr	r0, [r0]
   3cb60:	bl	468d0 <flatcc_json_printer_clear@@Base+0x1b8c>
   3cb64:	mov	sp, fp
   3cb68:	pop	{fp, pc}

0003cb6c <flatcc_json_printer_uint64_field@@Base>:
   3cb6c:	push	{r4, sl, fp, lr}
   3cb70:	add	fp, sp, #8
   3cb74:	sub	sp, sp, #40	; 0x28
   3cb78:	ldr	ip, [fp, #20]
   3cb7c:	ldr	lr, [fp, #16]
   3cb80:	ldr	r4, [fp, #8]
   3cb84:	str	r0, [fp, #-12]
   3cb88:	str	r1, [fp, #-16]
   3cb8c:	str	r2, [fp, #-20]	; 0xffffffec
   3cb90:	str	r3, [sp, #24]
   3cb94:	str	ip, [sp, #20]
   3cb98:	str	lr, [sp, #16]
   3cb9c:	ldr	r0, [fp, #-16]
   3cba0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cba4:	str	r4, [sp]
   3cba8:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3cbac:	str	r0, [sp, #4]
   3cbb0:	ldr	r0, [sp, #4]
   3cbb4:	movw	r1, #0
   3cbb8:	cmp	r0, r1
   3cbbc:	beq	3cc10 <flatcc_json_printer_uint64_field@@Base+0xa4>
   3cbc0:	ldr	r0, [sp, #4]
   3cbc4:	bl	3cca0 <flatcc_json_printer_uint64_field@@Base+0x134>
   3cbc8:	str	r1, [sp, #12]
   3cbcc:	str	r0, [sp, #8]
   3cbd0:	ldr	r0, [sp, #8]
   3cbd4:	ldr	r1, [sp, #12]
   3cbd8:	ldr	r2, [sp, #16]
   3cbdc:	ldr	r3, [sp, #20]
   3cbe0:	eor	r1, r1, r3
   3cbe4:	eor	r0, r0, r2
   3cbe8:	orr	r0, r0, r1
   3cbec:	cmp	r0, #0
   3cbf0:	bne	3cc0c <flatcc_json_printer_uint64_field@@Base+0xa0>
   3cbf4:	b	3cbf8 <flatcc_json_printer_uint64_field@@Base+0x8c>
   3cbf8:	ldr	r0, [fp, #-12]
   3cbfc:	ldrb	r0, [r0, #28]
   3cc00:	cmp	r0, #0
   3cc04:	beq	3cc0c <flatcc_json_printer_uint64_field@@Base+0xa0>
   3cc08:	b	3cc98 <flatcc_json_printer_uint64_field@@Base+0x12c>
   3cc0c:	b	3cc34 <flatcc_json_printer_uint64_field@@Base+0xc8>
   3cc10:	ldr	r0, [fp, #-12]
   3cc14:	ldrsb	r0, [r0, #29]
   3cc18:	cmp	r0, #0
   3cc1c:	bne	3cc24 <flatcc_json_printer_uint64_field@@Base+0xb8>
   3cc20:	b	3cc98 <flatcc_json_printer_uint64_field@@Base+0x12c>
   3cc24:	ldr	r0, [sp, #16]
   3cc28:	ldr	r1, [sp, #20]
   3cc2c:	str	r1, [sp, #12]
   3cc30:	str	r0, [sp, #8]
   3cc34:	ldr	r0, [fp, #-16]
   3cc38:	ldr	r1, [r0, #16]
   3cc3c:	add	r2, r1, #1
   3cc40:	str	r2, [r0, #16]
   3cc44:	cmp	r1, #0
   3cc48:	beq	3cc64 <flatcc_json_printer_uint64_field@@Base+0xf8>
   3cc4c:	ldr	r0, [fp, #-12]
   3cc50:	ldr	r1, [r0, #20]
   3cc54:	add	r2, r1, #1
   3cc58:	str	r2, [r0, #20]
   3cc5c:	movw	r0, #44	; 0x2c
   3cc60:	strb	r0, [r1]
   3cc64:	ldr	r0, [fp, #-12]
   3cc68:	ldr	r1, [sp, #24]
   3cc6c:	ldr	r2, [fp, #8]
   3cc70:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3cc74:	ldr	r0, [sp, #8]
   3cc78:	ldr	r1, [sp, #12]
   3cc7c:	ldr	r2, [fp, #-12]
   3cc80:	ldr	r2, [r2, #20]
   3cc84:	bl	3b160 <flatcc_json_printer_uint64@@Base+0x44>
   3cc88:	ldr	r1, [fp, #-12]
   3cc8c:	ldr	r2, [r1, #20]
   3cc90:	add	r0, r2, r0
   3cc94:	str	r0, [r1, #20]
   3cc98:	sub	sp, fp, #8
   3cc9c:	pop	{r4, sl, fp, pc}
   3cca0:	push	{fp, lr}
   3cca4:	mov	fp, sp
   3cca8:	sub	sp, sp, #8
   3ccac:	str	r0, [sp, #4]
   3ccb0:	ldr	r0, [sp, #4]
   3ccb4:	ldr	r1, [r0]
   3ccb8:	ldr	r0, [r0, #4]
   3ccbc:	str	r0, [sp]
   3ccc0:	mov	r0, r1
   3ccc4:	ldr	r1, [sp]
   3ccc8:	bl	468e4 <flatcc_json_printer_clear@@Base+0x1ba0>
   3cccc:	mov	sp, fp
   3ccd0:	pop	{fp, pc}

0003ccd4 <flatcc_json_printer_int8_field@@Base>:
   3ccd4:	push	{fp, lr}
   3ccd8:	mov	fp, sp
   3ccdc:	sub	sp, sp, #32
   3cce0:	ldr	ip, [fp, #12]
   3cce4:	ldr	lr, [fp, #8]
   3cce8:	str	r0, [fp, #-4]
   3ccec:	str	r1, [fp, #-8]
   3ccf0:	str	r2, [fp, #-12]
   3ccf4:	str	r3, [sp, #16]
   3ccf8:	strb	ip, [sp, #15]
   3ccfc:	ldr	r0, [fp, #-8]
   3cd00:	ldr	r1, [fp, #-12]
   3cd04:	str	lr, [sp, #4]
   3cd08:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3cd0c:	str	r0, [sp, #8]
   3cd10:	ldr	r0, [sp, #8]
   3cd14:	movw	r1, #0
   3cd18:	cmp	r0, r1
   3cd1c:	beq	3cd54 <flatcc_json_printer_int8_field@@Base+0x80>
   3cd20:	ldr	r0, [sp, #8]
   3cd24:	bl	3cddc <flatcc_json_printer_int8_field@@Base+0x108>
   3cd28:	strb	r0, [sp, #14]
   3cd2c:	ldrsb	r0, [sp, #14]
   3cd30:	ldrsb	r1, [sp, #15]
   3cd34:	cmp	r0, r1
   3cd38:	bne	3cd50 <flatcc_json_printer_int8_field@@Base+0x7c>
   3cd3c:	ldr	r0, [fp, #-4]
   3cd40:	ldrb	r0, [r0, #28]
   3cd44:	cmp	r0, #0
   3cd48:	beq	3cd50 <flatcc_json_printer_int8_field@@Base+0x7c>
   3cd4c:	b	3cdd4 <flatcc_json_printer_int8_field@@Base+0x100>
   3cd50:	b	3cd70 <flatcc_json_printer_int8_field@@Base+0x9c>
   3cd54:	ldr	r0, [fp, #-4]
   3cd58:	ldrsb	r0, [r0, #29]
   3cd5c:	cmp	r0, #0
   3cd60:	bne	3cd68 <flatcc_json_printer_int8_field@@Base+0x94>
   3cd64:	b	3cdd4 <flatcc_json_printer_int8_field@@Base+0x100>
   3cd68:	ldrb	r0, [sp, #15]
   3cd6c:	strb	r0, [sp, #14]
   3cd70:	ldr	r0, [fp, #-8]
   3cd74:	ldr	r1, [r0, #16]
   3cd78:	add	r2, r1, #1
   3cd7c:	str	r2, [r0, #16]
   3cd80:	cmp	r1, #0
   3cd84:	beq	3cda0 <flatcc_json_printer_int8_field@@Base+0xcc>
   3cd88:	ldr	r0, [fp, #-4]
   3cd8c:	ldr	r1, [r0, #20]
   3cd90:	add	r2, r1, #1
   3cd94:	str	r2, [r0, #20]
   3cd98:	movw	r0, #44	; 0x2c
   3cd9c:	strb	r0, [r1]
   3cda0:	ldr	r0, [fp, #-4]
   3cda4:	ldr	r1, [sp, #16]
   3cda8:	ldr	r2, [fp, #8]
   3cdac:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3cdb0:	ldrb	r0, [sp, #14]
   3cdb4:	ldr	r1, [fp, #-4]
   3cdb8:	ldr	r1, [r1, #20]
   3cdbc:	sxtb	r0, r0
   3cdc0:	bl	3bd10 <flatcc_json_printer_int8@@Base+0x40>
   3cdc4:	ldr	r1, [fp, #-4]
   3cdc8:	ldr	r2, [r1, #20]
   3cdcc:	add	r0, r2, r0
   3cdd0:	str	r0, [r1, #20]
   3cdd4:	mov	sp, fp
   3cdd8:	pop	{fp, pc}
   3cddc:	push	{fp, lr}
   3cde0:	mov	fp, sp
   3cde4:	sub	sp, sp, #8
   3cde8:	str	r0, [sp, #4]
   3cdec:	ldr	r0, [sp, #4]
   3cdf0:	ldrsb	r0, [r0]
   3cdf4:	bl	46900 <flatcc_json_printer_clear@@Base+0x1bbc>
   3cdf8:	sxtb	r0, r0
   3cdfc:	mov	sp, fp
   3ce00:	pop	{fp, pc}

0003ce04 <flatcc_json_printer_int16_field@@Base>:
   3ce04:	push	{fp, lr}
   3ce08:	mov	fp, sp
   3ce0c:	sub	sp, sp, #32
   3ce10:	ldr	ip, [fp, #12]
   3ce14:	ldr	lr, [fp, #8]
   3ce18:	str	r0, [fp, #-4]
   3ce1c:	str	r1, [fp, #-8]
   3ce20:	str	r2, [fp, #-12]
   3ce24:	str	r3, [sp, #16]
   3ce28:	strh	ip, [sp, #14]
   3ce2c:	ldr	r0, [fp, #-8]
   3ce30:	ldr	r1, [fp, #-12]
   3ce34:	str	lr, [sp, #4]
   3ce38:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3ce3c:	str	r0, [sp, #8]
   3ce40:	ldr	r0, [sp, #8]
   3ce44:	movw	r1, #0
   3ce48:	cmp	r0, r1
   3ce4c:	beq	3ce84 <flatcc_json_printer_int16_field@@Base+0x80>
   3ce50:	ldr	r0, [sp, #8]
   3ce54:	bl	3cf0c <flatcc_json_printer_int16_field@@Base+0x108>
   3ce58:	strh	r0, [sp, #12]
   3ce5c:	ldrsh	r0, [sp, #12]
   3ce60:	ldrsh	r1, [sp, #14]
   3ce64:	cmp	r0, r1
   3ce68:	bne	3ce80 <flatcc_json_printer_int16_field@@Base+0x7c>
   3ce6c:	ldr	r0, [fp, #-4]
   3ce70:	ldrb	r0, [r0, #28]
   3ce74:	cmp	r0, #0
   3ce78:	beq	3ce80 <flatcc_json_printer_int16_field@@Base+0x7c>
   3ce7c:	b	3cf04 <flatcc_json_printer_int16_field@@Base+0x100>
   3ce80:	b	3cea0 <flatcc_json_printer_int16_field@@Base+0x9c>
   3ce84:	ldr	r0, [fp, #-4]
   3ce88:	ldrsb	r0, [r0, #29]
   3ce8c:	cmp	r0, #0
   3ce90:	bne	3ce98 <flatcc_json_printer_int16_field@@Base+0x94>
   3ce94:	b	3cf04 <flatcc_json_printer_int16_field@@Base+0x100>
   3ce98:	ldrh	r0, [sp, #14]
   3ce9c:	strh	r0, [sp, #12]
   3cea0:	ldr	r0, [fp, #-8]
   3cea4:	ldr	r1, [r0, #16]
   3cea8:	add	r2, r1, #1
   3ceac:	str	r2, [r0, #16]
   3ceb0:	cmp	r1, #0
   3ceb4:	beq	3ced0 <flatcc_json_printer_int16_field@@Base+0xcc>
   3ceb8:	ldr	r0, [fp, #-4]
   3cebc:	ldr	r1, [r0, #20]
   3cec0:	add	r2, r1, #1
   3cec4:	str	r2, [r0, #20]
   3cec8:	movw	r0, #44	; 0x2c
   3cecc:	strb	r0, [r1]
   3ced0:	ldr	r0, [fp, #-4]
   3ced4:	ldr	r1, [sp, #16]
   3ced8:	ldr	r2, [fp, #8]
   3cedc:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3cee0:	ldrh	r0, [sp, #12]
   3cee4:	ldr	r1, [fp, #-4]
   3cee8:	ldr	r1, [r1, #20]
   3ceec:	sxth	r0, r0
   3cef0:	bl	3bdc8 <flatcc_json_printer_int16@@Base+0x40>
   3cef4:	ldr	r1, [fp, #-4]
   3cef8:	ldr	r2, [r1, #20]
   3cefc:	add	r0, r2, r0
   3cf00:	str	r0, [r1, #20]
   3cf04:	mov	sp, fp
   3cf08:	pop	{fp, pc}
   3cf0c:	push	{fp, lr}
   3cf10:	mov	fp, sp
   3cf14:	sub	sp, sp, #8
   3cf18:	str	r0, [sp, #4]
   3cf1c:	ldr	r0, [sp, #4]
   3cf20:	ldrsh	r0, [r0]
   3cf24:	bl	46914 <flatcc_json_printer_clear@@Base+0x1bd0>
   3cf28:	sxth	r0, r0
   3cf2c:	mov	sp, fp
   3cf30:	pop	{fp, pc}

0003cf34 <flatcc_json_printer_int32_field@@Base>:
   3cf34:	push	{fp, lr}
   3cf38:	mov	fp, sp
   3cf3c:	sub	sp, sp, #32
   3cf40:	ldr	ip, [fp, #12]
   3cf44:	ldr	lr, [fp, #8]
   3cf48:	str	r0, [fp, #-4]
   3cf4c:	str	r1, [fp, #-8]
   3cf50:	str	r2, [fp, #-12]
   3cf54:	str	r3, [sp, #16]
   3cf58:	ldr	r0, [fp, #-8]
   3cf5c:	ldr	r1, [fp, #-12]
   3cf60:	str	ip, [sp, #4]
   3cf64:	str	lr, [sp]
   3cf68:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3cf6c:	str	r0, [sp, #8]
   3cf70:	ldr	r0, [sp, #8]
   3cf74:	movw	r1, #0
   3cf78:	cmp	r0, r1
   3cf7c:	beq	3cfb4 <flatcc_json_printer_int32_field@@Base+0x80>
   3cf80:	ldr	r0, [sp, #8]
   3cf84:	bl	3d038 <flatcc_json_printer_int32_field@@Base+0x104>
   3cf88:	str	r0, [sp, #12]
   3cf8c:	ldr	r0, [sp, #12]
   3cf90:	ldr	r1, [fp, #12]
   3cf94:	cmp	r0, r1
   3cf98:	bne	3cfb0 <flatcc_json_printer_int32_field@@Base+0x7c>
   3cf9c:	ldr	r0, [fp, #-4]
   3cfa0:	ldrb	r0, [r0, #28]
   3cfa4:	cmp	r0, #0
   3cfa8:	beq	3cfb0 <flatcc_json_printer_int32_field@@Base+0x7c>
   3cfac:	b	3d030 <flatcc_json_printer_int32_field@@Base+0xfc>
   3cfb0:	b	3cfd0 <flatcc_json_printer_int32_field@@Base+0x9c>
   3cfb4:	ldr	r0, [fp, #-4]
   3cfb8:	ldrsb	r0, [r0, #29]
   3cfbc:	cmp	r0, #0
   3cfc0:	bne	3cfc8 <flatcc_json_printer_int32_field@@Base+0x94>
   3cfc4:	b	3d030 <flatcc_json_printer_int32_field@@Base+0xfc>
   3cfc8:	ldr	r0, [fp, #12]
   3cfcc:	str	r0, [sp, #12]
   3cfd0:	ldr	r0, [fp, #-8]
   3cfd4:	ldr	r1, [r0, #16]
   3cfd8:	add	r2, r1, #1
   3cfdc:	str	r2, [r0, #16]
   3cfe0:	cmp	r1, #0
   3cfe4:	beq	3d000 <flatcc_json_printer_int32_field@@Base+0xcc>
   3cfe8:	ldr	r0, [fp, #-4]
   3cfec:	ldr	r1, [r0, #20]
   3cff0:	add	r2, r1, #1
   3cff4:	str	r2, [r0, #20]
   3cff8:	movw	r0, #44	; 0x2c
   3cffc:	strb	r0, [r1]
   3d000:	ldr	r0, [fp, #-4]
   3d004:	ldr	r1, [sp, #16]
   3d008:	ldr	r2, [fp, #8]
   3d00c:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3d010:	ldr	r0, [sp, #12]
   3d014:	ldr	r1, [fp, #-4]
   3d018:	ldr	r1, [r1, #20]
   3d01c:	bl	3be7c <flatcc_json_printer_int32@@Base+0x3c>
   3d020:	ldr	r1, [fp, #-4]
   3d024:	ldr	r2, [r1, #20]
   3d028:	add	r0, r2, r0
   3d02c:	str	r0, [r1, #20]
   3d030:	mov	sp, fp
   3d034:	pop	{fp, pc}
   3d038:	push	{fp, lr}
   3d03c:	mov	fp, sp
   3d040:	sub	sp, sp, #8
   3d044:	str	r0, [sp, #4]
   3d048:	ldr	r0, [sp, #4]
   3d04c:	ldr	r0, [r0]
   3d050:	bl	46928 <flatcc_json_printer_clear@@Base+0x1be4>
   3d054:	mov	sp, fp
   3d058:	pop	{fp, pc}

0003d05c <flatcc_json_printer_int64_field@@Base>:
   3d05c:	push	{r4, sl, fp, lr}
   3d060:	add	fp, sp, #8
   3d064:	sub	sp, sp, #40	; 0x28
   3d068:	ldr	ip, [fp, #20]
   3d06c:	ldr	lr, [fp, #16]
   3d070:	ldr	r4, [fp, #8]
   3d074:	str	r0, [fp, #-12]
   3d078:	str	r1, [fp, #-16]
   3d07c:	str	r2, [fp, #-20]	; 0xffffffec
   3d080:	str	r3, [sp, #24]
   3d084:	str	ip, [sp, #20]
   3d088:	str	lr, [sp, #16]
   3d08c:	ldr	r0, [fp, #-16]
   3d090:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d094:	str	r4, [sp]
   3d098:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3d09c:	str	r0, [sp, #4]
   3d0a0:	ldr	r0, [sp, #4]
   3d0a4:	movw	r1, #0
   3d0a8:	cmp	r0, r1
   3d0ac:	beq	3d100 <flatcc_json_printer_int64_field@@Base+0xa4>
   3d0b0:	ldr	r0, [sp, #4]
   3d0b4:	bl	3d190 <flatcc_json_printer_int64_field@@Base+0x134>
   3d0b8:	str	r1, [sp, #12]
   3d0bc:	str	r0, [sp, #8]
   3d0c0:	ldr	r0, [sp, #8]
   3d0c4:	ldr	r1, [sp, #12]
   3d0c8:	ldr	r2, [sp, #16]
   3d0cc:	ldr	r3, [sp, #20]
   3d0d0:	eor	r1, r1, r3
   3d0d4:	eor	r0, r0, r2
   3d0d8:	orr	r0, r0, r1
   3d0dc:	cmp	r0, #0
   3d0e0:	bne	3d0fc <flatcc_json_printer_int64_field@@Base+0xa0>
   3d0e4:	b	3d0e8 <flatcc_json_printer_int64_field@@Base+0x8c>
   3d0e8:	ldr	r0, [fp, #-12]
   3d0ec:	ldrb	r0, [r0, #28]
   3d0f0:	cmp	r0, #0
   3d0f4:	beq	3d0fc <flatcc_json_printer_int64_field@@Base+0xa0>
   3d0f8:	b	3d188 <flatcc_json_printer_int64_field@@Base+0x12c>
   3d0fc:	b	3d124 <flatcc_json_printer_int64_field@@Base+0xc8>
   3d100:	ldr	r0, [fp, #-12]
   3d104:	ldrsb	r0, [r0, #29]
   3d108:	cmp	r0, #0
   3d10c:	bne	3d114 <flatcc_json_printer_int64_field@@Base+0xb8>
   3d110:	b	3d188 <flatcc_json_printer_int64_field@@Base+0x12c>
   3d114:	ldr	r0, [sp, #16]
   3d118:	ldr	r1, [sp, #20]
   3d11c:	str	r1, [sp, #12]
   3d120:	str	r0, [sp, #8]
   3d124:	ldr	r0, [fp, #-16]
   3d128:	ldr	r1, [r0, #16]
   3d12c:	add	r2, r1, #1
   3d130:	str	r2, [r0, #16]
   3d134:	cmp	r1, #0
   3d138:	beq	3d154 <flatcc_json_printer_int64_field@@Base+0xf8>
   3d13c:	ldr	r0, [fp, #-12]
   3d140:	ldr	r1, [r0, #20]
   3d144:	add	r2, r1, #1
   3d148:	str	r2, [r0, #20]
   3d14c:	movw	r0, #44	; 0x2c
   3d150:	strb	r0, [r1]
   3d154:	ldr	r0, [fp, #-12]
   3d158:	ldr	r1, [sp, #24]
   3d15c:	ldr	r2, [fp, #8]
   3d160:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3d164:	ldr	r0, [sp, #8]
   3d168:	ldr	r1, [sp, #12]
   3d16c:	ldr	r2, [fp, #-12]
   3d170:	ldr	r2, [r2, #20]
   3d174:	bl	3bf34 <flatcc_json_printer_int64@@Base+0x44>
   3d178:	ldr	r1, [fp, #-12]
   3d17c:	ldr	r2, [r1, #20]
   3d180:	add	r0, r2, r0
   3d184:	str	r0, [r1, #20]
   3d188:	sub	sp, fp, #8
   3d18c:	pop	{r4, sl, fp, pc}
   3d190:	push	{fp, lr}
   3d194:	mov	fp, sp
   3d198:	sub	sp, sp, #8
   3d19c:	str	r0, [sp, #4]
   3d1a0:	ldr	r0, [sp, #4]
   3d1a4:	ldr	r1, [r0]
   3d1a8:	ldr	r0, [r0, #4]
   3d1ac:	str	r0, [sp]
   3d1b0:	mov	r0, r1
   3d1b4:	ldr	r1, [sp]
   3d1b8:	bl	4693c <flatcc_json_printer_clear@@Base+0x1bf8>
   3d1bc:	mov	sp, fp
   3d1c0:	pop	{fp, pc}

0003d1c4 <flatcc_json_printer_bool_field@@Base>:
   3d1c4:	push	{fp, lr}
   3d1c8:	mov	fp, sp
   3d1cc:	sub	sp, sp, #32
   3d1d0:	ldr	ip, [fp, #12]
   3d1d4:	ldr	lr, [fp, #8]
   3d1d8:	str	r0, [fp, #-4]
   3d1dc:	str	r1, [fp, #-8]
   3d1e0:	str	r2, [fp, #-12]
   3d1e4:	str	r3, [sp, #16]
   3d1e8:	strb	ip, [sp, #15]
   3d1ec:	ldr	r0, [fp, #-8]
   3d1f0:	ldr	r1, [fp, #-12]
   3d1f4:	str	lr, [sp, #4]
   3d1f8:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3d1fc:	str	r0, [sp, #8]
   3d200:	ldr	r0, [sp, #8]
   3d204:	movw	r1, #0
   3d208:	cmp	r0, r1
   3d20c:	beq	3d244 <flatcc_json_printer_bool_field@@Base+0x80>
   3d210:	ldr	r0, [sp, #8]
   3d214:	bl	3d2c8 <flatcc_json_printer_bool_field@@Base+0x104>
   3d218:	strb	r0, [sp, #14]
   3d21c:	ldrb	r0, [sp, #14]
   3d220:	ldrb	r1, [sp, #15]
   3d224:	cmp	r0, r1
   3d228:	bne	3d240 <flatcc_json_printer_bool_field@@Base+0x7c>
   3d22c:	ldr	r0, [fp, #-4]
   3d230:	ldrb	r0, [r0, #28]
   3d234:	cmp	r0, #0
   3d238:	beq	3d240 <flatcc_json_printer_bool_field@@Base+0x7c>
   3d23c:	b	3d2c0 <flatcc_json_printer_bool_field@@Base+0xfc>
   3d240:	b	3d260 <flatcc_json_printer_bool_field@@Base+0x9c>
   3d244:	ldr	r0, [fp, #-4]
   3d248:	ldrsb	r0, [r0, #29]
   3d24c:	cmp	r0, #0
   3d250:	bne	3d258 <flatcc_json_printer_bool_field@@Base+0x94>
   3d254:	b	3d2c0 <flatcc_json_printer_bool_field@@Base+0xfc>
   3d258:	ldrb	r0, [sp, #15]
   3d25c:	strb	r0, [sp, #14]
   3d260:	ldr	r0, [fp, #-8]
   3d264:	ldr	r1, [r0, #16]
   3d268:	add	r2, r1, #1
   3d26c:	str	r2, [r0, #16]
   3d270:	cmp	r1, #0
   3d274:	beq	3d290 <flatcc_json_printer_bool_field@@Base+0xcc>
   3d278:	ldr	r0, [fp, #-4]
   3d27c:	ldr	r1, [r0, #20]
   3d280:	add	r2, r1, #1
   3d284:	str	r2, [r0, #20]
   3d288:	movw	r0, #44	; 0x2c
   3d28c:	strb	r0, [r1]
   3d290:	ldr	r0, [fp, #-4]
   3d294:	ldr	r1, [sp, #16]
   3d298:	ldr	r2, [fp, #8]
   3d29c:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3d2a0:	ldrb	r0, [sp, #14]
   3d2a4:	ldr	r1, [fp, #-4]
   3d2a8:	ldr	r1, [r1, #20]
   3d2ac:	bl	3d2f0 <flatcc_json_printer_bool_field@@Base+0x12c>
   3d2b0:	ldr	r1, [fp, #-4]
   3d2b4:	ldr	r2, [r1, #20]
   3d2b8:	add	r0, r2, r0
   3d2bc:	str	r0, [r1, #20]
   3d2c0:	mov	sp, fp
   3d2c4:	pop	{fp, pc}
   3d2c8:	push	{fp, lr}
   3d2cc:	mov	fp, sp
   3d2d0:	sub	sp, sp, #8
   3d2d4:	str	r0, [sp, #4]
   3d2d8:	ldr	r0, [sp, #4]
   3d2dc:	ldrb	r0, [r0]
   3d2e0:	bl	46958 <flatcc_json_printer_clear@@Base+0x1c14>
   3d2e4:	and	r0, r0, #255	; 0xff
   3d2e8:	mov	sp, fp
   3d2ec:	pop	{fp, pc}
   3d2f0:	sub	sp, sp, #12
   3d2f4:	str	r0, [sp, #4]
   3d2f8:	str	r1, [sp]
   3d2fc:	ldr	r0, [sp, #4]
   3d300:	cmp	r0, #0
   3d304:	beq	3d348 <flatcc_json_printer_bool_field@@Base+0x184>
   3d308:	ldr	r0, [pc, #140]	; 3d39c <flatcc_json_printer_bool_field@@Base+0x1d8>
   3d30c:	add	r0, pc, r0
   3d310:	ldr	r1, [sp]
   3d314:	ldrb	r2, [r0]
   3d318:	strb	r2, [r1]
   3d31c:	ldrb	r2, [r0, #1]
   3d320:	strb	r2, [r1, #1]
   3d324:	ldrb	r2, [r0, #2]
   3d328:	strb	r2, [r1, #2]
   3d32c:	ldrb	r2, [r0, #3]
   3d330:	strb	r2, [r1, #3]
   3d334:	ldrb	r0, [r0, #4]
   3d338:	strb	r0, [r1, #4]
   3d33c:	movw	r0, #4
   3d340:	str	r0, [sp, #8]
   3d344:	b	3d38c <flatcc_json_printer_bool_field@@Base+0x1c8>
   3d348:	ldr	r0, [pc, #72]	; 3d398 <flatcc_json_printer_bool_field@@Base+0x1d4>
   3d34c:	add	r0, pc, r0
   3d350:	ldr	r1, [sp]
   3d354:	ldrb	r2, [r0]
   3d358:	strb	r2, [r1]
   3d35c:	ldrb	r2, [r0, #1]
   3d360:	strb	r2, [r1, #1]
   3d364:	ldrb	r2, [r0, #2]
   3d368:	strb	r2, [r1, #2]
   3d36c:	ldrb	r2, [r0, #3]
   3d370:	strb	r2, [r1, #3]
   3d374:	ldrb	r2, [r0, #4]
   3d378:	strb	r2, [r1, #4]
   3d37c:	ldrb	r0, [r0, #5]
   3d380:	strb	r0, [r1, #5]
   3d384:	movw	r0, #5
   3d388:	str	r0, [sp, #8]
   3d38c:	ldr	r0, [sp, #8]
   3d390:	add	sp, sp, #12
   3d394:	bx	lr
   3d398:	ldrdeq	r0, [r1], -pc	; <UNPREDICTABLE>
   3d39c:	andeq	r0, r1, r9, lsl pc

0003d3a0 <flatcc_json_printer_float_field@@Base>:
   3d3a0:	push	{fp, lr}
   3d3a4:	mov	fp, sp
   3d3a8:	sub	sp, sp, #32
   3d3ac:	ldr	ip, [fp, #8]
   3d3b0:	str	r0, [fp, #-4]
   3d3b4:	str	r1, [fp, #-8]
   3d3b8:	str	r2, [fp, #-12]
   3d3bc:	str	r3, [sp, #16]
   3d3c0:	vstr	s0, [sp, #12]
   3d3c4:	ldr	r0, [fp, #-8]
   3d3c8:	ldr	r1, [fp, #-12]
   3d3cc:	str	ip, [sp]
   3d3d0:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3d3d4:	str	r0, [sp, #4]
   3d3d8:	ldr	r0, [sp, #4]
   3d3dc:	movw	r1, #0
   3d3e0:	cmp	r0, r1
   3d3e4:	beq	3d420 <flatcc_json_printer_float_field@@Base+0x80>
   3d3e8:	ldr	r0, [sp, #4]
   3d3ec:	bl	3d4a8 <flatcc_json_printer_float_field@@Base+0x108>
   3d3f0:	vstr	s0, [sp, #8]
   3d3f4:	vldr	s0, [sp, #8]
   3d3f8:	vldr	s2, [sp, #12]
   3d3fc:	vcmp.f32	s0, s2
   3d400:	vmrs	APSR_nzcv, fpscr
   3d404:	bne	3d41c <flatcc_json_printer_float_field@@Base+0x7c>
   3d408:	ldr	r0, [fp, #-4]
   3d40c:	ldrb	r0, [r0, #28]
   3d410:	cmp	r0, #0
   3d414:	beq	3d41c <flatcc_json_printer_float_field@@Base+0x7c>
   3d418:	b	3d4a0 <flatcc_json_printer_float_field@@Base+0x100>
   3d41c:	b	3d43c <flatcc_json_printer_float_field@@Base+0x9c>
   3d420:	ldr	r0, [fp, #-4]
   3d424:	ldrsb	r0, [r0, #29]
   3d428:	cmp	r0, #0
   3d42c:	bne	3d434 <flatcc_json_printer_float_field@@Base+0x94>
   3d430:	b	3d4a0 <flatcc_json_printer_float_field@@Base+0x100>
   3d434:	vldr	s0, [sp, #12]
   3d438:	vstr	s0, [sp, #8]
   3d43c:	ldr	r0, [fp, #-8]
   3d440:	ldr	r1, [r0, #16]
   3d444:	add	r2, r1, #1
   3d448:	str	r2, [r0, #16]
   3d44c:	cmp	r1, #0
   3d450:	beq	3d46c <flatcc_json_printer_float_field@@Base+0xcc>
   3d454:	ldr	r0, [fp, #-4]
   3d458:	ldr	r1, [r0, #20]
   3d45c:	add	r2, r1, #1
   3d460:	str	r2, [r0, #20]
   3d464:	movw	r0, #44	; 0x2c
   3d468:	strb	r0, [r1]
   3d46c:	ldr	r0, [fp, #-4]
   3d470:	ldr	r1, [sp, #16]
   3d474:	ldr	r2, [fp, #8]
   3d478:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3d47c:	vldr	s0, [sp, #8]
   3d480:	vcvt.f64.f32	d0, s0
   3d484:	ldr	r0, [fp, #-4]
   3d488:	ldr	r0, [r0, #20]
   3d48c:	bl	399a0 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3d490:	ldr	r1, [fp, #-4]
   3d494:	ldr	r2, [r1, #20]
   3d498:	add	r0, r2, r0
   3d49c:	str	r0, [r1, #20]
   3d4a0:	mov	sp, fp
   3d4a4:	pop	{fp, pc}
   3d4a8:	push	{fp, lr}
   3d4ac:	mov	fp, sp
   3d4b0:	sub	sp, sp, #8
   3d4b4:	str	r0, [sp, #4]
   3d4b8:	ldr	r0, [sp, #4]
   3d4bc:	vldr	s0, [r0]
   3d4c0:	bl	4696c <flatcc_json_printer_clear@@Base+0x1c28>
   3d4c4:	mov	sp, fp
   3d4c8:	pop	{fp, pc}

0003d4cc <flatcc_json_printer_double_field@@Base>:
   3d4cc:	push	{fp, lr}
   3d4d0:	mov	fp, sp
   3d4d4:	sub	sp, sp, #40	; 0x28
   3d4d8:	ldr	ip, [fp, #8]
   3d4dc:	str	r0, [fp, #-4]
   3d4e0:	str	r1, [fp, #-8]
   3d4e4:	str	r2, [fp, #-12]
   3d4e8:	str	r3, [fp, #-16]
   3d4ec:	vstr	d0, [sp, #16]
   3d4f0:	ldr	r0, [fp, #-8]
   3d4f4:	ldr	r1, [fp, #-12]
   3d4f8:	str	ip, [sp]
   3d4fc:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3d500:	str	r0, [sp, #4]
   3d504:	ldr	r0, [sp, #4]
   3d508:	movw	r1, #0
   3d50c:	cmp	r0, r1
   3d510:	beq	3d54c <flatcc_json_printer_double_field@@Base+0x80>
   3d514:	ldr	r0, [sp, #4]
   3d518:	bl	3d5d0 <flatcc_json_printer_double_field@@Base+0x104>
   3d51c:	vstr	d0, [sp, #8]
   3d520:	vldr	d16, [sp, #8]
   3d524:	vldr	d17, [sp, #16]
   3d528:	vcmp.f64	d16, d17
   3d52c:	vmrs	APSR_nzcv, fpscr
   3d530:	bne	3d548 <flatcc_json_printer_double_field@@Base+0x7c>
   3d534:	ldr	r0, [fp, #-4]
   3d538:	ldrb	r0, [r0, #28]
   3d53c:	cmp	r0, #0
   3d540:	beq	3d548 <flatcc_json_printer_double_field@@Base+0x7c>
   3d544:	b	3d5c8 <flatcc_json_printer_double_field@@Base+0xfc>
   3d548:	b	3d568 <flatcc_json_printer_double_field@@Base+0x9c>
   3d54c:	ldr	r0, [fp, #-4]
   3d550:	ldrsb	r0, [r0, #29]
   3d554:	cmp	r0, #0
   3d558:	bne	3d560 <flatcc_json_printer_double_field@@Base+0x94>
   3d55c:	b	3d5c8 <flatcc_json_printer_double_field@@Base+0xfc>
   3d560:	vldr	d16, [sp, #16]
   3d564:	vstr	d16, [sp, #8]
   3d568:	ldr	r0, [fp, #-8]
   3d56c:	ldr	r1, [r0, #16]
   3d570:	add	r2, r1, #1
   3d574:	str	r2, [r0, #16]
   3d578:	cmp	r1, #0
   3d57c:	beq	3d598 <flatcc_json_printer_double_field@@Base+0xcc>
   3d580:	ldr	r0, [fp, #-4]
   3d584:	ldr	r1, [r0, #20]
   3d588:	add	r2, r1, #1
   3d58c:	str	r2, [r0, #20]
   3d590:	movw	r0, #44	; 0x2c
   3d594:	strb	r0, [r1]
   3d598:	ldr	r0, [fp, #-4]
   3d59c:	ldr	r1, [fp, #-16]
   3d5a0:	ldr	r2, [fp, #8]
   3d5a4:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3d5a8:	vldr	d0, [sp, #8]
   3d5ac:	ldr	r0, [fp, #-4]
   3d5b0:	ldr	r0, [r0, #20]
   3d5b4:	bl	399a0 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3d5b8:	ldr	r1, [fp, #-4]
   3d5bc:	ldr	r2, [r1, #20]
   3d5c0:	add	r0, r2, r0
   3d5c4:	str	r0, [r1, #20]
   3d5c8:	mov	sp, fp
   3d5cc:	pop	{fp, pc}
   3d5d0:	push	{fp, lr}
   3d5d4:	mov	fp, sp
   3d5d8:	sub	sp, sp, #8
   3d5dc:	str	r0, [sp, #4]
   3d5e0:	ldr	r0, [sp, #4]
   3d5e4:	vldr	d0, [r0]
   3d5e8:	bl	46990 <flatcc_json_printer_clear@@Base+0x1c4c>
   3d5ec:	mov	sp, fp
   3d5f0:	pop	{fp, pc}

0003d5f4 <flatcc_json_printer_uint8_enum_field@@Base>:
   3d5f4:	push	{r4, sl, fp, lr}
   3d5f8:	add	fp, sp, #8
   3d5fc:	sub	sp, sp, #40	; 0x28
   3d600:	ldr	ip, [fp, #16]
   3d604:	ldr	lr, [fp, #12]
   3d608:	ldr	r4, [fp, #8]
   3d60c:	str	r0, [fp, #-12]
   3d610:	str	r1, [fp, #-16]
   3d614:	str	r2, [fp, #-20]	; 0xffffffec
   3d618:	str	r3, [sp, #24]
   3d61c:	strb	lr, [sp, #23]
   3d620:	ldr	r0, [fp, #-16]
   3d624:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d628:	str	ip, [sp, #12]
   3d62c:	str	r4, [sp, #8]
   3d630:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3d634:	str	r0, [sp, #16]
   3d638:	ldr	r0, [sp, #16]
   3d63c:	movw	r1, #0
   3d640:	cmp	r0, r1
   3d644:	beq	3d67c <flatcc_json_printer_uint8_enum_field@@Base+0x88>
   3d648:	ldr	r0, [sp, #16]
   3d64c:	bl	3c8ec <flatcc_json_printer_uint8_field@@Base+0x108>
   3d650:	strb	r0, [sp, #22]
   3d654:	ldrb	r0, [sp, #22]
   3d658:	ldrb	r1, [sp, #23]
   3d65c:	cmp	r0, r1
   3d660:	bne	3d678 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   3d664:	ldr	r0, [fp, #-12]
   3d668:	ldrb	r0, [r0, #28]
   3d66c:	cmp	r0, #0
   3d670:	beq	3d678 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   3d674:	b	3d72c <flatcc_json_printer_uint8_enum_field@@Base+0x138>
   3d678:	b	3d698 <flatcc_json_printer_uint8_enum_field@@Base+0xa4>
   3d67c:	ldr	r0, [fp, #-12]
   3d680:	ldrsb	r0, [r0, #29]
   3d684:	cmp	r0, #0
   3d688:	bne	3d690 <flatcc_json_printer_uint8_enum_field@@Base+0x9c>
   3d68c:	b	3d72c <flatcc_json_printer_uint8_enum_field@@Base+0x138>
   3d690:	ldrb	r0, [sp, #23]
   3d694:	strb	r0, [sp, #22]
   3d698:	ldr	r0, [fp, #-16]
   3d69c:	ldr	r1, [r0, #16]
   3d6a0:	add	r2, r1, #1
   3d6a4:	str	r2, [r0, #16]
   3d6a8:	cmp	r1, #0
   3d6ac:	beq	3d6c8 <flatcc_json_printer_uint8_enum_field@@Base+0xd4>
   3d6b0:	ldr	r0, [fp, #-12]
   3d6b4:	ldr	r1, [r0, #20]
   3d6b8:	add	r2, r1, #1
   3d6bc:	str	r2, [r0, #20]
   3d6c0:	movw	r0, #44	; 0x2c
   3d6c4:	strb	r0, [r1]
   3d6c8:	ldr	r0, [fp, #-12]
   3d6cc:	ldr	r1, [sp, #24]
   3d6d0:	ldr	r2, [fp, #8]
   3d6d4:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3d6d8:	ldr	r0, [fp, #-12]
   3d6dc:	ldrsb	r0, [r0, #27]
   3d6e0:	cmp	r0, #0
   3d6e4:	beq	3d710 <flatcc_json_printer_uint8_enum_field@@Base+0x11c>
   3d6e8:	ldrb	r0, [sp, #22]
   3d6ec:	ldr	r1, [fp, #-12]
   3d6f0:	ldr	r1, [r1, #20]
   3d6f4:	and	r0, r0, #255	; 0xff
   3d6f8:	bl	3a608 <flatcc_json_printer_uint8@@Base+0x40>
   3d6fc:	ldr	r1, [fp, #-12]
   3d700:	ldr	r2, [r1, #20]
   3d704:	add	r0, r2, r0
   3d708:	str	r0, [r1, #20]
   3d70c:	b	3d72c <flatcc_json_printer_uint8_enum_field@@Base+0x138>
   3d710:	ldr	r0, [fp, #16]
   3d714:	ldr	r1, [fp, #-12]
   3d718:	str	r0, [sp, #4]
   3d71c:	mov	r0, r1
   3d720:	ldrb	r1, [sp, #22]
   3d724:	ldr	r2, [sp, #4]
   3d728:	blx	r2
   3d72c:	sub	sp, fp, #8
   3d730:	pop	{r4, sl, fp, pc}

0003d734 <flatcc_json_printer_uint16_enum_field@@Base>:
   3d734:	push	{r4, sl, fp, lr}
   3d738:	add	fp, sp, #8
   3d73c:	sub	sp, sp, #40	; 0x28
   3d740:	ldr	ip, [fp, #16]
   3d744:	ldr	lr, [fp, #12]
   3d748:	ldr	r4, [fp, #8]
   3d74c:	str	r0, [fp, #-12]
   3d750:	str	r1, [fp, #-16]
   3d754:	str	r2, [fp, #-20]	; 0xffffffec
   3d758:	str	r3, [sp, #24]
   3d75c:	strh	lr, [sp, #22]
   3d760:	ldr	r0, [fp, #-16]
   3d764:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d768:	str	ip, [sp, #12]
   3d76c:	str	r4, [sp, #8]
   3d770:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3d774:	str	r0, [sp, #16]
   3d778:	ldr	r0, [sp, #16]
   3d77c:	movw	r1, #0
   3d780:	cmp	r0, r1
   3d784:	beq	3d7bc <flatcc_json_printer_uint16_enum_field@@Base+0x88>
   3d788:	ldr	r0, [sp, #16]
   3d78c:	bl	3ca1c <flatcc_json_printer_uint16_field@@Base+0x108>
   3d790:	strh	r0, [sp, #20]
   3d794:	ldrh	r0, [sp, #20]
   3d798:	ldrh	r1, [sp, #22]
   3d79c:	cmp	r0, r1
   3d7a0:	bne	3d7b8 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   3d7a4:	ldr	r0, [fp, #-12]
   3d7a8:	ldrb	r0, [r0, #28]
   3d7ac:	cmp	r0, #0
   3d7b0:	beq	3d7b8 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   3d7b4:	b	3d86c <flatcc_json_printer_uint16_enum_field@@Base+0x138>
   3d7b8:	b	3d7d8 <flatcc_json_printer_uint16_enum_field@@Base+0xa4>
   3d7bc:	ldr	r0, [fp, #-12]
   3d7c0:	ldrsb	r0, [r0, #29]
   3d7c4:	cmp	r0, #0
   3d7c8:	bne	3d7d0 <flatcc_json_printer_uint16_enum_field@@Base+0x9c>
   3d7cc:	b	3d86c <flatcc_json_printer_uint16_enum_field@@Base+0x138>
   3d7d0:	ldrh	r0, [sp, #22]
   3d7d4:	strh	r0, [sp, #20]
   3d7d8:	ldr	r0, [fp, #-16]
   3d7dc:	ldr	r1, [r0, #16]
   3d7e0:	add	r2, r1, #1
   3d7e4:	str	r2, [r0, #16]
   3d7e8:	cmp	r1, #0
   3d7ec:	beq	3d808 <flatcc_json_printer_uint16_enum_field@@Base+0xd4>
   3d7f0:	ldr	r0, [fp, #-12]
   3d7f4:	ldr	r1, [r0, #20]
   3d7f8:	add	r2, r1, #1
   3d7fc:	str	r2, [r0, #20]
   3d800:	movw	r0, #44	; 0x2c
   3d804:	strb	r0, [r1]
   3d808:	ldr	r0, [fp, #-12]
   3d80c:	ldr	r1, [sp, #24]
   3d810:	ldr	r2, [fp, #8]
   3d814:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3d818:	ldr	r0, [fp, #-12]
   3d81c:	ldrsb	r0, [r0, #27]
   3d820:	cmp	r0, #0
   3d824:	beq	3d850 <flatcc_json_printer_uint16_enum_field@@Base+0x11c>
   3d828:	ldrh	r0, [sp, #20]
   3d82c:	ldr	r1, [fp, #-12]
   3d830:	ldr	r1, [r1, #20]
   3d834:	uxth	r0, r0
   3d838:	bl	3a7dc <flatcc_json_printer_uint16@@Base+0x40>
   3d83c:	ldr	r1, [fp, #-12]
   3d840:	ldr	r2, [r1, #20]
   3d844:	add	r0, r2, r0
   3d848:	str	r0, [r1, #20]
   3d84c:	b	3d86c <flatcc_json_printer_uint16_enum_field@@Base+0x138>
   3d850:	ldr	r0, [fp, #16]
   3d854:	ldr	r1, [fp, #-12]
   3d858:	str	r0, [sp, #4]
   3d85c:	mov	r0, r1
   3d860:	ldrh	r1, [sp, #20]
   3d864:	ldr	r2, [sp, #4]
   3d868:	blx	r2
   3d86c:	sub	sp, fp, #8
   3d870:	pop	{r4, sl, fp, pc}

0003d874 <flatcc_json_printer_uint32_enum_field@@Base>:
   3d874:	push	{r4, sl, fp, lr}
   3d878:	add	fp, sp, #8
   3d87c:	sub	sp, sp, #40	; 0x28
   3d880:	ldr	ip, [fp, #16]
   3d884:	ldr	lr, [fp, #12]
   3d888:	ldr	r4, [fp, #8]
   3d88c:	str	r0, [fp, #-12]
   3d890:	str	r1, [fp, #-16]
   3d894:	str	r2, [fp, #-20]	; 0xffffffec
   3d898:	str	r3, [sp, #24]
   3d89c:	ldr	r0, [fp, #-16]
   3d8a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d8a4:	str	ip, [sp, #12]
   3d8a8:	str	lr, [sp, #8]
   3d8ac:	str	r4, [sp, #4]
   3d8b0:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3d8b4:	str	r0, [sp, #16]
   3d8b8:	ldr	r0, [sp, #16]
   3d8bc:	movw	r1, #0
   3d8c0:	cmp	r0, r1
   3d8c4:	beq	3d8fc <flatcc_json_printer_uint32_enum_field@@Base+0x88>
   3d8c8:	ldr	r0, [sp, #16]
   3d8cc:	bl	3cb48 <flatcc_json_printer_uint32_field@@Base+0x104>
   3d8d0:	str	r0, [sp, #20]
   3d8d4:	ldr	r0, [sp, #20]
   3d8d8:	ldr	r1, [fp, #12]
   3d8dc:	cmp	r0, r1
   3d8e0:	bne	3d8f8 <flatcc_json_printer_uint32_enum_field@@Base+0x84>
   3d8e4:	ldr	r0, [fp, #-12]
   3d8e8:	ldrb	r0, [r0, #28]
   3d8ec:	cmp	r0, #0
   3d8f0:	beq	3d8f8 <flatcc_json_printer_uint32_enum_field@@Base+0x84>
   3d8f4:	b	3d9ac <flatcc_json_printer_uint32_enum_field@@Base+0x138>
   3d8f8:	b	3d918 <flatcc_json_printer_uint32_enum_field@@Base+0xa4>
   3d8fc:	ldr	r0, [fp, #-12]
   3d900:	ldrsb	r0, [r0, #29]
   3d904:	cmp	r0, #0
   3d908:	bne	3d910 <flatcc_json_printer_uint32_enum_field@@Base+0x9c>
   3d90c:	b	3d9ac <flatcc_json_printer_uint32_enum_field@@Base+0x138>
   3d910:	ldr	r0, [fp, #12]
   3d914:	str	r0, [sp, #20]
   3d918:	ldr	r0, [fp, #-16]
   3d91c:	ldr	r1, [r0, #16]
   3d920:	add	r2, r1, #1
   3d924:	str	r2, [r0, #16]
   3d928:	cmp	r1, #0
   3d92c:	beq	3d948 <flatcc_json_printer_uint32_enum_field@@Base+0xd4>
   3d930:	ldr	r0, [fp, #-12]
   3d934:	ldr	r1, [r0, #20]
   3d938:	add	r2, r1, #1
   3d93c:	str	r2, [r0, #20]
   3d940:	movw	r0, #44	; 0x2c
   3d944:	strb	r0, [r1]
   3d948:	ldr	r0, [fp, #-12]
   3d94c:	ldr	r1, [sp, #24]
   3d950:	ldr	r2, [fp, #8]
   3d954:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3d958:	ldr	r0, [fp, #-12]
   3d95c:	ldrsb	r0, [r0, #27]
   3d960:	cmp	r0, #0
   3d964:	beq	3d98c <flatcc_json_printer_uint32_enum_field@@Base+0x118>
   3d968:	ldr	r0, [sp, #20]
   3d96c:	ldr	r1, [fp, #-12]
   3d970:	ldr	r1, [r1, #20]
   3d974:	bl	3ab10 <flatcc_json_printer_uint32@@Base+0x3c>
   3d978:	ldr	r1, [fp, #-12]
   3d97c:	ldr	r2, [r1, #20]
   3d980:	add	r0, r2, r0
   3d984:	str	r0, [r1, #20]
   3d988:	b	3d9ac <flatcc_json_printer_uint32_enum_field@@Base+0x138>
   3d98c:	ldr	r0, [fp, #16]
   3d990:	ldr	r1, [fp, #-12]
   3d994:	ldr	r2, [sp, #20]
   3d998:	str	r0, [sp]
   3d99c:	mov	r0, r1
   3d9a0:	mov	r1, r2
   3d9a4:	ldr	r2, [sp]
   3d9a8:	blx	r2
   3d9ac:	sub	sp, fp, #8
   3d9b0:	pop	{r4, sl, fp, pc}

0003d9b4 <flatcc_json_printer_uint64_enum_field@@Base>:
   3d9b4:	push	{r4, r5, fp, lr}
   3d9b8:	add	fp, sp, #8
   3d9bc:	sub	sp, sp, #48	; 0x30
   3d9c0:	ldr	ip, [fp, #20]
   3d9c4:	ldr	lr, [fp, #16]
   3d9c8:	ldr	r4, [fp, #24]
   3d9cc:	ldr	r5, [fp, #8]
   3d9d0:	str	r0, [fp, #-12]
   3d9d4:	str	r1, [fp, #-16]
   3d9d8:	str	r2, [fp, #-20]	; 0xffffffec
   3d9dc:	str	r3, [fp, #-24]	; 0xffffffe8
   3d9e0:	str	ip, [sp, #28]
   3d9e4:	str	lr, [sp, #24]
   3d9e8:	ldr	r0, [fp, #-16]
   3d9ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d9f0:	str	r4, [sp, #8]
   3d9f4:	str	r5, [sp, #4]
   3d9f8:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3d9fc:	str	r0, [sp, #12]
   3da00:	ldr	r0, [sp, #12]
   3da04:	movw	r1, #0
   3da08:	cmp	r0, r1
   3da0c:	beq	3da60 <flatcc_json_printer_uint64_enum_field@@Base+0xac>
   3da10:	ldr	r0, [sp, #12]
   3da14:	bl	3cca0 <flatcc_json_printer_uint64_field@@Base+0x134>
   3da18:	str	r1, [sp, #20]
   3da1c:	str	r0, [sp, #16]
   3da20:	ldr	r0, [sp, #16]
   3da24:	ldr	r1, [sp, #20]
   3da28:	ldr	r2, [sp, #24]
   3da2c:	ldr	r3, [sp, #28]
   3da30:	eor	r1, r1, r3
   3da34:	eor	r0, r0, r2
   3da38:	orr	r0, r0, r1
   3da3c:	cmp	r0, #0
   3da40:	bne	3da5c <flatcc_json_printer_uint64_enum_field@@Base+0xa8>
   3da44:	b	3da48 <flatcc_json_printer_uint64_enum_field@@Base+0x94>
   3da48:	ldr	r0, [fp, #-12]
   3da4c:	ldrb	r0, [r0, #28]
   3da50:	cmp	r0, #0
   3da54:	beq	3da5c <flatcc_json_printer_uint64_enum_field@@Base+0xa8>
   3da58:	b	3db1c <flatcc_json_printer_uint64_enum_field@@Base+0x168>
   3da5c:	b	3da84 <flatcc_json_printer_uint64_enum_field@@Base+0xd0>
   3da60:	ldr	r0, [fp, #-12]
   3da64:	ldrsb	r0, [r0, #29]
   3da68:	cmp	r0, #0
   3da6c:	bne	3da74 <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   3da70:	b	3db1c <flatcc_json_printer_uint64_enum_field@@Base+0x168>
   3da74:	ldr	r0, [sp, #24]
   3da78:	ldr	r1, [sp, #28]
   3da7c:	str	r1, [sp, #20]
   3da80:	str	r0, [sp, #16]
   3da84:	ldr	r0, [fp, #-16]
   3da88:	ldr	r1, [r0, #16]
   3da8c:	add	r2, r1, #1
   3da90:	str	r2, [r0, #16]
   3da94:	cmp	r1, #0
   3da98:	beq	3dab4 <flatcc_json_printer_uint64_enum_field@@Base+0x100>
   3da9c:	ldr	r0, [fp, #-12]
   3daa0:	ldr	r1, [r0, #20]
   3daa4:	add	r2, r1, #1
   3daa8:	str	r2, [r0, #20]
   3daac:	movw	r0, #44	; 0x2c
   3dab0:	strb	r0, [r1]
   3dab4:	ldr	r0, [fp, #-12]
   3dab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dabc:	ldr	r2, [fp, #8]
   3dac0:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3dac4:	ldr	r0, [fp, #-12]
   3dac8:	ldrsb	r0, [r0, #27]
   3dacc:	cmp	r0, #0
   3dad0:	beq	3dafc <flatcc_json_printer_uint64_enum_field@@Base+0x148>
   3dad4:	ldr	r0, [sp, #16]
   3dad8:	ldr	r1, [sp, #20]
   3dadc:	ldr	r2, [fp, #-12]
   3dae0:	ldr	r2, [r2, #20]
   3dae4:	bl	3b160 <flatcc_json_printer_uint64@@Base+0x44>
   3dae8:	ldr	r1, [fp, #-12]
   3daec:	ldr	r2, [r1, #20]
   3daf0:	add	r0, r2, r0
   3daf4:	str	r0, [r1, #20]
   3daf8:	b	3db1c <flatcc_json_printer_uint64_enum_field@@Base+0x168>
   3dafc:	ldr	r0, [fp, #24]
   3db00:	ldr	r1, [fp, #-12]
   3db04:	ldr	r2, [sp, #16]
   3db08:	ldr	r3, [sp, #20]
   3db0c:	str	r0, [sp]
   3db10:	mov	r0, r1
   3db14:	ldr	r1, [sp]
   3db18:	blx	r1
   3db1c:	sub	sp, fp, #8
   3db20:	pop	{r4, r5, fp, pc}

0003db24 <flatcc_json_printer_int8_enum_field@@Base>:
   3db24:	push	{r4, sl, fp, lr}
   3db28:	add	fp, sp, #8
   3db2c:	sub	sp, sp, #40	; 0x28
   3db30:	ldr	ip, [fp, #16]
   3db34:	ldr	lr, [fp, #12]
   3db38:	ldr	r4, [fp, #8]
   3db3c:	str	r0, [fp, #-12]
   3db40:	str	r1, [fp, #-16]
   3db44:	str	r2, [fp, #-20]	; 0xffffffec
   3db48:	str	r3, [sp, #24]
   3db4c:	strb	lr, [sp, #23]
   3db50:	ldr	r0, [fp, #-16]
   3db54:	ldr	r1, [fp, #-20]	; 0xffffffec
   3db58:	str	ip, [sp, #12]
   3db5c:	str	r4, [sp, #8]
   3db60:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3db64:	str	r0, [sp, #16]
   3db68:	ldr	r0, [sp, #16]
   3db6c:	movw	r1, #0
   3db70:	cmp	r0, r1
   3db74:	beq	3dbac <flatcc_json_printer_int8_enum_field@@Base+0x88>
   3db78:	ldr	r0, [sp, #16]
   3db7c:	bl	3cddc <flatcc_json_printer_int8_field@@Base+0x108>
   3db80:	strb	r0, [sp, #22]
   3db84:	ldrsb	r0, [sp, #22]
   3db88:	ldrsb	r1, [sp, #23]
   3db8c:	cmp	r0, r1
   3db90:	bne	3dba8 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   3db94:	ldr	r0, [fp, #-12]
   3db98:	ldrb	r0, [r0, #28]
   3db9c:	cmp	r0, #0
   3dba0:	beq	3dba8 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   3dba4:	b	3dc5c <flatcc_json_printer_int8_enum_field@@Base+0x138>
   3dba8:	b	3dbc8 <flatcc_json_printer_int8_enum_field@@Base+0xa4>
   3dbac:	ldr	r0, [fp, #-12]
   3dbb0:	ldrsb	r0, [r0, #29]
   3dbb4:	cmp	r0, #0
   3dbb8:	bne	3dbc0 <flatcc_json_printer_int8_enum_field@@Base+0x9c>
   3dbbc:	b	3dc5c <flatcc_json_printer_int8_enum_field@@Base+0x138>
   3dbc0:	ldrb	r0, [sp, #23]
   3dbc4:	strb	r0, [sp, #22]
   3dbc8:	ldr	r0, [fp, #-16]
   3dbcc:	ldr	r1, [r0, #16]
   3dbd0:	add	r2, r1, #1
   3dbd4:	str	r2, [r0, #16]
   3dbd8:	cmp	r1, #0
   3dbdc:	beq	3dbf8 <flatcc_json_printer_int8_enum_field@@Base+0xd4>
   3dbe0:	ldr	r0, [fp, #-12]
   3dbe4:	ldr	r1, [r0, #20]
   3dbe8:	add	r2, r1, #1
   3dbec:	str	r2, [r0, #20]
   3dbf0:	movw	r0, #44	; 0x2c
   3dbf4:	strb	r0, [r1]
   3dbf8:	ldr	r0, [fp, #-12]
   3dbfc:	ldr	r1, [sp, #24]
   3dc00:	ldr	r2, [fp, #8]
   3dc04:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3dc08:	ldr	r0, [fp, #-12]
   3dc0c:	ldrsb	r0, [r0, #27]
   3dc10:	cmp	r0, #0
   3dc14:	beq	3dc40 <flatcc_json_printer_int8_enum_field@@Base+0x11c>
   3dc18:	ldrb	r0, [sp, #22]
   3dc1c:	ldr	r1, [fp, #-12]
   3dc20:	ldr	r1, [r1, #20]
   3dc24:	sxtb	r0, r0
   3dc28:	bl	3bd10 <flatcc_json_printer_int8@@Base+0x40>
   3dc2c:	ldr	r1, [fp, #-12]
   3dc30:	ldr	r2, [r1, #20]
   3dc34:	add	r0, r2, r0
   3dc38:	str	r0, [r1, #20]
   3dc3c:	b	3dc5c <flatcc_json_printer_int8_enum_field@@Base+0x138>
   3dc40:	ldr	r0, [fp, #16]
   3dc44:	ldr	r1, [fp, #-12]
   3dc48:	str	r0, [sp, #4]
   3dc4c:	mov	r0, r1
   3dc50:	ldrsb	r1, [sp, #22]
   3dc54:	ldr	r2, [sp, #4]
   3dc58:	blx	r2
   3dc5c:	sub	sp, fp, #8
   3dc60:	pop	{r4, sl, fp, pc}

0003dc64 <flatcc_json_printer_int16_enum_field@@Base>:
   3dc64:	push	{r4, sl, fp, lr}
   3dc68:	add	fp, sp, #8
   3dc6c:	sub	sp, sp, #40	; 0x28
   3dc70:	ldr	ip, [fp, #16]
   3dc74:	ldr	lr, [fp, #12]
   3dc78:	ldr	r4, [fp, #8]
   3dc7c:	str	r0, [fp, #-12]
   3dc80:	str	r1, [fp, #-16]
   3dc84:	str	r2, [fp, #-20]	; 0xffffffec
   3dc88:	str	r3, [sp, #24]
   3dc8c:	strh	lr, [sp, #22]
   3dc90:	ldr	r0, [fp, #-16]
   3dc94:	ldr	r1, [fp, #-20]	; 0xffffffec
   3dc98:	str	ip, [sp, #12]
   3dc9c:	str	r4, [sp, #8]
   3dca0:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3dca4:	str	r0, [sp, #16]
   3dca8:	ldr	r0, [sp, #16]
   3dcac:	movw	r1, #0
   3dcb0:	cmp	r0, r1
   3dcb4:	beq	3dcec <flatcc_json_printer_int16_enum_field@@Base+0x88>
   3dcb8:	ldr	r0, [sp, #16]
   3dcbc:	bl	3cf0c <flatcc_json_printer_int16_field@@Base+0x108>
   3dcc0:	strh	r0, [sp, #20]
   3dcc4:	ldrsh	r0, [sp, #20]
   3dcc8:	ldrsh	r1, [sp, #22]
   3dccc:	cmp	r0, r1
   3dcd0:	bne	3dce8 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   3dcd4:	ldr	r0, [fp, #-12]
   3dcd8:	ldrb	r0, [r0, #28]
   3dcdc:	cmp	r0, #0
   3dce0:	beq	3dce8 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   3dce4:	b	3dd9c <flatcc_json_printer_int16_enum_field@@Base+0x138>
   3dce8:	b	3dd08 <flatcc_json_printer_int16_enum_field@@Base+0xa4>
   3dcec:	ldr	r0, [fp, #-12]
   3dcf0:	ldrsb	r0, [r0, #29]
   3dcf4:	cmp	r0, #0
   3dcf8:	bne	3dd00 <flatcc_json_printer_int16_enum_field@@Base+0x9c>
   3dcfc:	b	3dd9c <flatcc_json_printer_int16_enum_field@@Base+0x138>
   3dd00:	ldrh	r0, [sp, #22]
   3dd04:	strh	r0, [sp, #20]
   3dd08:	ldr	r0, [fp, #-16]
   3dd0c:	ldr	r1, [r0, #16]
   3dd10:	add	r2, r1, #1
   3dd14:	str	r2, [r0, #16]
   3dd18:	cmp	r1, #0
   3dd1c:	beq	3dd38 <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   3dd20:	ldr	r0, [fp, #-12]
   3dd24:	ldr	r1, [r0, #20]
   3dd28:	add	r2, r1, #1
   3dd2c:	str	r2, [r0, #20]
   3dd30:	movw	r0, #44	; 0x2c
   3dd34:	strb	r0, [r1]
   3dd38:	ldr	r0, [fp, #-12]
   3dd3c:	ldr	r1, [sp, #24]
   3dd40:	ldr	r2, [fp, #8]
   3dd44:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3dd48:	ldr	r0, [fp, #-12]
   3dd4c:	ldrsb	r0, [r0, #27]
   3dd50:	cmp	r0, #0
   3dd54:	beq	3dd80 <flatcc_json_printer_int16_enum_field@@Base+0x11c>
   3dd58:	ldrh	r0, [sp, #20]
   3dd5c:	ldr	r1, [fp, #-12]
   3dd60:	ldr	r1, [r1, #20]
   3dd64:	sxth	r0, r0
   3dd68:	bl	3bdc8 <flatcc_json_printer_int16@@Base+0x40>
   3dd6c:	ldr	r1, [fp, #-12]
   3dd70:	ldr	r2, [r1, #20]
   3dd74:	add	r0, r2, r0
   3dd78:	str	r0, [r1, #20]
   3dd7c:	b	3dd9c <flatcc_json_printer_int16_enum_field@@Base+0x138>
   3dd80:	ldr	r0, [fp, #16]
   3dd84:	ldr	r1, [fp, #-12]
   3dd88:	str	r0, [sp, #4]
   3dd8c:	mov	r0, r1
   3dd90:	ldrsh	r1, [sp, #20]
   3dd94:	ldr	r2, [sp, #4]
   3dd98:	blx	r2
   3dd9c:	sub	sp, fp, #8
   3dda0:	pop	{r4, sl, fp, pc}

0003dda4 <flatcc_json_printer_int32_enum_field@@Base>:
   3dda4:	push	{r4, sl, fp, lr}
   3dda8:	add	fp, sp, #8
   3ddac:	sub	sp, sp, #40	; 0x28
   3ddb0:	ldr	ip, [fp, #16]
   3ddb4:	ldr	lr, [fp, #12]
   3ddb8:	ldr	r4, [fp, #8]
   3ddbc:	str	r0, [fp, #-12]
   3ddc0:	str	r1, [fp, #-16]
   3ddc4:	str	r2, [fp, #-20]	; 0xffffffec
   3ddc8:	str	r3, [sp, #24]
   3ddcc:	ldr	r0, [fp, #-16]
   3ddd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ddd4:	str	ip, [sp, #12]
   3ddd8:	str	lr, [sp, #8]
   3dddc:	str	r4, [sp, #4]
   3dde0:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3dde4:	str	r0, [sp, #16]
   3dde8:	ldr	r0, [sp, #16]
   3ddec:	movw	r1, #0
   3ddf0:	cmp	r0, r1
   3ddf4:	beq	3de2c <flatcc_json_printer_int32_enum_field@@Base+0x88>
   3ddf8:	ldr	r0, [sp, #16]
   3ddfc:	bl	3d038 <flatcc_json_printer_int32_field@@Base+0x104>
   3de00:	str	r0, [sp, #20]
   3de04:	ldr	r0, [sp, #20]
   3de08:	ldr	r1, [fp, #12]
   3de0c:	cmp	r0, r1
   3de10:	bne	3de28 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   3de14:	ldr	r0, [fp, #-12]
   3de18:	ldrb	r0, [r0, #28]
   3de1c:	cmp	r0, #0
   3de20:	beq	3de28 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   3de24:	b	3dedc <flatcc_json_printer_int32_enum_field@@Base+0x138>
   3de28:	b	3de48 <flatcc_json_printer_int32_enum_field@@Base+0xa4>
   3de2c:	ldr	r0, [fp, #-12]
   3de30:	ldrsb	r0, [r0, #29]
   3de34:	cmp	r0, #0
   3de38:	bne	3de40 <flatcc_json_printer_int32_enum_field@@Base+0x9c>
   3de3c:	b	3dedc <flatcc_json_printer_int32_enum_field@@Base+0x138>
   3de40:	ldr	r0, [fp, #12]
   3de44:	str	r0, [sp, #20]
   3de48:	ldr	r0, [fp, #-16]
   3de4c:	ldr	r1, [r0, #16]
   3de50:	add	r2, r1, #1
   3de54:	str	r2, [r0, #16]
   3de58:	cmp	r1, #0
   3de5c:	beq	3de78 <flatcc_json_printer_int32_enum_field@@Base+0xd4>
   3de60:	ldr	r0, [fp, #-12]
   3de64:	ldr	r1, [r0, #20]
   3de68:	add	r2, r1, #1
   3de6c:	str	r2, [r0, #20]
   3de70:	movw	r0, #44	; 0x2c
   3de74:	strb	r0, [r1]
   3de78:	ldr	r0, [fp, #-12]
   3de7c:	ldr	r1, [sp, #24]
   3de80:	ldr	r2, [fp, #8]
   3de84:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3de88:	ldr	r0, [fp, #-12]
   3de8c:	ldrsb	r0, [r0, #27]
   3de90:	cmp	r0, #0
   3de94:	beq	3debc <flatcc_json_printer_int32_enum_field@@Base+0x118>
   3de98:	ldr	r0, [sp, #20]
   3de9c:	ldr	r1, [fp, #-12]
   3dea0:	ldr	r1, [r1, #20]
   3dea4:	bl	3be7c <flatcc_json_printer_int32@@Base+0x3c>
   3dea8:	ldr	r1, [fp, #-12]
   3deac:	ldr	r2, [r1, #20]
   3deb0:	add	r0, r2, r0
   3deb4:	str	r0, [r1, #20]
   3deb8:	b	3dedc <flatcc_json_printer_int32_enum_field@@Base+0x138>
   3debc:	ldr	r0, [fp, #16]
   3dec0:	ldr	r1, [fp, #-12]
   3dec4:	ldr	r2, [sp, #20]
   3dec8:	str	r0, [sp]
   3decc:	mov	r0, r1
   3ded0:	mov	r1, r2
   3ded4:	ldr	r2, [sp]
   3ded8:	blx	r2
   3dedc:	sub	sp, fp, #8
   3dee0:	pop	{r4, sl, fp, pc}

0003dee4 <flatcc_json_printer_int64_enum_field@@Base>:
   3dee4:	push	{r4, r5, fp, lr}
   3dee8:	add	fp, sp, #8
   3deec:	sub	sp, sp, #48	; 0x30
   3def0:	ldr	ip, [fp, #20]
   3def4:	ldr	lr, [fp, #16]
   3def8:	ldr	r4, [fp, #24]
   3defc:	ldr	r5, [fp, #8]
   3df00:	str	r0, [fp, #-12]
   3df04:	str	r1, [fp, #-16]
   3df08:	str	r2, [fp, #-20]	; 0xffffffec
   3df0c:	str	r3, [fp, #-24]	; 0xffffffe8
   3df10:	str	ip, [sp, #28]
   3df14:	str	lr, [sp, #24]
   3df18:	ldr	r0, [fp, #-16]
   3df1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3df20:	str	r4, [sp, #8]
   3df24:	str	r5, [sp, #4]
   3df28:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3df2c:	str	r0, [sp, #12]
   3df30:	ldr	r0, [sp, #12]
   3df34:	movw	r1, #0
   3df38:	cmp	r0, r1
   3df3c:	beq	3df90 <flatcc_json_printer_int64_enum_field@@Base+0xac>
   3df40:	ldr	r0, [sp, #12]
   3df44:	bl	3d190 <flatcc_json_printer_int64_field@@Base+0x134>
   3df48:	str	r1, [sp, #20]
   3df4c:	str	r0, [sp, #16]
   3df50:	ldr	r0, [sp, #16]
   3df54:	ldr	r1, [sp, #20]
   3df58:	ldr	r2, [sp, #24]
   3df5c:	ldr	r3, [sp, #28]
   3df60:	eor	r1, r1, r3
   3df64:	eor	r0, r0, r2
   3df68:	orr	r0, r0, r1
   3df6c:	cmp	r0, #0
   3df70:	bne	3df8c <flatcc_json_printer_int64_enum_field@@Base+0xa8>
   3df74:	b	3df78 <flatcc_json_printer_int64_enum_field@@Base+0x94>
   3df78:	ldr	r0, [fp, #-12]
   3df7c:	ldrb	r0, [r0, #28]
   3df80:	cmp	r0, #0
   3df84:	beq	3df8c <flatcc_json_printer_int64_enum_field@@Base+0xa8>
   3df88:	b	3e04c <flatcc_json_printer_int64_enum_field@@Base+0x168>
   3df8c:	b	3dfb4 <flatcc_json_printer_int64_enum_field@@Base+0xd0>
   3df90:	ldr	r0, [fp, #-12]
   3df94:	ldrsb	r0, [r0, #29]
   3df98:	cmp	r0, #0
   3df9c:	bne	3dfa4 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   3dfa0:	b	3e04c <flatcc_json_printer_int64_enum_field@@Base+0x168>
   3dfa4:	ldr	r0, [sp, #24]
   3dfa8:	ldr	r1, [sp, #28]
   3dfac:	str	r1, [sp, #20]
   3dfb0:	str	r0, [sp, #16]
   3dfb4:	ldr	r0, [fp, #-16]
   3dfb8:	ldr	r1, [r0, #16]
   3dfbc:	add	r2, r1, #1
   3dfc0:	str	r2, [r0, #16]
   3dfc4:	cmp	r1, #0
   3dfc8:	beq	3dfe4 <flatcc_json_printer_int64_enum_field@@Base+0x100>
   3dfcc:	ldr	r0, [fp, #-12]
   3dfd0:	ldr	r1, [r0, #20]
   3dfd4:	add	r2, r1, #1
   3dfd8:	str	r2, [r0, #20]
   3dfdc:	movw	r0, #44	; 0x2c
   3dfe0:	strb	r0, [r1]
   3dfe4:	ldr	r0, [fp, #-12]
   3dfe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dfec:	ldr	r2, [fp, #8]
   3dff0:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3dff4:	ldr	r0, [fp, #-12]
   3dff8:	ldrsb	r0, [r0, #27]
   3dffc:	cmp	r0, #0
   3e000:	beq	3e02c <flatcc_json_printer_int64_enum_field@@Base+0x148>
   3e004:	ldr	r0, [sp, #16]
   3e008:	ldr	r1, [sp, #20]
   3e00c:	ldr	r2, [fp, #-12]
   3e010:	ldr	r2, [r2, #20]
   3e014:	bl	3bf34 <flatcc_json_printer_int64@@Base+0x44>
   3e018:	ldr	r1, [fp, #-12]
   3e01c:	ldr	r2, [r1, #20]
   3e020:	add	r0, r2, r0
   3e024:	str	r0, [r1, #20]
   3e028:	b	3e04c <flatcc_json_printer_int64_enum_field@@Base+0x168>
   3e02c:	ldr	r0, [fp, #24]
   3e030:	ldr	r1, [fp, #-12]
   3e034:	ldr	r2, [sp, #16]
   3e038:	ldr	r3, [sp, #20]
   3e03c:	str	r0, [sp]
   3e040:	mov	r0, r1
   3e044:	ldr	r1, [sp]
   3e048:	blx	r1
   3e04c:	sub	sp, fp, #8
   3e050:	pop	{r4, r5, fp, pc}

0003e054 <flatcc_json_printer_bool_enum_field@@Base>:
   3e054:	push	{r4, sl, fp, lr}
   3e058:	add	fp, sp, #8
   3e05c:	sub	sp, sp, #40	; 0x28
   3e060:	ldr	ip, [fp, #16]
   3e064:	ldr	lr, [fp, #12]
   3e068:	ldr	r4, [fp, #8]
   3e06c:	str	r0, [fp, #-12]
   3e070:	str	r1, [fp, #-16]
   3e074:	str	r2, [fp, #-20]	; 0xffffffec
   3e078:	str	r3, [sp, #24]
   3e07c:	strb	lr, [sp, #23]
   3e080:	ldr	r0, [fp, #-16]
   3e084:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e088:	str	ip, [sp, #12]
   3e08c:	str	r4, [sp, #8]
   3e090:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3e094:	str	r0, [sp, #16]
   3e098:	ldr	r0, [sp, #16]
   3e09c:	movw	r1, #0
   3e0a0:	cmp	r0, r1
   3e0a4:	beq	3e0dc <flatcc_json_printer_bool_enum_field@@Base+0x88>
   3e0a8:	ldr	r0, [sp, #16]
   3e0ac:	bl	3d2c8 <flatcc_json_printer_bool_field@@Base+0x104>
   3e0b0:	strb	r0, [sp, #22]
   3e0b4:	ldrb	r0, [sp, #22]
   3e0b8:	ldrb	r1, [sp, #23]
   3e0bc:	cmp	r0, r1
   3e0c0:	bne	3e0d8 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   3e0c4:	ldr	r0, [fp, #-12]
   3e0c8:	ldrb	r0, [r0, #28]
   3e0cc:	cmp	r0, #0
   3e0d0:	beq	3e0d8 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   3e0d4:	b	3e188 <flatcc_json_printer_bool_enum_field@@Base+0x134>
   3e0d8:	b	3e0f8 <flatcc_json_printer_bool_enum_field@@Base+0xa4>
   3e0dc:	ldr	r0, [fp, #-12]
   3e0e0:	ldrsb	r0, [r0, #29]
   3e0e4:	cmp	r0, #0
   3e0e8:	bne	3e0f0 <flatcc_json_printer_bool_enum_field@@Base+0x9c>
   3e0ec:	b	3e188 <flatcc_json_printer_bool_enum_field@@Base+0x134>
   3e0f0:	ldrb	r0, [sp, #23]
   3e0f4:	strb	r0, [sp, #22]
   3e0f8:	ldr	r0, [fp, #-16]
   3e0fc:	ldr	r1, [r0, #16]
   3e100:	add	r2, r1, #1
   3e104:	str	r2, [r0, #16]
   3e108:	cmp	r1, #0
   3e10c:	beq	3e128 <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   3e110:	ldr	r0, [fp, #-12]
   3e114:	ldr	r1, [r0, #20]
   3e118:	add	r2, r1, #1
   3e11c:	str	r2, [r0, #20]
   3e120:	movw	r0, #44	; 0x2c
   3e124:	strb	r0, [r1]
   3e128:	ldr	r0, [fp, #-12]
   3e12c:	ldr	r1, [sp, #24]
   3e130:	ldr	r2, [fp, #8]
   3e134:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e138:	ldr	r0, [fp, #-12]
   3e13c:	ldrsb	r0, [r0, #27]
   3e140:	cmp	r0, #0
   3e144:	beq	3e16c <flatcc_json_printer_bool_enum_field@@Base+0x118>
   3e148:	ldrb	r0, [sp, #22]
   3e14c:	ldr	r1, [fp, #-12]
   3e150:	ldr	r1, [r1, #20]
   3e154:	bl	3d2f0 <flatcc_json_printer_bool_field@@Base+0x12c>
   3e158:	ldr	r1, [fp, #-12]
   3e15c:	ldr	r2, [r1, #20]
   3e160:	add	r0, r2, r0
   3e164:	str	r0, [r1, #20]
   3e168:	b	3e188 <flatcc_json_printer_bool_enum_field@@Base+0x134>
   3e16c:	ldr	r0, [fp, #16]
   3e170:	ldr	r1, [fp, #-12]
   3e174:	str	r0, [sp, #4]
   3e178:	mov	r0, r1
   3e17c:	ldrb	r1, [sp, #22]
   3e180:	ldr	r2, [sp, #4]
   3e184:	blx	r2
   3e188:	sub	sp, fp, #8
   3e18c:	pop	{r4, sl, fp, pc}

0003e190 <flatcc_json_printer_uint8_struct_field@@Base>:
   3e190:	push	{fp, lr}
   3e194:	mov	fp, sp
   3e198:	sub	sp, sp, #32
   3e19c:	ldr	ip, [fp, #12]
   3e1a0:	ldr	lr, [fp, #8]
   3e1a4:	str	r0, [fp, #-4]
   3e1a8:	str	r1, [fp, #-8]
   3e1ac:	str	r2, [fp, #-12]
   3e1b0:	str	r3, [sp, #16]
   3e1b4:	ldr	r0, [fp, #-12]
   3e1b8:	ldr	r1, [sp, #16]
   3e1bc:	add	r0, r0, r1
   3e1c0:	str	ip, [sp, #8]
   3e1c4:	str	lr, [sp, #4]
   3e1c8:	bl	3c8ec <flatcc_json_printer_uint8_field@@Base+0x108>
   3e1cc:	strb	r0, [sp, #15]
   3e1d0:	ldr	r0, [fp, #-8]
   3e1d4:	cmp	r0, #0
   3e1d8:	beq	3e1f4 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   3e1dc:	ldr	r0, [fp, #-4]
   3e1e0:	ldr	r1, [r0, #20]
   3e1e4:	add	r2, r1, #1
   3e1e8:	str	r2, [r0, #20]
   3e1ec:	movw	r0, #44	; 0x2c
   3e1f0:	strb	r0, [r1]
   3e1f4:	ldr	r0, [fp, #-4]
   3e1f8:	ldr	r1, [fp, #8]
   3e1fc:	ldr	r2, [fp, #12]
   3e200:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e204:	ldrb	r0, [sp, #15]
   3e208:	ldr	r1, [fp, #-4]
   3e20c:	ldr	r1, [r1, #20]
   3e210:	and	r0, r0, #255	; 0xff
   3e214:	bl	3a608 <flatcc_json_printer_uint8@@Base+0x40>
   3e218:	ldr	r1, [fp, #-4]
   3e21c:	ldr	r2, [r1, #20]
   3e220:	add	r0, r2, r0
   3e224:	str	r0, [r1, #20]
   3e228:	mov	sp, fp
   3e22c:	pop	{fp, pc}

0003e230 <flatcc_json_printer_uint16_struct_field@@Base>:
   3e230:	push	{fp, lr}
   3e234:	mov	fp, sp
   3e238:	sub	sp, sp, #32
   3e23c:	ldr	ip, [fp, #12]
   3e240:	ldr	lr, [fp, #8]
   3e244:	str	r0, [fp, #-4]
   3e248:	str	r1, [fp, #-8]
   3e24c:	str	r2, [fp, #-12]
   3e250:	str	r3, [sp, #16]
   3e254:	ldr	r0, [fp, #-12]
   3e258:	ldr	r1, [sp, #16]
   3e25c:	add	r0, r0, r1
   3e260:	str	ip, [sp, #8]
   3e264:	str	lr, [sp, #4]
   3e268:	bl	3ca1c <flatcc_json_printer_uint16_field@@Base+0x108>
   3e26c:	strh	r0, [sp, #14]
   3e270:	ldr	r0, [fp, #-8]
   3e274:	cmp	r0, #0
   3e278:	beq	3e294 <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   3e27c:	ldr	r0, [fp, #-4]
   3e280:	ldr	r1, [r0, #20]
   3e284:	add	r2, r1, #1
   3e288:	str	r2, [r0, #20]
   3e28c:	movw	r0, #44	; 0x2c
   3e290:	strb	r0, [r1]
   3e294:	ldr	r0, [fp, #-4]
   3e298:	ldr	r1, [fp, #8]
   3e29c:	ldr	r2, [fp, #12]
   3e2a0:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e2a4:	ldrh	r0, [sp, #14]
   3e2a8:	ldr	r1, [fp, #-4]
   3e2ac:	ldr	r1, [r1, #20]
   3e2b0:	uxth	r0, r0
   3e2b4:	bl	3a7dc <flatcc_json_printer_uint16@@Base+0x40>
   3e2b8:	ldr	r1, [fp, #-4]
   3e2bc:	ldr	r2, [r1, #20]
   3e2c0:	add	r0, r2, r0
   3e2c4:	str	r0, [r1, #20]
   3e2c8:	mov	sp, fp
   3e2cc:	pop	{fp, pc}

0003e2d0 <flatcc_json_printer_uint32_struct_field@@Base>:
   3e2d0:	push	{fp, lr}
   3e2d4:	mov	fp, sp
   3e2d8:	sub	sp, sp, #32
   3e2dc:	ldr	ip, [fp, #12]
   3e2e0:	ldr	lr, [fp, #8]
   3e2e4:	str	r0, [fp, #-4]
   3e2e8:	str	r1, [fp, #-8]
   3e2ec:	str	r2, [fp, #-12]
   3e2f0:	str	r3, [sp, #16]
   3e2f4:	ldr	r0, [fp, #-12]
   3e2f8:	ldr	r1, [sp, #16]
   3e2fc:	add	r0, r0, r1
   3e300:	str	ip, [sp, #8]
   3e304:	str	lr, [sp, #4]
   3e308:	bl	3cb48 <flatcc_json_printer_uint32_field@@Base+0x104>
   3e30c:	str	r0, [sp, #12]
   3e310:	ldr	r0, [fp, #-8]
   3e314:	cmp	r0, #0
   3e318:	beq	3e334 <flatcc_json_printer_uint32_struct_field@@Base+0x64>
   3e31c:	ldr	r0, [fp, #-4]
   3e320:	ldr	r1, [r0, #20]
   3e324:	add	r2, r1, #1
   3e328:	str	r2, [r0, #20]
   3e32c:	movw	r0, #44	; 0x2c
   3e330:	strb	r0, [r1]
   3e334:	ldr	r0, [fp, #-4]
   3e338:	ldr	r1, [fp, #8]
   3e33c:	ldr	r2, [fp, #12]
   3e340:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e344:	ldr	r0, [sp, #12]
   3e348:	ldr	r1, [fp, #-4]
   3e34c:	ldr	r1, [r1, #20]
   3e350:	bl	3ab10 <flatcc_json_printer_uint32@@Base+0x3c>
   3e354:	ldr	r1, [fp, #-4]
   3e358:	ldr	r2, [r1, #20]
   3e35c:	add	r0, r2, r0
   3e360:	str	r0, [r1, #20]
   3e364:	mov	sp, fp
   3e368:	pop	{fp, pc}

0003e36c <flatcc_json_printer_uint64_struct_field@@Base>:
   3e36c:	push	{fp, lr}
   3e370:	mov	fp, sp
   3e374:	sub	sp, sp, #32
   3e378:	ldr	ip, [fp, #12]
   3e37c:	ldr	lr, [fp, #8]
   3e380:	str	r0, [fp, #-4]
   3e384:	str	r1, [fp, #-8]
   3e388:	str	r2, [fp, #-12]
   3e38c:	str	r3, [sp, #16]
   3e390:	ldr	r0, [fp, #-12]
   3e394:	ldr	r1, [sp, #16]
   3e398:	add	r0, r0, r1
   3e39c:	str	ip, [sp, #4]
   3e3a0:	str	lr, [sp]
   3e3a4:	bl	3cca0 <flatcc_json_printer_uint64_field@@Base+0x134>
   3e3a8:	str	r1, [sp, #12]
   3e3ac:	str	r0, [sp, #8]
   3e3b0:	ldr	r0, [fp, #-8]
   3e3b4:	cmp	r0, #0
   3e3b8:	beq	3e3d4 <flatcc_json_printer_uint64_struct_field@@Base+0x68>
   3e3bc:	ldr	r0, [fp, #-4]
   3e3c0:	ldr	r1, [r0, #20]
   3e3c4:	add	r2, r1, #1
   3e3c8:	str	r2, [r0, #20]
   3e3cc:	movw	r0, #44	; 0x2c
   3e3d0:	strb	r0, [r1]
   3e3d4:	ldr	r0, [fp, #-4]
   3e3d8:	ldr	r1, [fp, #8]
   3e3dc:	ldr	r2, [fp, #12]
   3e3e0:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e3e4:	ldr	r0, [sp, #8]
   3e3e8:	ldr	r1, [sp, #12]
   3e3ec:	ldr	r2, [fp, #-4]
   3e3f0:	ldr	r2, [r2, #20]
   3e3f4:	bl	3b160 <flatcc_json_printer_uint64@@Base+0x44>
   3e3f8:	ldr	r1, [fp, #-4]
   3e3fc:	ldr	r2, [r1, #20]
   3e400:	add	r0, r2, r0
   3e404:	str	r0, [r1, #20]
   3e408:	mov	sp, fp
   3e40c:	pop	{fp, pc}

0003e410 <flatcc_json_printer_int8_struct_field@@Base>:
   3e410:	push	{fp, lr}
   3e414:	mov	fp, sp
   3e418:	sub	sp, sp, #32
   3e41c:	ldr	ip, [fp, #12]
   3e420:	ldr	lr, [fp, #8]
   3e424:	str	r0, [fp, #-4]
   3e428:	str	r1, [fp, #-8]
   3e42c:	str	r2, [fp, #-12]
   3e430:	str	r3, [sp, #16]
   3e434:	ldr	r0, [fp, #-12]
   3e438:	ldr	r1, [sp, #16]
   3e43c:	add	r0, r0, r1
   3e440:	str	ip, [sp, #8]
   3e444:	str	lr, [sp, #4]
   3e448:	bl	3cddc <flatcc_json_printer_int8_field@@Base+0x108>
   3e44c:	strb	r0, [sp, #15]
   3e450:	ldr	r0, [fp, #-8]
   3e454:	cmp	r0, #0
   3e458:	beq	3e474 <flatcc_json_printer_int8_struct_field@@Base+0x64>
   3e45c:	ldr	r0, [fp, #-4]
   3e460:	ldr	r1, [r0, #20]
   3e464:	add	r2, r1, #1
   3e468:	str	r2, [r0, #20]
   3e46c:	movw	r0, #44	; 0x2c
   3e470:	strb	r0, [r1]
   3e474:	ldr	r0, [fp, #-4]
   3e478:	ldr	r1, [fp, #8]
   3e47c:	ldr	r2, [fp, #12]
   3e480:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e484:	ldrb	r0, [sp, #15]
   3e488:	ldr	r1, [fp, #-4]
   3e48c:	ldr	r1, [r1, #20]
   3e490:	sxtb	r0, r0
   3e494:	bl	3bd10 <flatcc_json_printer_int8@@Base+0x40>
   3e498:	ldr	r1, [fp, #-4]
   3e49c:	ldr	r2, [r1, #20]
   3e4a0:	add	r0, r2, r0
   3e4a4:	str	r0, [r1, #20]
   3e4a8:	mov	sp, fp
   3e4ac:	pop	{fp, pc}

0003e4b0 <flatcc_json_printer_int16_struct_field@@Base>:
   3e4b0:	push	{fp, lr}
   3e4b4:	mov	fp, sp
   3e4b8:	sub	sp, sp, #32
   3e4bc:	ldr	ip, [fp, #12]
   3e4c0:	ldr	lr, [fp, #8]
   3e4c4:	str	r0, [fp, #-4]
   3e4c8:	str	r1, [fp, #-8]
   3e4cc:	str	r2, [fp, #-12]
   3e4d0:	str	r3, [sp, #16]
   3e4d4:	ldr	r0, [fp, #-12]
   3e4d8:	ldr	r1, [sp, #16]
   3e4dc:	add	r0, r0, r1
   3e4e0:	str	ip, [sp, #8]
   3e4e4:	str	lr, [sp, #4]
   3e4e8:	bl	3cf0c <flatcc_json_printer_int16_field@@Base+0x108>
   3e4ec:	strh	r0, [sp, #14]
   3e4f0:	ldr	r0, [fp, #-8]
   3e4f4:	cmp	r0, #0
   3e4f8:	beq	3e514 <flatcc_json_printer_int16_struct_field@@Base+0x64>
   3e4fc:	ldr	r0, [fp, #-4]
   3e500:	ldr	r1, [r0, #20]
   3e504:	add	r2, r1, #1
   3e508:	str	r2, [r0, #20]
   3e50c:	movw	r0, #44	; 0x2c
   3e510:	strb	r0, [r1]
   3e514:	ldr	r0, [fp, #-4]
   3e518:	ldr	r1, [fp, #8]
   3e51c:	ldr	r2, [fp, #12]
   3e520:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e524:	ldrh	r0, [sp, #14]
   3e528:	ldr	r1, [fp, #-4]
   3e52c:	ldr	r1, [r1, #20]
   3e530:	sxth	r0, r0
   3e534:	bl	3bdc8 <flatcc_json_printer_int16@@Base+0x40>
   3e538:	ldr	r1, [fp, #-4]
   3e53c:	ldr	r2, [r1, #20]
   3e540:	add	r0, r2, r0
   3e544:	str	r0, [r1, #20]
   3e548:	mov	sp, fp
   3e54c:	pop	{fp, pc}

0003e550 <flatcc_json_printer_int32_struct_field@@Base>:
   3e550:	push	{fp, lr}
   3e554:	mov	fp, sp
   3e558:	sub	sp, sp, #32
   3e55c:	ldr	ip, [fp, #12]
   3e560:	ldr	lr, [fp, #8]
   3e564:	str	r0, [fp, #-4]
   3e568:	str	r1, [fp, #-8]
   3e56c:	str	r2, [fp, #-12]
   3e570:	str	r3, [sp, #16]
   3e574:	ldr	r0, [fp, #-12]
   3e578:	ldr	r1, [sp, #16]
   3e57c:	add	r0, r0, r1
   3e580:	str	ip, [sp, #8]
   3e584:	str	lr, [sp, #4]
   3e588:	bl	3d038 <flatcc_json_printer_int32_field@@Base+0x104>
   3e58c:	str	r0, [sp, #12]
   3e590:	ldr	r0, [fp, #-8]
   3e594:	cmp	r0, #0
   3e598:	beq	3e5b4 <flatcc_json_printer_int32_struct_field@@Base+0x64>
   3e59c:	ldr	r0, [fp, #-4]
   3e5a0:	ldr	r1, [r0, #20]
   3e5a4:	add	r2, r1, #1
   3e5a8:	str	r2, [r0, #20]
   3e5ac:	movw	r0, #44	; 0x2c
   3e5b0:	strb	r0, [r1]
   3e5b4:	ldr	r0, [fp, #-4]
   3e5b8:	ldr	r1, [fp, #8]
   3e5bc:	ldr	r2, [fp, #12]
   3e5c0:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e5c4:	ldr	r0, [sp, #12]
   3e5c8:	ldr	r1, [fp, #-4]
   3e5cc:	ldr	r1, [r1, #20]
   3e5d0:	bl	3be7c <flatcc_json_printer_int32@@Base+0x3c>
   3e5d4:	ldr	r1, [fp, #-4]
   3e5d8:	ldr	r2, [r1, #20]
   3e5dc:	add	r0, r2, r0
   3e5e0:	str	r0, [r1, #20]
   3e5e4:	mov	sp, fp
   3e5e8:	pop	{fp, pc}

0003e5ec <flatcc_json_printer_int64_struct_field@@Base>:
   3e5ec:	push	{fp, lr}
   3e5f0:	mov	fp, sp
   3e5f4:	sub	sp, sp, #32
   3e5f8:	ldr	ip, [fp, #12]
   3e5fc:	ldr	lr, [fp, #8]
   3e600:	str	r0, [fp, #-4]
   3e604:	str	r1, [fp, #-8]
   3e608:	str	r2, [fp, #-12]
   3e60c:	str	r3, [sp, #16]
   3e610:	ldr	r0, [fp, #-12]
   3e614:	ldr	r1, [sp, #16]
   3e618:	add	r0, r0, r1
   3e61c:	str	ip, [sp, #4]
   3e620:	str	lr, [sp]
   3e624:	bl	3d190 <flatcc_json_printer_int64_field@@Base+0x134>
   3e628:	str	r1, [sp, #12]
   3e62c:	str	r0, [sp, #8]
   3e630:	ldr	r0, [fp, #-8]
   3e634:	cmp	r0, #0
   3e638:	beq	3e654 <flatcc_json_printer_int64_struct_field@@Base+0x68>
   3e63c:	ldr	r0, [fp, #-4]
   3e640:	ldr	r1, [r0, #20]
   3e644:	add	r2, r1, #1
   3e648:	str	r2, [r0, #20]
   3e64c:	movw	r0, #44	; 0x2c
   3e650:	strb	r0, [r1]
   3e654:	ldr	r0, [fp, #-4]
   3e658:	ldr	r1, [fp, #8]
   3e65c:	ldr	r2, [fp, #12]
   3e660:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e664:	ldr	r0, [sp, #8]
   3e668:	ldr	r1, [sp, #12]
   3e66c:	ldr	r2, [fp, #-4]
   3e670:	ldr	r2, [r2, #20]
   3e674:	bl	3bf34 <flatcc_json_printer_int64@@Base+0x44>
   3e678:	ldr	r1, [fp, #-4]
   3e67c:	ldr	r2, [r1, #20]
   3e680:	add	r0, r2, r0
   3e684:	str	r0, [r1, #20]
   3e688:	mov	sp, fp
   3e68c:	pop	{fp, pc}

0003e690 <flatcc_json_printer_bool_struct_field@@Base>:
   3e690:	push	{fp, lr}
   3e694:	mov	fp, sp
   3e698:	sub	sp, sp, #32
   3e69c:	ldr	ip, [fp, #12]
   3e6a0:	ldr	lr, [fp, #8]
   3e6a4:	str	r0, [fp, #-4]
   3e6a8:	str	r1, [fp, #-8]
   3e6ac:	str	r2, [fp, #-12]
   3e6b0:	str	r3, [sp, #16]
   3e6b4:	ldr	r0, [fp, #-12]
   3e6b8:	ldr	r1, [sp, #16]
   3e6bc:	add	r0, r0, r1
   3e6c0:	str	ip, [sp, #8]
   3e6c4:	str	lr, [sp, #4]
   3e6c8:	bl	3d2c8 <flatcc_json_printer_bool_field@@Base+0x104>
   3e6cc:	strb	r0, [sp, #15]
   3e6d0:	ldr	r0, [fp, #-8]
   3e6d4:	cmp	r0, #0
   3e6d8:	beq	3e6f4 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   3e6dc:	ldr	r0, [fp, #-4]
   3e6e0:	ldr	r1, [r0, #20]
   3e6e4:	add	r2, r1, #1
   3e6e8:	str	r2, [r0, #20]
   3e6ec:	movw	r0, #44	; 0x2c
   3e6f0:	strb	r0, [r1]
   3e6f4:	ldr	r0, [fp, #-4]
   3e6f8:	ldr	r1, [fp, #8]
   3e6fc:	ldr	r2, [fp, #12]
   3e700:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e704:	ldrb	r0, [sp, #15]
   3e708:	ldr	r1, [fp, #-4]
   3e70c:	ldr	r1, [r1, #20]
   3e710:	bl	3d2f0 <flatcc_json_printer_bool_field@@Base+0x12c>
   3e714:	ldr	r1, [fp, #-4]
   3e718:	ldr	r2, [r1, #20]
   3e71c:	add	r0, r2, r0
   3e720:	str	r0, [r1, #20]
   3e724:	mov	sp, fp
   3e728:	pop	{fp, pc}

0003e72c <flatcc_json_printer_float_struct_field@@Base>:
   3e72c:	push	{fp, lr}
   3e730:	mov	fp, sp
   3e734:	sub	sp, sp, #32
   3e738:	ldr	ip, [fp, #12]
   3e73c:	ldr	lr, [fp, #8]
   3e740:	str	r0, [fp, #-4]
   3e744:	str	r1, [fp, #-8]
   3e748:	str	r2, [fp, #-12]
   3e74c:	str	r3, [sp, #16]
   3e750:	ldr	r0, [fp, #-12]
   3e754:	ldr	r1, [sp, #16]
   3e758:	add	r0, r0, r1
   3e75c:	str	ip, [sp, #8]
   3e760:	str	lr, [sp, #4]
   3e764:	bl	3d4a8 <flatcc_json_printer_float_field@@Base+0x108>
   3e768:	vstr	s0, [sp, #12]
   3e76c:	ldr	r0, [fp, #-8]
   3e770:	cmp	r0, #0
   3e774:	beq	3e790 <flatcc_json_printer_float_struct_field@@Base+0x64>
   3e778:	ldr	r0, [fp, #-4]
   3e77c:	ldr	r1, [r0, #20]
   3e780:	add	r2, r1, #1
   3e784:	str	r2, [r0, #20]
   3e788:	movw	r0, #44	; 0x2c
   3e78c:	strb	r0, [r1]
   3e790:	ldr	r0, [fp, #-4]
   3e794:	ldr	r1, [fp, #8]
   3e798:	ldr	r2, [fp, #12]
   3e79c:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e7a0:	vldr	s0, [sp, #12]
   3e7a4:	vcvt.f64.f32	d0, s0
   3e7a8:	ldr	r0, [fp, #-4]
   3e7ac:	ldr	r0, [r0, #20]
   3e7b0:	bl	399a0 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3e7b4:	ldr	r1, [fp, #-4]
   3e7b8:	ldr	r2, [r1, #20]
   3e7bc:	add	r0, r2, r0
   3e7c0:	str	r0, [r1, #20]
   3e7c4:	mov	sp, fp
   3e7c8:	pop	{fp, pc}

0003e7cc <flatcc_json_printer_double_struct_field@@Base>:
   3e7cc:	push	{fp, lr}
   3e7d0:	mov	fp, sp
   3e7d4:	sub	sp, sp, #32
   3e7d8:	ldr	ip, [fp, #12]
   3e7dc:	ldr	lr, [fp, #8]
   3e7e0:	str	r0, [fp, #-4]
   3e7e4:	str	r1, [fp, #-8]
   3e7e8:	str	r2, [fp, #-12]
   3e7ec:	str	r3, [sp, #16]
   3e7f0:	ldr	r0, [fp, #-12]
   3e7f4:	ldr	r1, [sp, #16]
   3e7f8:	add	r0, r0, r1
   3e7fc:	str	ip, [sp, #4]
   3e800:	str	lr, [sp]
   3e804:	bl	3d5d0 <flatcc_json_printer_double_field@@Base+0x104>
   3e808:	vstr	d0, [sp, #8]
   3e80c:	ldr	r0, [fp, #-8]
   3e810:	cmp	r0, #0
   3e814:	beq	3e830 <flatcc_json_printer_double_struct_field@@Base+0x64>
   3e818:	ldr	r0, [fp, #-4]
   3e81c:	ldr	r1, [r0, #20]
   3e820:	add	r2, r1, #1
   3e824:	str	r2, [r0, #20]
   3e828:	movw	r0, #44	; 0x2c
   3e82c:	strb	r0, [r1]
   3e830:	ldr	r0, [fp, #-4]
   3e834:	ldr	r1, [fp, #8]
   3e838:	ldr	r2, [fp, #12]
   3e83c:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e840:	vldr	d0, [sp, #8]
   3e844:	ldr	r0, [fp, #-4]
   3e848:	ldr	r0, [r0, #20]
   3e84c:	bl	399a0 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3e850:	ldr	r1, [fp, #-4]
   3e854:	ldr	r2, [r1, #20]
   3e858:	add	r0, r2, r0
   3e85c:	str	r0, [r1, #20]
   3e860:	mov	sp, fp
   3e864:	pop	{fp, pc}

0003e868 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3e868:	push	{r4, sl, fp, lr}
   3e86c:	add	fp, sp, #8
   3e870:	sub	sp, sp, #40	; 0x28
   3e874:	ldr	ip, [fp, #16]
   3e878:	ldr	lr, [fp, #12]
   3e87c:	ldr	r4, [fp, #8]
   3e880:	str	r0, [fp, #-12]
   3e884:	str	r1, [fp, #-16]
   3e888:	str	r2, [fp, #-20]	; 0xffffffec
   3e88c:	str	r3, [sp, #24]
   3e890:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e894:	ldr	r1, [sp, #24]
   3e898:	add	r0, r0, r1
   3e89c:	str	ip, [sp, #16]
   3e8a0:	str	lr, [sp, #12]
   3e8a4:	str	r4, [sp, #8]
   3e8a8:	bl	3c8ec <flatcc_json_printer_uint8_field@@Base+0x108>
   3e8ac:	strb	r0, [sp, #23]
   3e8b0:	ldr	r0, [fp, #-16]
   3e8b4:	cmp	r0, #0
   3e8b8:	beq	3e8d4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x6c>
   3e8bc:	ldr	r0, [fp, #-12]
   3e8c0:	ldr	r1, [r0, #20]
   3e8c4:	add	r2, r1, #1
   3e8c8:	str	r2, [r0, #20]
   3e8cc:	movw	r0, #44	; 0x2c
   3e8d0:	strb	r0, [r1]
   3e8d4:	ldr	r0, [fp, #-12]
   3e8d8:	ldr	r1, [fp, #8]
   3e8dc:	ldr	r2, [fp, #12]
   3e8e0:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e8e4:	ldr	r0, [fp, #-12]
   3e8e8:	ldrsb	r0, [r0, #27]
   3e8ec:	cmp	r0, #0
   3e8f0:	beq	3e91c <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb4>
   3e8f4:	ldrb	r0, [sp, #23]
   3e8f8:	ldr	r1, [fp, #-12]
   3e8fc:	ldr	r1, [r1, #20]
   3e900:	and	r0, r0, #255	; 0xff
   3e904:	bl	3a608 <flatcc_json_printer_uint8@@Base+0x40>
   3e908:	ldr	r1, [fp, #-12]
   3e90c:	ldr	r2, [r1, #20]
   3e910:	add	r0, r2, r0
   3e914:	str	r0, [r1, #20]
   3e918:	b	3e938 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xd0>
   3e91c:	ldr	r0, [fp, #16]
   3e920:	ldr	r1, [fp, #-12]
   3e924:	str	r0, [sp, #4]
   3e928:	mov	r0, r1
   3e92c:	ldrb	r1, [sp, #23]
   3e930:	ldr	r2, [sp, #4]
   3e934:	blx	r2
   3e938:	sub	sp, fp, #8
   3e93c:	pop	{r4, sl, fp, pc}

0003e940 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3e940:	push	{r4, sl, fp, lr}
   3e944:	add	fp, sp, #8
   3e948:	sub	sp, sp, #40	; 0x28
   3e94c:	ldr	ip, [fp, #16]
   3e950:	ldr	lr, [fp, #12]
   3e954:	ldr	r4, [fp, #8]
   3e958:	str	r0, [fp, #-12]
   3e95c:	str	r1, [fp, #-16]
   3e960:	str	r2, [fp, #-20]	; 0xffffffec
   3e964:	str	r3, [sp, #24]
   3e968:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e96c:	ldr	r1, [sp, #24]
   3e970:	add	r0, r0, r1
   3e974:	str	ip, [sp, #16]
   3e978:	str	lr, [sp, #12]
   3e97c:	str	r4, [sp, #8]
   3e980:	bl	3ca1c <flatcc_json_printer_uint16_field@@Base+0x108>
   3e984:	strh	r0, [sp, #22]
   3e988:	ldr	r0, [fp, #-16]
   3e98c:	cmp	r0, #0
   3e990:	beq	3e9ac <flatcc_json_printer_uint16_enum_struct_field@@Base+0x6c>
   3e994:	ldr	r0, [fp, #-12]
   3e998:	ldr	r1, [r0, #20]
   3e99c:	add	r2, r1, #1
   3e9a0:	str	r2, [r0, #20]
   3e9a4:	movw	r0, #44	; 0x2c
   3e9a8:	strb	r0, [r1]
   3e9ac:	ldr	r0, [fp, #-12]
   3e9b0:	ldr	r1, [fp, #8]
   3e9b4:	ldr	r2, [fp, #12]
   3e9b8:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3e9bc:	ldr	r0, [fp, #-12]
   3e9c0:	ldrsb	r0, [r0, #27]
   3e9c4:	cmp	r0, #0
   3e9c8:	beq	3e9f4 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xb4>
   3e9cc:	ldrh	r0, [sp, #22]
   3e9d0:	ldr	r1, [fp, #-12]
   3e9d4:	ldr	r1, [r1, #20]
   3e9d8:	uxth	r0, r0
   3e9dc:	bl	3a7dc <flatcc_json_printer_uint16@@Base+0x40>
   3e9e0:	ldr	r1, [fp, #-12]
   3e9e4:	ldr	r2, [r1, #20]
   3e9e8:	add	r0, r2, r0
   3e9ec:	str	r0, [r1, #20]
   3e9f0:	b	3ea10 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xd0>
   3e9f4:	ldr	r0, [fp, #16]
   3e9f8:	ldr	r1, [fp, #-12]
   3e9fc:	str	r0, [sp, #4]
   3ea00:	mov	r0, r1
   3ea04:	ldrh	r1, [sp, #22]
   3ea08:	ldr	r2, [sp, #4]
   3ea0c:	blx	r2
   3ea10:	sub	sp, fp, #8
   3ea14:	pop	{r4, sl, fp, pc}

0003ea18 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3ea18:	push	{r4, sl, fp, lr}
   3ea1c:	add	fp, sp, #8
   3ea20:	sub	sp, sp, #40	; 0x28
   3ea24:	ldr	ip, [fp, #16]
   3ea28:	ldr	lr, [fp, #12]
   3ea2c:	ldr	r4, [fp, #8]
   3ea30:	str	r0, [fp, #-12]
   3ea34:	str	r1, [fp, #-16]
   3ea38:	str	r2, [fp, #-20]	; 0xffffffec
   3ea3c:	str	r3, [sp, #24]
   3ea40:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ea44:	ldr	r1, [sp, #24]
   3ea48:	add	r0, r0, r1
   3ea4c:	str	ip, [sp, #16]
   3ea50:	str	lr, [sp, #12]
   3ea54:	str	r4, [sp, #8]
   3ea58:	bl	3cb48 <flatcc_json_printer_uint32_field@@Base+0x104>
   3ea5c:	str	r0, [sp, #20]
   3ea60:	ldr	r0, [fp, #-16]
   3ea64:	cmp	r0, #0
   3ea68:	beq	3ea84 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x6c>
   3ea6c:	ldr	r0, [fp, #-12]
   3ea70:	ldr	r1, [r0, #20]
   3ea74:	add	r2, r1, #1
   3ea78:	str	r2, [r0, #20]
   3ea7c:	movw	r0, #44	; 0x2c
   3ea80:	strb	r0, [r1]
   3ea84:	ldr	r0, [fp, #-12]
   3ea88:	ldr	r1, [fp, #8]
   3ea8c:	ldr	r2, [fp, #12]
   3ea90:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3ea94:	ldr	r0, [fp, #-12]
   3ea98:	ldrsb	r0, [r0, #27]
   3ea9c:	cmp	r0, #0
   3eaa0:	beq	3eac8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb0>
   3eaa4:	ldr	r0, [sp, #20]
   3eaa8:	ldr	r1, [fp, #-12]
   3eaac:	ldr	r1, [r1, #20]
   3eab0:	bl	3ab10 <flatcc_json_printer_uint32@@Base+0x3c>
   3eab4:	ldr	r1, [fp, #-12]
   3eab8:	ldr	r2, [r1, #20]
   3eabc:	add	r0, r2, r0
   3eac0:	str	r0, [r1, #20]
   3eac4:	b	3eae8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xd0>
   3eac8:	ldr	r0, [fp, #16]
   3eacc:	ldr	r1, [fp, #-12]
   3ead0:	ldr	r2, [sp, #20]
   3ead4:	str	r0, [sp, #4]
   3ead8:	mov	r0, r1
   3eadc:	mov	r1, r2
   3eae0:	ldr	r2, [sp, #4]
   3eae4:	blx	r2
   3eae8:	sub	sp, fp, #8
   3eaec:	pop	{r4, sl, fp, pc}

0003eaf0 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3eaf0:	push	{r4, sl, fp, lr}
   3eaf4:	add	fp, sp, #8
   3eaf8:	sub	sp, sp, #40	; 0x28
   3eafc:	ldr	ip, [fp, #16]
   3eb00:	ldr	lr, [fp, #12]
   3eb04:	ldr	r4, [fp, #8]
   3eb08:	str	r0, [fp, #-12]
   3eb0c:	str	r1, [fp, #-16]
   3eb10:	str	r2, [fp, #-20]	; 0xffffffec
   3eb14:	str	r3, [sp, #24]
   3eb18:	ldr	r0, [fp, #-20]	; 0xffffffec
   3eb1c:	ldr	r1, [sp, #24]
   3eb20:	add	r0, r0, r1
   3eb24:	str	ip, [sp, #12]
   3eb28:	str	lr, [sp, #8]
   3eb2c:	str	r4, [sp, #4]
   3eb30:	bl	3cca0 <flatcc_json_printer_uint64_field@@Base+0x134>
   3eb34:	str	r1, [sp, #20]
   3eb38:	str	r0, [sp, #16]
   3eb3c:	ldr	r0, [fp, #-16]
   3eb40:	cmp	r0, #0
   3eb44:	beq	3eb60 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   3eb48:	ldr	r0, [fp, #-12]
   3eb4c:	ldr	r1, [r0, #20]
   3eb50:	add	r2, r1, #1
   3eb54:	str	r2, [r0, #20]
   3eb58:	movw	r0, #44	; 0x2c
   3eb5c:	strb	r0, [r1]
   3eb60:	ldr	r0, [fp, #-12]
   3eb64:	ldr	r1, [fp, #8]
   3eb68:	ldr	r2, [fp, #12]
   3eb6c:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3eb70:	ldr	r0, [fp, #-12]
   3eb74:	ldrsb	r0, [r0, #27]
   3eb78:	cmp	r0, #0
   3eb7c:	beq	3eba8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xb8>
   3eb80:	ldr	r0, [sp, #16]
   3eb84:	ldr	r1, [sp, #20]
   3eb88:	ldr	r2, [fp, #-12]
   3eb8c:	ldr	r2, [r2, #20]
   3eb90:	bl	3b160 <flatcc_json_printer_uint64@@Base+0x44>
   3eb94:	ldr	r1, [fp, #-12]
   3eb98:	ldr	r2, [r1, #20]
   3eb9c:	add	r0, r2, r0
   3eba0:	str	r0, [r1, #20]
   3eba4:	b	3ebc8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xd8>
   3eba8:	ldr	r0, [fp, #16]
   3ebac:	ldr	r1, [fp, #-12]
   3ebb0:	ldr	r2, [sp, #16]
   3ebb4:	ldr	r3, [sp, #20]
   3ebb8:	str	r0, [sp]
   3ebbc:	mov	r0, r1
   3ebc0:	ldr	r1, [sp]
   3ebc4:	blx	r1
   3ebc8:	sub	sp, fp, #8
   3ebcc:	pop	{r4, sl, fp, pc}

0003ebd0 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3ebd0:	push	{r4, sl, fp, lr}
   3ebd4:	add	fp, sp, #8
   3ebd8:	sub	sp, sp, #40	; 0x28
   3ebdc:	ldr	ip, [fp, #16]
   3ebe0:	ldr	lr, [fp, #12]
   3ebe4:	ldr	r4, [fp, #8]
   3ebe8:	str	r0, [fp, #-12]
   3ebec:	str	r1, [fp, #-16]
   3ebf0:	str	r2, [fp, #-20]	; 0xffffffec
   3ebf4:	str	r3, [sp, #24]
   3ebf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ebfc:	ldr	r1, [sp, #24]
   3ec00:	add	r0, r0, r1
   3ec04:	str	ip, [sp, #16]
   3ec08:	str	lr, [sp, #12]
   3ec0c:	str	r4, [sp, #8]
   3ec10:	bl	3cddc <flatcc_json_printer_int8_field@@Base+0x108>
   3ec14:	strb	r0, [sp, #23]
   3ec18:	ldr	r0, [fp, #-16]
   3ec1c:	cmp	r0, #0
   3ec20:	beq	3ec3c <flatcc_json_printer_int8_enum_struct_field@@Base+0x6c>
   3ec24:	ldr	r0, [fp, #-12]
   3ec28:	ldr	r1, [r0, #20]
   3ec2c:	add	r2, r1, #1
   3ec30:	str	r2, [r0, #20]
   3ec34:	movw	r0, #44	; 0x2c
   3ec38:	strb	r0, [r1]
   3ec3c:	ldr	r0, [fp, #-12]
   3ec40:	ldr	r1, [fp, #8]
   3ec44:	ldr	r2, [fp, #12]
   3ec48:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3ec4c:	ldr	r0, [fp, #-12]
   3ec50:	ldrsb	r0, [r0, #27]
   3ec54:	cmp	r0, #0
   3ec58:	beq	3ec84 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb4>
   3ec5c:	ldrb	r0, [sp, #23]
   3ec60:	ldr	r1, [fp, #-12]
   3ec64:	ldr	r1, [r1, #20]
   3ec68:	sxtb	r0, r0
   3ec6c:	bl	3bd10 <flatcc_json_printer_int8@@Base+0x40>
   3ec70:	ldr	r1, [fp, #-12]
   3ec74:	ldr	r2, [r1, #20]
   3ec78:	add	r0, r2, r0
   3ec7c:	str	r0, [r1, #20]
   3ec80:	b	3eca0 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd0>
   3ec84:	ldr	r0, [fp, #16]
   3ec88:	ldr	r1, [fp, #-12]
   3ec8c:	str	r0, [sp, #4]
   3ec90:	mov	r0, r1
   3ec94:	ldrsb	r1, [sp, #23]
   3ec98:	ldr	r2, [sp, #4]
   3ec9c:	blx	r2
   3eca0:	sub	sp, fp, #8
   3eca4:	pop	{r4, sl, fp, pc}

0003eca8 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3eca8:	push	{r4, sl, fp, lr}
   3ecac:	add	fp, sp, #8
   3ecb0:	sub	sp, sp, #40	; 0x28
   3ecb4:	ldr	ip, [fp, #16]
   3ecb8:	ldr	lr, [fp, #12]
   3ecbc:	ldr	r4, [fp, #8]
   3ecc0:	str	r0, [fp, #-12]
   3ecc4:	str	r1, [fp, #-16]
   3ecc8:	str	r2, [fp, #-20]	; 0xffffffec
   3eccc:	str	r3, [sp, #24]
   3ecd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ecd4:	ldr	r1, [sp, #24]
   3ecd8:	add	r0, r0, r1
   3ecdc:	str	ip, [sp, #16]
   3ece0:	str	lr, [sp, #12]
   3ece4:	str	r4, [sp, #8]
   3ece8:	bl	3cf0c <flatcc_json_printer_int16_field@@Base+0x108>
   3ecec:	strh	r0, [sp, #22]
   3ecf0:	ldr	r0, [fp, #-16]
   3ecf4:	cmp	r0, #0
   3ecf8:	beq	3ed14 <flatcc_json_printer_int16_enum_struct_field@@Base+0x6c>
   3ecfc:	ldr	r0, [fp, #-12]
   3ed00:	ldr	r1, [r0, #20]
   3ed04:	add	r2, r1, #1
   3ed08:	str	r2, [r0, #20]
   3ed0c:	movw	r0, #44	; 0x2c
   3ed10:	strb	r0, [r1]
   3ed14:	ldr	r0, [fp, #-12]
   3ed18:	ldr	r1, [fp, #8]
   3ed1c:	ldr	r2, [fp, #12]
   3ed20:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3ed24:	ldr	r0, [fp, #-12]
   3ed28:	ldrsb	r0, [r0, #27]
   3ed2c:	cmp	r0, #0
   3ed30:	beq	3ed5c <flatcc_json_printer_int16_enum_struct_field@@Base+0xb4>
   3ed34:	ldrh	r0, [sp, #22]
   3ed38:	ldr	r1, [fp, #-12]
   3ed3c:	ldr	r1, [r1, #20]
   3ed40:	sxth	r0, r0
   3ed44:	bl	3bdc8 <flatcc_json_printer_int16@@Base+0x40>
   3ed48:	ldr	r1, [fp, #-12]
   3ed4c:	ldr	r2, [r1, #20]
   3ed50:	add	r0, r2, r0
   3ed54:	str	r0, [r1, #20]
   3ed58:	b	3ed78 <flatcc_json_printer_int16_enum_struct_field@@Base+0xd0>
   3ed5c:	ldr	r0, [fp, #16]
   3ed60:	ldr	r1, [fp, #-12]
   3ed64:	str	r0, [sp, #4]
   3ed68:	mov	r0, r1
   3ed6c:	ldrsh	r1, [sp, #22]
   3ed70:	ldr	r2, [sp, #4]
   3ed74:	blx	r2
   3ed78:	sub	sp, fp, #8
   3ed7c:	pop	{r4, sl, fp, pc}

0003ed80 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3ed80:	push	{r4, sl, fp, lr}
   3ed84:	add	fp, sp, #8
   3ed88:	sub	sp, sp, #40	; 0x28
   3ed8c:	ldr	ip, [fp, #16]
   3ed90:	ldr	lr, [fp, #12]
   3ed94:	ldr	r4, [fp, #8]
   3ed98:	str	r0, [fp, #-12]
   3ed9c:	str	r1, [fp, #-16]
   3eda0:	str	r2, [fp, #-20]	; 0xffffffec
   3eda4:	str	r3, [sp, #24]
   3eda8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3edac:	ldr	r1, [sp, #24]
   3edb0:	add	r0, r0, r1
   3edb4:	str	ip, [sp, #16]
   3edb8:	str	lr, [sp, #12]
   3edbc:	str	r4, [sp, #8]
   3edc0:	bl	3d038 <flatcc_json_printer_int32_field@@Base+0x104>
   3edc4:	str	r0, [sp, #20]
   3edc8:	ldr	r0, [fp, #-16]
   3edcc:	cmp	r0, #0
   3edd0:	beq	3edec <flatcc_json_printer_int32_enum_struct_field@@Base+0x6c>
   3edd4:	ldr	r0, [fp, #-12]
   3edd8:	ldr	r1, [r0, #20]
   3eddc:	add	r2, r1, #1
   3ede0:	str	r2, [r0, #20]
   3ede4:	movw	r0, #44	; 0x2c
   3ede8:	strb	r0, [r1]
   3edec:	ldr	r0, [fp, #-12]
   3edf0:	ldr	r1, [fp, #8]
   3edf4:	ldr	r2, [fp, #12]
   3edf8:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3edfc:	ldr	r0, [fp, #-12]
   3ee00:	ldrsb	r0, [r0, #27]
   3ee04:	cmp	r0, #0
   3ee08:	beq	3ee30 <flatcc_json_printer_int32_enum_struct_field@@Base+0xb0>
   3ee0c:	ldr	r0, [sp, #20]
   3ee10:	ldr	r1, [fp, #-12]
   3ee14:	ldr	r1, [r1, #20]
   3ee18:	bl	3be7c <flatcc_json_printer_int32@@Base+0x3c>
   3ee1c:	ldr	r1, [fp, #-12]
   3ee20:	ldr	r2, [r1, #20]
   3ee24:	add	r0, r2, r0
   3ee28:	str	r0, [r1, #20]
   3ee2c:	b	3ee50 <flatcc_json_printer_int32_enum_struct_field@@Base+0xd0>
   3ee30:	ldr	r0, [fp, #16]
   3ee34:	ldr	r1, [fp, #-12]
   3ee38:	ldr	r2, [sp, #20]
   3ee3c:	str	r0, [sp, #4]
   3ee40:	mov	r0, r1
   3ee44:	mov	r1, r2
   3ee48:	ldr	r2, [sp, #4]
   3ee4c:	blx	r2
   3ee50:	sub	sp, fp, #8
   3ee54:	pop	{r4, sl, fp, pc}

0003ee58 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3ee58:	push	{r4, sl, fp, lr}
   3ee5c:	add	fp, sp, #8
   3ee60:	sub	sp, sp, #40	; 0x28
   3ee64:	ldr	ip, [fp, #16]
   3ee68:	ldr	lr, [fp, #12]
   3ee6c:	ldr	r4, [fp, #8]
   3ee70:	str	r0, [fp, #-12]
   3ee74:	str	r1, [fp, #-16]
   3ee78:	str	r2, [fp, #-20]	; 0xffffffec
   3ee7c:	str	r3, [sp, #24]
   3ee80:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ee84:	ldr	r1, [sp, #24]
   3ee88:	add	r0, r0, r1
   3ee8c:	str	ip, [sp, #12]
   3ee90:	str	lr, [sp, #8]
   3ee94:	str	r4, [sp, #4]
   3ee98:	bl	3d190 <flatcc_json_printer_int64_field@@Base+0x134>
   3ee9c:	str	r1, [sp, #20]
   3eea0:	str	r0, [sp, #16]
   3eea4:	ldr	r0, [fp, #-16]
   3eea8:	cmp	r0, #0
   3eeac:	beq	3eec8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   3eeb0:	ldr	r0, [fp, #-12]
   3eeb4:	ldr	r1, [r0, #20]
   3eeb8:	add	r2, r1, #1
   3eebc:	str	r2, [r0, #20]
   3eec0:	movw	r0, #44	; 0x2c
   3eec4:	strb	r0, [r1]
   3eec8:	ldr	r0, [fp, #-12]
   3eecc:	ldr	r1, [fp, #8]
   3eed0:	ldr	r2, [fp, #12]
   3eed4:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3eed8:	ldr	r0, [fp, #-12]
   3eedc:	ldrsb	r0, [r0, #27]
   3eee0:	cmp	r0, #0
   3eee4:	beq	3ef10 <flatcc_json_printer_int64_enum_struct_field@@Base+0xb8>
   3eee8:	ldr	r0, [sp, #16]
   3eeec:	ldr	r1, [sp, #20]
   3eef0:	ldr	r2, [fp, #-12]
   3eef4:	ldr	r2, [r2, #20]
   3eef8:	bl	3bf34 <flatcc_json_printer_int64@@Base+0x44>
   3eefc:	ldr	r1, [fp, #-12]
   3ef00:	ldr	r2, [r1, #20]
   3ef04:	add	r0, r2, r0
   3ef08:	str	r0, [r1, #20]
   3ef0c:	b	3ef30 <flatcc_json_printer_int64_enum_struct_field@@Base+0xd8>
   3ef10:	ldr	r0, [fp, #16]
   3ef14:	ldr	r1, [fp, #-12]
   3ef18:	ldr	r2, [sp, #16]
   3ef1c:	ldr	r3, [sp, #20]
   3ef20:	str	r0, [sp]
   3ef24:	mov	r0, r1
   3ef28:	ldr	r1, [sp]
   3ef2c:	blx	r1
   3ef30:	sub	sp, fp, #8
   3ef34:	pop	{r4, sl, fp, pc}

0003ef38 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3ef38:	push	{r4, sl, fp, lr}
   3ef3c:	add	fp, sp, #8
   3ef40:	sub	sp, sp, #40	; 0x28
   3ef44:	ldr	ip, [fp, #16]
   3ef48:	ldr	lr, [fp, #12]
   3ef4c:	ldr	r4, [fp, #8]
   3ef50:	str	r0, [fp, #-12]
   3ef54:	str	r1, [fp, #-16]
   3ef58:	str	r2, [fp, #-20]	; 0xffffffec
   3ef5c:	str	r3, [sp, #24]
   3ef60:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ef64:	ldr	r1, [sp, #24]
   3ef68:	add	r0, r0, r1
   3ef6c:	str	ip, [sp, #16]
   3ef70:	str	lr, [sp, #12]
   3ef74:	str	r4, [sp, #8]
   3ef78:	bl	3d2c8 <flatcc_json_printer_bool_field@@Base+0x104>
   3ef7c:	strb	r0, [sp, #23]
   3ef80:	ldr	r0, [fp, #-16]
   3ef84:	cmp	r0, #0
   3ef88:	beq	3efa4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x6c>
   3ef8c:	ldr	r0, [fp, #-12]
   3ef90:	ldr	r1, [r0, #20]
   3ef94:	add	r2, r1, #1
   3ef98:	str	r2, [r0, #20]
   3ef9c:	movw	r0, #44	; 0x2c
   3efa0:	strb	r0, [r1]
   3efa4:	ldr	r0, [fp, #-12]
   3efa8:	ldr	r1, [fp, #8]
   3efac:	ldr	r2, [fp, #12]
   3efb0:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3efb4:	ldr	r0, [fp, #-12]
   3efb8:	ldrsb	r0, [r0, #27]
   3efbc:	cmp	r0, #0
   3efc0:	beq	3efe8 <flatcc_json_printer_bool_enum_struct_field@@Base+0xb0>
   3efc4:	ldrb	r0, [sp, #23]
   3efc8:	ldr	r1, [fp, #-12]
   3efcc:	ldr	r1, [r1, #20]
   3efd0:	bl	3d2f0 <flatcc_json_printer_bool_field@@Base+0x12c>
   3efd4:	ldr	r1, [fp, #-12]
   3efd8:	ldr	r2, [r1, #20]
   3efdc:	add	r0, r2, r0
   3efe0:	str	r0, [r1, #20]
   3efe4:	b	3f004 <flatcc_json_printer_bool_enum_struct_field@@Base+0xcc>
   3efe8:	ldr	r0, [fp, #16]
   3efec:	ldr	r1, [fp, #-12]
   3eff0:	str	r0, [sp, #4]
   3eff4:	mov	r0, r1
   3eff8:	ldrb	r1, [sp, #23]
   3effc:	ldr	r2, [sp, #4]
   3f000:	blx	r2
   3f004:	sub	sp, fp, #8
   3f008:	pop	{r4, sl, fp, pc}

0003f00c <flatcc_json_printer_utype_vector_field@@Base>:
   3f00c:	push	{fp, lr}
   3f010:	mov	fp, sp
   3f014:	sub	sp, sp, #32
   3f018:	ldr	ip, [fp, #8]
   3f01c:	str	r0, [fp, #-4]
   3f020:	str	r1, [fp, #-8]
   3f024:	str	r2, [fp, #-12]
   3f028:	str	r3, [sp, #16]
   3f02c:	ldr	r0, [fp, #-8]
   3f030:	ldr	r1, [fp, #-12]
   3f034:	str	ip, [sp, #4]
   3f038:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3f03c:	str	r0, [sp, #12]
   3f040:	ldr	r0, [sp, #12]
   3f044:	movw	r1, #0
   3f048:	cmp	r0, r1
   3f04c:	beq	3f280 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   3f050:	ldr	r0, [fp, #-8]
   3f054:	ldr	r1, [r0, #16]
   3f058:	add	r2, r1, #1
   3f05c:	str	r2, [r0, #16]
   3f060:	cmp	r1, #0
   3f064:	beq	3f080 <flatcc_json_printer_utype_vector_field@@Base+0x74>
   3f068:	ldr	r0, [fp, #-4]
   3f06c:	ldr	r1, [r0, #20]
   3f070:	add	r2, r1, #1
   3f074:	str	r2, [r0, #20]
   3f078:	movw	r0, #44	; 0x2c
   3f07c:	strb	r0, [r1]
   3f080:	ldr	r0, [sp, #12]
   3f084:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   3f088:	str	r0, [sp, #12]
   3f08c:	ldr	r0, [sp, #12]
   3f090:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3f094:	str	r0, [sp, #8]
   3f098:	ldr	r0, [sp, #12]
   3f09c:	add	r0, r0, #4
   3f0a0:	str	r0, [sp, #12]
   3f0a4:	ldr	r0, [fp, #-4]
   3f0a8:	ldr	r1, [sp, #16]
   3f0ac:	ldr	r2, [fp, #8]
   3f0b0:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3f0b4:	ldr	r0, [fp, #-4]
   3f0b8:	ldr	r1, [r0, #32]
   3f0bc:	add	r1, r1, #1
   3f0c0:	str	r1, [r0, #32]
   3f0c4:	ldr	r0, [fp, #-4]
   3f0c8:	ldr	r1, [r0, #20]
   3f0cc:	add	r2, r1, #1
   3f0d0:	str	r2, [r0, #20]
   3f0d4:	movw	r0, #91	; 0x5b
   3f0d8:	strb	r0, [r1]
   3f0dc:	ldr	r0, [sp, #8]
   3f0e0:	cmp	r0, #0
   3f0e4:	beq	3f170 <flatcc_json_printer_utype_vector_field@@Base+0x164>
   3f0e8:	b	3f0ec <flatcc_json_printer_utype_vector_field@@Base+0xe0>
   3f0ec:	ldr	r0, [fp, #-4]
   3f0f0:	ldrsb	r0, [r0, #25]
   3f0f4:	cmp	r0, #0
   3f0f8:	beq	3f120 <flatcc_json_printer_utype_vector_field@@Base+0x114>
   3f0fc:	ldr	r0, [fp, #-4]
   3f100:	ldr	r1, [r0, #20]
   3f104:	add	r2, r1, #1
   3f108:	str	r2, [r0, #20]
   3f10c:	movw	r0, #10
   3f110:	strb	r0, [r1]
   3f114:	ldr	r0, [fp, #-4]
   3f118:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3f11c:	b	3f128 <flatcc_json_printer_utype_vector_field@@Base+0x11c>
   3f120:	ldr	r0, [fp, #-4]
   3f124:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3f128:	b	3f12c <flatcc_json_printer_utype_vector_field@@Base+0x120>
   3f12c:	ldr	r0, [sp, #12]
   3f130:	bl	3f2ac <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   3f134:	ldr	r1, [fp, #-4]
   3f138:	ldr	r1, [r1, #20]
   3f13c:	and	r0, r0, #255	; 0xff
   3f140:	bl	3a608 <flatcc_json_printer_uint8@@Base+0x40>
   3f144:	ldr	r1, [fp, #-4]
   3f148:	ldr	r2, [r1, #20]
   3f14c:	add	r0, r2, r0
   3f150:	str	r0, [r1, #20]
   3f154:	ldr	r0, [sp, #12]
   3f158:	add	r0, r0, #1
   3f15c:	str	r0, [sp, #12]
   3f160:	ldr	r0, [sp, #8]
   3f164:	mvn	r1, #0
   3f168:	add	r0, r0, r1
   3f16c:	str	r0, [sp, #8]
   3f170:	b	3f174 <flatcc_json_printer_utype_vector_field@@Base+0x168>
   3f174:	ldr	r0, [sp, #8]
   3f178:	mvn	r1, #0
   3f17c:	add	r1, r0, r1
   3f180:	str	r1, [sp, #8]
   3f184:	cmp	r0, #0
   3f188:	beq	3f21c <flatcc_json_printer_utype_vector_field@@Base+0x210>
   3f18c:	ldr	r0, [fp, #-4]
   3f190:	ldr	r1, [r0, #20]
   3f194:	add	r2, r1, #1
   3f198:	str	r2, [r0, #20]
   3f19c:	movw	r0, #44	; 0x2c
   3f1a0:	strb	r0, [r1]
   3f1a4:	ldr	r0, [fp, #-4]
   3f1a8:	ldrsb	r0, [r0, #25]
   3f1ac:	cmp	r0, #0
   3f1b0:	beq	3f1d8 <flatcc_json_printer_utype_vector_field@@Base+0x1cc>
   3f1b4:	ldr	r0, [fp, #-4]
   3f1b8:	ldr	r1, [r0, #20]
   3f1bc:	add	r2, r1, #1
   3f1c0:	str	r2, [r0, #20]
   3f1c4:	movw	r0, #10
   3f1c8:	strb	r0, [r1]
   3f1cc:	ldr	r0, [fp, #-4]
   3f1d0:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3f1d4:	b	3f1e0 <flatcc_json_printer_utype_vector_field@@Base+0x1d4>
   3f1d8:	ldr	r0, [fp, #-4]
   3f1dc:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3f1e0:	b	3f1e4 <flatcc_json_printer_utype_vector_field@@Base+0x1d8>
   3f1e4:	ldr	r0, [sp, #12]
   3f1e8:	bl	3f2ac <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   3f1ec:	ldr	r1, [fp, #-4]
   3f1f0:	ldr	r1, [r1, #20]
   3f1f4:	and	r0, r0, #255	; 0xff
   3f1f8:	bl	3a608 <flatcc_json_printer_uint8@@Base+0x40>
   3f1fc:	ldr	r1, [fp, #-4]
   3f200:	ldr	r2, [r1, #20]
   3f204:	add	r0, r2, r0
   3f208:	str	r0, [r1, #20]
   3f20c:	ldr	r0, [sp, #12]
   3f210:	add	r0, r0, #1
   3f214:	str	r0, [sp, #12]
   3f218:	b	3f174 <flatcc_json_printer_utype_vector_field@@Base+0x168>
   3f21c:	b	3f220 <flatcc_json_printer_utype_vector_field@@Base+0x214>
   3f220:	ldr	r0, [fp, #-4]
   3f224:	ldrsb	r0, [r0, #25]
   3f228:	cmp	r0, #0
   3f22c:	beq	3f264 <flatcc_json_printer_utype_vector_field@@Base+0x258>
   3f230:	ldr	r0, [fp, #-4]
   3f234:	ldr	r1, [r0, #20]
   3f238:	add	r2, r1, #1
   3f23c:	str	r2, [r0, #20]
   3f240:	movw	r0, #10
   3f244:	strb	r0, [r1]
   3f248:	ldr	r0, [fp, #-4]
   3f24c:	ldr	r1, [r0, #32]
   3f250:	mvn	r2, #0
   3f254:	add	r1, r1, r2
   3f258:	str	r1, [r0, #32]
   3f25c:	ldr	r0, [fp, #-4]
   3f260:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3f264:	ldr	r0, [fp, #-4]
   3f268:	ldr	r1, [r0, #20]
   3f26c:	add	r2, r1, #1
   3f270:	str	r2, [r0, #20]
   3f274:	movw	r0, #93	; 0x5d
   3f278:	strb	r0, [r1]
   3f27c:	b	3f280 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   3f280:	mov	sp, fp
   3f284:	pop	{fp, pc}
   3f288:	push	{fp, lr}
   3f28c:	mov	fp, sp
   3f290:	sub	sp, sp, #8
   3f294:	str	r0, [sp, #4]
   3f298:	ldr	r0, [sp, #4]
   3f29c:	ldr	r0, [r0]
   3f2a0:	bl	469ac <flatcc_json_printer_clear@@Base+0x1c68>
   3f2a4:	mov	sp, fp
   3f2a8:	pop	{fp, pc}
   3f2ac:	push	{fp, lr}
   3f2b0:	mov	fp, sp
   3f2b4:	sub	sp, sp, #8
   3f2b8:	str	r0, [sp, #4]
   3f2bc:	ldr	r0, [sp, #4]
   3f2c0:	ldrb	r0, [r0]
   3f2c4:	bl	469c0 <flatcc_json_printer_clear@@Base+0x1c7c>
   3f2c8:	and	r0, r0, #255	; 0xff
   3f2cc:	mov	sp, fp
   3f2d0:	pop	{fp, pc}

0003f2d4 <flatcc_json_printer_uint8_vector_field@@Base>:
   3f2d4:	push	{fp, lr}
   3f2d8:	mov	fp, sp
   3f2dc:	sub	sp, sp, #32
   3f2e0:	ldr	ip, [fp, #8]
   3f2e4:	str	r0, [fp, #-4]
   3f2e8:	str	r1, [fp, #-8]
   3f2ec:	str	r2, [fp, #-12]
   3f2f0:	str	r3, [sp, #16]
   3f2f4:	ldr	r0, [fp, #-8]
   3f2f8:	ldr	r1, [fp, #-12]
   3f2fc:	str	ip, [sp, #4]
   3f300:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3f304:	str	r0, [sp, #12]
   3f308:	ldr	r0, [sp, #12]
   3f30c:	movw	r1, #0
   3f310:	cmp	r0, r1
   3f314:	beq	3f548 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   3f318:	ldr	r0, [fp, #-8]
   3f31c:	ldr	r1, [r0, #16]
   3f320:	add	r2, r1, #1
   3f324:	str	r2, [r0, #16]
   3f328:	cmp	r1, #0
   3f32c:	beq	3f348 <flatcc_json_printer_uint8_vector_field@@Base+0x74>
   3f330:	ldr	r0, [fp, #-4]
   3f334:	ldr	r1, [r0, #20]
   3f338:	add	r2, r1, #1
   3f33c:	str	r2, [r0, #20]
   3f340:	movw	r0, #44	; 0x2c
   3f344:	strb	r0, [r1]
   3f348:	ldr	r0, [sp, #12]
   3f34c:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   3f350:	str	r0, [sp, #12]
   3f354:	ldr	r0, [sp, #12]
   3f358:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3f35c:	str	r0, [sp, #8]
   3f360:	ldr	r0, [sp, #12]
   3f364:	add	r0, r0, #4
   3f368:	str	r0, [sp, #12]
   3f36c:	ldr	r0, [fp, #-4]
   3f370:	ldr	r1, [sp, #16]
   3f374:	ldr	r2, [fp, #8]
   3f378:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3f37c:	ldr	r0, [fp, #-4]
   3f380:	ldr	r1, [r0, #32]
   3f384:	add	r1, r1, #1
   3f388:	str	r1, [r0, #32]
   3f38c:	ldr	r0, [fp, #-4]
   3f390:	ldr	r1, [r0, #20]
   3f394:	add	r2, r1, #1
   3f398:	str	r2, [r0, #20]
   3f39c:	movw	r0, #91	; 0x5b
   3f3a0:	strb	r0, [r1]
   3f3a4:	ldr	r0, [sp, #8]
   3f3a8:	cmp	r0, #0
   3f3ac:	beq	3f438 <flatcc_json_printer_uint8_vector_field@@Base+0x164>
   3f3b0:	b	3f3b4 <flatcc_json_printer_uint8_vector_field@@Base+0xe0>
   3f3b4:	ldr	r0, [fp, #-4]
   3f3b8:	ldrsb	r0, [r0, #25]
   3f3bc:	cmp	r0, #0
   3f3c0:	beq	3f3e8 <flatcc_json_printer_uint8_vector_field@@Base+0x114>
   3f3c4:	ldr	r0, [fp, #-4]
   3f3c8:	ldr	r1, [r0, #20]
   3f3cc:	add	r2, r1, #1
   3f3d0:	str	r2, [r0, #20]
   3f3d4:	movw	r0, #10
   3f3d8:	strb	r0, [r1]
   3f3dc:	ldr	r0, [fp, #-4]
   3f3e0:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3f3e4:	b	3f3f0 <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   3f3e8:	ldr	r0, [fp, #-4]
   3f3ec:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3f3f0:	b	3f3f4 <flatcc_json_printer_uint8_vector_field@@Base+0x120>
   3f3f4:	ldr	r0, [sp, #12]
   3f3f8:	bl	3c8ec <flatcc_json_printer_uint8_field@@Base+0x108>
   3f3fc:	ldr	r1, [fp, #-4]
   3f400:	ldr	r1, [r1, #20]
   3f404:	and	r0, r0, #255	; 0xff
   3f408:	bl	3a608 <flatcc_json_printer_uint8@@Base+0x40>
   3f40c:	ldr	r1, [fp, #-4]
   3f410:	ldr	r2, [r1, #20]
   3f414:	add	r0, r2, r0
   3f418:	str	r0, [r1, #20]
   3f41c:	ldr	r0, [sp, #12]
   3f420:	add	r0, r0, #1
   3f424:	str	r0, [sp, #12]
   3f428:	ldr	r0, [sp, #8]
   3f42c:	mvn	r1, #0
   3f430:	add	r0, r0, r1
   3f434:	str	r0, [sp, #8]
   3f438:	b	3f43c <flatcc_json_printer_uint8_vector_field@@Base+0x168>
   3f43c:	ldr	r0, [sp, #8]
   3f440:	mvn	r1, #0
   3f444:	add	r1, r0, r1
   3f448:	str	r1, [sp, #8]
   3f44c:	cmp	r0, #0
   3f450:	beq	3f4e4 <flatcc_json_printer_uint8_vector_field@@Base+0x210>
   3f454:	ldr	r0, [fp, #-4]
   3f458:	ldr	r1, [r0, #20]
   3f45c:	add	r2, r1, #1
   3f460:	str	r2, [r0, #20]
   3f464:	movw	r0, #44	; 0x2c
   3f468:	strb	r0, [r1]
   3f46c:	ldr	r0, [fp, #-4]
   3f470:	ldrsb	r0, [r0, #25]
   3f474:	cmp	r0, #0
   3f478:	beq	3f4a0 <flatcc_json_printer_uint8_vector_field@@Base+0x1cc>
   3f47c:	ldr	r0, [fp, #-4]
   3f480:	ldr	r1, [r0, #20]
   3f484:	add	r2, r1, #1
   3f488:	str	r2, [r0, #20]
   3f48c:	movw	r0, #10
   3f490:	strb	r0, [r1]
   3f494:	ldr	r0, [fp, #-4]
   3f498:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3f49c:	b	3f4a8 <flatcc_json_printer_uint8_vector_field@@Base+0x1d4>
   3f4a0:	ldr	r0, [fp, #-4]
   3f4a4:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3f4a8:	b	3f4ac <flatcc_json_printer_uint8_vector_field@@Base+0x1d8>
   3f4ac:	ldr	r0, [sp, #12]
   3f4b0:	bl	3c8ec <flatcc_json_printer_uint8_field@@Base+0x108>
   3f4b4:	ldr	r1, [fp, #-4]
   3f4b8:	ldr	r1, [r1, #20]
   3f4bc:	and	r0, r0, #255	; 0xff
   3f4c0:	bl	3a608 <flatcc_json_printer_uint8@@Base+0x40>
   3f4c4:	ldr	r1, [fp, #-4]
   3f4c8:	ldr	r2, [r1, #20]
   3f4cc:	add	r0, r2, r0
   3f4d0:	str	r0, [r1, #20]
   3f4d4:	ldr	r0, [sp, #12]
   3f4d8:	add	r0, r0, #1
   3f4dc:	str	r0, [sp, #12]
   3f4e0:	b	3f43c <flatcc_json_printer_uint8_vector_field@@Base+0x168>
   3f4e4:	b	3f4e8 <flatcc_json_printer_uint8_vector_field@@Base+0x214>
   3f4e8:	ldr	r0, [fp, #-4]
   3f4ec:	ldrsb	r0, [r0, #25]
   3f4f0:	cmp	r0, #0
   3f4f4:	beq	3f52c <flatcc_json_printer_uint8_vector_field@@Base+0x258>
   3f4f8:	ldr	r0, [fp, #-4]
   3f4fc:	ldr	r1, [r0, #20]
   3f500:	add	r2, r1, #1
   3f504:	str	r2, [r0, #20]
   3f508:	movw	r0, #10
   3f50c:	strb	r0, [r1]
   3f510:	ldr	r0, [fp, #-4]
   3f514:	ldr	r1, [r0, #32]
   3f518:	mvn	r2, #0
   3f51c:	add	r1, r1, r2
   3f520:	str	r1, [r0, #32]
   3f524:	ldr	r0, [fp, #-4]
   3f528:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3f52c:	ldr	r0, [fp, #-4]
   3f530:	ldr	r1, [r0, #20]
   3f534:	add	r2, r1, #1
   3f538:	str	r2, [r0, #20]
   3f53c:	movw	r0, #93	; 0x5d
   3f540:	strb	r0, [r1]
   3f544:	b	3f548 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   3f548:	mov	sp, fp
   3f54c:	pop	{fp, pc}

0003f550 <flatcc_json_printer_uint16_vector_field@@Base>:
   3f550:	push	{fp, lr}
   3f554:	mov	fp, sp
   3f558:	sub	sp, sp, #32
   3f55c:	ldr	ip, [fp, #8]
   3f560:	str	r0, [fp, #-4]
   3f564:	str	r1, [fp, #-8]
   3f568:	str	r2, [fp, #-12]
   3f56c:	str	r3, [sp, #16]
   3f570:	ldr	r0, [fp, #-8]
   3f574:	ldr	r1, [fp, #-12]
   3f578:	str	ip, [sp, #4]
   3f57c:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3f580:	str	r0, [sp, #12]
   3f584:	ldr	r0, [sp, #12]
   3f588:	movw	r1, #0
   3f58c:	cmp	r0, r1
   3f590:	beq	3f7c4 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   3f594:	ldr	r0, [fp, #-8]
   3f598:	ldr	r1, [r0, #16]
   3f59c:	add	r2, r1, #1
   3f5a0:	str	r2, [r0, #16]
   3f5a4:	cmp	r1, #0
   3f5a8:	beq	3f5c4 <flatcc_json_printer_uint16_vector_field@@Base+0x74>
   3f5ac:	ldr	r0, [fp, #-4]
   3f5b0:	ldr	r1, [r0, #20]
   3f5b4:	add	r2, r1, #1
   3f5b8:	str	r2, [r0, #20]
   3f5bc:	movw	r0, #44	; 0x2c
   3f5c0:	strb	r0, [r1]
   3f5c4:	ldr	r0, [sp, #12]
   3f5c8:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   3f5cc:	str	r0, [sp, #12]
   3f5d0:	ldr	r0, [sp, #12]
   3f5d4:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3f5d8:	str	r0, [sp, #8]
   3f5dc:	ldr	r0, [sp, #12]
   3f5e0:	add	r0, r0, #4
   3f5e4:	str	r0, [sp, #12]
   3f5e8:	ldr	r0, [fp, #-4]
   3f5ec:	ldr	r1, [sp, #16]
   3f5f0:	ldr	r2, [fp, #8]
   3f5f4:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3f5f8:	ldr	r0, [fp, #-4]
   3f5fc:	ldr	r1, [r0, #32]
   3f600:	add	r1, r1, #1
   3f604:	str	r1, [r0, #32]
   3f608:	ldr	r0, [fp, #-4]
   3f60c:	ldr	r1, [r0, #20]
   3f610:	add	r2, r1, #1
   3f614:	str	r2, [r0, #20]
   3f618:	movw	r0, #91	; 0x5b
   3f61c:	strb	r0, [r1]
   3f620:	ldr	r0, [sp, #8]
   3f624:	cmp	r0, #0
   3f628:	beq	3f6b4 <flatcc_json_printer_uint16_vector_field@@Base+0x164>
   3f62c:	b	3f630 <flatcc_json_printer_uint16_vector_field@@Base+0xe0>
   3f630:	ldr	r0, [fp, #-4]
   3f634:	ldrsb	r0, [r0, #25]
   3f638:	cmp	r0, #0
   3f63c:	beq	3f664 <flatcc_json_printer_uint16_vector_field@@Base+0x114>
   3f640:	ldr	r0, [fp, #-4]
   3f644:	ldr	r1, [r0, #20]
   3f648:	add	r2, r1, #1
   3f64c:	str	r2, [r0, #20]
   3f650:	movw	r0, #10
   3f654:	strb	r0, [r1]
   3f658:	ldr	r0, [fp, #-4]
   3f65c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3f660:	b	3f66c <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   3f664:	ldr	r0, [fp, #-4]
   3f668:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3f66c:	b	3f670 <flatcc_json_printer_uint16_vector_field@@Base+0x120>
   3f670:	ldr	r0, [sp, #12]
   3f674:	bl	3ca1c <flatcc_json_printer_uint16_field@@Base+0x108>
   3f678:	ldr	r1, [fp, #-4]
   3f67c:	ldr	r1, [r1, #20]
   3f680:	uxth	r0, r0
   3f684:	bl	3a7dc <flatcc_json_printer_uint16@@Base+0x40>
   3f688:	ldr	r1, [fp, #-4]
   3f68c:	ldr	r2, [r1, #20]
   3f690:	add	r0, r2, r0
   3f694:	str	r0, [r1, #20]
   3f698:	ldr	r0, [sp, #12]
   3f69c:	add	r0, r0, #2
   3f6a0:	str	r0, [sp, #12]
   3f6a4:	ldr	r0, [sp, #8]
   3f6a8:	mvn	r1, #0
   3f6ac:	add	r0, r0, r1
   3f6b0:	str	r0, [sp, #8]
   3f6b4:	b	3f6b8 <flatcc_json_printer_uint16_vector_field@@Base+0x168>
   3f6b8:	ldr	r0, [sp, #8]
   3f6bc:	mvn	r1, #0
   3f6c0:	add	r1, r0, r1
   3f6c4:	str	r1, [sp, #8]
   3f6c8:	cmp	r0, #0
   3f6cc:	beq	3f760 <flatcc_json_printer_uint16_vector_field@@Base+0x210>
   3f6d0:	ldr	r0, [fp, #-4]
   3f6d4:	ldr	r1, [r0, #20]
   3f6d8:	add	r2, r1, #1
   3f6dc:	str	r2, [r0, #20]
   3f6e0:	movw	r0, #44	; 0x2c
   3f6e4:	strb	r0, [r1]
   3f6e8:	ldr	r0, [fp, #-4]
   3f6ec:	ldrsb	r0, [r0, #25]
   3f6f0:	cmp	r0, #0
   3f6f4:	beq	3f71c <flatcc_json_printer_uint16_vector_field@@Base+0x1cc>
   3f6f8:	ldr	r0, [fp, #-4]
   3f6fc:	ldr	r1, [r0, #20]
   3f700:	add	r2, r1, #1
   3f704:	str	r2, [r0, #20]
   3f708:	movw	r0, #10
   3f70c:	strb	r0, [r1]
   3f710:	ldr	r0, [fp, #-4]
   3f714:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3f718:	b	3f724 <flatcc_json_printer_uint16_vector_field@@Base+0x1d4>
   3f71c:	ldr	r0, [fp, #-4]
   3f720:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3f724:	b	3f728 <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
   3f728:	ldr	r0, [sp, #12]
   3f72c:	bl	3ca1c <flatcc_json_printer_uint16_field@@Base+0x108>
   3f730:	ldr	r1, [fp, #-4]
   3f734:	ldr	r1, [r1, #20]
   3f738:	uxth	r0, r0
   3f73c:	bl	3a7dc <flatcc_json_printer_uint16@@Base+0x40>
   3f740:	ldr	r1, [fp, #-4]
   3f744:	ldr	r2, [r1, #20]
   3f748:	add	r0, r2, r0
   3f74c:	str	r0, [r1, #20]
   3f750:	ldr	r0, [sp, #12]
   3f754:	add	r0, r0, #2
   3f758:	str	r0, [sp, #12]
   3f75c:	b	3f6b8 <flatcc_json_printer_uint16_vector_field@@Base+0x168>
   3f760:	b	3f764 <flatcc_json_printer_uint16_vector_field@@Base+0x214>
   3f764:	ldr	r0, [fp, #-4]
   3f768:	ldrsb	r0, [r0, #25]
   3f76c:	cmp	r0, #0
   3f770:	beq	3f7a8 <flatcc_json_printer_uint16_vector_field@@Base+0x258>
   3f774:	ldr	r0, [fp, #-4]
   3f778:	ldr	r1, [r0, #20]
   3f77c:	add	r2, r1, #1
   3f780:	str	r2, [r0, #20]
   3f784:	movw	r0, #10
   3f788:	strb	r0, [r1]
   3f78c:	ldr	r0, [fp, #-4]
   3f790:	ldr	r1, [r0, #32]
   3f794:	mvn	r2, #0
   3f798:	add	r1, r1, r2
   3f79c:	str	r1, [r0, #32]
   3f7a0:	ldr	r0, [fp, #-4]
   3f7a4:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3f7a8:	ldr	r0, [fp, #-4]
   3f7ac:	ldr	r1, [r0, #20]
   3f7b0:	add	r2, r1, #1
   3f7b4:	str	r2, [r0, #20]
   3f7b8:	movw	r0, #93	; 0x5d
   3f7bc:	strb	r0, [r1]
   3f7c0:	b	3f7c4 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   3f7c4:	mov	sp, fp
   3f7c8:	pop	{fp, pc}

0003f7cc <flatcc_json_printer_uint32_vector_field@@Base>:
   3f7cc:	push	{fp, lr}
   3f7d0:	mov	fp, sp
   3f7d4:	sub	sp, sp, #32
   3f7d8:	ldr	ip, [fp, #8]
   3f7dc:	str	r0, [fp, #-4]
   3f7e0:	str	r1, [fp, #-8]
   3f7e4:	str	r2, [fp, #-12]
   3f7e8:	str	r3, [sp, #16]
   3f7ec:	ldr	r0, [fp, #-8]
   3f7f0:	ldr	r1, [fp, #-12]
   3f7f4:	str	ip, [sp, #4]
   3f7f8:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3f7fc:	str	r0, [sp, #12]
   3f800:	ldr	r0, [sp, #12]
   3f804:	movw	r1, #0
   3f808:	cmp	r0, r1
   3f80c:	beq	3fa38 <flatcc_json_printer_uint32_vector_field@@Base+0x26c>
   3f810:	ldr	r0, [fp, #-8]
   3f814:	ldr	r1, [r0, #16]
   3f818:	add	r2, r1, #1
   3f81c:	str	r2, [r0, #16]
   3f820:	cmp	r1, #0
   3f824:	beq	3f840 <flatcc_json_printer_uint32_vector_field@@Base+0x74>
   3f828:	ldr	r0, [fp, #-4]
   3f82c:	ldr	r1, [r0, #20]
   3f830:	add	r2, r1, #1
   3f834:	str	r2, [r0, #20]
   3f838:	movw	r0, #44	; 0x2c
   3f83c:	strb	r0, [r1]
   3f840:	ldr	r0, [sp, #12]
   3f844:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   3f848:	str	r0, [sp, #12]
   3f84c:	ldr	r0, [sp, #12]
   3f850:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3f854:	str	r0, [sp, #8]
   3f858:	ldr	r0, [sp, #12]
   3f85c:	add	r0, r0, #4
   3f860:	str	r0, [sp, #12]
   3f864:	ldr	r0, [fp, #-4]
   3f868:	ldr	r1, [sp, #16]
   3f86c:	ldr	r2, [fp, #8]
   3f870:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3f874:	ldr	r0, [fp, #-4]
   3f878:	ldr	r1, [r0, #32]
   3f87c:	add	r1, r1, #1
   3f880:	str	r1, [r0, #32]
   3f884:	ldr	r0, [fp, #-4]
   3f888:	ldr	r1, [r0, #20]
   3f88c:	add	r2, r1, #1
   3f890:	str	r2, [r0, #20]
   3f894:	movw	r0, #91	; 0x5b
   3f898:	strb	r0, [r1]
   3f89c:	ldr	r0, [sp, #8]
   3f8a0:	cmp	r0, #0
   3f8a4:	beq	3f92c <flatcc_json_printer_uint32_vector_field@@Base+0x160>
   3f8a8:	b	3f8ac <flatcc_json_printer_uint32_vector_field@@Base+0xe0>
   3f8ac:	ldr	r0, [fp, #-4]
   3f8b0:	ldrsb	r0, [r0, #25]
   3f8b4:	cmp	r0, #0
   3f8b8:	beq	3f8e0 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
   3f8bc:	ldr	r0, [fp, #-4]
   3f8c0:	ldr	r1, [r0, #20]
   3f8c4:	add	r2, r1, #1
   3f8c8:	str	r2, [r0, #20]
   3f8cc:	movw	r0, #10
   3f8d0:	strb	r0, [r1]
   3f8d4:	ldr	r0, [fp, #-4]
   3f8d8:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3f8dc:	b	3f8e8 <flatcc_json_printer_uint32_vector_field@@Base+0x11c>
   3f8e0:	ldr	r0, [fp, #-4]
   3f8e4:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3f8e8:	b	3f8ec <flatcc_json_printer_uint32_vector_field@@Base+0x120>
   3f8ec:	ldr	r0, [sp, #12]
   3f8f0:	bl	3cb48 <flatcc_json_printer_uint32_field@@Base+0x104>
   3f8f4:	ldr	r1, [fp, #-4]
   3f8f8:	ldr	r1, [r1, #20]
   3f8fc:	bl	3ab10 <flatcc_json_printer_uint32@@Base+0x3c>
   3f900:	ldr	r1, [fp, #-4]
   3f904:	ldr	r2, [r1, #20]
   3f908:	add	r0, r2, r0
   3f90c:	str	r0, [r1, #20]
   3f910:	ldr	r0, [sp, #12]
   3f914:	add	r0, r0, #4
   3f918:	str	r0, [sp, #12]
   3f91c:	ldr	r0, [sp, #8]
   3f920:	mvn	r1, #0
   3f924:	add	r0, r0, r1
   3f928:	str	r0, [sp, #8]
   3f92c:	b	3f930 <flatcc_json_printer_uint32_vector_field@@Base+0x164>
   3f930:	ldr	r0, [sp, #8]
   3f934:	mvn	r1, #0
   3f938:	add	r1, r0, r1
   3f93c:	str	r1, [sp, #8]
   3f940:	cmp	r0, #0
   3f944:	beq	3f9d4 <flatcc_json_printer_uint32_vector_field@@Base+0x208>
   3f948:	ldr	r0, [fp, #-4]
   3f94c:	ldr	r1, [r0, #20]
   3f950:	add	r2, r1, #1
   3f954:	str	r2, [r0, #20]
   3f958:	movw	r0, #44	; 0x2c
   3f95c:	strb	r0, [r1]
   3f960:	ldr	r0, [fp, #-4]
   3f964:	ldrsb	r0, [r0, #25]
   3f968:	cmp	r0, #0
   3f96c:	beq	3f994 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   3f970:	ldr	r0, [fp, #-4]
   3f974:	ldr	r1, [r0, #20]
   3f978:	add	r2, r1, #1
   3f97c:	str	r2, [r0, #20]
   3f980:	movw	r0, #10
   3f984:	strb	r0, [r1]
   3f988:	ldr	r0, [fp, #-4]
   3f98c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3f990:	b	3f99c <flatcc_json_printer_uint32_vector_field@@Base+0x1d0>
   3f994:	ldr	r0, [fp, #-4]
   3f998:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3f99c:	b	3f9a0 <flatcc_json_printer_uint32_vector_field@@Base+0x1d4>
   3f9a0:	ldr	r0, [sp, #12]
   3f9a4:	bl	3cb48 <flatcc_json_printer_uint32_field@@Base+0x104>
   3f9a8:	ldr	r1, [fp, #-4]
   3f9ac:	ldr	r1, [r1, #20]
   3f9b0:	bl	3ab10 <flatcc_json_printer_uint32@@Base+0x3c>
   3f9b4:	ldr	r1, [fp, #-4]
   3f9b8:	ldr	r2, [r1, #20]
   3f9bc:	add	r0, r2, r0
   3f9c0:	str	r0, [r1, #20]
   3f9c4:	ldr	r0, [sp, #12]
   3f9c8:	add	r0, r0, #4
   3f9cc:	str	r0, [sp, #12]
   3f9d0:	b	3f930 <flatcc_json_printer_uint32_vector_field@@Base+0x164>
   3f9d4:	b	3f9d8 <flatcc_json_printer_uint32_vector_field@@Base+0x20c>
   3f9d8:	ldr	r0, [fp, #-4]
   3f9dc:	ldrsb	r0, [r0, #25]
   3f9e0:	cmp	r0, #0
   3f9e4:	beq	3fa1c <flatcc_json_printer_uint32_vector_field@@Base+0x250>
   3f9e8:	ldr	r0, [fp, #-4]
   3f9ec:	ldr	r1, [r0, #20]
   3f9f0:	add	r2, r1, #1
   3f9f4:	str	r2, [r0, #20]
   3f9f8:	movw	r0, #10
   3f9fc:	strb	r0, [r1]
   3fa00:	ldr	r0, [fp, #-4]
   3fa04:	ldr	r1, [r0, #32]
   3fa08:	mvn	r2, #0
   3fa0c:	add	r1, r1, r2
   3fa10:	str	r1, [r0, #32]
   3fa14:	ldr	r0, [fp, #-4]
   3fa18:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3fa1c:	ldr	r0, [fp, #-4]
   3fa20:	ldr	r1, [r0, #20]
   3fa24:	add	r2, r1, #1
   3fa28:	str	r2, [r0, #20]
   3fa2c:	movw	r0, #93	; 0x5d
   3fa30:	strb	r0, [r1]
   3fa34:	b	3fa38 <flatcc_json_printer_uint32_vector_field@@Base+0x26c>
   3fa38:	mov	sp, fp
   3fa3c:	pop	{fp, pc}

0003fa40 <flatcc_json_printer_uint64_vector_field@@Base>:
   3fa40:	push	{fp, lr}
   3fa44:	mov	fp, sp
   3fa48:	sub	sp, sp, #32
   3fa4c:	ldr	ip, [fp, #8]
   3fa50:	str	r0, [fp, #-4]
   3fa54:	str	r1, [fp, #-8]
   3fa58:	str	r2, [fp, #-12]
   3fa5c:	str	r3, [sp, #16]
   3fa60:	ldr	r0, [fp, #-8]
   3fa64:	ldr	r1, [fp, #-12]
   3fa68:	str	ip, [sp, #4]
   3fa6c:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3fa70:	str	r0, [sp, #12]
   3fa74:	ldr	r0, [sp, #12]
   3fa78:	movw	r1, #0
   3fa7c:	cmp	r0, r1
   3fa80:	beq	3fcac <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   3fa84:	ldr	r0, [fp, #-8]
   3fa88:	ldr	r1, [r0, #16]
   3fa8c:	add	r2, r1, #1
   3fa90:	str	r2, [r0, #16]
   3fa94:	cmp	r1, #0
   3fa98:	beq	3fab4 <flatcc_json_printer_uint64_vector_field@@Base+0x74>
   3fa9c:	ldr	r0, [fp, #-4]
   3faa0:	ldr	r1, [r0, #20]
   3faa4:	add	r2, r1, #1
   3faa8:	str	r2, [r0, #20]
   3faac:	movw	r0, #44	; 0x2c
   3fab0:	strb	r0, [r1]
   3fab4:	ldr	r0, [sp, #12]
   3fab8:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   3fabc:	str	r0, [sp, #12]
   3fac0:	ldr	r0, [sp, #12]
   3fac4:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3fac8:	str	r0, [sp, #8]
   3facc:	ldr	r0, [sp, #12]
   3fad0:	add	r0, r0, #4
   3fad4:	str	r0, [sp, #12]
   3fad8:	ldr	r0, [fp, #-4]
   3fadc:	ldr	r1, [sp, #16]
   3fae0:	ldr	r2, [fp, #8]
   3fae4:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3fae8:	ldr	r0, [fp, #-4]
   3faec:	ldr	r1, [r0, #32]
   3faf0:	add	r1, r1, #1
   3faf4:	str	r1, [r0, #32]
   3faf8:	ldr	r0, [fp, #-4]
   3fafc:	ldr	r1, [r0, #20]
   3fb00:	add	r2, r1, #1
   3fb04:	str	r2, [r0, #20]
   3fb08:	movw	r0, #91	; 0x5b
   3fb0c:	strb	r0, [r1]
   3fb10:	ldr	r0, [sp, #8]
   3fb14:	cmp	r0, #0
   3fb18:	beq	3fba0 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
   3fb1c:	b	3fb20 <flatcc_json_printer_uint64_vector_field@@Base+0xe0>
   3fb20:	ldr	r0, [fp, #-4]
   3fb24:	ldrsb	r0, [r0, #25]
   3fb28:	cmp	r0, #0
   3fb2c:	beq	3fb54 <flatcc_json_printer_uint64_vector_field@@Base+0x114>
   3fb30:	ldr	r0, [fp, #-4]
   3fb34:	ldr	r1, [r0, #20]
   3fb38:	add	r2, r1, #1
   3fb3c:	str	r2, [r0, #20]
   3fb40:	movw	r0, #10
   3fb44:	strb	r0, [r1]
   3fb48:	ldr	r0, [fp, #-4]
   3fb4c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3fb50:	b	3fb5c <flatcc_json_printer_uint64_vector_field@@Base+0x11c>
   3fb54:	ldr	r0, [fp, #-4]
   3fb58:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3fb5c:	b	3fb60 <flatcc_json_printer_uint64_vector_field@@Base+0x120>
   3fb60:	ldr	r0, [sp, #12]
   3fb64:	bl	3cca0 <flatcc_json_printer_uint64_field@@Base+0x134>
   3fb68:	ldr	r2, [fp, #-4]
   3fb6c:	ldr	r2, [r2, #20]
   3fb70:	bl	3b160 <flatcc_json_printer_uint64@@Base+0x44>
   3fb74:	ldr	r1, [fp, #-4]
   3fb78:	ldr	r2, [r1, #20]
   3fb7c:	add	r0, r2, r0
   3fb80:	str	r0, [r1, #20]
   3fb84:	ldr	r0, [sp, #12]
   3fb88:	add	r0, r0, #8
   3fb8c:	str	r0, [sp, #12]
   3fb90:	ldr	r0, [sp, #8]
   3fb94:	mvn	r1, #0
   3fb98:	add	r0, r0, r1
   3fb9c:	str	r0, [sp, #8]
   3fba0:	b	3fba4 <flatcc_json_printer_uint64_vector_field@@Base+0x164>
   3fba4:	ldr	r0, [sp, #8]
   3fba8:	mvn	r1, #0
   3fbac:	add	r1, r0, r1
   3fbb0:	str	r1, [sp, #8]
   3fbb4:	cmp	r0, #0
   3fbb8:	beq	3fc48 <flatcc_json_printer_uint64_vector_field@@Base+0x208>
   3fbbc:	ldr	r0, [fp, #-4]
   3fbc0:	ldr	r1, [r0, #20]
   3fbc4:	add	r2, r1, #1
   3fbc8:	str	r2, [r0, #20]
   3fbcc:	movw	r0, #44	; 0x2c
   3fbd0:	strb	r0, [r1]
   3fbd4:	ldr	r0, [fp, #-4]
   3fbd8:	ldrsb	r0, [r0, #25]
   3fbdc:	cmp	r0, #0
   3fbe0:	beq	3fc08 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   3fbe4:	ldr	r0, [fp, #-4]
   3fbe8:	ldr	r1, [r0, #20]
   3fbec:	add	r2, r1, #1
   3fbf0:	str	r2, [r0, #20]
   3fbf4:	movw	r0, #10
   3fbf8:	strb	r0, [r1]
   3fbfc:	ldr	r0, [fp, #-4]
   3fc00:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3fc04:	b	3fc10 <flatcc_json_printer_uint64_vector_field@@Base+0x1d0>
   3fc08:	ldr	r0, [fp, #-4]
   3fc0c:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3fc10:	b	3fc14 <flatcc_json_printer_uint64_vector_field@@Base+0x1d4>
   3fc14:	ldr	r0, [sp, #12]
   3fc18:	bl	3cca0 <flatcc_json_printer_uint64_field@@Base+0x134>
   3fc1c:	ldr	r2, [fp, #-4]
   3fc20:	ldr	r2, [r2, #20]
   3fc24:	bl	3b160 <flatcc_json_printer_uint64@@Base+0x44>
   3fc28:	ldr	r1, [fp, #-4]
   3fc2c:	ldr	r2, [r1, #20]
   3fc30:	add	r0, r2, r0
   3fc34:	str	r0, [r1, #20]
   3fc38:	ldr	r0, [sp, #12]
   3fc3c:	add	r0, r0, #8
   3fc40:	str	r0, [sp, #12]
   3fc44:	b	3fba4 <flatcc_json_printer_uint64_vector_field@@Base+0x164>
   3fc48:	b	3fc4c <flatcc_json_printer_uint64_vector_field@@Base+0x20c>
   3fc4c:	ldr	r0, [fp, #-4]
   3fc50:	ldrsb	r0, [r0, #25]
   3fc54:	cmp	r0, #0
   3fc58:	beq	3fc90 <flatcc_json_printer_uint64_vector_field@@Base+0x250>
   3fc5c:	ldr	r0, [fp, #-4]
   3fc60:	ldr	r1, [r0, #20]
   3fc64:	add	r2, r1, #1
   3fc68:	str	r2, [r0, #20]
   3fc6c:	movw	r0, #10
   3fc70:	strb	r0, [r1]
   3fc74:	ldr	r0, [fp, #-4]
   3fc78:	ldr	r1, [r0, #32]
   3fc7c:	mvn	r2, #0
   3fc80:	add	r1, r1, r2
   3fc84:	str	r1, [r0, #32]
   3fc88:	ldr	r0, [fp, #-4]
   3fc8c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3fc90:	ldr	r0, [fp, #-4]
   3fc94:	ldr	r1, [r0, #20]
   3fc98:	add	r2, r1, #1
   3fc9c:	str	r2, [r0, #20]
   3fca0:	movw	r0, #93	; 0x5d
   3fca4:	strb	r0, [r1]
   3fca8:	b	3fcac <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   3fcac:	mov	sp, fp
   3fcb0:	pop	{fp, pc}

0003fcb4 <flatcc_json_printer_int8_vector_field@@Base>:
   3fcb4:	push	{fp, lr}
   3fcb8:	mov	fp, sp
   3fcbc:	sub	sp, sp, #32
   3fcc0:	ldr	ip, [fp, #8]
   3fcc4:	str	r0, [fp, #-4]
   3fcc8:	str	r1, [fp, #-8]
   3fccc:	str	r2, [fp, #-12]
   3fcd0:	str	r3, [sp, #16]
   3fcd4:	ldr	r0, [fp, #-8]
   3fcd8:	ldr	r1, [fp, #-12]
   3fcdc:	str	ip, [sp, #4]
   3fce0:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3fce4:	str	r0, [sp, #12]
   3fce8:	ldr	r0, [sp, #12]
   3fcec:	movw	r1, #0
   3fcf0:	cmp	r0, r1
   3fcf4:	beq	3ff28 <flatcc_json_printer_int8_vector_field@@Base+0x274>
   3fcf8:	ldr	r0, [fp, #-8]
   3fcfc:	ldr	r1, [r0, #16]
   3fd00:	add	r2, r1, #1
   3fd04:	str	r2, [r0, #16]
   3fd08:	cmp	r1, #0
   3fd0c:	beq	3fd28 <flatcc_json_printer_int8_vector_field@@Base+0x74>
   3fd10:	ldr	r0, [fp, #-4]
   3fd14:	ldr	r1, [r0, #20]
   3fd18:	add	r2, r1, #1
   3fd1c:	str	r2, [r0, #20]
   3fd20:	movw	r0, #44	; 0x2c
   3fd24:	strb	r0, [r1]
   3fd28:	ldr	r0, [sp, #12]
   3fd2c:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   3fd30:	str	r0, [sp, #12]
   3fd34:	ldr	r0, [sp, #12]
   3fd38:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3fd3c:	str	r0, [sp, #8]
   3fd40:	ldr	r0, [sp, #12]
   3fd44:	add	r0, r0, #4
   3fd48:	str	r0, [sp, #12]
   3fd4c:	ldr	r0, [fp, #-4]
   3fd50:	ldr	r1, [sp, #16]
   3fd54:	ldr	r2, [fp, #8]
   3fd58:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3fd5c:	ldr	r0, [fp, #-4]
   3fd60:	ldr	r1, [r0, #32]
   3fd64:	add	r1, r1, #1
   3fd68:	str	r1, [r0, #32]
   3fd6c:	ldr	r0, [fp, #-4]
   3fd70:	ldr	r1, [r0, #20]
   3fd74:	add	r2, r1, #1
   3fd78:	str	r2, [r0, #20]
   3fd7c:	movw	r0, #91	; 0x5b
   3fd80:	strb	r0, [r1]
   3fd84:	ldr	r0, [sp, #8]
   3fd88:	cmp	r0, #0
   3fd8c:	beq	3fe18 <flatcc_json_printer_int8_vector_field@@Base+0x164>
   3fd90:	b	3fd94 <flatcc_json_printer_int8_vector_field@@Base+0xe0>
   3fd94:	ldr	r0, [fp, #-4]
   3fd98:	ldrsb	r0, [r0, #25]
   3fd9c:	cmp	r0, #0
   3fda0:	beq	3fdc8 <flatcc_json_printer_int8_vector_field@@Base+0x114>
   3fda4:	ldr	r0, [fp, #-4]
   3fda8:	ldr	r1, [r0, #20]
   3fdac:	add	r2, r1, #1
   3fdb0:	str	r2, [r0, #20]
   3fdb4:	movw	r0, #10
   3fdb8:	strb	r0, [r1]
   3fdbc:	ldr	r0, [fp, #-4]
   3fdc0:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3fdc4:	b	3fdd0 <flatcc_json_printer_int8_vector_field@@Base+0x11c>
   3fdc8:	ldr	r0, [fp, #-4]
   3fdcc:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3fdd0:	b	3fdd4 <flatcc_json_printer_int8_vector_field@@Base+0x120>
   3fdd4:	ldr	r0, [sp, #12]
   3fdd8:	bl	3cddc <flatcc_json_printer_int8_field@@Base+0x108>
   3fddc:	ldr	r1, [fp, #-4]
   3fde0:	ldr	r1, [r1, #20]
   3fde4:	sxtb	r0, r0
   3fde8:	bl	3bd10 <flatcc_json_printer_int8@@Base+0x40>
   3fdec:	ldr	r1, [fp, #-4]
   3fdf0:	ldr	r2, [r1, #20]
   3fdf4:	add	r0, r2, r0
   3fdf8:	str	r0, [r1, #20]
   3fdfc:	ldr	r0, [sp, #12]
   3fe00:	add	r0, r0, #1
   3fe04:	str	r0, [sp, #12]
   3fe08:	ldr	r0, [sp, #8]
   3fe0c:	mvn	r1, #0
   3fe10:	add	r0, r0, r1
   3fe14:	str	r0, [sp, #8]
   3fe18:	b	3fe1c <flatcc_json_printer_int8_vector_field@@Base+0x168>
   3fe1c:	ldr	r0, [sp, #8]
   3fe20:	mvn	r1, #0
   3fe24:	add	r1, r0, r1
   3fe28:	str	r1, [sp, #8]
   3fe2c:	cmp	r0, #0
   3fe30:	beq	3fec4 <flatcc_json_printer_int8_vector_field@@Base+0x210>
   3fe34:	ldr	r0, [fp, #-4]
   3fe38:	ldr	r1, [r0, #20]
   3fe3c:	add	r2, r1, #1
   3fe40:	str	r2, [r0, #20]
   3fe44:	movw	r0, #44	; 0x2c
   3fe48:	strb	r0, [r1]
   3fe4c:	ldr	r0, [fp, #-4]
   3fe50:	ldrsb	r0, [r0, #25]
   3fe54:	cmp	r0, #0
   3fe58:	beq	3fe80 <flatcc_json_printer_int8_vector_field@@Base+0x1cc>
   3fe5c:	ldr	r0, [fp, #-4]
   3fe60:	ldr	r1, [r0, #20]
   3fe64:	add	r2, r1, #1
   3fe68:	str	r2, [r0, #20]
   3fe6c:	movw	r0, #10
   3fe70:	strb	r0, [r1]
   3fe74:	ldr	r0, [fp, #-4]
   3fe78:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3fe7c:	b	3fe88 <flatcc_json_printer_int8_vector_field@@Base+0x1d4>
   3fe80:	ldr	r0, [fp, #-4]
   3fe84:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   3fe88:	b	3fe8c <flatcc_json_printer_int8_vector_field@@Base+0x1d8>
   3fe8c:	ldr	r0, [sp, #12]
   3fe90:	bl	3cddc <flatcc_json_printer_int8_field@@Base+0x108>
   3fe94:	ldr	r1, [fp, #-4]
   3fe98:	ldr	r1, [r1, #20]
   3fe9c:	sxtb	r0, r0
   3fea0:	bl	3bd10 <flatcc_json_printer_int8@@Base+0x40>
   3fea4:	ldr	r1, [fp, #-4]
   3fea8:	ldr	r2, [r1, #20]
   3feac:	add	r0, r2, r0
   3feb0:	str	r0, [r1, #20]
   3feb4:	ldr	r0, [sp, #12]
   3feb8:	add	r0, r0, #1
   3febc:	str	r0, [sp, #12]
   3fec0:	b	3fe1c <flatcc_json_printer_int8_vector_field@@Base+0x168>
   3fec4:	b	3fec8 <flatcc_json_printer_int8_vector_field@@Base+0x214>
   3fec8:	ldr	r0, [fp, #-4]
   3fecc:	ldrsb	r0, [r0, #25]
   3fed0:	cmp	r0, #0
   3fed4:	beq	3ff0c <flatcc_json_printer_int8_vector_field@@Base+0x258>
   3fed8:	ldr	r0, [fp, #-4]
   3fedc:	ldr	r1, [r0, #20]
   3fee0:	add	r2, r1, #1
   3fee4:	str	r2, [r0, #20]
   3fee8:	movw	r0, #10
   3feec:	strb	r0, [r1]
   3fef0:	ldr	r0, [fp, #-4]
   3fef4:	ldr	r1, [r0, #32]
   3fef8:	mvn	r2, #0
   3fefc:	add	r1, r1, r2
   3ff00:	str	r1, [r0, #32]
   3ff04:	ldr	r0, [fp, #-4]
   3ff08:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   3ff0c:	ldr	r0, [fp, #-4]
   3ff10:	ldr	r1, [r0, #20]
   3ff14:	add	r2, r1, #1
   3ff18:	str	r2, [r0, #20]
   3ff1c:	movw	r0, #93	; 0x5d
   3ff20:	strb	r0, [r1]
   3ff24:	b	3ff28 <flatcc_json_printer_int8_vector_field@@Base+0x274>
   3ff28:	mov	sp, fp
   3ff2c:	pop	{fp, pc}

0003ff30 <flatcc_json_printer_int16_vector_field@@Base>:
   3ff30:	push	{fp, lr}
   3ff34:	mov	fp, sp
   3ff38:	sub	sp, sp, #32
   3ff3c:	ldr	ip, [fp, #8]
   3ff40:	str	r0, [fp, #-4]
   3ff44:	str	r1, [fp, #-8]
   3ff48:	str	r2, [fp, #-12]
   3ff4c:	str	r3, [sp, #16]
   3ff50:	ldr	r0, [fp, #-8]
   3ff54:	ldr	r1, [fp, #-12]
   3ff58:	str	ip, [sp, #4]
   3ff5c:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   3ff60:	str	r0, [sp, #12]
   3ff64:	ldr	r0, [sp, #12]
   3ff68:	movw	r1, #0
   3ff6c:	cmp	r0, r1
   3ff70:	beq	401a4 <flatcc_json_printer_int16_vector_field@@Base+0x274>
   3ff74:	ldr	r0, [fp, #-8]
   3ff78:	ldr	r1, [r0, #16]
   3ff7c:	add	r2, r1, #1
   3ff80:	str	r2, [r0, #16]
   3ff84:	cmp	r1, #0
   3ff88:	beq	3ffa4 <flatcc_json_printer_int16_vector_field@@Base+0x74>
   3ff8c:	ldr	r0, [fp, #-4]
   3ff90:	ldr	r1, [r0, #20]
   3ff94:	add	r2, r1, #1
   3ff98:	str	r2, [r0, #20]
   3ff9c:	movw	r0, #44	; 0x2c
   3ffa0:	strb	r0, [r1]
   3ffa4:	ldr	r0, [sp, #12]
   3ffa8:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   3ffac:	str	r0, [sp, #12]
   3ffb0:	ldr	r0, [sp, #12]
   3ffb4:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3ffb8:	str	r0, [sp, #8]
   3ffbc:	ldr	r0, [sp, #12]
   3ffc0:	add	r0, r0, #4
   3ffc4:	str	r0, [sp, #12]
   3ffc8:	ldr	r0, [fp, #-4]
   3ffcc:	ldr	r1, [sp, #16]
   3ffd0:	ldr	r2, [fp, #8]
   3ffd4:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   3ffd8:	ldr	r0, [fp, #-4]
   3ffdc:	ldr	r1, [r0, #32]
   3ffe0:	add	r1, r1, #1
   3ffe4:	str	r1, [r0, #32]
   3ffe8:	ldr	r0, [fp, #-4]
   3ffec:	ldr	r1, [r0, #20]
   3fff0:	add	r2, r1, #1
   3fff4:	str	r2, [r0, #20]
   3fff8:	movw	r0, #91	; 0x5b
   3fffc:	strb	r0, [r1]
   40000:	ldr	r0, [sp, #8]
   40004:	cmp	r0, #0
   40008:	beq	40094 <flatcc_json_printer_int16_vector_field@@Base+0x164>
   4000c:	b	40010 <flatcc_json_printer_int16_vector_field@@Base+0xe0>
   40010:	ldr	r0, [fp, #-4]
   40014:	ldrsb	r0, [r0, #25]
   40018:	cmp	r0, #0
   4001c:	beq	40044 <flatcc_json_printer_int16_vector_field@@Base+0x114>
   40020:	ldr	r0, [fp, #-4]
   40024:	ldr	r1, [r0, #20]
   40028:	add	r2, r1, #1
   4002c:	str	r2, [r0, #20]
   40030:	movw	r0, #10
   40034:	strb	r0, [r1]
   40038:	ldr	r0, [fp, #-4]
   4003c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   40040:	b	4004c <flatcc_json_printer_int16_vector_field@@Base+0x11c>
   40044:	ldr	r0, [fp, #-4]
   40048:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   4004c:	b	40050 <flatcc_json_printer_int16_vector_field@@Base+0x120>
   40050:	ldr	r0, [sp, #12]
   40054:	bl	3cf0c <flatcc_json_printer_int16_field@@Base+0x108>
   40058:	ldr	r1, [fp, #-4]
   4005c:	ldr	r1, [r1, #20]
   40060:	sxth	r0, r0
   40064:	bl	3bdc8 <flatcc_json_printer_int16@@Base+0x40>
   40068:	ldr	r1, [fp, #-4]
   4006c:	ldr	r2, [r1, #20]
   40070:	add	r0, r2, r0
   40074:	str	r0, [r1, #20]
   40078:	ldr	r0, [sp, #12]
   4007c:	add	r0, r0, #2
   40080:	str	r0, [sp, #12]
   40084:	ldr	r0, [sp, #8]
   40088:	mvn	r1, #0
   4008c:	add	r0, r0, r1
   40090:	str	r0, [sp, #8]
   40094:	b	40098 <flatcc_json_printer_int16_vector_field@@Base+0x168>
   40098:	ldr	r0, [sp, #8]
   4009c:	mvn	r1, #0
   400a0:	add	r1, r0, r1
   400a4:	str	r1, [sp, #8]
   400a8:	cmp	r0, #0
   400ac:	beq	40140 <flatcc_json_printer_int16_vector_field@@Base+0x210>
   400b0:	ldr	r0, [fp, #-4]
   400b4:	ldr	r1, [r0, #20]
   400b8:	add	r2, r1, #1
   400bc:	str	r2, [r0, #20]
   400c0:	movw	r0, #44	; 0x2c
   400c4:	strb	r0, [r1]
   400c8:	ldr	r0, [fp, #-4]
   400cc:	ldrsb	r0, [r0, #25]
   400d0:	cmp	r0, #0
   400d4:	beq	400fc <flatcc_json_printer_int16_vector_field@@Base+0x1cc>
   400d8:	ldr	r0, [fp, #-4]
   400dc:	ldr	r1, [r0, #20]
   400e0:	add	r2, r1, #1
   400e4:	str	r2, [r0, #20]
   400e8:	movw	r0, #10
   400ec:	strb	r0, [r1]
   400f0:	ldr	r0, [fp, #-4]
   400f4:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   400f8:	b	40104 <flatcc_json_printer_int16_vector_field@@Base+0x1d4>
   400fc:	ldr	r0, [fp, #-4]
   40100:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   40104:	b	40108 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
   40108:	ldr	r0, [sp, #12]
   4010c:	bl	3cf0c <flatcc_json_printer_int16_field@@Base+0x108>
   40110:	ldr	r1, [fp, #-4]
   40114:	ldr	r1, [r1, #20]
   40118:	sxth	r0, r0
   4011c:	bl	3bdc8 <flatcc_json_printer_int16@@Base+0x40>
   40120:	ldr	r1, [fp, #-4]
   40124:	ldr	r2, [r1, #20]
   40128:	add	r0, r2, r0
   4012c:	str	r0, [r1, #20]
   40130:	ldr	r0, [sp, #12]
   40134:	add	r0, r0, #2
   40138:	str	r0, [sp, #12]
   4013c:	b	40098 <flatcc_json_printer_int16_vector_field@@Base+0x168>
   40140:	b	40144 <flatcc_json_printer_int16_vector_field@@Base+0x214>
   40144:	ldr	r0, [fp, #-4]
   40148:	ldrsb	r0, [r0, #25]
   4014c:	cmp	r0, #0
   40150:	beq	40188 <flatcc_json_printer_int16_vector_field@@Base+0x258>
   40154:	ldr	r0, [fp, #-4]
   40158:	ldr	r1, [r0, #20]
   4015c:	add	r2, r1, #1
   40160:	str	r2, [r0, #20]
   40164:	movw	r0, #10
   40168:	strb	r0, [r1]
   4016c:	ldr	r0, [fp, #-4]
   40170:	ldr	r1, [r0, #32]
   40174:	mvn	r2, #0
   40178:	add	r1, r1, r2
   4017c:	str	r1, [r0, #32]
   40180:	ldr	r0, [fp, #-4]
   40184:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   40188:	ldr	r0, [fp, #-4]
   4018c:	ldr	r1, [r0, #20]
   40190:	add	r2, r1, #1
   40194:	str	r2, [r0, #20]
   40198:	movw	r0, #93	; 0x5d
   4019c:	strb	r0, [r1]
   401a0:	b	401a4 <flatcc_json_printer_int16_vector_field@@Base+0x274>
   401a4:	mov	sp, fp
   401a8:	pop	{fp, pc}

000401ac <flatcc_json_printer_int32_vector_field@@Base>:
   401ac:	push	{fp, lr}
   401b0:	mov	fp, sp
   401b4:	sub	sp, sp, #32
   401b8:	ldr	ip, [fp, #8]
   401bc:	str	r0, [fp, #-4]
   401c0:	str	r1, [fp, #-8]
   401c4:	str	r2, [fp, #-12]
   401c8:	str	r3, [sp, #16]
   401cc:	ldr	r0, [fp, #-8]
   401d0:	ldr	r1, [fp, #-12]
   401d4:	str	ip, [sp, #4]
   401d8:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   401dc:	str	r0, [sp, #12]
   401e0:	ldr	r0, [sp, #12]
   401e4:	movw	r1, #0
   401e8:	cmp	r0, r1
   401ec:	beq	40418 <flatcc_json_printer_int32_vector_field@@Base+0x26c>
   401f0:	ldr	r0, [fp, #-8]
   401f4:	ldr	r1, [r0, #16]
   401f8:	add	r2, r1, #1
   401fc:	str	r2, [r0, #16]
   40200:	cmp	r1, #0
   40204:	beq	40220 <flatcc_json_printer_int32_vector_field@@Base+0x74>
   40208:	ldr	r0, [fp, #-4]
   4020c:	ldr	r1, [r0, #20]
   40210:	add	r2, r1, #1
   40214:	str	r2, [r0, #20]
   40218:	movw	r0, #44	; 0x2c
   4021c:	strb	r0, [r1]
   40220:	ldr	r0, [sp, #12]
   40224:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   40228:	str	r0, [sp, #12]
   4022c:	ldr	r0, [sp, #12]
   40230:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40234:	str	r0, [sp, #8]
   40238:	ldr	r0, [sp, #12]
   4023c:	add	r0, r0, #4
   40240:	str	r0, [sp, #12]
   40244:	ldr	r0, [fp, #-4]
   40248:	ldr	r1, [sp, #16]
   4024c:	ldr	r2, [fp, #8]
   40250:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   40254:	ldr	r0, [fp, #-4]
   40258:	ldr	r1, [r0, #32]
   4025c:	add	r1, r1, #1
   40260:	str	r1, [r0, #32]
   40264:	ldr	r0, [fp, #-4]
   40268:	ldr	r1, [r0, #20]
   4026c:	add	r2, r1, #1
   40270:	str	r2, [r0, #20]
   40274:	movw	r0, #91	; 0x5b
   40278:	strb	r0, [r1]
   4027c:	ldr	r0, [sp, #8]
   40280:	cmp	r0, #0
   40284:	beq	4030c <flatcc_json_printer_int32_vector_field@@Base+0x160>
   40288:	b	4028c <flatcc_json_printer_int32_vector_field@@Base+0xe0>
   4028c:	ldr	r0, [fp, #-4]
   40290:	ldrsb	r0, [r0, #25]
   40294:	cmp	r0, #0
   40298:	beq	402c0 <flatcc_json_printer_int32_vector_field@@Base+0x114>
   4029c:	ldr	r0, [fp, #-4]
   402a0:	ldr	r1, [r0, #20]
   402a4:	add	r2, r1, #1
   402a8:	str	r2, [r0, #20]
   402ac:	movw	r0, #10
   402b0:	strb	r0, [r1]
   402b4:	ldr	r0, [fp, #-4]
   402b8:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   402bc:	b	402c8 <flatcc_json_printer_int32_vector_field@@Base+0x11c>
   402c0:	ldr	r0, [fp, #-4]
   402c4:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   402c8:	b	402cc <flatcc_json_printer_int32_vector_field@@Base+0x120>
   402cc:	ldr	r0, [sp, #12]
   402d0:	bl	3d038 <flatcc_json_printer_int32_field@@Base+0x104>
   402d4:	ldr	r1, [fp, #-4]
   402d8:	ldr	r1, [r1, #20]
   402dc:	bl	3be7c <flatcc_json_printer_int32@@Base+0x3c>
   402e0:	ldr	r1, [fp, #-4]
   402e4:	ldr	r2, [r1, #20]
   402e8:	add	r0, r2, r0
   402ec:	str	r0, [r1, #20]
   402f0:	ldr	r0, [sp, #12]
   402f4:	add	r0, r0, #4
   402f8:	str	r0, [sp, #12]
   402fc:	ldr	r0, [sp, #8]
   40300:	mvn	r1, #0
   40304:	add	r0, r0, r1
   40308:	str	r0, [sp, #8]
   4030c:	b	40310 <flatcc_json_printer_int32_vector_field@@Base+0x164>
   40310:	ldr	r0, [sp, #8]
   40314:	mvn	r1, #0
   40318:	add	r1, r0, r1
   4031c:	str	r1, [sp, #8]
   40320:	cmp	r0, #0
   40324:	beq	403b4 <flatcc_json_printer_int32_vector_field@@Base+0x208>
   40328:	ldr	r0, [fp, #-4]
   4032c:	ldr	r1, [r0, #20]
   40330:	add	r2, r1, #1
   40334:	str	r2, [r0, #20]
   40338:	movw	r0, #44	; 0x2c
   4033c:	strb	r0, [r1]
   40340:	ldr	r0, [fp, #-4]
   40344:	ldrsb	r0, [r0, #25]
   40348:	cmp	r0, #0
   4034c:	beq	40374 <flatcc_json_printer_int32_vector_field@@Base+0x1c8>
   40350:	ldr	r0, [fp, #-4]
   40354:	ldr	r1, [r0, #20]
   40358:	add	r2, r1, #1
   4035c:	str	r2, [r0, #20]
   40360:	movw	r0, #10
   40364:	strb	r0, [r1]
   40368:	ldr	r0, [fp, #-4]
   4036c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   40370:	b	4037c <flatcc_json_printer_int32_vector_field@@Base+0x1d0>
   40374:	ldr	r0, [fp, #-4]
   40378:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   4037c:	b	40380 <flatcc_json_printer_int32_vector_field@@Base+0x1d4>
   40380:	ldr	r0, [sp, #12]
   40384:	bl	3d038 <flatcc_json_printer_int32_field@@Base+0x104>
   40388:	ldr	r1, [fp, #-4]
   4038c:	ldr	r1, [r1, #20]
   40390:	bl	3be7c <flatcc_json_printer_int32@@Base+0x3c>
   40394:	ldr	r1, [fp, #-4]
   40398:	ldr	r2, [r1, #20]
   4039c:	add	r0, r2, r0
   403a0:	str	r0, [r1, #20]
   403a4:	ldr	r0, [sp, #12]
   403a8:	add	r0, r0, #4
   403ac:	str	r0, [sp, #12]
   403b0:	b	40310 <flatcc_json_printer_int32_vector_field@@Base+0x164>
   403b4:	b	403b8 <flatcc_json_printer_int32_vector_field@@Base+0x20c>
   403b8:	ldr	r0, [fp, #-4]
   403bc:	ldrsb	r0, [r0, #25]
   403c0:	cmp	r0, #0
   403c4:	beq	403fc <flatcc_json_printer_int32_vector_field@@Base+0x250>
   403c8:	ldr	r0, [fp, #-4]
   403cc:	ldr	r1, [r0, #20]
   403d0:	add	r2, r1, #1
   403d4:	str	r2, [r0, #20]
   403d8:	movw	r0, #10
   403dc:	strb	r0, [r1]
   403e0:	ldr	r0, [fp, #-4]
   403e4:	ldr	r1, [r0, #32]
   403e8:	mvn	r2, #0
   403ec:	add	r1, r1, r2
   403f0:	str	r1, [r0, #32]
   403f4:	ldr	r0, [fp, #-4]
   403f8:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   403fc:	ldr	r0, [fp, #-4]
   40400:	ldr	r1, [r0, #20]
   40404:	add	r2, r1, #1
   40408:	str	r2, [r0, #20]
   4040c:	movw	r0, #93	; 0x5d
   40410:	strb	r0, [r1]
   40414:	b	40418 <flatcc_json_printer_int32_vector_field@@Base+0x26c>
   40418:	mov	sp, fp
   4041c:	pop	{fp, pc}

00040420 <flatcc_json_printer_int64_vector_field@@Base>:
   40420:	push	{fp, lr}
   40424:	mov	fp, sp
   40428:	sub	sp, sp, #32
   4042c:	ldr	ip, [fp, #8]
   40430:	str	r0, [fp, #-4]
   40434:	str	r1, [fp, #-8]
   40438:	str	r2, [fp, #-12]
   4043c:	str	r3, [sp, #16]
   40440:	ldr	r0, [fp, #-8]
   40444:	ldr	r1, [fp, #-12]
   40448:	str	ip, [sp, #4]
   4044c:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   40450:	str	r0, [sp, #12]
   40454:	ldr	r0, [sp, #12]
   40458:	movw	r1, #0
   4045c:	cmp	r0, r1
   40460:	beq	4068c <flatcc_json_printer_int64_vector_field@@Base+0x26c>
   40464:	ldr	r0, [fp, #-8]
   40468:	ldr	r1, [r0, #16]
   4046c:	add	r2, r1, #1
   40470:	str	r2, [r0, #16]
   40474:	cmp	r1, #0
   40478:	beq	40494 <flatcc_json_printer_int64_vector_field@@Base+0x74>
   4047c:	ldr	r0, [fp, #-4]
   40480:	ldr	r1, [r0, #20]
   40484:	add	r2, r1, #1
   40488:	str	r2, [r0, #20]
   4048c:	movw	r0, #44	; 0x2c
   40490:	strb	r0, [r1]
   40494:	ldr	r0, [sp, #12]
   40498:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   4049c:	str	r0, [sp, #12]
   404a0:	ldr	r0, [sp, #12]
   404a4:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   404a8:	str	r0, [sp, #8]
   404ac:	ldr	r0, [sp, #12]
   404b0:	add	r0, r0, #4
   404b4:	str	r0, [sp, #12]
   404b8:	ldr	r0, [fp, #-4]
   404bc:	ldr	r1, [sp, #16]
   404c0:	ldr	r2, [fp, #8]
   404c4:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   404c8:	ldr	r0, [fp, #-4]
   404cc:	ldr	r1, [r0, #32]
   404d0:	add	r1, r1, #1
   404d4:	str	r1, [r0, #32]
   404d8:	ldr	r0, [fp, #-4]
   404dc:	ldr	r1, [r0, #20]
   404e0:	add	r2, r1, #1
   404e4:	str	r2, [r0, #20]
   404e8:	movw	r0, #91	; 0x5b
   404ec:	strb	r0, [r1]
   404f0:	ldr	r0, [sp, #8]
   404f4:	cmp	r0, #0
   404f8:	beq	40580 <flatcc_json_printer_int64_vector_field@@Base+0x160>
   404fc:	b	40500 <flatcc_json_printer_int64_vector_field@@Base+0xe0>
   40500:	ldr	r0, [fp, #-4]
   40504:	ldrsb	r0, [r0, #25]
   40508:	cmp	r0, #0
   4050c:	beq	40534 <flatcc_json_printer_int64_vector_field@@Base+0x114>
   40510:	ldr	r0, [fp, #-4]
   40514:	ldr	r1, [r0, #20]
   40518:	add	r2, r1, #1
   4051c:	str	r2, [r0, #20]
   40520:	movw	r0, #10
   40524:	strb	r0, [r1]
   40528:	ldr	r0, [fp, #-4]
   4052c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   40530:	b	4053c <flatcc_json_printer_int64_vector_field@@Base+0x11c>
   40534:	ldr	r0, [fp, #-4]
   40538:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   4053c:	b	40540 <flatcc_json_printer_int64_vector_field@@Base+0x120>
   40540:	ldr	r0, [sp, #12]
   40544:	bl	3d190 <flatcc_json_printer_int64_field@@Base+0x134>
   40548:	ldr	r2, [fp, #-4]
   4054c:	ldr	r2, [r2, #20]
   40550:	bl	3bf34 <flatcc_json_printer_int64@@Base+0x44>
   40554:	ldr	r1, [fp, #-4]
   40558:	ldr	r2, [r1, #20]
   4055c:	add	r0, r2, r0
   40560:	str	r0, [r1, #20]
   40564:	ldr	r0, [sp, #12]
   40568:	add	r0, r0, #8
   4056c:	str	r0, [sp, #12]
   40570:	ldr	r0, [sp, #8]
   40574:	mvn	r1, #0
   40578:	add	r0, r0, r1
   4057c:	str	r0, [sp, #8]
   40580:	b	40584 <flatcc_json_printer_int64_vector_field@@Base+0x164>
   40584:	ldr	r0, [sp, #8]
   40588:	mvn	r1, #0
   4058c:	add	r1, r0, r1
   40590:	str	r1, [sp, #8]
   40594:	cmp	r0, #0
   40598:	beq	40628 <flatcc_json_printer_int64_vector_field@@Base+0x208>
   4059c:	ldr	r0, [fp, #-4]
   405a0:	ldr	r1, [r0, #20]
   405a4:	add	r2, r1, #1
   405a8:	str	r2, [r0, #20]
   405ac:	movw	r0, #44	; 0x2c
   405b0:	strb	r0, [r1]
   405b4:	ldr	r0, [fp, #-4]
   405b8:	ldrsb	r0, [r0, #25]
   405bc:	cmp	r0, #0
   405c0:	beq	405e8 <flatcc_json_printer_int64_vector_field@@Base+0x1c8>
   405c4:	ldr	r0, [fp, #-4]
   405c8:	ldr	r1, [r0, #20]
   405cc:	add	r2, r1, #1
   405d0:	str	r2, [r0, #20]
   405d4:	movw	r0, #10
   405d8:	strb	r0, [r1]
   405dc:	ldr	r0, [fp, #-4]
   405e0:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   405e4:	b	405f0 <flatcc_json_printer_int64_vector_field@@Base+0x1d0>
   405e8:	ldr	r0, [fp, #-4]
   405ec:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   405f0:	b	405f4 <flatcc_json_printer_int64_vector_field@@Base+0x1d4>
   405f4:	ldr	r0, [sp, #12]
   405f8:	bl	3d190 <flatcc_json_printer_int64_field@@Base+0x134>
   405fc:	ldr	r2, [fp, #-4]
   40600:	ldr	r2, [r2, #20]
   40604:	bl	3bf34 <flatcc_json_printer_int64@@Base+0x44>
   40608:	ldr	r1, [fp, #-4]
   4060c:	ldr	r2, [r1, #20]
   40610:	add	r0, r2, r0
   40614:	str	r0, [r1, #20]
   40618:	ldr	r0, [sp, #12]
   4061c:	add	r0, r0, #8
   40620:	str	r0, [sp, #12]
   40624:	b	40584 <flatcc_json_printer_int64_vector_field@@Base+0x164>
   40628:	b	4062c <flatcc_json_printer_int64_vector_field@@Base+0x20c>
   4062c:	ldr	r0, [fp, #-4]
   40630:	ldrsb	r0, [r0, #25]
   40634:	cmp	r0, #0
   40638:	beq	40670 <flatcc_json_printer_int64_vector_field@@Base+0x250>
   4063c:	ldr	r0, [fp, #-4]
   40640:	ldr	r1, [r0, #20]
   40644:	add	r2, r1, #1
   40648:	str	r2, [r0, #20]
   4064c:	movw	r0, #10
   40650:	strb	r0, [r1]
   40654:	ldr	r0, [fp, #-4]
   40658:	ldr	r1, [r0, #32]
   4065c:	mvn	r2, #0
   40660:	add	r1, r1, r2
   40664:	str	r1, [r0, #32]
   40668:	ldr	r0, [fp, #-4]
   4066c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   40670:	ldr	r0, [fp, #-4]
   40674:	ldr	r1, [r0, #20]
   40678:	add	r2, r1, #1
   4067c:	str	r2, [r0, #20]
   40680:	movw	r0, #93	; 0x5d
   40684:	strb	r0, [r1]
   40688:	b	4068c <flatcc_json_printer_int64_vector_field@@Base+0x26c>
   4068c:	mov	sp, fp
   40690:	pop	{fp, pc}

00040694 <flatcc_json_printer_bool_vector_field@@Base>:
   40694:	push	{fp, lr}
   40698:	mov	fp, sp
   4069c:	sub	sp, sp, #32
   406a0:	ldr	ip, [fp, #8]
   406a4:	str	r0, [fp, #-4]
   406a8:	str	r1, [fp, #-8]
   406ac:	str	r2, [fp, #-12]
   406b0:	str	r3, [sp, #16]
   406b4:	ldr	r0, [fp, #-8]
   406b8:	ldr	r1, [fp, #-12]
   406bc:	str	ip, [sp, #4]
   406c0:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   406c4:	str	r0, [sp, #12]
   406c8:	ldr	r0, [sp, #12]
   406cc:	movw	r1, #0
   406d0:	cmp	r0, r1
   406d4:	beq	40908 <flatcc_json_printer_bool_vector_field@@Base+0x274>
   406d8:	ldr	r0, [fp, #-8]
   406dc:	ldr	r1, [r0, #16]
   406e0:	add	r2, r1, #1
   406e4:	str	r2, [r0, #16]
   406e8:	cmp	r1, #0
   406ec:	beq	40708 <flatcc_json_printer_bool_vector_field@@Base+0x74>
   406f0:	ldr	r0, [fp, #-4]
   406f4:	ldr	r1, [r0, #20]
   406f8:	add	r2, r1, #1
   406fc:	str	r2, [r0, #20]
   40700:	movw	r0, #44	; 0x2c
   40704:	strb	r0, [r1]
   40708:	ldr	r0, [sp, #12]
   4070c:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   40710:	str	r0, [sp, #12]
   40714:	ldr	r0, [sp, #12]
   40718:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   4071c:	str	r0, [sp, #8]
   40720:	ldr	r0, [sp, #12]
   40724:	add	r0, r0, #4
   40728:	str	r0, [sp, #12]
   4072c:	ldr	r0, [fp, #-4]
   40730:	ldr	r1, [sp, #16]
   40734:	ldr	r2, [fp, #8]
   40738:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   4073c:	ldr	r0, [fp, #-4]
   40740:	ldr	r1, [r0, #32]
   40744:	add	r1, r1, #1
   40748:	str	r1, [r0, #32]
   4074c:	ldr	r0, [fp, #-4]
   40750:	ldr	r1, [r0, #20]
   40754:	add	r2, r1, #1
   40758:	str	r2, [r0, #20]
   4075c:	movw	r0, #91	; 0x5b
   40760:	strb	r0, [r1]
   40764:	ldr	r0, [sp, #8]
   40768:	cmp	r0, #0
   4076c:	beq	407f8 <flatcc_json_printer_bool_vector_field@@Base+0x164>
   40770:	b	40774 <flatcc_json_printer_bool_vector_field@@Base+0xe0>
   40774:	ldr	r0, [fp, #-4]
   40778:	ldrsb	r0, [r0, #25]
   4077c:	cmp	r0, #0
   40780:	beq	407a8 <flatcc_json_printer_bool_vector_field@@Base+0x114>
   40784:	ldr	r0, [fp, #-4]
   40788:	ldr	r1, [r0, #20]
   4078c:	add	r2, r1, #1
   40790:	str	r2, [r0, #20]
   40794:	movw	r0, #10
   40798:	strb	r0, [r1]
   4079c:	ldr	r0, [fp, #-4]
   407a0:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   407a4:	b	407b0 <flatcc_json_printer_bool_vector_field@@Base+0x11c>
   407a8:	ldr	r0, [fp, #-4]
   407ac:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   407b0:	b	407b4 <flatcc_json_printer_bool_vector_field@@Base+0x120>
   407b4:	ldr	r0, [sp, #12]
   407b8:	bl	3d2c8 <flatcc_json_printer_bool_field@@Base+0x104>
   407bc:	and	r0, r0, #255	; 0xff
   407c0:	ldr	r1, [fp, #-4]
   407c4:	ldr	r1, [r1, #20]
   407c8:	bl	3d2f0 <flatcc_json_printer_bool_field@@Base+0x12c>
   407cc:	ldr	r1, [fp, #-4]
   407d0:	ldr	r2, [r1, #20]
   407d4:	add	r0, r2, r0
   407d8:	str	r0, [r1, #20]
   407dc:	ldr	r0, [sp, #12]
   407e0:	add	r0, r0, #1
   407e4:	str	r0, [sp, #12]
   407e8:	ldr	r0, [sp, #8]
   407ec:	mvn	r1, #0
   407f0:	add	r0, r0, r1
   407f4:	str	r0, [sp, #8]
   407f8:	b	407fc <flatcc_json_printer_bool_vector_field@@Base+0x168>
   407fc:	ldr	r0, [sp, #8]
   40800:	mvn	r1, #0
   40804:	add	r1, r0, r1
   40808:	str	r1, [sp, #8]
   4080c:	cmp	r0, #0
   40810:	beq	408a4 <flatcc_json_printer_bool_vector_field@@Base+0x210>
   40814:	ldr	r0, [fp, #-4]
   40818:	ldr	r1, [r0, #20]
   4081c:	add	r2, r1, #1
   40820:	str	r2, [r0, #20]
   40824:	movw	r0, #44	; 0x2c
   40828:	strb	r0, [r1]
   4082c:	ldr	r0, [fp, #-4]
   40830:	ldrsb	r0, [r0, #25]
   40834:	cmp	r0, #0
   40838:	beq	40860 <flatcc_json_printer_bool_vector_field@@Base+0x1cc>
   4083c:	ldr	r0, [fp, #-4]
   40840:	ldr	r1, [r0, #20]
   40844:	add	r2, r1, #1
   40848:	str	r2, [r0, #20]
   4084c:	movw	r0, #10
   40850:	strb	r0, [r1]
   40854:	ldr	r0, [fp, #-4]
   40858:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   4085c:	b	40868 <flatcc_json_printer_bool_vector_field@@Base+0x1d4>
   40860:	ldr	r0, [fp, #-4]
   40864:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   40868:	b	4086c <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   4086c:	ldr	r0, [sp, #12]
   40870:	bl	3d2c8 <flatcc_json_printer_bool_field@@Base+0x104>
   40874:	and	r0, r0, #255	; 0xff
   40878:	ldr	r1, [fp, #-4]
   4087c:	ldr	r1, [r1, #20]
   40880:	bl	3d2f0 <flatcc_json_printer_bool_field@@Base+0x12c>
   40884:	ldr	r1, [fp, #-4]
   40888:	ldr	r2, [r1, #20]
   4088c:	add	r0, r2, r0
   40890:	str	r0, [r1, #20]
   40894:	ldr	r0, [sp, #12]
   40898:	add	r0, r0, #1
   4089c:	str	r0, [sp, #12]
   408a0:	b	407fc <flatcc_json_printer_bool_vector_field@@Base+0x168>
   408a4:	b	408a8 <flatcc_json_printer_bool_vector_field@@Base+0x214>
   408a8:	ldr	r0, [fp, #-4]
   408ac:	ldrsb	r0, [r0, #25]
   408b0:	cmp	r0, #0
   408b4:	beq	408ec <flatcc_json_printer_bool_vector_field@@Base+0x258>
   408b8:	ldr	r0, [fp, #-4]
   408bc:	ldr	r1, [r0, #20]
   408c0:	add	r2, r1, #1
   408c4:	str	r2, [r0, #20]
   408c8:	movw	r0, #10
   408cc:	strb	r0, [r1]
   408d0:	ldr	r0, [fp, #-4]
   408d4:	ldr	r1, [r0, #32]
   408d8:	mvn	r2, #0
   408dc:	add	r1, r1, r2
   408e0:	str	r1, [r0, #32]
   408e4:	ldr	r0, [fp, #-4]
   408e8:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   408ec:	ldr	r0, [fp, #-4]
   408f0:	ldr	r1, [r0, #20]
   408f4:	add	r2, r1, #1
   408f8:	str	r2, [r0, #20]
   408fc:	movw	r0, #93	; 0x5d
   40900:	strb	r0, [r1]
   40904:	b	40908 <flatcc_json_printer_bool_vector_field@@Base+0x274>
   40908:	mov	sp, fp
   4090c:	pop	{fp, pc}

00040910 <flatcc_json_printer_float_vector_field@@Base>:
   40910:	push	{fp, lr}
   40914:	mov	fp, sp
   40918:	sub	sp, sp, #32
   4091c:	ldr	ip, [fp, #8]
   40920:	str	r0, [fp, #-4]
   40924:	str	r1, [fp, #-8]
   40928:	str	r2, [fp, #-12]
   4092c:	str	r3, [sp, #16]
   40930:	ldr	r0, [fp, #-8]
   40934:	ldr	r1, [fp, #-12]
   40938:	str	ip, [sp, #4]
   4093c:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   40940:	str	r0, [sp, #12]
   40944:	ldr	r0, [sp, #12]
   40948:	movw	r1, #0
   4094c:	cmp	r0, r1
   40950:	beq	40b84 <flatcc_json_printer_float_vector_field@@Base+0x274>
   40954:	ldr	r0, [fp, #-8]
   40958:	ldr	r1, [r0, #16]
   4095c:	add	r2, r1, #1
   40960:	str	r2, [r0, #16]
   40964:	cmp	r1, #0
   40968:	beq	40984 <flatcc_json_printer_float_vector_field@@Base+0x74>
   4096c:	ldr	r0, [fp, #-4]
   40970:	ldr	r1, [r0, #20]
   40974:	add	r2, r1, #1
   40978:	str	r2, [r0, #20]
   4097c:	movw	r0, #44	; 0x2c
   40980:	strb	r0, [r1]
   40984:	ldr	r0, [sp, #12]
   40988:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   4098c:	str	r0, [sp, #12]
   40990:	ldr	r0, [sp, #12]
   40994:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40998:	str	r0, [sp, #8]
   4099c:	ldr	r0, [sp, #12]
   409a0:	add	r0, r0, #4
   409a4:	str	r0, [sp, #12]
   409a8:	ldr	r0, [fp, #-4]
   409ac:	ldr	r1, [sp, #16]
   409b0:	ldr	r2, [fp, #8]
   409b4:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   409b8:	ldr	r0, [fp, #-4]
   409bc:	ldr	r1, [r0, #32]
   409c0:	add	r1, r1, #1
   409c4:	str	r1, [r0, #32]
   409c8:	ldr	r0, [fp, #-4]
   409cc:	ldr	r1, [r0, #20]
   409d0:	add	r2, r1, #1
   409d4:	str	r2, [r0, #20]
   409d8:	movw	r0, #91	; 0x5b
   409dc:	strb	r0, [r1]
   409e0:	ldr	r0, [sp, #8]
   409e4:	cmp	r0, #0
   409e8:	beq	40a74 <flatcc_json_printer_float_vector_field@@Base+0x164>
   409ec:	b	409f0 <flatcc_json_printer_float_vector_field@@Base+0xe0>
   409f0:	ldr	r0, [fp, #-4]
   409f4:	ldrsb	r0, [r0, #25]
   409f8:	cmp	r0, #0
   409fc:	beq	40a24 <flatcc_json_printer_float_vector_field@@Base+0x114>
   40a00:	ldr	r0, [fp, #-4]
   40a04:	ldr	r1, [r0, #20]
   40a08:	add	r2, r1, #1
   40a0c:	str	r2, [r0, #20]
   40a10:	movw	r0, #10
   40a14:	strb	r0, [r1]
   40a18:	ldr	r0, [fp, #-4]
   40a1c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   40a20:	b	40a2c <flatcc_json_printer_float_vector_field@@Base+0x11c>
   40a24:	ldr	r0, [fp, #-4]
   40a28:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   40a2c:	b	40a30 <flatcc_json_printer_float_vector_field@@Base+0x120>
   40a30:	ldr	r0, [sp, #12]
   40a34:	bl	3d4a8 <flatcc_json_printer_float_field@@Base+0x108>
   40a38:	vcvt.f64.f32	d0, s0
   40a3c:	ldr	r0, [fp, #-4]
   40a40:	ldr	r0, [r0, #20]
   40a44:	bl	399a0 <flatcc_json_printer_fmt_float@@Base+0x2c>
   40a48:	ldr	r1, [fp, #-4]
   40a4c:	ldr	r2, [r1, #20]
   40a50:	add	r0, r2, r0
   40a54:	str	r0, [r1, #20]
   40a58:	ldr	r0, [sp, #12]
   40a5c:	add	r0, r0, #4
   40a60:	str	r0, [sp, #12]
   40a64:	ldr	r0, [sp, #8]
   40a68:	mvn	r1, #0
   40a6c:	add	r0, r0, r1
   40a70:	str	r0, [sp, #8]
   40a74:	b	40a78 <flatcc_json_printer_float_vector_field@@Base+0x168>
   40a78:	ldr	r0, [sp, #8]
   40a7c:	mvn	r1, #0
   40a80:	add	r1, r0, r1
   40a84:	str	r1, [sp, #8]
   40a88:	cmp	r0, #0
   40a8c:	beq	40b20 <flatcc_json_printer_float_vector_field@@Base+0x210>
   40a90:	ldr	r0, [fp, #-4]
   40a94:	ldr	r1, [r0, #20]
   40a98:	add	r2, r1, #1
   40a9c:	str	r2, [r0, #20]
   40aa0:	movw	r0, #44	; 0x2c
   40aa4:	strb	r0, [r1]
   40aa8:	ldr	r0, [fp, #-4]
   40aac:	ldrsb	r0, [r0, #25]
   40ab0:	cmp	r0, #0
   40ab4:	beq	40adc <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   40ab8:	ldr	r0, [fp, #-4]
   40abc:	ldr	r1, [r0, #20]
   40ac0:	add	r2, r1, #1
   40ac4:	str	r2, [r0, #20]
   40ac8:	movw	r0, #10
   40acc:	strb	r0, [r1]
   40ad0:	ldr	r0, [fp, #-4]
   40ad4:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   40ad8:	b	40ae4 <flatcc_json_printer_float_vector_field@@Base+0x1d4>
   40adc:	ldr	r0, [fp, #-4]
   40ae0:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   40ae4:	b	40ae8 <flatcc_json_printer_float_vector_field@@Base+0x1d8>
   40ae8:	ldr	r0, [sp, #12]
   40aec:	bl	3d4a8 <flatcc_json_printer_float_field@@Base+0x108>
   40af0:	vcvt.f64.f32	d0, s0
   40af4:	ldr	r0, [fp, #-4]
   40af8:	ldr	r0, [r0, #20]
   40afc:	bl	399a0 <flatcc_json_printer_fmt_float@@Base+0x2c>
   40b00:	ldr	r1, [fp, #-4]
   40b04:	ldr	r2, [r1, #20]
   40b08:	add	r0, r2, r0
   40b0c:	str	r0, [r1, #20]
   40b10:	ldr	r0, [sp, #12]
   40b14:	add	r0, r0, #4
   40b18:	str	r0, [sp, #12]
   40b1c:	b	40a78 <flatcc_json_printer_float_vector_field@@Base+0x168>
   40b20:	b	40b24 <flatcc_json_printer_float_vector_field@@Base+0x214>
   40b24:	ldr	r0, [fp, #-4]
   40b28:	ldrsb	r0, [r0, #25]
   40b2c:	cmp	r0, #0
   40b30:	beq	40b68 <flatcc_json_printer_float_vector_field@@Base+0x258>
   40b34:	ldr	r0, [fp, #-4]
   40b38:	ldr	r1, [r0, #20]
   40b3c:	add	r2, r1, #1
   40b40:	str	r2, [r0, #20]
   40b44:	movw	r0, #10
   40b48:	strb	r0, [r1]
   40b4c:	ldr	r0, [fp, #-4]
   40b50:	ldr	r1, [r0, #32]
   40b54:	mvn	r2, #0
   40b58:	add	r1, r1, r2
   40b5c:	str	r1, [r0, #32]
   40b60:	ldr	r0, [fp, #-4]
   40b64:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   40b68:	ldr	r0, [fp, #-4]
   40b6c:	ldr	r1, [r0, #20]
   40b70:	add	r2, r1, #1
   40b74:	str	r2, [r0, #20]
   40b78:	movw	r0, #93	; 0x5d
   40b7c:	strb	r0, [r1]
   40b80:	b	40b84 <flatcc_json_printer_float_vector_field@@Base+0x274>
   40b84:	mov	sp, fp
   40b88:	pop	{fp, pc}

00040b8c <flatcc_json_printer_double_vector_field@@Base>:
   40b8c:	push	{fp, lr}
   40b90:	mov	fp, sp
   40b94:	sub	sp, sp, #32
   40b98:	ldr	ip, [fp, #8]
   40b9c:	str	r0, [fp, #-4]
   40ba0:	str	r1, [fp, #-8]
   40ba4:	str	r2, [fp, #-12]
   40ba8:	str	r3, [sp, #16]
   40bac:	ldr	r0, [fp, #-8]
   40bb0:	ldr	r1, [fp, #-12]
   40bb4:	str	ip, [sp, #4]
   40bb8:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   40bbc:	str	r0, [sp, #12]
   40bc0:	ldr	r0, [sp, #12]
   40bc4:	movw	r1, #0
   40bc8:	cmp	r0, r1
   40bcc:	beq	40df8 <flatcc_json_printer_double_vector_field@@Base+0x26c>
   40bd0:	ldr	r0, [fp, #-8]
   40bd4:	ldr	r1, [r0, #16]
   40bd8:	add	r2, r1, #1
   40bdc:	str	r2, [r0, #16]
   40be0:	cmp	r1, #0
   40be4:	beq	40c00 <flatcc_json_printer_double_vector_field@@Base+0x74>
   40be8:	ldr	r0, [fp, #-4]
   40bec:	ldr	r1, [r0, #20]
   40bf0:	add	r2, r1, #1
   40bf4:	str	r2, [r0, #20]
   40bf8:	movw	r0, #44	; 0x2c
   40bfc:	strb	r0, [r1]
   40c00:	ldr	r0, [sp, #12]
   40c04:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   40c08:	str	r0, [sp, #12]
   40c0c:	ldr	r0, [sp, #12]
   40c10:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40c14:	str	r0, [sp, #8]
   40c18:	ldr	r0, [sp, #12]
   40c1c:	add	r0, r0, #4
   40c20:	str	r0, [sp, #12]
   40c24:	ldr	r0, [fp, #-4]
   40c28:	ldr	r1, [sp, #16]
   40c2c:	ldr	r2, [fp, #8]
   40c30:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   40c34:	ldr	r0, [fp, #-4]
   40c38:	ldr	r1, [r0, #32]
   40c3c:	add	r1, r1, #1
   40c40:	str	r1, [r0, #32]
   40c44:	ldr	r0, [fp, #-4]
   40c48:	ldr	r1, [r0, #20]
   40c4c:	add	r2, r1, #1
   40c50:	str	r2, [r0, #20]
   40c54:	movw	r0, #91	; 0x5b
   40c58:	strb	r0, [r1]
   40c5c:	ldr	r0, [sp, #8]
   40c60:	cmp	r0, #0
   40c64:	beq	40cec <flatcc_json_printer_double_vector_field@@Base+0x160>
   40c68:	b	40c6c <flatcc_json_printer_double_vector_field@@Base+0xe0>
   40c6c:	ldr	r0, [fp, #-4]
   40c70:	ldrsb	r0, [r0, #25]
   40c74:	cmp	r0, #0
   40c78:	beq	40ca0 <flatcc_json_printer_double_vector_field@@Base+0x114>
   40c7c:	ldr	r0, [fp, #-4]
   40c80:	ldr	r1, [r0, #20]
   40c84:	add	r2, r1, #1
   40c88:	str	r2, [r0, #20]
   40c8c:	movw	r0, #10
   40c90:	strb	r0, [r1]
   40c94:	ldr	r0, [fp, #-4]
   40c98:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   40c9c:	b	40ca8 <flatcc_json_printer_double_vector_field@@Base+0x11c>
   40ca0:	ldr	r0, [fp, #-4]
   40ca4:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   40ca8:	b	40cac <flatcc_json_printer_double_vector_field@@Base+0x120>
   40cac:	ldr	r0, [sp, #12]
   40cb0:	bl	3d5d0 <flatcc_json_printer_double_field@@Base+0x104>
   40cb4:	ldr	r0, [fp, #-4]
   40cb8:	ldr	r0, [r0, #20]
   40cbc:	bl	399a0 <flatcc_json_printer_fmt_float@@Base+0x2c>
   40cc0:	ldr	r1, [fp, #-4]
   40cc4:	ldr	r2, [r1, #20]
   40cc8:	add	r0, r2, r0
   40ccc:	str	r0, [r1, #20]
   40cd0:	ldr	r0, [sp, #12]
   40cd4:	add	r0, r0, #8
   40cd8:	str	r0, [sp, #12]
   40cdc:	ldr	r0, [sp, #8]
   40ce0:	mvn	r1, #0
   40ce4:	add	r0, r0, r1
   40ce8:	str	r0, [sp, #8]
   40cec:	b	40cf0 <flatcc_json_printer_double_vector_field@@Base+0x164>
   40cf0:	ldr	r0, [sp, #8]
   40cf4:	mvn	r1, #0
   40cf8:	add	r1, r0, r1
   40cfc:	str	r1, [sp, #8]
   40d00:	cmp	r0, #0
   40d04:	beq	40d94 <flatcc_json_printer_double_vector_field@@Base+0x208>
   40d08:	ldr	r0, [fp, #-4]
   40d0c:	ldr	r1, [r0, #20]
   40d10:	add	r2, r1, #1
   40d14:	str	r2, [r0, #20]
   40d18:	movw	r0, #44	; 0x2c
   40d1c:	strb	r0, [r1]
   40d20:	ldr	r0, [fp, #-4]
   40d24:	ldrsb	r0, [r0, #25]
   40d28:	cmp	r0, #0
   40d2c:	beq	40d54 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   40d30:	ldr	r0, [fp, #-4]
   40d34:	ldr	r1, [r0, #20]
   40d38:	add	r2, r1, #1
   40d3c:	str	r2, [r0, #20]
   40d40:	movw	r0, #10
   40d44:	strb	r0, [r1]
   40d48:	ldr	r0, [fp, #-4]
   40d4c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   40d50:	b	40d5c <flatcc_json_printer_double_vector_field@@Base+0x1d0>
   40d54:	ldr	r0, [fp, #-4]
   40d58:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   40d5c:	b	40d60 <flatcc_json_printer_double_vector_field@@Base+0x1d4>
   40d60:	ldr	r0, [sp, #12]
   40d64:	bl	3d5d0 <flatcc_json_printer_double_field@@Base+0x104>
   40d68:	ldr	r0, [fp, #-4]
   40d6c:	ldr	r0, [r0, #20]
   40d70:	bl	399a0 <flatcc_json_printer_fmt_float@@Base+0x2c>
   40d74:	ldr	r1, [fp, #-4]
   40d78:	ldr	r2, [r1, #20]
   40d7c:	add	r0, r2, r0
   40d80:	str	r0, [r1, #20]
   40d84:	ldr	r0, [sp, #12]
   40d88:	add	r0, r0, #8
   40d8c:	str	r0, [sp, #12]
   40d90:	b	40cf0 <flatcc_json_printer_double_vector_field@@Base+0x164>
   40d94:	b	40d98 <flatcc_json_printer_double_vector_field@@Base+0x20c>
   40d98:	ldr	r0, [fp, #-4]
   40d9c:	ldrsb	r0, [r0, #25]
   40da0:	cmp	r0, #0
   40da4:	beq	40ddc <flatcc_json_printer_double_vector_field@@Base+0x250>
   40da8:	ldr	r0, [fp, #-4]
   40dac:	ldr	r1, [r0, #20]
   40db0:	add	r2, r1, #1
   40db4:	str	r2, [r0, #20]
   40db8:	movw	r0, #10
   40dbc:	strb	r0, [r1]
   40dc0:	ldr	r0, [fp, #-4]
   40dc4:	ldr	r1, [r0, #32]
   40dc8:	mvn	r2, #0
   40dcc:	add	r1, r1, r2
   40dd0:	str	r1, [r0, #32]
   40dd4:	ldr	r0, [fp, #-4]
   40dd8:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   40ddc:	ldr	r0, [fp, #-4]
   40de0:	ldr	r1, [r0, #20]
   40de4:	add	r2, r1, #1
   40de8:	str	r2, [r0, #20]
   40dec:	movw	r0, #93	; 0x5d
   40df0:	strb	r0, [r1]
   40df4:	b	40df8 <flatcc_json_printer_double_vector_field@@Base+0x26c>
   40df8:	mov	sp, fp
   40dfc:	pop	{fp, pc}

00040e00 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   40e00:	push	{fp, lr}
   40e04:	mov	fp, sp
   40e08:	sub	sp, sp, #56	; 0x38
   40e0c:	ldr	ip, [fp, #12]
   40e10:	ldr	lr, [fp, #8]
   40e14:	str	r0, [fp, #-4]
   40e18:	str	r1, [fp, #-8]
   40e1c:	str	r2, [fp, #-12]
   40e20:	str	r3, [fp, #-16]
   40e24:	ldr	r0, [fp, #-4]
   40e28:	ldrsb	r0, [r0, #27]
   40e2c:	cmp	r0, #0
   40e30:	beq	40e54 <flatcc_json_printer_utype_enum_vector_field@@Base+0x54>
   40e34:	ldr	r0, [fp, #-4]
   40e38:	ldr	r1, [fp, #-8]
   40e3c:	ldr	r2, [fp, #-12]
   40e40:	ldr	r3, [fp, #-16]
   40e44:	ldr	ip, [fp, #8]
   40e48:	str	ip, [sp]
   40e4c:	bl	3f00c <flatcc_json_printer_utype_vector_field@@Base>
   40e50:	b	410c4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   40e54:	ldr	r0, [fp, #-8]
   40e58:	ldr	r1, [fp, #-12]
   40e5c:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   40e60:	str	r0, [fp, #-20]	; 0xffffffec
   40e64:	ldr	r0, [fp, #-20]	; 0xffffffec
   40e68:	movw	r1, #0
   40e6c:	cmp	r0, r1
   40e70:	beq	410c4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   40e74:	ldr	r0, [fp, #-8]
   40e78:	ldr	r1, [r0, #16]
   40e7c:	add	r2, r1, #1
   40e80:	str	r2, [r0, #16]
   40e84:	cmp	r1, #0
   40e88:	beq	40ea4 <flatcc_json_printer_utype_enum_vector_field@@Base+0xa4>
   40e8c:	ldr	r0, [fp, #-4]
   40e90:	ldr	r1, [r0, #20]
   40e94:	add	r2, r1, #1
   40e98:	str	r2, [r0, #20]
   40e9c:	movw	r0, #44	; 0x2c
   40ea0:	strb	r0, [r1]
   40ea4:	ldr	r0, [fp, #-20]	; 0xffffffec
   40ea8:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   40eac:	str	r0, [fp, #-20]	; 0xffffffec
   40eb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   40eb4:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40eb8:	str	r0, [fp, #-24]	; 0xffffffe8
   40ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   40ec0:	add	r0, r0, #4
   40ec4:	str	r0, [fp, #-20]	; 0xffffffec
   40ec8:	ldr	r0, [fp, #-4]
   40ecc:	ldr	r1, [fp, #-16]
   40ed0:	ldr	r2, [fp, #8]
   40ed4:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   40ed8:	ldr	r0, [fp, #-4]
   40edc:	ldr	r1, [r0, #32]
   40ee0:	add	r1, r1, #1
   40ee4:	str	r1, [r0, #32]
   40ee8:	ldr	r0, [fp, #-4]
   40eec:	ldr	r1, [r0, #20]
   40ef0:	add	r2, r1, #1
   40ef4:	str	r2, [r0, #20]
   40ef8:	movw	r0, #91	; 0x5b
   40efc:	strb	r0, [r1]
   40f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40f04:	cmp	r0, #0
   40f08:	beq	40fa4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a4>
   40f0c:	b	40f10 <flatcc_json_printer_utype_enum_vector_field@@Base+0x110>
   40f10:	ldr	r0, [fp, #-4]
   40f14:	ldrsb	r0, [r0, #25]
   40f18:	cmp	r0, #0
   40f1c:	beq	40f44 <flatcc_json_printer_utype_enum_vector_field@@Base+0x144>
   40f20:	ldr	r0, [fp, #-4]
   40f24:	ldr	r1, [r0, #20]
   40f28:	add	r2, r1, #1
   40f2c:	str	r2, [r0, #20]
   40f30:	movw	r0, #10
   40f34:	strb	r0, [r1]
   40f38:	ldr	r0, [fp, #-4]
   40f3c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   40f40:	b	40f4c <flatcc_json_printer_utype_enum_vector_field@@Base+0x14c>
   40f44:	ldr	r0, [fp, #-4]
   40f48:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   40f4c:	b	40f50 <flatcc_json_printer_utype_enum_vector_field@@Base+0x150>
   40f50:	ldr	r0, [fp, #12]
   40f54:	ldr	r1, [fp, #-4]
   40f58:	ldr	r2, [fp, #-20]	; 0xffffffec
   40f5c:	str	r0, [sp, #28]
   40f60:	mov	r0, r2
   40f64:	str	r1, [sp, #24]
   40f68:	bl	3f2ac <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   40f6c:	ldr	r1, [sp, #24]
   40f70:	str	r0, [sp, #20]
   40f74:	mov	r0, r1
   40f78:	ldr	r2, [sp, #20]
   40f7c:	and	r1, r2, #255	; 0xff
   40f80:	ldr	r3, [sp, #28]
   40f84:	blx	r3
   40f88:	ldr	r0, [fp, #-20]	; 0xffffffec
   40f8c:	add	r0, r0, #1
   40f90:	str	r0, [fp, #-20]	; 0xffffffec
   40f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40f98:	mvn	r1, #0
   40f9c:	add	r0, r0, r1
   40fa0:	str	r0, [fp, #-24]	; 0xffffffe8
   40fa4:	b	40fa8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
   40fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40fac:	mvn	r1, #0
   40fb0:	add	r1, r0, r1
   40fb4:	str	r1, [fp, #-24]	; 0xffffffe8
   40fb8:	cmp	r0, #0
   40fbc:	beq	41060 <flatcc_json_printer_utype_enum_vector_field@@Base+0x260>
   40fc0:	ldr	r0, [fp, #-4]
   40fc4:	ldr	r1, [r0, #20]
   40fc8:	add	r2, r1, #1
   40fcc:	str	r2, [r0, #20]
   40fd0:	movw	r0, #44	; 0x2c
   40fd4:	strb	r0, [r1]
   40fd8:	ldr	r0, [fp, #-4]
   40fdc:	ldrsb	r0, [r0, #25]
   40fe0:	cmp	r0, #0
   40fe4:	beq	4100c <flatcc_json_printer_utype_enum_vector_field@@Base+0x20c>
   40fe8:	ldr	r0, [fp, #-4]
   40fec:	ldr	r1, [r0, #20]
   40ff0:	add	r2, r1, #1
   40ff4:	str	r2, [r0, #20]
   40ff8:	movw	r0, #10
   40ffc:	strb	r0, [r1]
   41000:	ldr	r0, [fp, #-4]
   41004:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   41008:	b	41014 <flatcc_json_printer_utype_enum_vector_field@@Base+0x214>
   4100c:	ldr	r0, [fp, #-4]
   41010:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   41014:	b	41018 <flatcc_json_printer_utype_enum_vector_field@@Base+0x218>
   41018:	ldr	r0, [fp, #12]
   4101c:	ldr	r1, [fp, #-4]
   41020:	ldr	r2, [fp, #-20]	; 0xffffffec
   41024:	str	r0, [sp, #16]
   41028:	mov	r0, r2
   4102c:	str	r1, [sp, #12]
   41030:	bl	3f2ac <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   41034:	ldr	r1, [sp, #12]
   41038:	str	r0, [sp, #8]
   4103c:	mov	r0, r1
   41040:	ldr	r2, [sp, #8]
   41044:	and	r1, r2, #255	; 0xff
   41048:	ldr	r3, [sp, #16]
   4104c:	blx	r3
   41050:	ldr	r0, [fp, #-20]	; 0xffffffec
   41054:	add	r0, r0, #1
   41058:	str	r0, [fp, #-20]	; 0xffffffec
   4105c:	b	40fa8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
   41060:	b	41064 <flatcc_json_printer_utype_enum_vector_field@@Base+0x264>
   41064:	ldr	r0, [fp, #-4]
   41068:	ldrsb	r0, [r0, #25]
   4106c:	cmp	r0, #0
   41070:	beq	410a8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a8>
   41074:	ldr	r0, [fp, #-4]
   41078:	ldr	r1, [r0, #20]
   4107c:	add	r2, r1, #1
   41080:	str	r2, [r0, #20]
   41084:	movw	r0, #10
   41088:	strb	r0, [r1]
   4108c:	ldr	r0, [fp, #-4]
   41090:	ldr	r1, [r0, #32]
   41094:	mvn	r2, #0
   41098:	add	r1, r1, r2
   4109c:	str	r1, [r0, #32]
   410a0:	ldr	r0, [fp, #-4]
   410a4:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   410a8:	ldr	r0, [fp, #-4]
   410ac:	ldr	r1, [r0, #20]
   410b0:	add	r2, r1, #1
   410b4:	str	r2, [r0, #20]
   410b8:	movw	r0, #93	; 0x5d
   410bc:	strb	r0, [r1]
   410c0:	b	410c4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   410c4:	mov	sp, fp
   410c8:	pop	{fp, pc}

000410cc <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   410cc:	push	{fp, lr}
   410d0:	mov	fp, sp
   410d4:	sub	sp, sp, #56	; 0x38
   410d8:	ldr	ip, [fp, #12]
   410dc:	ldr	lr, [fp, #8]
   410e0:	str	r0, [fp, #-4]
   410e4:	str	r1, [fp, #-8]
   410e8:	str	r2, [fp, #-12]
   410ec:	str	r3, [fp, #-16]
   410f0:	ldr	r0, [fp, #-4]
   410f4:	ldrsb	r0, [r0, #27]
   410f8:	cmp	r0, #0
   410fc:	beq	41120 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x54>
   41100:	ldr	r0, [fp, #-4]
   41104:	ldr	r1, [fp, #-8]
   41108:	ldr	r2, [fp, #-12]
   4110c:	ldr	r3, [fp, #-16]
   41110:	ldr	ip, [fp, #8]
   41114:	str	ip, [sp]
   41118:	bl	3f2d4 <flatcc_json_printer_uint8_vector_field@@Base>
   4111c:	b	41390 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   41120:	ldr	r0, [fp, #-8]
   41124:	ldr	r1, [fp, #-12]
   41128:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   4112c:	str	r0, [fp, #-20]	; 0xffffffec
   41130:	ldr	r0, [fp, #-20]	; 0xffffffec
   41134:	movw	r1, #0
   41138:	cmp	r0, r1
   4113c:	beq	41390 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   41140:	ldr	r0, [fp, #-8]
   41144:	ldr	r1, [r0, #16]
   41148:	add	r2, r1, #1
   4114c:	str	r2, [r0, #16]
   41150:	cmp	r1, #0
   41154:	beq	41170 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xa4>
   41158:	ldr	r0, [fp, #-4]
   4115c:	ldr	r1, [r0, #20]
   41160:	add	r2, r1, #1
   41164:	str	r2, [r0, #20]
   41168:	movw	r0, #44	; 0x2c
   4116c:	strb	r0, [r1]
   41170:	ldr	r0, [fp, #-20]	; 0xffffffec
   41174:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   41178:	str	r0, [fp, #-20]	; 0xffffffec
   4117c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41180:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   41184:	str	r0, [fp, #-24]	; 0xffffffe8
   41188:	ldr	r0, [fp, #-20]	; 0xffffffec
   4118c:	add	r0, r0, #4
   41190:	str	r0, [fp, #-20]	; 0xffffffec
   41194:	ldr	r0, [fp, #-4]
   41198:	ldr	r1, [fp, #-16]
   4119c:	ldr	r2, [fp, #8]
   411a0:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   411a4:	ldr	r0, [fp, #-4]
   411a8:	ldr	r1, [r0, #32]
   411ac:	add	r1, r1, #1
   411b0:	str	r1, [r0, #32]
   411b4:	ldr	r0, [fp, #-4]
   411b8:	ldr	r1, [r0, #20]
   411bc:	add	r2, r1, #1
   411c0:	str	r2, [r0, #20]
   411c4:	movw	r0, #91	; 0x5b
   411c8:	strb	r0, [r1]
   411cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   411d0:	cmp	r0, #0
   411d4:	beq	41270 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a4>
   411d8:	b	411dc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x110>
   411dc:	ldr	r0, [fp, #-4]
   411e0:	ldrsb	r0, [r0, #25]
   411e4:	cmp	r0, #0
   411e8:	beq	41210 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x144>
   411ec:	ldr	r0, [fp, #-4]
   411f0:	ldr	r1, [r0, #20]
   411f4:	add	r2, r1, #1
   411f8:	str	r2, [r0, #20]
   411fc:	movw	r0, #10
   41200:	strb	r0, [r1]
   41204:	ldr	r0, [fp, #-4]
   41208:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   4120c:	b	41218 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14c>
   41210:	ldr	r0, [fp, #-4]
   41214:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   41218:	b	4121c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x150>
   4121c:	ldr	r0, [fp, #12]
   41220:	ldr	r1, [fp, #-4]
   41224:	ldr	r2, [fp, #-20]	; 0xffffffec
   41228:	str	r0, [sp, #28]
   4122c:	mov	r0, r2
   41230:	str	r1, [sp, #24]
   41234:	bl	3c8ec <flatcc_json_printer_uint8_field@@Base+0x108>
   41238:	ldr	r1, [sp, #24]
   4123c:	str	r0, [sp, #20]
   41240:	mov	r0, r1
   41244:	ldr	r2, [sp, #20]
   41248:	and	r1, r2, #255	; 0xff
   4124c:	ldr	r3, [sp, #28]
   41250:	blx	r3
   41254:	ldr	r0, [fp, #-20]	; 0xffffffec
   41258:	add	r0, r0, #1
   4125c:	str	r0, [fp, #-20]	; 0xffffffec
   41260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41264:	mvn	r1, #0
   41268:	add	r0, r0, r1
   4126c:	str	r0, [fp, #-24]	; 0xffffffe8
   41270:	b	41274 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
   41274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41278:	mvn	r1, #0
   4127c:	add	r1, r0, r1
   41280:	str	r1, [fp, #-24]	; 0xffffffe8
   41284:	cmp	r0, #0
   41288:	beq	4132c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x260>
   4128c:	ldr	r0, [fp, #-4]
   41290:	ldr	r1, [r0, #20]
   41294:	add	r2, r1, #1
   41298:	str	r2, [r0, #20]
   4129c:	movw	r0, #44	; 0x2c
   412a0:	strb	r0, [r1]
   412a4:	ldr	r0, [fp, #-4]
   412a8:	ldrsb	r0, [r0, #25]
   412ac:	cmp	r0, #0
   412b0:	beq	412d8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x20c>
   412b4:	ldr	r0, [fp, #-4]
   412b8:	ldr	r1, [r0, #20]
   412bc:	add	r2, r1, #1
   412c0:	str	r2, [r0, #20]
   412c4:	movw	r0, #10
   412c8:	strb	r0, [r1]
   412cc:	ldr	r0, [fp, #-4]
   412d0:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   412d4:	b	412e0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x214>
   412d8:	ldr	r0, [fp, #-4]
   412dc:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   412e0:	b	412e4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x218>
   412e4:	ldr	r0, [fp, #12]
   412e8:	ldr	r1, [fp, #-4]
   412ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   412f0:	str	r0, [sp, #16]
   412f4:	mov	r0, r2
   412f8:	str	r1, [sp, #12]
   412fc:	bl	3c8ec <flatcc_json_printer_uint8_field@@Base+0x108>
   41300:	ldr	r1, [sp, #12]
   41304:	str	r0, [sp, #8]
   41308:	mov	r0, r1
   4130c:	ldr	r2, [sp, #8]
   41310:	and	r1, r2, #255	; 0xff
   41314:	ldr	r3, [sp, #16]
   41318:	blx	r3
   4131c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41320:	add	r0, r0, #1
   41324:	str	r0, [fp, #-20]	; 0xffffffec
   41328:	b	41274 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
   4132c:	b	41330 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x264>
   41330:	ldr	r0, [fp, #-4]
   41334:	ldrsb	r0, [r0, #25]
   41338:	cmp	r0, #0
   4133c:	beq	41374 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a8>
   41340:	ldr	r0, [fp, #-4]
   41344:	ldr	r1, [r0, #20]
   41348:	add	r2, r1, #1
   4134c:	str	r2, [r0, #20]
   41350:	movw	r0, #10
   41354:	strb	r0, [r1]
   41358:	ldr	r0, [fp, #-4]
   4135c:	ldr	r1, [r0, #32]
   41360:	mvn	r2, #0
   41364:	add	r1, r1, r2
   41368:	str	r1, [r0, #32]
   4136c:	ldr	r0, [fp, #-4]
   41370:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   41374:	ldr	r0, [fp, #-4]
   41378:	ldr	r1, [r0, #20]
   4137c:	add	r2, r1, #1
   41380:	str	r2, [r0, #20]
   41384:	movw	r0, #93	; 0x5d
   41388:	strb	r0, [r1]
   4138c:	b	41390 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   41390:	mov	sp, fp
   41394:	pop	{fp, pc}

00041398 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   41398:	push	{fp, lr}
   4139c:	mov	fp, sp
   413a0:	sub	sp, sp, #56	; 0x38
   413a4:	ldr	ip, [fp, #12]
   413a8:	ldr	lr, [fp, #8]
   413ac:	str	r0, [fp, #-4]
   413b0:	str	r1, [fp, #-8]
   413b4:	str	r2, [fp, #-12]
   413b8:	str	r3, [fp, #-16]
   413bc:	ldr	r0, [fp, #-4]
   413c0:	ldrsb	r0, [r0, #27]
   413c4:	cmp	r0, #0
   413c8:	beq	413ec <flatcc_json_printer_uint16_enum_vector_field@@Base+0x54>
   413cc:	ldr	r0, [fp, #-4]
   413d0:	ldr	r1, [fp, #-8]
   413d4:	ldr	r2, [fp, #-12]
   413d8:	ldr	r3, [fp, #-16]
   413dc:	ldr	ip, [fp, #8]
   413e0:	str	ip, [sp]
   413e4:	bl	3f550 <flatcc_json_printer_uint16_vector_field@@Base>
   413e8:	b	4165c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   413ec:	ldr	r0, [fp, #-8]
   413f0:	ldr	r1, [fp, #-12]
   413f4:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   413f8:	str	r0, [fp, #-20]	; 0xffffffec
   413fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   41400:	movw	r1, #0
   41404:	cmp	r0, r1
   41408:	beq	4165c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   4140c:	ldr	r0, [fp, #-8]
   41410:	ldr	r1, [r0, #16]
   41414:	add	r2, r1, #1
   41418:	str	r2, [r0, #16]
   4141c:	cmp	r1, #0
   41420:	beq	4143c <flatcc_json_printer_uint16_enum_vector_field@@Base+0xa4>
   41424:	ldr	r0, [fp, #-4]
   41428:	ldr	r1, [r0, #20]
   4142c:	add	r2, r1, #1
   41430:	str	r2, [r0, #20]
   41434:	movw	r0, #44	; 0x2c
   41438:	strb	r0, [r1]
   4143c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41440:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   41444:	str	r0, [fp, #-20]	; 0xffffffec
   41448:	ldr	r0, [fp, #-20]	; 0xffffffec
   4144c:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   41450:	str	r0, [fp, #-24]	; 0xffffffe8
   41454:	ldr	r0, [fp, #-20]	; 0xffffffec
   41458:	add	r0, r0, #4
   4145c:	str	r0, [fp, #-20]	; 0xffffffec
   41460:	ldr	r0, [fp, #-4]
   41464:	ldr	r1, [fp, #-16]
   41468:	ldr	r2, [fp, #8]
   4146c:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   41470:	ldr	r0, [fp, #-4]
   41474:	ldr	r1, [r0, #32]
   41478:	add	r1, r1, #1
   4147c:	str	r1, [r0, #32]
   41480:	ldr	r0, [fp, #-4]
   41484:	ldr	r1, [r0, #20]
   41488:	add	r2, r1, #1
   4148c:	str	r2, [r0, #20]
   41490:	movw	r0, #91	; 0x5b
   41494:	strb	r0, [r1]
   41498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4149c:	cmp	r0, #0
   414a0:	beq	4153c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a4>
   414a4:	b	414a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x110>
   414a8:	ldr	r0, [fp, #-4]
   414ac:	ldrsb	r0, [r0, #25]
   414b0:	cmp	r0, #0
   414b4:	beq	414dc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x144>
   414b8:	ldr	r0, [fp, #-4]
   414bc:	ldr	r1, [r0, #20]
   414c0:	add	r2, r1, #1
   414c4:	str	r2, [r0, #20]
   414c8:	movw	r0, #10
   414cc:	strb	r0, [r1]
   414d0:	ldr	r0, [fp, #-4]
   414d4:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   414d8:	b	414e4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x14c>
   414dc:	ldr	r0, [fp, #-4]
   414e0:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   414e4:	b	414e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x150>
   414e8:	ldr	r0, [fp, #12]
   414ec:	ldr	r1, [fp, #-4]
   414f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   414f4:	str	r0, [sp, #28]
   414f8:	mov	r0, r2
   414fc:	str	r1, [sp, #24]
   41500:	bl	3ca1c <flatcc_json_printer_uint16_field@@Base+0x108>
   41504:	ldr	r1, [sp, #24]
   41508:	str	r0, [sp, #20]
   4150c:	mov	r0, r1
   41510:	ldr	r2, [sp, #20]
   41514:	uxth	r1, r2
   41518:	ldr	r3, [sp, #28]
   4151c:	blx	r3
   41520:	ldr	r0, [fp, #-20]	; 0xffffffec
   41524:	add	r0, r0, #2
   41528:	str	r0, [fp, #-20]	; 0xffffffec
   4152c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41530:	mvn	r1, #0
   41534:	add	r0, r0, r1
   41538:	str	r0, [fp, #-24]	; 0xffffffe8
   4153c:	b	41540 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a8>
   41540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41544:	mvn	r1, #0
   41548:	add	r1, r0, r1
   4154c:	str	r1, [fp, #-24]	; 0xffffffe8
   41550:	cmp	r0, #0
   41554:	beq	415f8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x260>
   41558:	ldr	r0, [fp, #-4]
   4155c:	ldr	r1, [r0, #20]
   41560:	add	r2, r1, #1
   41564:	str	r2, [r0, #20]
   41568:	movw	r0, #44	; 0x2c
   4156c:	strb	r0, [r1]
   41570:	ldr	r0, [fp, #-4]
   41574:	ldrsb	r0, [r0, #25]
   41578:	cmp	r0, #0
   4157c:	beq	415a4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x20c>
   41580:	ldr	r0, [fp, #-4]
   41584:	ldr	r1, [r0, #20]
   41588:	add	r2, r1, #1
   4158c:	str	r2, [r0, #20]
   41590:	movw	r0, #10
   41594:	strb	r0, [r1]
   41598:	ldr	r0, [fp, #-4]
   4159c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   415a0:	b	415ac <flatcc_json_printer_uint16_enum_vector_field@@Base+0x214>
   415a4:	ldr	r0, [fp, #-4]
   415a8:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   415ac:	b	415b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x218>
   415b0:	ldr	r0, [fp, #12]
   415b4:	ldr	r1, [fp, #-4]
   415b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   415bc:	str	r0, [sp, #16]
   415c0:	mov	r0, r2
   415c4:	str	r1, [sp, #12]
   415c8:	bl	3ca1c <flatcc_json_printer_uint16_field@@Base+0x108>
   415cc:	ldr	r1, [sp, #12]
   415d0:	str	r0, [sp, #8]
   415d4:	mov	r0, r1
   415d8:	ldr	r2, [sp, #8]
   415dc:	uxth	r1, r2
   415e0:	ldr	r3, [sp, #16]
   415e4:	blx	r3
   415e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   415ec:	add	r0, r0, #2
   415f0:	str	r0, [fp, #-20]	; 0xffffffec
   415f4:	b	41540 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a8>
   415f8:	b	415fc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x264>
   415fc:	ldr	r0, [fp, #-4]
   41600:	ldrsb	r0, [r0, #25]
   41604:	cmp	r0, #0
   41608:	beq	41640 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a8>
   4160c:	ldr	r0, [fp, #-4]
   41610:	ldr	r1, [r0, #20]
   41614:	add	r2, r1, #1
   41618:	str	r2, [r0, #20]
   4161c:	movw	r0, #10
   41620:	strb	r0, [r1]
   41624:	ldr	r0, [fp, #-4]
   41628:	ldr	r1, [r0, #32]
   4162c:	mvn	r2, #0
   41630:	add	r1, r1, r2
   41634:	str	r1, [r0, #32]
   41638:	ldr	r0, [fp, #-4]
   4163c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   41640:	ldr	r0, [fp, #-4]
   41644:	ldr	r1, [r0, #20]
   41648:	add	r2, r1, #1
   4164c:	str	r2, [r0, #20]
   41650:	movw	r0, #93	; 0x5d
   41654:	strb	r0, [r1]
   41658:	b	4165c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   4165c:	mov	sp, fp
   41660:	pop	{fp, pc}

00041664 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   41664:	push	{fp, lr}
   41668:	mov	fp, sp
   4166c:	sub	sp, sp, #56	; 0x38
   41670:	ldr	ip, [fp, #12]
   41674:	ldr	lr, [fp, #8]
   41678:	str	r0, [fp, #-4]
   4167c:	str	r1, [fp, #-8]
   41680:	str	r2, [fp, #-12]
   41684:	str	r3, [fp, #-16]
   41688:	ldr	r0, [fp, #-4]
   4168c:	ldrsb	r0, [r0, #27]
   41690:	cmp	r0, #0
   41694:	beq	416b8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x54>
   41698:	ldr	r0, [fp, #-4]
   4169c:	ldr	r1, [fp, #-8]
   416a0:	ldr	r2, [fp, #-12]
   416a4:	ldr	r3, [fp, #-16]
   416a8:	ldr	ip, [fp, #8]
   416ac:	str	ip, [sp]
   416b0:	bl	3f7cc <flatcc_json_printer_uint32_vector_field@@Base>
   416b4:	b	41920 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2bc>
   416b8:	ldr	r0, [fp, #-8]
   416bc:	ldr	r1, [fp, #-12]
   416c0:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   416c4:	str	r0, [fp, #-20]	; 0xffffffec
   416c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   416cc:	movw	r1, #0
   416d0:	cmp	r0, r1
   416d4:	beq	41920 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2bc>
   416d8:	ldr	r0, [fp, #-8]
   416dc:	ldr	r1, [r0, #16]
   416e0:	add	r2, r1, #1
   416e4:	str	r2, [r0, #16]
   416e8:	cmp	r1, #0
   416ec:	beq	41708 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xa4>
   416f0:	ldr	r0, [fp, #-4]
   416f4:	ldr	r1, [r0, #20]
   416f8:	add	r2, r1, #1
   416fc:	str	r2, [r0, #20]
   41700:	movw	r0, #44	; 0x2c
   41704:	strb	r0, [r1]
   41708:	ldr	r0, [fp, #-20]	; 0xffffffec
   4170c:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   41710:	str	r0, [fp, #-20]	; 0xffffffec
   41714:	ldr	r0, [fp, #-20]	; 0xffffffec
   41718:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   4171c:	str	r0, [fp, #-24]	; 0xffffffe8
   41720:	ldr	r0, [fp, #-20]	; 0xffffffec
   41724:	add	r0, r0, #4
   41728:	str	r0, [fp, #-20]	; 0xffffffec
   4172c:	ldr	r0, [fp, #-4]
   41730:	ldr	r1, [fp, #-16]
   41734:	ldr	r2, [fp, #8]
   41738:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   4173c:	ldr	r0, [fp, #-4]
   41740:	ldr	r1, [r0, #32]
   41744:	add	r1, r1, #1
   41748:	str	r1, [r0, #32]
   4174c:	ldr	r0, [fp, #-4]
   41750:	ldr	r1, [r0, #20]
   41754:	add	r2, r1, #1
   41758:	str	r2, [r0, #20]
   4175c:	movw	r0, #91	; 0x5b
   41760:	strb	r0, [r1]
   41764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41768:	cmp	r0, #0
   4176c:	beq	41804 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a0>
   41770:	b	41774 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x110>
   41774:	ldr	r0, [fp, #-4]
   41778:	ldrsb	r0, [r0, #25]
   4177c:	cmp	r0, #0
   41780:	beq	417a8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x144>
   41784:	ldr	r0, [fp, #-4]
   41788:	ldr	r1, [r0, #20]
   4178c:	add	r2, r1, #1
   41790:	str	r2, [r0, #20]
   41794:	movw	r0, #10
   41798:	strb	r0, [r1]
   4179c:	ldr	r0, [fp, #-4]
   417a0:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   417a4:	b	417b0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14c>
   417a8:	ldr	r0, [fp, #-4]
   417ac:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   417b0:	b	417b4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x150>
   417b4:	ldr	r0, [fp, #12]
   417b8:	ldr	r1, [fp, #-4]
   417bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   417c0:	str	r0, [sp, #28]
   417c4:	mov	r0, r2
   417c8:	str	r1, [sp, #24]
   417cc:	bl	3cb48 <flatcc_json_printer_uint32_field@@Base+0x104>
   417d0:	ldr	r1, [sp, #24]
   417d4:	str	r0, [sp, #20]
   417d8:	mov	r0, r1
   417dc:	ldr	r1, [sp, #20]
   417e0:	ldr	r2, [sp, #28]
   417e4:	blx	r2
   417e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   417ec:	add	r0, r0, #4
   417f0:	str	r0, [fp, #-20]	; 0xffffffec
   417f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   417f8:	mvn	r1, #0
   417fc:	add	r0, r0, r1
   41800:	str	r0, [fp, #-24]	; 0xffffffe8
   41804:	b	41808 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a4>
   41808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4180c:	mvn	r1, #0
   41810:	add	r1, r0, r1
   41814:	str	r1, [fp, #-24]	; 0xffffffe8
   41818:	cmp	r0, #0
   4181c:	beq	418bc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x258>
   41820:	ldr	r0, [fp, #-4]
   41824:	ldr	r1, [r0, #20]
   41828:	add	r2, r1, #1
   4182c:	str	r2, [r0, #20]
   41830:	movw	r0, #44	; 0x2c
   41834:	strb	r0, [r1]
   41838:	ldr	r0, [fp, #-4]
   4183c:	ldrsb	r0, [r0, #25]
   41840:	cmp	r0, #0
   41844:	beq	4186c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x208>
   41848:	ldr	r0, [fp, #-4]
   4184c:	ldr	r1, [r0, #20]
   41850:	add	r2, r1, #1
   41854:	str	r2, [r0, #20]
   41858:	movw	r0, #10
   4185c:	strb	r0, [r1]
   41860:	ldr	r0, [fp, #-4]
   41864:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   41868:	b	41874 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
   4186c:	ldr	r0, [fp, #-4]
   41870:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   41874:	b	41878 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x214>
   41878:	ldr	r0, [fp, #12]
   4187c:	ldr	r1, [fp, #-4]
   41880:	ldr	r2, [fp, #-20]	; 0xffffffec
   41884:	str	r0, [sp, #16]
   41888:	mov	r0, r2
   4188c:	str	r1, [sp, #12]
   41890:	bl	3cb48 <flatcc_json_printer_uint32_field@@Base+0x104>
   41894:	ldr	r1, [sp, #12]
   41898:	str	r0, [sp, #8]
   4189c:	mov	r0, r1
   418a0:	ldr	r1, [sp, #8]
   418a4:	ldr	r2, [sp, #16]
   418a8:	blx	r2
   418ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   418b0:	add	r0, r0, #4
   418b4:	str	r0, [fp, #-20]	; 0xffffffec
   418b8:	b	41808 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a4>
   418bc:	b	418c0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x25c>
   418c0:	ldr	r0, [fp, #-4]
   418c4:	ldrsb	r0, [r0, #25]
   418c8:	cmp	r0, #0
   418cc:	beq	41904 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a0>
   418d0:	ldr	r0, [fp, #-4]
   418d4:	ldr	r1, [r0, #20]
   418d8:	add	r2, r1, #1
   418dc:	str	r2, [r0, #20]
   418e0:	movw	r0, #10
   418e4:	strb	r0, [r1]
   418e8:	ldr	r0, [fp, #-4]
   418ec:	ldr	r1, [r0, #32]
   418f0:	mvn	r2, #0
   418f4:	add	r1, r1, r2
   418f8:	str	r1, [r0, #32]
   418fc:	ldr	r0, [fp, #-4]
   41900:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   41904:	ldr	r0, [fp, #-4]
   41908:	ldr	r1, [r0, #20]
   4190c:	add	r2, r1, #1
   41910:	str	r2, [r0, #20]
   41914:	movw	r0, #93	; 0x5d
   41918:	strb	r0, [r1]
   4191c:	b	41920 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2bc>
   41920:	mov	sp, fp
   41924:	pop	{fp, pc}

00041928 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   41928:	push	{fp, lr}
   4192c:	mov	fp, sp
   41930:	sub	sp, sp, #56	; 0x38
   41934:	ldr	ip, [fp, #12]
   41938:	ldr	lr, [fp, #8]
   4193c:	str	r0, [fp, #-4]
   41940:	str	r1, [fp, #-8]
   41944:	str	r2, [fp, #-12]
   41948:	str	r3, [fp, #-16]
   4194c:	ldr	r0, [fp, #-4]
   41950:	ldrsb	r0, [r0, #27]
   41954:	cmp	r0, #0
   41958:	beq	4197c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x54>
   4195c:	ldr	r0, [fp, #-4]
   41960:	ldr	r1, [fp, #-8]
   41964:	ldr	r2, [fp, #-12]
   41968:	ldr	r3, [fp, #-16]
   4196c:	ldr	ip, [fp, #8]
   41970:	str	ip, [sp]
   41974:	bl	3fa40 <flatcc_json_printer_uint64_vector_field@@Base>
   41978:	b	41bec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   4197c:	ldr	r0, [fp, #-8]
   41980:	ldr	r1, [fp, #-12]
   41984:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   41988:	str	r0, [fp, #-20]	; 0xffffffec
   4198c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41990:	movw	r1, #0
   41994:	cmp	r0, r1
   41998:	beq	41bec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   4199c:	ldr	r0, [fp, #-8]
   419a0:	ldr	r1, [r0, #16]
   419a4:	add	r2, r1, #1
   419a8:	str	r2, [r0, #16]
   419ac:	cmp	r1, #0
   419b0:	beq	419cc <flatcc_json_printer_uint64_enum_vector_field@@Base+0xa4>
   419b4:	ldr	r0, [fp, #-4]
   419b8:	ldr	r1, [r0, #20]
   419bc:	add	r2, r1, #1
   419c0:	str	r2, [r0, #20]
   419c4:	movw	r0, #44	; 0x2c
   419c8:	strb	r0, [r1]
   419cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   419d0:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   419d4:	str	r0, [fp, #-20]	; 0xffffffec
   419d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   419dc:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   419e0:	str	r0, [fp, #-24]	; 0xffffffe8
   419e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   419e8:	add	r0, r0, #4
   419ec:	str	r0, [fp, #-20]	; 0xffffffec
   419f0:	ldr	r0, [fp, #-4]
   419f4:	ldr	r1, [fp, #-16]
   419f8:	ldr	r2, [fp, #8]
   419fc:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   41a00:	ldr	r0, [fp, #-4]
   41a04:	ldr	r1, [r0, #32]
   41a08:	add	r1, r1, #1
   41a0c:	str	r1, [r0, #32]
   41a10:	ldr	r0, [fp, #-4]
   41a14:	ldr	r1, [r0, #20]
   41a18:	add	r2, r1, #1
   41a1c:	str	r2, [r0, #20]
   41a20:	movw	r0, #91	; 0x5b
   41a24:	strb	r0, [r1]
   41a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41a2c:	cmp	r0, #0
   41a30:	beq	41acc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a4>
   41a34:	b	41a38 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x110>
   41a38:	ldr	r0, [fp, #-4]
   41a3c:	ldrsb	r0, [r0, #25]
   41a40:	cmp	r0, #0
   41a44:	beq	41a6c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x144>
   41a48:	ldr	r0, [fp, #-4]
   41a4c:	ldr	r1, [r0, #20]
   41a50:	add	r2, r1, #1
   41a54:	str	r2, [r0, #20]
   41a58:	movw	r0, #10
   41a5c:	strb	r0, [r1]
   41a60:	ldr	r0, [fp, #-4]
   41a64:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   41a68:	b	41a74 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x14c>
   41a6c:	ldr	r0, [fp, #-4]
   41a70:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   41a74:	b	41a78 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x150>
   41a78:	ldr	r0, [fp, #12]
   41a7c:	ldr	r1, [fp, #-4]
   41a80:	ldr	r2, [fp, #-20]	; 0xffffffec
   41a84:	str	r0, [sp, #28]
   41a88:	mov	r0, r2
   41a8c:	str	r1, [sp, #24]
   41a90:	bl	3cca0 <flatcc_json_printer_uint64_field@@Base+0x134>
   41a94:	ldr	r2, [sp, #24]
   41a98:	str	r0, [sp, #20]
   41a9c:	mov	r0, r2
   41aa0:	ldr	r2, [sp, #20]
   41aa4:	mov	r3, r1
   41aa8:	ldr	r1, [sp, #28]
   41aac:	blx	r1
   41ab0:	ldr	r0, [fp, #-20]	; 0xffffffec
   41ab4:	add	r0, r0, #8
   41ab8:	str	r0, [fp, #-20]	; 0xffffffec
   41abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41ac0:	mvn	r1, #0
   41ac4:	add	r0, r0, r1
   41ac8:	str	r0, [fp, #-24]	; 0xffffffe8
   41acc:	b	41ad0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
   41ad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41ad4:	mvn	r1, #0
   41ad8:	add	r1, r0, r1
   41adc:	str	r1, [fp, #-24]	; 0xffffffe8
   41ae0:	cmp	r0, #0
   41ae4:	beq	41b88 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x260>
   41ae8:	ldr	r0, [fp, #-4]
   41aec:	ldr	r1, [r0, #20]
   41af0:	add	r2, r1, #1
   41af4:	str	r2, [r0, #20]
   41af8:	movw	r0, #44	; 0x2c
   41afc:	strb	r0, [r1]
   41b00:	ldr	r0, [fp, #-4]
   41b04:	ldrsb	r0, [r0, #25]
   41b08:	cmp	r0, #0
   41b0c:	beq	41b34 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x20c>
   41b10:	ldr	r0, [fp, #-4]
   41b14:	ldr	r1, [r0, #20]
   41b18:	add	r2, r1, #1
   41b1c:	str	r2, [r0, #20]
   41b20:	movw	r0, #10
   41b24:	strb	r0, [r1]
   41b28:	ldr	r0, [fp, #-4]
   41b2c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   41b30:	b	41b3c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x214>
   41b34:	ldr	r0, [fp, #-4]
   41b38:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   41b3c:	b	41b40 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x218>
   41b40:	ldr	r0, [fp, #12]
   41b44:	ldr	r1, [fp, #-4]
   41b48:	ldr	r2, [fp, #-20]	; 0xffffffec
   41b4c:	str	r0, [sp, #16]
   41b50:	mov	r0, r2
   41b54:	str	r1, [sp, #12]
   41b58:	bl	3cca0 <flatcc_json_printer_uint64_field@@Base+0x134>
   41b5c:	ldr	r2, [sp, #12]
   41b60:	str	r0, [sp, #8]
   41b64:	mov	r0, r2
   41b68:	ldr	r2, [sp, #8]
   41b6c:	mov	r3, r1
   41b70:	ldr	r1, [sp, #16]
   41b74:	blx	r1
   41b78:	ldr	r0, [fp, #-20]	; 0xffffffec
   41b7c:	add	r0, r0, #8
   41b80:	str	r0, [fp, #-20]	; 0xffffffec
   41b84:	b	41ad0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
   41b88:	b	41b8c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x264>
   41b8c:	ldr	r0, [fp, #-4]
   41b90:	ldrsb	r0, [r0, #25]
   41b94:	cmp	r0, #0
   41b98:	beq	41bd0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a8>
   41b9c:	ldr	r0, [fp, #-4]
   41ba0:	ldr	r1, [r0, #20]
   41ba4:	add	r2, r1, #1
   41ba8:	str	r2, [r0, #20]
   41bac:	movw	r0, #10
   41bb0:	strb	r0, [r1]
   41bb4:	ldr	r0, [fp, #-4]
   41bb8:	ldr	r1, [r0, #32]
   41bbc:	mvn	r2, #0
   41bc0:	add	r1, r1, r2
   41bc4:	str	r1, [r0, #32]
   41bc8:	ldr	r0, [fp, #-4]
   41bcc:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   41bd0:	ldr	r0, [fp, #-4]
   41bd4:	ldr	r1, [r0, #20]
   41bd8:	add	r2, r1, #1
   41bdc:	str	r2, [r0, #20]
   41be0:	movw	r0, #93	; 0x5d
   41be4:	strb	r0, [r1]
   41be8:	b	41bec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   41bec:	mov	sp, fp
   41bf0:	pop	{fp, pc}

00041bf4 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   41bf4:	push	{fp, lr}
   41bf8:	mov	fp, sp
   41bfc:	sub	sp, sp, #56	; 0x38
   41c00:	ldr	ip, [fp, #12]
   41c04:	ldr	lr, [fp, #8]
   41c08:	str	r0, [fp, #-4]
   41c0c:	str	r1, [fp, #-8]
   41c10:	str	r2, [fp, #-12]
   41c14:	str	r3, [fp, #-16]
   41c18:	ldr	r0, [fp, #-4]
   41c1c:	ldrsb	r0, [r0, #27]
   41c20:	cmp	r0, #0
   41c24:	beq	41c48 <flatcc_json_printer_int8_enum_vector_field@@Base+0x54>
   41c28:	ldr	r0, [fp, #-4]
   41c2c:	ldr	r1, [fp, #-8]
   41c30:	ldr	r2, [fp, #-12]
   41c34:	ldr	r3, [fp, #-16]
   41c38:	ldr	ip, [fp, #8]
   41c3c:	str	ip, [sp]
   41c40:	bl	3fcb4 <flatcc_json_printer_int8_vector_field@@Base>
   41c44:	b	41eb8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   41c48:	ldr	r0, [fp, #-8]
   41c4c:	ldr	r1, [fp, #-12]
   41c50:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   41c54:	str	r0, [fp, #-20]	; 0xffffffec
   41c58:	ldr	r0, [fp, #-20]	; 0xffffffec
   41c5c:	movw	r1, #0
   41c60:	cmp	r0, r1
   41c64:	beq	41eb8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   41c68:	ldr	r0, [fp, #-8]
   41c6c:	ldr	r1, [r0, #16]
   41c70:	add	r2, r1, #1
   41c74:	str	r2, [r0, #16]
   41c78:	cmp	r1, #0
   41c7c:	beq	41c98 <flatcc_json_printer_int8_enum_vector_field@@Base+0xa4>
   41c80:	ldr	r0, [fp, #-4]
   41c84:	ldr	r1, [r0, #20]
   41c88:	add	r2, r1, #1
   41c8c:	str	r2, [r0, #20]
   41c90:	movw	r0, #44	; 0x2c
   41c94:	strb	r0, [r1]
   41c98:	ldr	r0, [fp, #-20]	; 0xffffffec
   41c9c:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   41ca0:	str	r0, [fp, #-20]	; 0xffffffec
   41ca4:	ldr	r0, [fp, #-20]	; 0xffffffec
   41ca8:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   41cac:	str	r0, [fp, #-24]	; 0xffffffe8
   41cb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   41cb4:	add	r0, r0, #4
   41cb8:	str	r0, [fp, #-20]	; 0xffffffec
   41cbc:	ldr	r0, [fp, #-4]
   41cc0:	ldr	r1, [fp, #-16]
   41cc4:	ldr	r2, [fp, #8]
   41cc8:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   41ccc:	ldr	r0, [fp, #-4]
   41cd0:	ldr	r1, [r0, #32]
   41cd4:	add	r1, r1, #1
   41cd8:	str	r1, [r0, #32]
   41cdc:	ldr	r0, [fp, #-4]
   41ce0:	ldr	r1, [r0, #20]
   41ce4:	add	r2, r1, #1
   41ce8:	str	r2, [r0, #20]
   41cec:	movw	r0, #91	; 0x5b
   41cf0:	strb	r0, [r1]
   41cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41cf8:	cmp	r0, #0
   41cfc:	beq	41d98 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a4>
   41d00:	b	41d04 <flatcc_json_printer_int8_enum_vector_field@@Base+0x110>
   41d04:	ldr	r0, [fp, #-4]
   41d08:	ldrsb	r0, [r0, #25]
   41d0c:	cmp	r0, #0
   41d10:	beq	41d38 <flatcc_json_printer_int8_enum_vector_field@@Base+0x144>
   41d14:	ldr	r0, [fp, #-4]
   41d18:	ldr	r1, [r0, #20]
   41d1c:	add	r2, r1, #1
   41d20:	str	r2, [r0, #20]
   41d24:	movw	r0, #10
   41d28:	strb	r0, [r1]
   41d2c:	ldr	r0, [fp, #-4]
   41d30:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   41d34:	b	41d40 <flatcc_json_printer_int8_enum_vector_field@@Base+0x14c>
   41d38:	ldr	r0, [fp, #-4]
   41d3c:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   41d40:	b	41d44 <flatcc_json_printer_int8_enum_vector_field@@Base+0x150>
   41d44:	ldr	r0, [fp, #12]
   41d48:	ldr	r1, [fp, #-4]
   41d4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   41d50:	str	r0, [sp, #28]
   41d54:	mov	r0, r2
   41d58:	str	r1, [sp, #24]
   41d5c:	bl	3cddc <flatcc_json_printer_int8_field@@Base+0x108>
   41d60:	ldr	r1, [sp, #24]
   41d64:	str	r0, [sp, #20]
   41d68:	mov	r0, r1
   41d6c:	ldr	r2, [sp, #20]
   41d70:	sxtb	r1, r2
   41d74:	ldr	r3, [sp, #28]
   41d78:	blx	r3
   41d7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41d80:	add	r0, r0, #1
   41d84:	str	r0, [fp, #-20]	; 0xffffffec
   41d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41d8c:	mvn	r1, #0
   41d90:	add	r0, r0, r1
   41d94:	str	r0, [fp, #-24]	; 0xffffffe8
   41d98:	b	41d9c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
   41d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41da0:	mvn	r1, #0
   41da4:	add	r1, r0, r1
   41da8:	str	r1, [fp, #-24]	; 0xffffffe8
   41dac:	cmp	r0, #0
   41db0:	beq	41e54 <flatcc_json_printer_int8_enum_vector_field@@Base+0x260>
   41db4:	ldr	r0, [fp, #-4]
   41db8:	ldr	r1, [r0, #20]
   41dbc:	add	r2, r1, #1
   41dc0:	str	r2, [r0, #20]
   41dc4:	movw	r0, #44	; 0x2c
   41dc8:	strb	r0, [r1]
   41dcc:	ldr	r0, [fp, #-4]
   41dd0:	ldrsb	r0, [r0, #25]
   41dd4:	cmp	r0, #0
   41dd8:	beq	41e00 <flatcc_json_printer_int8_enum_vector_field@@Base+0x20c>
   41ddc:	ldr	r0, [fp, #-4]
   41de0:	ldr	r1, [r0, #20]
   41de4:	add	r2, r1, #1
   41de8:	str	r2, [r0, #20]
   41dec:	movw	r0, #10
   41df0:	strb	r0, [r1]
   41df4:	ldr	r0, [fp, #-4]
   41df8:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   41dfc:	b	41e08 <flatcc_json_printer_int8_enum_vector_field@@Base+0x214>
   41e00:	ldr	r0, [fp, #-4]
   41e04:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   41e08:	b	41e0c <flatcc_json_printer_int8_enum_vector_field@@Base+0x218>
   41e0c:	ldr	r0, [fp, #12]
   41e10:	ldr	r1, [fp, #-4]
   41e14:	ldr	r2, [fp, #-20]	; 0xffffffec
   41e18:	str	r0, [sp, #16]
   41e1c:	mov	r0, r2
   41e20:	str	r1, [sp, #12]
   41e24:	bl	3cddc <flatcc_json_printer_int8_field@@Base+0x108>
   41e28:	ldr	r1, [sp, #12]
   41e2c:	str	r0, [sp, #8]
   41e30:	mov	r0, r1
   41e34:	ldr	r2, [sp, #8]
   41e38:	sxtb	r1, r2
   41e3c:	ldr	r3, [sp, #16]
   41e40:	blx	r3
   41e44:	ldr	r0, [fp, #-20]	; 0xffffffec
   41e48:	add	r0, r0, #1
   41e4c:	str	r0, [fp, #-20]	; 0xffffffec
   41e50:	b	41d9c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
   41e54:	b	41e58 <flatcc_json_printer_int8_enum_vector_field@@Base+0x264>
   41e58:	ldr	r0, [fp, #-4]
   41e5c:	ldrsb	r0, [r0, #25]
   41e60:	cmp	r0, #0
   41e64:	beq	41e9c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a8>
   41e68:	ldr	r0, [fp, #-4]
   41e6c:	ldr	r1, [r0, #20]
   41e70:	add	r2, r1, #1
   41e74:	str	r2, [r0, #20]
   41e78:	movw	r0, #10
   41e7c:	strb	r0, [r1]
   41e80:	ldr	r0, [fp, #-4]
   41e84:	ldr	r1, [r0, #32]
   41e88:	mvn	r2, #0
   41e8c:	add	r1, r1, r2
   41e90:	str	r1, [r0, #32]
   41e94:	ldr	r0, [fp, #-4]
   41e98:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   41e9c:	ldr	r0, [fp, #-4]
   41ea0:	ldr	r1, [r0, #20]
   41ea4:	add	r2, r1, #1
   41ea8:	str	r2, [r0, #20]
   41eac:	movw	r0, #93	; 0x5d
   41eb0:	strb	r0, [r1]
   41eb4:	b	41eb8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   41eb8:	mov	sp, fp
   41ebc:	pop	{fp, pc}

00041ec0 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   41ec0:	push	{fp, lr}
   41ec4:	mov	fp, sp
   41ec8:	sub	sp, sp, #56	; 0x38
   41ecc:	ldr	ip, [fp, #12]
   41ed0:	ldr	lr, [fp, #8]
   41ed4:	str	r0, [fp, #-4]
   41ed8:	str	r1, [fp, #-8]
   41edc:	str	r2, [fp, #-12]
   41ee0:	str	r3, [fp, #-16]
   41ee4:	ldr	r0, [fp, #-4]
   41ee8:	ldrsb	r0, [r0, #27]
   41eec:	cmp	r0, #0
   41ef0:	beq	41f14 <flatcc_json_printer_int16_enum_vector_field@@Base+0x54>
   41ef4:	ldr	r0, [fp, #-4]
   41ef8:	ldr	r1, [fp, #-8]
   41efc:	ldr	r2, [fp, #-12]
   41f00:	ldr	r3, [fp, #-16]
   41f04:	ldr	ip, [fp, #8]
   41f08:	str	ip, [sp]
   41f0c:	bl	3ff30 <flatcc_json_printer_int16_vector_field@@Base>
   41f10:	b	42184 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   41f14:	ldr	r0, [fp, #-8]
   41f18:	ldr	r1, [fp, #-12]
   41f1c:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   41f20:	str	r0, [fp, #-20]	; 0xffffffec
   41f24:	ldr	r0, [fp, #-20]	; 0xffffffec
   41f28:	movw	r1, #0
   41f2c:	cmp	r0, r1
   41f30:	beq	42184 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   41f34:	ldr	r0, [fp, #-8]
   41f38:	ldr	r1, [r0, #16]
   41f3c:	add	r2, r1, #1
   41f40:	str	r2, [r0, #16]
   41f44:	cmp	r1, #0
   41f48:	beq	41f64 <flatcc_json_printer_int16_enum_vector_field@@Base+0xa4>
   41f4c:	ldr	r0, [fp, #-4]
   41f50:	ldr	r1, [r0, #20]
   41f54:	add	r2, r1, #1
   41f58:	str	r2, [r0, #20]
   41f5c:	movw	r0, #44	; 0x2c
   41f60:	strb	r0, [r1]
   41f64:	ldr	r0, [fp, #-20]	; 0xffffffec
   41f68:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   41f6c:	str	r0, [fp, #-20]	; 0xffffffec
   41f70:	ldr	r0, [fp, #-20]	; 0xffffffec
   41f74:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   41f78:	str	r0, [fp, #-24]	; 0xffffffe8
   41f7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41f80:	add	r0, r0, #4
   41f84:	str	r0, [fp, #-20]	; 0xffffffec
   41f88:	ldr	r0, [fp, #-4]
   41f8c:	ldr	r1, [fp, #-16]
   41f90:	ldr	r2, [fp, #8]
   41f94:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   41f98:	ldr	r0, [fp, #-4]
   41f9c:	ldr	r1, [r0, #32]
   41fa0:	add	r1, r1, #1
   41fa4:	str	r1, [r0, #32]
   41fa8:	ldr	r0, [fp, #-4]
   41fac:	ldr	r1, [r0, #20]
   41fb0:	add	r2, r1, #1
   41fb4:	str	r2, [r0, #20]
   41fb8:	movw	r0, #91	; 0x5b
   41fbc:	strb	r0, [r1]
   41fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41fc4:	cmp	r0, #0
   41fc8:	beq	42064 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a4>
   41fcc:	b	41fd0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x110>
   41fd0:	ldr	r0, [fp, #-4]
   41fd4:	ldrsb	r0, [r0, #25]
   41fd8:	cmp	r0, #0
   41fdc:	beq	42004 <flatcc_json_printer_int16_enum_vector_field@@Base+0x144>
   41fe0:	ldr	r0, [fp, #-4]
   41fe4:	ldr	r1, [r0, #20]
   41fe8:	add	r2, r1, #1
   41fec:	str	r2, [r0, #20]
   41ff0:	movw	r0, #10
   41ff4:	strb	r0, [r1]
   41ff8:	ldr	r0, [fp, #-4]
   41ffc:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42000:	b	4200c <flatcc_json_printer_int16_enum_vector_field@@Base+0x14c>
   42004:	ldr	r0, [fp, #-4]
   42008:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   4200c:	b	42010 <flatcc_json_printer_int16_enum_vector_field@@Base+0x150>
   42010:	ldr	r0, [fp, #12]
   42014:	ldr	r1, [fp, #-4]
   42018:	ldr	r2, [fp, #-20]	; 0xffffffec
   4201c:	str	r0, [sp, #28]
   42020:	mov	r0, r2
   42024:	str	r1, [sp, #24]
   42028:	bl	3cf0c <flatcc_json_printer_int16_field@@Base+0x108>
   4202c:	ldr	r1, [sp, #24]
   42030:	str	r0, [sp, #20]
   42034:	mov	r0, r1
   42038:	ldr	r2, [sp, #20]
   4203c:	sxth	r1, r2
   42040:	ldr	r3, [sp, #28]
   42044:	blx	r3
   42048:	ldr	r0, [fp, #-20]	; 0xffffffec
   4204c:	add	r0, r0, #2
   42050:	str	r0, [fp, #-20]	; 0xffffffec
   42054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   42058:	mvn	r1, #0
   4205c:	add	r0, r0, r1
   42060:	str	r0, [fp, #-24]	; 0xffffffe8
   42064:	b	42068 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a8>
   42068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4206c:	mvn	r1, #0
   42070:	add	r1, r0, r1
   42074:	str	r1, [fp, #-24]	; 0xffffffe8
   42078:	cmp	r0, #0
   4207c:	beq	42120 <flatcc_json_printer_int16_enum_vector_field@@Base+0x260>
   42080:	ldr	r0, [fp, #-4]
   42084:	ldr	r1, [r0, #20]
   42088:	add	r2, r1, #1
   4208c:	str	r2, [r0, #20]
   42090:	movw	r0, #44	; 0x2c
   42094:	strb	r0, [r1]
   42098:	ldr	r0, [fp, #-4]
   4209c:	ldrsb	r0, [r0, #25]
   420a0:	cmp	r0, #0
   420a4:	beq	420cc <flatcc_json_printer_int16_enum_vector_field@@Base+0x20c>
   420a8:	ldr	r0, [fp, #-4]
   420ac:	ldr	r1, [r0, #20]
   420b0:	add	r2, r1, #1
   420b4:	str	r2, [r0, #20]
   420b8:	movw	r0, #10
   420bc:	strb	r0, [r1]
   420c0:	ldr	r0, [fp, #-4]
   420c4:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   420c8:	b	420d4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x214>
   420cc:	ldr	r0, [fp, #-4]
   420d0:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   420d4:	b	420d8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x218>
   420d8:	ldr	r0, [fp, #12]
   420dc:	ldr	r1, [fp, #-4]
   420e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   420e4:	str	r0, [sp, #16]
   420e8:	mov	r0, r2
   420ec:	str	r1, [sp, #12]
   420f0:	bl	3cf0c <flatcc_json_printer_int16_field@@Base+0x108>
   420f4:	ldr	r1, [sp, #12]
   420f8:	str	r0, [sp, #8]
   420fc:	mov	r0, r1
   42100:	ldr	r2, [sp, #8]
   42104:	sxth	r1, r2
   42108:	ldr	r3, [sp, #16]
   4210c:	blx	r3
   42110:	ldr	r0, [fp, #-20]	; 0xffffffec
   42114:	add	r0, r0, #2
   42118:	str	r0, [fp, #-20]	; 0xffffffec
   4211c:	b	42068 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a8>
   42120:	b	42124 <flatcc_json_printer_int16_enum_vector_field@@Base+0x264>
   42124:	ldr	r0, [fp, #-4]
   42128:	ldrsb	r0, [r0, #25]
   4212c:	cmp	r0, #0
   42130:	beq	42168 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a8>
   42134:	ldr	r0, [fp, #-4]
   42138:	ldr	r1, [r0, #20]
   4213c:	add	r2, r1, #1
   42140:	str	r2, [r0, #20]
   42144:	movw	r0, #10
   42148:	strb	r0, [r1]
   4214c:	ldr	r0, [fp, #-4]
   42150:	ldr	r1, [r0, #32]
   42154:	mvn	r2, #0
   42158:	add	r1, r1, r2
   4215c:	str	r1, [r0, #32]
   42160:	ldr	r0, [fp, #-4]
   42164:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42168:	ldr	r0, [fp, #-4]
   4216c:	ldr	r1, [r0, #20]
   42170:	add	r2, r1, #1
   42174:	str	r2, [r0, #20]
   42178:	movw	r0, #93	; 0x5d
   4217c:	strb	r0, [r1]
   42180:	b	42184 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   42184:	mov	sp, fp
   42188:	pop	{fp, pc}

0004218c <flatcc_json_printer_int32_enum_vector_field@@Base>:
   4218c:	push	{fp, lr}
   42190:	mov	fp, sp
   42194:	sub	sp, sp, #56	; 0x38
   42198:	ldr	ip, [fp, #12]
   4219c:	ldr	lr, [fp, #8]
   421a0:	str	r0, [fp, #-4]
   421a4:	str	r1, [fp, #-8]
   421a8:	str	r2, [fp, #-12]
   421ac:	str	r3, [fp, #-16]
   421b0:	ldr	r0, [fp, #-4]
   421b4:	ldrsb	r0, [r0, #27]
   421b8:	cmp	r0, #0
   421bc:	beq	421e0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x54>
   421c0:	ldr	r0, [fp, #-4]
   421c4:	ldr	r1, [fp, #-8]
   421c8:	ldr	r2, [fp, #-12]
   421cc:	ldr	r3, [fp, #-16]
   421d0:	ldr	ip, [fp, #8]
   421d4:	str	ip, [sp]
   421d8:	bl	401ac <flatcc_json_printer_int32_vector_field@@Base>
   421dc:	b	42448 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2bc>
   421e0:	ldr	r0, [fp, #-8]
   421e4:	ldr	r1, [fp, #-12]
   421e8:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   421ec:	str	r0, [fp, #-20]	; 0xffffffec
   421f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   421f4:	movw	r1, #0
   421f8:	cmp	r0, r1
   421fc:	beq	42448 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2bc>
   42200:	ldr	r0, [fp, #-8]
   42204:	ldr	r1, [r0, #16]
   42208:	add	r2, r1, #1
   4220c:	str	r2, [r0, #16]
   42210:	cmp	r1, #0
   42214:	beq	42230 <flatcc_json_printer_int32_enum_vector_field@@Base+0xa4>
   42218:	ldr	r0, [fp, #-4]
   4221c:	ldr	r1, [r0, #20]
   42220:	add	r2, r1, #1
   42224:	str	r2, [r0, #20]
   42228:	movw	r0, #44	; 0x2c
   4222c:	strb	r0, [r1]
   42230:	ldr	r0, [fp, #-20]	; 0xffffffec
   42234:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   42238:	str	r0, [fp, #-20]	; 0xffffffec
   4223c:	ldr	r0, [fp, #-20]	; 0xffffffec
   42240:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   42244:	str	r0, [fp, #-24]	; 0xffffffe8
   42248:	ldr	r0, [fp, #-20]	; 0xffffffec
   4224c:	add	r0, r0, #4
   42250:	str	r0, [fp, #-20]	; 0xffffffec
   42254:	ldr	r0, [fp, #-4]
   42258:	ldr	r1, [fp, #-16]
   4225c:	ldr	r2, [fp, #8]
   42260:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   42264:	ldr	r0, [fp, #-4]
   42268:	ldr	r1, [r0, #32]
   4226c:	add	r1, r1, #1
   42270:	str	r1, [r0, #32]
   42274:	ldr	r0, [fp, #-4]
   42278:	ldr	r1, [r0, #20]
   4227c:	add	r2, r1, #1
   42280:	str	r2, [r0, #20]
   42284:	movw	r0, #91	; 0x5b
   42288:	strb	r0, [r1]
   4228c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   42290:	cmp	r0, #0
   42294:	beq	4232c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a0>
   42298:	b	4229c <flatcc_json_printer_int32_enum_vector_field@@Base+0x110>
   4229c:	ldr	r0, [fp, #-4]
   422a0:	ldrsb	r0, [r0, #25]
   422a4:	cmp	r0, #0
   422a8:	beq	422d0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x144>
   422ac:	ldr	r0, [fp, #-4]
   422b0:	ldr	r1, [r0, #20]
   422b4:	add	r2, r1, #1
   422b8:	str	r2, [r0, #20]
   422bc:	movw	r0, #10
   422c0:	strb	r0, [r1]
   422c4:	ldr	r0, [fp, #-4]
   422c8:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   422cc:	b	422d8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x14c>
   422d0:	ldr	r0, [fp, #-4]
   422d4:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   422d8:	b	422dc <flatcc_json_printer_int32_enum_vector_field@@Base+0x150>
   422dc:	ldr	r0, [fp, #12]
   422e0:	ldr	r1, [fp, #-4]
   422e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   422e8:	str	r0, [sp, #28]
   422ec:	mov	r0, r2
   422f0:	str	r1, [sp, #24]
   422f4:	bl	3d038 <flatcc_json_printer_int32_field@@Base+0x104>
   422f8:	ldr	r1, [sp, #24]
   422fc:	str	r0, [sp, #20]
   42300:	mov	r0, r1
   42304:	ldr	r1, [sp, #20]
   42308:	ldr	r2, [sp, #28]
   4230c:	blx	r2
   42310:	ldr	r0, [fp, #-20]	; 0xffffffec
   42314:	add	r0, r0, #4
   42318:	str	r0, [fp, #-20]	; 0xffffffec
   4231c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   42320:	mvn	r1, #0
   42324:	add	r0, r0, r1
   42328:	str	r0, [fp, #-24]	; 0xffffffe8
   4232c:	b	42330 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a4>
   42330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   42334:	mvn	r1, #0
   42338:	add	r1, r0, r1
   4233c:	str	r1, [fp, #-24]	; 0xffffffe8
   42340:	cmp	r0, #0
   42344:	beq	423e4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x258>
   42348:	ldr	r0, [fp, #-4]
   4234c:	ldr	r1, [r0, #20]
   42350:	add	r2, r1, #1
   42354:	str	r2, [r0, #20]
   42358:	movw	r0, #44	; 0x2c
   4235c:	strb	r0, [r1]
   42360:	ldr	r0, [fp, #-4]
   42364:	ldrsb	r0, [r0, #25]
   42368:	cmp	r0, #0
   4236c:	beq	42394 <flatcc_json_printer_int32_enum_vector_field@@Base+0x208>
   42370:	ldr	r0, [fp, #-4]
   42374:	ldr	r1, [r0, #20]
   42378:	add	r2, r1, #1
   4237c:	str	r2, [r0, #20]
   42380:	movw	r0, #10
   42384:	strb	r0, [r1]
   42388:	ldr	r0, [fp, #-4]
   4238c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42390:	b	4239c <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
   42394:	ldr	r0, [fp, #-4]
   42398:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   4239c:	b	423a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x214>
   423a0:	ldr	r0, [fp, #12]
   423a4:	ldr	r1, [fp, #-4]
   423a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   423ac:	str	r0, [sp, #16]
   423b0:	mov	r0, r2
   423b4:	str	r1, [sp, #12]
   423b8:	bl	3d038 <flatcc_json_printer_int32_field@@Base+0x104>
   423bc:	ldr	r1, [sp, #12]
   423c0:	str	r0, [sp, #8]
   423c4:	mov	r0, r1
   423c8:	ldr	r1, [sp, #8]
   423cc:	ldr	r2, [sp, #16]
   423d0:	blx	r2
   423d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   423d8:	add	r0, r0, #4
   423dc:	str	r0, [fp, #-20]	; 0xffffffec
   423e0:	b	42330 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a4>
   423e4:	b	423e8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x25c>
   423e8:	ldr	r0, [fp, #-4]
   423ec:	ldrsb	r0, [r0, #25]
   423f0:	cmp	r0, #0
   423f4:	beq	4242c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a0>
   423f8:	ldr	r0, [fp, #-4]
   423fc:	ldr	r1, [r0, #20]
   42400:	add	r2, r1, #1
   42404:	str	r2, [r0, #20]
   42408:	movw	r0, #10
   4240c:	strb	r0, [r1]
   42410:	ldr	r0, [fp, #-4]
   42414:	ldr	r1, [r0, #32]
   42418:	mvn	r2, #0
   4241c:	add	r1, r1, r2
   42420:	str	r1, [r0, #32]
   42424:	ldr	r0, [fp, #-4]
   42428:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   4242c:	ldr	r0, [fp, #-4]
   42430:	ldr	r1, [r0, #20]
   42434:	add	r2, r1, #1
   42438:	str	r2, [r0, #20]
   4243c:	movw	r0, #93	; 0x5d
   42440:	strb	r0, [r1]
   42444:	b	42448 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2bc>
   42448:	mov	sp, fp
   4244c:	pop	{fp, pc}

00042450 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   42450:	push	{fp, lr}
   42454:	mov	fp, sp
   42458:	sub	sp, sp, #56	; 0x38
   4245c:	ldr	ip, [fp, #12]
   42460:	ldr	lr, [fp, #8]
   42464:	str	r0, [fp, #-4]
   42468:	str	r1, [fp, #-8]
   4246c:	str	r2, [fp, #-12]
   42470:	str	r3, [fp, #-16]
   42474:	ldr	r0, [fp, #-4]
   42478:	ldrsb	r0, [r0, #27]
   4247c:	cmp	r0, #0
   42480:	beq	424a4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x54>
   42484:	ldr	r0, [fp, #-4]
   42488:	ldr	r1, [fp, #-8]
   4248c:	ldr	r2, [fp, #-12]
   42490:	ldr	r3, [fp, #-16]
   42494:	ldr	ip, [fp, #8]
   42498:	str	ip, [sp]
   4249c:	bl	40420 <flatcc_json_printer_int64_vector_field@@Base>
   424a0:	b	42714 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   424a4:	ldr	r0, [fp, #-8]
   424a8:	ldr	r1, [fp, #-12]
   424ac:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   424b0:	str	r0, [fp, #-20]	; 0xffffffec
   424b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   424b8:	movw	r1, #0
   424bc:	cmp	r0, r1
   424c0:	beq	42714 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   424c4:	ldr	r0, [fp, #-8]
   424c8:	ldr	r1, [r0, #16]
   424cc:	add	r2, r1, #1
   424d0:	str	r2, [r0, #16]
   424d4:	cmp	r1, #0
   424d8:	beq	424f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0xa4>
   424dc:	ldr	r0, [fp, #-4]
   424e0:	ldr	r1, [r0, #20]
   424e4:	add	r2, r1, #1
   424e8:	str	r2, [r0, #20]
   424ec:	movw	r0, #44	; 0x2c
   424f0:	strb	r0, [r1]
   424f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   424f8:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   424fc:	str	r0, [fp, #-20]	; 0xffffffec
   42500:	ldr	r0, [fp, #-20]	; 0xffffffec
   42504:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   42508:	str	r0, [fp, #-24]	; 0xffffffe8
   4250c:	ldr	r0, [fp, #-20]	; 0xffffffec
   42510:	add	r0, r0, #4
   42514:	str	r0, [fp, #-20]	; 0xffffffec
   42518:	ldr	r0, [fp, #-4]
   4251c:	ldr	r1, [fp, #-16]
   42520:	ldr	r2, [fp, #8]
   42524:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   42528:	ldr	r0, [fp, #-4]
   4252c:	ldr	r1, [r0, #32]
   42530:	add	r1, r1, #1
   42534:	str	r1, [r0, #32]
   42538:	ldr	r0, [fp, #-4]
   4253c:	ldr	r1, [r0, #20]
   42540:	add	r2, r1, #1
   42544:	str	r2, [r0, #20]
   42548:	movw	r0, #91	; 0x5b
   4254c:	strb	r0, [r1]
   42550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   42554:	cmp	r0, #0
   42558:	beq	425f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a4>
   4255c:	b	42560 <flatcc_json_printer_int64_enum_vector_field@@Base+0x110>
   42560:	ldr	r0, [fp, #-4]
   42564:	ldrsb	r0, [r0, #25]
   42568:	cmp	r0, #0
   4256c:	beq	42594 <flatcc_json_printer_int64_enum_vector_field@@Base+0x144>
   42570:	ldr	r0, [fp, #-4]
   42574:	ldr	r1, [r0, #20]
   42578:	add	r2, r1, #1
   4257c:	str	r2, [r0, #20]
   42580:	movw	r0, #10
   42584:	strb	r0, [r1]
   42588:	ldr	r0, [fp, #-4]
   4258c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42590:	b	4259c <flatcc_json_printer_int64_enum_vector_field@@Base+0x14c>
   42594:	ldr	r0, [fp, #-4]
   42598:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   4259c:	b	425a0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x150>
   425a0:	ldr	r0, [fp, #12]
   425a4:	ldr	r1, [fp, #-4]
   425a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   425ac:	str	r0, [sp, #28]
   425b0:	mov	r0, r2
   425b4:	str	r1, [sp, #24]
   425b8:	bl	3d190 <flatcc_json_printer_int64_field@@Base+0x134>
   425bc:	ldr	r2, [sp, #24]
   425c0:	str	r0, [sp, #20]
   425c4:	mov	r0, r2
   425c8:	ldr	r2, [sp, #20]
   425cc:	mov	r3, r1
   425d0:	ldr	r1, [sp, #28]
   425d4:	blx	r1
   425d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   425dc:	add	r0, r0, #8
   425e0:	str	r0, [fp, #-20]	; 0xffffffec
   425e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   425e8:	mvn	r1, #0
   425ec:	add	r0, r0, r1
   425f0:	str	r0, [fp, #-24]	; 0xffffffe8
   425f4:	b	425f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
   425f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   425fc:	mvn	r1, #0
   42600:	add	r1, r0, r1
   42604:	str	r1, [fp, #-24]	; 0xffffffe8
   42608:	cmp	r0, #0
   4260c:	beq	426b0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x260>
   42610:	ldr	r0, [fp, #-4]
   42614:	ldr	r1, [r0, #20]
   42618:	add	r2, r1, #1
   4261c:	str	r2, [r0, #20]
   42620:	movw	r0, #44	; 0x2c
   42624:	strb	r0, [r1]
   42628:	ldr	r0, [fp, #-4]
   4262c:	ldrsb	r0, [r0, #25]
   42630:	cmp	r0, #0
   42634:	beq	4265c <flatcc_json_printer_int64_enum_vector_field@@Base+0x20c>
   42638:	ldr	r0, [fp, #-4]
   4263c:	ldr	r1, [r0, #20]
   42640:	add	r2, r1, #1
   42644:	str	r2, [r0, #20]
   42648:	movw	r0, #10
   4264c:	strb	r0, [r1]
   42650:	ldr	r0, [fp, #-4]
   42654:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42658:	b	42664 <flatcc_json_printer_int64_enum_vector_field@@Base+0x214>
   4265c:	ldr	r0, [fp, #-4]
   42660:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   42664:	b	42668 <flatcc_json_printer_int64_enum_vector_field@@Base+0x218>
   42668:	ldr	r0, [fp, #12]
   4266c:	ldr	r1, [fp, #-4]
   42670:	ldr	r2, [fp, #-20]	; 0xffffffec
   42674:	str	r0, [sp, #16]
   42678:	mov	r0, r2
   4267c:	str	r1, [sp, #12]
   42680:	bl	3d190 <flatcc_json_printer_int64_field@@Base+0x134>
   42684:	ldr	r2, [sp, #12]
   42688:	str	r0, [sp, #8]
   4268c:	mov	r0, r2
   42690:	ldr	r2, [sp, #8]
   42694:	mov	r3, r1
   42698:	ldr	r1, [sp, #16]
   4269c:	blx	r1
   426a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   426a4:	add	r0, r0, #8
   426a8:	str	r0, [fp, #-20]	; 0xffffffec
   426ac:	b	425f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
   426b0:	b	426b4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x264>
   426b4:	ldr	r0, [fp, #-4]
   426b8:	ldrsb	r0, [r0, #25]
   426bc:	cmp	r0, #0
   426c0:	beq	426f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a8>
   426c4:	ldr	r0, [fp, #-4]
   426c8:	ldr	r1, [r0, #20]
   426cc:	add	r2, r1, #1
   426d0:	str	r2, [r0, #20]
   426d4:	movw	r0, #10
   426d8:	strb	r0, [r1]
   426dc:	ldr	r0, [fp, #-4]
   426e0:	ldr	r1, [r0, #32]
   426e4:	mvn	r2, #0
   426e8:	add	r1, r1, r2
   426ec:	str	r1, [r0, #32]
   426f0:	ldr	r0, [fp, #-4]
   426f4:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   426f8:	ldr	r0, [fp, #-4]
   426fc:	ldr	r1, [r0, #20]
   42700:	add	r2, r1, #1
   42704:	str	r2, [r0, #20]
   42708:	movw	r0, #93	; 0x5d
   4270c:	strb	r0, [r1]
   42710:	b	42714 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   42714:	mov	sp, fp
   42718:	pop	{fp, pc}

0004271c <flatcc_json_printer_bool_enum_vector_field@@Base>:
   4271c:	push	{fp, lr}
   42720:	mov	fp, sp
   42724:	sub	sp, sp, #56	; 0x38
   42728:	ldr	ip, [fp, #12]
   4272c:	ldr	lr, [fp, #8]
   42730:	str	r0, [fp, #-4]
   42734:	str	r1, [fp, #-8]
   42738:	str	r2, [fp, #-12]
   4273c:	str	r3, [fp, #-16]
   42740:	ldr	r0, [fp, #-4]
   42744:	ldrsb	r0, [r0, #27]
   42748:	cmp	r0, #0
   4274c:	beq	42770 <flatcc_json_printer_bool_enum_vector_field@@Base+0x54>
   42750:	ldr	r0, [fp, #-4]
   42754:	ldr	r1, [fp, #-8]
   42758:	ldr	r2, [fp, #-12]
   4275c:	ldr	r3, [fp, #-16]
   42760:	ldr	ip, [fp, #8]
   42764:	str	ip, [sp]
   42768:	bl	40694 <flatcc_json_printer_bool_vector_field@@Base>
   4276c:	b	429e0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   42770:	ldr	r0, [fp, #-8]
   42774:	ldr	r1, [fp, #-12]
   42778:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   4277c:	str	r0, [fp, #-20]	; 0xffffffec
   42780:	ldr	r0, [fp, #-20]	; 0xffffffec
   42784:	movw	r1, #0
   42788:	cmp	r0, r1
   4278c:	beq	429e0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   42790:	ldr	r0, [fp, #-8]
   42794:	ldr	r1, [r0, #16]
   42798:	add	r2, r1, #1
   4279c:	str	r2, [r0, #16]
   427a0:	cmp	r1, #0
   427a4:	beq	427c0 <flatcc_json_printer_bool_enum_vector_field@@Base+0xa4>
   427a8:	ldr	r0, [fp, #-4]
   427ac:	ldr	r1, [r0, #20]
   427b0:	add	r2, r1, #1
   427b4:	str	r2, [r0, #20]
   427b8:	movw	r0, #44	; 0x2c
   427bc:	strb	r0, [r1]
   427c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   427c4:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   427c8:	str	r0, [fp, #-20]	; 0xffffffec
   427cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   427d0:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   427d4:	str	r0, [fp, #-24]	; 0xffffffe8
   427d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   427dc:	add	r0, r0, #4
   427e0:	str	r0, [fp, #-20]	; 0xffffffec
   427e4:	ldr	r0, [fp, #-4]
   427e8:	ldr	r1, [fp, #-16]
   427ec:	ldr	r2, [fp, #8]
   427f0:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   427f4:	ldr	r0, [fp, #-4]
   427f8:	ldr	r1, [r0, #32]
   427fc:	add	r1, r1, #1
   42800:	str	r1, [r0, #32]
   42804:	ldr	r0, [fp, #-4]
   42808:	ldr	r1, [r0, #20]
   4280c:	add	r2, r1, #1
   42810:	str	r2, [r0, #20]
   42814:	movw	r0, #91	; 0x5b
   42818:	strb	r0, [r1]
   4281c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   42820:	cmp	r0, #0
   42824:	beq	428c0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a4>
   42828:	b	4282c <flatcc_json_printer_bool_enum_vector_field@@Base+0x110>
   4282c:	ldr	r0, [fp, #-4]
   42830:	ldrsb	r0, [r0, #25]
   42834:	cmp	r0, #0
   42838:	beq	42860 <flatcc_json_printer_bool_enum_vector_field@@Base+0x144>
   4283c:	ldr	r0, [fp, #-4]
   42840:	ldr	r1, [r0, #20]
   42844:	add	r2, r1, #1
   42848:	str	r2, [r0, #20]
   4284c:	movw	r0, #10
   42850:	strb	r0, [r1]
   42854:	ldr	r0, [fp, #-4]
   42858:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   4285c:	b	42868 <flatcc_json_printer_bool_enum_vector_field@@Base+0x14c>
   42860:	ldr	r0, [fp, #-4]
   42864:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   42868:	b	4286c <flatcc_json_printer_bool_enum_vector_field@@Base+0x150>
   4286c:	ldr	r0, [fp, #12]
   42870:	ldr	r1, [fp, #-4]
   42874:	ldr	r2, [fp, #-20]	; 0xffffffec
   42878:	str	r0, [sp, #28]
   4287c:	mov	r0, r2
   42880:	str	r1, [sp, #24]
   42884:	bl	3d2c8 <flatcc_json_printer_bool_field@@Base+0x104>
   42888:	ldr	r1, [sp, #24]
   4288c:	str	r0, [sp, #20]
   42890:	mov	r0, r1
   42894:	ldr	r2, [sp, #20]
   42898:	and	r1, r2, #255	; 0xff
   4289c:	ldr	r3, [sp, #28]
   428a0:	blx	r3
   428a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   428a8:	add	r0, r0, #1
   428ac:	str	r0, [fp, #-20]	; 0xffffffec
   428b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   428b4:	mvn	r1, #0
   428b8:	add	r0, r0, r1
   428bc:	str	r0, [fp, #-24]	; 0xffffffe8
   428c0:	b	428c4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
   428c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   428c8:	mvn	r1, #0
   428cc:	add	r1, r0, r1
   428d0:	str	r1, [fp, #-24]	; 0xffffffe8
   428d4:	cmp	r0, #0
   428d8:	beq	4297c <flatcc_json_printer_bool_enum_vector_field@@Base+0x260>
   428dc:	ldr	r0, [fp, #-4]
   428e0:	ldr	r1, [r0, #20]
   428e4:	add	r2, r1, #1
   428e8:	str	r2, [r0, #20]
   428ec:	movw	r0, #44	; 0x2c
   428f0:	strb	r0, [r1]
   428f4:	ldr	r0, [fp, #-4]
   428f8:	ldrsb	r0, [r0, #25]
   428fc:	cmp	r0, #0
   42900:	beq	42928 <flatcc_json_printer_bool_enum_vector_field@@Base+0x20c>
   42904:	ldr	r0, [fp, #-4]
   42908:	ldr	r1, [r0, #20]
   4290c:	add	r2, r1, #1
   42910:	str	r2, [r0, #20]
   42914:	movw	r0, #10
   42918:	strb	r0, [r1]
   4291c:	ldr	r0, [fp, #-4]
   42920:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42924:	b	42930 <flatcc_json_printer_bool_enum_vector_field@@Base+0x214>
   42928:	ldr	r0, [fp, #-4]
   4292c:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   42930:	b	42934 <flatcc_json_printer_bool_enum_vector_field@@Base+0x218>
   42934:	ldr	r0, [fp, #12]
   42938:	ldr	r1, [fp, #-4]
   4293c:	ldr	r2, [fp, #-20]	; 0xffffffec
   42940:	str	r0, [sp, #16]
   42944:	mov	r0, r2
   42948:	str	r1, [sp, #12]
   4294c:	bl	3d2c8 <flatcc_json_printer_bool_field@@Base+0x104>
   42950:	ldr	r1, [sp, #12]
   42954:	str	r0, [sp, #8]
   42958:	mov	r0, r1
   4295c:	ldr	r2, [sp, #8]
   42960:	and	r1, r2, #255	; 0xff
   42964:	ldr	r3, [sp, #16]
   42968:	blx	r3
   4296c:	ldr	r0, [fp, #-20]	; 0xffffffec
   42970:	add	r0, r0, #1
   42974:	str	r0, [fp, #-20]	; 0xffffffec
   42978:	b	428c4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
   4297c:	b	42980 <flatcc_json_printer_bool_enum_vector_field@@Base+0x264>
   42980:	ldr	r0, [fp, #-4]
   42984:	ldrsb	r0, [r0, #25]
   42988:	cmp	r0, #0
   4298c:	beq	429c4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a8>
   42990:	ldr	r0, [fp, #-4]
   42994:	ldr	r1, [r0, #20]
   42998:	add	r2, r1, #1
   4299c:	str	r2, [r0, #20]
   429a0:	movw	r0, #10
   429a4:	strb	r0, [r1]
   429a8:	ldr	r0, [fp, #-4]
   429ac:	ldr	r1, [r0, #32]
   429b0:	mvn	r2, #0
   429b4:	add	r1, r1, r2
   429b8:	str	r1, [r0, #32]
   429bc:	ldr	r0, [fp, #-4]
   429c0:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   429c4:	ldr	r0, [fp, #-4]
   429c8:	ldr	r1, [r0, #20]
   429cc:	add	r2, r1, #1
   429d0:	str	r2, [r0, #20]
   429d4:	movw	r0, #93	; 0x5d
   429d8:	strb	r0, [r1]
   429dc:	b	429e0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   429e0:	mov	sp, fp
   429e4:	pop	{fp, pc}

000429e8 <flatcc_json_printer_struct_vector_field@@Base>:
   429e8:	push	{r4, sl, fp, lr}
   429ec:	add	fp, sp, #8
   429f0:	sub	sp, sp, #48	; 0x30
   429f4:	ldr	ip, [fp, #16]
   429f8:	ldr	lr, [fp, #12]
   429fc:	ldr	r4, [fp, #8]
   42a00:	str	r0, [fp, #-12]
   42a04:	str	r1, [fp, #-16]
   42a08:	str	r2, [fp, #-20]	; 0xffffffec
   42a0c:	str	r3, [fp, #-24]	; 0xffffffe8
   42a10:	ldr	r0, [fp, #-16]
   42a14:	ldr	r1, [fp, #-20]	; 0xffffffec
   42a18:	str	ip, [sp, #20]
   42a1c:	str	lr, [sp, #16]
   42a20:	str	r4, [sp, #12]
   42a24:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   42a28:	str	r0, [sp, #28]
   42a2c:	ldr	r0, [sp, #28]
   42a30:	movw	r1, #0
   42a34:	cmp	r0, r1
   42a38:	beq	42d64 <flatcc_json_printer_struct_vector_field@@Base+0x37c>
   42a3c:	ldr	r0, [fp, #-16]
   42a40:	ldr	r1, [r0, #16]
   42a44:	add	r2, r1, #1
   42a48:	str	r2, [r0, #16]
   42a4c:	cmp	r1, #0
   42a50:	beq	42a6c <flatcc_json_printer_struct_vector_field@@Base+0x84>
   42a54:	ldr	r0, [fp, #-12]
   42a58:	ldr	r1, [r0, #20]
   42a5c:	add	r2, r1, #1
   42a60:	str	r2, [r0, #20]
   42a64:	movw	r0, #44	; 0x2c
   42a68:	strb	r0, [r1]
   42a6c:	ldr	r0, [sp, #28]
   42a70:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   42a74:	str	r0, [sp, #28]
   42a78:	ldr	r0, [sp, #28]
   42a7c:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   42a80:	str	r0, [sp, #24]
   42a84:	ldr	r0, [sp, #28]
   42a88:	add	r0, r0, #4
   42a8c:	str	r0, [sp, #28]
   42a90:	ldr	r0, [fp, #-12]
   42a94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42a98:	ldr	r2, [fp, #8]
   42a9c:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   42aa0:	ldr	r0, [fp, #-12]
   42aa4:	ldr	r1, [r0, #32]
   42aa8:	add	r1, r1, #1
   42aac:	str	r1, [r0, #32]
   42ab0:	ldr	r0, [fp, #-12]
   42ab4:	ldr	r1, [r0, #20]
   42ab8:	add	r2, r1, #1
   42abc:	str	r2, [r0, #20]
   42ac0:	movw	r0, #91	; 0x5b
   42ac4:	strb	r0, [r1]
   42ac8:	ldr	r0, [sp, #24]
   42acc:	cmp	r0, #0
   42ad0:	beq	42bd0 <flatcc_json_printer_struct_vector_field@@Base+0x1e8>
   42ad4:	b	42ad8 <flatcc_json_printer_struct_vector_field@@Base+0xf0>
   42ad8:	ldr	r0, [fp, #-12]
   42adc:	ldrsb	r0, [r0, #25]
   42ae0:	cmp	r0, #0
   42ae4:	beq	42b0c <flatcc_json_printer_struct_vector_field@@Base+0x124>
   42ae8:	ldr	r0, [fp, #-12]
   42aec:	ldr	r1, [r0, #20]
   42af0:	add	r2, r1, #1
   42af4:	str	r2, [r0, #20]
   42af8:	movw	r0, #10
   42afc:	strb	r0, [r1]
   42b00:	ldr	r0, [fp, #-12]
   42b04:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42b08:	b	42b14 <flatcc_json_printer_struct_vector_field@@Base+0x12c>
   42b0c:	ldr	r0, [fp, #-12]
   42b10:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   42b14:	b	42b18 <flatcc_json_printer_struct_vector_field@@Base+0x130>
   42b18:	b	42b1c <flatcc_json_printer_struct_vector_field@@Base+0x134>
   42b1c:	ldr	r0, [fp, #-12]
   42b20:	ldr	r1, [r0, #32]
   42b24:	add	r1, r1, #1
   42b28:	str	r1, [r0, #32]
   42b2c:	ldr	r0, [fp, #-12]
   42b30:	ldr	r1, [r0, #20]
   42b34:	add	r2, r1, #1
   42b38:	str	r2, [r0, #20]
   42b3c:	movw	r0, #123	; 0x7b
   42b40:	strb	r0, [r1]
   42b44:	ldr	r0, [fp, #16]
   42b48:	ldr	r1, [fp, #-12]
   42b4c:	ldr	r2, [sp, #28]
   42b50:	str	r0, [sp, #8]
   42b54:	mov	r0, r1
   42b58:	mov	r1, r2
   42b5c:	ldr	r2, [sp, #8]
   42b60:	blx	r2
   42b64:	ldr	r0, [fp, #-12]
   42b68:	ldrsb	r0, [r0, #25]
   42b6c:	cmp	r0, #0
   42b70:	beq	42ba8 <flatcc_json_printer_struct_vector_field@@Base+0x1c0>
   42b74:	ldr	r0, [fp, #-12]
   42b78:	ldr	r1, [r0, #20]
   42b7c:	add	r2, r1, #1
   42b80:	str	r2, [r0, #20]
   42b84:	movw	r0, #10
   42b88:	strb	r0, [r1]
   42b8c:	ldr	r0, [fp, #-12]
   42b90:	ldr	r1, [r0, #32]
   42b94:	mvn	r2, #0
   42b98:	add	r1, r1, r2
   42b9c:	str	r1, [r0, #32]
   42ba0:	ldr	r0, [fp, #-12]
   42ba4:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42ba8:	ldr	r0, [fp, #-12]
   42bac:	ldr	r1, [r0, #20]
   42bb0:	add	r2, r1, #1
   42bb4:	str	r2, [r0, #20]
   42bb8:	movw	r0, #125	; 0x7d
   42bbc:	strb	r0, [r1]
   42bc0:	ldr	r0, [sp, #24]
   42bc4:	mvn	r1, #0
   42bc8:	add	r0, r0, r1
   42bcc:	str	r0, [sp, #24]
   42bd0:	b	42bd4 <flatcc_json_printer_struct_vector_field@@Base+0x1ec>
   42bd4:	ldr	r0, [sp, #24]
   42bd8:	mvn	r1, #0
   42bdc:	add	r1, r0, r1
   42be0:	str	r1, [sp, #24]
   42be4:	cmp	r0, #0
   42be8:	beq	42d00 <flatcc_json_printer_struct_vector_field@@Base+0x318>
   42bec:	ldr	r0, [fp, #12]
   42bf0:	ldr	r1, [sp, #28]
   42bf4:	add	r0, r1, r0
   42bf8:	str	r0, [sp, #28]
   42bfc:	ldr	r0, [fp, #-12]
   42c00:	ldr	r1, [r0, #20]
   42c04:	add	r2, r1, #1
   42c08:	str	r2, [r0, #20]
   42c0c:	movw	r0, #44	; 0x2c
   42c10:	strb	r0, [r1]
   42c14:	ldr	r0, [fp, #-12]
   42c18:	ldrsb	r0, [r0, #25]
   42c1c:	cmp	r0, #0
   42c20:	beq	42c48 <flatcc_json_printer_struct_vector_field@@Base+0x260>
   42c24:	ldr	r0, [fp, #-12]
   42c28:	ldr	r1, [r0, #20]
   42c2c:	add	r2, r1, #1
   42c30:	str	r2, [r0, #20]
   42c34:	movw	r0, #10
   42c38:	strb	r0, [r1]
   42c3c:	ldr	r0, [fp, #-12]
   42c40:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42c44:	b	42c50 <flatcc_json_printer_struct_vector_field@@Base+0x268>
   42c48:	ldr	r0, [fp, #-12]
   42c4c:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   42c50:	b	42c54 <flatcc_json_printer_struct_vector_field@@Base+0x26c>
   42c54:	b	42c58 <flatcc_json_printer_struct_vector_field@@Base+0x270>
   42c58:	ldr	r0, [fp, #-12]
   42c5c:	ldr	r1, [r0, #32]
   42c60:	add	r1, r1, #1
   42c64:	str	r1, [r0, #32]
   42c68:	ldr	r0, [fp, #-12]
   42c6c:	ldr	r1, [r0, #20]
   42c70:	add	r2, r1, #1
   42c74:	str	r2, [r0, #20]
   42c78:	movw	r0, #123	; 0x7b
   42c7c:	strb	r0, [r1]
   42c80:	ldr	r0, [fp, #16]
   42c84:	ldr	r1, [fp, #-12]
   42c88:	ldr	r2, [sp, #28]
   42c8c:	str	r0, [sp, #4]
   42c90:	mov	r0, r1
   42c94:	mov	r1, r2
   42c98:	ldr	r2, [sp, #4]
   42c9c:	blx	r2
   42ca0:	ldr	r0, [fp, #-12]
   42ca4:	ldrsb	r0, [r0, #25]
   42ca8:	cmp	r0, #0
   42cac:	beq	42ce4 <flatcc_json_printer_struct_vector_field@@Base+0x2fc>
   42cb0:	ldr	r0, [fp, #-12]
   42cb4:	ldr	r1, [r0, #20]
   42cb8:	add	r2, r1, #1
   42cbc:	str	r2, [r0, #20]
   42cc0:	movw	r0, #10
   42cc4:	strb	r0, [r1]
   42cc8:	ldr	r0, [fp, #-12]
   42ccc:	ldr	r1, [r0, #32]
   42cd0:	mvn	r2, #0
   42cd4:	add	r1, r1, r2
   42cd8:	str	r1, [r0, #32]
   42cdc:	ldr	r0, [fp, #-12]
   42ce0:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42ce4:	ldr	r0, [fp, #-12]
   42ce8:	ldr	r1, [r0, #20]
   42cec:	add	r2, r1, #1
   42cf0:	str	r2, [r0, #20]
   42cf4:	movw	r0, #125	; 0x7d
   42cf8:	strb	r0, [r1]
   42cfc:	b	42bd4 <flatcc_json_printer_struct_vector_field@@Base+0x1ec>
   42d00:	b	42d04 <flatcc_json_printer_struct_vector_field@@Base+0x31c>
   42d04:	ldr	r0, [fp, #-12]
   42d08:	ldrsb	r0, [r0, #25]
   42d0c:	cmp	r0, #0
   42d10:	beq	42d48 <flatcc_json_printer_struct_vector_field@@Base+0x360>
   42d14:	ldr	r0, [fp, #-12]
   42d18:	ldr	r1, [r0, #20]
   42d1c:	add	r2, r1, #1
   42d20:	str	r2, [r0, #20]
   42d24:	movw	r0, #10
   42d28:	strb	r0, [r1]
   42d2c:	ldr	r0, [fp, #-12]
   42d30:	ldr	r1, [r0, #32]
   42d34:	mvn	r2, #0
   42d38:	add	r1, r1, r2
   42d3c:	str	r1, [r0, #32]
   42d40:	ldr	r0, [fp, #-12]
   42d44:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42d48:	ldr	r0, [fp, #-12]
   42d4c:	ldr	r1, [r0, #20]
   42d50:	add	r2, r1, #1
   42d54:	str	r2, [r0, #20]
   42d58:	movw	r0, #93	; 0x5d
   42d5c:	strb	r0, [r1]
   42d60:	b	42d64 <flatcc_json_printer_struct_vector_field@@Base+0x37c>
   42d64:	sub	sp, fp, #8
   42d68:	pop	{r4, sl, fp, pc}

00042d6c <flatcc_json_printer_string_vector_field@@Base>:
   42d6c:	push	{fp, lr}
   42d70:	mov	fp, sp
   42d74:	sub	sp, sp, #48	; 0x30
   42d78:	ldr	ip, [fp, #8]
   42d7c:	str	r0, [fp, #-4]
   42d80:	str	r1, [fp, #-8]
   42d84:	str	r2, [fp, #-12]
   42d88:	str	r3, [fp, #-16]
   42d8c:	ldr	r0, [fp, #-8]
   42d90:	ldr	r1, [fp, #-12]
   42d94:	str	ip, [sp, #20]
   42d98:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   42d9c:	str	r0, [fp, #-20]	; 0xffffffec
   42da0:	ldr	r0, [fp, #-20]	; 0xffffffec
   42da4:	movw	r1, #0
   42da8:	cmp	r0, r1
   42dac:	beq	42fd4 <flatcc_json_printer_string_vector_field@@Base+0x268>
   42db0:	ldr	r0, [fp, #-8]
   42db4:	ldr	r1, [r0, #16]
   42db8:	add	r2, r1, #1
   42dbc:	str	r2, [r0, #16]
   42dc0:	cmp	r1, #0
   42dc4:	beq	42de0 <flatcc_json_printer_string_vector_field@@Base+0x74>
   42dc8:	ldr	r0, [fp, #-4]
   42dcc:	ldr	r1, [r0, #20]
   42dd0:	add	r2, r1, #1
   42dd4:	str	r2, [r0, #20]
   42dd8:	movw	r0, #44	; 0x2c
   42ddc:	strb	r0, [r1]
   42de0:	ldr	r0, [fp, #-20]	; 0xffffffec
   42de4:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   42de8:	str	r0, [fp, #-20]	; 0xffffffec
   42dec:	ldr	r0, [fp, #-20]	; 0xffffffec
   42df0:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   42df4:	str	r0, [sp, #24]
   42df8:	ldr	r0, [fp, #-20]	; 0xffffffec
   42dfc:	add	r0, r0, #4
   42e00:	str	r0, [fp, #-20]	; 0xffffffec
   42e04:	ldr	r0, [fp, #-4]
   42e08:	ldr	r1, [fp, #-16]
   42e0c:	ldr	r2, [fp, #8]
   42e10:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   42e14:	ldr	r0, [fp, #-4]
   42e18:	ldr	r1, [r0, #32]
   42e1c:	add	r1, r1, #1
   42e20:	str	r1, [r0, #32]
   42e24:	ldr	r0, [fp, #-4]
   42e28:	ldr	r1, [r0, #20]
   42e2c:	add	r2, r1, #1
   42e30:	str	r2, [r0, #20]
   42e34:	movw	r0, #91	; 0x5b
   42e38:	strb	r0, [r1]
   42e3c:	ldr	r0, [sp, #24]
   42e40:	cmp	r0, #0
   42e44:	beq	42ec4 <flatcc_json_printer_string_vector_field@@Base+0x158>
   42e48:	b	42e4c <flatcc_json_printer_string_vector_field@@Base+0xe0>
   42e4c:	ldr	r0, [fp, #-4]
   42e50:	ldrsb	r0, [r0, #25]
   42e54:	cmp	r0, #0
   42e58:	beq	42e80 <flatcc_json_printer_string_vector_field@@Base+0x114>
   42e5c:	ldr	r0, [fp, #-4]
   42e60:	ldr	r1, [r0, #20]
   42e64:	add	r2, r1, #1
   42e68:	str	r2, [r0, #20]
   42e6c:	movw	r0, #10
   42e70:	strb	r0, [r1]
   42e74:	ldr	r0, [fp, #-4]
   42e78:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42e7c:	b	42e88 <flatcc_json_printer_string_vector_field@@Base+0x11c>
   42e80:	ldr	r0, [fp, #-4]
   42e84:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   42e88:	b	42e8c <flatcc_json_printer_string_vector_field@@Base+0x120>
   42e8c:	ldr	r0, [fp, #-4]
   42e90:	ldr	r1, [fp, #-20]	; 0xffffffec
   42e94:	str	r0, [sp, #16]
   42e98:	mov	r0, r1
   42e9c:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   42ea0:	ldr	r1, [sp, #16]
   42ea4:	str	r0, [sp, #12]
   42ea8:	mov	r0, r1
   42eac:	ldr	r1, [sp, #12]
   42eb0:	bl	3c444 <flatcc_json_printer_string_field@@Base+0x214>
   42eb4:	ldr	r0, [sp, #24]
   42eb8:	mvn	r1, #0
   42ebc:	add	r0, r0, r1
   42ec0:	str	r0, [sp, #24]
   42ec4:	b	42ec8 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   42ec8:	ldr	r0, [sp, #24]
   42ecc:	mvn	r1, #0
   42ed0:	add	r1, r0, r1
   42ed4:	str	r1, [sp, #24]
   42ed8:	cmp	r0, #0
   42edc:	beq	42f70 <flatcc_json_printer_string_vector_field@@Base+0x204>
   42ee0:	ldr	r0, [fp, #-20]	; 0xffffffec
   42ee4:	add	r0, r0, #4
   42ee8:	str	r0, [fp, #-20]	; 0xffffffec
   42eec:	ldr	r0, [fp, #-4]
   42ef0:	ldr	r1, [r0, #20]
   42ef4:	add	r2, r1, #1
   42ef8:	str	r2, [r0, #20]
   42efc:	movw	r0, #44	; 0x2c
   42f00:	strb	r0, [r1]
   42f04:	ldr	r0, [fp, #-4]
   42f08:	ldrsb	r0, [r0, #25]
   42f0c:	cmp	r0, #0
   42f10:	beq	42f38 <flatcc_json_printer_string_vector_field@@Base+0x1cc>
   42f14:	ldr	r0, [fp, #-4]
   42f18:	ldr	r1, [r0, #20]
   42f1c:	add	r2, r1, #1
   42f20:	str	r2, [r0, #20]
   42f24:	movw	r0, #10
   42f28:	strb	r0, [r1]
   42f2c:	ldr	r0, [fp, #-4]
   42f30:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42f34:	b	42f40 <flatcc_json_printer_string_vector_field@@Base+0x1d4>
   42f38:	ldr	r0, [fp, #-4]
   42f3c:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   42f40:	b	42f44 <flatcc_json_printer_string_vector_field@@Base+0x1d8>
   42f44:	ldr	r0, [fp, #-4]
   42f48:	ldr	r1, [fp, #-20]	; 0xffffffec
   42f4c:	str	r0, [sp, #8]
   42f50:	mov	r0, r1
   42f54:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   42f58:	ldr	r1, [sp, #8]
   42f5c:	str	r0, [sp, #4]
   42f60:	mov	r0, r1
   42f64:	ldr	r1, [sp, #4]
   42f68:	bl	3c444 <flatcc_json_printer_string_field@@Base+0x214>
   42f6c:	b	42ec8 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   42f70:	b	42f74 <flatcc_json_printer_string_vector_field@@Base+0x208>
   42f74:	ldr	r0, [fp, #-4]
   42f78:	ldrsb	r0, [r0, #25]
   42f7c:	cmp	r0, #0
   42f80:	beq	42fb8 <flatcc_json_printer_string_vector_field@@Base+0x24c>
   42f84:	ldr	r0, [fp, #-4]
   42f88:	ldr	r1, [r0, #20]
   42f8c:	add	r2, r1, #1
   42f90:	str	r2, [r0, #20]
   42f94:	movw	r0, #10
   42f98:	strb	r0, [r1]
   42f9c:	ldr	r0, [fp, #-4]
   42fa0:	ldr	r1, [r0, #32]
   42fa4:	mvn	r2, #0
   42fa8:	add	r1, r1, r2
   42fac:	str	r1, [r0, #32]
   42fb0:	ldr	r0, [fp, #-4]
   42fb4:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   42fb8:	ldr	r0, [fp, #-4]
   42fbc:	ldr	r1, [r0, #20]
   42fc0:	add	r2, r1, #1
   42fc4:	str	r2, [r0, #20]
   42fc8:	movw	r0, #93	; 0x5d
   42fcc:	strb	r0, [r1]
   42fd0:	b	42fd4 <flatcc_json_printer_string_vector_field@@Base+0x268>
   42fd4:	mov	sp, fp
   42fd8:	pop	{fp, pc}

00042fdc <flatcc_json_printer_table_vector_field@@Base>:
   42fdc:	push	{fp, lr}
   42fe0:	mov	fp, sp
   42fe4:	sub	sp, sp, #48	; 0x30
   42fe8:	ldr	ip, [fp, #12]
   42fec:	ldr	lr, [fp, #8]
   42ff0:	str	r0, [fp, #-4]
   42ff4:	str	r1, [fp, #-8]
   42ff8:	str	r2, [fp, #-12]
   42ffc:	str	r3, [fp, #-16]
   43000:	ldr	r0, [fp, #-8]
   43004:	ldr	r1, [fp, #-12]
   43008:	str	ip, [sp, #20]
   4300c:	str	lr, [sp, #16]
   43010:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   43014:	str	r0, [fp, #-20]	; 0xffffffec
   43018:	ldr	r0, [fp, #-20]	; 0xffffffec
   4301c:	movw	r1, #0
   43020:	cmp	r0, r1
   43024:	beq	431e0 <flatcc_json_printer_table_vector_field@@Base+0x204>
   43028:	ldr	r0, [fp, #-8]
   4302c:	ldr	r1, [r0, #16]
   43030:	add	r2, r1, #1
   43034:	str	r2, [r0, #16]
   43038:	cmp	r1, #0
   4303c:	beq	43058 <flatcc_json_printer_table_vector_field@@Base+0x7c>
   43040:	ldr	r0, [fp, #-4]
   43044:	ldr	r1, [r0, #20]
   43048:	add	r2, r1, #1
   4304c:	str	r2, [r0, #20]
   43050:	movw	r0, #44	; 0x2c
   43054:	strb	r0, [r1]
   43058:	ldr	r0, [fp, #-20]	; 0xffffffec
   4305c:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   43060:	str	r0, [fp, #-20]	; 0xffffffec
   43064:	ldr	r0, [fp, #-20]	; 0xffffffec
   43068:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   4306c:	str	r0, [sp, #24]
   43070:	ldr	r0, [fp, #-20]	; 0xffffffec
   43074:	add	r0, r0, #4
   43078:	str	r0, [fp, #-20]	; 0xffffffec
   4307c:	ldr	r0, [fp, #-4]
   43080:	ldr	r1, [fp, #-16]
   43084:	ldr	r2, [fp, #8]
   43088:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   4308c:	ldr	r0, [fp, #-4]
   43090:	ldr	r1, [r0, #32]
   43094:	add	r1, r1, #1
   43098:	str	r1, [r0, #32]
   4309c:	ldr	r0, [fp, #-4]
   430a0:	ldr	r1, [r0, #20]
   430a4:	add	r2, r1, #1
   430a8:	str	r2, [r0, #20]
   430ac:	movw	r0, #91	; 0x5b
   430b0:	strb	r0, [r1]
   430b4:	ldr	r0, [sp, #24]
   430b8:	cmp	r0, #0
   430bc:	beq	43104 <flatcc_json_printer_table_vector_field@@Base+0x128>
   430c0:	ldr	r0, [fp, #-4]
   430c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   430c8:	str	r0, [sp, #12]
   430cc:	mov	r0, r1
   430d0:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   430d4:	ldr	r1, [fp, #-8]
   430d8:	ldr	r2, [r1, #12]
   430dc:	ldr	r3, [fp, #12]
   430e0:	ldr	r1, [sp, #12]
   430e4:	str	r0, [sp, #8]
   430e8:	mov	r0, r1
   430ec:	ldr	r1, [sp, #8]
   430f0:	bl	431e8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   430f4:	ldr	r0, [sp, #24]
   430f8:	mvn	r1, #0
   430fc:	add	r0, r0, r1
   43100:	str	r0, [sp, #24]
   43104:	b	43108 <flatcc_json_printer_table_vector_field@@Base+0x12c>
   43108:	ldr	r0, [sp, #24]
   4310c:	mvn	r1, #0
   43110:	add	r1, r0, r1
   43114:	str	r1, [sp, #24]
   43118:	cmp	r0, #0
   4311c:	beq	4317c <flatcc_json_printer_table_vector_field@@Base+0x1a0>
   43120:	ldr	r0, [fp, #-20]	; 0xffffffec
   43124:	add	r0, r0, #4
   43128:	str	r0, [fp, #-20]	; 0xffffffec
   4312c:	ldr	r0, [fp, #-4]
   43130:	ldr	r1, [r0, #20]
   43134:	add	r2, r1, #1
   43138:	str	r2, [r0, #20]
   4313c:	movw	r0, #44	; 0x2c
   43140:	strb	r0, [r1]
   43144:	ldr	r0, [fp, #-4]
   43148:	ldr	r1, [fp, #-20]	; 0xffffffec
   4314c:	str	r0, [sp, #4]
   43150:	mov	r0, r1
   43154:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   43158:	ldr	r1, [fp, #-8]
   4315c:	ldr	r2, [r1, #12]
   43160:	ldr	r3, [fp, #12]
   43164:	ldr	r1, [sp, #4]
   43168:	str	r0, [sp]
   4316c:	mov	r0, r1
   43170:	ldr	r1, [sp]
   43174:	bl	431e8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   43178:	b	43108 <flatcc_json_printer_table_vector_field@@Base+0x12c>
   4317c:	b	43180 <flatcc_json_printer_table_vector_field@@Base+0x1a4>
   43180:	ldr	r0, [fp, #-4]
   43184:	ldrsb	r0, [r0, #25]
   43188:	cmp	r0, #0
   4318c:	beq	431c4 <flatcc_json_printer_table_vector_field@@Base+0x1e8>
   43190:	ldr	r0, [fp, #-4]
   43194:	ldr	r1, [r0, #20]
   43198:	add	r2, r1, #1
   4319c:	str	r2, [r0, #20]
   431a0:	movw	r0, #10
   431a4:	strb	r0, [r1]
   431a8:	ldr	r0, [fp, #-4]
   431ac:	ldr	r1, [r0, #32]
   431b0:	mvn	r2, #0
   431b4:	add	r1, r1, r2
   431b8:	str	r1, [r0, #32]
   431bc:	ldr	r0, [fp, #-4]
   431c0:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   431c4:	ldr	r0, [fp, #-4]
   431c8:	ldr	r1, [r0, #20]
   431cc:	add	r2, r1, #1
   431d0:	str	r2, [r0, #20]
   431d4:	movw	r0, #93	; 0x5d
   431d8:	strb	r0, [r1]
   431dc:	b	431e0 <flatcc_json_printer_table_vector_field@@Base+0x204>
   431e0:	mov	sp, fp
   431e4:	pop	{fp, pc}
   431e8:	push	{fp, lr}
   431ec:	mov	fp, sp
   431f0:	sub	sp, sp, #48	; 0x30
   431f4:	str	r0, [fp, #-4]
   431f8:	str	r1, [fp, #-8]
   431fc:	str	r2, [fp, #-12]
   43200:	str	r3, [fp, #-16]
   43204:	ldr	r0, [fp, #-12]
   43208:	mvn	r1, #0
   4320c:	add	r0, r0, r1
   43210:	str	r0, [fp, #-12]
   43214:	cmp	r0, #0
   43218:	bne	4322c <flatcc_json_printer_table_vector_field@@Base+0x250>
   4321c:	ldr	r0, [fp, #-4]
   43220:	movw	r1, #2
   43224:	bl	43760 <flatcc_json_printer_union_vector_field@@Base+0x438>
   43228:	b	43320 <flatcc_json_printer_table_vector_field@@Base+0x344>
   4322c:	b	43230 <flatcc_json_printer_table_vector_field@@Base+0x254>
   43230:	ldr	r0, [fp, #-4]
   43234:	ldr	r1, [r0, #32]
   43238:	add	r1, r1, #1
   4323c:	str	r1, [r0, #32]
   43240:	ldr	r0, [fp, #-4]
   43244:	ldr	r1, [r0, #20]
   43248:	add	r2, r1, #1
   4324c:	str	r2, [r0, #20]
   43250:	movw	r0, #123	; 0x7b
   43254:	strb	r0, [r1]
   43258:	movw	r0, #0
   4325c:	str	r0, [sp, #28]
   43260:	ldr	r0, [fp, #-12]
   43264:	str	r0, [sp, #24]
   43268:	ldr	r0, [fp, #-8]
   4326c:	str	r0, [sp, #12]
   43270:	ldr	r0, [fp, #-8]
   43274:	ldr	r1, [fp, #-8]
   43278:	str	r0, [sp, #8]
   4327c:	mov	r0, r1
   43280:	bl	469d4 <flatcc_json_printer_clear@@Base+0x1c90>
   43284:	movw	r1, #0
   43288:	sub	r0, r1, r0
   4328c:	ldr	r1, [sp, #8]
   43290:	add	r0, r1, r0
   43294:	str	r0, [sp, #16]
   43298:	ldr	r0, [sp, #16]
   4329c:	bl	46444 <flatcc_json_printer_clear@@Base+0x1700>
   432a0:	uxth	r0, r0
   432a4:	str	r0, [sp, #20]
   432a8:	ldr	r0, [fp, #-16]
   432ac:	ldr	r1, [fp, #-4]
   432b0:	str	r0, [sp, #4]
   432b4:	mov	r0, r1
   432b8:	add	r1, sp, #12
   432bc:	ldr	r2, [sp, #4]
   432c0:	blx	r2
   432c4:	ldr	r0, [fp, #-4]
   432c8:	ldrsb	r0, [r0, #25]
   432cc:	cmp	r0, #0
   432d0:	beq	43308 <flatcc_json_printer_table_vector_field@@Base+0x32c>
   432d4:	ldr	r0, [fp, #-4]
   432d8:	ldr	r1, [r0, #20]
   432dc:	add	r2, r1, #1
   432e0:	str	r2, [r0, #20]
   432e4:	movw	r0, #10
   432e8:	strb	r0, [r1]
   432ec:	ldr	r0, [fp, #-4]
   432f0:	ldr	r1, [r0, #32]
   432f4:	mvn	r2, #0
   432f8:	add	r1, r1, r2
   432fc:	str	r1, [r0, #32]
   43300:	ldr	r0, [fp, #-4]
   43304:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   43308:	ldr	r0, [fp, #-4]
   4330c:	ldr	r1, [r0, #20]
   43310:	add	r2, r1, #1
   43314:	str	r2, [r0, #20]
   43318:	movw	r0, #125	; 0x7d
   4331c:	strb	r0, [r1]
   43320:	mov	sp, fp
   43324:	pop	{fp, pc}

00043328 <flatcc_json_printer_union_vector_field@@Base>:
   43328:	push	{r4, sl, fp, lr}
   4332c:	add	fp, sp, #8
   43330:	sub	sp, sp, #192	; 0xc0
   43334:	ldr	ip, [fp, #16]
   43338:	ldr	lr, [fp, #12]
   4333c:	ldr	r4, [fp, #8]
   43340:	str	r0, [fp, #-12]
   43344:	str	r1, [fp, #-16]
   43348:	str	r2, [fp, #-20]	; 0xffffffec
   4334c:	str	r3, [fp, #-24]	; 0xffffffe8
   43350:	ldr	r0, [fp, #-16]
   43354:	ldr	r1, [fp, #-20]	; 0xffffffec
   43358:	sub	r1, r1, #1
   4335c:	str	ip, [sp, #32]
   43360:	str	lr, [sp, #28]
   43364:	str	r4, [sp, #24]
   43368:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   4336c:	str	r0, [fp, #-28]	; 0xffffffe4
   43370:	ldr	r0, [fp, #-16]
   43374:	ldr	r1, [fp, #-20]	; 0xffffffec
   43378:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   4337c:	str	r0, [fp, #-32]	; 0xffffffe0
   43380:	ldr	r0, [fp, #-16]
   43384:	ldr	r0, [r0, #12]
   43388:	str	r0, [sp, #40]	; 0x28
   4338c:	ldr	r0, [fp, #8]
   43390:	cmp	r0, #100	; 0x64
   43394:	ble	433c4 <flatcc_json_printer_union_vector_field@@Base+0x9c>
   43398:	ldr	r0, [fp, #-12]
   4339c:	movw	r1, #1
   433a0:	bl	43760 <flatcc_json_printer_union_vector_field@@Base+0x438>
   433a4:	ldr	r0, [pc, #936]	; 43754 <flatcc_json_printer_union_vector_field@@Base+0x42c>
   433a8:	add	r0, pc, r0
   433ac:	ldr	r1, [pc, #932]	; 43758 <flatcc_json_printer_union_vector_field@@Base+0x430>
   433b0:	add	r1, pc, r1
   433b4:	ldr	r2, [pc, #928]	; 4375c <flatcc_json_printer_union_vector_field@@Base+0x434>
   433b8:	add	r3, pc, r2
   433bc:	movw	r2, #843	; 0x34b
   433c0:	bl	14f08 <__assert_fail@plt>
   433c4:	ldr	r0, [pc, #900]	; 43750 <flatcc_json_printer_union_vector_field@@Base+0x428>
   433c8:	add	r0, pc, r0
   433cc:	add	r1, sp, #51	; 0x33
   433d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   433d4:	ldr	r3, [fp, #8]
   433d8:	str	r0, [sp, #20]
   433dc:	mov	r0, r1
   433e0:	str	r1, [sp, #16]
   433e4:	mov	r1, r2
   433e8:	mov	r2, r3
   433ec:	bl	14e30 <memcpy@plt>
   433f0:	ldr	r0, [fp, #8]
   433f4:	ldr	r1, [sp, #16]
   433f8:	add	r0, r1, r0
   433fc:	ldr	r2, [sp, #20]
   43400:	ldrb	r3, [r2]
   43404:	strb	r3, [r0]
   43408:	ldrb	r3, [r2, #1]
   4340c:	strb	r3, [r0, #1]
   43410:	ldrb	r3, [r2, #2]
   43414:	strb	r3, [r0, #2]
   43418:	ldrb	r3, [r2, #3]
   4341c:	strb	r3, [r0, #3]
   43420:	ldrb	r3, [r2, #4]
   43424:	strb	r3, [r0, #4]
   43428:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4342c:	movw	r3, #0
   43430:	cmp	r0, r3
   43434:	beq	43748 <flatcc_json_printer_union_vector_field@@Base+0x420>
   43438:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4343c:	movw	r1, #0
   43440:	cmp	r0, r1
   43444:	beq	43748 <flatcc_json_printer_union_vector_field@@Base+0x420>
   43448:	add	r3, sp, #51	; 0x33
   4344c:	ldr	r0, [fp, #-12]
   43450:	ldr	r1, [fp, #-16]
   43454:	ldr	r2, [fp, #-20]	; 0xffffffec
   43458:	sub	r2, r2, #1
   4345c:	ldr	ip, [fp, #8]
   43460:	add	ip, ip, #5
   43464:	ldr	lr, [fp, #12]
   43468:	str	ip, [sp]
   4346c:	str	lr, [sp, #4]
   43470:	bl	40e00 <flatcc_json_printer_utype_enum_vector_field@@Base>
   43474:	ldr	r0, [fp, #-16]
   43478:	ldr	r1, [r0, #16]
   4347c:	add	r2, r1, #1
   43480:	str	r2, [r0, #16]
   43484:	cmp	r1, #0
   43488:	beq	434a4 <flatcc_json_printer_union_vector_field@@Base+0x17c>
   4348c:	ldr	r0, [fp, #-12]
   43490:	ldr	r1, [r0, #20]
   43494:	add	r2, r1, #1
   43498:	str	r2, [r0, #20]
   4349c:	movw	r0, #44	; 0x2c
   434a0:	strb	r0, [r1]
   434a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   434a8:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   434ac:	str	r0, [fp, #-32]	; 0xffffffe0
   434b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   434b4:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   434b8:	str	r0, [fp, #-28]	; 0xffffffe4
   434bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   434c0:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   434c4:	str	r0, [fp, #-44]	; 0xffffffd4
   434c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   434cc:	add	r0, r0, #4
   434d0:	str	r0, [fp, #-32]	; 0xffffffe0
   434d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   434d8:	add	r0, r0, #4
   434dc:	str	r0, [fp, #-28]	; 0xffffffe4
   434e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   434e4:	str	r0, [fp, #-36]	; 0xffffffdc
   434e8:	ldr	r0, [fp, #-12]
   434ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   434f0:	ldr	r2, [fp, #8]
   434f4:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   434f8:	ldr	r0, [fp, #-12]
   434fc:	ldr	r1, [r0, #32]
   43500:	add	r1, r1, #1
   43504:	str	r1, [r0, #32]
   43508:	ldr	r0, [fp, #-12]
   4350c:	ldr	r1, [r0, #20]
   43510:	add	r2, r1, #1
   43514:	str	r2, [r0, #20]
   43518:	movw	r0, #91	; 0x5b
   4351c:	strb	r0, [r1]
   43520:	ldr	r0, [fp, #-44]	; 0xffffffd4
   43524:	cmp	r0, #0
   43528:	beq	435e8 <flatcc_json_printer_union_vector_field@@Base+0x2c0>
   4352c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   43530:	bl	3f2ac <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   43534:	strb	r0, [fp, #-37]	; 0xffffffdb
   43538:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   4353c:	cmp	r0, #0
   43540:	beq	43574 <flatcc_json_printer_union_vector_field@@Base+0x24c>
   43544:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   43548:	strb	r0, [sp, #44]	; 0x2c
   4354c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   43550:	str	r0, [sp, #36]	; 0x24
   43554:	ldr	r0, [fp, #16]
   43558:	ldr	r1, [fp, #-12]
   4355c:	str	r0, [sp, #12]
   43560:	mov	r0, r1
   43564:	add	r1, sp, #36	; 0x24
   43568:	ldr	r2, [sp, #12]
   4356c:	blx	r2
   43570:	b	435d8 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   43574:	b	43578 <flatcc_json_printer_union_vector_field@@Base+0x250>
   43578:	ldr	r0, [fp, #-12]
   4357c:	ldr	r1, [r0, #20]
   43580:	add	r2, r1, #1
   43584:	str	r2, [r0, #20]
   43588:	movw	r0, #110	; 0x6e
   4358c:	strb	r0, [r1]
   43590:	ldr	r0, [fp, #-12]
   43594:	ldr	r1, [r0, #20]
   43598:	add	r2, r1, #1
   4359c:	str	r2, [r0, #20]
   435a0:	movw	r0, #117	; 0x75
   435a4:	strb	r0, [r1]
   435a8:	ldr	r0, [fp, #-12]
   435ac:	ldr	r1, [r0, #20]
   435b0:	add	r2, r1, #1
   435b4:	str	r2, [r0, #20]
   435b8:	movw	r0, #108	; 0x6c
   435bc:	strb	r0, [r1]
   435c0:	ldr	r1, [fp, #-12]
   435c4:	ldr	r2, [r1, #20]
   435c8:	add	r3, r2, #1
   435cc:	str	r3, [r1, #20]
   435d0:	strb	r0, [r2]
   435d4:	b	435d8 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   435d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   435dc:	mvn	r1, #0
   435e0:	add	r0, r0, r1
   435e4:	str	r0, [fp, #-44]	; 0xffffffd4
   435e8:	b	435ec <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   435ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   435f0:	mvn	r1, #0
   435f4:	add	r1, r0, r1
   435f8:	str	r1, [fp, #-44]	; 0xffffffd4
   435fc:	cmp	r0, #0
   43600:	beq	436e4 <flatcc_json_printer_union_vector_field@@Base+0x3bc>
   43604:	ldr	r0, [fp, #-32]	; 0xffffffe0
   43608:	add	r0, r0, #4
   4360c:	str	r0, [fp, #-32]	; 0xffffffe0
   43610:	ldr	r0, [fp, #-36]	; 0xffffffdc
   43614:	add	r0, r0, #1
   43618:	str	r0, [fp, #-36]	; 0xffffffdc
   4361c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   43620:	bl	3f2ac <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   43624:	strb	r0, [fp, #-37]	; 0xffffffdb
   43628:	ldr	r0, [fp, #-12]
   4362c:	ldr	r1, [r0, #20]
   43630:	add	r2, r1, #1
   43634:	str	r2, [r0, #20]
   43638:	movw	r0, #44	; 0x2c
   4363c:	strb	r0, [r1]
   43640:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   43644:	cmp	r0, #0
   43648:	beq	4367c <flatcc_json_printer_union_vector_field@@Base+0x354>
   4364c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   43650:	strb	r0, [sp, #44]	; 0x2c
   43654:	ldr	r0, [fp, #-32]	; 0xffffffe0
   43658:	str	r0, [sp, #36]	; 0x24
   4365c:	ldr	r0, [fp, #16]
   43660:	ldr	r1, [fp, #-12]
   43664:	str	r0, [sp, #8]
   43668:	mov	r0, r1
   4366c:	add	r1, sp, #36	; 0x24
   43670:	ldr	r2, [sp, #8]
   43674:	blx	r2
   43678:	b	436e0 <flatcc_json_printer_union_vector_field@@Base+0x3b8>
   4367c:	b	43680 <flatcc_json_printer_union_vector_field@@Base+0x358>
   43680:	ldr	r0, [fp, #-12]
   43684:	ldr	r1, [r0, #20]
   43688:	add	r2, r1, #1
   4368c:	str	r2, [r0, #20]
   43690:	movw	r0, #110	; 0x6e
   43694:	strb	r0, [r1]
   43698:	ldr	r0, [fp, #-12]
   4369c:	ldr	r1, [r0, #20]
   436a0:	add	r2, r1, #1
   436a4:	str	r2, [r0, #20]
   436a8:	movw	r0, #117	; 0x75
   436ac:	strb	r0, [r1]
   436b0:	ldr	r0, [fp, #-12]
   436b4:	ldr	r1, [r0, #20]
   436b8:	add	r2, r1, #1
   436bc:	str	r2, [r0, #20]
   436c0:	movw	r0, #108	; 0x6c
   436c4:	strb	r0, [r1]
   436c8:	ldr	r1, [fp, #-12]
   436cc:	ldr	r2, [r1, #20]
   436d0:	add	r3, r2, #1
   436d4:	str	r3, [r1, #20]
   436d8:	strb	r0, [r2]
   436dc:	b	436e0 <flatcc_json_printer_union_vector_field@@Base+0x3b8>
   436e0:	b	435ec <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   436e4:	b	436e8 <flatcc_json_printer_union_vector_field@@Base+0x3c0>
   436e8:	ldr	r0, [fp, #-12]
   436ec:	ldrsb	r0, [r0, #25]
   436f0:	cmp	r0, #0
   436f4:	beq	4372c <flatcc_json_printer_union_vector_field@@Base+0x404>
   436f8:	ldr	r0, [fp, #-12]
   436fc:	ldr	r1, [r0, #20]
   43700:	add	r2, r1, #1
   43704:	str	r2, [r0, #20]
   43708:	movw	r0, #10
   4370c:	strb	r0, [r1]
   43710:	ldr	r0, [fp, #-12]
   43714:	ldr	r1, [r0, #32]
   43718:	mvn	r2, #0
   4371c:	add	r1, r1, r2
   43720:	str	r1, [r0, #32]
   43724:	ldr	r0, [fp, #-12]
   43728:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   4372c:	ldr	r0, [fp, #-12]
   43730:	ldr	r1, [r0, #20]
   43734:	add	r2, r1, #1
   43738:	str	r2, [r0, #20]
   4373c:	movw	r0, #93	; 0x5d
   43740:	strb	r0, [r1]
   43744:	b	43748 <flatcc_json_printer_union_vector_field@@Base+0x420>
   43748:	sub	sp, fp, #8
   4374c:	pop	{r4, sl, fp, pc}
   43750:	andeq	sl, r0, r3, asr #8
   43754:	andeq	sl, r0, ip, lsl r3
   43758:	andeq	sl, r0, pc, lsr #6
   4375c:	andeq	sl, r0, r9, lsl #7
   43760:	sub	sp, sp, #8
   43764:	str	r0, [sp, #4]
   43768:	str	r1, [sp]
   4376c:	ldr	r0, [sp, #4]
   43770:	ldr	r0, [r0, #36]	; 0x24
   43774:	cmp	r0, #0
   43778:	bne	43788 <flatcc_json_printer_union_vector_field@@Base+0x460>
   4377c:	ldr	r0, [sp]
   43780:	ldr	r1, [sp, #4]
   43784:	str	r0, [r1, #36]	; 0x24
   43788:	add	sp, sp, #8
   4378c:	bx	lr

00043790 <flatcc_json_printer_table_field@@Base>:
   43790:	push	{fp, lr}
   43794:	mov	fp, sp
   43798:	sub	sp, sp, #40	; 0x28
   4379c:	ldr	ip, [fp, #12]
   437a0:	ldr	lr, [fp, #8]
   437a4:	str	r0, [fp, #-4]
   437a8:	str	r1, [fp, #-8]
   437ac:	str	r2, [fp, #-12]
   437b0:	str	r3, [fp, #-16]
   437b4:	ldr	r0, [fp, #-8]
   437b8:	ldr	r1, [fp, #-12]
   437bc:	str	ip, [sp, #16]
   437c0:	str	lr, [sp, #12]
   437c4:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   437c8:	str	r0, [sp, #20]
   437cc:	ldr	r0, [sp, #20]
   437d0:	movw	r1, #0
   437d4:	cmp	r0, r1
   437d8:	beq	43850 <flatcc_json_printer_table_field@@Base+0xc0>
   437dc:	ldr	r0, [fp, #-8]
   437e0:	ldr	r1, [r0, #16]
   437e4:	add	r2, r1, #1
   437e8:	str	r2, [r0, #16]
   437ec:	cmp	r1, #0
   437f0:	beq	4380c <flatcc_json_printer_table_field@@Base+0x7c>
   437f4:	ldr	r0, [fp, #-4]
   437f8:	ldr	r1, [r0, #20]
   437fc:	add	r2, r1, #1
   43800:	str	r2, [r0, #20]
   43804:	movw	r0, #44	; 0x2c
   43808:	strb	r0, [r1]
   4380c:	ldr	r0, [fp, #-4]
   43810:	ldr	r1, [fp, #-16]
   43814:	ldr	r2, [fp, #8]
   43818:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   4381c:	ldr	r0, [fp, #-4]
   43820:	ldr	r1, [sp, #20]
   43824:	str	r0, [sp, #8]
   43828:	mov	r0, r1
   4382c:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   43830:	ldr	r1, [fp, #-8]
   43834:	ldr	r2, [r1, #12]
   43838:	ldr	r3, [fp, #12]
   4383c:	ldr	r1, [sp, #8]
   43840:	str	r0, [sp, #4]
   43844:	mov	r0, r1
   43848:	ldr	r1, [sp, #4]
   4384c:	bl	431e8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   43850:	mov	sp, fp
   43854:	pop	{fp, pc}

00043858 <flatcc_json_printer_union_field@@Base>:
   43858:	push	{r4, sl, fp, lr}
   4385c:	add	fp, sp, #8
   43860:	sub	sp, sp, #64	; 0x40
   43864:	ldr	ip, [fp, #16]
   43868:	ldr	lr, [fp, #12]
   4386c:	ldr	r4, [fp, #8]
   43870:	str	r0, [fp, #-12]
   43874:	str	r1, [fp, #-16]
   43878:	str	r2, [fp, #-20]	; 0xffffffec
   4387c:	str	r3, [fp, #-24]	; 0xffffffe8
   43880:	ldr	r0, [fp, #-16]
   43884:	ldr	r1, [fp, #-20]	; 0xffffffec
   43888:	sub	r1, r1, #1
   4388c:	str	ip, [sp, #20]
   43890:	str	lr, [sp, #16]
   43894:	str	r4, [sp, #12]
   43898:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   4389c:	str	r0, [fp, #-28]	; 0xffffffe4
   438a0:	ldr	r0, [fp, #-16]
   438a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   438a8:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   438ac:	str	r0, [fp, #-32]	; 0xffffffe0
   438b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   438b4:	movw	r1, #0
   438b8:	cmp	r0, r1
   438bc:	beq	438d0 <flatcc_json_printer_union_field@@Base+0x78>
   438c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   438c4:	movw	r1, #0
   438c8:	cmp	r0, r1
   438cc:	bne	438d4 <flatcc_json_printer_union_field@@Base+0x7c>
   438d0:	b	43b60 <flatcc_json_printer_union_field@@Base+0x308>
   438d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   438d8:	bl	3f2ac <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   438dc:	strb	r0, [fp, #-33]	; 0xffffffdf
   438e0:	ldr	r0, [fp, #-16]
   438e4:	ldr	r1, [r0, #16]
   438e8:	add	r2, r1, #1
   438ec:	str	r2, [r0, #16]
   438f0:	cmp	r1, #0
   438f4:	beq	43910 <flatcc_json_printer_union_field@@Base+0xb8>
   438f8:	ldr	r0, [fp, #-12]
   438fc:	ldr	r1, [r0, #20]
   43900:	add	r2, r1, #1
   43904:	str	r2, [r0, #20]
   43908:	movw	r0, #44	; 0x2c
   4390c:	strb	r0, [r1]
   43910:	b	43914 <flatcc_json_printer_union_field@@Base+0xbc>
   43914:	ldr	r0, [fp, #-12]
   43918:	ldrsb	r0, [r0, #25]
   4391c:	cmp	r0, #0
   43920:	beq	43948 <flatcc_json_printer_union_field@@Base+0xf0>
   43924:	ldr	r0, [fp, #-12]
   43928:	ldr	r1, [r0, #20]
   4392c:	add	r2, r1, #1
   43930:	str	r2, [r0, #20]
   43934:	movw	r0, #10
   43938:	strb	r0, [r1]
   4393c:	ldr	r0, [fp, #-12]
   43940:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   43944:	b	43950 <flatcc_json_printer_union_field@@Base+0xf8>
   43948:	ldr	r0, [fp, #-12]
   4394c:	bl	3a460 <flatcc_json_printer_nl@@Base+0x38>
   43950:	b	43954 <flatcc_json_printer_union_field@@Base+0xfc>
   43954:	ldr	r0, [fp, #-12]
   43958:	ldr	r0, [r0, #20]
   4395c:	movw	r1, #34	; 0x22
   43960:	strb	r1, [r0]
   43964:	ldr	r0, [fp, #-12]
   43968:	ldrsb	r0, [r0, #26]
   4396c:	cmp	r0, #0
   43970:	movw	r0, #0
   43974:	movne	r0, #1
   43978:	mvn	r1, #0
   4397c:	eor	r0, r0, r1
   43980:	and	r0, r0, #1
   43984:	ldr	r1, [fp, #-12]
   43988:	ldr	r2, [r1, #20]
   4398c:	add	r0, r2, r0
   43990:	str	r0, [r1, #20]
   43994:	ldr	r0, [fp, #-12]
   43998:	ldr	r0, [r0, #20]
   4399c:	ldr	r1, [fp, #8]
   439a0:	add	r0, r0, r1
   439a4:	ldr	r1, [fp, #-12]
   439a8:	ldr	r1, [r1, #16]
   439ac:	cmp	r0, r1
   439b0:	bcs	439e0 <flatcc_json_printer_union_field@@Base+0x188>
   439b4:	ldr	r0, [fp, #-12]
   439b8:	ldr	r0, [r0, #20]
   439bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   439c0:	ldr	r2, [fp, #8]
   439c4:	bl	14e30 <memcpy@plt>
   439c8:	ldr	r0, [fp, #8]
   439cc:	ldr	r1, [fp, #-12]
   439d0:	ldr	r2, [r1, #20]
   439d4:	add	r0, r2, r0
   439d8:	str	r0, [r1, #20]
   439dc:	b	439f0 <flatcc_json_printer_union_field@@Base+0x198>
   439e0:	ldr	r0, [fp, #-12]
   439e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   439e8:	ldr	r2, [fp, #8]
   439ec:	bl	3a3ac <flatcc_json_printer_write@@Base+0x30>
   439f0:	ldr	r0, [pc, #368]	; 43b68 <flatcc_json_printer_union_field@@Base+0x310>
   439f4:	add	r1, pc, r0
   439f8:	ldr	r0, [fp, #-12]
   439fc:	movw	r2, #5
   43a00:	bl	3a3ac <flatcc_json_printer_write@@Base+0x30>
   43a04:	ldr	r0, [fp, #-12]
   43a08:	ldr	r0, [r0, #20]
   43a0c:	movw	r1, #34	; 0x22
   43a10:	strb	r1, [r0]
   43a14:	ldr	r0, [fp, #-12]
   43a18:	ldrsb	r0, [r0, #26]
   43a1c:	cmp	r0, #0
   43a20:	movw	r0, #0
   43a24:	movne	r0, #1
   43a28:	mvn	r1, #0
   43a2c:	eor	r0, r0, r1
   43a30:	and	r0, r0, #1
   43a34:	ldr	r1, [fp, #-12]
   43a38:	ldr	r2, [r1, #20]
   43a3c:	add	r0, r2, r0
   43a40:	str	r0, [r1, #20]
   43a44:	ldr	r0, [fp, #-12]
   43a48:	ldr	r1, [r0, #20]
   43a4c:	add	r2, r1, #1
   43a50:	str	r2, [r0, #20]
   43a54:	movw	r0, #58	; 0x3a
   43a58:	strb	r0, [r1]
   43a5c:	ldr	r0, [fp, #-12]
   43a60:	ldr	r0, [r0, #20]
   43a64:	movw	r1, #32
   43a68:	strb	r1, [r0]
   43a6c:	ldr	r0, [fp, #-12]
   43a70:	ldrsb	r0, [r0, #25]
   43a74:	cmp	r0, #0
   43a78:	movw	r0, #0
   43a7c:	movne	r0, #1
   43a80:	mvn	r1, #0
   43a84:	eor	r0, r0, r1
   43a88:	eor	r0, r0, r1
   43a8c:	and	r0, r0, #1
   43a90:	ldr	r1, [fp, #-12]
   43a94:	ldr	r2, [r1, #20]
   43a98:	add	r0, r2, r0
   43a9c:	str	r0, [r1, #20]
   43aa0:	ldr	r0, [fp, #-12]
   43aa4:	ldrsb	r0, [r0, #27]
   43aa8:	cmp	r0, #0
   43aac:	beq	43ad8 <flatcc_json_printer_union_field@@Base+0x280>
   43ab0:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   43ab4:	ldr	r1, [fp, #-12]
   43ab8:	ldr	r1, [r1, #20]
   43abc:	and	r0, r0, #255	; 0xff
   43ac0:	bl	3a608 <flatcc_json_printer_uint8@@Base+0x40>
   43ac4:	ldr	r1, [fp, #-12]
   43ac8:	ldr	r2, [r1, #20]
   43acc:	add	r0, r2, r0
   43ad0:	str	r0, [r1, #20]
   43ad4:	b	43af4 <flatcc_json_printer_union_field@@Base+0x29c>
   43ad8:	ldr	r0, [fp, #12]
   43adc:	ldr	r1, [fp, #-12]
   43ae0:	str	r0, [sp, #8]
   43ae4:	mov	r0, r1
   43ae8:	ldrb	r1, [fp, #-33]	; 0xffffffdf
   43aec:	ldr	r2, [sp, #8]
   43af0:	blx	r2
   43af4:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   43af8:	cmp	r0, #0
   43afc:	beq	43b60 <flatcc_json_printer_union_field@@Base+0x308>
   43b00:	ldr	r0, [fp, #-12]
   43b04:	ldr	r1, [r0, #20]
   43b08:	add	r2, r1, #1
   43b0c:	str	r2, [r0, #20]
   43b10:	movw	r0, #44	; 0x2c
   43b14:	strb	r0, [r1]
   43b18:	ldr	r0, [fp, #-12]
   43b1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43b20:	ldr	r2, [fp, #8]
   43b24:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   43b28:	ldr	r0, [fp, #-16]
   43b2c:	ldr	r0, [r0, #12]
   43b30:	str	r0, [sp, #28]
   43b34:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   43b38:	strb	r0, [sp, #32]
   43b3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   43b40:	str	r0, [sp, #24]
   43b44:	ldr	r0, [fp, #16]
   43b48:	ldr	r1, [fp, #-12]
   43b4c:	str	r0, [sp, #4]
   43b50:	mov	r0, r1
   43b54:	add	r1, sp, #24
   43b58:	ldr	r2, [sp, #4]
   43b5c:	blx	r2
   43b60:	sub	sp, fp, #8
   43b64:	pop	{r4, sl, fp, pc}
   43b68:	andeq	r9, r0, r7, lsl lr

00043b6c <flatcc_json_printer_union_table@@Base>:
   43b6c:	push	{fp, lr}
   43b70:	mov	fp, sp
   43b74:	sub	sp, sp, #24
   43b78:	str	r0, [fp, #-4]
   43b7c:	str	r1, [fp, #-8]
   43b80:	str	r2, [sp, #12]
   43b84:	ldr	r0, [fp, #-4]
   43b88:	ldr	r1, [fp, #-8]
   43b8c:	ldr	r1, [r1]
   43b90:	str	r0, [sp, #8]
   43b94:	mov	r0, r1
   43b98:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   43b9c:	ldr	r1, [fp, #-8]
   43ba0:	ldr	r2, [r1, #4]
   43ba4:	ldr	r3, [sp, #12]
   43ba8:	ldr	r1, [sp, #8]
   43bac:	str	r0, [sp, #4]
   43bb0:	mov	r0, r1
   43bb4:	ldr	r1, [sp, #4]
   43bb8:	bl	431e8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   43bbc:	mov	sp, fp
   43bc0:	pop	{fp, pc}

00043bc4 <flatcc_json_printer_union_struct@@Base>:
   43bc4:	push	{fp, lr}
   43bc8:	mov	fp, sp
   43bcc:	sub	sp, sp, #24
   43bd0:	str	r0, [fp, #-4]
   43bd4:	str	r1, [fp, #-8]
   43bd8:	str	r2, [sp, #12]
   43bdc:	ldr	r0, [fp, #-4]
   43be0:	ldr	r1, [r0, #32]
   43be4:	add	r1, r1, #1
   43be8:	str	r1, [r0, #32]
   43bec:	ldr	r0, [fp, #-4]
   43bf0:	ldr	r1, [r0, #20]
   43bf4:	add	r2, r1, #1
   43bf8:	str	r2, [r0, #20]
   43bfc:	movw	r0, #123	; 0x7b
   43c00:	strb	r0, [r1]
   43c04:	ldr	r0, [sp, #12]
   43c08:	ldr	r1, [fp, #-4]
   43c0c:	ldr	r2, [fp, #-8]
   43c10:	ldr	r2, [r2]
   43c14:	str	r0, [sp, #8]
   43c18:	mov	r0, r2
   43c1c:	str	r1, [sp, #4]
   43c20:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   43c24:	ldr	r1, [sp, #4]
   43c28:	str	r0, [sp]
   43c2c:	mov	r0, r1
   43c30:	ldr	r1, [sp]
   43c34:	ldr	r2, [sp, #8]
   43c38:	blx	r2
   43c3c:	ldr	r0, [fp, #-4]
   43c40:	ldrsb	r0, [r0, #25]
   43c44:	cmp	r0, #0
   43c48:	beq	43c80 <flatcc_json_printer_union_struct@@Base+0xbc>
   43c4c:	ldr	r0, [fp, #-4]
   43c50:	ldr	r1, [r0, #20]
   43c54:	add	r2, r1, #1
   43c58:	str	r2, [r0, #20]
   43c5c:	movw	r0, #10
   43c60:	strb	r0, [r1]
   43c64:	ldr	r0, [fp, #-4]
   43c68:	ldr	r1, [r0, #32]
   43c6c:	mvn	r2, #0
   43c70:	add	r1, r1, r2
   43c74:	str	r1, [r0, #32]
   43c78:	ldr	r0, [fp, #-4]
   43c7c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   43c80:	ldr	r0, [fp, #-4]
   43c84:	ldr	r1, [r0, #20]
   43c88:	add	r2, r1, #1
   43c8c:	str	r2, [r0, #20]
   43c90:	movw	r0, #125	; 0x7d
   43c94:	strb	r0, [r1]
   43c98:	mov	sp, fp
   43c9c:	pop	{fp, pc}

00043ca0 <flatcc_json_printer_union_string@@Base>:
   43ca0:	push	{fp, lr}
   43ca4:	mov	fp, sp
   43ca8:	sub	sp, sp, #16
   43cac:	str	r0, [fp, #-4]
   43cb0:	str	r1, [sp, #8]
   43cb4:	ldr	r0, [fp, #-4]
   43cb8:	ldr	r1, [sp, #8]
   43cbc:	ldr	r1, [r1]
   43cc0:	str	r0, [sp, #4]
   43cc4:	mov	r0, r1
   43cc8:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   43ccc:	ldr	r1, [sp, #4]
   43cd0:	str	r0, [sp]
   43cd4:	mov	r0, r1
   43cd8:	ldr	r1, [sp]
   43cdc:	bl	3c444 <flatcc_json_printer_string_field@@Base+0x214>
   43ce0:	mov	sp, fp
   43ce4:	pop	{fp, pc}

00043ce8 <flatcc_json_printer_embedded_struct_field@@Base>:
   43ce8:	push	{r4, sl, fp, lr}
   43cec:	add	fp, sp, #8
   43cf0:	sub	sp, sp, #24
   43cf4:	ldr	ip, [fp, #16]
   43cf8:	ldr	lr, [fp, #12]
   43cfc:	ldr	r4, [fp, #8]
   43d00:	str	r0, [fp, #-12]
   43d04:	str	r1, [sp, #16]
   43d08:	str	r2, [sp, #12]
   43d0c:	str	r3, [sp, #8]
   43d10:	ldr	r0, [sp, #16]
   43d14:	cmp	r0, #0
   43d18:	beq	43d34 <flatcc_json_printer_embedded_struct_field@@Base+0x4c>
   43d1c:	ldr	r0, [fp, #-12]
   43d20:	ldr	r1, [r0, #20]
   43d24:	add	r2, r1, #1
   43d28:	str	r2, [r0, #20]
   43d2c:	movw	r0, #44	; 0x2c
   43d30:	strb	r0, [r1]
   43d34:	ldr	r0, [fp, #-12]
   43d38:	ldr	r1, [fp, #8]
   43d3c:	ldr	r2, [fp, #12]
   43d40:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   43d44:	ldr	r0, [fp, #-12]
   43d48:	ldr	r1, [r0, #32]
   43d4c:	add	r1, r1, #1
   43d50:	str	r1, [r0, #32]
   43d54:	ldr	r0, [fp, #-12]
   43d58:	ldr	r1, [r0, #20]
   43d5c:	add	r2, r1, #1
   43d60:	str	r2, [r0, #20]
   43d64:	movw	r0, #123	; 0x7b
   43d68:	strb	r0, [r1]
   43d6c:	ldr	r0, [fp, #16]
   43d70:	ldr	r1, [fp, #-12]
   43d74:	ldr	r2, [sp, #12]
   43d78:	ldr	r3, [sp, #8]
   43d7c:	add	r2, r2, r3
   43d80:	str	r0, [sp, #4]
   43d84:	mov	r0, r1
   43d88:	mov	r1, r2
   43d8c:	ldr	r2, [sp, #4]
   43d90:	blx	r2
   43d94:	ldr	r0, [fp, #-12]
   43d98:	ldrsb	r0, [r0, #25]
   43d9c:	cmp	r0, #0
   43da0:	beq	43dd8 <flatcc_json_printer_embedded_struct_field@@Base+0xf0>
   43da4:	ldr	r0, [fp, #-12]
   43da8:	ldr	r1, [r0, #20]
   43dac:	add	r2, r1, #1
   43db0:	str	r2, [r0, #20]
   43db4:	movw	r0, #10
   43db8:	strb	r0, [r1]
   43dbc:	ldr	r0, [fp, #-12]
   43dc0:	ldr	r1, [r0, #32]
   43dc4:	mvn	r2, #0
   43dc8:	add	r1, r1, r2
   43dcc:	str	r1, [r0, #32]
   43dd0:	ldr	r0, [fp, #-12]
   43dd4:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   43dd8:	ldr	r0, [fp, #-12]
   43ddc:	ldr	r1, [r0, #20]
   43de0:	add	r2, r1, #1
   43de4:	str	r2, [r0, #20]
   43de8:	movw	r0, #125	; 0x7d
   43dec:	strb	r0, [r1]
   43df0:	sub	sp, fp, #8
   43df4:	pop	{r4, sl, fp, pc}

00043df8 <flatcc_json_printer_struct_field@@Base>:
   43df8:	push	{fp, lr}
   43dfc:	mov	fp, sp
   43e00:	sub	sp, sp, #32
   43e04:	ldr	ip, [fp, #12]
   43e08:	ldr	lr, [fp, #8]
   43e0c:	str	r0, [fp, #-4]
   43e10:	str	r1, [fp, #-8]
   43e14:	str	r2, [fp, #-12]
   43e18:	str	r3, [sp, #16]
   43e1c:	ldr	r0, [fp, #-8]
   43e20:	ldr	r1, [fp, #-12]
   43e24:	str	ip, [sp, #8]
   43e28:	str	lr, [sp, #4]
   43e2c:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   43e30:	str	r0, [sp, #12]
   43e34:	ldr	r0, [sp, #12]
   43e38:	movw	r1, #0
   43e3c:	cmp	r0, r1
   43e40:	beq	43f2c <flatcc_json_printer_struct_field@@Base+0x134>
   43e44:	ldr	r0, [fp, #-8]
   43e48:	ldr	r1, [r0, #16]
   43e4c:	add	r2, r1, #1
   43e50:	str	r2, [r0, #16]
   43e54:	cmp	r1, #0
   43e58:	beq	43e74 <flatcc_json_printer_struct_field@@Base+0x7c>
   43e5c:	ldr	r0, [fp, #-4]
   43e60:	ldr	r1, [r0, #20]
   43e64:	add	r2, r1, #1
   43e68:	str	r2, [r0, #20]
   43e6c:	movw	r0, #44	; 0x2c
   43e70:	strb	r0, [r1]
   43e74:	ldr	r0, [fp, #-4]
   43e78:	ldr	r1, [sp, #16]
   43e7c:	ldr	r2, [fp, #8]
   43e80:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   43e84:	ldr	r0, [fp, #-4]
   43e88:	ldr	r1, [r0, #32]
   43e8c:	add	r1, r1, #1
   43e90:	str	r1, [r0, #32]
   43e94:	ldr	r0, [fp, #-4]
   43e98:	ldr	r1, [r0, #20]
   43e9c:	add	r2, r1, #1
   43ea0:	str	r2, [r0, #20]
   43ea4:	movw	r0, #123	; 0x7b
   43ea8:	strb	r0, [r1]
   43eac:	ldr	r0, [fp, #12]
   43eb0:	ldr	r1, [fp, #-4]
   43eb4:	ldr	r2, [sp, #12]
   43eb8:	str	r0, [sp]
   43ebc:	mov	r0, r1
   43ec0:	mov	r1, r2
   43ec4:	ldr	r2, [sp]
   43ec8:	blx	r2
   43ecc:	ldr	r0, [fp, #-4]
   43ed0:	ldrsb	r0, [r0, #25]
   43ed4:	cmp	r0, #0
   43ed8:	beq	43f10 <flatcc_json_printer_struct_field@@Base+0x118>
   43edc:	ldr	r0, [fp, #-4]
   43ee0:	ldr	r1, [r0, #20]
   43ee4:	add	r2, r1, #1
   43ee8:	str	r2, [r0, #20]
   43eec:	movw	r0, #10
   43ef0:	strb	r0, [r1]
   43ef4:	ldr	r0, [fp, #-4]
   43ef8:	ldr	r1, [r0, #32]
   43efc:	mvn	r2, #0
   43f00:	add	r1, r1, r2
   43f04:	str	r1, [r0, #32]
   43f08:	ldr	r0, [fp, #-4]
   43f0c:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   43f10:	ldr	r0, [fp, #-4]
   43f14:	ldr	r1, [r0, #20]
   43f18:	add	r2, r1, #1
   43f1c:	str	r2, [r0, #20]
   43f20:	movw	r0, #125	; 0x7d
   43f24:	strb	r0, [r1]
   43f28:	b	43f2c <flatcc_json_printer_struct_field@@Base+0x134>
   43f2c:	mov	sp, fp
   43f30:	pop	{fp, pc}

00043f34 <flatcc_json_printer_struct_as_root@@Base>:
   43f34:	push	{fp, lr}
   43f38:	mov	fp, sp
   43f3c:	sub	sp, sp, #48	; 0x30
   43f40:	ldr	ip, [fp, #8]
   43f44:	str	r0, [fp, #-8]
   43f48:	str	r1, [fp, #-12]
   43f4c:	str	r2, [fp, #-16]
   43f50:	str	r3, [fp, #-20]	; 0xffffffec
   43f54:	ldr	r0, [fp, #-8]
   43f58:	ldr	r1, [fp, #-12]
   43f5c:	ldr	r2, [fp, #-16]
   43f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   43f64:	str	ip, [sp, #24]
   43f68:	bl	440ec <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   43f6c:	cmp	r0, #0
   43f70:	bne	43f80 <flatcc_json_printer_struct_as_root@@Base+0x4c>
   43f74:	mvn	r0, #0
   43f78:	str	r0, [fp, #-4]
   43f7c:	b	440e0 <flatcc_json_printer_struct_as_root@@Base+0x1ac>
   43f80:	b	43f84 <flatcc_json_printer_struct_as_root@@Base+0x50>
   43f84:	ldr	r0, [fp, #-8]
   43f88:	ldr	r1, [r0, #32]
   43f8c:	add	r1, r1, #1
   43f90:	str	r1, [r0, #32]
   43f94:	ldr	r0, [fp, #-8]
   43f98:	ldr	r1, [r0, #20]
   43f9c:	add	r2, r1, #1
   43fa0:	str	r2, [r0, #20]
   43fa4:	movw	r0, #123	; 0x7b
   43fa8:	strb	r0, [r1]
   43fac:	ldr	r0, [fp, #8]
   43fb0:	ldr	r1, [fp, #-8]
   43fb4:	ldr	r2, [fp, #-12]
   43fb8:	str	r0, [sp, #20]
   43fbc:	mov	r0, r2
   43fc0:	str	r1, [sp, #16]
   43fc4:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   43fc8:	ldr	r1, [sp, #16]
   43fcc:	str	r0, [sp, #12]
   43fd0:	mov	r0, r1
   43fd4:	ldr	r1, [sp, #12]
   43fd8:	ldr	r2, [sp, #20]
   43fdc:	blx	r2
   43fe0:	ldr	r0, [fp, #-8]
   43fe4:	ldrsb	r0, [r0, #25]
   43fe8:	cmp	r0, #0
   43fec:	beq	44024 <flatcc_json_printer_struct_as_root@@Base+0xf0>
   43ff0:	ldr	r0, [fp, #-8]
   43ff4:	ldr	r1, [r0, #20]
   43ff8:	add	r2, r1, #1
   43ffc:	str	r2, [r0, #20]
   44000:	movw	r0, #10
   44004:	strb	r0, [r1]
   44008:	ldr	r0, [fp, #-8]
   4400c:	ldr	r1, [r0, #32]
   44010:	mvn	r2, #0
   44014:	add	r1, r1, r2
   44018:	str	r1, [r0, #32]
   4401c:	ldr	r0, [fp, #-8]
   44020:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   44024:	ldr	r0, [fp, #-8]
   44028:	ldr	r1, [r0, #20]
   4402c:	add	r2, r1, #1
   44030:	str	r2, [r0, #20]
   44034:	movw	r0, #125	; 0x7d
   44038:	strb	r0, [r1]
   4403c:	b	44040 <flatcc_json_printer_struct_as_root@@Base+0x10c>
   44040:	ldr	r0, [fp, #-8]
   44044:	ldrb	r0, [r0, #25]
   44048:	cmp	r0, #0
   4404c:	beq	44078 <flatcc_json_printer_struct_as_root@@Base+0x144>
   44050:	ldr	r0, [fp, #-8]
   44054:	ldr	r0, [r0, #32]
   44058:	cmp	r0, #0
   4405c:	bne	44078 <flatcc_json_printer_struct_as_root@@Base+0x144>
   44060:	ldr	r0, [fp, #-8]
   44064:	ldr	r1, [r0, #20]
   44068:	add	r2, r1, #1
   4406c:	str	r2, [r0, #20]
   44070:	movw	r0, #10
   44074:	strb	r0, [r1]
   44078:	ldr	r0, [fp, #-8]
   4407c:	ldr	r0, [r0, #44]	; 0x2c
   44080:	ldr	r1, [fp, #-8]
   44084:	str	r0, [sp, #8]
   44088:	mov	r0, r1
   4408c:	movw	r1, #1
   44090:	ldr	r2, [sp, #8]
   44094:	blx	r2
   44098:	ldr	r0, [fp, #-8]
   4409c:	bl	44208 <flatcc_json_printer_struct_as_root@@Base+0x2d4>
   440a0:	cmp	r0, #0
   440a4:	beq	440b4 <flatcc_json_printer_struct_as_root@@Base+0x180>
   440a8:	mvn	r0, #0
   440ac:	str	r0, [sp, #4]
   440b0:	b	440d8 <flatcc_json_printer_struct_as_root@@Base+0x1a4>
   440b4:	ldr	r0, [fp, #-8]
   440b8:	ldr	r0, [r0, #12]
   440bc:	ldr	r1, [fp, #-8]
   440c0:	ldr	r1, [r1, #20]
   440c4:	ldr	r2, [fp, #-8]
   440c8:	ldr	r2, [r2]
   440cc:	sub	r1, r1, r2
   440d0:	add	r0, r0, r1
   440d4:	str	r0, [sp, #4]
   440d8:	ldr	r0, [sp, #4]
   440dc:	str	r0, [fp, #-4]
   440e0:	ldr	r0, [fp, #-4]
   440e4:	mov	sp, fp
   440e8:	pop	{fp, pc}
   440ec:	push	{fp, lr}
   440f0:	mov	fp, sp
   440f4:	sub	sp, sp, #32
   440f8:	str	r0, [fp, #-4]
   440fc:	str	r1, [fp, #-8]
   44100:	str	r2, [fp, #-12]
   44104:	str	r3, [sp, #16]
   44108:	movw	r0, #0
   4410c:	str	r0, [sp, #8]
   44110:	ldr	r1, [fp, #-8]
   44114:	cmp	r1, r0
   44118:	beq	44128 <flatcc_json_printer_struct_as_root@@Base+0x1f4>
   4411c:	ldr	r0, [fp, #-12]
   44120:	cmp	r0, #8
   44124:	bcs	44154 <flatcc_json_printer_struct_as_root@@Base+0x220>
   44128:	ldr	r0, [fp, #-4]
   4412c:	movw	r1, #1
   44130:	bl	43760 <flatcc_json_printer_union_vector_field@@Base+0x438>
   44134:	ldr	r0, [pc, #192]	; 441fc <flatcc_json_printer_struct_as_root@@Base+0x2c8>
   44138:	add	r0, pc, r0
   4413c:	ldr	r1, [pc, #188]	; 44200 <flatcc_json_printer_struct_as_root@@Base+0x2cc>
   44140:	add	r1, pc, r1
   44144:	ldr	r2, [pc, #184]	; 44204 <flatcc_json_printer_struct_as_root@@Base+0x2d0>
   44148:	add	r3, pc, r2
   4414c:	movw	r2, #1019	; 0x3fb
   44150:	bl	14f08 <__assert_fail@plt>
   44154:	ldr	r0, [sp, #16]
   44158:	movw	r1, #0
   4415c:	cmp	r0, r1
   44160:	beq	441e4 <flatcc_json_printer_struct_as_root@@Base+0x2b0>
   44164:	add	r0, sp, #8
   44168:	ldr	r1, [sp, #16]
   4416c:	movw	r2, #4
   44170:	bl	14ecc <strncpy@plt>
   44174:	ldr	r1, [sp, #8]
   44178:	str	r0, [sp, #4]
   4417c:	mov	r0, r1
   44180:	bl	46a0c <flatcc_json_printer_clear@@Base+0x1cc8>
   44184:	str	r0, [sp, #8]
   44188:	ldr	r0, [fp, #-8]
   4418c:	add	r0, r0, #4
   44190:	bl	46a20 <flatcc_json_printer_clear@@Base+0x1cdc>
   44194:	str	r0, [sp, #12]
   44198:	ldr	r0, [sp, #8]
   4419c:	cmp	r0, #0
   441a0:	beq	441e0 <flatcc_json_printer_struct_as_root@@Base+0x2ac>
   441a4:	ldr	r0, [sp, #12]
   441a8:	ldr	r1, [sp, #8]
   441ac:	cmp	r0, r1
   441b0:	beq	441e0 <flatcc_json_printer_struct_as_root@@Base+0x2ac>
   441b4:	ldr	r0, [fp, #-4]
   441b8:	movw	r1, #1
   441bc:	bl	43760 <flatcc_json_printer_union_vector_field@@Base+0x438>
   441c0:	ldr	r0, [pc, #40]	; 441f0 <flatcc_json_printer_struct_as_root@@Base+0x2bc>
   441c4:	add	r0, pc, r0
   441c8:	ldr	r1, [pc, #36]	; 441f4 <flatcc_json_printer_struct_as_root@@Base+0x2c0>
   441cc:	add	r1, pc, r1
   441d0:	ldr	r2, [pc, #32]	; 441f8 <flatcc_json_printer_struct_as_root@@Base+0x2c4>
   441d4:	add	r3, pc, r2
   441d8:	movw	r2, #1028	; 0x404
   441dc:	bl	14f08 <__assert_fail@plt>
   441e0:	b	441e4 <flatcc_json_printer_struct_as_root@@Base+0x2b0>
   441e4:	movw	r0, #1
   441e8:	mov	sp, fp
   441ec:	pop	{fp, pc}
   441f0:	ldrdeq	r9, [r0], -sp
   441f4:	andeq	r9, r0, r3, lsl r5
   441f8:	andeq	r9, r0, lr, ror r9
   441fc:	strdeq	r9, [r0], -fp
   44200:	muleq	r0, pc, r5	; <UNPREDICTABLE>
   44204:	andeq	r9, r0, sl, lsl #20
   44208:	sub	sp, sp, #4
   4420c:	str	r0, [sp]
   44210:	ldr	r0, [sp]
   44214:	ldr	r0, [r0, #36]	; 0x24
   44218:	add	sp, sp, #4
   4421c:	bx	lr

00044220 <flatcc_json_printer_table_as_root@@Base>:
   44220:	push	{fp, lr}
   44224:	mov	fp, sp
   44228:	sub	sp, sp, #40	; 0x28
   4422c:	ldr	ip, [fp, #8]
   44230:	str	r0, [fp, #-8]
   44234:	str	r1, [fp, #-12]
   44238:	str	r2, [fp, #-16]
   4423c:	str	r3, [sp, #20]
   44240:	ldr	r0, [fp, #-8]
   44244:	ldr	r1, [fp, #-12]
   44248:	ldr	r2, [fp, #-16]
   4424c:	ldr	r3, [sp, #20]
   44250:	str	ip, [sp, #16]
   44254:	bl	440ec <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   44258:	cmp	r0, #0
   4425c:	bne	4426c <flatcc_json_printer_table_as_root@@Base+0x4c>
   44260:	mvn	r0, #0
   44264:	str	r0, [fp, #-4]
   44268:	b	4433c <flatcc_json_printer_table_as_root@@Base+0x11c>
   4426c:	ldr	r0, [fp, #-8]
   44270:	ldr	r1, [fp, #-12]
   44274:	str	r0, [sp, #12]
   44278:	mov	r0, r1
   4427c:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   44280:	ldr	r3, [fp, #8]
   44284:	ldr	r1, [sp, #12]
   44288:	str	r0, [sp, #8]
   4428c:	mov	r0, r1
   44290:	ldr	r1, [sp, #8]
   44294:	movw	r2, #100	; 0x64
   44298:	bl	431e8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   4429c:	ldr	r0, [fp, #-8]
   442a0:	ldrb	r0, [r0, #25]
   442a4:	cmp	r0, #0
   442a8:	beq	442d4 <flatcc_json_printer_table_as_root@@Base+0xb4>
   442ac:	ldr	r0, [fp, #-8]
   442b0:	ldr	r0, [r0, #32]
   442b4:	cmp	r0, #0
   442b8:	bne	442d4 <flatcc_json_printer_table_as_root@@Base+0xb4>
   442bc:	ldr	r0, [fp, #-8]
   442c0:	ldr	r1, [r0, #20]
   442c4:	add	r2, r1, #1
   442c8:	str	r2, [r0, #20]
   442cc:	movw	r0, #10
   442d0:	strb	r0, [r1]
   442d4:	ldr	r0, [fp, #-8]
   442d8:	ldr	r0, [r0, #44]	; 0x2c
   442dc:	ldr	r1, [fp, #-8]
   442e0:	str	r0, [sp, #4]
   442e4:	mov	r0, r1
   442e8:	movw	r1, #1
   442ec:	ldr	r2, [sp, #4]
   442f0:	blx	r2
   442f4:	ldr	r0, [fp, #-8]
   442f8:	bl	44208 <flatcc_json_printer_struct_as_root@@Base+0x2d4>
   442fc:	cmp	r0, #0
   44300:	beq	44310 <flatcc_json_printer_table_as_root@@Base+0xf0>
   44304:	mvn	r0, #0
   44308:	str	r0, [sp]
   4430c:	b	44334 <flatcc_json_printer_table_as_root@@Base+0x114>
   44310:	ldr	r0, [fp, #-8]
   44314:	ldr	r0, [r0, #12]
   44318:	ldr	r1, [fp, #-8]
   4431c:	ldr	r1, [r1, #20]
   44320:	ldr	r2, [fp, #-8]
   44324:	ldr	r2, [r2]
   44328:	sub	r1, r1, r2
   4432c:	add	r0, r0, r1
   44330:	str	r0, [sp]
   44334:	ldr	r0, [sp]
   44338:	str	r0, [fp, #-4]
   4433c:	ldr	r0, [fp, #-4]
   44340:	mov	sp, fp
   44344:	pop	{fp, pc}

00044348 <flatcc_json_printer_struct_as_nested_root@@Base>:
   44348:	push	{r4, sl, fp, lr}
   4434c:	add	fp, sp, #8
   44350:	sub	sp, sp, #56	; 0x38
   44354:	ldr	ip, [fp, #16]
   44358:	ldr	lr, [fp, #12]
   4435c:	ldr	r4, [fp, #8]
   44360:	str	r0, [fp, #-12]
   44364:	str	r1, [fp, #-16]
   44368:	str	r2, [fp, #-20]	; 0xffffffec
   4436c:	str	r3, [fp, #-24]	; 0xffffffe8
   44370:	ldr	r0, [fp, #-16]
   44374:	ldr	r1, [fp, #-20]	; 0xffffffec
   44378:	str	ip, [sp, #28]
   4437c:	str	lr, [sp, #24]
   44380:	str	r4, [sp, #20]
   44384:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   44388:	str	r0, [fp, #-28]	; 0xffffffe4
   4438c:	movw	r1, #0
   44390:	cmp	r1, r0
   44394:	bne	4439c <flatcc_json_printer_struct_as_nested_root@@Base+0x54>
   44398:	b	444e0 <flatcc_json_printer_struct_as_nested_root@@Base+0x198>
   4439c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   443a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   443a4:	str	r0, [sp, #16]
   443a8:	mov	r0, r1
   443ac:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   443b0:	ldr	r1, [sp, #16]
   443b4:	add	r0, r1, r0
   443b8:	str	r0, [fp, #-28]	; 0xffffffe4
   443bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   443c0:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   443c4:	str	r0, [sp, #32]
   443c8:	ldr	r0, [fp, #-12]
   443cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   443d0:	ldr	r2, [sp, #32]
   443d4:	ldr	r3, [fp, #12]
   443d8:	bl	440ec <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   443dc:	cmp	r0, #0
   443e0:	bne	443e8 <flatcc_json_printer_struct_as_nested_root@@Base+0xa0>
   443e4:	b	444e0 <flatcc_json_printer_struct_as_nested_root@@Base+0x198>
   443e8:	ldr	r0, [fp, #-16]
   443ec:	ldr	r1, [r0, #16]
   443f0:	add	r2, r1, #1
   443f4:	str	r2, [r0, #16]
   443f8:	cmp	r1, #0
   443fc:	beq	44418 <flatcc_json_printer_struct_as_nested_root@@Base+0xd0>
   44400:	ldr	r0, [fp, #-12]
   44404:	ldr	r1, [r0, #20]
   44408:	add	r2, r1, #1
   4440c:	str	r2, [r0, #20]
   44410:	movw	r0, #44	; 0x2c
   44414:	strb	r0, [r1]
   44418:	ldr	r0, [fp, #-12]
   4441c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   44420:	ldr	r2, [fp, #8]
   44424:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   44428:	ldr	r0, [fp, #-12]
   4442c:	ldr	r1, [r0, #32]
   44430:	add	r1, r1, #1
   44434:	str	r1, [r0, #32]
   44438:	ldr	r0, [fp, #-12]
   4443c:	ldr	r1, [r0, #20]
   44440:	add	r2, r1, #1
   44444:	str	r2, [r0, #20]
   44448:	movw	r0, #123	; 0x7b
   4444c:	strb	r0, [r1]
   44450:	ldr	r0, [fp, #16]
   44454:	ldr	r1, [fp, #-12]
   44458:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4445c:	str	r0, [sp, #12]
   44460:	mov	r0, r2
   44464:	str	r1, [sp, #8]
   44468:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   4446c:	ldr	r1, [sp, #8]
   44470:	str	r0, [sp, #4]
   44474:	mov	r0, r1
   44478:	ldr	r1, [sp, #4]
   4447c:	ldr	r2, [sp, #12]
   44480:	blx	r2
   44484:	ldr	r0, [fp, #-12]
   44488:	ldrsb	r0, [r0, #25]
   4448c:	cmp	r0, #0
   44490:	beq	444c8 <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   44494:	ldr	r0, [fp, #-12]
   44498:	ldr	r1, [r0, #20]
   4449c:	add	r2, r1, #1
   444a0:	str	r2, [r0, #20]
   444a4:	movw	r0, #10
   444a8:	strb	r0, [r1]
   444ac:	ldr	r0, [fp, #-12]
   444b0:	ldr	r1, [r0, #32]
   444b4:	mvn	r2, #0
   444b8:	add	r1, r1, r2
   444bc:	str	r1, [r0, #32]
   444c0:	ldr	r0, [fp, #-12]
   444c4:	bl	3a4fc <flatcc_json_printer_indent@@Base+0x20>
   444c8:	ldr	r0, [fp, #-12]
   444cc:	ldr	r1, [r0, #20]
   444d0:	add	r2, r1, #1
   444d4:	str	r2, [r0, #20]
   444d8:	movw	r0, #125	; 0x7d
   444dc:	strb	r0, [r1]
   444e0:	sub	sp, fp, #8
   444e4:	pop	{r4, sl, fp, pc}

000444e8 <flatcc_json_printer_table_as_nested_root@@Base>:
   444e8:	push	{r4, sl, fp, lr}
   444ec:	add	fp, sp, #8
   444f0:	sub	sp, sp, #48	; 0x30
   444f4:	ldr	ip, [fp, #16]
   444f8:	ldr	lr, [fp, #12]
   444fc:	ldr	r4, [fp, #8]
   44500:	str	r0, [fp, #-12]
   44504:	str	r1, [fp, #-16]
   44508:	str	r2, [fp, #-20]	; 0xffffffec
   4450c:	str	r3, [fp, #-24]	; 0xffffffe8
   44510:	ldr	r0, [fp, #-16]
   44514:	ldr	r1, [fp, #-20]	; 0xffffffec
   44518:	str	ip, [sp, #20]
   4451c:	str	lr, [sp, #16]
   44520:	str	r4, [sp, #12]
   44524:	bl	3c2e4 <flatcc_json_printer_string_field@@Base+0xb4>
   44528:	str	r0, [sp, #28]
   4452c:	movw	r1, #0
   44530:	cmp	r1, r0
   44534:	bne	4453c <flatcc_json_printer_table_as_nested_root@@Base+0x54>
   44538:	b	44608 <flatcc_json_printer_table_as_nested_root@@Base+0x120>
   4453c:	ldr	r0, [sp, #28]
   44540:	ldr	r1, [sp, #28]
   44544:	str	r0, [sp, #8]
   44548:	mov	r0, r1
   4454c:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   44550:	ldr	r1, [sp, #8]
   44554:	add	r0, r1, r0
   44558:	str	r0, [sp, #28]
   4455c:	ldr	r0, [sp, #28]
   44560:	bl	3f288 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   44564:	str	r0, [sp, #24]
   44568:	ldr	r0, [sp, #28]
   4456c:	add	r0, r0, #4
   44570:	str	r0, [sp, #28]
   44574:	ldr	r0, [fp, #-12]
   44578:	ldr	r1, [sp, #28]
   4457c:	ldr	r2, [sp, #24]
   44580:	ldr	r3, [fp, #12]
   44584:	bl	440ec <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   44588:	cmp	r0, #0
   4458c:	bne	44594 <flatcc_json_printer_table_as_nested_root@@Base+0xac>
   44590:	b	44608 <flatcc_json_printer_table_as_nested_root@@Base+0x120>
   44594:	ldr	r0, [fp, #-16]
   44598:	ldr	r1, [r0, #16]
   4459c:	add	r2, r1, #1
   445a0:	str	r2, [r0, #16]
   445a4:	cmp	r1, #0
   445a8:	beq	445c4 <flatcc_json_printer_table_as_nested_root@@Base+0xdc>
   445ac:	ldr	r0, [fp, #-12]
   445b0:	ldr	r1, [r0, #20]
   445b4:	add	r2, r1, #1
   445b8:	str	r2, [r0, #20]
   445bc:	movw	r0, #44	; 0x2c
   445c0:	strb	r0, [r1]
   445c4:	ldr	r0, [fp, #-12]
   445c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   445cc:	ldr	r2, [fp, #8]
   445d0:	bl	3c378 <flatcc_json_printer_string_field@@Base+0x148>
   445d4:	ldr	r0, [fp, #-12]
   445d8:	ldr	r1, [sp, #28]
   445dc:	str	r0, [sp, #4]
   445e0:	mov	r0, r1
   445e4:	bl	3c488 <flatcc_json_printer_string_field@@Base+0x258>
   445e8:	ldr	r1, [fp, #-16]
   445ec:	ldr	r2, [r1, #12]
   445f0:	ldr	r3, [fp, #16]
   445f4:	ldr	r1, [sp, #4]
   445f8:	str	r0, [sp]
   445fc:	mov	r0, r1
   44600:	ldr	r1, [sp]
   44604:	bl	431e8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   44608:	sub	sp, fp, #8
   4460c:	pop	{r4, sl, fp, pc}

00044610 <flatcc_json_printer_init@@Base>:
   44610:	push	{fp, lr}
   44614:	mov	fp, sp
   44618:	sub	sp, sp, #16
   4461c:	str	r0, [sp, #8]
   44620:	str	r1, [sp, #4]
   44624:	ldr	r0, [sp, #8]
   44628:	movw	r1, #0
   4462c:	and	r1, r1, #255	; 0xff
   44630:	movw	r2, #48	; 0x30
   44634:	bl	14ec0 <memset@plt>
   44638:	ldr	r0, [sp, #4]
   4463c:	movw	r1, #0
   44640:	cmp	r0, r1
   44644:	beq	44654 <flatcc_json_printer_init@@Base+0x44>
   44648:	ldr	r0, [sp, #4]
   4464c:	str	r0, [sp]
   44650:	b	44664 <flatcc_json_printer_init@@Base+0x54>
   44654:	ldr	r0, [pc, #240]	; 4474c <flatcc_json_printer_init@@Base+0x13c>
   44658:	ldr	r0, [pc, r0]
   4465c:	ldr	r0, [r0]
   44660:	str	r0, [sp]
   44664:	ldr	r0, [sp]
   44668:	ldr	r1, [pc, #224]	; 44750 <flatcc_json_printer_init@@Base+0x140>
   4466c:	add	r1, pc, r1
   44670:	ldr	r2, [sp, #8]
   44674:	str	r0, [r2, #40]	; 0x28
   44678:	ldr	r0, [sp, #8]
   4467c:	str	r1, [r0, #44]	; 0x2c
   44680:	movw	r0, #16448	; 0x4040
   44684:	bl	14e78 <malloc@plt>
   44688:	ldr	r1, [sp, #8]
   4468c:	str	r0, [r1]
   44690:	movw	r1, #0
   44694:	cmp	r0, r1
   44698:	bne	446a8 <flatcc_json_printer_init@@Base+0x98>
   4469c:	mvn	r0, #0
   446a0:	str	r0, [fp, #-4]
   446a4:	b	44740 <flatcc_json_printer_init@@Base+0x130>
   446a8:	ldr	r0, [sp, #8]
   446ac:	movw	r1, #1
   446b0:	strb	r1, [r0, #24]
   446b4:	ldr	r0, [sp, #8]
   446b8:	movw	r1, #16448	; 0x4040
   446bc:	str	r1, [r0, #4]
   446c0:	ldr	r0, [sp, #8]
   446c4:	movw	r1, #16384	; 0x4000
   446c8:	str	r1, [r0, #8]
   446cc:	ldr	r0, [sp, #8]
   446d0:	ldr	r0, [r0]
   446d4:	ldr	r1, [sp, #8]
   446d8:	str	r0, [r1, #20]
   446dc:	ldr	r0, [sp, #8]
   446e0:	ldr	r0, [r0]
   446e4:	ldr	r1, [sp, #8]
   446e8:	ldr	r1, [r1, #8]
   446ec:	add	r0, r0, r1
   446f0:	ldr	r1, [sp, #8]
   446f4:	str	r0, [r1, #16]
   446f8:	ldr	r0, [sp, #8]
   446fc:	ldr	r0, [r0, #8]
   44700:	add	r0, r0, #64	; 0x40
   44704:	ldr	r1, [sp, #8]
   44708:	ldr	r1, [r1, #4]
   4470c:	cmp	r0, r1
   44710:	bhi	44718 <flatcc_json_printer_init@@Base+0x108>
   44714:	b	44738 <flatcc_json_printer_init@@Base+0x128>
   44718:	ldr	r0, [pc, #52]	; 44754 <flatcc_json_printer_init@@Base+0x144>
   4471c:	add	r0, pc, r0
   44720:	ldr	r1, [pc, #48]	; 44758 <flatcc_json_printer_init@@Base+0x148>
   44724:	add	r1, pc, r1
   44728:	ldr	r2, [pc, #44]	; 4475c <flatcc_json_printer_init@@Base+0x14c>
   4472c:	add	r3, pc, r2
   44730:	movw	r2, #1147	; 0x47b
   44734:	bl	14f08 <__assert_fail@plt>
   44738:	movw	r0, #0
   4473c:	str	r0, [fp, #-4]
   44740:	ldr	r0, [fp, #-4]
   44744:	mov	sp, fp
   44748:	pop	{fp, pc}
   4474c:	andeq	sl, r1, r8, lsl sl
   44750:	andeq	r0, r0, ip, ror #1
   44754:	strdeq	r9, [r0], -r5
   44758:			; <UNDEFINED> instruction: 0x00008fbb
   4475c:	andeq	r9, r0, lr, lsl r1
   44760:	push	{fp, lr}
   44764:	mov	fp, sp
   44768:	sub	sp, sp, #32
   4476c:	str	r0, [fp, #-4]
   44770:	str	r1, [fp, #-8]
   44774:	ldr	r0, [fp, #-8]
   44778:	cmp	r0, #0
   4477c:	bne	44844 <flatcc_json_printer_init@@Base+0x234>
   44780:	ldr	r0, [fp, #-4]
   44784:	ldr	r0, [r0, #20]
   44788:	ldr	r1, [fp, #-4]
   4478c:	ldr	r1, [r1, #16]
   44790:	cmp	r0, r1
   44794:	bcc	44844 <flatcc_json_printer_init@@Base+0x234>
   44798:	ldr	r0, [fp, #-4]
   4479c:	ldr	r0, [r0, #20]
   447a0:	ldr	r1, [fp, #-4]
   447a4:	ldr	r1, [r1, #16]
   447a8:	sub	r0, r0, r1
   447ac:	str	r0, [fp, #-12]
   447b0:	ldr	r0, [fp, #-4]
   447b4:	ldr	r0, [r0]
   447b8:	ldr	r1, [fp, #-4]
   447bc:	ldr	r1, [r1, #8]
   447c0:	ldr	r2, [fp, #-4]
   447c4:	ldr	r2, [r2, #40]	; 0x28
   447c8:	movw	r3, #1
   447cc:	str	r2, [sp, #12]
   447d0:	mov	r2, r3
   447d4:	ldr	r3, [sp, #12]
   447d8:	bl	14e6c <fwrite@plt>
   447dc:	ldr	r1, [fp, #-4]
   447e0:	ldr	r1, [r1]
   447e4:	ldr	r2, [fp, #-4]
   447e8:	ldr	r2, [r2]
   447ec:	ldr	r3, [fp, #-4]
   447f0:	ldr	r3, [r3, #8]
   447f4:	add	r2, r2, r3
   447f8:	ldr	r3, [fp, #-12]
   447fc:	str	r0, [sp, #8]
   44800:	mov	r0, r1
   44804:	mov	r1, r2
   44808:	mov	r2, r3
   4480c:	bl	14e30 <memcpy@plt>
   44810:	ldr	r0, [fp, #-4]
   44814:	ldr	r0, [r0]
   44818:	ldr	r1, [fp, #-12]
   4481c:	add	r0, r0, r1
   44820:	ldr	r1, [fp, #-4]
   44824:	str	r0, [r1, #20]
   44828:	ldr	r0, [fp, #-4]
   4482c:	ldr	r0, [r0, #8]
   44830:	ldr	r1, [fp, #-4]
   44834:	ldr	r2, [r1, #12]
   44838:	add	r0, r2, r0
   4483c:	str	r0, [r1, #12]
   44840:	b	448a8 <flatcc_json_printer_init@@Base+0x298>
   44844:	ldr	r0, [fp, #-4]
   44848:	ldr	r0, [r0, #20]
   4484c:	ldr	r1, [fp, #-4]
   44850:	ldr	r1, [r1]
   44854:	sub	r0, r0, r1
   44858:	str	r0, [sp, #16]
   4485c:	ldr	r0, [fp, #-4]
   44860:	ldr	r0, [r0]
   44864:	ldr	r1, [sp, #16]
   44868:	ldr	r2, [fp, #-4]
   4486c:	ldr	r2, [r2, #40]	; 0x28
   44870:	movw	r3, #1
   44874:	str	r2, [sp, #4]
   44878:	mov	r2, r3
   4487c:	ldr	r3, [sp, #4]
   44880:	bl	14e6c <fwrite@plt>
   44884:	ldr	r1, [fp, #-4]
   44888:	ldr	r1, [r1]
   4488c:	ldr	r2, [fp, #-4]
   44890:	str	r1, [r2, #20]
   44894:	ldr	r1, [sp, #16]
   44898:	ldr	r2, [fp, #-4]
   4489c:	ldr	r3, [r2, #12]
   448a0:	add	r1, r3, r1
   448a4:	str	r1, [r2, #12]
   448a8:	ldr	r0, [fp, #-4]
   448ac:	ldr	r0, [r0, #20]
   448b0:	movw	r1, #0
   448b4:	strb	r1, [r0]
   448b8:	mov	sp, fp
   448bc:	pop	{fp, pc}

000448c0 <flatcc_json_printer_init_buffer@@Base>:
   448c0:	push	{fp, lr}
   448c4:	mov	fp, sp
   448c8:	sub	sp, sp, #24
   448cc:	str	r0, [fp, #-8]
   448d0:	str	r1, [sp, #12]
   448d4:	str	r2, [sp, #8]
   448d8:	ldr	r0, [sp, #8]
   448dc:	cmp	r0, #64	; 0x40
   448e0:	bcc	448e8 <flatcc_json_printer_init_buffer@@Base+0x28>
   448e4:	b	44908 <flatcc_json_printer_init_buffer@@Base+0x48>
   448e8:	ldr	r0, [pc, #204]	; 449bc <flatcc_json_printer_init_buffer@@Base+0xfc>
   448ec:	add	r0, pc, r0
   448f0:	ldr	r1, [pc, #200]	; 449c0 <flatcc_json_printer_init_buffer@@Base+0x100>
   448f4:	add	r1, pc, r1
   448f8:	ldr	r2, [pc, #196]	; 449c4 <flatcc_json_printer_init_buffer@@Base+0x104>
   448fc:	add	r3, pc, r2
   44900:	movw	r2, #1165	; 0x48d
   44904:	bl	14f08 <__assert_fail@plt>
   44908:	ldr	r0, [sp, #8]
   4490c:	cmp	r0, #64	; 0x40
   44910:	bcs	44920 <flatcc_json_printer_init_buffer@@Base+0x60>
   44914:	mvn	r0, #0
   44918:	str	r0, [fp, #-4]
   4491c:	b	449b0 <flatcc_json_printer_init_buffer@@Base+0xf0>
   44920:	ldr	r0, [pc, #160]	; 449c8 <flatcc_json_printer_init_buffer@@Base+0x108>
   44924:	add	r0, pc, r0
   44928:	ldr	r1, [fp, #-8]
   4492c:	str	r0, [sp, #4]
   44930:	mov	r0, r1
   44934:	movw	r1, #0
   44938:	and	r1, r1, #255	; 0xff
   4493c:	movw	r2, #48	; 0x30
   44940:	bl	14ec0 <memset@plt>
   44944:	ldr	r0, [sp, #12]
   44948:	ldr	r1, [fp, #-8]
   4494c:	str	r0, [r1]
   44950:	ldr	r0, [sp, #8]
   44954:	ldr	r1, [fp, #-8]
   44958:	str	r0, [r1, #4]
   4495c:	ldr	r0, [fp, #-8]
   44960:	ldr	r0, [r0, #4]
   44964:	sub	r0, r0, #64	; 0x40
   44968:	ldr	r1, [fp, #-8]
   4496c:	str	r0, [r1, #8]
   44970:	ldr	r0, [fp, #-8]
   44974:	ldr	r0, [r0]
   44978:	ldr	r1, [fp, #-8]
   4497c:	str	r0, [r1, #20]
   44980:	ldr	r0, [fp, #-8]
   44984:	ldr	r0, [r0]
   44988:	ldr	r1, [fp, #-8]
   4498c:	ldr	r1, [r1, #8]
   44990:	add	r0, r0, r1
   44994:	ldr	r1, [fp, #-8]
   44998:	str	r0, [r1, #16]
   4499c:	ldr	r0, [fp, #-8]
   449a0:	ldr	r1, [sp, #4]
   449a4:	str	r1, [r0, #44]	; 0x2c
   449a8:	movw	r0, #0
   449ac:	str	r0, [fp, #-4]
   449b0:	ldr	r0, [fp, #-4]
   449b4:	mov	sp, fp
   449b8:	pop	{fp, pc}
   449bc:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   449c0:	andeq	r8, r0, fp, ror #27
   449c4:			; <UNDEFINED> instruction: 0x00008fb5
   449c8:	andeq	r0, r0, r0, lsr #1
   449cc:	push	{fp, lr}
   449d0:	mov	fp, sp
   449d4:	sub	sp, sp, #8
   449d8:	str	r0, [sp, #4]
   449dc:	str	r1, [sp]
   449e0:	ldr	r0, [sp, #4]
   449e4:	ldr	r0, [r0, #20]
   449e8:	ldr	r1, [sp, #4]
   449ec:	ldr	r1, [r1, #16]
   449f0:	cmp	r0, r1
   449f4:	bcc	44a38 <flatcc_json_printer_init_buffer@@Base+0x178>
   449f8:	ldr	r0, [sp, #4]
   449fc:	movw	r1, #3
   44a00:	bl	43760 <flatcc_json_printer_union_vector_field@@Base+0x438>
   44a04:	ldr	r0, [sp, #4]
   44a08:	ldr	r0, [r0, #20]
   44a0c:	ldr	r1, [sp, #4]
   44a10:	ldr	r1, [r1]
   44a14:	sub	r0, r0, r1
   44a18:	ldr	r1, [sp, #4]
   44a1c:	ldr	r2, [r1, #12]
   44a20:	add	r0, r2, r0
   44a24:	str	r0, [r1, #12]
   44a28:	ldr	r0, [sp, #4]
   44a2c:	ldr	r0, [r0]
   44a30:	ldr	r1, [sp, #4]
   44a34:	str	r0, [r1, #20]
   44a38:	ldr	r0, [sp, #4]
   44a3c:	ldr	r0, [r0, #20]
   44a40:	movw	r1, #0
   44a44:	strb	r1, [r0]
   44a48:	mov	sp, fp
   44a4c:	pop	{fp, pc}

00044a50 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   44a50:	push	{fp, lr}
   44a54:	mov	fp, sp
   44a58:	sub	sp, sp, #16
   44a5c:	str	r0, [sp, #8]
   44a60:	str	r1, [sp, #4]
   44a64:	ldr	r0, [sp, #4]
   44a68:	cmp	r0, #0
   44a6c:	bne	44a78 <flatcc_json_printer_init_dynamic_buffer@@Base+0x28>
   44a70:	movw	r0, #4096	; 0x1000
   44a74:	str	r0, [sp, #4]
   44a78:	ldr	r0, [sp, #4]
   44a7c:	cmp	r0, #64	; 0x40
   44a80:	bcs	44a8c <flatcc_json_printer_init_dynamic_buffer@@Base+0x3c>
   44a84:	movw	r0, #64	; 0x40
   44a88:	str	r0, [sp, #4]
   44a8c:	ldr	r0, [sp, #8]
   44a90:	movw	r1, #0
   44a94:	and	r1, r1, #255	; 0xff
   44a98:	movw	r2, #48	; 0x30
   44a9c:	bl	14ec0 <memset@plt>
   44aa0:	ldr	r0, [sp, #4]
   44aa4:	bl	14e78 <malloc@plt>
   44aa8:	ldr	r1, [pc, #168]	; 44b58 <flatcc_json_printer_init_dynamic_buffer@@Base+0x108>
   44aac:	add	r1, pc, r1
   44ab0:	ldr	r2, [sp, #8]
   44ab4:	str	r0, [r2]
   44ab8:	ldr	r0, [sp, #8]
   44abc:	movw	r2, #1
   44ac0:	strb	r2, [r0, #24]
   44ac4:	ldr	r0, [sp, #4]
   44ac8:	ldr	r2, [sp, #8]
   44acc:	str	r0, [r2, #4]
   44ad0:	ldr	r0, [sp, #8]
   44ad4:	ldr	r0, [r0, #4]
   44ad8:	sub	r0, r0, #64	; 0x40
   44adc:	ldr	r2, [sp, #8]
   44ae0:	str	r0, [r2, #8]
   44ae4:	ldr	r0, [sp, #8]
   44ae8:	ldr	r0, [r0]
   44aec:	ldr	r2, [sp, #8]
   44af0:	str	r0, [r2, #20]
   44af4:	ldr	r0, [sp, #8]
   44af8:	ldr	r0, [r0]
   44afc:	ldr	r2, [sp, #8]
   44b00:	ldr	r2, [r2, #8]
   44b04:	add	r0, r0, r2
   44b08:	ldr	r2, [sp, #8]
   44b0c:	str	r0, [r2, #16]
   44b10:	ldr	r0, [sp, #8]
   44b14:	str	r1, [r0, #44]	; 0x2c
   44b18:	ldr	r0, [sp, #8]
   44b1c:	ldr	r0, [r0]
   44b20:	movw	r1, #0
   44b24:	cmp	r0, r1
   44b28:	bne	44b44 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   44b2c:	ldr	r0, [sp, #8]
   44b30:	movw	r1, #3
   44b34:	bl	43760 <flatcc_json_printer_union_vector_field@@Base+0x438>
   44b38:	mvn	r0, #0
   44b3c:	str	r0, [fp, #-4]
   44b40:	b	44b4c <flatcc_json_printer_init_dynamic_buffer@@Base+0xfc>
   44b44:	movw	r0, #0
   44b48:	str	r0, [fp, #-4]
   44b4c:	ldr	r0, [fp, #-4]
   44b50:	mov	sp, fp
   44b54:	pop	{fp, pc}
   44b58:	andeq	r0, r0, r8, lsr #1
   44b5c:	push	{fp, lr}
   44b60:	mov	fp, sp
   44b64:	sub	sp, sp, #24
   44b68:	str	r0, [fp, #-4]
   44b6c:	str	r1, [fp, #-8]
   44b70:	ldr	r0, [fp, #-4]
   44b74:	ldr	r0, [r0, #20]
   44b78:	ldr	r1, [fp, #-4]
   44b7c:	ldr	r1, [r1]
   44b80:	sub	r0, r0, r1
   44b84:	str	r0, [sp, #12]
   44b88:	ldr	r0, [fp, #-4]
   44b8c:	ldr	r0, [r0, #20]
   44b90:	movw	r1, #0
   44b94:	strb	r1, [r0]
   44b98:	ldr	r0, [fp, #-4]
   44b9c:	ldr	r0, [r0, #20]
   44ba0:	ldr	r1, [fp, #-4]
   44ba4:	ldr	r1, [r1, #16]
   44ba8:	cmp	r0, r1
   44bac:	bcs	44bb4 <flatcc_json_printer_init_dynamic_buffer@@Base+0x164>
   44bb0:	b	44c88 <flatcc_json_printer_init_dynamic_buffer@@Base+0x238>
   44bb4:	ldr	r0, [fp, #-4]
   44bb8:	ldr	r1, [r0]
   44bbc:	ldr	r0, [r0, #4]
   44bc0:	lsl	r0, r0, #1
   44bc4:	str	r0, [sp, #4]
   44bc8:	mov	r0, r1
   44bcc:	ldr	r1, [sp, #4]
   44bd0:	bl	14e60 <realloc@plt>
   44bd4:	str	r0, [sp, #8]
   44bd8:	ldr	r0, [sp, #8]
   44bdc:	movw	r1, #0
   44be0:	cmp	r0, r1
   44be4:	bne	44c1c <flatcc_json_printer_init_dynamic_buffer@@Base+0x1cc>
   44be8:	ldr	r0, [fp, #-4]
   44bec:	movw	r1, #3
   44bf0:	bl	43760 <flatcc_json_printer_union_vector_field@@Base+0x438>
   44bf4:	ldr	r0, [sp, #12]
   44bf8:	ldr	r1, [fp, #-4]
   44bfc:	ldr	r2, [r1, #12]
   44c00:	add	r0, r2, r0
   44c04:	str	r0, [r1, #12]
   44c08:	ldr	r0, [fp, #-4]
   44c0c:	ldr	r0, [r0]
   44c10:	ldr	r1, [fp, #-4]
   44c14:	str	r0, [r1, #20]
   44c18:	b	44c78 <flatcc_json_printer_init_dynamic_buffer@@Base+0x228>
   44c1c:	ldr	r0, [fp, #-4]
   44c20:	ldr	r1, [r0, #4]
   44c24:	lsl	r1, r1, #1
   44c28:	str	r1, [r0, #4]
   44c2c:	ldr	r0, [fp, #-4]
   44c30:	ldr	r0, [r0, #4]
   44c34:	sub	r0, r0, #64	; 0x40
   44c38:	ldr	r1, [fp, #-4]
   44c3c:	str	r0, [r1, #8]
   44c40:	ldr	r0, [sp, #8]
   44c44:	ldr	r1, [fp, #-4]
   44c48:	str	r0, [r1]
   44c4c:	ldr	r0, [sp, #8]
   44c50:	ldr	r1, [sp, #12]
   44c54:	add	r0, r0, r1
   44c58:	ldr	r1, [fp, #-4]
   44c5c:	str	r0, [r1, #20]
   44c60:	ldr	r0, [sp, #8]
   44c64:	ldr	r1, [fp, #-4]
   44c68:	ldr	r1, [r1, #8]
   44c6c:	add	r0, r0, r1
   44c70:	ldr	r1, [fp, #-4]
   44c74:	str	r0, [r1, #16]
   44c78:	ldr	r0, [fp, #-4]
   44c7c:	ldr	r0, [r0, #20]
   44c80:	movw	r1, #0
   44c84:	strb	r1, [r0]
   44c88:	mov	sp, fp
   44c8c:	pop	{fp, pc}

00044c90 <flatcc_json_printer_get_buffer@@Base>:
   44c90:	push	{fp, lr}
   44c94:	mov	fp, sp
   44c98:	sub	sp, sp, #16
   44c9c:	str	r0, [fp, #-4]
   44ca0:	str	r1, [sp, #8]
   44ca4:	ldr	r0, [fp, #-4]
   44ca8:	ldr	r0, [r0, #44]	; 0x2c
   44cac:	ldr	r1, [fp, #-4]
   44cb0:	str	r0, [sp, #4]
   44cb4:	mov	r0, r1
   44cb8:	movw	r1, #0
   44cbc:	ldr	r2, [sp, #4]
   44cc0:	blx	r2
   44cc4:	ldr	r0, [sp, #8]
   44cc8:	movw	r1, #0
   44ccc:	cmp	r0, r1
   44cd0:	beq	44cf0 <flatcc_json_printer_get_buffer@@Base+0x60>
   44cd4:	ldr	r0, [fp, #-4]
   44cd8:	ldr	r0, [r0, #20]
   44cdc:	ldr	r1, [fp, #-4]
   44ce0:	ldr	r1, [r1]
   44ce4:	sub	r0, r0, r1
   44ce8:	ldr	r1, [sp, #8]
   44cec:	str	r0, [r1]
   44cf0:	ldr	r0, [fp, #-4]
   44cf4:	ldr	r0, [r0]
   44cf8:	mov	sp, fp
   44cfc:	pop	{fp, pc}

00044d00 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   44d00:	push	{fp, lr}
   44d04:	mov	fp, sp
   44d08:	sub	sp, sp, #16
   44d0c:	str	r0, [fp, #-4]
   44d10:	str	r1, [sp, #8]
   44d14:	ldr	r0, [fp, #-4]
   44d18:	ldr	r1, [sp, #8]
   44d1c:	bl	44c90 <flatcc_json_printer_get_buffer@@Base>
   44d20:	str	r0, [sp, #4]
   44d24:	ldr	r0, [fp, #-4]
   44d28:	movw	r1, #0
   44d2c:	and	r1, r1, #255	; 0xff
   44d30:	movw	r2, #48	; 0x30
   44d34:	bl	14ec0 <memset@plt>
   44d38:	ldr	r0, [sp, #4]
   44d3c:	mov	sp, fp
   44d40:	pop	{fp, pc}

00044d44 <flatcc_json_printer_clear@@Base>:
   44d44:	push	{fp, lr}
   44d48:	mov	fp, sp
   44d4c:	sub	sp, sp, #8
   44d50:	str	r0, [sp, #4]
   44d54:	ldr	r0, [sp, #4]
   44d58:	ldrb	r0, [r0, #24]
   44d5c:	cmp	r0, #0
   44d60:	beq	44d84 <flatcc_json_printer_clear@@Base+0x40>
   44d64:	ldr	r0, [sp, #4]
   44d68:	ldr	r0, [r0]
   44d6c:	movw	r1, #0
   44d70:	cmp	r0, r1
   44d74:	beq	44d84 <flatcc_json_printer_clear@@Base+0x40>
   44d78:	ldr	r0, [sp, #4]
   44d7c:	ldr	r0, [r0]
   44d80:	bl	14e24 <free@plt>
   44d84:	ldr	r0, [sp, #4]
   44d88:	movw	r1, #0
   44d8c:	and	r1, r1, #255	; 0xff
   44d90:	movw	r2, #48	; 0x30
   44d94:	bl	14ec0 <memset@plt>
   44d98:	mov	sp, fp
   44d9c:	pop	{fp, pc}
   44da0:	sub	sp, sp, #16
   44da4:	vstr	d0, [sp, #8]
   44da8:	vldr	d16, [sp, #8]
   44dac:	vstr	d16, [sp]
   44db0:	ldr	r0, [sp]
   44db4:	ldr	r1, [sp, #4]
   44db8:	add	sp, sp, #16
   44dbc:	bx	lr
   44dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44dc4:	add	fp, sp, #28
   44dc8:	sub	sp, sp, #260	; 0x104
   44dcc:	vstr	d0, [fp, #-40]	; 0xffffffd8
   44dd0:	str	r0, [fp, #-44]	; 0xffffffd4
   44dd4:	str	r1, [fp, #-48]	; 0xffffffd0
   44dd8:	str	r2, [fp, #-52]	; 0xffffffcc
   44ddc:	vldr	d0, [fp, #-40]	; 0xffffffd8
   44de0:	sub	r0, fp, #80	; 0x50
   44de4:	bl	452f0 <flatcc_json_printer_clear@@Base+0x5ac>
   44de8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   44dec:	ldr	r3, [fp, #-76]	; 0xffffffb4
   44df0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   44df4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   44df8:	mov	ip, sp
   44dfc:	str	r1, [ip, #4]
   44e00:	str	r0, [ip]
   44e04:	sub	r0, fp, #96	; 0x60
   44e08:	bl	45388 <flatcc_json_printer_clear@@Base+0x644>
   44e0c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   44e10:	ldr	r1, [fp, #-76]	; 0xffffffb4
   44e14:	lsl	r1, r1, #1
   44e18:	orr	r1, r1, r0, lsr #31
   44e1c:	mov	r2, #1
   44e20:	orr	r0, r2, r0, lsl #1
   44e24:	str	r0, [fp, #-112]	; 0xffffff90
   44e28:	str	r1, [fp, #-108]	; 0xffffff94
   44e2c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   44e30:	sub	r0, r0, #1
   44e34:	str	r0, [fp, #-104]	; 0xffffff98
   44e38:	ldr	r2, [fp, #-112]	; 0xffffff90
   44e3c:	ldr	r3, [fp, #-108]	; 0xffffff94
   44e40:	ldr	r0, [fp, #-104]	; 0xffffff98
   44e44:	ldr	r1, [fp, #-100]	; 0xffffff9c
   44e48:	mov	ip, sp
   44e4c:	str	r1, [ip, #4]
   44e50:	str	r0, [ip]
   44e54:	sub	r0, fp, #128	; 0x80
   44e58:	bl	45388 <flatcc_json_printer_clear@@Base+0x644>
   44e5c:	vldr	d0, [fp, #-40]	; 0xffffffd8
   44e60:	bl	44da0 <flatcc_json_printer_clear@@Base+0x5c>
   44e64:	str	r1, [sp, #124]	; 0x7c
   44e68:	str	r0, [sp, #120]	; 0x78
   44e6c:	vldr	d16, [fp, #-40]	; 0xffffffd8
   44e70:	vcmpe.f64	d16, #0.0
   44e74:	vmrs	APSR_nzcv, fpscr
   44e78:	ble	44e94 <flatcc_json_printer_clear@@Base+0x150>
   44e7c:	vldr	d16, [pc, #756]	; 45178 <flatcc_json_printer_clear@@Base+0x434>
   44e80:	vldr	d17, [fp, #-40]	; 0xffffffd8
   44e84:	vcmpe.f64	d17, d16
   44e88:	vmrs	APSR_nzcv, fpscr
   44e8c:	bhi	44e94 <flatcc_json_printer_clear@@Base+0x150>
   44e90:	b	44eb4 <flatcc_json_printer_clear@@Base+0x170>
   44e94:	ldr	r0, [pc, #740]	; 45180 <flatcc_json_printer_clear@@Base+0x43c>
   44e98:	add	r0, pc, r0
   44e9c:	ldr	r1, [pc, #736]	; 45184 <flatcc_json_printer_clear@@Base+0x440>
   44ea0:	add	r1, pc, r1
   44ea4:	ldr	r2, [pc, #732]	; 45188 <flatcc_json_printer_clear@@Base+0x444>
   44ea8:	add	r3, pc, r2
   44eac:	movw	r2, #138	; 0x8a
   44eb0:	bl	14f08 <__assert_fail@plt>
   44eb4:	ldr	r0, [sp, #120]	; 0x78
   44eb8:	ldr	r1, [sp, #124]	; 0x7c
   44ebc:	bfc	r1, #20, #12
   44ec0:	orr	r0, r0, r1
   44ec4:	cmp	r0, #0
   44ec8:	bne	44f18 <flatcc_json_printer_clear@@Base+0x1d4>
   44ecc:	b	44ed0 <flatcc_json_printer_clear@@Base+0x18c>
   44ed0:	ldrh	r0, [sp, #126]	; 0x7e
   44ed4:	movw	r1, #32752	; 0x7ff0
   44ed8:	tst	r0, r1
   44edc:	beq	44f18 <flatcc_json_printer_clear@@Base+0x1d4>
   44ee0:	b	44ee4 <flatcc_json_printer_clear@@Base+0x1a0>
   44ee4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   44ee8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   44eec:	lsl	r1, r1, #2
   44ef0:	orr	r1, r1, r0, lsr #30
   44ef4:	mvn	r2, #0
   44ef8:	adds	r0, r2, r0, lsl #2
   44efc:	sbc	r1, r1, #0
   44f00:	str	r0, [sp, #144]	; 0x90
   44f04:	str	r1, [sp, #148]	; 0x94
   44f08:	ldr	r0, [fp, #-72]	; 0xffffffb8
   44f0c:	sub	r0, r0, #2
   44f10:	str	r0, [sp, #152]	; 0x98
   44f14:	b	44f48 <flatcc_json_printer_clear@@Base+0x204>
   44f18:	ldr	r0, [fp, #-80]	; 0xffffffb0
   44f1c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   44f20:	lsl	r1, r1, #1
   44f24:	orr	r1, r1, r0, lsr #31
   44f28:	mvn	r2, #0
   44f2c:	adds	r0, r2, r0, lsl #1
   44f30:	sbc	r1, r1, #0
   44f34:	str	r0, [sp, #144]	; 0x90
   44f38:	str	r1, [sp, #148]	; 0x94
   44f3c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   44f40:	sub	r0, r0, #1
   44f44:	str	r0, [sp, #152]	; 0x98
   44f48:	ldr	r0, [sp, #144]	; 0x90
   44f4c:	ldr	r1, [sp, #148]	; 0x94
   44f50:	ldr	r2, [sp, #152]	; 0x98
   44f54:	ldr	r3, [fp, #-120]	; 0xffffff88
   44f58:	sub	r2, r2, r3
   44f5c:	rsb	r3, r2, #32
   44f60:	lsr	r3, r0, r3
   44f64:	orr	r1, r3, r1, lsl r2
   44f68:	sub	r3, r2, #32
   44f6c:	cmp	r3, #0
   44f70:	lslpl	r1, r0, r3
   44f74:	lsl	r0, r0, r2
   44f78:	cmp	r3, #0
   44f7c:	movwpl	r0, #0
   44f80:	str	r0, [sp, #144]	; 0x90
   44f84:	str	r1, [sp, #148]	; 0x94
   44f88:	ldr	r0, [fp, #-120]	; 0xffffff88
   44f8c:	str	r0, [sp, #152]	; 0x98
   44f90:	ldr	r0, [fp, #-88]	; 0xffffffa8
   44f94:	mvn	r1, #123	; 0x7b
   44f98:	sub	r0, r1, r0
   44f9c:	add	r1, sp, #128	; 0x80
   44fa0:	bl	454c0 <flatcc_json_printer_clear@@Base+0x77c>
   44fa4:	str	r0, [fp, #-56]	; 0xffffffc8
   44fa8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   44fac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   44fb0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   44fb4:	ldr	r1, [fp, #-84]	; 0xffffffac
   44fb8:	ldr	ip, [sp, #128]	; 0x80
   44fbc:	ldr	lr, [sp, #132]	; 0x84
   44fc0:	ldr	r4, [sp, #136]	; 0x88
   44fc4:	ldr	r5, [sp, #140]	; 0x8c
   44fc8:	mov	r6, sp
   44fcc:	str	r5, [r6, #20]
   44fd0:	str	r4, [r6, #16]
   44fd4:	str	lr, [r6, #12]
   44fd8:	str	ip, [r6, #8]
   44fdc:	str	r1, [r6, #4]
   44fe0:	str	r0, [r6]
   44fe4:	add	r0, sp, #104	; 0x68
   44fe8:	str	r0, [sp, #68]	; 0x44
   44fec:	bl	45580 <flatcc_json_printer_clear@@Base+0x83c>
   44ff0:	ldr	r0, [sp, #68]	; 0x44
   44ff4:	vld1.64	{d16-d17}, [r0]
   44ff8:	sub	r1, fp, #96	; 0x60
   44ffc:	vst1.64	{d16-d17}, [r1]
   45000:	ldr	r2, [sp, #144]	; 0x90
   45004:	ldr	r3, [sp, #148]	; 0x94
   45008:	ldr	r1, [sp, #152]	; 0x98
   4500c:	ldr	ip, [sp, #156]	; 0x9c
   45010:	ldr	lr, [sp, #128]	; 0x80
   45014:	ldr	r4, [sp, #132]	; 0x84
   45018:	ldr	r5, [sp, #136]	; 0x88
   4501c:	ldr	r6, [sp, #140]	; 0x8c
   45020:	mov	r7, sp
   45024:	str	r6, [r7, #20]
   45028:	str	r5, [r7, #16]
   4502c:	str	r4, [r7, #12]
   45030:	str	lr, [r7, #8]
   45034:	str	ip, [r7, #4]
   45038:	str	r1, [r7]
   4503c:	add	r1, sp, #88	; 0x58
   45040:	mov	r0, r1
   45044:	str	r1, [sp, #64]	; 0x40
   45048:	bl	45580 <flatcc_json_printer_clear@@Base+0x83c>
   4504c:	ldr	r0, [sp, #64]	; 0x40
   45050:	vld1.64	{d16-d17}, [r0]
   45054:	add	r1, sp, #144	; 0x90
   45058:	vst1.64	{d16-d17}, [r1]
   4505c:	ldr	r2, [fp, #-128]	; 0xffffff80
   45060:	ldr	r3, [fp, #-124]	; 0xffffff84
   45064:	ldr	r1, [fp, #-120]	; 0xffffff88
   45068:	ldr	ip, [fp, #-116]	; 0xffffff8c
   4506c:	ldr	lr, [sp, #128]	; 0x80
   45070:	ldr	r4, [sp, #132]	; 0x84
   45074:	ldr	r5, [sp, #136]	; 0x88
   45078:	ldr	r6, [sp, #140]	; 0x8c
   4507c:	mov	r7, sp
   45080:	str	r6, [r7, #20]
   45084:	str	r5, [r7, #16]
   45088:	str	r4, [r7, #12]
   4508c:	str	lr, [r7, #8]
   45090:	str	ip, [r7, #4]
   45094:	str	r1, [r7]
   45098:	add	r1, sp, #72	; 0x48
   4509c:	mov	r0, r1
   450a0:	str	r1, [sp, #60]	; 0x3c
   450a4:	bl	45580 <flatcc_json_printer_clear@@Base+0x83c>
   450a8:	ldr	r0, [sp, #60]	; 0x3c
   450ac:	vld1.64	{d16-d17}, [r0]
   450b0:	sub	r1, fp, #128	; 0x80
   450b4:	vst1.64	{d16-d17}, [r1]
   450b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   450bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   450c0:	ldr	r0, [sp, #144]	; 0x90
   450c4:	ldr	r3, [sp, #148]	; 0x94
   450c8:	ldr	ip, [sp, #152]	; 0x98
   450cc:	ldr	lr, [sp, #156]	; 0x9c
   450d0:	ldr	r4, [fp, #-96]	; 0xffffffa0
   450d4:	ldr	r5, [fp, #-92]	; 0xffffffa4
   450d8:	ldr	r6, [fp, #-88]	; 0xffffffa8
   450dc:	ldr	r7, [fp, #-84]	; 0xffffffac
   450e0:	ldr	r8, [fp, #-128]	; 0xffffff80
   450e4:	ldr	r9, [fp, #-124]	; 0xffffff84
   450e8:	ldr	sl, [fp, #-120]	; 0xffffff88
   450ec:	str	r0, [sp, #56]	; 0x38
   450f0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   450f4:	str	r0, [sp, #52]	; 0x34
   450f8:	mov	r0, sp
   450fc:	str	r0, [sp, #48]	; 0x30
   45100:	sub	r0, fp, #60	; 0x3c
   45104:	str	r1, [sp, #44]	; 0x2c
   45108:	ldr	r1, [sp, #48]	; 0x30
   4510c:	str	r0, [r1, #40]	; 0x28
   45110:	str	r2, [r1, #36]	; 0x24
   45114:	ldr	r0, [sp, #44]	; 0x2c
   45118:	str	r0, [r1, #32]
   4511c:	str	r9, [r1, #20]
   45120:	str	r8, [r1, #16]
   45124:	str	r5, [r1, #4]
   45128:	str	r4, [r1]
   4512c:	str	sl, [r1, #24]
   45130:	str	r6, [r1, #8]
   45134:	ldr	r2, [sp, #52]	; 0x34
   45138:	str	r2, [r1, #28]
   4513c:	str	r7, [r1, #12]
   45140:	ldr	r0, [sp, #56]	; 0x38
   45144:	mov	r1, r3
   45148:	mov	r2, ip
   4514c:	mov	r3, lr
   45150:	bl	45714 <flatcc_json_printer_clear@@Base+0x9d0>
   45154:	str	r0, [fp, #-64]	; 0xffffffc0
   45158:	ldr	r0, [fp, #-60]	; 0xffffffc4
   4515c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   45160:	sub	r0, r0, r1
   45164:	ldr	r1, [fp, #-52]	; 0xffffffcc
   45168:	str	r0, [r1]
   4516c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   45170:	sub	sp, fp, #28
   45174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45178:			; <UNDEFINED> instruction: 0xffffffff
   4517c:	svcvc	0x00efffff
   45180:	andeq	r8, r0, r4, lsl fp
   45184:	andeq	r8, r0, r2, ror #20
   45188:	andeq	r8, r0, r9, lsr #22
   4518c:	sub	sp, sp, #36	; 0x24
   45190:	str	r0, [sp, #32]
   45194:	str	r1, [sp, #28]
   45198:	ldr	r0, [sp, #28]
   4519c:	str	r0, [sp, #12]
   451a0:	ldr	r0, [sp, #32]
   451a4:	cmp	r0, #0
   451a8:	bge	451d0 <flatcc_json_printer_clear@@Base+0x48c>
   451ac:	ldr	r0, [sp, #28]
   451b0:	add	r1, r0, #1
   451b4:	str	r1, [sp, #28]
   451b8:	movw	r1, #45	; 0x2d
   451bc:	strb	r1, [r0]
   451c0:	ldr	r0, [sp, #32]
   451c4:	movw	r1, #0
   451c8:	sub	r0, r1, r0
   451cc:	str	r0, [sp, #32]
   451d0:	ldr	r0, [sp, #28]
   451d4:	str	r0, [sp, #16]
   451d8:	ldr	r0, [sp, #32]
   451dc:	movw	r1, #10
   451e0:	sdiv	r0, r0, r1
   451e4:	str	r0, [sp, #8]
   451e8:	ldr	r0, [sp, #32]
   451ec:	ldr	r2, [sp, #8]
   451f0:	mul	r1, r2, r1
   451f4:	sub	r0, r0, r1
   451f8:	str	r0, [sp, #4]
   451fc:	ldr	r0, [sp, #4]
   45200:	add	r0, r0, #48	; 0x30
   45204:	ldr	r1, [sp, #16]
   45208:	add	r2, r1, #1
   4520c:	str	r2, [sp, #16]
   45210:	strb	r0, [r1]
   45214:	ldr	r0, [sp, #8]
   45218:	cmp	r0, #0
   4521c:	bne	45224 <flatcc_json_printer_clear@@Base+0x4e0>
   45220:	b	45230 <flatcc_json_printer_clear@@Base+0x4ec>
   45224:	ldr	r0, [sp, #8]
   45228:	str	r0, [sp, #32]
   4522c:	b	451d8 <flatcc_json_printer_clear@@Base+0x494>
   45230:	ldr	r0, [sp, #16]
   45234:	movw	r1, #0
   45238:	strb	r1, [r0]
   4523c:	ldr	r0, [sp, #16]
   45240:	ldr	r1, [sp, #28]
   45244:	sub	r0, r0, r1
   45248:	str	r0, [sp, #24]
   4524c:	movw	r0, #0
   45250:	str	r0, [sp, #20]
   45254:	ldr	r0, [sp, #20]
   45258:	ldr	r1, [sp, #24]
   4525c:	movw	r2, #2
   45260:	sdiv	r1, r1, r2
   45264:	cmp	r0, r1
   45268:	bge	452dc <flatcc_json_printer_clear@@Base+0x598>
   4526c:	ldr	r0, [sp, #28]
   45270:	ldr	r1, [sp, #20]
   45274:	add	r0, r0, r1
   45278:	ldrb	r0, [r0]
   4527c:	strb	r0, [sp, #3]
   45280:	ldr	r0, [sp, #28]
   45284:	ldr	r1, [sp, #24]
   45288:	sub	r1, r1, #1
   4528c:	ldr	r2, [sp, #20]
   45290:	sub	r1, r1, r2
   45294:	add	r0, r0, r1
   45298:	ldrb	r0, [r0]
   4529c:	ldr	r1, [sp, #28]
   452a0:	ldr	r2, [sp, #20]
   452a4:	add	r1, r1, r2
   452a8:	strb	r0, [r1]
   452ac:	ldrb	r0, [sp, #3]
   452b0:	ldr	r1, [sp, #28]
   452b4:	ldr	r2, [sp, #24]
   452b8:	sub	r2, r2, #1
   452bc:	ldr	r3, [sp, #20]
   452c0:	sub	r2, r2, r3
   452c4:	add	r1, r1, r2
   452c8:	strb	r0, [r1]
   452cc:	ldr	r0, [sp, #20]
   452d0:	add	r0, r0, #1
   452d4:	str	r0, [sp, #20]
   452d8:	b	45254 <flatcc_json_printer_clear@@Base+0x510>
   452dc:	ldr	r0, [sp, #16]
   452e0:	ldr	r1, [sp, #12]
   452e4:	sub	r0, r0, r1
   452e8:	add	sp, sp, #36	; 0x24
   452ec:	bx	lr
   452f0:	push	{fp, lr}
   452f4:	mov	fp, sp
   452f8:	sub	sp, sp, #24
   452fc:	vstr	d0, [fp, #-8]
   45300:	vldr	d0, [fp, #-8]
   45304:	str	r0, [sp, #4]
   45308:	bl	44da0 <flatcc_json_printer_clear@@Base+0x5c>
   4530c:	str	r1, [sp, #12]
   45310:	str	r0, [sp, #8]
   45314:	ldrh	r0, [sp, #14]
   45318:	movw	r1, #32752	; 0x7ff0
   4531c:	tst	r0, r1
   45320:	bne	4534c <flatcc_json_printer_clear@@Base+0x608>
   45324:	b	45328 <flatcc_json_printer_clear@@Base+0x5e4>
   45328:	ldr	r0, [pc, #84]	; 45384 <flatcc_json_printer_clear@@Base+0x640>
   4532c:	ldr	r1, [sp, #8]
   45330:	ldr	r2, [sp, #12]
   45334:	bfc	r2, #20, #12
   45338:	ldr	r3, [sp, #4]
   4533c:	str	r1, [r3]
   45340:	str	r2, [r3, #4]
   45344:	str	r0, [r3, #8]
   45348:	b	4537c <flatcc_json_printer_clear@@Base+0x638>
   4534c:	ldr	r0, [sp, #8]
   45350:	ldr	r1, [sp, #12]
   45354:	mov	r2, #1
   45358:	bfi	r1, r2, #20, #12
   4535c:	ldr	r2, [sp, #4]
   45360:	str	r0, [r2]
   45364:	str	r1, [r2, #4]
   45368:	ldr	r0, [sp, #12]
   4536c:	ubfx	r0, r0, #20, #11
   45370:	movw	r1, #1075	; 0x433
   45374:	sub	r0, r0, r1
   45378:	str	r0, [r2, #8]
   4537c:	mov	sp, fp
   45380:	pop	{fp, pc}
   45384:			; <UNDEFINED> instruction: 0xfffffbce
   45388:	push	{fp, lr}
   4538c:	mov	fp, sp
   45390:	sub	sp, sp, #24
   45394:	ldr	r1, [fp, #12]
   45398:	ldr	ip, [fp, #8]
   4539c:	str	r2, [sp, #8]
   453a0:	str	r3, [sp, #12]
   453a4:	str	ip, [sp, #16]
   453a8:	str	r1, [sp, #20]
   453ac:	ldr	r1, [sp, #8]
   453b0:	ldr	r2, [sp, #12]
   453b4:	orr	r1, r1, r2
   453b8:	cmp	r1, #0
   453bc:	str	r0, [sp, #4]
   453c0:	beq	453cc <flatcc_json_printer_clear@@Base+0x688>
   453c4:	b	453c8 <flatcc_json_printer_clear@@Base+0x684>
   453c8:	b	453ec <flatcc_json_printer_clear@@Base+0x6a8>
   453cc:	ldr	r0, [pc, #224]	; 454b4 <flatcc_json_printer_clear@@Base+0x770>
   453d0:	add	r0, pc, r0
   453d4:	ldr	r1, [pc, #220]	; 454b8 <flatcc_json_printer_clear@@Base+0x774>
   453d8:	add	r1, pc, r1
   453dc:	ldr	r2, [pc, #216]	; 454bc <flatcc_json_printer_clear@@Base+0x778>
   453e0:	add	r3, pc, r2
   453e4:	movw	r2, #260	; 0x104
   453e8:	bl	14f08 <__assert_fail@plt>
   453ec:	b	453f0 <flatcc_json_printer_clear@@Base+0x6ac>
   453f0:	ldrh	r0, [sp, #14]
   453f4:	bic	r0, r0, #63	; 0x3f
   453f8:	cmp	r0, #0
   453fc:	movwne	r0, #1
   45400:	mvn	r1, #0
   45404:	eor	r0, r0, r1
   45408:	tst	r0, #1
   4540c:	beq	4543c <flatcc_json_printer_clear@@Base+0x6f8>
   45410:	ldr	r0, [sp, #8]
   45414:	ldr	r1, [sp, #12]
   45418:	lsl	r1, r1, #10
   4541c:	orr	r1, r1, r0, lsr #22
   45420:	lsl	r0, r0, #10
   45424:	str	r0, [sp, #8]
   45428:	str	r1, [sp, #12]
   4542c:	ldr	r0, [sp, #16]
   45430:	sub	r0, r0, #10
   45434:	str	r0, [sp, #16]
   45438:	b	453f0 <flatcc_json_printer_clear@@Base+0x6ac>
   4543c:	b	45440 <flatcc_json_printer_clear@@Base+0x6fc>
   45440:	ldrb	r0, [sp, #15]
   45444:	lsr	r0, r0, #7
   45448:	mvn	r1, #0
   4544c:	eor	r0, r0, r1
   45450:	tst	r0, #1
   45454:	beq	45488 <flatcc_json_printer_clear@@Base+0x744>
   45458:	ldr	r0, [sp, #8]
   4545c:	ldr	r1, [sp, #12]
   45460:	lsl	r1, r1, #1
   45464:	orr	r1, r1, r0, lsr #31
   45468:	lsl	r0, r0, #1
   4546c:	str	r0, [sp, #8]
   45470:	str	r1, [sp, #12]
   45474:	ldr	r0, [sp, #16]
   45478:	mvn	r1, #0
   4547c:	add	r0, r0, r1
   45480:	str	r0, [sp, #16]
   45484:	b	45440 <flatcc_json_printer_clear@@Base+0x6fc>
   45488:	ldr	r0, [sp, #8]
   4548c:	ldr	r1, [sp, #4]
   45490:	str	r0, [r1]
   45494:	ldr	r0, [sp, #12]
   45498:	str	r0, [r1, #4]
   4549c:	ldr	r0, [sp, #16]
   454a0:	str	r0, [r1, #8]
   454a4:	ldr	r0, [sp, #20]
   454a8:	str	r0, [r1, #12]
   454ac:	mov	sp, fp
   454b0:	pop	{fp, pc}
   454b4:	andeq	r7, r0, r9, lsl #16
   454b8:	andeq	r7, r0, sl, lsl #16
   454bc:	andeq	r7, r0, pc, ror #16
   454c0:	push	{fp, lr}
   454c4:	mov	fp, sp
   454c8:	sub	sp, sp, #24
   454cc:	ldr	r2, [pc, #164]	; 45578 <flatcc_json_printer_clear@@Base+0x834>
   454d0:	add	r2, pc, r2
   454d4:	str	r0, [fp, #-4]
   454d8:	str	r1, [fp, #-8]
   454dc:	ldr	r0, [fp, #-4]
   454e0:	add	r0, r0, #63	; 0x3f
   454e4:	vmov	s0, r0
   454e8:	vcvt.f64.s32	d16, s0
   454ec:	vldr	d17, [pc, #124]	; 45570 <flatcc_json_printer_clear@@Base+0x82c>
   454f0:	vmul.f64	d0, d16, d17
   454f4:	str	r2, [sp, #4]
   454f8:	bl	45cb4 <flatcc_json_printer_clear@@Base+0xf70>
   454fc:	str	r0, [sp, #12]
   45500:	ldr	r0, [sp, #12]
   45504:	movw	r1, #347	; 0x15b
   45508:	add	r0, r0, r1
   4550c:	asr	r1, r0, #31
   45510:	add	r0, r0, r1, lsr #29
   45514:	mov	r1, #1
   45518:	add	r0, r1, r0, asr #3
   4551c:	str	r0, [sp, #8]
   45520:	ldr	r0, [sp, #8]
   45524:	ldr	r1, [pc, #80]	; 4557c <flatcc_json_printer_clear@@Base+0x838>
   45528:	add	r1, pc, r1
   4552c:	mov	r2, r1
   45530:	ldr	r0, [r2, r0, lsl #4]!
   45534:	ldr	r2, [r2, #4]
   45538:	ldr	r3, [fp, #-8]
   4553c:	str	r2, [r3, #4]
   45540:	str	r0, [r3]
   45544:	ldr	r0, [sp, #8]
   45548:	add	r0, r1, r0, lsl #4
   4554c:	ldrsh	r0, [r0, #8]
   45550:	ldr	r2, [fp, #-8]
   45554:	str	r0, [r2, #8]
   45558:	ldr	r0, [sp, #8]
   4555c:	add	r0, r1, r0, lsl #4
   45560:	ldrsh	r0, [r0, #10]
   45564:	mov	sp, fp
   45568:	pop	{fp, pc}
   4556c:	nop	{0}
   45570:			; <UNDEFINED> instruction: 0x509f79fe
   45574:	svccc	0x00d34413
   45578:	strdeq	r8, [r0], -r0
   4557c:	muleq	r0, r8, r6
   45580:	push	{r4, r5, r6, sl, fp, lr}
   45584:	add	fp, sp, #16
   45588:	sub	sp, sp, #104	; 0x68
   4558c:	ldr	r1, [fp, #28]
   45590:	ldr	ip, [fp, #24]
   45594:	ldr	lr, [fp, #20]
   45598:	ldr	r4, [fp, #16]
   4559c:	ldr	r5, [fp, #12]
   455a0:	ldr	r6, [fp, #8]
   455a4:	str	r2, [fp, #-32]	; 0xffffffe0
   455a8:	str	r3, [fp, #-28]	; 0xffffffe4
   455ac:	str	r6, [fp, #-24]	; 0xffffffe8
   455b0:	str	r5, [fp, #-20]	; 0xffffffec
   455b4:	str	r1, [fp, #-36]	; 0xffffffdc
   455b8:	str	ip, [fp, #-40]	; 0xffffffd8
   455bc:	str	lr, [fp, #-44]	; 0xffffffd4
   455c0:	str	r4, [fp, #-48]	; 0xffffffd0
   455c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   455c8:	mov	r2, #0
   455cc:	str	r2, [fp, #-52]	; 0xffffffcc
   455d0:	str	r1, [fp, #-56]	; 0xffffffc8
   455d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   455d8:	str	r2, [sp, #60]	; 0x3c
   455dc:	str	r1, [sp, #56]	; 0x38
   455e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   455e4:	str	r2, [sp, #52]	; 0x34
   455e8:	str	r1, [sp, #48]	; 0x30
   455ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   455f0:	str	r2, [sp, #44]	; 0x2c
   455f4:	str	r1, [sp, #40]	; 0x28
   455f8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   455fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45600:	ldr	ip, [sp, #48]	; 0x30
   45604:	ldr	lr, [sp, #52]	; 0x34
   45608:	umull	r4, r5, r1, ip
   4560c:	mla	r1, r1, lr, r5
   45610:	mla	r1, r3, ip, r1
   45614:	str	r4, [sp, #32]
   45618:	str	r1, [sp, #36]	; 0x24
   4561c:	ldr	r1, [sp, #56]	; 0x38
   45620:	ldr	r3, [sp, #60]	; 0x3c
   45624:	ldr	ip, [sp, #48]	; 0x30
   45628:	ldr	lr, [sp, #52]	; 0x34
   4562c:	umull	r4, r5, r1, ip
   45630:	mla	r1, r1, lr, r5
   45634:	mla	r1, r3, ip, r1
   45638:	str	r4, [sp, #24]
   4563c:	str	r1, [sp, #28]
   45640:	ldr	r1, [fp, #-56]	; 0xffffffc8
   45644:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45648:	ldr	ip, [sp, #40]	; 0x28
   4564c:	ldr	lr, [sp, #44]	; 0x2c
   45650:	umull	r4, r5, r1, ip
   45654:	mla	r1, r1, lr, r5
   45658:	mla	r1, r3, ip, r1
   4565c:	str	r4, [sp, #16]
   45660:	str	r1, [sp, #20]
   45664:	ldr	r1, [sp, #56]	; 0x38
   45668:	ldr	r3, [sp, #60]	; 0x3c
   4566c:	ldr	ip, [sp, #40]	; 0x28
   45670:	ldr	lr, [sp, #44]	; 0x2c
   45674:	umull	r4, r5, r1, ip
   45678:	mla	r1, r1, lr, r5
   4567c:	mla	r1, r3, ip, r1
   45680:	str	r4, [sp, #8]
   45684:	str	r1, [sp, #12]
   45688:	ldr	r1, [sp, #12]
   4568c:	ldr	r3, [sp, #16]
   45690:	adds	r1, r1, r3
   45694:	adc	r2, r2, #0
   45698:	ldr	r3, [sp, #24]
   4569c:	adds	r1, r1, r3
   456a0:	adc	r2, r2, #0
   456a4:	str	r1, [sp]
   456a8:	str	r2, [sp, #4]
   456ac:	ldr	r1, [sp]
   456b0:	ldr	r2, [sp, #4]
   456b4:	adds	r1, r1, #-2147483648	; 0x80000000
   456b8:	adc	r2, r2, #0
   456bc:	str	r1, [sp]
   456c0:	str	r2, [sp, #4]
   456c4:	ldr	r1, [sp, #32]
   456c8:	ldr	r2, [sp, #36]	; 0x24
   456cc:	ldr	r3, [sp, #20]
   456d0:	adds	r1, r1, r3
   456d4:	adc	r2, r2, #0
   456d8:	ldr	r3, [sp, #28]
   456dc:	adds	r1, r1, r3
   456e0:	adc	r2, r2, #0
   456e4:	ldr	r3, [sp, #4]
   456e8:	adds	r1, r1, r3
   456ec:	adc	r2, r2, #0
   456f0:	str	r1, [r0]
   456f4:	str	r2, [r0, #4]
   456f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   456fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   45700:	add	r1, r1, r2
   45704:	add	r1, r1, #64	; 0x40
   45708:	str	r1, [r0, #8]
   4570c:	sub	sp, fp, #16
   45710:	pop	{r4, r5, r6, sl, fp, pc}
   45714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45718:	add	fp, sp, #28
   4571c:	sub	sp, sp, #284	; 0x11c
   45720:	ldr	ip, [fp, #36]	; 0x24
   45724:	ldr	lr, [fp, #32]
   45728:	ldr	r4, [fp, #28]
   4572c:	ldr	r5, [fp, #24]
   45730:	ldr	r6, [fp, #20]
   45734:	ldr	r7, [fp, #16]
   45738:	ldr	r8, [fp, #12]
   4573c:	ldr	r9, [fp, #8]
   45740:	ldr	sl, [fp, #48]	; 0x30
   45744:	str	r0, [sp, #68]	; 0x44
   45748:	ldr	r0, [fp, #44]	; 0x2c
   4574c:	str	r0, [sp, #64]	; 0x40
   45750:	ldr	r0, [fp, #40]	; 0x28
   45754:	str	r0, [sp, #60]	; 0x3c
   45758:	ldr	r0, [sp, #68]	; 0x44
   4575c:	str	r0, [fp, #-56]	; 0xffffffc8
   45760:	str	r1, [fp, #-52]	; 0xffffffcc
   45764:	str	r2, [fp, #-48]	; 0xffffffd0
   45768:	str	r3, [fp, #-44]	; 0xffffffd4
   4576c:	str	r6, [fp, #-60]	; 0xffffffc4
   45770:	str	r7, [fp, #-64]	; 0xffffffc0
   45774:	str	r8, [fp, #-68]	; 0xffffffbc
   45778:	str	r9, [fp, #-72]	; 0xffffffb8
   4577c:	str	ip, [fp, #-76]	; 0xffffffb4
   45780:	str	lr, [fp, #-80]	; 0xffffffb0
   45784:	str	r4, [fp, #-84]	; 0xffffffac
   45788:	str	r5, [fp, #-88]	; 0xffffffa8
   4578c:	mov	r1, #0
   45790:	str	r1, [fp, #-92]	; 0xffffffa4
   45794:	mov	r1, #1
   45798:	str	r1, [fp, #-96]	; 0xffffffa0
   4579c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   457a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   457a4:	ldr	ip, [fp, #-96]	; 0xffffffa0
   457a8:	ldr	lr, [fp, #-92]	; 0xffffffa4
   457ac:	subs	r2, r2, ip
   457b0:	sbc	r3, r3, lr
   457b4:	str	r2, [fp, #-112]	; 0xffffff90
   457b8:	str	r3, [fp, #-108]	; 0xffffff94
   457bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   457c0:	str	r2, [fp, #-104]	; 0xffffff98
   457c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   457c8:	ldr	r3, [fp, #-84]	; 0xffffffac
   457cc:	ldr	ip, [fp, #-96]	; 0xffffffa0
   457d0:	ldr	lr, [fp, #-92]	; 0xffffffa4
   457d4:	adds	r2, r2, ip
   457d8:	adc	r3, r3, lr
   457dc:	str	r2, [fp, #-128]	; 0xffffff80
   457e0:	str	r3, [fp, #-124]	; 0xffffff84
   457e4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   457e8:	str	r2, [fp, #-120]	; 0xffffff88
   457ec:	ldr	r2, [fp, #-128]	; 0xffffff80
   457f0:	ldr	r3, [fp, #-124]	; 0xffffff84
   457f4:	ldr	ip, [fp, #-120]	; 0xffffff88
   457f8:	ldr	lr, [fp, #-116]	; 0xffffff8c
   457fc:	ldr	r4, [fp, #-112]	; 0xffffff90
   45800:	ldr	r5, [fp, #-108]	; 0xffffff94
   45804:	ldr	r6, [fp, #-104]	; 0xffffff98
   45808:	ldr	r7, [fp, #-100]	; 0xffffff9c
   4580c:	mov	r8, sp
   45810:	str	r7, [r8, #20]
   45814:	str	r6, [r8, #16]
   45818:	str	r5, [r8, #12]
   4581c:	str	r4, [r8, #8]
   45820:	str	lr, [r8, #4]
   45824:	str	ip, [r8]
   45828:	sub	r0, fp, #144	; 0x90
   4582c:	str	sl, [sp, #56]	; 0x38
   45830:	str	r1, [sp, #52]	; 0x34
   45834:	bl	45d34 <flatcc_json_printer_clear@@Base+0xff0>
   45838:	ldr	r0, [fp, #-64]	; 0xffffffc0
   4583c:	rsb	r1, r0, #0
   45840:	mvn	r2, #31
   45844:	sub	r3, r2, r0
   45848:	ldr	ip, [sp, #52]	; 0x34
   4584c:	lsl	r1, ip, r1
   45850:	cmp	r3, #0
   45854:	movwpl	r1, #0
   45858:	add	r0, r0, #32
   4585c:	lsr	r0, ip, r0
   45860:	cmp	r3, #0
   45864:	lslpl	r0, ip, r3
   45868:	str	r0, [sp, #156]	; 0x9c
   4586c:	str	r1, [sp, #152]	; 0x98
   45870:	ldr	r0, [fp, #-64]	; 0xffffffc0
   45874:	str	r0, [sp, #160]	; 0xa0
   45878:	ldr	r0, [fp, #-128]	; 0xffffff80
   4587c:	ldr	r1, [fp, #-124]	; 0xffffff84
   45880:	ldr	r3, [sp, #160]	; 0xa0
   45884:	rsb	lr, r3, #0
   45888:	lsr	r0, r0, lr
   4588c:	add	lr, r3, #32
   45890:	orr	r0, r0, r1, lsl lr
   45894:	sub	r2, r2, r3
   45898:	cmp	r2, #0
   4589c:	lsrpl	r0, r1, r2
   458a0:	str	r0, [sp, #148]	; 0x94
   458a4:	ldr	r0, [fp, #-128]	; 0xffffff80
   458a8:	ldr	r1, [fp, #-124]	; 0xffffff84
   458ac:	ldr	r2, [sp, #152]	; 0x98
   458b0:	ldr	r3, [sp, #156]	; 0x9c
   458b4:	subs	r2, r2, #1
   458b8:	sbc	r3, r3, #0
   458bc:	and	r1, r1, r3
   458c0:	and	r0, r0, r2
   458c4:	str	r0, [sp, #136]	; 0x88
   458c8:	str	r1, [sp, #140]	; 0x8c
   458cc:	ldr	r0, [sp, #148]	; 0x94
   458d0:	ldr	r1, [sp, #160]	; 0xa0
   458d4:	add	r1, r1, #64	; 0x40
   458d8:	add	r2, sp, #132	; 0x84
   458dc:	bl	45e08 <flatcc_json_printer_clear@@Base+0x10c4>
   458e0:	ldr	r1, [fp, #48]	; 0x30
   458e4:	str	r0, [r1]
   458e8:	ldr	r0, [fp, #44]	; 0x2c
   458ec:	movw	r1, #0
   458f0:	str	r1, [r0]
   458f4:	ldr	r0, [fp, #48]	; 0x30
   458f8:	ldr	r0, [r0]
   458fc:	cmp	r0, #0
   45900:	ble	45ac0 <flatcc_json_printer_clear@@Base+0xd7c>
   45904:	ldr	r0, [sp, #148]	; 0x94
   45908:	ldr	r1, [sp, #132]	; 0x84
   4590c:	udiv	r0, r0, r1
   45910:	str	r0, [sp, #116]	; 0x74
   45914:	ldr	r0, [sp, #116]	; 0x74
   45918:	add	r0, r0, #48	; 0x30
   4591c:	ldr	r1, [fp, #40]	; 0x28
   45920:	ldr	r2, [fp, #44]	; 0x2c
   45924:	ldr	r2, [r2]
   45928:	strb	r0, [r1, r2]
   4592c:	ldr	r0, [fp, #44]	; 0x2c
   45930:	ldr	r1, [r0]
   45934:	add	r1, r1, #1
   45938:	str	r1, [r0]
   4593c:	ldr	r0, [sp, #132]	; 0x84
   45940:	ldr	r1, [sp, #148]	; 0x94
   45944:	udiv	r2, r1, r0
   45948:	mls	r0, r2, r0, r1
   4594c:	str	r0, [sp, #148]	; 0x94
   45950:	ldr	r0, [fp, #48]	; 0x30
   45954:	ldr	r1, [r0]
   45958:	sub	r1, r1, #1
   4595c:	str	r1, [r0]
   45960:	ldr	r0, [sp, #148]	; 0x94
   45964:	ldr	r1, [sp, #160]	; 0xa0
   45968:	rsb	r2, r1, #0
   4596c:	mvn	r3, #31
   45970:	sub	r3, r3, r1
   45974:	add	r1, r1, #32
   45978:	lsr	r1, r0, r1
   4597c:	cmp	r3, #0
   45980:	lslpl	r1, r0, r3
   45984:	lsl	r0, r0, r2
   45988:	cmp	r3, #0
   4598c:	movwpl	r0, #0
   45990:	ldr	r2, [sp, #136]	; 0x88
   45994:	ldr	r3, [sp, #140]	; 0x8c
   45998:	adds	r0, r0, r2
   4599c:	adc	r1, r1, r3
   459a0:	str	r0, [sp, #120]	; 0x78
   459a4:	str	r1, [sp, #124]	; 0x7c
   459a8:	ldr	r0, [sp, #120]	; 0x78
   459ac:	ldr	r1, [sp, #124]	; 0x7c
   459b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   459b4:	ldr	r3, [fp, #-140]	; 0xffffff74
   459b8:	subs	r0, r0, r2
   459bc:	sbcs	r1, r1, r3
   459c0:	bcs	45aac <flatcc_json_printer_clear@@Base+0xd68>
   459c4:	b	459c8 <flatcc_json_printer_clear@@Base+0xc84>
   459c8:	ldr	r0, [fp, #40]	; 0x28
   459cc:	ldr	r1, [fp, #44]	; 0x2c
   459d0:	ldr	r1, [r1]
   459d4:	ldr	r2, [fp, #-128]	; 0xffffff80
   459d8:	ldr	r3, [fp, #-124]	; 0xffffff84
   459dc:	ldr	ip, [fp, #-120]	; 0xffffff88
   459e0:	ldr	lr, [fp, #-116]	; 0xffffff8c
   459e4:	ldr	r4, [fp, #-72]	; 0xffffffb8
   459e8:	ldr	r5, [fp, #-68]	; 0xffffffbc
   459ec:	ldr	r6, [fp, #-64]	; 0xffffffc0
   459f0:	ldr	r7, [fp, #-60]	; 0xffffffc4
   459f4:	mov	r8, sp
   459f8:	str	r7, [r8, #20]
   459fc:	str	r6, [r8, #16]
   45a00:	str	r5, [r8, #12]
   45a04:	str	r4, [r8, #8]
   45a08:	str	lr, [r8, #4]
   45a0c:	str	ip, [r8]
   45a10:	add	ip, sp, #96	; 0x60
   45a14:	str	r0, [sp, #48]	; 0x30
   45a18:	mov	r0, ip
   45a1c:	str	r1, [sp, #44]	; 0x2c
   45a20:	bl	45d34 <flatcc_json_printer_clear@@Base+0xff0>
   45a24:	ldr	r2, [sp, #96]	; 0x60
   45a28:	ldr	r3, [sp, #100]	; 0x64
   45a2c:	ldr	r0, [fp, #-144]	; 0xffffff70
   45a30:	ldr	r1, [fp, #-140]	; 0xffffff74
   45a34:	ldr	ip, [sp, #120]	; 0x78
   45a38:	ldr	lr, [sp, #124]	; 0x7c
   45a3c:	ldr	r4, [sp, #132]	; 0x84
   45a40:	ldr	r5, [sp, #160]	; 0xa0
   45a44:	rsb	r6, r5, #0
   45a48:	mvn	r7, #31
   45a4c:	sub	r7, r7, r5
   45a50:	add	r5, r5, #32
   45a54:	lsr	r5, r4, r5
   45a58:	cmp	r7, #0
   45a5c:	lslpl	r5, r4, r7
   45a60:	lsl	r4, r4, r6
   45a64:	cmp	r7, #0
   45a68:	movwpl	r4, #0
   45a6c:	ldr	r6, [fp, #-96]	; 0xffffffa0
   45a70:	ldr	r7, [fp, #-92]	; 0xffffffa4
   45a74:	mov	r8, sp
   45a78:	str	r7, [r8, #28]
   45a7c:	str	r6, [r8, #24]
   45a80:	str	r5, [r8, #20]
   45a84:	str	r4, [r8, #16]
   45a88:	str	lr, [r8, #12]
   45a8c:	str	ip, [r8, #8]
   45a90:	str	r1, [r8, #4]
   45a94:	str	r0, [r8]
   45a98:	ldr	r0, [sp, #48]	; 0x30
   45a9c:	ldr	r1, [sp, #44]	; 0x2c
   45aa0:	bl	45eb0 <flatcc_json_printer_clear@@Base+0x116c>
   45aa4:	str	r0, [fp, #-36]	; 0xffffffdc
   45aa8:	b	45ca8 <flatcc_json_printer_clear@@Base+0xf64>
   45aac:	ldr	r0, [sp, #132]	; 0x84
   45ab0:	movw	r1, #10
   45ab4:	udiv	r0, r0, r1
   45ab8:	str	r0, [sp, #132]	; 0x84
   45abc:	b	458f4 <flatcc_json_printer_clear@@Base+0xbb0>
   45ac0:	b	45ac4 <flatcc_json_printer_clear@@Base+0xd80>
   45ac4:	ldr	r0, [sp, #136]	; 0x88
   45ac8:	ldr	r1, [sp, #140]	; 0x8c
   45acc:	mov	r2, #10
   45ad0:	umull	r0, r3, r0, r2
   45ad4:	add	r1, r1, r1, lsl #2
   45ad8:	add	r1, r3, r1, lsl #1
   45adc:	str	r0, [sp, #136]	; 0x88
   45ae0:	str	r1, [sp, #140]	; 0x8c
   45ae4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   45ae8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   45aec:	umull	r0, r3, r0, r2
   45af0:	add	r1, r1, r1, lsl #2
   45af4:	add	r1, r3, r1, lsl #1
   45af8:	str	r0, [fp, #-96]	; 0xffffffa0
   45afc:	str	r1, [fp, #-92]	; 0xffffffa4
   45b00:	ldr	r0, [fp, #-144]	; 0xffffff70
   45b04:	ldr	r1, [fp, #-140]	; 0xffffff74
   45b08:	umull	r0, r2, r0, r2
   45b0c:	add	r1, r1, r1, lsl #2
   45b10:	add	r1, r2, r1, lsl #1
   45b14:	str	r0, [fp, #-144]	; 0xffffff70
   45b18:	str	r1, [fp, #-140]	; 0xffffff74
   45b1c:	ldr	r0, [sp, #136]	; 0x88
   45b20:	ldr	r1, [sp, #140]	; 0x8c
   45b24:	ldr	r2, [sp, #160]	; 0xa0
   45b28:	rsb	r3, r2, #0
   45b2c:	lsr	r0, r0, r3
   45b30:	add	r3, r2, #32
   45b34:	orr	r0, r0, r1, lsl r3
   45b38:	mvn	r3, #31
   45b3c:	sub	r2, r3, r2
   45b40:	cmp	r2, #0
   45b44:	lsrpl	r0, r1, r2
   45b48:	str	r0, [sp, #92]	; 0x5c
   45b4c:	ldr	r0, [sp, #92]	; 0x5c
   45b50:	add	r0, r0, #48	; 0x30
   45b54:	ldr	r1, [fp, #40]	; 0x28
   45b58:	ldr	r2, [fp, #44]	; 0x2c
   45b5c:	ldr	r2, [r2]
   45b60:	strb	r0, [r1, r2]
   45b64:	ldr	r0, [fp, #44]	; 0x2c
   45b68:	ldr	r1, [r0]
   45b6c:	add	r1, r1, #1
   45b70:	str	r1, [r0]
   45b74:	ldr	r0, [sp, #152]	; 0x98
   45b78:	ldr	r1, [sp, #156]	; 0x9c
   45b7c:	subs	r0, r0, #1
   45b80:	sbc	r1, r1, #0
   45b84:	ldr	r2, [sp, #136]	; 0x88
   45b88:	ldr	r3, [sp, #140]	; 0x8c
   45b8c:	and	r1, r3, r1
   45b90:	and	r0, r2, r0
   45b94:	str	r0, [sp, #136]	; 0x88
   45b98:	str	r1, [sp, #140]	; 0x8c
   45b9c:	ldr	r0, [fp, #48]	; 0x30
   45ba0:	ldr	r1, [r0]
   45ba4:	sub	r1, r1, #1
   45ba8:	str	r1, [r0]
   45bac:	ldr	r0, [sp, #136]	; 0x88
   45bb0:	ldr	r1, [sp, #140]	; 0x8c
   45bb4:	ldr	r2, [fp, #-144]	; 0xffffff70
   45bb8:	ldr	r3, [fp, #-140]	; 0xffffff74
   45bbc:	subs	r0, r0, r2
   45bc0:	sbcs	r1, r1, r3
   45bc4:	bcs	45ca4 <flatcc_json_printer_clear@@Base+0xf60>
   45bc8:	b	45bcc <flatcc_json_printer_clear@@Base+0xe88>
   45bcc:	ldr	r0, [fp, #40]	; 0x28
   45bd0:	ldr	r1, [fp, #44]	; 0x2c
   45bd4:	ldr	r1, [r1]
   45bd8:	ldr	r2, [fp, #-128]	; 0xffffff80
   45bdc:	ldr	r3, [fp, #-124]	; 0xffffff84
   45be0:	ldr	ip, [fp, #-120]	; 0xffffff88
   45be4:	ldr	lr, [fp, #-116]	; 0xffffff8c
   45be8:	ldr	r4, [fp, #-72]	; 0xffffffb8
   45bec:	ldr	r5, [fp, #-68]	; 0xffffffbc
   45bf0:	ldr	r6, [fp, #-64]	; 0xffffffc0
   45bf4:	ldr	r7, [fp, #-60]	; 0xffffffc4
   45bf8:	mov	r8, sp
   45bfc:	str	r7, [r8, #20]
   45c00:	str	r6, [r8, #16]
   45c04:	str	r5, [r8, #12]
   45c08:	str	r4, [r8, #8]
   45c0c:	str	lr, [r8, #4]
   45c10:	str	ip, [r8]
   45c14:	add	ip, sp, #72	; 0x48
   45c18:	str	r0, [sp, #40]	; 0x28
   45c1c:	mov	r0, ip
   45c20:	str	r1, [sp, #36]	; 0x24
   45c24:	bl	45d34 <flatcc_json_printer_clear@@Base+0xff0>
   45c28:	ldr	r0, [sp, #72]	; 0x48
   45c2c:	ldr	r1, [sp, #76]	; 0x4c
   45c30:	ldr	r2, [fp, #-96]	; 0xffffffa0
   45c34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   45c38:	umull	ip, lr, r0, r2
   45c3c:	mla	r0, r0, r3, lr
   45c40:	mla	r0, r1, r2, r0
   45c44:	ldr	r1, [fp, #-144]	; 0xffffff70
   45c48:	ldr	lr, [fp, #-140]	; 0xffffff74
   45c4c:	ldr	r4, [sp, #136]	; 0x88
   45c50:	ldr	r5, [sp, #140]	; 0x8c
   45c54:	ldr	r6, [sp, #152]	; 0x98
   45c58:	ldr	r7, [sp, #156]	; 0x9c
   45c5c:	mov	r8, sp
   45c60:	str	r3, [r8, #28]
   45c64:	str	r2, [r8, #24]
   45c68:	str	r7, [r8, #20]
   45c6c:	str	r6, [r8, #16]
   45c70:	str	r5, [r8, #12]
   45c74:	str	r4, [r8, #8]
   45c78:	str	lr, [r8, #4]
   45c7c:	str	r1, [r8]
   45c80:	ldr	r1, [sp, #40]	; 0x28
   45c84:	str	r0, [sp, #32]
   45c88:	mov	r0, r1
   45c8c:	ldr	r1, [sp, #36]	; 0x24
   45c90:	mov	r2, ip
   45c94:	ldr	r3, [sp, #32]
   45c98:	bl	45eb0 <flatcc_json_printer_clear@@Base+0x116c>
   45c9c:	str	r0, [fp, #-36]	; 0xffffffdc
   45ca0:	b	45ca8 <flatcc_json_printer_clear@@Base+0xf64>
   45ca4:	b	45ac4 <flatcc_json_printer_clear@@Base+0xd80>
   45ca8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   45cac:	sub	sp, fp, #28
   45cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45cb4:	sub	sp, sp, #24
   45cb8:	vstr	d0, [sp, #8]
   45cbc:	vldr	d16, [sp, #8]
   45cc0:	vcvt.s32.f64	s2, d16
   45cc4:	vmov	r0, s2
   45cc8:	str	r0, [sp, #4]
   45ccc:	vldr	d16, [sp, #8]
   45cd0:	vcmpe.f64	d16, #0.0
   45cd4:	vmrs	APSR_nzcv, fpscr
   45cd8:	bpl	45ce8 <flatcc_json_printer_clear@@Base+0xfa4>
   45cdc:	ldr	r0, [sp, #4]
   45ce0:	str	r0, [sp, #20]
   45ce4:	b	45d28 <flatcc_json_printer_clear@@Base+0xfe4>
   45ce8:	vldr	d16, [sp, #8]
   45cec:	ldr	r0, [sp, #4]
   45cf0:	vmov	s0, r0
   45cf4:	vcvt.f64.s32	d17, s0
   45cf8:	vsub.f64	d16, d16, d17
   45cfc:	vcmp.f64	d16, #0.0
   45d00:	vmrs	APSR_nzcv, fpscr
   45d04:	bne	45d14 <flatcc_json_printer_clear@@Base+0xfd0>
   45d08:	ldr	r0, [sp, #4]
   45d0c:	str	r0, [sp]
   45d10:	b	45d20 <flatcc_json_printer_clear@@Base+0xfdc>
   45d14:	ldr	r0, [sp, #4]
   45d18:	add	r0, r0, #1
   45d1c:	str	r0, [sp]
   45d20:	ldr	r0, [sp]
   45d24:	str	r0, [sp, #20]
   45d28:	ldr	r0, [sp, #20]
   45d2c:	add	sp, sp, #24
   45d30:	bx	lr
   45d34:	push	{r4, r5, r6, sl, fp, lr}
   45d38:	add	fp, sp, #16
   45d3c:	sub	sp, sp, #32
   45d40:	ldr	r1, [fp, #28]
   45d44:	ldr	ip, [fp, #24]
   45d48:	ldr	lr, [fp, #20]
   45d4c:	ldr	r4, [fp, #16]
   45d50:	ldr	r5, [fp, #12]
   45d54:	ldr	r6, [fp, #8]
   45d58:	str	r2, [sp, #16]
   45d5c:	str	r3, [sp, #20]
   45d60:	str	r6, [sp, #24]
   45d64:	str	r5, [sp, #28]
   45d68:	str	r1, [sp, #12]
   45d6c:	str	ip, [sp, #8]
   45d70:	str	lr, [sp, #4]
   45d74:	str	r4, [sp]
   45d78:	ldr	r1, [sp, #16]
   45d7c:	ldr	r2, [sp, #20]
   45d80:	ldr	r3, [sp]
   45d84:	ldr	ip, [sp, #4]
   45d88:	subs	r1, r1, r3
   45d8c:	sbc	r2, r2, ip
   45d90:	str	r1, [r0]
   45d94:	str	r2, [r0, #4]
   45d98:	ldr	r1, [sp, #24]
   45d9c:	str	r1, [r0, #8]
   45da0:	ldr	r0, [sp, #24]
   45da4:	ldr	r1, [sp, #8]
   45da8:	cmp	r0, r1
   45dac:	bne	45dd4 <flatcc_json_printer_clear@@Base+0x1090>
   45db0:	ldr	r0, [sp, #16]
   45db4:	ldr	r1, [sp, #20]
   45db8:	ldr	r2, [sp]
   45dbc:	ldr	r3, [sp, #4]
   45dc0:	subs	r0, r0, r2
   45dc4:	sbcs	r1, r1, r3
   45dc8:	bcc	45dd4 <flatcc_json_printer_clear@@Base+0x1090>
   45dcc:	b	45dd0 <flatcc_json_printer_clear@@Base+0x108c>
   45dd0:	b	45df4 <flatcc_json_printer_clear@@Base+0x10b0>
   45dd4:	ldr	r0, [pc, #32]	; 45dfc <flatcc_json_printer_clear@@Base+0x10b8>
   45dd8:	add	r0, pc, r0
   45ddc:	ldr	r1, [pc, #28]	; 45e00 <flatcc_json_printer_clear@@Base+0x10bc>
   45de0:	add	r1, pc, r1
   45de4:	ldr	r2, [pc, #24]	; 45e04 <flatcc_json_printer_clear@@Base+0x10c0>
   45de8:	add	r3, pc, r2
   45dec:	movw	r2, #239	; 0xef
   45df0:	bl	14f08 <__assert_fail@plt>
   45df4:	sub	sp, fp, #16
   45df8:	pop	{r4, r5, r6, sl, fp, pc}
   45dfc:	andeq	r7, r0, r2, lsr #24
   45e00:	andeq	r6, r0, r2, lsl #28
   45e04:	andeq	r7, r0, fp, lsr #24
   45e08:	sub	sp, sp, #20
   45e0c:	ldr	r3, [pc, #140]	; 45ea0 <flatcc_json_printer_clear@@Base+0x115c>
   45e10:	add	r3, pc, r3
   45e14:	str	r0, [sp, #16]
   45e18:	str	r1, [sp, #12]
   45e1c:	str	r2, [sp, #8]
   45e20:	ldr	r0, [sp, #12]
   45e24:	movw	r1, #1233	; 0x4d1
   45e28:	mla	r0, r0, r1, r1
   45e2c:	mov	r1, #1
   45e30:	add	r0, r1, r0, asr #12
   45e34:	str	r0, [sp, #4]
   45e38:	ldr	r0, [sp, #16]
   45e3c:	ldr	r1, [sp, #4]
   45e40:	ldr	r2, [pc, #96]	; 45ea8 <flatcc_json_printer_clear@@Base+0x1164>
   45e44:	add	r2, pc, r2
   45e48:	add	r1, r2, r1, lsl #2
   45e4c:	ldr	r1, [r1]
   45e50:	cmp	r0, r1
   45e54:	bcs	45e68 <flatcc_json_printer_clear@@Base+0x1124>
   45e58:	ldr	r0, [sp, #4]
   45e5c:	mvn	r1, #0
   45e60:	add	r0, r0, r1
   45e64:	str	r0, [sp, #4]
   45e68:	ldr	r0, [pc, #52]	; 45ea4 <flatcc_json_printer_clear@@Base+0x1160>
   45e6c:	add	r0, pc, r0
   45e70:	ldr	r1, [sp, #4]
   45e74:	ldr	r2, [pc, #48]	; 45eac <flatcc_json_printer_clear@@Base+0x1168>
   45e78:	add	r2, pc, r2
   45e7c:	add	r1, r2, r1, lsl #2
   45e80:	ldr	r1, [r1]
   45e84:	ldr	r2, [sp, #8]
   45e88:	str	r1, [r2]
   45e8c:	ldr	r1, [sp, #4]
   45e90:	str	r0, [sp]
   45e94:	mov	r0, r1
   45e98:	add	sp, sp, #20
   45e9c:	bx	lr
   45ea0:	andeq	r8, r0, r0, lsr #6
   45ea4:	andeq	r8, r0, r4, asr #5
   45ea8:	andeq	r8, r0, ip, ror #5
   45eac:			; <UNDEFINED> instruction: 0x000082b8
   45eb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   45eb4:	add	fp, sp, #24
   45eb8:	sub	sp, sp, #88	; 0x58
   45ebc:	ldr	ip, [fp, #36]	; 0x24
   45ec0:	ldr	lr, [fp, #32]
   45ec4:	ldr	r4, [fp, #28]
   45ec8:	ldr	r5, [fp, #24]
   45ecc:	ldr	r6, [fp, #20]
   45ed0:	ldr	r7, [fp, #16]
   45ed4:	ldr	r8, [fp, #12]
   45ed8:	ldr	r9, [fp, #8]
   45edc:	str	r0, [fp, #-32]	; 0xffffffe0
   45ee0:	str	r1, [fp, #-36]	; 0xffffffdc
   45ee4:	str	r3, [fp, #-44]	; 0xffffffd4
   45ee8:	str	r2, [fp, #-48]	; 0xffffffd0
   45eec:	str	r8, [sp, #60]	; 0x3c
   45ef0:	str	r9, [sp, #56]	; 0x38
   45ef4:	str	r6, [sp, #52]	; 0x34
   45ef8:	str	r7, [sp, #48]	; 0x30
   45efc:	str	r4, [sp, #44]	; 0x2c
   45f00:	str	r5, [sp, #40]	; 0x28
   45f04:	str	ip, [sp, #36]	; 0x24
   45f08:	str	lr, [sp, #32]
   45f0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   45f10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   45f14:	ldr	r2, [sp, #32]
   45f18:	ldr	r3, [sp, #36]	; 0x24
   45f1c:	subs	r0, r0, r2
   45f20:	sbc	r1, r1, r3
   45f24:	str	r0, [sp, #24]
   45f28:	str	r1, [sp, #28]
   45f2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   45f30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   45f34:	ldr	r2, [sp, #32]
   45f38:	ldr	r3, [sp, #36]	; 0x24
   45f3c:	adds	r0, r0, r2
   45f40:	adc	r1, r1, r3
   45f44:	str	r0, [sp, #16]
   45f48:	str	r1, [sp, #20]
   45f4c:	ldr	r0, [sp, #48]	; 0x30
   45f50:	ldr	r1, [sp, #52]	; 0x34
   45f54:	ldr	r2, [sp, #24]
   45f58:	ldr	r3, [sp, #28]
   45f5c:	mov	ip, #0
   45f60:	subs	r0, r0, r2
   45f64:	sbcs	r1, r1, r3
   45f68:	str	ip, [sp, #12]
   45f6c:	bcs	46030 <flatcc_json_printer_clear@@Base+0x12ec>
   45f70:	b	45f74 <flatcc_json_printer_clear@@Base+0x1230>
   45f74:	ldr	r0, [sp, #56]	; 0x38
   45f78:	ldr	r1, [sp, #60]	; 0x3c
   45f7c:	ldr	r2, [sp, #48]	; 0x30
   45f80:	ldr	r3, [sp, #52]	; 0x34
   45f84:	subs	r0, r0, r2
   45f88:	sbc	r1, r1, r3
   45f8c:	ldr	r2, [sp, #40]	; 0x28
   45f90:	ldr	r3, [sp, #44]	; 0x2c
   45f94:	mov	ip, #0
   45f98:	subs	r0, r0, r2
   45f9c:	sbcs	r1, r1, r3
   45fa0:	str	ip, [sp, #12]
   45fa4:	bcc	46030 <flatcc_json_printer_clear@@Base+0x12ec>
   45fa8:	b	45fac <flatcc_json_printer_clear@@Base+0x1268>
   45fac:	ldr	r0, [sp, #48]	; 0x30
   45fb0:	ldr	r1, [sp, #52]	; 0x34
   45fb4:	ldr	r2, [sp, #40]	; 0x28
   45fb8:	ldr	r3, [sp, #44]	; 0x2c
   45fbc:	adds	r0, r0, r2
   45fc0:	adc	r1, r1, r3
   45fc4:	ldr	r2, [sp, #24]
   45fc8:	ldr	r3, [sp, #28]
   45fcc:	mov	ip, #1
   45fd0:	subs	r0, r0, r2
   45fd4:	sbcs	r1, r1, r3
   45fd8:	str	ip, [sp, #8]
   45fdc:	bcc	46028 <flatcc_json_printer_clear@@Base+0x12e4>
   45fe0:	b	45fe4 <flatcc_json_printer_clear@@Base+0x12a0>
   45fe4:	ldr	r0, [sp, #24]
   45fe8:	ldr	r1, [sp, #28]
   45fec:	ldr	r2, [sp, #48]	; 0x30
   45ff0:	ldr	r3, [sp, #52]	; 0x34
   45ff4:	subs	ip, r0, r2
   45ff8:	sbc	lr, r1, r3
   45ffc:	ldr	r4, [sp, #40]	; 0x28
   46000:	ldr	r5, [sp, #44]	; 0x2c
   46004:	adds	r2, r2, r4
   46008:	adc	r3, r3, r5
   4600c:	subs	r0, r2, r0
   46010:	sbc	r1, r3, r1
   46014:	subs	r0, ip, r0
   46018:	sbcs	r1, lr, r1
   4601c:	mov	r2, #0
   46020:	movwcs	r2, #1
   46024:	str	r2, [sp, #8]
   46028:	ldr	r0, [sp, #8]
   4602c:	str	r0, [sp, #12]
   46030:	ldr	r0, [sp, #12]
   46034:	tst	r0, #1
   46038:	beq	46078 <flatcc_json_printer_clear@@Base+0x1334>
   4603c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   46040:	ldr	r1, [fp, #-36]	; 0xffffffdc
   46044:	add	r0, r1, r0
   46048:	ldrb	r1, [r0, #-1]
   4604c:	sub	r1, r1, #1
   46050:	strb	r1, [r0, #-1]
   46054:	ldr	r0, [sp, #40]	; 0x28
   46058:	ldr	r1, [sp, #44]	; 0x2c
   4605c:	ldr	r2, [sp, #48]	; 0x30
   46060:	ldr	r3, [sp, #52]	; 0x34
   46064:	adds	r0, r2, r0
   46068:	adc	r1, r3, r1
   4606c:	str	r0, [sp, #48]	; 0x30
   46070:	str	r1, [sp, #52]	; 0x34
   46074:	b	45f4c <flatcc_json_printer_clear@@Base+0x1208>
   46078:	ldr	r0, [sp, #48]	; 0x30
   4607c:	ldr	r1, [sp, #52]	; 0x34
   46080:	ldr	r2, [sp, #16]
   46084:	ldr	r3, [sp, #20]
   46088:	subs	r0, r0, r2
   4608c:	sbcs	r1, r1, r3
   46090:	bcs	46144 <flatcc_json_printer_clear@@Base+0x1400>
   46094:	b	46098 <flatcc_json_printer_clear@@Base+0x1354>
   46098:	ldr	r0, [sp, #56]	; 0x38
   4609c:	ldr	r1, [sp, #60]	; 0x3c
   460a0:	ldr	r2, [sp, #48]	; 0x30
   460a4:	ldr	r3, [sp, #52]	; 0x34
   460a8:	subs	r0, r0, r2
   460ac:	sbc	r1, r1, r3
   460b0:	ldr	r2, [sp, #40]	; 0x28
   460b4:	ldr	r3, [sp, #44]	; 0x2c
   460b8:	subs	r0, r0, r2
   460bc:	sbcs	r1, r1, r3
   460c0:	bcc	46144 <flatcc_json_printer_clear@@Base+0x1400>
   460c4:	b	460c8 <flatcc_json_printer_clear@@Base+0x1384>
   460c8:	ldr	r0, [sp, #48]	; 0x30
   460cc:	ldr	r1, [sp, #52]	; 0x34
   460d0:	ldr	r2, [sp, #40]	; 0x28
   460d4:	ldr	r3, [sp, #44]	; 0x2c
   460d8:	adds	r0, r0, r2
   460dc:	adc	r1, r1, r3
   460e0:	ldr	r2, [sp, #16]
   460e4:	ldr	r3, [sp, #20]
   460e8:	subs	r0, r0, r2
   460ec:	sbcs	r1, r1, r3
   460f0:	bcc	46138 <flatcc_json_printer_clear@@Base+0x13f4>
   460f4:	b	460f8 <flatcc_json_printer_clear@@Base+0x13b4>
   460f8:	ldr	r0, [sp, #16]
   460fc:	ldr	r1, [sp, #20]
   46100:	ldr	r2, [sp, #48]	; 0x30
   46104:	ldr	r3, [sp, #52]	; 0x34
   46108:	subs	ip, r0, r2
   4610c:	sbc	lr, r1, r3
   46110:	ldr	r4, [sp, #40]	; 0x28
   46114:	ldr	r5, [sp, #44]	; 0x2c
   46118:	adds	r2, r2, r4
   4611c:	adc	r3, r3, r5
   46120:	subs	r0, r2, r0
   46124:	sbc	r1, r3, r1
   46128:	subs	r0, r0, ip
   4612c:	sbcs	r1, r1, lr
   46130:	bcs	46144 <flatcc_json_printer_clear@@Base+0x1400>
   46134:	b	46138 <flatcc_json_printer_clear@@Base+0x13f4>
   46138:	movw	r0, #0
   4613c:	str	r0, [fp, #-28]	; 0xffffffe4
   46140:	b	461bc <flatcc_json_printer_clear@@Base+0x1478>
   46144:	ldr	r0, [sp, #32]
   46148:	ldr	r1, [sp, #36]	; 0x24
   4614c:	lsl	r1, r1, #1
   46150:	orr	r1, r1, r0, lsr #31
   46154:	ldr	r2, [sp, #48]	; 0x30
   46158:	ldr	r3, [sp, #52]	; 0x34
   4615c:	mov	ip, #0
   46160:	subs	r0, r2, r0, lsl #1
   46164:	sbcs	r1, r3, r1
   46168:	str	ip, [sp, #4]
   4616c:	bcc	461b0 <flatcc_json_printer_clear@@Base+0x146c>
   46170:	b	46174 <flatcc_json_printer_clear@@Base+0x1430>
   46174:	ldr	r0, [sp, #48]	; 0x30
   46178:	ldr	r1, [sp, #52]	; 0x34
   4617c:	ldr	r2, [sp, #56]	; 0x38
   46180:	ldr	r3, [sp, #60]	; 0x3c
   46184:	ldr	ip, [sp, #32]
   46188:	ldr	lr, [sp, #36]	; 0x24
   4618c:	lsl	lr, lr, #2
   46190:	orr	lr, lr, ip, lsr #30
   46194:	subs	r2, r2, ip, lsl #2
   46198:	sbc	r3, r3, lr
   4619c:	subs	r0, r2, r0
   461a0:	sbcs	r1, r3, r1
   461a4:	mov	r2, #0
   461a8:	movwcs	r2, #1
   461ac:	str	r2, [sp, #4]
   461b0:	ldr	r0, [sp, #4]
   461b4:	and	r0, r0, #1
   461b8:	str	r0, [fp, #-28]	; 0xffffffe4
   461bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   461c0:	sub	sp, fp, #24
   461c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   461c8:	push	{fp, lr}
   461cc:	mov	fp, sp
   461d0:	sub	sp, sp, #24
   461d4:	str	r0, [fp, #-4]
   461d8:	str	r1, [fp, #-8]
   461dc:	str	r2, [sp, #12]
   461e0:	ldr	r0, [fp, #-4]
   461e4:	ldr	r0, [r0, #20]
   461e8:	ldr	r1, [fp, #-4]
   461ec:	ldr	r1, [r1, #16]
   461f0:	cmp	r0, r1
   461f4:	bcc	46218 <flatcc_json_printer_clear@@Base+0x14d4>
   461f8:	ldr	r0, [fp, #-4]
   461fc:	ldr	r0, [r0, #44]	; 0x2c
   46200:	ldr	r1, [fp, #-4]
   46204:	str	r0, [sp, #4]
   46208:	mov	r0, r1
   4620c:	movw	r1, #0
   46210:	ldr	r2, [sp, #4]
   46214:	blx	r2
   46218:	ldr	r0, [fp, #-4]
   4621c:	ldr	r0, [r0, #16]
   46220:	ldr	r1, [fp, #-4]
   46224:	ldr	r1, [r1, #20]
   46228:	sub	r0, r0, r1
   4622c:	str	r0, [sp, #8]
   46230:	ldr	r0, [sp, #12]
   46234:	ldr	r1, [sp, #8]
   46238:	cmp	r0, r1
   4623c:	bls	462c4 <flatcc_json_printer_clear@@Base+0x1580>
   46240:	ldr	r0, [fp, #-4]
   46244:	ldr	r0, [r0, #20]
   46248:	ldr	r1, [fp, #-8]
   4624c:	ldr	r2, [sp, #8]
   46250:	bl	14e30 <memcpy@plt>
   46254:	ldr	r0, [sp, #8]
   46258:	ldr	r1, [fp, #-4]
   4625c:	ldr	r2, [r1, #20]
   46260:	add	r0, r2, r0
   46264:	str	r0, [r1, #20]
   46268:	ldr	r0, [sp, #8]
   4626c:	ldr	r1, [fp, #-8]
   46270:	add	r0, r1, r0
   46274:	str	r0, [fp, #-8]
   46278:	ldr	r0, [sp, #8]
   4627c:	ldr	r1, [sp, #12]
   46280:	sub	r0, r1, r0
   46284:	str	r0, [sp, #12]
   46288:	ldr	r0, [fp, #-4]
   4628c:	ldr	r0, [r0, #44]	; 0x2c
   46290:	ldr	r1, [fp, #-4]
   46294:	str	r0, [sp]
   46298:	mov	r0, r1
   4629c:	movw	r1, #0
   462a0:	ldr	r2, [sp]
   462a4:	blx	r2
   462a8:	ldr	r0, [fp, #-4]
   462ac:	ldr	r0, [r0, #16]
   462b0:	ldr	r1, [fp, #-4]
   462b4:	ldr	r1, [r1, #20]
   462b8:	sub	r0, r0, r1
   462bc:	str	r0, [sp, #8]
   462c0:	b	46230 <flatcc_json_printer_clear@@Base+0x14ec>
   462c4:	ldr	r0, [fp, #-4]
   462c8:	ldr	r0, [r0, #20]
   462cc:	ldr	r1, [fp, #-8]
   462d0:	ldr	r2, [sp, #12]
   462d4:	bl	14e30 <memcpy@plt>
   462d8:	ldr	r0, [sp, #12]
   462dc:	ldr	r1, [fp, #-4]
   462e0:	ldr	r2, [r1, #20]
   462e4:	add	r0, r2, r0
   462e8:	str	r0, [r1, #20]
   462ec:	mov	sp, fp
   462f0:	pop	{fp, pc}
   462f4:	push	{fp, lr}
   462f8:	mov	fp, sp
   462fc:	sub	sp, sp, #24
   46300:	str	r0, [fp, #-4]
   46304:	str	r1, [fp, #-8]
   46308:	ldr	r0, [fp, #-4]
   4630c:	ldr	r0, [r0, #20]
   46310:	ldr	r1, [fp, #-4]
   46314:	ldr	r1, [r1, #16]
   46318:	cmp	r0, r1
   4631c:	bcc	46340 <flatcc_json_printer_clear@@Base+0x15fc>
   46320:	ldr	r0, [fp, #-4]
   46324:	ldr	r0, [r0, #44]	; 0x2c
   46328:	ldr	r1, [fp, #-4]
   4632c:	str	r0, [sp, #8]
   46330:	mov	r0, r1
   46334:	movw	r1, #0
   46338:	ldr	r2, [sp, #8]
   4633c:	blx	r2
   46340:	ldr	r0, [fp, #-4]
   46344:	ldr	r0, [r0, #16]
   46348:	ldr	r1, [fp, #-4]
   4634c:	ldr	r1, [r1, #20]
   46350:	sub	r0, r0, r1
   46354:	str	r0, [sp, #12]
   46358:	ldr	r0, [fp, #-8]
   4635c:	ldr	r1, [sp, #12]
   46360:	cmp	r0, r1
   46364:	bls	463e0 <flatcc_json_printer_clear@@Base+0x169c>
   46368:	ldr	r0, [fp, #-4]
   4636c:	ldr	r0, [r0, #20]
   46370:	ldr	r2, [sp, #12]
   46374:	movw	r1, #32
   46378:	and	r1, r1, #255	; 0xff
   4637c:	bl	14ec0 <memset@plt>
   46380:	ldr	r0, [sp, #12]
   46384:	ldr	r1, [fp, #-4]
   46388:	ldr	r2, [r1, #20]
   4638c:	add	r0, r2, r0
   46390:	str	r0, [r1, #20]
   46394:	ldr	r0, [sp, #12]
   46398:	ldr	r1, [fp, #-8]
   4639c:	sub	r0, r1, r0
   463a0:	str	r0, [fp, #-8]
   463a4:	ldr	r0, [fp, #-4]
   463a8:	ldr	r0, [r0, #44]	; 0x2c
   463ac:	ldr	r1, [fp, #-4]
   463b0:	str	r0, [sp, #4]
   463b4:	mov	r0, r1
   463b8:	movw	r1, #0
   463bc:	ldr	r2, [sp, #4]
   463c0:	blx	r2
   463c4:	ldr	r0, [fp, #-4]
   463c8:	ldr	r0, [r0, #16]
   463cc:	ldr	r1, [fp, #-4]
   463d0:	ldr	r1, [r1, #20]
   463d4:	sub	r0, r0, r1
   463d8:	str	r0, [sp, #12]
   463dc:	b	46358 <flatcc_json_printer_clear@@Base+0x1614>
   463e0:	ldr	r0, [fp, #-4]
   463e4:	ldr	r0, [r0, #20]
   463e8:	ldr	r2, [fp, #-8]
   463ec:	movw	r1, #32
   463f0:	and	r1, r1, #255	; 0xff
   463f4:	bl	14ec0 <memset@plt>
   463f8:	ldr	r0, [fp, #-8]
   463fc:	ldr	r1, [fp, #-4]
   46400:	ldr	r2, [r1, #20]
   46404:	add	r0, r2, r0
   46408:	str	r0, [r1, #20]
   4640c:	mov	sp, fp
   46410:	pop	{fp, pc}
   46414:	push	{fp, lr}
   46418:	mov	fp, sp
   4641c:	sub	sp, sp, #8
   46420:	str	r0, [sp, #4]
   46424:	str	r1, [sp]
   46428:	ldr	r0, [sp, #4]
   4642c:	ldr	r1, [sp]
   46430:	add	r0, r0, r1
   46434:	bl	46444 <flatcc_json_printer_clear@@Base+0x1700>
   46438:	uxth	r0, r0
   4643c:	mov	sp, fp
   46440:	pop	{fp, pc}
   46444:	push	{fp, lr}
   46448:	mov	fp, sp
   4644c:	sub	sp, sp, #8
   46450:	str	r0, [sp, #4]
   46454:	ldr	r0, [sp, #4]
   46458:	ldrh	r0, [r0]
   4645c:	bl	4646c <flatcc_json_printer_clear@@Base+0x1728>
   46460:	uxth	r0, r0
   46464:	mov	sp, fp
   46468:	pop	{fp, pc}
   4646c:	sub	sp, sp, #4
   46470:	strh	r0, [sp, #2]
   46474:	ldrh	r0, [sp, #2]
   46478:	add	sp, sp, #4
   4647c:	bx	lr
   46480:	sub	sp, sp, #24
   46484:	str	r0, [sp, #20]
   46488:	str	r1, [sp, #16]
   4648c:	ldr	r0, [sp, #20]
   46490:	movw	r1, #43691	; 0xaaab
   46494:	movt	r1, #43690	; 0xaaaa
   46498:	umull	r1, r2, r0, r1
   4649c:	lsr	r2, r2, #1
   464a0:	add	r2, r2, r2, lsl #1
   464a4:	sub	r0, r0, r2
   464a8:	str	r0, [sp, #12]
   464ac:	ldr	r0, [sp, #20]
   464b0:	lsl	r0, r0, #2
   464b4:	movw	r2, #3
   464b8:	udiv	r0, r0, r2
   464bc:	add	r0, r0, #3
   464c0:	mvn	r2, #3
   464c4:	and	r0, r0, r2
   464c8:	str	r0, [sp, #8]
   464cc:	ldr	r0, [sp, #16]
   464d0:	and	r0, r0, #128	; 0x80
   464d4:	str	r0, [sp, #4]
   464d8:	ldr	r0, [sp, #4]
   464dc:	cmp	r0, #0
   464e0:	bne	46530 <flatcc_json_printer_clear@@Base+0x17ec>
   464e4:	ldr	r0, [sp, #12]
   464e8:	cmp	r0, #1
   464ec:	str	r0, [sp]
   464f0:	beq	46518 <flatcc_json_printer_clear@@Base+0x17d4>
   464f4:	b	464f8 <flatcc_json_printer_clear@@Base+0x17b4>
   464f8:	ldr	r0, [sp]
   464fc:	cmp	r0, #2
   46500:	bne	46528 <flatcc_json_printer_clear@@Base+0x17e4>
   46504:	b	46508 <flatcc_json_printer_clear@@Base+0x17c4>
   46508:	ldr	r0, [sp, #8]
   4650c:	sub	r0, r0, #1
   46510:	str	r0, [sp, #8]
   46514:	b	4652c <flatcc_json_printer_clear@@Base+0x17e8>
   46518:	ldr	r0, [sp, #8]
   4651c:	sub	r0, r0, #2
   46520:	str	r0, [sp, #8]
   46524:	b	4652c <flatcc_json_printer_clear@@Base+0x17e8>
   46528:	b	4652c <flatcc_json_printer_clear@@Base+0x17e8>
   4652c:	b	46530 <flatcc_json_printer_clear@@Base+0x17ec>
   46530:	ldr	r0, [sp, #8]
   46534:	add	sp, sp, #24
   46538:	bx	lr
   4653c:	push	{r4, sl, fp, lr}
   46540:	add	fp, sp, #8
   46544:	sub	sp, sp, #52	; 0x34
   46548:	ldr	ip, [fp, #8]
   4654c:	ldr	lr, [pc, #844]	; 468a0 <flatcc_json_printer_clear@@Base+0x1b5c>
   46550:	add	lr, pc, lr
   46554:	ldr	r4, [pc, #840]	; 468a4 <flatcc_json_printer_clear@@Base+0x1b60>
   46558:	add	r4, pc, r4
   4655c:	str	r0, [fp, #-12]
   46560:	str	r1, [fp, #-16]
   46564:	str	r2, [fp, #-20]	; 0xffffffec
   46568:	str	r3, [fp, #-24]	; 0xffffffe8
   4656c:	str	r4, [fp, #-28]	; 0xffffffe4
   46570:	str	lr, [sp, #28]
   46574:	ldr	r0, [fp, #-12]
   46578:	str	r0, [sp, #20]
   4657c:	ldr	r0, [fp, #8]
   46580:	and	r0, r0, #128	; 0x80
   46584:	str	r0, [sp, #16]
   46588:	movw	r0, #0
   4658c:	str	r0, [sp, #12]
   46590:	movw	r1, #3
   46594:	str	r1, [sp, #8]
   46598:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4659c:	cmp	r1, r0
   465a0:	bne	465b0 <flatcc_json_printer_clear@@Base+0x186c>
   465a4:	movw	r0, #2
   465a8:	str	r0, [sp, #8]
   465ac:	b	4684c <flatcc_json_printer_clear@@Base+0x1b08>
   465b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   465b4:	ldr	r0, [r0]
   465b8:	str	r0, [sp, #12]
   465bc:	ldr	r0, [fp, #8]
   465c0:	bic	r0, r0, #224	; 0xe0
   465c4:	str	r0, [fp, #8]
   465c8:	ldr	r0, [fp, #8]
   465cc:	cmp	r0, #0
   465d0:	str	r0, [sp, #4]
   465d4:	beq	465ec <flatcc_json_printer_clear@@Base+0x18a8>
   465d8:	b	465dc <flatcc_json_printer_clear@@Base+0x1898>
   465dc:	ldr	r0, [sp, #4]
   465e0:	cmp	r0, #1
   465e4:	beq	465f8 <flatcc_json_printer_clear@@Base+0x18b4>
   465e8:	b	46604 <flatcc_json_printer_clear@@Base+0x18c0>
   465ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   465f0:	str	r0, [sp, #24]
   465f4:	b	46608 <flatcc_json_printer_clear@@Base+0x18c4>
   465f8:	ldr	r0, [sp, #28]
   465fc:	str	r0, [sp, #24]
   46600:	b	46608 <flatcc_json_printer_clear@@Base+0x18c4>
   46604:	b	4684c <flatcc_json_printer_clear@@Base+0x1b08>
   46608:	movw	r0, #0
   4660c:	str	r0, [sp, #8]
   46610:	ldr	r0, [sp, #12]
   46614:	cmp	r0, #3
   46618:	bcc	466ec <flatcc_json_printer_clear@@Base+0x19a8>
   4661c:	ldr	r0, [sp, #24]
   46620:	ldr	r1, [fp, #-16]
   46624:	ldrb	r1, [r1]
   46628:	asr	r1, r1, #2
   4662c:	add	r0, r0, r1
   46630:	ldrb	r0, [r0]
   46634:	ldr	r1, [fp, #-12]
   46638:	strb	r0, [r1]
   4663c:	ldr	r0, [sp, #24]
   46640:	ldr	r1, [fp, #-16]
   46644:	ldrb	r1, [r1]
   46648:	lsl	r1, r1, #4
   4664c:	and	r1, r1, #48	; 0x30
   46650:	ldr	r2, [fp, #-16]
   46654:	ldrb	r2, [r2, #1]
   46658:	asr	r2, r2, #4
   4665c:	orr	r1, r1, r2
   46660:	add	r0, r0, r1
   46664:	ldrb	r0, [r0]
   46668:	ldr	r1, [fp, #-12]
   4666c:	strb	r0, [r1, #1]
   46670:	ldr	r0, [sp, #24]
   46674:	ldr	r1, [fp, #-16]
   46678:	ldrb	r1, [r1, #1]
   4667c:	lsl	r1, r1, #2
   46680:	and	r1, r1, #60	; 0x3c
   46684:	ldr	r2, [fp, #-16]
   46688:	ldrb	r2, [r2, #2]
   4668c:	asr	r2, r2, #6
   46690:	orr	r1, r1, r2
   46694:	add	r0, r0, r1
   46698:	ldrb	r0, [r0]
   4669c:	ldr	r1, [fp, #-12]
   466a0:	strb	r0, [r1, #2]
   466a4:	ldr	r0, [sp, #24]
   466a8:	ldr	r1, [fp, #-16]
   466ac:	ldrb	r1, [r1, #2]
   466b0:	and	r1, r1, #63	; 0x3f
   466b4:	add	r0, r0, r1
   466b8:	ldrb	r0, [r0]
   466bc:	ldr	r1, [fp, #-12]
   466c0:	strb	r0, [r1, #3]
   466c4:	ldr	r0, [sp, #12]
   466c8:	sub	r0, r0, #3
   466cc:	str	r0, [sp, #12]
   466d0:	ldr	r0, [fp, #-12]
   466d4:	add	r0, r0, #4
   466d8:	str	r0, [fp, #-12]
   466dc:	ldr	r0, [fp, #-16]
   466e0:	add	r0, r0, #3
   466e4:	str	r0, [fp, #-16]
   466e8:	b	46610 <flatcc_json_printer_clear@@Base+0x18cc>
   466ec:	ldr	r0, [sp, #12]
   466f0:	cmp	r0, #1
   466f4:	str	r0, [sp]
   466f8:	beq	467b8 <flatcc_json_printer_clear@@Base+0x1a74>
   466fc:	b	46700 <flatcc_json_printer_clear@@Base+0x19bc>
   46700:	ldr	r0, [sp]
   46704:	cmp	r0, #2
   46708:	bne	4683c <flatcc_json_printer_clear@@Base+0x1af8>
   4670c:	b	46710 <flatcc_json_printer_clear@@Base+0x19cc>
   46710:	ldr	r0, [sp, #24]
   46714:	ldr	r1, [fp, #-16]
   46718:	ldrb	r1, [r1]
   4671c:	asr	r1, r1, #2
   46720:	add	r0, r0, r1
   46724:	ldrb	r0, [r0]
   46728:	ldr	r1, [fp, #-12]
   4672c:	strb	r0, [r1]
   46730:	ldr	r0, [sp, #24]
   46734:	ldr	r1, [fp, #-16]
   46738:	ldrb	r1, [r1]
   4673c:	lsl	r1, r1, #4
   46740:	and	r1, r1, #48	; 0x30
   46744:	ldr	r2, [fp, #-16]
   46748:	ldrb	r2, [r2, #1]
   4674c:	asr	r2, r2, #4
   46750:	orr	r1, r1, r2
   46754:	add	r0, r0, r1
   46758:	ldrb	r0, [r0]
   4675c:	ldr	r1, [fp, #-12]
   46760:	strb	r0, [r1, #1]
   46764:	ldr	r0, [sp, #24]
   46768:	ldr	r1, [fp, #-16]
   4676c:	ldrb	r1, [r1, #1]
   46770:	lsl	r1, r1, #2
   46774:	and	r1, r1, #60	; 0x3c
   46778:	add	r0, r0, r1
   4677c:	ldrb	r0, [r0]
   46780:	ldr	r1, [fp, #-12]
   46784:	strb	r0, [r1, #2]
   46788:	ldr	r0, [fp, #-12]
   4678c:	add	r0, r0, #3
   46790:	str	r0, [fp, #-12]
   46794:	ldr	r0, [sp, #16]
   46798:	cmp	r0, #0
   4679c:	beq	467b4 <flatcc_json_printer_clear@@Base+0x1a70>
   467a0:	ldr	r0, [fp, #-12]
   467a4:	add	r1, r0, #1
   467a8:	str	r1, [fp, #-12]
   467ac:	movw	r1, #61	; 0x3d
   467b0:	strb	r1, [r0]
   467b4:	b	46844 <flatcc_json_printer_clear@@Base+0x1b00>
   467b8:	ldr	r0, [sp, #24]
   467bc:	ldr	r1, [fp, #-16]
   467c0:	ldrb	r1, [r1]
   467c4:	asr	r1, r1, #2
   467c8:	add	r0, r0, r1
   467cc:	ldrb	r0, [r0]
   467d0:	ldr	r1, [fp, #-12]
   467d4:	strb	r0, [r1]
   467d8:	ldr	r0, [sp, #24]
   467dc:	ldr	r1, [fp, #-16]
   467e0:	ldrb	r1, [r1]
   467e4:	lsl	r1, r1, #4
   467e8:	and	r1, r1, #48	; 0x30
   467ec:	add	r0, r0, r1
   467f0:	ldrb	r0, [r0]
   467f4:	ldr	r1, [fp, #-12]
   467f8:	strb	r0, [r1, #1]
   467fc:	ldr	r0, [fp, #-12]
   46800:	add	r0, r0, #2
   46804:	str	r0, [fp, #-12]
   46808:	ldr	r0, [sp, #16]
   4680c:	cmp	r0, #0
   46810:	beq	46838 <flatcc_json_printer_clear@@Base+0x1af4>
   46814:	ldr	r0, [fp, #-12]
   46818:	add	r1, r0, #1
   4681c:	str	r1, [fp, #-12]
   46820:	movw	r1, #61	; 0x3d
   46824:	strb	r1, [r0]
   46828:	ldr	r0, [fp, #-12]
   4682c:	add	r2, r0, #1
   46830:	str	r2, [fp, #-12]
   46834:	strb	r1, [r0]
   46838:	b	46844 <flatcc_json_printer_clear@@Base+0x1b00>
   4683c:	movw	r0, #0
   46840:	str	r0, [sp, #16]
   46844:	movw	r0, #0
   46848:	str	r0, [sp, #12]
   4684c:	ldr	r0, [fp, #-20]	; 0xffffffec
   46850:	movw	r1, #0
   46854:	cmp	r0, r1
   46858:	beq	46870 <flatcc_json_printer_clear@@Base+0x1b2c>
   4685c:	ldr	r0, [fp, #-12]
   46860:	ldr	r1, [sp, #20]
   46864:	sub	r0, r0, r1
   46868:	ldr	r1, [fp, #-20]	; 0xffffffec
   4686c:	str	r0, [r1]
   46870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   46874:	movw	r1, #0
   46878:	cmp	r0, r1
   4687c:	beq	46894 <flatcc_json_printer_clear@@Base+0x1b50>
   46880:	ldr	r0, [sp, #12]
   46884:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46888:	ldr	r2, [r1]
   4688c:	sub	r0, r2, r0
   46890:	str	r0, [r1]
   46894:	ldr	r0, [sp, #8]
   46898:	sub	sp, fp, #8
   4689c:	pop	{r4, sl, fp, pc}
   468a0:	andeq	r7, r0, r2, lsr #11
   468a4:	andeq	r7, r0, r9, asr r5
   468a8:	sub	sp, sp, #4
   468ac:	strb	r0, [sp, #3]
   468b0:	ldrb	r0, [sp, #3]
   468b4:	add	sp, sp, #4
   468b8:	bx	lr
   468bc:	sub	sp, sp, #4
   468c0:	strh	r0, [sp, #2]
   468c4:	ldrh	r0, [sp, #2]
   468c8:	add	sp, sp, #4
   468cc:	bx	lr
   468d0:	sub	sp, sp, #4
   468d4:	str	r0, [sp]
   468d8:	ldr	r0, [sp]
   468dc:	add	sp, sp, #4
   468e0:	bx	lr
   468e4:	sub	sp, sp, #8
   468e8:	str	r0, [sp]
   468ec:	str	r1, [sp, #4]
   468f0:	ldr	r0, [sp]
   468f4:	ldr	r1, [sp, #4]
   468f8:	add	sp, sp, #8
   468fc:	bx	lr
   46900:	sub	sp, sp, #4
   46904:	strb	r0, [sp, #3]
   46908:	ldrsb	r0, [sp, #3]
   4690c:	add	sp, sp, #4
   46910:	bx	lr
   46914:	sub	sp, sp, #4
   46918:	strh	r0, [sp, #2]
   4691c:	ldrsh	r0, [sp, #2]
   46920:	add	sp, sp, #4
   46924:	bx	lr
   46928:	sub	sp, sp, #4
   4692c:	str	r0, [sp]
   46930:	ldr	r0, [sp]
   46934:	add	sp, sp, #4
   46938:	bx	lr
   4693c:	sub	sp, sp, #8
   46940:	str	r0, [sp]
   46944:	str	r1, [sp, #4]
   46948:	ldr	r0, [sp]
   4694c:	ldr	r1, [sp, #4]
   46950:	add	sp, sp, #8
   46954:	bx	lr
   46958:	sub	sp, sp, #4
   4695c:	strb	r0, [sp, #3]
   46960:	ldrb	r0, [sp, #3]
   46964:	add	sp, sp, #4
   46968:	bx	lr
   4696c:	sub	sp, sp, #8
   46970:	vstr	s0, [sp, #4]
   46974:	vldr	s0, [sp, #4]
   46978:	vstr	s0, [sp]
   4697c:	ldr	r0, [sp]
   46980:	str	r0, [sp]
   46984:	vldr	s0, [sp]
   46988:	add	sp, sp, #8
   4698c:	bx	lr
   46990:	sub	sp, sp, #16
   46994:	vstr	d0, [sp, #8]
   46998:	vldr	d16, [sp, #8]
   4699c:	vstr	d16, [sp]
   469a0:	vldr	d0, [sp]
   469a4:	add	sp, sp, #16
   469a8:	bx	lr
   469ac:	sub	sp, sp, #4
   469b0:	str	r0, [sp]
   469b4:	ldr	r0, [sp]
   469b8:	add	sp, sp, #4
   469bc:	bx	lr
   469c0:	sub	sp, sp, #4
   469c4:	strb	r0, [sp, #3]
   469c8:	ldrb	r0, [sp, #3]
   469cc:	add	sp, sp, #4
   469d0:	bx	lr
   469d4:	push	{fp, lr}
   469d8:	mov	fp, sp
   469dc:	sub	sp, sp, #8
   469e0:	str	r0, [sp, #4]
   469e4:	ldr	r0, [sp, #4]
   469e8:	ldr	r0, [r0]
   469ec:	bl	469f8 <flatcc_json_printer_clear@@Base+0x1cb4>
   469f0:	mov	sp, fp
   469f4:	pop	{fp, pc}
   469f8:	sub	sp, sp, #4
   469fc:	str	r0, [sp]
   46a00:	ldr	r0, [sp]
   46a04:	add	sp, sp, #4
   46a08:	bx	lr
   46a0c:	sub	sp, sp, #4
   46a10:	str	r0, [sp]
   46a14:	ldr	r0, [sp]
   46a18:	add	sp, sp, #4
   46a1c:	bx	lr
   46a20:	push	{fp, lr}
   46a24:	mov	fp, sp
   46a28:	sub	sp, sp, #8
   46a2c:	str	r0, [sp, #4]
   46a30:	ldr	r0, [sp, #4]
   46a34:	ldr	r0, [r0]
   46a38:	bl	46a44 <flatcc_json_printer_clear@@Base+0x1d00>
   46a3c:	mov	sp, fp
   46a40:	pop	{fp, pc}
   46a44:	sub	sp, sp, #4
   46a48:	str	r0, [sp]
   46a4c:	ldr	r0, [sp]
   46a50:	add	sp, sp, #4
   46a54:	bx	lr
   46a58:	eor	r1, r1, #-2147483648	; 0x80000000
   46a5c:	b	46a64 <flatcc_json_printer_clear@@Base+0x1d20>
   46a60:	eor	r3, r3, #-2147483648	; 0x80000000
   46a64:	push	{r4, r5, lr}
   46a68:	lsl	r4, r1, #1
   46a6c:	lsl	r5, r3, #1
   46a70:	teq	r4, r5
   46a74:	teqeq	r0, r2
   46a78:	orrsne	ip, r4, r0
   46a7c:	orrsne	ip, r5, r2
   46a80:	mvnsne	ip, r4, asr #21
   46a84:	mvnsne	ip, r5, asr #21
   46a88:	beq	46c74 <flatcc_json_printer_clear@@Base+0x1f30>
   46a8c:	lsr	r4, r4, #21
   46a90:	rsbs	r5, r4, r5, lsr #21
   46a94:	rsblt	r5, r5, #0
   46a98:	ble	46ab8 <flatcc_json_printer_clear@@Base+0x1d74>
   46a9c:	add	r4, r4, r5
   46aa0:	eor	r2, r0, r2
   46aa4:	eor	r3, r1, r3
   46aa8:	eor	r0, r2, r0
   46aac:	eor	r1, r3, r1
   46ab0:	eor	r2, r0, r2
   46ab4:	eor	r3, r1, r3
   46ab8:	cmp	r5, #54	; 0x36
   46abc:	pophi	{r4, r5, pc}
   46ac0:	tst	r1, #-2147483648	; 0x80000000
   46ac4:	lsl	r1, r1, #12
   46ac8:	mov	ip, #1048576	; 0x100000
   46acc:	orr	r1, ip, r1, lsr #12
   46ad0:	beq	46adc <flatcc_json_printer_clear@@Base+0x1d98>
   46ad4:	rsbs	r0, r0, #0
   46ad8:	rsc	r1, r1, #0
   46adc:	tst	r3, #-2147483648	; 0x80000000
   46ae0:	lsl	r3, r3, #12
   46ae4:	orr	r3, ip, r3, lsr #12
   46ae8:	beq	46af4 <flatcc_json_printer_clear@@Base+0x1db0>
   46aec:	rsbs	r2, r2, #0
   46af0:	rsc	r3, r3, #0
   46af4:	teq	r4, r5
   46af8:	beq	46c5c <flatcc_json_printer_clear@@Base+0x1f18>
   46afc:	sub	r4, r4, #1
   46b00:	rsbs	lr, r5, #32
   46b04:	blt	46b20 <flatcc_json_printer_clear@@Base+0x1ddc>
   46b08:	lsl	ip, r2, lr
   46b0c:	adds	r0, r0, r2, lsr r5
   46b10:	adc	r1, r1, #0
   46b14:	adds	r0, r0, r3, lsl lr
   46b18:	adcs	r1, r1, r3, asr r5
   46b1c:	b	46b3c <flatcc_json_printer_clear@@Base+0x1df8>
   46b20:	sub	r5, r5, #32
   46b24:	add	lr, lr, #32
   46b28:	cmp	r2, #1
   46b2c:	lsl	ip, r3, lr
   46b30:	orrcs	ip, ip, #2
   46b34:	adds	r0, r0, r3, asr r5
   46b38:	adcs	r1, r1, r3, asr #31
   46b3c:	and	r5, r1, #-2147483648	; 0x80000000
   46b40:	bpl	46b50 <flatcc_json_printer_clear@@Base+0x1e0c>
   46b44:	rsbs	ip, ip, #0
   46b48:	rscs	r0, r0, #0
   46b4c:	rsc	r1, r1, #0
   46b50:	cmp	r1, #1048576	; 0x100000
   46b54:	bcc	46b94 <flatcc_json_printer_clear@@Base+0x1e50>
   46b58:	cmp	r1, #2097152	; 0x200000
   46b5c:	bcc	46b7c <flatcc_json_printer_clear@@Base+0x1e38>
   46b60:	lsrs	r1, r1, #1
   46b64:	rrxs	r0, r0
   46b68:	rrx	ip, ip
   46b6c:	add	r4, r4, #1
   46b70:	lsl	r2, r4, #21
   46b74:	cmn	r2, #4194304	; 0x400000
   46b78:	bcs	46cd4 <flatcc_json_printer_clear@@Base+0x1f90>
   46b7c:	cmp	ip, #-2147483648	; 0x80000000
   46b80:	lsrseq	ip, r0, #1
   46b84:	adcs	r0, r0, #0
   46b88:	adc	r1, r1, r4, lsl #20
   46b8c:	orr	r1, r1, r5
   46b90:	pop	{r4, r5, pc}
   46b94:	lsls	ip, ip, #1
   46b98:	adcs	r0, r0, r0
   46b9c:	adc	r1, r1, r1
   46ba0:	tst	r1, #1048576	; 0x100000
   46ba4:	sub	r4, r4, #1
   46ba8:	bne	46b7c <flatcc_json_printer_clear@@Base+0x1e38>
   46bac:	teq	r1, #0
   46bb0:	moveq	r1, r0
   46bb4:	moveq	r0, #0
   46bb8:	clz	r3, r1
   46bbc:	addeq	r3, r3, #32
   46bc0:	sub	r3, r3, #11
   46bc4:	subs	r2, r3, #32
   46bc8:	bge	46bec <flatcc_json_printer_clear@@Base+0x1ea8>
   46bcc:	adds	r2, r2, #12
   46bd0:	ble	46be8 <flatcc_json_printer_clear@@Base+0x1ea4>
   46bd4:	add	ip, r2, #20
   46bd8:	rsb	r2, r2, #12
   46bdc:	lsl	r0, r1, ip
   46be0:	lsr	r1, r1, r2
   46be4:	b	46bfc <flatcc_json_printer_clear@@Base+0x1eb8>
   46be8:	add	r2, r2, #20
   46bec:	rsble	ip, r2, #32
   46bf0:	lsl	r1, r1, r2
   46bf4:	orrle	r1, r1, r0, lsr ip
   46bf8:	lslle	r0, r0, r2
   46bfc:	subs	r4, r4, r3
   46c00:	addge	r1, r1, r4, lsl #20
   46c04:	orrge	r1, r1, r5
   46c08:	popge	{r4, r5, pc}
   46c0c:	mvn	r4, r4
   46c10:	subs	r4, r4, #31
   46c14:	bge	46c50 <flatcc_json_printer_clear@@Base+0x1f0c>
   46c18:	adds	r4, r4, #12
   46c1c:	bgt	46c38 <flatcc_json_printer_clear@@Base+0x1ef4>
   46c20:	add	r4, r4, #20
   46c24:	rsb	r2, r4, #32
   46c28:	lsr	r0, r0, r4
   46c2c:	orr	r0, r0, r1, lsl r2
   46c30:	orr	r1, r5, r1, lsr r4
   46c34:	pop	{r4, r5, pc}
   46c38:	rsb	r4, r4, #12
   46c3c:	rsb	r2, r4, #32
   46c40:	lsr	r0, r0, r2
   46c44:	orr	r0, r0, r1, lsl r4
   46c48:	mov	r1, r5
   46c4c:	pop	{r4, r5, pc}
   46c50:	lsr	r0, r1, r4
   46c54:	mov	r1, r5
   46c58:	pop	{r4, r5, pc}
   46c5c:	teq	r4, #0
   46c60:	eor	r3, r3, #1048576	; 0x100000
   46c64:	eoreq	r1, r1, #1048576	; 0x100000
   46c68:	addeq	r4, r4, #1
   46c6c:	subne	r5, r5, #1
   46c70:	b	46afc <flatcc_json_printer_clear@@Base+0x1db8>
   46c74:	mvns	ip, r4, asr #21
   46c78:	mvnsne	ip, r5, asr #21
   46c7c:	beq	46ce4 <flatcc_json_printer_clear@@Base+0x1fa0>
   46c80:	teq	r4, r5
   46c84:	teqeq	r0, r2
   46c88:	beq	46c9c <flatcc_json_printer_clear@@Base+0x1f58>
   46c8c:	orrs	ip, r4, r0
   46c90:	moveq	r1, r3
   46c94:	moveq	r0, r2
   46c98:	pop	{r4, r5, pc}
   46c9c:	teq	r1, r3
   46ca0:	movne	r1, #0
   46ca4:	movne	r0, #0
   46ca8:	popne	{r4, r5, pc}
   46cac:	lsrs	ip, r4, #21
   46cb0:	bne	46cc4 <flatcc_json_printer_clear@@Base+0x1f80>
   46cb4:	lsls	r0, r0, #1
   46cb8:	adcs	r1, r1, r1
   46cbc:	orrcs	r1, r1, #-2147483648	; 0x80000000
   46cc0:	pop	{r4, r5, pc}
   46cc4:	adds	r4, r4, #4194304	; 0x400000
   46cc8:	addcc	r1, r1, #1048576	; 0x100000
   46ccc:	popcc	{r4, r5, pc}
   46cd0:	and	r5, r1, #-2147483648	; 0x80000000
   46cd4:	orr	r1, r5, #2130706432	; 0x7f000000
   46cd8:	orr	r1, r1, #15728640	; 0xf00000
   46cdc:	mov	r0, #0
   46ce0:	pop	{r4, r5, pc}
   46ce4:	mvns	ip, r4, asr #21
   46ce8:	movne	r1, r3
   46cec:	movne	r0, r2
   46cf0:	mvnseq	ip, r5, asr #21
   46cf4:	movne	r3, r1
   46cf8:	movne	r2, r0
   46cfc:	orrs	r4, r0, r1, lsl #12
   46d00:	orrseq	r5, r2, r3, lsl #12
   46d04:	teqeq	r1, r3
   46d08:	orrne	r1, r1, #524288	; 0x80000
   46d0c:	pop	{r4, r5, pc}
   46d10:	teq	r0, #0
   46d14:	moveq	r1, #0
   46d18:	bxeq	lr
   46d1c:	push	{r4, r5, lr}
   46d20:	mov	r4, #1024	; 0x400
   46d24:	add	r4, r4, #50	; 0x32
   46d28:	mov	r5, #0
   46d2c:	mov	r1, #0
   46d30:	b	46bac <flatcc_json_printer_clear@@Base+0x1e68>
   46d34:	teq	r0, #0
   46d38:	moveq	r1, #0
   46d3c:	bxeq	lr
   46d40:	push	{r4, r5, lr}
   46d44:	mov	r4, #1024	; 0x400
   46d48:	add	r4, r4, #50	; 0x32
   46d4c:	ands	r5, r0, #-2147483648	; 0x80000000
   46d50:	rsbmi	r0, r0, #0
   46d54:	mov	r1, #0
   46d58:	b	46bac <flatcc_json_printer_clear@@Base+0x1e68>
   46d5c:	lsls	r2, r0, #1
   46d60:	asr	r1, r2, #3
   46d64:	rrx	r1, r1
   46d68:	lsl	r0, r2, #28
   46d6c:	andsne	r3, r2, #-16777216	; 0xff000000
   46d70:	teqne	r3, #-16777216	; 0xff000000
   46d74:	eorne	r1, r1, #939524096	; 0x38000000
   46d78:	bxne	lr
   46d7c:	bics	r2, r2, #-16777216	; 0xff000000
   46d80:	bxeq	lr
   46d84:	teq	r3, #-16777216	; 0xff000000
   46d88:	orreq	r1, r1, #524288	; 0x80000
   46d8c:	bxeq	lr
   46d90:	push	{r4, r5, lr}
   46d94:	mov	r4, #896	; 0x380
   46d98:	and	r5, r1, #-2147483648	; 0x80000000
   46d9c:	bic	r1, r1, #-2147483648	; 0x80000000
   46da0:	b	46bac <flatcc_json_printer_clear@@Base+0x1e68>
   46da4:	orrs	r2, r0, r1
   46da8:	bxeq	lr
   46dac:	push	{r4, r5, lr}
   46db0:	mov	r5, #0
   46db4:	b	46dd4 <flatcc_json_printer_clear@@Base+0x2090>
   46db8:	orrs	r2, r0, r1
   46dbc:	bxeq	lr
   46dc0:	push	{r4, r5, lr}
   46dc4:	ands	r5, r1, #-2147483648	; 0x80000000
   46dc8:	bpl	46dd4 <flatcc_json_printer_clear@@Base+0x2090>
   46dcc:	rsbs	r0, r0, #0
   46dd0:	rsc	r1, r1, #0
   46dd4:	mov	r4, #1024	; 0x400
   46dd8:	add	r4, r4, #50	; 0x32
   46ddc:	lsrs	ip, r1, #22
   46de0:	beq	46b50 <flatcc_json_printer_clear@@Base+0x1e0c>
   46de4:	mov	r2, #3
   46de8:	lsrs	ip, ip, #3
   46dec:	addne	r2, r2, #3
   46df0:	lsrs	ip, ip, #3
   46df4:	addne	r2, r2, #3
   46df8:	add	r2, r2, ip, lsr #3
   46dfc:	rsb	r3, r2, #32
   46e00:	lsl	ip, r0, r3
   46e04:	lsr	r0, r0, r2
   46e08:	orr	r0, r0, r1, lsl r3
   46e0c:	lsr	r1, r1, r2
   46e10:	add	r4, r4, r2
   46e14:	b	46b50 <flatcc_json_printer_clear@@Base+0x1e0c>
   46e18:	eor	r0, r0, #-2147483648	; 0x80000000
   46e1c:	b	46e24 <flatcc_json_printer_clear@@Base+0x20e0>
   46e20:	eor	r1, r1, #-2147483648	; 0x80000000
   46e24:	lsls	r2, r0, #1
   46e28:	lslsne	r3, r1, #1
   46e2c:	teqne	r2, r3
   46e30:	mvnsne	ip, r2, asr #24
   46e34:	mvnsne	ip, r3, asr #24
   46e38:	beq	46f30 <flatcc_json_printer_clear@@Base+0x21ec>
   46e3c:	lsr	r2, r2, #24
   46e40:	rsbs	r3, r2, r3, lsr #24
   46e44:	addgt	r2, r2, r3
   46e48:	eorgt	r1, r0, r1
   46e4c:	eorgt	r0, r1, r0
   46e50:	eorgt	r1, r0, r1
   46e54:	rsblt	r3, r3, #0
   46e58:	cmp	r3, #25
   46e5c:	bxhi	lr
   46e60:	tst	r0, #-2147483648	; 0x80000000
   46e64:	orr	r0, r0, #8388608	; 0x800000
   46e68:	bic	r0, r0, #-16777216	; 0xff000000
   46e6c:	rsbne	r0, r0, #0
   46e70:	tst	r1, #-2147483648	; 0x80000000
   46e74:	orr	r1, r1, #8388608	; 0x800000
   46e78:	bic	r1, r1, #-16777216	; 0xff000000
   46e7c:	rsbne	r1, r1, #0
   46e80:	teq	r2, r3
   46e84:	beq	46f18 <flatcc_json_printer_clear@@Base+0x21d4>
   46e88:	sub	r2, r2, #1
   46e8c:	adds	r0, r0, r1, asr r3
   46e90:	rsb	r3, r3, #32
   46e94:	lsl	r1, r1, r3
   46e98:	and	r3, r0, #-2147483648	; 0x80000000
   46e9c:	bpl	46ea8 <flatcc_json_printer_clear@@Base+0x2164>
   46ea0:	rsbs	r1, r1, #0
   46ea4:	rsc	r0, r0, #0
   46ea8:	cmp	r0, #8388608	; 0x800000
   46eac:	bcc	46ee0 <flatcc_json_printer_clear@@Base+0x219c>
   46eb0:	cmp	r0, #16777216	; 0x1000000
   46eb4:	bcc	46ecc <flatcc_json_printer_clear@@Base+0x2188>
   46eb8:	lsrs	r0, r0, #1
   46ebc:	rrx	r1, r1
   46ec0:	add	r2, r2, #1
   46ec4:	cmp	r2, #254	; 0xfe
   46ec8:	bcs	46f84 <flatcc_json_printer_clear@@Base+0x2240>
   46ecc:	cmp	r1, #-2147483648	; 0x80000000
   46ed0:	adc	r0, r0, r2, lsl #23
   46ed4:	biceq	r0, r0, #1
   46ed8:	orr	r0, r0, r3
   46edc:	bx	lr
   46ee0:	lsls	r1, r1, #1
   46ee4:	adc	r0, r0, r0
   46ee8:	tst	r0, #8388608	; 0x800000
   46eec:	sub	r2, r2, #1
   46ef0:	bne	46ecc <flatcc_json_printer_clear@@Base+0x2188>
   46ef4:	clz	ip, r0
   46ef8:	sub	ip, ip, #8
   46efc:	subs	r2, r2, ip
   46f00:	lsl	r0, r0, ip
   46f04:	addge	r0, r0, r2, lsl #23
   46f08:	rsblt	r2, r2, #0
   46f0c:	orrge	r0, r0, r3
   46f10:	orrlt	r0, r3, r0, lsr r2
   46f14:	bx	lr
   46f18:	teq	r2, #0
   46f1c:	eor	r1, r1, #8388608	; 0x800000
   46f20:	eoreq	r0, r0, #8388608	; 0x800000
   46f24:	addeq	r2, r2, #1
   46f28:	subne	r3, r3, #1
   46f2c:	b	46e88 <flatcc_json_printer_clear@@Base+0x2144>
   46f30:	lsl	r3, r1, #1
   46f34:	mvns	ip, r2, asr #24
   46f38:	mvnsne	ip, r3, asr #24
   46f3c:	beq	46f90 <flatcc_json_printer_clear@@Base+0x224c>
   46f40:	teq	r2, r3
   46f44:	beq	46f54 <flatcc_json_printer_clear@@Base+0x2210>
   46f48:	teq	r2, #0
   46f4c:	moveq	r0, r1
   46f50:	bx	lr
   46f54:	teq	r0, r1
   46f58:	movne	r0, #0
   46f5c:	bxne	lr
   46f60:	tst	r2, #-16777216	; 0xff000000
   46f64:	bne	46f74 <flatcc_json_printer_clear@@Base+0x2230>
   46f68:	lsls	r0, r0, #1
   46f6c:	orrcs	r0, r0, #-2147483648	; 0x80000000
   46f70:	bx	lr
   46f74:	adds	r2, r2, #33554432	; 0x2000000
   46f78:	addcc	r0, r0, #8388608	; 0x800000
   46f7c:	bxcc	lr
   46f80:	and	r3, r0, #-2147483648	; 0x80000000
   46f84:	orr	r0, r3, #2130706432	; 0x7f000000
   46f88:	orr	r0, r0, #8388608	; 0x800000
   46f8c:	bx	lr
   46f90:	mvns	r2, r2, asr #24
   46f94:	movne	r0, r1
   46f98:	mvnseq	r3, r3, asr #24
   46f9c:	movne	r1, r0
   46fa0:	lsls	r2, r0, #9
   46fa4:	lslseq	r3, r1, #9
   46fa8:	teqeq	r0, r1
   46fac:	orrne	r0, r0, #4194304	; 0x400000
   46fb0:	bx	lr
   46fb4:	mov	r3, #0
   46fb8:	b	46fc4 <flatcc_json_printer_clear@@Base+0x2280>
   46fbc:	ands	r3, r0, #-2147483648	; 0x80000000
   46fc0:	rsbmi	r0, r0, #0
   46fc4:	movs	ip, r0
   46fc8:	bxeq	lr
   46fcc:	orr	r3, r3, #1258291200	; 0x4b000000
   46fd0:	mov	r1, r0
   46fd4:	mov	r0, #0
   46fd8:	b	4701c <flatcc_json_printer_clear@@Base+0x22d8>
   46fdc:	orrs	r2, r0, r1
   46fe0:	bxeq	lr
   46fe4:	mov	r3, #0
   46fe8:	b	47004 <flatcc_json_printer_clear@@Base+0x22c0>
   46fec:	orrs	r2, r0, r1
   46ff0:	bxeq	lr
   46ff4:	ands	r3, r1, #-2147483648	; 0x80000000
   46ff8:	bpl	47004 <flatcc_json_printer_clear@@Base+0x22c0>
   46ffc:	rsbs	r0, r0, #0
   47000:	rsc	r1, r1, #0
   47004:	movs	ip, r1
   47008:	moveq	ip, r0
   4700c:	moveq	r1, r0
   47010:	moveq	r0, #0
   47014:	orr	r3, r3, #1526726656	; 0x5b000000
   47018:	subeq	r3, r3, #268435456	; 0x10000000
   4701c:	sub	r3, r3, #8388608	; 0x800000
   47020:	clz	r2, ip
   47024:	subs	r2, r2, #8
   47028:	sub	r3, r3, r2, lsl #23
   4702c:	blt	4704c <flatcc_json_printer_clear@@Base+0x2308>
   47030:	add	r3, r3, r1, lsl r2
   47034:	lsl	ip, r0, r2
   47038:	rsb	r2, r2, #32
   4703c:	cmp	ip, #-2147483648	; 0x80000000
   47040:	adc	r0, r3, r0, lsr r2
   47044:	biceq	r0, r0, #1
   47048:	bx	lr
   4704c:	add	r2, r2, #32
   47050:	lsl	ip, r1, r2
   47054:	rsb	r2, r2, #32
   47058:	orrs	r0, r0, ip, lsl #1
   4705c:	adc	r0, r3, r1, lsr r2
   47060:	biceq	r0, r0, ip, lsr #31
   47064:	bx	lr
   47068:	cmp	r3, #0
   4706c:	cmpeq	r2, #0
   47070:	bne	47088 <flatcc_json_printer_clear@@Base+0x2344>
   47074:	cmp	r1, #0
   47078:	cmpeq	r0, #0
   4707c:	mvnne	r1, #0
   47080:	mvnne	r0, #0
   47084:	b	470a4 <flatcc_json_printer_clear@@Base+0x2360>
   47088:	sub	sp, sp, #8
   4708c:	push	{sp, lr}
   47090:	bl	470b4 <flatcc_json_printer_clear@@Base+0x2370>
   47094:	ldr	lr, [sp, #4]
   47098:	add	sp, sp, #8
   4709c:	pop	{r2, r3}
   470a0:	bx	lr
   470a4:	push	{r1, lr}
   470a8:	mov	r0, #8
   470ac:	bl	14e00 <raise@plt>
   470b0:	pop	{r1, pc}
   470b4:	cmp	r1, r3
   470b8:	cmpeq	r0, r2
   470bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   470c0:	mov	r4, r0
   470c4:	movcc	r0, #0
   470c8:	mov	r5, r1
   470cc:	ldr	lr, [sp, #36]	; 0x24
   470d0:	movcc	r1, r0
   470d4:	bcc	471d0 <flatcc_json_printer_clear@@Base+0x248c>
   470d8:	cmp	r3, #0
   470dc:	clzeq	ip, r2
   470e0:	clzne	ip, r3
   470e4:	addeq	ip, ip, #32
   470e8:	cmp	r5, #0
   470ec:	clzeq	r1, r4
   470f0:	addeq	r1, r1, #32
   470f4:	clzne	r1, r5
   470f8:	sub	ip, ip, r1
   470fc:	sub	sl, ip, #32
   47100:	lsl	r9, r3, ip
   47104:	rsb	fp, ip, #32
   47108:	orr	r9, r9, r2, lsl sl
   4710c:	orr	r9, r9, r2, lsr fp
   47110:	lsl	r8, r2, ip
   47114:	cmp	r5, r9
   47118:	cmpeq	r4, r8
   4711c:	movcc	r0, #0
   47120:	movcc	r1, r0
   47124:	bcc	47140 <flatcc_json_printer_clear@@Base+0x23fc>
   47128:	mov	r0, #1
   4712c:	subs	r4, r4, r8
   47130:	lsl	r1, r0, sl
   47134:	orr	r1, r1, r0, lsr fp
   47138:	lsl	r0, r0, ip
   4713c:	sbc	r5, r5, r9
   47140:	cmp	ip, #0
   47144:	beq	471d0 <flatcc_json_printer_clear@@Base+0x248c>
   47148:	lsr	r6, r8, #1
   4714c:	orr	r6, r6, r9, lsl #31
   47150:	lsr	r7, r9, #1
   47154:	mov	r2, ip
   47158:	b	4717c <flatcc_json_printer_clear@@Base+0x2438>
   4715c:	subs	r3, r4, r6
   47160:	sbc	r8, r5, r7
   47164:	adds	r3, r3, r3
   47168:	adc	r8, r8, r8
   4716c:	adds	r4, r3, #1
   47170:	adc	r5, r8, #0
   47174:	subs	r2, r2, #1
   47178:	beq	47198 <flatcc_json_printer_clear@@Base+0x2454>
   4717c:	cmp	r5, r7
   47180:	cmpeq	r4, r6
   47184:	bcs	4715c <flatcc_json_printer_clear@@Base+0x2418>
   47188:	adds	r4, r4, r4
   4718c:	adc	r5, r5, r5
   47190:	subs	r2, r2, #1
   47194:	bne	4717c <flatcc_json_printer_clear@@Base+0x2438>
   47198:	lsr	r3, r4, ip
   4719c:	orr	r3, r3, r5, lsl fp
   471a0:	lsr	r2, r5, ip
   471a4:	orr	r3, r3, r5, lsr sl
   471a8:	adds	r0, r0, r4
   471ac:	mov	r4, r3
   471b0:	lsl	r3, r2, ip
   471b4:	orr	r3, r3, r4, lsl sl
   471b8:	lsl	ip, r4, ip
   471bc:	orr	r3, r3, r4, lsr fp
   471c0:	adc	r1, r1, r5
   471c4:	subs	r0, r0, ip
   471c8:	mov	r5, r2
   471cc:	sbc	r1, r1, r3
   471d0:	cmp	lr, #0
   471d4:	strdne	r4, [lr]
   471d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000471dc <__libc_csu_init@@Base>:
   471dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   471e0:	mov	r7, r0
   471e4:	ldr	r6, [pc, #72]	; 47234 <__libc_csu_init@@Base+0x58>
   471e8:	ldr	r5, [pc, #72]	; 47238 <__libc_csu_init@@Base+0x5c>
   471ec:	add	r6, pc, r6
   471f0:	add	r5, pc, r5
   471f4:	sub	r6, r6, r5
   471f8:	mov	r8, r1
   471fc:	mov	r9, r2
   47200:	bl	14de0 <raise@plt-0x20>
   47204:	asrs	r6, r6, #2
   47208:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   4720c:	mov	r4, #0
   47210:	add	r4, r4, #1
   47214:	ldr	r3, [r5], #4
   47218:	mov	r2, r9
   4721c:	mov	r1, r8
   47220:	mov	r0, r7
   47224:	blx	r3
   47228:	cmp	r6, r4
   4722c:	bne	47210 <__libc_csu_init@@Base+0x34>
   47230:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   47234:	andeq	r7, r1, r8, ror #25
   47238:	andeq	r7, r1, r0, ror #25

0004723c <__libc_csu_fini@@Base>:
   4723c:	bx	lr

Disassembly of section .fini:

00047240 <.fini>:
   47240:	push	{r3, lr}
   47244:	pop	{r3, pc}
