
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

000114d8 <.init>:
   114d8:	push	{r3, lr}
   114dc:	bl	1193c <sprintf@plt+0x48>
   114e0:	pop	{r3, pc}

Disassembly of section .plt:

000114e4 <sigemptyset@plt-0x14>:
   114e4:	push	{lr}		; (str lr, [sp, #-4]!)
   114e8:	ldr	lr, [pc, #4]	; 114f4 <sigemptyset@plt-0x4>
   114ec:	add	lr, pc, lr
   114f0:	ldr	pc, [lr, #8]!
   114f4:	andeq	r8, r1, ip, lsl #22

000114f8 <sigemptyset@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #24, 20	; 0x18000
   11500:	ldr	pc, [ip, #2828]!	; 0xb0c

00011504 <strerror@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #24, 20	; 0x18000
   1150c:	ldr	pc, [ip, #2820]!	; 0xb04

00011510 <rb_helper_loop@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #24, 20	; 0x18000
   11518:	ldr	pc, [ip, #2812]!	; 0xafc

0001151c <abort@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #24, 20	; 0x18000
   11524:	ldr	pc, [ip, #2804]!	; 0xaf4

00011528 <rb_event_addish@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #24, 20	; 0x18000
   11530:	ldr	pc, [ip, #2796]!	; 0xaec

00011534 <getsockname@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #24, 20	; 0x18000
   1153c:	ldr	pc, [ip, #2788]!	; 0xae4

00011540 <rb_ignore_errno@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #24, 20	; 0x18000
   11548:	ldr	pc, [ip, #2780]!	; 0xadc

0001154c <rb_connect_tcp_ssl@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #24, 20	; 0x18000
   11554:	ldr	pc, [ip, #2772]!	; 0xad4

00011558 <rb_connect_tcp@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #24, 20	; 0x18000
   11560:	ldr	pc, [ip, #2764]!	; 0xacc

00011564 <__libc_start_main@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #24, 20	; 0x18000
   1156c:	ldr	pc, [ip, #2756]!	; 0xac4

00011570 <rb_event_delete@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #24, 20	; 0x18000
   11578:	ldr	pc, [ip, #2748]!	; 0xabc

0001157c <rb_setselect@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #24, 20	; 0x18000
   11584:	ldr	pc, [ip, #2740]!	; 0xab4

00011588 <rb_get_fd@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #24, 20	; 0x18000
   11590:	ldr	pc, [ip, #2732]!	; 0xaac

00011594 <__gmon_start__@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #24, 20	; 0x18000
   1159c:	ldr	pc, [ip, #2724]!	; 0xaa4

000115a0 <vsnprintf@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #24, 20	; 0x18000
   115a8:	ldr	pc, [ip, #2716]!	; 0xa9c

000115ac <rb_socket@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #24, 20	; 0x18000
   115b4:	ldr	pc, [ip, #2708]!	; 0xa94

000115b8 <fclose@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #24, 20	; 0x18000
   115c0:	ldr	pc, [ip, #2700]!	; 0xa8c

000115c4 <rb_strtok_r@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #24, 20	; 0x18000
   115cc:	ldr	pc, [ip, #2692]!	; 0xa84

000115d0 <strchr@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #24, 20	; 0x18000
   115d8:	ldr	pc, [ip, #2684]!	; 0xa7c

000115dc <rb_dictionary_foreach_cur@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #24, 20	; 0x18000
   115e4:	ldr	pc, [ip, #2676]!	; 0xa74

000115e8 <strcasecmp@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #24, 20	; 0x18000
   115f0:	ldr	pc, [ip, #2668]!	; 0xa6c

000115f4 <calloc@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #24, 20	; 0x18000
   115fc:	ldr	pc, [ip, #2660]!	; 0xa64

00011600 <rb_helper_child@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #24, 20	; 0x18000
   11608:	ldr	pc, [ip, #2652]!	; 0xa5c

0001160c <sendto@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #24, 20	; 0x18000
   11614:	ldr	pc, [ip, #2644]!	; 0xa54

00011618 <fopen@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #24, 20	; 0x18000
   11620:	ldr	pc, [ip, #2636]!	; 0xa4c

00011624 <memset@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #24, 20	; 0x18000
   1162c:	ldr	pc, [ip, #2628]!	; 0xa44

00011630 <freeaddrinfo@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #24, 20	; 0x18000
   11638:	ldr	pc, [ip, #2620]!	; 0xa3c

0001163c <strrchr@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #24, 20	; 0x18000
   11644:	ldr	pc, [ip, #2612]!	; 0xa34

00011648 <rb_write@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #24, 20	; 0x18000
   11650:	ldr	pc, [ip, #2604]!	; 0xa2c

00011654 <__assert_fail@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #24, 20	; 0x18000
   1165c:	ldr	pc, [ip, #2596]!	; 0xa24

00011660 <fgets_unlocked@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #24, 20	; 0x18000
   11668:	ldr	pc, [ip, #2588]!	; 0xa1c

0001166c <rb_strlcpy@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #24, 20	; 0x18000
   11674:	ldr	pc, [ip, #2580]!	; 0xa14

00011678 <strtoull@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #24, 20	; 0x18000
   11680:	ldr	pc, [ip, #2572]!	; 0xa0c

00011684 <rb_dictionary_foreach_next@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #24, 20	; 0x18000
   1168c:	ldr	pc, [ip, #2564]!	; 0xa04

00011690 <free@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #24, 20	; 0x18000
   11698:	ldr	pc, [ip, #2556]!	; 0x9fc

0001169c <rb_string_to_array@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #24, 20	; 0x18000
   116a4:	ldr	pc, [ip, #2548]!	; 0x9f4

000116a8 <rb_read@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #24, 20	; 0x18000
   116b0:	ldr	pc, [ip, #2540]!	; 0x9ec

000116b4 <rb_strcasecmp@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #24, 20	; 0x18000
   116bc:	ldr	pc, [ip, #2532]!	; 0x9e4

000116c0 <getaddrinfo@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #24, 20	; 0x18000
   116c8:	ldr	pc, [ip, #2524]!	; 0x9dc

000116cc <rb_dictionary_foreach_start@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #24, 20	; 0x18000
   116d4:	ldr	pc, [ip, #2516]!	; 0x9d4

000116d8 <rb_inet_pton_sock@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #24, 20	; 0x18000
   116e0:	ldr	pc, [ip, #2508]!	; 0x9cc

000116e4 <strlen@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #24, 20	; 0x18000
   116ec:	ldr	pc, [ip, #2500]!	; 0x9c4

000116f0 <rb_current_time@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #24, 20	; 0x18000
   116f8:	ldr	pc, [ip, #2492]!	; 0x9bc

000116fc <rb_dictionary_delete@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #24, 20	; 0x18000
   11704:	ldr	pc, [ip, #2484]!	; 0x9b4

00011708 <memcpy@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #24, 20	; 0x18000
   11710:	ldr	pc, [ip, #2476]!	; 0x9ac

00011714 <rb_free_rb_dlink_node@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #24, 20	; 0x18000
   1171c:	ldr	pc, [ip, #2468]!	; 0x9a4

00011720 <bcmp@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #24, 20	; 0x18000
   11728:	ldr	pc, [ip, #2460]!	; 0x99c

0001172c <rb_close@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #24, 20	; 0x18000
   11734:	ldr	pc, [ip, #2452]!	; 0x994

00011738 <strtol@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #24, 20	; 0x18000
   11740:	ldr	pc, [ip, #2444]!	; 0x98c

00011744 <sigaddset@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #24, 20	; 0x18000
   1174c:	ldr	pc, [ip, #2436]!	; 0x984

00011750 <strcpy@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #24, 20	; 0x18000
   11758:	ldr	pc, [ip, #2428]!	; 0x97c

0001175c <atoi@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #24, 20	; 0x18000
   11764:	ldr	pc, [ip, #2420]!	; 0x974

00011768 <rb_dictionary_destroy@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #24, 20	; 0x18000
   11770:	ldr	pc, [ip, #2412]!	; 0x96c

00011774 <bind@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #24, 20	; 0x18000
   1177c:	ldr	pc, [ip, #2404]!	; 0x964

00011780 <rb_lib_log@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #24, 20	; 0x18000
   11788:	ldr	pc, [ip, #2396]!	; 0x95c

0001178c <strstr@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #24, 20	; 0x18000
   11794:	ldr	pc, [ip, #2388]!	; 0x954

00011798 <fwrite@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #24, 20	; 0x18000
   117a0:	ldr	pc, [ip, #2380]!	; 0x94c

000117a4 <rb_init_prng@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #24, 20	; 0x18000
   117ac:	ldr	pc, [ip, #2372]!	; 0x944

000117b0 <rb_dictionary_retrieve@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #24, 20	; 0x18000
   117b8:	ldr	pc, [ip, #2364]!	; 0x93c

000117bc <rb_outofmemory@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #24, 20	; 0x18000
   117c4:	ldr	pc, [ip, #2356]!	; 0x934

000117c8 <__ctype_b_loc@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #24, 20	; 0x18000
   117d0:	ldr	pc, [ip, #2348]!	; 0x92c

000117d4 <rb_dictionary_add@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #24, 20	; 0x18000
   117dc:	ldr	pc, [ip, #2340]!	; 0x924

000117e0 <rb_set_time@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #24, 20	; 0x18000
   117e8:	ldr	pc, [ip, #2332]!	; 0x91c

000117ec <malloc@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #24, 20	; 0x18000
   117f4:	ldr	pc, [ip, #2324]!	; 0x914

000117f8 <sigaction@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #24, 20	; 0x18000
   11800:	ldr	pc, [ip, #2316]!	; 0x90c

00011804 <rb_helper_read@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #24, 20	; 0x18000
   1180c:	ldr	pc, [ip, #2308]!	; 0x904

00011810 <rb_inet_ntop_sock@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #24, 20	; 0x18000
   11818:	ldr	pc, [ip, #2300]!	; 0x8fc

0001181c <rb_dictionary_find@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #24, 20	; 0x18000
   11824:	ldr	pc, [ip, #2292]!	; 0x8f4

00011828 <rb_dictionary_create@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #24, 20	; 0x18000
   11830:	ldr	pc, [ip, #2284]!	; 0x8ec

00011834 <memmove@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #24, 20	; 0x18000
   1183c:	ldr	pc, [ip, #2276]!	; 0x8e4

00011840 <rb_accept_tcp@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #24, 20	; 0x18000
   11848:	ldr	pc, [ip, #2268]!	; 0x8dc

0001184c <rb_helper_write@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #24, 20	; 0x18000
   11854:	ldr	pc, [ip, #2260]!	; 0x8d4

00011858 <rb_event_add@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #24, 20	; 0x18000
   11860:	ldr	pc, [ip, #2252]!	; 0x8cc

00011864 <rb_get_random@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #24, 20	; 0x18000
   1186c:	ldr	pc, [ip, #2244]!	; 0x8c4

00011870 <rb_make_rb_dlink_node@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #24, 20	; 0x18000
   11878:	ldr	pc, [ip, #2236]!	; 0x8bc

0001187c <snprintf@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #24, 20	; 0x18000
   11884:	ldr	pc, [ip, #2228]!	; 0x8b4

00011888 <rb_listen@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #24, 20	; 0x18000
   11890:	ldr	pc, [ip, #2220]!	; 0x8ac

00011894 <strncmp@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #24, 20	; 0x18000
   1189c:	ldr	pc, [ip, #2212]!	; 0x8a4

000118a0 <recvfrom@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #24, 20	; 0x18000
   118a8:	ldr	pc, [ip, #2204]!	; 0x89c

000118ac <setsockopt@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #24, 20	; 0x18000
   118b4:	ldr	pc, [ip, #2196]!	; 0x894

000118b8 <strpbrk@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #24, 20	; 0x18000
   118c0:	ldr	pc, [ip, #2188]!	; 0x88c

000118c4 <memchr@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #24, 20	; 0x18000
   118cc:	ldr	pc, [ip, #2180]!	; 0x884

000118d0 <strcmp@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #24, 20	; 0x18000
   118d8:	ldr	pc, [ip, #2172]!	; 0x87c

000118dc <exit@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #24, 20	; 0x18000
   118e4:	ldr	pc, [ip, #2164]!	; 0x874

000118e8 <__errno_location@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #24, 20	; 0x18000
   118f0:	ldr	pc, [ip, #2156]!	; 0x86c

000118f4 <sprintf@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #24, 20	; 0x18000
   118fc:	ldr	pc, [ip, #2148]!	; 0x864

Disassembly of section .text:

00011900 <.text>:
   11900:	mov	fp, #0
   11904:	mov	lr, #0
   11908:	pop	{r1}		; (ldr r1, [sp], #4)
   1190c:	mov	r2, sp
   11910:	push	{r2}		; (str r2, [sp, #-4]!)
   11914:	push	{r0}		; (str r0, [sp, #-4]!)
   11918:	ldr	ip, [pc, #16]	; 11930 <sprintf@plt+0x3c>
   1191c:	push	{ip}		; (str ip, [sp, #-4]!)
   11920:	ldr	r0, [pc, #12]	; 11934 <sprintf@plt+0x40>
   11924:	ldr	r3, [pc, #12]	; 11938 <sprintf@plt+0x44>
   11928:	bl	11564 <__libc_start_main@plt>
   1192c:	bl	1151c <abort@plt>
   11930:	andeq	r8, r1, r0, asr r7
   11934:	andeq	r1, r1, r8, ror fp
   11938:	strdeq	r8, [r1], -r0
   1193c:	ldr	r3, [pc, #20]	; 11958 <sprintf@plt+0x64>
   11940:	ldr	r2, [pc, #20]	; 1195c <sprintf@plt+0x68>
   11944:	add	r3, pc, r3
   11948:	ldr	r2, [r3, r2]
   1194c:	cmp	r2, #0
   11950:	bxeq	lr
   11954:	b	11594 <__gmon_start__@plt>
   11958:			; <UNDEFINED> instruction: 0x000186b4
   1195c:	andeq	r0, r0, r4, ror #2
   11960:	ldr	r0, [pc, #24]	; 11980 <sprintf@plt+0x8c>
   11964:	ldr	r3, [pc, #24]	; 11984 <sprintf@plt+0x90>
   11968:	cmp	r3, r0
   1196c:	bxeq	lr
   11970:	ldr	r3, [pc, #16]	; 11988 <sprintf@plt+0x94>
   11974:	cmp	r3, #0
   11978:	bxeq	lr
   1197c:	bx	r3
   11980:	andeq	sl, r2, ip, asr #30
   11984:	andeq	sl, r2, ip, asr #30
   11988:	andeq	r0, r0, r0
   1198c:	ldr	r0, [pc, #36]	; 119b8 <sprintf@plt+0xc4>
   11990:	ldr	r1, [pc, #36]	; 119bc <sprintf@plt+0xc8>
   11994:	sub	r1, r1, r0
   11998:	asr	r1, r1, #2
   1199c:	add	r1, r1, r1, lsr #31
   119a0:	asrs	r1, r1, #1
   119a4:	bxeq	lr
   119a8:	ldr	r3, [pc, #16]	; 119c0 <sprintf@plt+0xcc>
   119ac:	cmp	r3, #0
   119b0:	bxeq	lr
   119b4:	bx	r3
   119b8:	andeq	sl, r2, ip, asr #30
   119bc:	andeq	sl, r2, ip, asr #30
   119c0:	andeq	r0, r0, r0
   119c4:	push	{r4, lr}
   119c8:	ldr	r4, [pc, #24]	; 119e8 <sprintf@plt+0xf4>
   119cc:	ldrb	r3, [r4]
   119d0:	cmp	r3, #0
   119d4:	popne	{r4, pc}
   119d8:	bl	11960 <sprintf@plt+0x6c>
   119dc:	mov	r3, #1
   119e0:	strb	r3, [r4]
   119e4:	pop	{r4, pc}
   119e8:	andeq	sl, r2, r4, asr pc
   119ec:	b	1198c <sprintf@plt+0x98>
   119f0:	push	{r4, r5, fp, lr}
   119f4:	add	fp, sp, #8
   119f8:	mov	r4, r0
   119fc:	cmp	r0, #1
   11a00:	bgt	11a1c <sprintf@plt+0x128>
   11a04:	movw	r1, #34851	; 0x8823
   11a08:	movt	r1, #1
   11a0c:	mov	r0, #67	; 0x43
   11a10:	mov	r2, r4
   11a14:	pop	{r4, r5, fp, lr}
   11a18:	b	12430 <sprintf@plt+0xb3c>
   11a1c:	mov	r5, r1
   11a20:	ldr	r1, [r1, #4]
   11a24:	movw	r0, #61824	; 0xf180
   11a28:	movt	r0, #2
   11a2c:	ldr	r0, [r0]
   11a30:	bl	117b0 <rb_dictionary_retrieve@plt>
   11a34:	cmp	r0, #0
   11a38:	beq	11a64 <sprintf@plt+0x170>
   11a3c:	sub	r1, r4, #2
   11a40:	ldr	r2, [r0, #4]
   11a44:	cmp	r1, r2
   11a48:	bge	11a7c <sprintf@plt+0x188>
   11a4c:	movw	r1, #34974	; 0x889e
   11a50:	movt	r1, #1
   11a54:	mov	r0, #67	; 0x43
   11a58:	mov	r3, r4
   11a5c:	pop	{r4, r5, fp, lr}
   11a60:	b	12430 <sprintf@plt+0xb3c>
   11a64:	ldr	r2, [r5, #4]
   11a68:	movw	r1, #34929	; 0x8871
   11a6c:	movt	r1, #1
   11a70:	mov	r0, #67	; 0x43
   11a74:	pop	{r4, r5, fp, lr}
   11a78:	b	12430 <sprintf@plt+0xb3c>
   11a7c:	ldr	r3, [r5, #4]
   11a80:	ldr	ip, [r0, #8]
   11a84:	add	r2, r5, #8
   11a88:	mov	r0, r3
   11a8c:	pop	{r4, r5, fp, lr}
   11a90:	bx	ip
   11a94:	push	{r4, r5, fp, lr}
   11a98:	add	fp, sp, #8
   11a9c:	cmp	r0, #2
   11aa0:	bgt	11ad8 <sprintf@plt+0x1e4>
   11aa4:	mov	r4, #0
   11aa8:	movw	r5, #43376	; 0xa970
   11aac:	movt	r5, #2
   11ab0:	b	11ac0 <sprintf@plt+0x1cc>
   11ab4:	add	r4, r4, #1
   11ab8:	cmp	r4, #256	; 0x100
   11abc:	beq	11afc <sprintf@plt+0x208>
   11ac0:	ldr	r1, [r5, r4, lsl #2]
   11ac4:	cmp	r1, #0
   11ac8:	beq	11ab4 <sprintf@plt+0x1c0>
   11acc:	mov	r0, #0
   11ad0:	blx	r1
   11ad4:	b	11ab4 <sprintf@plt+0x1c0>
   11ad8:	ldr	r0, [r1, #4]
   11adc:	ldrb	r0, [r0]
   11ae0:	movw	r1, #43376	; 0xa970
   11ae4:	movt	r1, #2
   11ae8:	ldr	r1, [r1, r0, lsl #2]
   11aec:	cmp	r1, #0
   11af0:	popeq	{r4, r5, fp, pc}
   11af4:	pop	{r4, r5, fp, lr}
   11af8:	bx	r1
   11afc:	pop	{r4, r5, fp, pc}
   11b00:	push	{r4, sl, fp, lr}
   11b04:	add	fp, sp, #8
   11b08:	cmp	r0, #2
   11b0c:	bgt	11b20 <sprintf@plt+0x22c>
   11b10:	mov	r2, r0
   11b14:	movw	r1, #34726	; 0x87a6
   11b18:	movt	r1, #1
   11b1c:	b	11b48 <sprintf@plt+0x254>
   11b20:	mov	r4, r1
   11b24:	ldr	r0, [r1, #4]
   11b28:	mov	r1, #0
   11b2c:	mov	r2, #16
   11b30:	bl	11678 <strtoull@plt>
   11b34:	cmp	r1, #0
   11b38:	beq	11b54 <sprintf@plt+0x260>
   11b3c:	ldr	r2, [r4, #4]
   11b40:	movw	r1, #34801	; 0x87f1
   11b44:	movt	r1, #1
   11b48:	mov	r0, #67	; 0x43
   11b4c:	pop	{r4, sl, fp, lr}
   11b50:	b	12430 <sprintf@plt+0xb3c>
   11b54:	ldr	r1, [r4, #8]
   11b58:	ldrb	r1, [r1]
   11b5c:	movw	r2, #42352	; 0xa570
   11b60:	movt	r2, #2
   11b64:	ldr	r2, [r2, r1, lsl #2]
   11b68:	cmp	r2, #0
   11b6c:	popeq	{r4, sl, fp, pc}
   11b70:	pop	{r4, sl, fp, lr}
   11b74:	bx	r2
   11b78:	push	{fp, lr}
   11b7c:	mov	fp, sp
   11b80:	sub	sp, sp, #16
   11b84:	bl	11c40 <sprintf@plt+0x34c>
   11b88:	mov	r0, #256	; 0x100
   11b8c:	mov	r1, #0
   11b90:	str	r1, [sp]
   11b94:	str	r0, [sp, #4]
   11b98:	str	r0, [sp, #8]
   11b9c:	str	r0, [sp, #12]
   11ba0:	movw	r0, #7408	; 0x1cf0
   11ba4:	movt	r0, #1
   11ba8:	movw	r1, #7556	; 0x1d84
   11bac:	movt	r1, #1
   11bb0:	mov	r2, #0
   11bb4:	mov	r3, #0
   11bb8:	bl	11600 <rb_helper_child@plt>
   11bbc:	movw	r4, #44888	; 0xaf58
   11bc0:	movt	r4, #2
   11bc4:	str	r0, [r4]
   11bc8:	cmp	r0, #0
   11bcc:	bne	11bf8 <sprintf@plt+0x304>
   11bd0:	movw	r0, #44880	; 0xaf50
   11bd4:	movt	r0, #2
   11bd8:	ldr	r3, [r0]
   11bdc:	movw	r0, #34656	; 0x8760
   11be0:	movt	r0, #1
   11be4:	mov	r1, #46	; 0x2e
   11be8:	mov	r2, #1
   11bec:	bl	11798 <fwrite@plt>
   11bf0:	mov	r0, #1
   11bf4:	bl	118dc <exit@plt>
   11bf8:	bl	117e0 <rb_set_time@plt>
   11bfc:	bl	11c40 <sprintf@plt+0x34c>
   11c00:	movw	r0, #34703	; 0x878f
   11c04:	movt	r0, #1
   11c08:	movw	r1, #5812	; 0x16b4
   11c0c:	movt	r1, #1
   11c10:	bl	11828 <rb_dictionary_create@plt>
   11c14:	movw	r1, #61824	; 0xf180
   11c18:	movt	r1, #2
   11c1c:	str	r0, [r1]
   11c20:	bl	13198 <sprintf@plt+0x18a4>
   11c24:	bl	1258c <sprintf@plt+0xc98>
   11c28:	mov	r0, #0
   11c2c:	mov	r1, #1
   11c30:	bl	117a4 <rb_init_prng@plt>
   11c34:	ldr	r0, [r4]
   11c38:	mov	r1, #0
   11c3c:	bl	11510 <rb_helper_loop@plt>
   11c40:	push	{r4, r5, fp, lr}
   11c44:	add	fp, sp, #8
   11c48:	sub	sp, sp, #144	; 0x90
   11c4c:	mov	r0, #1
   11c50:	str	r0, [sp, #4]
   11c54:	mov	r0, #0
   11c58:	str	r0, [sp, #136]	; 0x88
   11c5c:	add	r4, sp, #4
   11c60:	add	r5, r4, #4
   11c64:	mov	r0, r5
   11c68:	bl	114f8 <sigemptyset@plt>
   11c6c:	mov	r0, r5
   11c70:	mov	r1, #13
   11c74:	bl	11744 <sigaddset@plt>
   11c78:	mov	r0, r5
   11c7c:	mov	r1, #14
   11c80:	bl	11744 <sigaddset@plt>
   11c84:	mov	r0, r5
   11c88:	mov	r1, #5
   11c8c:	bl	11744 <sigaddset@plt>
   11c90:	mov	r0, r5
   11c94:	mov	r1, #28
   11c98:	bl	11744 <sigaddset@plt>
   11c9c:	mov	r0, #28
   11ca0:	mov	r1, r4
   11ca4:	mov	r2, #0
   11ca8:	bl	117f8 <sigaction@plt>
   11cac:	mov	r0, #13
   11cb0:	mov	r1, r4
   11cb4:	mov	r2, #0
   11cb8:	bl	117f8 <sigaction@plt>
   11cbc:	mov	r0, #5
   11cc0:	mov	r1, r4
   11cc4:	mov	r2, #0
   11cc8:	bl	117f8 <sigaction@plt>
   11ccc:	movw	r0, #7572	; 0x1d94
   11cd0:	movt	r0, #1
   11cd4:	str	r0, [sp, #4]
   11cd8:	mov	r0, #14
   11cdc:	mov	r1, r4
   11ce0:	mov	r2, #0
   11ce4:	bl	117f8 <sigaction@plt>
   11ce8:	sub	sp, fp, #8
   11cec:	pop	{r4, r5, fp, pc}
   11cf0:	push	{r4, r5, r6, r7, fp, lr}
   11cf4:	add	fp, sp, #16
   11cf8:	mov	r4, r0
   11cfc:	movw	r1, #44936	; 0xaf88
   11d00:	movt	r1, #2
   11d04:	mov	r2, #16384	; 0x4000
   11d08:	bl	11804 <rb_helper_read@plt>
   11d0c:	cmp	r0, #1
   11d10:	blt	11d80 <sprintf@plt+0x48c>
   11d14:	movw	r5, #44936	; 0xaf88
   11d18:	movt	r5, #2
   11d1c:	movw	r6, #44892	; 0xaf5c
   11d20:	movt	r6, #2
   11d24:	movw	r7, #41328	; 0xa170
   11d28:	movt	r7, #2
   11d2c:	b	11d48 <sprintf@plt+0x454>
   11d30:	mov	r0, r4
   11d34:	mov	r1, r5
   11d38:	mov	r2, #16384	; 0x4000
   11d3c:	bl	11804 <rb_helper_read@plt>
   11d40:	cmp	r0, #0
   11d44:	ble	11d80 <sprintf@plt+0x48c>
   11d48:	mov	r0, r5
   11d4c:	mov	r1, r6
   11d50:	mov	r2, #10
   11d54:	bl	1169c <rb_string_to_array@plt>
   11d58:	cmp	r0, #1
   11d5c:	blt	11d30 <sprintf@plt+0x43c>
   11d60:	ldr	r1, [r6]
   11d64:	ldrb	r1, [r1]
   11d68:	ldr	r2, [r7, r1, lsl #2]
   11d6c:	cmp	r2, #0
   11d70:	beq	11d30 <sprintf@plt+0x43c>
   11d74:	mov	r1, r6
   11d78:	blx	r2
   11d7c:	b	11d30 <sprintf@plt+0x43c>
   11d80:	pop	{r4, r5, r6, r7, fp, pc}
   11d84:	push	{fp, lr}
   11d88:	mov	fp, sp
   11d8c:	mov	r0, #1
   11d90:	bl	118dc <exit@plt>
   11d94:	bx	lr
   11d98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11d9c:	add	fp, sp, #24
   11da0:	mov	r6, r3
   11da4:	mov	r7, r2
   11da8:	mov	r5, r1
   11dac:	mov	r8, r0
   11db0:	bl	11e3c <sprintf@plt+0x548>
   11db4:	mov	r4, r0
   11db8:	cmp	r5, #2
   11dbc:	beq	11dd4 <sprintf@plt+0x4e0>
   11dc0:	cmp	r5, #10
   11dc4:	bne	11e28 <sprintf@plt+0x534>
   11dc8:	mov	r2, #28
   11dcc:	mov	r0, #54	; 0x36
   11dd0:	b	11ddc <sprintf@plt+0x4e8>
   11dd4:	mov	r2, #1
   11dd8:	mov	r0, #52	; 0x34
   11ddc:	str	r0, [r4, #8]
   11de0:	movw	r5, #61320	; 0xef88
   11de4:	movt	r5, #2
   11de8:	ldm	r5, {r1, r3}
   11dec:	adds	r0, r1, #1
   11df0:	adc	r9, r3, #0
   11df4:	stm	r5, {r0, r9}
   11df8:	add	r0, r4, #144	; 0x90
   11dfc:	stm	r0, {r1, r3, r7}
   11e00:	str	r6, [r4, #156]	; 0x9c
   11e04:	movw	r0, #7784	; 0x1e68
   11e08:	movt	r0, #1
   11e0c:	str	r0, [r4, #4]
   11e10:	str	r4, [r4]
   11e14:	mov	r0, r8
   11e18:	mov	r1, r4
   11e1c:	bl	13298 <sprintf@plt+0x19a4>
   11e20:	mov	r0, r4
   11e24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e28:	mov	r0, r4
   11e2c:	bl	11e5c <sprintf@plt+0x568>
   11e30:	mov	r4, #0
   11e34:	mov	r0, r4
   11e38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e3c:	push	{fp, lr}
   11e40:	mov	fp, sp
   11e44:	mov	r0, #1
   11e48:	mov	r1, #160	; 0xa0
   11e4c:	bl	115f4 <calloc@plt>
   11e50:	cmp	r0, #0
   11e54:	popne	{fp, pc}
   11e58:	bl	117bc <rb_outofmemory@plt>
   11e5c:	cmp	r0, #0
   11e60:	bxeq	lr
   11e64:	b	11690 <free@plt>
   11e68:	push	{r4, r5, fp, lr}
   11e6c:	add	fp, sp, #8
   11e70:	sub	sp, sp, #56	; 0x38
   11e74:	mov	r4, r0
   11e78:	mov	r0, sp
   11e7c:	vmov.i32	q8, #0	; 0x00000000
   11e80:	add	r2, r0, #33	; 0x21
   11e84:	vst1.8	{d16-d17}, [r2]
   11e88:	add	r2, r0, #17
   11e8c:	vst1.8	{d16-d17}, [r2]
   11e90:	orr	r0, r0, #1
   11e94:	vst1.8	{d16-d17}, [r0]
   11e98:	mov	r0, #0
   11e9c:	str	r0, [sp, #49]	; 0x31
   11ea0:	mov	r0, #42	; 0x2a
   11ea4:	strb	r0, [sp]
   11ea8:	cmp	r4, #0
   11eac:	beq	11f74 <sprintf@plt+0x680>
   11eb0:	cmp	r1, #0
   11eb4:	beq	11f3c <sprintf@plt+0x648>
   11eb8:	ldr	r2, [r4, #8]
   11ebc:	cmp	r2, #54	; 0x36
   11ec0:	beq	11ef0 <sprintf@plt+0x5fc>
   11ec4:	cmp	r2, #52	; 0x34
   11ec8:	bne	11f8c <sprintf@plt+0x698>
   11ecc:	ldrh	r0, [r1, #4]!
   11ed0:	cmp	r0, #2
   11ed4:	bne	11f3c <sprintf@plt+0x648>
   11ed8:	mov	r2, sp
   11edc:	mov	r0, r1
   11ee0:	mov	r1, r2
   11ee4:	mov	r2, #53	; 0x35
   11ee8:	bl	11810 <rb_inet_ntop_sock@plt>
   11eec:	b	11f3c <sprintf@plt+0x648>
   11ef0:	ldrh	r0, [r1, #4]!
   11ef4:	cmp	r0, #10
   11ef8:	bne	11f3c <sprintf@plt+0x648>
   11efc:	mov	r5, sp
   11f00:	mov	r0, r1
   11f04:	mov	r1, r5
   11f08:	mov	r2, #53	; 0x35
   11f0c:	bl	11810 <rb_inet_ntop_sock@plt>
   11f10:	ldrb	r0, [sp]
   11f14:	cmp	r0, #58	; 0x3a
   11f18:	bne	11f3c <sprintf@plt+0x648>
   11f1c:	mov	r0, r5
   11f20:	bl	116e4 <strlen@plt>
   11f24:	mov	r2, r0
   11f28:	orr	r0, r5, #1
   11f2c:	mov	r1, r5
   11f30:	bl	11834 <memmove@plt>
   11f34:	mov	r0, #48	; 0x30
   11f38:	strb	r0, [sp]
   11f3c:	ldr	r5, [r4, #152]	; 0x98
   11f40:	cmp	r5, #0
   11f44:	beq	11f64 <sprintf@plt+0x670>
   11f48:	ldrb	r0, [sp]
   11f4c:	subs	r1, r0, #42	; 0x2a
   11f50:	movwne	r1, #1
   11f54:	ldr	r2, [r4, #8]
   11f58:	ldr	r3, [r4, #156]	; 0x9c
   11f5c:	mov	r0, sp
   11f60:	blx	r5
   11f64:	mov	r0, r4
   11f68:	bl	11e5c <sprintf@plt+0x568>
   11f6c:	sub	sp, fp, #8
   11f70:	pop	{r4, r5, fp, pc}
   11f74:	movw	r1, #35181	; 0x896d
   11f78:	movt	r1, #1
   11f7c:	mov	r0, #67	; 0x43
   11f80:	bl	12430 <sprintf@plt+0xb3c>
   11f84:	mov	r0, #2
   11f88:	bl	118dc <exit@plt>
   11f8c:	movw	r1, #35225	; 0x8999
   11f90:	movt	r1, #1
   11f94:	mov	r0, #67	; 0x43
   11f98:	bl	12430 <sprintf@plt+0xb3c>
   11f9c:	mov	r0, #2
   11fa0:	bl	118dc <exit@plt>
   11fa4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11fa8:	add	fp, sp, #24
   11fac:	mov	r8, r2
   11fb0:	mov	r6, r1
   11fb4:	mov	r5, r0
   11fb8:	bl	11e3c <sprintf@plt+0x548>
   11fbc:	mov	r4, r0
   11fc0:	add	r7, r0, #12
   11fc4:	mov	r0, r5
   11fc8:	mov	r1, r7
   11fcc:	bl	116d8 <rb_inet_pton_sock@plt>
   11fd0:	cmp	r0, #0
   11fd4:	beq	11ff4 <sprintf@plt+0x700>
   11fd8:	ldrh	r0, [r7]
   11fdc:	cmp	r0, #2
   11fe0:	beq	12008 <sprintf@plt+0x714>
   11fe4:	cmp	r0, #10
   11fe8:	bne	11ff4 <sprintf@plt+0x700>
   11fec:	mov	r0, #83	; 0x53
   11ff0:	b	1200c <sprintf@plt+0x718>
   11ff4:	mov	r0, r4
   11ff8:	bl	11e5c <sprintf@plt+0x568>
   11ffc:	mov	r4, #0
   12000:	mov	r0, r4
   12004:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12008:	mov	r0, #82	; 0x52
   1200c:	str	r0, [r4, #8]
   12010:	movw	r0, #61320	; 0xef88
   12014:	movt	r0, #2
   12018:	ldrd	r2, [r0]
   1201c:	adds	r1, r2, #1
   12020:	adc	r5, r3, #0
   12024:	stm	r0, {r1, r5}
   12028:	add	r0, r4, #144	; 0x90
   1202c:	stm	r0, {r2, r3, r6, r8}
   12030:	movw	r0, #8276	; 0x2054
   12034:	movt	r0, #1
   12038:	str	r0, [r4, #4]
   1203c:	str	r4, [r4]
   12040:	mov	r0, r7
   12044:	mov	r1, r4
   12048:	bl	133c8 <sprintf@plt+0x1ad4>
   1204c:	mov	r0, r4
   12050:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12054:	push	{r4, r5, r6, sl, fp, lr}
   12058:	add	fp, sp, #16
   1205c:	cmp	r0, #0
   12060:	beq	120f0 <sprintf@plt+0x7fc>
   12064:	mov	r6, r1
   12068:	mov	r4, r0
   1206c:	mov	r5, #0
   12070:	cmp	r1, #0
   12074:	beq	120bc <sprintf@plt+0x7c8>
   12078:	ldr	r2, [r4, #8]
   1207c:	cmp	r2, #83	; 0x53
   12080:	beq	120a0 <sprintf@plt+0x7ac>
   12084:	cmp	r2, #82	; 0x52
   12088:	bne	12108 <sprintf@plt+0x814>
   1208c:	ldr	r0, [r6, #8]
   12090:	ldr	r1, [r4, #16]
   12094:	cmp	r1, r0
   12098:	ldreq	r5, [r6]
   1209c:	b	120bc <sprintf@plt+0x7c8>
   120a0:	add	r0, r4, #20
   120a4:	add	r1, r6, #12
   120a8:	mov	r2, #16
   120ac:	bl	11720 <bcmp@plt>
   120b0:	cmp	r0, #0
   120b4:	bne	120bc <sprintf@plt+0x7c8>
   120b8:	ldr	r5, [r6]
   120bc:	ldr	r6, [r4, #152]	; 0x98
   120c0:	cmp	r6, #0
   120c4:	beq	120e4 <sprintf@plt+0x7f0>
   120c8:	ldr	r2, [r4, #8]
   120cc:	ldr	r3, [r4, #156]	; 0x9c
   120d0:	cmp	r5, #0
   120d4:	mov	r1, r5
   120d8:	movwne	r1, #1
   120dc:	mov	r0, r5
   120e0:	blx	r6
   120e4:	mov	r0, r4
   120e8:	pop	{r4, r5, r6, sl, fp, lr}
   120ec:	b	11e5c <sprintf@plt+0x568>
   120f0:	movw	r1, #35276	; 0x89cc
   120f4:	movt	r1, #1
   120f8:	mov	r0, #67	; 0x43
   120fc:	bl	12430 <sprintf@plt+0xb3c>
   12100:	mov	r0, #2
   12104:	bl	118dc <exit@plt>
   12108:	movw	r1, #35326	; 0x89fe
   1210c:	movt	r1, #1
   12110:	mov	r0, #67	; 0x43
   12114:	bl	12430 <sprintf@plt+0xb3c>
   12118:	mov	r0, #2
   1211c:	bl	118dc <exit@plt>
   12120:	mov	r1, #0
   12124:	str	r1, [r0, #152]	; 0x98
   12128:	str	r1, [r0, #156]	; 0x9c
   1212c:	bx	lr
   12130:	push	{r4, sl, fp, lr}
   12134:	add	fp, sp, #8
   12138:	mov	r4, r1
   1213c:	ldr	r0, [r1, #4]
   12140:	bl	121d4 <sprintf@plt+0x8e0>
   12144:	mov	r3, r0
   12148:	ldr	r1, [r4, #8]
   1214c:	ldr	r0, [r4, #12]
   12150:	ldrb	r4, [r1]
   12154:	sub	r1, r4, #82	; 0x52
   12158:	cmp	r1, #2
   1215c:	bcc	12188 <sprintf@plt+0x894>
   12160:	mov	r1, #2
   12164:	cmp	r4, #52	; 0x34
   12168:	beq	12178 <sprintf@plt+0x884>
   1216c:	cmp	r4, #54	; 0x36
   12170:	bne	121b8 <sprintf@plt+0x8c4>
   12174:	mov	r1, #10
   12178:	movw	r2, #8708	; 0x2204
   1217c:	movt	r2, #1
   12180:	bl	11d98 <sprintf@plt+0x4a4>
   12184:	b	12198 <sprintf@plt+0x8a4>
   12188:	movw	r1, #8708	; 0x2204
   1218c:	movt	r1, #1
   12190:	mov	r2, r3
   12194:	bl	11fa4 <sprintf@plt+0x6b0>
   12198:	cmp	r0, #0
   1219c:	popne	{r4, sl, fp, pc}
   121a0:	mov	r0, #0
   121a4:	mov	r1, #0
   121a8:	mov	r2, r4
   121ac:	mov	r3, #0
   121b0:	pop	{r4, sl, fp, lr}
   121b4:	b	12204 <sprintf@plt+0x910>
   121b8:	movw	r1, #35053	; 0x88ed
   121bc:	movt	r1, #1
   121c0:	mov	r0, #67	; 0x43
   121c4:	mov	r2, r4
   121c8:	bl	12430 <sprintf@plt+0xb3c>
   121cc:	mov	r0, #2
   121d0:	bl	118dc <exit@plt>
   121d4:	push	{r4, sl, fp, lr}
   121d8:	add	fp, sp, #8
   121dc:	mov	r4, r0
   121e0:	bl	116e4 <strlen@plt>
   121e4:	add	r0, r0, #1
   121e8:	bl	117ec <malloc@plt>
   121ec:	cmp	r0, #0
   121f0:	beq	12200 <sprintf@plt+0x90c>
   121f4:	mov	r1, r4
   121f8:	pop	{r4, sl, fp, lr}
   121fc:	b	11750 <strcpy@plt>
   12200:	bl	117bc <rb_outofmemory@plt>
   12204:	push	{r4, sl, fp, lr}
   12208:	add	fp, sp, #8
   1220c:	sub	sp, sp, #8
   12210:	cmp	r2, #0
   12214:	movne	r4, r3
   12218:	cmpne	r3, #0
   1221c:	bne	12238 <sprintf@plt+0x944>
   12220:	movw	r1, #35383	; 0x8a37
   12224:	movt	r1, #1
   12228:	mov	r0, #67	; 0x43
   1222c:	bl	12430 <sprintf@plt+0xb3c>
   12230:	mov	r0, #2
   12234:	bl	118dc <exit@plt>
   12238:	mov	r3, r2
   1223c:	movw	r2, #44888	; 0xaf58
   12240:	movt	r2, #2
   12244:	ldr	r2, [r2]
   12248:	cmp	r0, #0
   1224c:	cmpne	r1, #0
   12250:	bne	12260 <sprintf@plt+0x96c>
   12254:	movw	r1, #35426	; 0x8a62
   12258:	movt	r1, #1
   1225c:	b	1226c <sprintf@plt+0x978>
   12260:	str	r0, [sp]
   12264:	movw	r1, #35438	; 0x8a6e
   12268:	movt	r1, #1
   1226c:	mov	r0, r2
   12270:	mov	r2, r4
   12274:	bl	1184c <rb_helper_write@plt>
   12278:	mov	r0, r4
   1227c:	sub	sp, fp, #8
   12280:	pop	{r4, sl, fp, lr}
   12284:	b	11e5c <sprintf@plt+0x568>
   12288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1228c:	add	fp, sp, #28
   12290:	sub	sp, sp, #612	; 0x264
   12294:	mov	r4, r1
   12298:	mov	r5, r0
   1229c:	movw	r8, #61416	; 0xefe8
   122a0:	movt	r8, #2
   122a4:	ldr	r0, [r8]
   122a8:	cmp	r0, #0
   122ac:	beq	1239c <sprintf@plt+0xaa8>
   122b0:	ldr	r0, [r8]
   122b4:	cmp	r0, #1
   122b8:	blt	12354 <sprintf@plt+0xa60>
   122bc:	str	r5, [sp, #4]
   122c0:	str	r4, [sp, #8]
   122c4:	mov	r9, #0
   122c8:	movw	r6, #62120	; 0xf2a8
   122cc:	movt	r6, #2
   122d0:	add	r7, sp, #15
   122d4:	movw	r4, #35177	; 0x8969
   122d8:	movt	r4, #1
   122dc:	mov	sl, #0
   122e0:	mov	r0, r6
   122e4:	mov	r1, r7
   122e8:	mov	r2, #53	; 0x35
   122ec:	bl	11810 <rb_inet_ntop_sock@plt>
   122f0:	ldrb	r0, [sp, #15]
   122f4:	cmp	r0, #0
   122f8:	beq	12374 <sprintf@plt+0xa80>
   122fc:	mov	r0, r7
   12300:	bl	116e4 <strlen@plt>
   12304:	mov	r5, r0
   12308:	add	r0, sp, #68	; 0x44
   1230c:	add	r0, r0, r9
   12310:	rsb	r1, r9, #540	; 0x21c
   12314:	mov	r2, r4
   12318:	mov	r3, r7
   1231c:	bl	1187c <snprintf@plt>
   12320:	add	r0, r9, r5
   12324:	add	r9, r0, #1
   12328:	add	r6, r6, #128	; 0x80
   1232c:	add	sl, sl, #1
   12330:	ldr	r1, [r8]
   12334:	cmp	sl, r1
   12338:	blt	122e0 <sprintf@plt+0x9ec>
   1233c:	cmp	r9, #0
   12340:	ldr	r4, [sp, #8]
   12344:	ldr	r5, [sp, #4]
   12348:	movne	r1, #0
   1234c:	addne	r2, sp, #68	; 0x44
   12350:	strbne	r1, [r2, r0]
   12354:	movw	r2, #39147	; 0x98eb
   12358:	movt	r2, #1
   1235c:	add	r3, sp, #68	; 0x44
   12360:	mov	r0, r5
   12364:	mov	r1, r4
   12368:	bl	1249c <sprintf@plt+0xba8>
   1236c:	sub	sp, fp, #28
   12370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12374:	movw	r1, #35138	; 0x8942
   12378:	movt	r1, #1
   1237c:	mov	r0, #67	; 0x43
   12380:	bl	12430 <sprintf@plt+0xb3c>
   12384:	movw	r2, #35159	; 0x8957
   12388:	movt	r2, #1
   1238c:	ldmib	sp, {r0, r1}
   12390:	bl	12504 <sprintf@plt+0xc10>
   12394:	mov	r0, #2
   12398:	bl	118dc <exit@plt>
   1239c:	movw	r1, #35102	; 0x891e
   123a0:	movt	r1, #1
   123a4:	mov	r0, #67	; 0x43
   123a8:	bl	12430 <sprintf@plt+0xb3c>
   123ac:	movw	r2, #35124	; 0x8934
   123b0:	movt	r2, #1
   123b4:	mov	r0, r5
   123b8:	mov	r1, r4
   123bc:	b	12390 <sprintf@plt+0xa9c>
   123c0:	b	13260 <sprintf@plt+0x196c>
   123c4:	sub	sp, sp, #8
   123c8:	push	{r4, r5, r6, r7, fp, lr}
   123cc:	add	fp, sp, #16
   123d0:	sub	sp, sp, #520	; 0x208
   123d4:	mov	ip, r1
   123d8:	mov	r4, r0
   123dc:	str	r2, [fp, #8]
   123e0:	str	r3, [fp, #12]
   123e4:	add	r3, fp, #8
   123e8:	str	r3, [sp, #4]
   123ec:	add	r5, sp, #8
   123f0:	mov	r0, r5
   123f4:	mov	r1, #512	; 0x200
   123f8:	mov	r2, ip
   123fc:	bl	115a0 <vsnprintf@plt>
   12400:	movw	r0, #44888	; 0xaf58
   12404:	movt	r0, #2
   12408:	ldr	r0, [r0]
   1240c:	movw	r1, #35451	; 0x8a7b
   12410:	movt	r1, #1
   12414:	mov	r2, r4
   12418:	mov	r3, r5
   1241c:	bl	1184c <rb_helper_write@plt>
   12420:	sub	sp, fp, #16
   12424:	pop	{r4, r5, r6, r7, fp, lr}
   12428:	add	sp, sp, #8
   1242c:	bx	lr
   12430:	sub	sp, sp, #8
   12434:	push	{r4, r5, r6, r7, fp, lr}
   12438:	add	fp, sp, #16
   1243c:	sub	sp, sp, #520	; 0x208
   12440:	mov	ip, r1
   12444:	mov	r4, r0
   12448:	str	r2, [fp, #8]
   1244c:	str	r3, [fp, #12]
   12450:	add	r3, fp, #8
   12454:	str	r3, [sp, #4]
   12458:	add	r5, sp, #8
   1245c:	mov	r0, r5
   12460:	mov	r1, #512	; 0x200
   12464:	mov	r2, ip
   12468:	bl	115a0 <vsnprintf@plt>
   1246c:	movw	r0, #44888	; 0xaf58
   12470:	movt	r0, #2
   12474:	ldr	r0, [r0]
   12478:	movw	r1, #35460	; 0x8a84
   1247c:	movt	r1, #1
   12480:	mov	r2, r4
   12484:	mov	r3, r5
   12488:	bl	1184c <rb_helper_write@plt>
   1248c:	sub	sp, fp, #16
   12490:	pop	{r4, r5, r6, r7, fp, lr}
   12494:	add	sp, sp, #8
   12498:	bx	lr
   1249c:	sub	sp, sp, #4
   124a0:	push	{r4, r5, r6, sl, fp, lr}
   124a4:	add	fp, sp, #16
   124a8:	sub	sp, sp, #524	; 0x20c
   124ac:	mov	r4, r1
   124b0:	mov	r5, r0
   124b4:	str	r3, [fp, #8]
   124b8:	add	r3, fp, #8
   124bc:	str	r3, [sp, #8]
   124c0:	add	r6, sp, #12
   124c4:	mov	r0, r6
   124c8:	mov	r1, #512	; 0x200
   124cc:	bl	115a0 <vsnprintf@plt>
   124d0:	movw	r0, #44888	; 0xaf58
   124d4:	movt	r0, #2
   124d8:	ldr	r0, [r0]
   124dc:	str	r6, [sp]
   124e0:	movw	r1, #35469	; 0x8a8d
   124e4:	movt	r1, #1
   124e8:	mov	r2, r5
   124ec:	mov	r3, r4
   124f0:	bl	1184c <rb_helper_write@plt>
   124f4:	sub	sp, fp, #16
   124f8:	pop	{r4, r5, r6, sl, fp, lr}
   124fc:	add	sp, sp, #4
   12500:	bx	lr
   12504:	sub	sp, sp, #4
   12508:	push	{r4, r5, r6, sl, fp, lr}
   1250c:	add	fp, sp, #16
   12510:	sub	sp, sp, #524	; 0x20c
   12514:	mov	r4, r1
   12518:	mov	r5, r0
   1251c:	str	r3, [fp, #8]
   12520:	add	r3, fp, #8
   12524:	str	r3, [sp, #8]
   12528:	add	r6, sp, #12
   1252c:	mov	r0, r6
   12530:	mov	r1, #512	; 0x200
   12534:	bl	115a0 <vsnprintf@plt>
   12538:	movw	r0, #44888	; 0xaf58
   1253c:	movt	r0, #2
   12540:	ldr	r0, [r0]
   12544:	str	r6, [sp]
   12548:	movw	r1, #35480	; 0x8a98
   1254c:	movt	r1, #1
   12550:	mov	r2, r5
   12554:	mov	r3, r4
   12558:	bl	1184c <rb_helper_write@plt>
   1255c:	sub	sp, fp, #16
   12560:	pop	{r4, r5, r6, sl, fp, lr}
   12564:	add	sp, sp, #4
   12568:	bx	lr
   1256c:	mov	r3, r1
   12570:	mov	r2, r0
   12574:	movw	r0, #44888	; 0xaf58
   12578:	movt	r0, #2
   1257c:	ldr	r0, [r0]
   12580:	movw	r1, #35491	; 0x8aa3
   12584:	movt	r1, #1
   12588:	b	1184c <rb_helper_write@plt>
   1258c:	push	{fp, lr}
   12590:	mov	fp, sp
   12594:	movw	r0, #35499	; 0x8aab
   12598:	movt	r0, #1
   1259c:	movw	r1, #9744	; 0x2610
   125a0:	movt	r1, #1
   125a4:	bl	11828 <rb_dictionary_create@plt>
   125a8:	movw	r1, #61828	; 0xf184
   125ac:	movt	r1, #2
   125b0:	str	r0, [r1]
   125b4:	movw	r0, #35520	; 0x8ac0
   125b8:	movt	r0, #1
   125bc:	movw	r1, #9752	; 0x2618
   125c0:	movt	r1, #1
   125c4:	mov	r2, #0
   125c8:	mov	r3, #1
   125cc:	bl	11528 <rb_event_addish@plt>
   125d0:	movw	r1, #61328	; 0xef90
   125d4:	movt	r1, #2
   125d8:	str	r0, [r1]
   125dc:	movw	r0, #44460	; 0xadac
   125e0:	movt	r0, #2
   125e4:	bl	12724 <sprintf@plt+0xe30>
   125e8:	movw	r0, #44812	; 0xaf0c
   125ec:	movt	r0, #2
   125f0:	bl	12724 <sprintf@plt+0xe30>
   125f4:	movw	r0, #44652	; 0xae6c
   125f8:	movt	r0, #2
   125fc:	bl	12724 <sprintf@plt+0xe30>
   12600:	movw	r0, #44560	; 0xae10
   12604:	movt	r0, #2
   12608:	pop	{fp, lr}
   1260c:	b	12724 <sprintf@plt+0xe30>
   12610:	sub	r0, r1, r0
   12614:	bx	lr
   12618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1261c:	add	fp, sp, #28
   12620:	sub	sp, sp, #12
   12624:	bl	116f0 <rb_current_time@plt>
   12628:	mov	r4, r0
   1262c:	movw	r6, #61828	; 0xf184
   12630:	movt	r6, #2
   12634:	ldr	r0, [r6]
   12638:	add	r5, sp, #4
   1263c:	mov	r1, r5
   12640:	bl	116cc <rb_dictionary_foreach_start@plt>
   12644:	ldr	r0, [r6]
   12648:	mov	r1, r5
   1264c:	bl	115dc <rb_dictionary_foreach_cur@plt>
   12650:	cmp	r0, #0
   12654:	beq	1271c <sprintf@plt+0xe28>
   12658:	mov	r6, r0
   1265c:	add	r8, sp, #4
   12660:	b	1269c <sprintf@plt+0xda8>
   12664:	mov	r0, r6
   12668:	bl	12a20 <sprintf@plt+0x112c>
   1266c:	movw	r0, #61828	; 0xf184
   12670:	movt	r0, #2
   12674:	mov	r5, r0
   12678:	ldr	r0, [r0]
   1267c:	mov	r1, r8
   12680:	bl	11684 <rb_dictionary_foreach_next@plt>
   12684:	ldr	r0, [r5]
   12688:	mov	r1, r8
   1268c:	bl	115dc <rb_dictionary_foreach_cur@plt>
   12690:	mov	r6, r0
   12694:	cmp	r0, #0
   12698:	beq	1271c <sprintf@plt+0xe28>
   1269c:	mov	r0, r6
   126a0:	bl	1292c <sprintf@plt+0x1038>
   126a4:	movw	r0, #61832	; 0xf188
   126a8:	movt	r0, #2
   126ac:	ldr	sl, [r0]
   126b0:	cmp	sl, #0
   126b4:	bne	126c8 <sprintf@plt+0xdd4>
   126b8:	b	12664 <sprintf@plt+0xd70>
   126bc:	ldr	sl, [sl, #8]
   126c0:	cmp	sl, #0
   126c4:	beq	12664 <sprintf@plt+0xd70>
   126c8:	ldr	r9, [sl]
   126cc:	ldr	r5, [r9, #12]
   126d0:	mov	r0, r6
   126d4:	mov	r1, r5
   126d8:	bl	13188 <sprintf@plt+0x1894>
   126dc:	mov	r7, r0
   126e0:	mov	r0, r6
   126e4:	mov	r1, r5
   126e8:	bl	12d00 <sprintf@plt+0x140c>
   126ec:	cmp	r0, #0
   126f0:	beq	126bc <sprintf@plt+0xdc8>
   126f4:	cmp	r7, r4
   126f8:	bge	126bc <sprintf@plt+0xdc8>
   126fc:	cmp	r7, #1
   12700:	blt	126bc <sprintf@plt+0xdc8>
   12704:	ldr	r1, [r9, #40]	; 0x28
   12708:	cmp	r1, #0
   1270c:	beq	126bc <sprintf@plt+0xdc8>
   12710:	mov	r0, r6
   12714:	blx	r1
   12718:	b	126bc <sprintf@plt+0xdc8>
   1271c:	sub	sp, fp, #28
   12720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12724:	push	{r4, r5, r6, sl, fp, lr}
   12728:	add	fp, sp, #16
   1272c:	mov	r4, r0
   12730:	movw	r5, #61332	; 0xef94
   12734:	movt	r5, #2
   12738:	ldr	r0, [r5, #8]
   1273c:	cmp	r0, #0
   12740:	beq	127dc <sprintf@plt+0xee8>
   12744:	ldr	r0, [r5]
   12748:	ldr	r1, [r0]
   1274c:	str	r1, [r4, #12]
   12750:	mov	r1, r5
   12754:	bl	12a34 <sprintf@plt+0x1140>
   12758:	ldr	r0, [r5]
   1275c:	bl	11714 <rb_free_rb_dlink_node@plt>
   12760:	ldr	r5, [r4, #56]	; 0x38
   12764:	cmp	r5, #0
   12768:	beq	12798 <sprintf@plt+0xea4>
   1276c:	ldr	r1, [r5]
   12770:	cmp	r1, #0
   12774:	beq	12798 <sprintf@plt+0xea4>
   12778:	movw	r6, #61824	; 0xf180
   1277c:	movt	r6, #2
   12780:	ldr	r0, [r6]
   12784:	mov	r2, r5
   12788:	bl	117d4 <rb_dictionary_add@plt>
   1278c:	ldr	r1, [r5, #12]!
   12790:	cmp	r1, #0
   12794:	bne	12780 <sprintf@plt+0xe8c>
   12798:	ldrb	r0, [r4, #48]	; 0x30
   1279c:	cmp	r0, #0
   127a0:	beq	127b4 <sprintf@plt+0xec0>
   127a4:	ldr	r1, [r4, #52]	; 0x34
   127a8:	movw	r2, #42352	; 0xa570
   127ac:	movt	r2, #2
   127b0:	str	r1, [r2, r0, lsl #2]
   127b4:	ldr	r0, [r4, #24]
   127b8:	cmp	r0, #0
   127bc:	beq	127c4 <sprintf@plt+0xed0>
   127c0:	blx	r0
   127c4:	movw	r2, #61832	; 0xf188
   127c8:	movt	r2, #2
   127cc:	mov	r0, r4
   127d0:	mov	r1, r4
   127d4:	pop	{r4, r5, r6, sl, fp, lr}
   127d8:	b	12ad4 <sprintf@plt+0x11e0>
   127dc:	movw	r1, #61344	; 0xefa0
   127e0:	movt	r1, #2
   127e4:	ldr	r0, [r1]
   127e8:	cmp	r0, #32
   127ec:	cmnne	r0, #1
   127f0:	bne	12808 <sprintf@plt+0xf14>
   127f4:	movw	r1, #35618	; 0x8b22
   127f8:	movt	r1, #1
   127fc:	mov	r0, #87	; 0x57
   12800:	pop	{r4, r5, r6, sl, fp, lr}
   12804:	b	12430 <sprintf@plt+0xb3c>
   12808:	add	r2, r0, #1
   1280c:	str	r2, [r1]
   12810:	str	r0, [r4, #12]
   12814:	b	12760 <sprintf@plt+0xe6c>
   12818:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1281c:	add	fp, sp, #24
   12820:	sub	sp, sp, #8
   12824:	movw	r8, #61828	; 0xf184
   12828:	movt	r8, #2
   1282c:	ldr	r0, [r8]
   12830:	mov	r4, sp
   12834:	mov	r1, r4
   12838:	bl	116cc <rb_dictionary_foreach_start@plt>
   1283c:	ldr	r0, [r8]
   12840:	mov	r1, r4
   12844:	bl	115dc <rb_dictionary_foreach_cur@plt>
   12848:	cmp	r0, #0
   1284c:	beq	128b0 <sprintf@plt+0xfbc>
   12850:	mov	r7, r0
   12854:	movw	r4, #35543	; 0x8ad7
   12858:	movt	r4, #1
   1285c:	movw	r5, #35551	; 0x8adf
   12860:	movt	r5, #1
   12864:	mov	r6, sp
   12868:	mov	r0, r7
   1286c:	bl	1292c <sprintf@plt+0x1038>
   12870:	mov	r0, r7
   12874:	mvn	r1, #0
   12878:	mov	r2, r4
   1287c:	mov	r3, r5
   12880:	bl	1293c <sprintf@plt+0x1048>
   12884:	mov	r0, r7
   12888:	bl	12a20 <sprintf@plt+0x112c>
   1288c:	ldr	r0, [r8]
   12890:	mov	r1, r6
   12894:	bl	11684 <rb_dictionary_foreach_next@plt>
   12898:	ldr	r0, [r8]
   1289c:	mov	r1, r6
   128a0:	bl	115dc <rb_dictionary_foreach_cur@plt>
   128a4:	mov	r7, r0
   128a8:	cmp	r0, #0
   128ac:	bne	12868 <sprintf@plt+0xf74>
   128b0:	movw	r0, #61832	; 0xf188
   128b4:	movt	r0, #2
   128b8:	ldr	r5, [r0]
   128bc:	cmp	r5, #0
   128c0:	beq	12904 <sprintf@plt+0x1010>
   128c4:	movw	r4, #61832	; 0xf188
   128c8:	movt	r4, #2
   128cc:	b	128e8 <sprintf@plt+0xff4>
   128d0:	mov	r0, r5
   128d4:	mov	r1, r4
   128d8:	bl	12a34 <sprintf@plt+0x1140>
   128dc:	cmp	r6, #0
   128e0:	mov	r5, r6
   128e4:	beq	12904 <sprintf@plt+0x1010>
   128e8:	ldr	r0, [r5]
   128ec:	ldr	r6, [r5, #8]
   128f0:	ldr	r0, [r0, #28]
   128f4:	cmp	r0, #0
   128f8:	beq	128d0 <sprintf@plt+0xfdc>
   128fc:	blx	r0
   12900:	b	128d0 <sprintf@plt+0xfdc>
   12904:	ldr	r0, [r8]
   12908:	mov	r1, #0
   1290c:	mov	r2, #0
   12910:	bl	11768 <rb_dictionary_destroy@plt>
   12914:	movw	r0, #61328	; 0xef90
   12918:	movt	r0, #2
   1291c:	ldr	r0, [r0]
   12920:	bl	11570 <rb_event_delete@plt>
   12924:	sub	sp, fp, #24
   12928:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1292c:	ldr	r1, [r0, #460]	; 0x1cc
   12930:	add	r1, r1, #1
   12934:	str	r1, [r0, #460]	; 0x1cc
   12938:	bx	lr
   1293c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12940:	add	fp, sp, #24
   12944:	sub	sp, sp, #536	; 0x218
   12948:	mov	r6, r3
   1294c:	mov	r7, r2
   12950:	mov	r5, r1
   12954:	mov	r4, r0
   12958:	add	r3, fp, #8
   1295c:	str	r3, [sp, #20]
   12960:	add	r8, sp, #24
   12964:	mov	r0, r8
   12968:	mov	r1, #512	; 0x200
   1296c:	mov	r2, r6
   12970:	bl	115a0 <vsnprintf@plt>
   12974:	ldr	r2, [r4]
   12978:	movw	r0, #44888	; 0xaf58
   1297c:	movt	r0, #2
   12980:	ldr	r0, [r0]
   12984:	cmn	r5, #1
   12988:	beq	129d8 <sprintf@plt+0x10e4>
   1298c:	ldr	r1, [r4, #464]	; 0x1d0
   12990:	ldr	r1, [r1, r5, lsl #4]
   12994:	ldrb	r3, [r1, #20]
   12998:	movw	r1, #35436	; 0x8a6c
   1299c:	movt	r1, #1
   129a0:	cmp	r7, #0
   129a4:	movne	r1, r7
   129a8:	add	r7, r4, #376	; 0x178
   129ac:	add	r6, r4, #440	; 0x1b8
   129b0:	stm	sp, {r6, r7}
   129b4:	str	r1, [sp, #8]
   129b8:	str	r8, [sp, #12]
   129bc:	movw	r1, #35664	; 0x8b50
   129c0:	movt	r1, #1
   129c4:	bl	1184c <rb_helper_write@plt>
   129c8:	mov	r0, r4
   129cc:	mov	r1, r5
   129d0:	bl	12dac <sprintf@plt+0x14b8>
   129d4:	b	12a10 <sprintf@plt+0x111c>
   129d8:	movw	r1, #35436	; 0x8a6c
   129dc:	movt	r1, #1
   129e0:	cmp	r7, #0
   129e4:	movne	r1, r7
   129e8:	add	r3, r4, #376	; 0x178
   129ec:	add	r7, r4, #440	; 0x1b8
   129f0:	str	r7, [sp]
   129f4:	str	r3, [sp, #4]
   129f8:	str	r1, [sp, #8]
   129fc:	str	r8, [sp, #12]
   12a00:	movw	r1, #35664	; 0x8b50
   12a04:	movt	r1, #1
   12a08:	mov	r3, #42	; 0x2a
   12a0c:	bl	1184c <rb_helper_write@plt>
   12a10:	mov	r0, r4
   12a14:	bl	12c7c <sprintf@plt+0x1388>
   12a18:	sub	sp, fp, #24
   12a1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12a20:	ldr	r1, [r0, #460]	; 0x1cc
   12a24:	subs	r1, r1, #1
   12a28:	str	r1, [r0, #460]	; 0x1cc
   12a2c:	bxne	lr
   12a30:	b	12c3c <sprintf@plt+0x1348>
   12a34:	push	{fp, lr}
   12a38:	mov	fp, sp
   12a3c:	cmp	r0, #0
   12a40:	beq	12a94 <sprintf@plt+0x11a0>
   12a44:	cmp	r1, #0
   12a48:	beq	12ab4 <sprintf@plt+0x11c0>
   12a4c:	ldr	ip, [r0, #4]
   12a50:	ldr	r3, [r0, #8]
   12a54:	add	r2, r3, #4
   12a58:	cmp	r3, #0
   12a5c:	addeq	r2, r1, #4
   12a60:	str	ip, [r2]
   12a64:	ldmib	r0, {r2, ip}
   12a68:	cmp	r2, #0
   12a6c:	mov	r3, r1
   12a70:	addne	r3, r2, #8
   12a74:	str	ip, [r3]
   12a78:	mov	r2, #0
   12a7c:	str	r2, [r0, #4]
   12a80:	str	r2, [r0, #8]
   12a84:	ldr	r0, [r1, #8]
   12a88:	sub	r0, r0, #1
   12a8c:	str	r0, [r1, #8]
   12a90:	pop	{fp, pc}
   12a94:	movw	r0, #37219	; 0x9163
   12a98:	movt	r0, #1
   12a9c:	movw	r1, #35912	; 0x8c48
   12aa0:	movt	r1, #1
   12aa4:	movw	r3, #35940	; 0x8c64
   12aa8:	movt	r3, #1
   12aac:	mov	r2, #235	; 0xeb
   12ab0:	bl	11654 <__assert_fail@plt>
   12ab4:	movw	r0, #35994	; 0x8c9a
   12ab8:	movt	r0, #1
   12abc:	movw	r1, #35912	; 0x8c48
   12ac0:	movt	r1, #1
   12ac4:	movw	r3, #35940	; 0x8c64
   12ac8:	movt	r3, #1
   12acc:	mov	r2, #236	; 0xec
   12ad0:	bl	11654 <__assert_fail@plt>
   12ad4:	push	{fp, lr}
   12ad8:	mov	fp, sp
   12adc:	cmp	r0, #0
   12ae0:	beq	12b40 <sprintf@plt+0x124c>
   12ae4:	cmp	r1, #0
   12ae8:	beq	12b60 <sprintf@plt+0x126c>
   12aec:	cmp	r2, #0
   12af0:	beq	12b80 <sprintf@plt+0x128c>
   12af4:	mov	r3, #0
   12af8:	stm	r1, {r0, r3}
   12afc:	ldr	r0, [r2]
   12b00:	str	r0, [r1, #8]
   12b04:	ldr	r0, [r2]
   12b08:	cmp	r0, #0
   12b0c:	beq	12b1c <sprintf@plt+0x1228>
   12b10:	add	r0, r0, #4
   12b14:	str	r1, [r0]
   12b18:	b	12b2c <sprintf@plt+0x1238>
   12b1c:	mov	r0, r2
   12b20:	ldr	r3, [r0, #4]!
   12b24:	cmp	r3, #0
   12b28:	streq	r1, [r0]
   12b2c:	str	r1, [r2]
   12b30:	ldr	r0, [r2, #8]
   12b34:	add	r0, r0, #1
   12b38:	str	r0, [r2, #8]
   12b3c:	pop	{fp, pc}
   12b40:	movw	r0, #36007	; 0x8ca7
   12b44:	movt	r0, #1
   12b48:	movw	r1, #35912	; 0x8c48
   12b4c:	movt	r1, #1
   12b50:	movw	r3, #36020	; 0x8cb4
   12b54:	movt	r3, #1
   12b58:	mov	r2, #143	; 0x8f
   12b5c:	bl	11654 <__assert_fail@plt>
   12b60:	movw	r0, #37219	; 0x9163
   12b64:	movt	r0, #1
   12b68:	movw	r1, #35912	; 0x8c48
   12b6c:	movt	r1, #1
   12b70:	movw	r3, #36020	; 0x8cb4
   12b74:	movt	r3, #1
   12b78:	mov	r2, #144	; 0x90
   12b7c:	bl	11654 <__assert_fail@plt>
   12b80:	movw	r0, #35994	; 0x8c9a
   12b84:	movt	r0, #1
   12b88:	movw	r1, #35912	; 0x8c48
   12b8c:	movt	r1, #1
   12b90:	movw	r3, #36020	; 0x8cb4
   12b94:	movt	r3, #1
   12b98:	mov	r2, #145	; 0x91
   12b9c:	bl	11654 <__assert_fail@plt>
   12ba0:	push	{r4, r5, r6, sl, fp, lr}
   12ba4:	add	fp, sp, #16
   12ba8:	mov	r4, r0
   12bac:	ldr	r0, [r0, #56]	; 0x38
   12bb0:	cmp	r0, #0
   12bb4:	beq	12be4 <sprintf@plt+0x12f0>
   12bb8:	ldr	r1, [r0]
   12bbc:	cmp	r1, #0
   12bc0:	beq	12be4 <sprintf@plt+0x12f0>
   12bc4:	add	r5, r0, #12
   12bc8:	movw	r6, #61824	; 0xf180
   12bcc:	movt	r6, #2
   12bd0:	ldr	r0, [r6]
   12bd4:	bl	116fc <rb_dictionary_delete@plt>
   12bd8:	ldr	r1, [r5], #12
   12bdc:	cmp	r1, #0
   12be0:	bne	12bd0 <sprintf@plt+0x12dc>
   12be4:	ldrb	r0, [r4, #48]	; 0x30
   12be8:	cmp	r0, #0
   12bec:	movwne	r1, #42352	; 0xa570
   12bf0:	movtne	r1, #2
   12bf4:	movne	r2, #0
   12bf8:	strne	r2, [r1, r0, lsl #2]
   12bfc:	ldr	r0, [r4, #28]
   12c00:	cmp	r0, #0
   12c04:	beq	12c0c <sprintf@plt+0x1318>
   12c08:	blx	r0
   12c0c:	movw	r1, #61832	; 0xf188
   12c10:	movt	r1, #2
   12c14:	mov	r0, r4
   12c18:	bl	12a34 <sprintf@plt+0x1140>
   12c1c:	ldr	r4, [r4, #12]
   12c20:	bl	11870 <rb_make_rb_dlink_node@plt>
   12c24:	mov	r1, r0
   12c28:	movw	r2, #61332	; 0xef94
   12c2c:	movt	r2, #2
   12c30:	mov	r0, r4
   12c34:	pop	{r4, r5, r6, sl, fp, lr}
   12c38:	b	12ad4 <sprintf@plt+0x11e0>
   12c3c:	push	{r4, sl, fp, lr}
   12c40:	add	fp, sp, #8
   12c44:	mov	r4, r0
   12c48:	ldr	r1, [r0]
   12c4c:	movw	r0, #61828	; 0xf184
   12c50:	movt	r0, #2
   12c54:	ldr	r0, [r0]
   12c58:	bl	116fc <rb_dictionary_delete@plt>
   12c5c:	ldr	r0, [r4, #464]	; 0x1d0
   12c60:	bl	12c70 <sprintf@plt+0x137c>
   12c64:	mov	r0, r4
   12c68:	pop	{r4, sl, fp, lr}
   12c6c:	b	12c70 <sprintf@plt+0x137c>
   12c70:	cmp	r0, #0
   12c74:	bxeq	lr
   12c78:	b	11690 <free@plt>
   12c7c:	push	{r4, r5, r6, sl, fp, lr}
   12c80:	add	fp, sp, #16
   12c84:	mov	r4, r0
   12c88:	ldrb	r0, [r0, #452]	; 0x1c4
   12c8c:	cmp	r0, #0
   12c90:	popne	{r4, r5, r6, sl, fp, pc}
   12c94:	mov	r0, #1
   12c98:	strb	r0, [r4, #452]	; 0x1c4
   12c9c:	ldr	r0, [r4, #456]	; 0x1c8
   12ca0:	cmp	r0, #0
   12ca4:	beq	12cfc <sprintf@plt+0x1408>
   12ca8:	movw	r0, #61832	; 0xf188
   12cac:	movt	r0, #2
   12cb0:	ldr	r5, [r0]
   12cb4:	cmp	r5, #0
   12cb8:	bne	12ccc <sprintf@plt+0x13d8>
   12cbc:	b	12cfc <sprintf@plt+0x1408>
   12cc0:	ldr	r5, [r5, #8]
   12cc4:	cmp	r5, #0
   12cc8:	beq	12cfc <sprintf@plt+0x1408>
   12ccc:	ldr	r0, [r5]
   12cd0:	ldr	r6, [r0, #36]	; 0x24
   12cd4:	cmp	r6, #0
   12cd8:	beq	12cc0 <sprintf@plt+0x13cc>
   12cdc:	ldr	r1, [r0, #12]
   12ce0:	mov	r0, r4
   12ce4:	bl	12d00 <sprintf@plt+0x140c>
   12ce8:	cmp	r0, #0
   12cec:	beq	12cc0 <sprintf@plt+0x13cc>
   12cf0:	mov	r0, r4
   12cf4:	blx	r6
   12cf8:	b	12cc0 <sprintf@plt+0x13cc>
   12cfc:	pop	{r4, r5, r6, sl, fp, pc}
   12d00:	push	{fp, lr}
   12d04:	mov	fp, sp
   12d08:	bl	1312c <sprintf@plt+0x1838>
   12d0c:	sub	r0, r0, #1
   12d10:	clz	r0, r0
   12d14:	lsr	r0, r0, #5
   12d18:	pop	{fp, pc}
   12d1c:	push	{r4, r5, r6, r7, fp, lr}
   12d20:	add	fp, sp, #16
   12d24:	mov	r5, r1
   12d28:	mov	r4, r0
   12d2c:	bl	12dac <sprintf@plt+0x14b8>
   12d30:	ldr	r0, [r4, #456]	; 0x1c8
   12d34:	cmp	r0, #0
   12d38:	bne	12d48 <sprintf@plt+0x1454>
   12d3c:	ldrb	r0, [r4, #451]	; 0x1c3
   12d40:	cmp	r0, #0
   12d44:	beq	12da0 <sprintf@plt+0x14ac>
   12d48:	movw	r0, #61832	; 0xf188
   12d4c:	movt	r0, #2
   12d50:	ldr	r6, [r0]
   12d54:	cmp	r6, #0
   12d58:	bne	12d6c <sprintf@plt+0x1478>
   12d5c:	pop	{r4, r5, r6, r7, fp, pc}
   12d60:	ldr	r6, [r6, #8]
   12d64:	cmp	r6, #0
   12d68:	beq	12d5c <sprintf@plt+0x1468>
   12d6c:	ldr	r0, [r6]
   12d70:	ldr	r7, [r0, #44]	; 0x2c
   12d74:	cmp	r7, #0
   12d78:	beq	12d60 <sprintf@plt+0x146c>
   12d7c:	ldr	r1, [r0, #12]
   12d80:	mov	r0, r4
   12d84:	bl	12d00 <sprintf@plt+0x140c>
   12d88:	cmp	r0, #0
   12d8c:	beq	12d60 <sprintf@plt+0x146c>
   12d90:	mov	r0, r4
   12d94:	mov	r1, r5
   12d98:	blx	r7
   12d9c:	b	12d60 <sprintf@plt+0x146c>
   12da0:	mov	r0, r4
   12da4:	pop	{r4, r5, r6, r7, fp, lr}
   12da8:	b	12dd0 <sprintf@plt+0x14dc>
   12dac:	push	{r4, sl, fp, lr}
   12db0:	add	fp, sp, #8
   12db4:	mov	r4, r0
   12db8:	mov	r2, #2
   12dbc:	bl	1313c <sprintf@plt+0x1848>
   12dc0:	ldr	r0, [r4, #456]	; 0x1c8
   12dc4:	sub	r0, r0, #1
   12dc8:	str	r0, [r4, #456]	; 0x1c8
   12dcc:	pop	{r4, sl, fp, pc}
   12dd0:	push	{r4, sl, fp, lr}
   12dd4:	add	fp, sp, #8
   12dd8:	sub	sp, sp, #8
   12ddc:	mov	r4, r0
   12de0:	movw	r0, #44888	; 0xaf58
   12de4:	movt	r0, #2
   12de8:	ldr	r0, [r0]
   12dec:	mov	r1, r4
   12df0:	ldr	r2, [r1], #376	; 0x178
   12df4:	str	r1, [sp]
   12df8:	add	r3, r4, #440	; 0x1b8
   12dfc:	movw	r1, #35685	; 0x8b65
   12e00:	movt	r1, #1
   12e04:	bl	1184c <rb_helper_write@plt>
   12e08:	mov	r0, r4
   12e0c:	sub	sp, fp, #8
   12e10:	pop	{r4, sl, fp, lr}
   12e14:	b	12c7c <sprintf@plt+0x1388>
   12e18:	push	{r4, r5, fp, lr}
   12e1c:	add	fp, sp, #8
   12e20:	sub	sp, sp, #8
   12e24:	mov	ip, r0
   12e28:	cmp	r0, #5
   12e2c:	ble	12e6c <sprintf@plt+0x1578>
   12e30:	mov	lr, r1
   12e34:	ldmib	r1, {r0, r1}
   12e38:	add	r5, lr, #12
   12e3c:	ldm	r5, {r2, r3, r5}
   12e40:	cmp	ip, #6
   12e44:	bne	12e54 <sprintf@plt+0x1560>
   12e48:	movw	r4, #36139	; 0x8d2b
   12e4c:	movt	r4, #1
   12e50:	b	12e58 <sprintf@plt+0x1564>
   12e54:	ldr	r4, [lr, #24]
   12e58:	str	r5, [sp]
   12e5c:	str	r4, [sp, #4]
   12e60:	bl	12e88 <sprintf@plt+0x1594>
   12e64:	sub	sp, fp, #8
   12e68:	pop	{r4, r5, fp, pc}
   12e6c:	movw	r1, #35696	; 0x8b70
   12e70:	movt	r1, #1
   12e74:	mov	r0, #67	; 0x43
   12e78:	mov	r2, ip
   12e7c:	bl	12430 <sprintf@plt+0xb3c>
   12e80:	mov	r0, #3
   12e84:	bl	118dc <exit@plt>
   12e88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e8c:	add	fp, sp, #28
   12e90:	sub	sp, sp, #12
   12e94:	mov	r4, r3
   12e98:	mov	sl, r2
   12e9c:	mov	r6, r1
   12ea0:	mov	r5, r0
   12ea4:	mov	r1, #0
   12ea8:	mov	r2, #16
   12eac:	bl	11678 <strtoull@plt>
   12eb0:	mov	r8, r0
   12eb4:	subs	r0, r0, #1
   12eb8:	sbc	r1, r1, #0
   12ebc:	mvn	r2, #1
   12ec0:	subs	r0, r2, r0
   12ec4:	rscs	r0, r1, #0
   12ec8:	bcs	12ed4 <sprintf@plt+0x15e0>
   12ecc:	sub	sp, fp, #28
   12ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ed4:	str	r4, [sp, #8]
   12ed8:	ldr	r7, [fp, #12]
   12edc:	ldr	r0, [fp, #8]
   12ee0:	str	r0, [sp, #4]
   12ee4:	mov	r0, #468	; 0x1d4
   12ee8:	bl	1314c <sprintf@plt+0x1858>
   12eec:	mov	r4, r0
   12ef0:	bl	1292c <sprintf@plt+0x1038>
   12ef4:	str	r8, [r4]
   12ef8:	movw	r9, #61828	; 0xf184
   12efc:	movt	r9, #2
   12f00:	ldr	r0, [r9]
   12f04:	mov	r1, r8
   12f08:	bl	1181c <rb_dictionary_find@plt>
   12f0c:	cmp	r0, #0
   12f10:	bne	1306c <sprintf@plt+0x1778>
   12f14:	ldr	r1, [r4]
   12f18:	ldr	r0, [r9]
   12f1c:	mov	r2, r4
   12f20:	bl	117d4 <rb_dictionary_add@plt>
   12f24:	mov	r8, #0
   12f28:	mov	r0, r7
   12f2c:	mov	r1, #0
   12f30:	mov	r2, #16
   12f34:	bl	11678 <strtoull@plt>
   12f38:	str	r0, [r4, #4]
   12f3c:	add	r0, r4, #8
   12f40:	mov	r1, r6
   12f44:	mov	r2, #54	; 0x36
   12f48:	bl	1166c <rb_strlcpy@plt>
   12f4c:	mov	r0, sl
   12f50:	bl	1175c <atoi@plt>
   12f54:	strh	r0, [r4, #62]	; 0x3e
   12f58:	add	r1, r4, #64	; 0x40
   12f5c:	mov	r0, r6
   12f60:	bl	116d8 <rb_inet_pton_sock@plt>
   12f64:	ldrh	r0, [r4, #62]	; 0x3e
   12f68:	bl	1316c <sprintf@plt+0x1878>
   12f6c:	strh	r0, [r4, #66]	; 0x42
   12f70:	add	r0, r4, #192	; 0xc0
   12f74:	ldr	r5, [sp, #8]
   12f78:	mov	r1, r5
   12f7c:	mov	r2, #54	; 0x36
   12f80:	bl	1166c <rb_strlcpy@plt>
   12f84:	ldr	r0, [sp, #4]
   12f88:	bl	1175c <atoi@plt>
   12f8c:	strh	r0, [r4, #246]	; 0xf6
   12f90:	add	r1, r4, #248	; 0xf8
   12f94:	mov	r0, r5
   12f98:	bl	116d8 <rb_inet_pton_sock@plt>
   12f9c:	ldrh	r0, [r4, #246]	; 0xf6
   12fa0:	bl	1316c <sprintf@plt+0x1878>
   12fa4:	strh	r0, [r4, #250]	; 0xfa
   12fa8:	add	r0, r4, #376	; 0x178
   12fac:	movw	r5, #35436	; 0x8a6c
   12fb0:	movt	r5, #1
   12fb4:	mov	r1, r5
   12fb8:	mov	r2, #64	; 0x40
   12fbc:	bl	1166c <rb_strlcpy@plt>
   12fc0:	add	r0, r4, #440	; 0x1b8
   12fc4:	mov	r1, r5
   12fc8:	mov	r2, #11
   12fcc:	bl	1166c <rb_strlcpy@plt>
   12fd0:	movw	r0, #61344	; 0xefa0
   12fd4:	movt	r0, #2
   12fd8:	ldr	r0, [r0]
   12fdc:	lsl	r0, r0, #4
   12fe0:	bl	1314c <sprintf@plt+0x1858>
   12fe4:	str	r0, [r4, #464]	; 0x1d0
   12fe8:	mov	r0, #1
   12fec:	strb	r0, [r4, #451]	; 0x1c3
   12ff0:	movw	r0, #61832	; 0xf188
   12ff4:	movt	r0, #2
   12ff8:	ldr	r5, [r0]
   12ffc:	cmp	r5, #0
   13000:	beq	13048 <sprintf@plt+0x1754>
   13004:	ldr	r0, [r4, #464]	; 0x1d0
   13008:	ldr	r6, [r5]
   1300c:	ldr	r1, [r6, #12]
   13010:	str	r6, [r0, r1, lsl #4]
   13014:	mov	r0, r4
   13018:	bl	13174 <sprintf@plt+0x1880>
   1301c:	ldr	r1, [r6, #32]
   13020:	mov	r0, r4
   13024:	blx	r1
   13028:	cmp	r0, #0
   1302c:	beq	1305c <sprintf@plt+0x1768>
   13030:	ldrb	r0, [r4, #452]	; 0x1c4
   13034:	cmp	r0, #0
   13038:	bne	13048 <sprintf@plt+0x1754>
   1303c:	ldr	r5, [r5, #8]
   13040:	cmp	r5, #0
   13044:	bne	13004 <sprintf@plt+0x1710>
   13048:	strb	r8, [r4, #451]	; 0x1c3
   1304c:	ldr	r0, [r4, #456]	; 0x1c8
   13050:	cmp	r0, #0
   13054:	moveq	r0, r4
   13058:	bleq	12dd0 <sprintf@plt+0x14dc>
   1305c:	mov	r0, r4
   13060:	sub	sp, fp, #28
   13064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13068:	b	12a20 <sprintf@plt+0x112c>
   1306c:	movw	r1, #36079	; 0x8cef
   13070:	movt	r1, #1
   13074:	mov	r0, #67	; 0x43
   13078:	mov	r2, r5
   1307c:	bl	12430 <sprintf@plt+0xb3c>
   13080:	mov	r0, #3
   13084:	bl	118dc <exit@plt>
   13088:	push	{r4, sl, fp, lr}
   1308c:	add	fp, sp, #8
   13090:	cmp	r0, #1
   13094:	ble	13100 <sprintf@plt+0x180c>
   13098:	mov	r4, r1
   1309c:	ldr	r0, [r1, #4]
   130a0:	mov	r1, #0
   130a4:	mov	r2, #16
   130a8:	bl	11678 <strtoull@plt>
   130ac:	mov	r2, r0
   130b0:	subs	r0, r0, #1
   130b4:	sbc	r1, r1, #0
   130b8:	mvn	r3, #0
   130bc:	subs	r0, r0, r3
   130c0:	sbcs	r0, r1, #0
   130c4:	bcs	13110 <sprintf@plt+0x181c>
   130c8:	movw	r0, #61828	; 0xf184
   130cc:	movt	r0, #2
   130d0:	ldr	r0, [r0]
   130d4:	mov	r1, r2
   130d8:	bl	117b0 <rb_dictionary_retrieve@plt>
   130dc:	cmp	r0, #0
   130e0:	popeq	{r4, sl, fp, pc}
   130e4:	mov	r4, r0
   130e8:	bl	1292c <sprintf@plt+0x1038>
   130ec:	mov	r0, r4
   130f0:	bl	12c7c <sprintf@plt+0x1388>
   130f4:	mov	r0, r4
   130f8:	pop	{r4, sl, fp, lr}
   130fc:	b	12a20 <sprintf@plt+0x112c>
   13100:	mov	r2, r0
   13104:	movw	r1, #35770	; 0x8bba
   13108:	movt	r1, #1
   1310c:	b	1311c <sprintf@plt+0x1828>
   13110:	ldr	r2, [r4, #4]
   13114:	movw	r1, #35844	; 0x8c04
   13118:	movt	r1, #1
   1311c:	mov	r0, #67	; 0x43
   13120:	bl	12430 <sprintf@plt+0xb3c>
   13124:	mov	r0, #3
   13128:	bl	118dc <exit@plt>
   1312c:	ldr	r0, [r0, #464]	; 0x1d0
   13130:	add	r0, r0, r1, lsl #4
   13134:	ldr	r0, [r0, #12]
   13138:	bx	lr
   1313c:	ldr	r0, [r0, #464]	; 0x1d0
   13140:	add	r0, r0, r1, lsl #4
   13144:	str	r2, [r0, #12]
   13148:	bx	lr
   1314c:	push	{fp, lr}
   13150:	mov	fp, sp
   13154:	mov	r1, r0
   13158:	mov	r0, #1
   1315c:	bl	115f4 <calloc@plt>
   13160:	cmp	r0, #0
   13164:	popne	{fp, pc}
   13168:	bl	117bc <rb_outofmemory@plt>
   1316c:	rev16	r0, r0
   13170:	bx	lr
   13174:	ldr	r2, [r0, #456]	; 0x1c8
   13178:	add	r2, r2, #1
   1317c:	str	r2, [r0, #456]	; 0x1c8
   13180:	mov	r2, #1
   13184:	b	1313c <sprintf@plt+0x1848>
   13188:	ldr	r0, [r0, #464]	; 0x1d0
   1318c:	add	r0, r0, r1, lsl #4
   13190:	ldr	r0, [r0, #4]
   13194:	bx	lr
   13198:	b	1319c <sprintf@plt+0x18a8>
   1319c:	push	{r4, sl, fp, lr}
   131a0:	add	fp, sp, #8
   131a4:	bl	142c4 <sprintf@plt+0x29d0>
   131a8:	movw	r0, #61416	; 0xefe8
   131ac:	movt	r0, #2
   131b0:	ldr	r1, [r0]
   131b4:	cmp	r1, #1
   131b8:	blt	131dc <sprintf@plt+0x18e8>
   131bc:	ldr	r0, [r0]
   131c0:	cmp	r0, #1
   131c4:	movle	r0, #1
   131c8:	lsl	r2, r0, #2
   131cc:	movw	r0, #61360	; 0xefb0
   131d0:	movt	r0, #2
   131d4:	mov	r1, #0
   131d8:	bl	11624 <memset@plt>
   131dc:	movw	r4, #61352	; 0xefa8
   131e0:	movt	r4, #2
   131e4:	ldr	r0, [r4]
   131e8:	cmp	r0, #0
   131ec:	beq	131f4 <sprintf@plt+0x1900>
   131f0:	pop	{r4, sl, fp, pc}
   131f4:	movw	r0, #62120	; 0xf2a8
   131f8:	movt	r0, #2
   131fc:	ldrh	r0, [r0]
   13200:	movw	r3, #36346	; 0x8dfa
   13204:	movt	r3, #1
   13208:	mov	r1, #2
   1320c:	mov	r2, #0
   13210:	bl	115ac <rb_socket@plt>
   13214:	str	r0, [r4]
   13218:	cmp	r0, #0
   1321c:	popeq	{r4, sl, fp, pc}
   13220:	movw	r2, #13868	; 0x362c
   13224:	movt	r2, #1
   13228:	mov	r1, #1
   1322c:	mov	r3, #0
   13230:	bl	1157c <rb_setselect@plt>
   13234:	movw	r0, #36366	; 0x8e0e
   13238:	movt	r0, #1
   1323c:	movw	r1, #13924	; 0x3664
   13240:	movt	r1, #1
   13244:	mov	r2, #0
   13248:	mov	r3, #1
   1324c:	bl	11858 <rb_event_add@plt>
   13250:	movw	r1, #61356	; 0xefac
   13254:	movt	r1, #2
   13258:	str	r0, [r1]
   1325c:	pop	{r4, sl, fp, pc}
   13260:	push	{r4, sl, fp, lr}
   13264:	add	fp, sp, #8
   13268:	movw	r4, #61352	; 0xefa8
   1326c:	movt	r4, #2
   13270:	ldr	r0, [r4]
   13274:	bl	1172c <rb_close@plt>
   13278:	mov	r0, #0
   1327c:	str	r0, [r4]
   13280:	movw	r0, #61356	; 0xefac
   13284:	movt	r0, #2
   13288:	ldr	r0, [r0]
   1328c:	bl	11570 <rb_event_delete@plt>
   13290:	pop	{r4, sl, fp, lr}
   13294:	b	1319c <sprintf@plt+0x18a8>
   13298:	push	{r4, r5, r6, sl, fp, lr}
   1329c:	add	fp, sp, #16
   132a0:	sub	sp, sp, #256	; 0x100
   132a4:	cmp	r0, #0
   132a8:	beq	132e8 <sprintf@plt+0x19f4>
   132ac:	mov	r4, r2
   132b0:	mov	r5, r1
   132b4:	mov	r1, r0
   132b8:	mov	r6, sp
   132bc:	mov	r0, r6
   132c0:	mov	r2, #256	; 0x100
   132c4:	bl	1166c <rb_strlcpy@plt>
   132c8:	mov	r0, r6
   132cc:	bl	13308 <sprintf@plt+0x1a14>
   132d0:	mov	r0, r6
   132d4:	mov	r1, r5
   132d8:	mov	r2, r4
   132dc:	bl	13380 <sprintf@plt+0x1a8c>
   132e0:	sub	sp, fp, #16
   132e4:	pop	{r4, r5, r6, sl, fp, pc}
   132e8:	movw	r0, #36131	; 0x8d23
   132ec:	movt	r0, #1
   132f0:	movw	r1, #36141	; 0x8d2d
   132f4:	movt	r1, #1
   132f8:	movw	r3, #36147	; 0x8d33
   132fc:	movt	r3, #1
   13300:	mov	r2, #412	; 0x19c
   13304:	bl	11654 <__assert_fail@plt>
   13308:	push	{r4, r5, fp, lr}
   1330c:	add	fp, sp, #8
   13310:	mov	r4, r0
   13314:	mov	r1, #46	; 0x2e
   13318:	bl	115d0 <strchr@plt>
   1331c:	cmp	r0, #0
   13320:	bne	1337c <sprintf@plt+0x1a88>
   13324:	movw	r0, #61864	; 0xf1a8
   13328:	movt	r0, #2
   1332c:	ldrb	r0, [r0]
   13330:	cmp	r0, #0
   13334:	beq	1337c <sprintf@plt+0x1a88>
   13338:	mov	r0, r4
   1333c:	bl	116e4 <strlen@plt>
   13340:	mov	r5, r0
   13344:	movw	r0, #61864	; 0xf1a8
   13348:	movt	r0, #2
   1334c:	bl	116e4 <strlen@plt>
   13350:	add	r0, r5, r0
   13354:	add	r0, r0, #2
   13358:	cmp	r0, #254	; 0xfe
   1335c:	pophi	{r4, r5, fp, pc}
   13360:	mov	r0, #46	; 0x2e
   13364:	strb	r0, [r4, r5]!
   13368:	add	r0, r4, #1
   1336c:	movw	r1, #61864	; 0xf1a8
   13370:	movt	r1, #2
   13374:	pop	{r4, r5, fp, lr}
   13378:	b	11750 <strcpy@plt>
   1337c:	pop	{r4, r5, fp, pc}
   13380:	cmp	r0, #0
   13384:	beq	133a0 <sprintf@plt+0x1aac>
   13388:	mov	r3, r2
   1338c:	mov	r2, r1
   13390:	mov	r1, r0
   13394:	mov	r0, r2
   13398:	mov	r2, #0
   1339c:	b	13dcc <sprintf@plt+0x24d8>
   133a0:	push	{fp, lr}
   133a4:	mov	fp, sp
   133a8:	movw	r0, #36131	; 0x8d23
   133ac:	movt	r0, #1
   133b0:	movw	r1, #36141	; 0x8d2d
   133b4:	movt	r1, #1
   133b8:	movw	r3, #36518	; 0x8ea6
   133bc:	movt	r3, #1
   133c0:	movw	r2, #425	; 0x1a9
   133c4:	bl	11654 <__assert_fail@plt>
   133c8:	mov	r2, r0
   133cc:	mov	r0, r1
   133d0:	mov	r1, r2
   133d4:	mov	r2, #0
   133d8:	b	133dc <sprintf@plt+0x1ae8>
   133dc:	push	{r4, r5, fp, lr}
   133e0:	add	fp, sp, #8
   133e4:	mov	r4, r2
   133e8:	mov	r5, r1
   133ec:	cmp	r2, #0
   133f0:	bne	13418 <sprintf@plt+0x1b24>
   133f4:	bl	13e1c <sprintf@plt+0x2528>
   133f8:	mov	r4, r0
   133fc:	add	r0, r0, #292	; 0x124
   13400:	mov	r1, r5
   13404:	mov	r2, #128	; 0x80
   13408:	bl	11708 <memcpy@plt>
   1340c:	mov	r0, #256	; 0x100
   13410:	bl	13f24 <sprintf@plt+0x2630>
   13414:	str	r0, [r4, #420]	; 0x1a4
   13418:	add	r0, r4, #21
   1341c:	mov	r1, #256	; 0x100
   13420:	mov	r2, r5
   13424:	mov	r3, #0
   13428:	bl	13440 <sprintf@plt+0x1b4c>
   1342c:	mov	r0, #12
   13430:	strb	r0, [r4, #20]
   13434:	mov	r0, r4
   13438:	pop	{r4, r5, fp, lr}
   1343c:	b	13e9c <sprintf@plt+0x25a8>
   13440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13444:	add	fp, sp, #28
   13448:	sub	sp, sp, #172	; 0xac
   1344c:	ldrh	r7, [r2]
   13450:	cmp	r7, #10
   13454:	beq	13490 <sprintf@plt+0x1b9c>
   13458:	cmp	r7, #2
   1345c:	bne	13624 <sprintf@plt+0x1d30>
   13460:	movw	r7, #36225	; 0x8d81
   13464:	movt	r7, #1
   13468:	cmp	r3, #0
   1346c:	movne	r7, r3
   13470:	ldrb	r6, [r2, #4]
   13474:	ldrb	r5, [r2, #5]
   13478:	ldrb	r4, [r2, #6]
   1347c:	ldrb	r3, [r2, #7]
   13480:	stm	sp, {r4, r5, r6, r7}
   13484:	movw	r2, #36210	; 0x8d72
   13488:	movt	r2, #1
   1348c:	b	13620 <sprintf@plt+0x1d2c>
   13490:	movw	r5, #36337	; 0x8df1
   13494:	movt	r5, #1
   13498:	cmp	r3, #0
   1349c:	movne	r5, r3
   134a0:	ldrb	r3, [r2, #23]
   134a4:	str	r3, [fp, #-32]	; 0xffffffe0
   134a8:	ldrb	r3, [r2, #22]
   134ac:	str	r3, [fp, #-36]	; 0xffffffdc
   134b0:	ldrb	r3, [r2, #21]
   134b4:	str	r3, [fp, #-40]	; 0xffffffd8
   134b8:	ldrb	r3, [r2, #20]
   134bc:	str	r3, [fp, #-48]	; 0xffffffd0
   134c0:	ldrb	r3, [r2, #19]
   134c4:	str	r3, [fp, #-56]	; 0xffffffc8
   134c8:	ldrb	r3, [r2, #18]
   134cc:	str	r3, [fp, #-60]	; 0xffffffc4
   134d0:	ldrb	r3, [r2, #17]
   134d4:	str	r3, [fp, #-64]	; 0xffffffc0
   134d8:	ldrb	r3, [r2, #16]
   134dc:	str	r3, [fp, #-68]	; 0xffffffbc
   134e0:	ldrb	r6, [r2, #15]
   134e4:	ldrb	r3, [r2, #14]
   134e8:	ldrb	ip, [r2, #13]
   134ec:	ldrb	lr, [r2, #12]
   134f0:	ldrb	r8, [r2, #8]
   134f4:	ldrb	r9, [r2, #9]
   134f8:	ldrb	sl, [r2, #10]
   134fc:	ldrb	r2, [r2, #11]
   13500:	lsr	r4, r8, #4
   13504:	and	r8, r8, #15
   13508:	str	r1, [fp, #-44]	; 0xffffffd4
   1350c:	lsr	r1, r9, #4
   13510:	and	r9, r9, #15
   13514:	str	r0, [fp, #-52]	; 0xffffffcc
   13518:	lsr	r0, sl, #4
   1351c:	and	sl, sl, #15
   13520:	lsr	r7, r2, #4
   13524:	str	r7, [sp, #96]	; 0x60
   13528:	str	sl, [sp, #100]	; 0x64
   1352c:	str	r0, [sp, #104]	; 0x68
   13530:	str	r9, [sp, #108]	; 0x6c
   13534:	str	r1, [sp, #112]	; 0x70
   13538:	str	r8, [sp, #116]	; 0x74
   1353c:	str	r4, [sp, #120]	; 0x78
   13540:	str	r5, [sp, #124]	; 0x7c
   13544:	and	r8, r2, #15
   13548:	lsr	r1, lr, #4
   1354c:	and	r2, lr, #15
   13550:	lsr	r7, ip, #4
   13554:	and	r5, ip, #15
   13558:	lsr	r4, r3, #4
   1355c:	and	r3, r3, #15
   13560:	mov	r0, r6
   13564:	lsr	r6, r6, #4
   13568:	str	r6, [sp, #64]	; 0x40
   1356c:	add	ip, sp, #68	; 0x44
   13570:	stm	ip, {r3, r4, r5, r7}
   13574:	str	r2, [sp, #84]	; 0x54
   13578:	str	r1, [sp, #88]	; 0x58
   1357c:	str	r8, [sp, #92]	; 0x5c
   13580:	and	ip, r0, #15
   13584:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13588:	lsr	r1, r0, #4
   1358c:	and	r2, r0, #15
   13590:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13594:	lsr	r3, r0, #4
   13598:	and	r7, r0, #15
   1359c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   135a0:	lsr	r6, r0, #4
   135a4:	and	r5, r0, #15
   135a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   135ac:	lsr	r4, r0, #4
   135b0:	add	lr, sp, #32
   135b4:	stm	lr, {r4, r5, r6, r7}
   135b8:	str	r3, [sp, #48]	; 0x30
   135bc:	str	r2, [sp, #52]	; 0x34
   135c0:	str	r1, [sp, #56]	; 0x38
   135c4:	str	ip, [sp, #60]	; 0x3c
   135c8:	and	ip, r0, #15
   135cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   135d0:	lsr	r1, r0, #4
   135d4:	and	r2, r0, #15
   135d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   135dc:	lsr	r3, r0, #4
   135e0:	and	r7, r0, #15
   135e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   135e8:	lsr	r6, r0, #4
   135ec:	and	r5, r0, #15
   135f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   135f4:	lsr	r4, r0, #4
   135f8:	stm	sp, {r4, r5, r6, r7}
   135fc:	str	r3, [sp, #16]
   13600:	str	r2, [sp, #20]
   13604:	str	r1, [sp, #24]
   13608:	str	ip, [sp, #28]
   1360c:	and	r3, r0, #15
   13610:	movw	r2, #36238	; 0x8d8e
   13614:	movt	r2, #1
   13618:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1361c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13620:	bl	1187c <snprintf@plt>
   13624:	sub	sp, fp, #28
   13628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1362c:	push	{r4, sl, fp, lr}
   13630:	add	fp, sp, #8
   13634:	mov	r4, r0
   13638:	mov	r0, r4
   1363c:	bl	13678 <sprintf@plt+0x1d84>
   13640:	cmp	r0, #0
   13644:	bne	13638 <sprintf@plt+0x1d44>
   13648:	movw	r2, #13868	; 0x362c
   1364c:	movt	r2, #1
   13650:	mov	r0, r4
   13654:	mov	r1, #1
   13658:	mov	r3, #0
   1365c:	pop	{r4, sl, fp, lr}
   13660:	b	1157c <rb_setselect@plt>
   13664:	push	{fp, lr}
   13668:	mov	fp, sp
   1366c:	bl	116f0 <rb_current_time@plt>
   13670:	pop	{fp, lr}
   13674:	b	1424c <sprintf@plt+0x2958>
   13678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1367c:	add	fp, sp, #28
   13680:	sub	sp, sp, #164	; 0xa4
   13684:	sub	sp, sp, #1024	; 0x400
   13688:	mov	r1, #128	; 0x80
   1368c:	str	r1, [sp, #140]	; 0x8c
   13690:	bl	11588 <rb_get_fd@plt>
   13694:	add	r1, sp, #140	; 0x8c
   13698:	add	r2, sp, #12
   1369c:	str	r2, [sp]
   136a0:	str	r1, [sp, #4]
   136a4:	add	sl, sp, #144	; 0x90
   136a8:	mov	r9, #0
   136ac:	mov	r1, sl
   136b0:	movw	r2, #1036	; 0x40c
   136b4:	mov	r3, #0
   136b8:	bl	118a0 <recvfrom@plt>
   136bc:	mov	r6, r0
   136c0:	add	r0, r0, #1
   136c4:	cmp	r0, #2
   136c8:	bcc	138b8 <sprintf@plt+0x1fc4>
   136cc:	mov	r9, #1
   136d0:	cmp	r6, #13
   136d4:	blt	138b8 <sprintf@plt+0x1fc4>
   136d8:	ldr	r8, [sp, #144]	; 0x90
   136dc:	ldr	r7, [sp, #148]	; 0x94
   136e0:	ldr	r4, [sp, #152]	; 0x98
   136e4:	lsr	r0, r7, #16
   136e8:	bl	138c4 <sprintf@plt+0x1fd0>
   136ec:	mov	r5, r0
   136f0:	uxth	r0, r7
   136f4:	bl	138c4 <sprintf@plt+0x1fd0>
   136f8:	orr	r7, r0, r5, lsl #16
   136fc:	uxth	r0, r4
   13700:	bl	138c4 <sprintf@plt+0x1fd0>
   13704:	mov	r5, r0
   13708:	lsr	r0, r4, #16
   1370c:	bl	138c4 <sprintf@plt+0x1fd0>
   13710:	str	r7, [sp, #148]	; 0x94
   13714:	str	r8, [sp, #144]	; 0x90
   13718:	orr	r0, r5, r0, lsl #16
   1371c:	str	r0, [sp, #152]	; 0x98
   13720:	uxth	r0, r8
   13724:	bl	138cc <sprintf@plt+0x1fd8>
   13728:	cmp	r0, #0
   1372c:	beq	138b8 <sprintf@plt+0x1fc4>
   13730:	mov	r5, r0
   13734:	add	r0, sp, #12
   13738:	bl	1390c <sprintf@plt+0x2018>
   1373c:	cmn	r0, #1
   13740:	beq	138b8 <sprintf@plt+0x1fc4>
   13744:	mov	r8, r0
   13748:	ldr	r0, [r5, #288]	; 0x120
   1374c:	cmp	r8, r0
   13750:	beq	13768 <sprintf@plt+0x1e74>
   13754:	movw	r0, #61360	; 0xefb0
   13758:	movt	r0, #2
   1375c:	ldr	r1, [r0, r8, lsl #2]
   13760:	add	r1, r1, #3
   13764:	str	r1, [r0, r8, lsl #2]
   13768:	add	r6, sl, r6
   1376c:	mov	r0, r5
   13770:	mov	r1, sl
   13774:	mov	r2, sl
   13778:	mov	r3, r6
   1377c:	bl	13a14 <sprintf@plt+0x2120>
   13780:	cmp	r0, #0
   13784:	beq	138b8 <sprintf@plt+0x1fc4>
   13788:	ldr	r0, [sp, #144]	; 0x90
   1378c:	tst	r0, #251658240	; 0xf000000
   13790:	bne	137f8 <sprintf@plt+0x1f04>
   13794:	ldr	r1, [sp, #148]	; 0x94
   13798:	bfc	r1, #0, #16
   1379c:	cmp	r1, #0
   137a0:	beq	137f8 <sprintf@plt+0x1f04>
   137a4:	add	r1, sp, #144	; 0x90
   137a8:	mov	r0, r5
   137ac:	mov	r2, r1
   137b0:	mov	r3, r6
   137b4:	bl	13b20 <sprintf@plt+0x222c>
   137b8:	cmp	r0, #0
   137bc:	beq	13818 <sprintf@plt+0x1f24>
   137c0:	ldrb	r0, [r5, #20]
   137c4:	cmp	r0, #12
   137c8:	bne	13838 <sprintf@plt+0x1f44>
   137cc:	ldr	r0, [r5, #420]	; 0x1a4
   137d0:	cmp	r0, #0
   137d4:	beq	13818 <sprintf@plt+0x1f24>
   137d8:	mov	r1, #292	; 0x124
   137dc:	ldrh	r1, [r5, r1]
   137e0:	mov	r2, #1
   137e4:	cmp	r1, #10
   137e8:	movweq	r2, #28
   137ec:	ldr	r1, [r5, #424]	; 0x1a8
   137f0:	bl	13380 <sprintf@plt+0x1a8c>
   137f4:	b	1385c <sprintf@plt+0x1f68>
   137f8:	ubfx	r0, r0, #24, #4
   137fc:	sub	r1, r0, #4
   13800:	cmp	r1, #2
   13804:	bcc	13818 <sprintf@plt+0x1f24>
   13808:	cmp	r0, #3
   1380c:	beq	13884 <sprintf@plt+0x1f90>
   13810:	cmp	r0, #2
   13814:	bne	138a0 <sprintf@plt+0x1fac>
   13818:	movw	r0, #61360	; 0xefb0
   1381c:	movt	r0, #2
   13820:	ldr	r1, [r0, r8, lsl #2]
   13824:	add	r1, r1, #1
   13828:	str	r1, [r0, r8, lsl #2]
   1382c:	mov	r0, r5
   13830:	bl	13a80 <sprintf@plt+0x218c>
   13834:	b	138b8 <sprintf@plt+0x1fc4>
   13838:	mov	r0, r5
   1383c:	bl	13d30 <sprintf@plt+0x243c>
   13840:	mov	r6, r0
   13844:	ldr	r1, [r5, #424]	; 0x1a8
   13848:	ldm	r1, {r0, r2}
   1384c:	mov	r1, r6
   13850:	blx	r2
   13854:	mov	r0, r6
   13858:	bl	13dc0 <sprintf@plt+0x24cc>
   1385c:	mov	r0, r5
   13860:	bl	13afc <sprintf@plt+0x2208>
   13864:	movw	r0, #61360	; 0xefb0
   13868:	movt	r0, #2
   1386c:	ldr	r1, [r0, r8, lsl #2]
   13870:	asr	r2, r1, #31
   13874:	add	r1, r1, r2, lsr #30
   13878:	asr	r1, r1, #2
   1387c:	str	r1, [r0, r8, lsl #2]
   13880:	b	138b8 <sprintf@plt+0x1fc4>
   13884:	movw	r0, #61360	; 0xefb0
   13888:	movt	r0, #2
   1388c:	ldr	r1, [r0, r8, lsl #2]
   13890:	asr	r2, r1, #31
   13894:	add	r1, r1, r2, lsr #30
   13898:	asr	r1, r1, #2
   1389c:	str	r1, [r0, r8, lsl #2]
   138a0:	ldr	r1, [r5, #424]	; 0x1a8
   138a4:	ldm	r1, {r0, r2}
   138a8:	mov	r1, #0
   138ac:	blx	r2
   138b0:	mov	r0, r5
   138b4:	bl	13afc <sprintf@plt+0x2208>
   138b8:	mov	r0, r9
   138bc:	sub	sp, fp, #28
   138c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138c4:	rev16	r0, r0
   138c8:	bx	lr
   138cc:	movw	r1, #61400	; 0xefd8
   138d0:	movt	r1, #2
   138d4:	ldr	r2, [r1]
   138d8:	cmp	r2, #0
   138dc:	beq	13900 <sprintf@plt+0x200c>
   138e0:	ldr	r1, [r2]
   138e4:	ldr	r3, [r1, #12]
   138e8:	cmp	r3, r0
   138ec:	moveq	r0, r1
   138f0:	bxeq	lr
   138f4:	ldr	r2, [r2, #8]
   138f8:	cmp	r2, #0
   138fc:	bne	138e0 <sprintf@plt+0x1fec>
   13900:	mov	r1, #0
   13904:	mov	r0, r1
   13908:	bx	lr
   1390c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13910:	add	fp, sp, #28
   13914:	sub	sp, sp, #4
   13918:	mov	r4, r0
   1391c:	movw	r0, #61416	; 0xefe8
   13920:	movt	r0, #2
   13924:	ldr	r1, [r0]
   13928:	cmp	r1, #1
   1392c:	blt	13a04 <sprintf@plt+0x2110>
   13930:	movw	r1, #62120	; 0xf2a8
   13934:	movt	r1, #2
   13938:	add	r5, r1, #4
   1393c:	add	r9, r4, #8
   13940:	ldr	sl, [r0]
   13944:	mov	r8, #0
   13948:	b	1395c <sprintf@plt+0x2068>
   1394c:	add	r5, r5, #128	; 0x80
   13950:	add	r8, r8, #1
   13954:	cmp	r8, sl
   13958:	bge	13a04 <sprintf@plt+0x2110>
   1395c:	ldrh	r0, [r5, #-4]
   13960:	cmp	r0, #2
   13964:	beq	139cc <sprintf@plt+0x20d8>
   13968:	cmp	r0, #10
   1396c:	bne	1394c <sprintf@plt+0x2058>
   13970:	ldrh	r1, [r4]
   13974:	cmp	r0, r1
   13978:	bne	1394c <sprintf@plt+0x2058>
   1397c:	ldrh	r0, [r4, #2]
   13980:	ldrh	r1, [r5, #-2]
   13984:	cmp	r1, r0
   13988:	bne	1394c <sprintf@plt+0x2058>
   1398c:	add	r6, r5, #4
   13990:	mov	r0, r6
   13994:	mov	r1, r9
   13998:	mov	r2, #16
   1399c:	bl	11720 <bcmp@plt>
   139a0:	mov	r7, #1
   139a4:	cmp	r0, #0
   139a8:	beq	13a08 <sprintf@plt+0x2114>
   139ac:	mov	r0, r6
   139b0:	movw	r1, #40680	; 0x9ee8
   139b4:	movt	r1, #2
   139b8:	mov	r2, #16
   139bc:	bl	11720 <bcmp@plt>
   139c0:	cmp	r0, #0
   139c4:	bne	1394c <sprintf@plt+0x2058>
   139c8:	b	13a08 <sprintf@plt+0x2114>
   139cc:	ldrh	r1, [r4]
   139d0:	cmp	r0, r1
   139d4:	bne	1394c <sprintf@plt+0x2058>
   139d8:	ldrh	r0, [r4, #2]
   139dc:	ldrh	r1, [r5, #-2]
   139e0:	cmp	r1, r0
   139e4:	bne	1394c <sprintf@plt+0x2058>
   139e8:	ldr	r0, [r5]
   139ec:	mov	r7, #1
   139f0:	cmp	r0, #0
   139f4:	ldrne	r1, [r4, #4]
   139f8:	cmpne	r0, r1
   139fc:	beq	13a08 <sprintf@plt+0x2114>
   13a00:	b	1394c <sprintf@plt+0x2058>
   13a04:	mov	r7, #0
   13a08:	mov	r0, r7
   13a0c:	sub	sp, fp, #28
   13a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a14:	push	{r4, r5, r6, sl, fp, lr}
   13a18:	add	fp, sp, #16
   13a1c:	sub	sp, sp, #264	; 0x108
   13a20:	mov	r6, r0
   13a24:	ldrh	r0, [r1, #4]
   13a28:	mov	r4, #0
   13a2c:	teq	r0, #1
   13a30:	bne	13a74 <sprintf@plt+0x2180>
   13a34:	mov	r0, #256	; 0x100
   13a38:	str	r0, [sp]
   13a3c:	add	r5, r2, #12
   13a40:	add	ip, sp, #8
   13a44:	mov	r0, r2
   13a48:	mov	r1, r3
   13a4c:	mov	r2, r5
   13a50:	mov	r3, ip
   13a54:	bl	1452c <sprintf@plt+0x2c38>
   13a58:	cmp	r0, #1
   13a5c:	blt	13a74 <sprintf@plt+0x2180>
   13a60:	add	r1, r6, #21
   13a64:	add	r0, sp, #8
   13a68:	bl	116b4 <rb_strcasecmp@plt>
   13a6c:	clz	r0, r0
   13a70:	lsr	r4, r0, #5
   13a74:	mov	r0, r4
   13a78:	sub	sp, fp, #16
   13a7c:	pop	{r4, r5, r6, sl, fp, pc}
   13a80:	push	{r4, sl, fp, lr}
   13a84:	add	fp, sp, #8
   13a88:	mov	r4, r0
   13a8c:	ldrb	r0, [r0, #277]	; 0x115
   13a90:	sub	r0, r0, #1
   13a94:	strb	r0, [r4, #277]	; 0x115
   13a98:	tst	r0, #255	; 0xff
   13a9c:	beq	13ac4 <sprintf@plt+0x21d0>
   13aa0:	ldrb	r3, [r4, #20]
   13aa4:	cmp	r3, #1
   13aa8:	cmpne	r3, #28
   13aac:	bne	13ae0 <sprintf@plt+0x21ec>
   13ab0:	ldr	r1, [r4, #420]	; 0x1a4
   13ab4:	mov	r0, #0
   13ab8:	mov	r2, r4
   13abc:	pop	{r4, sl, fp, lr}
   13ac0:	b	13dcc <sprintf@plt+0x24d8>
   13ac4:	ldr	r1, [r4, #424]	; 0x1a8
   13ac8:	ldm	r1, {r0, r2}
   13acc:	mov	r1, #0
   13ad0:	blx	r2
   13ad4:	mov	r0, r4
   13ad8:	pop	{r4, sl, fp, lr}
   13adc:	b	13afc <sprintf@plt+0x2208>
   13ae0:	cmp	r3, #12
   13ae4:	popne	{r4, sl, fp, pc}
   13ae8:	add	r1, r4, #292	; 0x124
   13aec:	mov	r0, #0
   13af0:	mov	r2, r4
   13af4:	pop	{r4, sl, fp, lr}
   13af8:	b	133dc <sprintf@plt+0x1ae8>
   13afc:	push	{r4, sl, fp, lr}
   13b00:	add	fp, sp, #8
   13b04:	mov	r4, r0
   13b08:	bl	141d0 <sprintf@plt+0x28dc>
   13b0c:	ldr	r0, [r4, #420]	; 0x1a4
   13b10:	bl	13dc0 <sprintf@plt+0x24cc>
   13b14:	mov	r0, r4
   13b18:	pop	{r4, sl, fp, lr}
   13b1c:	b	13dc0 <sprintf@plt+0x24cc>
   13b20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b24:	add	fp, sp, #28
   13b28:	sub	sp, sp, #372	; 0x174
   13b2c:	mov	r9, r3
   13b30:	mov	r4, r1
   13b34:	stmib	sp, {r0, r2}
   13b38:	add	r5, r2, #12
   13b3c:	ldrh	r0, [r1, #4]
   13b40:	cmp	r0, #0
   13b44:	beq	13b80 <sprintf@plt+0x228c>
   13b48:	movw	r7, #65535	; 0xffff
   13b4c:	mov	r0, r5
   13b50:	mov	r1, r9
   13b54:	bl	145bc <sprintf@plt+0x2cc8>
   13b58:	cmp	r0, #0
   13b5c:	bmi	13d20 <sprintf@plt+0x242c>
   13b60:	ldr	r1, [r4, #4]
   13b64:	sub	r2, r1, #1
   13b68:	pkhbt	r1, r2, r1
   13b6c:	str	r1, [r4, #4]
   13b70:	add	r0, r0, r5
   13b74:	add	r5, r0, #4
   13b78:	tst	r2, r7
   13b7c:	bne	13b4c <sprintf@plt+0x2258>
   13b80:	cmp	r5, r9
   13b84:	bcs	13d18 <sprintf@plt+0x2424>
   13b88:	ldr	r1, [r4, #4]
   13b8c:	ldr	r0, [r4, #8]
   13b90:	lsr	r2, r1, #16
   13b94:	orr	r3, r2, r0, lsl #16
   13b98:	uxth	r2, r3
   13b9c:	cmp	r2, #0
   13ba0:	beq	13d18 <sprintf@plt+0x2424>
   13ba4:	ldr	r2, [r4]
   13ba8:	mov	r6, #0
   13bac:	sub	r3, r3, #1
   13bb0:	pkhbt	r1, r1, r3, lsl #16
   13bb4:	str	r2, [r4]
   13bb8:	str	r1, [r4, #4]
   13bbc:	str	r0, [r4, #8]
   13bc0:	movw	r0, #355	; 0x163
   13bc4:	str	r0, [sp]
   13bc8:	ldr	r0, [sp, #8]
   13bcc:	mov	r1, r9
   13bd0:	mov	r2, r5
   13bd4:	add	r3, sp, #13
   13bd8:	bl	1452c <sprintf@plt+0x2c38>
   13bdc:	cmp	r0, #1
   13be0:	blt	13d24 <sprintf@plt+0x2430>
   13be4:	strb	r6, [sp, #268]	; 0x10c
   13be8:	add	r8, r5, r0
   13bec:	add	r5, r8, #10
   13bf0:	cmp	r5, r9
   13bf4:	bcs	13d18 <sprintf@plt+0x2424>
   13bf8:	mov	r0, r8
   13bfc:	bl	14694 <sprintf@plt+0x2da0>
   13c00:	mov	sl, r0
   13c04:	add	r0, r8, #2
   13c08:	bl	14694 <sprintf@plt+0x2da0>
   13c0c:	add	r0, r8, #4
   13c10:	bl	146a4 <sprintf@plt+0x2db0>
   13c14:	ldr	r7, [sp, #4]
   13c18:	str	r0, [r7, #16]
   13c1c:	add	r0, r8, #8
   13c20:	bl	14694 <sprintf@plt+0x2da0>
   13c24:	cmp	sl, #28
   13c28:	beq	13c70 <sprintf@plt+0x237c>
   13c2c:	cmp	sl, #12
   13c30:	beq	13ca4 <sprintf@plt+0x23b0>
   13c34:	cmp	sl, #1
   13c38:	beq	13cec <sprintf@plt+0x23f8>
   13c3c:	add	r5, r5, r0
   13c40:	cmp	r5, r9
   13c44:	bcs	13d18 <sprintf@plt+0x2424>
   13c48:	ldr	r2, [r4]
   13c4c:	ldr	r1, [r4, #4]
   13c50:	ldr	r0, [r4, #8]
   13c54:	lsr	r3, r1, #16
   13c58:	orr	r3, r3, r0, lsl #16
   13c5c:	uxth	r7, r3
   13c60:	cmp	r7, #0
   13c64:	mov	r6, #0
   13c68:	bne	13bac <sprintf@plt+0x22b8>
   13c6c:	b	13d18 <sprintf@plt+0x2424>
   13c70:	cmp	r0, #16
   13c74:	bne	13d20 <sprintf@plt+0x242c>
   13c78:	ldrb	r0, [r7, #20]
   13c7c:	cmp	r0, #28
   13c80:	mov	r6, #0
   13c84:	bne	13d24 <sprintf@plt+0x2430>
   13c88:	mov	r0, #292	; 0x124
   13c8c:	mov	r1, #10
   13c90:	strh	r1, [r7, r0]!
   13c94:	vld1.8	{d16-d17}, [r5]
   13c98:	add	r0, r7, #8
   13c9c:	vst1.8	{d16-d17}, [r0]
   13ca0:	b	13d18 <sprintf@plt+0x2424>
   13ca4:	ldrb	r0, [r7, #20]
   13ca8:	cmp	r0, #12
   13cac:	bne	13d20 <sprintf@plt+0x242c>
   13cb0:	movw	r0, #355	; 0x163
   13cb4:	str	r0, [sp]
   13cb8:	add	r3, sp, #13
   13cbc:	ldr	r0, [sp, #8]
   13cc0:	mov	r1, r9
   13cc4:	mov	r2, r5
   13cc8:	bl	1452c <sprintf@plt+0x2c38>
   13ccc:	cmp	r0, #1
   13cd0:	mov	r6, #0
   13cd4:	blt	13d24 <sprintf@plt+0x2430>
   13cd8:	ldr	r0, [r7, #420]	; 0x1a4
   13cdc:	add	r1, sp, #13
   13ce0:	mov	r2, #256	; 0x100
   13ce4:	bl	1166c <rb_strlcpy@plt>
   13ce8:	b	13d18 <sprintf@plt+0x2424>
   13cec:	cmp	r0, #4
   13cf0:	bne	13d20 <sprintf@plt+0x242c>
   13cf4:	ldrb	r0, [r7, #20]
   13cf8:	cmp	r0, #1
   13cfc:	mov	r6, #0
   13d00:	bne	13d24 <sprintf@plt+0x2430>
   13d04:	mov	r0, #292	; 0x124
   13d08:	mov	r1, #2
   13d0c:	strh	r1, [r7, r0]!
   13d10:	ldr	r0, [r5]
   13d14:	str	r0, [r7, #4]
   13d18:	mov	r6, #1
   13d1c:	b	13d24 <sprintf@plt+0x2430>
   13d20:	mov	r6, #0
   13d24:	mov	r0, r6
   13d28:	sub	sp, fp, #28
   13d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d30:	push	{r4, r5, fp, lr}
   13d34:	add	fp, sp, #8
   13d38:	sub	sp, sp, #8
   13d3c:	cmp	r0, #0
   13d40:	beq	13d74 <sprintf@plt+0x2480>
   13d44:	mov	r4, r0
   13d48:	mov	r0, #132	; 0x84
   13d4c:	bl	13f24 <sprintf@plt+0x2630>
   13d50:	mov	r5, r0
   13d54:	ldr	r1, [r4, #420]	; 0x1a4
   13d58:	str	r1, [r0], #4
   13d5c:	add	r1, r4, #292	; 0x124
   13d60:	mov	r2, #128	; 0x80
   13d64:	bl	11708 <memcpy@plt>
   13d68:	mov	r0, r5
   13d6c:	sub	sp, fp, #8
   13d70:	pop	{r4, r5, fp, pc}
   13d74:	movw	r0, #36479	; 0x8e7f
   13d78:	movt	r0, #1
   13d7c:	str	r0, [sp]
   13d80:	movw	r0, #36383	; 0x8e1f
   13d84:	movt	r0, #1
   13d88:	movw	r4, #36141	; 0x8d2d
   13d8c:	movt	r4, #1
   13d90:	movw	r5, #36430	; 0x8e4e
   13d94:	movt	r5, #1
   13d98:	mov	r1, r4
   13d9c:	movw	r2, #878	; 0x36e
   13da0:	mov	r3, r5
   13da4:	bl	11780 <rb_lib_log@plt>
   13da8:	movw	r0, #36492	; 0x8e8c
   13dac:	movt	r0, #1
   13db0:	mov	r1, r4
   13db4:	movw	r2, #878	; 0x36e
   13db8:	mov	r3, r5
   13dbc:	bl	11654 <__assert_fail@plt>
   13dc0:	cmp	r0, #0
   13dc4:	bxeq	lr
   13dc8:	b	11690 <free@plt>
   13dcc:	push	{r4, r5, r6, sl, fp, lr}
   13dd0:	add	fp, sp, #16
   13dd4:	mov	r4, r3
   13dd8:	mov	r5, r2
   13ddc:	mov	r6, r1
   13de0:	cmp	r2, #0
   13de4:	bne	13dfc <sprintf@plt+0x2508>
   13de8:	bl	13e1c <sprintf@plt+0x2528>
   13dec:	mov	r5, r0
   13df0:	mov	r0, r6
   13df4:	bl	13e6c <sprintf@plt+0x2578>
   13df8:	str	r0, [r5, #420]	; 0x1a4
   13dfc:	add	r0, r5, #21
   13e00:	mov	r1, r6
   13e04:	mov	r2, #256	; 0x100
   13e08:	bl	1166c <rb_strlcpy@plt>
   13e0c:	strb	r4, [r5, #20]
   13e10:	mov	r0, r5
   13e14:	pop	{r4, r5, r6, sl, fp, lr}
   13e18:	b	13e9c <sprintf@plt+0x25a8>
   13e1c:	push	{r4, r5, fp, lr}
   13e20:	add	fp, sp, #8
   13e24:	mov	r4, r0
   13e28:	mov	r0, #428	; 0x1ac
   13e2c:	bl	13f24 <sprintf@plt+0x2630>
   13e30:	mov	r5, r0
   13e34:	bl	116f0 <rb_current_time@plt>
   13e38:	str	r4, [r5, #424]	; 0x1a8
   13e3c:	mov	r1, #4
   13e40:	str	r0, [r5, #280]	; 0x118
   13e44:	str	r1, [r5, #284]	; 0x11c
   13e48:	mov	r0, #3
   13e4c:	strb	r0, [r5, #277]	; 0x115
   13e50:	bl	13f44 <sprintf@plt+0x2650>
   13e54:	str	r0, [r5, #12]
   13e58:	mov	r0, r5
   13e5c:	mov	r1, r5
   13e60:	bl	13f80 <sprintf@plt+0x268c>
   13e64:	mov	r0, r5
   13e68:	pop	{r4, r5, fp, pc}
   13e6c:	push	{r4, sl, fp, lr}
   13e70:	add	fp, sp, #8
   13e74:	mov	r4, r0
   13e78:	bl	116e4 <strlen@plt>
   13e7c:	add	r0, r0, #1
   13e80:	bl	117ec <malloc@plt>
   13e84:	cmp	r0, #0
   13e88:	beq	13e98 <sprintf@plt+0x25a4>
   13e8c:	mov	r1, r4
   13e90:	pop	{r4, sl, fp, lr}
   13e94:	b	11750 <strcpy@plt>
   13e98:	bl	117bc <rb_outofmemory@plt>
   13e9c:	push	{r4, r5, r6, sl, fp, lr}
   13ea0:	add	fp, sp, #16
   13ea4:	sub	sp, sp, #8
   13ea8:	sub	sp, sp, #1024	; 0x400
   13eac:	mov	r4, r0
   13eb0:	add	r5, sp, #8
   13eb4:	mov	r6, #1024	; 0x400
   13eb8:	mov	r0, r5
   13ebc:	mov	r1, #0
   13ec0:	mov	r2, #1024	; 0x400
   13ec4:	bl	11624 <memset@plt>
   13ec8:	ldrb	r2, [r4, #20]
   13ecc:	str	r6, [sp]
   13ed0:	add	r0, r4, #21
   13ed4:	mov	r1, #1
   13ed8:	mov	r3, r5
   13edc:	bl	146c8 <sprintf@plt+0x2dd4>
   13ee0:	cmp	r0, #1
   13ee4:	blt	13f1c <sprintf@plt+0x2628>
   13ee8:	mov	r1, r0
   13eec:	ldrh	r0, [r4, #12]
   13ef0:	ldrh	r2, [sp, #10]
   13ef4:	orr	r0, r0, r2, lsl #16
   13ef8:	str	r0, [sp, #8]
   13efc:	ldrb	r0, [r4, #278]	; 0x116
   13f00:	add	r0, r0, #1
   13f04:	strb	r0, [r4, #278]	; 0x116
   13f08:	uxtb	r2, r0
   13f0c:	add	r0, sp, #8
   13f10:	bl	14028 <sprintf@plt+0x2734>
   13f14:	cmn	r0, #1
   13f18:	strne	r0, [r4, #288]	; 0x120
   13f1c:	sub	sp, fp, #16
   13f20:	pop	{r4, r5, r6, sl, fp, pc}
   13f24:	push	{fp, lr}
   13f28:	mov	fp, sp
   13f2c:	mov	r1, r0
   13f30:	mov	r0, #1
   13f34:	bl	115f4 <calloc@plt>
   13f38:	cmp	r0, #0
   13f3c:	popne	{fp, pc}
   13f40:	bl	117bc <rb_outofmemory@plt>
   13f44:	push	{r4, r5, fp, lr}
   13f48:	add	fp, sp, #8
   13f4c:	sub	sp, sp, #8
   13f50:	add	r4, sp, #6
   13f54:	mov	r0, r4
   13f58:	mov	r1, #2
   13f5c:	bl	11864 <rb_get_random@plt>
   13f60:	ldrh	r5, [sp, #6]
   13f64:	mov	r0, r5
   13f68:	bl	138cc <sprintf@plt+0x1fd8>
   13f6c:	cmp	r0, #0
   13f70:	bne	13f54 <sprintf@plt+0x2660>
   13f74:	mov	r0, r5
   13f78:	sub	sp, fp, #8
   13f7c:	pop	{r4, r5, fp, pc}
   13f80:	push	{fp, lr}
   13f84:	mov	fp, sp
   13f88:	cmp	r0, #0
   13f8c:	beq	13fe8 <sprintf@plt+0x26f4>
   13f90:	cmp	r1, #0
   13f94:	beq	14008 <sprintf@plt+0x2714>
   13f98:	mov	r2, #0
   13f9c:	stm	r1, {r0, r2}
   13fa0:	movw	r0, #61400	; 0xefd8
   13fa4:	movt	r0, #2
   13fa8:	ldr	r2, [r0]
   13fac:	str	r2, [r1, #8]
   13fb0:	cmp	r2, #0
   13fb4:	beq	13fc4 <sprintf@plt+0x26d0>
   13fb8:	add	r2, r2, #4
   13fbc:	str	r1, [r2]
   13fc0:	b	13fd4 <sprintf@plt+0x26e0>
   13fc4:	mov	r2, r0
   13fc8:	ldr	r3, [r2, #4]!
   13fcc:	cmp	r3, #0
   13fd0:	streq	r1, [r2]
   13fd4:	str	r1, [r0]
   13fd8:	ldr	r1, [r0, #8]
   13fdc:	add	r1, r1, #1
   13fe0:	str	r1, [r0, #8]
   13fe4:	pop	{fp, pc}
   13fe8:	movw	r0, #36007	; 0x8ca7
   13fec:	movt	r0, #1
   13ff0:	movw	r1, #35912	; 0x8c48
   13ff4:	movt	r1, #1
   13ff8:	movw	r3, #36020	; 0x8cb4
   13ffc:	movt	r3, #1
   14000:	mov	r2, #143	; 0x8f
   14004:	bl	11654 <__assert_fail@plt>
   14008:	movw	r0, #37219	; 0x9163
   1400c:	movt	r0, #1
   14010:	movw	r1, #35912	; 0x8c48
   14014:	movt	r1, #1
   14018:	movw	r3, #36020	; 0x8cb4
   1401c:	movt	r3, #1
   14020:	mov	r2, #144	; 0x90
   14024:	bl	11654 <__assert_fail@plt>
   14028:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1402c:	add	fp, sp, #28
   14030:	sub	sp, sp, #12
   14034:	mov	r4, r1
   14038:	mov	r9, r0
   1403c:	movw	r1, #61412	; 0xefe4
   14040:	movt	r1, #2
   14044:	ldr	r0, [r1]
   14048:	add	r0, r0, #1
   1404c:	str	r0, [r1]
   14050:	movw	r8, #61416	; 0xefe8
   14054:	movt	r8, #2
   14058:	ldr	r0, [r8]
   1405c:	cmp	r0, #1
   14060:	blt	141a0 <sprintf@plt+0x28ac>
   14064:	sub	r7, r2, #1
   14068:	mov	sl, #0
   1406c:	b	140cc <sprintf@plt+0x27d8>
   14070:	movw	r0, #61352	; 0xefa8
   14074:	movt	r0, #2
   14078:	ldr	r0, [r0]
   1407c:	bl	11588 <rb_get_fd@plt>
   14080:	lsl	r1, r6, #7
   14084:	movw	r2, #62120	; 0xf2a8
   14088:	movt	r2, #2
   1408c:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   14090:	cmp	r1, #2
   14094:	mov	r1, #28
   14098:	movweq	r1, #16
   1409c:	str	r2, [sp]
   140a0:	str	r1, [sp, #4]
   140a4:	mov	r1, r9
   140a8:	mov	r2, r4
   140ac:	mov	r3, #0
   140b0:	bl	1160c <sendto@plt>
   140b4:	cmp	r0, r4
   140b8:	beq	141a4 <sprintf@plt+0x28b0>
   140bc:	add	sl, sl, #1
   140c0:	ldr	r0, [r8]
   140c4:	cmp	sl, r0
   140c8:	bge	14110 <sprintf@plt+0x281c>
   140cc:	add	r1, r7, sl
   140d0:	sdiv	r2, r1, r0
   140d4:	mls	r6, r2, r0, r1
   140d8:	movw	r0, #61360	; 0xefb0
   140dc:	movt	r0, #2
   140e0:	ldr	r0, [r0, r6, lsl #2]
   140e4:	cmp	r0, #0
   140e8:	beq	14070 <sprintf@plt+0x277c>
   140ec:	movw	r1, #61412	; 0xefe4
   140f0:	movt	r1, #2
   140f4:	ldr	r5, [r1]
   140f8:	bl	141b0 <sprintf@plt+0x28bc>
   140fc:	sdiv	r1, r5, r0
   14100:	mls	r0, r1, r0, r5
   14104:	cmp	r0, #0
   14108:	bne	140bc <sprintf@plt+0x27c8>
   1410c:	b	14070 <sprintf@plt+0x277c>
   14110:	cmp	r0, #1
   14114:	blt	141a0 <sprintf@plt+0x28ac>
   14118:	mov	r5, #0
   1411c:	b	14130 <sprintf@plt+0x283c>
   14120:	add	r5, r5, #1
   14124:	ldr	r0, [r8]
   14128:	cmp	r5, r0
   1412c:	bge	141a0 <sprintf@plt+0x28ac>
   14130:	add	r1, r7, r5
   14134:	sdiv	r2, r1, r0
   14138:	mls	r6, r2, r0, r1
   1413c:	movw	r0, #61360	; 0xefb0
   14140:	movt	r0, #2
   14144:	ldr	r0, [r0, r6, lsl #2]
   14148:	cmp	r0, #0
   1414c:	beq	14120 <sprintf@plt+0x282c>
   14150:	movw	r0, #61352	; 0xefa8
   14154:	movt	r0, #2
   14158:	ldr	r0, [r0]
   1415c:	bl	11588 <rb_get_fd@plt>
   14160:	lsl	r1, r6, #7
   14164:	movw	r2, #62120	; 0xf2a8
   14168:	movt	r2, #2
   1416c:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   14170:	cmp	r1, #2
   14174:	mov	r1, #28
   14178:	movweq	r1, #16
   1417c:	str	r2, [sp]
   14180:	str	r1, [sp, #4]
   14184:	mov	r1, r9
   14188:	mov	r2, r4
   1418c:	mov	r3, #0
   14190:	bl	1160c <sendto@plt>
   14194:	cmp	r0, r4
   14198:	bne	14120 <sprintf@plt+0x282c>
   1419c:	b	141a4 <sprintf@plt+0x28b0>
   141a0:	mvn	r6, #0
   141a4:	mov	r0, r6
   141a8:	sub	sp, fp, #28
   141ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141b0:	sub	r0, r0, #1
   141b4:	cmp	r0, #3
   141b8:	movhi	r0, #243	; 0xf3
   141bc:	bxhi	lr
   141c0:	movw	r1, #36588	; 0x8eec
   141c4:	movt	r1, #1
   141c8:	ldr	r0, [r1, r0, lsl #2]
   141cc:	bx	lr
   141d0:	push	{fp, lr}
   141d4:	mov	fp, sp
   141d8:	cmp	r0, #0
   141dc:	beq	1422c <sprintf@plt+0x2938>
   141e0:	movw	ip, #61400	; 0xefd8
   141e4:	movt	ip, #2
   141e8:	ldmib	r0, {r2, r3}
   141ec:	add	r1, r3, #4
   141f0:	cmp	r3, #0
   141f4:	addeq	r1, ip, #4
   141f8:	str	r2, [r1]
   141fc:	ldmib	r0, {r1, r2}
   14200:	cmp	r1, #0
   14204:	mov	r3, ip
   14208:	addne	r3, r1, #8
   1420c:	str	r2, [r3]
   14210:	mov	r1, #0
   14214:	str	r1, [r0, #4]
   14218:	str	r1, [r0, #8]
   1421c:	ldr	r0, [ip, #8]
   14220:	sub	r0, r0, #1
   14224:	str	r0, [ip, #8]
   14228:	pop	{fp, pc}
   1422c:	movw	r0, #37219	; 0x9163
   14230:	movt	r0, #1
   14234:	movw	r1, #35912	; 0x8c48
   14238:	movt	r1, #1
   1423c:	movw	r3, #35940	; 0x8c64
   14240:	movt	r3, #1
   14244:	mov	r2, #235	; 0xeb
   14248:	bl	11654 <__assert_fail@plt>
   1424c:	push	{r4, r5, r6, sl, fp, lr}
   14250:	add	fp, sp, #16
   14254:	mov	r4, r0
   14258:	movw	r0, #61400	; 0xefd8
   1425c:	movt	r0, #2
   14260:	ldr	r5, [r0]
   14264:	cmp	r5, #0
   14268:	beq	142c0 <sprintf@plt+0x29cc>
   1426c:	movw	r6, #61360	; 0xefb0
   14270:	movt	r6, #2
   14274:	b	14280 <sprintf@plt+0x298c>
   14278:	cmp	r5, #0
   1427c:	beq	142c0 <sprintf@plt+0x29cc>
   14280:	ldr	r0, [r5]
   14284:	ldr	r5, [r5, #8]
   14288:	ldr	r2, [r0, #280]	; 0x118
   1428c:	ldr	r1, [r0, #284]	; 0x11c
   14290:	add	r2, r1, r2
   14294:	cmp	r2, r4
   14298:	bgt	14278 <sprintf@plt+0x2984>
   1429c:	ldr	r2, [r0, #288]	; 0x120
   142a0:	ldr	r3, [r6, r2, lsl #2]
   142a4:	add	r3, r3, #1
   142a8:	str	r3, [r6, r2, lsl #2]
   142ac:	lsl	r1, r1, #1
   142b0:	str	r4, [r0, #280]	; 0x118
   142b4:	str	r1, [r0, #284]	; 0x11c
   142b8:	bl	13a80 <sprintf@plt+0x218c>
   142bc:	b	14278 <sprintf@plt+0x2984>
   142c0:	pop	{r4, r5, r6, sl, fp, pc}
   142c4:	push	{r4, sl, fp, lr}
   142c8:	add	fp, sp, #8
   142cc:	movw	r4, #61416	; 0xefe8
   142d0:	movt	r4, #2
   142d4:	mov	r0, #0
   142d8:	str	r0, [r4]
   142dc:	bl	14308 <sprintf@plt+0x2a14>
   142e0:	ldr	r0, [r4]
   142e4:	cmp	r0, #0
   142e8:	beq	142f4 <sprintf@plt+0x2a00>
   142ec:	mov	r0, #0
   142f0:	pop	{r4, sl, fp, pc}
   142f4:	movw	r0, #36604	; 0x8efc
   142f8:	movt	r0, #1
   142fc:	bl	1448c <sprintf@plt+0x2b98>
   14300:	mov	r0, #0
   14304:	pop	{r4, sl, fp, pc}
   14308:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1430c:	add	fp, sp, #28
   14310:	sub	sp, sp, #132	; 0x84
   14314:	movw	r0, #36614	; 0x8f06
   14318:	movt	r0, #1
   1431c:	movw	r1, #38283	; 0x958b
   14320:	movt	r1, #1
   14324:	bl	11618 <fopen@plt>
   14328:	cmp	r0, #0
   1432c:	beq	14484 <sprintf@plt+0x2b90>
   14330:	mov	r4, r0
   14334:	add	r5, sp, #4
   14338:	mov	r0, r5
   1433c:	mov	r1, #128	; 0x80
   14340:	mov	r2, r4
   14344:	bl	11660 <fgets_unlocked@plt>
   14348:	cmp	r0, #0
   1434c:	beq	1447c <sprintf@plt+0x2b88>
   14350:	sub	r9, r5, #1
   14354:	bl	117c8 <__ctype_b_loc@plt>
   14358:	mov	r6, r0
   1435c:	movw	r7, #38917	; 0x9805
   14360:	movt	r7, #1
   14364:	b	14394 <sprintf@plt+0x2aa0>
   14368:	movw	r0, #61864	; 0xf1a8
   1436c:	movt	r0, #2
   14370:	mov	r1, r8
   14374:	mov	r2, #256	; 0x100
   14378:	bl	1166c <rb_strlcpy@plt>
   1437c:	mov	r0, r5
   14380:	mov	r1, #128	; 0x80
   14384:	mov	r2, r4
   14388:	bl	11660 <fgets_unlocked@plt>
   1438c:	cmp	r0, #0
   14390:	beq	1447c <sprintf@plt+0x2b88>
   14394:	mov	r0, r5
   14398:	mov	r1, r7
   1439c:	bl	118b8 <strpbrk@plt>
   143a0:	cmp	r0, #0
   143a4:	movne	r1, #0
   143a8:	strbne	r1, [r0]
   143ac:	ldr	r0, [r6]
   143b0:	mov	sl, r9
   143b4:	mov	r8, sl
   143b8:	ldrb	r1, [sl, #1]!
   143bc:	add	r2, r0, r1, lsl #1
   143c0:	ldrb	r2, [r2, #1]
   143c4:	tst	r2, #32
   143c8:	bne	143b4 <sprintf@plt+0x2ac0>
   143cc:	cmp	r1, #0
   143d0:	cmpne	r1, #35	; 0x23
   143d4:	beq	1437c <sprintf@plt+0x2a88>
   143d8:	cmp	r1, #59	; 0x3b
   143dc:	beq	1437c <sprintf@plt+0x2a88>
   143e0:	ldrb	r1, [r8, #1]!
   143e4:	cmp	r1, #0
   143e8:	beq	143fc <sprintf@plt+0x2b08>
   143ec:	add	r2, r0, r1, lsl #1
   143f0:	ldrh	r2, [r2]
   143f4:	ands	r2, r2, #8192	; 0x2000
   143f8:	beq	143e0 <sprintf@plt+0x2aec>
   143fc:	cmp	r1, #0
   14400:	beq	1437c <sprintf@plt+0x2a88>
   14404:	mov	r0, #0
   14408:	strb	r0, [r8]
   1440c:	ldr	r0, [r6]
   14410:	ldrb	r1, [r8, #1]!
   14414:	add	r1, r0, r1, lsl #1
   14418:	ldrb	r1, [r1, #1]
   1441c:	tst	r1, #32
   14420:	bne	14410 <sprintf@plt+0x2b1c>
   14424:	mov	r0, r8
   14428:	movw	r1, #36631	; 0x8f17
   1442c:	movt	r1, #1
   14430:	bl	118b8 <strpbrk@plt>
   14434:	cmp	r0, #0
   14438:	movne	r1, #0
   1443c:	strbne	r1, [r0]
   14440:	mov	r0, sl
   14444:	movw	r1, #36634	; 0x8f1a
   14448:	movt	r1, #1
   1444c:	bl	116b4 <rb_strcasecmp@plt>
   14450:	cmp	r0, #0
   14454:	beq	14368 <sprintf@plt+0x2a74>
   14458:	mov	r0, sl
   1445c:	movw	r1, #36641	; 0x8f21
   14460:	movt	r1, #1
   14464:	bl	116b4 <rb_strcasecmp@plt>
   14468:	cmp	r0, #0
   1446c:	bne	1437c <sprintf@plt+0x2a88>
   14470:	mov	r0, r8
   14474:	bl	1448c <sprintf@plt+0x2b98>
   14478:	b	1437c <sprintf@plt+0x2a88>
   1447c:	mov	r0, r4
   14480:	bl	115b8 <fclose@plt>
   14484:	sub	sp, fp, #28
   14488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1448c:	push	{r4, r5, r6, sl, fp, lr}
   14490:	add	fp, sp, #16
   14494:	sub	sp, sp, #40	; 0x28
   14498:	movw	r5, #61416	; 0xefe8
   1449c:	movt	r5, #2
   144a0:	ldr	r1, [r5]
   144a4:	cmp	r1, #9
   144a8:	bgt	14524 <sprintf@plt+0x2c30>
   144ac:	add	r2, sp, #8
   144b0:	vmov.i32	q8, #0	; 0x00000000
   144b4:	add	r1, r2, #4
   144b8:	vst1.32	{d16-d17}, [r1]
   144bc:	add	r1, r2, #16
   144c0:	vst1.32	{d16-d17}, [r1]
   144c4:	mov	r1, #5
   144c8:	str	r1, [sp, #8]
   144cc:	mov	r1, #2
   144d0:	str	r1, [sp, #16]
   144d4:	movw	r1, #36634	; 0x8f1a
   144d8:	movt	r1, #1
   144dc:	add	r3, sp, #4
   144e0:	bl	116c0 <getaddrinfo@plt>
   144e4:	cmp	r0, #0
   144e8:	bne	14524 <sprintf@plt+0x2c30>
   144ec:	ldr	r4, [sp, #4]
   144f0:	cmp	r4, #0
   144f4:	beq	14524 <sprintf@plt+0x2c30>
   144f8:	ldr	r6, [r5]
   144fc:	movw	r0, #62120	; 0xf2a8
   14500:	movt	r0, #2
   14504:	add	r0, r0, r6, lsl #7
   14508:	ldr	r2, [r4, #16]
   1450c:	ldr	r1, [r4, #20]
   14510:	bl	11708 <memcpy@plt>
   14514:	add	r0, r6, #1
   14518:	str	r0, [r5]
   1451c:	mov	r0, r4
   14520:	bl	11630 <freeaddrinfo@plt>
   14524:	sub	sp, fp, #16
   14528:	pop	{r4, r5, r6, sl, fp, pc}
   1452c:	push	{r4, sl, fp, lr}
   14530:	add	fp, sp, #8
   14534:	sub	sp, sp, #8
   14538:	mov	r4, r3
   1453c:	ldr	r3, [fp, #8]
   14540:	str	r3, [sp]
   14544:	mov	r3, r4
   14548:	bl	1456c <sprintf@plt+0x2c78>
   1454c:	cmp	r0, #1
   14550:	blt	14564 <sprintf@plt+0x2c70>
   14554:	ldrb	r1, [r4]
   14558:	cmp	r1, #46	; 0x2e
   1455c:	moveq	r1, #0
   14560:	strbeq	r1, [r4]
   14564:	sub	sp, fp, #8
   14568:	pop	{r4, sl, fp, pc}
   1456c:	push	{r4, r5, r6, r7, fp, lr}
   14570:	add	fp, sp, #16
   14574:	sub	sp, sp, #256	; 0x100
   14578:	mov	r5, r3
   1457c:	add	r3, sp, #1
   14580:	bl	1477c <sprintf@plt+0x2e88>
   14584:	cmn	r0, #1
   14588:	beq	145ac <sprintf@plt+0x2cb8>
   1458c:	mov	r4, r0
   14590:	ldr	r2, [fp, #8]
   14594:	add	r0, sp, #1
   14598:	mov	r1, r5
   1459c:	bl	14900 <sprintf@plt+0x300c>
   145a0:	cmn	r0, #1
   145a4:	moveq	r4, r0
   145a8:	b	145b0 <sprintf@plt+0x2cbc>
   145ac:	mvn	r4, #0
   145b0:	mov	r0, r4
   145b4:	sub	sp, fp, #16
   145b8:	pop	{r4, r5, r6, r7, fp, pc}
   145bc:	push	{r4, sl, fp, lr}
   145c0:	add	fp, sp, #8
   145c4:	sub	sp, sp, #8
   145c8:	mov	r4, r0
   145cc:	str	r0, [sp, #4]
   145d0:	add	r0, sp, #4
   145d4:	bl	145ec <sprintf@plt+0x2cf8>
   145d8:	ldr	r1, [sp, #4]
   145dc:	cmn	r0, #1
   145e0:	subne	r0, r1, r4
   145e4:	sub	sp, fp, #8
   145e8:	pop	{r4, sl, fp, pc}
   145ec:	push	{r4, r5, r6, sl, fp, lr}
   145f0:	add	fp, sp, #16
   145f4:	mov	r5, r1
   145f8:	mov	r4, r0
   145fc:	ldr	r0, [r0]
   14600:	cmp	r0, r1
   14604:	bcc	14630 <sprintf@plt+0x2d3c>
   14608:	cmp	r0, r5
   1460c:	bls	14688 <sprintf@plt+0x2d94>
   14610:	bl	118e8 <__errno_location@plt>
   14614:	mov	r1, #90	; 0x5a
   14618:	str	r1, [r0]
   1461c:	mvn	r0, #0
   14620:	pop	{r4, r5, r6, sl, fp, pc}
   14624:	add	r0, r6, r1
   14628:	cmp	r0, r5
   1462c:	bcs	14608 <sprintf@plt+0x2d14>
   14630:	mov	r6, r0
   14634:	ldrb	r1, [r6], #1
   14638:	cmp	r1, #0
   1463c:	beq	14664 <sprintf@plt+0x2d70>
   14640:	ands	r2, r1, #192	; 0xc0
   14644:	beq	14624 <sprintf@plt+0x2d30>
   14648:	cmp	r2, #64	; 0x40
   1464c:	bne	14674 <sprintf@plt+0x2d80>
   14650:	bl	14b08 <sprintf@plt+0x3214>
   14654:	mov	r1, r0
   14658:	cmn	r0, #1
   1465c:	bgt	14624 <sprintf@plt+0x2d30>
   14660:	b	14610 <sprintf@plt+0x2d1c>
   14664:	mov	r0, r6
   14668:	cmp	r0, r5
   1466c:	bhi	14610 <sprintf@plt+0x2d1c>
   14670:	b	14688 <sprintf@plt+0x2d94>
   14674:	cmp	r2, #192	; 0xc0
   14678:	bne	14610 <sprintf@plt+0x2d1c>
   1467c:	add	r0, r0, #2
   14680:	cmp	r0, r5
   14684:	bhi	14610 <sprintf@plt+0x2d1c>
   14688:	str	r0, [r4]
   1468c:	mov	r0, #0
   14690:	pop	{r4, r5, r6, sl, fp, pc}
   14694:	ldrb	r1, [r0]
   14698:	ldrb	r0, [r0, #1]
   1469c:	orr	r0, r0, r1, lsl #8
   146a0:	bx	lr
   146a4:	ldr	r0, [r0]
   146a8:	rev	r0, r0
   146ac:	bx	lr
   146b0:	rev16	r0, r0
   146b4:	strh	r0, [r1]
   146b8:	bx	lr
   146bc:	rev	r0, r0
   146c0:	str	r0, [r1]
   146c4:	bx	lr
   146c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   146cc:	add	fp, sp, #24
   146d0:	sub	sp, sp, #88	; 0x58
   146d4:	mvn	r5, #0
   146d8:	cmp	r3, #0
   146dc:	beq	1476c <sprintf@plt+0x2e78>
   146e0:	mov	r8, r1
   146e4:	ldr	r1, [fp, #8]
   146e8:	cmp	r1, #12
   146ec:	blt	1476c <sprintf@plt+0x2e78>
   146f0:	mov	r4, r3
   146f4:	mov	r7, r2
   146f8:	mov	r2, #0
   146fc:	str	r2, [r3, #4]
   14700:	str	r2, [r3, #8]
   14704:	mov	r3, #65536	; 0x10000
   14708:	str	r3, [r4]
   1470c:	str	r2, [sp, #12]
   14710:	str	r4, [sp, #8]
   14714:	subs	r2, r1, #16
   14718:	bmi	1476c <sprintf@plt+0x2e78>
   1471c:	add	r6, r4, #12
   14720:	add	r3, sp, #8
   14724:	add	r1, r3, #80	; 0x50
   14728:	str	r1, [sp]
   1472c:	mov	r1, r6
   14730:	bl	14778 <sprintf@plt+0x2e84>
   14734:	cmp	r0, #0
   14738:	bmi	1476c <sprintf@plt+0x2e78>
   1473c:	lsr	r1, r7, #8
   14740:	strb	r1, [r6, r0]!
   14744:	strb	r8, [r6, #3]
   14748:	strb	r7, [r6, #1]
   1474c:	lsr	r0, r8, #8
   14750:	strb	r0, [r6, #2]!
   14754:	ldr	r0, [r4, #4]
   14758:	mov	r1, #256	; 0x100
   1475c:	bfi	r0, r1, #0, #16
   14760:	str	r0, [r4, #4]
   14764:	sub	r0, r6, r4
   14768:	add	r5, r0, #2
   1476c:	mov	r0, r5
   14770:	sub	sp, fp, #24
   14774:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14778:	b	14da0 <sprintf@plt+0x34ac>
   1477c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14780:	add	fp, sp, #28
   14784:	sub	sp, sp, #28
   14788:	cmp	r2, r0
   1478c:	bcc	148d4 <sprintf@plt+0x2fe0>
   14790:	cmp	r2, r1
   14794:	bcs	148d4 <sprintf@plt+0x2fe0>
   14798:	ldrb	r7, [r2]
   1479c:	cmp	r7, #0
   147a0:	beq	148ec <sprintf@plt+0x2ff8>
   147a4:	str	r1, [sp, #24]
   147a8:	str	r0, [sp, #12]
   147ac:	sub	r0, r1, r0
   147b0:	str	r0, [sp, #8]
   147b4:	rsb	r0, r2, #1
   147b8:	str	r0, [sp, #4]
   147bc:	add	r5, r2, #1
   147c0:	mvn	r0, #0
   147c4:	str	r0, [sp, #16]
   147c8:	mov	r9, #0
   147cc:	str	r3, [sp, #20]
   147d0:	mov	r4, r3
   147d4:	str	r2, [sp]
   147d8:	mov	r6, r2
   147dc:	mov	sl, #0
   147e0:	ands	r0, r7, #192	; 0xc0
   147e4:	beq	147f8 <sprintf@plt+0x2f04>
   147e8:	cmp	r0, #192	; 0xc0
   147ec:	beq	14850 <sprintf@plt+0x2f5c>
   147f0:	cmp	r0, #64	; 0x40
   147f4:	bne	148d4 <sprintf@plt+0x2fe0>
   147f8:	mov	r0, r6
   147fc:	bl	14b08 <sprintf@plt+0x3214>
   14800:	cmn	r0, #1
   14804:	ble	148d4 <sprintf@plt+0x2fe0>
   14808:	mov	r8, r0
   1480c:	add	r0, sl, #1
   14810:	add	sl, r8, r0
   14814:	cmp	sl, #254	; 0xfe
   14818:	bgt	148d4 <sprintf@plt+0x2fe0>
   1481c:	add	r6, r5, r8
   14820:	ldr	r1, [sp, #24]
   14824:	cmp	r6, r1
   14828:	bcs	148d4 <sprintf@plt+0x2fe0>
   1482c:	strb	r7, [r4]
   14830:	ldr	r4, [sp, #20]
   14834:	add	r0, r4, r0
   14838:	mov	r1, r5
   1483c:	mov	r2, r8
   14840:	bl	11708 <memcpy@plt>
   14844:	add	r0, r9, r8
   14848:	add	r9, r0, #1
   1484c:	b	1489c <sprintf@plt+0x2fa8>
   14850:	ldr	r2, [sp, #24]
   14854:	cmp	r5, r2
   14858:	ldrbcc	r0, [r5]
   1485c:	andcc	r1, r7, #63	; 0x3f
   14860:	orrcc	r0, r0, r1, lsl #8
   14864:	ldrcc	r1, [sp, #12]
   14868:	addcc	r6, r1, r0
   1486c:	cmpcc	r6, r2
   14870:	bcs	148d4 <sprintf@plt+0x2fe0>
   14874:	ldr	r0, [sp, #16]
   14878:	cmp	r0, #0
   1487c:	ldr	r1, [sp, #4]
   14880:	addmi	r0, r1, r5
   14884:	str	r0, [sp, #16]
   14888:	add	r9, r9, #2
   1488c:	ldr	r0, [sp, #8]
   14890:	cmp	r9, r0
   14894:	ldr	r4, [sp, #20]
   14898:	bge	148d4 <sprintf@plt+0x2fe0>
   1489c:	add	r4, r4, sl
   148a0:	mov	r5, r6
   148a4:	ldrb	r7, [r5], #1
   148a8:	cmp	r7, #0
   148ac:	bne	147e0 <sprintf@plt+0x2eec>
   148b0:	mov	r0, #0
   148b4:	strb	r0, [r4]
   148b8:	ldr	r0, [sp, #16]
   148bc:	cmn	r0, #1
   148c0:	bgt	148e4 <sprintf@plt+0x2ff0>
   148c4:	ldr	r0, [sp]
   148c8:	sub	r0, r5, r0
   148cc:	sub	sp, fp, #28
   148d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148d4:	bl	118e8 <__errno_location@plt>
   148d8:	mov	r1, #90	; 0x5a
   148dc:	str	r1, [r0]
   148e0:	mvn	r0, #0
   148e4:	sub	sp, fp, #28
   148e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148ec:	mov	r0, #0
   148f0:	strb	r0, [r3]
   148f4:	mov	r0, #1
   148f8:	sub	sp, fp, #28
   148fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14904:	add	fp, sp, #28
   14908:	sub	sp, sp, #4
   1490c:	mov	r9, r1
   14910:	add	r1, r0, #1
   14914:	str	r1, [sp]
   14918:	add	r5, r9, r2
   1491c:	ldrb	r4, [r0]
   14920:	cmp	r4, #0
   14924:	mov	r6, r9
   14928:	beq	14ab8 <sprintf@plt+0x31c4>
   1492c:	mov	sl, #92	; 0x5c
   14930:	mov	r6, r9
   14934:	uxtb	r8, r4
   14938:	cmp	r8, #192	; 0xc0
   1493c:	bcs	14ae4 <sprintf@plt+0x31f0>
   14940:	cmp	r6, r9
   14944:	beq	14958 <sprintf@plt+0x3064>
   14948:	cmp	r6, r5
   1494c:	bcs	14ae4 <sprintf@plt+0x31f0>
   14950:	mov	r0, #46	; 0x2e
   14954:	strb	r0, [r6], #1
   14958:	ldr	r0, [sp]
   1495c:	sub	r0, r0, #1
   14960:	bl	14b08 <sprintf@plt+0x3214>
   14964:	cmn	r0, #1
   14968:	ble	14ae4 <sprintf@plt+0x31f0>
   1496c:	mov	r7, r0
   14970:	add	r0, r6, r0
   14974:	cmp	r0, r5
   14978:	bcs	14ae4 <sprintf@plt+0x31f0>
   1497c:	and	r0, r4, #192	; 0xc0
   14980:	cmp	r0, #64	; 0x40
   14984:	bne	149b0 <sprintf@plt+0x30bc>
   14988:	cmp	r8, #65	; 0x41
   1498c:	bne	14afc <sprintf@plt+0x3208>
   14990:	mov	r0, sp
   14994:	mov	r1, r6
   14998:	mov	r2, r5
   1499c:	bl	14b54 <sprintf@plt+0x3260>
   149a0:	cmn	r0, #1
   149a4:	ble	14ae4 <sprintf@plt+0x31f0>
   149a8:	add	r6, r6, r0
   149ac:	b	14a98 <sprintf@plt+0x31a4>
   149b0:	cmp	r7, #1
   149b4:	bge	149e4 <sprintf@plt+0x30f0>
   149b8:	b	14a98 <sprintf@plt+0x31a4>
   149bc:	mov	r0, r4
   149c0:	bl	14d8c <sprintf@plt+0x3498>
   149c4:	cmp	r0, #0
   149c8:	beq	14a20 <sprintf@plt+0x312c>
   149cc:	cmp	r6, r5
   149d0:	bcs	14ae4 <sprintf@plt+0x31f0>
   149d4:	strb	r4, [r6], #1
   149d8:	sub	r7, r7, #1
   149dc:	cmp	r7, #0
   149e0:	ble	14a98 <sprintf@plt+0x31a4>
   149e4:	ldr	r0, [sp]
   149e8:	add	r1, r0, #1
   149ec:	str	r1, [sp]
   149f0:	ldrb	r4, [r0]
   149f4:	mov	r0, r4
   149f8:	bl	14c7c <sprintf@plt+0x3388>
   149fc:	cmp	r0, #0
   14a00:	beq	149bc <sprintf@plt+0x30c8>
   14a04:	add	r0, r6, #1
   14a08:	cmp	r0, r5
   14a0c:	bcs	14ae4 <sprintf@plt+0x31f0>
   14a10:	strb	r4, [r6, #1]
   14a14:	strb	sl, [r6]
   14a18:	add	r6, r6, #2
   14a1c:	b	149d8 <sprintf@plt+0x30e4>
   14a20:	add	r0, r6, #3
   14a24:	cmp	r0, r5
   14a28:	bcs	14ae4 <sprintf@plt+0x31f0>
   14a2c:	strb	sl, [r6]
   14a30:	movw	r0, #34079	; 0x851f
   14a34:	movt	r0, #20971	; 0x51eb
   14a38:	umull	r0, r1, r4, r0
   14a3c:	movw	r0, #36666	; 0x8f3a
   14a40:	movt	r0, #1
   14a44:	mov	r3, r0
   14a48:	ldrb	r0, [r0, r1, lsr #5]
   14a4c:	strb	r0, [r6, #1]
   14a50:	movw	r0, #52429	; 0xcccd
   14a54:	movt	r0, #52428	; 0xcccc
   14a58:	mov	ip, r0
   14a5c:	umull	r0, r2, r4, r0
   14a60:	lsr	r0, r2, #3
   14a64:	add	r0, r0, r0, lsl #2
   14a68:	sub	r0, r4, r0, lsl #1
   14a6c:	ldrb	r0, [r3, r0]
   14a70:	strb	r0, [r6, #3]
   14a74:	lsr	r0, r1, #5
   14a78:	mov	r1, #100	; 0x64
   14a7c:	mls	r0, r0, r1, r4
   14a80:	uxtb	r0, r0
   14a84:	umull	r0, r1, r0, ip
   14a88:	ldrb	r0, [r3, r1, lsr #3]
   14a8c:	strb	r0, [r6, #2]
   14a90:	add	r6, r6, #4
   14a94:	b	149d8 <sprintf@plt+0x30e4>
   14a98:	ldr	r0, [sp]
   14a9c:	add	r1, r0, #1
   14aa0:	str	r1, [sp]
   14aa4:	ldrb	r4, [r0]
   14aa8:	cmp	r4, #0
   14aac:	bne	14934 <sprintf@plt+0x3040>
   14ab0:	cmp	r6, r9
   14ab4:	bne	14ac8 <sprintf@plt+0x31d4>
   14ab8:	cmp	r6, r5
   14abc:	bcs	14ae4 <sprintf@plt+0x31f0>
   14ac0:	mov	r0, #46	; 0x2e
   14ac4:	strb	r0, [r6], #1
   14ac8:	cmp	r6, r5
   14acc:	bcs	14ae4 <sprintf@plt+0x31f0>
   14ad0:	mov	r0, #0
   14ad4:	strb	r0, [r6], -r9
   14ad8:	add	r0, r6, #1
   14adc:	sub	sp, fp, #28
   14ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ae4:	bl	118e8 <__errno_location@plt>
   14ae8:	mov	r1, #90	; 0x5a
   14aec:	str	r1, [r0]
   14af0:	mvn	r0, #0
   14af4:	sub	sp, fp, #28
   14af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14afc:	bl	118e8 <__errno_location@plt>
   14b00:	mov	r1, #22
   14b04:	b	14aec <sprintf@plt+0x31f8>
   14b08:	mov	r1, r0
   14b0c:	ldrb	r2, [r0]
   14b10:	and	r3, r2, #192	; 0xc0
   14b14:	mvn	r0, #0
   14b18:	cmp	r3, #192	; 0xc0
   14b1c:	beq	14b50 <sprintf@plt+0x325c>
   14b20:	cmp	r3, #64	; 0x40
   14b24:	bne	14b4c <sprintf@plt+0x3258>
   14b28:	cmp	r2, #65	; 0x41
   14b2c:	bxne	lr
   14b30:	ldrb	r1, [r1, #1]
   14b34:	add	r0, r1, #7
   14b38:	mov	r2, #1
   14b3c:	add	r0, r2, r0, lsr #3
   14b40:	cmp	r1, #0
   14b44:	movweq	r0, #33	; 0x21
   14b48:	bx	lr
   14b4c:	mov	r0, r2
   14b50:	bx	lr
   14b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b58:	add	fp, sp, #28
   14b5c:	sub	sp, sp, #4
   14b60:	mov	r9, r1
   14b64:	mov	r8, r0
   14b68:	ldr	r5, [r0]
   14b6c:	ldrb	sl, [r5]
   14b70:	cmp	sl, #0
   14b74:	movweq	sl, #256	; 0x100
   14b78:	mov	r0, #7
   14b7c:	cmp	sl, #9
   14b80:	movwhi	r0, #8
   14b84:	cmp	sl, #99	; 0x63
   14b88:	movwhi	r0, #9
   14b8c:	add	r1, sl, #3
   14b90:	add	r0, r0, r1, lsr #2
   14b94:	add	r1, r9, r0
   14b98:	mvn	r0, #0
   14b9c:	cmp	r1, r2
   14ba0:	bcs	14c74 <sprintf@plt+0x3380>
   14ba4:	movw	r0, #23388	; 0x5b5c
   14ba8:	movt	r0, #120	; 0x78
   14bac:	mov	r7, r9
   14bb0:	str	r0, [r7], #3
   14bb4:	add	r4, r5, #1
   14bb8:	cmp	sl, #8
   14bbc:	bcc	14c1c <sprintf@plt+0x3328>
   14bc0:	movw	r5, #36652	; 0x8f2c
   14bc4:	movt	r5, #1
   14bc8:	mov	r6, sl
   14bcc:	ldrb	r2, [r4], #1
   14bd0:	mov	r0, r7
   14bd4:	mov	r1, r5
   14bd8:	bl	118f4 <sprintf@plt>
   14bdc:	add	r7, r7, r0
   14be0:	sub	r6, r6, #8
   14be4:	cmp	r6, #7
   14be8:	bgt	14bcc <sprintf@plt+0x32d8>
   14bec:	sub	r5, r4, #1
   14bf0:	cmp	r6, #5
   14bf4:	bge	14c28 <sprintf@plt+0x3334>
   14bf8:	cmp	r6, #1
   14bfc:	blt	14c54 <sprintf@plt+0x3360>
   14c00:	ldrb	r0, [r4]
   14c04:	lsr	r0, r0, #4
   14c08:	movw	r1, #36657	; 0x8f31
   14c0c:	movt	r1, #1
   14c10:	mov	r2, #15
   14c14:	mov	r3, #4
   14c18:	b	14c3c <sprintf@plt+0x3348>
   14c1c:	mov	r6, sl
   14c20:	cmp	r6, #5
   14c24:	blt	14bf8 <sprintf@plt+0x3304>
   14c28:	ldrb	r0, [r4]
   14c2c:	movw	r1, #36652	; 0x8f2c
   14c30:	movt	r1, #1
   14c34:	mov	r2, #255	; 0xff
   14c38:	mov	r3, #8
   14c3c:	sub	r3, r3, r6
   14c40:	and	r2, r0, r2, lsl r3
   14c44:	mov	r0, r7
   14c48:	bl	118f4 <sprintf@plt>
   14c4c:	add	r7, r7, r0
   14c50:	add	r4, r5, #2
   14c54:	movw	r1, #36661	; 0x8f35
   14c58:	movt	r1, #1
   14c5c:	mov	r0, r7
   14c60:	mov	r2, sl
   14c64:	bl	118f4 <sprintf@plt>
   14c68:	str	r4, [r8]
   14c6c:	add	r0, r7, r0
   14c70:	sub	r0, r0, r9
   14c74:	sub	sp, fp, #28
   14c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c7c:	sub	r1, r0, #34	; 0x22
   14c80:	cmp	r1, #58	; 0x3a
   14c84:	bhi	14d84 <sprintf@plt+0x3490>
   14c88:	mov	r0, #1
   14c8c:	add	r2, pc, #0
   14c90:	ldr	pc, [r2, r1, lsl #2]
   14c94:	andeq	r4, r1, r0, lsl #27
   14c98:	andeq	r4, r1, r4, lsl #27
   14c9c:	andeq	r4, r1, r0, lsl #27
   14ca0:	andeq	r4, r1, r4, lsl #27
   14ca4:	andeq	r4, r1, r4, lsl #27
   14ca8:	andeq	r4, r1, r4, lsl #27
   14cac:	andeq	r4, r1, r0, lsl #27
   14cb0:	andeq	r4, r1, r0, lsl #27
   14cb4:	andeq	r4, r1, r4, lsl #27
   14cb8:	andeq	r4, r1, r4, lsl #27
   14cbc:	andeq	r4, r1, r4, lsl #27
   14cc0:	andeq	r4, r1, r4, lsl #27
   14cc4:	andeq	r4, r1, r0, lsl #27
   14cc8:	andeq	r4, r1, r4, lsl #27
   14ccc:	andeq	r4, r1, r4, lsl #27
   14cd0:	andeq	r4, r1, r4, lsl #27
   14cd4:	andeq	r4, r1, r4, lsl #27
   14cd8:	andeq	r4, r1, r4, lsl #27
   14cdc:	andeq	r4, r1, r4, lsl #27
   14ce0:	andeq	r4, r1, r4, lsl #27
   14ce4:	andeq	r4, r1, r4, lsl #27
   14ce8:	andeq	r4, r1, r4, lsl #27
   14cec:	andeq	r4, r1, r4, lsl #27
   14cf0:	andeq	r4, r1, r4, lsl #27
   14cf4:	andeq	r4, r1, r4, lsl #27
   14cf8:	andeq	r4, r1, r0, lsl #27
   14cfc:	andeq	r4, r1, r4, lsl #27
   14d00:	andeq	r4, r1, r4, lsl #27
   14d04:	andeq	r4, r1, r4, lsl #27
   14d08:	andeq	r4, r1, r4, lsl #27
   14d0c:	andeq	r4, r1, r0, lsl #27
   14d10:	andeq	r4, r1, r4, lsl #27
   14d14:	andeq	r4, r1, r4, lsl #27
   14d18:	andeq	r4, r1, r4, lsl #27
   14d1c:	andeq	r4, r1, r4, lsl #27
   14d20:	andeq	r4, r1, r4, lsl #27
   14d24:	andeq	r4, r1, r4, lsl #27
   14d28:	andeq	r4, r1, r4, lsl #27
   14d2c:	andeq	r4, r1, r4, lsl #27
   14d30:	andeq	r4, r1, r4, lsl #27
   14d34:	andeq	r4, r1, r4, lsl #27
   14d38:	andeq	r4, r1, r4, lsl #27
   14d3c:	andeq	r4, r1, r4, lsl #27
   14d40:	andeq	r4, r1, r4, lsl #27
   14d44:	andeq	r4, r1, r4, lsl #27
   14d48:	andeq	r4, r1, r4, lsl #27
   14d4c:	andeq	r4, r1, r4, lsl #27
   14d50:	andeq	r4, r1, r4, lsl #27
   14d54:	andeq	r4, r1, r4, lsl #27
   14d58:	andeq	r4, r1, r4, lsl #27
   14d5c:	andeq	r4, r1, r4, lsl #27
   14d60:	andeq	r4, r1, r4, lsl #27
   14d64:	andeq	r4, r1, r4, lsl #27
   14d68:	andeq	r4, r1, r4, lsl #27
   14d6c:	andeq	r4, r1, r4, lsl #27
   14d70:	andeq	r4, r1, r4, lsl #27
   14d74:	andeq	r4, r1, r4, lsl #27
   14d78:	andeq	r4, r1, r4, lsl #27
   14d7c:	andeq	r4, r1, r0, lsl #27
   14d80:	bx	lr
   14d84:	mov	r0, #0
   14d88:	bx	lr
   14d8c:	sub	r1, r0, #33	; 0x21
   14d90:	mov	r0, #0
   14d94:	cmp	r1, #94	; 0x5e
   14d98:	movwcc	r0, #1
   14d9c:	bx	lr
   14da0:	push	{r4, r5, r6, sl, fp, lr}
   14da4:	add	fp, sp, #16
   14da8:	sub	sp, sp, #264	; 0x108
   14dac:	mov	r4, r3
   14db0:	mov	r5, r2
   14db4:	mov	r6, r1
   14db8:	add	r1, sp, #9
   14dbc:	bl	14df8 <sprintf@plt+0x3504>
   14dc0:	cmn	r0, #1
   14dc4:	beq	14dec <sprintf@plt+0x34f8>
   14dc8:	ldr	r0, [fp, #8]
   14dcc:	str	r0, [sp]
   14dd0:	add	r0, sp, #9
   14dd4:	mov	r1, r6
   14dd8:	mov	r2, r5
   14ddc:	mov	r3, r4
   14de0:	bl	150cc <sprintf@plt+0x37d8>
   14de4:	sub	sp, fp, #16
   14de8:	pop	{r4, r5, r6, sl, fp, pc}
   14dec:	mvn	r0, #0
   14df0:	sub	sp, fp, #16
   14df4:	pop	{r4, r5, r6, sl, fp, pc}
   14df8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dfc:	add	fp, sp, #28
   14e00:	sub	sp, sp, #20
   14e04:	mov	r4, r1
   14e08:	mov	r7, r0
   14e0c:	str	r0, [sp, #16]
   14e10:	add	r6, r0, #1
   14e14:	str	r6, [sp, #16]
   14e18:	str	r1, [sp, #12]
   14e1c:	add	r0, r1, #1
   14e20:	str	r0, [sp, #8]
   14e24:	add	sl, r1, #255	; 0xff
   14e28:	ldrb	r1, [r7]
   14e2c:	cmp	r1, #0
   14e30:	beq	14fec <sprintf@plt+0x36f8>
   14e34:	mov	r0, #0
   14e38:	movw	r5, #36666	; 0x8f3a
   14e3c:	movt	r5, #1
   14e40:	b	14e60 <sprintf@plt+0x356c>
   14e44:	mov	r0, #1
   14e48:	ldr	r7, [sp, #16]
   14e4c:	add	r6, r7, #1
   14e50:	str	r6, [sp, #16]
   14e54:	ldrb	r1, [r7]
   14e58:	cmp	r1, #0
   14e5c:	beq	14fec <sprintf@plt+0x36f8>
   14e60:	uxtb	r9, r1
   14e64:	cmp	r0, #0
   14e68:	beq	14ed8 <sprintf@plt+0x35e4>
   14e6c:	cmp	r9, #91	; 0x5b
   14e70:	bne	14f38 <sprintf@plt+0x3644>
   14e74:	mov	r0, r6
   14e78:	mov	r1, #93	; 0x5d
   14e7c:	bl	115d0 <strchr@plt>
   14e80:	cmp	r0, #0
   14e84:	beq	15084 <sprintf@plt+0x3790>
   14e88:	str	sl, [sp]
   14e8c:	add	r1, r0, #2
   14e90:	add	r0, sp, #16
   14e94:	add	r2, sp, #12
   14e98:	add	r3, sp, #8
   14e9c:	bl	152dc <sprintf@plt+0x39e8>
   14ea0:	cmp	r0, #0
   14ea4:	bne	15064 <sprintf@plt+0x3770>
   14ea8:	ldr	r0, [sp, #8]
   14eac:	str	r0, [sp, #12]
   14eb0:	add	r0, r0, #1
   14eb4:	str	r0, [sp, #8]
   14eb8:	ldr	r0, [sp, #16]
   14ebc:	add	r1, r0, #1
   14ec0:	str	r1, [sp, #16]
   14ec4:	ldrb	r1, [r0]
   14ec8:	mov	r0, #0
   14ecc:	cmp	r1, #46	; 0x2e
   14ed0:	beq	14e48 <sprintf@plt+0x3554>
   14ed4:	b	15074 <sprintf@plt+0x3780>
   14ed8:	cmp	r9, #92	; 0x5c
   14edc:	beq	14e44 <sprintf@plt+0x3550>
   14ee0:	cmp	r9, #46	; 0x2e
   14ee4:	bne	14fcc <sprintf@plt+0x36d8>
   14ee8:	ldr	r1, [sp, #12]
   14eec:	mvn	r0, r1
   14ef0:	ldr	r2, [sp, #8]
   14ef4:	add	r0, r2, r0
   14ef8:	tst	r0, #192	; 0xc0
   14efc:	bne	1504c <sprintf@plt+0x3758>
   14f00:	cmp	r1, sl
   14f04:	bcs	1504c <sprintf@plt+0x3758>
   14f08:	strb	r0, [r1]
   14f0c:	ldrb	r1, [r6]
   14f10:	cmp	r1, #0
   14f14:	beq	15090 <sprintf@plt+0x379c>
   14f18:	cmp	r0, #0
   14f1c:	cmpne	r1, #46	; 0x2e
   14f20:	beq	1504c <sprintf@plt+0x3758>
   14f24:	ldr	r0, [sp, #8]
   14f28:	str	r0, [sp, #12]
   14f2c:	add	r0, r0, #1
   14f30:	str	r0, [sp, #8]
   14f34:	b	14fe4 <sprintf@plt+0x36f0>
   14f38:	mov	r0, r5
   14f3c:	mov	r1, r9
   14f40:	mov	r2, #11
   14f44:	bl	118c4 <memchr@plt>
   14f48:	cmp	r0, #0
   14f4c:	beq	14fcc <sprintf@plt+0x36d8>
   14f50:	mov	r8, r0
   14f54:	add	r0, r7, #2
   14f58:	str	r0, [sp, #16]
   14f5c:	ldrb	r1, [r6]
   14f60:	cmp	r1, #0
   14f64:	beq	1504c <sprintf@plt+0x3758>
   14f68:	mov	r0, r5
   14f6c:	mov	r2, #11
   14f70:	bl	118c4 <memchr@plt>
   14f74:	cmp	r0, #0
   14f78:	movne	r6, r0
   14f7c:	addne	r0, r7, #3
   14f80:	strne	r0, [sp, #16]
   14f84:	ldrbne	r1, [r7, #2]
   14f88:	cmpne	r1, #0
   14f8c:	beq	1504c <sprintf@plt+0x3758>
   14f90:	mov	r0, r5
   14f94:	mov	r2, #11
   14f98:	bl	118c4 <memchr@plt>
   14f9c:	cmp	r0, #0
   14fa0:	beq	1504c <sprintf@plt+0x3758>
   14fa4:	sub	r1, r8, r5
   14fa8:	mov	r2, #100	; 0x64
   14fac:	mul	r1, r1, r2
   14fb0:	sub	r2, r6, r5
   14fb4:	add	r2, r2, r2, lsl #2
   14fb8:	add	r1, r1, r2, lsl #1
   14fbc:	sub	r0, r0, r5
   14fc0:	add	r9, r1, r0
   14fc4:	cmp	r9, #256	; 0x100
   14fc8:	bge	1504c <sprintf@plt+0x3758>
   14fcc:	ldr	r0, [sp, #8]
   14fd0:	cmp	r0, sl
   14fd4:	bcs	1504c <sprintf@plt+0x3758>
   14fd8:	add	r1, r0, #1
   14fdc:	str	r1, [sp, #8]
   14fe0:	strb	r9, [r0]
   14fe4:	mov	r0, #0
   14fe8:	b	14e48 <sprintf@plt+0x3554>
   14fec:	ldr	r0, [sp, #12]
   14ff0:	mvn	r0, r0
   14ff4:	ldr	r1, [sp, #8]
   14ff8:	add	r0, r1, r0
   14ffc:	tst	r0, #192	; 0xc0
   15000:	bne	1504c <sprintf@plt+0x3758>
   15004:	ldr	r1, [sp, #12]
   15008:	cmp	r1, sl
   1500c:	bcs	1504c <sprintf@plt+0x3758>
   15010:	strb	r0, [r1]
   15014:	cmp	r0, #0
   15018:	beq	15038 <sprintf@plt+0x3744>
   1501c:	ldr	r0, [sp, #8]
   15020:	cmp	r0, sl
   15024:	bcs	1504c <sprintf@plt+0x3758>
   15028:	add	r1, r0, #1
   1502c:	str	r1, [sp, #8]
   15030:	mov	r1, #0
   15034:	strb	r1, [r0]
   15038:	ldr	r0, [sp, #8]
   1503c:	sub	r1, r0, r4
   15040:	mov	r0, #0
   15044:	cmp	r1, #256	; 0x100
   15048:	blt	1505c <sprintf@plt+0x3768>
   1504c:	bl	118e8 <__errno_location@plt>
   15050:	mov	r1, #90	; 0x5a
   15054:	str	r1, [r0]
   15058:	mvn	r0, #0
   1505c:	sub	sp, fp, #28
   15060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15064:	mov	r6, r0
   15068:	bl	118e8 <__errno_location@plt>
   1506c:	str	r6, [r0]
   15070:	b	15058 <sprintf@plt+0x3764>
   15074:	cmp	r1, #0
   15078:	bne	15084 <sprintf@plt+0x3790>
   1507c:	mov	r0, #0
   15080:	b	15004 <sprintf@plt+0x3710>
   15084:	bl	118e8 <__errno_location@plt>
   15088:	mov	r1, #22
   1508c:	b	15054 <sprintf@plt+0x3760>
   15090:	cmp	r0, #0
   15094:	beq	150b4 <sprintf@plt+0x37c0>
   15098:	ldr	r0, [sp, #8]
   1509c:	cmp	r0, sl
   150a0:	bcs	1504c <sprintf@plt+0x3758>
   150a4:	add	r1, r0, #1
   150a8:	str	r1, [sp, #8]
   150ac:	mov	r1, #0
   150b0:	strb	r1, [r0]
   150b4:	ldr	r0, [sp, #8]
   150b8:	sub	r1, r0, r4
   150bc:	mov	r0, #1
   150c0:	cmp	r1, #256	; 0x100
   150c4:	bge	1504c <sprintf@plt+0x3758>
   150c8:	b	1505c <sprintf@plt+0x3768>
   150cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150d0:	add	fp, sp, #28
   150d4:	sub	sp, sp, #20
   150d8:	mov	r9, r0
   150dc:	mov	r7, #0
   150e0:	cmp	r3, #0
   150e4:	beq	15114 <sprintf@plt+0x3820>
   150e8:	mov	r5, r3
   150ec:	mov	r0, r3
   150f0:	ldr	r3, [r0], #4
   150f4:	str	r0, [sp, #8]
   150f8:	str	r3, [sp, #16]
   150fc:	cmp	r3, #0
   15100:	beq	15124 <sprintf@plt+0x3830>
   15104:	ldr	r0, [r5, #4]!
   15108:	cmp	r0, #0
   1510c:	bne	15104 <sprintf@plt+0x3810>
   15110:	b	15130 <sprintf@plt+0x383c>
   15114:	mov	r5, #0
   15118:	mov	r0, #0
   1511c:	str	r0, [sp, #8]
   15120:	b	15128 <sprintf@plt+0x3834>
   15124:	mov	r5, #0
   15128:	mov	r0, #0
   1512c:	str	r0, [sp, #16]
   15130:	mov	r8, r1
   15134:	add	r0, r1, r2
   15138:	str	r0, [sp, #12]
   1513c:	mov	r4, r9
   15140:	ldrb	r6, [r4]
   15144:	cmp	r6, #192	; 0xc0
   15148:	bcs	152c4 <sprintf@plt+0x39d0>
   1514c:	mov	r0, r4
   15150:	bl	14b08 <sprintf@plt+0x3214>
   15154:	cmn	r0, #1
   15158:	ble	15258 <sprintf@plt+0x3964>
   1515c:	add	r0, r0, #1
   15160:	add	r7, r0, r7
   15164:	cmp	r7, #256	; 0x100
   15168:	bge	152c4 <sprintf@plt+0x39d0>
   1516c:	add	r4, r4, r0
   15170:	cmp	r6, #0
   15174:	bne	15140 <sprintf@plt+0x384c>
   15178:	ldr	r0, [fp, #8]
   1517c:	sub	r0, r0, #4
   15180:	str	r0, [sp, #4]
   15184:	mov	sl, #1
   15188:	mov	r4, r8
   1518c:	str	r8, [sp]
   15190:	mov	r6, r5
   15194:	ldrb	r7, [r9]
   15198:	ldr	r0, [sp, #16]
   1519c:	cmp	r0, #0
   151a0:	cmpne	r7, #0
   151a4:	bne	151f8 <sprintf@plt+0x3904>
   151a8:	cmp	r7, #191	; 0xbf
   151ac:	bhi	152b4 <sprintf@plt+0x39c0>
   151b0:	mov	r0, r9
   151b4:	bl	14b08 <sprintf@plt+0x3214>
   151b8:	mov	r7, r0
   151bc:	add	r0, r4, r0
   151c0:	add	r0, r0, #1
   151c4:	ldr	r1, [sp, #12]
   151c8:	cmp	r0, r1
   151cc:	bcs	152b4 <sprintf@plt+0x39c0>
   151d0:	add	r8, r7, #1
   151d4:	mov	r0, r4
   151d8:	mov	r1, r9
   151dc:	mov	r2, r8
   151e0:	bl	11708 <memcpy@plt>
   151e4:	add	r4, r4, r8
   151e8:	add	r9, r9, r8
   151ec:	cmp	r7, #0
   151f0:	bne	15194 <sprintf@plt+0x38a0>
   151f4:	b	15264 <sprintf@plt+0x3970>
   151f8:	mov	r0, r9
   151fc:	ldr	r1, [sp, #16]
   15200:	ldr	r2, [sp, #8]
   15204:	mov	r3, r5
   15208:	bl	15520 <sprintf@plt+0x3c2c>
   1520c:	cmp	r0, #0
   15210:	bpl	15280 <sprintf@plt+0x398c>
   15214:	ldr	r0, [fp, #8]
   15218:	cmp	r0, #0
   1521c:	beq	151a8 <sprintf@plt+0x38b4>
   15220:	ldr	r0, [sp, #4]
   15224:	cmp	r6, r0
   15228:	bcs	151a8 <sprintf@plt+0x38b4>
   1522c:	ldr	r0, [sp, #16]
   15230:	sub	r0, r4, r0
   15234:	cmp	r0, #16384	; 0x4000
   15238:	bge	151a8 <sprintf@plt+0x38b4>
   1523c:	cmp	sl, #0
   15240:	strne	r4, [r6]
   15244:	movne	sl, #0
   15248:	strne	sl, [r6, #4]!
   1524c:	cmp	r7, #191	; 0xbf
   15250:	bls	151b0 <sprintf@plt+0x38bc>
   15254:	b	152b4 <sprintf@plt+0x39c0>
   15258:	bl	118e8 <__errno_location@plt>
   1525c:	mov	r1, #22
   15260:	b	152cc <sprintf@plt+0x39d8>
   15264:	ldr	r0, [sp, #12]
   15268:	cmp	r4, r0
   1526c:	bhi	152b4 <sprintf@plt+0x39c0>
   15270:	ldr	r0, [sp]
   15274:	sub	r0, r4, r0
   15278:	sub	sp, fp, #28
   1527c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15280:	add	r1, r4, #1
   15284:	ldr	r2, [sp, #12]
   15288:	cmp	r1, r2
   1528c:	bcs	152b4 <sprintf@plt+0x39c0>
   15290:	strb	r0, [r4, #1]
   15294:	mov	r1, #192	; 0xc0
   15298:	orr	r0, r1, r0, lsr #8
   1529c:	strb	r0, [r4]
   152a0:	ldr	r0, [sp]
   152a4:	sub	r0, r4, r0
   152a8:	add	r0, r0, #2
   152ac:	sub	sp, fp, #28
   152b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152b4:	ldr	r0, [sp, #16]
   152b8:	cmp	r0, #0
   152bc:	movne	r0, #0
   152c0:	strne	r0, [r5]
   152c4:	bl	118e8 <__errno_location@plt>
   152c8:	mov	r1, #90	; 0x5a
   152cc:	str	r1, [r0]
   152d0:	mvn	r0, #0
   152d4:	sub	sp, fp, #28
   152d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152e0:	add	fp, sp, #28
   152e4:	sub	sp, sp, #12
   152e8:	mov	r5, r0
   152ec:	ldr	r6, [r0]
   152f0:	mov	r0, #0
   152f4:	str	r0, [sp, #8]
   152f8:	sub	r0, r1, r6
   152fc:	cmp	r0, #2
   15300:	blt	15338 <sprintf@plt+0x3a44>
   15304:	ldrb	r0, [r6], #1
   15308:	cmp	r0, #120	; 0x78
   1530c:	bne	15338 <sprintf@plt+0x3a44>
   15310:	mov	r9, r3
   15314:	mov	r8, r2
   15318:	mov	r7, r1
   1531c:	bl	117c8 <__ctype_b_loc@plt>
   15320:	ldrb	r1, [r6]
   15324:	ldr	r2, [r0]
   15328:	add	r1, r2, r1, lsl #1
   1532c:	ldrb	r1, [r1, #1]
   15330:	tst	r1, #16
   15334:	bne	15344 <sprintf@plt+0x3a50>
   15338:	mov	r0, #22
   1533c:	sub	sp, fp, #28
   15340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15344:	ldr	ip, [fp, #8]
   15348:	add	r4, r9, #4
   1534c:	cmp	r6, r7
   15350:	cmpcc	r4, ip
   15354:	bcc	1536c <sprintf@plt+0x3a78>
   15358:	mov	r0, #0
   1535c:	str	r0, [sp, #4]
   15360:	mov	sl, #0
   15364:	mov	r2, #0
   15368:	b	1549c <sprintf@plt+0x3ba8>
   1536c:	mov	sl, #0
   15370:	mov	r1, #0
   15374:	str	r1, [sp]
   15378:	mov	r1, #0
   1537c:	str	r1, [sp, #4]
   15380:	mov	lr, #0
   15384:	mov	r1, #0
   15388:	b	153a4 <sprintf@plt+0x3ab0>
   1538c:	mov	r1, #1
   15390:	add	r6, r6, #1
   15394:	mov	r2, #0
   15398:	cmp	r6, r7
   1539c:	cmpcc	r4, ip
   153a0:	bcs	1549c <sprintf@plt+0x3ba8>
   153a4:	ldrb	r2, [r6]
   153a8:	cmp	r2, #47	; 0x2f
   153ac:	beq	1538c <sprintf@plt+0x3a98>
   153b0:	cmp	r2, #93	; 0x5d
   153b4:	beq	15444 <sprintf@plt+0x3b50>
   153b8:	ldr	r3, [r0]
   153bc:	add	r3, r3, r2, lsl #1
   153c0:	ldrh	r3, [r3]
   153c4:	cmp	r1, #0
   153c8:	beq	153ec <sprintf@plt+0x3af8>
   153cc:	tst	r3, #2048	; 0x800
   153d0:	beq	15338 <sprintf@plt+0x3a44>
   153d4:	cmp	lr, #0
   153d8:	bne	15390 <sprintf@plt+0x3a9c>
   153dc:	cmp	r2, #48	; 0x30
   153e0:	mov	lr, r6
   153e4:	bne	15390 <sprintf@plt+0x3a9c>
   153e8:	b	15338 <sprintf@plt+0x3a44>
   153ec:	tst	r3, #4096	; 0x1000
   153f0:	beq	15338 <sprintf@plt+0x3a44>
   153f4:	add	sl, sl, #4
   153f8:	cmp	sl, #256	; 0x100
   153fc:	bgt	15338 <sprintf@plt+0x3a44>
   15400:	movw	r1, #36677	; 0x8f45
   15404:	movt	r1, #1
   15408:	ldrb	r1, [r1, r2]
   1540c:	ldr	r2, [sp, #4]
   15410:	add	r2, r1, r2, lsl #4
   15414:	ldr	r3, [sp]
   15418:	add	r3, r3, #4
   1541c:	mov	r1, #0
   15420:	str	r3, [sp]
   15424:	cmp	r3, #8
   15428:	str	r2, [sp, #4]
   1542c:	bne	15390 <sprintf@plt+0x3a9c>
   15430:	strb	r2, [r4], #1
   15434:	mov	r1, #0
   15438:	mov	r2, #0
   1543c:	str	r2, [sp]
   15440:	b	15390 <sprintf@plt+0x3a9c>
   15444:	cmp	r1, #0
   15448:	beq	15480 <sprintf@plt+0x3b8c>
   1544c:	cmp	lr, #0
   15450:	beq	15338 <sprintf@plt+0x3a44>
   15454:	add	r1, sp, #8
   15458:	mov	r0, lr
   1545c:	mov	r2, #10
   15460:	bl	11738 <strtol@plt>
   15464:	mov	r2, r0
   15468:	ldr	r0, [sp, #8]
   1546c:	ldrb	r0, [r0]
   15470:	cmp	r0, #93	; 0x5d
   15474:	bne	15338 <sprintf@plt+0x3a44>
   15478:	ldr	ip, [fp, #8]
   1547c:	b	15484 <sprintf@plt+0x3b90>
   15480:	mov	r2, #0
   15484:	ldr	r0, [sp]
   15488:	cmp	r0, #0
   1548c:	ldrne	r0, [sp, #4]
   15490:	lslne	r0, r0, #4
   15494:	strbne	r0, [r4], #1
   15498:	add	r6, r6, #1
   1549c:	mov	r0, #90	; 0x5a
   154a0:	cmp	r6, r7
   154a4:	cmpcc	r4, ip
   154a8:	bcc	154b4 <sprintf@plt+0x3bc0>
   154ac:	sub	sp, fp, #28
   154b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154b4:	cmp	r2, #1
   154b8:	blt	154ec <sprintf@plt+0x3bf8>
   154bc:	add	r0, r2, #3
   154c0:	bic	r0, r0, #3
   154c4:	cmp	r0, sl
   154c8:	bne	15338 <sprintf@plt+0x3a44>
   154cc:	sub	r0, r2, sl
   154d0:	add	r0, r0, #8
   154d4:	mov	r1, #255	; 0xff
   154d8:	ldr	r3, [sp, #4]
   154dc:	tst	r3, r1, lsr r0
   154e0:	mov	r0, #22
   154e4:	bne	154ac <sprintf@plt+0x3bb8>
   154e8:	b	154f0 <sprintf@plt+0x3bfc>
   154ec:	mov	r2, sl
   154f0:	ldr	r0, [r8]
   154f4:	mov	r1, #65	; 0x41
   154f8:	strb	r1, [r0]
   154fc:	subs	r0, r2, #256	; 0x100
   15500:	movne	r0, r2
   15504:	ldr	r1, [r9]
   15508:	strb	r0, [r1]
   1550c:	str	r6, [r5]
   15510:	str	r4, [r9]
   15514:	mov	r0, #0
   15518:	sub	sp, fp, #28
   1551c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15524:	add	fp, sp, #28
   15528:	sub	sp, sp, #20
   1552c:	str	r0, [sp, #12]
   15530:	mov	r4, #2
   15534:	str	r3, [sp, #4]
   15538:	cmp	r2, r3
   1553c:	bcs	1567c <sprintf@plt+0x3d88>
   15540:	mov	r6, r1
   15544:	str	r2, [sp, #8]
   15548:	ldr	r8, [r2]
   1554c:	ldrb	r1, [r8]
   15550:	sub	r0, r1, #1
   15554:	uxtb	r0, r0
   15558:	cmp	r0, #62	; 0x3e
   1555c:	bls	155a0 <sprintf@plt+0x3cac>
   15560:	ldr	r2, [sp, #8]
   15564:	add	r2, r2, #4
   15568:	ldr	r0, [sp, #4]
   1556c:	cmp	r2, r0
   15570:	bcc	15544 <sprintf@plt+0x3c50>
   15574:	b	15694 <sprintf@plt+0x3da0>
   15578:	ldrb	r0, [r0]
   1557c:	cmp	r0, #0
   15580:	beq	15688 <sprintf@plt+0x3d94>
   15584:	ldr	r0, [sp, #16]
   15588:	uxtab	r8, r8, r0
   1558c:	ldrb	r1, [r8, #1]!
   15590:	sub	r0, r1, #1
   15594:	uxtb	r0, r0
   15598:	cmp	r0, #63	; 0x3f
   1559c:	bcs	15560 <sprintf@plt+0x3c6c>
   155a0:	sub	r4, r8, r6
   155a4:	cmp	r4, #16384	; 0x4000
   155a8:	bge	15560 <sprintf@plt+0x3c6c>
   155ac:	str	r1, [sp, #16]
   155b0:	ldr	r5, [sp, #12]
   155b4:	mov	r0, r8
   155b8:	ldrb	r1, [r0]
   155bc:	cmp	r1, #0
   155c0:	beq	15584 <sprintf@plt+0x3c90>
   155c4:	and	r2, r1, #192	; 0xc0
   155c8:	add	sl, r0, #1
   155cc:	cmp	r2, #192	; 0xc0
   155d0:	bne	155f4 <sprintf@plt+0x3d00>
   155d4:	ldrb	r0, [sl]
   155d8:	and	r1, r1, #63	; 0x3f
   155dc:	orr	r1, r0, r1, lsl #8
   155e0:	mov	r0, r6
   155e4:	ldrb	r1, [r0, r1]!
   155e8:	cmp	r1, #0
   155ec:	bne	155c4 <sprintf@plt+0x3cd0>
   155f0:	b	15584 <sprintf@plt+0x3c90>
   155f4:	cmp	r2, #0
   155f8:	bne	15678 <sprintf@plt+0x3d84>
   155fc:	bl	14b08 <sprintf@plt+0x3214>
   15600:	mov	r7, r0
   15604:	ldrb	r0, [r5]
   15608:	cmp	r7, r0
   1560c:	bne	15584 <sprintf@plt+0x3c90>
   15610:	mov	r2, r5
   15614:	ldrb	r1, [r2, #1]!
   15618:	cmp	r7, #0
   1561c:	beq	15664 <sprintf@plt+0x3d70>
   15620:	add	r9, r5, #2
   15624:	uxtb	r0, r1
   15628:	bl	1569c <sprintf@plt+0x3da8>
   1562c:	mov	r5, r0
   15630:	ldrb	r0, [sl]
   15634:	bl	1569c <sprintf@plt+0x3da8>
   15638:	cmp	r5, r0
   1563c:	bne	15584 <sprintf@plt+0x3c90>
   15640:	subs	r7, r7, #1
   15644:	add	sl, sl, #1
   15648:	ldrb	r1, [r9], #1
   1564c:	bne	15624 <sprintf@plt+0x3d30>
   15650:	sub	r5, r9, #1
   15654:	mov	r0, sl
   15658:	cmp	r1, #0
   1565c:	bne	155b8 <sprintf@plt+0x3cc4>
   15660:	b	15578 <sprintf@plt+0x3c84>
   15664:	mov	r0, sl
   15668:	mov	r5, r2
   1566c:	cmp	r1, #0
   15670:	bne	155b8 <sprintf@plt+0x3cc4>
   15674:	b	15578 <sprintf@plt+0x3c84>
   15678:	mov	r4, #90	; 0x5a
   1567c:	bl	118e8 <__errno_location@plt>
   15680:	str	r4, [r0]
   15684:	mvn	r4, #0
   15688:	mov	r0, r4
   1568c:	sub	sp, fp, #28
   15690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15694:	mov	r4, #2
   15698:	b	1567c <sprintf@plt+0x3d88>
   1569c:	sub	r1, r0, #65	; 0x41
   156a0:	cmp	r1, #26
   156a4:	addcc	r0, r0, #32
   156a8:	bx	lr
   156ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156b0:	add	fp, sp, #28
   156b4:	sub	sp, sp, #28
   156b8:	mov	r0, #0
   156bc:	str	r0, [sp, #20]
   156c0:	str	r0, [sp, #16]
   156c4:	str	r0, [sp, #24]
   156c8:	str	r2, [sp, #4]
   156cc:	ldr	r0, [r2, #8]
   156d0:	bl	15a80 <sprintf@plt+0x418c>
   156d4:	str	r0, [sp, #8]
   156d8:	ldrb	r0, [r0]
   156dc:	cmp	r0, #42	; 0x2a
   156e0:	beq	157c0 <sprintf@plt+0x3ecc>
   156e4:	movw	r1, #36969	; 0x9069
   156e8:	movt	r1, #1
   156ec:	add	r2, sp, #12
   156f0:	ldr	r0, [sp, #8]
   156f4:	bl	115c4 <rb_strtok_r@plt>
   156f8:	cmp	r0, #0
   156fc:	beq	157c0 <sprintf@plt+0x3ecc>
   15700:	mov	r7, r0
   15704:	add	r5, sp, #12
   15708:	mov	r0, #72	; 0x48
   1570c:	bl	15ab0 <sprintf@plt+0x41bc>
   15710:	mov	r9, r0
   15714:	mov	sl, #2
   15718:	mov	r6, #0
   1571c:	mov	r4, r7
   15720:	b	15728 <sprintf@plt+0x3e34>
   15724:	add	r4, r4, #1
   15728:	ldrb	r8, [r4]
   1572c:	cmp	r8, #46	; 0x2e
   15730:	beq	15758 <sprintf@plt+0x3e64>
   15734:	cmp	r8, #0
   15738:	beq	1576c <sprintf@plt+0x3e78>
   1573c:	bl	117c8 <__ctype_b_loc@plt>
   15740:	ldr	r0, [r0]
   15744:	add	r0, r0, r8, lsl #1
   15748:	ldrb	r0, [r0, #1]
   1574c:	tst	r0, #8
   15750:	bne	15724 <sprintf@plt+0x3e30>
   15754:	b	15810 <sprintf@plt+0x3f1c>
   15758:	cmp	r6, #3
   1575c:	bge	1582c <sprintf@plt+0x3f38>
   15760:	add	r6, r6, #1
   15764:	mov	sl, #1
   15768:	b	15724 <sprintf@plt+0x3e30>
   1576c:	sub	r0, r6, #1
   15770:	cmp	r0, #2
   15774:	bcc	15838 <sprintf@plt+0x3f44>
   15778:	mov	r6, r9
   1577c:	str	sl, [r6], #60	; 0x3c
   15780:	add	r0, r9, #4
   15784:	mov	r1, r7
   15788:	mov	r2, #53	; 0x35
   1578c:	bl	1166c <rb_strlcpy@plt>
   15790:	mov	r0, r9
   15794:	mov	r1, r6
   15798:	add	r2, sp, #16
   1579c:	bl	15ad0 <sprintf@plt+0x41dc>
   157a0:	mov	r0, #0
   157a4:	movw	r1, #36969	; 0x9069
   157a8:	movt	r1, #1
   157ac:	mov	r2, r5
   157b0:	bl	115c4 <rb_strtok_r@plt>
   157b4:	mov	r7, r0
   157b8:	cmp	r0, #0
   157bc:	bne	15708 <sprintf@plt+0x3e14>
   157c0:	ldr	r0, [sp, #8]
   157c4:	bl	15b9c <sprintf@plt+0x42a8>
   157c8:	ldr	r4, [sp, #4]
   157cc:	ldr	r0, [r4, #4]
   157d0:	bl	1175c <atoi@plt>
   157d4:	ldr	r7, [r4]
   157d8:	ldr	r1, [r4, #12]
   157dc:	and	r2, r0, #3
   157e0:	add	r3, sp, #16
   157e4:	mov	r0, r7
   157e8:	bl	15ba8 <sprintf@plt+0x42b4>
   157ec:	cmp	r0, #0
   157f0:	subne	sp, fp, #28
   157f4:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157f8:	movw	r1, #37171	; 0x9133
   157fc:	movt	r1, #1
   15800:	mov	r0, #67	; 0x43
   15804:	bl	12430 <sprintf@plt+0xb3c>
   15808:	mov	r0, #3
   1580c:	bl	118dc <exit@plt>
   15810:	movw	r1, #37029	; 0x90a5
   15814:	movt	r1, #1
   15818:	mov	r0, #67	; 0x43
   1581c:	mov	r2, r8
   15820:	bl	12430 <sprintf@plt+0xb3c>
   15824:	mov	r0, #3
   15828:	bl	118dc <exit@plt>
   1582c:	movw	r1, #36971	; 0x906b
   15830:	movt	r1, #1
   15834:	b	15800 <sprintf@plt+0x3f0c>
   15838:	movw	r1, #37109	; 0x90f5
   1583c:	movt	r1, #1
   15840:	b	15800 <sprintf@plt+0x3f0c>
   15844:	push	{r4, sl, fp, lr}
   15848:	add	fp, sp, #8
   1584c:	ldr	r4, [r2]
   15850:	mov	r0, r4
   15854:	bl	15c60 <sprintf@plt+0x436c>
   15858:	cmp	r0, #0
   1585c:	beq	15868 <sprintf@plt+0x3f74>
   15860:	pop	{r4, sl, fp, lr}
   15864:	b	15d80 <sprintf@plt+0x448c>
   15868:	movw	r1, #37296	; 0x91b0
   1586c:	movt	r1, #1
   15870:	mov	r0, #87	; 0x57
   15874:	mov	r2, r4
   15878:	pop	{r4, sl, fp, lr}
   1587c:	b	12430 <sprintf@plt+0xb3c>
   15880:	b	15e98 <sprintf@plt+0x45a4>
   15884:	push	{fp, lr}
   15888:	mov	fp, sp
   1588c:	ldr	r0, [r2]
   15890:	bl	1175c <atoi@plt>
   15894:	mov	r2, r0
   15898:	cmn	r0, #1
   1589c:	movwgt	r0, #44520	; 0xade8
   158a0:	movtgt	r0, #2
   158a4:	strgt	r2, [r0]
   158a8:	popgt	{fp, pc}
   158ac:	movw	r1, #37448	; 0x9248
   158b0:	movt	r1, #1
   158b4:	mov	r0, #67	; 0x43
   158b8:	bl	12430 <sprintf@plt+0xb3c>
   158bc:	mov	r0, #3
   158c0:	bl	118dc <exit@plt>
   158c4:	push	{r4, r5, fp, lr}
   158c8:	add	fp, sp, #8
   158cc:	sub	sp, sp, #8
   158d0:	movw	r5, #61828	; 0xf184
   158d4:	movt	r5, #2
   158d8:	ldr	r0, [r5]
   158dc:	mov	r4, sp
   158e0:	mov	r1, r4
   158e4:	bl	116cc <rb_dictionary_foreach_start@plt>
   158e8:	ldr	r0, [r5]
   158ec:	mov	r1, r4
   158f0:	bl	115dc <rb_dictionary_foreach_cur@plt>
   158f4:	cmp	r0, #0
   158f8:	beq	15924 <sprintf@plt+0x4030>
   158fc:	mov	r4, sp
   15900:	bl	159e4 <sprintf@plt+0x40f0>
   15904:	ldr	r0, [r5]
   15908:	mov	r1, r4
   1590c:	bl	11684 <rb_dictionary_foreach_next@plt>
   15910:	ldr	r0, [r5]
   15914:	mov	r1, r4
   15918:	bl	115dc <rb_dictionary_foreach_cur@plt>
   1591c:	cmp	r0, #0
   15920:	bne	15900 <sprintf@plt+0x400c>
   15924:	bl	15e98 <sprintf@plt+0x45a4>
   15928:	sub	sp, fp, #8
   1592c:	pop	{r4, r5, fp, pc}
   15930:	push	{r4, r5, fp, lr}
   15934:	add	fp, sp, #8
   15938:	mov	r4, r0
   1593c:	movw	r0, #61420	; 0xefec
   15940:	movt	r0, #2
   15944:	ldr	r0, [r0, #8]
   15948:	cmp	r0, #0
   1594c:	beq	159c8 <sprintf@plt+0x40d4>
   15950:	mov	r0, r4
   15954:	bl	15ecc <sprintf@plt+0x45d8>
   15958:	movw	r0, #44460	; 0xadac
   1595c:	movt	r0, #2
   15960:	ldr	r5, [r0, #12]
   15964:	mov	r0, #16
   15968:	bl	15ab0 <sprintf@plt+0x41bc>
   1596c:	mov	r2, r0
   15970:	mov	r0, r4
   15974:	mov	r1, r5
   15978:	bl	15edc <sprintf@plt+0x45e8>
   1597c:	movw	r1, #37485	; 0x926d
   15980:	movt	r1, #1
   15984:	mov	r0, r4
   15988:	bl	15eec <sprintf@plt+0x45f8>
   1598c:	cmp	r0, #0
   15990:	beq	159c0 <sprintf@plt+0x40cc>
   15994:	movw	r1, #37965	; 0x944d
   15998:	movt	r1, #1
   1599c:	mov	r0, r4
   159a0:	bl	15eec <sprintf@plt+0x45f8>
   159a4:	cmp	r0, #0
   159a8:	beq	159c0 <sprintf@plt+0x40cc>
   159ac:	mov	r0, r4
   159b0:	bl	15f3c <sprintf@plt+0x4648>
   159b4:	cmp	r0, #0
   159b8:	moveq	r0, r4
   159bc:	bleq	1600c <sprintf@plt+0x4718>
   159c0:	mov	r0, #1
   159c4:	pop	{r4, r5, fp, pc}
   159c8:	movw	r0, #44460	; 0xadac
   159cc:	movt	r0, #2
   159d0:	ldr	r1, [r0, #12]
   159d4:	mov	r0, r4
   159d8:	bl	12d1c <sprintf@plt+0x1428>
   159dc:	mov	r0, #1
   159e0:	pop	{r4, r5, fp, pc}
   159e4:	movw	r1, #37700	; 0x9344
   159e8:	movt	r1, #1
   159ec:	b	164fc <sprintf@plt+0x4c08>
   159f0:	movw	r1, #37726	; 0x935e
   159f4:	movt	r1, #1
   159f8:	b	164fc <sprintf@plt+0x4c08>
   159fc:	push	{r4, sl, fp, lr}
   15a00:	add	fp, sp, #8
   15a04:	mov	r4, r0
   15a08:	movw	r0, #44460	; 0xadac
   15a0c:	movt	r0, #2
   15a10:	ldr	r1, [r0, #12]
   15a14:	mov	r0, r4
   15a18:	bl	160a8 <sprintf@plt+0x47b4>
   15a1c:	cmp	r0, #0
   15a20:	beq	15a70 <sprintf@plt+0x417c>
   15a24:	ldrb	r0, [r0]
   15a28:	cmp	r0, #0
   15a2c:	bne	15a70 <sprintf@plt+0x417c>
   15a30:	movw	r1, #37485	; 0x926d
   15a34:	movt	r1, #1
   15a38:	mov	r0, r4
   15a3c:	bl	15eec <sprintf@plt+0x45f8>
   15a40:	cmp	r0, #0
   15a44:	beq	15a70 <sprintf@plt+0x417c>
   15a48:	movw	r1, #37965	; 0x944d
   15a4c:	movt	r1, #1
   15a50:	mov	r0, r4
   15a54:	bl	15eec <sprintf@plt+0x45f8>
   15a58:	cmp	r0, #0
   15a5c:	popeq	{r4, sl, fp, pc}
   15a60:	mov	r0, r4
   15a64:	bl	15f3c <sprintf@plt+0x4648>
   15a68:	cmp	r0, #0
   15a6c:	beq	15a74 <sprintf@plt+0x4180>
   15a70:	pop	{r4, sl, fp, pc}
   15a74:	mov	r0, r4
   15a78:	pop	{r4, sl, fp, lr}
   15a7c:	b	1600c <sprintf@plt+0x4718>
   15a80:	push	{r4, sl, fp, lr}
   15a84:	add	fp, sp, #8
   15a88:	mov	r4, r0
   15a8c:	bl	116e4 <strlen@plt>
   15a90:	add	r0, r0, #1
   15a94:	bl	117ec <malloc@plt>
   15a98:	cmp	r0, #0
   15a9c:	beq	15aac <sprintf@plt+0x41b8>
   15aa0:	mov	r1, r4
   15aa4:	pop	{r4, sl, fp, lr}
   15aa8:	b	11750 <strcpy@plt>
   15aac:	bl	117bc <rb_outofmemory@plt>
   15ab0:	push	{fp, lr}
   15ab4:	mov	fp, sp
   15ab8:	mov	r1, r0
   15abc:	mov	r0, #1
   15ac0:	bl	115f4 <calloc@plt>
   15ac4:	cmp	r0, #0
   15ac8:	popne	{fp, pc}
   15acc:	bl	117bc <rb_outofmemory@plt>
   15ad0:	push	{fp, lr}
   15ad4:	mov	fp, sp
   15ad8:	cmp	r0, #0
   15adc:	beq	15b3c <sprintf@plt+0x4248>
   15ae0:	cmp	r1, #0
   15ae4:	beq	15b5c <sprintf@plt+0x4268>
   15ae8:	cmp	r2, #0
   15aec:	beq	15b7c <sprintf@plt+0x4288>
   15af0:	mov	r3, #0
   15af4:	stm	r1, {r0, r3}
   15af8:	ldr	r0, [r2]
   15afc:	str	r0, [r1, #8]
   15b00:	ldr	r0, [r2]
   15b04:	cmp	r0, #0
   15b08:	beq	15b18 <sprintf@plt+0x4224>
   15b0c:	add	r0, r0, #4
   15b10:	str	r1, [r0]
   15b14:	b	15b28 <sprintf@plt+0x4234>
   15b18:	mov	r0, r2
   15b1c:	ldr	r3, [r0, #4]!
   15b20:	cmp	r3, #0
   15b24:	streq	r1, [r0]
   15b28:	str	r1, [r2]
   15b2c:	ldr	r0, [r2, #8]
   15b30:	add	r0, r0, #1
   15b34:	str	r0, [r2, #8]
   15b38:	pop	{fp, pc}
   15b3c:	movw	r0, #36007	; 0x8ca7
   15b40:	movt	r0, #1
   15b44:	movw	r1, #35912	; 0x8c48
   15b48:	movt	r1, #1
   15b4c:	movw	r3, #36020	; 0x8cb4
   15b50:	movt	r3, #1
   15b54:	mov	r2, #143	; 0x8f
   15b58:	bl	11654 <__assert_fail@plt>
   15b5c:	movw	r0, #37219	; 0x9163
   15b60:	movt	r0, #1
   15b64:	movw	r1, #35912	; 0x8c48
   15b68:	movt	r1, #1
   15b6c:	movw	r3, #36020	; 0x8cb4
   15b70:	movt	r3, #1
   15b74:	mov	r2, #144	; 0x90
   15b78:	bl	11654 <__assert_fail@plt>
   15b7c:	movw	r0, #35994	; 0x8c9a
   15b80:	movt	r0, #1
   15b84:	movw	r1, #35912	; 0x8c48
   15b88:	movt	r1, #1
   15b8c:	movw	r3, #36020	; 0x8cb4
   15b90:	movt	r3, #1
   15b94:	mov	r2, #145	; 0x91
   15b98:	bl	11654 <__assert_fail@plt>
   15b9c:	cmp	r0, #0
   15ba0:	bxeq	lr
   15ba4:	b	11690 <free@plt>
   15ba8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15bac:	add	fp, sp, #24
   15bb0:	mov	r5, #0
   15bb4:	cmp	r0, #0
   15bb8:	beq	15bd0 <sprintf@plt+0x42dc>
   15bbc:	mov	r7, r1
   15bc0:	cmp	r1, #0
   15bc4:	movne	r6, r2
   15bc8:	cmpne	r2, #0
   15bcc:	bne	15bd8 <sprintf@plt+0x42e4>
   15bd0:	mov	r0, r5
   15bd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15bd8:	mov	r8, r3
   15bdc:	mov	r4, r0
   15be0:	bl	15c60 <sprintf@plt+0x436c>
   15be4:	cmp	r0, #0
   15be8:	beq	15bfc <sprintf@plt+0x4308>
   15bec:	mov	r5, r0
   15bf0:	mov	r0, #0
   15bf4:	strb	r0, [r5, #784]	; 0x310
   15bf8:	b	15c20 <sprintf@plt+0x432c>
   15bfc:	mov	r0, #800	; 0x320
   15c00:	bl	15ab0 <sprintf@plt+0x41bc>
   15c04:	mov	r5, r0
   15c08:	bl	11870 <rb_make_rb_dlink_node@plt>
   15c0c:	mov	r1, r0
   15c10:	movw	r2, #61420	; 0xefec
   15c14:	movt	r2, #2
   15c18:	mov	r0, r5
   15c1c:	bl	15ad0 <sprintf@plt+0x41dc>
   15c20:	mov	r0, r5
   15c24:	mov	r1, r4
   15c28:	mov	r2, #256	; 0x100
   15c2c:	bl	1166c <rb_strlcpy@plt>
   15c30:	add	r0, r5, #256	; 0x100
   15c34:	mov	r1, r7
   15c38:	mov	r2, #512	; 0x200
   15c3c:	bl	1166c <rb_strlcpy@plt>
   15c40:	strb	r6, [r5, #768]	; 0x300
   15c44:	add	r1, r5, #772	; 0x304
   15c48:	mov	r0, r8
   15c4c:	bl	15cb0 <sprintf@plt+0x43bc>
   15c50:	mov	r0, #0
   15c54:	str	r0, [r5, #796]	; 0x31c
   15c58:	mov	r0, r5
   15c5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15c60:	push	{r4, r5, r6, sl, fp, lr}
   15c64:	add	fp, sp, #16
   15c68:	mov	r4, r0
   15c6c:	movw	r0, #61420	; 0xefec
   15c70:	movt	r0, #2
   15c74:	ldr	r6, [r0]
   15c78:	cmp	r6, #0
   15c7c:	beq	15ca4 <sprintf@plt+0x43b0>
   15c80:	ldr	r5, [r6]
   15c84:	mov	r0, r5
   15c88:	mov	r1, r4
   15c8c:	bl	115e8 <strcasecmp@plt>
   15c90:	cmp	r0, #0
   15c94:	beq	15ca8 <sprintf@plt+0x43b4>
   15c98:	ldr	r6, [r6, #8]
   15c9c:	cmp	r6, #0
   15ca0:	bne	15c80 <sprintf@plt+0x438c>
   15ca4:	mov	r5, #0
   15ca8:	mov	r0, r5
   15cac:	pop	{r4, r5, r6, sl, fp, pc}
   15cb0:	push	{fp, lr}
   15cb4:	mov	fp, sp
   15cb8:	cmp	r0, #0
   15cbc:	beq	15d40 <sprintf@plt+0x444c>
   15cc0:	cmp	r1, #0
   15cc4:	beq	15d60 <sprintf@plt+0x446c>
   15cc8:	ldr	r2, [r0]
   15ccc:	cmp	r2, #0
   15cd0:	popeq	{fp, pc}
   15cd4:	ldr	r3, [r1]
   15cd8:	cmp	r3, #0
   15cdc:	beq	15d14 <sprintf@plt+0x4420>
   15ce0:	ldr	r2, [r0, #4]
   15ce4:	str	r3, [r2, #8]
   15ce8:	ldr	r2, [r0, #4]
   15cec:	str	r2, [r3, #4]
   15cf0:	ldr	r2, [r0]
   15cf4:	str	r2, [r1]
   15cf8:	mov	r2, #0
   15cfc:	str	r2, [r0]
   15d00:	str	r2, [r0, #4]
   15d04:	ldr	r2, [r0, #8]!
   15d08:	ldr	r3, [r1, #8]
   15d0c:	add	r2, r3, r2
   15d10:	b	15d30 <sprintf@plt+0x443c>
   15d14:	str	r2, [r1]
   15d18:	ldr	r2, [r0, #4]
   15d1c:	str	r2, [r1, #4]
   15d20:	mov	r2, #0
   15d24:	str	r2, [r0]
   15d28:	str	r2, [r0, #4]
   15d2c:	ldr	r2, [r0, #8]!
   15d30:	str	r2, [r1, #8]
   15d34:	mov	r1, #0
   15d38:	str	r1, [r0]
   15d3c:	pop	{fp, pc}
   15d40:	movw	r0, #37216	; 0x9160
   15d44:	movt	r0, #1
   15d48:	movw	r1, #35912	; 0x8c48
   15d4c:	movt	r1, #1
   15d50:	movw	r3, #37229	; 0x916d
   15d54:	movt	r3, #1
   15d58:	mov	r2, #324	; 0x144
   15d5c:	bl	11654 <__assert_fail@plt>
   15d60:	movw	r0, #37285	; 0x91a5
   15d64:	movt	r0, #1
   15d68:	movw	r1, #35912	; 0x8c48
   15d6c:	movt	r1, #1
   15d70:	movw	r3, #37229	; 0x916d
   15d74:	movt	r3, #1
   15d78:	movw	r2, #325	; 0x145
   15d7c:	bl	11654 <__assert_fail@plt>
   15d80:	push	{r4, sl, fp, lr}
   15d84:	add	fp, sp, #8
   15d88:	mov	r4, r0
   15d8c:	ldr	r0, [r0, #788]	; 0x314
   15d90:	cmp	r0, #1
   15d94:	movge	r0, #1
   15d98:	strbge	r0, [r4, #784]	; 0x310
   15d9c:	popge	{r4, sl, fp, pc}
   15da0:	mov	r0, r4
   15da4:	bl	15db4 <sprintf@plt+0x44c0>
   15da8:	mov	r0, r4
   15dac:	pop	{r4, sl, fp, lr}
   15db0:	b	15b9c <sprintf@plt+0x42a8>
   15db4:	push	{fp, lr}
   15db8:	mov	fp, sp
   15dbc:	cmp	r0, #0
   15dc0:	beq	15dd8 <sprintf@plt+0x44e4>
   15dc4:	bl	15df8 <sprintf@plt+0x4504>
   15dc8:	cmp	r0, #0
   15dcc:	popeq	{fp, pc}
   15dd0:	pop	{fp, lr}
   15dd4:	b	11714 <rb_free_rb_dlink_node@plt>
   15dd8:	movw	r0, #36007	; 0x8ca7
   15ddc:	movt	r0, #1
   15de0:	movw	r1, #35912	; 0x8c48
   15de4:	movt	r1, #1
   15de8:	movw	r3, #37340	; 0x91dc
   15dec:	movt	r3, #1
   15df0:	mov	r2, #288	; 0x120
   15df4:	bl	11654 <__assert_fail@plt>
   15df8:	push	{fp, lr}
   15dfc:	mov	fp, sp
   15e00:	cmp	r0, #0
   15e04:	beq	15e78 <sprintf@plt+0x4584>
   15e08:	mov	r1, r0
   15e0c:	movw	ip, #61420	; 0xefec
   15e10:	movt	ip, #2
   15e14:	ldr	r3, [ip]
   15e18:	mov	r0, r3
   15e1c:	cmp	r3, #0
   15e20:	beq	15e74 <sprintf@plt+0x4580>
   15e24:	ldr	r2, [r0]
   15e28:	ldr	r3, [r0, #8]
   15e2c:	cmp	r2, r1
   15e30:	bne	15e18 <sprintf@plt+0x4524>
   15e34:	add	r1, r3, #4
   15e38:	cmp	r3, #0
   15e3c:	addeq	r1, ip, #4
   15e40:	ldr	r2, [r0, #4]
   15e44:	str	r2, [r1]
   15e48:	ldmib	r0, {r1, r2}
   15e4c:	cmp	r1, #0
   15e50:	mov	r3, ip
   15e54:	addne	r3, r1, #8
   15e58:	str	r2, [r3]
   15e5c:	mov	r1, #0
   15e60:	str	r1, [r0, #4]
   15e64:	str	r1, [r0, #8]
   15e68:	ldr	r1, [ip, #8]
   15e6c:	sub	r1, r1, #1
   15e70:	str	r1, [ip, #8]
   15e74:	pop	{fp, pc}
   15e78:	movw	r0, #36007	; 0x8ca7
   15e7c:	movt	r0, #1
   15e80:	movw	r1, #35912	; 0x8c48
   15e84:	movt	r1, #1
   15e88:	movw	r3, #37389	; 0x920d
   15e8c:	movt	r3, #1
   15e90:	movw	r2, #259	; 0x103
   15e94:	bl	11654 <__assert_fail@plt>
   15e98:	push	{r4, sl, fp, lr}
   15e9c:	add	fp, sp, #8
   15ea0:	movw	r0, #61420	; 0xefec
   15ea4:	movt	r0, #2
   15ea8:	ldr	r4, [r0]
   15eac:	cmp	r4, #0
   15eb0:	beq	15ec8 <sprintf@plt+0x45d4>
   15eb4:	ldr	r0, [r4]
   15eb8:	ldr	r4, [r4, #8]
   15ebc:	bl	15d80 <sprintf@plt+0x448c>
   15ec0:	cmp	r4, #0
   15ec4:	bne	15eb4 <sprintf@plt+0x45c0>
   15ec8:	pop	{r4, sl, fp, pc}
   15ecc:	ldr	r1, [r0, #460]	; 0x1cc
   15ed0:	add	r1, r1, #1
   15ed4:	str	r1, [r0, #460]	; 0x1cc
   15ed8:	bx	lr
   15edc:	ldr	r0, [r0, #464]	; 0x1d0
   15ee0:	add	r0, r0, r1, lsl #4
   15ee4:	str	r2, [r0, #8]
   15ee8:	bx	lr
   15eec:	push	{r4, sl, fp, lr}
   15ef0:	add	fp, sp, #8
   15ef4:	sub	sp, sp, #8
   15ef8:	mov	r2, r1
   15efc:	mov	r4, r0
   15f00:	add	r1, sp, #4
   15f04:	mov	r0, r2
   15f08:	bl	16018 <sprintf@plt+0x4724>
   15f0c:	mov	r1, r0
   15f10:	mov	r0, #1
   15f14:	cmp	r1, #0
   15f18:	beq	15f34 <sprintf@plt+0x4640>
   15f1c:	ldr	r1, [sp, #4]
   15f20:	mov	r0, r4
   15f24:	bl	16048 <sprintf@plt+0x4754>
   15f28:	sub	r0, r0, #2
   15f2c:	clz	r0, r0
   15f30:	lsr	r0, r0, #5
   15f34:	sub	sp, fp, #8
   15f38:	pop	{r4, sl, fp, pc}
   15f3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15f40:	add	fp, sp, #24
   15f44:	mov	r4, r0
   15f48:	movw	r8, #44460	; 0xadac
   15f4c:	movt	r8, #2
   15f50:	ldr	r1, [r8, #12]
   15f54:	bl	160a8 <sprintf@plt+0x47b4>
   15f58:	mov	r6, r0
   15f5c:	ldrh	r1, [r4, #248]	; 0xf8
   15f60:	mov	r0, #1
   15f64:	mov	r9, #0
   15f68:	cmp	r1, #2
   15f6c:	mov	r7, #1
   15f70:	beq	15f80 <sprintf@plt+0x468c>
   15f74:	cmp	r1, #10
   15f78:	bne	16004 <sprintf@plt+0x4710>
   15f7c:	mov	r7, #2
   15f80:	strb	r0, [r6]
   15f84:	ldr	r0, [r4]
   15f88:	movw	r1, #37490	; 0x9272
   15f8c:	movt	r1, #1
   15f90:	bl	123c4 <sprintf@plt+0xad0>
   15f94:	movw	r0, #61420	; 0xefec
   15f98:	movt	r0, #2
   15f9c:	ldr	r5, [r0]
   15fa0:	cmp	r5, #0
   15fa4:	bne	15fb8 <sprintf@plt+0x46c4>
   15fa8:	b	15fdc <sprintf@plt+0x46e8>
   15fac:	ldr	r5, [r5, #8]
   15fb0:	cmp	r5, #0
   15fb4:	beq	15fdc <sprintf@plt+0x46e8>
   15fb8:	ldr	r0, [r5]
   15fbc:	ldrb	r1, [r0, #784]	; 0x310
   15fc0:	cmp	r1, #0
   15fc4:	bne	15fac <sprintf@plt+0x46b8>
   15fc8:	ldrb	r1, [r0, #768]	; 0x300
   15fcc:	tst	r7, r1
   15fd0:	movne	r1, r4
   15fd4:	blne	160b8 <sprintf@plt+0x47c4>
   15fd8:	b	15fac <sprintf@plt+0x46b8>
   15fdc:	ldr	r0, [r6, #12]
   15fe0:	cmp	r0, #0
   15fe4:	beq	16004 <sprintf@plt+0x4710>
   15fe8:	movw	r0, #44520	; 0xade8
   15fec:	movt	r0, #2
   15ff0:	ldr	r2, [r0]
   15ff4:	ldr	r1, [r8, #12]
   15ff8:	mov	r0, r4
   15ffc:	bl	16188 <sprintf@plt+0x4894>
   16000:	mov	r9, #1
   16004:	mov	r0, r9
   16008:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1600c:	movw	r1, #37673	; 0x9329
   16010:	movt	r1, #1
   16014:	b	164fc <sprintf@plt+0x4c08>
   16018:	push	{r4, sl, fp, lr}
   1601c:	add	fp, sp, #8
   16020:	mov	r4, r1
   16024:	bl	16058 <sprintf@plt+0x4764>
   16028:	cmp	r0, #0
   1602c:	beq	16040 <sprintf@plt+0x474c>
   16030:	ldr	r0, [r0, #12]
   16034:	str	r0, [r4]
   16038:	mov	r0, #1
   1603c:	pop	{r4, sl, fp, pc}
   16040:	mov	r0, #0
   16044:	pop	{r4, sl, fp, pc}
   16048:	ldr	r0, [r0, #464]	; 0x1d0
   1604c:	add	r0, r0, r1, lsl #4
   16050:	ldr	r0, [r0, #12]
   16054:	bx	lr
   16058:	push	{r4, r5, r6, sl, fp, lr}
   1605c:	add	fp, sp, #16
   16060:	mov	r4, r0
   16064:	movw	r0, #61832	; 0xf188
   16068:	movt	r0, #2
   1606c:	ldr	r6, [r0]
   16070:	cmp	r6, #0
   16074:	beq	1609c <sprintf@plt+0x47a8>
   16078:	ldr	r5, [r6]
   1607c:	ldr	r0, [r5, #16]
   16080:	mov	r1, r4
   16084:	bl	115e8 <strcasecmp@plt>
   16088:	cmp	r0, #0
   1608c:	beq	160a0 <sprintf@plt+0x47ac>
   16090:	ldr	r6, [r6, #8]
   16094:	cmp	r6, #0
   16098:	bne	16078 <sprintf@plt+0x4784>
   1609c:	mov	r5, #0
   160a0:	mov	r0, r5
   160a4:	pop	{r4, r5, r6, sl, fp, pc}
   160a8:	ldr	r0, [r0, #464]	; 0x1d0
   160ac:	add	r0, r0, r1, lsl #4
   160b0:	ldr	r0, [r0, #8]
   160b4:	bx	lr
   160b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   160bc:	add	fp, sp, #24
   160c0:	sub	sp, sp, #256	; 0x100
   160c4:	mov	r7, r1
   160c8:	mov	r4, r0
   160cc:	mov	r0, #24
   160d0:	bl	15ab0 <sprintf@plt+0x41bc>
   160d4:	mov	r5, r0
   160d8:	movw	r0, #44460	; 0xadac
   160dc:	movt	r0, #2
   160e0:	ldr	r1, [r0, #12]
   160e4:	mov	r0, r7
   160e8:	bl	160a8 <sprintf@plt+0x47b4>
   160ec:	mov	r8, r0
   160f0:	stm	r5, {r4, r7}
   160f4:	ldrh	r0, [r7, #248]!	; 0xf8
   160f8:	cmp	r0, #10
   160fc:	beq	1616c <sprintf@plt+0x4878>
   16100:	cmp	r0, #2
   16104:	bne	16114 <sprintf@plt+0x4820>
   16108:	ldrb	r0, [r4, #768]	; 0x300
   1610c:	tst	r0, #1
   16110:	beq	16178 <sprintf@plt+0x4884>
   16114:	mov	r6, sp
   16118:	mov	r0, r6
   1611c:	mov	r1, #256	; 0x100
   16120:	mov	r2, r7
   16124:	mov	r3, r4
   16128:	bl	13440 <sprintf@plt+0x1b4c>
   1612c:	movw	r2, #25012	; 0x61b4
   16130:	movt	r2, #1
   16134:	mov	r0, r6
   16138:	mov	r1, #2
   1613c:	mov	r3, r5
   16140:	bl	11d98 <sprintf@plt+0x4a4>
   16144:	str	r0, [r5, #8]
   16148:	add	r1, r5, #12
   1614c:	add	r2, r8, #4
   16150:	mov	r0, r5
   16154:	bl	15ad0 <sprintf@plt+0x41dc>
   16158:	ldr	r0, [r4, #788]	; 0x314
   1615c:	add	r0, r0, #1
   16160:	str	r0, [r4, #788]	; 0x314
   16164:	sub	sp, fp, #24
   16168:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1616c:	ldrb	r0, [r4, #768]	; 0x300
   16170:	tst	r0, #2
   16174:	bne	16114 <sprintf@plt+0x4820>
   16178:	mov	r0, r5
   1617c:	bl	15b9c <sprintf@plt+0x42a8>
   16180:	sub	sp, fp, #24
   16184:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16188:	push	{r4, r5, r6, sl, fp, lr}
   1618c:	add	fp, sp, #16
   16190:	mov	r4, r2
   16194:	mov	r5, r1
   16198:	mov	r6, r0
   1619c:	bl	116f0 <rb_current_time@plt>
   161a0:	add	r0, r0, r4
   161a4:	ldr	r1, [r6, #464]	; 0x1d0
   161a8:	add	r1, r1, r5, lsl #4
   161ac:	str	r0, [r1, #4]
   161b0:	pop	{r4, r5, r6, sl, fp, pc}
   161b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161b8:	add	fp, sp, #28
   161bc:	sub	sp, sp, #4
   161c0:	mov	r6, r3
   161c4:	mov	r7, r1
   161c8:	mov	r4, r0
   161cc:	movw	sl, #44460	; 0xadac
   161d0:	movt	sl, #2
   161d4:	ldr	r1, [sl, #12]
   161d8:	ldr	r9, [r3]
   161dc:	ldr	r8, [r3, #4]
   161e0:	mov	r0, r8
   161e4:	bl	160a8 <sprintf@plt+0x47b4>
   161e8:	cmp	r0, #0
   161ec:	beq	16230 <sprintf@plt+0x493c>
   161f0:	mov	r5, r0
   161f4:	cmp	r4, #0
   161f8:	cmpne	r7, #0
   161fc:	bne	16238 <sprintf@plt+0x4944>
   16200:	mov	r0, r9
   16204:	bl	163c0 <sprintf@plt+0x4acc>
   16208:	ldr	r0, [r6, #8]
   1620c:	bl	12120 <sprintf@plt+0x82c>
   16210:	add	r0, r6, #12
   16214:	add	r1, r5, #4
   16218:	bl	16434 <sprintf@plt+0x4b40>
   1621c:	mov	r0, r6
   16220:	bl	15b9c <sprintf@plt+0x42a8>
   16224:	ldr	r0, [r5, #12]
   16228:	cmp	r0, #0
   1622c:	beq	1627c <sprintf@plt+0x4988>
   16230:	sub	sp, fp, #28
   16234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16238:	mov	r0, r6
   1623c:	mov	r1, r4
   16240:	bl	162cc <sprintf@plt+0x49d8>
   16244:	cmp	r0, #0
   16248:	beq	16200 <sprintf@plt+0x490c>
   1624c:	ldr	r0, [r9, #792]	; 0x318
   16250:	add	r0, r0, #1
   16254:	str	r0, [r9, #792]	; 0x318
   16258:	ldr	r1, [sl, #12]
   1625c:	add	r3, r9, #256	; 0x100
   16260:	mov	r0, r8
   16264:	mov	r2, r9
   16268:	bl	1293c <sprintf@plt+0x1048>
   1626c:	mov	r0, r8
   16270:	sub	sp, fp, #28
   16274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16278:	b	159e4 <sprintf@plt+0x40f0>
   1627c:	ldr	r0, [r8]
   16280:	movw	r1, #37526	; 0x9296
   16284:	movt	r1, #1
   16288:	bl	123c4 <sprintf@plt+0xad0>
   1628c:	mov	r0, r5
   16290:	bl	15b9c <sprintf@plt+0x42a8>
   16294:	ldr	r1, [sl, #12]
   16298:	mov	r0, r8
   1629c:	mov	r2, #0
   162a0:	bl	15edc <sprintf@plt+0x45e8>
   162a4:	ldr	r1, [sl, #12]
   162a8:	mov	r0, r8
   162ac:	bl	164d4 <sprintf@plt+0x4be0>
   162b0:	ldr	r1, [sl, #12]
   162b4:	mov	r0, r8
   162b8:	bl	12d1c <sprintf@plt+0x1428>
   162bc:	mov	r0, r8
   162c0:	sub	sp, fp, #28
   162c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162c8:	b	164e8 <sprintf@plt+0x4bf4>
   162cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   162d0:	add	fp, sp, #24
   162d4:	ldr	r5, [r0]
   162d8:	ldr	r0, [r5, #780]	; 0x30c
   162dc:	mov	r8, #1
   162e0:	cmp	r0, #0
   162e4:	beq	1639c <sprintf@plt+0x4aa8>
   162e8:	mov	r6, r1
   162ec:	mov	r0, r1
   162f0:	mov	r1, #46	; 0x2e
   162f4:	bl	1163c <strrchr@plt>
   162f8:	cmp	r0, #0
   162fc:	beq	16364 <sprintf@plt+0x4a70>
   16300:	mov	r7, r0
   16304:	ldrb	r0, [r7, #1]!
   16308:	cmp	r0, #0
   1630c:	beq	16364 <sprintf@plt+0x4a70>
   16310:	ldr	r4, [r5, #772]	; 0x304
   16314:	cmp	r4, #0
   16318:	beq	16358 <sprintf@plt+0x4a64>
   1631c:	ldr	r1, [r4]
   16320:	ldr	r3, [r1]
   16324:	cmp	r3, #1
   16328:	mov	r0, r6
   1632c:	beq	1633c <sprintf@plt+0x4a48>
   16330:	cmp	r3, #2
   16334:	mov	r0, r7
   16338:	bne	163a4 <sprintf@plt+0x4ab0>
   1633c:	add	r1, r1, #4
   16340:	bl	118d0 <strcmp@plt>
   16344:	cmp	r0, #0
   16348:	beq	1639c <sprintf@plt+0x4aa8>
   1634c:	ldr	r4, [r4, #8]
   16350:	cmp	r4, #0
   16354:	bne	1631c <sprintf@plt+0x4a28>
   16358:	mov	r8, #0
   1635c:	mov	r0, r8
   16360:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16364:	ldr	r0, [r5, #796]	; 0x31c
   16368:	add	r4, r0, #3600	; 0xe10
   1636c:	bl	116f0 <rb_current_time@plt>
   16370:	mov	r8, #0
   16374:	cmp	r4, r0
   16378:	bge	1639c <sprintf@plt+0x4aa8>
   1637c:	movw	r1, #37610	; 0x92ea
   16380:	movt	r1, #1
   16384:	mov	r0, #87	; 0x57
   16388:	mov	r2, r5
   1638c:	mov	r3, r6
   16390:	bl	12430 <sprintf@plt+0xb3c>
   16394:	bl	116f0 <rb_current_time@plt>
   16398:	str	r0, [r5, #796]	; 0x31c
   1639c:	mov	r0, r8
   163a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   163a4:	movw	r1, #37563	; 0x92bb
   163a8:	movt	r1, #1
   163ac:	mov	r0, #67	; 0x43
   163b0:	mov	r2, r5
   163b4:	bl	12430 <sprintf@plt+0xb3c>
   163b8:	mov	r0, #3
   163bc:	bl	118dc <exit@plt>
   163c0:	push	{r4, r5, r6, r7, fp, lr}
   163c4:	add	fp, sp, #16
   163c8:	mov	r4, r0
   163cc:	ldr	r0, [r0, #788]	; 0x314
   163d0:	subs	r0, r0, #1
   163d4:	str	r0, [r4, #788]	; 0x314
   163d8:	bgt	16430 <sprintf@plt+0x4b3c>
   163dc:	ldrb	r0, [r4, #784]	; 0x310
   163e0:	cmp	r0, #0
   163e4:	beq	16430 <sprintf@plt+0x4b3c>
   163e8:	mov	r5, r4
   163ec:	ldr	r6, [r5, #772]!	; 0x304
   163f0:	cmp	r6, #0
   163f4:	beq	1641c <sprintf@plt+0x4b28>
   163f8:	ldr	r7, [r6, #8]
   163fc:	mov	r0, r6
   16400:	mov	r1, r5
   16404:	bl	16434 <sprintf@plt+0x4b40>
   16408:	mov	r0, r6
   1640c:	bl	15b9c <sprintf@plt+0x42a8>
   16410:	cmp	r7, #0
   16414:	mov	r6, r7
   16418:	bne	163f8 <sprintf@plt+0x4b04>
   1641c:	mov	r0, r4
   16420:	bl	15db4 <sprintf@plt+0x44c0>
   16424:	mov	r0, r4
   16428:	pop	{r4, r5, r6, r7, fp, lr}
   1642c:	b	15b9c <sprintf@plt+0x42a8>
   16430:	pop	{r4, r5, r6, r7, fp, pc}
   16434:	push	{fp, lr}
   16438:	mov	fp, sp
   1643c:	cmp	r0, #0
   16440:	beq	16494 <sprintf@plt+0x4ba0>
   16444:	cmp	r1, #0
   16448:	beq	164b4 <sprintf@plt+0x4bc0>
   1644c:	ldr	ip, [r0, #4]
   16450:	ldr	r3, [r0, #8]
   16454:	add	r2, r3, #4
   16458:	cmp	r3, #0
   1645c:	addeq	r2, r1, #4
   16460:	str	ip, [r2]
   16464:	ldmib	r0, {r2, ip}
   16468:	cmp	r2, #0
   1646c:	mov	r3, r1
   16470:	addne	r3, r2, #8
   16474:	str	ip, [r3]
   16478:	mov	r2, #0
   1647c:	str	r2, [r0, #4]
   16480:	str	r2, [r0, #8]
   16484:	ldr	r0, [r1, #8]
   16488:	sub	r0, r0, #1
   1648c:	str	r0, [r1, #8]
   16490:	pop	{fp, pc}
   16494:	movw	r0, #37219	; 0x9163
   16498:	movt	r0, #1
   1649c:	movw	r1, #35912	; 0x8c48
   164a0:	movt	r1, #1
   164a4:	movw	r3, #35940	; 0x8c64
   164a8:	movt	r3, #1
   164ac:	mov	r2, #235	; 0xeb
   164b0:	bl	11654 <__assert_fail@plt>
   164b4:	movw	r0, #35994	; 0x8c9a
   164b8:	movt	r0, #1
   164bc:	movw	r1, #35912	; 0x8c48
   164c0:	movt	r1, #1
   164c4:	movw	r3, #35940	; 0x8c64
   164c8:	movt	r3, #1
   164cc:	mov	r2, #236	; 0xec
   164d0:	bl	11654 <__assert_fail@plt>
   164d4:	ldr	r0, [r0, #464]	; 0x1d0
   164d8:	add	r0, r0, r1, lsl #4
   164dc:	mov	r1, #0
   164e0:	str	r1, [r0, #4]
   164e4:	bx	lr
   164e8:	ldr	r1, [r0, #460]	; 0x1cc
   164ec:	subs	r1, r1, #1
   164f0:	str	r1, [r0, #460]	; 0x1cc
   164f4:	bxne	lr
   164f8:	b	12c3c <sprintf@plt+0x1348>
   164fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16500:	add	fp, sp, #24
   16504:	mov	r7, r1
   16508:	mov	r9, r0
   1650c:	movw	r8, #44460	; 0xadac
   16510:	movt	r8, #2
   16514:	ldr	r1, [r8, #12]
   16518:	bl	160a8 <sprintf@plt+0x47b4>
   1651c:	cmp	r0, #0
   16520:	beq	165c0 <sprintf@plt+0x4ccc>
   16524:	mov	r5, r0
   16528:	ldr	r0, [r0, #12]
   1652c:	cmp	r0, #0
   16530:	beq	16584 <sprintf@plt+0x4c90>
   16534:	add	r6, r5, #4
   16538:	ldr	r0, [r9]
   1653c:	mov	r1, r7
   16540:	bl	123c4 <sprintf@plt+0xad0>
   16544:	ldr	r4, [r6]
   16548:	cmp	r4, #0
   1654c:	beq	16584 <sprintf@plt+0x4c90>
   16550:	ldr	r7, [r4]
   16554:	ldr	r4, [r4, #8]
   16558:	ldr	r0, [r7, #8]
   1655c:	bl	12120 <sprintf@plt+0x82c>
   16560:	ldr	r0, [r7]
   16564:	bl	163c0 <sprintf@plt+0x4acc>
   16568:	add	r0, r7, #12
   1656c:	mov	r1, r6
   16570:	bl	16434 <sprintf@plt+0x4b40>
   16574:	mov	r0, r7
   16578:	bl	15b9c <sprintf@plt+0x42a8>
   1657c:	cmp	r4, #0
   16580:	bne	16550 <sprintf@plt+0x4c5c>
   16584:	mov	r0, r5
   16588:	bl	15b9c <sprintf@plt+0x42a8>
   1658c:	ldr	r1, [r8, #12]
   16590:	mov	r0, r9
   16594:	mov	r2, #0
   16598:	bl	15edc <sprintf@plt+0x45e8>
   1659c:	ldr	r1, [r8, #12]
   165a0:	mov	r0, r9
   165a4:	bl	164d4 <sprintf@plt+0x4be0>
   165a8:	ldr	r1, [r8, #12]
   165ac:	mov	r0, r9
   165b0:	bl	12d1c <sprintf@plt+0x1428>
   165b4:	mov	r0, r9
   165b8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   165bc:	b	164e8 <sprintf@plt+0x4bf4>
   165c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   165c4:	push	{fp, lr}
   165c8:	mov	fp, sp
   165cc:	ldr	r0, [r2]
   165d0:	bl	1175c <atoi@plt>
   165d4:	mov	r2, r0
   165d8:	cmn	r0, #1
   165dc:	movwgt	r0, #44620	; 0xae4c
   165e0:	movtgt	r0, #2
   165e4:	strgt	r2, [r0]
   165e8:	popgt	{fp, pc}
   165ec:	movw	r1, #37782	; 0x9396
   165f0:	movt	r1, #1
   165f4:	mov	r0, #67	; 0x43
   165f8:	bl	12430 <sprintf@plt+0xb3c>
   165fc:	mov	r0, #3
   16600:	bl	118dc <exit@plt>
   16604:	ldr	r0, [r2]
   16608:	ldrb	r0, [r0]
   1660c:	sub	r0, r0, #49	; 0x31
   16610:	clz	r0, r0
   16614:	lsr	r0, r0, #5
   16618:	movw	r1, #44624	; 0xae50
   1661c:	movt	r1, #2
   16620:	strb	r0, [r1]
   16624:	bx	lr
   16628:	push	{r4, r5, r6, r7, fp, lr}
   1662c:	add	fp, sp, #16
   16630:	sub	sp, sp, #8
   16634:	movw	r6, #61828	; 0xf184
   16638:	movt	r6, #2
   1663c:	ldr	r0, [r6]
   16640:	mov	r4, sp
   16644:	mov	r1, r4
   16648:	bl	116cc <rb_dictionary_foreach_start@plt>
   1664c:	ldr	r0, [r6]
   16650:	mov	r1, r4
   16654:	bl	115dc <rb_dictionary_foreach_cur@plt>
   16658:	cmp	r0, #0
   1665c:	beq	166b0 <sprintf@plt+0x4dbc>
   16660:	mov	r5, r0
   16664:	movw	r7, #44560	; 0xae10
   16668:	movt	r7, #2
   1666c:	mov	r4, sp
   16670:	ldr	r1, [r7, #12]
   16674:	mov	r0, r5
   16678:	bl	1685c <sprintf@plt+0x4f68>
   1667c:	cmp	r0, #0
   16680:	movne	r0, r5
   16684:	movne	r1, #2
   16688:	blne	1686c <sprintf@plt+0x4f78>
   1668c:	ldr	r0, [r6]
   16690:	mov	r1, r4
   16694:	bl	11684 <rb_dictionary_foreach_next@plt>
   16698:	ldr	r0, [r6]
   1669c:	mov	r1, r4
   166a0:	bl	115dc <rb_dictionary_foreach_cur@plt>
   166a4:	mov	r5, r0
   166a8:	cmp	r0, #0
   166ac:	bne	16670 <sprintf@plt+0x4d7c>
   166b0:	sub	sp, fp, #16
   166b4:	pop	{r4, r5, r6, r7, fp, pc}
   166b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   166bc:	add	fp, sp, #24
   166c0:	sub	sp, sp, #272	; 0x110
   166c4:	mov	r4, r0
   166c8:	bl	16948 <sprintf@plt+0x5054>
   166cc:	mov	r5, r0
   166d0:	movw	r0, #44624	; 0xae50
   166d4:	movt	r0, #2
   166d8:	ldrb	r0, [r0]
   166dc:	cmp	r0, #0
   166e0:	beq	167bc <sprintf@plt+0x4ec8>
   166e4:	ldrh	r6, [r4, #248]	; 0xf8
   166e8:	mov	r0, r4
   166ec:	bl	16968 <sprintf@plt+0x5074>
   166f0:	ldr	r0, [r4]
   166f4:	movw	r1, #37819	; 0x93bb
   166f8:	movt	r1, #1
   166fc:	bl	123c4 <sprintf@plt+0xad0>
   16700:	movw	r7, #44560	; 0xae10
   16704:	movt	r7, #2
   16708:	ldr	r1, [r7, #12]
   1670c:	mov	r0, r4
   16710:	mov	r2, r5
   16714:	bl	16910 <sprintf@plt+0x501c>
   16718:	movw	r9, #44620	; 0xae4c
   1671c:	movt	r9, #2
   16720:	ldr	r2, [r9]
   16724:	ldr	r1, [r7, #12]
   16728:	mov	r0, r4
   1672c:	bl	16978 <sprintf@plt+0x5084>
   16730:	ldr	r2, [r4, #4]
   16734:	movw	r3, #37965	; 0x944d
   16738:	movt	r3, #1
   1673c:	mov	r0, r6
   16740:	mov	r1, #1
   16744:	bl	115ac <rb_socket@plt>
   16748:	str	r0, [r5]
   1674c:	cmp	r0, #0
   16750:	beq	167ec <sprintf@plt+0x4ef8>
   16754:	mov	r6, r0
   16758:	add	r5, r4, #248	; 0xf8
   1675c:	add	r1, r4, #64	; 0x40
   16760:	add	r8, sp, #136	; 0x88
   16764:	mov	r0, r8
   16768:	mov	r2, #128	; 0x80
   1676c:	bl	11708 <memcpy@plt>
   16770:	add	r7, sp, #8
   16774:	mov	r0, r7
   16778:	mov	r1, r5
   1677c:	mov	r2, #128	; 0x80
   16780:	bl	11708 <memcpy@plt>
   16784:	mov	r0, #0
   16788:	strh	r0, [sp, #138]	; 0x8a
   1678c:	mov	r0, #28928	; 0x7100
   16790:	strh	r0, [sp, #10]
   16794:	ldr	r0, [r9]
   16798:	str	r4, [sp]
   1679c:	str	r0, [sp, #4]
   167a0:	movw	r3, #27044	; 0x69a4
   167a4:	movt	r3, #1
   167a8:	mov	r0, r6
   167ac:	mov	r1, r7
   167b0:	mov	r2, r8
   167b4:	bl	11558 <rb_connect_tcp@plt>
   167b8:	b	16818 <sprintf@plt+0x4f24>
   167bc:	mov	r0, r5
   167c0:	bl	16904 <sprintf@plt+0x5010>
   167c4:	ldr	r0, [r4]
   167c8:	movw	r1, #37932	; 0x942c
   167cc:	movt	r1, #1
   167d0:	bl	123c4 <sprintf@plt+0xad0>
   167d4:	movw	r0, #44560	; 0xae10
   167d8:	movt	r0, #2
   167dc:	ldr	r1, [r0, #12]
   167e0:	mov	r0, r4
   167e4:	bl	12d1c <sprintf@plt+0x1428>
   167e8:	b	16818 <sprintf@plt+0x4f24>
   167ec:	bl	118e8 <__errno_location@plt>
   167f0:	ldr	r0, [r0]
   167f4:	bl	11504 <strerror@plt>
   167f8:	mov	r2, r0
   167fc:	movw	r1, #37971	; 0x9453
   16800:	movt	r1, #1
   16804:	mov	r0, #68	; 0x44
   16808:	bl	12430 <sprintf@plt+0xb3c>
   1680c:	mov	r0, r4
   16810:	mov	r1, #2
   16814:	bl	1686c <sprintf@plt+0x4f78>
   16818:	mov	r0, #1
   1681c:	sub	sp, fp, #24
   16820:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16824:	push	{r4, sl, fp, lr}
   16828:	add	fp, sp, #8
   1682c:	mov	r4, r0
   16830:	movw	r0, #44560	; 0xae10
   16834:	movt	r0, #2
   16838:	ldr	r1, [r0, #12]
   1683c:	mov	r0, r4
   16840:	bl	1685c <sprintf@plt+0x4f68>
   16844:	cmp	r0, #0
   16848:	popeq	{r4, sl, fp, pc}
   1684c:	mov	r0, r4
   16850:	mov	r1, #2
   16854:	pop	{r4, sl, fp, lr}
   16858:	b	1686c <sprintf@plt+0x4f78>
   1685c:	ldr	r0, [r0, #464]	; 0x1d0
   16860:	add	r0, r0, r1, lsl #4
   16864:	ldr	r0, [r0, #8]
   16868:	bx	lr
   1686c:	push	{r4, r5, r6, r7, fp, lr}
   16870:	add	fp, sp, #16
   16874:	mov	r5, r1
   16878:	mov	r4, r0
   1687c:	movw	r7, #44560	; 0xae10
   16880:	movt	r7, #2
   16884:	ldr	r1, [r7, #12]
   16888:	bl	1685c <sprintf@plt+0x4f68>
   1688c:	mov	r6, r0
   16890:	add	r0, r4, #440	; 0x1b8
   16894:	movw	r1, #35436	; 0x8a6c
   16898:	movt	r1, #1
   1689c:	mov	r2, #11
   168a0:	bl	1166c <rb_strlcpy@plt>
   168a4:	ldr	r0, [r6]
   168a8:	cmp	r0, #0
   168ac:	beq	168b4 <sprintf@plt+0x4fc0>
   168b0:	bl	1172c <rb_close@plt>
   168b4:	mov	r0, r6
   168b8:	bl	16904 <sprintf@plt+0x5010>
   168bc:	ldr	r1, [r7, #12]
   168c0:	mov	r0, r4
   168c4:	mov	r2, #0
   168c8:	bl	16910 <sprintf@plt+0x501c>
   168cc:	ldr	r1, [r7, #12]
   168d0:	mov	r0, r4
   168d4:	bl	16920 <sprintf@plt+0x502c>
   168d8:	movw	r0, #38024	; 0x9488
   168dc:	movt	r0, #1
   168e0:	ldr	r1, [r0, r5, lsl #2]
   168e4:	ldr	r0, [r4]
   168e8:	bl	123c4 <sprintf@plt+0xad0>
   168ec:	ldr	r1, [r7, #12]
   168f0:	mov	r0, r4
   168f4:	bl	12d1c <sprintf@plt+0x1428>
   168f8:	mov	r0, r4
   168fc:	pop	{r4, r5, r6, r7, fp, lr}
   16900:	b	16934 <sprintf@plt+0x5040>
   16904:	cmp	r0, #0
   16908:	bxeq	lr
   1690c:	b	11690 <free@plt>
   16910:	ldr	r0, [r0, #464]	; 0x1d0
   16914:	add	r0, r0, r1, lsl #4
   16918:	str	r2, [r0, #8]
   1691c:	bx	lr
   16920:	ldr	r0, [r0, #464]	; 0x1d0
   16924:	add	r0, r0, r1, lsl #4
   16928:	mov	r1, #0
   1692c:	str	r1, [r0, #4]
   16930:	bx	lr
   16934:	ldr	r1, [r0, #460]	; 0x1cc
   16938:	subs	r1, r1, #1
   1693c:	str	r1, [r0, #460]	; 0x1cc
   16940:	bxne	lr
   16944:	b	12c3c <sprintf@plt+0x1348>
   16948:	push	{fp, lr}
   1694c:	mov	fp, sp
   16950:	mov	r0, #1
   16954:	mov	r1, #4
   16958:	bl	115f4 <calloc@plt>
   1695c:	cmp	r0, #0
   16960:	popne	{fp, pc}
   16964:	bl	117bc <rb_outofmemory@plt>
   16968:	ldr	r1, [r0, #460]	; 0x1cc
   1696c:	add	r1, r1, #1
   16970:	str	r1, [r0, #460]	; 0x1cc
   16974:	bx	lr
   16978:	push	{r4, r5, r6, sl, fp, lr}
   1697c:	add	fp, sp, #16
   16980:	mov	r4, r2
   16984:	mov	r5, r1
   16988:	mov	r6, r0
   1698c:	bl	116f0 <rb_current_time@plt>
   16990:	add	r0, r0, r4
   16994:	ldr	r1, [r6, #464]	; 0x1d0
   16998:	add	r1, r1, r5, lsl #4
   1699c:	str	r0, [r1, #4]
   169a0:	pop	{r4, r5, r6, sl, fp, pc}
   169a4:	push	{r4, r5, r6, r7, fp, lr}
   169a8:	add	fp, sp, #16
   169ac:	sub	sp, sp, #40	; 0x28
   169b0:	mov	r4, r2
   169b4:	cmp	r1, #0
   169b8:	bne	16a30 <sprintf@plt+0x513c>
   169bc:	movw	r0, #44560	; 0xae10
   169c0:	movt	r0, #2
   169c4:	ldr	r1, [r0, #12]
   169c8:	mov	r0, r4
   169cc:	bl	1685c <sprintf@plt+0x4f68>
   169d0:	mov	r5, r0
   169d4:	ldrh	r3, [r4, #246]	; 0xf6
   169d8:	ldrh	r0, [r4, #62]	; 0x3e
   169dc:	str	r0, [sp]
   169e0:	add	r6, sp, #8
   169e4:	movw	r2, #38005	; 0x9475
   169e8:	movt	r2, #1
   169ec:	mov	r0, r6
   169f0:	mov	r1, #32
   169f4:	bl	1187c <snprintf@plt>
   169f8:	mov	r0, r6
   169fc:	bl	116e4 <strlen@plt>
   16a00:	mov	r7, r0
   16a04:	ldr	r0, [r5]
   16a08:	mov	r1, r6
   16a0c:	mov	r2, r7
   16a10:	bl	11648 <rb_write@plt>
   16a14:	cmp	r0, r7
   16a18:	bne	16a30 <sprintf@plt+0x513c>
   16a1c:	ldr	r0, [r5]
   16a20:	mov	r1, r4
   16a24:	bl	16a44 <sprintf@plt+0x5150>
   16a28:	sub	sp, fp, #16
   16a2c:	pop	{r4, r5, r6, r7, fp, pc}
   16a30:	mov	r0, r4
   16a34:	mov	r1, #2
   16a38:	bl	1686c <sprintf@plt+0x4f78>
   16a3c:	sub	sp, fp, #16
   16a40:	pop	{r4, r5, r6, r7, fp, pc}
   16a44:	push	{r4, r5, r6, sl, fp, lr}
   16a48:	add	fp, sp, #16
   16a4c:	sub	sp, sp, #136	; 0x88
   16a50:	mov	r4, r1
   16a54:	mov	r5, r0
   16a58:	mov	r6, sp
   16a5c:	mov	r0, r6
   16a60:	mov	r1, #0
   16a64:	mov	r2, #129	; 0x81
   16a68:	bl	11624 <memset@plt>
   16a6c:	mov	r0, r5
   16a70:	mov	r1, r6
   16a74:	mov	r2, #128	; 0x80
   16a78:	bl	116a8 <rb_read@plt>
   16a7c:	cmn	r0, #1
   16a80:	ble	16ab4 <sprintf@plt+0x51c0>
   16a84:	cmp	r0, #0
   16a88:	beq	16ae8 <sprintf@plt+0x51f4>
   16a8c:	mov	r0, sp
   16a90:	bl	16b90 <sprintf@plt+0x529c>
   16a94:	cmp	r0, #0
   16a98:	beq	16b7c <sprintf@plt+0x5288>
   16a9c:	ldrb	r6, [r0]
   16aa0:	orr	r1, r6, #32
   16aa4:	cmp	r1, #126	; 0x7e
   16aa8:	bne	16af0 <sprintf@plt+0x51fc>
   16aac:	add	r0, r0, #1
   16ab0:	b	16a9c <sprintf@plt+0x51a8>
   16ab4:	bl	118e8 <__errno_location@plt>
   16ab8:	ldr	r0, [r0]
   16abc:	bl	11540 <rb_ignore_errno@plt>
   16ac0:	cmp	r0, #0
   16ac4:	beq	16ae8 <sprintf@plt+0x51f4>
   16ac8:	movw	r2, #27204	; 0x6a44
   16acc:	movt	r2, #1
   16ad0:	mov	r0, r5
   16ad4:	mov	r1, #1
   16ad8:	mov	r3, r4
   16adc:	bl	1157c <rb_setselect@plt>
   16ae0:	sub	sp, fp, #16
   16ae4:	pop	{r4, r5, r6, sl, fp, pc}
   16ae8:	mov	r1, #2
   16aec:	b	16b80 <sprintf@plt+0x528c>
   16af0:	add	r1, r4, #440	; 0x1b8
   16af4:	cmp	r6, #0
   16af8:	beq	16b64 <sprintf@plt+0x5270>
   16afc:	mov	r2, #10
   16b00:	mov	r3, #1
   16b04:	b	16b28 <sprintf@plt+0x5234>
   16b08:	cmp	r5, #58	; 0x3a
   16b0c:	cmpne	r5, #91	; 0x5b
   16b10:	bne	16b50 <sprintf@plt+0x525c>
   16b14:	ldrb	r6, [r0, r3]
   16b18:	cmp	r6, #0
   16b1c:	addne	r3, r3, #1
   16b20:	cmpne	r2, #0
   16b24:	beq	16b64 <sprintf@plt+0x5270>
   16b28:	uxtb	r5, r6
   16b2c:	cmp	r5, #57	; 0x39
   16b30:	bgt	16b08 <sprintf@plt+0x5214>
   16b34:	cmp	r5, #32
   16b38:	beq	16b14 <sprintf@plt+0x5220>
   16b3c:	cmp	r5, #10
   16b40:	beq	16b64 <sprintf@plt+0x5270>
   16b44:	cmp	r5, #13
   16b48:	bne	16b58 <sprintf@plt+0x5264>
   16b4c:	b	16b64 <sprintf@plt+0x5270>
   16b50:	cmp	r5, #64	; 0x40
   16b54:	beq	16b64 <sprintf@plt+0x5270>
   16b58:	strb	r6, [r1], #1
   16b5c:	sub	r2, r2, #1
   16b60:	b	16b14 <sprintf@plt+0x5220>
   16b64:	mov	r0, #0
   16b68:	strb	r0, [r1]
   16b6c:	mov	r0, r4
   16b70:	bl	16c60 <sprintf@plt+0x536c>
   16b74:	sub	sp, fp, #16
   16b78:	pop	{r4, r5, r6, sl, fp, pc}
   16b7c:	mov	r1, #3
   16b80:	mov	r0, r4
   16b84:	bl	1686c <sprintf@plt+0x4f78>
   16b88:	sub	sp, fp, #16
   16b8c:	pop	{r4, r5, r6, sl, fp, pc}
   16b90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16b94:	add	fp, sp, #24
   16b98:	mov	r7, r0
   16b9c:	mov	r1, #58	; 0x3a
   16ba0:	bl	115d0 <strchr@plt>
   16ba4:	cmp	r0, #0
   16ba8:	beq	16c54 <sprintf@plt+0x5360>
   16bac:	mov	r5, r0
   16bb0:	mov	r4, #0
   16bb4:	strb	r4, [r5], #1
   16bb8:	mov	r0, r5
   16bbc:	mov	r1, #58	; 0x3a
   16bc0:	bl	115d0 <strchr@plt>
   16bc4:	cmp	r0, #0
   16bc8:	beq	16c4c <sprintf@plt+0x5358>
   16bcc:	mov	r8, r0
   16bd0:	mov	r4, #0
   16bd4:	strb	r4, [r8], #1
   16bd8:	mov	r0, r7
   16bdc:	mov	r1, #44	; 0x2c
   16be0:	bl	115d0 <strchr@plt>
   16be4:	cmp	r0, #0
   16be8:	beq	16c4c <sprintf@plt+0x5358>
   16bec:	mov	r6, r0
   16bf0:	mov	r4, #0
   16bf4:	strb	r4, [r0]
   16bf8:	mov	r0, r7
   16bfc:	bl	1175c <atoi@plt>
   16c00:	cmp	r0, #0
   16c04:	beq	16c4c <sprintf@plt+0x5358>
   16c08:	add	r0, r6, #1
   16c0c:	bl	1175c <atoi@plt>
   16c10:	cmp	r0, #0
   16c14:	beq	16c4c <sprintf@plt+0x5358>
   16c18:	movw	r1, #38015	; 0x947f
   16c1c:	movt	r1, #1
   16c20:	mov	r0, r5
   16c24:	bl	1178c <strstr@plt>
   16c28:	cmp	r0, #0
   16c2c:	beq	16c4c <sprintf@plt+0x5358>
   16c30:	mov	r0, r8
   16c34:	mov	r1, #58	; 0x3a
   16c38:	bl	115d0 <strchr@plt>
   16c3c:	cmp	r0, #0
   16c40:	movne	r1, #0
   16c44:	strbne	r1, [r0], #1
   16c48:	movne	r4, r0
   16c4c:	mov	r0, r4
   16c50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16c54:	mov	r4, #0
   16c58:	mov	r0, r4
   16c5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16c60:	push	{r4, r5, r6, sl, fp, lr}
   16c64:	add	fp, sp, #16
   16c68:	mov	r4, r0
   16c6c:	movw	r6, #44560	; 0xae10
   16c70:	movt	r6, #2
   16c74:	ldr	r1, [r6, #12]
   16c78:	bl	1685c <sprintf@plt+0x4f68>
   16c7c:	mov	r5, r0
   16c80:	ldr	r0, [r0]
   16c84:	cmp	r0, #0
   16c88:	beq	16c90 <sprintf@plt+0x539c>
   16c8c:	bl	1172c <rb_close@plt>
   16c90:	mov	r0, r5
   16c94:	bl	16904 <sprintf@plt+0x5010>
   16c98:	ldr	r1, [r6, #12]
   16c9c:	mov	r0, r4
   16ca0:	mov	r2, #0
   16ca4:	bl	16910 <sprintf@plt+0x501c>
   16ca8:	ldr	r1, [r6, #12]
   16cac:	mov	r0, r4
   16cb0:	bl	16920 <sprintf@plt+0x502c>
   16cb4:	ldr	r0, [r4]
   16cb8:	movw	r1, #37838	; 0x93ce
   16cbc:	movt	r1, #1
   16cc0:	bl	123c4 <sprintf@plt+0xad0>
   16cc4:	ldr	r1, [r6, #12]
   16cc8:	mov	r0, r4
   16ccc:	bl	12d1c <sprintf@plt+0x1428>
   16cd0:	mov	r0, r4
   16cd4:	pop	{r4, r5, r6, sl, fp, lr}
   16cd8:	b	16934 <sprintf@plt+0x5040>
   16cdc:	push	{fp, lr}
   16ce0:	mov	fp, sp
   16ce4:	ldr	r0, [r2]
   16ce8:	bl	1175c <atoi@plt>
   16cec:	mov	r2, r0
   16cf0:	cmn	r0, #1
   16cf4:	movwgt	r0, #44712	; 0xaea8
   16cf8:	movtgt	r0, #2
   16cfc:	strgt	r2, [r0]
   16d00:	popgt	{fp, pc}
   16d04:	movw	r1, #38057	; 0x94a9
   16d08:	movt	r1, #1
   16d0c:	mov	r0, #67	; 0x43
   16d10:	bl	12430 <sprintf@plt+0xb3c>
   16d14:	mov	r0, #3
   16d18:	bl	118dc <exit@plt>
   16d1c:	push	{r4, r5, r6, r7, fp, lr}
   16d20:	add	fp, sp, #16
   16d24:	sub	sp, sp, #8
   16d28:	movw	r6, #61828	; 0xf184
   16d2c:	movt	r6, #2
   16d30:	ldr	r0, [r6]
   16d34:	mov	r4, sp
   16d38:	mov	r1, r4
   16d3c:	bl	116cc <rb_dictionary_foreach_start@plt>
   16d40:	ldr	r0, [r6]
   16d44:	mov	r1, r4
   16d48:	bl	115dc <rb_dictionary_foreach_cur@plt>
   16d4c:	cmp	r0, #0
   16d50:	beq	16da4 <sprintf@plt+0x54b0>
   16d54:	mov	r5, r0
   16d58:	movw	r7, #44652	; 0xae6c
   16d5c:	movt	r7, #2
   16d60:	mov	r4, sp
   16d64:	ldr	r1, [r7, #12]
   16d68:	mov	r0, r5
   16d6c:	bl	16e60 <sprintf@plt+0x556c>
   16d70:	cmp	r0, #0
   16d74:	movne	r0, r5
   16d78:	movne	r1, #1
   16d7c:	blne	16e70 <sprintf@plt+0x557c>
   16d80:	ldr	r0, [r6]
   16d84:	mov	r1, r4
   16d88:	bl	11684 <rb_dictionary_foreach_next@plt>
   16d8c:	ldr	r0, [r6]
   16d90:	mov	r1, r4
   16d94:	bl	115dc <rb_dictionary_foreach_cur@plt>
   16d98:	mov	r5, r0
   16d9c:	cmp	r0, #0
   16da0:	bne	16d64 <sprintf@plt+0x5470>
   16da4:	sub	sp, fp, #16
   16da8:	pop	{r4, r5, r6, r7, fp, pc}
   16dac:	push	{r4, r5, r6, sl, fp, lr}
   16db0:	add	fp, sp, #16
   16db4:	mov	r4, r0
   16db8:	bl	16f44 <sprintf@plt+0x5650>
   16dbc:	mov	r5, r0
   16dc0:	mov	r0, r4
   16dc4:	bl	16f64 <sprintf@plt+0x5670>
   16dc8:	movw	r6, #44652	; 0xae6c
   16dcc:	movt	r6, #2
   16dd0:	ldr	r1, [r6, #12]
   16dd4:	mov	r0, r4
   16dd8:	mov	r2, r5
   16ddc:	bl	16f0c <sprintf@plt+0x5618>
   16de0:	movw	r0, #44712	; 0xaea8
   16de4:	movt	r0, #2
   16de8:	ldr	r2, [r0]
   16dec:	ldr	r1, [r6, #12]
   16df0:	mov	r0, r4
   16df4:	bl	16f74 <sprintf@plt+0x5680>
   16df8:	add	r0, r4, #192	; 0xc0
   16dfc:	movw	r1, #28576	; 0x6fa0
   16e00:	movt	r1, #1
   16e04:	mov	r2, r4
   16e08:	bl	11fa4 <sprintf@plt+0x6b0>
   16e0c:	str	r0, [r5]
   16e10:	ldr	r0, [r4]
   16e14:	movw	r1, #38091	; 0x94cb
   16e18:	movt	r1, #1
   16e1c:	bl	123c4 <sprintf@plt+0xad0>
   16e20:	mov	r0, #1
   16e24:	pop	{r4, r5, r6, sl, fp, pc}
   16e28:	push	{r4, sl, fp, lr}
   16e2c:	add	fp, sp, #8
   16e30:	mov	r4, r0
   16e34:	movw	r0, #44652	; 0xae6c
   16e38:	movt	r0, #2
   16e3c:	ldr	r1, [r0, #12]
   16e40:	mov	r0, r4
   16e44:	bl	16e60 <sprintf@plt+0x556c>
   16e48:	cmp	r0, #0
   16e4c:	popeq	{r4, sl, fp, pc}
   16e50:	mov	r0, r4
   16e54:	mov	r1, #1
   16e58:	pop	{r4, sl, fp, lr}
   16e5c:	b	16e70 <sprintf@plt+0x557c>
   16e60:	ldr	r0, [r0, #464]	; 0x1d0
   16e64:	add	r0, r0, r1, lsl #4
   16e68:	ldr	r0, [r0, #8]
   16e6c:	bx	lr
   16e70:	push	{r4, r5, r6, r7, fp, lr}
   16e74:	add	fp, sp, #16
   16e78:	mov	r5, r1
   16e7c:	mov	r4, r0
   16e80:	movw	r7, #44652	; 0xae6c
   16e84:	movt	r7, #2
   16e88:	ldr	r1, [r7, #12]
   16e8c:	bl	16e60 <sprintf@plt+0x556c>
   16e90:	mov	r6, r0
   16e94:	add	r0, r4, #376	; 0x178
   16e98:	movw	r1, #35436	; 0x8a6c
   16e9c:	movt	r1, #1
   16ea0:	mov	r2, #64	; 0x40
   16ea4:	bl	1166c <rb_strlcpy@plt>
   16ea8:	movw	r0, #38236	; 0x955c
   16eac:	movt	r0, #1
   16eb0:	ldr	r1, [r0, r5, lsl #2]
   16eb4:	ldr	r0, [r4]
   16eb8:	bl	123c4 <sprintf@plt+0xad0>
   16ebc:	ldr	r0, [r6]
   16ec0:	bl	12120 <sprintf@plt+0x82c>
   16ec4:	mov	r0, r6
   16ec8:	bl	16f00 <sprintf@plt+0x560c>
   16ecc:	ldr	r1, [r7, #12]
   16ed0:	mov	r0, r4
   16ed4:	mov	r2, #0
   16ed8:	bl	16f0c <sprintf@plt+0x5618>
   16edc:	ldr	r1, [r7, #12]
   16ee0:	mov	r0, r4
   16ee4:	bl	16f1c <sprintf@plt+0x5628>
   16ee8:	ldr	r1, [r7, #12]
   16eec:	mov	r0, r4
   16ef0:	bl	12d1c <sprintf@plt+0x1428>
   16ef4:	mov	r0, r4
   16ef8:	pop	{r4, r5, r6, r7, fp, lr}
   16efc:	b	16f30 <sprintf@plt+0x563c>
   16f00:	cmp	r0, #0
   16f04:	bxeq	lr
   16f08:	b	11690 <free@plt>
   16f0c:	ldr	r0, [r0, #464]	; 0x1d0
   16f10:	add	r0, r0, r1, lsl #4
   16f14:	str	r2, [r0, #8]
   16f18:	bx	lr
   16f1c:	ldr	r0, [r0, #464]	; 0x1d0
   16f20:	add	r0, r0, r1, lsl #4
   16f24:	mov	r1, #0
   16f28:	str	r1, [r0, #4]
   16f2c:	bx	lr
   16f30:	ldr	r1, [r0, #460]	; 0x1cc
   16f34:	subs	r1, r1, #1
   16f38:	str	r1, [r0, #460]	; 0x1cc
   16f3c:	bxne	lr
   16f40:	b	12c3c <sprintf@plt+0x1348>
   16f44:	push	{fp, lr}
   16f48:	mov	fp, sp
   16f4c:	mov	r0, #1
   16f50:	mov	r1, #4
   16f54:	bl	115f4 <calloc@plt>
   16f58:	cmp	r0, #0
   16f5c:	popne	{fp, pc}
   16f60:	bl	117bc <rb_outofmemory@plt>
   16f64:	ldr	r1, [r0, #460]	; 0x1cc
   16f68:	add	r1, r1, #1
   16f6c:	str	r1, [r0, #460]	; 0x1cc
   16f70:	bx	lr
   16f74:	push	{r4, r5, r6, sl, fp, lr}
   16f78:	add	fp, sp, #16
   16f7c:	mov	r4, r2
   16f80:	mov	r5, r1
   16f84:	mov	r6, r0
   16f88:	bl	116f0 <rb_current_time@plt>
   16f8c:	add	r0, r0, r4
   16f90:	ldr	r1, [r6, #464]	; 0x1d0
   16f94:	add	r1, r1, r5, lsl #4
   16f98:	str	r0, [r1, #4]
   16f9c:	pop	{r4, r5, r6, sl, fp, pc}
   16fa0:	push	{r4, r5, fp, lr}
   16fa4:	add	fp, sp, #8
   16fa8:	mov	r4, r3
   16fac:	cmp	r0, #0
   16fb0:	cmpne	r1, #0
   16fb4:	bne	16fc8 <sprintf@plt+0x56d4>
   16fb8:	mov	r0, r4
   16fbc:	mov	r1, #1
   16fc0:	pop	{r4, r5, fp, lr}
   16fc4:	b	16e70 <sprintf@plt+0x557c>
   16fc8:	mov	r5, r0
   16fcc:	bl	116e4 <strlen@plt>
   16fd0:	cmp	r0, #64	; 0x40
   16fd4:	bcc	16fe8 <sprintf@plt+0x56f4>
   16fd8:	mov	r0, r4
   16fdc:	mov	r1, #2
   16fe0:	pop	{r4, r5, fp, lr}
   16fe4:	b	16e70 <sprintf@plt+0x557c>
   16fe8:	add	r0, r4, #376	; 0x178
   16fec:	mov	r1, r5
   16ff0:	mov	r2, #64	; 0x40
   16ff4:	bl	1166c <rb_strlcpy@plt>
   16ff8:	mov	r0, r4
   16ffc:	pop	{r4, r5, fp, lr}
   17000:	b	17004 <sprintf@plt+0x5710>
   17004:	push	{r4, r5, r6, sl, fp, lr}
   17008:	add	fp, sp, #16
   1700c:	mov	r4, r0
   17010:	movw	r6, #44652	; 0xae6c
   17014:	movt	r6, #2
   17018:	ldr	r1, [r6, #12]
   1701c:	bl	16e60 <sprintf@plt+0x556c>
   17020:	mov	r5, r0
   17024:	mov	r2, r4
   17028:	ldr	r0, [r2], #376	; 0x178
   1702c:	movw	r1, #38207	; 0x953f
   17030:	movt	r1, #1
   17034:	bl	123c4 <sprintf@plt+0xad0>
   17038:	ldr	r0, [r5]
   1703c:	bl	12120 <sprintf@plt+0x82c>
   17040:	mov	r0, r5
   17044:	bl	16f00 <sprintf@plt+0x560c>
   17048:	ldr	r1, [r6, #12]
   1704c:	mov	r0, r4
   17050:	mov	r2, #0
   17054:	bl	16f0c <sprintf@plt+0x5618>
   17058:	ldr	r1, [r6, #12]
   1705c:	mov	r0, r4
   17060:	bl	16f1c <sprintf@plt+0x5628>
   17064:	ldr	r1, [r6, #12]
   17068:	mov	r0, r4
   1706c:	bl	12d1c <sprintf@plt+0x1428>
   17070:	mov	r0, r4
   17074:	pop	{r4, r5, r6, sl, fp, lr}
   17078:	b	16f30 <sprintf@plt+0x563c>
   1707c:	push	{fp, lr}
   17080:	mov	fp, sp
   17084:	ldr	r0, [r2]
   17088:	bl	1175c <atoi@plt>
   1708c:	mov	r2, r0
   17090:	cmn	r0, #1
   17094:	ble	170a8 <sprintf@plt+0x57b4>
   17098:	movw	r0, #44872	; 0xaf48
   1709c:	movt	r0, #2
   170a0:	str	r2, [r0]
   170a4:	pop	{fp, pc}
   170a8:	movw	r1, #38358	; 0x95d6
   170ac:	movt	r1, #1
   170b0:	mov	r0, #67	; 0x43
   170b4:	pop	{fp, lr}
   170b8:	b	12430 <sprintf@plt+0xb3c>
   170bc:	push	{r4, r5, r6, sl, fp, lr}
   170c0:	add	fp, sp, #16
   170c4:	sub	sp, sp, #8
   170c8:	ldr	r0, [r2]
   170cc:	ldrb	r0, [r0]
   170d0:	subs	r0, r0, #49	; 0x31
   170d4:	clz	r0, r0
   170d8:	lsr	r5, r0, #5
   170dc:	movw	r4, #61432	; 0xeff8
   170e0:	movt	r4, #2
   170e4:	bne	17140 <sprintf@plt+0x584c>
   170e8:	ldrb	r0, [r4]
   170ec:	cmp	r0, #0
   170f0:	beq	17114 <sprintf@plt+0x5820>
   170f4:	ldrh	r1, [r4, #54]	; 0x36
   170f8:	cmp	r1, #0
   170fc:	beq	17114 <sprintf@plt+0x5820>
   17100:	ldr	r0, [r4, #184]	; 0xb8
   17104:	cmp	r0, #0
   17108:	movweq	r0, #61432	; 0xeff8
   1710c:	movteq	r0, #2
   17110:	bleq	178e8 <sprintf@plt+0x5ff4>
   17114:	ldrb	r0, [r4, #188]	; 0xbc
   17118:	cmp	r0, #0
   1711c:	beq	171cc <sprintf@plt+0x58d8>
   17120:	ldrh	r1, [r4, #242]	; 0xf2
   17124:	cmp	r1, #0
   17128:	beq	171cc <sprintf@plt+0x58d8>
   1712c:	ldr	r0, [r4, #372]	; 0x174
   17130:	cmp	r0, #0
   17134:	addeq	r0, r4, #188	; 0xbc
   17138:	bleq	178e8 <sprintf@plt+0x5ff4>
   1713c:	b	171cc <sprintf@plt+0x58d8>
   17140:	ldr	r0, [r4, #184]	; 0xb8
   17144:	ldr	r1, [r4, #372]	; 0x174
   17148:	orrs	r1, r0, r1
   1714c:	beq	171cc <sprintf@plt+0x58d8>
   17150:	cmp	r0, #0
   17154:	beq	1715c <sprintf@plt+0x5868>
   17158:	bl	1172c <rb_close@plt>
   1715c:	ldr	r0, [r4, #372]	; 0x174
   17160:	cmp	r0, #0
   17164:	beq	1716c <sprintf@plt+0x5878>
   17168:	bl	1172c <rb_close@plt>
   1716c:	mov	r0, #0
   17170:	str	r0, [r4, #184]	; 0xb8
   17174:	str	r0, [r4, #372]	; 0x174
   17178:	movw	r6, #61828	; 0xf184
   1717c:	movt	r6, #2
   17180:	ldr	r0, [r6]
   17184:	mov	r4, sp
   17188:	mov	r1, r4
   1718c:	bl	116cc <rb_dictionary_foreach_start@plt>
   17190:	ldr	r0, [r6]
   17194:	mov	r1, r4
   17198:	bl	115dc <rb_dictionary_foreach_cur@plt>
   1719c:	cmp	r0, #0
   171a0:	beq	171cc <sprintf@plt+0x58d8>
   171a4:	mov	r4, sp
   171a8:	bl	177d0 <sprintf@plt+0x5edc>
   171ac:	ldr	r0, [r6]
   171b0:	mov	r1, r4
   171b4:	bl	11684 <rb_dictionary_foreach_next@plt>
   171b8:	ldr	r0, [r6]
   171bc:	mov	r1, r4
   171c0:	bl	115dc <rb_dictionary_foreach_cur@plt>
   171c4:	cmp	r0, #0
   171c8:	bne	171a8 <sprintf@plt+0x58b4>
   171cc:	movw	r0, #61808	; 0xf170
   171d0:	movt	r0, #2
   171d4:	strb	r5, [r0]
   171d8:	sub	sp, fp, #16
   171dc:	pop	{r4, r5, r6, sl, fp, pc}
   171e0:	push	{r4, r5, fp, lr}
   171e4:	add	fp, sp, #8
   171e8:	ldm	r2, {r4, r5}
   171ec:	mov	r0, r5
   171f0:	bl	1175c <atoi@plt>
   171f4:	sub	r1, r0, #1
   171f8:	movw	r2, #65535	; 0xffff
   171fc:	cmp	r1, r2
   17200:	bcs	17214 <sprintf@plt+0x5920>
   17204:	uxth	r1, r0
   17208:	mov	r0, r4
   1720c:	pop	{r4, r5, fp, lr}
   17210:	b	178e8 <sprintf@plt+0x5ff4>
   17214:	movw	r1, #38640	; 0x96f0
   17218:	movt	r1, #1
   1721c:	mov	r0, #67	; 0x43
   17220:	mov	r2, r4
   17224:	mov	r3, r5
   17228:	bl	12430 <sprintf@plt+0xb3c>
   1722c:	mov	r0, #3
   17230:	bl	118dc <exit@plt>
   17234:	push	{r4, sl, fp, lr}
   17238:	add	fp, sp, #8
   1723c:	movw	r4, #61432	; 0xeff8
   17240:	movt	r4, #2
   17244:	ldr	r0, [r4, #184]	; 0xb8
   17248:	cmp	r0, #0
   1724c:	beq	17254 <sprintf@plt+0x5960>
   17250:	bl	1172c <rb_close@plt>
   17254:	ldr	r0, [r4, #372]	; 0x174
   17258:	cmp	r0, #0
   1725c:	beq	17264 <sprintf@plt+0x5970>
   17260:	bl	1172c <rb_close@plt>
   17264:	movw	r0, #61432	; 0xeff8
   17268:	movt	r0, #2
   1726c:	mov	r1, #0
   17270:	mov	r2, #376	; 0x178
   17274:	pop	{r4, sl, fp, lr}
   17278:	b	11624 <memset@plt>
   1727c:	push	{r4, r5, r6, r7, fp, lr}
   17280:	add	fp, sp, #16
   17284:	mov	r4, r2
   17288:	ldr	r0, [r2, #4]
   1728c:	bl	1175c <atoi@plt>
   17290:	mov	r6, r0
   17294:	mov	r0, #40	; 0x28
   17298:	bl	17e70 <sprintf@plt+0x657c>
   1729c:	mov	r5, r0
   172a0:	sub	r0, r6, #1
   172a4:	movw	r1, #65535	; 0xffff
   172a8:	cmp	r0, r1
   172ac:	bcs	173dc <sprintf@plt+0x5ae8>
   172b0:	strh	r6, [r5, #20]
   172b4:	ldr	r7, [r4]
   172b8:	mov	r0, r7
   172bc:	bl	17e90 <sprintf@plt+0x659c>
   172c0:	str	r0, [r5, #16]
   172c4:	sub	r0, r0, #1
   172c8:	cmp	r0, #3
   172cc:	bhi	173f0 <sprintf@plt+0x5afc>
   172d0:	add	r1, pc, #0
   172d4:	ldr	pc, [r1, r0, lsl #2]
   172d8:	andeq	r7, r1, r8, ror #5
   172dc:	andeq	r7, r1, ip, asr r3
   172e0:	andeq	r7, r1, ip, lsl #6
   172e4:	andeq	r7, r1, r0, lsr r3
   172e8:	uxth	r3, r6
   172ec:	movw	r2, #38708	; 0x9734
   172f0:	movt	r2, #1
   172f4:	mov	r0, r5
   172f8:	mov	r1, #16
   172fc:	bl	1187c <snprintf@plt>
   17300:	movw	r0, #32536	; 0x7f18
   17304:	movt	r0, #1
   17308:	b	1737c <sprintf@plt+0x5a88>
   1730c:	uxth	r3, r6
   17310:	movw	r2, #38730	; 0x974a
   17314:	movt	r2, #1
   17318:	mov	r0, r5
   1731c:	mov	r1, #16
   17320:	bl	1187c <snprintf@plt>
   17324:	movw	r0, #32856	; 0x8058
   17328:	movt	r0, #1
   1732c:	b	1737c <sprintf@plt+0x5a88>
   17330:	uxth	r3, r6
   17334:	movw	r2, #38746	; 0x975a
   17338:	movt	r2, #1
   1733c:	mov	r0, r5
   17340:	mov	r1, #16
   17344:	bl	1187c <snprintf@plt>
   17348:	movw	r0, #32856	; 0x8058
   1734c:	movt	r0, #1
   17350:	str	r0, [r5, #24]
   17354:	mov	r0, #1
   17358:	b	17384 <sprintf@plt+0x5a90>
   1735c:	uxth	r3, r6
   17360:	movw	r2, #38719	; 0x973f
   17364:	movt	r2, #1
   17368:	mov	r0, r5
   1736c:	mov	r1, #16
   17370:	bl	1187c <snprintf@plt>
   17374:	movw	r0, #32652	; 0x7f8c
   17378:	movt	r0, #1
   1737c:	str	r0, [r5, #24]
   17380:	mov	r0, #0
   17384:	strb	r0, [r5, #22]
   17388:	ldrh	r6, [r5, #20]
   1738c:	ldr	r0, [r5, #16]
   17390:	mov	r1, r6
   17394:	bl	180f0 <sprintf@plt+0x67fc>
   17398:	cmp	r0, #0
   1739c:	beq	173c4 <sprintf@plt+0x5ad0>
   173a0:	ldr	r2, [r4]
   173a4:	movw	r1, #38809	; 0x9799
   173a8:	movt	r1, #1
   173ac:	mov	r0, #67	; 0x43
   173b0:	mov	r3, r6
   173b4:	bl	12430 <sprintf@plt+0xb3c>
   173b8:	mov	r0, r5
   173bc:	pop	{r4, r5, r6, r7, fp, lr}
   173c0:	b	17e64 <sprintf@plt+0x6570>
   173c4:	add	r1, r5, #28
   173c8:	movw	r2, #61812	; 0xf174
   173cc:	movt	r2, #2
   173d0:	mov	r0, r5
   173d4:	pop	{r4, r5, r6, r7, fp, lr}
   173d8:	b	18144 <sprintf@plt+0x6850>
   173dc:	ldm	r4, {r2, r3}
   173e0:	movw	r1, #38671	; 0x970f
   173e4:	movt	r1, #1
   173e8:	mov	r0, #67	; 0x43
   173ec:	b	17404 <sprintf@plt+0x5b10>
   173f0:	uxth	r3, r6
   173f4:	movw	r1, #38763	; 0x976b
   173f8:	movt	r1, #1
   173fc:	mov	r0, #67	; 0x43
   17400:	mov	r2, r7
   17404:	bl	12430 <sprintf@plt+0xb3c>
   17408:	mov	r0, #3
   1740c:	bl	118dc <exit@plt>
   17410:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17414:	add	fp, sp, #28
   17418:	sub	sp, sp, #12
   1741c:	mov	r6, r2
   17420:	ldr	r5, [r2]
   17424:	mov	r0, r5
   17428:	bl	17e90 <sprintf@plt+0x659c>
   1742c:	mov	r4, r0
   17430:	ldr	r7, [r6, #4]
   17434:	mov	r0, r7
   17438:	bl	1175c <atoi@plt>
   1743c:	mov	r6, r0
   17440:	sub	r0, r0, #1
   17444:	movw	r1, #65535	; 0xffff
   17448:	cmp	r0, r1
   1744c:	bcs	175b4 <sprintf@plt+0x5cc0>
   17450:	cmp	r4, #0
   17454:	beq	175cc <sprintf@plt+0x5cd8>
   17458:	uxth	r1, r6
   1745c:	mov	r0, r4
   17460:	bl	180f0 <sprintf@plt+0x67fc>
   17464:	cmp	r0, #0
   17468:	beq	175d8 <sprintf@plt+0x5ce4>
   1746c:	mov	r4, r0
   17470:	movw	r9, #61828	; 0xf184
   17474:	movt	r9, #2
   17478:	ldr	r0, [r9]
   1747c:	add	r5, sp, #4
   17480:	mov	r1, r5
   17484:	bl	116cc <rb_dictionary_foreach_start@plt>
   17488:	ldr	r0, [r9]
   1748c:	mov	r1, r5
   17490:	bl	115dc <rb_dictionary_foreach_cur@plt>
   17494:	cmp	r0, #0
   17498:	beq	1756c <sprintf@plt+0x5c78>
   1749c:	mov	r6, r0
   174a0:	movw	sl, #44812	; 0xaf0c
   174a4:	movt	sl, #2
   174a8:	add	r8, sp, #4
   174ac:	b	174dc <sprintf@plt+0x5be8>
   174b0:	mov	r0, r6
   174b4:	bl	182c0 <sprintf@plt+0x69cc>
   174b8:	ldr	r0, [r9]
   174bc:	mov	r1, r8
   174c0:	bl	11684 <rb_dictionary_foreach_next@plt>
   174c4:	ldr	r0, [r9]
   174c8:	mov	r1, r8
   174cc:	bl	115dc <rb_dictionary_foreach_cur@plt>
   174d0:	mov	r6, r0
   174d4:	cmp	r0, #0
   174d8:	beq	1756c <sprintf@plt+0x5c78>
   174dc:	ldr	r1, [sl, #12]
   174e0:	mov	r0, r6
   174e4:	bl	17e54 <sprintf@plt+0x6560>
   174e8:	cmp	r0, #0
   174ec:	beq	174b8 <sprintf@plt+0x5bc4>
   174f0:	mov	r7, r0
   174f4:	mov	r0, r6
   174f8:	bl	18210 <sprintf@plt+0x691c>
   174fc:	ldr	r0, [r7]
   17500:	cmp	r0, #0
   17504:	beq	174b0 <sprintf@plt+0x5bbc>
   17508:	ldrh	r1, [r4, #20]
   1750c:	b	1751c <sprintf@plt+0x5c28>
   17510:	ldr	r0, [r0, #8]
   17514:	cmp	r0, #0
   17518:	beq	174b0 <sprintf@plt+0x5bbc>
   1751c:	ldr	r5, [r0]
   17520:	ldr	r2, [r5, #8]
   17524:	ldrh	r3, [r2, #20]
   17528:	cmp	r3, r1
   1752c:	bne	17510 <sprintf@plt+0x5c1c>
   17530:	ldr	r3, [r4, #16]
   17534:	ldr	r2, [r2, #16]
   17538:	cmp	r2, r3
   1753c:	bne	17510 <sprintf@plt+0x5c1c>
   17540:	add	r0, r5, #16
   17544:	mov	r1, r7
   17548:	bl	18220 <sprintf@plt+0x692c>
   1754c:	mov	r0, r5
   17550:	bl	17e64 <sprintf@plt+0x6570>
   17554:	ldr	r0, [r7, #8]
   17558:	cmp	r0, #0
   1755c:	bne	174b0 <sprintf@plt+0x5bbc>
   17560:	mov	r0, r6
   17564:	bl	177d0 <sprintf@plt+0x5edc>
   17568:	b	174b0 <sprintf@plt+0x5bbc>
   1756c:	add	r0, r4, #28
   17570:	movw	r5, #61812	; 0xf174
   17574:	movt	r5, #2
   17578:	mov	r1, r5
   1757c:	bl	18220 <sprintf@plt+0x692c>
   17580:	mov	r0, r4
   17584:	bl	17e64 <sprintf@plt+0x6570>
   17588:	ldr	r0, [r5, #8]
   1758c:	cmp	r0, #0
   17590:	beq	1759c <sprintf@plt+0x5ca8>
   17594:	sub	sp, fp, #28
   17598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1759c:	movw	r0, #61808	; 0xf170
   175a0:	movt	r0, #2
   175a4:	mov	r1, #0
   175a8:	strb	r1, [r0]
   175ac:	sub	sp, fp, #28
   175b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   175b4:	movw	r1, #38920	; 0x9808
   175b8:	movt	r1, #1
   175bc:	mov	r0, #67	; 0x43
   175c0:	mov	r2, r5
   175c4:	mov	r3, r7
   175c8:	b	175ec <sprintf@plt+0x5cf8>
   175cc:	movw	r1, #38967	; 0x9837
   175d0:	movt	r1, #1
   175d4:	b	175e0 <sprintf@plt+0x5cec>
   175d8:	movw	r1, #39022	; 0x986e
   175dc:	movt	r1, #1
   175e0:	mov	r0, #67	; 0x43
   175e4:	mov	r2, r5
   175e8:	mov	r3, r6
   175ec:	bl	12430 <sprintf@plt+0xb3c>
   175f0:	mov	r0, #3
   175f4:	bl	118dc <exit@plt>
   175f8:	push	{r4, r5, r6, sl, fp, lr}
   175fc:	add	fp, sp, #16
   17600:	sub	sp, sp, #8
   17604:	movw	r0, #61812	; 0xf174
   17608:	movt	r0, #2
   1760c:	ldr	r5, [r0]
   17610:	cmp	r5, #0
   17614:	beq	17644 <sprintf@plt+0x5d50>
   17618:	movw	r4, #61812	; 0xf174
   1761c:	movt	r4, #2
   17620:	ldr	r0, [r5]
   17624:	ldr	r6, [r5, #8]
   17628:	bl	17e64 <sprintf@plt+0x6570>
   1762c:	mov	r0, r5
   17630:	mov	r1, r4
   17634:	bl	18220 <sprintf@plt+0x692c>
   17638:	cmp	r6, #0
   1763c:	mov	r5, r6
   17640:	bne	17620 <sprintf@plt+0x5d2c>
   17644:	movw	r5, #61828	; 0xf184
   17648:	movt	r5, #2
   1764c:	ldr	r0, [r5]
   17650:	mov	r4, sp
   17654:	mov	r1, r4
   17658:	bl	116cc <rb_dictionary_foreach_start@plt>
   1765c:	ldr	r0, [r5]
   17660:	mov	r1, r4
   17664:	bl	115dc <rb_dictionary_foreach_cur@plt>
   17668:	cmp	r0, #0
   1766c:	beq	17698 <sprintf@plt+0x5da4>
   17670:	mov	r4, sp
   17674:	bl	177d0 <sprintf@plt+0x5edc>
   17678:	ldr	r0, [r5]
   1767c:	mov	r1, r4
   17680:	bl	11684 <rb_dictionary_foreach_next@plt>
   17684:	ldr	r0, [r5]
   17688:	mov	r1, r4
   1768c:	bl	115dc <rb_dictionary_foreach_cur@plt>
   17690:	cmp	r0, #0
   17694:	bne	17674 <sprintf@plt+0x5d80>
   17698:	movw	r0, #61808	; 0xf170
   1769c:	movt	r0, #2
   176a0:	mov	r1, #0
   176a4:	strb	r1, [r0]
   176a8:	sub	sp, fp, #16
   176ac:	pop	{r4, r5, r6, sl, fp, pc}
   176b0:	push	{r4, r5, fp, lr}
   176b4:	add	fp, sp, #8
   176b8:	sub	sp, sp, #8
   176bc:	movw	r5, #61828	; 0xf184
   176c0:	movt	r5, #2
   176c4:	ldr	r0, [r5]
   176c8:	mov	r4, sp
   176cc:	mov	r1, r4
   176d0:	bl	116cc <rb_dictionary_foreach_start@plt>
   176d4:	ldr	r0, [r5]
   176d8:	mov	r1, r4
   176dc:	bl	115dc <rb_dictionary_foreach_cur@plt>
   176e0:	cmp	r0, #0
   176e4:	beq	17710 <sprintf@plt+0x5e1c>
   176e8:	mov	r4, sp
   176ec:	bl	177d0 <sprintf@plt+0x5edc>
   176f0:	ldr	r0, [r5]
   176f4:	mov	r1, r4
   176f8:	bl	11684 <rb_dictionary_foreach_next@plt>
   176fc:	ldr	r0, [r5]
   17700:	mov	r1, r4
   17704:	bl	115dc <rb_dictionary_foreach_cur@plt>
   17708:	cmp	r0, #0
   1770c:	bne	176ec <sprintf@plt+0x5df8>
   17710:	sub	sp, fp, #8
   17714:	pop	{r4, r5, fp, pc}
   17718:	push	{r4, r5, fp, lr}
   1771c:	add	fp, sp, #8
   17720:	mov	r4, r0
   17724:	movw	r0, #61808	; 0xf170
   17728:	movt	r0, #2
   1772c:	ldrb	r0, [r0]
   17730:	cmp	r0, #0
   17734:	beq	177b4 <sprintf@plt+0x5ec0>
   17738:	movw	r0, #61812	; 0xf174
   1773c:	movt	r0, #2
   17740:	ldr	r0, [r0, #8]
   17744:	cmp	r0, #0
   17748:	beq	177b4 <sprintf@plt+0x5ec0>
   1774c:	mov	r0, r4
   17750:	bl	18210 <sprintf@plt+0x691c>
   17754:	movw	r0, #44812	; 0xaf0c
   17758:	movt	r0, #2
   1775c:	ldr	r5, [r0, #12]
   17760:	mov	r0, #16
   17764:	bl	17e70 <sprintf@plt+0x657c>
   17768:	mov	r2, r0
   1776c:	mov	r0, r4
   17770:	mov	r1, r5
   17774:	bl	182d4 <sprintf@plt+0x69e0>
   17778:	movw	r1, #37485	; 0x926d
   1777c:	movt	r1, #1
   17780:	mov	r0, r4
   17784:	bl	182e4 <sprintf@plt+0x69f0>
   17788:	cmp	r0, #0
   1778c:	beq	177ac <sprintf@plt+0x5eb8>
   17790:	movw	r1, #37965	; 0x944d
   17794:	movt	r1, #1
   17798:	mov	r0, r4
   1779c:	bl	182e4 <sprintf@plt+0x69f0>
   177a0:	cmp	r0, #0
   177a4:	movne	r0, r4
   177a8:	blne	18334 <sprintf@plt+0x6a40>
   177ac:	mov	r0, #1
   177b0:	pop	{r4, r5, fp, pc}
   177b4:	movw	r0, #44812	; 0xaf0c
   177b8:	movt	r0, #2
   177bc:	ldr	r1, [r0, #12]
   177c0:	mov	r0, r4
   177c4:	bl	12d1c <sprintf@plt+0x1428>
   177c8:	mov	r0, #1
   177cc:	pop	{r4, r5, fp, pc}
   177d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   177d4:	add	fp, sp, #24
   177d8:	mov	r4, r0
   177dc:	movw	r8, #44812	; 0xaf0c
   177e0:	movt	r8, #2
   177e4:	ldr	r1, [r8, #12]
   177e8:	bl	17e54 <sprintf@plt+0x6560>
   177ec:	cmp	r0, #0
   177f0:	beq	17870 <sprintf@plt+0x5f7c>
   177f4:	mov	r5, r0
   177f8:	ldr	r0, [r4]
   177fc:	movw	r1, #39150	; 0x98ee
   17800:	movt	r1, #1
   17804:	bl	123c4 <sprintf@plt+0xad0>
   17808:	ldr	r7, [r5]
   1780c:	cmp	r7, #0
   17810:	beq	17834 <sprintf@plt+0x5f40>
   17814:	ldr	r6, [r7]
   17818:	ldr	r7, [r7, #8]
   1781c:	ldr	r0, [r6, #4]
   17820:	bl	1172c <rb_close@plt>
   17824:	mov	r0, r6
   17828:	bl	17e64 <sprintf@plt+0x6570>
   1782c:	cmp	r7, #0
   17830:	bne	17814 <sprintf@plt+0x5f20>
   17834:	mov	r0, r5
   17838:	bl	17e64 <sprintf@plt+0x6570>
   1783c:	ldr	r1, [r8, #12]
   17840:	mov	r0, r4
   17844:	mov	r2, #0
   17848:	bl	182d4 <sprintf@plt+0x69e0>
   1784c:	ldr	r1, [r8, #12]
   17850:	mov	r0, r4
   17854:	bl	186dc <sprintf@plt+0x6de8>
   17858:	ldr	r1, [r8, #12]
   1785c:	mov	r0, r4
   17860:	bl	12d1c <sprintf@plt+0x1428>
   17864:	mov	r0, r4
   17868:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1786c:	b	182c0 <sprintf@plt+0x69cc>
   17870:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17874:	push	{r4, sl, fp, lr}
   17878:	add	fp, sp, #8
   1787c:	mov	r4, r0
   17880:	movw	r0, #44812	; 0xaf0c
   17884:	movt	r0, #2
   17888:	ldr	r1, [r0, #12]
   1788c:	mov	r0, r4
   17890:	bl	17e54 <sprintf@plt+0x6560>
   17894:	cmp	r0, #0
   17898:	beq	178e4 <sprintf@plt+0x5ff0>
   1789c:	ldrb	r0, [r0, #12]
   178a0:	cmp	r0, #0
   178a4:	bne	178e4 <sprintf@plt+0x5ff0>
   178a8:	movw	r1, #37485	; 0x926d
   178ac:	movt	r1, #1
   178b0:	mov	r0, r4
   178b4:	bl	182e4 <sprintf@plt+0x69f0>
   178b8:	cmp	r0, #0
   178bc:	popeq	{r4, sl, fp, pc}
   178c0:	movw	r1, #37965	; 0x944d
   178c4:	movt	r1, #1
   178c8:	mov	r0, r4
   178cc:	bl	182e4 <sprintf@plt+0x69f0>
   178d0:	cmp	r0, #0
   178d4:	beq	178e4 <sprintf@plt+0x5ff0>
   178d8:	mov	r0, r4
   178dc:	pop	{r4, sl, fp, lr}
   178e0:	b	18334 <sprintf@plt+0x6a40>
   178e4:	pop	{r4, sl, fp, pc}
   178e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   178ec:	add	fp, sp, #24
   178f0:	sub	sp, sp, #144	; 0x90
   178f4:	mov	r8, r1
   178f8:	mov	r5, r0
   178fc:	mov	r0, #1
   17900:	str	r0, [sp, #4]
   17904:	add	r1, sp, #16
   17908:	mov	r0, r5
   1790c:	bl	116d8 <rb_inet_pton_sock@plt>
   17910:	cmp	r0, #0
   17914:	beq	17b68 <sprintf@plt+0x6274>
   17918:	mov	r0, r8
   1791c:	bl	17bcc <sprintf@plt+0x62d8>
   17920:	mov	r1, r0
   17924:	strh	r0, [sp, #18]
   17928:	ldrh	r0, [sp, #16]
   1792c:	cmp	r0, #10
   17930:	bne	1799c <sprintf@plt+0x60a8>
   17934:	movw	r2, #61432	; 0xeff8
   17938:	movt	r2, #2
   1793c:	add	r6, r2, #188	; 0xbc
   17940:	ldr	r3, [r2, #252]	; 0xfc
   17944:	ldr	r7, [sp, #24]
   17948:	cmp	r7, r3
   1794c:	bne	179dc <sprintf@plt+0x60e8>
   17950:	ldr	r3, [r2, #256]	; 0x100
   17954:	ldr	r7, [sp, #28]
   17958:	cmp	r7, r3
   1795c:	bne	179dc <sprintf@plt+0x60e8>
   17960:	ldr	r3, [r2, #260]	; 0x104
   17964:	ldr	r7, [sp, #32]
   17968:	cmp	r7, r3
   1796c:	bne	179dc <sprintf@plt+0x60e8>
   17970:	ldr	r3, [r2, #264]	; 0x108
   17974:	ldr	r7, [sp, #36]	; 0x24
   17978:	cmp	r7, r3
   1797c:	bne	179dc <sprintf@plt+0x60e8>
   17980:	ldrh	r3, [r2, #246]	; 0xf6
   17984:	cmp	r1, r3
   17988:	bne	179dc <sprintf@plt+0x60e8>
   1798c:	ldr	r1, [r2, #372]	; 0x174
   17990:	cmp	r1, #0
   17994:	bne	179d4 <sprintf@plt+0x60e0>
   17998:	b	179dc <sprintf@plt+0x60e8>
   1799c:	movw	r6, #61432	; 0xeff8
   179a0:	movt	r6, #2
   179a4:	ldr	r2, [r6, #60]	; 0x3c
   179a8:	ldr	r3, [sp, #20]
   179ac:	cmp	r3, r2
   179b0:	bne	179dc <sprintf@plt+0x60e8>
   179b4:	movw	r6, #61432	; 0xeff8
   179b8:	movt	r6, #2
   179bc:	ldrh	r2, [r6, #58]	; 0x3a
   179c0:	cmp	r1, r2
   179c4:	bne	179dc <sprintf@plt+0x60e8>
   179c8:	ldr	r1, [r6, #184]	; 0xb8
   179cc:	cmp	r1, #0
   179d0:	beq	179dc <sprintf@plt+0x60e8>
   179d4:	sub	sp, fp, #24
   179d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   179dc:	movw	r3, #38423	; 0x9617
   179e0:	movt	r3, #1
   179e4:	mov	r1, #1
   179e8:	mov	r2, #0
   179ec:	bl	115ac <rb_socket@plt>
   179f0:	cmp	r0, #0
   179f4:	beq	17b88 <sprintf@plt+0x6294>
   179f8:	mov	r7, r0
   179fc:	bl	11588 <rb_get_fd@plt>
   17a00:	mov	r1, #4
   17a04:	str	r1, [sp]
   17a08:	add	r3, sp, #4
   17a0c:	mov	r1, #1
   17a10:	mov	r2, #2
   17a14:	bl	118ac <setsockopt@plt>
   17a18:	cmp	r0, #0
   17a1c:	bne	17ba4 <sprintf@plt+0x62b0>
   17a20:	mov	r0, r7
   17a24:	bl	11588 <rb_get_fd@plt>
   17a28:	ldrh	r1, [sp, #16]
   17a2c:	mov	r2, #28
   17a30:	cmp	r1, #2
   17a34:	movweq	r2, #16
   17a38:	add	r1, sp, #16
   17a3c:	bl	11774 <bind@plt>
   17a40:	cmp	r0, #0
   17a44:	beq	17a64 <sprintf@plt+0x6170>
   17a48:	bl	118e8 <__errno_location@plt>
   17a4c:	ldr	r0, [r0]
   17a50:	bl	11504 <strerror@plt>
   17a54:	mov	r2, r0
   17a58:	movw	r1, #38511	; 0x966f
   17a5c:	movt	r1, #1
   17a60:	b	17a94 <sprintf@plt+0x61a0>
   17a64:	mov	r0, r7
   17a68:	mov	r1, #128	; 0x80
   17a6c:	mov	r2, #0
   17a70:	bl	11888 <rb_listen@plt>
   17a74:	cmp	r0, #0
   17a78:	beq	17aac <sprintf@plt+0x61b8>
   17a7c:	bl	118e8 <__errno_location@plt>
   17a80:	ldr	r0, [r0]
   17a84:	bl	11504 <strerror@plt>
   17a88:	mov	r2, r0
   17a8c:	movw	r1, #38542	; 0x968e
   17a90:	movt	r1, #1
   17a94:	mov	r0, #87	; 0x57
   17a98:	bl	12430 <sprintf@plt+0xb3c>
   17a9c:	mov	r0, r7
   17aa0:	bl	1172c <rb_close@plt>
   17aa4:	sub	sp, fp, #24
   17aa8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17aac:	ldr	r0, [r6, #184]	; 0xb8
   17ab0:	cmp	r0, #0
   17ab4:	beq	17abc <sprintf@plt+0x61c8>
   17ab8:	bl	1172c <rb_close@plt>
   17abc:	str	r7, [r6, #184]	; 0xb8
   17ac0:	movw	r4, #61828	; 0xf184
   17ac4:	movt	r4, #2
   17ac8:	ldr	r0, [r4]
   17acc:	add	r7, sp, #8
   17ad0:	mov	r1, r7
   17ad4:	bl	116cc <rb_dictionary_foreach_start@plt>
   17ad8:	ldr	r0, [r4]
   17adc:	mov	r1, r7
   17ae0:	bl	115dc <rb_dictionary_foreach_cur@plt>
   17ae4:	cmp	r0, #0
   17ae8:	beq	17b14 <sprintf@plt+0x6220>
   17aec:	add	r7, sp, #8
   17af0:	bl	177d0 <sprintf@plt+0x5edc>
   17af4:	ldr	r0, [r4]
   17af8:	mov	r1, r7
   17afc:	bl	11684 <rb_dictionary_foreach_next@plt>
   17b00:	ldr	r0, [r4]
   17b04:	mov	r1, r7
   17b08:	bl	115dc <rb_dictionary_foreach_cur@plt>
   17b0c:	cmp	r0, #0
   17b10:	bne	17af0 <sprintf@plt+0x61fc>
   17b14:	mov	r0, r6
   17b18:	mov	r1, r5
   17b1c:	mov	r2, #53	; 0x35
   17b20:	bl	1166c <rb_strlcpy@plt>
   17b24:	strh	r8, [r6, #54]	; 0x36
   17b28:	add	r0, r6, #56	; 0x38
   17b2c:	add	r1, sp, #16
   17b30:	mov	r2, #128	; 0x80
   17b34:	bl	11708 <memcpy@plt>
   17b38:	movw	r0, #61808	; 0xf170
   17b3c:	movt	r0, #2
   17b40:	mov	r1, #1
   17b44:	strb	r1, [r0]
   17b48:	ldr	r0, [r6, #184]	; 0xb8
   17b4c:	movw	r2, #31700	; 0x7bd4
   17b50:	movt	r2, #1
   17b54:	mov	r1, #0
   17b58:	mov	r3, r6
   17b5c:	bl	11840 <rb_accept_tcp@plt>
   17b60:	sub	sp, fp, #24
   17b64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17b68:	movw	r1, #38391	; 0x95f7
   17b6c:	movt	r1, #1
   17b70:	mov	r0, #67	; 0x43
   17b74:	mov	r2, r5
   17b78:	mov	r3, r8
   17b7c:	bl	12430 <sprintf@plt+0xb3c>
   17b80:	mov	r0, #3
   17b84:	bl	118dc <exit@plt>
   17b88:	bl	118e8 <__errno_location@plt>
   17b8c:	ldr	r0, [r0]
   17b90:	bl	11504 <strerror@plt>
   17b94:	mov	r2, r0
   17b98:	movw	r1, #38443	; 0x962b
   17b9c:	movt	r1, #1
   17ba0:	b	17bbc <sprintf@plt+0x62c8>
   17ba4:	bl	118e8 <__errno_location@plt>
   17ba8:	ldr	r0, [r0]
   17bac:	bl	11504 <strerror@plt>
   17bb0:	mov	r2, r0
   17bb4:	movw	r1, #38473	; 0x9649
   17bb8:	movt	r1, #1
   17bbc:	mov	r0, #67	; 0x43
   17bc0:	bl	12430 <sprintf@plt+0xb3c>
   17bc4:	mov	r0, #3
   17bc8:	bl	118dc <exit@plt>
   17bcc:	rev16	r0, r0
   17bd0:	bx	lr
   17bd4:	push	{r4, r5, r6, sl, fp, lr}
   17bd8:	add	fp, sp, #16
   17bdc:	sub	sp, sp, #144	; 0x90
   17be0:	mov	r4, r0
   17be4:	mov	r0, #128	; 0x80
   17be8:	str	r0, [sp, #12]
   17bec:	cmp	r1, #0
   17bf0:	bne	17ce8 <sprintf@plt+0x63f4>
   17bf4:	ldr	r0, [fp, #8]
   17bf8:	cmp	r0, #0
   17bfc:	beq	17ce8 <sprintf@plt+0x63f4>
   17c00:	mov	r0, r4
   17c04:	bl	11588 <rb_get_fd@plt>
   17c08:	add	r1, sp, #16
   17c0c:	add	r2, sp, #12
   17c10:	bl	11534 <getsockname@plt>
   17c14:	cmp	r0, #0
   17c18:	bne	17ce8 <sprintf@plt+0x63f4>
   17c1c:	movw	r6, #61828	; 0xf184
   17c20:	movt	r6, #2
   17c24:	ldr	r0, [r6]
   17c28:	add	r5, sp, #4
   17c2c:	mov	r1, r5
   17c30:	bl	116cc <rb_dictionary_foreach_start@plt>
   17c34:	ldr	r0, [r6]
   17c38:	mov	r1, r5
   17c3c:	bl	115dc <rb_dictionary_foreach_cur@plt>
   17c40:	cmp	r0, #0
   17c44:	beq	17ce8 <sprintf@plt+0x63f4>
   17c48:	mov	r3, r0
   17c4c:	add	r5, sp, #4
   17c50:	b	17c80 <sprintf@plt+0x638c>
   17c54:	cmp	r1, r0
   17c58:	beq	17cf8 <sprintf@plt+0x6404>
   17c5c:	ldr	r0, [r6]
   17c60:	mov	r1, r5
   17c64:	bl	11684 <rb_dictionary_foreach_next@plt>
   17c68:	ldr	r0, [r6]
   17c6c:	mov	r1, r5
   17c70:	bl	115dc <rb_dictionary_foreach_cur@plt>
   17c74:	mov	r3, r0
   17c78:	cmp	r0, #0
   17c7c:	beq	17ce8 <sprintf@plt+0x63f4>
   17c80:	ldrh	r1, [r3, #248]	; 0xf8
   17c84:	ldrh	r0, [sp, #16]
   17c88:	cmp	r1, r0
   17c8c:	bne	17c5c <sprintf@plt+0x6368>
   17c90:	cmp	r0, #10
   17c94:	beq	17cac <sprintf@plt+0x63b8>
   17c98:	cmp	r0, #2
   17c9c:	bne	17d14 <sprintf@plt+0x6420>
   17ca0:	ldr	r0, [r3, #252]	; 0xfc
   17ca4:	ldr	r1, [sp, #20]
   17ca8:	b	17c54 <sprintf@plt+0x6360>
   17cac:	ldr	r0, [r3, #256]	; 0x100
   17cb0:	ldr	r1, [sp, #24]
   17cb4:	cmp	r1, r0
   17cb8:	bne	17c5c <sprintf@plt+0x6368>
   17cbc:	ldr	r0, [r3, #260]	; 0x104
   17cc0:	ldr	r1, [sp, #28]
   17cc4:	cmp	r1, r0
   17cc8:	bne	17c5c <sprintf@plt+0x6368>
   17ccc:	ldr	r0, [r3, #264]	; 0x108
   17cd0:	ldr	r1, [sp, #32]
   17cd4:	cmp	r1, r0
   17cd8:	bne	17c5c <sprintf@plt+0x6368>
   17cdc:	ldr	r0, [r3, #268]	; 0x10c
   17ce0:	ldr	r1, [sp, #36]	; 0x24
   17ce4:	b	17c54 <sprintf@plt+0x6360>
   17ce8:	mov	r0, r4
   17cec:	bl	1172c <rb_close@plt>
   17cf0:	sub	sp, fp, #16
   17cf4:	pop	{r4, r5, r6, sl, fp, pc}
   17cf8:	movw	r2, #32044	; 0x7d2c
   17cfc:	movt	r2, #1
   17d00:	mov	r0, r4
   17d04:	mov	r1, #1
   17d08:	bl	1157c <rb_setselect@plt>
   17d0c:	sub	sp, fp, #16
   17d10:	pop	{r4, r5, r6, sl, fp, pc}
   17d14:	movw	r1, #38575	; 0x96af
   17d18:	movt	r1, #1
   17d1c:	mov	r0, #67	; 0x43
   17d20:	bl	12430 <sprintf@plt+0xb3c>
   17d24:	mov	r0, #3
   17d28:	bl	118dc <exit@plt>
   17d2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d30:	add	fp, sp, #28
   17d34:	sub	sp, sp, #132	; 0x84
   17d38:	mov	sl, r1
   17d3c:	mov	r4, r0
   17d40:	movw	r9, #44812	; 0xaf0c
   17d44:	movt	r9, #2
   17d48:	ldr	r1, [r9, #12]
   17d4c:	mov	r0, sl
   17d50:	bl	17e54 <sprintf@plt+0x6560>
   17d54:	mov	r8, r0
   17d58:	add	r1, sp, #4
   17d5c:	mov	r0, r4
   17d60:	mov	r2, #128	; 0x80
   17d64:	bl	116a8 <rb_read@plt>
   17d68:	cmn	r0, #1
   17d6c:	ble	17dc4 <sprintf@plt+0x64d0>
   17d70:	cmp	r0, #0
   17d74:	beq	17e44 <sprintf@plt+0x6550>
   17d78:	movw	r0, #61812	; 0xf174
   17d7c:	movt	r0, #2
   17d80:	ldr	r5, [r0]
   17d84:	cmp	r5, #0
   17d88:	beq	17e44 <sprintf@plt+0x6550>
   17d8c:	add	r7, sp, #4
   17d90:	ldr	r6, [r5]
   17d94:	mov	r0, r6
   17d98:	bl	116e4 <strlen@plt>
   17d9c:	mov	r2, r0
   17da0:	mov	r0, r6
   17da4:	mov	r1, r7
   17da8:	bl	11894 <strncmp@plt>
   17dac:	cmp	r0, #0
   17db0:	beq	17df8 <sprintf@plt+0x6504>
   17db4:	ldr	r5, [r5, #8]
   17db8:	cmp	r5, #0
   17dbc:	bne	17d90 <sprintf@plt+0x649c>
   17dc0:	b	17e44 <sprintf@plt+0x6550>
   17dc4:	bl	118e8 <__errno_location@plt>
   17dc8:	ldr	r0, [r0]
   17dcc:	bl	11540 <rb_ignore_errno@plt>
   17dd0:	cmp	r0, #0
   17dd4:	beq	17e44 <sprintf@plt+0x6550>
   17dd8:	movw	r2, #32044	; 0x7d2c
   17ddc:	movt	r2, #1
   17de0:	mov	r0, r4
   17de4:	mov	r1, #1
   17de8:	mov	r3, sl
   17dec:	bl	1157c <rb_setselect@plt>
   17df0:	sub	sp, fp, #28
   17df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17df8:	ldr	r5, [r8]
   17dfc:	cmp	r5, #0
   17e00:	beq	17e24 <sprintf@plt+0x6530>
   17e04:	ldr	r6, [r5]
   17e08:	ldr	r5, [r5, #8]
   17e0c:	ldr	r0, [r6, #4]
   17e10:	bl	1172c <rb_close@plt>
   17e14:	mov	r0, r6
   17e18:	bl	17e64 <sprintf@plt+0x6570>
   17e1c:	cmp	r5, #0
   17e20:	bne	17e04 <sprintf@plt+0x6510>
   17e24:	mov	r0, r8
   17e28:	bl	17e64 <sprintf@plt+0x6570>
   17e2c:	ldr	r1, [r9, #12]
   17e30:	add	r2, sp, #4
   17e34:	movw	r3, #38620	; 0x96dc
   17e38:	movt	r3, #1
   17e3c:	mov	r0, sl
   17e40:	bl	1293c <sprintf@plt+0x1048>
   17e44:	mov	r0, r4
   17e48:	bl	1172c <rb_close@plt>
   17e4c:	sub	sp, fp, #28
   17e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e54:	ldr	r0, [r0, #464]	; 0x1d0
   17e58:	add	r0, r0, r1, lsl #4
   17e5c:	ldr	r0, [r0, #8]
   17e60:	bx	lr
   17e64:	cmp	r0, #0
   17e68:	bxeq	lr
   17e6c:	b	11690 <free@plt>
   17e70:	push	{fp, lr}
   17e74:	mov	fp, sp
   17e78:	mov	r1, r0
   17e7c:	mov	r0, #1
   17e80:	bl	115f4 <calloc@plt>
   17e84:	cmp	r0, #0
   17e88:	popne	{fp, pc}
   17e8c:	bl	117bc <rb_outofmemory@plt>
   17e90:	push	{r4, sl, fp, lr}
   17e94:	add	fp, sp, #8
   17e98:	mov	r4, r0
   17e9c:	movw	r1, #38853	; 0x97c5
   17ea0:	movt	r1, #1
   17ea4:	bl	115e8 <strcasecmp@plt>
   17ea8:	cmp	r0, #0
   17eac:	beq	17f00 <sprintf@plt+0x660c>
   17eb0:	movw	r1, #38860	; 0x97cc
   17eb4:	movt	r1, #1
   17eb8:	mov	r0, r4
   17ebc:	bl	115e8 <strcasecmp@plt>
   17ec0:	cmp	r0, #0
   17ec4:	beq	17f08 <sprintf@plt+0x6614>
   17ec8:	movw	r1, #38867	; 0x97d3
   17ecc:	movt	r1, #1
   17ed0:	mov	r0, r4
   17ed4:	bl	115e8 <strcasecmp@plt>
   17ed8:	cmp	r0, #0
   17edc:	beq	17f10 <sprintf@plt+0x661c>
   17ee0:	movw	r1, #38879	; 0x97df
   17ee4:	movt	r1, #1
   17ee8:	mov	r0, r4
   17eec:	bl	115e8 <strcasecmp@plt>
   17ef0:	clz	r0, r0
   17ef4:	lsr	r0, r0, #5
   17ef8:	lsl	r0, r0, #2
   17efc:	pop	{r4, sl, fp, pc}
   17f00:	mov	r0, #1
   17f04:	pop	{r4, sl, fp, pc}
   17f08:	mov	r0, #2
   17f0c:	pop	{r4, sl, fp, pc}
   17f10:	mov	r0, #3
   17f14:	pop	{r4, sl, fp, pc}
   17f18:	push	{r4, r5, fp, lr}
   17f1c:	add	fp, sp, #8
   17f20:	sub	sp, sp, #16
   17f24:	mov	r4, r0
   17f28:	mov	r0, #260	; 0x104
   17f2c:	strh	r0, [sp, #6]
   17f30:	ldr	r0, [r4, #12]
   17f34:	ldrh	r1, [r0, #58]	; 0x3a
   17f38:	strh	r1, [sp, #8]
   17f3c:	ldr	r0, [r0, #60]	; 0x3c
   17f40:	mov	r1, #0
   17f44:	strb	r1, [sp, #14]
   17f48:	str	r0, [sp, #10]
   17f4c:	ldr	r0, [r4, #4]
   17f50:	add	r1, sp, #6
   17f54:	mov	r2, #9
   17f58:	bl	11648 <rb_write@plt>
   17f5c:	cmp	r0, #0
   17f60:	bmi	17f84 <sprintf@plt+0x6690>
   17f64:	ldr	r5, [r4, #4]
   17f68:	ldr	r4, [r4, #8]
   17f6c:	mov	r0, r4
   17f70:	bl	116e4 <strlen@plt>
   17f74:	add	r2, r0, #1
   17f78:	mov	r0, r5
   17f7c:	mov	r1, r4
   17f80:	bl	11648 <rb_write@plt>
   17f84:	sub	sp, fp, #8
   17f88:	pop	{r4, r5, fp, pc}
   17f8c:	push	{r4, r5, fp, lr}
   17f90:	add	fp, sp, #8
   17f94:	sub	sp, sp, #32
   17f98:	mov	r4, r0
   17f9c:	ldr	r0, [r0]
   17fa0:	mov	r1, #1
   17fa4:	strh	r1, [sp, #4]
   17fa8:	movw	r1, #261	; 0x105
   17fac:	movt	r1, #1280	; 0x500
   17fb0:	str	r1, [sp]
   17fb4:	ldrh	r0, [r0, #248]	; 0xf8
   17fb8:	cmp	r0, #10
   17fbc:	beq	17fe8 <sprintf@plt+0x66f4>
   17fc0:	cmp	r0, #2
   17fc4:	bne	18050 <sprintf@plt+0x675c>
   17fc8:	mov	r0, #1
   17fcc:	strb	r0, [sp, #6]
   17fd0:	ldr	r0, [r4, #12]
   17fd4:	ldr	r1, [r0, #60]	; 0x3c
   17fd8:	str	r1, [sp, #7]
   17fdc:	mvn	r2, #12
   17fe0:	mov	r3, #11
   17fe4:	b	18010 <sprintf@plt+0x671c>
   17fe8:	mov	r0, #4
   17fec:	strb	r0, [sp, #6]
   17ff0:	ldr	r0, [r4, #12]
   17ff4:	add	r1, r0, #64	; 0x40
   17ff8:	vld1.8	{d16-d17}, [r1]
   17ffc:	mov	r1, sp
   18000:	orr	r1, r1, #7
   18004:	vst1.8	{d16-d17}, [r1]
   18008:	mvn	r2, #24
   1800c:	mov	r3, #23
   18010:	mov	r1, sp
   18014:	add	r3, r1, r3
   18018:	ldrh	r0, [r0, #58]	; 0x3a
   1801c:	strh	r0, [r3]
   18020:	ldr	r0, [r4, #4]
   18024:	bl	11648 <rb_write@plt>
   18028:	cmp	r0, #1
   1802c:	blt	18050 <sprintf@plt+0x675c>
   18030:	ldr	r5, [r4, #4]
   18034:	ldr	r4, [r4, #8]
   18038:	mov	r0, r4
   1803c:	bl	116e4 <strlen@plt>
   18040:	add	r2, r0, #1
   18044:	mov	r0, r5
   18048:	mov	r1, r4
   1804c:	bl	11648 <rb_write@plt>
   18050:	sub	sp, fp, #8
   18054:	pop	{r4, r5, fp, pc}
   18058:	push	{r4, r5, r6, sl, fp, lr}
   1805c:	add	fp, sp, #16
   18060:	sub	sp, sp, #136	; 0x88
   18064:	mov	r4, r0
   18068:	ldr	r3, [r0, #12]
   1806c:	ldrh	r0, [r3, #54]	; 0x36
   18070:	str	r0, [sp]
   18074:	add	r5, sp, #8
   18078:	movw	r2, #38892	; 0x97ec
   1807c:	movt	r2, #1
   18080:	mov	r0, r5
   18084:	mov	r1, #128	; 0x80
   18088:	bl	1187c <snprintf@plt>
   1808c:	ldr	r6, [r4, #4]
   18090:	mov	r0, r5
   18094:	bl	116e4 <strlen@plt>
   18098:	mov	r2, r0
   1809c:	mov	r0, r6
   180a0:	mov	r1, r5
   180a4:	bl	11648 <rb_write@plt>
   180a8:	cmp	r0, #1
   180ac:	blt	180e8 <sprintf@plt+0x67f4>
   180b0:	ldmib	r4, {r5, r6}
   180b4:	mov	r0, r6
   180b8:	bl	116e4 <strlen@plt>
   180bc:	add	r2, r0, #1
   180c0:	mov	r0, r5
   180c4:	mov	r1, r6
   180c8:	bl	11648 <rb_write@plt>
   180cc:	cmp	r0, #1
   180d0:	blt	180e8 <sprintf@plt+0x67f4>
   180d4:	ldr	r0, [r4, #4]
   180d8:	movw	r1, #38917	; 0x9805
   180dc:	movt	r1, #1
   180e0:	mov	r2, #2
   180e4:	bl	11648 <rb_write@plt>
   180e8:	sub	sp, fp, #16
   180ec:	pop	{r4, r5, r6, sl, fp, pc}
   180f0:	movw	r2, #61812	; 0xf174
   180f4:	movt	r2, #2
   180f8:	ldr	r3, [r2]
   180fc:	cmp	r3, #0
   18100:	bne	18114 <sprintf@plt+0x6820>
   18104:	b	18138 <sprintf@plt+0x6844>
   18108:	ldr	r3, [r3, #8]
   1810c:	cmp	r3, #0
   18110:	beq	18138 <sprintf@plt+0x6844>
   18114:	ldr	ip, [r3]
   18118:	ldr	r2, [ip, #16]
   1811c:	cmp	r2, r0
   18120:	bne	18108 <sprintf@plt+0x6814>
   18124:	ldrh	r2, [ip, #20]
   18128:	cmp	r2, r1
   1812c:	bne	18108 <sprintf@plt+0x6814>
   18130:	mov	r0, ip
   18134:	bx	lr
   18138:	mov	ip, #0
   1813c:	mov	r0, ip
   18140:	bx	lr
   18144:	push	{fp, lr}
   18148:	mov	fp, sp
   1814c:	cmp	r0, #0
   18150:	beq	181b0 <sprintf@plt+0x68bc>
   18154:	cmp	r1, #0
   18158:	beq	181d0 <sprintf@plt+0x68dc>
   1815c:	cmp	r2, #0
   18160:	beq	181f0 <sprintf@plt+0x68fc>
   18164:	mov	r3, #0
   18168:	stm	r1, {r0, r3}
   1816c:	ldr	r0, [r2]
   18170:	str	r0, [r1, #8]
   18174:	ldr	r0, [r2]
   18178:	cmp	r0, #0
   1817c:	beq	1818c <sprintf@plt+0x6898>
   18180:	add	r0, r0, #4
   18184:	str	r1, [r0]
   18188:	b	1819c <sprintf@plt+0x68a8>
   1818c:	mov	r0, r2
   18190:	ldr	r3, [r0, #4]!
   18194:	cmp	r3, #0
   18198:	streq	r1, [r0]
   1819c:	str	r1, [r2]
   181a0:	ldr	r0, [r2, #8]
   181a4:	add	r0, r0, #1
   181a8:	str	r0, [r2, #8]
   181ac:	pop	{fp, pc}
   181b0:	movw	r0, #36007	; 0x8ca7
   181b4:	movt	r0, #1
   181b8:	movw	r1, #35912	; 0x8c48
   181bc:	movt	r1, #1
   181c0:	movw	r3, #36020	; 0x8cb4
   181c4:	movt	r3, #1
   181c8:	mov	r2, #143	; 0x8f
   181cc:	bl	11654 <__assert_fail@plt>
   181d0:	movw	r0, #37219	; 0x9163
   181d4:	movt	r0, #1
   181d8:	movw	r1, #35912	; 0x8c48
   181dc:	movt	r1, #1
   181e0:	movw	r3, #36020	; 0x8cb4
   181e4:	movt	r3, #1
   181e8:	mov	r2, #144	; 0x90
   181ec:	bl	11654 <__assert_fail@plt>
   181f0:	movw	r0, #35994	; 0x8c9a
   181f4:	movt	r0, #1
   181f8:	movw	r1, #35912	; 0x8c48
   181fc:	movt	r1, #1
   18200:	movw	r3, #36020	; 0x8cb4
   18204:	movt	r3, #1
   18208:	mov	r2, #145	; 0x91
   1820c:	bl	11654 <__assert_fail@plt>
   18210:	ldr	r1, [r0, #460]	; 0x1cc
   18214:	add	r1, r1, #1
   18218:	str	r1, [r0, #460]	; 0x1cc
   1821c:	bx	lr
   18220:	push	{fp, lr}
   18224:	mov	fp, sp
   18228:	cmp	r0, #0
   1822c:	beq	18280 <sprintf@plt+0x698c>
   18230:	cmp	r1, #0
   18234:	beq	182a0 <sprintf@plt+0x69ac>
   18238:	ldr	ip, [r0, #4]
   1823c:	ldr	r3, [r0, #8]
   18240:	add	r2, r3, #4
   18244:	cmp	r3, #0
   18248:	addeq	r2, r1, #4
   1824c:	str	ip, [r2]
   18250:	ldmib	r0, {r2, ip}
   18254:	cmp	r2, #0
   18258:	mov	r3, r1
   1825c:	addne	r3, r2, #8
   18260:	str	ip, [r3]
   18264:	mov	r2, #0
   18268:	str	r2, [r0, #4]
   1826c:	str	r2, [r0, #8]
   18270:	ldr	r0, [r1, #8]
   18274:	sub	r0, r0, #1
   18278:	str	r0, [r1, #8]
   1827c:	pop	{fp, pc}
   18280:	movw	r0, #37219	; 0x9163
   18284:	movt	r0, #1
   18288:	movw	r1, #35912	; 0x8c48
   1828c:	movt	r1, #1
   18290:	movw	r3, #35940	; 0x8c64
   18294:	movt	r3, #1
   18298:	mov	r2, #235	; 0xeb
   1829c:	bl	11654 <__assert_fail@plt>
   182a0:	movw	r0, #35994	; 0x8c9a
   182a4:	movt	r0, #1
   182a8:	movw	r1, #35912	; 0x8c48
   182ac:	movt	r1, #1
   182b0:	movw	r3, #35940	; 0x8c64
   182b4:	movt	r3, #1
   182b8:	mov	r2, #236	; 0xec
   182bc:	bl	11654 <__assert_fail@plt>
   182c0:	ldr	r1, [r0, #460]	; 0x1cc
   182c4:	subs	r1, r1, #1
   182c8:	str	r1, [r0, #460]	; 0x1cc
   182cc:	bxne	lr
   182d0:	b	12c3c <sprintf@plt+0x1348>
   182d4:	ldr	r0, [r0, #464]	; 0x1d0
   182d8:	add	r0, r0, r1, lsl #4
   182dc:	str	r2, [r0, #8]
   182e0:	bx	lr
   182e4:	push	{r4, sl, fp, lr}
   182e8:	add	fp, sp, #8
   182ec:	sub	sp, sp, #8
   182f0:	mov	r2, r1
   182f4:	mov	r4, r0
   182f8:	add	r1, sp, #4
   182fc:	mov	r0, r2
   18300:	bl	183bc <sprintf@plt+0x6ac8>
   18304:	mov	r1, r0
   18308:	mov	r0, #1
   1830c:	cmp	r1, #0
   18310:	beq	1832c <sprintf@plt+0x6a38>
   18314:	ldr	r1, [sp, #4]
   18318:	mov	r0, r4
   1831c:	bl	183ec <sprintf@plt+0x6af8>
   18320:	sub	r0, r0, #2
   18324:	clz	r0, r0
   18328:	lsr	r0, r0, #5
   1832c:	sub	sp, fp, #8
   18330:	pop	{r4, sl, fp, pc}
   18334:	push	{r4, r5, r6, sl, fp, lr}
   18338:	add	fp, sp, #16
   1833c:	mov	r4, r0
   18340:	movw	r0, #44812	; 0xaf0c
   18344:	movt	r0, #2
   18348:	ldr	r5, [r0, #12]
   1834c:	mov	r0, r4
   18350:	mov	r1, r5
   18354:	bl	17e54 <sprintf@plt+0x6560>
   18358:	mov	r6, r0
   1835c:	movw	r0, #44872	; 0xaf48
   18360:	movt	r0, #2
   18364:	ldr	r2, [r0]
   18368:	mov	r0, r4
   1836c:	mov	r1, r5
   18370:	bl	1844c <sprintf@plt+0x6b58>
   18374:	mov	r0, #1
   18378:	strb	r0, [r6, #12]
   1837c:	movw	r0, #61812	; 0xf174
   18380:	movt	r0, #2
   18384:	ldr	r5, [r0]
   18388:	cmp	r5, #0
   1838c:	beq	183a8 <sprintf@plt+0x6ab4>
   18390:	ldr	r1, [r5]
   18394:	mov	r0, r4
   18398:	bl	18478 <sprintf@plt+0x6b84>
   1839c:	ldr	r5, [r5, #8]
   183a0:	cmp	r5, #0
   183a4:	bne	18390 <sprintf@plt+0x6a9c>
   183a8:	ldr	r0, [r4]
   183ac:	movw	r1, #39069	; 0x989d
   183b0:	movt	r1, #1
   183b4:	pop	{r4, r5, r6, sl, fp, lr}
   183b8:	b	123c4 <sprintf@plt+0xad0>
   183bc:	push	{r4, sl, fp, lr}
   183c0:	add	fp, sp, #8
   183c4:	mov	r4, r1
   183c8:	bl	183fc <sprintf@plt+0x6b08>
   183cc:	cmp	r0, #0
   183d0:	beq	183e4 <sprintf@plt+0x6af0>
   183d4:	ldr	r0, [r0, #12]
   183d8:	str	r0, [r4]
   183dc:	mov	r0, #1
   183e0:	pop	{r4, sl, fp, pc}
   183e4:	mov	r0, #0
   183e8:	pop	{r4, sl, fp, pc}
   183ec:	ldr	r0, [r0, #464]	; 0x1d0
   183f0:	add	r0, r0, r1, lsl #4
   183f4:	ldr	r0, [r0, #12]
   183f8:	bx	lr
   183fc:	push	{r4, r5, r6, sl, fp, lr}
   18400:	add	fp, sp, #16
   18404:	mov	r4, r0
   18408:	movw	r0, #61832	; 0xf188
   1840c:	movt	r0, #2
   18410:	ldr	r6, [r0]
   18414:	cmp	r6, #0
   18418:	beq	18440 <sprintf@plt+0x6b4c>
   1841c:	ldr	r5, [r6]
   18420:	ldr	r0, [r5, #16]
   18424:	mov	r1, r4
   18428:	bl	115e8 <strcasecmp@plt>
   1842c:	cmp	r0, #0
   18430:	beq	18444 <sprintf@plt+0x6b50>
   18434:	ldr	r6, [r6, #8]
   18438:	cmp	r6, #0
   1843c:	bne	1841c <sprintf@plt+0x6b28>
   18440:	mov	r5, #0
   18444:	mov	r0, r5
   18448:	pop	{r4, r5, r6, sl, fp, pc}
   1844c:	push	{r4, r5, r6, sl, fp, lr}
   18450:	add	fp, sp, #16
   18454:	mov	r4, r2
   18458:	mov	r5, r1
   1845c:	mov	r6, r0
   18460:	bl	116f0 <rb_current_time@plt>
   18464:	add	r0, r0, r4
   18468:	ldr	r1, [r6, #464]	; 0x1d0
   1846c:	add	r1, r1, r5, lsl #4
   18470:	str	r0, [r1, #4]
   18474:	pop	{r4, r5, r6, sl, fp, pc}
   18478:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1847c:	add	fp, sp, #24
   18480:	sub	sp, sp, #280	; 0x118
   18484:	mov	r9, r1
   18488:	mov	r7, r0
   1848c:	movw	r0, #44812	; 0xaf0c
   18490:	movt	r0, #2
   18494:	ldr	r1, [r0, #12]
   18498:	mov	r0, r7
   1849c:	bl	17e54 <sprintf@plt+0x6560>
   184a0:	mov	r8, r0
   184a4:	mov	r0, #28
   184a8:	bl	17e70 <sprintf@plt+0x657c>
   184ac:	mov	r4, r0
   184b0:	mov	r0, #1
   184b4:	str	r0, [sp, #12]
   184b8:	mov	r1, r7
   184bc:	ldrh	r6, [r1, #248]!	; 0xf8
   184c0:	cmp	r6, #10
   184c4:	bne	184e4 <sprintf@plt+0x6bf0>
   184c8:	ldr	r0, [r9, #16]
   184cc:	cmp	r0, #1
   184d0:	beq	185e4 <sprintf@plt+0x6cf0>
   184d4:	movw	r0, #61432	; 0xeff8
   184d8:	movt	r0, #2
   184dc:	add	r5, r0, #188	; 0xbc
   184e0:	b	184ec <sprintf@plt+0x6bf8>
   184e4:	movw	r5, #61432	; 0xeff8
   184e8:	movt	r5, #2
   184ec:	ldr	r0, [r5, #184]	; 0xb8
   184f0:	cmp	r0, #0
   184f4:	beq	185e4 <sprintf@plt+0x6cf0>
   184f8:	add	r0, sp, #144	; 0x90
   184fc:	mov	r2, #128	; 0x80
   18500:	bl	11708 <memcpy@plt>
   18504:	add	r1, r5, #56	; 0x38
   18508:	add	r0, sp, #16
   1850c:	mov	r2, #128	; 0x80
   18510:	bl	11708 <memcpy@plt>
   18514:	str	r9, [r4, #8]
   18518:	str	r5, [r4, #12]
   1851c:	str	r7, [r4]
   18520:	mov	r7, #0
   18524:	mov	r0, r6
   18528:	mov	r1, #1
   1852c:	mov	r2, #0
   18530:	mov	r3, r9
   18534:	bl	115ac <rb_socket@plt>
   18538:	str	r0, [r4, #4]
   1853c:	cmp	r0, #0
   18540:	beq	185c0 <sprintf@plt+0x6ccc>
   18544:	bl	11588 <rb_get_fd@plt>
   18548:	mov	r1, #4
   1854c:	str	r1, [sp]
   18550:	add	r3, sp, #12
   18554:	mov	r1, #6
   18558:	mov	r2, #1
   1855c:	bl	118ac <setsockopt@plt>
   18560:	strh	r7, [sp, #18]
   18564:	ldrh	r0, [r9, #20]
   18568:	bl	17bcc <sprintf@plt+0x62d8>
   1856c:	strh	r0, [sp, #146]	; 0x92
   18570:	add	r1, r4, #16
   18574:	mov	r0, r4
   18578:	mov	r2, r8
   1857c:	bl	18144 <sprintf@plt+0x6850>
   18580:	movw	r0, #44872	; 0xaf48
   18584:	movt	r0, #2
   18588:	ldr	r1, [r0]
   1858c:	ldr	r0, [r4, #4]
   18590:	ldrb	r2, [r9, #22]
   18594:	cmp	r2, #0
   18598:	beq	185f4 <sprintf@plt+0x6d00>
   1859c:	str	r4, [sp]
   185a0:	str	r1, [sp, #4]
   185a4:	add	r1, sp, #144	; 0x90
   185a8:	add	r2, sp, #16
   185ac:	movw	r3, #34328	; 0x8618
   185b0:	movt	r3, #1
   185b4:	bl	1154c <rb_connect_tcp_ssl@plt>
   185b8:	sub	sp, fp, #24
   185bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   185c0:	bl	118e8 <__errno_location@plt>
   185c4:	ldr	r0, [r0]
   185c8:	bl	11504 <strerror@plt>
   185cc:	mov	r3, r0
   185d0:	movw	r1, #39102	; 0x98be
   185d4:	movt	r1, #1
   185d8:	mov	r0, #87	; 0x57
   185dc:	mov	r2, r9
   185e0:	bl	12430 <sprintf@plt+0xb3c>
   185e4:	mov	r0, r4
   185e8:	bl	17e64 <sprintf@plt+0x6570>
   185ec:	sub	sp, fp, #24
   185f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   185f4:	str	r4, [sp]
   185f8:	str	r1, [sp, #4]
   185fc:	add	r1, sp, #144	; 0x90
   18600:	add	r2, sp, #16
   18604:	movw	r3, #34328	; 0x8618
   18608:	movt	r3, #1
   1860c:	bl	11558 <rb_connect_tcp@plt>
   18610:	sub	sp, fp, #24
   18614:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18618:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1861c:	add	fp, sp, #24
   18620:	mov	r4, r2
   18624:	mov	r7, r1
   18628:	movw	r0, #44812	; 0xaf0c
   1862c:	movt	r0, #2
   18630:	ldr	r1, [r0, #12]
   18634:	ldr	r6, [r2]
   18638:	ldr	r8, [r2, #8]
   1863c:	mov	r0, r6
   18640:	bl	17e54 <sprintf@plt+0x6560>
   18644:	mov	r5, r0
   18648:	cmp	r7, #0
   1864c:	bne	186bc <sprintf@plt+0x6dc8>
   18650:	movw	r0, #61808	; 0xf170
   18654:	movt	r0, #2
   18658:	ldrb	r0, [r0]
   1865c:	cmp	r0, #0
   18660:	beq	186bc <sprintf@plt+0x6dc8>
   18664:	ldrh	r0, [r6, #248]	; 0xf8
   18668:	cmp	r0, #10
   1866c:	beq	18690 <sprintf@plt+0x6d9c>
   18670:	cmp	r0, #2
   18674:	bne	186bc <sprintf@plt+0x6dc8>
   18678:	movw	r0, #61432	; 0xeff8
   1867c:	movt	r0, #2
   18680:	ldr	r0, [r0, #184]	; 0xb8
   18684:	cmp	r0, #0
   18688:	bne	186b0 <sprintf@plt+0x6dbc>
   1868c:	b	186bc <sprintf@plt+0x6dc8>
   18690:	ldrb	r0, [r8, #23]
   18694:	cmp	r0, #0
   18698:	beq	186bc <sprintf@plt+0x6dc8>
   1869c:	movw	r0, #61432	; 0xeff8
   186a0:	movt	r0, #2
   186a4:	ldr	r0, [r0, #372]	; 0x174
   186a8:	cmp	r0, #0
   186ac:	beq	186bc <sprintf@plt+0x6dc8>
   186b0:	ldr	r1, [r8, #24]
   186b4:	mov	r0, r4
   186b8:	blx	r1
   186bc:	ldr	r0, [r4, #4]
   186c0:	bl	1172c <rb_close@plt>
   186c4:	add	r0, r4, #16
   186c8:	mov	r1, r5
   186cc:	bl	18220 <sprintf@plt+0x692c>
   186d0:	mov	r0, r4
   186d4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   186d8:	b	17e64 <sprintf@plt+0x6570>
   186dc:	ldr	r0, [r0, #464]	; 0x1d0
   186e0:	add	r0, r0, r1, lsl #4
   186e4:	mov	r1, #0
   186e8:	str	r1, [r0, #4]
   186ec:	bx	lr
   186f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   186f4:	mov	r7, r0
   186f8:	ldr	r6, [pc, #72]	; 18748 <sprintf@plt+0x6e54>
   186fc:	ldr	r5, [pc, #72]	; 1874c <sprintf@plt+0x6e58>
   18700:	add	r6, pc, r6
   18704:	add	r5, pc, r5
   18708:	sub	r6, r6, r5
   1870c:	mov	r8, r1
   18710:	mov	r9, r2
   18714:	bl	114d8 <sigemptyset@plt-0x20>
   18718:	asrs	r6, r6, #2
   1871c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18720:	mov	r4, #0
   18724:	add	r4, r4, #1
   18728:	ldr	r3, [r5], #4
   1872c:	mov	r2, r9
   18730:	mov	r1, r8
   18734:	mov	r0, r7
   18738:	blx	r3
   1873c:	cmp	r6, r4
   18740:	bne	18724 <sprintf@plt+0x6e30>
   18744:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18748:	ldrdeq	r1, [r1], -ip
   1874c:	ldrdeq	r1, [r1], -r4
   18750:	bx	lr

Disassembly of section .fini:

00018754 <.fini>:
   18754:	push	{r3, lr}
   18758:	pop	{r3, pc}
