
../repos/coreutils/src/basename:     file format elf32-littlearm


Disassembly of section .init:

00010b30 <.init>:
   10b30:	push	{r3, lr}
   10b34:	bl	10fb0 <putchar_unlocked@plt+0x250>
   10b38:	pop	{r3, pc}

Disassembly of section .plt:

00010b3c <calloc@plt-0x14>:
   10b3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b40:	ldr	lr, [pc, #4]	; 10b4c <calloc@plt-0x4>
   10b44:	add	lr, pc, lr
   10b48:	ldr	pc, [lr, #8]!
   10b4c:			; <UNDEFINED> instruction: 0x000144b4

00010b50 <calloc@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #20, 20	; 0x14000
   10b58:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b5c <fputs_unlocked@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #20, 20	; 0x14000
   10b64:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b68 <raise@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #20, 20	; 0x14000
   10b70:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b74 <strcmp@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #20, 20	; 0x14000
   10b7c:	ldr	pc, [ip, #1180]!	; 0x49c

00010b80 <fflush@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #20, 20	; 0x14000
   10b88:	ldr	pc, [ip, #1172]!	; 0x494

00010b8c <free@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #20, 20	; 0x14000
   10b94:	ldr	pc, [ip, #1164]!	; 0x48c

00010b98 <_exit@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #20, 20	; 0x14000
   10ba0:	ldr	pc, [ip, #1156]!	; 0x484

00010ba4 <memcpy@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1148]!	; 0x47c

00010bb0 <mbsinit@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1140]!	; 0x474

00010bbc <memcmp@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1132]!	; 0x46c

00010bc8 <fputc_unlocked@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1124]!	; 0x464

00010bd4 <dcgettext@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1116]!	; 0x45c

00010be0 <realloc@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1108]!	; 0x454

00010bec <textdomain@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1100]!	; 0x44c

00010bf8 <iswprint@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1092]!	; 0x444

00010c04 <lseek64@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1084]!	; 0x43c

00010c10 <__ctype_get_mb_cur_max@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1076]!	; 0x434

00010c1c <__fpending@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1068]!	; 0x42c

00010c28 <ferror_unlocked@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1060]!	; 0x424

00010c34 <mbrtowc@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1052]!	; 0x41c

00010c40 <error@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1044]!	; 0x414

00010c4c <malloc@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1036]!	; 0x40c

00010c58 <__libc_start_main@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #1028]!	; 0x404

00010c64 <__freading@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c70 <__gmon_start__@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c7c <getopt_long@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c88 <__ctype_b_loc@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #996]!	; 0x3e4

00010c94 <exit@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #988]!	; 0x3dc

00010ca0 <strlen@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #980]!	; 0x3d4

00010cac <__errno_location@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #972]!	; 0x3cc

00010cb8 <__cxa_atexit@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #964]!	; 0x3c4

00010cc4 <memset@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #956]!	; 0x3bc

00010cd0 <__printf_chk@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #948]!	; 0x3b4

00010cdc <fileno@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #940]!	; 0x3ac

00010ce8 <__fprintf_chk@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #932]!	; 0x3a4

00010cf4 <fclose@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #924]!	; 0x39c

00010d00 <fseeko64@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #916]!	; 0x394

00010d0c <setlocale@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #908]!	; 0x38c

00010d18 <strrchr@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #900]!	; 0x384

00010d24 <nl_langinfo@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #892]!	; 0x37c

00010d30 <bindtextdomain@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #884]!	; 0x374

00010d3c <fputs@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #876]!	; 0x36c

00010d48 <strncmp@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #868]!	; 0x364

00010d54 <abort@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #860]!	; 0x35c

00010d60 <putchar_unlocked@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #852]!	; 0x354

Disassembly of section .text:

00010d6c <.text>:
   10d6c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d70:	mov	r7, r0
   10d74:	ldr	r0, [r1]
   10d78:	mov	r5, r1
   10d7c:	bl	115c8 <putchar_unlocked@plt+0x868>
   10d80:	ldr	r1, [pc, #432]	; 10f38 <putchar_unlocked@plt+0x1d8>
   10d84:	mov	r0, #6
   10d88:	bl	10d0c <setlocale@plt>
   10d8c:	ldr	r1, [pc, #424]	; 10f3c <putchar_unlocked@plt+0x1dc>
   10d90:	ldr	r0, [pc, #424]	; 10f40 <putchar_unlocked@plt+0x1e0>
   10d94:	bl	10d30 <bindtextdomain@plt>
   10d98:	ldr	r0, [pc, #416]	; 10f40 <putchar_unlocked@plt+0x1e0>
   10d9c:	bl	10bec <textdomain@plt>
   10da0:	ldr	r0, [pc, #412]	; 10f44 <putchar_unlocked@plt+0x1e4>
   10da4:	bl	13fc4 <putchar_unlocked@plt+0x3264>
   10da8:	mov	r6, #0
   10dac:	ldr	fp, [pc, #404]	; 10f48 <putchar_unlocked@plt+0x1e8>
   10db0:	ldr	sl, [pc, #404]	; 10f4c <putchar_unlocked@plt+0x1ec>
   10db4:	mov	r8, r6
   10db8:	mov	r4, r6
   10dbc:	mov	r9, r6
   10dc0:	str	r9, [sp]
   10dc4:	mov	r3, fp
   10dc8:	ldr	r2, [pc, #384]	; 10f50 <putchar_unlocked@plt+0x1f0>
   10dcc:	mov	r1, r5
   10dd0:	mov	r0, r7
   10dd4:	bl	10c7c <getopt_long@plt>
   10dd8:	cmn	r0, #1
   10ddc:	beq	10e5c <putchar_unlocked@plt+0xfc>
   10de0:	cmp	r0, #97	; 0x61
   10de4:	beq	10e24 <putchar_unlocked@plt+0xc4>
   10de8:	bgt	10e08 <putchar_unlocked@plt+0xa8>
   10dec:	cmn	r0, #3
   10df0:	beq	10e2c <putchar_unlocked@plt+0xcc>
   10df4:	cmn	r0, #2
   10df8:	moveq	r0, #0
   10dfc:	beq	10e04 <putchar_unlocked@plt+0xa4>
   10e00:	mov	r0, #1
   10e04:	bl	11140 <putchar_unlocked@plt+0x3e0>
   10e08:	cmp	r0, #115	; 0x73
   10e0c:	beq	10e20 <putchar_unlocked@plt+0xc0>
   10e10:	cmp	r0, #122	; 0x7a
   10e14:	bne	10e00 <putchar_unlocked@plt+0xa0>
   10e18:	mov	r8, #1
   10e1c:	b	10dc0 <putchar_unlocked@plt+0x60>
   10e20:	ldr	r6, [sl]
   10e24:	mov	r4, #1
   10e28:	b	10dc0 <putchar_unlocked@plt+0x60>
   10e2c:	ldr	r3, [pc, #288]	; 10f54 <putchar_unlocked@plt+0x1f4>
   10e30:	ldr	r0, [pc, #288]	; 10f58 <putchar_unlocked@plt+0x1f8>
   10e34:	str	r3, [sp]
   10e38:	ldr	r3, [pc, #284]	; 10f5c <putchar_unlocked@plt+0x1fc>
   10e3c:	str	r9, [sp, #4]
   10e40:	ldr	r2, [pc, #280]	; 10f60 <putchar_unlocked@plt+0x200>
   10e44:	ldr	r0, [r0]
   10e48:	ldr	r3, [r3]
   10e4c:	ldr	r1, [pc, #272]	; 10f64 <putchar_unlocked@plt+0x204>
   10e50:	bl	13048 <putchar_unlocked@plt+0x22e8>
   10e54:	mov	r0, #0
   10e58:	bl	10c94 <exit@plt>
   10e5c:	ldr	sl, [pc, #260]	; 10f68 <putchar_unlocked@plt+0x208>
   10e60:	mov	r9, sl
   10e64:	ldr	r3, [sl]
   10e68:	cmp	r7, r3
   10e6c:	bgt	10e94 <putchar_unlocked@plt+0x134>
   10e70:	mov	r2, #5
   10e74:	ldr	r1, [pc, #240]	; 10f6c <putchar_unlocked@plt+0x20c>
   10e78:	mov	r0, #0
   10e7c:	bl	10bd4 <dcgettext@plt>
   10e80:	mov	r1, #0
   10e84:	mov	r2, r0
   10e88:	mov	r0, r1
   10e8c:	bl	10c40 <error@plt>
   10e90:	b	10e00 <putchar_unlocked@plt+0xa0>
   10e94:	cmp	r4, #0
   10e98:	bne	10f00 <putchar_unlocked@plt+0x1a0>
   10e9c:	add	r2, r3, #2
   10ea0:	cmp	r7, r2
   10ea4:	ble	10f18 <putchar_unlocked@plt+0x1b8>
   10ea8:	mov	r2, #5
   10eac:	ldr	r1, [pc, #188]	; 10f70 <putchar_unlocked@plt+0x210>
   10eb0:	mov	r0, r4
   10eb4:	bl	10bd4 <dcgettext@plt>
   10eb8:	ldr	r3, [sl]
   10ebc:	add	r3, r3, #2
   10ec0:	mov	r6, r0
   10ec4:	ldr	r0, [r5, r3, lsl #2]
   10ec8:	bl	12bf8 <putchar_unlocked@plt+0x1e98>
   10ecc:	mov	r2, r6
   10ed0:	mov	r1, r4
   10ed4:	mov	r3, r0
   10ed8:	mov	r0, r4
   10edc:	bl	10c40 <error@plt>
   10ee0:	b	10e00 <putchar_unlocked@plt+0xa0>
   10ee4:	ldr	r0, [r5, r3, lsl #2]
   10ee8:	mov	r2, r8
   10eec:	mov	r1, r6
   10ef0:	bl	1109c <putchar_unlocked@plt+0x33c>
   10ef4:	ldr	r3, [r9]
   10ef8:	add	r3, r3, #1
   10efc:	str	r3, [r9]
   10f00:	ldr	r3, [r9]
   10f04:	cmp	r7, r3
   10f08:	bgt	10ee4 <putchar_unlocked@plt+0x184>
   10f0c:	mov	r0, #0
   10f10:	add	sp, sp, #12
   10f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f18:	lsl	r2, r3, #2
   10f1c:	ldr	r0, [r5, r3, lsl #2]
   10f20:	addeq	r5, r5, r2
   10f24:	movne	r1, r4
   10f28:	ldreq	r1, [r5, #4]
   10f2c:	mov	r2, r8
   10f30:	bl	1109c <putchar_unlocked@plt+0x33c>
   10f34:	b	10f0c <putchar_unlocked@plt+0x1ac>
   10f38:	andeq	r4, r1, sp, ror r3
   10f3c:	andeq	r4, r1, r4, ror #8
   10f40:	andeq	r4, r1, r1, asr #7
   10f44:	strdeq	r1, [r1], -r4
   10f48:	andeq	r4, r1, r0, lsr #32
   10f4c:	andeq	r5, r2, r0, lsr r1
   10f50:	andeq	r4, r1, ip, ror r4
   10f54:	andeq	r4, r1, r2, lsl #9
   10f58:	andeq	r5, r2, ip, lsr #2
   10f5c:	andeq	r5, r2, ip, asr #1
   10f60:			; <UNDEFINED> instruction: 0x000143bd
   10f64:	andeq	r4, r1, r0, lsl #1
   10f68:	andeq	r5, r2, r0, lsr #2
   10f6c:	muleq	r1, r2, r4
   10f70:	andeq	r4, r1, r2, lsr #9
   10f74:	mov	fp, #0
   10f78:	mov	lr, #0
   10f7c:	pop	{r1}		; (ldr r1, [sp], #4)
   10f80:	mov	r2, sp
   10f84:	push	{r2}		; (str r2, [sp, #-4]!)
   10f88:	push	{r0}		; (str r0, [sp, #-4]!)
   10f8c:	ldr	ip, [pc, #16]	; 10fa4 <putchar_unlocked@plt+0x244>
   10f90:	push	{ip}		; (str ip, [sp, #-4]!)
   10f94:	ldr	r0, [pc, #12]	; 10fa8 <putchar_unlocked@plt+0x248>
   10f98:	ldr	r3, [pc, #12]	; 10fac <putchar_unlocked@plt+0x24c>
   10f9c:	bl	10c58 <__libc_start_main@plt>
   10fa0:	bl	10d54 <abort@plt>
   10fa4:	andeq	r3, r1, r0, asr #31
   10fa8:	andeq	r0, r1, ip, ror #26
   10fac:	andeq	r3, r1, r0, ror #30
   10fb0:	ldr	r3, [pc, #20]	; 10fcc <putchar_unlocked@plt+0x26c>
   10fb4:	ldr	r2, [pc, #20]	; 10fd0 <putchar_unlocked@plt+0x270>
   10fb8:	add	r3, pc, r3
   10fbc:	ldr	r2, [r3, r2]
   10fc0:	cmp	r2, #0
   10fc4:	bxeq	lr
   10fc8:	b	10c70 <__gmon_start__@plt>
   10fcc:	andeq	r4, r1, r0, asr #32
   10fd0:	andeq	r0, r0, r0, asr #1
   10fd4:	ldr	r3, [pc, #28]	; 10ff8 <putchar_unlocked@plt+0x298>
   10fd8:	ldr	r0, [pc, #28]	; 10ffc <putchar_unlocked@plt+0x29c>
   10fdc:	sub	r3, r3, r0
   10fe0:	cmp	r3, #6
   10fe4:	bxls	lr
   10fe8:	ldr	r3, [pc, #16]	; 11000 <putchar_unlocked@plt+0x2a0>
   10fec:	cmp	r3, #0
   10ff0:	bxeq	lr
   10ff4:	bx	r3
   10ff8:	andeq	r5, r2, r7, lsl r1
   10ffc:	andeq	r5, r2, r4, lsl r1
   11000:	andeq	r0, r0, r0
   11004:	ldr	r1, [pc, #36]	; 11030 <putchar_unlocked@plt+0x2d0>
   11008:	ldr	r0, [pc, #36]	; 11034 <putchar_unlocked@plt+0x2d4>
   1100c:	sub	r1, r1, r0
   11010:	asr	r1, r1, #2
   11014:	add	r1, r1, r1, lsr #31
   11018:	asrs	r1, r1, #1
   1101c:	bxeq	lr
   11020:	ldr	r3, [pc, #16]	; 11038 <putchar_unlocked@plt+0x2d8>
   11024:	cmp	r3, #0
   11028:	bxeq	lr
   1102c:	bx	r3
   11030:	andeq	r5, r2, r4, lsl r1
   11034:	andeq	r5, r2, r4, lsl r1
   11038:	andeq	r0, r0, r0
   1103c:	push	{r4, lr}
   11040:	ldr	r4, [pc, #24]	; 11060 <putchar_unlocked@plt+0x300>
   11044:	ldrb	r3, [r4]
   11048:	cmp	r3, #0
   1104c:	popne	{r4, pc}
   11050:	bl	10fd4 <putchar_unlocked@plt+0x274>
   11054:	mov	r3, #1
   11058:	strb	r3, [r4]
   1105c:	pop	{r4, pc}
   11060:	andeq	r5, r2, r4, lsr r1
   11064:	ldr	r0, [pc, #40]	; 11094 <putchar_unlocked@plt+0x334>
   11068:	ldr	r3, [r0]
   1106c:	cmp	r3, #0
   11070:	bne	11078 <putchar_unlocked@plt+0x318>
   11074:	b	11004 <putchar_unlocked@plt+0x2a4>
   11078:	ldr	r3, [pc, #24]	; 11098 <putchar_unlocked@plt+0x338>
   1107c:	cmp	r3, #0
   11080:	beq	11074 <putchar_unlocked@plt+0x314>
   11084:	push	{r4, lr}
   11088:	blx	r3
   1108c:	pop	{r4, lr}
   11090:	b	11004 <putchar_unlocked@plt+0x2a4>
   11094:	andeq	r4, r2, r4, lsl pc
   11098:	andeq	r0, r0, r0
   1109c:	push	{r4, r5, r6, r7, r8, lr}
   110a0:	mov	r6, r1
   110a4:	mov	r7, r2
   110a8:	bl	114d8 <putchar_unlocked@plt+0x778>
   110ac:	mov	r4, r0
   110b0:	bl	1153c <putchar_unlocked@plt+0x7dc>
   110b4:	cmp	r6, #0
   110b8:	beq	11110 <putchar_unlocked@plt+0x3b0>
   110bc:	ldrb	r3, [r4]
   110c0:	cmp	r3, #47	; 0x2f
   110c4:	beq	11110 <putchar_unlocked@plt+0x3b0>
   110c8:	mov	r0, r4
   110cc:	bl	10ca0 <strlen@plt>
   110d0:	add	r5, r4, r0
   110d4:	mov	r0, r6
   110d8:	bl	10ca0 <strlen@plt>
   110dc:	add	r0, r6, r0
   110e0:	cmp	r4, r5
   110e4:	cmpcc	r6, r0
   110e8:	movcc	r3, #1
   110ec:	movcs	r3, #0
   110f0:	bcc	11100 <putchar_unlocked@plt+0x3a0>
   110f4:	cmp	r4, r5
   110f8:	strbcc	r3, [r5]
   110fc:	b	11110 <putchar_unlocked@plt+0x3b0>
   11100:	ldrb	r2, [r5, #-1]!
   11104:	ldrb	r3, [r0, #-1]!
   11108:	cmp	r2, r3
   1110c:	beq	110e0 <putchar_unlocked@plt+0x380>
   11110:	ldr	r3, [pc, #36]	; 1113c <putchar_unlocked@plt+0x3dc>
   11114:	mov	r0, r4
   11118:	ldr	r1, [r3]
   1111c:	bl	10b5c <fputs_unlocked@plt>
   11120:	cmp	r7, #0
   11124:	moveq	r0, #10
   11128:	movne	r0, #0
   1112c:	bl	10d60 <putchar_unlocked@plt>
   11130:	mov	r0, r4
   11134:	pop	{r4, r5, r6, r7, r8, lr}
   11138:	b	11574 <putchar_unlocked@plt+0x814>
   1113c:	andeq	r5, r2, ip, lsr #2
   11140:	subs	r4, r0, #0
   11144:	push	{r7, lr}
   11148:	sub	sp, sp, #64	; 0x40
   1114c:	ldr	r6, [pc, #552]	; 1137c <putchar_unlocked@plt+0x61c>
   11150:	beq	11188 <putchar_unlocked@plt+0x428>
   11154:	ldr	r3, [pc, #548]	; 11380 <putchar_unlocked@plt+0x620>
   11158:	mov	r2, #5
   1115c:	ldr	r1, [pc, #544]	; 11384 <putchar_unlocked@plt+0x624>
   11160:	mov	r0, #0
   11164:	ldr	r5, [r3]
   11168:	bl	10bd4 <dcgettext@plt>
   1116c:	ldr	r3, [r6]
   11170:	mov	r1, #1
   11174:	mov	r2, r0
   11178:	mov	r0, r5
   1117c:	bl	10ce8 <__fprintf_chk@plt>
   11180:	mov	r0, r4
   11184:	bl	10c94 <exit@plt>
   11188:	mov	r2, #5
   1118c:	ldr	r1, [pc, #500]	; 11388 <putchar_unlocked@plt+0x628>
   11190:	bl	10bd4 <dcgettext@plt>
   11194:	ldr	r3, [r6]
   11198:	ldr	r5, [pc, #492]	; 1138c <putchar_unlocked@plt+0x62c>
   1119c:	mov	r2, r3
   111a0:	ldr	r9, [pc, #488]	; 11390 <putchar_unlocked@plt+0x630>
   111a4:	add	r7, sp, #8
   111a8:	mov	r1, r0
   111ac:	mov	r0, #1
   111b0:	bl	10cd0 <__printf_chk@plt>
   111b4:	mov	r2, #5
   111b8:	ldr	r1, [pc, #468]	; 11394 <putchar_unlocked@plt+0x634>
   111bc:	mov	r0, r4
   111c0:	bl	10bd4 <dcgettext@plt>
   111c4:	ldr	r1, [r5]
   111c8:	bl	10b5c <fputs_unlocked@plt>
   111cc:	mov	r2, #5
   111d0:	ldr	r1, [pc, #448]	; 11398 <putchar_unlocked@plt+0x638>
   111d4:	mov	r0, r4
   111d8:	bl	10bd4 <dcgettext@plt>
   111dc:	ldr	r1, [r5]
   111e0:	bl	10b5c <fputs_unlocked@plt>
   111e4:	mov	r2, #5
   111e8:	ldr	r1, [pc, #428]	; 1139c <putchar_unlocked@plt+0x63c>
   111ec:	mov	r0, r4
   111f0:	bl	10bd4 <dcgettext@plt>
   111f4:	ldr	r1, [r5]
   111f8:	bl	10b5c <fputs_unlocked@plt>
   111fc:	mov	r2, #5
   11200:	ldr	r1, [pc, #408]	; 113a0 <putchar_unlocked@plt+0x640>
   11204:	mov	r0, r4
   11208:	bl	10bd4 <dcgettext@plt>
   1120c:	ldr	r1, [r5]
   11210:	bl	10b5c <fputs_unlocked@plt>
   11214:	mov	r2, #5
   11218:	ldr	r1, [pc, #388]	; 113a4 <putchar_unlocked@plt+0x644>
   1121c:	mov	r0, r4
   11220:	bl	10bd4 <dcgettext@plt>
   11224:	ldr	r1, [r5]
   11228:	bl	10b5c <fputs_unlocked@plt>
   1122c:	mov	r2, #5
   11230:	ldr	r1, [pc, #368]	; 113a8 <putchar_unlocked@plt+0x648>
   11234:	mov	r0, r4
   11238:	bl	10bd4 <dcgettext@plt>
   1123c:	ldr	r3, [r6]
   11240:	mov	r6, r4
   11244:	str	r3, [sp, #4]
   11248:	str	r3, [sp]
   1124c:	mov	r2, r3
   11250:	mov	r1, r0
   11254:	mov	r0, #1
   11258:	bl	10cd0 <__printf_chk@plt>
   1125c:	ldr	lr, [pc, #328]	; 113ac <putchar_unlocked@plt+0x64c>
   11260:	add	ip, sp, #8
   11264:	ldm	lr!, {r0, r1, r2, r3}
   11268:	stmia	ip!, {r0, r1, r2, r3}
   1126c:	ldm	lr!, {r0, r1, r2, r3}
   11270:	stmia	ip!, {r0, r1, r2, r3}
   11274:	ldm	lr!, {r0, r1, r2, r3}
   11278:	stmia	ip!, {r0, r1, r2, r3}
   1127c:	ldm	lr, {r0, r1}
   11280:	stm	ip, {r0, r1}
   11284:	ldr	r1, [r7, r6]
   11288:	add	r8, r7, r6
   1128c:	cmp	r1, #0
   11290:	bne	11334 <putchar_unlocked@plt+0x5d4>
   11294:	ldr	r6, [r8, #4]
   11298:	ldr	r7, [pc, #240]	; 11390 <putchar_unlocked@plt+0x630>
   1129c:	cmp	r6, #0
   112a0:	mov	r2, #5
   112a4:	ldr	r1, [pc, #260]	; 113b0 <putchar_unlocked@plt+0x650>
   112a8:	mov	r0, #0
   112ac:	moveq	r6, r7
   112b0:	bl	10bd4 <dcgettext@plt>
   112b4:	ldr	r3, [pc, #248]	; 113b4 <putchar_unlocked@plt+0x654>
   112b8:	ldr	r2, [pc, #248]	; 113b8 <putchar_unlocked@plt+0x658>
   112bc:	mov	r1, r0
   112c0:	mov	r0, #1
   112c4:	bl	10cd0 <__printf_chk@plt>
   112c8:	mov	r1, #0
   112cc:	mov	r0, #5
   112d0:	bl	10d0c <setlocale@plt>
   112d4:	cmp	r0, #0
   112d8:	bne	1134c <putchar_unlocked@plt+0x5ec>
   112dc:	mov	r2, #5
   112e0:	ldr	r1, [pc, #212]	; 113bc <putchar_unlocked@plt+0x65c>
   112e4:	mov	r0, #0
   112e8:	bl	10bd4 <dcgettext@plt>
   112ec:	ldr	r3, [pc, #156]	; 11390 <putchar_unlocked@plt+0x630>
   112f0:	ldr	r2, [pc, #188]	; 113b4 <putchar_unlocked@plt+0x654>
   112f4:	mov	r1, r0
   112f8:	mov	r0, #1
   112fc:	bl	10cd0 <__printf_chk@plt>
   11300:	mov	r2, #5
   11304:	ldr	r1, [pc, #180]	; 113c0 <putchar_unlocked@plt+0x660>
   11308:	mov	r0, #0
   1130c:	bl	10bd4 <dcgettext@plt>
   11310:	ldr	r2, [pc, #172]	; 113c4 <putchar_unlocked@plt+0x664>
   11314:	cmp	r6, r7
   11318:	ldr	r3, [pc, #168]	; 113c8 <putchar_unlocked@plt+0x668>
   1131c:	moveq	r3, r2
   11320:	mov	r2, r6
   11324:	mov	r1, r0
   11328:	mov	r0, #1
   1132c:	bl	10cd0 <__printf_chk@plt>
   11330:	b	11180 <putchar_unlocked@plt+0x420>
   11334:	mov	r0, r9
   11338:	bl	10b74 <strcmp@plt>
   1133c:	add	r6, r6, #8
   11340:	cmp	r0, #0
   11344:	bne	11284 <putchar_unlocked@plt+0x524>
   11348:	b	11294 <putchar_unlocked@plt+0x534>
   1134c:	mov	r2, #3
   11350:	ldr	r1, [pc, #116]	; 113cc <putchar_unlocked@plt+0x66c>
   11354:	bl	10d48 <strncmp@plt>
   11358:	cmp	r0, #0
   1135c:	beq	112dc <putchar_unlocked@plt+0x57c>
   11360:	mov	r2, #5
   11364:	ldr	r1, [pc, #100]	; 113d0 <putchar_unlocked@plt+0x670>
   11368:	mov	r0, #0
   1136c:	bl	10bd4 <dcgettext@plt>
   11370:	ldr	r1, [r5]
   11374:	bl	10b5c <fputs_unlocked@plt>
   11378:	b	112dc <putchar_unlocked@plt+0x57c>
   1137c:	andeq	r5, r2, r0, asr #2
   11380:	andeq	r5, r2, r8, lsr #2
   11384:	andeq	r4, r1, r9, lsl #1
   11388:	strheq	r4, [r1], -r0
   1138c:	andeq	r5, r2, ip, lsr #2
   11390:	andeq	r4, r1, r0, lsl #1
   11394:	andeq	r4, r1, r5, ror #1
   11398:	andeq	r4, r1, sp, asr #2
   1139c:	muleq	r1, r8, r1
   113a0:	andeq	r4, r1, r2, ror #4
   113a4:	andeq	r4, r1, pc, lsl #5
   113a8:	andeq	r4, r1, r5, asr #5
   113ac:	andeq	r3, r1, r8, ror #31
   113b0:	andeq	r4, r1, lr, ror r3
   113b4:	muleq	r1, r5, r3
   113b8:			; <UNDEFINED> instruction: 0x000143bd
   113bc:	andeq	r4, r1, r6, lsl r4
   113c0:	andeq	r4, r1, r1, lsr r4
   113c4:	andeq	r4, r1, pc, asr #9
   113c8:	andeq	r4, r1, sp, ror r3
   113cc:	andeq	r4, r1, fp, asr #7
   113d0:	andeq	r4, r1, pc, asr #7
   113d4:	ldr	r3, [pc, #4]	; 113e0 <putchar_unlocked@plt+0x680>
   113d8:	str	r0, [r3]
   113dc:	bx	lr
   113e0:	andeq	r5, r2, r8, lsr r1
   113e4:	ldr	r3, [pc, #4]	; 113f0 <putchar_unlocked@plt+0x690>
   113e8:	strb	r0, [r3, #4]
   113ec:	bx	lr
   113f0:	andeq	r5, r2, r8, lsr r1
   113f4:	ldr	r3, [pc, #192]	; 114bc <putchar_unlocked@plt+0x75c>
   113f8:	push	{r0, r1, r4, r5, r6, lr}
   113fc:	ldr	r0, [r3]
   11400:	bl	13758 <putchar_unlocked@plt+0x29f8>
   11404:	cmp	r0, #0
   11408:	beq	114a0 <putchar_unlocked@plt+0x740>
   1140c:	ldr	r3, [pc, #172]	; 114c0 <putchar_unlocked@plt+0x760>
   11410:	mov	r4, r3
   11414:	ldrb	r2, [r3, #4]
   11418:	cmp	r2, #0
   1141c:	beq	11430 <putchar_unlocked@plt+0x6d0>
   11420:	bl	10cac <__errno_location@plt>
   11424:	ldr	r3, [r0]
   11428:	cmp	r3, #32
   1142c:	beq	114a0 <putchar_unlocked@plt+0x740>
   11430:	mov	r2, #5
   11434:	ldr	r1, [pc, #136]	; 114c4 <putchar_unlocked@plt+0x764>
   11438:	mov	r0, #0
   1143c:	bl	10bd4 <dcgettext@plt>
   11440:	ldr	r4, [r4]
   11444:	cmp	r4, #0
   11448:	mov	r5, r0
   1144c:	beq	11484 <putchar_unlocked@plt+0x724>
   11450:	bl	10cac <__errno_location@plt>
   11454:	ldr	r6, [r0]
   11458:	mov	r0, r4
   1145c:	bl	12aa8 <putchar_unlocked@plt+0x1d48>
   11460:	str	r5, [sp]
   11464:	ldr	r2, [pc, #92]	; 114c8 <putchar_unlocked@plt+0x768>
   11468:	mov	r1, r6
   1146c:	mov	r3, r0
   11470:	mov	r0, #0
   11474:	bl	10c40 <error@plt>
   11478:	ldr	r3, [pc, #76]	; 114cc <putchar_unlocked@plt+0x76c>
   1147c:	ldr	r0, [r3]
   11480:	bl	10b98 <_exit@plt>
   11484:	bl	10cac <__errno_location@plt>
   11488:	mov	r3, r5
   1148c:	ldr	r2, [pc, #60]	; 114d0 <putchar_unlocked@plt+0x770>
   11490:	ldr	r1, [r0]
   11494:	mov	r0, r4
   11498:	bl	10c40 <error@plt>
   1149c:	b	11478 <putchar_unlocked@plt+0x718>
   114a0:	ldr	r3, [pc, #44]	; 114d4 <putchar_unlocked@plt+0x774>
   114a4:	ldr	r0, [r3]
   114a8:	bl	13758 <putchar_unlocked@plt+0x29f8>
   114ac:	cmp	r0, #0
   114b0:	bne	11478 <putchar_unlocked@plt+0x718>
   114b4:	add	sp, sp, #8
   114b8:	pop	{r4, r5, r6, pc}
   114bc:	andeq	r5, r2, ip, lsr #2
   114c0:	andeq	r5, r2, r8, lsr r1
   114c4:	andeq	r4, r1, r3, asr #10
   114c8:	andeq	r4, r1, pc, asr #10
   114cc:	ldrdeq	r5, [r2], -r0
   114d0:	andeq	r4, r1, r3, asr r5
   114d4:	andeq	r5, r2, r8, lsr #2
   114d8:	push	{r4, r5, r6, lr}
   114dc:	mov	r6, r0
   114e0:	bl	136c8 <putchar_unlocked@plt+0x2968>
   114e4:	ldrb	r3, [r0]
   114e8:	cmp	r3, #0
   114ec:	beq	11528 <putchar_unlocked@plt+0x7c8>
   114f0:	mov	r5, r0
   114f4:	bl	13728 <putchar_unlocked@plt+0x29c8>
   114f8:	ldrb	r4, [r5, r0]
   114fc:	cmp	r4, #47	; 0x2f
   11500:	movne	r4, r0
   11504:	addeq	r4, r0, #1
   11508:	add	r0, r4, #1
   1150c:	bl	13124 <putchar_unlocked@plt+0x23c4>
   11510:	mov	r2, r4
   11514:	mov	r1, r5
   11518:	bl	10ba4 <memcpy@plt>
   1151c:	mov	r2, #0
   11520:	strb	r2, [r0, r4]
   11524:	pop	{r4, r5, r6, pc}
   11528:	mov	r0, r6
   1152c:	bl	13728 <putchar_unlocked@plt+0x29c8>
   11530:	mov	r5, r6
   11534:	mov	r4, r0
   11538:	b	11508 <putchar_unlocked@plt+0x7a8>
   1153c:	push	{r4, lr}
   11540:	mov	r4, r0
   11544:	bl	136c8 <putchar_unlocked@plt+0x2968>
   11548:	ldrb	r3, [r0]
   1154c:	cmp	r3, #0
   11550:	movne	r4, r0
   11554:	mov	r0, r4
   11558:	bl	13728 <putchar_unlocked@plt+0x29c8>
   1155c:	mov	r2, #0
   11560:	ldrb	r3, [r4, r0]
   11564:	strb	r2, [r4, r0]
   11568:	subs	r0, r3, r2
   1156c:	movne	r0, #1
   11570:	pop	{r4, pc}
   11574:	push	{r0, r1, r2, r4, r5, lr}
   11578:	mov	r5, r0
   1157c:	bl	10cac <__errno_location@plt>
   11580:	ldr	r3, [r0]
   11584:	mov	r4, r0
   11588:	str	r3, [sp]
   1158c:	str	r3, [sp, #4]
   11590:	mov	r3, #0
   11594:	str	r3, [r0]
   11598:	mov	r0, r5
   1159c:	bl	10b8c <free@plt>
   115a0:	ldr	r3, [r4]
   115a4:	add	r2, sp, #8
   115a8:	cmp	r3, #0
   115ac:	moveq	r3, #4
   115b0:	movne	r3, #0
   115b4:	add	r3, r2, r3
   115b8:	ldr	r3, [r3, #-8]
   115bc:	str	r3, [r4]
   115c0:	add	sp, sp, #12
   115c4:	pop	{r4, r5, pc}
   115c8:	push	{r4, r5, r6, lr}
   115cc:	subs	r5, r0, #0
   115d0:	bne	115e8 <putchar_unlocked@plt+0x888>
   115d4:	ldr	r3, [pc, #124]	; 11658 <putchar_unlocked@plt+0x8f8>
   115d8:	ldr	r0, [pc, #124]	; 1165c <putchar_unlocked@plt+0x8fc>
   115dc:	ldr	r1, [r3]
   115e0:	bl	10d3c <fputs@plt>
   115e4:	bl	10d54 <abort@plt>
   115e8:	mov	r1, #47	; 0x2f
   115ec:	bl	10d18 <strrchr@plt>
   115f0:	cmp	r0, #0
   115f4:	addne	r4, r0, #1
   115f8:	moveq	r4, r5
   115fc:	sub	r3, r4, r5
   11600:	cmp	r3, #6
   11604:	ble	11644 <putchar_unlocked@plt+0x8e4>
   11608:	mov	r2, #7
   1160c:	ldr	r1, [pc, #76]	; 11660 <putchar_unlocked@plt+0x900>
   11610:	sub	r0, r4, #7
   11614:	bl	10d48 <strncmp@plt>
   11618:	cmp	r0, #0
   1161c:	bne	11644 <putchar_unlocked@plt+0x8e4>
   11620:	mov	r2, #3
   11624:	ldr	r1, [pc, #56]	; 11664 <putchar_unlocked@plt+0x904>
   11628:	mov	r0, r4
   1162c:	bl	10d48 <strncmp@plt>
   11630:	cmp	r0, #0
   11634:	movne	r5, r4
   11638:	ldreq	r3, [pc, #40]	; 11668 <putchar_unlocked@plt+0x908>
   1163c:	addeq	r5, r4, #3
   11640:	streq	r5, [r3]
   11644:	ldr	r3, [pc, #32]	; 1166c <putchar_unlocked@plt+0x90c>
   11648:	str	r5, [r3]
   1164c:	ldr	r3, [pc, #28]	; 11670 <putchar_unlocked@plt+0x910>
   11650:	str	r5, [r3]
   11654:	pop	{r4, r5, r6, pc}
   11658:	andeq	r5, r2, r8, lsr #2
   1165c:	andeq	r4, r1, r6, asr r5
   11660:	andeq	r4, r1, lr, lsl #11
   11664:	muleq	r1, r6, r5
   11668:	andeq	r5, r2, r8, lsl r1
   1166c:	andeq	r5, r2, r0, asr #2
   11670:	andeq	r5, r2, ip, lsl r1
   11674:	push	{r4, r5, r6, lr}
   11678:	mov	r2, #48	; 0x30
   1167c:	mov	r5, r1
   11680:	mov	r1, #0
   11684:	mov	r4, r0
   11688:	bl	10cc4 <memset@plt>
   1168c:	cmp	r5, #10
   11690:	bne	11698 <putchar_unlocked@plt+0x938>
   11694:	bl	10d54 <abort@plt>
   11698:	str	r5, [r4]
   1169c:	mov	r0, r4
   116a0:	pop	{r4, r5, r6, pc}
   116a4:	push	{r4, r5, r6, lr}
   116a8:	mov	r4, r0
   116ac:	mov	r5, r1
   116b0:	bl	13954 <putchar_unlocked@plt+0x2bf4>
   116b4:	ldrb	r3, [r0]
   116b8:	bic	r3, r3, #32
   116bc:	cmp	r3, #85	; 0x55
   116c0:	bne	11730 <putchar_unlocked@plt+0x9d0>
   116c4:	ldrb	r3, [r0, #1]
   116c8:	bic	r3, r3, #32
   116cc:	cmp	r3, #84	; 0x54
   116d0:	bne	11708 <putchar_unlocked@plt+0x9a8>
   116d4:	ldrb	r3, [r0, #2]
   116d8:	bic	r3, r3, #32
   116dc:	cmp	r3, #70	; 0x46
   116e0:	bne	11708 <putchar_unlocked@plt+0x9a8>
   116e4:	ldrb	r3, [r0, #3]
   116e8:	cmp	r3, #45	; 0x2d
   116ec:	bne	11708 <putchar_unlocked@plt+0x9a8>
   116f0:	ldrb	r3, [r0, #4]
   116f4:	cmp	r3, #56	; 0x38
   116f8:	bne	11708 <putchar_unlocked@plt+0x9a8>
   116fc:	ldrb	r3, [r0, #5]
   11700:	cmp	r3, #0
   11704:	beq	1171c <putchar_unlocked@plt+0x9bc>
   11708:	ldr	r1, [pc, #144]	; 117a0 <putchar_unlocked@plt+0xa40>
   1170c:	ldr	r0, [pc, #144]	; 117a4 <putchar_unlocked@plt+0xa44>
   11710:	cmp	r5, #9
   11714:	movne	r0, r1
   11718:	pop	{r4, r5, r6, pc}
   1171c:	ldrb	r3, [r4]
   11720:	ldr	r1, [pc, #128]	; 117a8 <putchar_unlocked@plt+0xa48>
   11724:	ldr	r0, [pc, #128]	; 117ac <putchar_unlocked@plt+0xa4c>
   11728:	cmp	r3, #96	; 0x60
   1172c:	b	11714 <putchar_unlocked@plt+0x9b4>
   11730:	cmp	r3, #71	; 0x47
   11734:	bne	11708 <putchar_unlocked@plt+0x9a8>
   11738:	ldrb	r3, [r0, #1]
   1173c:	bic	r3, r3, #32
   11740:	cmp	r3, #66	; 0x42
   11744:	bne	11708 <putchar_unlocked@plt+0x9a8>
   11748:	ldrb	r3, [r0, #2]
   1174c:	cmp	r3, #49	; 0x31
   11750:	bne	11708 <putchar_unlocked@plt+0x9a8>
   11754:	ldrb	r3, [r0, #3]
   11758:	cmp	r3, #56	; 0x38
   1175c:	bne	11708 <putchar_unlocked@plt+0x9a8>
   11760:	ldrb	r3, [r0, #4]
   11764:	cmp	r3, #48	; 0x30
   11768:	bne	11708 <putchar_unlocked@plt+0x9a8>
   1176c:	ldrb	r3, [r0, #5]
   11770:	cmp	r3, #51	; 0x33
   11774:	bne	11708 <putchar_unlocked@plt+0x9a8>
   11778:	ldrb	r3, [r0, #6]
   1177c:	cmp	r3, #48	; 0x30
   11780:	bne	11708 <putchar_unlocked@plt+0x9a8>
   11784:	ldrb	r3, [r0, #7]
   11788:	cmp	r3, #0
   1178c:	bne	11708 <putchar_unlocked@plt+0x9a8>
   11790:	ldrb	r3, [r4]
   11794:	ldr	r1, [pc, #20]	; 117b0 <putchar_unlocked@plt+0xa50>
   11798:	ldr	r0, [pc, #20]	; 117b4 <putchar_unlocked@plt+0xa54>
   1179c:	b	11728 <putchar_unlocked@plt+0x9c8>
   117a0:	andeq	r4, r1, r1, lsl #12
   117a4:	strdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   117a8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   117ac:	strdeq	r4, [r1], -r0
   117b0:	strdeq	r4, [r1], -ip
   117b4:	strdeq	r4, [r1], -r8
   117b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117bc:	sub	sp, sp, #108	; 0x6c
   117c0:	mov	r8, r0
   117c4:	str	r3, [sp, #36]	; 0x24
   117c8:	mov	r5, r1
   117cc:	str	r2, [sp, #44]	; 0x2c
   117d0:	ldr	sl, [sp, #144]	; 0x90
   117d4:	bl	10c10 <__ctype_get_mb_cur_max@plt>
   117d8:	ldr	r3, [sp, #148]	; 0x94
   117dc:	mov	r7, #0
   117e0:	str	r7, [sp, #48]	; 0x30
   117e4:	lsr	r6, r3, #1
   117e8:	and	r6, r6, #1
   117ec:	mov	r3, #1
   117f0:	str	r3, [sp, #72]	; 0x48
   117f4:	str	r7, [sp, #24]
   117f8:	str	r7, [sp, #32]
   117fc:	str	r7, [sp, #40]	; 0x28
   11800:	str	r7, [sp, #60]	; 0x3c
   11804:	str	r0, [sp, #76]	; 0x4c
   11808:	cmp	sl, #10
   1180c:	ldrls	pc, [pc, sl, lsl #2]
   11810:	b	11a4c <putchar_unlocked@plt+0xcec>
   11814:	andeq	r1, r1, r0, asr #16
   11818:	ldrdeq	r2, [r1], -r4
   1181c:	andeq	r1, r1, r8, lsl sl
   11820:	andeq	r1, r1, r4, ror #20
   11824:	strdeq	r1, [r1], -r4
   11828:	andeq	r1, r1, ip, asr #16
   1182c:			; <UNDEFINED> instruction: 0x000124b4
   11830:	andeq	r1, r1, r0, asr sl
   11834:	andeq	r1, r1, r4, asr #18
   11838:	andeq	r1, r1, r4, asr #18
   1183c:	andeq	r1, r1, r4, asr #18
   11840:	mov	r6, #0
   11844:	mov	r4, #0
   11848:	b	11878 <putchar_unlocked@plt+0xb18>
   1184c:	cmp	r6, #0
   11850:	bne	11a74 <putchar_unlocked@plt+0xd14>
   11854:	cmp	r5, #0
   11858:	movne	r3, #34	; 0x22
   1185c:	strbne	r3, [r8]
   11860:	mov	r3, #1
   11864:	str	r3, [sp, #24]
   11868:	str	r3, [sp, #32]
   1186c:	mov	r4, #1
   11870:	ldr	r3, [pc, #3172]	; 124dc <putchar_unlocked@plt+0x177c>
   11874:	str	r3, [sp, #40]	; 0x28
   11878:	mov	r9, r5
   1187c:	mov	r3, #0
   11880:	str	r7, [sp, #68]	; 0x44
   11884:	str	r3, [sp, #28]
   11888:	ldr	r3, [sp, #36]	; 0x24
   1188c:	cmn	r3, #1
   11890:	bne	12420 <putchar_unlocked@plt+0x16c0>
   11894:	ldr	r3, [sp, #44]	; 0x2c
   11898:	ldr	r2, [sp, #28]
   1189c:	ldrb	r3, [r3, r2]
   118a0:	adds	r3, r3, #0
   118a4:	movne	r3, #1
   118a8:	str	r3, [sp, #52]	; 0x34
   118ac:	ldr	r3, [sp, #52]	; 0x34
   118b0:	cmp	r3, #0
   118b4:	bne	11a9c <putchar_unlocked@plt+0xd3c>
   118b8:	sub	r2, sl, #2
   118bc:	clz	r2, r2
   118c0:	lsr	r2, r2, #5
   118c4:	and	r3, r6, r2
   118c8:	cmp	r4, #0
   118cc:	movne	r3, #0
   118d0:	andeq	r3, r3, #1
   118d4:	cmp	r3, #0
   118d8:	bne	11c64 <putchar_unlocked@plt+0xf04>
   118dc:	eor	r3, r6, #1
   118e0:	ands	r2, r2, r3
   118e4:	beq	12458 <putchar_unlocked@plt+0x16f8>
   118e8:	ldr	r3, [sp, #68]	; 0x44
   118ec:	cmp	r3, #0
   118f0:	beq	12490 <putchar_unlocked@plt+0x1730>
   118f4:	ldr	r3, [sp, #72]	; 0x48
   118f8:	cmp	r3, #0
   118fc:	beq	12434 <putchar_unlocked@plt+0x16d4>
   11900:	ldr	r3, [sp, #160]	; 0xa0
   11904:	ldr	r2, [sp, #44]	; 0x2c
   11908:	str	r3, [sp, #16]
   1190c:	ldr	r3, [sp, #156]	; 0x9c
   11910:	ldr	r1, [sp, #60]	; 0x3c
   11914:	str	r3, [sp, #12]
   11918:	ldr	r3, [sp, #152]	; 0x98
   1191c:	str	r3, [sp, #8]
   11920:	ldr	r3, [sp, #148]	; 0x94
   11924:	str	r3, [sp, #4]
   11928:	mov	r3, #5
   1192c:	str	r3, [sp]
   11930:	ldr	r3, [sp, #36]	; 0x24
   11934:	mov	r0, r8
   11938:	bl	117b8 <putchar_unlocked@plt+0xa58>
   1193c:	mov	r4, r0
   11940:	b	12484 <putchar_unlocked@plt+0x1724>
   11944:	cmp	sl, #10
   11948:	beq	119a4 <putchar_unlocked@plt+0xc44>
   1194c:	ldr	r4, [pc, #2956]	; 124e0 <putchar_unlocked@plt+0x1780>
   11950:	mov	r2, #5
   11954:	mov	r1, r4
   11958:	mov	r0, #0
   1195c:	bl	10bd4 <dcgettext@plt>
   11960:	cmp	r0, r4
   11964:	str	r0, [sp, #156]	; 0x9c
   11968:	bne	11978 <putchar_unlocked@plt+0xc18>
   1196c:	mov	r1, sl
   11970:	bl	116a4 <putchar_unlocked@plt+0x944>
   11974:	str	r0, [sp, #156]	; 0x9c
   11978:	ldr	r4, [pc, #2916]	; 124e4 <putchar_unlocked@plt+0x1784>
   1197c:	mov	r2, #5
   11980:	mov	r1, r4
   11984:	mov	r0, #0
   11988:	bl	10bd4 <dcgettext@plt>
   1198c:	cmp	r0, r4
   11990:	str	r0, [sp, #160]	; 0xa0
   11994:	bne	119a4 <putchar_unlocked@plt+0xc44>
   11998:	mov	r1, sl
   1199c:	bl	116a4 <putchar_unlocked@plt+0x944>
   119a0:	str	r0, [sp, #160]	; 0xa0
   119a4:	cmp	r6, #0
   119a8:	moveq	r4, r6
   119ac:	beq	119c4 <putchar_unlocked@plt+0xc64>
   119b0:	mov	r4, #0
   119b4:	b	119d4 <putchar_unlocked@plt+0xc74>
   119b8:	cmp	r5, r4
   119bc:	strbhi	r3, [r8, r4]
   119c0:	add	r4, r4, #1
   119c4:	ldr	r3, [sp, #156]	; 0x9c
   119c8:	ldrb	r3, [r3, r4]
   119cc:	cmp	r3, #0
   119d0:	bne	119b8 <putchar_unlocked@plt+0xc58>
   119d4:	ldr	r0, [sp, #160]	; 0xa0
   119d8:	bl	10ca0 <strlen@plt>
   119dc:	ldr	r3, [sp, #160]	; 0xa0
   119e0:	str	r3, [sp, #40]	; 0x28
   119e4:	mov	r3, #1
   119e8:	str	r3, [sp, #24]
   119ec:	str	r0, [sp, #32]
   119f0:	b	11878 <putchar_unlocked@plt+0xb18>
   119f4:	mov	r3, #1
   119f8:	cmp	r6, #0
   119fc:	streq	r3, [sp, #24]
   11a00:	beq	11a20 <putchar_unlocked@plt+0xcc0>
   11a04:	str	r3, [sp, #32]
   11a08:	ldr	r3, [pc, #2772]	; 124e4 <putchar_unlocked@plt+0x1784>
   11a0c:	mov	r4, #0
   11a10:	str	r3, [sp, #40]	; 0x28
   11a14:	b	11a44 <putchar_unlocked@plt+0xce4>
   11a18:	cmp	r6, #0
   11a1c:	bne	11a8c <putchar_unlocked@plt+0xd2c>
   11a20:	cmp	r5, #0
   11a24:	movne	r3, #39	; 0x27
   11a28:	strbne	r3, [r8]
   11a2c:	mov	r3, #1
   11a30:	str	r3, [sp, #32]
   11a34:	mov	r6, #0
   11a38:	ldr	r3, [pc, #2724]	; 124e4 <putchar_unlocked@plt+0x1784>
   11a3c:	mov	r4, #1
   11a40:	str	r3, [sp, #40]	; 0x28
   11a44:	mov	sl, #2
   11a48:	b	11878 <putchar_unlocked@plt+0xb18>
   11a4c:	bl	10d54 <abort@plt>
   11a50:	mov	r6, #0
   11a54:	mov	r3, #1
   11a58:	str	r3, [sp, #24]
   11a5c:	mov	r4, r6
   11a60:	b	11878 <putchar_unlocked@plt+0xb18>
   11a64:	mov	r6, #1
   11a68:	str	r6, [sp, #24]
   11a6c:	str	r6, [sp, #32]
   11a70:	b	11a08 <putchar_unlocked@plt+0xca8>
   11a74:	mov	r3, #1
   11a78:	str	r3, [sp, #32]
   11a7c:	ldr	r3, [pc, #2648]	; 124dc <putchar_unlocked@plt+0x177c>
   11a80:	str	r6, [sp, #24]
   11a84:	str	r3, [sp, #40]	; 0x28
   11a88:	b	11844 <putchar_unlocked@plt+0xae4>
   11a8c:	mov	r3, #1
   11a90:	str	r3, [sp, #32]
   11a94:	ldr	r3, [pc, #2632]	; 124e4 <putchar_unlocked@plt+0x1784>
   11a98:	b	11a84 <putchar_unlocked@plt+0xd24>
   11a9c:	ldr	r3, [sp, #32]
   11aa0:	ldr	fp, [sp, #24]
   11aa4:	cmp	sl, #2
   11aa8:	moveq	fp, #0
   11aac:	andne	fp, fp, #1
   11ab0:	adds	r5, r3, #0
   11ab4:	movne	r5, #1
   11ab8:	ands	r3, r5, fp
   11abc:	str	r3, [sp, #64]	; 0x40
   11ac0:	beq	11b90 <putchar_unlocked@plt+0xe30>
   11ac4:	ldr	r2, [sp, #32]
   11ac8:	ldr	r3, [sp, #28]
   11acc:	add	r7, r3, r2
   11ad0:	mov	r3, r2
   11ad4:	ldr	r2, [sp, #36]	; 0x24
   11ad8:	cmp	r3, #1
   11adc:	movls	r3, #0
   11ae0:	movhi	r3, #1
   11ae4:	cmn	r2, #1
   11ae8:	movne	r3, #0
   11aec:	cmp	r3, #0
   11af0:	beq	11b00 <putchar_unlocked@plt+0xda0>
   11af4:	ldr	r0, [sp, #44]	; 0x2c
   11af8:	bl	10ca0 <strlen@plt>
   11afc:	str	r0, [sp, #36]	; 0x24
   11b00:	ldr	r3, [sp, #36]	; 0x24
   11b04:	cmp	r3, r7
   11b08:	bcc	11b88 <putchar_unlocked@plt+0xe28>
   11b0c:	ldr	r3, [sp, #44]	; 0x2c
   11b10:	ldr	r0, [sp, #28]
   11b14:	ldr	r2, [sp, #32]
   11b18:	ldr	r1, [sp, #40]	; 0x28
   11b1c:	add	r0, r3, r0
   11b20:	bl	10bbc <memcmp@plt>
   11b24:	cmp	r0, #0
   11b28:	bne	11b88 <putchar_unlocked@plt+0xe28>
   11b2c:	cmp	r6, #0
   11b30:	beq	11b90 <putchar_unlocked@plt+0xe30>
   11b34:	str	r6, [sp, #24]
   11b38:	ldr	r3, [sp, #24]
   11b3c:	ldr	r2, [sp, #44]	; 0x2c
   11b40:	cmp	sl, #2
   11b44:	movne	r3, #0
   11b48:	andeq	r3, r3, #1
   11b4c:	cmp	r3, #0
   11b50:	ldr	r3, [sp, #160]	; 0xa0
   11b54:	movne	sl, #4
   11b58:	str	r3, [sp, #16]
   11b5c:	ldr	r3, [sp, #156]	; 0x9c
   11b60:	str	sl, [sp]
   11b64:	str	r3, [sp, #12]
   11b68:	mov	r3, #0
   11b6c:	str	r3, [sp, #8]
   11b70:	ldr	r3, [sp, #148]	; 0x94
   11b74:	mov	r1, r9
   11b78:	bic	r3, r3, #2
   11b7c:	str	r3, [sp, #4]
   11b80:	ldr	r3, [sp, #36]	; 0x24
   11b84:	b	11934 <putchar_unlocked@plt+0xbd4>
   11b88:	mov	r3, #0
   11b8c:	str	r3, [sp, #64]	; 0x40
   11b90:	ldr	r2, [sp, #28]
   11b94:	ldr	r3, [sp, #44]	; 0x2c
   11b98:	add	r3, r3, r2
   11b9c:	str	r3, [sp, #80]	; 0x50
   11ba0:	ldr	r3, [sp, #44]	; 0x2c
   11ba4:	ldrb	r7, [r3, r2]
   11ba8:	cmp	r7, #58	; 0x3a
   11bac:	bhi	11d14 <putchar_unlocked@plt+0xfb4>
   11bb0:	cmp	r7, #43	; 0x2b
   11bb4:	bcs	11d68 <putchar_unlocked@plt+0x1008>
   11bb8:	cmp	r7, #32
   11bbc:	beq	11dc0 <putchar_unlocked@plt+0x1060>
   11bc0:	bhi	11c6c <putchar_unlocked@plt+0xf0c>
   11bc4:	cmp	r7, #9
   11bc8:	beq	12074 <putchar_unlocked@plt+0x1314>
   11bcc:	bhi	11c30 <putchar_unlocked@plt+0xed0>
   11bd0:	cmp	r7, #7
   11bd4:	beq	12120 <putchar_unlocked@plt+0x13c0>
   11bd8:	bhi	11ddc <putchar_unlocked@plt+0x107c>
   11bdc:	cmp	r7, #0
   11be0:	beq	11df8 <putchar_unlocked@plt+0x1098>
   11be4:	ldr	r3, [sp, #76]	; 0x4c
   11be8:	cmp	r3, #1
   11bec:	bne	12164 <putchar_unlocked@plt+0x1404>
   11bf0:	bl	10c88 <__ctype_b_loc@plt>
   11bf4:	sxth	r3, r7
   11bf8:	lsl	r3, r3, #1
   11bfc:	ldr	r2, [r0]
   11c00:	ldrh	r5, [r2, r3]
   11c04:	ldr	r3, [sp, #76]	; 0x4c
   11c08:	str	r3, [sp, #56]	; 0x38
   11c0c:	lsr	r5, r5, #14
   11c10:	and	r5, r5, #1
   11c14:	ldr	r3, [sp, #24]
   11c18:	eor	fp, r5, #1
   11c1c:	and	fp, fp, r3
   11c20:	ands	fp, fp, #255	; 0xff
   11c24:	beq	11fac <putchar_unlocked@plt+0x124c>
   11c28:	mov	r5, #0
   11c2c:	b	12210 <putchar_unlocked@plt+0x14b0>
   11c30:	cmp	r7, #11
   11c34:	beq	1207c <putchar_unlocked@plt+0x131c>
   11c38:	bcc	12118 <putchar_unlocked@plt+0x13b8>
   11c3c:	cmp	r7, #12
   11c40:	beq	12128 <putchar_unlocked@plt+0x13c8>
   11c44:	cmp	r7, #13
   11c48:	moveq	r3, #114	; 0x72
   11c4c:	bne	11be4 <putchar_unlocked@plt+0xe84>
   11c50:	cmp	sl, #2
   11c54:	movne	r2, #0
   11c58:	andeq	r2, r6, #1
   11c5c:	cmp	r2, #0
   11c60:	beq	11de0 <putchar_unlocked@plt+0x1080>
   11c64:	mov	sl, #2
   11c68:	b	11b38 <putchar_unlocked@plt+0xdd8>
   11c6c:	cmp	r7, #37	; 0x25
   11c70:	beq	11d68 <putchar_unlocked@plt+0x1008>
   11c74:	bhi	11c88 <putchar_unlocked@plt+0xf28>
   11c78:	cmp	r7, #35	; 0x23
   11c7c:	beq	11db4 <putchar_unlocked@plt+0x1054>
   11c80:	mov	r5, #0
   11c84:	b	11dc4 <putchar_unlocked@plt+0x1064>
   11c88:	cmp	r7, #39	; 0x27
   11c8c:	bne	11c80 <putchar_unlocked@plt+0xf20>
   11c90:	cmp	sl, #2
   11c94:	ldrne	r5, [sp, #52]	; 0x34
   11c98:	movne	r3, r5
   11c9c:	strne	r3, [sp, #68]	; 0x44
   11ca0:	bne	11d6c <putchar_unlocked@plt+0x100c>
   11ca4:	cmp	r6, #0
   11ca8:	bne	11b38 <putchar_unlocked@plt+0xdd8>
   11cac:	ldr	r2, [sp, #60]	; 0x3c
   11cb0:	adds	r3, r9, #0
   11cb4:	movne	r3, #1
   11cb8:	cmp	r2, #0
   11cbc:	movne	r3, #0
   11cc0:	cmp	r3, #0
   11cc4:	strne	r9, [sp, #60]	; 0x3c
   11cc8:	movne	r9, #0
   11ccc:	bne	11cdc <putchar_unlocked@plt+0xf7c>
   11cd0:	cmp	r9, r4
   11cd4:	movhi	r3, #39	; 0x27
   11cd8:	strbhi	r3, [r8, r4]
   11cdc:	add	r3, r4, #1
   11ce0:	cmp	r3, r9
   11ce4:	movcc	r2, #92	; 0x5c
   11ce8:	strbcc	r2, [r8, r3]
   11cec:	add	r3, r4, #2
   11cf0:	cmp	r3, r9
   11cf4:	ldr	r5, [sp, #52]	; 0x34
   11cf8:	movcc	r2, #39	; 0x27
   11cfc:	strbcc	r2, [r8, r3]
   11d00:	add	r4, r4, #3
   11d04:	mov	fp, r6
   11d08:	str	r5, [sp, #68]	; 0x44
   11d0c:	str	r6, [sp, #48]	; 0x30
   11d10:	b	11fac <putchar_unlocked@plt+0x124c>
   11d14:	cmp	r7, #94	; 0x5e
   11d18:	beq	11c80 <putchar_unlocked@plt+0xf20>
   11d1c:	bhi	11d74 <putchar_unlocked@plt+0x1014>
   11d20:	cmp	r7, #90	; 0x5a
   11d24:	bhi	11d5c <putchar_unlocked@plt+0xffc>
   11d28:	cmp	r7, #65	; 0x41
   11d2c:	bcs	11d68 <putchar_unlocked@plt+0x1008>
   11d30:	cmp	r7, #62	; 0x3e
   11d34:	bls	11c80 <putchar_unlocked@plt+0xf20>
   11d38:	cmp	r7, #63	; 0x3f
   11d3c:	bne	11be4 <putchar_unlocked@plt+0xe84>
   11d40:	cmp	sl, #2
   11d44:	beq	11ee8 <putchar_unlocked@plt+0x1188>
   11d48:	cmp	sl, #5
   11d4c:	beq	11ef8 <putchar_unlocked@plt+0x1198>
   11d50:	mov	fp, #0
   11d54:	mov	r5, fp
   11d58:	b	11fac <putchar_unlocked@plt+0x124c>
   11d5c:	cmp	r7, #92	; 0x5c
   11d60:	beq	12084 <putchar_unlocked@plt+0x1324>
   11d64:	bls	11c80 <putchar_unlocked@plt+0xf20>
   11d68:	ldr	r5, [sp, #52]	; 0x34
   11d6c:	mov	fp, #0
   11d70:	b	11fac <putchar_unlocked@plt+0x124c>
   11d74:	cmp	r7, #122	; 0x7a
   11d78:	bhi	11d98 <putchar_unlocked@plt+0x1038>
   11d7c:	cmp	r7, #97	; 0x61
   11d80:	bcs	11d68 <putchar_unlocked@plt+0x1008>
   11d84:	cmp	r7, #95	; 0x5f
   11d88:	beq	11d68 <putchar_unlocked@plt+0x1008>
   11d8c:	cmp	r7, #96	; 0x60
   11d90:	bne	11be4 <putchar_unlocked@plt+0xe84>
   11d94:	b	11c80 <putchar_unlocked@plt+0xf20>
   11d98:	cmp	r7, #124	; 0x7c
   11d9c:	beq	11c80 <putchar_unlocked@plt+0xf20>
   11da0:	bcc	12130 <putchar_unlocked@plt+0x13d0>
   11da4:	cmp	r7, #125	; 0x7d
   11da8:	beq	12130 <putchar_unlocked@plt+0x13d0>
   11dac:	cmp	r7, #126	; 0x7e
   11db0:	bne	11be4 <putchar_unlocked@plt+0xe84>
   11db4:	ldr	r3, [sp, #28]
   11db8:	cmp	r3, #0
   11dbc:	bne	11ef0 <putchar_unlocked@plt+0x1190>
   11dc0:	ldr	r5, [sp, #52]	; 0x34
   11dc4:	cmp	sl, #2
   11dc8:	movne	fp, #0
   11dcc:	andeq	fp, r6, #1
   11dd0:	cmp	fp, #0
   11dd4:	beq	11fac <putchar_unlocked@plt+0x124c>
   11dd8:	b	11c64 <putchar_unlocked@plt+0xf04>
   11ddc:	mov	r3, #98	; 0x62
   11de0:	ldr	r2, [sp, #24]
   11de4:	cmp	r2, #0
   11de8:	beq	11ef0 <putchar_unlocked@plt+0x1190>
   11dec:	mov	r7, r3
   11df0:	mov	r5, #0
   11df4:	b	12004 <putchar_unlocked@plt+0x12a4>
   11df8:	ldr	r3, [sp, #24]
   11dfc:	cmp	r3, #0
   11e00:	beq	11ecc <putchar_unlocked@plt+0x116c>
   11e04:	cmp	r6, #0
   11e08:	bne	11b34 <putchar_unlocked@plt+0xdd4>
   11e0c:	ldr	r3, [sp, #48]	; 0x30
   11e10:	eor	r2, r3, #1
   11e14:	cmp	sl, #2
   11e18:	movne	r2, #0
   11e1c:	andeq	r2, r2, #1
   11e20:	cmp	r2, #0
   11e24:	moveq	r3, r4
   11e28:	beq	11e60 <putchar_unlocked@plt+0x1100>
   11e2c:	cmp	r9, r4
   11e30:	movhi	r3, #39	; 0x27
   11e34:	strbhi	r3, [r8, r4]
   11e38:	add	r3, r4, #1
   11e3c:	cmp	r9, r3
   11e40:	movhi	r1, #36	; 0x24
   11e44:	strbhi	r1, [r8, r3]
   11e48:	add	r3, r4, #2
   11e4c:	cmp	r9, r3
   11e50:	movhi	r1, #39	; 0x27
   11e54:	strbhi	r1, [r8, r3]
   11e58:	add	r3, r4, #3
   11e5c:	str	r2, [sp, #48]	; 0x30
   11e60:	cmp	r9, r3
   11e64:	movhi	r2, #92	; 0x5c
   11e68:	strbhi	r2, [r8, r3]
   11e6c:	cmp	fp, #0
   11e70:	add	r4, r3, #1
   11e74:	beq	12404 <putchar_unlocked@plt+0x16a4>
   11e78:	ldr	r2, [sp, #28]
   11e7c:	ldr	r1, [sp, #36]	; 0x24
   11e80:	add	r2, r2, #1
   11e84:	cmp	r1, r2
   11e88:	bls	11ec4 <putchar_unlocked@plt+0x1164>
   11e8c:	ldr	r1, [sp, #44]	; 0x2c
   11e90:	mov	r7, #48	; 0x30
   11e94:	ldrb	r2, [r1, r2]
   11e98:	sub	r2, r2, #48	; 0x30
   11e9c:	cmp	r2, #9
   11ea0:	movhi	r5, r6
   11ea4:	bhi	11fac <putchar_unlocked@plt+0x124c>
   11ea8:	cmp	r9, r4
   11eac:	add	r2, r3, #2
   11eb0:	strbhi	r7, [r8, r4]
   11eb4:	cmp	r9, r2
   11eb8:	add	r4, r3, #3
   11ebc:	movhi	r1, #48	; 0x30
   11ec0:	strbhi	r1, [r8, r2]
   11ec4:	mov	r5, r6
   11ec8:	b	1240c <putchar_unlocked@plt+0x16ac>
   11ecc:	ldr	r3, [sp, #148]	; 0x94
   11ed0:	tst	r3, #1
   11ed4:	ldreq	r5, [sp, #24]
   11ed8:	beq	12418 <putchar_unlocked@plt+0x16b8>
   11edc:	ldr	r3, [sp, #28]
   11ee0:	add	r3, r3, #1
   11ee4:	b	11884 <putchar_unlocked@plt+0xb24>
   11ee8:	cmp	r6, #0
   11eec:	bne	11b38 <putchar_unlocked@plt+0xdd8>
   11ef0:	mov	r5, #0
   11ef4:	b	11d6c <putchar_unlocked@plt+0x100c>
   11ef8:	ldr	r3, [sp, #148]	; 0x94
   11efc:	tst	r3, #4
   11f00:	beq	11ef0 <putchar_unlocked@plt+0x1190>
   11f04:	ldr	r3, [sp, #28]
   11f08:	add	r2, r3, #2
   11f0c:	ldr	r3, [sp, #36]	; 0x24
   11f10:	cmp	r3, r2
   11f14:	bls	11ef0 <putchar_unlocked@plt+0x1190>
   11f18:	ldr	r3, [sp, #44]	; 0x2c
   11f1c:	ldr	r1, [sp, #28]
   11f20:	add	r3, r3, r1
   11f24:	ldrb	r0, [r3, #1]
   11f28:	cmp	r0, #63	; 0x3f
   11f2c:	bne	11ef0 <putchar_unlocked@plt+0x1190>
   11f30:	ldr	r3, [sp, #44]	; 0x2c
   11f34:	ldrb	r1, [r3, r2]
   11f38:	sub	r3, r1, #33	; 0x21
   11f3c:	uxtb	r3, r3
   11f40:	cmp	r3, #29
   11f44:	bhi	12414 <putchar_unlocked@plt+0x16b4>
   11f48:	mov	ip, #1
   11f4c:	ldr	r5, [pc, #1428]	; 124e8 <putchar_unlocked@plt+0x1788>
   11f50:	ands	r5, r5, ip, lsl r3
   11f54:	beq	11d6c <putchar_unlocked@plt+0x100c>
   11f58:	cmp	r6, #0
   11f5c:	bne	11b38 <putchar_unlocked@plt+0xdd8>
   11f60:	add	r3, r4, #1
   11f64:	cmp	r9, r4
   11f68:	strbhi	r0, [r8, r4]
   11f6c:	cmp	r9, r3
   11f70:	movhi	r0, #34	; 0x22
   11f74:	strbhi	r0, [r8, r3]
   11f78:	add	r3, r4, #2
   11f7c:	cmp	r9, r3
   11f80:	movhi	r0, #34	; 0x22
   11f84:	strbhi	r0, [r8, r3]
   11f88:	add	r3, r4, #3
   11f8c:	cmp	r9, r3
   11f90:	add	r4, r4, #4
   11f94:	mov	r5, r6
   11f98:	mov	fp, r6
   11f9c:	mov	r7, r1
   11fa0:	movhi	r0, #63	; 0x3f
   11fa4:	strbhi	r0, [r8, r3]
   11fa8:	str	r2, [sp, #28]
   11fac:	ldr	r3, [sp, #24]
   11fb0:	eor	r3, r3, #1
   11fb4:	cmp	sl, #2
   11fb8:	orreq	r3, r3, #1
   11fbc:	eor	r3, r3, #1
   11fc0:	orr	r3, r6, r3
   11fc4:	tst	r3, #255	; 0xff
   11fc8:	beq	11ff8 <putchar_unlocked@plt+0x1298>
   11fcc:	ldr	r3, [sp, #152]	; 0x98
   11fd0:	cmp	r3, #0
   11fd4:	beq	11ff8 <putchar_unlocked@plt+0x1298>
   11fd8:	lsr	r2, r7, #5
   11fdc:	ldr	r1, [sp, #152]	; 0x98
   11fe0:	uxtb	r2, r2
   11fe4:	and	r3, r7, #31
   11fe8:	ldr	r2, [r1, r2, lsl #2]
   11fec:	lsr	r3, r2, r3
   11ff0:	tst	r3, #1
   11ff4:	bne	12004 <putchar_unlocked@plt+0x12a4>
   11ff8:	ldr	r3, [sp, #64]	; 0x40
   11ffc:	cmp	r3, #0
   12000:	beq	1209c <putchar_unlocked@plt+0x133c>
   12004:	cmp	r6, #0
   12008:	bne	11b38 <putchar_unlocked@plt+0xdd8>
   1200c:	ldr	r3, [sp, #48]	; 0x30
   12010:	eor	r3, r3, #1
   12014:	cmp	sl, #2
   12018:	movne	r3, #0
   1201c:	andeq	r3, r3, #1
   12020:	cmp	r3, #0
   12024:	beq	1205c <putchar_unlocked@plt+0x12fc>
   12028:	cmp	r9, r4
   1202c:	movhi	r2, #39	; 0x27
   12030:	strbhi	r2, [r8, r4]
   12034:	add	r2, r4, #1
   12038:	cmp	r9, r2
   1203c:	movhi	r1, #36	; 0x24
   12040:	strbhi	r1, [r8, r2]
   12044:	add	r2, r4, #2
   12048:	cmp	r9, r2
   1204c:	add	r4, r4, #3
   12050:	movhi	r1, #39	; 0x27
   12054:	strbhi	r1, [r8, r2]
   12058:	str	r3, [sp, #48]	; 0x30
   1205c:	cmp	r9, r4
   12060:	movhi	r3, #92	; 0x5c
   12064:	strbhi	r3, [r8, r4]
   12068:	ldr	fp, [sp, #52]	; 0x34
   1206c:	add	r4, r4, #1
   12070:	b	1209c <putchar_unlocked@plt+0x133c>
   12074:	mov	r3, #116	; 0x74
   12078:	b	11c50 <putchar_unlocked@plt+0xef0>
   1207c:	mov	r3, #118	; 0x76
   12080:	b	11de0 <putchar_unlocked@plt+0x1080>
   12084:	cmp	sl, #2
   12088:	bne	120f8 <putchar_unlocked@plt+0x1398>
   1208c:	cmp	r6, #0
   12090:	bne	11b38 <putchar_unlocked@plt+0xdd8>
   12094:	mov	r5, r6
   12098:	mov	fp, r6
   1209c:	ldr	r3, [sp, #48]	; 0x30
   120a0:	eor	fp, fp, #1
   120a4:	and	fp, fp, r3
   120a8:	tst	fp, #255	; 0xff
   120ac:	beq	120d8 <putchar_unlocked@plt+0x1378>
   120b0:	cmp	r9, r4
   120b4:	movhi	r3, #39	; 0x27
   120b8:	strbhi	r3, [r8, r4]
   120bc:	add	r3, r4, #1
   120c0:	cmp	r9, r3
   120c4:	movhi	r2, #39	; 0x27
   120c8:	add	r4, r4, #2
   120cc:	strbhi	r2, [r8, r3]
   120d0:	mov	r3, #0
   120d4:	str	r3, [sp, #48]	; 0x30
   120d8:	cmp	r9, r4
   120dc:	strbhi	r7, [r8, r4]
   120e0:	ldr	r3, [sp, #72]	; 0x48
   120e4:	cmp	r5, #0
   120e8:	moveq	r3, #0
   120ec:	add	r4, r4, #1
   120f0:	str	r3, [sp, #72]	; 0x48
   120f4:	b	11edc <putchar_unlocked@plt+0x117c>
   120f8:	ldr	r3, [sp, #24]
   120fc:	and	r3, r3, r6
   12100:	tst	r5, r3
   12104:	moveq	r3, r7
   12108:	beq	11c50 <putchar_unlocked@plt+0xef0>
   1210c:	mov	fp, #0
   12110:	mov	r5, fp
   12114:	b	1209c <putchar_unlocked@plt+0x133c>
   12118:	mov	r3, #110	; 0x6e
   1211c:	b	11c50 <putchar_unlocked@plt+0xef0>
   12120:	mov	r3, #97	; 0x61
   12124:	b	11de0 <putchar_unlocked@plt+0x1080>
   12128:	mov	r3, #102	; 0x66
   1212c:	b	11de0 <putchar_unlocked@plt+0x1080>
   12130:	ldr	r3, [sp, #36]	; 0x24
   12134:	cmn	r3, #1
   12138:	bne	12158 <putchar_unlocked@plt+0x13f8>
   1213c:	ldr	r3, [sp, #44]	; 0x2c
   12140:	ldrb	r3, [r3, #1]
   12144:	adds	r3, r3, #0
   12148:	movne	r3, #1
   1214c:	cmp	r3, #0
   12150:	bne	11ef0 <putchar_unlocked@plt+0x1190>
   12154:	b	11db4 <putchar_unlocked@plt+0x1054>
   12158:	ldr	r3, [sp, #36]	; 0x24
   1215c:	subs	r3, r3, #1
   12160:	b	12148 <putchar_unlocked@plt+0x13e8>
   12164:	mov	r3, #0
   12168:	str	r3, [sp, #96]	; 0x60
   1216c:	str	r3, [sp, #100]	; 0x64
   12170:	ldr	r3, [sp, #36]	; 0x24
   12174:	cmn	r3, #1
   12178:	bne	12188 <putchar_unlocked@plt+0x1428>
   1217c:	ldr	r0, [sp, #44]	; 0x2c
   12180:	bl	10ca0 <strlen@plt>
   12184:	str	r0, [sp, #36]	; 0x24
   12188:	ldr	r5, [sp, #52]	; 0x34
   1218c:	mov	r3, #0
   12190:	str	r3, [sp, #56]	; 0x38
   12194:	ldr	r3, [sp, #28]
   12198:	ldr	r2, [sp, #56]	; 0x38
   1219c:	ldr	r1, [sp, #36]	; 0x24
   121a0:	add	r2, r3, r2
   121a4:	ldr	r3, [sp, #44]	; 0x2c
   121a8:	add	r0, sp, #92	; 0x5c
   121ac:	add	fp, r3, r2
   121b0:	sub	r2, r1, r2
   121b4:	add	r3, sp, #96	; 0x60
   121b8:	mov	r1, fp
   121bc:	bl	13988 <putchar_unlocked@plt+0x2c28>
   121c0:	subs	r2, r0, #0
   121c4:	beq	12204 <putchar_unlocked@plt+0x14a4>
   121c8:	cmn	r2, #1
   121cc:	beq	123dc <putchar_unlocked@plt+0x167c>
   121d0:	cmn	r2, #2
   121d4:	bne	1234c <putchar_unlocked@plt+0x15ec>
   121d8:	ldr	r2, [sp, #56]	; 0x38
   121dc:	ldr	r3, [sp, #28]
   121e0:	add	r3, r3, r2
   121e4:	ldr	r2, [sp, #36]	; 0x24
   121e8:	cmp	r2, r3
   121ec:	bls	123dc <putchar_unlocked@plt+0x167c>
   121f0:	ldr	r3, [sp, #80]	; 0x50
   121f4:	ldr	r2, [sp, #56]	; 0x38
   121f8:	ldrb	r5, [r3, r2]
   121fc:	cmp	r5, #0
   12200:	bne	1233c <putchar_unlocked@plt+0x15dc>
   12204:	ldr	r3, [sp, #56]	; 0x38
   12208:	cmp	r3, #1
   1220c:	bls	11c14 <putchar_unlocked@plt+0xeb4>
   12210:	ldr	r2, [sp, #56]	; 0x38
   12214:	ldr	r3, [sp, #28]
   12218:	mov	fp, #0
   1221c:	add	r3, r3, r2
   12220:	ldr	r2, [sp, #24]
   12224:	str	r3, [sp, #52]	; 0x34
   12228:	eor	r3, r5, #1
   1222c:	and	r3, r3, r2
   12230:	mov	ip, #92	; 0x5c
   12234:	uxtb	r3, r3
   12238:	mov	r2, #39	; 0x27
   1223c:	cmp	r3, #0
   12240:	beq	123e4 <putchar_unlocked@plt+0x1684>
   12244:	cmp	r6, #0
   12248:	bne	11b34 <putchar_unlocked@plt+0xdd4>
   1224c:	ldr	r1, [sp, #48]	; 0x30
   12250:	eor	r1, r1, #1
   12254:	cmp	sl, #2
   12258:	movne	r1, #0
   1225c:	andeq	r1, r1, #1
   12260:	cmp	r1, #0
   12264:	beq	12294 <putchar_unlocked@plt+0x1534>
   12268:	add	r0, r4, #1
   1226c:	cmp	r9, r4
   12270:	strbhi	r2, [r8, r4]
   12274:	cmp	r9, r0
   12278:	movhi	lr, #36	; 0x24
   1227c:	strbhi	lr, [r8, r0]
   12280:	add	r0, r4, #2
   12284:	add	r4, r4, #3
   12288:	cmp	r9, r0
   1228c:	strbhi	r2, [r8, r0]
   12290:	str	r1, [sp, #48]	; 0x30
   12294:	add	r0, r4, #1
   12298:	cmp	r9, r4
   1229c:	strbhi	ip, [r8, r4]
   122a0:	cmp	r9, r0
   122a4:	lsrhi	r1, r7, #6
   122a8:	addhi	r1, r1, #48	; 0x30
   122ac:	strbhi	r1, [r8, r0]
   122b0:	add	r0, r4, #2
   122b4:	cmp	r9, r0
   122b8:	lsrhi	r1, r7, #3
   122bc:	and	r7, r7, #7
   122c0:	andhi	r1, r1, #7
   122c4:	add	r4, r4, #3
   122c8:	add	r7, r7, #48	; 0x30
   122cc:	mov	fp, r3
   122d0:	addhi	r1, r1, #48	; 0x30
   122d4:	strbhi	r1, [r8, r0]
   122d8:	ldr	r1, [sp, #28]
   122dc:	ldr	r0, [sp, #52]	; 0x34
   122e0:	add	r1, r1, #1
   122e4:	cmp	r0, r1
   122e8:	bls	1209c <putchar_unlocked@plt+0x133c>
   122ec:	ldr	lr, [sp, #48]	; 0x30
   122f0:	eor	r0, fp, #1
   122f4:	and	r0, r0, lr
   122f8:	tst	r0, #255	; 0xff
   122fc:	beq	12320 <putchar_unlocked@plt+0x15c0>
   12300:	add	r0, r4, #1
   12304:	cmp	r9, r4
   12308:	strbhi	r2, [r8, r4]
   1230c:	cmp	r9, r0
   12310:	add	r4, r4, #2
   12314:	strbhi	r2, [r8, r0]
   12318:	mov	r0, #0
   1231c:	str	r0, [sp, #48]	; 0x30
   12320:	ldr	r0, [sp, #44]	; 0x2c
   12324:	cmp	r9, r4
   12328:	strbhi	r7, [r8, r4]
   1232c:	str	r1, [sp, #28]
   12330:	add	r4, r4, #1
   12334:	ldrb	r7, [r0, r1]
   12338:	b	1223c <putchar_unlocked@plt+0x14dc>
   1233c:	ldr	r3, [sp, #56]	; 0x38
   12340:	add	r3, r3, #1
   12344:	str	r3, [sp, #56]	; 0x38
   12348:	b	121d8 <putchar_unlocked@plt+0x1478>
   1234c:	cmp	sl, #2
   12350:	movne	r3, #0
   12354:	andeq	r3, r6, #1
   12358:	cmp	r3, #0
   1235c:	movne	r1, #1
   12360:	bne	123bc <putchar_unlocked@plt+0x165c>
   12364:	ldr	r0, [sp, #92]	; 0x5c
   12368:	str	r2, [sp, #84]	; 0x54
   1236c:	bl	10bf8 <iswprint@plt>
   12370:	ldr	r3, [sp, #56]	; 0x38
   12374:	ldr	r2, [sp, #84]	; 0x54
   12378:	add	r3, r3, r2
   1237c:	str	r3, [sp, #56]	; 0x38
   12380:	cmp	r0, #0
   12384:	add	r0, sp, #96	; 0x60
   12388:	moveq	r5, #0
   1238c:	bl	10bb0 <mbsinit@plt>
   12390:	cmp	r0, #0
   12394:	beq	12194 <putchar_unlocked@plt+0x1434>
   12398:	b	12204 <putchar_unlocked@plt+0x14a4>
   1239c:	ldrb	r3, [fp, r1]
   123a0:	cmp	r3, #94	; 0x5e
   123a4:	beq	11c64 <putchar_unlocked@plt+0xf04>
   123a8:	bhi	123c8 <putchar_unlocked@plt+0x1668>
   123ac:	sub	r3, r3, #91	; 0x5b
   123b0:	cmp	r3, #1
   123b4:	bls	11c64 <putchar_unlocked@plt+0xf04>
   123b8:	add	r1, r1, #1
   123bc:	cmp	r1, r2
   123c0:	bne	1239c <putchar_unlocked@plt+0x163c>
   123c4:	b	12364 <putchar_unlocked@plt+0x1604>
   123c8:	cmp	r3, #96	; 0x60
   123cc:	beq	11c64 <putchar_unlocked@plt+0xf04>
   123d0:	cmp	r3, #124	; 0x7c
   123d4:	bne	123b8 <putchar_unlocked@plt+0x1658>
   123d8:	b	11c64 <putchar_unlocked@plt+0xf04>
   123dc:	mov	r5, #0
   123e0:	b	12204 <putchar_unlocked@plt+0x14a4>
   123e4:	ldr	r1, [sp, #64]	; 0x40
   123e8:	cmp	r1, #0
   123ec:	beq	122d8 <putchar_unlocked@plt+0x1578>
   123f0:	cmp	r9, r4
   123f4:	strbhi	ip, [r8, r4]
   123f8:	str	r3, [sp, #64]	; 0x40
   123fc:	add	r4, r4, #1
   12400:	b	122d8 <putchar_unlocked@plt+0x1578>
   12404:	mov	r5, fp
   12408:	ldr	fp, [sp, #24]
   1240c:	mov	r7, #48	; 0x30
   12410:	b	11fac <putchar_unlocked@plt+0x124c>
   12414:	mov	r5, #0
   12418:	mov	fp, r5
   1241c:	b	11fac <putchar_unlocked@plt+0x124c>
   12420:	ldr	r3, [sp, #36]	; 0x24
   12424:	ldr	r2, [sp, #28]
   12428:	subs	r3, r3, r2
   1242c:	movne	r3, #1
   12430:	b	118a8 <putchar_unlocked@plt+0xb48>
   12434:	ldr	r3, [sp, #60]	; 0x3c
   12438:	clz	r7, r9
   1243c:	cmp	r3, #0
   12440:	lsr	r7, r7, #5
   12444:	moveq	r7, #0
   12448:	cmp	r7, #0
   1244c:	mov	r5, r3
   12450:	bne	11808 <putchar_unlocked@plt+0xaa8>
   12454:	ldr	r3, [sp, #68]	; 0x44
   12458:	ldr	r2, [sp, #40]	; 0x28
   1245c:	cmp	r2, #0
   12460:	moveq	r3, #0
   12464:	andne	r3, r3, #1
   12468:	cmp	r3, #0
   1246c:	movne	r3, r2
   12470:	subne	r2, r3, #1
   12474:	bne	124a4 <putchar_unlocked@plt+0x1744>
   12478:	cmp	r9, r4
   1247c:	movhi	r3, #0
   12480:	strbhi	r3, [r8, r4]
   12484:	mov	r0, r4
   12488:	add	sp, sp, #108	; 0x6c
   1248c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12490:	mov	r3, r2
   12494:	b	12458 <putchar_unlocked@plt+0x16f8>
   12498:	cmp	r9, r4
   1249c:	strbhi	r3, [r8, r4]
   124a0:	add	r4, r4, #1
   124a4:	ldrb	r3, [r2, #1]!
   124a8:	cmp	r3, #0
   124ac:	bne	12498 <putchar_unlocked@plt+0x1738>
   124b0:	b	12478 <putchar_unlocked@plt+0x1718>
   124b4:	ldr	r3, [pc, #32]	; 124dc <putchar_unlocked@plt+0x177c>
   124b8:	mov	r6, #1
   124bc:	str	r6, [sp, #24]
   124c0:	str	r6, [sp, #32]
   124c4:	str	r3, [sp, #40]	; 0x28
   124c8:	mov	r4, #0
   124cc:	mov	sl, #5
   124d0:	b	11878 <putchar_unlocked@plt+0xb18>
   124d4:	mov	r6, #1
   124d8:	b	11a6c <putchar_unlocked@plt+0xd0c>
   124dc:	strdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   124e0:	andeq	r4, r1, r3, lsl #12
   124e4:	andeq	r4, r1, r1, lsl #12
   124e8:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   124ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124f0:	sub	sp, sp, #52	; 0x34
   124f4:	mov	r6, r0
   124f8:	mov	r5, r3
   124fc:	mov	r8, r1
   12500:	mov	r9, r2
   12504:	bl	10cac <__errno_location@plt>
   12508:	ldr	r7, [pc, #380]	; 1268c <putchar_unlocked@plt+0x192c>
   1250c:	cmn	r6, #-2147483647	; 0x80000001
   12510:	ldr	r4, [r7]
   12514:	ldr	r3, [r0]
   12518:	str	r0, [sp, #24]
   1251c:	str	r3, [sp, #32]
   12520:	movne	r3, #0
   12524:	moveq	r3, #1
   12528:	orrs	r3, r3, r6, lsr #31
   1252c:	beq	12534 <putchar_unlocked@plt+0x17d4>
   12530:	bl	10d54 <abort@plt>
   12534:	ldr	r2, [r7, #4]
   12538:	cmp	r6, r2
   1253c:	blt	125ac <putchar_unlocked@plt+0x184c>
   12540:	add	r1, sp, #48	; 0x30
   12544:	add	sl, r7, #8
   12548:	str	r2, [r1, #-4]!
   1254c:	cmp	r4, sl
   12550:	mov	r3, #8
   12554:	sub	r2, r6, r2
   12558:	movne	r0, r4
   1255c:	str	r3, [sp]
   12560:	add	r2, r2, #1
   12564:	mvn	r3, #-2147483648	; 0x80000000
   12568:	moveq	r0, #0
   1256c:	bl	13280 <putchar_unlocked@plt+0x2520>
   12570:	cmp	r4, sl
   12574:	ldr	r2, [sp, #44]	; 0x2c
   12578:	mov	fp, r0
   1257c:	str	r0, [r7]
   12580:	ldmeq	r4, {r0, r1}
   12584:	mov	r4, fp
   12588:	stmeq	fp, {r0, r1}
   1258c:	ldr	r0, [r7, #4]
   12590:	mov	r1, #0
   12594:	sub	r2, r2, r0
   12598:	add	r0, fp, r0, lsl #3
   1259c:	lsl	r2, r2, #3
   125a0:	bl	10cc4 <memset@plt>
   125a4:	ldr	r3, [sp, #44]	; 0x2c
   125a8:	str	r3, [r7, #4]
   125ac:	ldr	r3, [r5, #4]
   125b0:	add	sl, r4, r6, lsl #3
   125b4:	orr	r3, r3, #1
   125b8:	str	r3, [sp, #28]
   125bc:	add	r3, r5, #8
   125c0:	str	r3, [sp, #36]	; 0x24
   125c4:	ldr	r3, [r5, #44]	; 0x2c
   125c8:	ldr	fp, [r4, r6, lsl #3]
   125cc:	ldr	r7, [sl, #4]
   125d0:	str	r3, [sp, #16]
   125d4:	ldr	r3, [r5, #40]	; 0x28
   125d8:	mov	r2, r8
   125dc:	str	r3, [sp, #12]
   125e0:	add	r3, r5, #8
   125e4:	str	r3, [sp, #8]
   125e8:	ldr	r3, [sp, #28]
   125ec:	mov	r1, fp
   125f0:	str	r3, [sp, #4]
   125f4:	ldr	r3, [r5]
   125f8:	mov	r0, r7
   125fc:	str	r3, [sp]
   12600:	mov	r3, r9
   12604:	bl	117b8 <putchar_unlocked@plt+0xa58>
   12608:	cmp	fp, r0
   1260c:	bhi	12674 <putchar_unlocked@plt+0x1914>
   12610:	ldr	r3, [pc, #120]	; 12690 <putchar_unlocked@plt+0x1930>
   12614:	add	fp, r0, #1
   12618:	cmp	r7, r3
   1261c:	str	fp, [r4, r6, lsl #3]
   12620:	beq	1262c <putchar_unlocked@plt+0x18cc>
   12624:	mov	r0, r7
   12628:	bl	11574 <putchar_unlocked@plt+0x814>
   1262c:	mov	r0, fp
   12630:	bl	13138 <putchar_unlocked@plt+0x23d8>
   12634:	ldr	r3, [r5, #44]	; 0x2c
   12638:	mov	r2, r8
   1263c:	mov	r1, fp
   12640:	str	r0, [sl, #4]
   12644:	str	r3, [sp, #16]
   12648:	ldr	r3, [r5, #40]	; 0x28
   1264c:	mov	r7, r0
   12650:	str	r3, [sp, #12]
   12654:	add	r3, r5, #8
   12658:	str	r3, [sp, #8]
   1265c:	ldr	r3, [sp, #28]
   12660:	str	r3, [sp, #4]
   12664:	ldr	r3, [r5]
   12668:	str	r3, [sp]
   1266c:	mov	r3, r9
   12670:	bl	117b8 <putchar_unlocked@plt+0xa58>
   12674:	ldr	r3, [sp, #24]
   12678:	ldr	r2, [sp, #32]
   1267c:	mov	r0, r7
   12680:	str	r2, [r3]
   12684:	add	sp, sp, #52	; 0x34
   12688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1268c:	ldrdeq	r5, [r2], -r4
   12690:	andeq	r5, r2, r4, asr #2
   12694:	push	{r4, r5, r6, lr}
   12698:	mov	r5, r0
   1269c:	bl	10cac <__errno_location@plt>
   126a0:	cmp	r5, #0
   126a4:	mov	r1, #48	; 0x30
   126a8:	ldr	r6, [r0]
   126ac:	mov	r4, r0
   126b0:	ldr	r0, [pc, #12]	; 126c4 <putchar_unlocked@plt+0x1964>
   126b4:	movne	r0, r5
   126b8:	bl	13514 <putchar_unlocked@plt+0x27b4>
   126bc:	str	r6, [r4]
   126c0:	pop	{r4, r5, r6, pc}
   126c4:	andeq	r5, r2, r4, asr #4
   126c8:	ldr	r3, [pc, #12]	; 126dc <putchar_unlocked@plt+0x197c>
   126cc:	cmp	r0, #0
   126d0:	moveq	r0, r3
   126d4:	ldr	r0, [r0]
   126d8:	bx	lr
   126dc:	andeq	r5, r2, r4, asr #4
   126e0:	ldr	r3, [pc, #12]	; 126f4 <putchar_unlocked@plt+0x1994>
   126e4:	cmp	r0, #0
   126e8:	moveq	r0, r3
   126ec:	str	r1, [r0]
   126f0:	bx	lr
   126f4:	andeq	r5, r2, r4, asr #4
   126f8:	ldr	r3, [pc, #52]	; 12734 <putchar_unlocked@plt+0x19d4>
   126fc:	cmp	r0, #0
   12700:	moveq	r0, r3
   12704:	add	r3, r0, #8
   12708:	push	{lr}		; (str lr, [sp, #-4]!)
   1270c:	lsr	lr, r1, #5
   12710:	and	r1, r1, #31
   12714:	ldr	ip, [r3, lr, lsl #2]
   12718:	lsr	r0, ip, r1
   1271c:	eor	r2, r2, r0
   12720:	and	r2, r2, #1
   12724:	and	r0, r0, #1
   12728:	eor	r1, ip, r2, lsl r1
   1272c:	str	r1, [r3, lr, lsl #2]
   12730:	pop	{pc}		; (ldr pc, [sp], #4)
   12734:	andeq	r5, r2, r4, asr #4
   12738:	ldr	r3, [pc, #16]	; 12750 <putchar_unlocked@plt+0x19f0>
   1273c:	cmp	r0, #0
   12740:	movne	r3, r0
   12744:	ldr	r0, [r3, #4]
   12748:	str	r1, [r3, #4]
   1274c:	bx	lr
   12750:	andeq	r5, r2, r4, asr #4
   12754:	ldr	r3, [pc, #44]	; 12788 <putchar_unlocked@plt+0x1a28>
   12758:	cmp	r0, #0
   1275c:	moveq	r0, r3
   12760:	mov	r3, #10
   12764:	cmp	r2, #0
   12768:	cmpne	r1, #0
   1276c:	str	r3, [r0]
   12770:	bne	1277c <putchar_unlocked@plt+0x1a1c>
   12774:	push	{r4, lr}
   12778:	bl	10d54 <abort@plt>
   1277c:	str	r1, [r0, #40]	; 0x28
   12780:	str	r2, [r0, #44]	; 0x2c
   12784:	bx	lr
   12788:	andeq	r5, r2, r4, asr #4
   1278c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12790:	sub	sp, sp, #24
   12794:	mov	sl, r3
   12798:	ldr	r4, [sp, #56]	; 0x38
   1279c:	ldr	r3, [pc, #100]	; 12808 <putchar_unlocked@plt+0x1aa8>
   127a0:	cmp	r4, #0
   127a4:	moveq	r4, r3
   127a8:	mov	r7, r0
   127ac:	mov	r8, r1
   127b0:	mov	r9, r2
   127b4:	bl	10cac <__errno_location@plt>
   127b8:	ldr	r3, [r4, #44]	; 0x2c
   127bc:	mov	r2, r9
   127c0:	mov	r1, r8
   127c4:	ldr	r6, [r0]
   127c8:	str	r3, [sp, #16]
   127cc:	ldr	r3, [r4, #40]	; 0x28
   127d0:	mov	r5, r0
   127d4:	str	r3, [sp, #12]
   127d8:	add	r3, r4, #8
   127dc:	str	r3, [sp, #8]
   127e0:	ldr	r3, [r4, #4]
   127e4:	mov	r0, r7
   127e8:	str	r3, [sp, #4]
   127ec:	ldr	r3, [r4]
   127f0:	str	r3, [sp]
   127f4:	mov	r3, sl
   127f8:	bl	117b8 <putchar_unlocked@plt+0xa58>
   127fc:	str	r6, [r5]
   12800:	add	sp, sp, #24
   12804:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12808:	andeq	r5, r2, r4, asr #4
   1280c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12810:	cmp	r3, #0
   12814:	sub	sp, sp, #44	; 0x2c
   12818:	ldr	r4, [pc, #188]	; 128dc <putchar_unlocked@plt+0x1b7c>
   1281c:	mov	r6, r2
   12820:	movne	r4, r3
   12824:	mov	sl, r1
   12828:	mov	r9, r0
   1282c:	bl	10cac <__errno_location@plt>
   12830:	ldr	r5, [r4, #4]
   12834:	add	fp, r4, #8
   12838:	cmp	r6, #0
   1283c:	orreq	r5, r5, #1
   12840:	mov	r1, #0
   12844:	mov	r2, r9
   12848:	ldr	r3, [r0]
   1284c:	mov	r8, r0
   12850:	str	r3, [sp, #28]
   12854:	ldr	r3, [r4, #44]	; 0x2c
   12858:	mov	r0, r1
   1285c:	str	r3, [sp, #16]
   12860:	ldr	r3, [r4, #40]	; 0x28
   12864:	stmib	sp, {r5, fp}
   12868:	str	r3, [sp, #12]
   1286c:	ldr	r3, [r4]
   12870:	str	r3, [sp]
   12874:	mov	r3, sl
   12878:	bl	117b8 <putchar_unlocked@plt+0xa58>
   1287c:	add	r1, r0, #1
   12880:	mov	r7, r0
   12884:	mov	r0, r1
   12888:	str	r1, [sp, #36]	; 0x24
   1288c:	bl	13138 <putchar_unlocked@plt+0x23d8>
   12890:	ldr	r3, [r4, #44]	; 0x2c
   12894:	mov	r2, r9
   12898:	str	r3, [sp, #16]
   1289c:	ldr	r3, [r4, #40]	; 0x28
   128a0:	stmib	sp, {r5, fp}
   128a4:	str	r3, [sp, #12]
   128a8:	ldr	r3, [r4]
   128ac:	ldr	r1, [sp, #36]	; 0x24
   128b0:	str	r3, [sp]
   128b4:	mov	r3, sl
   128b8:	str	r0, [sp, #32]
   128bc:	bl	117b8 <putchar_unlocked@plt+0xa58>
   128c0:	ldr	r3, [sp, #28]
   128c4:	cmp	r6, #0
   128c8:	str	r3, [r8]
   128cc:	ldr	r0, [sp, #32]
   128d0:	strne	r7, [r6]
   128d4:	add	sp, sp, #44	; 0x2c
   128d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128dc:	andeq	r5, r2, r4, asr #4
   128e0:	mov	r3, r2
   128e4:	mov	r2, #0
   128e8:	b	1280c <putchar_unlocked@plt+0x1aac>
   128ec:	push	{r4, r5, r6, r7, r8, lr}
   128f0:	mov	r6, #1
   128f4:	ldr	r4, [pc, #104]	; 12964 <putchar_unlocked@plt+0x1c04>
   128f8:	ldr	r5, [r4]
   128fc:	add	r7, r5, #12
   12900:	ldr	r3, [r4, #4]
   12904:	add	r7, r7, #8
   12908:	cmp	r6, r3
   1290c:	blt	12954 <putchar_unlocked@plt+0x1bf4>
   12910:	ldr	r0, [r5, #4]
   12914:	ldr	r6, [pc, #76]	; 12968 <putchar_unlocked@plt+0x1c08>
   12918:	cmp	r0, r6
   1291c:	beq	12930 <putchar_unlocked@plt+0x1bd0>
   12920:	bl	11574 <putchar_unlocked@plt+0x814>
   12924:	mov	r3, #256	; 0x100
   12928:	str	r3, [r4, #8]
   1292c:	str	r6, [r4, #12]
   12930:	ldr	r6, [pc, #52]	; 1296c <putchar_unlocked@plt+0x1c0c>
   12934:	cmp	r5, r6
   12938:	beq	12948 <putchar_unlocked@plt+0x1be8>
   1293c:	mov	r0, r5
   12940:	bl	11574 <putchar_unlocked@plt+0x814>
   12944:	str	r6, [r4]
   12948:	mov	r3, #1
   1294c:	str	r3, [r4, #4]
   12950:	pop	{r4, r5, r6, r7, r8, pc}
   12954:	ldr	r0, [r7, #-8]
   12958:	bl	11574 <putchar_unlocked@plt+0x814>
   1295c:	add	r6, r6, #1
   12960:	b	12900 <putchar_unlocked@plt+0x1ba0>
   12964:	ldrdeq	r5, [r2], -r4
   12968:	andeq	r5, r2, r4, asr #2
   1296c:	ldrdeq	r5, [r2], -ip
   12970:	ldr	r3, [pc, #4]	; 1297c <putchar_unlocked@plt+0x1c1c>
   12974:	mvn	r2, #0
   12978:	b	124ec <putchar_unlocked@plt+0x178c>
   1297c:	andeq	r5, r2, r4, asr #4
   12980:	ldr	r3, [pc]	; 12988 <putchar_unlocked@plt+0x1c28>
   12984:	b	124ec <putchar_unlocked@plt+0x178c>
   12988:	andeq	r5, r2, r4, asr #4
   1298c:	mov	r1, r0
   12990:	mov	r0, #0
   12994:	b	12970 <putchar_unlocked@plt+0x1c10>
   12998:	mov	r2, r1
   1299c:	mov	r1, r0
   129a0:	mov	r0, #0
   129a4:	b	12980 <putchar_unlocked@plt+0x1c20>
   129a8:	push	{r4, r5, lr}
   129ac:	sub	sp, sp, #52	; 0x34
   129b0:	mov	r5, r2
   129b4:	mov	r4, r0
   129b8:	mov	r0, sp
   129bc:	bl	11674 <putchar_unlocked@plt+0x914>
   129c0:	mov	r3, sp
   129c4:	mvn	r2, #0
   129c8:	mov	r1, r5
   129cc:	mov	r0, r4
   129d0:	bl	124ec <putchar_unlocked@plt+0x178c>
   129d4:	add	sp, sp, #52	; 0x34
   129d8:	pop	{r4, r5, pc}
   129dc:	push	{r4, r5, r6, lr}
   129e0:	sub	sp, sp, #48	; 0x30
   129e4:	mov	r5, r2
   129e8:	mov	r6, r3
   129ec:	mov	r4, r0
   129f0:	mov	r0, sp
   129f4:	bl	11674 <putchar_unlocked@plt+0x914>
   129f8:	mov	r3, sp
   129fc:	mov	r2, r6
   12a00:	mov	r1, r5
   12a04:	mov	r0, r4
   12a08:	bl	124ec <putchar_unlocked@plt+0x178c>
   12a0c:	add	sp, sp, #48	; 0x30
   12a10:	pop	{r4, r5, r6, pc}
   12a14:	mov	r2, r1
   12a18:	mov	r1, r0
   12a1c:	mov	r0, #0
   12a20:	b	129a8 <putchar_unlocked@plt+0x1c48>
   12a24:	mov	r3, r2
   12a28:	mov	r2, r1
   12a2c:	mov	r1, r0
   12a30:	mov	r0, #0
   12a34:	b	129dc <putchar_unlocked@plt+0x1c7c>
   12a38:	push	{r4, r5, r6, lr}
   12a3c:	mov	r4, r0
   12a40:	ldr	lr, [pc, #80]	; 12a98 <putchar_unlocked@plt+0x1d38>
   12a44:	mov	r5, r1
   12a48:	mov	r6, r2
   12a4c:	ldm	lr!, {r0, r1, r2, r3}
   12a50:	sub	sp, sp, #48	; 0x30
   12a54:	mov	ip, sp
   12a58:	stmia	ip!, {r0, r1, r2, r3}
   12a5c:	ldm	lr!, {r0, r1, r2, r3}
   12a60:	stmia	ip!, {r0, r1, r2, r3}
   12a64:	ldm	lr, {r0, r1, r2, r3}
   12a68:	stm	ip, {r0, r1, r2, r3}
   12a6c:	mov	r1, r6
   12a70:	mov	r2, #1
   12a74:	mov	r0, sp
   12a78:	bl	126f8 <putchar_unlocked@plt+0x1998>
   12a7c:	mov	r3, sp
   12a80:	mov	r2, r5
   12a84:	mov	r1, r4
   12a88:	mov	r0, #0
   12a8c:	bl	124ec <putchar_unlocked@plt+0x178c>
   12a90:	add	sp, sp, #48	; 0x30
   12a94:	pop	{r4, r5, r6, pc}
   12a98:	andeq	r5, r2, r4, asr #4
   12a9c:	mov	r2, r1
   12aa0:	mvn	r1, #0
   12aa4:	b	12a38 <putchar_unlocked@plt+0x1cd8>
   12aa8:	mov	r1, #58	; 0x3a
   12aac:	b	12a9c <putchar_unlocked@plt+0x1d3c>
   12ab0:	mov	r2, #58	; 0x3a
   12ab4:	b	12a38 <putchar_unlocked@plt+0x1cd8>
   12ab8:	push	{r4, r5, lr}
   12abc:	sub	sp, sp, #100	; 0x64
   12ac0:	mov	r4, r0
   12ac4:	mov	r0, sp
   12ac8:	mov	r5, r2
   12acc:	bl	11674 <putchar_unlocked@plt+0x914>
   12ad0:	mov	ip, sp
   12ad4:	add	lr, sp, #48	; 0x30
   12ad8:	ldm	ip!, {r0, r1, r2, r3}
   12adc:	stmia	lr!, {r0, r1, r2, r3}
   12ae0:	ldm	ip!, {r0, r1, r2, r3}
   12ae4:	stmia	lr!, {r0, r1, r2, r3}
   12ae8:	ldm	ip, {r0, r1, r2, r3}
   12aec:	stm	lr, {r0, r1, r2, r3}
   12af0:	mov	r2, #1
   12af4:	mov	r1, #58	; 0x3a
   12af8:	add	r0, sp, #48	; 0x30
   12afc:	bl	126f8 <putchar_unlocked@plt+0x1998>
   12b00:	add	r3, sp, #48	; 0x30
   12b04:	mvn	r2, #0
   12b08:	mov	r1, r5
   12b0c:	mov	r0, r4
   12b10:	bl	124ec <putchar_unlocked@plt+0x178c>
   12b14:	add	sp, sp, #100	; 0x64
   12b18:	pop	{r4, r5, pc}
   12b1c:	push	{r4, r5, r6, r7, lr}
   12b20:	mov	r4, r0
   12b24:	ldr	lr, [pc, #84]	; 12b80 <putchar_unlocked@plt+0x1e20>
   12b28:	mov	r6, r1
   12b2c:	mov	r7, r2
   12b30:	mov	r5, r3
   12b34:	ldm	lr!, {r0, r1, r2, r3}
   12b38:	sub	sp, sp, #52	; 0x34
   12b3c:	mov	ip, sp
   12b40:	stmia	ip!, {r0, r1, r2, r3}
   12b44:	ldm	lr!, {r0, r1, r2, r3}
   12b48:	stmia	ip!, {r0, r1, r2, r3}
   12b4c:	ldm	lr, {r0, r1, r2, r3}
   12b50:	stm	ip, {r0, r1, r2, r3}
   12b54:	mov	r2, r7
   12b58:	mov	r1, r6
   12b5c:	mov	r0, sp
   12b60:	bl	12754 <putchar_unlocked@plt+0x19f4>
   12b64:	mov	r3, sp
   12b68:	ldr	r2, [sp, #72]	; 0x48
   12b6c:	mov	r1, r5
   12b70:	mov	r0, r4
   12b74:	bl	124ec <putchar_unlocked@plt+0x178c>
   12b78:	add	sp, sp, #52	; 0x34
   12b7c:	pop	{r4, r5, r6, r7, pc}
   12b80:	andeq	r5, r2, r4, asr #4
   12b84:	mvn	ip, #0
   12b88:	push	{r0, r1, r2, lr}
   12b8c:	str	ip, [sp]
   12b90:	bl	12b1c <putchar_unlocked@plt+0x1dbc>
   12b94:	add	sp, sp, #12
   12b98:	pop	{pc}		; (ldr pc, [sp], #4)
   12b9c:	mov	r3, r2
   12ba0:	mov	r2, r1
   12ba4:	mov	r1, r0
   12ba8:	mov	r0, #0
   12bac:	b	12b84 <putchar_unlocked@plt+0x1e24>
   12bb0:	push	{r0, r1, r2, lr}
   12bb4:	str	r3, [sp]
   12bb8:	mov	r3, r2
   12bbc:	mov	r2, r1
   12bc0:	mov	r1, r0
   12bc4:	mov	r0, #0
   12bc8:	bl	12b1c <putchar_unlocked@plt+0x1dbc>
   12bcc:	add	sp, sp, #12
   12bd0:	pop	{pc}		; (ldr pc, [sp], #4)
   12bd4:	ldr	r3, [pc]	; 12bdc <putchar_unlocked@plt+0x1e7c>
   12bd8:	b	124ec <putchar_unlocked@plt+0x178c>
   12bdc:	andeq	r5, r2, r4, ror #1
   12be0:	mov	r2, r1
   12be4:	mov	r1, r0
   12be8:	mov	r0, #0
   12bec:	b	12bd4 <putchar_unlocked@plt+0x1e74>
   12bf0:	mvn	r2, #0
   12bf4:	b	12bd4 <putchar_unlocked@plt+0x1e74>
   12bf8:	mov	r1, r0
   12bfc:	mov	r0, #0
   12c00:	b	12bf0 <putchar_unlocked@plt+0x1e90>
   12c04:	push	{r4, r5, r6, lr}
   12c08:	sub	sp, sp, #32
   12c0c:	cmp	r1, #0
   12c10:	mov	r5, r0
   12c14:	ldr	r4, [sp, #48]	; 0x30
   12c18:	ldr	r6, [sp, #52]	; 0x34
   12c1c:	beq	12cd0 <putchar_unlocked@plt+0x1f70>
   12c20:	stm	sp, {r2, r3}
   12c24:	mov	r3, r1
   12c28:	ldr	r2, [pc, #860]	; 12f8c <putchar_unlocked@plt+0x222c>
   12c2c:	mov	r1, #1
   12c30:	bl	10ce8 <__fprintf_chk@plt>
   12c34:	mov	r2, #5
   12c38:	ldr	r1, [pc, #848]	; 12f90 <putchar_unlocked@plt+0x2230>
   12c3c:	mov	r0, #0
   12c40:	bl	10bd4 <dcgettext@plt>
   12c44:	ldr	r3, [pc, #840]	; 12f94 <putchar_unlocked@plt+0x2234>
   12c48:	ldr	r2, [pc, #840]	; 12f98 <putchar_unlocked@plt+0x2238>
   12c4c:	str	r3, [sp]
   12c50:	mov	r1, #1
   12c54:	mov	r3, r0
   12c58:	mov	r0, r5
   12c5c:	bl	10ce8 <__fprintf_chk@plt>
   12c60:	mov	r1, r5
   12c64:	mov	r0, #10
   12c68:	bl	10bc8 <fputc_unlocked@plt>
   12c6c:	mov	r2, #5
   12c70:	ldr	r1, [pc, #804]	; 12f9c <putchar_unlocked@plt+0x223c>
   12c74:	mov	r0, #0
   12c78:	bl	10bd4 <dcgettext@plt>
   12c7c:	mov	r1, #1
   12c80:	ldr	r3, [pc, #792]	; 12fa0 <putchar_unlocked@plt+0x2240>
   12c84:	mov	r2, r0
   12c88:	mov	r0, r5
   12c8c:	bl	10ce8 <__fprintf_chk@plt>
   12c90:	mov	r1, r5
   12c94:	mov	r0, #10
   12c98:	bl	10bc8 <fputc_unlocked@plt>
   12c9c:	cmp	r6, #9
   12ca0:	ldrls	pc, [pc, r6, lsl #2]
   12ca4:	b	12f80 <putchar_unlocked@plt+0x2220>
   12ca8:	andeq	r2, r1, r0, asr #27
   12cac:	andeq	r2, r1, r8, ror #25
   12cb0:	andeq	r2, r1, r4, lsl sp
   12cb4:	andeq	r2, r1, r8, asr #26
   12cb8:	andeq	r2, r1, r4, lsl #27
   12cbc:	andeq	r2, r1, r8, asr #27
   12cc0:	andeq	r2, r1, r0, lsl lr
   12cc4:	andeq	r2, r1, r0, ror #28
   12cc8:			; <UNDEFINED> instruction: 0x00012eb8
   12ccc:	andeq	r2, r1, r8, lsl pc
   12cd0:	str	r3, [sp]
   12cd4:	mov	r1, #1
   12cd8:	mov	r3, r2
   12cdc:	ldr	r2, [pc, #704]	; 12fa4 <putchar_unlocked@plt+0x2244>
   12ce0:	bl	10ce8 <__fprintf_chk@plt>
   12ce4:	b	12c34 <putchar_unlocked@plt+0x1ed4>
   12ce8:	mov	r2, #5
   12cec:	ldr	r1, [pc, #692]	; 12fa8 <putchar_unlocked@plt+0x2248>
   12cf0:	mov	r0, #0
   12cf4:	bl	10bd4 <dcgettext@plt>
   12cf8:	ldr	r3, [r4]
   12cfc:	mov	r1, #1
   12d00:	mov	r2, r0
   12d04:	mov	r0, r5
   12d08:	add	sp, sp, #32
   12d0c:	pop	{r4, r5, r6, lr}
   12d10:	b	10ce8 <__fprintf_chk@plt>
   12d14:	mov	r2, #5
   12d18:	ldr	r1, [pc, #652]	; 12fac <putchar_unlocked@plt+0x224c>
   12d1c:	mov	r0, #0
   12d20:	bl	10bd4 <dcgettext@plt>
   12d24:	ldr	r3, [r4, #4]
   12d28:	mov	r1, #1
   12d2c:	str	r3, [sp, #48]	; 0x30
   12d30:	ldr	r3, [r4]
   12d34:	mov	r2, r0
   12d38:	mov	r0, r5
   12d3c:	add	sp, sp, #32
   12d40:	pop	{r4, r5, r6, lr}
   12d44:	b	10ce8 <__fprintf_chk@plt>
   12d48:	mov	r2, #5
   12d4c:	ldr	r1, [pc, #604]	; 12fb0 <putchar_unlocked@plt+0x2250>
   12d50:	mov	r0, #0
   12d54:	bl	10bd4 <dcgettext@plt>
   12d58:	ldr	r3, [r4, #8]
   12d5c:	mov	r1, #1
   12d60:	str	r3, [sp, #52]	; 0x34
   12d64:	ldr	r3, [r4, #4]
   12d68:	str	r3, [sp, #48]	; 0x30
   12d6c:	ldr	r3, [r4]
   12d70:	mov	r2, r0
   12d74:	mov	r0, r5
   12d78:	add	sp, sp, #32
   12d7c:	pop	{r4, r5, r6, lr}
   12d80:	b	10ce8 <__fprintf_chk@plt>
   12d84:	mov	r2, #5
   12d88:	ldr	r1, [pc, #548]	; 12fb4 <putchar_unlocked@plt+0x2254>
   12d8c:	mov	r0, #0
   12d90:	bl	10bd4 <dcgettext@plt>
   12d94:	ldr	r3, [r4, #12]
   12d98:	mov	r1, #1
   12d9c:	str	r3, [sp, #8]
   12da0:	ldr	r3, [r4, #8]
   12da4:	str	r3, [sp, #4]
   12da8:	ldr	r3, [r4, #4]
   12dac:	str	r3, [sp]
   12db0:	ldr	r3, [r4]
   12db4:	mov	r2, r0
   12db8:	mov	r0, r5
   12dbc:	bl	10ce8 <__fprintf_chk@plt>
   12dc0:	add	sp, sp, #32
   12dc4:	pop	{r4, r5, r6, pc}
   12dc8:	mov	r2, #5
   12dcc:	ldr	r1, [pc, #484]	; 12fb8 <putchar_unlocked@plt+0x2258>
   12dd0:	mov	r0, #0
   12dd4:	bl	10bd4 <dcgettext@plt>
   12dd8:	ldr	r3, [r4, #16]
   12ddc:	mov	r1, #1
   12de0:	str	r3, [sp, #12]
   12de4:	ldr	r3, [r4, #12]
   12de8:	str	r3, [sp, #8]
   12dec:	ldr	r3, [r4, #8]
   12df0:	str	r3, [sp, #4]
   12df4:	ldr	r3, [r4, #4]
   12df8:	str	r3, [sp]
   12dfc:	ldr	r3, [r4]
   12e00:	mov	r2, r0
   12e04:	mov	r0, r5
   12e08:	bl	10ce8 <__fprintf_chk@plt>
   12e0c:	b	12dc0 <putchar_unlocked@plt+0x2060>
   12e10:	mov	r2, #5
   12e14:	ldr	r1, [pc, #416]	; 12fbc <putchar_unlocked@plt+0x225c>
   12e18:	mov	r0, #0
   12e1c:	bl	10bd4 <dcgettext@plt>
   12e20:	ldr	r3, [r4, #20]
   12e24:	mov	r1, #1
   12e28:	str	r3, [sp, #16]
   12e2c:	ldr	r3, [r4, #16]
   12e30:	str	r3, [sp, #12]
   12e34:	ldr	r3, [r4, #12]
   12e38:	str	r3, [sp, #8]
   12e3c:	ldr	r3, [r4, #8]
   12e40:	str	r3, [sp, #4]
   12e44:	ldr	r3, [r4, #4]
   12e48:	str	r3, [sp]
   12e4c:	ldr	r3, [r4]
   12e50:	mov	r2, r0
   12e54:	mov	r0, r5
   12e58:	bl	10ce8 <__fprintf_chk@plt>
   12e5c:	b	12dc0 <putchar_unlocked@plt+0x2060>
   12e60:	mov	r2, #5
   12e64:	ldr	r1, [pc, #340]	; 12fc0 <putchar_unlocked@plt+0x2260>
   12e68:	mov	r0, #0
   12e6c:	bl	10bd4 <dcgettext@plt>
   12e70:	ldr	r3, [r4, #24]
   12e74:	mov	r1, #1
   12e78:	str	r3, [sp, #20]
   12e7c:	ldr	r3, [r4, #20]
   12e80:	str	r3, [sp, #16]
   12e84:	ldr	r3, [r4, #16]
   12e88:	str	r3, [sp, #12]
   12e8c:	ldr	r3, [r4, #12]
   12e90:	str	r3, [sp, #8]
   12e94:	ldr	r3, [r4, #8]
   12e98:	str	r3, [sp, #4]
   12e9c:	ldr	r3, [r4, #4]
   12ea0:	str	r3, [sp]
   12ea4:	ldr	r3, [r4]
   12ea8:	mov	r2, r0
   12eac:	mov	r0, r5
   12eb0:	bl	10ce8 <__fprintf_chk@plt>
   12eb4:	b	12dc0 <putchar_unlocked@plt+0x2060>
   12eb8:	mov	r2, #5
   12ebc:	ldr	r1, [pc, #256]	; 12fc4 <putchar_unlocked@plt+0x2264>
   12ec0:	mov	r0, #0
   12ec4:	bl	10bd4 <dcgettext@plt>
   12ec8:	ldr	r3, [r4, #28]
   12ecc:	mov	r1, #1
   12ed0:	str	r3, [sp, #24]
   12ed4:	ldr	r3, [r4, #24]
   12ed8:	str	r3, [sp, #20]
   12edc:	ldr	r3, [r4, #20]
   12ee0:	str	r3, [sp, #16]
   12ee4:	ldr	r3, [r4, #16]
   12ee8:	str	r3, [sp, #12]
   12eec:	ldr	r3, [r4, #12]
   12ef0:	str	r3, [sp, #8]
   12ef4:	ldr	r3, [r4, #8]
   12ef8:	str	r3, [sp, #4]
   12efc:	ldr	r3, [r4, #4]
   12f00:	str	r3, [sp]
   12f04:	ldr	r3, [r4]
   12f08:	mov	r2, r0
   12f0c:	mov	r0, r5
   12f10:	bl	10ce8 <__fprintf_chk@plt>
   12f14:	b	12dc0 <putchar_unlocked@plt+0x2060>
   12f18:	ldr	r1, [pc, #168]	; 12fc8 <putchar_unlocked@plt+0x2268>
   12f1c:	mov	r2, #5
   12f20:	mov	r0, #0
   12f24:	bl	10bd4 <dcgettext@plt>
   12f28:	ldr	r3, [r4, #32]
   12f2c:	mov	r1, #1
   12f30:	str	r3, [sp, #28]
   12f34:	ldr	r3, [r4, #28]
   12f38:	str	r3, [sp, #24]
   12f3c:	ldr	r3, [r4, #24]
   12f40:	str	r3, [sp, #20]
   12f44:	ldr	r3, [r4, #20]
   12f48:	str	r3, [sp, #16]
   12f4c:	ldr	r3, [r4, #16]
   12f50:	str	r3, [sp, #12]
   12f54:	ldr	r3, [r4, #12]
   12f58:	str	r3, [sp, #8]
   12f5c:	ldr	r3, [r4, #8]
   12f60:	str	r3, [sp, #4]
   12f64:	ldr	r3, [r4, #4]
   12f68:	str	r3, [sp]
   12f6c:	ldr	r3, [r4]
   12f70:	mov	r2, r0
   12f74:	mov	r0, r5
   12f78:	bl	10ce8 <__fprintf_chk@plt>
   12f7c:	b	12dc0 <putchar_unlocked@plt+0x2060>
   12f80:	mov	r2, #5
   12f84:	ldr	r1, [pc, #64]	; 12fcc <putchar_unlocked@plt+0x226c>
   12f88:	b	12f20 <putchar_unlocked@plt+0x21c0>
   12f8c:	andeq	r4, r1, r3, asr r6
   12f90:	andeq	r4, r1, r6, ror #12
   12f94:	andeq	r0, r0, r6, ror #15
   12f98:	andeq	r4, r1, r4, lsr r9
   12f9c:	andeq	r4, r1, sl, ror #12
   12fa0:	andeq	r4, r1, r5, lsl r7
   12fa4:	andeq	r4, r1, pc, asr r6
   12fa8:	andeq	r4, r1, r7, lsr r7
   12fac:	andeq	r4, r1, r7, asr #14
   12fb0:	andeq	r4, r1, lr, asr r7
   12fb4:	andeq	r4, r1, sl, ror r7
   12fb8:	muleq	r1, sl, r7
   12fbc:			; <UNDEFINED> instruction: 0x000147be
   12fc0:	andeq	r4, r1, r6, ror #15
   12fc4:	andeq	r4, r1, r2, lsl r8
   12fc8:	andeq	r4, r1, r2, asr #16
   12fcc:	andeq	r4, r1, r6, ror r8
   12fd0:	push	{r0, r1, r4, lr}
   12fd4:	mov	ip, #0
   12fd8:	ldr	lr, [sp, #16]
   12fdc:	ldr	r4, [lr, ip, lsl #2]
   12fe0:	cmp	r4, #0
   12fe4:	bne	12ffc <putchar_unlocked@plt+0x229c>
   12fe8:	str	ip, [sp, #4]
   12fec:	str	lr, [sp]
   12ff0:	bl	12c04 <putchar_unlocked@plt+0x1ea4>
   12ff4:	add	sp, sp, #8
   12ff8:	pop	{r4, pc}
   12ffc:	add	ip, ip, #1
   13000:	b	12fdc <putchar_unlocked@plt+0x227c>
   13004:	push	{r4, r5, lr}
   13008:	sub	sp, sp, #52	; 0x34
   1300c:	mov	ip, #0
   13010:	ldr	r5, [sp, #64]	; 0x40
   13014:	add	lr, sp, #8
   13018:	ldr	r4, [r5, ip, lsl #2]
   1301c:	cmp	r4, #0
   13020:	str	r4, [lr, ip, lsl #2]
   13024:	beq	13034 <putchar_unlocked@plt+0x22d4>
   13028:	add	ip, ip, #1
   1302c:	cmp	ip, #10
   13030:	bne	13018 <putchar_unlocked@plt+0x22b8>
   13034:	str	ip, [sp, #4]
   13038:	str	lr, [sp]
   1303c:	bl	12c04 <putchar_unlocked@plt+0x1ea4>
   13040:	add	sp, sp, #52	; 0x34
   13044:	pop	{r4, r5, pc}
   13048:	push	{r3}		; (str r3, [sp, #-4]!)
   1304c:	push	{r0, r1, r2, r3, lr}
   13050:	add	r3, sp, #24
   13054:	str	r3, [sp, #12]
   13058:	str	r3, [sp]
   1305c:	ldr	r3, [sp, #20]
   13060:	bl	13004 <putchar_unlocked@plt+0x22a4>
   13064:	add	sp, sp, #16
   13068:	pop	{lr}		; (ldr lr, [sp], #4)
   1306c:	add	sp, sp, #4
   13070:	bx	lr
   13074:	ldr	r3, [pc, #116]	; 130f0 <putchar_unlocked@plt+0x2390>
   13078:	push	{r4, lr}
   1307c:	mov	r0, #10
   13080:	ldr	r1, [r3]
   13084:	bl	10bc8 <fputc_unlocked@plt>
   13088:	mov	r2, #5
   1308c:	ldr	r1, [pc, #96]	; 130f4 <putchar_unlocked@plt+0x2394>
   13090:	mov	r0, #0
   13094:	bl	10bd4 <dcgettext@plt>
   13098:	ldr	r2, [pc, #88]	; 130f8 <putchar_unlocked@plt+0x2398>
   1309c:	mov	r1, r0
   130a0:	mov	r0, #1
   130a4:	bl	10cd0 <__printf_chk@plt>
   130a8:	mov	r2, #5
   130ac:	ldr	r1, [pc, #72]	; 130fc <putchar_unlocked@plt+0x239c>
   130b0:	mov	r0, #0
   130b4:	bl	10bd4 <dcgettext@plt>
   130b8:	ldr	r3, [pc, #64]	; 13100 <putchar_unlocked@plt+0x23a0>
   130bc:	ldr	r2, [pc, #64]	; 13104 <putchar_unlocked@plt+0x23a4>
   130c0:	mov	r1, r0
   130c4:	mov	r0, #1
   130c8:	bl	10cd0 <__printf_chk@plt>
   130cc:	mov	r2, #5
   130d0:	ldr	r1, [pc, #48]	; 13108 <putchar_unlocked@plt+0x23a8>
   130d4:	mov	r0, #0
   130d8:	bl	10bd4 <dcgettext@plt>
   130dc:	ldr	r2, [pc, #40]	; 1310c <putchar_unlocked@plt+0x23ac>
   130e0:	pop	{r4, lr}
   130e4:	mov	r1, r0
   130e8:	mov	r0, #1
   130ec:	b	10cd0 <__printf_chk@plt>
   130f0:	andeq	r5, r2, ip, lsr #2
   130f4:			; <UNDEFINED> instruction: 0x000148b2
   130f8:	andeq	r4, r1, r6, asr #17
   130fc:	ldrdeq	r4, [r1], -ip
   13100:	muleq	r1, r5, r3
   13104:			; <UNDEFINED> instruction: 0x000143bd
   13108:	strdeq	r4, [r1], -r0
   1310c:	andeq	r4, r1, r7, lsl r9
   13110:	push	{r4, lr}
   13114:	bl	1362c <putchar_unlocked@plt+0x28cc>
   13118:	cmp	r0, #0
   1311c:	popne	{r4, pc}
   13120:	bl	135a4 <putchar_unlocked@plt+0x2844>
   13124:	push	{r4, lr}
   13128:	bl	1362c <putchar_unlocked@plt+0x28cc>
   1312c:	cmp	r0, #0
   13130:	popne	{r4, pc}
   13134:	bl	135a4 <putchar_unlocked@plt+0x2844>
   13138:	b	13110 <putchar_unlocked@plt+0x23b0>
   1313c:	push	{r4, r5, r6, lr}
   13140:	mov	r5, r0
   13144:	mov	r4, r1
   13148:	bl	1366c <putchar_unlocked@plt+0x290c>
   1314c:	cmp	r0, #0
   13150:	popne	{r4, r5, r6, pc}
   13154:	adds	r4, r4, #0
   13158:	movne	r4, #1
   1315c:	cmp	r5, #0
   13160:	orreq	r4, r4, #1
   13164:	cmp	r4, #0
   13168:	popeq	{r4, r5, r6, pc}
   1316c:	bl	135a4 <putchar_unlocked@plt+0x2844>
   13170:	push	{r4, lr}
   13174:	cmp	r1, #0
   13178:	orreq	r1, r1, #1
   1317c:	bl	1366c <putchar_unlocked@plt+0x290c>
   13180:	cmp	r0, #0
   13184:	popne	{r4, pc}
   13188:	bl	135a4 <putchar_unlocked@plt+0x2844>
   1318c:	push	{r4, r5, r6, lr}
   13190:	mov	r6, r0
   13194:	mov	r5, r1
   13198:	mov	r4, r2
   1319c:	bl	139d8 <putchar_unlocked@plt+0x2c78>
   131a0:	cmp	r0, #0
   131a4:	popne	{r4, r5, r6, pc}
   131a8:	cmp	r6, #0
   131ac:	beq	131bc <putchar_unlocked@plt+0x245c>
   131b0:	cmp	r5, #0
   131b4:	cmpne	r4, #0
   131b8:	popeq	{r4, r5, r6, pc}
   131bc:	bl	135a4 <putchar_unlocked@plt+0x2844>
   131c0:	b	1318c <putchar_unlocked@plt+0x242c>
   131c4:	cmp	r2, #0
   131c8:	cmpne	r1, #0
   131cc:	moveq	r2, #1
   131d0:	moveq	r1, r2
   131d4:	push	{r4, lr}
   131d8:	bl	139d8 <putchar_unlocked@plt+0x2c78>
   131dc:	cmp	r0, #0
   131e0:	popne	{r4, pc}
   131e4:	bl	135a4 <putchar_unlocked@plt+0x2844>
   131e8:	mov	r2, r1
   131ec:	mov	r1, r0
   131f0:	mov	r0, #0
   131f4:	b	1318c <putchar_unlocked@plt+0x242c>
   131f8:	mov	r2, r1
   131fc:	mov	r1, r0
   13200:	mov	r0, #0
   13204:	b	131c4 <putchar_unlocked@plt+0x2464>
   13208:	push	{r4, r5, r6, r7, r8, lr}
   1320c:	subs	r7, r0, #0
   13210:	mov	r5, r1
   13214:	mov	r6, r2
   13218:	ldr	r4, [r1]
   1321c:	bne	13258 <putchar_unlocked@plt+0x24f8>
   13220:	cmp	r4, #0
   13224:	bne	13240 <putchar_unlocked@plt+0x24e0>
   13228:	mov	r1, r2
   1322c:	mov	r0, #64	; 0x40
   13230:	bl	13b04 <putchar_unlocked@plt+0x2da4>
   13234:	cmp	r0, #0
   13238:	movne	r4, r0
   1323c:	addeq	r4, r0, #1
   13240:	mov	r2, r6
   13244:	mov	r1, r4
   13248:	mov	r0, r7
   1324c:	bl	1318c <putchar_unlocked@plt+0x242c>
   13250:	str	r4, [r5]
   13254:	pop	{r4, r5, r6, r7, r8, pc}
   13258:	lsr	r2, r4, #1
   1325c:	add	r3, r2, #1
   13260:	mvn	r3, r3
   13264:	cmp	r4, r3
   13268:	addls	r4, r4, #1
   1326c:	addls	r4, r4, r2
   13270:	bls	13240 <putchar_unlocked@plt+0x24e0>
   13274:	bl	135a4 <putchar_unlocked@plt+0x2844>
   13278:	mov	r2, #1
   1327c:	b	13208 <putchar_unlocked@plt+0x24a8>
   13280:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13284:	mov	sl, r0
   13288:	ldr	r8, [r1]
   1328c:	mov	fp, r1
   13290:	mov	r5, r2
   13294:	asrs	r4, r8, #1
   13298:	mov	r9, r3
   1329c:	ldr	r7, [sp, #48]	; 0x30
   132a0:	bpl	1333c <putchar_unlocked@plt+0x25dc>
   132a4:	rsb	r2, r4, #-2147483648	; 0x80000000
   132a8:	cmp	r8, r2
   132ac:	movge	r2, #0
   132b0:	movlt	r2, #1
   132b4:	mvn	r3, r9
   132b8:	cmp	r2, #0
   132bc:	lsr	r3, r3, #31
   132c0:	addeq	r4, r4, r8
   132c4:	mvnne	r4, #-2147483648	; 0x80000000
   132c8:	mov	r0, r3
   132cc:	cmp	r9, r4
   132d0:	movge	r0, #0
   132d4:	andlt	r0, r0, #1
   132d8:	cmp	r0, #0
   132dc:	str	r3, [sp, #4]
   132e0:	bne	134b0 <putchar_unlocked@plt+0x2750>
   132e4:	cmp	r7, #0
   132e8:	bge	133fc <putchar_unlocked@plt+0x269c>
   132ec:	cmp	r4, #0
   132f0:	bge	13354 <putchar_unlocked@plt+0x25f4>
   132f4:	mov	r1, r7
   132f8:	mvn	r0, #-2147483648	; 0x80000000
   132fc:	bl	13d10 <putchar_unlocked@plt+0x2fb0>
   13300:	cmp	r0, r4
   13304:	movle	r0, #0
   13308:	movgt	r0, #1
   1330c:	cmp	r0, #0
   13310:	mvnne	r6, #-2147483648	; 0x80000000
   13314:	beq	13364 <putchar_unlocked@plt+0x2604>
   13318:	mov	r1, r7
   1331c:	mov	r0, r6
   13320:	bl	13d10 <putchar_unlocked@plt+0x2fb0>
   13324:	mov	r1, r7
   13328:	mov	r4, r0
   1332c:	mov	r0, r6
   13330:	bl	13f30 <putchar_unlocked@plt+0x31d0>
   13334:	sub	r1, r6, r1
   13338:	b	13374 <putchar_unlocked@plt+0x2614>
   1333c:	mvn	r2, #-2147483648	; 0x80000000
   13340:	sub	r2, r2, r4
   13344:	cmp	r8, r2
   13348:	movle	r2, #0
   1334c:	movgt	r2, #1
   13350:	b	132b4 <putchar_unlocked@plt+0x2554>
   13354:	cmn	r7, #1
   13358:	movne	r1, r7
   1335c:	movne	r0, #-2147483648	; 0x80000000
   13360:	bne	134c8 <putchar_unlocked@plt+0x2768>
   13364:	mul	r1, r7, r4
   13368:	cmp	r1, #63	; 0x3f
   1336c:	movle	r6, #64	; 0x40
   13370:	ble	13318 <putchar_unlocked@plt+0x25b8>
   13374:	cmp	sl, #0
   13378:	sub	r2, r4, r8
   1337c:	streq	sl, [fp]
   13380:	cmp	r2, r5
   13384:	bge	13458 <putchar_unlocked@plt+0x26f8>
   13388:	cmp	r5, #0
   1338c:	bge	13424 <putchar_unlocked@plt+0x26c4>
   13390:	rsb	r2, r5, #-2147483648	; 0x80000000
   13394:	cmp	r8, r2
   13398:	movge	r2, #0
   1339c:	movlt	r2, #1
   133a0:	cmp	r2, #0
   133a4:	bne	133f8 <putchar_unlocked@plt+0x2698>
   133a8:	ldr	r0, [sp, #4]
   133ac:	add	r5, r8, r5
   133b0:	cmp	r9, r5
   133b4:	movge	r0, #0
   133b8:	andlt	r0, r0, #1
   133bc:	cmp	r0, #0
   133c0:	mov	r4, r5
   133c4:	bne	133f8 <putchar_unlocked@plt+0x2698>
   133c8:	cmp	r7, #0
   133cc:	bge	1346c <putchar_unlocked@plt+0x270c>
   133d0:	cmp	r5, #0
   133d4:	bge	13444 <putchar_unlocked@plt+0x26e4>
   133d8:	mov	r1, r7
   133dc:	mvn	r0, #-2147483648	; 0x80000000
   133e0:	bl	13d10 <putchar_unlocked@plt+0x2fb0>
   133e4:	cmp	r5, r0
   133e8:	movge	r0, #0
   133ec:	movlt	r0, #1
   133f0:	cmp	r0, #0
   133f4:	beq	13454 <putchar_unlocked@plt+0x26f4>
   133f8:	bl	135a4 <putchar_unlocked@plt+0x2844>
   133fc:	beq	13364 <putchar_unlocked@plt+0x2604>
   13400:	cmp	r4, #0
   13404:	bge	134c0 <putchar_unlocked@plt+0x2760>
   13408:	cmn	r4, #1
   1340c:	beq	13364 <putchar_unlocked@plt+0x2604>
   13410:	mov	r1, r4
   13414:	mov	r0, #-2147483648	; 0x80000000
   13418:	bl	13d10 <putchar_unlocked@plt+0x2fb0>
   1341c:	cmp	r7, r0
   13420:	b	13304 <putchar_unlocked@plt+0x25a4>
   13424:	cmp	r8, #0
   13428:	blt	133a8 <putchar_unlocked@plt+0x2648>
   1342c:	mvn	r2, #-2147483648	; 0x80000000
   13430:	sub	r2, r2, r5
   13434:	cmp	r8, r2
   13438:	movle	r2, #0
   1343c:	movgt	r2, #1
   13440:	b	133a0 <putchar_unlocked@plt+0x2640>
   13444:	cmn	r7, #1
   13448:	movne	r1, r7
   1344c:	movne	r0, #-2147483648	; 0x80000000
   13450:	bne	134a4 <putchar_unlocked@plt+0x2744>
   13454:	mul	r1, r5, r7
   13458:	mov	r0, sl
   1345c:	bl	1313c <putchar_unlocked@plt+0x23dc>
   13460:	str	r4, [fp]
   13464:	add	sp, sp, #12
   13468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1346c:	beq	13454 <putchar_unlocked@plt+0x26f4>
   13470:	cmp	r5, #0
   13474:	movge	r1, r7
   13478:	mvnge	r0, #-2147483648	; 0x80000000
   1347c:	bge	134a4 <putchar_unlocked@plt+0x2744>
   13480:	cmn	r5, #1
   13484:	beq	13454 <putchar_unlocked@plt+0x26f4>
   13488:	mov	r1, r5
   1348c:	mov	r0, #-2147483648	; 0x80000000
   13490:	bl	13d10 <putchar_unlocked@plt+0x2fb0>
   13494:	cmp	r7, r0
   13498:	movle	r0, #0
   1349c:	movgt	r0, #1
   134a0:	b	133f0 <putchar_unlocked@plt+0x2690>
   134a4:	bl	13d10 <putchar_unlocked@plt+0x2fb0>
   134a8:	cmp	r5, r0
   134ac:	b	13498 <putchar_unlocked@plt+0x2738>
   134b0:	cmp	r7, #0
   134b4:	mov	r4, r9
   134b8:	blt	13354 <putchar_unlocked@plt+0x25f4>
   134bc:	beq	13364 <putchar_unlocked@plt+0x2604>
   134c0:	mov	r1, r7
   134c4:	mvn	r0, #-2147483648	; 0x80000000
   134c8:	bl	13d10 <putchar_unlocked@plt+0x2fb0>
   134cc:	cmp	r0, r4
   134d0:	movge	r0, #0
   134d4:	movlt	r0, #1
   134d8:	b	1330c <putchar_unlocked@plt+0x25ac>
   134dc:	push	{r4, lr}
   134e0:	bl	135e4 <putchar_unlocked@plt+0x2884>
   134e4:	cmp	r0, #0
   134e8:	popne	{r4, pc}
   134ec:	bl	135a4 <putchar_unlocked@plt+0x2844>
   134f0:	mov	r1, #1
   134f4:	b	134dc <putchar_unlocked@plt+0x277c>
   134f8:	push	{r4, lr}
   134fc:	bl	135e4 <putchar_unlocked@plt+0x2884>
   13500:	cmp	r0, #0
   13504:	popne	{r4, pc}
   13508:	bl	135a4 <putchar_unlocked@plt+0x2844>
   1350c:	mov	r1, #1
   13510:	b	134f8 <putchar_unlocked@plt+0x2798>
   13514:	push	{r4, r5, r6, lr}
   13518:	mov	r4, r1
   1351c:	mov	r5, r0
   13520:	mov	r0, r1
   13524:	bl	13110 <putchar_unlocked@plt+0x23b0>
   13528:	mov	r2, r4
   1352c:	mov	r1, r5
   13530:	pop	{r4, r5, r6, lr}
   13534:	b	10ba4 <memcpy@plt>
   13538:	push	{r4, r5, r6, lr}
   1353c:	mov	r4, r1
   13540:	mov	r5, r0
   13544:	mov	r0, r1
   13548:	bl	13124 <putchar_unlocked@plt+0x23c4>
   1354c:	mov	r2, r4
   13550:	mov	r1, r5
   13554:	pop	{r4, r5, r6, lr}
   13558:	b	10ba4 <memcpy@plt>
   1355c:	push	{r4, r5, r6, lr}
   13560:	mov	r5, r0
   13564:	add	r0, r1, #1
   13568:	mov	r4, r1
   1356c:	bl	13124 <putchar_unlocked@plt+0x23c4>
   13570:	mov	r2, #0
   13574:	mov	r1, r5
   13578:	strb	r2, [r0, r4]
   1357c:	mov	r2, r4
   13580:	pop	{r4, r5, r6, lr}
   13584:	b	10ba4 <memcpy@plt>
   13588:	push	{r4, lr}
   1358c:	mov	r4, r0
   13590:	bl	10ca0 <strlen@plt>
   13594:	add	r1, r0, #1
   13598:	mov	r0, r4
   1359c:	pop	{r4, lr}
   135a0:	b	13514 <putchar_unlocked@plt+0x27b4>
   135a4:	ldr	r3, [pc, #44]	; 135d8 <putchar_unlocked@plt+0x2878>
   135a8:	push	{r4, lr}
   135ac:	mov	r2, #5
   135b0:	ldr	r1, [pc, #36]	; 135dc <putchar_unlocked@plt+0x287c>
   135b4:	mov	r0, #0
   135b8:	ldr	r4, [r3]
   135bc:	bl	10bd4 <dcgettext@plt>
   135c0:	ldr	r2, [pc, #24]	; 135e0 <putchar_unlocked@plt+0x2880>
   135c4:	mov	r1, #0
   135c8:	mov	r3, r0
   135cc:	mov	r0, r4
   135d0:	bl	10c40 <error@plt>
   135d4:	bl	10d54 <abort@plt>
   135d8:	ldrdeq	r5, [r2], -r0
   135dc:	andeq	r4, r1, r3, ror #18
   135e0:	andeq	r4, r1, r3, asr r5
   135e4:	cmp	r1, #0
   135e8:	cmpne	r0, #0
   135ec:	moveq	r1, #1
   135f0:	moveq	r0, r1
   135f4:	umull	r2, r3, r0, r1
   135f8:	adds	r3, r3, #0
   135fc:	movne	r3, #1
   13600:	cmp	r2, #0
   13604:	blt	13614 <putchar_unlocked@plt+0x28b4>
   13608:	cmp	r3, #0
   1360c:	bne	13614 <putchar_unlocked@plt+0x28b4>
   13610:	b	10b50 <calloc@plt>
   13614:	push	{r4, lr}
   13618:	bl	10cac <__errno_location@plt>
   1361c:	mov	r3, #12
   13620:	str	r3, [r0]
   13624:	mov	r0, #0
   13628:	pop	{r4, pc}
   1362c:	cmp	r0, #0
   13630:	mov	r3, #0
   13634:	moveq	r0, #1
   13638:	adds	r3, r3, #0
   1363c:	movne	r3, #1
   13640:	cmp	r0, #0
   13644:	blt	13654 <putchar_unlocked@plt+0x28f4>
   13648:	cmp	r3, #0
   1364c:	bne	13654 <putchar_unlocked@plt+0x28f4>
   13650:	b	10c4c <malloc@plt>
   13654:	push	{r4, lr}
   13658:	bl	10cac <__errno_location@plt>
   1365c:	mov	r3, #12
   13660:	str	r3, [r0]
   13664:	mov	r0, #0
   13668:	pop	{r4, pc}
   1366c:	cmp	r0, #0
   13670:	push	{r4, lr}
   13674:	mov	r4, r1
   13678:	bne	13688 <putchar_unlocked@plt+0x2928>
   1367c:	mov	r0, r1
   13680:	pop	{r4, lr}
   13684:	b	1362c <putchar_unlocked@plt+0x28cc>
   13688:	cmp	r1, #0
   1368c:	bne	1369c <putchar_unlocked@plt+0x293c>
   13690:	bl	11574 <putchar_unlocked@plt+0x814>
   13694:	mov	r0, #0
   13698:	pop	{r4, pc}
   1369c:	cmp	r1, #0
   136a0:	blt	136b0 <putchar_unlocked@plt+0x2950>
   136a4:	mov	r3, #0
   136a8:	cmp	r3, r3
   136ac:	beq	136c0 <putchar_unlocked@plt+0x2960>
   136b0:	bl	10cac <__errno_location@plt>
   136b4:	mov	r3, #12
   136b8:	str	r3, [r0]
   136bc:	b	13694 <putchar_unlocked@plt+0x2934>
   136c0:	pop	{r4, lr}
   136c4:	b	10be0 <realloc@plt>
   136c8:	mov	r2, r0
   136cc:	push	{r4, lr}
   136d0:	mov	r0, r2
   136d4:	ldrb	r3, [r2]
   136d8:	add	r1, r2, #1
   136dc:	cmp	r3, #47	; 0x2f
   136e0:	beq	13704 <putchar_unlocked@plt+0x29a4>
   136e4:	mov	r3, #0
   136e8:	mov	lr, #1
   136ec:	mov	r4, r3
   136f0:	mov	ip, r2
   136f4:	ldrb	r1, [r2], #1
   136f8:	cmp	r1, #0
   136fc:	bne	1370c <putchar_unlocked@plt+0x29ac>
   13700:	pop	{r4, pc}
   13704:	mov	r2, r1
   13708:	b	136d0 <putchar_unlocked@plt+0x2970>
   1370c:	cmp	r1, #47	; 0x2f
   13710:	moveq	r3, lr
   13714:	beq	136f0 <putchar_unlocked@plt+0x2990>
   13718:	cmp	r3, #0
   1371c:	movne	r0, ip
   13720:	movne	r3, r4
   13724:	b	136f0 <putchar_unlocked@plt+0x2990>
   13728:	push	{r4, lr}
   1372c:	mov	r4, r0
   13730:	bl	10ca0 <strlen@plt>
   13734:	cmp	r0, #1
   13738:	popls	{r4, pc}
   1373c:	sub	r3, r0, #1
   13740:	ldrb	r2, [r4, r3]
   13744:	cmp	r2, #47	; 0x2f
   13748:	beq	13750 <putchar_unlocked@plt+0x29f0>
   1374c:	pop	{r4, pc}
   13750:	mov	r0, r3
   13754:	b	13734 <putchar_unlocked@plt+0x29d4>
   13758:	push	{r4, r5, r6, lr}
   1375c:	mov	r4, r0
   13760:	bl	10c1c <__fpending@plt>
   13764:	mov	r5, r0
   13768:	mov	r0, r4
   1376c:	bl	10c28 <ferror_unlocked@plt>
   13770:	mov	r6, r0
   13774:	mov	r0, r4
   13778:	bl	137c8 <putchar_unlocked@plt+0x2a68>
   1377c:	cmp	r6, #0
   13780:	mov	r4, r0
   13784:	bne	137b0 <putchar_unlocked@plt+0x2a50>
   13788:	cmp	r0, #0
   1378c:	beq	137a8 <putchar_unlocked@plt+0x2a48>
   13790:	cmp	r5, #0
   13794:	bne	137c0 <putchar_unlocked@plt+0x2a60>
   13798:	bl	10cac <__errno_location@plt>
   1379c:	ldr	r4, [r0]
   137a0:	subs	r4, r4, #9
   137a4:	mvnne	r4, #0
   137a8:	mov	r0, r4
   137ac:	pop	{r4, r5, r6, pc}
   137b0:	cmp	r0, #0
   137b4:	bne	137c0 <putchar_unlocked@plt+0x2a60>
   137b8:	bl	10cac <__errno_location@plt>
   137bc:	str	r4, [r0]
   137c0:	mvn	r4, #0
   137c4:	b	137a8 <putchar_unlocked@plt+0x2a48>
   137c8:	push	{r0, r1, r2, r4, r5, lr}
   137cc:	mov	r4, r0
   137d0:	bl	10cdc <fileno@plt>
   137d4:	cmp	r0, #0
   137d8:	mov	r0, r4
   137dc:	bge	137ec <putchar_unlocked@plt+0x2a8c>
   137e0:	add	sp, sp, #12
   137e4:	pop	{r4, r5, lr}
   137e8:	b	10cf4 <fclose@plt>
   137ec:	bl	10c64 <__freading@plt>
   137f0:	cmp	r0, #0
   137f4:	bne	13830 <putchar_unlocked@plt+0x2ad0>
   137f8:	mov	r0, r4
   137fc:	bl	13870 <putchar_unlocked@plt+0x2b10>
   13800:	cmp	r0, #0
   13804:	bne	13864 <putchar_unlocked@plt+0x2b04>
   13808:	mov	r5, #0
   1380c:	mov	r0, r4
   13810:	bl	10cf4 <fclose@plt>
   13814:	cmp	r5, #0
   13818:	beq	13828 <putchar_unlocked@plt+0x2ac8>
   1381c:	bl	10cac <__errno_location@plt>
   13820:	str	r5, [r0]
   13824:	mvn	r0, #0
   13828:	add	sp, sp, #12
   1382c:	pop	{r4, r5, pc}
   13830:	mov	r0, r4
   13834:	bl	10cdc <fileno@plt>
   13838:	mov	r3, #1
   1383c:	str	r3, [sp]
   13840:	mov	r2, #0
   13844:	mov	r3, #0
   13848:	bl	10c04 <lseek64@plt>
   1384c:	mvn	r3, #0
   13850:	mvn	r2, #0
   13854:	cmp	r1, r3
   13858:	cmpeq	r0, r2
   1385c:	bne	137f8 <putchar_unlocked@plt+0x2a98>
   13860:	b	13808 <putchar_unlocked@plt+0x2aa8>
   13864:	bl	10cac <__errno_location@plt>
   13868:	ldr	r5, [r0]
   1386c:	b	1380c <putchar_unlocked@plt+0x2aac>
   13870:	push	{r0, r1, r4, lr}
   13874:	subs	r4, r0, #0
   13878:	bne	1388c <putchar_unlocked@plt+0x2b2c>
   1387c:	mov	r0, r4
   13880:	add	sp, sp, #8
   13884:	pop	{r4, lr}
   13888:	b	10b80 <fflush@plt>
   1388c:	bl	10c64 <__freading@plt>
   13890:	cmp	r0, #0
   13894:	beq	1387c <putchar_unlocked@plt+0x2b1c>
   13898:	ldr	r3, [r4]
   1389c:	tst	r3, #256	; 0x100
   138a0:	beq	1387c <putchar_unlocked@plt+0x2b1c>
   138a4:	mov	r3, #1
   138a8:	str	r3, [sp]
   138ac:	mov	r2, #0
   138b0:	mov	r3, #0
   138b4:	mov	r0, r4
   138b8:	bl	138c0 <putchar_unlocked@plt+0x2b60>
   138bc:	b	1387c <putchar_unlocked@plt+0x2b1c>
   138c0:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   138c4:	mov	r4, r0
   138c8:	ldmib	r0, {ip, lr}
   138cc:	ldr	r8, [sp, #32]
   138d0:	cmp	lr, ip
   138d4:	bne	13940 <putchar_unlocked@plt+0x2be0>
   138d8:	ldr	lr, [r0, #20]
   138dc:	ldr	ip, [r0, #16]
   138e0:	cmp	lr, ip
   138e4:	bne	13940 <putchar_unlocked@plt+0x2be0>
   138e8:	ldr	r5, [r0, #36]	; 0x24
   138ec:	cmp	r5, #0
   138f0:	bne	13940 <putchar_unlocked@plt+0x2be0>
   138f4:	mov	r6, r2
   138f8:	mov	r7, r3
   138fc:	bl	10cdc <fileno@plt>
   13900:	mov	r2, r6
   13904:	mov	r3, r7
   13908:	str	r8, [sp]
   1390c:	bl	10c04 <lseek64@plt>
   13910:	mvn	r3, #0
   13914:	mvn	r2, #0
   13918:	cmp	r1, r3
   1391c:	cmpeq	r0, r2
   13920:	mvneq	r0, #0
   13924:	ldrne	r3, [r4]
   13928:	strdne	r0, [r4, #80]	; 0x50
   1392c:	movne	r0, r5
   13930:	bicne	r3, r3, #16
   13934:	strne	r3, [r4]
   13938:	add	sp, sp, #8
   1393c:	pop	{r4, r5, r6, r7, r8, pc}
   13940:	str	r8, [sp, #32]
   13944:	mov	r0, r4
   13948:	add	sp, sp, #8
   1394c:	pop	{r4, r5, r6, r7, r8, lr}
   13950:	b	10d00 <fseeko64@plt>
   13954:	push	{r4, lr}
   13958:	mov	r0, #14
   1395c:	bl	10d24 <nl_langinfo@plt>
   13960:	ldr	r3, [pc, #24]	; 13980 <putchar_unlocked@plt+0x2c20>
   13964:	cmp	r0, #0
   13968:	moveq	r0, r3
   1396c:	ldr	r3, [pc, #16]	; 13984 <putchar_unlocked@plt+0x2c24>
   13970:	ldrb	r2, [r0]
   13974:	cmp	r2, #0
   13978:	moveq	r0, r3
   1397c:	pop	{r4, pc}
   13980:	andeq	r4, r1, sp, ror r3
   13984:	andeq	r4, r1, r4, ror r9
   13988:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1398c:	subs	r5, r0, #0
   13990:	addeq	r5, sp, #4
   13994:	mov	r0, r5
   13998:	mov	r7, r2
   1399c:	mov	r6, r1
   139a0:	bl	10c34 <mbrtowc@plt>
   139a4:	cmp	r7, #0
   139a8:	cmnne	r0, #3
   139ac:	mov	r4, r0
   139b0:	bls	139cc <putchar_unlocked@plt+0x2c6c>
   139b4:	mov	r0, #0
   139b8:	bl	13a24 <putchar_unlocked@plt+0x2cc4>
   139bc:	cmp	r0, #0
   139c0:	moveq	r4, #1
   139c4:	ldrbeq	r3, [r6]
   139c8:	streq	r3, [r5]
   139cc:	mov	r0, r4
   139d0:	add	sp, sp, #12
   139d4:	pop	{r4, r5, r6, r7, pc}
   139d8:	push	{r4, r5, r6, lr}
   139dc:	subs	r4, r2, #0
   139e0:	mov	r6, r0
   139e4:	mov	r5, r1
   139e8:	beq	13a00 <putchar_unlocked@plt+0x2ca0>
   139ec:	mov	r1, r4
   139f0:	mvn	r0, #0
   139f4:	bl	13b04 <putchar_unlocked@plt+0x2da4>
   139f8:	cmp	r0, r5
   139fc:	bcc	13a10 <putchar_unlocked@plt+0x2cb0>
   13a00:	mul	r1, r5, r4
   13a04:	mov	r0, r6
   13a08:	pop	{r4, r5, r6, lr}
   13a0c:	b	1366c <putchar_unlocked@plt+0x290c>
   13a10:	bl	10cac <__errno_location@plt>
   13a14:	mov	r3, #12
   13a18:	str	r3, [r0]
   13a1c:	mov	r0, #0
   13a20:	pop	{r4, r5, r6, pc}
   13a24:	push	{lr}		; (str lr, [sp, #-4]!)
   13a28:	sub	sp, sp, #268	; 0x10c
   13a2c:	ldr	r2, [pc, #64]	; 13a74 <putchar_unlocked@plt+0x2d14>
   13a30:	add	r1, sp, #4
   13a34:	bl	13a80 <putchar_unlocked@plt+0x2d20>
   13a38:	cmp	r0, #0
   13a3c:	movne	r0, #0
   13a40:	bne	13a6c <putchar_unlocked@plt+0x2d0c>
   13a44:	ldr	r1, [pc, #44]	; 13a78 <putchar_unlocked@plt+0x2d18>
   13a48:	add	r0, sp, #4
   13a4c:	bl	10b74 <strcmp@plt>
   13a50:	cmp	r0, #0
   13a54:	beq	13a6c <putchar_unlocked@plt+0x2d0c>
   13a58:	ldr	r1, [pc, #28]	; 13a7c <putchar_unlocked@plt+0x2d1c>
   13a5c:	add	r0, sp, #4
   13a60:	bl	10b74 <strcmp@plt>
   13a64:	adds	r0, r0, #0
   13a68:	movne	r0, #1
   13a6c:	add	sp, sp, #268	; 0x10c
   13a70:	pop	{pc}		; (ldr pc, [sp], #4)
   13a74:	andeq	r0, r0, r1, lsl #2
   13a78:	andeq	r4, r1, sl, ror r9
   13a7c:	andeq	r4, r1, ip, ror r9
   13a80:	push	{r4, r5, r6, lr}
   13a84:	mov	r5, r1
   13a88:	mov	r1, #0
   13a8c:	mov	r4, r2
   13a90:	bl	10d0c <setlocale@plt>
   13a94:	subs	r6, r0, #0
   13a98:	bne	13aac <putchar_unlocked@plt+0x2d4c>
   13a9c:	cmp	r4, #0
   13aa0:	strbne	r6, [r5]
   13aa4:	mov	r0, #22
   13aa8:	pop	{r4, r5, r6, pc}
   13aac:	bl	10ca0 <strlen@plt>
   13ab0:	cmp	r4, r0
   13ab4:	bls	13ad0 <putchar_unlocked@plt+0x2d70>
   13ab8:	add	r2, r0, #1
   13abc:	mov	r1, r6
   13ac0:	mov	r0, r5
   13ac4:	bl	10ba4 <memcpy@plt>
   13ac8:	mov	r0, #0
   13acc:	pop	{r4, r5, r6, pc}
   13ad0:	cmp	r4, #0
   13ad4:	beq	13af4 <putchar_unlocked@plt+0x2d94>
   13ad8:	sub	r4, r4, #1
   13adc:	mov	r2, r4
   13ae0:	mov	r1, r6
   13ae4:	mov	r0, r5
   13ae8:	bl	10ba4 <memcpy@plt>
   13aec:	mov	r3, #0
   13af0:	strb	r3, [r5, r4]
   13af4:	mov	r0, #34	; 0x22
   13af8:	pop	{r4, r5, r6, pc}
   13afc:	mov	r1, #0
   13b00:	b	10d0c <setlocale@plt>
   13b04:	subs	r2, r1, #1
   13b08:	bxeq	lr
   13b0c:	bcc	13ce4 <putchar_unlocked@plt+0x2f84>
   13b10:	cmp	r0, r1
   13b14:	bls	13cc8 <putchar_unlocked@plt+0x2f68>
   13b18:	tst	r1, r2
   13b1c:	beq	13cd4 <putchar_unlocked@plt+0x2f74>
   13b20:	clz	r3, r0
   13b24:	clz	r2, r1
   13b28:	sub	r3, r2, r3
   13b2c:	rsbs	r3, r3, #31
   13b30:	addne	r3, r3, r3, lsl #1
   13b34:	mov	r2, #0
   13b38:	addne	pc, pc, r3, lsl #2
   13b3c:	nop			; (mov r0, r0)
   13b40:	cmp	r0, r1, lsl #31
   13b44:	adc	r2, r2, r2
   13b48:	subcs	r0, r0, r1, lsl #31
   13b4c:	cmp	r0, r1, lsl #30
   13b50:	adc	r2, r2, r2
   13b54:	subcs	r0, r0, r1, lsl #30
   13b58:	cmp	r0, r1, lsl #29
   13b5c:	adc	r2, r2, r2
   13b60:	subcs	r0, r0, r1, lsl #29
   13b64:	cmp	r0, r1, lsl #28
   13b68:	adc	r2, r2, r2
   13b6c:	subcs	r0, r0, r1, lsl #28
   13b70:	cmp	r0, r1, lsl #27
   13b74:	adc	r2, r2, r2
   13b78:	subcs	r0, r0, r1, lsl #27
   13b7c:	cmp	r0, r1, lsl #26
   13b80:	adc	r2, r2, r2
   13b84:	subcs	r0, r0, r1, lsl #26
   13b88:	cmp	r0, r1, lsl #25
   13b8c:	adc	r2, r2, r2
   13b90:	subcs	r0, r0, r1, lsl #25
   13b94:	cmp	r0, r1, lsl #24
   13b98:	adc	r2, r2, r2
   13b9c:	subcs	r0, r0, r1, lsl #24
   13ba0:	cmp	r0, r1, lsl #23
   13ba4:	adc	r2, r2, r2
   13ba8:	subcs	r0, r0, r1, lsl #23
   13bac:	cmp	r0, r1, lsl #22
   13bb0:	adc	r2, r2, r2
   13bb4:	subcs	r0, r0, r1, lsl #22
   13bb8:	cmp	r0, r1, lsl #21
   13bbc:	adc	r2, r2, r2
   13bc0:	subcs	r0, r0, r1, lsl #21
   13bc4:	cmp	r0, r1, lsl #20
   13bc8:	adc	r2, r2, r2
   13bcc:	subcs	r0, r0, r1, lsl #20
   13bd0:	cmp	r0, r1, lsl #19
   13bd4:	adc	r2, r2, r2
   13bd8:	subcs	r0, r0, r1, lsl #19
   13bdc:	cmp	r0, r1, lsl #18
   13be0:	adc	r2, r2, r2
   13be4:	subcs	r0, r0, r1, lsl #18
   13be8:	cmp	r0, r1, lsl #17
   13bec:	adc	r2, r2, r2
   13bf0:	subcs	r0, r0, r1, lsl #17
   13bf4:	cmp	r0, r1, lsl #16
   13bf8:	adc	r2, r2, r2
   13bfc:	subcs	r0, r0, r1, lsl #16
   13c00:	cmp	r0, r1, lsl #15
   13c04:	adc	r2, r2, r2
   13c08:	subcs	r0, r0, r1, lsl #15
   13c0c:	cmp	r0, r1, lsl #14
   13c10:	adc	r2, r2, r2
   13c14:	subcs	r0, r0, r1, lsl #14
   13c18:	cmp	r0, r1, lsl #13
   13c1c:	adc	r2, r2, r2
   13c20:	subcs	r0, r0, r1, lsl #13
   13c24:	cmp	r0, r1, lsl #12
   13c28:	adc	r2, r2, r2
   13c2c:	subcs	r0, r0, r1, lsl #12
   13c30:	cmp	r0, r1, lsl #11
   13c34:	adc	r2, r2, r2
   13c38:	subcs	r0, r0, r1, lsl #11
   13c3c:	cmp	r0, r1, lsl #10
   13c40:	adc	r2, r2, r2
   13c44:	subcs	r0, r0, r1, lsl #10
   13c48:	cmp	r0, r1, lsl #9
   13c4c:	adc	r2, r2, r2
   13c50:	subcs	r0, r0, r1, lsl #9
   13c54:	cmp	r0, r1, lsl #8
   13c58:	adc	r2, r2, r2
   13c5c:	subcs	r0, r0, r1, lsl #8
   13c60:	cmp	r0, r1, lsl #7
   13c64:	adc	r2, r2, r2
   13c68:	subcs	r0, r0, r1, lsl #7
   13c6c:	cmp	r0, r1, lsl #6
   13c70:	adc	r2, r2, r2
   13c74:	subcs	r0, r0, r1, lsl #6
   13c78:	cmp	r0, r1, lsl #5
   13c7c:	adc	r2, r2, r2
   13c80:	subcs	r0, r0, r1, lsl #5
   13c84:	cmp	r0, r1, lsl #4
   13c88:	adc	r2, r2, r2
   13c8c:	subcs	r0, r0, r1, lsl #4
   13c90:	cmp	r0, r1, lsl #3
   13c94:	adc	r2, r2, r2
   13c98:	subcs	r0, r0, r1, lsl #3
   13c9c:	cmp	r0, r1, lsl #2
   13ca0:	adc	r2, r2, r2
   13ca4:	subcs	r0, r0, r1, lsl #2
   13ca8:	cmp	r0, r1, lsl #1
   13cac:	adc	r2, r2, r2
   13cb0:	subcs	r0, r0, r1, lsl #1
   13cb4:	cmp	r0, r1
   13cb8:	adc	r2, r2, r2
   13cbc:	subcs	r0, r0, r1
   13cc0:	mov	r0, r2
   13cc4:	bx	lr
   13cc8:	moveq	r0, #1
   13ccc:	movne	r0, #0
   13cd0:	bx	lr
   13cd4:	clz	r2, r1
   13cd8:	rsb	r2, r2, #31
   13cdc:	lsr	r0, r0, r2
   13ce0:	bx	lr
   13ce4:	cmp	r0, #0
   13ce8:	mvnne	r0, #0
   13cec:	b	13f50 <putchar_unlocked@plt+0x31f0>
   13cf0:	cmp	r1, #0
   13cf4:	beq	13ce4 <putchar_unlocked@plt+0x2f84>
   13cf8:	push	{r0, r1, lr}
   13cfc:	bl	13b04 <putchar_unlocked@plt+0x2da4>
   13d00:	pop	{r1, r2, lr}
   13d04:	mul	r3, r2, r0
   13d08:	sub	r1, r1, r3
   13d0c:	bx	lr
   13d10:	cmp	r1, #0
   13d14:	beq	13f20 <putchar_unlocked@plt+0x31c0>
   13d18:	eor	ip, r0, r1
   13d1c:	rsbmi	r1, r1, #0
   13d20:	subs	r2, r1, #1
   13d24:	beq	13eec <putchar_unlocked@plt+0x318c>
   13d28:	movs	r3, r0
   13d2c:	rsbmi	r3, r0, #0
   13d30:	cmp	r3, r1
   13d34:	bls	13ef8 <putchar_unlocked@plt+0x3198>
   13d38:	tst	r1, r2
   13d3c:	beq	13f08 <putchar_unlocked@plt+0x31a8>
   13d40:	clz	r2, r3
   13d44:	clz	r0, r1
   13d48:	sub	r2, r0, r2
   13d4c:	rsbs	r2, r2, #31
   13d50:	addne	r2, r2, r2, lsl #1
   13d54:	mov	r0, #0
   13d58:	addne	pc, pc, r2, lsl #2
   13d5c:	nop			; (mov r0, r0)
   13d60:	cmp	r3, r1, lsl #31
   13d64:	adc	r0, r0, r0
   13d68:	subcs	r3, r3, r1, lsl #31
   13d6c:	cmp	r3, r1, lsl #30
   13d70:	adc	r0, r0, r0
   13d74:	subcs	r3, r3, r1, lsl #30
   13d78:	cmp	r3, r1, lsl #29
   13d7c:	adc	r0, r0, r0
   13d80:	subcs	r3, r3, r1, lsl #29
   13d84:	cmp	r3, r1, lsl #28
   13d88:	adc	r0, r0, r0
   13d8c:	subcs	r3, r3, r1, lsl #28
   13d90:	cmp	r3, r1, lsl #27
   13d94:	adc	r0, r0, r0
   13d98:	subcs	r3, r3, r1, lsl #27
   13d9c:	cmp	r3, r1, lsl #26
   13da0:	adc	r0, r0, r0
   13da4:	subcs	r3, r3, r1, lsl #26
   13da8:	cmp	r3, r1, lsl #25
   13dac:	adc	r0, r0, r0
   13db0:	subcs	r3, r3, r1, lsl #25
   13db4:	cmp	r3, r1, lsl #24
   13db8:	adc	r0, r0, r0
   13dbc:	subcs	r3, r3, r1, lsl #24
   13dc0:	cmp	r3, r1, lsl #23
   13dc4:	adc	r0, r0, r0
   13dc8:	subcs	r3, r3, r1, lsl #23
   13dcc:	cmp	r3, r1, lsl #22
   13dd0:	adc	r0, r0, r0
   13dd4:	subcs	r3, r3, r1, lsl #22
   13dd8:	cmp	r3, r1, lsl #21
   13ddc:	adc	r0, r0, r0
   13de0:	subcs	r3, r3, r1, lsl #21
   13de4:	cmp	r3, r1, lsl #20
   13de8:	adc	r0, r0, r0
   13dec:	subcs	r3, r3, r1, lsl #20
   13df0:	cmp	r3, r1, lsl #19
   13df4:	adc	r0, r0, r0
   13df8:	subcs	r3, r3, r1, lsl #19
   13dfc:	cmp	r3, r1, lsl #18
   13e00:	adc	r0, r0, r0
   13e04:	subcs	r3, r3, r1, lsl #18
   13e08:	cmp	r3, r1, lsl #17
   13e0c:	adc	r0, r0, r0
   13e10:	subcs	r3, r3, r1, lsl #17
   13e14:	cmp	r3, r1, lsl #16
   13e18:	adc	r0, r0, r0
   13e1c:	subcs	r3, r3, r1, lsl #16
   13e20:	cmp	r3, r1, lsl #15
   13e24:	adc	r0, r0, r0
   13e28:	subcs	r3, r3, r1, lsl #15
   13e2c:	cmp	r3, r1, lsl #14
   13e30:	adc	r0, r0, r0
   13e34:	subcs	r3, r3, r1, lsl #14
   13e38:	cmp	r3, r1, lsl #13
   13e3c:	adc	r0, r0, r0
   13e40:	subcs	r3, r3, r1, lsl #13
   13e44:	cmp	r3, r1, lsl #12
   13e48:	adc	r0, r0, r0
   13e4c:	subcs	r3, r3, r1, lsl #12
   13e50:	cmp	r3, r1, lsl #11
   13e54:	adc	r0, r0, r0
   13e58:	subcs	r3, r3, r1, lsl #11
   13e5c:	cmp	r3, r1, lsl #10
   13e60:	adc	r0, r0, r0
   13e64:	subcs	r3, r3, r1, lsl #10
   13e68:	cmp	r3, r1, lsl #9
   13e6c:	adc	r0, r0, r0
   13e70:	subcs	r3, r3, r1, lsl #9
   13e74:	cmp	r3, r1, lsl #8
   13e78:	adc	r0, r0, r0
   13e7c:	subcs	r3, r3, r1, lsl #8
   13e80:	cmp	r3, r1, lsl #7
   13e84:	adc	r0, r0, r0
   13e88:	subcs	r3, r3, r1, lsl #7
   13e8c:	cmp	r3, r1, lsl #6
   13e90:	adc	r0, r0, r0
   13e94:	subcs	r3, r3, r1, lsl #6
   13e98:	cmp	r3, r1, lsl #5
   13e9c:	adc	r0, r0, r0
   13ea0:	subcs	r3, r3, r1, lsl #5
   13ea4:	cmp	r3, r1, lsl #4
   13ea8:	adc	r0, r0, r0
   13eac:	subcs	r3, r3, r1, lsl #4
   13eb0:	cmp	r3, r1, lsl #3
   13eb4:	adc	r0, r0, r0
   13eb8:	subcs	r3, r3, r1, lsl #3
   13ebc:	cmp	r3, r1, lsl #2
   13ec0:	adc	r0, r0, r0
   13ec4:	subcs	r3, r3, r1, lsl #2
   13ec8:	cmp	r3, r1, lsl #1
   13ecc:	adc	r0, r0, r0
   13ed0:	subcs	r3, r3, r1, lsl #1
   13ed4:	cmp	r3, r1
   13ed8:	adc	r0, r0, r0
   13edc:	subcs	r3, r3, r1
   13ee0:	cmp	ip, #0
   13ee4:	rsbmi	r0, r0, #0
   13ee8:	bx	lr
   13eec:	teq	ip, r0
   13ef0:	rsbmi	r0, r0, #0
   13ef4:	bx	lr
   13ef8:	movcc	r0, #0
   13efc:	asreq	r0, ip, #31
   13f00:	orreq	r0, r0, #1
   13f04:	bx	lr
   13f08:	clz	r2, r1
   13f0c:	rsb	r2, r2, #31
   13f10:	cmp	ip, #0
   13f14:	lsr	r0, r3, r2
   13f18:	rsbmi	r0, r0, #0
   13f1c:	bx	lr
   13f20:	cmp	r0, #0
   13f24:	mvngt	r0, #-2147483648	; 0x80000000
   13f28:	movlt	r0, #-2147483648	; 0x80000000
   13f2c:	b	13f50 <putchar_unlocked@plt+0x31f0>
   13f30:	cmp	r1, #0
   13f34:	beq	13f20 <putchar_unlocked@plt+0x31c0>
   13f38:	push	{r0, r1, lr}
   13f3c:	bl	13d18 <putchar_unlocked@plt+0x2fb8>
   13f40:	pop	{r1, r2, lr}
   13f44:	mul	r3, r2, r0
   13f48:	sub	r1, r1, r3
   13f4c:	bx	lr
   13f50:	push	{r1, lr}
   13f54:	mov	r0, #8
   13f58:	bl	10b68 <raise@plt>
   13f5c:	pop	{r1, pc}
   13f60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f64:	mov	r7, r0
   13f68:	ldr	r6, [pc, #72]	; 13fb8 <putchar_unlocked@plt+0x3258>
   13f6c:	ldr	r5, [pc, #72]	; 13fbc <putchar_unlocked@plt+0x325c>
   13f70:	add	r6, pc, r6
   13f74:	add	r5, pc, r5
   13f78:	sub	r6, r6, r5
   13f7c:	mov	r8, r1
   13f80:	mov	r9, r2
   13f84:	bl	10b30 <calloc@plt-0x20>
   13f88:	asrs	r6, r6, #2
   13f8c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f90:	mov	r4, #0
   13f94:	add	r4, r4, #1
   13f98:	ldr	r3, [r5], #4
   13f9c:	mov	r2, r9
   13fa0:	mov	r1, r8
   13fa4:	mov	r0, r7
   13fa8:	blx	r3
   13fac:	cmp	r6, r4
   13fb0:	bne	13f94 <putchar_unlocked@plt+0x3234>
   13fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13fb8:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   13fbc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13fc0:	bx	lr
   13fc4:	ldr	r3, [pc, #12]	; 13fd8 <putchar_unlocked@plt+0x3278>
   13fc8:	mov	r1, #0
   13fcc:	add	r3, pc, r3
   13fd0:	ldr	r2, [r3]
   13fd4:	b	10cb8 <__cxa_atexit@plt>
   13fd8:	strdeq	r1, [r1], -r4

Disassembly of section .fini:

00013fdc <.fini>:
   13fdc:	push	{r3, lr}
   13fe0:	pop	{r3, pc}
