
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

00010e2c <.init>:
   10e2c:	push	{r3, lr}
   10e30:	bl	10f6c <_start@@Base+0x3c>
   10e34:	pop	{r3, pc}

Disassembly of section .plt:

00010e38 <calloc@plt-0x14>:
   10e38:	push	{lr}		; (str lr, [sp, #-4]!)
   10e3c:	ldr	lr, [pc, #4]	; 10e48 <calloc@plt-0x4>
   10e40:	add	lr, pc, lr
   10e44:	ldr	pc, [lr, #8]!
   10e48:			; <UNDEFINED> instruction: 0x000121b8

00010e4c <calloc@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #73728	; 0x12000
   10e54:	ldr	pc, [ip, #440]!	; 0x1b8

00010e58 <strcmp@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #73728	; 0x12000
   10e60:	ldr	pc, [ip, #432]!	; 0x1b0

00010e64 <strtol@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #73728	; 0x12000
   10e6c:	ldr	pc, [ip, #424]!	; 0x1a8

00010e70 <printf@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #73728	; 0x12000
   10e78:	ldr	pc, [ip, #416]!	; 0x1a0

00010e7c <__isoc99_fscanf@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #73728	; 0x12000
   10e84:	ldr	pc, [ip, #408]!	; 0x198

00010e88 <fopen@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #73728	; 0x12000
   10e90:	ldr	pc, [ip, #400]!	; 0x190

00010e94 <free@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #73728	; 0x12000
   10e9c:	ldr	pc, [ip, #392]!	; 0x188

00010ea0 <realloc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #73728	; 0x12000
   10ea8:	ldr	pc, [ip, #384]!	; 0x180

00010eac <strcpy@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #73728	; 0x12000
   10eb4:	ldr	pc, [ip, #376]!	; 0x178

00010eb8 <puts@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #73728	; 0x12000
   10ec0:	ldr	pc, [ip, #368]!	; 0x170

00010ec4 <malloc@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #73728	; 0x12000
   10ecc:	ldr	pc, [ip, #360]!	; 0x168

00010ed0 <__libc_start_main@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #352]!	; 0x160

00010edc <__gmon_start__@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #344]!	; 0x158

00010ee8 <strlen@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #336]!	; 0x150

00010ef4 <setvbuf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #328]!	; 0x148

00010f00 <putchar@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #320]!	; 0x140

00010f0c <fclose@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #312]!	; 0x138

00010f18 <getline@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #304]!	; 0x130

00010f24 <abort@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #296]!	; 0x128

Disassembly of section .text:

00010f30 <_start@@Base>:
   10f30:	mov	fp, #0
   10f34:	mov	lr, #0
   10f38:	pop	{r1}		; (ldr r1, [sp], #4)
   10f3c:	mov	r2, sp
   10f40:	push	{r2}		; (str r2, [sp, #-4]!)
   10f44:	push	{r0}		; (str r0, [sp, #-4]!)
   10f48:	ldr	ip, [pc, #16]	; 10f60 <_start@@Base+0x30>
   10f4c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f50:	ldr	r0, [pc, #12]	; 10f64 <_start@@Base+0x34>
   10f54:	ldr	r3, [pc, #12]	; 10f68 <_start@@Base+0x38>
   10f58:	bl	10ed0 <__libc_start_main@plt>
   10f5c:	bl	10f24 <abort@plt>
   10f60:	ldrdeq	r2, [r1], -ip
   10f64:	andeq	r1, r1, ip, asr #6
   10f68:	andeq	r2, r1, ip, ror fp
   10f6c:	ldr	r3, [pc, #20]	; 10f88 <_start@@Base+0x58>
   10f70:	ldr	r2, [pc, #20]	; 10f8c <_start@@Base+0x5c>
   10f74:	add	r3, pc, r3
   10f78:	ldr	r2, [r3, r2]
   10f7c:	cmp	r2, #0
   10f80:	bxeq	lr
   10f84:	b	10edc <__gmon_start__@plt>
   10f88:	andeq	r2, r1, r4, lsl #1
   10f8c:	andeq	r0, r0, r8, asr r0
   10f90:	ldr	r0, [pc, #24]	; 10fb0 <_start@@Base+0x80>
   10f94:	ldr	r3, [pc, #24]	; 10fb4 <_start@@Base+0x84>
   10f98:	cmp	r3, r0
   10f9c:	bxeq	lr
   10fa0:	ldr	r3, [pc, #16]	; 10fb8 <_start@@Base+0x88>
   10fa4:	cmp	r3, #0
   10fa8:	bxeq	lr
   10fac:	bx	r3
   10fb0:	andeq	r3, r2, r4, rrx
   10fb4:	andeq	r3, r2, r4, rrx
   10fb8:	andeq	r0, r0, r0
   10fbc:	ldr	r0, [pc, #36]	; 10fe8 <_start@@Base+0xb8>
   10fc0:	ldr	r1, [pc, #36]	; 10fec <_start@@Base+0xbc>
   10fc4:	sub	r1, r1, r0
   10fc8:	asr	r1, r1, #2
   10fcc:	add	r1, r1, r1, lsr #31
   10fd0:	asrs	r1, r1, #1
   10fd4:	bxeq	lr
   10fd8:	ldr	r3, [pc, #16]	; 10ff0 <_start@@Base+0xc0>
   10fdc:	cmp	r3, #0
   10fe0:	bxeq	lr
   10fe4:	bx	r3
   10fe8:	andeq	r3, r2, r4, rrx
   10fec:	andeq	r3, r2, r4, rrx
   10ff0:	andeq	r0, r0, r0
   10ff4:	push	{r4, lr}
   10ff8:	ldr	r4, [pc, #24]	; 11018 <_start@@Base+0xe8>
   10ffc:	ldrb	r3, [r4]
   11000:	cmp	r3, #0
   11004:	popne	{r4, pc}
   11008:	bl	10f90 <_start@@Base+0x60>
   1100c:	mov	r3, #1
   11010:	strb	r3, [r4]
   11014:	pop	{r4, pc}
   11018:	andeq	r3, r2, r8, rrx
   1101c:	b	10fbc <_start@@Base+0x8c>

00011020 <proximas_n_chegadas@@Base>:
   11020:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11024:	strd	r6, [sp, #8]
   11028:	strd	r8, [sp, #16]
   1102c:	strd	sl, [sp, #24]
   11030:	str	lr, [sp, #32]
   11034:	sub	sp, sp, #12
   11038:	mov	r8, r0
   1103c:	mov	r7, r1
   11040:	mov	fp, r2
   11044:	mov	sl, r3
   11048:	ldr	r4, [r2]
   1104c:	ldr	r0, [r2, #8]
   11050:	lsl	r0, r0, #2
   11054:	bl	10ec4 <malloc@plt>
   11058:	mov	r9, r0
   1105c:	cmp	r4, #0
   11060:	beq	1108c <proximas_n_chegadas@@Base+0x6c>
   11064:	sub	r5, r0, #4
   11068:	mov	r6, #200	; 0xc8
   1106c:	mov	r0, r6
   11070:	bl	10ec4 <malloc@plt>
   11074:	str	r0, [r5, #4]!
   11078:	ldr	r1, [r4]
   1107c:	bl	10eac <strcpy@plt>
   11080:	ldr	r4, [r4, #4]
   11084:	cmp	r4, #0
   11088:	bne	1106c <proximas_n_chegadas@@Base+0x4c>
   1108c:	ldr	r0, [r8, #8]
   11090:	bl	11ef4 <heap_nova@@Base>
   11094:	str	r0, [sp, #4]
   11098:	ldr	r4, [r8]
   1109c:	ldr	r5, [r7]
   110a0:	cmp	r4, #0
   110a4:	beq	110f4 <proximas_n_chegadas@@Base+0xd4>
   110a8:	mov	r7, #10
   110ac:	mov	r6, #0
   110b0:	mov	r2, r7
   110b4:	mov	r1, r6
   110b8:	ldr	r0, [r5]
   110bc:	bl	10e64 <strtol@plt>
   110c0:	ldr	r8, [r9, r0, lsl #2]
   110c4:	mov	r2, r7
   110c8:	mov	r1, r6
   110cc:	ldr	r0, [r4]
   110d0:	bl	10e64 <strtol@plt>
   110d4:	mov	r2, r0
   110d8:	mov	r1, r8
   110dc:	ldr	r0, [sp, #4]
   110e0:	bl	121ac <heap_insere@@Base>
   110e4:	ldr	r4, [r4, #4]
   110e8:	ldr	r5, [r5, #4]
   110ec:	cmp	r4, #0
   110f0:	bne	110b0 <proximas_n_chegadas@@Base+0x90>
   110f4:	ldr	r5, [fp, #8]
   110f8:	cmp	r5, #0
   110fc:	ble	11118 <proximas_n_chegadas@@Base+0xf8>
   11100:	mov	r4, r9
   11104:	add	r5, r9, r5, lsl #2
   11108:	ldr	r0, [r4], #4
   1110c:	bl	10e94 <free@plt>
   11110:	cmp	r5, r4
   11114:	bne	11108 <proximas_n_chegadas@@Base+0xe8>
   11118:	mov	r0, r9
   1111c:	bl	10e94 <free@plt>
   11120:	cmp	sl, #0
   11124:	ble	11164 <proximas_n_chegadas@@Base+0x144>
   11128:	mov	r4, #0
   1112c:	movw	r7, #11244	; 0x2bec
   11130:	movt	r7, #1
   11134:	add	r4, r4, #1
   11138:	ldr	r0, [sp, #4]
   1113c:	bl	1227c <heap_remove@@Base>
   11140:	mov	r5, r0
   11144:	mov	r2, r0
   11148:	mov	r1, r4
   1114c:	mov	r0, r7
   11150:	bl	10e70 <printf@plt>
   11154:	mov	r0, r5
   11158:	bl	10e94 <free@plt>
   1115c:	cmp	r4, sl
   11160:	bne	11134 <proximas_n_chegadas@@Base+0x114>
   11164:	ldr	r0, [sp, #4]
   11168:	bl	11f60 <heap_apaga@@Base>
   1116c:	mov	r0, #1
   11170:	add	sp, sp, #12
   11174:	ldrd	r4, [sp]
   11178:	ldrd	r6, [sp, #8]
   1117c:	ldrd	r8, [sp, #16]
   11180:	ldrd	sl, [sp, #24]
   11184:	add	sp, sp, #32
   11188:	pop	{pc}		; (ldr pc, [sp], #4)

0001118c <pesquisa_destinos@@Base>:
   1118c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11190:	strd	r6, [sp, #8]
   11194:	strd	r8, [sp, #16]
   11198:	str	sl, [sp, #24]
   1119c:	str	lr, [sp, #28]
   111a0:	mov	r7, r0
   111a4:	mov	r9, r1
   111a8:	mov	r6, r2
   111ac:	bl	1240c <lista_nova@@Base>
   111b0:	mov	r8, r0
   111b4:	ldr	r4, [r9]
   111b8:	cmp	r4, #0
   111bc:	moveq	r5, #0
   111c0:	beq	111ec <pesquisa_destinos@@Base+0x60>
   111c4:	mov	r5, #0
   111c8:	mov	r1, r6
   111cc:	ldr	r0, [r4]
   111d0:	bl	10e58 <strcmp@plt>
   111d4:	cmp	r0, #0
   111d8:	beq	111ec <pesquisa_destinos@@Base+0x60>
   111dc:	add	r5, r5, #1
   111e0:	ldr	r4, [r4, #4]
   111e4:	cmp	r4, #0
   111e8:	bne	111c8 <pesquisa_destinos@@Base+0x3c>
   111ec:	mov	r1, r5
   111f0:	mov	r0, r7
   111f4:	bl	119dc <v_sucessores@@Base>
   111f8:	mov	r7, r0
   111fc:	ldr	r3, [r0]
   11200:	cmp	r3, #0
   11204:	ble	1125c <pesquisa_destinos@@Base+0xd0>
   11208:	mov	r6, #0
   1120c:	mov	sl, r6
   11210:	b	11234 <pesquisa_destinos@@Base+0xa8>
   11214:	mov	r2, sl
   11218:	ldr	r1, [r5]
   1121c:	mov	r0, r8
   11220:	bl	124c4 <lista_insere@@Base>
   11224:	add	r6, r6, #1
   11228:	ldr	r3, [r7]
   1122c:	cmp	r3, r6
   11230:	ble	1125c <pesquisa_destinos@@Base+0xd0>
   11234:	ldr	r5, [r9]
   11238:	mov	r4, #0
   1123c:	mov	r1, r6
   11240:	mov	r0, r7
   11244:	bl	128b0 <vetor_elemento@@Base>
   11248:	cmp	r0, r4
   1124c:	ble	11214 <pesquisa_destinos@@Base+0x88>
   11250:	ldr	r5, [r5, #4]
   11254:	add	r4, r4, #1
   11258:	b	1123c <pesquisa_destinos@@Base+0xb0>
   1125c:	mov	r0, r7
   11260:	bl	12830 <vetor_apaga@@Base>
   11264:	mov	r0, r8
   11268:	ldrd	r4, [sp]
   1126c:	ldrd	r6, [sp, #8]
   11270:	ldrd	r8, [sp, #16]
   11274:	ldr	sl, [sp, #24]
   11278:	add	sp, sp, #28
   1127c:	pop	{pc}		; (ldr pc, [sp], #4)

00011280 <carrega_rotas@@Base>:
   11280:	strd	r4, [sp, #-16]!
   11284:	str	r6, [sp, #8]
   11288:	str	lr, [sp, #12]
   1128c:	sub	sp, sp, #8
   11290:	subs	r4, r1, #0
   11294:	beq	11334 <carrega_rotas@@Base+0xb4>
   11298:	mov	r5, r0
   1129c:	movw	r1, #11256	; 0x2bf8
   112a0:	movt	r1, #1
   112a4:	mov	r0, r4
   112a8:	bl	10e88 <fopen@plt>
   112ac:	subs	r6, r0, #0
   112b0:	beq	11304 <carrega_rotas@@Base+0x84>
   112b4:	mov	r0, r5
   112b8:	bl	1249c <lista_tamanho@@Base>
   112bc:	mov	r1, #0
   112c0:	bl	115b8 <grafo_novo@@Base>
   112c4:	subs	r4, r0, #0
   112c8:	beq	1131c <carrega_rotas@@Base+0x9c>
   112cc:	movw	r5, #11324	; 0x2c3c
   112d0:	movt	r5, #1
   112d4:	mov	r3, sp
   112d8:	add	r2, sp, #4
   112dc:	mov	r1, r5
   112e0:	mov	r0, r6
   112e4:	bl	10e7c <__isoc99_fscanf@plt>
   112e8:	cmp	r0, #2
   112ec:	bne	1132c <carrega_rotas@@Base+0xac>
   112f0:	ldr	r2, [sp]
   112f4:	ldr	r1, [sp, #4]
   112f8:	mov	r0, r4
   112fc:	bl	11858 <grafo_adiciona@@Base>
   11300:	b	112d4 <carrega_rotas@@Base+0x54>
   11304:	mov	r1, r4
   11308:	movw	r0, #11260	; 0x2bfc
   1130c:	movt	r0, #1
   11310:	bl	10e70 <printf@plt>
   11314:	mov	r4, r6
   11318:	b	11334 <carrega_rotas@@Base+0xb4>
   1131c:	movw	r0, #11296	; 0x2c20
   11320:	movt	r0, #1
   11324:	bl	10eb8 <puts@plt>
   11328:	b	11334 <carrega_rotas@@Base+0xb4>
   1132c:	mov	r0, r6
   11330:	bl	10f0c <fclose@plt>
   11334:	mov	r0, r4
   11338:	add	sp, sp, #8
   1133c:	ldrd	r4, [sp]
   11340:	ldr	r6, [sp, #8]
   11344:	add	sp, sp, #12
   11348:	pop	{pc}		; (ldr pc, [sp], #4)

0001134c <main@@Base>:
   1134c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11350:	strd	r6, [sp, #8]
   11354:	strd	r8, [sp, #16]
   11358:	str	lr, [sp, #24]
   1135c:	sub	sp, sp, #36	; 0x24
   11360:	movw	r0, #12388	; 0x3064
   11364:	movt	r0, #2
   11368:	mov	r3, #0
   1136c:	mov	r2, #2
   11370:	mov	r1, r3
   11374:	ldr	r0, [r0]
   11378:	bl	10ef4 <setvbuf@plt>
   1137c:	movw	r1, #11256	; 0x2bf8
   11380:	movt	r1, #1
   11384:	movw	r0, #11332	; 0x2c44
   11388:	movt	r0, #1
   1138c:	bl	10e88 <fopen@plt>
   11390:	mov	r7, r0
   11394:	bl	1240c <lista_nova@@Base>
   11398:	mov	r6, r0
   1139c:	mov	r3, #0
   113a0:	str	r3, [sp, #28]
   113a4:	str	r3, [sp, #24]
   113a8:	mov	r5, r3
   113ac:	mov	r2, r7
   113b0:	add	r1, sp, #24
   113b4:	add	r0, sp, #28
   113b8:	bl	10f18 <getline@plt>
   113bc:	cmn	r0, #1
   113c0:	beq	113ec <main@@Base+0xa0>
   113c4:	ldr	r4, [sp, #28]
   113c8:	mov	r0, r4
   113cc:	bl	10ee8 <strlen@plt>
   113d0:	add	r0, r4, r0
   113d4:	strb	r5, [r0, #-1]
   113d8:	mov	r2, r5
   113dc:	ldr	r1, [sp, #28]
   113e0:	mov	r0, r6
   113e4:	bl	124c4 <lista_insere@@Base>
   113e8:	b	113ac <main@@Base+0x60>
   113ec:	ldr	r0, [sp, #28]
   113f0:	bl	10e94 <free@plt>
   113f4:	mov	r0, r7
   113f8:	bl	10f0c <fclose@plt>
   113fc:	movw	r1, #11348	; 0x2c54
   11400:	movt	r1, #1
   11404:	mov	r0, r6
   11408:	bl	11280 <carrega_rotas@@Base>
   1140c:	mov	r9, r0
   11410:	movw	r0, #11360	; 0x2c60
   11414:	movt	r0, #1
   11418:	bl	10eb8 <puts@plt>
   1141c:	movw	r1, #11256	; 0x2bf8
   11420:	movt	r1, #1
   11424:	movw	r0, #11380	; 0x2c74
   11428:	movt	r0, #1
   1142c:	bl	10e88 <fopen@plt>
   11430:	mov	r5, r0
   11434:	bl	1240c <lista_nova@@Base>
   11438:	mov	r8, r0
   1143c:	bl	1240c <lista_nova@@Base>
   11440:	mov	r7, r0
   11444:	movw	r4, #11396	; 0x2c84
   11448:	movt	r4, #1
   1144c:	b	11470 <main@@Base+0x124>
   11450:	mov	r2, #0
   11454:	add	r1, sp, #4
   11458:	mov	r0, r8
   1145c:	bl	124c4 <lista_insere@@Base>
   11460:	mov	r2, #0
   11464:	add	r1, sp, #12
   11468:	mov	r0, r7
   1146c:	bl	124c4 <lista_insere@@Base>
   11470:	add	r3, sp, #12
   11474:	add	r2, sp, #4
   11478:	mov	r1, r4
   1147c:	mov	r0, r5
   11480:	bl	10e7c <__isoc99_fscanf@plt>
   11484:	cmp	r0, #2
   11488:	beq	11450 <main@@Base+0x104>
   1148c:	mov	r3, #5
   11490:	mov	r2, r6
   11494:	mov	r1, r7
   11498:	mov	r0, r8
   1149c:	bl	11020 <proximas_n_chegadas@@Base>
   114a0:	cmp	r0, #1
   114a4:	bne	1155c <main@@Base+0x210>
   114a8:	mov	r0, r8
   114ac:	bl	12440 <lista_apaga@@Base>
   114b0:	mov	r0, r7
   114b4:	bl	12440 <lista_apaga@@Base>
   114b8:	mov	r0, r5
   114bc:	bl	10f0c <fclose@plt>
   114c0:	movw	r0, #11432	; 0x2ca8
   114c4:	movt	r0, #1
   114c8:	bl	10eb8 <puts@plt>
   114cc:	movw	r2, #11452	; 0x2cbc
   114d0:	movt	r2, #1
   114d4:	mov	r1, r6
   114d8:	mov	r0, r9
   114dc:	bl	1118c <pesquisa_destinos@@Base>
   114e0:	subs	r5, r0, #0
   114e4:	beq	1156c <main@@Base+0x220>
   114e8:	mov	r0, r5
   114ec:	bl	1249c <lista_tamanho@@Base>
   114f0:	mov	r2, r0
   114f4:	movw	r1, #11452	; 0x2cbc
   114f8:	movt	r1, #1
   114fc:	movw	r0, #11504	; 0x2cf0
   11500:	movt	r0, #1
   11504:	bl	10e70 <printf@plt>
   11508:	ldr	r4, [r5]
   1150c:	cmp	r4, #0
   11510:	beq	11528 <main@@Base+0x1dc>
   11514:	ldr	r0, [r4]
   11518:	bl	10eb8 <puts@plt>
   1151c:	ldr	r4, [r4, #4]
   11520:	cmp	r4, #0
   11524:	bne	11514 <main@@Base+0x1c8>
   11528:	mov	r0, r5
   1152c:	bl	12440 <lista_apaga@@Base>
   11530:	mov	r0, r9
   11534:	bl	11624 <grafo_apaga@@Base>
   11538:	mov	r0, r6
   1153c:	bl	12440 <lista_apaga@@Base>
   11540:	mov	r0, #0
   11544:	add	sp, sp, #36	; 0x24
   11548:	ldrd	r4, [sp]
   1154c:	ldrd	r6, [sp, #8]
   11550:	ldrd	r8, [sp, #16]
   11554:	add	sp, sp, #24
   11558:	pop	{pc}		; (ldr pc, [sp], #4)
   1155c:	movw	r0, #11404	; 0x2c8c
   11560:	movt	r0, #1
   11564:	bl	10eb8 <puts@plt>
   11568:	b	114a8 <main@@Base+0x15c>
   1156c:	movw	r1, #11452	; 0x2cbc
   11570:	movt	r1, #1
   11574:	movw	r0, #11464	; 0x2cc8
   11578:	movt	r0, #1
   1157c:	bl	10e70 <printf@plt>
   11580:	b	11530 <main@@Base+0x1e4>

00011584 <cria_no@@Base>:
   11584:	str	r4, [sp, #-8]!
   11588:	str	lr, [sp, #4]
   1158c:	mov	r4, r0
   11590:	mov	r0, #8
   11594:	bl	10ec4 <malloc@plt>
   11598:	cmp	r0, #0
   1159c:	beq	115ac <cria_no@@Base+0x28>
   115a0:	str	r4, [r0]
   115a4:	mov	r3, #0
   115a8:	str	r3, [r0, #4]
   115ac:	ldr	r4, [sp]
   115b0:	add	sp, sp, #4
   115b4:	pop	{pc}		; (ldr pc, [sp], #4)

000115b8 <grafo_novo@@Base>:
   115b8:	strd	r4, [sp, #-16]!
   115bc:	str	r6, [sp, #8]
   115c0:	str	lr, [sp, #12]
   115c4:	mov	r5, r0
   115c8:	mov	r6, r1
   115cc:	mov	r0, #12
   115d0:	bl	10ec4 <malloc@plt>
   115d4:	subs	r4, r0, #0
   115d8:	beq	11600 <grafo_novo@@Base+0x48>
   115dc:	str	r5, [r4, #4]
   115e0:	str	r6, [r4]
   115e4:	mov	r1, #8
   115e8:	mov	r0, r5
   115ec:	bl	10e4c <calloc@plt>
   115f0:	mov	r5, r0
   115f4:	str	r0, [r4, #8]
   115f8:	cmp	r0, #0
   115fc:	beq	11614 <grafo_novo@@Base+0x5c>
   11600:	mov	r0, r4
   11604:	ldrd	r4, [sp]
   11608:	ldr	r6, [sp, #8]
   1160c:	add	sp, sp, #12
   11610:	pop	{pc}		; (ldr pc, [sp], #4)
   11614:	mov	r0, r4
   11618:	bl	10e94 <free@plt>
   1161c:	mov	r4, r5
   11620:	b	11600 <grafo_novo@@Base+0x48>

00011624 <grafo_apaga@@Base>:
   11624:	strd	r4, [sp, #-16]!
   11628:	str	r6, [sp, #8]
   1162c:	str	lr, [sp, #12]
   11630:	subs	r4, r0, #0
   11634:	beq	11664 <grafo_apaga@@Base+0x40>
   11638:	ldr	r3, [r4, #8]
   1163c:	cmp	r3, #0
   11640:	beq	1165c <grafo_apaga@@Base+0x38>
   11644:	ldr	r3, [r4, #4]
   11648:	cmp	r3, #0
   1164c:	movgt	r6, #0
   11650:	bgt	11684 <grafo_apaga@@Base+0x60>
   11654:	ldr	r0, [r4, #8]
   11658:	bl	10e94 <free@plt>
   1165c:	mov	r0, r4
   11660:	bl	10e94 <free@plt>
   11664:	ldrd	r4, [sp]
   11668:	ldr	r6, [sp, #8]
   1166c:	add	sp, sp, #12
   11670:	pop	{pc}		; (ldr pc, [sp], #4)
   11674:	add	r6, r6, #1
   11678:	ldr	r3, [r4, #4]
   1167c:	cmp	r3, r6
   11680:	ble	11654 <grafo_apaga@@Base+0x30>
   11684:	lsl	r5, r6, #3
   11688:	ldr	r3, [r4, #8]
   1168c:	add	r3, r3, r5
   11690:	ldr	r0, [r3, #4]
   11694:	cmp	r0, #0
   11698:	beq	11674 <grafo_apaga@@Base+0x50>
   1169c:	ldr	r2, [r0, #4]
   116a0:	str	r2, [r3, #4]
   116a4:	bl	10e94 <free@plt>
   116a8:	ldr	r3, [r4, #8]
   116ac:	add	r3, r3, r5
   116b0:	ldr	r0, [r3, #4]
   116b4:	cmp	r0, #0
   116b8:	bne	1169c <grafo_apaga@@Base+0x78>
   116bc:	b	11674 <grafo_apaga@@Base+0x50>

000116c0 <grafo_remove@@Base>:
   116c0:	strd	r4, [sp, #-16]!
   116c4:	str	r6, [sp, #8]
   116c8:	str	lr, [sp, #12]
   116cc:	subs	r6, r0, #0
   116d0:	beq	117e0 <grafo_remove@@Base+0x120>
   116d4:	ldr	r3, [r6, #8]
   116d8:	add	r3, r3, r1, lsl #3
   116dc:	ldr	ip, [r3, #4]
   116e0:	cmp	ip, #0
   116e4:	beq	117e0 <grafo_remove@@Base+0x120>
   116e8:	mov	r4, r2
   116ec:	mov	r5, r1
   116f0:	ldr	r2, [ip]
   116f4:	cmp	r2, r4
   116f8:	beq	11734 <grafo_remove@@Base+0x74>
   116fc:	ldr	r3, [ip, #4]
   11700:	cmp	r3, #0
   11704:	beq	1175c <grafo_remove@@Base+0x9c>
   11708:	ldr	r2, [r3]
   1170c:	cmp	r4, r2
   11710:	beq	11748 <grafo_remove@@Base+0x88>
   11714:	ldr	r0, [r3, #4]
   11718:	cmp	r0, #0
   1171c:	beq	1175c <grafo_remove@@Base+0x9c>
   11720:	ldr	ip, [r0]
   11724:	cmp	ip, r4
   11728:	beq	11750 <grafo_remove@@Base+0x90>
   1172c:	mov	r3, r0
   11730:	b	11714 <grafo_remove@@Base+0x54>
   11734:	ldr	r2, [ip, #4]
   11738:	str	r2, [r3, #4]
   1173c:	mov	r0, ip
   11740:	bl	10e94 <free@plt>
   11744:	b	1175c <grafo_remove@@Base+0x9c>
   11748:	mov	r0, r3
   1174c:	mov	r3, ip
   11750:	ldr	r2, [r0, #4]
   11754:	str	r2, [r3, #4]
   11758:	bl	10e94 <free@plt>
   1175c:	ldr	r3, [r6]
   11760:	cmp	r3, #0
   11764:	bne	117e0 <grafo_remove@@Base+0x120>
   11768:	ldr	r2, [r6, #8]
   1176c:	add	r4, r2, r4, lsl #3
   11770:	ldr	r2, [r4, #4]
   11774:	ldr	r3, [r2]
   11778:	cmp	r3, r5
   1177c:	beq	117b8 <grafo_remove@@Base+0xf8>
   11780:	ldr	r3, [r2, #4]
   11784:	cmp	r3, #0
   11788:	beq	117e0 <grafo_remove@@Base+0x120>
   1178c:	ldr	r1, [r3]
   11790:	cmp	r5, r1
   11794:	beq	117cc <grafo_remove@@Base+0x10c>
   11798:	ldr	r0, [r3, #4]
   1179c:	cmp	r0, #0
   117a0:	beq	117e0 <grafo_remove@@Base+0x120>
   117a4:	ldr	r2, [r0]
   117a8:	cmp	r2, r5
   117ac:	beq	117d4 <grafo_remove@@Base+0x114>
   117b0:	mov	r3, r0
   117b4:	b	11798 <grafo_remove@@Base+0xd8>
   117b8:	ldr	r3, [r2, #4]
   117bc:	str	r3, [r4, #4]
   117c0:	mov	r0, r2
   117c4:	bl	10e94 <free@plt>
   117c8:	b	117e0 <grafo_remove@@Base+0x120>
   117cc:	mov	r0, r3
   117d0:	mov	r3, r2
   117d4:	ldr	r2, [r0, #4]
   117d8:	str	r2, [r3, #4]
   117dc:	bl	10e94 <free@plt>
   117e0:	ldrd	r4, [sp]
   117e4:	ldr	r6, [sp, #8]
   117e8:	add	sp, sp, #12
   117ec:	pop	{pc}		; (ldr pc, [sp], #4)

000117f0 <grafo_aresta@@Base>:
   117f0:	cmp	r0, #0
   117f4:	beq	11840 <grafo_aresta@@Base+0x50>
   117f8:	ldr	r3, [r0, #8]
   117fc:	add	r3, r3, r1, lsl #3
   11800:	ldr	r3, [r3, #4]
   11804:	cmp	r3, #0
   11808:	beq	11848 <grafo_aresta@@Base+0x58>
   1180c:	ldr	r1, [r3]
   11810:	cmp	r2, r1
   11814:	beq	11850 <grafo_aresta@@Base+0x60>
   11818:	ldr	r3, [r3, #4]
   1181c:	cmp	r3, #0
   11820:	beq	11838 <grafo_aresta@@Base+0x48>
   11824:	ldr	r1, [r3]
   11828:	cmp	r1, r2
   1182c:	bne	11818 <grafo_aresta@@Base+0x28>
   11830:	mov	r0, #1
   11834:	bx	lr
   11838:	mov	r0, #0
   1183c:	bx	lr
   11840:	mov	r0, #0
   11844:	bx	lr
   11848:	mov	r0, #0
   1184c:	bx	lr
   11850:	mov	r0, #1
   11854:	bx	lr

00011858 <grafo_adiciona@@Base>:
   11858:	strd	r4, [sp, #-16]!
   1185c:	str	r6, [sp, #8]
   11860:	str	lr, [sp, #12]
   11864:	subs	r4, r0, #0
   11868:	beq	11884 <grafo_adiciona@@Base+0x2c>
   1186c:	mov	r6, r2
   11870:	mov	r5, r1
   11874:	mov	r0, r4
   11878:	bl	117f0 <grafo_aresta@@Base>
   1187c:	cmp	r0, #0
   11880:	beq	11894 <grafo_adiciona@@Base+0x3c>
   11884:	ldrd	r4, [sp]
   11888:	ldr	r6, [sp, #8]
   1188c:	add	sp, sp, #12
   11890:	pop	{pc}		; (ldr pc, [sp], #4)
   11894:	mov	r0, r6
   11898:	bl	11584 <cria_no@@Base>
   1189c:	lsl	r3, r5, #3
   118a0:	ldr	r2, [r4, #8]
   118a4:	add	r2, r2, r3
   118a8:	ldr	r2, [r2, #4]
   118ac:	str	r2, [r0, #4]
   118b0:	ldr	r2, [r4, #8]
   118b4:	add	r3, r2, r3
   118b8:	str	r0, [r3, #4]
   118bc:	ldr	r2, [r4, #8]
   118c0:	ldr	r3, [r2, r5, lsl #3]
   118c4:	add	r3, r3, #1
   118c8:	str	r3, [r2, r5, lsl #3]
   118cc:	ldr	r3, [r4]
   118d0:	cmp	r3, #0
   118d4:	bne	11884 <grafo_adiciona@@Base+0x2c>
   118d8:	mov	r0, r5
   118dc:	bl	11584 <cria_no@@Base>
   118e0:	lsl	r1, r6, #3
   118e4:	ldr	r2, [r4, #8]
   118e8:	add	r2, r2, r1
   118ec:	ldr	r3, [r2, #4]
   118f0:	str	r3, [r0, #4]
   118f4:	ldr	r3, [r4, #8]
   118f8:	add	r3, r3, r1
   118fc:	str	r0, [r3, #4]
   11900:	ldr	r2, [r4, #8]
   11904:	ldr	r3, [r2, r6, lsl #3]
   11908:	add	r3, r3, #1
   1190c:	str	r3, [r2, r6, lsl #3]
   11910:	b	11884 <grafo_adiciona@@Base+0x2c>

00011914 <grafo_imprime@@Base>:
   11914:	ldr	r3, [r0, #4]
   11918:	cmp	r3, #0
   1191c:	bxle	lr
   11920:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11924:	strd	r6, [sp, #8]
   11928:	strd	r8, [sp, #16]
   1192c:	str	sl, [sp, #24]
   11930:	str	lr, [sp, #28]
   11934:	mov	r7, r0
   11938:	mov	r5, #0
   1193c:	movw	r8, #11544	; 0x2d18
   11940:	movt	r8, #1
   11944:	movw	r9, #11552	; 0x2d20
   11948:	movt	r9, #1
   1194c:	movw	r6, #11556	; 0x2d24
   11950:	movt	r6, #1
   11954:	b	11970 <grafo_imprime@@Base+0x5c>
   11958:	mov	r0, #10
   1195c:	bl	10f00 <putchar@plt>
   11960:	add	r5, r5, #1
   11964:	ldr	r3, [r7, #4]
   11968:	cmp	r3, r5
   1196c:	ble	119c4 <grafo_imprime@@Base+0xb0>
   11970:	ldr	r3, [r7, #8]
   11974:	add	r3, r3, r5, lsl #3
   11978:	ldr	r4, [r3, #4]
   1197c:	mov	r1, r5
   11980:	mov	r0, r8
   11984:	bl	10e70 <printf@plt>
   11988:	cmp	r4, #0
   1198c:	beq	11958 <grafo_imprime@@Base+0x44>
   11990:	ldr	r1, [r4]
   11994:	mov	r0, r9
   11998:	bl	10e70 <printf@plt>
   1199c:	ldr	r4, [r4, #4]
   119a0:	cmp	r4, #0
   119a4:	beq	11958 <grafo_imprime@@Base+0x44>
   119a8:	ldr	r1, [r4]
   119ac:	mov	r0, r6
   119b0:	bl	10e70 <printf@plt>
   119b4:	ldr	r4, [r4, #4]
   119b8:	cmp	r4, #0
   119bc:	bne	119a8 <grafo_imprime@@Base+0x94>
   119c0:	b	11958 <grafo_imprime@@Base+0x44>
   119c4:	ldrd	r4, [sp]
   119c8:	ldrd	r6, [sp, #8]
   119cc:	ldrd	r8, [sp, #16]
   119d0:	ldr	sl, [sp, #24]
   119d4:	add	sp, sp, #28
   119d8:	pop	{pc}		; (ldr pc, [sp], #4)

000119dc <v_sucessores@@Base>:
   119dc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   119e0:	strd	r6, [sp, #8]
   119e4:	str	r8, [sp, #16]
   119e8:	str	lr, [sp, #20]
   119ec:	mov	r5, r0
   119f0:	cmp	r0, #0
   119f4:	lsrne	r0, r1, #31
   119f8:	moveq	r0, #1
   119fc:	cmp	r0, #0
   11a00:	movne	r7, #0
   11a04:	bne	11a78 <v_sucessores@@Base+0x9c>
   11a08:	ldr	r3, [r5, #4]
   11a0c:	cmp	r3, r1
   11a10:	movle	r7, #0
   11a14:	ble	11a78 <v_sucessores@@Base+0x9c>
   11a18:	mov	r6, r1
   11a1c:	bl	127fc <vetor_novo@@Base>
   11a20:	mov	r7, r0
   11a24:	ldr	r3, [r5, #4]
   11a28:	cmp	r3, #0
   11a2c:	ble	11a78 <v_sucessores@@Base+0x9c>
   11a30:	mov	r4, #0
   11a34:	mvn	r8, #0
   11a38:	b	11a5c <v_sucessores@@Base+0x80>
   11a3c:	mov	r2, r8
   11a40:	mov	r1, r4
   11a44:	mov	r0, r7
   11a48:	bl	128f0 <vetor_insere@@Base>
   11a4c:	add	r4, r4, #1
   11a50:	ldr	r3, [r5, #4]
   11a54:	cmp	r3, r4
   11a58:	ble	11a78 <v_sucessores@@Base+0x9c>
   11a5c:	mov	r2, r4
   11a60:	mov	r1, r6
   11a64:	mov	r0, r5
   11a68:	bl	117f0 <grafo_aresta@@Base>
   11a6c:	cmp	r0, #0
   11a70:	beq	11a4c <v_sucessores@@Base+0x70>
   11a74:	b	11a3c <v_sucessores@@Base+0x60>
   11a78:	mov	r0, r7
   11a7c:	ldrd	r4, [sp]
   11a80:	ldrd	r6, [sp, #8]
   11a84:	ldr	r8, [sp, #16]
   11a88:	add	sp, sp, #20
   11a8c:	pop	{pc}		; (ldr pc, [sp], #4)

00011a90 <v_antecessores@@Base>:
   11a90:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11a94:	strd	r6, [sp, #8]
   11a98:	str	r8, [sp, #16]
   11a9c:	str	lr, [sp, #20]
   11aa0:	mov	r5, r0
   11aa4:	cmp	r0, #0
   11aa8:	lsrne	r0, r1, #31
   11aac:	moveq	r0, #1
   11ab0:	cmp	r0, #0
   11ab4:	movne	r7, #0
   11ab8:	bne	11b2c <v_antecessores@@Base+0x9c>
   11abc:	ldr	r3, [r5, #4]
   11ac0:	cmp	r3, r1
   11ac4:	movle	r7, #0
   11ac8:	ble	11b2c <v_antecessores@@Base+0x9c>
   11acc:	mov	r6, r1
   11ad0:	bl	127fc <vetor_novo@@Base>
   11ad4:	mov	r7, r0
   11ad8:	ldr	r3, [r5, #4]
   11adc:	cmp	r3, #0
   11ae0:	ble	11b2c <v_antecessores@@Base+0x9c>
   11ae4:	mov	r4, #0
   11ae8:	mvn	r8, #0
   11aec:	b	11b10 <v_antecessores@@Base+0x80>
   11af0:	mov	r2, r8
   11af4:	mov	r1, r4
   11af8:	mov	r0, r7
   11afc:	bl	128f0 <vetor_insere@@Base>
   11b00:	add	r4, r4, #1
   11b04:	ldr	r3, [r5, #4]
   11b08:	cmp	r3, r4
   11b0c:	ble	11b2c <v_antecessores@@Base+0x9c>
   11b10:	mov	r2, r6
   11b14:	mov	r1, r4
   11b18:	mov	r0, r5
   11b1c:	bl	117f0 <grafo_aresta@@Base>
   11b20:	cmp	r0, #0
   11b24:	beq	11b00 <v_antecessores@@Base+0x70>
   11b28:	b	11af0 <v_antecessores@@Base+0x60>
   11b2c:	mov	r0, r7
   11b30:	ldrd	r4, [sp]
   11b34:	ldrd	r6, [sp, #8]
   11b38:	ldr	r8, [sp, #16]
   11b3c:	add	sp, sp, #20
   11b40:	pop	{pc}		; (ldr pc, [sp], #4)

00011b44 <dfs_helper@@Base>:
   11b44:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11b48:	strd	r6, [sp, #8]
   11b4c:	strd	r8, [sp, #16]
   11b50:	str	sl, [sp, #24]
   11b54:	str	lr, [sp, #28]
   11b58:	sub	sp, sp, #8
   11b5c:	ldr	r7, [sp, #40]	; 0x28
   11b60:	ldr	r8, [r7, r1, lsl #2]
   11b64:	cmp	r8, #0
   11b68:	movne	r8, #0
   11b6c:	bne	11bfc <dfs_helper@@Base+0xb8>
   11b70:	str	r3, [r7, r1, lsl #2]
   11b74:	cmp	r1, r2
   11b78:	moveq	r8, r3
   11b7c:	beq	11bfc <dfs_helper@@Base+0xb8>
   11b80:	mov	r9, r2
   11b84:	mov	r6, r1
   11b88:	mov	r5, r0
   11b8c:	ldr	r2, [r0, #4]
   11b90:	cmp	r2, #0
   11b94:	ble	11bf4 <dfs_helper@@Base+0xb0>
   11b98:	mov	r4, r8
   11b9c:	add	sl, r3, #1
   11ba0:	b	11bb4 <dfs_helper@@Base+0x70>
   11ba4:	add	r4, r4, #1
   11ba8:	ldr	r3, [r5, #4]
   11bac:	cmp	r3, r4
   11bb0:	ble	11bf4 <dfs_helper@@Base+0xb0>
   11bb4:	mov	r2, r4
   11bb8:	mov	r1, r6
   11bbc:	mov	r0, r5
   11bc0:	bl	117f0 <grafo_aresta@@Base>
   11bc4:	cmp	r0, #0
   11bc8:	beq	11ba4 <dfs_helper@@Base+0x60>
   11bcc:	str	r7, [sp]
   11bd0:	mov	r3, sl
   11bd4:	mov	r2, r9
   11bd8:	mov	r1, r4
   11bdc:	mov	r0, r5
   11be0:	bl	11b44 <dfs_helper@@Base>
   11be4:	cmp	r0, #0
   11be8:	beq	11ba4 <dfs_helper@@Base+0x60>
   11bec:	mov	r8, r0
   11bf0:	b	11bfc <dfs_helper@@Base+0xb8>
   11bf4:	mov	r3, #0
   11bf8:	str	r3, [r7, r6, lsl #2]
   11bfc:	mov	r0, r8
   11c00:	add	sp, sp, #8
   11c04:	ldrd	r4, [sp]
   11c08:	ldrd	r6, [sp, #8]
   11c0c:	ldrd	r8, [sp, #16]
   11c10:	ldr	sl, [sp, #24]
   11c14:	add	sp, sp, #28
   11c18:	pop	{pc}		; (ldr pc, [sp], #4)

00011c1c <grafo_dfs@@Base>:
   11c1c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11c20:	strd	r6, [sp, #8]
   11c24:	strd	r8, [sp, #16]
   11c28:	str	lr, [sp, #24]
   11c2c:	sub	sp, sp, #12
   11c30:	subs	r9, r0, #0
   11c34:	moveq	r8, r9
   11c38:	beq	11d18 <grafo_dfs@@Base+0xfc>
   11c3c:	mov	r7, r3
   11c40:	mov	r6, r2
   11c44:	mov	r5, r1
   11c48:	mov	r1, #4
   11c4c:	ldr	r0, [r9, #4]
   11c50:	bl	10e4c <calloc@plt>
   11c54:	mov	r4, r0
   11c58:	str	r0, [sp]
   11c5c:	mov	r3, #1
   11c60:	mov	r2, r6
   11c64:	mov	r1, r5
   11c68:	mov	r0, r9
   11c6c:	bl	11b44 <dfs_helper@@Base>
   11c70:	subs	r6, r0, #0
   11c74:	beq	11ca4 <grafo_dfs@@Base+0x88>
   11c78:	mov	r5, r6
   11c7c:	mov	r1, #4
   11c80:	mov	r0, r6
   11c84:	bl	10e4c <calloc@plt>
   11c88:	mov	r8, r0
   11c8c:	cmp	r6, #0
   11c90:	ble	11d0c <grafo_dfs@@Base+0xf0>
   11c94:	ldr	r3, [r9, #4]
   11c98:	mov	lr, #1
   11c9c:	sub	r9, r0, #4
   11ca0:	b	11cd0 <grafo_dfs@@Base+0xb4>
   11ca4:	mov	r0, r4
   11ca8:	bl	10e94 <free@plt>
   11cac:	mov	r8, #0
   11cb0:	str	r8, [r7]
   11cb4:	b	11d18 <grafo_dfs@@Base+0xfc>
   11cb8:	mov	r2, #0
   11cbc:	str	r2, [r9, lr, lsl #2]
   11cc0:	add	r2, lr, #1
   11cc4:	cmp	r5, lr
   11cc8:	beq	11d0c <grafo_dfs@@Base+0xf0>
   11ccc:	mov	lr, r2
   11cd0:	cmp	r3, #0
   11cd4:	ble	11cc0 <grafo_dfs@@Base+0xa4>
   11cd8:	mov	ip, lr
   11cdc:	ldr	r2, [r4]
   11ce0:	cmp	r2, lr
   11ce4:	movne	r1, r4
   11ce8:	movne	r2, #0
   11cec:	beq	11cb8 <grafo_dfs@@Base+0x9c>
   11cf0:	add	r2, r2, #1
   11cf4:	cmp	r2, r3
   11cf8:	beq	11cc0 <grafo_dfs@@Base+0xa4>
   11cfc:	ldr	r0, [r1, #4]!
   11d00:	cmp	r0, ip
   11d04:	bne	11cf0 <grafo_dfs@@Base+0xd4>
   11d08:	b	11cbc <grafo_dfs@@Base+0xa0>
   11d0c:	str	r6, [r7]
   11d10:	mov	r0, r4
   11d14:	bl	10e94 <free@plt>
   11d18:	mov	r0, r8
   11d1c:	add	sp, sp, #12
   11d20:	ldrd	r4, [sp]
   11d24:	ldrd	r6, [sp, #8]
   11d28:	ldrd	r8, [sp, #16]
   11d2c:	add	sp, sp, #24
   11d30:	pop	{pc}		; (ldr pc, [sp], #4)

00011d34 <grafo_bfs@@Base>:
   11d34:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11d38:	strd	r6, [sp, #8]
   11d3c:	strd	r8, [sp, #16]
   11d40:	strd	sl, [sp, #24]
   11d44:	str	lr, [sp, #32]
   11d48:	sub	sp, sp, #20
   11d4c:	str	r3, [sp, #8]
   11d50:	subs	r3, r0, #0
   11d54:	mov	r6, r3
   11d58:	beq	11ed8 <grafo_bfs@@Base+0x1a4>
   11d5c:	mov	r4, r1
   11d60:	mov	r8, r2
   11d64:	ldr	r5, [r3, #4]
   11d68:	mov	r1, #4
   11d6c:	mov	r0, r5
   11d70:	bl	10e4c <calloc@plt>
   11d74:	mov	r9, r0
   11d78:	mov	r1, #4
   11d7c:	mov	r0, r5
   11d80:	bl	10e4c <calloc@plt>
   11d84:	mov	fp, r0
   11d88:	cmp	r5, #0
   11d8c:	ble	11da8 <grafo_bfs@@Base+0x74>
   11d90:	mov	r3, r9
   11d94:	add	r1, r9, r5, lsl #2
   11d98:	mvn	r2, #0
   11d9c:	str	r2, [r3], #4
   11da0:	cmp	r3, r1
   11da4:	bne	11d9c <grafo_bfs@@Base+0x68>
   11da8:	str	r4, [r9, r4, lsl #2]
   11dac:	str	r4, [fp]
   11db0:	mov	r7, #1
   11db4:	mov	sl, #0
   11db8:	str	r8, [sp, #12]
   11dbc:	mov	r8, r6
   11dc0:	b	11e14 <grafo_bfs@@Base+0xe0>
   11dc4:	add	r4, r4, #1
   11dc8:	cmp	r5, r4
   11dcc:	beq	11e0c <grafo_bfs@@Base+0xd8>
   11dd0:	mov	r2, r4
   11dd4:	mov	r1, r6
   11dd8:	mov	r0, r8
   11ddc:	bl	117f0 <grafo_aresta@@Base>
   11de0:	cmp	r0, #0
   11de4:	beq	11dc4 <grafo_bfs@@Base+0x90>
   11de8:	ldr	r3, [r9, r4, lsl #2]
   11dec:	cmn	r3, #1
   11df0:	bne	11dc4 <grafo_bfs@@Base+0x90>
   11df4:	str	r6, [r9, r4, lsl #2]
   11df8:	str	r4, [fp, r7, lsl #2]
   11dfc:	add	r7, r7, #1
   11e00:	sdiv	r3, r7, r5
   11e04:	mls	r7, r5, r3, r7
   11e08:	b	11dc4 <grafo_bfs@@Base+0x90>
   11e0c:	cmp	sl, r7
   11e10:	beq	11e34 <grafo_bfs@@Base+0x100>
   11e14:	ldr	r6, [fp, sl, lsl #2]
   11e18:	add	sl, sl, #1
   11e1c:	sdiv	r3, sl, r5
   11e20:	mls	sl, r5, r3, sl
   11e24:	cmp	r5, #0
   11e28:	ble	11e0c <grafo_bfs@@Base+0xd8>
   11e2c:	mov	r4, #0
   11e30:	b	11dd0 <grafo_bfs@@Base+0x9c>
   11e34:	ldr	r8, [sp, #12]
   11e38:	ldr	r3, [r9, r8, lsl #2]
   11e3c:	cmp	r3, #0
   11e40:	movlt	r4, #0
   11e44:	blt	11ea0 <grafo_bfs@@Base+0x16c>
   11e48:	cmp	r3, r8
   11e4c:	beq	11ee0 <grafo_bfs@@Base+0x1ac>
   11e50:	mov	r4, #1
   11e54:	b	11e5c <grafo_bfs@@Base+0x128>
   11e58:	mov	r3, r2
   11e5c:	add	r4, r4, #1
   11e60:	ldr	r2, [r9, r3, lsl #2]
   11e64:	cmp	r2, r3
   11e68:	bne	11e58 <grafo_bfs@@Base+0x124>
   11e6c:	lsl	r0, r4, #2
   11e70:	bl	10ec4 <malloc@plt>
   11e74:	str	r0, [sp, #4]
   11e78:	cmp	r4, #0
   11e7c:	ble	11ea0 <grafo_bfs@@Base+0x16c>
   11e80:	ldr	r3, [sp, #4]
   11e84:	add	r2, r3, r4, lsl #2
   11e88:	mov	r3, #0
   11e8c:	str	r8, [r2, #-4]!
   11e90:	ldr	r8, [r9, r8, lsl #2]
   11e94:	add	r3, r3, #1
   11e98:	cmp	r4, r3
   11e9c:	bgt	11e8c <grafo_bfs@@Base+0x158>
   11ea0:	mov	r0, fp
   11ea4:	bl	10e94 <free@plt>
   11ea8:	mov	r0, r9
   11eac:	bl	10e94 <free@plt>
   11eb0:	ldr	r3, [sp, #8]
   11eb4:	str	r4, [r3]
   11eb8:	ldr	r0, [sp, #4]
   11ebc:	add	sp, sp, #20
   11ec0:	ldrd	r4, [sp]
   11ec4:	ldrd	r6, [sp, #8]
   11ec8:	ldrd	r8, [sp, #16]
   11ecc:	ldrd	sl, [sp, #24]
   11ed0:	add	sp, sp, #32
   11ed4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ed8:	str	r3, [sp, #4]
   11edc:	b	11eb8 <grafo_bfs@@Base+0x184>
   11ee0:	mov	r0, #4
   11ee4:	bl	10ec4 <malloc@plt>
   11ee8:	str	r0, [sp, #4]
   11eec:	mov	r4, #1
   11ef0:	b	11e80 <grafo_bfs@@Base+0x14c>

00011ef4 <heap_nova@@Base>:
   11ef4:	strd	r4, [sp, #-16]!
   11ef8:	str	r6, [sp, #8]
   11efc:	str	lr, [sp, #12]
   11f00:	mov	r5, r0
   11f04:	mov	r0, #12
   11f08:	bl	10ec4 <malloc@plt>
   11f0c:	subs	r4, r0, #0
   11f10:	beq	11f3c <heap_nova@@Base+0x48>
   11f14:	mov	r3, #0
   11f18:	str	r3, [r4]
   11f1c:	str	r5, [r4, #4]
   11f20:	mov	r1, #4
   11f24:	mov	r0, r5
   11f28:	bl	10e4c <calloc@plt>
   11f2c:	mov	r5, r0
   11f30:	str	r0, [r4, #8]
   11f34:	cmp	r0, #0
   11f38:	beq	11f50 <heap_nova@@Base+0x5c>
   11f3c:	mov	r0, r4
   11f40:	ldrd	r4, [sp]
   11f44:	ldr	r6, [sp, #8]
   11f48:	add	sp, sp, #12
   11f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f50:	mov	r0, r4
   11f54:	bl	10e94 <free@plt>
   11f58:	mov	r4, r5
   11f5c:	b	11f3c <heap_nova@@Base+0x48>

00011f60 <heap_apaga@@Base>:
   11f60:	strd	r4, [sp, #-16]!
   11f64:	str	r6, [sp, #8]
   11f68:	str	lr, [sp, #12]
   11f6c:	subs	r5, r0, #0
   11f70:	beq	11fcc <heap_apaga@@Base+0x6c>
   11f74:	ldr	r3, [r5]
   11f78:	cmp	r3, #0
   11f7c:	ble	11fbc <heap_apaga@@Base+0x5c>
   11f80:	mov	r4, #0
   11f84:	mov	r6, r4
   11f88:	ldr	r3, [r5, #8]
   11f8c:	ldr	r3, [r3, r4, lsl #2]
   11f90:	ldr	r0, [r3, #4]
   11f94:	bl	10e94 <free@plt>
   11f98:	ldr	r3, [r5, #8]
   11f9c:	ldr	r0, [r3, r4, lsl #2]
   11fa0:	bl	10e94 <free@plt>
   11fa4:	ldr	r3, [r5, #8]
   11fa8:	str	r6, [r3, r4, lsl #2]
   11fac:	add	r4, r4, #1
   11fb0:	ldr	r3, [r5]
   11fb4:	cmp	r3, r4
   11fb8:	bgt	11f88 <heap_apaga@@Base+0x28>
   11fbc:	ldr	r0, [r5, #8]
   11fc0:	bl	10e94 <free@plt>
   11fc4:	mov	r0, r5
   11fc8:	bl	10e94 <free@plt>
   11fcc:	ldrd	r4, [sp]
   11fd0:	ldr	r6, [sp, #8]
   11fd4:	add	sp, sp, #12
   11fd8:	pop	{pc}		; (ldr pc, [sp], #4)

00011fdc <elemento_cria@@Base>:
   11fdc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11fe0:	strd	r6, [sp, #8]
   11fe4:	str	r8, [sp, #16]
   11fe8:	str	lr, [sp, #20]
   11fec:	mov	r7, r0
   11ff0:	mov	r6, r1
   11ff4:	mov	r0, #8
   11ff8:	bl	10ec4 <malloc@plt>
   11ffc:	subs	r4, r0, #0
   12000:	beq	12034 <elemento_cria@@Base+0x58>
   12004:	mov	r0, r6
   12008:	bl	10ee8 <strlen@plt>
   1200c:	mov	r1, #1
   12010:	add	r0, r0, r1
   12014:	bl	10e4c <calloc@plt>
   12018:	mov	r5, r0
   1201c:	str	r0, [r4, #4]
   12020:	cmp	r0, #0
   12024:	beq	1204c <elemento_cria@@Base+0x70>
   12028:	mov	r1, r6
   1202c:	bl	10eac <strcpy@plt>
   12030:	str	r7, [r4]
   12034:	mov	r0, r4
   12038:	ldrd	r4, [sp]
   1203c:	ldrd	r6, [sp, #8]
   12040:	ldr	r8, [sp, #16]
   12044:	add	sp, sp, #20
   12048:	pop	{pc}		; (ldr pc, [sp], #4)
   1204c:	mov	r0, r4
   12050:	bl	10e94 <free@plt>
   12054:	mov	r4, r5
   12058:	b	12034 <elemento_cria@@Base+0x58>

0001205c <mostraHeap@@Base>:
   1205c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12060:	strd	r6, [sp, #8]
   12064:	strd	r8, [sp, #16]
   12068:	str	sl, [sp, #24]
   1206c:	str	lr, [sp, #28]
   12070:	ldr	r3, [r0]
   12074:	cmp	r3, r1
   12078:	ble	12124 <mostraHeap@@Base+0xc8>
   1207c:	mov	r7, r0
   12080:	mov	r6, r1
   12084:	cmp	r1, #0
   12088:	ble	12144 <mostraHeap@@Base+0xe8>
   1208c:	mov	r2, r1
   12090:	mov	r5, #0
   12094:	b	1209c <mostraHeap@@Base+0x40>
   12098:	mov	r2, r3
   1209c:	sub	r3, r2, #1
   120a0:	add	r3, r3, r3, lsr #31
   120a4:	asr	r3, r3, #1
   120a8:	add	r5, r5, #1
   120ac:	cmp	r2, #2
   120b0:	bgt	12098 <mostraHeap@@Base+0x3c>
   120b4:	lsl	r1, r6, #1
   120b8:	add	r1, r1, #1
   120bc:	mov	r0, r7
   120c0:	bl	1205c <mostraHeap@@Base>
   120c4:	add	r9, r5, r5, lsl #1
   120c8:	cmp	r9, #0
   120cc:	ble	120f0 <mostraHeap@@Base+0x94>
   120d0:	mov	r4, #0
   120d4:	movw	r8, #11564	; 0x2d2c
   120d8:	movt	r8, #1
   120dc:	mov	r0, r8
   120e0:	bl	10e70 <printf@plt>
   120e4:	add	r4, r4, #1
   120e8:	cmp	r4, r9
   120ec:	bne	120dc <mostraHeap@@Base+0x80>
   120f0:	ldr	r3, [r7, #8]
   120f4:	ldr	r3, [r3, r6, lsl #2]
   120f8:	ldr	r2, [r3]
   120fc:	ldr	r1, [r3, #4]
   12100:	movw	r0, #11572	; 0x2d34
   12104:	movt	r0, #1
   12108:	bl	10e70 <printf@plt>
   1210c:	add	r1, r6, #1
   12110:	lsl	r1, r1, #1
   12114:	mov	r0, r7
   12118:	bl	1205c <mostraHeap@@Base>
   1211c:	cmp	r5, #0
   12120:	bne	1212c <mostraHeap@@Base+0xd0>
   12124:	mov	r0, #10
   12128:	bl	10f00 <putchar@plt>
   1212c:	ldrd	r4, [sp]
   12130:	ldrd	r6, [sp, #8]
   12134:	ldrd	r8, [sp, #16]
   12138:	ldr	sl, [sp, #24]
   1213c:	add	sp, sp, #28
   12140:	pop	{pc}		; (ldr pc, [sp], #4)
   12144:	lsl	r1, r1, #1
   12148:	add	r1, r1, #1
   1214c:	bl	1205c <mostraHeap@@Base>
   12150:	ldr	r3, [r7, #8]
   12154:	ldr	r3, [r3, r6, lsl #2]
   12158:	ldr	r2, [r3]
   1215c:	ldr	r1, [r3, #4]
   12160:	movw	r0, #11572	; 0x2d34
   12164:	movt	r0, #1
   12168:	bl	10e70 <printf@plt>
   1216c:	add	r1, r6, #1
   12170:	lsl	r1, r1, #1
   12174:	mov	r0, r7
   12178:	bl	1205c <mostraHeap@@Base>
   1217c:	b	12124 <mostraHeap@@Base+0xc8>

00012180 <menor_que@@Base>:
   12180:	cmp	r1, #0
   12184:	cmpne	r0, #0
   12188:	beq	121a4 <menor_que@@Base+0x24>
   1218c:	ldr	r0, [r0]
   12190:	ldr	r3, [r1]
   12194:	cmp	r0, r3
   12198:	movge	r0, #0
   1219c:	movlt	r0, #1
   121a0:	bx	lr
   121a4:	mov	r0, #0
   121a8:	bx	lr

000121ac <heap_insere@@Base>:
   121ac:	ldr	ip, [r0]
   121b0:	ldr	r3, [r0, #4]
   121b4:	cmp	ip, r3
   121b8:	blt	121c4 <heap_insere@@Base+0x18>
   121bc:	mov	r0, #0
   121c0:	bx	lr
   121c4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   121c8:	strd	r6, [sp, #8]
   121cc:	strd	r8, [sp, #16]
   121d0:	str	sl, [sp, #24]
   121d4:	str	lr, [sp, #28]
   121d8:	mov	r6, r0
   121dc:	mov	r0, r2
   121e0:	bl	11fdc <elemento_cria@@Base>
   121e4:	cmp	r0, #0
   121e8:	moveq	r0, #0
   121ec:	beq	12264 <heap_insere@@Base+0xb8>
   121f0:	ldr	r4, [r6]
   121f4:	ldr	r3, [r6, #8]
   121f8:	str	r0, [r3, r4, lsl #2]
   121fc:	ldr	r3, [r6]
   12200:	add	r3, r3, #1
   12204:	str	r3, [r6]
   12208:	cmp	r4, #0
   1220c:	moveq	r0, #1
   12210:	beq	12264 <heap_insere@@Base+0xb8>
   12214:	ldr	r5, [r6, #8]
   12218:	lsl	r9, r4, #2
   1221c:	ldr	r7, [r5, r4, lsl #2]
   12220:	sub	r4, r4, #1
   12224:	add	r4, r4, r4, lsr #31
   12228:	asr	r4, r4, #1
   1222c:	ldr	r8, [r5, r4, lsl #2]
   12230:	mov	r1, r8
   12234:	mov	r0, r7
   12238:	bl	12180 <menor_que@@Base>
   1223c:	cmp	r0, #0
   12240:	beq	12260 <heap_insere@@Base+0xb4>
   12244:	str	r7, [r5, r4, lsl #2]
   12248:	ldr	r3, [r6, #8]
   1224c:	str	r8, [r3, r9]
   12250:	cmp	r4, #0
   12254:	bne	12214 <heap_insere@@Base+0x68>
   12258:	mov	r0, #1
   1225c:	b	12264 <heap_insere@@Base+0xb8>
   12260:	mov	r0, #1
   12264:	ldrd	r4, [sp]
   12268:	ldrd	r6, [sp, #8]
   1226c:	ldrd	r8, [sp, #16]
   12270:	ldr	sl, [sp, #24]
   12274:	add	sp, sp, #28
   12278:	pop	{pc}		; (ldr pc, [sp], #4)

0001227c <heap_remove@@Base>:
   1227c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12280:	strd	r6, [sp, #8]
   12284:	strd	r8, [sp, #16]
   12288:	str	sl, [sp, #24]
   1228c:	str	lr, [sp, #28]
   12290:	subs	r6, r0, #0
   12294:	beq	12374 <heap_remove@@Base+0xf8>
   12298:	ldr	r3, [r6]
   1229c:	cmp	r3, #0
   122a0:	movle	r9, #0
   122a4:	ble	12378 <heap_remove@@Base+0xfc>
   122a8:	ldr	r3, [r6, #8]
   122ac:	ldr	r0, [r3]
   122b0:	ldr	r9, [r0, #4]
   122b4:	bl	10e94 <free@plt>
   122b8:	ldr	r3, [r6]
   122bc:	sub	r3, r3, #1
   122c0:	str	r3, [r6]
   122c4:	ldr	r2, [r6, #8]
   122c8:	ldr	r3, [r2, r3, lsl #2]
   122cc:	str	r3, [r2]
   122d0:	ldr	r2, [r6]
   122d4:	ldr	r3, [r6, #8]
   122d8:	mov	r1, #0
   122dc:	str	r1, [r3, r2, lsl #2]
   122e0:	ldr	r3, [r6]
   122e4:	cmp	r3, #1
   122e8:	ble	12378 <heap_remove@@Base+0xfc>
   122ec:	mov	r7, r1
   122f0:	mov	r5, #1
   122f4:	b	1233c <heap_remove@@Base+0xc0>
   122f8:	ldr	r5, [r6, #8]
   122fc:	ldr	r8, [r5, r4, lsl #2]
   12300:	ldr	sl, [r5, r7, lsl #2]
   12304:	mov	r1, sl
   12308:	mov	r0, r8
   1230c:	bl	12180 <menor_que@@Base>
   12310:	cmp	r0, #0
   12314:	beq	12378 <heap_remove@@Base+0xfc>
   12318:	str	sl, [r5, r4, lsl #2]
   1231c:	ldr	r3, [r6, #8]
   12320:	str	r8, [r3, r7, lsl #2]
   12324:	lsl	r5, r4, #1
   12328:	add	r5, r5, #1
   1232c:	ldr	r3, [r6]
   12330:	mov	r7, r4
   12334:	cmp	r5, r3
   12338:	bge	12378 <heap_remove@@Base+0xfc>
   1233c:	add	r4, r7, #1
   12340:	lsl	r4, r4, #1
   12344:	cmp	r4, r3
   12348:	movge	r4, r5
   1234c:	bge	122f8 <heap_remove@@Base+0x7c>
   12350:	ldr	r3, [r6, #8]
   12354:	add	r2, r7, #1
   12358:	add	r1, r3, r2, lsl #3
   1235c:	ldr	r1, [r1, #-4]
   12360:	ldr	r0, [r3, r2, lsl #3]
   12364:	bl	12180 <menor_que@@Base>
   12368:	cmp	r0, #0
   1236c:	moveq	r4, r5
   12370:	b	122f8 <heap_remove@@Base+0x7c>
   12374:	mov	r9, r6
   12378:	mov	r0, r9
   1237c:	ldrd	r4, [sp]
   12380:	ldrd	r6, [sp, #8]
   12384:	ldrd	r8, [sp, #16]
   12388:	ldr	sl, [sp, #24]
   1238c:	add	sp, sp, #28
   12390:	pop	{pc}		; (ldr pc, [sp], #4)

00012394 <novo_str@@Base>:
   12394:	strd	r4, [sp, #-16]!
   12398:	str	r6, [sp, #8]
   1239c:	str	lr, [sp, #12]
   123a0:	mov	r6, r0
   123a4:	mov	r0, #12
   123a8:	bl	10ec4 <malloc@plt>
   123ac:	subs	r4, r0, #0
   123b0:	beq	123e8 <novo_str@@Base+0x54>
   123b4:	mov	r0, r6
   123b8:	bl	10ee8 <strlen@plt>
   123bc:	add	r0, r0, #1
   123c0:	bl	10ec4 <malloc@plt>
   123c4:	mov	r5, r0
   123c8:	str	r0, [r4]
   123cc:	cmp	r0, #0
   123d0:	beq	123fc <novo_str@@Base+0x68>
   123d4:	mov	r1, r6
   123d8:	bl	10eac <strcpy@plt>
   123dc:	mov	r3, #0
   123e0:	str	r3, [r4, #4]
   123e4:	str	r3, [r4, #8]
   123e8:	mov	r0, r4
   123ec:	ldrd	r4, [sp]
   123f0:	ldr	r6, [sp, #8]
   123f4:	add	sp, sp, #12
   123f8:	pop	{pc}		; (ldr pc, [sp], #4)
   123fc:	mov	r0, r4
   12400:	bl	10e94 <free@plt>
   12404:	mov	r4, r5
   12408:	b	123e8 <novo_str@@Base+0x54>

0001240c <lista_nova@@Base>:
   1240c:	str	r4, [sp, #-8]!
   12410:	str	lr, [sp, #4]
   12414:	mov	r0, #12
   12418:	bl	10ec4 <malloc@plt>
   1241c:	cmp	r0, #0
   12420:	beq	12434 <lista_nova@@Base+0x28>
   12424:	mov	r3, #0
   12428:	str	r3, [r0]
   1242c:	str	r3, [r0, #4]
   12430:	str	r3, [r0, #8]
   12434:	ldr	r4, [sp]
   12438:	add	sp, sp, #4
   1243c:	pop	{pc}		; (ldr pc, [sp], #4)

00012440 <lista_apaga@@Base>:
   12440:	strd	r4, [sp, #-16]!
   12444:	str	r6, [sp, #8]
   12448:	str	lr, [sp, #12]
   1244c:	subs	r5, r0, #0
   12450:	beq	1248c <lista_apaga@@Base+0x4c>
   12454:	ldr	r4, [r5]
   12458:	cmp	r4, #0
   1245c:	beq	12484 <lista_apaga@@Base+0x44>
   12460:	ldr	r3, [r4, #4]
   12464:	str	r3, [r5]
   12468:	ldr	r0, [r4]
   1246c:	bl	10e94 <free@plt>
   12470:	mov	r0, r4
   12474:	bl	10e94 <free@plt>
   12478:	ldr	r4, [r5]
   1247c:	cmp	r4, #0
   12480:	bne	12460 <lista_apaga@@Base+0x20>
   12484:	mov	r0, r5
   12488:	bl	10e94 <free@plt>
   1248c:	ldrd	r4, [sp]
   12490:	ldr	r6, [sp, #8]
   12494:	add	sp, sp, #12
   12498:	pop	{pc}		; (ldr pc, [sp], #4)

0001249c <lista_tamanho@@Base>:
   1249c:	cmp	r0, #0
   124a0:	ldrne	r0, [r0, #8]
   124a4:	mvneq	r0, #0
   124a8:	bx	lr

000124ac <lista_inicio@@Base>:
   124ac:	cmp	r0, #0
   124b0:	ldrne	r0, [r0]
   124b4:	bx	lr

000124b8 <lista_fim@@Base>:
   124b8:	cmp	r0, #0
   124bc:	ldrne	r0, [r0, #4]
   124c0:	bx	lr

000124c4 <lista_insere@@Base>:
   124c4:	cmp	r1, #0
   124c8:	cmpne	r0, #0
   124cc:	beq	1257c <lista_insere@@Base+0xb8>
   124d0:	strd	r4, [sp, #-16]!
   124d4:	str	r6, [sp, #8]
   124d8:	str	lr, [sp, #12]
   124dc:	mov	r5, r0
   124e0:	mov	r0, r1
   124e4:	mov	r4, r2
   124e8:	bl	12394 <novo_str@@Base>
   124ec:	cmp	r0, #0
   124f0:	beq	1252c <lista_insere@@Base+0x68>
   124f4:	ldr	r3, [r5, #8]
   124f8:	add	r3, r3, #1
   124fc:	str	r3, [r5, #8]
   12500:	cmp	r4, #0
   12504:	beq	1253c <lista_insere@@Base+0x78>
   12508:	ldr	r3, [r5]
   1250c:	cmp	r3, r4
   12510:	beq	12568 <lista_insere@@Base+0xa4>
   12514:	ldr	r3, [r4, #8]
   12518:	str	r3, [r0, #8]
   1251c:	str	r4, [r0, #4]
   12520:	ldr	r3, [r4, #8]
   12524:	str	r0, [r3, #4]
   12528:	str	r0, [r4, #8]
   1252c:	ldrd	r4, [sp]
   12530:	ldr	r6, [sp, #8]
   12534:	add	sp, sp, #12
   12538:	pop	{pc}		; (ldr pc, [sp], #4)
   1253c:	ldr	r3, [r5]
   12540:	cmp	r3, #0
   12544:	streq	r0, [r5, #4]
   12548:	streq	r0, [r5]
   1254c:	beq	1252c <lista_insere@@Base+0x68>
   12550:	ldr	r3, [r5, #4]
   12554:	str	r3, [r0, #8]
   12558:	ldr	r3, [r5, #4]
   1255c:	str	r0, [r3, #4]
   12560:	str	r0, [r5, #4]
   12564:	b	1252c <lista_insere@@Base+0x68>
   12568:	str	r4, [r0, #4]
   1256c:	ldr	r3, [r5]
   12570:	str	r0, [r3, #8]
   12574:	str	r0, [r5]
   12578:	b	1252c <lista_insere@@Base+0x68>
   1257c:	mov	r0, #0
   12580:	bx	lr

00012584 <lista_remove@@Base>:
   12584:	strd	r4, [sp, #-16]!
   12588:	str	r6, [sp, #8]
   1258c:	str	lr, [sp, #12]
   12590:	cmp	r1, #0
   12594:	cmpne	r0, #0
   12598:	moveq	r5, #0
   1259c:	beq	125f4 <lista_remove@@Base+0x70>
   125a0:	mov	r4, r1
   125a4:	ldr	r2, [r0, #8]
   125a8:	sub	r2, r2, #1
   125ac:	str	r2, [r0, #8]
   125b0:	ldr	r2, [r1, #8]
   125b4:	cmp	r2, #0
   125b8:	ldrne	r1, [r1, #4]
   125bc:	strne	r1, [r2, #4]
   125c0:	ldreq	r2, [r4, #4]
   125c4:	streq	r2, [r0]
   125c8:	ldr	r2, [r4, #4]
   125cc:	cmp	r2, #0
   125d0:	ldrne	r1, [r4, #8]
   125d4:	strne	r1, [r2, #8]
   125d8:	ldreq	r2, [r4, #8]
   125dc:	streq	r2, [r0, #4]
   125e0:	ldr	r5, [r4, #4]
   125e4:	ldr	r0, [r4]
   125e8:	bl	10e94 <free@plt>
   125ec:	mov	r0, r4
   125f0:	bl	10e94 <free@plt>
   125f4:	mov	r0, r5
   125f8:	ldrd	r4, [sp]
   125fc:	ldr	r6, [sp, #8]
   12600:	add	sp, sp, #12
   12604:	pop	{pc}		; (ldr pc, [sp], #4)

00012608 <lista_pesquisa@@Base>:
   12608:	strd	r4, [sp, #-16]!
   1260c:	str	r6, [sp, #8]
   12610:	str	lr, [sp, #12]
   12614:	cmp	r1, #0
   12618:	cmpne	r0, #0
   1261c:	moveq	r4, #0
   12620:	beq	12668 <lista_pesquisa@@Base+0x60>
   12624:	mov	r5, r1
   12628:	cmp	r2, #1
   1262c:	movhi	r4, #0
   12630:	bhi	12668 <lista_pesquisa@@Base+0x60>
   12634:	cmp	r2, #0
   12638:	bne	1267c <lista_pesquisa@@Base+0x74>
   1263c:	ldr	r4, [r0]
   12640:	cmp	r4, #0
   12644:	beq	12668 <lista_pesquisa@@Base+0x60>
   12648:	mov	r1, r5
   1264c:	ldr	r0, [r4]
   12650:	bl	10e58 <strcmp@plt>
   12654:	cmp	r0, #0
   12658:	beq	12668 <lista_pesquisa@@Base+0x60>
   1265c:	ldr	r4, [r4, #4]
   12660:	cmp	r4, #0
   12664:	bne	12648 <lista_pesquisa@@Base+0x40>
   12668:	mov	r0, r4
   1266c:	ldrd	r4, [sp]
   12670:	ldr	r6, [sp, #8]
   12674:	add	sp, sp, #12
   12678:	pop	{pc}		; (ldr pc, [sp], #4)
   1267c:	ldr	r4, [r0, #4]
   12680:	cmp	r4, #0
   12684:	beq	12668 <lista_pesquisa@@Base+0x60>
   12688:	mov	r1, r5
   1268c:	ldr	r0, [r4]
   12690:	bl	10e58 <strcmp@plt>
   12694:	cmp	r0, #0
   12698:	beq	12668 <lista_pesquisa@@Base+0x60>
   1269c:	ldr	r4, [r4, #8]
   126a0:	cmp	r4, #0
   126a4:	bne	12688 <lista_pesquisa@@Base+0x80>
   126a8:	b	12668 <lista_pesquisa@@Base+0x60>

000126ac <lista_ordena@@Base>:
   126ac:	subs	r3, r0, #0
   126b0:	beq	1273c <lista_ordena@@Base+0x90>
   126b4:	ldr	r0, [r3, #8]
   126b8:	cmp	r0, #0
   126bc:	bxeq	lr
   126c0:	strd	r4, [sp, #-16]!
   126c4:	str	r6, [sp, #8]
   126c8:	str	lr, [sp, #12]
   126cc:	ldr	r6, [r3]
   126d0:	ldr	r4, [r6, #4]
   126d4:	cmp	r4, #0
   126d8:	moveq	r0, #0
   126dc:	bne	126f4 <lista_ordena@@Base+0x48>
   126e0:	b	12748 <lista_ordena@@Base+0x9c>
   126e4:	ldr	r6, [r6, #4]
   126e8:	ldr	r4, [r6, #4]
   126ec:	cmp	r4, #0
   126f0:	beq	12744 <lista_ordena@@Base+0x98>
   126f4:	cmp	r4, #0
   126f8:	movne	r5, r6
   126fc:	beq	126e4 <lista_ordena@@Base+0x38>
   12700:	ldr	r1, [r5]
   12704:	ldr	r0, [r4]
   12708:	bl	10e58 <strcmp@plt>
   1270c:	cmp	r0, #0
   12710:	movlt	r5, r4
   12714:	ldr	r4, [r4, #4]
   12718:	cmp	r4, #0
   1271c:	bne	12700 <lista_ordena@@Base+0x54>
   12720:	cmp	r5, r6
   12724:	beq	126e4 <lista_ordena@@Base+0x38>
   12728:	ldr	r3, [r6]
   1272c:	ldr	r2, [r5]
   12730:	str	r2, [r6]
   12734:	str	r3, [r5]
   12738:	b	126e4 <lista_ordena@@Base+0x38>
   1273c:	mvn	r0, #0
   12740:	bx	lr
   12744:	mov	r0, #0
   12748:	ldrd	r4, [sp]
   1274c:	ldr	r6, [sp, #8]
   12750:	add	sp, sp, #12
   12754:	pop	{pc}		; (ldr pc, [sp], #4)

00012758 <lista_inverte@@Base>:
   12758:	subs	r1, r0, #0
   1275c:	beq	127ec <lista_inverte@@Base+0x94>
   12760:	ldr	r2, [r1, #8]
   12764:	cmp	r2, #1
   12768:	ble	127f4 <lista_inverte@@Base+0x9c>
   1276c:	ldr	r3, [r1]
   12770:	ldr	r3, [r3, #4]
   12774:	cmp	r2, #2
   12778:	ble	127c0 <lista_inverte@@Base+0x68>
   1277c:	mov	r0, #0
   12780:	ldr	ip, [r3, #8]
   12784:	ldr	r2, [r3, #4]
   12788:	str	r2, [ip, #4]
   1278c:	ldr	ip, [r3, #8]
   12790:	str	ip, [r2, #8]
   12794:	ldr	ip, [r3, #4]
   12798:	ldr	r2, [r1]
   1279c:	str	r2, [r3, #4]
   127a0:	str	r3, [r2, #8]
   127a4:	str	r3, [r1]
   127a8:	add	r0, r0, #1
   127ac:	mov	r3, ip
   127b0:	ldr	r2, [r1, #8]
   127b4:	sub	r2, r2, #2
   127b8:	cmp	r2, r0
   127bc:	bgt	12780 <lista_inverte@@Base+0x28>
   127c0:	ldr	r3, [r1, #4]
   127c4:	ldr	r2, [r3, #8]
   127c8:	str	r2, [r1, #4]
   127cc:	mov	r0, #0
   127d0:	str	r0, [r2, #4]
   127d4:	str	r0, [r3, #8]
   127d8:	ldr	r2, [r1]
   127dc:	str	r2, [r3, #4]
   127e0:	str	r3, [r2, #8]
   127e4:	str	r3, [r1]
   127e8:	bx	lr
   127ec:	mvn	r0, #0
   127f0:	bx	lr
   127f4:	mov	r0, #0
   127f8:	bx	lr

000127fc <vetor_novo@@Base>:
   127fc:	str	r4, [sp, #-8]!
   12800:	str	lr, [sp, #4]
   12804:	mov	r0, #12
   12808:	bl	10ec4 <malloc@plt>
   1280c:	cmp	r0, #0
   12810:	beq	12824 <vetor_novo@@Base+0x28>
   12814:	mov	r3, #0
   12818:	str	r3, [r0]
   1281c:	str	r3, [r0, #4]
   12820:	str	r3, [r0, #8]
   12824:	ldr	r4, [sp]
   12828:	add	sp, sp, #4
   1282c:	pop	{pc}		; (ldr pc, [sp], #4)

00012830 <vetor_apaga@@Base>:
   12830:	str	r4, [sp, #-8]!
   12834:	str	lr, [sp, #4]
   12838:	subs	r4, r0, #0
   1283c:	beq	12850 <vetor_apaga@@Base+0x20>
   12840:	ldr	r0, [r4, #8]
   12844:	bl	10e94 <free@plt>
   12848:	mov	r0, r4
   1284c:	bl	10e94 <free@plt>
   12850:	ldr	r4, [sp]
   12854:	add	sp, sp, #4
   12858:	pop	{pc}		; (ldr pc, [sp], #4)

0001285c <vetor_atribui@@Base>:
   1285c:	mov	r3, r0
   12860:	cmp	r0, #0
   12864:	lsrne	r0, r1, #31
   12868:	moveq	r0, #1
   1286c:	cmp	r0, #0
   12870:	bne	12890 <vetor_atribui@@Base+0x34>
   12874:	ldr	r0, [r3]
   12878:	cmp	r0, r1
   1287c:	ble	12898 <vetor_atribui@@Base+0x3c>
   12880:	ldr	r3, [r3, #8]
   12884:	str	r2, [r3, r1, lsl #2]
   12888:	mov	r0, r1
   1288c:	bx	lr
   12890:	mvn	r0, #0
   12894:	bx	lr
   12898:	mvn	r0, #0
   1289c:	bx	lr

000128a0 <vetor_tamanho@@Base>:
   128a0:	cmp	r0, #0
   128a4:	ldrne	r0, [r0]
   128a8:	mvneq	r0, #0
   128ac:	bx	lr

000128b0 <vetor_elemento@@Base>:
   128b0:	mov	r3, r0
   128b4:	cmp	r0, #0
   128b8:	lsrne	r0, r1, #31
   128bc:	moveq	r0, #1
   128c0:	cmp	r0, #0
   128c4:	bne	128e0 <vetor_elemento@@Base+0x30>
   128c8:	ldr	r2, [r3]
   128cc:	cmp	r2, r1
   128d0:	ble	128e8 <vetor_elemento@@Base+0x38>
   128d4:	ldr	r3, [r3, #8]
   128d8:	ldr	r0, [r3, r1, lsl #2]
   128dc:	bx	lr
   128e0:	mov	r0, #-2147483648	; 0x80000000
   128e4:	bx	lr
   128e8:	mov	r0, #-2147483648	; 0x80000000
   128ec:	bx	lr

000128f0 <vetor_insere@@Base>:
   128f0:	strd	r4, [sp, #-16]!
   128f4:	str	r6, [sp, #8]
   128f8:	str	lr, [sp, #12]
   128fc:	mov	r4, r0
   12900:	cmn	r2, #1
   12904:	movge	r3, #0
   12908:	movlt	r3, #1
   1290c:	cmp	r0, #0
   12910:	movne	r0, r3
   12914:	moveq	r0, #1
   12918:	cmp	r0, #0
   1291c:	bne	129d4 <vetor_insere@@Base+0xe4>
   12920:	mov	r6, r1
   12924:	mov	r5, r2
   12928:	ldr	r3, [r4]
   1292c:	cmp	r3, r2
   12930:	blt	129dc <vetor_insere@@Base+0xec>
   12934:	cmn	r2, #1
   12938:	moveq	r5, r3
   1293c:	ldr	r1, [r4, #4]
   12940:	cmp	r3, r1
   12944:	beq	129a4 <vetor_insere@@Base+0xb4>
   12948:	ldr	r2, [r4]
   1294c:	sub	r2, r2, #1
   12950:	cmp	r5, r2
   12954:	bgt	1297c <vetor_insere@@Base+0x8c>
   12958:	lsl	r1, r2, #2
   1295c:	sub	r0, r5, #1
   12960:	ldr	r3, [r4, #8]
   12964:	ldr	ip, [r3, r1]!
   12968:	str	ip, [r3, #4]
   1296c:	sub	r2, r2, #1
   12970:	sub	r1, r1, #4
   12974:	cmp	r2, r0
   12978:	bne	12960 <vetor_insere@@Base+0x70>
   1297c:	ldr	r3, [r4, #8]
   12980:	str	r6, [r3, r5, lsl #2]
   12984:	ldr	r3, [r4]
   12988:	add	r3, r3, #1
   1298c:	str	r3, [r4]
   12990:	mov	r0, r5
   12994:	ldrd	r4, [sp]
   12998:	ldr	r6, [sp, #8]
   1299c:	add	sp, sp, #12
   129a0:	pop	{pc}		; (ldr pc, [sp], #4)
   129a4:	cmp	r1, #0
   129a8:	lslne	r1, r1, #1
   129ac:	moveq	r1, #1
   129b0:	str	r1, [r4, #4]
   129b4:	lsl	r1, r1, #2
   129b8:	ldr	r0, [r4, #8]
   129bc:	bl	10ea0 <realloc@plt>
   129c0:	str	r0, [r4, #8]
   129c4:	cmp	r0, #0
   129c8:	bne	12948 <vetor_insere@@Base+0x58>
   129cc:	mvn	r0, #0
   129d0:	b	12994 <vetor_insere@@Base+0xa4>
   129d4:	mvn	r0, #0
   129d8:	b	12994 <vetor_insere@@Base+0xa4>
   129dc:	mvn	r0, #0
   129e0:	b	12994 <vetor_insere@@Base+0xa4>

000129e4 <vetor_remove@@Base>:
   129e4:	mov	r2, r0
   129e8:	cmp	r0, #0
   129ec:	lsrne	r0, r1, #31
   129f0:	moveq	r0, #1
   129f4:	cmp	r0, #0
   129f8:	bne	12a48 <vetor_remove@@Base+0x64>
   129fc:	ldr	r3, [r2]
   12a00:	cmp	r3, r1
   12a04:	ble	12a50 <vetor_remove@@Base+0x6c>
   12a08:	add	r1, r1, #1
   12a0c:	cmp	r3, r1
   12a10:	ble	12a38 <vetor_remove@@Base+0x54>
   12a14:	lsl	r0, r1, #2
   12a18:	ldr	r3, [r2, #8]
   12a1c:	ldr	ip, [r3, r0]!
   12a20:	str	ip, [r3, #-4]
   12a24:	add	r1, r1, #1
   12a28:	ldr	r3, [r2]
   12a2c:	add	r0, r0, #4
   12a30:	cmp	r3, r1
   12a34:	bgt	12a18 <vetor_remove@@Base+0x34>
   12a38:	sub	r3, r3, #1
   12a3c:	str	r3, [r2]
   12a40:	mov	r0, #0
   12a44:	bx	lr
   12a48:	mvn	r0, #0
   12a4c:	bx	lr
   12a50:	mvn	r0, #0
   12a54:	bx	lr

00012a58 <vetor_pesquisa@@Base>:
   12a58:	cmp	r0, #0
   12a5c:	beq	12aa4 <vetor_pesquisa@@Base+0x4c>
   12a60:	ldr	ip, [r0]
   12a64:	cmp	ip, #0
   12a68:	ble	12aac <vetor_pesquisa@@Base+0x54>
   12a6c:	ldr	r3, [r0, #8]
   12a70:	ldr	r2, [r3]
   12a74:	cmp	r1, r2
   12a78:	beq	12ab4 <vetor_pesquisa@@Base+0x5c>
   12a7c:	mov	r0, #0
   12a80:	add	r0, r0, #1
   12a84:	cmp	r0, ip
   12a88:	beq	12a9c <vetor_pesquisa@@Base+0x44>
   12a8c:	ldr	r2, [r3, #4]!
   12a90:	cmp	r2, r1
   12a94:	bne	12a80 <vetor_pesquisa@@Base+0x28>
   12a98:	bx	lr
   12a9c:	mvn	r0, #0
   12aa0:	bx	lr
   12aa4:	mvn	r0, #0
   12aa8:	bx	lr
   12aac:	mvn	r0, #0
   12ab0:	bx	lr
   12ab4:	mov	r0, #0
   12ab8:	b	12a98 <vetor_pesquisa@@Base+0x40>

00012abc <vetor_ordena@@Base>:
   12abc:	cmp	r0, #0
   12ac0:	beq	12b6c <vetor_ordena@@Base+0xb0>
   12ac4:	ldr	r3, [r0]
   12ac8:	cmp	r3, #1
   12acc:	ble	12b74 <vetor_ordena@@Base+0xb8>
   12ad0:	strd	r4, [sp, #-12]!
   12ad4:	str	lr, [sp, #8]
   12ad8:	mov	r5, #4
   12adc:	mov	r4, #1
   12ae0:	b	12b04 <vetor_ordena@@Base+0x48>
   12ae4:	mov	r1, r4
   12ae8:	ldr	r3, [r0, #8]
   12aec:	str	lr, [r3, r1, lsl #2]
   12af0:	add	r4, r4, #1
   12af4:	add	r5, r5, #4
   12af8:	ldr	r3, [r0]
   12afc:	cmp	r3, r4
   12b00:	ble	12b5c <vetor_ordena@@Base+0xa0>
   12b04:	ldr	r2, [r0, #8]
   12b08:	ldr	lr, [r2, r5]
   12b0c:	cmp	r4, #0
   12b10:	ble	12ae4 <vetor_ordena@@Base+0x28>
   12b14:	add	r3, r2, r5
   12b18:	ldr	ip, [r3, #-4]
   12b1c:	cmp	lr, ip
   12b20:	bge	12b54 <vetor_ordena@@Base+0x98>
   12b24:	mov	r3, r5
   12b28:	mov	r1, r4
   12b2c:	str	ip, [r2, r3]
   12b30:	subs	r1, r1, #1
   12b34:	beq	12ae8 <vetor_ordena@@Base+0x2c>
   12b38:	ldr	r2, [r0, #8]
   12b3c:	add	ip, r2, r3
   12b40:	ldr	ip, [ip, #-8]
   12b44:	sub	r3, r3, #4
   12b48:	cmp	ip, lr
   12b4c:	bgt	12b2c <vetor_ordena@@Base+0x70>
   12b50:	b	12ae8 <vetor_ordena@@Base+0x2c>
   12b54:	mov	r1, r4
   12b58:	b	12ae8 <vetor_ordena@@Base+0x2c>
   12b5c:	mov	r0, #0
   12b60:	ldrd	r4, [sp]
   12b64:	add	sp, sp, #8
   12b68:	pop	{pc}		; (ldr pc, [sp], #4)
   12b6c:	mvn	r0, #0
   12b70:	bx	lr
   12b74:	mov	r0, #0
   12b78:	bx	lr

00012b7c <__libc_csu_init@@Base>:
   12b7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b80:	mov	r7, r0
   12b84:	ldr	r6, [pc, #72]	; 12bd4 <__libc_csu_init@@Base+0x58>
   12b88:	ldr	r5, [pc, #72]	; 12bd8 <__libc_csu_init@@Base+0x5c>
   12b8c:	add	r6, pc, r6
   12b90:	add	r5, pc, r5
   12b94:	sub	r6, r6, r5
   12b98:	mov	r8, r1
   12b9c:	mov	r9, r2
   12ba0:	bl	10e2c <calloc@plt-0x20>
   12ba4:	asrs	r6, r6, #2
   12ba8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bac:	mov	r4, #0
   12bb0:	add	r4, r4, #1
   12bb4:	ldr	r3, [r5], #4
   12bb8:	mov	r2, r9
   12bbc:	mov	r1, r8
   12bc0:	mov	r0, r7
   12bc4:	blx	r3
   12bc8:	cmp	r6, r4
   12bcc:	bne	12bb0 <__libc_csu_init@@Base+0x34>
   12bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bd4:	andeq	r0, r1, r0, lsl #7
   12bd8:	andeq	r0, r1, r8, ror r3

00012bdc <__libc_csu_fini@@Base>:
   12bdc:	bx	lr

Disassembly of section .fini:

00012be0 <.fini>:
   12be0:	push	{r3, lr}
   12be4:	pop	{r3, pc}
