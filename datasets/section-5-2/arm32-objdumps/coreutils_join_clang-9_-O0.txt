
../repos/coreutils/src/join:     file format elf32-littlearm


Disassembly of section .init:

0001104c <.init>:
   1104c:	push	{r3, lr}
   11050:	bl	11378 <__assert_fail@plt+0x48>
   11054:	pop	{r3, pc}

Disassembly of section .plt:

00011058 <fdopen@plt-0x14>:
   11058:	push	{lr}		; (str lr, [sp, #-4]!)
   1105c:	ldr	lr, [pc, #4]	; 11068 <fdopen@plt-0x4>
   11060:	add	lr, pc, lr
   11064:	ldr	pc, [lr, #8]!
   11068:	muleq	r2, r8, pc	; <UNPREDICTABLE>

0001106c <fdopen@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #135168	; 0x21000
   11074:	ldr	pc, [ip, #3992]!	; 0xf98

00011078 <calloc@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #135168	; 0x21000
   11080:	ldr	pc, [ip, #3984]!	; 0xf90

00011084 <fputs_unlocked@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #135168	; 0x21000
   1108c:	ldr	pc, [ip, #3976]!	; 0xf88

00011090 <raise@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #135168	; 0x21000
   11098:	ldr	pc, [ip, #3968]!	; 0xf80

0001109c <strcmp@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #135168	; 0x21000
   110a4:	ldr	pc, [ip, #3960]!	; 0xf78

000110a8 <posix_fadvise64@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #135168	; 0x21000
   110b0:	ldr	pc, [ip, #3952]!	; 0xf70

000110b4 <printf@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #135168	; 0x21000
   110bc:	ldr	pc, [ip, #3944]!	; 0xf68

000110c0 <fflush@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #135168	; 0x21000
   110c8:	ldr	pc, [ip, #3936]!	; 0xf60

000110cc <free@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #135168	; 0x21000
   110d4:	ldr	pc, [ip, #3928]!	; 0xf58

000110d8 <_exit@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #135168	; 0x21000
   110e0:	ldr	pc, [ip, #3920]!	; 0xf50

000110e4 <memcpy@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #135168	; 0x21000
   110ec:	ldr	pc, [ip, #3912]!	; 0xf48

000110f0 <mbsinit@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #135168	; 0x21000
   110f8:	ldr	pc, [ip, #3904]!	; 0xf40

000110fc <fwrite_unlocked@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #135168	; 0x21000
   11104:	ldr	pc, [ip, #3896]!	; 0xf38

00011108 <memcmp@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #135168	; 0x21000
   11110:	ldr	pc, [ip, #3888]!	; 0xf30

00011114 <getc_unlocked@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #135168	; 0x21000
   1111c:	ldr	pc, [ip, #3880]!	; 0xf28

00011120 <realloc@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #135168	; 0x21000
   11128:	ldr	pc, [ip, #3872]!	; 0xf20

0001112c <textdomain@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #135168	; 0x21000
   11134:	ldr	pc, [ip, #3864]!	; 0xf18

00011138 <iswprint@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #135168	; 0x21000
   11140:	ldr	pc, [ip, #3856]!	; 0xf10

00011144 <lseek64@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #135168	; 0x21000
   1114c:	ldr	pc, [ip, #3848]!	; 0xf08

00011150 <__ctype_get_mb_cur_max@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #135168	; 0x21000
   11158:	ldr	pc, [ip, #3840]!	; 0xf00

0001115c <__fpending@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #135168	; 0x21000
   11164:	ldr	pc, [ip, #3832]!	; 0xef8

00011168 <ferror_unlocked@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #135168	; 0x21000
   11170:	ldr	pc, [ip, #3824]!	; 0xef0

00011174 <mbrtowc@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #135168	; 0x21000
   1117c:	ldr	pc, [ip, #3816]!	; 0xee8

00011180 <error@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #135168	; 0x21000
   11188:	ldr	pc, [ip, #3808]!	; 0xee0

0001118c <strcoll@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #135168	; 0x21000
   11194:	ldr	pc, [ip, #3800]!	; 0xed8

00011198 <malloc@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #135168	; 0x21000
   111a0:	ldr	pc, [ip, #3792]!	; 0xed0

000111a4 <__libc_start_main@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #135168	; 0x21000
   111ac:	ldr	pc, [ip, #3784]!	; 0xec8

000111b0 <__freading@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #135168	; 0x21000
   111b8:	ldr	pc, [ip, #3776]!	; 0xec0

000111bc <__gmon_start__@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #135168	; 0x21000
   111c4:	ldr	pc, [ip, #3768]!	; 0xeb8

000111c8 <getopt_long@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #135168	; 0x21000
   111d0:	ldr	pc, [ip, #3760]!	; 0xeb0

000111d4 <__ctype_b_loc@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #135168	; 0x21000
   111dc:	ldr	pc, [ip, #3752]!	; 0xea8

000111e0 <exit@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #135168	; 0x21000
   111e8:	ldr	pc, [ip, #3744]!	; 0xea0

000111ec <gettext@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #135168	; 0x21000
   111f4:	ldr	pc, [ip, #3736]!	; 0xe98

000111f8 <strtoul@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #135168	; 0x21000
   11200:	ldr	pc, [ip, #3728]!	; 0xe90

00011204 <strlen@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #135168	; 0x21000
   1120c:	ldr	pc, [ip, #3720]!	; 0xe88

00011210 <strchr@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #135168	; 0x21000
   11218:	ldr	pc, [ip, #3712]!	; 0xe80

0001121c <fprintf@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #135168	; 0x21000
   11224:	ldr	pc, [ip, #3704]!	; 0xe78

00011228 <__errno_location@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #135168	; 0x21000
   11230:	ldr	pc, [ip, #3696]!	; 0xe70

00011234 <__cxa_atexit@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #135168	; 0x21000
   1123c:	ldr	pc, [ip, #3688]!	; 0xe68

00011240 <memset@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #135168	; 0x21000
   11248:	ldr	pc, [ip, #3680]!	; 0xe60

0001124c <fileno@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #135168	; 0x21000
   11254:	ldr	pc, [ip, #3672]!	; 0xe58

00011258 <strtoumax@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #135168	; 0x21000
   11260:	ldr	pc, [ip, #3664]!	; 0xe50

00011264 <memchr@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #135168	; 0x21000
   1126c:	ldr	pc, [ip, #3656]!	; 0xe48

00011270 <fclose@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #135168	; 0x21000
   11278:	ldr	pc, [ip, #3648]!	; 0xe40

0001127c <fseeko64@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #135168	; 0x21000
   11284:	ldr	pc, [ip, #3640]!	; 0xe38

00011288 <fcntl64@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #135168	; 0x21000
   11290:	ldr	pc, [ip, #3632]!	; 0xe30

00011294 <setlocale@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #135168	; 0x21000
   1129c:	ldr	pc, [ip, #3624]!	; 0xe28

000112a0 <toupper@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #135168	; 0x21000
   112a8:	ldr	pc, [ip, #3616]!	; 0xe20

000112ac <strrchr@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #135168	; 0x21000
   112b4:	ldr	pc, [ip, #3608]!	; 0xe18

000112b8 <nl_langinfo@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #135168	; 0x21000
   112c0:	ldr	pc, [ip, #3600]!	; 0xe10

000112c4 <fopen64@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #135168	; 0x21000
   112cc:	ldr	pc, [ip, #3592]!	; 0xe08

000112d0 <strpbrk@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #135168	; 0x21000
   112d8:	ldr	pc, [ip, #3584]!	; 0xe00

000112dc <bindtextdomain@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #135168	; 0x21000
   112e4:	ldr	pc, [ip, #3576]!	; 0xdf8

000112e8 <fputs@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #135168	; 0x21000
   112f0:	ldr	pc, [ip, #3568]!	; 0xdf0

000112f4 <strncmp@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #135168	; 0x21000
   112fc:	ldr	pc, [ip, #3560]!	; 0xde8

00011300 <abort@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #135168	; 0x21000
   11308:	ldr	pc, [ip, #3552]!	; 0xde0

0001130c <feof_unlocked@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #135168	; 0x21000
   11314:	ldr	pc, [ip, #3544]!	; 0xdd8

00011318 <close@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #135168	; 0x21000
   11320:	ldr	pc, [ip, #3536]!	; 0xdd0

00011324 <putchar_unlocked@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #135168	; 0x21000
   1132c:	ldr	pc, [ip, #3528]!	; 0xdc8

00011330 <__assert_fail@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #135168	; 0x21000
   11338:	ldr	pc, [ip, #3520]!	; 0xdc0

Disassembly of section .text:

0001133c <.text>:
   1133c:	mov	fp, #0
   11340:	mov	lr, #0
   11344:	pop	{r1}		; (ldr r1, [sp], #4)
   11348:	mov	r2, sp
   1134c:	push	{r2}		; (str r2, [sp, #-4]!)
   11350:	push	{r0}		; (str r0, [sp, #-4]!)
   11354:	ldr	ip, [pc, #16]	; 1136c <__assert_fail@plt+0x3c>
   11358:	push	{ip}		; (str ip, [sp, #-4]!)
   1135c:	ldr	r0, [pc, #12]	; 11370 <__assert_fail@plt+0x40>
   11360:	ldr	r3, [pc, #12]	; 11374 <__assert_fail@plt+0x44>
   11364:	bl	111a4 <__libc_start_main@plt>
   11368:	bl	11300 <abort@plt>
   1136c:	andeq	r1, r2, r4, ror #4
   11370:			; <UNDEFINED> instruction: 0x000117b8
   11374:	andeq	r1, r2, r4, lsl #4
   11378:	ldr	r3, [pc, #20]	; 11394 <__assert_fail@plt+0x64>
   1137c:	ldr	r2, [pc, #20]	; 11398 <__assert_fail@plt+0x68>
   11380:	add	r3, pc, r3
   11384:	ldr	r2, [r3, r2]
   11388:	cmp	r2, #0
   1138c:	bxeq	lr
   11390:	b	111bc <__gmon_start__@plt>
   11394:	andeq	r1, r2, r8, ror ip
   11398:	strdeq	r0, [r0], -ip
   1139c:	ldr	r0, [pc, #24]	; 113bc <__assert_fail@plt+0x8c>
   113a0:	ldr	r3, [pc, #24]	; 113c0 <__assert_fail@plt+0x90>
   113a4:	cmp	r3, r0
   113a8:	bxeq	lr
   113ac:	ldr	r3, [pc, #16]	; 113c4 <__assert_fail@plt+0x94>
   113b0:	cmp	r3, #0
   113b4:	bxeq	lr
   113b8:	bx	r3
   113bc:	andeq	r3, r3, r4, ror #2
   113c0:	andeq	r3, r3, r4, ror #2
   113c4:	andeq	r0, r0, r0
   113c8:	ldr	r0, [pc, #36]	; 113f4 <__assert_fail@plt+0xc4>
   113cc:	ldr	r1, [pc, #36]	; 113f8 <__assert_fail@plt+0xc8>
   113d0:	sub	r1, r1, r0
   113d4:	asr	r1, r1, #2
   113d8:	add	r1, r1, r1, lsr #31
   113dc:	asrs	r1, r1, #1
   113e0:	bxeq	lr
   113e4:	ldr	r3, [pc, #16]	; 113fc <__assert_fail@plt+0xcc>
   113e8:	cmp	r3, #0
   113ec:	bxeq	lr
   113f0:	bx	r3
   113f4:	andeq	r3, r3, r4, ror #2
   113f8:	andeq	r3, r3, r4, ror #2
   113fc:	andeq	r0, r0, r0
   11400:	push	{r4, lr}
   11404:	ldr	r4, [pc, #24]	; 11424 <__assert_fail@plt+0xf4>
   11408:	ldrb	r3, [r4]
   1140c:	cmp	r3, #0
   11410:	popne	{r4, pc}
   11414:	bl	1139c <__assert_fail@plt+0x6c>
   11418:	mov	r3, #1
   1141c:	strb	r3, [r4]
   11420:	pop	{r4, pc}
   11424:	andeq	r3, r3, ip, lsl #3
   11428:	b	113c8 <__assert_fail@plt+0x98>
   1142c:	push	{fp, lr}
   11430:	mov	fp, sp
   11434:	sub	sp, sp, #56	; 0x38
   11438:	str	r0, [fp, #-4]
   1143c:	ldr	r0, [fp, #-4]
   11440:	cmp	r0, #0
   11444:	beq	11490 <__assert_fail@plt+0x160>
   11448:	b	1144c <__assert_fail@plt+0x11c>
   1144c:	movw	r0, #12664	; 0x3178
   11450:	movt	r0, #3
   11454:	ldr	r0, [r0]
   11458:	movw	r1, #4748	; 0x128c
   1145c:	movt	r1, #2
   11460:	str	r0, [fp, #-8]
   11464:	mov	r0, r1
   11468:	bl	111ec <gettext@plt>
   1146c:	movw	r1, #12808	; 0x3208
   11470:	movt	r1, #3
   11474:	ldr	r2, [r1]
   11478:	ldr	r1, [fp, #-8]
   1147c:	str	r0, [fp, #-12]
   11480:	mov	r0, r1
   11484:	ldr	r1, [fp, #-12]
   11488:	bl	1121c <fprintf@plt>
   1148c:	b	11604 <__assert_fail@plt+0x2d4>
   11490:	movw	r0, #4787	; 0x12b3
   11494:	movt	r0, #2
   11498:	bl	111ec <gettext@plt>
   1149c:	movw	r1, #12808	; 0x3208
   114a0:	movt	r1, #3
   114a4:	ldr	r1, [r1]
   114a8:	bl	110b4 <printf@plt>
   114ac:	movw	r1, #4822	; 0x12d6
   114b0:	movt	r1, #2
   114b4:	str	r0, [fp, #-16]
   114b8:	mov	r0, r1
   114bc:	bl	111ec <gettext@plt>
   114c0:	movw	r1, #12676	; 0x3184
   114c4:	movt	r1, #3
   114c8:	ldr	r1, [r1]
   114cc:	bl	11084 <fputs_unlocked@plt>
   114d0:	movw	r1, #4972	; 0x136c
   114d4:	movt	r1, #2
   114d8:	str	r0, [fp, #-20]	; 0xffffffec
   114dc:	mov	r0, r1
   114e0:	bl	111ec <gettext@plt>
   114e4:	movw	r1, #12676	; 0x3184
   114e8:	movt	r1, #3
   114ec:	ldr	r1, [r1]
   114f0:	bl	11084 <fputs_unlocked@plt>
   114f4:	movw	r1, #5032	; 0x13a8
   114f8:	movt	r1, #2
   114fc:	str	r0, [fp, #-24]	; 0xffffffe8
   11500:	mov	r0, r1
   11504:	bl	111ec <gettext@plt>
   11508:	movw	r1, #12676	; 0x3184
   1150c:	movt	r1, #3
   11510:	ldr	r1, [r1]
   11514:	bl	11084 <fputs_unlocked@plt>
   11518:	movw	r1, #5255	; 0x1487
   1151c:	movt	r1, #2
   11520:	str	r0, [sp, #28]
   11524:	mov	r0, r1
   11528:	bl	111ec <gettext@plt>
   1152c:	movw	r1, #12676	; 0x3184
   11530:	movt	r1, #3
   11534:	ldr	r1, [r1]
   11538:	bl	11084 <fputs_unlocked@plt>
   1153c:	movw	r1, #5527	; 0x1597
   11540:	movt	r1, #2
   11544:	str	r0, [sp, #24]
   11548:	mov	r0, r1
   1154c:	bl	111ec <gettext@plt>
   11550:	movw	r1, #12676	; 0x3184
   11554:	movt	r1, #3
   11558:	ldr	r1, [r1]
   1155c:	bl	11084 <fputs_unlocked@plt>
   11560:	movw	r1, #6058	; 0x17aa
   11564:	movt	r1, #2
   11568:	str	r0, [sp, #20]
   1156c:	mov	r0, r1
   11570:	bl	111ec <gettext@plt>
   11574:	movw	r1, #12676	; 0x3184
   11578:	movt	r1, #3
   1157c:	ldr	r1, [r1]
   11580:	bl	11084 <fputs_unlocked@plt>
   11584:	movw	r1, #6119	; 0x17e7
   11588:	movt	r1, #2
   1158c:	str	r0, [sp, #16]
   11590:	mov	r0, r1
   11594:	bl	111ec <gettext@plt>
   11598:	movw	r1, #12676	; 0x3184
   1159c:	movt	r1, #3
   115a0:	ldr	r1, [r1]
   115a4:	bl	11084 <fputs_unlocked@plt>
   115a8:	movw	r1, #6164	; 0x1814
   115ac:	movt	r1, #2
   115b0:	str	r0, [sp, #12]
   115b4:	mov	r0, r1
   115b8:	bl	111ec <gettext@plt>
   115bc:	movw	r1, #12676	; 0x3184
   115c0:	movt	r1, #3
   115c4:	ldr	r1, [r1]
   115c8:	bl	11084 <fputs_unlocked@plt>
   115cc:	movw	r1, #6218	; 0x184a
   115d0:	movt	r1, #2
   115d4:	str	r0, [sp, #8]
   115d8:	mov	r0, r1
   115dc:	bl	111ec <gettext@plt>
   115e0:	movw	r1, #12676	; 0x3184
   115e4:	movt	r1, #3
   115e8:	ldr	r1, [r1]
   115ec:	bl	11084 <fputs_unlocked@plt>
   115f0:	movw	r1, #7036	; 0x1b7c
   115f4:	movt	r1, #2
   115f8:	str	r0, [sp, #4]
   115fc:	mov	r0, r1
   11600:	bl	1160c <__assert_fail@plt+0x2dc>
   11604:	ldr	r0, [fp, #-4]
   11608:	bl	111e0 <exit@plt>
   1160c:	push	{fp, lr}
   11610:	mov	fp, sp
   11614:	sub	sp, sp, #88	; 0x58
   11618:	add	r1, sp, #28
   1161c:	movw	r2, #8100	; 0x1fa4
   11620:	movt	r2, #2
   11624:	str	r0, [fp, #-4]
   11628:	mov	r0, r1
   1162c:	str	r1, [sp, #12]
   11630:	mov	r1, r2
   11634:	movw	r2, #56	; 0x38
   11638:	bl	110e4 <memcpy@plt>
   1163c:	ldr	r0, [fp, #-4]
   11640:	str	r0, [sp, #24]
   11644:	ldr	r0, [sp, #12]
   11648:	str	r0, [sp, #20]
   1164c:	ldr	r0, [sp, #20]
   11650:	ldr	r0, [r0]
   11654:	movw	r1, #0
   11658:	cmp	r0, r1
   1165c:	movw	r0, #0
   11660:	str	r0, [sp, #8]
   11664:	beq	11690 <__assert_fail@plt+0x360>
   11668:	ldr	r0, [fp, #-4]
   1166c:	ldr	r1, [sp, #20]
   11670:	ldr	r1, [r1]
   11674:	bl	1109c <strcmp@plt>
   11678:	cmp	r0, #0
   1167c:	movw	r0, #0
   11680:	moveq	r0, #1
   11684:	mvn	r1, #0
   11688:	eor	r0, r0, r1
   1168c:	str	r0, [sp, #8]
   11690:	ldr	r0, [sp, #8]
   11694:	tst	r0, #1
   11698:	beq	116ac <__assert_fail@plt+0x37c>
   1169c:	ldr	r0, [sp, #20]
   116a0:	add	r0, r0, #8
   116a4:	str	r0, [sp, #20]
   116a8:	b	1164c <__assert_fail@plt+0x31c>
   116ac:	ldr	r0, [sp, #20]
   116b0:	ldr	r0, [r0, #4]
   116b4:	movw	r1, #0
   116b8:	cmp	r0, r1
   116bc:	beq	116cc <__assert_fail@plt+0x39c>
   116c0:	ldr	r0, [sp, #20]
   116c4:	ldr	r0, [r0, #4]
   116c8:	str	r0, [sp, #24]
   116cc:	movw	r0, #7431	; 0x1d07
   116d0:	movt	r0, #2
   116d4:	bl	111ec <gettext@plt>
   116d8:	movw	r1, #7203	; 0x1c23
   116dc:	movt	r1, #2
   116e0:	movw	r2, #7454	; 0x1d1e
   116e4:	movt	r2, #2
   116e8:	bl	110b4 <printf@plt>
   116ec:	movw	r1, #5
   116f0:	str	r0, [sp, #4]
   116f4:	mov	r0, r1
   116f8:	movw	r1, #0
   116fc:	bl	11294 <setlocale@plt>
   11700:	str	r0, [sp, #16]
   11704:	ldr	r0, [sp, #16]
   11708:	movw	r1, #0
   1170c:	cmp	r0, r1
   11710:	beq	1174c <__assert_fail@plt+0x41c>
   11714:	ldr	r0, [sp, #16]
   11718:	movw	r1, #7494	; 0x1d46
   1171c:	movt	r1, #2
   11720:	movw	r2, #3
   11724:	bl	112f4 <strncmp@plt>
   11728:	cmp	r0, #0
   1172c:	beq	1174c <__assert_fail@plt+0x41c>
   11730:	movw	r0, #7498	; 0x1d4a
   11734:	movt	r0, #2
   11738:	bl	111ec <gettext@plt>
   1173c:	movw	r1, #12676	; 0x3184
   11740:	movt	r1, #3
   11744:	ldr	r1, [r1]
   11748:	bl	11084 <fputs_unlocked@plt>
   1174c:	movw	r0, #7569	; 0x1d91
   11750:	movt	r0, #2
   11754:	bl	111ec <gettext@plt>
   11758:	ldr	r2, [fp, #-4]
   1175c:	movw	r1, #7454	; 0x1d1e
   11760:	movt	r1, #2
   11764:	bl	110b4 <printf@plt>
   11768:	movw	r1, #7596	; 0x1dac
   1176c:	movt	r1, #2
   11770:	str	r0, [sp]
   11774:	mov	r0, r1
   11778:	bl	111ec <gettext@plt>
   1177c:	ldr	r1, [sp, #24]
   11780:	ldr	r2, [sp, #24]
   11784:	ldr	r3, [fp, #-4]
   11788:	cmp	r2, r3
   1178c:	movw	r2, #0
   11790:	moveq	r2, #1
   11794:	tst	r2, #1
   11798:	movw	r2, #7746	; 0x1e42
   1179c:	movt	r2, #2
   117a0:	movw	r3, #7364	; 0x1cc4
   117a4:	movt	r3, #2
   117a8:	movne	r2, r3
   117ac:	bl	110b4 <printf@plt>
   117b0:	mov	sp, fp
   117b4:	pop	{fp, pc}
   117b8:	push	{fp, lr}
   117bc:	mov	fp, sp
   117c0:	sub	sp, sp, #200	; 0xc8
   117c4:	movw	r2, #0
   117c8:	str	r2, [fp, #-4]
   117cc:	str	r0, [fp, #-8]
   117d0:	str	r1, [fp, #-12]
   117d4:	str	r2, [fp, #-20]	; 0xffffffec
   117d8:	sub	r0, fp, #36	; 0x24
   117dc:	movw	r1, #0
   117e0:	and	r1, r1, #255	; 0xff
   117e4:	movw	r3, #8
   117e8:	str	r2, [fp, #-68]	; 0xffffffbc
   117ec:	mov	r2, r3
   117f0:	bl	11240 <memset@plt>
   117f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   117f8:	str	r0, [fp, #-52]	; 0xffffffcc
   117fc:	ldr	r1, [fp, #-12]
   11800:	ldr	r0, [r1]
   11804:	bl	14c2c <__assert_fail@plt+0x38fc>
   11808:	movw	r0, #6
   1180c:	movw	r1, #7746	; 0x1e42
   11810:	movt	r1, #2
   11814:	bl	11294 <setlocale@plt>
   11818:	movw	r1, #7207	; 0x1c27
   1181c:	movt	r1, #2
   11820:	str	r0, [fp, #-72]	; 0xffffffb8
   11824:	mov	r0, r1
   11828:	movw	r1, #7041	; 0x1b81
   1182c:	movt	r1, #2
   11830:	bl	112dc <bindtextdomain@plt>
   11834:	movw	r1, #7207	; 0x1c27
   11838:	movt	r1, #2
   1183c:	str	r0, [fp, #-76]	; 0xffffffb4
   11840:	mov	r0, r1
   11844:	bl	1112c <textdomain@plt>
   11848:	movw	r1, #3
   1184c:	str	r0, [fp, #-80]	; 0xffffffb0
   11850:	mov	r0, r1
   11854:	bl	148b4 <__assert_fail@plt+0x3584>
   11858:	and	r0, r0, #1
   1185c:	movw	r1, #12688	; 0x3190
   11860:	movt	r1, #3
   11864:	strb	r0, [r1]
   11868:	movw	r0, #17100	; 0x42cc
   1186c:	movt	r0, #1
   11870:	bl	21268 <__assert_fail@plt+0xff38>
   11874:	movw	r1, #9092	; 0x2384
   11878:	movt	r1, #1
   1187c:	str	r0, [fp, #-84]	; 0xffffffac
   11880:	mov	r0, r1
   11884:	bl	21268 <__assert_fail@plt+0xff38>
   11888:	movw	r1, #12689	; 0x3191
   1188c:	movt	r1, #3
   11890:	movw	r2, #1
   11894:	strb	r2, [r1]
   11898:	movw	r1, #12690	; 0x3192
   1189c:	movt	r1, #3
   118a0:	movw	r2, #0
   118a4:	strb	r2, [r1]
   118a8:	movw	r1, #12691	; 0x3193
   118ac:	movt	r1, #3
   118b0:	strb	r2, [r1, #1]
   118b4:	strb	r2, [r1]
   118b8:	movw	r1, #12696	; 0x3198
   118bc:	movt	r1, #3
   118c0:	movw	r2, #0
   118c4:	str	r2, [r1]
   118c8:	ldr	r0, [fp, #-8]
   118cc:	ldr	r1, [fp, #-12]
   118d0:	movw	r2, #7065	; 0x1b99
   118d4:	movt	r2, #2
   118d8:	movw	r3, #7972	; 0x1f24
   118dc:	movt	r3, #2
   118e0:	movw	ip, #0
   118e4:	str	ip, [sp]
   118e8:	bl	111c8 <getopt_long@plt>
   118ec:	str	r0, [fp, #-48]	; 0xffffffd0
   118f0:	cmn	r0, #1
   118f4:	beq	11f30 <__assert_fail@plt+0xc00>
   118f8:	mov	r0, #0
   118fc:	str	r0, [fp, #-16]
   11900:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11904:	cmn	r0, #3
   11908:	str	r0, [fp, #-88]	; 0xffffffa8
   1190c:	beq	11ed4 <__assert_fail@plt+0xba4>
   11910:	b	11914 <__assert_fail@plt+0x5e4>
   11914:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11918:	cmn	r0, #2
   1191c:	beq	11ecc <__assert_fail@plt+0xb9c>
   11920:	b	11924 <__assert_fail@plt+0x5f4>
   11924:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11928:	cmp	r0, #1
   1192c:	beq	11e7c <__assert_fail@plt+0xb4c>
   11930:	b	11934 <__assert_fail@plt+0x604>
   11934:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11938:	cmp	r0, #49	; 0x31
   1193c:	beq	11b68 <__assert_fail@plt+0x838>
   11940:	b	11944 <__assert_fail@plt+0x614>
   11944:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11948:	cmp	r0, #50	; 0x32
   1194c:	beq	11b94 <__assert_fail@plt+0x864>
   11950:	b	11954 <__assert_fail@plt+0x624>
   11954:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11958:	cmp	r0, #97	; 0x61
   1195c:	beq	11a1c <__assert_fail@plt+0x6ec>
   11960:	b	11964 <__assert_fail@plt+0x634>
   11964:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11968:	cmp	r0, #101	; 0x65
   1196c:	beq	11ad8 <__assert_fail@plt+0x7a8>
   11970:	b	11974 <__assert_fail@plt+0x644>
   11974:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11978:	cmp	r0, #105	; 0x69
   1197c:	beq	11b54 <__assert_fail@plt+0x824>
   11980:	b	11984 <__assert_fail@plt+0x654>
   11984:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11988:	cmp	r0, #106	; 0x6a
   1198c:	beq	11bc0 <__assert_fail@plt+0x890>
   11990:	b	11994 <__assert_fail@plt+0x664>
   11994:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11998:	cmp	r0, #111	; 0x6f
   1199c:	beq	11cd0 <__assert_fail@plt+0x9a0>
   119a0:	b	119a4 <__assert_fail@plt+0x674>
   119a4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   119a8:	cmp	r0, #116	; 0x74
   119ac:	beq	11d20 <__assert_fail@plt+0x9f0>
   119b0:	b	119b4 <__assert_fail@plt+0x684>
   119b4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   119b8:	cmp	r0, #118	; 0x76
   119bc:	beq	11a0c <__assert_fail@plt+0x6dc>
   119c0:	b	119c4 <__assert_fail@plt+0x694>
   119c4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   119c8:	cmp	r0, #122	; 0x7a
   119cc:	beq	11e40 <__assert_fail@plt+0xb10>
   119d0:	b	119d4 <__assert_fail@plt+0x6a4>
   119d4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   119d8:	cmp	r0, #256	; 0x100
   119dc:	beq	11e68 <__assert_fail@plt+0xb38>
   119e0:	b	119e4 <__assert_fail@plt+0x6b4>
   119e4:	movw	r0, #257	; 0x101
   119e8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   119ec:	cmp	r1, r0
   119f0:	beq	11e54 <__assert_fail@plt+0xb24>
   119f4:	b	119f8 <__assert_fail@plt+0x6c8>
   119f8:	movw	r0, #258	; 0x102
   119fc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11a00:	cmp	r1, r0
   11a04:	beq	11eb8 <__assert_fail@plt+0xb88>
   11a08:	b	11f1c <__assert_fail@plt+0xbec>
   11a0c:	movw	r0, #12689	; 0x3191
   11a10:	movt	r0, #3
   11a14:	movw	r1, #0
   11a18:	strb	r1, [r0]
   11a1c:	movw	r0, #12680	; 0x3188
   11a20:	movt	r0, #3
   11a24:	ldr	r0, [r0]
   11a28:	movw	r1, #0
   11a2c:	movw	r2, #10
   11a30:	sub	r3, fp, #60	; 0x3c
   11a34:	movw	ip, #7746	; 0x1e42
   11a38:	movt	ip, #2
   11a3c:	str	ip, [sp]
   11a40:	bl	1ad7c <__assert_fail@plt+0x9a4c>
   11a44:	cmp	r0, #0
   11a48:	bne	11a64 <__assert_fail@plt+0x734>
   11a4c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11a50:	cmp	r0, #1
   11a54:	beq	11aa4 <__assert_fail@plt+0x774>
   11a58:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11a5c:	cmp	r0, #2
   11a60:	beq	11aa4 <__assert_fail@plt+0x774>
   11a64:	movw	r0, #7085	; 0x1bad
   11a68:	movt	r0, #2
   11a6c:	bl	111ec <gettext@plt>
   11a70:	movw	r1, #12680	; 0x3188
   11a74:	movt	r1, #3
   11a78:	ldr	r1, [r1]
   11a7c:	str	r0, [fp, #-92]	; 0xffffffa4
   11a80:	mov	r0, r1
   11a84:	bl	17288 <__assert_fail@plt+0x5f58>
   11a88:	movw	r1, #1
   11a8c:	str	r0, [fp, #-96]	; 0xffffffa0
   11a90:	mov	r0, r1
   11a94:	movw	r1, #0
   11a98:	ldr	r2, [fp, #-92]	; 0xffffffa4
   11a9c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11aa0:	bl	11180 <error@plt>
   11aa4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11aa8:	cmp	r0, #1
   11aac:	bne	11ac4 <__assert_fail@plt+0x794>
   11ab0:	movw	r0, #12700	; 0x319c
   11ab4:	movt	r0, #3
   11ab8:	movw	r1, #1
   11abc:	strb	r1, [r0]
   11ac0:	b	11ad4 <__assert_fail@plt+0x7a4>
   11ac4:	movw	r0, #12701	; 0x319d
   11ac8:	movt	r0, #3
   11acc:	movw	r1, #1
   11ad0:	strb	r1, [r0]
   11ad4:	b	11f24 <__assert_fail@plt+0xbf4>
   11ad8:	movw	r0, #12704	; 0x31a0
   11adc:	movt	r0, #3
   11ae0:	ldr	r0, [r0]
   11ae4:	movw	r1, #0
   11ae8:	cmp	r0, r1
   11aec:	beq	11b38 <__assert_fail@plt+0x808>
   11af0:	movw	r0, #12704	; 0x31a0
   11af4:	movt	r0, #3
   11af8:	ldr	r0, [r0]
   11afc:	movw	r1, #12680	; 0x3188
   11b00:	movt	r1, #3
   11b04:	ldr	r1, [r1]
   11b08:	bl	1109c <strcmp@plt>
   11b0c:	cmp	r0, #0
   11b10:	beq	11b38 <__assert_fail@plt+0x808>
   11b14:	movw	r0, #7110	; 0x1bc6
   11b18:	movt	r0, #2
   11b1c:	bl	111ec <gettext@plt>
   11b20:	movw	r1, #1
   11b24:	str	r0, [sp, #100]	; 0x64
   11b28:	mov	r0, r1
   11b2c:	movw	r1, #0
   11b30:	ldr	r2, [sp, #100]	; 0x64
   11b34:	bl	11180 <error@plt>
   11b38:	movw	r0, #12680	; 0x3188
   11b3c:	movt	r0, #3
   11b40:	ldr	r0, [r0]
   11b44:	movw	r1, #12704	; 0x31a0
   11b48:	movt	r1, #3
   11b4c:	str	r0, [r1]
   11b50:	b	11f24 <__assert_fail@plt+0xbf4>
   11b54:	movw	r0, #12708	; 0x31a4
   11b58:	movt	r0, #3
   11b5c:	movw	r1, #1
   11b60:	strb	r1, [r0]
   11b64:	b	11f24 <__assert_fail@plt+0xbf4>
   11b68:	movw	r0, #12680	; 0x3188
   11b6c:	movt	r0, #3
   11b70:	ldr	r0, [r0]
   11b74:	bl	124b0 <__assert_fail@plt+0x1180>
   11b78:	movw	r1, #12552	; 0x3108
   11b7c:	movt	r1, #3
   11b80:	str	r0, [sp, #96]	; 0x60
   11b84:	mov	r0, r1
   11b88:	ldr	r1, [sp, #96]	; 0x60
   11b8c:	bl	1240c <__assert_fail@plt+0x10dc>
   11b90:	b	11f24 <__assert_fail@plt+0xbf4>
   11b94:	movw	r0, #12680	; 0x3188
   11b98:	movt	r0, #3
   11b9c:	ldr	r0, [r0]
   11ba0:	bl	124b0 <__assert_fail@plt+0x1180>
   11ba4:	movw	r1, #12556	; 0x310c
   11ba8:	movt	r1, #3
   11bac:	str	r0, [sp, #92]	; 0x5c
   11bb0:	mov	r0, r1
   11bb4:	ldr	r1, [sp, #92]	; 0x5c
   11bb8:	bl	1240c <__assert_fail@plt+0x10dc>
   11bbc:	b	11f24 <__assert_fail@plt+0xbf4>
   11bc0:	movw	r0, #12680	; 0x3188
   11bc4:	movt	r0, #3
   11bc8:	ldr	r0, [r0]
   11bcc:	ldrb	r0, [r0]
   11bd0:	cmp	r0, #49	; 0x31
   11bd4:	beq	11bf0 <__assert_fail@plt+0x8c0>
   11bd8:	movw	r0, #12680	; 0x3188
   11bdc:	movt	r0, #3
   11be0:	ldr	r0, [r0]
   11be4:	ldrb	r0, [r0]
   11be8:	cmp	r0, #50	; 0x32
   11bec:	bne	11c8c <__assert_fail@plt+0x95c>
   11bf0:	movw	r0, #12680	; 0x3188
   11bf4:	movt	r0, #3
   11bf8:	ldr	r0, [r0]
   11bfc:	ldrsb	r0, [r0, #1]
   11c00:	cmp	r0, #0
   11c04:	bne	11c8c <__assert_fail@plt+0x95c>
   11c08:	movw	r0, #12680	; 0x3188
   11c0c:	movt	r0, #3
   11c10:	ldr	r0, [r0]
   11c14:	ldr	r1, [fp, #-12]
   11c18:	movw	r2, #12656	; 0x3170
   11c1c:	movt	r2, #3
   11c20:	ldr	r2, [r2]
   11c24:	sub	r2, r2, #1
   11c28:	add	r1, r1, r2, lsl #2
   11c2c:	ldr	r1, [r1]
   11c30:	add	r1, r1, #2
   11c34:	cmp	r0, r1
   11c38:	bne	11c8c <__assert_fail@plt+0x95c>
   11c3c:	movw	r0, #12680	; 0x3188
   11c40:	movt	r0, #3
   11c44:	ldr	r0, [r0]
   11c48:	ldrb	r0, [r0]
   11c4c:	sub	r0, r0, #50	; 0x32
   11c50:	clz	r0, r0
   11c54:	lsr	r0, r0, #5
   11c58:	strb	r0, [fp, #-61]	; 0xffffffc3
   11c5c:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   11c60:	and	r0, r0, #1
   11c64:	sub	r1, fp, #36	; 0x24
   11c68:	add	r0, r1, r0, lsl #2
   11c6c:	ldr	r1, [r0]
   11c70:	add	r1, r1, #1
   11c74:	str	r1, [r0]
   11c78:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   11c7c:	and	r0, r0, #1
   11c80:	add	r0, r0, #1
   11c84:	str	r0, [fp, #-16]
   11c88:	b	11ccc <__assert_fail@plt+0x99c>
   11c8c:	movw	r0, #12680	; 0x3188
   11c90:	movt	r0, #3
   11c94:	ldr	r0, [r0]
   11c98:	bl	124b0 <__assert_fail@plt+0x1180>
   11c9c:	movw	r1, #12552	; 0x3108
   11ca0:	movt	r1, #3
   11ca4:	str	r0, [sp, #88]	; 0x58
   11ca8:	mov	r0, r1
   11cac:	ldr	r1, [sp, #88]	; 0x58
   11cb0:	bl	1240c <__assert_fail@plt+0x10dc>
   11cb4:	movw	r0, #12552	; 0x3108
   11cb8:	movt	r0, #3
   11cbc:	ldr	r1, [r0]
   11cc0:	movw	r0, #12556	; 0x310c
   11cc4:	movt	r0, #3
   11cc8:	bl	1240c <__assert_fail@plt+0x10dc>
   11ccc:	b	11f24 <__assert_fail@plt+0xbf4>
   11cd0:	movw	r0, #12680	; 0x3188
   11cd4:	movt	r0, #3
   11cd8:	ldr	r0, [r0]
   11cdc:	movw	r1, #7154	; 0x1bf2
   11ce0:	movt	r1, #2
   11ce4:	bl	1109c <strcmp@plt>
   11ce8:	cmp	r0, #0
   11cec:	bne	11d04 <__assert_fail@plt+0x9d4>
   11cf0:	movw	r0, #12709	; 0x31a5
   11cf4:	movt	r0, #3
   11cf8:	movw	r1, #1
   11cfc:	strb	r1, [r0]
   11d00:	b	11d1c <__assert_fail@plt+0x9ec>
   11d04:	movw	r0, #12680	; 0x3188
   11d08:	movt	r0, #3
   11d0c:	ldr	r0, [r0]
   11d10:	bl	12598 <__assert_fail@plt+0x1268>
   11d14:	movw	r0, #3
   11d18:	str	r0, [fp, #-16]
   11d1c:	b	11f24 <__assert_fail@plt+0xbf4>
   11d20:	movw	r0, #12680	; 0x3188
   11d24:	movt	r0, #3
   11d28:	ldr	r0, [r0]
   11d2c:	ldrb	r0, [r0]
   11d30:	strb	r0, [fp, #-62]	; 0xffffffc2
   11d34:	ldrsb	r0, [fp, #-62]	; 0xffffffc2
   11d38:	cmp	r0, #0
   11d3c:	bne	11d4c <__assert_fail@plt+0xa1c>
   11d40:	movw	r0, #10
   11d44:	strb	r0, [fp, #-62]	; 0xffffffc2
   11d48:	b	11dd8 <__assert_fail@plt+0xaa8>
   11d4c:	movw	r0, #12680	; 0x3188
   11d50:	movt	r0, #3
   11d54:	ldr	r0, [r0]
   11d58:	ldrsb	r0, [r0, #1]
   11d5c:	cmp	r0, #0
   11d60:	beq	11dd4 <__assert_fail@plt+0xaa4>
   11d64:	movw	r0, #12680	; 0x3188
   11d68:	movt	r0, #3
   11d6c:	ldr	r0, [r0]
   11d70:	movw	r1, #7159	; 0x1bf7
   11d74:	movt	r1, #2
   11d78:	bl	1109c <strcmp@plt>
   11d7c:	cmp	r0, #0
   11d80:	bne	11d90 <__assert_fail@plt+0xa60>
   11d84:	movw	r0, #0
   11d88:	strb	r0, [fp, #-62]	; 0xffffffc2
   11d8c:	b	11dd0 <__assert_fail@plt+0xaa0>
   11d90:	movw	r0, #7162	; 0x1bfa
   11d94:	movt	r0, #2
   11d98:	bl	111ec <gettext@plt>
   11d9c:	movw	r1, #12680	; 0x3188
   11da0:	movt	r1, #3
   11da4:	ldr	r1, [r1]
   11da8:	str	r0, [sp, #84]	; 0x54
   11dac:	mov	r0, r1
   11db0:	bl	17288 <__assert_fail@plt+0x5f58>
   11db4:	movw	r1, #1
   11db8:	str	r0, [sp, #80]	; 0x50
   11dbc:	mov	r0, r1
   11dc0:	movw	r1, #0
   11dc4:	ldr	r2, [sp, #84]	; 0x54
   11dc8:	ldr	r3, [sp, #80]	; 0x50
   11dcc:	bl	11180 <error@plt>
   11dd0:	b	11dd4 <__assert_fail@plt+0xaa4>
   11dd4:	b	11dd8 <__assert_fail@plt+0xaa8>
   11dd8:	movw	r0, #12560	; 0x3110
   11ddc:	movt	r0, #3
   11de0:	ldr	r0, [r0]
   11de4:	movw	r1, #0
   11de8:	cmp	r1, r0
   11dec:	bgt	11e2c <__assert_fail@plt+0xafc>
   11df0:	movw	r0, #12560	; 0x3110
   11df4:	movt	r0, #3
   11df8:	ldr	r0, [r0]
   11dfc:	ldrb	r1, [fp, #-62]	; 0xffffffc2
   11e00:	cmp	r0, r1
   11e04:	beq	11e2c <__assert_fail@plt+0xafc>
   11e08:	movw	r0, #7185	; 0x1c11
   11e0c:	movt	r0, #2
   11e10:	bl	111ec <gettext@plt>
   11e14:	movw	r1, #1
   11e18:	str	r0, [sp, #76]	; 0x4c
   11e1c:	mov	r0, r1
   11e20:	movw	r1, #0
   11e24:	ldr	r2, [sp, #76]	; 0x4c
   11e28:	bl	11180 <error@plt>
   11e2c:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   11e30:	movw	r1, #12560	; 0x3110
   11e34:	movt	r1, #3
   11e38:	str	r0, [r1]
   11e3c:	b	11f24 <__assert_fail@plt+0xbf4>
   11e40:	movw	r0, #12564	; 0x3114
   11e44:	movt	r0, #3
   11e48:	movw	r1, #0
   11e4c:	strb	r1, [r0]
   11e50:	b	11f24 <__assert_fail@plt+0xbf4>
   11e54:	movw	r0, #12696	; 0x3198
   11e58:	movt	r0, #3
   11e5c:	movw	r1, #2
   11e60:	str	r1, [r0]
   11e64:	b	11f24 <__assert_fail@plt+0xbf4>
   11e68:	movw	r0, #12696	; 0x3198
   11e6c:	movt	r0, #3
   11e70:	movw	r1, #1
   11e74:	str	r1, [r0]
   11e78:	b	11f24 <__assert_fail@plt+0xbf4>
   11e7c:	sub	r3, fp, #36	; 0x24
   11e80:	sub	r2, fp, #28
   11e84:	movw	r0, #12680	; 0x3188
   11e88:	movt	r0, #3
   11e8c:	ldr	r0, [r0]
   11e90:	movw	r1, #12712	; 0x31a8
   11e94:	movt	r1, #3
   11e98:	sub	ip, fp, #52	; 0x34
   11e9c:	str	ip, [sp]
   11ea0:	sub	ip, fp, #20
   11ea4:	str	ip, [sp, #4]
   11ea8:	sub	ip, fp, #16
   11eac:	str	ip, [sp, #8]
   11eb0:	bl	12624 <__assert_fail@plt+0x12f4>
   11eb4:	b	11f24 <__assert_fail@plt+0xbf4>
   11eb8:	movw	r0, #12720	; 0x31b0
   11ebc:	movt	r0, #3
   11ec0:	movw	r1, #1
   11ec4:	strb	r1, [r0]
   11ec8:	b	11f24 <__assert_fail@plt+0xbf4>
   11ecc:	movw	r0, #0
   11ed0:	bl	1142c <__assert_fail@plt+0xfc>
   11ed4:	movw	r0, #12676	; 0x3184
   11ed8:	movt	r0, #3
   11edc:	ldr	r0, [r0]
   11ee0:	movw	r1, #12572	; 0x311c
   11ee4:	movt	r1, #3
   11ee8:	ldr	r3, [r1]
   11eec:	movw	r1, #7036	; 0x1b7c
   11ef0:	movt	r1, #2
   11ef4:	movw	r2, #7203	; 0x1c23
   11ef8:	movt	r2, #2
   11efc:	movw	ip, #7217	; 0x1c31
   11f00:	movt	ip, #2
   11f04:	str	ip, [sp]
   11f08:	movw	ip, #0
   11f0c:	str	ip, [sp, #4]
   11f10:	bl	17c88 <__assert_fail@plt+0x6958>
   11f14:	movw	r0, #0
   11f18:	bl	111e0 <exit@plt>
   11f1c:	movw	r0, #1
   11f20:	bl	1142c <__assert_fail@plt+0xfc>
   11f24:	ldr	r0, [fp, #-16]
   11f28:	str	r0, [fp, #-20]	; 0xffffffec
   11f2c:	b	118c8 <__assert_fail@plt+0x598>
   11f30:	movw	r0, #0
   11f34:	str	r0, [fp, #-20]	; 0xffffffec
   11f38:	movw	r0, #12656	; 0x3170
   11f3c:	movt	r0, #3
   11f40:	ldr	r0, [r0]
   11f44:	ldr	r1, [fp, #-8]
   11f48:	cmp	r0, r1
   11f4c:	bge	11fa0 <__assert_fail@plt+0xc70>
   11f50:	sub	r3, fp, #36	; 0x24
   11f54:	sub	r2, fp, #28
   11f58:	ldr	r0, [fp, #-12]
   11f5c:	movw	r1, #12656	; 0x3170
   11f60:	movt	r1, #3
   11f64:	ldr	ip, [r1]
   11f68:	add	lr, ip, #1
   11f6c:	str	lr, [r1]
   11f70:	add	r0, r0, ip, lsl #2
   11f74:	ldr	r0, [r0]
   11f78:	movw	r1, #12712	; 0x31a8
   11f7c:	movt	r1, #3
   11f80:	sub	ip, fp, #52	; 0x34
   11f84:	str	ip, [sp]
   11f88:	sub	ip, fp, #20
   11f8c:	str	ip, [sp, #4]
   11f90:	sub	ip, fp, #16
   11f94:	str	ip, [sp, #8]
   11f98:	bl	12624 <__assert_fail@plt+0x12f4>
   11f9c:	b	11f38 <__assert_fail@plt+0xc08>
   11fa0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11fa4:	cmp	r0, #2
   11fa8:	beq	12028 <__assert_fail@plt+0xcf8>
   11fac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11fb0:	cmp	r0, #0
   11fb4:	bne	11fdc <__assert_fail@plt+0xcac>
   11fb8:	movw	r0, #7230	; 0x1c3e
   11fbc:	movt	r0, #2
   11fc0:	bl	111ec <gettext@plt>
   11fc4:	movw	r1, #0
   11fc8:	str	r0, [sp, #72]	; 0x48
   11fcc:	mov	r0, r1
   11fd0:	ldr	r2, [sp, #72]	; 0x48
   11fd4:	bl	11180 <error@plt>
   11fd8:	b	12020 <__assert_fail@plt+0xcf0>
   11fdc:	movw	r0, #7246	; 0x1c4e
   11fe0:	movt	r0, #2
   11fe4:	bl	111ec <gettext@plt>
   11fe8:	ldr	r1, [fp, #-12]
   11fec:	ldr	r2, [fp, #-8]
   11ff0:	sub	r2, r2, #1
   11ff4:	add	r1, r1, r2, lsl #2
   11ff8:	ldr	r1, [r1]
   11ffc:	str	r0, [sp, #68]	; 0x44
   12000:	mov	r0, r1
   12004:	bl	17288 <__assert_fail@plt+0x5f58>
   12008:	movw	r1, #0
   1200c:	str	r0, [sp, #64]	; 0x40
   12010:	mov	r0, r1
   12014:	ldr	r2, [sp, #68]	; 0x44
   12018:	ldr	r3, [sp, #64]	; 0x40
   1201c:	bl	11180 <error@plt>
   12020:	movw	r0, #1
   12024:	bl	1142c <__assert_fail@plt+0xfc>
   12028:	movw	r0, #0
   1202c:	str	r0, [fp, #-56]	; 0xffffffc8
   12030:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12034:	cmp	r0, #2
   12038:	bge	12088 <__assert_fail@plt+0xd58>
   1203c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12040:	sub	r1, fp, #36	; 0x24
   12044:	add	r0, r1, r0, lsl #2
   12048:	ldr	r0, [r0]
   1204c:	cmp	r0, #0
   12050:	beq	12074 <__assert_fail@plt+0xd44>
   12054:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12058:	movw	r0, #12552	; 0x3108
   1205c:	movt	r0, #3
   12060:	bl	1240c <__assert_fail@plt+0x10dc>
   12064:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12068:	movw	r0, #12556	; 0x310c
   1206c:	movt	r0, #3
   12070:	bl	1240c <__assert_fail@plt+0x10dc>
   12074:	b	12078 <__assert_fail@plt+0xd48>
   12078:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1207c:	add	r0, r0, #1
   12080:	str	r0, [fp, #-56]	; 0xffffffc8
   12084:	b	12030 <__assert_fail@plt+0xd00>
   12088:	movw	r0, #12552	; 0x3108
   1208c:	movt	r0, #3
   12090:	ldr	r0, [r0]
   12094:	cmn	r0, #1
   12098:	bne	120ac <__assert_fail@plt+0xd7c>
   1209c:	movw	r0, #12552	; 0x3108
   120a0:	movt	r0, #3
   120a4:	movw	r1, #0
   120a8:	str	r1, [r0]
   120ac:	movw	r0, #12556	; 0x310c
   120b0:	movt	r0, #3
   120b4:	ldr	r0, [r0]
   120b8:	cmn	r0, #1
   120bc:	bne	120d0 <__assert_fail@plt+0xda0>
   120c0:	movw	r0, #12556	; 0x310c
   120c4:	movt	r0, #3
   120c8:	movw	r1, #0
   120cc:	str	r1, [r0]
   120d0:	movw	r0, #12712	; 0x31a8
   120d4:	movt	r0, #3
   120d8:	ldr	r0, [r0]
   120dc:	movw	r1, #8264	; 0x2048
   120e0:	movt	r1, #2
   120e4:	bl	1109c <strcmp@plt>
   120e8:	cmp	r0, #0
   120ec:	bne	12104 <__assert_fail@plt+0xdd4>
   120f0:	movw	r0, #12672	; 0x3180
   120f4:	movt	r0, #3
   120f8:	ldr	r0, [r0]
   120fc:	str	r0, [sp, #60]	; 0x3c
   12100:	b	12120 <__assert_fail@plt+0xdf0>
   12104:	movw	r0, #12712	; 0x31a8
   12108:	movt	r0, #3
   1210c:	ldr	r0, [r0]
   12110:	movw	r1, #7694	; 0x1e0e
   12114:	movt	r1, #2
   12118:	bl	14640 <__assert_fail@plt+0x3310>
   1211c:	str	r0, [sp, #60]	; 0x3c
   12120:	ldr	r0, [sp, #60]	; 0x3c
   12124:	str	r0, [fp, #-40]	; 0xffffffd8
   12128:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1212c:	movw	r1, #0
   12130:	cmp	r0, r1
   12134:	bne	12180 <__assert_fail@plt+0xe50>
   12138:	bl	11228 <__errno_location@plt>
   1213c:	ldr	r1, [r0]
   12140:	movw	r0, #12712	; 0x31a8
   12144:	movt	r0, #3
   12148:	ldr	r2, [r0]
   1214c:	movw	r0, #0
   12150:	movw	r3, #3
   12154:	str	r1, [sp, #56]	; 0x38
   12158:	mov	r1, r3
   1215c:	bl	17044 <__assert_fail@plt+0x5d14>
   12160:	movw	r1, #1
   12164:	str	r0, [sp, #52]	; 0x34
   12168:	mov	r0, r1
   1216c:	ldr	r1, [sp, #56]	; 0x38
   12170:	movw	r2, #7810	; 0x1e82
   12174:	movt	r2, #2
   12178:	ldr	r3, [sp, #52]	; 0x34
   1217c:	bl	11180 <error@plt>
   12180:	movw	r0, #12712	; 0x31a8
   12184:	movt	r0, #3
   12188:	ldr	r0, [r0, #4]
   1218c:	movw	r1, #8264	; 0x2048
   12190:	movt	r1, #2
   12194:	bl	1109c <strcmp@plt>
   12198:	cmp	r0, #0
   1219c:	bne	121b4 <__assert_fail@plt+0xe84>
   121a0:	movw	r0, #12672	; 0x3180
   121a4:	movt	r0, #3
   121a8:	ldr	r0, [r0]
   121ac:	str	r0, [sp, #48]	; 0x30
   121b0:	b	121d0 <__assert_fail@plt+0xea0>
   121b4:	movw	r0, #12712	; 0x31a8
   121b8:	movt	r0, #3
   121bc:	ldr	r0, [r0, #4]
   121c0:	movw	r1, #7694	; 0x1e0e
   121c4:	movt	r1, #2
   121c8:	bl	14640 <__assert_fail@plt+0x3310>
   121cc:	str	r0, [sp, #48]	; 0x30
   121d0:	ldr	r0, [sp, #48]	; 0x30
   121d4:	str	r0, [fp, #-44]	; 0xffffffd4
   121d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   121dc:	movw	r1, #0
   121e0:	cmp	r0, r1
   121e4:	bne	12230 <__assert_fail@plt+0xf00>
   121e8:	bl	11228 <__errno_location@plt>
   121ec:	ldr	r1, [r0]
   121f0:	movw	r0, #12712	; 0x31a8
   121f4:	movt	r0, #3
   121f8:	ldr	r2, [r0, #4]
   121fc:	movw	r0, #0
   12200:	movw	r3, #3
   12204:	str	r1, [sp, #44]	; 0x2c
   12208:	mov	r1, r3
   1220c:	bl	17044 <__assert_fail@plt+0x5d14>
   12210:	movw	r1, #1
   12214:	str	r0, [sp, #40]	; 0x28
   12218:	mov	r0, r1
   1221c:	ldr	r1, [sp, #44]	; 0x2c
   12220:	movw	r2, #7810	; 0x1e82
   12224:	movt	r2, #2
   12228:	ldr	r3, [sp, #40]	; 0x28
   1222c:	bl	11180 <error@plt>
   12230:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12234:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12238:	cmp	r0, r1
   1223c:	bne	12270 <__assert_fail@plt+0xf40>
   12240:	bl	11228 <__errno_location@plt>
   12244:	ldr	r1, [r0]
   12248:	movw	r0, #7271	; 0x1c67
   1224c:	movt	r0, #2
   12250:	str	r1, [sp, #36]	; 0x24
   12254:	bl	111ec <gettext@plt>
   12258:	movw	r1, #1
   1225c:	str	r0, [sp, #32]
   12260:	mov	r0, r1
   12264:	ldr	r1, [sp, #36]	; 0x24
   12268:	ldr	r2, [sp, #32]
   1226c:	bl	11180 <error@plt>
   12270:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12274:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12278:	bl	12810 <__assert_fail@plt+0x14e0>
   1227c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12280:	bl	144a8 <__assert_fail@plt+0x3178>
   12284:	cmp	r0, #0
   12288:	beq	122d4 <__assert_fail@plt+0xfa4>
   1228c:	bl	11228 <__errno_location@plt>
   12290:	ldr	r1, [r0]
   12294:	movw	r0, #12712	; 0x31a8
   12298:	movt	r0, #3
   1229c:	ldr	r2, [r0]
   122a0:	movw	r0, #0
   122a4:	movw	r3, #3
   122a8:	str	r1, [sp, #28]
   122ac:	mov	r1, r3
   122b0:	bl	17044 <__assert_fail@plt+0x5d14>
   122b4:	movw	r1, #1
   122b8:	str	r0, [sp, #24]
   122bc:	mov	r0, r1
   122c0:	ldr	r1, [sp, #28]
   122c4:	movw	r2, #7810	; 0x1e82
   122c8:	movt	r2, #2
   122cc:	ldr	r3, [sp, #24]
   122d0:	bl	11180 <error@plt>
   122d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   122d8:	bl	144a8 <__assert_fail@plt+0x3178>
   122dc:	cmp	r0, #0
   122e0:	beq	1232c <__assert_fail@plt+0xffc>
   122e4:	bl	11228 <__errno_location@plt>
   122e8:	ldr	r1, [r0]
   122ec:	movw	r0, #12712	; 0x31a8
   122f0:	movt	r0, #3
   122f4:	ldr	r2, [r0, #4]
   122f8:	movw	r0, #0
   122fc:	movw	r3, #3
   12300:	str	r1, [sp, #20]
   12304:	mov	r1, r3
   12308:	bl	17044 <__assert_fail@plt+0x5d14>
   1230c:	movw	r1, #1
   12310:	str	r0, [sp, #16]
   12314:	mov	r0, r1
   12318:	ldr	r1, [sp, #20]
   1231c:	movw	r2, #7810	; 0x1e82
   12320:	movt	r2, #2
   12324:	ldr	r3, [sp, #16]
   12328:	bl	11180 <error@plt>
   1232c:	movw	r0, #12691	; 0x3193
   12330:	movt	r0, #3
   12334:	ldrb	r0, [r0]
   12338:	tst	r0, #1
   1233c:	bne	12354 <__assert_fail@plt+0x1024>
   12340:	movw	r0, #12691	; 0x3193
   12344:	movt	r0, #3
   12348:	ldrb	r0, [r0, #1]
   1234c:	tst	r0, #1
   12350:	beq	12378 <__assert_fail@plt+0x1048>
   12354:	movw	r0, #7307	; 0x1c8b
   12358:	movt	r0, #2
   1235c:	bl	111ec <gettext@plt>
   12360:	movw	r1, #1
   12364:	str	r0, [sp, #12]
   12368:	mov	r0, r1
   1236c:	movw	r1, #0
   12370:	ldr	r2, [sp, #12]
   12374:	bl	11180 <error@plt>
   12378:	movw	r0, #0
   1237c:	mov	sp, fp
   12380:	pop	{fp, pc}
   12384:	push	{fp, lr}
   12388:	mov	fp, sp
   1238c:	sub	sp, sp, #8
   12390:	movw	r0, #0
   12394:	str	r0, [sp, #4]
   12398:	ldr	r0, [sp, #4]
   1239c:	cmp	r0, #2
   123a0:	bcs	12404 <__assert_fail@plt+0x10d4>
   123a4:	ldr	r0, [sp, #4]
   123a8:	movw	r1, #12724	; 0x31b4
   123ac:	movt	r1, #3
   123b0:	add	r0, r1, r0, lsl #2
   123b4:	ldr	r0, [r0]
   123b8:	movw	r1, #0
   123bc:	cmp	r0, r1
   123c0:	beq	123f0 <__assert_fail@plt+0x10c0>
   123c4:	ldr	r0, [sp, #4]
   123c8:	movw	r1, #12724	; 0x31b4
   123cc:	movt	r1, #3
   123d0:	ldr	r0, [r1, r0, lsl #2]
   123d4:	str	r1, [sp]
   123d8:	bl	12fec <__assert_fail@plt+0x1cbc>
   123dc:	ldr	r0, [sp, #4]
   123e0:	ldr	r1, [sp]
   123e4:	add	r0, r1, r0, lsl #2
   123e8:	ldr	r0, [r0]
   123ec:	bl	1476c <__assert_fail@plt+0x343c>
   123f0:	b	123f4 <__assert_fail@plt+0x10c4>
   123f4:	ldr	r0, [sp, #4]
   123f8:	add	r0, r0, #1
   123fc:	str	r0, [sp, #4]
   12400:	b	12398 <__assert_fail@plt+0x1068>
   12404:	mov	sp, fp
   12408:	pop	{fp, pc}
   1240c:	push	{fp, lr}
   12410:	mov	fp, sp
   12414:	sub	sp, sp, #32
   12418:	str	r0, [fp, #-4]
   1241c:	str	r1, [fp, #-8]
   12420:	ldr	r0, [fp, #-4]
   12424:	ldr	r0, [r0]
   12428:	cmn	r0, #1
   1242c:	beq	1249c <__assert_fail@plt+0x116c>
   12430:	ldr	r0, [fp, #-4]
   12434:	ldr	r0, [r0]
   12438:	ldr	r1, [fp, #-8]
   1243c:	cmp	r0, r1
   12440:	beq	1249c <__assert_fail@plt+0x116c>
   12444:	ldr	r0, [fp, #-4]
   12448:	ldr	r0, [r0]
   1244c:	add	r0, r0, #1
   12450:	str	r0, [fp, #-12]
   12454:	ldr	r0, [fp, #-8]
   12458:	add	r0, r0, #1
   1245c:	str	r0, [sp, #16]
   12460:	movw	r0, #7709	; 0x1e1d
   12464:	movt	r0, #2
   12468:	bl	111ec <gettext@plt>
   1246c:	ldr	r3, [fp, #-12]
   12470:	ldr	r1, [sp, #16]
   12474:	movw	r2, #1
   12478:	str	r0, [sp, #12]
   1247c:	mov	r0, r2
   12480:	movw	r2, #0
   12484:	str	r1, [sp, #8]
   12488:	mov	r1, r2
   1248c:	ldr	r2, [sp, #12]
   12490:	ldr	ip, [sp, #8]
   12494:	str	ip, [sp]
   12498:	bl	11180 <error@plt>
   1249c:	ldr	r0, [fp, #-8]
   124a0:	ldr	r1, [fp, #-4]
   124a4:	str	r0, [r1]
   124a8:	mov	sp, fp
   124ac:	pop	{fp, pc}
   124b0:	push	{fp, lr}
   124b4:	mov	fp, sp
   124b8:	sub	sp, sp, #32
   124bc:	str	r0, [fp, #-4]
   124c0:	ldr	r0, [fp, #-4]
   124c4:	movw	r1, #0
   124c8:	movw	r2, #10
   124cc:	add	r3, sp, #16
   124d0:	movw	ip, #7746	; 0x1e42
   124d4:	movt	ip, #2
   124d8:	str	ip, [sp]
   124dc:	bl	1ca34 <__assert_fail@plt+0xb704>
   124e0:	str	r0, [sp, #12]
   124e4:	ldr	r0, [sp, #12]
   124e8:	cmp	r0, #1
   124ec:	beq	1250c <__assert_fail@plt+0x11dc>
   124f0:	ldr	r0, [sp, #12]
   124f4:	cmp	r0, #0
   124f8:	bne	12520 <__assert_fail@plt+0x11f0>
   124fc:	ldr	r0, [sp, #20]
   12500:	cmp	r0, #0
   12504:	beq	12520 <__assert_fail@plt+0x11f0>
   12508:	b	1250c <__assert_fail@plt+0x11dc>
   1250c:	mov	r0, #0
   12510:	str	r0, [sp, #20]
   12514:	mvn	r0, #0
   12518:	str	r0, [sp, #16]
   1251c:	b	12580 <__assert_fail@plt+0x1250>
   12520:	ldr	r0, [sp, #12]
   12524:	cmp	r0, #0
   12528:	bne	12544 <__assert_fail@plt+0x1214>
   1252c:	ldr	r0, [sp, #16]
   12530:	ldr	r1, [sp, #20]
   12534:	orr	r0, r0, r1
   12538:	cmp	r0, #0
   1253c:	bne	1257c <__assert_fail@plt+0x124c>
   12540:	b	12544 <__assert_fail@plt+0x1214>
   12544:	movw	r0, #7085	; 0x1bad
   12548:	movt	r0, #2
   1254c:	bl	111ec <gettext@plt>
   12550:	ldr	r1, [fp, #-4]
   12554:	str	r0, [sp, #8]
   12558:	mov	r0, r1
   1255c:	bl	17288 <__assert_fail@plt+0x5f58>
   12560:	movw	r1, #1
   12564:	str	r0, [sp, #4]
   12568:	mov	r0, r1
   1256c:	movw	r1, #0
   12570:	ldr	r2, [sp, #8]
   12574:	ldr	r3, [sp, #4]
   12578:	bl	11180 <error@plt>
   1257c:	b	12580 <__assert_fail@plt+0x1250>
   12580:	ldr	r0, [sp, #16]
   12584:	sub	r0, r0, #1
   12588:	str	r0, [fp, #-8]
   1258c:	ldr	r0, [fp, #-8]
   12590:	mov	sp, fp
   12594:	pop	{fp, pc}
   12598:	push	{fp, lr}
   1259c:	mov	fp, sp
   125a0:	sub	sp, sp, #24
   125a4:	str	r0, [fp, #-4]
   125a8:	ldr	r0, [fp, #-4]
   125ac:	str	r0, [fp, #-8]
   125b0:	ldr	r0, [fp, #-8]
   125b4:	str	r0, [sp, #4]
   125b8:	ldr	r0, [fp, #-8]
   125bc:	movw	r1, #7743	; 0x1e3f
   125c0:	movt	r1, #2
   125c4:	bl	112d0 <strpbrk@plt>
   125c8:	str	r0, [fp, #-8]
   125cc:	ldr	r0, [fp, #-8]
   125d0:	movw	r1, #0
   125d4:	cmp	r0, r1
   125d8:	beq	125f0 <__assert_fail@plt+0x12c0>
   125dc:	ldr	r0, [fp, #-8]
   125e0:	add	r1, r0, #1
   125e4:	str	r1, [fp, #-8]
   125e8:	movw	r1, #0
   125ec:	strb	r1, [r0]
   125f0:	ldr	r0, [sp, #4]
   125f4:	add	r1, sp, #12
   125f8:	add	r2, sp, #8
   125fc:	bl	13048 <__assert_fail@plt+0x1d18>
   12600:	ldr	r0, [sp, #12]
   12604:	ldr	r1, [sp, #8]
   12608:	bl	131a4 <__assert_fail@plt+0x1e74>
   1260c:	ldr	r0, [fp, #-8]
   12610:	movw	r1, #0
   12614:	cmp	r0, r1
   12618:	bne	125b0 <__assert_fail@plt+0x1280>
   1261c:	mov	sp, fp
   12620:	pop	{fp, pc}
   12624:	push	{r4, sl, fp, lr}
   12628:	add	fp, sp, #8
   1262c:	sub	sp, sp, #48	; 0x30
   12630:	ldr	ip, [fp, #16]
   12634:	ldr	lr, [fp, #12]
   12638:	ldr	r4, [fp, #8]
   1263c:	str	r0, [fp, #-12]
   12640:	str	r1, [fp, #-16]
   12644:	str	r2, [fp, #-20]	; 0xffffffec
   12648:	str	r3, [fp, #-24]	; 0xffffffe8
   1264c:	ldr	r0, [fp, #8]
   12650:	ldr	r0, [r0]
   12654:	str	r0, [sp, #28]
   12658:	ldr	r0, [sp, #28]
   1265c:	cmp	r0, #2
   12660:	bne	127b4 <__assert_fail@plt+0x1484>
   12664:	ldr	r0, [fp, #-20]	; 0xffffffec
   12668:	ldr	r0, [r0]
   1266c:	clz	r0, r0
   12670:	lsr	r0, r0, #5
   12674:	strb	r0, [sp, #27]
   12678:	ldr	r0, [fp, #-16]
   1267c:	ldrb	r1, [sp, #27]
   12680:	and	r1, r1, #1
   12684:	ldr	r0, [r0, r1, lsl #2]
   12688:	str	r0, [sp, #20]
   1268c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12690:	ldrb	r1, [sp, #27]
   12694:	and	r1, r1, #1
   12698:	ldr	r0, [r0, r1, lsl #2]
   1269c:	cmp	r0, #3
   126a0:	str	r0, [sp, #16]
   126a4:	bhi	12780 <__assert_fail@plt+0x1450>
   126a8:	add	r0, pc, #8
   126ac:	ldr	r1, [sp, #16]
   126b0:	ldr	r0, [r0, r1, lsl #2]
   126b4:	mov	pc, r0
   126b8:	andeq	r2, r1, r8, asr #13
   126bc:	andeq	r2, r1, r8, lsl #14
   126c0:	andeq	r2, r1, r0, asr #14
   126c4:	andeq	r2, r1, r8, ror r7
   126c8:	movw	r0, #7912	; 0x1ee8
   126cc:	movt	r0, #2
   126d0:	bl	111ec <gettext@plt>
   126d4:	ldr	r1, [fp, #-12]
   126d8:	movw	r2, #4
   126dc:	str	r0, [sp, #12]
   126e0:	mov	r0, r2
   126e4:	bl	16ef0 <__assert_fail@plt+0x5bc0>
   126e8:	movw	r1, #0
   126ec:	str	r0, [sp, #8]
   126f0:	mov	r0, r1
   126f4:	ldr	r2, [sp, #12]
   126f8:	ldr	r3, [sp, #8]
   126fc:	bl	11180 <error@plt>
   12700:	movw	r0, #1
   12704:	bl	1142c <__assert_fail@plt+0xfc>
   12708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1270c:	ldr	r1, [r0]
   12710:	mvn	r2, #0
   12714:	add	r1, r1, r2
   12718:	str	r1, [r0]
   1271c:	ldr	r0, [sp, #20]
   12720:	bl	124b0 <__assert_fail@plt+0x1180>
   12724:	movw	r1, #12552	; 0x3108
   12728:	movt	r1, #3
   1272c:	str	r0, [sp, #4]
   12730:	mov	r0, r1
   12734:	ldr	r1, [sp, #4]
   12738:	bl	1240c <__assert_fail@plt+0x10dc>
   1273c:	b	12780 <__assert_fail@plt+0x1450>
   12740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12744:	ldr	r1, [r0, #4]
   12748:	mvn	r2, #0
   1274c:	add	r1, r1, r2
   12750:	str	r1, [r0, #4]
   12754:	ldr	r0, [sp, #20]
   12758:	bl	124b0 <__assert_fail@plt+0x1180>
   1275c:	movw	r1, #12556	; 0x310c
   12760:	movt	r1, #3
   12764:	str	r0, [sp]
   12768:	mov	r0, r1
   1276c:	ldr	r1, [sp]
   12770:	bl	1240c <__assert_fail@plt+0x10dc>
   12774:	b	12780 <__assert_fail@plt+0x1450>
   12778:	ldr	r0, [sp, #20]
   1277c:	bl	12598 <__assert_fail@plt+0x1268>
   12780:	ldrb	r0, [sp, #27]
   12784:	tst	r0, #1
   12788:	bne	127ac <__assert_fail@plt+0x147c>
   1278c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12790:	ldr	r0, [r0, #4]
   12794:	ldr	r1, [fp, #-20]	; 0xffffffec
   12798:	str	r0, [r1]
   1279c:	ldr	r0, [fp, #-16]
   127a0:	ldr	r0, [r0, #4]
   127a4:	ldr	r1, [fp, #-16]
   127a8:	str	r0, [r1]
   127ac:	movw	r0, #1
   127b0:	str	r0, [sp, #28]
   127b4:	ldr	r0, [fp, #12]
   127b8:	ldr	r0, [r0]
   127bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   127c0:	ldr	r2, [sp, #28]
   127c4:	str	r0, [r1, r2, lsl #2]
   127c8:	ldr	r0, [fp, #-12]
   127cc:	ldr	r1, [fp, #-16]
   127d0:	ldr	r2, [sp, #28]
   127d4:	add	r1, r1, r2, lsl #2
   127d8:	str	r0, [r1]
   127dc:	ldr	r0, [sp, #28]
   127e0:	add	r0, r0, #1
   127e4:	ldr	r1, [fp, #8]
   127e8:	str	r0, [r1]
   127ec:	ldr	r0, [fp, #12]
   127f0:	ldr	r0, [r0]
   127f4:	cmp	r0, #3
   127f8:	bne	12808 <__assert_fail@plt+0x14d8>
   127fc:	ldr	r0, [fp, #16]
   12800:	movw	r1, #3
   12804:	str	r1, [r0]
   12808:	sub	sp, fp, #8
   1280c:	pop	{r4, sl, fp, pc}
   12810:	push	{fp, lr}
   12814:	mov	fp, sp
   12818:	sub	sp, sp, #96	; 0x60
   1281c:	str	r0, [fp, #-4]
   12820:	str	r1, [fp, #-8]
   12824:	ldr	r0, [fp, #-4]
   12828:	movw	r1, #2
   1282c:	bl	14450 <__assert_fail@plt+0x3120>
   12830:	ldr	r0, [fp, #-8]
   12834:	movw	r1, #2
   12838:	bl	14450 <__assert_fail@plt+0x3120>
   1283c:	sub	r0, fp, #20
   12840:	bl	13290 <__assert_fail@plt+0x1f60>
   12844:	ldr	r0, [fp, #-4]
   12848:	sub	r1, fp, #20
   1284c:	movw	r2, #1
   12850:	bl	132bc <__assert_fail@plt+0x1f8c>
   12854:	sub	r1, fp, #32
   12858:	str	r0, [sp, #20]
   1285c:	mov	r0, r1
   12860:	bl	13290 <__assert_fail@plt+0x1f60>
   12864:	ldr	r0, [fp, #-8]
   12868:	sub	r1, fp, #32
   1286c:	movw	r2, #2
   12870:	bl	132bc <__assert_fail@plt+0x1f8c>
   12874:	movw	r1, #12709	; 0x31a5
   12878:	movt	r1, #3
   1287c:	ldrb	r1, [r1]
   12880:	tst	r1, #1
   12884:	beq	12900 <__assert_fail@plt+0x15d0>
   12888:	ldr	r0, [fp, #-20]	; 0xffffffec
   1288c:	cmp	r0, #0
   12890:	beq	128a8 <__assert_fail@plt+0x1578>
   12894:	ldr	r0, [fp, #-12]
   12898:	ldr	r0, [r0]
   1289c:	ldr	r0, [r0, #12]
   128a0:	str	r0, [sp, #16]
   128a4:	b	128b4 <__assert_fail@plt+0x1584>
   128a8:	movw	r0, #0
   128ac:	str	r0, [sp, #16]
   128b0:	b	128b4 <__assert_fail@plt+0x1584>
   128b4:	ldr	r0, [sp, #16]
   128b8:	movw	r1, #12744	; 0x31c8
   128bc:	movt	r1, #3
   128c0:	str	r0, [r1]
   128c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128c8:	cmp	r0, #0
   128cc:	beq	128e4 <__assert_fail@plt+0x15b4>
   128d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128d4:	ldr	r0, [r0]
   128d8:	ldr	r0, [r0, #12]
   128dc:	str	r0, [sp, #12]
   128e0:	b	128f0 <__assert_fail@plt+0x15c0>
   128e4:	movw	r0, #0
   128e8:	str	r0, [sp, #12]
   128ec:	b	128f0 <__assert_fail@plt+0x15c0>
   128f0:	ldr	r0, [sp, #12]
   128f4:	movw	r1, #12748	; 0x31cc
   128f8:	movt	r1, #3
   128fc:	str	r0, [r1]
   12900:	movw	r0, #12720	; 0x31b0
   12904:	movt	r0, #3
   12908:	ldrb	r0, [r0]
   1290c:	tst	r0, #1
   12910:	beq	12a00 <__assert_fail@plt+0x16d0>
   12914:	ldr	r0, [fp, #-20]	; 0xffffffec
   12918:	cmp	r0, #0
   1291c:	bne	1292c <__assert_fail@plt+0x15fc>
   12920:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12924:	cmp	r0, #0
   12928:	beq	12a00 <__assert_fail@plt+0x16d0>
   1292c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12930:	cmp	r0, #0
   12934:	beq	12948 <__assert_fail@plt+0x1618>
   12938:	ldr	r0, [fp, #-12]
   1293c:	ldr	r0, [r0]
   12940:	str	r0, [sp, #8]
   12944:	b	12958 <__assert_fail@plt+0x1628>
   12948:	movw	r0, #12752	; 0x31d0
   1294c:	movt	r0, #3
   12950:	str	r0, [sp, #8]
   12954:	b	12958 <__assert_fail@plt+0x1628>
   12958:	ldr	r0, [sp, #8]
   1295c:	str	r0, [fp, #-44]	; 0xffffffd4
   12960:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12964:	cmp	r0, #0
   12968:	beq	1297c <__assert_fail@plt+0x164c>
   1296c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12970:	ldr	r0, [r0]
   12974:	str	r0, [sp, #4]
   12978:	b	1298c <__assert_fail@plt+0x165c>
   1297c:	movw	r0, #12752	; 0x31d0
   12980:	movt	r0, #3
   12984:	str	r0, [sp, #4]
   12988:	b	1298c <__assert_fail@plt+0x165c>
   1298c:	ldr	r0, [sp, #4]
   12990:	str	r0, [sp, #48]	; 0x30
   12994:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12998:	ldr	r1, [sp, #48]	; 0x30
   1299c:	bl	133b8 <__assert_fail@plt+0x2088>
   129a0:	movw	r0, #12776	; 0x31e8
   129a4:	movt	r0, #3
   129a8:	movw	r1, #0
   129ac:	str	r1, [r0]
   129b0:	str	r1, [r0, #4]
   129b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   129b8:	cmp	r0, #0
   129bc:	beq	129d8 <__assert_fail@plt+0x16a8>
   129c0:	ldr	r0, [fp, #-4]
   129c4:	sub	r1, fp, #20
   129c8:	movw	r2, #1
   129cc:	and	r2, r2, #1
   129d0:	movw	r3, #1
   129d4:	bl	135b8 <__assert_fail@plt+0x2288>
   129d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129dc:	cmp	r0, #0
   129e0:	beq	129fc <__assert_fail@plt+0x16cc>
   129e4:	ldr	r0, [fp, #-8]
   129e8:	sub	r1, fp, #32
   129ec:	movw	r2, #1
   129f0:	and	r2, r2, #1
   129f4:	movw	r3, #2
   129f8:	bl	135b8 <__assert_fail@plt+0x2288>
   129fc:	b	12a00 <__assert_fail@plt+0x16d0>
   12a00:	b	12a04 <__assert_fail@plt+0x16d4>
   12a04:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a08:	cmp	r0, #0
   12a0c:	movw	r0, #0
   12a10:	str	r0, [sp]
   12a14:	beq	12a2c <__assert_fail@plt+0x16fc>
   12a18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a1c:	cmp	r0, #0
   12a20:	movw	r0, #0
   12a24:	movne	r0, #1
   12a28:	str	r0, [sp]
   12a2c:	ldr	r0, [sp]
   12a30:	tst	r0, #1
   12a34:	beq	12da8 <__assert_fail@plt+0x1a78>
   12a38:	ldr	r0, [fp, #-12]
   12a3c:	ldr	r0, [r0]
   12a40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12a44:	ldr	r1, [r1]
   12a48:	movw	r2, #12552	; 0x3108
   12a4c:	movt	r2, #3
   12a50:	ldr	r2, [r2]
   12a54:	movw	r3, #12556	; 0x310c
   12a58:	movt	r3, #3
   12a5c:	ldr	r3, [r3]
   12a60:	bl	1360c <__assert_fail@plt+0x22dc>
   12a64:	str	r0, [fp, #-36]	; 0xffffffdc
   12a68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12a6c:	cmp	r0, #0
   12a70:	bge	12ac8 <__assert_fail@plt+0x1798>
   12a74:	movw	r0, #12700	; 0x319c
   12a78:	movt	r0, #3
   12a7c:	ldrb	r0, [r0]
   12a80:	tst	r0, #1
   12a84:	beq	12a9c <__assert_fail@plt+0x176c>
   12a88:	ldr	r0, [fp, #-12]
   12a8c:	ldr	r0, [r0]
   12a90:	movw	r1, #12752	; 0x31d0
   12a94:	movt	r1, #3
   12a98:	bl	133b8 <__assert_fail@plt+0x2088>
   12a9c:	ldr	r0, [fp, #-4]
   12aa0:	sub	r1, fp, #20
   12aa4:	movw	r2, #1
   12aa8:	and	r2, r2, #1
   12aac:	movw	r3, #1
   12ab0:	bl	135b8 <__assert_fail@plt+0x2288>
   12ab4:	movw	r1, #12690	; 0x3192
   12ab8:	movt	r1, #3
   12abc:	movw	r2, #1
   12ac0:	strb	r2, [r1]
   12ac4:	b	12a04 <__assert_fail@plt+0x16d4>
   12ac8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12acc:	cmp	r0, #0
   12ad0:	ble	12b28 <__assert_fail@plt+0x17f8>
   12ad4:	movw	r0, #12701	; 0x319d
   12ad8:	movt	r0, #3
   12adc:	ldrb	r0, [r0]
   12ae0:	tst	r0, #1
   12ae4:	beq	12afc <__assert_fail@plt+0x17cc>
   12ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12aec:	ldr	r1, [r0]
   12af0:	movw	r0, #12752	; 0x31d0
   12af4:	movt	r0, #3
   12af8:	bl	133b8 <__assert_fail@plt+0x2088>
   12afc:	ldr	r0, [fp, #-8]
   12b00:	sub	r1, fp, #32
   12b04:	movw	r2, #1
   12b08:	and	r2, r2, #1
   12b0c:	movw	r3, #2
   12b10:	bl	135b8 <__assert_fail@plt+0x2288>
   12b14:	movw	r1, #12690	; 0x3192
   12b18:	movt	r1, #3
   12b1c:	movw	r2, #1
   12b20:	strb	r2, [r1]
   12b24:	b	12a04 <__assert_fail@plt+0x16d4>
   12b28:	movw	r0, #0
   12b2c:	strb	r0, [fp, #-37]	; 0xffffffdb
   12b30:	ldr	r0, [fp, #-4]
   12b34:	sub	r1, fp, #20
   12b38:	movw	r2, #0
   12b3c:	and	r2, r2, #1
   12b40:	movw	r3, #1
   12b44:	bl	135b8 <__assert_fail@plt+0x2288>
   12b48:	tst	r0, #1
   12b4c:	bne	12b68 <__assert_fail@plt+0x1838>
   12b50:	movw	r0, #1
   12b54:	strb	r0, [fp, #-37]	; 0xffffffdb
   12b58:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b5c:	add	r0, r0, #1
   12b60:	str	r0, [fp, #-20]	; 0xffffffec
   12b64:	b	12bc0 <__assert_fail@plt+0x1890>
   12b68:	b	12b6c <__assert_fail@plt+0x183c>
   12b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b70:	ldr	r1, [fp, #-12]
   12b74:	sub	r0, r0, #1
   12b78:	add	r0, r1, r0, lsl #2
   12b7c:	ldr	r0, [r0]
   12b80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12b84:	ldr	r1, [r1]
   12b88:	movw	r2, #12552	; 0x3108
   12b8c:	movt	r2, #3
   12b90:	ldr	r2, [r2]
   12b94:	movw	r3, #12556	; 0x310c
   12b98:	movt	r3, #3
   12b9c:	ldr	r3, [r3]
   12ba0:	bl	1360c <__assert_fail@plt+0x22dc>
   12ba4:	cmp	r0, #0
   12ba8:	movw	r0, #0
   12bac:	movne	r0, #1
   12bb0:	mvn	r1, #0
   12bb4:	eor	r0, r0, r1
   12bb8:	tst	r0, #1
   12bbc:	bne	12b30 <__assert_fail@plt+0x1800>
   12bc0:	movw	r0, #0
   12bc4:	strb	r0, [fp, #-38]	; 0xffffffda
   12bc8:	ldr	r0, [fp, #-8]
   12bcc:	sub	r1, fp, #32
   12bd0:	movw	r2, #0
   12bd4:	and	r2, r2, #1
   12bd8:	movw	r3, #2
   12bdc:	bl	135b8 <__assert_fail@plt+0x2288>
   12be0:	tst	r0, #1
   12be4:	bne	12c00 <__assert_fail@plt+0x18d0>
   12be8:	movw	r0, #1
   12bec:	strb	r0, [fp, #-38]	; 0xffffffda
   12bf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12bf4:	add	r0, r0, #1
   12bf8:	str	r0, [fp, #-32]	; 0xffffffe0
   12bfc:	b	12c58 <__assert_fail@plt+0x1928>
   12c00:	b	12c04 <__assert_fail@plt+0x18d4>
   12c04:	ldr	r0, [fp, #-12]
   12c08:	ldr	r0, [r0]
   12c0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12c10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12c14:	sub	r1, r1, #1
   12c18:	add	r1, r2, r1, lsl #2
   12c1c:	ldr	r1, [r1]
   12c20:	movw	r2, #12552	; 0x3108
   12c24:	movt	r2, #3
   12c28:	ldr	r2, [r2]
   12c2c:	movw	r3, #12556	; 0x310c
   12c30:	movt	r3, #3
   12c34:	ldr	r3, [r3]
   12c38:	bl	1360c <__assert_fail@plt+0x22dc>
   12c3c:	cmp	r0, #0
   12c40:	movw	r0, #0
   12c44:	movne	r0, #1
   12c48:	mvn	r1, #0
   12c4c:	eor	r0, r0, r1
   12c50:	tst	r0, #1
   12c54:	bne	12bc8 <__assert_fail@plt+0x1898>
   12c58:	movw	r0, #12689	; 0x3191
   12c5c:	movt	r0, #3
   12c60:	ldrb	r0, [r0]
   12c64:	tst	r0, #1
   12c68:	beq	12cec <__assert_fail@plt+0x19bc>
   12c6c:	movw	r0, #0
   12c70:	str	r0, [sp, #44]	; 0x2c
   12c74:	ldr	r0, [sp, #44]	; 0x2c
   12c78:	ldr	r1, [fp, #-20]	; 0xffffffec
   12c7c:	sub	r1, r1, #1
   12c80:	cmp	r0, r1
   12c84:	bcs	12ce8 <__assert_fail@plt+0x19b8>
   12c88:	movw	r0, #0
   12c8c:	str	r0, [sp, #40]	; 0x28
   12c90:	ldr	r0, [sp, #40]	; 0x28
   12c94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12c98:	sub	r1, r1, #1
   12c9c:	cmp	r0, r1
   12ca0:	bcs	12cd4 <__assert_fail@plt+0x19a4>
   12ca4:	ldr	r0, [fp, #-12]
   12ca8:	ldr	r1, [sp, #44]	; 0x2c
   12cac:	ldr	r0, [r0, r1, lsl #2]
   12cb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12cb4:	ldr	r2, [sp, #40]	; 0x28
   12cb8:	add	r1, r1, r2, lsl #2
   12cbc:	ldr	r1, [r1]
   12cc0:	bl	133b8 <__assert_fail@plt+0x2088>
   12cc4:	ldr	r0, [sp, #40]	; 0x28
   12cc8:	add	r0, r0, #1
   12ccc:	str	r0, [sp, #40]	; 0x28
   12cd0:	b	12c90 <__assert_fail@plt+0x1960>
   12cd4:	b	12cd8 <__assert_fail@plt+0x19a8>
   12cd8:	ldr	r0, [sp, #44]	; 0x2c
   12cdc:	add	r0, r0, #1
   12ce0:	str	r0, [sp, #44]	; 0x2c
   12ce4:	b	12c74 <__assert_fail@plt+0x1944>
   12ce8:	b	12cec <__assert_fail@plt+0x19bc>
   12cec:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   12cf0:	tst	r0, #1
   12cf4:	bne	12d40 <__assert_fail@plt+0x1a10>
   12cf8:	b	12cfc <__assert_fail@plt+0x19cc>
   12cfc:	ldr	r0, [fp, #-12]
   12d00:	ldr	r0, [r0]
   12d04:	str	r0, [sp, #36]	; 0x24
   12d08:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d0c:	ldr	r1, [fp, #-12]
   12d10:	add	r0, r1, r0, lsl #2
   12d14:	ldr	r0, [r0, #-4]
   12d18:	str	r0, [r1]
   12d1c:	ldr	r0, [sp, #36]	; 0x24
   12d20:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d24:	ldr	r2, [fp, #-12]
   12d28:	sub	r1, r1, #1
   12d2c:	add	r1, r2, r1, lsl #2
   12d30:	str	r0, [r1]
   12d34:	movw	r0, #1
   12d38:	str	r0, [fp, #-20]	; 0xffffffec
   12d3c:	b	12d48 <__assert_fail@plt+0x1a18>
   12d40:	movw	r0, #0
   12d44:	str	r0, [fp, #-20]	; 0xffffffec
   12d48:	ldrb	r0, [fp, #-38]	; 0xffffffda
   12d4c:	tst	r0, #1
   12d50:	bne	12d9c <__assert_fail@plt+0x1a6c>
   12d54:	b	12d58 <__assert_fail@plt+0x1a28>
   12d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d5c:	ldr	r0, [r0]
   12d60:	str	r0, [sp, #32]
   12d64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d6c:	add	r0, r1, r0, lsl #2
   12d70:	ldr	r0, [r0, #-4]
   12d74:	str	r0, [r1]
   12d78:	ldr	r0, [sp, #32]
   12d7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12d80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12d84:	sub	r1, r1, #1
   12d88:	add	r1, r2, r1, lsl #2
   12d8c:	str	r0, [r1]
   12d90:	movw	r0, #1
   12d94:	str	r0, [fp, #-32]	; 0xffffffe0
   12d98:	b	12da4 <__assert_fail@plt+0x1a74>
   12d9c:	movw	r0, #0
   12da0:	str	r0, [fp, #-32]	; 0xffffffe0
   12da4:	b	12a04 <__assert_fail@plt+0x16d4>
   12da8:	movw	r0, #0
   12dac:	str	r0, [sp, #28]
   12db0:	movw	r0, #0
   12db4:	strb	r0, [sp, #27]
   12db8:	movw	r0, #12696	; 0x3198
   12dbc:	movt	r0, #3
   12dc0:	ldr	r0, [r0]
   12dc4:	cmp	r0, #2
   12dc8:	beq	12dfc <__assert_fail@plt+0x1acc>
   12dcc:	movw	r0, #12691	; 0x3193
   12dd0:	movt	r0, #3
   12dd4:	ldrb	r0, [r0]
   12dd8:	tst	r0, #1
   12ddc:	beq	12df4 <__assert_fail@plt+0x1ac4>
   12de0:	movw	r0, #12691	; 0x3193
   12de4:	movt	r0, #3
   12de8:	ldrb	r0, [r0, #1]
   12dec:	tst	r0, #1
   12df0:	bne	12dfc <__assert_fail@plt+0x1acc>
   12df4:	movw	r0, #1
   12df8:	strb	r0, [sp, #27]
   12dfc:	movw	r0, #12700	; 0x319c
   12e00:	movt	r0, #3
   12e04:	ldrb	r0, [r0]
   12e08:	tst	r0, #1
   12e0c:	bne	12e1c <__assert_fail@plt+0x1aec>
   12e10:	ldrb	r0, [sp, #27]
   12e14:	tst	r0, #1
   12e18:	beq	12ee0 <__assert_fail@plt+0x1bb0>
   12e1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e20:	cmp	r0, #0
   12e24:	beq	12ee0 <__assert_fail@plt+0x1bb0>
   12e28:	movw	r0, #12700	; 0x319c
   12e2c:	movt	r0, #3
   12e30:	ldrb	r0, [r0]
   12e34:	tst	r0, #1
   12e38:	beq	12e50 <__assert_fail@plt+0x1b20>
   12e3c:	ldr	r0, [fp, #-12]
   12e40:	ldr	r0, [r0]
   12e44:	movw	r1, #12752	; 0x31d0
   12e48:	movt	r1, #3
   12e4c:	bl	133b8 <__assert_fail@plt+0x2088>
   12e50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e54:	cmp	r0, #0
   12e58:	beq	12e6c <__assert_fail@plt+0x1b3c>
   12e5c:	movw	r0, #12690	; 0x3192
   12e60:	movt	r0, #3
   12e64:	movw	r1, #1
   12e68:	strb	r1, [r0]
   12e6c:	b	12e70 <__assert_fail@plt+0x1b40>
   12e70:	ldr	r0, [fp, #-4]
   12e74:	add	r1, sp, #28
   12e78:	movw	r2, #1
   12e7c:	bl	13864 <__assert_fail@plt+0x2534>
   12e80:	tst	r0, #1
   12e84:	beq	12edc <__assert_fail@plt+0x1bac>
   12e88:	movw	r0, #12700	; 0x319c
   12e8c:	movt	r0, #3
   12e90:	ldrb	r0, [r0]
   12e94:	tst	r0, #1
   12e98:	beq	12eac <__assert_fail@plt+0x1b7c>
   12e9c:	ldr	r0, [sp, #28]
   12ea0:	movw	r1, #12752	; 0x31d0
   12ea4:	movt	r1, #3
   12ea8:	bl	133b8 <__assert_fail@plt+0x2088>
   12eac:	movw	r0, #12691	; 0x3193
   12eb0:	movt	r0, #3
   12eb4:	ldrb	r0, [r0]
   12eb8:	tst	r0, #1
   12ebc:	beq	12ed8 <__assert_fail@plt+0x1ba8>
   12ec0:	movw	r0, #12700	; 0x319c
   12ec4:	movt	r0, #3
   12ec8:	ldrb	r0, [r0]
   12ecc:	tst	r0, #1
   12ed0:	bne	12ed8 <__assert_fail@plt+0x1ba8>
   12ed4:	b	12edc <__assert_fail@plt+0x1bac>
   12ed8:	b	12e70 <__assert_fail@plt+0x1b40>
   12edc:	b	12ee0 <__assert_fail@plt+0x1bb0>
   12ee0:	movw	r0, #12701	; 0x319d
   12ee4:	movt	r0, #3
   12ee8:	ldrb	r0, [r0]
   12eec:	tst	r0, #1
   12ef0:	bne	12f00 <__assert_fail@plt+0x1bd0>
   12ef4:	ldrb	r0, [sp, #27]
   12ef8:	tst	r0, #1
   12efc:	beq	12fc4 <__assert_fail@plt+0x1c94>
   12f00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f04:	cmp	r0, #0
   12f08:	beq	12fc4 <__assert_fail@plt+0x1c94>
   12f0c:	movw	r0, #12701	; 0x319d
   12f10:	movt	r0, #3
   12f14:	ldrb	r0, [r0]
   12f18:	tst	r0, #1
   12f1c:	beq	12f34 <__assert_fail@plt+0x1c04>
   12f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f24:	ldr	r1, [r0]
   12f28:	movw	r0, #12752	; 0x31d0
   12f2c:	movt	r0, #3
   12f30:	bl	133b8 <__assert_fail@plt+0x2088>
   12f34:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f38:	cmp	r0, #0
   12f3c:	beq	12f50 <__assert_fail@plt+0x1c20>
   12f40:	movw	r0, #12690	; 0x3192
   12f44:	movt	r0, #3
   12f48:	movw	r1, #1
   12f4c:	strb	r1, [r0]
   12f50:	b	12f54 <__assert_fail@plt+0x1c24>
   12f54:	ldr	r0, [fp, #-8]
   12f58:	add	r1, sp, #28
   12f5c:	movw	r2, #2
   12f60:	bl	13864 <__assert_fail@plt+0x2534>
   12f64:	tst	r0, #1
   12f68:	beq	12fc0 <__assert_fail@plt+0x1c90>
   12f6c:	movw	r0, #12701	; 0x319d
   12f70:	movt	r0, #3
   12f74:	ldrb	r0, [r0]
   12f78:	tst	r0, #1
   12f7c:	beq	12f90 <__assert_fail@plt+0x1c60>
   12f80:	ldr	r1, [sp, #28]
   12f84:	movw	r0, #12752	; 0x31d0
   12f88:	movt	r0, #3
   12f8c:	bl	133b8 <__assert_fail@plt+0x2088>
   12f90:	movw	r0, #12691	; 0x3193
   12f94:	movt	r0, #3
   12f98:	ldrb	r0, [r0, #1]
   12f9c:	tst	r0, #1
   12fa0:	beq	12fbc <__assert_fail@plt+0x1c8c>
   12fa4:	movw	r0, #12701	; 0x319d
   12fa8:	movt	r0, #3
   12fac:	ldrb	r0, [r0]
   12fb0:	tst	r0, #1
   12fb4:	bne	12fbc <__assert_fail@plt+0x1c8c>
   12fb8:	b	12fc0 <__assert_fail@plt+0x1c90>
   12fbc:	b	12f54 <__assert_fail@plt+0x1c24>
   12fc0:	b	12fc4 <__assert_fail@plt+0x1c94>
   12fc4:	ldr	r0, [sp, #28]
   12fc8:	bl	12fec <__assert_fail@plt+0x1cbc>
   12fcc:	ldr	r0, [sp, #28]
   12fd0:	bl	1476c <__assert_fail@plt+0x343c>
   12fd4:	sub	r0, fp, #20
   12fd8:	bl	13a44 <__assert_fail@plt+0x2714>
   12fdc:	sub	r0, fp, #32
   12fe0:	bl	13a44 <__assert_fail@plt+0x2714>
   12fe4:	mov	sp, fp
   12fe8:	pop	{fp, pc}
   12fec:	push	{fp, lr}
   12ff0:	mov	fp, sp
   12ff4:	sub	sp, sp, #8
   12ff8:	str	r0, [sp, #4]
   12ffc:	ldr	r0, [sp, #4]
   13000:	movw	r1, #0
   13004:	cmp	r0, r1
   13008:	bne	13010 <__assert_fail@plt+0x1ce0>
   1300c:	b	13040 <__assert_fail@plt+0x1d10>
   13010:	ldr	r0, [sp, #4]
   13014:	ldr	r0, [r0, #20]
   13018:	bl	1476c <__assert_fail@plt+0x343c>
   1301c:	ldr	r0, [sp, #4]
   13020:	movw	r1, #0
   13024:	str	r1, [r0, #20]
   13028:	ldr	r0, [sp, #4]
   1302c:	ldr	r0, [r0, #8]
   13030:	bl	1476c <__assert_fail@plt+0x343c>
   13034:	ldr	r0, [sp, #4]
   13038:	movw	r1, #0
   1303c:	str	r1, [r0, #8]
   13040:	mov	sp, fp
   13044:	pop	{fp, pc}
   13048:	push	{fp, lr}
   1304c:	mov	fp, sp
   13050:	sub	sp, sp, #40	; 0x28
   13054:	str	r0, [fp, #-4]
   13058:	str	r1, [fp, #-8]
   1305c:	str	r2, [fp, #-12]
   13060:	ldr	r0, [fp, #-4]
   13064:	ldrb	r0, [r0]
   13068:	mov	r1, r0
   1306c:	cmp	r0, #48	; 0x30
   13070:	str	r1, [fp, #-16]
   13074:	beq	13090 <__assert_fail@plt+0x1d60>
   13078:	b	1307c <__assert_fail@plt+0x1d4c>
   1307c:	ldr	r0, [fp, #-16]
   13080:	sub	r1, r0, #49	; 0x31
   13084:	cmp	r1, #2
   13088:	bcc	130f0 <__assert_fail@plt+0x1dc0>
   1308c:	b	13164 <__assert_fail@plt+0x1e34>
   13090:	ldr	r0, [fp, #-4]
   13094:	ldrsb	r0, [r0, #1]
   13098:	cmp	r0, #0
   1309c:	beq	130d8 <__assert_fail@plt+0x1da8>
   130a0:	movw	r0, #7747	; 0x1e43
   130a4:	movt	r0, #2
   130a8:	bl	111ec <gettext@plt>
   130ac:	ldr	r1, [fp, #-4]
   130b0:	str	r0, [sp, #20]
   130b4:	mov	r0, r1
   130b8:	bl	17288 <__assert_fail@plt+0x5f58>
   130bc:	movw	r1, #1
   130c0:	str	r0, [sp, #16]
   130c4:	mov	r0, r1
   130c8:	movw	r1, #0
   130cc:	ldr	r2, [sp, #20]
   130d0:	ldr	r3, [sp, #16]
   130d4:	bl	11180 <error@plt>
   130d8:	ldr	r0, [fp, #-8]
   130dc:	movw	r1, #0
   130e0:	str	r1, [r0]
   130e4:	ldr	r0, [fp, #-12]
   130e8:	str	r1, [r0]
   130ec:	b	1319c <__assert_fail@plt+0x1e6c>
   130f0:	ldr	r0, [fp, #-4]
   130f4:	ldrb	r0, [r0, #1]
   130f8:	cmp	r0, #46	; 0x2e
   130fc:	beq	13138 <__assert_fail@plt+0x1e08>
   13100:	movw	r0, #7747	; 0x1e43
   13104:	movt	r0, #2
   13108:	bl	111ec <gettext@plt>
   1310c:	ldr	r1, [fp, #-4]
   13110:	str	r0, [sp, #12]
   13114:	mov	r0, r1
   13118:	bl	17288 <__assert_fail@plt+0x5f58>
   1311c:	movw	r1, #1
   13120:	str	r0, [sp, #8]
   13124:	mov	r0, r1
   13128:	movw	r1, #0
   1312c:	ldr	r2, [sp, #12]
   13130:	ldr	r3, [sp, #8]
   13134:	bl	11180 <error@plt>
   13138:	ldr	r0, [fp, #-4]
   1313c:	ldrb	r0, [r0]
   13140:	sub	r0, r0, #48	; 0x30
   13144:	ldr	r1, [fp, #-8]
   13148:	str	r0, [r1]
   1314c:	ldr	r0, [fp, #-4]
   13150:	add	r0, r0, #2
   13154:	bl	124b0 <__assert_fail@plt+0x1180>
   13158:	ldr	r1, [fp, #-12]
   1315c:	str	r0, [r1]
   13160:	b	1319c <__assert_fail@plt+0x1e6c>
   13164:	movw	r0, #7775	; 0x1e5f
   13168:	movt	r0, #2
   1316c:	bl	111ec <gettext@plt>
   13170:	ldr	r1, [fp, #-4]
   13174:	str	r0, [sp, #4]
   13178:	mov	r0, r1
   1317c:	bl	17288 <__assert_fail@plt+0x5f58>
   13180:	movw	r1, #1
   13184:	str	r0, [sp]
   13188:	mov	r0, r1
   1318c:	movw	r1, #0
   13190:	ldr	r2, [sp, #4]
   13194:	ldr	r3, [sp]
   13198:	bl	11180 <error@plt>
   1319c:	mov	sp, fp
   131a0:	pop	{fp, pc}
   131a4:	push	{fp, lr}
   131a8:	mov	fp, sp
   131ac:	sub	sp, sp, #16
   131b0:	str	r0, [fp, #-4]
   131b4:	str	r1, [sp, #8]
   131b8:	ldr	r0, [fp, #-4]
   131bc:	cmp	r0, #0
   131c0:	beq	131dc <__assert_fail@plt+0x1eac>
   131c4:	ldr	r0, [fp, #-4]
   131c8:	cmp	r0, #1
   131cc:	beq	131dc <__assert_fail@plt+0x1eac>
   131d0:	ldr	r0, [fp, #-4]
   131d4:	cmp	r0, #2
   131d8:	bne	131e0 <__assert_fail@plt+0x1eb0>
   131dc:	b	13200 <__assert_fail@plt+0x1ed0>
   131e0:	movw	r0, #7813	; 0x1e85
   131e4:	movt	r0, #2
   131e8:	movw	r1, #7849	; 0x1ea9
   131ec:	movt	r1, #2
   131f0:	movw	r2, #819	; 0x333
   131f4:	movw	r3, #7860	; 0x1eb4
   131f8:	movt	r3, #2
   131fc:	bl	11330 <__assert_fail@plt>
   13200:	ldr	r0, [fp, #-4]
   13204:	cmp	r0, #0
   13208:	bne	13218 <__assert_fail@plt+0x1ee8>
   1320c:	ldr	r0, [sp, #8]
   13210:	cmp	r0, #0
   13214:	bne	1321c <__assert_fail@plt+0x1eec>
   13218:	b	1323c <__assert_fail@plt+0x1f0c>
   1321c:	movw	r0, #7888	; 0x1ed0
   13220:	movt	r0, #2
   13224:	movw	r1, #7849	; 0x1ea9
   13228:	movt	r1, #2
   1322c:	movw	r2, #820	; 0x334
   13230:	movw	r3, #7860	; 0x1eb4
   13234:	movt	r3, #2
   13238:	bl	11330 <__assert_fail@plt>
   1323c:	movw	r0, #12
   13240:	bl	17e10 <__assert_fail@plt+0x6ae0>
   13244:	str	r0, [sp, #4]
   13248:	ldr	r0, [fp, #-4]
   1324c:	ldr	r1, [sp, #4]
   13250:	str	r0, [r1]
   13254:	ldr	r0, [sp, #8]
   13258:	ldr	r1, [sp, #4]
   1325c:	str	r0, [r1, #4]
   13260:	ldr	r0, [sp, #4]
   13264:	movw	r1, #0
   13268:	str	r1, [r0, #8]
   1326c:	ldr	r0, [sp, #4]
   13270:	movw	r1, #12568	; 0x3118
   13274:	movt	r1, #3
   13278:	ldr	r2, [r1]
   1327c:	str	r0, [r2, #8]
   13280:	ldr	r0, [sp, #4]
   13284:	str	r0, [r1]
   13288:	mov	sp, fp
   1328c:	pop	{fp, pc}
   13290:	sub	sp, sp, #4
   13294:	str	r0, [sp]
   13298:	ldr	r0, [sp]
   1329c:	movw	r1, #0
   132a0:	str	r1, [r0]
   132a4:	ldr	r0, [sp]
   132a8:	str	r1, [r0, #4]
   132ac:	ldr	r0, [sp]
   132b0:	str	r1, [r0, #8]
   132b4:	add	sp, sp, #4
   132b8:	bx	lr
   132bc:	push	{fp, lr}
   132c0:	mov	fp, sp
   132c4:	sub	sp, sp, #24
   132c8:	str	r0, [fp, #-8]
   132cc:	str	r1, [sp, #12]
   132d0:	str	r2, [sp, #8]
   132d4:	ldr	r0, [sp, #12]
   132d8:	ldr	r0, [r0]
   132dc:	ldr	r1, [sp, #12]
   132e0:	ldr	r1, [r1, #4]
   132e4:	cmp	r0, r1
   132e8:	bne	13358 <__assert_fail@plt+0x2028>
   132ec:	ldr	r0, [sp, #12]
   132f0:	ldr	r0, [r0, #8]
   132f4:	ldr	r1, [sp, #12]
   132f8:	add	r1, r1, #4
   132fc:	movw	r2, #4
   13300:	bl	17fec <__assert_fail@plt+0x6cbc>
   13304:	ldr	r1, [sp, #12]
   13308:	str	r0, [r1, #8]
   1330c:	ldr	r0, [sp, #12]
   13310:	ldr	r0, [r0]
   13314:	str	r0, [sp, #4]
   13318:	ldr	r0, [sp, #4]
   1331c:	ldr	r1, [sp, #12]
   13320:	ldr	r1, [r1, #4]
   13324:	cmp	r0, r1
   13328:	bcs	13354 <__assert_fail@plt+0x2024>
   1332c:	ldr	r0, [sp, #12]
   13330:	ldr	r0, [r0, #8]
   13334:	ldr	r1, [sp, #4]
   13338:	add	r0, r0, r1, lsl #2
   1333c:	movw	r1, #0
   13340:	str	r1, [r0]
   13344:	ldr	r0, [sp, #4]
   13348:	add	r0, r0, #1
   1334c:	str	r0, [sp, #4]
   13350:	b	13318 <__assert_fail@plt+0x1fe8>
   13354:	b	13358 <__assert_fail@plt+0x2028>
   13358:	ldr	r0, [fp, #-8]
   1335c:	ldr	r1, [sp, #12]
   13360:	ldr	r2, [r1]
   13364:	ldr	r1, [r1, #8]
   13368:	add	r1, r1, r2, lsl #2
   1336c:	ldr	r2, [sp, #8]
   13370:	bl	13864 <__assert_fail@plt+0x2534>
   13374:	tst	r0, #1
   13378:	beq	1339c <__assert_fail@plt+0x206c>
   1337c:	ldr	r0, [sp, #12]
   13380:	ldr	r1, [r0]
   13384:	add	r1, r1, #1
   13388:	str	r1, [r0]
   1338c:	movw	r0, #1
   13390:	and	r0, r0, #1
   13394:	strb	r0, [fp, #-1]
   13398:	b	133a8 <__assert_fail@plt+0x2078>
   1339c:	movw	r0, #0
   133a0:	and	r0, r0, #1
   133a4:	strb	r0, [fp, #-1]
   133a8:	ldrb	r0, [fp, #-1]
   133ac:	and	r0, r0, #1
   133b0:	mov	sp, fp
   133b4:	pop	{fp, pc}
   133b8:	push	{fp, lr}
   133bc:	mov	fp, sp
   133c0:	sub	sp, sp, #40	; 0x28
   133c4:	str	r0, [fp, #-4]
   133c8:	str	r1, [fp, #-8]
   133cc:	movw	r0, #12560	; 0x3110
   133d0:	movt	r0, #3
   133d4:	ldr	r0, [r0]
   133d8:	cmp	r0, #0
   133dc:	bge	133ec <__assert_fail@plt+0x20bc>
   133e0:	movw	r0, #32
   133e4:	str	r0, [sp, #8]
   133e8:	b	133fc <__assert_fail@plt+0x20cc>
   133ec:	movw	r0, #12560	; 0x3110
   133f0:	movt	r0, #3
   133f4:	ldr	r0, [r0]
   133f8:	str	r0, [sp, #8]
   133fc:	ldr	r0, [sp, #8]
   13400:	strb	r0, [fp, #-13]
   13404:	movw	r0, #12732	; 0x31bc
   13408:	movt	r0, #3
   1340c:	ldr	r0, [r0, #8]
   13410:	str	r0, [fp, #-12]
   13414:	ldr	r0, [fp, #-12]
   13418:	movw	r1, #0
   1341c:	cmp	r0, r1
   13420:	beq	1350c <__assert_fail@plt+0x21dc>
   13424:	ldr	r0, [fp, #-12]
   13428:	str	r0, [sp, #12]
   1342c:	ldr	r0, [sp, #12]
   13430:	ldr	r0, [r0]
   13434:	cmp	r0, #0
   13438:	bne	13488 <__assert_fail@plt+0x2158>
   1343c:	ldr	r0, [fp, #-4]
   13440:	movw	r1, #12752	; 0x31d0
   13444:	movt	r1, #3
   13448:	cmp	r0, r1
   1344c:	bne	1346c <__assert_fail@plt+0x213c>
   13450:	ldr	r0, [fp, #-8]
   13454:	str	r0, [sp, #16]
   13458:	movw	r0, #12556	; 0x310c
   1345c:	movt	r0, #3
   13460:	ldr	r0, [r0]
   13464:	str	r0, [sp, #20]
   13468:	b	13484 <__assert_fail@plt+0x2154>
   1346c:	ldr	r0, [fp, #-4]
   13470:	str	r0, [sp, #16]
   13474:	movw	r0, #12552	; 0x3108
   13478:	movt	r0, #3
   1347c:	ldr	r0, [r0]
   13480:	str	r0, [sp, #20]
   13484:	b	134c0 <__assert_fail@plt+0x2190>
   13488:	ldr	r0, [sp, #12]
   1348c:	ldr	r0, [r0]
   13490:	cmp	r0, #1
   13494:	bne	134a4 <__assert_fail@plt+0x2174>
   13498:	ldr	r0, [fp, #-4]
   1349c:	str	r0, [sp, #4]
   134a0:	b	134ac <__assert_fail@plt+0x217c>
   134a4:	ldr	r0, [fp, #-8]
   134a8:	str	r0, [sp, #4]
   134ac:	ldr	r0, [sp, #4]
   134b0:	str	r0, [sp, #16]
   134b4:	ldr	r0, [sp, #12]
   134b8:	ldr	r0, [r0, #4]
   134bc:	str	r0, [sp, #20]
   134c0:	ldr	r0, [sp, #20]
   134c4:	ldr	r1, [sp, #16]
   134c8:	bl	13ac0 <__assert_fail@plt+0x2790>
   134cc:	ldr	r0, [sp, #12]
   134d0:	ldr	r0, [r0, #8]
   134d4:	str	r0, [sp, #12]
   134d8:	ldr	r0, [sp, #12]
   134dc:	movw	r1, #0
   134e0:	cmp	r0, r1
   134e4:	bne	134ec <__assert_fail@plt+0x21bc>
   134e8:	b	134f8 <__assert_fail@plt+0x21c8>
   134ec:	ldrb	r0, [fp, #-13]
   134f0:	bl	11324 <putchar_unlocked@plt>
   134f4:	b	1342c <__assert_fail@plt+0x20fc>
   134f8:	movw	r0, #12564	; 0x3114
   134fc:	movt	r0, #3
   13500:	ldrb	r0, [r0]
   13504:	bl	11324 <putchar_unlocked@plt>
   13508:	b	135b0 <__assert_fail@plt+0x2280>
   1350c:	ldr	r0, [fp, #-4]
   13510:	movw	r1, #12752	; 0x31d0
   13514:	movt	r1, #3
   13518:	cmp	r0, r1
   1351c:	bne	1353c <__assert_fail@plt+0x220c>
   13520:	ldr	r0, [fp, #-8]
   13524:	str	r0, [sp, #16]
   13528:	movw	r0, #12556	; 0x310c
   1352c:	movt	r0, #3
   13530:	ldr	r0, [r0]
   13534:	str	r0, [sp, #20]
   13538:	b	13554 <__assert_fail@plt+0x2224>
   1353c:	ldr	r0, [fp, #-4]
   13540:	str	r0, [sp, #16]
   13544:	movw	r0, #12552	; 0x3108
   13548:	movt	r0, #3
   1354c:	ldr	r0, [r0]
   13550:	str	r0, [sp, #20]
   13554:	ldr	r0, [sp, #20]
   13558:	ldr	r1, [sp, #16]
   1355c:	bl	13ac0 <__assert_fail@plt+0x2790>
   13560:	ldr	r0, [fp, #-4]
   13564:	movw	r1, #12552	; 0x3108
   13568:	movt	r1, #3
   1356c:	ldr	r1, [r1]
   13570:	movw	r2, #12744	; 0x31c8
   13574:	movt	r2, #3
   13578:	ldr	r2, [r2]
   1357c:	bl	13bb8 <__assert_fail@plt+0x2888>
   13580:	ldr	r0, [fp, #-8]
   13584:	movw	r1, #12556	; 0x310c
   13588:	movt	r1, #3
   1358c:	ldr	r1, [r1]
   13590:	movw	r2, #12748	; 0x31cc
   13594:	movt	r2, #3
   13598:	ldr	r2, [r2]
   1359c:	bl	13bb8 <__assert_fail@plt+0x2888>
   135a0:	movw	r0, #12564	; 0x3114
   135a4:	movt	r0, #3
   135a8:	ldrb	r0, [r0]
   135ac:	bl	11324 <putchar_unlocked@plt>
   135b0:	mov	sp, fp
   135b4:	pop	{fp, pc}
   135b8:	push	{fp, lr}
   135bc:	mov	fp, sp
   135c0:	sub	sp, sp, #16
   135c4:	str	r0, [fp, #-4]
   135c8:	str	r1, [sp, #8]
   135cc:	and	r0, r2, #1
   135d0:	strb	r0, [sp, #7]
   135d4:	str	r3, [sp]
   135d8:	ldrb	r0, [sp, #7]
   135dc:	tst	r0, #1
   135e0:	beq	135f0 <__assert_fail@plt+0x22c0>
   135e4:	ldr	r0, [sp, #8]
   135e8:	movw	r1, #0
   135ec:	str	r1, [r0]
   135f0:	ldr	r0, [fp, #-4]
   135f4:	ldr	r1, [sp, #8]
   135f8:	ldr	r2, [sp]
   135fc:	bl	132bc <__assert_fail@plt+0x1f8c>
   13600:	and	r0, r0, #1
   13604:	mov	sp, fp
   13608:	pop	{fp, pc}
   1360c:	push	{fp, lr}
   13610:	mov	fp, sp
   13614:	sub	sp, sp, #80	; 0x50
   13618:	str	r0, [fp, #-8]
   1361c:	str	r1, [fp, #-12]
   13620:	str	r2, [fp, #-16]
   13624:	str	r3, [fp, #-20]	; 0xffffffec
   13628:	ldr	r0, [fp, #-16]
   1362c:	ldr	r1, [fp, #-8]
   13630:	ldr	r1, [r1, #12]
   13634:	cmp	r0, r1
   13638:	bcs	1366c <__assert_fail@plt+0x233c>
   1363c:	ldr	r0, [fp, #-8]
   13640:	ldr	r0, [r0, #20]
   13644:	ldr	r1, [fp, #-16]
   13648:	ldr	r0, [r0, r1, lsl #3]
   1364c:	str	r0, [fp, #-24]	; 0xffffffe8
   13650:	ldr	r0, [fp, #-8]
   13654:	ldr	r0, [r0, #20]
   13658:	ldr	r1, [fp, #-16]
   1365c:	add	r0, r0, r1, lsl #3
   13660:	ldr	r0, [r0, #4]
   13664:	str	r0, [fp, #-32]	; 0xffffffe0
   13668:	b	13678 <__assert_fail@plt+0x2348>
   1366c:	movw	r0, #0
   13670:	str	r0, [fp, #-24]	; 0xffffffe8
   13674:	str	r0, [fp, #-32]	; 0xffffffe0
   13678:	ldr	r0, [fp, #-20]	; 0xffffffec
   1367c:	ldr	r1, [fp, #-12]
   13680:	ldr	r1, [r1, #12]
   13684:	cmp	r0, r1
   13688:	bcs	136bc <__assert_fail@plt+0x238c>
   1368c:	ldr	r0, [fp, #-12]
   13690:	ldr	r0, [r0, #20]
   13694:	ldr	r1, [fp, #-20]	; 0xffffffec
   13698:	ldr	r0, [r0, r1, lsl #3]
   1369c:	str	r0, [fp, #-28]	; 0xffffffe4
   136a0:	ldr	r0, [fp, #-12]
   136a4:	ldr	r0, [r0, #20]
   136a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   136ac:	add	r0, r0, r1, lsl #3
   136b0:	ldr	r0, [r0, #4]
   136b4:	str	r0, [fp, #-36]	; 0xffffffdc
   136b8:	b	136c8 <__assert_fail@plt+0x2398>
   136bc:	movw	r0, #0
   136c0:	str	r0, [fp, #-28]	; 0xffffffe4
   136c4:	str	r0, [fp, #-36]	; 0xffffffdc
   136c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   136cc:	cmp	r0, #0
   136d0:	bne	136f8 <__assert_fail@plt+0x23c8>
   136d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   136d8:	cmp	r0, #0
   136dc:	movw	r0, #0
   136e0:	moveq	r0, #1
   136e4:	tst	r0, #1
   136e8:	movw	r0, #0
   136ec:	mvneq	r0, #0
   136f0:	str	r0, [fp, #-4]
   136f4:	b	13858 <__assert_fail@plt+0x2528>
   136f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   136fc:	cmp	r0, #0
   13700:	bne	13710 <__assert_fail@plt+0x23e0>
   13704:	movw	r0, #1
   13708:	str	r0, [fp, #-4]
   1370c:	b	13858 <__assert_fail@plt+0x2528>
   13710:	movw	r0, #12708	; 0x31a4
   13714:	movt	r0, #3
   13718:	ldrb	r0, [r0]
   1371c:	tst	r0, #1
   13720:	beq	1377c <__assert_fail@plt+0x244c>
   13724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13728:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1372c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13730:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13734:	cmp	r2, r3
   13738:	str	r0, [sp, #36]	; 0x24
   1373c:	str	r1, [sp, #32]
   13740:	bcs	13750 <__assert_fail@plt+0x2420>
   13744:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13748:	str	r0, [sp, #28]
   1374c:	b	13758 <__assert_fail@plt+0x2428>
   13750:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13754:	str	r0, [sp, #28]
   13758:	ldr	r0, [sp, #28]
   1375c:	ldr	r1, [sp, #36]	; 0x24
   13760:	str	r0, [sp, #24]
   13764:	mov	r0, r1
   13768:	ldr	r1, [sp, #32]
   1376c:	ldr	r2, [sp, #24]
   13770:	bl	14b5c <__assert_fail@plt+0x382c>
   13774:	str	r0, [sp, #40]	; 0x28
   13778:	b	13800 <__assert_fail@plt+0x24d0>
   1377c:	movw	r0, #12688	; 0x3190
   13780:	movt	r0, #3
   13784:	ldrb	r0, [r0]
   13788:	tst	r0, #1
   1378c:	beq	137ac <__assert_fail@plt+0x247c>
   13790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13794:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13798:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1379c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   137a0:	bl	1ab98 <__assert_fail@plt+0x9868>
   137a4:	str	r0, [fp, #-4]
   137a8:	b	13858 <__assert_fail@plt+0x2528>
   137ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   137b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   137bc:	cmp	r2, r3
   137c0:	str	r0, [sp, #20]
   137c4:	str	r1, [sp, #16]
   137c8:	bcs	137d8 <__assert_fail@plt+0x24a8>
   137cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137d0:	str	r0, [sp, #12]
   137d4:	b	137e0 <__assert_fail@plt+0x24b0>
   137d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   137dc:	str	r0, [sp, #12]
   137e0:	ldr	r0, [sp, #12]
   137e4:	ldr	r1, [sp, #20]
   137e8:	str	r0, [sp, #8]
   137ec:	mov	r0, r1
   137f0:	ldr	r1, [sp, #16]
   137f4:	ldr	r2, [sp, #8]
   137f8:	bl	11108 <memcmp@plt>
   137fc:	str	r0, [sp, #40]	; 0x28
   13800:	ldr	r0, [sp, #40]	; 0x28
   13804:	cmp	r0, #0
   13808:	beq	13818 <__assert_fail@plt+0x24e8>
   1380c:	ldr	r0, [sp, #40]	; 0x28
   13810:	str	r0, [fp, #-4]
   13814:	b	13858 <__assert_fail@plt+0x2528>
   13818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1381c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13820:	cmp	r0, r1
   13824:	bcs	13834 <__assert_fail@plt+0x2504>
   13828:	mvn	r0, #0
   1382c:	str	r0, [sp, #4]
   13830:	b	13850 <__assert_fail@plt+0x2520>
   13834:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13838:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1383c:	cmp	r0, r1
   13840:	movw	r0, #0
   13844:	movne	r0, #1
   13848:	and	r0, r0, #1
   1384c:	str	r0, [sp, #4]
   13850:	ldr	r0, [sp, #4]
   13854:	str	r0, [fp, #-4]
   13858:	ldr	r0, [fp, #-4]
   1385c:	mov	sp, fp
   13860:	pop	{fp, pc}
   13864:	push	{fp, lr}
   13868:	mov	fp, sp
   1386c:	sub	sp, sp, #32
   13870:	str	r0, [fp, #-8]
   13874:	str	r1, [fp, #-12]
   13878:	str	r2, [sp, #16]
   1387c:	ldr	r0, [fp, #-12]
   13880:	ldr	r0, [r0]
   13884:	str	r0, [sp, #12]
   13888:	ldr	r0, [sp, #12]
   1388c:	ldr	r1, [sp, #16]
   13890:	sub	r1, r1, #1
   13894:	movw	r2, #12776	; 0x31e8
   13898:	movt	r2, #3
   1389c:	add	r1, r2, r1, lsl #2
   138a0:	ldr	r1, [r1]
   138a4:	cmp	r0, r1
   138a8:	bne	138f0 <__assert_fail@plt+0x25c0>
   138ac:	b	138b0 <__assert_fail@plt+0x2580>
   138b0:	ldr	r0, [sp, #12]
   138b4:	str	r0, [sp, #8]
   138b8:	ldr	r0, [sp, #16]
   138bc:	movw	r1, #12724	; 0x31b4
   138c0:	movt	r1, #3
   138c4:	add	r0, r1, r0, lsl #2
   138c8:	ldr	r0, [r0, #-4]
   138cc:	str	r0, [sp, #12]
   138d0:	ldr	r0, [sp, #8]
   138d4:	ldr	r2, [sp, #16]
   138d8:	sub	r2, r2, #1
   138dc:	add	r1, r1, r2, lsl #2
   138e0:	str	r0, [r1]
   138e4:	ldr	r0, [sp, #12]
   138e8:	ldr	r1, [fp, #-12]
   138ec:	str	r0, [r1]
   138f0:	ldr	r0, [sp, #12]
   138f4:	movw	r1, #0
   138f8:	cmp	r0, r1
   138fc:	beq	1390c <__assert_fail@plt+0x25dc>
   13900:	ldr	r0, [sp, #12]
   13904:	bl	13d04 <__assert_fail@plt+0x29d4>
   13908:	b	13918 <__assert_fail@plt+0x25e8>
   1390c:	ldr	r0, [fp, #-12]
   13910:	bl	13d20 <__assert_fail@plt+0x29f0>
   13914:	str	r0, [sp, #12]
   13918:	ldr	r0, [sp, #12]
   1391c:	ldr	r1, [fp, #-8]
   13920:	movw	r2, #12564	; 0x3114
   13924:	movt	r2, #3
   13928:	ldrb	r2, [r2]
   1392c:	bl	149ac <__assert_fail@plt+0x367c>
   13930:	movw	r1, #0
   13934:	cmp	r0, r1
   13938:	bne	13994 <__assert_fail@plt+0x2664>
   1393c:	ldr	r0, [fp, #-8]
   13940:	bl	11168 <ferror_unlocked@plt>
   13944:	cmp	r0, #0
   13948:	beq	1397c <__assert_fail@plt+0x264c>
   1394c:	bl	11228 <__errno_location@plt>
   13950:	ldr	r1, [r0]
   13954:	movw	r0, #7929	; 0x1ef9
   13958:	movt	r0, #2
   1395c:	str	r1, [sp, #4]
   13960:	bl	111ec <gettext@plt>
   13964:	movw	r1, #1
   13968:	str	r0, [sp]
   1396c:	mov	r0, r1
   13970:	ldr	r1, [sp, #4]
   13974:	ldr	r2, [sp]
   13978:	bl	11180 <error@plt>
   1397c:	ldr	r0, [sp, #12]
   13980:	bl	12fec <__assert_fail@plt+0x1cbc>
   13984:	movw	r0, #0
   13988:	and	r0, r0, #1
   1398c:	strb	r0, [fp, #-1]
   13990:	b	13a34 <__assert_fail@plt+0x2704>
   13994:	ldr	r0, [sp, #16]
   13998:	movw	r1, #12784	; 0x31f0
   1399c:	movt	r1, #3
   139a0:	add	r0, r1, r0, lsl #3
   139a4:	ldr	r1, [r0, #-8]
   139a8:	ldr	r2, [r0, #-4]
   139ac:	adds	r1, r1, #1
   139b0:	adc	r2, r2, #0
   139b4:	str	r1, [r0, #-8]
   139b8:	str	r2, [r0, #-4]
   139bc:	ldr	r0, [sp, #12]
   139c0:	bl	13d58 <__assert_fail@plt+0x2a28>
   139c4:	ldr	r0, [sp, #16]
   139c8:	sub	r0, r0, #1
   139cc:	movw	r1, #12776	; 0x31e8
   139d0:	movt	r1, #3
   139d4:	add	r0, r1, r0, lsl #2
   139d8:	ldr	r0, [r0]
   139dc:	movw	r1, #0
   139e0:	cmp	r0, r1
   139e4:	beq	13a0c <__assert_fail@plt+0x26dc>
   139e8:	ldr	r0, [sp, #16]
   139ec:	sub	r0, r0, #1
   139f0:	movw	r1, #12776	; 0x31e8
   139f4:	movt	r1, #3
   139f8:	add	r0, r1, r0, lsl #2
   139fc:	ldr	r0, [r0]
   13a00:	ldr	r1, [sp, #12]
   13a04:	ldr	r2, [sp, #16]
   13a08:	bl	13f98 <__assert_fail@plt+0x2c68>
   13a0c:	ldr	r0, [sp, #12]
   13a10:	ldr	r1, [sp, #16]
   13a14:	sub	r1, r1, #1
   13a18:	movw	r2, #12776	; 0x31e8
   13a1c:	movt	r2, #3
   13a20:	add	r1, r2, r1, lsl #2
   13a24:	str	r0, [r1]
   13a28:	movw	r0, #1
   13a2c:	and	r0, r0, #1
   13a30:	strb	r0, [fp, #-1]
   13a34:	ldrb	r0, [fp, #-1]
   13a38:	and	r0, r0, #1
   13a3c:	mov	sp, fp
   13a40:	pop	{fp, pc}
   13a44:	push	{fp, lr}
   13a48:	mov	fp, sp
   13a4c:	sub	sp, sp, #8
   13a50:	str	r0, [sp, #4]
   13a54:	movw	r0, #0
   13a58:	str	r0, [sp]
   13a5c:	ldr	r0, [sp]
   13a60:	ldr	r1, [sp, #4]
   13a64:	ldr	r1, [r1, #4]
   13a68:	cmp	r0, r1
   13a6c:	bcs	13aac <__assert_fail@plt+0x277c>
   13a70:	ldr	r0, [sp, #4]
   13a74:	ldr	r0, [r0, #8]
   13a78:	ldr	r1, [sp]
   13a7c:	ldr	r0, [r0, r1, lsl #2]
   13a80:	bl	12fec <__assert_fail@plt+0x1cbc>
   13a84:	ldr	r0, [sp, #4]
   13a88:	ldr	r0, [r0, #8]
   13a8c:	ldr	r1, [sp]
   13a90:	add	r0, r0, r1, lsl #2
   13a94:	ldr	r0, [r0]
   13a98:	bl	1476c <__assert_fail@plt+0x343c>
   13a9c:	ldr	r0, [sp]
   13aa0:	add	r0, r0, #1
   13aa4:	str	r0, [sp]
   13aa8:	b	13a5c <__assert_fail@plt+0x272c>
   13aac:	ldr	r0, [sp, #4]
   13ab0:	ldr	r0, [r0, #8]
   13ab4:	bl	1476c <__assert_fail@plt+0x343c>
   13ab8:	mov	sp, fp
   13abc:	pop	{fp, pc}
   13ac0:	push	{fp, lr}
   13ac4:	mov	fp, sp
   13ac8:	sub	sp, sp, #16
   13acc:	str	r0, [fp, #-4]
   13ad0:	str	r1, [sp, #8]
   13ad4:	ldr	r0, [fp, #-4]
   13ad8:	ldr	r1, [sp, #8]
   13adc:	ldr	r1, [r1, #12]
   13ae0:	cmp	r0, r1
   13ae4:	bcs	13b78 <__assert_fail@plt+0x2848>
   13ae8:	ldr	r0, [sp, #8]
   13aec:	ldr	r0, [r0, #20]
   13af0:	ldr	r1, [fp, #-4]
   13af4:	add	r0, r0, r1, lsl #3
   13af8:	ldr	r0, [r0, #4]
   13afc:	str	r0, [sp, #4]
   13b00:	ldr	r0, [sp, #4]
   13b04:	cmp	r0, #0
   13b08:	beq	13b3c <__assert_fail@plt+0x280c>
   13b0c:	ldr	r0, [sp, #8]
   13b10:	ldr	r0, [r0, #20]
   13b14:	ldr	r1, [fp, #-4]
   13b18:	add	r0, r0, r1, lsl #3
   13b1c:	ldr	r0, [r0]
   13b20:	ldr	r2, [sp, #4]
   13b24:	movw	r1, #12676	; 0x3184
   13b28:	movt	r1, #3
   13b2c:	ldr	r3, [r1]
   13b30:	movw	r1, #1
   13b34:	bl	110fc <fwrite_unlocked@plt>
   13b38:	b	13b74 <__assert_fail@plt+0x2844>
   13b3c:	movw	r0, #12704	; 0x31a0
   13b40:	movt	r0, #3
   13b44:	ldr	r0, [r0]
   13b48:	movw	r1, #0
   13b4c:	cmp	r0, r1
   13b50:	beq	13b70 <__assert_fail@plt+0x2840>
   13b54:	movw	r0, #12704	; 0x31a0
   13b58:	movt	r0, #3
   13b5c:	ldr	r0, [r0]
   13b60:	movw	r1, #12676	; 0x3184
   13b64:	movt	r1, #3
   13b68:	ldr	r1, [r1]
   13b6c:	bl	11084 <fputs_unlocked@plt>
   13b70:	b	13b74 <__assert_fail@plt+0x2844>
   13b74:	b	13bb0 <__assert_fail@plt+0x2880>
   13b78:	movw	r0, #12704	; 0x31a0
   13b7c:	movt	r0, #3
   13b80:	ldr	r0, [r0]
   13b84:	movw	r1, #0
   13b88:	cmp	r0, r1
   13b8c:	beq	13bac <__assert_fail@plt+0x287c>
   13b90:	movw	r0, #12704	; 0x31a0
   13b94:	movt	r0, #3
   13b98:	ldr	r0, [r0]
   13b9c:	movw	r1, #12676	; 0x3184
   13ba0:	movt	r1, #3
   13ba4:	ldr	r1, [r1]
   13ba8:	bl	11084 <fputs_unlocked@plt>
   13bac:	b	13bb0 <__assert_fail@plt+0x2880>
   13bb0:	mov	sp, fp
   13bb4:	pop	{fp, pc}
   13bb8:	push	{fp, lr}
   13bbc:	mov	fp, sp
   13bc0:	sub	sp, sp, #48	; 0x30
   13bc4:	str	r0, [fp, #-4]
   13bc8:	str	r1, [fp, #-8]
   13bcc:	str	r2, [fp, #-12]
   13bd0:	movw	r0, #12709	; 0x31a5
   13bd4:	movt	r0, #3
   13bd8:	ldrb	r0, [r0]
   13bdc:	tst	r0, #1
   13be0:	beq	13bf0 <__assert_fail@plt+0x28c0>
   13be4:	ldr	r0, [fp, #-12]
   13be8:	str	r0, [sp, #20]
   13bec:	b	13bfc <__assert_fail@plt+0x28cc>
   13bf0:	ldr	r0, [fp, #-4]
   13bf4:	ldr	r0, [r0, #12]
   13bf8:	str	r0, [sp, #20]
   13bfc:	ldr	r0, [sp, #20]
   13c00:	str	r0, [fp, #-20]	; 0xffffffec
   13c04:	movw	r0, #12560	; 0x3110
   13c08:	movt	r0, #3
   13c0c:	ldr	r0, [r0]
   13c10:	cmp	r0, #0
   13c14:	bge	13c24 <__assert_fail@plt+0x28f4>
   13c18:	movw	r0, #32
   13c1c:	str	r0, [sp, #16]
   13c20:	b	13c34 <__assert_fail@plt+0x2904>
   13c24:	movw	r0, #12560	; 0x3110
   13c28:	movt	r0, #3
   13c2c:	ldr	r0, [r0]
   13c30:	str	r0, [sp, #16]
   13c34:	ldr	r0, [sp, #16]
   13c38:	strb	r0, [fp, #-21]	; 0xffffffeb
   13c3c:	movw	r0, #0
   13c40:	str	r0, [fp, #-16]
   13c44:	ldr	r0, [fp, #-16]
   13c48:	ldr	r1, [fp, #-8]
   13c4c:	cmp	r0, r1
   13c50:	movw	r0, #0
   13c54:	str	r0, [sp, #12]
   13c58:	bcs	13c74 <__assert_fail@plt+0x2944>
   13c5c:	ldr	r0, [fp, #-16]
   13c60:	ldr	r1, [fp, #-20]	; 0xffffffec
   13c64:	cmp	r0, r1
   13c68:	movw	r0, #0
   13c6c:	movcc	r0, #1
   13c70:	str	r0, [sp, #12]
   13c74:	ldr	r0, [sp, #12]
   13c78:	tst	r0, #1
   13c7c:	beq	13cb0 <__assert_fail@plt+0x2980>
   13c80:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   13c84:	bl	11324 <putchar_unlocked@plt>
   13c88:	ldr	r1, [fp, #-16]
   13c8c:	ldr	r2, [fp, #-4]
   13c90:	str	r0, [sp, #8]
   13c94:	mov	r0, r1
   13c98:	mov	r1, r2
   13c9c:	bl	13ac0 <__assert_fail@plt+0x2790>
   13ca0:	ldr	r0, [fp, #-16]
   13ca4:	add	r0, r0, #1
   13ca8:	str	r0, [fp, #-16]
   13cac:	b	13c44 <__assert_fail@plt+0x2914>
   13cb0:	ldr	r0, [fp, #-8]
   13cb4:	add	r0, r0, #1
   13cb8:	str	r0, [fp, #-16]
   13cbc:	ldr	r0, [fp, #-16]
   13cc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13cc4:	cmp	r0, r1
   13cc8:	bcs	13cfc <__assert_fail@plt+0x29cc>
   13ccc:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   13cd0:	bl	11324 <putchar_unlocked@plt>
   13cd4:	ldr	r1, [fp, #-16]
   13cd8:	ldr	r2, [fp, #-4]
   13cdc:	str	r0, [sp, #4]
   13ce0:	mov	r0, r1
   13ce4:	mov	r1, r2
   13ce8:	bl	13ac0 <__assert_fail@plt+0x2790>
   13cec:	ldr	r0, [fp, #-16]
   13cf0:	add	r0, r0, #1
   13cf4:	str	r0, [fp, #-16]
   13cf8:	b	13cbc <__assert_fail@plt+0x298c>
   13cfc:	mov	sp, fp
   13d00:	pop	{fp, pc}
   13d04:	sub	sp, sp, #4
   13d08:	str	r0, [sp]
   13d0c:	ldr	r0, [sp]
   13d10:	movw	r1, #0
   13d14:	str	r1, [r0, #12]
   13d18:	add	sp, sp, #4
   13d1c:	bx	lr
   13d20:	push	{fp, lr}
   13d24:	mov	fp, sp
   13d28:	sub	sp, sp, #8
   13d2c:	str	r0, [sp, #4]
   13d30:	movw	r0, #1
   13d34:	movw	r1, #24
   13d38:	bl	1a9cc <__assert_fail@plt+0x969c>
   13d3c:	str	r0, [sp]
   13d40:	ldr	r0, [sp]
   13d44:	ldr	r1, [sp, #4]
   13d48:	str	r0, [r1]
   13d4c:	ldr	r0, [sp]
   13d50:	mov	sp, fp
   13d54:	pop	{fp, pc}
   13d58:	push	{fp, lr}
   13d5c:	mov	fp, sp
   13d60:	sub	sp, sp, #32
   13d64:	str	r0, [fp, #-4]
   13d68:	ldr	r0, [fp, #-4]
   13d6c:	ldr	r0, [r0, #8]
   13d70:	str	r0, [fp, #-8]
   13d74:	ldr	r0, [fp, #-8]
   13d78:	ldr	r1, [fp, #-4]
   13d7c:	ldr	r1, [r1, #4]
   13d80:	add	r0, r0, r1
   13d84:	mvn	r1, #0
   13d88:	add	r0, r0, r1
   13d8c:	str	r0, [fp, #-12]
   13d90:	ldr	r0, [fp, #-8]
   13d94:	ldr	r1, [fp, #-12]
   13d98:	cmp	r0, r1
   13d9c:	bne	13da4 <__assert_fail@plt+0x2a74>
   13da0:	b	13f90 <__assert_fail@plt+0x2c60>
   13da4:	movw	r0, #12560	; 0x3110
   13da8:	movt	r0, #3
   13dac:	ldr	r0, [r0]
   13db0:	movw	r1, #0
   13db4:	cmp	r1, r0
   13db8:	bgt	13e30 <__assert_fail@plt+0x2b00>
   13dbc:	movw	r0, #12560	; 0x3110
   13dc0:	movt	r0, #3
   13dc4:	ldr	r0, [r0]
   13dc8:	cmp	r0, #10
   13dcc:	beq	13e30 <__assert_fail@plt+0x2b00>
   13dd0:	b	13dd4 <__assert_fail@plt+0x2aa4>
   13dd4:	ldr	r0, [fp, #-8]
   13dd8:	movw	r1, #12560	; 0x3110
   13ddc:	movt	r1, #3
   13de0:	ldr	r1, [r1]
   13de4:	ldr	r2, [fp, #-12]
   13de8:	ldr	r3, [fp, #-8]
   13dec:	sub	r2, r2, r3
   13df0:	bl	11264 <memchr@plt>
   13df4:	str	r0, [sp, #16]
   13df8:	movw	r1, #0
   13dfc:	cmp	r0, r1
   13e00:	beq	13e2c <__assert_fail@plt+0x2afc>
   13e04:	ldr	r0, [fp, #-4]
   13e08:	ldr	r1, [fp, #-8]
   13e0c:	ldr	r2, [sp, #16]
   13e10:	ldr	r3, [fp, #-8]
   13e14:	sub	r2, r2, r3
   13e18:	bl	14190 <__assert_fail@plt+0x2e60>
   13e1c:	ldr	r0, [sp, #16]
   13e20:	add	r0, r0, #1
   13e24:	str	r0, [fp, #-8]
   13e28:	b	13dd4 <__assert_fail@plt+0x2aa4>
   13e2c:	b	13f78 <__assert_fail@plt+0x2c48>
   13e30:	movw	r0, #12560	; 0x3110
   13e34:	movt	r0, #3
   13e38:	ldr	r0, [r0]
   13e3c:	cmp	r0, #0
   13e40:	bge	13f74 <__assert_fail@plt+0x2c44>
   13e44:	b	13e48 <__assert_fail@plt+0x2b18>
   13e48:	ldr	r0, [fp, #-8]
   13e4c:	ldrb	r0, [r0]
   13e50:	bl	14224 <__assert_fail@plt+0x2ef4>
   13e54:	tst	r0, #1
   13e58:	beq	13e7c <__assert_fail@plt+0x2b4c>
   13e5c:	ldr	r0, [fp, #-8]
   13e60:	add	r0, r0, #1
   13e64:	str	r0, [fp, #-8]
   13e68:	ldr	r1, [fp, #-12]
   13e6c:	cmp	r0, r1
   13e70:	bne	13e78 <__assert_fail@plt+0x2b48>
   13e74:	b	13f90 <__assert_fail@plt+0x2c60>
   13e78:	b	13e48 <__assert_fail@plt+0x2b18>
   13e7c:	b	13e80 <__assert_fail@plt+0x2b50>
   13e80:	ldr	r0, [fp, #-8]
   13e84:	add	r0, r0, #1
   13e88:	str	r0, [sp, #12]
   13e8c:	ldr	r0, [sp, #12]
   13e90:	ldr	r1, [fp, #-12]
   13e94:	cmp	r0, r1
   13e98:	movw	r0, #0
   13e9c:	str	r0, [sp, #8]
   13ea0:	beq	13ebc <__assert_fail@plt+0x2b8c>
   13ea4:	ldr	r0, [sp, #12]
   13ea8:	ldrb	r0, [r0]
   13eac:	bl	14224 <__assert_fail@plt+0x2ef4>
   13eb0:	mvn	r1, #0
   13eb4:	eor	r0, r0, r1
   13eb8:	str	r0, [sp, #8]
   13ebc:	ldr	r0, [sp, #8]
   13ec0:	tst	r0, #1
   13ec4:	beq	13edc <__assert_fail@plt+0x2bac>
   13ec8:	b	13ecc <__assert_fail@plt+0x2b9c>
   13ecc:	ldr	r0, [sp, #12]
   13ed0:	add	r0, r0, #1
   13ed4:	str	r0, [sp, #12]
   13ed8:	b	13e8c <__assert_fail@plt+0x2b5c>
   13edc:	ldr	r0, [fp, #-4]
   13ee0:	ldr	r1, [fp, #-8]
   13ee4:	ldr	r2, [sp, #12]
   13ee8:	ldr	r3, [fp, #-8]
   13eec:	sub	r2, r2, r3
   13ef0:	bl	14190 <__assert_fail@plt+0x2e60>
   13ef4:	ldr	r0, [sp, #12]
   13ef8:	ldr	r1, [fp, #-12]
   13efc:	cmp	r0, r1
   13f00:	bne	13f08 <__assert_fail@plt+0x2bd8>
   13f04:	b	13f90 <__assert_fail@plt+0x2c60>
   13f08:	ldr	r0, [sp, #12]
   13f0c:	add	r0, r0, #1
   13f10:	str	r0, [fp, #-8]
   13f14:	ldr	r0, [fp, #-8]
   13f18:	ldr	r1, [fp, #-12]
   13f1c:	cmp	r0, r1
   13f20:	movw	r0, #0
   13f24:	str	r0, [sp, #4]
   13f28:	beq	13f3c <__assert_fail@plt+0x2c0c>
   13f2c:	ldr	r0, [fp, #-8]
   13f30:	ldrb	r0, [r0]
   13f34:	bl	14224 <__assert_fail@plt+0x2ef4>
   13f38:	str	r0, [sp, #4]
   13f3c:	ldr	r0, [sp, #4]
   13f40:	tst	r0, #1
   13f44:	beq	13f5c <__assert_fail@plt+0x2c2c>
   13f48:	b	13f4c <__assert_fail@plt+0x2c1c>
   13f4c:	ldr	r0, [fp, #-8]
   13f50:	add	r0, r0, #1
   13f54:	str	r0, [fp, #-8]
   13f58:	b	13f14 <__assert_fail@plt+0x2be4>
   13f5c:	b	13f60 <__assert_fail@plt+0x2c30>
   13f60:	ldr	r0, [fp, #-8]
   13f64:	ldr	r1, [fp, #-12]
   13f68:	cmp	r0, r1
   13f6c:	bne	13e80 <__assert_fail@plt+0x2b50>
   13f70:	b	13f74 <__assert_fail@plt+0x2c44>
   13f74:	b	13f78 <__assert_fail@plt+0x2c48>
   13f78:	ldr	r0, [fp, #-4]
   13f7c:	ldr	r1, [fp, #-8]
   13f80:	ldr	r2, [fp, #-12]
   13f84:	ldr	r3, [fp, #-8]
   13f88:	sub	r2, r2, r3
   13f8c:	bl	14190 <__assert_fail@plt+0x2e60>
   13f90:	mov	sp, fp
   13f94:	pop	{fp, pc}
   13f98:	push	{r4, sl, fp, lr}
   13f9c:	add	fp, sp, #8
   13fa0:	sub	sp, sp, #56	; 0x38
   13fa4:	str	r0, [fp, #-12]
   13fa8:	str	r1, [fp, #-16]
   13fac:	str	r2, [fp, #-20]	; 0xffffffec
   13fb0:	movw	r0, #12696	; 0x3198
   13fb4:	movt	r0, #3
   13fb8:	ldr	r0, [r0]
   13fbc:	cmp	r0, #2
   13fc0:	beq	14184 <__assert_fail@plt+0x2e54>
   13fc4:	movw	r0, #12696	; 0x3198
   13fc8:	movt	r0, #3
   13fcc:	ldr	r0, [r0]
   13fd0:	cmp	r0, #1
   13fd4:	beq	13fec <__assert_fail@plt+0x2cbc>
   13fd8:	movw	r0, #12690	; 0x3192
   13fdc:	movt	r0, #3
   13fe0:	ldrb	r0, [r0]
   13fe4:	tst	r0, #1
   13fe8:	beq	14184 <__assert_fail@plt+0x2e54>
   13fec:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ff0:	sub	r0, r0, #1
   13ff4:	movw	r1, #12691	; 0x3193
   13ff8:	movt	r1, #3
   13ffc:	add	r0, r1, r0
   14000:	ldrb	r0, [r0]
   14004:	tst	r0, #1
   14008:	bne	14180 <__assert_fail@plt+0x2e50>
   1400c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14010:	cmp	r0, #1
   14014:	bne	1402c <__assert_fail@plt+0x2cfc>
   14018:	movw	r0, #12552	; 0x3108
   1401c:	movt	r0, #3
   14020:	ldr	r0, [r0]
   14024:	str	r0, [sp, #32]
   14028:	b	1403c <__assert_fail@plt+0x2d0c>
   1402c:	movw	r0, #12556	; 0x310c
   14030:	movt	r0, #3
   14034:	ldr	r0, [r0]
   14038:	str	r0, [sp, #32]
   1403c:	ldr	r0, [sp, #32]
   14040:	str	r0, [fp, #-24]	; 0xffffffe8
   14044:	ldr	r0, [fp, #-12]
   14048:	ldr	r1, [fp, #-16]
   1404c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14050:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14054:	bl	1360c <__assert_fail@plt+0x22dc>
   14058:	cmp	r0, #0
   1405c:	ble	1417c <__assert_fail@plt+0x2e4c>
   14060:	ldr	r0, [fp, #-16]
   14064:	ldr	r0, [r0, #4]
   14068:	str	r0, [fp, #-28]	; 0xffffffe4
   1406c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14070:	movw	r1, #0
   14074:	cmp	r1, r0
   14078:	bcs	140ac <__assert_fail@plt+0x2d7c>
   1407c:	ldr	r0, [fp, #-16]
   14080:	ldr	r0, [r0, #8]
   14084:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14088:	sub	r1, r1, #1
   1408c:	add	r0, r0, r1
   14090:	ldrb	r0, [r0]
   14094:	cmp	r0, #10
   14098:	bne	140ac <__assert_fail@plt+0x2d7c>
   1409c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   140a0:	mvn	r1, #0
   140a4:	add	r0, r0, r1
   140a8:	str	r0, [fp, #-28]	; 0xffffffe4
   140ac:	ldr	r0, [pc, #216]	; 1418c <__assert_fail@plt+0x2e5c>
   140b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   140b4:	cmp	r0, r1
   140b8:	bcs	140c8 <__assert_fail@plt+0x2d98>
   140bc:	ldr	r0, [pc, #200]	; 1418c <__assert_fail@plt+0x2e5c>
   140c0:	str	r0, [sp, #28]
   140c4:	b	140d0 <__assert_fail@plt+0x2da0>
   140c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   140cc:	str	r0, [sp, #28]
   140d0:	ldr	r0, [sp, #28]
   140d4:	str	r0, [fp, #-28]	; 0xffffffe4
   140d8:	movw	r0, #12696	; 0x3198
   140dc:	movt	r0, #3
   140e0:	ldr	r0, [r0]
   140e4:	sub	r0, r0, #1
   140e8:	clz	r0, r0
   140ec:	lsr	r0, r0, #5
   140f0:	movw	r1, #7940	; 0x1f04
   140f4:	movt	r1, #2
   140f8:	str	r0, [sp, #24]
   140fc:	mov	r0, r1
   14100:	bl	111ec <gettext@plt>
   14104:	ldr	r1, [fp, #-20]	; 0xffffffec
   14108:	sub	r1, r1, #1
   1410c:	movw	r2, #12712	; 0x31a8
   14110:	movt	r2, #3
   14114:	ldr	r3, [r2, r1, lsl #2]
   14118:	movw	r2, #12784	; 0x31f0
   1411c:	movt	r2, #3
   14120:	ldr	r1, [r2, r1, lsl #3]!
   14124:	ldr	r2, [r2, #4]
   14128:	ldr	ip, [fp, #-28]	; 0xffffffe4
   1412c:	ldr	lr, [fp, #-16]
   14130:	ldr	lr, [lr, #8]
   14134:	mov	r4, sp
   14138:	str	lr, [r4, #12]
   1413c:	str	ip, [r4, #8]
   14140:	str	r2, [r4, #4]
   14144:	str	r1, [r4]
   14148:	mov	r1, #0
   1414c:	ldr	r2, [sp, #24]
   14150:	str	r0, [sp, #20]
   14154:	mov	r0, r2
   14158:	ldr	r2, [sp, #20]
   1415c:	bl	11180 <error@plt>
   14160:	ldr	r0, [fp, #-20]	; 0xffffffec
   14164:	sub	r0, r0, #1
   14168:	movw	r1, #12691	; 0x3193
   1416c:	movt	r1, #3
   14170:	add	r0, r1, r0
   14174:	movw	r1, #1
   14178:	strb	r1, [r0]
   1417c:	b	14180 <__assert_fail@plt+0x2e50>
   14180:	b	14184 <__assert_fail@plt+0x2e54>
   14184:	sub	sp, fp, #8
   14188:	pop	{r4, sl, fp, pc}
   1418c:	svcvc	0x00ffffff
   14190:	push	{fp, lr}
   14194:	mov	fp, sp
   14198:	sub	sp, sp, #16
   1419c:	str	r0, [fp, #-4]
   141a0:	str	r1, [sp, #8]
   141a4:	str	r2, [sp, #4]
   141a8:	ldr	r0, [fp, #-4]
   141ac:	ldr	r0, [r0, #12]
   141b0:	ldr	r1, [fp, #-4]
   141b4:	ldr	r1, [r1, #16]
   141b8:	cmp	r0, r1
   141bc:	bcc	141e0 <__assert_fail@plt+0x2eb0>
   141c0:	ldr	r0, [fp, #-4]
   141c4:	ldr	r0, [r0, #20]
   141c8:	ldr	r1, [fp, #-4]
   141cc:	add	r1, r1, #16
   141d0:	movw	r2, #8
   141d4:	bl	17fec <__assert_fail@plt+0x6cbc>
   141d8:	ldr	r1, [fp, #-4]
   141dc:	str	r0, [r1, #20]
   141e0:	ldr	r0, [sp, #8]
   141e4:	ldr	r1, [fp, #-4]
   141e8:	ldr	r2, [r1, #12]
   141ec:	ldr	r1, [r1, #20]
   141f0:	str	r0, [r1, r2, lsl #3]
   141f4:	ldr	r0, [sp, #4]
   141f8:	ldr	r1, [fp, #-4]
   141fc:	ldr	r2, [r1, #12]
   14200:	ldr	r1, [r1, #20]
   14204:	add	r1, r1, r2, lsl #3
   14208:	str	r0, [r1, #4]
   1420c:	ldr	r0, [fp, #-4]
   14210:	ldr	r1, [r0, #12]
   14214:	add	r1, r1, #1
   14218:	str	r1, [r0, #12]
   1421c:	mov	sp, fp
   14220:	pop	{fp, pc}
   14224:	push	{fp, lr}
   14228:	mov	fp, sp
   1422c:	sub	sp, sp, #8
   14230:	strb	r0, [fp, #-1]
   14234:	bl	111d4 <__ctype_b_loc@plt>
   14238:	ldr	r0, [r0]
   1423c:	ldrb	r1, [fp, #-1]
   14240:	mov	r2, r1
   14244:	add	r0, r0, r1, lsl #1
   14248:	ldrh	r0, [r0]
   1424c:	and	r0, r0, #1
   14250:	cmp	r0, #0
   14254:	movw	r0, #1
   14258:	str	r0, [sp]
   1425c:	bne	14274 <__assert_fail@plt+0x2f44>
   14260:	ldrb	r0, [fp, #-1]
   14264:	cmp	r0, #10
   14268:	movw	r0, #0
   1426c:	moveq	r0, #1
   14270:	str	r0, [sp]
   14274:	ldr	r0, [sp]
   14278:	and	r0, r0, #1
   1427c:	mov	sp, fp
   14280:	pop	{fp, pc}
   14284:	sub	sp, sp, #4
   14288:	str	r0, [sp]
   1428c:	ldr	r0, [sp]
   14290:	movw	r1, #12800	; 0x3200
   14294:	movt	r1, #3
   14298:	str	r0, [r1]
   1429c:	add	sp, sp, #4
   142a0:	bx	lr
   142a4:	sub	sp, sp, #4
   142a8:	and	r0, r0, #1
   142ac:	strb	r0, [sp, #3]
   142b0:	ldrb	r0, [sp, #3]
   142b4:	and	r0, r0, #1
   142b8:	movw	r1, #12804	; 0x3204
   142bc:	movt	r1, #3
   142c0:	strb	r0, [r1]
   142c4:	add	sp, sp, #4
   142c8:	bx	lr
   142cc:	push	{fp, lr}
   142d0:	mov	fp, sp
   142d4:	sub	sp, sp, #24
   142d8:	movw	r0, #12676	; 0x3184
   142dc:	movt	r0, #3
   142e0:	ldr	r0, [r0]
   142e4:	bl	1ec04 <__assert_fail@plt+0xd8d4>
   142e8:	cmp	r0, #0
   142ec:	beq	143bc <__assert_fail@plt+0x308c>
   142f0:	movw	r0, #12804	; 0x3204
   142f4:	movt	r0, #3
   142f8:	ldrb	r0, [r0]
   142fc:	tst	r0, #1
   14300:	beq	14314 <__assert_fail@plt+0x2fe4>
   14304:	bl	11228 <__errno_location@plt>
   14308:	ldr	r0, [r0]
   1430c:	cmp	r0, #32
   14310:	beq	143bc <__assert_fail@plt+0x308c>
   14314:	movw	r0, #8171	; 0x1feb
   14318:	movt	r0, #2
   1431c:	bl	111ec <gettext@plt>
   14320:	str	r0, [fp, #-4]
   14324:	movw	r0, #12800	; 0x3200
   14328:	movt	r0, #3
   1432c:	ldr	r0, [r0]
   14330:	movw	r1, #0
   14334:	cmp	r0, r1
   14338:	beq	14390 <__assert_fail@plt+0x3060>
   1433c:	bl	11228 <__errno_location@plt>
   14340:	ldr	r1, [r0]
   14344:	movw	r0, #12800	; 0x3200
   14348:	movt	r0, #3
   1434c:	ldr	r0, [r0]
   14350:	str	r1, [fp, #-8]
   14354:	bl	16fec <__assert_fail@plt+0x5cbc>
   14358:	ldr	r1, [fp, #-4]
   1435c:	movw	r2, #0
   14360:	str	r0, [sp, #12]
   14364:	mov	r0, r2
   14368:	ldr	r2, [fp, #-8]
   1436c:	str	r1, [sp, #8]
   14370:	mov	r1, r2
   14374:	movw	r2, #8183	; 0x1ff7
   14378:	movt	r2, #2
   1437c:	ldr	r3, [sp, #12]
   14380:	ldr	ip, [sp, #8]
   14384:	str	ip, [sp]
   14388:	bl	11180 <error@plt>
   1438c:	b	143ac <__assert_fail@plt+0x307c>
   14390:	bl	11228 <__errno_location@plt>
   14394:	ldr	r1, [r0]
   14398:	ldr	r3, [fp, #-4]
   1439c:	movw	r0, #0
   143a0:	movw	r2, #7810	; 0x1e82
   143a4:	movt	r2, #2
   143a8:	bl	11180 <error@plt>
   143ac:	movw	r0, #12576	; 0x3120
   143b0:	movt	r0, #3
   143b4:	ldr	r0, [r0]
   143b8:	bl	110d8 <_exit@plt>
   143bc:	movw	r0, #12664	; 0x3178
   143c0:	movt	r0, #3
   143c4:	ldr	r0, [r0]
   143c8:	bl	1ec04 <__assert_fail@plt+0xd8d4>
   143cc:	cmp	r0, #0
   143d0:	beq	143e4 <__assert_fail@plt+0x30b4>
   143d4:	movw	r0, #12576	; 0x3120
   143d8:	movt	r0, #3
   143dc:	ldr	r0, [r0]
   143e0:	bl	110d8 <_exit@plt>
   143e4:	mov	sp, fp
   143e8:	pop	{fp, pc}
   143ec:	push	{r4, r5, fp, lr}
   143f0:	add	fp, sp, #8
   143f4:	sub	sp, sp, #40	; 0x28
   143f8:	ldr	r1, [fp, #12]
   143fc:	ldr	ip, [fp, #8]
   14400:	ldr	lr, [fp, #16]
   14404:	str	r0, [fp, #-12]
   14408:	str	r3, [sp, #28]
   1440c:	str	r2, [sp, #24]
   14410:	str	r1, [sp, #20]
   14414:	str	ip, [sp, #16]
   14418:	ldr	r0, [fp, #-12]
   1441c:	ldr	r2, [sp, #24]
   14420:	ldr	r3, [sp, #28]
   14424:	ldr	r1, [sp, #16]
   14428:	ldr	ip, [sp, #20]
   1442c:	ldr	r4, [fp, #16]
   14430:	mov	r5, sp
   14434:	str	r4, [r5, #8]
   14438:	str	ip, [r5, #4]
   1443c:	str	r1, [r5]
   14440:	str	lr, [sp, #12]
   14444:	bl	110a8 <posix_fadvise64@plt>
   14448:	sub	sp, fp, #8
   1444c:	pop	{r4, r5, fp, pc}
   14450:	push	{fp, lr}
   14454:	mov	fp, sp
   14458:	sub	sp, sp, #24
   1445c:	str	r0, [fp, #-4]
   14460:	str	r1, [fp, #-8]
   14464:	ldr	r0, [fp, #-4]
   14468:	movw	r1, #0
   1446c:	cmp	r0, r1
   14470:	beq	144a0 <__assert_fail@plt+0x3170>
   14474:	ldr	r0, [fp, #-4]
   14478:	bl	1124c <fileno@plt>
   1447c:	ldr	r1, [fp, #-8]
   14480:	mov	r2, sp
   14484:	str	r1, [r2, #8]
   14488:	mov	r1, #0
   1448c:	str	r1, [r2, #4]
   14490:	str	r1, [r2]
   14494:	mov	r2, r1
   14498:	mov	r3, r1
   1449c:	bl	143ec <__assert_fail@plt+0x30bc>
   144a0:	mov	sp, fp
   144a4:	pop	{fp, pc}
   144a8:	push	{fp, lr}
   144ac:	mov	fp, sp
   144b0:	sub	sp, sp, #32
   144b4:	str	r0, [fp, #-8]
   144b8:	movw	r0, #0
   144bc:	str	r0, [fp, #-12]
   144c0:	str	r0, [sp, #12]
   144c4:	ldr	r0, [fp, #-8]
   144c8:	bl	1124c <fileno@plt>
   144cc:	str	r0, [sp, #16]
   144d0:	ldr	r0, [sp, #16]
   144d4:	cmp	r0, #0
   144d8:	bge	144ec <__assert_fail@plt+0x31bc>
   144dc:	ldr	r0, [fp, #-8]
   144e0:	bl	11270 <fclose@plt>
   144e4:	str	r0, [fp, #-4]
   144e8:	b	14588 <__assert_fail@plt+0x3258>
   144ec:	ldr	r0, [fp, #-8]
   144f0:	bl	111b0 <__freading@plt>
   144f4:	cmp	r0, #0
   144f8:	beq	14530 <__assert_fail@plt+0x3200>
   144fc:	ldr	r0, [fp, #-8]
   14500:	bl	1124c <fileno@plt>
   14504:	mov	r1, sp
   14508:	mov	r2, #1
   1450c:	str	r2, [r1]
   14510:	mov	r1, #0
   14514:	mov	r2, r1
   14518:	mov	r3, r1
   1451c:	bl	11144 <lseek64@plt>
   14520:	and	r0, r0, r1
   14524:	cmn	r0, #1
   14528:	beq	1454c <__assert_fail@plt+0x321c>
   1452c:	b	14530 <__assert_fail@plt+0x3200>
   14530:	ldr	r0, [fp, #-8]
   14534:	bl	14594 <__assert_fail@plt+0x3264>
   14538:	cmp	r0, #0
   1453c:	beq	1454c <__assert_fail@plt+0x321c>
   14540:	bl	11228 <__errno_location@plt>
   14544:	ldr	r0, [r0]
   14548:	str	r0, [fp, #-12]
   1454c:	ldr	r0, [fp, #-8]
   14550:	bl	11270 <fclose@plt>
   14554:	str	r0, [sp, #12]
   14558:	ldr	r0, [fp, #-12]
   1455c:	cmp	r0, #0
   14560:	beq	14580 <__assert_fail@plt+0x3250>
   14564:	ldr	r0, [fp, #-12]
   14568:	str	r0, [sp, #8]
   1456c:	bl	11228 <__errno_location@plt>
   14570:	ldr	r1, [sp, #8]
   14574:	str	r1, [r0]
   14578:	mvn	r0, #0
   1457c:	str	r0, [sp, #12]
   14580:	ldr	r0, [sp, #12]
   14584:	str	r0, [fp, #-4]
   14588:	ldr	r0, [fp, #-4]
   1458c:	mov	sp, fp
   14590:	pop	{fp, pc}
   14594:	push	{fp, lr}
   14598:	mov	fp, sp
   1459c:	sub	sp, sp, #8
   145a0:	str	r0, [sp]
   145a4:	ldr	r0, [sp]
   145a8:	movw	r1, #0
   145ac:	cmp	r0, r1
   145b0:	beq	145c4 <__assert_fail@plt+0x3294>
   145b4:	ldr	r0, [sp]
   145b8:	bl	111b0 <__freading@plt>
   145bc:	cmp	r0, #0
   145c0:	bne	145d4 <__assert_fail@plt+0x32a4>
   145c4:	ldr	r0, [sp]
   145c8:	bl	110c0 <fflush@plt>
   145cc:	str	r0, [sp, #4]
   145d0:	b	145e8 <__assert_fail@plt+0x32b8>
   145d4:	ldr	r0, [sp]
   145d8:	bl	145f4 <__assert_fail@plt+0x32c4>
   145dc:	ldr	r0, [sp]
   145e0:	bl	110c0 <fflush@plt>
   145e4:	str	r0, [sp, #4]
   145e8:	ldr	r0, [sp, #4]
   145ec:	mov	sp, fp
   145f0:	pop	{fp, pc}
   145f4:	push	{fp, lr}
   145f8:	mov	fp, sp
   145fc:	sub	sp, sp, #8
   14600:	str	r0, [sp, #4]
   14604:	ldr	r0, [sp, #4]
   14608:	ldr	r0, [r0]
   1460c:	and	r0, r0, #256	; 0x100
   14610:	cmp	r0, #0
   14614:	beq	14638 <__assert_fail@plt+0x3308>
   14618:	ldr	r0, [sp, #4]
   1461c:	mov	r1, sp
   14620:	mov	r2, #1
   14624:	str	r2, [r1]
   14628:	mov	r1, #0
   1462c:	mov	r2, r1
   14630:	mov	r3, r1
   14634:	bl	147ac <__assert_fail@plt+0x347c>
   14638:	mov	sp, fp
   1463c:	pop	{fp, pc}
   14640:	push	{fp, lr}
   14644:	mov	fp, sp
   14648:	sub	sp, sp, #48	; 0x30
   1464c:	str	r0, [fp, #-8]
   14650:	str	r1, [fp, #-12]
   14654:	ldr	r0, [fp, #-8]
   14658:	ldr	r1, [fp, #-12]
   1465c:	bl	112c4 <fopen64@plt>
   14660:	str	r0, [fp, #-16]
   14664:	ldr	r0, [fp, #-16]
   14668:	movw	r1, #0
   1466c:	cmp	r0, r1
   14670:	beq	14758 <__assert_fail@plt+0x3428>
   14674:	ldr	r0, [fp, #-16]
   14678:	bl	1124c <fileno@plt>
   1467c:	str	r0, [fp, #-20]	; 0xffffffec
   14680:	ldr	r0, [fp, #-20]	; 0xffffffec
   14684:	movw	r1, #0
   14688:	cmp	r1, r0
   1468c:	bgt	14754 <__assert_fail@plt+0x3424>
   14690:	ldr	r0, [fp, #-20]	; 0xffffffec
   14694:	cmp	r0, #2
   14698:	bgt	14754 <__assert_fail@plt+0x3424>
   1469c:	ldr	r0, [fp, #-20]	; 0xffffffec
   146a0:	bl	1751c <__assert_fail@plt+0x61ec>
   146a4:	str	r0, [sp, #24]
   146a8:	ldr	r0, [sp, #24]
   146ac:	cmp	r0, #0
   146b0:	bge	146ec <__assert_fail@plt+0x33bc>
   146b4:	bl	11228 <__errno_location@plt>
   146b8:	ldr	r0, [r0]
   146bc:	str	r0, [sp, #20]
   146c0:	ldr	r0, [fp, #-16]
   146c4:	bl	144a8 <__assert_fail@plt+0x3178>
   146c8:	ldr	r1, [sp, #20]
   146cc:	str	r0, [sp, #12]
   146d0:	str	r1, [sp, #8]
   146d4:	bl	11228 <__errno_location@plt>
   146d8:	ldr	r1, [sp, #8]
   146dc:	str	r1, [r0]
   146e0:	movw	r0, #0
   146e4:	str	r0, [fp, #-4]
   146e8:	b	14760 <__assert_fail@plt+0x3430>
   146ec:	ldr	r0, [fp, #-16]
   146f0:	bl	144a8 <__assert_fail@plt+0x3178>
   146f4:	cmp	r0, #0
   146f8:	bne	14718 <__assert_fail@plt+0x33e8>
   146fc:	ldr	r0, [sp, #24]
   14700:	ldr	r1, [fp, #-12]
   14704:	bl	1106c <fdopen@plt>
   14708:	str	r0, [fp, #-16]
   1470c:	movw	r1, #0
   14710:	cmp	r0, r1
   14714:	bne	14750 <__assert_fail@plt+0x3420>
   14718:	bl	11228 <__errno_location@plt>
   1471c:	ldr	r0, [r0]
   14720:	str	r0, [sp, #16]
   14724:	ldr	r0, [sp, #24]
   14728:	bl	11318 <close@plt>
   1472c:	ldr	r1, [sp, #16]
   14730:	str	r0, [sp, #4]
   14734:	str	r1, [sp]
   14738:	bl	11228 <__errno_location@plt>
   1473c:	ldr	r1, [sp]
   14740:	str	r1, [r0]
   14744:	movw	r0, #0
   14748:	str	r0, [fp, #-4]
   1474c:	b	14760 <__assert_fail@plt+0x3430>
   14750:	b	14754 <__assert_fail@plt+0x3424>
   14754:	b	14758 <__assert_fail@plt+0x3428>
   14758:	ldr	r0, [fp, #-16]
   1475c:	str	r0, [fp, #-4]
   14760:	ldr	r0, [fp, #-4]
   14764:	mov	sp, fp
   14768:	pop	{fp, pc}
   1476c:	push	{fp, lr}
   14770:	mov	fp, sp
   14774:	sub	sp, sp, #16
   14778:	str	r0, [fp, #-4]
   1477c:	bl	11228 <__errno_location@plt>
   14780:	ldr	r0, [r0]
   14784:	str	r0, [sp, #8]
   14788:	ldr	r0, [fp, #-4]
   1478c:	bl	110cc <free@plt>
   14790:	ldr	r0, [sp, #8]
   14794:	str	r0, [sp, #4]
   14798:	bl	11228 <__errno_location@plt>
   1479c:	ldr	r1, [sp, #4]
   147a0:	str	r1, [r0]
   147a4:	mov	sp, fp
   147a8:	pop	{fp, pc}
   147ac:	push	{fp, lr}
   147b0:	mov	fp, sp
   147b4:	sub	sp, sp, #32
   147b8:	ldr	r1, [fp, #8]
   147bc:	str	r0, [fp, #-8]
   147c0:	str	r3, [sp, #20]
   147c4:	str	r2, [sp, #16]
   147c8:	ldr	r0, [fp, #-8]
   147cc:	ldr	r0, [r0, #8]
   147d0:	ldr	r2, [fp, #-8]
   147d4:	ldr	r2, [r2, #4]
   147d8:	cmp	r0, r2
   147dc:	bne	14888 <__assert_fail@plt+0x3558>
   147e0:	ldr	r0, [fp, #-8]
   147e4:	ldr	r0, [r0, #20]
   147e8:	ldr	r1, [fp, #-8]
   147ec:	ldr	r1, [r1, #16]
   147f0:	cmp	r0, r1
   147f4:	bne	14888 <__assert_fail@plt+0x3558>
   147f8:	ldr	r0, [fp, #-8]
   147fc:	ldr	r0, [r0, #36]	; 0x24
   14800:	movw	r1, #0
   14804:	cmp	r0, r1
   14808:	bne	14888 <__assert_fail@plt+0x3558>
   1480c:	ldr	r0, [fp, #-8]
   14810:	bl	1124c <fileno@plt>
   14814:	ldr	r2, [sp, #16]
   14818:	ldr	r3, [sp, #20]
   1481c:	ldr	r1, [fp, #8]
   14820:	mov	ip, sp
   14824:	str	r1, [ip]
   14828:	bl	11144 <lseek64@plt>
   1482c:	str	r1, [sp, #12]
   14830:	str	r0, [sp, #8]
   14834:	ldr	r0, [sp, #8]
   14838:	ldr	r1, [sp, #12]
   1483c:	and	r0, r0, r1
   14840:	cmn	r0, #1
   14844:	bne	14858 <__assert_fail@plt+0x3528>
   14848:	b	1484c <__assert_fail@plt+0x351c>
   1484c:	mvn	r0, #0
   14850:	str	r0, [fp, #-4]
   14854:	b	148a8 <__assert_fail@plt+0x3578>
   14858:	ldr	r0, [fp, #-8]
   1485c:	ldr	r1, [r0]
   14860:	bic	r1, r1, #16
   14864:	str	r1, [r0]
   14868:	ldr	r0, [sp, #8]
   1486c:	ldr	r1, [sp, #12]
   14870:	ldr	r2, [fp, #-8]
   14874:	str	r1, [r2, #84]	; 0x54
   14878:	str	r0, [r2, #80]	; 0x50
   1487c:	movw	r0, #0
   14880:	str	r0, [fp, #-4]
   14884:	b	148a8 <__assert_fail@plt+0x3578>
   14888:	ldr	r0, [fp, #-8]
   1488c:	ldr	r2, [sp, #16]
   14890:	ldr	r3, [sp, #20]
   14894:	ldr	r1, [fp, #8]
   14898:	mov	ip, sp
   1489c:	str	r1, [ip]
   148a0:	bl	1127c <fseeko64@plt>
   148a4:	str	r0, [fp, #-4]
   148a8:	ldr	r0, [fp, #-4]
   148ac:	mov	sp, fp
   148b0:	pop	{fp, pc}
   148b4:	push	{r4, r5, fp, lr}
   148b8:	add	fp, sp, #8
   148bc:	sub	sp, sp, #272	; 0x110
   148c0:	add	r1, sp, #7
   148c4:	str	r0, [fp, #-16]
   148c8:	ldr	r0, [fp, #-16]
   148cc:	movw	r2, #257	; 0x101
   148d0:	bl	173c0 <__assert_fail@plt+0x6090>
   148d4:	cmp	r0, #0
   148d8:	beq	148ec <__assert_fail@plt+0x35bc>
   148dc:	movw	r0, #0
   148e0:	and	r0, r0, #1
   148e4:	strb	r0, [fp, #-9]
   148e8:	b	14940 <__assert_fail@plt+0x3610>
   148ec:	add	r0, sp, #7
   148f0:	movw	r1, #8190	; 0x1ffe
   148f4:	movt	r1, #2
   148f8:	bl	1109c <strcmp@plt>
   148fc:	cmp	r0, #0
   14900:	movw	r0, #1
   14904:	str	r0, [sp]
   14908:	beq	1492c <__assert_fail@plt+0x35fc>
   1490c:	add	r0, sp, #7
   14910:	movw	r1, #8192	; 0x2000
   14914:	movt	r1, #2
   14918:	bl	1109c <strcmp@plt>
   1491c:	cmp	r0, #0
   14920:	movw	r0, #0
   14924:	moveq	r0, #1
   14928:	str	r0, [sp]
   1492c:	ldr	r0, [sp]
   14930:	mvn	r1, #0
   14934:	eor	r0, r0, r1
   14938:	and	r0, r0, #1
   1493c:	strb	r0, [fp, #-9]
   14940:	ldrb	r0, [fp, #-9]
   14944:	and	r0, r0, #1
   14948:	sub	sp, fp, #8
   1494c:	pop	{r4, r5, fp, pc}
   14950:	push	{fp, lr}
   14954:	mov	fp, sp
   14958:	sub	sp, sp, #8
   1495c:	str	r0, [sp, #4]
   14960:	ldr	r0, [sp, #4]
   14964:	movw	r1, #0
   14968:	and	r1, r1, #255	; 0xff
   1496c:	movw	r2, #12
   14970:	bl	11240 <memset@plt>
   14974:	mov	sp, fp
   14978:	pop	{fp, pc}
   1497c:	push	{fp, lr}
   14980:	mov	fp, sp
   14984:	sub	sp, sp, #8
   14988:	str	r0, [sp, #4]
   1498c:	str	r1, [sp]
   14990:	ldr	r0, [sp, #4]
   14994:	ldr	r1, [sp]
   14998:	movw	r2, #10
   1499c:	and	r2, r2, #255	; 0xff
   149a0:	bl	149ac <__assert_fail@plt+0x367c>
   149a4:	mov	sp, fp
   149a8:	pop	{fp, pc}
   149ac:	push	{fp, lr}
   149b0:	mov	fp, sp
   149b4:	sub	sp, sp, #48	; 0x30
   149b8:	str	r0, [fp, #-8]
   149bc:	str	r1, [fp, #-12]
   149c0:	strb	r2, [fp, #-13]
   149c4:	ldr	r0, [fp, #-8]
   149c8:	ldr	r0, [r0, #8]
   149cc:	str	r0, [sp, #24]
   149d0:	ldr	r0, [fp, #-8]
   149d4:	ldr	r0, [r0, #8]
   149d8:	str	r0, [sp, #20]
   149dc:	ldr	r0, [sp, #24]
   149e0:	ldr	r1, [fp, #-8]
   149e4:	ldr	r1, [r1]
   149e8:	add	r0, r0, r1
   149ec:	str	r0, [sp, #16]
   149f0:	ldr	r0, [fp, #-12]
   149f4:	bl	1130c <feof_unlocked@plt>
   149f8:	cmp	r0, #0
   149fc:	beq	14a0c <__assert_fail@plt+0x36dc>
   14a00:	movw	r0, #0
   14a04:	str	r0, [fp, #-4]
   14a08:	b	14b2c <__assert_fail@plt+0x37fc>
   14a0c:	b	14a10 <__assert_fail@plt+0x36e0>
   14a10:	ldr	r0, [fp, #-12]
   14a14:	bl	11114 <getc_unlocked@plt>
   14a18:	str	r0, [fp, #-20]	; 0xffffffec
   14a1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a20:	cmn	r0, #1
   14a24:	bne	14a7c <__assert_fail@plt+0x374c>
   14a28:	ldr	r0, [sp, #20]
   14a2c:	ldr	r1, [sp, #24]
   14a30:	cmp	r0, r1
   14a34:	beq	14a48 <__assert_fail@plt+0x3718>
   14a38:	ldr	r0, [fp, #-12]
   14a3c:	bl	11168 <ferror_unlocked@plt>
   14a40:	cmp	r0, #0
   14a44:	beq	14a54 <__assert_fail@plt+0x3724>
   14a48:	movw	r0, #0
   14a4c:	str	r0, [fp, #-4]
   14a50:	b	14b2c <__assert_fail@plt+0x37fc>
   14a54:	ldr	r0, [sp, #20]
   14a58:	mvn	r1, #0
   14a5c:	add	r0, r0, r1
   14a60:	ldrb	r0, [r0]
   14a64:	ldrb	r1, [fp, #-13]
   14a68:	cmp	r0, r1
   14a6c:	bne	14a74 <__assert_fail@plt+0x3744>
   14a70:	b	14b10 <__assert_fail@plt+0x37e0>
   14a74:	ldrb	r0, [fp, #-13]
   14a78:	str	r0, [fp, #-20]	; 0xffffffec
   14a7c:	ldr	r0, [sp, #20]
   14a80:	ldr	r1, [sp, #16]
   14a84:	cmp	r0, r1
   14a88:	bne	14aec <__assert_fail@plt+0x37bc>
   14a8c:	ldr	r0, [fp, #-8]
   14a90:	ldr	r0, [r0]
   14a94:	str	r0, [sp, #12]
   14a98:	ldr	r0, [sp, #24]
   14a9c:	ldr	r1, [fp, #-8]
   14aa0:	movw	r2, #1
   14aa4:	str	r2, [sp, #8]
   14aa8:	mvn	r3, #0
   14aac:	ldr	ip, [sp, #8]
   14ab0:	str	ip, [sp]
   14ab4:	bl	180c4 <__assert_fail@plt+0x6d94>
   14ab8:	str	r0, [sp, #24]
   14abc:	ldr	r0, [sp, #24]
   14ac0:	ldr	r1, [sp, #12]
   14ac4:	add	r0, r0, r1
   14ac8:	str	r0, [sp, #20]
   14acc:	ldr	r0, [sp, #24]
   14ad0:	ldr	r1, [fp, #-8]
   14ad4:	str	r0, [r1, #8]
   14ad8:	ldr	r0, [sp, #24]
   14adc:	ldr	r1, [fp, #-8]
   14ae0:	ldr	r1, [r1]
   14ae4:	add	r0, r0, r1
   14ae8:	str	r0, [sp, #16]
   14aec:	ldr	r0, [fp, #-20]	; 0xffffffec
   14af0:	ldr	r1, [sp, #20]
   14af4:	add	r2, r1, #1
   14af8:	str	r2, [sp, #20]
   14afc:	strb	r0, [r1]
   14b00:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b04:	ldrb	r1, [fp, #-13]
   14b08:	cmp	r0, r1
   14b0c:	bne	14a10 <__assert_fail@plt+0x36e0>
   14b10:	ldr	r0, [sp, #20]
   14b14:	ldr	r1, [sp, #24]
   14b18:	sub	r0, r0, r1
   14b1c:	ldr	r1, [fp, #-8]
   14b20:	str	r0, [r1, #4]
   14b24:	ldr	r0, [fp, #-8]
   14b28:	str	r0, [fp, #-4]
   14b2c:	ldr	r0, [fp, #-4]
   14b30:	mov	sp, fp
   14b34:	pop	{fp, pc}
   14b38:	push	{fp, lr}
   14b3c:	mov	fp, sp
   14b40:	sub	sp, sp, #8
   14b44:	str	r0, [sp, #4]
   14b48:	ldr	r0, [sp, #4]
   14b4c:	ldr	r0, [r0, #8]
   14b50:	bl	1476c <__assert_fail@plt+0x343c>
   14b54:	mov	sp, fp
   14b58:	pop	{fp, pc}
   14b5c:	push	{fp, lr}
   14b60:	mov	fp, sp
   14b64:	sub	sp, sp, #48	; 0x30
   14b68:	str	r0, [fp, #-8]
   14b6c:	str	r1, [fp, #-12]
   14b70:	str	r2, [fp, #-16]
   14b74:	ldr	r0, [fp, #-8]
   14b78:	str	r0, [sp, #24]
   14b7c:	ldr	r0, [fp, #-12]
   14b80:	str	r0, [sp, #20]
   14b84:	movw	r0, #0
   14b88:	str	r0, [fp, #-20]	; 0xffffffec
   14b8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b90:	ldr	r1, [fp, #-16]
   14b94:	cmp	r0, r1
   14b98:	bcs	14c18 <__assert_fail@plt+0x38e8>
   14b9c:	ldr	r0, [sp, #24]
   14ba0:	ldr	r1, [fp, #-20]	; 0xffffffec
   14ba4:	add	r0, r0, r1
   14ba8:	ldrb	r0, [r0]
   14bac:	strb	r0, [sp, #19]
   14bb0:	ldr	r0, [sp, #20]
   14bb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   14bb8:	add	r0, r0, r1
   14bbc:	ldrb	r0, [r0]
   14bc0:	strb	r0, [sp, #18]
   14bc4:	ldrb	r0, [sp, #19]
   14bc8:	bl	112a0 <toupper@plt>
   14bcc:	str	r0, [sp, #12]
   14bd0:	ldrb	r0, [sp, #18]
   14bd4:	bl	112a0 <toupper@plt>
   14bd8:	str	r0, [sp, #8]
   14bdc:	ldr	r0, [sp, #12]
   14be0:	ldr	r1, [sp, #8]
   14be4:	sub	r0, r0, r1
   14be8:	str	r0, [sp, #4]
   14bec:	ldr	r0, [sp, #4]
   14bf0:	cmp	r0, #0
   14bf4:	beq	14c04 <__assert_fail@plt+0x38d4>
   14bf8:	ldr	r0, [sp, #4]
   14bfc:	str	r0, [fp, #-4]
   14c00:	b	14c20 <__assert_fail@plt+0x38f0>
   14c04:	b	14c08 <__assert_fail@plt+0x38d8>
   14c08:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c0c:	add	r0, r0, #1
   14c10:	str	r0, [fp, #-20]	; 0xffffffec
   14c14:	b	14b8c <__assert_fail@plt+0x385c>
   14c18:	movw	r0, #0
   14c1c:	str	r0, [fp, #-4]
   14c20:	ldr	r0, [fp, #-4]
   14c24:	mov	sp, fp
   14c28:	pop	{fp, pc}
   14c2c:	push	{fp, lr}
   14c30:	mov	fp, sp
   14c34:	sub	sp, sp, #24
   14c38:	str	r0, [fp, #-4]
   14c3c:	ldr	r0, [fp, #-4]
   14c40:	movw	r1, #0
   14c44:	cmp	r0, r1
   14c48:	bne	14c6c <__assert_fail@plt+0x393c>
   14c4c:	movw	r0, #12664	; 0x3178
   14c50:	movt	r0, #3
   14c54:	ldr	r1, [r0]
   14c58:	movw	r0, #8198	; 0x2006
   14c5c:	movt	r0, #2
   14c60:	bl	112e8 <fputs@plt>
   14c64:	str	r0, [sp, #8]
   14c68:	bl	11300 <abort@plt>
   14c6c:	ldr	r0, [fp, #-4]
   14c70:	movw	r1, #47	; 0x2f
   14c74:	bl	112ac <strrchr@plt>
   14c78:	str	r0, [fp, #-8]
   14c7c:	ldr	r0, [fp, #-8]
   14c80:	movw	r1, #0
   14c84:	cmp	r0, r1
   14c88:	beq	14c9c <__assert_fail@plt+0x396c>
   14c8c:	ldr	r0, [fp, #-8]
   14c90:	add	r0, r0, #1
   14c94:	str	r0, [sp, #4]
   14c98:	b	14ca4 <__assert_fail@plt+0x3974>
   14c9c:	ldr	r0, [fp, #-4]
   14ca0:	str	r0, [sp, #4]
   14ca4:	ldr	r0, [sp, #4]
   14ca8:	str	r0, [sp, #12]
   14cac:	ldr	r0, [sp, #12]
   14cb0:	ldr	r1, [fp, #-4]
   14cb4:	sub	r0, r0, r1
   14cb8:	cmp	r0, #7
   14cbc:	blt	14d28 <__assert_fail@plt+0x39f8>
   14cc0:	ldr	r0, [sp, #12]
   14cc4:	mvn	r1, #6
   14cc8:	add	r0, r0, r1
   14ccc:	movw	r1, #8254	; 0x203e
   14cd0:	movt	r1, #2
   14cd4:	movw	r2, #7
   14cd8:	bl	112f4 <strncmp@plt>
   14cdc:	cmp	r0, #0
   14ce0:	bne	14d28 <__assert_fail@plt+0x39f8>
   14ce4:	ldr	r0, [sp, #12]
   14ce8:	str	r0, [fp, #-4]
   14cec:	ldr	r0, [sp, #12]
   14cf0:	movw	r1, #8262	; 0x2046
   14cf4:	movt	r1, #2
   14cf8:	movw	r2, #3
   14cfc:	bl	112f4 <strncmp@plt>
   14d00:	cmp	r0, #0
   14d04:	bne	14d24 <__assert_fail@plt+0x39f4>
   14d08:	ldr	r0, [sp, #12]
   14d0c:	add	r0, r0, #3
   14d10:	str	r0, [fp, #-4]
   14d14:	ldr	r0, [fp, #-4]
   14d18:	movw	r1, #12648	; 0x3168
   14d1c:	movt	r1, #3
   14d20:	str	r0, [r1]
   14d24:	b	14d28 <__assert_fail@plt+0x39f8>
   14d28:	ldr	r0, [fp, #-4]
   14d2c:	movw	r1, #12808	; 0x3208
   14d30:	movt	r1, #3
   14d34:	str	r0, [r1]
   14d38:	ldr	r0, [fp, #-4]
   14d3c:	movw	r1, #12652	; 0x316c
   14d40:	movt	r1, #3
   14d44:	str	r0, [r1]
   14d48:	mov	sp, fp
   14d4c:	pop	{fp, pc}
   14d50:	push	{fp, lr}
   14d54:	mov	fp, sp
   14d58:	sub	sp, sp, #24
   14d5c:	str	r0, [fp, #-4]
   14d60:	bl	11228 <__errno_location@plt>
   14d64:	ldr	r0, [r0]
   14d68:	str	r0, [fp, #-8]
   14d6c:	ldr	r0, [fp, #-4]
   14d70:	movw	r1, #0
   14d74:	cmp	r0, r1
   14d78:	beq	14d88 <__assert_fail@plt+0x3a58>
   14d7c:	ldr	r0, [fp, #-4]
   14d80:	str	r0, [sp, #8]
   14d84:	b	14d98 <__assert_fail@plt+0x3a68>
   14d88:	movw	r0, #12812	; 0x320c
   14d8c:	movt	r0, #3
   14d90:	str	r0, [sp, #8]
   14d94:	b	14d98 <__assert_fail@plt+0x3a68>
   14d98:	ldr	r0, [sp, #8]
   14d9c:	movw	r1, #48	; 0x30
   14da0:	bl	1aa48 <__assert_fail@plt+0x9718>
   14da4:	str	r0, [sp, #12]
   14da8:	ldr	r0, [fp, #-8]
   14dac:	str	r0, [sp, #4]
   14db0:	bl	11228 <__errno_location@plt>
   14db4:	ldr	r1, [sp, #4]
   14db8:	str	r1, [r0]
   14dbc:	ldr	r0, [sp, #12]
   14dc0:	mov	sp, fp
   14dc4:	pop	{fp, pc}
   14dc8:	sub	sp, sp, #8
   14dcc:	str	r0, [sp, #4]
   14dd0:	ldr	r0, [sp, #4]
   14dd4:	movw	r1, #0
   14dd8:	cmp	r0, r1
   14ddc:	beq	14dec <__assert_fail@plt+0x3abc>
   14de0:	ldr	r0, [sp, #4]
   14de4:	str	r0, [sp]
   14de8:	b	14dfc <__assert_fail@plt+0x3acc>
   14dec:	movw	r0, #12812	; 0x320c
   14df0:	movt	r0, #3
   14df4:	str	r0, [sp]
   14df8:	b	14dfc <__assert_fail@plt+0x3acc>
   14dfc:	ldr	r0, [sp]
   14e00:	ldr	r0, [r0]
   14e04:	add	sp, sp, #8
   14e08:	bx	lr
   14e0c:	sub	sp, sp, #16
   14e10:	str	r0, [sp, #12]
   14e14:	str	r1, [sp, #8]
   14e18:	ldr	r0, [sp, #8]
   14e1c:	ldr	r1, [sp, #12]
   14e20:	movw	r2, #0
   14e24:	cmp	r1, r2
   14e28:	str	r0, [sp, #4]
   14e2c:	beq	14e3c <__assert_fail@plt+0x3b0c>
   14e30:	ldr	r0, [sp, #12]
   14e34:	str	r0, [sp]
   14e38:	b	14e4c <__assert_fail@plt+0x3b1c>
   14e3c:	movw	r0, #12812	; 0x320c
   14e40:	movt	r0, #3
   14e44:	str	r0, [sp]
   14e48:	b	14e4c <__assert_fail@plt+0x3b1c>
   14e4c:	ldr	r0, [sp]
   14e50:	ldr	r1, [sp, #4]
   14e54:	str	r1, [r0]
   14e58:	add	sp, sp, #16
   14e5c:	bx	lr
   14e60:	sub	sp, sp, #32
   14e64:	str	r0, [sp, #28]
   14e68:	strb	r1, [sp, #27]
   14e6c:	str	r2, [sp, #20]
   14e70:	ldrb	r0, [sp, #27]
   14e74:	strb	r0, [sp, #19]
   14e78:	ldr	r0, [sp, #28]
   14e7c:	movw	r1, #0
   14e80:	cmp	r0, r1
   14e84:	beq	14e94 <__assert_fail@plt+0x3b64>
   14e88:	ldr	r0, [sp, #28]
   14e8c:	str	r0, [sp]
   14e90:	b	14ea4 <__assert_fail@plt+0x3b74>
   14e94:	movw	r0, #12812	; 0x320c
   14e98:	movt	r0, #3
   14e9c:	str	r0, [sp]
   14ea0:	b	14ea4 <__assert_fail@plt+0x3b74>
   14ea4:	ldr	r0, [sp]
   14ea8:	add	r0, r0, #8
   14eac:	ldrb	r1, [sp, #19]
   14eb0:	lsr	r1, r1, #5
   14eb4:	add	r0, r0, r1, lsl #2
   14eb8:	str	r0, [sp, #12]
   14ebc:	ldrb	r0, [sp, #19]
   14ec0:	and	r0, r0, #31
   14ec4:	str	r0, [sp, #8]
   14ec8:	ldr	r0, [sp, #12]
   14ecc:	ldr	r0, [r0]
   14ed0:	ldr	r1, [sp, #8]
   14ed4:	lsr	r0, r0, r1
   14ed8:	and	r0, r0, #1
   14edc:	str	r0, [sp, #4]
   14ee0:	ldr	r0, [sp, #20]
   14ee4:	and	r0, r0, #1
   14ee8:	ldr	r1, [sp, #4]
   14eec:	eor	r0, r0, r1
   14ef0:	ldr	r1, [sp, #8]
   14ef4:	lsl	r0, r0, r1
   14ef8:	ldr	r1, [sp, #12]
   14efc:	ldr	r2, [r1]
   14f00:	eor	r0, r2, r0
   14f04:	str	r0, [r1]
   14f08:	ldr	r0, [sp, #4]
   14f0c:	add	sp, sp, #32
   14f10:	bx	lr
   14f14:	sub	sp, sp, #12
   14f18:	str	r0, [sp, #8]
   14f1c:	str	r1, [sp, #4]
   14f20:	ldr	r0, [sp, #8]
   14f24:	movw	r1, #0
   14f28:	cmp	r0, r1
   14f2c:	bne	14f3c <__assert_fail@plt+0x3c0c>
   14f30:	movw	r0, #12812	; 0x320c
   14f34:	movt	r0, #3
   14f38:	str	r0, [sp, #8]
   14f3c:	ldr	r0, [sp, #8]
   14f40:	ldr	r0, [r0, #4]
   14f44:	str	r0, [sp]
   14f48:	ldr	r0, [sp, #4]
   14f4c:	ldr	r1, [sp, #8]
   14f50:	str	r0, [r1, #4]
   14f54:	ldr	r0, [sp]
   14f58:	add	sp, sp, #12
   14f5c:	bx	lr
   14f60:	push	{fp, lr}
   14f64:	mov	fp, sp
   14f68:	sub	sp, sp, #16
   14f6c:	str	r0, [fp, #-4]
   14f70:	str	r1, [sp, #8]
   14f74:	str	r2, [sp, #4]
   14f78:	ldr	r0, [fp, #-4]
   14f7c:	movw	r1, #0
   14f80:	cmp	r0, r1
   14f84:	bne	14f94 <__assert_fail@plt+0x3c64>
   14f88:	movw	r0, #12812	; 0x320c
   14f8c:	movt	r0, #3
   14f90:	str	r0, [fp, #-4]
   14f94:	ldr	r0, [fp, #-4]
   14f98:	movw	r1, #10
   14f9c:	str	r1, [r0]
   14fa0:	ldr	r0, [sp, #8]
   14fa4:	movw	r1, #0
   14fa8:	cmp	r0, r1
   14fac:	beq	14fc0 <__assert_fail@plt+0x3c90>
   14fb0:	ldr	r0, [sp, #4]
   14fb4:	movw	r1, #0
   14fb8:	cmp	r0, r1
   14fbc:	bne	14fc4 <__assert_fail@plt+0x3c94>
   14fc0:	bl	11300 <abort@plt>
   14fc4:	ldr	r0, [sp, #8]
   14fc8:	ldr	r1, [fp, #-4]
   14fcc:	str	r0, [r1, #40]	; 0x28
   14fd0:	ldr	r0, [sp, #4]
   14fd4:	ldr	r1, [fp, #-4]
   14fd8:	str	r0, [r1, #44]	; 0x2c
   14fdc:	mov	sp, fp
   14fe0:	pop	{fp, pc}
   14fe4:	push	{r4, r5, r6, sl, fp, lr}
   14fe8:	add	fp, sp, #16
   14fec:	sub	sp, sp, #56	; 0x38
   14ff0:	ldr	ip, [fp, #8]
   14ff4:	str	r0, [fp, #-20]	; 0xffffffec
   14ff8:	str	r1, [fp, #-24]	; 0xffffffe8
   14ffc:	str	r2, [fp, #-28]	; 0xffffffe4
   15000:	str	r3, [fp, #-32]	; 0xffffffe0
   15004:	ldr	r0, [fp, #8]
   15008:	movw	r1, #0
   1500c:	cmp	r0, r1
   15010:	beq	15020 <__assert_fail@plt+0x3cf0>
   15014:	ldr	r0, [fp, #8]
   15018:	str	r0, [sp, #24]
   1501c:	b	15030 <__assert_fail@plt+0x3d00>
   15020:	movw	r0, #12812	; 0x320c
   15024:	movt	r0, #3
   15028:	str	r0, [sp, #24]
   1502c:	b	15030 <__assert_fail@plt+0x3d00>
   15030:	ldr	r0, [sp, #24]
   15034:	str	r0, [sp, #36]	; 0x24
   15038:	bl	11228 <__errno_location@plt>
   1503c:	ldr	r0, [r0]
   15040:	str	r0, [sp, #32]
   15044:	ldr	r0, [fp, #-20]	; 0xffffffec
   15048:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1504c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15050:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15054:	ldr	ip, [sp, #36]	; 0x24
   15058:	ldr	ip, [ip]
   1505c:	ldr	lr, [sp, #36]	; 0x24
   15060:	ldr	lr, [lr, #4]
   15064:	ldr	r4, [sp, #36]	; 0x24
   15068:	add	r4, r4, #8
   1506c:	ldr	r5, [sp, #36]	; 0x24
   15070:	ldr	r5, [r5, #40]	; 0x28
   15074:	ldr	r6, [sp, #36]	; 0x24
   15078:	ldr	r6, [r6, #44]	; 0x2c
   1507c:	str	ip, [sp]
   15080:	str	lr, [sp, #4]
   15084:	str	r4, [sp, #8]
   15088:	str	r5, [sp, #12]
   1508c:	str	r6, [sp, #16]
   15090:	bl	150b8 <__assert_fail@plt+0x3d88>
   15094:	str	r0, [sp, #28]
   15098:	ldr	r0, [sp, #32]
   1509c:	str	r0, [sp, #20]
   150a0:	bl	11228 <__errno_location@plt>
   150a4:	ldr	r1, [sp, #20]
   150a8:	str	r1, [r0]
   150ac:	ldr	r0, [sp, #28]
   150b0:	sub	sp, fp, #16
   150b4:	pop	{r4, r5, r6, sl, fp, pc}
   150b8:	push	{r4, r5, r6, sl, fp, lr}
   150bc:	add	fp, sp, #16
   150c0:	sub	sp, sp, #160	; 0xa0
   150c4:	ldr	ip, [fp, #24]
   150c8:	ldr	lr, [fp, #20]
   150cc:	ldr	r4, [fp, #16]
   150d0:	ldr	r5, [fp, #12]
   150d4:	ldr	r6, [fp, #8]
   150d8:	str	r0, [fp, #-24]	; 0xffffffe8
   150dc:	str	r1, [fp, #-28]	; 0xffffffe4
   150e0:	str	r2, [fp, #-32]	; 0xffffffe0
   150e4:	str	r3, [fp, #-36]	; 0xffffffdc
   150e8:	movw	r0, #0
   150ec:	str	r0, [fp, #-44]	; 0xffffffd4
   150f0:	str	r0, [fp, #-48]	; 0xffffffd0
   150f4:	str	r0, [fp, #-52]	; 0xffffffcc
   150f8:	str	r0, [fp, #-56]	; 0xffffffc8
   150fc:	movw	r0, #0
   15100:	strb	r0, [fp, #-57]	; 0xffffffc7
   15104:	str	ip, [sp, #72]	; 0x48
   15108:	str	lr, [sp, #68]	; 0x44
   1510c:	str	r4, [sp, #64]	; 0x40
   15110:	str	r5, [sp, #60]	; 0x3c
   15114:	str	r6, [sp, #56]	; 0x38
   15118:	bl	11150 <__ctype_get_mb_cur_max@plt>
   1511c:	cmp	r0, #1
   15120:	movw	r0, #0
   15124:	moveq	r0, #1
   15128:	and	r0, r0, #1
   1512c:	strb	r0, [fp, #-58]	; 0xffffffc6
   15130:	ldr	r0, [fp, #12]
   15134:	and	r0, r0, #2
   15138:	cmp	r0, #0
   1513c:	movw	r0, #0
   15140:	movne	r0, #1
   15144:	and	r0, r0, #1
   15148:	strb	r0, [fp, #-59]	; 0xffffffc5
   1514c:	movw	r0, #0
   15150:	strb	r0, [fp, #-60]	; 0xffffffc4
   15154:	strb	r0, [fp, #-61]	; 0xffffffc3
   15158:	movw	r0, #1
   1515c:	strb	r0, [fp, #-62]	; 0xffffffc2
   15160:	ldr	r0, [fp, #8]
   15164:	cmp	r0, #10
   15168:	str	r0, [sp, #52]	; 0x34
   1516c:	bhi	15394 <__assert_fail@plt+0x4064>
   15170:	add	r0, pc, #8
   15174:	ldr	r1, [sp, #52]	; 0x34
   15178:	ldr	r0, [r0, r1, lsl #2]
   1517c:	mov	pc, r0
   15180:	andeq	r5, r1, r8, lsl #7
   15184:	andeq	r5, r1, r4, lsl #6
   15188:	andeq	r5, r1, r4, lsr #6
   1518c:	strdeq	r5, [r1], -ip
   15190:	andeq	r5, r1, ip, lsl #6
   15194:			; <UNDEFINED> instruction: 0x000151bc
   15198:	andeq	r5, r1, ip, lsr #3
   1519c:	andeq	r5, r1, r0, lsr #4
   151a0:	andeq	r5, r1, r4, lsr r2
   151a4:	andeq	r5, r1, r4, lsr r2
   151a8:	andeq	r5, r1, r4, lsr r2
   151ac:	movw	r0, #5
   151b0:	str	r0, [fp, #8]
   151b4:	movw	r0, #1
   151b8:	strb	r0, [fp, #-59]	; 0xffffffc5
   151bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   151c0:	tst	r0, #1
   151c4:	bne	15200 <__assert_fail@plt+0x3ed0>
   151c8:	b	151cc <__assert_fail@plt+0x3e9c>
   151cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151d4:	cmp	r0, r1
   151d8:	bcs	151f0 <__assert_fail@plt+0x3ec0>
   151dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   151e4:	add	r0, r0, r1
   151e8:	movw	r1, #34	; 0x22
   151ec:	strb	r1, [r0]
   151f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151f4:	add	r0, r0, #1
   151f8:	str	r0, [fp, #-44]	; 0xffffffd4
   151fc:	b	15200 <__assert_fail@plt+0x3ed0>
   15200:	movw	r0, #1
   15204:	strb	r0, [fp, #-57]	; 0xffffffc7
   15208:	movw	r0, #8342	; 0x2096
   1520c:	movt	r0, #2
   15210:	str	r0, [fp, #-52]	; 0xffffffcc
   15214:	movw	r0, #1
   15218:	str	r0, [fp, #-56]	; 0xffffffc8
   1521c:	b	15398 <__assert_fail@plt+0x4068>
   15220:	movw	r0, #1
   15224:	strb	r0, [fp, #-57]	; 0xffffffc7
   15228:	movw	r0, #0
   1522c:	strb	r0, [fp, #-59]	; 0xffffffc5
   15230:	b	15398 <__assert_fail@plt+0x4068>
   15234:	ldr	r0, [fp, #8]
   15238:	cmp	r0, #10
   1523c:	beq	15268 <__assert_fail@plt+0x3f38>
   15240:	ldr	r1, [fp, #8]
   15244:	movw	r0, #8344	; 0x2098
   15248:	movt	r0, #2
   1524c:	bl	172ac <__assert_fail@plt+0x5f7c>
   15250:	str	r0, [fp, #20]
   15254:	ldr	r1, [fp, #8]
   15258:	movw	r0, #8346	; 0x209a
   1525c:	movt	r0, #2
   15260:	bl	172ac <__assert_fail@plt+0x5f7c>
   15264:	str	r0, [fp, #24]
   15268:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1526c:	tst	r0, #1
   15270:	bne	152dc <__assert_fail@plt+0x3fac>
   15274:	ldr	r0, [fp, #20]
   15278:	str	r0, [fp, #-52]	; 0xffffffcc
   1527c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15280:	ldrsb	r0, [r0]
   15284:	cmp	r0, #0
   15288:	beq	152d8 <__assert_fail@plt+0x3fa8>
   1528c:	b	15290 <__assert_fail@plt+0x3f60>
   15290:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15294:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15298:	cmp	r0, r1
   1529c:	bcs	152b8 <__assert_fail@plt+0x3f88>
   152a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   152a4:	ldrb	r0, [r0]
   152a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   152b0:	add	r1, r1, r2
   152b4:	strb	r0, [r1]
   152b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152bc:	add	r0, r0, #1
   152c0:	str	r0, [fp, #-44]	; 0xffffffd4
   152c4:	b	152c8 <__assert_fail@plt+0x3f98>
   152c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   152cc:	add	r0, r0, #1
   152d0:	str	r0, [fp, #-52]	; 0xffffffcc
   152d4:	b	1527c <__assert_fail@plt+0x3f4c>
   152d8:	b	152dc <__assert_fail@plt+0x3fac>
   152dc:	movw	r0, #1
   152e0:	strb	r0, [fp, #-57]	; 0xffffffc7
   152e4:	ldr	r0, [fp, #24]
   152e8:	str	r0, [fp, #-52]	; 0xffffffcc
   152ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   152f0:	bl	11204 <strlen@plt>
   152f4:	str	r0, [fp, #-56]	; 0xffffffc8
   152f8:	b	15398 <__assert_fail@plt+0x4068>
   152fc:	movw	r0, #1
   15300:	strb	r0, [fp, #-57]	; 0xffffffc7
   15304:	movw	r0, #1
   15308:	strb	r0, [fp, #-59]	; 0xffffffc5
   1530c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15310:	tst	r0, #1
   15314:	bne	15320 <__assert_fail@plt+0x3ff0>
   15318:	movw	r0, #1
   1531c:	strb	r0, [fp, #-57]	; 0xffffffc7
   15320:	b	15324 <__assert_fail@plt+0x3ff4>
   15324:	movw	r0, #2
   15328:	str	r0, [fp, #8]
   1532c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15330:	tst	r0, #1
   15334:	bne	15370 <__assert_fail@plt+0x4040>
   15338:	b	1533c <__assert_fail@plt+0x400c>
   1533c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15340:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15344:	cmp	r0, r1
   15348:	bcs	15360 <__assert_fail@plt+0x4030>
   1534c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15350:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15354:	add	r0, r0, r1
   15358:	movw	r1, #39	; 0x27
   1535c:	strb	r1, [r0]
   15360:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15364:	add	r0, r0, #1
   15368:	str	r0, [fp, #-44]	; 0xffffffd4
   1536c:	b	15370 <__assert_fail@plt+0x4040>
   15370:	movw	r0, #8346	; 0x209a
   15374:	movt	r0, #2
   15378:	str	r0, [fp, #-52]	; 0xffffffcc
   1537c:	movw	r0, #1
   15380:	str	r0, [fp, #-56]	; 0xffffffc8
   15384:	b	15398 <__assert_fail@plt+0x4068>
   15388:	movw	r0, #0
   1538c:	strb	r0, [fp, #-59]	; 0xffffffc5
   15390:	b	15398 <__assert_fail@plt+0x4068>
   15394:	bl	11300 <abort@plt>
   15398:	movw	r0, #0
   1539c:	str	r0, [fp, #-40]	; 0xffffffd8
   153a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153a4:	cmn	r0, #1
   153a8:	bne	153d4 <__assert_fail@plt+0x40a4>
   153ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   153b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   153b4:	add	r0, r0, r1
   153b8:	ldrb	r0, [r0]
   153bc:	cmp	r0, #0
   153c0:	movw	r0, #0
   153c4:	moveq	r0, #1
   153c8:	and	r0, r0, #1
   153cc:	str	r0, [sp, #48]	; 0x30
   153d0:	b	153f0 <__assert_fail@plt+0x40c0>
   153d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   153d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   153dc:	cmp	r0, r1
   153e0:	movw	r0, #0
   153e4:	moveq	r0, #1
   153e8:	and	r0, r0, #1
   153ec:	str	r0, [sp, #48]	; 0x30
   153f0:	ldr	r0, [sp, #48]	; 0x30
   153f4:	cmp	r0, #0
   153f8:	movw	r0, #0
   153fc:	movne	r0, #1
   15400:	mvn	r1, #0
   15404:	eor	r0, r0, r1
   15408:	tst	r0, #1
   1540c:	beq	165f8 <__assert_fail@plt+0x52c8>
   15410:	movw	r0, #0
   15414:	strb	r0, [fp, #-65]	; 0xffffffbf
   15418:	strb	r0, [fp, #-66]	; 0xffffffbe
   1541c:	strb	r0, [fp, #-67]	; 0xffffffbd
   15420:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15424:	tst	r0, #1
   15428:	beq	154d4 <__assert_fail@plt+0x41a4>
   1542c:	ldr	r0, [fp, #8]
   15430:	cmp	r0, #2
   15434:	beq	154d4 <__assert_fail@plt+0x41a4>
   15438:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1543c:	cmp	r0, #0
   15440:	beq	154d4 <__assert_fail@plt+0x41a4>
   15444:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15448:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1544c:	add	r0, r0, r1
   15450:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15454:	cmn	r1, #1
   15458:	str	r0, [sp, #44]	; 0x2c
   1545c:	bne	15484 <__assert_fail@plt+0x4154>
   15460:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15464:	movw	r1, #1
   15468:	cmp	r1, r0
   1546c:	bcs	15484 <__assert_fail@plt+0x4154>
   15470:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15474:	bl	11204 <strlen@plt>
   15478:	str	r0, [fp, #-36]	; 0xffffffdc
   1547c:	str	r0, [sp, #40]	; 0x28
   15480:	b	1548c <__assert_fail@plt+0x415c>
   15484:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15488:	str	r0, [sp, #40]	; 0x28
   1548c:	ldr	r0, [sp, #40]	; 0x28
   15490:	ldr	r1, [sp, #44]	; 0x2c
   15494:	cmp	r1, r0
   15498:	bhi	154d4 <__assert_fail@plt+0x41a4>
   1549c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   154a4:	add	r0, r0, r1
   154a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   154ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   154b0:	bl	11108 <memcmp@plt>
   154b4:	cmp	r0, #0
   154b8:	bne	154d4 <__assert_fail@plt+0x41a4>
   154bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   154c0:	tst	r0, #1
   154c4:	beq	154cc <__assert_fail@plt+0x419c>
   154c8:	b	16778 <__assert_fail@plt+0x5448>
   154cc:	movw	r0, #1
   154d0:	strb	r0, [fp, #-65]	; 0xffffffbf
   154d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   154dc:	ldrb	r0, [r0, r1]
   154e0:	strb	r0, [fp, #-63]	; 0xffffffc1
   154e4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   154e8:	mov	r1, r0
   154ec:	cmp	r0, #126	; 0x7e
   154f0:	str	r1, [sp, #36]	; 0x24
   154f4:	bhi	15d64 <__assert_fail@plt+0x4a34>
   154f8:	add	r0, pc, #8
   154fc:	ldr	r1, [sp, #36]	; 0x24
   15500:	ldr	r0, [r0, r1, lsl #2]
   15504:	mov	pc, r0
   15508:	andeq	r5, r1, r4, lsl #14
   1550c:	andeq	r5, r1, r4, ror #26
   15510:	andeq	r5, r1, r4, ror #26
   15514:	andeq	r5, r1, r4, ror #26
   15518:	andeq	r5, r1, r4, ror #26
   1551c:	andeq	r5, r1, r4, ror #26
   15520:	andeq	r5, r1, r4, ror #26
   15524:	andeq	r5, r1, ip, lsl #22
   15528:	andeq	r5, r1, r8, lsl fp
   1552c:	andeq	r5, r1, r8, asr #22
   15530:	andeq	r5, r1, r0, lsr fp
   15534:	andeq	r5, r1, r4, asr fp
   15538:	andeq	r5, r1, r4, lsr #22
   1553c:	andeq	r5, r1, ip, lsr fp
   15540:	andeq	r5, r1, r4, ror #26
   15544:	andeq	r5, r1, r4, ror #26
   15548:	andeq	r5, r1, r4, ror #26
   1554c:	andeq	r5, r1, r4, ror #26
   15550:	andeq	r5, r1, r4, ror #26
   15554:	andeq	r5, r1, r4, ror #26
   15558:	andeq	r5, r1, r4, ror #26
   1555c:	andeq	r5, r1, r4, ror #26
   15560:	andeq	r5, r1, r4, ror #26
   15564:	andeq	r5, r1, r4, ror #26
   15568:	andeq	r5, r1, r4, ror #26
   1556c:	andeq	r5, r1, r4, ror #26
   15570:	andeq	r5, r1, r4, ror #26
   15574:	andeq	r5, r1, r4, ror #26
   15578:	andeq	r5, r1, r4, ror #26
   1557c:	andeq	r5, r1, r4, ror #26
   15580:	andeq	r5, r1, r4, ror #26
   15584:	andeq	r5, r1, r4, ror #26
   15588:	andeq	r5, r1, r8, lsr ip
   1558c:	andeq	r5, r1, r0, asr #24
   15590:	andeq	r5, r1, r0, asr #24
   15594:	andeq	r5, r1, r4, lsr #24
   15598:	andeq	r5, r1, r0, asr #24
   1559c:	andeq	r5, r1, r8, asr sp
   155a0:	andeq	r5, r1, r0, asr #24
   155a4:	andeq	r5, r1, r0, ror #24
   155a8:	andeq	r5, r1, r0, asr #24
   155ac:	andeq	r5, r1, r0, asr #24
   155b0:	andeq	r5, r1, r0, asr #24
   155b4:	andeq	r5, r1, r8, asr sp
   155b8:	andeq	r5, r1, r8, asr sp
   155bc:	andeq	r5, r1, r8, asr sp
   155c0:	andeq	r5, r1, r8, asr sp
   155c4:	andeq	r5, r1, r8, asr sp
   155c8:	andeq	r5, r1, r8, asr sp
   155cc:	andeq	r5, r1, r8, asr sp
   155d0:	andeq	r5, r1, r8, asr sp
   155d4:	andeq	r5, r1, r8, asr sp
   155d8:	andeq	r5, r1, r8, asr sp
   155dc:	andeq	r5, r1, r8, asr sp
   155e0:	andeq	r5, r1, r8, asr sp
   155e4:	andeq	r5, r1, r8, asr sp
   155e8:	andeq	r5, r1, r8, asr sp
   155ec:	andeq	r5, r1, r8, asr sp
   155f0:	andeq	r5, r1, r8, asr sp
   155f4:	andeq	r5, r1, r0, asr #24
   155f8:	andeq	r5, r1, r0, asr #24
   155fc:	andeq	r5, r1, r0, asr #24
   15600:	andeq	r5, r1, r0, asr #24
   15604:	andeq	r5, r1, r0, lsl r9
   15608:	andeq	r5, r1, r4, ror #26
   1560c:	andeq	r5, r1, r8, asr sp
   15610:	andeq	r5, r1, r8, asr sp
   15614:	andeq	r5, r1, r8, asr sp
   15618:	andeq	r5, r1, r8, asr sp
   1561c:	andeq	r5, r1, r8, asr sp
   15620:	andeq	r5, r1, r8, asr sp
   15624:	andeq	r5, r1, r8, asr sp
   15628:	andeq	r5, r1, r8, asr sp
   1562c:	andeq	r5, r1, r8, asr sp
   15630:	andeq	r5, r1, r8, asr sp
   15634:	andeq	r5, r1, r8, asr sp
   15638:	andeq	r5, r1, r8, asr sp
   1563c:	andeq	r5, r1, r8, asr sp
   15640:	andeq	r5, r1, r8, asr sp
   15644:	andeq	r5, r1, r8, asr sp
   15648:	andeq	r5, r1, r8, asr sp
   1564c:	andeq	r5, r1, r8, asr sp
   15650:	andeq	r5, r1, r8, asr sp
   15654:	andeq	r5, r1, r8, asr sp
   15658:	andeq	r5, r1, r8, asr sp
   1565c:	andeq	r5, r1, r8, asr sp
   15660:	andeq	r5, r1, r8, asr sp
   15664:	andeq	r5, r1, r8, asr sp
   15668:	andeq	r5, r1, r8, asr sp
   1566c:	andeq	r5, r1, r8, asr sp
   15670:	andeq	r5, r1, r8, asr sp
   15674:	andeq	r5, r1, r0, asr #24
   15678:	andeq	r5, r1, r0, ror #22
   1567c:	andeq	r5, r1, r8, asr sp
   15680:	andeq	r5, r1, r0, asr #24
   15684:	andeq	r5, r1, r8, asr sp
   15688:	andeq	r5, r1, r0, asr #24
   1568c:	andeq	r5, r1, r8, asr sp
   15690:	andeq	r5, r1, r8, asr sp
   15694:	andeq	r5, r1, r8, asr sp
   15698:	andeq	r5, r1, r8, asr sp
   1569c:	andeq	r5, r1, r8, asr sp
   156a0:	andeq	r5, r1, r8, asr sp
   156a4:	andeq	r5, r1, r8, asr sp
   156a8:	andeq	r5, r1, r8, asr sp
   156ac:	andeq	r5, r1, r8, asr sp
   156b0:	andeq	r5, r1, r8, asr sp
   156b4:	andeq	r5, r1, r8, asr sp
   156b8:	andeq	r5, r1, r8, asr sp
   156bc:	andeq	r5, r1, r8, asr sp
   156c0:	andeq	r5, r1, r8, asr sp
   156c4:	andeq	r5, r1, r8, asr sp
   156c8:	andeq	r5, r1, r8, asr sp
   156cc:	andeq	r5, r1, r8, asr sp
   156d0:	andeq	r5, r1, r8, asr sp
   156d4:	andeq	r5, r1, r8, asr sp
   156d8:	andeq	r5, r1, r8, asr sp
   156dc:	andeq	r5, r1, r8, asr sp
   156e0:	andeq	r5, r1, r8, asr sp
   156e4:	andeq	r5, r1, r8, asr sp
   156e8:	andeq	r5, r1, r8, asr sp
   156ec:	andeq	r5, r1, r8, asr sp
   156f0:	andeq	r5, r1, r8, asr sp
   156f4:	strdeq	r5, [r1], -r0
   156f8:	andeq	r5, r1, r0, asr #24
   156fc:	strdeq	r5, [r1], -r0
   15700:	andeq	r5, r1, r4, lsr #24
   15704:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15708:	tst	r0, #1
   1570c:	beq	158f4 <__assert_fail@plt+0x45c4>
   15710:	b	15714 <__assert_fail@plt+0x43e4>
   15714:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15718:	tst	r0, #1
   1571c:	beq	15724 <__assert_fail@plt+0x43f4>
   15720:	b	16778 <__assert_fail@plt+0x5448>
   15724:	movw	r0, #1
   15728:	strb	r0, [fp, #-66]	; 0xffffffbe
   1572c:	ldr	r0, [fp, #8]
   15730:	cmp	r0, #2
   15734:	bne	157e8 <__assert_fail@plt+0x44b8>
   15738:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1573c:	tst	r0, #1
   15740:	bne	157e8 <__assert_fail@plt+0x44b8>
   15744:	b	15748 <__assert_fail@plt+0x4418>
   15748:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1574c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15750:	cmp	r0, r1
   15754:	bcs	1576c <__assert_fail@plt+0x443c>
   15758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1575c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15760:	add	r0, r0, r1
   15764:	movw	r1, #39	; 0x27
   15768:	strb	r1, [r0]
   1576c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15770:	add	r0, r0, #1
   15774:	str	r0, [fp, #-44]	; 0xffffffd4
   15778:	b	1577c <__assert_fail@plt+0x444c>
   1577c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15780:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15784:	cmp	r0, r1
   15788:	bcs	157a0 <__assert_fail@plt+0x4470>
   1578c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15790:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15794:	add	r0, r0, r1
   15798:	movw	r1, #36	; 0x24
   1579c:	strb	r1, [r0]
   157a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157a4:	add	r0, r0, #1
   157a8:	str	r0, [fp, #-44]	; 0xffffffd4
   157ac:	b	157b0 <__assert_fail@plt+0x4480>
   157b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157b8:	cmp	r0, r1
   157bc:	bcs	157d4 <__assert_fail@plt+0x44a4>
   157c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   157c8:	add	r0, r0, r1
   157cc:	movw	r1, #39	; 0x27
   157d0:	strb	r1, [r0]
   157d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157d8:	add	r0, r0, #1
   157dc:	str	r0, [fp, #-44]	; 0xffffffd4
   157e0:	movw	r0, #1
   157e4:	strb	r0, [fp, #-60]	; 0xffffffc4
   157e8:	b	157ec <__assert_fail@plt+0x44bc>
   157ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157f4:	cmp	r0, r1
   157f8:	bcs	15810 <__assert_fail@plt+0x44e0>
   157fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15800:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15804:	add	r0, r0, r1
   15808:	movw	r1, #92	; 0x5c
   1580c:	strb	r1, [r0]
   15810:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15814:	add	r0, r0, #1
   15818:	str	r0, [fp, #-44]	; 0xffffffd4
   1581c:	b	15820 <__assert_fail@plt+0x44f0>
   15820:	ldr	r0, [fp, #8]
   15824:	cmp	r0, #2
   15828:	beq	158e8 <__assert_fail@plt+0x45b8>
   1582c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15830:	add	r0, r0, #1
   15834:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15838:	cmp	r0, r1
   1583c:	bcs	158e8 <__assert_fail@plt+0x45b8>
   15840:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15844:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15848:	add	r1, r1, #1
   1584c:	add	r0, r0, r1
   15850:	ldrb	r0, [r0]
   15854:	movw	r1, #48	; 0x30
   15858:	cmp	r1, r0
   1585c:	bgt	158e8 <__assert_fail@plt+0x45b8>
   15860:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15864:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15868:	add	r1, r1, #1
   1586c:	add	r0, r0, r1
   15870:	ldrb	r0, [r0]
   15874:	cmp	r0, #57	; 0x39
   15878:	bgt	158e8 <__assert_fail@plt+0x45b8>
   1587c:	b	15880 <__assert_fail@plt+0x4550>
   15880:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15884:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15888:	cmp	r0, r1
   1588c:	bcs	158a4 <__assert_fail@plt+0x4574>
   15890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15894:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15898:	add	r0, r0, r1
   1589c:	movw	r1, #48	; 0x30
   158a0:	strb	r1, [r0]
   158a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158a8:	add	r0, r0, #1
   158ac:	str	r0, [fp, #-44]	; 0xffffffd4
   158b0:	b	158b4 <__assert_fail@plt+0x4584>
   158b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158bc:	cmp	r0, r1
   158c0:	bcs	158d8 <__assert_fail@plt+0x45a8>
   158c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158cc:	add	r0, r0, r1
   158d0:	movw	r1, #48	; 0x30
   158d4:	strb	r1, [r0]
   158d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158dc:	add	r0, r0, #1
   158e0:	str	r0, [fp, #-44]	; 0xffffffd4
   158e4:	b	158e8 <__assert_fail@plt+0x45b8>
   158e8:	movw	r0, #48	; 0x30
   158ec:	strb	r0, [fp, #-63]	; 0xffffffc1
   158f0:	b	1590c <__assert_fail@plt+0x45dc>
   158f4:	ldr	r0, [fp, #12]
   158f8:	and	r0, r0, #1
   158fc:	cmp	r0, #0
   15900:	beq	15908 <__assert_fail@plt+0x45d8>
   15904:	b	165e8 <__assert_fail@plt+0x52b8>
   15908:	b	1590c <__assert_fail@plt+0x45dc>
   1590c:	b	16384 <__assert_fail@plt+0x5054>
   15910:	ldr	r0, [fp, #8]
   15914:	cmp	r0, #2
   15918:	str	r0, [sp, #32]
   1591c:	beq	15934 <__assert_fail@plt+0x4604>
   15920:	b	15924 <__assert_fail@plt+0x45f4>
   15924:	ldr	r0, [sp, #32]
   15928:	cmp	r0, #5
   1592c:	beq	15948 <__assert_fail@plt+0x4618>
   15930:	b	15b04 <__assert_fail@plt+0x47d4>
   15934:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15938:	tst	r0, #1
   1593c:	beq	15944 <__assert_fail@plt+0x4614>
   15940:	b	16778 <__assert_fail@plt+0x5448>
   15944:	b	15b08 <__assert_fail@plt+0x47d8>
   15948:	ldr	r0, [fp, #12]
   1594c:	and	r0, r0, #4
   15950:	cmp	r0, #0
   15954:	beq	15b00 <__assert_fail@plt+0x47d0>
   15958:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1595c:	add	r0, r0, #2
   15960:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15964:	cmp	r0, r1
   15968:	bcs	15b00 <__assert_fail@plt+0x47d0>
   1596c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15970:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15974:	add	r1, r1, #1
   15978:	add	r0, r0, r1
   1597c:	ldrb	r0, [r0]
   15980:	cmp	r0, #63	; 0x3f
   15984:	bne	15b00 <__assert_fail@plt+0x47d0>
   15988:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1598c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15990:	add	r0, r1, r0
   15994:	ldrb	r0, [r0, #2]
   15998:	mov	r1, r0
   1599c:	cmp	r0, #33	; 0x21
   159a0:	str	r1, [sp, #28]
   159a4:	beq	159f4 <__assert_fail@plt+0x46c4>
   159a8:	b	159ac <__assert_fail@plt+0x467c>
   159ac:	ldr	r0, [sp, #28]
   159b0:	sub	r1, r0, #39	; 0x27
   159b4:	cmp	r1, #3
   159b8:	bcc	159f4 <__assert_fail@plt+0x46c4>
   159bc:	b	159c0 <__assert_fail@plt+0x4690>
   159c0:	ldr	r0, [sp, #28]
   159c4:	cmp	r0, #45	; 0x2d
   159c8:	beq	159f4 <__assert_fail@plt+0x46c4>
   159cc:	b	159d0 <__assert_fail@plt+0x46a0>
   159d0:	ldr	r0, [sp, #28]
   159d4:	cmp	r0, #47	; 0x2f
   159d8:	beq	159f4 <__assert_fail@plt+0x46c4>
   159dc:	b	159e0 <__assert_fail@plt+0x46b0>
   159e0:	ldr	r0, [sp, #28]
   159e4:	sub	r1, r0, #60	; 0x3c
   159e8:	cmp	r1, #2
   159ec:	bhi	15af8 <__assert_fail@plt+0x47c8>
   159f0:	b	159f4 <__assert_fail@plt+0x46c4>
   159f4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   159f8:	tst	r0, #1
   159fc:	beq	15a04 <__assert_fail@plt+0x46d4>
   15a00:	b	16778 <__assert_fail@plt+0x5448>
   15a04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15a0c:	add	r1, r1, #2
   15a10:	add	r0, r0, r1
   15a14:	ldrb	r0, [r0]
   15a18:	strb	r0, [fp, #-63]	; 0xffffffc1
   15a1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15a20:	add	r0, r0, #2
   15a24:	str	r0, [fp, #-40]	; 0xffffffd8
   15a28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a30:	cmp	r0, r1
   15a34:	bcs	15a4c <__assert_fail@plt+0x471c>
   15a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a40:	add	r0, r0, r1
   15a44:	movw	r1, #63	; 0x3f
   15a48:	strb	r1, [r0]
   15a4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a50:	add	r0, r0, #1
   15a54:	str	r0, [fp, #-44]	; 0xffffffd4
   15a58:	b	15a5c <__assert_fail@plt+0x472c>
   15a5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a64:	cmp	r0, r1
   15a68:	bcs	15a80 <__assert_fail@plt+0x4750>
   15a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a74:	add	r0, r0, r1
   15a78:	movw	r1, #34	; 0x22
   15a7c:	strb	r1, [r0]
   15a80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a84:	add	r0, r0, #1
   15a88:	str	r0, [fp, #-44]	; 0xffffffd4
   15a8c:	b	15a90 <__assert_fail@plt+0x4760>
   15a90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a98:	cmp	r0, r1
   15a9c:	bcs	15ab4 <__assert_fail@plt+0x4784>
   15aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15aa4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15aa8:	add	r0, r0, r1
   15aac:	movw	r1, #34	; 0x22
   15ab0:	strb	r1, [r0]
   15ab4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ab8:	add	r0, r0, #1
   15abc:	str	r0, [fp, #-44]	; 0xffffffd4
   15ac0:	b	15ac4 <__assert_fail@plt+0x4794>
   15ac4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ac8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15acc:	cmp	r0, r1
   15ad0:	bcs	15ae8 <__assert_fail@plt+0x47b8>
   15ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ad8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15adc:	add	r0, r0, r1
   15ae0:	movw	r1, #63	; 0x3f
   15ae4:	strb	r1, [r0]
   15ae8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15aec:	add	r0, r0, #1
   15af0:	str	r0, [fp, #-44]	; 0xffffffd4
   15af4:	b	15afc <__assert_fail@plt+0x47cc>
   15af8:	b	15afc <__assert_fail@plt+0x47cc>
   15afc:	b	15b00 <__assert_fail@plt+0x47d0>
   15b00:	b	15b08 <__assert_fail@plt+0x47d8>
   15b04:	b	15b08 <__assert_fail@plt+0x47d8>
   15b08:	b	16384 <__assert_fail@plt+0x5054>
   15b0c:	movw	r0, #97	; 0x61
   15b10:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b14:	b	15bd4 <__assert_fail@plt+0x48a4>
   15b18:	movw	r0, #98	; 0x62
   15b1c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b20:	b	15bd4 <__assert_fail@plt+0x48a4>
   15b24:	movw	r0, #102	; 0x66
   15b28:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b2c:	b	15bd4 <__assert_fail@plt+0x48a4>
   15b30:	movw	r0, #110	; 0x6e
   15b34:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b38:	b	15bb4 <__assert_fail@plt+0x4884>
   15b3c:	movw	r0, #114	; 0x72
   15b40:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b44:	b	15bb4 <__assert_fail@plt+0x4884>
   15b48:	movw	r0, #116	; 0x74
   15b4c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b50:	b	15bb4 <__assert_fail@plt+0x4884>
   15b54:	movw	r0, #118	; 0x76
   15b58:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b5c:	b	15bd4 <__assert_fail@plt+0x48a4>
   15b60:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15b64:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b68:	ldr	r0, [fp, #8]
   15b6c:	cmp	r0, #2
   15b70:	bne	15b88 <__assert_fail@plt+0x4858>
   15b74:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15b78:	tst	r0, #1
   15b7c:	beq	15b84 <__assert_fail@plt+0x4854>
   15b80:	b	16778 <__assert_fail@plt+0x5448>
   15b84:	b	1650c <__assert_fail@plt+0x51dc>
   15b88:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15b8c:	tst	r0, #1
   15b90:	beq	15bb0 <__assert_fail@plt+0x4880>
   15b94:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15b98:	tst	r0, #1
   15b9c:	beq	15bb0 <__assert_fail@plt+0x4880>
   15ba0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ba4:	cmp	r0, #0
   15ba8:	beq	15bb0 <__assert_fail@plt+0x4880>
   15bac:	b	1650c <__assert_fail@plt+0x51dc>
   15bb0:	b	15bb4 <__assert_fail@plt+0x4884>
   15bb4:	ldr	r0, [fp, #8]
   15bb8:	cmp	r0, #2
   15bbc:	bne	15bd0 <__assert_fail@plt+0x48a0>
   15bc0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15bc4:	tst	r0, #1
   15bc8:	beq	15bd0 <__assert_fail@plt+0x48a0>
   15bcc:	b	16778 <__assert_fail@plt+0x5448>
   15bd0:	b	15bd4 <__assert_fail@plt+0x48a4>
   15bd4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15bd8:	tst	r0, #1
   15bdc:	beq	15bec <__assert_fail@plt+0x48bc>
   15be0:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   15be4:	strb	r0, [fp, #-63]	; 0xffffffc1
   15be8:	b	163f8 <__assert_fail@plt+0x50c8>
   15bec:	b	16384 <__assert_fail@plt+0x5054>
   15bf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15bf4:	cmn	r0, #1
   15bf8:	bne	15c10 <__assert_fail@plt+0x48e0>
   15bfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c00:	ldrb	r0, [r0, #1]
   15c04:	cmp	r0, #0
   15c08:	beq	15c20 <__assert_fail@plt+0x48f0>
   15c0c:	b	15c1c <__assert_fail@plt+0x48ec>
   15c10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c14:	cmp	r0, #1
   15c18:	beq	15c20 <__assert_fail@plt+0x48f0>
   15c1c:	b	16384 <__assert_fail@plt+0x5054>
   15c20:	b	15c24 <__assert_fail@plt+0x48f4>
   15c24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15c28:	cmp	r0, #0
   15c2c:	beq	15c34 <__assert_fail@plt+0x4904>
   15c30:	b	16384 <__assert_fail@plt+0x5054>
   15c34:	b	15c38 <__assert_fail@plt+0x4908>
   15c38:	movw	r0, #1
   15c3c:	strb	r0, [fp, #-67]	; 0xffffffbd
   15c40:	ldr	r0, [fp, #8]
   15c44:	cmp	r0, #2
   15c48:	bne	15c5c <__assert_fail@plt+0x492c>
   15c4c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15c50:	tst	r0, #1
   15c54:	beq	15c5c <__assert_fail@plt+0x492c>
   15c58:	b	16778 <__assert_fail@plt+0x5448>
   15c5c:	b	16384 <__assert_fail@plt+0x5054>
   15c60:	movw	r0, #1
   15c64:	strb	r0, [fp, #-61]	; 0xffffffc3
   15c68:	strb	r0, [fp, #-67]	; 0xffffffbd
   15c6c:	ldr	r0, [fp, #8]
   15c70:	cmp	r0, #2
   15c74:	bne	15d54 <__assert_fail@plt+0x4a24>
   15c78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15c7c:	tst	r0, #1
   15c80:	beq	15c88 <__assert_fail@plt+0x4958>
   15c84:	b	16778 <__assert_fail@plt+0x5448>
   15c88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15c8c:	cmp	r0, #0
   15c90:	beq	15cb0 <__assert_fail@plt+0x4980>
   15c94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c98:	cmp	r0, #0
   15c9c:	bne	15cb0 <__assert_fail@plt+0x4980>
   15ca0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15ca4:	str	r0, [fp, #-48]	; 0xffffffd0
   15ca8:	movw	r0, #0
   15cac:	str	r0, [fp, #-28]	; 0xffffffe4
   15cb0:	b	15cb4 <__assert_fail@plt+0x4984>
   15cb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15cbc:	cmp	r0, r1
   15cc0:	bcs	15cd8 <__assert_fail@plt+0x49a8>
   15cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ccc:	add	r0, r0, r1
   15cd0:	movw	r1, #39	; 0x27
   15cd4:	strb	r1, [r0]
   15cd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cdc:	add	r0, r0, #1
   15ce0:	str	r0, [fp, #-44]	; 0xffffffd4
   15ce4:	b	15ce8 <__assert_fail@plt+0x49b8>
   15ce8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15cf0:	cmp	r0, r1
   15cf4:	bcs	15d0c <__assert_fail@plt+0x49dc>
   15cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cfc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d00:	add	r0, r0, r1
   15d04:	movw	r1, #92	; 0x5c
   15d08:	strb	r1, [r0]
   15d0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d10:	add	r0, r0, #1
   15d14:	str	r0, [fp, #-44]	; 0xffffffd4
   15d18:	b	15d1c <__assert_fail@plt+0x49ec>
   15d1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d24:	cmp	r0, r1
   15d28:	bcs	15d40 <__assert_fail@plt+0x4a10>
   15d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d34:	add	r0, r0, r1
   15d38:	movw	r1, #39	; 0x27
   15d3c:	strb	r1, [r0]
   15d40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d44:	add	r0, r0, #1
   15d48:	str	r0, [fp, #-44]	; 0xffffffd4
   15d4c:	movw	r0, #0
   15d50:	strb	r0, [fp, #-60]	; 0xffffffc4
   15d54:	b	16384 <__assert_fail@plt+0x5054>
   15d58:	movw	r0, #1
   15d5c:	strb	r0, [fp, #-67]	; 0xffffffbd
   15d60:	b	16384 <__assert_fail@plt+0x5054>
   15d64:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   15d68:	tst	r0, #1
   15d6c:	beq	15dac <__assert_fail@plt+0x4a7c>
   15d70:	mov	r0, #1
   15d74:	str	r0, [fp, #-72]	; 0xffffffb8
   15d78:	bl	111d4 <__ctype_b_loc@plt>
   15d7c:	ldr	r0, [r0]
   15d80:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15d84:	mov	r2, r1
   15d88:	add	r0, r0, r1, lsl #1
   15d8c:	ldrh	r0, [r0]
   15d90:	and	r0, r0, #16384	; 0x4000
   15d94:	cmp	r0, #0
   15d98:	movw	r0, #0
   15d9c:	movne	r0, #1
   15da0:	and	r0, r0, #1
   15da4:	strb	r0, [fp, #-73]	; 0xffffffb7
   15da8:	b	16038 <__assert_fail@plt+0x4d08>
   15dac:	sub	r0, fp, #84	; 0x54
   15db0:	movw	r1, #0
   15db4:	and	r1, r1, #255	; 0xff
   15db8:	movw	r2, #8
   15dbc:	bl	11240 <memset@plt>
   15dc0:	movw	r0, #0
   15dc4:	str	r0, [fp, #-72]	; 0xffffffb8
   15dc8:	movw	r0, #1
   15dcc:	strb	r0, [fp, #-73]	; 0xffffffb7
   15dd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15dd4:	cmn	r0, #1
   15dd8:	bne	15de8 <__assert_fail@plt+0x4ab8>
   15ddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15de0:	bl	11204 <strlen@plt>
   15de4:	str	r0, [fp, #-36]	; 0xffffffdc
   15de8:	b	15dec <__assert_fail@plt+0x4abc>
   15dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15df0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15df4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15df8:	add	r1, r1, r2
   15dfc:	add	r1, r0, r1
   15e00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15e04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15e08:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15e0c:	add	r2, r2, r3
   15e10:	sub	r2, r0, r2
   15e14:	add	r0, sp, #88	; 0x58
   15e18:	sub	r3, fp, #84	; 0x54
   15e1c:	bl	1f2e4 <__assert_fail@plt+0xdfb4>
   15e20:	str	r0, [sp, #84]	; 0x54
   15e24:	ldr	r0, [sp, #84]	; 0x54
   15e28:	cmp	r0, #0
   15e2c:	bne	15e34 <__assert_fail@plt+0x4b04>
   15e30:	b	16034 <__assert_fail@plt+0x4d04>
   15e34:	ldr	r0, [sp, #84]	; 0x54
   15e38:	cmn	r0, #1
   15e3c:	bne	15e4c <__assert_fail@plt+0x4b1c>
   15e40:	movw	r0, #0
   15e44:	strb	r0, [fp, #-73]	; 0xffffffb7
   15e48:	b	16034 <__assert_fail@plt+0x4d04>
   15e4c:	ldr	r0, [sp, #84]	; 0x54
   15e50:	cmn	r0, #2
   15e54:	bne	15ec8 <__assert_fail@plt+0x4b98>
   15e58:	movw	r0, #0
   15e5c:	strb	r0, [fp, #-73]	; 0xffffffb7
   15e60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15e64:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15e68:	add	r0, r0, r1
   15e6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15e70:	cmp	r0, r1
   15e74:	movw	r0, #0
   15e78:	str	r0, [sp, #24]
   15e7c:	bcs	15ea8 <__assert_fail@plt+0x4b78>
   15e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15e88:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15e8c:	add	r1, r1, r2
   15e90:	add	r0, r0, r1
   15e94:	ldrb	r0, [r0]
   15e98:	cmp	r0, #0
   15e9c:	movw	r0, #0
   15ea0:	movne	r0, #1
   15ea4:	str	r0, [sp, #24]
   15ea8:	ldr	r0, [sp, #24]
   15eac:	tst	r0, #1
   15eb0:	beq	15ec4 <__assert_fail@plt+0x4b94>
   15eb4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15eb8:	add	r0, r0, #1
   15ebc:	str	r0, [fp, #-72]	; 0xffffffb8
   15ec0:	b	15e60 <__assert_fail@plt+0x4b30>
   15ec4:	b	16034 <__assert_fail@plt+0x4d04>
   15ec8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15ecc:	tst	r0, #1
   15ed0:	beq	15fdc <__assert_fail@plt+0x4cac>
   15ed4:	ldr	r0, [fp, #8]
   15ed8:	cmp	r0, #2
   15edc:	bne	15fdc <__assert_fail@plt+0x4cac>
   15ee0:	movw	r0, #1
   15ee4:	str	r0, [sp, #80]	; 0x50
   15ee8:	ldr	r0, [sp, #80]	; 0x50
   15eec:	ldr	r1, [sp, #84]	; 0x54
   15ef0:	cmp	r0, r1
   15ef4:	bcs	15fd8 <__assert_fail@plt+0x4ca8>
   15ef8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15efc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15f00:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15f04:	add	r1, r1, r2
   15f08:	ldr	r2, [sp, #80]	; 0x50
   15f0c:	add	r1, r1, r2
   15f10:	ldrb	r0, [r0, r1]
   15f14:	sub	r0, r0, #91	; 0x5b
   15f18:	cmp	r0, #33	; 0x21
   15f1c:	str	r0, [sp, #20]
   15f20:	bhi	15fc0 <__assert_fail@plt+0x4c90>
   15f24:	add	r0, pc, #8
   15f28:	ldr	r1, [sp, #20]
   15f2c:	ldr	r0, [r0, r1, lsl #2]
   15f30:	mov	pc, r0
   15f34:			; <UNDEFINED> instruction: 0x00015fbc
   15f38:			; <UNDEFINED> instruction: 0x00015fbc
   15f3c:	andeq	r5, r1, r0, asr #31
   15f40:			; <UNDEFINED> instruction: 0x00015fbc
   15f44:	andeq	r5, r1, r0, asr #31
   15f48:			; <UNDEFINED> instruction: 0x00015fbc
   15f4c:	andeq	r5, r1, r0, asr #31
   15f50:	andeq	r5, r1, r0, asr #31
   15f54:	andeq	r5, r1, r0, asr #31
   15f58:	andeq	r5, r1, r0, asr #31
   15f5c:	andeq	r5, r1, r0, asr #31
   15f60:	andeq	r5, r1, r0, asr #31
   15f64:	andeq	r5, r1, r0, asr #31
   15f68:	andeq	r5, r1, r0, asr #31
   15f6c:	andeq	r5, r1, r0, asr #31
   15f70:	andeq	r5, r1, r0, asr #31
   15f74:	andeq	r5, r1, r0, asr #31
   15f78:	andeq	r5, r1, r0, asr #31
   15f7c:	andeq	r5, r1, r0, asr #31
   15f80:	andeq	r5, r1, r0, asr #31
   15f84:	andeq	r5, r1, r0, asr #31
   15f88:	andeq	r5, r1, r0, asr #31
   15f8c:	andeq	r5, r1, r0, asr #31
   15f90:	andeq	r5, r1, r0, asr #31
   15f94:	andeq	r5, r1, r0, asr #31
   15f98:	andeq	r5, r1, r0, asr #31
   15f9c:	andeq	r5, r1, r0, asr #31
   15fa0:	andeq	r5, r1, r0, asr #31
   15fa4:	andeq	r5, r1, r0, asr #31
   15fa8:	andeq	r5, r1, r0, asr #31
   15fac:	andeq	r5, r1, r0, asr #31
   15fb0:	andeq	r5, r1, r0, asr #31
   15fb4:	andeq	r5, r1, r0, asr #31
   15fb8:			; <UNDEFINED> instruction: 0x00015fbc
   15fbc:	b	16778 <__assert_fail@plt+0x5448>
   15fc0:	b	15fc4 <__assert_fail@plt+0x4c94>
   15fc4:	b	15fc8 <__assert_fail@plt+0x4c98>
   15fc8:	ldr	r0, [sp, #80]	; 0x50
   15fcc:	add	r0, r0, #1
   15fd0:	str	r0, [sp, #80]	; 0x50
   15fd4:	b	15ee8 <__assert_fail@plt+0x4bb8>
   15fd8:	b	15fdc <__assert_fail@plt+0x4cac>
   15fdc:	ldr	r0, [sp, #88]	; 0x58
   15fe0:	bl	11138 <iswprint@plt>
   15fe4:	cmp	r0, #0
   15fe8:	bne	15ff4 <__assert_fail@plt+0x4cc4>
   15fec:	movw	r0, #0
   15ff0:	strb	r0, [fp, #-73]	; 0xffffffb7
   15ff4:	ldr	r0, [sp, #84]	; 0x54
   15ff8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15ffc:	add	r0, r1, r0
   16000:	str	r0, [fp, #-72]	; 0xffffffb8
   16004:	b	16008 <__assert_fail@plt+0x4cd8>
   16008:	b	1600c <__assert_fail@plt+0x4cdc>
   1600c:	b	16010 <__assert_fail@plt+0x4ce0>
   16010:	sub	r0, fp, #84	; 0x54
   16014:	bl	110f0 <mbsinit@plt>
   16018:	cmp	r0, #0
   1601c:	movw	r0, #0
   16020:	movne	r0, #1
   16024:	mvn	r1, #0
   16028:	eor	r0, r0, r1
   1602c:	tst	r0, #1
   16030:	bne	15dec <__assert_fail@plt+0x4abc>
   16034:	b	16038 <__assert_fail@plt+0x4d08>
   16038:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1603c:	and	r0, r0, #1
   16040:	strb	r0, [fp, #-67]	; 0xffffffbd
   16044:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16048:	movw	r1, #1
   1604c:	cmp	r1, r0
   16050:	bcc	1606c <__assert_fail@plt+0x4d3c>
   16054:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16058:	tst	r0, #1
   1605c:	beq	16380 <__assert_fail@plt+0x5050>
   16060:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   16064:	tst	r0, #1
   16068:	bne	16380 <__assert_fail@plt+0x5050>
   1606c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16070:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16074:	add	r0, r0, r1
   16078:	str	r0, [sp, #76]	; 0x4c
   1607c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16080:	tst	r0, #1
   16084:	beq	16234 <__assert_fail@plt+0x4f04>
   16088:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1608c:	tst	r0, #1
   16090:	bne	16234 <__assert_fail@plt+0x4f04>
   16094:	b	16098 <__assert_fail@plt+0x4d68>
   16098:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1609c:	tst	r0, #1
   160a0:	beq	160a8 <__assert_fail@plt+0x4d78>
   160a4:	b	16778 <__assert_fail@plt+0x5448>
   160a8:	movw	r0, #1
   160ac:	strb	r0, [fp, #-66]	; 0xffffffbe
   160b0:	ldr	r0, [fp, #8]
   160b4:	cmp	r0, #2
   160b8:	bne	1616c <__assert_fail@plt+0x4e3c>
   160bc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   160c0:	tst	r0, #1
   160c4:	bne	1616c <__assert_fail@plt+0x4e3c>
   160c8:	b	160cc <__assert_fail@plt+0x4d9c>
   160cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   160d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   160d4:	cmp	r0, r1
   160d8:	bcs	160f0 <__assert_fail@plt+0x4dc0>
   160dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   160e4:	add	r0, r0, r1
   160e8:	movw	r1, #39	; 0x27
   160ec:	strb	r1, [r0]
   160f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   160f4:	add	r0, r0, #1
   160f8:	str	r0, [fp, #-44]	; 0xffffffd4
   160fc:	b	16100 <__assert_fail@plt+0x4dd0>
   16100:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16104:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16108:	cmp	r0, r1
   1610c:	bcs	16124 <__assert_fail@plt+0x4df4>
   16110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16114:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16118:	add	r0, r0, r1
   1611c:	movw	r1, #36	; 0x24
   16120:	strb	r1, [r0]
   16124:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16128:	add	r0, r0, #1
   1612c:	str	r0, [fp, #-44]	; 0xffffffd4
   16130:	b	16134 <__assert_fail@plt+0x4e04>
   16134:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16138:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1613c:	cmp	r0, r1
   16140:	bcs	16158 <__assert_fail@plt+0x4e28>
   16144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16148:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1614c:	add	r0, r0, r1
   16150:	movw	r1, #39	; 0x27
   16154:	strb	r1, [r0]
   16158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1615c:	add	r0, r0, #1
   16160:	str	r0, [fp, #-44]	; 0xffffffd4
   16164:	movw	r0, #1
   16168:	strb	r0, [fp, #-60]	; 0xffffffc4
   1616c:	b	16170 <__assert_fail@plt+0x4e40>
   16170:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16174:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16178:	cmp	r0, r1
   1617c:	bcs	16194 <__assert_fail@plt+0x4e64>
   16180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16184:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16188:	add	r0, r0, r1
   1618c:	movw	r1, #92	; 0x5c
   16190:	strb	r1, [r0]
   16194:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16198:	add	r0, r0, #1
   1619c:	str	r0, [fp, #-44]	; 0xffffffd4
   161a0:	b	161a4 <__assert_fail@plt+0x4e74>
   161a4:	b	161a8 <__assert_fail@plt+0x4e78>
   161a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   161b0:	cmp	r0, r1
   161b4:	bcs	161d4 <__assert_fail@plt+0x4ea4>
   161b8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   161bc:	asr	r0, r0, #6
   161c0:	add	r0, r0, #48	; 0x30
   161c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   161c8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   161cc:	add	r1, r1, r2
   161d0:	strb	r0, [r1]
   161d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161d8:	add	r0, r0, #1
   161dc:	str	r0, [fp, #-44]	; 0xffffffd4
   161e0:	b	161e4 <__assert_fail@plt+0x4eb4>
   161e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   161ec:	cmp	r0, r1
   161f0:	bcs	16214 <__assert_fail@plt+0x4ee4>
   161f4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   161f8:	asr	r0, r0, #3
   161fc:	and	r0, r0, #7
   16200:	add	r0, r0, #48	; 0x30
   16204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16208:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1620c:	add	r1, r1, r2
   16210:	strb	r0, [r1]
   16214:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16218:	add	r0, r0, #1
   1621c:	str	r0, [fp, #-44]	; 0xffffffd4
   16220:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16224:	and	r0, r0, #7
   16228:	add	r0, r0, #48	; 0x30
   1622c:	strb	r0, [fp, #-63]	; 0xffffffc1
   16230:	b	16280 <__assert_fail@plt+0x4f50>
   16234:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   16238:	tst	r0, #1
   1623c:	beq	1627c <__assert_fail@plt+0x4f4c>
   16240:	b	16244 <__assert_fail@plt+0x4f14>
   16244:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16248:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1624c:	cmp	r0, r1
   16250:	bcs	16268 <__assert_fail@plt+0x4f38>
   16254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16258:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1625c:	add	r0, r0, r1
   16260:	movw	r1, #92	; 0x5c
   16264:	strb	r1, [r0]
   16268:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1626c:	add	r0, r0, #1
   16270:	str	r0, [fp, #-44]	; 0xffffffd4
   16274:	movw	r0, #0
   16278:	strb	r0, [fp, #-65]	; 0xffffffbf
   1627c:	b	16280 <__assert_fail@plt+0x4f50>
   16280:	ldr	r0, [sp, #76]	; 0x4c
   16284:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16288:	add	r1, r1, #1
   1628c:	cmp	r0, r1
   16290:	bhi	16298 <__assert_fail@plt+0x4f68>
   16294:	b	1637c <__assert_fail@plt+0x504c>
   16298:	b	1629c <__assert_fail@plt+0x4f6c>
   1629c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   162a0:	tst	r0, #1
   162a4:	beq	16324 <__assert_fail@plt+0x4ff4>
   162a8:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   162ac:	tst	r0, #1
   162b0:	bne	16324 <__assert_fail@plt+0x4ff4>
   162b4:	b	162b8 <__assert_fail@plt+0x4f88>
   162b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   162c0:	cmp	r0, r1
   162c4:	bcs	162dc <__assert_fail@plt+0x4fac>
   162c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   162d0:	add	r0, r0, r1
   162d4:	movw	r1, #39	; 0x27
   162d8:	strb	r1, [r0]
   162dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162e0:	add	r0, r0, #1
   162e4:	str	r0, [fp, #-44]	; 0xffffffd4
   162e8:	b	162ec <__assert_fail@plt+0x4fbc>
   162ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   162f4:	cmp	r0, r1
   162f8:	bcs	16310 <__assert_fail@plt+0x4fe0>
   162fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16300:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16304:	add	r0, r0, r1
   16308:	movw	r1, #39	; 0x27
   1630c:	strb	r1, [r0]
   16310:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16314:	add	r0, r0, #1
   16318:	str	r0, [fp, #-44]	; 0xffffffd4
   1631c:	movw	r0, #0
   16320:	strb	r0, [fp, #-60]	; 0xffffffc4
   16324:	b	16328 <__assert_fail@plt+0x4ff8>
   16328:	b	1632c <__assert_fail@plt+0x4ffc>
   1632c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16330:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16334:	cmp	r0, r1
   16338:	bcs	16350 <__assert_fail@plt+0x5020>
   1633c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16340:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16344:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16348:	add	r1, r1, r2
   1634c:	strb	r0, [r1]
   16350:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16354:	add	r0, r0, #1
   16358:	str	r0, [fp, #-44]	; 0xffffffd4
   1635c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16360:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16364:	add	r1, r1, #1
   16368:	str	r1, [fp, #-40]	; 0xffffffd8
   1636c:	add	r0, r0, r1
   16370:	ldrb	r0, [r0]
   16374:	strb	r0, [fp, #-63]	; 0xffffffc1
   16378:	b	1607c <__assert_fail@plt+0x4d4c>
   1637c:	b	1650c <__assert_fail@plt+0x51dc>
   16380:	b	16384 <__assert_fail@plt+0x5054>
   16384:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16388:	tst	r0, #1
   1638c:	beq	1639c <__assert_fail@plt+0x506c>
   16390:	ldr	r0, [fp, #8]
   16394:	cmp	r0, #2
   16398:	bne	163a8 <__assert_fail@plt+0x5078>
   1639c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   163a0:	tst	r0, #1
   163a4:	beq	163e4 <__assert_fail@plt+0x50b4>
   163a8:	ldr	r0, [fp, #16]
   163ac:	movw	r1, #0
   163b0:	cmp	r0, r1
   163b4:	beq	163e4 <__assert_fail@plt+0x50b4>
   163b8:	ldr	r0, [fp, #16]
   163bc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   163c0:	lsr	r1, r1, #5
   163c4:	add	r0, r0, r1, lsl #2
   163c8:	ldr	r0, [r0]
   163cc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   163d0:	and	r1, r1, #31
   163d4:	lsr	r0, r0, r1
   163d8:	and	r0, r0, #1
   163dc:	cmp	r0, #0
   163e0:	bne	163f4 <__assert_fail@plt+0x50c4>
   163e4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   163e8:	tst	r0, #1
   163ec:	bne	163f4 <__assert_fail@plt+0x50c4>
   163f0:	b	1650c <__assert_fail@plt+0x51dc>
   163f4:	b	163f8 <__assert_fail@plt+0x50c8>
   163f8:	b	163fc <__assert_fail@plt+0x50cc>
   163fc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16400:	tst	r0, #1
   16404:	beq	1640c <__assert_fail@plt+0x50dc>
   16408:	b	16778 <__assert_fail@plt+0x5448>
   1640c:	movw	r0, #1
   16410:	strb	r0, [fp, #-66]	; 0xffffffbe
   16414:	ldr	r0, [fp, #8]
   16418:	cmp	r0, #2
   1641c:	bne	164d0 <__assert_fail@plt+0x51a0>
   16420:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16424:	tst	r0, #1
   16428:	bne	164d0 <__assert_fail@plt+0x51a0>
   1642c:	b	16430 <__assert_fail@plt+0x5100>
   16430:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16434:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16438:	cmp	r0, r1
   1643c:	bcs	16454 <__assert_fail@plt+0x5124>
   16440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16444:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16448:	add	r0, r0, r1
   1644c:	movw	r1, #39	; 0x27
   16450:	strb	r1, [r0]
   16454:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16458:	add	r0, r0, #1
   1645c:	str	r0, [fp, #-44]	; 0xffffffd4
   16460:	b	16464 <__assert_fail@plt+0x5134>
   16464:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16468:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1646c:	cmp	r0, r1
   16470:	bcs	16488 <__assert_fail@plt+0x5158>
   16474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16478:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1647c:	add	r0, r0, r1
   16480:	movw	r1, #36	; 0x24
   16484:	strb	r1, [r0]
   16488:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1648c:	add	r0, r0, #1
   16490:	str	r0, [fp, #-44]	; 0xffffffd4
   16494:	b	16498 <__assert_fail@plt+0x5168>
   16498:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1649c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   164a0:	cmp	r0, r1
   164a4:	bcs	164bc <__assert_fail@plt+0x518c>
   164a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   164b0:	add	r0, r0, r1
   164b4:	movw	r1, #39	; 0x27
   164b8:	strb	r1, [r0]
   164bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164c0:	add	r0, r0, #1
   164c4:	str	r0, [fp, #-44]	; 0xffffffd4
   164c8:	movw	r0, #1
   164cc:	strb	r0, [fp, #-60]	; 0xffffffc4
   164d0:	b	164d4 <__assert_fail@plt+0x51a4>
   164d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   164dc:	cmp	r0, r1
   164e0:	bcs	164f8 <__assert_fail@plt+0x51c8>
   164e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   164ec:	add	r0, r0, r1
   164f0:	movw	r1, #92	; 0x5c
   164f4:	strb	r1, [r0]
   164f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164fc:	add	r0, r0, #1
   16500:	str	r0, [fp, #-44]	; 0xffffffd4
   16504:	b	16508 <__assert_fail@plt+0x51d8>
   16508:	b	1650c <__assert_fail@plt+0x51dc>
   1650c:	b	16510 <__assert_fail@plt+0x51e0>
   16510:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16514:	tst	r0, #1
   16518:	beq	16598 <__assert_fail@plt+0x5268>
   1651c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   16520:	tst	r0, #1
   16524:	bne	16598 <__assert_fail@plt+0x5268>
   16528:	b	1652c <__assert_fail@plt+0x51fc>
   1652c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16530:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16534:	cmp	r0, r1
   16538:	bcs	16550 <__assert_fail@plt+0x5220>
   1653c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16540:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16544:	add	r0, r0, r1
   16548:	movw	r1, #39	; 0x27
   1654c:	strb	r1, [r0]
   16550:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16554:	add	r0, r0, #1
   16558:	str	r0, [fp, #-44]	; 0xffffffd4
   1655c:	b	16560 <__assert_fail@plt+0x5230>
   16560:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16564:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16568:	cmp	r0, r1
   1656c:	bcs	16584 <__assert_fail@plt+0x5254>
   16570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16574:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16578:	add	r0, r0, r1
   1657c:	movw	r1, #39	; 0x27
   16580:	strb	r1, [r0]
   16584:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16588:	add	r0, r0, #1
   1658c:	str	r0, [fp, #-44]	; 0xffffffd4
   16590:	movw	r0, #0
   16594:	strb	r0, [fp, #-60]	; 0xffffffc4
   16598:	b	1659c <__assert_fail@plt+0x526c>
   1659c:	b	165a0 <__assert_fail@plt+0x5270>
   165a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   165a8:	cmp	r0, r1
   165ac:	bcs	165c4 <__assert_fail@plt+0x5294>
   165b0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   165b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   165bc:	add	r1, r1, r2
   165c0:	strb	r0, [r1]
   165c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165c8:	add	r0, r0, #1
   165cc:	str	r0, [fp, #-44]	; 0xffffffd4
   165d0:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   165d4:	tst	r0, #1
   165d8:	bne	165e4 <__assert_fail@plt+0x52b4>
   165dc:	movw	r0, #0
   165e0:	strb	r0, [fp, #-62]	; 0xffffffc2
   165e4:	b	165e8 <__assert_fail@plt+0x52b8>
   165e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   165ec:	add	r0, r0, #1
   165f0:	str	r0, [fp, #-40]	; 0xffffffd8
   165f4:	b	153a0 <__assert_fail@plt+0x4070>
   165f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165fc:	cmp	r0, #0
   16600:	bne	16620 <__assert_fail@plt+0x52f0>
   16604:	ldr	r0, [fp, #8]
   16608:	cmp	r0, #2
   1660c:	bne	16620 <__assert_fail@plt+0x52f0>
   16610:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16614:	tst	r0, #1
   16618:	beq	16620 <__assert_fail@plt+0x52f0>
   1661c:	b	16778 <__assert_fail@plt+0x5448>
   16620:	ldr	r0, [fp, #8]
   16624:	cmp	r0, #2
   16628:	bne	166c8 <__assert_fail@plt+0x5398>
   1662c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16630:	tst	r0, #1
   16634:	bne	166c8 <__assert_fail@plt+0x5398>
   16638:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1663c:	tst	r0, #1
   16640:	beq	166c8 <__assert_fail@plt+0x5398>
   16644:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   16648:	tst	r0, #1
   1664c:	beq	16694 <__assert_fail@plt+0x5364>
   16650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16654:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16658:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1665c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16660:	ldr	ip, [fp, #12]
   16664:	ldr	lr, [fp, #16]
   16668:	ldr	r4, [fp, #20]
   1666c:	ldr	r5, [fp, #24]
   16670:	movw	r6, #5
   16674:	str	r6, [sp]
   16678:	str	ip, [sp, #4]
   1667c:	str	lr, [sp, #8]
   16680:	str	r4, [sp, #12]
   16684:	str	r5, [sp, #16]
   16688:	bl	150b8 <__assert_fail@plt+0x3d88>
   1668c:	str	r0, [fp, #-20]	; 0xffffffec
   16690:	b	167e0 <__assert_fail@plt+0x54b0>
   16694:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16698:	cmp	r0, #0
   1669c:	bne	166c0 <__assert_fail@plt+0x5390>
   166a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   166a4:	cmp	r0, #0
   166a8:	beq	166c0 <__assert_fail@plt+0x5390>
   166ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   166b0:	str	r0, [fp, #-28]	; 0xffffffe4
   166b4:	movw	r0, #0
   166b8:	str	r0, [fp, #-44]	; 0xffffffd4
   166bc:	b	15160 <__assert_fail@plt+0x3e30>
   166c0:	b	166c4 <__assert_fail@plt+0x5394>
   166c4:	b	166c8 <__assert_fail@plt+0x5398>
   166c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   166cc:	movw	r1, #0
   166d0:	cmp	r0, r1
   166d4:	beq	16748 <__assert_fail@plt+0x5418>
   166d8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   166dc:	tst	r0, #1
   166e0:	bne	16748 <__assert_fail@plt+0x5418>
   166e4:	b	166e8 <__assert_fail@plt+0x53b8>
   166e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   166ec:	ldrsb	r0, [r0]
   166f0:	cmp	r0, #0
   166f4:	beq	16744 <__assert_fail@plt+0x5414>
   166f8:	b	166fc <__assert_fail@plt+0x53cc>
   166fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16700:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16704:	cmp	r0, r1
   16708:	bcs	16724 <__assert_fail@plt+0x53f4>
   1670c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16710:	ldrb	r0, [r0]
   16714:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16718:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1671c:	add	r1, r1, r2
   16720:	strb	r0, [r1]
   16724:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16728:	add	r0, r0, #1
   1672c:	str	r0, [fp, #-44]	; 0xffffffd4
   16730:	b	16734 <__assert_fail@plt+0x5404>
   16734:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16738:	add	r0, r0, #1
   1673c:	str	r0, [fp, #-52]	; 0xffffffcc
   16740:	b	166e8 <__assert_fail@plt+0x53b8>
   16744:	b	16748 <__assert_fail@plt+0x5418>
   16748:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1674c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16750:	cmp	r0, r1
   16754:	bcs	1676c <__assert_fail@plt+0x543c>
   16758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1675c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16760:	add	r0, r0, r1
   16764:	movw	r1, #0
   16768:	strb	r1, [r0]
   1676c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16770:	str	r0, [fp, #-20]	; 0xffffffec
   16774:	b	167e0 <__assert_fail@plt+0x54b0>
   16778:	ldr	r0, [fp, #8]
   1677c:	cmp	r0, #2
   16780:	bne	16798 <__assert_fail@plt+0x5468>
   16784:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16788:	tst	r0, #1
   1678c:	beq	16798 <__assert_fail@plt+0x5468>
   16790:	movw	r0, #4
   16794:	str	r0, [fp, #8]
   16798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1679c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   167a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   167a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   167a8:	ldr	ip, [fp, #8]
   167ac:	ldr	lr, [fp, #12]
   167b0:	mvn	r4, #2
   167b4:	and	lr, lr, r4
   167b8:	ldr	r4, [fp, #20]
   167bc:	ldr	r5, [fp, #24]
   167c0:	str	ip, [sp]
   167c4:	str	lr, [sp, #4]
   167c8:	movw	ip, #0
   167cc:	str	ip, [sp, #8]
   167d0:	str	r4, [sp, #12]
   167d4:	str	r5, [sp, #16]
   167d8:	bl	150b8 <__assert_fail@plt+0x3d88>
   167dc:	str	r0, [fp, #-20]	; 0xffffffec
   167e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   167e4:	sub	sp, fp, #16
   167e8:	pop	{r4, r5, r6, sl, fp, pc}
   167ec:	push	{fp, lr}
   167f0:	mov	fp, sp
   167f4:	sub	sp, sp, #16
   167f8:	str	r0, [fp, #-4]
   167fc:	str	r1, [sp, #8]
   16800:	str	r2, [sp, #4]
   16804:	ldr	r0, [fp, #-4]
   16808:	ldr	r1, [sp, #8]
   1680c:	ldr	r3, [sp, #4]
   16810:	movw	r2, #0
   16814:	bl	16820 <__assert_fail@plt+0x54f0>
   16818:	mov	sp, fp
   1681c:	pop	{fp, pc}
   16820:	push	{r4, r5, r6, sl, fp, lr}
   16824:	add	fp, sp, #16
   16828:	sub	sp, sp, #80	; 0x50
   1682c:	str	r0, [fp, #-20]	; 0xffffffec
   16830:	str	r1, [fp, #-24]	; 0xffffffe8
   16834:	str	r2, [fp, #-28]	; 0xffffffe4
   16838:	str	r3, [fp, #-32]	; 0xffffffe0
   1683c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16840:	movw	r1, #0
   16844:	cmp	r0, r1
   16848:	beq	16858 <__assert_fail@plt+0x5528>
   1684c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16850:	str	r0, [sp, #40]	; 0x28
   16854:	b	16868 <__assert_fail@plt+0x5538>
   16858:	movw	r0, #12812	; 0x320c
   1685c:	movt	r0, #3
   16860:	str	r0, [sp, #40]	; 0x28
   16864:	b	16868 <__assert_fail@plt+0x5538>
   16868:	ldr	r0, [sp, #40]	; 0x28
   1686c:	str	r0, [fp, #-36]	; 0xffffffdc
   16870:	bl	11228 <__errno_location@plt>
   16874:	ldr	r0, [r0]
   16878:	str	r0, [fp, #-40]	; 0xffffffd8
   1687c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16880:	ldr	r0, [r0, #4]
   16884:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16888:	movw	r2, #0
   1688c:	cmp	r1, r2
   16890:	movw	r1, #0
   16894:	movne	r1, #1
   16898:	tst	r1, #1
   1689c:	mov	r1, r2
   168a0:	moveq	r1, #1
   168a4:	orr	r0, r0, r1
   168a8:	str	r0, [fp, #-44]	; 0xffffffd4
   168ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   168b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   168b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   168b8:	ldr	r1, [r1]
   168bc:	ldr	ip, [fp, #-44]	; 0xffffffd4
   168c0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   168c4:	add	lr, lr, #8
   168c8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   168cc:	ldr	r4, [r4, #40]	; 0x28
   168d0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   168d4:	ldr	r5, [r5, #44]	; 0x2c
   168d8:	str	r0, [sp, #36]	; 0x24
   168dc:	mov	r0, r2
   168e0:	str	r1, [sp, #32]
   168e4:	mov	r1, r2
   168e8:	ldr	r2, [sp, #36]	; 0x24
   168ec:	ldr	r6, [sp, #32]
   168f0:	str	r6, [sp]
   168f4:	str	ip, [sp, #4]
   168f8:	str	lr, [sp, #8]
   168fc:	str	r4, [sp, #12]
   16900:	str	r5, [sp, #16]
   16904:	bl	150b8 <__assert_fail@plt+0x3d88>
   16908:	add	r0, r0, #1
   1690c:	str	r0, [sp, #48]	; 0x30
   16910:	ldr	r0, [sp, #48]	; 0x30
   16914:	bl	17e88 <__assert_fail@plt+0x6b58>
   16918:	str	r0, [sp, #44]	; 0x2c
   1691c:	ldr	r0, [sp, #44]	; 0x2c
   16920:	ldr	r1, [sp, #48]	; 0x30
   16924:	ldr	r2, [fp, #-20]	; 0xffffffec
   16928:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1692c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16930:	ldr	ip, [ip]
   16934:	ldr	lr, [fp, #-44]	; 0xffffffd4
   16938:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1693c:	add	r4, r4, #8
   16940:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16944:	ldr	r5, [r5, #40]	; 0x28
   16948:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1694c:	ldr	r6, [r6, #44]	; 0x2c
   16950:	str	ip, [sp]
   16954:	str	lr, [sp, #4]
   16958:	str	r4, [sp, #8]
   1695c:	str	r5, [sp, #12]
   16960:	str	r6, [sp, #16]
   16964:	bl	150b8 <__assert_fail@plt+0x3d88>
   16968:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1696c:	str	r0, [sp, #28]
   16970:	str	r1, [sp, #24]
   16974:	bl	11228 <__errno_location@plt>
   16978:	ldr	r1, [sp, #24]
   1697c:	str	r1, [r0]
   16980:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16984:	movw	r2, #0
   16988:	cmp	r0, r2
   1698c:	beq	169a0 <__assert_fail@plt+0x5670>
   16990:	ldr	r0, [sp, #48]	; 0x30
   16994:	sub	r0, r0, #1
   16998:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1699c:	str	r0, [r1]
   169a0:	ldr	r0, [sp, #44]	; 0x2c
   169a4:	sub	sp, fp, #16
   169a8:	pop	{r4, r5, r6, sl, fp, pc}
   169ac:	push	{fp, lr}
   169b0:	mov	fp, sp
   169b4:	sub	sp, sp, #8
   169b8:	movw	r0, #12580	; 0x3124
   169bc:	movt	r0, #3
   169c0:	ldr	r0, [r0]
   169c4:	str	r0, [sp, #4]
   169c8:	movw	r0, #1
   169cc:	str	r0, [sp]
   169d0:	ldr	r0, [sp]
   169d4:	movw	r1, #12584	; 0x3128
   169d8:	movt	r1, #3
   169dc:	ldr	r1, [r1]
   169e0:	cmp	r0, r1
   169e4:	bge	16a0c <__assert_fail@plt+0x56dc>
   169e8:	ldr	r0, [sp, #4]
   169ec:	ldr	r1, [sp]
   169f0:	add	r0, r0, r1, lsl #3
   169f4:	ldr	r0, [r0, #4]
   169f8:	bl	1476c <__assert_fail@plt+0x343c>
   169fc:	ldr	r0, [sp]
   16a00:	add	r0, r0, #1
   16a04:	str	r0, [sp]
   16a08:	b	169d0 <__assert_fail@plt+0x56a0>
   16a0c:	ldr	r0, [sp, #4]
   16a10:	ldr	r0, [r0, #4]
   16a14:	movw	r1, #12860	; 0x323c
   16a18:	movt	r1, #3
   16a1c:	cmp	r0, r1
   16a20:	beq	16a4c <__assert_fail@plt+0x571c>
   16a24:	ldr	r0, [sp, #4]
   16a28:	ldr	r0, [r0, #4]
   16a2c:	bl	1476c <__assert_fail@plt+0x343c>
   16a30:	movw	r0, #256	; 0x100
   16a34:	movw	r1, #12588	; 0x312c
   16a38:	movt	r1, #3
   16a3c:	str	r0, [r1]
   16a40:	movw	r0, #12860	; 0x323c
   16a44:	movt	r0, #3
   16a48:	str	r0, [r1, #4]
   16a4c:	ldr	r0, [sp, #4]
   16a50:	movw	r1, #12588	; 0x312c
   16a54:	movt	r1, #3
   16a58:	cmp	r0, r1
   16a5c:	beq	16a7c <__assert_fail@plt+0x574c>
   16a60:	ldr	r0, [sp, #4]
   16a64:	bl	1476c <__assert_fail@plt+0x343c>
   16a68:	movw	r0, #12580	; 0x3124
   16a6c:	movt	r0, #3
   16a70:	movw	r1, #12588	; 0x312c
   16a74:	movt	r1, #3
   16a78:	str	r1, [r0]
   16a7c:	movw	r0, #12584	; 0x3128
   16a80:	movt	r0, #3
   16a84:	movw	r1, #1
   16a88:	str	r1, [r0]
   16a8c:	mov	sp, fp
   16a90:	pop	{fp, pc}
   16a94:	push	{fp, lr}
   16a98:	mov	fp, sp
   16a9c:	sub	sp, sp, #8
   16aa0:	str	r0, [sp, #4]
   16aa4:	str	r1, [sp]
   16aa8:	ldr	r0, [sp, #4]
   16aac:	ldr	r1, [sp]
   16ab0:	mvn	r2, #0
   16ab4:	movw	r3, #12812	; 0x320c
   16ab8:	movt	r3, #3
   16abc:	bl	16ac8 <__assert_fail@plt+0x5798>
   16ac0:	mov	sp, fp
   16ac4:	pop	{fp, pc}
   16ac8:	push	{r4, r5, r6, sl, fp, lr}
   16acc:	add	fp, sp, #16
   16ad0:	sub	sp, sp, #80	; 0x50
   16ad4:	str	r0, [fp, #-20]	; 0xffffffec
   16ad8:	str	r1, [fp, #-24]	; 0xffffffe8
   16adc:	str	r2, [fp, #-28]	; 0xffffffe4
   16ae0:	str	r3, [fp, #-32]	; 0xffffffe0
   16ae4:	bl	11228 <__errno_location@plt>
   16ae8:	ldr	r1, [pc, #672]	; 16d90 <__assert_fail@plt+0x5a60>
   16aec:	ldr	r0, [r0]
   16af0:	str	r0, [fp, #-36]	; 0xffffffdc
   16af4:	movw	r0, #12580	; 0x3124
   16af8:	movt	r0, #3
   16afc:	ldr	r0, [r0]
   16b00:	str	r0, [fp, #-40]	; 0xffffffd8
   16b04:	str	r1, [fp, #-44]	; 0xffffffd4
   16b08:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b0c:	movw	r1, #0
   16b10:	cmp	r1, r0
   16b14:	bgt	16b28 <__assert_fail@plt+0x57f8>
   16b18:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16b20:	cmp	r0, r1
   16b24:	blt	16b2c <__assert_fail@plt+0x57fc>
   16b28:	bl	11300 <abort@plt>
   16b2c:	movw	r0, #12584	; 0x3128
   16b30:	movt	r0, #3
   16b34:	ldr	r0, [r0]
   16b38:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b3c:	cmp	r0, r1
   16b40:	bgt	16c38 <__assert_fail@plt+0x5908>
   16b44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16b48:	movw	r1, #12588	; 0x312c
   16b4c:	movt	r1, #3
   16b50:	cmp	r0, r1
   16b54:	movw	r0, #0
   16b58:	moveq	r0, #1
   16b5c:	and	r0, r0, #1
   16b60:	strb	r0, [fp, #-45]	; 0xffffffd3
   16b64:	movw	r0, #12584	; 0x3128
   16b68:	movt	r0, #3
   16b6c:	ldr	r0, [r0]
   16b70:	str	r0, [sp, #44]	; 0x2c
   16b74:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16b78:	tst	r0, #1
   16b7c:	beq	16b8c <__assert_fail@plt+0x585c>
   16b80:	movw	r0, #0
   16b84:	str	r0, [sp, #24]
   16b88:	b	16b94 <__assert_fail@plt+0x5864>
   16b8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16b90:	str	r0, [sp, #24]
   16b94:	ldr	r0, [sp, #24]
   16b98:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b9c:	movw	r2, #12584	; 0x3128
   16ba0:	movt	r2, #3
   16ba4:	ldr	r2, [r2]
   16ba8:	sub	r1, r1, r2
   16bac:	add	r2, r1, #1
   16bb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16bb4:	add	r1, sp, #44	; 0x2c
   16bb8:	movw	ip, #8
   16bbc:	str	ip, [sp]
   16bc0:	bl	180c4 <__assert_fail@plt+0x6d94>
   16bc4:	str	r0, [fp, #-40]	; 0xffffffd8
   16bc8:	movw	r1, #12580	; 0x3124
   16bcc:	movt	r1, #3
   16bd0:	str	r0, [r1]
   16bd4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16bd8:	tst	r0, #1
   16bdc:	beq	16bfc <__assert_fail@plt+0x58cc>
   16be0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16be4:	movw	r1, #12588	; 0x312c
   16be8:	movt	r1, #3
   16bec:	ldr	r2, [r1]
   16bf0:	str	r2, [r0]
   16bf4:	ldr	r1, [r1, #4]
   16bf8:	str	r1, [r0, #4]
   16bfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c00:	movw	r1, #12584	; 0x3128
   16c04:	movt	r1, #3
   16c08:	ldr	r1, [r1]
   16c0c:	add	r0, r0, r1, lsl #3
   16c10:	ldr	r2, [sp, #44]	; 0x2c
   16c14:	sub	r1, r2, r1
   16c18:	lsl	r2, r1, #3
   16c1c:	movw	r1, #0
   16c20:	and	r1, r1, #255	; 0xff
   16c24:	bl	11240 <memset@plt>
   16c28:	ldr	r0, [sp, #44]	; 0x2c
   16c2c:	movw	r1, #12584	; 0x3128
   16c30:	movt	r1, #3
   16c34:	str	r0, [r1]
   16c38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c40:	ldr	r0, [r0, r1, lsl #3]
   16c44:	str	r0, [sp, #40]	; 0x28
   16c48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c50:	add	r0, r0, r1, lsl #3
   16c54:	ldr	r0, [r0, #4]
   16c58:	str	r0, [sp, #36]	; 0x24
   16c5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c60:	ldr	r0, [r0, #4]
   16c64:	orr	r0, r0, #1
   16c68:	str	r0, [sp, #32]
   16c6c:	ldr	r0, [sp, #36]	; 0x24
   16c70:	ldr	r1, [sp, #40]	; 0x28
   16c74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16c7c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16c80:	ldr	ip, [ip]
   16c84:	ldr	lr, [sp, #32]
   16c88:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16c8c:	add	r4, r4, #8
   16c90:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16c94:	ldr	r5, [r5, #40]	; 0x28
   16c98:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16c9c:	ldr	r6, [r6, #44]	; 0x2c
   16ca0:	str	ip, [sp]
   16ca4:	str	lr, [sp, #4]
   16ca8:	str	r4, [sp, #8]
   16cac:	str	r5, [sp, #12]
   16cb0:	str	r6, [sp, #16]
   16cb4:	bl	150b8 <__assert_fail@plt+0x3d88>
   16cb8:	str	r0, [sp, #28]
   16cbc:	ldr	r0, [sp, #40]	; 0x28
   16cc0:	ldr	r1, [sp, #28]
   16cc4:	cmp	r0, r1
   16cc8:	bhi	16d70 <__assert_fail@plt+0x5a40>
   16ccc:	ldr	r0, [sp, #28]
   16cd0:	add	r0, r0, #1
   16cd4:	str	r0, [sp, #40]	; 0x28
   16cd8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16cdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   16ce0:	add	r1, r1, r2, lsl #3
   16ce4:	str	r0, [r1]
   16ce8:	ldr	r0, [sp, #36]	; 0x24
   16cec:	movw	r1, #12860	; 0x323c
   16cf0:	movt	r1, #3
   16cf4:	cmp	r0, r1
   16cf8:	beq	16d04 <__assert_fail@plt+0x59d4>
   16cfc:	ldr	r0, [sp, #36]	; 0x24
   16d00:	bl	1476c <__assert_fail@plt+0x343c>
   16d04:	ldr	r0, [sp, #40]	; 0x28
   16d08:	bl	17e88 <__assert_fail@plt+0x6b58>
   16d0c:	mov	r1, r0
   16d10:	str	r0, [sp, #36]	; 0x24
   16d14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16d18:	ldr	r2, [fp, #-20]	; 0xffffffec
   16d1c:	add	r0, r0, r2, lsl #3
   16d20:	str	r1, [r0, #4]
   16d24:	ldr	r0, [sp, #36]	; 0x24
   16d28:	ldr	r1, [sp, #40]	; 0x28
   16d2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16d30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d34:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16d38:	ldr	ip, [ip]
   16d3c:	ldr	lr, [sp, #32]
   16d40:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16d44:	add	r4, r4, #8
   16d48:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16d4c:	ldr	r5, [r5, #40]	; 0x28
   16d50:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16d54:	ldr	r6, [r6, #44]	; 0x2c
   16d58:	str	ip, [sp]
   16d5c:	str	lr, [sp, #4]
   16d60:	str	r4, [sp, #8]
   16d64:	str	r5, [sp, #12]
   16d68:	str	r6, [sp, #16]
   16d6c:	bl	150b8 <__assert_fail@plt+0x3d88>
   16d70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16d74:	str	r0, [sp, #20]
   16d78:	bl	11228 <__errno_location@plt>
   16d7c:	ldr	r1, [sp, #20]
   16d80:	str	r1, [r0]
   16d84:	ldr	r0, [sp, #36]	; 0x24
   16d88:	sub	sp, fp, #16
   16d8c:	pop	{r4, r5, r6, sl, fp, pc}
   16d90:	svcvc	0x00ffffff
   16d94:	push	{fp, lr}
   16d98:	mov	fp, sp
   16d9c:	sub	sp, sp, #16
   16da0:	str	r0, [fp, #-4]
   16da4:	str	r1, [sp, #8]
   16da8:	str	r2, [sp, #4]
   16dac:	ldr	r0, [fp, #-4]
   16db0:	ldr	r1, [sp, #8]
   16db4:	ldr	r2, [sp, #4]
   16db8:	movw	r3, #12812	; 0x320c
   16dbc:	movt	r3, #3
   16dc0:	bl	16ac8 <__assert_fail@plt+0x5798>
   16dc4:	mov	sp, fp
   16dc8:	pop	{fp, pc}
   16dcc:	push	{fp, lr}
   16dd0:	mov	fp, sp
   16dd4:	sub	sp, sp, #8
   16dd8:	str	r0, [sp, #4]
   16ddc:	ldr	r1, [sp, #4]
   16de0:	movw	r0, #0
   16de4:	bl	16a94 <__assert_fail@plt+0x5764>
   16de8:	mov	sp, fp
   16dec:	pop	{fp, pc}
   16df0:	push	{fp, lr}
   16df4:	mov	fp, sp
   16df8:	sub	sp, sp, #8
   16dfc:	str	r0, [sp, #4]
   16e00:	str	r1, [sp]
   16e04:	ldr	r1, [sp, #4]
   16e08:	ldr	r2, [sp]
   16e0c:	movw	r0, #0
   16e10:	bl	16d94 <__assert_fail@plt+0x5a64>
   16e14:	mov	sp, fp
   16e18:	pop	{fp, pc}
   16e1c:	push	{fp, lr}
   16e20:	mov	fp, sp
   16e24:	sub	sp, sp, #64	; 0x40
   16e28:	str	r0, [fp, #-4]
   16e2c:	str	r1, [fp, #-8]
   16e30:	str	r2, [fp, #-12]
   16e34:	ldr	r1, [fp, #-8]
   16e38:	add	r0, sp, #4
   16e3c:	bl	16e5c <__assert_fail@plt+0x5b2c>
   16e40:	ldr	r0, [fp, #-4]
   16e44:	ldr	r1, [fp, #-12]
   16e48:	mvn	r2, #0
   16e4c:	add	r3, sp, #4
   16e50:	bl	16ac8 <__assert_fail@plt+0x5798>
   16e54:	mov	sp, fp
   16e58:	pop	{fp, pc}
   16e5c:	push	{fp, lr}
   16e60:	mov	fp, sp
   16e64:	sub	sp, sp, #8
   16e68:	str	r1, [sp, #4]
   16e6c:	mov	r1, r0
   16e70:	str	r0, [sp]
   16e74:	mov	r0, r1
   16e78:	movw	r1, #0
   16e7c:	and	r1, r1, #255	; 0xff
   16e80:	movw	r2, #48	; 0x30
   16e84:	bl	11240 <memset@plt>
   16e88:	ldr	r0, [sp, #4]
   16e8c:	cmp	r0, #10
   16e90:	bne	16e98 <__assert_fail@plt+0x5b68>
   16e94:	bl	11300 <abort@plt>
   16e98:	ldr	r0, [sp, #4]
   16e9c:	ldr	r1, [sp]
   16ea0:	str	r0, [r1]
   16ea4:	mov	sp, fp
   16ea8:	pop	{fp, pc}
   16eac:	push	{fp, lr}
   16eb0:	mov	fp, sp
   16eb4:	sub	sp, sp, #64	; 0x40
   16eb8:	str	r0, [fp, #-4]
   16ebc:	str	r1, [fp, #-8]
   16ec0:	str	r2, [fp, #-12]
   16ec4:	str	r3, [fp, #-16]
   16ec8:	ldr	r1, [fp, #-8]
   16ecc:	mov	r0, sp
   16ed0:	bl	16e5c <__assert_fail@plt+0x5b2c>
   16ed4:	ldr	r0, [fp, #-4]
   16ed8:	ldr	r1, [fp, #-12]
   16edc:	ldr	r2, [fp, #-16]
   16ee0:	mov	r3, sp
   16ee4:	bl	16ac8 <__assert_fail@plt+0x5798>
   16ee8:	mov	sp, fp
   16eec:	pop	{fp, pc}
   16ef0:	push	{fp, lr}
   16ef4:	mov	fp, sp
   16ef8:	sub	sp, sp, #8
   16efc:	str	r0, [sp, #4]
   16f00:	str	r1, [sp]
   16f04:	ldr	r1, [sp, #4]
   16f08:	ldr	r2, [sp]
   16f0c:	movw	r0, #0
   16f10:	bl	16e1c <__assert_fail@plt+0x5aec>
   16f14:	mov	sp, fp
   16f18:	pop	{fp, pc}
   16f1c:	push	{fp, lr}
   16f20:	mov	fp, sp
   16f24:	sub	sp, sp, #16
   16f28:	str	r0, [fp, #-4]
   16f2c:	str	r1, [sp, #8]
   16f30:	str	r2, [sp, #4]
   16f34:	ldr	r1, [fp, #-4]
   16f38:	ldr	r2, [sp, #8]
   16f3c:	ldr	r3, [sp, #4]
   16f40:	movw	r0, #0
   16f44:	bl	16eac <__assert_fail@plt+0x5b7c>
   16f48:	mov	sp, fp
   16f4c:	pop	{fp, pc}
   16f50:	push	{fp, lr}
   16f54:	mov	fp, sp
   16f58:	sub	sp, sp, #72	; 0x48
   16f5c:	movw	r3, #12812	; 0x320c
   16f60:	movt	r3, #3
   16f64:	str	r0, [fp, #-4]
   16f68:	str	r1, [fp, #-8]
   16f6c:	strb	r2, [fp, #-9]
   16f70:	add	r0, sp, #12
   16f74:	mov	r1, r0
   16f78:	str	r0, [sp, #8]
   16f7c:	mov	r0, r1
   16f80:	mov	r1, r3
   16f84:	movw	r2, #48	; 0x30
   16f88:	bl	110e4 <memcpy@plt>
   16f8c:	ldr	r0, [sp, #8]
   16f90:	ldrb	r1, [fp, #-9]
   16f94:	movw	r2, #1
   16f98:	bl	14e60 <__assert_fail@plt+0x3b30>
   16f9c:	ldr	r1, [fp, #-4]
   16fa0:	ldr	r2, [fp, #-8]
   16fa4:	movw	r3, #0
   16fa8:	str	r0, [sp, #4]
   16fac:	mov	r0, r3
   16fb0:	add	r3, sp, #12
   16fb4:	bl	16ac8 <__assert_fail@plt+0x5798>
   16fb8:	mov	sp, fp
   16fbc:	pop	{fp, pc}
   16fc0:	push	{fp, lr}
   16fc4:	mov	fp, sp
   16fc8:	sub	sp, sp, #8
   16fcc:	str	r0, [sp, #4]
   16fd0:	strb	r1, [sp, #3]
   16fd4:	ldr	r0, [sp, #4]
   16fd8:	mvn	r1, #0
   16fdc:	ldrb	r2, [sp, #3]
   16fe0:	bl	16f50 <__assert_fail@plt+0x5c20>
   16fe4:	mov	sp, fp
   16fe8:	pop	{fp, pc}
   16fec:	push	{fp, lr}
   16ff0:	mov	fp, sp
   16ff4:	sub	sp, sp, #8
   16ff8:	str	r0, [sp, #4]
   16ffc:	ldr	r0, [sp, #4]
   17000:	movw	r1, #58	; 0x3a
   17004:	and	r1, r1, #255	; 0xff
   17008:	bl	16fc0 <__assert_fail@plt+0x5c90>
   1700c:	mov	sp, fp
   17010:	pop	{fp, pc}
   17014:	push	{fp, lr}
   17018:	mov	fp, sp
   1701c:	sub	sp, sp, #8
   17020:	str	r0, [sp, #4]
   17024:	str	r1, [sp]
   17028:	ldr	r0, [sp, #4]
   1702c:	ldr	r1, [sp]
   17030:	movw	r2, #58	; 0x3a
   17034:	and	r2, r2, #255	; 0xff
   17038:	bl	16f50 <__assert_fail@plt+0x5c20>
   1703c:	mov	sp, fp
   17040:	pop	{fp, pc}
   17044:	push	{fp, lr}
   17048:	mov	fp, sp
   1704c:	sub	sp, sp, #120	; 0x78
   17050:	str	r0, [fp, #-4]
   17054:	str	r1, [fp, #-8]
   17058:	str	r2, [fp, #-12]
   1705c:	ldr	r1, [fp, #-8]
   17060:	add	r0, sp, #12
   17064:	bl	16e5c <__assert_fail@plt+0x5b2c>
   17068:	add	r0, sp, #60	; 0x3c
   1706c:	mov	r1, r0
   17070:	add	r2, sp, #12
   17074:	str	r0, [sp, #8]
   17078:	mov	r0, r1
   1707c:	mov	r1, r2
   17080:	movw	r2, #48	; 0x30
   17084:	bl	110e4 <memcpy@plt>
   17088:	ldr	r0, [sp, #8]
   1708c:	movw	r1, #58	; 0x3a
   17090:	and	r1, r1, #255	; 0xff
   17094:	movw	r2, #1
   17098:	bl	14e60 <__assert_fail@plt+0x3b30>
   1709c:	ldr	r1, [fp, #-4]
   170a0:	ldr	r2, [fp, #-12]
   170a4:	str	r0, [sp, #4]
   170a8:	mov	r0, r1
   170ac:	mov	r1, r2
   170b0:	mvn	r2, #0
   170b4:	add	r3, sp, #60	; 0x3c
   170b8:	bl	16ac8 <__assert_fail@plt+0x5798>
   170bc:	mov	sp, fp
   170c0:	pop	{fp, pc}
   170c4:	push	{fp, lr}
   170c8:	mov	fp, sp
   170cc:	sub	sp, sp, #24
   170d0:	str	r0, [fp, #-4]
   170d4:	str	r1, [fp, #-8]
   170d8:	str	r2, [sp, #12]
   170dc:	str	r3, [sp, #8]
   170e0:	ldr	r0, [fp, #-4]
   170e4:	ldr	r1, [fp, #-8]
   170e8:	ldr	r2, [sp, #12]
   170ec:	ldr	r3, [sp, #8]
   170f0:	mvn	ip, #0
   170f4:	str	ip, [sp]
   170f8:	bl	17104 <__assert_fail@plt+0x5dd4>
   170fc:	mov	sp, fp
   17100:	pop	{fp, pc}
   17104:	push	{fp, lr}
   17108:	mov	fp, sp
   1710c:	sub	sp, sp, #72	; 0x48
   17110:	ldr	ip, [fp, #8]
   17114:	movw	lr, #12812	; 0x320c
   17118:	movt	lr, #3
   1711c:	str	r0, [fp, #-4]
   17120:	str	r1, [fp, #-8]
   17124:	str	r2, [fp, #-12]
   17128:	str	r3, [fp, #-16]
   1712c:	add	r0, sp, #8
   17130:	mov	r1, r0
   17134:	str	r0, [sp, #4]
   17138:	mov	r0, r1
   1713c:	mov	r1, lr
   17140:	movw	r2, #48	; 0x30
   17144:	str	ip, [sp]
   17148:	bl	110e4 <memcpy@plt>
   1714c:	ldr	r1, [fp, #-8]
   17150:	ldr	r2, [fp, #-12]
   17154:	ldr	r0, [sp, #4]
   17158:	bl	14f60 <__assert_fail@plt+0x3c30>
   1715c:	ldr	r0, [fp, #-4]
   17160:	ldr	r1, [fp, #-16]
   17164:	ldr	r2, [fp, #8]
   17168:	add	r3, sp, #8
   1716c:	bl	16ac8 <__assert_fail@plt+0x5798>
   17170:	mov	sp, fp
   17174:	pop	{fp, pc}
   17178:	push	{fp, lr}
   1717c:	mov	fp, sp
   17180:	sub	sp, sp, #16
   17184:	str	r0, [fp, #-4]
   17188:	str	r1, [sp, #8]
   1718c:	str	r2, [sp, #4]
   17190:	ldr	r1, [fp, #-4]
   17194:	ldr	r2, [sp, #8]
   17198:	ldr	r3, [sp, #4]
   1719c:	movw	r0, #0
   171a0:	bl	170c4 <__assert_fail@plt+0x5d94>
   171a4:	mov	sp, fp
   171a8:	pop	{fp, pc}
   171ac:	push	{fp, lr}
   171b0:	mov	fp, sp
   171b4:	sub	sp, sp, #24
   171b8:	str	r0, [fp, #-4]
   171bc:	str	r1, [fp, #-8]
   171c0:	str	r2, [sp, #12]
   171c4:	str	r3, [sp, #8]
   171c8:	ldr	r1, [fp, #-4]
   171cc:	ldr	r2, [fp, #-8]
   171d0:	ldr	r3, [sp, #12]
   171d4:	ldr	r0, [sp, #8]
   171d8:	movw	ip, #0
   171dc:	str	r0, [sp, #4]
   171e0:	mov	r0, ip
   171e4:	ldr	ip, [sp, #4]
   171e8:	str	ip, [sp]
   171ec:	bl	17104 <__assert_fail@plt+0x5dd4>
   171f0:	mov	sp, fp
   171f4:	pop	{fp, pc}
   171f8:	push	{fp, lr}
   171fc:	mov	fp, sp
   17200:	sub	sp, sp, #16
   17204:	str	r0, [fp, #-4]
   17208:	str	r1, [sp, #8]
   1720c:	str	r2, [sp, #4]
   17210:	ldr	r0, [fp, #-4]
   17214:	ldr	r1, [sp, #8]
   17218:	ldr	r2, [sp, #4]
   1721c:	movw	r3, #12596	; 0x3134
   17220:	movt	r3, #3
   17224:	bl	16ac8 <__assert_fail@plt+0x5798>
   17228:	mov	sp, fp
   1722c:	pop	{fp, pc}
   17230:	push	{fp, lr}
   17234:	mov	fp, sp
   17238:	sub	sp, sp, #8
   1723c:	str	r0, [sp, #4]
   17240:	str	r1, [sp]
   17244:	ldr	r1, [sp, #4]
   17248:	ldr	r2, [sp]
   1724c:	movw	r0, #0
   17250:	bl	171f8 <__assert_fail@plt+0x5ec8>
   17254:	mov	sp, fp
   17258:	pop	{fp, pc}
   1725c:	push	{fp, lr}
   17260:	mov	fp, sp
   17264:	sub	sp, sp, #8
   17268:	str	r0, [sp, #4]
   1726c:	str	r1, [sp]
   17270:	ldr	r0, [sp, #4]
   17274:	ldr	r1, [sp]
   17278:	mvn	r2, #0
   1727c:	bl	171f8 <__assert_fail@plt+0x5ec8>
   17280:	mov	sp, fp
   17284:	pop	{fp, pc}
   17288:	push	{fp, lr}
   1728c:	mov	fp, sp
   17290:	sub	sp, sp, #8
   17294:	str	r0, [sp, #4]
   17298:	ldr	r1, [sp, #4]
   1729c:	movw	r0, #0
   172a0:	bl	1725c <__assert_fail@plt+0x5f2c>
   172a4:	mov	sp, fp
   172a8:	pop	{fp, pc}
   172ac:	push	{fp, lr}
   172b0:	mov	fp, sp
   172b4:	sub	sp, sp, #24
   172b8:	str	r0, [fp, #-8]
   172bc:	str	r1, [sp, #12]
   172c0:	ldr	r0, [fp, #-8]
   172c4:	bl	111ec <gettext@plt>
   172c8:	str	r0, [sp, #8]
   172cc:	ldr	r0, [sp, #8]
   172d0:	ldr	r1, [fp, #-8]
   172d4:	cmp	r0, r1
   172d8:	beq	172e8 <__assert_fail@plt+0x5fb8>
   172dc:	ldr	r0, [sp, #8]
   172e0:	str	r0, [fp, #-4]
   172e4:	b	173b4 <__assert_fail@plt+0x6084>
   172e8:	bl	1f288 <__assert_fail@plt+0xdf58>
   172ec:	str	r0, [sp, #4]
   172f0:	ldr	r0, [sp, #4]
   172f4:	movw	r1, #8348	; 0x209c
   172f8:	movt	r1, #2
   172fc:	bl	1eb4c <__assert_fail@plt+0xd81c>
   17300:	cmp	r0, #0
   17304:	bne	1733c <__assert_fail@plt+0x600c>
   17308:	ldr	r0, [fp, #-8]
   1730c:	ldrb	r0, [r0]
   17310:	cmp	r0, #96	; 0x60
   17314:	movw	r0, #0
   17318:	moveq	r0, #1
   1731c:	tst	r0, #1
   17320:	movw	r0, #8358	; 0x20a6
   17324:	movt	r0, #2
   17328:	movw	r1, #8354	; 0x20a2
   1732c:	movt	r1, #2
   17330:	movne	r0, r1
   17334:	str	r0, [fp, #-4]
   17338:	b	173b4 <__assert_fail@plt+0x6084>
   1733c:	ldr	r0, [sp, #4]
   17340:	movw	r1, #8362	; 0x20aa
   17344:	movt	r1, #2
   17348:	bl	1eb4c <__assert_fail@plt+0xd81c>
   1734c:	cmp	r0, #0
   17350:	bne	17388 <__assert_fail@plt+0x6058>
   17354:	ldr	r0, [fp, #-8]
   17358:	ldrb	r0, [r0]
   1735c:	cmp	r0, #96	; 0x60
   17360:	movw	r0, #0
   17364:	moveq	r0, #1
   17368:	tst	r0, #1
   1736c:	movw	r0, #8374	; 0x20b6
   17370:	movt	r0, #2
   17374:	movw	r1, #8370	; 0x20b2
   17378:	movt	r1, #2
   1737c:	movne	r0, r1
   17380:	str	r0, [fp, #-4]
   17384:	b	173b4 <__assert_fail@plt+0x6084>
   17388:	ldr	r0, [sp, #12]
   1738c:	cmp	r0, #9
   17390:	movw	r0, #0
   17394:	moveq	r0, #1
   17398:	tst	r0, #1
   1739c:	movw	r0, #8346	; 0x209a
   173a0:	movt	r0, #2
   173a4:	movw	r1, #8342	; 0x2096
   173a8:	movt	r1, #2
   173ac:	movne	r0, r1
   173b0:	str	r0, [fp, #-4]
   173b4:	ldr	r0, [fp, #-4]
   173b8:	mov	sp, fp
   173bc:	pop	{fp, pc}
   173c0:	push	{fp, lr}
   173c4:	mov	fp, sp
   173c8:	sub	sp, sp, #16
   173cc:	str	r0, [fp, #-4]
   173d0:	str	r1, [sp, #8]
   173d4:	str	r2, [sp, #4]
   173d8:	ldr	r0, [fp, #-4]
   173dc:	ldr	r1, [sp, #8]
   173e0:	ldr	r2, [sp, #4]
   173e4:	bl	173f0 <__assert_fail@plt+0x60c0>
   173e8:	mov	sp, fp
   173ec:	pop	{fp, pc}
   173f0:	push	{fp, lr}
   173f4:	mov	fp, sp
   173f8:	sub	sp, sp, #24
   173fc:	str	r0, [fp, #-8]
   17400:	str	r1, [sp, #12]
   17404:	str	r2, [sp, #8]
   17408:	ldr	r0, [fp, #-8]
   1740c:	bl	174f0 <__assert_fail@plt+0x61c0>
   17410:	str	r0, [sp, #4]
   17414:	ldr	r0, [sp, #4]
   17418:	movw	r1, #0
   1741c:	cmp	r0, r1
   17420:	bne	17448 <__assert_fail@plt+0x6118>
   17424:	ldr	r0, [sp, #8]
   17428:	cmp	r0, #0
   1742c:	bls	1743c <__assert_fail@plt+0x610c>
   17430:	ldr	r0, [sp, #12]
   17434:	movw	r1, #0
   17438:	strb	r1, [r0]
   1743c:	movw	r0, #22
   17440:	str	r0, [fp, #-4]
   17444:	b	174c4 <__assert_fail@plt+0x6194>
   17448:	ldr	r0, [sp, #4]
   1744c:	bl	11204 <strlen@plt>
   17450:	str	r0, [sp]
   17454:	ldr	r0, [sp]
   17458:	ldr	r1, [sp, #8]
   1745c:	cmp	r0, r1
   17460:	bcs	17484 <__assert_fail@plt+0x6154>
   17464:	ldr	r0, [sp, #12]
   17468:	ldr	r1, [sp, #4]
   1746c:	ldr	r2, [sp]
   17470:	add	r2, r2, #1
   17474:	bl	110e4 <memcpy@plt>
   17478:	movw	r0, #0
   1747c:	str	r0, [fp, #-4]
   17480:	b	174c4 <__assert_fail@plt+0x6194>
   17484:	ldr	r0, [sp, #8]
   17488:	cmp	r0, #0
   1748c:	bls	174bc <__assert_fail@plt+0x618c>
   17490:	ldr	r0, [sp, #12]
   17494:	ldr	r1, [sp, #4]
   17498:	ldr	r2, [sp, #8]
   1749c:	sub	r2, r2, #1
   174a0:	bl	110e4 <memcpy@plt>
   174a4:	ldr	r0, [sp, #12]
   174a8:	ldr	r1, [sp, #8]
   174ac:	sub	r1, r1, #1
   174b0:	add	r0, r0, r1
   174b4:	movw	r1, #0
   174b8:	strb	r1, [r0]
   174bc:	movw	r0, #34	; 0x22
   174c0:	str	r0, [fp, #-4]
   174c4:	ldr	r0, [fp, #-4]
   174c8:	mov	sp, fp
   174cc:	pop	{fp, pc}
   174d0:	push	{fp, lr}
   174d4:	mov	fp, sp
   174d8:	sub	sp, sp, #8
   174dc:	str	r0, [sp, #4]
   174e0:	ldr	r0, [sp, #4]
   174e4:	bl	174f0 <__assert_fail@plt+0x61c0>
   174e8:	mov	sp, fp
   174ec:	pop	{fp, pc}
   174f0:	push	{fp, lr}
   174f4:	mov	fp, sp
   174f8:	sub	sp, sp, #8
   174fc:	str	r0, [sp, #4]
   17500:	ldr	r0, [sp, #4]
   17504:	movw	r1, #0
   17508:	bl	11294 <setlocale@plt>
   1750c:	str	r0, [sp]
   17510:	ldr	r0, [sp]
   17514:	mov	sp, fp
   17518:	pop	{fp, pc}
   1751c:	push	{fp, lr}
   17520:	mov	fp, sp
   17524:	sub	sp, sp, #8
   17528:	str	r0, [sp, #4]
   1752c:	ldr	r0, [sp, #4]
   17530:	movw	r1, #0
   17534:	movw	r2, #3
   17538:	bl	1ecd4 <__assert_fail@plt+0xd9a4>
   1753c:	mov	sp, fp
   17540:	pop	{fp, pc}
   17544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17548:	add	fp, sp, #28
   1754c:	sub	sp, sp, #196	; 0xc4
   17550:	ldr	ip, [fp, #12]
   17554:	ldr	lr, [fp, #8]
   17558:	str	r0, [fp, #-32]	; 0xffffffe0
   1755c:	str	r1, [fp, #-36]	; 0xffffffdc
   17560:	str	r2, [fp, #-40]	; 0xffffffd8
   17564:	str	r3, [fp, #-44]	; 0xffffffd4
   17568:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1756c:	movw	r1, #0
   17570:	cmp	r0, r1
   17574:	beq	175a8 <__assert_fail@plt+0x6278>
   17578:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1757c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17580:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17584:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17588:	movw	ip, #8464	; 0x2110
   1758c:	movt	ip, #2
   17590:	str	r1, [fp, #-48]	; 0xffffffd0
   17594:	mov	r1, ip
   17598:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1759c:	str	ip, [sp]
   175a0:	bl	1121c <fprintf@plt>
   175a4:	b	175c0 <__assert_fail@plt+0x6290>
   175a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   175ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   175b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   175b4:	movw	r1, #8476	; 0x211c
   175b8:	movt	r1, #2
   175bc:	bl	1121c <fprintf@plt>
   175c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   175c4:	movw	r1, #8483	; 0x2123
   175c8:	movt	r1, #2
   175cc:	str	r0, [fp, #-52]	; 0xffffffcc
   175d0:	mov	r0, r1
   175d4:	bl	111ec <gettext@plt>
   175d8:	movw	r1, #9201	; 0x23f1
   175dc:	movt	r1, #2
   175e0:	movw	r3, #2022	; 0x7e6
   175e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   175e8:	str	r0, [fp, #-56]	; 0xffffffc8
   175ec:	mov	r0, r2
   175f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   175f4:	bl	1121c <fprintf@plt>
   175f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   175fc:	movw	r2, #7645	; 0x1ddd
   17600:	movt	r2, #2
   17604:	str	r0, [fp, #-60]	; 0xffffffc4
   17608:	mov	r0, r2
   1760c:	str	r2, [fp, #-64]	; 0xffffffc0
   17610:	bl	11084 <fputs_unlocked@plt>
   17614:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17618:	movw	r2, #8487	; 0x2127
   1761c:	movt	r2, #2
   17620:	str	r0, [fp, #-68]	; 0xffffffbc
   17624:	mov	r0, r2
   17628:	str	r1, [fp, #-72]	; 0xffffffb8
   1762c:	bl	111ec <gettext@plt>
   17630:	movw	r2, #8658	; 0x21d2
   17634:	movt	r2, #2
   17638:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1763c:	str	r0, [fp, #-76]	; 0xffffffb4
   17640:	mov	r0, r1
   17644:	ldr	r1, [fp, #-76]	; 0xffffffb4
   17648:	bl	1121c <fprintf@plt>
   1764c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17650:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17654:	str	r0, [fp, #-80]	; 0xffffffb0
   17658:	mov	r0, r2
   1765c:	bl	11084 <fputs_unlocked@plt>
   17660:	ldr	r1, [fp, #12]
   17664:	cmp	r1, #9
   17668:	str	r1, [fp, #-84]	; 0xffffffac
   1766c:	bhi	17a88 <__assert_fail@plt+0x6758>
   17670:	add	r0, pc, #8
   17674:	ldr	r1, [fp, #-84]	; 0xffffffac
   17678:	ldr	r0, [r0, r1, lsl #2]
   1767c:	mov	pc, r0
   17680:	andeq	r7, r1, r8, lsr #13
   17684:	andeq	r7, r1, ip, lsr #13
   17688:	andeq	r7, r1, r4, ror #13
   1768c:	andeq	r7, r1, r4, lsr #14
   17690:	andeq	r7, r1, ip, ror r7
   17694:	andeq	r7, r1, r0, ror #15
   17698:	andeq	r7, r1, r0, asr r8
   1769c:	andeq	r7, r1, ip, asr #17
   176a0:	andeq	r7, r1, r4, asr r9
   176a4:	andeq	r7, r1, r8, ror #19
   176a8:	b	17b24 <__assert_fail@plt+0x67f4>
   176ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   176b0:	movw	r1, #8692	; 0x21f4
   176b4:	movt	r1, #2
   176b8:	str	r0, [fp, #-88]	; 0xffffffa8
   176bc:	mov	r0, r1
   176c0:	bl	111ec <gettext@plt>
   176c4:	ldr	r1, [fp, #8]
   176c8:	ldr	r2, [r1]
   176cc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   176d0:	str	r0, [fp, #-92]	; 0xffffffa4
   176d4:	mov	r0, r1
   176d8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   176dc:	bl	1121c <fprintf@plt>
   176e0:	b	17b24 <__assert_fail@plt+0x67f4>
   176e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   176e8:	movw	r1, #8708	; 0x2204
   176ec:	movt	r1, #2
   176f0:	str	r0, [fp, #-96]	; 0xffffffa0
   176f4:	mov	r0, r1
   176f8:	bl	111ec <gettext@plt>
   176fc:	ldr	r1, [fp, #8]
   17700:	ldr	r2, [r1]
   17704:	ldr	r1, [fp, #8]
   17708:	ldr	r3, [r1, #4]
   1770c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17710:	str	r0, [fp, #-100]	; 0xffffff9c
   17714:	mov	r0, r1
   17718:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1771c:	bl	1121c <fprintf@plt>
   17720:	b	17b24 <__assert_fail@plt+0x67f4>
   17724:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17728:	movw	r1, #8731	; 0x221b
   1772c:	movt	r1, #2
   17730:	str	r0, [fp, #-104]	; 0xffffff98
   17734:	mov	r0, r1
   17738:	bl	111ec <gettext@plt>
   1773c:	ldr	r1, [fp, #8]
   17740:	ldr	r2, [r1]
   17744:	ldr	r1, [fp, #8]
   17748:	ldr	r3, [r1, #4]
   1774c:	ldr	r1, [fp, #8]
   17750:	ldr	r1, [r1, #8]
   17754:	ldr	ip, [fp, #-104]	; 0xffffff98
   17758:	str	r0, [fp, #-108]	; 0xffffff94
   1775c:	mov	r0, ip
   17760:	ldr	lr, [fp, #-108]	; 0xffffff94
   17764:	str	r1, [sp, #112]	; 0x70
   17768:	mov	r1, lr
   1776c:	ldr	r4, [sp, #112]	; 0x70
   17770:	str	r4, [sp]
   17774:	bl	1121c <fprintf@plt>
   17778:	b	17b24 <__assert_fail@plt+0x67f4>
   1777c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17780:	movw	r1, #8759	; 0x2237
   17784:	movt	r1, #2
   17788:	str	r0, [sp, #108]	; 0x6c
   1778c:	mov	r0, r1
   17790:	bl	111ec <gettext@plt>
   17794:	ldr	r1, [fp, #8]
   17798:	ldr	r2, [r1]
   1779c:	ldr	r1, [fp, #8]
   177a0:	ldr	r3, [r1, #4]
   177a4:	ldr	r1, [fp, #8]
   177a8:	ldr	r1, [r1, #8]
   177ac:	ldr	ip, [fp, #8]
   177b0:	ldr	ip, [ip, #12]
   177b4:	ldr	lr, [sp, #108]	; 0x6c
   177b8:	str	r0, [sp, #104]	; 0x68
   177bc:	mov	r0, lr
   177c0:	ldr	r4, [sp, #104]	; 0x68
   177c4:	str	r1, [sp, #100]	; 0x64
   177c8:	mov	r1, r4
   177cc:	ldr	r5, [sp, #100]	; 0x64
   177d0:	str	r5, [sp]
   177d4:	str	ip, [sp, #4]
   177d8:	bl	1121c <fprintf@plt>
   177dc:	b	17b24 <__assert_fail@plt+0x67f4>
   177e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   177e4:	movw	r1, #8791	; 0x2257
   177e8:	movt	r1, #2
   177ec:	str	r0, [sp, #96]	; 0x60
   177f0:	mov	r0, r1
   177f4:	bl	111ec <gettext@plt>
   177f8:	ldr	r1, [fp, #8]
   177fc:	ldr	r2, [r1]
   17800:	ldr	r1, [fp, #8]
   17804:	ldr	r3, [r1, #4]
   17808:	ldr	r1, [fp, #8]
   1780c:	ldr	r1, [r1, #8]
   17810:	ldr	ip, [fp, #8]
   17814:	ldr	ip, [ip, #12]
   17818:	ldr	lr, [fp, #8]
   1781c:	ldr	lr, [lr, #16]
   17820:	ldr	r4, [sp, #96]	; 0x60
   17824:	str	r0, [sp, #92]	; 0x5c
   17828:	mov	r0, r4
   1782c:	ldr	r5, [sp, #92]	; 0x5c
   17830:	str	r1, [sp, #88]	; 0x58
   17834:	mov	r1, r5
   17838:	ldr	r6, [sp, #88]	; 0x58
   1783c:	str	r6, [sp]
   17840:	str	ip, [sp, #4]
   17844:	str	lr, [sp, #8]
   17848:	bl	1121c <fprintf@plt>
   1784c:	b	17b24 <__assert_fail@plt+0x67f4>
   17850:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17854:	movw	r1, #8827	; 0x227b
   17858:	movt	r1, #2
   1785c:	str	r0, [sp, #84]	; 0x54
   17860:	mov	r0, r1
   17864:	bl	111ec <gettext@plt>
   17868:	ldr	r1, [fp, #8]
   1786c:	ldr	r2, [r1]
   17870:	ldr	r1, [fp, #8]
   17874:	ldr	r3, [r1, #4]
   17878:	ldr	r1, [fp, #8]
   1787c:	ldr	r1, [r1, #8]
   17880:	ldr	ip, [fp, #8]
   17884:	ldr	ip, [ip, #12]
   17888:	ldr	lr, [fp, #8]
   1788c:	ldr	lr, [lr, #16]
   17890:	ldr	r4, [fp, #8]
   17894:	ldr	r4, [r4, #20]
   17898:	ldr	r5, [sp, #84]	; 0x54
   1789c:	str	r0, [sp, #80]	; 0x50
   178a0:	mov	r0, r5
   178a4:	ldr	r6, [sp, #80]	; 0x50
   178a8:	str	r1, [sp, #76]	; 0x4c
   178ac:	mov	r1, r6
   178b0:	ldr	r7, [sp, #76]	; 0x4c
   178b4:	str	r7, [sp]
   178b8:	str	ip, [sp, #4]
   178bc:	str	lr, [sp, #8]
   178c0:	str	r4, [sp, #12]
   178c4:	bl	1121c <fprintf@plt>
   178c8:	b	17b24 <__assert_fail@plt+0x67f4>
   178cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   178d0:	movw	r1, #8867	; 0x22a3
   178d4:	movt	r1, #2
   178d8:	str	r0, [sp, #72]	; 0x48
   178dc:	mov	r0, r1
   178e0:	bl	111ec <gettext@plt>
   178e4:	ldr	r1, [fp, #8]
   178e8:	ldr	r2, [r1]
   178ec:	ldr	r1, [fp, #8]
   178f0:	ldr	r3, [r1, #4]
   178f4:	ldr	r1, [fp, #8]
   178f8:	ldr	r1, [r1, #8]
   178fc:	ldr	ip, [fp, #8]
   17900:	ldr	ip, [ip, #12]
   17904:	ldr	lr, [fp, #8]
   17908:	ldr	lr, [lr, #16]
   1790c:	ldr	r4, [fp, #8]
   17910:	ldr	r4, [r4, #20]
   17914:	ldr	r5, [fp, #8]
   17918:	ldr	r5, [r5, #24]
   1791c:	ldr	r6, [sp, #72]	; 0x48
   17920:	str	r0, [sp, #68]	; 0x44
   17924:	mov	r0, r6
   17928:	ldr	r7, [sp, #68]	; 0x44
   1792c:	str	r1, [sp, #64]	; 0x40
   17930:	mov	r1, r7
   17934:	ldr	r8, [sp, #64]	; 0x40
   17938:	str	r8, [sp]
   1793c:	str	ip, [sp, #4]
   17940:	str	lr, [sp, #8]
   17944:	str	r4, [sp, #12]
   17948:	str	r5, [sp, #16]
   1794c:	bl	1121c <fprintf@plt>
   17950:	b	17b24 <__assert_fail@plt+0x67f4>
   17954:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17958:	movw	r1, #8911	; 0x22cf
   1795c:	movt	r1, #2
   17960:	str	r0, [sp, #60]	; 0x3c
   17964:	mov	r0, r1
   17968:	bl	111ec <gettext@plt>
   1796c:	ldr	r1, [fp, #8]
   17970:	ldr	r2, [r1]
   17974:	ldr	r1, [fp, #8]
   17978:	ldr	r3, [r1, #4]
   1797c:	ldr	r1, [fp, #8]
   17980:	ldr	r1, [r1, #8]
   17984:	ldr	ip, [fp, #8]
   17988:	ldr	ip, [ip, #12]
   1798c:	ldr	lr, [fp, #8]
   17990:	ldr	lr, [lr, #16]
   17994:	ldr	r4, [fp, #8]
   17998:	ldr	r4, [r4, #20]
   1799c:	ldr	r5, [fp, #8]
   179a0:	ldr	r5, [r5, #24]
   179a4:	ldr	r6, [fp, #8]
   179a8:	ldr	r6, [r6, #28]
   179ac:	ldr	r7, [sp, #60]	; 0x3c
   179b0:	str	r0, [sp, #56]	; 0x38
   179b4:	mov	r0, r7
   179b8:	ldr	r8, [sp, #56]	; 0x38
   179bc:	str	r1, [sp, #52]	; 0x34
   179c0:	mov	r1, r8
   179c4:	ldr	r9, [sp, #52]	; 0x34
   179c8:	str	r9, [sp]
   179cc:	str	ip, [sp, #4]
   179d0:	str	lr, [sp, #8]
   179d4:	str	r4, [sp, #12]
   179d8:	str	r5, [sp, #16]
   179dc:	str	r6, [sp, #20]
   179e0:	bl	1121c <fprintf@plt>
   179e4:	b	17b24 <__assert_fail@plt+0x67f4>
   179e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   179ec:	movw	r1, #8959	; 0x22ff
   179f0:	movt	r1, #2
   179f4:	str	r0, [sp, #48]	; 0x30
   179f8:	mov	r0, r1
   179fc:	bl	111ec <gettext@plt>
   17a00:	ldr	r1, [fp, #8]
   17a04:	ldr	r2, [r1]
   17a08:	ldr	r1, [fp, #8]
   17a0c:	ldr	r3, [r1, #4]
   17a10:	ldr	r1, [fp, #8]
   17a14:	ldr	r1, [r1, #8]
   17a18:	ldr	ip, [fp, #8]
   17a1c:	ldr	ip, [ip, #12]
   17a20:	ldr	lr, [fp, #8]
   17a24:	ldr	lr, [lr, #16]
   17a28:	ldr	r4, [fp, #8]
   17a2c:	ldr	r4, [r4, #20]
   17a30:	ldr	r5, [fp, #8]
   17a34:	ldr	r5, [r5, #24]
   17a38:	ldr	r6, [fp, #8]
   17a3c:	ldr	r6, [r6, #28]
   17a40:	ldr	r7, [fp, #8]
   17a44:	ldr	r7, [r7, #32]
   17a48:	ldr	r8, [sp, #48]	; 0x30
   17a4c:	str	r0, [sp, #44]	; 0x2c
   17a50:	mov	r0, r8
   17a54:	ldr	r9, [sp, #44]	; 0x2c
   17a58:	str	r1, [sp, #40]	; 0x28
   17a5c:	mov	r1, r9
   17a60:	ldr	sl, [sp, #40]	; 0x28
   17a64:	str	sl, [sp]
   17a68:	str	ip, [sp, #4]
   17a6c:	str	lr, [sp, #8]
   17a70:	str	r4, [sp, #12]
   17a74:	str	r5, [sp, #16]
   17a78:	str	r6, [sp, #20]
   17a7c:	str	r7, [sp, #24]
   17a80:	bl	1121c <fprintf@plt>
   17a84:	b	17b24 <__assert_fail@plt+0x67f4>
   17a88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17a8c:	movw	r1, #9011	; 0x2333
   17a90:	movt	r1, #2
   17a94:	str	r0, [sp, #36]	; 0x24
   17a98:	mov	r0, r1
   17a9c:	bl	111ec <gettext@plt>
   17aa0:	ldr	r1, [fp, #8]
   17aa4:	ldr	r2, [r1]
   17aa8:	ldr	r1, [fp, #8]
   17aac:	ldr	r3, [r1, #4]
   17ab0:	ldr	r1, [fp, #8]
   17ab4:	ldr	r1, [r1, #8]
   17ab8:	ldr	ip, [fp, #8]
   17abc:	ldr	ip, [ip, #12]
   17ac0:	ldr	lr, [fp, #8]
   17ac4:	ldr	lr, [lr, #16]
   17ac8:	ldr	r4, [fp, #8]
   17acc:	ldr	r4, [r4, #20]
   17ad0:	ldr	r5, [fp, #8]
   17ad4:	ldr	r5, [r5, #24]
   17ad8:	ldr	r6, [fp, #8]
   17adc:	ldr	r6, [r6, #28]
   17ae0:	ldr	r7, [fp, #8]
   17ae4:	ldr	r7, [r7, #32]
   17ae8:	ldr	r8, [sp, #36]	; 0x24
   17aec:	str	r0, [sp, #32]
   17af0:	mov	r0, r8
   17af4:	ldr	r9, [sp, #32]
   17af8:	str	r1, [sp, #28]
   17afc:	mov	r1, r9
   17b00:	ldr	sl, [sp, #28]
   17b04:	str	sl, [sp]
   17b08:	str	ip, [sp, #4]
   17b0c:	str	lr, [sp, #8]
   17b10:	str	r4, [sp, #12]
   17b14:	str	r5, [sp, #16]
   17b18:	str	r6, [sp, #20]
   17b1c:	str	r7, [sp, #24]
   17b20:	bl	1121c <fprintf@plt>
   17b24:	sub	sp, fp, #28
   17b28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b2c:	push	{fp, lr}
   17b30:	mov	fp, sp
   17b34:	sub	sp, sp, #32
   17b38:	ldr	ip, [fp, #8]
   17b3c:	str	r0, [fp, #-4]
   17b40:	str	r1, [fp, #-8]
   17b44:	str	r2, [fp, #-12]
   17b48:	str	r3, [sp, #16]
   17b4c:	movw	r0, #0
   17b50:	str	r0, [sp, #12]
   17b54:	ldr	r0, [fp, #8]
   17b58:	ldr	r1, [sp, #12]
   17b5c:	add	r0, r0, r1, lsl #2
   17b60:	ldr	r0, [r0]
   17b64:	movw	r1, #0
   17b68:	cmp	r0, r1
   17b6c:	beq	17b84 <__assert_fail@plt+0x6854>
   17b70:	b	17b74 <__assert_fail@plt+0x6844>
   17b74:	ldr	r0, [sp, #12]
   17b78:	add	r0, r0, #1
   17b7c:	str	r0, [sp, #12]
   17b80:	b	17b54 <__assert_fail@plt+0x6824>
   17b84:	ldr	r0, [fp, #-4]
   17b88:	ldr	r1, [fp, #-8]
   17b8c:	ldr	r2, [fp, #-12]
   17b90:	ldr	r3, [sp, #16]
   17b94:	ldr	ip, [fp, #8]
   17b98:	ldr	lr, [sp, #12]
   17b9c:	str	ip, [sp]
   17ba0:	str	lr, [sp, #4]
   17ba4:	bl	17544 <__assert_fail@plt+0x6214>
   17ba8:	mov	sp, fp
   17bac:	pop	{fp, pc}
   17bb0:	push	{fp, lr}
   17bb4:	mov	fp, sp
   17bb8:	sub	sp, sp, #80	; 0x50
   17bbc:	ldr	ip, [fp, #8]
   17bc0:	str	ip, [fp, #-4]
   17bc4:	str	r0, [fp, #-8]
   17bc8:	str	r1, [fp, #-12]
   17bcc:	str	r2, [fp, #-16]
   17bd0:	str	r3, [fp, #-20]	; 0xffffffec
   17bd4:	movw	r0, #0
   17bd8:	str	r0, [fp, #-24]	; 0xffffffe8
   17bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17be0:	cmp	r0, #10
   17be4:	movw	r0, #0
   17be8:	str	r0, [sp, #12]
   17bec:	bcs	17c24 <__assert_fail@plt+0x68f4>
   17bf0:	ldr	r0, [fp, #-4]
   17bf4:	add	r1, r0, #4
   17bf8:	str	r1, [fp, #-4]
   17bfc:	ldr	r0, [r0]
   17c00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c04:	add	r2, sp, #16
   17c08:	add	r1, r2, r1, lsl #2
   17c0c:	str	r0, [r1]
   17c10:	movw	r1, #0
   17c14:	cmp	r0, r1
   17c18:	movw	r0, #0
   17c1c:	movne	r0, #1
   17c20:	str	r0, [sp, #12]
   17c24:	ldr	r0, [sp, #12]
   17c28:	tst	r0, #1
   17c2c:	beq	17c44 <__assert_fail@plt+0x6914>
   17c30:	b	17c34 <__assert_fail@plt+0x6904>
   17c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c38:	add	r0, r0, #1
   17c3c:	str	r0, [fp, #-24]	; 0xffffffe8
   17c40:	b	17bdc <__assert_fail@plt+0x68ac>
   17c44:	add	r0, sp, #16
   17c48:	ldr	r1, [fp, #-8]
   17c4c:	ldr	r2, [fp, #-12]
   17c50:	ldr	r3, [fp, #-16]
   17c54:	ldr	ip, [fp, #-20]	; 0xffffffec
   17c58:	ldr	lr, [fp, #-24]	; 0xffffffe8
   17c5c:	str	r0, [sp, #8]
   17c60:	mov	r0, r1
   17c64:	mov	r1, r2
   17c68:	mov	r2, r3
   17c6c:	mov	r3, ip
   17c70:	ldr	ip, [sp, #8]
   17c74:	str	ip, [sp]
   17c78:	str	lr, [sp, #4]
   17c7c:	bl	17544 <__assert_fail@plt+0x6214>
   17c80:	mov	sp, fp
   17c84:	pop	{fp, pc}
   17c88:	push	{fp, lr}
   17c8c:	mov	fp, sp
   17c90:	sub	sp, sp, #24
   17c94:	str	r0, [fp, #-4]
   17c98:	str	r1, [fp, #-8]
   17c9c:	str	r2, [sp, #12]
   17ca0:	str	r3, [sp, #8]
   17ca4:	add	r0, fp, #8
   17ca8:	str	r0, [sp, #4]
   17cac:	ldr	r0, [fp, #-4]
   17cb0:	ldr	r1, [fp, #-8]
   17cb4:	ldr	r2, [sp, #12]
   17cb8:	ldr	r3, [sp, #8]
   17cbc:	ldr	ip, [sp, #4]
   17cc0:	mov	lr, sp
   17cc4:	str	ip, [lr]
   17cc8:	bl	17bb0 <__assert_fail@plt+0x6880>
   17ccc:	add	r0, sp, #4
   17cd0:	mov	sp, fp
   17cd4:	pop	{fp, pc}
   17cd8:	push	{fp, lr}
   17cdc:	mov	fp, sp
   17ce0:	sub	sp, sp, #16
   17ce4:	movw	r0, #12676	; 0x3184
   17ce8:	movt	r0, #3
   17cec:	ldr	r1, [r0]
   17cf0:	movw	r0, #7645	; 0x1ddd
   17cf4:	movt	r0, #2
   17cf8:	bl	11084 <fputs_unlocked@plt>
   17cfc:	movw	r1, #9071	; 0x236f
   17d00:	movt	r1, #2
   17d04:	str	r0, [fp, #-4]
   17d08:	mov	r0, r1
   17d0c:	bl	111ec <gettext@plt>
   17d10:	movw	r1, #9091	; 0x2383
   17d14:	movt	r1, #2
   17d18:	bl	110b4 <printf@plt>
   17d1c:	movw	r1, #9113	; 0x2399
   17d20:	movt	r1, #2
   17d24:	str	r0, [sp, #8]
   17d28:	mov	r0, r1
   17d2c:	bl	111ec <gettext@plt>
   17d30:	movw	r1, #7203	; 0x1c23
   17d34:	movt	r1, #2
   17d38:	movw	r2, #7454	; 0x1d1e
   17d3c:	movt	r2, #2
   17d40:	bl	110b4 <printf@plt>
   17d44:	movw	r1, #9133	; 0x23ad
   17d48:	movt	r1, #2
   17d4c:	str	r0, [sp, #4]
   17d50:	mov	r0, r1
   17d54:	bl	111ec <gettext@plt>
   17d58:	movw	r1, #9172	; 0x23d4
   17d5c:	movt	r1, #2
   17d60:	bl	110b4 <printf@plt>
   17d64:	mov	sp, fp
   17d68:	pop	{fp, pc}
   17d6c:	push	{fp, lr}
   17d70:	mov	fp, sp
   17d74:	sub	sp, sp, #16
   17d78:	str	r0, [fp, #-4]
   17d7c:	str	r1, [sp, #8]
   17d80:	str	r2, [sp, #4]
   17d84:	ldr	r0, [fp, #-4]
   17d88:	ldr	r1, [sp, #8]
   17d8c:	ldr	r2, [sp, #4]
   17d90:	bl	17d9c <__assert_fail@plt+0x6a6c>
   17d94:	mov	sp, fp
   17d98:	pop	{fp, pc}
   17d9c:	push	{fp, lr}
   17da0:	mov	fp, sp
   17da4:	sub	sp, sp, #16
   17da8:	str	r0, [fp, #-4]
   17dac:	str	r1, [sp, #8]
   17db0:	str	r2, [sp, #4]
   17db4:	ldr	r0, [fp, #-4]
   17db8:	ldr	r1, [sp, #8]
   17dbc:	ldr	r2, [sp, #4]
   17dc0:	bl	1f63c <__assert_fail@plt+0xe30c>
   17dc4:	str	r0, [sp]
   17dc8:	ldr	r0, [sp]
   17dcc:	movw	r1, #0
   17dd0:	cmp	r0, r1
   17dd4:	bne	17e04 <__assert_fail@plt+0x6ad4>
   17dd8:	ldr	r0, [fp, #-4]
   17ddc:	movw	r1, #0
   17de0:	cmp	r0, r1
   17de4:	beq	17e00 <__assert_fail@plt+0x6ad0>
   17de8:	ldr	r0, [sp, #8]
   17dec:	cmp	r0, #0
   17df0:	beq	17e04 <__assert_fail@plt+0x6ad4>
   17df4:	ldr	r0, [sp, #4]
   17df8:	cmp	r0, #0
   17dfc:	beq	17e04 <__assert_fail@plt+0x6ad4>
   17e00:	bl	1ab48 <__assert_fail@plt+0x9818>
   17e04:	ldr	r0, [sp]
   17e08:	mov	sp, fp
   17e0c:	pop	{fp, pc}
   17e10:	push	{fp, lr}
   17e14:	mov	fp, sp
   17e18:	sub	sp, sp, #8
   17e1c:	str	r0, [sp, #4]
   17e20:	ldr	r0, [sp, #4]
   17e24:	bl	1ea38 <__assert_fail@plt+0xd708>
   17e28:	bl	17e34 <__assert_fail@plt+0x6b04>
   17e2c:	mov	sp, fp
   17e30:	pop	{fp, pc}
   17e34:	push	{fp, lr}
   17e38:	mov	fp, sp
   17e3c:	sub	sp, sp, #8
   17e40:	str	r0, [sp, #4]
   17e44:	ldr	r0, [sp, #4]
   17e48:	movw	r1, #0
   17e4c:	cmp	r0, r1
   17e50:	bne	17e58 <__assert_fail@plt+0x6b28>
   17e54:	bl	1ab48 <__assert_fail@plt+0x9818>
   17e58:	ldr	r0, [sp, #4]
   17e5c:	mov	sp, fp
   17e60:	pop	{fp, pc}
   17e64:	push	{fp, lr}
   17e68:	mov	fp, sp
   17e6c:	sub	sp, sp, #8
   17e70:	str	r0, [sp, #4]
   17e74:	ldr	r0, [sp, #4]
   17e78:	bl	1f0d0 <__assert_fail@plt+0xdda0>
   17e7c:	bl	17e34 <__assert_fail@plt+0x6b04>
   17e80:	mov	sp, fp
   17e84:	pop	{fp, pc}
   17e88:	push	{fp, lr}
   17e8c:	mov	fp, sp
   17e90:	sub	sp, sp, #8
   17e94:	str	r0, [sp, #4]
   17e98:	ldr	r0, [sp, #4]
   17e9c:	bl	17e10 <__assert_fail@plt+0x6ae0>
   17ea0:	mov	sp, fp
   17ea4:	pop	{fp, pc}
   17ea8:	push	{fp, lr}
   17eac:	mov	fp, sp
   17eb0:	sub	sp, sp, #16
   17eb4:	str	r0, [fp, #-4]
   17eb8:	str	r1, [sp, #8]
   17ebc:	ldr	r0, [fp, #-4]
   17ec0:	ldr	r1, [sp, #8]
   17ec4:	bl	1eaa8 <__assert_fail@plt+0xd778>
   17ec8:	str	r0, [sp, #4]
   17ecc:	ldr	r0, [sp, #4]
   17ed0:	movw	r1, #0
   17ed4:	cmp	r0, r1
   17ed8:	bne	17efc <__assert_fail@plt+0x6bcc>
   17edc:	ldr	r0, [fp, #-4]
   17ee0:	movw	r1, #0
   17ee4:	cmp	r0, r1
   17ee8:	beq	17ef8 <__assert_fail@plt+0x6bc8>
   17eec:	ldr	r0, [sp, #8]
   17ef0:	cmp	r0, #0
   17ef4:	beq	17efc <__assert_fail@plt+0x6bcc>
   17ef8:	bl	1ab48 <__assert_fail@plt+0x9818>
   17efc:	ldr	r0, [sp, #4]
   17f00:	mov	sp, fp
   17f04:	pop	{fp, pc}
   17f08:	push	{fp, lr}
   17f0c:	mov	fp, sp
   17f10:	sub	sp, sp, #8
   17f14:	str	r0, [sp, #4]
   17f18:	str	r1, [sp]
   17f1c:	ldr	r0, [sp, #4]
   17f20:	ldr	r1, [sp]
   17f24:	bl	1f110 <__assert_fail@plt+0xdde0>
   17f28:	bl	17e34 <__assert_fail@plt+0x6b04>
   17f2c:	mov	sp, fp
   17f30:	pop	{fp, pc}
   17f34:	push	{fp, lr}
   17f38:	mov	fp, sp
   17f3c:	sub	sp, sp, #16
   17f40:	str	r0, [fp, #-4]
   17f44:	str	r1, [sp, #8]
   17f48:	str	r2, [sp, #4]
   17f4c:	ldr	r0, [fp, #-4]
   17f50:	ldr	r1, [sp, #8]
   17f54:	ldr	r2, [sp, #4]
   17f58:	bl	1f208 <__assert_fail@plt+0xded8>
   17f5c:	bl	17e34 <__assert_fail@plt+0x6b04>
   17f60:	mov	sp, fp
   17f64:	pop	{fp, pc}
   17f68:	push	{fp, lr}
   17f6c:	mov	fp, sp
   17f70:	sub	sp, sp, #8
   17f74:	str	r0, [sp, #4]
   17f78:	str	r1, [sp]
   17f7c:	ldr	r1, [sp, #4]
   17f80:	ldr	r2, [sp]
   17f84:	movw	r0, #0
   17f88:	bl	17d9c <__assert_fail@plt+0x6a6c>
   17f8c:	mov	sp, fp
   17f90:	pop	{fp, pc}
   17f94:	push	{fp, lr}
   17f98:	mov	fp, sp
   17f9c:	sub	sp, sp, #8
   17fa0:	str	r0, [sp, #4]
   17fa4:	str	r1, [sp]
   17fa8:	ldr	r1, [sp, #4]
   17fac:	ldr	r2, [sp]
   17fb0:	movw	r0, #0
   17fb4:	bl	17f34 <__assert_fail@plt+0x6c04>
   17fb8:	mov	sp, fp
   17fbc:	pop	{fp, pc}
   17fc0:	push	{fp, lr}
   17fc4:	mov	fp, sp
   17fc8:	sub	sp, sp, #8
   17fcc:	str	r0, [sp, #4]
   17fd0:	str	r1, [sp]
   17fd4:	ldr	r0, [sp, #4]
   17fd8:	ldr	r1, [sp]
   17fdc:	movw	r2, #1
   17fe0:	bl	17fec <__assert_fail@plt+0x6cbc>
   17fe4:	mov	sp, fp
   17fe8:	pop	{fp, pc}
   17fec:	push	{fp, lr}
   17ff0:	mov	fp, sp
   17ff4:	sub	sp, sp, #16
   17ff8:	str	r0, [fp, #-4]
   17ffc:	str	r1, [sp, #8]
   18000:	str	r2, [sp, #4]
   18004:	ldr	r0, [sp, #8]
   18008:	ldr	r0, [r0]
   1800c:	str	r0, [sp]
   18010:	ldr	r0, [fp, #-4]
   18014:	movw	r1, #0
   18018:	cmp	r0, r1
   1801c:	bne	18068 <__assert_fail@plt+0x6d38>
   18020:	ldr	r0, [sp]
   18024:	cmp	r0, #0
   18028:	bne	18064 <__assert_fail@plt+0x6d34>
   1802c:	ldr	r0, [sp, #4]
   18030:	movw	r1, #64	; 0x40
   18034:	udiv	r0, r1, r0
   18038:	str	r0, [sp]
   1803c:	ldr	r0, [sp]
   18040:	cmp	r0, #0
   18044:	movw	r0, #0
   18048:	movne	r0, #1
   1804c:	mvn	r1, #0
   18050:	eor	r0, r0, r1
   18054:	and	r0, r0, #1
   18058:	ldr	r1, [sp]
   1805c:	add	r0, r1, r0
   18060:	str	r0, [sp]
   18064:	b	18098 <__assert_fail@plt+0x6d68>
   18068:	ldr	r0, [sp]
   1806c:	ldr	r1, [sp]
   18070:	lsr	r1, r1, #1
   18074:	add	r1, r1, #1
   18078:	adds	r0, r0, r1
   1807c:	mov	r1, #0
   18080:	adc	r1, r1, #0
   18084:	str	r0, [sp]
   18088:	tst	r1, #1
   1808c:	beq	18094 <__assert_fail@plt+0x6d64>
   18090:	bl	1ab48 <__assert_fail@plt+0x9818>
   18094:	b	18098 <__assert_fail@plt+0x6d68>
   18098:	ldr	r0, [fp, #-4]
   1809c:	ldr	r1, [sp]
   180a0:	ldr	r2, [sp, #4]
   180a4:	bl	17d9c <__assert_fail@plt+0x6a6c>
   180a8:	str	r0, [fp, #-4]
   180ac:	ldr	r0, [sp]
   180b0:	ldr	r1, [sp, #8]
   180b4:	str	r0, [r1]
   180b8:	ldr	r0, [fp, #-4]
   180bc:	mov	sp, fp
   180c0:	pop	{fp, pc}
   180c4:	push	{fp, lr}
   180c8:	mov	fp, sp
   180cc:	sub	sp, sp, #216	; 0xd8
   180d0:	ldr	ip, [fp, #8]
   180d4:	str	r0, [fp, #-4]
   180d8:	str	r1, [fp, #-8]
   180dc:	str	r2, [fp, #-12]
   180e0:	str	r3, [fp, #-16]
   180e4:	ldr	r0, [fp, #-8]
   180e8:	ldr	r0, [r0]
   180ec:	str	r0, [fp, #-20]	; 0xffffffec
   180f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   180f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   180f8:	asr	r1, r1, #1
   180fc:	add	r1, r0, r1
   18100:	mov	r2, #1
   18104:	cmp	r1, r0
   18108:	movwvc	r2, #0
   1810c:	str	r1, [fp, #-24]	; 0xffffffe8
   18110:	tst	r2, #1
   18114:	beq	18120 <__assert_fail@plt+0x6df0>
   18118:	ldr	r0, [pc, #4036]	; 190e4 <__assert_fail@plt+0x7db4>
   1811c:	str	r0, [fp, #-24]	; 0xffffffe8
   18120:	ldr	r0, [fp, #-16]
   18124:	movw	r1, #0
   18128:	cmp	r1, r0
   1812c:	bgt	18148 <__assert_fail@plt+0x6e18>
   18130:	ldr	r0, [fp, #-16]
   18134:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18138:	cmp	r0, r1
   1813c:	bge	18148 <__assert_fail@plt+0x6e18>
   18140:	ldr	r0, [fp, #-16]
   18144:	str	r0, [fp, #-24]	; 0xffffffe8
   18148:	b	18520 <__assert_fail@plt+0x71f0>
   1814c:	b	18150 <__assert_fail@plt+0x6e20>
   18150:	ldr	r0, [fp, #8]
   18154:	cmp	r0, #0
   18158:	bge	1826c <__assert_fail@plt+0x6f3c>
   1815c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18160:	cmp	r0, #0
   18164:	bge	181f0 <__assert_fail@plt+0x6ec0>
   18168:	b	1816c <__assert_fail@plt+0x6e3c>
   1816c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18170:	ldr	r1, [fp, #8]
   18174:	movw	r2, #127	; 0x7f
   18178:	sdiv	r1, r2, r1
   1817c:	cmp	r0, r1
   18180:	blt	1830c <__assert_fail@plt+0x6fdc>
   18184:	b	18324 <__assert_fail@plt+0x6ff4>
   18188:	b	1818c <__assert_fail@plt+0x6e5c>
   1818c:	ldr	r0, [pc, #4084]	; 19188 <__assert_fail@plt+0x7e58>
   18190:	ldr	r1, [fp, #8]
   18194:	cmp	r1, r0
   18198:	blt	181b0 <__assert_fail@plt+0x6e80>
   1819c:	b	181bc <__assert_fail@plt+0x6e8c>
   181a0:	ldr	r0, [fp, #8]
   181a4:	movw	r1, #0
   181a8:	cmp	r1, r0
   181ac:	bge	181bc <__assert_fail@plt+0x6e8c>
   181b0:	movw	r0, #0
   181b4:	str	r0, [fp, #-36]	; 0xffffffdc
   181b8:	b	181d4 <__assert_fail@plt+0x6ea4>
   181bc:	ldr	r0, [fp, #8]
   181c0:	movw	r1, #0
   181c4:	sub	r0, r1, r0
   181c8:	movw	r1, #127	; 0x7f
   181cc:	sdiv	r0, r1, r0
   181d0:	str	r0, [fp, #-36]	; 0xffffffdc
   181d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   181d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181dc:	mvn	r2, #0
   181e0:	sub	r1, r2, r1
   181e4:	cmp	r0, r1
   181e8:	ble	1830c <__assert_fail@plt+0x6fdc>
   181ec:	b	18324 <__assert_fail@plt+0x6ff4>
   181f0:	b	181f4 <__assert_fail@plt+0x6ec4>
   181f4:	b	18250 <__assert_fail@plt+0x6f20>
   181f8:	b	18250 <__assert_fail@plt+0x6f20>
   181fc:	ldr	r0, [fp, #8]
   18200:	cmn	r0, #1
   18204:	bne	18250 <__assert_fail@plt+0x6f20>
   18208:	b	1820c <__assert_fail@plt+0x6edc>
   1820c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18210:	mvn	r1, #127	; 0x7f
   18214:	add	r0, r0, r1
   18218:	movw	r1, #0
   1821c:	cmp	r1, r0
   18220:	blt	1830c <__assert_fail@plt+0x6fdc>
   18224:	b	18324 <__assert_fail@plt+0x6ff4>
   18228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1822c:	movw	r1, #0
   18230:	cmp	r1, r0
   18234:	bge	18324 <__assert_fail@plt+0x6ff4>
   18238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1823c:	sub	r0, r0, #1
   18240:	movw	r1, #127	; 0x7f
   18244:	cmp	r1, r0
   18248:	blt	1830c <__assert_fail@plt+0x6fdc>
   1824c:	b	18324 <__assert_fail@plt+0x6ff4>
   18250:	ldr	r0, [fp, #8]
   18254:	mvn	r1, #127	; 0x7f
   18258:	sdiv	r0, r1, r0
   1825c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18260:	cmp	r0, r1
   18264:	blt	1830c <__assert_fail@plt+0x6fdc>
   18268:	b	18324 <__assert_fail@plt+0x6ff4>
   1826c:	ldr	r0, [fp, #8]
   18270:	cmp	r0, #0
   18274:	bne	1827c <__assert_fail@plt+0x6f4c>
   18278:	b	18324 <__assert_fail@plt+0x6ff4>
   1827c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18280:	cmp	r0, #0
   18284:	bge	182f4 <__assert_fail@plt+0x6fc4>
   18288:	b	1828c <__assert_fail@plt+0x6f5c>
   1828c:	b	182d8 <__assert_fail@plt+0x6fa8>
   18290:	b	182d8 <__assert_fail@plt+0x6fa8>
   18294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18298:	cmn	r0, #1
   1829c:	bne	182d8 <__assert_fail@plt+0x6fa8>
   182a0:	b	182a4 <__assert_fail@plt+0x6f74>
   182a4:	ldr	r0, [fp, #8]
   182a8:	mvn	r1, #127	; 0x7f
   182ac:	add	r0, r0, r1
   182b0:	movw	r1, #0
   182b4:	cmp	r1, r0
   182b8:	blt	1830c <__assert_fail@plt+0x6fdc>
   182bc:	b	18324 <__assert_fail@plt+0x6ff4>
   182c0:	ldr	r0, [fp, #8]
   182c4:	sub	r0, r0, #1
   182c8:	movw	r1, #127	; 0x7f
   182cc:	cmp	r1, r0
   182d0:	blt	1830c <__assert_fail@plt+0x6fdc>
   182d4:	b	18324 <__assert_fail@plt+0x6ff4>
   182d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182dc:	mvn	r1, #127	; 0x7f
   182e0:	sdiv	r0, r1, r0
   182e4:	ldr	r1, [fp, #8]
   182e8:	cmp	r0, r1
   182ec:	blt	1830c <__assert_fail@plt+0x6fdc>
   182f0:	b	18324 <__assert_fail@plt+0x6ff4>
   182f4:	ldr	r0, [fp, #8]
   182f8:	movw	r1, #127	; 0x7f
   182fc:	sdiv	r0, r1, r0
   18300:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18304:	cmp	r0, r1
   18308:	bge	18324 <__assert_fail@plt+0x6ff4>
   1830c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18310:	ldr	r1, [fp, #8]
   18314:	mul	r0, r0, r1
   18318:	sxtb	r0, r0
   1831c:	str	r0, [fp, #-28]	; 0xffffffe4
   18320:	b	194e8 <__assert_fail@plt+0x81b8>
   18324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18328:	ldr	r1, [fp, #8]
   1832c:	mul	r0, r0, r1
   18330:	sxtb	r0, r0
   18334:	str	r0, [fp, #-28]	; 0xffffffe4
   18338:	b	194f4 <__assert_fail@plt+0x81c4>
   1833c:	ldr	r0, [fp, #8]
   18340:	cmp	r0, #0
   18344:	bge	18454 <__assert_fail@plt+0x7124>
   18348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1834c:	cmp	r0, #0
   18350:	bge	183dc <__assert_fail@plt+0x70ac>
   18354:	b	18358 <__assert_fail@plt+0x7028>
   18358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1835c:	ldr	r1, [fp, #8]
   18360:	movw	r2, #255	; 0xff
   18364:	sdiv	r1, r2, r1
   18368:	cmp	r0, r1
   1836c:	blt	184f0 <__assert_fail@plt+0x71c0>
   18370:	b	18508 <__assert_fail@plt+0x71d8>
   18374:	b	18378 <__assert_fail@plt+0x7048>
   18378:	ldr	r0, [pc, #3592]	; 19188 <__assert_fail@plt+0x7e58>
   1837c:	ldr	r1, [fp, #8]
   18380:	cmp	r1, r0
   18384:	blt	1839c <__assert_fail@plt+0x706c>
   18388:	b	183a8 <__assert_fail@plt+0x7078>
   1838c:	ldr	r0, [fp, #8]
   18390:	movw	r1, #0
   18394:	cmp	r1, r0
   18398:	bge	183a8 <__assert_fail@plt+0x7078>
   1839c:	movw	r0, #0
   183a0:	str	r0, [fp, #-40]	; 0xffffffd8
   183a4:	b	183c0 <__assert_fail@plt+0x7090>
   183a8:	ldr	r0, [fp, #8]
   183ac:	movw	r1, #0
   183b0:	sub	r0, r1, r0
   183b4:	movw	r1, #255	; 0xff
   183b8:	sdiv	r0, r1, r0
   183bc:	str	r0, [fp, #-40]	; 0xffffffd8
   183c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   183c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183c8:	mvn	r2, #0
   183cc:	sub	r1, r2, r1
   183d0:	cmp	r0, r1
   183d4:	ble	184f0 <__assert_fail@plt+0x71c0>
   183d8:	b	18508 <__assert_fail@plt+0x71d8>
   183dc:	b	183e0 <__assert_fail@plt+0x70b0>
   183e0:	b	18438 <__assert_fail@plt+0x7108>
   183e4:	b	18438 <__assert_fail@plt+0x7108>
   183e8:	ldr	r0, [fp, #8]
   183ec:	cmn	r0, #1
   183f0:	bne	18438 <__assert_fail@plt+0x7108>
   183f4:	b	183f8 <__assert_fail@plt+0x70c8>
   183f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183fc:	add	r0, r0, #0
   18400:	movw	r1, #0
   18404:	cmp	r1, r0
   18408:	blt	184f0 <__assert_fail@plt+0x71c0>
   1840c:	b	18508 <__assert_fail@plt+0x71d8>
   18410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18414:	movw	r1, #0
   18418:	cmp	r1, r0
   1841c:	bge	18508 <__assert_fail@plt+0x71d8>
   18420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18424:	sub	r0, r0, #1
   18428:	mvn	r1, #0
   1842c:	cmp	r1, r0
   18430:	blt	184f0 <__assert_fail@plt+0x71c0>
   18434:	b	18508 <__assert_fail@plt+0x71d8>
   18438:	ldr	r0, [fp, #8]
   1843c:	movw	r1, #0
   18440:	sdiv	r0, r1, r0
   18444:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18448:	cmp	r0, r1
   1844c:	blt	184f0 <__assert_fail@plt+0x71c0>
   18450:	b	18508 <__assert_fail@plt+0x71d8>
   18454:	ldr	r0, [fp, #8]
   18458:	cmp	r0, #0
   1845c:	bne	18464 <__assert_fail@plt+0x7134>
   18460:	b	18508 <__assert_fail@plt+0x71d8>
   18464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18468:	cmp	r0, #0
   1846c:	bge	184d8 <__assert_fail@plt+0x71a8>
   18470:	b	18474 <__assert_fail@plt+0x7144>
   18474:	b	184bc <__assert_fail@plt+0x718c>
   18478:	b	184bc <__assert_fail@plt+0x718c>
   1847c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18480:	cmn	r0, #1
   18484:	bne	184bc <__assert_fail@plt+0x718c>
   18488:	b	1848c <__assert_fail@plt+0x715c>
   1848c:	ldr	r0, [fp, #8]
   18490:	add	r0, r0, #0
   18494:	movw	r1, #0
   18498:	cmp	r1, r0
   1849c:	blt	184f0 <__assert_fail@plt+0x71c0>
   184a0:	b	18508 <__assert_fail@plt+0x71d8>
   184a4:	ldr	r0, [fp, #8]
   184a8:	sub	r0, r0, #1
   184ac:	mvn	r1, #0
   184b0:	cmp	r1, r0
   184b4:	blt	184f0 <__assert_fail@plt+0x71c0>
   184b8:	b	18508 <__assert_fail@plt+0x71d8>
   184bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184c0:	movw	r1, #0
   184c4:	sdiv	r0, r1, r0
   184c8:	ldr	r1, [fp, #8]
   184cc:	cmp	r0, r1
   184d0:	blt	184f0 <__assert_fail@plt+0x71c0>
   184d4:	b	18508 <__assert_fail@plt+0x71d8>
   184d8:	ldr	r0, [fp, #8]
   184dc:	movw	r1, #255	; 0xff
   184e0:	sdiv	r0, r1, r0
   184e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184e8:	cmp	r0, r1
   184ec:	bge	18508 <__assert_fail@plt+0x71d8>
   184f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184f4:	ldr	r1, [fp, #8]
   184f8:	mul	r0, r0, r1
   184fc:	and	r0, r0, #255	; 0xff
   18500:	str	r0, [fp, #-28]	; 0xffffffe4
   18504:	b	194e8 <__assert_fail@plt+0x81b8>
   18508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1850c:	ldr	r1, [fp, #8]
   18510:	mul	r0, r0, r1
   18514:	and	r0, r0, #255	; 0xff
   18518:	str	r0, [fp, #-28]	; 0xffffffe4
   1851c:	b	194f4 <__assert_fail@plt+0x81c4>
   18520:	b	188f8 <__assert_fail@plt+0x75c8>
   18524:	b	18528 <__assert_fail@plt+0x71f8>
   18528:	ldr	r0, [fp, #8]
   1852c:	cmp	r0, #0
   18530:	bge	18644 <__assert_fail@plt+0x7314>
   18534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18538:	cmp	r0, #0
   1853c:	bge	185c8 <__assert_fail@plt+0x7298>
   18540:	b	18544 <__assert_fail@plt+0x7214>
   18544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18548:	ldr	r1, [fp, #8]
   1854c:	movw	r2, #32767	; 0x7fff
   18550:	sdiv	r1, r2, r1
   18554:	cmp	r0, r1
   18558:	blt	186e4 <__assert_fail@plt+0x73b4>
   1855c:	b	186fc <__assert_fail@plt+0x73cc>
   18560:	b	18564 <__assert_fail@plt+0x7234>
   18564:	ldr	r0, [pc, #3100]	; 19188 <__assert_fail@plt+0x7e58>
   18568:	ldr	r1, [fp, #8]
   1856c:	cmp	r1, r0
   18570:	blt	18588 <__assert_fail@plt+0x7258>
   18574:	b	18594 <__assert_fail@plt+0x7264>
   18578:	ldr	r0, [fp, #8]
   1857c:	movw	r1, #0
   18580:	cmp	r1, r0
   18584:	bge	18594 <__assert_fail@plt+0x7264>
   18588:	movw	r0, #0
   1858c:	str	r0, [fp, #-44]	; 0xffffffd4
   18590:	b	185ac <__assert_fail@plt+0x727c>
   18594:	ldr	r0, [fp, #8]
   18598:	movw	r1, #0
   1859c:	sub	r0, r1, r0
   185a0:	movw	r1, #32767	; 0x7fff
   185a4:	sdiv	r0, r1, r0
   185a8:	str	r0, [fp, #-44]	; 0xffffffd4
   185ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   185b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185b4:	mvn	r2, #0
   185b8:	sub	r1, r2, r1
   185bc:	cmp	r0, r1
   185c0:	ble	186e4 <__assert_fail@plt+0x73b4>
   185c4:	b	186fc <__assert_fail@plt+0x73cc>
   185c8:	b	185cc <__assert_fail@plt+0x729c>
   185cc:	b	18628 <__assert_fail@plt+0x72f8>
   185d0:	b	18628 <__assert_fail@plt+0x72f8>
   185d4:	ldr	r0, [fp, #8]
   185d8:	cmn	r0, #1
   185dc:	bne	18628 <__assert_fail@plt+0x72f8>
   185e0:	b	185e4 <__assert_fail@plt+0x72b4>
   185e4:	ldr	r0, [pc, #4068]	; 195d0 <__assert_fail@plt+0x82a0>
   185e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185ec:	add	r0, r1, r0
   185f0:	movw	r1, #0
   185f4:	cmp	r1, r0
   185f8:	blt	186e4 <__assert_fail@plt+0x73b4>
   185fc:	b	186fc <__assert_fail@plt+0x73cc>
   18600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18604:	movw	r1, #0
   18608:	cmp	r1, r0
   1860c:	bge	186fc <__assert_fail@plt+0x73cc>
   18610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18614:	sub	r0, r0, #1
   18618:	movw	r1, #32767	; 0x7fff
   1861c:	cmp	r1, r0
   18620:	blt	186e4 <__assert_fail@plt+0x73b4>
   18624:	b	186fc <__assert_fail@plt+0x73cc>
   18628:	ldr	r0, [pc, #4000]	; 195d0 <__assert_fail@plt+0x82a0>
   1862c:	ldr	r1, [fp, #8]
   18630:	sdiv	r0, r0, r1
   18634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18638:	cmp	r0, r1
   1863c:	blt	186e4 <__assert_fail@plt+0x73b4>
   18640:	b	186fc <__assert_fail@plt+0x73cc>
   18644:	ldr	r0, [fp, #8]
   18648:	cmp	r0, #0
   1864c:	bne	18654 <__assert_fail@plt+0x7324>
   18650:	b	186fc <__assert_fail@plt+0x73cc>
   18654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18658:	cmp	r0, #0
   1865c:	bge	186cc <__assert_fail@plt+0x739c>
   18660:	b	18664 <__assert_fail@plt+0x7334>
   18664:	b	186b0 <__assert_fail@plt+0x7380>
   18668:	b	186b0 <__assert_fail@plt+0x7380>
   1866c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18670:	cmn	r0, #1
   18674:	bne	186b0 <__assert_fail@plt+0x7380>
   18678:	b	1867c <__assert_fail@plt+0x734c>
   1867c:	ldr	r0, [pc, #3916]	; 195d0 <__assert_fail@plt+0x82a0>
   18680:	ldr	r1, [fp, #8]
   18684:	add	r0, r1, r0
   18688:	movw	r1, #0
   1868c:	cmp	r1, r0
   18690:	blt	186e4 <__assert_fail@plt+0x73b4>
   18694:	b	186fc <__assert_fail@plt+0x73cc>
   18698:	ldr	r0, [fp, #8]
   1869c:	sub	r0, r0, #1
   186a0:	movw	r1, #32767	; 0x7fff
   186a4:	cmp	r1, r0
   186a8:	blt	186e4 <__assert_fail@plt+0x73b4>
   186ac:	b	186fc <__assert_fail@plt+0x73cc>
   186b0:	ldr	r0, [pc, #3864]	; 195d0 <__assert_fail@plt+0x82a0>
   186b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186b8:	sdiv	r0, r0, r1
   186bc:	ldr	r1, [fp, #8]
   186c0:	cmp	r0, r1
   186c4:	blt	186e4 <__assert_fail@plt+0x73b4>
   186c8:	b	186fc <__assert_fail@plt+0x73cc>
   186cc:	ldr	r0, [fp, #8]
   186d0:	movw	r1, #32767	; 0x7fff
   186d4:	sdiv	r0, r1, r0
   186d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186dc:	cmp	r0, r1
   186e0:	bge	186fc <__assert_fail@plt+0x73cc>
   186e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186e8:	ldr	r1, [fp, #8]
   186ec:	mul	r0, r0, r1
   186f0:	sxth	r0, r0
   186f4:	str	r0, [fp, #-28]	; 0xffffffe4
   186f8:	b	194e8 <__assert_fail@plt+0x81b8>
   186fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18700:	ldr	r1, [fp, #8]
   18704:	mul	r0, r0, r1
   18708:	sxth	r0, r0
   1870c:	str	r0, [fp, #-28]	; 0xffffffe4
   18710:	b	194f4 <__assert_fail@plt+0x81c4>
   18714:	ldr	r0, [fp, #8]
   18718:	cmp	r0, #0
   1871c:	bge	1882c <__assert_fail@plt+0x74fc>
   18720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18724:	cmp	r0, #0
   18728:	bge	187b4 <__assert_fail@plt+0x7484>
   1872c:	b	18730 <__assert_fail@plt+0x7400>
   18730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18734:	ldr	r1, [fp, #8]
   18738:	movw	r2, #65535	; 0xffff
   1873c:	sdiv	r1, r2, r1
   18740:	cmp	r0, r1
   18744:	blt	188c8 <__assert_fail@plt+0x7598>
   18748:	b	188e0 <__assert_fail@plt+0x75b0>
   1874c:	b	18750 <__assert_fail@plt+0x7420>
   18750:	ldr	r0, [pc, #2608]	; 19188 <__assert_fail@plt+0x7e58>
   18754:	ldr	r1, [fp, #8]
   18758:	cmp	r1, r0
   1875c:	blt	18774 <__assert_fail@plt+0x7444>
   18760:	b	18780 <__assert_fail@plt+0x7450>
   18764:	ldr	r0, [fp, #8]
   18768:	movw	r1, #0
   1876c:	cmp	r1, r0
   18770:	bge	18780 <__assert_fail@plt+0x7450>
   18774:	movw	r0, #0
   18778:	str	r0, [fp, #-48]	; 0xffffffd0
   1877c:	b	18798 <__assert_fail@plt+0x7468>
   18780:	ldr	r0, [fp, #8]
   18784:	movw	r1, #0
   18788:	sub	r0, r1, r0
   1878c:	movw	r1, #65535	; 0xffff
   18790:	sdiv	r0, r1, r0
   18794:	str	r0, [fp, #-48]	; 0xffffffd0
   18798:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1879c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   187a0:	mvn	r2, #0
   187a4:	sub	r1, r2, r1
   187a8:	cmp	r0, r1
   187ac:	ble	188c8 <__assert_fail@plt+0x7598>
   187b0:	b	188e0 <__assert_fail@plt+0x75b0>
   187b4:	b	187b8 <__assert_fail@plt+0x7488>
   187b8:	b	18810 <__assert_fail@plt+0x74e0>
   187bc:	b	18810 <__assert_fail@plt+0x74e0>
   187c0:	ldr	r0, [fp, #8]
   187c4:	cmn	r0, #1
   187c8:	bne	18810 <__assert_fail@plt+0x74e0>
   187cc:	b	187d0 <__assert_fail@plt+0x74a0>
   187d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187d4:	add	r0, r0, #0
   187d8:	movw	r1, #0
   187dc:	cmp	r1, r0
   187e0:	blt	188c8 <__assert_fail@plt+0x7598>
   187e4:	b	188e0 <__assert_fail@plt+0x75b0>
   187e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187ec:	movw	r1, #0
   187f0:	cmp	r1, r0
   187f4:	bge	188e0 <__assert_fail@plt+0x75b0>
   187f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187fc:	sub	r0, r0, #1
   18800:	mvn	r1, #0
   18804:	cmp	r1, r0
   18808:	blt	188c8 <__assert_fail@plt+0x7598>
   1880c:	b	188e0 <__assert_fail@plt+0x75b0>
   18810:	ldr	r0, [fp, #8]
   18814:	movw	r1, #0
   18818:	sdiv	r0, r1, r0
   1881c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18820:	cmp	r0, r1
   18824:	blt	188c8 <__assert_fail@plt+0x7598>
   18828:	b	188e0 <__assert_fail@plt+0x75b0>
   1882c:	ldr	r0, [fp, #8]
   18830:	cmp	r0, #0
   18834:	bne	1883c <__assert_fail@plt+0x750c>
   18838:	b	188e0 <__assert_fail@plt+0x75b0>
   1883c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18840:	cmp	r0, #0
   18844:	bge	188b0 <__assert_fail@plt+0x7580>
   18848:	b	1884c <__assert_fail@plt+0x751c>
   1884c:	b	18894 <__assert_fail@plt+0x7564>
   18850:	b	18894 <__assert_fail@plt+0x7564>
   18854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18858:	cmn	r0, #1
   1885c:	bne	18894 <__assert_fail@plt+0x7564>
   18860:	b	18864 <__assert_fail@plt+0x7534>
   18864:	ldr	r0, [fp, #8]
   18868:	add	r0, r0, #0
   1886c:	movw	r1, #0
   18870:	cmp	r1, r0
   18874:	blt	188c8 <__assert_fail@plt+0x7598>
   18878:	b	188e0 <__assert_fail@plt+0x75b0>
   1887c:	ldr	r0, [fp, #8]
   18880:	sub	r0, r0, #1
   18884:	mvn	r1, #0
   18888:	cmp	r1, r0
   1888c:	blt	188c8 <__assert_fail@plt+0x7598>
   18890:	b	188e0 <__assert_fail@plt+0x75b0>
   18894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18898:	movw	r1, #0
   1889c:	sdiv	r0, r1, r0
   188a0:	ldr	r1, [fp, #8]
   188a4:	cmp	r0, r1
   188a8:	blt	188c8 <__assert_fail@plt+0x7598>
   188ac:	b	188e0 <__assert_fail@plt+0x75b0>
   188b0:	ldr	r0, [fp, #8]
   188b4:	movw	r1, #65535	; 0xffff
   188b8:	sdiv	r0, r1, r0
   188bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188c0:	cmp	r0, r1
   188c4:	bge	188e0 <__assert_fail@plt+0x75b0>
   188c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188cc:	ldr	r1, [fp, #8]
   188d0:	mul	r0, r0, r1
   188d4:	uxth	r0, r0
   188d8:	str	r0, [fp, #-28]	; 0xffffffe4
   188dc:	b	194e8 <__assert_fail@plt+0x81b8>
   188e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188e4:	ldr	r1, [fp, #8]
   188e8:	mul	r0, r0, r1
   188ec:	uxth	r0, r0
   188f0:	str	r0, [fp, #-28]	; 0xffffffe4
   188f4:	b	194f4 <__assert_fail@plt+0x81c4>
   188f8:	b	188fc <__assert_fail@plt+0x75cc>
   188fc:	b	18900 <__assert_fail@plt+0x75d0>
   18900:	ldr	r0, [fp, #8]
   18904:	cmp	r0, #0
   18908:	bge	18a0c <__assert_fail@plt+0x76dc>
   1890c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18910:	cmp	r0, #0
   18914:	bge	189a0 <__assert_fail@plt+0x7670>
   18918:	b	1891c <__assert_fail@plt+0x75ec>
   1891c:	ldr	r0, [pc, #1984]	; 190e4 <__assert_fail@plt+0x7db4>
   18920:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18924:	ldr	r2, [fp, #8]
   18928:	sdiv	r0, r0, r2
   1892c:	cmp	r1, r0
   18930:	blt	18a9c <__assert_fail@plt+0x776c>
   18934:	b	18ab0 <__assert_fail@plt+0x7780>
   18938:	b	1893c <__assert_fail@plt+0x760c>
   1893c:	ldr	r0, [pc, #2116]	; 19188 <__assert_fail@plt+0x7e58>
   18940:	ldr	r1, [fp, #8]
   18944:	cmp	r1, r0
   18948:	blt	18960 <__assert_fail@plt+0x7630>
   1894c:	b	1896c <__assert_fail@plt+0x763c>
   18950:	ldr	r0, [fp, #8]
   18954:	movw	r1, #0
   18958:	cmp	r1, r0
   1895c:	bge	1896c <__assert_fail@plt+0x763c>
   18960:	movw	r0, #0
   18964:	str	r0, [fp, #-52]	; 0xffffffcc
   18968:	b	18984 <__assert_fail@plt+0x7654>
   1896c:	ldr	r0, [pc, #1904]	; 190e4 <__assert_fail@plt+0x7db4>
   18970:	ldr	r1, [fp, #8]
   18974:	movw	r2, #0
   18978:	sub	r1, r2, r1
   1897c:	sdiv	r0, r0, r1
   18980:	str	r0, [fp, #-52]	; 0xffffffcc
   18984:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18988:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1898c:	mvn	r2, #0
   18990:	sub	r1, r2, r1
   18994:	cmp	r0, r1
   18998:	ble	18a9c <__assert_fail@plt+0x776c>
   1899c:	b	18ab0 <__assert_fail@plt+0x7780>
   189a0:	ldr	r0, [fp, #8]
   189a4:	cmn	r0, #1
   189a8:	bne	189f0 <__assert_fail@plt+0x76c0>
   189ac:	b	189b0 <__assert_fail@plt+0x7680>
   189b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189b4:	add	r0, r0, #-2147483648	; 0x80000000
   189b8:	movw	r1, #0
   189bc:	cmp	r1, r0
   189c0:	blt	18a9c <__assert_fail@plt+0x776c>
   189c4:	b	18ab0 <__assert_fail@plt+0x7780>
   189c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189cc:	movw	r1, #0
   189d0:	cmp	r1, r0
   189d4:	bge	18ab0 <__assert_fail@plt+0x7780>
   189d8:	ldr	r0, [pc, #1796]	; 190e4 <__assert_fail@plt+0x7db4>
   189dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189e0:	sub	r1, r1, #1
   189e4:	cmp	r0, r1
   189e8:	blt	18a9c <__assert_fail@plt+0x776c>
   189ec:	b	18ab0 <__assert_fail@plt+0x7780>
   189f0:	ldr	r0, [pc, #4080]	; 199e8 <__assert_fail@plt+0x86b8>
   189f4:	ldr	r1, [fp, #8]
   189f8:	sdiv	r0, r0, r1
   189fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a00:	cmp	r0, r1
   18a04:	blt	18a9c <__assert_fail@plt+0x776c>
   18a08:	b	18ab0 <__assert_fail@plt+0x7780>
   18a0c:	ldr	r0, [fp, #8]
   18a10:	cmp	r0, #0
   18a14:	bne	18a1c <__assert_fail@plt+0x76ec>
   18a18:	b	18ab0 <__assert_fail@plt+0x7780>
   18a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a20:	cmp	r0, #0
   18a24:	bge	18a84 <__assert_fail@plt+0x7754>
   18a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a2c:	cmn	r0, #1
   18a30:	bne	18a68 <__assert_fail@plt+0x7738>
   18a34:	b	18a38 <__assert_fail@plt+0x7708>
   18a38:	ldr	r0, [fp, #8]
   18a3c:	add	r0, r0, #-2147483648	; 0x80000000
   18a40:	movw	r1, #0
   18a44:	cmp	r1, r0
   18a48:	blt	18a9c <__assert_fail@plt+0x776c>
   18a4c:	b	18ab0 <__assert_fail@plt+0x7780>
   18a50:	ldr	r0, [pc, #1676]	; 190e4 <__assert_fail@plt+0x7db4>
   18a54:	ldr	r1, [fp, #8]
   18a58:	sub	r1, r1, #1
   18a5c:	cmp	r0, r1
   18a60:	blt	18a9c <__assert_fail@plt+0x776c>
   18a64:	b	18ab0 <__assert_fail@plt+0x7780>
   18a68:	ldr	r0, [pc, #3960]	; 199e8 <__assert_fail@plt+0x86b8>
   18a6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a70:	sdiv	r0, r0, r1
   18a74:	ldr	r1, [fp, #8]
   18a78:	cmp	r0, r1
   18a7c:	blt	18a9c <__assert_fail@plt+0x776c>
   18a80:	b	18ab0 <__assert_fail@plt+0x7780>
   18a84:	ldr	r0, [pc, #1624]	; 190e4 <__assert_fail@plt+0x7db4>
   18a88:	ldr	r1, [fp, #8]
   18a8c:	sdiv	r0, r0, r1
   18a90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a94:	cmp	r0, r1
   18a98:	bge	18ab0 <__assert_fail@plt+0x7780>
   18a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18aa0:	ldr	r1, [fp, #8]
   18aa4:	mul	r0, r0, r1
   18aa8:	str	r0, [fp, #-28]	; 0xffffffe4
   18aac:	b	194e8 <__assert_fail@plt+0x81b8>
   18ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ab4:	ldr	r1, [fp, #8]
   18ab8:	mul	r0, r0, r1
   18abc:	str	r0, [fp, #-28]	; 0xffffffe4
   18ac0:	b	194f4 <__assert_fail@plt+0x81c4>
   18ac4:	ldr	r0, [fp, #8]
   18ac8:	cmp	r0, #0
   18acc:	bge	18bdc <__assert_fail@plt+0x78ac>
   18ad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ad4:	cmp	r0, #0
   18ad8:	bge	18b64 <__assert_fail@plt+0x7834>
   18adc:	b	18afc <__assert_fail@plt+0x77cc>
   18ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ae4:	ldr	r1, [fp, #8]
   18ae8:	mvn	r2, #0
   18aec:	udiv	r1, r2, r1
   18af0:	cmp	r0, r1
   18af4:	bcc	18c78 <__assert_fail@plt+0x7948>
   18af8:	b	18c8c <__assert_fail@plt+0x795c>
   18afc:	b	18b00 <__assert_fail@plt+0x77d0>
   18b00:	ldr	r0, [pc, #1664]	; 19188 <__assert_fail@plt+0x7e58>
   18b04:	ldr	r1, [fp, #8]
   18b08:	cmp	r1, r0
   18b0c:	blt	18b24 <__assert_fail@plt+0x77f4>
   18b10:	b	18b30 <__assert_fail@plt+0x7800>
   18b14:	ldr	r0, [fp, #8]
   18b18:	movw	r1, #0
   18b1c:	cmp	r1, r0
   18b20:	bge	18b30 <__assert_fail@plt+0x7800>
   18b24:	movw	r0, #1
   18b28:	str	r0, [fp, #-56]	; 0xffffffc8
   18b2c:	b	18b48 <__assert_fail@plt+0x7818>
   18b30:	ldr	r0, [fp, #8]
   18b34:	movw	r1, #0
   18b38:	sub	r0, r1, r0
   18b3c:	mvn	r1, #0
   18b40:	udiv	r0, r1, r0
   18b44:	str	r0, [fp, #-56]	; 0xffffffc8
   18b48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18b4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b50:	mvn	r2, #0
   18b54:	sub	r1, r2, r1
   18b58:	cmp	r0, r1
   18b5c:	bls	18c78 <__assert_fail@plt+0x7948>
   18b60:	b	18c8c <__assert_fail@plt+0x795c>
   18b64:	b	18b68 <__assert_fail@plt+0x7838>
   18b68:	b	18bc0 <__assert_fail@plt+0x7890>
   18b6c:	b	18bc0 <__assert_fail@plt+0x7890>
   18b70:	ldr	r0, [fp, #8]
   18b74:	cmn	r0, #1
   18b78:	bne	18bc0 <__assert_fail@plt+0x7890>
   18b7c:	b	18b80 <__assert_fail@plt+0x7850>
   18b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b84:	add	r0, r0, #0
   18b88:	movw	r1, #0
   18b8c:	cmp	r1, r0
   18b90:	blt	18c78 <__assert_fail@plt+0x7948>
   18b94:	b	18c8c <__assert_fail@plt+0x795c>
   18b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b9c:	movw	r1, #0
   18ba0:	cmp	r1, r0
   18ba4:	bge	18c8c <__assert_fail@plt+0x795c>
   18ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bac:	sub	r0, r0, #1
   18bb0:	mvn	r1, #0
   18bb4:	cmp	r1, r0
   18bb8:	blt	18c78 <__assert_fail@plt+0x7948>
   18bbc:	b	18c8c <__assert_fail@plt+0x795c>
   18bc0:	ldr	r0, [fp, #8]
   18bc4:	movw	r1, #0
   18bc8:	sdiv	r0, r1, r0
   18bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18bd0:	cmp	r0, r1
   18bd4:	blt	18c78 <__assert_fail@plt+0x7948>
   18bd8:	b	18c8c <__assert_fail@plt+0x795c>
   18bdc:	ldr	r0, [fp, #8]
   18be0:	cmp	r0, #0
   18be4:	bne	18bec <__assert_fail@plt+0x78bc>
   18be8:	b	18c8c <__assert_fail@plt+0x795c>
   18bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bf0:	cmp	r0, #0
   18bf4:	bge	18c60 <__assert_fail@plt+0x7930>
   18bf8:	b	18bfc <__assert_fail@plt+0x78cc>
   18bfc:	b	18c44 <__assert_fail@plt+0x7914>
   18c00:	b	18c44 <__assert_fail@plt+0x7914>
   18c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c08:	cmn	r0, #1
   18c0c:	bne	18c44 <__assert_fail@plt+0x7914>
   18c10:	b	18c14 <__assert_fail@plt+0x78e4>
   18c14:	ldr	r0, [fp, #8]
   18c18:	add	r0, r0, #0
   18c1c:	movw	r1, #0
   18c20:	cmp	r1, r0
   18c24:	blt	18c78 <__assert_fail@plt+0x7948>
   18c28:	b	18c8c <__assert_fail@plt+0x795c>
   18c2c:	ldr	r0, [fp, #8]
   18c30:	sub	r0, r0, #1
   18c34:	mvn	r1, #0
   18c38:	cmp	r1, r0
   18c3c:	blt	18c78 <__assert_fail@plt+0x7948>
   18c40:	b	18c8c <__assert_fail@plt+0x795c>
   18c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c48:	movw	r1, #0
   18c4c:	sdiv	r0, r1, r0
   18c50:	ldr	r1, [fp, #8]
   18c54:	cmp	r0, r1
   18c58:	blt	18c78 <__assert_fail@plt+0x7948>
   18c5c:	b	18c8c <__assert_fail@plt+0x795c>
   18c60:	ldr	r0, [fp, #8]
   18c64:	mvn	r1, #0
   18c68:	udiv	r0, r1, r0
   18c6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c70:	cmp	r0, r1
   18c74:	bcs	18c8c <__assert_fail@plt+0x795c>
   18c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c7c:	ldr	r1, [fp, #8]
   18c80:	mul	r0, r0, r1
   18c84:	str	r0, [fp, #-28]	; 0xffffffe4
   18c88:	b	194e8 <__assert_fail@plt+0x81b8>
   18c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c90:	ldr	r1, [fp, #8]
   18c94:	mul	r0, r0, r1
   18c98:	str	r0, [fp, #-28]	; 0xffffffe4
   18c9c:	b	194f4 <__assert_fail@plt+0x81c4>
   18ca0:	b	18ca4 <__assert_fail@plt+0x7974>
   18ca4:	b	18ca8 <__assert_fail@plt+0x7978>
   18ca8:	ldr	r0, [fp, #8]
   18cac:	cmp	r0, #0
   18cb0:	bge	18db4 <__assert_fail@plt+0x7a84>
   18cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cb8:	cmp	r0, #0
   18cbc:	bge	18d48 <__assert_fail@plt+0x7a18>
   18cc0:	b	18cc4 <__assert_fail@plt+0x7994>
   18cc4:	ldr	r0, [pc, #1048]	; 190e4 <__assert_fail@plt+0x7db4>
   18cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ccc:	ldr	r2, [fp, #8]
   18cd0:	sdiv	r0, r0, r2
   18cd4:	cmp	r1, r0
   18cd8:	blt	18e44 <__assert_fail@plt+0x7b14>
   18cdc:	b	18e58 <__assert_fail@plt+0x7b28>
   18ce0:	b	18ce4 <__assert_fail@plt+0x79b4>
   18ce4:	ldr	r0, [pc, #1180]	; 19188 <__assert_fail@plt+0x7e58>
   18ce8:	ldr	r1, [fp, #8]
   18cec:	cmp	r1, r0
   18cf0:	blt	18d08 <__assert_fail@plt+0x79d8>
   18cf4:	b	18d14 <__assert_fail@plt+0x79e4>
   18cf8:	ldr	r0, [fp, #8]
   18cfc:	movw	r1, #0
   18d00:	cmp	r1, r0
   18d04:	bge	18d14 <__assert_fail@plt+0x79e4>
   18d08:	movw	r0, #0
   18d0c:	str	r0, [fp, #-60]	; 0xffffffc4
   18d10:	b	18d2c <__assert_fail@plt+0x79fc>
   18d14:	ldr	r0, [pc, #968]	; 190e4 <__assert_fail@plt+0x7db4>
   18d18:	ldr	r1, [fp, #8]
   18d1c:	movw	r2, #0
   18d20:	sub	r1, r2, r1
   18d24:	sdiv	r0, r0, r1
   18d28:	str	r0, [fp, #-60]	; 0xffffffc4
   18d2c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18d30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d34:	mvn	r2, #0
   18d38:	sub	r1, r2, r1
   18d3c:	cmp	r0, r1
   18d40:	ble	18e44 <__assert_fail@plt+0x7b14>
   18d44:	b	18e58 <__assert_fail@plt+0x7b28>
   18d48:	ldr	r0, [fp, #8]
   18d4c:	cmn	r0, #1
   18d50:	bne	18d98 <__assert_fail@plt+0x7a68>
   18d54:	b	18d58 <__assert_fail@plt+0x7a28>
   18d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d5c:	add	r0, r0, #-2147483648	; 0x80000000
   18d60:	movw	r1, #0
   18d64:	cmp	r1, r0
   18d68:	blt	18e44 <__assert_fail@plt+0x7b14>
   18d6c:	b	18e58 <__assert_fail@plt+0x7b28>
   18d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d74:	movw	r1, #0
   18d78:	cmp	r1, r0
   18d7c:	bge	18e58 <__assert_fail@plt+0x7b28>
   18d80:	ldr	r0, [pc, #860]	; 190e4 <__assert_fail@plt+0x7db4>
   18d84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d88:	sub	r1, r1, #1
   18d8c:	cmp	r0, r1
   18d90:	blt	18e44 <__assert_fail@plt+0x7b14>
   18d94:	b	18e58 <__assert_fail@plt+0x7b28>
   18d98:	ldr	r0, [pc, #3144]	; 199e8 <__assert_fail@plt+0x86b8>
   18d9c:	ldr	r1, [fp, #8]
   18da0:	sdiv	r0, r0, r1
   18da4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18da8:	cmp	r0, r1
   18dac:	blt	18e44 <__assert_fail@plt+0x7b14>
   18db0:	b	18e58 <__assert_fail@plt+0x7b28>
   18db4:	ldr	r0, [fp, #8]
   18db8:	cmp	r0, #0
   18dbc:	bne	18dc4 <__assert_fail@plt+0x7a94>
   18dc0:	b	18e58 <__assert_fail@plt+0x7b28>
   18dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dc8:	cmp	r0, #0
   18dcc:	bge	18e2c <__assert_fail@plt+0x7afc>
   18dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dd4:	cmn	r0, #1
   18dd8:	bne	18e10 <__assert_fail@plt+0x7ae0>
   18ddc:	b	18de0 <__assert_fail@plt+0x7ab0>
   18de0:	ldr	r0, [fp, #8]
   18de4:	add	r0, r0, #-2147483648	; 0x80000000
   18de8:	movw	r1, #0
   18dec:	cmp	r1, r0
   18df0:	blt	18e44 <__assert_fail@plt+0x7b14>
   18df4:	b	18e58 <__assert_fail@plt+0x7b28>
   18df8:	ldr	r0, [pc, #740]	; 190e4 <__assert_fail@plt+0x7db4>
   18dfc:	ldr	r1, [fp, #8]
   18e00:	sub	r1, r1, #1
   18e04:	cmp	r0, r1
   18e08:	blt	18e44 <__assert_fail@plt+0x7b14>
   18e0c:	b	18e58 <__assert_fail@plt+0x7b28>
   18e10:	ldr	r0, [pc, #3024]	; 199e8 <__assert_fail@plt+0x86b8>
   18e14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e18:	sdiv	r0, r0, r1
   18e1c:	ldr	r1, [fp, #8]
   18e20:	cmp	r0, r1
   18e24:	blt	18e44 <__assert_fail@plt+0x7b14>
   18e28:	b	18e58 <__assert_fail@plt+0x7b28>
   18e2c:	ldr	r0, [pc, #688]	; 190e4 <__assert_fail@plt+0x7db4>
   18e30:	ldr	r1, [fp, #8]
   18e34:	sdiv	r0, r0, r1
   18e38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e3c:	cmp	r0, r1
   18e40:	bge	18e58 <__assert_fail@plt+0x7b28>
   18e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e48:	ldr	r1, [fp, #8]
   18e4c:	mul	r0, r0, r1
   18e50:	str	r0, [fp, #-28]	; 0xffffffe4
   18e54:	b	194e8 <__assert_fail@plt+0x81b8>
   18e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e5c:	ldr	r1, [fp, #8]
   18e60:	mul	r0, r0, r1
   18e64:	str	r0, [fp, #-28]	; 0xffffffe4
   18e68:	b	194f4 <__assert_fail@plt+0x81c4>
   18e6c:	ldr	r0, [fp, #8]
   18e70:	cmp	r0, #0
   18e74:	bge	18f84 <__assert_fail@plt+0x7c54>
   18e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e7c:	cmp	r0, #0
   18e80:	bge	18f0c <__assert_fail@plt+0x7bdc>
   18e84:	b	18ea4 <__assert_fail@plt+0x7b74>
   18e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e8c:	ldr	r1, [fp, #8]
   18e90:	mvn	r2, #0
   18e94:	udiv	r1, r2, r1
   18e98:	cmp	r0, r1
   18e9c:	bcc	19020 <__assert_fail@plt+0x7cf0>
   18ea0:	b	19034 <__assert_fail@plt+0x7d04>
   18ea4:	b	18ea8 <__assert_fail@plt+0x7b78>
   18ea8:	ldr	r0, [pc, #728]	; 19188 <__assert_fail@plt+0x7e58>
   18eac:	ldr	r1, [fp, #8]
   18eb0:	cmp	r1, r0
   18eb4:	blt	18ecc <__assert_fail@plt+0x7b9c>
   18eb8:	b	18ed8 <__assert_fail@plt+0x7ba8>
   18ebc:	ldr	r0, [fp, #8]
   18ec0:	movw	r1, #0
   18ec4:	cmp	r1, r0
   18ec8:	bge	18ed8 <__assert_fail@plt+0x7ba8>
   18ecc:	movw	r0, #1
   18ed0:	str	r0, [fp, #-64]	; 0xffffffc0
   18ed4:	b	18ef0 <__assert_fail@plt+0x7bc0>
   18ed8:	ldr	r0, [fp, #8]
   18edc:	movw	r1, #0
   18ee0:	sub	r0, r1, r0
   18ee4:	mvn	r1, #0
   18ee8:	udiv	r0, r1, r0
   18eec:	str	r0, [fp, #-64]	; 0xffffffc0
   18ef0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18ef4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ef8:	mvn	r2, #0
   18efc:	sub	r1, r2, r1
   18f00:	cmp	r0, r1
   18f04:	bls	19020 <__assert_fail@plt+0x7cf0>
   18f08:	b	19034 <__assert_fail@plt+0x7d04>
   18f0c:	b	18f10 <__assert_fail@plt+0x7be0>
   18f10:	b	18f68 <__assert_fail@plt+0x7c38>
   18f14:	b	18f68 <__assert_fail@plt+0x7c38>
   18f18:	ldr	r0, [fp, #8]
   18f1c:	cmn	r0, #1
   18f20:	bne	18f68 <__assert_fail@plt+0x7c38>
   18f24:	b	18f28 <__assert_fail@plt+0x7bf8>
   18f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f2c:	add	r0, r0, #0
   18f30:	movw	r1, #0
   18f34:	cmp	r1, r0
   18f38:	blt	19020 <__assert_fail@plt+0x7cf0>
   18f3c:	b	19034 <__assert_fail@plt+0x7d04>
   18f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f44:	movw	r1, #0
   18f48:	cmp	r1, r0
   18f4c:	bge	19034 <__assert_fail@plt+0x7d04>
   18f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f54:	sub	r0, r0, #1
   18f58:	mvn	r1, #0
   18f5c:	cmp	r1, r0
   18f60:	blt	19020 <__assert_fail@plt+0x7cf0>
   18f64:	b	19034 <__assert_fail@plt+0x7d04>
   18f68:	ldr	r0, [fp, #8]
   18f6c:	movw	r1, #0
   18f70:	sdiv	r0, r1, r0
   18f74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f78:	cmp	r0, r1
   18f7c:	blt	19020 <__assert_fail@plt+0x7cf0>
   18f80:	b	19034 <__assert_fail@plt+0x7d04>
   18f84:	ldr	r0, [fp, #8]
   18f88:	cmp	r0, #0
   18f8c:	bne	18f94 <__assert_fail@plt+0x7c64>
   18f90:	b	19034 <__assert_fail@plt+0x7d04>
   18f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f98:	cmp	r0, #0
   18f9c:	bge	19008 <__assert_fail@plt+0x7cd8>
   18fa0:	b	18fa4 <__assert_fail@plt+0x7c74>
   18fa4:	b	18fec <__assert_fail@plt+0x7cbc>
   18fa8:	b	18fec <__assert_fail@plt+0x7cbc>
   18fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fb0:	cmn	r0, #1
   18fb4:	bne	18fec <__assert_fail@plt+0x7cbc>
   18fb8:	b	18fbc <__assert_fail@plt+0x7c8c>
   18fbc:	ldr	r0, [fp, #8]
   18fc0:	add	r0, r0, #0
   18fc4:	movw	r1, #0
   18fc8:	cmp	r1, r0
   18fcc:	blt	19020 <__assert_fail@plt+0x7cf0>
   18fd0:	b	19034 <__assert_fail@plt+0x7d04>
   18fd4:	ldr	r0, [fp, #8]
   18fd8:	sub	r0, r0, #1
   18fdc:	mvn	r1, #0
   18fe0:	cmp	r1, r0
   18fe4:	blt	19020 <__assert_fail@plt+0x7cf0>
   18fe8:	b	19034 <__assert_fail@plt+0x7d04>
   18fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ff0:	movw	r1, #0
   18ff4:	sdiv	r0, r1, r0
   18ff8:	ldr	r1, [fp, #8]
   18ffc:	cmp	r0, r1
   19000:	blt	19020 <__assert_fail@plt+0x7cf0>
   19004:	b	19034 <__assert_fail@plt+0x7d04>
   19008:	ldr	r0, [fp, #8]
   1900c:	mvn	r1, #0
   19010:	udiv	r0, r1, r0
   19014:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19018:	cmp	r0, r1
   1901c:	bcs	19034 <__assert_fail@plt+0x7d04>
   19020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19024:	ldr	r1, [fp, #8]
   19028:	mul	r0, r0, r1
   1902c:	str	r0, [fp, #-28]	; 0xffffffe4
   19030:	b	194e8 <__assert_fail@plt+0x81b8>
   19034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19038:	ldr	r1, [fp, #8]
   1903c:	mul	r0, r0, r1
   19040:	str	r0, [fp, #-28]	; 0xffffffe4
   19044:	b	194f4 <__assert_fail@plt+0x81c4>
   19048:	b	1904c <__assert_fail@plt+0x7d1c>
   1904c:	ldr	r0, [fp, #8]
   19050:	cmp	r0, #0
   19054:	bge	191c4 <__assert_fail@plt+0x7e94>
   19058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1905c:	cmp	r0, #0
   19060:	bge	1913c <__assert_fail@plt+0x7e0c>
   19064:	b	19068 <__assert_fail@plt+0x7d38>
   19068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1906c:	ldr	r1, [fp, #8]
   19070:	asr	r3, r1, #31
   19074:	mvn	r2, #0
   19078:	mvn	ip, #-2147483648	; 0x80000000
   1907c:	str	r0, [fp, #-68]	; 0xffffffbc
   19080:	mov	r0, r2
   19084:	str	r1, [fp, #-72]	; 0xffffffb8
   19088:	mov	r1, ip
   1908c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19090:	bl	20fbc <__assert_fail@plt+0xfc8c>
   19094:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19098:	subs	r0, r2, r0
   1909c:	rscs	r1, r1, r2, asr #31
   190a0:	blt	1928c <__assert_fail@plt+0x7f5c>
   190a4:	b	192a0 <__assert_fail@plt+0x7f70>
   190a8:	b	190ac <__assert_fail@plt+0x7d7c>
   190ac:	ldr	r0, [pc, #212]	; 19188 <__assert_fail@plt+0x7e58>
   190b0:	ldr	r1, [fp, #8]
   190b4:	cmp	r1, r0
   190b8:	blt	190d0 <__assert_fail@plt+0x7da0>
   190bc:	b	190e8 <__assert_fail@plt+0x7db8>
   190c0:	ldr	r0, [fp, #8]
   190c4:	movw	r1, #0
   190c8:	cmp	r1, r0
   190cc:	bge	190e8 <__assert_fail@plt+0x7db8>
   190d0:	mov	r0, #0
   190d4:	mvn	r1, #0
   190d8:	str	r1, [fp, #-76]	; 0xffffffb4
   190dc:	str	r0, [fp, #-80]	; 0xffffffb0
   190e0:	b	1911c <__assert_fail@plt+0x7dec>
   190e4:	svcvc	0x00ffffff
   190e8:	ldr	r0, [fp, #8]
   190ec:	rsb	r0, r0, #0
   190f0:	asr	r3, r0, #31
   190f4:	mvn	r1, #0
   190f8:	mvn	r2, #-2147483648	; 0x80000000
   190fc:	str	r0, [fp, #-84]	; 0xffffffac
   19100:	mov	r0, r1
   19104:	mov	r1, r2
   19108:	ldr	r2, [fp, #-84]	; 0xffffffac
   1910c:	bl	20fbc <__assert_fail@plt+0xfc8c>
   19110:	str	r0, [fp, #-76]	; 0xffffffb4
   19114:	str	r1, [fp, #-80]	; 0xffffffb0
   19118:	b	1911c <__assert_fail@plt+0x7dec>
   1911c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   19120:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19124:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19128:	mvn	r2, r2
   1912c:	subs	r1, r2, r1
   19130:	rscs	r0, r0, r2, asr #31
   19134:	bge	1928c <__assert_fail@plt+0x7f5c>
   19138:	b	192a0 <__assert_fail@plt+0x7f70>
   1913c:	ldr	r0, [fp, #8]
   19140:	cmn	r0, #1
   19144:	bne	1918c <__assert_fail@plt+0x7e5c>
   19148:	b	1914c <__assert_fail@plt+0x7e1c>
   1914c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19150:	mov	r1, #-2147483648	; 0x80000000
   19154:	add	r1, r1, r0, asr #31
   19158:	rsbs	r0, r0, #0
   1915c:	rscs	r1, r1, #0
   19160:	blt	1928c <__assert_fail@plt+0x7f5c>
   19164:	b	192a0 <__assert_fail@plt+0x7f70>
   19168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1916c:	movw	r1, #0
   19170:	cmp	r1, r0
   19174:	bge	192a0 <__assert_fail@plt+0x7f70>
   19178:	mov	r0, #0
   1917c:	cmp	r0, #0
   19180:	bne	1928c <__assert_fail@plt+0x7f5c>
   19184:	b	192a0 <__assert_fail@plt+0x7f70>
   19188:	andhi	r0, r0, r1
   1918c:	ldr	r0, [fp, #8]
   19190:	asr	r3, r0, #31
   19194:	mov	r1, #0
   19198:	mov	r2, #-2147483648	; 0x80000000
   1919c:	str	r0, [fp, #-88]	; 0xffffffa8
   191a0:	mov	r0, r1
   191a4:	mov	r1, r2
   191a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   191ac:	bl	20fbc <__assert_fail@plt+0xfc8c>
   191b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   191b4:	subs	r0, r0, r2
   191b8:	sbcs	r1, r1, r2, asr #31
   191bc:	blt	1928c <__assert_fail@plt+0x7f5c>
   191c0:	b	192a0 <__assert_fail@plt+0x7f70>
   191c4:	ldr	r0, [fp, #8]
   191c8:	cmp	r0, #0
   191cc:	bne	191d4 <__assert_fail@plt+0x7ea4>
   191d0:	b	192a0 <__assert_fail@plt+0x7f70>
   191d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191d8:	cmp	r0, #0
   191dc:	bge	19254 <__assert_fail@plt+0x7f24>
   191e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191e4:	cmn	r0, #1
   191e8:	bne	1921c <__assert_fail@plt+0x7eec>
   191ec:	b	191f0 <__assert_fail@plt+0x7ec0>
   191f0:	ldr	r0, [fp, #8]
   191f4:	mov	r1, #-2147483648	; 0x80000000
   191f8:	add	r1, r1, r0, asr #31
   191fc:	rsbs	r0, r0, #0
   19200:	rscs	r1, r1, #0
   19204:	blt	1928c <__assert_fail@plt+0x7f5c>
   19208:	b	192a0 <__assert_fail@plt+0x7f70>
   1920c:	mov	r0, #0
   19210:	cmp	r0, #0
   19214:	bne	1928c <__assert_fail@plt+0x7f5c>
   19218:	b	192a0 <__assert_fail@plt+0x7f70>
   1921c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19220:	asr	r3, r0, #31
   19224:	mov	r1, #0
   19228:	mov	r2, #-2147483648	; 0x80000000
   1922c:	str	r0, [fp, #-92]	; 0xffffffa4
   19230:	mov	r0, r1
   19234:	mov	r1, r2
   19238:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1923c:	bl	20fbc <__assert_fail@plt+0xfc8c>
   19240:	ldr	r2, [fp, #8]
   19244:	subs	r0, r0, r2
   19248:	sbcs	r1, r1, r2, asr #31
   1924c:	blt	1928c <__assert_fail@plt+0x7f5c>
   19250:	b	192a0 <__assert_fail@plt+0x7f70>
   19254:	ldr	r0, [fp, #8]
   19258:	asr	r3, r0, #31
   1925c:	mvn	r1, #0
   19260:	mvn	r2, #-2147483648	; 0x80000000
   19264:	str	r0, [fp, #-96]	; 0xffffffa0
   19268:	mov	r0, r1
   1926c:	mov	r1, r2
   19270:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19274:	bl	20fbc <__assert_fail@plt+0xfc8c>
   19278:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1927c:	subs	r0, r0, r2
   19280:	sbcs	r1, r1, r2, asr #31
   19284:	bge	192a0 <__assert_fail@plt+0x7f70>
   19288:	b	1928c <__assert_fail@plt+0x7f5c>
   1928c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19290:	ldr	r1, [fp, #8]
   19294:	mul	r0, r0, r1
   19298:	str	r0, [fp, #-28]	; 0xffffffe4
   1929c:	b	194e8 <__assert_fail@plt+0x81b8>
   192a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192a4:	ldr	r1, [fp, #8]
   192a8:	mul	r0, r0, r1
   192ac:	str	r0, [fp, #-28]	; 0xffffffe4
   192b0:	b	194f4 <__assert_fail@plt+0x81c4>
   192b4:	ldr	r0, [fp, #8]
   192b8:	cmp	r0, #0
   192bc:	bge	1940c <__assert_fail@plt+0x80dc>
   192c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192c4:	cmp	r0, #0
   192c8:	bge	19394 <__assert_fail@plt+0x8064>
   192cc:	b	1930c <__assert_fail@plt+0x7fdc>
   192d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192d4:	ldr	r1, [fp, #8]
   192d8:	asr	r3, r1, #31
   192dc:	mvn	r2, #0
   192e0:	str	r0, [fp, #-100]	; 0xffffff9c
   192e4:	mov	r0, r2
   192e8:	str	r1, [fp, #-104]	; 0xffffff98
   192ec:	mov	r1, r2
   192f0:	ldr	r2, [fp, #-104]	; 0xffffff98
   192f4:	bl	21090 <__assert_fail@plt+0xfd60>
   192f8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   192fc:	subs	r0, r2, r0
   19300:	rscs	r1, r1, r2, asr #31
   19304:	bcc	194c0 <__assert_fail@plt+0x8190>
   19308:	b	194d4 <__assert_fail@plt+0x81a4>
   1930c:	b	19310 <__assert_fail@plt+0x7fe0>
   19310:	ldr	r0, [pc, #-400]	; 19188 <__assert_fail@plt+0x7e58>
   19314:	ldr	r1, [fp, #8]
   19318:	cmp	r1, r0
   1931c:	blt	19334 <__assert_fail@plt+0x8004>
   19320:	b	19348 <__assert_fail@plt+0x8018>
   19324:	ldr	r0, [fp, #8]
   19328:	movw	r1, #0
   1932c:	cmp	r1, r0
   19330:	bge	19348 <__assert_fail@plt+0x8018>
   19334:	mov	r0, #1
   19338:	mvn	r1, #0
   1933c:	str	r1, [sp, #108]	; 0x6c
   19340:	str	r0, [sp, #104]	; 0x68
   19344:	b	19374 <__assert_fail@plt+0x8044>
   19348:	ldr	r0, [fp, #8]
   1934c:	rsb	r0, r0, #0
   19350:	asr	r3, r0, #31
   19354:	mvn	r1, #0
   19358:	str	r0, [sp, #100]	; 0x64
   1935c:	mov	r0, r1
   19360:	ldr	r2, [sp, #100]	; 0x64
   19364:	bl	21090 <__assert_fail@plt+0xfd60>
   19368:	str	r0, [sp, #108]	; 0x6c
   1936c:	str	r1, [sp, #104]	; 0x68
   19370:	b	19374 <__assert_fail@plt+0x8044>
   19374:	ldr	r0, [sp, #104]	; 0x68
   19378:	ldr	r1, [sp, #108]	; 0x6c
   1937c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19380:	mvn	r2, r2
   19384:	subs	r1, r2, r1
   19388:	rscs	r0, r0, r2, asr #31
   1938c:	bcs	194c0 <__assert_fail@plt+0x8190>
   19390:	b	194d4 <__assert_fail@plt+0x81a4>
   19394:	b	19398 <__assert_fail@plt+0x8068>
   19398:	b	193f0 <__assert_fail@plt+0x80c0>
   1939c:	b	193f0 <__assert_fail@plt+0x80c0>
   193a0:	ldr	r0, [fp, #8]
   193a4:	cmn	r0, #1
   193a8:	bne	193f0 <__assert_fail@plt+0x80c0>
   193ac:	b	193b0 <__assert_fail@plt+0x8080>
   193b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193b4:	add	r0, r0, #0
   193b8:	movw	r1, #0
   193bc:	cmp	r1, r0
   193c0:	blt	194c0 <__assert_fail@plt+0x8190>
   193c4:	b	194d4 <__assert_fail@plt+0x81a4>
   193c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193cc:	movw	r1, #0
   193d0:	cmp	r1, r0
   193d4:	bge	194d4 <__assert_fail@plt+0x81a4>
   193d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193dc:	sub	r0, r0, #1
   193e0:	mvn	r1, #0
   193e4:	cmp	r1, r0
   193e8:	blt	194c0 <__assert_fail@plt+0x8190>
   193ec:	b	194d4 <__assert_fail@plt+0x81a4>
   193f0:	ldr	r0, [fp, #8]
   193f4:	movw	r1, #0
   193f8:	sdiv	r0, r1, r0
   193fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19400:	cmp	r0, r1
   19404:	blt	194c0 <__assert_fail@plt+0x8190>
   19408:	b	194d4 <__assert_fail@plt+0x81a4>
   1940c:	ldr	r0, [fp, #8]
   19410:	cmp	r0, #0
   19414:	bne	1941c <__assert_fail@plt+0x80ec>
   19418:	b	194d4 <__assert_fail@plt+0x81a4>
   1941c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19420:	cmp	r0, #0
   19424:	bge	19490 <__assert_fail@plt+0x8160>
   19428:	b	1942c <__assert_fail@plt+0x80fc>
   1942c:	b	19474 <__assert_fail@plt+0x8144>
   19430:	b	19474 <__assert_fail@plt+0x8144>
   19434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19438:	cmn	r0, #1
   1943c:	bne	19474 <__assert_fail@plt+0x8144>
   19440:	b	19444 <__assert_fail@plt+0x8114>
   19444:	ldr	r0, [fp, #8]
   19448:	add	r0, r0, #0
   1944c:	movw	r1, #0
   19450:	cmp	r1, r0
   19454:	blt	194c0 <__assert_fail@plt+0x8190>
   19458:	b	194d4 <__assert_fail@plt+0x81a4>
   1945c:	ldr	r0, [fp, #8]
   19460:	sub	r0, r0, #1
   19464:	mvn	r1, #0
   19468:	cmp	r1, r0
   1946c:	blt	194c0 <__assert_fail@plt+0x8190>
   19470:	b	194d4 <__assert_fail@plt+0x81a4>
   19474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19478:	movw	r1, #0
   1947c:	sdiv	r0, r1, r0
   19480:	ldr	r1, [fp, #8]
   19484:	cmp	r0, r1
   19488:	blt	194c0 <__assert_fail@plt+0x8190>
   1948c:	b	194d4 <__assert_fail@plt+0x81a4>
   19490:	ldr	r0, [fp, #8]
   19494:	asr	r3, r0, #31
   19498:	mvn	r1, #0
   1949c:	str	r0, [sp, #96]	; 0x60
   194a0:	mov	r0, r1
   194a4:	ldr	r2, [sp, #96]	; 0x60
   194a8:	bl	21090 <__assert_fail@plt+0xfd60>
   194ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   194b0:	subs	r0, r0, r2
   194b4:	sbcs	r1, r1, r2, asr #31
   194b8:	bcs	194d4 <__assert_fail@plt+0x81a4>
   194bc:	b	194c0 <__assert_fail@plt+0x8190>
   194c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194c4:	ldr	r1, [fp, #8]
   194c8:	mul	r0, r0, r1
   194cc:	str	r0, [fp, #-28]	; 0xffffffe4
   194d0:	b	194e8 <__assert_fail@plt+0x81b8>
   194d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194d8:	ldr	r1, [fp, #8]
   194dc:	mul	r0, r0, r1
   194e0:	str	r0, [fp, #-28]	; 0xffffffe4
   194e4:	b	194f4 <__assert_fail@plt+0x81c4>
   194e8:	ldr	r0, [pc, #-1036]	; 190e4 <__assert_fail@plt+0x7db4>
   194ec:	str	r0, [sp, #92]	; 0x5c
   194f0:	b	19514 <__assert_fail@plt+0x81e4>
   194f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   194f8:	cmp	r0, #64	; 0x40
   194fc:	movw	r0, #0
   19500:	movlt	r0, #1
   19504:	tst	r0, #1
   19508:	movw	r0, #64	; 0x40
   1950c:	moveq	r0, #0
   19510:	str	r0, [sp, #92]	; 0x5c
   19514:	ldr	r0, [sp, #92]	; 0x5c
   19518:	str	r0, [fp, #-32]	; 0xffffffe0
   1951c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19520:	cmp	r0, #0
   19524:	beq	19554 <__assert_fail@plt+0x8224>
   19528:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1952c:	ldr	r1, [fp, #8]
   19530:	sdiv	r0, r0, r1
   19534:	str	r0, [fp, #-24]	; 0xffffffe8
   19538:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1953c:	mov	r1, r0
   19540:	ldr	r2, [fp, #8]
   19544:	sdiv	r3, r0, r2
   19548:	mls	r0, r3, r2, r0
   1954c:	sub	r0, r1, r0
   19550:	str	r0, [fp, #-28]	; 0xffffffe4
   19554:	ldr	r0, [fp, #-4]
   19558:	movw	r1, #0
   1955c:	cmp	r0, r1
   19560:	bne	19570 <__assert_fail@plt+0x8240>
   19564:	ldr	r0, [fp, #-8]
   19568:	movw	r1, #0
   1956c:	str	r1, [r0]
   19570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19574:	ldr	r1, [fp, #-20]	; 0xffffffec
   19578:	sub	r0, r0, r1
   1957c:	ldr	r1, [fp, #-12]
   19580:	cmp	r0, r1
   19584:	bge	1a970 <__assert_fail@plt+0x9640>
   19588:	ldr	r0, [fp, #-20]	; 0xffffffec
   1958c:	ldr	r1, [fp, #-12]
   19590:	add	r1, r0, r1
   19594:	mov	r2, #1
   19598:	cmp	r1, r0
   1959c:	movwvc	r2, #0
   195a0:	str	r1, [fp, #-24]	; 0xffffffe8
   195a4:	tst	r2, #1
   195a8:	bne	1a96c <__assert_fail@plt+0x963c>
   195ac:	ldr	r0, [fp, #-16]
   195b0:	movw	r1, #0
   195b4:	cmp	r1, r0
   195b8:	bgt	195cc <__assert_fail@plt+0x829c>
   195bc:	ldr	r0, [fp, #-16]
   195c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195c4:	cmp	r0, r1
   195c8:	blt	1a96c <__assert_fail@plt+0x963c>
   195cc:	b	199a8 <__assert_fail@plt+0x8678>
   195d0:			; <UNDEFINED> instruction: 0xffff8000
   195d4:	b	195d8 <__assert_fail@plt+0x82a8>
   195d8:	ldr	r0, [fp, #8]
   195dc:	cmp	r0, #0
   195e0:	bge	196f4 <__assert_fail@plt+0x83c4>
   195e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195e8:	cmp	r0, #0
   195ec:	bge	19678 <__assert_fail@plt+0x8348>
   195f0:	b	195f4 <__assert_fail@plt+0x82c4>
   195f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195f8:	ldr	r1, [fp, #8]
   195fc:	movw	r2, #127	; 0x7f
   19600:	sdiv	r1, r2, r1
   19604:	cmp	r0, r1
   19608:	blt	19794 <__assert_fail@plt+0x8464>
   1960c:	b	197ac <__assert_fail@plt+0x847c>
   19610:	b	19614 <__assert_fail@plt+0x82e4>
   19614:	ldr	r0, [pc, #-1172]	; 19188 <__assert_fail@plt+0x7e58>
   19618:	ldr	r1, [fp, #8]
   1961c:	cmp	r1, r0
   19620:	blt	19638 <__assert_fail@plt+0x8308>
   19624:	b	19644 <__assert_fail@plt+0x8314>
   19628:	ldr	r0, [fp, #8]
   1962c:	movw	r1, #0
   19630:	cmp	r1, r0
   19634:	bge	19644 <__assert_fail@plt+0x8314>
   19638:	movw	r0, #0
   1963c:	str	r0, [sp, #88]	; 0x58
   19640:	b	1965c <__assert_fail@plt+0x832c>
   19644:	ldr	r0, [fp, #8]
   19648:	movw	r1, #0
   1964c:	sub	r0, r1, r0
   19650:	movw	r1, #127	; 0x7f
   19654:	sdiv	r0, r1, r0
   19658:	str	r0, [sp, #88]	; 0x58
   1965c:	ldr	r0, [sp, #88]	; 0x58
   19660:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19664:	mvn	r2, #0
   19668:	sub	r1, r2, r1
   1966c:	cmp	r0, r1
   19670:	ble	19794 <__assert_fail@plt+0x8464>
   19674:	b	197ac <__assert_fail@plt+0x847c>
   19678:	b	1967c <__assert_fail@plt+0x834c>
   1967c:	b	196d8 <__assert_fail@plt+0x83a8>
   19680:	b	196d8 <__assert_fail@plt+0x83a8>
   19684:	ldr	r0, [fp, #8]
   19688:	cmn	r0, #1
   1968c:	bne	196d8 <__assert_fail@plt+0x83a8>
   19690:	b	19694 <__assert_fail@plt+0x8364>
   19694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19698:	mvn	r1, #127	; 0x7f
   1969c:	add	r0, r0, r1
   196a0:	movw	r1, #0
   196a4:	cmp	r1, r0
   196a8:	blt	19794 <__assert_fail@plt+0x8464>
   196ac:	b	197ac <__assert_fail@plt+0x847c>
   196b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196b4:	movw	r1, #0
   196b8:	cmp	r1, r0
   196bc:	bge	197ac <__assert_fail@plt+0x847c>
   196c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196c4:	sub	r0, r0, #1
   196c8:	movw	r1, #127	; 0x7f
   196cc:	cmp	r1, r0
   196d0:	blt	19794 <__assert_fail@plt+0x8464>
   196d4:	b	197ac <__assert_fail@plt+0x847c>
   196d8:	ldr	r0, [fp, #8]
   196dc:	mvn	r1, #127	; 0x7f
   196e0:	sdiv	r0, r1, r0
   196e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196e8:	cmp	r0, r1
   196ec:	blt	19794 <__assert_fail@plt+0x8464>
   196f0:	b	197ac <__assert_fail@plt+0x847c>
   196f4:	ldr	r0, [fp, #8]
   196f8:	cmp	r0, #0
   196fc:	bne	19704 <__assert_fail@plt+0x83d4>
   19700:	b	197ac <__assert_fail@plt+0x847c>
   19704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19708:	cmp	r0, #0
   1970c:	bge	1977c <__assert_fail@plt+0x844c>
   19710:	b	19714 <__assert_fail@plt+0x83e4>
   19714:	b	19760 <__assert_fail@plt+0x8430>
   19718:	b	19760 <__assert_fail@plt+0x8430>
   1971c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19720:	cmn	r0, #1
   19724:	bne	19760 <__assert_fail@plt+0x8430>
   19728:	b	1972c <__assert_fail@plt+0x83fc>
   1972c:	ldr	r0, [fp, #8]
   19730:	mvn	r1, #127	; 0x7f
   19734:	add	r0, r0, r1
   19738:	movw	r1, #0
   1973c:	cmp	r1, r0
   19740:	blt	19794 <__assert_fail@plt+0x8464>
   19744:	b	197ac <__assert_fail@plt+0x847c>
   19748:	ldr	r0, [fp, #8]
   1974c:	sub	r0, r0, #1
   19750:	movw	r1, #127	; 0x7f
   19754:	cmp	r1, r0
   19758:	blt	19794 <__assert_fail@plt+0x8464>
   1975c:	b	197ac <__assert_fail@plt+0x847c>
   19760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19764:	mvn	r1, #127	; 0x7f
   19768:	sdiv	r0, r1, r0
   1976c:	ldr	r1, [fp, #8]
   19770:	cmp	r0, r1
   19774:	blt	19794 <__assert_fail@plt+0x8464>
   19778:	b	197ac <__assert_fail@plt+0x847c>
   1977c:	ldr	r0, [fp, #8]
   19780:	movw	r1, #127	; 0x7f
   19784:	sdiv	r0, r1, r0
   19788:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1978c:	cmp	r0, r1
   19790:	bge	197ac <__assert_fail@plt+0x847c>
   19794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19798:	ldr	r1, [fp, #8]
   1979c:	mul	r0, r0, r1
   197a0:	sxtb	r0, r0
   197a4:	str	r0, [fp, #-28]	; 0xffffffe4
   197a8:	b	1a96c <__assert_fail@plt+0x963c>
   197ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197b0:	ldr	r1, [fp, #8]
   197b4:	mul	r0, r0, r1
   197b8:	sxtb	r0, r0
   197bc:	str	r0, [fp, #-28]	; 0xffffffe4
   197c0:	b	1a970 <__assert_fail@plt+0x9640>
   197c4:	ldr	r0, [fp, #8]
   197c8:	cmp	r0, #0
   197cc:	bge	198dc <__assert_fail@plt+0x85ac>
   197d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197d4:	cmp	r0, #0
   197d8:	bge	19864 <__assert_fail@plt+0x8534>
   197dc:	b	197e0 <__assert_fail@plt+0x84b0>
   197e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197e4:	ldr	r1, [fp, #8]
   197e8:	movw	r2, #255	; 0xff
   197ec:	sdiv	r1, r2, r1
   197f0:	cmp	r0, r1
   197f4:	blt	19978 <__assert_fail@plt+0x8648>
   197f8:	b	19990 <__assert_fail@plt+0x8660>
   197fc:	b	19800 <__assert_fail@plt+0x84d0>
   19800:	ldr	r0, [pc, #-1664]	; 19188 <__assert_fail@plt+0x7e58>
   19804:	ldr	r1, [fp, #8]
   19808:	cmp	r1, r0
   1980c:	blt	19824 <__assert_fail@plt+0x84f4>
   19810:	b	19830 <__assert_fail@plt+0x8500>
   19814:	ldr	r0, [fp, #8]
   19818:	movw	r1, #0
   1981c:	cmp	r1, r0
   19820:	bge	19830 <__assert_fail@plt+0x8500>
   19824:	movw	r0, #0
   19828:	str	r0, [sp, #84]	; 0x54
   1982c:	b	19848 <__assert_fail@plt+0x8518>
   19830:	ldr	r0, [fp, #8]
   19834:	movw	r1, #0
   19838:	sub	r0, r1, r0
   1983c:	movw	r1, #255	; 0xff
   19840:	sdiv	r0, r1, r0
   19844:	str	r0, [sp, #84]	; 0x54
   19848:	ldr	r0, [sp, #84]	; 0x54
   1984c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19850:	mvn	r2, #0
   19854:	sub	r1, r2, r1
   19858:	cmp	r0, r1
   1985c:	ble	19978 <__assert_fail@plt+0x8648>
   19860:	b	19990 <__assert_fail@plt+0x8660>
   19864:	b	19868 <__assert_fail@plt+0x8538>
   19868:	b	198c0 <__assert_fail@plt+0x8590>
   1986c:	b	198c0 <__assert_fail@plt+0x8590>
   19870:	ldr	r0, [fp, #8]
   19874:	cmn	r0, #1
   19878:	bne	198c0 <__assert_fail@plt+0x8590>
   1987c:	b	19880 <__assert_fail@plt+0x8550>
   19880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19884:	add	r0, r0, #0
   19888:	movw	r1, #0
   1988c:	cmp	r1, r0
   19890:	blt	19978 <__assert_fail@plt+0x8648>
   19894:	b	19990 <__assert_fail@plt+0x8660>
   19898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1989c:	movw	r1, #0
   198a0:	cmp	r1, r0
   198a4:	bge	19990 <__assert_fail@plt+0x8660>
   198a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198ac:	sub	r0, r0, #1
   198b0:	mvn	r1, #0
   198b4:	cmp	r1, r0
   198b8:	blt	19978 <__assert_fail@plt+0x8648>
   198bc:	b	19990 <__assert_fail@plt+0x8660>
   198c0:	ldr	r0, [fp, #8]
   198c4:	movw	r1, #0
   198c8:	sdiv	r0, r1, r0
   198cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198d0:	cmp	r0, r1
   198d4:	blt	19978 <__assert_fail@plt+0x8648>
   198d8:	b	19990 <__assert_fail@plt+0x8660>
   198dc:	ldr	r0, [fp, #8]
   198e0:	cmp	r0, #0
   198e4:	bne	198ec <__assert_fail@plt+0x85bc>
   198e8:	b	19990 <__assert_fail@plt+0x8660>
   198ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198f0:	cmp	r0, #0
   198f4:	bge	19960 <__assert_fail@plt+0x8630>
   198f8:	b	198fc <__assert_fail@plt+0x85cc>
   198fc:	b	19944 <__assert_fail@plt+0x8614>
   19900:	b	19944 <__assert_fail@plt+0x8614>
   19904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19908:	cmn	r0, #1
   1990c:	bne	19944 <__assert_fail@plt+0x8614>
   19910:	b	19914 <__assert_fail@plt+0x85e4>
   19914:	ldr	r0, [fp, #8]
   19918:	add	r0, r0, #0
   1991c:	movw	r1, #0
   19920:	cmp	r1, r0
   19924:	blt	19978 <__assert_fail@plt+0x8648>
   19928:	b	19990 <__assert_fail@plt+0x8660>
   1992c:	ldr	r0, [fp, #8]
   19930:	sub	r0, r0, #1
   19934:	mvn	r1, #0
   19938:	cmp	r1, r0
   1993c:	blt	19978 <__assert_fail@plt+0x8648>
   19940:	b	19990 <__assert_fail@plt+0x8660>
   19944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19948:	movw	r1, #0
   1994c:	sdiv	r0, r1, r0
   19950:	ldr	r1, [fp, #8]
   19954:	cmp	r0, r1
   19958:	blt	19978 <__assert_fail@plt+0x8648>
   1995c:	b	19990 <__assert_fail@plt+0x8660>
   19960:	ldr	r0, [fp, #8]
   19964:	movw	r1, #255	; 0xff
   19968:	sdiv	r0, r1, r0
   1996c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19970:	cmp	r0, r1
   19974:	bge	19990 <__assert_fail@plt+0x8660>
   19978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1997c:	ldr	r1, [fp, #8]
   19980:	mul	r0, r0, r1
   19984:	and	r0, r0, #255	; 0xff
   19988:	str	r0, [fp, #-28]	; 0xffffffe4
   1998c:	b	1a96c <__assert_fail@plt+0x963c>
   19990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19994:	ldr	r1, [fp, #8]
   19998:	mul	r0, r0, r1
   1999c:	and	r0, r0, #255	; 0xff
   199a0:	str	r0, [fp, #-28]	; 0xffffffe4
   199a4:	b	1a970 <__assert_fail@plt+0x9640>
   199a8:	b	19d84 <__assert_fail@plt+0x8a54>
   199ac:	b	199b0 <__assert_fail@plt+0x8680>
   199b0:	ldr	r0, [fp, #8]
   199b4:	cmp	r0, #0
   199b8:	bge	19ad0 <__assert_fail@plt+0x87a0>
   199bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199c0:	cmp	r0, #0
   199c4:	bge	19a54 <__assert_fail@plt+0x8724>
   199c8:	b	199cc <__assert_fail@plt+0x869c>
   199cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199d0:	ldr	r1, [fp, #8]
   199d4:	movw	r2, #32767	; 0x7fff
   199d8:	sdiv	r1, r2, r1
   199dc:	cmp	r0, r1
   199e0:	blt	19b70 <__assert_fail@plt+0x8840>
   199e4:	b	19b88 <__assert_fail@plt+0x8858>
   199e8:	andhi	r0, r0, r0
   199ec:	b	199f0 <__assert_fail@plt+0x86c0>
   199f0:	ldr	r0, [pc, #4004]	; 1a99c <__assert_fail@plt+0x966c>
   199f4:	ldr	r1, [fp, #8]
   199f8:	cmp	r1, r0
   199fc:	blt	19a14 <__assert_fail@plt+0x86e4>
   19a00:	b	19a20 <__assert_fail@plt+0x86f0>
   19a04:	ldr	r0, [fp, #8]
   19a08:	movw	r1, #0
   19a0c:	cmp	r1, r0
   19a10:	bge	19a20 <__assert_fail@plt+0x86f0>
   19a14:	movw	r0, #0
   19a18:	str	r0, [sp, #80]	; 0x50
   19a1c:	b	19a38 <__assert_fail@plt+0x8708>
   19a20:	ldr	r0, [fp, #8]
   19a24:	movw	r1, #0
   19a28:	sub	r0, r1, r0
   19a2c:	movw	r1, #32767	; 0x7fff
   19a30:	sdiv	r0, r1, r0
   19a34:	str	r0, [sp, #80]	; 0x50
   19a38:	ldr	r0, [sp, #80]	; 0x50
   19a3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a40:	mvn	r2, #0
   19a44:	sub	r1, r2, r1
   19a48:	cmp	r0, r1
   19a4c:	ble	19b70 <__assert_fail@plt+0x8840>
   19a50:	b	19b88 <__assert_fail@plt+0x8858>
   19a54:	b	19a58 <__assert_fail@plt+0x8728>
   19a58:	b	19ab4 <__assert_fail@plt+0x8784>
   19a5c:	b	19ab4 <__assert_fail@plt+0x8784>
   19a60:	ldr	r0, [fp, #8]
   19a64:	cmn	r0, #1
   19a68:	bne	19ab4 <__assert_fail@plt+0x8784>
   19a6c:	b	19a70 <__assert_fail@plt+0x8740>
   19a70:	ldr	r0, [pc, #3884]	; 1a9a4 <__assert_fail@plt+0x9674>
   19a74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a78:	add	r0, r1, r0
   19a7c:	movw	r1, #0
   19a80:	cmp	r1, r0
   19a84:	blt	19b70 <__assert_fail@plt+0x8840>
   19a88:	b	19b88 <__assert_fail@plt+0x8858>
   19a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a90:	movw	r1, #0
   19a94:	cmp	r1, r0
   19a98:	bge	19b88 <__assert_fail@plt+0x8858>
   19a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19aa0:	sub	r0, r0, #1
   19aa4:	movw	r1, #32767	; 0x7fff
   19aa8:	cmp	r1, r0
   19aac:	blt	19b70 <__assert_fail@plt+0x8840>
   19ab0:	b	19b88 <__assert_fail@plt+0x8858>
   19ab4:	ldr	r0, [pc, #3816]	; 1a9a4 <__assert_fail@plt+0x9674>
   19ab8:	ldr	r1, [fp, #8]
   19abc:	sdiv	r0, r0, r1
   19ac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ac4:	cmp	r0, r1
   19ac8:	blt	19b70 <__assert_fail@plt+0x8840>
   19acc:	b	19b88 <__assert_fail@plt+0x8858>
   19ad0:	ldr	r0, [fp, #8]
   19ad4:	cmp	r0, #0
   19ad8:	bne	19ae0 <__assert_fail@plt+0x87b0>
   19adc:	b	19b88 <__assert_fail@plt+0x8858>
   19ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ae4:	cmp	r0, #0
   19ae8:	bge	19b58 <__assert_fail@plt+0x8828>
   19aec:	b	19af0 <__assert_fail@plt+0x87c0>
   19af0:	b	19b3c <__assert_fail@plt+0x880c>
   19af4:	b	19b3c <__assert_fail@plt+0x880c>
   19af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19afc:	cmn	r0, #1
   19b00:	bne	19b3c <__assert_fail@plt+0x880c>
   19b04:	b	19b08 <__assert_fail@plt+0x87d8>
   19b08:	ldr	r0, [pc, #3732]	; 1a9a4 <__assert_fail@plt+0x9674>
   19b0c:	ldr	r1, [fp, #8]
   19b10:	add	r0, r1, r0
   19b14:	movw	r1, #0
   19b18:	cmp	r1, r0
   19b1c:	blt	19b70 <__assert_fail@plt+0x8840>
   19b20:	b	19b88 <__assert_fail@plt+0x8858>
   19b24:	ldr	r0, [fp, #8]
   19b28:	sub	r0, r0, #1
   19b2c:	movw	r1, #32767	; 0x7fff
   19b30:	cmp	r1, r0
   19b34:	blt	19b70 <__assert_fail@plt+0x8840>
   19b38:	b	19b88 <__assert_fail@plt+0x8858>
   19b3c:	ldr	r0, [pc, #3680]	; 1a9a4 <__assert_fail@plt+0x9674>
   19b40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b44:	sdiv	r0, r0, r1
   19b48:	ldr	r1, [fp, #8]
   19b4c:	cmp	r0, r1
   19b50:	blt	19b70 <__assert_fail@plt+0x8840>
   19b54:	b	19b88 <__assert_fail@plt+0x8858>
   19b58:	ldr	r0, [fp, #8]
   19b5c:	movw	r1, #32767	; 0x7fff
   19b60:	sdiv	r0, r1, r0
   19b64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b68:	cmp	r0, r1
   19b6c:	bge	19b88 <__assert_fail@plt+0x8858>
   19b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b74:	ldr	r1, [fp, #8]
   19b78:	mul	r0, r0, r1
   19b7c:	sxth	r0, r0
   19b80:	str	r0, [fp, #-28]	; 0xffffffe4
   19b84:	b	1a96c <__assert_fail@plt+0x963c>
   19b88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b8c:	ldr	r1, [fp, #8]
   19b90:	mul	r0, r0, r1
   19b94:	sxth	r0, r0
   19b98:	str	r0, [fp, #-28]	; 0xffffffe4
   19b9c:	b	1a970 <__assert_fail@plt+0x9640>
   19ba0:	ldr	r0, [fp, #8]
   19ba4:	cmp	r0, #0
   19ba8:	bge	19cb8 <__assert_fail@plt+0x8988>
   19bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bb0:	cmp	r0, #0
   19bb4:	bge	19c40 <__assert_fail@plt+0x8910>
   19bb8:	b	19bbc <__assert_fail@plt+0x888c>
   19bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bc0:	ldr	r1, [fp, #8]
   19bc4:	movw	r2, #65535	; 0xffff
   19bc8:	sdiv	r1, r2, r1
   19bcc:	cmp	r0, r1
   19bd0:	blt	19d54 <__assert_fail@plt+0x8a24>
   19bd4:	b	19d6c <__assert_fail@plt+0x8a3c>
   19bd8:	b	19bdc <__assert_fail@plt+0x88ac>
   19bdc:	ldr	r0, [pc, #3512]	; 1a99c <__assert_fail@plt+0x966c>
   19be0:	ldr	r1, [fp, #8]
   19be4:	cmp	r1, r0
   19be8:	blt	19c00 <__assert_fail@plt+0x88d0>
   19bec:	b	19c0c <__assert_fail@plt+0x88dc>
   19bf0:	ldr	r0, [fp, #8]
   19bf4:	movw	r1, #0
   19bf8:	cmp	r1, r0
   19bfc:	bge	19c0c <__assert_fail@plt+0x88dc>
   19c00:	movw	r0, #0
   19c04:	str	r0, [sp, #76]	; 0x4c
   19c08:	b	19c24 <__assert_fail@plt+0x88f4>
   19c0c:	ldr	r0, [fp, #8]
   19c10:	movw	r1, #0
   19c14:	sub	r0, r1, r0
   19c18:	movw	r1, #65535	; 0xffff
   19c1c:	sdiv	r0, r1, r0
   19c20:	str	r0, [sp, #76]	; 0x4c
   19c24:	ldr	r0, [sp, #76]	; 0x4c
   19c28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19c2c:	mvn	r2, #0
   19c30:	sub	r1, r2, r1
   19c34:	cmp	r0, r1
   19c38:	ble	19d54 <__assert_fail@plt+0x8a24>
   19c3c:	b	19d6c <__assert_fail@plt+0x8a3c>
   19c40:	b	19c44 <__assert_fail@plt+0x8914>
   19c44:	b	19c9c <__assert_fail@plt+0x896c>
   19c48:	b	19c9c <__assert_fail@plt+0x896c>
   19c4c:	ldr	r0, [fp, #8]
   19c50:	cmn	r0, #1
   19c54:	bne	19c9c <__assert_fail@plt+0x896c>
   19c58:	b	19c5c <__assert_fail@plt+0x892c>
   19c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c60:	add	r0, r0, #0
   19c64:	movw	r1, #0
   19c68:	cmp	r1, r0
   19c6c:	blt	19d54 <__assert_fail@plt+0x8a24>
   19c70:	b	19d6c <__assert_fail@plt+0x8a3c>
   19c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c78:	movw	r1, #0
   19c7c:	cmp	r1, r0
   19c80:	bge	19d6c <__assert_fail@plt+0x8a3c>
   19c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c88:	sub	r0, r0, #1
   19c8c:	mvn	r1, #0
   19c90:	cmp	r1, r0
   19c94:	blt	19d54 <__assert_fail@plt+0x8a24>
   19c98:	b	19d6c <__assert_fail@plt+0x8a3c>
   19c9c:	ldr	r0, [fp, #8]
   19ca0:	movw	r1, #0
   19ca4:	sdiv	r0, r1, r0
   19ca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19cac:	cmp	r0, r1
   19cb0:	blt	19d54 <__assert_fail@plt+0x8a24>
   19cb4:	b	19d6c <__assert_fail@plt+0x8a3c>
   19cb8:	ldr	r0, [fp, #8]
   19cbc:	cmp	r0, #0
   19cc0:	bne	19cc8 <__assert_fail@plt+0x8998>
   19cc4:	b	19d6c <__assert_fail@plt+0x8a3c>
   19cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ccc:	cmp	r0, #0
   19cd0:	bge	19d3c <__assert_fail@plt+0x8a0c>
   19cd4:	b	19cd8 <__assert_fail@plt+0x89a8>
   19cd8:	b	19d20 <__assert_fail@plt+0x89f0>
   19cdc:	b	19d20 <__assert_fail@plt+0x89f0>
   19ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ce4:	cmn	r0, #1
   19ce8:	bne	19d20 <__assert_fail@plt+0x89f0>
   19cec:	b	19cf0 <__assert_fail@plt+0x89c0>
   19cf0:	ldr	r0, [fp, #8]
   19cf4:	add	r0, r0, #0
   19cf8:	movw	r1, #0
   19cfc:	cmp	r1, r0
   19d00:	blt	19d54 <__assert_fail@plt+0x8a24>
   19d04:	b	19d6c <__assert_fail@plt+0x8a3c>
   19d08:	ldr	r0, [fp, #8]
   19d0c:	sub	r0, r0, #1
   19d10:	mvn	r1, #0
   19d14:	cmp	r1, r0
   19d18:	blt	19d54 <__assert_fail@plt+0x8a24>
   19d1c:	b	19d6c <__assert_fail@plt+0x8a3c>
   19d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d24:	movw	r1, #0
   19d28:	sdiv	r0, r1, r0
   19d2c:	ldr	r1, [fp, #8]
   19d30:	cmp	r0, r1
   19d34:	blt	19d54 <__assert_fail@plt+0x8a24>
   19d38:	b	19d6c <__assert_fail@plt+0x8a3c>
   19d3c:	ldr	r0, [fp, #8]
   19d40:	movw	r1, #65535	; 0xffff
   19d44:	sdiv	r0, r1, r0
   19d48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19d4c:	cmp	r0, r1
   19d50:	bge	19d6c <__assert_fail@plt+0x8a3c>
   19d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d58:	ldr	r1, [fp, #8]
   19d5c:	mul	r0, r0, r1
   19d60:	uxth	r0, r0
   19d64:	str	r0, [fp, #-28]	; 0xffffffe4
   19d68:	b	1a96c <__assert_fail@plt+0x963c>
   19d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d70:	ldr	r1, [fp, #8]
   19d74:	mul	r0, r0, r1
   19d78:	uxth	r0, r0
   19d7c:	str	r0, [fp, #-28]	; 0xffffffe4
   19d80:	b	1a970 <__assert_fail@plt+0x9640>
   19d84:	b	19d88 <__assert_fail@plt+0x8a58>
   19d88:	b	19d8c <__assert_fail@plt+0x8a5c>
   19d8c:	ldr	r0, [fp, #8]
   19d90:	cmp	r0, #0
   19d94:	bge	19e98 <__assert_fail@plt+0x8b68>
   19d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d9c:	cmp	r0, #0
   19da0:	bge	19e2c <__assert_fail@plt+0x8afc>
   19da4:	b	19da8 <__assert_fail@plt+0x8a78>
   19da8:	ldr	r0, [pc, #3048]	; 1a998 <__assert_fail@plt+0x9668>
   19dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19db0:	ldr	r2, [fp, #8]
   19db4:	sdiv	r0, r0, r2
   19db8:	cmp	r1, r0
   19dbc:	blt	19f28 <__assert_fail@plt+0x8bf8>
   19dc0:	b	19f3c <__assert_fail@plt+0x8c0c>
   19dc4:	b	19dc8 <__assert_fail@plt+0x8a98>
   19dc8:	ldr	r0, [pc, #3020]	; 1a99c <__assert_fail@plt+0x966c>
   19dcc:	ldr	r1, [fp, #8]
   19dd0:	cmp	r1, r0
   19dd4:	blt	19dec <__assert_fail@plt+0x8abc>
   19dd8:	b	19df8 <__assert_fail@plt+0x8ac8>
   19ddc:	ldr	r0, [fp, #8]
   19de0:	movw	r1, #0
   19de4:	cmp	r1, r0
   19de8:	bge	19df8 <__assert_fail@plt+0x8ac8>
   19dec:	movw	r0, #0
   19df0:	str	r0, [sp, #72]	; 0x48
   19df4:	b	19e10 <__assert_fail@plt+0x8ae0>
   19df8:	ldr	r0, [pc, #2968]	; 1a998 <__assert_fail@plt+0x9668>
   19dfc:	ldr	r1, [fp, #8]
   19e00:	movw	r2, #0
   19e04:	sub	r1, r2, r1
   19e08:	sdiv	r0, r0, r1
   19e0c:	str	r0, [sp, #72]	; 0x48
   19e10:	ldr	r0, [sp, #72]	; 0x48
   19e14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19e18:	mvn	r2, #0
   19e1c:	sub	r1, r2, r1
   19e20:	cmp	r0, r1
   19e24:	ble	19f28 <__assert_fail@plt+0x8bf8>
   19e28:	b	19f3c <__assert_fail@plt+0x8c0c>
   19e2c:	ldr	r0, [fp, #8]
   19e30:	cmn	r0, #1
   19e34:	bne	19e7c <__assert_fail@plt+0x8b4c>
   19e38:	b	19e3c <__assert_fail@plt+0x8b0c>
   19e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e40:	add	r0, r0, #-2147483648	; 0x80000000
   19e44:	movw	r1, #0
   19e48:	cmp	r1, r0
   19e4c:	blt	19f28 <__assert_fail@plt+0x8bf8>
   19e50:	b	19f3c <__assert_fail@plt+0x8c0c>
   19e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e58:	movw	r1, #0
   19e5c:	cmp	r1, r0
   19e60:	bge	19f3c <__assert_fail@plt+0x8c0c>
   19e64:	ldr	r0, [pc, #2860]	; 1a998 <__assert_fail@plt+0x9668>
   19e68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19e6c:	sub	r1, r1, #1
   19e70:	cmp	r0, r1
   19e74:	blt	19f28 <__assert_fail@plt+0x8bf8>
   19e78:	b	19f3c <__assert_fail@plt+0x8c0c>
   19e7c:	ldr	r0, [pc, #2844]	; 1a9a0 <__assert_fail@plt+0x9670>
   19e80:	ldr	r1, [fp, #8]
   19e84:	sdiv	r0, r0, r1
   19e88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19e8c:	cmp	r0, r1
   19e90:	blt	19f28 <__assert_fail@plt+0x8bf8>
   19e94:	b	19f3c <__assert_fail@plt+0x8c0c>
   19e98:	ldr	r0, [fp, #8]
   19e9c:	cmp	r0, #0
   19ea0:	bne	19ea8 <__assert_fail@plt+0x8b78>
   19ea4:	b	19f3c <__assert_fail@plt+0x8c0c>
   19ea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19eac:	cmp	r0, #0
   19eb0:	bge	19f10 <__assert_fail@plt+0x8be0>
   19eb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19eb8:	cmn	r0, #1
   19ebc:	bne	19ef4 <__assert_fail@plt+0x8bc4>
   19ec0:	b	19ec4 <__assert_fail@plt+0x8b94>
   19ec4:	ldr	r0, [fp, #8]
   19ec8:	add	r0, r0, #-2147483648	; 0x80000000
   19ecc:	movw	r1, #0
   19ed0:	cmp	r1, r0
   19ed4:	blt	19f28 <__assert_fail@plt+0x8bf8>
   19ed8:	b	19f3c <__assert_fail@plt+0x8c0c>
   19edc:	ldr	r0, [pc, #2740]	; 1a998 <__assert_fail@plt+0x9668>
   19ee0:	ldr	r1, [fp, #8]
   19ee4:	sub	r1, r1, #1
   19ee8:	cmp	r0, r1
   19eec:	blt	19f28 <__assert_fail@plt+0x8bf8>
   19ef0:	b	19f3c <__assert_fail@plt+0x8c0c>
   19ef4:	ldr	r0, [pc, #2724]	; 1a9a0 <__assert_fail@plt+0x9670>
   19ef8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19efc:	sdiv	r0, r0, r1
   19f00:	ldr	r1, [fp, #8]
   19f04:	cmp	r0, r1
   19f08:	blt	19f28 <__assert_fail@plt+0x8bf8>
   19f0c:	b	19f3c <__assert_fail@plt+0x8c0c>
   19f10:	ldr	r0, [pc, #2688]	; 1a998 <__assert_fail@plt+0x9668>
   19f14:	ldr	r1, [fp, #8]
   19f18:	sdiv	r0, r0, r1
   19f1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f20:	cmp	r0, r1
   19f24:	bge	19f3c <__assert_fail@plt+0x8c0c>
   19f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f2c:	ldr	r1, [fp, #8]
   19f30:	mul	r0, r0, r1
   19f34:	str	r0, [fp, #-28]	; 0xffffffe4
   19f38:	b	1a96c <__assert_fail@plt+0x963c>
   19f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f40:	ldr	r1, [fp, #8]
   19f44:	mul	r0, r0, r1
   19f48:	str	r0, [fp, #-28]	; 0xffffffe4
   19f4c:	b	1a970 <__assert_fail@plt+0x9640>
   19f50:	ldr	r0, [fp, #8]
   19f54:	cmp	r0, #0
   19f58:	bge	1a068 <__assert_fail@plt+0x8d38>
   19f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f60:	cmp	r0, #0
   19f64:	bge	19ff0 <__assert_fail@plt+0x8cc0>
   19f68:	b	19f88 <__assert_fail@plt+0x8c58>
   19f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f70:	ldr	r1, [fp, #8]
   19f74:	mvn	r2, #0
   19f78:	udiv	r1, r2, r1
   19f7c:	cmp	r0, r1
   19f80:	bcc	1a104 <__assert_fail@plt+0x8dd4>
   19f84:	b	1a118 <__assert_fail@plt+0x8de8>
   19f88:	b	19f8c <__assert_fail@plt+0x8c5c>
   19f8c:	ldr	r0, [pc, #2568]	; 1a99c <__assert_fail@plt+0x966c>
   19f90:	ldr	r1, [fp, #8]
   19f94:	cmp	r1, r0
   19f98:	blt	19fb0 <__assert_fail@plt+0x8c80>
   19f9c:	b	19fbc <__assert_fail@plt+0x8c8c>
   19fa0:	ldr	r0, [fp, #8]
   19fa4:	movw	r1, #0
   19fa8:	cmp	r1, r0
   19fac:	bge	19fbc <__assert_fail@plt+0x8c8c>
   19fb0:	movw	r0, #1
   19fb4:	str	r0, [sp, #68]	; 0x44
   19fb8:	b	19fd4 <__assert_fail@plt+0x8ca4>
   19fbc:	ldr	r0, [fp, #8]
   19fc0:	movw	r1, #0
   19fc4:	sub	r0, r1, r0
   19fc8:	mvn	r1, #0
   19fcc:	udiv	r0, r1, r0
   19fd0:	str	r0, [sp, #68]	; 0x44
   19fd4:	ldr	r0, [sp, #68]	; 0x44
   19fd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19fdc:	mvn	r2, #0
   19fe0:	sub	r1, r2, r1
   19fe4:	cmp	r0, r1
   19fe8:	bls	1a104 <__assert_fail@plt+0x8dd4>
   19fec:	b	1a118 <__assert_fail@plt+0x8de8>
   19ff0:	b	19ff4 <__assert_fail@plt+0x8cc4>
   19ff4:	b	1a04c <__assert_fail@plt+0x8d1c>
   19ff8:	b	1a04c <__assert_fail@plt+0x8d1c>
   19ffc:	ldr	r0, [fp, #8]
   1a000:	cmn	r0, #1
   1a004:	bne	1a04c <__assert_fail@plt+0x8d1c>
   1a008:	b	1a00c <__assert_fail@plt+0x8cdc>
   1a00c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a010:	add	r0, r0, #0
   1a014:	movw	r1, #0
   1a018:	cmp	r1, r0
   1a01c:	blt	1a104 <__assert_fail@plt+0x8dd4>
   1a020:	b	1a118 <__assert_fail@plt+0x8de8>
   1a024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a028:	movw	r1, #0
   1a02c:	cmp	r1, r0
   1a030:	bge	1a118 <__assert_fail@plt+0x8de8>
   1a034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a038:	sub	r0, r0, #1
   1a03c:	mvn	r1, #0
   1a040:	cmp	r1, r0
   1a044:	blt	1a104 <__assert_fail@plt+0x8dd4>
   1a048:	b	1a118 <__assert_fail@plt+0x8de8>
   1a04c:	ldr	r0, [fp, #8]
   1a050:	movw	r1, #0
   1a054:	sdiv	r0, r1, r0
   1a058:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a05c:	cmp	r0, r1
   1a060:	blt	1a104 <__assert_fail@plt+0x8dd4>
   1a064:	b	1a118 <__assert_fail@plt+0x8de8>
   1a068:	ldr	r0, [fp, #8]
   1a06c:	cmp	r0, #0
   1a070:	bne	1a078 <__assert_fail@plt+0x8d48>
   1a074:	b	1a118 <__assert_fail@plt+0x8de8>
   1a078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a07c:	cmp	r0, #0
   1a080:	bge	1a0ec <__assert_fail@plt+0x8dbc>
   1a084:	b	1a088 <__assert_fail@plt+0x8d58>
   1a088:	b	1a0d0 <__assert_fail@plt+0x8da0>
   1a08c:	b	1a0d0 <__assert_fail@plt+0x8da0>
   1a090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a094:	cmn	r0, #1
   1a098:	bne	1a0d0 <__assert_fail@plt+0x8da0>
   1a09c:	b	1a0a0 <__assert_fail@plt+0x8d70>
   1a0a0:	ldr	r0, [fp, #8]
   1a0a4:	add	r0, r0, #0
   1a0a8:	movw	r1, #0
   1a0ac:	cmp	r1, r0
   1a0b0:	blt	1a104 <__assert_fail@plt+0x8dd4>
   1a0b4:	b	1a118 <__assert_fail@plt+0x8de8>
   1a0b8:	ldr	r0, [fp, #8]
   1a0bc:	sub	r0, r0, #1
   1a0c0:	mvn	r1, #0
   1a0c4:	cmp	r1, r0
   1a0c8:	blt	1a104 <__assert_fail@plt+0x8dd4>
   1a0cc:	b	1a118 <__assert_fail@plt+0x8de8>
   1a0d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0d4:	movw	r1, #0
   1a0d8:	sdiv	r0, r1, r0
   1a0dc:	ldr	r1, [fp, #8]
   1a0e0:	cmp	r0, r1
   1a0e4:	blt	1a104 <__assert_fail@plt+0x8dd4>
   1a0e8:	b	1a118 <__assert_fail@plt+0x8de8>
   1a0ec:	ldr	r0, [fp, #8]
   1a0f0:	mvn	r1, #0
   1a0f4:	udiv	r0, r1, r0
   1a0f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a0fc:	cmp	r0, r1
   1a100:	bcs	1a118 <__assert_fail@plt+0x8de8>
   1a104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a108:	ldr	r1, [fp, #8]
   1a10c:	mul	r0, r0, r1
   1a110:	str	r0, [fp, #-28]	; 0xffffffe4
   1a114:	b	1a96c <__assert_fail@plt+0x963c>
   1a118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a11c:	ldr	r1, [fp, #8]
   1a120:	mul	r0, r0, r1
   1a124:	str	r0, [fp, #-28]	; 0xffffffe4
   1a128:	b	1a970 <__assert_fail@plt+0x9640>
   1a12c:	b	1a130 <__assert_fail@plt+0x8e00>
   1a130:	b	1a134 <__assert_fail@plt+0x8e04>
   1a134:	ldr	r0, [fp, #8]
   1a138:	cmp	r0, #0
   1a13c:	bge	1a240 <__assert_fail@plt+0x8f10>
   1a140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a144:	cmp	r0, #0
   1a148:	bge	1a1d4 <__assert_fail@plt+0x8ea4>
   1a14c:	b	1a150 <__assert_fail@plt+0x8e20>
   1a150:	ldr	r0, [pc, #2112]	; 1a998 <__assert_fail@plt+0x9668>
   1a154:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a158:	ldr	r2, [fp, #8]
   1a15c:	sdiv	r0, r0, r2
   1a160:	cmp	r1, r0
   1a164:	blt	1a2d0 <__assert_fail@plt+0x8fa0>
   1a168:	b	1a2e4 <__assert_fail@plt+0x8fb4>
   1a16c:	b	1a170 <__assert_fail@plt+0x8e40>
   1a170:	ldr	r0, [pc, #2084]	; 1a99c <__assert_fail@plt+0x966c>
   1a174:	ldr	r1, [fp, #8]
   1a178:	cmp	r1, r0
   1a17c:	blt	1a194 <__assert_fail@plt+0x8e64>
   1a180:	b	1a1a0 <__assert_fail@plt+0x8e70>
   1a184:	ldr	r0, [fp, #8]
   1a188:	movw	r1, #0
   1a18c:	cmp	r1, r0
   1a190:	bge	1a1a0 <__assert_fail@plt+0x8e70>
   1a194:	movw	r0, #0
   1a198:	str	r0, [sp, #64]	; 0x40
   1a19c:	b	1a1b8 <__assert_fail@plt+0x8e88>
   1a1a0:	ldr	r0, [pc, #2032]	; 1a998 <__assert_fail@plt+0x9668>
   1a1a4:	ldr	r1, [fp, #8]
   1a1a8:	movw	r2, #0
   1a1ac:	sub	r1, r2, r1
   1a1b0:	sdiv	r0, r0, r1
   1a1b4:	str	r0, [sp, #64]	; 0x40
   1a1b8:	ldr	r0, [sp, #64]	; 0x40
   1a1bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a1c0:	mvn	r2, #0
   1a1c4:	sub	r1, r2, r1
   1a1c8:	cmp	r0, r1
   1a1cc:	ble	1a2d0 <__assert_fail@plt+0x8fa0>
   1a1d0:	b	1a2e4 <__assert_fail@plt+0x8fb4>
   1a1d4:	ldr	r0, [fp, #8]
   1a1d8:	cmn	r0, #1
   1a1dc:	bne	1a224 <__assert_fail@plt+0x8ef4>
   1a1e0:	b	1a1e4 <__assert_fail@plt+0x8eb4>
   1a1e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1e8:	add	r0, r0, #-2147483648	; 0x80000000
   1a1ec:	movw	r1, #0
   1a1f0:	cmp	r1, r0
   1a1f4:	blt	1a2d0 <__assert_fail@plt+0x8fa0>
   1a1f8:	b	1a2e4 <__assert_fail@plt+0x8fb4>
   1a1fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a200:	movw	r1, #0
   1a204:	cmp	r1, r0
   1a208:	bge	1a2e4 <__assert_fail@plt+0x8fb4>
   1a20c:	ldr	r0, [pc, #1924]	; 1a998 <__assert_fail@plt+0x9668>
   1a210:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a214:	sub	r1, r1, #1
   1a218:	cmp	r0, r1
   1a21c:	blt	1a2d0 <__assert_fail@plt+0x8fa0>
   1a220:	b	1a2e4 <__assert_fail@plt+0x8fb4>
   1a224:	ldr	r0, [pc, #1908]	; 1a9a0 <__assert_fail@plt+0x9670>
   1a228:	ldr	r1, [fp, #8]
   1a22c:	sdiv	r0, r0, r1
   1a230:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a234:	cmp	r0, r1
   1a238:	blt	1a2d0 <__assert_fail@plt+0x8fa0>
   1a23c:	b	1a2e4 <__assert_fail@plt+0x8fb4>
   1a240:	ldr	r0, [fp, #8]
   1a244:	cmp	r0, #0
   1a248:	bne	1a250 <__assert_fail@plt+0x8f20>
   1a24c:	b	1a2e4 <__assert_fail@plt+0x8fb4>
   1a250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a254:	cmp	r0, #0
   1a258:	bge	1a2b8 <__assert_fail@plt+0x8f88>
   1a25c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a260:	cmn	r0, #1
   1a264:	bne	1a29c <__assert_fail@plt+0x8f6c>
   1a268:	b	1a26c <__assert_fail@plt+0x8f3c>
   1a26c:	ldr	r0, [fp, #8]
   1a270:	add	r0, r0, #-2147483648	; 0x80000000
   1a274:	movw	r1, #0
   1a278:	cmp	r1, r0
   1a27c:	blt	1a2d0 <__assert_fail@plt+0x8fa0>
   1a280:	b	1a2e4 <__assert_fail@plt+0x8fb4>
   1a284:	ldr	r0, [pc, #1804]	; 1a998 <__assert_fail@plt+0x9668>
   1a288:	ldr	r1, [fp, #8]
   1a28c:	sub	r1, r1, #1
   1a290:	cmp	r0, r1
   1a294:	blt	1a2d0 <__assert_fail@plt+0x8fa0>
   1a298:	b	1a2e4 <__assert_fail@plt+0x8fb4>
   1a29c:	ldr	r0, [pc, #1788]	; 1a9a0 <__assert_fail@plt+0x9670>
   1a2a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a2a4:	sdiv	r0, r0, r1
   1a2a8:	ldr	r1, [fp, #8]
   1a2ac:	cmp	r0, r1
   1a2b0:	blt	1a2d0 <__assert_fail@plt+0x8fa0>
   1a2b4:	b	1a2e4 <__assert_fail@plt+0x8fb4>
   1a2b8:	ldr	r0, [pc, #1752]	; 1a998 <__assert_fail@plt+0x9668>
   1a2bc:	ldr	r1, [fp, #8]
   1a2c0:	sdiv	r0, r0, r1
   1a2c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a2c8:	cmp	r0, r1
   1a2cc:	bge	1a2e4 <__assert_fail@plt+0x8fb4>
   1a2d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2d4:	ldr	r1, [fp, #8]
   1a2d8:	mul	r0, r0, r1
   1a2dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1a2e0:	b	1a96c <__assert_fail@plt+0x963c>
   1a2e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2e8:	ldr	r1, [fp, #8]
   1a2ec:	mul	r0, r0, r1
   1a2f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a2f4:	b	1a970 <__assert_fail@plt+0x9640>
   1a2f8:	ldr	r0, [fp, #8]
   1a2fc:	cmp	r0, #0
   1a300:	bge	1a410 <__assert_fail@plt+0x90e0>
   1a304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a308:	cmp	r0, #0
   1a30c:	bge	1a398 <__assert_fail@plt+0x9068>
   1a310:	b	1a330 <__assert_fail@plt+0x9000>
   1a314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a318:	ldr	r1, [fp, #8]
   1a31c:	mvn	r2, #0
   1a320:	udiv	r1, r2, r1
   1a324:	cmp	r0, r1
   1a328:	bcc	1a4ac <__assert_fail@plt+0x917c>
   1a32c:	b	1a4c0 <__assert_fail@plt+0x9190>
   1a330:	b	1a334 <__assert_fail@plt+0x9004>
   1a334:	ldr	r0, [pc, #1632]	; 1a99c <__assert_fail@plt+0x966c>
   1a338:	ldr	r1, [fp, #8]
   1a33c:	cmp	r1, r0
   1a340:	blt	1a358 <__assert_fail@plt+0x9028>
   1a344:	b	1a364 <__assert_fail@plt+0x9034>
   1a348:	ldr	r0, [fp, #8]
   1a34c:	movw	r1, #0
   1a350:	cmp	r1, r0
   1a354:	bge	1a364 <__assert_fail@plt+0x9034>
   1a358:	movw	r0, #1
   1a35c:	str	r0, [sp, #60]	; 0x3c
   1a360:	b	1a37c <__assert_fail@plt+0x904c>
   1a364:	ldr	r0, [fp, #8]
   1a368:	movw	r1, #0
   1a36c:	sub	r0, r1, r0
   1a370:	mvn	r1, #0
   1a374:	udiv	r0, r1, r0
   1a378:	str	r0, [sp, #60]	; 0x3c
   1a37c:	ldr	r0, [sp, #60]	; 0x3c
   1a380:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a384:	mvn	r2, #0
   1a388:	sub	r1, r2, r1
   1a38c:	cmp	r0, r1
   1a390:	bls	1a4ac <__assert_fail@plt+0x917c>
   1a394:	b	1a4c0 <__assert_fail@plt+0x9190>
   1a398:	b	1a39c <__assert_fail@plt+0x906c>
   1a39c:	b	1a3f4 <__assert_fail@plt+0x90c4>
   1a3a0:	b	1a3f4 <__assert_fail@plt+0x90c4>
   1a3a4:	ldr	r0, [fp, #8]
   1a3a8:	cmn	r0, #1
   1a3ac:	bne	1a3f4 <__assert_fail@plt+0x90c4>
   1a3b0:	b	1a3b4 <__assert_fail@plt+0x9084>
   1a3b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3b8:	add	r0, r0, #0
   1a3bc:	movw	r1, #0
   1a3c0:	cmp	r1, r0
   1a3c4:	blt	1a4ac <__assert_fail@plt+0x917c>
   1a3c8:	b	1a4c0 <__assert_fail@plt+0x9190>
   1a3cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3d0:	movw	r1, #0
   1a3d4:	cmp	r1, r0
   1a3d8:	bge	1a4c0 <__assert_fail@plt+0x9190>
   1a3dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3e0:	sub	r0, r0, #1
   1a3e4:	mvn	r1, #0
   1a3e8:	cmp	r1, r0
   1a3ec:	blt	1a4ac <__assert_fail@plt+0x917c>
   1a3f0:	b	1a4c0 <__assert_fail@plt+0x9190>
   1a3f4:	ldr	r0, [fp, #8]
   1a3f8:	movw	r1, #0
   1a3fc:	sdiv	r0, r1, r0
   1a400:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a404:	cmp	r0, r1
   1a408:	blt	1a4ac <__assert_fail@plt+0x917c>
   1a40c:	b	1a4c0 <__assert_fail@plt+0x9190>
   1a410:	ldr	r0, [fp, #8]
   1a414:	cmp	r0, #0
   1a418:	bne	1a420 <__assert_fail@plt+0x90f0>
   1a41c:	b	1a4c0 <__assert_fail@plt+0x9190>
   1a420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a424:	cmp	r0, #0
   1a428:	bge	1a494 <__assert_fail@plt+0x9164>
   1a42c:	b	1a430 <__assert_fail@plt+0x9100>
   1a430:	b	1a478 <__assert_fail@plt+0x9148>
   1a434:	b	1a478 <__assert_fail@plt+0x9148>
   1a438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a43c:	cmn	r0, #1
   1a440:	bne	1a478 <__assert_fail@plt+0x9148>
   1a444:	b	1a448 <__assert_fail@plt+0x9118>
   1a448:	ldr	r0, [fp, #8]
   1a44c:	add	r0, r0, #0
   1a450:	movw	r1, #0
   1a454:	cmp	r1, r0
   1a458:	blt	1a4ac <__assert_fail@plt+0x917c>
   1a45c:	b	1a4c0 <__assert_fail@plt+0x9190>
   1a460:	ldr	r0, [fp, #8]
   1a464:	sub	r0, r0, #1
   1a468:	mvn	r1, #0
   1a46c:	cmp	r1, r0
   1a470:	blt	1a4ac <__assert_fail@plt+0x917c>
   1a474:	b	1a4c0 <__assert_fail@plt+0x9190>
   1a478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a47c:	movw	r1, #0
   1a480:	sdiv	r0, r1, r0
   1a484:	ldr	r1, [fp, #8]
   1a488:	cmp	r0, r1
   1a48c:	blt	1a4ac <__assert_fail@plt+0x917c>
   1a490:	b	1a4c0 <__assert_fail@plt+0x9190>
   1a494:	ldr	r0, [fp, #8]
   1a498:	mvn	r1, #0
   1a49c:	udiv	r0, r1, r0
   1a4a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a4a4:	cmp	r0, r1
   1a4a8:	bcs	1a4c0 <__assert_fail@plt+0x9190>
   1a4ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4b0:	ldr	r1, [fp, #8]
   1a4b4:	mul	r0, r0, r1
   1a4b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a4bc:	b	1a96c <__assert_fail@plt+0x963c>
   1a4c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4c4:	ldr	r1, [fp, #8]
   1a4c8:	mul	r0, r0, r1
   1a4cc:	str	r0, [fp, #-28]	; 0xffffffe4
   1a4d0:	b	1a970 <__assert_fail@plt+0x9640>
   1a4d4:	b	1a4d8 <__assert_fail@plt+0x91a8>
   1a4d8:	ldr	r0, [fp, #8]
   1a4dc:	cmp	r0, #0
   1a4e0:	bge	1a648 <__assert_fail@plt+0x9318>
   1a4e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4e8:	cmp	r0, #0
   1a4ec:	bge	1a5c4 <__assert_fail@plt+0x9294>
   1a4f0:	b	1a4f4 <__assert_fail@plt+0x91c4>
   1a4f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4f8:	ldr	r1, [fp, #8]
   1a4fc:	asr	r3, r1, #31
   1a500:	mvn	r2, #0
   1a504:	mvn	ip, #-2147483648	; 0x80000000
   1a508:	str	r0, [sp, #56]	; 0x38
   1a50c:	mov	r0, r2
   1a510:	str	r1, [sp, #52]	; 0x34
   1a514:	mov	r1, ip
   1a518:	ldr	r2, [sp, #52]	; 0x34
   1a51c:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1a520:	ldr	r2, [sp, #56]	; 0x38
   1a524:	subs	r0, r2, r0
   1a528:	rscs	r1, r1, r2, asr #31
   1a52c:	blt	1a710 <__assert_fail@plt+0x93e0>
   1a530:	b	1a724 <__assert_fail@plt+0x93f4>
   1a534:	b	1a538 <__assert_fail@plt+0x9208>
   1a538:	ldr	r0, [pc, #1116]	; 1a99c <__assert_fail@plt+0x966c>
   1a53c:	ldr	r1, [fp, #8]
   1a540:	cmp	r1, r0
   1a544:	blt	1a55c <__assert_fail@plt+0x922c>
   1a548:	b	1a570 <__assert_fail@plt+0x9240>
   1a54c:	ldr	r0, [fp, #8]
   1a550:	movw	r1, #0
   1a554:	cmp	r1, r0
   1a558:	bge	1a570 <__assert_fail@plt+0x9240>
   1a55c:	mov	r0, #0
   1a560:	mvn	r1, #0
   1a564:	str	r1, [sp, #48]	; 0x30
   1a568:	str	r0, [sp, #44]	; 0x2c
   1a56c:	b	1a5a4 <__assert_fail@plt+0x9274>
   1a570:	ldr	r0, [fp, #8]
   1a574:	rsb	r0, r0, #0
   1a578:	asr	r3, r0, #31
   1a57c:	mvn	r1, #0
   1a580:	mvn	r2, #-2147483648	; 0x80000000
   1a584:	str	r0, [sp, #40]	; 0x28
   1a588:	mov	r0, r1
   1a58c:	mov	r1, r2
   1a590:	ldr	r2, [sp, #40]	; 0x28
   1a594:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1a598:	str	r0, [sp, #48]	; 0x30
   1a59c:	str	r1, [sp, #44]	; 0x2c
   1a5a0:	b	1a5a4 <__assert_fail@plt+0x9274>
   1a5a4:	ldr	r0, [sp, #44]	; 0x2c
   1a5a8:	ldr	r1, [sp, #48]	; 0x30
   1a5ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a5b0:	mvn	r2, r2
   1a5b4:	subs	r1, r2, r1
   1a5b8:	rscs	r0, r0, r2, asr #31
   1a5bc:	bge	1a710 <__assert_fail@plt+0x93e0>
   1a5c0:	b	1a724 <__assert_fail@plt+0x93f4>
   1a5c4:	ldr	r0, [fp, #8]
   1a5c8:	cmn	r0, #1
   1a5cc:	bne	1a610 <__assert_fail@plt+0x92e0>
   1a5d0:	b	1a5d4 <__assert_fail@plt+0x92a4>
   1a5d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5d8:	mov	r1, #-2147483648	; 0x80000000
   1a5dc:	add	r1, r1, r0, asr #31
   1a5e0:	rsbs	r0, r0, #0
   1a5e4:	rscs	r1, r1, #0
   1a5e8:	blt	1a710 <__assert_fail@plt+0x93e0>
   1a5ec:	b	1a724 <__assert_fail@plt+0x93f4>
   1a5f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5f4:	movw	r1, #0
   1a5f8:	cmp	r1, r0
   1a5fc:	bge	1a724 <__assert_fail@plt+0x93f4>
   1a600:	mov	r0, #0
   1a604:	cmp	r0, #0
   1a608:	bne	1a710 <__assert_fail@plt+0x93e0>
   1a60c:	b	1a724 <__assert_fail@plt+0x93f4>
   1a610:	ldr	r0, [fp, #8]
   1a614:	asr	r3, r0, #31
   1a618:	mov	r1, #0
   1a61c:	mov	r2, #-2147483648	; 0x80000000
   1a620:	str	r0, [sp, #36]	; 0x24
   1a624:	mov	r0, r1
   1a628:	mov	r1, r2
   1a62c:	ldr	r2, [sp, #36]	; 0x24
   1a630:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1a634:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a638:	subs	r0, r0, r2
   1a63c:	sbcs	r1, r1, r2, asr #31
   1a640:	blt	1a710 <__assert_fail@plt+0x93e0>
   1a644:	b	1a724 <__assert_fail@plt+0x93f4>
   1a648:	ldr	r0, [fp, #8]
   1a64c:	cmp	r0, #0
   1a650:	bne	1a658 <__assert_fail@plt+0x9328>
   1a654:	b	1a724 <__assert_fail@plt+0x93f4>
   1a658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a65c:	cmp	r0, #0
   1a660:	bge	1a6d8 <__assert_fail@plt+0x93a8>
   1a664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a668:	cmn	r0, #1
   1a66c:	bne	1a6a0 <__assert_fail@plt+0x9370>
   1a670:	b	1a674 <__assert_fail@plt+0x9344>
   1a674:	ldr	r0, [fp, #8]
   1a678:	mov	r1, #-2147483648	; 0x80000000
   1a67c:	add	r1, r1, r0, asr #31
   1a680:	rsbs	r0, r0, #0
   1a684:	rscs	r1, r1, #0
   1a688:	blt	1a710 <__assert_fail@plt+0x93e0>
   1a68c:	b	1a724 <__assert_fail@plt+0x93f4>
   1a690:	mov	r0, #0
   1a694:	cmp	r0, #0
   1a698:	bne	1a710 <__assert_fail@plt+0x93e0>
   1a69c:	b	1a724 <__assert_fail@plt+0x93f4>
   1a6a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6a4:	asr	r3, r0, #31
   1a6a8:	mov	r1, #0
   1a6ac:	mov	r2, #-2147483648	; 0x80000000
   1a6b0:	str	r0, [sp, #32]
   1a6b4:	mov	r0, r1
   1a6b8:	mov	r1, r2
   1a6bc:	ldr	r2, [sp, #32]
   1a6c0:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1a6c4:	ldr	r2, [fp, #8]
   1a6c8:	subs	r0, r0, r2
   1a6cc:	sbcs	r1, r1, r2, asr #31
   1a6d0:	blt	1a710 <__assert_fail@plt+0x93e0>
   1a6d4:	b	1a724 <__assert_fail@plt+0x93f4>
   1a6d8:	ldr	r0, [fp, #8]
   1a6dc:	asr	r3, r0, #31
   1a6e0:	mvn	r1, #0
   1a6e4:	mvn	r2, #-2147483648	; 0x80000000
   1a6e8:	str	r0, [sp, #28]
   1a6ec:	mov	r0, r1
   1a6f0:	mov	r1, r2
   1a6f4:	ldr	r2, [sp, #28]
   1a6f8:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1a6fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a700:	subs	r0, r0, r2
   1a704:	sbcs	r1, r1, r2, asr #31
   1a708:	bge	1a724 <__assert_fail@plt+0x93f4>
   1a70c:	b	1a710 <__assert_fail@plt+0x93e0>
   1a710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a714:	ldr	r1, [fp, #8]
   1a718:	mul	r0, r0, r1
   1a71c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a720:	b	1a96c <__assert_fail@plt+0x963c>
   1a724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a728:	ldr	r1, [fp, #8]
   1a72c:	mul	r0, r0, r1
   1a730:	str	r0, [fp, #-28]	; 0xffffffe4
   1a734:	b	1a970 <__assert_fail@plt+0x9640>
   1a738:	ldr	r0, [fp, #8]
   1a73c:	cmp	r0, #0
   1a740:	bge	1a890 <__assert_fail@plt+0x9560>
   1a744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a748:	cmp	r0, #0
   1a74c:	bge	1a818 <__assert_fail@plt+0x94e8>
   1a750:	b	1a790 <__assert_fail@plt+0x9460>
   1a754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a758:	ldr	r1, [fp, #8]
   1a75c:	asr	r3, r1, #31
   1a760:	mvn	r2, #0
   1a764:	str	r0, [sp, #24]
   1a768:	mov	r0, r2
   1a76c:	str	r1, [sp, #20]
   1a770:	mov	r1, r2
   1a774:	ldr	r2, [sp, #20]
   1a778:	bl	21090 <__assert_fail@plt+0xfd60>
   1a77c:	ldr	r2, [sp, #24]
   1a780:	subs	r0, r2, r0
   1a784:	rscs	r1, r1, r2, asr #31
   1a788:	bcc	1a944 <__assert_fail@plt+0x9614>
   1a78c:	b	1a958 <__assert_fail@plt+0x9628>
   1a790:	b	1a794 <__assert_fail@plt+0x9464>
   1a794:	ldr	r0, [pc, #512]	; 1a99c <__assert_fail@plt+0x966c>
   1a798:	ldr	r1, [fp, #8]
   1a79c:	cmp	r1, r0
   1a7a0:	blt	1a7b8 <__assert_fail@plt+0x9488>
   1a7a4:	b	1a7cc <__assert_fail@plt+0x949c>
   1a7a8:	ldr	r0, [fp, #8]
   1a7ac:	movw	r1, #0
   1a7b0:	cmp	r1, r0
   1a7b4:	bge	1a7cc <__assert_fail@plt+0x949c>
   1a7b8:	mov	r0, #1
   1a7bc:	mvn	r1, #0
   1a7c0:	str	r1, [sp, #16]
   1a7c4:	str	r0, [sp, #12]
   1a7c8:	b	1a7f8 <__assert_fail@plt+0x94c8>
   1a7cc:	ldr	r0, [fp, #8]
   1a7d0:	rsb	r0, r0, #0
   1a7d4:	asr	r3, r0, #31
   1a7d8:	mvn	r1, #0
   1a7dc:	str	r0, [sp, #8]
   1a7e0:	mov	r0, r1
   1a7e4:	ldr	r2, [sp, #8]
   1a7e8:	bl	21090 <__assert_fail@plt+0xfd60>
   1a7ec:	str	r0, [sp, #16]
   1a7f0:	str	r1, [sp, #12]
   1a7f4:	b	1a7f8 <__assert_fail@plt+0x94c8>
   1a7f8:	ldr	r0, [sp, #12]
   1a7fc:	ldr	r1, [sp, #16]
   1a800:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a804:	mvn	r2, r2
   1a808:	subs	r1, r2, r1
   1a80c:	rscs	r0, r0, r2, asr #31
   1a810:	bcs	1a944 <__assert_fail@plt+0x9614>
   1a814:	b	1a958 <__assert_fail@plt+0x9628>
   1a818:	b	1a81c <__assert_fail@plt+0x94ec>
   1a81c:	b	1a874 <__assert_fail@plt+0x9544>
   1a820:	b	1a874 <__assert_fail@plt+0x9544>
   1a824:	ldr	r0, [fp, #8]
   1a828:	cmn	r0, #1
   1a82c:	bne	1a874 <__assert_fail@plt+0x9544>
   1a830:	b	1a834 <__assert_fail@plt+0x9504>
   1a834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a838:	add	r0, r0, #0
   1a83c:	movw	r1, #0
   1a840:	cmp	r1, r0
   1a844:	blt	1a944 <__assert_fail@plt+0x9614>
   1a848:	b	1a958 <__assert_fail@plt+0x9628>
   1a84c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a850:	movw	r1, #0
   1a854:	cmp	r1, r0
   1a858:	bge	1a958 <__assert_fail@plt+0x9628>
   1a85c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a860:	sub	r0, r0, #1
   1a864:	mvn	r1, #0
   1a868:	cmp	r1, r0
   1a86c:	blt	1a944 <__assert_fail@plt+0x9614>
   1a870:	b	1a958 <__assert_fail@plt+0x9628>
   1a874:	ldr	r0, [fp, #8]
   1a878:	movw	r1, #0
   1a87c:	sdiv	r0, r1, r0
   1a880:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a884:	cmp	r0, r1
   1a888:	blt	1a944 <__assert_fail@plt+0x9614>
   1a88c:	b	1a958 <__assert_fail@plt+0x9628>
   1a890:	ldr	r0, [fp, #8]
   1a894:	cmp	r0, #0
   1a898:	bne	1a8a0 <__assert_fail@plt+0x9570>
   1a89c:	b	1a958 <__assert_fail@plt+0x9628>
   1a8a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8a4:	cmp	r0, #0
   1a8a8:	bge	1a914 <__assert_fail@plt+0x95e4>
   1a8ac:	b	1a8b0 <__assert_fail@plt+0x9580>
   1a8b0:	b	1a8f8 <__assert_fail@plt+0x95c8>
   1a8b4:	b	1a8f8 <__assert_fail@plt+0x95c8>
   1a8b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8bc:	cmn	r0, #1
   1a8c0:	bne	1a8f8 <__assert_fail@plt+0x95c8>
   1a8c4:	b	1a8c8 <__assert_fail@plt+0x9598>
   1a8c8:	ldr	r0, [fp, #8]
   1a8cc:	add	r0, r0, #0
   1a8d0:	movw	r1, #0
   1a8d4:	cmp	r1, r0
   1a8d8:	blt	1a944 <__assert_fail@plt+0x9614>
   1a8dc:	b	1a958 <__assert_fail@plt+0x9628>
   1a8e0:	ldr	r0, [fp, #8]
   1a8e4:	sub	r0, r0, #1
   1a8e8:	mvn	r1, #0
   1a8ec:	cmp	r1, r0
   1a8f0:	blt	1a944 <__assert_fail@plt+0x9614>
   1a8f4:	b	1a958 <__assert_fail@plt+0x9628>
   1a8f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8fc:	movw	r1, #0
   1a900:	sdiv	r0, r1, r0
   1a904:	ldr	r1, [fp, #8]
   1a908:	cmp	r0, r1
   1a90c:	blt	1a944 <__assert_fail@plt+0x9614>
   1a910:	b	1a958 <__assert_fail@plt+0x9628>
   1a914:	ldr	r0, [fp, #8]
   1a918:	asr	r3, r0, #31
   1a91c:	mvn	r1, #0
   1a920:	str	r0, [sp, #4]
   1a924:	mov	r0, r1
   1a928:	ldr	r2, [sp, #4]
   1a92c:	bl	21090 <__assert_fail@plt+0xfd60>
   1a930:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a934:	subs	r0, r0, r2
   1a938:	sbcs	r1, r1, r2, asr #31
   1a93c:	bcs	1a958 <__assert_fail@plt+0x9628>
   1a940:	b	1a944 <__assert_fail@plt+0x9614>
   1a944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a948:	ldr	r1, [fp, #8]
   1a94c:	mul	r0, r0, r1
   1a950:	str	r0, [fp, #-28]	; 0xffffffe4
   1a954:	b	1a96c <__assert_fail@plt+0x963c>
   1a958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a95c:	ldr	r1, [fp, #8]
   1a960:	mul	r0, r0, r1
   1a964:	str	r0, [fp, #-28]	; 0xffffffe4
   1a968:	b	1a970 <__assert_fail@plt+0x9640>
   1a96c:	bl	1ab48 <__assert_fail@plt+0x9818>
   1a970:	ldr	r0, [fp, #-4]
   1a974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a978:	bl	17ea8 <__assert_fail@plt+0x6b78>
   1a97c:	str	r0, [fp, #-4]
   1a980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a984:	ldr	r1, [fp, #-8]
   1a988:	str	r0, [r1]
   1a98c:	ldr	r0, [fp, #-4]
   1a990:	mov	sp, fp
   1a994:	pop	{fp, pc}
   1a998:	svcvc	0x00ffffff
   1a99c:	andhi	r0, r0, r1
   1a9a0:	andhi	r0, r0, r0
   1a9a4:			; <UNDEFINED> instruction: 0xffff8000
   1a9a8:	push	{fp, lr}
   1a9ac:	mov	fp, sp
   1a9b0:	sub	sp, sp, #8
   1a9b4:	str	r0, [sp, #4]
   1a9b8:	ldr	r0, [sp, #4]
   1a9bc:	movw	r1, #1
   1a9c0:	bl	1a9cc <__assert_fail@plt+0x969c>
   1a9c4:	mov	sp, fp
   1a9c8:	pop	{fp, pc}
   1a9cc:	push	{fp, lr}
   1a9d0:	mov	fp, sp
   1a9d4:	sub	sp, sp, #8
   1a9d8:	str	r0, [sp, #4]
   1a9dc:	str	r1, [sp]
   1a9e0:	ldr	r0, [sp, #4]
   1a9e4:	ldr	r1, [sp]
   1a9e8:	bl	1e99c <__assert_fail@plt+0xd66c>
   1a9ec:	bl	17e34 <__assert_fail@plt+0x6b04>
   1a9f0:	mov	sp, fp
   1a9f4:	pop	{fp, pc}
   1a9f8:	push	{fp, lr}
   1a9fc:	mov	fp, sp
   1aa00:	sub	sp, sp, #8
   1aa04:	str	r0, [sp, #4]
   1aa08:	ldr	r0, [sp, #4]
   1aa0c:	movw	r1, #1
   1aa10:	bl	1aa1c <__assert_fail@plt+0x96ec>
   1aa14:	mov	sp, fp
   1aa18:	pop	{fp, pc}
   1aa1c:	push	{fp, lr}
   1aa20:	mov	fp, sp
   1aa24:	sub	sp, sp, #8
   1aa28:	str	r0, [sp, #4]
   1aa2c:	str	r1, [sp]
   1aa30:	ldr	r0, [sp, #4]
   1aa34:	ldr	r1, [sp]
   1aa38:	bl	1f178 <__assert_fail@plt+0xde48>
   1aa3c:	bl	17e34 <__assert_fail@plt+0x6b04>
   1aa40:	mov	sp, fp
   1aa44:	pop	{fp, pc}
   1aa48:	push	{fp, lr}
   1aa4c:	mov	fp, sp
   1aa50:	sub	sp, sp, #16
   1aa54:	str	r0, [fp, #-4]
   1aa58:	str	r1, [sp, #8]
   1aa5c:	ldr	r0, [sp, #8]
   1aa60:	bl	17e10 <__assert_fail@plt+0x6ae0>
   1aa64:	ldr	r1, [fp, #-4]
   1aa68:	ldr	r2, [sp, #8]
   1aa6c:	str	r0, [sp, #4]
   1aa70:	bl	110e4 <memcpy@plt>
   1aa74:	ldr	r0, [sp, #4]
   1aa78:	mov	sp, fp
   1aa7c:	pop	{fp, pc}
   1aa80:	push	{fp, lr}
   1aa84:	mov	fp, sp
   1aa88:	sub	sp, sp, #16
   1aa8c:	str	r0, [fp, #-4]
   1aa90:	str	r1, [sp, #8]
   1aa94:	ldr	r0, [sp, #8]
   1aa98:	bl	17e64 <__assert_fail@plt+0x6b34>
   1aa9c:	ldr	r1, [fp, #-4]
   1aaa0:	ldr	r2, [sp, #8]
   1aaa4:	str	r0, [sp, #4]
   1aaa8:	bl	110e4 <memcpy@plt>
   1aaac:	ldr	r0, [sp, #4]
   1aab0:	mov	sp, fp
   1aab4:	pop	{fp, pc}
   1aab8:	push	{fp, lr}
   1aabc:	mov	fp, sp
   1aac0:	sub	sp, sp, #16
   1aac4:	str	r0, [fp, #-4]
   1aac8:	str	r1, [sp, #8]
   1aacc:	ldr	r0, [sp, #8]
   1aad0:	add	r0, r0, #1
   1aad4:	bl	17e64 <__assert_fail@plt+0x6b34>
   1aad8:	str	r0, [sp, #4]
   1aadc:	ldr	r0, [sp, #4]
   1aae0:	ldr	r1, [sp, #8]
   1aae4:	add	r0, r0, r1
   1aae8:	movw	r1, #0
   1aaec:	strb	r1, [r0]
   1aaf0:	ldr	r0, [sp, #4]
   1aaf4:	ldr	r1, [fp, #-4]
   1aaf8:	ldr	r2, [sp, #8]
   1aafc:	str	r0, [sp]
   1ab00:	bl	110e4 <memcpy@plt>
   1ab04:	ldr	r0, [sp]
   1ab08:	mov	sp, fp
   1ab0c:	pop	{fp, pc}
   1ab10:	push	{fp, lr}
   1ab14:	mov	fp, sp
   1ab18:	sub	sp, sp, #8
   1ab1c:	str	r0, [sp, #4]
   1ab20:	ldr	r0, [sp, #4]
   1ab24:	ldr	r1, [sp, #4]
   1ab28:	str	r0, [sp]
   1ab2c:	mov	r0, r1
   1ab30:	bl	11204 <strlen@plt>
   1ab34:	add	r1, r0, #1
   1ab38:	ldr	r0, [sp]
   1ab3c:	bl	1aa48 <__assert_fail@plt+0x9718>
   1ab40:	mov	sp, fp
   1ab44:	pop	{fp, pc}
   1ab48:	push	{fp, lr}
   1ab4c:	mov	fp, sp
   1ab50:	sub	sp, sp, #8
   1ab54:	movw	r0, #12576	; 0x3120
   1ab58:	movt	r0, #3
   1ab5c:	ldr	r0, [r0]
   1ab60:	movw	r1, #9248	; 0x2420
   1ab64:	movt	r1, #2
   1ab68:	str	r0, [sp, #4]
   1ab6c:	mov	r0, r1
   1ab70:	bl	111ec <gettext@plt>
   1ab74:	ldr	r1, [sp, #4]
   1ab78:	str	r0, [sp]
   1ab7c:	mov	r0, r1
   1ab80:	movw	r1, #0
   1ab84:	movw	r2, #7810	; 0x1e82
   1ab88:	movt	r2, #2
   1ab8c:	ldr	r3, [sp]
   1ab90:	bl	11180 <error@plt>
   1ab94:	bl	11300 <abort@plt>
   1ab98:	push	{fp, lr}
   1ab9c:	mov	fp, sp
   1aba0:	sub	sp, sp, #32
   1aba4:	str	r0, [fp, #-4]
   1aba8:	str	r1, [fp, #-8]
   1abac:	str	r2, [fp, #-12]
   1abb0:	str	r3, [sp, #16]
   1abb4:	ldr	r0, [fp, #-4]
   1abb8:	ldr	r1, [fp, #-8]
   1abbc:	ldr	r2, [fp, #-12]
   1abc0:	ldr	r3, [sp, #16]
   1abc4:	bl	1f394 <__assert_fail@plt+0xe064>
   1abc8:	str	r0, [sp, #12]
   1abcc:	bl	11228 <__errno_location@plt>
   1abd0:	ldr	r0, [r0]
   1abd4:	str	r0, [sp, #8]
   1abd8:	ldr	r0, [sp, #8]
   1abdc:	cmp	r0, #0
   1abe0:	beq	1ac00 <__assert_fail@plt+0x98d0>
   1abe4:	ldr	r0, [sp, #8]
   1abe8:	ldr	r1, [fp, #-4]
   1abec:	ldr	r2, [fp, #-8]
   1abf0:	ldr	r3, [fp, #-12]
   1abf4:	ldr	ip, [sp, #16]
   1abf8:	str	ip, [sp]
   1abfc:	bl	1ac0c <__assert_fail@plt+0x98dc>
   1ac00:	ldr	r0, [sp, #12]
   1ac04:	mov	sp, fp
   1ac08:	pop	{fp, pc}
   1ac0c:	push	{fp, lr}
   1ac10:	mov	fp, sp
   1ac14:	sub	sp, sp, #56	; 0x38
   1ac18:	ldr	ip, [fp, #8]
   1ac1c:	str	r0, [fp, #-4]
   1ac20:	str	r1, [fp, #-8]
   1ac24:	str	r2, [fp, #-12]
   1ac28:	str	r3, [fp, #-16]
   1ac2c:	ldr	r1, [fp, #-4]
   1ac30:	movw	r0, #9265	; 0x2431
   1ac34:	movt	r0, #2
   1ac38:	str	ip, [fp, #-20]	; 0xffffffec
   1ac3c:	str	r1, [fp, #-24]	; 0xffffffe8
   1ac40:	bl	111ec <gettext@plt>
   1ac44:	movw	r1, #0
   1ac48:	str	r0, [sp, #28]
   1ac4c:	mov	r0, r1
   1ac50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac54:	ldr	r2, [sp, #28]
   1ac58:	bl	11180 <error@plt>
   1ac5c:	movw	r0, #9290	; 0x244a
   1ac60:	movt	r0, #2
   1ac64:	bl	111ec <gettext@plt>
   1ac68:	movw	r1, #0
   1ac6c:	str	r0, [sp, #24]
   1ac70:	mov	r0, r1
   1ac74:	ldr	r2, [sp, #24]
   1ac78:	bl	11180 <error@plt>
   1ac7c:	movw	r0, #12576	; 0x3120
   1ac80:	movt	r0, #3
   1ac84:	ldr	r0, [r0]
   1ac88:	movw	r1, #9333	; 0x2475
   1ac8c:	movt	r1, #2
   1ac90:	str	r0, [sp, #20]
   1ac94:	mov	r0, r1
   1ac98:	bl	111ec <gettext@plt>
   1ac9c:	ldr	r2, [fp, #-8]
   1aca0:	ldr	r3, [fp, #-12]
   1aca4:	movw	r1, #0
   1aca8:	str	r0, [sp, #16]
   1acac:	mov	r0, r1
   1acb0:	movw	r1, #8
   1acb4:	bl	16eac <__assert_fail@plt+0x5b7c>
   1acb8:	ldr	r2, [fp, #-16]
   1acbc:	ldr	r3, [fp, #8]
   1acc0:	movw	r1, #1
   1acc4:	str	r0, [sp, #12]
   1acc8:	mov	r0, r1
   1accc:	movw	r1, #8
   1acd0:	bl	16eac <__assert_fail@plt+0x5b7c>
   1acd4:	ldr	r1, [sp, #20]
   1acd8:	str	r0, [sp, #8]
   1acdc:	mov	r0, r1
   1ace0:	movw	r1, #0
   1ace4:	ldr	r2, [sp, #16]
   1ace8:	ldr	r3, [sp, #12]
   1acec:	ldr	ip, [sp, #8]
   1acf0:	str	ip, [sp]
   1acf4:	bl	11180 <error@plt>
   1acf8:	mov	sp, fp
   1acfc:	pop	{fp, pc}
   1ad00:	push	{fp, lr}
   1ad04:	mov	fp, sp
   1ad08:	sub	sp, sp, #32
   1ad0c:	str	r0, [fp, #-4]
   1ad10:	str	r1, [fp, #-8]
   1ad14:	str	r2, [fp, #-12]
   1ad18:	str	r3, [sp, #16]
   1ad1c:	ldr	r0, [fp, #-4]
   1ad20:	ldr	r1, [fp, #-8]
   1ad24:	ldr	r2, [fp, #-12]
   1ad28:	ldr	r3, [sp, #16]
   1ad2c:	bl	1f5c0 <__assert_fail@plt+0xe290>
   1ad30:	str	r0, [sp, #12]
   1ad34:	bl	11228 <__errno_location@plt>
   1ad38:	ldr	r0, [r0]
   1ad3c:	str	r0, [sp, #8]
   1ad40:	ldr	r0, [sp, #8]
   1ad44:	cmp	r0, #0
   1ad48:	beq	1ad70 <__assert_fail@plt+0x9a40>
   1ad4c:	ldr	r0, [sp, #8]
   1ad50:	ldr	r1, [fp, #-4]
   1ad54:	ldr	r2, [fp, #-8]
   1ad58:	sub	r2, r2, #1
   1ad5c:	ldr	r3, [fp, #-12]
   1ad60:	ldr	ip, [sp, #16]
   1ad64:	sub	ip, ip, #1
   1ad68:	str	ip, [sp]
   1ad6c:	bl	1ac0c <__assert_fail@plt+0x98dc>
   1ad70:	ldr	r0, [sp, #12]
   1ad74:	mov	sp, fp
   1ad78:	pop	{fp, pc}
   1ad7c:	push	{fp, lr}
   1ad80:	mov	fp, sp
   1ad84:	sub	sp, sp, #72	; 0x48
   1ad88:	ldr	ip, [fp, #8]
   1ad8c:	str	r0, [fp, #-8]
   1ad90:	str	r1, [fp, #-12]
   1ad94:	str	r2, [fp, #-16]
   1ad98:	str	r3, [fp, #-20]	; 0xffffffec
   1ad9c:	movw	r0, #0
   1ada0:	str	r0, [sp, #36]	; 0x24
   1ada4:	ldr	r1, [fp, #-16]
   1ada8:	cmp	r0, r1
   1adac:	bgt	1adc0 <__assert_fail@plt+0x9a90>
   1adb0:	ldr	r0, [fp, #-16]
   1adb4:	cmp	r0, #36	; 0x24
   1adb8:	bgt	1adc0 <__assert_fail@plt+0x9a90>
   1adbc:	b	1ade0 <__assert_fail@plt+0x9ab0>
   1adc0:	movw	r0, #9370	; 0x249a
   1adc4:	movt	r0, #2
   1adc8:	movw	r1, #9408	; 0x24c0
   1adcc:	movt	r1, #2
   1add0:	movw	r2, #85	; 0x55
   1add4:	movw	r3, #9424	; 0x24d0
   1add8:	movt	r3, #2
   1addc:	bl	11330 <__assert_fail@plt>
   1ade0:	ldr	r0, [fp, #-12]
   1ade4:	movw	r1, #0
   1ade8:	cmp	r0, r1
   1adec:	beq	1adfc <__assert_fail@plt+0x9acc>
   1adf0:	ldr	r0, [fp, #-12]
   1adf4:	str	r0, [sp, #12]
   1adf8:	b	1ae08 <__assert_fail@plt+0x9ad8>
   1adfc:	sub	r0, fp, #24
   1ae00:	str	r0, [sp, #12]
   1ae04:	b	1ae08 <__assert_fail@plt+0x9ad8>
   1ae08:	ldr	r0, [sp, #12]
   1ae0c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ae10:	bl	11228 <__errno_location@plt>
   1ae14:	movw	r1, #0
   1ae18:	str	r1, [r0]
   1ae1c:	ldr	r0, [fp, #-8]
   1ae20:	str	r0, [sp, #32]
   1ae24:	ldr	r0, [sp, #32]
   1ae28:	ldrb	r0, [r0]
   1ae2c:	strb	r0, [sp, #31]
   1ae30:	bl	111d4 <__ctype_b_loc@plt>
   1ae34:	ldr	r0, [r0]
   1ae38:	ldrb	r1, [sp, #31]
   1ae3c:	mov	r2, r1
   1ae40:	add	r0, r0, r1, lsl #1
   1ae44:	ldrh	r0, [r0]
   1ae48:	and	r0, r0, #8192	; 0x2000
   1ae4c:	cmp	r0, #0
   1ae50:	beq	1ae6c <__assert_fail@plt+0x9b3c>
   1ae54:	ldr	r0, [sp, #32]
   1ae58:	add	r1, r0, #1
   1ae5c:	str	r1, [sp, #32]
   1ae60:	ldrb	r0, [r0, #1]
   1ae64:	strb	r0, [sp, #31]
   1ae68:	b	1ae30 <__assert_fail@plt+0x9b00>
   1ae6c:	ldrb	r0, [sp, #31]
   1ae70:	cmp	r0, #45	; 0x2d
   1ae74:	bne	1ae84 <__assert_fail@plt+0x9b54>
   1ae78:	movw	r0, #4
   1ae7c:	str	r0, [fp, #-4]
   1ae80:	b	1b3d4 <__assert_fail@plt+0xa0a4>
   1ae84:	ldr	r0, [fp, #-8]
   1ae88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ae8c:	ldr	r2, [fp, #-16]
   1ae90:	bl	111f8 <strtoul@plt>
   1ae94:	str	r0, [fp, #-32]	; 0xffffffe0
   1ae98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ae9c:	ldr	r0, [r0]
   1aea0:	ldr	r1, [fp, #-8]
   1aea4:	cmp	r0, r1
   1aea8:	bne	1af0c <__assert_fail@plt+0x9bdc>
   1aeac:	ldr	r0, [fp, #8]
   1aeb0:	movw	r1, #0
   1aeb4:	cmp	r0, r1
   1aeb8:	beq	1aefc <__assert_fail@plt+0x9bcc>
   1aebc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aec0:	ldr	r0, [r0]
   1aec4:	ldrb	r0, [r0]
   1aec8:	cmp	r0, #0
   1aecc:	beq	1aefc <__assert_fail@plt+0x9bcc>
   1aed0:	ldr	r0, [fp, #8]
   1aed4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aed8:	ldr	r1, [r1]
   1aedc:	ldrb	r1, [r1]
   1aee0:	bl	11210 <strchr@plt>
   1aee4:	movw	r1, #0
   1aee8:	cmp	r0, r1
   1aeec:	beq	1aefc <__assert_fail@plt+0x9bcc>
   1aef0:	movw	r0, #1
   1aef4:	str	r0, [fp, #-32]	; 0xffffffe0
   1aef8:	b	1af08 <__assert_fail@plt+0x9bd8>
   1aefc:	movw	r0, #4
   1af00:	str	r0, [fp, #-4]
   1af04:	b	1b3d4 <__assert_fail@plt+0xa0a4>
   1af08:	b	1af44 <__assert_fail@plt+0x9c14>
   1af0c:	bl	11228 <__errno_location@plt>
   1af10:	ldr	r0, [r0]
   1af14:	cmp	r0, #0
   1af18:	beq	1af40 <__assert_fail@plt+0x9c10>
   1af1c:	bl	11228 <__errno_location@plt>
   1af20:	ldr	r0, [r0]
   1af24:	cmp	r0, #34	; 0x22
   1af28:	beq	1af38 <__assert_fail@plt+0x9c08>
   1af2c:	movw	r0, #4
   1af30:	str	r0, [fp, #-4]
   1af34:	b	1b3d4 <__assert_fail@plt+0xa0a4>
   1af38:	movw	r0, #1
   1af3c:	str	r0, [sp, #36]	; 0x24
   1af40:	b	1af44 <__assert_fail@plt+0x9c14>
   1af44:	ldr	r0, [fp, #8]
   1af48:	movw	r1, #0
   1af4c:	cmp	r0, r1
   1af50:	bne	1af6c <__assert_fail@plt+0x9c3c>
   1af54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1af58:	ldr	r1, [fp, #-20]	; 0xffffffec
   1af5c:	str	r0, [r1]
   1af60:	ldr	r0, [sp, #36]	; 0x24
   1af64:	str	r0, [fp, #-4]
   1af68:	b	1b3d4 <__assert_fail@plt+0xa0a4>
   1af6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1af70:	ldr	r0, [r0]
   1af74:	ldrb	r0, [r0]
   1af78:	cmp	r0, #0
   1af7c:	beq	1b3c0 <__assert_fail@plt+0xa090>
   1af80:	movw	r0, #1024	; 0x400
   1af84:	str	r0, [sp, #24]
   1af88:	movw	r0, #1
   1af8c:	str	r0, [sp, #20]
   1af90:	ldr	r0, [fp, #8]
   1af94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1af98:	ldr	r1, [r1]
   1af9c:	ldrb	r1, [r1]
   1afa0:	bl	11210 <strchr@plt>
   1afa4:	movw	r1, #0
   1afa8:	cmp	r0, r1
   1afac:	bne	1afcc <__assert_fail@plt+0x9c9c>
   1afb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1afb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1afb8:	str	r0, [r1]
   1afbc:	ldr	r0, [sp, #36]	; 0x24
   1afc0:	orr	r0, r0, #2
   1afc4:	str	r0, [fp, #-4]
   1afc8:	b	1b3d4 <__assert_fail@plt+0xa0a4>
   1afcc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1afd0:	ldr	r0, [r0]
   1afd4:	ldrb	r0, [r0]
   1afd8:	sub	r0, r0, #69	; 0x45
   1afdc:	cmp	r0, #47	; 0x2f
   1afe0:	str	r0, [sp, #8]
   1afe4:	bhi	1b150 <__assert_fail@plt+0x9e20>
   1afe8:	add	r0, pc, #8
   1afec:	ldr	r1, [sp, #8]
   1aff0:	ldr	r0, [r0, r1, lsl #2]
   1aff4:	mov	pc, r0
   1aff8:	strheq	fp, [r1], -r8
   1affc:	andeq	fp, r1, r0, asr r1
   1b000:	strheq	fp, [r1], -r8
   1b004:	andeq	fp, r1, r0, asr r1
   1b008:	andeq	fp, r1, r0, asr r1
   1b00c:	andeq	fp, r1, r0, asr r1
   1b010:	strheq	fp, [r1], -r8
   1b014:	andeq	fp, r1, r0, asr r1
   1b018:	strheq	fp, [r1], -r8
   1b01c:	andeq	fp, r1, r0, asr r1
   1b020:	andeq	fp, r1, r0, asr r1
   1b024:	strheq	fp, [r1], -r8
   1b028:	andeq	fp, r1, r0, asr r1
   1b02c:	andeq	fp, r1, r0, asr r1
   1b030:	andeq	fp, r1, r0, asr r1
   1b034:	strheq	fp, [r1], -r8
   1b038:	andeq	fp, r1, r0, asr r1
   1b03c:	andeq	fp, r1, r0, asr r1
   1b040:	andeq	fp, r1, r0, asr r1
   1b044:	andeq	fp, r1, r0, asr r1
   1b048:	strheq	fp, [r1], -r8
   1b04c:	strheq	fp, [r1], -r8
   1b050:	andeq	fp, r1, r0, asr r1
   1b054:	andeq	fp, r1, r0, asr r1
   1b058:	andeq	fp, r1, r0, asr r1
   1b05c:	andeq	fp, r1, r0, asr r1
   1b060:	andeq	fp, r1, r0, asr r1
   1b064:	andeq	fp, r1, r0, asr r1
   1b068:	andeq	fp, r1, r0, asr r1
   1b06c:	andeq	fp, r1, r0, asr r1
   1b070:	andeq	fp, r1, r0, asr r1
   1b074:	andeq	fp, r1, r0, asr r1
   1b078:	andeq	fp, r1, r0, asr r1
   1b07c:	andeq	fp, r1, r0, asr r1
   1b080:	strheq	fp, [r1], -r8
   1b084:	andeq	fp, r1, r0, asr r1
   1b088:	andeq	fp, r1, r0, asr r1
   1b08c:	andeq	fp, r1, r0, asr r1
   1b090:	strheq	fp, [r1], -r8
   1b094:	andeq	fp, r1, r0, asr r1
   1b098:	strheq	fp, [r1], -r8
   1b09c:	andeq	fp, r1, r0, asr r1
   1b0a0:	andeq	fp, r1, r0, asr r1
   1b0a4:	andeq	fp, r1, r0, asr r1
   1b0a8:	andeq	fp, r1, r0, asr r1
   1b0ac:	andeq	fp, r1, r0, asr r1
   1b0b0:	andeq	fp, r1, r0, asr r1
   1b0b4:	strheq	fp, [r1], -r8
   1b0b8:	ldr	r0, [fp, #8]
   1b0bc:	movw	r1, #48	; 0x30
   1b0c0:	bl	11210 <strchr@plt>
   1b0c4:	movw	r1, #0
   1b0c8:	cmp	r0, r1
   1b0cc:	beq	1b14c <__assert_fail@plt+0x9e1c>
   1b0d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b0d4:	ldr	r0, [r0]
   1b0d8:	ldrb	r0, [r0, #1]
   1b0dc:	mov	r1, r0
   1b0e0:	cmp	r0, #66	; 0x42
   1b0e4:	str	r1, [sp, #4]
   1b0e8:	beq	1b134 <__assert_fail@plt+0x9e04>
   1b0ec:	b	1b0f0 <__assert_fail@plt+0x9dc0>
   1b0f0:	ldr	r0, [sp, #4]
   1b0f4:	cmp	r0, #68	; 0x44
   1b0f8:	beq	1b134 <__assert_fail@plt+0x9e04>
   1b0fc:	b	1b100 <__assert_fail@plt+0x9dd0>
   1b100:	ldr	r0, [sp, #4]
   1b104:	cmp	r0, #105	; 0x69
   1b108:	bne	1b148 <__assert_fail@plt+0x9e18>
   1b10c:	b	1b110 <__assert_fail@plt+0x9de0>
   1b110:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b114:	ldr	r0, [r0]
   1b118:	ldrb	r0, [r0, #2]
   1b11c:	cmp	r0, #66	; 0x42
   1b120:	bne	1b130 <__assert_fail@plt+0x9e00>
   1b124:	ldr	r0, [sp, #20]
   1b128:	add	r0, r0, #2
   1b12c:	str	r0, [sp, #20]
   1b130:	b	1b148 <__assert_fail@plt+0x9e18>
   1b134:	movw	r0, #1000	; 0x3e8
   1b138:	str	r0, [sp, #24]
   1b13c:	ldr	r0, [sp, #20]
   1b140:	add	r0, r0, #1
   1b144:	str	r0, [sp, #20]
   1b148:	b	1b14c <__assert_fail@plt+0x9e1c>
   1b14c:	b	1b150 <__assert_fail@plt+0x9e20>
   1b150:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b154:	ldr	r0, [r0]
   1b158:	ldrb	r0, [r0]
   1b15c:	sub	r0, r0, #66	; 0x42
   1b160:	cmp	r0, #53	; 0x35
   1b164:	str	r0, [sp]
   1b168:	bhi	1b35c <__assert_fail@plt+0xa02c>
   1b16c:	add	r0, pc, #8
   1b170:	ldr	r1, [sp]
   1b174:	ldr	r0, [r0, r1, lsl #2]
   1b178:	mov	pc, r0
   1b17c:	andeq	fp, r1, r8, ror #4
   1b180:	andeq	fp, r1, ip, asr r3
   1b184:	andeq	fp, r1, ip, asr r3
   1b188:	andeq	fp, r1, r8, lsl #5
   1b18c:	andeq	fp, r1, ip, asr r3
   1b190:	andeq	fp, r1, r0, lsr #5
   1b194:	andeq	fp, r1, ip, asr r3
   1b198:	andeq	fp, r1, ip, asr r3
   1b19c:	andeq	fp, r1, ip, asr r3
   1b1a0:			; <UNDEFINED> instruction: 0x0001b2b8
   1b1a4:	andeq	fp, r1, ip, asr r3
   1b1a8:	ldrdeq	fp, [r1], -r0
   1b1ac:	andeq	fp, r1, ip, asr r3
   1b1b0:	andeq	fp, r1, ip, asr r3
   1b1b4:	andeq	fp, r1, r8, ror #5
   1b1b8:	andeq	fp, r1, ip, asr r3
   1b1bc:	andeq	fp, r1, ip, asr r3
   1b1c0:	andeq	fp, r1, ip, asr r3
   1b1c4:	andeq	fp, r1, r0, lsl #6
   1b1c8:	andeq	fp, r1, ip, asr r3
   1b1cc:	andeq	fp, r1, ip, asr r3
   1b1d0:	andeq	fp, r1, ip, asr r3
   1b1d4:	andeq	fp, r1, ip, asr r3
   1b1d8:	andeq	fp, r1, ip, lsr #6
   1b1dc:	andeq	fp, r1, r4, asr #6
   1b1e0:	andeq	fp, r1, ip, asr r3
   1b1e4:	andeq	fp, r1, ip, asr r3
   1b1e8:	andeq	fp, r1, ip, asr r3
   1b1ec:	andeq	fp, r1, ip, asr r3
   1b1f0:	andeq	fp, r1, ip, asr r3
   1b1f4:	andeq	fp, r1, ip, asr r3
   1b1f8:	andeq	fp, r1, ip, asr r3
   1b1fc:	andeq	fp, r1, r4, asr r2
   1b200:	andeq	fp, r1, ip, ror r2
   1b204:	andeq	fp, r1, ip, asr r3
   1b208:	andeq	fp, r1, ip, asr r3
   1b20c:	andeq	fp, r1, ip, asr r3
   1b210:	andeq	fp, r1, r0, lsr #5
   1b214:	andeq	fp, r1, ip, asr r3
   1b218:	andeq	fp, r1, ip, asr r3
   1b21c:	andeq	fp, r1, ip, asr r3
   1b220:			; <UNDEFINED> instruction: 0x0001b2b8
   1b224:	andeq	fp, r1, ip, asr r3
   1b228:	ldrdeq	fp, [r1], -r0
   1b22c:	andeq	fp, r1, ip, asr r3
   1b230:	andeq	fp, r1, ip, asr r3
   1b234:	andeq	fp, r1, ip, asr r3
   1b238:	andeq	fp, r1, ip, asr r3
   1b23c:	andeq	fp, r1, ip, asr r3
   1b240:	andeq	fp, r1, ip, asr r3
   1b244:	andeq	fp, r1, r0, lsl #6
   1b248:	andeq	fp, r1, ip, asr r3
   1b24c:	andeq	fp, r1, ip, asr r3
   1b250:	andeq	fp, r1, r8, lsl r3
   1b254:	sub	r0, fp, #32
   1b258:	movw	r1, #512	; 0x200
   1b25c:	bl	1b3e0 <__assert_fail@plt+0xa0b0>
   1b260:	str	r0, [sp, #16]
   1b264:	b	1b378 <__assert_fail@plt+0xa048>
   1b268:	sub	r0, fp, #32
   1b26c:	movw	r1, #1024	; 0x400
   1b270:	bl	1b3e0 <__assert_fail@plt+0xa0b0>
   1b274:	str	r0, [sp, #16]
   1b278:	b	1b378 <__assert_fail@plt+0xa048>
   1b27c:	movw	r0, #0
   1b280:	str	r0, [sp, #16]
   1b284:	b	1b378 <__assert_fail@plt+0xa048>
   1b288:	ldr	r1, [sp, #24]
   1b28c:	sub	r0, fp, #32
   1b290:	movw	r2, #6
   1b294:	bl	1c9d4 <__assert_fail@plt+0xb6a4>
   1b298:	str	r0, [sp, #16]
   1b29c:	b	1b378 <__assert_fail@plt+0xa048>
   1b2a0:	ldr	r1, [sp, #24]
   1b2a4:	sub	r0, fp, #32
   1b2a8:	movw	r2, #3
   1b2ac:	bl	1c9d4 <__assert_fail@plt+0xb6a4>
   1b2b0:	str	r0, [sp, #16]
   1b2b4:	b	1b378 <__assert_fail@plt+0xa048>
   1b2b8:	ldr	r1, [sp, #24]
   1b2bc:	sub	r0, fp, #32
   1b2c0:	movw	r2, #1
   1b2c4:	bl	1c9d4 <__assert_fail@plt+0xb6a4>
   1b2c8:	str	r0, [sp, #16]
   1b2cc:	b	1b378 <__assert_fail@plt+0xa048>
   1b2d0:	ldr	r1, [sp, #24]
   1b2d4:	sub	r0, fp, #32
   1b2d8:	movw	r2, #2
   1b2dc:	bl	1c9d4 <__assert_fail@plt+0xb6a4>
   1b2e0:	str	r0, [sp, #16]
   1b2e4:	b	1b378 <__assert_fail@plt+0xa048>
   1b2e8:	ldr	r1, [sp, #24]
   1b2ec:	sub	r0, fp, #32
   1b2f0:	movw	r2, #5
   1b2f4:	bl	1c9d4 <__assert_fail@plt+0xb6a4>
   1b2f8:	str	r0, [sp, #16]
   1b2fc:	b	1b378 <__assert_fail@plt+0xa048>
   1b300:	ldr	r1, [sp, #24]
   1b304:	sub	r0, fp, #32
   1b308:	movw	r2, #4
   1b30c:	bl	1c9d4 <__assert_fail@plt+0xb6a4>
   1b310:	str	r0, [sp, #16]
   1b314:	b	1b378 <__assert_fail@plt+0xa048>
   1b318:	sub	r0, fp, #32
   1b31c:	movw	r1, #2
   1b320:	bl	1b3e0 <__assert_fail@plt+0xa0b0>
   1b324:	str	r0, [sp, #16]
   1b328:	b	1b378 <__assert_fail@plt+0xa048>
   1b32c:	ldr	r1, [sp, #24]
   1b330:	sub	r0, fp, #32
   1b334:	movw	r2, #8
   1b338:	bl	1c9d4 <__assert_fail@plt+0xb6a4>
   1b33c:	str	r0, [sp, #16]
   1b340:	b	1b378 <__assert_fail@plt+0xa048>
   1b344:	ldr	r1, [sp, #24]
   1b348:	sub	r0, fp, #32
   1b34c:	movw	r2, #7
   1b350:	bl	1c9d4 <__assert_fail@plt+0xb6a4>
   1b354:	str	r0, [sp, #16]
   1b358:	b	1b378 <__assert_fail@plt+0xa048>
   1b35c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b360:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b364:	str	r0, [r1]
   1b368:	ldr	r0, [sp, #36]	; 0x24
   1b36c:	orr	r0, r0, #2
   1b370:	str	r0, [fp, #-4]
   1b374:	b	1b3d4 <__assert_fail@plt+0xa0a4>
   1b378:	ldr	r0, [sp, #16]
   1b37c:	ldr	r1, [sp, #36]	; 0x24
   1b380:	orr	r0, r1, r0
   1b384:	str	r0, [sp, #36]	; 0x24
   1b388:	ldr	r0, [sp, #20]
   1b38c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b390:	ldr	r2, [r1]
   1b394:	add	r0, r2, r0
   1b398:	str	r0, [r1]
   1b39c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b3a0:	ldr	r0, [r0]
   1b3a4:	ldrsb	r0, [r0]
   1b3a8:	cmp	r0, #0
   1b3ac:	beq	1b3bc <__assert_fail@plt+0xa08c>
   1b3b0:	ldr	r0, [sp, #36]	; 0x24
   1b3b4:	orr	r0, r0, #2
   1b3b8:	str	r0, [sp, #36]	; 0x24
   1b3bc:	b	1b3c0 <__assert_fail@plt+0xa090>
   1b3c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b3c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b3c8:	str	r0, [r1]
   1b3cc:	ldr	r0, [sp, #36]	; 0x24
   1b3d0:	str	r0, [fp, #-4]
   1b3d4:	ldr	r0, [fp, #-4]
   1b3d8:	mov	sp, fp
   1b3dc:	pop	{fp, pc}
   1b3e0:	push	{fp, lr}
   1b3e4:	mov	fp, sp
   1b3e8:	sub	sp, sp, #104	; 0x68
   1b3ec:	str	r0, [fp, #-8]
   1b3f0:	str	r1, [fp, #-12]
   1b3f4:	b	1b828 <__assert_fail@plt+0xa4f8>
   1b3f8:	b	1b610 <__assert_fail@plt+0xa2e0>
   1b3fc:	ldr	r0, [fp, #-12]
   1b400:	cmp	r0, #0
   1b404:	bge	1b534 <__assert_fail@plt+0xa204>
   1b408:	ldr	r0, [fp, #-8]
   1b40c:	ldr	r0, [r0]
   1b410:	cmp	r0, #0
   1b414:	bcs	1b4a8 <__assert_fail@plt+0xa178>
   1b418:	b	1b41c <__assert_fail@plt+0xa0ec>
   1b41c:	ldr	r0, [fp, #-8]
   1b420:	ldr	r0, [r0]
   1b424:	ldr	r1, [fp, #-12]
   1b428:	movw	r2, #127	; 0x7f
   1b42c:	sdiv	r1, r2, r1
   1b430:	cmp	r0, r1
   1b434:	bcc	1b5d8 <__assert_fail@plt+0xa2a8>
   1b438:	b	1b5f4 <__assert_fail@plt+0xa2c4>
   1b43c:	b	1b440 <__assert_fail@plt+0xa110>
   1b440:	ldr	r0, [pc, #4072]	; 1c430 <__assert_fail@plt+0xb100>
   1b444:	ldr	r1, [fp, #-12]
   1b448:	cmp	r1, r0
   1b44c:	blt	1b464 <__assert_fail@plt+0xa134>
   1b450:	b	1b470 <__assert_fail@plt+0xa140>
   1b454:	ldr	r0, [fp, #-12]
   1b458:	movw	r1, #0
   1b45c:	cmp	r1, r0
   1b460:	bge	1b470 <__assert_fail@plt+0xa140>
   1b464:	movw	r0, #0
   1b468:	str	r0, [fp, #-20]	; 0xffffffec
   1b46c:	b	1b488 <__assert_fail@plt+0xa158>
   1b470:	ldr	r0, [fp, #-12]
   1b474:	movw	r1, #0
   1b478:	sub	r0, r1, r0
   1b47c:	movw	r1, #127	; 0x7f
   1b480:	sdiv	r0, r1, r0
   1b484:	str	r0, [fp, #-20]	; 0xffffffec
   1b488:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b48c:	ldr	r1, [fp, #-8]
   1b490:	ldr	r1, [r1]
   1b494:	mvn	r2, #0
   1b498:	sub	r1, r2, r1
   1b49c:	cmp	r0, r1
   1b4a0:	bls	1b5d8 <__assert_fail@plt+0xa2a8>
   1b4a4:	b	1b5f4 <__assert_fail@plt+0xa2c4>
   1b4a8:	b	1b4ac <__assert_fail@plt+0xa17c>
   1b4ac:	b	1b514 <__assert_fail@plt+0xa1e4>
   1b4b0:	b	1b514 <__assert_fail@plt+0xa1e4>
   1b4b4:	ldr	r0, [fp, #-12]
   1b4b8:	cmn	r0, #1
   1b4bc:	bne	1b514 <__assert_fail@plt+0xa1e4>
   1b4c0:	b	1b4e4 <__assert_fail@plt+0xa1b4>
   1b4c4:	ldr	r0, [fp, #-8]
   1b4c8:	ldr	r0, [r0]
   1b4cc:	mvn	r1, #127	; 0x7f
   1b4d0:	add	r0, r0, r1
   1b4d4:	movw	r1, #0
   1b4d8:	cmp	r1, r0
   1b4dc:	bcc	1b5d8 <__assert_fail@plt+0xa2a8>
   1b4e0:	b	1b5f4 <__assert_fail@plt+0xa2c4>
   1b4e4:	ldr	r0, [fp, #-8]
   1b4e8:	ldr	r0, [r0]
   1b4ec:	movw	r1, #0
   1b4f0:	cmp	r1, r0
   1b4f4:	bcs	1b5f4 <__assert_fail@plt+0xa2c4>
   1b4f8:	ldr	r0, [fp, #-8]
   1b4fc:	ldr	r0, [r0]
   1b500:	sub	r0, r0, #1
   1b504:	movw	r1, #127	; 0x7f
   1b508:	cmp	r1, r0
   1b50c:	bcc	1b5d8 <__assert_fail@plt+0xa2a8>
   1b510:	b	1b5f4 <__assert_fail@plt+0xa2c4>
   1b514:	ldr	r0, [fp, #-12]
   1b518:	mvn	r1, #127	; 0x7f
   1b51c:	sdiv	r0, r1, r0
   1b520:	ldr	r1, [fp, #-8]
   1b524:	ldr	r1, [r1]
   1b528:	cmp	r0, r1
   1b52c:	bcc	1b5d8 <__assert_fail@plt+0xa2a8>
   1b530:	b	1b5f4 <__assert_fail@plt+0xa2c4>
   1b534:	ldr	r0, [fp, #-12]
   1b538:	cmp	r0, #0
   1b53c:	bne	1b544 <__assert_fail@plt+0xa214>
   1b540:	b	1b5f4 <__assert_fail@plt+0xa2c4>
   1b544:	ldr	r0, [fp, #-8]
   1b548:	ldr	r0, [r0]
   1b54c:	cmp	r0, #0
   1b550:	bcs	1b5bc <__assert_fail@plt+0xa28c>
   1b554:	ldr	r0, [fp, #-8]
   1b558:	ldr	r0, [r0]
   1b55c:	cmn	r0, #1
   1b560:	bne	1b59c <__assert_fail@plt+0xa26c>
   1b564:	b	1b568 <__assert_fail@plt+0xa238>
   1b568:	ldr	r0, [fp, #-12]
   1b56c:	mvn	r1, #127	; 0x7f
   1b570:	add	r0, r0, r1
   1b574:	movw	r1, #0
   1b578:	cmp	r1, r0
   1b57c:	blt	1b5d8 <__assert_fail@plt+0xa2a8>
   1b580:	b	1b5f4 <__assert_fail@plt+0xa2c4>
   1b584:	ldr	r0, [fp, #-12]
   1b588:	sub	r0, r0, #1
   1b58c:	movw	r1, #127	; 0x7f
   1b590:	cmp	r1, r0
   1b594:	blt	1b5d8 <__assert_fail@plt+0xa2a8>
   1b598:	b	1b5f4 <__assert_fail@plt+0xa2c4>
   1b59c:	ldr	r0, [fp, #-8]
   1b5a0:	ldr	r0, [r0]
   1b5a4:	mvn	r1, #127	; 0x7f
   1b5a8:	udiv	r0, r1, r0
   1b5ac:	ldr	r1, [fp, #-12]
   1b5b0:	cmp	r0, r1
   1b5b4:	bcc	1b5d8 <__assert_fail@plt+0xa2a8>
   1b5b8:	b	1b5f4 <__assert_fail@plt+0xa2c4>
   1b5bc:	ldr	r0, [fp, #-12]
   1b5c0:	movw	r1, #127	; 0x7f
   1b5c4:	sdiv	r0, r1, r0
   1b5c8:	ldr	r1, [fp, #-8]
   1b5cc:	ldr	r1, [r1]
   1b5d0:	cmp	r0, r1
   1b5d4:	bcs	1b5f4 <__assert_fail@plt+0xa2c4>
   1b5d8:	ldr	r0, [fp, #-8]
   1b5dc:	ldr	r0, [r0]
   1b5e0:	ldr	r1, [fp, #-12]
   1b5e4:	mul	r0, r0, r1
   1b5e8:	sxtb	r0, r0
   1b5ec:	str	r0, [fp, #-16]
   1b5f0:	b	1c970 <__assert_fail@plt+0xb640>
   1b5f4:	ldr	r0, [fp, #-8]
   1b5f8:	ldr	r0, [r0]
   1b5fc:	ldr	r1, [fp, #-12]
   1b600:	mul	r0, r0, r1
   1b604:	sxtb	r0, r0
   1b608:	str	r0, [fp, #-16]
   1b60c:	b	1c9a4 <__assert_fail@plt+0xb674>
   1b610:	ldr	r0, [fp, #-12]
   1b614:	cmp	r0, #0
   1b618:	bge	1b744 <__assert_fail@plt+0xa414>
   1b61c:	ldr	r0, [fp, #-8]
   1b620:	ldr	r0, [r0]
   1b624:	cmp	r0, #0
   1b628:	bcs	1b6bc <__assert_fail@plt+0xa38c>
   1b62c:	b	1b630 <__assert_fail@plt+0xa300>
   1b630:	ldr	r0, [fp, #-8]
   1b634:	ldr	r0, [r0]
   1b638:	ldr	r1, [fp, #-12]
   1b63c:	movw	r2, #255	; 0xff
   1b640:	sdiv	r1, r2, r1
   1b644:	cmp	r0, r1
   1b648:	bcc	1b7f0 <__assert_fail@plt+0xa4c0>
   1b64c:	b	1b80c <__assert_fail@plt+0xa4dc>
   1b650:	b	1b654 <__assert_fail@plt+0xa324>
   1b654:	ldr	r0, [pc, #3540]	; 1c430 <__assert_fail@plt+0xb100>
   1b658:	ldr	r1, [fp, #-12]
   1b65c:	cmp	r1, r0
   1b660:	blt	1b678 <__assert_fail@plt+0xa348>
   1b664:	b	1b684 <__assert_fail@plt+0xa354>
   1b668:	ldr	r0, [fp, #-12]
   1b66c:	movw	r1, #0
   1b670:	cmp	r1, r0
   1b674:	bge	1b684 <__assert_fail@plt+0xa354>
   1b678:	movw	r0, #0
   1b67c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b680:	b	1b69c <__assert_fail@plt+0xa36c>
   1b684:	ldr	r0, [fp, #-12]
   1b688:	movw	r1, #0
   1b68c:	sub	r0, r1, r0
   1b690:	movw	r1, #255	; 0xff
   1b694:	sdiv	r0, r1, r0
   1b698:	str	r0, [fp, #-24]	; 0xffffffe8
   1b69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b6a0:	ldr	r1, [fp, #-8]
   1b6a4:	ldr	r1, [r1]
   1b6a8:	mvn	r2, #0
   1b6ac:	sub	r1, r2, r1
   1b6b0:	cmp	r0, r1
   1b6b4:	bls	1b7f0 <__assert_fail@plt+0xa4c0>
   1b6b8:	b	1b80c <__assert_fail@plt+0xa4dc>
   1b6bc:	b	1b6c0 <__assert_fail@plt+0xa390>
   1b6c0:	b	1b724 <__assert_fail@plt+0xa3f4>
   1b6c4:	b	1b724 <__assert_fail@plt+0xa3f4>
   1b6c8:	ldr	r0, [fp, #-12]
   1b6cc:	cmn	r0, #1
   1b6d0:	bne	1b724 <__assert_fail@plt+0xa3f4>
   1b6d4:	b	1b6f4 <__assert_fail@plt+0xa3c4>
   1b6d8:	ldr	r0, [fp, #-8]
   1b6dc:	ldr	r0, [r0]
   1b6e0:	add	r0, r0, #0
   1b6e4:	movw	r1, #0
   1b6e8:	cmp	r1, r0
   1b6ec:	bcc	1b7f0 <__assert_fail@plt+0xa4c0>
   1b6f0:	b	1b80c <__assert_fail@plt+0xa4dc>
   1b6f4:	ldr	r0, [fp, #-8]
   1b6f8:	ldr	r0, [r0]
   1b6fc:	movw	r1, #0
   1b700:	cmp	r1, r0
   1b704:	bcs	1b80c <__assert_fail@plt+0xa4dc>
   1b708:	ldr	r0, [fp, #-8]
   1b70c:	ldr	r0, [r0]
   1b710:	sub	r0, r0, #1
   1b714:	mvn	r1, #0
   1b718:	cmp	r1, r0
   1b71c:	bcc	1b7f0 <__assert_fail@plt+0xa4c0>
   1b720:	b	1b80c <__assert_fail@plt+0xa4dc>
   1b724:	ldr	r0, [fp, #-12]
   1b728:	movw	r1, #0
   1b72c:	sdiv	r0, r1, r0
   1b730:	ldr	r1, [fp, #-8]
   1b734:	ldr	r1, [r1]
   1b738:	cmp	r0, r1
   1b73c:	bcc	1b7f0 <__assert_fail@plt+0xa4c0>
   1b740:	b	1b80c <__assert_fail@plt+0xa4dc>
   1b744:	ldr	r0, [fp, #-12]
   1b748:	cmp	r0, #0
   1b74c:	bne	1b754 <__assert_fail@plt+0xa424>
   1b750:	b	1b80c <__assert_fail@plt+0xa4dc>
   1b754:	ldr	r0, [fp, #-8]
   1b758:	ldr	r0, [r0]
   1b75c:	cmp	r0, #0
   1b760:	bcs	1b7d4 <__assert_fail@plt+0xa4a4>
   1b764:	b	1b76c <__assert_fail@plt+0xa43c>
   1b768:	b	1b770 <__assert_fail@plt+0xa440>
   1b76c:	b	1b7b4 <__assert_fail@plt+0xa484>
   1b770:	ldr	r0, [fp, #-8]
   1b774:	ldr	r0, [r0]
   1b778:	cmn	r0, #1
   1b77c:	bne	1b7b4 <__assert_fail@plt+0xa484>
   1b780:	b	1b784 <__assert_fail@plt+0xa454>
   1b784:	ldr	r0, [fp, #-12]
   1b788:	add	r0, r0, #0
   1b78c:	movw	r1, #0
   1b790:	cmp	r1, r0
   1b794:	blt	1b7f0 <__assert_fail@plt+0xa4c0>
   1b798:	b	1b80c <__assert_fail@plt+0xa4dc>
   1b79c:	ldr	r0, [fp, #-12]
   1b7a0:	sub	r0, r0, #1
   1b7a4:	mvn	r1, #0
   1b7a8:	cmp	r1, r0
   1b7ac:	blt	1b7f0 <__assert_fail@plt+0xa4c0>
   1b7b0:	b	1b80c <__assert_fail@plt+0xa4dc>
   1b7b4:	ldr	r0, [fp, #-8]
   1b7b8:	ldr	r0, [r0]
   1b7bc:	movw	r1, #0
   1b7c0:	udiv	r0, r1, r0
   1b7c4:	ldr	r1, [fp, #-12]
   1b7c8:	cmp	r0, r1
   1b7cc:	bcc	1b7f0 <__assert_fail@plt+0xa4c0>
   1b7d0:	b	1b80c <__assert_fail@plt+0xa4dc>
   1b7d4:	ldr	r0, [fp, #-12]
   1b7d8:	movw	r1, #255	; 0xff
   1b7dc:	sdiv	r0, r1, r0
   1b7e0:	ldr	r1, [fp, #-8]
   1b7e4:	ldr	r1, [r1]
   1b7e8:	cmp	r0, r1
   1b7ec:	bcs	1b80c <__assert_fail@plt+0xa4dc>
   1b7f0:	ldr	r0, [fp, #-8]
   1b7f4:	ldr	r0, [r0]
   1b7f8:	ldr	r1, [fp, #-12]
   1b7fc:	mul	r0, r0, r1
   1b800:	and	r0, r0, #255	; 0xff
   1b804:	str	r0, [fp, #-16]
   1b808:	b	1c970 <__assert_fail@plt+0xb640>
   1b80c:	ldr	r0, [fp, #-8]
   1b810:	ldr	r0, [r0]
   1b814:	ldr	r1, [fp, #-12]
   1b818:	mul	r0, r0, r1
   1b81c:	and	r0, r0, #255	; 0xff
   1b820:	str	r0, [fp, #-16]
   1b824:	b	1c9a4 <__assert_fail@plt+0xb674>
   1b828:	b	1bc5c <__assert_fail@plt+0xa92c>
   1b82c:	b	1ba44 <__assert_fail@plt+0xa714>
   1b830:	ldr	r0, [fp, #-12]
   1b834:	cmp	r0, #0
   1b838:	bge	1b968 <__assert_fail@plt+0xa638>
   1b83c:	ldr	r0, [fp, #-8]
   1b840:	ldr	r0, [r0]
   1b844:	cmp	r0, #0
   1b848:	bcs	1b8dc <__assert_fail@plt+0xa5ac>
   1b84c:	b	1b850 <__assert_fail@plt+0xa520>
   1b850:	ldr	r0, [fp, #-8]
   1b854:	ldr	r0, [r0]
   1b858:	ldr	r1, [fp, #-12]
   1b85c:	movw	r2, #32767	; 0x7fff
   1b860:	sdiv	r1, r2, r1
   1b864:	cmp	r0, r1
   1b868:	bcc	1ba0c <__assert_fail@plt+0xa6dc>
   1b86c:	b	1ba28 <__assert_fail@plt+0xa6f8>
   1b870:	b	1b874 <__assert_fail@plt+0xa544>
   1b874:	ldr	r0, [pc, #2996]	; 1c430 <__assert_fail@plt+0xb100>
   1b878:	ldr	r1, [fp, #-12]
   1b87c:	cmp	r1, r0
   1b880:	blt	1b898 <__assert_fail@plt+0xa568>
   1b884:	b	1b8a4 <__assert_fail@plt+0xa574>
   1b888:	ldr	r0, [fp, #-12]
   1b88c:	movw	r1, #0
   1b890:	cmp	r1, r0
   1b894:	bge	1b8a4 <__assert_fail@plt+0xa574>
   1b898:	movw	r0, #0
   1b89c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b8a0:	b	1b8bc <__assert_fail@plt+0xa58c>
   1b8a4:	ldr	r0, [fp, #-12]
   1b8a8:	movw	r1, #0
   1b8ac:	sub	r0, r1, r0
   1b8b0:	movw	r1, #32767	; 0x7fff
   1b8b4:	sdiv	r0, r1, r0
   1b8b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1b8bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b8c0:	ldr	r1, [fp, #-8]
   1b8c4:	ldr	r1, [r1]
   1b8c8:	mvn	r2, #0
   1b8cc:	sub	r1, r2, r1
   1b8d0:	cmp	r0, r1
   1b8d4:	bls	1ba0c <__assert_fail@plt+0xa6dc>
   1b8d8:	b	1ba28 <__assert_fail@plt+0xa6f8>
   1b8dc:	b	1b8e0 <__assert_fail@plt+0xa5b0>
   1b8e0:	b	1b948 <__assert_fail@plt+0xa618>
   1b8e4:	b	1b948 <__assert_fail@plt+0xa618>
   1b8e8:	ldr	r0, [fp, #-12]
   1b8ec:	cmn	r0, #1
   1b8f0:	bne	1b948 <__assert_fail@plt+0xa618>
   1b8f4:	b	1b918 <__assert_fail@plt+0xa5e8>
   1b8f8:	ldr	r0, [pc, #4072]	; 1c8e8 <__assert_fail@plt+0xb5b8>
   1b8fc:	ldr	r1, [fp, #-8]
   1b900:	ldr	r1, [r1]
   1b904:	add	r0, r1, r0
   1b908:	movw	r1, #0
   1b90c:	cmp	r1, r0
   1b910:	bcc	1ba0c <__assert_fail@plt+0xa6dc>
   1b914:	b	1ba28 <__assert_fail@plt+0xa6f8>
   1b918:	ldr	r0, [fp, #-8]
   1b91c:	ldr	r0, [r0]
   1b920:	movw	r1, #0
   1b924:	cmp	r1, r0
   1b928:	bcs	1ba28 <__assert_fail@plt+0xa6f8>
   1b92c:	ldr	r0, [fp, #-8]
   1b930:	ldr	r0, [r0]
   1b934:	sub	r0, r0, #1
   1b938:	movw	r1, #32767	; 0x7fff
   1b93c:	cmp	r1, r0
   1b940:	bcc	1ba0c <__assert_fail@plt+0xa6dc>
   1b944:	b	1ba28 <__assert_fail@plt+0xa6f8>
   1b948:	ldr	r0, [pc, #3992]	; 1c8e8 <__assert_fail@plt+0xb5b8>
   1b94c:	ldr	r1, [fp, #-12]
   1b950:	sdiv	r0, r0, r1
   1b954:	ldr	r1, [fp, #-8]
   1b958:	ldr	r1, [r1]
   1b95c:	cmp	r0, r1
   1b960:	bcc	1ba0c <__assert_fail@plt+0xa6dc>
   1b964:	b	1ba28 <__assert_fail@plt+0xa6f8>
   1b968:	ldr	r0, [fp, #-12]
   1b96c:	cmp	r0, #0
   1b970:	bne	1b978 <__assert_fail@plt+0xa648>
   1b974:	b	1ba28 <__assert_fail@plt+0xa6f8>
   1b978:	ldr	r0, [fp, #-8]
   1b97c:	ldr	r0, [r0]
   1b980:	cmp	r0, #0
   1b984:	bcs	1b9f0 <__assert_fail@plt+0xa6c0>
   1b988:	ldr	r0, [fp, #-8]
   1b98c:	ldr	r0, [r0]
   1b990:	cmn	r0, #1
   1b994:	bne	1b9d0 <__assert_fail@plt+0xa6a0>
   1b998:	b	1b99c <__assert_fail@plt+0xa66c>
   1b99c:	ldr	r0, [pc, #3908]	; 1c8e8 <__assert_fail@plt+0xb5b8>
   1b9a0:	ldr	r1, [fp, #-12]
   1b9a4:	add	r0, r1, r0
   1b9a8:	movw	r1, #0
   1b9ac:	cmp	r1, r0
   1b9b0:	blt	1ba0c <__assert_fail@plt+0xa6dc>
   1b9b4:	b	1ba28 <__assert_fail@plt+0xa6f8>
   1b9b8:	ldr	r0, [fp, #-12]
   1b9bc:	sub	r0, r0, #1
   1b9c0:	movw	r1, #32767	; 0x7fff
   1b9c4:	cmp	r1, r0
   1b9c8:	blt	1ba0c <__assert_fail@plt+0xa6dc>
   1b9cc:	b	1ba28 <__assert_fail@plt+0xa6f8>
   1b9d0:	ldr	r0, [pc, #4088]	; 1c9d0 <__assert_fail@plt+0xb6a0>
   1b9d4:	ldr	r1, [fp, #-8]
   1b9d8:	ldr	r1, [r1]
   1b9dc:	udiv	r0, r0, r1
   1b9e0:	ldr	r1, [fp, #-12]
   1b9e4:	cmp	r0, r1
   1b9e8:	bcc	1ba0c <__assert_fail@plt+0xa6dc>
   1b9ec:	b	1ba28 <__assert_fail@plt+0xa6f8>
   1b9f0:	ldr	r0, [fp, #-12]
   1b9f4:	movw	r1, #32767	; 0x7fff
   1b9f8:	sdiv	r0, r1, r0
   1b9fc:	ldr	r1, [fp, #-8]
   1ba00:	ldr	r1, [r1]
   1ba04:	cmp	r0, r1
   1ba08:	bcs	1ba28 <__assert_fail@plt+0xa6f8>
   1ba0c:	ldr	r0, [fp, #-8]
   1ba10:	ldr	r0, [r0]
   1ba14:	ldr	r1, [fp, #-12]
   1ba18:	mul	r0, r0, r1
   1ba1c:	sxth	r0, r0
   1ba20:	str	r0, [fp, #-16]
   1ba24:	b	1c970 <__assert_fail@plt+0xb640>
   1ba28:	ldr	r0, [fp, #-8]
   1ba2c:	ldr	r0, [r0]
   1ba30:	ldr	r1, [fp, #-12]
   1ba34:	mul	r0, r0, r1
   1ba38:	sxth	r0, r0
   1ba3c:	str	r0, [fp, #-16]
   1ba40:	b	1c9a4 <__assert_fail@plt+0xb674>
   1ba44:	ldr	r0, [fp, #-12]
   1ba48:	cmp	r0, #0
   1ba4c:	bge	1bb78 <__assert_fail@plt+0xa848>
   1ba50:	ldr	r0, [fp, #-8]
   1ba54:	ldr	r0, [r0]
   1ba58:	cmp	r0, #0
   1ba5c:	bcs	1baf0 <__assert_fail@plt+0xa7c0>
   1ba60:	b	1ba64 <__assert_fail@plt+0xa734>
   1ba64:	ldr	r0, [fp, #-8]
   1ba68:	ldr	r0, [r0]
   1ba6c:	ldr	r1, [fp, #-12]
   1ba70:	movw	r2, #65535	; 0xffff
   1ba74:	sdiv	r1, r2, r1
   1ba78:	cmp	r0, r1
   1ba7c:	bcc	1bc24 <__assert_fail@plt+0xa8f4>
   1ba80:	b	1bc40 <__assert_fail@plt+0xa910>
   1ba84:	b	1ba88 <__assert_fail@plt+0xa758>
   1ba88:	ldr	r0, [pc, #3892]	; 1c9c4 <__assert_fail@plt+0xb694>
   1ba8c:	ldr	r1, [fp, #-12]
   1ba90:	cmp	r1, r0
   1ba94:	blt	1baac <__assert_fail@plt+0xa77c>
   1ba98:	b	1bab8 <__assert_fail@plt+0xa788>
   1ba9c:	ldr	r0, [fp, #-12]
   1baa0:	movw	r1, #0
   1baa4:	cmp	r1, r0
   1baa8:	bge	1bab8 <__assert_fail@plt+0xa788>
   1baac:	movw	r0, #0
   1bab0:	str	r0, [fp, #-32]	; 0xffffffe0
   1bab4:	b	1bad0 <__assert_fail@plt+0xa7a0>
   1bab8:	ldr	r0, [fp, #-12]
   1babc:	movw	r1, #0
   1bac0:	sub	r0, r1, r0
   1bac4:	movw	r1, #65535	; 0xffff
   1bac8:	sdiv	r0, r1, r0
   1bacc:	str	r0, [fp, #-32]	; 0xffffffe0
   1bad0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bad4:	ldr	r1, [fp, #-8]
   1bad8:	ldr	r1, [r1]
   1badc:	mvn	r2, #0
   1bae0:	sub	r1, r2, r1
   1bae4:	cmp	r0, r1
   1bae8:	bls	1bc24 <__assert_fail@plt+0xa8f4>
   1baec:	b	1bc40 <__assert_fail@plt+0xa910>
   1baf0:	b	1baf4 <__assert_fail@plt+0xa7c4>
   1baf4:	b	1bb58 <__assert_fail@plt+0xa828>
   1baf8:	b	1bb58 <__assert_fail@plt+0xa828>
   1bafc:	ldr	r0, [fp, #-12]
   1bb00:	cmn	r0, #1
   1bb04:	bne	1bb58 <__assert_fail@plt+0xa828>
   1bb08:	b	1bb28 <__assert_fail@plt+0xa7f8>
   1bb0c:	ldr	r0, [fp, #-8]
   1bb10:	ldr	r0, [r0]
   1bb14:	add	r0, r0, #0
   1bb18:	movw	r1, #0
   1bb1c:	cmp	r1, r0
   1bb20:	bcc	1bc24 <__assert_fail@plt+0xa8f4>
   1bb24:	b	1bc40 <__assert_fail@plt+0xa910>
   1bb28:	ldr	r0, [fp, #-8]
   1bb2c:	ldr	r0, [r0]
   1bb30:	movw	r1, #0
   1bb34:	cmp	r1, r0
   1bb38:	bcs	1bc40 <__assert_fail@plt+0xa910>
   1bb3c:	ldr	r0, [fp, #-8]
   1bb40:	ldr	r0, [r0]
   1bb44:	sub	r0, r0, #1
   1bb48:	mvn	r1, #0
   1bb4c:	cmp	r1, r0
   1bb50:	bcc	1bc24 <__assert_fail@plt+0xa8f4>
   1bb54:	b	1bc40 <__assert_fail@plt+0xa910>
   1bb58:	ldr	r0, [fp, #-12]
   1bb5c:	movw	r1, #0
   1bb60:	sdiv	r0, r1, r0
   1bb64:	ldr	r1, [fp, #-8]
   1bb68:	ldr	r1, [r1]
   1bb6c:	cmp	r0, r1
   1bb70:	bcc	1bc24 <__assert_fail@plt+0xa8f4>
   1bb74:	b	1bc40 <__assert_fail@plt+0xa910>
   1bb78:	ldr	r0, [fp, #-12]
   1bb7c:	cmp	r0, #0
   1bb80:	bne	1bb88 <__assert_fail@plt+0xa858>
   1bb84:	b	1bc40 <__assert_fail@plt+0xa910>
   1bb88:	ldr	r0, [fp, #-8]
   1bb8c:	ldr	r0, [r0]
   1bb90:	cmp	r0, #0
   1bb94:	bcs	1bc08 <__assert_fail@plt+0xa8d8>
   1bb98:	b	1bba0 <__assert_fail@plt+0xa870>
   1bb9c:	b	1bba4 <__assert_fail@plt+0xa874>
   1bba0:	b	1bbe8 <__assert_fail@plt+0xa8b8>
   1bba4:	ldr	r0, [fp, #-8]
   1bba8:	ldr	r0, [r0]
   1bbac:	cmn	r0, #1
   1bbb0:	bne	1bbe8 <__assert_fail@plt+0xa8b8>
   1bbb4:	b	1bbb8 <__assert_fail@plt+0xa888>
   1bbb8:	ldr	r0, [fp, #-12]
   1bbbc:	add	r0, r0, #0
   1bbc0:	movw	r1, #0
   1bbc4:	cmp	r1, r0
   1bbc8:	blt	1bc24 <__assert_fail@plt+0xa8f4>
   1bbcc:	b	1bc40 <__assert_fail@plt+0xa910>
   1bbd0:	ldr	r0, [fp, #-12]
   1bbd4:	sub	r0, r0, #1
   1bbd8:	mvn	r1, #0
   1bbdc:	cmp	r1, r0
   1bbe0:	blt	1bc24 <__assert_fail@plt+0xa8f4>
   1bbe4:	b	1bc40 <__assert_fail@plt+0xa910>
   1bbe8:	ldr	r0, [fp, #-8]
   1bbec:	ldr	r0, [r0]
   1bbf0:	movw	r1, #0
   1bbf4:	udiv	r0, r1, r0
   1bbf8:	ldr	r1, [fp, #-12]
   1bbfc:	cmp	r0, r1
   1bc00:	bcc	1bc24 <__assert_fail@plt+0xa8f4>
   1bc04:	b	1bc40 <__assert_fail@plt+0xa910>
   1bc08:	ldr	r0, [fp, #-12]
   1bc0c:	movw	r1, #65535	; 0xffff
   1bc10:	sdiv	r0, r1, r0
   1bc14:	ldr	r1, [fp, #-8]
   1bc18:	ldr	r1, [r1]
   1bc1c:	cmp	r0, r1
   1bc20:	bcs	1bc40 <__assert_fail@plt+0xa910>
   1bc24:	ldr	r0, [fp, #-8]
   1bc28:	ldr	r0, [r0]
   1bc2c:	ldr	r1, [fp, #-12]
   1bc30:	mul	r0, r0, r1
   1bc34:	uxth	r0, r0
   1bc38:	str	r0, [fp, #-16]
   1bc3c:	b	1c970 <__assert_fail@plt+0xb640>
   1bc40:	ldr	r0, [fp, #-8]
   1bc44:	ldr	r0, [r0]
   1bc48:	ldr	r1, [fp, #-12]
   1bc4c:	mul	r0, r0, r1
   1bc50:	uxth	r0, r0
   1bc54:	str	r0, [fp, #-16]
   1bc58:	b	1c9a4 <__assert_fail@plt+0xb674>
   1bc5c:	b	1bc60 <__assert_fail@plt+0xa930>
   1bc60:	b	1be5c <__assert_fail@plt+0xab2c>
   1bc64:	ldr	r0, [fp, #-12]
   1bc68:	cmp	r0, #0
   1bc6c:	bge	1bd8c <__assert_fail@plt+0xaa5c>
   1bc70:	ldr	r0, [fp, #-8]
   1bc74:	ldr	r0, [r0]
   1bc78:	cmp	r0, #0
   1bc7c:	bcs	1bd10 <__assert_fail@plt+0xa9e0>
   1bc80:	b	1bc84 <__assert_fail@plt+0xa954>
   1bc84:	ldr	r0, [pc, #3388]	; 1c9c8 <__assert_fail@plt+0xb698>
   1bc88:	ldr	r1, [fp, #-8]
   1bc8c:	ldr	r1, [r1]
   1bc90:	ldr	r2, [fp, #-12]
   1bc94:	sdiv	r0, r0, r2
   1bc98:	cmp	r1, r0
   1bc9c:	bcc	1be2c <__assert_fail@plt+0xaafc>
   1bca0:	b	1be44 <__assert_fail@plt+0xab14>
   1bca4:	b	1bca8 <__assert_fail@plt+0xa978>
   1bca8:	ldr	r0, [pc, #3348]	; 1c9c4 <__assert_fail@plt+0xb694>
   1bcac:	ldr	r1, [fp, #-12]
   1bcb0:	cmp	r1, r0
   1bcb4:	blt	1bccc <__assert_fail@plt+0xa99c>
   1bcb8:	b	1bcd8 <__assert_fail@plt+0xa9a8>
   1bcbc:	ldr	r0, [fp, #-12]
   1bcc0:	movw	r1, #0
   1bcc4:	cmp	r1, r0
   1bcc8:	bge	1bcd8 <__assert_fail@plt+0xa9a8>
   1bccc:	movw	r0, #0
   1bcd0:	str	r0, [fp, #-36]	; 0xffffffdc
   1bcd4:	b	1bcf0 <__assert_fail@plt+0xa9c0>
   1bcd8:	ldr	r0, [pc, #3304]	; 1c9c8 <__assert_fail@plt+0xb698>
   1bcdc:	ldr	r1, [fp, #-12]
   1bce0:	movw	r2, #0
   1bce4:	sub	r1, r2, r1
   1bce8:	sdiv	r0, r0, r1
   1bcec:	str	r0, [fp, #-36]	; 0xffffffdc
   1bcf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bcf4:	ldr	r1, [fp, #-8]
   1bcf8:	ldr	r1, [r1]
   1bcfc:	mvn	r2, #0
   1bd00:	sub	r1, r2, r1
   1bd04:	cmp	r0, r1
   1bd08:	bls	1be2c <__assert_fail@plt+0xaafc>
   1bd0c:	b	1be44 <__assert_fail@plt+0xab14>
   1bd10:	ldr	r0, [fp, #-12]
   1bd14:	cmn	r0, #1
   1bd18:	bne	1bd6c <__assert_fail@plt+0xaa3c>
   1bd1c:	b	1bd3c <__assert_fail@plt+0xaa0c>
   1bd20:	ldr	r0, [fp, #-8]
   1bd24:	ldr	r0, [r0]
   1bd28:	add	r0, r0, #-2147483648	; 0x80000000
   1bd2c:	movw	r1, #0
   1bd30:	cmp	r1, r0
   1bd34:	bcc	1be2c <__assert_fail@plt+0xaafc>
   1bd38:	b	1be44 <__assert_fail@plt+0xab14>
   1bd3c:	ldr	r0, [fp, #-8]
   1bd40:	ldr	r0, [r0]
   1bd44:	movw	r1, #0
   1bd48:	cmp	r1, r0
   1bd4c:	bcs	1be44 <__assert_fail@plt+0xab14>
   1bd50:	ldr	r0, [pc, #3184]	; 1c9c8 <__assert_fail@plt+0xb698>
   1bd54:	ldr	r1, [fp, #-8]
   1bd58:	ldr	r1, [r1]
   1bd5c:	sub	r1, r1, #1
   1bd60:	cmp	r0, r1
   1bd64:	bcc	1be2c <__assert_fail@plt+0xaafc>
   1bd68:	b	1be44 <__assert_fail@plt+0xab14>
   1bd6c:	ldr	r0, [pc, #3160]	; 1c9cc <__assert_fail@plt+0xb69c>
   1bd70:	ldr	r1, [fp, #-12]
   1bd74:	sdiv	r0, r0, r1
   1bd78:	ldr	r1, [fp, #-8]
   1bd7c:	ldr	r1, [r1]
   1bd80:	cmp	r0, r1
   1bd84:	bcc	1be2c <__assert_fail@plt+0xaafc>
   1bd88:	b	1be44 <__assert_fail@plt+0xab14>
   1bd8c:	ldr	r0, [fp, #-12]
   1bd90:	cmp	r0, #0
   1bd94:	bne	1bd9c <__assert_fail@plt+0xaa6c>
   1bd98:	b	1be44 <__assert_fail@plt+0xab14>
   1bd9c:	ldr	r0, [fp, #-8]
   1bda0:	ldr	r0, [r0]
   1bda4:	cmp	r0, #0
   1bda8:	bcs	1be10 <__assert_fail@plt+0xaae0>
   1bdac:	ldr	r0, [fp, #-8]
   1bdb0:	ldr	r0, [r0]
   1bdb4:	cmn	r0, #1
   1bdb8:	bne	1bdf0 <__assert_fail@plt+0xaac0>
   1bdbc:	b	1bdc0 <__assert_fail@plt+0xaa90>
   1bdc0:	ldr	r0, [fp, #-12]
   1bdc4:	add	r0, r0, #-2147483648	; 0x80000000
   1bdc8:	movw	r1, #0
   1bdcc:	cmp	r1, r0
   1bdd0:	blt	1be2c <__assert_fail@plt+0xaafc>
   1bdd4:	b	1be44 <__assert_fail@plt+0xab14>
   1bdd8:	ldr	r0, [pc, #3048]	; 1c9c8 <__assert_fail@plt+0xb698>
   1bddc:	ldr	r1, [fp, #-12]
   1bde0:	sub	r1, r1, #1
   1bde4:	cmp	r0, r1
   1bde8:	blt	1be2c <__assert_fail@plt+0xaafc>
   1bdec:	b	1be44 <__assert_fail@plt+0xab14>
   1bdf0:	ldr	r0, [pc, #3028]	; 1c9cc <__assert_fail@plt+0xb69c>
   1bdf4:	ldr	r1, [fp, #-8]
   1bdf8:	ldr	r1, [r1]
   1bdfc:	udiv	r0, r0, r1
   1be00:	ldr	r1, [fp, #-12]
   1be04:	cmp	r0, r1
   1be08:	bcc	1be2c <__assert_fail@plt+0xaafc>
   1be0c:	b	1be44 <__assert_fail@plt+0xab14>
   1be10:	ldr	r0, [pc, #2992]	; 1c9c8 <__assert_fail@plt+0xb698>
   1be14:	ldr	r1, [fp, #-12]
   1be18:	sdiv	r0, r0, r1
   1be1c:	ldr	r1, [fp, #-8]
   1be20:	ldr	r1, [r1]
   1be24:	cmp	r0, r1
   1be28:	bcs	1be44 <__assert_fail@plt+0xab14>
   1be2c:	ldr	r0, [fp, #-8]
   1be30:	ldr	r0, [r0]
   1be34:	ldr	r1, [fp, #-12]
   1be38:	mul	r0, r0, r1
   1be3c:	str	r0, [fp, #-16]
   1be40:	b	1c970 <__assert_fail@plt+0xb640>
   1be44:	ldr	r0, [fp, #-8]
   1be48:	ldr	r0, [r0]
   1be4c:	ldr	r1, [fp, #-12]
   1be50:	mul	r0, r0, r1
   1be54:	str	r0, [fp, #-16]
   1be58:	b	1c9a4 <__assert_fail@plt+0xb674>
   1be5c:	ldr	r0, [fp, #-12]
   1be60:	cmp	r0, #0
   1be64:	bge	1bf90 <__assert_fail@plt+0xac60>
   1be68:	ldr	r0, [fp, #-8]
   1be6c:	ldr	r0, [r0]
   1be70:	cmp	r0, #0
   1be74:	bcs	1bf08 <__assert_fail@plt+0xabd8>
   1be78:	b	1be9c <__assert_fail@plt+0xab6c>
   1be7c:	ldr	r0, [fp, #-8]
   1be80:	ldr	r0, [r0]
   1be84:	ldr	r1, [fp, #-12]
   1be88:	mvn	r2, #0
   1be8c:	udiv	r1, r2, r1
   1be90:	cmp	r0, r1
   1be94:	bcc	1c03c <__assert_fail@plt+0xad0c>
   1be98:	b	1c054 <__assert_fail@plt+0xad24>
   1be9c:	b	1bea0 <__assert_fail@plt+0xab70>
   1bea0:	ldr	r0, [pc, #2844]	; 1c9c4 <__assert_fail@plt+0xb694>
   1bea4:	ldr	r1, [fp, #-12]
   1bea8:	cmp	r1, r0
   1beac:	blt	1bec4 <__assert_fail@plt+0xab94>
   1beb0:	b	1bed0 <__assert_fail@plt+0xaba0>
   1beb4:	ldr	r0, [fp, #-12]
   1beb8:	movw	r1, #0
   1bebc:	cmp	r1, r0
   1bec0:	bge	1bed0 <__assert_fail@plt+0xaba0>
   1bec4:	movw	r0, #1
   1bec8:	str	r0, [fp, #-40]	; 0xffffffd8
   1becc:	b	1bee8 <__assert_fail@plt+0xabb8>
   1bed0:	ldr	r0, [fp, #-12]
   1bed4:	movw	r1, #0
   1bed8:	sub	r0, r1, r0
   1bedc:	mvn	r1, #0
   1bee0:	udiv	r0, r1, r0
   1bee4:	str	r0, [fp, #-40]	; 0xffffffd8
   1bee8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1beec:	ldr	r1, [fp, #-8]
   1bef0:	ldr	r1, [r1]
   1bef4:	mvn	r2, #0
   1bef8:	sub	r1, r2, r1
   1befc:	cmp	r0, r1
   1bf00:	bls	1c03c <__assert_fail@plt+0xad0c>
   1bf04:	b	1c054 <__assert_fail@plt+0xad24>
   1bf08:	b	1bf0c <__assert_fail@plt+0xabdc>
   1bf0c:	b	1bf70 <__assert_fail@plt+0xac40>
   1bf10:	b	1bf70 <__assert_fail@plt+0xac40>
   1bf14:	ldr	r0, [fp, #-12]
   1bf18:	cmn	r0, #1
   1bf1c:	bne	1bf70 <__assert_fail@plt+0xac40>
   1bf20:	b	1bf40 <__assert_fail@plt+0xac10>
   1bf24:	ldr	r0, [fp, #-8]
   1bf28:	ldr	r0, [r0]
   1bf2c:	add	r0, r0, #0
   1bf30:	movw	r1, #0
   1bf34:	cmp	r1, r0
   1bf38:	bcc	1c03c <__assert_fail@plt+0xad0c>
   1bf3c:	b	1c054 <__assert_fail@plt+0xad24>
   1bf40:	ldr	r0, [fp, #-8]
   1bf44:	ldr	r0, [r0]
   1bf48:	movw	r1, #0
   1bf4c:	cmp	r1, r0
   1bf50:	bcs	1c054 <__assert_fail@plt+0xad24>
   1bf54:	ldr	r0, [fp, #-8]
   1bf58:	ldr	r0, [r0]
   1bf5c:	sub	r0, r0, #1
   1bf60:	mvn	r1, #0
   1bf64:	cmp	r1, r0
   1bf68:	bcc	1c03c <__assert_fail@plt+0xad0c>
   1bf6c:	b	1c054 <__assert_fail@plt+0xad24>
   1bf70:	ldr	r0, [fp, #-12]
   1bf74:	movw	r1, #0
   1bf78:	sdiv	r0, r1, r0
   1bf7c:	ldr	r1, [fp, #-8]
   1bf80:	ldr	r1, [r1]
   1bf84:	cmp	r0, r1
   1bf88:	bcc	1c03c <__assert_fail@plt+0xad0c>
   1bf8c:	b	1c054 <__assert_fail@plt+0xad24>
   1bf90:	ldr	r0, [fp, #-12]
   1bf94:	cmp	r0, #0
   1bf98:	bne	1bfa0 <__assert_fail@plt+0xac70>
   1bf9c:	b	1c054 <__assert_fail@plt+0xad24>
   1bfa0:	ldr	r0, [fp, #-8]
   1bfa4:	ldr	r0, [r0]
   1bfa8:	cmp	r0, #0
   1bfac:	bcs	1c020 <__assert_fail@plt+0xacf0>
   1bfb0:	b	1bfb8 <__assert_fail@plt+0xac88>
   1bfb4:	b	1bfbc <__assert_fail@plt+0xac8c>
   1bfb8:	b	1c000 <__assert_fail@plt+0xacd0>
   1bfbc:	ldr	r0, [fp, #-8]
   1bfc0:	ldr	r0, [r0]
   1bfc4:	cmn	r0, #1
   1bfc8:	bne	1c000 <__assert_fail@plt+0xacd0>
   1bfcc:	b	1bfd0 <__assert_fail@plt+0xaca0>
   1bfd0:	ldr	r0, [fp, #-12]
   1bfd4:	add	r0, r0, #0
   1bfd8:	movw	r1, #0
   1bfdc:	cmp	r1, r0
   1bfe0:	blt	1c03c <__assert_fail@plt+0xad0c>
   1bfe4:	b	1c054 <__assert_fail@plt+0xad24>
   1bfe8:	ldr	r0, [fp, #-12]
   1bfec:	sub	r0, r0, #1
   1bff0:	mvn	r1, #0
   1bff4:	cmp	r1, r0
   1bff8:	blt	1c03c <__assert_fail@plt+0xad0c>
   1bffc:	b	1c054 <__assert_fail@plt+0xad24>
   1c000:	ldr	r0, [fp, #-8]
   1c004:	ldr	r0, [r0]
   1c008:	movw	r1, #0
   1c00c:	udiv	r0, r1, r0
   1c010:	ldr	r1, [fp, #-12]
   1c014:	cmp	r0, r1
   1c018:	bcc	1c03c <__assert_fail@plt+0xad0c>
   1c01c:	b	1c054 <__assert_fail@plt+0xad24>
   1c020:	ldr	r0, [fp, #-12]
   1c024:	mvn	r1, #0
   1c028:	udiv	r0, r1, r0
   1c02c:	ldr	r1, [fp, #-8]
   1c030:	ldr	r1, [r1]
   1c034:	cmp	r0, r1
   1c038:	bcs	1c054 <__assert_fail@plt+0xad24>
   1c03c:	ldr	r0, [fp, #-8]
   1c040:	ldr	r0, [r0]
   1c044:	ldr	r1, [fp, #-12]
   1c048:	mul	r0, r0, r1
   1c04c:	str	r0, [fp, #-16]
   1c050:	b	1c970 <__assert_fail@plt+0xb640>
   1c054:	ldr	r0, [fp, #-8]
   1c058:	ldr	r0, [r0]
   1c05c:	ldr	r1, [fp, #-12]
   1c060:	mul	r0, r0, r1
   1c064:	str	r0, [fp, #-16]
   1c068:	b	1c9a4 <__assert_fail@plt+0xb674>
   1c06c:	b	1c070 <__assert_fail@plt+0xad40>
   1c070:	b	1c26c <__assert_fail@plt+0xaf3c>
   1c074:	ldr	r0, [fp, #-12]
   1c078:	cmp	r0, #0
   1c07c:	bge	1c19c <__assert_fail@plt+0xae6c>
   1c080:	ldr	r0, [fp, #-8]
   1c084:	ldr	r0, [r0]
   1c088:	cmp	r0, #0
   1c08c:	bcs	1c120 <__assert_fail@plt+0xadf0>
   1c090:	b	1c094 <__assert_fail@plt+0xad64>
   1c094:	ldr	r0, [pc, #2348]	; 1c9c8 <__assert_fail@plt+0xb698>
   1c098:	ldr	r1, [fp, #-8]
   1c09c:	ldr	r1, [r1]
   1c0a0:	ldr	r2, [fp, #-12]
   1c0a4:	sdiv	r0, r0, r2
   1c0a8:	cmp	r1, r0
   1c0ac:	bcc	1c23c <__assert_fail@plt+0xaf0c>
   1c0b0:	b	1c254 <__assert_fail@plt+0xaf24>
   1c0b4:	b	1c0b8 <__assert_fail@plt+0xad88>
   1c0b8:	ldr	r0, [pc, #2308]	; 1c9c4 <__assert_fail@plt+0xb694>
   1c0bc:	ldr	r1, [fp, #-12]
   1c0c0:	cmp	r1, r0
   1c0c4:	blt	1c0dc <__assert_fail@plt+0xadac>
   1c0c8:	b	1c0e8 <__assert_fail@plt+0xadb8>
   1c0cc:	ldr	r0, [fp, #-12]
   1c0d0:	movw	r1, #0
   1c0d4:	cmp	r1, r0
   1c0d8:	bge	1c0e8 <__assert_fail@plt+0xadb8>
   1c0dc:	movw	r0, #0
   1c0e0:	str	r0, [fp, #-44]	; 0xffffffd4
   1c0e4:	b	1c100 <__assert_fail@plt+0xadd0>
   1c0e8:	ldr	r0, [pc, #2264]	; 1c9c8 <__assert_fail@plt+0xb698>
   1c0ec:	ldr	r1, [fp, #-12]
   1c0f0:	movw	r2, #0
   1c0f4:	sub	r1, r2, r1
   1c0f8:	sdiv	r0, r0, r1
   1c0fc:	str	r0, [fp, #-44]	; 0xffffffd4
   1c100:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c104:	ldr	r1, [fp, #-8]
   1c108:	ldr	r1, [r1]
   1c10c:	mvn	r2, #0
   1c110:	sub	r1, r2, r1
   1c114:	cmp	r0, r1
   1c118:	bls	1c23c <__assert_fail@plt+0xaf0c>
   1c11c:	b	1c254 <__assert_fail@plt+0xaf24>
   1c120:	ldr	r0, [fp, #-12]
   1c124:	cmn	r0, #1
   1c128:	bne	1c17c <__assert_fail@plt+0xae4c>
   1c12c:	b	1c14c <__assert_fail@plt+0xae1c>
   1c130:	ldr	r0, [fp, #-8]
   1c134:	ldr	r0, [r0]
   1c138:	add	r0, r0, #-2147483648	; 0x80000000
   1c13c:	movw	r1, #0
   1c140:	cmp	r1, r0
   1c144:	bcc	1c23c <__assert_fail@plt+0xaf0c>
   1c148:	b	1c254 <__assert_fail@plt+0xaf24>
   1c14c:	ldr	r0, [fp, #-8]
   1c150:	ldr	r0, [r0]
   1c154:	movw	r1, #0
   1c158:	cmp	r1, r0
   1c15c:	bcs	1c254 <__assert_fail@plt+0xaf24>
   1c160:	ldr	r0, [pc, #2144]	; 1c9c8 <__assert_fail@plt+0xb698>
   1c164:	ldr	r1, [fp, #-8]
   1c168:	ldr	r1, [r1]
   1c16c:	sub	r1, r1, #1
   1c170:	cmp	r0, r1
   1c174:	bcc	1c23c <__assert_fail@plt+0xaf0c>
   1c178:	b	1c254 <__assert_fail@plt+0xaf24>
   1c17c:	ldr	r0, [pc, #2120]	; 1c9cc <__assert_fail@plt+0xb69c>
   1c180:	ldr	r1, [fp, #-12]
   1c184:	sdiv	r0, r0, r1
   1c188:	ldr	r1, [fp, #-8]
   1c18c:	ldr	r1, [r1]
   1c190:	cmp	r0, r1
   1c194:	bcc	1c23c <__assert_fail@plt+0xaf0c>
   1c198:	b	1c254 <__assert_fail@plt+0xaf24>
   1c19c:	ldr	r0, [fp, #-12]
   1c1a0:	cmp	r0, #0
   1c1a4:	bne	1c1ac <__assert_fail@plt+0xae7c>
   1c1a8:	b	1c254 <__assert_fail@plt+0xaf24>
   1c1ac:	ldr	r0, [fp, #-8]
   1c1b0:	ldr	r0, [r0]
   1c1b4:	cmp	r0, #0
   1c1b8:	bcs	1c220 <__assert_fail@plt+0xaef0>
   1c1bc:	ldr	r0, [fp, #-8]
   1c1c0:	ldr	r0, [r0]
   1c1c4:	cmn	r0, #1
   1c1c8:	bne	1c200 <__assert_fail@plt+0xaed0>
   1c1cc:	b	1c1d0 <__assert_fail@plt+0xaea0>
   1c1d0:	ldr	r0, [fp, #-12]
   1c1d4:	add	r0, r0, #-2147483648	; 0x80000000
   1c1d8:	movw	r1, #0
   1c1dc:	cmp	r1, r0
   1c1e0:	blt	1c23c <__assert_fail@plt+0xaf0c>
   1c1e4:	b	1c254 <__assert_fail@plt+0xaf24>
   1c1e8:	ldr	r0, [pc, #2008]	; 1c9c8 <__assert_fail@plt+0xb698>
   1c1ec:	ldr	r1, [fp, #-12]
   1c1f0:	sub	r1, r1, #1
   1c1f4:	cmp	r0, r1
   1c1f8:	blt	1c23c <__assert_fail@plt+0xaf0c>
   1c1fc:	b	1c254 <__assert_fail@plt+0xaf24>
   1c200:	ldr	r0, [pc, #1988]	; 1c9cc <__assert_fail@plt+0xb69c>
   1c204:	ldr	r1, [fp, #-8]
   1c208:	ldr	r1, [r1]
   1c20c:	udiv	r0, r0, r1
   1c210:	ldr	r1, [fp, #-12]
   1c214:	cmp	r0, r1
   1c218:	bcc	1c23c <__assert_fail@plt+0xaf0c>
   1c21c:	b	1c254 <__assert_fail@plt+0xaf24>
   1c220:	ldr	r0, [pc, #1952]	; 1c9c8 <__assert_fail@plt+0xb698>
   1c224:	ldr	r1, [fp, #-12]
   1c228:	sdiv	r0, r0, r1
   1c22c:	ldr	r1, [fp, #-8]
   1c230:	ldr	r1, [r1]
   1c234:	cmp	r0, r1
   1c238:	bcs	1c254 <__assert_fail@plt+0xaf24>
   1c23c:	ldr	r0, [fp, #-8]
   1c240:	ldr	r0, [r0]
   1c244:	ldr	r1, [fp, #-12]
   1c248:	mul	r0, r0, r1
   1c24c:	str	r0, [fp, #-16]
   1c250:	b	1c970 <__assert_fail@plt+0xb640>
   1c254:	ldr	r0, [fp, #-8]
   1c258:	ldr	r0, [r0]
   1c25c:	ldr	r1, [fp, #-12]
   1c260:	mul	r0, r0, r1
   1c264:	str	r0, [fp, #-16]
   1c268:	b	1c9a4 <__assert_fail@plt+0xb674>
   1c26c:	ldr	r0, [fp, #-12]
   1c270:	cmp	r0, #0
   1c274:	bge	1c3a0 <__assert_fail@plt+0xb070>
   1c278:	ldr	r0, [fp, #-8]
   1c27c:	ldr	r0, [r0]
   1c280:	cmp	r0, #0
   1c284:	bcs	1c318 <__assert_fail@plt+0xafe8>
   1c288:	b	1c2ac <__assert_fail@plt+0xaf7c>
   1c28c:	ldr	r0, [fp, #-8]
   1c290:	ldr	r0, [r0]
   1c294:	ldr	r1, [fp, #-12]
   1c298:	mvn	r2, #0
   1c29c:	udiv	r1, r2, r1
   1c2a0:	cmp	r0, r1
   1c2a4:	bcc	1c450 <__assert_fail@plt+0xb120>
   1c2a8:	b	1c468 <__assert_fail@plt+0xb138>
   1c2ac:	b	1c2b0 <__assert_fail@plt+0xaf80>
   1c2b0:	ldr	r0, [pc, #1804]	; 1c9c4 <__assert_fail@plt+0xb694>
   1c2b4:	ldr	r1, [fp, #-12]
   1c2b8:	cmp	r1, r0
   1c2bc:	blt	1c2d4 <__assert_fail@plt+0xafa4>
   1c2c0:	b	1c2e0 <__assert_fail@plt+0xafb0>
   1c2c4:	ldr	r0, [fp, #-12]
   1c2c8:	movw	r1, #0
   1c2cc:	cmp	r1, r0
   1c2d0:	bge	1c2e0 <__assert_fail@plt+0xafb0>
   1c2d4:	movw	r0, #1
   1c2d8:	str	r0, [fp, #-48]	; 0xffffffd0
   1c2dc:	b	1c2f8 <__assert_fail@plt+0xafc8>
   1c2e0:	ldr	r0, [fp, #-12]
   1c2e4:	movw	r1, #0
   1c2e8:	sub	r0, r1, r0
   1c2ec:	mvn	r1, #0
   1c2f0:	udiv	r0, r1, r0
   1c2f4:	str	r0, [fp, #-48]	; 0xffffffd0
   1c2f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c2fc:	ldr	r1, [fp, #-8]
   1c300:	ldr	r1, [r1]
   1c304:	mvn	r2, #0
   1c308:	sub	r1, r2, r1
   1c30c:	cmp	r0, r1
   1c310:	bls	1c450 <__assert_fail@plt+0xb120>
   1c314:	b	1c468 <__assert_fail@plt+0xb138>
   1c318:	b	1c31c <__assert_fail@plt+0xafec>
   1c31c:	b	1c380 <__assert_fail@plt+0xb050>
   1c320:	b	1c380 <__assert_fail@plt+0xb050>
   1c324:	ldr	r0, [fp, #-12]
   1c328:	cmn	r0, #1
   1c32c:	bne	1c380 <__assert_fail@plt+0xb050>
   1c330:	b	1c350 <__assert_fail@plt+0xb020>
   1c334:	ldr	r0, [fp, #-8]
   1c338:	ldr	r0, [r0]
   1c33c:	add	r0, r0, #0
   1c340:	movw	r1, #0
   1c344:	cmp	r1, r0
   1c348:	bcc	1c450 <__assert_fail@plt+0xb120>
   1c34c:	b	1c468 <__assert_fail@plt+0xb138>
   1c350:	ldr	r0, [fp, #-8]
   1c354:	ldr	r0, [r0]
   1c358:	movw	r1, #0
   1c35c:	cmp	r1, r0
   1c360:	bcs	1c468 <__assert_fail@plt+0xb138>
   1c364:	ldr	r0, [fp, #-8]
   1c368:	ldr	r0, [r0]
   1c36c:	sub	r0, r0, #1
   1c370:	mvn	r1, #0
   1c374:	cmp	r1, r0
   1c378:	bcc	1c450 <__assert_fail@plt+0xb120>
   1c37c:	b	1c468 <__assert_fail@plt+0xb138>
   1c380:	ldr	r0, [fp, #-12]
   1c384:	movw	r1, #0
   1c388:	sdiv	r0, r1, r0
   1c38c:	ldr	r1, [fp, #-8]
   1c390:	ldr	r1, [r1]
   1c394:	cmp	r0, r1
   1c398:	bcc	1c450 <__assert_fail@plt+0xb120>
   1c39c:	b	1c468 <__assert_fail@plt+0xb138>
   1c3a0:	ldr	r0, [fp, #-12]
   1c3a4:	cmp	r0, #0
   1c3a8:	bne	1c3b0 <__assert_fail@plt+0xb080>
   1c3ac:	b	1c468 <__assert_fail@plt+0xb138>
   1c3b0:	ldr	r0, [fp, #-8]
   1c3b4:	ldr	r0, [r0]
   1c3b8:	cmp	r0, #0
   1c3bc:	bcs	1c434 <__assert_fail@plt+0xb104>
   1c3c0:	b	1c3c8 <__assert_fail@plt+0xb098>
   1c3c4:	b	1c3cc <__assert_fail@plt+0xb09c>
   1c3c8:	b	1c410 <__assert_fail@plt+0xb0e0>
   1c3cc:	ldr	r0, [fp, #-8]
   1c3d0:	ldr	r0, [r0]
   1c3d4:	cmn	r0, #1
   1c3d8:	bne	1c410 <__assert_fail@plt+0xb0e0>
   1c3dc:	b	1c3e0 <__assert_fail@plt+0xb0b0>
   1c3e0:	ldr	r0, [fp, #-12]
   1c3e4:	add	r0, r0, #0
   1c3e8:	movw	r1, #0
   1c3ec:	cmp	r1, r0
   1c3f0:	blt	1c450 <__assert_fail@plt+0xb120>
   1c3f4:	b	1c468 <__assert_fail@plt+0xb138>
   1c3f8:	ldr	r0, [fp, #-12]
   1c3fc:	sub	r0, r0, #1
   1c400:	mvn	r1, #0
   1c404:	cmp	r1, r0
   1c408:	blt	1c450 <__assert_fail@plt+0xb120>
   1c40c:	b	1c468 <__assert_fail@plt+0xb138>
   1c410:	ldr	r0, [fp, #-8]
   1c414:	ldr	r0, [r0]
   1c418:	movw	r1, #0
   1c41c:	udiv	r0, r1, r0
   1c420:	ldr	r1, [fp, #-12]
   1c424:	cmp	r0, r1
   1c428:	bcc	1c450 <__assert_fail@plt+0xb120>
   1c42c:	b	1c468 <__assert_fail@plt+0xb138>
   1c430:	andhi	r0, r0, r1
   1c434:	ldr	r0, [fp, #-12]
   1c438:	mvn	r1, #0
   1c43c:	udiv	r0, r1, r0
   1c440:	ldr	r1, [fp, #-8]
   1c444:	ldr	r1, [r1]
   1c448:	cmp	r0, r1
   1c44c:	bcs	1c468 <__assert_fail@plt+0xb138>
   1c450:	ldr	r0, [fp, #-8]
   1c454:	ldr	r0, [r0]
   1c458:	ldr	r1, [fp, #-12]
   1c45c:	mul	r0, r0, r1
   1c460:	str	r0, [fp, #-16]
   1c464:	b	1c970 <__assert_fail@plt+0xb640>
   1c468:	ldr	r0, [fp, #-8]
   1c46c:	ldr	r0, [r0]
   1c470:	ldr	r1, [fp, #-12]
   1c474:	mul	r0, r0, r1
   1c478:	str	r0, [fp, #-16]
   1c47c:	b	1c9a4 <__assert_fail@plt+0xb674>
   1c480:	b	1c704 <__assert_fail@plt+0xb3d4>
   1c484:	ldr	r0, [fp, #-12]
   1c488:	cmp	r0, #0
   1c48c:	bge	1c608 <__assert_fail@plt+0xb2d8>
   1c490:	ldr	r0, [fp, #-8]
   1c494:	ldr	r0, [r0]
   1c498:	cmp	r0, #0
   1c49c:	bcs	1c57c <__assert_fail@plt+0xb24c>
   1c4a0:	b	1c4a4 <__assert_fail@plt+0xb174>
   1c4a4:	ldr	r0, [fp, #-8]
   1c4a8:	ldr	r0, [r0]
   1c4ac:	ldr	r1, [fp, #-12]
   1c4b0:	asr	r3, r1, #31
   1c4b4:	mvn	r2, #0
   1c4b8:	mvn	ip, #-2147483648	; 0x80000000
   1c4bc:	str	r0, [sp, #52]	; 0x34
   1c4c0:	mov	r0, r2
   1c4c4:	str	r1, [sp, #48]	; 0x30
   1c4c8:	mov	r1, ip
   1c4cc:	ldr	r2, [sp, #48]	; 0x30
   1c4d0:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1c4d4:	ldr	r2, [sp, #52]	; 0x34
   1c4d8:	subs	r0, r2, r0
   1c4dc:	rscs	r1, r1, #0
   1c4e0:	blt	1c6d4 <__assert_fail@plt+0xb3a4>
   1c4e4:	b	1c6ec <__assert_fail@plt+0xb3bc>
   1c4e8:	b	1c4ec <__assert_fail@plt+0xb1bc>
   1c4ec:	ldr	r0, [pc, #1232]	; 1c9c4 <__assert_fail@plt+0xb694>
   1c4f0:	ldr	r1, [fp, #-12]
   1c4f4:	cmp	r1, r0
   1c4f8:	blt	1c510 <__assert_fail@plt+0xb1e0>
   1c4fc:	b	1c524 <__assert_fail@plt+0xb1f4>
   1c500:	ldr	r0, [fp, #-12]
   1c504:	movw	r1, #0
   1c508:	cmp	r1, r0
   1c50c:	bge	1c524 <__assert_fail@plt+0xb1f4>
   1c510:	mov	r0, #0
   1c514:	mvn	r1, #0
   1c518:	str	r1, [sp, #44]	; 0x2c
   1c51c:	str	r0, [sp, #40]	; 0x28
   1c520:	b	1c558 <__assert_fail@plt+0xb228>
   1c524:	ldr	r0, [fp, #-12]
   1c528:	rsb	r0, r0, #0
   1c52c:	asr	r3, r0, #31
   1c530:	mvn	r1, #0
   1c534:	mvn	r2, #-2147483648	; 0x80000000
   1c538:	str	r0, [sp, #36]	; 0x24
   1c53c:	mov	r0, r1
   1c540:	mov	r1, r2
   1c544:	ldr	r2, [sp, #36]	; 0x24
   1c548:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1c54c:	str	r0, [sp, #44]	; 0x2c
   1c550:	str	r1, [sp, #40]	; 0x28
   1c554:	b	1c558 <__assert_fail@plt+0xb228>
   1c558:	ldr	r0, [sp, #40]	; 0x28
   1c55c:	ldr	r1, [sp, #44]	; 0x2c
   1c560:	ldr	r2, [fp, #-8]
   1c564:	ldr	r2, [r2]
   1c568:	mvn	r2, r2
   1c56c:	subs	r1, r2, r1
   1c570:	rscs	r0, r0, #0
   1c574:	bge	1c6d4 <__assert_fail@plt+0xb3a4>
   1c578:	b	1c6ec <__assert_fail@plt+0xb3bc>
   1c57c:	ldr	r0, [fp, #-12]
   1c580:	cmn	r0, #1
   1c584:	bne	1c5cc <__assert_fail@plt+0xb29c>
   1c588:	b	1c5a8 <__assert_fail@plt+0xb278>
   1c58c:	ldr	r0, [fp, #-8]
   1c590:	ldr	r0, [r0]
   1c594:	rsbs	r0, r0, #0
   1c598:	mov	r1, #0
   1c59c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1c5a0:	blt	1c6d4 <__assert_fail@plt+0xb3a4>
   1c5a4:	b	1c6ec <__assert_fail@plt+0xb3bc>
   1c5a8:	ldr	r0, [fp, #-8]
   1c5ac:	ldr	r0, [r0]
   1c5b0:	movw	r1, #0
   1c5b4:	cmp	r1, r0
   1c5b8:	bcs	1c6ec <__assert_fail@plt+0xb3bc>
   1c5bc:	mov	r0, #0
   1c5c0:	cmp	r0, #0
   1c5c4:	bne	1c6d4 <__assert_fail@plt+0xb3a4>
   1c5c8:	b	1c6ec <__assert_fail@plt+0xb3bc>
   1c5cc:	ldr	r0, [fp, #-12]
   1c5d0:	asr	r3, r0, #31
   1c5d4:	mov	r1, #0
   1c5d8:	mov	r2, #-2147483648	; 0x80000000
   1c5dc:	str	r0, [sp, #32]
   1c5e0:	mov	r0, r1
   1c5e4:	mov	r1, r2
   1c5e8:	ldr	r2, [sp, #32]
   1c5ec:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1c5f0:	ldr	r2, [fp, #-8]
   1c5f4:	ldr	r2, [r2]
   1c5f8:	subs	r0, r0, r2
   1c5fc:	sbcs	r1, r1, #0
   1c600:	blt	1c6d4 <__assert_fail@plt+0xb3a4>
   1c604:	b	1c6ec <__assert_fail@plt+0xb3bc>
   1c608:	ldr	r0, [fp, #-12]
   1c60c:	cmp	r0, #0
   1c610:	bne	1c618 <__assert_fail@plt+0xb2e8>
   1c614:	b	1c6ec <__assert_fail@plt+0xb3bc>
   1c618:	ldr	r0, [fp, #-8]
   1c61c:	ldr	r0, [r0]
   1c620:	cmp	r0, #0
   1c624:	bcs	1c698 <__assert_fail@plt+0xb368>
   1c628:	ldr	r0, [fp, #-8]
   1c62c:	ldr	r0, [r0]
   1c630:	cmn	r0, #1
   1c634:	bne	1c668 <__assert_fail@plt+0xb338>
   1c638:	b	1c63c <__assert_fail@plt+0xb30c>
   1c63c:	ldr	r0, [fp, #-12]
   1c640:	mov	r1, #-2147483648	; 0x80000000
   1c644:	add	r1, r1, r0, asr #31
   1c648:	rsbs	r0, r0, #0
   1c64c:	rscs	r1, r1, #0
   1c650:	blt	1c6d4 <__assert_fail@plt+0xb3a4>
   1c654:	b	1c6ec <__assert_fail@plt+0xb3bc>
   1c658:	mov	r0, #0
   1c65c:	cmp	r0, #0
   1c660:	bne	1c6d4 <__assert_fail@plt+0xb3a4>
   1c664:	b	1c6ec <__assert_fail@plt+0xb3bc>
   1c668:	ldr	r0, [fp, #-8]
   1c66c:	ldr	r2, [r0]
   1c670:	mov	r1, #-2147483648	; 0x80000000
   1c674:	mov	r0, #0
   1c678:	str	r0, [sp, #28]
   1c67c:	ldr	r3, [sp, #28]
   1c680:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1c684:	ldr	r2, [fp, #-12]
   1c688:	subs	r0, r0, r2
   1c68c:	sbcs	r1, r1, r2, asr #31
   1c690:	blt	1c6d4 <__assert_fail@plt+0xb3a4>
   1c694:	b	1c6ec <__assert_fail@plt+0xb3bc>
   1c698:	ldr	r0, [fp, #-12]
   1c69c:	asr	r3, r0, #31
   1c6a0:	mvn	r1, #0
   1c6a4:	mvn	r2, #-2147483648	; 0x80000000
   1c6a8:	str	r0, [sp, #24]
   1c6ac:	mov	r0, r1
   1c6b0:	mov	r1, r2
   1c6b4:	ldr	r2, [sp, #24]
   1c6b8:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1c6bc:	ldr	r2, [fp, #-8]
   1c6c0:	ldr	r2, [r2]
   1c6c4:	subs	r0, r0, r2
   1c6c8:	sbcs	r1, r1, #0
   1c6cc:	bge	1c6ec <__assert_fail@plt+0xb3bc>
   1c6d0:	b	1c6d4 <__assert_fail@plt+0xb3a4>
   1c6d4:	ldr	r0, [fp, #-8]
   1c6d8:	ldr	r0, [r0]
   1c6dc:	ldr	r1, [fp, #-12]
   1c6e0:	mul	r0, r0, r1
   1c6e4:	str	r0, [fp, #-16]
   1c6e8:	b	1c970 <__assert_fail@plt+0xb640>
   1c6ec:	ldr	r0, [fp, #-8]
   1c6f0:	ldr	r0, [r0]
   1c6f4:	ldr	r1, [fp, #-12]
   1c6f8:	mul	r0, r0, r1
   1c6fc:	str	r0, [fp, #-16]
   1c700:	b	1c9a4 <__assert_fail@plt+0xb674>
   1c704:	ldr	r0, [fp, #-12]
   1c708:	cmp	r0, #0
   1c70c:	bge	1c878 <__assert_fail@plt+0xb548>
   1c710:	ldr	r0, [fp, #-8]
   1c714:	ldr	r0, [r0]
   1c718:	cmp	r0, #0
   1c71c:	bcs	1c7f0 <__assert_fail@plt+0xb4c0>
   1c720:	b	1c764 <__assert_fail@plt+0xb434>
   1c724:	ldr	r0, [fp, #-8]
   1c728:	ldr	r0, [r0]
   1c72c:	ldr	r1, [fp, #-12]
   1c730:	asr	r3, r1, #31
   1c734:	mvn	r2, #0
   1c738:	str	r0, [sp, #20]
   1c73c:	mov	r0, r2
   1c740:	str	r1, [sp, #16]
   1c744:	mov	r1, r2
   1c748:	ldr	r2, [sp, #16]
   1c74c:	bl	21090 <__assert_fail@plt+0xfd60>
   1c750:	ldr	r2, [sp, #20]
   1c754:	subs	r0, r2, r0
   1c758:	rscs	r1, r1, #0
   1c75c:	bcc	1c940 <__assert_fail@plt+0xb610>
   1c760:	b	1c958 <__assert_fail@plt+0xb628>
   1c764:	b	1c768 <__assert_fail@plt+0xb438>
   1c768:	ldr	r0, [pc, #596]	; 1c9c4 <__assert_fail@plt+0xb694>
   1c76c:	ldr	r1, [fp, #-12]
   1c770:	cmp	r1, r0
   1c774:	blt	1c78c <__assert_fail@plt+0xb45c>
   1c778:	b	1c7a0 <__assert_fail@plt+0xb470>
   1c77c:	ldr	r0, [fp, #-12]
   1c780:	movw	r1, #0
   1c784:	cmp	r1, r0
   1c788:	bge	1c7a0 <__assert_fail@plt+0xb470>
   1c78c:	mov	r0, #1
   1c790:	mvn	r1, #0
   1c794:	str	r1, [sp, #12]
   1c798:	str	r0, [sp, #8]
   1c79c:	b	1c7cc <__assert_fail@plt+0xb49c>
   1c7a0:	ldr	r0, [fp, #-12]
   1c7a4:	rsb	r0, r0, #0
   1c7a8:	asr	r3, r0, #31
   1c7ac:	mvn	r1, #0
   1c7b0:	str	r0, [sp, #4]
   1c7b4:	mov	r0, r1
   1c7b8:	ldr	r2, [sp, #4]
   1c7bc:	bl	21090 <__assert_fail@plt+0xfd60>
   1c7c0:	str	r0, [sp, #12]
   1c7c4:	str	r1, [sp, #8]
   1c7c8:	b	1c7cc <__assert_fail@plt+0xb49c>
   1c7cc:	ldr	r0, [sp, #8]
   1c7d0:	ldr	r1, [sp, #12]
   1c7d4:	ldr	r2, [fp, #-8]
   1c7d8:	ldr	r2, [r2]
   1c7dc:	mvn	r2, r2
   1c7e0:	subs	r1, r2, r1
   1c7e4:	rscs	r0, r0, #0
   1c7e8:	bcs	1c940 <__assert_fail@plt+0xb610>
   1c7ec:	b	1c958 <__assert_fail@plt+0xb628>
   1c7f0:	b	1c7f4 <__assert_fail@plt+0xb4c4>
   1c7f4:	b	1c858 <__assert_fail@plt+0xb528>
   1c7f8:	b	1c858 <__assert_fail@plt+0xb528>
   1c7fc:	ldr	r0, [fp, #-12]
   1c800:	cmn	r0, #1
   1c804:	bne	1c858 <__assert_fail@plt+0xb528>
   1c808:	b	1c828 <__assert_fail@plt+0xb4f8>
   1c80c:	ldr	r0, [fp, #-8]
   1c810:	ldr	r0, [r0]
   1c814:	add	r0, r0, #0
   1c818:	movw	r1, #0
   1c81c:	cmp	r1, r0
   1c820:	bcc	1c940 <__assert_fail@plt+0xb610>
   1c824:	b	1c958 <__assert_fail@plt+0xb628>
   1c828:	ldr	r0, [fp, #-8]
   1c82c:	ldr	r0, [r0]
   1c830:	movw	r1, #0
   1c834:	cmp	r1, r0
   1c838:	bcs	1c958 <__assert_fail@plt+0xb628>
   1c83c:	ldr	r0, [fp, #-8]
   1c840:	ldr	r0, [r0]
   1c844:	sub	r0, r0, #1
   1c848:	mvn	r1, #0
   1c84c:	cmp	r1, r0
   1c850:	bcc	1c940 <__assert_fail@plt+0xb610>
   1c854:	b	1c958 <__assert_fail@plt+0xb628>
   1c858:	ldr	r0, [fp, #-12]
   1c85c:	movw	r1, #0
   1c860:	sdiv	r0, r1, r0
   1c864:	ldr	r1, [fp, #-8]
   1c868:	ldr	r1, [r1]
   1c86c:	cmp	r0, r1
   1c870:	bcc	1c940 <__assert_fail@plt+0xb610>
   1c874:	b	1c958 <__assert_fail@plt+0xb628>
   1c878:	ldr	r0, [fp, #-12]
   1c87c:	cmp	r0, #0
   1c880:	bne	1c888 <__assert_fail@plt+0xb558>
   1c884:	b	1c958 <__assert_fail@plt+0xb628>
   1c888:	ldr	r0, [fp, #-8]
   1c88c:	ldr	r0, [r0]
   1c890:	cmp	r0, #0
   1c894:	bcs	1c90c <__assert_fail@plt+0xb5dc>
   1c898:	b	1c8a0 <__assert_fail@plt+0xb570>
   1c89c:	b	1c8a4 <__assert_fail@plt+0xb574>
   1c8a0:	b	1c8ec <__assert_fail@plt+0xb5bc>
   1c8a4:	ldr	r0, [fp, #-8]
   1c8a8:	ldr	r0, [r0]
   1c8ac:	cmn	r0, #1
   1c8b0:	bne	1c8ec <__assert_fail@plt+0xb5bc>
   1c8b4:	b	1c8b8 <__assert_fail@plt+0xb588>
   1c8b8:	ldr	r0, [fp, #-12]
   1c8bc:	add	r0, r0, #0
   1c8c0:	movw	r1, #0
   1c8c4:	cmp	r1, r0
   1c8c8:	blt	1c940 <__assert_fail@plt+0xb610>
   1c8cc:	b	1c958 <__assert_fail@plt+0xb628>
   1c8d0:	ldr	r0, [fp, #-12]
   1c8d4:	sub	r0, r0, #1
   1c8d8:	mvn	r1, #0
   1c8dc:	cmp	r1, r0
   1c8e0:	blt	1c940 <__assert_fail@plt+0xb610>
   1c8e4:	b	1c958 <__assert_fail@plt+0xb628>
   1c8e8:			; <UNDEFINED> instruction: 0xffff8000
   1c8ec:	ldr	r0, [fp, #-8]
   1c8f0:	ldr	r0, [r0]
   1c8f4:	movw	r1, #0
   1c8f8:	udiv	r0, r1, r0
   1c8fc:	ldr	r1, [fp, #-12]
   1c900:	cmp	r0, r1
   1c904:	bcc	1c940 <__assert_fail@plt+0xb610>
   1c908:	b	1c958 <__assert_fail@plt+0xb628>
   1c90c:	ldr	r0, [fp, #-12]
   1c910:	asr	r3, r0, #31
   1c914:	mvn	r1, #0
   1c918:	str	r0, [sp]
   1c91c:	mov	r0, r1
   1c920:	ldr	r2, [sp]
   1c924:	bl	21090 <__assert_fail@plt+0xfd60>
   1c928:	ldr	r2, [fp, #-8]
   1c92c:	ldr	r2, [r2]
   1c930:	subs	r0, r0, r2
   1c934:	sbcs	r1, r1, #0
   1c938:	bcs	1c958 <__assert_fail@plt+0xb628>
   1c93c:	b	1c940 <__assert_fail@plt+0xb610>
   1c940:	ldr	r0, [fp, #-8]
   1c944:	ldr	r0, [r0]
   1c948:	ldr	r1, [fp, #-12]
   1c94c:	mul	r0, r0, r1
   1c950:	str	r0, [fp, #-16]
   1c954:	b	1c970 <__assert_fail@plt+0xb640>
   1c958:	ldr	r0, [fp, #-8]
   1c95c:	ldr	r0, [r0]
   1c960:	ldr	r1, [fp, #-12]
   1c964:	mul	r0, r0, r1
   1c968:	str	r0, [fp, #-16]
   1c96c:	b	1c9a4 <__assert_fail@plt+0xb674>
   1c970:	ldr	r0, [fp, #-8]
   1c974:	ldr	r0, [r0]
   1c978:	cmp	r0, #0
   1c97c:	movw	r0, #0
   1c980:	movcc	r0, #1
   1c984:	tst	r0, #1
   1c988:	movw	r0, #0
   1c98c:	mvneq	r0, #0
   1c990:	ldr	r1, [fp, #-8]
   1c994:	str	r0, [r1]
   1c998:	movw	r0, #1
   1c99c:	str	r0, [fp, #-4]
   1c9a0:	b	1c9b8 <__assert_fail@plt+0xb688>
   1c9a4:	ldr	r0, [fp, #-16]
   1c9a8:	ldr	r1, [fp, #-8]
   1c9ac:	str	r0, [r1]
   1c9b0:	movw	r0, #0
   1c9b4:	str	r0, [fp, #-4]
   1c9b8:	ldr	r0, [fp, #-4]
   1c9bc:	mov	sp, fp
   1c9c0:	pop	{fp, pc}
   1c9c4:	andhi	r0, r0, r1
   1c9c8:	svcvc	0x00ffffff
   1c9cc:	andhi	r0, r0, r0
   1c9d0:			; <UNDEFINED> instruction: 0xffff8000
   1c9d4:	push	{fp, lr}
   1c9d8:	mov	fp, sp
   1c9dc:	sub	sp, sp, #16
   1c9e0:	str	r0, [fp, #-4]
   1c9e4:	str	r1, [sp, #8]
   1c9e8:	str	r2, [sp, #4]
   1c9ec:	movw	r0, #0
   1c9f0:	str	r0, [sp]
   1c9f4:	ldr	r0, [sp, #4]
   1c9f8:	mvn	r1, #0
   1c9fc:	add	r1, r0, r1
   1ca00:	str	r1, [sp, #4]
   1ca04:	cmp	r0, #0
   1ca08:	beq	1ca28 <__assert_fail@plt+0xb6f8>
   1ca0c:	ldr	r0, [fp, #-4]
   1ca10:	ldr	r1, [sp, #8]
   1ca14:	bl	1b3e0 <__assert_fail@plt+0xa0b0>
   1ca18:	ldr	r1, [sp]
   1ca1c:	orr	r0, r1, r0
   1ca20:	str	r0, [sp]
   1ca24:	b	1c9f4 <__assert_fail@plt+0xb6c4>
   1ca28:	ldr	r0, [sp]
   1ca2c:	mov	sp, fp
   1ca30:	pop	{fp, pc}
   1ca34:	push	{fp, lr}
   1ca38:	mov	fp, sp
   1ca3c:	sub	sp, sp, #80	; 0x50
   1ca40:	ldr	ip, [fp, #8]
   1ca44:	str	r0, [fp, #-8]
   1ca48:	str	r1, [fp, #-12]
   1ca4c:	str	r2, [fp, #-16]
   1ca50:	str	r3, [fp, #-20]	; 0xffffffec
   1ca54:	movw	r0, #0
   1ca58:	str	r0, [sp, #36]	; 0x24
   1ca5c:	ldr	r1, [fp, #-16]
   1ca60:	cmp	r0, r1
   1ca64:	bgt	1ca78 <__assert_fail@plt+0xb748>
   1ca68:	ldr	r0, [fp, #-16]
   1ca6c:	cmp	r0, #36	; 0x24
   1ca70:	bgt	1ca78 <__assert_fail@plt+0xb748>
   1ca74:	b	1ca98 <__assert_fail@plt+0xb768>
   1ca78:	movw	r0, #9370	; 0x249a
   1ca7c:	movt	r0, #2
   1ca80:	movw	r1, #9408	; 0x24c0
   1ca84:	movt	r1, #2
   1ca88:	movw	r2, #85	; 0x55
   1ca8c:	movw	r3, #9505	; 0x2521
   1ca90:	movt	r3, #2
   1ca94:	bl	11330 <__assert_fail@plt>
   1ca98:	ldr	r0, [fp, #-12]
   1ca9c:	movw	r1, #0
   1caa0:	cmp	r0, r1
   1caa4:	beq	1cab4 <__assert_fail@plt+0xb784>
   1caa8:	ldr	r0, [fp, #-12]
   1caac:	str	r0, [sp, #12]
   1cab0:	b	1cac0 <__assert_fail@plt+0xb790>
   1cab4:	sub	r0, fp, #24
   1cab8:	str	r0, [sp, #12]
   1cabc:	b	1cac0 <__assert_fail@plt+0xb790>
   1cac0:	ldr	r0, [sp, #12]
   1cac4:	str	r0, [fp, #-28]	; 0xffffffe4
   1cac8:	bl	11228 <__errno_location@plt>
   1cacc:	movw	r1, #0
   1cad0:	str	r1, [r0]
   1cad4:	ldr	r0, [fp, #-8]
   1cad8:	str	r0, [sp, #32]
   1cadc:	ldr	r0, [sp, #32]
   1cae0:	ldrb	r0, [r0]
   1cae4:	strb	r0, [sp, #31]
   1cae8:	bl	111d4 <__ctype_b_loc@plt>
   1caec:	ldr	r0, [r0]
   1caf0:	ldrb	r1, [sp, #31]
   1caf4:	mov	r2, r1
   1caf8:	add	r0, r0, r1, lsl #1
   1cafc:	ldrh	r0, [r0]
   1cb00:	and	r0, r0, #8192	; 0x2000
   1cb04:	cmp	r0, #0
   1cb08:	beq	1cb24 <__assert_fail@plt+0xb7f4>
   1cb0c:	ldr	r0, [sp, #32]
   1cb10:	add	r1, r0, #1
   1cb14:	str	r1, [sp, #32]
   1cb18:	ldrb	r0, [r0, #1]
   1cb1c:	strb	r0, [sp, #31]
   1cb20:	b	1cae8 <__assert_fail@plt+0xb7b8>
   1cb24:	ldrb	r0, [sp, #31]
   1cb28:	cmp	r0, #45	; 0x2d
   1cb2c:	bne	1cb3c <__assert_fail@plt+0xb80c>
   1cb30:	movw	r0, #4
   1cb34:	str	r0, [fp, #-4]
   1cb38:	b	1d0b8 <__assert_fail@plt+0xbd88>
   1cb3c:	ldr	r0, [fp, #-8]
   1cb40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cb44:	ldr	r2, [fp, #-16]
   1cb48:	bl	11258 <strtoumax@plt>
   1cb4c:	str	r1, [sp, #44]	; 0x2c
   1cb50:	str	r0, [sp, #40]	; 0x28
   1cb54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cb58:	ldr	r0, [r0]
   1cb5c:	ldr	r1, [fp, #-8]
   1cb60:	cmp	r0, r1
   1cb64:	bne	1cbd0 <__assert_fail@plt+0xb8a0>
   1cb68:	ldr	r0, [fp, #8]
   1cb6c:	movw	r1, #0
   1cb70:	cmp	r0, r1
   1cb74:	beq	1cbc0 <__assert_fail@plt+0xb890>
   1cb78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cb7c:	ldr	r0, [r0]
   1cb80:	ldrb	r0, [r0]
   1cb84:	cmp	r0, #0
   1cb88:	beq	1cbc0 <__assert_fail@plt+0xb890>
   1cb8c:	ldr	r0, [fp, #8]
   1cb90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cb94:	ldr	r1, [r1]
   1cb98:	ldrb	r1, [r1]
   1cb9c:	bl	11210 <strchr@plt>
   1cba0:	movw	r1, #0
   1cba4:	cmp	r0, r1
   1cba8:	beq	1cbc0 <__assert_fail@plt+0xb890>
   1cbac:	mov	r0, #0
   1cbb0:	str	r0, [sp, #44]	; 0x2c
   1cbb4:	mov	r0, #1
   1cbb8:	str	r0, [sp, #40]	; 0x28
   1cbbc:	b	1cbcc <__assert_fail@plt+0xb89c>
   1cbc0:	movw	r0, #4
   1cbc4:	str	r0, [fp, #-4]
   1cbc8:	b	1d0b8 <__assert_fail@plt+0xbd88>
   1cbcc:	b	1cc08 <__assert_fail@plt+0xb8d8>
   1cbd0:	bl	11228 <__errno_location@plt>
   1cbd4:	ldr	r0, [r0]
   1cbd8:	cmp	r0, #0
   1cbdc:	beq	1cc04 <__assert_fail@plt+0xb8d4>
   1cbe0:	bl	11228 <__errno_location@plt>
   1cbe4:	ldr	r0, [r0]
   1cbe8:	cmp	r0, #34	; 0x22
   1cbec:	beq	1cbfc <__assert_fail@plt+0xb8cc>
   1cbf0:	movw	r0, #4
   1cbf4:	str	r0, [fp, #-4]
   1cbf8:	b	1d0b8 <__assert_fail@plt+0xbd88>
   1cbfc:	movw	r0, #1
   1cc00:	str	r0, [sp, #36]	; 0x24
   1cc04:	b	1cc08 <__assert_fail@plt+0xb8d8>
   1cc08:	ldr	r0, [fp, #8]
   1cc0c:	movw	r1, #0
   1cc10:	cmp	r0, r1
   1cc14:	bne	1cc38 <__assert_fail@plt+0xb908>
   1cc18:	ldr	r0, [sp, #40]	; 0x28
   1cc1c:	ldr	r1, [sp, #44]	; 0x2c
   1cc20:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cc24:	str	r1, [r2, #4]
   1cc28:	str	r0, [r2]
   1cc2c:	ldr	r0, [sp, #36]	; 0x24
   1cc30:	str	r0, [fp, #-4]
   1cc34:	b	1d0b8 <__assert_fail@plt+0xbd88>
   1cc38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cc3c:	ldr	r0, [r0]
   1cc40:	ldrb	r0, [r0]
   1cc44:	cmp	r0, #0
   1cc48:	beq	1d09c <__assert_fail@plt+0xbd6c>
   1cc4c:	movw	r0, #1024	; 0x400
   1cc50:	str	r0, [sp, #24]
   1cc54:	movw	r0, #1
   1cc58:	str	r0, [sp, #20]
   1cc5c:	ldr	r0, [fp, #8]
   1cc60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc64:	ldr	r1, [r1]
   1cc68:	ldrb	r1, [r1]
   1cc6c:	bl	11210 <strchr@plt>
   1cc70:	movw	r1, #0
   1cc74:	cmp	r0, r1
   1cc78:	bne	1cca0 <__assert_fail@plt+0xb970>
   1cc7c:	ldr	r0, [sp, #40]	; 0x28
   1cc80:	ldr	r1, [sp, #44]	; 0x2c
   1cc84:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cc88:	str	r1, [r2, #4]
   1cc8c:	str	r0, [r2]
   1cc90:	ldr	r0, [sp, #36]	; 0x24
   1cc94:	orr	r0, r0, #2
   1cc98:	str	r0, [fp, #-4]
   1cc9c:	b	1d0b8 <__assert_fail@plt+0xbd88>
   1cca0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cca4:	ldr	r0, [r0]
   1cca8:	ldrb	r0, [r0]
   1ccac:	sub	r0, r0, #69	; 0x45
   1ccb0:	cmp	r0, #47	; 0x2f
   1ccb4:	str	r0, [sp, #8]
   1ccb8:	bhi	1ce24 <__assert_fail@plt+0xbaf4>
   1ccbc:	add	r0, pc, #8
   1ccc0:	ldr	r1, [sp, #8]
   1ccc4:	ldr	r0, [r0, r1, lsl #2]
   1ccc8:	mov	pc, r0
   1cccc:	andeq	ip, r1, ip, lsl #27
   1ccd0:	andeq	ip, r1, r4, lsr #28
   1ccd4:	andeq	ip, r1, ip, lsl #27
   1ccd8:	andeq	ip, r1, r4, lsr #28
   1ccdc:	andeq	ip, r1, r4, lsr #28
   1cce0:	andeq	ip, r1, r4, lsr #28
   1cce4:	andeq	ip, r1, ip, lsl #27
   1cce8:	andeq	ip, r1, r4, lsr #28
   1ccec:	andeq	ip, r1, ip, lsl #27
   1ccf0:	andeq	ip, r1, r4, lsr #28
   1ccf4:	andeq	ip, r1, r4, lsr #28
   1ccf8:	andeq	ip, r1, ip, lsl #27
   1ccfc:	andeq	ip, r1, r4, lsr #28
   1cd00:	andeq	ip, r1, r4, lsr #28
   1cd04:	andeq	ip, r1, r4, lsr #28
   1cd08:	andeq	ip, r1, ip, lsl #27
   1cd0c:	andeq	ip, r1, r4, lsr #28
   1cd10:	andeq	ip, r1, r4, lsr #28
   1cd14:	andeq	ip, r1, r4, lsr #28
   1cd18:	andeq	ip, r1, r4, lsr #28
   1cd1c:	andeq	ip, r1, ip, lsl #27
   1cd20:	andeq	ip, r1, ip, lsl #27
   1cd24:	andeq	ip, r1, r4, lsr #28
   1cd28:	andeq	ip, r1, r4, lsr #28
   1cd2c:	andeq	ip, r1, r4, lsr #28
   1cd30:	andeq	ip, r1, r4, lsr #28
   1cd34:	andeq	ip, r1, r4, lsr #28
   1cd38:	andeq	ip, r1, r4, lsr #28
   1cd3c:	andeq	ip, r1, r4, lsr #28
   1cd40:	andeq	ip, r1, r4, lsr #28
   1cd44:	andeq	ip, r1, r4, lsr #28
   1cd48:	andeq	ip, r1, r4, lsr #28
   1cd4c:	andeq	ip, r1, r4, lsr #28
   1cd50:	andeq	ip, r1, r4, lsr #28
   1cd54:	andeq	ip, r1, ip, lsl #27
   1cd58:	andeq	ip, r1, r4, lsr #28
   1cd5c:	andeq	ip, r1, r4, lsr #28
   1cd60:	andeq	ip, r1, r4, lsr #28
   1cd64:	andeq	ip, r1, ip, lsl #27
   1cd68:	andeq	ip, r1, r4, lsr #28
   1cd6c:	andeq	ip, r1, ip, lsl #27
   1cd70:	andeq	ip, r1, r4, lsr #28
   1cd74:	andeq	ip, r1, r4, lsr #28
   1cd78:	andeq	ip, r1, r4, lsr #28
   1cd7c:	andeq	ip, r1, r4, lsr #28
   1cd80:	andeq	ip, r1, r4, lsr #28
   1cd84:	andeq	ip, r1, r4, lsr #28
   1cd88:	andeq	ip, r1, ip, lsl #27
   1cd8c:	ldr	r0, [fp, #8]
   1cd90:	movw	r1, #48	; 0x30
   1cd94:	bl	11210 <strchr@plt>
   1cd98:	movw	r1, #0
   1cd9c:	cmp	r0, r1
   1cda0:	beq	1ce20 <__assert_fail@plt+0xbaf0>
   1cda4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cda8:	ldr	r0, [r0]
   1cdac:	ldrb	r0, [r0, #1]
   1cdb0:	mov	r1, r0
   1cdb4:	cmp	r0, #66	; 0x42
   1cdb8:	str	r1, [sp, #4]
   1cdbc:	beq	1ce08 <__assert_fail@plt+0xbad8>
   1cdc0:	b	1cdc4 <__assert_fail@plt+0xba94>
   1cdc4:	ldr	r0, [sp, #4]
   1cdc8:	cmp	r0, #68	; 0x44
   1cdcc:	beq	1ce08 <__assert_fail@plt+0xbad8>
   1cdd0:	b	1cdd4 <__assert_fail@plt+0xbaa4>
   1cdd4:	ldr	r0, [sp, #4]
   1cdd8:	cmp	r0, #105	; 0x69
   1cddc:	bne	1ce1c <__assert_fail@plt+0xbaec>
   1cde0:	b	1cde4 <__assert_fail@plt+0xbab4>
   1cde4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cde8:	ldr	r0, [r0]
   1cdec:	ldrb	r0, [r0, #2]
   1cdf0:	cmp	r0, #66	; 0x42
   1cdf4:	bne	1ce04 <__assert_fail@plt+0xbad4>
   1cdf8:	ldr	r0, [sp, #20]
   1cdfc:	add	r0, r0, #2
   1ce00:	str	r0, [sp, #20]
   1ce04:	b	1ce1c <__assert_fail@plt+0xbaec>
   1ce08:	movw	r0, #1000	; 0x3e8
   1ce0c:	str	r0, [sp, #24]
   1ce10:	ldr	r0, [sp, #20]
   1ce14:	add	r0, r0, #1
   1ce18:	str	r0, [sp, #20]
   1ce1c:	b	1ce20 <__assert_fail@plt+0xbaf0>
   1ce20:	b	1ce24 <__assert_fail@plt+0xbaf4>
   1ce24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce28:	ldr	r0, [r0]
   1ce2c:	ldrb	r0, [r0]
   1ce30:	sub	r0, r0, #66	; 0x42
   1ce34:	cmp	r0, #53	; 0x35
   1ce38:	str	r0, [sp]
   1ce3c:	bhi	1d030 <__assert_fail@plt+0xbd00>
   1ce40:	add	r0, pc, #8
   1ce44:	ldr	r1, [sp]
   1ce48:	ldr	r0, [r0, r1, lsl #2]
   1ce4c:	mov	pc, r0
   1ce50:	andeq	ip, r1, ip, lsr pc
   1ce54:	andeq	sp, r1, r0, lsr r0
   1ce58:	andeq	sp, r1, r0, lsr r0
   1ce5c:	andeq	ip, r1, ip, asr pc
   1ce60:	andeq	sp, r1, r0, lsr r0
   1ce64:	andeq	ip, r1, r4, ror pc
   1ce68:	andeq	sp, r1, r0, lsr r0
   1ce6c:	andeq	sp, r1, r0, lsr r0
   1ce70:	andeq	sp, r1, r0, lsr r0
   1ce74:	andeq	ip, r1, ip, lsl #31
   1ce78:	andeq	sp, r1, r0, lsr r0
   1ce7c:	andeq	ip, r1, r4, lsr #31
   1ce80:	andeq	sp, r1, r0, lsr r0
   1ce84:	andeq	sp, r1, r0, lsr r0
   1ce88:			; <UNDEFINED> instruction: 0x0001cfbc
   1ce8c:	andeq	sp, r1, r0, lsr r0
   1ce90:	andeq	sp, r1, r0, lsr r0
   1ce94:	andeq	sp, r1, r0, lsr r0
   1ce98:	ldrdeq	ip, [r1], -r4
   1ce9c:	andeq	sp, r1, r0, lsr r0
   1cea0:	andeq	sp, r1, r0, lsr r0
   1cea4:	andeq	sp, r1, r0, lsr r0
   1cea8:	andeq	sp, r1, r0, lsr r0
   1ceac:	andeq	sp, r1, r0
   1ceb0:	andeq	sp, r1, r8, lsl r0
   1ceb4:	andeq	sp, r1, r0, lsr r0
   1ceb8:	andeq	sp, r1, r0, lsr r0
   1cebc:	andeq	sp, r1, r0, lsr r0
   1cec0:	andeq	sp, r1, r0, lsr r0
   1cec4:	andeq	sp, r1, r0, lsr r0
   1cec8:	andeq	sp, r1, r0, lsr r0
   1cecc:	andeq	sp, r1, r0, lsr r0
   1ced0:	andeq	ip, r1, r8, lsr #30
   1ced4:	andeq	ip, r1, r0, asr pc
   1ced8:	andeq	sp, r1, r0, lsr r0
   1cedc:	andeq	sp, r1, r0, lsr r0
   1cee0:	andeq	sp, r1, r0, lsr r0
   1cee4:	andeq	ip, r1, r4, ror pc
   1cee8:	andeq	sp, r1, r0, lsr r0
   1ceec:	andeq	sp, r1, r0, lsr r0
   1cef0:	andeq	sp, r1, r0, lsr r0
   1cef4:	andeq	ip, r1, ip, lsl #31
   1cef8:	andeq	sp, r1, r0, lsr r0
   1cefc:	andeq	ip, r1, r4, lsr #31
   1cf00:	andeq	sp, r1, r0, lsr r0
   1cf04:	andeq	sp, r1, r0, lsr r0
   1cf08:	andeq	sp, r1, r0, lsr r0
   1cf0c:	andeq	sp, r1, r0, lsr r0
   1cf10:	andeq	sp, r1, r0, lsr r0
   1cf14:	andeq	sp, r1, r0, lsr r0
   1cf18:	ldrdeq	ip, [r1], -r4
   1cf1c:	andeq	sp, r1, r0, lsr r0
   1cf20:	andeq	sp, r1, r0, lsr r0
   1cf24:	andeq	ip, r1, ip, ror #31
   1cf28:	add	r0, sp, #40	; 0x28
   1cf2c:	movw	r1, #512	; 0x200
   1cf30:	bl	1d0c4 <__assert_fail@plt+0xbd94>
   1cf34:	str	r0, [sp, #16]
   1cf38:	b	1d054 <__assert_fail@plt+0xbd24>
   1cf3c:	add	r0, sp, #40	; 0x28
   1cf40:	movw	r1, #1024	; 0x400
   1cf44:	bl	1d0c4 <__assert_fail@plt+0xbd94>
   1cf48:	str	r0, [sp, #16]
   1cf4c:	b	1d054 <__assert_fail@plt+0xbd24>
   1cf50:	movw	r0, #0
   1cf54:	str	r0, [sp, #16]
   1cf58:	b	1d054 <__assert_fail@plt+0xbd24>
   1cf5c:	ldr	r1, [sp, #24]
   1cf60:	add	r0, sp, #40	; 0x28
   1cf64:	movw	r2, #6
   1cf68:	bl	1e93c <__assert_fail@plt+0xd60c>
   1cf6c:	str	r0, [sp, #16]
   1cf70:	b	1d054 <__assert_fail@plt+0xbd24>
   1cf74:	ldr	r1, [sp, #24]
   1cf78:	add	r0, sp, #40	; 0x28
   1cf7c:	movw	r2, #3
   1cf80:	bl	1e93c <__assert_fail@plt+0xd60c>
   1cf84:	str	r0, [sp, #16]
   1cf88:	b	1d054 <__assert_fail@plt+0xbd24>
   1cf8c:	ldr	r1, [sp, #24]
   1cf90:	add	r0, sp, #40	; 0x28
   1cf94:	movw	r2, #1
   1cf98:	bl	1e93c <__assert_fail@plt+0xd60c>
   1cf9c:	str	r0, [sp, #16]
   1cfa0:	b	1d054 <__assert_fail@plt+0xbd24>
   1cfa4:	ldr	r1, [sp, #24]
   1cfa8:	add	r0, sp, #40	; 0x28
   1cfac:	movw	r2, #2
   1cfb0:	bl	1e93c <__assert_fail@plt+0xd60c>
   1cfb4:	str	r0, [sp, #16]
   1cfb8:	b	1d054 <__assert_fail@plt+0xbd24>
   1cfbc:	ldr	r1, [sp, #24]
   1cfc0:	add	r0, sp, #40	; 0x28
   1cfc4:	movw	r2, #5
   1cfc8:	bl	1e93c <__assert_fail@plt+0xd60c>
   1cfcc:	str	r0, [sp, #16]
   1cfd0:	b	1d054 <__assert_fail@plt+0xbd24>
   1cfd4:	ldr	r1, [sp, #24]
   1cfd8:	add	r0, sp, #40	; 0x28
   1cfdc:	movw	r2, #4
   1cfe0:	bl	1e93c <__assert_fail@plt+0xd60c>
   1cfe4:	str	r0, [sp, #16]
   1cfe8:	b	1d054 <__assert_fail@plt+0xbd24>
   1cfec:	add	r0, sp, #40	; 0x28
   1cff0:	movw	r1, #2
   1cff4:	bl	1d0c4 <__assert_fail@plt+0xbd94>
   1cff8:	str	r0, [sp, #16]
   1cffc:	b	1d054 <__assert_fail@plt+0xbd24>
   1d000:	ldr	r1, [sp, #24]
   1d004:	add	r0, sp, #40	; 0x28
   1d008:	movw	r2, #8
   1d00c:	bl	1e93c <__assert_fail@plt+0xd60c>
   1d010:	str	r0, [sp, #16]
   1d014:	b	1d054 <__assert_fail@plt+0xbd24>
   1d018:	ldr	r1, [sp, #24]
   1d01c:	add	r0, sp, #40	; 0x28
   1d020:	movw	r2, #7
   1d024:	bl	1e93c <__assert_fail@plt+0xd60c>
   1d028:	str	r0, [sp, #16]
   1d02c:	b	1d054 <__assert_fail@plt+0xbd24>
   1d030:	ldr	r0, [sp, #40]	; 0x28
   1d034:	ldr	r1, [sp, #44]	; 0x2c
   1d038:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d03c:	str	r1, [r2, #4]
   1d040:	str	r0, [r2]
   1d044:	ldr	r0, [sp, #36]	; 0x24
   1d048:	orr	r0, r0, #2
   1d04c:	str	r0, [fp, #-4]
   1d050:	b	1d0b8 <__assert_fail@plt+0xbd88>
   1d054:	ldr	r0, [sp, #16]
   1d058:	ldr	r1, [sp, #36]	; 0x24
   1d05c:	orr	r0, r1, r0
   1d060:	str	r0, [sp, #36]	; 0x24
   1d064:	ldr	r0, [sp, #20]
   1d068:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d06c:	ldr	r2, [r1]
   1d070:	add	r0, r2, r0
   1d074:	str	r0, [r1]
   1d078:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d07c:	ldr	r0, [r0]
   1d080:	ldrsb	r0, [r0]
   1d084:	cmp	r0, #0
   1d088:	beq	1d098 <__assert_fail@plt+0xbd68>
   1d08c:	ldr	r0, [sp, #36]	; 0x24
   1d090:	orr	r0, r0, #2
   1d094:	str	r0, [sp, #36]	; 0x24
   1d098:	b	1d09c <__assert_fail@plt+0xbd6c>
   1d09c:	ldr	r0, [sp, #40]	; 0x28
   1d0a0:	ldr	r1, [sp, #44]	; 0x2c
   1d0a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d0a8:	str	r1, [r2, #4]
   1d0ac:	str	r0, [r2]
   1d0b0:	ldr	r0, [sp, #36]	; 0x24
   1d0b4:	str	r0, [fp, #-4]
   1d0b8:	ldr	r0, [fp, #-4]
   1d0bc:	mov	sp, fp
   1d0c0:	pop	{fp, pc}
   1d0c4:	push	{fp, lr}
   1d0c8:	mov	fp, sp
   1d0cc:	sub	sp, sp, #112	; 0x70
   1d0d0:	str	r0, [fp, #-8]
   1d0d4:	str	r1, [fp, #-12]
   1d0d8:	b	1d588 <__assert_fail@plt+0xc258>
   1d0dc:	b	1d350 <__assert_fail@plt+0xc020>
   1d0e0:	ldr	r0, [fp, #-12]
   1d0e4:	cmp	r0, #0
   1d0e8:	bge	1d240 <__assert_fail@plt+0xbf10>
   1d0ec:	mov	r0, #1
   1d0f0:	cmp	r0, #0
   1d0f4:	bne	1d19c <__assert_fail@plt+0xbe6c>
   1d0f8:	b	1d0fc <__assert_fail@plt+0xbdcc>
   1d0fc:	b	1d100 <__assert_fail@plt+0xbdd0>
   1d100:	ldr	r0, [fp, #-8]
   1d104:	ldr	r1, [r0]
   1d108:	ldr	r0, [r0, #4]
   1d10c:	ldr	r2, [fp, #-12]
   1d110:	mov	r3, #127	; 0x7f
   1d114:	sdiv	r2, r3, r2
   1d118:	subs	r1, r1, r2
   1d11c:	sbcs	r0, r0, r2, asr #31
   1d120:	bcc	1d308 <__assert_fail@plt+0xbfd8>
   1d124:	b	1d32c <__assert_fail@plt+0xbffc>
   1d128:	b	1d12c <__assert_fail@plt+0xbdfc>
   1d12c:	ldr	r0, [pc, #4076]	; 1e120 <__assert_fail@plt+0xcdf0>
   1d130:	ldr	r1, [fp, #-12]
   1d134:	cmp	r1, r0
   1d138:	blt	1d150 <__assert_fail@plt+0xbe20>
   1d13c:	b	1d15c <__assert_fail@plt+0xbe2c>
   1d140:	ldr	r0, [fp, #-12]
   1d144:	movw	r1, #0
   1d148:	cmp	r1, r0
   1d14c:	bge	1d15c <__assert_fail@plt+0xbe2c>
   1d150:	movw	r0, #0
   1d154:	str	r0, [fp, #-28]	; 0xffffffe4
   1d158:	b	1d174 <__assert_fail@plt+0xbe44>
   1d15c:	ldr	r0, [fp, #-12]
   1d160:	movw	r1, #0
   1d164:	sub	r0, r1, r0
   1d168:	movw	r1, #127	; 0x7f
   1d16c:	sdiv	r0, r1, r0
   1d170:	str	r0, [fp, #-28]	; 0xffffffe4
   1d174:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d178:	ldr	r1, [fp, #-8]
   1d17c:	ldr	r2, [r1]
   1d180:	ldr	r1, [r1, #4]
   1d184:	mvn	r1, r1
   1d188:	mvn	r2, r2
   1d18c:	subs	r2, r2, r0
   1d190:	sbcs	r0, r1, r0, asr #31
   1d194:	bcs	1d308 <__assert_fail@plt+0xbfd8>
   1d198:	b	1d32c <__assert_fail@plt+0xbffc>
   1d19c:	b	1d1a0 <__assert_fail@plt+0xbe70>
   1d1a0:	b	1d218 <__assert_fail@plt+0xbee8>
   1d1a4:	b	1d218 <__assert_fail@plt+0xbee8>
   1d1a8:	ldr	r0, [fp, #-12]
   1d1ac:	cmn	r0, #1
   1d1b0:	bne	1d218 <__assert_fail@plt+0xbee8>
   1d1b4:	b	1d1d8 <__assert_fail@plt+0xbea8>
   1d1b8:	ldr	r0, [fp, #-8]
   1d1bc:	ldr	r1, [r0]
   1d1c0:	ldr	r0, [r0, #4]
   1d1c4:	eor	r1, r1, #128	; 0x80
   1d1c8:	orr	r0, r1, r0
   1d1cc:	cmp	r0, #0
   1d1d0:	bne	1d308 <__assert_fail@plt+0xbfd8>
   1d1d4:	b	1d32c <__assert_fail@plt+0xbffc>
   1d1d8:	ldr	r0, [fp, #-8]
   1d1dc:	ldr	r1, [r0]
   1d1e0:	ldr	r0, [r0, #4]
   1d1e4:	orr	r0, r1, r0
   1d1e8:	cmp	r0, #0
   1d1ec:	beq	1d32c <__assert_fail@plt+0xbffc>
   1d1f0:	b	1d1f4 <__assert_fail@plt+0xbec4>
   1d1f4:	ldr	r0, [fp, #-8]
   1d1f8:	ldr	r1, [r0]
   1d1fc:	ldr	r0, [r0, #4]
   1d200:	subs	r1, r1, #1
   1d204:	sbc	r0, r0, #0
   1d208:	rsbs	r1, r1, #127	; 0x7f
   1d20c:	rscs	r0, r0, #0
   1d210:	bcc	1d308 <__assert_fail@plt+0xbfd8>
   1d214:	b	1d32c <__assert_fail@plt+0xbffc>
   1d218:	ldr	r0, [fp, #-12]
   1d21c:	mvn	r1, #127	; 0x7f
   1d220:	sdiv	r0, r1, r0
   1d224:	ldr	r1, [fp, #-8]
   1d228:	ldr	r2, [r1]
   1d22c:	ldr	r1, [r1, #4]
   1d230:	subs	r2, r0, r2
   1d234:	rscs	r0, r1, r0, asr #31
   1d238:	bcc	1d308 <__assert_fail@plt+0xbfd8>
   1d23c:	b	1d32c <__assert_fail@plt+0xbffc>
   1d240:	ldr	r0, [fp, #-12]
   1d244:	cmp	r0, #0
   1d248:	bne	1d250 <__assert_fail@plt+0xbf20>
   1d24c:	b	1d32c <__assert_fail@plt+0xbffc>
   1d250:	mov	r0, #1
   1d254:	cmp	r0, #0
   1d258:	bne	1d2e0 <__assert_fail@plt+0xbfb0>
   1d25c:	b	1d260 <__assert_fail@plt+0xbf30>
   1d260:	ldr	r0, [fp, #-8]
   1d264:	ldr	r1, [r0]
   1d268:	ldr	r0, [r0, #4]
   1d26c:	and	r0, r1, r0
   1d270:	cmn	r0, #1
   1d274:	bne	1d2b4 <__assert_fail@plt+0xbf84>
   1d278:	b	1d27c <__assert_fail@plt+0xbf4c>
   1d27c:	b	1d280 <__assert_fail@plt+0xbf50>
   1d280:	ldr	r0, [fp, #-12]
   1d284:	mvn	r1, #127	; 0x7f
   1d288:	add	r0, r0, r1
   1d28c:	movw	r1, #0
   1d290:	cmp	r1, r0
   1d294:	blt	1d308 <__assert_fail@plt+0xbfd8>
   1d298:	b	1d32c <__assert_fail@plt+0xbffc>
   1d29c:	ldr	r0, [fp, #-12]
   1d2a0:	sub	r0, r0, #1
   1d2a4:	movw	r1, #127	; 0x7f
   1d2a8:	cmp	r1, r0
   1d2ac:	blt	1d308 <__assert_fail@plt+0xbfd8>
   1d2b0:	b	1d32c <__assert_fail@plt+0xbffc>
   1d2b4:	ldr	r0, [fp, #-8]
   1d2b8:	ldr	r2, [r0]
   1d2bc:	ldr	r3, [r0, #4]
   1d2c0:	mvn	r0, #127	; 0x7f
   1d2c4:	mvn	r1, #0
   1d2c8:	bl	21090 <__assert_fail@plt+0xfd60>
   1d2cc:	ldr	r2, [fp, #-12]
   1d2d0:	subs	r0, r0, r2
   1d2d4:	sbcs	r1, r1, r2, asr #31
   1d2d8:	bcc	1d308 <__assert_fail@plt+0xbfd8>
   1d2dc:	b	1d32c <__assert_fail@plt+0xbffc>
   1d2e0:	ldr	r0, [fp, #-12]
   1d2e4:	mov	r1, #127	; 0x7f
   1d2e8:	sdiv	r0, r1, r0
   1d2ec:	ldr	r1, [fp, #-8]
   1d2f0:	ldr	r2, [r1]
   1d2f4:	ldr	r1, [r1, #4]
   1d2f8:	subs	r2, r0, r2
   1d2fc:	rscs	r0, r1, r0, asr #31
   1d300:	bcs	1d32c <__assert_fail@plt+0xbffc>
   1d304:	b	1d308 <__assert_fail@plt+0xbfd8>
   1d308:	ldr	r0, [fp, #-8]
   1d30c:	ldr	r0, [r0]
   1d310:	ldr	r1, [fp, #-12]
   1d314:	mul	r0, r0, r1
   1d318:	sxtb	r0, r0
   1d31c:	asr	r1, r0, #31
   1d320:	str	r0, [fp, #-24]	; 0xffffffe8
   1d324:	str	r1, [fp, #-20]	; 0xffffffec
   1d328:	b	1e8f0 <__assert_fail@plt+0xd5c0>
   1d32c:	ldr	r0, [fp, #-8]
   1d330:	ldr	r0, [r0]
   1d334:	ldr	r1, [fp, #-12]
   1d338:	mul	r0, r0, r1
   1d33c:	sxtb	r0, r0
   1d340:	asr	r1, r0, #31
   1d344:	str	r0, [fp, #-24]	; 0xffffffe8
   1d348:	str	r1, [fp, #-20]	; 0xffffffec
   1d34c:	b	1e90c <__assert_fail@plt+0xd5dc>
   1d350:	ldr	r0, [fp, #-12]
   1d354:	cmp	r0, #0
   1d358:	bge	1d48c <__assert_fail@plt+0xc15c>
   1d35c:	mov	r0, #1
   1d360:	cmp	r0, #0
   1d364:	bne	1d40c <__assert_fail@plt+0xc0dc>
   1d368:	b	1d36c <__assert_fail@plt+0xc03c>
   1d36c:	b	1d370 <__assert_fail@plt+0xc040>
   1d370:	ldr	r0, [fp, #-8]
   1d374:	ldr	r1, [r0]
   1d378:	ldr	r0, [r0, #4]
   1d37c:	ldr	r2, [fp, #-12]
   1d380:	mov	r3, #255	; 0xff
   1d384:	sdiv	r2, r3, r2
   1d388:	subs	r1, r1, r2
   1d38c:	sbcs	r0, r0, r2, asr #31
   1d390:	bcc	1d540 <__assert_fail@plt+0xc210>
   1d394:	b	1d564 <__assert_fail@plt+0xc234>
   1d398:	b	1d39c <__assert_fail@plt+0xc06c>
   1d39c:	ldr	r0, [pc, #3452]	; 1e120 <__assert_fail@plt+0xcdf0>
   1d3a0:	ldr	r1, [fp, #-12]
   1d3a4:	cmp	r1, r0
   1d3a8:	blt	1d3c0 <__assert_fail@plt+0xc090>
   1d3ac:	b	1d3cc <__assert_fail@plt+0xc09c>
   1d3b0:	ldr	r0, [fp, #-12]
   1d3b4:	movw	r1, #0
   1d3b8:	cmp	r1, r0
   1d3bc:	bge	1d3cc <__assert_fail@plt+0xc09c>
   1d3c0:	movw	r0, #0
   1d3c4:	str	r0, [fp, #-32]	; 0xffffffe0
   1d3c8:	b	1d3e4 <__assert_fail@plt+0xc0b4>
   1d3cc:	ldr	r0, [fp, #-12]
   1d3d0:	movw	r1, #0
   1d3d4:	sub	r0, r1, r0
   1d3d8:	movw	r1, #255	; 0xff
   1d3dc:	sdiv	r0, r1, r0
   1d3e0:	str	r0, [fp, #-32]	; 0xffffffe0
   1d3e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d3e8:	ldr	r1, [fp, #-8]
   1d3ec:	ldr	r2, [r1]
   1d3f0:	ldr	r1, [r1, #4]
   1d3f4:	mvn	r1, r1
   1d3f8:	mvn	r2, r2
   1d3fc:	subs	r2, r2, r0
   1d400:	sbcs	r0, r1, r0, asr #31
   1d404:	bcs	1d540 <__assert_fail@plt+0xc210>
   1d408:	b	1d564 <__assert_fail@plt+0xc234>
   1d40c:	b	1d410 <__assert_fail@plt+0xc0e0>
   1d410:	b	1d470 <__assert_fail@plt+0xc140>
   1d414:	b	1d470 <__assert_fail@plt+0xc140>
   1d418:	ldr	r0, [fp, #-12]
   1d41c:	cmn	r0, #1
   1d420:	bne	1d470 <__assert_fail@plt+0xc140>
   1d424:	b	1d444 <__assert_fail@plt+0xc114>
   1d428:	ldr	r0, [fp, #-8]
   1d42c:	ldr	r1, [r0]
   1d430:	ldr	r0, [r0, #4]
   1d434:	orr	r0, r1, r0
   1d438:	cmp	r0, #0
   1d43c:	bne	1d540 <__assert_fail@plt+0xc210>
   1d440:	b	1d564 <__assert_fail@plt+0xc234>
   1d444:	ldr	r0, [fp, #-8]
   1d448:	ldr	r1, [r0]
   1d44c:	ldr	r0, [r0, #4]
   1d450:	orr	r0, r1, r0
   1d454:	cmp	r0, #0
   1d458:	beq	1d564 <__assert_fail@plt+0xc234>
   1d45c:	b	1d460 <__assert_fail@plt+0xc130>
   1d460:	mov	r0, #0
   1d464:	cmp	r0, #0
   1d468:	bne	1d540 <__assert_fail@plt+0xc210>
   1d46c:	b	1d564 <__assert_fail@plt+0xc234>
   1d470:	ldr	r0, [fp, #-8]
   1d474:	ldr	r1, [r0]
   1d478:	ldr	r0, [r0, #4]
   1d47c:	orr	r0, r1, r0
   1d480:	cmp	r0, #0
   1d484:	bne	1d540 <__assert_fail@plt+0xc210>
   1d488:	b	1d564 <__assert_fail@plt+0xc234>
   1d48c:	ldr	r0, [fp, #-12]
   1d490:	cmp	r0, #0
   1d494:	bne	1d49c <__assert_fail@plt+0xc16c>
   1d498:	b	1d564 <__assert_fail@plt+0xc234>
   1d49c:	mov	r0, #1
   1d4a0:	cmp	r0, #0
   1d4a4:	bne	1d518 <__assert_fail@plt+0xc1e8>
   1d4a8:	b	1d4ac <__assert_fail@plt+0xc17c>
   1d4ac:	b	1d4b4 <__assert_fail@plt+0xc184>
   1d4b0:	b	1d4b8 <__assert_fail@plt+0xc188>
   1d4b4:	b	1d508 <__assert_fail@plt+0xc1d8>
   1d4b8:	ldr	r0, [fp, #-8]
   1d4bc:	ldr	r1, [r0]
   1d4c0:	ldr	r0, [r0, #4]
   1d4c4:	and	r0, r1, r0
   1d4c8:	cmn	r0, #1
   1d4cc:	bne	1d508 <__assert_fail@plt+0xc1d8>
   1d4d0:	b	1d4d4 <__assert_fail@plt+0xc1a4>
   1d4d4:	b	1d4d8 <__assert_fail@plt+0xc1a8>
   1d4d8:	ldr	r0, [fp, #-12]
   1d4dc:	add	r0, r0, #0
   1d4e0:	movw	r1, #0
   1d4e4:	cmp	r1, r0
   1d4e8:	blt	1d540 <__assert_fail@plt+0xc210>
   1d4ec:	b	1d564 <__assert_fail@plt+0xc234>
   1d4f0:	ldr	r0, [fp, #-12]
   1d4f4:	sub	r0, r0, #1
   1d4f8:	mvn	r1, #0
   1d4fc:	cmp	r1, r0
   1d500:	blt	1d540 <__assert_fail@plt+0xc210>
   1d504:	b	1d564 <__assert_fail@plt+0xc234>
   1d508:	ldr	r0, [fp, #-12]
   1d50c:	cmp	r0, #0
   1d510:	bne	1d540 <__assert_fail@plt+0xc210>
   1d514:	b	1d564 <__assert_fail@plt+0xc234>
   1d518:	ldr	r0, [fp, #-12]
   1d51c:	mov	r1, #255	; 0xff
   1d520:	sdiv	r0, r1, r0
   1d524:	ldr	r1, [fp, #-8]
   1d528:	ldr	r2, [r1]
   1d52c:	ldr	r1, [r1, #4]
   1d530:	subs	r2, r0, r2
   1d534:	rscs	r0, r1, r0, asr #31
   1d538:	bcs	1d564 <__assert_fail@plt+0xc234>
   1d53c:	b	1d540 <__assert_fail@plt+0xc210>
   1d540:	ldr	r0, [fp, #-8]
   1d544:	ldr	r0, [r0]
   1d548:	ldr	r1, [fp, #-12]
   1d54c:	mul	r0, r0, r1
   1d550:	uxtb	r0, r0
   1d554:	mov	r1, #0
   1d558:	str	r1, [fp, #-20]	; 0xffffffec
   1d55c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d560:	b	1e8f0 <__assert_fail@plt+0xd5c0>
   1d564:	ldr	r0, [fp, #-8]
   1d568:	ldr	r0, [r0]
   1d56c:	ldr	r1, [fp, #-12]
   1d570:	mul	r0, r0, r1
   1d574:	uxtb	r0, r0
   1d578:	mov	r1, #0
   1d57c:	str	r1, [fp, #-20]	; 0xffffffec
   1d580:	str	r0, [fp, #-24]	; 0xffffffe8
   1d584:	b	1e90c <__assert_fail@plt+0xd5dc>
   1d588:	b	1da48 <__assert_fail@plt+0xc718>
   1d58c:	b	1d810 <__assert_fail@plt+0xc4e0>
   1d590:	ldr	r0, [fp, #-12]
   1d594:	cmp	r0, #0
   1d598:	bge	1d6fc <__assert_fail@plt+0xc3cc>
   1d59c:	mov	r0, #1
   1d5a0:	cmp	r0, #0
   1d5a4:	bne	1d64c <__assert_fail@plt+0xc31c>
   1d5a8:	b	1d5ac <__assert_fail@plt+0xc27c>
   1d5ac:	b	1d5b0 <__assert_fail@plt+0xc280>
   1d5b0:	ldr	r0, [fp, #-8]
   1d5b4:	ldr	r1, [r0]
   1d5b8:	ldr	r0, [r0, #4]
   1d5bc:	ldr	r2, [fp, #-12]
   1d5c0:	movw	r3, #32767	; 0x7fff
   1d5c4:	sdiv	r2, r3, r2
   1d5c8:	subs	r1, r1, r2
   1d5cc:	sbcs	r0, r0, r2, asr #31
   1d5d0:	bcc	1d7c8 <__assert_fail@plt+0xc498>
   1d5d4:	b	1d7ec <__assert_fail@plt+0xc4bc>
   1d5d8:	b	1d5dc <__assert_fail@plt+0xc2ac>
   1d5dc:	ldr	r0, [pc, #2876]	; 1e120 <__assert_fail@plt+0xcdf0>
   1d5e0:	ldr	r1, [fp, #-12]
   1d5e4:	cmp	r1, r0
   1d5e8:	blt	1d600 <__assert_fail@plt+0xc2d0>
   1d5ec:	b	1d60c <__assert_fail@plt+0xc2dc>
   1d5f0:	ldr	r0, [fp, #-12]
   1d5f4:	movw	r1, #0
   1d5f8:	cmp	r1, r0
   1d5fc:	bge	1d60c <__assert_fail@plt+0xc2dc>
   1d600:	movw	r0, #0
   1d604:	str	r0, [fp, #-36]	; 0xffffffdc
   1d608:	b	1d624 <__assert_fail@plt+0xc2f4>
   1d60c:	ldr	r0, [fp, #-12]
   1d610:	movw	r1, #0
   1d614:	sub	r0, r1, r0
   1d618:	movw	r1, #32767	; 0x7fff
   1d61c:	sdiv	r0, r1, r0
   1d620:	str	r0, [fp, #-36]	; 0xffffffdc
   1d624:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d628:	ldr	r1, [fp, #-8]
   1d62c:	ldr	r2, [r1]
   1d630:	ldr	r1, [r1, #4]
   1d634:	mvn	r1, r1
   1d638:	mvn	r2, r2
   1d63c:	subs	r2, r2, r0
   1d640:	sbcs	r0, r1, r0, asr #31
   1d644:	bcs	1d7c8 <__assert_fail@plt+0xc498>
   1d648:	b	1d7ec <__assert_fail@plt+0xc4bc>
   1d64c:	b	1d650 <__assert_fail@plt+0xc320>
   1d650:	b	1d6d0 <__assert_fail@plt+0xc3a0>
   1d654:	b	1d6d0 <__assert_fail@plt+0xc3a0>
   1d658:	ldr	r0, [fp, #-12]
   1d65c:	cmn	r0, #1
   1d660:	bne	1d6d0 <__assert_fail@plt+0xc3a0>
   1d664:	b	1d688 <__assert_fail@plt+0xc358>
   1d668:	ldr	r0, [fp, #-8]
   1d66c:	ldr	r1, [r0]
   1d670:	ldr	r0, [r0, #4]
   1d674:	eor	r1, r1, #32768	; 0x8000
   1d678:	orr	r0, r1, r0
   1d67c:	cmp	r0, #0
   1d680:	bne	1d7c8 <__assert_fail@plt+0xc498>
   1d684:	b	1d7ec <__assert_fail@plt+0xc4bc>
   1d688:	ldr	r0, [fp, #-8]
   1d68c:	ldr	r1, [r0]
   1d690:	ldr	r0, [r0, #4]
   1d694:	orr	r0, r1, r0
   1d698:	cmp	r0, #0
   1d69c:	beq	1d7ec <__assert_fail@plt+0xc4bc>
   1d6a0:	b	1d6a4 <__assert_fail@plt+0xc374>
   1d6a4:	ldr	r0, [fp, #-8]
   1d6a8:	ldr	r1, [r0]
   1d6ac:	ldr	r0, [r0, #4]
   1d6b0:	subs	r1, r1, #1
   1d6b4:	sbc	r0, r0, #0
   1d6b8:	lsr	r1, r1, #15
   1d6bc:	orr	r1, r1, r0, lsl #17
   1d6c0:	orr	r0, r1, r0, lsr #15
   1d6c4:	cmp	r0, #0
   1d6c8:	bne	1d7c8 <__assert_fail@plt+0xc498>
   1d6cc:	b	1d7ec <__assert_fail@plt+0xc4bc>
   1d6d0:	ldr	r0, [fp, #-12]
   1d6d4:	movw	r1, #32768	; 0x8000
   1d6d8:	movt	r1, #65535	; 0xffff
   1d6dc:	sdiv	r0, r1, r0
   1d6e0:	ldr	r1, [fp, #-8]
   1d6e4:	ldr	r2, [r1]
   1d6e8:	ldr	r1, [r1, #4]
   1d6ec:	subs	r2, r0, r2
   1d6f0:	rscs	r0, r1, r0, asr #31
   1d6f4:	bcc	1d7c8 <__assert_fail@plt+0xc498>
   1d6f8:	b	1d7ec <__assert_fail@plt+0xc4bc>
   1d6fc:	ldr	r0, [fp, #-12]
   1d700:	cmp	r0, #0
   1d704:	bne	1d70c <__assert_fail@plt+0xc3dc>
   1d708:	b	1d7ec <__assert_fail@plt+0xc4bc>
   1d70c:	mov	r0, #1
   1d710:	cmp	r0, #0
   1d714:	bne	1d7a0 <__assert_fail@plt+0xc470>
   1d718:	b	1d71c <__assert_fail@plt+0xc3ec>
   1d71c:	ldr	r0, [fp, #-8]
   1d720:	ldr	r1, [r0]
   1d724:	ldr	r0, [r0, #4]
   1d728:	and	r0, r1, r0
   1d72c:	cmn	r0, #1
   1d730:	bne	1d770 <__assert_fail@plt+0xc440>
   1d734:	b	1d738 <__assert_fail@plt+0xc408>
   1d738:	b	1d73c <__assert_fail@plt+0xc40c>
   1d73c:	ldr	r0, [pc, #4020]	; 1e6f8 <__assert_fail@plt+0xd3c8>
   1d740:	ldr	r1, [fp, #-12]
   1d744:	add	r0, r1, r0
   1d748:	movw	r1, #0
   1d74c:	cmp	r1, r0
   1d750:	blt	1d7c8 <__assert_fail@plt+0xc498>
   1d754:	b	1d7ec <__assert_fail@plt+0xc4bc>
   1d758:	ldr	r0, [fp, #-12]
   1d75c:	sub	r0, r0, #1
   1d760:	movw	r1, #32767	; 0x7fff
   1d764:	cmp	r1, r0
   1d768:	blt	1d7c8 <__assert_fail@plt+0xc498>
   1d76c:	b	1d7ec <__assert_fail@plt+0xc4bc>
   1d770:	ldr	r0, [fp, #-8]
   1d774:	ldr	r2, [r0]
   1d778:	ldr	r3, [r0, #4]
   1d77c:	movw	r0, #32768	; 0x8000
   1d780:	movt	r0, #65535	; 0xffff
   1d784:	mvn	r1, #0
   1d788:	bl	21090 <__assert_fail@plt+0xfd60>
   1d78c:	ldr	r2, [fp, #-12]
   1d790:	subs	r0, r0, r2
   1d794:	sbcs	r1, r1, r2, asr #31
   1d798:	bcc	1d7c8 <__assert_fail@plt+0xc498>
   1d79c:	b	1d7ec <__assert_fail@plt+0xc4bc>
   1d7a0:	ldr	r0, [fp, #-12]
   1d7a4:	movw	r1, #32767	; 0x7fff
   1d7a8:	sdiv	r0, r1, r0
   1d7ac:	ldr	r1, [fp, #-8]
   1d7b0:	ldr	r2, [r1]
   1d7b4:	ldr	r1, [r1, #4]
   1d7b8:	subs	r2, r0, r2
   1d7bc:	rscs	r0, r1, r0, asr #31
   1d7c0:	bcs	1d7ec <__assert_fail@plt+0xc4bc>
   1d7c4:	b	1d7c8 <__assert_fail@plt+0xc498>
   1d7c8:	ldr	r0, [fp, #-8]
   1d7cc:	ldr	r0, [r0]
   1d7d0:	ldr	r1, [fp, #-12]
   1d7d4:	mul	r0, r0, r1
   1d7d8:	sxth	r0, r0
   1d7dc:	asr	r1, r0, #31
   1d7e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d7e4:	str	r1, [fp, #-20]	; 0xffffffec
   1d7e8:	b	1e8f0 <__assert_fail@plt+0xd5c0>
   1d7ec:	ldr	r0, [fp, #-8]
   1d7f0:	ldr	r0, [r0]
   1d7f4:	ldr	r1, [fp, #-12]
   1d7f8:	mul	r0, r0, r1
   1d7fc:	sxth	r0, r0
   1d800:	asr	r1, r0, #31
   1d804:	str	r0, [fp, #-24]	; 0xffffffe8
   1d808:	str	r1, [fp, #-20]	; 0xffffffec
   1d80c:	b	1e90c <__assert_fail@plt+0xd5dc>
   1d810:	ldr	r0, [fp, #-12]
   1d814:	cmp	r0, #0
   1d818:	bge	1d94c <__assert_fail@plt+0xc61c>
   1d81c:	mov	r0, #1
   1d820:	cmp	r0, #0
   1d824:	bne	1d8cc <__assert_fail@plt+0xc59c>
   1d828:	b	1d82c <__assert_fail@plt+0xc4fc>
   1d82c:	b	1d830 <__assert_fail@plt+0xc500>
   1d830:	ldr	r0, [fp, #-8]
   1d834:	ldr	r1, [r0]
   1d838:	ldr	r0, [r0, #4]
   1d83c:	ldr	r2, [fp, #-12]
   1d840:	movw	r3, #65535	; 0xffff
   1d844:	sdiv	r2, r3, r2
   1d848:	subs	r1, r1, r2
   1d84c:	sbcs	r0, r0, r2, asr #31
   1d850:	bcc	1da00 <__assert_fail@plt+0xc6d0>
   1d854:	b	1da24 <__assert_fail@plt+0xc6f4>
   1d858:	b	1d85c <__assert_fail@plt+0xc52c>
   1d85c:	ldr	r0, [pc, #2236]	; 1e120 <__assert_fail@plt+0xcdf0>
   1d860:	ldr	r1, [fp, #-12]
   1d864:	cmp	r1, r0
   1d868:	blt	1d880 <__assert_fail@plt+0xc550>
   1d86c:	b	1d88c <__assert_fail@plt+0xc55c>
   1d870:	ldr	r0, [fp, #-12]
   1d874:	movw	r1, #0
   1d878:	cmp	r1, r0
   1d87c:	bge	1d88c <__assert_fail@plt+0xc55c>
   1d880:	movw	r0, #0
   1d884:	str	r0, [fp, #-40]	; 0xffffffd8
   1d888:	b	1d8a4 <__assert_fail@plt+0xc574>
   1d88c:	ldr	r0, [fp, #-12]
   1d890:	movw	r1, #0
   1d894:	sub	r0, r1, r0
   1d898:	movw	r1, #65535	; 0xffff
   1d89c:	sdiv	r0, r1, r0
   1d8a0:	str	r0, [fp, #-40]	; 0xffffffd8
   1d8a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d8a8:	ldr	r1, [fp, #-8]
   1d8ac:	ldr	r2, [r1]
   1d8b0:	ldr	r1, [r1, #4]
   1d8b4:	mvn	r1, r1
   1d8b8:	mvn	r2, r2
   1d8bc:	subs	r2, r2, r0
   1d8c0:	sbcs	r0, r1, r0, asr #31
   1d8c4:	bcs	1da00 <__assert_fail@plt+0xc6d0>
   1d8c8:	b	1da24 <__assert_fail@plt+0xc6f4>
   1d8cc:	b	1d8d0 <__assert_fail@plt+0xc5a0>
   1d8d0:	b	1d930 <__assert_fail@plt+0xc600>
   1d8d4:	b	1d930 <__assert_fail@plt+0xc600>
   1d8d8:	ldr	r0, [fp, #-12]
   1d8dc:	cmn	r0, #1
   1d8e0:	bne	1d930 <__assert_fail@plt+0xc600>
   1d8e4:	b	1d904 <__assert_fail@plt+0xc5d4>
   1d8e8:	ldr	r0, [fp, #-8]
   1d8ec:	ldr	r1, [r0]
   1d8f0:	ldr	r0, [r0, #4]
   1d8f4:	orr	r0, r1, r0
   1d8f8:	cmp	r0, #0
   1d8fc:	bne	1da00 <__assert_fail@plt+0xc6d0>
   1d900:	b	1da24 <__assert_fail@plt+0xc6f4>
   1d904:	ldr	r0, [fp, #-8]
   1d908:	ldr	r1, [r0]
   1d90c:	ldr	r0, [r0, #4]
   1d910:	orr	r0, r1, r0
   1d914:	cmp	r0, #0
   1d918:	beq	1da24 <__assert_fail@plt+0xc6f4>
   1d91c:	b	1d920 <__assert_fail@plt+0xc5f0>
   1d920:	mov	r0, #0
   1d924:	cmp	r0, #0
   1d928:	bne	1da00 <__assert_fail@plt+0xc6d0>
   1d92c:	b	1da24 <__assert_fail@plt+0xc6f4>
   1d930:	ldr	r0, [fp, #-8]
   1d934:	ldr	r1, [r0]
   1d938:	ldr	r0, [r0, #4]
   1d93c:	orr	r0, r1, r0
   1d940:	cmp	r0, #0
   1d944:	bne	1da00 <__assert_fail@plt+0xc6d0>
   1d948:	b	1da24 <__assert_fail@plt+0xc6f4>
   1d94c:	ldr	r0, [fp, #-12]
   1d950:	cmp	r0, #0
   1d954:	bne	1d95c <__assert_fail@plt+0xc62c>
   1d958:	b	1da24 <__assert_fail@plt+0xc6f4>
   1d95c:	mov	r0, #1
   1d960:	cmp	r0, #0
   1d964:	bne	1d9d8 <__assert_fail@plt+0xc6a8>
   1d968:	b	1d96c <__assert_fail@plt+0xc63c>
   1d96c:	b	1d974 <__assert_fail@plt+0xc644>
   1d970:	b	1d978 <__assert_fail@plt+0xc648>
   1d974:	b	1d9c8 <__assert_fail@plt+0xc698>
   1d978:	ldr	r0, [fp, #-8]
   1d97c:	ldr	r1, [r0]
   1d980:	ldr	r0, [r0, #4]
   1d984:	and	r0, r1, r0
   1d988:	cmn	r0, #1
   1d98c:	bne	1d9c8 <__assert_fail@plt+0xc698>
   1d990:	b	1d994 <__assert_fail@plt+0xc664>
   1d994:	b	1d998 <__assert_fail@plt+0xc668>
   1d998:	ldr	r0, [fp, #-12]
   1d99c:	add	r0, r0, #0
   1d9a0:	movw	r1, #0
   1d9a4:	cmp	r1, r0
   1d9a8:	blt	1da00 <__assert_fail@plt+0xc6d0>
   1d9ac:	b	1da24 <__assert_fail@plt+0xc6f4>
   1d9b0:	ldr	r0, [fp, #-12]
   1d9b4:	sub	r0, r0, #1
   1d9b8:	mvn	r1, #0
   1d9bc:	cmp	r1, r0
   1d9c0:	blt	1da00 <__assert_fail@plt+0xc6d0>
   1d9c4:	b	1da24 <__assert_fail@plt+0xc6f4>
   1d9c8:	ldr	r0, [fp, #-12]
   1d9cc:	cmp	r0, #0
   1d9d0:	bne	1da00 <__assert_fail@plt+0xc6d0>
   1d9d4:	b	1da24 <__assert_fail@plt+0xc6f4>
   1d9d8:	ldr	r0, [fp, #-12]
   1d9dc:	movw	r1, #65535	; 0xffff
   1d9e0:	sdiv	r0, r1, r0
   1d9e4:	ldr	r1, [fp, #-8]
   1d9e8:	ldr	r2, [r1]
   1d9ec:	ldr	r1, [r1, #4]
   1d9f0:	subs	r2, r0, r2
   1d9f4:	rscs	r0, r1, r0, asr #31
   1d9f8:	bcs	1da24 <__assert_fail@plt+0xc6f4>
   1d9fc:	b	1da00 <__assert_fail@plt+0xc6d0>
   1da00:	ldr	r0, [fp, #-8]
   1da04:	ldr	r0, [r0]
   1da08:	ldr	r1, [fp, #-12]
   1da0c:	mul	r0, r0, r1
   1da10:	uxth	r0, r0
   1da14:	mov	r1, #0
   1da18:	str	r1, [fp, #-20]	; 0xffffffec
   1da1c:	str	r0, [fp, #-24]	; 0xffffffe8
   1da20:	b	1e8f0 <__assert_fail@plt+0xd5c0>
   1da24:	ldr	r0, [fp, #-8]
   1da28:	ldr	r0, [r0]
   1da2c:	ldr	r1, [fp, #-12]
   1da30:	mul	r0, r0, r1
   1da34:	uxth	r0, r0
   1da38:	mov	r1, #0
   1da3c:	str	r1, [fp, #-20]	; 0xffffffec
   1da40:	str	r0, [fp, #-24]	; 0xffffffe8
   1da44:	b	1e90c <__assert_fail@plt+0xd5dc>
   1da48:	b	1dedc <__assert_fail@plt+0xcbac>
   1da4c:	b	1dcac <__assert_fail@plt+0xc97c>
   1da50:	ldr	r0, [fp, #-12]
   1da54:	cmp	r0, #0
   1da58:	bge	1dba8 <__assert_fail@plt+0xc878>
   1da5c:	mov	r0, #1
   1da60:	cmp	r0, #0
   1da64:	bne	1db0c <__assert_fail@plt+0xc7dc>
   1da68:	b	1da6c <__assert_fail@plt+0xc73c>
   1da6c:	b	1da70 <__assert_fail@plt+0xc740>
   1da70:	ldr	r0, [fp, #-8]
   1da74:	ldr	r1, [r0]
   1da78:	ldr	r0, [r0, #4]
   1da7c:	ldr	r2, [fp, #-12]
   1da80:	mvn	r3, #-2147483648	; 0x80000000
   1da84:	sdiv	r2, r3, r2
   1da88:	subs	r1, r1, r2
   1da8c:	sbcs	r0, r0, r2, asr #31
   1da90:	bcc	1dc6c <__assert_fail@plt+0xc93c>
   1da94:	b	1dc8c <__assert_fail@plt+0xc95c>
   1da98:	b	1da9c <__assert_fail@plt+0xc76c>
   1da9c:	ldr	r0, [pc, #3728]	; 1e934 <__assert_fail@plt+0xd604>
   1daa0:	ldr	r1, [fp, #-12]
   1daa4:	cmp	r1, r0
   1daa8:	blt	1dac0 <__assert_fail@plt+0xc790>
   1daac:	b	1dacc <__assert_fail@plt+0xc79c>
   1dab0:	ldr	r0, [fp, #-12]
   1dab4:	movw	r1, #0
   1dab8:	cmp	r1, r0
   1dabc:	bge	1dacc <__assert_fail@plt+0xc79c>
   1dac0:	movw	r0, #0
   1dac4:	str	r0, [fp, #-44]	; 0xffffffd4
   1dac8:	b	1dae4 <__assert_fail@plt+0xc7b4>
   1dacc:	ldr	r0, [pc, #3684]	; 1e938 <__assert_fail@plt+0xd608>
   1dad0:	ldr	r1, [fp, #-12]
   1dad4:	movw	r2, #0
   1dad8:	sub	r1, r2, r1
   1dadc:	sdiv	r0, r0, r1
   1dae0:	str	r0, [fp, #-44]	; 0xffffffd4
   1dae4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dae8:	ldr	r1, [fp, #-8]
   1daec:	ldr	r2, [r1]
   1daf0:	ldr	r1, [r1, #4]
   1daf4:	mvn	r1, r1
   1daf8:	mvn	r2, r2
   1dafc:	subs	r2, r2, r0
   1db00:	sbcs	r0, r1, r0, asr #31
   1db04:	bcs	1dc6c <__assert_fail@plt+0xc93c>
   1db08:	b	1dc8c <__assert_fail@plt+0xc95c>
   1db0c:	ldr	r0, [fp, #-12]
   1db10:	cmn	r0, #1
   1db14:	bne	1db80 <__assert_fail@plt+0xc850>
   1db18:	b	1db3c <__assert_fail@plt+0xc80c>
   1db1c:	ldr	r0, [fp, #-8]
   1db20:	ldr	r1, [r0]
   1db24:	ldr	r0, [r0, #4]
   1db28:	eor	r1, r1, #-2147483648	; 0x80000000
   1db2c:	orr	r0, r1, r0
   1db30:	cmp	r0, #0
   1db34:	bne	1dc6c <__assert_fail@plt+0xc93c>
   1db38:	b	1dc8c <__assert_fail@plt+0xc95c>
   1db3c:	ldr	r0, [fp, #-8]
   1db40:	ldr	r1, [r0]
   1db44:	ldr	r0, [r0, #4]
   1db48:	orr	r0, r1, r0
   1db4c:	cmp	r0, #0
   1db50:	beq	1dc8c <__assert_fail@plt+0xc95c>
   1db54:	b	1db58 <__assert_fail@plt+0xc828>
   1db58:	ldr	r0, [fp, #-8]
   1db5c:	ldr	r1, [r0]
   1db60:	ldr	r0, [r0, #4]
   1db64:	subs	r1, r1, #1
   1db68:	sbc	r0, r0, #0
   1db6c:	mvn	r2, #-2147483648	; 0x80000000
   1db70:	subs	r1, r2, r1
   1db74:	rscs	r0, r0, #0
   1db78:	bcc	1dc6c <__assert_fail@plt+0xc93c>
   1db7c:	b	1dc8c <__assert_fail@plt+0xc95c>
   1db80:	ldr	r0, [fp, #-12]
   1db84:	mov	r1, #-2147483648	; 0x80000000
   1db88:	sdiv	r0, r1, r0
   1db8c:	ldr	r1, [fp, #-8]
   1db90:	ldr	r2, [r1]
   1db94:	ldr	r1, [r1, #4]
   1db98:	subs	r2, r0, r2
   1db9c:	rscs	r0, r1, r0, asr #31
   1dba0:	bcc	1dc6c <__assert_fail@plt+0xc93c>
   1dba4:	b	1dc8c <__assert_fail@plt+0xc95c>
   1dba8:	ldr	r0, [fp, #-12]
   1dbac:	cmp	r0, #0
   1dbb0:	bne	1dbb8 <__assert_fail@plt+0xc888>
   1dbb4:	b	1dc8c <__assert_fail@plt+0xc95c>
   1dbb8:	mov	r0, #1
   1dbbc:	cmp	r0, #0
   1dbc0:	bne	1dc44 <__assert_fail@plt+0xc914>
   1dbc4:	b	1dbc8 <__assert_fail@plt+0xc898>
   1dbc8:	ldr	r0, [fp, #-8]
   1dbcc:	ldr	r1, [r0]
   1dbd0:	ldr	r0, [r0, #4]
   1dbd4:	and	r0, r1, r0
   1dbd8:	cmn	r0, #1
   1dbdc:	bne	1dc18 <__assert_fail@plt+0xc8e8>
   1dbe0:	b	1dbe4 <__assert_fail@plt+0xc8b4>
   1dbe4:	b	1dbe8 <__assert_fail@plt+0xc8b8>
   1dbe8:	ldr	r0, [fp, #-12]
   1dbec:	add	r0, r0, #-2147483648	; 0x80000000
   1dbf0:	movw	r1, #0
   1dbf4:	cmp	r1, r0
   1dbf8:	blt	1dc6c <__assert_fail@plt+0xc93c>
   1dbfc:	b	1dc8c <__assert_fail@plt+0xc95c>
   1dc00:	ldr	r0, [pc, #3376]	; 1e938 <__assert_fail@plt+0xd608>
   1dc04:	ldr	r1, [fp, #-12]
   1dc08:	sub	r1, r1, #1
   1dc0c:	cmp	r0, r1
   1dc10:	blt	1dc6c <__assert_fail@plt+0xc93c>
   1dc14:	b	1dc8c <__assert_fail@plt+0xc95c>
   1dc18:	ldr	r0, [fp, #-8]
   1dc1c:	ldr	r2, [r0]
   1dc20:	ldr	r3, [r0, #4]
   1dc24:	mov	r0, #-2147483648	; 0x80000000
   1dc28:	mvn	r1, #0
   1dc2c:	bl	21090 <__assert_fail@plt+0xfd60>
   1dc30:	ldr	r2, [fp, #-12]
   1dc34:	subs	r0, r0, r2
   1dc38:	sbcs	r1, r1, r2, asr #31
   1dc3c:	bcc	1dc6c <__assert_fail@plt+0xc93c>
   1dc40:	b	1dc8c <__assert_fail@plt+0xc95c>
   1dc44:	ldr	r0, [fp, #-12]
   1dc48:	mvn	r1, #-2147483648	; 0x80000000
   1dc4c:	sdiv	r0, r1, r0
   1dc50:	ldr	r1, [fp, #-8]
   1dc54:	ldr	r2, [r1]
   1dc58:	ldr	r1, [r1, #4]
   1dc5c:	subs	r2, r0, r2
   1dc60:	rscs	r0, r1, r0, asr #31
   1dc64:	bcs	1dc8c <__assert_fail@plt+0xc95c>
   1dc68:	b	1dc6c <__assert_fail@plt+0xc93c>
   1dc6c:	ldr	r0, [fp, #-8]
   1dc70:	ldr	r0, [r0]
   1dc74:	ldr	r1, [fp, #-12]
   1dc78:	mul	r0, r0, r1
   1dc7c:	asr	r1, r0, #31
   1dc80:	str	r0, [fp, #-24]	; 0xffffffe8
   1dc84:	str	r1, [fp, #-20]	; 0xffffffec
   1dc88:	b	1e8f0 <__assert_fail@plt+0xd5c0>
   1dc8c:	ldr	r0, [fp, #-8]
   1dc90:	ldr	r0, [r0]
   1dc94:	ldr	r1, [fp, #-12]
   1dc98:	mul	r0, r0, r1
   1dc9c:	asr	r1, r0, #31
   1dca0:	str	r0, [fp, #-24]	; 0xffffffe8
   1dca4:	str	r1, [fp, #-20]	; 0xffffffec
   1dca8:	b	1e90c <__assert_fail@plt+0xd5dc>
   1dcac:	ldr	r0, [fp, #-12]
   1dcb0:	cmp	r0, #0
   1dcb4:	bge	1dde8 <__assert_fail@plt+0xcab8>
   1dcb8:	mov	r0, #1
   1dcbc:	cmp	r0, #0
   1dcc0:	bne	1dd68 <__assert_fail@plt+0xca38>
   1dcc4:	b	1dcc8 <__assert_fail@plt+0xc998>
   1dcc8:	b	1dcf4 <__assert_fail@plt+0xc9c4>
   1dccc:	ldr	r0, [fp, #-8]
   1dcd0:	ldr	r1, [r0]
   1dcd4:	ldr	r0, [r0, #4]
   1dcd8:	ldr	r2, [fp, #-12]
   1dcdc:	mvn	r3, #0
   1dce0:	udiv	r2, r3, r2
   1dce4:	subs	r1, r1, r2
   1dce8:	sbcs	r0, r0, #0
   1dcec:	bcc	1de9c <__assert_fail@plt+0xcb6c>
   1dcf0:	b	1debc <__assert_fail@plt+0xcb8c>
   1dcf4:	b	1dcf8 <__assert_fail@plt+0xc9c8>
   1dcf8:	ldr	r0, [pc, #3124]	; 1e934 <__assert_fail@plt+0xd604>
   1dcfc:	ldr	r1, [fp, #-12]
   1dd00:	cmp	r1, r0
   1dd04:	blt	1dd1c <__assert_fail@plt+0xc9ec>
   1dd08:	b	1dd28 <__assert_fail@plt+0xc9f8>
   1dd0c:	ldr	r0, [fp, #-12]
   1dd10:	movw	r1, #0
   1dd14:	cmp	r1, r0
   1dd18:	bge	1dd28 <__assert_fail@plt+0xc9f8>
   1dd1c:	movw	r0, #1
   1dd20:	str	r0, [fp, #-48]	; 0xffffffd0
   1dd24:	b	1dd40 <__assert_fail@plt+0xca10>
   1dd28:	ldr	r0, [fp, #-12]
   1dd2c:	movw	r1, #0
   1dd30:	sub	r0, r1, r0
   1dd34:	mvn	r1, #0
   1dd38:	udiv	r0, r1, r0
   1dd3c:	str	r0, [fp, #-48]	; 0xffffffd0
   1dd40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1dd44:	ldr	r1, [fp, #-8]
   1dd48:	ldr	r2, [r1]
   1dd4c:	ldr	r1, [r1, #4]
   1dd50:	mvn	r1, r1
   1dd54:	mvn	r2, r2
   1dd58:	subs	r0, r2, r0
   1dd5c:	sbcs	r1, r1, #0
   1dd60:	bcs	1de9c <__assert_fail@plt+0xcb6c>
   1dd64:	b	1debc <__assert_fail@plt+0xcb8c>
   1dd68:	b	1dd6c <__assert_fail@plt+0xca3c>
   1dd6c:	b	1ddcc <__assert_fail@plt+0xca9c>
   1dd70:	b	1ddcc <__assert_fail@plt+0xca9c>
   1dd74:	ldr	r0, [fp, #-12]
   1dd78:	cmn	r0, #1
   1dd7c:	bne	1ddcc <__assert_fail@plt+0xca9c>
   1dd80:	b	1dda0 <__assert_fail@plt+0xca70>
   1dd84:	ldr	r0, [fp, #-8]
   1dd88:	ldr	r1, [r0]
   1dd8c:	ldr	r0, [r0, #4]
   1dd90:	orr	r0, r1, r0
   1dd94:	cmp	r0, #0
   1dd98:	bne	1de9c <__assert_fail@plt+0xcb6c>
   1dd9c:	b	1debc <__assert_fail@plt+0xcb8c>
   1dda0:	ldr	r0, [fp, #-8]
   1dda4:	ldr	r1, [r0]
   1dda8:	ldr	r0, [r0, #4]
   1ddac:	orr	r0, r1, r0
   1ddb0:	cmp	r0, #0
   1ddb4:	beq	1debc <__assert_fail@plt+0xcb8c>
   1ddb8:	b	1ddbc <__assert_fail@plt+0xca8c>
   1ddbc:	mov	r0, #0
   1ddc0:	cmp	r0, #0
   1ddc4:	bne	1de9c <__assert_fail@plt+0xcb6c>
   1ddc8:	b	1debc <__assert_fail@plt+0xcb8c>
   1ddcc:	ldr	r0, [fp, #-8]
   1ddd0:	ldr	r1, [r0]
   1ddd4:	ldr	r0, [r0, #4]
   1ddd8:	orr	r0, r1, r0
   1dddc:	cmp	r0, #0
   1dde0:	bne	1de9c <__assert_fail@plt+0xcb6c>
   1dde4:	b	1debc <__assert_fail@plt+0xcb8c>
   1dde8:	ldr	r0, [fp, #-12]
   1ddec:	cmp	r0, #0
   1ddf0:	bne	1ddf8 <__assert_fail@plt+0xcac8>
   1ddf4:	b	1debc <__assert_fail@plt+0xcb8c>
   1ddf8:	mov	r0, #1
   1ddfc:	cmp	r0, #0
   1de00:	bne	1de74 <__assert_fail@plt+0xcb44>
   1de04:	b	1de08 <__assert_fail@plt+0xcad8>
   1de08:	b	1de10 <__assert_fail@plt+0xcae0>
   1de0c:	b	1de14 <__assert_fail@plt+0xcae4>
   1de10:	b	1de64 <__assert_fail@plt+0xcb34>
   1de14:	ldr	r0, [fp, #-8]
   1de18:	ldr	r1, [r0]
   1de1c:	ldr	r0, [r0, #4]
   1de20:	and	r0, r1, r0
   1de24:	cmn	r0, #1
   1de28:	bne	1de64 <__assert_fail@plt+0xcb34>
   1de2c:	b	1de30 <__assert_fail@plt+0xcb00>
   1de30:	b	1de34 <__assert_fail@plt+0xcb04>
   1de34:	ldr	r0, [fp, #-12]
   1de38:	add	r0, r0, #0
   1de3c:	movw	r1, #0
   1de40:	cmp	r1, r0
   1de44:	blt	1de9c <__assert_fail@plt+0xcb6c>
   1de48:	b	1debc <__assert_fail@plt+0xcb8c>
   1de4c:	ldr	r0, [fp, #-12]
   1de50:	sub	r0, r0, #1
   1de54:	mvn	r1, #0
   1de58:	cmp	r1, r0
   1de5c:	blt	1de9c <__assert_fail@plt+0xcb6c>
   1de60:	b	1debc <__assert_fail@plt+0xcb8c>
   1de64:	ldr	r0, [fp, #-12]
   1de68:	cmp	r0, #0
   1de6c:	bne	1de9c <__assert_fail@plt+0xcb6c>
   1de70:	b	1debc <__assert_fail@plt+0xcb8c>
   1de74:	ldr	r0, [fp, #-12]
   1de78:	mvn	r1, #0
   1de7c:	udiv	r0, r1, r0
   1de80:	ldr	r1, [fp, #-8]
   1de84:	ldr	r2, [r1]
   1de88:	ldr	r1, [r1, #4]
   1de8c:	subs	r0, r0, r2
   1de90:	rscs	r1, r1, #0
   1de94:	bcs	1debc <__assert_fail@plt+0xcb8c>
   1de98:	b	1de9c <__assert_fail@plt+0xcb6c>
   1de9c:	ldr	r0, [fp, #-8]
   1dea0:	ldr	r0, [r0]
   1dea4:	ldr	r1, [fp, #-12]
   1dea8:	mul	r0, r0, r1
   1deac:	mov	r1, #0
   1deb0:	str	r1, [fp, #-20]	; 0xffffffec
   1deb4:	str	r0, [fp, #-24]	; 0xffffffe8
   1deb8:	b	1e8f0 <__assert_fail@plt+0xd5c0>
   1debc:	ldr	r0, [fp, #-8]
   1dec0:	ldr	r0, [r0]
   1dec4:	ldr	r1, [fp, #-12]
   1dec8:	mul	r0, r0, r1
   1decc:	mov	r1, #0
   1ded0:	str	r1, [fp, #-20]	; 0xffffffec
   1ded4:	str	r0, [fp, #-24]	; 0xffffffe8
   1ded8:	b	1e90c <__assert_fail@plt+0xd5dc>
   1dedc:	b	1e374 <__assert_fail@plt+0xd044>
   1dee0:	b	1e144 <__assert_fail@plt+0xce14>
   1dee4:	ldr	r0, [fp, #-12]
   1dee8:	cmp	r0, #0
   1deec:	bge	1e03c <__assert_fail@plt+0xcd0c>
   1def0:	mov	r0, #1
   1def4:	cmp	r0, #0
   1def8:	bne	1dfa0 <__assert_fail@plt+0xcc70>
   1defc:	b	1df00 <__assert_fail@plt+0xcbd0>
   1df00:	b	1df04 <__assert_fail@plt+0xcbd4>
   1df04:	ldr	r0, [fp, #-8]
   1df08:	ldr	r1, [r0]
   1df0c:	ldr	r0, [r0, #4]
   1df10:	ldr	r2, [fp, #-12]
   1df14:	mvn	r3, #-2147483648	; 0x80000000
   1df18:	sdiv	r2, r3, r2
   1df1c:	subs	r1, r1, r2
   1df20:	sbcs	r0, r0, r2, asr #31
   1df24:	bcc	1e100 <__assert_fail@plt+0xcdd0>
   1df28:	b	1e124 <__assert_fail@plt+0xcdf4>
   1df2c:	b	1df30 <__assert_fail@plt+0xcc00>
   1df30:	ldr	r0, [pc, #2556]	; 1e934 <__assert_fail@plt+0xd604>
   1df34:	ldr	r1, [fp, #-12]
   1df38:	cmp	r1, r0
   1df3c:	blt	1df54 <__assert_fail@plt+0xcc24>
   1df40:	b	1df60 <__assert_fail@plt+0xcc30>
   1df44:	ldr	r0, [fp, #-12]
   1df48:	movw	r1, #0
   1df4c:	cmp	r1, r0
   1df50:	bge	1df60 <__assert_fail@plt+0xcc30>
   1df54:	movw	r0, #0
   1df58:	str	r0, [fp, #-52]	; 0xffffffcc
   1df5c:	b	1df78 <__assert_fail@plt+0xcc48>
   1df60:	ldr	r0, [pc, #2512]	; 1e938 <__assert_fail@plt+0xd608>
   1df64:	ldr	r1, [fp, #-12]
   1df68:	movw	r2, #0
   1df6c:	sub	r1, r2, r1
   1df70:	sdiv	r0, r0, r1
   1df74:	str	r0, [fp, #-52]	; 0xffffffcc
   1df78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1df7c:	ldr	r1, [fp, #-8]
   1df80:	ldr	r2, [r1]
   1df84:	ldr	r1, [r1, #4]
   1df88:	mvn	r1, r1
   1df8c:	mvn	r2, r2
   1df90:	subs	r2, r2, r0
   1df94:	sbcs	r0, r1, r0, asr #31
   1df98:	bcs	1e100 <__assert_fail@plt+0xcdd0>
   1df9c:	b	1e124 <__assert_fail@plt+0xcdf4>
   1dfa0:	ldr	r0, [fp, #-12]
   1dfa4:	cmn	r0, #1
   1dfa8:	bne	1e014 <__assert_fail@plt+0xcce4>
   1dfac:	b	1dfd0 <__assert_fail@plt+0xcca0>
   1dfb0:	ldr	r0, [fp, #-8]
   1dfb4:	ldr	r1, [r0]
   1dfb8:	ldr	r0, [r0, #4]
   1dfbc:	eor	r1, r1, #-2147483648	; 0x80000000
   1dfc0:	orr	r0, r1, r0
   1dfc4:	cmp	r0, #0
   1dfc8:	bne	1e100 <__assert_fail@plt+0xcdd0>
   1dfcc:	b	1e124 <__assert_fail@plt+0xcdf4>
   1dfd0:	ldr	r0, [fp, #-8]
   1dfd4:	ldr	r1, [r0]
   1dfd8:	ldr	r0, [r0, #4]
   1dfdc:	orr	r0, r1, r0
   1dfe0:	cmp	r0, #0
   1dfe4:	beq	1e124 <__assert_fail@plt+0xcdf4>
   1dfe8:	b	1dfec <__assert_fail@plt+0xccbc>
   1dfec:	ldr	r0, [fp, #-8]
   1dff0:	ldr	r1, [r0]
   1dff4:	ldr	r0, [r0, #4]
   1dff8:	subs	r1, r1, #1
   1dffc:	sbc	r0, r0, #0
   1e000:	mvn	r2, #-2147483648	; 0x80000000
   1e004:	subs	r1, r2, r1
   1e008:	rscs	r0, r0, #0
   1e00c:	bcc	1e100 <__assert_fail@plt+0xcdd0>
   1e010:	b	1e124 <__assert_fail@plt+0xcdf4>
   1e014:	ldr	r0, [fp, #-12]
   1e018:	mov	r1, #-2147483648	; 0x80000000
   1e01c:	sdiv	r0, r1, r0
   1e020:	ldr	r1, [fp, #-8]
   1e024:	ldr	r2, [r1]
   1e028:	ldr	r1, [r1, #4]
   1e02c:	subs	r2, r0, r2
   1e030:	rscs	r0, r1, r0, asr #31
   1e034:	bcc	1e100 <__assert_fail@plt+0xcdd0>
   1e038:	b	1e124 <__assert_fail@plt+0xcdf4>
   1e03c:	ldr	r0, [fp, #-12]
   1e040:	cmp	r0, #0
   1e044:	bne	1e04c <__assert_fail@plt+0xcd1c>
   1e048:	b	1e124 <__assert_fail@plt+0xcdf4>
   1e04c:	mov	r0, #1
   1e050:	cmp	r0, #0
   1e054:	bne	1e0d8 <__assert_fail@plt+0xcda8>
   1e058:	b	1e05c <__assert_fail@plt+0xcd2c>
   1e05c:	ldr	r0, [fp, #-8]
   1e060:	ldr	r1, [r0]
   1e064:	ldr	r0, [r0, #4]
   1e068:	and	r0, r1, r0
   1e06c:	cmn	r0, #1
   1e070:	bne	1e0ac <__assert_fail@plt+0xcd7c>
   1e074:	b	1e078 <__assert_fail@plt+0xcd48>
   1e078:	b	1e07c <__assert_fail@plt+0xcd4c>
   1e07c:	ldr	r0, [fp, #-12]
   1e080:	add	r0, r0, #-2147483648	; 0x80000000
   1e084:	movw	r1, #0
   1e088:	cmp	r1, r0
   1e08c:	blt	1e100 <__assert_fail@plt+0xcdd0>
   1e090:	b	1e124 <__assert_fail@plt+0xcdf4>
   1e094:	ldr	r0, [pc, #2204]	; 1e938 <__assert_fail@plt+0xd608>
   1e098:	ldr	r1, [fp, #-12]
   1e09c:	sub	r1, r1, #1
   1e0a0:	cmp	r0, r1
   1e0a4:	blt	1e100 <__assert_fail@plt+0xcdd0>
   1e0a8:	b	1e124 <__assert_fail@plt+0xcdf4>
   1e0ac:	ldr	r0, [fp, #-8]
   1e0b0:	ldr	r2, [r0]
   1e0b4:	ldr	r3, [r0, #4]
   1e0b8:	mov	r0, #-2147483648	; 0x80000000
   1e0bc:	mvn	r1, #0
   1e0c0:	bl	21090 <__assert_fail@plt+0xfd60>
   1e0c4:	ldr	r2, [fp, #-12]
   1e0c8:	subs	r0, r0, r2
   1e0cc:	sbcs	r1, r1, r2, asr #31
   1e0d0:	bcc	1e100 <__assert_fail@plt+0xcdd0>
   1e0d4:	b	1e124 <__assert_fail@plt+0xcdf4>
   1e0d8:	ldr	r0, [fp, #-12]
   1e0dc:	mvn	r1, #-2147483648	; 0x80000000
   1e0e0:	sdiv	r0, r1, r0
   1e0e4:	ldr	r1, [fp, #-8]
   1e0e8:	ldr	r2, [r1]
   1e0ec:	ldr	r1, [r1, #4]
   1e0f0:	subs	r2, r0, r2
   1e0f4:	rscs	r0, r1, r0, asr #31
   1e0f8:	bcs	1e124 <__assert_fail@plt+0xcdf4>
   1e0fc:	b	1e100 <__assert_fail@plt+0xcdd0>
   1e100:	ldr	r0, [fp, #-8]
   1e104:	ldr	r0, [r0]
   1e108:	ldr	r1, [fp, #-12]
   1e10c:	mul	r0, r0, r1
   1e110:	asr	r1, r0, #31
   1e114:	str	r0, [fp, #-24]	; 0xffffffe8
   1e118:	str	r1, [fp, #-20]	; 0xffffffec
   1e11c:	b	1e8f0 <__assert_fail@plt+0xd5c0>
   1e120:	andhi	r0, r0, r1
   1e124:	ldr	r0, [fp, #-8]
   1e128:	ldr	r0, [r0]
   1e12c:	ldr	r1, [fp, #-12]
   1e130:	mul	r0, r0, r1
   1e134:	asr	r1, r0, #31
   1e138:	str	r0, [fp, #-24]	; 0xffffffe8
   1e13c:	str	r1, [fp, #-20]	; 0xffffffec
   1e140:	b	1e90c <__assert_fail@plt+0xd5dc>
   1e144:	ldr	r0, [fp, #-12]
   1e148:	cmp	r0, #0
   1e14c:	bge	1e280 <__assert_fail@plt+0xcf50>
   1e150:	mov	r0, #1
   1e154:	cmp	r0, #0
   1e158:	bne	1e200 <__assert_fail@plt+0xced0>
   1e15c:	b	1e160 <__assert_fail@plt+0xce30>
   1e160:	b	1e18c <__assert_fail@plt+0xce5c>
   1e164:	ldr	r0, [fp, #-8]
   1e168:	ldr	r1, [r0]
   1e16c:	ldr	r0, [r0, #4]
   1e170:	ldr	r2, [fp, #-12]
   1e174:	mvn	r3, #0
   1e178:	udiv	r2, r3, r2
   1e17c:	subs	r1, r1, r2
   1e180:	sbcs	r0, r0, #0
   1e184:	bcc	1e334 <__assert_fail@plt+0xd004>
   1e188:	b	1e354 <__assert_fail@plt+0xd024>
   1e18c:	b	1e190 <__assert_fail@plt+0xce60>
   1e190:	ldr	r0, [pc, #1948]	; 1e934 <__assert_fail@plt+0xd604>
   1e194:	ldr	r1, [fp, #-12]
   1e198:	cmp	r1, r0
   1e19c:	blt	1e1b4 <__assert_fail@plt+0xce84>
   1e1a0:	b	1e1c0 <__assert_fail@plt+0xce90>
   1e1a4:	ldr	r0, [fp, #-12]
   1e1a8:	movw	r1, #0
   1e1ac:	cmp	r1, r0
   1e1b0:	bge	1e1c0 <__assert_fail@plt+0xce90>
   1e1b4:	movw	r0, #1
   1e1b8:	str	r0, [sp, #56]	; 0x38
   1e1bc:	b	1e1d8 <__assert_fail@plt+0xcea8>
   1e1c0:	ldr	r0, [fp, #-12]
   1e1c4:	movw	r1, #0
   1e1c8:	sub	r0, r1, r0
   1e1cc:	mvn	r1, #0
   1e1d0:	udiv	r0, r1, r0
   1e1d4:	str	r0, [sp, #56]	; 0x38
   1e1d8:	ldr	r0, [sp, #56]	; 0x38
   1e1dc:	ldr	r1, [fp, #-8]
   1e1e0:	ldr	r2, [r1]
   1e1e4:	ldr	r1, [r1, #4]
   1e1e8:	mvn	r1, r1
   1e1ec:	mvn	r2, r2
   1e1f0:	subs	r0, r2, r0
   1e1f4:	sbcs	r1, r1, #0
   1e1f8:	bcs	1e334 <__assert_fail@plt+0xd004>
   1e1fc:	b	1e354 <__assert_fail@plt+0xd024>
   1e200:	b	1e204 <__assert_fail@plt+0xced4>
   1e204:	b	1e264 <__assert_fail@plt+0xcf34>
   1e208:	b	1e264 <__assert_fail@plt+0xcf34>
   1e20c:	ldr	r0, [fp, #-12]
   1e210:	cmn	r0, #1
   1e214:	bne	1e264 <__assert_fail@plt+0xcf34>
   1e218:	b	1e238 <__assert_fail@plt+0xcf08>
   1e21c:	ldr	r0, [fp, #-8]
   1e220:	ldr	r1, [r0]
   1e224:	ldr	r0, [r0, #4]
   1e228:	orr	r0, r1, r0
   1e22c:	cmp	r0, #0
   1e230:	bne	1e334 <__assert_fail@plt+0xd004>
   1e234:	b	1e354 <__assert_fail@plt+0xd024>
   1e238:	ldr	r0, [fp, #-8]
   1e23c:	ldr	r1, [r0]
   1e240:	ldr	r0, [r0, #4]
   1e244:	orr	r0, r1, r0
   1e248:	cmp	r0, #0
   1e24c:	beq	1e354 <__assert_fail@plt+0xd024>
   1e250:	b	1e254 <__assert_fail@plt+0xcf24>
   1e254:	mov	r0, #0
   1e258:	cmp	r0, #0
   1e25c:	bne	1e334 <__assert_fail@plt+0xd004>
   1e260:	b	1e354 <__assert_fail@plt+0xd024>
   1e264:	ldr	r0, [fp, #-8]
   1e268:	ldr	r1, [r0]
   1e26c:	ldr	r0, [r0, #4]
   1e270:	orr	r0, r1, r0
   1e274:	cmp	r0, #0
   1e278:	bne	1e334 <__assert_fail@plt+0xd004>
   1e27c:	b	1e354 <__assert_fail@plt+0xd024>
   1e280:	ldr	r0, [fp, #-12]
   1e284:	cmp	r0, #0
   1e288:	bne	1e290 <__assert_fail@plt+0xcf60>
   1e28c:	b	1e354 <__assert_fail@plt+0xd024>
   1e290:	mov	r0, #1
   1e294:	cmp	r0, #0
   1e298:	bne	1e30c <__assert_fail@plt+0xcfdc>
   1e29c:	b	1e2a0 <__assert_fail@plt+0xcf70>
   1e2a0:	b	1e2a8 <__assert_fail@plt+0xcf78>
   1e2a4:	b	1e2ac <__assert_fail@plt+0xcf7c>
   1e2a8:	b	1e2fc <__assert_fail@plt+0xcfcc>
   1e2ac:	ldr	r0, [fp, #-8]
   1e2b0:	ldr	r1, [r0]
   1e2b4:	ldr	r0, [r0, #4]
   1e2b8:	and	r0, r1, r0
   1e2bc:	cmn	r0, #1
   1e2c0:	bne	1e2fc <__assert_fail@plt+0xcfcc>
   1e2c4:	b	1e2c8 <__assert_fail@plt+0xcf98>
   1e2c8:	b	1e2cc <__assert_fail@plt+0xcf9c>
   1e2cc:	ldr	r0, [fp, #-12]
   1e2d0:	add	r0, r0, #0
   1e2d4:	movw	r1, #0
   1e2d8:	cmp	r1, r0
   1e2dc:	blt	1e334 <__assert_fail@plt+0xd004>
   1e2e0:	b	1e354 <__assert_fail@plt+0xd024>
   1e2e4:	ldr	r0, [fp, #-12]
   1e2e8:	sub	r0, r0, #1
   1e2ec:	mvn	r1, #0
   1e2f0:	cmp	r1, r0
   1e2f4:	blt	1e334 <__assert_fail@plt+0xd004>
   1e2f8:	b	1e354 <__assert_fail@plt+0xd024>
   1e2fc:	ldr	r0, [fp, #-12]
   1e300:	cmp	r0, #0
   1e304:	bne	1e334 <__assert_fail@plt+0xd004>
   1e308:	b	1e354 <__assert_fail@plt+0xd024>
   1e30c:	ldr	r0, [fp, #-12]
   1e310:	mvn	r1, #0
   1e314:	udiv	r0, r1, r0
   1e318:	ldr	r1, [fp, #-8]
   1e31c:	ldr	r2, [r1]
   1e320:	ldr	r1, [r1, #4]
   1e324:	subs	r0, r0, r2
   1e328:	rscs	r1, r1, #0
   1e32c:	bcs	1e354 <__assert_fail@plt+0xd024>
   1e330:	b	1e334 <__assert_fail@plt+0xd004>
   1e334:	ldr	r0, [fp, #-8]
   1e338:	ldr	r0, [r0]
   1e33c:	ldr	r1, [fp, #-12]
   1e340:	mul	r0, r0, r1
   1e344:	mov	r1, #0
   1e348:	str	r1, [fp, #-20]	; 0xffffffec
   1e34c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e350:	b	1e8f0 <__assert_fail@plt+0xd5c0>
   1e354:	ldr	r0, [fp, #-8]
   1e358:	ldr	r0, [r0]
   1e35c:	ldr	r1, [fp, #-12]
   1e360:	mul	r0, r0, r1
   1e364:	mov	r1, #0
   1e368:	str	r1, [fp, #-20]	; 0xffffffec
   1e36c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e370:	b	1e90c <__assert_fail@plt+0xd5dc>
   1e374:	b	1e658 <__assert_fail@plt+0xd328>
   1e378:	ldr	r0, [fp, #-12]
   1e37c:	cmp	r0, #0
   1e380:	bge	1e528 <__assert_fail@plt+0xd1f8>
   1e384:	mov	r0, #1
   1e388:	cmp	r0, #0
   1e38c:	bne	1e47c <__assert_fail@plt+0xd14c>
   1e390:	b	1e394 <__assert_fail@plt+0xd064>
   1e394:	b	1e398 <__assert_fail@plt+0xd068>
   1e398:	ldr	r0, [fp, #-8]
   1e39c:	ldr	r1, [r0]
   1e3a0:	ldr	r0, [r0, #4]
   1e3a4:	ldr	r2, [fp, #-12]
   1e3a8:	asr	r3, r2, #31
   1e3ac:	mvn	ip, #0
   1e3b0:	mvn	lr, #-2147483648	; 0x80000000
   1e3b4:	str	r0, [sp, #52]	; 0x34
   1e3b8:	mov	r0, ip
   1e3bc:	str	r1, [sp, #48]	; 0x30
   1e3c0:	mov	r1, lr
   1e3c4:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1e3c8:	ldr	r2, [sp, #48]	; 0x30
   1e3cc:	subs	r0, r2, r0
   1e3d0:	ldr	r2, [sp, #52]	; 0x34
   1e3d4:	sbcs	r1, r2, r1
   1e3d8:	bcc	1e600 <__assert_fail@plt+0xd2d0>
   1e3dc:	b	1e62c <__assert_fail@plt+0xd2fc>
   1e3e0:	b	1e3e4 <__assert_fail@plt+0xd0b4>
   1e3e4:	ldr	r0, [pc, #1352]	; 1e934 <__assert_fail@plt+0xd604>
   1e3e8:	ldr	r1, [fp, #-12]
   1e3ec:	cmp	r1, r0
   1e3f0:	blt	1e408 <__assert_fail@plt+0xd0d8>
   1e3f4:	b	1e41c <__assert_fail@plt+0xd0ec>
   1e3f8:	ldr	r0, [fp, #-12]
   1e3fc:	movw	r1, #0
   1e400:	cmp	r1, r0
   1e404:	bge	1e41c <__assert_fail@plt+0xd0ec>
   1e408:	mov	r0, #0
   1e40c:	mvn	r1, #0
   1e410:	str	r1, [sp, #44]	; 0x2c
   1e414:	str	r0, [sp, #40]	; 0x28
   1e418:	b	1e450 <__assert_fail@plt+0xd120>
   1e41c:	ldr	r0, [fp, #-12]
   1e420:	rsb	r0, r0, #0
   1e424:	asr	r3, r0, #31
   1e428:	mvn	r1, #0
   1e42c:	mvn	r2, #-2147483648	; 0x80000000
   1e430:	str	r0, [sp, #36]	; 0x24
   1e434:	mov	r0, r1
   1e438:	mov	r1, r2
   1e43c:	ldr	r2, [sp, #36]	; 0x24
   1e440:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1e444:	str	r0, [sp, #44]	; 0x2c
   1e448:	str	r1, [sp, #40]	; 0x28
   1e44c:	b	1e450 <__assert_fail@plt+0xd120>
   1e450:	ldr	r0, [sp, #40]	; 0x28
   1e454:	ldr	r1, [sp, #44]	; 0x2c
   1e458:	ldr	r2, [fp, #-8]
   1e45c:	ldr	r3, [r2]
   1e460:	ldr	r2, [r2, #4]
   1e464:	mvn	r2, r2
   1e468:	mvn	r3, r3
   1e46c:	subs	r1, r3, r1
   1e470:	sbcs	r0, r2, r0
   1e474:	bcs	1e600 <__assert_fail@plt+0xd2d0>
   1e478:	b	1e62c <__assert_fail@plt+0xd2fc>
   1e47c:	ldr	r0, [fp, #-12]
   1e480:	cmn	r0, #1
   1e484:	bne	1e4e8 <__assert_fail@plt+0xd1b8>
   1e488:	b	1e4ac <__assert_fail@plt+0xd17c>
   1e48c:	ldr	r0, [fp, #-8]
   1e490:	ldr	r1, [r0]
   1e494:	ldr	r0, [r0, #4]
   1e498:	eor	r0, r0, #-2147483648	; 0x80000000
   1e49c:	orr	r0, r1, r0
   1e4a0:	cmp	r0, #0
   1e4a4:	bne	1e600 <__assert_fail@plt+0xd2d0>
   1e4a8:	b	1e62c <__assert_fail@plt+0xd2fc>
   1e4ac:	ldr	r0, [fp, #-8]
   1e4b0:	ldr	r1, [r0]
   1e4b4:	ldr	r0, [r0, #4]
   1e4b8:	orr	r0, r1, r0
   1e4bc:	cmp	r0, #0
   1e4c0:	beq	1e62c <__assert_fail@plt+0xd2fc>
   1e4c4:	b	1e4c8 <__assert_fail@plt+0xd198>
   1e4c8:	ldr	r0, [fp, #-8]
   1e4cc:	ldr	r1, [r0]
   1e4d0:	ldr	r0, [r0, #4]
   1e4d4:	subs	r1, r1, #1
   1e4d8:	sbc	r0, r0, #0
   1e4dc:	cmp	r0, #0
   1e4e0:	bmi	1e600 <__assert_fail@plt+0xd2d0>
   1e4e4:	b	1e62c <__assert_fail@plt+0xd2fc>
   1e4e8:	ldr	r0, [fp, #-12]
   1e4ec:	asr	r3, r0, #31
   1e4f0:	mov	r1, #0
   1e4f4:	mov	r2, #-2147483648	; 0x80000000
   1e4f8:	str	r0, [sp, #32]
   1e4fc:	mov	r0, r1
   1e500:	mov	r1, r2
   1e504:	ldr	r2, [sp, #32]
   1e508:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1e50c:	ldr	r2, [fp, #-8]
   1e510:	ldr	r3, [r2]
   1e514:	ldr	r2, [r2, #4]
   1e518:	subs	r0, r0, r3
   1e51c:	sbcs	r1, r1, r2
   1e520:	bcc	1e600 <__assert_fail@plt+0xd2d0>
   1e524:	b	1e62c <__assert_fail@plt+0xd2fc>
   1e528:	ldr	r0, [fp, #-12]
   1e52c:	cmp	r0, #0
   1e530:	bne	1e538 <__assert_fail@plt+0xd208>
   1e534:	b	1e62c <__assert_fail@plt+0xd2fc>
   1e538:	mov	r0, #1
   1e53c:	cmp	r0, #0
   1e540:	bne	1e5c0 <__assert_fail@plt+0xd290>
   1e544:	b	1e548 <__assert_fail@plt+0xd218>
   1e548:	ldr	r0, [fp, #-8]
   1e54c:	ldr	r1, [r0]
   1e550:	ldr	r0, [r0, #4]
   1e554:	and	r0, r1, r0
   1e558:	cmn	r0, #1
   1e55c:	bne	1e594 <__assert_fail@plt+0xd264>
   1e560:	b	1e564 <__assert_fail@plt+0xd234>
   1e564:	b	1e568 <__assert_fail@plt+0xd238>
   1e568:	ldr	r0, [fp, #-12]
   1e56c:	mov	r1, #-2147483648	; 0x80000000
   1e570:	add	r1, r1, r0, asr #31
   1e574:	rsbs	r0, r0, #0
   1e578:	rscs	r1, r1, #0
   1e57c:	blt	1e600 <__assert_fail@plt+0xd2d0>
   1e580:	b	1e62c <__assert_fail@plt+0xd2fc>
   1e584:	mov	r0, #0
   1e588:	cmp	r0, #0
   1e58c:	bne	1e600 <__assert_fail@plt+0xd2d0>
   1e590:	b	1e62c <__assert_fail@plt+0xd2fc>
   1e594:	ldr	r0, [fp, #-8]
   1e598:	ldr	r2, [r0]
   1e59c:	ldr	r3, [r0, #4]
   1e5a0:	mov	r0, #0
   1e5a4:	mov	r1, #-2147483648	; 0x80000000
   1e5a8:	bl	21090 <__assert_fail@plt+0xfd60>
   1e5ac:	ldr	r2, [fp, #-12]
   1e5b0:	subs	r0, r0, r2
   1e5b4:	sbcs	r1, r1, r2, asr #31
   1e5b8:	bcc	1e600 <__assert_fail@plt+0xd2d0>
   1e5bc:	b	1e62c <__assert_fail@plt+0xd2fc>
   1e5c0:	ldr	r0, [fp, #-12]
   1e5c4:	asr	r3, r0, #31
   1e5c8:	mvn	r1, #0
   1e5cc:	mvn	r2, #-2147483648	; 0x80000000
   1e5d0:	str	r0, [sp, #28]
   1e5d4:	mov	r0, r1
   1e5d8:	mov	r1, r2
   1e5dc:	ldr	r2, [sp, #28]
   1e5e0:	bl	20fbc <__assert_fail@plt+0xfc8c>
   1e5e4:	ldr	r2, [fp, #-8]
   1e5e8:	ldr	r3, [r2]
   1e5ec:	ldr	r2, [r2, #4]
   1e5f0:	subs	r0, r0, r3
   1e5f4:	sbcs	r1, r1, r2
   1e5f8:	bcs	1e62c <__assert_fail@plt+0xd2fc>
   1e5fc:	b	1e600 <__assert_fail@plt+0xd2d0>
   1e600:	ldr	r0, [fp, #-8]
   1e604:	ldr	r1, [r0]
   1e608:	ldr	r0, [r0, #4]
   1e60c:	ldr	r2, [fp, #-12]
   1e610:	asr	r3, r2, #31
   1e614:	umull	ip, lr, r1, r2
   1e618:	mla	r1, r1, r3, lr
   1e61c:	mla	r0, r0, r2, r1
   1e620:	str	ip, [fp, #-24]	; 0xffffffe8
   1e624:	str	r0, [fp, #-20]	; 0xffffffec
   1e628:	b	1e8f0 <__assert_fail@plt+0xd5c0>
   1e62c:	ldr	r0, [fp, #-8]
   1e630:	ldr	r1, [r0]
   1e634:	ldr	r0, [r0, #4]
   1e638:	ldr	r2, [fp, #-12]
   1e63c:	asr	r3, r2, #31
   1e640:	umull	ip, lr, r1, r2
   1e644:	mla	r1, r1, r3, lr
   1e648:	mla	r0, r0, r2, r1
   1e64c:	str	ip, [fp, #-24]	; 0xffffffe8
   1e650:	str	r0, [fp, #-20]	; 0xffffffec
   1e654:	b	1e90c <__assert_fail@plt+0xd5dc>
   1e658:	ldr	r0, [fp, #-12]
   1e65c:	cmp	r0, #0
   1e660:	bge	1e7d4 <__assert_fail@plt+0xd4a4>
   1e664:	mov	r0, #1
   1e668:	cmp	r0, #0
   1e66c:	bne	1e754 <__assert_fail@plt+0xd424>
   1e670:	b	1e674 <__assert_fail@plt+0xd344>
   1e674:	b	1e6bc <__assert_fail@plt+0xd38c>
   1e678:	ldr	r0, [fp, #-8]
   1e67c:	ldr	r1, [r0]
   1e680:	ldr	r0, [r0, #4]
   1e684:	ldr	r2, [fp, #-12]
   1e688:	asr	r3, r2, #31
   1e68c:	mvn	ip, #0
   1e690:	str	r0, [sp, #24]
   1e694:	mov	r0, ip
   1e698:	str	r1, [sp, #20]
   1e69c:	mov	r1, ip
   1e6a0:	bl	21090 <__assert_fail@plt+0xfd60>
   1e6a4:	ldr	r2, [sp, #20]
   1e6a8:	subs	r0, r2, r0
   1e6ac:	ldr	r2, [sp, #24]
   1e6b0:	sbcs	r1, r2, r1
   1e6b4:	bcc	1e898 <__assert_fail@plt+0xd568>
   1e6b8:	b	1e8c4 <__assert_fail@plt+0xd594>
   1e6bc:	b	1e6c0 <__assert_fail@plt+0xd390>
   1e6c0:	ldr	r0, [pc, #620]	; 1e934 <__assert_fail@plt+0xd604>
   1e6c4:	ldr	r1, [fp, #-12]
   1e6c8:	cmp	r1, r0
   1e6cc:	blt	1e6e4 <__assert_fail@plt+0xd3b4>
   1e6d0:	b	1e6fc <__assert_fail@plt+0xd3cc>
   1e6d4:	ldr	r0, [fp, #-12]
   1e6d8:	movw	r1, #0
   1e6dc:	cmp	r1, r0
   1e6e0:	bge	1e6fc <__assert_fail@plt+0xd3cc>
   1e6e4:	mov	r0, #1
   1e6e8:	mvn	r1, #0
   1e6ec:	str	r1, [sp, #16]
   1e6f0:	str	r0, [sp, #12]
   1e6f4:	b	1e728 <__assert_fail@plt+0xd3f8>
   1e6f8:			; <UNDEFINED> instruction: 0xffff8000
   1e6fc:	ldr	r0, [fp, #-12]
   1e700:	rsb	r0, r0, #0
   1e704:	asr	r3, r0, #31
   1e708:	mvn	r1, #0
   1e70c:	str	r0, [sp, #8]
   1e710:	mov	r0, r1
   1e714:	ldr	r2, [sp, #8]
   1e718:	bl	21090 <__assert_fail@plt+0xfd60>
   1e71c:	str	r0, [sp, #16]
   1e720:	str	r1, [sp, #12]
   1e724:	b	1e728 <__assert_fail@plt+0xd3f8>
   1e728:	ldr	r0, [sp, #12]
   1e72c:	ldr	r1, [sp, #16]
   1e730:	ldr	r2, [fp, #-8]
   1e734:	ldr	r3, [r2]
   1e738:	ldr	r2, [r2, #4]
   1e73c:	mvn	r2, r2
   1e740:	mvn	r3, r3
   1e744:	subs	r1, r3, r1
   1e748:	sbcs	r0, r2, r0
   1e74c:	bcs	1e898 <__assert_fail@plt+0xd568>
   1e750:	b	1e8c4 <__assert_fail@plt+0xd594>
   1e754:	b	1e758 <__assert_fail@plt+0xd428>
   1e758:	b	1e7b8 <__assert_fail@plt+0xd488>
   1e75c:	b	1e7b8 <__assert_fail@plt+0xd488>
   1e760:	ldr	r0, [fp, #-12]
   1e764:	cmn	r0, #1
   1e768:	bne	1e7b8 <__assert_fail@plt+0xd488>
   1e76c:	b	1e78c <__assert_fail@plt+0xd45c>
   1e770:	ldr	r0, [fp, #-8]
   1e774:	ldr	r1, [r0]
   1e778:	ldr	r0, [r0, #4]
   1e77c:	orr	r0, r1, r0
   1e780:	cmp	r0, #0
   1e784:	bne	1e898 <__assert_fail@plt+0xd568>
   1e788:	b	1e8c4 <__assert_fail@plt+0xd594>
   1e78c:	ldr	r0, [fp, #-8]
   1e790:	ldr	r1, [r0]
   1e794:	ldr	r0, [r0, #4]
   1e798:	orr	r0, r1, r0
   1e79c:	cmp	r0, #0
   1e7a0:	beq	1e8c4 <__assert_fail@plt+0xd594>
   1e7a4:	b	1e7a8 <__assert_fail@plt+0xd478>
   1e7a8:	mov	r0, #0
   1e7ac:	cmp	r0, #0
   1e7b0:	bne	1e898 <__assert_fail@plt+0xd568>
   1e7b4:	b	1e8c4 <__assert_fail@plt+0xd594>
   1e7b8:	ldr	r0, [fp, #-8]
   1e7bc:	ldr	r1, [r0]
   1e7c0:	ldr	r0, [r0, #4]
   1e7c4:	orr	r0, r1, r0
   1e7c8:	cmp	r0, #0
   1e7cc:	bne	1e898 <__assert_fail@plt+0xd568>
   1e7d0:	b	1e8c4 <__assert_fail@plt+0xd594>
   1e7d4:	ldr	r0, [fp, #-12]
   1e7d8:	cmp	r0, #0
   1e7dc:	bne	1e7e4 <__assert_fail@plt+0xd4b4>
   1e7e0:	b	1e8c4 <__assert_fail@plt+0xd594>
   1e7e4:	mov	r0, #1
   1e7e8:	cmp	r0, #0
   1e7ec:	bne	1e860 <__assert_fail@plt+0xd530>
   1e7f0:	b	1e7f4 <__assert_fail@plt+0xd4c4>
   1e7f4:	b	1e7fc <__assert_fail@plt+0xd4cc>
   1e7f8:	b	1e800 <__assert_fail@plt+0xd4d0>
   1e7fc:	b	1e850 <__assert_fail@plt+0xd520>
   1e800:	ldr	r0, [fp, #-8]
   1e804:	ldr	r1, [r0]
   1e808:	ldr	r0, [r0, #4]
   1e80c:	and	r0, r1, r0
   1e810:	cmn	r0, #1
   1e814:	bne	1e850 <__assert_fail@plt+0xd520>
   1e818:	b	1e81c <__assert_fail@plt+0xd4ec>
   1e81c:	b	1e820 <__assert_fail@plt+0xd4f0>
   1e820:	ldr	r0, [fp, #-12]
   1e824:	add	r0, r0, #0
   1e828:	movw	r1, #0
   1e82c:	cmp	r1, r0
   1e830:	blt	1e898 <__assert_fail@plt+0xd568>
   1e834:	b	1e8c4 <__assert_fail@plt+0xd594>
   1e838:	ldr	r0, [fp, #-12]
   1e83c:	sub	r0, r0, #1
   1e840:	mvn	r1, #0
   1e844:	cmp	r1, r0
   1e848:	blt	1e898 <__assert_fail@plt+0xd568>
   1e84c:	b	1e8c4 <__assert_fail@plt+0xd594>
   1e850:	ldr	r0, [fp, #-12]
   1e854:	cmp	r0, #0
   1e858:	bne	1e898 <__assert_fail@plt+0xd568>
   1e85c:	b	1e8c4 <__assert_fail@plt+0xd594>
   1e860:	ldr	r0, [fp, #-12]
   1e864:	asr	r3, r0, #31
   1e868:	mvn	r1, #0
   1e86c:	str	r0, [sp, #4]
   1e870:	mov	r0, r1
   1e874:	ldr	r2, [sp, #4]
   1e878:	bl	21090 <__assert_fail@plt+0xfd60>
   1e87c:	ldr	r2, [fp, #-8]
   1e880:	ldr	r3, [r2]
   1e884:	ldr	r2, [r2, #4]
   1e888:	subs	r0, r0, r3
   1e88c:	sbcs	r1, r1, r2
   1e890:	bcs	1e8c4 <__assert_fail@plt+0xd594>
   1e894:	b	1e898 <__assert_fail@plt+0xd568>
   1e898:	ldr	r0, [fp, #-8]
   1e89c:	ldr	r1, [r0]
   1e8a0:	ldr	r0, [r0, #4]
   1e8a4:	ldr	r2, [fp, #-12]
   1e8a8:	asr	r3, r2, #31
   1e8ac:	umull	ip, lr, r1, r2
   1e8b0:	mla	r1, r1, r3, lr
   1e8b4:	mla	r0, r0, r2, r1
   1e8b8:	str	ip, [fp, #-24]	; 0xffffffe8
   1e8bc:	str	r0, [fp, #-20]	; 0xffffffec
   1e8c0:	b	1e8f0 <__assert_fail@plt+0xd5c0>
   1e8c4:	ldr	r0, [fp, #-8]
   1e8c8:	ldr	r1, [r0]
   1e8cc:	ldr	r0, [r0, #4]
   1e8d0:	ldr	r2, [fp, #-12]
   1e8d4:	asr	r3, r2, #31
   1e8d8:	umull	ip, lr, r1, r2
   1e8dc:	mla	r1, r1, r3, lr
   1e8e0:	mla	r0, r0, r2, r1
   1e8e4:	str	ip, [fp, #-24]	; 0xffffffe8
   1e8e8:	str	r0, [fp, #-20]	; 0xffffffec
   1e8ec:	b	1e90c <__assert_fail@plt+0xd5dc>
   1e8f0:	ldr	r0, [fp, #-8]
   1e8f4:	mvn	r1, #0
   1e8f8:	str	r1, [r0, #4]
   1e8fc:	str	r1, [r0]
   1e900:	movw	r0, #1
   1e904:	str	r0, [fp, #-4]
   1e908:	b	1e928 <__assert_fail@plt+0xd5f8>
   1e90c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e910:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e914:	ldr	r2, [fp, #-8]
   1e918:	str	r1, [r2, #4]
   1e91c:	str	r0, [r2]
   1e920:	movw	r0, #0
   1e924:	str	r0, [fp, #-4]
   1e928:	ldr	r0, [fp, #-4]
   1e92c:	mov	sp, fp
   1e930:	pop	{fp, pc}
   1e934:	andhi	r0, r0, r1
   1e938:	svcvc	0x00ffffff
   1e93c:	push	{fp, lr}
   1e940:	mov	fp, sp
   1e944:	sub	sp, sp, #16
   1e948:	str	r0, [fp, #-4]
   1e94c:	str	r1, [sp, #8]
   1e950:	str	r2, [sp, #4]
   1e954:	movw	r0, #0
   1e958:	str	r0, [sp]
   1e95c:	ldr	r0, [sp, #4]
   1e960:	mvn	r1, #0
   1e964:	add	r1, r0, r1
   1e968:	str	r1, [sp, #4]
   1e96c:	cmp	r0, #0
   1e970:	beq	1e990 <__assert_fail@plt+0xd660>
   1e974:	ldr	r0, [fp, #-4]
   1e978:	ldr	r1, [sp, #8]
   1e97c:	bl	1d0c4 <__assert_fail@plt+0xbd94>
   1e980:	ldr	r1, [sp]
   1e984:	orr	r0, r1, r0
   1e988:	str	r0, [sp]
   1e98c:	b	1e95c <__assert_fail@plt+0xd62c>
   1e990:	ldr	r0, [sp]
   1e994:	mov	sp, fp
   1e998:	pop	{fp, pc}
   1e99c:	push	{fp, lr}
   1e9a0:	mov	fp, sp
   1e9a4:	sub	sp, sp, #16
   1e9a8:	str	r0, [sp, #8]
   1e9ac:	str	r1, [sp, #4]
   1e9b0:	ldr	r0, [sp, #8]
   1e9b4:	cmp	r0, #0
   1e9b8:	beq	1e9c8 <__assert_fail@plt+0xd698>
   1e9bc:	ldr	r0, [sp, #4]
   1e9c0:	cmp	r0, #0
   1e9c4:	bne	1e9d4 <__assert_fail@plt+0xd6a4>
   1e9c8:	movw	r0, #1
   1e9cc:	str	r0, [sp, #4]
   1e9d0:	str	r0, [sp, #8]
   1e9d4:	ldr	r0, [sp, #4]
   1e9d8:	cmp	r0, #0
   1e9dc:	beq	1ea10 <__assert_fail@plt+0xd6e0>
   1e9e0:	ldr	r0, [pc, #76]	; 1ea34 <__assert_fail@plt+0xd704>
   1e9e4:	ldr	r1, [sp, #4]
   1e9e8:	udiv	r0, r0, r1
   1e9ec:	ldr	r1, [sp, #8]
   1e9f0:	cmp	r0, r1
   1e9f4:	bcs	1ea10 <__assert_fail@plt+0xd6e0>
   1e9f8:	bl	11228 <__errno_location@plt>
   1e9fc:	movw	r1, #12
   1ea00:	str	r1, [r0]
   1ea04:	movw	r0, #0
   1ea08:	str	r0, [fp, #-4]
   1ea0c:	b	1ea28 <__assert_fail@plt+0xd6f8>
   1ea10:	ldr	r0, [sp, #8]
   1ea14:	ldr	r1, [sp, #4]
   1ea18:	bl	11078 <calloc@plt>
   1ea1c:	str	r0, [sp]
   1ea20:	ldr	r0, [sp]
   1ea24:	str	r0, [fp, #-4]
   1ea28:	ldr	r0, [fp, #-4]
   1ea2c:	mov	sp, fp
   1ea30:	pop	{fp, pc}
   1ea34:	svcvc	0x00ffffff
   1ea38:	push	{fp, lr}
   1ea3c:	mov	fp, sp
   1ea40:	sub	sp, sp, #16
   1ea44:	str	r0, [sp, #8]
   1ea48:	ldr	r0, [sp, #8]
   1ea4c:	cmp	r0, #0
   1ea50:	bne	1ea5c <__assert_fail@plt+0xd72c>
   1ea54:	movw	r0, #1
   1ea58:	str	r0, [sp, #8]
   1ea5c:	ldr	r0, [pc, #64]	; 1eaa4 <__assert_fail@plt+0xd774>
   1ea60:	ldr	r1, [sp, #8]
   1ea64:	cmp	r0, r1
   1ea68:	bcs	1ea84 <__assert_fail@plt+0xd754>
   1ea6c:	bl	11228 <__errno_location@plt>
   1ea70:	movw	r1, #12
   1ea74:	str	r1, [r0]
   1ea78:	movw	r0, #0
   1ea7c:	str	r0, [fp, #-4]
   1ea80:	b	1ea98 <__assert_fail@plt+0xd768>
   1ea84:	ldr	r0, [sp, #8]
   1ea88:	bl	11198 <malloc@plt>
   1ea8c:	str	r0, [sp, #4]
   1ea90:	ldr	r0, [sp, #4]
   1ea94:	str	r0, [fp, #-4]
   1ea98:	ldr	r0, [fp, #-4]
   1ea9c:	mov	sp, fp
   1eaa0:	pop	{fp, pc}
   1eaa4:	svcvc	0x00ffffff
   1eaa8:	push	{fp, lr}
   1eaac:	mov	fp, sp
   1eab0:	sub	sp, sp, #16
   1eab4:	str	r0, [sp, #8]
   1eab8:	str	r1, [sp, #4]
   1eabc:	ldr	r0, [sp, #8]
   1eac0:	movw	r1, #0
   1eac4:	cmp	r0, r1
   1eac8:	bne	1eadc <__assert_fail@plt+0xd7ac>
   1eacc:	ldr	r0, [sp, #4]
   1ead0:	bl	1ea38 <__assert_fail@plt+0xd708>
   1ead4:	str	r0, [fp, #-4]
   1ead8:	b	1eb3c <__assert_fail@plt+0xd80c>
   1eadc:	ldr	r0, [sp, #4]
   1eae0:	cmp	r0, #0
   1eae4:	bne	1eafc <__assert_fail@plt+0xd7cc>
   1eae8:	ldr	r0, [sp, #8]
   1eaec:	bl	1476c <__assert_fail@plt+0x343c>
   1eaf0:	movw	r0, #0
   1eaf4:	str	r0, [fp, #-4]
   1eaf8:	b	1eb3c <__assert_fail@plt+0xd80c>
   1eafc:	ldr	r0, [pc, #68]	; 1eb48 <__assert_fail@plt+0xd818>
   1eb00:	ldr	r1, [sp, #4]
   1eb04:	cmp	r0, r1
   1eb08:	bcs	1eb24 <__assert_fail@plt+0xd7f4>
   1eb0c:	bl	11228 <__errno_location@plt>
   1eb10:	movw	r1, #12
   1eb14:	str	r1, [r0]
   1eb18:	movw	r0, #0
   1eb1c:	str	r0, [fp, #-4]
   1eb20:	b	1eb3c <__assert_fail@plt+0xd80c>
   1eb24:	ldr	r0, [sp, #8]
   1eb28:	ldr	r1, [sp, #4]
   1eb2c:	bl	11120 <realloc@plt>
   1eb30:	str	r0, [sp]
   1eb34:	ldr	r0, [sp]
   1eb38:	str	r0, [fp, #-4]
   1eb3c:	ldr	r0, [fp, #-4]
   1eb40:	mov	sp, fp
   1eb44:	pop	{fp, pc}
   1eb48:	svcvc	0x00ffffff
   1eb4c:	push	{fp, lr}
   1eb50:	mov	fp, sp
   1eb54:	sub	sp, sp, #24
   1eb58:	str	r0, [fp, #-8]
   1eb5c:	str	r1, [sp, #12]
   1eb60:	ldr	r0, [fp, #-8]
   1eb64:	str	r0, [sp, #8]
   1eb68:	ldr	r0, [sp, #12]
   1eb6c:	str	r0, [sp, #4]
   1eb70:	ldr	r0, [sp, #8]
   1eb74:	ldr	r1, [sp, #4]
   1eb78:	cmp	r0, r1
   1eb7c:	bne	1eb8c <__assert_fail@plt+0xd85c>
   1eb80:	movw	r0, #0
   1eb84:	str	r0, [fp, #-4]
   1eb88:	b	1ebf8 <__assert_fail@plt+0xd8c8>
   1eb8c:	b	1eb90 <__assert_fail@plt+0xd860>
   1eb90:	ldr	r0, [sp, #8]
   1eb94:	ldrb	r0, [r0]
   1eb98:	bl	20f34 <__assert_fail@plt+0xfc04>
   1eb9c:	strb	r0, [sp, #3]
   1eba0:	ldr	r0, [sp, #4]
   1eba4:	ldrb	r0, [r0]
   1eba8:	bl	20f34 <__assert_fail@plt+0xfc04>
   1ebac:	strb	r0, [sp, #2]
   1ebb0:	ldrb	r0, [sp, #3]
   1ebb4:	cmp	r0, #0
   1ebb8:	bne	1ebc0 <__assert_fail@plt+0xd890>
   1ebbc:	b	1ebe8 <__assert_fail@plt+0xd8b8>
   1ebc0:	ldr	r0, [sp, #8]
   1ebc4:	add	r0, r0, #1
   1ebc8:	str	r0, [sp, #8]
   1ebcc:	ldr	r0, [sp, #4]
   1ebd0:	add	r0, r0, #1
   1ebd4:	str	r0, [sp, #4]
   1ebd8:	ldrb	r0, [sp, #3]
   1ebdc:	ldrb	r1, [sp, #2]
   1ebe0:	cmp	r0, r1
   1ebe4:	beq	1eb90 <__assert_fail@plt+0xd860>
   1ebe8:	ldrb	r0, [sp, #3]
   1ebec:	ldrb	r1, [sp, #2]
   1ebf0:	sub	r0, r0, r1
   1ebf4:	str	r0, [fp, #-4]
   1ebf8:	ldr	r0, [fp, #-4]
   1ebfc:	mov	sp, fp
   1ec00:	pop	{fp, pc}
   1ec04:	push	{fp, lr}
   1ec08:	mov	fp, sp
   1ec0c:	sub	sp, sp, #16
   1ec10:	str	r0, [sp, #8]
   1ec14:	ldr	r0, [sp, #8]
   1ec18:	bl	1115c <__fpending@plt>
   1ec1c:	cmp	r0, #0
   1ec20:	movw	r0, #0
   1ec24:	movne	r0, #1
   1ec28:	and	r0, r0, #1
   1ec2c:	strb	r0, [sp, #7]
   1ec30:	ldr	r0, [sp, #8]
   1ec34:	bl	11168 <ferror_unlocked@plt>
   1ec38:	cmp	r0, #0
   1ec3c:	movw	r0, #0
   1ec40:	movne	r0, #1
   1ec44:	and	r0, r0, #1
   1ec48:	strb	r0, [sp, #6]
   1ec4c:	ldr	r0, [sp, #8]
   1ec50:	bl	144a8 <__assert_fail@plt+0x3178>
   1ec54:	cmp	r0, #0
   1ec58:	movw	r0, #0
   1ec5c:	movne	r0, #1
   1ec60:	and	r0, r0, #1
   1ec64:	strb	r0, [sp, #5]
   1ec68:	ldrb	r0, [sp, #6]
   1ec6c:	tst	r0, #1
   1ec70:	bne	1ec9c <__assert_fail@plt+0xd96c>
   1ec74:	ldrb	r0, [sp, #5]
   1ec78:	tst	r0, #1
   1ec7c:	beq	1ecc0 <__assert_fail@plt+0xd990>
   1ec80:	ldrb	r0, [sp, #7]
   1ec84:	tst	r0, #1
   1ec88:	bne	1ec9c <__assert_fail@plt+0xd96c>
   1ec8c:	bl	11228 <__errno_location@plt>
   1ec90:	ldr	r0, [r0]
   1ec94:	cmp	r0, #9
   1ec98:	beq	1ecc0 <__assert_fail@plt+0xd990>
   1ec9c:	ldrb	r0, [sp, #5]
   1eca0:	tst	r0, #1
   1eca4:	bne	1ecb4 <__assert_fail@plt+0xd984>
   1eca8:	bl	11228 <__errno_location@plt>
   1ecac:	movw	r1, #0
   1ecb0:	str	r1, [r0]
   1ecb4:	mvn	r0, #0
   1ecb8:	str	r0, [fp, #-4]
   1ecbc:	b	1ecc8 <__assert_fail@plt+0xd998>
   1ecc0:	movw	r0, #0
   1ecc4:	str	r0, [fp, #-4]
   1ecc8:	ldr	r0, [fp, #-4]
   1eccc:	mov	sp, fp
   1ecd0:	pop	{fp, pc}
   1ecd4:	sub	sp, sp, #8
   1ecd8:	push	{fp, lr}
   1ecdc:	mov	fp, sp
   1ece0:	sub	sp, sp, #48	; 0x30
   1ece4:	str	r3, [fp, #12]
   1ece8:	str	r2, [fp, #8]
   1ecec:	str	r0, [fp, #-4]
   1ecf0:	str	r1, [fp, #-8]
   1ecf4:	mvn	r0, #0
   1ecf8:	str	r0, [fp, #-16]
   1ecfc:	add	r0, fp, #8
   1ed00:	str	r0, [fp, #-12]
   1ed04:	ldr	r0, [fp, #-8]
   1ed08:	cmp	r0, #0
   1ed0c:	str	r0, [sp, #12]
   1ed10:	beq	1ed2c <__assert_fail@plt+0xd9fc>
   1ed14:	b	1ed18 <__assert_fail@plt+0xd9e8>
   1ed18:	movw	r0, #1030	; 0x406
   1ed1c:	ldr	r1, [sp, #12]
   1ed20:	cmp	r1, r0
   1ed24:	beq	1ed54 <__assert_fail@plt+0xda24>
   1ed28:	b	1ed7c <__assert_fail@plt+0xda4c>
   1ed2c:	ldr	r0, [fp, #-12]
   1ed30:	add	r1, r0, #4
   1ed34:	str	r1, [fp, #-12]
   1ed38:	ldr	r0, [r0]
   1ed3c:	str	r0, [fp, #-20]	; 0xffffffec
   1ed40:	ldr	r0, [fp, #-4]
   1ed44:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ed48:	bl	1ef28 <__assert_fail@plt+0xdbf8>
   1ed4c:	str	r0, [fp, #-16]
   1ed50:	b	1ef08 <__assert_fail@plt+0xdbd8>
   1ed54:	ldr	r0, [fp, #-12]
   1ed58:	add	r1, r0, #4
   1ed5c:	str	r1, [fp, #-12]
   1ed60:	ldr	r0, [r0]
   1ed64:	str	r0, [sp, #24]
   1ed68:	ldr	r0, [fp, #-4]
   1ed6c:	ldr	r1, [sp, #24]
   1ed70:	bl	1ef5c <__assert_fail@plt+0xdc2c>
   1ed74:	str	r0, [fp, #-16]
   1ed78:	b	1ef08 <__assert_fail@plt+0xdbd8>
   1ed7c:	ldr	r0, [fp, #-8]
   1ed80:	cmp	r0, #0
   1ed84:	str	r0, [sp, #8]
   1ed88:	beq	1eeb0 <__assert_fail@plt+0xdb80>
   1ed8c:	b	1ed90 <__assert_fail@plt+0xda60>
   1ed90:	ldr	r0, [sp, #8]
   1ed94:	cmp	r0, #1
   1ed98:	beq	1ee9c <__assert_fail@plt+0xdb6c>
   1ed9c:	b	1eda0 <__assert_fail@plt+0xda70>
   1eda0:	ldr	r0, [sp, #8]
   1eda4:	cmp	r0, #2
   1eda8:	beq	1eeb0 <__assert_fail@plt+0xdb80>
   1edac:	b	1edb0 <__assert_fail@plt+0xda80>
   1edb0:	ldr	r0, [sp, #8]
   1edb4:	cmp	r0, #3
   1edb8:	beq	1ee9c <__assert_fail@plt+0xdb6c>
   1edbc:	b	1edc0 <__assert_fail@plt+0xda90>
   1edc0:	ldr	r0, [sp, #8]
   1edc4:	cmp	r0, #4
   1edc8:	beq	1eeb0 <__assert_fail@plt+0xdb80>
   1edcc:	b	1edd0 <__assert_fail@plt+0xdaa0>
   1edd0:	ldr	r0, [sp, #8]
   1edd4:	cmp	r0, #8
   1edd8:	beq	1eeb0 <__assert_fail@plt+0xdb80>
   1eddc:	b	1ede0 <__assert_fail@plt+0xdab0>
   1ede0:	ldr	r0, [sp, #8]
   1ede4:	cmp	r0, #9
   1ede8:	beq	1ee9c <__assert_fail@plt+0xdb6c>
   1edec:	b	1edf0 <__assert_fail@plt+0xdac0>
   1edf0:	ldr	r0, [sp, #8]
   1edf4:	cmp	r0, #10
   1edf8:	beq	1eeb0 <__assert_fail@plt+0xdb80>
   1edfc:	b	1ee00 <__assert_fail@plt+0xdad0>
   1ee00:	ldr	r0, [sp, #8]
   1ee04:	cmp	r0, #11
   1ee08:	beq	1ee9c <__assert_fail@plt+0xdb6c>
   1ee0c:	b	1ee10 <__assert_fail@plt+0xdae0>
   1ee10:	ldr	r0, [sp, #8]
   1ee14:	cmp	r0, #1024	; 0x400
   1ee18:	beq	1eeb0 <__assert_fail@plt+0xdb80>
   1ee1c:	b	1ee20 <__assert_fail@plt+0xdaf0>
   1ee20:	movw	r0, #1025	; 0x401
   1ee24:	ldr	r1, [sp, #8]
   1ee28:	cmp	r1, r0
   1ee2c:	beq	1ee9c <__assert_fail@plt+0xdb6c>
   1ee30:	b	1ee34 <__assert_fail@plt+0xdb04>
   1ee34:	movw	r0, #1026	; 0x402
   1ee38:	ldr	r1, [sp, #8]
   1ee3c:	cmp	r1, r0
   1ee40:	beq	1eeb0 <__assert_fail@plt+0xdb80>
   1ee44:	b	1ee48 <__assert_fail@plt+0xdb18>
   1ee48:	movw	r0, #1030	; 0x406
   1ee4c:	ldr	r1, [sp, #8]
   1ee50:	sub	r0, r1, r0
   1ee54:	cmp	r0, #2
   1ee58:	bcc	1eeb0 <__assert_fail@plt+0xdb80>
   1ee5c:	b	1ee60 <__assert_fail@plt+0xdb30>
   1ee60:	movw	r0, #1032	; 0x408
   1ee64:	ldr	r1, [sp, #8]
   1ee68:	cmp	r1, r0
   1ee6c:	beq	1ee9c <__assert_fail@plt+0xdb6c>
   1ee70:	b	1ee74 <__assert_fail@plt+0xdb44>
   1ee74:	movw	r0, #1033	; 0x409
   1ee78:	ldr	r1, [sp, #8]
   1ee7c:	cmp	r1, r0
   1ee80:	beq	1eeb0 <__assert_fail@plt+0xdb80>
   1ee84:	b	1ee88 <__assert_fail@plt+0xdb58>
   1ee88:	movw	r0, #1034	; 0x40a
   1ee8c:	ldr	r1, [sp, #8]
   1ee90:	cmp	r1, r0
   1ee94:	bne	1eedc <__assert_fail@plt+0xdbac>
   1ee98:	b	1ee9c <__assert_fail@plt+0xdb6c>
   1ee9c:	ldr	r0, [fp, #-4]
   1eea0:	ldr	r1, [fp, #-8]
   1eea4:	bl	11288 <fcntl64@plt>
   1eea8:	str	r0, [fp, #-16]
   1eeac:	b	1ef04 <__assert_fail@plt+0xdbd4>
   1eeb0:	ldr	r0, [fp, #-12]
   1eeb4:	add	r1, r0, #4
   1eeb8:	str	r1, [fp, #-12]
   1eebc:	ldr	r0, [r0]
   1eec0:	str	r0, [sp, #20]
   1eec4:	ldr	r0, [fp, #-4]
   1eec8:	ldr	r1, [fp, #-8]
   1eecc:	ldr	r2, [sp, #20]
   1eed0:	bl	11288 <fcntl64@plt>
   1eed4:	str	r0, [fp, #-16]
   1eed8:	b	1ef04 <__assert_fail@plt+0xdbd4>
   1eedc:	ldr	r0, [fp, #-12]
   1eee0:	add	r1, r0, #4
   1eee4:	str	r1, [fp, #-12]
   1eee8:	ldr	r0, [r0]
   1eeec:	str	r0, [sp, #16]
   1eef0:	ldr	r0, [fp, #-4]
   1eef4:	ldr	r1, [fp, #-8]
   1eef8:	ldr	r2, [sp, #16]
   1eefc:	bl	11288 <fcntl64@plt>
   1ef00:	str	r0, [fp, #-16]
   1ef04:	b	1ef08 <__assert_fail@plt+0xdbd8>
   1ef08:	sub	r0, fp, #12
   1ef0c:	ldr	r1, [fp, #-16]
   1ef10:	str	r0, [sp, #4]
   1ef14:	mov	r0, r1
   1ef18:	mov	sp, fp
   1ef1c:	pop	{fp, lr}
   1ef20:	add	sp, sp, #8
   1ef24:	bx	lr
   1ef28:	push	{fp, lr}
   1ef2c:	mov	fp, sp
   1ef30:	sub	sp, sp, #16
   1ef34:	str	r0, [fp, #-4]
   1ef38:	str	r1, [sp, #8]
   1ef3c:	ldr	r0, [fp, #-4]
   1ef40:	ldr	r2, [sp, #8]
   1ef44:	movw	r1, #0
   1ef48:	bl	11288 <fcntl64@plt>
   1ef4c:	str	r0, [sp, #4]
   1ef50:	ldr	r0, [sp, #4]
   1ef54:	mov	sp, fp
   1ef58:	pop	{fp, pc}
   1ef5c:	push	{fp, lr}
   1ef60:	mov	fp, sp
   1ef64:	sub	sp, sp, #32
   1ef68:	str	r0, [fp, #-4]
   1ef6c:	str	r1, [fp, #-8]
   1ef70:	movw	r0, #13116	; 0x333c
   1ef74:	movt	r0, #3
   1ef78:	ldr	r0, [r0]
   1ef7c:	movw	r1, #0
   1ef80:	cmp	r1, r0
   1ef84:	bgt	1f004 <__assert_fail@plt+0xdcd4>
   1ef88:	ldr	r0, [fp, #-4]
   1ef8c:	ldr	r2, [fp, #-8]
   1ef90:	movw	r1, #1030	; 0x406
   1ef94:	bl	11288 <fcntl64@plt>
   1ef98:	str	r0, [fp, #-12]
   1ef9c:	ldr	r0, [fp, #-12]
   1efa0:	movw	r1, #0
   1efa4:	cmp	r1, r0
   1efa8:	ble	1efbc <__assert_fail@plt+0xdc8c>
   1efac:	bl	11228 <__errno_location@plt>
   1efb0:	ldr	r0, [r0]
   1efb4:	cmp	r0, #22
   1efb8:	beq	1efd0 <__assert_fail@plt+0xdca0>
   1efbc:	movw	r0, #13116	; 0x333c
   1efc0:	movt	r0, #3
   1efc4:	movw	r1, #1
   1efc8:	str	r1, [r0]
   1efcc:	b	1f000 <__assert_fail@plt+0xdcd0>
   1efd0:	ldr	r0, [fp, #-4]
   1efd4:	ldr	r1, [fp, #-8]
   1efd8:	bl	1ef28 <__assert_fail@plt+0xdbf8>
   1efdc:	str	r0, [fp, #-12]
   1efe0:	ldr	r0, [fp, #-12]
   1efe4:	cmp	r0, #0
   1efe8:	blt	1effc <__assert_fail@plt+0xdccc>
   1efec:	movw	r0, #13116	; 0x333c
   1eff0:	movt	r0, #3
   1eff4:	mvn	r1, #0
   1eff8:	str	r1, [r0]
   1effc:	b	1f000 <__assert_fail@plt+0xdcd0>
   1f000:	b	1f014 <__assert_fail@plt+0xdce4>
   1f004:	ldr	r0, [fp, #-4]
   1f008:	ldr	r1, [fp, #-8]
   1f00c:	bl	1ef28 <__assert_fail@plt+0xdbf8>
   1f010:	str	r0, [fp, #-12]
   1f014:	ldr	r0, [fp, #-12]
   1f018:	movw	r1, #0
   1f01c:	cmp	r1, r0
   1f020:	bgt	1f0a8 <__assert_fail@plt+0xdd78>
   1f024:	movw	r0, #13116	; 0x333c
   1f028:	movt	r0, #3
   1f02c:	ldr	r0, [r0]
   1f030:	cmn	r0, #1
   1f034:	bne	1f0a8 <__assert_fail@plt+0xdd78>
   1f038:	ldr	r0, [fp, #-12]
   1f03c:	movw	r1, #1
   1f040:	bl	11288 <fcntl64@plt>
   1f044:	str	r0, [sp, #16]
   1f048:	ldr	r0, [sp, #16]
   1f04c:	cmp	r0, #0
   1f050:	blt	1f070 <__assert_fail@plt+0xdd40>
   1f054:	ldr	r0, [fp, #-12]
   1f058:	ldr	r1, [sp, #16]
   1f05c:	orr	r2, r1, #1
   1f060:	movw	r1, #2
   1f064:	bl	11288 <fcntl64@plt>
   1f068:	cmn	r0, #1
   1f06c:	bne	1f0a4 <__assert_fail@plt+0xdd74>
   1f070:	bl	11228 <__errno_location@plt>
   1f074:	ldr	r0, [r0]
   1f078:	str	r0, [sp, #12]
   1f07c:	ldr	r0, [fp, #-12]
   1f080:	bl	11318 <close@plt>
   1f084:	ldr	r1, [sp, #12]
   1f088:	str	r0, [sp, #8]
   1f08c:	str	r1, [sp, #4]
   1f090:	bl	11228 <__errno_location@plt>
   1f094:	ldr	r1, [sp, #4]
   1f098:	str	r1, [r0]
   1f09c:	mvn	r0, #0
   1f0a0:	str	r0, [fp, #-12]
   1f0a4:	b	1f0a8 <__assert_fail@plt+0xdd78>
   1f0a8:	ldr	r0, [fp, #-12]
   1f0ac:	mov	sp, fp
   1f0b0:	pop	{fp, pc}
   1f0b4:	push	{fp, lr}
   1f0b8:	mov	fp, sp
   1f0bc:	bl	11228 <__errno_location@plt>
   1f0c0:	movw	r1, #12
   1f0c4:	str	r1, [r0]
   1f0c8:	movw	r0, #0
   1f0cc:	pop	{fp, pc}
   1f0d0:	push	{fp, lr}
   1f0d4:	mov	fp, sp
   1f0d8:	sub	sp, sp, #8
   1f0dc:	str	r0, [sp, #4]
   1f0e0:	ldr	r0, [sp, #4]
   1f0e4:	cmn	r0, #1
   1f0e8:	bhi	1f0fc <__assert_fail@plt+0xddcc>
   1f0ec:	ldr	r0, [sp, #4]
   1f0f0:	bl	1ea38 <__assert_fail@plt+0xd708>
   1f0f4:	str	r0, [sp]
   1f0f8:	b	1f104 <__assert_fail@plt+0xddd4>
   1f0fc:	bl	1f0b4 <__assert_fail@plt+0xdd84>
   1f100:	str	r0, [sp]
   1f104:	ldr	r0, [sp]
   1f108:	mov	sp, fp
   1f10c:	pop	{fp, pc}
   1f110:	push	{fp, lr}
   1f114:	mov	fp, sp
   1f118:	sub	sp, sp, #16
   1f11c:	str	r0, [fp, #-4]
   1f120:	str	r1, [sp, #8]
   1f124:	ldr	r0, [sp, #8]
   1f128:	cmn	r0, #1
   1f12c:	bhi	1f164 <__assert_fail@plt+0xde34>
   1f130:	ldr	r0, [fp, #-4]
   1f134:	ldr	r1, [sp, #8]
   1f138:	ldr	r2, [sp, #8]
   1f13c:	cmp	r2, #0
   1f140:	movw	r2, #0
   1f144:	movne	r2, #1
   1f148:	mvn	r3, #0
   1f14c:	eor	r2, r2, r3
   1f150:	and	r2, r2, #1
   1f154:	orr	r1, r1, r2
   1f158:	bl	1eaa8 <__assert_fail@plt+0xd778>
   1f15c:	str	r0, [sp, #4]
   1f160:	b	1f16c <__assert_fail@plt+0xde3c>
   1f164:	bl	1f0b4 <__assert_fail@plt+0xdd84>
   1f168:	str	r0, [sp, #4]
   1f16c:	ldr	r0, [sp, #4]
   1f170:	mov	sp, fp
   1f174:	pop	{fp, pc}
   1f178:	push	{fp, lr}
   1f17c:	mov	fp, sp
   1f180:	sub	sp, sp, #16
   1f184:	str	r0, [sp, #8]
   1f188:	str	r1, [sp, #4]
   1f18c:	ldr	r0, [sp, #8]
   1f190:	mvn	r1, #0
   1f194:	cmp	r1, r0
   1f198:	bcs	1f1bc <__assert_fail@plt+0xde8c>
   1f19c:	ldr	r0, [sp, #4]
   1f1a0:	cmp	r0, #0
   1f1a4:	beq	1f1b4 <__assert_fail@plt+0xde84>
   1f1a8:	bl	1f0b4 <__assert_fail@plt+0xdd84>
   1f1ac:	str	r0, [fp, #-4]
   1f1b0:	b	1f1fc <__assert_fail@plt+0xdecc>
   1f1b4:	movw	r0, #0
   1f1b8:	str	r0, [sp, #8]
   1f1bc:	ldr	r0, [sp, #4]
   1f1c0:	mvn	r1, #0
   1f1c4:	cmp	r1, r0
   1f1c8:	bcs	1f1ec <__assert_fail@plt+0xdebc>
   1f1cc:	ldr	r0, [sp, #8]
   1f1d0:	cmp	r0, #0
   1f1d4:	beq	1f1e4 <__assert_fail@plt+0xdeb4>
   1f1d8:	bl	1f0b4 <__assert_fail@plt+0xdd84>
   1f1dc:	str	r0, [fp, #-4]
   1f1e0:	b	1f1fc <__assert_fail@plt+0xdecc>
   1f1e4:	movw	r0, #0
   1f1e8:	str	r0, [sp, #4]
   1f1ec:	ldr	r0, [sp, #8]
   1f1f0:	ldr	r1, [sp, #4]
   1f1f4:	bl	1e99c <__assert_fail@plt+0xd66c>
   1f1f8:	str	r0, [fp, #-4]
   1f1fc:	ldr	r0, [fp, #-4]
   1f200:	mov	sp, fp
   1f204:	pop	{fp, pc}
   1f208:	push	{fp, lr}
   1f20c:	mov	fp, sp
   1f210:	sub	sp, sp, #16
   1f214:	str	r0, [fp, #-4]
   1f218:	str	r1, [sp, #8]
   1f21c:	str	r2, [sp, #4]
   1f220:	ldr	r0, [sp, #8]
   1f224:	cmp	r0, #0
   1f228:	beq	1f238 <__assert_fail@plt+0xdf08>
   1f22c:	ldr	r0, [sp, #4]
   1f230:	cmp	r0, #0
   1f234:	bne	1f244 <__assert_fail@plt+0xdf14>
   1f238:	movw	r0, #1
   1f23c:	str	r0, [sp, #4]
   1f240:	str	r0, [sp, #8]
   1f244:	ldr	r0, [sp, #8]
   1f248:	cmn	r0, #1
   1f24c:	bhi	1f274 <__assert_fail@plt+0xdf44>
   1f250:	ldr	r0, [sp, #4]
   1f254:	cmn	r0, #1
   1f258:	bhi	1f274 <__assert_fail@plt+0xdf44>
   1f25c:	ldr	r0, [fp, #-4]
   1f260:	ldr	r1, [sp, #8]
   1f264:	ldr	r2, [sp, #4]
   1f268:	bl	1f63c <__assert_fail@plt+0xe30c>
   1f26c:	str	r0, [sp]
   1f270:	b	1f27c <__assert_fail@plt+0xdf4c>
   1f274:	bl	1f0b4 <__assert_fail@plt+0xdd84>
   1f278:	str	r0, [sp]
   1f27c:	ldr	r0, [sp]
   1f280:	mov	sp, fp
   1f284:	pop	{fp, pc}
   1f288:	push	{fp, lr}
   1f28c:	mov	fp, sp
   1f290:	sub	sp, sp, #8
   1f294:	movw	r0, #14
   1f298:	bl	112b8 <nl_langinfo@plt>
   1f29c:	str	r0, [sp, #4]
   1f2a0:	ldr	r0, [sp, #4]
   1f2a4:	movw	r1, #0
   1f2a8:	cmp	r0, r1
   1f2ac:	bne	1f2bc <__assert_fail@plt+0xdf8c>
   1f2b0:	movw	r0, #7746	; 0x1e42
   1f2b4:	movt	r0, #2
   1f2b8:	str	r0, [sp, #4]
   1f2bc:	ldr	r0, [sp, #4]
   1f2c0:	ldrb	r0, [r0]
   1f2c4:	cmp	r0, #0
   1f2c8:	bne	1f2d8 <__assert_fail@plt+0xdfa8>
   1f2cc:	movw	r0, #9584	; 0x2570
   1f2d0:	movt	r0, #2
   1f2d4:	str	r0, [sp, #4]
   1f2d8:	ldr	r0, [sp, #4]
   1f2dc:	mov	sp, fp
   1f2e0:	pop	{fp, pc}
   1f2e4:	push	{fp, lr}
   1f2e8:	mov	fp, sp
   1f2ec:	sub	sp, sp, #32
   1f2f0:	str	r0, [fp, #-8]
   1f2f4:	str	r1, [fp, #-12]
   1f2f8:	str	r2, [sp, #16]
   1f2fc:	str	r3, [sp, #12]
   1f300:	ldr	r0, [fp, #-8]
   1f304:	movw	r1, #0
   1f308:	cmp	r0, r1
   1f30c:	bne	1f318 <__assert_fail@plt+0xdfe8>
   1f310:	add	r0, sp, #4
   1f314:	str	r0, [fp, #-8]
   1f318:	ldr	r0, [fp, #-8]
   1f31c:	ldr	r1, [fp, #-12]
   1f320:	ldr	r2, [sp, #16]
   1f324:	ldr	r3, [sp, #12]
   1f328:	bl	11174 <mbrtowc@plt>
   1f32c:	str	r0, [sp, #8]
   1f330:	ldr	r0, [sp, #8]
   1f334:	mvn	r1, #1
   1f338:	cmp	r1, r0
   1f33c:	bhi	1f380 <__assert_fail@plt+0xe050>
   1f340:	ldr	r0, [sp, #16]
   1f344:	cmp	r0, #0
   1f348:	beq	1f380 <__assert_fail@plt+0xe050>
   1f34c:	movw	r0, #0
   1f350:	bl	148b4 <__assert_fail@plt+0x3584>
   1f354:	tst	r0, #1
   1f358:	bne	1f380 <__assert_fail@plt+0xe050>
   1f35c:	ldr	r0, [fp, #-12]
   1f360:	ldrb	r0, [r0]
   1f364:	strb	r0, [sp, #3]
   1f368:	ldrb	r0, [sp, #3]
   1f36c:	ldr	r1, [fp, #-8]
   1f370:	str	r0, [r1]
   1f374:	movw	r0, #1
   1f378:	str	r0, [fp, #-4]
   1f37c:	b	1f388 <__assert_fail@plt+0xe058>
   1f380:	ldr	r0, [sp, #8]
   1f384:	str	r0, [fp, #-4]
   1f388:	ldr	r0, [fp, #-4]
   1f38c:	mov	sp, fp
   1f390:	pop	{fp, pc}
   1f394:	push	{fp, lr}
   1f398:	mov	fp, sp
   1f39c:	sub	sp, sp, #24
   1f3a0:	str	r0, [fp, #-4]
   1f3a4:	str	r1, [fp, #-8]
   1f3a8:	str	r2, [sp, #12]
   1f3ac:	str	r3, [sp, #8]
   1f3b0:	ldr	r0, [fp, #-8]
   1f3b4:	ldr	r1, [sp, #8]
   1f3b8:	cmp	r0, r1
   1f3bc:	bne	1f3ec <__assert_fail@plt+0xe0bc>
   1f3c0:	ldr	r0, [fp, #-4]
   1f3c4:	ldr	r1, [sp, #12]
   1f3c8:	ldr	r2, [fp, #-8]
   1f3cc:	bl	11108 <memcmp@plt>
   1f3d0:	cmp	r0, #0
   1f3d4:	bne	1f3ec <__assert_fail@plt+0xe0bc>
   1f3d8:	bl	11228 <__errno_location@plt>
   1f3dc:	movw	r1, #0
   1f3e0:	str	r1, [r0]
   1f3e4:	str	r1, [sp, #4]
   1f3e8:	b	1f480 <__assert_fail@plt+0xe150>
   1f3ec:	ldr	r0, [fp, #-4]
   1f3f0:	ldr	r1, [fp, #-8]
   1f3f4:	add	r0, r0, r1
   1f3f8:	ldrb	r0, [r0]
   1f3fc:	strb	r0, [sp, #3]
   1f400:	ldr	r0, [sp, #12]
   1f404:	ldr	r1, [sp, #8]
   1f408:	add	r0, r0, r1
   1f40c:	ldrb	r0, [r0]
   1f410:	strb	r0, [sp, #2]
   1f414:	ldr	r0, [fp, #-4]
   1f418:	ldr	r1, [fp, #-8]
   1f41c:	add	r0, r0, r1
   1f420:	movw	r1, #0
   1f424:	strb	r1, [r0]
   1f428:	ldr	r0, [sp, #12]
   1f42c:	ldr	r2, [sp, #8]
   1f430:	add	r0, r0, r2
   1f434:	strb	r1, [r0]
   1f438:	ldr	r0, [fp, #-4]
   1f43c:	ldr	r1, [fp, #-8]
   1f440:	add	r1, r1, #1
   1f444:	ldr	r2, [sp, #12]
   1f448:	ldr	r3, [sp, #8]
   1f44c:	add	r3, r3, #1
   1f450:	bl	1f48c <__assert_fail@plt+0xe15c>
   1f454:	str	r0, [sp, #4]
   1f458:	ldrb	r0, [sp, #3]
   1f45c:	ldr	r1, [fp, #-4]
   1f460:	ldr	r2, [fp, #-8]
   1f464:	add	r1, r1, r2
   1f468:	strb	r0, [r1]
   1f46c:	ldrb	r0, [sp, #2]
   1f470:	ldr	r1, [sp, #12]
   1f474:	ldr	r2, [sp, #8]
   1f478:	add	r1, r1, r2
   1f47c:	strb	r0, [r1]
   1f480:	ldr	r0, [sp, #4]
   1f484:	mov	sp, fp
   1f488:	pop	{fp, pc}
   1f48c:	push	{fp, lr}
   1f490:	mov	fp, sp
   1f494:	sub	sp, sp, #40	; 0x28
   1f498:	str	r0, [fp, #-8]
   1f49c:	str	r1, [fp, #-12]
   1f4a0:	str	r2, [fp, #-16]
   1f4a4:	str	r3, [sp, #20]
   1f4a8:	bl	11228 <__errno_location@plt>
   1f4ac:	movw	r1, #0
   1f4b0:	str	r1, [r0]
   1f4b4:	ldr	r0, [fp, #-8]
   1f4b8:	ldr	r1, [fp, #-16]
   1f4bc:	bl	1118c <strcoll@plt>
   1f4c0:	str	r0, [sp, #16]
   1f4c4:	cmp	r0, #0
   1f4c8:	movw	r0, #1
   1f4cc:	str	r0, [sp, #4]
   1f4d0:	bne	1f4ec <__assert_fail@plt+0xe1bc>
   1f4d4:	bl	11228 <__errno_location@plt>
   1f4d8:	ldr	r0, [r0]
   1f4dc:	cmp	r0, #0
   1f4e0:	movw	r0, #0
   1f4e4:	movne	r0, #1
   1f4e8:	str	r0, [sp, #4]
   1f4ec:	ldr	r0, [sp, #4]
   1f4f0:	mvn	r1, #0
   1f4f4:	eor	r0, r0, r1
   1f4f8:	tst	r0, #1
   1f4fc:	beq	1f5ac <__assert_fail@plt+0xe27c>
   1f500:	ldr	r0, [fp, #-8]
   1f504:	bl	11204 <strlen@plt>
   1f508:	add	r0, r0, #1
   1f50c:	str	r0, [sp, #12]
   1f510:	ldr	r0, [fp, #-16]
   1f514:	bl	11204 <strlen@plt>
   1f518:	add	r0, r0, #1
   1f51c:	str	r0, [sp, #8]
   1f520:	ldr	r0, [sp, #12]
   1f524:	ldr	r1, [fp, #-8]
   1f528:	add	r0, r1, r0
   1f52c:	str	r0, [fp, #-8]
   1f530:	ldr	r0, [sp, #8]
   1f534:	ldr	r1, [fp, #-16]
   1f538:	add	r0, r1, r0
   1f53c:	str	r0, [fp, #-16]
   1f540:	ldr	r0, [sp, #12]
   1f544:	ldr	r1, [fp, #-12]
   1f548:	sub	r0, r1, r0
   1f54c:	str	r0, [fp, #-12]
   1f550:	ldr	r0, [sp, #8]
   1f554:	ldr	r1, [sp, #20]
   1f558:	sub	r0, r1, r0
   1f55c:	str	r0, [sp, #20]
   1f560:	ldr	r0, [fp, #-12]
   1f564:	cmp	r0, #0
   1f568:	bne	1f590 <__assert_fail@plt+0xe260>
   1f56c:	ldr	r0, [sp, #20]
   1f570:	cmp	r0, #0
   1f574:	movw	r0, #0
   1f578:	movne	r0, #1
   1f57c:	and	r0, r0, #1
   1f580:	movw	r1, #0
   1f584:	sub	r0, r1, r0
   1f588:	str	r0, [fp, #-4]
   1f58c:	b	1f5b4 <__assert_fail@plt+0xe284>
   1f590:	ldr	r0, [sp, #20]
   1f594:	cmp	r0, #0
   1f598:	bne	1f5a8 <__assert_fail@plt+0xe278>
   1f59c:	movw	r0, #1
   1f5a0:	str	r0, [fp, #-4]
   1f5a4:	b	1f5b4 <__assert_fail@plt+0xe284>
   1f5a8:	b	1f4a8 <__assert_fail@plt+0xe178>
   1f5ac:	ldr	r0, [sp, #16]
   1f5b0:	str	r0, [fp, #-4]
   1f5b4:	ldr	r0, [fp, #-4]
   1f5b8:	mov	sp, fp
   1f5bc:	pop	{fp, pc}
   1f5c0:	push	{fp, lr}
   1f5c4:	mov	fp, sp
   1f5c8:	sub	sp, sp, #24
   1f5cc:	str	r0, [fp, #-8]
   1f5d0:	str	r1, [sp, #12]
   1f5d4:	str	r2, [sp, #8]
   1f5d8:	str	r3, [sp, #4]
   1f5dc:	ldr	r0, [sp, #12]
   1f5e0:	ldr	r1, [sp, #4]
   1f5e4:	cmp	r0, r1
   1f5e8:	bne	1f618 <__assert_fail@plt+0xe2e8>
   1f5ec:	ldr	r0, [fp, #-8]
   1f5f0:	ldr	r1, [sp, #8]
   1f5f4:	ldr	r2, [sp, #12]
   1f5f8:	bl	11108 <memcmp@plt>
   1f5fc:	cmp	r0, #0
   1f600:	bne	1f618 <__assert_fail@plt+0xe2e8>
   1f604:	bl	11228 <__errno_location@plt>
   1f608:	movw	r1, #0
   1f60c:	str	r1, [r0]
   1f610:	str	r1, [fp, #-4]
   1f614:	b	1f630 <__assert_fail@plt+0xe300>
   1f618:	ldr	r0, [fp, #-8]
   1f61c:	ldr	r1, [sp, #12]
   1f620:	ldr	r2, [sp, #8]
   1f624:	ldr	r3, [sp, #4]
   1f628:	bl	1f48c <__assert_fail@plt+0xe15c>
   1f62c:	str	r0, [fp, #-4]
   1f630:	ldr	r0, [fp, #-4]
   1f634:	mov	sp, fp
   1f638:	pop	{fp, pc}
   1f63c:	push	{fp, lr}
   1f640:	mov	fp, sp
   1f644:	sub	sp, sp, #96	; 0x60
   1f648:	str	r0, [fp, #-8]
   1f64c:	str	r1, [fp, #-12]
   1f650:	str	r2, [fp, #-16]
   1f654:	b	1fa0c <__assert_fail@plt+0xe6dc>
   1f658:	b	1f82c <__assert_fail@plt+0xe4fc>
   1f65c:	ldr	r0, [fp, #-16]
   1f660:	cmp	r0, #0
   1f664:	bcs	1f768 <__assert_fail@plt+0xe438>
   1f668:	ldr	r0, [fp, #-12]
   1f66c:	cmp	r0, #0
   1f670:	bcs	1f6f8 <__assert_fail@plt+0xe3c8>
   1f674:	b	1f694 <__assert_fail@plt+0xe364>
   1f678:	ldr	r0, [fp, #-12]
   1f67c:	ldr	r1, [fp, #-16]
   1f680:	movw	r2, #127	; 0x7f
   1f684:	udiv	r1, r2, r1
   1f688:	cmp	r0, r1
   1f68c:	bcc	1f7fc <__assert_fail@plt+0xe4cc>
   1f690:	b	1f814 <__assert_fail@plt+0xe4e4>
   1f694:	b	1f6a8 <__assert_fail@plt+0xe378>
   1f698:	ldr	r0, [fp, #-16]
   1f69c:	cmp	r0, #1
   1f6a0:	bcc	1f6b8 <__assert_fail@plt+0xe388>
   1f6a4:	b	1f6c4 <__assert_fail@plt+0xe394>
   1f6a8:	ldr	r0, [fp, #-16]
   1f6ac:	movw	r1, #0
   1f6b0:	cmp	r1, r0
   1f6b4:	bcs	1f6c4 <__assert_fail@plt+0xe394>
   1f6b8:	movw	r0, #0
   1f6bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1f6c0:	b	1f6dc <__assert_fail@plt+0xe3ac>
   1f6c4:	ldr	r0, [fp, #-16]
   1f6c8:	movw	r1, #0
   1f6cc:	sub	r0, r1, r0
   1f6d0:	movw	r1, #127	; 0x7f
   1f6d4:	udiv	r0, r1, r0
   1f6d8:	str	r0, [fp, #-24]	; 0xffffffe8
   1f6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6e0:	ldr	r1, [fp, #-12]
   1f6e4:	mvn	r2, #0
   1f6e8:	sub	r1, r2, r1
   1f6ec:	cmp	r0, r1
   1f6f0:	bls	1f7fc <__assert_fail@plt+0xe4cc>
   1f6f4:	b	1f814 <__assert_fail@plt+0xe4e4>
   1f6f8:	ldr	r0, [fp, #-16]
   1f6fc:	cmn	r0, #1
   1f700:	bne	1f74c <__assert_fail@plt+0xe41c>
   1f704:	b	1f724 <__assert_fail@plt+0xe3f4>
   1f708:	ldr	r0, [fp, #-12]
   1f70c:	mvn	r1, #127	; 0x7f
   1f710:	add	r0, r0, r1
   1f714:	movw	r1, #0
   1f718:	cmp	r1, r0
   1f71c:	bcc	1f7fc <__assert_fail@plt+0xe4cc>
   1f720:	b	1f814 <__assert_fail@plt+0xe4e4>
   1f724:	ldr	r0, [fp, #-12]
   1f728:	movw	r1, #0
   1f72c:	cmp	r1, r0
   1f730:	bcs	1f814 <__assert_fail@plt+0xe4e4>
   1f734:	ldr	r0, [fp, #-12]
   1f738:	sub	r0, r0, #1
   1f73c:	movw	r1, #127	; 0x7f
   1f740:	cmp	r1, r0
   1f744:	bcc	1f7fc <__assert_fail@plt+0xe4cc>
   1f748:	b	1f814 <__assert_fail@plt+0xe4e4>
   1f74c:	ldr	r0, [fp, #-16]
   1f750:	mvn	r1, #127	; 0x7f
   1f754:	udiv	r0, r1, r0
   1f758:	ldr	r1, [fp, #-12]
   1f75c:	cmp	r0, r1
   1f760:	bcc	1f7fc <__assert_fail@plt+0xe4cc>
   1f764:	b	1f814 <__assert_fail@plt+0xe4e4>
   1f768:	ldr	r0, [fp, #-16]
   1f76c:	cmp	r0, #0
   1f770:	bne	1f778 <__assert_fail@plt+0xe448>
   1f774:	b	1f814 <__assert_fail@plt+0xe4e4>
   1f778:	ldr	r0, [fp, #-12]
   1f77c:	cmp	r0, #0
   1f780:	bcs	1f7e4 <__assert_fail@plt+0xe4b4>
   1f784:	ldr	r0, [fp, #-12]
   1f788:	cmn	r0, #1
   1f78c:	bne	1f7c8 <__assert_fail@plt+0xe498>
   1f790:	b	1f7b0 <__assert_fail@plt+0xe480>
   1f794:	ldr	r0, [fp, #-16]
   1f798:	mvn	r1, #127	; 0x7f
   1f79c:	add	r0, r0, r1
   1f7a0:	movw	r1, #0
   1f7a4:	cmp	r1, r0
   1f7a8:	bcc	1f7fc <__assert_fail@plt+0xe4cc>
   1f7ac:	b	1f814 <__assert_fail@plt+0xe4e4>
   1f7b0:	ldr	r0, [fp, #-16]
   1f7b4:	sub	r0, r0, #1
   1f7b8:	movw	r1, #127	; 0x7f
   1f7bc:	cmp	r1, r0
   1f7c0:	bcc	1f7fc <__assert_fail@plt+0xe4cc>
   1f7c4:	b	1f814 <__assert_fail@plt+0xe4e4>
   1f7c8:	ldr	r0, [fp, #-12]
   1f7cc:	mvn	r1, #127	; 0x7f
   1f7d0:	udiv	r0, r1, r0
   1f7d4:	ldr	r1, [fp, #-16]
   1f7d8:	cmp	r0, r1
   1f7dc:	bcc	1f7fc <__assert_fail@plt+0xe4cc>
   1f7e0:	b	1f814 <__assert_fail@plt+0xe4e4>
   1f7e4:	ldr	r0, [fp, #-16]
   1f7e8:	movw	r1, #127	; 0x7f
   1f7ec:	udiv	r0, r1, r0
   1f7f0:	ldr	r1, [fp, #-12]
   1f7f4:	cmp	r0, r1
   1f7f8:	bcs	1f814 <__assert_fail@plt+0xe4e4>
   1f7fc:	ldr	r0, [fp, #-12]
   1f800:	ldr	r1, [fp, #-16]
   1f804:	mul	r0, r0, r1
   1f808:	sxtb	r0, r0
   1f80c:	str	r0, [fp, #-20]	; 0xffffffec
   1f810:	b	2093c <__assert_fail@plt+0xf60c>
   1f814:	ldr	r0, [fp, #-12]
   1f818:	ldr	r1, [fp, #-16]
   1f81c:	mul	r0, r0, r1
   1f820:	sxtb	r0, r0
   1f824:	str	r0, [fp, #-20]	; 0xffffffec
   1f828:	b	20954 <__assert_fail@plt+0xf624>
   1f82c:	ldr	r0, [fp, #-16]
   1f830:	cmp	r0, #0
   1f834:	bcs	1f940 <__assert_fail@plt+0xe610>
   1f838:	ldr	r0, [fp, #-12]
   1f83c:	cmp	r0, #0
   1f840:	bcs	1f8c8 <__assert_fail@plt+0xe598>
   1f844:	b	1f864 <__assert_fail@plt+0xe534>
   1f848:	ldr	r0, [fp, #-12]
   1f84c:	ldr	r1, [fp, #-16]
   1f850:	movw	r2, #255	; 0xff
   1f854:	udiv	r1, r2, r1
   1f858:	cmp	r0, r1
   1f85c:	bcc	1f9dc <__assert_fail@plt+0xe6ac>
   1f860:	b	1f9f4 <__assert_fail@plt+0xe6c4>
   1f864:	b	1f878 <__assert_fail@plt+0xe548>
   1f868:	ldr	r0, [fp, #-16]
   1f86c:	cmp	r0, #1
   1f870:	bcc	1f888 <__assert_fail@plt+0xe558>
   1f874:	b	1f894 <__assert_fail@plt+0xe564>
   1f878:	ldr	r0, [fp, #-16]
   1f87c:	movw	r1, #0
   1f880:	cmp	r1, r0
   1f884:	bcs	1f894 <__assert_fail@plt+0xe564>
   1f888:	movw	r0, #0
   1f88c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f890:	b	1f8ac <__assert_fail@plt+0xe57c>
   1f894:	ldr	r0, [fp, #-16]
   1f898:	movw	r1, #0
   1f89c:	sub	r0, r1, r0
   1f8a0:	movw	r1, #255	; 0xff
   1f8a4:	udiv	r0, r1, r0
   1f8a8:	str	r0, [fp, #-28]	; 0xffffffe4
   1f8ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f8b0:	ldr	r1, [fp, #-12]
   1f8b4:	mvn	r2, #0
   1f8b8:	sub	r1, r2, r1
   1f8bc:	cmp	r0, r1
   1f8c0:	bls	1f9dc <__assert_fail@plt+0xe6ac>
   1f8c4:	b	1f9f4 <__assert_fail@plt+0xe6c4>
   1f8c8:	b	1f8d0 <__assert_fail@plt+0xe5a0>
   1f8cc:	b	1f8d4 <__assert_fail@plt+0xe5a4>
   1f8d0:	b	1f924 <__assert_fail@plt+0xe5f4>
   1f8d4:	ldr	r0, [fp, #-16]
   1f8d8:	cmn	r0, #1
   1f8dc:	bne	1f924 <__assert_fail@plt+0xe5f4>
   1f8e0:	b	1f8fc <__assert_fail@plt+0xe5cc>
   1f8e4:	ldr	r0, [fp, #-12]
   1f8e8:	add	r0, r0, #0
   1f8ec:	movw	r1, #0
   1f8f0:	cmp	r1, r0
   1f8f4:	bcc	1f9dc <__assert_fail@plt+0xe6ac>
   1f8f8:	b	1f9f4 <__assert_fail@plt+0xe6c4>
   1f8fc:	ldr	r0, [fp, #-12]
   1f900:	movw	r1, #0
   1f904:	cmp	r1, r0
   1f908:	bcs	1f9f4 <__assert_fail@plt+0xe6c4>
   1f90c:	ldr	r0, [fp, #-12]
   1f910:	sub	r0, r0, #1
   1f914:	mvn	r1, #0
   1f918:	cmp	r1, r0
   1f91c:	bcc	1f9dc <__assert_fail@plt+0xe6ac>
   1f920:	b	1f9f4 <__assert_fail@plt+0xe6c4>
   1f924:	ldr	r0, [fp, #-16]
   1f928:	movw	r1, #0
   1f92c:	udiv	r0, r1, r0
   1f930:	ldr	r1, [fp, #-12]
   1f934:	cmp	r0, r1
   1f938:	bcc	1f9dc <__assert_fail@plt+0xe6ac>
   1f93c:	b	1f9f4 <__assert_fail@plt+0xe6c4>
   1f940:	ldr	r0, [fp, #-16]
   1f944:	cmp	r0, #0
   1f948:	bne	1f950 <__assert_fail@plt+0xe620>
   1f94c:	b	1f9f4 <__assert_fail@plt+0xe6c4>
   1f950:	ldr	r0, [fp, #-12]
   1f954:	cmp	r0, #0
   1f958:	bcs	1f9c4 <__assert_fail@plt+0xe694>
   1f95c:	b	1f964 <__assert_fail@plt+0xe634>
   1f960:	b	1f968 <__assert_fail@plt+0xe638>
   1f964:	b	1f9a8 <__assert_fail@plt+0xe678>
   1f968:	ldr	r0, [fp, #-12]
   1f96c:	cmn	r0, #1
   1f970:	bne	1f9a8 <__assert_fail@plt+0xe678>
   1f974:	b	1f990 <__assert_fail@plt+0xe660>
   1f978:	ldr	r0, [fp, #-16]
   1f97c:	add	r0, r0, #0
   1f980:	movw	r1, #0
   1f984:	cmp	r1, r0
   1f988:	bcc	1f9dc <__assert_fail@plt+0xe6ac>
   1f98c:	b	1f9f4 <__assert_fail@plt+0xe6c4>
   1f990:	ldr	r0, [fp, #-16]
   1f994:	sub	r0, r0, #1
   1f998:	mvn	r1, #0
   1f99c:	cmp	r1, r0
   1f9a0:	bcc	1f9dc <__assert_fail@plt+0xe6ac>
   1f9a4:	b	1f9f4 <__assert_fail@plt+0xe6c4>
   1f9a8:	ldr	r0, [fp, #-12]
   1f9ac:	movw	r1, #0
   1f9b0:	udiv	r0, r1, r0
   1f9b4:	ldr	r1, [fp, #-16]
   1f9b8:	cmp	r0, r1
   1f9bc:	bcc	1f9dc <__assert_fail@plt+0xe6ac>
   1f9c0:	b	1f9f4 <__assert_fail@plt+0xe6c4>
   1f9c4:	ldr	r0, [fp, #-16]
   1f9c8:	movw	r1, #255	; 0xff
   1f9cc:	udiv	r0, r1, r0
   1f9d0:	ldr	r1, [fp, #-12]
   1f9d4:	cmp	r0, r1
   1f9d8:	bcs	1f9f4 <__assert_fail@plt+0xe6c4>
   1f9dc:	ldr	r0, [fp, #-12]
   1f9e0:	ldr	r1, [fp, #-16]
   1f9e4:	mul	r0, r0, r1
   1f9e8:	and	r0, r0, #255	; 0xff
   1f9ec:	str	r0, [fp, #-20]	; 0xffffffec
   1f9f0:	b	2093c <__assert_fail@plt+0xf60c>
   1f9f4:	ldr	r0, [fp, #-12]
   1f9f8:	ldr	r1, [fp, #-16]
   1f9fc:	mul	r0, r0, r1
   1fa00:	and	r0, r0, #255	; 0xff
   1fa04:	str	r0, [fp, #-20]	; 0xffffffec
   1fa08:	b	20954 <__assert_fail@plt+0xf624>
   1fa0c:	b	1fdc4 <__assert_fail@plt+0xea94>
   1fa10:	b	1fbe4 <__assert_fail@plt+0xe8b4>
   1fa14:	ldr	r0, [fp, #-16]
   1fa18:	cmp	r0, #0
   1fa1c:	bcs	1fb20 <__assert_fail@plt+0xe7f0>
   1fa20:	ldr	r0, [fp, #-12]
   1fa24:	cmp	r0, #0
   1fa28:	bcs	1fab0 <__assert_fail@plt+0xe780>
   1fa2c:	b	1fa4c <__assert_fail@plt+0xe71c>
   1fa30:	ldr	r0, [fp, #-12]
   1fa34:	ldr	r1, [fp, #-16]
   1fa38:	movw	r2, #32767	; 0x7fff
   1fa3c:	udiv	r1, r2, r1
   1fa40:	cmp	r0, r1
   1fa44:	bcc	1fbb4 <__assert_fail@plt+0xe884>
   1fa48:	b	1fbcc <__assert_fail@plt+0xe89c>
   1fa4c:	b	1fa60 <__assert_fail@plt+0xe730>
   1fa50:	ldr	r0, [fp, #-16]
   1fa54:	cmp	r0, #1
   1fa58:	bcc	1fa70 <__assert_fail@plt+0xe740>
   1fa5c:	b	1fa7c <__assert_fail@plt+0xe74c>
   1fa60:	ldr	r0, [fp, #-16]
   1fa64:	movw	r1, #0
   1fa68:	cmp	r1, r0
   1fa6c:	bcs	1fa7c <__assert_fail@plt+0xe74c>
   1fa70:	movw	r0, #0
   1fa74:	str	r0, [fp, #-32]	; 0xffffffe0
   1fa78:	b	1fa94 <__assert_fail@plt+0xe764>
   1fa7c:	ldr	r0, [fp, #-16]
   1fa80:	movw	r1, #0
   1fa84:	sub	r0, r1, r0
   1fa88:	movw	r1, #32767	; 0x7fff
   1fa8c:	udiv	r0, r1, r0
   1fa90:	str	r0, [fp, #-32]	; 0xffffffe0
   1fa94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fa98:	ldr	r1, [fp, #-12]
   1fa9c:	mvn	r2, #0
   1faa0:	sub	r1, r2, r1
   1faa4:	cmp	r0, r1
   1faa8:	bls	1fbb4 <__assert_fail@plt+0xe884>
   1faac:	b	1fbcc <__assert_fail@plt+0xe89c>
   1fab0:	ldr	r0, [fp, #-16]
   1fab4:	cmn	r0, #1
   1fab8:	bne	1fb04 <__assert_fail@plt+0xe7d4>
   1fabc:	b	1fadc <__assert_fail@plt+0xe7ac>
   1fac0:	ldr	r0, [pc, #3760]	; 20978 <__assert_fail@plt+0xf648>
   1fac4:	ldr	r1, [fp, #-12]
   1fac8:	add	r0, r1, r0
   1facc:	movw	r1, #0
   1fad0:	cmp	r1, r0
   1fad4:	bcc	1fbb4 <__assert_fail@plt+0xe884>
   1fad8:	b	1fbcc <__assert_fail@plt+0xe89c>
   1fadc:	ldr	r0, [fp, #-12]
   1fae0:	movw	r1, #0
   1fae4:	cmp	r1, r0
   1fae8:	bcs	1fbcc <__assert_fail@plt+0xe89c>
   1faec:	ldr	r0, [fp, #-12]
   1faf0:	sub	r0, r0, #1
   1faf4:	movw	r1, #32767	; 0x7fff
   1faf8:	cmp	r1, r0
   1fafc:	bcc	1fbb4 <__assert_fail@plt+0xe884>
   1fb00:	b	1fbcc <__assert_fail@plt+0xe89c>
   1fb04:	ldr	r0, [pc, #3692]	; 20978 <__assert_fail@plt+0xf648>
   1fb08:	ldr	r1, [fp, #-16]
   1fb0c:	udiv	r0, r0, r1
   1fb10:	ldr	r1, [fp, #-12]
   1fb14:	cmp	r0, r1
   1fb18:	bcc	1fbb4 <__assert_fail@plt+0xe884>
   1fb1c:	b	1fbcc <__assert_fail@plt+0xe89c>
   1fb20:	ldr	r0, [fp, #-16]
   1fb24:	cmp	r0, #0
   1fb28:	bne	1fb30 <__assert_fail@plt+0xe800>
   1fb2c:	b	1fbcc <__assert_fail@plt+0xe89c>
   1fb30:	ldr	r0, [fp, #-12]
   1fb34:	cmp	r0, #0
   1fb38:	bcs	1fb9c <__assert_fail@plt+0xe86c>
   1fb3c:	ldr	r0, [fp, #-12]
   1fb40:	cmn	r0, #1
   1fb44:	bne	1fb80 <__assert_fail@plt+0xe850>
   1fb48:	b	1fb68 <__assert_fail@plt+0xe838>
   1fb4c:	ldr	r0, [pc, #3620]	; 20978 <__assert_fail@plt+0xf648>
   1fb50:	ldr	r1, [fp, #-16]
   1fb54:	add	r0, r1, r0
   1fb58:	movw	r1, #0
   1fb5c:	cmp	r1, r0
   1fb60:	bcc	1fbb4 <__assert_fail@plt+0xe884>
   1fb64:	b	1fbcc <__assert_fail@plt+0xe89c>
   1fb68:	ldr	r0, [fp, #-16]
   1fb6c:	sub	r0, r0, #1
   1fb70:	movw	r1, #32767	; 0x7fff
   1fb74:	cmp	r1, r0
   1fb78:	bcc	1fbb4 <__assert_fail@plt+0xe884>
   1fb7c:	b	1fbcc <__assert_fail@plt+0xe89c>
   1fb80:	ldr	r0, [pc, #3568]	; 20978 <__assert_fail@plt+0xf648>
   1fb84:	ldr	r1, [fp, #-12]
   1fb88:	udiv	r0, r0, r1
   1fb8c:	ldr	r1, [fp, #-16]
   1fb90:	cmp	r0, r1
   1fb94:	bcc	1fbb4 <__assert_fail@plt+0xe884>
   1fb98:	b	1fbcc <__assert_fail@plt+0xe89c>
   1fb9c:	ldr	r0, [fp, #-16]
   1fba0:	movw	r1, #32767	; 0x7fff
   1fba4:	udiv	r0, r1, r0
   1fba8:	ldr	r1, [fp, #-12]
   1fbac:	cmp	r0, r1
   1fbb0:	bcs	1fbcc <__assert_fail@plt+0xe89c>
   1fbb4:	ldr	r0, [fp, #-12]
   1fbb8:	ldr	r1, [fp, #-16]
   1fbbc:	mul	r0, r0, r1
   1fbc0:	sxth	r0, r0
   1fbc4:	str	r0, [fp, #-20]	; 0xffffffec
   1fbc8:	b	2093c <__assert_fail@plt+0xf60c>
   1fbcc:	ldr	r0, [fp, #-12]
   1fbd0:	ldr	r1, [fp, #-16]
   1fbd4:	mul	r0, r0, r1
   1fbd8:	sxth	r0, r0
   1fbdc:	str	r0, [fp, #-20]	; 0xffffffec
   1fbe0:	b	20954 <__assert_fail@plt+0xf624>
   1fbe4:	ldr	r0, [fp, #-16]
   1fbe8:	cmp	r0, #0
   1fbec:	bcs	1fcf8 <__assert_fail@plt+0xe9c8>
   1fbf0:	ldr	r0, [fp, #-12]
   1fbf4:	cmp	r0, #0
   1fbf8:	bcs	1fc80 <__assert_fail@plt+0xe950>
   1fbfc:	b	1fc1c <__assert_fail@plt+0xe8ec>
   1fc00:	ldr	r0, [fp, #-12]
   1fc04:	ldr	r1, [fp, #-16]
   1fc08:	movw	r2, #65535	; 0xffff
   1fc0c:	udiv	r1, r2, r1
   1fc10:	cmp	r0, r1
   1fc14:	bcc	1fd94 <__assert_fail@plt+0xea64>
   1fc18:	b	1fdac <__assert_fail@plt+0xea7c>
   1fc1c:	b	1fc30 <__assert_fail@plt+0xe900>
   1fc20:	ldr	r0, [fp, #-16]
   1fc24:	cmp	r0, #1
   1fc28:	bcc	1fc40 <__assert_fail@plt+0xe910>
   1fc2c:	b	1fc4c <__assert_fail@plt+0xe91c>
   1fc30:	ldr	r0, [fp, #-16]
   1fc34:	movw	r1, #0
   1fc38:	cmp	r1, r0
   1fc3c:	bcs	1fc4c <__assert_fail@plt+0xe91c>
   1fc40:	movw	r0, #0
   1fc44:	str	r0, [fp, #-36]	; 0xffffffdc
   1fc48:	b	1fc64 <__assert_fail@plt+0xe934>
   1fc4c:	ldr	r0, [fp, #-16]
   1fc50:	movw	r1, #0
   1fc54:	sub	r0, r1, r0
   1fc58:	movw	r1, #65535	; 0xffff
   1fc5c:	udiv	r0, r1, r0
   1fc60:	str	r0, [fp, #-36]	; 0xffffffdc
   1fc64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fc68:	ldr	r1, [fp, #-12]
   1fc6c:	mvn	r2, #0
   1fc70:	sub	r1, r2, r1
   1fc74:	cmp	r0, r1
   1fc78:	bls	1fd94 <__assert_fail@plt+0xea64>
   1fc7c:	b	1fdac <__assert_fail@plt+0xea7c>
   1fc80:	b	1fc88 <__assert_fail@plt+0xe958>
   1fc84:	b	1fc8c <__assert_fail@plt+0xe95c>
   1fc88:	b	1fcdc <__assert_fail@plt+0xe9ac>
   1fc8c:	ldr	r0, [fp, #-16]
   1fc90:	cmn	r0, #1
   1fc94:	bne	1fcdc <__assert_fail@plt+0xe9ac>
   1fc98:	b	1fcb4 <__assert_fail@plt+0xe984>
   1fc9c:	ldr	r0, [fp, #-12]
   1fca0:	add	r0, r0, #0
   1fca4:	movw	r1, #0
   1fca8:	cmp	r1, r0
   1fcac:	bcc	1fd94 <__assert_fail@plt+0xea64>
   1fcb0:	b	1fdac <__assert_fail@plt+0xea7c>
   1fcb4:	ldr	r0, [fp, #-12]
   1fcb8:	movw	r1, #0
   1fcbc:	cmp	r1, r0
   1fcc0:	bcs	1fdac <__assert_fail@plt+0xea7c>
   1fcc4:	ldr	r0, [fp, #-12]
   1fcc8:	sub	r0, r0, #1
   1fccc:	mvn	r1, #0
   1fcd0:	cmp	r1, r0
   1fcd4:	bcc	1fd94 <__assert_fail@plt+0xea64>
   1fcd8:	b	1fdac <__assert_fail@plt+0xea7c>
   1fcdc:	ldr	r0, [fp, #-16]
   1fce0:	movw	r1, #0
   1fce4:	udiv	r0, r1, r0
   1fce8:	ldr	r1, [fp, #-12]
   1fcec:	cmp	r0, r1
   1fcf0:	bcc	1fd94 <__assert_fail@plt+0xea64>
   1fcf4:	b	1fdac <__assert_fail@plt+0xea7c>
   1fcf8:	ldr	r0, [fp, #-16]
   1fcfc:	cmp	r0, #0
   1fd00:	bne	1fd08 <__assert_fail@plt+0xe9d8>
   1fd04:	b	1fdac <__assert_fail@plt+0xea7c>
   1fd08:	ldr	r0, [fp, #-12]
   1fd0c:	cmp	r0, #0
   1fd10:	bcs	1fd7c <__assert_fail@plt+0xea4c>
   1fd14:	b	1fd1c <__assert_fail@plt+0xe9ec>
   1fd18:	b	1fd20 <__assert_fail@plt+0xe9f0>
   1fd1c:	b	1fd60 <__assert_fail@plt+0xea30>
   1fd20:	ldr	r0, [fp, #-12]
   1fd24:	cmn	r0, #1
   1fd28:	bne	1fd60 <__assert_fail@plt+0xea30>
   1fd2c:	b	1fd48 <__assert_fail@plt+0xea18>
   1fd30:	ldr	r0, [fp, #-16]
   1fd34:	add	r0, r0, #0
   1fd38:	movw	r1, #0
   1fd3c:	cmp	r1, r0
   1fd40:	bcc	1fd94 <__assert_fail@plt+0xea64>
   1fd44:	b	1fdac <__assert_fail@plt+0xea7c>
   1fd48:	ldr	r0, [fp, #-16]
   1fd4c:	sub	r0, r0, #1
   1fd50:	mvn	r1, #0
   1fd54:	cmp	r1, r0
   1fd58:	bcc	1fd94 <__assert_fail@plt+0xea64>
   1fd5c:	b	1fdac <__assert_fail@plt+0xea7c>
   1fd60:	ldr	r0, [fp, #-12]
   1fd64:	movw	r1, #0
   1fd68:	udiv	r0, r1, r0
   1fd6c:	ldr	r1, [fp, #-16]
   1fd70:	cmp	r0, r1
   1fd74:	bcc	1fd94 <__assert_fail@plt+0xea64>
   1fd78:	b	1fdac <__assert_fail@plt+0xea7c>
   1fd7c:	ldr	r0, [fp, #-16]
   1fd80:	movw	r1, #65535	; 0xffff
   1fd84:	udiv	r0, r1, r0
   1fd88:	ldr	r1, [fp, #-12]
   1fd8c:	cmp	r0, r1
   1fd90:	bcs	1fdac <__assert_fail@plt+0xea7c>
   1fd94:	ldr	r0, [fp, #-12]
   1fd98:	ldr	r1, [fp, #-16]
   1fd9c:	mul	r0, r0, r1
   1fda0:	uxth	r0, r0
   1fda4:	str	r0, [fp, #-20]	; 0xffffffec
   1fda8:	b	2093c <__assert_fail@plt+0xf60c>
   1fdac:	ldr	r0, [fp, #-12]
   1fdb0:	ldr	r1, [fp, #-16]
   1fdb4:	mul	r0, r0, r1
   1fdb8:	uxth	r0, r0
   1fdbc:	str	r0, [fp, #-20]	; 0xffffffec
   1fdc0:	b	20954 <__assert_fail@plt+0xf624>
   1fdc4:	b	1fdc8 <__assert_fail@plt+0xea98>
   1fdc8:	b	1ff8c <__assert_fail@plt+0xec5c>
   1fdcc:	ldr	r0, [fp, #-16]
   1fdd0:	cmp	r0, #0
   1fdd4:	bcs	1fed4 <__assert_fail@plt+0xeba4>
   1fdd8:	ldr	r0, [fp, #-12]
   1fddc:	cmp	r0, #0
   1fde0:	bcs	1fe68 <__assert_fail@plt+0xeb38>
   1fde4:	b	1fe04 <__assert_fail@plt+0xead4>
   1fde8:	ldr	r0, [pc, #2944]	; 20970 <__assert_fail@plt+0xf640>
   1fdec:	ldr	r1, [fp, #-12]
   1fdf0:	ldr	r2, [fp, #-16]
   1fdf4:	udiv	r0, r0, r2
   1fdf8:	cmp	r1, r0
   1fdfc:	bcc	1ff64 <__assert_fail@plt+0xec34>
   1fe00:	b	1ff78 <__assert_fail@plt+0xec48>
   1fe04:	b	1fe18 <__assert_fail@plt+0xeae8>
   1fe08:	ldr	r0, [fp, #-16]
   1fe0c:	cmp	r0, #1
   1fe10:	bcc	1fe28 <__assert_fail@plt+0xeaf8>
   1fe14:	b	1fe34 <__assert_fail@plt+0xeb04>
   1fe18:	ldr	r0, [fp, #-16]
   1fe1c:	movw	r1, #0
   1fe20:	cmp	r1, r0
   1fe24:	bcs	1fe34 <__assert_fail@plt+0xeb04>
   1fe28:	movw	r0, #0
   1fe2c:	str	r0, [fp, #-40]	; 0xffffffd8
   1fe30:	b	1fe4c <__assert_fail@plt+0xeb1c>
   1fe34:	ldr	r0, [pc, #2868]	; 20970 <__assert_fail@plt+0xf640>
   1fe38:	ldr	r1, [fp, #-16]
   1fe3c:	movw	r2, #0
   1fe40:	sub	r1, r2, r1
   1fe44:	udiv	r0, r0, r1
   1fe48:	str	r0, [fp, #-40]	; 0xffffffd8
   1fe4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fe50:	ldr	r1, [fp, #-12]
   1fe54:	mvn	r2, #0
   1fe58:	sub	r1, r2, r1
   1fe5c:	cmp	r0, r1
   1fe60:	bls	1ff64 <__assert_fail@plt+0xec34>
   1fe64:	b	1ff78 <__assert_fail@plt+0xec48>
   1fe68:	ldr	r0, [fp, #-16]
   1fe6c:	cmn	r0, #1
   1fe70:	bne	1feb8 <__assert_fail@plt+0xeb88>
   1fe74:	b	1fe90 <__assert_fail@plt+0xeb60>
   1fe78:	ldr	r0, [fp, #-12]
   1fe7c:	add	r0, r0, #-2147483648	; 0x80000000
   1fe80:	movw	r1, #0
   1fe84:	cmp	r1, r0
   1fe88:	bcc	1ff64 <__assert_fail@plt+0xec34>
   1fe8c:	b	1ff78 <__assert_fail@plt+0xec48>
   1fe90:	ldr	r0, [fp, #-12]
   1fe94:	movw	r1, #0
   1fe98:	cmp	r1, r0
   1fe9c:	bcs	1ff78 <__assert_fail@plt+0xec48>
   1fea0:	ldr	r0, [pc, #2760]	; 20970 <__assert_fail@plt+0xf640>
   1fea4:	ldr	r1, [fp, #-12]
   1fea8:	sub	r1, r1, #1
   1feac:	cmp	r0, r1
   1feb0:	bcc	1ff64 <__assert_fail@plt+0xec34>
   1feb4:	b	1ff78 <__assert_fail@plt+0xec48>
   1feb8:	ldr	r0, [pc, #2740]	; 20974 <__assert_fail@plt+0xf644>
   1febc:	ldr	r1, [fp, #-16]
   1fec0:	udiv	r0, r0, r1
   1fec4:	ldr	r1, [fp, #-12]
   1fec8:	cmp	r0, r1
   1fecc:	bcc	1ff64 <__assert_fail@plt+0xec34>
   1fed0:	b	1ff78 <__assert_fail@plt+0xec48>
   1fed4:	ldr	r0, [fp, #-16]
   1fed8:	cmp	r0, #0
   1fedc:	bne	1fee4 <__assert_fail@plt+0xebb4>
   1fee0:	b	1ff78 <__assert_fail@plt+0xec48>
   1fee4:	ldr	r0, [fp, #-12]
   1fee8:	cmp	r0, #0
   1feec:	bcs	1ff4c <__assert_fail@plt+0xec1c>
   1fef0:	ldr	r0, [fp, #-12]
   1fef4:	cmn	r0, #1
   1fef8:	bne	1ff30 <__assert_fail@plt+0xec00>
   1fefc:	b	1ff18 <__assert_fail@plt+0xebe8>
   1ff00:	ldr	r0, [fp, #-16]
   1ff04:	add	r0, r0, #-2147483648	; 0x80000000
   1ff08:	movw	r1, #0
   1ff0c:	cmp	r1, r0
   1ff10:	bcc	1ff64 <__assert_fail@plt+0xec34>
   1ff14:	b	1ff78 <__assert_fail@plt+0xec48>
   1ff18:	ldr	r0, [pc, #2640]	; 20970 <__assert_fail@plt+0xf640>
   1ff1c:	ldr	r1, [fp, #-16]
   1ff20:	sub	r1, r1, #1
   1ff24:	cmp	r0, r1
   1ff28:	bcc	1ff64 <__assert_fail@plt+0xec34>
   1ff2c:	b	1ff78 <__assert_fail@plt+0xec48>
   1ff30:	ldr	r0, [pc, #2620]	; 20974 <__assert_fail@plt+0xf644>
   1ff34:	ldr	r1, [fp, #-12]
   1ff38:	udiv	r0, r0, r1
   1ff3c:	ldr	r1, [fp, #-16]
   1ff40:	cmp	r0, r1
   1ff44:	bcc	1ff64 <__assert_fail@plt+0xec34>
   1ff48:	b	1ff78 <__assert_fail@plt+0xec48>
   1ff4c:	ldr	r0, [pc, #2588]	; 20970 <__assert_fail@plt+0xf640>
   1ff50:	ldr	r1, [fp, #-16]
   1ff54:	udiv	r0, r0, r1
   1ff58:	ldr	r1, [fp, #-12]
   1ff5c:	cmp	r0, r1
   1ff60:	bcs	1ff78 <__assert_fail@plt+0xec48>
   1ff64:	ldr	r0, [fp, #-12]
   1ff68:	ldr	r1, [fp, #-16]
   1ff6c:	mul	r0, r0, r1
   1ff70:	str	r0, [fp, #-20]	; 0xffffffec
   1ff74:	b	2093c <__assert_fail@plt+0xf60c>
   1ff78:	ldr	r0, [fp, #-12]
   1ff7c:	ldr	r1, [fp, #-16]
   1ff80:	mul	r0, r0, r1
   1ff84:	str	r0, [fp, #-20]	; 0xffffffec
   1ff88:	b	20954 <__assert_fail@plt+0xf624>
   1ff8c:	ldr	r0, [fp, #-16]
   1ff90:	cmp	r0, #0
   1ff94:	bcs	200a0 <__assert_fail@plt+0xed70>
   1ff98:	ldr	r0, [fp, #-12]
   1ff9c:	cmp	r0, #0
   1ffa0:	bcs	20028 <__assert_fail@plt+0xecf8>
   1ffa4:	b	1ffc4 <__assert_fail@plt+0xec94>
   1ffa8:	ldr	r0, [fp, #-12]
   1ffac:	ldr	r1, [fp, #-16]
   1ffb0:	mvn	r2, #0
   1ffb4:	udiv	r1, r2, r1
   1ffb8:	cmp	r0, r1
   1ffbc:	bcc	2013c <__assert_fail@plt+0xee0c>
   1ffc0:	b	20150 <__assert_fail@plt+0xee20>
   1ffc4:	b	1ffd8 <__assert_fail@plt+0xeca8>
   1ffc8:	ldr	r0, [fp, #-16]
   1ffcc:	cmp	r0, #1
   1ffd0:	bcc	1ffe8 <__assert_fail@plt+0xecb8>
   1ffd4:	b	1fff4 <__assert_fail@plt+0xecc4>
   1ffd8:	ldr	r0, [fp, #-16]
   1ffdc:	movw	r1, #0
   1ffe0:	cmp	r1, r0
   1ffe4:	bcs	1fff4 <__assert_fail@plt+0xecc4>
   1ffe8:	movw	r0, #1
   1ffec:	str	r0, [fp, #-44]	; 0xffffffd4
   1fff0:	b	2000c <__assert_fail@plt+0xecdc>
   1fff4:	ldr	r0, [fp, #-16]
   1fff8:	movw	r1, #0
   1fffc:	sub	r0, r1, r0
   20000:	mvn	r1, #0
   20004:	udiv	r0, r1, r0
   20008:	str	r0, [fp, #-44]	; 0xffffffd4
   2000c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20010:	ldr	r1, [fp, #-12]
   20014:	mvn	r2, #0
   20018:	sub	r1, r2, r1
   2001c:	cmp	r0, r1
   20020:	bls	2013c <__assert_fail@plt+0xee0c>
   20024:	b	20150 <__assert_fail@plt+0xee20>
   20028:	b	20030 <__assert_fail@plt+0xed00>
   2002c:	b	20034 <__assert_fail@plt+0xed04>
   20030:	b	20084 <__assert_fail@plt+0xed54>
   20034:	ldr	r0, [fp, #-16]
   20038:	cmn	r0, #1
   2003c:	bne	20084 <__assert_fail@plt+0xed54>
   20040:	b	2005c <__assert_fail@plt+0xed2c>
   20044:	ldr	r0, [fp, #-12]
   20048:	add	r0, r0, #0
   2004c:	movw	r1, #0
   20050:	cmp	r1, r0
   20054:	bcc	2013c <__assert_fail@plt+0xee0c>
   20058:	b	20150 <__assert_fail@plt+0xee20>
   2005c:	ldr	r0, [fp, #-12]
   20060:	movw	r1, #0
   20064:	cmp	r1, r0
   20068:	bcs	20150 <__assert_fail@plt+0xee20>
   2006c:	ldr	r0, [fp, #-12]
   20070:	sub	r0, r0, #1
   20074:	mvn	r1, #0
   20078:	cmp	r1, r0
   2007c:	bcc	2013c <__assert_fail@plt+0xee0c>
   20080:	b	20150 <__assert_fail@plt+0xee20>
   20084:	ldr	r0, [fp, #-16]
   20088:	movw	r1, #0
   2008c:	udiv	r0, r1, r0
   20090:	ldr	r1, [fp, #-12]
   20094:	cmp	r0, r1
   20098:	bcc	2013c <__assert_fail@plt+0xee0c>
   2009c:	b	20150 <__assert_fail@plt+0xee20>
   200a0:	ldr	r0, [fp, #-16]
   200a4:	cmp	r0, #0
   200a8:	bne	200b0 <__assert_fail@plt+0xed80>
   200ac:	b	20150 <__assert_fail@plt+0xee20>
   200b0:	ldr	r0, [fp, #-12]
   200b4:	cmp	r0, #0
   200b8:	bcs	20124 <__assert_fail@plt+0xedf4>
   200bc:	b	200c4 <__assert_fail@plt+0xed94>
   200c0:	b	200c8 <__assert_fail@plt+0xed98>
   200c4:	b	20108 <__assert_fail@plt+0xedd8>
   200c8:	ldr	r0, [fp, #-12]
   200cc:	cmn	r0, #1
   200d0:	bne	20108 <__assert_fail@plt+0xedd8>
   200d4:	b	200f0 <__assert_fail@plt+0xedc0>
   200d8:	ldr	r0, [fp, #-16]
   200dc:	add	r0, r0, #0
   200e0:	movw	r1, #0
   200e4:	cmp	r1, r0
   200e8:	bcc	2013c <__assert_fail@plt+0xee0c>
   200ec:	b	20150 <__assert_fail@plt+0xee20>
   200f0:	ldr	r0, [fp, #-16]
   200f4:	sub	r0, r0, #1
   200f8:	mvn	r1, #0
   200fc:	cmp	r1, r0
   20100:	bcc	2013c <__assert_fail@plt+0xee0c>
   20104:	b	20150 <__assert_fail@plt+0xee20>
   20108:	ldr	r0, [fp, #-12]
   2010c:	movw	r1, #0
   20110:	udiv	r0, r1, r0
   20114:	ldr	r1, [fp, #-16]
   20118:	cmp	r0, r1
   2011c:	bcc	2013c <__assert_fail@plt+0xee0c>
   20120:	b	20150 <__assert_fail@plt+0xee20>
   20124:	ldr	r0, [fp, #-16]
   20128:	mvn	r1, #0
   2012c:	udiv	r0, r1, r0
   20130:	ldr	r1, [fp, #-12]
   20134:	cmp	r0, r1
   20138:	bcs	20150 <__assert_fail@plt+0xee20>
   2013c:	ldr	r0, [fp, #-12]
   20140:	ldr	r1, [fp, #-16]
   20144:	mul	r0, r0, r1
   20148:	str	r0, [fp, #-20]	; 0xffffffec
   2014c:	b	2093c <__assert_fail@plt+0xf60c>
   20150:	ldr	r0, [fp, #-12]
   20154:	ldr	r1, [fp, #-16]
   20158:	mul	r0, r0, r1
   2015c:	str	r0, [fp, #-20]	; 0xffffffec
   20160:	b	20954 <__assert_fail@plt+0xf624>
   20164:	b	20168 <__assert_fail@plt+0xee38>
   20168:	b	2032c <__assert_fail@plt+0xeffc>
   2016c:	ldr	r0, [fp, #-16]
   20170:	cmp	r0, #0
   20174:	bcs	20274 <__assert_fail@plt+0xef44>
   20178:	ldr	r0, [fp, #-12]
   2017c:	cmp	r0, #0
   20180:	bcs	20208 <__assert_fail@plt+0xeed8>
   20184:	b	201a4 <__assert_fail@plt+0xee74>
   20188:	ldr	r0, [pc, #2016]	; 20970 <__assert_fail@plt+0xf640>
   2018c:	ldr	r1, [fp, #-12]
   20190:	ldr	r2, [fp, #-16]
   20194:	udiv	r0, r0, r2
   20198:	cmp	r1, r0
   2019c:	bcc	20304 <__assert_fail@plt+0xefd4>
   201a0:	b	20318 <__assert_fail@plt+0xefe8>
   201a4:	b	201b8 <__assert_fail@plt+0xee88>
   201a8:	ldr	r0, [fp, #-16]
   201ac:	cmp	r0, #1
   201b0:	bcc	201c8 <__assert_fail@plt+0xee98>
   201b4:	b	201d4 <__assert_fail@plt+0xeea4>
   201b8:	ldr	r0, [fp, #-16]
   201bc:	movw	r1, #0
   201c0:	cmp	r1, r0
   201c4:	bcs	201d4 <__assert_fail@plt+0xeea4>
   201c8:	movw	r0, #0
   201cc:	str	r0, [sp, #48]	; 0x30
   201d0:	b	201ec <__assert_fail@plt+0xeebc>
   201d4:	ldr	r0, [pc, #1940]	; 20970 <__assert_fail@plt+0xf640>
   201d8:	ldr	r1, [fp, #-16]
   201dc:	movw	r2, #0
   201e0:	sub	r1, r2, r1
   201e4:	udiv	r0, r0, r1
   201e8:	str	r0, [sp, #48]	; 0x30
   201ec:	ldr	r0, [sp, #48]	; 0x30
   201f0:	ldr	r1, [fp, #-12]
   201f4:	mvn	r2, #0
   201f8:	sub	r1, r2, r1
   201fc:	cmp	r0, r1
   20200:	bls	20304 <__assert_fail@plt+0xefd4>
   20204:	b	20318 <__assert_fail@plt+0xefe8>
   20208:	ldr	r0, [fp, #-16]
   2020c:	cmn	r0, #1
   20210:	bne	20258 <__assert_fail@plt+0xef28>
   20214:	b	20230 <__assert_fail@plt+0xef00>
   20218:	ldr	r0, [fp, #-12]
   2021c:	add	r0, r0, #-2147483648	; 0x80000000
   20220:	movw	r1, #0
   20224:	cmp	r1, r0
   20228:	bcc	20304 <__assert_fail@plt+0xefd4>
   2022c:	b	20318 <__assert_fail@plt+0xefe8>
   20230:	ldr	r0, [fp, #-12]
   20234:	movw	r1, #0
   20238:	cmp	r1, r0
   2023c:	bcs	20318 <__assert_fail@plt+0xefe8>
   20240:	ldr	r0, [pc, #1832]	; 20970 <__assert_fail@plt+0xf640>
   20244:	ldr	r1, [fp, #-12]
   20248:	sub	r1, r1, #1
   2024c:	cmp	r0, r1
   20250:	bcc	20304 <__assert_fail@plt+0xefd4>
   20254:	b	20318 <__assert_fail@plt+0xefe8>
   20258:	ldr	r0, [pc, #1812]	; 20974 <__assert_fail@plt+0xf644>
   2025c:	ldr	r1, [fp, #-16]
   20260:	udiv	r0, r0, r1
   20264:	ldr	r1, [fp, #-12]
   20268:	cmp	r0, r1
   2026c:	bcc	20304 <__assert_fail@plt+0xefd4>
   20270:	b	20318 <__assert_fail@plt+0xefe8>
   20274:	ldr	r0, [fp, #-16]
   20278:	cmp	r0, #0
   2027c:	bne	20284 <__assert_fail@plt+0xef54>
   20280:	b	20318 <__assert_fail@plt+0xefe8>
   20284:	ldr	r0, [fp, #-12]
   20288:	cmp	r0, #0
   2028c:	bcs	202ec <__assert_fail@plt+0xefbc>
   20290:	ldr	r0, [fp, #-12]
   20294:	cmn	r0, #1
   20298:	bne	202d0 <__assert_fail@plt+0xefa0>
   2029c:	b	202b8 <__assert_fail@plt+0xef88>
   202a0:	ldr	r0, [fp, #-16]
   202a4:	add	r0, r0, #-2147483648	; 0x80000000
   202a8:	movw	r1, #0
   202ac:	cmp	r1, r0
   202b0:	bcc	20304 <__assert_fail@plt+0xefd4>
   202b4:	b	20318 <__assert_fail@plt+0xefe8>
   202b8:	ldr	r0, [pc, #1712]	; 20970 <__assert_fail@plt+0xf640>
   202bc:	ldr	r1, [fp, #-16]
   202c0:	sub	r1, r1, #1
   202c4:	cmp	r0, r1
   202c8:	bcc	20304 <__assert_fail@plt+0xefd4>
   202cc:	b	20318 <__assert_fail@plt+0xefe8>
   202d0:	ldr	r0, [pc, #1692]	; 20974 <__assert_fail@plt+0xf644>
   202d4:	ldr	r1, [fp, #-12]
   202d8:	udiv	r0, r0, r1
   202dc:	ldr	r1, [fp, #-16]
   202e0:	cmp	r0, r1
   202e4:	bcc	20304 <__assert_fail@plt+0xefd4>
   202e8:	b	20318 <__assert_fail@plt+0xefe8>
   202ec:	ldr	r0, [pc, #1660]	; 20970 <__assert_fail@plt+0xf640>
   202f0:	ldr	r1, [fp, #-16]
   202f4:	udiv	r0, r0, r1
   202f8:	ldr	r1, [fp, #-12]
   202fc:	cmp	r0, r1
   20300:	bcs	20318 <__assert_fail@plt+0xefe8>
   20304:	ldr	r0, [fp, #-12]
   20308:	ldr	r1, [fp, #-16]
   2030c:	mul	r0, r0, r1
   20310:	str	r0, [fp, #-20]	; 0xffffffec
   20314:	b	2093c <__assert_fail@plt+0xf60c>
   20318:	ldr	r0, [fp, #-12]
   2031c:	ldr	r1, [fp, #-16]
   20320:	mul	r0, r0, r1
   20324:	str	r0, [fp, #-20]	; 0xffffffec
   20328:	b	20954 <__assert_fail@plt+0xf624>
   2032c:	ldr	r0, [fp, #-16]
   20330:	cmp	r0, #0
   20334:	bcs	20440 <__assert_fail@plt+0xf110>
   20338:	ldr	r0, [fp, #-12]
   2033c:	cmp	r0, #0
   20340:	bcs	203c8 <__assert_fail@plt+0xf098>
   20344:	b	20364 <__assert_fail@plt+0xf034>
   20348:	ldr	r0, [fp, #-12]
   2034c:	ldr	r1, [fp, #-16]
   20350:	mvn	r2, #0
   20354:	udiv	r1, r2, r1
   20358:	cmp	r0, r1
   2035c:	bcc	204dc <__assert_fail@plt+0xf1ac>
   20360:	b	204f0 <__assert_fail@plt+0xf1c0>
   20364:	b	20378 <__assert_fail@plt+0xf048>
   20368:	ldr	r0, [fp, #-16]
   2036c:	cmp	r0, #1
   20370:	bcc	20388 <__assert_fail@plt+0xf058>
   20374:	b	20394 <__assert_fail@plt+0xf064>
   20378:	ldr	r0, [fp, #-16]
   2037c:	movw	r1, #0
   20380:	cmp	r1, r0
   20384:	bcs	20394 <__assert_fail@plt+0xf064>
   20388:	movw	r0, #1
   2038c:	str	r0, [sp, #44]	; 0x2c
   20390:	b	203ac <__assert_fail@plt+0xf07c>
   20394:	ldr	r0, [fp, #-16]
   20398:	movw	r1, #0
   2039c:	sub	r0, r1, r0
   203a0:	mvn	r1, #0
   203a4:	udiv	r0, r1, r0
   203a8:	str	r0, [sp, #44]	; 0x2c
   203ac:	ldr	r0, [sp, #44]	; 0x2c
   203b0:	ldr	r1, [fp, #-12]
   203b4:	mvn	r2, #0
   203b8:	sub	r1, r2, r1
   203bc:	cmp	r0, r1
   203c0:	bls	204dc <__assert_fail@plt+0xf1ac>
   203c4:	b	204f0 <__assert_fail@plt+0xf1c0>
   203c8:	b	203d0 <__assert_fail@plt+0xf0a0>
   203cc:	b	203d4 <__assert_fail@plt+0xf0a4>
   203d0:	b	20424 <__assert_fail@plt+0xf0f4>
   203d4:	ldr	r0, [fp, #-16]
   203d8:	cmn	r0, #1
   203dc:	bne	20424 <__assert_fail@plt+0xf0f4>
   203e0:	b	203fc <__assert_fail@plt+0xf0cc>
   203e4:	ldr	r0, [fp, #-12]
   203e8:	add	r0, r0, #0
   203ec:	movw	r1, #0
   203f0:	cmp	r1, r0
   203f4:	bcc	204dc <__assert_fail@plt+0xf1ac>
   203f8:	b	204f0 <__assert_fail@plt+0xf1c0>
   203fc:	ldr	r0, [fp, #-12]
   20400:	movw	r1, #0
   20404:	cmp	r1, r0
   20408:	bcs	204f0 <__assert_fail@plt+0xf1c0>
   2040c:	ldr	r0, [fp, #-12]
   20410:	sub	r0, r0, #1
   20414:	mvn	r1, #0
   20418:	cmp	r1, r0
   2041c:	bcc	204dc <__assert_fail@plt+0xf1ac>
   20420:	b	204f0 <__assert_fail@plt+0xf1c0>
   20424:	ldr	r0, [fp, #-16]
   20428:	movw	r1, #0
   2042c:	udiv	r0, r1, r0
   20430:	ldr	r1, [fp, #-12]
   20434:	cmp	r0, r1
   20438:	bcc	204dc <__assert_fail@plt+0xf1ac>
   2043c:	b	204f0 <__assert_fail@plt+0xf1c0>
   20440:	ldr	r0, [fp, #-16]
   20444:	cmp	r0, #0
   20448:	bne	20450 <__assert_fail@plt+0xf120>
   2044c:	b	204f0 <__assert_fail@plt+0xf1c0>
   20450:	ldr	r0, [fp, #-12]
   20454:	cmp	r0, #0
   20458:	bcs	204c4 <__assert_fail@plt+0xf194>
   2045c:	b	20464 <__assert_fail@plt+0xf134>
   20460:	b	20468 <__assert_fail@plt+0xf138>
   20464:	b	204a8 <__assert_fail@plt+0xf178>
   20468:	ldr	r0, [fp, #-12]
   2046c:	cmn	r0, #1
   20470:	bne	204a8 <__assert_fail@plt+0xf178>
   20474:	b	20490 <__assert_fail@plt+0xf160>
   20478:	ldr	r0, [fp, #-16]
   2047c:	add	r0, r0, #0
   20480:	movw	r1, #0
   20484:	cmp	r1, r0
   20488:	bcc	204dc <__assert_fail@plt+0xf1ac>
   2048c:	b	204f0 <__assert_fail@plt+0xf1c0>
   20490:	ldr	r0, [fp, #-16]
   20494:	sub	r0, r0, #1
   20498:	mvn	r1, #0
   2049c:	cmp	r1, r0
   204a0:	bcc	204dc <__assert_fail@plt+0xf1ac>
   204a4:	b	204f0 <__assert_fail@plt+0xf1c0>
   204a8:	ldr	r0, [fp, #-12]
   204ac:	movw	r1, #0
   204b0:	udiv	r0, r1, r0
   204b4:	ldr	r1, [fp, #-16]
   204b8:	cmp	r0, r1
   204bc:	bcc	204dc <__assert_fail@plt+0xf1ac>
   204c0:	b	204f0 <__assert_fail@plt+0xf1c0>
   204c4:	ldr	r0, [fp, #-16]
   204c8:	mvn	r1, #0
   204cc:	udiv	r0, r1, r0
   204d0:	ldr	r1, [fp, #-12]
   204d4:	cmp	r0, r1
   204d8:	bcs	204f0 <__assert_fail@plt+0xf1c0>
   204dc:	ldr	r0, [fp, #-12]
   204e0:	ldr	r1, [fp, #-16]
   204e4:	mul	r0, r0, r1
   204e8:	str	r0, [fp, #-20]	; 0xffffffec
   204ec:	b	2093c <__assert_fail@plt+0xf60c>
   204f0:	ldr	r0, [fp, #-12]
   204f4:	ldr	r1, [fp, #-16]
   204f8:	mul	r0, r0, r1
   204fc:	str	r0, [fp, #-20]	; 0xffffffec
   20500:	b	20954 <__assert_fail@plt+0xf624>
   20504:	b	20720 <__assert_fail@plt+0xf3f0>
   20508:	ldr	r0, [fp, #-16]
   2050c:	cmp	r0, #0
   20510:	bcs	20650 <__assert_fail@plt+0xf320>
   20514:	ldr	r0, [fp, #-12]
   20518:	cmp	r0, #0
   2051c:	bcs	205dc <__assert_fail@plt+0xf2ac>
   20520:	b	20524 <__assert_fail@plt+0xf1f4>
   20524:	ldr	r0, [fp, #-12]
   20528:	ldr	r2, [fp, #-16]
   2052c:	mvn	r1, #0
   20530:	mvn	r3, #-2147483648	; 0x80000000
   20534:	mov	ip, #0
   20538:	str	r0, [sp, #40]	; 0x28
   2053c:	mov	r0, r1
   20540:	mov	r1, r3
   20544:	mov	r3, ip
   20548:	bl	21090 <__assert_fail@plt+0xfd60>
   2054c:	ldr	r2, [sp, #40]	; 0x28
   20550:	subs	r0, r2, r0
   20554:	rscs	r1, r1, #0
   20558:	blt	206f8 <__assert_fail@plt+0xf3c8>
   2055c:	b	2070c <__assert_fail@plt+0xf3dc>
   20560:	b	20574 <__assert_fail@plt+0xf244>
   20564:	ldr	r0, [fp, #-16]
   20568:	cmp	r0, #1
   2056c:	bcc	20584 <__assert_fail@plt+0xf254>
   20570:	b	20598 <__assert_fail@plt+0xf268>
   20574:	ldr	r0, [fp, #-16]
   20578:	movw	r1, #0
   2057c:	cmp	r1, r0
   20580:	bcs	20598 <__assert_fail@plt+0xf268>
   20584:	mov	r0, #0
   20588:	mvn	r1, #0
   2058c:	str	r1, [sp, #36]	; 0x24
   20590:	str	r0, [sp, #32]
   20594:	b	205bc <__assert_fail@plt+0xf28c>
   20598:	ldr	r0, [fp, #-16]
   2059c:	rsb	r2, r0, #0
   205a0:	mvn	r0, #0
   205a4:	mvn	r1, #-2147483648	; 0x80000000
   205a8:	mov	r3, #0
   205ac:	bl	21090 <__assert_fail@plt+0xfd60>
   205b0:	str	r0, [sp, #36]	; 0x24
   205b4:	str	r1, [sp, #32]
   205b8:	b	205bc <__assert_fail@plt+0xf28c>
   205bc:	ldr	r0, [sp, #32]
   205c0:	ldr	r1, [sp, #36]	; 0x24
   205c4:	ldr	r2, [fp, #-12]
   205c8:	mvn	r2, r2
   205cc:	subs	r1, r2, r1
   205d0:	rscs	r0, r0, #0
   205d4:	bge	206f8 <__assert_fail@plt+0xf3c8>
   205d8:	b	2070c <__assert_fail@plt+0xf3dc>
   205dc:	ldr	r0, [fp, #-16]
   205e0:	cmn	r0, #1
   205e4:	bne	20624 <__assert_fail@plt+0xf2f4>
   205e8:	b	20604 <__assert_fail@plt+0xf2d4>
   205ec:	ldr	r0, [fp, #-12]
   205f0:	rsbs	r0, r0, #0
   205f4:	mov	r1, #0
   205f8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   205fc:	blt	206f8 <__assert_fail@plt+0xf3c8>
   20600:	b	2070c <__assert_fail@plt+0xf3dc>
   20604:	ldr	r0, [fp, #-12]
   20608:	movw	r1, #0
   2060c:	cmp	r1, r0
   20610:	bcs	2070c <__assert_fail@plt+0xf3dc>
   20614:	mov	r0, #0
   20618:	cmp	r0, #0
   2061c:	bne	206f8 <__assert_fail@plt+0xf3c8>
   20620:	b	2070c <__assert_fail@plt+0xf3dc>
   20624:	ldr	r2, [fp, #-16]
   20628:	mov	r1, #-2147483648	; 0x80000000
   2062c:	mov	r0, #0
   20630:	str	r0, [sp, #28]
   20634:	ldr	r3, [sp, #28]
   20638:	bl	20fbc <__assert_fail@plt+0xfc8c>
   2063c:	ldr	r2, [fp, #-12]
   20640:	subs	r0, r0, r2
   20644:	sbcs	r1, r1, #0
   20648:	blt	206f8 <__assert_fail@plt+0xf3c8>
   2064c:	b	2070c <__assert_fail@plt+0xf3dc>
   20650:	ldr	r0, [fp, #-16]
   20654:	cmp	r0, #0
   20658:	bne	20660 <__assert_fail@plt+0xf330>
   2065c:	b	2070c <__assert_fail@plt+0xf3dc>
   20660:	ldr	r0, [fp, #-12]
   20664:	cmp	r0, #0
   20668:	bcs	206d0 <__assert_fail@plt+0xf3a0>
   2066c:	ldr	r0, [fp, #-12]
   20670:	cmn	r0, #1
   20674:	bne	206a4 <__assert_fail@plt+0xf374>
   20678:	b	20694 <__assert_fail@plt+0xf364>
   2067c:	ldr	r0, [fp, #-16]
   20680:	rsbs	r0, r0, #0
   20684:	mov	r1, #0
   20688:	sbcs	r1, r1, #-2147483648	; 0x80000000
   2068c:	blt	206f8 <__assert_fail@plt+0xf3c8>
   20690:	b	2070c <__assert_fail@plt+0xf3dc>
   20694:	mov	r0, #0
   20698:	cmp	r0, #0
   2069c:	bne	206f8 <__assert_fail@plt+0xf3c8>
   206a0:	b	2070c <__assert_fail@plt+0xf3dc>
   206a4:	ldr	r2, [fp, #-12]
   206a8:	mov	r1, #-2147483648	; 0x80000000
   206ac:	mov	r0, #0
   206b0:	str	r0, [sp, #24]
   206b4:	ldr	r3, [sp, #24]
   206b8:	bl	20fbc <__assert_fail@plt+0xfc8c>
   206bc:	ldr	r2, [fp, #-16]
   206c0:	subs	r0, r0, r2
   206c4:	sbcs	r1, r1, #0
   206c8:	blt	206f8 <__assert_fail@plt+0xf3c8>
   206cc:	b	2070c <__assert_fail@plt+0xf3dc>
   206d0:	ldr	r2, [fp, #-16]
   206d4:	mvn	r0, #0
   206d8:	mvn	r1, #-2147483648	; 0x80000000
   206dc:	mov	r3, #0
   206e0:	bl	21090 <__assert_fail@plt+0xfd60>
   206e4:	ldr	r2, [fp, #-12]
   206e8:	subs	r0, r0, r2
   206ec:	sbcs	r1, r1, #0
   206f0:	bge	2070c <__assert_fail@plt+0xf3dc>
   206f4:	b	206f8 <__assert_fail@plt+0xf3c8>
   206f8:	ldr	r0, [fp, #-12]
   206fc:	ldr	r1, [fp, #-16]
   20700:	mul	r0, r0, r1
   20704:	str	r0, [fp, #-20]	; 0xffffffec
   20708:	b	2093c <__assert_fail@plt+0xf60c>
   2070c:	ldr	r0, [fp, #-12]
   20710:	ldr	r1, [fp, #-16]
   20714:	mul	r0, r0, r1
   20718:	str	r0, [fp, #-20]	; 0xffffffec
   2071c:	b	20954 <__assert_fail@plt+0xf624>
   20720:	ldr	r0, [fp, #-16]
   20724:	cmp	r0, #0
   20728:	bcs	20864 <__assert_fail@plt+0xf534>
   2072c:	ldr	r0, [fp, #-12]
   20730:	cmp	r0, #0
   20734:	bcs	207ec <__assert_fail@plt+0xf4bc>
   20738:	b	2076c <__assert_fail@plt+0xf43c>
   2073c:	ldr	r0, [fp, #-12]
   20740:	ldr	r2, [fp, #-16]
   20744:	mvn	r1, #0
   20748:	mov	r3, #0
   2074c:	str	r0, [sp, #20]
   20750:	mov	r0, r1
   20754:	bl	21090 <__assert_fail@plt+0xfd60>
   20758:	ldr	r2, [sp, #20]
   2075c:	subs	r0, r2, r0
   20760:	rscs	r1, r1, #0
   20764:	bcc	20914 <__assert_fail@plt+0xf5e4>
   20768:	b	20928 <__assert_fail@plt+0xf5f8>
   2076c:	b	20780 <__assert_fail@plt+0xf450>
   20770:	ldr	r0, [fp, #-16]
   20774:	cmp	r0, #1
   20778:	bcc	20790 <__assert_fail@plt+0xf460>
   2077c:	b	207a4 <__assert_fail@plt+0xf474>
   20780:	ldr	r0, [fp, #-16]
   20784:	movw	r1, #0
   20788:	cmp	r1, r0
   2078c:	bcs	207a4 <__assert_fail@plt+0xf474>
   20790:	mov	r0, #1
   20794:	mvn	r1, #0
   20798:	str	r1, [sp, #16]
   2079c:	str	r0, [sp, #12]
   207a0:	b	207cc <__assert_fail@plt+0xf49c>
   207a4:	ldr	r0, [fp, #-16]
   207a8:	rsb	r2, r0, #0
   207ac:	mvn	r0, #0
   207b0:	mov	r3, #0
   207b4:	str	r0, [sp, #8]
   207b8:	ldr	r1, [sp, #8]
   207bc:	bl	21090 <__assert_fail@plt+0xfd60>
   207c0:	str	r0, [sp, #16]
   207c4:	str	r1, [sp, #12]
   207c8:	b	207cc <__assert_fail@plt+0xf49c>
   207cc:	ldr	r0, [sp, #12]
   207d0:	ldr	r1, [sp, #16]
   207d4:	ldr	r2, [fp, #-12]
   207d8:	mvn	r2, r2
   207dc:	subs	r1, r2, r1
   207e0:	rscs	r0, r0, #0
   207e4:	bcs	20914 <__assert_fail@plt+0xf5e4>
   207e8:	b	20928 <__assert_fail@plt+0xf5f8>
   207ec:	b	207f4 <__assert_fail@plt+0xf4c4>
   207f0:	b	207f8 <__assert_fail@plt+0xf4c8>
   207f4:	b	20848 <__assert_fail@plt+0xf518>
   207f8:	ldr	r0, [fp, #-16]
   207fc:	cmn	r0, #1
   20800:	bne	20848 <__assert_fail@plt+0xf518>
   20804:	b	20820 <__assert_fail@plt+0xf4f0>
   20808:	ldr	r0, [fp, #-12]
   2080c:	add	r0, r0, #0
   20810:	movw	r1, #0
   20814:	cmp	r1, r0
   20818:	bcc	20914 <__assert_fail@plt+0xf5e4>
   2081c:	b	20928 <__assert_fail@plt+0xf5f8>
   20820:	ldr	r0, [fp, #-12]
   20824:	movw	r1, #0
   20828:	cmp	r1, r0
   2082c:	bcs	20928 <__assert_fail@plt+0xf5f8>
   20830:	ldr	r0, [fp, #-12]
   20834:	sub	r0, r0, #1
   20838:	mvn	r1, #0
   2083c:	cmp	r1, r0
   20840:	bcc	20914 <__assert_fail@plt+0xf5e4>
   20844:	b	20928 <__assert_fail@plt+0xf5f8>
   20848:	ldr	r0, [fp, #-16]
   2084c:	movw	r1, #0
   20850:	udiv	r0, r1, r0
   20854:	ldr	r1, [fp, #-12]
   20858:	cmp	r0, r1
   2085c:	bcc	20914 <__assert_fail@plt+0xf5e4>
   20860:	b	20928 <__assert_fail@plt+0xf5f8>
   20864:	ldr	r0, [fp, #-16]
   20868:	cmp	r0, #0
   2086c:	bne	20874 <__assert_fail@plt+0xf544>
   20870:	b	20928 <__assert_fail@plt+0xf5f8>
   20874:	ldr	r0, [fp, #-12]
   20878:	cmp	r0, #0
   2087c:	bcs	208e8 <__assert_fail@plt+0xf5b8>
   20880:	b	20888 <__assert_fail@plt+0xf558>
   20884:	b	2088c <__assert_fail@plt+0xf55c>
   20888:	b	208cc <__assert_fail@plt+0xf59c>
   2088c:	ldr	r0, [fp, #-12]
   20890:	cmn	r0, #1
   20894:	bne	208cc <__assert_fail@plt+0xf59c>
   20898:	b	208b4 <__assert_fail@plt+0xf584>
   2089c:	ldr	r0, [fp, #-16]
   208a0:	add	r0, r0, #0
   208a4:	movw	r1, #0
   208a8:	cmp	r1, r0
   208ac:	bcc	20914 <__assert_fail@plt+0xf5e4>
   208b0:	b	20928 <__assert_fail@plt+0xf5f8>
   208b4:	ldr	r0, [fp, #-16]
   208b8:	sub	r0, r0, #1
   208bc:	mvn	r1, #0
   208c0:	cmp	r1, r0
   208c4:	bcc	20914 <__assert_fail@plt+0xf5e4>
   208c8:	b	20928 <__assert_fail@plt+0xf5f8>
   208cc:	ldr	r0, [fp, #-12]
   208d0:	movw	r1, #0
   208d4:	udiv	r0, r1, r0
   208d8:	ldr	r1, [fp, #-16]
   208dc:	cmp	r0, r1
   208e0:	bcc	20914 <__assert_fail@plt+0xf5e4>
   208e4:	b	20928 <__assert_fail@plt+0xf5f8>
   208e8:	ldr	r2, [fp, #-16]
   208ec:	mvn	r0, #0
   208f0:	mov	r3, #0
   208f4:	str	r0, [sp, #4]
   208f8:	ldr	r1, [sp, #4]
   208fc:	bl	21090 <__assert_fail@plt+0xfd60>
   20900:	ldr	r2, [fp, #-12]
   20904:	subs	r0, r0, r2
   20908:	sbcs	r1, r1, #0
   2090c:	bcs	20928 <__assert_fail@plt+0xf5f8>
   20910:	b	20914 <__assert_fail@plt+0xf5e4>
   20914:	ldr	r0, [fp, #-12]
   20918:	ldr	r1, [fp, #-16]
   2091c:	mul	r0, r0, r1
   20920:	str	r0, [fp, #-20]	; 0xffffffec
   20924:	b	2093c <__assert_fail@plt+0xf60c>
   20928:	ldr	r0, [fp, #-12]
   2092c:	ldr	r1, [fp, #-16]
   20930:	mul	r0, r0, r1
   20934:	str	r0, [fp, #-20]	; 0xffffffec
   20938:	b	20954 <__assert_fail@plt+0xf624>
   2093c:	bl	11228 <__errno_location@plt>
   20940:	movw	r1, #12
   20944:	str	r1, [r0]
   20948:	movw	r0, #0
   2094c:	str	r0, [fp, #-4]
   20950:	b	20964 <__assert_fail@plt+0xf634>
   20954:	ldr	r0, [fp, #-8]
   20958:	ldr	r1, [fp, #-20]	; 0xffffffec
   2095c:	bl	1eaa8 <__assert_fail@plt+0xd778>
   20960:	str	r0, [fp, #-4]
   20964:	ldr	r0, [fp, #-4]
   20968:	mov	sp, fp
   2096c:	pop	{fp, pc}
   20970:	svcvc	0x00ffffff
   20974:	andhi	r0, r0, r0
   20978:			; <UNDEFINED> instruction: 0xffff8000
   2097c:	sub	sp, sp, #12
   20980:	str	r0, [sp, #4]
   20984:	ldr	r0, [sp, #4]
   20988:	sub	r1, r0, #48	; 0x30
   2098c:	cmp	r1, #10
   20990:	str	r0, [sp]
   20994:	bcc	209c4 <__assert_fail@plt+0xf694>
   20998:	b	2099c <__assert_fail@plt+0xf66c>
   2099c:	ldr	r0, [sp]
   209a0:	sub	r1, r0, #65	; 0x41
   209a4:	cmp	r1, #26
   209a8:	bcc	209c4 <__assert_fail@plt+0xf694>
   209ac:	b	209b0 <__assert_fail@plt+0xf680>
   209b0:	ldr	r0, [sp]
   209b4:	sub	r1, r0, #97	; 0x61
   209b8:	cmp	r1, #25
   209bc:	bhi	209d4 <__assert_fail@plt+0xf6a4>
   209c0:	b	209c4 <__assert_fail@plt+0xf694>
   209c4:	movw	r0, #1
   209c8:	and	r0, r0, #1
   209cc:	strb	r0, [sp, #11]
   209d0:	b	209e0 <__assert_fail@plt+0xf6b0>
   209d4:	movw	r0, #0
   209d8:	and	r0, r0, #1
   209dc:	strb	r0, [sp, #11]
   209e0:	ldrb	r0, [sp, #11]
   209e4:	and	r0, r0, #1
   209e8:	add	sp, sp, #12
   209ec:	bx	lr
   209f0:	sub	sp, sp, #12
   209f4:	str	r0, [sp, #4]
   209f8:	ldr	r0, [sp, #4]
   209fc:	sub	r1, r0, #65	; 0x41
   20a00:	cmp	r1, #26
   20a04:	str	r0, [sp]
   20a08:	bcc	20a24 <__assert_fail@plt+0xf6f4>
   20a0c:	b	20a10 <__assert_fail@plt+0xf6e0>
   20a10:	ldr	r0, [sp]
   20a14:	sub	r1, r0, #97	; 0x61
   20a18:	cmp	r1, #25
   20a1c:	bhi	20a34 <__assert_fail@plt+0xf704>
   20a20:	b	20a24 <__assert_fail@plt+0xf6f4>
   20a24:	movw	r0, #1
   20a28:	and	r0, r0, #1
   20a2c:	strb	r0, [sp, #11]
   20a30:	b	20a40 <__assert_fail@plt+0xf710>
   20a34:	movw	r0, #0
   20a38:	and	r0, r0, #1
   20a3c:	strb	r0, [sp, #11]
   20a40:	ldrb	r0, [sp, #11]
   20a44:	and	r0, r0, #1
   20a48:	add	sp, sp, #12
   20a4c:	bx	lr
   20a50:	sub	sp, sp, #8
   20a54:	str	r0, [sp]
   20a58:	ldr	r0, [sp]
   20a5c:	cmp	r0, #127	; 0x7f
   20a60:	bhi	20a78 <__assert_fail@plt+0xf748>
   20a64:	b	20a68 <__assert_fail@plt+0xf738>
   20a68:	movw	r0, #1
   20a6c:	and	r0, r0, #1
   20a70:	strb	r0, [sp, #7]
   20a74:	b	20a84 <__assert_fail@plt+0xf754>
   20a78:	movw	r0, #0
   20a7c:	and	r0, r0, #1
   20a80:	strb	r0, [sp, #7]
   20a84:	ldrb	r0, [sp, #7]
   20a88:	and	r0, r0, #1
   20a8c:	add	sp, sp, #8
   20a90:	bx	lr
   20a94:	sub	sp, sp, #8
   20a98:	str	r0, [sp, #4]
   20a9c:	ldr	r0, [sp, #4]
   20aa0:	cmp	r0, #32
   20aa4:	movw	r0, #1
   20aa8:	str	r0, [sp]
   20aac:	beq	20ac4 <__assert_fail@plt+0xf794>
   20ab0:	ldr	r0, [sp, #4]
   20ab4:	cmp	r0, #9
   20ab8:	movw	r0, #0
   20abc:	moveq	r0, #1
   20ac0:	str	r0, [sp]
   20ac4:	ldr	r0, [sp]
   20ac8:	and	r0, r0, #1
   20acc:	add	sp, sp, #8
   20ad0:	bx	lr
   20ad4:	sub	sp, sp, #12
   20ad8:	str	r0, [sp, #4]
   20adc:	ldr	r0, [sp, #4]
   20ae0:	cmp	r0, #32
   20ae4:	str	r0, [sp]
   20ae8:	bcc	20b00 <__assert_fail@plt+0xf7d0>
   20aec:	b	20af0 <__assert_fail@plt+0xf7c0>
   20af0:	ldr	r0, [sp]
   20af4:	cmp	r0, #127	; 0x7f
   20af8:	bne	20b10 <__assert_fail@plt+0xf7e0>
   20afc:	b	20b00 <__assert_fail@plt+0xf7d0>
   20b00:	movw	r0, #1
   20b04:	and	r0, r0, #1
   20b08:	strb	r0, [sp, #11]
   20b0c:	b	20b1c <__assert_fail@plt+0xf7ec>
   20b10:	movw	r0, #0
   20b14:	and	r0, r0, #1
   20b18:	strb	r0, [sp, #11]
   20b1c:	ldrb	r0, [sp, #11]
   20b20:	and	r0, r0, #1
   20b24:	add	sp, sp, #12
   20b28:	bx	lr
   20b2c:	sub	sp, sp, #8
   20b30:	str	r0, [sp]
   20b34:	ldr	r0, [sp]
   20b38:	sub	r0, r0, #48	; 0x30
   20b3c:	cmp	r0, #9
   20b40:	bhi	20b58 <__assert_fail@plt+0xf828>
   20b44:	b	20b48 <__assert_fail@plt+0xf818>
   20b48:	movw	r0, #1
   20b4c:	and	r0, r0, #1
   20b50:	strb	r0, [sp, #7]
   20b54:	b	20b64 <__assert_fail@plt+0xf834>
   20b58:	movw	r0, #0
   20b5c:	and	r0, r0, #1
   20b60:	strb	r0, [sp, #7]
   20b64:	ldrb	r0, [sp, #7]
   20b68:	and	r0, r0, #1
   20b6c:	add	sp, sp, #8
   20b70:	bx	lr
   20b74:	sub	sp, sp, #8
   20b78:	str	r0, [sp]
   20b7c:	ldr	r0, [sp]
   20b80:	sub	r0, r0, #33	; 0x21
   20b84:	cmp	r0, #93	; 0x5d
   20b88:	bhi	20ba0 <__assert_fail@plt+0xf870>
   20b8c:	b	20b90 <__assert_fail@plt+0xf860>
   20b90:	movw	r0, #1
   20b94:	and	r0, r0, #1
   20b98:	strb	r0, [sp, #7]
   20b9c:	b	20bac <__assert_fail@plt+0xf87c>
   20ba0:	movw	r0, #0
   20ba4:	and	r0, r0, #1
   20ba8:	strb	r0, [sp, #7]
   20bac:	ldrb	r0, [sp, #7]
   20bb0:	and	r0, r0, #1
   20bb4:	add	sp, sp, #8
   20bb8:	bx	lr
   20bbc:	sub	sp, sp, #8
   20bc0:	str	r0, [sp]
   20bc4:	ldr	r0, [sp]
   20bc8:	sub	r0, r0, #97	; 0x61
   20bcc:	cmp	r0, #25
   20bd0:	bhi	20be8 <__assert_fail@plt+0xf8b8>
   20bd4:	b	20bd8 <__assert_fail@plt+0xf8a8>
   20bd8:	movw	r0, #1
   20bdc:	and	r0, r0, #1
   20be0:	strb	r0, [sp, #7]
   20be4:	b	20bf4 <__assert_fail@plt+0xf8c4>
   20be8:	movw	r0, #0
   20bec:	and	r0, r0, #1
   20bf0:	strb	r0, [sp, #7]
   20bf4:	ldrb	r0, [sp, #7]
   20bf8:	and	r0, r0, #1
   20bfc:	add	sp, sp, #8
   20c00:	bx	lr
   20c04:	sub	sp, sp, #8
   20c08:	str	r0, [sp]
   20c0c:	ldr	r0, [sp]
   20c10:	sub	r0, r0, #32
   20c14:	cmp	r0, #94	; 0x5e
   20c18:	bhi	20c30 <__assert_fail@plt+0xf900>
   20c1c:	b	20c20 <__assert_fail@plt+0xf8f0>
   20c20:	movw	r0, #1
   20c24:	and	r0, r0, #1
   20c28:	strb	r0, [sp, #7]
   20c2c:	b	20c3c <__assert_fail@plt+0xf90c>
   20c30:	movw	r0, #0
   20c34:	and	r0, r0, #1
   20c38:	strb	r0, [sp, #7]
   20c3c:	ldrb	r0, [sp, #7]
   20c40:	and	r0, r0, #1
   20c44:	add	sp, sp, #8
   20c48:	bx	lr
   20c4c:	sub	sp, sp, #12
   20c50:	str	r0, [sp, #4]
   20c54:	ldr	r0, [sp, #4]
   20c58:	sub	r0, r0, #33	; 0x21
   20c5c:	cmp	r0, #93	; 0x5d
   20c60:	str	r0, [sp]
   20c64:	bhi	20e00 <__assert_fail@plt+0xfad0>
   20c68:	add	r0, pc, #8
   20c6c:	ldr	r1, [sp]
   20c70:	ldr	r0, [r0, r1, lsl #2]
   20c74:	mov	pc, r0
   20c78:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c7c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c80:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c84:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c88:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c8c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c90:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c94:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c98:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c9c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20ca0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20ca4:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20ca8:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20cac:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20cb0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20cb4:	andeq	r0, r2, r0, lsl #28
   20cb8:	andeq	r0, r2, r0, lsl #28
   20cbc:	andeq	r0, r2, r0, lsl #28
   20cc0:	andeq	r0, r2, r0, lsl #28
   20cc4:	andeq	r0, r2, r0, lsl #28
   20cc8:	andeq	r0, r2, r0, lsl #28
   20ccc:	andeq	r0, r2, r0, lsl #28
   20cd0:	andeq	r0, r2, r0, lsl #28
   20cd4:	andeq	r0, r2, r0, lsl #28
   20cd8:	andeq	r0, r2, r0, lsl #28
   20cdc:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20ce0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20ce4:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20ce8:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20cec:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20cf0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20cf4:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20cf8:	andeq	r0, r2, r0, lsl #28
   20cfc:	andeq	r0, r2, r0, lsl #28
   20d00:	andeq	r0, r2, r0, lsl #28
   20d04:	andeq	r0, r2, r0, lsl #28
   20d08:	andeq	r0, r2, r0, lsl #28
   20d0c:	andeq	r0, r2, r0, lsl #28
   20d10:	andeq	r0, r2, r0, lsl #28
   20d14:	andeq	r0, r2, r0, lsl #28
   20d18:	andeq	r0, r2, r0, lsl #28
   20d1c:	andeq	r0, r2, r0, lsl #28
   20d20:	andeq	r0, r2, r0, lsl #28
   20d24:	andeq	r0, r2, r0, lsl #28
   20d28:	andeq	r0, r2, r0, lsl #28
   20d2c:	andeq	r0, r2, r0, lsl #28
   20d30:	andeq	r0, r2, r0, lsl #28
   20d34:	andeq	r0, r2, r0, lsl #28
   20d38:	andeq	r0, r2, r0, lsl #28
   20d3c:	andeq	r0, r2, r0, lsl #28
   20d40:	andeq	r0, r2, r0, lsl #28
   20d44:	andeq	r0, r2, r0, lsl #28
   20d48:	andeq	r0, r2, r0, lsl #28
   20d4c:	andeq	r0, r2, r0, lsl #28
   20d50:	andeq	r0, r2, r0, lsl #28
   20d54:	andeq	r0, r2, r0, lsl #28
   20d58:	andeq	r0, r2, r0, lsl #28
   20d5c:	andeq	r0, r2, r0, lsl #28
   20d60:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20d64:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20d68:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20d6c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20d70:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20d74:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20d78:	andeq	r0, r2, r0, lsl #28
   20d7c:	andeq	r0, r2, r0, lsl #28
   20d80:	andeq	r0, r2, r0, lsl #28
   20d84:	andeq	r0, r2, r0, lsl #28
   20d88:	andeq	r0, r2, r0, lsl #28
   20d8c:	andeq	r0, r2, r0, lsl #28
   20d90:	andeq	r0, r2, r0, lsl #28
   20d94:	andeq	r0, r2, r0, lsl #28
   20d98:	andeq	r0, r2, r0, lsl #28
   20d9c:	andeq	r0, r2, r0, lsl #28
   20da0:	andeq	r0, r2, r0, lsl #28
   20da4:	andeq	r0, r2, r0, lsl #28
   20da8:	andeq	r0, r2, r0, lsl #28
   20dac:	andeq	r0, r2, r0, lsl #28
   20db0:	andeq	r0, r2, r0, lsl #28
   20db4:	andeq	r0, r2, r0, lsl #28
   20db8:	andeq	r0, r2, r0, lsl #28
   20dbc:	andeq	r0, r2, r0, lsl #28
   20dc0:	andeq	r0, r2, r0, lsl #28
   20dc4:	andeq	r0, r2, r0, lsl #28
   20dc8:	andeq	r0, r2, r0, lsl #28
   20dcc:	andeq	r0, r2, r0, lsl #28
   20dd0:	andeq	r0, r2, r0, lsl #28
   20dd4:	andeq	r0, r2, r0, lsl #28
   20dd8:	andeq	r0, r2, r0, lsl #28
   20ddc:	andeq	r0, r2, r0, lsl #28
   20de0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20de4:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20de8:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20dec:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20df0:	movw	r0, #1
   20df4:	and	r0, r0, #1
   20df8:	strb	r0, [sp, #11]
   20dfc:	b	20e0c <__assert_fail@plt+0xfadc>
   20e00:	movw	r0, #0
   20e04:	and	r0, r0, #1
   20e08:	strb	r0, [sp, #11]
   20e0c:	ldrb	r0, [sp, #11]
   20e10:	and	r0, r0, #1
   20e14:	add	sp, sp, #12
   20e18:	bx	lr
   20e1c:	sub	sp, sp, #12
   20e20:	str	r0, [sp, #4]
   20e24:	ldr	r0, [sp, #4]
   20e28:	sub	r1, r0, #9
   20e2c:	cmp	r1, #5
   20e30:	str	r0, [sp]
   20e34:	bcc	20e4c <__assert_fail@plt+0xfb1c>
   20e38:	b	20e3c <__assert_fail@plt+0xfb0c>
   20e3c:	ldr	r0, [sp]
   20e40:	cmp	r0, #32
   20e44:	bne	20e5c <__assert_fail@plt+0xfb2c>
   20e48:	b	20e4c <__assert_fail@plt+0xfb1c>
   20e4c:	movw	r0, #1
   20e50:	and	r0, r0, #1
   20e54:	strb	r0, [sp, #11]
   20e58:	b	20e68 <__assert_fail@plt+0xfb38>
   20e5c:	movw	r0, #0
   20e60:	and	r0, r0, #1
   20e64:	strb	r0, [sp, #11]
   20e68:	ldrb	r0, [sp, #11]
   20e6c:	and	r0, r0, #1
   20e70:	add	sp, sp, #12
   20e74:	bx	lr
   20e78:	sub	sp, sp, #8
   20e7c:	str	r0, [sp]
   20e80:	ldr	r0, [sp]
   20e84:	sub	r0, r0, #65	; 0x41
   20e88:	cmp	r0, #25
   20e8c:	bhi	20ea4 <__assert_fail@plt+0xfb74>
   20e90:	b	20e94 <__assert_fail@plt+0xfb64>
   20e94:	movw	r0, #1
   20e98:	and	r0, r0, #1
   20e9c:	strb	r0, [sp, #7]
   20ea0:	b	20eb0 <__assert_fail@plt+0xfb80>
   20ea4:	movw	r0, #0
   20ea8:	and	r0, r0, #1
   20eac:	strb	r0, [sp, #7]
   20eb0:	ldrb	r0, [sp, #7]
   20eb4:	and	r0, r0, #1
   20eb8:	add	sp, sp, #8
   20ebc:	bx	lr
   20ec0:	sub	sp, sp, #12
   20ec4:	str	r0, [sp, #4]
   20ec8:	ldr	r0, [sp, #4]
   20ecc:	sub	r1, r0, #48	; 0x30
   20ed0:	cmp	r1, #10
   20ed4:	str	r0, [sp]
   20ed8:	bcc	20f08 <__assert_fail@plt+0xfbd8>
   20edc:	b	20ee0 <__assert_fail@plt+0xfbb0>
   20ee0:	ldr	r0, [sp]
   20ee4:	sub	r1, r0, #65	; 0x41
   20ee8:	cmp	r1, #6
   20eec:	bcc	20f08 <__assert_fail@plt+0xfbd8>
   20ef0:	b	20ef4 <__assert_fail@plt+0xfbc4>
   20ef4:	ldr	r0, [sp]
   20ef8:	sub	r1, r0, #97	; 0x61
   20efc:	cmp	r1, #5
   20f00:	bhi	20f18 <__assert_fail@plt+0xfbe8>
   20f04:	b	20f08 <__assert_fail@plt+0xfbd8>
   20f08:	movw	r0, #1
   20f0c:	and	r0, r0, #1
   20f10:	strb	r0, [sp, #11]
   20f14:	b	20f24 <__assert_fail@plt+0xfbf4>
   20f18:	movw	r0, #0
   20f1c:	and	r0, r0, #1
   20f20:	strb	r0, [sp, #11]
   20f24:	ldrb	r0, [sp, #11]
   20f28:	and	r0, r0, #1
   20f2c:	add	sp, sp, #12
   20f30:	bx	lr
   20f34:	sub	sp, sp, #8
   20f38:	str	r0, [sp]
   20f3c:	ldr	r0, [sp]
   20f40:	sub	r0, r0, #65	; 0x41
   20f44:	cmp	r0, #25
   20f48:	bhi	20f64 <__assert_fail@plt+0xfc34>
   20f4c:	b	20f50 <__assert_fail@plt+0xfc20>
   20f50:	ldr	r0, [sp]
   20f54:	sub	r0, r0, #65	; 0x41
   20f58:	add	r0, r0, #97	; 0x61
   20f5c:	str	r0, [sp, #4]
   20f60:	b	20f6c <__assert_fail@plt+0xfc3c>
   20f64:	ldr	r0, [sp]
   20f68:	str	r0, [sp, #4]
   20f6c:	ldr	r0, [sp, #4]
   20f70:	add	sp, sp, #8
   20f74:	bx	lr
   20f78:	sub	sp, sp, #8
   20f7c:	str	r0, [sp]
   20f80:	ldr	r0, [sp]
   20f84:	sub	r0, r0, #97	; 0x61
   20f88:	cmp	r0, #25
   20f8c:	bhi	20fa8 <__assert_fail@plt+0xfc78>
   20f90:	b	20f94 <__assert_fail@plt+0xfc64>
   20f94:	ldr	r0, [sp]
   20f98:	sub	r0, r0, #97	; 0x61
   20f9c:	add	r0, r0, #65	; 0x41
   20fa0:	str	r0, [sp, #4]
   20fa4:	b	20fb0 <__assert_fail@plt+0xfc80>
   20fa8:	ldr	r0, [sp]
   20fac:	str	r0, [sp, #4]
   20fb0:	ldr	r0, [sp, #4]
   20fb4:	add	sp, sp, #8
   20fb8:	bx	lr
   20fbc:	cmp	r3, #0
   20fc0:	cmpeq	r2, #0
   20fc4:	bne	20fe8 <__assert_fail@plt+0xfcb8>
   20fc8:	cmp	r1, #0
   20fcc:	movlt	r1, #-2147483648	; 0x80000000
   20fd0:	movlt	r0, #0
   20fd4:	blt	20fe4 <__assert_fail@plt+0xfcb4>
   20fd8:	cmpeq	r0, #0
   20fdc:	mvnne	r1, #-2147483648	; 0x80000000
   20fe0:	mvnne	r0, #0
   20fe4:	b	210cc <__assert_fail@plt+0xfd9c>
   20fe8:	sub	sp, sp, #8
   20fec:	push	{sp, lr}
   20ff0:	cmp	r1, #0
   20ff4:	blt	21014 <__assert_fail@plt+0xfce4>
   20ff8:	cmp	r3, #0
   20ffc:	blt	21048 <__assert_fail@plt+0xfd18>
   21000:	bl	210dc <__assert_fail@plt+0xfdac>
   21004:	ldr	lr, [sp, #4]
   21008:	add	sp, sp, #8
   2100c:	pop	{r2, r3}
   21010:	bx	lr
   21014:	rsbs	r0, r0, #0
   21018:	sbc	r1, r1, r1, lsl #1
   2101c:	cmp	r3, #0
   21020:	blt	2106c <__assert_fail@plt+0xfd3c>
   21024:	bl	210dc <__assert_fail@plt+0xfdac>
   21028:	ldr	lr, [sp, #4]
   2102c:	add	sp, sp, #8
   21030:	pop	{r2, r3}
   21034:	rsbs	r0, r0, #0
   21038:	sbc	r1, r1, r1, lsl #1
   2103c:	rsbs	r2, r2, #0
   21040:	sbc	r3, r3, r3, lsl #1
   21044:	bx	lr
   21048:	rsbs	r2, r2, #0
   2104c:	sbc	r3, r3, r3, lsl #1
   21050:	bl	210dc <__assert_fail@plt+0xfdac>
   21054:	ldr	lr, [sp, #4]
   21058:	add	sp, sp, #8
   2105c:	pop	{r2, r3}
   21060:	rsbs	r0, r0, #0
   21064:	sbc	r1, r1, r1, lsl #1
   21068:	bx	lr
   2106c:	rsbs	r2, r2, #0
   21070:	sbc	r3, r3, r3, lsl #1
   21074:	bl	210dc <__assert_fail@plt+0xfdac>
   21078:	ldr	lr, [sp, #4]
   2107c:	add	sp, sp, #8
   21080:	pop	{r2, r3}
   21084:	rsbs	r2, r2, #0
   21088:	sbc	r3, r3, r3, lsl #1
   2108c:	bx	lr
   21090:	cmp	r3, #0
   21094:	cmpeq	r2, #0
   21098:	bne	210b0 <__assert_fail@plt+0xfd80>
   2109c:	cmp	r1, #0
   210a0:	cmpeq	r0, #0
   210a4:	mvnne	r1, #0
   210a8:	mvnne	r0, #0
   210ac:	b	210cc <__assert_fail@plt+0xfd9c>
   210b0:	sub	sp, sp, #8
   210b4:	push	{sp, lr}
   210b8:	bl	210dc <__assert_fail@plt+0xfdac>
   210bc:	ldr	lr, [sp, #4]
   210c0:	add	sp, sp, #8
   210c4:	pop	{r2, r3}
   210c8:	bx	lr
   210cc:	push	{r1, lr}
   210d0:	mov	r0, #8
   210d4:	bl	11090 <raise@plt>
   210d8:	pop	{r1, pc}
   210dc:	cmp	r1, r3
   210e0:	cmpeq	r0, r2
   210e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   210e8:	mov	r4, r0
   210ec:	movcc	r0, #0
   210f0:	mov	r5, r1
   210f4:	ldr	lr, [sp, #36]	; 0x24
   210f8:	movcc	r1, r0
   210fc:	bcc	211f8 <__assert_fail@plt+0xfec8>
   21100:	cmp	r3, #0
   21104:	clzeq	ip, r2
   21108:	clzne	ip, r3
   2110c:	addeq	ip, ip, #32
   21110:	cmp	r5, #0
   21114:	clzeq	r1, r4
   21118:	addeq	r1, r1, #32
   2111c:	clzne	r1, r5
   21120:	sub	ip, ip, r1
   21124:	sub	sl, ip, #32
   21128:	lsl	r9, r3, ip
   2112c:	rsb	fp, ip, #32
   21130:	orr	r9, r9, r2, lsl sl
   21134:	orr	r9, r9, r2, lsr fp
   21138:	lsl	r8, r2, ip
   2113c:	cmp	r5, r9
   21140:	cmpeq	r4, r8
   21144:	movcc	r0, #0
   21148:	movcc	r1, r0
   2114c:	bcc	21168 <__assert_fail@plt+0xfe38>
   21150:	mov	r0, #1
   21154:	subs	r4, r4, r8
   21158:	lsl	r1, r0, sl
   2115c:	orr	r1, r1, r0, lsr fp
   21160:	lsl	r0, r0, ip
   21164:	sbc	r5, r5, r9
   21168:	cmp	ip, #0
   2116c:	beq	211f8 <__assert_fail@plt+0xfec8>
   21170:	lsr	r6, r8, #1
   21174:	orr	r6, r6, r9, lsl #31
   21178:	lsr	r7, r9, #1
   2117c:	mov	r2, ip
   21180:	b	211a4 <__assert_fail@plt+0xfe74>
   21184:	subs	r3, r4, r6
   21188:	sbc	r8, r5, r7
   2118c:	adds	r3, r3, r3
   21190:	adc	r8, r8, r8
   21194:	adds	r4, r3, #1
   21198:	adc	r5, r8, #0
   2119c:	subs	r2, r2, #1
   211a0:	beq	211c0 <__assert_fail@plt+0xfe90>
   211a4:	cmp	r5, r7
   211a8:	cmpeq	r4, r6
   211ac:	bcs	21184 <__assert_fail@plt+0xfe54>
   211b0:	adds	r4, r4, r4
   211b4:	adc	r5, r5, r5
   211b8:	subs	r2, r2, #1
   211bc:	bne	211a4 <__assert_fail@plt+0xfe74>
   211c0:	lsr	r3, r4, ip
   211c4:	orr	r3, r3, r5, lsl fp
   211c8:	lsr	r2, r5, ip
   211cc:	orr	r3, r3, r5, lsr sl
   211d0:	adds	r0, r0, r4
   211d4:	mov	r4, r3
   211d8:	lsl	r3, r2, ip
   211dc:	orr	r3, r3, r4, lsl sl
   211e0:	lsl	ip, r4, ip
   211e4:	orr	r3, r3, r4, lsr fp
   211e8:	adc	r1, r1, r5
   211ec:	subs	r0, r0, ip
   211f0:	mov	r5, r2
   211f4:	sbc	r1, r1, r3
   211f8:	cmp	lr, #0
   211fc:	strdne	r4, [lr]
   21200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21204:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21208:	mov	r7, r0
   2120c:	ldr	r6, [pc, #72]	; 2125c <__assert_fail@plt+0xff2c>
   21210:	ldr	r5, [pc, #72]	; 21260 <__assert_fail@plt+0xff30>
   21214:	add	r6, pc, r6
   21218:	add	r5, pc, r5
   2121c:	sub	r6, r6, r5
   21220:	mov	r8, r1
   21224:	mov	r9, r2
   21228:	bl	1104c <fdopen@plt-0x20>
   2122c:	asrs	r6, r6, #2
   21230:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   21234:	mov	r4, #0
   21238:	add	r4, r4, #1
   2123c:	ldr	r3, [r5], #4
   21240:	mov	r2, r9
   21244:	mov	r1, r8
   21248:	mov	r0, r7
   2124c:	blx	r3
   21250:	cmp	r6, r4
   21254:	bne	21238 <__assert_fail@plt+0xff08>
   21258:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2125c:	strdeq	r1, [r1], -r0
   21260:	andeq	r1, r1, r8, ror #25
   21264:	bx	lr
   21268:	ldr	r3, [pc, #12]	; 2127c <__assert_fail@plt+0xff4c>
   2126c:	mov	r1, #0
   21270:	add	r3, pc, r3
   21274:	ldr	r2, [r3]
   21278:	b	11234 <__cxa_atexit@plt>
   2127c:	andeq	r1, r1, ip, lsl #29

Disassembly of section .fini:

00021280 <.fini>:
   21280:	push	{r3, lr}
   21284:	pop	{r3, pc}
