
../repos/inetutils/src/traceroute:     file format elf32-littlearm


Disassembly of section .init:

00010f9c <.init>:
   10f9c:	push	{r3, lr}
   10fa0:	bl	112e4 <__assert_fail@plt+0x4c>
   10fa4:	pop	{r3, pc}

Disassembly of section .plt:

00010fa8 <calloc@plt-0x14>:
   10fa8:	push	{lr}		; (str lr, [sp, #-4]!)
   10fac:	ldr	lr, [pc, #4]	; 10fb8 <calloc@plt-0x4>
   10fb0:	add	lr, pc, lr
   10fb4:	ldr	pc, [lr, #8]!
   10fb8:	andeq	sl, r1, r8, asr #32

00010fbc <calloc@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #106496	; 0x1a000
   10fc4:	ldr	pc, [ip, #72]!	; 0x48

00010fc8 <fputs_unlocked@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #106496	; 0x1a000
   10fd0:	ldr	pc, [ip, #64]!	; 0x40

00010fd4 <strcmp@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #106496	; 0x1a000
   10fdc:	ldr	pc, [ip, #56]!	; 0x38

00010fe0 <strtol@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #106496	; 0x1a000
   10fe8:	ldr	pc, [ip, #48]!	; 0x30

00010fec <setsockopt@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #106496	; 0x1a000
   10ff4:	ldr	pc, [ip, #40]!	; 0x28

00010ff8 <printf@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #106496	; 0x1a000
   11000:	ldr	pc, [ip, #32]!

00011004 <getprotobyname@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #106496	; 0x1a000
   1100c:	ldr	pc, [ip, #24]!

00011010 <fflush@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #106496	; 0x1a000
   11018:	ldr	pc, [ip, #16]!

0001101c <memmove@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #106496	; 0x1a000
   11024:	ldr	pc, [ip, #8]!

00011028 <strchrnul@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #106496	; 0x1a000
   11030:	ldr	pc, [ip, #0]!

00011034 <free@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #102400	; 0x19000
   1103c:	ldr	pc, [ip, #4088]!	; 0xff8

00011040 <gai_strerror@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #102400	; 0x19000
   11048:	ldr	pc, [ip, #4080]!	; 0xff0

0001104c <strndup@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #102400	; 0x19000
   11054:	ldr	pc, [ip, #4072]!	; 0xfe8

00011058 <memcpy@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #102400	; 0x19000
   11060:	ldr	pc, [ip, #4064]!	; 0xfe0

00011064 <fwrite_unlocked@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #102400	; 0x19000
   1106c:	ldr	pc, [ip, #4056]!	; 0xfd8

00011070 <inet_ntoa@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #102400	; 0x19000
   11078:	ldr	pc, [ip, #4048]!	; 0xfd0

0001107c <select@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #102400	; 0x19000
   11084:	ldr	pc, [ip, #4040]!	; 0xfc8

00011088 <sleep@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #102400	; 0x19000
   11090:	ldr	pc, [ip, #4032]!	; 0xfc0

00011094 <gethostbyaddr@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #102400	; 0x19000
   1109c:	ldr	pc, [ip, #4024]!	; 0xfb8

000110a0 <recvfrom@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #102400	; 0x19000
   110a8:	ldr	pc, [ip, #4016]!	; 0xfb0

000110ac <realloc@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #102400	; 0x19000
   110b4:	ldr	pc, [ip, #4008]!	; 0xfa8

000110b8 <strcasecmp@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #102400	; 0x19000
   110c0:	ldr	pc, [ip, #4000]!	; 0xfa0

000110c4 <funlockfile@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #102400	; 0x19000
   110cc:	ldr	pc, [ip, #3992]!	; 0xf98

000110d0 <fwrite@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #102400	; 0x19000
   110d8:	ldr	pc, [ip, #3984]!	; 0xf90

000110dc <strcat@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #102400	; 0x19000
   110e4:	ldr	pc, [ip, #3976]!	; 0xf88

000110e8 <gettimeofday@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #102400	; 0x19000
   110f0:	ldr	pc, [ip, #3968]!	; 0xf80

000110f4 <error@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #102400	; 0x19000
   110fc:	ldr	pc, [ip, #3960]!	; 0xf78

00011100 <getenv@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #102400	; 0x19000
   11108:	ldr	pc, [ip, #3952]!	; 0xf70

0001110c <malloc@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #102400	; 0x19000
   11114:	ldr	pc, [ip, #3944]!	; 0xf68

00011118 <__libc_start_main@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #102400	; 0x19000
   11120:	ldr	pc, [ip, #3936]!	; 0xf60

00011124 <strerror@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #102400	; 0x19000
   1112c:	ldr	pc, [ip, #3928]!	; 0xf58

00011130 <__ctype_tolower_loc@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #102400	; 0x19000
   11138:	ldr	pc, [ip, #3920]!	; 0xf50

0001113c <__gmon_start__@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #102400	; 0x19000
   11144:	ldr	pc, [ip, #3912]!	; 0xf48

00011148 <mempcpy@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #102400	; 0x19000
   11150:	ldr	pc, [ip, #3904]!	; 0xf40

00011154 <__ctype_b_loc@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #102400	; 0x19000
   1115c:	ldr	pc, [ip, #3896]!	; 0xf38

00011160 <getpid@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #102400	; 0x19000
   11168:	ldr	pc, [ip, #3888]!	; 0xf30

0001116c <exit@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #102400	; 0x19000
   11174:	ldr	pc, [ip, #3880]!	; 0xf28

00011178 <strlen@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #102400	; 0x19000
   11180:	ldr	pc, [ip, #3872]!	; 0xf20

00011184 <strchr@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #102400	; 0x19000
   1118c:	ldr	pc, [ip, #3864]!	; 0xf18

00011190 <fprintf@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #102400	; 0x19000
   11198:	ldr	pc, [ip, #3856]!	; 0xf10

0001119c <__errno_location@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #102400	; 0x19000
   111a4:	ldr	pc, [ip, #3848]!	; 0xf08

000111a8 <strerror_r@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #102400	; 0x19000
   111b0:	ldr	pc, [ip, #3840]!	; 0xf00

000111b4 <memset@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #102400	; 0x19000
   111bc:	ldr	pc, [ip, #3832]!	; 0xef8

000111c0 <putchar@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #102400	; 0x19000
   111c8:	ldr	pc, [ip, #3824]!	; 0xef0

000111cc <memchr@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #102400	; 0x19000
   111d4:	ldr	pc, [ip, #3816]!	; 0xee8

000111d8 <sendto@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #102400	; 0x19000
   111e0:	ldr	pc, [ip, #3808]!	; 0xee0

000111e4 <__overflow@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #102400	; 0x19000
   111ec:	ldr	pc, [ip, #3800]!	; 0xed8

000111f0 <setlocale@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #102400	; 0x19000
   111f8:	ldr	pc, [ip, #3792]!	; 0xed0

000111fc <getnameinfo@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #102400	; 0x19000
   11204:	ldr	pc, [ip, #3784]!	; 0xec8

00011208 <strrchr@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #102400	; 0x19000
   11210:	ldr	pc, [ip, #3776]!	; 0xec0

00011214 <vfprintf@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #102400	; 0x19000
   1121c:	ldr	pc, [ip, #3768]!	; 0xeb8

00011220 <fputc@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #102400	; 0x19000
   11228:	ldr	pc, [ip, #3760]!	; 0xeb0

0001122c <flockfile@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #102400	; 0x19000
   11234:	ldr	pc, [ip, #3752]!	; 0xea8

00011238 <vsnprintf@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #102400	; 0x19000
   11240:	ldr	pc, [ip, #3744]!	; 0xea0

00011244 <qsort@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #102400	; 0x19000
   1124c:	ldr	pc, [ip, #3736]!	; 0xe98

00011250 <strpbrk@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #102400	; 0x19000
   11258:	ldr	pc, [ip, #3728]!	; 0xe90

0001125c <freeaddrinfo@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #102400	; 0x19000
   11264:	ldr	pc, [ip, #3720]!	; 0xe88

00011268 <getaddrinfo@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #102400	; 0x19000
   11270:	ldr	pc, [ip, #3712]!	; 0xe80

00011274 <socket@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #102400	; 0x19000
   1127c:	ldr	pc, [ip, #3704]!	; 0xe78

00011280 <strncmp@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #102400	; 0x19000
   11288:	ldr	pc, [ip, #3696]!	; 0xe70

0001128c <abort@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #102400	; 0x19000
   11294:	ldr	pc, [ip, #3688]!	; 0xe68

00011298 <__assert_fail@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #102400	; 0x19000
   112a0:	ldr	pc, [ip, #3680]!	; 0xe60

Disassembly of section .text:

000112a8 <argp_failure@@Base-0x3544>:
   112a8:	mov	fp, #0
   112ac:	mov	lr, #0
   112b0:	pop	{r1}		; (ldr r1, [sp], #4)
   112b4:	mov	r2, sp
   112b8:	push	{r2}		; (str r2, [sp, #-4]!)
   112bc:	push	{r0}		; (str r0, [sp, #-4]!)
   112c0:	ldr	ip, [pc, #16]	; 112d8 <__assert_fail@plt+0x40>
   112c4:	push	{ip}		; (str ip, [sp, #-4]!)
   112c8:	ldr	r0, [pc, #12]	; 112dc <__assert_fail@plt+0x44>
   112cc:	ldr	r3, [pc, #12]	; 112e0 <__assert_fail@plt+0x48>
   112d0:	bl	11118 <__libc_start_main@plt>
   112d4:	bl	1128c <abort@plt>
   112d8:	andeq	r9, r1, r8, lsr r2
   112dc:	andeq	r2, r1, r4, ror #11
   112e0:	ldrdeq	r9, [r1], -r8
   112e4:	ldr	r3, [pc, #20]	; 11300 <__assert_fail@plt+0x68>
   112e8:	ldr	r2, [pc, #20]	; 11304 <__assert_fail@plt+0x6c>
   112ec:	add	r3, pc, r3
   112f0:	ldr	r2, [r3, r2]
   112f4:	cmp	r2, #0
   112f8:	bxeq	lr
   112fc:	b	1113c <__gmon_start__@plt>
   11300:	andeq	r9, r1, ip, lsl #26
   11304:	andeq	r0, r0, r4, lsl #2
   11308:	ldr	r0, [pc, #24]	; 11328 <__assert_fail@plt+0x90>
   1130c:	ldr	r3, [pc, #24]	; 1132c <__assert_fail@plt+0x94>
   11310:	cmp	r3, r0
   11314:	bxeq	lr
   11318:	ldr	r3, [pc, #16]	; 11330 <__assert_fail@plt+0x98>
   1131c:	cmp	r3, #0
   11320:	bxeq	lr
   11324:	bx	r3
   11328:	muleq	r2, r0, r2
   1132c:	muleq	r2, r0, r2
   11330:	andeq	r0, r0, r0
   11334:	ldr	r0, [pc, #36]	; 11360 <__assert_fail@plt+0xc8>
   11338:	ldr	r1, [pc, #36]	; 11364 <__assert_fail@plt+0xcc>
   1133c:	sub	r1, r1, r0
   11340:	asr	r1, r1, #2
   11344:	add	r1, r1, r1, lsr #31
   11348:	asrs	r1, r1, #1
   1134c:	bxeq	lr
   11350:	ldr	r3, [pc, #16]	; 11368 <__assert_fail@plt+0xd0>
   11354:	cmp	r3, #0
   11358:	bxeq	lr
   1135c:	bx	r3
   11360:	muleq	r2, r0, r2
   11364:	muleq	r2, r0, r2
   11368:	andeq	r0, r0, r0
   1136c:	push	{r4, lr}
   11370:	ldr	r4, [pc, #24]	; 11390 <__assert_fail@plt+0xf8>
   11374:	ldrb	r3, [r4]
   11378:	cmp	r3, #0
   1137c:	popne	{r4, pc}
   11380:	bl	11308 <__assert_fail@plt+0x70>
   11384:	mov	r3, #1
   11388:	strb	r3, [r4]
   1138c:	pop	{r4, pc}
   11390:	andeq	fp, r2, r0, lsr #5
   11394:	b	11334 <__assert_fail@plt+0x9c>
   11398:	strd	r4, [sp, #-16]!
   1139c:	str	r6, [sp, #8]
   113a0:	str	lr, [sp, #12]
   113a4:	sub	sp, sp, #8
   113a8:	mov	r5, r1
   113ac:	cmp	r0, #109	; 0x6d
   113b0:	beq	115ac <__assert_fail@plt+0x314>
   113b4:	mov	r4, r0
   113b8:	mov	r6, r2
   113bc:	ble	11404 <__assert_fail@plt+0x16c>
   113c0:	cmp	r0, #116	; 0x74
   113c4:	beq	11684 <__assert_fail@plt+0x3ec>
   113c8:	ble	114c0 <__assert_fail@plt+0x228>
   113cc:	cmp	r0, #256	; 0x100
   113d0:	beq	1179c <__assert_fail@plt+0x504>
   113d4:	mov	r3, #4
   113d8:	movt	r3, #256	; 0x100
   113dc:	cmp	r0, r3
   113e0:	beq	117d8 <__assert_fail@plt+0x540>
   113e4:	cmp	r0, #119	; 0x77
   113e8:	movne	r0, #7
   113ec:	beq	11748 <__assert_fail@plt+0x4b0>
   113f0:	add	sp, sp, #8
   113f4:	ldrd	r4, [sp]
   113f8:	ldr	r6, [sp, #8]
   113fc:	add	sp, sp, #12
   11400:	pop	{pc}		; (ldr pc, [sp], #4)
   11404:	cmp	r0, #77	; 0x4d
   11408:	beq	116d8 <__assert_fail@plt+0x440>
   1140c:	ble	11494 <__assert_fail@plt+0x1fc>
   11410:	cmp	r0, #102	; 0x66
   11414:	beq	11538 <__assert_fail@plt+0x2a0>
   11418:	cmp	r0, #103	; 0x67
   1141c:	movne	r0, #7
   11420:	bne	113f0 <__assert_fail@plt+0x158>
   11424:	movw	r3, #45732	; 0xb2a4
   11428:	movt	r3, #2
   1142c:	ldr	r4, [r3]
   11430:	cmp	r4, #0
   11434:	beq	11590 <__assert_fail@plt+0x2f8>
   11438:	mov	r0, r4
   1143c:	bl	11178 <strlen@plt>
   11440:	mov	r6, r0
   11444:	mov	r0, r5
   11448:	bl	11178 <strlen@plt>
   1144c:	add	r1, r0, r6
   11450:	add	r1, r1, #3
   11454:	mov	r0, r4
   11458:	bl	177d8 <argp_parse@@Base+0x1370>
   1145c:	movw	r3, #45732	; 0xb2a4
   11460:	movt	r3, #2
   11464:	str	r0, [r3]
   11468:	mov	r2, #44	; 0x2c
   1146c:	strb	r2, [r0, r6]
   11470:	ldr	r0, [r3]
   11474:	add	r0, r0, r6
   11478:	mov	r4, #0
   1147c:	strb	r4, [r0, #1]
   11480:	mov	r1, r5
   11484:	ldr	r0, [r3]
   11488:	bl	110dc <strcat@plt>
   1148c:	mov	r0, r4
   11490:	b	113f0 <__assert_fail@plt+0x158>
   11494:	cmp	r0, #0
   11498:	beq	117b4 <__assert_fail@plt+0x51c>
   1149c:	cmp	r0, #73	; 0x49
   114a0:	movne	r0, #7
   114a4:	bne	113f0 <__assert_fail@plt+0x158>
   114a8:	movw	r3, #45732	; 0xb2a4
   114ac:	movt	r3, #2
   114b0:	mov	r2, #1
   114b4:	str	r2, [r3, #4]
   114b8:	mov	r0, #0
   114bc:	b	113f0 <__assert_fail@plt+0x158>
   114c0:	cmp	r0, #112	; 0x70
   114c4:	beq	11604 <__assert_fail@plt+0x36c>
   114c8:	cmp	r0, #113	; 0x71
   114cc:	movne	r0, #7
   114d0:	bne	113f0 <__assert_fail@plt+0x158>
   114d4:	mov	r2, #10
   114d8:	add	r1, sp, #4
   114dc:	mov	r0, r5
   114e0:	bl	10fe0 <strtol@plt>
   114e4:	movw	r3, #45328	; 0xb110
   114e8:	movt	r3, #2
   114ec:	str	r0, [r3, #12]
   114f0:	ldr	r3, [sp, #4]
   114f4:	ldrb	r2, [r3]
   114f8:	cmp	r2, #0
   114fc:	bne	1166c <__assert_fail@plt+0x3d4>
   11500:	movw	r3, #45328	; 0xb110
   11504:	movt	r3, #2
   11508:	ldr	r3, [r3, #12]
   1150c:	sub	r3, r3, #1
   11510:	cmp	r3, #9
   11514:	movls	r0, #0
   11518:	bls	113f0 <__assert_fail@plt+0x158>
   1151c:	movw	r2, #37716	; 0x9354
   11520:	movt	r2, #1
   11524:	mov	r1, #0
   11528:	mov	r0, #1
   1152c:	bl	110f4 <error@plt>
   11530:	mov	r0, #0
   11534:	b	113f0 <__assert_fail@plt+0x158>
   11538:	mov	r2, #0
   1153c:	add	r1, sp, #4
   11540:	mov	r0, r5
   11544:	bl	10fe0 <strtol@plt>
   11548:	movw	r3, #45328	; 0xb110
   1154c:	movt	r3, #2
   11550:	str	r0, [r3]
   11554:	ldr	r3, [sp, #4]
   11558:	ldrb	r3, [r3]
   1155c:	sub	r0, r0, #1
   11560:	cmp	r0, #254	; 0xfe
   11564:	cmpls	r3, #0
   11568:	moveq	r0, #0
   1156c:	beq	113f0 <__assert_fail@plt+0x158>
   11570:	mov	r3, r5
   11574:	movw	r2, #37604	; 0x92e4
   11578:	movt	r2, #1
   1157c:	mov	r1, #0
   11580:	mov	r0, #1
   11584:	bl	110f4 <error@plt>
   11588:	mov	r0, #0
   1158c:	b	113f0 <__assert_fail@plt+0x158>
   11590:	mov	r0, r1
   11594:	bl	17be4 <argp_parse@@Base+0x177c>
   11598:	movw	r3, #45732	; 0xb2a4
   1159c:	movt	r3, #2
   115a0:	str	r0, [r3]
   115a4:	mov	r0, #0
   115a8:	b	113f0 <__assert_fail@plt+0x158>
   115ac:	mov	r2, #0
   115b0:	add	r1, sp, #4
   115b4:	mov	r0, r5
   115b8:	bl	10fe0 <strtol@plt>
   115bc:	movw	r3, #45328	; 0xb110
   115c0:	movt	r3, #2
   115c4:	str	r0, [r3, #4]
   115c8:	ldr	r3, [sp, #4]
   115cc:	ldrb	r3, [r3]
   115d0:	sub	r0, r0, #1
   115d4:	cmp	r0, #254	; 0xfe
   115d8:	cmpls	r3, #0
   115dc:	moveq	r0, #0
   115e0:	beq	113f0 <__assert_fail@plt+0x158>
   115e4:	mov	r3, r5
   115e8:	movw	r2, #37632	; 0x9300
   115ec:	movt	r2, #1
   115f0:	mov	r1, #0
   115f4:	mov	r0, #1
   115f8:	bl	110f4 <error@plt>
   115fc:	mov	r0, #0
   11600:	b	113f0 <__assert_fail@plt+0x158>
   11604:	mov	r2, #0
   11608:	add	r1, sp, #4
   1160c:	mov	r0, r5
   11610:	bl	10fe0 <strtol@plt>
   11614:	movw	r3, #45328	; 0xb110
   11618:	movt	r3, #2
   1161c:	str	r0, [r3, #8]
   11620:	ldr	r3, [sp, #4]
   11624:	ldrb	r3, [r3]
   11628:	sub	r0, r0, #1
   1162c:	cmp	r0, #65536	; 0x10000
   11630:	movcc	r0, #0
   11634:	movcs	r0, #1
   11638:	cmp	r3, #0
   1163c:	movne	r0, #1
   11640:	cmp	r0, #0
   11644:	moveq	r0, #0
   11648:	beq	113f0 <__assert_fail@plt+0x158>
   1164c:	mov	r3, r5
   11650:	movw	r2, #37656	; 0x9318
   11654:	movt	r2, #1
   11658:	mov	r1, #0
   1165c:	mov	r0, #1
   11660:	bl	110f4 <error@plt>
   11664:	mov	r0, #0
   11668:	b	113f0 <__assert_fail@plt+0x158>
   1166c:	mov	r2, r5
   11670:	movw	r1, #37684	; 0x9334
   11674:	movt	r1, #1
   11678:	mov	r0, r6
   1167c:	bl	15cd4 <argp_error@@Base>
   11680:	b	11500 <__assert_fail@plt+0x268>
   11684:	mov	r2, #0
   11688:	add	r1, sp, #4
   1168c:	mov	r0, r5
   11690:	bl	10fe0 <strtol@plt>
   11694:	movw	r3, #45328	; 0xb110
   11698:	movt	r3, #2
   1169c:	str	r0, [r3, #16]
   116a0:	ldr	r3, [sp, #4]
   116a4:	ldrb	r3, [r3]
   116a8:	cmp	r0, #255	; 0xff
   116ac:	cmpls	r3, #0
   116b0:	moveq	r0, #0
   116b4:	beq	113f0 <__assert_fail@plt+0x158>
   116b8:	mov	r3, r5
   116bc:	movw	r2, #37760	; 0x9380
   116c0:	movt	r2, #1
   116c4:	mov	r1, #0
   116c8:	mov	r0, #1
   116cc:	bl	110f4 <error@plt>
   116d0:	mov	r0, #0
   116d4:	b	113f0 <__assert_fail@plt+0x158>
   116d8:	movw	r1, #37784	; 0x9398
   116dc:	movt	r1, #1
   116e0:	mov	r0, r5
   116e4:	bl	10fd4 <strcmp@plt>
   116e8:	cmp	r0, #0
   116ec:	bne	11704 <__assert_fail@plt+0x46c>
   116f0:	movw	r3, #45732	; 0xb2a4
   116f4:	movt	r3, #2
   116f8:	mov	r2, #1
   116fc:	str	r2, [r3, #4]
   11700:	b	113f0 <__assert_fail@plt+0x158>
   11704:	movw	r1, #37792	; 0x93a0
   11708:	movt	r1, #1
   1170c:	mov	r0, r5
   11710:	bl	10fd4 <strcmp@plt>
   11714:	cmp	r0, #0
   11718:	bne	11730 <__assert_fail@plt+0x498>
   1171c:	movw	r3, #45732	; 0xb2a4
   11720:	movt	r3, #2
   11724:	mov	r2, #0
   11728:	str	r2, [r3, #4]
   1172c:	b	113f0 <__assert_fail@plt+0x158>
   11730:	movw	r1, #37796	; 0x93a4
   11734:	movt	r1, #1
   11738:	mov	r0, r6
   1173c:	bl	15cd4 <argp_error@@Base>
   11740:	mov	r0, #0
   11744:	b	113f0 <__assert_fail@plt+0x158>
   11748:	mov	r2, #0
   1174c:	add	r1, sp, #4
   11750:	mov	r0, r5
   11754:	bl	10fe0 <strtol@plt>
   11758:	movw	r3, #45328	; 0xb110
   1175c:	movt	r3, #2
   11760:	str	r0, [r3, #20]
   11764:	ldr	r3, [sp, #4]
   11768:	ldrb	r3, [r3]
   1176c:	cmp	r0, #60	; 0x3c
   11770:	cmpls	r3, #0
   11774:	moveq	r0, #0
   11778:	beq	113f0 <__assert_fail@plt+0x158>
   1177c:	mov	r3, r5
   11780:	movw	r2, #37812	; 0x93b4
   11784:	movt	r2, #1
   11788:	mov	r1, #0
   1178c:	mov	r0, #1
   11790:	bl	110f4 <error@plt>
   11794:	mov	r0, #0
   11798:	b	113f0 <__assert_fail@plt+0x158>
   1179c:	movw	r3, #45732	; 0xb2a4
   117a0:	movt	r3, #2
   117a4:	mov	r2, #1
   117a8:	str	r2, [r3, #8]
   117ac:	mov	r0, #0
   117b0:	b	113f0 <__assert_fail@plt+0x158>
   117b4:	movw	r6, #45732	; 0xb2a4
   117b8:	movt	r6, #2
   117bc:	mov	r3, #1
   117c0:	strb	r3, [r6, #12]
   117c4:	mov	r0, r1
   117c8:	bl	17be4 <argp_parse@@Base+0x177c>
   117cc:	str	r0, [r6, #16]
   117d0:	mov	r0, r4
   117d4:	b	113f0 <__assert_fail@plt+0x158>
   117d8:	movw	r3, #45732	; 0xb2a4
   117dc:	movt	r3, #2
   117e0:	ldrb	r3, [r3, #12]
   117e4:	cmp	r3, #0
   117e8:	movne	r0, #0
   117ec:	bne	113f0 <__assert_fail@plt+0x158>
   117f0:	movw	r1, #37844	; 0x93d4
   117f4:	movt	r1, #1
   117f8:	mov	r0, r2
   117fc:	bl	15cd4 <argp_error@@Base>
   11800:	mov	r0, #0
   11804:	b	113f0 <__assert_fail@plt+0x158>
   11808:	str	r4, [sp, #-8]!
   1180c:	str	lr, [sp, #4]
   11810:	mov	r4, r0
   11814:	mov	r2, #2
   11818:	mov	r1, #4
   1181c:	bl	11094 <gethostbyaddr@plt>
   11820:	cmp	r0, #0
   11824:	beq	11838 <__assert_fail@plt+0x5a0>
   11828:	ldr	r0, [r0]
   1182c:	ldr	r4, [sp]
   11830:	add	sp, sp, #4
   11834:	pop	{pc}		; (ldr pc, [sp], #4)
   11838:	ldr	r0, [r4]
   1183c:	bl	11070 <inet_ntoa@plt>
   11840:	b	1182c <__assert_fail@plt+0x594>
   11844:	sub	sp, sp, #16
   11848:	strd	r4, [sp, #-20]!	; 0xffffffec
   1184c:	strd	r6, [sp, #8]
   11850:	str	lr, [sp, #16]
   11854:	sub	sp, sp, #12
   11858:	add	ip, sp, #36	; 0x24
   1185c:	stm	ip, {r1, r2, r3}
   11860:	ldr	r2, [sp, #52]	; 0x34
   11864:	subs	r4, r0, #0
   11868:	beq	118b4 <__assert_fail@plt+0x61c>
   1186c:	add	r5, r4, #48	; 0x30
   11870:	str	r2, [r4, #8]
   11874:	ldrd	r0, [sp, #36]	; 0x24
   11878:	strd	r0, [r4, #16]
   1187c:	ldrd	r0, [sp, #44]	; 0x2c
   11880:	strd	r0, [r4, #24]
   11884:	movw	r3, #45328	; 0xb110
   11888:	movt	r3, #2
   1188c:	ldr	r3, [r3]
   11890:	str	r3, [r4, #48]	; 0x30
   11894:	mov	r3, #0
   11898:	str	r3, [r4, #12]
   1189c:	cmp	r2, r3
   118a0:	beq	118d4 <__assert_fail@plt+0x63c>
   118a4:	cmp	r2, #1
   118a8:	bls	119ac <__assert_fail@plt+0x714>
   118ac:	ldr	r4, [r4]
   118b0:	b	11930 <__assert_fail@plt+0x698>
   118b4:	movw	r3, #37448	; 0x9248
   118b8:	movt	r3, #1
   118bc:	movw	r2, #475	; 0x1db
   118c0:	movw	r1, #37868	; 0x93ec
   118c4:	movt	r1, #1
   118c8:	movw	r0, #37884	; 0x93fc
   118cc:	movt	r0, #1
   118d0:	bl	11298 <__assert_fail@plt>
   118d4:	mov	r2, r3
   118d8:	mov	r1, #2
   118dc:	mov	r0, r1
   118e0:	bl	11274 <socket@plt>
   118e4:	str	r0, [r4, #4]
   118e8:	cmp	r0, #0
   118ec:	blt	11974 <__assert_fail@plt+0x6dc>
   118f0:	mov	r3, #4
   118f4:	str	r3, [sp]
   118f8:	mov	r3, r5
   118fc:	mov	r2, #2
   11900:	mov	r1, #0
   11904:	ldr	r0, [r4, #4]
   11908:	bl	10fec <setsockopt@plt>
   1190c:	cmp	r0, #0
   11910:	blt	11990 <__assert_fail@plt+0x6f8>
   11914:	ldr	r3, [r4, #8]
   11918:	cmp	r3, #1
   1191c:	bls	119ac <__assert_fail@plt+0x714>
   11920:	ldr	r3, [r4, #8]
   11924:	cmp	r3, #0
   11928:	bne	118ac <__assert_fail@plt+0x614>
   1192c:	ldr	r4, [r4, #4]
   11930:	movw	r3, #45328	; 0xb110
   11934:	movt	r3, #2
   11938:	ldr	r3, [r3, #16]
   1193c:	cmp	r3, #0
   11940:	bge	11aac <__assert_fail@plt+0x814>
   11944:	movw	r3, #45732	; 0xb2a4
   11948:	movt	r3, #2
   1194c:	ldr	r3, [r3, #20]
   11950:	cmp	r3, #0
   11954:	bne	11aec <__assert_fail@plt+0x854>
   11958:	add	sp, sp, #12
   1195c:	ldrd	r4, [sp]
   11960:	ldrd	r6, [sp, #8]
   11964:	ldr	lr, [sp, #16]
   11968:	add	sp, sp, #20
   1196c:	add	sp, sp, #16
   11970:	bx	lr
   11974:	bl	1119c <__errno_location@plt>
   11978:	movw	r2, #37888	; 0x9400
   1197c:	movt	r2, #1
   11980:	ldr	r1, [r0]
   11984:	mov	r0, #1
   11988:	bl	110f4 <error@plt>
   1198c:	b	118f0 <__assert_fail@plt+0x658>
   11990:	bl	1119c <__errno_location@plt>
   11994:	movw	r2, #37896	; 0x9408
   11998:	movt	r2, #1
   1199c:	ldr	r1, [r0]
   119a0:	mov	r0, #1
   119a4:	bl	110f4 <error@plt>
   119a8:	b	11914 <__assert_fail@plt+0x67c>
   119ac:	movw	r0, #37784	; 0x9398
   119b0:	movt	r0, #1
   119b4:	bl	11004 <getprotobyname@plt>
   119b8:	subs	r6, r0, #0
   119bc:	beq	11a94 <__assert_fail@plt+0x7fc>
   119c0:	ldr	r2, [r6, #8]
   119c4:	mov	r1, #3
   119c8:	mov	r0, #2
   119cc:	bl	11274 <socket@plt>
   119d0:	str	r0, [r4]
   119d4:	cmp	r0, #0
   119d8:	blt	11a1c <__assert_fail@plt+0x784>
   119dc:	mov	r3, #4
   119e0:	str	r3, [sp]
   119e4:	mov	r3, r5
   119e8:	mov	r2, #2
   119ec:	mov	r1, #0
   119f0:	ldr	r0, [r4]
   119f4:	bl	10fec <setsockopt@plt>
   119f8:	cmp	r0, #0
   119fc:	bge	11920 <__assert_fail@plt+0x688>
   11a00:	bl	1119c <__errno_location@plt>
   11a04:	movw	r2, #37896	; 0x9408
   11a08:	movt	r2, #1
   11a0c:	ldr	r1, [r0]
   11a10:	mov	r0, #1
   11a14:	bl	110f4 <error@plt>
   11a18:	b	11920 <__assert_fail@plt+0x688>
   11a1c:	bl	1119c <__errno_location@plt>
   11a20:	mov	r7, r0
   11a24:	ldr	r3, [r0]
   11a28:	cmp	r3, #13
   11a2c:	cmpne	r3, #1
   11a30:	beq	11a4c <__assert_fail@plt+0x7b4>
   11a34:	movw	r2, #37888	; 0x9400
   11a38:	movt	r2, #1
   11a3c:	ldr	r1, [r7]
   11a40:	mov	r0, #1
   11a44:	bl	110f4 <error@plt>
   11a48:	b	119dc <__assert_fail@plt+0x744>
   11a4c:	mov	r3, #0
   11a50:	str	r3, [r0]
   11a54:	ldr	r2, [r6, #8]
   11a58:	mov	r1, #2
   11a5c:	mov	r0, r1
   11a60:	bl	11274 <socket@plt>
   11a64:	str	r0, [r4]
   11a68:	ldr	r3, [r4, #12]
   11a6c:	add	r3, r3, #1
   11a70:	str	r3, [r4, #12]
   11a74:	ldr	r3, [r7]
   11a78:	cmp	r3, #93	; 0x5d
   11a7c:	moveq	r3, #1
   11a80:	streq	r3, [r7]
   11a84:	ldr	r3, [r4]
   11a88:	cmp	r3, #0
   11a8c:	bge	119dc <__assert_fail@plt+0x744>
   11a90:	b	11a34 <__assert_fail@plt+0x79c>
   11a94:	movw	r2, #37908	; 0x9414
   11a98:	movt	r2, #1
   11a9c:	mov	r1, #0
   11aa0:	mov	r0, #1
   11aa4:	bl	110f4 <error@plt>
   11aa8:	b	11920 <__assert_fail@plt+0x688>
   11aac:	mov	r3, #4
   11ab0:	str	r3, [sp]
   11ab4:	ldr	r3, [pc, #112]	; 11b2c <__assert_fail@plt+0x894>
   11ab8:	mov	r2, #1
   11abc:	mov	r1, #0
   11ac0:	mov	r0, r4
   11ac4:	bl	10fec <setsockopt@plt>
   11ac8:	cmp	r0, #0
   11acc:	bge	11944 <__assert_fail@plt+0x6ac>
   11ad0:	bl	1119c <__errno_location@plt>
   11ad4:	movw	r2, #37944	; 0x9438
   11ad8:	movt	r2, #1
   11adc:	ldr	r1, [r0]
   11ae0:	mov	r0, #0
   11ae4:	bl	110f4 <error@plt>
   11ae8:	b	11944 <__assert_fail@plt+0x6ac>
   11aec:	str	r3, [sp]
   11af0:	movw	r3, #45832	; 0xb308
   11af4:	movt	r3, #2
   11af8:	mov	r2, #4
   11afc:	mov	r1, #0
   11b00:	mov	r0, r4
   11b04:	bl	10fec <setsockopt@plt>
   11b08:	cmp	r0, #0
   11b0c:	bge	11958 <__assert_fail@plt+0x6c0>
   11b10:	bl	1119c <__errno_location@plt>
   11b14:	movw	r2, #37964	; 0x944c
   11b18:	movt	r2, #1
   11b1c:	ldr	r1, [r0]
   11b20:	mov	r0, #0
   11b24:	bl	110f4 <error@plt>
   11b28:	b	11958 <__assert_fail@plt+0x6c0>
   11b2c:	andeq	fp, r2, r0, lsr #2
   11b30:	cmp	r0, #0
   11b34:	beq	11b4c <__assert_fail@plt+0x8b4>
   11b38:	movw	r3, #33434	; 0x829a
   11b3c:	cmp	r1, #1024	; 0x400
   11b40:	movcc	r1, r3
   11b44:	strh	r1, [r0, #18]
   11b48:	bx	lr
   11b4c:	str	r4, [sp, #-8]!
   11b50:	str	lr, [sp, #4]
   11b54:	ldr	r3, [pc, #20]	; 11b70 <__assert_fail@plt+0x8d8>
   11b58:	movw	r2, #554	; 0x22a
   11b5c:	movw	r1, #37868	; 0x93ec
   11b60:	movt	r1, #1
   11b64:	movw	r0, #37884	; 0x93fc
   11b68:	movt	r0, #1
   11b6c:	bl	11298 <__assert_fail@plt>
   11b70:	andeq	r9, r1, r4, asr r2
   11b74:	strd	r4, [sp, #-16]!
   11b78:	str	r6, [sp, #8]
   11b7c:	str	lr, [sp, #12]
   11b80:	sub	sp, sp, #160	; 0xa0
   11b84:	subs	r4, r0, #0
   11b88:	beq	11c8c <__assert_fail@plt+0x9f4>
   11b8c:	mov	r6, r1
   11b90:	mov	r5, r2
   11b94:	mov	r3, #16
   11b98:	str	r3, [sp, #12]
   11b9c:	mov	r3, r4
   11ba0:	ldr	r0, [r3], #32
   11ba4:	add	r2, sp, #12
   11ba8:	str	r2, [sp, #4]
   11bac:	str	r3, [sp]
   11bb0:	mov	r3, #0
   11bb4:	mov	r2, #136	; 0x88
   11bb8:	add	r1, sp, #24
   11bbc:	bl	110a0 <recvfrom@plt>
   11bc0:	cmp	r0, #0
   11bc4:	blt	11ca8 <__assert_fail@plt+0xa10>
   11bc8:	add	r3, sp, #16
   11bcc:	add	r2, sp, #20
   11bd0:	mov	r1, #136	; 0x88
   11bd4:	add	r0, sp, #24
   11bd8:	bl	128c0 <__assert_fail@plt+0x1628>
   11bdc:	ldr	r3, [sp, #16]
   11be0:	ldrb	r2, [r3]
   11be4:	str	r2, [r6]
   11be8:	ldrb	r2, [r3, #1]
   11bec:	str	r2, [r5]
   11bf0:	ldr	r2, [r4, #8]
   11bf4:	cmp	r2, #0
   11bf8:	beq	11cc4 <__assert_fail@plt+0xa2c>
   11bfc:	cmp	r2, #1
   11c00:	movne	r0, #0
   11c04:	bne	11df0 <__assert_fail@plt+0xb58>
   11c08:	ldrb	r1, [r3]
   11c0c:	and	r0, r1, #247	; 0xf7
   11c10:	subs	r2, r0, #3
   11c14:	movne	r2, #1
   11c18:	cmp	r1, #0
   11c1c:	moveq	r2, #0
   11c20:	cmp	r2, #0
   11c24:	mvnne	r0, #0
   11c28:	bne	11df0 <__assert_fail@plt+0xb58>
   11c2c:	cmp	r1, #0
   11c30:	bne	11d30 <__assert_fail@plt+0xa98>
   11c34:	ldrh	r1, [r3, #6]
   11c38:	rev16	r1, r1
   11c3c:	uxth	r1, r1
   11c40:	movw	r0, #45876	; 0xb334
   11c44:	movt	r0, #2
   11c48:	ldr	r0, [r0]
   11c4c:	cmp	r1, r0
   11c50:	mvnne	r0, #0
   11c54:	bne	11df0 <__assert_fail@plt+0xb58>
   11c58:	ldrh	r1, [r3, #4]
   11c5c:	rev16	r1, r1
   11c60:	uxth	r1, r1
   11c64:	movw	r0, #45872	; 0xb330
   11c68:	movt	r0, #2
   11c6c:	ldr	r0, [r0]
   11c70:	cmp	r1, r0
   11c74:	beq	11dac <__assert_fail@plt+0xb14>
   11c78:	ldr	r1, [r4, #12]
   11c7c:	cmp	r1, #0
   11c80:	bne	11dac <__assert_fail@plt+0xb14>
   11c84:	mvn	r0, #0
   11c88:	b	11df0 <__assert_fail@plt+0xb58>
   11c8c:	ldr	r3, [pc, #376]	; 11e0c <__assert_fail@plt+0xb74>
   11c90:	movw	r2, #579	; 0x243
   11c94:	movw	r1, #37868	; 0x93ec
   11c98:	movt	r1, #1
   11c9c:	movw	r0, #37884	; 0x93fc
   11ca0:	movt	r0, #1
   11ca4:	bl	11298 <__assert_fail@plt>
   11ca8:	bl	1119c <__errno_location@plt>
   11cac:	movw	r2, #37988	; 0x9464
   11cb0:	movt	r2, #1
   11cb4:	ldr	r1, [r0]
   11cb8:	mov	r0, #1
   11cbc:	bl	110f4 <error@plt>
   11cc0:	b	11bc8 <__assert_fail@plt+0x930>
   11cc4:	ldrb	r1, [r3]
   11cc8:	and	r2, r1, #247	; 0xf7
   11ccc:	cmp	r2, #3
   11cd0:	mvnne	r0, #0
   11cd4:	bne	11df0 <__assert_fail@plt+0xb58>
   11cd8:	ldrb	r2, [r3, #8]
   11cdc:	and	r2, r2, #15
   11ce0:	add	r2, r3, r2, lsl #2
   11ce4:	ldrh	r0, [r2, #10]
   11ce8:	ldrh	r2, [r4, #18]
   11cec:	cmp	r0, r2
   11cf0:	mvnne	r0, #0
   11cf4:	bne	11df0 <__assert_fail@plt+0xb58>
   11cf8:	cmp	r1, #3
   11cfc:	movne	r0, #0
   11d00:	bne	11df0 <__assert_fail@plt+0xb58>
   11d04:	movw	r2, #45732	; 0xb2a4
   11d08:	movt	r2, #2
   11d0c:	mov	r1, #1
   11d10:	str	r1, [r2, #24]
   11d14:	ldrb	r2, [r3]
   11d18:	cmp	r2, #3
   11d1c:	bne	11e04 <__assert_fail@plt+0xb6c>
   11d20:	ldrb	r0, [r3, #1]
   11d24:	subs	r0, r0, #3
   11d28:	movne	r0, #1
   11d2c:	b	11df0 <__assert_fail@plt+0xb58>
   11d30:	cmp	r1, #3
   11d34:	movne	ip, #0
   11d38:	moveq	ip, #1
   11d3c:	cmp	r0, #3
   11d40:	bne	11da8 <__assert_fail@plt+0xb10>
   11d44:	add	r0, r3, #8
   11d48:	ldrb	ip, [r3, #8]
   11d4c:	and	ip, ip, #15
   11d50:	add	r0, r0, ip, lsl #2
   11d54:	ldrh	ip, [r0, #4]
   11d58:	rev16	ip, ip
   11d5c:	uxth	ip, ip
   11d60:	movw	lr, #45872	; 0xb330
   11d64:	movt	lr, #2
   11d68:	ldr	lr, [lr]
   11d6c:	cmp	ip, lr
   11d70:	mvnne	r0, #0
   11d74:	bne	11df0 <__assert_fail@plt+0xb58>
   11d78:	cmp	r1, #11
   11d7c:	bne	11dd0 <__assert_fail@plt+0xb38>
   11d80:	ldrh	r1, [r0, #6]
   11d84:	rev16	r1, r1
   11d88:	uxth	r1, r1
   11d8c:	movw	r0, #45876	; 0xb334
   11d90:	movt	r0, #2
   11d94:	ldr	r0, [r0]
   11d98:	cmp	r1, r0
   11d9c:	mvnne	r0, #0
   11da0:	bne	11df0 <__assert_fail@plt+0xb58>
   11da4:	b	11dac <__assert_fail@plt+0xb14>
   11da8:	mov	r2, ip
   11dac:	movw	r1, #45816	; 0xb2f8
   11db0:	movt	r1, #2
   11db4:	ldr	r0, [sp, #20]
   11db8:	ldr	r0, [r0, #12]
   11dbc:	ldr	r1, [r1, #4]
   11dc0:	cmp	r0, r1
   11dc4:	orreq	r2, r2, #1
   11dc8:	cmp	r2, #0
   11dcc:	beq	11de0 <__assert_fail@plt+0xb48>
   11dd0:	movw	r2, #45732	; 0xb2a4
   11dd4:	movt	r2, #2
   11dd8:	mov	r1, #1
   11ddc:	str	r1, [r2, #24]
   11de0:	ldrb	r0, [r3]
   11de4:	cmp	r0, #3
   11de8:	movne	r0, #0
   11dec:	moveq	r0, #1
   11df0:	add	sp, sp, #160	; 0xa0
   11df4:	ldrd	r4, [sp]
   11df8:	ldr	r6, [sp, #8]
   11dfc:	add	sp, sp, #12
   11e00:	pop	{pc}		; (ldr pc, [sp], #4)
   11e04:	mov	r0, #0
   11e08:	b	11df0 <__assert_fail@plt+0xb58>
   11e0c:	andeq	r9, r1, r0, ror #4
   11e10:	strd	r4, [sp, #-12]!
   11e14:	str	lr, [sp, #8]
   11e18:	sub	sp, sp, #44	; 0x2c
   11e1c:	subs	r4, r0, #0
   11e20:	beq	11f04 <__assert_fail@plt+0xc6c>
   11e24:	ldr	r3, [r4, #8]
   11e28:	cmp	r3, #0
   11e2c:	beq	11f20 <__assert_fail@plt+0xc88>
   11e30:	cmp	r3, #1
   11e34:	movne	r5, #0
   11e38:	bne	11f7c <__assert_fail@plt+0xce4>
   11e3c:	add	r2, sp, #11
   11e40:	mov	r3, #0
   11e44:	strb	r3, [r2, #1]!
   11e48:	add	r3, r3, #1
   11e4c:	cmp	r3, #28
   11e50:	bne	11e44 <__assert_fail@plt+0xbac>
   11e54:	ldr	r3, [r4, #12]
   11e58:	cmp	r3, #0
   11e5c:	beq	11e70 <__assert_fail@plt+0xbd8>
   11e60:	movw	r3, #45816	; 0xb2f8
   11e64:	movt	r3, #2
   11e68:	ldr	r3, [r3, #4]
   11e6c:	str	r3, [sp, #24]
   11e70:	movw	r1, #45872	; 0xb330
   11e74:	movt	r1, #2
   11e78:	movw	r2, #45876	; 0xb334
   11e7c:	movt	r2, #2
   11e80:	ldr	r3, [r2]
   11e84:	add	r3, r3, #1
   11e88:	str	r3, [r2]
   11e8c:	ldr	r2, [r1]
   11e90:	mov	r1, #28
   11e94:	add	r0, sp, #12
   11e98:	bl	1292c <__assert_fail@plt+0x1694>
   11e9c:	subs	r5, r0, #0
   11ea0:	mvnne	r5, #0
   11ea4:	bne	11f7c <__assert_fail@plt+0xce4>
   11ea8:	mov	r3, r4
   11eac:	ldr	r0, [r3], #16
   11eb0:	mov	r2, #16
   11eb4:	str	r2, [sp, #4]
   11eb8:	str	r3, [sp]
   11ebc:	mov	r3, #0
   11ec0:	mov	r2, #28
   11ec4:	add	r1, sp, #12
   11ec8:	bl	111d8 <sendto@plt>
   11ecc:	cmp	r0, #0
   11ed0:	blt	11fd0 <__assert_fail@plt+0xd38>
   11ed4:	mov	r1, #0
   11ed8:	add	r0, r4, #52	; 0x34
   11edc:	bl	110e8 <gettimeofday@plt>
   11ee0:	cmp	r0, #0
   11ee4:	bge	11f7c <__assert_fail@plt+0xce4>
   11ee8:	bl	1119c <__errno_location@plt>
   11eec:	movw	r2, #38008	; 0x9478
   11ef0:	movt	r2, #1
   11ef4:	ldr	r1, [r0]
   11ef8:	mov	r0, #1
   11efc:	bl	110f4 <error@plt>
   11f00:	b	11f7c <__assert_fail@plt+0xce4>
   11f04:	ldr	r3, [pc, #232]	; 11ff4 <__assert_fail@plt+0xd5c>
   11f08:	movw	r2, #677	; 0x2a5
   11f0c:	movw	r1, #37868	; 0x93ec
   11f10:	movt	r1, #1
   11f14:	movw	r0, #37884	; 0x93fc
   11f18:	movt	r0, #1
   11f1c:	bl	11298 <__assert_fail@plt>
   11f20:	movw	r3, #38024	; 0x9488
   11f24:	movt	r3, #1
   11f28:	ldrd	r0, [r3]
   11f2c:	strd	r0, [sp, #12]
   11f30:	ldrb	r3, [r3, #8]
   11f34:	strb	r3, [sp, #20]
   11f38:	add	r3, r4, #16
   11f3c:	mov	r2, #16
   11f40:	str	r2, [sp, #4]
   11f44:	str	r3, [sp]
   11f48:	mov	r3, #0
   11f4c:	mov	r2, #9
   11f50:	add	r1, sp, #12
   11f54:	ldr	r0, [r4, #4]
   11f58:	bl	111d8 <sendto@plt>
   11f5c:	cmp	r0, #0
   11f60:	blt	11f90 <__assert_fail@plt+0xcf8>
   11f64:	mov	r1, #0
   11f68:	add	r0, r4, #52	; 0x34
   11f6c:	bl	110e8 <gettimeofday@plt>
   11f70:	cmp	r0, #0
   11f74:	blt	11fb4 <__assert_fail@plt+0xd1c>
   11f78:	mov	r5, #0
   11f7c:	mov	r0, r5
   11f80:	add	sp, sp, #44	; 0x2c
   11f84:	ldrd	r4, [sp]
   11f88:	add	sp, sp, #8
   11f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f90:	bl	1119c <__errno_location@plt>
   11f94:	ldr	r1, [r0]
   11f98:	cmp	r1, #104	; 0x68
   11f9c:	beq	11f64 <__assert_fail@plt+0xccc>
   11fa0:	movw	r2, #38000	; 0x9470
   11fa4:	movt	r2, #1
   11fa8:	mov	r0, #1
   11fac:	bl	110f4 <error@plt>
   11fb0:	b	11f64 <__assert_fail@plt+0xccc>
   11fb4:	bl	1119c <__errno_location@plt>
   11fb8:	movw	r2, #38008	; 0x9478
   11fbc:	movt	r2, #1
   11fc0:	ldr	r1, [r0]
   11fc4:	mov	r0, #1
   11fc8:	bl	110f4 <error@plt>
   11fcc:	b	11f78 <__assert_fail@plt+0xce0>
   11fd0:	bl	1119c <__errno_location@plt>
   11fd4:	ldr	r1, [r0]
   11fd8:	cmp	r1, #104	; 0x68
   11fdc:	beq	11ed4 <__assert_fail@plt+0xc3c>
   11fe0:	movw	r2, #38000	; 0x9470
   11fe4:	movt	r2, #1
   11fe8:	mov	r0, #1
   11fec:	bl	110f4 <error@plt>
   11ff0:	b	11ed4 <__assert_fail@plt+0xc3c>
   11ff4:	andeq	r9, r1, ip, ror #4
   11ff8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11ffc:	strd	r6, [sp, #8]
   12000:	strd	r8, [sp, #16]
   12004:	strd	sl, [sp, #24]
   12008:	str	lr, [sp, #32]
   1200c:	vpush	{d8}
   12010:	sub	sp, sp, #180	; 0xb4
   12014:	mov	r6, r0
   12018:	mov	r4, r3
   1201c:	str	r3, [sp, #16]
   12020:	movw	r0, #38036	; 0x9494
   12024:	movt	r0, #1
   12028:	bl	10ff8 <printf@plt>
   1202c:	cmp	r4, #0
   12030:	ble	122d8 <__assert_fail@plt+0x1040>
   12034:	mov	r3, #0
   12038:	mov	r8, r3
   1203c:	str	r3, [sp, #20]
   12040:	mov	r1, r3
   12044:	mov	r4, r3
   12048:	movw	fp, #45328	; 0xb110
   1204c:	movt	fp, #2
   12050:	vldr	d8, [pc, #680]	; 12300 <__assert_fail@plt+0x1068>
   12054:	b	120ac <__assert_fail@plt+0xe14>
   12058:	mov	r0, r6
   1205c:	bl	11e10 <__assert_fail@plt+0xb78>
   12060:	b	1211c <__assert_fail@plt+0xe84>
   12064:	sub	r2, r2, #1
   12068:	str	r2, [sp, #40]	; 0x28
   1206c:	add	r3, r3, #999424	; 0xf4000
   12070:	add	r3, r3, #576	; 0x240
   12074:	str	r3, [sp, #44]	; 0x2c
   12078:	b	12184 <__assert_fail@plt+0xeec>
   1207c:	ldr	r3, [sp, #12]
   12080:	cmp	r3, #4
   12084:	bne	1225c <__assert_fail@plt+0xfc4>
   12088:	movw	r3, #45724	; 0xb29c
   1208c:	movt	r3, #2
   12090:	ldr	r0, [r3]
   12094:	bl	11010 <fflush@plt>
   12098:	mov	r1, r4
   1209c:	add	r8, r8, #1
   120a0:	ldr	r3, [sp, #16]
   120a4:	cmp	r3, r8
   120a8:	ble	122d8 <__assert_fail@plt+0x1040>
   120ac:	cmp	r6, #0
   120b0:	ldrne	sl, [r6]
   120b4:	mvneq	sl, #0
   120b8:	add	r3, sp, #44	; 0x2c
   120bc:	add	r2, sp, #172	; 0xac
   120c0:	str	r4, [r3, #4]!
   120c4:	cmp	r3, r2
   120c8:	bne	120c0 <__assert_fail@plt+0xe28>
   120cc:	add	r5, sl, #31
   120d0:	cmp	sl, #0
   120d4:	movge	r5, sl
   120d8:	asr	r5, r5, #5
   120dc:	rsbs	r2, sl, #0
   120e0:	and	r3, sl, #31
   120e4:	and	r2, r2, #31
   120e8:	rsbpl	r3, r2, #0
   120ec:	mov	r7, #1
   120f0:	lsl	r7, r7, r3
   120f4:	add	r3, sp, #176	; 0xb0
   120f8:	add	r2, r3, r5, lsl #2
   120fc:	ldr	r3, [r2, #-128]	; 0xffffff80
   12100:	orr	r3, r3, r7
   12104:	str	r3, [r2, #-128]	; 0xffffff80
   12108:	str	r4, [sp, #36]	; 0x24
   1210c:	ldr	r3, [fp, #20]
   12110:	str	r3, [sp, #32]
   12114:	cmp	r1, #0
   12118:	beq	12058 <__assert_fail@plt+0xdc0>
   1211c:	bl	1119c <__errno_location@plt>
   12120:	mov	r9, r0
   12124:	str	r4, [r0]
   12128:	add	r3, sp, #32
   1212c:	str	r3, [sp]
   12130:	mov	r3, r4
   12134:	mov	r2, r4
   12138:	add	r1, sp, #48	; 0x30
   1213c:	add	r0, sl, #1
   12140:	bl	1107c <select@plt>
   12144:	mov	sl, r0
   12148:	ldr	r3, [r9]
   1214c:	str	r3, [sp, #12]
   12150:	mov	r1, r4
   12154:	add	r0, sp, #40	; 0x28
   12158:	bl	110e8 <gettimeofday@plt>
   1215c:	ldr	r2, [r6, #56]	; 0x38
   12160:	ldr	r3, [sp, #44]	; 0x2c
   12164:	sub	r3, r3, r2
   12168:	str	r3, [sp, #44]	; 0x2c
   1216c:	ldr	r1, [r6, #52]	; 0x34
   12170:	ldr	r2, [sp, #40]	; 0x28
   12174:	sub	r2, r2, r1
   12178:	cmp	r3, #0
   1217c:	strge	r2, [sp, #40]	; 0x28
   12180:	blt	12064 <__assert_fail@plt+0xdcc>
   12184:	cmp	sl, #0
   12188:	blt	1207c <__assert_fail@plt+0xde4>
   1218c:	cmp	sl, #0
   12190:	beq	12274 <__assert_fail@plt+0xfdc>
   12194:	add	r3, sp, #176	; 0xb0
   12198:	add	r5, r3, r5, lsl #2
   1219c:	ldr	r3, [r5, #-128]	; 0xffffff80
   121a0:	tst	r7, r3
   121a4:	beq	12088 <__assert_fail@plt+0xdf0>
   121a8:	ldr	r9, [sp, #40]	; 0x28
   121ac:	ldr	r7, [sp, #44]	; 0x2c
   121b0:	add	r2, sp, #28
   121b4:	add	r1, sp, #24
   121b8:	mov	r0, r6
   121bc:	bl	11b74 <__assert_fail@plt+0x8dc>
   121c0:	subs	r5, r0, #0
   121c4:	sublt	r8, r8, #1
   121c8:	movlt	r1, #1
   121cc:	blt	1209c <__assert_fail@plt+0xe04>
   121d0:	cmp	r8, #0
   121d4:	beq	121e8 <__assert_fail@plt+0xf50>
   121d8:	ldr	r3, [r6, #36]	; 0x24
   121dc:	ldr	r2, [sp, #20]
   121e0:	cmp	r3, r2
   121e4:	beq	12214 <__assert_fail@plt+0xf7c>
   121e8:	ldr	r0, [r6, #36]	; 0x24
   121ec:	bl	11070 <inet_ntoa@plt>
   121f0:	mov	r1, r0
   121f4:	movw	r0, #38064	; 0x94b0
   121f8:	movt	r0, #1
   121fc:	bl	10ff8 <printf@plt>
   12200:	movw	r3, #45732	; 0xb2a4
   12204:	movt	r3, #2
   12208:	ldr	r3, [r3, #8]
   1220c:	cmp	r3, #0
   12210:	bne	12294 <__assert_fail@plt+0xffc>
   12214:	vmov	s15, r9
   12218:	vcvt.f64.s32	d7, s15
   1221c:	vmov	s13, r7
   12220:	vcvt.f64.s32	d6, s13
   12224:	vdiv.f64	d5, d6, d8
   12228:	vmla.f64	d5, d7, d8
   1222c:	vmov	r2, r3, d5
   12230:	movw	r0, #38080	; 0x94c0
   12234:	movt	r0, #1
   12238:	bl	10ff8 <printf@plt>
   1223c:	cmp	r5, #0
   12240:	ble	12250 <__assert_fail@plt+0xfb8>
   12244:	ldr	r3, [sp, #24]
   12248:	cmp	r3, #3
   1224c:	beq	122b0 <__assert_fail@plt+0x1018>
   12250:	ldr	r3, [r6, #36]	; 0x24
   12254:	str	r3, [sp, #20]
   12258:	b	12088 <__assert_fail@plt+0xdf0>
   1225c:	movw	r2, #38044	; 0x949c
   12260:	movt	r2, #1
   12264:	ldr	r1, [r9]
   12268:	mov	r0, #1
   1226c:	bl	110f4 <error@plt>
   12270:	b	12088 <__assert_fail@plt+0xdf0>
   12274:	movw	r0, #38060	; 0x94ac
   12278:	movt	r0, #1
   1227c:	bl	10ff8 <printf@plt>
   12280:	movw	r3, #45724	; 0xb29c
   12284:	movt	r3, #2
   12288:	ldr	r0, [r3]
   1228c:	bl	11010 <fflush@plt>
   12290:	b	12088 <__assert_fail@plt+0xdf0>
   12294:	add	r0, r6, #36	; 0x24
   12298:	bl	11808 <__assert_fail@plt+0x570>
   1229c:	mov	r1, r0
   122a0:	movw	r0, #38072	; 0x94b8
   122a4:	movt	r0, #1
   122a8:	bl	10ff8 <printf@plt>
   122ac:	b	12214 <__assert_fail@plt+0xf7c>
   122b0:	movw	r3, #37448	; 0x9248
   122b4:	movt	r3, #1
   122b8:	ldr	r2, [sp, #28]
   122bc:	and	r2, r2, #15
   122c0:	add	r3, r3, r2
   122c4:	ldrb	r1, [r3, #48]	; 0x30
   122c8:	movw	r0, #38092	; 0x94cc
   122cc:	movt	r0, #1
   122d0:	bl	10ff8 <printf@plt>
   122d4:	b	12250 <__assert_fail@plt+0xfb8>
   122d8:	mov	r0, #10
   122dc:	bl	111c0 <putchar@plt>
   122e0:	add	sp, sp, #180	; 0xb4
   122e4:	vpop	{d8}
   122e8:	ldrd	r4, [sp]
   122ec:	ldrd	r6, [sp, #8]
   122f0:	ldrd	r8, [sp, #16]
   122f4:	ldrd	sl, [sp, #24]
   122f8:	add	sp, sp, #32
   122fc:	pop	{pc}		; (ldr pc, [sp], #4)
   12300:	andeq	r0, r0, r0
   12304:	addmi	r4, pc, r0
   12308:	cmp	r0, #0
   1230c:	ldrne	r0, [r0, #4]
   12310:	mvneq	r0, #0
   12314:	bx	lr
   12318:	cmp	r0, #0
   1231c:	ldrne	r0, [r0]
   12320:	mvneq	r0, #0
   12324:	bx	lr
   12328:	push	{lr}		; (str lr, [sp, #-4]!)
   1232c:	sub	sp, sp, #12
   12330:	cmp	r0, #0
   12334:	beq	1237c <__assert_fail@plt+0x10e4>
   12338:	add	r3, r0, #48	; 0x30
   1233c:	ldr	r2, [r0, #48]	; 0x30
   12340:	add	r2, r2, #1
   12344:	str	r2, [r0, #48]	; 0x30
   12348:	ldr	r2, [r0, #8]
   1234c:	cmp	r2, #0
   12350:	ldreq	r0, [r0, #4]
   12354:	ldrne	r0, [r0]
   12358:	mov	r2, #4
   1235c:	str	r2, [sp]
   12360:	mov	r2, #2
   12364:	mov	r1, #0
   12368:	bl	10fec <setsockopt@plt>
   1236c:	cmp	r0, #0
   12370:	blt	12398 <__assert_fail@plt+0x1100>
   12374:	add	sp, sp, #12
   12378:	pop	{pc}		; (ldr pc, [sp], #4)
   1237c:	ldr	r3, [pc, #48]	; 123b4 <__assert_fail@plt+0x111c>
   12380:	mov	r2, #768	; 0x300
   12384:	movw	r1, #37868	; 0x93ec
   12388:	movt	r1, #1
   1238c:	movw	r0, #37884	; 0x93fc
   12390:	movt	r0, #1
   12394:	bl	11298 <__assert_fail@plt>
   12398:	bl	1119c <__errno_location@plt>
   1239c:	movw	r2, #37896	; 0x9408
   123a0:	movt	r2, #1
   123a4:	ldr	r1, [r0]
   123a8:	mov	r0, #1
   123ac:	bl	110f4 <error@plt>
   123b0:	b	12374 <__assert_fail@plt+0x10dc>
   123b4:	andeq	r9, r1, ip, lsl #5
   123b8:	cmp	r0, #0
   123bc:	beq	123e8 <__assert_fail@plt+0x1150>
   123c0:	ldr	r3, [r0, #8]
   123c4:	cmp	r3, #0
   123c8:	bxne	lr
   123cc:	ldrh	r3, [r0, #18]
   123d0:	rev16	r3, r3
   123d4:	uxth	r3, r3
   123d8:	add	r3, r3, #1
   123dc:	rev16	r3, r3
   123e0:	strh	r3, [r0, #18]
   123e4:	bx	lr
   123e8:	str	r4, [sp, #-8]!
   123ec:	str	lr, [sp, #4]
   123f0:	ldr	r3, [pc, #20]	; 1240c <__assert_fail@plt+0x1174>
   123f4:	mov	r2, #780	; 0x30c
   123f8:	movw	r1, #37868	; 0x93ec
   123fc:	movt	r1, #1
   12400:	movw	r0, #37884	; 0x93fc
   12404:	movt	r0, #1
   12408:	bl	11298 <__assert_fail@plt>
   1240c:	muleq	r1, ip, r2
   12410:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12414:	strd	r6, [sp, #8]
   12418:	strd	r8, [sp, #16]
   1241c:	strd	sl, [sp, #24]
   12420:	str	lr, [sp, #32]
   12424:	sub	sp, sp, #52	; 0x34
   12428:	movw	r3, #45732	; 0xb2a4
   1242c:	movt	r3, #2
   12430:	ldr	r5, [r3]
   12434:	cmp	r5, #0
   12438:	beq	12448 <__assert_fail@plt+0x11b0>
   1243c:	ldrb	r3, [r5]
   12440:	cmp	r3, #0
   12444:	bne	12464 <__assert_fail@plt+0x11cc>
   12448:	add	sp, sp, #52	; 0x34
   1244c:	ldrd	r4, [sp]
   12450:	ldrd	r6, [sp, #8]
   12454:	ldrd	r8, [sp, #16]
   12458:	ldrd	sl, [sp, #24]
   1245c:	add	sp, sp, #32
   12460:	pop	{pc}		; (ldr pc, [sp], #4)
   12464:	mov	r8, r0
   12468:	mov	r2, #0
   1246c:	mov	r3, #0
   12470:	strd	r2, [sp, #16]
   12474:	strd	r2, [sp, #24]
   12478:	strd	r2, [sp, #32]
   1247c:	strd	r2, [sp, #40]	; 0x28
   12480:	mov	r3, #2
   12484:	str	r3, [sp, #20]
   12488:	str	r3, [sp, #24]
   1248c:	ldr	r4, [pc, #332]	; 125e0 <__assert_fail@plt+0x1348>
   12490:	mov	r2, #38	; 0x26
   12494:	mov	r1, #0
   12498:	mov	r0, r4
   1249c:	bl	111b4 <memset@plt>
   124a0:	sub	r3, r4, #2
   124a4:	mvn	r2, #124	; 0x7c
   124a8:	strb	r2, [r4, #-2]
   124ac:	mov	r2, #3
   124b0:	strb	r2, [r4, #-1]
   124b4:	mov	r2, #4
   124b8:	strb	r2, [r3, #2]
   124bc:	ldrb	r3, [r5]
   124c0:	cmp	r3, #0
   124c4:	beq	125a8 <__assert_fail@plt+0x1310>
   124c8:	movw	r7, #38100	; 0x94d4
   124cc:	movt	r7, #1
   124d0:	mov	r6, #0
   124d4:	movw	r9, #38108	; 0x94dc
   124d8:	movt	r9, #1
   124dc:	b	12560 <__assert_fail@plt+0x12c8>
   124e0:	bl	1119c <__errno_location@plt>
   124e4:	ldr	fp, [r0]
   124e8:	mov	r0, sl
   124ec:	bl	11040 <gai_strerror@plt>
   124f0:	str	r0, [sp]
   124f4:	mov	r3, r5
   124f8:	mov	r2, r9
   124fc:	mov	r1, fp
   12500:	mov	r0, #1
   12504:	bl	110f4 <error@plt>
   12508:	ldr	r0, [sp, #12]
   1250c:	ldr	r3, [r0, #20]
   12510:	ldr	r2, [r3, #4]
   12514:	movw	r5, #45832	; 0xb308
   12518:	movt	r5, #2
   1251c:	ldrb	r3, [r5, #1]
   12520:	str	r2, [r3, r5]
   12524:	bl	1125c <freeaddrinfo@plt>
   12528:	ldrb	r3, [r5, #1]
   1252c:	add	r3, r3, #4
   12530:	strb	r3, [r5, #1]
   12534:	cmp	r4, #0
   12538:	beq	125a8 <__assert_fail@plt+0x1310>
   1253c:	ldrb	r3, [r4]
   12540:	cmp	r3, #0
   12544:	beq	125a8 <__assert_fail@plt+0x1310>
   12548:	mov	r5, r4
   1254c:	movw	r3, #45832	; 0xb308
   12550:	movt	r3, #2
   12554:	ldrb	r3, [r3, #2]
   12558:	cmp	r3, #35	; 0x23
   1255c:	bhi	12594 <__assert_fail@plt+0x12fc>
   12560:	mov	r1, r7
   12564:	mov	r0, r5
   12568:	bl	11250 <strpbrk@plt>
   1256c:	subs	r4, r0, #0
   12570:	strbne	r6, [r4], #1
   12574:	add	r3, sp, #12
   12578:	add	r2, sp, #16
   1257c:	mov	r1, r6
   12580:	mov	r0, r5
   12584:	bl	11268 <getaddrinfo@plt>
   12588:	subs	sl, r0, #0
   1258c:	beq	12508 <__assert_fail@plt+0x1270>
   12590:	b	124e0 <__assert_fail@plt+0x1248>
   12594:	movw	r2, #38124	; 0x94ec
   12598:	movt	r2, #1
   1259c:	mov	r1, #0
   125a0:	mov	r0, #1
   125a4:	bl	110f4 <error@plt>
   125a8:	ldr	r1, [r8, #4]
   125ac:	movw	r2, #45832	; 0xb308
   125b0:	movt	r2, #2
   125b4:	ldrb	r3, [r2, #1]
   125b8:	str	r1, [r3, r2]
   125bc:	ldrb	r3, [r2, #1]
   125c0:	add	r3, r3, #4
   125c4:	uxtb	r3, r3
   125c8:	strb	r3, [r2, #1]
   125cc:	movw	r2, #45732	; 0xb2a4
   125d0:	movt	r2, #2
   125d4:	add	r3, r3, #1
   125d8:	str	r3, [r2, #20]
   125dc:	b	12448 <__assert_fail@plt+0x11b0>
   125e0:	andeq	fp, r2, sl, lsl #6
   125e4:	strd	r4, [sp, #-16]!
   125e8:	str	r6, [sp, #8]
   125ec:	str	lr, [sp, #12]
   125f0:	sub	sp, sp, #112	; 0x70
   125f4:	mov	r6, r0
   125f8:	mov	r5, r1
   125fc:	ldr	r0, [r1]
   12600:	bl	17258 <argp_parse@@Base+0xdf0>
   12604:	movw	r1, #41560	; 0xa258
   12608:	movt	r1, #1
   1260c:	mov	r0, #6
   12610:	bl	111f0 <setlocale@plt>
   12614:	bl	11160 <getpid@plt>
   12618:	movw	r3, #45872	; 0xb330
   1261c:	movt	r3, #2
   12620:	uxth	r0, r0
   12624:	str	r0, [r3]
   12628:	movw	r3, #45928	; 0xb368
   1262c:	movt	r3, #2
   12630:	movw	r2, #38152	; 0x9508
   12634:	movt	r2, #1
   12638:	str	r2, [r3]
   1263c:	movw	r4, #45328	; 0xb110
   12640:	movt	r4, #2
   12644:	add	r1, r4, #24
   12648:	movw	r0, #38176	; 0x9520
   1264c:	movt	r0, #1
   12650:	bl	17054 <argp_parse@@Base+0xbec>
   12654:	mov	r3, #0
   12658:	str	r3, [sp, #4]
   1265c:	str	r3, [sp]
   12660:	mov	r2, r5
   12664:	mov	r1, r6
   12668:	add	r0, r4, #32
   1266c:	bl	16468 <argp_parse@@Base>
   12670:	movw	r3, #45732	; 0xb2a4
   12674:	movt	r3, #2
   12678:	ldr	r3, [r3, #16]
   1267c:	cmp	r3, #0
   12680:	beq	12690 <__assert_fail@plt+0x13f8>
   12684:	ldrb	r3, [r3]
   12688:	cmp	r3, #0
   1268c:	bne	126a4 <__assert_fail@plt+0x140c>
   12690:	movw	r2, #38188	; 0x952c
   12694:	movt	r2, #1
   12698:	mov	r1, #0
   1269c:	mov	r0, #1
   126a0:	bl	110f4 <error@plt>
   126a4:	mov	r2, #0
   126a8:	mov	r3, #0
   126ac:	strd	r2, [sp, #88]	; 0x58
   126b0:	strd	r2, [sp, #96]	; 0x60
   126b4:	strd	r2, [sp, #104]	; 0x68
   126b8:	mov	r3, #2
   126bc:	str	r3, [sp, #84]	; 0x54
   126c0:	mov	r3, #194	; 0xc2
   126c4:	str	r3, [sp, #80]	; 0x50
   126c8:	movw	r3, #45732	; 0xb2a4
   126cc:	movt	r3, #2
   126d0:	ldr	r6, [r3, #16]
   126d4:	add	r3, sp, #76	; 0x4c
   126d8:	add	r2, sp, #80	; 0x50
   126dc:	mov	r1, #0
   126e0:	mov	r0, r6
   126e4:	bl	11268 <getaddrinfo@plt>
   126e8:	cmp	r0, #0
   126ec:	bne	12840 <__assert_fail@plt+0x15a8>
   126f0:	ldr	r4, [sp, #76]	; 0x4c
   126f4:	movw	r5, #45816	; 0xb2f8
   126f8:	movt	r5, #2
   126fc:	ldr	r2, [r4, #16]
   12700:	ldr	r1, [r4, #20]
   12704:	mov	r0, r5
   12708:	bl	11058 <memcpy@plt>
   1270c:	movw	r3, #45328	; 0xb110
   12710:	movt	r3, #2
   12714:	ldr	r3, [r3, #8]
   12718:	rev16	r3, r3
   1271c:	strh	r3, [r5, #2]
   12720:	ldr	r1, [r4, #16]
   12724:	ldr	r0, [r4, #20]
   12728:	mov	r3, #1
   1272c:	str	r3, [sp, #8]
   12730:	mov	r3, #0
   12734:	str	r3, [sp, #4]
   12738:	str	r3, [sp]
   1273c:	mov	r3, #46	; 0x2e
   12740:	movw	r2, #45880	; 0xb338
   12744:	movt	r2, #2
   12748:	bl	111fc <getnameinfo@plt>
   1274c:	ldr	r3, [sp, #76]	; 0x4c
   12750:	ldr	r1, [r3, #24]
   12754:	movw	r3, #45328	; 0xb110
   12758:	movt	r3, #2
   1275c:	ldr	r3, [r3, #4]
   12760:	movw	r2, #45880	; 0xb338
   12764:	movt	r2, #2
   12768:	cmp	r1, #0
   1276c:	moveq	r1, r6
   12770:	movw	r0, #38204	; 0x953c
   12774:	movt	r0, #1
   12778:	bl	10ff8 <printf@plt>
   1277c:	mov	r0, r6
   12780:	bl	17140 <argp_parse@@Base+0xcd8>
   12784:	ldr	r0, [sp, #76]	; 0x4c
   12788:	bl	1125c <freeaddrinfo@plt>
   1278c:	mov	r4, r5
   12790:	mov	r0, r5
   12794:	bl	12410 <__assert_fail@plt+0x1178>
   12798:	movw	r5, #45732	; 0xb2a4
   1279c:	movt	r5, #2
   127a0:	ldr	r3, [r5, #4]
   127a4:	str	r3, [sp, #4]
   127a8:	ldr	r3, [r4, #12]
   127ac:	str	r3, [sp]
   127b0:	ldm	r4, {r1, r2, r3}
   127b4:	add	r0, sp, #16
   127b8:	bl	11844 <__assert_fail@plt+0x5ac>
   127bc:	movw	r3, #45876	; 0xb334
   127c0:	movt	r3, #2
   127c4:	mvn	r2, #0
   127c8:	str	r2, [r3]
   127cc:	ldr	r3, [r5, #24]
   127d0:	cmp	r3, #0
   127d4:	bne	12858 <__assert_fail@plt+0x15c0>
   127d8:	movw	r3, #45328	; 0xb110
   127dc:	movt	r3, #2
   127e0:	ldr	r2, [r3, #4]
   127e4:	cmp	r2, #0
   127e8:	ble	12838 <__assert_fail@plt+0x15a0>
   127ec:	mov	r4, #1
   127f0:	mov	r5, r3
   127f4:	movw	r6, #45732	; 0xb2a4
   127f8:	movt	r6, #2
   127fc:	ldr	r3, [r5, #12]
   12800:	mov	r1, r4
   12804:	add	r0, sp, #16
   12808:	bl	11ff8 <__assert_fail@plt+0xd60>
   1280c:	add	r0, sp, #16
   12810:	bl	12328 <__assert_fail@plt+0x1090>
   12814:	add	r0, sp, #16
   12818:	bl	123b8 <__assert_fail@plt+0x1120>
   1281c:	add	r4, r4, #1
   12820:	ldr	r3, [r6, #24]
   12824:	cmp	r3, #0
   12828:	bne	12858 <__assert_fail@plt+0x15c0>
   1282c:	ldr	r2, [r5, #4]
   12830:	cmp	r2, r4
   12834:	bge	127fc <__assert_fail@plt+0x1564>
   12838:	mov	r0, #1
   1283c:	bl	1116c <exit@plt>
   12840:	movw	r2, #38188	; 0x952c
   12844:	movt	r2, #1
   12848:	mov	r1, #0
   1284c:	mov	r0, #1
   12850:	bl	110f4 <error@plt>
   12854:	b	126f0 <__assert_fail@plt+0x1458>
   12858:	mov	r0, #0
   1285c:	bl	1116c <exit@plt>
   12860:	cmp	r1, #7
   12864:	bls	128b8 <__assert_fail@plt+0x1620>
   12868:	strd	r4, [sp, #-16]!
   1286c:	str	r6, [sp, #8]
   12870:	str	lr, [sp, #12]
   12874:	mov	r4, r0
   12878:	strb	r2, [r0]
   1287c:	mov	r5, #0
   12880:	strb	r5, [r0, #1]
   12884:	strh	r5, [r0, #2]
   12888:	ldr	r2, [sp, #16]
   1288c:	rev16	r2, r2
   12890:	strh	r2, [r0, #6]
   12894:	rev16	r3, r3
   12898:	strh	r3, [r0, #4]
   1289c:	bl	12964 <__assert_fail@plt+0x16cc>
   128a0:	strh	r0, [r4, #2]
   128a4:	mov	r0, r5
   128a8:	ldrd	r4, [sp]
   128ac:	ldr	r6, [sp, #8]
   128b0:	add	sp, sp, #12
   128b4:	pop	{pc}		; (ldr pc, [sp], #4)
   128b8:	mvn	r0, #0
   128bc:	bx	lr
   128c0:	strd	r4, [sp, #-16]!
   128c4:	str	r6, [sp, #8]
   128c8:	str	lr, [sp, #12]
   128cc:	ldrb	ip, [r0]
   128d0:	and	ip, ip, #15
   128d4:	lsl	ip, ip, #2
   128d8:	add	lr, ip, #8
   128dc:	cmp	lr, r1
   128e0:	mvnhi	r0, #0
   128e4:	bls	128f8 <__assert_fail@plt+0x1660>
   128e8:	ldrd	r4, [sp]
   128ec:	ldr	r6, [sp, #8]
   128f0:	add	sp, sp, #12
   128f4:	pop	{pc}		; (ldr pc, [sp], #4)
   128f8:	add	r4, r0, ip
   128fc:	str	r0, [r2]
   12900:	str	r4, [r3]
   12904:	ldrh	r5, [r4, #2]
   12908:	mov	r3, #0
   1290c:	strh	r3, [r4, #2]
   12910:	sub	r1, r1, ip
   12914:	mov	r0, r4
   12918:	bl	12964 <__assert_fail@plt+0x16cc>
   1291c:	strh	r0, [r4, #2]
   12920:	subs	r0, r0, r5
   12924:	movne	r0, #1
   12928:	b	128e8 <__assert_fail@plt+0x1650>
   1292c:	push	{lr}		; (str lr, [sp, #-4]!)
   12930:	sub	sp, sp, #12
   12934:	str	r3, [sp]
   12938:	mov	r3, r2
   1293c:	mov	r2, #8
   12940:	bl	12860 <__assert_fail@plt+0x15c8>
   12944:	add	sp, sp, #12
   12948:	pop	{pc}		; (ldr pc, [sp], #4)
   1294c:	str	r4, [sp, #-8]!
   12950:	str	lr, [sp, #4]
   12954:	bl	128c0 <__assert_fail@plt+0x1628>
   12958:	ldr	r4, [sp]
   1295c:	add	sp, sp, #4
   12960:	pop	{pc}		; (ldr pc, [sp], #4)
   12964:	push	{lr}		; (str lr, [sp, #-4]!)
   12968:	sub	sp, sp, #12
   1296c:	mov	r3, #0
   12970:	strh	r3, [sp, #6]
   12974:	cmp	r1, #1
   12978:	ble	129c8 <__assert_fail@plt+0x1730>
   1297c:	sub	lr, r1, #2
   12980:	lsr	lr, lr, #1
   12984:	add	ip, lr, #1
   12988:	add	ip, r0, ip, lsl #1
   1298c:	ldrh	r2, [r0], #2
   12990:	add	r3, r3, r2
   12994:	cmp	r0, ip
   12998:	bne	1298c <__assert_fail@plt+0x16f4>
   1299c:	sub	r1, r1, #2
   129a0:	sub	r1, r1, lr, lsl #1
   129a4:	cmp	r1, #1
   129a8:	beq	129d4 <__assert_fail@plt+0x173c>
   129ac:	uxth	r0, r3
   129b0:	add	r3, r0, r3, asr #16
   129b4:	add	r3, r3, r3, asr #16
   129b8:	mvn	r0, r3
   129bc:	uxth	r0, r0
   129c0:	add	sp, sp, #12
   129c4:	pop	{pc}		; (ldr pc, [sp], #4)
   129c8:	mov	ip, r0
   129cc:	mov	r3, #0
   129d0:	b	129a4 <__assert_fail@plt+0x170c>
   129d4:	ldrb	r2, [ip]
   129d8:	strb	r2, [sp, #6]
   129dc:	ldrh	r2, [sp, #6]
   129e0:	add	r3, r3, r2
   129e4:	b	129ac <__assert_fail@plt+0x1714>
   129e8:	ldr	r3, [r0]
   129ec:	ldr	r2, [r0, #4]
   129f0:	cmp	r2, #0
   129f4:	beq	12a30 <__assert_fail@plt+0x1798>
   129f8:	add	r3, r3, #24
   129fc:	b	12a0c <__assert_fail@plt+0x1774>
   12a00:	add	r3, r3, #24
   12a04:	subs	r2, r2, #1
   12a08:	beq	12a28 <__assert_fail@plt+0x1790>
   12a0c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12a10:	cmp	r0, #0
   12a14:	beq	12a00 <__assert_fail@plt+0x1768>
   12a18:	ldr	r1, [r3, #-12]
   12a1c:	tst	r1, #2
   12a20:	bne	12a00 <__assert_fail@plt+0x1768>
   12a24:	bx	lr
   12a28:	mov	r0, #0
   12a2c:	bx	lr
   12a30:	mov	r0, #0
   12a34:	b	12a24 <__assert_fail@plt+0x178c>
   12a38:	ldr	r2, [r0, #8]
   12a3c:	cmp	r2, #0
   12a40:	beq	12a4c <__assert_fail@plt+0x17b4>
   12a44:	mov	r0, #0
   12a48:	bx	lr
   12a4c:	ldr	r2, [r1, #8]
   12a50:	cmp	r2, #0
   12a54:	bne	12a44 <__assert_fail@plt+0x17ac>
   12a58:	ldr	r2, [r0, #12]
   12a5c:	ldr	r1, [r1, #12]
   12a60:	orr	r2, r2, r1
   12a64:	tst	r2, #16
   12a68:	bne	12a44 <__assert_fail@plt+0x17ac>
   12a6c:	ldr	r1, [r0, #4]
   12a70:	ldr	r2, [r3]
   12a74:	add	r0, r2, #1
   12a78:	str	r0, [r3]
   12a7c:	strb	r1, [r2]
   12a80:	b	12a44 <__assert_fail@plt+0x17ac>
   12a84:	str	r4, [sp, #-8]!
   12a88:	str	lr, [sp, #4]
   12a8c:	mov	r4, r0
   12a90:	bl	11154 <__ctype_b_loc@plt>
   12a94:	ldr	r3, [r4]
   12a98:	ldrb	r2, [r3]
   12a9c:	ldr	ip, [r0]
   12aa0:	lsl	r1, r2, #1
   12aa4:	ldrh	r1, [ip, r1]
   12aa8:	tst	r1, #8192	; 0x2000
   12aac:	beq	12abc <__assert_fail@plt+0x1824>
   12ab0:	add	r3, r3, #1
   12ab4:	str	r3, [r4]
   12ab8:	b	12a94 <__assert_fail@plt+0x17fc>
   12abc:	subs	ip, r2, #45	; 0x2d
   12ac0:	movne	ip, #1
   12ac4:	cmp	r2, #0
   12ac8:	beq	12afc <__assert_fail@plt+0x1864>
   12acc:	tst	r1, #8
   12ad0:	bne	12afc <__assert_fail@plt+0x1864>
   12ad4:	add	r3, r3, #1
   12ad8:	str	r3, [r4]
   12adc:	ldrb	r2, [r3]
   12ae0:	cmp	r2, #0
   12ae4:	beq	12afc <__assert_fail@plt+0x1864>
   12ae8:	ldr	r1, [r0]
   12aec:	lsl	r2, r2, #1
   12af0:	ldrh	r2, [r1, r2]
   12af4:	tst	r2, #8
   12af8:	beq	12ad4 <__assert_fail@plt+0x183c>
   12afc:	mov	r0, ip
   12b00:	ldr	r4, [sp]
   12b04:	add	sp, sp, #4
   12b08:	pop	{pc}		; (ldr pc, [sp], #4)
   12b0c:	strd	r4, [sp, #-16]!
   12b10:	str	r6, [sp, #8]
   12b14:	str	lr, [sp, #12]
   12b18:	mov	r5, r0
   12b1c:	ldr	r0, [r0, #12]
   12b20:	cmp	r0, #0
   12b24:	beq	12b3c <__assert_fail@plt+0x18a4>
   12b28:	ldr	r4, [r0, #24]
   12b2c:	bl	17140 <argp_parse@@Base+0xcd8>
   12b30:	mov	r0, r4
   12b34:	cmp	r4, #0
   12b38:	bne	12b28 <__assert_fail@plt+0x1890>
   12b3c:	ldr	r3, [r5, #4]
   12b40:	cmp	r3, #0
   12b44:	bne	12b60 <__assert_fail@plt+0x18c8>
   12b48:	mov	r0, r5
   12b4c:	bl	17140 <argp_parse@@Base+0xcd8>
   12b50:	ldrd	r4, [sp]
   12b54:	ldr	r6, [sp, #8]
   12b58:	add	sp, sp, #12
   12b5c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b60:	ldr	r0, [r5]
   12b64:	bl	17140 <argp_parse@@Base+0xcd8>
   12b68:	ldr	r0, [r5, #8]
   12b6c:	bl	17140 <argp_parse@@Base+0xcd8>
   12b70:	b	12b48 <__assert_fail@plt+0x18b0>
   12b74:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12b78:	strd	r6, [sp, #8]
   12b7c:	str	r8, [sp, #16]
   12b80:	str	lr, [sp, #20]
   12b84:	mov	r6, r1
   12b88:	ldr	r7, [r0]
   12b8c:	ldr	r3, [r0, #4]
   12b90:	sub	r8, r3, #1
   12b94:	cmp	r3, #0
   12b98:	bne	12c04 <__assert_fail@plt+0x196c>
   12b9c:	mov	r7, #0
   12ba0:	b	12bdc <__assert_fail@plt+0x1944>
   12ba4:	sub	r5, r5, #1
   12ba8:	add	r4, r4, #24
   12bac:	cmn	r5, #1
   12bb0:	beq	12bf4 <__assert_fail@plt+0x195c>
   12bb4:	ldr	r0, [r4, #-24]	; 0xffffffe8
   12bb8:	cmp	r0, #0
   12bbc:	beq	12ba4 <__assert_fail@plt+0x190c>
   12bc0:	ldr	r3, [r4, #-12]
   12bc4:	tst	r3, #2
   12bc8:	bne	12ba4 <__assert_fail@plt+0x190c>
   12bcc:	mov	r1, r6
   12bd0:	bl	10fd4 <strcmp@plt>
   12bd4:	cmp	r0, #0
   12bd8:	bne	12ba4 <__assert_fail@plt+0x190c>
   12bdc:	mov	r0, r7
   12be0:	ldrd	r4, [sp]
   12be4:	ldrd	r6, [sp, #8]
   12be8:	ldr	r8, [sp, #16]
   12bec:	add	sp, sp, #20
   12bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   12bf4:	add	r7, r7, #28
   12bf8:	sub	r8, r8, #1
   12bfc:	cmn	r8, #1
   12c00:	beq	12c20 <__assert_fail@plt+0x1988>
   12c04:	ldr	r4, [r7]
   12c08:	ldr	r3, [r7, #4]
   12c0c:	sub	r5, r3, #1
   12c10:	cmp	r3, #0
   12c14:	beq	12bf4 <__assert_fail@plt+0x195c>
   12c18:	add	r4, r4, #24
   12c1c:	b	12bb4 <__assert_fail@plt+0x191c>
   12c20:	mov	r7, #0
   12c24:	b	12bdc <__assert_fail@plt+0x1944>
   12c28:	strd	r4, [sp, #-16]!
   12c2c:	str	r6, [sp, #8]
   12c30:	str	lr, [sp, #12]
   12c34:	ldr	r4, [r0, #16]
   12c38:	ldr	r0, [r0, #8]
   12c3c:	cmp	r0, #0
   12c40:	moveq	r5, #0
   12c44:	beq	12c58 <__assert_fail@plt+0x19c0>
   12c48:	mov	r1, #10
   12c4c:	bl	11184 <strchr@plt>
   12c50:	adds	r5, r0, #0
   12c54:	movne	r5, #1
   12c58:	cmp	r4, #0
   12c5c:	beq	12c80 <__assert_fail@plt+0x19e8>
   12c60:	ldr	r0, [r4]
   12c64:	cmp	r0, #0
   12c68:	beq	12c80 <__assert_fail@plt+0x19e8>
   12c6c:	bl	12c28 <__assert_fail@plt+0x1990>
   12c70:	add	r5, r5, r0
   12c74:	ldr	r0, [r4, #16]!
   12c78:	cmp	r0, #0
   12c7c:	bne	12c6c <__assert_fail@plt+0x19d4>
   12c80:	mov	r0, r5
   12c84:	ldrd	r4, [sp]
   12c88:	ldr	r6, [sp, #8]
   12c8c:	add	sp, sp, #12
   12c90:	pop	{pc}		; (ldr pc, [sp], #4)
   12c94:	strd	r4, [sp, #-16]!
   12c98:	str	r6, [sp, #8]
   12c9c:	str	lr, [sp, #12]
   12ca0:	mov	r4, r0
   12ca4:	subs	r5, r2, #0
   12ca8:	beq	12ce0 <__assert_fail@plt+0x1a48>
   12cac:	mov	r6, r1
   12cb0:	ldr	r2, [r5, #20]
   12cb4:	cmp	r2, #0
   12cb8:	beq	12ce0 <__assert_fail@plt+0x1a48>
   12cbc:	mov	r1, r3
   12cc0:	mov	r0, r5
   12cc4:	bl	16fbc <argp_parse@@Base+0xb54>
   12cc8:	ldr	r3, [r5, #20]
   12ccc:	mov	r2, r0
   12cd0:	mov	r1, r4
   12cd4:	mov	r0, r6
   12cd8:	blx	r3
   12cdc:	mov	r4, r0
   12ce0:	mov	r0, r4
   12ce4:	ldrd	r4, [sp]
   12ce8:	ldr	r6, [sp, #8]
   12cec:	add	sp, sp, #12
   12cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   12cf4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12cf8:	strd	r6, [sp, #8]
   12cfc:	strd	r8, [sp, #16]
   12d00:	strd	sl, [sp, #24]
   12d04:	str	lr, [sp, #32]
   12d08:	sub	sp, sp, #20
   12d0c:	ldr	r4, [r0]
   12d10:	ldr	r9, [r0, #8]
   12d14:	ldr	r6, [r0, #4]
   12d18:	cmp	r6, #0
   12d1c:	beq	12d70 <__assert_fail@plt+0x1ad8>
   12d20:	str	r3, [sp, #12]
   12d24:	str	r2, [sp, #8]
   12d28:	str	r1, [sp, #4]
   12d2c:	mov	fp, r4
   12d30:	mov	sl, #0
   12d34:	b	12dc0 <__assert_fail@plt+0x1b28>
   12d38:	and	r3, r5, #4
   12d3c:	cmp	r3, #0
   12d40:	moveq	fp, r4
   12d44:	tst	r5, #2
   12d48:	bne	12d68 <__assert_fail@plt+0x1ad0>
   12d4c:	ldr	r3, [sp, #12]
   12d50:	ldr	r2, [sp, #8]
   12d54:	mov	r1, fp
   12d58:	mov	r0, r4
   12d5c:	ldr	ip, [sp, #4]
   12d60:	blx	ip
   12d64:	mov	r7, r0
   12d68:	add	r9, r9, #1
   12d6c:	b	12da0 <__assert_fail@plt+0x1b08>
   12d70:	mov	r7, #0
   12d74:	mov	r0, r7
   12d78:	add	sp, sp, #20
   12d7c:	ldrd	r4, [sp]
   12d80:	ldrd	r6, [sp, #8]
   12d84:	ldrd	r8, [sp, #16]
   12d88:	ldrd	sl, [sp, #24]
   12d8c:	add	sp, sp, #32
   12d90:	pop	{pc}		; (ldr pc, [sp], #4)
   12d94:	ldrb	r3, [r9]
   12d98:	cmp	r3, r8
   12d9c:	beq	12d38 <__assert_fail@plt+0x1aa0>
   12da0:	add	r4, r4, #24
   12da4:	subs	r6, r6, #1
   12da8:	movne	r3, #1
   12dac:	moveq	r3, #0
   12db0:	cmp	r7, #0
   12db4:	movne	r3, #0
   12db8:	cmp	r3, #0
   12dbc:	beq	12d74 <__assert_fail@plt+0x1adc>
   12dc0:	ldr	r5, [r4, #12]
   12dc4:	ands	r7, r5, #8
   12dc8:	movne	r7, sl
   12dcc:	bne	12da0 <__assert_fail@plt+0x1b08>
   12dd0:	ldr	r8, [r4, #4]
   12dd4:	sub	r3, r8, #1
   12dd8:	cmp	r3, #254	; 0xfe
   12ddc:	bhi	12da0 <__assert_fail@plt+0x1b08>
   12de0:	bl	11154 <__ctype_b_loc@plt>
   12de4:	ldr	r2, [r0]
   12de8:	lsl	r3, r8, #1
   12dec:	ldrh	r3, [r2, r3]
   12df0:	tst	r3, #16384	; 0x4000
   12df4:	bne	12d94 <__assert_fail@plt+0x1afc>
   12df8:	b	12da0 <__assert_fail@plt+0x1b08>
   12dfc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12e00:	strd	r6, [sp, #8]
   12e04:	strd	r8, [sp, #16]
   12e08:	strd	sl, [sp, #24]
   12e0c:	str	lr, [sp, #32]
   12e10:	add	fp, sp, #32
   12e14:	sub	sp, sp, #20
   12e18:	ldr	r5, [r0, #4]
   12e1c:	cmp	r5, #0
   12e20:	beq	12fc8 <__assert_fail@plt+0x1d30>
   12e24:	str	r1, [fp, #-48]	; 0xffffffd0
   12e28:	mov	r6, r0
   12e2c:	ldr	r0, [r0, #8]
   12e30:	bl	11178 <strlen@plt>
   12e34:	add	r3, r0, #8
   12e38:	bic	r3, r3, #7
   12e3c:	sub	sp, sp, r3
   12e40:	mov	r8, sp
   12e44:	str	r8, [fp, #-40]	; 0xffffffd8
   12e48:	ldr	r4, [r6]
   12e4c:	movw	r7, #10808	; 0x2a38
   12e50:	movt	r7, #1
   12e54:	ldr	r2, [r4, #20]
   12e58:	sub	r3, fp, #40	; 0x28
   12e5c:	ldr	r2, [r2, #24]
   12e60:	mov	r1, r7
   12e64:	mov	r0, r4
   12e68:	bl	12cf4 <__assert_fail@plt+0x1a5c>
   12e6c:	add	r4, r4, #28
   12e70:	subs	r5, r5, #1
   12e74:	bne	12e54 <__assert_fail@plt+0x1bbc>
   12e78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12e7c:	cmp	r3, r8
   12e80:	bhi	12ef4 <__assert_fail@plt+0x1c5c>
   12e84:	ldr	r4, [r6]
   12e88:	ldr	r5, [r6, #4]
   12e8c:	cmp	r5, #0
   12e90:	beq	12fc8 <__assert_fail@plt+0x1d30>
   12e94:	movw	r7, #12736	; 0x31c0
   12e98:	movt	r7, #1
   12e9c:	ldr	r2, [r4, #20]
   12ea0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12ea4:	ldr	r2, [r2, #24]
   12ea8:	mov	r1, r7
   12eac:	mov	r0, r4
   12eb0:	bl	12cf4 <__assert_fail@plt+0x1a5c>
   12eb4:	add	r4, r4, #28
   12eb8:	subs	r5, r5, #1
   12ebc:	bne	12e9c <__assert_fail@plt+0x1c04>
   12ec0:	ldr	r7, [r6]
   12ec4:	ldr	r8, [r6, #4]
   12ec8:	cmp	r8, #0
   12ecc:	beq	12fc8 <__assert_fail@plt+0x1d30>
   12ed0:	add	r7, r7, #28
   12ed4:	movw	sl, #38980	; 0x9844
   12ed8:	movt	sl, #1
   12edc:	movw	r9, #38964	; 0x9834
   12ee0:	movt	r9, #1
   12ee4:	movw	r3, #38992	; 0x9850
   12ee8:	movt	r3, #1
   12eec:	str	r3, [fp, #-52]	; 0xffffffcc
   12ef0:	b	12fb0 <__assert_fail@plt+0x1d18>
   12ef4:	add	r2, r3, #1
   12ef8:	str	r2, [fp, #-40]	; 0xffffffd8
   12efc:	mov	r2, #0
   12f00:	strb	r2, [r3]
   12f04:	mov	r2, r8
   12f08:	movw	r1, #38956	; 0x982c
   12f0c:	movt	r1, #1
   12f10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12f14:	bl	18458 <argp_parse@@Base+0x1ff0>
   12f18:	b	12e84 <__assert_fail@plt+0x1bec>
   12f1c:	tst	r1, #16
   12f20:	bne	12f54 <__assert_fail@plt+0x1cbc>
   12f24:	ldr	r3, [r6, #8]
   12f28:	cmp	r3, #0
   12f2c:	bne	12f40 <__assert_fail@plt+0x1ca8>
   12f30:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12f34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12f38:	bl	18458 <argp_parse@@Base+0x1ff0>
   12f3c:	b	12f54 <__assert_fail@plt+0x1cbc>
   12f40:	tst	r1, #1
   12f44:	movne	r1, r9
   12f48:	moveq	r1, sl
   12f4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12f50:	bl	18458 <argp_parse@@Base+0x1ff0>
   12f54:	add	r4, r4, #24
   12f58:	subs	r5, r5, #1
   12f5c:	beq	12fa4 <__assert_fail@plt+0x1d0c>
   12f60:	ldr	r2, [r4]
   12f64:	cmp	r2, #0
   12f68:	beq	12f54 <__assert_fail@plt+0x1cbc>
   12f6c:	ldr	r1, [r4, #12]
   12f70:	and	r3, r1, #4
   12f74:	cmp	r3, #0
   12f78:	moveq	r6, r4
   12f7c:	tst	r1, #2
   12f80:	bne	12f54 <__assert_fail@plt+0x1cbc>
   12f84:	ldr	r3, [r4, #8]
   12f88:	ldr	r0, [r6, #12]
   12f8c:	orr	r1, r1, r0
   12f90:	cmp	r3, #0
   12f94:	beq	12f1c <__assert_fail@plt+0x1c84>
   12f98:	tst	r1, #16
   12f9c:	beq	12f40 <__assert_fail@plt+0x1ca8>
   12fa0:	b	12f54 <__assert_fail@plt+0x1cbc>
   12fa4:	add	r7, r7, #28
   12fa8:	subs	r8, r8, #1
   12fac:	beq	12fc8 <__assert_fail@plt+0x1d30>
   12fb0:	ldr	r4, [r7, #-28]	; 0xffffffe4
   12fb4:	ldr	r5, [r7, #-24]	; 0xffffffe8
   12fb8:	cmp	r5, #0
   12fbc:	beq	12fa4 <__assert_fail@plt+0x1d0c>
   12fc0:	mov	r6, r4
   12fc4:	b	12f60 <__assert_fail@plt+0x1cc8>
   12fc8:	sub	sp, fp, #32
   12fcc:	ldrd	r4, [sp]
   12fd0:	ldrd	r6, [sp, #8]
   12fd4:	ldrd	r8, [sp, #16]
   12fd8:	ldrd	sl, [sp, #24]
   12fdc:	add	sp, sp, #32
   12fe0:	pop	{pc}		; (ldr pc, [sp], #4)
   12fe4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12fe8:	strd	r6, [sp, #8]
   12fec:	str	r8, [sp, #16]
   12ff0:	str	lr, [sp, #20]
   12ff4:	mov	r4, r0
   12ff8:	mov	r5, r1
   12ffc:	ldr	r3, [r0, #28]
   13000:	ldr	r2, [r0, #24]
   13004:	sub	r3, r3, r2
   13008:	ldr	r2, [r0, #16]
   1300c:	cmp	r3, r2
   13010:	bhi	1302c <__assert_fail@plt+0x1d94>
   13014:	ldr	r3, [r4, #20]
   13018:	cmp	r3, #0
   1301c:	subge	r5, r5, r3
   13020:	mov	r6, #32
   13024:	mov	r7, #1
   13028:	b	13048 <__assert_fail@plt+0x1db0>
   1302c:	bl	17de0 <argp_parse@@Base+0x1978>
   13030:	b	13014 <__assert_fail@plt+0x1d7c>
   13034:	ldr	r3, [r4, #28]
   13038:	add	r2, r3, #1
   1303c:	str	r2, [r4, #28]
   13040:	strb	r6, [r3]
   13044:	sub	r5, r5, #1
   13048:	cmp	r5, #0
   1304c:	ble	13078 <__assert_fail@plt+0x1de0>
   13050:	ldr	r2, [r4, #28]
   13054:	ldr	r3, [r4, #32]
   13058:	cmp	r2, r3
   1305c:	bcc	13034 <__assert_fail@plt+0x1d9c>
   13060:	mov	r1, r7
   13064:	mov	r0, r4
   13068:	bl	18358 <argp_parse@@Base+0x1ef0>
   1306c:	cmp	r0, #0
   13070:	bne	13034 <__assert_fail@plt+0x1d9c>
   13074:	b	13044 <__assert_fail@plt+0x1dac>
   13078:	ldrd	r4, [sp]
   1307c:	ldrd	r6, [sp, #8]
   13080:	ldr	r8, [sp, #16]
   13084:	add	sp, sp, #20
   13088:	pop	{pc}		; (ldr pc, [sp], #4)
   1308c:	strd	r4, [sp, #-16]!
   13090:	str	r6, [sp, #8]
   13094:	str	lr, [sp, #12]
   13098:	ldr	r4, [r0, #12]
   1309c:	ands	r4, r4, #8
   130a0:	movne	r4, #0
   130a4:	bne	130d4 <__assert_fail@plt+0x1e3c>
   130a8:	ldr	r5, [r0, #4]
   130ac:	sub	r3, r5, #1
   130b0:	cmp	r3, #254	; 0xfe
   130b4:	bhi	130d4 <__assert_fail@plt+0x1e3c>
   130b8:	bl	11154 <__ctype_b_loc@plt>
   130bc:	ldr	r2, [r0]
   130c0:	lsl	r3, r5, #1
   130c4:	ldrh	r3, [r2, r3]
   130c8:	and	r3, r3, #16384	; 0x4000
   130cc:	cmp	r3, #0
   130d0:	movne	r4, r5
   130d4:	mov	r0, r4
   130d8:	ldrd	r4, [sp]
   130dc:	ldr	r6, [sp, #8]
   130e0:	add	sp, sp, #12
   130e4:	pop	{pc}		; (ldr pc, [sp], #4)
   130e8:	strd	r4, [sp, #-16]!
   130ec:	str	r6, [sp, #8]
   130f0:	str	lr, [sp, #12]
   130f4:	mov	r4, r0
   130f8:	mov	r5, r1
   130fc:	ldr	r3, [r0, #28]
   13100:	ldr	r2, [r0, #24]
   13104:	sub	r3, r3, r2
   13108:	ldr	r2, [r0, #16]
   1310c:	cmp	r3, r2
   13110:	bhi	13160 <__assert_fail@plt+0x1ec8>
   13114:	ldr	r3, [r4, #20]
   13118:	cmp	r3, #0
   1311c:	addge	r5, r5, r3
   13120:	ldr	r3, [r4, #8]
   13124:	cmp	r5, r3
   13128:	bcc	13180 <__assert_fail@plt+0x1ee8>
   1312c:	ldr	r2, [r4, #28]
   13130:	ldr	r3, [r4, #32]
   13134:	cmp	r2, r3
   13138:	bcs	13168 <__assert_fail@plt+0x1ed0>
   1313c:	ldr	r3, [r4, #28]
   13140:	add	r2, r3, #1
   13144:	str	r2, [r4, #28]
   13148:	mov	r2, #10
   1314c:	strb	r2, [r3]
   13150:	ldrd	r4, [sp]
   13154:	ldr	r6, [sp, #8]
   13158:	add	sp, sp, #12
   1315c:	pop	{pc}		; (ldr pc, [sp], #4)
   13160:	bl	17de0 <argp_parse@@Base+0x1978>
   13164:	b	13114 <__assert_fail@plt+0x1e7c>
   13168:	mov	r1, #1
   1316c:	mov	r0, r4
   13170:	bl	18358 <argp_parse@@Base+0x1ef0>
   13174:	cmp	r0, #0
   13178:	bne	1313c <__assert_fail@plt+0x1ea4>
   1317c:	b	13150 <__assert_fail@plt+0x1eb8>
   13180:	ldr	r2, [r4, #28]
   13184:	ldr	r3, [r4, #32]
   13188:	cmp	r2, r3
   1318c:	bcs	131a8 <__assert_fail@plt+0x1f10>
   13190:	ldr	r3, [r4, #28]
   13194:	add	r2, r3, #1
   13198:	str	r2, [r4, #28]
   1319c:	mov	r2, #32
   131a0:	strb	r2, [r3]
   131a4:	b	13150 <__assert_fail@plt+0x1eb8>
   131a8:	mov	r1, #1
   131ac:	mov	r0, r4
   131b0:	bl	18358 <argp_parse@@Base+0x1ef0>
   131b4:	cmp	r0, #0
   131b8:	bne	13190 <__assert_fail@plt+0x1ef8>
   131bc:	b	13150 <__assert_fail@plt+0x1eb8>
   131c0:	strd	r4, [sp, #-16]!
   131c4:	str	r6, [sp, #8]
   131c8:	str	lr, [sp, #12]
   131cc:	ldr	r5, [r0, #8]
   131d0:	cmp	r5, #0
   131d4:	beq	13218 <__assert_fail@plt+0x1f80>
   131d8:	ldr	r2, [r0, #12]
   131dc:	ldr	r1, [r1, #12]
   131e0:	orr	r2, r2, r1
   131e4:	tst	r2, #16
   131e8:	bne	13224 <__assert_fail@plt+0x1f8c>
   131ec:	mov	r6, r3
   131f0:	mov	r4, r0
   131f4:	tst	r2, #1
   131f8:	beq	13238 <__assert_fail@plt+0x1fa0>
   131fc:	mov	r3, r5
   13200:	ldr	r2, [r0, #4]
   13204:	movw	r1, #39000	; 0x9858
   13208:	movt	r1, #1
   1320c:	mov	r0, r6
   13210:	bl	18458 <argp_parse@@Base+0x1ff0>
   13214:	b	13224 <__assert_fail@plt+0x1f8c>
   13218:	ldr	r5, [r1, #8]
   1321c:	cmp	r5, #0
   13220:	bne	131d8 <__assert_fail@plt+0x1f40>
   13224:	mov	r0, #0
   13228:	ldrd	r4, [sp]
   1322c:	ldr	r6, [sp, #8]
   13230:	add	sp, sp, #12
   13234:	pop	{pc}		; (ldr pc, [sp], #4)
   13238:	mov	r0, r5
   1323c:	bl	11178 <strlen@plt>
   13240:	add	r1, r0, #6
   13244:	mov	r0, r6
   13248:	bl	130e8 <__assert_fail@plt+0x1e50>
   1324c:	mov	r3, r5
   13250:	ldr	r2, [r4, #4]
   13254:	movw	r1, #39012	; 0x9864
   13258:	movt	r1, #1
   1325c:	mov	r0, r6
   13260:	bl	18458 <argp_parse@@Base+0x1ff0>
   13264:	b	13224 <__assert_fail@plt+0x1f8c>
   13268:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1326c:	strd	r6, [sp, #8]
   13270:	strd	r8, [sp, #16]
   13274:	strd	sl, [sp, #24]
   13278:	str	lr, [sp, #32]
   1327c:	sub	sp, sp, #28
   13280:	str	r1, [sp, #8]
   13284:	mov	sl, r2
   13288:	mov	r4, r3
   1328c:	ldr	r9, [sp, #64]	; 0x40
   13290:	ldr	r6, [r2]
   13294:	str	r6, [sp, #20]
   13298:	ldr	r7, [r0, #16]
   1329c:	ldr	r2, [r0, #8]
   132a0:	mov	ip, r2
   132a4:	str	r2, [sp, #16]
   132a8:	mov	r3, r1
   132ac:	mov	r2, r0
   132b0:	mov	r1, #6
   132b4:	movt	r1, #512	; 0x200
   132b8:	mov	r0, ip
   132bc:	bl	12c94 <__assert_fail@plt+0x19fc>
   132c0:	cmp	r0, #0
   132c4:	str	r0, [sp, #12]
   132c8:	beq	13458 <__assert_fail@plt+0x21c0>
   132cc:	mov	r1, #10
   132d0:	bl	11028 <strchrnul@plt>
   132d4:	mov	r5, r0
   132d8:	ldrb	r3, [r0]
   132dc:	cmp	r3, #0
   132e0:	beq	13428 <__assert_fail@plt+0x2190>
   132e4:	ldrb	fp, [r6]
   132e8:	cmp	fp, #0
   132ec:	ble	13420 <__assert_fail@plt+0x2188>
   132f0:	mov	r6, #0
   132f4:	add	r8, r0, #1
   132f8:	mov	r1, #10
   132fc:	mov	r0, r8
   13300:	bl	11028 <strchrnul@plt>
   13304:	add	r6, r6, #1
   13308:	cmp	r6, fp
   1330c:	bne	132f4 <__assert_fail@plt+0x205c>
   13310:	mov	r5, r0
   13314:	ldr	r3, [sl]
   13318:	add	r3, r3, #1
   1331c:	str	r3, [sl]
   13320:	mov	fp, #1
   13324:	add	r1, r5, #1
   13328:	sub	r1, r1, r8
   1332c:	mov	r0, r9
   13330:	bl	130e8 <__assert_fail@plt+0x1e50>
   13334:	sub	r6, r5, r8
   13338:	ldr	r3, [r9, #28]
   1333c:	add	r3, r3, r6
   13340:	ldr	r2, [r9, #32]
   13344:	cmp	r2, r3
   13348:	bcs	13360 <__assert_fail@plt+0x20c8>
   1334c:	mov	r1, r6
   13350:	mov	r0, r9
   13354:	bl	18358 <argp_parse@@Base+0x1ef0>
   13358:	cmp	r0, #0
   1335c:	beq	1337c <__assert_fail@plt+0x20e4>
   13360:	mov	r2, r6
   13364:	mov	r1, r8
   13368:	ldr	r0, [r9, #28]
   1336c:	bl	11058 <memcpy@plt>
   13370:	ldr	r3, [r9, #28]
   13374:	add	r6, r3, r6
   13378:	str	r6, [r9, #28]
   1337c:	ldr	r2, [sp, #16]
   13380:	ldr	r3, [sp, #12]
   13384:	cmp	r2, r3
   13388:	bne	13434 <__assert_fail@plt+0x219c>
   1338c:	cmp	r7, #0
   13390:	beq	133cc <__assert_fail@plt+0x2134>
   13394:	ldr	r0, [r7]
   13398:	cmp	r0, #0
   1339c:	beq	133cc <__assert_fail@plt+0x2134>
   133a0:	mov	r3, r4
   133a4:	str	r9, [sp]
   133a8:	mov	r2, sl
   133ac:	ldr	r1, [sp, #8]
   133b0:	bl	13268 <__assert_fail@plt+0x1fd0>
   133b4:	clz	r3, r0
   133b8:	lsr	r3, r3, #5
   133bc:	ldr	r0, [r7, #16]!
   133c0:	cmp	r0, #0
   133c4:	bne	133a4 <__assert_fail@plt+0x210c>
   133c8:	mov	r4, r3
   133cc:	cmp	r4, #0
   133d0:	moveq	fp, #0
   133d4:	cmp	fp, #0
   133d8:	beq	133fc <__assert_fail@plt+0x2164>
   133dc:	ldrb	r3, [r5]
   133e0:	cmp	r3, #0
   133e4:	beq	13440 <__assert_fail@plt+0x21a8>
   133e8:	ldr	r2, [sp, #20]
   133ec:	ldrb	r3, [r2]
   133f0:	add	r3, r3, #1
   133f4:	strb	r3, [r2]
   133f8:	mov	r4, #0
   133fc:	clz	r0, r4
   13400:	lsr	r0, r0, #5
   13404:	add	sp, sp, #28
   13408:	ldrd	r4, [sp]
   1340c:	ldrd	r6, [sp, #8]
   13410:	ldrd	r8, [sp, #16]
   13414:	ldrd	sl, [sp, #24]
   13418:	add	sp, sp, #32
   1341c:	pop	{pc}		; (ldr pc, [sp], #4)
   13420:	ldr	r8, [sp, #12]
   13424:	b	13314 <__assert_fail@plt+0x207c>
   13428:	ldr	r8, [sp, #12]
   1342c:	mov	fp, #0
   13430:	b	13324 <__assert_fail@plt+0x208c>
   13434:	mov	r0, r3
   13438:	bl	17140 <argp_parse@@Base+0xcd8>
   1343c:	b	1338c <__assert_fail@plt+0x20f4>
   13440:	ldr	r2, [sp, #20]
   13444:	ldrb	r3, [r2]
   13448:	cmp	r3, #0
   1344c:	movne	r3, #0
   13450:	strbne	r3, [r2]
   13454:	b	133fc <__assert_fail@plt+0x2164>
   13458:	cmp	r7, #0
   1345c:	beq	133fc <__assert_fail@plt+0x2164>
   13460:	ldr	r5, [sp, #12]
   13464:	mov	fp, #0
   13468:	b	13394 <__assert_fail@plt+0x20fc>
   1346c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13470:	strd	r6, [sp, #8]
   13474:	str	r8, [sp, #16]
   13478:	str	lr, [sp, #20]
   1347c:	mov	r6, r0
   13480:	mov	r4, r2
   13484:	ldr	r3, [r2, #16]
   13488:	mov	r2, r1
   1348c:	mov	r1, #3
   13490:	movt	r1, #512	; 0x200
   13494:	bl	12c94 <__assert_fail@plt+0x19fc>
   13498:	subs	r5, r0, #0
   1349c:	beq	135b0 <__assert_fail@plt+0x2318>
   134a0:	ldrb	r3, [r5]
   134a4:	cmp	r3, #0
   134a8:	beq	135a4 <__assert_fail@plt+0x230c>
   134ac:	ldr	r3, [r4, #8]
   134b0:	ldr	r3, [r3]
   134b4:	cmp	r3, #0
   134b8:	beq	134e4 <__assert_fail@plt+0x224c>
   134bc:	ldr	r7, [r4, #4]
   134c0:	ldr	r2, [r7, #28]
   134c4:	ldr	r3, [r7, #32]
   134c8:	cmp	r2, r3
   134cc:	bcs	135d4 <__assert_fail@plt+0x233c>
   134d0:	ldr	r3, [r7, #28]
   134d4:	add	r2, r3, #1
   134d8:	str	r2, [r7, #28]
   134dc:	mov	r2, #10
   134e0:	strb	r2, [r3]
   134e4:	movw	r8, #45652	; 0xb254
   134e8:	movt	r8, #2
   134ec:	ldr	r1, [r8, #24]
   134f0:	ldr	r0, [r4, #4]
   134f4:	bl	12fe4 <__assert_fail@plt+0x1d4c>
   134f8:	ldr	r7, [r4, #4]
   134fc:	ldr	r8, [r8, #24]
   13500:	ldr	r3, [r7, #28]
   13504:	ldr	r2, [r7, #24]
   13508:	sub	r3, r3, r2
   1350c:	ldr	r2, [r7, #16]
   13510:	cmp	r3, r2
   13514:	bhi	135ec <__assert_fail@plt+0x2354>
   13518:	str	r8, [r7, #4]
   1351c:	ldr	r7, [r4, #4]
   13520:	movw	r3, #45652	; 0xb254
   13524:	movt	r3, #2
   13528:	ldr	r8, [r3, #24]
   1352c:	ldr	r3, [r7, #28]
   13530:	ldr	r2, [r7, #24]
   13534:	sub	r3, r3, r2
   13538:	ldr	r2, [r7, #16]
   1353c:	cmp	r3, r2
   13540:	bhi	135f8 <__assert_fail@plt+0x2360>
   13544:	str	r8, [r7, #12]
   13548:	mov	r0, r5
   1354c:	bl	11178 <strlen@plt>
   13550:	subs	r7, r0, #0
   13554:	bne	13604 <__assert_fail@plt+0x236c>
   13558:	ldr	r7, [r4, #4]
   1355c:	ldr	r3, [r7, #28]
   13560:	ldr	r2, [r7, #24]
   13564:	sub	r3, r3, r2
   13568:	ldr	r2, [r7, #16]
   1356c:	cmp	r3, r2
   13570:	bhi	13650 <__assert_fail@plt+0x23b8>
   13574:	mov	r3, #0
   13578:	str	r3, [r7, #4]
   1357c:	ldr	r7, [r4, #4]
   13580:	ldr	r2, [r7, #28]
   13584:	ldr	r3, [r7, #32]
   13588:	cmp	r2, r3
   1358c:	bcs	1365c <__assert_fail@plt+0x23c4>
   13590:	ldr	r3, [r7, #28]
   13594:	add	r2, r3, #1
   13598:	str	r2, [r7, #28]
   1359c:	mov	r2, #10
   135a0:	strb	r2, [r3]
   135a4:	ldr	r3, [r4, #8]
   135a8:	mov	r2, #1
   135ac:	str	r2, [r3, #4]
   135b0:	cmp	r6, r5
   135b4:	beq	135c0 <__assert_fail@plt+0x2328>
   135b8:	mov	r0, r5
   135bc:	bl	17140 <argp_parse@@Base+0xcd8>
   135c0:	ldrd	r4, [sp]
   135c4:	ldrd	r6, [sp, #8]
   135c8:	ldr	r8, [sp, #16]
   135cc:	add	sp, sp, #20
   135d0:	pop	{pc}		; (ldr pc, [sp], #4)
   135d4:	mov	r1, #1
   135d8:	mov	r0, r7
   135dc:	bl	18358 <argp_parse@@Base+0x1ef0>
   135e0:	cmp	r0, #0
   135e4:	bne	134d0 <__assert_fail@plt+0x2238>
   135e8:	b	134e4 <__assert_fail@plt+0x224c>
   135ec:	mov	r0, r7
   135f0:	bl	17de0 <argp_parse@@Base+0x1978>
   135f4:	b	13518 <__assert_fail@plt+0x2280>
   135f8:	mov	r0, r7
   135fc:	bl	17de0 <argp_parse@@Base+0x1978>
   13600:	b	13544 <__assert_fail@plt+0x22ac>
   13604:	ldr	r8, [r4, #4]
   13608:	ldr	r3, [r8, #28]
   1360c:	add	r3, r3, r7
   13610:	ldr	r2, [r8, #32]
   13614:	cmp	r2, r3
   13618:	bcs	13630 <__assert_fail@plt+0x2398>
   1361c:	mov	r1, r7
   13620:	mov	r0, r8
   13624:	bl	18358 <argp_parse@@Base+0x1ef0>
   13628:	cmp	r0, #0
   1362c:	beq	13558 <__assert_fail@plt+0x22c0>
   13630:	mov	r2, r7
   13634:	mov	r1, r5
   13638:	ldr	r0, [r8, #28]
   1363c:	bl	11058 <memcpy@plt>
   13640:	ldr	r3, [r8, #28]
   13644:	add	r7, r3, r7
   13648:	str	r7, [r8, #28]
   1364c:	b	13558 <__assert_fail@plt+0x22c0>
   13650:	mov	r0, r7
   13654:	bl	17de0 <argp_parse@@Base+0x1978>
   13658:	b	13574 <__assert_fail@plt+0x22dc>
   1365c:	mov	r1, #1
   13660:	mov	r0, r7
   13664:	bl	18358 <argp_parse@@Base+0x1ef0>
   13668:	cmp	r0, #0
   1366c:	bne	13590 <__assert_fail@plt+0x22f8>
   13670:	b	135a4 <__assert_fail@plt+0x230c>
   13674:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13678:	strd	r6, [sp, #8]
   1367c:	str	r8, [sp, #16]
   13680:	str	lr, [sp, #20]
   13684:	mov	r6, r0
   13688:	mov	r4, r1
   1368c:	ldr	r3, [r1, #12]
   13690:	cmp	r3, #0
   13694:	beq	137c8 <__assert_fail@plt+0x2530>
   13698:	ldr	r3, [r1, #8]
   1369c:	ldr	r7, [r3]
   136a0:	ldr	r2, [r1]
   136a4:	ldr	r5, [r2, #16]
   136a8:	ldr	r3, [r3, #4]
   136ac:	cmp	r3, #0
   136b0:	cmpne	r7, #0
   136b4:	bne	13768 <__assert_fail@plt+0x24d0>
   136b8:	cmp	r5, #0
   136bc:	beq	13740 <__assert_fail@plt+0x24a8>
   136c0:	ldr	r0, [r5]
   136c4:	cmp	r0, #0
   136c8:	beq	13740 <__assert_fail@plt+0x24a8>
   136cc:	ldrb	r3, [r0]
   136d0:	cmp	r3, #0
   136d4:	beq	13740 <__assert_fail@plt+0x24a8>
   136d8:	cmp	r7, #0
   136dc:	beq	1370c <__assert_fail@plt+0x2474>
   136e0:	ldr	r3, [r7, #16]
   136e4:	cmp	r3, r5
   136e8:	beq	13740 <__assert_fail@plt+0x24a8>
   136ec:	cmp	r3, #0
   136f0:	beq	1370c <__assert_fail@plt+0x2474>
   136f4:	ldr	r3, [r3, #12]
   136f8:	cmp	r3, #0
   136fc:	cmpne	r5, r3
   13700:	bne	136f4 <__assert_fail@plt+0x245c>
   13704:	cmp	r5, r3
   13708:	beq	13740 <__assert_fail@plt+0x24a8>
   1370c:	ldr	r3, [r4, #4]
   13710:	ldr	r7, [r3, #12]
   13714:	mov	r2, r4
   13718:	ldr	r1, [r5, #16]
   1371c:	bl	1346c <__assert_fail@plt+0x21d4>
   13720:	ldr	r5, [r4, #4]
   13724:	ldr	r3, [r5, #28]
   13728:	ldr	r2, [r5, #24]
   1372c:	sub	r3, r3, r2
   13730:	ldr	r2, [r5, #16]
   13734:	cmp	r3, r2
   13738:	bhi	137bc <__assert_fail@plt+0x2524>
   1373c:	str	r7, [r5, #12]
   13740:	mov	r3, #0
   13744:	str	r3, [r4, #12]
   13748:	mov	r1, r6
   1374c:	ldr	r0, [r4, #4]
   13750:	bl	12fe4 <__assert_fail@plt+0x1d4c>
   13754:	ldrd	r4, [sp]
   13758:	ldrd	r6, [sp, #8]
   1375c:	ldr	r8, [sp, #16]
   13760:	add	sp, sp, #20
   13764:	pop	{pc}		; (ldr pc, [sp], #4)
   13768:	ldr	r2, [r2, #12]
   1376c:	ldr	r3, [r7, #12]
   13770:	cmp	r2, r3
   13774:	beq	136b8 <__assert_fail@plt+0x2420>
   13778:	ldr	r8, [r1, #4]
   1377c:	ldr	r2, [r8, #28]
   13780:	ldr	r3, [r8, #32]
   13784:	cmp	r2, r3
   13788:	bcs	137a4 <__assert_fail@plt+0x250c>
   1378c:	ldr	r3, [r8, #28]
   13790:	add	r2, r3, #1
   13794:	str	r2, [r8, #28]
   13798:	mov	r2, #10
   1379c:	strb	r2, [r3]
   137a0:	b	136b8 <__assert_fail@plt+0x2420>
   137a4:	mov	r1, #1
   137a8:	mov	r0, r8
   137ac:	bl	18358 <argp_parse@@Base+0x1ef0>
   137b0:	cmp	r0, #0
   137b4:	bne	1378c <__assert_fail@plt+0x24f4>
   137b8:	b	136b8 <__assert_fail@plt+0x2420>
   137bc:	mov	r0, r5
   137c0:	bl	17de0 <argp_parse@@Base+0x1978>
   137c4:	b	1373c <__assert_fail@plt+0x24a4>
   137c8:	ldr	r5, [r1, #4]
   137cc:	ldr	r3, [r5, #28]
   137d0:	add	r3, r3, #2
   137d4:	ldr	r2, [r5, #32]
   137d8:	cmp	r2, r3
   137dc:	bcs	137f4 <__assert_fail@plt+0x255c>
   137e0:	mov	r1, #2
   137e4:	mov	r0, r5
   137e8:	bl	18358 <argp_parse@@Base+0x1ef0>
   137ec:	cmp	r0, #0
   137f0:	beq	13748 <__assert_fail@plt+0x24b0>
   137f4:	ldr	r2, [r5, #28]
   137f8:	movw	r3, #39024	; 0x9870
   137fc:	movt	r3, #1
   13800:	ldrh	r3, [r3]
   13804:	strh	r3, [r2]
   13808:	ldr	r3, [r5, #28]
   1380c:	add	r3, r3, #2
   13810:	str	r3, [r5, #28]
   13814:	b	13748 <__assert_fail@plt+0x24b0>
   13818:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1381c:	strd	r6, [sp, #8]
   13820:	strd	r8, [sp, #16]
   13824:	strd	sl, [sp, #24]
   13828:	str	lr, [sp, #32]
   1382c:	sub	sp, sp, #28
   13830:	mov	r8, r0
   13834:	str	r1, [sp, #12]
   13838:	str	r2, [sp, #8]
   1383c:	mov	fp, r3
   13840:	ldr	sl, [sp, #64]	; 0x40
   13844:	ldr	r4, [sp, #68]	; 0x44
   13848:	ldr	r6, [r0, #12]
   1384c:	ldr	r9, [r0, #16]
   13850:	cmp	r6, #0
   13854:	beq	13cd0 <__assert_fail@plt+0x2a38>
   13858:	mov	r5, r2
   1385c:	mov	r1, #11
   13860:	mov	r0, r6
   13864:	bl	11184 <strchr@plt>
   13868:	cmp	r5, #0
   1386c:	beq	138ac <__assert_fail@plt+0x2614>
   13870:	cmp	r0, #0
   13874:	addne	r6, r0, #1
   13878:	beq	13d18 <__assert_fail@plt+0x2a80>
   1387c:	ldr	r3, [r8, #20]
   13880:	cmp	r3, #0
   13884:	beq	13d20 <__assert_fail@plt+0x2a88>
   13888:	ldr	r1, [sp, #12]
   1388c:	mov	r0, r8
   13890:	bl	16fbc <argp_parse@@Base+0xb54>
   13894:	str	r0, [sp, #16]
   13898:	ldr	r3, [r8, #20]
   1389c:	mov	r7, #0
   138a0:	mov	r0, #2
   138a4:	movt	r0, #512	; 0x200
   138a8:	b	138f8 <__assert_fail@plt+0x2660>
   138ac:	cmp	r0, #0
   138b0:	beq	13d3c <__assert_fail@plt+0x2aa4>
   138b4:	sub	r7, r0, r6
   138b8:	ldr	r3, [r8, #20]
   138bc:	cmp	r3, #0
   138c0:	beq	13ae0 <__assert_fail@plt+0x2848>
   138c4:	cmp	r7, #0
   138c8:	beq	138dc <__assert_fail@plt+0x2644>
   138cc:	mov	r1, r7
   138d0:	mov	r0, r6
   138d4:	bl	1104c <strndup@plt>
   138d8:	mov	r6, r0
   138dc:	ldr	r1, [sp, #12]
   138e0:	mov	r0, r8
   138e4:	bl	16fbc <argp_parse@@Base+0xb54>
   138e8:	str	r0, [sp, #16]
   138ec:	ldr	r3, [r8, #20]
   138f0:	mov	r0, #1
   138f4:	movt	r0, #512	; 0x200
   138f8:	ldr	r2, [sp, #16]
   138fc:	mov	r1, r6
   13900:	blx	r3
   13904:	subs	r5, r0, #0
   13908:	beq	13bec <__assert_fail@plt+0x2954>
   1390c:	cmp	fp, #0
   13910:	bne	13af0 <__assert_fail@plt+0x2858>
   13914:	cmp	r5, r6
   13918:	movne	r3, #0
   1391c:	moveq	r3, #1
   13920:	cmp	r7, #0
   13924:	moveq	r3, #0
   13928:	cmp	r3, #0
   1392c:	beq	13b30 <__assert_fail@plt+0x2898>
   13930:	ldr	r3, [r4, #28]
   13934:	add	r3, r3, r7
   13938:	ldr	r2, [r4, #32]
   1393c:	cmp	r2, r3
   13940:	bcs	13958 <__assert_fail@plt+0x26c0>
   13944:	mov	r1, r7
   13948:	mov	r0, r4
   1394c:	bl	18358 <argp_parse@@Base+0x1ef0>
   13950:	cmp	r0, #0
   13954:	beq	13974 <__assert_fail@plt+0x26dc>
   13958:	mov	r2, r7
   1395c:	mov	r1, r6
   13960:	ldr	r0, [r4, #28]
   13964:	bl	11058 <memcpy@plt>
   13968:	ldr	r3, [r4, #28]
   1396c:	add	r3, r3, r7
   13970:	str	r3, [r4, #28]
   13974:	ldr	r3, [r4, #28]
   13978:	ldr	r2, [r4, #24]
   1397c:	sub	r3, r3, r2
   13980:	ldr	r2, [r4, #16]
   13984:	cmp	r3, r2
   13988:	bhi	13b90 <__assert_fail@plt+0x28f8>
   1398c:	ldr	r3, [r4, #20]
   13990:	bic	r3, r3, r3, asr #31
   13994:	ldr	r2, [r4, #4]
   13998:	cmp	r2, r3
   1399c:	bcc	13b9c <__assert_fail@plt+0x2904>
   139a0:	cmp	r5, r6
   139a4:	moveq	r5, #1
   139a8:	bne	13bdc <__assert_fail@plt+0x2944>
   139ac:	cmp	r6, #0
   139b0:	cmpne	r7, #0
   139b4:	beq	139cc <__assert_fail@plt+0x2734>
   139b8:	ldr	r3, [r8, #20]
   139bc:	cmp	r3, #0
   139c0:	beq	13a50 <__assert_fail@plt+0x27b8>
   139c4:	mov	r0, r6
   139c8:	bl	17140 <argp_parse@@Base+0xcd8>
   139cc:	ldr	r3, [sp, #8]
   139d0:	cmp	r3, #0
   139d4:	beq	13a50 <__assert_fail@plt+0x27b8>
   139d8:	ldr	r3, [r8, #20]
   139dc:	cmp	r3, #0
   139e0:	beq	13a50 <__assert_fail@plt+0x27b8>
   139e4:	ldr	r2, [sp, #16]
   139e8:	mov	r1, #0
   139ec:	mov	r0, #4
   139f0:	movt	r0, #512	; 0x200
   139f4:	blx	r3
   139f8:	subs	r6, r0, #0
   139fc:	beq	13a50 <__assert_fail@plt+0x27b8>
   13a00:	orrs	r3, fp, r5
   13a04:	bne	13bf4 <__assert_fail@plt+0x295c>
   13a08:	mov	r0, r6
   13a0c:	bl	11178 <strlen@plt>
   13a10:	subs	r5, r0, #0
   13a14:	bne	13c34 <__assert_fail@plt+0x299c>
   13a18:	mov	r0, r6
   13a1c:	bl	17140 <argp_parse@@Base+0xcd8>
   13a20:	ldr	r3, [r4, #28]
   13a24:	ldr	r2, [r4, #24]
   13a28:	sub	r3, r3, r2
   13a2c:	ldr	r2, [r4, #16]
   13a30:	cmp	r3, r2
   13a34:	bhi	13c7c <__assert_fail@plt+0x29e4>
   13a38:	ldr	r3, [r4, #20]
   13a3c:	bic	r3, r3, r3, asr #31
   13a40:	ldr	r2, [r4, #4]
   13a44:	cmp	r2, r3
   13a48:	movcs	r5, #1
   13a4c:	bcc	13c88 <__assert_fail@plt+0x29f0>
   13a50:	cmp	r9, #0
   13a54:	beq	13ac0 <__assert_fail@plt+0x2828>
   13a58:	ldr	r0, [r9]
   13a5c:	cmp	r0, #0
   13a60:	beq	13ac0 <__assert_fail@plt+0x2828>
   13a64:	clz	r6, sl
   13a68:	lsr	r6, r6, #5
   13a6c:	cmp	sl, #0
   13a70:	cmpne	r5, #0
   13a74:	bne	13ac0 <__assert_fail@plt+0x2828>
   13a78:	orrs	r3, fp, r5
   13a7c:	str	r4, [sp, #4]
   13a80:	str	sl, [sp]
   13a84:	movne	r3, #1
   13a88:	moveq	r3, #0
   13a8c:	ldr	r2, [sp, #8]
   13a90:	ldr	r1, [sp, #12]
   13a94:	bl	13818 <__assert_fail@plt+0x2580>
   13a98:	orr	r5, r5, r0
   13a9c:	ldr	r0, [r9, #16]
   13aa0:	cmp	r0, #0
   13aa4:	beq	13ac0 <__assert_fail@plt+0x2828>
   13aa8:	add	r9, r9, #16
   13aac:	cmp	r5, #0
   13ab0:	movne	r3, r6
   13ab4:	moveq	r3, #1
   13ab8:	cmp	r3, #0
   13abc:	bne	13a78 <__assert_fail@plt+0x27e0>
   13ac0:	mov	r0, r5
   13ac4:	add	sp, sp, #28
   13ac8:	ldrd	r4, [sp]
   13acc:	ldrd	r6, [sp, #8]
   13ad0:	ldrd	r8, [sp, #16]
   13ad4:	ldrd	sl, [sp, #24]
   13ad8:	add	sp, sp, #32
   13adc:	pop	{pc}		; (ldr pc, [sp], #4)
   13ae0:	mov	r5, r6
   13ae4:	mov	r3, #0
   13ae8:	str	r3, [sp, #16]
   13aec:	b	1390c <__assert_fail@plt+0x2674>
   13af0:	ldr	r2, [r4, #28]
   13af4:	ldr	r3, [r4, #32]
   13af8:	cmp	r2, r3
   13afc:	bcs	13b18 <__assert_fail@plt+0x2880>
   13b00:	ldr	r3, [r4, #28]
   13b04:	add	r2, r3, #1
   13b08:	str	r2, [r4, #28]
   13b0c:	mov	r2, #10
   13b10:	strb	r2, [r3]
   13b14:	b	13914 <__assert_fail@plt+0x267c>
   13b18:	mov	r1, #1
   13b1c:	mov	r0, r4
   13b20:	bl	18358 <argp_parse@@Base+0x1ef0>
   13b24:	cmp	r0, #0
   13b28:	bne	13b00 <__assert_fail@plt+0x2868>
   13b2c:	b	13914 <__assert_fail@plt+0x267c>
   13b30:	mov	r0, r5
   13b34:	bl	11178 <strlen@plt>
   13b38:	subs	r3, r0, #0
   13b3c:	str	r3, [sp, #20]
   13b40:	beq	13974 <__assert_fail@plt+0x26dc>
   13b44:	ldr	r3, [r4, #28]
   13b48:	mov	r1, r0
   13b4c:	add	r3, r3, r0
   13b50:	ldr	r2, [r4, #32]
   13b54:	cmp	r2, r3
   13b58:	bcs	13b6c <__assert_fail@plt+0x28d4>
   13b5c:	mov	r0, r4
   13b60:	bl	18358 <argp_parse@@Base+0x1ef0>
   13b64:	cmp	r0, #0
   13b68:	beq	13974 <__assert_fail@plt+0x26dc>
   13b6c:	ldr	r2, [sp, #20]
   13b70:	mov	r1, r5
   13b74:	ldr	r0, [r4, #28]
   13b78:	bl	11058 <memcpy@plt>
   13b7c:	ldr	r3, [r4, #28]
   13b80:	ldr	r2, [sp, #20]
   13b84:	add	r3, r3, r2
   13b88:	str	r3, [r4, #28]
   13b8c:	b	13974 <__assert_fail@plt+0x26dc>
   13b90:	mov	r0, r4
   13b94:	bl	17de0 <argp_parse@@Base+0x1978>
   13b98:	b	1398c <__assert_fail@plt+0x26f4>
   13b9c:	ldr	r2, [r4, #28]
   13ba0:	ldr	r3, [r4, #32]
   13ba4:	cmp	r2, r3
   13ba8:	bcs	13bc4 <__assert_fail@plt+0x292c>
   13bac:	ldr	r3, [r4, #28]
   13bb0:	add	r2, r3, #1
   13bb4:	str	r2, [r4, #28]
   13bb8:	mov	r2, #10
   13bbc:	strb	r2, [r3]
   13bc0:	b	139a0 <__assert_fail@plt+0x2708>
   13bc4:	mov	r1, #1
   13bc8:	mov	r0, r4
   13bcc:	bl	18358 <argp_parse@@Base+0x1ef0>
   13bd0:	cmp	r0, #0
   13bd4:	bne	13bac <__assert_fail@plt+0x2914>
   13bd8:	b	139a0 <__assert_fail@plt+0x2708>
   13bdc:	mov	r0, r5
   13be0:	bl	17140 <argp_parse@@Base+0xcd8>
   13be4:	mov	r5, #1
   13be8:	b	139ac <__assert_fail@plt+0x2714>
   13bec:	mov	r5, #0
   13bf0:	b	139ac <__assert_fail@plt+0x2714>
   13bf4:	ldr	r2, [r4, #28]
   13bf8:	ldr	r3, [r4, #32]
   13bfc:	cmp	r2, r3
   13c00:	bcs	13c1c <__assert_fail@plt+0x2984>
   13c04:	ldr	r3, [r4, #28]
   13c08:	add	r2, r3, #1
   13c0c:	str	r2, [r4, #28]
   13c10:	mov	r2, #10
   13c14:	strb	r2, [r3]
   13c18:	b	13a08 <__assert_fail@plt+0x2770>
   13c1c:	mov	r1, #1
   13c20:	mov	r0, r4
   13c24:	bl	18358 <argp_parse@@Base+0x1ef0>
   13c28:	cmp	r0, #0
   13c2c:	bne	13c04 <__assert_fail@plt+0x296c>
   13c30:	b	13a08 <__assert_fail@plt+0x2770>
   13c34:	ldr	r3, [r4, #28]
   13c38:	add	r3, r3, r5
   13c3c:	ldr	r2, [r4, #32]
   13c40:	cmp	r2, r3
   13c44:	bcs	13c5c <__assert_fail@plt+0x29c4>
   13c48:	mov	r1, r5
   13c4c:	mov	r0, r4
   13c50:	bl	18358 <argp_parse@@Base+0x1ef0>
   13c54:	cmp	r0, #0
   13c58:	beq	13a18 <__assert_fail@plt+0x2780>
   13c5c:	mov	r2, r5
   13c60:	mov	r1, r6
   13c64:	ldr	r0, [r4, #28]
   13c68:	bl	11058 <memcpy@plt>
   13c6c:	ldr	r3, [r4, #28]
   13c70:	add	r5, r3, r5
   13c74:	str	r5, [r4, #28]
   13c78:	b	13a18 <__assert_fail@plt+0x2780>
   13c7c:	mov	r0, r4
   13c80:	bl	17de0 <argp_parse@@Base+0x1978>
   13c84:	b	13a38 <__assert_fail@plt+0x27a0>
   13c88:	ldr	r2, [r4, #28]
   13c8c:	ldr	r3, [r4, #32]
   13c90:	cmp	r2, r3
   13c94:	bcs	13cb4 <__assert_fail@plt+0x2a1c>
   13c98:	ldr	r3, [r4, #28]
   13c9c:	add	r2, r3, #1
   13ca0:	str	r2, [r4, #28]
   13ca4:	mov	r2, #10
   13ca8:	strb	r2, [r3]
   13cac:	mov	r5, #1
   13cb0:	b	13a50 <__assert_fail@plt+0x27b8>
   13cb4:	mov	r1, #1
   13cb8:	mov	r0, r4
   13cbc:	bl	18358 <argp_parse@@Base+0x1ef0>
   13cc0:	cmp	r0, #0
   13cc4:	bne	13c98 <__assert_fail@plt+0x2a00>
   13cc8:	mov	r5, #1
   13ccc:	b	13a50 <__assert_fail@plt+0x27b8>
   13cd0:	ldr	r3, [r0, #20]
   13cd4:	cmp	r3, #0
   13cd8:	moveq	r5, r6
   13cdc:	beq	13d24 <__assert_fail@plt+0x2a8c>
   13ce0:	ldr	r1, [sp, #12]
   13ce4:	mov	r0, r8
   13ce8:	bl	16fbc <argp_parse@@Base+0xb54>
   13cec:	str	r0, [sp, #16]
   13cf0:	ldr	r3, [r8, #20]
   13cf4:	mov	r7, #0
   13cf8:	mov	r0, #2
   13cfc:	movt	r0, #512	; 0x200
   13d00:	mov	r2, #1
   13d04:	movt	r2, #512	; 0x200
   13d08:	ldr	r1, [sp, #8]
   13d0c:	cmp	r1, r7
   13d10:	moveq	r0, r2
   13d14:	b	138f8 <__assert_fail@plt+0x2660>
   13d18:	mov	r6, r0
   13d1c:	b	1387c <__assert_fail@plt+0x25e4>
   13d20:	mov	r5, r6
   13d24:	cmp	r5, #0
   13d28:	streq	r5, [sp, #16]
   13d2c:	beq	139cc <__assert_fail@plt+0x2734>
   13d30:	mov	r7, #0
   13d34:	str	r7, [sp, #16]
   13d38:	b	1390c <__assert_fail@plt+0x2674>
   13d3c:	ldr	r3, [r8, #20]
   13d40:	cmp	r3, #0
   13d44:	moveq	r5, r6
   13d48:	beq	13d24 <__assert_fail@plt+0x2a8c>
   13d4c:	ldr	r1, [sp, #12]
   13d50:	mov	r0, r8
   13d54:	bl	16fbc <argp_parse@@Base+0xb54>
   13d58:	str	r0, [sp, #16]
   13d5c:	ldr	r3, [r8, #20]
   13d60:	mov	r7, #0
   13d64:	mov	r0, #1
   13d68:	movt	r0, #512	; 0x200
   13d6c:	b	138f8 <__assert_fail@plt+0x2660>
   13d70:	ldr	r3, [r0, #12]
   13d74:	ldr	r2, [r1, #12]
   13d78:	cmp	r3, r2
   13d7c:	beq	13dec <__assert_fail@plt+0x2b54>
   13d80:	strd	r4, [sp, #-16]!
   13d84:	str	r6, [sp, #8]
   13d88:	str	lr, [sp, #12]
   13d8c:	mov	r5, r1
   13d90:	mov	r4, r0
   13d94:	mov	r1, r2
   13d98:	mov	r0, r3
   13d9c:	bl	13d70 <__assert_fail@plt+0x2ad8>
   13da0:	subs	r3, r0, #0
   13da4:	bne	13dd8 <__assert_fail@plt+0x2b40>
   13da8:	ldr	r0, [r4, #8]
   13dac:	ldr	r3, [r5, #8]
   13db0:	mvn	r2, r3
   13db4:	lsr	r2, r2, #31
   13db8:	cmp	r2, r0, lsr #31
   13dbc:	subne	r3, r0, r3
   13dc0:	subeq	r3, r3, r0
   13dc4:	cmp	r3, #0
   13dc8:	bne	13dd8 <__assert_fail@plt+0x2b40>
   13dcc:	ldr	r3, [r5, #4]
   13dd0:	ldr	r0, [r4, #4]
   13dd4:	sub	r3, r3, r0
   13dd8:	mov	r0, r3
   13ddc:	ldrd	r4, [sp]
   13de0:	ldr	r6, [sp, #8]
   13de4:	add	sp, sp, #12
   13de8:	pop	{pc}		; (ldr pc, [sp], #4)
   13dec:	ldr	r2, [r0, #8]
   13df0:	ldr	r3, [r1, #8]
   13df4:	mvn	ip, r3
   13df8:	lsr	ip, ip, #31
   13dfc:	cmp	ip, r2, lsr #31
   13e00:	subne	r3, r2, r3
   13e04:	subeq	r3, r3, r2
   13e08:	cmp	r3, #0
   13e0c:	bne	13e1c <__assert_fail@plt+0x2b84>
   13e10:	ldr	r3, [r1, #4]
   13e14:	ldr	r0, [r0, #4]
   13e18:	sub	r3, r3, r0
   13e1c:	mov	r0, r3
   13e20:	bx	lr
   13e24:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13e28:	strd	r6, [sp, #8]
   13e2c:	str	r8, [sp, #16]
   13e30:	str	lr, [sp, #20]
   13e34:	sub	sp, sp, #8
   13e38:	ldr	lr, [r0, #16]
   13e3c:	cmp	lr, #0
   13e40:	movne	r3, lr
   13e44:	bne	13e54 <__assert_fail@plt+0x2bbc>
   13e48:	ldr	ip, [r0, #12]
   13e4c:	b	13e64 <__assert_fail@plt+0x2bcc>
   13e50:	mov	r3, r2
   13e54:	ldr	r2, [r3, #12]
   13e58:	cmp	r2, #0
   13e5c:	bne	13e50 <__assert_fail@plt+0x2bb8>
   13e60:	ldr	ip, [r3, #8]
   13e64:	ldr	r5, [r1, #16]
   13e68:	cmp	r5, #0
   13e6c:	movne	r3, r5
   13e70:	bne	13e80 <__assert_fail@plt+0x2be8>
   13e74:	ldr	r4, [r1, #12]
   13e78:	b	13e90 <__assert_fail@plt+0x2bf8>
   13e7c:	mov	r3, r2
   13e80:	ldr	r2, [r3, #12]
   13e84:	cmp	r2, #0
   13e88:	bne	13e7c <__assert_fail@plt+0x2be4>
   13e8c:	ldr	r4, [r3, #8]
   13e90:	mvn	r3, r4
   13e94:	lsr	r3, r3, #31
   13e98:	cmp	r3, ip, lsr #31
   13e9c:	subne	r4, ip, r4
   13ea0:	subeq	r4, r4, ip
   13ea4:	cmp	r4, #0
   13ea8:	bne	13fe8 <__assert_fail@plt+0x2d50>
   13eac:	adds	r4, r5, #0
   13eb0:	movne	r4, #1
   13eb4:	cmp	lr, #0
   13eb8:	rsbeq	r4, r4, #0
   13ebc:	rsbne	r4, r4, #1
   13ec0:	cmp	r4, #0
   13ec4:	bne	13fe8 <__assert_fail@plt+0x2d50>
   13ec8:	mov	r7, r1
   13ecc:	mov	r6, r0
   13ed0:	cmp	lr, #0
   13ed4:	beq	13f54 <__assert_fail@plt+0x2cbc>
   13ed8:	ldr	r1, [lr, #20]
   13edc:	ldr	r2, [r5, #20]
   13ee0:	cmp	r1, r2
   13ee4:	ble	13f10 <__assert_fail@plt+0x2c78>
   13ee8:	ldr	lr, [lr, #12]
   13eec:	ldr	r3, [lr, #20]
   13ef0:	cmp	r2, r3
   13ef4:	blt	13ee8 <__assert_fail@plt+0x2c50>
   13ef8:	mov	r1, r5
   13efc:	mov	r0, lr
   13f00:	bl	13d70 <__assert_fail@plt+0x2ad8>
   13f04:	subs	r4, r0, #0
   13f08:	moveq	r4, #1
   13f0c:	b	13fe8 <__assert_fail@plt+0x2d50>
   13f10:	cmp	r1, r2
   13f14:	bge	13f40 <__assert_fail@plt+0x2ca8>
   13f18:	ldr	r5, [r5, #12]
   13f1c:	ldr	r3, [r5, #20]
   13f20:	cmp	r1, r3
   13f24:	blt	13f18 <__assert_fail@plt+0x2c80>
   13f28:	mov	r1, r5
   13f2c:	mov	r0, lr
   13f30:	bl	13d70 <__assert_fail@plt+0x2ad8>
   13f34:	subs	r4, r0, #0
   13f38:	mvneq	r4, #0
   13f3c:	b	13fe8 <__assert_fail@plt+0x2d50>
   13f40:	mov	r1, r5
   13f44:	mov	r0, lr
   13f48:	bl	13d70 <__assert_fail@plt+0x2ad8>
   13f4c:	subs	r4, r0, #0
   13f50:	bne	13fe8 <__assert_fail@plt+0x2d50>
   13f54:	ldr	r3, [r6, #12]
   13f58:	ldr	r4, [r7, #12]
   13f5c:	mvn	r2, r4
   13f60:	lsr	r2, r2, #31
   13f64:	cmp	r2, r3, lsr #31
   13f68:	subne	r4, r3, r4
   13f6c:	subeq	r4, r4, r3
   13f70:	cmp	r4, #0
   13f74:	bne	13fe8 <__assert_fail@plt+0x2d50>
   13f78:	mov	r0, r6
   13f7c:	bl	129e8 <__assert_fail@plt+0x1750>
   13f80:	mov	r5, r0
   13f84:	str	r0, [sp]
   13f88:	mov	r0, r7
   13f8c:	bl	129e8 <__assert_fail@plt+0x1750>
   13f90:	str	r0, [sp, #4]
   13f94:	ldr	r3, [r6]
   13f98:	ldr	r0, [r3, #12]
   13f9c:	ubfx	r0, r0, #3, #1
   13fa0:	cmp	r5, #0
   13fa4:	moveq	r0, #0
   13fa8:	cmp	r0, #0
   13fac:	bne	14004 <__assert_fail@plt+0x2d6c>
   13fb0:	ldr	r3, [r7]
   13fb4:	ldr	r3, [r3, #12]
   13fb8:	tst	r3, #8
   13fbc:	beq	1403c <__assert_fail@plt+0x2da4>
   13fc0:	ldr	r3, [sp, #4]
   13fc4:	cmp	r3, #0
   13fc8:	beq	1403c <__assert_fail@plt+0x2da4>
   13fcc:	add	r0, sp, #4
   13fd0:	bl	12a84 <__assert_fail@plt+0x17ec>
   13fd4:	adds	r3, r0, #0
   13fd8:	movne	r3, #1
   13fdc:	mov	r0, r4
   13fe0:	subs	r4, r0, r3
   13fe4:	beq	1403c <__assert_fail@plt+0x2da4>
   13fe8:	mov	r0, r4
   13fec:	add	sp, sp, #8
   13ff0:	ldrd	r4, [sp]
   13ff4:	ldrd	r6, [sp, #8]
   13ff8:	ldr	r8, [sp, #16]
   13ffc:	add	sp, sp, #20
   14000:	pop	{pc}		; (ldr pc, [sp], #4)
   14004:	mov	r0, sp
   14008:	bl	12a84 <__assert_fail@plt+0x17ec>
   1400c:	adds	r0, r0, #0
   14010:	movne	r0, #1
   14014:	ldr	r3, [r7]
   14018:	ldr	r3, [r3, #12]
   1401c:	ands	r3, r3, #8
   14020:	beq	13fe0 <__assert_fail@plt+0x2d48>
   14024:	ldr	r3, [sp, #4]
   14028:	cmp	r3, #0
   1402c:	moveq	r3, r4
   14030:	beq	13fe0 <__assert_fail@plt+0x2d48>
   14034:	mov	r4, r0
   14038:	b	13fcc <__assert_fail@plt+0x2d34>
   1403c:	ldr	r2, [r6, #20]
   14040:	movw	r4, #12428	; 0x308c
   14044:	movt	r4, #1
   14048:	mov	r3, #0
   1404c:	ldr	r2, [r2, #24]
   14050:	mov	r1, r4
   14054:	mov	r0, r6
   14058:	bl	12cf4 <__assert_fail@plt+0x1a5c>
   1405c:	mov	r5, r0
   14060:	uxtb	r8, r0
   14064:	ldr	r2, [r7, #20]
   14068:	mov	r3, #0
   1406c:	ldr	r2, [r2, #24]
   14070:	mov	r1, r4
   14074:	mov	r0, r7
   14078:	bl	12cf4 <__assert_fail@plt+0x1a5c>
   1407c:	uxtb	r7, r0
   14080:	cmp	r8, #0
   14084:	movne	r5, r8
   14088:	bne	1409c <__assert_fail@plt+0x2e04>
   1408c:	ldr	r3, [sp]
   14090:	cmp	r3, #0
   14094:	ldrbne	r5, [r3]
   14098:	moveq	r5, #0
   1409c:	cmp	r7, #0
   140a0:	uxtbne	r6, r0
   140a4:	bne	140b8 <__assert_fail@plt+0x2e20>
   140a8:	ldr	r3, [sp, #4]
   140ac:	cmp	r3, #0
   140b0:	ldrbne	r6, [r3]
   140b4:	moveq	r6, #0
   140b8:	bl	11130 <__ctype_tolower_loc@plt>
   140bc:	ldr	r3, [r0]
   140c0:	ldr	r4, [r3, r5, lsl #2]
   140c4:	ldr	r3, [r3, r6, lsl #2]
   140c8:	subs	r4, r4, r3
   140cc:	bne	13fe8 <__assert_fail@plt+0x2d50>
   140d0:	subs	r4, r6, r5
   140d4:	bne	13fe8 <__assert_fail@plt+0x2d50>
   140d8:	adds	r4, r7, #0
   140dc:	movne	r4, #1
   140e0:	cmp	r8, #0
   140e4:	rsbeq	r4, r4, #0
   140e8:	rsbne	r4, r4, #1
   140ec:	cmp	r4, #0
   140f0:	bne	13fe8 <__assert_fail@plt+0x2d50>
   140f4:	cmp	r8, #0
   140f8:	bne	13fe8 <__assert_fail@plt+0x2d50>
   140fc:	ldr	r0, [sp]
   14100:	ldr	r1, [sp, #4]
   14104:	adds	r4, r1, #0
   14108:	movne	r4, #1
   1410c:	cmp	r0, #0
   14110:	rsbeq	r4, r4, #0
   14114:	rsbne	r4, r4, #1
   14118:	cmp	r4, #0
   1411c:	bne	13fe8 <__assert_fail@plt+0x2d50>
   14120:	cmp	r0, #0
   14124:	beq	13fe8 <__assert_fail@plt+0x2d50>
   14128:	bl	110b8 <strcasecmp@plt>
   1412c:	mov	r4, r0
   14130:	b	13fe8 <__assert_fail@plt+0x2d50>
   14134:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14138:	strd	r6, [sp, #8]
   1413c:	strd	r8, [sp, #16]
   14140:	strd	sl, [sp, #24]
   14144:	str	lr, [sp, #32]
   14148:	sub	sp, sp, #52	; 0x34
   1414c:	str	r0, [sp, #12]
   14150:	str	r1, [sp, #4]
   14154:	ldr	fp, [r0, #16]
   14158:	ldr	r4, [r0]
   1415c:	mov	r0, #16
   14160:	bl	17cb0 <argp_parse@@Base+0x1848>
   14164:	subs	sl, r0, #0
   14168:	beq	14198 <__assert_fail@plt+0x2f00>
   1416c:	mov	r3, #0
   14170:	str	r3, [sl, #4]
   14174:	str	r3, [sl, #12]
   14178:	cmp	r4, r3
   1417c:	beq	143a4 <__assert_fail@plt+0x310c>
   14180:	ldr	r3, [r4, #12]
   14184:	tst	r3, #4
   14188:	bne	141b8 <__assert_fail@plt+0x2f20>
   1418c:	add	r5, r4, #24
   14190:	mov	r6, #0
   14194:	b	141dc <__assert_fail@plt+0x2f44>
   14198:	movw	r3, #38788	; 0x9784
   1419c:	movt	r3, #1
   141a0:	movw	r2, #450	; 0x1c2
   141a4:	movw	r1, #39028	; 0x9874
   141a8:	movt	r1, #1
   141ac:	movw	r0, #39040	; 0x9880
   141b0:	movt	r0, #1
   141b4:	bl	11298 <__assert_fail@plt>
   141b8:	movw	r3, #38788	; 0x9784
   141bc:	movt	r3, #1
   141c0:	mov	r2, #460	; 0x1cc
   141c4:	movw	r1, #39028	; 0x9874
   141c8:	movt	r1, #1
   141cc:	movw	r0, #39044	; 0x9884
   141d0:	movt	r0, #1
   141d4:	bl	11298 <__assert_fail@plt>
   141d8:	add	r5, r5, #24
   141dc:	mov	r3, r5
   141e0:	ldr	r2, [r5, #-20]	; 0xffffffec
   141e4:	cmp	r2, #0
   141e8:	bne	141f8 <__assert_fail@plt+0x2f60>
   141ec:	ldr	r2, [r5, #-24]	; 0xffffffe8
   141f0:	cmp	r2, #0
   141f4:	beq	14248 <__assert_fail@plt+0x2fb0>
   141f8:	ldr	r2, [r3, #-12]
   141fc:	tst	r2, #4
   14200:	bne	14210 <__assert_fail@plt+0x2f78>
   14204:	ldr	r2, [sl, #4]
   14208:	add	r2, r2, #1
   1420c:	str	r2, [sl, #4]
   14210:	ldr	r2, [r3, #-12]
   14214:	tst	r2, #8
   14218:	bne	141d8 <__assert_fail@plt+0x2f40>
   1421c:	ldr	r7, [r3, #-20]	; 0xffffffec
   14220:	sub	r3, r7, #1
   14224:	cmp	r3, #254	; 0xfe
   14228:	bhi	141d8 <__assert_fail@plt+0x2f40>
   1422c:	bl	11154 <__ctype_b_loc@plt>
   14230:	ldr	r3, [r0]
   14234:	lsl	r7, r7, #1
   14238:	ldrh	r3, [r3, r7]
   1423c:	tst	r3, #16384	; 0x4000
   14240:	addne	r6, r6, #1
   14244:	b	141d8 <__assert_fail@plt+0x2f40>
   14248:	ldr	r2, [r5, #-8]
   1424c:	cmp	r2, #0
   14250:	bne	141f8 <__assert_fail@plt+0x2f60>
   14254:	ldr	r9, [r5, #-4]
   14258:	cmp	r9, #0
   1425c:	bne	141f8 <__assert_fail@plt+0x2f60>
   14260:	ldr	r0, [sl, #4]
   14264:	rsb	r0, r0, r0, lsl #3
   14268:	lsl	r0, r0, #2
   1426c:	bl	17cb0 <argp_parse@@Base+0x1848>
   14270:	str	r0, [sl]
   14274:	add	r0, r6, #1
   14278:	bl	17cb0 <argp_parse@@Base+0x1848>
   1427c:	mov	r5, r0
   14280:	str	r0, [sl, #8]
   14284:	ldr	r7, [sl]
   14288:	cmp	r0, #0
   1428c:	cmpne	r7, #0
   14290:	beq	142b8 <__assert_fail@plt+0x3020>
   14294:	movw	r3, #37449	; 0x9249
   14298:	movt	r3, #2340	; 0x924
   1429c:	ldr	r2, [sl, #4]
   142a0:	cmp	r2, r3
   142a4:	bhi	142d8 <__assert_fail@plt+0x3040>
   142a8:	add	r7, r7, #28
   142ac:	str	fp, [sp, #8]
   142b0:	ldr	fp, [sp, #12]
   142b4:	b	14324 <__assert_fail@plt+0x308c>
   142b8:	movw	r3, #38788	; 0x9784
   142bc:	movt	r3, #1
   142c0:	movw	r2, #474	; 0x1da
   142c4:	movw	r1, #39028	; 0x9874
   142c8:	movt	r1, #1
   142cc:	movw	r0, #39060	; 0x9894
   142d0:	movt	r0, #1
   142d4:	bl	11298 <__assert_fail@plt>
   142d8:	movw	r3, #38788	; 0x9784
   142dc:	movt	r3, #1
   142e0:	mov	r2, #476	; 0x1dc
   142e4:	movw	r1, #39028	; 0x9874
   142e8:	movt	r1, #1
   142ec:	movw	r0, #39096	; 0x98b8
   142f0:	movt	r0, #1
   142f4:	bl	11298 <__assert_fail@plt>
   142f8:	ldr	r3, [r4, #4]
   142fc:	cmp	r3, #0
   14300:	addeq	r9, r9, #1
   14304:	b	1436c <__assert_fail@plt+0x30d4>
   14308:	ldr	r3, [r4, #16]
   1430c:	cmp	r3, #0
   14310:	bne	14744 <__assert_fail@plt+0x34ac>
   14314:	ldr	r3, [r4, #20]
   14318:	cmp	r3, #0
   1431c:	bne	14744 <__assert_fail@plt+0x34ac>
   14320:	add	r7, r7, #28
   14324:	ldr	r3, [r4, #4]
   14328:	cmp	r3, #0
   1432c:	bne	1433c <__assert_fail@plt+0x30a4>
   14330:	ldr	r3, [r4]
   14334:	cmp	r3, #0
   14338:	beq	14380 <__assert_fail@plt+0x30e8>
   1433c:	mov	r8, r7
   14340:	str	r4, [r7, #-28]	; 0xffffffe4
   14344:	mov	r3, #0
   14348:	str	r3, [r7, #-24]	; 0xffffffe8
   1434c:	str	r5, [r7, #-20]	; 0xffffffec
   14350:	ldr	r3, [r4, #20]
   14354:	cmp	r3, #0
   14358:	movne	r9, r3
   1435c:	bne	1436c <__assert_fail@plt+0x30d4>
   14360:	ldr	r3, [r4]
   14364:	cmp	r3, #0
   14368:	beq	142f8 <__assert_fail@plt+0x3060>
   1436c:	str	r9, [r8, #-16]
   14370:	ldr	r3, [sp, #4]
   14374:	str	r3, [r8, #-12]
   14378:	str	fp, [r8, #-8]
   1437c:	b	14750 <__assert_fail@plt+0x34b8>
   14380:	ldr	r3, [r4, #16]
   14384:	cmp	r3, #0
   14388:	bne	1433c <__assert_fail@plt+0x30a4>
   1438c:	ldr	r3, [r4, #20]
   14390:	cmp	r3, #0
   14394:	bne	1433c <__assert_fail@plt+0x30a4>
   14398:	ldr	fp, [sp, #8]
   1439c:	mov	r3, #0
   143a0:	strb	r3, [r5]
   143a4:	cmp	fp, #0
   143a8:	beq	147c8 <__assert_fail@plt+0x3530>
   143ac:	ldr	r3, [fp]
   143b0:	cmp	r3, #0
   143b4:	beq	147c8 <__assert_fail@plt+0x3530>
   143b8:	movw	r3, #37449	; 0x9249
   143bc:	movt	r3, #2340	; 0x924
   143c0:	str	r3, [sp, #32]
   143c4:	b	14438 <__assert_fail@plt+0x31a0>
   143c8:	ldr	r1, [sp, #4]
   143cc:	b	144b0 <__assert_fail@plt+0x3218>
   143d0:	mov	r3, r2
   143d4:	ldr	r2, [r3, #24]
   143d8:	cmp	r2, #0
   143dc:	bne	143d0 <__assert_fail@plt+0x3138>
   143e0:	add	r3, r3, #24
   143e4:	ldr	r2, [r5, #12]
   143e8:	str	r2, [r3]
   143ec:	mov	r1, #0
   143f0:	str	r1, [r5, #12]
   143f4:	ldr	r3, [r5, #4]
   143f8:	cmp	r3, r1
   143fc:	beq	14424 <__assert_fail@plt+0x318c>
   14400:	ldr	r2, [sl, #4]
   14404:	cmp	r2, r1
   14408:	bne	144d0 <__assert_fail@plt+0x3238>
   1440c:	str	r3, [sl, #4]
   14410:	ldr	r3, [r5]
   14414:	str	r3, [sl]
   14418:	ldr	r3, [r5, #8]
   1441c:	str	r3, [sl, #8]
   14420:	str	r1, [r5, #4]
   14424:	mov	r0, r5
   14428:	bl	12b0c <__assert_fail@plt+0x1874>
   1442c:	ldr	r3, [fp, #16]!
   14430:	cmp	r3, #0
   14434:	beq	147c8 <__assert_fail@plt+0x3530>
   14438:	mov	r5, fp
   1443c:	ldr	r6, [fp, #12]
   14440:	cmp	r6, #0
   14444:	bne	14454 <__assert_fail@plt+0x31bc>
   14448:	ldr	r3, [fp, #8]
   1444c:	cmp	r3, #0
   14450:	beq	143c8 <__assert_fail@plt+0x3130>
   14454:	ldr	r7, [r5, #8]
   14458:	ldr	r8, [sp, #12]
   1445c:	ldr	r4, [r8, #16]
   14460:	mov	r0, #28
   14464:	bl	17cb0 <argp_parse@@Base+0x1848>
   14468:	subs	r1, r0, #0
   1446c:	beq	144b0 <__assert_fail@plt+0x3218>
   14470:	str	r6, [r1, #8]
   14474:	str	r7, [r1]
   14478:	sub	r4, r5, r4
   1447c:	asr	r4, r4, #4
   14480:	str	r4, [r1, #4]
   14484:	ldr	r3, [sp, #4]
   14488:	str	r3, [r1, #12]
   1448c:	str	r8, [r1, #16]
   14490:	cmp	r3, #0
   14494:	ldrne	r3, [r3, #20]
   14498:	addne	r3, r3, #1
   1449c:	moveq	r3, #0
   144a0:	str	r3, [r1, #20]
   144a4:	ldr	r3, [sl, #12]
   144a8:	str	r3, [r1, #24]
   144ac:	str	r1, [sl, #12]
   144b0:	ldr	r0, [r5]
   144b4:	bl	14134 <__assert_fail@plt+0x2e9c>
   144b8:	mov	r5, r0
   144bc:	ldr	r3, [sl, #12]
   144c0:	cmp	r3, #0
   144c4:	bne	143d4 <__assert_fail@plt+0x313c>
   144c8:	add	r3, sl, #12
   144cc:	b	143e4 <__assert_fail@plt+0x314c>
   144d0:	add	r3, r3, r2
   144d4:	str	r3, [sp, #24]
   144d8:	rsb	r0, r3, r3, lsl #3
   144dc:	lsl	r0, r0, #2
   144e0:	bl	17cb0 <argp_parse@@Base+0x1848>
   144e4:	mov	r4, r0
   144e8:	str	r0, [sp, #20]
   144ec:	ldr	r0, [sl, #8]
   144f0:	bl	11178 <strlen@plt>
   144f4:	mov	r7, r0
   144f8:	ldr	r0, [r5, #8]
   144fc:	bl	11178 <strlen@plt>
   14500:	add	r0, r7, r0
   14504:	add	r0, r0, #1
   14508:	bl	17cb0 <argp_parse@@Base+0x1848>
   1450c:	mov	r9, r0
   14510:	cmp	r4, #0
   14514:	cmpne	r0, #0
   14518:	beq	145e4 <__assert_fail@plt+0x334c>
   1451c:	ldr	r3, [sp, #24]
   14520:	ldr	r2, [sp, #32]
   14524:	cmp	r3, r2
   14528:	bhi	14600 <__assert_fail@plt+0x3368>
   1452c:	ldr	r1, [sl]
   14530:	str	r1, [sp, #28]
   14534:	ldr	r4, [sl, #4]
   14538:	rsb	r8, r4, r4, lsl #3
   1453c:	lsl	r8, r8, #2
   14540:	mov	r2, r8
   14544:	ldr	r0, [sp, #20]
   14548:	bl	11148 <mempcpy@plt>
   1454c:	ldr	r3, [r5, #4]
   14550:	str	r3, [sp, #16]
   14554:	rsb	r2, r3, r3, lsl #3
   14558:	lsl	r2, r2, #2
   1455c:	ldr	r1, [r5]
   14560:	bl	11058 <memcpy@plt>
   14564:	ldr	r6, [sl, #8]
   14568:	mov	r2, r7
   1456c:	mov	r1, r6
   14570:	mov	r0, r9
   14574:	bl	11058 <memcpy@plt>
   14578:	cmp	r4, #0
   1457c:	beq	1461c <__assert_fail@plt+0x3384>
   14580:	ldr	r2, [sp, #20]
   14584:	ldr	r3, [r2, #8]
   14588:	sub	r3, r3, r6
   1458c:	add	r3, r9, r3
   14590:	str	r3, [r2, #8]
   14594:	add	r2, r2, #28
   14598:	subs	r4, r4, #1
   1459c:	bne	14584 <__assert_fail@plt+0x32ec>
   145a0:	ldr	r3, [sp, #20]
   145a4:	add	r4, r3, r8
   145a8:	add	r3, r9, r7
   145ac:	str	r3, [sp, #8]
   145b0:	ldr	r1, [r5, #8]
   145b4:	ldr	r8, [sp, #16]
   145b8:	cmp	r8, #0
   145bc:	beq	146c0 <__assert_fail@plt+0x3428>
   145c0:	add	r4, r4, #28
   145c4:	sub	r2, r3, #1
   145c8:	str	r2, [sp, #16]
   145cc:	str	r5, [sp, #36]	; 0x24
   145d0:	str	fp, [sp, #40]	; 0x28
   145d4:	mov	fp, r3
   145d8:	str	sl, [sp, #44]	; 0x2c
   145dc:	mov	sl, r1
   145e0:	b	14668 <__assert_fail@plt+0x33d0>
   145e4:	ldr	r3, [pc, #508]	; 147e8 <__assert_fail@plt+0x3550>
   145e8:	movw	r2, #970	; 0x3ca
   145ec:	movw	r1, #39028	; 0x9874
   145f0:	movt	r1, #1
   145f4:	movw	r0, #39156	; 0x98f4
   145f8:	movt	r0, #1
   145fc:	bl	11298 <__assert_fail@plt>
   14600:	ldr	r3, [pc, #480]	; 147e8 <__assert_fail@plt+0x3550>
   14604:	mov	r2, #972	; 0x3cc
   14608:	movw	r1, #39028	; 0x9874
   1460c:	movt	r1, #1
   14610:	movw	r0, #39184	; 0x9910
   14614:	movt	r0, #1
   14618:	bl	11298 <__assert_fail@plt>
   1461c:	ldr	r4, [sp, #20]
   14620:	b	145a8 <__assert_fail@plt+0x3310>
   14624:	ldr	r2, [sp, #8]
   14628:	cmp	r9, r2
   1462c:	bcs	146c8 <__assert_fail@plt+0x3430>
   14630:	ldrb	r2, [r9]
   14634:	cmp	r2, r3
   14638:	beq	146cc <__assert_fail@plt+0x3434>
   1463c:	mov	r2, r9
   14640:	ldr	r1, [sp, #16]
   14644:	cmp	r1, r2
   14648:	beq	146c8 <__assert_fail@plt+0x3430>
   1464c:	ldrb	r1, [r2, #1]!
   14650:	cmp	r1, r3
   14654:	bne	14640 <__assert_fail@plt+0x33a8>
   14658:	b	146cc <__assert_fail@plt+0x3434>
   1465c:	add	r4, r4, #28
   14660:	subs	r8, r8, #1
   14664:	beq	14680 <__assert_fail@plt+0x33e8>
   14668:	str	fp, [r4, #-20]	; 0xffffffec
   1466c:	ldr	r5, [r4, #-24]	; 0xffffffe8
   14670:	ldr	r6, [r4, #-28]	; 0xffffffe4
   14674:	cmp	r5, #0
   14678:	bne	146ec <__assert_fail@plt+0x3454>
   1467c:	b	1465c <__assert_fail@plt+0x33c4>
   14680:	ldr	r5, [sp, #36]	; 0x24
   14684:	mov	r3, fp
   14688:	ldr	fp, [sp, #40]	; 0x28
   1468c:	ldr	sl, [sp, #44]	; 0x2c
   14690:	mov	r2, #0
   14694:	strb	r2, [r3]
   14698:	ldr	r0, [sp, #28]
   1469c:	bl	17140 <argp_parse@@Base+0xcd8>
   146a0:	ldr	r0, [sl, #8]
   146a4:	bl	17140 <argp_parse@@Base+0xcd8>
   146a8:	ldr	r3, [sp, #20]
   146ac:	str	r3, [sl]
   146b0:	ldr	r3, [sp, #24]
   146b4:	str	r3, [sl, #4]
   146b8:	str	r9, [sl, #8]
   146bc:	b	14424 <__assert_fail@plt+0x318c>
   146c0:	ldr	r3, [sp, #8]
   146c4:	b	14690 <__assert_fail@plt+0x33f8>
   146c8:	strb	r3, [fp], #1
   146cc:	add	sl, sl, #1
   146d0:	b	146e0 <__assert_fail@plt+0x3448>
   146d4:	ldrb	r3, [sl]
   146d8:	cmp	r3, r7
   146dc:	beq	14624 <__assert_fail@plt+0x338c>
   146e0:	add	r6, r6, #24
   146e4:	subs	r5, r5, #1
   146e8:	beq	1465c <__assert_fail@plt+0x33c4>
   146ec:	ldr	r3, [r6, #12]
   146f0:	tst	r3, #8
   146f4:	bne	146e0 <__assert_fail@plt+0x3448>
   146f8:	ldr	r7, [r6, #4]
   146fc:	sub	r3, r7, #1
   14700:	cmp	r3, #254	; 0xfe
   14704:	bhi	146e0 <__assert_fail@plt+0x3448>
   14708:	bl	11154 <__ctype_b_loc@plt>
   1470c:	ldr	r2, [r0]
   14710:	lsl	r3, r7, #1
   14714:	ldrh	r3, [r2, r3]
   14718:	tst	r3, #16384	; 0x4000
   1471c:	bne	146d4 <__assert_fail@plt+0x343c>
   14720:	b	146e0 <__assert_fail@plt+0x3448>
   14724:	strb	r6, [r5], #1
   14728:	add	r4, r4, #24
   1472c:	ldr	r3, [r4, #4]
   14730:	cmp	r3, #0
   14734:	bne	14744 <__assert_fail@plt+0x34ac>
   14738:	ldr	r3, [r4]
   1473c:	cmp	r3, #0
   14740:	beq	14308 <__assert_fail@plt+0x3070>
   14744:	ldr	r3, [r4, #12]
   14748:	tst	r3, #4
   1474c:	beq	14320 <__assert_fail@plt+0x3088>
   14750:	ldr	r3, [r8, #-24]	; 0xffffffe8
   14754:	add	r3, r3, #1
   14758:	str	r3, [r8, #-24]	; 0xffffffe8
   1475c:	ldr	r3, [r4, #12]
   14760:	tst	r3, #8
   14764:	bne	14728 <__assert_fail@plt+0x3490>
   14768:	ldr	r6, [r4, #4]
   1476c:	sub	r3, r6, #1
   14770:	cmp	r3, #254	; 0xfe
   14774:	bhi	14728 <__assert_fail@plt+0x3490>
   14778:	bl	11154 <__ctype_b_loc@plt>
   1477c:	ldr	r2, [r0]
   14780:	lsl	r3, r6, #1
   14784:	ldrh	r3, [r2, r3]
   14788:	tst	r3, #16384	; 0x4000
   1478c:	beq	14728 <__assert_fail@plt+0x3490>
   14790:	uxtb	r6, r6
   14794:	ldr	r3, [sl, #8]
   14798:	cmp	r3, r5
   1479c:	bcs	14724 <__assert_fail@plt+0x348c>
   147a0:	ldrb	r2, [r3]
   147a4:	cmp	r2, r6
   147a8:	beq	14728 <__assert_fail@plt+0x3490>
   147ac:	sub	r2, r5, #1
   147b0:	cmp	r3, r2
   147b4:	beq	14724 <__assert_fail@plt+0x348c>
   147b8:	ldrb	r1, [r3, #1]!
   147bc:	cmp	r1, r6
   147c0:	bne	147b0 <__assert_fail@plt+0x3518>
   147c4:	b	14728 <__assert_fail@plt+0x3490>
   147c8:	mov	r0, sl
   147cc:	add	sp, sp, #52	; 0x34
   147d0:	ldrd	r4, [sp]
   147d4:	ldrd	r6, [sp, #8]
   147d8:	ldrd	r8, [sp, #16]
   147dc:	ldrd	sl, [sp, #24]
   147e0:	add	sp, sp, #32
   147e4:	pop	{pc}		; (ldr pc, [sp], #4)
   147e8:	muleq	r1, r0, r7

000147ec <argp_failure@@Base>:
   147ec:	push	{r3}		; (str r3, [sp, #-4]!)
   147f0:	strd	r4, [sp, #-20]!	; 0xffffffec
   147f4:	strd	r6, [sp, #8]
   147f8:	str	lr, [sp, #16]
   147fc:	sub	sp, sp, #200	; 0xc8
   14800:	mov	r7, r1
   14804:	mov	r6, r2
   14808:	subs	r5, r0, #0
   1480c:	beq	14968 <argp_failure@@Base+0x17c>
   14810:	ldr	r3, [r5, #16]
   14814:	tst	r3, #2
   14818:	bne	1494c <argp_failure@@Base+0x160>
   1481c:	ldr	r4, [r5, #44]	; 0x2c
   14820:	cmp	r4, #0
   14824:	beq	1494c <argp_failure@@Base+0x160>
   14828:	mov	r0, r4
   1482c:	bl	1122c <flockfile@plt>
   14830:	ldr	r0, [r5, #40]	; 0x28
   14834:	mov	r1, r4
   14838:	bl	10fc8 <fputs_unlocked@plt>
   1483c:	ldr	r3, [sp, #220]	; 0xdc
   14840:	cmp	r3, #0
   14844:	beq	148a0 <argp_failure@@Base+0xb4>
   14848:	add	r3, sp, #224	; 0xe0
   1484c:	str	r3, [sp]
   14850:	ldr	r3, [r4, #20]
   14854:	ldr	r2, [r4, #24]
   14858:	cmp	r3, r2
   1485c:	addcc	r2, r3, #1
   14860:	strcc	r2, [r4, #20]
   14864:	movcc	r2, #58	; 0x3a
   14868:	strbcc	r2, [r3]
   1486c:	bcs	14994 <argp_failure@@Base+0x1a8>
   14870:	ldr	r3, [r4, #20]
   14874:	ldr	r2, [r4, #24]
   14878:	cmp	r3, r2
   1487c:	addcc	r2, r3, #1
   14880:	strcc	r2, [r4, #20]
   14884:	movcc	r2, #32
   14888:	strbcc	r2, [r3]
   1488c:	bcs	149a4 <argp_failure@@Base+0x1b8>
   14890:	ldr	r2, [sp]
   14894:	ldr	r1, [sp, #220]	; 0xdc
   14898:	mov	r0, r4
   1489c:	bl	11214 <vfprintf@plt>
   148a0:	cmp	r6, #0
   148a4:	beq	14908 <argp_failure@@Base+0x11c>
   148a8:	ldr	r3, [r4, #20]
   148ac:	ldr	r2, [r4, #24]
   148b0:	cmp	r3, r2
   148b4:	addcc	r2, r3, #1
   148b8:	strcc	r2, [r4, #20]
   148bc:	movcc	r2, #58	; 0x3a
   148c0:	strbcc	r2, [r3]
   148c4:	bcs	149b4 <argp_failure@@Base+0x1c8>
   148c8:	ldr	r3, [r4, #20]
   148cc:	ldr	r2, [r4, #24]
   148d0:	cmp	r3, r2
   148d4:	addcc	r2, r3, #1
   148d8:	strcc	r2, [r4, #20]
   148dc:	movcc	r2, #32
   148e0:	strbcc	r2, [r3]
   148e4:	bcs	149c4 <argp_failure@@Base+0x1d8>
   148e8:	mov	r2, #200	; 0xc8
   148ec:	mov	r1, sp
   148f0:	mov	r0, r6
   148f4:	bl	111a8 <strerror_r@plt>
   148f8:	cmp	r0, #0
   148fc:	beq	149d4 <argp_failure@@Base+0x1e8>
   14900:	mov	r1, r4
   14904:	bl	10fc8 <fputs_unlocked@plt>
   14908:	ldr	r3, [r4, #20]
   1490c:	ldr	r2, [r4, #24]
   14910:	cmp	r3, r2
   14914:	addcc	r2, r3, #1
   14918:	strcc	r2, [r4, #20]
   1491c:	movcc	r2, #10
   14920:	strbcc	r2, [r3]
   14924:	bcs	149f0 <argp_failure@@Base+0x204>
   14928:	mov	r0, r4
   1492c:	bl	110c4 <funlockfile@plt>
   14930:	cmp	r7, #0
   14934:	beq	1494c <argp_failure@@Base+0x160>
   14938:	cmp	r5, #0
   1493c:	beq	14a00 <argp_failure@@Base+0x214>
   14940:	ldr	r3, [r5, #16]
   14944:	tst	r3, #32
   14948:	beq	14a00 <argp_failure@@Base+0x214>
   1494c:	add	sp, sp, #200	; 0xc8
   14950:	ldrd	r4, [sp]
   14954:	ldrd	r6, [sp, #8]
   14958:	ldr	lr, [sp, #16]
   1495c:	add	sp, sp, #20
   14960:	add	sp, sp, #4
   14964:	bx	lr
   14968:	movw	r3, #45720	; 0xb298
   1496c:	movt	r3, #2
   14970:	ldr	r4, [r3]
   14974:	cmp	r4, #0
   14978:	beq	1494c <argp_failure@@Base+0x160>
   1497c:	mov	r0, r4
   14980:	bl	1122c <flockfile@plt>
   14984:	movw	r3, #45712	; 0xb290
   14988:	movt	r3, #2
   1498c:	ldr	r0, [r3]
   14990:	b	14834 <argp_failure@@Base+0x48>
   14994:	mov	r1, #58	; 0x3a
   14998:	mov	r0, r4
   1499c:	bl	111e4 <__overflow@plt>
   149a0:	b	14870 <argp_failure@@Base+0x84>
   149a4:	mov	r1, #32
   149a8:	mov	r0, r4
   149ac:	bl	111e4 <__overflow@plt>
   149b0:	b	14890 <argp_failure@@Base+0xa4>
   149b4:	mov	r1, #58	; 0x3a
   149b8:	mov	r0, r4
   149bc:	bl	111e4 <__overflow@plt>
   149c0:	b	148c8 <argp_failure@@Base+0xdc>
   149c4:	mov	r1, #32
   149c8:	mov	r0, r4
   149cc:	bl	111e4 <__overflow@plt>
   149d0:	b	148e8 <argp_failure@@Base+0xfc>
   149d4:	mov	r0, r6
   149d8:	bl	11124 <strerror@plt>
   149dc:	movw	r3, #39236	; 0x9944
   149e0:	movt	r3, #1
   149e4:	cmp	r0, #0
   149e8:	moveq	r0, r3
   149ec:	b	14900 <argp_failure@@Base+0x114>
   149f0:	mov	r1, #10
   149f4:	mov	r0, r4
   149f8:	bl	111e4 <__overflow@plt>
   149fc:	b	14928 <argp_failure@@Base+0x13c>
   14a00:	mov	r0, r7
   14a04:	bl	1116c <exit@plt>
   14a08:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14a0c:	strd	r6, [sp, #8]
   14a10:	strd	r8, [sp, #16]
   14a14:	strd	sl, [sp, #24]
   14a18:	str	lr, [sp, #32]
   14a1c:	add	fp, sp, #32
   14a20:	sub	sp, sp, #124	; 0x7c
   14a24:	str	r0, [fp, #-108]	; 0xffffff94
   14a28:	str	r1, [fp, #-104]	; 0xffffff98
   14a2c:	str	r3, [fp, #-100]	; 0xffffff9c
   14a30:	subs	r3, r2, #0
   14a34:	str	r3, [fp, #-132]	; 0xffffff7c
   14a38:	beq	15a20 <argp_failure@@Base+0x1234>
   14a3c:	mov	r0, r3
   14a40:	bl	1122c <flockfile@plt>
   14a44:	movw	r3, #45652	; 0xb254
   14a48:	movt	r3, #2
   14a4c:	ldr	r9, [r3, #36]	; 0x24
   14a50:	cmp	r9, #0
   14a54:	beq	14b2c <argp_failure@@Base+0x340>
   14a58:	movw	r2, #45652	; 0xb254
   14a5c:	movt	r2, #2
   14a60:	mov	r3, #0
   14a64:	ldr	r2, [r2, #32]
   14a68:	mov	r1, r3
   14a6c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   14a70:	bl	17d48 <argp_parse@@Base+0x18e0>
   14a74:	subs	sl, r0, #0
   14a78:	beq	14f08 <argp_failure@@Base+0x71c>
   14a7c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14a80:	tst	r3, #11
   14a84:	moveq	r3, #0
   14a88:	streq	r3, [fp, #-128]	; 0xffffff80
   14a8c:	bne	14f14 <argp_failure@@Base+0x728>
   14a90:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14a94:	tst	r3, #3
   14a98:	moveq	r4, #0
   14a9c:	bne	14fa4 <argp_failure@@Base+0x7b8>
   14aa0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14aa4:	tst	r3, #16
   14aa8:	bne	151c8 <argp_failure@@Base+0x9dc>
   14aac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14ab0:	tst	r3, #4
   14ab4:	bne	151f0 <argp_failure@@Base+0xa04>
   14ab8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14abc:	tst	r3, #8
   14ac0:	beq	159ac <argp_failure@@Base+0x11c0>
   14ac4:	ldr	r3, [fp, #-128]	; 0xffffff80
   14ac8:	ldr	r3, [r3, #4]
   14acc:	cmp	r3, #0
   14ad0:	beq	159ac <argp_failure@@Base+0x11c0>
   14ad4:	cmp	r4, #0
   14ad8:	bne	15210 <argp_failure@@Base+0xa24>
   14adc:	mov	r3, #0
   14ae0:	str	r3, [fp, #-88]	; 0xffffffa8
   14ae4:	str	r3, [fp, #-84]	; 0xffffffac
   14ae8:	str	r3, [fp, #-80]	; 0xffffffb0
   14aec:	ldr	r3, [fp, #-128]	; 0xffffff80
   14af0:	ldr	r9, [r3]
   14af4:	ldr	r3, [r3, #4]
   14af8:	str	r3, [fp, #-116]	; 0xffffff8c
   14afc:	cmp	r3, #0
   14b00:	beq	159a8 <argp_failure@@Base+0x11bc>
   14b04:	movw	r3, #45652	; 0xb254
   14b08:	movt	r3, #2
   14b0c:	str	r3, [fp, #-96]	; 0xffffffa0
   14b10:	movw	r3, #39568	; 0x9a90
   14b14:	movt	r3, #1
   14b18:	str	r3, [fp, #-140]	; 0xffffff74
   14b1c:	movw	r3, #38120	; 0x94e8
   14b20:	movt	r3, #1
   14b24:	str	r3, [fp, #-144]	; 0xffffff70
   14b28:	b	15828 <argp_failure@@Base+0x103c>
   14b2c:	movw	r0, #39260	; 0x995c
   14b30:	movt	r0, #1
   14b34:	bl	11100 <getenv@plt>
   14b38:	movw	r1, #45652	; 0xb254
   14b3c:	movt	r1, #2
   14b40:	ldrd	r2, [r1]
   14b44:	strd	r2, [fp, #-76]	; 0xffffffb4
   14b48:	ldrd	r2, [r1, #8]
   14b4c:	strd	r2, [fp, #-68]	; 0xffffffbc
   14b50:	ldrd	r2, [r1, #16]
   14b54:	strd	r2, [fp, #-60]	; 0xffffffc4
   14b58:	ldrd	r2, [r1, #24]
   14b5c:	strd	r2, [fp, #-52]	; 0xffffffcc
   14b60:	ldrd	r2, [r1, #32]
   14b64:	strd	r2, [fp, #-44]	; 0xffffffd4
   14b68:	subs	r6, r0, #0
   14b6c:	beq	14a58 <argp_failure@@Base+0x26c>
   14b70:	movw	sl, #38788	; 0x9784
   14b74:	movt	sl, #1
   14b78:	add	r8, sl, #168	; 0xa8
   14b7c:	b	14dd8 <argp_failure@@Base+0x5ec>
   14b80:	cmp	r0, #45	; 0x2d
   14b84:	cmpne	r0, #95	; 0x5f
   14b88:	moveq	r3, #1
   14b8c:	movne	r3, #0
   14b90:	ubfx	r1, r1, #3, #1
   14b94:	orrs	r3, r3, r1
   14b98:	beq	15b84 <argp_failure@@Base+0x1398>
   14b9c:	mov	r4, r6
   14ba0:	ldrb	r3, [r4, #1]!
   14ba4:	lsl	r1, r3, #1
   14ba8:	ldrh	r1, [r2, r1]
   14bac:	ubfx	r1, r1, #3, #1
   14bb0:	cmp	r3, #95	; 0x5f
   14bb4:	cmpne	r3, #45	; 0x2d
   14bb8:	moveq	r3, #1
   14bbc:	movne	r3, #0
   14bc0:	orrs	r3, r1, r3
   14bc4:	bne	14ba0 <argp_failure@@Base+0x3b4>
   14bc8:	sub	r7, r4, r6
   14bcc:	ldrb	r3, [r4]
   14bd0:	lsl	r1, r3, #1
   14bd4:	ldrh	r1, [r2, r1]
   14bd8:	tst	r1, #8192	; 0x2000
   14bdc:	beq	14bf4 <argp_failure@@Base+0x408>
   14be0:	ldrb	r3, [r4, #1]!
   14be4:	lsl	r1, r3, #1
   14be8:	ldrh	r1, [r2, r1]
   14bec:	tst	r1, #8192	; 0x2000
   14bf0:	bne	14be0 <argp_failure@@Base+0x3f4>
   14bf4:	cmp	r3, #44	; 0x2c
   14bf8:	cmpne	r3, #0
   14bfc:	beq	14c60 <argp_failure@@Base+0x474>
   14c00:	cmp	r3, #61	; 0x3d
   14c04:	beq	14c2c <argp_failure@@Base+0x440>
   14c08:	ldrb	r3, [r4]
   14c0c:	lsl	r3, r3, #1
   14c10:	ldrh	r3, [r2, r3]
   14c14:	tst	r3, #2048	; 0x800
   14c18:	streq	r9, [fp, #-96]	; 0xffffffa0
   14c1c:	streq	r9, [fp, #-112]	; 0xffffff90
   14c20:	bne	14cc4 <argp_failure@@Base+0x4d8>
   14c24:	add	r5, sl, #24
   14c28:	b	14d6c <argp_failure@@Base+0x580>
   14c2c:	add	r1, r4, #1
   14c30:	ldrb	r3, [r4, #1]
   14c34:	lsl	r3, r3, #1
   14c38:	ldrh	r3, [r2, r3]
   14c3c:	tst	r3, #8192	; 0x2000
   14c40:	beq	14cbc <argp_failure@@Base+0x4d0>
   14c44:	ldrb	r3, [r1, #1]!
   14c48:	lsl	r3, r3, #1
   14c4c:	ldrh	r3, [r2, r3]
   14c50:	tst	r3, #8192	; 0x2000
   14c54:	bne	14c44 <argp_failure@@Base+0x458>
   14c58:	mov	r4, r1
   14c5c:	b	14c08 <argp_failure@@Base+0x41c>
   14c60:	cmp	r0, #110	; 0x6e
   14c64:	movne	r3, #1
   14c68:	strne	r3, [fp, #-96]	; 0xffffffa0
   14c6c:	strne	r3, [fp, #-112]	; 0xffffff90
   14c70:	bne	14c24 <argp_failure@@Base+0x438>
   14c74:	ldrb	r3, [r6, #1]
   14c78:	cmp	r3, #111	; 0x6f
   14c7c:	movne	r3, #1
   14c80:	strne	r3, [fp, #-96]	; 0xffffffa0
   14c84:	strne	r3, [fp, #-112]	; 0xffffff90
   14c88:	bne	14c24 <argp_failure@@Base+0x438>
   14c8c:	ldrb	r3, [r6, #2]
   14c90:	cmp	r3, #45	; 0x2d
   14c94:	movne	r3, #1
   14c98:	strne	r3, [fp, #-96]	; 0xffffffa0
   14c9c:	strne	r3, [fp, #-112]	; 0xffffff90
   14ca0:	bne	14c24 <argp_failure@@Base+0x438>
   14ca4:	add	r6, r6, #3
   14ca8:	sub	r7, r7, #3
   14cac:	str	r9, [fp, #-112]	; 0xffffff90
   14cb0:	mov	r3, #1
   14cb4:	str	r3, [fp, #-96]	; 0xffffffa0
   14cb8:	b	14c24 <argp_failure@@Base+0x438>
   14cbc:	mov	r4, r1
   14cc0:	b	14c08 <argp_failure@@Base+0x41c>
   14cc4:	mov	r2, #10
   14cc8:	mov	r1, #0
   14ccc:	mov	r0, r4
   14cd0:	bl	10fe0 <strtol@plt>
   14cd4:	str	r0, [fp, #-112]	; 0xffffff90
   14cd8:	ldr	r2, [r5]
   14cdc:	ldrb	r3, [r4]
   14ce0:	lsl	r3, r3, #1
   14ce4:	ldrh	r3, [r2, r3]
   14ce8:	tst	r3, #2048	; 0x800
   14cec:	beq	14d04 <argp_failure@@Base+0x518>
   14cf0:	ldrb	r3, [r4, #1]!
   14cf4:	lsl	r3, r3, #1
   14cf8:	ldrh	r3, [r2, r3]
   14cfc:	tst	r3, #2048	; 0x800
   14d00:	bne	14cf0 <argp_failure@@Base+0x504>
   14d04:	ldrb	r3, [r4]
   14d08:	lsl	r3, r3, #1
   14d0c:	ldrh	r3, [r2, r3]
   14d10:	tst	r3, #8192	; 0x2000
   14d14:	beq	14d34 <argp_failure@@Base+0x548>
   14d18:	ldrb	r3, [r4, #1]!
   14d1c:	lsl	r3, r3, #1
   14d20:	ldrh	r3, [r2, r3]
   14d24:	tst	r3, #8192	; 0x2000
   14d28:	bne	14d18 <argp_failure@@Base+0x52c>
   14d2c:	str	r9, [fp, #-96]	; 0xffffffa0
   14d30:	b	14c24 <argp_failure@@Base+0x438>
   14d34:	str	r9, [fp, #-96]	; 0xffffffa0
   14d38:	b	14c24 <argp_failure@@Base+0x438>
   14d3c:	str	r6, [sp, #4]
   14d40:	str	r7, [sp]
   14d44:	movw	r3, #39276	; 0x996c
   14d48:	movt	r3, #1
   14d4c:	mov	r2, #0
   14d50:	mov	r1, r2
   14d54:	ldr	r0, [fp, #-104]	; 0xffffff98
   14d58:	bl	147ec <argp_failure@@Base>
   14d5c:	b	14dc0 <argp_failure@@Base+0x5d4>
   14d60:	add	r5, r5, #16
   14d64:	cmp	r5, r8
   14d68:	beq	14ea8 <argp_failure@@Base+0x6bc>
   14d6c:	mov	r0, r5
   14d70:	bl	11178 <strlen@plt>
   14d74:	cmp	r0, r7
   14d78:	bne	14d60 <argp_failure@@Base+0x574>
   14d7c:	mov	r2, r7
   14d80:	mov	r1, r5
   14d84:	mov	r0, r6
   14d88:	bl	11280 <strncmp@plt>
   14d8c:	cmp	r0, #0
   14d90:	bne	14d60 <argp_failure@@Base+0x574>
   14d94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14d98:	cmp	r3, #0
   14d9c:	beq	14dac <argp_failure@@Base+0x5c0>
   14da0:	ldrb	r3, [r5, #14]
   14da4:	cmp	r3, #0
   14da8:	beq	14d3c <argp_failure@@Base+0x550>
   14dac:	ldrb	r3, [r5, #15]
   14db0:	sub	r2, fp, #36	; 0x24
   14db4:	add	r3, r2, r3
   14db8:	ldr	r2, [fp, #-112]	; 0xffffff90
   14dbc:	str	r2, [r3, #-40]	; 0xffffffd8
   14dc0:	cmp	r5, r8
   14dc4:	beq	14ea8 <argp_failure@@Base+0x6bc>
   14dc8:	ldrb	r3, [r4]
   14dcc:	cmp	r3, #44	; 0x2c
   14dd0:	addeq	r6, r4, #1
   14dd4:	movne	r6, r4
   14dd8:	ldrb	r3, [r6]
   14ddc:	cmp	r3, #0
   14de0:	beq	14e38 <argp_failure@@Base+0x64c>
   14de4:	bl	11154 <__ctype_b_loc@plt>
   14de8:	mov	r5, r0
   14dec:	ldr	r2, [r0]
   14df0:	mov	r3, r6
   14df4:	mov	r6, r3
   14df8:	ldrb	r0, [r3], #1
   14dfc:	lsl	r1, r0, #1
   14e00:	ldrh	r1, [r2, r1]
   14e04:	tst	r1, #8192	; 0x2000
   14e08:	bne	14df4 <argp_failure@@Base+0x608>
   14e0c:	tst	r1, #1024	; 0x400
   14e10:	bne	14b80 <argp_failure@@Base+0x394>
   14e14:	cmp	r0, #0
   14e18:	beq	14dd8 <argp_failure@@Base+0x5ec>
   14e1c:	str	r6, [sp]
   14e20:	movw	r3, #39364	; 0x99c4
   14e24:	movt	r3, #1
   14e28:	mov	r2, #0
   14e2c:	mov	r1, r2
   14e30:	ldr	r0, [fp, #-104]	; 0xffffff98
   14e34:	bl	147ec <argp_failure@@Base>
   14e38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e3c:	ldr	r3, [pc, #3488]	; 15be4 <argp_failure@@Base+0x13f8>
   14e40:	add	r1, r3, #144	; 0x90
   14e44:	add	r3, r3, #16
   14e48:	cmp	r3, r1
   14e4c:	beq	14ecc <argp_failure@@Base+0x6e0>
   14e50:	ldrb	r2, [r3, #14]
   14e54:	cmp	r2, #0
   14e58:	bne	14e44 <argp_failure@@Base+0x658>
   14e5c:	ldrb	r2, [r3, #15]
   14e60:	cmp	r2, #32
   14e64:	beq	14e44 <argp_failure@@Base+0x658>
   14e68:	sub	ip, fp, #36	; 0x24
   14e6c:	add	r2, ip, r2
   14e70:	ldr	r2, [r2, #-40]	; 0xffffffd8
   14e74:	cmp	r2, r0
   14e78:	blt	14e44 <argp_failure@@Base+0x658>
   14e7c:	str	r3, [sp, #4]
   14e80:	movw	r3, #39448	; 0x9a18
   14e84:	movt	r3, #1
   14e88:	str	r3, [sp]
   14e8c:	movw	r3, #39396	; 0x99e4
   14e90:	movt	r3, #1
   14e94:	mov	r2, #0
   14e98:	mov	r1, r2
   14e9c:	ldr	r0, [fp, #-104]	; 0xffffff98
   14ea0:	bl	147ec <argp_failure@@Base>
   14ea4:	b	14a58 <argp_failure@@Base+0x26c>
   14ea8:	str	r6, [sp, #4]
   14eac:	str	r7, [sp]
   14eb0:	movw	r3, #39324	; 0x999c
   14eb4:	movt	r3, #1
   14eb8:	mov	r2, #0
   14ebc:	mov	r1, r2
   14ec0:	ldr	r0, [fp, #-104]	; 0xffffff98
   14ec4:	bl	147ec <argp_failure@@Base>
   14ec8:	b	14dc8 <argp_failure@@Base+0x5dc>
   14ecc:	movw	r1, #45652	; 0xb254
   14ed0:	movt	r1, #2
   14ed4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   14ed8:	strd	r2, [r1]
   14edc:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   14ee0:	strd	r2, [r1, #8]
   14ee4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   14ee8:	strd	r2, [r1, #16]
   14eec:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   14ef0:	strd	r2, [r1, #24]
   14ef4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   14ef8:	strd	r2, [r1, #32]
   14efc:	mov	r3, #1
   14f00:	str	r3, [r1, #36]	; 0x24
   14f04:	b	14a58 <argp_failure@@Base+0x26c>
   14f08:	ldr	r0, [fp, #-132]	; 0xffffff7c
   14f0c:	bl	110c4 <funlockfile@plt>
   14f10:	b	15a20 <argp_failure@@Base+0x1234>
   14f14:	mov	r1, #0
   14f18:	ldr	r0, [fp, #-108]	; 0xffffff94
   14f1c:	bl	14134 <__assert_fail@plt+0x2e9c>
   14f20:	str	r0, [fp, #-128]	; 0xffffff80
   14f24:	movw	r1, #39456	; 0x9a20
   14f28:	movt	r1, #1
   14f2c:	bl	12b74 <__assert_fail@plt+0x18dc>
   14f30:	cmp	r0, #0
   14f34:	mvnne	r3, #0
   14f38:	strne	r3, [r0, #12]
   14f3c:	movw	r1, #39464	; 0x9a28
   14f40:	movt	r1, #1
   14f44:	ldr	r0, [fp, #-128]	; 0xffffff80
   14f48:	bl	12b74 <__assert_fail@plt+0x18dc>
   14f4c:	cmp	r0, #0
   14f50:	mvnne	r3, #0
   14f54:	strne	r3, [r0, #12]
   14f58:	ldr	r0, [fp, #-128]	; 0xffffff80
   14f5c:	ldr	r3, [r0, #4]
   14f60:	cmp	r3, #0
   14f64:	beq	14a90 <argp_failure@@Base+0x2a4>
   14f68:	ldr	r2, [r0]
   14f6c:	mov	r3, #0
   14f70:	str	r3, [r2, #24]
   14f74:	add	r3, r3, #1
   14f78:	add	r2, r2, #28
   14f7c:	ldr	r1, [r0, #4]
   14f80:	cmp	r3, r1
   14f84:	bcc	14f70 <argp_failure@@Base+0x784>
   14f88:	movw	r3, #15908	; 0x3e24
   14f8c:	movt	r3, #1
   14f90:	mov	r2, #28
   14f94:	ldr	r0, [fp, #-128]	; 0xffffff80
   14f98:	ldr	r0, [r0]
   14f9c:	bl	11244 <qsort@plt>
   14fa0:	b	14a90 <argp_failure@@Base+0x2a4>
   14fa4:	ldr	r0, [fp, #-108]	; 0xffffff94
   14fa8:	bl	12c28 <__assert_fail@plt+0x1990>
   14fac:	mov	r2, r0
   14fb0:	add	r3, r0, #7
   14fb4:	bic	r3, r3, #7
   14fb8:	sub	sp, sp, r3
   14fbc:	add	r9, sp, #8
   14fc0:	mov	r1, #0
   14fc4:	mov	r0, r9
   14fc8:	bl	111b4 <memset@plt>
   14fcc:	mov	r5, #1
   14fd0:	movw	r4, #45652	; 0xb254
   14fd4:	movt	r4, #2
   14fd8:	movw	r3, #39488	; 0x9a40
   14fdc:	movt	r3, #1
   14fe0:	str	r3, [fp, #-116]	; 0xffffff8c
   14fe4:	movw	r8, #39480	; 0x9a38
   14fe8:	movt	r8, #1
   14fec:	str	r9, [fp, #-96]	; 0xffffffa0
   14ff0:	ldr	r9, [fp, #-128]	; 0xffffff80
   14ff4:	str	r8, [fp, #-112]	; 0xffffff90
   14ff8:	ldr	r8, [fp, #-100]	; 0xffffff9c
   14ffc:	b	150ac <argp_failure@@Base+0x8c0>
   15000:	mov	r0, sl
   15004:	bl	17de0 <argp_parse@@Base+0x1978>
   15008:	b	150c8 <argp_failure@@Base+0x8dc>
   1500c:	mov	r0, sl
   15010:	bl	17de0 <argp_parse@@Base+0x1978>
   15014:	b	15114 <argp_failure@@Base+0x928>
   15018:	mov	r1, sl
   1501c:	mov	r0, r9
   15020:	bl	12dfc <__assert_fail@plt+0x1b64>
   15024:	orr	r8, r8, #2
   15028:	str	sl, [sp]
   1502c:	mov	r3, #1
   15030:	sub	r2, fp, #76	; 0x4c
   15034:	ldr	r1, [fp, #-104]	; 0xffffff98
   15038:	ldr	r0, [fp, #-108]	; 0xffffff94
   1503c:	bl	13268 <__assert_fail@plt+0x1fd0>
   15040:	mov	r6, r0
   15044:	ldr	r3, [sl, #28]
   15048:	ldr	r2, [sl, #24]
   1504c:	sub	r3, r3, r2
   15050:	ldr	r2, [sl, #16]
   15054:	cmp	r3, r2
   15058:	bhi	1518c <argp_failure@@Base+0x9a0>
   1505c:	str	r7, [sl, #12]
   15060:	ldr	r3, [sl, #28]
   15064:	ldr	r2, [sl, #24]
   15068:	sub	r3, r3, r2
   1506c:	ldr	r2, [sl, #16]
   15070:	cmp	r3, r2
   15074:	bhi	15198 <argp_failure@@Base+0x9ac>
   15078:	str	r5, [sl, #4]
   1507c:	ldr	r2, [sl, #28]
   15080:	ldr	r3, [sl, #32]
   15084:	cmp	r2, r3
   15088:	bcs	151a4 <argp_failure@@Base+0x9b8>
   1508c:	ldr	r3, [sl, #28]
   15090:	add	r2, r3, #1
   15094:	str	r2, [sl, #28]
   15098:	mov	r2, #10
   1509c:	strb	r2, [r3]
   150a0:	mov	r5, #0
   150a4:	cmp	r6, r5
   150a8:	beq	151bc <argp_failure@@Base+0x9d0>
   150ac:	ldr	r6, [r4, #28]
   150b0:	ldr	r3, [sl, #28]
   150b4:	ldr	r2, [sl, #24]
   150b8:	sub	r3, r3, r2
   150bc:	ldr	r2, [sl, #16]
   150c0:	cmp	r3, r2
   150c4:	bhi	15000 <argp_failure@@Base+0x814>
   150c8:	ldr	r7, [sl, #12]
   150cc:	str	r6, [sl, #12]
   150d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   150d4:	str	r3, [fp, #-76]	; 0xffffffb4
   150d8:	cmp	r5, #0
   150dc:	ldr	r3, [fp, #4]
   150e0:	movwne	r2, #39472	; 0x9a30
   150e4:	movtne	r2, #1
   150e8:	ldreq	r2, [fp, #-116]	; 0xffffff8c
   150ec:	ldr	r1, [fp, #-112]	; 0xffffff90
   150f0:	mov	r0, sl
   150f4:	bl	18458 <argp_parse@@Base+0x1ff0>
   150f8:	ldr	r6, [r4, #28]
   150fc:	ldr	r3, [sl, #28]
   15100:	ldr	r2, [sl, #24]
   15104:	sub	r3, r3, r2
   15108:	ldr	r2, [sl, #16]
   1510c:	cmp	r3, r2
   15110:	bhi	1500c <argp_failure@@Base+0x820>
   15114:	ldr	r5, [sl, #4]
   15118:	str	r6, [sl, #4]
   1511c:	tst	r8, #2
   15120:	beq	15018 <argp_failure@@Base+0x82c>
   15124:	ldr	r3, [r9, #4]
   15128:	cmp	r3, #0
   1512c:	beq	15028 <argp_failure@@Base+0x83c>
   15130:	ldr	r3, [sl, #28]
   15134:	add	r3, r3, #12
   15138:	ldr	r2, [sl, #32]
   1513c:	cmp	r2, r3
   15140:	bcs	15158 <argp_failure@@Base+0x96c>
   15144:	mov	r1, #12
   15148:	mov	r0, sl
   1514c:	bl	18358 <argp_parse@@Base+0x1ef0>
   15150:	cmp	r0, #0
   15154:	beq	15028 <argp_failure@@Base+0x83c>
   15158:	ldr	r2, [sl, #28]
   1515c:	movw	r3, #39496	; 0x9a48
   15160:	movt	r3, #1
   15164:	ldr	r0, [r3]
   15168:	ldr	r1, [r3, #4]
   1516c:	str	r0, [r2]
   15170:	str	r1, [r2, #4]
   15174:	ldr	r3, [r3, #8]
   15178:	str	r3, [r2, #8]
   1517c:	ldr	r3, [sl, #28]
   15180:	add	r3, r3, #12
   15184:	str	r3, [sl, #28]
   15188:	b	15028 <argp_failure@@Base+0x83c>
   1518c:	mov	r0, sl
   15190:	bl	17de0 <argp_parse@@Base+0x1978>
   15194:	b	1505c <argp_failure@@Base+0x870>
   15198:	mov	r0, sl
   1519c:	bl	17de0 <argp_parse@@Base+0x1978>
   151a0:	b	15078 <argp_failure@@Base+0x88c>
   151a4:	mov	r1, #1
   151a8:	mov	r0, sl
   151ac:	bl	18358 <argp_parse@@Base+0x1ef0>
   151b0:	cmp	r0, #0
   151b4:	bne	1508c <argp_failure@@Base+0x8a0>
   151b8:	b	150a0 <argp_failure@@Base+0x8b4>
   151bc:	str	r8, [fp, #-100]	; 0xffffff9c
   151c0:	mov	r4, #1
   151c4:	b	14aa0 <argp_failure@@Base+0x2b4>
   151c8:	str	sl, [sp, #4]
   151cc:	mov	r3, #1
   151d0:	str	r3, [sp]
   151d4:	mov	r3, #0
   151d8:	mov	r2, r3
   151dc:	ldr	r1, [fp, #-104]	; 0xffffff98
   151e0:	ldr	r0, [fp, #-108]	; 0xffffff94
   151e4:	bl	13818 <__assert_fail@plt+0x2580>
   151e8:	orr	r4, r4, r0
   151ec:	b	14aac <argp_failure@@Base+0x2c0>
   151f0:	ldr	r3, [fp, #4]
   151f4:	mov	r2, r3
   151f8:	movw	r1, #39512	; 0x9a58
   151fc:	movt	r1, #1
   15200:	mov	r0, sl
   15204:	bl	18458 <argp_parse@@Base+0x1ff0>
   15208:	mov	r4, #1
   1520c:	b	14ab8 <argp_failure@@Base+0x2cc>
   15210:	ldr	r2, [sl, #28]
   15214:	ldr	r3, [sl, #32]
   15218:	cmp	r2, r3
   1521c:	bcs	15238 <argp_failure@@Base+0xa4c>
   15220:	ldr	r3, [sl, #28]
   15224:	add	r2, r3, #1
   15228:	str	r2, [sl, #28]
   1522c:	mov	r2, #10
   15230:	strb	r2, [r3]
   15234:	b	14adc <argp_failure@@Base+0x2f0>
   15238:	mov	r1, #1
   1523c:	mov	r0, sl
   15240:	bl	18358 <argp_parse@@Base+0x1ef0>
   15244:	cmp	r0, #0
   15248:	bne	15220 <argp_failure@@Base+0xa34>
   1524c:	b	14adc <argp_failure@@Base+0x2f0>
   15250:	mov	r0, sl
   15254:	bl	17de0 <argp_parse@@Base+0x1978>
   15258:	b	15848 <argp_failure@@Base+0x105c>
   1525c:	add	r3, r3, #24
   15260:	subs	r2, r2, #1
   15264:	beq	15288 <argp_failure@@Base+0xa9c>
   15268:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1526c:	cmp	r1, #0
   15270:	beq	1525c <argp_failure@@Base+0xa70>
   15274:	ldr	r1, [r3, #-12]
   15278:	tst	r1, #2
   1527c:	bne	1525c <argp_failure@@Base+0xa70>
   15280:	mov	r3, #1
   15284:	str	r3, [fp, #-112]	; 0xffffff90
   15288:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1528c:	ldr	r5, [r3, #8]
   15290:	ldr	r3, [sl, #28]
   15294:	ldr	r2, [sl, #24]
   15298:	sub	r3, r3, r2
   1529c:	ldr	r2, [sl, #16]
   152a0:	cmp	r3, r2
   152a4:	bhi	152c4 <argp_failure@@Base+0xad8>
   152a8:	str	r5, [sl, #12]
   152ac:	ldr	r6, [r9, #4]
   152b0:	cmp	r6, #0
   152b4:	beq	153c4 <argp_failure@@Base+0xbd8>
   152b8:	mov	r5, r4
   152bc:	str	r9, [fp, #-136]	; 0xffffff78
   152c0:	b	15bac <argp_failure@@Base+0x13c0>
   152c4:	mov	r0, sl
   152c8:	bl	17de0 <argp_parse@@Base+0x1978>
   152cc:	b	152a8 <argp_failure@@Base+0xabc>
   152d0:	tst	r9, #2
   152d4:	beq	152e0 <argp_failure@@Base+0xaf4>
   152d8:	add	r8, r8, #1
   152dc:	b	15ba0 <argp_failure@@Base+0x13b4>
   152e0:	sub	r1, fp, #76	; 0x4c
   152e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   152e8:	ldr	r0, [r3, #8]
   152ec:	bl	13674 <__assert_fail@plt+0x23dc>
   152f0:	ldr	r2, [sl, #28]
   152f4:	ldr	r3, [sl, #32]
   152f8:	cmp	r2, r3
   152fc:	bcs	1537c <argp_failure@@Base+0xb90>
   15300:	ldr	r3, [sl, #28]
   15304:	add	r2, r3, #1
   15308:	str	r2, [sl, #28]
   1530c:	mov	r2, #45	; 0x2d
   15310:	strb	r2, [r3]
   15314:	ldrb	r7, [r8]
   15318:	ldr	r2, [sl, #28]
   1531c:	ldr	r3, [sl, #32]
   15320:	cmp	r2, r3
   15324:	bcs	15394 <argp_failure@@Base+0xba8>
   15328:	ldr	r3, [sl, #28]
   1532c:	add	r2, r3, #1
   15330:	str	r2, [sl, #28]
   15334:	strb	r7, [r3]
   15338:	ldr	r3, [fp, #-112]	; 0xffffff90
   1533c:	cmp	r3, #0
   15340:	beq	15354 <argp_failure@@Base+0xb68>
   15344:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15348:	ldr	r3, [r3]
   1534c:	cmp	r3, #0
   15350:	beq	153ac <argp_failure@@Base+0xbc0>
   15354:	ldr	r2, [r4, #8]
   15358:	cmp	r2, #0
   1535c:	beq	152d8 <argp_failure@@Base+0xaec>
   15360:	ldr	r3, [r4, #12]
   15364:	tst	r3, #1
   15368:	ldrne	r1, [fp, #-140]	; 0xffffff74
   1536c:	ldreq	r1, [fp, #-144]	; 0xffffff70
   15370:	mov	r0, sl
   15374:	bl	18458 <argp_parse@@Base+0x1ff0>
   15378:	b	152d8 <argp_failure@@Base+0xaec>
   1537c:	mov	r1, #1
   15380:	mov	r0, sl
   15384:	bl	18358 <argp_parse@@Base+0x1ef0>
   15388:	cmp	r0, #0
   1538c:	bne	15300 <argp_failure@@Base+0xb14>
   15390:	b	15314 <argp_failure@@Base+0xb28>
   15394:	mov	r1, #1
   15398:	mov	r0, sl
   1539c:	bl	18358 <argp_parse@@Base+0x1ef0>
   153a0:	cmp	r0, #0
   153a4:	bne	15328 <argp_failure@@Base+0xb3c>
   153a8:	b	15338 <argp_failure@@Base+0xb4c>
   153ac:	ldr	r3, [r4, #8]
   153b0:	cmp	r3, #0
   153b4:	movne	r3, #1
   153b8:	strne	r3, [fp, #-80]	; 0xffffffb0
   153bc:	b	152d8 <argp_failure@@Base+0xaec>
   153c0:	ldr	r9, [fp, #-136]	; 0xffffff78
   153c4:	ldr	r3, [r4, #12]
   153c8:	tst	r3, #8
   153cc:	beq	154a4 <argp_failure@@Base+0xcb8>
   153d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   153d4:	ldr	r5, [r3, #16]
   153d8:	ldr	r3, [sl, #28]
   153dc:	ldr	r2, [sl, #24]
   153e0:	sub	r3, r3, r2
   153e4:	ldr	r2, [sl, #16]
   153e8:	cmp	r3, r2
   153ec:	bhi	15408 <argp_failure@@Base+0xc1c>
   153f0:	str	r5, [sl, #12]
   153f4:	ldr	r6, [r9, #4]
   153f8:	cmp	r6, #0
   153fc:	beq	1556c <argp_failure@@Base+0xd80>
   15400:	add	r5, r4, #24
   15404:	b	1543c <argp_failure@@Base+0xc50>
   15408:	mov	r0, sl
   1540c:	bl	17de0 <argp_parse@@Base+0x1978>
   15410:	b	153f0 <argp_failure@@Base+0xc04>
   15414:	mov	r2, r8
   15418:	mov	r1, r7
   1541c:	ldr	r0, [sl, #28]
   15420:	bl	11058 <memcpy@plt>
   15424:	ldr	r3, [sl, #28]
   15428:	add	r8, r3, r8
   1542c:	str	r8, [sl, #28]
   15430:	add	r5, r5, #24
   15434:	subs	r6, r6, #1
   15438:	beq	1556c <argp_failure@@Base+0xd80>
   1543c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   15440:	cmp	r3, #0
   15444:	beq	15430 <argp_failure@@Base+0xc44>
   15448:	ldr	r3, [r5, #-12]
   1544c:	tst	r3, #2
   15450:	bne	15430 <argp_failure@@Base+0xc44>
   15454:	sub	r1, fp, #76	; 0x4c
   15458:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1545c:	ldr	r0, [r3, #16]
   15460:	bl	13674 <__assert_fail@plt+0x23dc>
   15464:	ldr	r7, [r5, #-24]	; 0xffffffe8
   15468:	mov	r0, r7
   1546c:	bl	11178 <strlen@plt>
   15470:	subs	r8, r0, #0
   15474:	beq	15430 <argp_failure@@Base+0xc44>
   15478:	ldr	r3, [sl, #28]
   1547c:	add	r3, r3, r8
   15480:	ldr	r2, [sl, #32]
   15484:	cmp	r2, r3
   15488:	bcs	15414 <argp_failure@@Base+0xc28>
   1548c:	mov	r1, r8
   15490:	mov	r0, sl
   15494:	bl	18358 <argp_parse@@Base+0x1ef0>
   15498:	cmp	r0, #0
   1549c:	beq	15430 <argp_failure@@Base+0xc44>
   154a0:	b	15414 <argp_failure@@Base+0xc28>
   154a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   154a8:	ldr	r5, [r3, #12]
   154ac:	ldr	r3, [sl, #28]
   154b0:	ldr	r2, [sl, #24]
   154b4:	sub	r3, r3, r2
   154b8:	ldr	r2, [sl, #16]
   154bc:	cmp	r3, r2
   154c0:	bhi	154f0 <argp_failure@@Base+0xd04>
   154c4:	str	r5, [sl, #12]
   154c8:	ldr	r6, [r9, #4]
   154cc:	cmp	r6, #0
   154d0:	beq	1556c <argp_failure@@Base+0xd80>
   154d4:	add	r5, r4, #24
   154d8:	movw	r8, #39576	; 0x9a98
   154dc:	movt	r8, #1
   154e0:	movw	r7, #39592	; 0x9aa8
   154e4:	movt	r7, #1
   154e8:	str	r7, [fp, #-112]	; 0xffffff90
   154ec:	b	15508 <argp_failure@@Base+0xd1c>
   154f0:	mov	r0, sl
   154f4:	bl	17de0 <argp_parse@@Base+0x1978>
   154f8:	b	154c4 <argp_failure@@Base+0xcd8>
   154fc:	add	r5, r5, #24
   15500:	subs	r6, r6, #1
   15504:	beq	1556c <argp_failure@@Base+0xd80>
   15508:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1550c:	cmp	r3, #0
   15510:	beq	154fc <argp_failure@@Base+0xd10>
   15514:	ldr	r3, [r5, #-12]
   15518:	tst	r3, #2
   1551c:	bne	154fc <argp_failure@@Base+0xd10>
   15520:	sub	r1, fp, #76	; 0x4c
   15524:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15528:	ldr	r0, [r3, #12]
   1552c:	bl	13674 <__assert_fail@plt+0x23dc>
   15530:	ldr	r2, [r5, #-24]	; 0xffffffe8
   15534:	mov	r1, r8
   15538:	mov	r0, sl
   1553c:	bl	18458 <argp_parse@@Base+0x1ff0>
   15540:	ldr	r2, [r4, #8]
   15544:	cmp	r2, #0
   15548:	beq	154fc <argp_failure@@Base+0xd10>
   1554c:	ldr	r3, [r4, #12]
   15550:	tst	r3, #1
   15554:	movwne	r1, #39584	; 0x9aa0
   15558:	movtne	r1, #1
   1555c:	ldreq	r1, [fp, #-112]	; 0xffffff90
   15560:	mov	r0, sl
   15564:	bl	18458 <argp_parse@@Base+0x1ff0>
   15568:	b	154fc <argp_failure@@Base+0xd10>
   1556c:	ldr	r3, [sl, #28]
   15570:	ldr	r2, [sl, #24]
   15574:	sub	r3, r3, r2
   15578:	ldr	r2, [sl, #16]
   1557c:	cmp	r3, r2
   15580:	bhi	155ec <argp_failure@@Base+0xe00>
   15584:	mov	r3, #0
   15588:	str	r3, [sl, #4]
   1558c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15590:	cmp	r3, #0
   15594:	beq	155f8 <argp_failure@@Base+0xe0c>
   15598:	ldr	r3, [r4, #12]
   1559c:	tst	r3, #8
   155a0:	bne	155cc <argp_failure@@Base+0xde0>
   155a4:	ldr	r5, [r4, #4]
   155a8:	sub	r3, r5, #1
   155ac:	cmp	r3, #254	; 0xfe
   155b0:	bhi	155cc <argp_failure@@Base+0xde0>
   155b4:	bl	11154 <__ctype_b_loc@plt>
   155b8:	ldr	r3, [r0]
   155bc:	lsl	r5, r5, #1
   155c0:	ldrh	r3, [r3, r5]
   155c4:	tst	r3, #16384	; 0x4000
   155c8:	bne	157d4 <argp_failure@@Base+0xfe8>
   155cc:	ldr	r3, [r4]
   155d0:	cmp	r3, #0
   155d4:	bne	157d4 <argp_failure@@Base+0xfe8>
   155d8:	sub	r2, fp, #76	; 0x4c
   155dc:	ldr	r1, [r9, #20]
   155e0:	ldr	r0, [r4, #16]
   155e4:	bl	1346c <__assert_fail@plt+0x21d4>
   155e8:	b	157d0 <argp_failure@@Base+0xfe4>
   155ec:	mov	r0, sl
   155f0:	bl	17de0 <argp_parse@@Base+0x1978>
   155f4:	b	15584 <argp_failure@@Base+0xd98>
   155f8:	ldr	r5, [r4, #16]
   155fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   15600:	ldr	r2, [r9, #20]
   15604:	ldr	r1, [r4, #4]
   15608:	mov	r0, r5
   1560c:	bl	12c94 <__assert_fail@plt+0x19fc>
   15610:	subs	r4, r0, #0
   15614:	beq	1578c <argp_failure@@Base+0xfa0>
   15618:	ldrb	r3, [r4]
   1561c:	cmp	r3, #0
   15620:	beq	15784 <argp_failure@@Base+0xf98>
   15624:	ldr	r3, [sl, #28]
   15628:	ldr	r2, [sl, #24]
   1562c:	sub	r3, r3, r2
   15630:	ldr	r2, [sl, #16]
   15634:	cmp	r3, r2
   15638:	bhi	156e4 <argp_failure@@Base+0xef8>
   1563c:	ldr	r6, [sl, #20]
   15640:	bic	r6, r6, r6, asr #31
   15644:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15648:	ldr	r7, [r3, #20]
   1564c:	str	r7, [sl, #4]
   15650:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15654:	ldr	r7, [r3, #20]
   15658:	ldr	r3, [sl, #28]
   1565c:	ldr	r2, [sl, #24]
   15660:	sub	r3, r3, r2
   15664:	ldr	r2, [sl, #16]
   15668:	cmp	r3, r2
   1566c:	bhi	15720 <argp_failure@@Base+0xf34>
   15670:	str	r7, [sl, #12]
   15674:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15678:	ldr	r1, [r3, #20]
   1567c:	add	r3, r1, #3
   15680:	cmp	r6, r3
   15684:	bhi	1572c <argp_failure@@Base+0xf40>
   15688:	cmp	r6, r1
   1568c:	bcc	1576c <argp_failure@@Base+0xf80>
   15690:	ldr	r3, [sl, #28]
   15694:	add	r3, r3, #3
   15698:	ldr	r2, [sl, #32]
   1569c:	cmp	r2, r3
   156a0:	bcs	156b8 <argp_failure@@Base+0xecc>
   156a4:	mov	r1, #3
   156a8:	mov	r0, sl
   156ac:	bl	18358 <argp_parse@@Base+0x1ef0>
   156b0:	cmp	r0, #0
   156b4:	beq	15774 <argp_failure@@Base+0xf88>
   156b8:	ldr	r2, [sl, #28]
   156bc:	movw	r3, #39596	; 0x9aac
   156c0:	movt	r3, #1
   156c4:	ldrh	r1, [r3]
   156c8:	strh	r1, [r2]
   156cc:	ldrb	r3, [r3, #2]
   156d0:	strb	r3, [r2, #2]
   156d4:	ldr	r3, [sl, #28]
   156d8:	add	r3, r3, #3
   156dc:	str	r3, [sl, #28]
   156e0:	b	15774 <argp_failure@@Base+0xf88>
   156e4:	mov	r0, sl
   156e8:	bl	17de0 <argp_parse@@Base+0x1978>
   156ec:	ldr	r6, [sl, #20]
   156f0:	bic	r6, r6, r6, asr #31
   156f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   156f8:	ldr	r7, [r3, #20]
   156fc:	ldr	r3, [sl, #28]
   15700:	ldr	r2, [sl, #24]
   15704:	sub	r3, r3, r2
   15708:	ldr	r2, [sl, #16]
   1570c:	cmp	r3, r2
   15710:	bls	1564c <argp_failure@@Base+0xe60>
   15714:	mov	r0, sl
   15718:	bl	17de0 <argp_parse@@Base+0x1978>
   1571c:	b	1564c <argp_failure@@Base+0xe60>
   15720:	mov	r0, sl
   15724:	bl	17de0 <argp_parse@@Base+0x1978>
   15728:	b	15670 <argp_failure@@Base+0xe84>
   1572c:	ldr	r2, [sl, #28]
   15730:	ldr	r3, [sl, #32]
   15734:	cmp	r2, r3
   15738:	bcs	15754 <argp_failure@@Base+0xf68>
   1573c:	ldr	r3, [sl, #28]
   15740:	add	r2, r3, #1
   15744:	str	r2, [sl, #28]
   15748:	mov	r2, #10
   1574c:	strb	r2, [r3]
   15750:	b	15774 <argp_failure@@Base+0xf88>
   15754:	mov	r1, #1
   15758:	mov	r0, sl
   1575c:	bl	18358 <argp_parse@@Base+0x1ef0>
   15760:	cmp	r0, #0
   15764:	bne	1573c <argp_failure@@Base+0xf50>
   15768:	b	15774 <argp_failure@@Base+0xf88>
   1576c:	mov	r0, sl
   15770:	bl	12fe4 <__assert_fail@plt+0x1d4c>
   15774:	mov	r0, r4
   15778:	bl	11178 <strlen@plt>
   1577c:	subs	r6, r0, #0
   15780:	bne	158ac <argp_failure@@Base+0x10c0>
   15784:	cmp	r5, r4
   15788:	bne	158f4 <argp_failure@@Base+0x1108>
   1578c:	ldr	r3, [sl, #28]
   15790:	ldr	r2, [sl, #24]
   15794:	sub	r3, r3, r2
   15798:	ldr	r2, [sl, #16]
   1579c:	cmp	r3, r2
   157a0:	bhi	15900 <argp_failure@@Base+0x1114>
   157a4:	mov	r3, #0
   157a8:	str	r3, [sl, #4]
   157ac:	ldr	r2, [sl, #28]
   157b0:	ldr	r3, [sl, #32]
   157b4:	cmp	r2, r3
   157b8:	bcs	1590c <argp_failure@@Base+0x1120>
   157bc:	ldr	r3, [sl, #28]
   157c0:	add	r2, r3, #1
   157c4:	str	r2, [sl, #28]
   157c8:	mov	r2, #10
   157cc:	strb	r2, [r3]
   157d0:	str	r9, [fp, #-88]	; 0xffffffa8
   157d4:	ldr	r3, [sl, #28]
   157d8:	ldr	r2, [sl, #24]
   157dc:	sub	r3, r3, r2
   157e0:	ldr	r2, [sl, #16]
   157e4:	cmp	r3, r2
   157e8:	bhi	15924 <argp_failure@@Base+0x1138>
   157ec:	ldr	r3, [fp, #-120]	; 0xffffff88
   157f0:	str	r3, [sl, #4]
   157f4:	ldr	r3, [sl, #28]
   157f8:	ldr	r2, [sl, #24]
   157fc:	sub	r3, r3, r2
   15800:	ldr	r2, [sl, #16]
   15804:	cmp	r3, r2
   15808:	bhi	15930 <argp_failure@@Base+0x1144>
   1580c:	ldr	r3, [fp, #-124]	; 0xffffff84
   15810:	str	r3, [sl, #12]
   15814:	add	r9, r9, #28
   15818:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1581c:	subs	r3, r3, #1
   15820:	str	r3, [fp, #-116]	; 0xffffff8c
   15824:	beq	1593c <argp_failure@@Base+0x1150>
   15828:	ldr	r4, [r9]
   1582c:	ldr	r8, [r9, #8]
   15830:	ldr	r3, [sl, #28]
   15834:	ldr	r2, [sl, #24]
   15838:	sub	r3, r3, r2
   1583c:	ldr	r2, [sl, #16]
   15840:	cmp	r3, r2
   15844:	bhi	15250 <argp_failure@@Base+0xa64>
   15848:	ldr	r3, [sl, #4]
   1584c:	str	r3, [fp, #-120]	; 0xffffff88
   15850:	mov	r3, #0
   15854:	str	r3, [sl, #4]
   15858:	ldr	r3, [sl, #12]
   1585c:	str	r3, [fp, #-124]	; 0xffffff84
   15860:	str	r9, [fp, #-76]	; 0xffffffb4
   15864:	str	sl, [fp, #-72]	; 0xffffffb8
   15868:	sub	r3, fp, #88	; 0x58
   1586c:	str	r3, [fp, #-68]	; 0xffffffbc
   15870:	mov	r3, #1
   15874:	str	r3, [fp, #-64]	; 0xffffffc0
   15878:	ldr	r3, [fp, #-104]	; 0xffffff98
   1587c:	str	r3, [fp, #-60]	; 0xffffffc4
   15880:	ldr	r3, [r4, #12]
   15884:	ands	r3, r3, #8
   15888:	str	r3, [fp, #-112]	; 0xffffff90
   1588c:	movne	r3, #0
   15890:	strne	r3, [fp, #-112]	; 0xffffff90
   15894:	bne	15288 <argp_failure@@Base+0xa9c>
   15898:	ldr	r2, [r9, #4]
   1589c:	cmp	r2, #0
   158a0:	beq	15288 <argp_failure@@Base+0xa9c>
   158a4:	add	r3, r4, #24
   158a8:	b	15268 <argp_failure@@Base+0xa7c>
   158ac:	ldr	r3, [sl, #28]
   158b0:	add	r3, r3, r6
   158b4:	ldr	r2, [sl, #32]
   158b8:	cmp	r2, r3
   158bc:	bcs	158d4 <argp_failure@@Base+0x10e8>
   158c0:	mov	r1, r6
   158c4:	mov	r0, sl
   158c8:	bl	18358 <argp_parse@@Base+0x1ef0>
   158cc:	cmp	r0, #0
   158d0:	beq	15784 <argp_failure@@Base+0xf98>
   158d4:	mov	r2, r6
   158d8:	mov	r1, r4
   158dc:	ldr	r0, [sl, #28]
   158e0:	bl	11058 <memcpy@plt>
   158e4:	ldr	r3, [sl, #28]
   158e8:	add	r6, r3, r6
   158ec:	str	r6, [sl, #28]
   158f0:	b	15784 <argp_failure@@Base+0xf98>
   158f4:	mov	r0, r4
   158f8:	bl	17140 <argp_parse@@Base+0xcd8>
   158fc:	b	1578c <argp_failure@@Base+0xfa0>
   15900:	mov	r0, sl
   15904:	bl	17de0 <argp_parse@@Base+0x1978>
   15908:	b	157a4 <argp_failure@@Base+0xfb8>
   1590c:	mov	r1, #1
   15910:	mov	r0, sl
   15914:	bl	18358 <argp_parse@@Base+0x1ef0>
   15918:	cmp	r0, #0
   1591c:	bne	157bc <argp_failure@@Base+0xfd0>
   15920:	b	157d0 <argp_failure@@Base+0xfe4>
   15924:	mov	r0, sl
   15928:	bl	17de0 <argp_parse@@Base+0x1978>
   1592c:	b	157ec <argp_failure@@Base+0x1000>
   15930:	mov	r0, sl
   15934:	bl	17de0 <argp_parse@@Base+0x1978>
   15938:	b	1580c <argp_failure@@Base+0x1020>
   1593c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15940:	cmp	r3, #0
   15944:	beq	159a8 <argp_failure@@Base+0x11bc>
   15948:	movw	r3, #45652	; 0xb254
   1594c:	movt	r3, #2
   15950:	ldr	r3, [r3, #4]
   15954:	cmp	r3, #0
   15958:	beq	159a8 <argp_failure@@Base+0x11bc>
   1595c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15960:	cmp	r3, #0
   15964:	ldrne	r2, [r3]
   15968:	ldreq	r2, [fp, #-104]	; 0xffffff98
   1596c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15970:	mov	r1, #5
   15974:	movt	r1, #512	; 0x200
   15978:	movw	r0, #39600	; 0x9ab0
   1597c:	movt	r0, #1
   15980:	bl	12c94 <__assert_fail@plt+0x19fc>
   15984:	subs	r4, r0, #0
   15988:	beq	159a8 <argp_failure@@Base+0x11bc>
   1598c:	ldrb	r3, [r4]
   15990:	cmp	r3, #0
   15994:	bne	15a3c <argp_failure@@Base+0x1250>
   15998:	movw	r3, #39600	; 0x9ab0
   1599c:	movt	r3, #1
   159a0:	cmp	r4, r3
   159a4:	bne	15b10 <argp_failure@@Base+0x1324>
   159a8:	mov	r4, #1
   159ac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   159b0:	tst	r3, #32
   159b4:	bne	15b1c <argp_failure@@Base+0x1330>
   159b8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   159bc:	tst	r3, #64	; 0x40
   159c0:	beq	159fc <argp_failure@@Base+0x1210>
   159c4:	movw	r3, #45928	; 0xb368
   159c8:	movt	r3, #2
   159cc:	ldr	r3, [r3]
   159d0:	cmp	r3, #0
   159d4:	beq	159fc <argp_failure@@Base+0x1210>
   159d8:	cmp	r4, #0
   159dc:	bne	15b44 <argp_failure@@Base+0x1358>
   159e0:	movw	r3, #45928	; 0xb368
   159e4:	movt	r3, #2
   159e8:	ldr	r2, [r3]
   159ec:	movw	r1, #39716	; 0x9b24
   159f0:	movt	r1, #1
   159f4:	mov	r0, sl
   159f8:	bl	18458 <argp_parse@@Base+0x1ff0>
   159fc:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15a00:	bl	110c4 <funlockfile@plt>
   15a04:	ldr	r3, [fp, #-128]	; 0xffffff80
   15a08:	cmp	r3, #0
   15a0c:	beq	15a18 <argp_failure@@Base+0x122c>
   15a10:	mov	r0, r3
   15a14:	bl	12b0c <__assert_fail@plt+0x1874>
   15a18:	mov	r0, sl
   15a1c:	bl	1830c <argp_parse@@Base+0x1ea4>
   15a20:	sub	sp, fp, #32
   15a24:	ldrd	r4, [sp]
   15a28:	ldrd	r6, [sp, #8]
   15a2c:	ldrd	r8, [sp, #16]
   15a30:	ldrd	sl, [sp, #24]
   15a34:	add	sp, sp, #32
   15a38:	pop	{pc}		; (ldr pc, [sp], #4)
   15a3c:	ldr	r2, [sl, #28]
   15a40:	ldr	r3, [sl, #32]
   15a44:	cmp	r2, r3
   15a48:	bcs	15a98 <argp_failure@@Base+0x12ac>
   15a4c:	ldr	r3, [sl, #28]
   15a50:	add	r2, r3, #1
   15a54:	str	r2, [sl, #28]
   15a58:	mov	r2, #10
   15a5c:	strb	r2, [r3]
   15a60:	mov	r0, r4
   15a64:	bl	11178 <strlen@plt>
   15a68:	subs	r5, r0, #0
   15a6c:	bne	15ab0 <argp_failure@@Base+0x12c4>
   15a70:	ldr	r2, [sl, #28]
   15a74:	ldr	r3, [sl, #32]
   15a78:	cmp	r2, r3
   15a7c:	bcs	15af8 <argp_failure@@Base+0x130c>
   15a80:	ldr	r3, [sl, #28]
   15a84:	add	r2, r3, #1
   15a88:	str	r2, [sl, #28]
   15a8c:	mov	r2, #10
   15a90:	strb	r2, [r3]
   15a94:	b	15998 <argp_failure@@Base+0x11ac>
   15a98:	mov	r1, #1
   15a9c:	mov	r0, sl
   15aa0:	bl	18358 <argp_parse@@Base+0x1ef0>
   15aa4:	cmp	r0, #0
   15aa8:	bne	15a4c <argp_failure@@Base+0x1260>
   15aac:	b	15a60 <argp_failure@@Base+0x1274>
   15ab0:	ldr	r3, [sl, #28]
   15ab4:	add	r3, r3, r5
   15ab8:	ldr	r2, [sl, #32]
   15abc:	cmp	r2, r3
   15ac0:	bcs	15ad8 <argp_failure@@Base+0x12ec>
   15ac4:	mov	r1, r5
   15ac8:	mov	r0, sl
   15acc:	bl	18358 <argp_parse@@Base+0x1ef0>
   15ad0:	cmp	r0, #0
   15ad4:	beq	15a70 <argp_failure@@Base+0x1284>
   15ad8:	mov	r2, r5
   15adc:	mov	r1, r4
   15ae0:	ldr	r0, [sl, #28]
   15ae4:	bl	11058 <memcpy@plt>
   15ae8:	ldr	r3, [sl, #28]
   15aec:	add	r5, r3, r5
   15af0:	str	r5, [sl, #28]
   15af4:	b	15a70 <argp_failure@@Base+0x1284>
   15af8:	mov	r1, #1
   15afc:	mov	r0, sl
   15b00:	bl	18358 <argp_parse@@Base+0x1ef0>
   15b04:	cmp	r0, #0
   15b08:	bne	15a80 <argp_failure@@Base+0x1294>
   15b0c:	b	15998 <argp_failure@@Base+0x11ac>
   15b10:	mov	r0, r4
   15b14:	bl	17140 <argp_parse@@Base+0xcd8>
   15b18:	b	159a8 <argp_failure@@Base+0x11bc>
   15b1c:	str	sl, [sp, #4]
   15b20:	mov	r3, #0
   15b24:	str	r3, [sp]
   15b28:	mov	r3, r4
   15b2c:	mov	r2, #1
   15b30:	ldr	r1, [fp, #-104]	; 0xffffff98
   15b34:	ldr	r0, [fp, #-108]	; 0xffffff94
   15b38:	bl	13818 <__assert_fail@plt+0x2580>
   15b3c:	orr	r4, r4, r0
   15b40:	b	159b8 <argp_failure@@Base+0x11cc>
   15b44:	ldr	r2, [sl, #28]
   15b48:	ldr	r3, [sl, #32]
   15b4c:	cmp	r2, r3
   15b50:	bcs	15b6c <argp_failure@@Base+0x1380>
   15b54:	ldr	r3, [sl, #28]
   15b58:	add	r2, r3, #1
   15b5c:	str	r2, [sl, #28]
   15b60:	mov	r2, #10
   15b64:	strb	r2, [r3]
   15b68:	b	159e0 <argp_failure@@Base+0x11f4>
   15b6c:	mov	r1, #1
   15b70:	mov	r0, sl
   15b74:	bl	18358 <argp_parse@@Base+0x1ef0>
   15b78:	cmp	r0, #0
   15b7c:	bne	15b54 <argp_failure@@Base+0x1368>
   15b80:	b	159e0 <argp_failure@@Base+0x11f4>
   15b84:	ldrb	r3, [r6]
   15b88:	mov	r4, r6
   15b8c:	mov	r7, #0
   15b90:	b	14bf4 <argp_failure@@Base+0x408>
   15b94:	ldrb	r3, [r8]
   15b98:	cmp	r3, r7
   15b9c:	beq	152d0 <argp_failure@@Base+0xae4>
   15ba0:	add	r5, r5, #24
   15ba4:	subs	r6, r6, #1
   15ba8:	beq	153c0 <argp_failure@@Base+0xbd4>
   15bac:	ldr	r9, [r5, #12]
   15bb0:	tst	r9, #8
   15bb4:	bne	15ba0 <argp_failure@@Base+0x13b4>
   15bb8:	ldr	r7, [r5, #4]
   15bbc:	sub	r3, r7, #1
   15bc0:	cmp	r3, #254	; 0xfe
   15bc4:	bhi	15ba0 <argp_failure@@Base+0x13b4>
   15bc8:	bl	11154 <__ctype_b_loc@plt>
   15bcc:	ldr	r2, [r0]
   15bd0:	lsl	r3, r7, #1
   15bd4:	ldrh	r3, [r2, r3]
   15bd8:	tst	r3, #16384	; 0x4000
   15bdc:	bne	15b94 <argp_failure@@Base+0x13a8>
   15be0:	b	15ba0 <argp_failure@@Base+0x13b4>
   15be4:	muleq	r1, ip, r7

00015be8 <argp_help@@Base>:
   15be8:	push	{lr}		; (str lr, [sp, #-4]!)
   15bec:	sub	sp, sp, #12
   15bf0:	str	r3, [sp]
   15bf4:	mov	r3, r2
   15bf8:	mov	r2, r1
   15bfc:	mov	r1, #0
   15c00:	bl	14a08 <argp_failure@@Base+0x21c>
   15c04:	add	sp, sp, #12
   15c08:	pop	{pc}		; (ldr pc, [sp], #4)

00015c0c <argp_state_help@@Base>:
   15c0c:	strd	r4, [sp, #-12]!
   15c10:	str	lr, [sp, #8]
   15c14:	sub	sp, sp, #12
   15c18:	mov	r5, r2
   15c1c:	subs	r4, r0, #0
   15c20:	beq	15c40 <argp_state_help@@Base+0x34>
   15c24:	ldr	r3, [r4, #16]
   15c28:	tst	r3, #2
   15c2c:	beq	15c80 <argp_state_help@@Base+0x74>
   15c30:	add	sp, sp, #12
   15c34:	ldrd	r4, [sp]
   15c38:	add	sp, sp, #8
   15c3c:	pop	{pc}		; (ldr pc, [sp], #4)
   15c40:	cmp	r1, #0
   15c44:	beq	15c30 <argp_state_help@@Base+0x24>
   15c48:	movw	r3, #45712	; 0xb290
   15c4c:	movt	r3, #2
   15c50:	ldr	r3, [r3]
   15c54:	str	r3, [sp]
   15c58:	mov	r3, r2
   15c5c:	mov	r2, r1
   15c60:	mov	r1, #0
   15c64:	mov	r0, r1
   15c68:	bl	14a08 <argp_failure@@Base+0x21c>
   15c6c:	b	15cbc <argp_state_help@@Base+0xb0>
   15c70:	movw	r3, #45692	; 0xb27c
   15c74:	movt	r3, #2
   15c78:	ldr	r0, [r3]
   15c7c:	bl	1116c <exit@plt>
   15c80:	cmp	r1, #0
   15c84:	beq	15c30 <argp_state_help@@Base+0x24>
   15c88:	ldr	r3, [r4, #16]
   15c8c:	tst	r3, #64	; 0x40
   15c90:	orrne	r5, r5, #128	; 0x80
   15c94:	ldr	r3, [r4, #40]	; 0x28
   15c98:	str	r3, [sp]
   15c9c:	mov	r3, r5
   15ca0:	mov	r2, r1
   15ca4:	mov	r1, r4
   15ca8:	ldr	r0, [r4]
   15cac:	bl	14a08 <argp_failure@@Base+0x21c>
   15cb0:	ldr	r3, [r4, #16]
   15cb4:	tst	r3, #32
   15cb8:	bne	15c30 <argp_state_help@@Base+0x24>
   15cbc:	tst	r5, #256	; 0x100
   15cc0:	bne	15c70 <argp_state_help@@Base+0x64>
   15cc4:	tst	r5, #512	; 0x200
   15cc8:	beq	15c30 <argp_state_help@@Base+0x24>
   15ccc:	mov	r0, #0
   15cd0:	bl	1116c <exit@plt>

00015cd4 <argp_error@@Base>:
   15cd4:	push	{r1, r2, r3}
   15cd8:	strd	r4, [sp, #-12]!
   15cdc:	str	lr, [sp, #8]
   15ce0:	sub	sp, sp, #8
   15ce4:	subs	r5, r0, #0
   15ce8:	beq	15dc0 <argp_error@@Base+0xec>
   15cec:	ldr	r3, [r5, #16]
   15cf0:	tst	r3, #2
   15cf4:	bne	15da8 <argp_error@@Base+0xd4>
   15cf8:	ldr	r4, [r5, #44]	; 0x2c
   15cfc:	cmp	r4, #0
   15d00:	beq	15da8 <argp_error@@Base+0xd4>
   15d04:	mov	r0, r4
   15d08:	bl	1122c <flockfile@plt>
   15d0c:	add	r3, sp, #24
   15d10:	str	r3, [sp, #4]
   15d14:	ldr	r0, [r5, #40]	; 0x28
   15d18:	mov	r1, r4
   15d1c:	bl	10fc8 <fputs_unlocked@plt>
   15d20:	ldr	r3, [r4, #20]
   15d24:	ldr	r2, [r4, #24]
   15d28:	cmp	r3, r2
   15d2c:	addcc	r2, r3, #1
   15d30:	strcc	r2, [r4, #20]
   15d34:	movcc	r2, #58	; 0x3a
   15d38:	strbcc	r2, [r3]
   15d3c:	bcs	15df4 <argp_error@@Base+0x120>
   15d40:	ldr	r3, [r4, #20]
   15d44:	ldr	r2, [r4, #24]
   15d48:	cmp	r3, r2
   15d4c:	addcc	r2, r3, #1
   15d50:	strcc	r2, [r4, #20]
   15d54:	movcc	r2, #32
   15d58:	strbcc	r2, [r3]
   15d5c:	bcs	15e04 <argp_error@@Base+0x130>
   15d60:	ldr	r2, [sp, #4]
   15d64:	ldr	r1, [sp, #20]
   15d68:	mov	r0, r4
   15d6c:	bl	11214 <vfprintf@plt>
   15d70:	ldr	r3, [r4, #20]
   15d74:	ldr	r2, [r4, #24]
   15d78:	cmp	r3, r2
   15d7c:	addcc	r2, r3, #1
   15d80:	strcc	r2, [r4, #20]
   15d84:	movcc	r2, #10
   15d88:	strbcc	r2, [r3]
   15d8c:	bcs	15e14 <argp_error@@Base+0x140>
   15d90:	mov	r2, #260	; 0x104
   15d94:	mov	r1, r4
   15d98:	mov	r0, r5
   15d9c:	bl	15c0c <argp_state_help@@Base>
   15da0:	mov	r0, r4
   15da4:	bl	110c4 <funlockfile@plt>
   15da8:	add	sp, sp, #8
   15dac:	ldrd	r4, [sp]
   15db0:	ldr	lr, [sp, #8]
   15db4:	add	sp, sp, #12
   15db8:	add	sp, sp, #12
   15dbc:	bx	lr
   15dc0:	movw	r3, #45720	; 0xb298
   15dc4:	movt	r3, #2
   15dc8:	ldr	r4, [r3]
   15dcc:	cmp	r4, #0
   15dd0:	beq	15da8 <argp_error@@Base+0xd4>
   15dd4:	mov	r0, r4
   15dd8:	bl	1122c <flockfile@plt>
   15ddc:	add	r3, sp, #24
   15de0:	str	r3, [sp, #4]
   15de4:	movw	r3, #45712	; 0xb290
   15de8:	movt	r3, #2
   15dec:	ldr	r0, [r3]
   15df0:	b	15d18 <argp_error@@Base+0x44>
   15df4:	mov	r1, #58	; 0x3a
   15df8:	mov	r0, r4
   15dfc:	bl	111e4 <__overflow@plt>
   15e00:	b	15d40 <argp_error@@Base+0x6c>
   15e04:	mov	r1, #32
   15e08:	mov	r0, r4
   15e0c:	bl	111e4 <__overflow@plt>
   15e10:	b	15d60 <argp_error@@Base+0x8c>
   15e14:	mov	r1, #10
   15e18:	mov	r0, r4
   15e1c:	bl	111e4 <__overflow@plt>
   15e20:	b	15d90 <argp_error@@Base+0xbc>
   15e24:	ldr	ip, [r0]
   15e28:	cmp	ip, #0
   15e2c:	beq	15e94 <argp_error@@Base+0x1c0>
   15e30:	strd	r4, [sp, #-16]!
   15e34:	str	r6, [sp, #8]
   15e38:	str	lr, [sp, #12]
   15e3c:	mov	ip, r2
   15e40:	mov	r5, r1
   15e44:	mov	r4, r0
   15e48:	ldr	r2, [r0, #32]
   15e4c:	str	r2, [r1, #36]	; 0x24
   15e50:	ldr	r2, [r0, #24]
   15e54:	str	r2, [r1, #28]
   15e58:	ldr	r2, [r0, #28]
   15e5c:	str	r2, [r1, #32]
   15e60:	ldr	r2, [r0, #12]
   15e64:	str	r2, [r1, #20]
   15e68:	ldr	r6, [r0]
   15e6c:	mov	r2, r1
   15e70:	mov	r1, r3
   15e74:	mov	r0, ip
   15e78:	blx	r6
   15e7c:	ldr	r3, [r5, #36]	; 0x24
   15e80:	str	r3, [r4, #32]
   15e84:	ldrd	r4, [sp]
   15e88:	ldr	r6, [sp, #8]
   15e8c:	add	sp, sp, #12
   15e90:	pop	{pc}		; (ldr pc, [sp], #4)
   15e94:	mov	r0, #7
   15e98:	bx	lr
   15e9c:	strd	r4, [sp, #-16]!
   15ea0:	str	r6, [sp, #8]
   15ea4:	str	lr, [sp, #12]
   15ea8:	ldr	r5, [r0, #16]
   15eac:	ldr	r3, [r0]
   15eb0:	cmp	r3, #0
   15eb4:	beq	15ecc <argp_error@@Base+0x1f8>
   15eb8:	ldr	r2, [r1, #8]
   15ebc:	add	r2, r2, #1
   15ec0:	str	r2, [r1, #8]
   15ec4:	mov	r2, #0
   15ec8:	b	15eec <argp_error@@Base+0x218>
   15ecc:	ldr	r3, [r0, #4]
   15ed0:	cmp	r3, #0
   15ed4:	beq	15f3c <argp_error@@Base+0x268>
   15ed8:	ldr	r3, [r1, #8]
   15edc:	add	r3, r3, #1
   15ee0:	str	r3, [r1, #8]
   15ee4:	b	15f3c <argp_error@@Base+0x268>
   15ee8:	add	r2, r2, #1
   15eec:	add	r3, r3, #24
   15ef0:	ldr	r0, [r3, #-20]	; 0xffffffec
   15ef4:	cmp	r0, #0
   15ef8:	bne	15ee8 <argp_error@@Base+0x214>
   15efc:	ldr	r0, [r3, #-24]	; 0xffffffe8
   15f00:	cmp	r0, #0
   15f04:	bne	15ee8 <argp_error@@Base+0x214>
   15f08:	ldr	r0, [r3, #-8]
   15f0c:	cmp	r0, #0
   15f10:	bne	15ee8 <argp_error@@Base+0x214>
   15f14:	ldr	r0, [r3, #-4]
   15f18:	cmp	r0, #0
   15f1c:	bne	15ee8 <argp_error@@Base+0x214>
   15f20:	add	r0, r2, r2, lsl #1
   15f24:	ldr	r3, [r1]
   15f28:	add	r3, r3, r0
   15f2c:	str	r3, [r1]
   15f30:	ldr	r3, [r1, #4]
   15f34:	add	r2, r3, r2
   15f38:	str	r2, [r1, #4]
   15f3c:	cmp	r5, #0
   15f40:	beq	15f74 <argp_error@@Base+0x2a0>
   15f44:	ldr	r0, [r5]
   15f48:	cmp	r0, #0
   15f4c:	beq	15f74 <argp_error@@Base+0x2a0>
   15f50:	mov	r4, r1
   15f54:	mov	r1, r4
   15f58:	bl	15e9c <argp_error@@Base+0x1c8>
   15f5c:	ldr	r3, [r4, #12]
   15f60:	add	r3, r3, #1
   15f64:	str	r3, [r4, #12]
   15f68:	ldr	r0, [r5, #16]!
   15f6c:	cmp	r0, #0
   15f70:	bne	15f54 <argp_error@@Base+0x280>
   15f74:	ldrd	r4, [sp]
   15f78:	ldr	r6, [sp, #8]
   15f7c:	add	sp, sp, #12
   15f80:	pop	{pc}		; (ldr pc, [sp], #4)
   15f84:	cmp	r0, #86	; 0x56
   15f88:	beq	15f94 <argp_error@@Base+0x2c0>
   15f8c:	mov	r0, #7
   15f90:	bx	lr
   15f94:	str	r4, [sp, #-8]!
   15f98:	str	lr, [sp, #4]
   15f9c:	mov	r4, r2
   15fa0:	movw	r3, #45764	; 0xb2c4
   15fa4:	movt	r3, #2
   15fa8:	ldr	r3, [r3]
   15fac:	cmp	r3, #0
   15fb0:	beq	15fdc <argp_error@@Base+0x308>
   15fb4:	mov	r1, r2
   15fb8:	ldr	r0, [r2, #48]	; 0x30
   15fbc:	blx	r3
   15fc0:	ldr	r3, [r4, #16]
   15fc4:	tst	r3, #32
   15fc8:	beq	16020 <argp_error@@Base+0x34c>
   15fcc:	mov	r0, #0
   15fd0:	ldr	r4, [sp]
   15fd4:	add	sp, sp, #4
   15fd8:	pop	{pc}		; (ldr pc, [sp], #4)
   15fdc:	movw	r3, #45932	; 0xb36c
   15fe0:	movt	r3, #2
   15fe4:	ldr	r2, [r3]
   15fe8:	cmp	r2, #0
   15fec:	beq	16004 <argp_error@@Base+0x330>
   15ff0:	movw	r1, #40416	; 0x9de0
   15ff4:	movt	r1, #1
   15ff8:	ldr	r0, [r4, #48]	; 0x30
   15ffc:	bl	11190 <fprintf@plt>
   16000:	b	15fc0 <argp_error@@Base+0x2ec>
   16004:	movw	r2, #40016	; 0x9c50
   16008:	movt	r2, #1
   1600c:	movw	r1, #40052	; 0x9c74
   16010:	movt	r1, #1
   16014:	mov	r0, r4
   16018:	bl	15cd4 <argp_error@@Base>
   1601c:	b	15fc0 <argp_error@@Base+0x2ec>
   16020:	mov	r0, #0
   16024:	bl	1116c <exit@plt>
   16028:	strd	r4, [sp, #-16]!
   1602c:	str	r6, [sp, #8]
   16030:	str	lr, [sp, #12]
   16034:	mov	r4, r2
   16038:	cmn	r0, #3
   1603c:	beq	160f4 <argp_error@@Base+0x420>
   16040:	mov	r5, r1
   16044:	ble	16080 <argp_error@@Base+0x3ac>
   16048:	cmn	r0, #2
   1604c:	beq	1610c <argp_error@@Base+0x438>
   16050:	cmp	r0, #63	; 0x3f
   16054:	movne	r0, #7
   16058:	bne	16070 <argp_error@@Base+0x39c>
   1605c:	movw	r2, #634	; 0x27a
   16060:	ldr	r1, [r4, #48]	; 0x30
   16064:	mov	r0, r4
   16068:	bl	15c0c <argp_state_help@@Base>
   1606c:	mov	r0, #0
   16070:	ldrd	r4, [sp]
   16074:	ldr	r6, [sp, #8]
   16078:	add	sp, sp, #12
   1607c:	pop	{pc}		; (ldr pc, [sp], #4)
   16080:	cmn	r0, #4
   16084:	movne	r0, #7
   16088:	bne	16070 <argp_error@@Base+0x39c>
   1608c:	movw	r0, #40056	; 0x9c78
   16090:	movt	r0, #1
   16094:	mov	r2, #10
   16098:	mov	r1, #0
   1609c:	cmp	r5, r1
   160a0:	movne	r0, r5
   160a4:	bl	10fe0 <strtol@plt>
   160a8:	movw	r3, #45760	; 0xb2c0
   160ac:	movt	r3, #2
   160b0:	str	r0, [r3]
   160b4:	ldr	r2, [r3]
   160b8:	sub	r1, r2, #1
   160bc:	str	r1, [r3]
   160c0:	cmp	r2, #0
   160c4:	ble	16154 <argp_error@@Base+0x480>
   160c8:	mov	r5, #1
   160cc:	mov	r4, r3
   160d0:	mov	r0, r5
   160d4:	bl	11088 <sleep@plt>
   160d8:	ldr	r3, [r4]
   160dc:	sub	r2, r3, #1
   160e0:	str	r2, [r4]
   160e4:	cmp	r3, #0
   160e8:	bgt	160d0 <argp_error@@Base+0x3fc>
   160ec:	mov	r0, #0
   160f0:	b	16070 <argp_error@@Base+0x39c>
   160f4:	movw	r2, #513	; 0x201
   160f8:	ldr	r1, [r4, #48]	; 0x30
   160fc:	mov	r0, r4
   16100:	bl	15c0c <argp_state_help@@Base>
   16104:	mov	r0, #0
   16108:	b	16070 <argp_error@@Base+0x39c>
   1610c:	movw	r3, #45716	; 0xb294
   16110:	movt	r3, #2
   16114:	str	r1, [r3]
   16118:	mov	r0, r1
   1611c:	bl	1707c <argp_parse@@Base+0xc14>
   16120:	str	r0, [r4, #40]	; 0x28
   16124:	movw	r3, #45712	; 0xb290
   16128:	movt	r3, #2
   1612c:	str	r0, [r3]
   16130:	ldr	r3, [r4, #16]
   16134:	and	r3, r3, #3
   16138:	cmp	r3, #1
   1613c:	movne	r0, #0
   16140:	bne	16070 <argp_error@@Base+0x39c>
   16144:	ldr	r3, [r4, #8]
   16148:	str	r5, [r3]
   1614c:	mov	r0, #0
   16150:	b	16070 <argp_error@@Base+0x39c>
   16154:	mov	r0, #0
   16158:	b	16070 <argp_error@@Base+0x39c>
   1615c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16160:	strd	r6, [sp, #8]
   16164:	strd	r8, [sp, #16]
   16168:	strd	sl, [sp, #24]
   1616c:	str	lr, [sp, #32]
   16170:	sub	sp, sp, #36	; 0x24
   16174:	str	r0, [sp, #16]
   16178:	str	r1, [sp, #20]
   1617c:	str	r2, [sp, #24]
   16180:	str	r3, [sp, #8]
   16184:	ldr	r8, [sp, #72]	; 0x48
   16188:	ldr	r6, [r0]
   1618c:	ldr	sl, [r0, #16]
   16190:	cmp	r6, #0
   16194:	beq	161b0 <argp_error@@Base+0x4dc>
   16198:	mov	r4, r6
   1619c:	movw	r3, #36409	; 0x8e39
   161a0:	movt	r3, #14563	; 0x38e3
   161a4:	str	r3, [sp, #12]
   161a8:	str	sl, [sp, #28]
   161ac:	b	161f4 <argp_error@@Base+0x520>
   161b0:	ldr	r3, [r0, #4]
   161b4:	cmp	r3, #0
   161b8:	bne	16380 <argp_error@@Base+0x6ac>
   161bc:	ldr	r0, [sp, #8]
   161c0:	str	r6, [sp, #8]
   161c4:	b	16404 <argp_error@@Base+0x730>
   161c8:	ldr	r0, [r7, #16]!
   161cc:	cmp	r0, #0
   161d0:	beq	162d4 <argp_error@@Base+0x600>
   161d4:	mov	r1, r9
   161d8:	bl	10fd4 <strcmp@plt>
   161dc:	cmp	r0, #0
   161e0:	bne	161c8 <argp_error@@Base+0x4f4>
   161e4:	sub	sl, r7, fp
   161e8:	cmp	sl, #0
   161ec:	blt	162d4 <argp_error@@Base+0x600>
   161f0:	add	r4, r4, #24
   161f4:	ldr	r7, [r4, #4]
   161f8:	cmp	r7, #0
   161fc:	bne	1620c <argp_error@@Base+0x538>
   16200:	ldr	r3, [r4]
   16204:	cmp	r3, #0
   16208:	beq	16364 <argp_error@@Base+0x690>
   1620c:	ldr	r3, [r4, #12]
   16210:	and	r2, r3, #4
   16214:	cmp	r2, #0
   16218:	moveq	r6, r4
   1621c:	ldr	r5, [r6, #12]
   16220:	ands	r5, r5, #8
   16224:	bne	161f0 <argp_error@@Base+0x51c>
   16228:	tst	r3, #8
   1622c:	bne	162ac <argp_error@@Base+0x5d8>
   16230:	sub	r3, r7, #1
   16234:	cmp	r3, #254	; 0xfe
   16238:	bhi	162ac <argp_error@@Base+0x5d8>
   1623c:	bl	11154 <__ctype_b_loc@plt>
   16240:	ldr	r2, [r0]
   16244:	lsl	r3, r7, #1
   16248:	ldrh	r3, [r2, r3]
   1624c:	tst	r3, #16384	; 0x4000
   16250:	beq	162ac <argp_error@@Base+0x5d8>
   16254:	ldr	r3, [r8, #4]
   16258:	add	r2, r3, #1
   1625c:	str	r2, [r8, #4]
   16260:	strb	r7, [r3]
   16264:	ldr	r3, [r6, #8]
   16268:	cmp	r3, #0
   1626c:	beq	162a0 <argp_error@@Base+0x5cc>
   16270:	ldr	r3, [r8, #4]
   16274:	add	r2, r3, #1
   16278:	str	r2, [r8, #4]
   1627c:	mov	r1, #58	; 0x3a
   16280:	strb	r1, [r3]
   16284:	ldr	r3, [r6, #12]
   16288:	tst	r3, #1
   1628c:	beq	162a0 <argp_error@@Base+0x5cc>
   16290:	ldr	r3, [r8, #4]
   16294:	add	r2, r3, #1
   16298:	str	r2, [r8, #4]
   1629c:	strb	r1, [r3]
   162a0:	ldr	r3, [r8, #4]
   162a4:	mov	r2, #0
   162a8:	strb	r2, [r3]
   162ac:	ldr	r9, [r4]
   162b0:	cmp	r9, #0
   162b4:	beq	161f0 <argp_error@@Base+0x51c>
   162b8:	ldr	r3, [r8]
   162bc:	ldr	fp, [r3, #8]
   162c0:	ldr	r0, [fp]
   162c4:	cmp	r0, #0
   162c8:	beq	162d4 <argp_error@@Base+0x600>
   162cc:	mov	r7, fp
   162d0:	b	161d4 <argp_error@@Base+0x500>
   162d4:	ldr	r3, [r8, #8]
   162d8:	str	r9, [r3]
   162dc:	ldr	r3, [r6, #8]
   162e0:	cmp	r3, #0
   162e4:	beq	162fc <argp_error@@Base+0x628>
   162e8:	ldr	r3, [r6, #12]
   162ec:	and	r3, r3, #1
   162f0:	cmp	r3, #0
   162f4:	movne	r5, #2
   162f8:	moveq	r5, #1
   162fc:	ldr	r3, [r8, #8]
   16300:	str	r5, [r3, #4]
   16304:	ldr	r3, [r8, #8]
   16308:	mov	r2, #0
   1630c:	str	r2, [r3, #8]
   16310:	ldr	r3, [r4, #4]
   16314:	cmp	r3, r2
   16318:	ldreq	r3, [r6, #4]
   1631c:	bic	r2, r3, #-16777216	; 0xff000000
   16320:	ldr	r1, [r8, #8]
   16324:	ldr	r3, [r8]
   16328:	ldr	r3, [r3, #48]	; 0x30
   1632c:	ldr	r0, [sp, #8]
   16330:	sub	r3, r0, r3
   16334:	asr	r3, r3, #2
   16338:	ldr	r0, [sp, #12]
   1633c:	mul	r3, r0, r3
   16340:	add	r3, r3, #1
   16344:	add	r3, r2, r3, lsl #24
   16348:	str	r3, [r1, #12]
   1634c:	ldr	r3, [r8, #8]
   16350:	add	r2, r3, #16
   16354:	str	r2, [r8, #8]
   16358:	mov	r2, #0
   1635c:	str	r2, [r3, #16]
   16360:	b	161f0 <argp_error@@Base+0x51c>
   16364:	ldr	r3, [r4, #16]
   16368:	cmp	r3, #0
   1636c:	bne	1620c <argp_error@@Base+0x538>
   16370:	ldr	r3, [r4, #20]
   16374:	cmp	r3, #0
   16378:	bne	1620c <argp_error@@Base+0x538>
   1637c:	ldr	sl, [sp, #28]
   16380:	ldr	r1, [sp, #16]
   16384:	ldr	r3, [r1, #4]
   16388:	ldr	r2, [sp, #8]
   1638c:	str	r3, [r2]
   16390:	str	r1, [r2, #4]
   16394:	ldr	r3, [r8, #4]
   16398:	str	r3, [r2, #8]
   1639c:	mov	r3, #0
   163a0:	str	r3, [r2, #12]
   163a4:	ldr	r1, [sp, #20]
   163a8:	str	r1, [r2, #16]
   163ac:	ldr	r1, [sp, #24]
   163b0:	str	r1, [r2, #20]
   163b4:	str	r3, [r2, #24]
   163b8:	str	r3, [r2, #32]
   163bc:	str	r3, [r2, #28]
   163c0:	cmp	sl, r3
   163c4:	beq	163fc <argp_error@@Base+0x728>
   163c8:	ldr	r3, [sl]
   163cc:	cmp	r3, #0
   163d0:	beq	16460 <argp_error@@Base+0x78c>
   163d4:	mov	r3, #0
   163d8:	add	r3, r3, #1
   163dc:	ldr	r2, [sl, r3, lsl #4]
   163e0:	cmp	r2, #0
   163e4:	bne	163d8 <argp_error@@Base+0x704>
   163e8:	ldr	r2, [r8, #12]
   163ec:	ldr	r1, [sp, #8]
   163f0:	str	r2, [r1, #28]
   163f4:	add	r3, r2, r3, lsl #2
   163f8:	str	r3, [r8, #12]
   163fc:	ldr	r3, [sp, #8]
   16400:	add	r0, r3, #36	; 0x24
   16404:	cmp	sl, #0
   16408:	beq	16444 <argp_error@@Base+0x770>
   1640c:	ldr	ip, [sl]
   16410:	cmp	ip, #0
   16414:	beq	16444 <argp_error@@Base+0x770>
   16418:	mov	r2, #0
   1641c:	add	r4, r2, #1
   16420:	str	r8, [sp]
   16424:	mov	r3, r0
   16428:	ldr	r1, [sp, #8]
   1642c:	mov	r0, ip
   16430:	bl	1615c <argp_error@@Base+0x488>
   16434:	ldr	ip, [sl, r4, lsl #4]
   16438:	mov	r2, r4
   1643c:	cmp	ip, #0
   16440:	bne	1641c <argp_error@@Base+0x748>
   16444:	add	sp, sp, #36	; 0x24
   16448:	ldrd	r4, [sp]
   1644c:	ldrd	r6, [sp, #8]
   16450:	ldrd	r8, [sp, #16]
   16454:	ldrd	sl, [sp, #24]
   16458:	add	sp, sp, #32
   1645c:	pop	{pc}		; (ldr pc, [sp], #4)
   16460:	mov	r3, #0
   16464:	b	163e8 <argp_error@@Base+0x714>

00016468 <argp_parse@@Base>:
   16468:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1646c:	strd	r6, [sp, #8]
   16470:	strd	r8, [sp, #16]
   16474:	strd	sl, [sp, #24]
   16478:	str	lr, [sp, #32]
   1647c:	add	fp, sp, #32
   16480:	sub	sp, sp, #228	; 0xe4
   16484:	mov	r8, r0
   16488:	str	r1, [fp, #-240]	; 0xffffff10
   1648c:	str	r2, [fp, #-232]	; 0xffffff18
   16490:	mov	r7, r3
   16494:	tst	r3, #1
   16498:	bne	164c4 <argp_parse@@Base+0x5c>
   1649c:	movw	r3, #45716	; 0xb294
   164a0:	movt	r3, #2
   164a4:	ldr	r3, [r3]
   164a8:	cmp	r3, #0
   164ac:	beq	1651c <argp_parse@@Base+0xb4>
   164b0:	movw	r3, #45712	; 0xb290
   164b4:	movt	r3, #2
   164b8:	ldr	r3, [r3]
   164bc:	cmp	r3, #0
   164c0:	beq	16530 <argp_parse@@Base+0xc8>
   164c4:	tst	r7, #16
   164c8:	beq	1654c <argp_parse@@Base+0xe4>
   164cc:	str	r7, [fp, #-244]	; 0xffffff0c
   164d0:	mov	r3, #0
   164d4:	str	r3, [fp, #-188]	; 0xffffff44
   164d8:	str	r3, [fp, #-184]	; 0xffffff48
   164dc:	str	r3, [fp, #-180]	; 0xffffff4c
   164e0:	str	r3, [fp, #-176]	; 0xffffff50
   164e4:	str	r3, [fp, #-172]	; 0xffffff54
   164e8:	str	r3, [fp, #-168]	; 0xffffff58
   164ec:	str	r3, [fp, #-164]	; 0xffffff5c
   164f0:	ands	r2, r7, #4
   164f4:	str	r2, [fp, #-248]	; 0xffffff08
   164f8:	moveq	r2, #1
   164fc:	movne	r2, r3
   16500:	str	r2, [fp, #-228]	; 0xffffff1c
   16504:	str	r3, [fp, #-224]	; 0xffffff20
   16508:	str	r3, [fp, #-220]	; 0xffffff24
   1650c:	str	r3, [fp, #-216]	; 0xffffff28
   16510:	cmp	r8, r3
   16514:	beq	16618 <argp_parse@@Base+0x1b0>
   16518:	b	1660c <argp_parse@@Base+0x1a4>
   1651c:	ldr	r2, [r2]
   16520:	movw	r3, #45716	; 0xb294
   16524:	movt	r3, #2
   16528:	str	r2, [r3]
   1652c:	b	164b0 <argp_parse@@Base+0x48>
   16530:	ldr	r3, [fp, #-232]	; 0xffffff18
   16534:	ldr	r0, [r3]
   16538:	bl	1707c <argp_parse@@Base+0xc14>
   1653c:	movw	r3, #45712	; 0xb290
   16540:	movt	r3, #2
   16544:	str	r0, [r3]
   16548:	b	164c4 <argp_parse@@Base+0x5c>
   1654c:	sub	sp, sp, #64	; 0x40
   16550:	add	r5, sp, #8
   16554:	sub	sp, sp, #32
   16558:	add	r4, sp, #8
   1655c:	mov	r1, #0
   16560:	str	r1, [r4]
   16564:	str	r1, [r4, #4]
   16568:	str	r1, [r4, #8]
   1656c:	str	r1, [r4, #12]
   16570:	str	r1, [r4, #20]
   16574:	str	r1, [r4, #24]
   16578:	str	r5, [r4, #16]
   1657c:	mov	r2, #64	; 0x40
   16580:	mov	r0, r5
   16584:	bl	111b4 <memset@plt>
   16588:	cmp	r8, #0
   1658c:	mov	r0, r5
   16590:	strne	r8, [r0], #16
   16594:	movw	r3, #39736	; 0x9b38
   16598:	movt	r3, #1
   1659c:	str	r3, [r0]
   165a0:	movw	r3, #45932	; 0xb36c
   165a4:	movt	r3, #2
   165a8:	ldr	r3, [r3]
   165ac:	cmp	r3, #0
   165b0:	beq	167d8 <argp_parse@@Base+0x370>
   165b4:	add	r2, r0, #32
   165b8:	ldr	r3, [pc, #2548]	; 16fb4 <argp_parse@@Base+0xb4c>
   165bc:	str	r3, [r0, #16]
   165c0:	mov	r3, #0
   165c4:	str	r3, [r2]
   165c8:	str	r7, [fp, #-244]	; 0xffffff0c
   165cc:	str	r3, [fp, #-188]	; 0xffffff44
   165d0:	str	r3, [fp, #-184]	; 0xffffff48
   165d4:	str	r3, [fp, #-180]	; 0xffffff4c
   165d8:	str	r3, [fp, #-176]	; 0xffffff50
   165dc:	str	r3, [fp, #-172]	; 0xffffff54
   165e0:	str	r3, [fp, #-168]	; 0xffffff58
   165e4:	str	r3, [fp, #-164]	; 0xffffff5c
   165e8:	ands	r2, r7, #4
   165ec:	str	r2, [fp, #-248]	; 0xffffff08
   165f0:	moveq	r2, #1
   165f4:	movne	r2, r3
   165f8:	str	r2, [fp, #-228]	; 0xffffff1c
   165fc:	str	r3, [fp, #-224]	; 0xffffff20
   16600:	str	r3, [fp, #-220]	; 0xffffff24
   16604:	str	r3, [fp, #-216]	; 0xffffff28
   16608:	mov	r8, r4
   1660c:	sub	r1, fp, #228	; 0xe4
   16610:	mov	r0, r8
   16614:	bl	15e9c <argp_error@@Base+0x1c8>
   16618:	ldr	r4, [fp, #-220]	; 0xffffff24
   1661c:	add	r4, r4, #1
   16620:	add	r4, r4, r4, lsl #3
   16624:	lsl	r4, r4, #2
   16628:	ldr	r3, [fp, #-216]	; 0xffffff28
   1662c:	lsl	r3, r3, #2
   16630:	str	r3, [fp, #-236]	; 0xffffff14
   16634:	add	r9, r3, r4
   16638:	ldr	r5, [fp, #-224]	; 0xffffff20
   1663c:	add	r5, r5, #1
   16640:	add	r5, r9, r5, lsl #4
   16644:	ldr	r0, [fp, #-228]	; 0xffffff1c
   16648:	add	r0, r0, #1
   1664c:	add	r0, r0, r5
   16650:	bl	17cb0 <argp_parse@@Base+0x1848>
   16654:	mov	r6, r0
   16658:	str	r0, [fp, #-40]	; 0xffffffd8
   1665c:	cmp	r0, #0
   16660:	moveq	r4, #12
   16664:	beq	16dd4 <argp_parse@@Base+0x96c>
   16668:	str	r0, [fp, #-112]	; 0xffffff90
   1666c:	add	r4, r0, r4
   16670:	str	r4, [fp, #-104]	; 0xffffff98
   16674:	add	r9, r0, r9
   16678:	str	r9, [fp, #-152]	; 0xffffff68
   1667c:	add	sl, r0, r5
   16680:	str	sl, [fp, #-156]	; 0xffffff64
   16684:	mov	r3, #1
   16688:	str	r3, [fp, #-196]	; 0xffffff3c
   1668c:	str	r3, [fp, #-192]	; 0xffffff40
   16690:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   16694:	strd	r2, [fp, #-148]	; 0xffffff6c
   16698:	ldrd	r2, [fp, #-188]	; 0xffffff44
   1669c:	strd	r2, [fp, #-140]	; 0xffffff74
   166a0:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   166a4:	strd	r2, [fp, #-132]	; 0xffffff7c
   166a8:	ldrd	r2, [fp, #-172]	; 0xffffff54
   166ac:	strd	r2, [fp, #-124]	; 0xffffff84
   166b0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   166b4:	str	r3, [fp, #-116]	; 0xffffff8c
   166b8:	ldr	r2, [fp, #-236]	; 0xffffff14
   166bc:	mov	r1, #0
   166c0:	mov	r0, r4
   166c4:	bl	111b4 <memset@plt>
   166c8:	sub	r3, fp, #160	; 0xa0
   166cc:	str	r3, [fp, #-212]	; 0xffffff2c
   166d0:	str	sl, [fp, #-208]	; 0xffffff30
   166d4:	str	r9, [fp, #-204]	; 0xffffff34
   166d8:	str	r4, [fp, #-200]	; 0xffffff38
   166dc:	ldr	r3, [fp, #-244]	; 0xffffff0c
   166e0:	tst	r3, #8
   166e4:	beq	167f4 <argp_parse@@Base+0x38c>
   166e8:	add	sl, sl, #1
   166ec:	str	sl, [fp, #-208]	; 0xffffff30
   166f0:	mov	r3, #45	; 0x2d
   166f4:	strb	r3, [r6, r5]
   166f8:	mov	r3, #0
   166fc:	ldr	r2, [fp, #-208]	; 0xffffff30
   16700:	strb	r3, [r2]
   16704:	ldr	r2, [fp, #-204]	; 0xffffff34
   16708:	str	r3, [r2]
   1670c:	str	r8, [fp, #-160]	; 0xffffff60
   16710:	cmp	r8, r3
   16714:	beq	16814 <argp_parse@@Base+0x3ac>
   16718:	sub	r3, fp, #212	; 0xd4
   1671c:	str	r3, [sp]
   16720:	ldr	r3, [fp, #-112]	; 0xffffff90
   16724:	mov	r2, #0
   16728:	mov	r1, r2
   1672c:	mov	r0, r8
   16730:	bl	1615c <argp_error@@Base+0x488>
   16734:	str	r0, [fp, #-108]	; 0xffffff94
   16738:	mov	r2, #0
   1673c:	mov	r3, #0
   16740:	strd	r2, [fp, #-76]	; 0xffffffb4
   16744:	strd	r2, [fp, #-68]	; 0xffffffbc
   16748:	strd	r2, [fp, #-60]	; 0xffffffc4
   1674c:	ldr	r3, [fp, #-160]	; 0xffffff60
   16750:	str	r3, [fp, #-96]	; 0xffffffa0
   16754:	ldr	r3, [fp, #-240]	; 0xffffff10
   16758:	str	r3, [fp, #-92]	; 0xffffffa4
   1675c:	ldr	r3, [fp, #-232]	; 0xffffff18
   16760:	str	r3, [fp, #-88]	; 0xffffffa8
   16764:	str	r7, [fp, #-80]	; 0xffffffb0
   16768:	movw	r3, #45720	; 0xb298
   1676c:	movt	r3, #2
   16770:	ldr	r3, [r3]
   16774:	str	r3, [fp, #-52]	; 0xffffffcc
   16778:	movw	r3, #45724	; 0xb29c
   1677c:	movt	r3, #2
   16780:	ldr	r3, [r3]
   16784:	str	r3, [fp, #-48]	; 0xffffffd0
   16788:	mov	r3, #0
   1678c:	str	r3, [fp, #-84]	; 0xffffffac
   16790:	sub	r3, fp, #160	; 0xa0
   16794:	str	r3, [fp, #-44]	; 0xffffffd4
   16798:	mov	r3, #1
   1679c:	str	r3, [fp, #-100]	; 0xffffff9c
   167a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   167a4:	ldr	r2, [fp, #-108]	; 0xffffff94
   167a8:	cmp	r3, r2
   167ac:	bcs	168c0 <argp_parse@@Base+0x458>
   167b0:	ldr	r2, [fp, #8]
   167b4:	str	r2, [r3, #24]
   167b8:	ldr	r5, [fp, #-112]	; 0xffffff90
   167bc:	ldr	r3, [fp, #-108]	; 0xffffff94
   167c0:	cmp	r5, r3
   167c4:	bcs	168c0 <argp_parse@@Base+0x458>
   167c8:	mov	r6, #3
   167cc:	movt	r6, #256	; 0x100
   167d0:	mov	r7, #0
   167d4:	b	1685c <argp_parse@@Base+0x3f4>
   167d8:	movw	r3, #45764	; 0xb2c4
   167dc:	movt	r3, #2
   167e0:	ldr	r3, [r3]
   167e4:	cmp	r3, #0
   167e8:	addeq	r2, r0, #16
   167ec:	bne	165b4 <argp_parse@@Base+0x14c>
   167f0:	b	165c0 <argp_parse@@Base+0x158>
   167f4:	ldr	r3, [fp, #-248]	; 0xffffff08
   167f8:	cmp	r3, #0
   167fc:	beq	166f8 <argp_parse@@Base+0x290>
   16800:	add	sl, sl, #1
   16804:	str	sl, [fp, #-208]	; 0xffffff30
   16808:	mov	r3, #43	; 0x2b
   1680c:	strb	r3, [r6, r5]
   16810:	b	166f8 <argp_parse@@Base+0x290>
   16814:	ldr	r3, [fp, #-112]	; 0xffffff90
   16818:	str	r3, [fp, #-108]	; 0xffffff94
   1681c:	b	16738 <argp_parse@@Base+0x2d0>
   16820:	ldr	r3, [r5]
   16824:	cmp	r3, #0
   16828:	beq	1687c <argp_parse@@Base+0x414>
   1682c:	mov	r3, r7
   16830:	mov	r2, r6
   16834:	sub	r1, fp, #96	; 0x60
   16838:	mov	r0, r5
   1683c:	bl	15e24 <argp_error@@Base+0x150>
   16840:	add	r5, r5, #36	; 0x24
   16844:	ldr	r3, [fp, #-108]	; 0xffffff94
   16848:	cmp	r5, r3
   1684c:	bcs	168b0 <argp_parse@@Base+0x448>
   16850:	cmp	r0, #7
   16854:	cmpne	r0, #0
   16858:	bne	168a8 <argp_parse@@Base+0x440>
   1685c:	ldr	r3, [r5, #16]
   16860:	cmp	r3, #0
   16864:	beq	16820 <argp_parse@@Base+0x3b8>
   16868:	ldr	r2, [r5, #20]
   1686c:	ldr	r3, [r3, #28]
   16870:	ldr	r3, [r3, r2, lsl #2]
   16874:	str	r3, [r5, #24]
   16878:	b	16820 <argp_parse@@Base+0x3b8>
   1687c:	ldr	r3, [r5, #4]
   16880:	ldr	r3, [r3, #16]
   16884:	cmp	r3, #0
   16888:	beq	1682c <argp_parse@@Base+0x3c4>
   1688c:	ldr	r3, [r3]
   16890:	cmp	r3, #0
   16894:	beq	1682c <argp_parse@@Base+0x3c4>
   16898:	ldr	r3, [r5, #28]
   1689c:	ldr	r2, [r5, #24]
   168a0:	str	r2, [r3]
   168a4:	b	1682c <argp_parse@@Base+0x3c4>
   168a8:	mov	r4, r0
   168ac:	b	16dd4 <argp_parse@@Base+0x96c>
   168b0:	mov	r4, r0
   168b4:	cmp	r0, #7
   168b8:	cmpne	r0, #0
   168bc:	bne	16dd4 <argp_parse@@Base+0x96c>
   168c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   168c4:	tst	r3, #2
   168c8:	moveq	r3, #1
   168cc:	streq	r3, [fp, #-144]	; 0xffffff70
   168d0:	beq	168fc <argp_parse@@Base+0x494>
   168d4:	mov	r2, #0
   168d8:	str	r2, [fp, #-144]	; 0xffffff70
   168dc:	tst	r3, #1
   168e0:	beq	168fc <argp_parse@@Base+0x494>
   168e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   168e8:	sub	r3, r3, #4
   168ec:	str	r3, [fp, #-88]	; 0xffffffa8
   168f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   168f4:	add	r3, r3, #1
   168f8:	str	r3, [fp, #-92]	; 0xffffffa4
   168fc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16900:	ldr	r2, [fp, #-232]	; 0xffffff18
   16904:	cmp	r2, r3
   16908:	beq	16930 <argp_parse@@Base+0x4c8>
   1690c:	movw	r3, #45712	; 0xb290
   16910:	movt	r3, #2
   16914:	ldr	r3, [r3]
   16918:	str	r3, [fp, #-56]	; 0xffffffc8
   1691c:	movw	sl, #40068	; 0x9c84
   16920:	movt	sl, #1
   16924:	mov	r9, #6
   16928:	movt	r9, #256	; 0x100
   1692c:	b	169f8 <argp_parse@@Base+0x590>
   16930:	ldr	r0, [r2]
   16934:	cmp	r0, #0
   16938:	beq	1690c <argp_parse@@Base+0x4a4>
   1693c:	bl	1707c <argp_parse@@Base+0xc14>
   16940:	str	r0, [fp, #-56]	; 0xffffffc8
   16944:	b	1691c <argp_parse@@Base+0x4b4>
   16948:	ldr	r3, [fp, #-84]	; 0xffffffac
   1694c:	str	r3, [fp, #-148]	; 0xffffff6c
   16950:	mvn	r3, #0
   16954:	str	r3, [fp, #-140]	; 0xffffff74
   16958:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1695c:	tst	r3, #64	; 0x40
   16960:	beq	16a7c <argp_parse@@Base+0x614>
   16964:	sub	r3, fp, #148	; 0x94
   16968:	str	r3, [sp, #4]
   1696c:	mov	r3, #0
   16970:	str	r3, [sp]
   16974:	ldr	r3, [fp, #-152]	; 0xffffff68
   16978:	ldr	r2, [fp, #-156]	; 0xffffff64
   1697c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16980:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16984:	bl	17224 <argp_parse@@Base+0xdbc>
   16988:	mov	r5, r0
   1698c:	ldr	r4, [fp, #-148]	; 0xffffff6c
   16990:	str	r4, [fp, #-84]	; 0xffffffac
   16994:	cmn	r5, #1
   16998:	beq	16aa8 <argp_parse@@Base+0x640>
   1699c:	cmp	r5, #63	; 0x3f
   169a0:	beq	16ad8 <argp_parse@@Base+0x670>
   169a4:	cmp	r5, #1
   169a8:	beq	16a54 <argp_parse@@Base+0x5ec>
   169ac:	ldr	r4, [fp, #-136]	; 0xffffff78
   169b0:	asrs	r3, r5, #24
   169b4:	beq	16ae8 <argp_parse@@Base+0x680>
   169b8:	ands	r1, r5, #8388608	; 0x800000
   169bc:	movne	r1, #-16777216	; 0xff000000
   169c0:	bic	r2, r5, #-16777216	; 0xff000000
   169c4:	add	r0, r3, r3, lsl #3
   169c8:	lsl	r0, r0, #2
   169cc:	sub	r0, r0, #36	; 0x24
   169d0:	mov	r3, r4
   169d4:	orr	r2, r2, r1
   169d8:	sub	r1, fp, #96	; 0x60
   169dc:	ldr	ip, [fp, #-112]	; 0xffffff90
   169e0:	add	r0, ip, r0
   169e4:	bl	15e24 <argp_error@@Base+0x150>
   169e8:	cmp	r0, #7
   169ec:	beq	16cb0 <argp_parse@@Base+0x848>
   169f0:	cmp	r0, #0
   169f4:	bne	16d34 <argp_parse@@Base+0x8cc>
   169f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   169fc:	cmp	r3, #0
   16a00:	beq	16a18 <argp_parse@@Base+0x5b0>
   16a04:	ldr	r2, [fp, #-84]	; 0xffffffac
   16a08:	cmp	r3, r2
   16a0c:	movgt	r3, #0
   16a10:	strgt	r3, [fp, #-72]	; 0xffffffb8
   16a14:	ble	16a24 <argp_parse@@Base+0x5bc>
   16a18:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16a1c:	cmp	r3, #0
   16a20:	bne	16948 <argp_parse@@Base+0x4e0>
   16a24:	ldr	r3, [fp, #-84]	; 0xffffffac
   16a28:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16a2c:	cmp	r3, r2
   16a30:	bge	16fa4 <argp_parse@@Base+0xb3c>
   16a34:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16a38:	tst	r2, #4
   16a3c:	bne	16fac <argp_parse@@Base+0xb44>
   16a40:	add	r2, r3, #1
   16a44:	str	r2, [fp, #-84]	; 0xffffffac
   16a48:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16a4c:	ldr	r3, [r2, r3, lsl #2]
   16a50:	str	r3, [fp, #-136]	; 0xffffff78
   16a54:	ldr	r7, [fp, #-136]	; 0xffffff78
   16a58:	ldr	r4, [fp, #-84]	; 0xffffffac
   16a5c:	sub	r4, r4, #1
   16a60:	str	r4, [fp, #-84]	; 0xffffffac
   16a64:	ldr	r5, [fp, #-112]	; 0xffffff90
   16a68:	ldr	r3, [fp, #-108]	; 0xffffff94
   16a6c:	cmp	r3, r5
   16a70:	bls	16d2c <argp_parse@@Base+0x8c4>
   16a74:	mov	r6, #0
   16a78:	b	16ba8 <argp_parse@@Base+0x740>
   16a7c:	sub	r3, fp, #148	; 0x94
   16a80:	str	r3, [sp, #4]
   16a84:	mov	r3, #0
   16a88:	str	r3, [sp]
   16a8c:	ldr	r3, [fp, #-152]	; 0xffffff68
   16a90:	ldr	r2, [fp, #-156]	; 0xffffff64
   16a94:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16a98:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16a9c:	bl	171c8 <argp_parse@@Base+0xd60>
   16aa0:	mov	r5, r0
   16aa4:	b	1698c <argp_parse@@Base+0x524>
   16aa8:	mov	r3, #0
   16aac:	str	r3, [fp, #-100]	; 0xffffff9c
   16ab0:	cmp	r4, #1
   16ab4:	ble	16a24 <argp_parse@@Base+0x5bc>
   16ab8:	sub	r3, r4, #-1073741823	; 0xc0000001
   16abc:	mov	r1, sl
   16ac0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16ac4:	ldr	r0, [r2, r3, lsl #2]
   16ac8:	bl	10fd4 <strcmp@plt>
   16acc:	cmp	r0, #0
   16ad0:	streq	r4, [fp, #-72]	; 0xffffffb8
   16ad4:	b	16a24 <argp_parse@@Base+0x5bc>
   16ad8:	ldr	r3, [fp, #-140]	; 0xffffff74
   16adc:	cmn	r3, #1
   16ae0:	bne	16f9c <argp_parse@@Base+0xb34>
   16ae4:	ldr	r4, [fp, #-136]	; 0xffffff78
   16ae8:	mov	r1, r5
   16aec:	ldr	r0, [fp, #-156]	; 0xffffff64
   16af0:	bl	11184 <strchr@plt>
   16af4:	subs	r1, r0, #0
   16af8:	beq	16b48 <argp_parse@@Base+0x6e0>
   16afc:	ldr	r0, [fp, #-112]	; 0xffffff90
   16b00:	ldr	r2, [fp, #-108]	; 0xffffff94
   16b04:	cmp	r2, r0
   16b08:	bls	16b48 <argp_parse@@Base+0x6e0>
   16b0c:	ldr	r3, [r0, #8]
   16b10:	cmp	r1, r3
   16b14:	bcc	16b30 <argp_parse@@Base+0x6c8>
   16b18:	add	r0, r0, #36	; 0x24
   16b1c:	cmp	r2, r0
   16b20:	bls	16b48 <argp_parse@@Base+0x6e0>
   16b24:	ldr	r3, [r0, #8]
   16b28:	cmp	r1, r3
   16b2c:	bcs	16b18 <argp_parse@@Base+0x6b0>
   16b30:	mov	r3, r4
   16b34:	mov	r2, r5
   16b38:	sub	r1, fp, #96	; 0x60
   16b3c:	bl	15e24 <argp_error@@Base+0x150>
   16b40:	cmp	r0, #7
   16b44:	bne	169f0 <argp_parse@@Base+0x588>
   16b48:	ldr	r3, [pc, #1128]	; 16fb8 <argp_parse@@Base+0xb50>
   16b4c:	mov	r2, r5
   16b50:	movw	r1, #40072	; 0x9c88
   16b54:	movt	r1, #1
   16b58:	sub	r0, fp, #96	; 0x60
   16b5c:	bl	15cd4 <argp_error@@Base>
   16b60:	b	16be8 <argp_parse@@Base+0x780>
   16b64:	ldr	r3, [fp, #-84]	; 0xffffffac
   16b68:	sub	r3, r3, #1
   16b6c:	str	r3, [fp, #-84]	; 0xffffffac
   16b70:	mov	r3, r6
   16b74:	mov	r2, r9
   16b78:	sub	r1, fp, #96	; 0x60
   16b7c:	mov	r0, r5
   16b80:	bl	15e24 <argp_error@@Base+0x150>
   16b84:	add	r5, r5, #36	; 0x24
   16b88:	ldr	r2, [fp, #-108]	; 0xffffff94
   16b8c:	cmp	r5, r2
   16b90:	movcs	r3, #0
   16b94:	movcc	r3, #1
   16b98:	cmp	r0, #7
   16b9c:	movne	r3, #0
   16ba0:	cmp	r3, #0
   16ba4:	beq	16c78 <argp_parse@@Base+0x810>
   16ba8:	ldr	r3, [fp, #-84]	; 0xffffffac
   16bac:	add	r3, r3, #1
   16bb0:	str	r3, [fp, #-84]	; 0xffffffac
   16bb4:	mov	r3, r7
   16bb8:	mov	r2, r6
   16bbc:	sub	r1, fp, #96	; 0x60
   16bc0:	mov	r0, r5
   16bc4:	bl	15e24 <argp_error@@Base+0x150>
   16bc8:	cmp	r0, #7
   16bcc:	beq	16b64 <argp_parse@@Base+0x6fc>
   16bd0:	add	r5, r5, #36	; 0x24
   16bd4:	cmp	r0, #0
   16bd8:	beq	16c88 <argp_parse@@Base+0x820>
   16bdc:	cmp	r0, #7
   16be0:	bne	169f0 <argp_parse@@Base+0x588>
   16be4:	mov	r5, #1
   16be8:	add	r5, r5, #1
   16bec:	bics	r3, r5, #2
   16bf0:	moveq	r3, #1
   16bf4:	movne	r3, #0
   16bf8:	cmp	r3, #0
   16bfc:	beq	16f40 <argp_parse@@Base+0xad8>
   16c00:	ldr	r3, [fp, #-84]	; 0xffffffac
   16c04:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16c08:	cmp	r3, r2
   16c0c:	beq	16df4 <argp_parse@@Base+0x98c>
   16c10:	ldr	r2, [fp, #4]
   16c14:	cmp	r2, #0
   16c18:	strne	r3, [r2]
   16c1c:	beq	16f18 <argp_parse@@Base+0xab0>
   16c20:	ldr	r5, [fp, #-108]	; 0xffffff94
   16c24:	sub	r5, r5, #36	; 0x24
   16c28:	ldr	r3, [fp, #-112]	; 0xffffff90
   16c2c:	cmp	r5, r3
   16c30:	bcc	16f80 <argp_parse@@Base+0xb18>
   16c34:	mov	r6, #4
   16c38:	movt	r6, #256	; 0x100
   16c3c:	mov	r7, #0
   16c40:	mov	r3, r7
   16c44:	mov	r2, r6
   16c48:	sub	r1, fp, #96	; 0x60
   16c4c:	mov	r0, r5
   16c50:	bl	15e24 <argp_error@@Base+0x150>
   16c54:	sub	r5, r5, #36	; 0x24
   16c58:	ldr	r3, [fp, #-112]	; 0xffffff90
   16c5c:	cmp	r5, r3
   16c60:	bcc	16f58 <argp_parse@@Base+0xaf0>
   16c64:	cmp	r0, #7
   16c68:	cmpne	r0, #0
   16c6c:	beq	16c40 <argp_parse@@Base+0x7d8>
   16c70:	mov	r4, r0
   16c74:	b	16f68 <argp_parse@@Base+0xb00>
   16c78:	cmp	r0, #0
   16c7c:	bne	16bdc <argp_parse@@Base+0x774>
   16c80:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16c84:	str	r3, [fp, #-84]	; 0xffffffac
   16c88:	ldr	r3, [fp, #-84]	; 0xffffffac
   16c8c:	cmp	r4, r3
   16c90:	movge	r3, #1
   16c94:	strge	r3, [fp, #-100]	; 0xffffff9c
   16c98:	bge	169f8 <argp_parse@@Base+0x590>
   16c9c:	sub	r4, r3, r4
   16ca0:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16ca4:	add	r4, r3, r4
   16ca8:	str	r4, [r5, #-24]	; 0xffffffe8
   16cac:	b	169f8 <argp_parse@@Base+0x590>
   16cb0:	ldr	r3, [fp, #-152]	; 0xffffff68
   16cb4:	ldr	r2, [r3, #12]
   16cb8:	cmp	r2, r5
   16cbc:	beq	16cf4 <argp_parse@@Base+0x88c>
   16cc0:	ldr	r2, [r3]
   16cc4:	cmp	r2, #0
   16cc8:	beq	16d20 <argp_parse@@Base+0x8b8>
   16ccc:	add	r3, r3, #16
   16cd0:	ldr	r2, [r3, #12]
   16cd4:	cmp	r5, r2
   16cd8:	beq	16cf4 <argp_parse@@Base+0x88c>
   16cdc:	ldr	r2, [r3]
   16ce0:	cmp	r2, #0
   16ce4:	bne	16ccc <argp_parse@@Base+0x864>
   16ce8:	movw	r2, #40064	; 0x9c80
   16cec:	movt	r2, #1
   16cf0:	b	16d08 <argp_parse@@Base+0x8a0>
   16cf4:	ldr	r2, [r3]
   16cf8:	movw	r3, #40064	; 0x9c80
   16cfc:	movt	r3, #1
   16d00:	cmp	r2, #0
   16d04:	moveq	r2, r3
   16d08:	ldr	r3, [pc, #680]	; 16fb8 <argp_parse@@Base+0xb50>
   16d0c:	movw	r1, #40080	; 0x9c90
   16d10:	movt	r1, #1
   16d14:	sub	r0, fp, #96	; 0x60
   16d18:	bl	15cd4 <argp_error@@Base>
   16d1c:	b	16be8 <argp_parse@@Base+0x780>
   16d20:	movw	r2, #40064	; 0x9c80
   16d24:	movt	r2, #1
   16d28:	b	16d08 <argp_parse@@Base+0x8a0>
   16d2c:	mov	r5, #1
   16d30:	b	16be8 <argp_parse@@Base+0x780>
   16d34:	mov	r4, r0
   16d38:	cmp	r4, #7
   16d3c:	beq	16f40 <argp_parse@@Base+0xad8>
   16d40:	ldr	r5, [fp, #-112]	; 0xffffff90
   16d44:	ldr	r3, [fp, #-108]	; 0xffffff94
   16d48:	cmp	r5, r3
   16d4c:	bcs	16d80 <argp_parse@@Base+0x918>
   16d50:	mov	r6, #5
   16d54:	movt	r6, #256	; 0x100
   16d58:	mov	r7, #0
   16d5c:	mov	r3, r7
   16d60:	mov	r2, r6
   16d64:	sub	r1, fp, #96	; 0x60
   16d68:	mov	r0, r5
   16d6c:	bl	15e24 <argp_error@@Base+0x150>
   16d70:	add	r5, r5, #36	; 0x24
   16d74:	ldr	r3, [fp, #-108]	; 0xffffff94
   16d78:	cmp	r5, r3
   16d7c:	bcc	16d5c <argp_parse@@Base+0x8f4>
   16d80:	ldr	r5, [fp, #-108]	; 0xffffff94
   16d84:	sub	r5, r5, #36	; 0x24
   16d88:	ldr	r3, [fp, #-112]	; 0xffffff90
   16d8c:	cmp	r3, r5
   16d90:	bhi	16dc4 <argp_parse@@Base+0x95c>
   16d94:	mov	r6, #7
   16d98:	movt	r6, #256	; 0x100
   16d9c:	mov	r7, #0
   16da0:	mov	r3, r7
   16da4:	mov	r2, r6
   16da8:	sub	r1, fp, #96	; 0x60
   16dac:	mov	r0, r5
   16db0:	bl	15e24 <argp_error@@Base+0x150>
   16db4:	sub	r5, r5, #36	; 0x24
   16db8:	ldr	r3, [fp, #-112]	; 0xffffff90
   16dbc:	cmp	r5, r3
   16dc0:	bcs	16da0 <argp_parse@@Base+0x938>
   16dc4:	cmp	r4, #7
   16dc8:	moveq	r4, #22
   16dcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16dd0:	bl	17140 <argp_parse@@Base+0xcd8>
   16dd4:	mov	r0, r4
   16dd8:	sub	sp, fp, #32
   16ddc:	ldrd	r4, [sp]
   16de0:	ldrd	r6, [sp, #8]
   16de4:	ldrd	r8, [sp, #16]
   16de8:	ldrd	sl, [sp, #24]
   16dec:	add	sp, sp, #32
   16df0:	pop	{pc}		; (ldr pc, [sp], #4)
   16df4:	ldr	r6, [fp, #-112]	; 0xffffff90
   16df8:	ldr	r5, [fp, #-108]	; 0xffffff94
   16dfc:	cmp	r5, r6
   16e00:	bls	16f88 <argp_parse@@Base+0xb20>
   16e04:	mov	r4, #0
   16e08:	mov	r7, #2
   16e0c:	movt	r7, #256	; 0x100
   16e10:	mov	r8, r4
   16e14:	mov	r0, r4
   16e18:	b	16e38 <argp_parse@@Base+0x9d0>
   16e1c:	add	r6, r6, #36	; 0x24
   16e20:	ldr	r5, [fp, #-108]	; 0xffffff94
   16e24:	cmp	r6, r5
   16e28:	bcs	16e74 <argp_parse@@Base+0xa0c>
   16e2c:	cmp	r0, #7
   16e30:	cmpne	r0, #0
   16e34:	bne	16e5c <argp_parse@@Base+0x9f4>
   16e38:	ldr	r3, [r6, #12]
   16e3c:	cmp	r3, #0
   16e40:	bne	16e1c <argp_parse@@Base+0x9b4>
   16e44:	mov	r3, r8
   16e48:	mov	r2, r7
   16e4c:	sub	r1, fp, #96	; 0x60
   16e50:	mov	r0, r6
   16e54:	bl	15e24 <argp_error@@Base+0x150>
   16e58:	b	16e1c <argp_parse@@Base+0x9b4>
   16e5c:	mov	r4, r0
   16e60:	sub	r5, r5, #36	; 0x24
   16e64:	ldr	r3, [fp, #-112]	; 0xffffff90
   16e68:	cmp	r3, r5
   16e6c:	bls	16e88 <argp_parse@@Base+0xa20>
   16e70:	b	16ed4 <argp_parse@@Base+0xa6c>
   16e74:	mov	r4, r0
   16e78:	sub	r5, r5, #36	; 0x24
   16e7c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16e80:	cmp	r3, r5
   16e84:	bhi	16efc <argp_parse@@Base+0xa94>
   16e88:	cmp	r4, #7
   16e8c:	cmpne	r4, #0
   16e90:	bne	16ed4 <argp_parse@@Base+0xa6c>
   16e94:	mov	r6, #1
   16e98:	movt	r6, #256	; 0x100
   16e9c:	mov	r7, #0
   16ea0:	mov	r3, r7
   16ea4:	mov	r2, r6
   16ea8:	sub	r1, fp, #96	; 0x60
   16eac:	mov	r0, r5
   16eb0:	bl	15e24 <argp_error@@Base+0x150>
   16eb4:	sub	r5, r5, #36	; 0x24
   16eb8:	ldr	r3, [fp, #-112]	; 0xffffff90
   16ebc:	cmp	r5, r3
   16ec0:	bcc	16ef8 <argp_parse@@Base+0xa90>
   16ec4:	cmp	r0, #7
   16ec8:	cmpne	r0, #0
   16ecc:	beq	16ea0 <argp_parse@@Base+0xa38>
   16ed0:	mov	r4, r0
   16ed4:	ldr	r3, [fp, #4]
   16ed8:	cmp	r3, #0
   16edc:	beq	16eec <argp_parse@@Base+0xa84>
   16ee0:	ldr	r3, [fp, #-84]	; 0xffffffac
   16ee4:	ldr	r2, [fp, #4]
   16ee8:	str	r3, [r2]
   16eec:	cmp	r4, #0
   16ef0:	beq	16c20 <argp_parse@@Base+0x7b8>
   16ef4:	b	16d38 <argp_parse@@Base+0x8d0>
   16ef8:	mov	r4, r0
   16efc:	cmp	r4, #7
   16f00:	bne	16ed4 <argp_parse@@Base+0xa6c>
   16f04:	ldr	r3, [fp, #4]
   16f08:	cmp	r3, #0
   16f0c:	movne	r4, #0
   16f10:	bne	16ee0 <argp_parse@@Base+0xa78>
   16f14:	b	16c20 <argp_parse@@Base+0x7b8>
   16f18:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16f1c:	tst	r3, #2
   16f20:	bne	16f40 <argp_parse@@Base+0xad8>
   16f24:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16f28:	cmp	r0, #0
   16f2c:	beq	16f40 <argp_parse@@Base+0xad8>
   16f30:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16f34:	movw	r1, #40092	; 0x9c9c
   16f38:	movt	r1, #1
   16f3c:	bl	11190 <fprintf@plt>
   16f40:	mov	r2, #260	; 0x104
   16f44:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16f48:	sub	r0, fp, #96	; 0x60
   16f4c:	bl	15c0c <argp_state_help@@Base>
   16f50:	mov	r4, #7
   16f54:	b	16d40 <argp_parse@@Base+0x8d8>
   16f58:	mov	r4, r0
   16f5c:	cmp	r0, #7
   16f60:	movne	r4, r0
   16f64:	moveq	r4, #0
   16f68:	ldr	r5, [fp, #-108]	; 0xffffff94
   16f6c:	sub	r5, r5, #36	; 0x24
   16f70:	ldr	r3, [fp, #-112]	; 0xffffff90
   16f74:	cmp	r3, r5
   16f78:	bls	16d94 <argp_parse@@Base+0x92c>
   16f7c:	b	16dcc <argp_parse@@Base+0x964>
   16f80:	mov	r4, #0
   16f84:	b	16dcc <argp_parse@@Base+0x964>
   16f88:	sub	r5, r5, #36	; 0x24
   16f8c:	cmp	r5, r6
   16f90:	movcc	r4, #0
   16f94:	bcs	16e94 <argp_parse@@Base+0xa2c>
   16f98:	b	16ed4 <argp_parse@@Base+0xa6c>
   16f9c:	mov	r3, #0
   16fa0:	b	16bf8 <argp_parse@@Base+0x790>
   16fa4:	mov	r3, #1
   16fa8:	b	16bf8 <argp_parse@@Base+0x790>
   16fac:	mov	r3, #1
   16fb0:	b	16bf8 <argp_parse@@Base+0x790>
   16fb4:	andeq	r9, r1, r4, asr fp
   16fb8:	andeq	r9, r1, r0, ror fp
   16fbc:	cmp	r1, #0
   16fc0:	beq	1700c <argp_parse@@Base+0xba4>
   16fc4:	ldr	r2, [r1, #52]	; 0x34
   16fc8:	ldr	r3, [r2, #48]	; 0x30
   16fcc:	ldr	r1, [r2, #52]	; 0x34
   16fd0:	cmp	r3, r1
   16fd4:	bcs	17014 <argp_parse@@Base+0xbac>
   16fd8:	ldr	r2, [r3, #4]
   16fdc:	cmp	r0, r2
   16fe0:	beq	16ffc <argp_parse@@Base+0xb94>
   16fe4:	add	r3, r3, #36	; 0x24
   16fe8:	cmp	r3, r1
   16fec:	bcs	17004 <argp_parse@@Base+0xb9c>
   16ff0:	ldr	r2, [r3, #4]
   16ff4:	cmp	r2, r0
   16ff8:	bne	16fe4 <argp_parse@@Base+0xb7c>
   16ffc:	ldr	r0, [r3, #24]
   17000:	bx	lr
   17004:	mov	r0, #0
   17008:	bx	lr
   1700c:	mov	r0, r1
   17010:	bx	lr
   17014:	mov	r0, #0
   17018:	bx	lr
   1701c:	push	{lr}		; (str lr, [sp, #-4]!)
   17020:	sub	sp, sp, #12
   17024:	movw	r1, #45768	; 0xb2c8
   17028:	movt	r1, #2
   1702c:	ldr	r3, [r1, #4]
   17030:	str	r3, [sp]
   17034:	movw	r3, #40308	; 0x9d74
   17038:	movt	r3, #1
   1703c:	movw	r2, #40324	; 0x9d84
   17040:	movt	r2, #1
   17044:	ldr	r1, [r1]
   17048:	bl	17630 <argp_parse@@Base+0x11c8>
   1704c:	add	sp, sp, #12
   17050:	pop	{pc}		; (ldr pc, [sp], #4)
   17054:	movw	r3, #45764	; 0xb2c4
   17058:	movt	r3, #2
   1705c:	movw	r2, #28700	; 0x701c
   17060:	movt	r2, #1
   17064:	str	r2, [r3]
   17068:	movw	r3, #45768	; 0xb2c8
   1706c:	movt	r3, #2
   17070:	str	r0, [r3]
   17074:	str	r1, [r3, #4]
   17078:	bx	lr
   1707c:	ldrb	r3, [r0]
   17080:	cmp	r3, #47	; 0x2f
   17084:	bne	17094 <argp_parse@@Base+0xc2c>
   17088:	ldrb	r3, [r0, #1]!
   1708c:	cmp	r3, #47	; 0x2f
   17090:	beq	17088 <argp_parse@@Base+0xc20>
   17094:	ldrb	r2, [r0]
   17098:	cmp	r2, #0
   1709c:	bxeq	lr
   170a0:	push	{lr}		; (str lr, [sp, #-4]!)
   170a4:	mov	r1, r0
   170a8:	mov	r3, #0
   170ac:	mov	lr, #1
   170b0:	mov	ip, r3
   170b4:	b	170d0 <argp_parse@@Base+0xc68>
   170b8:	cmp	r3, #0
   170bc:	movne	r0, r1
   170c0:	movne	r3, ip
   170c4:	ldrb	r2, [r1, #1]!
   170c8:	cmp	r2, #0
   170cc:	beq	170e0 <argp_parse@@Base+0xc78>
   170d0:	cmp	r2, #47	; 0x2f
   170d4:	moveq	r3, lr
   170d8:	bne	170b8 <argp_parse@@Base+0xc50>
   170dc:	b	170c4 <argp_parse@@Base+0xc5c>
   170e0:	pop	{pc}		; (ldr pc, [sp], #4)
   170e4:	str	r4, [sp, #-8]!
   170e8:	str	lr, [sp, #4]
   170ec:	mov	r4, r0
   170f0:	bl	11178 <strlen@plt>
   170f4:	cmp	r0, #1
   170f8:	bls	17118 <argp_parse@@Base+0xcb0>
   170fc:	add	r3, r4, r0
   17100:	ldrb	r3, [r3, #-1]
   17104:	cmp	r3, #47	; 0x2f
   17108:	subeq	r0, r0, #2
   1710c:	addeq	r3, r4, r0
   17110:	rsbeq	r1, r4, #1
   17114:	beq	17124 <argp_parse@@Base+0xcbc>
   17118:	ldr	r4, [sp]
   1711c:	add	sp, sp, #4
   17120:	pop	{pc}		; (ldr pc, [sp], #4)
   17124:	add	r0, r1, r3
   17128:	cmp	r3, r4
   1712c:	beq	17118 <argp_parse@@Base+0xcb0>
   17130:	ldrb	r2, [r3], #-1
   17134:	cmp	r2, #47	; 0x2f
   17138:	bne	17118 <argp_parse@@Base+0xcb0>
   1713c:	b	17124 <argp_parse@@Base+0xcbc>
   17140:	strd	r4, [sp, #-12]!
   17144:	str	lr, [sp, #8]
   17148:	sub	sp, sp, #12
   1714c:	mov	r5, r0
   17150:	bl	1119c <__errno_location@plt>
   17154:	mov	r4, r0
   17158:	ldr	r3, [r0]
   1715c:	str	r3, [sp]
   17160:	str	r3, [sp, #4]
   17164:	mov	r3, #0
   17168:	str	r3, [r0]
   1716c:	mov	r0, r5
   17170:	bl	11034 <free@plt>
   17174:	ldr	r3, [r4]
   17178:	clz	r3, r3
   1717c:	lsr	r3, r3, #5
   17180:	add	r2, sp, #8
   17184:	add	r3, r2, r3, lsl #2
   17188:	ldr	r3, [r3, #-8]
   1718c:	str	r3, [r4]
   17190:	add	sp, sp, #12
   17194:	ldrd	r4, [sp]
   17198:	add	sp, sp, #8
   1719c:	pop	{pc}		; (ldr pc, [sp], #4)
   171a0:	push	{lr}		; (str lr, [sp, #-4]!)
   171a4:	sub	sp, sp, #20
   171a8:	mov	ip, #0
   171ac:	str	ip, [sp, #8]
   171b0:	str	ip, [sp, #4]
   171b4:	ldr	ip, [sp, #24]
   171b8:	str	ip, [sp]
   171bc:	bl	190f8 <argp_parse@@Base+0x2c90>
   171c0:	add	sp, sp, #20
   171c4:	pop	{pc}		; (ldr pc, [sp], #4)
   171c8:	push	{lr}		; (str lr, [sp, #-4]!)
   171cc:	sub	sp, sp, #20
   171d0:	mov	ip, #0
   171d4:	str	ip, [sp, #12]
   171d8:	ldr	lr, [sp, #28]
   171dc:	str	lr, [sp, #8]
   171e0:	str	ip, [sp, #4]
   171e4:	ldr	ip, [sp, #24]
   171e8:	str	ip, [sp]
   171ec:	bl	18b3c <argp_parse@@Base+0x26d4>
   171f0:	add	sp, sp, #20
   171f4:	pop	{pc}		; (ldr pc, [sp], #4)
   171f8:	push	{lr}		; (str lr, [sp, #-4]!)
   171fc:	sub	sp, sp, #20
   17200:	mov	ip, #0
   17204:	str	ip, [sp, #8]
   17208:	mov	ip, #1
   1720c:	str	ip, [sp, #4]
   17210:	ldr	ip, [sp, #24]
   17214:	str	ip, [sp]
   17218:	bl	190f8 <argp_parse@@Base+0x2c90>
   1721c:	add	sp, sp, #20
   17220:	pop	{pc}		; (ldr pc, [sp], #4)
   17224:	push	{lr}		; (str lr, [sp, #-4]!)
   17228:	sub	sp, sp, #20
   1722c:	mov	ip, #0
   17230:	str	ip, [sp, #12]
   17234:	ldr	ip, [sp, #28]
   17238:	str	ip, [sp, #8]
   1723c:	mov	ip, #1
   17240:	str	ip, [sp, #4]
   17244:	ldr	ip, [sp, #24]
   17248:	str	ip, [sp]
   1724c:	bl	18b3c <argp_parse@@Base+0x26d4>
   17250:	add	sp, sp, #20
   17254:	pop	{pc}		; (ldr pc, [sp], #4)
   17258:	strd	r4, [sp, #-16]!
   1725c:	str	r6, [sp, #8]
   17260:	str	lr, [sp, #12]
   17264:	subs	r4, r0, #0
   17268:	beq	17304 <argp_parse@@Base+0xe9c>
   1726c:	mov	r1, #47	; 0x2f
   17270:	mov	r0, r4
   17274:	bl	11208 <strrchr@plt>
   17278:	subs	r5, r0, #0
   1727c:	beq	172dc <argp_parse@@Base+0xe74>
   17280:	add	r6, r5, #1
   17284:	sub	r3, r6, r4
   17288:	cmp	r3, #6
   1728c:	ble	172dc <argp_parse@@Base+0xe74>
   17290:	mov	r2, #7
   17294:	movw	r1, #40396	; 0x9dcc
   17298:	movt	r1, #1
   1729c:	sub	r0, r5, #6
   172a0:	bl	11280 <strncmp@plt>
   172a4:	cmp	r0, #0
   172a8:	bne	172dc <argp_parse@@Base+0xe74>
   172ac:	mov	r2, #3
   172b0:	movw	r1, #40404	; 0x9dd4
   172b4:	movt	r1, #1
   172b8:	mov	r0, r6
   172bc:	bl	11280 <strncmp@plt>
   172c0:	cmp	r0, #0
   172c4:	movne	r4, r6
   172c8:	bne	172dc <argp_parse@@Base+0xe74>
   172cc:	add	r4, r5, #4
   172d0:	movw	r3, #45712	; 0xb290
   172d4:	movt	r3, #2
   172d8:	str	r4, [r3]
   172dc:	movw	r3, #45776	; 0xb2d0
   172e0:	movt	r3, #2
   172e4:	str	r4, [r3]
   172e8:	movw	r3, #45716	; 0xb294
   172ec:	movt	r3, #2
   172f0:	str	r4, [r3]
   172f4:	ldrd	r4, [sp]
   172f8:	ldr	r6, [sp, #8]
   172fc:	add	sp, sp, #12
   17300:	pop	{pc}		; (ldr pc, [sp], #4)
   17304:	movw	r3, #45720	; 0xb298
   17308:	movt	r3, #2
   1730c:	ldr	r3, [r3]
   17310:	mov	r2, #55	; 0x37
   17314:	mov	r1, #1
   17318:	movw	r0, #40340	; 0x9d94
   1731c:	movt	r0, #1
   17320:	bl	110d0 <fwrite@plt>
   17324:	bl	1128c <abort@plt>
   17328:	strd	r4, [sp, #-16]!
   1732c:	str	r6, [sp, #8]
   17330:	str	lr, [sp, #12]
   17334:	sub	sp, sp, #32
   17338:	mov	r4, r0
   1733c:	ldr	r5, [sp, #48]	; 0x30
   17340:	ldr	r6, [sp, #52]	; 0x34
   17344:	cmp	r1, #0
   17348:	beq	173e4 <argp_parse@@Base+0xf7c>
   1734c:	str	r3, [sp]
   17350:	mov	r3, r2
   17354:	mov	r2, r1
   17358:	movw	r1, #40408	; 0x9dd8
   1735c:	movt	r1, #1
   17360:	bl	11190 <fprintf@plt>
   17364:	movw	r3, #2022	; 0x7e6
   17368:	movw	r2, #40428	; 0x9dec
   1736c:	movt	r2, #1
   17370:	movw	r1, #41196	; 0xa0ec
   17374:	movt	r1, #1
   17378:	mov	r0, r4
   1737c:	bl	11190 <fprintf@plt>
   17380:	mov	r1, r4
   17384:	mov	r0, #10
   17388:	bl	11220 <fputc@plt>
   1738c:	movw	r2, #40432	; 0x9df0
   17390:	movt	r2, #1
   17394:	movw	r1, #40468	; 0x9e14
   17398:	movt	r1, #1
   1739c:	mov	r0, r4
   173a0:	bl	11190 <fprintf@plt>
   173a4:	mov	r1, r4
   173a8:	mov	r0, #10
   173ac:	bl	11220 <fputc@plt>
   173b0:	cmp	r6, #9
   173b4:	ldrls	pc, [pc, r6, lsl #2]
   173b8:	b	175dc <argp_parse@@Base+0x1174>
   173bc:	andeq	r7, r1, r8, lsl #8
   173c0:	strdeq	r7, [r1], -r4
   173c4:	andeq	r7, r1, ip, lsl r4
   173c8:	andeq	r7, r1, r8, lsr r4
   173cc:	andeq	r7, r1, ip, asr r4
   173d0:	andeq	r7, r1, r8, lsl #9
   173d4:			; <UNDEFINED> instruction: 0x000174bc
   173d8:	strdeq	r7, [r1], -r8
   173dc:	andeq	r7, r1, ip, lsr r5
   173e0:	andeq	r7, r1, r8, lsl #11
   173e4:	movw	r1, #40420	; 0x9de4
   173e8:	movt	r1, #1
   173ec:	bl	11190 <fprintf@plt>
   173f0:	b	17364 <argp_parse@@Base+0xefc>
   173f4:	ldr	r2, [r5]
   173f8:	movw	r1, #40640	; 0x9ec0
   173fc:	movt	r1, #1
   17400:	mov	r0, r4
   17404:	bl	11190 <fprintf@plt>
   17408:	add	sp, sp, #32
   1740c:	ldrd	r4, [sp]
   17410:	ldr	r6, [sp, #8]
   17414:	add	sp, sp, #12
   17418:	pop	{pc}		; (ldr pc, [sp], #4)
   1741c:	ldr	r3, [r5, #4]
   17420:	ldr	r2, [r5]
   17424:	movw	r1, #40656	; 0x9ed0
   17428:	movt	r1, #1
   1742c:	mov	r0, r4
   17430:	bl	11190 <fprintf@plt>
   17434:	b	17408 <argp_parse@@Base+0xfa0>
   17438:	ldr	r3, [r5, #8]
   1743c:	str	r3, [sp]
   17440:	ldr	r3, [r5, #4]
   17444:	ldr	r2, [r5]
   17448:	movw	r1, #40680	; 0x9ee8
   1744c:	movt	r1, #1
   17450:	mov	r0, r4
   17454:	bl	11190 <fprintf@plt>
   17458:	b	17408 <argp_parse@@Base+0xfa0>
   1745c:	ldr	r3, [r5, #12]
   17460:	str	r3, [sp, #4]
   17464:	ldr	r3, [r5, #8]
   17468:	str	r3, [sp]
   1746c:	ldr	r3, [r5, #4]
   17470:	ldr	r2, [r5]
   17474:	movw	r1, #40708	; 0x9f04
   17478:	movt	r1, #1
   1747c:	mov	r0, r4
   17480:	bl	11190 <fprintf@plt>
   17484:	b	17408 <argp_parse@@Base+0xfa0>
   17488:	ldr	r3, [r5, #16]
   1748c:	str	r3, [sp, #8]
   17490:	ldr	r3, [r5, #12]
   17494:	str	r3, [sp, #4]
   17498:	ldr	r3, [r5, #8]
   1749c:	str	r3, [sp]
   174a0:	ldr	r3, [r5, #4]
   174a4:	ldr	r2, [r5]
   174a8:	movw	r1, #40740	; 0x9f24
   174ac:	movt	r1, #1
   174b0:	mov	r0, r4
   174b4:	bl	11190 <fprintf@plt>
   174b8:	b	17408 <argp_parse@@Base+0xfa0>
   174bc:	ldr	r3, [r5, #20]
   174c0:	str	r3, [sp, #12]
   174c4:	ldr	r3, [r5, #16]
   174c8:	str	r3, [sp, #8]
   174cc:	ldr	r3, [r5, #12]
   174d0:	str	r3, [sp, #4]
   174d4:	ldr	r3, [r5, #8]
   174d8:	str	r3, [sp]
   174dc:	ldr	r3, [r5, #4]
   174e0:	ldr	r2, [r5]
   174e4:	movw	r1, #40776	; 0x9f48
   174e8:	movt	r1, #1
   174ec:	mov	r0, r4
   174f0:	bl	11190 <fprintf@plt>
   174f4:	b	17408 <argp_parse@@Base+0xfa0>
   174f8:	ldr	r3, [r5, #24]
   174fc:	str	r3, [sp, #16]
   17500:	ldr	r3, [r5, #20]
   17504:	str	r3, [sp, #12]
   17508:	ldr	r3, [r5, #16]
   1750c:	str	r3, [sp, #8]
   17510:	ldr	r3, [r5, #12]
   17514:	str	r3, [sp, #4]
   17518:	ldr	r3, [r5, #8]
   1751c:	str	r3, [sp]
   17520:	ldr	r3, [r5, #4]
   17524:	ldr	r2, [r5]
   17528:	movw	r1, #40816	; 0x9f70
   1752c:	movt	r1, #1
   17530:	mov	r0, r4
   17534:	bl	11190 <fprintf@plt>
   17538:	b	17408 <argp_parse@@Base+0xfa0>
   1753c:	ldr	r3, [r5, #28]
   17540:	str	r3, [sp, #20]
   17544:	ldr	r3, [r5, #24]
   17548:	str	r3, [sp, #16]
   1754c:	ldr	r3, [r5, #20]
   17550:	str	r3, [sp, #12]
   17554:	ldr	r3, [r5, #16]
   17558:	str	r3, [sp, #8]
   1755c:	ldr	r3, [r5, #12]
   17560:	str	r3, [sp, #4]
   17564:	ldr	r3, [r5, #8]
   17568:	str	r3, [sp]
   1756c:	ldr	r3, [r5, #4]
   17570:	ldr	r2, [r5]
   17574:	movw	r1, #40860	; 0x9f9c
   17578:	movt	r1, #1
   1757c:	mov	r0, r4
   17580:	bl	11190 <fprintf@plt>
   17584:	b	17408 <argp_parse@@Base+0xfa0>
   17588:	ldr	r3, [r5, #32]
   1758c:	str	r3, [sp, #24]
   17590:	ldr	r3, [r5, #28]
   17594:	str	r3, [sp, #20]
   17598:	ldr	r3, [r5, #24]
   1759c:	str	r3, [sp, #16]
   175a0:	ldr	r3, [r5, #20]
   175a4:	str	r3, [sp, #12]
   175a8:	ldr	r3, [r5, #16]
   175ac:	str	r3, [sp, #8]
   175b0:	ldr	r3, [r5, #12]
   175b4:	str	r3, [sp, #4]
   175b8:	ldr	r3, [r5, #8]
   175bc:	str	r3, [sp]
   175c0:	ldr	r3, [r5, #4]
   175c4:	ldr	r2, [r5]
   175c8:	movw	r1, #40908	; 0x9fcc
   175cc:	movt	r1, #1
   175d0:	mov	r0, r4
   175d4:	bl	11190 <fprintf@plt>
   175d8:	b	17408 <argp_parse@@Base+0xfa0>
   175dc:	ldr	r3, [r5, #32]
   175e0:	str	r3, [sp, #24]
   175e4:	ldr	r3, [r5, #28]
   175e8:	str	r3, [sp, #20]
   175ec:	ldr	r3, [r5, #24]
   175f0:	str	r3, [sp, #16]
   175f4:	ldr	r3, [r5, #20]
   175f8:	str	r3, [sp, #12]
   175fc:	ldr	r3, [r5, #16]
   17600:	str	r3, [sp, #8]
   17604:	ldr	r3, [r5, #12]
   17608:	str	r3, [sp, #4]
   1760c:	ldr	r3, [r5, #8]
   17610:	str	r3, [sp]
   17614:	ldr	r3, [r5, #4]
   17618:	ldr	r2, [r5]
   1761c:	movw	r1, #40960	; 0xa000
   17620:	movt	r1, #1
   17624:	mov	r0, r4
   17628:	bl	11190 <fprintf@plt>
   1762c:	b	17408 <argp_parse@@Base+0xfa0>
   17630:	strd	r4, [sp, #-12]!
   17634:	str	lr, [sp, #8]
   17638:	sub	sp, sp, #12
   1763c:	ldr	r5, [sp, #24]
   17640:	ldr	ip, [r5]
   17644:	cmp	ip, #0
   17648:	beq	17680 <argp_parse@@Base+0x1218>
   1764c:	mov	lr, r5
   17650:	mov	ip, #0
   17654:	add	ip, ip, #1
   17658:	ldr	r4, [lr, #4]!
   1765c:	cmp	r4, #0
   17660:	bne	17654 <argp_parse@@Base+0x11ec>
   17664:	str	ip, [sp, #4]
   17668:	str	r5, [sp]
   1766c:	bl	17328 <argp_parse@@Base+0xec0>
   17670:	add	sp, sp, #12
   17674:	ldrd	r4, [sp]
   17678:	add	sp, sp, #8
   1767c:	pop	{pc}		; (ldr pc, [sp], #4)
   17680:	mov	ip, #0
   17684:	b	17664 <argp_parse@@Base+0x11fc>
   17688:	strd	r4, [sp, #-12]!
   1768c:	str	lr, [sp, #8]
   17690:	sub	sp, sp, #52	; 0x34
   17694:	ldr	r5, [sp, #64]	; 0x40
   17698:	add	r4, sp, #8
   1769c:	mov	ip, #0
   176a0:	ldr	lr, [r5], #4
   176a4:	str	lr, [r4], #4
   176a8:	cmp	lr, #0
   176ac:	beq	176bc <argp_parse@@Base+0x1254>
   176b0:	add	ip, ip, #1
   176b4:	cmp	ip, #10
   176b8:	bne	176a0 <argp_parse@@Base+0x1238>
   176bc:	str	ip, [sp, #4]
   176c0:	add	ip, sp, #8
   176c4:	str	ip, [sp]
   176c8:	bl	17328 <argp_parse@@Base+0xec0>
   176cc:	add	sp, sp, #52	; 0x34
   176d0:	ldrd	r4, [sp]
   176d4:	add	sp, sp, #8
   176d8:	pop	{pc}		; (ldr pc, [sp], #4)
   176dc:	push	{r3}		; (str r3, [sp, #-4]!)
   176e0:	push	{lr}		; (str lr, [sp, #-4]!)
   176e4:	sub	sp, sp, #16
   176e8:	add	r3, sp, #24
   176ec:	str	r3, [sp, #12]
   176f0:	str	r3, [sp]
   176f4:	ldr	r3, [sp, #20]
   176f8:	bl	17688 <argp_parse@@Base+0x1220>
   176fc:	add	sp, sp, #16
   17700:	pop	{lr}		; (ldr lr, [sp], #4)
   17704:	add	sp, sp, #4
   17708:	bx	lr
   1770c:	str	r4, [sp, #-8]!
   17710:	str	lr, [sp, #4]
   17714:	movw	r3, #45724	; 0xb29c
   17718:	movt	r3, #2
   1771c:	ldr	r1, [r3]
   17720:	mov	r0, #10
   17724:	bl	11220 <fputc@plt>
   17728:	movw	r1, #41020	; 0xa03c
   1772c:	movt	r1, #1
   17730:	movw	r0, #41044	; 0xa054
   17734:	movt	r0, #1
   17738:	bl	10ff8 <printf@plt>
   1773c:	movw	r2, #41064	; 0xa068
   17740:	movt	r2, #1
   17744:	movw	r1, #40324	; 0x9d84
   17748:	movt	r1, #1
   1774c:	movw	r0, #41104	; 0xa090
   17750:	movt	r0, #1
   17754:	bl	10ff8 <printf@plt>
   17758:	movw	r1, #41124	; 0xa0a4
   1775c:	movt	r1, #1
   17760:	movw	r0, #41156	; 0xa0c4
   17764:	movt	r0, #1
   17768:	bl	10ff8 <printf@plt>
   1776c:	ldr	r4, [sp]
   17770:	add	sp, sp, #4
   17774:	pop	{pc}		; (ldr pc, [sp], #4)
   17778:	str	r4, [sp, #-8]!
   1777c:	str	lr, [sp, #4]
   17780:	bl	17cb0 <argp_parse@@Base+0x1848>
   17784:	cmp	r0, #0
   17788:	beq	17798 <argp_parse@@Base+0x1330>
   1778c:	ldr	r4, [sp]
   17790:	add	sp, sp, #4
   17794:	pop	{pc}		; (ldr pc, [sp], #4)
   17798:	bl	17c0c <argp_parse@@Base+0x17a4>
   1779c:	str	r4, [sp, #-8]!
   177a0:	str	lr, [sp, #4]
   177a4:	bl	17cb0 <argp_parse@@Base+0x1848>
   177a8:	cmp	r0, #0
   177ac:	beq	177bc <argp_parse@@Base+0x1354>
   177b0:	ldr	r4, [sp]
   177b4:	add	sp, sp, #4
   177b8:	pop	{pc}		; (ldr pc, [sp], #4)
   177bc:	bl	17c0c <argp_parse@@Base+0x17a4>
   177c0:	str	r4, [sp, #-8]!
   177c4:	str	lr, [sp, #4]
   177c8:	bl	17778 <argp_parse@@Base+0x1310>
   177cc:	ldr	r4, [sp]
   177d0:	add	sp, sp, #4
   177d4:	pop	{pc}		; (ldr pc, [sp], #4)
   177d8:	strd	r4, [sp, #-16]!
   177dc:	str	r6, [sp, #8]
   177e0:	str	lr, [sp, #12]
   177e4:	mov	r5, r0
   177e8:	mov	r4, r1
   177ec:	bl	17cec <argp_parse@@Base+0x1884>
   177f0:	cmp	r0, #0
   177f4:	beq	17808 <argp_parse@@Base+0x13a0>
   177f8:	ldrd	r4, [sp]
   177fc:	ldr	r6, [sp, #8]
   17800:	add	sp, sp, #12
   17804:	pop	{pc}		; (ldr pc, [sp], #4)
   17808:	adds	r4, r4, #0
   1780c:	movne	r4, #1
   17810:	cmp	r5, #0
   17814:	moveq	r4, #1
   17818:	cmp	r4, #0
   1781c:	beq	177f8 <argp_parse@@Base+0x1390>
   17820:	bl	17c0c <argp_parse@@Base+0x17a4>
   17824:	str	r4, [sp, #-8]!
   17828:	str	lr, [sp, #4]
   1782c:	cmp	r1, #0
   17830:	orreq	r1, r1, #1
   17834:	bl	17cec <argp_parse@@Base+0x1884>
   17838:	cmp	r0, #0
   1783c:	beq	1784c <argp_parse@@Base+0x13e4>
   17840:	ldr	r4, [sp]
   17844:	add	sp, sp, #4
   17848:	pop	{pc}		; (ldr pc, [sp], #4)
   1784c:	bl	17c0c <argp_parse@@Base+0x17a4>
   17850:	strd	r4, [sp, #-16]!
   17854:	str	r6, [sp, #8]
   17858:	str	lr, [sp, #12]
   1785c:	mov	r4, r0
   17860:	mov	r6, r1
   17864:	mov	r5, r2
   17868:	bl	1919c <argp_parse@@Base+0x2d34>
   1786c:	cmp	r0, #0
   17870:	beq	17884 <argp_parse@@Base+0x141c>
   17874:	ldrd	r4, [sp]
   17878:	ldr	r6, [sp, #8]
   1787c:	add	sp, sp, #12
   17880:	pop	{pc}		; (ldr pc, [sp], #4)
   17884:	cmp	r4, #0
   17888:	beq	17898 <argp_parse@@Base+0x1430>
   1788c:	cmp	r6, #0
   17890:	cmpne	r5, #0
   17894:	beq	17874 <argp_parse@@Base+0x140c>
   17898:	bl	17c0c <argp_parse@@Base+0x17a4>
   1789c:	str	r4, [sp, #-8]!
   178a0:	str	lr, [sp, #4]
   178a4:	bl	17850 <argp_parse@@Base+0x13e8>
   178a8:	ldr	r4, [sp]
   178ac:	add	sp, sp, #4
   178b0:	pop	{pc}		; (ldr pc, [sp], #4)
   178b4:	str	r4, [sp, #-8]!
   178b8:	str	lr, [sp, #4]
   178bc:	mov	ip, r1
   178c0:	mov	r3, r2
   178c4:	cmp	r2, #0
   178c8:	cmpne	r1, #0
   178cc:	moveq	r3, #1
   178d0:	moveq	ip, r3
   178d4:	mov	r2, r3
   178d8:	mov	r1, ip
   178dc:	bl	1919c <argp_parse@@Base+0x2d34>
   178e0:	cmp	r0, #0
   178e4:	beq	178f4 <argp_parse@@Base+0x148c>
   178e8:	ldr	r4, [sp]
   178ec:	add	sp, sp, #4
   178f0:	pop	{pc}		; (ldr pc, [sp], #4)
   178f4:	bl	17c0c <argp_parse@@Base+0x17a4>
   178f8:	str	r4, [sp, #-8]!
   178fc:	str	lr, [sp, #4]
   17900:	mov	r2, r1
   17904:	mov	r1, r0
   17908:	mov	r0, #0
   1790c:	bl	17850 <argp_parse@@Base+0x13e8>
   17910:	ldr	r4, [sp]
   17914:	add	sp, sp, #4
   17918:	pop	{pc}		; (ldr pc, [sp], #4)
   1791c:	str	r4, [sp, #-8]!
   17920:	str	lr, [sp, #4]
   17924:	mov	r2, r1
   17928:	mov	r1, r0
   1792c:	mov	r0, #0
   17930:	bl	178b4 <argp_parse@@Base+0x144c>
   17934:	ldr	r4, [sp]
   17938:	add	sp, sp, #4
   1793c:	pop	{pc}		; (ldr pc, [sp], #4)
   17940:	strd	r4, [sp, #-16]!
   17944:	str	r6, [sp, #8]
   17948:	str	lr, [sp, #12]
   1794c:	mov	r5, r1
   17950:	ldr	r4, [r1]
   17954:	cmp	r0, #0
   17958:	beq	17988 <argp_parse@@Base+0x1520>
   1795c:	lsr	r3, r4, #1
   17960:	add	r3, r3, #1
   17964:	adds	r4, r4, r3
   17968:	bcs	179a4 <argp_parse@@Base+0x153c>
   1796c:	mov	r1, r4
   17970:	bl	17850 <argp_parse@@Base+0x13e8>
   17974:	str	r4, [r5]
   17978:	ldrd	r4, [sp]
   1797c:	ldr	r6, [sp, #8]
   17980:	add	sp, sp, #12
   17984:	pop	{pc}		; (ldr pc, [sp], #4)
   17988:	cmp	r4, #0
   1798c:	bne	1796c <argp_parse@@Base+0x1504>
   17990:	mov	r4, #64	; 0x40
   17994:	udiv	r4, r4, r2
   17998:	cmp	r2, #64	; 0x40
   1799c:	addhi	r4, r4, #1
   179a0:	b	1796c <argp_parse@@Base+0x1504>
   179a4:	bl	17c0c <argp_parse@@Base+0x17a4>
   179a8:	str	r4, [sp, #-8]!
   179ac:	str	lr, [sp, #4]
   179b0:	mov	r2, #1
   179b4:	bl	17940 <argp_parse@@Base+0x14d8>
   179b8:	ldr	r4, [sp]
   179bc:	add	sp, sp, #4
   179c0:	pop	{pc}		; (ldr pc, [sp], #4)
   179c4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   179c8:	strd	r6, [sp, #8]
   179cc:	str	r8, [sp, #16]
   179d0:	str	lr, [sp, #20]
   179d4:	mov	r5, r1
   179d8:	ldr	lr, [sp, #24]
   179dc:	ldr	ip, [r1]
   179e0:	asr	r4, ip, #1
   179e4:	adds	r4, ip, r4
   179e8:	movvs	r1, #1
   179ec:	movvc	r1, #0
   179f0:	cmp	r1, #0
   179f4:	mvnne	r4, #-2147483648	; 0x80000000
   179f8:	mvn	r8, r3
   179fc:	lsr	r8, r8, #31
   17a00:	cmp	r3, r4
   17a04:	movge	r1, #0
   17a08:	andlt	r1, r8, #1
   17a0c:	cmp	r1, #0
   17a10:	movne	r4, r3
   17a14:	smull	r6, r7, r4, lr
   17a18:	asr	r1, r6, #31
   17a1c:	cmp	r1, r7
   17a20:	bne	17a38 <argp_parse@@Base+0x15d0>
   17a24:	mov	r1, r6
   17a28:	cmp	r6, #63	; 0x3f
   17a2c:	movle	r1, #64	; 0x40
   17a30:	ble	17a3c <argp_parse@@Base+0x15d4>
   17a34:	b	17a48 <argp_parse@@Base+0x15e0>
   17a38:	mvn	r1, #-2147483648	; 0x80000000
   17a3c:	sdiv	r4, r1, lr
   17a40:	mls	r6, lr, r4, r1
   17a44:	sub	r1, r1, r6
   17a48:	cmp	r0, #0
   17a4c:	moveq	r6, #0
   17a50:	streq	r6, [r5]
   17a54:	sub	r6, r4, ip
   17a58:	cmp	r6, r2
   17a5c:	bge	17a94 <argp_parse@@Base+0x162c>
   17a60:	adds	r2, ip, r2
   17a64:	mov	r4, r2
   17a68:	bvs	17ab0 <argp_parse@@Base+0x1648>
   17a6c:	cmp	r2, r3
   17a70:	movle	r3, #0
   17a74:	andgt	r3, r8, #1
   17a78:	cmp	r3, #0
   17a7c:	bne	17ab0 <argp_parse@@Base+0x1648>
   17a80:	smull	r2, r3, r2, lr
   17a84:	asr	ip, r2, #31
   17a88:	mov	r1, r2
   17a8c:	cmp	ip, r3
   17a90:	bne	17ab0 <argp_parse@@Base+0x1648>
   17a94:	bl	177d8 <argp_parse@@Base+0x1370>
   17a98:	str	r4, [r5]
   17a9c:	ldrd	r4, [sp]
   17aa0:	ldrd	r6, [sp, #8]
   17aa4:	ldr	r8, [sp, #16]
   17aa8:	add	sp, sp, #20
   17aac:	pop	{pc}		; (ldr pc, [sp], #4)
   17ab0:	bl	17c0c <argp_parse@@Base+0x17a4>
   17ab4:	str	r4, [sp, #-8]!
   17ab8:	str	lr, [sp, #4]
   17abc:	bl	17c3c <argp_parse@@Base+0x17d4>
   17ac0:	cmp	r0, #0
   17ac4:	beq	17ad4 <argp_parse@@Base+0x166c>
   17ac8:	ldr	r4, [sp]
   17acc:	add	sp, sp, #4
   17ad0:	pop	{pc}		; (ldr pc, [sp], #4)
   17ad4:	bl	17c0c <argp_parse@@Base+0x17a4>
   17ad8:	str	r4, [sp, #-8]!
   17adc:	str	lr, [sp, #4]
   17ae0:	mov	r1, #1
   17ae4:	bl	17ab4 <argp_parse@@Base+0x164c>
   17ae8:	ldr	r4, [sp]
   17aec:	add	sp, sp, #4
   17af0:	pop	{pc}		; (ldr pc, [sp], #4)
   17af4:	str	r4, [sp, #-8]!
   17af8:	str	lr, [sp, #4]
   17afc:	bl	17c3c <argp_parse@@Base+0x17d4>
   17b00:	cmp	r0, #0
   17b04:	beq	17b14 <argp_parse@@Base+0x16ac>
   17b08:	ldr	r4, [sp]
   17b0c:	add	sp, sp, #4
   17b10:	pop	{pc}		; (ldr pc, [sp], #4)
   17b14:	bl	17c0c <argp_parse@@Base+0x17a4>
   17b18:	str	r4, [sp, #-8]!
   17b1c:	str	lr, [sp, #4]
   17b20:	mov	r1, #1
   17b24:	bl	17af4 <argp_parse@@Base+0x168c>
   17b28:	ldr	r4, [sp]
   17b2c:	add	sp, sp, #4
   17b30:	pop	{pc}		; (ldr pc, [sp], #4)
   17b34:	strd	r4, [sp, #-16]!
   17b38:	str	r6, [sp, #8]
   17b3c:	str	lr, [sp, #12]
   17b40:	mov	r5, r0
   17b44:	mov	r4, r1
   17b48:	mov	r0, r1
   17b4c:	bl	17778 <argp_parse@@Base+0x1310>
   17b50:	mov	r2, r4
   17b54:	mov	r1, r5
   17b58:	bl	11058 <memcpy@plt>
   17b5c:	ldrd	r4, [sp]
   17b60:	ldr	r6, [sp, #8]
   17b64:	add	sp, sp, #12
   17b68:	pop	{pc}		; (ldr pc, [sp], #4)
   17b6c:	strd	r4, [sp, #-16]!
   17b70:	str	r6, [sp, #8]
   17b74:	str	lr, [sp, #12]
   17b78:	mov	r5, r0
   17b7c:	mov	r4, r1
   17b80:	mov	r0, r1
   17b84:	bl	1779c <argp_parse@@Base+0x1334>
   17b88:	mov	r2, r4
   17b8c:	mov	r1, r5
   17b90:	bl	11058 <memcpy@plt>
   17b94:	ldrd	r4, [sp]
   17b98:	ldr	r6, [sp, #8]
   17b9c:	add	sp, sp, #12
   17ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   17ba4:	strd	r4, [sp, #-16]!
   17ba8:	str	r6, [sp, #8]
   17bac:	str	lr, [sp, #12]
   17bb0:	mov	r5, r0
   17bb4:	mov	r4, r1
   17bb8:	add	r0, r1, #1
   17bbc:	bl	1779c <argp_parse@@Base+0x1334>
   17bc0:	mov	r2, #0
   17bc4:	strb	r2, [r0, r4]
   17bc8:	mov	r2, r4
   17bcc:	mov	r1, r5
   17bd0:	bl	11058 <memcpy@plt>
   17bd4:	ldrd	r4, [sp]
   17bd8:	ldr	r6, [sp, #8]
   17bdc:	add	sp, sp, #12
   17be0:	pop	{pc}		; (ldr pc, [sp], #4)
   17be4:	str	r4, [sp, #-8]!
   17be8:	str	lr, [sp, #4]
   17bec:	mov	r4, r0
   17bf0:	bl	11178 <strlen@plt>
   17bf4:	add	r1, r0, #1
   17bf8:	mov	r0, r4
   17bfc:	bl	17b34 <argp_parse@@Base+0x16cc>
   17c00:	ldr	r4, [sp]
   17c04:	add	sp, sp, #4
   17c08:	pop	{pc}		; (ldr pc, [sp], #4)
   17c0c:	str	r4, [sp, #-8]!
   17c10:	str	lr, [sp, #4]
   17c14:	movw	r3, #45696	; 0xb280
   17c18:	movt	r3, #2
   17c1c:	ldr	r0, [r3]
   17c20:	movw	r3, #41244	; 0xa11c
   17c24:	movt	r3, #1
   17c28:	movw	r2, #40052	; 0x9c74
   17c2c:	movt	r2, #1
   17c30:	mov	r1, #0
   17c34:	bl	110f4 <error@plt>
   17c38:	bl	1128c <abort@plt>
   17c3c:	strd	r4, [sp, #-16]!
   17c40:	str	r6, [sp, #8]
   17c44:	str	lr, [sp, #12]
   17c48:	cmp	r1, #0
   17c4c:	cmpne	r0, #0
   17c50:	beq	17c8c <argp_parse@@Base+0x1824>
   17c54:	mov	r2, r0
   17c58:	mov	r3, r1
   17c5c:	umull	r4, r5, r0, r1
   17c60:	adds	r1, r5, #0
   17c64:	movne	r1, #1
   17c68:	cmp	r4, #0
   17c6c:	movlt	r1, #1
   17c70:	cmp	r1, #0
   17c74:	beq	17c94 <argp_parse@@Base+0x182c>
   17c78:	bl	1119c <__errno_location@plt>
   17c7c:	mov	r3, #12
   17c80:	str	r3, [r0]
   17c84:	mov	r0, #0
   17c88:	b	17ca0 <argp_parse@@Base+0x1838>
   17c8c:	mov	r3, #1
   17c90:	mov	r2, r3
   17c94:	mov	r1, r3
   17c98:	mov	r0, r2
   17c9c:	bl	10fbc <calloc@plt>
   17ca0:	ldrd	r4, [sp]
   17ca4:	ldr	r6, [sp, #8]
   17ca8:	add	sp, sp, #12
   17cac:	pop	{pc}		; (ldr pc, [sp], #4)
   17cb0:	str	r4, [sp, #-8]!
   17cb4:	str	lr, [sp, #4]
   17cb8:	cmp	r0, #0
   17cbc:	beq	17cd8 <argp_parse@@Base+0x1870>
   17cc0:	bge	17cdc <argp_parse@@Base+0x1874>
   17cc4:	bl	1119c <__errno_location@plt>
   17cc8:	mov	r3, #12
   17ccc:	str	r3, [r0]
   17cd0:	mov	r0, #0
   17cd4:	b	17ce0 <argp_parse@@Base+0x1878>
   17cd8:	mov	r0, #1
   17cdc:	bl	1110c <malloc@plt>
   17ce0:	ldr	r4, [sp]
   17ce4:	add	sp, sp, #4
   17ce8:	pop	{pc}		; (ldr pc, [sp], #4)
   17cec:	str	r4, [sp, #-8]!
   17cf0:	str	lr, [sp, #4]
   17cf4:	cmp	r0, #0
   17cf8:	beq	17d1c <argp_parse@@Base+0x18b4>
   17cfc:	cmp	r1, #0
   17d00:	beq	17d28 <argp_parse@@Base+0x18c0>
   17d04:	cmp	r1, #0
   17d08:	blt	17d34 <argp_parse@@Base+0x18cc>
   17d0c:	bl	110ac <realloc@plt>
   17d10:	ldr	r4, [sp]
   17d14:	add	sp, sp, #4
   17d18:	pop	{pc}		; (ldr pc, [sp], #4)
   17d1c:	mov	r0, r1
   17d20:	bl	17cb0 <argp_parse@@Base+0x1848>
   17d24:	b	17d10 <argp_parse@@Base+0x18a8>
   17d28:	bl	17140 <argp_parse@@Base+0xcd8>
   17d2c:	mov	r0, #0
   17d30:	b	17d10 <argp_parse@@Base+0x18a8>
   17d34:	bl	1119c <__errno_location@plt>
   17d38:	mov	r3, #12
   17d3c:	str	r3, [r0]
   17d40:	mov	r0, #0
   17d44:	b	17d10 <argp_parse@@Base+0x18a8>
   17d48:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17d4c:	strd	r6, [sp, #8]
   17d50:	str	r8, [sp, #16]
   17d54:	str	lr, [sp, #20]
   17d58:	mov	r8, r0
   17d5c:	mov	r7, r1
   17d60:	mov	r6, r2
   17d64:	mov	r5, r3
   17d68:	mov	r0, #36	; 0x24
   17d6c:	bl	17cb0 <argp_parse@@Base+0x1848>
   17d70:	subs	r4, r0, #0
   17d74:	beq	17db8 <argp_parse@@Base+0x1950>
   17d78:	str	r8, [r4]
   17d7c:	str	r7, [r4, #4]
   17d80:	str	r6, [r4, #8]
   17d84:	str	r5, [r4, #12]
   17d88:	mov	r3, #0
   17d8c:	str	r3, [r4, #20]
   17d90:	str	r3, [r4, #16]
   17d94:	mov	r0, #200	; 0xc8
   17d98:	bl	17cb0 <argp_parse@@Base+0x1848>
   17d9c:	mov	r5, r0
   17da0:	str	r0, [r4, #24]
   17da4:	cmp	r0, #0
   17da8:	strne	r0, [r4, #28]
   17dac:	addne	r5, r0, #200	; 0xc8
   17db0:	strne	r5, [r4, #32]
   17db4:	beq	17dd0 <argp_parse@@Base+0x1968>
   17db8:	mov	r0, r4
   17dbc:	ldrd	r4, [sp]
   17dc0:	ldrd	r6, [sp, #8]
   17dc4:	ldr	r8, [sp, #16]
   17dc8:	add	sp, sp, #20
   17dcc:	pop	{pc}		; (ldr pc, [sp], #4)
   17dd0:	mov	r0, r4
   17dd4:	bl	17140 <argp_parse@@Base+0xcd8>
   17dd8:	mov	r4, r5
   17ddc:	b	17db8 <argp_parse@@Base+0x1950>
   17de0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17de4:	strd	r6, [sp, #8]
   17de8:	strd	r8, [sp, #16]
   17dec:	strd	sl, [sp, #24]
   17df0:	str	lr, [sp, #32]
   17df4:	sub	sp, sp, #20
   17df8:	mov	r4, r0
   17dfc:	ldr	r5, [r0, #24]
   17e00:	ldr	r3, [r0, #16]
   17e04:	add	r5, r5, r3
   17e08:	mov	sl, #32
   17e0c:	str	sl, [sp, #8]
   17e10:	b	17ef8 <argp_parse@@Base+0x1a90>
   17e14:	mov	r7, #0
   17e18:	ldr	r0, [r4]
   17e1c:	ldr	r3, [r0, #20]
   17e20:	ldr	r2, [r0, #24]
   17e24:	cmp	r3, r2
   17e28:	addcc	r2, r3, #1
   17e2c:	strcc	r2, [r0, #20]
   17e30:	strbcc	sl, [r3]
   17e34:	bcs	17f64 <argp_parse@@Base+0x1afc>
   17e38:	add	r7, r7, #1
   17e3c:	cmp	r6, r7
   17e40:	bne	17e18 <argp_parse@@Base+0x19b0>
   17e44:	str	r6, [r4, #20]
   17e48:	ldr	r8, [r4, #28]
   17e4c:	sub	fp, r8, r5
   17e50:	mov	r2, fp
   17e54:	mov	r1, #10
   17e58:	mov	r0, r5
   17e5c:	bl	111cc <memchr@plt>
   17e60:	mov	r6, r0
   17e64:	ldr	r3, [r4, #20]
   17e68:	cmp	r3, #0
   17e6c:	movlt	r3, #0
   17e70:	strlt	r3, [r4, #20]
   17e74:	cmp	r6, #0
   17e78:	beq	17f70 <argp_parse@@Base+0x1b08>
   17e7c:	ldr	r0, [r4, #20]
   17e80:	ldr	r9, [r4, #8]
   17e84:	sub	r3, r6, r5
   17e88:	add	r3, r3, r0
   17e8c:	cmp	r3, r9
   17e90:	movlt	r3, #0
   17e94:	strlt	r3, [r4, #20]
   17e98:	addlt	r5, r6, #1
   17e9c:	blt	17ef8 <argp_parse@@Base+0x1a90>
   17ea0:	sub	r7, r9, #1
   17ea4:	ldr	r3, [r4, #12]
   17ea8:	str	r3, [sp, #4]
   17eac:	cmp	r3, #0
   17eb0:	bge	17f9c <argp_parse@@Base+0x1b34>
   17eb4:	cmp	r8, r6
   17eb8:	bls	1802c <argp_parse@@Base+0x1bc4>
   17ebc:	sub	r0, r7, r0
   17ec0:	sub	r2, r8, r6
   17ec4:	mov	r1, r6
   17ec8:	add	r0, r5, r0
   17ecc:	bl	1101c <memmove@plt>
   17ed0:	ldr	r3, [r4, #20]
   17ed4:	sub	r7, r7, r3
   17ed8:	add	r7, r5, r7
   17edc:	sub	r6, r7, r6
   17ee0:	ldr	r3, [r4, #28]
   17ee4:	sub	r6, r3, r6
   17ee8:	str	r6, [r4, #28]
   17eec:	mov	r3, #0
   17ef0:	str	r3, [r4, #20]
   17ef4:	add	r5, r5, r9
   17ef8:	ldr	r8, [r4, #28]
   17efc:	cmp	r8, r5
   17f00:	bls	18044 <argp_parse@@Base+0x1bdc>
   17f04:	ldr	r3, [r4, #20]
   17f08:	cmp	r3, #0
   17f0c:	bne	17e48 <argp_parse@@Base+0x19e0>
   17f10:	ldr	r6, [r4, #4]
   17f14:	cmp	r6, #0
   17f18:	beq	182f0 <argp_parse@@Base+0x1e88>
   17f1c:	add	r3, r8, r6
   17f20:	ldr	r2, [r4, #32]
   17f24:	cmp	r2, r3
   17f28:	bls	17e14 <argp_parse@@Base+0x19ac>
   17f2c:	add	r7, r5, r6
   17f30:	sub	r2, r8, r5
   17f34:	mov	r1, r5
   17f38:	mov	r0, r7
   17f3c:	bl	1101c <memmove@plt>
   17f40:	ldr	r3, [r4, #28]
   17f44:	add	r3, r3, r6
   17f48:	str	r3, [r4, #28]
   17f4c:	mov	r2, r6
   17f50:	mov	r1, sl
   17f54:	mov	r0, r5
   17f58:	bl	111b4 <memset@plt>
   17f5c:	mov	r5, r7
   17f60:	b	17e44 <argp_parse@@Base+0x19dc>
   17f64:	ldr	r1, [sp, #8]
   17f68:	bl	111e4 <__overflow@plt>
   17f6c:	b	17e38 <argp_parse@@Base+0x19d0>
   17f70:	ldr	r3, [r4, #20]
   17f74:	add	r3, fp, r3
   17f78:	ldr	r7, [r4, #8]
   17f7c:	cmp	r3, r7
   17f80:	bcc	18024 <argp_parse@@Base+0x1bbc>
   17f84:	sub	r7, r7, #1
   17f88:	ldr	r3, [r4, #12]
   17f8c:	str	r3, [sp, #4]
   17f90:	cmp	r3, #0
   17f94:	blt	1802c <argp_parse@@Base+0x1bc4>
   17f98:	mov	r6, r8
   17f9c:	ldr	r3, [r4, #20]
   17fa0:	rsb	r3, r3, #1
   17fa4:	add	r7, r3, r7
   17fa8:	adds	r7, r5, r7
   17fac:	bcs	182e8 <argp_parse@@Base+0x1e80>
   17fb0:	bl	11154 <__ctype_b_loc@plt>
   17fb4:	ldr	r0, [r0]
   17fb8:	mov	r3, r7
   17fbc:	mov	r1, r3
   17fc0:	sub	r3, r3, #1
   17fc4:	ldrb	r2, [r1]
   17fc8:	lsl	r2, r2, #1
   17fcc:	ldrh	r2, [r0, r2]
   17fd0:	tst	r2, #1
   17fd4:	bne	18070 <argp_parse@@Base+0x1c08>
   17fd8:	mov	r1, r3
   17fdc:	cmp	r3, r5
   17fe0:	bcs	17fbc <argp_parse@@Base+0x1b54>
   17fe4:	add	r9, r1, #1
   17fe8:	cmp	r9, r5
   17fec:	bhi	180ac <argp_parse@@Base+0x1c44>
   17ff0:	cmp	r6, r7
   17ff4:	bhi	18148 <argp_parse@@Base+0x1ce0>
   17ff8:	cmp	r7, r6
   17ffc:	beq	18188 <argp_parse@@Base+0x1d20>
   18000:	bl	11154 <__ctype_b_loc@plt>
   18004:	ldr	r2, [r0]
   18008:	mov	r9, r7
   1800c:	ldrb	r3, [r9, #1]!
   18010:	lsl	r3, r3, #1
   18014:	ldrh	r3, [r2, r3]
   18018:	tst	r3, #1
   1801c:	bne	1800c <argp_parse@@Base+0x1ba4>
   18020:	b	180b0 <argp_parse@@Base+0x1c48>
   18024:	str	r3, [r4, #20]
   18028:	b	18044 <argp_parse@@Base+0x1bdc>
   1802c:	ldr	r3, [r4, #20]
   18030:	add	r3, fp, r3
   18034:	str	r3, [r4, #20]
   18038:	sub	r3, r7, r3
   1803c:	add	r8, r8, r3
   18040:	str	r8, [r4, #28]
   18044:	ldr	r3, [r4, #28]
   18048:	ldr	r2, [r4, #24]
   1804c:	sub	r3, r3, r2
   18050:	str	r3, [r4, #16]
   18054:	add	sp, sp, #20
   18058:	ldrd	r4, [sp]
   1805c:	ldrd	r6, [sp, #8]
   18060:	ldrd	r8, [sp, #16]
   18064:	ldrd	sl, [sp, #24]
   18068:	add	sp, sp, #32
   1806c:	pop	{pc}		; (ldr pc, [sp], #4)
   18070:	add	r9, r1, #1
   18074:	cmp	r9, r5
   18078:	bls	17ff0 <argp_parse@@Base+0x1b88>
   1807c:	cmp	r5, r1
   18080:	bhi	180ac <argp_parse@@Base+0x1c44>
   18084:	sub	ip, r5, #1
   18088:	mov	r1, r3
   1808c:	cmp	r3, ip
   18090:	beq	180ac <argp_parse@@Base+0x1c44>
   18094:	sub	r3, r3, #1
   18098:	ldrb	r2, [r1]
   1809c:	lsl	r2, r2, #1
   180a0:	ldrh	r2, [r0, r2]
   180a4:	tst	r2, #1
   180a8:	bne	18088 <argp_parse@@Base+0x1c20>
   180ac:	add	r7, r1, #1
   180b0:	add	r3, fp, #1
   180b4:	add	r3, r5, r3
   180b8:	cmp	r9, r3
   180bc:	beq	18198 <argp_parse@@Base+0x1d30>
   180c0:	add	r3, r7, #1
   180c4:	sub	r3, r9, r3
   180c8:	ldr	r2, [sp, #4]
   180cc:	cmp	r3, r2
   180d0:	bge	181ac <argp_parse@@Base+0x1d44>
   180d4:	cmp	r9, r8
   180d8:	bcs	181ac <argp_parse@@Base+0x1d44>
   180dc:	ldr	r3, [r4, #32]
   180e0:	sub	r3, r3, r8
   180e4:	ldr	r2, [sp, #4]
   180e8:	add	r2, r2, #1
   180ec:	cmp	r3, r2
   180f0:	bgt	18254 <argp_parse@@Base+0x1dec>
   180f4:	ldr	r0, [r4, #24]
   180f8:	cmp	r0, r7
   180fc:	bcs	18110 <argp_parse@@Base+0x1ca8>
   18100:	ldr	r3, [r4]
   18104:	sub	r2, r7, r0
   18108:	mov	r1, #1
   1810c:	bl	11064 <fwrite_unlocked@plt>
   18110:	ldr	r0, [r4]
   18114:	ldr	r3, [r0, #20]
   18118:	ldr	r2, [r0, #24]
   1811c:	cmp	r3, r2
   18120:	addcc	r2, r3, #1
   18124:	strcc	r2, [r0, #20]
   18128:	movcc	r2, #10
   1812c:	strbcc	r2, [r3]
   18130:	bcs	18294 <argp_parse@@Base+0x1e2c>
   18134:	ldr	r8, [r4, #24]
   18138:	sub	r5, r5, r8
   1813c:	add	fp, fp, r5
   18140:	mov	r5, r8
   18144:	b	181bc <argp_parse@@Base+0x1d54>
   18148:	add	r9, r7, #1
   1814c:	str	r6, [sp, #12]
   18150:	mov	r7, r9
   18154:	cmp	r9, r6
   18158:	beq	18180 <argp_parse@@Base+0x1d18>
   1815c:	bl	11154 <__ctype_b_loc@plt>
   18160:	add	r9, r9, #1
   18164:	ldrb	r3, [r7]
   18168:	ldr	r2, [r0]
   1816c:	lsl	r3, r3, #1
   18170:	ldrh	r3, [r2, r3]
   18174:	tst	r3, #1
   18178:	beq	18150 <argp_parse@@Base+0x1ce8>
   1817c:	b	18000 <argp_parse@@Base+0x1b98>
   18180:	ldr	r6, [sp, #12]
   18184:	b	17ff8 <argp_parse@@Base+0x1b90>
   18188:	mov	r3, #0
   1818c:	str	r3, [r4, #20]
   18190:	add	r5, r6, #1
   18194:	b	17ef8 <argp_parse@@Base+0x1a90>
   18198:	ldr	r3, [r4, #32]
   1819c:	sub	r3, r3, r7
   181a0:	ldr	r2, [sp, #4]
   181a4:	cmp	r3, r2
   181a8:	ble	180d4 <argp_parse@@Base+0x1c6c>
   181ac:	mov	r3, #10
   181b0:	strb	r3, [r7], #1
   181b4:	mov	r8, r5
   181b8:	mov	r5, r7
   181bc:	ldr	r3, [r4, #12]
   181c0:	sub	r2, r9, r5
   181c4:	cmp	r2, r3
   181c8:	bge	182a0 <argp_parse@@Base+0x1e38>
   181cc:	add	r2, fp, #1
   181d0:	add	r2, r8, r2
   181d4:	cmp	r9, r2
   181d8:	bne	181ec <argp_parse@@Base+0x1d84>
   181dc:	ldr	r2, [r4, #32]
   181e0:	sub	r2, r2, r9
   181e4:	cmp	r3, r2
   181e8:	ble	182a0 <argp_parse@@Base+0x1e38>
   181ec:	cmp	r3, #0
   181f0:	movgt	r6, #0
   181f4:	ble	18228 <argp_parse@@Base+0x1dc0>
   181f8:	ldr	r0, [r4]
   181fc:	ldr	r3, [r0, #20]
   18200:	ldr	r2, [r0, #24]
   18204:	cmp	r3, r2
   18208:	addcc	r2, r3, #1
   1820c:	strcc	r2, [r0, #20]
   18210:	strbcc	sl, [r3]
   18214:	bcs	182c4 <argp_parse@@Base+0x1e5c>
   18218:	add	r6, r6, #1
   1821c:	ldr	r3, [r4, #12]
   18220:	cmp	r3, r6
   18224:	bgt	181f8 <argp_parse@@Base+0x1d90>
   18228:	cmp	r5, r9
   1822c:	bcc	182d0 <argp_parse@@Base+0x1e68>
   18230:	sub	r9, r9, r8
   18234:	sub	fp, fp, r9
   18238:	add	fp, r5, fp
   1823c:	str	fp, [r4, #28]
   18240:	ldr	r3, [r4, #12]
   18244:	cmp	r3, #0
   18248:	mvneq	r3, #0
   1824c:	str	r3, [r4, #20]
   18250:	b	17ef8 <argp_parse@@Base+0x1a90>
   18254:	sub	r8, r8, r9
   18258:	mov	r0, r2
   1825c:	mov	r2, r8
   18260:	mov	r1, r9
   18264:	add	r0, r7, r0
   18268:	bl	1101c <memmove@plt>
   1826c:	ldr	r9, [r4, #12]
   18270:	add	r9, r9, #1
   18274:	add	r9, r7, r9
   18278:	add	r8, r9, r8
   1827c:	sub	fp, r8, r5
   18280:	mov	r3, #10
   18284:	strb	r3, [r7], #1
   18288:	mov	r8, r5
   1828c:	mov	r5, r7
   18290:	b	181bc <argp_parse@@Base+0x1d54>
   18294:	mov	r1, #10
   18298:	bl	111e4 <__overflow@plt>
   1829c:	b	18134 <argp_parse@@Base+0x1ccc>
   182a0:	cmp	r3, #0
   182a4:	movgt	r3, #0
   182a8:	ble	18228 <argp_parse@@Base+0x1dc0>
   182ac:	strb	sl, [r5], #1
   182b0:	add	r3, r3, #1
   182b4:	ldr	r2, [r4, #12]
   182b8:	cmp	r2, r3
   182bc:	bgt	182ac <argp_parse@@Base+0x1e44>
   182c0:	b	18228 <argp_parse@@Base+0x1dc0>
   182c4:	ldr	r1, [sp, #8]
   182c8:	bl	111e4 <__overflow@plt>
   182cc:	b	18218 <argp_parse@@Base+0x1db0>
   182d0:	add	r2, r8, fp
   182d4:	sub	r2, r2, r9
   182d8:	mov	r1, r9
   182dc:	mov	r0, r5
   182e0:	bl	1101c <memmove@plt>
   182e4:	b	18230 <argp_parse@@Base+0x1dc8>
   182e8:	mov	r1, r7
   182ec:	b	17fe4 <argp_parse@@Base+0x1b7c>
   182f0:	sub	fp, r8, r5
   182f4:	mov	r2, fp
   182f8:	mov	r1, #10
   182fc:	mov	r0, r5
   18300:	bl	111cc <memchr@plt>
   18304:	mov	r6, r0
   18308:	b	17e74 <argp_parse@@Base+0x1a0c>
   1830c:	str	r4, [sp, #-8]!
   18310:	str	lr, [sp, #4]
   18314:	mov	r4, r0
   18318:	bl	17de0 <argp_parse@@Base+0x1978>
   1831c:	ldr	r2, [r4, #28]
   18320:	ldr	r0, [r4, #24]
   18324:	cmp	r2, r0
   18328:	bls	1833c <argp_parse@@Base+0x1ed4>
   1832c:	ldr	r3, [r4]
   18330:	sub	r2, r2, r0
   18334:	mov	r1, #1
   18338:	bl	11064 <fwrite_unlocked@plt>
   1833c:	ldr	r0, [r4, #24]
   18340:	bl	17140 <argp_parse@@Base+0xcd8>
   18344:	mov	r0, r4
   18348:	bl	17140 <argp_parse@@Base+0xcd8>
   1834c:	ldr	r4, [sp]
   18350:	add	sp, sp, #4
   18354:	pop	{pc}		; (ldr pc, [sp], #4)
   18358:	ldr	r3, [r0, #32]
   1835c:	ldr	r2, [r0, #28]
   18360:	sub	r3, r3, r2
   18364:	cmp	r3, r1
   18368:	bcc	18374 <argp_parse@@Base+0x1f0c>
   1836c:	mov	r0, #1
   18370:	bx	lr
   18374:	strd	r4, [sp, #-16]!
   18378:	str	r6, [sp, #8]
   1837c:	str	lr, [sp, #12]
   18380:	mov	r5, r1
   18384:	mov	r4, r0
   18388:	bl	17de0 <argp_parse@@Base+0x1978>
   1838c:	ldr	r0, [r4, #24]
   18390:	ldr	r2, [r4, #28]
   18394:	ldr	r3, [r4]
   18398:	sub	r2, r2, r0
   1839c:	mov	r1, #1
   183a0:	bl	11064 <fwrite_unlocked@plt>
   183a4:	ldr	r2, [r4, #28]
   183a8:	ldr	r3, [r4, #24]
   183ac:	sub	r1, r2, r3
   183b0:	cmp	r1, r0
   183b4:	bne	183f4 <argp_parse@@Base+0x1f8c>
   183b8:	str	r3, [r4, #28]
   183bc:	mov	r2, #0
   183c0:	str	r2, [r4, #16]
   183c4:	ldr	r1, [r4, #32]
   183c8:	sub	r1, r1, r3
   183cc:	cmp	r1, r5
   183d0:	movcs	r0, #1
   183d4:	bcs	1841c <argp_parse@@Base+0x1fb4>
   183d8:	adds	r5, r1, r5
   183dc:	bcc	1842c <argp_parse@@Base+0x1fc4>
   183e0:	bl	1119c <__errno_location@plt>
   183e4:	mov	r3, #12
   183e8:	str	r3, [r0]
   183ec:	mov	r0, #0
   183f0:	b	1841c <argp_parse@@Base+0x1fb4>
   183f4:	sub	r2, r2, r0
   183f8:	str	r2, [r4, #28]
   183fc:	ldr	r1, [r4, #16]
   18400:	sub	r1, r1, r0
   18404:	str	r1, [r4, #16]
   18408:	sub	r2, r2, r3
   1840c:	add	r1, r3, r0
   18410:	mov	r0, r3
   18414:	bl	1101c <memmove@plt>
   18418:	mov	r0, #0
   1841c:	ldrd	r4, [sp]
   18420:	ldr	r6, [sp, #8]
   18424:	add	sp, sp, #12
   18428:	pop	{pc}		; (ldr pc, [sp], #4)
   1842c:	mov	r1, r5
   18430:	mov	r0, r3
   18434:	bl	17cec <argp_parse@@Base+0x1884>
   18438:	cmp	r0, #0
   1843c:	beq	183e0 <argp_parse@@Base+0x1f78>
   18440:	str	r0, [r4, #24]
   18444:	add	r5, r0, r5
   18448:	str	r5, [r4, #32]
   1844c:	str	r0, [r4, #28]
   18450:	mov	r0, #1
   18454:	b	1841c <argp_parse@@Base+0x1fb4>
   18458:	push	{r1, r2, r3}
   1845c:	strd	r4, [sp, #-16]!
   18460:	str	r6, [sp, #8]
   18464:	str	lr, [sp, #12]
   18468:	sub	sp, sp, #12
   1846c:	mov	r5, r0
   18470:	mov	r1, #150	; 0x96
   18474:	add	r6, sp, #32
   18478:	mov	r0, r5
   1847c:	bl	18358 <argp_parse@@Base+0x1ef0>
   18480:	cmp	r0, #0
   18484:	beq	184b8 <argp_parse@@Base+0x2050>
   18488:	str	r6, [sp, #4]
   1848c:	ldr	r0, [r5, #28]
   18490:	ldr	r4, [r5, #32]
   18494:	sub	r4, r4, r0
   18498:	mov	r3, r6
   1849c:	ldr	r2, [sp, #28]
   184a0:	mov	r1, r4
   184a4:	bl	11238 <vsnprintf@plt>
   184a8:	cmp	r0, r4
   184ac:	bcc	184d8 <argp_parse@@Base+0x2070>
   184b0:	add	r1, r0, #1
   184b4:	b	18478 <argp_parse@@Base+0x2010>
   184b8:	mvn	r0, #0
   184bc:	add	sp, sp, #12
   184c0:	ldrd	r4, [sp]
   184c4:	ldr	r6, [sp, #8]
   184c8:	ldr	lr, [sp, #12]
   184cc:	add	sp, sp, #16
   184d0:	add	sp, sp, #12
   184d4:	bx	lr
   184d8:	ldr	r2, [r5, #28]
   184dc:	add	r3, r2, r0
   184e0:	str	r3, [r5, #28]
   184e4:	b	184bc <argp_parse@@Base+0x2054>
   184e8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   184ec:	strd	r6, [sp, #8]
   184f0:	strd	r8, [sp, #16]
   184f4:	str	lr, [sp, #24]
   184f8:	ldr	r5, [r1, #28]
   184fc:	ldr	r6, [r1, #32]
   18500:	ldr	r8, [r1]
   18504:	add	r7, r0, r6, lsl #2
   18508:	b	18538 <argp_parse@@Base+0x20d0>
   1850c:	add	r3, r0, r5, lsl #2
   18510:	add	r4, r9, r5
   18514:	add	r4, r0, r4, lsl #2
   18518:	mov	r2, r7
   1851c:	ldr	ip, [r3]
   18520:	ldr	lr, [r2]
   18524:	str	lr, [r3], #4
   18528:	str	ip, [r2], #4
   1852c:	cmp	r3, r4
   18530:	bne	1851c <argp_parse@@Base+0x20b4>
   18534:	add	r5, r5, r9
   18538:	cmp	r8, r6
   1853c:	movle	r3, #0
   18540:	movgt	r3, #1
   18544:	cmp	r5, r6
   18548:	movge	r3, #0
   1854c:	cmp	r3, #0
   18550:	beq	18594 <argp_parse@@Base+0x212c>
   18554:	sub	r9, r8, r6
   18558:	sub	r3, r6, r5
   1855c:	cmp	r9, r3
   18560:	ble	1850c <argp_parse@@Base+0x20a4>
   18564:	add	r2, r0, r5, lsl #2
   18568:	sub	r9, r8, r3
   1856c:	add	r3, r0, r9, lsl #2
   18570:	add	r4, r0, r8, lsl #2
   18574:	ldr	ip, [r2]
   18578:	ldr	lr, [r3]
   1857c:	str	lr, [r2], #4
   18580:	str	ip, [r3], #4
   18584:	cmp	r3, r4
   18588:	bne	18574 <argp_parse@@Base+0x210c>
   1858c:	mov	r8, r9
   18590:	b	18538 <argp_parse@@Base+0x20d0>
   18594:	ldr	r0, [r1]
   18598:	ldr	r3, [r1, #32]
   1859c:	sub	r2, r0, r3
   185a0:	ldr	r3, [r1, #28]
   185a4:	add	r3, r3, r2
   185a8:	str	r3, [r1, #28]
   185ac:	str	r0, [r1, #32]
   185b0:	ldrd	r4, [sp]
   185b4:	ldrd	r6, [sp, #8]
   185b8:	ldrd	r8, [sp, #16]
   185bc:	add	sp, sp, #24
   185c0:	pop	{pc}		; (ldr pc, [sp], #4)
   185c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   185c8:	strd	r6, [sp, #8]
   185cc:	strd	r8, [sp, #16]
   185d0:	strd	sl, [sp, #24]
   185d4:	str	lr, [sp, #32]
   185d8:	sub	sp, sp, #52	; 0x34
   185dc:	str	r0, [sp, #32]
   185e0:	str	r1, [sp, #20]
   185e4:	str	r2, [sp, #28]
   185e8:	str	r3, [sp, #16]
   185ec:	ldr	fp, [sp, #96]	; 0x60
   185f0:	ldr	r9, [fp, #20]
   185f4:	ldrb	r3, [r9]
   185f8:	cmp	r3, #0
   185fc:	cmpne	r3, #61	; 0x3d
   18600:	beq	18638 <argp_parse@@Base+0x21d0>
   18604:	mov	r8, r9
   18608:	ldrb	r3, [r8, #1]!
   1860c:	cmp	r3, #0
   18610:	cmpne	r3, #61	; 0x3d
   18614:	bne	18608 <argp_parse@@Base+0x21a0>
   18618:	sub	r7, r8, r9
   1861c:	ldr	r5, [sp, #16]
   18620:	ldr	sl, [r5]
   18624:	cmp	sl, #0
   18628:	beq	18afc <argp_parse@@Base+0x2694>
   1862c:	mov	r4, sl
   18630:	mov	r6, #0
   18634:	b	18650 <argp_parse@@Base+0x21e8>
   18638:	mov	r8, r9
   1863c:	b	18618 <argp_parse@@Base+0x21b0>
   18640:	add	r6, r6, #1
   18644:	ldr	r4, [r5, #16]!
   18648:	cmp	r4, #0
   1864c:	beq	18b00 <argp_parse@@Base+0x2698>
   18650:	str	r5, [sp, #12]
   18654:	mov	r2, r7
   18658:	mov	r1, r9
   1865c:	mov	r0, r4
   18660:	bl	11280 <strncmp@plt>
   18664:	cmp	r0, #0
   18668:	bne	18640 <argp_parse@@Base+0x21d8>
   1866c:	mov	r0, r4
   18670:	bl	11178 <strlen@plt>
   18674:	cmp	r0, r7
   18678:	bne	18640 <argp_parse@@Base+0x21d8>
   1867c:	cmp	r5, #0
   18680:	beq	18b08 <argp_parse@@Base+0x26a0>
   18684:	ldr	r3, [fp]
   18688:	add	r2, r3, #1
   1868c:	str	r2, [fp]
   18690:	mov	r1, #0
   18694:	str	r1, [fp, #20]
   18698:	ldrb	r1, [r8]
   1869c:	cmp	r1, #0
   186a0:	beq	18a50 <argp_parse@@Base+0x25e8>
   186a4:	ldr	r3, [sp, #12]
   186a8:	ldr	r3, [r3, #4]
   186ac:	cmp	r3, #0
   186b0:	beq	189fc <argp_parse@@Base+0x2594>
   186b4:	add	r8, r8, #1
   186b8:	str	r8, [fp, #12]
   186bc:	ldr	r3, [sp, #88]	; 0x58
   186c0:	cmp	r3, #0
   186c4:	strne	r6, [r3]
   186c8:	ldr	r2, [sp, #12]
   186cc:	ldr	r3, [r2, #8]
   186d0:	cmp	r3, #0
   186d4:	beq	18ae8 <argp_parse@@Base+0x2680>
   186d8:	ldr	r2, [r2, #12]
   186dc:	str	r2, [r3]
   186e0:	mov	r0, #0
   186e4:	add	sp, sp, #52	; 0x34
   186e8:	ldrd	r4, [sp]
   186ec:	ldrd	r6, [sp, #8]
   186f0:	ldrd	r8, [sp, #16]
   186f4:	ldrd	sl, [sp, #24]
   186f8:	add	sp, sp, #32
   186fc:	pop	{pc}		; (ldr pc, [sp], #4)
   18700:	ldr	r2, [sl, #8]
   18704:	ldr	r3, [r9, #8]
   18708:	cmp	r2, r3
   1870c:	bne	187cc <argp_parse@@Base+0x2364>
   18710:	ldr	r2, [sl, #12]
   18714:	ldr	r3, [r9, #12]
   18718:	cmp	r2, r3
   1871c:	bne	187cc <argp_parse@@Base+0x2364>
   18720:	b	18784 <argp_parse@@Base+0x231c>
   18724:	mov	r0, r6
   18728:	bl	17cb0 <argp_parse@@Base+0x1848>
   1872c:	subs	r3, r0, #0
   18730:	str	r3, [sp, #24]
   18734:	beq	187fc <argp_parse@@Base+0x2394>
   18738:	mov	r2, r6
   1873c:	mov	r1, #0
   18740:	ldr	r7, [sp, #24]
   18744:	mov	r0, r7
   18748:	bl	111b4 <memset@plt>
   1874c:	ldr	r2, [sp, #36]	; 0x24
   18750:	mov	r1, #1
   18754:	strb	r1, [r7, r2]
   18758:	ldr	r3, [sp, #44]	; 0x2c
   1875c:	str	r3, [sp, #40]	; 0x28
   18760:	b	187ec <argp_parse@@Base+0x2384>
   18764:	ldr	r3, [sp, #24]
   18768:	cmp	r3, #0
   1876c:	moveq	r5, #1
   18770:	beq	18784 <argp_parse@@Base+0x231c>
   18774:	mov	r5, #1
   18778:	b	187ec <argp_parse@@Base+0x2384>
   1877c:	str	r4, [sp, #36]	; 0x24
   18780:	mov	sl, r9
   18784:	add	r4, r4, #1
   18788:	ldr	r0, [r9, #16]!
   1878c:	cmp	r0, #0
   18790:	beq	18804 <argp_parse@@Base+0x239c>
   18794:	ldr	r2, [sp, #12]
   18798:	ldr	r1, [fp, #20]
   1879c:	bl	11280 <strncmp@plt>
   187a0:	cmp	r0, #0
   187a4:	bne	18784 <argp_parse@@Base+0x231c>
   187a8:	cmp	sl, #0
   187ac:	beq	1877c <argp_parse@@Base+0x2314>
   187b0:	ldr	r3, [sp, #92]	; 0x5c
   187b4:	cmp	r3, #0
   187b8:	bne	187cc <argp_parse@@Base+0x2364>
   187bc:	ldr	r2, [sl, #4]
   187c0:	ldr	r3, [r9, #4]
   187c4:	cmp	r2, r3
   187c8:	beq	18700 <argp_parse@@Base+0x2298>
   187cc:	cmp	r5, #0
   187d0:	bne	18784 <argp_parse@@Base+0x231c>
   187d4:	ldr	r3, [sp, #100]	; 0x64
   187d8:	cmp	r3, #0
   187dc:	beq	18764 <argp_parse@@Base+0x22fc>
   187e0:	ldr	r3, [sp, #24]
   187e4:	cmp	r3, #0
   187e8:	beq	18724 <argp_parse@@Base+0x22bc>
   187ec:	ldr	r3, [sp, #24]
   187f0:	mov	r2, #1
   187f4:	strb	r2, [r3, r4]
   187f8:	b	18784 <argp_parse@@Base+0x231c>
   187fc:	mov	r5, #1
   18800:	b	18784 <argp_parse@@Base+0x231c>
   18804:	str	sl, [sp, #12]
   18808:	ldr	r3, [sp, #24]
   1880c:	orrs	r3, r3, r5
   18810:	bne	18888 <argp_parse@@Base+0x2420>
   18814:	ldr	r3, [sp, #12]
   18818:	cmp	r3, #0
   1881c:	bne	189f4 <argp_parse@@Base+0x258c>
   18820:	ldr	r3, [sp, #92]	; 0x5c
   18824:	cmp	r3, #0
   18828:	beq	1885c <argp_parse@@Base+0x23f4>
   1882c:	ldr	r3, [fp]
   18830:	ldr	r2, [sp, #20]
   18834:	ldr	r3, [r2, r3, lsl #2]
   18838:	ldrb	r3, [r3, #1]
   1883c:	cmp	r3, #45	; 0x2d
   18840:	beq	1885c <argp_parse@@Base+0x23f4>
   18844:	ldr	r3, [fp, #20]
   18848:	ldrb	r1, [r3]
   1884c:	ldr	r0, [sp, #28]
   18850:	bl	11184 <strchr@plt>
   18854:	cmp	r0, #0
   18858:	bne	18af4 <argp_parse@@Base+0x268c>
   1885c:	ldr	r3, [sp, #100]	; 0x64
   18860:	cmp	r3, #0
   18864:	bne	189c4 <argp_parse@@Base+0x255c>
   18868:	mov	r2, #0
   1886c:	str	r2, [fp, #20]
   18870:	ldr	r3, [fp]
   18874:	add	r3, r3, #1
   18878:	str	r3, [fp]
   1887c:	str	r2, [fp, #8]
   18880:	mov	r0, #63	; 0x3f
   18884:	b	186e4 <argp_parse@@Base+0x227c>
   18888:	ldr	r3, [sp, #100]	; 0x64
   1888c:	cmp	r3, #0
   18890:	beq	188c8 <argp_parse@@Base+0x2460>
   18894:	cmp	r5, #0
   18898:	beq	18904 <argp_parse@@Base+0x249c>
   1889c:	movw	r0, #45720	; 0xb298
   188a0:	movt	r0, #2
   188a4:	ldr	r3, [fp, #20]
   188a8:	str	r3, [sp]
   188ac:	ldr	r3, [sp, #104]	; 0x68
   188b0:	ldr	r2, [sp, #20]
   188b4:	ldr	r2, [r2]
   188b8:	movw	r1, #41264	; 0xa130
   188bc:	movt	r1, #1
   188c0:	ldr	r0, [r0]
   188c4:	bl	11190 <fprintf@plt>
   188c8:	ldr	r3, [sp, #40]	; 0x28
   188cc:	cmp	r3, #0
   188d0:	bne	189b8 <argp_parse@@Base+0x2550>
   188d4:	ldr	r4, [fp, #20]
   188d8:	mov	r0, r4
   188dc:	bl	11178 <strlen@plt>
   188e0:	add	r0, r4, r0
   188e4:	str	r0, [fp, #20]
   188e8:	ldr	r3, [fp]
   188ec:	add	r3, r3, #1
   188f0:	str	r3, [fp]
   188f4:	mov	r3, #0
   188f8:	str	r3, [fp, #8]
   188fc:	mov	r0, #63	; 0x3f
   18900:	b	186e4 <argp_parse@@Base+0x227c>
   18904:	movw	r4, #45720	; 0xb298
   18908:	movt	r4, #2
   1890c:	ldr	r0, [r4]
   18910:	bl	1122c <flockfile@plt>
   18914:	ldr	r3, [fp, #20]
   18918:	str	r3, [sp]
   1891c:	ldr	r3, [sp, #104]	; 0x68
   18920:	ldr	r2, [sp, #20]
   18924:	ldr	r2, [r2]
   18928:	movw	r1, #41296	; 0xa150
   1892c:	movt	r1, #1
   18930:	ldr	r0, [r4]
   18934:	bl	11190 <fprintf@plt>
   18938:	cmp	r6, #0
   1893c:	ble	18998 <argp_parse@@Base+0x2530>
   18940:	ldr	r2, [sp, #24]
   18944:	sub	r4, r2, #1
   18948:	sub	r3, r6, #1
   1894c:	add	r8, r2, r3
   18950:	movw	r7, #41344	; 0xa180
   18954:	movt	r7, #1
   18958:	movw	r6, #45720	; 0xb298
   1895c:	movt	r6, #2
   18960:	ldr	r9, [sp, #16]
   18964:	b	18974 <argp_parse@@Base+0x250c>
   18968:	add	r5, r5, #1
   1896c:	cmp	r8, r4
   18970:	beq	18998 <argp_parse@@Base+0x2530>
   18974:	ldrb	r3, [r4, #1]!
   18978:	cmp	r3, #0
   1897c:	beq	18968 <argp_parse@@Base+0x2500>
   18980:	ldr	r3, [r9, r5, lsl #4]
   18984:	ldr	r2, [sp, #104]	; 0x68
   18988:	mov	r1, r7
   1898c:	ldr	r0, [r6]
   18990:	bl	11190 <fprintf@plt>
   18994:	b	18968 <argp_parse@@Base+0x2500>
   18998:	movw	r4, #45720	; 0xb298
   1899c:	movt	r4, #2
   189a0:	ldr	r1, [r4]
   189a4:	mov	r0, #10
   189a8:	bl	11220 <fputc@plt>
   189ac:	ldr	r0, [r4]
   189b0:	bl	110c4 <funlockfile@plt>
   189b4:	b	188c8 <argp_parse@@Base+0x2460>
   189b8:	ldr	r0, [sp, #24]
   189bc:	bl	17140 <argp_parse@@Base+0xcd8>
   189c0:	b	188d4 <argp_parse@@Base+0x246c>
   189c4:	movw	r0, #45720	; 0xb298
   189c8:	movt	r0, #2
   189cc:	ldr	r3, [fp, #20]
   189d0:	str	r3, [sp]
   189d4:	ldr	r3, [sp, #104]	; 0x68
   189d8:	ldr	r2, [sp, #20]
   189dc:	ldr	r2, [r2]
   189e0:	movw	r1, #41352	; 0xa188
   189e4:	movt	r1, #1
   189e8:	ldr	r0, [r0]
   189ec:	bl	11190 <fprintf@plt>
   189f0:	b	18868 <argp_parse@@Base+0x2400>
   189f4:	ldr	r6, [sp, #36]	; 0x24
   189f8:	b	18684 <argp_parse@@Base+0x221c>
   189fc:	ldr	r3, [sp, #100]	; 0x64
   18a00:	cmp	r3, #0
   18a04:	bne	18a1c <argp_parse@@Base+0x25b4>
   18a08:	ldr	r3, [sp, #12]
   18a0c:	ldr	r3, [r3, #12]
   18a10:	str	r3, [fp, #8]
   18a14:	mov	r0, #63	; 0x3f
   18a18:	b	186e4 <argp_parse@@Base+0x227c>
   18a1c:	movw	r0, #45720	; 0xb298
   18a20:	movt	r0, #2
   18a24:	ldr	r3, [sp, #12]
   18a28:	ldr	r3, [r3]
   18a2c:	str	r3, [sp]
   18a30:	ldr	r3, [sp, #104]	; 0x68
   18a34:	ldr	r2, [sp, #20]
   18a38:	ldr	r2, [r2]
   18a3c:	movw	r1, #41384	; 0xa1a8
   18a40:	movt	r1, #1
   18a44:	ldr	r0, [r0]
   18a48:	bl	11190 <fprintf@plt>
   18a4c:	b	18a08 <argp_parse@@Base+0x25a0>
   18a50:	ldr	r1, [sp, #12]
   18a54:	ldr	r1, [r1, #4]
   18a58:	cmp	r1, #1
   18a5c:	bne	186bc <argp_parse@@Base+0x2254>
   18a60:	ldr	r1, [sp, #32]
   18a64:	cmp	r2, r1
   18a68:	bge	18a84 <argp_parse@@Base+0x261c>
   18a6c:	add	r3, r3, #2
   18a70:	str	r3, [fp]
   18a74:	ldr	r3, [sp, #20]
   18a78:	ldr	r3, [r3, r2, lsl #2]
   18a7c:	str	r3, [fp, #12]
   18a80:	b	186bc <argp_parse@@Base+0x2254>
   18a84:	ldr	r3, [sp, #100]	; 0x64
   18a88:	cmp	r3, #0
   18a8c:	bne	18ab4 <argp_parse@@Base+0x264c>
   18a90:	ldr	r3, [sp, #12]
   18a94:	ldr	r3, [r3, #12]
   18a98:	str	r3, [fp, #8]
   18a9c:	ldr	r3, [sp, #28]
   18aa0:	ldrb	r3, [r3]
   18aa4:	cmp	r3, #58	; 0x3a
   18aa8:	moveq	r0, #58	; 0x3a
   18aac:	movne	r0, #63	; 0x3f
   18ab0:	b	186e4 <argp_parse@@Base+0x227c>
   18ab4:	movw	r0, #45720	; 0xb298
   18ab8:	movt	r0, #2
   18abc:	ldr	r3, [sp, #12]
   18ac0:	ldr	r3, [r3]
   18ac4:	str	r3, [sp]
   18ac8:	ldr	r3, [sp, #104]	; 0x68
   18acc:	ldr	r2, [sp, #20]
   18ad0:	ldr	r2, [r2]
   18ad4:	movw	r1, #41432	; 0xa1d8
   18ad8:	movt	r1, #1
   18adc:	ldr	r0, [r0]
   18ae0:	bl	11190 <fprintf@plt>
   18ae4:	b	18a90 <argp_parse@@Base+0x2628>
   18ae8:	ldr	r3, [sp, #12]
   18aec:	ldr	r0, [r3, #12]
   18af0:	b	186e4 <argp_parse@@Base+0x227c>
   18af4:	mvn	r0, #0
   18af8:	b	186e4 <argp_parse@@Base+0x227c>
   18afc:	mov	r6, #0
   18b00:	cmp	sl, #0
   18b04:	beq	18820 <argp_parse@@Base+0x23b8>
   18b08:	ldr	r9, [sp, #16]
   18b0c:	mvn	r3, #0
   18b10:	str	r3, [sp, #36]	; 0x24
   18b14:	mov	r5, #0
   18b18:	str	r5, [sp, #40]	; 0x28
   18b1c:	str	r5, [sp, #24]
   18b20:	mov	r4, r5
   18b24:	mov	r3, #1
   18b28:	str	r3, [sp, #44]	; 0x2c
   18b2c:	mov	r0, sl
   18b30:	mov	sl, r5
   18b34:	str	r7, [sp, #12]
   18b38:	b	18794 <argp_parse@@Base+0x232c>
   18b3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18b40:	strd	r6, [sp, #8]
   18b44:	strd	r8, [sp, #16]
   18b48:	strd	sl, [sp, #24]
   18b4c:	str	lr, [sp, #32]
   18b50:	sub	sp, sp, #36	; 0x24
   18b54:	str	r3, [sp, #24]
   18b58:	ldr	r4, [sp, #80]	; 0x50
   18b5c:	ldr	r8, [r4, #4]
   18b60:	subs	r5, r0, #0
   18b64:	ble	190a0 <argp_parse@@Base+0x2c38>
   18b68:	mov	r9, r1
   18b6c:	mov	r6, r2
   18b70:	mov	r3, #0
   18b74:	str	r3, [r4, #12]
   18b78:	ldr	r3, [r4]
   18b7c:	cmp	r3, #0
   18b80:	beq	18ba4 <argp_parse@@Base+0x273c>
   18b84:	ldr	r3, [r4, #16]
   18b88:	cmp	r3, #0
   18b8c:	beq	18bac <argp_parse@@Base+0x2744>
   18b90:	ldrb	r3, [r2]
   18b94:	sub	r3, r3, #43	; 0x2b
   18b98:	tst	r3, #253	; 0xfd
   18b9c:	addeq	r6, r2, #1
   18ba0:	b	18c08 <argp_parse@@Base+0x27a0>
   18ba4:	mov	r3, #1
   18ba8:	str	r3, [r4]
   18bac:	ldr	r3, [r4]
   18bb0:	str	r3, [r4, #32]
   18bb4:	str	r3, [r4, #28]
   18bb8:	mov	r3, #0
   18bbc:	str	r3, [r4, #20]
   18bc0:	ldrb	r3, [r6]
   18bc4:	cmp	r3, #45	; 0x2d
   18bc8:	moveq	r3, #2
   18bcc:	streq	r3, [r4, #24]
   18bd0:	addeq	r6, r6, #1
   18bd4:	beq	18c00 <argp_parse@@Base+0x2798>
   18bd8:	cmp	r3, #43	; 0x2b
   18bdc:	moveq	r3, #0
   18be0:	streq	r3, [r4, #24]
   18be4:	addeq	r6, r6, #1
   18be8:	beq	18c00 <argp_parse@@Base+0x2798>
   18bec:	ldr	r3, [sp, #84]	; 0x54
   18bf0:	cmp	r3, #0
   18bf4:	beq	18cc8 <argp_parse@@Base+0x2860>
   18bf8:	mov	r3, #0
   18bfc:	str	r3, [r4, #24]
   18c00:	mov	r3, #1
   18c04:	str	r3, [r4, #16]
   18c08:	ldrb	r3, [r6]
   18c0c:	cmp	r3, #58	; 0x3a
   18c10:	moveq	r8, #0
   18c14:	ldr	r3, [r4, #20]
   18c18:	cmp	r3, #0
   18c1c:	beq	18c2c <argp_parse@@Base+0x27c4>
   18c20:	ldrb	r3, [r3]
   18c24:	cmp	r3, #0
   18c28:	bne	18dcc <argp_parse@@Base+0x2964>
   18c2c:	ldr	r3, [r4]
   18c30:	ldr	r2, [r4, #32]
   18c34:	cmp	r2, r3
   18c38:	strgt	r3, [r4, #32]
   18c3c:	ldr	r2, [r4, #28]
   18c40:	cmp	r3, r2
   18c44:	strlt	r3, [r4, #28]
   18c48:	ldr	r2, [r4, #24]
   18c4c:	cmp	r2, #1
   18c50:	beq	18ce8 <argp_parse@@Base+0x2880>
   18c54:	ldr	r7, [r4]
   18c58:	cmp	r7, r5
   18c5c:	beq	18ca8 <argp_parse@@Base+0x2840>
   18c60:	ldr	sl, [r9, r7, lsl #2]
   18c64:	movw	r1, #40068	; 0x9c84
   18c68:	movt	r1, #1
   18c6c:	mov	r0, sl
   18c70:	bl	10fd4 <strcmp@plt>
   18c74:	cmp	r0, #0
   18c78:	bne	190b0 <argp_parse@@Base+0x2c48>
   18c7c:	add	r7, r7, #1
   18c80:	str	r7, [r4]
   18c84:	ldr	r2, [r4, #28]
   18c88:	ldr	r3, [r4, #32]
   18c8c:	cmp	r2, r3
   18c90:	cmpne	r7, r3
   18c94:	bne	18d64 <argp_parse@@Base+0x28fc>
   18c98:	cmp	r2, r3
   18c9c:	streq	r7, [r4, #28]
   18ca0:	str	r5, [r4, #32]
   18ca4:	str	r5, [r4]
   18ca8:	ldr	r3, [r4, #28]
   18cac:	ldr	r2, [r4, #32]
   18cb0:	cmp	r3, r2
   18cb4:	mvneq	r0, #0
   18cb8:	beq	190dc <argp_parse@@Base+0x2c74>
   18cbc:	str	r3, [r4]
   18cc0:	mvn	r0, #0
   18cc4:	b	190dc <argp_parse@@Base+0x2c74>
   18cc8:	movw	r0, #41472	; 0xa200
   18ccc:	movt	r0, #1
   18cd0:	bl	11100 <getenv@plt>
   18cd4:	cmp	r0, #0
   18cd8:	bne	18bf8 <argp_parse@@Base+0x2790>
   18cdc:	mov	r3, #1
   18ce0:	str	r3, [r4, #24]
   18ce4:	b	18c00 <argp_parse@@Base+0x2798>
   18ce8:	ldr	r2, [r4, #32]
   18cec:	ldr	r1, [r4, #28]
   18cf0:	cmp	r1, r2
   18cf4:	cmpne	r3, r2
   18cf8:	bne	18d18 <argp_parse@@Base+0x28b0>
   18cfc:	cmp	r3, r2
   18d00:	strne	r3, [r4, #28]
   18d04:	ldr	r3, [r4]
   18d08:	cmp	r5, r3
   18d0c:	ble	18d5c <argp_parse@@Base+0x28f4>
   18d10:	add	r1, r9, r3, lsl #2
   18d14:	b	18d38 <argp_parse@@Base+0x28d0>
   18d18:	mov	r1, r4
   18d1c:	mov	r0, r9
   18d20:	bl	184e8 <argp_parse@@Base+0x2080>
   18d24:	b	18d04 <argp_parse@@Base+0x289c>
   18d28:	add	r3, r3, #1
   18d2c:	str	r3, [r4]
   18d30:	cmp	r3, r5
   18d34:	beq	18d58 <argp_parse@@Base+0x28f0>
   18d38:	ldr	r2, [r1], #4
   18d3c:	ldrb	r0, [r2]
   18d40:	cmp	r0, #45	; 0x2d
   18d44:	bne	18d28 <argp_parse@@Base+0x28c0>
   18d48:	ldrb	r2, [r2, #1]
   18d4c:	cmp	r2, #0
   18d50:	beq	18d28 <argp_parse@@Base+0x28c0>
   18d54:	b	18d5c <argp_parse@@Base+0x28f4>
   18d58:	mov	r3, r5
   18d5c:	str	r3, [r4, #32]
   18d60:	b	18c54 <argp_parse@@Base+0x27ec>
   18d64:	mov	r1, r4
   18d68:	mov	r0, r9
   18d6c:	bl	184e8 <argp_parse@@Base+0x2080>
   18d70:	b	18ca0 <argp_parse@@Base+0x2838>
   18d74:	ldrb	r1, [sl, #1]
   18d78:	cmp	r1, #0
   18d7c:	beq	190bc <argp_parse@@Base+0x2c54>
   18d80:	ldr	r3, [sp, #24]
   18d84:	cmp	r3, #0
   18d88:	beq	18dbc <argp_parse@@Base+0x2954>
   18d8c:	cmp	r1, #45	; 0x2d
   18d90:	beq	18e38 <argp_parse@@Base+0x29d0>
   18d94:	ldr	r3, [sp, #76]	; 0x4c
   18d98:	cmp	r3, #0
   18d9c:	beq	18dbc <argp_parse@@Base+0x2954>
   18da0:	ldrb	r3, [sl, #2]
   18da4:	cmp	r3, #0
   18da8:	bne	18e7c <argp_parse@@Base+0x2a14>
   18dac:	mov	r0, r6
   18db0:	bl	11184 <strchr@plt>
   18db4:	cmp	r0, #0
   18db8:	beq	18e7c <argp_parse@@Base+0x2a14>
   18dbc:	ldr	r3, [r4]
   18dc0:	ldr	r3, [r9, r3, lsl #2]
   18dc4:	add	r3, r3, #1
   18dc8:	str	r3, [r4, #20]
   18dcc:	ldr	sl, [r4, #20]
   18dd0:	add	fp, sl, #1
   18dd4:	str	fp, [r4, #20]
   18dd8:	ldrb	r7, [sl]
   18ddc:	str	r7, [sp, #28]
   18de0:	mov	r1, r7
   18de4:	mov	r0, r6
   18de8:	bl	11184 <strchr@plt>
   18dec:	ldrb	r3, [sl, #1]
   18df0:	cmp	r3, #0
   18df4:	bne	18e04 <argp_parse@@Base+0x299c>
   18df8:	ldr	r3, [r4]
   18dfc:	add	r3, r3, #1
   18e00:	str	r3, [r4]
   18e04:	sub	r3, r7, #58	; 0x3a
   18e08:	uxtb	r3, r3
   18e0c:	cmp	r0, #0
   18e10:	cmpne	r3, #1
   18e14:	bls	18ec8 <argp_parse@@Base+0x2a60>
   18e18:	ldrb	r3, [r0]
   18e1c:	cmp	r3, #87	; 0x57
   18e20:	beq	18f04 <argp_parse@@Base+0x2a9c>
   18e24:	ldrb	r3, [r0, #1]
   18e28:	cmp	r3, #58	; 0x3a
   18e2c:	beq	18fd8 <argp_parse@@Base+0x2b70>
   18e30:	mov	r0, r7
   18e34:	b	190dc <argp_parse@@Base+0x2c74>
   18e38:	add	sl, sl, #2
   18e3c:	str	sl, [r4, #20]
   18e40:	movw	r3, #40068	; 0x9c84
   18e44:	movt	r3, #1
   18e48:	str	r3, [sp, #16]
   18e4c:	str	r8, [sp, #12]
   18e50:	str	r4, [sp, #8]
   18e54:	ldr	r3, [sp, #76]	; 0x4c
   18e58:	str	r3, [sp, #4]
   18e5c:	ldr	r3, [sp, #72]	; 0x48
   18e60:	str	r3, [sp]
   18e64:	ldr	r3, [sp, #24]
   18e68:	mov	r2, r6
   18e6c:	mov	r1, r9
   18e70:	mov	r0, r5
   18e74:	bl	185c4 <argp_parse@@Base+0x215c>
   18e78:	b	190dc <argp_parse@@Base+0x2c74>
   18e7c:	add	sl, sl, #1
   18e80:	str	sl, [r4, #20]
   18e84:	movw	r3, #41488	; 0xa210
   18e88:	movt	r3, #1
   18e8c:	str	r3, [sp, #16]
   18e90:	str	r8, [sp, #12]
   18e94:	str	r4, [sp, #8]
   18e98:	ldr	r3, [sp, #76]	; 0x4c
   18e9c:	str	r3, [sp, #4]
   18ea0:	ldr	r3, [sp, #72]	; 0x48
   18ea4:	str	r3, [sp]
   18ea8:	ldr	r3, [sp, #24]
   18eac:	mov	r2, r6
   18eb0:	mov	r1, r9
   18eb4:	mov	r0, r5
   18eb8:	bl	185c4 <argp_parse@@Base+0x215c>
   18ebc:	cmn	r0, #1
   18ec0:	bne	190dc <argp_parse@@Base+0x2c74>
   18ec4:	b	18dbc <argp_parse@@Base+0x2954>
   18ec8:	cmp	r8, #0
   18ecc:	bne	18ee0 <argp_parse@@Base+0x2a78>
   18ed0:	ldr	r3, [sp, #28]
   18ed4:	str	r3, [r4, #8]
   18ed8:	mov	r0, #63	; 0x3f
   18edc:	b	190dc <argp_parse@@Base+0x2c74>
   18ee0:	movw	r0, #45720	; 0xb298
   18ee4:	movt	r0, #2
   18ee8:	ldr	r3, [sp, #28]
   18eec:	ldr	r2, [r9]
   18ef0:	movw	r1, #41492	; 0xa214
   18ef4:	movt	r1, #1
   18ef8:	ldr	r0, [r0]
   18efc:	bl	11190 <fprintf@plt>
   18f00:	b	18ed0 <argp_parse@@Base+0x2a68>
   18f04:	ldrb	r1, [r0, #1]
   18f08:	ldr	r2, [sp, #24]
   18f0c:	cmp	r1, #59	; 0x3b
   18f10:	movne	r3, #0
   18f14:	moveq	r3, #1
   18f18:	cmp	r2, #0
   18f1c:	moveq	r3, #0
   18f20:	cmp	r3, #0
   18f24:	beq	18e24 <argp_parse@@Base+0x29bc>
   18f28:	ldrb	r3, [sl, #1]
   18f2c:	cmp	r3, #0
   18f30:	strne	fp, [r4, #12]
   18f34:	bne	18f4c <argp_parse@@Base+0x2ae4>
   18f38:	ldr	r3, [r4]
   18f3c:	cmp	r3, r5
   18f40:	beq	18f94 <argp_parse@@Base+0x2b2c>
   18f44:	ldr	r3, [r9, r3, lsl #2]
   18f48:	str	r3, [r4, #12]
   18f4c:	ldr	r3, [r4, #12]
   18f50:	str	r3, [r4, #20]
   18f54:	mov	r2, #0
   18f58:	str	r2, [r4, #12]
   18f5c:	movw	r3, #41564	; 0xa25c
   18f60:	movt	r3, #1
   18f64:	str	r3, [sp, #16]
   18f68:	str	r8, [sp, #12]
   18f6c:	str	r4, [sp, #8]
   18f70:	str	r2, [sp, #4]
   18f74:	ldr	r3, [sp, #72]	; 0x48
   18f78:	str	r3, [sp]
   18f7c:	ldr	r3, [sp, #24]
   18f80:	mov	r2, r6
   18f84:	mov	r1, r9
   18f88:	mov	r0, r5
   18f8c:	bl	185c4 <argp_parse@@Base+0x215c>
   18f90:	b	190dc <argp_parse@@Base+0x2c74>
   18f94:	cmp	r8, #0
   18f98:	bne	18fb4 <argp_parse@@Base+0x2b4c>
   18f9c:	ldr	r3, [sp, #28]
   18fa0:	str	r3, [r4, #8]
   18fa4:	ldrb	r0, [r6]
   18fa8:	cmp	r0, #58	; 0x3a
   18fac:	movne	r0, #63	; 0x3f
   18fb0:	b	190dc <argp_parse@@Base+0x2c74>
   18fb4:	movw	r0, #45720	; 0xb298
   18fb8:	movt	r0, #2
   18fbc:	ldr	r3, [sp, #28]
   18fc0:	ldr	r2, [r9]
   18fc4:	movw	r1, #41520	; 0xa230
   18fc8:	movt	r1, #1
   18fcc:	ldr	r0, [r0]
   18fd0:	bl	11190 <fprintf@plt>
   18fd4:	b	18f9c <argp_parse@@Base+0x2b34>
   18fd8:	ldrb	r3, [r0, #2]
   18fdc:	cmp	r3, #58	; 0x3a
   18fe0:	beq	1900c <argp_parse@@Base+0x2ba4>
   18fe4:	ldrb	r3, [sl, #1]
   18fe8:	cmp	r3, #0
   18fec:	beq	1903c <argp_parse@@Base+0x2bd4>
   18ff0:	str	fp, [r4, #12]
   18ff4:	ldr	r3, [r4]
   18ff8:	add	r3, r3, #1
   18ffc:	str	r3, [r4]
   19000:	mov	r3, #0
   19004:	str	r3, [r4, #20]
   19008:	b	18e30 <argp_parse@@Base+0x29c8>
   1900c:	ldrb	r3, [sl, #1]
   19010:	cmp	r3, #0
   19014:	moveq	r3, #0
   19018:	streq	r3, [r4, #12]
   1901c:	beq	19030 <argp_parse@@Base+0x2bc8>
   19020:	str	fp, [r4, #12]
   19024:	ldr	r3, [r4]
   19028:	add	r3, r3, #1
   1902c:	str	r3, [r4]
   19030:	mov	r3, #0
   19034:	str	r3, [r4, #20]
   19038:	b	18e30 <argp_parse@@Base+0x29c8>
   1903c:	ldr	r3, [r4]
   19040:	cmp	r3, r5
   19044:	beq	1905c <argp_parse@@Base+0x2bf4>
   19048:	add	r2, r3, #1
   1904c:	str	r2, [r4]
   19050:	ldr	r3, [r9, r3, lsl #2]
   19054:	str	r3, [r4, #12]
   19058:	b	19000 <argp_parse@@Base+0x2b98>
   1905c:	cmp	r8, #0
   19060:	bne	1907c <argp_parse@@Base+0x2c14>
   19064:	ldr	r3, [sp, #28]
   19068:	str	r3, [r4, #8]
   1906c:	ldrb	r7, [r6]
   19070:	cmp	r7, #58	; 0x3a
   19074:	movne	r7, #63	; 0x3f
   19078:	b	19000 <argp_parse@@Base+0x2b98>
   1907c:	movw	r0, #45720	; 0xb298
   19080:	movt	r0, #2
   19084:	ldr	r3, [sp, #28]
   19088:	ldr	r2, [r9]
   1908c:	movw	r1, #41520	; 0xa230
   19090:	movt	r1, #1
   19094:	ldr	r0, [r0]
   19098:	bl	11190 <fprintf@plt>
   1909c:	b	19064 <argp_parse@@Base+0x2bfc>
   190a0:	mvn	r0, #0
   190a4:	b	190dc <argp_parse@@Base+0x2c74>
   190a8:	mvn	r0, #0
   190ac:	b	190dc <argp_parse@@Base+0x2c74>
   190b0:	ldrb	r3, [sl]
   190b4:	cmp	r3, #45	; 0x2d
   190b8:	beq	18d74 <argp_parse@@Base+0x290c>
   190bc:	ldr	r3, [r4, #24]
   190c0:	cmp	r3, #0
   190c4:	beq	190a8 <argp_parse@@Base+0x2c40>
   190c8:	add	r3, r7, #1
   190cc:	str	r3, [r4]
   190d0:	ldr	r3, [r9, r7, lsl #2]
   190d4:	str	r3, [r4, #12]
   190d8:	mov	r0, #1
   190dc:	add	sp, sp, #36	; 0x24
   190e0:	ldrd	r4, [sp]
   190e4:	ldrd	r6, [sp, #8]
   190e8:	ldrd	r8, [sp, #16]
   190ec:	ldrd	sl, [sp, #24]
   190f0:	add	sp, sp, #32
   190f4:	pop	{pc}		; (ldr pc, [sp], #4)
   190f8:	strd	r4, [sp, #-12]!
   190fc:	str	lr, [sp, #8]
   19100:	sub	sp, sp, #20
   19104:	movw	r4, #45780	; 0xb2d4
   19108:	movt	r4, #2
   1910c:	movw	r5, #45700	; 0xb284
   19110:	movt	r5, #2
   19114:	ldr	ip, [r5]
   19118:	str	ip, [r4]
   1911c:	ldr	ip, [r5, #4]
   19120:	str	ip, [r4, #4]
   19124:	ldr	ip, [sp, #40]	; 0x28
   19128:	str	ip, [sp, #12]
   1912c:	str	r4, [sp, #8]
   19130:	ldr	ip, [sp, #36]	; 0x24
   19134:	str	ip, [sp, #4]
   19138:	ldr	ip, [sp, #32]
   1913c:	str	ip, [sp]
   19140:	bl	18b3c <argp_parse@@Base+0x26d4>
   19144:	ldr	r3, [r4]
   19148:	str	r3, [r5]
   1914c:	movw	r3, #45936	; 0xb370
   19150:	movt	r3, #2
   19154:	ldr	r2, [r4, #12]
   19158:	str	r2, [r3]
   1915c:	ldr	r3, [r4, #8]
   19160:	str	r3, [r5, #8]
   19164:	add	sp, sp, #20
   19168:	ldrd	r4, [sp]
   1916c:	add	sp, sp, #8
   19170:	pop	{pc}		; (ldr pc, [sp], #4)
   19174:	push	{lr}		; (str lr, [sp, #-4]!)
   19178:	sub	sp, sp, #20
   1917c:	mov	r3, #1
   19180:	str	r3, [sp, #8]
   19184:	mov	r3, #0
   19188:	str	r3, [sp, #4]
   1918c:	str	r3, [sp]
   19190:	bl	190f8 <argp_parse@@Base+0x2c90>
   19194:	add	sp, sp, #20
   19198:	pop	{pc}		; (ldr pc, [sp], #4)
   1919c:	str	r4, [sp, #-8]!
   191a0:	str	lr, [sp, #4]
   191a4:	umull	r2, r3, r1, r2
   191a8:	cmp	r3, #0
   191ac:	bne	191c4 <argp_parse@@Base+0x2d5c>
   191b0:	mov	r1, r2
   191b4:	bl	17cec <argp_parse@@Base+0x1884>
   191b8:	ldr	r4, [sp]
   191bc:	add	sp, sp, #4
   191c0:	pop	{pc}		; (ldr pc, [sp], #4)
   191c4:	bl	1119c <__errno_location@plt>
   191c8:	mov	r3, #12
   191cc:	str	r3, [r0]
   191d0:	mov	r0, #0
   191d4:	b	191b8 <argp_parse@@Base+0x2d50>
   191d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   191dc:	mov	r7, r0
   191e0:	ldr	r6, [pc, #72]	; 19230 <argp_parse@@Base+0x2dc8>
   191e4:	ldr	r5, [pc, #72]	; 19234 <argp_parse@@Base+0x2dcc>
   191e8:	add	r6, pc, r6
   191ec:	add	r5, pc, r5
   191f0:	sub	r6, r6, r5
   191f4:	mov	r8, r1
   191f8:	mov	r9, r2
   191fc:	bl	10f9c <calloc@plt-0x20>
   19200:	asrs	r6, r6, #2
   19204:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19208:	mov	r4, #0
   1920c:	add	r4, r4, #1
   19210:	ldr	r3, [r5], #4
   19214:	mov	r2, r9
   19218:	mov	r1, r8
   1921c:	mov	r0, r7
   19220:	blx	r3
   19224:	cmp	r6, r4
   19228:	bne	1920c <argp_parse@@Base+0x2da4>
   1922c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19230:	andeq	r1, r1, ip, lsl sp
   19234:	andeq	r1, r1, r4, lsl sp
   19238:	bx	lr

Disassembly of section .fini:

0001923c <.fini>:
   1923c:	push	{r3, lr}
   19240:	pop	{r3, pc}
