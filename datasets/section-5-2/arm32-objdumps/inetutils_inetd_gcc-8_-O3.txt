
../repos/inetutils/src/inetd:     file format elf32-littlearm


Disassembly of section .init:

00011728 <.init>:
   11728:	push	{r3, lr}
   1172c:	bl	12588 <__assert_fail@plt+0x930>
   11730:	pop	{r3, pc}

Disassembly of section .plt:

00011734 <calloc@plt-0x14>:
   11734:	push	{lr}		; (str lr, [sp, #-4]!)
   11738:	ldr	lr, [pc, #4]	; 11744 <calloc@plt-0x4>
   1173c:	add	lr, pc, lr
   11740:	ldr	pc, [lr, #8]!
   11744:			; <UNDEFINED> instruction: 0x0001f8bc

00011748 <calloc@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #126976	; 0x1f000
   11750:	ldr	pc, [ip, #2236]!	; 0x8bc

00011754 <fputs_unlocked@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #126976	; 0x1f000
   1175c:	ldr	pc, [ip, #2228]!	; 0x8b4

00011760 <__getdelim@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #126976	; 0x1f000
   11768:	ldr	pc, [ip, #2220]!	; 0x8ac

0001176c <getpwnam@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #126976	; 0x1f000
   11774:	ldr	pc, [ip, #2212]!	; 0x8a4

00011778 <strcmp@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #126976	; 0x1f000
   11780:	ldr	pc, [ip, #2204]!	; 0x89c

00011784 <strtol@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #126976	; 0x1f000
   1178c:	ldr	pc, [ip, #2196]!	; 0x894

00011790 <setsockopt@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #126976	; 0x1f000
   11798:	ldr	pc, [ip, #2188]!	; 0x88c

0001179c <strcspn@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #126976	; 0x1f000
   117a4:	ldr	pc, [ip, #2180]!	; 0x884

000117a8 <pause@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #126976	; 0x1f000
   117b0:	ldr	pc, [ip, #2172]!	; 0x87c

000117b4 <printf@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #126976	; 0x1f000
   117bc:	ldr	pc, [ip, #2164]!	; 0x874

000117c0 <read@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #126976	; 0x1f000
   117c8:	ldr	pc, [ip, #2156]!	; 0x86c

000117cc <getprotobyname@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #126976	; 0x1f000
   117d4:	ldr	pc, [ip, #2148]!	; 0x864

000117d8 <sigprocmask@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #126976	; 0x1f000
   117e0:	ldr	pc, [ip, #2140]!	; 0x85c

000117e4 <memmove@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #126976	; 0x1f000
   117ec:	ldr	pc, [ip, #2132]!	; 0x854

000117f0 <strchrnul@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #126976	; 0x1f000
   117f8:	ldr	pc, [ip, #2124]!	; 0x84c

000117fc <free@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #126976	; 0x1f000
   11804:	ldr	pc, [ip, #2116]!	; 0x844

00011808 <gai_strerror@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #126976	; 0x1f000
   11810:	ldr	pc, [ip, #2108]!	; 0x83c

00011814 <strndup@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #126976	; 0x1f000
   1181c:	ldr	pc, [ip, #2100]!	; 0x834

00011820 <_exit@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #126976	; 0x1f000
   11828:	ldr	pc, [ip, #2092]!	; 0x82c

0001182c <memcpy@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #126976	; 0x1f000
   11834:	ldr	pc, [ip, #2084]!	; 0x824

00011838 <signal@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #126976	; 0x1f000
   11840:	ldr	pc, [ip, #2076]!	; 0x81c

00011844 <time@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #126976	; 0x1f000
   1184c:	ldr	pc, [ip, #2068]!	; 0x814

00011850 <fwrite_unlocked@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #126976	; 0x1f000
   11858:	ldr	pc, [ip, #2060]!	; 0x80c

0001185c <memcmp@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #126976	; 0x1f000
   11864:	ldr	pc, [ip, #2052]!	; 0x804

00011868 <select@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #126976	; 0x1f000
   11870:	ldr	pc, [ip, #2044]!	; 0x7fc

00011874 <sleep@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #126976	; 0x1f000
   1187c:	ldr	pc, [ip, #2036]!	; 0x7f4

00011880 <ctime@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #126976	; 0x1f000
   11888:	ldr	pc, [ip, #2028]!	; 0x7ec

0001188c <recvfrom@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #126976	; 0x1f000
   11894:	ldr	pc, [ip, #2020]!	; 0x7e4

00011898 <strdup@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #126976	; 0x1f000
   118a0:	ldr	pc, [ip, #2012]!	; 0x7dc

000118a4 <alarm@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #126976	; 0x1f000
   118ac:	ldr	pc, [ip, #2004]!	; 0x7d4

000118b0 <sysconf@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #126976	; 0x1f000
   118b8:	ldr	pc, [ip, #1996]!	; 0x7cc

000118bc <dup2@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #126976	; 0x1f000
   118c4:	ldr	pc, [ip, #1988]!	; 0x7c4

000118c8 <realloc@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #126976	; 0x1f000
   118d0:	ldr	pc, [ip, #1980]!	; 0x7bc

000118d4 <initgroups@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #126976	; 0x1f000
   118dc:	ldr	pc, [ip, #1972]!	; 0x7b4

000118e0 <chdir@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #126976	; 0x1f000
   118e8:	ldr	pc, [ip, #1964]!	; 0x7ac

000118ec <strcasecmp@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #126976	; 0x1f000
   118f4:	ldr	pc, [ip, #1956]!	; 0x7a4

000118f8 <funlockfile@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #126976	; 0x1f000
   11900:	ldr	pc, [ip, #1948]!	; 0x79c

00011904 <accept@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #126976	; 0x1f000
   1190c:	ldr	pc, [ip, #1940]!	; 0x794

00011910 <sigaction@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #126976	; 0x1f000
   11918:	ldr	pc, [ip, #1932]!	; 0x78c

0001191c <fwrite@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #126976	; 0x1f000
   11924:	ldr	pc, [ip, #1924]!	; 0x784

00011928 <strcat@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #126976	; 0x1f000
   11930:	ldr	pc, [ip, #1916]!	; 0x77c

00011934 <strcpy@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #126976	; 0x1f000
   1193c:	ldr	pc, [ip, #1908]!	; 0x774

00011940 <gettimeofday@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #126976	; 0x1f000
   11948:	ldr	pc, [ip, #1900]!	; 0x76c

0001194c <error@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #126976	; 0x1f000
   11954:	ldr	pc, [ip, #1892]!	; 0x764

00011958 <opendir@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #126976	; 0x1f000
   11960:	ldr	pc, [ip, #1884]!	; 0x75c

00011964 <open64@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #126976	; 0x1f000
   1196c:	ldr	pc, [ip, #1876]!	; 0x754

00011970 <getenv@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #126976	; 0x1f000
   11978:	ldr	pc, [ip, #1868]!	; 0x74c

0001197c <setgid@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #126976	; 0x1f000
   11984:	ldr	pc, [ip, #1860]!	; 0x744

00011988 <malloc@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #126976	; 0x1f000
   11990:	ldr	pc, [ip, #1852]!	; 0x73c

00011994 <sigaddset@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #126976	; 0x1f000
   1199c:	ldr	pc, [ip, #1844]!	; 0x734

000119a0 <__libc_start_main@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #126976	; 0x1f000
   119a8:	ldr	pc, [ip, #1836]!	; 0x72c

000119ac <strerror@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #126976	; 0x1f000
   119b4:	ldr	pc, [ip, #1828]!	; 0x724

000119b8 <__ctype_tolower_loc@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #126976	; 0x1f000
   119c0:	ldr	pc, [ip, #1820]!	; 0x71c

000119c4 <__gmon_start__@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #126976	; 0x1f000
   119cc:	ldr	pc, [ip, #1812]!	; 0x714

000119d0 <mempcpy@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #126976	; 0x1f000
   119d8:	ldr	pc, [ip, #1804]!	; 0x70c

000119dc <__ctype_b_loc@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #126976	; 0x1f000
   119e4:	ldr	pc, [ip, #1796]!	; 0x704

000119e8 <getpid@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #126976	; 0x1f000
   119f0:	ldr	pc, [ip, #1788]!	; 0x6fc

000119f4 <exit@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #126976	; 0x1f000
   119fc:	ldr	pc, [ip, #1780]!	; 0x6f4

00011a00 <strtoul@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #126976	; 0x1f000
   11a08:	ldr	pc, [ip, #1772]!	; 0x6ec

00011a0c <strlen@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #126976	; 0x1f000
   11a14:	ldr	pc, [ip, #1764]!	; 0x6e4

00011a18 <setsid@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #126976	; 0x1f000
   11a20:	ldr	pc, [ip, #1756]!	; 0x6dc

00011a24 <strchr@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #126976	; 0x1f000
   11a2c:	ldr	pc, [ip, #1748]!	; 0x6d4

00011a30 <setenv@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #126976	; 0x1f000
   11a38:	ldr	pc, [ip, #1740]!	; 0x6cc

00011a3c <fprintf@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #126976	; 0x1f000
   11a44:	ldr	pc, [ip, #1732]!	; 0x6c4

00011a48 <execv@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #126976	; 0x1f000
   11a50:	ldr	pc, [ip, #1724]!	; 0x6bc

00011a54 <__errno_location@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #126976	; 0x1f000
   11a5c:	ldr	pc, [ip, #1716]!	; 0x6b4

00011a60 <snprintf@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #126976	; 0x1f000
   11a68:	ldr	pc, [ip, #1708]!	; 0x6ac

00011a6c <strerror_r@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #126976	; 0x1f000
   11a74:	ldr	pc, [ip, #1700]!	; 0x6a4

00011a78 <bind@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #126976	; 0x1f000
   11a80:	ldr	pc, [ip, #1692]!	; 0x69c

00011a84 <memset@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #126976	; 0x1f000
   11a8c:	ldr	pc, [ip, #1684]!	; 0x694

00011a90 <strncpy@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #126976	; 0x1f000
   11a98:	ldr	pc, [ip, #1676]!	; 0x68c

00011a9c <sigsuspend@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #126976	; 0x1f000
   11aa4:	ldr	pc, [ip, #1668]!	; 0x684

00011aa8 <wait3@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #126976	; 0x1f000
   11ab0:	ldr	pc, [ip, #1660]!	; 0x67c

00011ab4 <write@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #126976	; 0x1f000
   11abc:	ldr	pc, [ip, #1652]!	; 0x674

00011ac0 <memchr@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #126976	; 0x1f000
   11ac8:	ldr	pc, [ip, #1644]!	; 0x66c

00011acc <fclose@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #126976	; 0x1f000
   11ad4:	ldr	pc, [ip, #1636]!	; 0x664

00011ad8 <sendto@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #126976	; 0x1f000
   11ae0:	ldr	pc, [ip, #1628]!	; 0x65c

00011ae4 <__overflow@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #126976	; 0x1f000
   11aec:	ldr	pc, [ip, #1620]!	; 0x654

00011af0 <sigemptyset@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #126976	; 0x1f000
   11af8:	ldr	pc, [ip, #1612]!	; 0x64c

00011afc <fork@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #126976	; 0x1f000
   11b04:	ldr	pc, [ip, #1604]!	; 0x644

00011b08 <getnameinfo@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #126976	; 0x1f000
   11b10:	ldr	pc, [ip, #1596]!	; 0x63c

00011b14 <strrchr@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #126976	; 0x1f000
   11b1c:	ldr	pc, [ip, #1588]!	; 0x634

00011b20 <listen@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #126976	; 0x1f000
   11b28:	ldr	pc, [ip, #1580]!	; 0x62c

00011b2c <vfprintf@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #126976	; 0x1f000
   11b34:	ldr	pc, [ip, #1572]!	; 0x624

00011b38 <fputc@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #126976	; 0x1f000
   11b40:	ldr	pc, [ip, #1564]!	; 0x61c

00011b44 <syslog@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #126976	; 0x1f000
   11b4c:	ldr	pc, [ip, #1556]!	; 0x614

00011b50 <setuid@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #126976	; 0x1f000
   11b58:	ldr	pc, [ip, #1548]!	; 0x60c

00011b5c <sprintf@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #126976	; 0x1f000
   11b64:	ldr	pc, [ip, #1540]!	; 0x604

00011b68 <readdir64@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #126976	; 0x1f000
   11b70:	ldr	pc, [ip, #1532]!	; 0x5fc

00011b74 <openlog@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #126976	; 0x1f000
   11b7c:	ldr	pc, [ip, #1524]!	; 0x5f4

00011b80 <getsockname@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #126976	; 0x1f000
   11b88:	ldr	pc, [ip, #1516]!	; 0x5ec

00011b8c <flockfile@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #126976	; 0x1f000
   11b94:	ldr	pc, [ip, #1508]!	; 0x5e4

00011b98 <vsnprintf@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #126976	; 0x1f000
   11ba0:	ldr	pc, [ip, #1500]!	; 0x5dc

00011ba4 <fopen64@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #126976	; 0x1f000
   11bac:	ldr	pc, [ip, #1492]!	; 0x5d4

00011bb0 <qsort@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #126976	; 0x1f000
   11bb8:	ldr	pc, [ip, #1484]!	; 0x5cc

00011bbc <getpeername@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #126976	; 0x1f000
   11bc4:	ldr	pc, [ip, #1476]!	; 0x5c4

00011bc8 <freeaddrinfo@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #126976	; 0x1f000
   11bd0:	ldr	pc, [ip, #1468]!	; 0x5bc

00011bd4 <getaddrinfo@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #126976	; 0x1f000
   11bdc:	ldr	pc, [ip, #1460]!	; 0x5b4

00011be0 <socket@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #126976	; 0x1f000
   11be8:	ldr	pc, [ip, #1452]!	; 0x5ac

00011bec <__xstat64@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #126976	; 0x1f000
   11bf4:	ldr	pc, [ip, #1444]!	; 0x5a4

00011bf8 <unsetenv@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #126976	; 0x1f000
   11c00:	ldr	pc, [ip, #1436]!	; 0x59c

00011c04 <strncmp@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #126976	; 0x1f000
   11c0c:	ldr	pc, [ip, #1428]!	; 0x594

00011c10 <abort@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #126976	; 0x1f000
   11c18:	ldr	pc, [ip, #1420]!	; 0x58c

00011c1c <recv@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #126976	; 0x1f000
   11c24:	ldr	pc, [ip, #1412]!	; 0x584

00011c28 <close@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #126976	; 0x1f000
   11c30:	ldr	pc, [ip, #1404]!	; 0x57c

00011c34 <closedir@plt>:
   11c34:	add	ip, pc, #0, 12
   11c38:	add	ip, ip, #126976	; 0x1f000
   11c3c:	ldr	pc, [ip, #1396]!	; 0x574

00011c40 <getgrnam@plt>:
   11c40:	add	ip, pc, #0, 12
   11c44:	add	ip, ip, #126976	; 0x1f000
   11c48:	ldr	pc, [ip, #1388]!	; 0x56c

00011c4c <strspn@plt>:
   11c4c:	add	ip, pc, #0, 12
   11c50:	add	ip, ip, #126976	; 0x1f000
   11c54:	ldr	pc, [ip, #1380]!	; 0x564

00011c58 <__assert_fail@plt>:
   11c58:	add	ip, pc, #0, 12
   11c5c:	add	ip, ip, #126976	; 0x1f000
   11c60:	ldr	pc, [ip, #1372]!	; 0x55c

Disassembly of section .text:

00011c64 <daemon@@Base-0x49e0>:
   11c64:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11c68:	mov	r4, r1
   11c6c:	mov	r5, r2
   11c70:	strd	r6, [sp, #8]
   11c74:	mov	r7, r0
   11c78:	strd	r8, [sp, #16]
   11c7c:	strd	sl, [sp, #24]
   11c80:	str	lr, [sp, #32]
   11c84:	sub	sp, sp, #300	; 0x12c
   11c88:	ldr	r0, [r1]
   11c8c:	bl	17eb4 <argp_parse@@Base+0x1164>
   11c90:	movw	r3, #5628	; 0x15fc
   11c94:	movt	r3, #3
   11c98:	cmp	r5, #0
   11c9c:	str	r4, [r3]
   11ca0:	beq	11f58 <__assert_fail@plt+0x300>
   11ca4:	ldr	r3, [r5]
   11ca8:	cmp	r3, #0
   11cac:	beq	11f58 <__assert_fail@plt+0x300>
   11cb0:	ldr	r3, [r5, #4]!
   11cb4:	cmp	r3, #0
   11cb8:	bne	11cb0 <__assert_fail@plt+0x58>
   11cbc:	ldr	r5, [r5, #-4]
   11cc0:	movw	r6, #5060	; 0x13c4
   11cc4:	movt	r6, #3
   11cc8:	mov	r0, r5
   11ccc:	bl	11a0c <strlen@plt>
   11cd0:	add	r0, r5, r0
   11cd4:	movw	r1, #5632	; 0x1600
   11cd8:	movt	r1, #3
   11cdc:	movw	r3, #5660	; 0x161c
   11ce0:	movt	r3, #3
   11ce4:	movw	r2, #62016	; 0xf240
   11ce8:	movt	r2, #1
   11cec:	str	r0, [r1]
   11cf0:	movw	r0, #62040	; 0xf258
   11cf4:	movt	r0, #1
   11cf8:	ldr	r1, [pc, #2116]	; 12544 <__assert_fail@plt+0x8ec>
   11cfc:	str	r2, [r3]
   11d00:	bl	17c90 <argp_parse@@Base+0xf40>
   11d04:	mov	r1, #0
   11d08:	add	r2, sp, #28
   11d0c:	ldr	r0, [pc, #2100]	; 12548 <__assert_fail@plt+0x8f0>
   11d10:	mov	r3, r1
   11d14:	str	r2, [sp]
   11d18:	mov	r2, r4
   11d1c:	str	r1, [sp, #4]
   11d20:	mov	r1, r7
   11d24:	bl	16d50 <argp_parse@@Base>
   11d28:	ldrb	r3, [r6, #2]
   11d2c:	cmp	r3, #0
   11d30:	movne	r3, #1
   11d34:	strbne	r3, [r6, #1]
   11d38:	ldr	r3, [sp, #28]
   11d3c:	cmp	r3, r7
   11d40:	bge	123cc <__assert_fail@plt+0x774>
   11d44:	sub	r3, r7, r3
   11d48:	mov	r1, #4
   11d4c:	add	r0, r3, #1
   11d50:	bl	18acc <argp_parse@@Base+0x1d7c>
   11d54:	ldr	r3, [sp, #28]
   11d58:	movw	r2, #5648	; 0x1610
   11d5c:	movt	r2, #3
   11d60:	str	r0, [r2]
   11d64:	cmp	r7, r3
   11d68:	ble	11d90 <__assert_fail@plt+0x138>
   11d6c:	sub	r5, r0, #4
   11d70:	ldr	r0, [r4, r3, lsl #2]
   11d74:	bl	11898 <strdup@plt>
   11d78:	ldr	r3, [sp, #28]
   11d7c:	str	r0, [r5, #4]!
   11d80:	add	r3, r3, #1
   11d84:	cmp	r3, r7
   11d88:	str	r3, [sp, #28]
   11d8c:	blt	11d70 <__assert_fail@plt+0x118>
   11d90:	ldrb	r1, [r6]
   11d94:	cmp	r1, #0
   11d98:	bne	11dac <__assert_fail@plt+0x154>
   11d9c:	mov	r0, r1
   11da0:	bl	16644 <daemon@@Base>
   11da4:	cmp	r0, #0
   11da8:	blt	123b0 <__assert_fail@plt+0x758>
   11dac:	movw	r0, #62040	; 0xf258
   11db0:	movt	r0, #1
   11db4:	mov	r2, #24
   11db8:	mov	r1, #17
   11dbc:	movw	r9, #4556	; 0x11cc
   11dc0:	movt	r9, #3
   11dc4:	bl	11b74 <openlog@plt>
   11dc8:	ldrb	r3, [r9, #4]
   11dcc:	cmp	r3, #0
   11dd0:	bne	12410 <__assert_fail@plt+0x7b8>
   11dd4:	mov	r0, #14
   11dd8:	movw	r1, #14588	; 0x38fc
   11ddc:	movt	r1, #1
   11de0:	movw	r7, #5620	; 0x15f4
   11de4:	movt	r7, #3
   11de8:	movw	sl, #5484	; 0x156c
   11dec:	movt	sl, #3
   11df0:	movw	r8, #5488	; 0x1570
   11df4:	movt	r8, #3
   11df8:	movw	fp, #5048	; 0x13b8
   11dfc:	movt	fp, #3
   11e00:	bl	13240 <__assert_fail@plt+0x15e8>
   11e04:	mov	r0, #0
   11e08:	mov	r4, r0
   11e0c:	bl	15660 <__assert_fail@plt+0x3a08>
   11e10:	mov	r0, #1
   11e14:	movw	r1, #22112	; 0x5660
   11e18:	movt	r1, #1
   11e1c:	bl	13240 <__assert_fail@plt+0x15e8>
   11e20:	movw	r3, #5652	; 0x1614
   11e24:	movt	r3, #3
   11e28:	mov	r0, #17
   11e2c:	movw	r1, #9788	; 0x263c
   11e30:	movt	r1, #1
   11e34:	str	r3, [sp, #16]
   11e38:	bl	13240 <__assert_fail@plt+0x15e8>
   11e3c:	mov	r1, #1
   11e40:	mov	r0, #13
   11e44:	bl	13240 <__assert_fail@plt+0x15e8>
   11e48:	mov	r2, #99	; 0x63
   11e4c:	mov	r1, #120	; 0x78
   11e50:	add	r0, sp, #168	; 0xa8
   11e54:	bl	11a84 <memset@plt>
   11e58:	add	r1, sp, #168	; 0xa8
   11e5c:	movw	r0, #62188	; 0xf2ec
   11e60:	movt	r0, #1
   11e64:	mov	r2, #1
   11e68:	strb	r4, [sp, #267]	; 0x10b
   11e6c:	bl	11a30 <setenv@plt>
   11e70:	movw	r3, #62316	; 0xf36c
   11e74:	movt	r3, #1
   11e78:	str	r3, [sp, #20]
   11e7c:	ldr	r4, [r7]
   11e80:	cmp	r4, #0
   11e84:	beq	11ed8 <__assert_fail@plt+0x280>
   11e88:	mov	r2, #128	; 0x80
   11e8c:	mov	r1, r8
   11e90:	add	r0, sp, #40	; 0x28
   11e94:	bl	1182c <memcpy@plt>
   11e98:	ldr	r0, [sl]
   11e9c:	mov	r3, #0
   11ea0:	add	r1, sp, #40	; 0x28
   11ea4:	mov	r2, r3
   11ea8:	str	r3, [sp]
   11eac:	add	r0, r0, #1
   11eb0:	bl	11868 <select@plt>
   11eb4:	subs	r3, r0, #0
   11eb8:	str	r3, [sp, #8]
   11ebc:	bgt	11f90 <__assert_fail@plt+0x338>
   11ec0:	bne	11f6c <__assert_fail@plt+0x314>
   11ec4:	mov	r0, #1
   11ec8:	bl	11874 <sleep@plt>
   11ecc:	ldr	r4, [r7]
   11ed0:	cmp	r4, #0
   11ed4:	bne	11e88 <__assert_fail@plt+0x230>
   11ed8:	add	r0, sp, #40	; 0x28
   11edc:	bl	11af0 <sigemptyset@plt>
   11ee0:	add	r0, sp, #168	; 0xa8
   11ee4:	bl	11af0 <sigemptyset@plt>
   11ee8:	mov	r1, #17
   11eec:	add	r0, sp, #168	; 0xa8
   11ef0:	bl	11994 <sigaddset@plt>
   11ef4:	mov	r1, #1
   11ef8:	add	r0, sp, #168	; 0xa8
   11efc:	bl	11994 <sigaddset@plt>
   11f00:	mov	r1, #14
   11f04:	add	r0, sp, #168	; 0xa8
   11f08:	bl	11994 <sigaddset@plt>
   11f0c:	mov	r2, r4
   11f10:	add	r1, sp, #168	; 0xa8
   11f14:	mov	r0, r4
   11f18:	bl	117d8 <sigprocmask@plt>
   11f1c:	ldr	r3, [r7]
   11f20:	cmp	r3, #0
   11f24:	bne	11f3c <__assert_fail@plt+0x2e4>
   11f28:	add	r0, sp, #40	; 0x28
   11f2c:	bl	11a9c <sigsuspend@plt>
   11f30:	ldr	r3, [r7]
   11f34:	cmp	r3, #0
   11f38:	beq	11f28 <__assert_fail@plt+0x2d0>
   11f3c:	add	r0, sp, #168	; 0xa8
   11f40:	bl	11af0 <sigemptyset@plt>
   11f44:	mov	r2, #0
   11f48:	add	r1, sp, #168	; 0xa8
   11f4c:	mov	r0, #2
   11f50:	bl	117d8 <sigprocmask@plt>
   11f54:	b	11e88 <__assert_fail@plt+0x230>
   11f58:	ldr	r3, [r4]
   11f5c:	mov	r5, r4
   11f60:	cmp	r3, #0
   11f64:	bne	11cb0 <__assert_fail@plt+0x58>
   11f68:	b	11cbc <__assert_fail@plt+0x64>
   11f6c:	bl	11a54 <__errno_location@plt>
   11f70:	ldr	r3, [r0]
   11f74:	cmp	r3, #4
   11f78:	beq	11ec4 <__assert_fail@plt+0x26c>
   11f7c:	movw	r1, #62200	; 0xf2f8
   11f80:	movt	r1, #1
   11f84:	mov	r0, #4
   11f88:	bl	11b44 <syslog@plt>
   11f8c:	b	11ec4 <__assert_fail@plt+0x26c>
   11f90:	ldr	r3, [sp, #16]
   11f94:	ldr	r4, [r3]
   11f98:	cmp	r4, #0
   11f9c:	bne	12008 <__assert_fail@plt+0x3b0>
   11fa0:	b	11e7c <__assert_fail@plt+0x224>
   11fa4:	add	r0, sp, #168	; 0xa8
   11fa8:	str	r2, [sp, #12]
   11fac:	bl	11af0 <sigemptyset@plt>
   11fb0:	add	r1, sp, #168	; 0xa8
   11fb4:	mov	r0, #2
   11fb8:	ldr	r2, [sp, #12]
   11fbc:	bl	117d8 <sigprocmask@plt>
   11fc0:	ldr	r3, [r4, #44]	; 0x2c
   11fc4:	cmp	r3, #0
   11fc8:	beq	12218 <__assert_fail@plt+0x5c0>
   11fcc:	mov	r1, r4
   11fd0:	mov	r0, r5
   11fd4:	ldr	r3, [r3, #12]
   11fd8:	blx	r3
   11fdc:	ldr	r3, [r4, #24]
   11fe0:	cmp	r3, #0
   11fe4:	bne	11ff4 <__assert_fail@plt+0x39c>
   11fe8:	ldr	r3, [r4, #16]
   11fec:	cmp	r3, #1
   11ff0:	beq	123a4 <__assert_fail@plt+0x74c>
   11ff4:	ldr	r3, [sp, #8]
   11ff8:	ldr	r4, [r4, #220]	; 0xdc
   11ffc:	cmp	r3, #0
   12000:	cmpne	r4, #0
   12004:	beq	11e7c <__assert_fail@plt+0x224>
   12008:	ldr	r5, [r4, #60]	; 0x3c
   1200c:	cmn	r5, #1
   12010:	beq	11ff4 <__assert_fail@plt+0x39c>
   12014:	cmp	r5, #0
   12018:	add	r3, r5, #31
   1201c:	movge	r3, r5
   12020:	rsbs	r1, r5, #0
   12024:	and	r1, r1, #31
   12028:	asr	r3, r3, #5
   1202c:	and	r2, r5, #31
   12030:	rsbpl	r2, r1, #0
   12034:	add	r1, sp, #296	; 0x128
   12038:	add	r3, r1, r3, lsl #2
   1203c:	mov	r0, #1
   12040:	ldr	r3, [r3, #-256]	; 0xffffff00
   12044:	ands	r3, r3, r0, lsl r2
   12048:	beq	11ff4 <__assert_fail@plt+0x39c>
   1204c:	ldr	r2, [sp, #8]
   12050:	ldrb	r3, [r6]
   12054:	sub	r2, r2, #1
   12058:	cmp	r3, #0
   1205c:	str	r2, [sp, #8]
   12060:	bne	121fc <__assert_fail@plt+0x5a4>
   12064:	ldr	r3, [r4, #24]
   12068:	cmp	r3, #0
   1206c:	bne	1207c <__assert_fail@plt+0x424>
   12070:	ldr	r3, [r4, #16]
   12074:	cmp	r3, #1
   12078:	beq	12224 <__assert_fail@plt+0x5cc>
   1207c:	add	r0, sp, #168	; 0xa8
   12080:	bl	11af0 <sigemptyset@plt>
   12084:	mov	r1, #17
   12088:	add	r0, sp, #168	; 0xa8
   1208c:	bl	11994 <sigaddset@plt>
   12090:	mov	r1, #1
   12094:	add	r0, sp, #168	; 0xa8
   12098:	bl	11994 <sigaddset@plt>
   1209c:	mov	r1, #14
   120a0:	add	r0, sp, #168	; 0xa8
   120a4:	bl	11994 <sigaddset@plt>
   120a8:	mov	r2, #0
   120ac:	add	r1, sp, #168	; 0xa8
   120b0:	mov	r0, r2
   120b4:	bl	117d8 <sigprocmask@plt>
   120b8:	ldr	r3, [r4, #44]	; 0x2c
   120bc:	cmp	r3, #0
   120c0:	beq	120d0 <__assert_fail@plt+0x478>
   120c4:	ldrsh	r2, [r3, #8]
   120c8:	cmp	r2, #0
   120cc:	beq	11fa4 <__assert_fail@plt+0x34c>
   120d0:	ldr	r1, [r4, #208]	; 0xd0
   120d4:	add	r3, r1, #1
   120d8:	cmp	r1, #0
   120dc:	str	r3, [r4, #208]	; 0xd0
   120e0:	beq	1219c <__assert_fail@plt+0x544>
   120e4:	ldr	r2, [r4, #28]
   120e8:	cmp	r2, #0
   120ec:	cmpne	r3, r2
   120f0:	bhi	12100 <__assert_fail@plt+0x4a8>
   120f4:	ldr	r2, [r9, #8]
   120f8:	cmp	r3, r2
   120fc:	bcc	12130 <__assert_fail@plt+0x4d8>
   12100:	mov	r1, #0
   12104:	add	r0, sp, #32
   12108:	bl	11940 <gettimeofday@plt>
   1210c:	ldr	r3, [sp, #32]
   12110:	ldr	r2, [r4, #212]	; 0xd4
   12114:	sub	r3, r3, r2
   12118:	cmp	r3, #60	; 0x3c
   1211c:	ble	12324 <__assert_fail@plt+0x6cc>
   12120:	ldrd	r2, [sp, #32]
   12124:	mov	r1, #1
   12128:	str	r1, [r4, #208]	; 0xd0
   1212c:	strd	r2, [r4, #212]	; 0xd4
   12130:	bl	11afc <fork@plt>
   12134:	subs	r2, r0, #0
   12138:	blt	121b0 <__assert_fail@plt+0x558>
   1213c:	beq	12274 <__assert_fail@plt+0x61c>
   12140:	ldr	r3, [r4, #24]
   12144:	cmp	r3, #0
   12148:	beq	12180 <__assert_fail@plt+0x528>
   1214c:	ldr	r3, [r4, #60]	; 0x3c
   12150:	str	r2, [r4, #24]
   12154:	cmp	r3, #0
   12158:	blt	12180 <__assert_fail@plt+0x528>
   1215c:	asr	r0, r3, #5
   12160:	ldr	r1, [r7]
   12164:	and	r3, r3, #31
   12168:	mov	ip, #1
   1216c:	ldr	r2, [r8, r0, lsl #2]
   12170:	sub	r1, r1, #1
   12174:	bic	r3, r2, ip, lsl r3
   12178:	str	r1, [r7]
   1217c:	str	r3, [r8, r0, lsl #2]
   12180:	add	r0, sp, #168	; 0xa8
   12184:	bl	11af0 <sigemptyset@plt>
   12188:	mov	r2, #0
   1218c:	add	r1, sp, #168	; 0xa8
   12190:	mov	r0, #2
   12194:	bl	117d8 <sigprocmask@plt>
   12198:	b	11fdc <__assert_fail@plt+0x384>
   1219c:	add	r0, r4, #212	; 0xd4
   121a0:	bl	11940 <gettimeofday@plt>
   121a4:	bl	11afc <fork@plt>
   121a8:	subs	r2, r0, #0
   121ac:	bge	1213c <__assert_fail@plt+0x4e4>
   121b0:	movw	r1, #62304	; 0xf360
   121b4:	movt	r1, #1
   121b8:	mov	r0, #3
   121bc:	bl	11b44 <syslog@plt>
   121c0:	ldr	r3, [r4, #24]
   121c4:	cmp	r3, #0
   121c8:	bne	121d8 <__assert_fail@plt+0x580>
   121cc:	ldr	r3, [r4, #16]
   121d0:	cmp	r3, #1
   121d4:	beq	12538 <__assert_fail@plt+0x8e0>
   121d8:	add	r0, sp, #168	; 0xa8
   121dc:	bl	11af0 <sigemptyset@plt>
   121e0:	mov	r2, #0
   121e4:	add	r1, sp, #168	; 0xa8
   121e8:	mov	r0, #2
   121ec:	bl	117d8 <sigprocmask@plt>
   121f0:	mov	r0, #1
   121f4:	bl	11874 <sleep@plt>
   121f8:	b	11ff4 <__assert_fail@plt+0x39c>
   121fc:	movw	r1, #60304	; 0xeb90
   12200:	movt	r1, #1
   12204:	ldr	r0, [fp]
   12208:	ldr	r2, [r4, #12]
   1220c:	bl	11a3c <fprintf@plt>
   12210:	ldr	r5, [r4, #60]	; 0x3c
   12214:	b	12064 <__assert_fail@plt+0x40c>
   12218:	mov	r1, r4
   1221c:	mov	r0, r5
   12220:	bl	12a78 <__assert_fail@plt+0xe20>
   12224:	mov	r3, #128	; 0x80
   12228:	mov	r0, r5
   1222c:	add	r2, sp, #32
   12230:	add	r1, sp, #168	; 0xa8
   12234:	str	r3, [sp, #32]
   12238:	bl	11904 <accept@plt>
   1223c:	ldrb	r3, [r6]
   12240:	mov	r5, r0
   12244:	cmp	r3, #0
   12248:	bne	124cc <__assert_fail@plt+0x874>
   1224c:	cmp	r5, #0
   12250:	blt	124e4 <__assert_fail@plt+0x88c>
   12254:	ldrb	r3, [r6, #1]
   12258:	cmp	r3, #0
   1225c:	beq	1207c <__assert_fail@plt+0x424>
   12260:	add	r1, sp, #168	; 0xa8
   12264:	mov	r0, r5
   12268:	ldr	r2, [sp, #32]
   1226c:	bl	15c14 <__assert_fail@plt+0x3fbc>
   12270:	b	1207c <__assert_fail@plt+0x424>
   12274:	add	r0, sp, #168	; 0xa8
   12278:	str	r2, [sp, #12]
   1227c:	bl	11af0 <sigemptyset@plt>
   12280:	add	r1, sp, #168	; 0xa8
   12284:	mov	r0, #2
   12288:	ldr	r2, [sp, #12]
   1228c:	bl	117d8 <sigprocmask@plt>
   12290:	ldrb	r3, [r6]
   12294:	cmp	r3, #0
   12298:	beq	122bc <__assert_fail@plt+0x664>
   1229c:	bl	11a18 <setsid@plt>
   122a0:	ldrb	r3, [r6]
   122a4:	cmp	r3, #0
   122a8:	beq	122bc <__assert_fail@plt+0x664>
   122ac:	ldr	r2, [sl]
   122b0:	ldr	r0, [fp]
   122b4:	ldr	r1, [sp, #20]
   122b8:	bl	11a3c <fprintf@plt>
   122bc:	ldr	r3, [sl]
   122c0:	cmp	r3, #2
   122c4:	ble	11fc0 <__assert_fail@plt+0x368>
   122c8:	str	fp, [sp, #12]
   122cc:	mov	fp, r8
   122d0:	mov	r8, r7
   122d4:	mov	r7, r6
   122d8:	mov	r6, r4
   122dc:	mov	r4, r3
   122e0:	cmp	r5, r4
   122e4:	beq	12314 <__assert_fail@plt+0x6bc>
   122e8:	mov	r0, r4
   122ec:	sub	r4, r4, #1
   122f0:	bl	11c28 <close@plt>
   122f4:	cmp	r4, #2
   122f8:	bne	122e0 <__assert_fail@plt+0x688>
   122fc:	mov	r4, r6
   12300:	mov	r6, r7
   12304:	mov	r7, r8
   12308:	mov	r8, fp
   1230c:	ldr	fp, [sp, #12]
   12310:	b	11fc0 <__assert_fail@plt+0x368>
   12314:	sub	r4, r5, #1
   12318:	cmp	r4, #2
   1231c:	bne	122e0 <__assert_fail@plt+0x688>
   12320:	b	122fc <__assert_fail@plt+0x6a4>
   12324:	mov	r0, #3
   12328:	movw	r1, #62252	; 0xf32c
   1232c:	movt	r1, #1
   12330:	ldr	r2, [r4, #12]
   12334:	ldr	r3, [r4, #20]
   12338:	bl	11b44 <syslog@plt>
   1233c:	ldr	r0, [r4, #60]	; 0x3c
   12340:	cmp	r0, #0
   12344:	bge	12498 <__assert_fail@plt+0x840>
   12348:	ldr	r3, [r4, #24]
   1234c:	mov	r2, #0
   12350:	str	r2, [r4, #208]	; 0xd0
   12354:	cmp	r3, #1
   12358:	movgt	r3, #1
   1235c:	strgt	r3, [r4, #24]
   12360:	ble	12458 <__assert_fail@plt+0x800>
   12364:	add	r0, sp, #168	; 0xa8
   12368:	bl	11af0 <sigemptyset@plt>
   1236c:	mov	r2, #0
   12370:	add	r1, sp, #168	; 0xa8
   12374:	mov	r0, #2
   12378:	bl	117d8 <sigprocmask@plt>
   1237c:	movw	r3, #5640	; 0x1608
   12380:	movt	r3, #3
   12384:	ldr	r2, [r3]
   12388:	cmp	r2, #0
   1238c:	bne	11ff4 <__assert_fail@plt+0x39c>
   12390:	mov	r2, #1
   12394:	mov	r0, #600	; 0x258
   12398:	str	r2, [r3]
   1239c:	bl	118a4 <alarm@plt>
   123a0:	b	11ff4 <__assert_fail@plt+0x39c>
   123a4:	mov	r0, r5
   123a8:	bl	11c28 <close@plt>
   123ac:	b	11ff4 <__assert_fail@plt+0x39c>
   123b0:	mov	r0, #27
   123b4:	movw	r1, #62100	; 0xf294
   123b8:	movt	r1, #1
   123bc:	ldr	r2, [r4]
   123c0:	bl	11b44 <syslog@plt>
   123c4:	mov	r0, #1
   123c8:	bl	119f4 <exit@plt>
   123cc:	mov	r1, #4
   123d0:	mov	r0, #3
   123d4:	bl	18acc <argp_parse@@Base+0x1d7c>
   123d8:	mov	r7, r0
   123dc:	movw	r5, #5648	; 0x1610
   123e0:	movt	r5, #3
   123e4:	movw	r0, #62048	; 0xf260
   123e8:	movt	r0, #1
   123ec:	str	r7, [r5]
   123f0:	bl	1337c <__assert_fail@plt+0x1724>
   123f4:	ldr	r5, [r5]
   123f8:	str	r0, [r7]
   123fc:	movw	r0, #62076	; 0xf27c
   12400:	movt	r0, #1
   12404:	bl	1337c <__assert_fail@plt+0x1724>
   12408:	str	r0, [r5, #4]
   1240c:	b	11d90 <__assert_fail@plt+0x138>
   12410:	movw	r1, #62136	; 0xf2b8
   12414:	movt	r1, #1
   12418:	ldr	r0, [r9]
   1241c:	bl	11ba4 <fopen64@plt>
   12420:	subs	r4, r0, #0
   12424:	beq	1250c <__assert_fail@plt+0x8b4>
   12428:	ldrb	r3, [r6]
   1242c:	cmp	r3, #0
   12430:	bne	12478 <__assert_fail@plt+0x820>
   12434:	bl	119e8 <getpid@plt>
   12438:	mov	r2, r0
   1243c:	movw	r1, #60048	; 0xea90
   12440:	movt	r1, #1
   12444:	mov	r0, r4
   12448:	bl	11a3c <fprintf@plt>
   1244c:	mov	r0, r4
   12450:	bl	11acc <fclose@plt>
   12454:	b	11dd4 <__assert_fail@plt+0x17c>
   12458:	cmp	r3, #0
   1245c:	bne	12364 <__assert_fail@plt+0x70c>
   12460:	ldr	r3, [r4, #16]
   12464:	cmp	r3, #1
   12468:	bne	12364 <__assert_fail@plt+0x70c>
   1246c:	mov	r0, r5
   12470:	bl	11c28 <close@plt>
   12474:	b	12364 <__assert_fail@plt+0x70c>
   12478:	movw	r3, #5048	; 0x13b8
   1247c:	movt	r3, #3
   12480:	ldr	r2, [r9]
   12484:	movw	r1, #62140	; 0xf2bc
   12488:	movt	r1, #1
   1248c:	ldr	r0, [r3]
   12490:	bl	11a3c <fprintf@plt>
   12494:	b	12434 <__assert_fail@plt+0x7dc>
   12498:	asr	r2, r0, #5
   1249c:	ldr	r3, [r7]
   124a0:	and	r1, r0, #31
   124a4:	mov	ip, #1
   124a8:	ldr	lr, [r8, r2, lsl #2]
   124ac:	sub	r3, r3, #1
   124b0:	bic	r1, lr, ip, lsl r1
   124b4:	str	r3, [r7]
   124b8:	str	r1, [r8, r2, lsl #2]
   124bc:	bl	11c28 <close@plt>
   124c0:	mvn	r3, #0
   124c4:	str	r3, [r4, #60]	; 0x3c
   124c8:	b	12348 <__assert_fail@plt+0x6f0>
   124cc:	mov	r2, r0
   124d0:	movw	r1, #62212	; 0xf304
   124d4:	movt	r1, #1
   124d8:	ldr	r0, [fp]
   124dc:	bl	11a3c <fprintf@plt>
   124e0:	b	1224c <__assert_fail@plt+0x5f4>
   124e4:	bl	11a54 <__errno_location@plt>
   124e8:	ldr	r3, [r0]
   124ec:	cmp	r3, #4
   124f0:	beq	11ff4 <__assert_fail@plt+0x39c>
   124f4:	movw	r1, #62232	; 0xf318
   124f8:	movt	r1, #1
   124fc:	ldr	r2, [r4, #12]
   12500:	mov	r0, #4
   12504:	bl	11b44 <syslog@plt>
   12508:	b	11ff4 <__assert_fail@plt+0x39c>
   1250c:	bl	11a54 <__errno_location@plt>
   12510:	ldr	r4, [r9]
   12514:	ldr	r0, [r0]
   12518:	bl	119ac <strerror@plt>
   1251c:	mov	r3, r0
   12520:	movw	r1, #62168	; 0xf2d8
   12524:	movt	r1, #1
   12528:	mov	r2, r4
   1252c:	mov	r0, #2
   12530:	bl	11b44 <syslog@plt>
   12534:	b	11dd4 <__assert_fail@plt+0x17c>
   12538:	mov	r0, r5
   1253c:	bl	11c28 <close@plt>
   12540:	b	121d8 <__assert_fail@plt+0x580>
   12544:	andeq	r1, r3, r0, lsr #5
   12548:	andeq	r1, r3, r8, asr #5
   1254c:	mov	fp, #0
   12550:	mov	lr, #0
   12554:	pop	{r1}		; (ldr r1, [sp], #4)
   12558:	mov	r2, sp
   1255c:	push	{r2}		; (str r2, [sp, #-4]!)
   12560:	push	{r0}		; (str r0, [sp, #-4]!)
   12564:	ldr	ip, [pc, #16]	; 1257c <__assert_fail@plt+0x924>
   12568:	push	{ip}		; (str ip, [sp, #-4]!)
   1256c:	ldr	r0, [pc, #12]	; 12580 <__assert_fail@plt+0x928>
   12570:	ldr	r3, [pc, #12]	; 12584 <__assert_fail@plt+0x92c>
   12574:	bl	119a0 <__libc_start_main@plt>
   12578:	bl	11c10 <abort@plt>
   1257c:	andeq	lr, r1, ip, lsl #20
   12580:	andeq	r1, r1, r4, ror #24
   12584:	andeq	lr, r1, ip, lsr #19
   12588:	ldr	r3, [pc, #20]	; 125a4 <__assert_fail@plt+0x94c>
   1258c:	ldr	r2, [pc, #20]	; 125a8 <__assert_fail@plt+0x950>
   12590:	add	r3, pc, r3
   12594:	ldr	r2, [r3, r2]
   12598:	cmp	r2, #0
   1259c:	bxeq	lr
   125a0:	b	119c4 <__gmon_start__@plt>
   125a4:	andeq	lr, r1, r8, ror #20
   125a8:	andeq	r0, r0, r0, asr #3
   125ac:	ldr	r0, [pc, #24]	; 125cc <__assert_fail@plt+0x974>
   125b0:	ldr	r3, [pc, #24]	; 125d0 <__assert_fail@plt+0x978>
   125b4:	cmp	r3, r0
   125b8:	bxeq	lr
   125bc:	ldr	r3, [pc, #16]	; 125d4 <__assert_fail@plt+0x97c>
   125c0:	cmp	r3, #0
   125c4:	bxeq	lr
   125c8:	bx	r3
   125cc:	andeq	r1, r3, ip, lsr #7
   125d0:	andeq	r1, r3, ip, lsr #7
   125d4:	andeq	r0, r0, r0
   125d8:	ldr	r0, [pc, #36]	; 12604 <__assert_fail@plt+0x9ac>
   125dc:	ldr	r1, [pc, #36]	; 12608 <__assert_fail@plt+0x9b0>
   125e0:	sub	r1, r1, r0
   125e4:	asr	r1, r1, #2
   125e8:	add	r1, r1, r1, lsr #31
   125ec:	asrs	r1, r1, #1
   125f0:	bxeq	lr
   125f4:	ldr	r3, [pc, #16]	; 1260c <__assert_fail@plt+0x9b4>
   125f8:	cmp	r3, #0
   125fc:	bxeq	lr
   12600:	bx	r3
   12604:	andeq	r1, r3, ip, lsr #7
   12608:	andeq	r1, r3, ip, lsr #7
   1260c:	andeq	r0, r0, r0
   12610:	push	{r4, lr}
   12614:	ldr	r4, [pc, #24]	; 12634 <__assert_fail@plt+0x9dc>
   12618:	ldrb	r3, [r4]
   1261c:	cmp	r3, #0
   12620:	popne	{r4, pc}
   12624:	bl	125ac <__assert_fail@plt+0x954>
   12628:	mov	r3, #1
   1262c:	strb	r3, [r4]
   12630:	pop	{r4, pc}
   12634:	andeq	r1, r3, r0, asr #7
   12638:	b	125d8 <__assert_fail@plt+0x980>
   1263c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12640:	strd	r6, [sp, #8]
   12644:	movw	r7, #5488	; 0x1570
   12648:	movt	r7, #3
   1264c:	movw	r6, #5620	; 0x15f4
   12650:	movt	r6, #3
   12654:	strd	r8, [sp, #16]
   12658:	movw	r8, #5060	; 0x13c4
   1265c:	movt	r8, #3
   12660:	str	lr, [sp, #24]
   12664:	movw	r9, #5048	; 0x13b8
   12668:	movt	r9, #3
   1266c:	sub	sp, sp, #12
   12670:	mov	r2, #0
   12674:	mov	r1, #1
   12678:	add	r0, sp, #4
   1267c:	bl	11aa8 <wait3@plt>
   12680:	subs	r5, r0, #0
   12684:	ble	12780 <__assert_fail@plt+0xb28>
   12688:	ldrb	r3, [r8]
   1268c:	cmp	r3, #0
   12690:	bne	12764 <__assert_fail@plt+0xb0c>
   12694:	movw	r3, #5652	; 0x1614
   12698:	movt	r3, #3
   1269c:	ldr	r4, [r3]
   126a0:	cmp	r4, #0
   126a4:	bne	126b8 <__assert_fail@plt+0xa60>
   126a8:	b	12670 <__assert_fail@plt+0xa18>
   126ac:	ldr	r4, [r4, #220]	; 0xdc
   126b0:	cmp	r4, #0
   126b4:	beq	12670 <__assert_fail@plt+0xa18>
   126b8:	ldr	r3, [r4, #24]
   126bc:	cmp	r3, r5
   126c0:	bne	126ac <__assert_fail@plt+0xa54>
   126c4:	ldr	r3, [sp, #4]
   126c8:	cmp	r3, #0
   126cc:	bne	12724 <__assert_fail@plt+0xacc>
   126d0:	ldrb	r2, [r8]
   126d4:	ldr	r3, [r4, #60]	; 0x3c
   126d8:	cmp	r2, #0
   126dc:	bne	12748 <__assert_fail@plt+0xaf0>
   126e0:	cmp	r3, #0
   126e4:	add	r2, r3, #31
   126e8:	ldr	ip, [r6]
   126ec:	movge	r2, r3
   126f0:	and	r1, r3, #31
   126f4:	asr	r2, r2, #5
   126f8:	rsbs	r3, r3, #0
   126fc:	mov	r0, #1
   12700:	and	r3, r3, #31
   12704:	rsbpl	r1, r3, #0
   12708:	ldr	r3, [r7, r2, lsl #2]
   1270c:	add	ip, ip, r0
   12710:	str	ip, [r6]
   12714:	orr	r3, r3, r0, lsl r1
   12718:	str	r3, [r7, r2, lsl #2]
   1271c:	str	r0, [r4, #24]
   12720:	b	126ac <__assert_fail@plt+0xa54>
   12724:	movw	r1, #60008	; 0xea68
   12728:	movt	r1, #1
   1272c:	ldr	r2, [r4, #48]	; 0x30
   12730:	mov	r0, #4
   12734:	bl	11b44 <syslog@plt>
   12738:	ldrb	r2, [r8]
   1273c:	ldr	r3, [r4, #60]	; 0x3c
   12740:	cmp	r2, #0
   12744:	beq	126e0 <__assert_fail@plt+0xa88>
   12748:	movw	r1, #60032	; 0xea80
   1274c:	movt	r1, #1
   12750:	ldr	r0, [r9]
   12754:	ldr	r2, [r4, #12]
   12758:	bl	11a3c <fprintf@plt>
   1275c:	ldr	r3, [r4, #60]	; 0x3c
   12760:	b	126e0 <__assert_fail@plt+0xa88>
   12764:	movw	r1, #59984	; 0xea50
   12768:	movt	r1, #1
   1276c:	ldr	r0, [r9]
   12770:	mov	r2, r5
   12774:	ldr	r3, [sp, #4]
   12778:	bl	11a3c <fprintf@plt>
   1277c:	b	12694 <__assert_fail@plt+0xa3c>
   12780:	add	sp, sp, #12
   12784:	ldrd	r4, [sp]
   12788:	ldrd	r6, [sp, #8]
   1278c:	ldrd	r8, [sp, #16]
   12790:	add	sp, sp, #24
   12794:	pop	{pc}		; (ldr pc, [sp], #4)
   12798:	push	{lr}		; (str lr, [sp, #-4]!)
   1279c:	sub	sp, sp, #8192	; 0x2000
   127a0:	mov	r2, #8192	; 0x2000
   127a4:	sub	sp, sp, #4
   127a8:	mov	r1, sp
   127ac:	bl	117c0 <read@plt>
   127b0:	add	sp, sp, #8192	; 0x2000
   127b4:	add	sp, sp, #4
   127b8:	pop	{pc}		; (ldr pc, [sp], #4)
   127bc:	strd	r4, [sp, #-16]!
   127c0:	mov	r5, #128	; 0x80
   127c4:	mov	r2, #8192	; 0x2000
   127c8:	str	r6, [sp, #8]
   127cc:	mov	r3, #0
   127d0:	mov	r6, r0
   127d4:	str	lr, [sp, #12]
   127d8:	sub	sp, sp, #8320	; 0x2080
   127dc:	sub	sp, sp, #16
   127e0:	add	ip, sp, #12
   127e4:	add	r4, sp, #16
   127e8:	add	r1, sp, #144	; 0x90
   127ec:	stm	sp, {r4, ip}
   127f0:	str	r5, [sp, #12]
   127f4:	bl	1188c <recvfrom@plt>
   127f8:	subs	r2, r0, #0
   127fc:	blt	12814 <__assert_fail@plt+0xbbc>
   12800:	add	r1, sp, #144	; 0x90
   12804:	mov	r0, r6
   12808:	strd	r4, [sp]
   1280c:	mov	r3, #0
   12810:	bl	11ad8 <sendto@plt>
   12814:	add	sp, sp, #8320	; 0x2080
   12818:	add	sp, sp, #16
   1281c:	ldrd	r4, [sp]
   12820:	ldr	r6, [sp, #8]
   12824:	add	sp, sp, #12
   12828:	pop	{pc}		; (ldr pc, [sp], #4)
   1282c:	str	r4, [sp, #-8]!
   12830:	mov	r4, r0
   12834:	mov	r0, #0
   12838:	str	lr, [sp, #4]
   1283c:	sub	sp, sp, #264	; 0x108
   12840:	bl	11844 <time@plt>
   12844:	str	r0, [sp, #4]
   12848:	add	r0, sp, #4
   1284c:	bl	11880 <ctime@plt>
   12850:	mov	r2, r0
   12854:	movw	r1, #60052	; 0xea94
   12858:	movt	r1, #1
   1285c:	add	r0, sp, #8
   12860:	bl	11b5c <sprintf@plt>
   12864:	add	r0, sp, #8
   12868:	bl	11a0c <strlen@plt>
   1286c:	mov	r2, r0
   12870:	add	r1, sp, #8
   12874:	mov	r0, r4
   12878:	bl	11ab4 <write@plt>
   1287c:	add	sp, sp, #264	; 0x108
   12880:	ldr	r4, [sp]
   12884:	add	sp, sp, #4
   12888:	pop	{pc}		; (ldr pc, [sp], #4)
   1288c:	strd	r4, [sp, #-16]!
   12890:	mov	r5, r0
   12894:	mov	r0, #0
   12898:	str	r6, [sp, #8]
   1289c:	mov	r4, #128	; 0x80
   128a0:	str	lr, [sp, #12]
   128a4:	sub	sp, sp, #400	; 0x190
   128a8:	bl	11844 <time@plt>
   128ac:	add	r6, sp, #16
   128b0:	add	r2, sp, #12
   128b4:	add	r1, sp, #144	; 0x90
   128b8:	mov	r3, #0
   128bc:	str	r6, [sp]
   128c0:	str	r2, [sp, #4]
   128c4:	mov	r2, #256	; 0x100
   128c8:	str	r0, [sp, #8]
   128cc:	mov	r0, r5
   128d0:	str	r4, [sp, #12]
   128d4:	bl	1188c <recvfrom@plt>
   128d8:	cmp	r0, #0
   128dc:	blt	12920 <__assert_fail@plt+0xcc8>
   128e0:	add	r0, sp, #8
   128e4:	bl	11880 <ctime@plt>
   128e8:	mov	r2, r0
   128ec:	movw	r1, #60052	; 0xea94
   128f0:	movt	r1, #1
   128f4:	add	r0, sp, #144	; 0x90
   128f8:	bl	11b5c <sprintf@plt>
   128fc:	add	r0, sp, #144	; 0x90
   12900:	bl	11a0c <strlen@plt>
   12904:	mov	r2, r0
   12908:	add	r1, sp, #144	; 0x90
   1290c:	str	r6, [sp]
   12910:	mov	r0, r5
   12914:	mov	r3, #0
   12918:	str	r4, [sp, #4]
   1291c:	bl	11ad8 <sendto@plt>
   12920:	add	sp, sp, #400	; 0x190
   12924:	ldrd	r4, [sp]
   12928:	ldr	r6, [sp, #8]
   1292c:	add	sp, sp, #12
   12930:	pop	{pc}		; (ldr pc, [sp], #4)
   12934:	cmp	r0, #112	; 0x70
   12938:	beq	129b0 <__assert_fail@plt+0xd58>
   1293c:	ble	1296c <__assert_fail@plt+0xd14>
   12940:	cmp	r0, #256	; 0x100
   12944:	beq	129d8 <__assert_fail@plt+0xd80>
   12948:	movw	r3, #257	; 0x101
   1294c:	cmp	r0, r3
   12950:	bne	129a8 <__assert_fail@plt+0xd50>
   12954:	mov	r2, #1
   12958:	movw	r3, #5060	; 0x13c4
   1295c:	movt	r3, #3
   12960:	mov	r0, #0
   12964:	strb	r2, [r3, #2]
   12968:	bx	lr
   1296c:	cmp	r0, #82	; 0x52
   12970:	beq	129f0 <__assert_fail@plt+0xd98>
   12974:	cmp	r0, #100	; 0x64
   12978:	bne	129a8 <__assert_fail@plt+0xd50>
   1297c:	movw	r3, #5624	; 0x15f8
   12980:	movt	r3, #3
   12984:	ldr	r2, [r3]
   12988:	mov	ip, #1
   1298c:	movw	r1, #5060	; 0x13c4
   12990:	movt	r1, #3
   12994:	mov	r0, #0
   12998:	strb	ip, [r1]
   1299c:	orr	r2, r2, ip
   129a0:	str	r2, [r3]
   129a4:	bx	lr
   129a8:	mov	r0, #7
   129ac:	bx	lr
   129b0:	cmp	r1, #0
   129b4:	beq	12a48 <__assert_fail@plt+0xdf0>
   129b8:	ldrb	r3, [r1]
   129bc:	cmp	r3, #0
   129c0:	beq	12a48 <__assert_fail@plt+0xdf0>
   129c4:	movw	r3, #4556	; 0x11cc
   129c8:	movt	r3, #3
   129cc:	mov	r0, #0
   129d0:	str	r1, [r3]
   129d4:	bx	lr
   129d8:	mov	r2, #1
   129dc:	movw	r3, #5060	; 0x13c4
   129e0:	movt	r3, #3
   129e4:	mov	r0, #0
   129e8:	strb	r2, [r3, #1]
   129ec:	bx	lr
   129f0:	str	r4, [sp, #-8]!
   129f4:	mov	r0, r1
   129f8:	mov	r4, r1
   129fc:	str	lr, [sp, #4]
   12a00:	sub	sp, sp, #8
   12a04:	mov	r2, #0
   12a08:	add	r1, sp, #4
   12a0c:	bl	11784 <strtol@plt>
   12a10:	cmp	r0, #0
   12a14:	ble	12a60 <__assert_fail@plt+0xe08>
   12a18:	ldr	r3, [sp, #4]
   12a1c:	ldrb	r3, [r3]
   12a20:	cmp	r3, #0
   12a24:	bne	12a60 <__assert_fail@plt+0xe08>
   12a28:	movw	r3, #4556	; 0x11cc
   12a2c:	movt	r3, #3
   12a30:	str	r0, [r3, #8]
   12a34:	mov	r0, #0
   12a38:	add	sp, sp, #8
   12a3c:	ldr	r4, [sp]
   12a40:	add	sp, sp, #4
   12a44:	pop	{pc}		; (ldr pc, [sp], #4)
   12a48:	mov	r2, #0
   12a4c:	movw	r3, #4556	; 0x11cc
   12a50:	movt	r3, #3
   12a54:	mov	r0, r2
   12a58:	strb	r2, [r3, #4]
   12a5c:	bx	lr
   12a60:	mov	r2, r4
   12a64:	movw	r1, #60060	; 0xea9c
   12a68:	movt	r1, #1
   12a6c:	mov	r0, #3
   12a70:	bl	11b44 <syslog@plt>
   12a74:	b	12a34 <__assert_fail@plt+0xddc>
   12a78:	movw	r3, #5060	; 0x13c4
   12a7c:	movt	r3, #3
   12a80:	push	{lr}		; (str lr, [sp, #-4]!)
   12a84:	ldrb	r3, [r3]
   12a88:	sub	sp, sp, #68	; 0x44
   12a8c:	mov	r5, r0
   12a90:	mov	r4, r1
   12a94:	cmp	r3, #0
   12a98:	bne	12be4 <__assert_fail@plt+0xf8c>
   12a9c:	mov	r1, #0
   12aa0:	mov	r0, r5
   12aa4:	bl	118bc <dup2@plt>
   12aa8:	mov	r0, r5
   12aac:	bl	11c28 <close@plt>
   12ab0:	mov	r1, #1
   12ab4:	mov	r0, #0
   12ab8:	bl	118bc <dup2@plt>
   12abc:	mov	r1, #2
   12ac0:	mov	r0, #0
   12ac4:	bl	118bc <dup2@plt>
   12ac8:	ldr	r0, [r4, #36]	; 0x24
   12acc:	bl	1176c <getpwnam@plt>
   12ad0:	subs	r5, r0, #0
   12ad4:	beq	12c30 <__assert_fail@plt+0xfd8>
   12ad8:	ldr	r0, [r4, #40]	; 0x28
   12adc:	cmp	r0, #0
   12ae0:	beq	12af0 <__assert_fail@plt+0xe98>
   12ae4:	ldrb	r3, [r0]
   12ae8:	cmp	r3, #0
   12aec:	bne	12ba0 <__assert_fail@plt+0xf48>
   12af0:	ldr	r3, [r5, #8]
   12af4:	cmp	r3, #0
   12af8:	beq	12b2c <__assert_fail@plt+0xed4>
   12afc:	ldr	r0, [r5, #12]
   12b00:	bl	1197c <setgid@plt>
   12b04:	cmp	r0, #0
   12b08:	bge	12b74 <__assert_fail@plt+0xf1c>
   12b0c:	ldr	r3, [r5, #12]
   12b10:	movw	r1, #60176	; 0xeb10
   12b14:	movt	r1, #1
   12b18:	mov	r0, #3
   12b1c:	ldr	r2, [r4, #12]
   12b20:	bl	11b44 <syslog@plt>
   12b24:	mov	r0, #1
   12b28:	bl	11820 <_exit@plt>
   12b2c:	ldrd	r0, [r4, #48]	; 0x30
   12b30:	bl	11a48 <execv@plt>
   12b34:	ldr	r3, [r4, #16]
   12b38:	cmp	r3, #1
   12b3c:	bne	12b5c <__assert_fail@plt+0xf04>
   12b40:	mov	r0, #3
   12b44:	movw	r1, #60232	; 0xeb48
   12b48:	movt	r1, #1
   12b4c:	ldr	r2, [r4, #48]	; 0x30
   12b50:	bl	11b44 <syslog@plt>
   12b54:	mov	r0, #1
   12b58:	bl	11820 <_exit@plt>
   12b5c:	mov	r3, #0
   12b60:	mov	r2, #50	; 0x32
   12b64:	mov	r0, r3
   12b68:	add	r1, sp, #12
   12b6c:	bl	11c1c <recv@plt>
   12b70:	b	12b40 <__assert_fail@plt+0xee8>
   12b74:	ldr	r0, [r5]
   12b78:	ldr	r1, [r5, #12]
   12b7c:	bl	118d4 <initgroups@plt>
   12b80:	ldr	r0, [r5, #8]
   12b84:	bl	11b50 <setuid@plt>
   12b88:	cmp	r0, #0
   12b8c:	bge	12b2c <__assert_fail@plt+0xed4>
   12b90:	movw	r1, #60204	; 0xeb2c
   12b94:	movt	r1, #1
   12b98:	ldr	r3, [r5, #8]
   12b9c:	b	12b18 <__assert_fail@plt+0xec0>
   12ba0:	bl	11c40 <getgrnam@plt>
   12ba4:	subs	r6, r0, #0
   12ba8:	movweq	r1, #60148	; 0xeaf4
   12bac:	ldreq	ip, [r4, #40]	; 0x28
   12bb0:	movteq	r1, #1
   12bb4:	beq	12c3c <__assert_fail@plt+0xfe4>
   12bb8:	ldr	r3, [r5, #8]
   12bbc:	cmp	r3, #0
   12bc0:	beq	12b2c <__assert_fail@plt+0xed4>
   12bc4:	ldr	r0, [r6, #8]
   12bc8:	cmp	r0, #0
   12bcc:	bne	12c10 <__assert_fail@plt+0xfb8>
   12bd0:	ldr	r0, [r5, #12]
   12bd4:	bl	1197c <setgid@plt>
   12bd8:	cmp	r0, #0
   12bdc:	bge	12c1c <__assert_fail@plt+0xfc4>
   12be0:	b	12b0c <__assert_fail@plt+0xeb4>
   12be4:	movw	r3, #5048	; 0x13b8
   12be8:	movt	r3, #3
   12bec:	ldr	r6, [r3]
   12bf0:	bl	119e8 <getpid@plt>
   12bf4:	mov	r2, r0
   12bf8:	movw	r1, #60108	; 0xeacc
   12bfc:	movt	r1, #1
   12c00:	ldr	r3, [r4, #48]	; 0x30
   12c04:	mov	r0, r6
   12c08:	bl	11a3c <fprintf@plt>
   12c0c:	b	12a9c <__assert_fail@plt+0xe44>
   12c10:	bl	1197c <setgid@plt>
   12c14:	cmp	r0, #0
   12c18:	blt	12c74 <__assert_fail@plt+0x101c>
   12c1c:	ldr	r1, [r6, #8]
   12c20:	ldr	r0, [r5]
   12c24:	cmp	r1, #0
   12c28:	bne	12b7c <__assert_fail@plt+0xf24>
   12c2c:	b	12b78 <__assert_fail@plt+0xf20>
   12c30:	ldr	ip, [r4, #36]	; 0x24
   12c34:	movw	r1, #60124	; 0xeadc
   12c38:	movt	r1, #1
   12c3c:	mov	r0, #3
   12c40:	ldr	r2, [r4, #12]
   12c44:	ldr	r3, [r4, #20]
   12c48:	str	ip, [sp]
   12c4c:	bl	11b44 <syslog@plt>
   12c50:	ldr	r3, [r4, #16]
   12c54:	cmp	r3, #1
   12c58:	beq	12b24 <__assert_fail@plt+0xecc>
   12c5c:	mov	r3, #0
   12c60:	mov	r2, #50	; 0x32
   12c64:	mov	r0, r3
   12c68:	add	r1, sp, #12
   12c6c:	bl	11c1c <recv@plt>
   12c70:	b	12b24 <__assert_fail@plt+0xecc>
   12c74:	movw	r1, #60176	; 0xeb10
   12c78:	movt	r1, #1
   12c7c:	ldr	r3, [r6, #8]
   12c80:	b	12b18 <__assert_fail@plt+0xec0>
   12c84:	mov	r0, #3
   12c88:	movw	r1, #60256	; 0xeb60
   12c8c:	movt	r1, #1
   12c90:	str	r4, [sp, #-8]!
   12c94:	str	lr, [sp, #4]
   12c98:	bl	11b44 <syslog@plt>
   12c9c:	mvn	r0, #0
   12ca0:	bl	119f4 <exit@plt>
   12ca4:	str	r4, [sp, #-8]!
   12ca8:	mov	r1, #0
   12cac:	mov	r4, r0
   12cb0:	str	lr, [sp, #4]
   12cb4:	sub	sp, sp, #8
   12cb8:	mov	r0, sp
   12cbc:	bl	11940 <gettimeofday@plt>
   12cc0:	cmp	r0, #0
   12cc4:	blt	12d00 <__assert_fail@plt+0x10a8>
   12cc8:	ldr	r2, [sp]
   12ccc:	movw	r3, #32384	; 0x7e80
   12cd0:	movt	r3, #33706	; 0x83aa
   12cd4:	add	r3, r2, r3
   12cd8:	rev	r3, r3
   12cdc:	mov	r1, sp
   12ce0:	mov	r0, r4
   12ce4:	str	r3, [sp]
   12ce8:	mov	r2, #4
   12cec:	bl	11ab4 <write@plt>
   12cf0:	add	sp, sp, #8
   12cf4:	ldr	r4, [sp]
   12cf8:	add	sp, sp, #4
   12cfc:	pop	{pc}		; (ldr pc, [sp], #4)
   12d00:	movw	r3, #5060	; 0x13c4
   12d04:	movt	r3, #3
   12d08:	ldrb	r3, [r3]
   12d0c:	cmp	r3, #0
   12d10:	beq	12cdc <__assert_fail@plt+0x1084>
   12d14:	movw	r3, #5048	; 0x13b8
   12d18:	movt	r3, #3
   12d1c:	movw	r0, #60268	; 0xeb6c
   12d20:	movt	r0, #1
   12d24:	ldr	r3, [r3]
   12d28:	mov	r2, #26
   12d2c:	mov	r1, #1
   12d30:	bl	1191c <fwrite@plt>
   12d34:	mov	r3, #0
   12d38:	b	12cdc <__assert_fail@plt+0x1084>
   12d3c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12d40:	movw	r5, #258	; 0x102
   12d44:	strd	r6, [sp, #8]
   12d48:	mov	r6, r0
   12d4c:	movw	r7, #257	; 0x101
   12d50:	str	r8, [sp, #16]
   12d54:	mov	r8, #0
   12d58:	str	lr, [sp, #20]
   12d5c:	sub	sp, sp, #264	; 0x108
   12d60:	add	r4, sp, #4
   12d64:	sub	r2, r5, r8
   12d68:	mov	r1, r4
   12d6c:	mov	r0, r6
   12d70:	bl	117c0 <read@plt>
   12d74:	cmp	r0, #0
   12d78:	beq	12ee8 <__assert_fail@plt+0x1290>
   12d7c:	blt	12f0c <__assert_fail@plt+0x12b4>
   12d80:	ldrb	r2, [r4]
   12d84:	cmp	r2, #10
   12d88:	cmpne	r2, #13
   12d8c:	moveq	r3, #1
   12d90:	movne	r3, #0
   12d94:	cmp	r2, #0
   12d98:	moveq	r3, #1
   12d9c:	cmp	r3, #0
   12da0:	bne	12ee8 <__assert_fail@plt+0x1290>
   12da4:	add	ip, r4, r0
   12da8:	sub	lr, r8, r4
   12dac:	add	r3, r4, #1
   12db0:	cmp	ip, r3
   12db4:	mov	r4, r3
   12db8:	add	r0, lr, r3
   12dbc:	beq	12e9c <__assert_fail@plt+0x1244>
   12dc0:	ldrb	r1, [r3], #1
   12dc4:	cmp	r1, #10
   12dc8:	cmpne	r1, #13
   12dcc:	moveq	r2, #1
   12dd0:	movne	r2, #0
   12dd4:	cmp	r1, #0
   12dd8:	moveq	r2, #1
   12ddc:	cmp	r2, #0
   12de0:	beq	12db0 <__assert_fail@plt+0x1158>
   12de4:	movw	r3, #5060	; 0x13c4
   12de8:	movt	r3, #3
   12dec:	ldrb	r3, [r3]
   12df0:	add	r2, sp, #264	; 0x108
   12df4:	add	r0, r2, r0
   12df8:	mov	r2, #0
   12dfc:	strb	r2, [r0, #-260]	; 0xfffffefc
   12e00:	cmp	r3, r2
   12e04:	bne	12eac <__assert_fail@plt+0x1254>
   12e08:	movw	r1, #60324	; 0xeba4
   12e0c:	movt	r1, #1
   12e10:	add	r0, sp, #4
   12e14:	bl	118ec <strcasecmp@plt>
   12e18:	cmp	r0, #0
   12e1c:	movw	r3, #5652	; 0x1614
   12e20:	movt	r3, #3
   12e24:	ldr	r4, [r3]
   12e28:	bne	12e34 <__assert_fail@plt+0x11dc>
   12e2c:	b	12f28 <__assert_fail@plt+0x12d0>
   12e30:	ldr	r4, [r4, #220]	; 0xdc
   12e34:	cmp	r4, #0
   12e38:	beq	12ef0 <__assert_fail@plt+0x1298>
   12e3c:	ldr	r5, [r4, #64]	; 0x40
   12e40:	sub	r3, r5, #1
   12e44:	cmp	r3, #1
   12e48:	bhi	12e30 <__assert_fail@plt+0x11d8>
   12e4c:	add	r0, sp, #4
   12e50:	ldr	r1, [r4, #12]
   12e54:	bl	118ec <strcasecmp@plt>
   12e58:	cmp	r0, #0
   12e5c:	bne	12e30 <__assert_fail@plt+0x11d8>
   12e60:	cmp	r5, #2
   12e64:	beq	12ed0 <__assert_fail@plt+0x1278>
   12e68:	ldr	r3, [r4, #44]	; 0x2c
   12e6c:	mov	r1, r4
   12e70:	mov	r0, r6
   12e74:	cmp	r3, #0
   12e78:	beq	12ecc <__assert_fail@plt+0x1274>
   12e7c:	ldr	r3, [r3, #12]
   12e80:	blx	r3
   12e84:	add	sp, sp, #264	; 0x108
   12e88:	ldrd	r4, [sp]
   12e8c:	ldrd	r6, [sp, #8]
   12e90:	ldr	r8, [sp, #16]
   12e94:	add	sp, sp, #20
   12e98:	pop	{pc}		; (ldr pc, [sp], #4)
   12e9c:	cmp	r0, r7
   12ea0:	mov	r8, r0
   12ea4:	ble	12d64 <__assert_fail@plt+0x110c>
   12ea8:	b	12de4 <__assert_fail@plt+0x118c>
   12eac:	movw	r3, #5048	; 0x13b8
   12eb0:	movt	r3, #3
   12eb4:	movw	r1, #60296	; 0xeb88
   12eb8:	movt	r1, #1
   12ebc:	ldr	r0, [r3]
   12ec0:	add	r2, sp, #4
   12ec4:	bl	11a3c <fprintf@plt>
   12ec8:	b	12e08 <__assert_fail@plt+0x11b0>
   12ecc:	bl	12a78 <__assert_fail@plt+0xe20>
   12ed0:	movw	r1, #60336	; 0xebb0
   12ed4:	movt	r1, #1
   12ed8:	mov	r2, #5
   12edc:	mov	r0, r6
   12ee0:	bl	11ab4 <write@plt>
   12ee4:	b	12e68 <__assert_fail@plt+0x1210>
   12ee8:	mov	r0, r8
   12eec:	b	12de4 <__assert_fail@plt+0x118c>
   12ef0:	mov	r0, r6
   12ef4:	movw	r1, #60344	; 0xebb8
   12ef8:	movt	r1, #1
   12efc:	mov	r2, #24
   12f00:	bl	11ab4 <write@plt>
   12f04:	mov	r0, #1
   12f08:	bl	119f4 <exit@plt>
   12f0c:	movw	r1, #60372	; 0xebd4
   12f10:	movt	r1, #1
   12f14:	mov	r0, r6
   12f18:	mov	r2, #29
   12f1c:	bl	11ab4 <write@plt>
   12f20:	mov	r0, #1
   12f24:	bl	11820 <_exit@plt>
   12f28:	cmp	r4, #0
   12f2c:	beq	12f20 <__assert_fail@plt+0x12c8>
   12f30:	movw	r5, #60332	; 0xebac
   12f34:	movt	r5, #1
   12f38:	ldr	r3, [r4, #64]	; 0x40
   12f3c:	sub	r3, r3, #1
   12f40:	cmp	r3, #1
   12f44:	bls	12f58 <__assert_fail@plt+0x1300>
   12f48:	ldr	r4, [r4, #220]	; 0xdc
   12f4c:	cmp	r4, #0
   12f50:	bne	12f38 <__assert_fail@plt+0x12e0>
   12f54:	b	12f20 <__assert_fail@plt+0x12c8>
   12f58:	ldr	r7, [r4, #12]
   12f5c:	mov	r0, r7
   12f60:	bl	11a0c <strlen@plt>
   12f64:	mov	r2, r0
   12f68:	mov	r1, r7
   12f6c:	mov	r0, r6
   12f70:	bl	11ab4 <write@plt>
   12f74:	mov	r2, #2
   12f78:	mov	r1, r5
   12f7c:	mov	r0, r6
   12f80:	bl	11ab4 <write@plt>
   12f84:	ldr	r4, [r4, #220]	; 0xdc
   12f88:	cmp	r4, #0
   12f8c:	bne	12f38 <__assert_fail@plt+0x12e0>
   12f90:	b	12f20 <__assert_fail@plt+0x12c8>
   12f94:	strd	r4, [sp, #-12]!
   12f98:	mov	ip, #128	; 0x80
   12f9c:	mov	r3, #0
   12fa0:	str	lr, [sp, #8]
   12fa4:	sub	sp, sp, #156	; 0x9c
   12fa8:	mov	r5, r0
   12fac:	add	r2, sp, #12
   12fb0:	add	r4, sp, #24
   12fb4:	add	r1, sp, #8
   12fb8:	str	r4, [sp]
   12fbc:	str	r2, [sp, #4]
   12fc0:	mov	r2, #4
   12fc4:	str	ip, [sp, #12]
   12fc8:	bl	1188c <recvfrom@plt>
   12fcc:	cmp	r0, #0
   12fd0:	blt	1301c <__assert_fail@plt+0x13c4>
   12fd4:	mov	r1, #0
   12fd8:	add	r0, sp, #16
   12fdc:	bl	11940 <gettimeofday@plt>
   12fe0:	cmp	r0, #0
   12fe4:	blt	1302c <__assert_fail@plt+0x13d4>
   12fe8:	ldr	r2, [sp, #16]
   12fec:	movw	r3, #32384	; 0x7e80
   12ff0:	movt	r3, #33706	; 0x83aa
   12ff4:	add	r3, r2, r3
   12ff8:	rev	r2, r3
   12ffc:	mov	ip, #128	; 0x80
   13000:	add	r1, sp, #8
   13004:	mov	r0, r5
   13008:	mov	r3, #0
   1300c:	stm	sp, {r4, ip}
   13010:	str	r2, [sp, #8]
   13014:	mov	r2, #4
   13018:	bl	11ad8 <sendto@plt>
   1301c:	add	sp, sp, #156	; 0x9c
   13020:	ldrd	r4, [sp]
   13024:	add	sp, sp, #8
   13028:	pop	{pc}		; (ldr pc, [sp], #4)
   1302c:	movw	r3, #5060	; 0x13c4
   13030:	movt	r3, #3
   13034:	ldrb	r3, [r3]
   13038:	cmp	r3, #0
   1303c:	moveq	r2, r3
   13040:	beq	12ffc <__assert_fail@plt+0x13a4>
   13044:	movw	r3, #5048	; 0x13b8
   13048:	movt	r3, #3
   1304c:	mov	r2, #26
   13050:	movw	r0, #60268	; 0xeb6c
   13054:	movt	r0, #1
   13058:	mov	r1, #1
   1305c:	ldr	r3, [r3]
   13060:	bl	1191c <fwrite@plt>
   13064:	mov	r2, #0
   13068:	b	12ffc <__assert_fail@plt+0x13a4>
   1306c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13070:	movw	r5, #5616	; 0x15f0
   13074:	movt	r5, #3
   13078:	ldr	r4, [r5]
   1307c:	strd	r6, [sp, #8]
   13080:	mov	r7, r0
   13084:	strd	r8, [sp, #16]
   13088:	str	lr, [sp, #24]
   1308c:	sub	sp, sp, #220	; 0xdc
   13090:	cmp	r4, #0
   13094:	beq	13178 <__assert_fail@plt+0x1520>
   13098:	add	r2, sp, #8
   1309c:	mov	ip, #128	; 0x80
   130a0:	add	r8, sp, #88	; 0x58
   130a4:	add	r1, sp, #12
   130a8:	mov	r3, #0
   130ac:	mov	r0, r7
   130b0:	str	r8, [sp]
   130b4:	stmib	sp, {r2, ip}
   130b8:	mov	r2, #74	; 0x4a
   130bc:	bl	1188c <recvfrom@plt>
   130c0:	cmp	r0, #0
   130c4:	blt	1314c <__assert_fail@plt+0x14f4>
   130c8:	movw	r6, #5060	; 0x13c4
   130cc:	movt	r6, #3
   130d0:	ldr	r9, [r5]
   130d4:	ldr	r4, [r6, #4]
   130d8:	sub	r5, r9, r4
   130dc:	cmp	r5, #71	; 0x47
   130e0:	bgt	13164 <__assert_fail@plt+0x150c>
   130e4:	mov	r2, r5
   130e8:	mov	r1, r4
   130ec:	add	r0, sp, #12
   130f0:	bl	117e4 <memmove@plt>
   130f4:	add	r3, sp, #12
   130f8:	movw	r1, #5356	; 0x14ec
   130fc:	movt	r1, #3
   13100:	rsb	r2, r5, #72	; 0x48
   13104:	add	r0, r3, r5
   13108:	bl	1182c <memcpy@plt>
   1310c:	add	r4, r4, #1
   13110:	mov	r2, #128	; 0x80
   13114:	cmp	r9, r4
   13118:	movw	ip, #2573	; 0xa0d
   1311c:	movweq	r3, #5356	; 0x14ec
   13120:	add	r1, sp, #12
   13124:	movteq	r3, #3
   13128:	strne	r4, [r6, #4]
   1312c:	mov	r0, r7
   13130:	strh	ip, [sp, #84]	; 0x54
   13134:	streq	r3, [r6, #4]
   13138:	mov	r3, #0
   1313c:	str	r8, [sp]
   13140:	str	r2, [sp, #4]
   13144:	mov	r2, #74	; 0x4a
   13148:	bl	11ad8 <sendto@plt>
   1314c:	add	sp, sp, #220	; 0xdc
   13150:	ldrd	r4, [sp]
   13154:	ldrd	r6, [sp, #8]
   13158:	ldrd	r8, [sp, #16]
   1315c:	add	sp, sp, #24
   13160:	pop	{pc}		; (ldr pc, [sp], #4)
   13164:	mov	r2, #72	; 0x48
   13168:	mov	r1, r4
   1316c:	add	r0, sp, #12
   13170:	bl	117e4 <memmove@plt>
   13174:	b	1310c <__assert_fail@plt+0x14b4>
   13178:	movw	r6, #5356	; 0x14ec
   1317c:	movt	r6, #3
   13180:	str	r6, [r5]
   13184:	bl	119dc <__ctype_b_loc@plt>
   13188:	mov	r3, r4
   1318c:	ldr	r1, [r0]
   13190:	lsl	r2, r3, #1
   13194:	ldrh	r2, [r1, r2]
   13198:	tst	r2, #16384	; 0x4000
   1319c:	beq	131b0 <__assert_fail@plt+0x1558>
   131a0:	ldr	r2, [r5]
   131a4:	add	r1, r2, #1
   131a8:	str	r1, [r5]
   131ac:	strb	r3, [r2]
   131b0:	add	r3, r3, #1
   131b4:	cmp	r3, #129	; 0x81
   131b8:	bne	1318c <__assert_fail@plt+0x1534>
   131bc:	movw	r3, #5060	; 0x13c4
   131c0:	movt	r3, #3
   131c4:	str	r6, [r3, #4]
   131c8:	b	13098 <__assert_fail@plt+0x1440>
   131cc:	strd	r4, [sp, #-16]!
   131d0:	movw	r4, #4556	; 0x11cc
   131d4:	movt	r4, #3
   131d8:	ldr	r3, [r4, #12]
   131dc:	str	r6, [sp, #8]
   131e0:	str	lr, [sp, #12]
   131e4:	cmp	r3, #0
   131e8:	beq	1322c <__assert_fail@plt+0x15d4>
   131ec:	mov	r6, r0
   131f0:	add	r4, r4, #12
   131f4:	ldr	r5, [r0, #16]
   131f8:	b	13208 <__assert_fail@plt+0x15b0>
   131fc:	ldr	r3, [r4, #16]!
   13200:	cmp	r3, #0
   13204:	beq	1322c <__assert_fail@plt+0x15d4>
   13208:	ldr	r2, [r4, #4]
   1320c:	cmp	r2, r5
   13210:	bne	131fc <__assert_fail@plt+0x15a4>
   13214:	mov	r0, r3
   13218:	ldr	r1, [r6, #12]
   1321c:	bl	11778 <strcmp@plt>
   13220:	cmp	r0, #0
   13224:	bne	131fc <__assert_fail@plt+0x15a4>
   13228:	mov	r3, r4
   1322c:	ldrd	r4, [sp]
   13230:	mov	r0, r3
   13234:	ldr	r6, [sp, #8]
   13238:	add	sp, sp, #12
   1323c:	pop	{pc}		; (ldr pc, [sp], #4)
   13240:	strd	r4, [sp, #-12]!
   13244:	mov	r2, #140	; 0x8c
   13248:	mov	r4, r0
   1324c:	str	lr, [sp, #8]
   13250:	sub	sp, sp, #148	; 0x94
   13254:	mov	r5, r1
   13258:	add	r0, sp, #4
   1325c:	mov	r1, #0
   13260:	bl	11a84 <memset@plt>
   13264:	add	r0, sp, #8
   13268:	bl	11af0 <sigemptyset@plt>
   1326c:	mov	r1, r4
   13270:	add	r0, sp, #8
   13274:	bl	11994 <sigaddset@plt>
   13278:	mov	r3, #268435456	; 0x10000000
   1327c:	add	r1, sp, #4
   13280:	str	r5, [sp, #4]
   13284:	mov	r0, r4
   13288:	mov	r2, #0
   1328c:	str	r3, [sp, #136]	; 0x88
   13290:	bl	11910 <sigaction@plt>
   13294:	add	sp, sp, #148	; 0x94
   13298:	ldrd	r4, [sp]
   1329c:	add	sp, sp, #8
   132a0:	pop	{pc}		; (ldr pc, [sp], #4)
   132a4:	str	r4, [sp, #-8]!
   132a8:	mov	r4, r0
   132ac:	str	lr, [sp, #4]
   132b0:	sub	sp, sp, #128	; 0x80
   132b4:	mov	r0, sp
   132b8:	bl	11af0 <sigemptyset@plt>
   132bc:	mov	r0, sp
   132c0:	mov	r1, #17
   132c4:	bl	11994 <sigaddset@plt>
   132c8:	mov	r0, sp
   132cc:	mov	r1, #1
   132d0:	bl	11994 <sigaddset@plt>
   132d4:	mov	r0, sp
   132d8:	mov	r1, #14
   132dc:	bl	11994 <sigaddset@plt>
   132e0:	mov	r2, r4
   132e4:	mov	r1, sp
   132e8:	mov	r0, #0
   132ec:	bl	117d8 <sigprocmask@plt>
   132f0:	add	sp, sp, #128	; 0x80
   132f4:	ldr	r4, [sp]
   132f8:	add	sp, sp, #4
   132fc:	pop	{pc}		; (ldr pc, [sp], #4)
   13300:	str	r4, [sp, #-8]!
   13304:	subs	r4, r0, #0
   13308:	str	lr, [sp, #4]
   1330c:	sub	sp, sp, #128	; 0x80
   13310:	beq	13334 <__assert_fail@plt+0x16dc>
   13314:	mov	r1, r4
   13318:	mov	r2, #0
   1331c:	mov	r0, #2
   13320:	bl	117d8 <sigprocmask@plt>
   13324:	add	sp, sp, #128	; 0x80
   13328:	ldr	r4, [sp]
   1332c:	add	sp, sp, #4
   13330:	pop	{pc}		; (ldr pc, [sp], #4)
   13334:	mov	r0, sp
   13338:	bl	11af0 <sigemptyset@plt>
   1333c:	mov	r2, r4
   13340:	mov	r1, sp
   13344:	mov	r0, #2
   13348:	bl	117d8 <sigprocmask@plt>
   1334c:	add	sp, sp, #128	; 0x80
   13350:	ldr	r4, [sp]
   13354:	add	sp, sp, #4
   13358:	pop	{pc}		; (ldr pc, [sp], #4)
   1335c:	ldr	r3, [r1, #44]	; 0x2c
   13360:	cmp	r3, #0
   13364:	beq	13370 <__assert_fail@plt+0x1718>
   13368:	ldr	r3, [r3, #12]
   1336c:	bx	r3
   13370:	str	r4, [sp, #-8]!
   13374:	str	lr, [sp, #4]
   13378:	bl	12a78 <__assert_fail@plt+0xe20>
   1337c:	cmp	r0, #0
   13380:	movw	r3, #60368	; 0xebd0
   13384:	movt	r3, #1
   13388:	str	r4, [sp, #-8]!
   1338c:	moveq	r0, r3
   13390:	str	lr, [sp, #4]
   13394:	bl	11898 <strdup@plt>
   13398:	cmp	r0, #0
   1339c:	beq	133ac <__assert_fail@plt+0x1754>
   133a0:	ldr	r4, [sp]
   133a4:	add	sp, sp, #4
   133a8:	pop	{pc}		; (ldr pc, [sp], #4)
   133ac:	mov	r0, #3
   133b0:	movw	r1, #60404	; 0xebf4
   133b4:	movt	r1, #1
   133b8:	bl	11b44 <syslog@plt>
   133bc:	mvn	r0, #0
   133c0:	bl	119f4 <exit@plt>
   133c4:	strd	r4, [sp, #-16]!
   133c8:	mov	r5, r0
   133cc:	mov	r0, r1
   133d0:	mov	r4, r1
   133d4:	str	r6, [sp, #8]
   133d8:	str	lr, [sp, #12]
   133dc:	bl	18b40 <argp_parse@@Base+0x1df0>
   133e0:	subs	r6, r0, #0
   133e4:	beq	13408 <__assert_fail@plt+0x17b0>
   133e8:	mov	r2, r4
   133ec:	ldr	r1, [r5]
   133f0:	bl	1182c <memcpy@plt>
   133f4:	str	r6, [r5]
   133f8:	ldrd	r4, [sp]
   133fc:	ldr	r6, [sp, #8]
   13400:	add	sp, sp, #12
   13404:	pop	{pc}		; (ldr pc, [sp], #4)
   13408:	bl	12c84 <__assert_fail@plt+0x102c>
   1340c:	ldr	r3, [r0]
   13410:	cmp	r3, #0
   13414:	bxeq	lr
   13418:	strd	r4, [sp, #-16]!
   1341c:	mov	r4, r0
   13420:	mov	r0, r3
   13424:	str	r6, [sp, #8]
   13428:	str	lr, [sp, #12]
   1342c:	bl	11a0c <strlen@plt>
   13430:	add	r5, r0, #1
   13434:	mov	r0, r5
   13438:	bl	18b40 <argp_parse@@Base+0x1df0>
   1343c:	subs	r6, r0, #0
   13440:	beq	13464 <__assert_fail@plt+0x180c>
   13444:	mov	r2, r5
   13448:	ldr	r1, [r4]
   1344c:	bl	1182c <memcpy@plt>
   13450:	str	r6, [r4]
   13454:	ldrd	r4, [sp]
   13458:	ldr	r6, [sp, #8]
   1345c:	add	sp, sp, #12
   13460:	pop	{pc}		; (ldr pc, [sp], #4)
   13464:	bl	12c84 <__assert_fail@plt+0x102c>
   13468:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1346c:	movw	r3, #5048	; 0x13b8
   13470:	movt	r3, #3
   13474:	ldr	r2, [r1]
   13478:	strd	r6, [sp, #8]
   1347c:	str	lr, [sp, #32]
   13480:	ldr	lr, [r1, #64]	; 0x40
   13484:	strd	sl, [sp, #24]
   13488:	mov	sl, r0
   1348c:	ldr	r0, [r3]
   13490:	strd	r8, [sp, #16]
   13494:	sub	sp, sp, #44	; 0x2c
   13498:	sub	r3, lr, #1
   1349c:	cmp	r3, #1
   134a0:	ldr	r3, [r1, #4]
   134a4:	bls	13538 <__assert_fail@plt+0x18e0>
   134a8:	ldr	ip, [r1, #8]
   134ac:	movw	lr, #60416	; 0xec00
   134b0:	movt	lr, #1
   134b4:	cmp	ip, #0
   134b8:	moveq	ip, lr
   134bc:	ldr	r9, [r1, #12]
   134c0:	ldr	lr, [r1, #44]	; 0x2c
   134c4:	ldr	r8, [r1, #20]
   134c8:	ldr	r7, [r1, #24]
   134cc:	cmp	lr, #0
   134d0:	ldrne	lr, [lr]
   134d4:	movweq	lr, #60432	; 0xec10
   134d8:	movteq	lr, #1
   134dc:	ldr	r6, [r1, #28]
   134e0:	ldr	r5, [r1, #36]	; 0x24
   134e4:	ldr	r4, [r1, #40]	; 0x28
   134e8:	ldr	fp, [r1, #48]	; 0x30
   134ec:	movw	r1, #60436	; 0xec14
   134f0:	movt	r1, #1
   134f4:	stm	sp, {sl, ip}
   134f8:	str	r9, [sp, #8]
   134fc:	str	r8, [sp, #12]
   13500:	str	r7, [sp, #16]
   13504:	str	r6, [sp, #20]
   13508:	str	r5, [sp, #24]
   1350c:	str	r4, [sp, #28]
   13510:	str	lr, [sp, #32]
   13514:	str	fp, [sp, #36]	; 0x24
   13518:	bl	11a3c <fprintf@plt>
   1351c:	add	sp, sp, #44	; 0x2c
   13520:	ldrd	r4, [sp]
   13524:	ldrd	r6, [sp, #8]
   13528:	ldrd	r8, [sp, #16]
   1352c:	ldrd	sl, [sp, #24]
   13530:	add	sp, sp, #32
   13534:	pop	{pc}		; (ldr pc, [sp], #4)
   13538:	movw	r4, #60420	; 0xec04
   1353c:	movt	r4, #1
   13540:	cmp	lr, #2
   13544:	movw	ip, #61456	; 0xf010
   13548:	movt	ip, #1
   1354c:	moveq	ip, r4
   13550:	b	134bc <__assert_fail@plt+0x1864>
   13554:	mov	r3, #1
   13558:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1355c:	mov	r4, r0
   13560:	ldrh	r0, [r0, #68]	; 0x44
   13564:	strd	r6, [sp, #8]
   13568:	movw	r7, #60600	; 0xecb8
   1356c:	movt	r7, #1
   13570:	strd	r8, [sp, #16]
   13574:	movw	r9, #60632	; 0xecd8
   13578:	movt	r9, #1
   1357c:	movw	r8, #5624	; 0x15f8
   13580:	movt	r8, #3
   13584:	str	lr, [sp, #24]
   13588:	sub	sp, sp, #20
   1358c:	str	r3, [sp, #8]
   13590:	mov	r2, #0
   13594:	ldr	r1, [r4, #16]
   13598:	bl	11be0 <socket@plt>
   1359c:	cmp	r0, #0
   135a0:	mov	r5, r0
   135a4:	str	r0, [r4, #60]	; 0x3c
   135a8:	blt	13660 <__assert_fail@plt+0x1a08>
   135ac:	ldrh	r3, [r4, #68]	; 0x44
   135b0:	cmp	r3, #10
   135b4:	beq	136a8 <__assert_fail@plt+0x1a50>
   135b8:	mov	r2, #3
   135bc:	mov	r1, r7
   135c0:	ldr	r0, [r4, #20]
   135c4:	bl	11c04 <strncmp@plt>
   135c8:	cmp	r0, #0
   135cc:	bne	135dc <__assert_fail@plt+0x1984>
   135d0:	ldr	r3, [r8]
   135d4:	tst	r3, #1
   135d8:	bne	136e0 <__assert_fail@plt+0x1a88>
   135dc:	add	r6, sp, #8
   135e0:	mov	ip, #4
   135e4:	mov	r3, r6
   135e8:	mov	r0, r5
   135ec:	mov	r2, #2
   135f0:	mov	r1, #1
   135f4:	str	ip, [sp]
   135f8:	bl	11790 <setsockopt@plt>
   135fc:	cmp	r0, #0
   13600:	blt	13698 <__assert_fail@plt+0x1a40>
   13604:	add	r1, r4, #72	; 0x48
   13608:	ldr	r0, [r4, #60]	; 0x3c
   1360c:	ldr	r2, [r4, #200]	; 0xc8
   13610:	bl	11a78 <bind@plt>
   13614:	cmp	r0, #0
   13618:	bge	13808 <__assert_fail@plt+0x1bb0>
   1361c:	bl	11a54 <__errno_location@plt>
   13620:	ldr	r0, [r0]
   13624:	bic	r3, r0, #2
   13628:	cmp	r3, #97	; 0x61
   1362c:	bne	13734 <__assert_fail@plt+0x1adc>
   13630:	ldrh	r3, [r4, #68]	; 0x44
   13634:	cmp	r3, #10
   13638:	bne	13734 <__assert_fail@plt+0x1adc>
   1363c:	ldrb	r3, [r4, #70]	; 0x46
   13640:	cmp	r3, #0
   13644:	beq	13734 <__assert_fail@plt+0x1adc>
   13648:	mov	r3, #2
   1364c:	ldr	r0, [r4, #60]	; 0x3c
   13650:	strh	r3, [r4, #68]	; 0x44
   13654:	bl	11c28 <close@plt>
   13658:	ldrh	r0, [r4, #68]	; 0x44
   1365c:	b	13590 <__assert_fail@plt+0x1938>
   13660:	bl	11a54 <__errno_location@plt>
   13664:	ldr	r0, [r0]
   13668:	cmp	r0, #97	; 0x61
   1366c:	bne	137cc <__assert_fail@plt+0x1b74>
   13670:	ldrh	r3, [r4, #68]	; 0x44
   13674:	cmp	r3, #10
   13678:	bne	137cc <__assert_fail@plt+0x1b74>
   1367c:	ldrb	r3, [r4, #70]	; 0x46
   13680:	cmp	r3, #0
   13684:	beq	137cc <__assert_fail@plt+0x1b74>
   13688:	mov	r3, #2
   1368c:	mov	r0, r3
   13690:	strh	r3, [r4, #68]	; 0x44
   13694:	b	13590 <__assert_fail@plt+0x1938>
   13698:	mov	r1, r9
   1369c:	mov	r0, #3
   136a0:	bl	11b44 <syslog@plt>
   136a4:	b	13604 <__assert_fail@plt+0x19ac>
   136a8:	ldrb	ip, [r4, #70]	; 0x46
   136ac:	mov	lr, #4
   136b0:	add	r3, sp, #12
   136b4:	mov	r2, #26
   136b8:	mov	r1, #41	; 0x29
   136bc:	str	lr, [sp]
   136c0:	clz	ip, ip
   136c4:	lsr	ip, ip, #5
   136c8:	str	ip, [sp, #12]
   136cc:	bl	11790 <setsockopt@plt>
   136d0:	cmp	r0, #0
   136d4:	blt	137b8 <__assert_fail@plt+0x1b60>
   136d8:	ldr	r5, [r4, #60]	; 0x3c
   136dc:	b	135b8 <__assert_fail@plt+0x1960>
   136e0:	mov	r1, #4
   136e4:	mov	r2, #1
   136e8:	add	r6, sp, #8
   136ec:	mov	r0, r5
   136f0:	mov	r3, r6
   136f4:	str	r1, [sp]
   136f8:	mov	r1, r2
   136fc:	bl	11790 <setsockopt@plt>
   13700:	cmp	r0, #0
   13704:	blt	13710 <__assert_fail@plt+0x1ab8>
   13708:	ldr	r5, [r4, #60]	; 0x3c
   1370c:	b	135e0 <__assert_fail@plt+0x1988>
   13710:	bl	11a54 <__errno_location@plt>
   13714:	ldr	r3, [r0]
   13718:	cmp	r3, #13
   1371c:	beq	13708 <__assert_fail@plt+0x1ab0>
   13720:	movw	r1, #60604	; 0xecbc
   13724:	movt	r1, #1
   13728:	mov	r0, #3
   1372c:	bl	11b44 <syslog@plt>
   13730:	b	13708 <__assert_fail@plt+0x1ab0>
   13734:	ldr	r5, [r4, #8]
   13738:	movw	r3, #5060	; 0x13c4
   1373c:	movt	r3, #3
   13740:	ldrb	r3, [r3]
   13744:	ldr	r6, [r4, #12]
   13748:	cmp	r5, #0
   1374c:	ldr	r7, [r4, #20]
   13750:	beq	13828 <__assert_fail@plt+0x1bd0>
   13754:	cmp	r3, #0
   13758:	bne	13884 <__assert_fail@plt+0x1c2c>
   1375c:	movw	r1, #60696	; 0xed18
   13760:	movt	r1, #1
   13764:	str	r7, [sp]
   13768:	mov	r3, r6
   1376c:	mov	r2, r5
   13770:	mov	r0, #3
   13774:	bl	11b44 <syslog@plt>
   13778:	ldr	r0, [r4, #60]	; 0x3c
   1377c:	bl	11c28 <close@plt>
   13780:	movw	r3, #5640	; 0x1608
   13784:	movt	r3, #3
   13788:	ldr	r2, [r3]
   1378c:	mvn	r1, #0
   13790:	str	r1, [r4, #60]	; 0x3c
   13794:	cmp	r2, #0
   13798:	movne	r0, #1
   1379c:	beq	13810 <__assert_fail@plt+0x1bb8>
   137a0:	add	sp, sp, #20
   137a4:	ldrd	r4, [sp]
   137a8:	ldrd	r6, [sp, #8]
   137ac:	ldrd	r8, [sp, #16]
   137b0:	add	sp, sp, #24
   137b4:	pop	{pc}		; (ldr pc, [sp], #4)
   137b8:	movw	r1, #60568	; 0xec98
   137bc:	movt	r1, #1
   137c0:	mov	r0, #3
   137c4:	bl	11b44 <syslog@plt>
   137c8:	b	136d8 <__assert_fail@plt+0x1a80>
   137cc:	movw	r3, #5060	; 0x13c4
   137d0:	movt	r3, #3
   137d4:	ldr	r5, [r4, #12]
   137d8:	ldrb	r3, [r3]
   137dc:	ldr	r6, [r4, #20]
   137e0:	cmp	r3, #0
   137e4:	bne	1384c <__assert_fail@plt+0x1bf4>
   137e8:	mov	r0, #3
   137ec:	mov	r3, r6
   137f0:	mov	r2, r5
   137f4:	movw	r1, #60548	; 0xec84
   137f8:	movt	r1, #1
   137fc:	bl	11b44 <syslog@plt>
   13800:	mov	r0, #1
   13804:	b	137a0 <__assert_fail@plt+0x1b48>
   13808:	mov	r0, #0
   1380c:	b	137a0 <__assert_fail@plt+0x1b48>
   13810:	mov	r4, #1
   13814:	mov	r0, #600	; 0x258
   13818:	str	r4, [r3]
   1381c:	bl	118a4 <alarm@plt>
   13820:	mov	r0, r4
   13824:	b	137a0 <__assert_fail@plt+0x1b48>
   13828:	cmp	r3, #0
   1382c:	bne	138c4 <__assert_fail@plt+0x1c6c>
   13830:	mov	r3, r7
   13834:	mov	r2, r6
   13838:	movw	r1, #60744	; 0xed48
   1383c:	movt	r1, #1
   13840:	mov	r0, #3
   13844:	bl	11b44 <syslog@plt>
   13848:	b	13778 <__assert_fail@plt+0x1b20>
   1384c:	movw	r3, #5048	; 0x13b8
   13850:	movt	r3, #3
   13854:	ldr	r7, [r3]
   13858:	bl	119ac <strerror@plt>
   1385c:	mov	r3, r6
   13860:	mov	r2, r5
   13864:	str	r0, [sp]
   13868:	movw	r1, #60520	; 0xec68
   1386c:	movt	r1, #1
   13870:	mov	r0, r7
   13874:	bl	11a3c <fprintf@plt>
   13878:	ldr	r5, [r4, #12]
   1387c:	ldr	r6, [r4, #20]
   13880:	b	137e8 <__assert_fail@plt+0x1b90>
   13884:	movw	r3, #5048	; 0x13b8
   13888:	movt	r3, #3
   1388c:	ldr	r8, [r3]
   13890:	bl	119ac <strerror@plt>
   13894:	mov	r3, r6
   13898:	mov	r2, r5
   1389c:	str	r7, [sp]
   138a0:	movw	r1, #60664	; 0xecf8
   138a4:	movt	r1, #1
   138a8:	str	r0, [sp, #4]
   138ac:	mov	r0, r8
   138b0:	bl	11a3c <fprintf@plt>
   138b4:	ldr	r5, [r4, #8]
   138b8:	ldr	r6, [r4, #12]
   138bc:	ldr	r7, [r4, #20]
   138c0:	b	1375c <__assert_fail@plt+0x1b04>
   138c4:	movw	r3, #5048	; 0x13b8
   138c8:	movt	r3, #3
   138cc:	ldr	r5, [r3]
   138d0:	bl	119ac <strerror@plt>
   138d4:	mov	r3, r7
   138d8:	mov	r2, r6
   138dc:	str	r0, [sp]
   138e0:	movw	r1, #60716	; 0xed2c
   138e4:	movt	r1, #1
   138e8:	mov	r0, r5
   138ec:	bl	11a3c <fprintf@plt>
   138f0:	ldr	r6, [r4, #12]
   138f4:	ldr	r7, [r4, #20]
   138f8:	b	13830 <__assert_fail@plt+0x1bd8>
   138fc:	movw	r3, #5652	; 0x1614
   13900:	movt	r3, #3
   13904:	str	r4, [sp, #-8]!
   13908:	ldr	r4, [r3]
   1390c:	mov	r2, #0
   13910:	movw	r3, #5640	; 0x1608
   13914:	movt	r3, #3
   13918:	str	lr, [sp, #4]
   1391c:	str	r2, [r3]
   13920:	cmp	r4, r2
   13924:	bne	13938 <__assert_fail@plt+0x1ce0>
   13928:	b	13968 <__assert_fail@plt+0x1d10>
   1392c:	ldr	r4, [r4, #220]	; 0xdc
   13930:	cmp	r4, #0
   13934:	beq	13968 <__assert_fail@plt+0x1d10>
   13938:	ldr	r3, [r4, #60]	; 0x3c
   1393c:	cmn	r3, #1
   13940:	bne	1392c <__assert_fail@plt+0x1cd4>
   13944:	ldr	r3, [r4, #64]	; 0x40
   13948:	mov	r0, r4
   1394c:	sub	r3, r3, #1
   13950:	cmp	r3, #1
   13954:	bls	1392c <__assert_fail@plt+0x1cd4>
   13958:	bl	13554 <__assert_fail@plt+0x18fc>
   1395c:	ldr	r4, [r4, #220]	; 0xdc
   13960:	cmp	r4, #0
   13964:	bne	13938 <__assert_fail@plt+0x1ce0>
   13968:	ldr	r4, [sp]
   1396c:	add	sp, sp, #4
   13970:	pop	{pc}		; (ldr pc, [sp], #4)
   13974:	ldr	r2, [r0, #60]	; 0x3c
   13978:	mov	r1, #1
   1397c:	strh	r1, [r0, #32]
   13980:	cmn	r2, #1
   13984:	bxne	lr
   13988:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1398c:	mov	r4, r0
   13990:	strd	r6, [sp, #8]
   13994:	str	r8, [sp, #16]
   13998:	str	lr, [sp, #20]
   1399c:	bl	13554 <__assert_fail@plt+0x18fc>
   139a0:	cmp	r0, #0
   139a4:	bne	13a2c <__assert_fail@plt+0x1dd4>
   139a8:	ldr	r2, [r4, #16]
   139ac:	ldr	r3, [r4, #60]	; 0x3c
   139b0:	cmp	r2, #1
   139b4:	beq	13a70 <__assert_fail@plt+0x1e18>
   139b8:	cmp	r3, #0
   139bc:	add	r2, r3, #31
   139c0:	movge	r2, r3
   139c4:	movw	r0, #5488	; 0x1570
   139c8:	movt	r0, #3
   139cc:	asr	r2, r2, #5
   139d0:	rsbs	lr, r3, #0
   139d4:	and	lr, lr, #31
   139d8:	and	r6, r3, #31
   139dc:	ldr	r5, [r0, r2, lsl #2]
   139e0:	rsbpl	r6, lr, #0
   139e4:	mov	r7, #1
   139e8:	movw	ip, #5484	; 0x156c
   139ec:	movt	ip, #3
   139f0:	movw	r1, #5620	; 0x15f4
   139f4:	movt	r1, #3
   139f8:	ldr	lr, [r1]
   139fc:	orr	r5, r5, r7, lsl r6
   13a00:	ldr	r6, [ip]
   13a04:	str	r5, [r0, r2, lsl #2]
   13a08:	movw	r2, #5060	; 0x13c4
   13a0c:	movt	r2, #3
   13a10:	ldrb	r2, [r2]
   13a14:	add	lr, lr, r7
   13a18:	cmp	r6, r3
   13a1c:	str	lr, [r1]
   13a20:	strlt	r3, [ip]
   13a24:	cmp	r2, #0
   13a28:	bne	13a40 <__assert_fail@plt+0x1de8>
   13a2c:	ldrd	r4, [sp]
   13a30:	ldrd	r6, [sp, #8]
   13a34:	ldr	r8, [sp, #16]
   13a38:	add	sp, sp, #20
   13a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13a40:	movw	r0, #5048	; 0x13b8
   13a44:	movt	r0, #3
   13a48:	ldrd	r6, [sp, #8]
   13a4c:	movw	r1, #60760	; 0xed58
   13a50:	movt	r1, #1
   13a54:	ldr	r0, [r0]
   13a58:	ldr	r8, [sp, #16]
   13a5c:	ldr	lr, [sp, #20]
   13a60:	ldr	r2, [r4, #48]	; 0x30
   13a64:	ldrd	r4, [sp]
   13a68:	add	sp, sp, #24
   13a6c:	b	11a3c <fprintf@plt>
   13a70:	mov	r0, r3
   13a74:	mov	r1, #10
   13a78:	bl	11b20 <listen@plt>
   13a7c:	ldr	r3, [r4, #60]	; 0x3c
   13a80:	b	139b8 <__assert_fail@plt+0x1d60>
   13a84:	strd	r4, [sp, #-16]!
   13a88:	mov	r4, r0
   13a8c:	ldr	r0, [r0, #60]	; 0x3c
   13a90:	str	r6, [sp, #8]
   13a94:	str	lr, [sp, #12]
   13a98:	cmp	r0, #0
   13a9c:	blt	13ae0 <__assert_fail@plt+0x1e88>
   13aa0:	asr	lr, r0, #5
   13aa4:	movw	r2, #5488	; 0x1570
   13aa8:	movt	r2, #3
   13aac:	movw	r3, #5620	; 0x15f4
   13ab0:	movt	r3, #3
   13ab4:	ldr	ip, [r2, lr, lsl #2]
   13ab8:	and	r5, r0, #31
   13abc:	mov	r6, #1
   13ac0:	ldr	r1, [r3]
   13ac4:	bic	ip, ip, r6, lsl r5
   13ac8:	sub	r1, r1, #1
   13acc:	str	ip, [r2, lr, lsl #2]
   13ad0:	str	r1, [r3]
   13ad4:	bl	11c28 <close@plt>
   13ad8:	mvn	r3, #0
   13adc:	str	r3, [r4, #60]	; 0x3c
   13ae0:	ldr	r3, [r4, #24]
   13ae4:	mov	r2, #0
   13ae8:	str	r2, [r4, #208]	; 0xd0
   13aec:	ldr	r6, [sp, #8]
   13af0:	cmp	r3, #1
   13af4:	movgt	r3, #1
   13af8:	strgt	r3, [r4, #24]
   13afc:	ldrd	r4, [sp]
   13b00:	add	sp, sp, #12
   13b04:	pop	{pc}		; (ldr pc, [sp], #4)
   13b08:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13b0c:	movw	r5, #5652	; 0x1614
   13b10:	movt	r5, #3
   13b14:	strd	r6, [sp, #8]
   13b18:	mov	r4, r0
   13b1c:	ldr	r6, [r5]
   13b20:	strd	r8, [sp, #16]
   13b24:	strd	sl, [sp, #24]
   13b28:	str	lr, [sp, #32]
   13b2c:	sub	sp, sp, #300	; 0x12c
   13b30:	cmp	r6, #0
   13b34:	beq	13bb8 <__assert_fail@plt+0x1f60>
   13b38:	add	r7, r0, #72	; 0x48
   13b3c:	mov	r2, #128	; 0x80
   13b40:	mov	r1, r7
   13b44:	add	r0, r6, #72	; 0x48
   13b48:	bl	1185c <memcmp@plt>
   13b4c:	cmp	r0, #0
   13b50:	bne	13bac <__assert_fail@plt+0x1f54>
   13b54:	ldr	r1, [r4, #12]
   13b58:	ldr	r0, [r6, #12]
   13b5c:	bl	11778 <strcmp@plt>
   13b60:	cmp	r0, #0
   13b64:	bne	13bac <__assert_fail@plt+0x1f54>
   13b68:	ldr	r1, [r4, #20]
   13b6c:	ldr	r0, [r6, #20]
   13b70:	bl	11778 <strcmp@plt>
   13b74:	cmp	r0, #0
   13b78:	bne	13bac <__assert_fail@plt+0x1f54>
   13b7c:	ldr	r2, [r6, #64]	; 0x40
   13b80:	ldr	r3, [r4, #64]	; 0x40
   13b84:	sub	r2, r2, #1
   13b88:	cmp	r2, #1
   13b8c:	sub	r3, r3, #1
   13b90:	movls	r2, #0
   13b94:	movhi	r2, #1
   13b98:	cmp	r3, #1
   13b9c:	movhi	r3, #0
   13ba0:	movls	r3, #1
   13ba4:	cmp	r2, r3
   13ba8:	bne	13ecc <__assert_fail@plt+0x2274>
   13bac:	ldr	r6, [r6, #220]	; 0xdc
   13bb0:	cmp	r6, #0
   13bb4:	bne	13b3c <__assert_fail@plt+0x1ee4>
   13bb8:	movw	r3, #5060	; 0x13c4
   13bbc:	movt	r3, #3
   13bc0:	ldrb	r3, [r3]
   13bc4:	cmp	r3, #0
   13bc8:	bne	13e28 <__assert_fail@plt+0x21d0>
   13bcc:	mov	r0, #224	; 0xe0
   13bd0:	bl	18b40 <argp_parse@@Base+0x1df0>
   13bd4:	subs	r6, r0, #0
   13bd8:	beq	140d4 <__assert_fail@plt+0x247c>
   13bdc:	mov	r1, r4
   13be0:	mov	r2, #224	; 0xe0
   13be4:	bl	1182c <memcpy@plt>
   13be8:	ldr	r0, [r6, #8]
   13bec:	cmp	r0, #0
   13bf0:	beq	13c1c <__assert_fail@plt+0x1fc4>
   13bf4:	bl	11a0c <strlen@plt>
   13bf8:	add	r4, r0, #1
   13bfc:	mov	r0, r4
   13c00:	bl	18b40 <argp_parse@@Base+0x1df0>
   13c04:	subs	r7, r0, #0
   13c08:	beq	140b8 <__assert_fail@plt+0x2460>
   13c0c:	mov	r2, r4
   13c10:	ldr	r1, [r6, #8]
   13c14:	bl	1182c <memcpy@plt>
   13c18:	str	r7, [r6, #8]
   13c1c:	ldr	r0, [r6, #12]
   13c20:	cmp	r0, #0
   13c24:	beq	13c50 <__assert_fail@plt+0x1ff8>
   13c28:	bl	11a0c <strlen@plt>
   13c2c:	add	r4, r0, #1
   13c30:	mov	r0, r4
   13c34:	bl	18b40 <argp_parse@@Base+0x1df0>
   13c38:	subs	r7, r0, #0
   13c3c:	beq	140b8 <__assert_fail@plt+0x2460>
   13c40:	mov	r2, r4
   13c44:	ldr	r1, [r6, #12]
   13c48:	bl	1182c <memcpy@plt>
   13c4c:	str	r7, [r6, #12]
   13c50:	ldr	r0, [r6, #20]
   13c54:	cmp	r0, #0
   13c58:	beq	13c84 <__assert_fail@plt+0x202c>
   13c5c:	bl	11a0c <strlen@plt>
   13c60:	add	r4, r0, #1
   13c64:	mov	r0, r4
   13c68:	bl	18b40 <argp_parse@@Base+0x1df0>
   13c6c:	subs	r7, r0, #0
   13c70:	beq	140b8 <__assert_fail@plt+0x2460>
   13c74:	mov	r2, r4
   13c78:	ldr	r1, [r6, #20]
   13c7c:	bl	1182c <memcpy@plt>
   13c80:	str	r7, [r6, #20]
   13c84:	ldr	r0, [r6, #36]	; 0x24
   13c88:	cmp	r0, #0
   13c8c:	beq	13cb8 <__assert_fail@plt+0x2060>
   13c90:	bl	11a0c <strlen@plt>
   13c94:	add	r4, r0, #1
   13c98:	mov	r0, r4
   13c9c:	bl	18b40 <argp_parse@@Base+0x1df0>
   13ca0:	subs	r7, r0, #0
   13ca4:	beq	140b8 <__assert_fail@plt+0x2460>
   13ca8:	mov	r2, r4
   13cac:	ldr	r1, [r6, #36]	; 0x24
   13cb0:	bl	1182c <memcpy@plt>
   13cb4:	str	r7, [r6, #36]	; 0x24
   13cb8:	ldr	r0, [r6, #40]	; 0x28
   13cbc:	cmp	r0, #0
   13cc0:	beq	13cec <__assert_fail@plt+0x2094>
   13cc4:	bl	11a0c <strlen@plt>
   13cc8:	add	r4, r0, #1
   13ccc:	mov	r0, r4
   13cd0:	bl	18b40 <argp_parse@@Base+0x1df0>
   13cd4:	subs	r7, r0, #0
   13cd8:	beq	140b8 <__assert_fail@plt+0x2460>
   13cdc:	mov	r2, r4
   13ce0:	ldr	r1, [r6, #40]	; 0x28
   13ce4:	bl	1182c <memcpy@plt>
   13ce8:	str	r7, [r6, #40]	; 0x28
   13cec:	ldr	r0, [r6, #48]	; 0x30
   13cf0:	cmp	r0, #0
   13cf4:	beq	13d20 <__assert_fail@plt+0x20c8>
   13cf8:	bl	11a0c <strlen@plt>
   13cfc:	add	r4, r0, #1
   13d00:	mov	r0, r4
   13d04:	bl	18b40 <argp_parse@@Base+0x1df0>
   13d08:	subs	r7, r0, #0
   13d0c:	beq	140b8 <__assert_fail@plt+0x2460>
   13d10:	mov	r2, r4
   13d14:	ldr	r1, [r6, #48]	; 0x30
   13d18:	bl	1182c <memcpy@plt>
   13d1c:	str	r7, [r6, #48]	; 0x30
   13d20:	ldr	r7, [r6, #56]	; 0x38
   13d24:	lsl	r7, r7, #2
   13d28:	mov	r0, r7
   13d2c:	bl	18b40 <argp_parse@@Base+0x1df0>
   13d30:	subs	r4, r0, #0
   13d34:	beq	140b8 <__assert_fail@plt+0x2460>
   13d38:	mov	r2, r7
   13d3c:	ldr	r1, [r6, #52]	; 0x34
   13d40:	bl	1182c <memcpy@plt>
   13d44:	ldr	r3, [r6, #56]	; 0x38
   13d48:	str	r4, [r6, #52]	; 0x34
   13d4c:	cmp	r3, #0
   13d50:	beq	13da8 <__assert_fail@plt+0x2150>
   13d54:	mov	r7, #0
   13d58:	b	13d60 <__assert_fail@plt+0x2108>
   13d5c:	ldr	r4, [r6, #52]	; 0x34
   13d60:	ldr	r0, [r4, r7, lsl #2]
   13d64:	add	r4, r4, r7, lsl #2
   13d68:	cmp	r0, #0
   13d6c:	beq	13d9c <__assert_fail@plt+0x2144>
   13d70:	bl	11a0c <strlen@plt>
   13d74:	add	r8, r0, #1
   13d78:	mov	r0, r8
   13d7c:	bl	18b40 <argp_parse@@Base+0x1df0>
   13d80:	subs	r9, r0, #0
   13d84:	beq	140bc <__assert_fail@plt+0x2464>
   13d88:	mov	r2, r8
   13d8c:	ldr	r1, [r4]
   13d90:	bl	1182c <memcpy@plt>
   13d94:	ldr	r3, [r6, #56]	; 0x38
   13d98:	str	r9, [r4]
   13d9c:	add	r7, r7, #1
   13da0:	cmp	r7, r3
   13da4:	bcc	13d5c <__assert_fail@plt+0x2104>
   13da8:	mvn	r3, #0
   13dac:	add	r0, sp, #168	; 0xa8
   13db0:	str	r3, [r6, #60]	; 0x3c
   13db4:	bl	11af0 <sigemptyset@plt>
   13db8:	mov	r1, #17
   13dbc:	add	r0, sp, #168	; 0xa8
   13dc0:	bl	11994 <sigaddset@plt>
   13dc4:	mov	r1, #1
   13dc8:	add	r0, sp, #168	; 0xa8
   13dcc:	bl	11994 <sigaddset@plt>
   13dd0:	mov	r1, #14
   13dd4:	add	r0, sp, #168	; 0xa8
   13dd8:	bl	11994 <sigaddset@plt>
   13ddc:	add	r1, sp, #168	; 0xa8
   13de0:	add	r2, sp, #40	; 0x28
   13de4:	mov	r0, #0
   13de8:	bl	117d8 <sigprocmask@plt>
   13dec:	ldr	r3, [r5]
   13df0:	add	r1, sp, #40	; 0x28
   13df4:	mov	r2, #0
   13df8:	mov	r0, #2
   13dfc:	str	r6, [r5]
   13e00:	str	r3, [r6, #220]	; 0xdc
   13e04:	bl	117d8 <sigprocmask@plt>
   13e08:	mov	r0, r6
   13e0c:	add	sp, sp, #300	; 0x12c
   13e10:	ldrd	r4, [sp]
   13e14:	ldrd	r6, [sp, #8]
   13e18:	ldrd	r8, [sp, #16]
   13e1c:	ldrd	sl, [sp, #24]
   13e20:	add	sp, sp, #32
   13e24:	pop	{pc}		; (ldr pc, [sp], #4)
   13e28:	movw	r3, #5048	; 0x13b8
   13e2c:	movt	r3, #3
   13e30:	ldr	r2, [r4]
   13e34:	ldr	r1, [r4, #64]	; 0x40
   13e38:	ldr	r0, [r3]
   13e3c:	sub	r3, r1, #1
   13e40:	cmp	r3, #1
   13e44:	ldr	r3, [r4, #4]
   13e48:	bls	14058 <__assert_fail@plt+0x2400>
   13e4c:	ldr	r1, [r4, #8]
   13e50:	movw	ip, #60416	; 0xec00
   13e54:	movt	ip, #1
   13e58:	cmp	r1, #0
   13e5c:	moveq	r1, ip
   13e60:	ldr	sl, [r4, #12]
   13e64:	ldr	ip, [r4, #44]	; 0x2c
   13e68:	ldr	fp, [r4, #48]	; 0x30
   13e6c:	ldr	r9, [r4, #20]
   13e70:	cmp	ip, #0
   13e74:	ldrne	ip, [ip]
   13e78:	movweq	ip, #60432	; 0xec10
   13e7c:	movteq	ip, #1
   13e80:	ldr	r8, [r4, #24]
   13e84:	ldr	r7, [r4, #28]
   13e88:	ldr	r6, [r4, #36]	; 0x24
   13e8c:	ldr	lr, [r4, #40]	; 0x28
   13e90:	stmib	sp, {r1, sl}
   13e94:	movw	r1, #60436	; 0xec14
   13e98:	movt	r1, #1
   13e9c:	str	fp, [sp, #36]	; 0x24
   13ea0:	movw	fp, #60792	; 0xed78
   13ea4:	movt	fp, #1
   13ea8:	str	fp, [sp]
   13eac:	str	r9, [sp, #12]
   13eb0:	str	r8, [sp, #16]
   13eb4:	str	r7, [sp, #20]
   13eb8:	str	r6, [sp, #24]
   13ebc:	str	lr, [sp, #28]
   13ec0:	str	ip, [sp, #32]
   13ec4:	bl	11a3c <fprintf@plt>
   13ec8:	b	13bcc <__assert_fail@plt+0x1f74>
   13ecc:	mov	r8, r0
   13ed0:	add	r0, sp, #168	; 0xa8
   13ed4:	bl	11af0 <sigemptyset@plt>
   13ed8:	mov	r1, #17
   13edc:	add	r0, sp, #168	; 0xa8
   13ee0:	bl	11994 <sigaddset@plt>
   13ee4:	mov	r1, #1
   13ee8:	add	r0, sp, #168	; 0xa8
   13eec:	bl	11994 <sigaddset@plt>
   13ef0:	mov	r1, #14
   13ef4:	add	r0, sp, #168	; 0xa8
   13ef8:	bl	11994 <sigaddset@plt>
   13efc:	add	r1, sp, #168	; 0xa8
   13f00:	mov	r0, r8
   13f04:	add	r2, sp, #40	; 0x28
   13f08:	bl	117d8 <sigprocmask@plt>
   13f0c:	ldr	r3, [r4, #44]	; 0x2c
   13f10:	cmp	r3, #0
   13f14:	beq	14078 <__assert_fail@plt+0x2420>
   13f18:	ldr	r3, [r4, #36]	; 0x24
   13f1c:	cmp	r3, #0
   13f20:	beq	13f30 <__assert_fail@plt+0x22d8>
   13f24:	ldr	r2, [r6, #36]	; 0x24
   13f28:	str	r3, [r6, #36]	; 0x24
   13f2c:	str	r2, [r4, #36]	; 0x24
   13f30:	ldr	r3, [r4, #40]	; 0x28
   13f34:	cmp	r3, #0
   13f38:	beq	13f48 <__assert_fail@plt+0x22f0>
   13f3c:	ldr	r2, [r6, #40]	; 0x28
   13f40:	str	r3, [r6, #40]	; 0x28
   13f44:	str	r2, [r4, #40]	; 0x28
   13f48:	ldr	r3, [r4, #48]	; 0x30
   13f4c:	cmp	r3, #0
   13f50:	beq	13f60 <__assert_fail@plt+0x2308>
   13f54:	ldr	r2, [r6, #48]	; 0x30
   13f58:	str	r3, [r6, #48]	; 0x30
   13f5c:	str	r2, [r4, #48]	; 0x30
   13f60:	ldr	r1, [r6, #52]	; 0x34
   13f64:	ldr	r0, [r6, #56]	; 0x38
   13f68:	bl	16320 <__assert_fail@plt+0x46c8>
   13f6c:	ldr	r0, [r4, #52]	; 0x34
   13f70:	mov	r3, #0
   13f74:	mov	ip, #1
   13f78:	mov	r2, r3
   13f7c:	add	r1, sp, #40	; 0x28
   13f80:	ldr	lr, [r4, #56]	; 0x38
   13f84:	str	r0, [r6, #52]	; 0x34
   13f88:	mov	r0, #2
   13f8c:	str	lr, [r6, #56]	; 0x38
   13f90:	str	r3, [r4, #52]	; 0x34
   13f94:	str	r3, [r4, #56]	; 0x38
   13f98:	strh	ip, [r6, #32]
   13f9c:	bl	117d8 <sigprocmask@plt>
   13fa0:	movw	r3, #5060	; 0x13c4
   13fa4:	movt	r3, #3
   13fa8:	ldrb	r3, [r3]
   13fac:	cmp	r3, #0
   13fb0:	beq	13e08 <__assert_fail@plt+0x21b0>
   13fb4:	movw	r3, #5048	; 0x13b8
   13fb8:	movt	r3, #3
   13fbc:	ldr	r2, [r6]
   13fc0:	ldr	r1, [r6, #64]	; 0x40
   13fc4:	ldr	r0, [r3]
   13fc8:	sub	r3, r1, #1
   13fcc:	cmp	r3, #1
   13fd0:	ldr	r3, [r6, #4]
   13fd4:	bls	14098 <__assert_fail@plt+0x2440>
   13fd8:	ldr	r1, [r6, #8]
   13fdc:	movw	ip, #60416	; 0xec00
   13fe0:	movt	ip, #1
   13fe4:	cmp	r1, #0
   13fe8:	moveq	r1, ip
   13fec:	ldr	fp, [r6, #12]
   13ff0:	ldr	ip, [r6, #44]	; 0x2c
   13ff4:	ldr	sl, [r6, #20]
   13ff8:	ldr	r9, [r6, #24]
   13ffc:	cmp	ip, #0
   14000:	ldrne	lr, [ip]
   14004:	movweq	lr, #60432	; 0xec10
   14008:	movw	ip, #60784	; 0xed70
   1400c:	movt	ip, #1
   14010:	movteq	lr, #1
   14014:	ldr	r8, [r6, #28]
   14018:	ldr	r7, [r6, #36]	; 0x24
   1401c:	ldr	r5, [r6, #40]	; 0x28
   14020:	ldr	r4, [r6, #48]	; 0x30
   14024:	str	ip, [sp]
   14028:	stmib	sp, {r1, fp}
   1402c:	movw	r1, #60436	; 0xec14
   14030:	movt	r1, #1
   14034:	str	sl, [sp, #12]
   14038:	str	r9, [sp, #16]
   1403c:	str	r8, [sp, #20]
   14040:	str	r7, [sp, #24]
   14044:	str	r5, [sp, #28]
   14048:	str	lr, [sp, #32]
   1404c:	str	r4, [sp, #36]	; 0x24
   14050:	bl	11a3c <fprintf@plt>
   14054:	b	13e08 <__assert_fail@plt+0x21b0>
   14058:	cmp	r1, #2
   1405c:	movw	lr, #60420	; 0xec04
   14060:	movt	lr, #1
   14064:	movw	ip, #61456	; 0xf010
   14068:	movt	ip, #1
   1406c:	moveq	r1, lr
   14070:	movne	r1, ip
   14074:	b	13e60 <__assert_fail@plt+0x2208>
   14078:	ldr	r2, [r6, #24]
   1407c:	ldr	r3, [r4, #24]
   14080:	cmp	r2, #1
   14084:	beq	14090 <__assert_fail@plt+0x2438>
   14088:	cmp	r3, #0
   1408c:	bne	13f18 <__assert_fail@plt+0x22c0>
   14090:	str	r3, [r6, #24]
   14094:	b	13f18 <__assert_fail@plt+0x22c0>
   14098:	cmp	r1, #2
   1409c:	movw	lr, #60420	; 0xec04
   140a0:	movt	lr, #1
   140a4:	movw	ip, #61456	; 0xf010
   140a8:	movt	ip, #1
   140ac:	moveq	r1, lr
   140b0:	movne	r1, ip
   140b4:	b	13fec <__assert_fail@plt+0x2394>
   140b8:	bl	12c84 <__assert_fail@plt+0x102c>
   140bc:	mov	r0, #3
   140c0:	movw	r1, #60256	; 0xeb60
   140c4:	movt	r1, #1
   140c8:	bl	11b44 <syslog@plt>
   140cc:	mvn	r0, #0
   140d0:	bl	119f4 <exit@plt>
   140d4:	mov	r0, #3
   140d8:	movw	r1, #61296	; 0xef70
   140dc:	movt	r1, #1
   140e0:	bl	11b44 <syslog@plt>
   140e4:	mvn	r0, #0
   140e8:	bl	119f4 <exit@plt>
   140ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   140f0:	mov	r4, r0
   140f4:	ldr	r5, [r0, #8]
   140f8:	strd	r6, [sp, #8]
   140fc:	mov	r6, r1
   14100:	mov	r7, r2
   14104:	str	r8, [sp, #16]
   14108:	str	lr, [sp, #20]
   1410c:	sub	sp, sp, #32
   14110:	cmp	r5, #0
   14114:	beq	141fc <__assert_fail@plt+0x25a4>
   14118:	movw	r1, #60800	; 0xed80
   1411c:	movt	r1, #1
   14120:	mov	r0, r5
   14124:	bl	11c4c <strspn@plt>
   14128:	mov	r8, r0
   1412c:	mov	r0, r5
   14130:	bl	11a0c <strlen@plt>
   14134:	cmp	r8, r0
   14138:	beq	14168 <__assert_fail@plt+0x2510>
   1413c:	mov	r1, #58	; 0x3a
   14140:	mov	r0, r5
   14144:	bl	11a24 <strchr@plt>
   14148:	cmp	r0, #0
   1414c:	beq	141c8 <__assert_fail@plt+0x2570>
   14150:	movw	r1, #60812	; 0xed8c
   14154:	movt	r1, #1
   14158:	mov	r0, r5
   1415c:	bl	11c4c <strspn@plt>
   14160:	cmp	r0, #0
   14164:	beq	141c8 <__assert_fail@plt+0x2570>
   14168:	ldrb	r1, [r4, #70]	; 0x46
   1416c:	mov	r2, #0
   14170:	mov	r3, #0
   14174:	strd	r2, [sp, #16]
   14178:	strd	r2, [sp, #24]
   1417c:	ldrh	r2, [r4, #68]	; 0x44
   14180:	cmp	r1, #0
   14184:	moveq	r3, #5
   14188:	bne	14238 <__assert_fail@plt+0x25e0>
   1418c:	str	r3, [sp]
   14190:	ldr	r1, [r4, #12]
   14194:	mov	r3, r7
   14198:	mov	r0, r5
   1419c:	str	r6, [sp, #12]
   141a0:	ldr	ip, [r4, #16]
   141a4:	stmib	sp, {r2, ip}
   141a8:	mov	r2, sp
   141ac:	bl	11bd4 <getaddrinfo@plt>
   141b0:	add	sp, sp, #32
   141b4:	ldrd	r4, [sp]
   141b8:	ldrd	r6, [sp, #8]
   141bc:	ldr	r8, [sp, #16]
   141c0:	add	sp, sp, #20
   141c4:	pop	{pc}		; (ldr pc, [sp], #4)
   141c8:	movw	r3, #5060	; 0x13c4
   141cc:	movt	r3, #3
   141d0:	ldrb	r3, [r3]
   141d4:	cmp	r3, #0
   141d8:	beq	141fc <__assert_fail@plt+0x25a4>
   141dc:	movw	r3, #5048	; 0x13b8
   141e0:	movt	r3, #3
   141e4:	mov	r2, r5
   141e8:	movw	r1, #60840	; 0xeda8
   141ec:	movt	r1, #1
   141f0:	ldr	r0, [r3]
   141f4:	bl	11a3c <fprintf@plt>
   141f8:	ldr	r5, [r4, #8]
   141fc:	mov	r3, #0
   14200:	mov	r1, #1
   14204:	ldrb	r2, [r4, #70]	; 0x46
   14208:	str	r1, [sp]
   1420c:	str	r3, [sp, #16]
   14210:	str	r3, [sp, #20]
   14214:	str	r3, [sp, #24]
   14218:	cmp	r2, r3
   1421c:	ldrh	r2, [r4, #68]	; 0x44
   14220:	str	r3, [sp, #28]
   14224:	beq	14190 <__assert_fail@plt+0x2538>
   14228:	cmp	r2, #2
   1422c:	movne	r3, #9
   14230:	strne	r3, [sp]
   14234:	b	14190 <__assert_fail@plt+0x2538>
   14238:	cmp	r2, #2
   1423c:	movne	r3, #13
   14240:	moveq	r3, #5
   14244:	str	r3, [sp]
   14248:	b	14190 <__assert_fail@plt+0x2538>
   1424c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14250:	movw	r1, #60600	; 0xecb8
   14254:	movt	r1, #1
   14258:	ldr	r4, [r0, #20]
   1425c:	mov	r2, #3
   14260:	strd	r6, [sp, #8]
   14264:	mov	r6, r0
   14268:	strd	r8, [sp, #16]
   1426c:	strd	sl, [sp, #24]
   14270:	str	lr, [sp, #32]
   14274:	sub	sp, sp, #28
   14278:	mov	r0, r4
   1427c:	bl	11c04 <strncmp@plt>
   14280:	cmp	r0, #0
   14284:	beq	14434 <__assert_fail@plt+0x27dc>
   14288:	mov	r2, #3
   1428c:	mov	r0, r4
   14290:	movw	r1, #60864	; 0xedc0
   14294:	movt	r1, #1
   14298:	bl	11c04 <strncmp@plt>
   1429c:	cmp	r0, #0
   142a0:	movweq	r0, #60864	; 0xedc0
   142a4:	movne	r0, r4
   142a8:	movteq	r0, #1
   142ac:	bl	117cc <getprotobyname@plt>
   142b0:	mov	r4, r0
   142b4:	cmp	r4, #0
   142b8:	beq	1444c <__assert_fail@plt+0x27f4>
   142bc:	mov	r0, r6
   142c0:	add	r2, sp, #20
   142c4:	ldr	r1, [r4, #8]
   142c8:	bl	140ec <__assert_fail@plt+0x2494>
   142cc:	cmn	r0, #9
   142d0:	mov	r8, r0
   142d4:	beq	14468 <__assert_fail@plt+0x2810>
   142d8:	cmp	r8, #0
   142dc:	bne	144f4 <__assert_fail@plt+0x289c>
   142e0:	ldr	r4, [sp, #20]
   142e4:	cmp	r4, #0
   142e8:	beq	1440c <__assert_fail@plt+0x27b4>
   142ec:	movw	sl, #5488	; 0x1570
   142f0:	movt	sl, #3
   142f4:	movw	r9, #5620	; 0x15f4
   142f8:	movt	r9, #3
   142fc:	movw	fp, #5484	; 0x156c
   14300:	movt	fp, #3
   14304:	add	r7, r6, #72	; 0x48
   14308:	b	14318 <__assert_fail@plt+0x26c0>
   1430c:	ldr	r4, [r4, #28]
   14310:	cmp	r4, #0
   14314:	beq	14408 <__assert_fail@plt+0x27b0>
   14318:	mov	r2, #128	; 0x80
   1431c:	mov	r1, #0
   14320:	mov	r0, r7
   14324:	bl	11a84 <memset@plt>
   14328:	mov	r0, r7
   1432c:	ldr	r2, [r4, #16]
   14330:	ldr	r1, [r4, #20]
   14334:	bl	1182c <memcpy@plt>
   14338:	ldr	r3, [r4, #16]
   1433c:	mov	r0, r6
   14340:	str	r3, [r6, #200]	; 0xc8
   14344:	bl	13b08 <__assert_fail@plt+0x1eb0>
   14348:	ldr	r3, [r0, #60]	; 0x3c
   1434c:	mov	r2, #1
   14350:	mov	r5, r0
   14354:	strh	r2, [r0, #32]
   14358:	cmn	r3, #1
   1435c:	bne	1430c <__assert_fail@plt+0x26b4>
   14360:	bl	13554 <__assert_fail@plt+0x18fc>
   14364:	cmp	r0, #0
   14368:	bne	1430c <__assert_fail@plt+0x26b4>
   1436c:	ldr	r2, [r5, #16]
   14370:	ldr	r3, [r5, #60]	; 0x3c
   14374:	cmp	r2, #1
   14378:	beq	14510 <__assert_fail@plt+0x28b8>
   1437c:	ldr	ip, [r9]
   14380:	cmp	r3, #0
   14384:	add	r2, r3, #31
   14388:	movge	r2, r3
   1438c:	rsbs	lr, r3, #0
   14390:	asr	r2, r2, #5
   14394:	and	lr, lr, #31
   14398:	and	r0, r3, #31
   1439c:	rsbpl	r0, lr, #0
   143a0:	movw	r1, #5060	; 0x13c4
   143a4:	movt	r1, #3
   143a8:	ldr	lr, [sl, r2, lsl #2]
   143ac:	add	ip, ip, #1
   143b0:	str	ip, [r9]
   143b4:	ldr	ip, [fp]
   143b8:	str	ip, [sp, #12]
   143bc:	mov	ip, #1
   143c0:	orr	r0, lr, ip, lsl r0
   143c4:	ldr	ip, [sp, #12]
   143c8:	str	r0, [sl, r2, lsl #2]
   143cc:	ldrb	r2, [r1]
   143d0:	cmp	ip, r3
   143d4:	strlt	r3, [fp]
   143d8:	cmp	r2, #0
   143dc:	beq	1430c <__assert_fail@plt+0x26b4>
   143e0:	movw	r0, #5048	; 0x13b8
   143e4:	movt	r0, #3
   143e8:	ldr	r2, [r5, #48]	; 0x30
   143ec:	movw	r1, #60760	; 0xed58
   143f0:	movt	r1, #1
   143f4:	ldr	r0, [r0]
   143f8:	bl	11a3c <fprintf@plt>
   143fc:	ldr	r4, [r4, #28]
   14400:	cmp	r4, #0
   14404:	bne	14318 <__assert_fail@plt+0x26c0>
   14408:	ldr	r4, [sp, #20]
   1440c:	mov	r0, r4
   14410:	bl	11bc8 <freeaddrinfo@plt>
   14414:	mov	r0, r8
   14418:	add	sp, sp, #28
   1441c:	ldrd	r4, [sp]
   14420:	ldrd	r6, [sp, #8]
   14424:	ldrd	r8, [sp, #16]
   14428:	ldrd	sl, [sp, #24]
   1442c:	add	sp, sp, #32
   14430:	pop	{pc}		; (ldr pc, [sp], #4)
   14434:	movw	r0, #60600	; 0xecb8
   14438:	movt	r0, #1
   1443c:	bl	117cc <getprotobyname@plt>
   14440:	mov	r4, r0
   14444:	cmp	r4, #0
   14448:	bne	142bc <__assert_fail@plt+0x2664>
   1444c:	movw	r1, #60868	; 0xedc4
   14450:	movt	r1, #1
   14454:	ldr	r2, [r6, #20]
   14458:	mov	r0, #3
   1445c:	mov	r8, #1
   14460:	bl	11b44 <syslog@plt>
   14464:	b	14414 <__assert_fail@plt+0x27bc>
   14468:	ldrh	r3, [r6, #68]	; 0x44
   1446c:	cmp	r3, #10
   14470:	beq	144c8 <__assert_fail@plt+0x2870>
   14474:	mov	r0, r8
   14478:	bl	11808 <gai_strerror@plt>
   1447c:	mov	r4, r0
   14480:	ldr	r2, [r6, #8]
   14484:	movw	r3, #5060	; 0x13c4
   14488:	movt	r3, #3
   1448c:	ldrb	r3, [r3]
   14490:	ldr	r1, [r6, #12]
   14494:	cmp	r2, #0
   14498:	ldr	r0, [r6, #20]
   1449c:	beq	14524 <__assert_fail@plt+0x28cc>
   144a0:	cmp	r3, #0
   144a4:	bne	14550 <__assert_fail@plt+0x28f8>
   144a8:	mov	r3, r1
   144ac:	movw	r1, #60928	; 0xee00
   144b0:	movt	r1, #1
   144b4:	stm	sp, {r0, r4}
   144b8:	mov	r0, #3
   144bc:	mov	r8, #1
   144c0:	bl	11b44 <syslog@plt>
   144c4:	b	14414 <__assert_fail@plt+0x27bc>
   144c8:	ldrb	r3, [r6, #70]	; 0x46
   144cc:	cmp	r3, #0
   144d0:	beq	14474 <__assert_fail@plt+0x281c>
   144d4:	mov	r3, #2
   144d8:	add	r2, sp, #20
   144dc:	ldr	r1, [r4, #8]
   144e0:	mov	r0, r6
   144e4:	strh	r3, [r6, #68]	; 0x44
   144e8:	bl	140ec <__assert_fail@plt+0x2494>
   144ec:	mov	r8, r0
   144f0:	b	142d8 <__assert_fail@plt+0x2680>
   144f4:	cmn	r8, #11
   144f8:	bne	14474 <__assert_fail@plt+0x281c>
   144fc:	bl	11a54 <__errno_location@plt>
   14500:	ldr	r0, [r0]
   14504:	bl	119ac <strerror@plt>
   14508:	mov	r4, r0
   1450c:	b	14480 <__assert_fail@plt+0x2828>
   14510:	mov	r0, r3
   14514:	mov	r1, #10
   14518:	bl	11b20 <listen@plt>
   1451c:	ldr	r3, [r5, #60]	; 0x3c
   14520:	b	1437c <__assert_fail@plt+0x2724>
   14524:	cmp	r3, #0
   14528:	bne	14580 <__assert_fail@plt+0x2928>
   1452c:	mov	r3, r0
   14530:	mov	r2, r1
   14534:	str	r4, [sp]
   14538:	movw	r1, #60988	; 0xee3c
   1453c:	movt	r1, #1
   14540:	mov	r0, #3
   14544:	mov	r8, #1
   14548:	bl	11b44 <syslog@plt>
   1454c:	b	14414 <__assert_fail@plt+0x27bc>
   14550:	movw	ip, #5048	; 0x13b8
   14554:	movt	ip, #3
   14558:	stm	sp, {r0, r4}
   1455c:	mov	r3, r1
   14560:	movw	r1, #60892	; 0xeddc
   14564:	movt	r1, #1
   14568:	ldr	r0, [ip]
   1456c:	bl	11a3c <fprintf@plt>
   14570:	ldr	r2, [r6, #8]
   14574:	ldr	r1, [r6, #12]
   14578:	ldr	r0, [r6, #20]
   1457c:	b	144a8 <__assert_fail@plt+0x2850>
   14580:	movw	ip, #5048	; 0x13b8
   14584:	movt	ip, #3
   14588:	str	r4, [sp]
   1458c:	mov	r3, r0
   14590:	mov	r2, r1
   14594:	ldr	r0, [ip]
   14598:	movw	r1, #60956	; 0xee1c
   1459c:	movt	r1, #1
   145a0:	bl	11a3c <fprintf@plt>
   145a4:	ldr	r1, [r6, #12]
   145a8:	ldr	r0, [r6, #20]
   145ac:	b	1452c <__assert_fail@plt+0x28d4>
   145b0:	movw	r1, #65148	; 0xfe7c
   145b4:	movt	r1, #1
   145b8:	b	11ba4 <fopen64@plt>
   145bc:	cmp	r0, #0
   145c0:	beq	145c8 <__assert_fail@plt+0x2970>
   145c4:	b	11acc <fclose@plt>
   145c8:	bx	lr
   145cc:	str	r4, [sp, #-8]!
   145d0:	mov	r4, r0
   145d4:	ldr	r0, [r0, #8]
   145d8:	str	lr, [sp, #4]
   145dc:	bl	17d88 <argp_parse@@Base+0x1038>
   145e0:	ldr	r0, [r4, #12]
   145e4:	bl	17d88 <argp_parse@@Base+0x1038>
   145e8:	ldr	r0, [r4, #20]
   145ec:	bl	17d88 <argp_parse@@Base+0x1038>
   145f0:	ldr	r0, [r4, #36]	; 0x24
   145f4:	bl	17d88 <argp_parse@@Base+0x1038>
   145f8:	ldr	r0, [r4, #40]	; 0x28
   145fc:	bl	17d88 <argp_parse@@Base+0x1038>
   14600:	ldr	r0, [r4, #48]	; 0x30
   14604:	bl	17d88 <argp_parse@@Base+0x1038>
   14608:	ldr	lr, [sp, #4]
   1460c:	ldr	r1, [r4, #52]	; 0x34
   14610:	ldr	r0, [r4, #56]	; 0x38
   14614:	ldr	r4, [sp]
   14618:	add	sp, sp, #8
   1461c:	b	16320 <__assert_fail@plt+0x46c8>
   14620:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14624:	movw	r4, #5644	; 0x160c
   14628:	movt	r4, #3
   1462c:	ldr	r3, [r4]
   14630:	strd	r6, [sp, #8]
   14634:	strd	r8, [sp, #16]
   14638:	mov	r8, r0
   1463c:	str	sl, [sp, #24]
   14640:	str	lr, [sp, #28]
   14644:	cmp	r3, #0
   14648:	beq	146bc <__assert_fail@plt+0x2a64>
   1464c:	movw	r6, #5636	; 0x1604
   14650:	movt	r6, #3
   14654:	ldr	r0, [r6]
   14658:	movw	r1, #61012	; 0xee54
   1465c:	movt	r1, #1
   14660:	add	r0, r3, r0
   14664:	bl	1179c <strcspn@plt>
   14668:	mov	r7, r0
   1466c:	add	r0, r0, #1
   14670:	bl	18b40 <argp_parse@@Base+0x1df0>
   14674:	cmp	r0, #0
   14678:	mov	r9, r0
   1467c:	str	r0, [r8, #8]
   14680:	beq	146e8 <__assert_fail@plt+0x2a90>
   14684:	ldr	r5, [r6]
   14688:	mov	r2, r7
   1468c:	ldr	sl, [r4]
   14690:	add	r1, sl, r5
   14694:	bl	1182c <memcpy@plt>
   14698:	add	r3, r5, r7
   1469c:	mov	r2, #0
   146a0:	str	r3, [r6]
   146a4:	strb	r2, [r9, r7]
   146a8:	ldrb	r5, [sl, r3]
   146ac:	cmp	r5, r2
   146b0:	beq	146d8 <__assert_fail@plt+0x2a80>
   146b4:	add	r3, r3, #1
   146b8:	str	r3, [r6]
   146bc:	mov	r0, r8
   146c0:	ldrd	r4, [sp]
   146c4:	ldrd	r6, [sp, #8]
   146c8:	ldrd	r8, [sp, #16]
   146cc:	ldr	sl, [sp, #24]
   146d0:	add	sp, sp, #28
   146d4:	pop	{pc}		; (ldr pc, [sp], #4)
   146d8:	mov	r0, sl
   146dc:	bl	17d88 <argp_parse@@Base+0x1038>
   146e0:	str	r5, [r4]
   146e4:	b	146bc <__assert_fail@plt+0x2a64>
   146e8:	mov	r0, #3
   146ec:	movw	r1, #61016	; 0xee58
   146f0:	movt	r1, #1
   146f4:	bl	11b44 <syslog@plt>
   146f8:	mvn	r0, #0
   146fc:	bl	119f4 <exit@plt>
   14700:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14704:	mov	r3, #0
   14708:	strd	r6, [sp, #8]
   1470c:	strd	r8, [sp, #16]
   14710:	movw	r8, #5644	; 0x160c
   14714:	movt	r8, #3
   14718:	ldr	r7, [r8]
   1471c:	strd	sl, [sp, #24]
   14720:	str	lr, [sp, #32]
   14724:	sub	sp, sp, #36	; 0x24
   14728:	str	r1, [sp, #8]
   1472c:	cmp	r7, r3
   14730:	str	r3, [sp, #20]
   14734:	str	r3, [sp, #24]
   14738:	beq	14768 <__assert_fail@plt+0x2b10>
   1473c:	ldr	r0, [pc, #2176]	; 14fc4 <__assert_fail@plt+0x336c>
   14740:	bl	14620 <__assert_fail@plt+0x29c8>
   14744:	mov	r7, r0
   14748:	mov	r0, r7
   1474c:	add	sp, sp, #36	; 0x24
   14750:	ldrd	r4, [sp]
   14754:	ldrd	r6, [sp, #8]
   14758:	ldrd	r8, [sp, #16]
   1475c:	ldrd	sl, [sp, #24]
   14760:	add	sp, sp, #32
   14764:	pop	{pc}		; (ldr pc, [sp], #4)
   14768:	mov	r6, r0
   1476c:	mov	r5, r2
   14770:	ldr	r0, [pc, #2124]	; 14fc4 <__assert_fail@plt+0x336c>
   14774:	mov	r2, #224	; 0xe0
   14778:	mov	r1, r7
   1477c:	movw	r4, #5060	; 0x13c4
   14780:	movt	r4, #3
   14784:	bl	11a84 <memset@plt>
   14788:	mov	r9, r7
   1478c:	mov	r0, r7
   14790:	mov	r1, r9
   14794:	ldr	r9, [pc, #2092]	; 14fc8 <__assert_fail@plt+0x3370>
   14798:	bl	16320 <__assert_fail@plt+0x46c8>
   1479c:	ldr	r0, [r4, #16]
   147a0:	bl	17d88 <argp_parse@@Base+0x1038>
   147a4:	ldr	r0, [r4, #20]
   147a8:	bl	17d88 <argp_parse@@Base+0x1038>
   147ac:	ldr	r0, [r4, #28]
   147b0:	bl	17d88 <argp_parse@@Base+0x1038>
   147b4:	ldr	r0, [r4, #44]	; 0x2c
   147b8:	bl	17d88 <argp_parse@@Base+0x1038>
   147bc:	ldr	r0, [r4, #48]	; 0x30
   147c0:	bl	17d88 <argp_parse@@Base+0x1038>
   147c4:	ldr	r0, [r4, #56]	; 0x38
   147c8:	bl	17d88 <argp_parse@@Base+0x1038>
   147cc:	ldr	r1, [r4, #60]	; 0x3c
   147d0:	ldr	r0, [r4, #64]	; 0x40
   147d4:	bl	16320 <__assert_fail@plt+0x46c8>
   147d8:	mov	r2, #224	; 0xe0
   147dc:	mov	r1, #0
   147e0:	sub	r0, r9, #224	; 0xe0
   147e4:	bl	11a84 <memset@plt>
   147e8:	mov	r3, r6
   147ec:	mov	r2, #10
   147f0:	ldr	r0, [pc, #2004]	; 14fcc <__assert_fail@plt+0x3374>
   147f4:	mov	r1, r9
   147f8:	bl	11760 <__getdelim@plt>
   147fc:	cmp	r0, #0
   14800:	blt	14748 <__assert_fail@plt+0x2af0>
   14804:	ldr	r2, [r4, #236]	; 0xec
   14808:	beq	14834 <__assert_fail@plt+0x2bdc>
   1480c:	sub	r0, r0, #1
   14810:	ldrb	r3, [r2, r0]
   14814:	cmp	r3, #10
   14818:	bne	14828 <__assert_fail@plt+0x2bd0>
   1481c:	mov	r3, #0
   14820:	strb	r3, [r2, r0]
   14824:	ldr	r2, [r4, #236]	; 0xec
   14828:	ldr	r3, [r5]
   1482c:	add	r3, r3, #1
   14830:	str	r3, [r5]
   14834:	ldrb	r3, [r2]
   14838:	cmp	r3, #0
   1483c:	cmpne	r3, #35	; 0x23
   14840:	beq	147e8 <__assert_fail@plt+0x2b90>
   14844:	mov	r0, r2
   14848:	movw	r1, #60368	; 0xebd0
   1484c:	movt	r1, #1
   14850:	add	r3, sp, #24
   14854:	add	r2, sp, #20
   14858:	bl	1612c <__assert_fail@plt+0x44d4>
   1485c:	subs	sl, r0, #0
   14860:	bne	14d90 <__assert_fail@plt+0x3138>
   14864:	ldr	r3, [sp, #20]
   14868:	cmp	r3, #5
   1486c:	ble	14cd8 <__assert_fail@plt+0x3080>
   14870:	ldr	r3, [sp, #8]
   14874:	mov	r1, #58	; 0x3a
   14878:	ldr	r9, [sp, #24]
   1487c:	str	r3, [r4, #8]
   14880:	ldr	r3, [r5]
   14884:	ldr	fp, [r9]
   14888:	str	r3, [r4, #12]
   1488c:	mov	r0, fp
   14890:	bl	11b14 <strrchr@plt>
   14894:	subs	r3, r0, #0
   14898:	beq	14de4 <__assert_fail@plt+0x318c>
   1489c:	mov	r9, r3
   148a0:	movw	r1, #60416	; 0xec00
   148a4:	movt	r1, #1
   148a8:	mov	r0, fp
   148ac:	strb	sl, [r9], #1
   148b0:	bl	11778 <strcmp@plt>
   148b4:	cmp	r0, #0
   148b8:	bne	14e24 <__assert_fail@plt+0x31cc>
   148bc:	mov	r2, #7
   148c0:	ldr	r1, [pc, #1800]	; 14fd0 <__assert_fail@plt+0x3378>
   148c4:	mov	r0, r9
   148c8:	bl	11c04 <strncmp@plt>
   148cc:	cmp	r0, #0
   148d0:	bne	14dc4 <__assert_fail@plt+0x316c>
   148d4:	ldrb	r3, [r9, #7]
   148d8:	cmp	r3, #43	; 0x2b
   148dc:	moveq	r3, #2
   148e0:	addeq	r0, r9, #8
   148e4:	streq	r3, [r4, #72]	; 0x48
   148e8:	beq	14904 <__assert_fail@plt+0x2cac>
   148ec:	adds	r0, r9, #7
   148f0:	movw	r3, #60368	; 0xebd0
   148f4:	movt	r3, #1
   148f8:	mov	r2, #1
   148fc:	moveq	r0, r3
   14900:	str	r2, [r4, #72]	; 0x48
   14904:	bl	11898 <strdup@plt>
   14908:	cmp	r0, #0
   1490c:	beq	14e6c <__assert_fail@plt+0x3214>
   14910:	str	r0, [r4, #20]
   14914:	ldr	r9, [sp, #24]
   14918:	movw	r1, #61056	; 0xee80
   1491c:	movt	r1, #1
   14920:	ldr	sl, [r9, #4]
   14924:	mov	r0, sl
   14928:	bl	11778 <strcmp@plt>
   1492c:	cmp	r0, #0
   14930:	moveq	r3, #1
   14934:	streq	r3, [r4, #24]
   14938:	beq	149bc <__assert_fail@plt+0x2d64>
   1493c:	movw	r1, #61064	; 0xee88
   14940:	movt	r1, #1
   14944:	mov	r0, sl
   14948:	bl	11778 <strcmp@plt>
   1494c:	cmp	r0, #0
   14950:	moveq	r3, #2
   14954:	streq	r3, [r4, #24]
   14958:	beq	149bc <__assert_fail@plt+0x2d64>
   1495c:	movw	r1, #61072	; 0xee90
   14960:	movt	r1, #1
   14964:	mov	r0, sl
   14968:	bl	11778 <strcmp@plt>
   1496c:	cmp	r0, #0
   14970:	moveq	r3, #4
   14974:	streq	r3, [r4, #24]
   14978:	beq	149bc <__assert_fail@plt+0x2d64>
   1497c:	movw	r1, #61076	; 0xee94
   14980:	movt	r1, #1
   14984:	mov	r0, sl
   14988:	bl	11778 <strcmp@plt>
   1498c:	cmp	r0, #0
   14990:	moveq	r3, #5
   14994:	streq	r3, [r4, #24]
   14998:	beq	149bc <__assert_fail@plt+0x2d64>
   1499c:	mov	r0, sl
   149a0:	movw	r1, #61088	; 0xeea0
   149a4:	movt	r1, #1
   149a8:	bl	11778 <strcmp@plt>
   149ac:	cmp	r0, #0
   149b0:	bne	14f7c <__assert_fail@plt+0x3324>
   149b4:	mov	r3, #3
   149b8:	str	r3, [r4, #24]
   149bc:	ldr	r0, [r9, #8]
   149c0:	movw	r3, #60368	; 0xebd0
   149c4:	movt	r3, #1
   149c8:	cmp	r0, #0
   149cc:	moveq	r0, r3
   149d0:	bl	11898 <strdup@plt>
   149d4:	subs	sl, r0, #0
   149d8:	beq	14e6c <__assert_fail@plt+0x3214>
   149dc:	mov	r2, #2
   149e0:	mov	r3, #1
   149e4:	str	sl, [r4, #28]
   149e8:	movw	r1, #60600	; 0xecb8
   149ec:	movt	r1, #1
   149f0:	strh	r2, [r4, #76]	; 0x4c
   149f4:	mov	r2, #3
   149f8:	strb	r3, [r4, #78]	; 0x4e
   149fc:	bl	11c04 <strncmp@plt>
   14a00:	cmp	r0, #0
   14a04:	beq	14d4c <__assert_fail@plt+0x30f4>
   14a08:	movw	r1, #60864	; 0xedc0
   14a0c:	movt	r1, #1
   14a10:	mov	r2, #3
   14a14:	mov	r0, sl
   14a18:	bl	11c04 <strncmp@plt>
   14a1c:	cmp	r0, #0
   14a20:	beq	14d4c <__assert_fail@plt+0x30f4>
   14a24:	ldr	sl, [r9, #12]
   14a28:	mov	r1, #46	; 0x2e
   14a2c:	mov	r0, sl
   14a30:	bl	11a24 <strchr@plt>
   14a34:	subs	r9, r0, #0
   14a38:	beq	14a4c <__assert_fail@plt+0x2df4>
   14a3c:	mov	r3, #0
   14a40:	strb	r3, [r9], #1
   14a44:	ldr	r3, [sp, #24]
   14a48:	ldr	sl, [r3, #12]
   14a4c:	movw	r1, #61116	; 0xeebc
   14a50:	movt	r1, #1
   14a54:	mov	r0, sl
   14a58:	bl	11778 <strcmp@plt>
   14a5c:	cmp	r0, #0
   14a60:	moveq	r3, #1
   14a64:	streq	r3, [r4, #32]
   14a68:	beq	14a88 <__assert_fail@plt+0x2e30>
   14a6c:	mov	r0, sl
   14a70:	movw	r1, #61124	; 0xeec4
   14a74:	movt	r1, #1
   14a78:	bl	11778 <strcmp@plt>
   14a7c:	cmp	r0, #0
   14a80:	streq	r0, [r4, #32]
   14a84:	bne	14ea4 <__assert_fail@plt+0x324c>
   14a88:	cmp	r9, #0
   14a8c:	beq	14ab4 <__assert_fail@plt+0x2e5c>
   14a90:	mov	r2, #10
   14a94:	add	r1, sp, #28
   14a98:	mov	r0, r9
   14a9c:	bl	11a00 <strtoul@plt>
   14aa0:	ldr	r3, [sp, #28]
   14aa4:	str	r0, [r4, #36]	; 0x24
   14aa8:	ldrb	r3, [r3]
   14aac:	cmp	r3, #0
   14ab0:	bne	14e84 <__assert_fail@plt+0x322c>
   14ab4:	ldr	r3, [r4, #72]	; 0x48
   14ab8:	sub	r3, r3, #1
   14abc:	cmp	r3, #1
   14ac0:	bhi	14af4 <__assert_fail@plt+0x2e9c>
   14ac4:	mov	r3, #0
   14ac8:	movw	r1, #60600	; 0xecb8
   14acc:	movt	r1, #1
   14ad0:	mov	r2, #3
   14ad4:	ldr	r0, [r4, #28]
   14ad8:	str	r3, [r4, #32]
   14adc:	bl	11c04 <strncmp@plt>
   14ae0:	cmp	r0, #0
   14ae4:	bne	14f34 <__assert_fail@plt+0x32dc>
   14ae8:	ldr	r3, [r4, #24]
   14aec:	cmp	r3, #1
   14af0:	bne	14d9c <__assert_fail@plt+0x3144>
   14af4:	ldr	r9, [sp, #24]
   14af8:	movw	sl, #60368	; 0xebd0
   14afc:	movt	sl, #1
   14b00:	ldr	r0, [r9, #16]
   14b04:	cmp	r0, #0
   14b08:	moveq	r0, sl
   14b0c:	bl	11898 <strdup@plt>
   14b10:	subs	fp, r0, #0
   14b14:	beq	14e6c <__assert_fail@plt+0x3214>
   14b18:	mov	r1, #58	; 0x3a
   14b1c:	str	fp, [r4, #44]	; 0x2c
   14b20:	bl	11a24 <strchr@plt>
   14b24:	cmp	r0, #0
   14b28:	beq	14e48 <__assert_fail@plt+0x31f0>
   14b2c:	mov	r2, #0
   14b30:	movw	r3, #60368	; 0xebd0
   14b34:	movt	r3, #1
   14b38:	strb	r2, [r0], #1
   14b3c:	cmp	r0, #0
   14b40:	moveq	r0, r3
   14b44:	bl	11898 <strdup@plt>
   14b48:	cmp	r0, #0
   14b4c:	beq	14e6c <__assert_fail@plt+0x3214>
   14b50:	str	r0, [r4, #48]	; 0x30
   14b54:	movw	r3, #60368	; 0xebd0
   14b58:	movt	r3, #1
   14b5c:	ldr	r0, [r9, #20]
   14b60:	cmp	r0, #0
   14b64:	moveq	r0, r3
   14b68:	bl	11898 <strdup@plt>
   14b6c:	subs	r3, r0, #0
   14b70:	beq	14e6c <__assert_fail@plt+0x3214>
   14b74:	movw	r1, #61276	; 0xef5c
   14b78:	movt	r1, #1
   14b7c:	str	r3, [r4, #56]	; 0x38
   14b80:	bl	11778 <strcmp@plt>
   14b84:	cmp	r0, #0
   14b88:	bne	14f70 <__assert_fail@plt+0x3318>
   14b8c:	movw	sl, #4556	; 0x11cc
   14b90:	movt	sl, #3
   14b94:	ldr	r9, [r4, #20]
   14b98:	ldr	r0, [sl, #12]
   14b9c:	cmp	r0, #0
   14ba0:	beq	14f44 <__assert_fail@plt+0x32ec>
   14ba4:	add	sl, sl, #12
   14ba8:	ldr	fp, [r4, #24]
   14bac:	b	14bbc <__assert_fail@plt+0x2f64>
   14bb0:	ldr	r0, [sl, #16]!
   14bb4:	cmp	r0, #0
   14bb8:	beq	14f44 <__assert_fail@plt+0x32ec>
   14bbc:	ldr	r3, [sl, #4]
   14bc0:	cmp	r3, fp
   14bc4:	bne	14bb0 <__assert_fail@plt+0x2f58>
   14bc8:	mov	r1, r9
   14bcc:	bl	11778 <strcmp@plt>
   14bd0:	cmp	r0, #0
   14bd4:	bne	14bb0 <__assert_fail@plt+0x2f58>
   14bd8:	ldrsh	r3, [sl, #10]
   14bdc:	str	r3, [r4, #32]
   14be0:	str	sl, [r4, #52]	; 0x34
   14be4:	ldr	r0, [sp, #20]
   14be8:	mov	r1, #4
   14bec:	sub	r3, r0, #5
   14bf0:	sub	r0, r0, #4
   14bf4:	str	r3, [r4, #64]	; 0x40
   14bf8:	bl	18acc <argp_parse@@Base+0x1d7c>
   14bfc:	cmp	r0, #0
   14c00:	mov	r6, r0
   14c04:	str	r0, [r4, #60]	; 0x3c
   14c08:	beq	14fa4 <__assert_fail@plt+0x334c>
   14c0c:	ldr	ip, [r4, #64]	; 0x40
   14c10:	ldr	r5, [sp, #24]
   14c14:	cmp	ip, #0
   14c18:	beq	14cc0 <__assert_fail@plt+0x3068>
   14c1c:	add	r3, r5, #24
   14c20:	add	r2, r5, #32
   14c24:	add	r0, r0, #8
   14c28:	mov	r1, r3
   14c2c:	cmp	r1, r0
   14c30:	cmpcc	r6, r2
   14c34:	orr	lr, r6, r3
   14c38:	sub	r2, ip, #1
   14c3c:	mov	r3, r0
   14c40:	movcs	r3, #1
   14c44:	movcc	r3, #0
   14c48:	cmp	r2, #3
   14c4c:	movls	r3, #0
   14c50:	andhi	r3, r3, #1
   14c54:	tst	lr, #7
   14c58:	movne	r3, #0
   14c5c:	cmp	r3, #0
   14c60:	beq	14ec8 <__assert_fail@plt+0x3270>
   14c64:	lsr	lr, ip, #1
   14c68:	add	r2, r5, #16
   14c6c:	mov	r3, r6
   14c70:	mov	r8, #0
   14c74:	mov	r9, #0
   14c78:	add	lr, r6, lr, lsl #3
   14c7c:	ldrd	r0, [r2, #8]!
   14c80:	strd	r0, [r3], #8
   14c84:	cmp	r3, lr
   14c88:	strd	r8, [r2]
   14c8c:	bne	14c7c <__assert_fail@plt+0x3024>
   14c90:	bic	r3, ip, #1
   14c94:	cmp	r3, ip
   14c98:	lsleq	lr, ip, #2
   14c9c:	beq	14cbc <__assert_fail@plt+0x3064>
   14ca0:	add	r3, r3, #6
   14ca4:	lsl	lr, ip, #2
   14ca8:	mov	r2, #0
   14cac:	ldr	r0, [r5, r3, lsl #2]
   14cb0:	add	r1, r6, r3, lsl #2
   14cb4:	str	r0, [r1, #-24]	; 0xffffffe8
   14cb8:	str	r2, [r5, r3, lsl #2]
   14cbc:	add	r6, r6, lr
   14cc0:	mov	r3, #0
   14cc4:	mov	r1, r5
   14cc8:	ldr	r0, [sp, #20]
   14ccc:	str	r3, [r6]
   14cd0:	bl	16320 <__assert_fail@plt+0x46c8>
   14cd4:	b	1473c <__assert_fail@plt+0x2ae4>
   14cd8:	cmp	r3, #1
   14cdc:	bne	14d6c <__assert_fail@plt+0x3114>
   14ce0:	ldr	r3, [sp, #24]
   14ce4:	ldr	r9, [r3]
   14ce8:	mov	r0, r9
   14cec:	bl	11a0c <strlen@plt>
   14cf0:	sub	r0, r0, #1
   14cf4:	ldrb	r3, [r9, r0]
   14cf8:	cmp	r3, #58	; 0x3a
   14cfc:	bne	14d6c <__assert_fail@plt+0x3114>
   14d00:	movw	fp, #5656	; 0x1618
   14d04:	movt	fp, #3
   14d08:	strb	sl, [r9, r0]
   14d0c:	ldr	r0, [fp]
   14d10:	bl	17d88 <argp_parse@@Base+0x1038>
   14d14:	ldr	r9, [sp, #24]
   14d18:	movw	r1, #60416	; 0xec00
   14d1c:	movt	r1, #1
   14d20:	ldr	sl, [r9]
   14d24:	mov	r0, sl
   14d28:	bl	11778 <strcmp@plt>
   14d2c:	cmp	r0, #0
   14d30:	beq	14d88 <__assert_fail@plt+0x3130>
   14d34:	mov	r0, sl
   14d38:	bl	11898 <strdup@plt>
   14d3c:	cmp	r0, #0
   14d40:	beq	14e6c <__assert_fail@plt+0x3214>
   14d44:	str	r0, [fp]
   14d48:	b	14d88 <__assert_fail@plt+0x3130>
   14d4c:	ldrb	r3, [sl, #3]
   14d50:	cmp	r3, #54	; 0x36
   14d54:	bne	14a24 <__assert_fail@plt+0x2dcc>
   14d58:	mov	r3, #10
   14d5c:	mov	r2, #0
   14d60:	strh	r3, [r4, #76]	; 0x4c
   14d64:	strb	r2, [r4, #78]	; 0x4e
   14d68:	b	14a24 <__assert_fail@plt+0x2dcc>
   14d6c:	movw	r1, #61028	; 0xee64
   14d70:	movt	r1, #1
   14d74:	ldr	r3, [r5]
   14d78:	mov	r0, #3
   14d7c:	ldr	r2, [sp, #8]
   14d80:	bl	11b44 <syslog@plt>
   14d84:	ldr	r9, [sp, #24]
   14d88:	ldr	r0, [sp, #20]
   14d8c:	b	14790 <__assert_fail@plt+0x2b38>
   14d90:	ldr	r0, [sp, #20]
   14d94:	ldr	r9, [sp, #24]
   14d98:	b	14790 <__assert_fail@plt+0x2b38>
   14d9c:	ldr	ip, [r4, #20]
   14da0:	movw	r1, #61228	; 0xef2c
   14da4:	movt	r1, #1
   14da8:	mov	r0, #3
   14dac:	ldr	r3, [r5]
   14db0:	str	ip, [sp]
   14db4:	ldr	r2, [sp, #8]
   14db8:	bl	11b44 <syslog@plt>
   14dbc:	ldr	r9, [sp, #24]
   14dc0:	b	14d88 <__assert_fail@plt+0x3130>
   14dc4:	mov	r0, r9
   14dc8:	bl	11898 <strdup@plt>
   14dcc:	cmp	r0, #0
   14dd0:	beq	14e6c <__assert_fail@plt+0x3214>
   14dd4:	mov	r3, #0
   14dd8:	str	r0, [r4, #20]
   14ddc:	str	r3, [r4, #72]	; 0x48
   14de0:	b	14914 <__assert_fail@plt+0x2cbc>
   14de4:	movw	r2, #5656	; 0x1618
   14de8:	movt	r2, #3
   14dec:	str	r3, [sp, #12]
   14df0:	ldr	r0, [r2]
   14df4:	cmp	r0, #0
   14df8:	beq	14ec0 <__assert_fail@plt+0x3268>
   14dfc:	bl	11898 <strdup@plt>
   14e00:	cmp	r0, #0
   14e04:	beq	14e6c <__assert_fail@plt+0x3214>
   14e08:	ldr	r3, [sp, #12]
   14e0c:	movw	r2, #5636	; 0x1604
   14e10:	movt	r2, #3
   14e14:	str	r0, [r8]
   14e18:	ldr	r9, [r9]
   14e1c:	str	r3, [r2]
   14e20:	b	148bc <__assert_fail@plt+0x2c64>
   14e24:	mov	r0, fp
   14e28:	bl	11898 <strdup@plt>
   14e2c:	cmp	r0, #0
   14e30:	beq	14e6c <__assert_fail@plt+0x3214>
   14e34:	movw	r3, #5636	; 0x1604
   14e38:	movt	r3, #3
   14e3c:	str	r0, [r8]
   14e40:	str	sl, [r3]
   14e44:	b	148bc <__assert_fail@plt+0x2c64>
   14e48:	mov	r0, fp
   14e4c:	mov	r1, #46	; 0x2e
   14e50:	bl	11a24 <strchr@plt>
   14e54:	cmp	r0, #0
   14e58:	bne	14b2c <__assert_fail@plt+0x2ed4>
   14e5c:	mov	r0, sl
   14e60:	bl	11898 <strdup@plt>
   14e64:	cmp	r0, #0
   14e68:	bne	14b50 <__assert_fail@plt+0x2ef8>
   14e6c:	mov	r0, #3
   14e70:	movw	r1, #60404	; 0xebf4
   14e74:	movt	r1, #1
   14e78:	bl	11b44 <syslog@plt>
   14e7c:	mvn	r0, #0
   14e80:	bl	119f4 <exit@plt>
   14e84:	movw	r1, #61156	; 0xeee4
   14e88:	movt	r1, #1
   14e8c:	str	r9, [sp]
   14e90:	mov	r0, #4
   14e94:	ldr	r3, [r5]
   14e98:	ldr	r2, [sp, #8]
   14e9c:	bl	11b44 <syslog@plt>
   14ea0:	b	14ab4 <__assert_fail@plt+0x2e5c>
   14ea4:	movw	r1, #61132	; 0xeecc
   14ea8:	movt	r1, #1
   14eac:	ldr	r3, [r5]
   14eb0:	mov	r0, #4
   14eb4:	ldr	r2, [sp, #8]
   14eb8:	bl	11b44 <syslog@plt>
   14ebc:	b	14a88 <__assert_fail@plt+0x2e30>
   14ec0:	mov	r9, fp
   14ec4:	b	148bc <__assert_fail@plt+0x2c64>
   14ec8:	lsl	lr, ip, #2
   14ecc:	add	r1, r5, #20
   14ed0:	mov	r2, r6
   14ed4:	add	r7, r6, lr
   14ed8:	ldr	r0, [r1, #4]!
   14edc:	str	r0, [r2], #4
   14ee0:	cmp	r2, r7
   14ee4:	str	r3, [r1]
   14ee8:	bne	14ed8 <__assert_fail@plt+0x3280>
   14eec:	cmp	ip, #1
   14ef0:	bne	14cbc <__assert_fail@plt+0x3064>
   14ef4:	ldr	r4, [r4, #56]	; 0x38
   14ef8:	mov	r1, #47	; 0x2f
   14efc:	mov	r0, r4
   14f00:	bl	11b14 <strrchr@plt>
   14f04:	cmp	r0, #0
   14f08:	beq	14f1c <__assert_fail@plt+0x32c4>
   14f0c:	adds	r4, r0, #1
   14f10:	movw	r3, #60368	; 0xebd0
   14f14:	movt	r3, #1
   14f18:	moveq	r4, r3
   14f1c:	mov	r0, r4
   14f20:	bl	11898 <strdup@plt>
   14f24:	cmp	r0, #0
   14f28:	beq	14e6c <__assert_fail@plt+0x3214>
   14f2c:	str	r0, [r6], #4
   14f30:	b	14cc0 <__assert_fail@plt+0x3068>
   14f34:	movw	r1, #61184	; 0xef00
   14f38:	movt	r1, #1
   14f3c:	ldr	ip, [r4, #20]
   14f40:	b	14da8 <__assert_fail@plt+0x3150>
   14f44:	mov	ip, #0
   14f48:	movw	r1, #61312	; 0xef80
   14f4c:	movt	r1, #1
   14f50:	mov	r0, #3
   14f54:	str	r9, [sp]
   14f58:	ldr	r3, [r5]
   14f5c:	str	ip, [r4, #52]	; 0x34
   14f60:	ldr	r2, [sp, #8]
   14f64:	bl	11b44 <syslog@plt>
   14f68:	ldr	r9, [sp, #24]
   14f6c:	b	14d88 <__assert_fail@plt+0x3130>
   14f70:	mov	r3, #0
   14f74:	str	r3, [r4, #52]	; 0x34
   14f78:	b	14be4 <__assert_fail@plt+0x2f8c>
   14f7c:	movw	r1, #61092	; 0xeea4
   14f80:	movt	r1, #1
   14f84:	ldr	r3, [r5]
   14f88:	mov	r0, #4
   14f8c:	ldr	r2, [sp, #8]
   14f90:	bl	11b44 <syslog@plt>
   14f94:	mvn	r3, #0
   14f98:	ldr	r9, [sp, #24]
   14f9c:	str	r3, [r4, #24]
   14fa0:	b	149bc <__assert_fail@plt+0x2d64>
   14fa4:	mov	r0, #3
   14fa8:	movw	r1, #61288	; 0xef68
   14fac:	movt	r1, #1
   14fb0:	ldr	r3, [r5]
   14fb4:	ldr	r2, [sp, #8]
   14fb8:	bl	11b44 <syslog@plt>
   14fbc:	mvn	r0, #0
   14fc0:	bl	119f4 <exit@plt>
   14fc4:	andeq	r1, r3, ip, asr #7
   14fc8:	andeq	r1, r3, ip, lsr #9
   14fcc:			; <UNDEFINED> instruction: 0x000314b0
   14fd0:	muleq	r3, r8, r2
   14fd4:	mov	r3, #0
   14fd8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14fdc:	movw	r1, #65148	; 0xfe7c
   14fe0:	movt	r1, #1
   14fe4:	strd	r6, [sp, #8]
   14fe8:	mov	r6, r0
   14fec:	strd	r8, [sp, #16]
   14ff0:	strd	sl, [sp, #24]
   14ff4:	str	lr, [sp, #32]
   14ff8:	sub	sp, sp, #324	; 0x144
   14ffc:	str	r3, [sp, #60]	; 0x3c
   15000:	bl	11ba4 <fopen64@plt>
   15004:	subs	r5, r0, #0
   15008:	beq	15384 <__assert_fail@plt+0x372c>
   1500c:	movw	r7, #5644	; 0x160c
   15010:	movt	r7, #3
   15014:	movw	r9, #61400	; 0xefd8
   15018:	movt	r9, #1
   1501c:	movw	r8, #61356	; 0xefac
   15020:	movt	r8, #1
   15024:	add	r2, sp, #60	; 0x3c
   15028:	mov	r1, r6
   1502c:	mov	r0, r5
   15030:	bl	14700 <__assert_fail@plt+0x2aa8>
   15034:	subs	r4, r0, #0
   15038:	beq	15124 <__assert_fail@plt+0x34cc>
   1503c:	ldr	r0, [r4, #36]	; 0x24
   15040:	bl	1176c <getpwnam@plt>
   15044:	cmp	r0, #0
   15048:	beq	15348 <__assert_fail@plt+0x36f0>
   1504c:	ldr	r0, [r4, #40]	; 0x28
   15050:	cmp	r0, #0
   15054:	beq	15064 <__assert_fail@plt+0x340c>
   15058:	ldrb	r3, [r0]
   1505c:	cmp	r3, #0
   15060:	bne	150f8 <__assert_fail@plt+0x34a0>
   15064:	ldr	r3, [r4, #64]	; 0x40
   15068:	sub	r3, r3, #1
   1506c:	cmp	r3, #1
   15070:	bls	15094 <__assert_fail@plt+0x343c>
   15074:	mov	r0, r4
   15078:	bl	1424c <__assert_fail@plt+0x25f4>
   1507c:	ldr	r3, [r7]
   15080:	ldr	r0, [r4, #8]
   15084:	cmp	r3, #0
   15088:	beq	150bc <__assert_fail@plt+0x3464>
   1508c:	bl	17d88 <argp_parse@@Base+0x1038>
   15090:	b	15024 <__assert_fail@plt+0x33cc>
   15094:	mvn	r3, #0
   15098:	mov	r2, #1
   1509c:	mov	r0, r4
   150a0:	strh	r2, [r4, #32]
   150a4:	str	r3, [r4, #60]	; 0x3c
   150a8:	bl	13b08 <__assert_fail@plt+0x1eb0>
   150ac:	ldr	r3, [r7]
   150b0:	ldr	r0, [r4, #8]
   150b4:	cmp	r3, #0
   150b8:	bne	1508c <__assert_fail@plt+0x3434>
   150bc:	bl	17d88 <argp_parse@@Base+0x1038>
   150c0:	ldr	r0, [r4, #12]
   150c4:	bl	17d88 <argp_parse@@Base+0x1038>
   150c8:	ldr	r0, [r4, #20]
   150cc:	bl	17d88 <argp_parse@@Base+0x1038>
   150d0:	ldr	r0, [r4, #36]	; 0x24
   150d4:	bl	17d88 <argp_parse@@Base+0x1038>
   150d8:	ldr	r0, [r4, #40]	; 0x28
   150dc:	bl	17d88 <argp_parse@@Base+0x1038>
   150e0:	ldr	r0, [r4, #48]	; 0x30
   150e4:	bl	17d88 <argp_parse@@Base+0x1038>
   150e8:	ldr	r1, [r4, #52]	; 0x34
   150ec:	ldr	r0, [r4, #56]	; 0x38
   150f0:	bl	16320 <__assert_fail@plt+0x46c8>
   150f4:	b	15024 <__assert_fail@plt+0x33cc>
   150f8:	bl	11c40 <getgrnam@plt>
   150fc:	cmp	r0, #0
   15100:	bne	15064 <__assert_fail@plt+0x340c>
   15104:	mov	r1, r9
   15108:	mov	r0, #3
   1510c:	ldr	r2, [r4, #12]
   15110:	ldr	ip, [r4, #40]	; 0x28
   15114:	ldr	r3, [r4, #20]
   15118:	str	ip, [sp]
   1511c:	bl	11b44 <syslog@plt>
   15120:	b	15024 <__assert_fail@plt+0x33cc>
   15124:	mov	r0, r5
   15128:	movw	r5, #5652	; 0x1614
   1512c:	movt	r5, #3
   15130:	bl	11acc <fclose@plt>
   15134:	add	r0, sp, #192	; 0xc0
   15138:	bl	11af0 <sigemptyset@plt>
   1513c:	mov	r1, #17
   15140:	add	r0, sp, #192	; 0xc0
   15144:	bl	11994 <sigaddset@plt>
   15148:	mov	r1, #1
   1514c:	add	r0, sp, #192	; 0xc0
   15150:	bl	11994 <sigaddset@plt>
   15154:	mov	r1, #14
   15158:	add	r0, sp, #192	; 0xc0
   1515c:	bl	11994 <sigaddset@plt>
   15160:	mov	r0, r4
   15164:	add	r1, sp, #192	; 0xc0
   15168:	add	r2, sp, #64	; 0x40
   1516c:	bl	117d8 <sigprocmask@plt>
   15170:	ldr	r4, [r5]
   15174:	cmp	r4, #0
   15178:	beq	1531c <__assert_fail@plt+0x36c4>
   1517c:	movw	sl, #5048	; 0x13b8
   15180:	movt	sl, #3
   15184:	movw	r9, #61444	; 0xf004
   15188:	movt	r9, #1
   1518c:	movw	fp, #5060	; 0x13c4
   15190:	movt	fp, #3
   15194:	str	sl, [sp, #48]	; 0x30
   15198:	str	r9, [sp, #52]	; 0x34
   1519c:	b	151f0 <__assert_fail@plt+0x3598>
   151a0:	ldr	r0, [r4, #8]
   151a4:	bl	17d88 <argp_parse@@Base+0x1038>
   151a8:	ldr	r0, [r4, #12]
   151ac:	bl	17d88 <argp_parse@@Base+0x1038>
   151b0:	ldr	r0, [r4, #20]
   151b4:	bl	17d88 <argp_parse@@Base+0x1038>
   151b8:	ldr	r0, [r4, #36]	; 0x24
   151bc:	bl	17d88 <argp_parse@@Base+0x1038>
   151c0:	ldr	r0, [r4, #40]	; 0x28
   151c4:	bl	17d88 <argp_parse@@Base+0x1038>
   151c8:	ldr	r0, [r4, #48]	; 0x30
   151cc:	bl	17d88 <argp_parse@@Base+0x1038>
   151d0:	ldr	r1, [r4, #52]	; 0x34
   151d4:	ldr	r0, [r4, #56]	; 0x38
   151d8:	bl	16320 <__assert_fail@plt+0x46c8>
   151dc:	mov	r0, r4
   151e0:	bl	17d88 <argp_parse@@Base+0x1038>
   151e4:	ldr	r4, [r5]
   151e8:	cmp	r4, #0
   151ec:	beq	1531c <__assert_fail@plt+0x36c4>
   151f0:	ldrsh	r6, [r4, #32]
   151f4:	ldr	r3, [r4, #220]	; 0xdc
   151f8:	cmp	r6, #0
   151fc:	addne	r5, r4, #220	; 0xdc
   15200:	movne	r4, r3
   15204:	bne	151e8 <__assert_fail@plt+0x3590>
   15208:	ldr	r0, [r4, #60]	; 0x3c
   1520c:	str	r3, [r5]
   15210:	cmp	r0, #0
   15214:	blt	15268 <__assert_fail@plt+0x3610>
   15218:	asr	lr, r0, #5
   1521c:	movw	r2, #5488	; 0x1570
   15220:	movt	r2, #3
   15224:	movw	r3, #5620	; 0x15f4
   15228:	movt	r3, #3
   1522c:	ldr	ip, [r2, lr, lsl #2]
   15230:	mov	r7, #1
   15234:	and	r8, r0, #31
   15238:	ldr	r1, [r3]
   1523c:	bic	ip, ip, r7, lsl r8
   15240:	sub	r1, r1, #1
   15244:	str	ip, [r2, lr, lsl #2]
   15248:	str	r1, [r3]
   1524c:	bl	11c28 <close@plt>
   15250:	ldr	r3, [r4, #24]
   15254:	mvn	r2, #0
   15258:	str	r2, [r4, #60]	; 0x3c
   1525c:	str	r6, [r4, #208]	; 0xd0
   15260:	cmp	r3, r7
   15264:	strgt	r7, [r4, #24]
   15268:	ldrb	r3, [fp]
   1526c:	cmp	r3, #0
   15270:	beq	151a0 <__assert_fail@plt+0x3548>
   15274:	ldr	r3, [sp, #48]	; 0x30
   15278:	ldr	r2, [r4]
   1527c:	ldr	r1, [r4, #64]	; 0x40
   15280:	ldr	r0, [r3]
   15284:	sub	r3, r1, #1
   15288:	cmp	r3, #1
   1528c:	ldr	r3, [r4, #4]
   15290:	bls	15368 <__assert_fail@plt+0x3710>
   15294:	ldr	ip, [r4, #8]
   15298:	movw	r1, #60416	; 0xec00
   1529c:	movt	r1, #1
   152a0:	cmp	ip, #0
   152a4:	moveq	ip, r1
   152a8:	ldr	sl, [r4, #12]
   152ac:	ldr	r1, [r4, #44]	; 0x2c
   152b0:	ldr	lr, [r4, #36]	; 0x24
   152b4:	ldr	r9, [r4, #20]
   152b8:	cmp	r1, #0
   152bc:	ldr	r8, [r4, #24]
   152c0:	str	lr, [sp, #44]	; 0x2c
   152c4:	movweq	lr, #60432	; 0xec10
   152c8:	ldrne	lr, [r1]
   152cc:	movteq	lr, #1
   152d0:	ldr	r7, [r4, #28]
   152d4:	ldr	r1, [r4, #48]	; 0x30
   152d8:	ldr	r6, [r4, #40]	; 0x28
   152dc:	str	ip, [sp, #4]
   152e0:	ldr	ip, [sp, #44]	; 0x2c
   152e4:	str	sl, [sp, #8]
   152e8:	str	r1, [sp, #36]	; 0x24
   152ec:	ldr	r1, [sp, #52]	; 0x34
   152f0:	str	r6, [sp, #28]
   152f4:	str	lr, [sp, #32]
   152f8:	str	r1, [sp]
   152fc:	movw	r1, #60436	; 0xec14
   15300:	movt	r1, #1
   15304:	str	r9, [sp, #12]
   15308:	str	r8, [sp, #16]
   1530c:	str	r7, [sp, #20]
   15310:	str	ip, [sp, #24]
   15314:	bl	11a3c <fprintf@plt>
   15318:	b	151a0 <__assert_fail@plt+0x3548>
   1531c:	add	r1, sp, #64	; 0x40
   15320:	mov	r2, #0
   15324:	mov	r0, #2
   15328:	bl	117d8 <sigprocmask@plt>
   1532c:	add	sp, sp, #324	; 0x144
   15330:	ldrd	r4, [sp]
   15334:	ldrd	r6, [sp, #8]
   15338:	ldrd	r8, [sp, #16]
   1533c:	ldrd	sl, [sp, #24]
   15340:	add	sp, sp, #32
   15344:	pop	{pc}		; (ldr pc, [sp], #4)
   15348:	mov	r1, r8
   1534c:	mov	r0, #3
   15350:	ldr	r2, [r4, #12]
   15354:	ldr	ip, [r4, #36]	; 0x24
   15358:	ldr	r3, [r4, #20]
   1535c:	str	ip, [sp]
   15360:	bl	11b44 <syslog@plt>
   15364:	b	15024 <__assert_fail@plt+0x33cc>
   15368:	movw	lr, #61456	; 0xf010
   1536c:	movt	lr, #1
   15370:	cmp	r1, #2
   15374:	movw	ip, #60420	; 0xec04
   15378:	movt	ip, #1
   1537c:	movne	ip, lr
   15380:	b	152a8 <__assert_fail@plt+0x3650>
   15384:	mov	r2, r6
   15388:	movw	r1, #61348	; 0xefa4
   1538c:	movt	r1, #1
   15390:	mov	r0, #3
   15394:	bl	11b44 <syslog@plt>
   15398:	b	1532c <__assert_fail@plt+0x36d4>
   1539c:	movw	r3, #5652	; 0x1614
   153a0:	movt	r3, #3
   153a4:	strd	r4, [sp, #-20]!	; 0xffffffec
   153a8:	ldr	r4, [r3]
   153ac:	strd	r6, [sp, #8]
   153b0:	str	lr, [sp, #16]
   153b4:	sub	sp, sp, #228	; 0xe4
   153b8:	cmp	r4, #0
   153bc:	beq	15424 <__assert_fail@plt+0x37cc>
   153c0:	mov	r6, #0
   153c4:	movw	r5, #61456	; 0xf010
   153c8:	movt	r5, #1
   153cc:	mov	r7, r6
   153d0:	b	15400 <__assert_fail@plt+0x37a8>
   153d4:	mov	r1, r5
   153d8:	ldr	r0, [r4, #12]
   153dc:	bl	11778 <strcmp@plt>
   153e0:	cmp	r0, #0
   153e4:	bne	153f4 <__assert_fail@plt+0x379c>
   153e8:	cmp	r7, #0
   153ec:	bne	15424 <__assert_fail@plt+0x37cc>
   153f0:	mov	r6, #1
   153f4:	ldr	r4, [r4, #220]	; 0xdc
   153f8:	cmp	r4, #0
   153fc:	beq	1545c <__assert_fail@plt+0x3804>
   15400:	ldrsh	r3, [r4, #32]
   15404:	cmp	r3, #0
   15408:	beq	153f4 <__assert_fail@plt+0x379c>
   1540c:	ldr	r3, [r4, #64]	; 0x40
   15410:	sub	r3, r3, #1
   15414:	cmp	r3, #1
   15418:	bhi	153d4 <__assert_fail@plt+0x377c>
   1541c:	cmp	r6, #0
   15420:	beq	15438 <__assert_fail@plt+0x37e0>
   15424:	add	sp, sp, #228	; 0xe4
   15428:	ldrd	r4, [sp]
   1542c:	ldrd	r6, [sp, #8]
   15430:	add	sp, sp, #16
   15434:	pop	{pc}		; (ldr pc, [sp], #4)
   15438:	mov	r1, r5
   1543c:	ldr	r0, [r4, #12]
   15440:	bl	11778 <strcmp@plt>
   15444:	cmp	r0, #0
   15448:	beq	15424 <__assert_fail@plt+0x37cc>
   1544c:	ldr	r4, [r4, #220]	; 0xdc
   15450:	mov	r7, #1
   15454:	cmp	r4, #0
   15458:	bne	15400 <__assert_fail@plt+0x37a8>
   1545c:	eor	r6, r6, #1
   15460:	tst	r6, r7
   15464:	beq	15424 <__assert_fail@plt+0x37cc>
   15468:	mov	r1, r4
   1546c:	mov	r2, #220	; 0xdc
   15470:	add	r0, sp, #4
   15474:	bl	11a84 <memset@plt>
   15478:	movw	r3, #61452	; 0xf00c
   1547c:	movt	r3, #1
   15480:	movw	r0, #61456	; 0xf010
   15484:	movt	r0, #1
   15488:	str	r3, [sp]
   1548c:	bl	11898 <strdup@plt>
   15490:	subs	r6, r0, #0
   15494:	beq	15648 <__assert_fail@plt+0x39f0>
   15498:	mov	r3, #1
   1549c:	movw	r0, #61464	; 0xf018
   154a0:	movt	r0, #1
   154a4:	str	r6, [sp, #12]
   154a8:	str	r3, [sp, #16]
   154ac:	strh	r3, [sp, #32]
   154b0:	bl	11898 <strdup@plt>
   154b4:	subs	r3, r0, #0
   154b8:	beq	15648 <__assert_fail@plt+0x39f0>
   154bc:	movw	r0, #60368	; 0xebd0
   154c0:	movt	r0, #1
   154c4:	str	r3, [sp, #36]	; 0x24
   154c8:	bl	11898 <strdup@plt>
   154cc:	cmp	r0, #0
   154d0:	beq	15648 <__assert_fail@plt+0x39f0>
   154d4:	movw	r4, #4556	; 0x11cc
   154d8:	movt	r4, #3
   154dc:	str	r0, [sp, #40]	; 0x28
   154e0:	ldr	r0, [r4, #12]
   154e4:	cmp	r0, #0
   154e8:	beq	155c0 <__assert_fail@plt+0x3968>
   154ec:	add	r4, r4, #12
   154f0:	b	15500 <__assert_fail@plt+0x38a8>
   154f4:	ldr	r0, [r4, #16]!
   154f8:	cmp	r0, #0
   154fc:	beq	155c0 <__assert_fail@plt+0x3968>
   15500:	ldr	r5, [r4, #4]
   15504:	cmp	r5, #1
   15508:	bne	154f4 <__assert_fail@plt+0x389c>
   1550c:	mov	r1, r6
   15510:	bl	11778 <strcmp@plt>
   15514:	cmp	r0, #0
   15518:	bne	154f4 <__assert_fail@plt+0x389c>
   1551c:	ldrsh	r3, [r4, #10]
   15520:	movw	r0, #61276	; 0xef5c
   15524:	movt	r0, #1
   15528:	str	r3, [sp, #24]
   1552c:	str	r4, [sp, #44]	; 0x2c
   15530:	bl	11898 <strdup@plt>
   15534:	subs	r3, r0, #0
   15538:	beq	15648 <__assert_fail@plt+0x39f0>
   1553c:	mvn	r2, #0
   15540:	movw	r0, #61520	; 0xf050
   15544:	movt	r0, #1
   15548:	str	r3, [sp, #48]	; 0x30
   1554c:	str	r2, [sp, #60]	; 0x3c
   15550:	bl	11898 <strdup@plt>
   15554:	cmp	r0, #0
   15558:	beq	15648 <__assert_fail@plt+0x39f0>
   1555c:	movw	r3, #5060	; 0x13c4
   15560:	movt	r3, #3
   15564:	str	r0, [sp, #20]
   15568:	ldrb	r3, [r3]
   1556c:	mov	r2, #10
   15570:	strh	r2, [sp, #68]	; 0x44
   15574:	strb	r5, [sp, #70]	; 0x46
   15578:	cmp	r3, #0
   1557c:	bne	1559c <__assert_fail@plt+0x3944>
   15580:	mov	r0, #6
   15584:	movw	r1, #61560	; 0xf078
   15588:	movt	r1, #1
   1558c:	bl	11b44 <syslog@plt>
   15590:	mov	r0, sp
   15594:	bl	1424c <__assert_fail@plt+0x25f4>
   15598:	b	15424 <__assert_fail@plt+0x37cc>
   1559c:	movw	r3, #5048	; 0x13b8
   155a0:	movt	r3, #3
   155a4:	mov	r1, r5
   155a8:	movw	r0, #61528	; 0xf058
   155ac:	movt	r0, #1
   155b0:	mov	r2, #31
   155b4:	ldr	r3, [r3]
   155b8:	bl	1191c <fwrite@plt>
   155bc:	b	15580 <__assert_fail@plt+0x3928>
   155c0:	mov	r0, #0
   155c4:	bl	17d88 <argp_parse@@Base+0x1038>
   155c8:	ldr	r0, [sp, #12]
   155cc:	bl	17d88 <argp_parse@@Base+0x1038>
   155d0:	ldr	r0, [sp, #20]
   155d4:	bl	17d88 <argp_parse@@Base+0x1038>
   155d8:	ldr	r0, [sp, #36]	; 0x24
   155dc:	bl	17d88 <argp_parse@@Base+0x1038>
   155e0:	ldr	r0, [sp, #40]	; 0x28
   155e4:	bl	17d88 <argp_parse@@Base+0x1038>
   155e8:	ldr	r0, [sp, #48]	; 0x30
   155ec:	bl	17d88 <argp_parse@@Base+0x1038>
   155f0:	ldr	r1, [sp, #52]	; 0x34
   155f4:	ldr	r0, [sp, #56]	; 0x38
   155f8:	bl	16320 <__assert_fail@plt+0x46c8>
   155fc:	movw	r3, #5060	; 0x13c4
   15600:	movt	r3, #3
   15604:	ldrb	r3, [r3]
   15608:	cmp	r3, #0
   1560c:	bne	15624 <__assert_fail@plt+0x39cc>
   15610:	movw	r1, #61472	; 0xf020
   15614:	movt	r1, #1
   15618:	mov	r0, #3
   1561c:	bl	11b44 <syslog@plt>
   15620:	b	15424 <__assert_fail@plt+0x37cc>
   15624:	movw	r3, #5048	; 0x13b8
   15628:	movt	r3, #3
   1562c:	movw	r0, #61472	; 0xf020
   15630:	movt	r0, #1
   15634:	ldr	r3, [r3]
   15638:	mov	r2, #46	; 0x2e
   1563c:	mov	r1, #1
   15640:	bl	1191c <fwrite@plt>
   15644:	b	15610 <__assert_fail@plt+0x39b8>
   15648:	mov	r0, #3
   1564c:	movw	r1, #60404	; 0xebf4
   15650:	movt	r1, #1
   15654:	bl	11b44 <syslog@plt>
   15658:	mvn	r0, #0
   1565c:	bl	119f4 <exit@plt>
   15660:	movw	r3, #5652	; 0x1614
   15664:	movt	r3, #3
   15668:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1566c:	ldr	r3, [r3]
   15670:	strd	r6, [sp, #8]
   15674:	strd	r8, [sp, #16]
   15678:	mov	r9, r0
   1567c:	strd	sl, [sp, #24]
   15680:	str	lr, [sp, #32]
   15684:	sub	sp, sp, #220	; 0xdc
   15688:	cmp	r3, #0
   1568c:	beq	156a4 <__assert_fail@plt+0x3a4c>
   15690:	mov	r2, #0
   15694:	strh	r2, [r3, #32]
   15698:	ldr	r3, [r3, #220]	; 0xdc
   1569c:	cmp	r3, #0
   156a0:	bne	15694 <__assert_fail@plt+0x3a3c>
   156a4:	movw	r6, #5648	; 0x1610
   156a8:	movt	r6, #3
   156ac:	ldr	r3, [r6]
   156b0:	ldr	r1, [r3]
   156b4:	cmp	r1, #0
   156b8:	beq	15768 <__assert_fail@plt+0x3b10>
   156bc:	movw	r3, #61600	; 0xf0a0
   156c0:	movt	r3, #1
   156c4:	movw	fp, #61348	; 0xefa4
   156c8:	movt	fp, #1
   156cc:	movw	sl, #5048	; 0x13b8
   156d0:	movt	sl, #3
   156d4:	str	r3, [sp]
   156d8:	mov	r4, #0
   156dc:	b	1570c <__assert_fail@plt+0x3ab4>
   156e0:	ldr	r3, [sp, #128]	; 0x80
   156e4:	ldr	r2, [r6]
   156e8:	and	r3, r3, #61440	; 0xf000
   156ec:	cmp	r3, #16384	; 0x4000
   156f0:	beq	157bc <__assert_fail@plt+0x3b64>
   156f4:	cmp	r3, #32768	; 0x8000
   156f8:	beq	15830 <__assert_fail@plt+0x3bd8>
   156fc:	add	r4, r4, #4
   15700:	ldr	r1, [r2, r4]
   15704:	cmp	r1, #0
   15708:	beq	15768 <__assert_fail@plt+0x3b10>
   1570c:	add	r2, sp, #112	; 0x70
   15710:	mov	r0, #3
   15714:	bl	11bec <__xstat64@plt>
   15718:	cmp	r0, #0
   1571c:	beq	156e0 <__assert_fail@plt+0x3a88>
   15720:	ldr	r3, [r6]
   15724:	cmp	r9, #0
   15728:	ldr	r5, [r3, r4]
   1572c:	bne	157a4 <__assert_fail@plt+0x3b4c>
   15730:	bl	11a54 <__errno_location@plt>
   15734:	ldr	r7, [sl]
   15738:	add	r4, r4, #4
   1573c:	ldr	r0, [r0]
   15740:	bl	119ac <strerror@plt>
   15744:	mov	r3, r0
   15748:	mov	r2, r5
   1574c:	ldr	r1, [sp]
   15750:	mov	r0, r7
   15754:	bl	11a3c <fprintf@plt>
   15758:	ldr	r2, [r6]
   1575c:	ldr	r1, [r2, r4]
   15760:	cmp	r1, #0
   15764:	bne	1570c <__assert_fail@plt+0x3ab4>
   15768:	movw	r4, #5060	; 0x13c4
   1576c:	movt	r4, #3
   15770:	ldr	r0, [r4, #236]	; 0xec
   15774:	bl	17d88 <argp_parse@@Base+0x1038>
   15778:	mov	r3, #0
   1577c:	str	r3, [r4, #232]	; 0xe8
   15780:	str	r3, [r4, #236]	; 0xec
   15784:	bl	1539c <__assert_fail@plt+0x3744>
   15788:	add	sp, sp, #220	; 0xdc
   1578c:	ldrd	r4, [sp]
   15790:	ldrd	r6, [sp, #8]
   15794:	ldrd	r8, [sp, #16]
   15798:	ldrd	sl, [sp, #24]
   1579c:	add	sp, sp, #32
   157a0:	pop	{pc}		; (ldr pc, [sp], #4)
   157a4:	mov	r2, r5
   157a8:	mov	r1, fp
   157ac:	mov	r0, #3
   157b0:	bl	11b44 <syslog@plt>
   157b4:	ldr	r2, [r6]
   157b8:	b	156fc <__assert_fail@plt+0x3aa4>
   157bc:	ldr	r0, [r2, r4]
   157c0:	bl	11958 <opendir@plt>
   157c4:	subs	r7, r0, #0
   157c8:	beq	157b4 <__assert_fail@plt+0x3b5c>
   157cc:	movw	r3, #61592	; 0xf098
   157d0:	movt	r3, #1
   157d4:	str	r3, [sp, #4]
   157d8:	b	1580c <__assert_fail@plt+0x3bb4>
   157dc:	ldr	r3, [r6]
   157e0:	ldr	r0, [r3, r4]
   157e4:	bl	11a0c <strlen@plt>
   157e8:	mov	r8, r0
   157ec:	mov	r0, r5
   157f0:	bl	11a0c <strlen@plt>
   157f4:	add	r0, r8, r0
   157f8:	mov	r1, #1
   157fc:	add	r0, r0, #2
   15800:	bl	18acc <argp_parse@@Base+0x1d7c>
   15804:	subs	r8, r0, #0
   15808:	bne	15840 <__assert_fail@plt+0x3be8>
   1580c:	mov	r0, r7
   15810:	bl	11b68 <readdir64@plt>
   15814:	cmp	r0, #0
   15818:	add	r5, r0, #19
   1581c:	bne	157dc <__assert_fail@plt+0x3b84>
   15820:	mov	r0, r7
   15824:	bl	11c34 <closedir@plt>
   15828:	ldr	r2, [r6]
   1582c:	b	156fc <__assert_fail@plt+0x3aa4>
   15830:	ldr	r0, [r2, r4]
   15834:	bl	14fd4 <__assert_fail@plt+0x337c>
   15838:	ldr	r2, [r6]
   1583c:	b	156fc <__assert_fail@plt+0x3aa4>
   15840:	ldr	r2, [r6]
   15844:	mov	r3, r5
   15848:	ldr	r1, [sp, #4]
   1584c:	ldr	r2, [r2, r4]
   15850:	bl	11b5c <sprintf@plt>
   15854:	add	r2, sp, #8
   15858:	mov	r1, r8
   1585c:	mov	r0, #3
   15860:	bl	11bec <__xstat64@plt>
   15864:	cmp	r0, #0
   15868:	bne	1587c <__assert_fail@plt+0x3c24>
   1586c:	ldr	r3, [sp, #24]
   15870:	and	r3, r3, #61440	; 0xf000
   15874:	cmp	r3, #32768	; 0x8000
   15878:	beq	15888 <__assert_fail@plt+0x3c30>
   1587c:	mov	r0, r8
   15880:	bl	17d88 <argp_parse@@Base+0x1038>
   15884:	b	1580c <__assert_fail@plt+0x3bb4>
   15888:	mov	r0, r8
   1588c:	bl	14fd4 <__assert_fail@plt+0x337c>
   15890:	b	1587c <__assert_fail@plt+0x3c24>
   15894:	movw	r3, #5628	; 0x15fc
   15898:	movt	r3, #3
   1589c:	strd	r4, [sp, #-20]!	; 0xffffffec
   158a0:	ldr	r3, [r3]
   158a4:	mov	r2, r1
   158a8:	mov	r5, #128	; 0x80
   158ac:	ldr	r4, [r3]
   158b0:	strd	r6, [sp, #8]
   158b4:	mov	r7, r0
   158b8:	mov	r0, r2
   158bc:	str	lr, [sp, #16]
   158c0:	sub	sp, sp, #316	; 0x13c
   158c4:	add	r1, sp, #184	; 0xb8
   158c8:	add	r2, sp, #20
   158cc:	str	r5, [sp, #20]
   158d0:	bl	11bbc <getpeername@plt>
   158d4:	subs	r3, r0, #0
   158d8:	bne	1599c <__assert_fail@plt+0x3d44>
   158dc:	mov	ip, #1
   158e0:	mov	r1, r5
   158e4:	str	r3, [sp]
   158e8:	add	r0, sp, #184	; 0xb8
   158ec:	add	r2, sp, #104	; 0x68
   158f0:	stmib	sp, {r3, ip}
   158f4:	mov	r3, #80	; 0x50
   158f8:	add	r6, sp, #24
   158fc:	bl	11b08 <getnameinfo@plt>
   15900:	cmp	r0, #0
   15904:	mov	r3, r7
   15908:	beq	1597c <__assert_fail@plt+0x3d24>
   1590c:	movw	r2, #61628	; 0xf0bc
   15910:	movt	r2, #1
   15914:	mov	r0, r6
   15918:	mov	r1, #80	; 0x50
   1591c:	bl	11a60 <snprintf@plt>
   15920:	movw	r5, #5632	; 0x1600
   15924:	movt	r5, #3
   15928:	ldr	r2, [r5]
   1592c:	mov	r1, r6
   15930:	mov	r0, r4
   15934:	sub	r2, r2, r4
   15938:	bl	11a90 <strncpy@plt>
   1593c:	mov	r0, r4
   15940:	bl	11a0c <strlen@plt>
   15944:	ldr	r3, [r5]
   15948:	add	r0, r4, r0
   1594c:	cmp	r0, r3
   15950:	bcs	15968 <__assert_fail@plt+0x3d10>
   15954:	mov	r2, #32
   15958:	strb	r2, [r0], #1
   1595c:	ldr	r3, [r5]
   15960:	cmp	r3, r0
   15964:	bhi	15958 <__assert_fail@plt+0x3d00>
   15968:	add	sp, sp, #316	; 0x13c
   1596c:	ldrd	r4, [sp]
   15970:	ldrd	r6, [sp, #8]
   15974:	add	sp, sp, #16
   15978:	pop	{pc}		; (ldr pc, [sp], #4)
   1597c:	add	r2, sp, #104	; 0x68
   15980:	mov	r0, r6
   15984:	mov	r1, #80	; 0x50
   15988:	str	r2, [sp]
   1598c:	movw	r2, #61616	; 0xf0b0
   15990:	movt	r2, #1
   15994:	bl	11a60 <snprintf@plt>
   15998:	b	15920 <__assert_fail@plt+0x3cc8>
   1599c:	add	r6, sp, #24
   159a0:	mov	r3, r7
   159a4:	b	1590c <__assert_fail@plt+0x3cb4>
   159a8:	ldr	r3, [r1, #12]
   159ac:	mov	r1, r0
   159b0:	str	r4, [sp, #-8]!
   159b4:	mov	r4, r0
   159b8:	str	lr, [sp, #4]
   159bc:	sub	sp, sp, #8192	; 0x2000
   159c0:	mov	r0, r3
   159c4:	bl	15894 <__assert_fail@plt+0x3c3c>
   159c8:	b	159e0 <__assert_fail@plt+0x3d88>
   159cc:	mov	r1, sp
   159d0:	mov	r0, r4
   159d4:	bl	11ab4 <write@plt>
   159d8:	cmp	r0, #0
   159dc:	ble	159f8 <__assert_fail@plt+0x3da0>
   159e0:	mov	r2, #8192	; 0x2000
   159e4:	mov	r1, sp
   159e8:	mov	r0, r4
   159ec:	bl	117c0 <read@plt>
   159f0:	subs	r2, r0, #0
   159f4:	bgt	159cc <__assert_fail@plt+0x3d74>
   159f8:	mov	r0, #0
   159fc:	bl	119f4 <exit@plt>
   15a00:	ldr	r3, [r1, #12]
   15a04:	mov	r1, r0
   15a08:	str	r4, [sp, #-8]!
   15a0c:	mov	r4, r0
   15a10:	str	lr, [sp, #4]
   15a14:	sub	sp, sp, #8192	; 0x2000
   15a18:	mov	r0, r3
   15a1c:	bl	15894 <__assert_fail@plt+0x3c3c>
   15a20:	mov	r2, #8192	; 0x2000
   15a24:	mov	r1, sp
   15a28:	mov	r0, r4
   15a2c:	bl	117c0 <read@plt>
   15a30:	cmp	r0, #0
   15a34:	bgt	15a20 <__assert_fail@plt+0x3dc8>
   15a38:	beq	15a4c <__assert_fail@plt+0x3df4>
   15a3c:	bl	11a54 <__errno_location@plt>
   15a40:	ldr	r3, [r0]
   15a44:	cmp	r3, #4
   15a48:	beq	15a20 <__assert_fail@plt+0x3dc8>
   15a4c:	mov	r0, #0
   15a50:	bl	119f4 <exit@plt>
   15a54:	movw	r3, #5356	; 0x14ec
   15a58:	movt	r3, #3
   15a5c:	str	r4, [sp, #-8]!
   15a60:	movw	r4, #5616	; 0x15f0
   15a64:	movt	r4, #3
   15a68:	str	lr, [sp, #4]
   15a6c:	str	r3, [r4]
   15a70:	bl	119dc <__ctype_b_loc@plt>
   15a74:	mov	r3, #0
   15a78:	ldr	r1, [r0]
   15a7c:	lsl	r2, r3, #1
   15a80:	ldrh	r2, [r1, r2]
   15a84:	tst	r2, #16384	; 0x4000
   15a88:	beq	15a9c <__assert_fail@plt+0x3e44>
   15a8c:	ldr	r2, [r4]
   15a90:	add	r1, r2, #1
   15a94:	str	r1, [r4]
   15a98:	strb	r3, [r2]
   15a9c:	add	r3, r3, #1
   15aa0:	cmp	r3, #129	; 0x81
   15aa4:	bne	15a78 <__assert_fail@plt+0x3e20>
   15aa8:	ldr	r4, [sp]
   15aac:	add	sp, sp, #4
   15ab0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ab4:	ldr	r3, [r1, #12]
   15ab8:	mov	r1, r0
   15abc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15ac0:	strd	r6, [sp, #8]
   15ac4:	movw	r7, #5616	; 0x15f0
   15ac8:	movt	r7, #3
   15acc:	strd	r8, [sp, #16]
   15ad0:	mov	r8, r0
   15ad4:	str	lr, [sp, #24]
   15ad8:	sub	sp, sp, #84	; 0x54
   15adc:	mov	r0, r3
   15ae0:	bl	15894 <__assert_fail@plt+0x3c3c>
   15ae4:	ldr	r6, [r7]
   15ae8:	cmp	r6, #0
   15aec:	beq	15b94 <__assert_fail@plt+0x3f3c>
   15af0:	movw	r3, #2573	; 0xa0d
   15af4:	movw	r4, #5356	; 0x14ec
   15af8:	movt	r4, #3
   15afc:	mov	r9, r4
   15b00:	strh	r3, [sp, #76]	; 0x4c
   15b04:	b	15b40 <__assert_fail@plt+0x3ee8>
   15b08:	mov	r2, #72	; 0x48
   15b0c:	mov	r1, r4
   15b10:	add	r0, sp, #4
   15b14:	bl	1182c <memcpy@plt>
   15b18:	add	r4, r4, #1
   15b1c:	mov	r2, #74	; 0x4a
   15b20:	cmp	r4, r6
   15b24:	add	r1, sp, #4
   15b28:	mov	r0, r8
   15b2c:	beq	15b74 <__assert_fail@plt+0x3f1c>
   15b30:	bl	11ab4 <write@plt>
   15b34:	cmp	r0, #74	; 0x4a
   15b38:	bne	15b8c <__assert_fail@plt+0x3f34>
   15b3c:	ldr	r6, [r7]
   15b40:	sub	r5, r6, r4
   15b44:	cmp	r5, #71	; 0x47
   15b48:	bgt	15b08 <__assert_fail@plt+0x3eb0>
   15b4c:	mov	r2, r5
   15b50:	mov	r1, r4
   15b54:	add	r0, sp, #4
   15b58:	bl	1182c <memcpy@plt>
   15b5c:	add	r3, sp, #4
   15b60:	rsb	r2, r5, #72	; 0x48
   15b64:	add	r0, r3, r5
   15b68:	mov	r1, r9
   15b6c:	bl	1182c <memcpy@plt>
   15b70:	b	15b18 <__assert_fail@plt+0x3ec0>
   15b74:	bl	11ab4 <write@plt>
   15b78:	cmp	r0, #74	; 0x4a
   15b7c:	bne	15b8c <__assert_fail@plt+0x3f34>
   15b80:	movw	r4, #5356	; 0x14ec
   15b84:	movt	r4, #3
   15b88:	b	15b3c <__assert_fail@plt+0x3ee4>
   15b8c:	mov	r0, #0
   15b90:	bl	119f4 <exit@plt>
   15b94:	bl	15a54 <__assert_fail@plt+0x3dfc>
   15b98:	ldr	r6, [r7]
   15b9c:	b	15af0 <__assert_fail@plt+0x3e98>
   15ba0:	push	{lr}		; (str lr, [sp, #-4]!)
   15ba4:	sub	sp, sp, #12
   15ba8:	mov	r1, #0
   15bac:	mov	r0, sp
   15bb0:	bl	11940 <gettimeofday@plt>
   15bb4:	cmp	r0, #0
   15bb8:	blt	15bd8 <__assert_fail@plt+0x3f80>
   15bbc:	ldr	r3, [sp]
   15bc0:	movw	r0, #32384	; 0x7e80
   15bc4:	movt	r0, #33706	; 0x83aa
   15bc8:	add	r0, r3, r0
   15bcc:	rev	r0, r0
   15bd0:	add	sp, sp, #12
   15bd4:	pop	{pc}		; (ldr pc, [sp], #4)
   15bd8:	movw	r3, #5060	; 0x13c4
   15bdc:	movt	r3, #3
   15be0:	ldrb	r0, [r3]
   15be4:	cmp	r0, #0
   15be8:	beq	15bd0 <__assert_fail@plt+0x3f78>
   15bec:	movw	r3, #5048	; 0x13b8
   15bf0:	movt	r3, #3
   15bf4:	movw	r0, #60268	; 0xeb6c
   15bf8:	movt	r0, #1
   15bfc:	ldr	r3, [r3]
   15c00:	mov	r2, #26
   15c04:	mov	r1, #1
   15c08:	bl	1191c <fwrite@plt>
   15c0c:	mov	r0, #0
   15c10:	b	15bd0 <__assert_fail@plt+0x3f78>
   15c14:	mov	r3, #128	; 0x80
   15c18:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15c1c:	mov	r4, r0
   15c20:	strd	r6, [sp, #8]
   15c24:	movw	r0, #61636	; 0xf0c4
   15c28:	movt	r0, #1
   15c2c:	str	r8, [sp, #16]
   15c30:	mov	r7, r1
   15c34:	mov	r8, r2
   15c38:	str	lr, [sp, #20]
   15c3c:	sub	sp, sp, #352	; 0x160
   15c40:	mov	r2, #1
   15c44:	movw	r1, #61632	; 0xf0c0
   15c48:	movt	r1, #1
   15c4c:	str	r3, [sp, #20]
   15c50:	bl	11a30 <setenv@plt>
   15c54:	movw	r0, #61644	; 0xf0cc
   15c58:	movt	r0, #1
   15c5c:	bl	11bf8 <unsetenv@plt>
   15c60:	movw	r0, #61656	; 0xf0d8
   15c64:	movt	r0, #1
   15c68:	bl	11bf8 <unsetenv@plt>
   15c6c:	movw	r0, #61672	; 0xf0e8
   15c70:	movt	r0, #1
   15c74:	bl	11bf8 <unsetenv@plt>
   15c78:	movw	r0, #61688	; 0xf0f8
   15c7c:	movt	r0, #1
   15c80:	bl	11bf8 <unsetenv@plt>
   15c84:	movw	r0, #61700	; 0xf104
   15c88:	movt	r0, #1
   15c8c:	bl	11bf8 <unsetenv@plt>
   15c90:	movw	r0, #61716	; 0xf114
   15c94:	movt	r0, #1
   15c98:	bl	11bf8 <unsetenv@plt>
   15c9c:	mov	r0, r4
   15ca0:	add	r1, sp, #40	; 0x28
   15ca4:	add	r2, sp, #20
   15ca8:	bl	11b80 <getsockname@plt>
   15cac:	cmp	r0, #0
   15cb0:	blt	15e2c <__assert_fail@plt+0x41d4>
   15cb4:	mov	ip, #3
   15cb8:	mov	r3, #16
   15cbc:	ldr	r1, [sp, #20]
   15cc0:	add	r6, sp, #24
   15cc4:	add	r5, sp, #168	; 0xa8
   15cc8:	mov	r2, r5
   15ccc:	add	r0, sp, #40	; 0x28
   15cd0:	str	r6, [sp]
   15cd4:	stmib	sp, {r3, ip}
   15cd8:	mov	r3, #184	; 0xb8
   15cdc:	bl	11b08 <getnameinfo@plt>
   15ce0:	cmp	r0, #0
   15ce4:	beq	15db0 <__assert_fail@plt+0x4158>
   15ce8:	bl	11808 <gai_strerror@plt>
   15cec:	mov	r2, r0
   15cf0:	movw	r1, #61832	; 0xf188
   15cf4:	movt	r1, #1
   15cf8:	mov	r0, #4
   15cfc:	movw	r4, #5060	; 0x13c4
   15d00:	movt	r4, #3
   15d04:	bl	11b44 <syslog@plt>
   15d08:	ldrb	r3, [r4, #2]
   15d0c:	cmp	r3, #0
   15d10:	bne	15e68 <__assert_fail@plt+0x4210>
   15d14:	mov	ip, #3
   15d18:	mov	r1, #16
   15d1c:	str	r6, [sp]
   15d20:	mov	r3, #184	; 0xb8
   15d24:	mov	r2, r5
   15d28:	mov	r0, r7
   15d2c:	stmib	sp, {r1, ip}
   15d30:	mov	r1, r8
   15d34:	bl	11b08 <getnameinfo@plt>
   15d38:	cmp	r0, #0
   15d3c:	bne	15e10 <__assert_fail@plt+0x41b8>
   15d40:	movw	r0, #61688	; 0xf0f8
   15d44:	movt	r0, #1
   15d48:	mov	r2, #1
   15d4c:	mov	r1, r5
   15d50:	bl	11a30 <setenv@plt>
   15d54:	cmp	r0, #0
   15d58:	blt	15f24 <__assert_fail@plt+0x42cc>
   15d5c:	movw	r4, #5060	; 0x13c4
   15d60:	movt	r4, #3
   15d64:	ldrb	r3, [r4]
   15d68:	cmp	r3, #0
   15d6c:	bne	15f54 <__assert_fail@plt+0x42fc>
   15d70:	mov	r1, r6
   15d74:	movw	r0, #61700	; 0xf104
   15d78:	movt	r0, #1
   15d7c:	mov	r2, #1
   15d80:	bl	11a30 <setenv@plt>
   15d84:	cmp	r0, #0
   15d88:	blt	15f40 <__assert_fail@plt+0x42e8>
   15d8c:	ldrb	r3, [r4, #2]
   15d90:	cmp	r3, #0
   15d94:	bne	15eb0 <__assert_fail@plt+0x4258>
   15d98:	add	sp, sp, #352	; 0x160
   15d9c:	ldrd	r4, [sp]
   15da0:	ldrd	r6, [sp, #8]
   15da4:	ldr	r8, [sp, #16]
   15da8:	add	sp, sp, #20
   15dac:	pop	{pc}		; (ldr pc, [sp], #4)
   15db0:	movw	r0, #61644	; 0xf0cc
   15db4:	movt	r0, #1
   15db8:	mov	r2, #1
   15dbc:	mov	r1, r5
   15dc0:	bl	11a30 <setenv@plt>
   15dc4:	cmp	r0, #0
   15dc8:	blt	15fa4 <__assert_fail@plt+0x434c>
   15dcc:	movw	r4, #5060	; 0x13c4
   15dd0:	movt	r4, #3
   15dd4:	ldrb	r3, [r4]
   15dd8:	cmp	r3, #0
   15ddc:	bne	15e48 <__assert_fail@plt+0x41f0>
   15de0:	movw	r0, #61672	; 0xf0e8
   15de4:	movt	r0, #1
   15de8:	mov	r2, #1
   15dec:	mov	r1, r6
   15df0:	bl	11a30 <setenv@plt>
   15df4:	cmp	r0, #0
   15df8:	bge	15d08 <__assert_fail@plt+0x40b0>
   15dfc:	movw	r1, #61804	; 0xf16c
   15e00:	movt	r1, #1
   15e04:	mov	r0, #4
   15e08:	bl	11b44 <syslog@plt>
   15e0c:	b	15d08 <__assert_fail@plt+0x40b0>
   15e10:	bl	11808 <gai_strerror@plt>
   15e14:	mov	r2, r0
   15e18:	movw	r1, #61832	; 0xf188
   15e1c:	movt	r1, #1
   15e20:	mov	r0, #4
   15e24:	bl	11b44 <syslog@plt>
   15e28:	b	15d98 <__assert_fail@plt+0x4140>
   15e2c:	movw	r1, #61732	; 0xf124
   15e30:	movt	r1, #1
   15e34:	mov	r0, #4
   15e38:	add	r5, sp, #168	; 0xa8
   15e3c:	bl	11b44 <syslog@plt>
   15e40:	add	r6, sp, #24
   15e44:	b	15d14 <__assert_fail@plt+0x40bc>
   15e48:	movw	r3, #5048	; 0x13b8
   15e4c:	movt	r3, #3
   15e50:	movw	r1, #61776	; 0xf150
   15e54:	movt	r1, #1
   15e58:	ldr	r0, [r3]
   15e5c:	mov	r2, r5
   15e60:	bl	11a3c <fprintf@plt>
   15e64:	b	15de0 <__assert_fail@plt+0x4188>
   15e68:	mov	ip, #0
   15e6c:	add	r0, sp, #40	; 0x28
   15e70:	ldr	r1, [sp, #20]
   15e74:	mov	r3, #184	; 0xb8
   15e78:	mov	r2, r5
   15e7c:	str	ip, [sp]
   15e80:	str	ip, [sp, #4]
   15e84:	str	ip, [sp, #8]
   15e88:	bl	11b08 <getnameinfo@plt>
   15e8c:	cmp	r0, #0
   15e90:	beq	15f74 <__assert_fail@plt+0x431c>
   15e94:	bl	11808 <gai_strerror@plt>
   15e98:	mov	r2, r0
   15e9c:	movw	r1, #61832	; 0xf188
   15ea0:	movt	r1, #1
   15ea4:	mov	r0, #4
   15ea8:	bl	11b44 <syslog@plt>
   15eac:	b	15d14 <__assert_fail@plt+0x40bc>
   15eb0:	mov	ip, #0
   15eb4:	mov	r1, r8
   15eb8:	mov	r0, r7
   15ebc:	mov	r3, #184	; 0xb8
   15ec0:	mov	r2, r5
   15ec4:	str	ip, [sp]
   15ec8:	str	ip, [sp, #4]
   15ecc:	str	ip, [sp, #8]
   15ed0:	bl	11b08 <getnameinfo@plt>
   15ed4:	cmp	r0, #0
   15ed8:	bne	15e10 <__assert_fail@plt+0x41b8>
   15edc:	movw	r0, #61716	; 0xf114
   15ee0:	movt	r0, #1
   15ee4:	mov	r2, #1
   15ee8:	mov	r1, r5
   15eec:	bl	11a30 <setenv@plt>
   15ef0:	cmp	r0, #0
   15ef4:	blt	15fc0 <__assert_fail@plt+0x4368>
   15ef8:	ldrb	r3, [r4]
   15efc:	cmp	r3, #0
   15f00:	beq	15d98 <__assert_fail@plt+0x4140>
   15f04:	movw	r3, #5048	; 0x13b8
   15f08:	movt	r3, #3
   15f0c:	mov	r2, r5
   15f10:	movw	r1, #61984	; 0xf220
   15f14:	movt	r1, #1
   15f18:	ldr	r0, [r3]
   15f1c:	bl	11a3c <fprintf@plt>
   15f20:	b	15d98 <__assert_fail@plt+0x4140>
   15f24:	movw	r1, #61876	; 0xf1b4
   15f28:	movt	r1, #1
   15f2c:	mov	r0, #4
   15f30:	movw	r4, #5060	; 0x13c4
   15f34:	movt	r4, #3
   15f38:	bl	11b44 <syslog@plt>
   15f3c:	b	15d70 <__assert_fail@plt+0x4118>
   15f40:	movw	r1, #61928	; 0xf1e8
   15f44:	movt	r1, #1
   15f48:	mov	r0, #4
   15f4c:	bl	11b44 <syslog@plt>
   15f50:	b	15d8c <__assert_fail@plt+0x4134>
   15f54:	movw	r3, #5048	; 0x13b8
   15f58:	movt	r3, #3
   15f5c:	movw	r1, #61900	; 0xf1cc
   15f60:	movt	r1, #1
   15f64:	ldr	r0, [r3]
   15f68:	mov	r2, r5
   15f6c:	bl	11a3c <fprintf@plt>
   15f70:	b	15d70 <__assert_fail@plt+0x4118>
   15f74:	movw	r0, #61656	; 0xf0d8
   15f78:	movt	r0, #1
   15f7c:	mov	r2, #1
   15f80:	mov	r1, r5
   15f84:	bl	11a30 <setenv@plt>
   15f88:	cmp	r0, #0
   15f8c:	bge	15d14 <__assert_fail@plt+0x40bc>
   15f90:	movw	r1, #61848	; 0xf198
   15f94:	movt	r1, #1
   15f98:	mov	r0, #4
   15f9c:	bl	11b44 <syslog@plt>
   15fa0:	b	15d14 <__assert_fail@plt+0x40bc>
   15fa4:	movw	r1, #61752	; 0xf138
   15fa8:	movt	r1, #1
   15fac:	mov	r0, #4
   15fb0:	movw	r4, #5060	; 0x13c4
   15fb4:	movt	r4, #3
   15fb8:	bl	11b44 <syslog@plt>
   15fbc:	b	15de0 <__assert_fail@plt+0x4188>
   15fc0:	movw	r1, #61956	; 0xf204
   15fc4:	movt	r1, #1
   15fc8:	mov	r0, #4
   15fcc:	bl	11b44 <syslog@plt>
   15fd0:	b	15d98 <__assert_fail@plt+0x4140>
   15fd4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15fd8:	strd	r6, [sp, #8]
   15fdc:	strd	r8, [sp, #16]
   15fe0:	strd	sl, [sp, #24]
   15fe4:	str	lr, [sp, #32]
   15fe8:	sub	sp, sp, #4
   15fec:	ldr	r7, [sp, #40]	; 0x28
   15ff0:	ldr	r6, [sp, #44]	; 0x2c
   15ff4:	ldr	lr, [r6]
   15ff8:	cmp	lr, r0
   15ffc:	add	r8, r1, lr
   16000:	bge	16044 <__assert_fail@plt+0x43ec>
   16004:	ldrb	ip, [r1, lr]
   16008:	cmp	ip, #32
   1600c:	cmpne	ip, #9
   16010:	bne	16044 <__assert_fail@plt+0x43ec>
   16014:	add	ip, lr, #1
   16018:	add	r4, r1, ip
   1601c:	b	16034 <__assert_fail@plt+0x43dc>
   16020:	ldrb	r5, [r4], #1
   16024:	add	ip, ip, #1
   16028:	cmp	r5, #9
   1602c:	cmpne	r5, #32
   16030:	bne	16044 <__assert_fail@plt+0x43ec>
   16034:	cmp	r0, ip
   16038:	mov	lr, ip
   1603c:	mov	r8, r4
   16040:	bne	16020 <__assert_fail@plt+0x43c8>
   16044:	str	lr, [r3]
   16048:	ldrb	r5, [r8]
   1604c:	cmp	r5, #34	; 0x22
   16050:	beq	160ec <__assert_fail@plt+0x4494>
   16054:	cmp	r5, #39	; 0x27
   16058:	addne	r8, lr, #1
   1605c:	movne	r4, lr
   16060:	beq	160ec <__assert_fail@plt+0x4494>
   16064:	mov	sl, r1
   16068:	mov	fp, r0
   1606c:	mov	r1, r5
   16070:	mov	r0, r2
   16074:	mov	r9, r2
   16078:	bl	11a24 <strchr@plt>
   1607c:	cmp	r0, #0
   16080:	addeq	sl, sl, r4
   16084:	beq	160c0 <__assert_fail@plt+0x4468>
   16088:	mov	r0, r8
   1608c:	str	r4, [r7]
   16090:	str	r8, [r6]
   16094:	add	sp, sp, #4
   16098:	ldrd	r4, [sp]
   1609c:	ldrd	r6, [sp, #8]
   160a0:	ldrd	r8, [sp, #16]
   160a4:	ldrd	sl, [sp, #24]
   160a8:	add	sp, sp, #32
   160ac:	pop	{pc}		; (ldr pc, [sp], #4)
   160b0:	bl	11a24 <strchr@plt>
   160b4:	cmp	r0, #0
   160b8:	bne	16088 <__assert_fail@plt+0x4430>
   160bc:	mov	r4, r8
   160c0:	add	r8, r4, #1
   160c4:	mov	r0, r9
   160c8:	cmp	fp, r8
   160cc:	ble	16088 <__assert_fail@plt+0x4430>
   160d0:	ldrb	r3, [sl, #1]!
   160d4:	and	r2, r3, #253	; 0xfd
   160d8:	mov	r1, r3
   160dc:	cmp	r2, #32
   160e0:	cmpne	r3, #9
   160e4:	bne	160b0 <__assert_fail@plt+0x4458>
   160e8:	b	16088 <__assert_fail@plt+0x4430>
   160ec:	add	r3, r1, lr
   160f0:	b	16100 <__assert_fail@plt+0x44a8>
   160f4:	cmp	r5, ip
   160f8:	beq	16124 <__assert_fail@plt+0x44cc>
   160fc:	mov	lr, r4
   16100:	add	r4, lr, #1
   16104:	ldrb	ip, [r3, #1]!
   16108:	cmp	r0, r4
   1610c:	bgt	160f4 <__assert_fail@plt+0x449c>
   16110:	cmp	ip, #34	; 0x22
   16114:	add	r8, lr, #2
   16118:	movne	r5, ip
   1611c:	beq	16088 <__assert_fail@plt+0x4430>
   16120:	b	16064 <__assert_fail@plt+0x440c>
   16124:	add	r8, lr, #2
   16128:	b	16088 <__assert_fail@plt+0x4430>
   1612c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16130:	strd	r6, [sp, #8]
   16134:	mov	r7, r0
   16138:	strd	r8, [sp, #16]
   1613c:	mov	r9, r3
   16140:	mov	r8, r2
   16144:	strd	sl, [sp, #24]
   16148:	mov	sl, r1
   1614c:	str	lr, [sp, #32]
   16150:	sub	sp, sp, #36	; 0x24
   16154:	bl	11a0c <strlen@plt>
   16158:	mov	r3, #0
   1615c:	subs	r5, r0, #0
   16160:	str	r3, [r8]
   16164:	str	r3, [r9]
   16168:	beq	162e8 <__assert_fail@plt+0x4690>
   1616c:	bl	119dc <__ctype_b_loc@plt>
   16170:	add	r2, r7, r5
   16174:	ldr	r1, [r0]
   16178:	b	16184 <__assert_fail@plt+0x452c>
   1617c:	subs	r5, r5, #1
   16180:	beq	162e8 <__assert_fail@plt+0x4690>
   16184:	ldrb	r3, [r2, #-1]!
   16188:	lsl	r3, r3, #1
   1618c:	ldrh	r3, [r1, r3]
   16190:	ands	r3, r3, #8192	; 0x2000
   16194:	bne	1617c <__assert_fail@plt+0x4524>
   16198:	mov	r2, #1
   1619c:	add	fp, sp, #28
   161a0:	str	r3, [sp, #28]
   161a4:	str	r2, [r8]
   161a8:	b	161b8 <__assert_fail@plt+0x4560>
   161ac:	ldr	r3, [r8]
   161b0:	add	r3, r3, #1
   161b4:	str	r3, [r8]
   161b8:	add	r1, sp, #24
   161bc:	add	r3, sp, #20
   161c0:	mov	r2, sl
   161c4:	mov	r0, r5
   161c8:	stm	sp, {r1, fp}
   161cc:	mov	r1, r7
   161d0:	bl	15fd4 <__assert_fail@plt+0x437c>
   161d4:	cmp	r0, r5
   161d8:	blt	161ac <__assert_fail@plt+0x4554>
   161dc:	ldr	r0, [r8]
   161e0:	mov	r1, #4
   161e4:	mov	r6, #0
   161e8:	add	r0, r0, #1
   161ec:	bl	18acc <argp_parse@@Base+0x1d7c>
   161f0:	ldr	r2, [r8]
   161f4:	mov	r3, r0
   161f8:	str	r0, [r9]
   161fc:	str	r6, [sp, #28]
   16200:	cmp	r2, r6
   16204:	ble	16310 <__assert_fail@plt+0x46b8>
   16208:	str	r5, [sp, #12]
   1620c:	b	16278 <__assert_fail@plt+0x4620>
   16210:	cmp	r3, #39	; 0x27
   16214:	ldr	r4, [sp, #24]
   16218:	beq	162c8 <__assert_fail@plt+0x4670>
   1621c:	sub	r4, r4, r2
   16220:	mov	r1, #1
   16224:	ldr	r5, [r9]
   16228:	add	r0, r4, #2
   1622c:	add	r4, r4, r1
   16230:	bl	18acc <argp_parse@@Base+0x1d7c>
   16234:	ldr	r1, [r9]
   16238:	mov	r2, r4
   1623c:	str	r0, [r5, r6, lsl #2]
   16240:	ldr	r3, [r1, r6, lsl #2]
   16244:	subs	r0, r3, #0
   16248:	beq	162e8 <__assert_fail@plt+0x4690>
   1624c:	ldr	r1, [sp, #20]
   16250:	add	r1, r7, r1
   16254:	bl	1182c <memcpy@plt>
   16258:	ldr	r3, [r9]
   1625c:	mov	r2, #0
   16260:	ldr	r3, [r3, r6, lsl #2]
   16264:	add	r6, r6, #1
   16268:	strb	r2, [r3, r4]
   1626c:	ldr	r3, [r8]
   16270:	cmp	r3, r6
   16274:	ble	16308 <__assert_fail@plt+0x46b0>
   16278:	add	r1, sp, #24
   1627c:	add	r3, sp, #20
   16280:	ldr	r0, [sp, #12]
   16284:	mov	r2, sl
   16288:	stm	sp, {r1, fp}
   1628c:	mov	r1, r7
   16290:	bl	15fd4 <__assert_fail@plt+0x437c>
   16294:	ldr	r2, [sp, #20]
   16298:	ldrb	r3, [r7, r2]
   1629c:	cmp	r3, #34	; 0x22
   162a0:	bne	16210 <__assert_fail@plt+0x45b8>
   162a4:	ldr	r4, [sp, #24]
   162a8:	ldrb	r3, [r7, r4]
   162ac:	cmp	r3, #34	; 0x22
   162b0:	bne	1621c <__assert_fail@plt+0x45c4>
   162b4:	add	r2, r2, #1
   162b8:	sub	r4, r4, #1
   162bc:	str	r2, [sp, #20]
   162c0:	str	r4, [sp, #24]
   162c4:	b	1621c <__assert_fail@plt+0x45c4>
   162c8:	ldrb	r3, [r7, r4]
   162cc:	cmp	r3, #39	; 0x27
   162d0:	bne	1621c <__assert_fail@plt+0x45c4>
   162d4:	add	r2, r2, #1
   162d8:	sub	r4, r4, #1
   162dc:	str	r2, [sp, #20]
   162e0:	str	r4, [sp, #24]
   162e4:	b	1621c <__assert_fail@plt+0x45c4>
   162e8:	mov	r0, #1
   162ec:	add	sp, sp, #36	; 0x24
   162f0:	ldrd	r4, [sp]
   162f4:	ldrd	r6, [sp, #8]
   162f8:	ldrd	r8, [sp, #16]
   162fc:	ldrd	sl, [sp, #24]
   16300:	add	sp, sp, #32
   16304:	pop	{pc}		; (ldr pc, [sp], #4)
   16308:	ldr	r3, [r9]
   1630c:	add	r3, r3, r6, lsl #2
   16310:	mov	r2, #0
   16314:	mov	r0, r2
   16318:	str	r2, [r3]
   1631c:	b	162ec <__assert_fail@plt+0x4694>
   16320:	cmp	r0, #0
   16324:	strd	r4, [sp, #-16]!
   16328:	mov	r5, r1
   1632c:	str	r6, [sp, #8]
   16330:	str	lr, [sp, #12]
   16334:	ble	1634c <__assert_fail@plt+0x46f4>
   16338:	add	r4, r1, r0, lsl #2
   1633c:	ldr	r0, [r4, #-4]!
   16340:	bl	17d88 <argp_parse@@Base+0x1038>
   16344:	cmp	r5, r4
   16348:	bne	1633c <__assert_fail@plt+0x46e4>
   1634c:	mov	r0, r5
   16350:	bl	17d88 <argp_parse@@Base+0x1038>
   16354:	ldrd	r4, [sp]
   16358:	mov	r0, #1
   1635c:	ldr	r6, [sp, #8]
   16360:	add	sp, sp, #12
   16364:	pop	{pc}		; (ldr pc, [sp], #4)
   16368:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1636c:	strd	r6, [sp, #8]
   16370:	str	sl, [sp, #24]
   16374:	subs	sl, r2, #0
   16378:	strd	r8, [sp, #16]
   1637c:	str	lr, [sp, #28]
   16380:	beq	16448 <__assert_fail@plt+0x47f0>
   16384:	mov	r8, r0
   16388:	mov	r0, #1
   1638c:	mov	r6, r1
   16390:	bl	18b40 <argp_parse@@Base+0x1df0>
   16394:	subs	r4, r0, #0
   16398:	beq	16448 <__assert_fail@plt+0x47f0>
   1639c:	mov	r7, #0
   163a0:	cmp	r8, r7
   163a4:	strb	r7, [r4]
   163a8:	ble	16410 <__assert_fail@plt+0x47b8>
   163ac:	movw	r9, #62900	; 0xf5b4
   163b0:	movt	r9, #1
   163b4:	sub	r6, r6, #4
   163b8:	mov	r5, r7
   163bc:	ldr	r0, [r6, #4]!
   163c0:	bl	11a0c <strlen@plt>
   163c4:	add	r3, r0, #2
   163c8:	mov	r0, r4
   163cc:	add	r7, r7, r3
   163d0:	mov	r1, r7
   163d4:	bl	18b7c <argp_parse@@Base+0x1e2c>
   163d8:	subs	r4, r0, #0
   163dc:	beq	16448 <__assert_fail@plt+0x47f0>
   163e0:	cmp	r5, #0
   163e4:	add	r5, r5, #1
   163e8:	bne	1641c <__assert_fail@plt+0x47c4>
   163ec:	mov	r5, #1
   163f0:	ldr	r1, [r6]
   163f4:	bl	11928 <strcat@plt>
   163f8:	cmp	r8, r5
   163fc:	bne	163bc <__assert_fail@plt+0x4764>
   16400:	ldrb	r3, [r4]
   16404:	cmp	r3, #0
   16408:	movne	r5, #0
   1640c:	bne	16468 <__assert_fail@plt+0x4810>
   16410:	mov	r0, #0
   16414:	str	r4, [sl]
   16418:	b	1644c <__assert_fail@plt+0x47f4>
   1641c:	bl	11a0c <strlen@plt>
   16420:	ldrh	r3, [r9]
   16424:	mov	r2, r0
   16428:	add	r0, r0, #1
   1642c:	add	r0, r4, r0
   16430:	strh	r3, [r4, r2]
   16434:	ldr	r1, [r6]
   16438:	bl	11934 <strcpy@plt>
   1643c:	cmp	r8, r5
   16440:	bne	163bc <__assert_fail@plt+0x4764>
   16444:	b	16400 <__assert_fail@plt+0x47a8>
   16448:	mov	r0, #1
   1644c:	ldrd	r4, [sp]
   16450:	ldrd	r6, [sp, #8]
   16454:	ldrd	r8, [sp, #16]
   16458:	ldr	sl, [sp, #24]
   1645c:	add	sp, sp, #28
   16460:	pop	{pc}		; (ldr pc, [sp], #4)
   16464:	strb	r5, [r4, r0]
   16468:	mov	r0, r4
   1646c:	bl	11a0c <strlen@plt>
   16470:	sub	r0, r0, #1
   16474:	ldrb	r3, [r4, r0]
   16478:	cmp	r3, #32
   1647c:	beq	16464 <__assert_fail@plt+0x480c>
   16480:	mov	r0, #0
   16484:	str	r4, [sl]
   16488:	b	1644c <__assert_fail@plt+0x47f4>
   1648c:	mov	r0, #0
   16490:	str	r4, [sp, #-8]!
   16494:	str	lr, [sp, #4]
   16498:	bl	118a4 <alarm@plt>
   1649c:	mov	r4, r0
   164a0:	mov	r1, #0
   164a4:	mov	r0, #14
   164a8:	bl	11838 <signal@plt>
   164ac:	cmp	r4, #0
   164b0:	beq	164c0 <__assert_fail@plt+0x4868>
   164b4:	ldr	r4, [sp]
   164b8:	add	sp, sp, #4
   164bc:	pop	{pc}		; (ldr pc, [sp], #4)
   164c0:	mov	r1, r4
   164c4:	movw	r2, #62904	; 0xf5b8
   164c8:	movt	r2, #1
   164cc:	mov	r0, #1
   164d0:	ldr	r4, [sp]
   164d4:	ldr	lr, [sp, #4]
   164d8:	add	sp, sp, #8
   164dc:	b	1194c <error@plt>
   164e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   164e4:	mov	r5, r1
   164e8:	strd	r6, [sp, #8]
   164ec:	mov	r7, r2
   164f0:	str	r8, [sp, #16]
   164f4:	mov	r8, r0
   164f8:	str	lr, [sp, #20]
   164fc:	bl	119e8 <getpid@plt>
   16500:	mov	r6, r0
   16504:	bl	11afc <fork@plt>
   16508:	cmn	r0, #1
   1650c:	beq	1653c <__assert_fail@plt+0x48e4>
   16510:	cmp	r0, #0
   16514:	beq	16558 <__assert_fail@plt+0x4900>
   16518:	cmp	r7, #0
   1651c:	bgt	16618 <__assert_fail@plt+0x49c0>
   16520:	mov	r0, #0
   16524:	bl	11820 <_exit@plt>
   16528:	movw	r0, #62932	; 0xf5d4
   1652c:	movt	r0, #1
   16530:	bl	118e0 <chdir@plt>
   16534:	cmp	r0, #0
   16538:	bge	1658c <__assert_fail@plt+0x4934>
   1653c:	mvn	r6, #0
   16540:	mov	r0, r6
   16544:	ldrd	r4, [sp]
   16548:	ldrd	r6, [sp, #8]
   1654c:	ldr	r8, [sp, #16]
   16550:	add	sp, sp, #20
   16554:	pop	{pc}		; (ldr pc, [sp], #4)
   16558:	bl	11a18 <setsid@plt>
   1655c:	cmn	r0, #1
   16560:	beq	1653c <__assert_fail@plt+0x48e4>
   16564:	mov	r1, #1
   16568:	mov	r0, r1
   1656c:	bl	11838 <signal@plt>
   16570:	bl	11afc <fork@plt>
   16574:	cmn	r0, #1
   16578:	beq	1653c <__assert_fail@plt+0x48e4>
   1657c:	cmp	r0, #0
   16580:	bne	16520 <__assert_fail@plt+0x48c8>
   16584:	cmp	r8, #0
   16588:	beq	16528 <__assert_fail@plt+0x48d0>
   1658c:	cmp	r5, #0
   16590:	bne	16540 <__assert_fail@plt+0x48e8>
   16594:	mov	r0, #4
   16598:	bl	118b0 <sysconf@plt>
   1659c:	cmn	r0, #1
   165a0:	mov	r4, r0
   165a4:	beq	1663c <__assert_fail@plt+0x49e4>
   165a8:	cmp	r0, #0
   165ac:	ble	165c4 <__assert_fail@plt+0x496c>
   165b0:	mov	r0, r5
   165b4:	add	r5, r5, #1
   165b8:	bl	11c28 <close@plt>
   165bc:	cmp	r4, r5
   165c0:	bgt	165b0 <__assert_fail@plt+0x4958>
   165c4:	movw	r0, #62936	; 0xf5d8
   165c8:	movt	r0, #1
   165cc:	mov	r2, #0
   165d0:	mov	r1, #2
   165d4:	bl	11964 <open64@plt>
   165d8:	cmn	r0, #1
   165dc:	mov	r4, r0
   165e0:	beq	16540 <__assert_fail@plt+0x48e8>
   165e4:	mov	r1, #0
   165e8:	bl	118bc <dup2@plt>
   165ec:	mov	r1, #1
   165f0:	mov	r0, r4
   165f4:	bl	118bc <dup2@plt>
   165f8:	mov	r1, #2
   165fc:	mov	r0, r4
   16600:	bl	118bc <dup2@plt>
   16604:	cmp	r4, #2
   16608:	ble	16540 <__assert_fail@plt+0x48e8>
   1660c:	mov	r0, r4
   16610:	bl	11c28 <close@plt>
   16614:	b	16540 <__assert_fail@plt+0x48e8>
   16618:	movw	r1, #25740	; 0x648c
   1661c:	movt	r1, #1
   16620:	mov	r0, #14
   16624:	bl	11838 <signal@plt>
   16628:	mov	r0, r7
   1662c:	bl	118a4 <alarm@plt>
   16630:	bl	117a8 <pause@plt>
   16634:	mov	r0, #0
   16638:	bl	11820 <_exit@plt>
   1663c:	mov	r4, #64	; 0x40
   16640:	b	165b0 <__assert_fail@plt+0x4958>

00016644 <daemon@@Base>:
   16644:	strd	r4, [sp, #-16]!
   16648:	mov	r5, r1
   1664c:	str	r6, [sp, #8]
   16650:	mov	r6, r0
   16654:	str	lr, [sp, #12]
   16658:	bl	119e8 <getpid@plt>
   1665c:	mov	r4, r0
   16660:	bl	11afc <fork@plt>
   16664:	cmn	r0, #1
   16668:	beq	166ec <daemon@@Base+0xa8>
   1666c:	cmp	r0, #0
   16670:	bne	166d0 <daemon@@Base+0x8c>
   16674:	bl	11a18 <setsid@plt>
   16678:	cmn	r0, #1
   1667c:	beq	166ec <daemon@@Base+0xa8>
   16680:	mov	r1, #1
   16684:	mov	r0, r1
   16688:	bl	11838 <signal@plt>
   1668c:	bl	11afc <fork@plt>
   16690:	cmn	r0, #1
   16694:	beq	166ec <daemon@@Base+0xa8>
   16698:	cmp	r0, #0
   1669c:	bne	166d0 <daemon@@Base+0x8c>
   166a0:	cmp	r6, #0
   166a4:	beq	166d8 <daemon@@Base+0x94>
   166a8:	cmp	r5, #0
   166ac:	beq	16700 <daemon@@Base+0xbc>
   166b0:	cmn	r4, #1
   166b4:	ldrd	r4, [sp]
   166b8:	movne	r0, #0
   166bc:	moveq	r0, #1
   166c0:	ldr	r6, [sp, #8]
   166c4:	add	sp, sp, #12
   166c8:	rsb	r0, r0, #0
   166cc:	pop	{pc}		; (ldr pc, [sp], #4)
   166d0:	mov	r0, #0
   166d4:	bl	11820 <_exit@plt>
   166d8:	movw	r0, #62932	; 0xf5d4
   166dc:	movt	r0, #1
   166e0:	bl	118e0 <chdir@plt>
   166e4:	cmp	r0, #0
   166e8:	bge	166a8 <daemon@@Base+0x64>
   166ec:	ldrd	r4, [sp]
   166f0:	mvn	r0, #0
   166f4:	ldr	r6, [sp, #8]
   166f8:	add	sp, sp, #12
   166fc:	pop	{pc}		; (ldr pc, [sp], #4)
   16700:	mov	r0, #4
   16704:	bl	118b0 <sysconf@plt>
   16708:	cmn	r0, #1
   1670c:	mov	r6, r0
   16710:	beq	16784 <daemon@@Base+0x140>
   16714:	cmp	r0, #0
   16718:	ble	16730 <daemon@@Base+0xec>
   1671c:	mov	r0, r5
   16720:	add	r5, r5, #1
   16724:	bl	11c28 <close@plt>
   16728:	cmp	r6, r5
   1672c:	bgt	1671c <daemon@@Base+0xd8>
   16730:	movw	r0, #62936	; 0xf5d8
   16734:	movt	r0, #1
   16738:	mov	r2, #0
   1673c:	mov	r1, #2
   16740:	bl	11964 <open64@plt>
   16744:	cmn	r0, #1
   16748:	mov	r5, r0
   1674c:	beq	166b0 <daemon@@Base+0x6c>
   16750:	mov	r1, #0
   16754:	bl	118bc <dup2@plt>
   16758:	mov	r1, #1
   1675c:	mov	r0, r5
   16760:	bl	118bc <dup2@plt>
   16764:	mov	r1, #2
   16768:	mov	r0, r5
   1676c:	bl	118bc <dup2@plt>
   16770:	cmp	r5, #2
   16774:	ble	166b0 <daemon@@Base+0x6c>
   16778:	mov	r0, r5
   1677c:	bl	11c28 <close@plt>
   16780:	b	166b0 <daemon@@Base+0x6c>
   16784:	mov	r6, #64	; 0x40
   16788:	b	1671c <daemon@@Base+0xd8>
   1678c:	ldr	r3, [r0]
   16790:	strd	r4, [sp, #-16]!
   16794:	ldr	r5, [r0, #16]
   16798:	str	r6, [sp, #8]
   1679c:	str	lr, [sp, #12]
   167a0:	cmp	r3, #0
   167a4:	beq	16850 <daemon@@Base+0x20c>
   167a8:	ldr	r0, [r1, #8]
   167ac:	mov	r2, #0
   167b0:	add	r0, r0, #1
   167b4:	str	r0, [r1, #8]
   167b8:	b	167c0 <daemon@@Base+0x17c>
   167bc:	add	r2, r2, #1
   167c0:	add	r3, r3, #24
   167c4:	ldr	r0, [r3, #-20]	; 0xffffffec
   167c8:	cmp	r0, #0
   167cc:	bne	167bc <daemon@@Base+0x178>
   167d0:	ldr	r0, [r3, #-24]	; 0xffffffe8
   167d4:	cmp	r0, #0
   167d8:	bne	167bc <daemon@@Base+0x178>
   167dc:	ldr	r0, [r3, #-8]
   167e0:	cmp	r0, #0
   167e4:	bne	167bc <daemon@@Base+0x178>
   167e8:	ldr	r0, [r3, #-4]
   167ec:	cmp	r0, #0
   167f0:	bne	167bc <daemon@@Base+0x178>
   167f4:	ldm	r1, {r0, r3}
   167f8:	add	ip, r2, r2, lsl #1
   167fc:	add	r2, r3, r2
   16800:	add	r0, r0, ip
   16804:	stm	r1, {r0, r2}
   16808:	cmp	r5, #0
   1680c:	beq	16840 <daemon@@Base+0x1fc>
   16810:	ldr	r0, [r5]
   16814:	cmp	r0, #0
   16818:	beq	16840 <daemon@@Base+0x1fc>
   1681c:	mov	r4, r1
   16820:	mov	r1, r4
   16824:	bl	1678c <daemon@@Base+0x148>
   16828:	ldr	r3, [r4, #12]
   1682c:	ldr	r0, [r5, #16]!
   16830:	add	r3, r3, #1
   16834:	cmp	r0, #0
   16838:	str	r3, [r4, #12]
   1683c:	bne	16820 <daemon@@Base+0x1dc>
   16840:	ldrd	r4, [sp]
   16844:	ldr	r6, [sp, #8]
   16848:	add	sp, sp, #12
   1684c:	pop	{pc}		; (ldr pc, [sp], #4)
   16850:	ldr	r3, [r0, #4]
   16854:	cmp	r3, #0
   16858:	beq	16808 <daemon@@Base+0x1c4>
   1685c:	ldr	r3, [r1, #8]
   16860:	add	r3, r3, #1
   16864:	str	r3, [r1, #8]
   16868:	b	16808 <daemon@@Base+0x1c4>
   1686c:	cmp	r0, #86	; 0x56
   16870:	beq	1687c <daemon@@Base+0x238>
   16874:	mov	r0, #7
   16878:	bx	lr
   1687c:	movw	r3, #5304	; 0x14b8
   16880:	movt	r3, #3
   16884:	str	r4, [sp, #-8]!
   16888:	ldr	r3, [r3]
   1688c:	mov	r4, r2
   16890:	str	lr, [sp, #4]
   16894:	cmp	r3, #0
   16898:	beq	168c8 <daemon@@Base+0x284>
   1689c:	mov	r1, r2
   168a0:	ldr	r0, [r2, #48]	; 0x30
   168a4:	blx	r3
   168a8:	ldr	r0, [r4, #16]
   168ac:	ands	r0, r0, #32
   168b0:	beq	168c4 <daemon@@Base+0x280>
   168b4:	ldr	r4, [sp]
   168b8:	add	sp, sp, #4
   168bc:	mov	r0, #0
   168c0:	pop	{pc}		; (ldr pc, [sp], #4)
   168c4:	bl	119f4 <exit@plt>
   168c8:	movw	r3, #5664	; 0x1620
   168cc:	movt	r3, #3
   168d0:	ldr	r2, [r3]
   168d4:	cmp	r2, #0
   168d8:	beq	168f0 <daemon@@Base+0x2ac>
   168dc:	movw	r1, #63632	; 0xf890
   168e0:	movt	r1, #1
   168e4:	ldr	r0, [r4, #48]	; 0x30
   168e8:	bl	11a3c <fprintf@plt>
   168ec:	b	168a8 <daemon@@Base+0x264>
   168f0:	movw	r2, #63228	; 0xf6fc
   168f4:	movt	r2, #1
   168f8:	movw	r1, #61008	; 0xee50
   168fc:	movt	r1, #1
   16900:	mov	r0, r4
   16904:	bl	1cca4 <argp_error@@Base>
   16908:	b	168a8 <daemon@@Base+0x264>
   1690c:	cmn	r0, #3
   16910:	str	r4, [sp, #-8]!
   16914:	mov	r4, r2
   16918:	str	lr, [sp, #4]
   1691c:	sub	sp, sp, #8
   16920:	beq	16a20 <daemon@@Base+0x3dc>
   16924:	ble	1695c <daemon@@Base+0x318>
   16928:	cmn	r0, #2
   1692c:	beq	169d4 <daemon@@Base+0x390>
   16930:	cmp	r0, #63	; 0x3f
   16934:	bne	169c0 <daemon@@Base+0x37c>
   16938:	mov	r0, r4
   1693c:	movw	r2, #634	; 0x27a
   16940:	ldr	r1, [r4, #48]	; 0x30
   16944:	bl	1cbe4 <argp_state_help@@Base>
   16948:	mov	r0, #0
   1694c:	add	sp, sp, #8
   16950:	ldr	r4, [sp]
   16954:	add	sp, sp, #4
   16958:	pop	{pc}		; (ldr pc, [sp], #4)
   1695c:	cmn	r0, #4
   16960:	bne	169c0 <daemon@@Base+0x37c>
   16964:	cmp	r1, #0
   16968:	movw	r0, #63264	; 0xf720
   1696c:	movt	r0, #1
   16970:	mov	r2, #10
   16974:	movne	r0, r1
   16978:	movw	r4, #5300	; 0x14b4
   1697c:	movt	r4, #3
   16980:	mov	r1, #0
   16984:	bl	11784 <strtol@plt>
   16988:	str	r0, [r4]
   1698c:	b	16998 <daemon@@Base+0x354>
   16990:	mov	r0, #1
   16994:	bl	11874 <sleep@plt>
   16998:	ldr	r3, [r4]
   1699c:	sub	r2, r3, #1
   169a0:	cmp	r3, #0
   169a4:	str	r2, [r4]
   169a8:	bgt	16990 <daemon@@Base+0x34c>
   169ac:	mov	r0, #0
   169b0:	add	sp, sp, #8
   169b4:	ldr	r4, [sp]
   169b8:	add	sp, sp, #4
   169bc:	pop	{pc}		; (ldr pc, [sp], #4)
   169c0:	mov	r0, #7
   169c4:	add	sp, sp, #8
   169c8:	ldr	r4, [sp]
   169cc:	add	sp, sp, #4
   169d0:	pop	{pc}		; (ldr pc, [sp], #4)
   169d4:	movw	r3, #5044	; 0x13b4
   169d8:	movt	r3, #3
   169dc:	str	r1, [sp, #4]
   169e0:	mov	r0, r1
   169e4:	str	r1, [r3]
   169e8:	bl	17cb4 <argp_parse@@Base+0xf64>
   169ec:	ldr	r3, [r4, #16]
   169f0:	movw	r2, #5040	; 0x13b0
   169f4:	movt	r2, #3
   169f8:	str	r0, [r4, #40]	; 0x28
   169fc:	str	r0, [r2]
   16a00:	ldr	r1, [sp, #4]
   16a04:	and	r3, r3, #3
   16a08:	cmp	r3, #1
   16a0c:	bne	169ac <daemon@@Base+0x368>
   16a10:	ldr	r3, [r4, #8]
   16a14:	mov	r0, #0
   16a18:	str	r1, [r3]
   16a1c:	b	1694c <daemon@@Base+0x308>
   16a20:	ldr	r1, [r4, #48]	; 0x30
   16a24:	mov	r0, r4
   16a28:	movw	r2, #513	; 0x201
   16a2c:	bl	1cbe4 <argp_state_help@@Base>
   16a30:	mov	r0, #0
   16a34:	add	sp, sp, #8
   16a38:	ldr	r4, [sp]
   16a3c:	add	sp, sp, #4
   16a40:	pop	{pc}		; (ldr pc, [sp], #4)
   16a44:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16a48:	strd	r6, [sp, #8]
   16a4c:	strd	r8, [sp, #16]
   16a50:	strd	sl, [sp, #24]
   16a54:	str	lr, [sp, #32]
   16a58:	sub	sp, sp, #44	; 0x2c
   16a5c:	ldr	fp, [r0]
   16a60:	str	r3, [sp, #16]
   16a64:	ldr	r3, [r0, #16]
   16a68:	ldr	r7, [sp, #80]	; 0x50
   16a6c:	cmp	fp, #0
   16a70:	str	r3, [sp, #24]
   16a74:	strd	r0, [sp, #28]
   16a78:	str	r2, [sp, #36]	; 0x24
   16a7c:	beq	16d28 <daemon@@Base+0x6e4>
   16a80:	ldr	r9, [r7, #4]
   16a84:	movw	r3, #36409	; 0x8e39
   16a88:	movt	r3, #14563	; 0x38e3
   16a8c:	mov	r4, fp
   16a90:	str	r3, [sp, #20]
   16a94:	ldr	r6, [r4, #4]
   16a98:	cmp	r6, #0
   16a9c:	bne	16aac <daemon@@Base+0x468>
   16aa0:	ldr	r3, [r4]
   16aa4:	cmp	r3, #0
   16aa8:	beq	16c20 <daemon@@Base+0x5dc>
   16aac:	ldr	r3, [r4, #12]
   16ab0:	tst	r3, #4
   16ab4:	moveq	r5, r3
   16ab8:	moveq	fp, r4
   16abc:	ldrne	r5, [fp, #12]
   16ac0:	ands	r5, r5, #8
   16ac4:	bne	16c08 <daemon@@Base+0x5c4>
   16ac8:	tst	r3, #8
   16acc:	bne	16b4c <daemon@@Base+0x508>
   16ad0:	sub	r3, r6, #1
   16ad4:	cmp	r3, #254	; 0xfe
   16ad8:	bhi	16b4c <daemon@@Base+0x508>
   16adc:	bl	119dc <__ctype_b_loc@plt>
   16ae0:	ldr	r1, [r0]
   16ae4:	lsl	r3, r6, #1
   16ae8:	ldrh	r3, [r1, r3]
   16aec:	tst	r3, #16384	; 0x4000
   16af0:	beq	16b4c <daemon@@Base+0x508>
   16af4:	add	r3, r9, #1
   16af8:	str	r3, [r7, #4]
   16afc:	strb	r6, [r9]
   16b00:	ldr	r3, [fp, #8]
   16b04:	cmp	r3, #0
   16b08:	beq	16b3c <daemon@@Base+0x4f8>
   16b0c:	ldr	r3, [r7, #4]
   16b10:	mov	r2, #58	; 0x3a
   16b14:	add	r1, r3, #1
   16b18:	str	r1, [r7, #4]
   16b1c:	strb	r2, [r3]
   16b20:	ldr	r3, [fp, #12]
   16b24:	tst	r3, #1
   16b28:	beq	16b3c <daemon@@Base+0x4f8>
   16b2c:	ldr	r3, [r7, #4]
   16b30:	add	r1, r3, #1
   16b34:	str	r1, [r7, #4]
   16b38:	strb	r2, [r3]
   16b3c:	ldr	r3, [r7, #4]
   16b40:	mov	r2, #0
   16b44:	strb	r2, [r3]
   16b48:	ldr	r9, [r7, #4]
   16b4c:	ldr	sl, [r4]
   16b50:	cmp	sl, #0
   16b54:	beq	16c08 <daemon@@Base+0x5c4>
   16b58:	ldr	r3, [r7]
   16b5c:	ldr	r8, [r3, #8]
   16b60:	str	r3, [sp, #12]
   16b64:	ldr	r0, [r8]
   16b68:	cmp	r0, #0
   16b6c:	beq	16b90 <daemon@@Base+0x54c>
   16b70:	mov	r6, r8
   16b74:	mov	r1, sl
   16b78:	bl	11778 <strcmp@plt>
   16b7c:	cmp	r0, #0
   16b80:	beq	16c10 <daemon@@Base+0x5cc>
   16b84:	ldr	r0, [r6, #16]!
   16b88:	cmp	r0, #0
   16b8c:	bne	16b74 <daemon@@Base+0x530>
   16b90:	ldr	r0, [fp, #8]
   16b94:	ldr	r1, [r7, #8]
   16b98:	cmp	r0, #0
   16b9c:	str	sl, [r1]
   16ba0:	beq	16bb4 <daemon@@Base+0x570>
   16ba4:	ldr	r3, [fp, #12]
   16ba8:	tst	r3, #1
   16bac:	movne	r5, #2
   16bb0:	moveq	r5, #1
   16bb4:	str	r5, [r1, #4]
   16bb8:	mov	r3, #0
   16bbc:	add	ip, r1, #16
   16bc0:	ldr	r0, [r4, #4]
   16bc4:	str	r3, [r1, #8]
   16bc8:	ldr	r2, [sp, #16]
   16bcc:	cmp	r0, r3
   16bd0:	ldr	r3, [sp, #12]
   16bd4:	ldreq	r0, [fp, #4]
   16bd8:	ldr	r3, [r3, #48]	; 0x30
   16bdc:	bic	r0, r0, #-16777216	; 0xff000000
   16be0:	sub	r3, r2, r3
   16be4:	ldr	r2, [sp, #20]
   16be8:	asr	r3, r3, #2
   16bec:	mul	r3, r2, r3
   16bf0:	add	r3, r3, #1
   16bf4:	add	r3, r0, r3, lsl #24
   16bf8:	str	r3, [r1, #12]
   16bfc:	mov	r3, #0
   16c00:	str	ip, [r7, #8]
   16c04:	str	r3, [r1, #16]
   16c08:	add	r4, r4, #24
   16c0c:	b	16a94 <daemon@@Base+0x450>
   16c10:	sub	r6, r6, r8
   16c14:	cmp	r6, #0
   16c18:	bge	16c08 <daemon@@Base+0x5c4>
   16c1c:	b	16b90 <daemon@@Base+0x54c>
   16c20:	ldr	r3, [r4, #16]
   16c24:	cmp	r3, #0
   16c28:	bne	16aac <daemon@@Base+0x468>
   16c2c:	ldr	r3, [r4, #20]
   16c30:	cmp	r3, #0
   16c34:	bne	16aac <daemon@@Base+0x468>
   16c38:	ldr	r3, [sp, #28]
   16c3c:	ldr	r2, [r3, #4]
   16c40:	mov	r3, #0
   16c44:	ldr	r1, [sp, #16]
   16c48:	ldr	r0, [sp, #24]
   16c4c:	str	r2, [r1]
   16c50:	mov	r2, r1
   16c54:	ldr	r1, [sp, #28]
   16c58:	cmp	r0, r3
   16c5c:	stmib	r2, {r1, r9}
   16c60:	ldr	r1, [sp, #32]
   16c64:	str	r3, [r2, #12]
   16c68:	str	r1, [r2, #16]
   16c6c:	ldr	r1, [sp, #36]	; 0x24
   16c70:	str	r3, [r2, #24]
   16c74:	str	r3, [r2, #28]
   16c78:	str	r3, [r2, #32]
   16c7c:	str	r1, [r2, #20]
   16c80:	beq	16cbc <daemon@@Base+0x678>
   16c84:	ldr	r2, [r0]
   16c88:	cmp	r2, r3
   16c8c:	beq	16d48 <daemon@@Base+0x704>
   16c90:	mov	r1, r0
   16c94:	add	r3, r3, #1
   16c98:	ldr	r2, [r1, r3, lsl #4]
   16c9c:	cmp	r2, #0
   16ca0:	bne	16c94 <daemon@@Base+0x650>
   16ca4:	lsl	r3, r3, #2
   16ca8:	ldr	r2, [r7, #12]
   16cac:	ldr	r1, [sp, #16]
   16cb0:	add	r3, r2, r3
   16cb4:	str	r2, [r1, #28]
   16cb8:	str	r3, [r7, #12]
   16cbc:	ldr	r3, [sp, #16]
   16cc0:	add	r0, r3, #36	; 0x24
   16cc4:	ldr	r5, [sp, #24]
   16cc8:	cmp	r5, #0
   16ccc:	beq	16d0c <daemon@@Base+0x6c8>
   16cd0:	ldr	r1, [r5]
   16cd4:	cmp	r1, #0
   16cd8:	beq	16d0c <daemon@@Base+0x6c8>
   16cdc:	ldr	r6, [sp, #16]
   16ce0:	mov	r2, #0
   16ce4:	add	r4, r2, #1
   16ce8:	mov	r3, r0
   16cec:	str	r7, [sp]
   16cf0:	mov	r0, r1
   16cf4:	mov	r1, r6
   16cf8:	bl	16a44 <daemon@@Base+0x400>
   16cfc:	ldr	r1, [r5, r4, lsl #4]
   16d00:	mov	r2, r4
   16d04:	cmp	r1, #0
   16d08:	bne	16ce4 <daemon@@Base+0x6a0>
   16d0c:	add	sp, sp, #44	; 0x2c
   16d10:	ldrd	r4, [sp]
   16d14:	ldrd	r6, [sp, #8]
   16d18:	ldrd	r8, [sp, #16]
   16d1c:	ldrd	sl, [sp, #24]
   16d20:	add	sp, sp, #32
   16d24:	pop	{pc}		; (ldr pc, [sp], #4)
   16d28:	ldr	r2, [r0, #4]
   16d2c:	cmp	r2, #0
   16d30:	beq	16d3c <daemon@@Base+0x6f8>
   16d34:	ldr	r9, [r7, #4]
   16d38:	b	16c40 <daemon@@Base+0x5fc>
   16d3c:	ldr	r0, [sp, #16]
   16d40:	str	r2, [sp, #16]
   16d44:	b	16cc4 <daemon@@Base+0x680>
   16d48:	mov	r3, r2
   16d4c:	b	16ca8 <daemon@@Base+0x664>

00016d50 <argp_parse@@Base>:
   16d50:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16d54:	tst	r3, #1
   16d58:	mov	r4, r3
   16d5c:	strd	r6, [sp, #8]
   16d60:	strd	r8, [sp, #16]
   16d64:	strd	sl, [sp, #24]
   16d68:	add	fp, sp, #32
   16d6c:	str	lr, [sp, #32]
   16d70:	sub	sp, sp, #236	; 0xec
   16d74:	str	r1, [fp, #-256]	; 0xffffff00
   16d78:	str	r2, [fp, #-236]	; 0xffffff14
   16d7c:	str	r0, [fp, #-232]	; 0xffffff18
   16d80:	bne	16dac <argp_parse@@Base+0x5c>
   16d84:	movw	r3, #5044	; 0x13b4
   16d88:	movt	r3, #3
   16d8c:	ldr	r2, [r3]
   16d90:	cmp	r2, #0
   16d94:	beq	177d8 <argp_parse@@Base+0xa88>
   16d98:	movw	r5, #5040	; 0x13b0
   16d9c:	movt	r5, #3
   16da0:	ldr	r3, [r5]
   16da4:	cmp	r3, #0
   16da8:	beq	177e8 <argp_parse@@Base+0xa98>
   16dac:	ands	r3, r4, #4
   16db0:	moveq	r5, #1
   16db4:	movne	r5, #0
   16db8:	ands	ip, r4, #16
   16dbc:	str	r3, [fp, #-240]	; 0xffffff10
   16dc0:	beq	16e18 <argp_parse@@Base+0xc8>
   16dc4:	ldr	r2, [fp, #-232]	; 0xffffff18
   16dc8:	mov	r3, #0
   16dcc:	sub	r9, fp, #196	; 0xc4
   16dd0:	str	r5, [fp, #-228]	; 0xffffff1c
   16dd4:	str	r3, [fp, #-224]	; 0xffffff20
   16dd8:	str	r3, [fp, #-220]	; 0xffffff24
   16ddc:	str	r3, [fp, #-216]	; 0xffffff28
   16de0:	cmp	r2, r3
   16de4:	str	r3, [r9, #8]
   16de8:	str	r3, [r9, #12]
   16dec:	str	r3, [r9, #16]
   16df0:	str	r3, [r9, #20]
   16df4:	str	r3, [r9, #24]
   16df8:	str	r3, [r9, #28]
   16dfc:	str	r3, [r9, #32]
   16e00:	bne	16ecc <argp_parse@@Base+0x17c>
   16e04:	mov	r3, #52	; 0x34
   16e08:	mov	sl, #36	; 0x24
   16e0c:	str	r3, [fp, #-240]	; 0xffffff10
   16e10:	mov	r3, sl
   16e14:	b	16f08 <argp_parse@@Base+0x1b8>
   16e18:	sub	sp, sp, #64	; 0x40
   16e1c:	mov	r1, ip
   16e20:	add	r3, sp, #8
   16e24:	sub	sp, sp, #32
   16e28:	add	r7, sp, #8
   16e2c:	mov	r0, r3
   16e30:	mov	r2, #64	; 0x40
   16e34:	str	ip, [r7]
   16e38:	str	ip, [r7, #4]
   16e3c:	str	ip, [r7, #8]
   16e40:	str	ip, [r7, #12]
   16e44:	str	r3, [r7, #16]
   16e48:	str	ip, [r7, #20]
   16e4c:	str	ip, [r7, #24]
   16e50:	bl	11a84 <memset@plt>
   16e54:	ldr	r2, [fp, #-232]	; 0xffffff18
   16e58:	mov	r3, r0
   16e5c:	cmp	r2, #0
   16e60:	strne	r2, [r3], #16
   16e64:	movw	r2, #5664	; 0x1620
   16e68:	movt	r2, #3
   16e6c:	ldr	r1, [r2]
   16e70:	movw	r2, #62948	; 0xf5e4
   16e74:	movt	r2, #1
   16e78:	str	r2, [r3]
   16e7c:	cmp	r1, #0
   16e80:	beq	17974 <argp_parse@@Base+0xc24>
   16e84:	ldr	r1, [pc, #3444]	; 17c00 <argp_parse@@Base+0xeb0>
   16e88:	add	r2, r3, #32
   16e8c:	str	r1, [r3, #16]
   16e90:	mov	r3, #0
   16e94:	sub	r9, fp, #196	; 0xc4
   16e98:	str	r7, [fp, #-232]	; 0xffffff18
   16e9c:	str	r5, [fp, #-228]	; 0xffffff1c
   16ea0:	str	r3, [fp, #-224]	; 0xffffff20
   16ea4:	str	r3, [fp, #-220]	; 0xffffff24
   16ea8:	str	r3, [fp, #-216]	; 0xffffff28
   16eac:	str	r3, [r2]
   16eb0:	str	r3, [r9, #8]
   16eb4:	str	r3, [r9, #12]
   16eb8:	str	r3, [r9, #16]
   16ebc:	str	r3, [r9, #20]
   16ec0:	str	r3, [r9, #24]
   16ec4:	str	r3, [r9, #28]
   16ec8:	str	r3, [r9, #32]
   16ecc:	sub	r1, fp, #228	; 0xe4
   16ed0:	ldr	r0, [fp, #-232]	; 0xffffff18
   16ed4:	bl	1678c <daemon@@Base+0x148>
   16ed8:	ldr	r5, [fp, #-228]	; 0xffffff1c
   16edc:	ldr	r3, [fp, #-220]	; 0xffffff24
   16ee0:	ldr	r2, [fp, #-216]	; 0xffffff28
   16ee4:	ldr	r7, [fp, #-224]	; 0xffffff20
   16ee8:	add	r3, r3, #1
   16eec:	add	r3, r3, r3, lsl #3
   16ef0:	lsl	r2, r2, #2
   16ef4:	lsl	r3, r3, #2
   16ef8:	add	r7, r7, #1
   16efc:	add	sl, r2, r3
   16f00:	add	r1, sl, r7, lsl #4
   16f04:	str	r1, [fp, #-240]	; 0xffffff10
   16f08:	str	r3, [fp, #-252]	; 0xffffff04
   16f0c:	ldr	r3, [fp, #-240]	; 0xffffff10
   16f10:	str	r2, [fp, #-244]	; 0xffffff0c
   16f14:	add	r0, r3, r5
   16f18:	add	r0, r0, #1
   16f1c:	bl	18b40 <argp_parse@@Base+0x1df0>
   16f20:	cmp	r0, #0
   16f24:	mov	r5, r0
   16f28:	str	r0, [fp, #-40]	; 0xffffffd8
   16f2c:	moveq	r5, #12
   16f30:	ldr	r3, [fp, #-252]	; 0xffffff04
   16f34:	ldr	r2, [fp, #-244]	; 0xffffff0c
   16f38:	beq	1744c <argp_parse@@Base+0x6fc>
   16f3c:	add	ip, r5, sl
   16f40:	add	r3, r5, r3
   16f44:	ldr	r1, [fp, #-240]	; 0xffffff10
   16f48:	str	ip, [fp, #-244]	; 0xffffff0c
   16f4c:	ldrd	r6, [r9, #8]
   16f50:	str	ip, [fp, #-152]	; 0xffffff68
   16f54:	add	sl, r5, r1
   16f58:	ldrd	r0, [r9, #16]
   16f5c:	str	r5, [fp, #-112]	; 0xffffff90
   16f60:	strd	r6, [fp, #-140]	; 0xffffff74
   16f64:	ldrd	r6, [r9, #24]
   16f68:	strd	r0, [fp, #-252]	; 0xffffff04
   16f6c:	mov	r0, r3
   16f70:	ldr	r1, [r9, #32]
   16f74:	str	sl, [fp, #-156]	; 0xffffff64
   16f78:	ldrd	r8, [fp, #-252]	; 0xffffff04
   16f7c:	str	r3, [fp, #-104]	; 0xffffff98
   16f80:	strd	r8, [fp, #-132]	; 0xffffff7c
   16f84:	mov	r9, #1
   16f88:	mov	r8, #1
   16f8c:	str	r1, [fp, #-116]	; 0xffffff8c
   16f90:	mov	r1, #0
   16f94:	strd	r8, [fp, #-196]	; 0xffffff3c
   16f98:	strd	r8, [fp, #-148]	; 0xffffff6c
   16f9c:	sub	r9, fp, #160	; 0xa0
   16fa0:	strd	r6, [fp, #-124]	; 0xffffff84
   16fa4:	bl	11a84 <memset@plt>
   16fa8:	ldr	ip, [fp, #-244]	; 0xffffff0c
   16fac:	tst	r4, #8
   16fb0:	str	r9, [fp, #-212]	; 0xffffff2c
   16fb4:	str	sl, [fp, #-208]	; 0xffffff30
   16fb8:	str	ip, [fp, #-204]	; 0xffffff34
   16fbc:	str	r0, [fp, #-200]	; 0xffffff38
   16fc0:	bne	1746c <argp_parse@@Base+0x71c>
   16fc4:	ands	r3, r4, #4
   16fc8:	cmp	r3, #0
   16fcc:	moveq	r3, sl
   16fd0:	moveq	r2, ip
   16fd4:	beq	16fec <argp_parse@@Base+0x29c>
   16fd8:	mov	r2, #43	; 0x2b
   16fdc:	add	r3, sl, #1
   16fe0:	strb	r2, [sl]
   16fe4:	mov	r2, ip
   16fe8:	str	r3, [fp, #-208]	; 0xffffff30
   16fec:	ldr	r0, [fp, #-232]	; 0xffffff18
   16ff0:	mov	r5, #0
   16ff4:	strb	r5, [r3]
   16ff8:	str	r5, [r2]
   16ffc:	cmp	r0, r5
   17000:	str	r0, [fp, #-160]	; 0xffffff60
   17004:	beq	17658 <argp_parse@@Base+0x908>
   17008:	sub	ip, fp, #212	; 0xd4
   1700c:	mov	r2, r5
   17010:	ldr	r3, [fp, #-112]	; 0xffffff90
   17014:	mov	r1, r5
   17018:	str	ip, [sp]
   1701c:	bl	16a44 <daemon@@Base+0x400>
   17020:	movw	r1, #5048	; 0x13b8
   17024:	movt	r1, #3
   17028:	ldr	r6, [fp, #-236]	; 0xffffff14
   1702c:	mov	lr, #1
   17030:	movw	r2, #5052	; 0x13bc
   17034:	movt	r2, #3
   17038:	ldr	r3, [fp, #-112]	; 0xffffff90
   1703c:	str	r0, [fp, #-108]	; 0xffffff94
   17040:	ldr	ip, [r1]
   17044:	str	lr, [fp, #-100]	; 0xffffff9c
   17048:	ldr	r1, [fp, #-256]	; 0xffffff00
   1704c:	cmp	r0, r3
   17050:	mov	r0, #0
   17054:	ldr	lr, [fp, #-160]	; 0xffffff60
   17058:	movls	r3, r6
   1705c:	ldr	r2, [r2]
   17060:	str	ip, [fp, #-52]	; 0xffffffcc
   17064:	str	r9, [fp, #-44]	; 0xffffffd4
   17068:	str	r1, [fp, #-92]	; 0xffffffa4
   1706c:	mov	r1, #0
   17070:	str	lr, [fp, #-96]	; 0xffffffa0
   17074:	str	r6, [fp, #-88]	; 0xffffffa8
   17078:	str	r5, [fp, #-84]	; 0xffffffac
   1707c:	str	r4, [fp, #-80]	; 0xffffffb0
   17080:	strd	r0, [fp, #-76]	; 0xffffffb4
   17084:	strd	r0, [fp, #-68]	; 0xffffffbc
   17088:	strd	r0, [fp, #-60]	; 0xffffffc4
   1708c:	str	r2, [fp, #-48]	; 0xffffffd0
   17090:	bls	17178 <argp_parse@@Base+0x428>
   17094:	ldr	r2, [fp, #8]
   17098:	mov	r8, r6
   1709c:	add	r4, r3, #36	; 0x24
   170a0:	mov	r6, #3
   170a4:	movt	r6, #256	; 0x100
   170a8:	str	r2, [r3, #24]
   170ac:	b	170f8 <argp_parse@@Base+0x3a8>
   170b0:	ldr	r7, [r4, #-24]	; 0xffffffe8
   170b4:	ldr	r5, [r4, #-12]
   170b8:	ldr	lr, [r4, #-8]
   170bc:	ldr	ip, [r4, #-4]
   170c0:	str	r7, [fp, #-76]	; 0xffffffb4
   170c4:	str	r5, [fp, #-68]	; 0xffffffbc
   170c8:	str	lr, [fp, #-64]	; 0xffffffc0
   170cc:	str	ip, [fp, #-60]	; 0xffffffc4
   170d0:	blx	r3
   170d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   170d8:	str	r3, [r4, #-4]
   170dc:	ldr	r3, [fp, #-108]	; 0xffffff94
   170e0:	cmp	r3, r4
   170e4:	bls	1770c <argp_parse@@Base+0x9bc>
   170e8:	cmp	r0, #7
   170ec:	cmpne	r0, #0
   170f0:	bne	176fc <argp_parse@@Base+0x9ac>
   170f4:	add	r4, r4, #36	; 0x24
   170f8:	ldr	r3, [r4, #-20]	; 0xffffffec
   170fc:	mov	r1, #0
   17100:	sub	r2, fp, #96	; 0x60
   17104:	mov	r0, r6
   17108:	cmp	r3, r1
   1710c:	beq	17120 <argp_parse@@Base+0x3d0>
   17110:	ldr	ip, [r4, #-16]
   17114:	ldr	r3, [r3, #28]
   17118:	ldr	r3, [r3, ip, lsl #2]
   1711c:	str	r3, [r4, #-12]
   17120:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17124:	cmp	r3, #0
   17128:	bne	170b0 <argp_parse@@Base+0x360>
   1712c:	ldr	r3, [r4, #-32]	; 0xffffffe0
   17130:	ldr	r3, [r3, #16]
   17134:	cmp	r3, #0
   17138:	beq	17160 <argp_parse@@Base+0x410>
   1713c:	ldr	r3, [r3]
   17140:	cmp	r3, #0
   17144:	beq	17160 <argp_parse@@Base+0x410>
   17148:	ldr	ip, [r4, #-12]
   1714c:	ldr	r3, [r4, #-8]
   17150:	str	ip, [r3]
   17154:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17158:	cmp	r3, #0
   1715c:	bne	170b0 <argp_parse@@Base+0x360>
   17160:	ldr	r3, [fp, #-108]	; 0xffffff94
   17164:	cmp	r4, r3
   17168:	bcc	170f4 <argp_parse@@Base+0x3a4>
   1716c:	str	r8, [fp, #-236]	; 0xffffff14
   17170:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17174:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17178:	tst	r4, #2
   1717c:	beq	176cc <argp_parse@@Base+0x97c>
   17180:	tst	r4, #1
   17184:	mov	r2, #0
   17188:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1718c:	subne	r3, r3, #4
   17190:	str	r2, [fp, #-144]	; 0xffffff70
   17194:	ldr	r2, [fp, #-236]	; 0xffffff14
   17198:	strne	r3, [fp, #-88]	; 0xffffffa8
   1719c:	addne	r4, r4, #1
   171a0:	strne	r4, [fp, #-92]	; 0xffffffa4
   171a4:	cmp	r2, r3
   171a8:	beq	176e4 <argp_parse@@Base+0x994>
   171ac:	movw	r3, #5040	; 0x13b0
   171b0:	movt	r3, #3
   171b4:	ldr	r3, [r3]
   171b8:	str	r3, [fp, #-56]	; 0xffffffc8
   171bc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   171c0:	movw	r3, #63276	; 0xf72c
   171c4:	movt	r3, #1
   171c8:	mov	r9, #6
   171cc:	movt	r9, #256	; 0x100
   171d0:	ldr	r7, [fp, #-84]	; 0xffffffac
   171d4:	mov	r0, r4
   171d8:	str	r3, [fp, #-232]	; 0xffffff18
   171dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   171e0:	cmp	r3, #0
   171e4:	beq	172cc <argp_parse@@Base+0x57c>
   171e8:	cmp	r3, r7
   171ec:	movgt	r3, #0
   171f0:	strgt	r3, [fp, #-72]	; 0xffffffb8
   171f4:	bgt	172cc <argp_parse@@Base+0x57c>
   171f8:	cmp	r7, r0
   171fc:	bge	1751c <argp_parse@@Base+0x7cc>
   17200:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17204:	tst	r3, #4
   17208:	bne	17730 <argp_parse@@Base+0x9e0>
   1720c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17210:	ldr	r5, [r3, r7, lsl #2]
   17214:	str	r5, [fp, #-136]	; 0xffffff78
   17218:	ldr	r8, [fp, #-112]	; 0xffffff90
   1721c:	str	r7, [fp, #-84]	; 0xffffffac
   17220:	ldr	ip, [fp, #-108]	; 0xffffff94
   17224:	cmp	r8, ip
   17228:	bcs	17514 <argp_parse@@Base+0x7c4>
   1722c:	mov	r3, r7
   17230:	add	r4, r8, #36	; 0x24
   17234:	ldr	sl, [r4, #-36]	; 0xffffffdc
   17238:	mov	r0, #0
   1723c:	add	lr, r3, #1
   17240:	sub	r2, fp, #96	; 0x60
   17244:	mov	r1, r5
   17248:	sub	r6, r4, #36	; 0x24
   1724c:	mov	r8, r4
   17250:	str	lr, [fp, #-84]	; 0xffffffac
   17254:	cmp	sl, r0
   17258:	beq	17500 <argp_parse@@Base+0x7b0>
   1725c:	ldr	r3, [r4, #-12]
   17260:	ldr	lr, [r4, #-8]
   17264:	ldr	ip, [r4, #-4]
   17268:	str	r3, [fp, #-68]	; 0xffffffbc
   1726c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   17270:	str	r3, [fp, #-76]	; 0xffffffb4
   17274:	str	lr, [fp, #-64]	; 0xffffffc0
   17278:	str	ip, [fp, #-60]	; 0xffffffc4
   1727c:	blx	sl
   17280:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17284:	cmp	r0, #7
   17288:	str	r3, [r4, #-4]
   1728c:	beq	17488 <argp_parse@@Base+0x738>
   17290:	cmp	r0, #0
   17294:	bne	175d0 <argp_parse@@Base+0x880>
   17298:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1729c:	ldr	r3, [fp, #-84]	; 0xffffffac
   172a0:	cmp	r7, r3
   172a4:	bge	175e8 <argp_parse@@Base+0x898>
   172a8:	ldr	r1, [r4, #-24]	; 0xffffffe8
   172ac:	sub	ip, r3, r7
   172b0:	mov	r7, r3
   172b4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   172b8:	add	r3, r1, ip
   172bc:	str	r3, [r4, #-24]	; 0xffffffe8
   172c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   172c4:	cmp	r3, #0
   172c8:	bne	171e8 <argp_parse@@Base+0x498>
   172cc:	cmp	r2, #0
   172d0:	beq	171f8 <argp_parse@@Base+0x4a8>
   172d4:	mvn	r2, #0
   172d8:	str	r7, [fp, #-148]	; 0xffffff6c
   172dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   172e0:	str	r2, [fp, #-140]	; 0xffffff74
   172e4:	ldr	r2, [fp, #-156]	; 0xffffff64
   172e8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   172ec:	ands	ip, r3, #64	; 0x40
   172f0:	ldr	r3, [fp, #-152]	; 0xffffff68
   172f4:	beq	175fc <argp_parse@@Base+0x8ac>
   172f8:	mov	ip, #0
   172fc:	sub	lr, fp, #148	; 0x94
   17300:	stm	sp, {ip, lr}
   17304:	bl	17e78 <argp_parse@@Base+0x1128>
   17308:	ldr	r7, [fp, #-148]	; 0xffffff6c
   1730c:	mov	r4, r0
   17310:	cmn	r4, #1
   17314:	str	r7, [fp, #-84]	; 0xffffffac
   17318:	beq	17620 <argp_parse@@Base+0x8d0>
   1731c:	cmp	r4, #63	; 0x3f
   17320:	beq	17338 <argp_parse@@Base+0x5e8>
   17324:	cmp	r4, #1
   17328:	bne	178e4 <argp_parse@@Base+0xb94>
   1732c:	sub	r7, r7, #1
   17330:	ldr	r5, [fp, #-136]	; 0xffffff78
   17334:	b	17218 <argp_parse@@Base+0x4c8>
   17338:	ldr	r3, [fp, #-140]	; 0xffffff74
   1733c:	cmn	r3, #1
   17340:	beq	177fc <argp_parse@@Base+0xaac>
   17344:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17348:	sub	r6, fp, #96	; 0x60
   1734c:	mov	r0, r6
   17350:	mov	r2, #260	; 0x104
   17354:	mov	r5, #7
   17358:	bl	1cbe4 <argp_state_help@@Base>
   1735c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17360:	ldr	ip, [fp, #-108]	; 0xffffff94
   17364:	cmp	r3, ip
   17368:	mov	r6, r3
   1736c:	mov	r4, ip
   17370:	bcs	17b84 <argp_parse@@Base+0xe34>
   17374:	mov	r7, #5
   17378:	movt	r7, #256	; 0x100
   1737c:	ldr	r3, [r6]
   17380:	mov	r1, #0
   17384:	sub	r2, fp, #96	; 0x60
   17388:	mov	r0, r7
   1738c:	cmp	r3, r1
   17390:	beq	178c0 <argp_parse@@Base+0xb70>
   17394:	ldr	ip, [r6, #24]
   17398:	add	r6, r6, #36	; 0x24
   1739c:	ldr	r4, [r6, #-8]
   173a0:	ldr	lr, [r6, #-4]
   173a4:	str	ip, [fp, #-68]	; 0xffffffbc
   173a8:	ldr	ip, [r6, #-24]	; 0xffffffe8
   173ac:	str	ip, [fp, #-76]	; 0xffffffb4
   173b0:	str	r4, [fp, #-64]	; 0xffffffc0
   173b4:	str	lr, [fp, #-60]	; 0xffffffc4
   173b8:	blx	r3
   173bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   173c0:	str	r3, [r6, #-4]
   173c4:	ldr	r4, [fp, #-108]	; 0xffffff94
   173c8:	cmp	r6, r4
   173cc:	bcc	1737c <argp_parse@@Base+0x62c>
   173d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   173d4:	sub	r4, r4, #36	; 0x24
   173d8:	cmp	r3, r4
   173dc:	bhi	1743c <argp_parse@@Base+0x6ec>
   173e0:	mov	r7, #7
   173e4:	movt	r7, #256	; 0x100
   173e8:	ldr	r6, [r4]
   173ec:	mov	r1, #0
   173f0:	sub	r2, fp, #96	; 0x60
   173f4:	mov	r0, r7
   173f8:	cmp	r6, r1
   173fc:	beq	178b0 <argp_parse@@Base+0xb60>
   17400:	ldr	r8, [r4, #12]
   17404:	sub	r4, r4, #36	; 0x24
   17408:	ldr	lr, [r4, #60]	; 0x3c
   1740c:	ldr	ip, [r4, #64]	; 0x40
   17410:	ldr	r3, [r4, #68]	; 0x44
   17414:	str	r8, [fp, #-76]	; 0xffffffb4
   17418:	str	lr, [fp, #-68]	; 0xffffffbc
   1741c:	str	ip, [fp, #-64]	; 0xffffffc0
   17420:	str	r3, [fp, #-60]	; 0xffffffc4
   17424:	blx	r6
   17428:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1742c:	str	r3, [r4, #68]	; 0x44
   17430:	ldr	r3, [fp, #-112]	; 0xffffff90
   17434:	cmp	r3, r4
   17438:	bls	173e8 <argp_parse@@Base+0x698>
   1743c:	cmp	r5, #7
   17440:	moveq	r5, #22
   17444:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17448:	bl	17d88 <argp_parse@@Base+0x1038>
   1744c:	mov	r0, r5
   17450:	sub	sp, fp, #32
   17454:	ldrd	r4, [sp]
   17458:	ldrd	r6, [sp, #8]
   1745c:	ldrd	r8, [sp, #16]
   17460:	ldrd	sl, [sp, #24]
   17464:	add	sp, sp, #32
   17468:	pop	{pc}		; (ldr pc, [sp], #4)
   1746c:	ldr	r1, [fp, #-240]	; 0xffffff10
   17470:	mov	r2, #45	; 0x2d
   17474:	add	r3, sl, #1
   17478:	str	r3, [fp, #-208]	; 0xffffff30
   1747c:	strb	r2, [r5, r1]
   17480:	mov	r2, ip
   17484:	b	16fec <argp_parse@@Base+0x29c>
   17488:	ldr	r3, [fp, #-84]	; 0xffffffac
   1748c:	ldr	sl, [r4, #-36]	; 0xffffffdc
   17490:	sub	r3, r3, #1
   17494:	cmp	sl, #0
   17498:	str	r3, [fp, #-84]	; 0xffffffac
   1749c:	beq	17bcc <argp_parse@@Base+0xe7c>
   174a0:	ldr	r3, [r6, #24]
   174a4:	sub	r2, fp, #96	; 0x60
   174a8:	mov	r1, #0
   174ac:	mov	r0, r9
   174b0:	ldr	lr, [r6, #28]
   174b4:	ldr	ip, [r6, #32]
   174b8:	str	r3, [fp, #-68]	; 0xffffffbc
   174bc:	ldr	r3, [r6, #12]
   174c0:	str	r3, [fp, #-76]	; 0xffffffb4
   174c4:	str	lr, [fp, #-64]	; 0xffffffc0
   174c8:	str	ip, [fp, #-60]	; 0xffffffc4
   174cc:	blx	sl
   174d0:	ldr	ip, [fp, #-108]	; 0xffffff94
   174d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   174d8:	cmp	ip, r4
   174dc:	movls	r2, #0
   174e0:	movhi	r2, #1
   174e4:	cmp	r0, #7
   174e8:	str	r3, [r6, #32]
   174ec:	movne	r2, #0
   174f0:	cmp	r2, #0
   174f4:	beq	17bd4 <argp_parse@@Base+0xe84>
   174f8:	ldr	r3, [fp, #-84]	; 0xffffffac
   174fc:	b	17230 <argp_parse@@Base+0x4e0>
   17500:	str	r3, [fp, #-84]	; 0xffffffac
   17504:	add	r2, r4, #36	; 0x24
   17508:	cmp	ip, r4
   1750c:	mov	r4, r2
   17510:	bhi	17234 <argp_parse@@Base+0x4e4>
   17514:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17518:	ldr	r7, [fp, #-84]	; 0xffffffac
   1751c:	cmp	r7, r0
   17520:	bne	17730 <argp_parse@@Base+0x9e0>
   17524:	ldr	r4, [fp, #-112]	; 0xffffff90
   17528:	ldr	ip, [fp, #-108]	; 0xffffff94
   1752c:	mov	r3, r4
   17530:	cmp	r4, ip
   17534:	bcs	17b94 <argp_parse@@Base+0xe44>
   17538:	mov	r6, #2
   1753c:	movt	r6, #256	; 0x100
   17540:	mov	r5, #0
   17544:	b	1758c <argp_parse@@Base+0x83c>
   17548:	ldr	r7, [r4, #-12]
   1754c:	ldr	lr, [r4, #-8]
   17550:	ldr	ip, [r4, #-4]
   17554:	str	r3, [fp, #-76]	; 0xffffffb4
   17558:	str	r7, [fp, #-68]	; 0xffffffbc
   1755c:	str	lr, [fp, #-64]	; 0xffffffc0
   17560:	str	ip, [fp, #-60]	; 0xffffffc4
   17564:	blx	r5
   17568:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1756c:	mov	r5, r0
   17570:	str	r3, [r4, #-4]
   17574:	ldr	ip, [fp, #-108]	; 0xffffff94
   17578:	cmp	ip, r4
   1757c:	bls	17a68 <argp_parse@@Base+0xd18>
   17580:	cmp	r5, #7
   17584:	cmpne	r5, #0
   17588:	bne	17a30 <argp_parse@@Base+0xce0>
   1758c:	ldr	r3, [r4, #12]
   17590:	sub	r2, fp, #96	; 0x60
   17594:	mov	r0, r6
   17598:	add	r4, r4, #36	; 0x24
   1759c:	subs	r1, r3, #0
   175a0:	bne	17578 <argp_parse@@Base+0x828>
   175a4:	ldr	r5, [r4, #-36]	; 0xffffffdc
   175a8:	cmp	r5, #0
   175ac:	bne	17548 <argp_parse@@Base+0x7f8>
   175b0:	cmp	ip, r4
   175b4:	mov	r5, #7
   175b8:	bhi	1758c <argp_parse@@Base+0x83c>
   175bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   175c0:	sub	r4, ip, #36	; 0x24
   175c4:	cmp	r3, r4
   175c8:	bls	17a84 <argp_parse@@Base+0xd34>
   175cc:	b	17b08 <argp_parse@@Base+0xdb8>
   175d0:	mov	r5, r0
   175d4:	cmp	r5, #7
   175d8:	bne	1735c <argp_parse@@Base+0x60c>
   175dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   175e0:	sub	r6, fp, #96	; 0x60
   175e4:	b	1734c <argp_parse@@Base+0x5fc>
   175e8:	mov	r1, #1
   175ec:	mov	r7, r3
   175f0:	mov	r2, r1
   175f4:	str	r1, [fp, #-100]	; 0xffffff9c
   175f8:	b	171dc <argp_parse@@Base+0x48c>
   175fc:	str	ip, [sp]
   17600:	sub	ip, fp, #148	; 0x94
   17604:	str	ip, [sp, #4]
   17608:	bl	17e10 <argp_parse@@Base+0x10c0>
   1760c:	ldr	r7, [fp, #-148]	; 0xffffff6c
   17610:	mov	r4, r0
   17614:	cmn	r4, #1
   17618:	str	r7, [fp, #-84]	; 0xffffffac
   1761c:	bne	1731c <argp_parse@@Base+0x5cc>
   17620:	mov	r3, #0
   17624:	cmp	r7, #1
   17628:	str	r3, [fp, #-100]	; 0xffffff9c
   1762c:	ble	17704 <argp_parse@@Base+0x9b4>
   17630:	sub	r3, r7, #-1073741823	; 0xc0000001
   17634:	ldr	r1, [fp, #-232]	; 0xffffff18
   17638:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1763c:	ldr	r0, [r2, r3, lsl #2]
   17640:	bl	11778 <strcmp@plt>
   17644:	cmp	r0, #0
   17648:	bne	17704 <argp_parse@@Base+0x9b4>
   1764c:	str	r7, [fp, #-72]	; 0xffffffb8
   17650:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17654:	b	171f8 <argp_parse@@Base+0x4a8>
   17658:	ldr	r2, [fp, #-256]	; 0xffffff00
   1765c:	movw	r3, #5048	; 0x13b8
   17660:	movt	r3, #3
   17664:	mov	lr, r0
   17668:	mov	r0, #1
   1766c:	ldr	r1, [r3]
   17670:	movw	r3, #5052	; 0x13bc
   17674:	movt	r3, #3
   17678:	str	r0, [fp, #-100]	; 0xffffff9c
   1767c:	mov	r0, #0
   17680:	tst	r4, #2
   17684:	ldr	ip, [fp, #-236]	; 0xffffff14
   17688:	str	lr, [fp, #-96]	; 0xffffffa0
   1768c:	str	r2, [fp, #-92]	; 0xffffffa4
   17690:	ldr	r2, [fp, #-112]	; 0xffffff90
   17694:	ldr	r3, [r3]
   17698:	str	r2, [fp, #-108]	; 0xffffff94
   1769c:	str	r1, [fp, #-52]	; 0xffffffcc
   176a0:	mov	r1, #0
   176a4:	str	ip, [fp, #-88]	; 0xffffffa8
   176a8:	str	lr, [fp, #-84]	; 0xffffffac
   176ac:	str	r4, [fp, #-80]	; 0xffffffb0
   176b0:	strd	r0, [fp, #-76]	; 0xffffffb4
   176b4:	strd	r0, [fp, #-68]	; 0xffffffbc
   176b8:	strd	r0, [fp, #-60]	; 0xffffffc4
   176bc:	str	r3, [fp, #-48]	; 0xffffffd0
   176c0:	mov	r3, ip
   176c4:	str	r9, [fp, #-44]	; 0xffffffd4
   176c8:	bne	17180 <argp_parse@@Base+0x430>
   176cc:	mov	r2, #1
   176d0:	ldr	r4, [fp, #-92]	; 0xffffffa4
   176d4:	str	r2, [fp, #-144]	; 0xffffff70
   176d8:	ldr	r2, [fp, #-236]	; 0xffffff14
   176dc:	cmp	r2, r3
   176e0:	bne	171ac <argp_parse@@Base+0x45c>
   176e4:	ldr	r0, [r2]
   176e8:	cmp	r0, #0
   176ec:	beq	171ac <argp_parse@@Base+0x45c>
   176f0:	bl	17cb4 <argp_parse@@Base+0xf64>
   176f4:	str	r0, [fp, #-56]	; 0xffffffc8
   176f8:	b	171bc <argp_parse@@Base+0x46c>
   176fc:	mov	r5, r0
   17700:	b	1744c <argp_parse@@Base+0x6fc>
   17704:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17708:	b	171f8 <argp_parse@@Base+0x4a8>
   1770c:	cmp	r0, #7
   17710:	mov	r5, r0
   17714:	str	r8, [fp, #-236]	; 0xffffff14
   17718:	beq	17170 <argp_parse@@Base+0x420>
   1771c:	cmp	r0, #0
   17720:	bne	1744c <argp_parse@@Base+0x6fc>
   17724:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17728:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1772c:	b	17178 <argp_parse@@Base+0x428>
   17730:	ldr	r3, [fp, #4]
   17734:	cmp	r3, #0
   17738:	beq	17878 <argp_parse@@Base+0xb28>
   1773c:	str	r7, [r3]
   17740:	ldr	r3, [fp, #-112]	; 0xffffff90
   17744:	ldr	ip, [fp, #-108]	; 0xffffff94
   17748:	sub	r2, ip, #36	; 0x24
   1774c:	cmp	r3, r2
   17750:	movls	r6, #4
   17754:	subls	r4, ip, #72	; 0x48
   17758:	movtls	r6, #256	; 0x100
   1775c:	bhi	179b0 <argp_parse@@Base+0xc60>
   17760:	ldr	r5, [r4, #36]	; 0x24
   17764:	mov	r1, #0
   17768:	sub	r2, fp, #96	; 0x60
   1776c:	mov	r0, r6
   17770:	cmp	r5, r1
   17774:	beq	178d0 <argp_parse@@Base+0xb80>
   17778:	ldr	r3, [r4, #60]	; 0x3c
   1777c:	ldr	lr, [r4, #64]	; 0x40
   17780:	ldr	ip, [r4, #68]	; 0x44
   17784:	str	r3, [fp, #-68]	; 0xffffffbc
   17788:	ldr	r3, [r4, #48]	; 0x30
   1778c:	str	r3, [fp, #-76]	; 0xffffffb4
   17790:	str	lr, [fp, #-64]	; 0xffffffc0
   17794:	str	ip, [fp, #-60]	; 0xffffffc4
   17798:	blx	r5
   1779c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   177a0:	str	r3, [r4, #68]	; 0x44
   177a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   177a8:	cmp	r4, r3
   177ac:	sub	r4, r4, #36	; 0x24
   177b0:	bcc	17990 <argp_parse@@Base+0xc40>
   177b4:	cmp	r0, #7
   177b8:	cmpne	r0, #0
   177bc:	beq	17760 <argp_parse@@Base+0xa10>
   177c0:	ldr	ip, [fp, #-108]	; 0xffffff94
   177c4:	mov	r5, r0
   177c8:	sub	r4, ip, #36	; 0x24
   177cc:	cmp	r4, r3
   177d0:	bcs	173e0 <argp_parse@@Base+0x690>
   177d4:	b	17444 <argp_parse@@Base+0x6f4>
   177d8:	ldr	r2, [fp, #-236]	; 0xffffff14
   177dc:	ldr	r2, [r2]
   177e0:	str	r2, [r3]
   177e4:	b	16d98 <argp_parse@@Base+0x48>
   177e8:	ldr	r3, [fp, #-236]	; 0xffffff14
   177ec:	ldr	r0, [r3]
   177f0:	bl	17cb4 <argp_parse@@Base+0xf64>
   177f4:	str	r0, [r5]
   177f8:	b	16dac <argp_parse@@Base+0x5c>
   177fc:	mov	r1, r4
   17800:	ldr	r0, [fp, #-156]	; 0xffffff64
   17804:	bl	11a24 <strchr@plt>
   17808:	cmp	r0, #0
   1780c:	beq	17848 <argp_parse@@Base+0xaf8>
   17810:	ldr	r5, [fp, #-112]	; 0xffffff90
   17814:	ldr	r2, [fp, #-108]	; 0xffffff94
   17818:	cmp	r5, r2
   1781c:	bcs	17848 <argp_parse@@Base+0xaf8>
   17820:	ldr	r3, [r5, #8]
   17824:	cmp	r3, r0
   17828:	bls	1783c <argp_parse@@Base+0xaec>
   1782c:	b	17b24 <argp_parse@@Base+0xdd4>
   17830:	ldr	r3, [r5, #8]
   17834:	cmp	r0, r3
   17838:	bcc	17b24 <argp_parse@@Base+0xdd4>
   1783c:	add	r5, r5, #36	; 0x24
   17840:	cmp	r5, r2
   17844:	bcc	17830 <argp_parse@@Base+0xae0>
   17848:	sub	r6, fp, #96	; 0x60
   1784c:	mov	r2, r4
   17850:	add	r4, r4, #1
   17854:	ldr	r3, [pc, #936]	; 17c04 <argp_parse@@Base+0xeb4>
   17858:	movw	r1, #63280	; 0xf730
   1785c:	movt	r1, #1
   17860:	mov	r0, r6
   17864:	bic	r4, r4, #2
   17868:	bl	1cca4 <argp_error@@Base>
   1786c:	cmp	r4, #0
   17870:	bne	178a8 <argp_parse@@Base+0xb58>
   17874:	b	17514 <argp_parse@@Base+0x7c4>
   17878:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1787c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17880:	tst	r3, #2
   17884:	bne	175e0 <argp_parse@@Base+0x890>
   17888:	cmp	r1, #0
   1788c:	beq	175e0 <argp_parse@@Base+0x890>
   17890:	mov	r0, r1
   17894:	movw	r1, #63300	; 0xf744
   17898:	movt	r1, #1
   1789c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   178a0:	sub	r6, fp, #96	; 0x60
   178a4:	bl	11a3c <fprintf@plt>
   178a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   178ac:	b	1734c <argp_parse@@Base+0x5fc>
   178b0:	sub	r4, r4, #36	; 0x24
   178b4:	cmp	r4, r3
   178b8:	bcs	173e8 <argp_parse@@Base+0x698>
   178bc:	b	1743c <argp_parse@@Base+0x6ec>
   178c0:	add	r6, r6, #36	; 0x24
   178c4:	cmp	r6, r4
   178c8:	bcc	1737c <argp_parse@@Base+0x62c>
   178cc:	b	173d0 <argp_parse@@Base+0x680>
   178d0:	cmp	r4, r3
   178d4:	sub	r4, r4, #36	; 0x24
   178d8:	bcs	17760 <argp_parse@@Base+0xa10>
   178dc:	mov	r5, #7
   178e0:	b	17994 <argp_parse@@Base+0xc44>
   178e4:	asrs	r8, r4, #24
   178e8:	beq	177fc <argp_parse@@Base+0xaac>
   178ec:	add	r3, r8, r8, lsl #3
   178f0:	ldr	r5, [fp, #-112]	; 0xffffff90
   178f4:	ands	r2, r4, #8388608	; 0x800000
   178f8:	movne	r2, #-16777216	; 0xff000000
   178fc:	bic	r0, r4, #-16777216	; 0xff000000
   17900:	lsl	r3, r3, #2
   17904:	orr	r0, r0, r2
   17908:	sub	r3, r3, #36	; 0x24
   1790c:	ldr	r7, [r5, r3]
   17910:	add	r5, r5, r3
   17914:	cmp	r7, #0
   17918:	beq	17b8c <argp_parse@@Base+0xe3c>
   1791c:	ldr	r3, [r5, #24]
   17920:	sub	r6, fp, #96	; 0x60
   17924:	mov	r2, r6
   17928:	ldr	ip, [r5, #28]
   1792c:	ldr	r1, [r5, #32]
   17930:	str	r3, [fp, #-68]	; 0xffffffbc
   17934:	ldr	r3, [r5, #12]
   17938:	str	r3, [fp, #-76]	; 0xffffffb4
   1793c:	str	ip, [fp, #-64]	; 0xffffffc0
   17940:	str	r1, [fp, #-60]	; 0xffffffc4
   17944:	ldr	r1, [fp, #-136]	; 0xffffff78
   17948:	blx	r7
   1794c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17950:	str	r3, [r5, #32]
   17954:	cmp	r0, #7
   17958:	beq	179b8 <argp_parse@@Base+0xc68>
   1795c:	cmp	r0, #0
   17960:	bne	175d0 <argp_parse@@Base+0x880>
   17964:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17968:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1796c:	ldr	r7, [fp, #-84]	; 0xffffffac
   17970:	b	171dc <argp_parse@@Base+0x48c>
   17974:	movw	r2, #5304	; 0x14b8
   17978:	movt	r2, #3
   1797c:	ldr	r2, [r2]
   17980:	cmp	r2, #0
   17984:	addeq	r2, r3, #16
   17988:	bne	16e84 <argp_parse@@Base+0x134>
   1798c:	b	16e90 <argp_parse@@Base+0x140>
   17990:	mov	r5, r0
   17994:	ldr	ip, [fp, #-108]	; 0xffffff94
   17998:	cmp	r5, #7
   1799c:	sub	r4, ip, #36	; 0x24
   179a0:	bne	177cc <argp_parse@@Base+0xa7c>
   179a4:	cmp	r4, r3
   179a8:	movcs	r5, #0
   179ac:	bcs	173e0 <argp_parse@@Base+0x690>
   179b0:	mov	r5, #0
   179b4:	b	17444 <argp_parse@@Base+0x6f4>
   179b8:	cmp	r8, #0
   179bc:	beq	1784c <argp_parse@@Base+0xafc>
   179c0:	ldr	r3, [fp, #-152]	; 0xffffff68
   179c4:	ldr	r2, [r3]
   179c8:	ldr	r1, [r3, #12]
   179cc:	cmp	r4, r1
   179d0:	bne	179ec <argp_parse@@Base+0xc9c>
   179d4:	b	17a1c <argp_parse@@Base+0xccc>
   179d8:	add	r3, r3, #16
   179dc:	ldr	r2, [r3]
   179e0:	ldr	r1, [r3, #12]
   179e4:	cmp	r4, r1
   179e8:	beq	17a1c <argp_parse@@Base+0xccc>
   179ec:	cmp	r2, #0
   179f0:	bne	179d8 <argp_parse@@Base+0xc88>
   179f4:	movw	r2, #63272	; 0xf728
   179f8:	movt	r2, #1
   179fc:	movw	r1, #63288	; 0xf738
   17a00:	movt	r1, #1
   17a04:	ldr	r3, [pc, #504]	; 17c04 <argp_parse@@Base+0xeb4>
   17a08:	mov	r0, r6
   17a0c:	add	r4, r4, #1
   17a10:	bl	1cca4 <argp_error@@Base>
   17a14:	bic	r4, r4, #2
   17a18:	b	1786c <argp_parse@@Base+0xb1c>
   17a1c:	movw	r3, #63272	; 0xf728
   17a20:	movt	r3, #1
   17a24:	cmp	r2, #0
   17a28:	moveq	r2, r3
   17a2c:	b	179fc <argp_parse@@Base+0xcac>
   17a30:	ldr	r3, [fp, #-112]	; 0xffffff90
   17a34:	sub	r2, ip, #36	; 0x24
   17a38:	cmp	r3, r2
   17a3c:	bhi	17bbc <argp_parse@@Base+0xe6c>
   17a40:	ldr	r2, [fp, #4]
   17a44:	cmp	r2, #0
   17a48:	beq	17a58 <argp_parse@@Base+0xd08>
   17a4c:	ldr	r2, [fp, #-84]	; 0xffffffac
   17a50:	ldr	r1, [fp, #4]
   17a54:	str	r2, [r1]
   17a58:	cmp	r5, #0
   17a5c:	bne	175d4 <argp_parse@@Base+0x884>
   17a60:	ldr	ip, [fp, #-108]	; 0xffffff94
   17a64:	b	17748 <argp_parse@@Base+0x9f8>
   17a68:	ldr	r3, [fp, #-112]	; 0xffffff90
   17a6c:	sub	r4, ip, #36	; 0x24
   17a70:	cmp	r4, r3
   17a74:	bcc	17b78 <argp_parse@@Base+0xe28>
   17a78:	cmp	r5, #0
   17a7c:	cmpne	r5, #7
   17a80:	bne	17a40 <argp_parse@@Base+0xcf0>
   17a84:	mov	r6, #1
   17a88:	movt	r6, #256	; 0x100
   17a8c:	sub	r4, r4, #36	; 0x24
   17a90:	ldr	r5, [r4, #36]	; 0x24
   17a94:	mov	r1, #0
   17a98:	sub	r2, fp, #96	; 0x60
   17a9c:	mov	r0, r6
   17aa0:	cmp	r5, r1
   17aa4:	beq	17af8 <argp_parse@@Base+0xda8>
   17aa8:	ldr	r3, [r4, #60]	; 0x3c
   17aac:	ldr	lr, [r4, #64]	; 0x40
   17ab0:	ldr	ip, [r4, #68]	; 0x44
   17ab4:	str	r3, [fp, #-68]	; 0xffffffbc
   17ab8:	ldr	r3, [r4, #48]	; 0x30
   17abc:	str	r3, [fp, #-76]	; 0xffffffb4
   17ac0:	str	lr, [fp, #-64]	; 0xffffffc0
   17ac4:	str	ip, [fp, #-60]	; 0xffffffc4
   17ac8:	blx	r5
   17acc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17ad0:	str	r3, [r4, #68]	; 0x44
   17ad4:	ldr	r3, [fp, #-112]	; 0xffffff90
   17ad8:	cmp	r3, r4
   17adc:	sub	r4, r4, #36	; 0x24
   17ae0:	bhi	17b74 <argp_parse@@Base+0xe24>
   17ae4:	cmp	r0, #7
   17ae8:	cmpne	r0, #0
   17aec:	beq	17a90 <argp_parse@@Base+0xd40>
   17af0:	mov	r5, r0
   17af4:	b	17a40 <argp_parse@@Base+0xcf0>
   17af8:	cmp	r3, r4
   17afc:	sub	r4, r4, #36	; 0x24
   17b00:	bls	17a90 <argp_parse@@Base+0xd40>
   17b04:	ldr	ip, [fp, #-108]	; 0xffffff94
   17b08:	ldr	r2, [fp, #4]
   17b0c:	cmp	r2, #0
   17b10:	beq	17748 <argp_parse@@Base+0x9f8>
   17b14:	mov	r1, r2
   17b18:	ldr	r2, [fp, #-84]	; 0xffffffac
   17b1c:	str	r2, [r1]
   17b20:	b	17748 <argp_parse@@Base+0x9f8>
   17b24:	ldr	r3, [r5]
   17b28:	cmp	r3, #0
   17b2c:	beq	17848 <argp_parse@@Base+0xaf8>
   17b30:	ldr	r2, [r5, #12]
   17b34:	sub	r6, fp, #96	; 0x60
   17b38:	mov	r8, #0
   17b3c:	ldr	r0, [r5, #24]
   17b40:	ldr	ip, [r5, #28]
   17b44:	ldr	r1, [r5, #32]
   17b48:	str	r2, [fp, #-76]	; 0xffffffb4
   17b4c:	mov	r2, r6
   17b50:	str	r0, [fp, #-68]	; 0xffffffbc
   17b54:	mov	r0, r4
   17b58:	str	ip, [fp, #-64]	; 0xffffffc0
   17b5c:	str	r1, [fp, #-60]	; 0xffffffc4
   17b60:	ldr	r1, [fp, #-136]	; 0xffffff78
   17b64:	blx	r3
   17b68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17b6c:	str	r3, [r5, #32]
   17b70:	b	17954 <argp_parse@@Base+0xc04>
   17b74:	mov	r5, r0
   17b78:	cmp	r5, #7
   17b7c:	beq	17b04 <argp_parse@@Base+0xdb4>
   17b80:	b	17a40 <argp_parse@@Base+0xcf0>
   17b84:	sub	r4, ip, #36	; 0x24
   17b88:	b	173d8 <argp_parse@@Base+0x688>
   17b8c:	sub	r6, fp, #96	; 0x60
   17b90:	b	179c0 <argp_parse@@Base+0xc70>
   17b94:	sub	r4, ip, #36	; 0x24
   17b98:	cmp	r3, r4
   17b9c:	bls	17a84 <argp_parse@@Base+0xd34>
   17ba0:	ldr	r2, [fp, #4]
   17ba4:	cmp	r2, #0
   17ba8:	beq	179b0 <argp_parse@@Base+0xc60>
   17bac:	ldr	r2, [fp, #-84]	; 0xffffffac
   17bb0:	ldr	r1, [fp, #4]
   17bb4:	str	r2, [r1]
   17bb8:	b	17748 <argp_parse@@Base+0x9f8>
   17bbc:	ldr	r2, [fp, #4]
   17bc0:	cmp	r2, #0
   17bc4:	bne	17a4c <argp_parse@@Base+0xcfc>
   17bc8:	b	17364 <argp_parse@@Base+0x614>
   17bcc:	ldr	ip, [fp, #-108]	; 0xffffff94
   17bd0:	b	17504 <argp_parse@@Base+0x7b4>
   17bd4:	cmp	r0, #0
   17bd8:	beq	17bf0 <argp_parse@@Base+0xea0>
   17bdc:	cmp	r0, #7
   17be0:	mov	r5, r0
   17be4:	ldrne	r3, [fp, #-112]	; 0xffffff90
   17be8:	beq	17514 <argp_parse@@Base+0x7c4>
   17bec:	b	17364 <argp_parse@@Base+0x614>
   17bf0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17bf4:	mov	r0, r3
   17bf8:	str	r3, [fp, #-84]	; 0xffffffac
   17bfc:	b	172a0 <argp_parse@@Base+0x550>
   17c00:	andeq	pc, r1, r0, lsl #12
   17c04:	andeq	pc, r1, ip, lsl r6	; <UNPREDICTABLE>
   17c08:	cmp	r1, #0
   17c0c:	beq	17c4c <argp_parse@@Base+0xefc>
   17c10:	ldr	r2, [r1, #52]	; 0x34
   17c14:	ldr	r3, [r2, #48]	; 0x30
   17c18:	ldr	r1, [r2, #52]	; 0x34
   17c1c:	cmp	r3, r1
   17c20:	bcs	17c4c <argp_parse@@Base+0xefc>
   17c24:	ldr	r2, [r3, #4]
   17c28:	cmp	r0, r2
   17c2c:	bne	17c40 <argp_parse@@Base+0xef0>
   17c30:	b	17c54 <argp_parse@@Base+0xf04>
   17c34:	ldr	r2, [r3, #4]
   17c38:	cmp	r2, r0
   17c3c:	beq	17c54 <argp_parse@@Base+0xf04>
   17c40:	add	r3, r3, #36	; 0x24
   17c44:	cmp	r3, r1
   17c48:	bcc	17c34 <argp_parse@@Base+0xee4>
   17c4c:	mov	r0, #0
   17c50:	bx	lr
   17c54:	ldr	r0, [r3, #24]
   17c58:	bx	lr
   17c5c:	movw	r1, #5308	; 0x14bc
   17c60:	movt	r1, #3
   17c64:	push	{lr}		; (str lr, [sp, #-4]!)
   17c68:	ldm	r1, {r1, ip}
   17c6c:	sub	sp, sp, #12
   17c70:	movw	r3, #63524	; 0xf824
   17c74:	movt	r3, #1
   17c78:	movw	r2, #63540	; 0xf834
   17c7c:	movt	r2, #1
   17c80:	str	ip, [sp]
   17c84:	bl	18284 <argp_parse@@Base+0x1534>
   17c88:	add	sp, sp, #12
   17c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   17c90:	movw	r2, #5304	; 0x14b8
   17c94:	movt	r2, #3
   17c98:	movw	ip, #31836	; 0x7c5c
   17c9c:	movt	ip, #1
   17ca0:	movw	r3, #5308	; 0x14bc
   17ca4:	movt	r3, #3
   17ca8:	str	ip, [r2]
   17cac:	strd	r0, [r3]
   17cb0:	bx	lr
   17cb4:	ldrb	r3, [r0]
   17cb8:	cmp	r3, #47	; 0x2f
   17cbc:	bne	17ccc <argp_parse@@Base+0xf7c>
   17cc0:	ldrb	r3, [r0, #1]!
   17cc4:	cmp	r3, #47	; 0x2f
   17cc8:	beq	17cc0 <argp_parse@@Base+0xf70>
   17ccc:	cmp	r3, #0
   17cd0:	beq	17d00 <argp_parse@@Base+0xfb0>
   17cd4:	mov	r2, r0
   17cd8:	mov	r1, #0
   17cdc:	cmp	r3, #47	; 0x2f
   17ce0:	moveq	r1, #1
   17ce4:	beq	17cf4 <argp_parse@@Base+0xfa4>
   17ce8:	cmp	r1, #0
   17cec:	movne	r0, r2
   17cf0:	movne	r1, #0
   17cf4:	ldrb	r3, [r2, #1]!
   17cf8:	cmp	r3, #0
   17cfc:	bne	17cdc <argp_parse@@Base+0xf8c>
   17d00:	bx	lr
   17d04:	str	r4, [sp, #-8]!
   17d08:	mov	r4, r0
   17d0c:	str	lr, [sp, #4]
   17d10:	bl	11a0c <strlen@plt>
   17d14:	cmp	r0, #1
   17d18:	bls	17d2c <argp_parse@@Base+0xfdc>
   17d1c:	sub	r2, r0, #1
   17d20:	ldrb	r1, [r4, r2]
   17d24:	cmp	r1, #47	; 0x2f
   17d28:	beq	17d38 <argp_parse@@Base+0xfe8>
   17d2c:	ldr	r4, [sp]
   17d30:	add	sp, sp, #4
   17d34:	pop	{pc}		; (ldr pc, [sp], #4)
   17d38:	cmp	r2, #1
   17d3c:	beq	17d50 <argp_parse@@Base+0x1000>
   17d40:	add	r1, r4, r0
   17d44:	ldrb	r1, [r1, #-2]
   17d48:	cmp	r1, #47	; 0x2f
   17d4c:	beq	17d60 <argp_parse@@Base+0x1010>
   17d50:	ldr	r4, [sp]
   17d54:	add	sp, sp, #4
   17d58:	mov	r0, r2
   17d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   17d60:	sub	r3, r0, #3
   17d64:	rsb	r0, r4, #1
   17d68:	add	r3, r4, r3
   17d6c:	cmp	r3, r4
   17d70:	add	r2, r0, r3
   17d74:	beq	17d50 <argp_parse@@Base+0x1000>
   17d78:	ldrb	r1, [r3], #-1
   17d7c:	cmp	r1, #47	; 0x2f
   17d80:	bne	17d50 <argp_parse@@Base+0x1000>
   17d84:	b	17d6c <argp_parse@@Base+0x101c>
   17d88:	strd	r4, [sp, #-12]!
   17d8c:	mov	r5, r0
   17d90:	str	lr, [sp, #8]
   17d94:	sub	sp, sp, #12
   17d98:	bl	11a54 <__errno_location@plt>
   17d9c:	mov	r4, r0
   17da0:	mov	r2, #0
   17da4:	ldr	r3, [r4]
   17da8:	mov	r0, r5
   17dac:	str	r2, [r4]
   17db0:	str	r3, [sp]
   17db4:	str	r3, [sp, #4]
   17db8:	bl	117fc <free@plt>
   17dbc:	ldr	r3, [r4]
   17dc0:	add	r2, sp, #8
   17dc4:	clz	r3, r3
   17dc8:	lsr	r3, r3, #5
   17dcc:	add	r3, r2, r3, lsl #2
   17dd0:	ldr	r3, [r3, #-8]
   17dd4:	str	r3, [r4]
   17dd8:	add	sp, sp, #12
   17ddc:	ldrd	r4, [sp]
   17de0:	add	sp, sp, #8
   17de4:	pop	{pc}		; (ldr pc, [sp], #4)
   17de8:	push	{lr}		; (str lr, [sp, #-4]!)
   17dec:	sub	sp, sp, #20
   17df0:	mov	ip, #0
   17df4:	ldr	lr, [sp, #24]
   17df8:	str	lr, [sp]
   17dfc:	str	ip, [sp, #4]
   17e00:	str	ip, [sp, #8]
   17e04:	bl	1dcd0 <argp_error@@Base+0x102c>
   17e08:	add	sp, sp, #20
   17e0c:	pop	{pc}		; (ldr pc, [sp], #4)
   17e10:	str	r4, [sp, #-8]!
   17e14:	mov	ip, #0
   17e18:	str	lr, [sp, #4]
   17e1c:	sub	sp, sp, #16
   17e20:	ldr	r4, [sp, #24]
   17e24:	str	ip, [sp, #12]
   17e28:	ldr	lr, [sp, #28]
   17e2c:	stm	sp, {r4, ip, lr}
   17e30:	bl	1d734 <argp_error@@Base+0xa90>
   17e34:	add	sp, sp, #16
   17e38:	ldr	r4, [sp]
   17e3c:	add	sp, sp, #4
   17e40:	pop	{pc}		; (ldr pc, [sp], #4)
   17e44:	str	r4, [sp, #-8]!
   17e48:	mov	r4, #1
   17e4c:	str	lr, [sp, #4]
   17e50:	sub	sp, sp, #16
   17e54:	mov	lr, #0
   17e58:	ldr	ip, [sp, #24]
   17e5c:	str	ip, [sp]
   17e60:	stmib	sp, {r4, lr}
   17e64:	bl	1dcd0 <argp_error@@Base+0x102c>
   17e68:	add	sp, sp, #16
   17e6c:	ldr	r4, [sp]
   17e70:	add	sp, sp, #4
   17e74:	pop	{pc}		; (ldr pc, [sp], #4)
   17e78:	strd	r4, [sp, #-12]!
   17e7c:	mov	r4, #0
   17e80:	mov	r5, #1
   17e84:	str	lr, [sp, #8]
   17e88:	sub	sp, sp, #20
   17e8c:	ldr	lr, [sp, #32]
   17e90:	ldr	ip, [sp, #36]	; 0x24
   17e94:	str	lr, [sp]
   17e98:	str	r4, [sp, #12]
   17e9c:	stmib	sp, {r5, ip}
   17ea0:	bl	1d734 <argp_error@@Base+0xa90>
   17ea4:	add	sp, sp, #20
   17ea8:	ldrd	r4, [sp]
   17eac:	add	sp, sp, #8
   17eb0:	pop	{pc}		; (ldr pc, [sp], #4)
   17eb4:	strd	r4, [sp, #-16]!
   17eb8:	subs	r4, r0, #0
   17ebc:	str	r6, [sp, #8]
   17ec0:	str	lr, [sp, #12]
   17ec4:	beq	17f5c <argp_parse@@Base+0x120c>
   17ec8:	mov	r1, #47	; 0x2f
   17ecc:	bl	11b14 <strrchr@plt>
   17ed0:	subs	r5, r0, #0
   17ed4:	beq	17f34 <argp_parse@@Base+0x11e4>
   17ed8:	add	r6, r5, #1
   17edc:	sub	r3, r6, r4
   17ee0:	cmp	r3, #6
   17ee4:	ble	17f34 <argp_parse@@Base+0x11e4>
   17ee8:	movw	r1, #63612	; 0xf87c
   17eec:	movt	r1, #1
   17ef0:	mov	r2, #7
   17ef4:	sub	r0, r5, #6
   17ef8:	bl	11c04 <strncmp@plt>
   17efc:	cmp	r0, #0
   17f00:	bne	17f34 <argp_parse@@Base+0x11e4>
   17f04:	movw	r1, #63620	; 0xf884
   17f08:	movt	r1, #1
   17f0c:	mov	r2, #3
   17f10:	mov	r0, r6
   17f14:	bl	11c04 <strncmp@plt>
   17f18:	cmp	r0, #0
   17f1c:	movne	r4, r6
   17f20:	bne	17f34 <argp_parse@@Base+0x11e4>
   17f24:	add	r4, r5, #4
   17f28:	movw	r3, #5040	; 0x13b0
   17f2c:	movt	r3, #3
   17f30:	str	r4, [r3]
   17f34:	movw	r2, #5316	; 0x14c4
   17f38:	movt	r2, #3
   17f3c:	ldr	r6, [sp, #8]
   17f40:	movw	r3, #5044	; 0x13b4
   17f44:	movt	r3, #3
   17f48:	str	r4, [r2]
   17f4c:	str	r4, [r3]
   17f50:	ldrd	r4, [sp]
   17f54:	add	sp, sp, #12
   17f58:	pop	{pc}		; (ldr pc, [sp], #4)
   17f5c:	movw	r3, #5048	; 0x13b8
   17f60:	movt	r3, #3
   17f64:	movw	r0, #63556	; 0xf844
   17f68:	movt	r0, #1
   17f6c:	ldr	r3, [r3]
   17f70:	mov	r2, #55	; 0x37
   17f74:	mov	r1, #1
   17f78:	bl	1191c <fwrite@plt>
   17f7c:	bl	11c10 <abort@plt>
   17f80:	cmp	r1, #0
   17f84:	strd	r4, [sp, #-16]!
   17f88:	mov	r4, r0
   17f8c:	str	r6, [sp, #8]
   17f90:	str	lr, [sp, #12]
   17f94:	sub	sp, sp, #32
   17f98:	ldr	r5, [sp, #48]	; 0x30
   17f9c:	ldr	r6, [sp, #52]	; 0x34
   17fa0:	beq	180a4 <argp_parse@@Base+0x1354>
   17fa4:	mov	ip, r3
   17fa8:	mov	r3, r2
   17fac:	mov	r2, r1
   17fb0:	movw	r1, #63624	; 0xf888
   17fb4:	movt	r1, #1
   17fb8:	str	ip, [sp]
   17fbc:	bl	11a3c <fprintf@plt>
   17fc0:	movw	r3, #2022	; 0x7e6
   17fc4:	movw	r2, #63644	; 0xf89c
   17fc8:	movt	r2, #1
   17fcc:	movw	r1, #64412	; 0xfb9c
   17fd0:	movt	r1, #1
   17fd4:	mov	r0, r4
   17fd8:	bl	11a3c <fprintf@plt>
   17fdc:	mov	r1, r4
   17fe0:	mov	r0, #10
   17fe4:	bl	11b38 <fputc@plt>
   17fe8:	movw	r2, #63648	; 0xf8a0
   17fec:	movt	r2, #1
   17ff0:	movw	r1, #63684	; 0xf8c4
   17ff4:	movt	r1, #1
   17ff8:	mov	r0, r4
   17ffc:	bl	11a3c <fprintf@plt>
   18000:	mov	r1, r4
   18004:	mov	r0, #10
   18008:	bl	11b38 <fputc@plt>
   1800c:	cmp	r6, #9
   18010:	ldrls	pc, [pc, r6, lsl #2]
   18014:	b	18270 <argp_parse@@Base+0x1520>
   18018:	muleq	r1, r0, r0
   1801c:	strheq	r8, [r1], -r4
   18020:	ldrdeq	r8, [r1], -ip
   18024:	andeq	r8, r1, r4, lsl #2
   18028:	andeq	r8, r1, r4, lsr r1
   1802c:	andeq	r8, r1, r0, ror r1
   18030:	andeq	r8, r1, r4, lsr #3
   18034:	andeq	r8, r1, r0, ror #3
   18038:	andeq	r8, r1, r4, lsr #4
   1803c:	andeq	r8, r1, r0, asr #32
   18040:	ldr	ip, [r5, #8]
   18044:	movw	r1, #64124	; 0xfa7c
   18048:	movt	r1, #1
   1804c:	mov	r0, r4
   18050:	ldr	r3, [r5, #12]
   18054:	ldr	r2, [r5, #32]
   18058:	str	ip, [sp]
   1805c:	ldr	ip, [r5, #16]
   18060:	str	r2, [sp, #24]
   18064:	ldr	r2, [r5, #28]
   18068:	str	r3, [sp, #4]
   1806c:	ldr	r3, [r5, #20]
   18070:	str	ip, [sp, #8]
   18074:	ldr	ip, [r5, #24]
   18078:	str	r2, [sp, #20]
   1807c:	ldr	r2, [r5]
   18080:	str	r3, [sp, #12]
   18084:	ldr	r3, [r5, #4]
   18088:	str	ip, [sp, #16]
   1808c:	bl	11a3c <fprintf@plt>
   18090:	add	sp, sp, #32
   18094:	ldrd	r4, [sp]
   18098:	ldr	r6, [sp, #8]
   1809c:	add	sp, sp, #12
   180a0:	pop	{pc}		; (ldr pc, [sp], #4)
   180a4:	movw	r1, #63636	; 0xf894
   180a8:	movt	r1, #1
   180ac:	bl	11a3c <fprintf@plt>
   180b0:	b	17fc0 <argp_parse@@Base+0x1270>
   180b4:	ldr	r2, [r5]
   180b8:	mov	r0, r4
   180bc:	movw	r1, #63856	; 0xf970
   180c0:	movt	r1, #1
   180c4:	add	sp, sp, #32
   180c8:	ldrd	r4, [sp]
   180cc:	ldr	r6, [sp, #8]
   180d0:	ldr	lr, [sp, #12]
   180d4:	add	sp, sp, #16
   180d8:	b	11a3c <fprintf@plt>
   180dc:	ldrd	r2, [r5]
   180e0:	mov	r0, r4
   180e4:	movw	r1, #63872	; 0xf980
   180e8:	movt	r1, #1
   180ec:	add	sp, sp, #32
   180f0:	ldrd	r4, [sp]
   180f4:	ldr	r6, [sp, #8]
   180f8:	ldr	lr, [sp, #12]
   180fc:	add	sp, sp, #16
   18100:	b	11a3c <fprintf@plt>
   18104:	ldrd	r2, [r5]
   18108:	mov	r0, r4
   1810c:	movw	r1, #63896	; 0xf998
   18110:	movt	r1, #1
   18114:	ldr	ip, [r5, #8]
   18118:	str	ip, [sp, #48]	; 0x30
   1811c:	add	sp, sp, #32
   18120:	ldrd	r4, [sp]
   18124:	ldr	r6, [sp, #8]
   18128:	ldr	lr, [sp, #12]
   1812c:	add	sp, sp, #16
   18130:	b	11a3c <fprintf@plt>
   18134:	ldr	r2, [r5]
   18138:	mov	r0, r4
   1813c:	movw	r1, #63924	; 0xf9b4
   18140:	movt	r1, #1
   18144:	ldr	r3, [r5, #8]
   18148:	ldr	ip, [r5, #12]
   1814c:	str	r3, [sp, #48]	; 0x30
   18150:	ldr	r3, [r5, #4]
   18154:	str	ip, [sp, #52]	; 0x34
   18158:	add	sp, sp, #32
   1815c:	ldrd	r4, [sp]
   18160:	ldr	r6, [sp, #8]
   18164:	ldr	lr, [sp, #12]
   18168:	add	sp, sp, #16
   1816c:	b	11a3c <fprintf@plt>
   18170:	ldr	r2, [r5, #8]
   18174:	mov	r0, r4
   18178:	movw	r1, #63956	; 0xf9d4
   1817c:	movt	r1, #1
   18180:	ldr	ip, [r5, #12]
   18184:	ldr	r3, [r5, #16]
   18188:	str	r2, [sp]
   1818c:	ldr	r2, [r5]
   18190:	str	r3, [sp, #8]
   18194:	ldr	r3, [r5, #4]
   18198:	str	ip, [sp, #4]
   1819c:	bl	11a3c <fprintf@plt>
   181a0:	b	18090 <argp_parse@@Base+0x1340>
   181a4:	ldr	ip, [r5, #8]
   181a8:	mov	r0, r4
   181ac:	movw	r1, #63992	; 0xf9f8
   181b0:	movt	r1, #1
   181b4:	ldr	r3, [r5, #12]
   181b8:	ldr	r2, [r5, #20]
   181bc:	str	ip, [sp]
   181c0:	ldr	ip, [r5, #16]
   181c4:	str	r2, [sp, #12]
   181c8:	ldr	r2, [r5]
   181cc:	str	r3, [sp, #4]
   181d0:	ldr	r3, [r5, #4]
   181d4:	str	ip, [sp, #8]
   181d8:	bl	11a3c <fprintf@plt>
   181dc:	b	18090 <argp_parse@@Base+0x1340>
   181e0:	ldr	r3, [r5, #8]
   181e4:	mov	r0, r4
   181e8:	movw	r1, #64032	; 0xfa20
   181ec:	movt	r1, #1
   181f0:	ldr	r2, [r5, #12]
   181f4:	ldr	ip, [r5, #24]
   181f8:	str	r3, [sp]
   181fc:	ldr	r3, [r5, #16]
   18200:	str	ip, [sp, #16]
   18204:	ldr	ip, [r5, #20]
   18208:	str	r2, [sp, #4]
   1820c:	ldr	r2, [r5]
   18210:	str	r3, [sp, #8]
   18214:	ldr	r3, [r5, #4]
   18218:	str	ip, [sp, #12]
   1821c:	bl	11a3c <fprintf@plt>
   18220:	b	18090 <argp_parse@@Base+0x1340>
   18224:	ldr	r2, [r5, #8]
   18228:	mov	r0, r4
   1822c:	movw	r1, #64076	; 0xfa4c
   18230:	movt	r1, #1
   18234:	ldr	ip, [r5, #12]
   18238:	ldr	r3, [r5, #28]
   1823c:	str	r2, [sp]
   18240:	ldr	r2, [r5, #16]
   18244:	str	r3, [sp, #20]
   18248:	ldr	r3, [r5, #24]
   1824c:	str	ip, [sp, #4]
   18250:	ldr	ip, [r5, #20]
   18254:	str	r2, [sp, #8]
   18258:	ldr	r2, [r5]
   1825c:	str	r3, [sp, #16]
   18260:	ldr	r3, [r5, #4]
   18264:	str	ip, [sp, #12]
   18268:	bl	11a3c <fprintf@plt>
   1826c:	b	18090 <argp_parse@@Base+0x1340>
   18270:	movw	r1, #64176	; 0xfab0
   18274:	movt	r1, #1
   18278:	ldr	ip, [r5, #8]
   1827c:	mov	r0, r4
   18280:	b	18050 <argp_parse@@Base+0x1300>
   18284:	strd	r4, [sp, #-16]!
   18288:	mov	ip, r3
   1828c:	str	r6, [sp, #8]
   18290:	mov	r6, r0
   18294:	str	lr, [sp, #12]
   18298:	sub	sp, sp, #32
   1829c:	ldr	r5, [sp, #48]	; 0x30
   182a0:	ldr	r4, [r5]
   182a4:	cmp	r4, #0
   182a8:	beq	182c4 <argp_parse@@Base+0x1574>
   182ac:	mov	r3, r5
   182b0:	mov	r4, #0
   182b4:	ldr	r0, [r3, #4]!
   182b8:	add	r4, r4, #1
   182bc:	cmp	r0, #0
   182c0:	bne	182b4 <argp_parse@@Base+0x1564>
   182c4:	cmp	r1, #0
   182c8:	beq	183cc <argp_parse@@Base+0x167c>
   182cc:	mov	r3, r2
   182d0:	mov	r0, r6
   182d4:	str	ip, [sp]
   182d8:	mov	r2, r1
   182dc:	movw	r1, #63624	; 0xf888
   182e0:	movt	r1, #1
   182e4:	bl	11a3c <fprintf@plt>
   182e8:	movw	r3, #2022	; 0x7e6
   182ec:	movw	r2, #63644	; 0xf89c
   182f0:	movt	r2, #1
   182f4:	movw	r1, #64412	; 0xfb9c
   182f8:	movt	r1, #1
   182fc:	mov	r0, r6
   18300:	bl	11a3c <fprintf@plt>
   18304:	mov	r1, r6
   18308:	mov	r0, #10
   1830c:	bl	11b38 <fputc@plt>
   18310:	movw	r2, #63648	; 0xf8a0
   18314:	movt	r2, #1
   18318:	movw	r1, #63684	; 0xf8c4
   1831c:	movt	r1, #1
   18320:	mov	r0, r6
   18324:	bl	11a3c <fprintf@plt>
   18328:	mov	r1, r6
   1832c:	mov	r0, #10
   18330:	bl	11b38 <fputc@plt>
   18334:	cmp	r4, #9
   18338:	ldrls	pc, [pc, r4, lsl #2]
   1833c:	b	18590 <argp_parse@@Base+0x1840>
   18340:			; <UNDEFINED> instruction: 0x000183b8
   18344:	andeq	r8, r1, r4, ror #7
   18348:	andeq	r8, r1, ip, lsl #8
   1834c:	andeq	r8, r1, r4, lsr r4
   18350:	andeq	r8, r1, r4, ror #8
   18354:	muleq	r1, r0, r4
   18358:	andeq	r8, r1, r4, asr #9
   1835c:	andeq	r8, r1, r0, lsl #10
   18360:	andeq	r8, r1, r4, asr #10
   18364:	andeq	r8, r1, r8, ror #6
   18368:	ldr	ip, [r5, #8]
   1836c:	movw	r1, #64124	; 0xfa7c
   18370:	movt	r1, #1
   18374:	mov	r0, r6
   18378:	ldr	r3, [r5, #12]
   1837c:	ldr	r2, [r5, #32]
   18380:	str	ip, [sp]
   18384:	ldr	ip, [r5, #16]
   18388:	str	r2, [sp, #24]
   1838c:	ldr	r2, [r5, #28]
   18390:	str	r3, [sp, #4]
   18394:	ldr	r3, [r5, #20]
   18398:	str	ip, [sp, #8]
   1839c:	ldr	ip, [r5, #24]
   183a0:	str	r2, [sp, #20]
   183a4:	ldr	r2, [r5]
   183a8:	str	r3, [sp, #12]
   183ac:	ldr	r3, [r5, #4]
   183b0:	str	ip, [sp, #16]
   183b4:	bl	11a3c <fprintf@plt>
   183b8:	add	sp, sp, #32
   183bc:	ldrd	r4, [sp]
   183c0:	ldr	r6, [sp, #8]
   183c4:	add	sp, sp, #12
   183c8:	pop	{pc}		; (ldr pc, [sp], #4)
   183cc:	mov	r3, ip
   183d0:	movw	r1, #63636	; 0xf894
   183d4:	movt	r1, #1
   183d8:	mov	r0, r6
   183dc:	bl	11a3c <fprintf@plt>
   183e0:	b	182e8 <argp_parse@@Base+0x1598>
   183e4:	ldr	r2, [r5]
   183e8:	mov	r0, r6
   183ec:	movw	r1, #63856	; 0xf970
   183f0:	movt	r1, #1
   183f4:	add	sp, sp, #32
   183f8:	ldrd	r4, [sp]
   183fc:	ldr	r6, [sp, #8]
   18400:	ldr	lr, [sp, #12]
   18404:	add	sp, sp, #16
   18408:	b	11a3c <fprintf@plt>
   1840c:	ldrd	r2, [r5]
   18410:	mov	r0, r6
   18414:	movw	r1, #63872	; 0xf980
   18418:	movt	r1, #1
   1841c:	add	sp, sp, #32
   18420:	ldrd	r4, [sp]
   18424:	ldr	r6, [sp, #8]
   18428:	ldr	lr, [sp, #12]
   1842c:	add	sp, sp, #16
   18430:	b	11a3c <fprintf@plt>
   18434:	ldrd	r2, [r5]
   18438:	mov	r0, r6
   1843c:	movw	r1, #63896	; 0xf998
   18440:	movt	r1, #1
   18444:	ldr	ip, [r5, #8]
   18448:	str	ip, [sp, #48]	; 0x30
   1844c:	add	sp, sp, #32
   18450:	ldrd	r4, [sp]
   18454:	ldr	r6, [sp, #8]
   18458:	ldr	lr, [sp, #12]
   1845c:	add	sp, sp, #16
   18460:	b	11a3c <fprintf@plt>
   18464:	mov	r0, r6
   18468:	movw	r1, #63924	; 0xf9b4
   1846c:	movt	r1, #1
   18470:	ldr	r3, [r5, #8]
   18474:	ldr	ip, [r5, #12]
   18478:	ldr	r2, [r5]
   1847c:	str	r3, [sp]
   18480:	ldr	r3, [r5, #4]
   18484:	str	ip, [sp, #4]
   18488:	bl	11a3c <fprintf@plt>
   1848c:	b	183b8 <argp_parse@@Base+0x1668>
   18490:	ldr	r2, [r5, #8]
   18494:	mov	r0, r6
   18498:	movw	r1, #63956	; 0xf9d4
   1849c:	movt	r1, #1
   184a0:	ldr	ip, [r5, #12]
   184a4:	ldr	r3, [r5, #16]
   184a8:	str	r2, [sp]
   184ac:	ldr	r2, [r5]
   184b0:	str	r3, [sp, #8]
   184b4:	ldr	r3, [r5, #4]
   184b8:	str	ip, [sp, #4]
   184bc:	bl	11a3c <fprintf@plt>
   184c0:	b	183b8 <argp_parse@@Base+0x1668>
   184c4:	ldr	ip, [r5, #8]
   184c8:	mov	r0, r6
   184cc:	movw	r1, #63992	; 0xf9f8
   184d0:	movt	r1, #1
   184d4:	ldr	r3, [r5, #12]
   184d8:	ldr	r2, [r5, #20]
   184dc:	str	ip, [sp]
   184e0:	ldr	ip, [r5, #16]
   184e4:	str	r2, [sp, #12]
   184e8:	ldr	r2, [r5]
   184ec:	str	r3, [sp, #4]
   184f0:	ldr	r3, [r5, #4]
   184f4:	str	ip, [sp, #8]
   184f8:	bl	11a3c <fprintf@plt>
   184fc:	b	183b8 <argp_parse@@Base+0x1668>
   18500:	ldr	r3, [r5, #8]
   18504:	mov	r0, r6
   18508:	movw	r1, #64032	; 0xfa20
   1850c:	movt	r1, #1
   18510:	ldr	r2, [r5, #12]
   18514:	ldr	ip, [r5, #24]
   18518:	str	r3, [sp]
   1851c:	ldr	r3, [r5, #16]
   18520:	str	ip, [sp, #16]
   18524:	ldr	ip, [r5, #20]
   18528:	str	r2, [sp, #4]
   1852c:	ldr	r2, [r5]
   18530:	str	r3, [sp, #8]
   18534:	ldr	r3, [r5, #4]
   18538:	str	ip, [sp, #12]
   1853c:	bl	11a3c <fprintf@plt>
   18540:	b	183b8 <argp_parse@@Base+0x1668>
   18544:	ldr	r2, [r5, #8]
   18548:	mov	r0, r6
   1854c:	movw	r1, #64076	; 0xfa4c
   18550:	movt	r1, #1
   18554:	ldr	ip, [r5, #12]
   18558:	ldr	r3, [r5, #28]
   1855c:	str	r2, [sp]
   18560:	ldr	r2, [r5, #16]
   18564:	str	r3, [sp, #20]
   18568:	ldr	r3, [r5, #24]
   1856c:	str	ip, [sp, #4]
   18570:	ldr	ip, [r5, #20]
   18574:	str	r2, [sp, #8]
   18578:	ldr	r2, [r5]
   1857c:	str	r3, [sp, #16]
   18580:	ldr	r3, [r5, #4]
   18584:	str	ip, [sp, #12]
   18588:	bl	11a3c <fprintf@plt>
   1858c:	b	183b8 <argp_parse@@Base+0x1668>
   18590:	movw	r1, #64176	; 0xfab0
   18594:	movt	r1, #1
   18598:	ldr	ip, [r5, #8]
   1859c:	mov	r0, r6
   185a0:	b	18378 <argp_parse@@Base+0x1628>
   185a4:	strd	r4, [sp, #-12]!
   185a8:	mov	r4, r0
   185ac:	mov	r0, r3
   185b0:	str	lr, [sp, #8]
   185b4:	sub	sp, sp, #76	; 0x4c
   185b8:	ldr	ip, [sp, #88]	; 0x58
   185bc:	ldr	r3, [ip]
   185c0:	cmp	r3, #0
   185c4:	str	r3, [sp, #32]
   185c8:	beq	188e8 <argp_parse@@Base+0x1b98>
   185cc:	ldr	r3, [ip, #4]
   185d0:	cmp	r3, #0
   185d4:	str	r3, [sp, #36]	; 0x24
   185d8:	beq	188f0 <argp_parse@@Base+0x1ba0>
   185dc:	ldr	r3, [ip, #8]
   185e0:	cmp	r3, #0
   185e4:	str	r3, [sp, #40]	; 0x28
   185e8:	beq	188f8 <argp_parse@@Base+0x1ba8>
   185ec:	ldr	r3, [ip, #12]
   185f0:	cmp	r3, #0
   185f4:	str	r3, [sp, #44]	; 0x2c
   185f8:	beq	18900 <argp_parse@@Base+0x1bb0>
   185fc:	ldr	r3, [ip, #16]
   18600:	cmp	r3, #0
   18604:	str	r3, [sp, #48]	; 0x30
   18608:	beq	18908 <argp_parse@@Base+0x1bb8>
   1860c:	ldr	r3, [ip, #20]
   18610:	cmp	r3, #0
   18614:	str	r3, [sp, #52]	; 0x34
   18618:	beq	18910 <argp_parse@@Base+0x1bc0>
   1861c:	ldr	r3, [ip, #24]
   18620:	cmp	r3, #0
   18624:	str	r3, [sp, #56]	; 0x38
   18628:	beq	18918 <argp_parse@@Base+0x1bc8>
   1862c:	ldr	r3, [ip, #28]
   18630:	cmp	r3, #0
   18634:	str	r3, [sp, #60]	; 0x3c
   18638:	beq	18920 <argp_parse@@Base+0x1bd0>
   1863c:	ldr	r3, [ip, #32]
   18640:	cmp	r3, #0
   18644:	str	r3, [sp, #64]	; 0x40
   18648:	beq	18928 <argp_parse@@Base+0x1bd8>
   1864c:	ldr	r3, [ip, #36]	; 0x24
   18650:	cmp	r3, #0
   18654:	movne	r5, #10
   18658:	moveq	r5, #9
   1865c:	cmp	r1, #0
   18660:	beq	1875c <argp_parse@@Base+0x1a0c>
   18664:	mov	r3, r2
   18668:	mov	r2, r1
   1866c:	str	r0, [sp]
   18670:	movw	r1, #63624	; 0xf888
   18674:	movt	r1, #1
   18678:	mov	r0, r4
   1867c:	bl	11a3c <fprintf@plt>
   18680:	movw	r3, #2022	; 0x7e6
   18684:	movw	r2, #63644	; 0xf89c
   18688:	movt	r2, #1
   1868c:	movw	r1, #64412	; 0xfb9c
   18690:	movt	r1, #1
   18694:	mov	r0, r4
   18698:	bl	11a3c <fprintf@plt>
   1869c:	mov	r1, r4
   186a0:	mov	r0, #10
   186a4:	bl	11b38 <fputc@plt>
   186a8:	movw	r2, #63648	; 0xf8a0
   186ac:	movt	r2, #1
   186b0:	movw	r1, #63684	; 0xf8c4
   186b4:	movt	r1, #1
   186b8:	mov	r0, r4
   186bc:	bl	11a3c <fprintf@plt>
   186c0:	mov	r1, r4
   186c4:	mov	r0, #10
   186c8:	bl	11b38 <fputc@plt>
   186cc:	cmp	r5, #9
   186d0:	ldrls	pc, [pc, r5, lsl #2]
   186d4:	b	18930 <argp_parse@@Base+0x1be0>
   186d8:	andeq	r8, r1, ip, asr #14
   186dc:	andeq	r8, r1, r4, ror r7
   186e0:	muleq	r1, r8, r7
   186e4:			; <UNDEFINED> instruction: 0x000187bc
   186e8:	andeq	r8, r1, r8, ror #15
   186ec:	andeq	r8, r1, r0, lsl r8
   186f0:	andeq	r8, r1, r8, lsr r8
   186f4:	andeq	r8, r1, r0, ror r8
   186f8:			; <UNDEFINED> instruction: 0x000188b0
   186fc:	andeq	r8, r1, r0, lsl #14
   18700:	ldr	ip, [sp, #40]	; 0x28
   18704:	movw	r1, #64124	; 0xfa7c
   18708:	movt	r1, #1
   1870c:	mov	r0, r4
   18710:	str	ip, [sp]
   18714:	ldr	r2, [sp, #44]	; 0x2c
   18718:	ldr	ip, [sp, #48]	; 0x30
   1871c:	ldr	r3, [sp, #64]	; 0x40
   18720:	str	r2, [sp, #4]
   18724:	ldr	r2, [sp, #52]	; 0x34
   18728:	str	ip, [sp, #8]
   1872c:	ldr	ip, [sp, #56]	; 0x38
   18730:	str	r3, [sp, #24]
   18734:	ldr	r3, [sp, #60]	; 0x3c
   18738:	str	r2, [sp, #12]
   1873c:	str	ip, [sp, #16]
   18740:	str	r3, [sp, #20]
   18744:	ldrd	r2, [sp, #32]
   18748:	bl	11a3c <fprintf@plt>
   1874c:	add	sp, sp, #76	; 0x4c
   18750:	ldrd	r4, [sp]
   18754:	add	sp, sp, #8
   18758:	pop	{pc}		; (ldr pc, [sp], #4)
   1875c:	mov	r3, r0
   18760:	movw	r1, #63636	; 0xf894
   18764:	movt	r1, #1
   18768:	mov	r0, r4
   1876c:	bl	11a3c <fprintf@plt>
   18770:	b	18680 <argp_parse@@Base+0x1930>
   18774:	ldr	r2, [sp, #32]
   18778:	mov	r0, r4
   1877c:	movw	r1, #63856	; 0xf970
   18780:	movt	r1, #1
   18784:	add	sp, sp, #76	; 0x4c
   18788:	ldrd	r4, [sp]
   1878c:	ldr	lr, [sp, #8]
   18790:	add	sp, sp, #12
   18794:	b	11a3c <fprintf@plt>
   18798:	ldrd	r2, [sp, #32]
   1879c:	mov	r0, r4
   187a0:	movw	r1, #63872	; 0xf980
   187a4:	movt	r1, #1
   187a8:	add	sp, sp, #76	; 0x4c
   187ac:	ldrd	r4, [sp]
   187b0:	ldr	lr, [sp, #8]
   187b4:	add	sp, sp, #12
   187b8:	b	11a3c <fprintf@plt>
   187bc:	ldrd	r2, [sp, #32]
   187c0:	mov	r0, r4
   187c4:	movw	r1, #63896	; 0xf998
   187c8:	movt	r1, #1
   187cc:	ldr	ip, [sp, #40]	; 0x28
   187d0:	str	ip, [sp, #88]	; 0x58
   187d4:	add	sp, sp, #76	; 0x4c
   187d8:	ldrd	r4, [sp]
   187dc:	ldr	lr, [sp, #8]
   187e0:	add	sp, sp, #12
   187e4:	b	11a3c <fprintf@plt>
   187e8:	mov	r0, r4
   187ec:	movw	r1, #63924	; 0xf9b4
   187f0:	movt	r1, #1
   187f4:	ldr	r3, [sp, #40]	; 0x28
   187f8:	ldr	ip, [sp, #44]	; 0x2c
   187fc:	ldr	r2, [sp, #32]
   18800:	stm	sp, {r3, ip}
   18804:	ldr	r3, [sp, #36]	; 0x24
   18808:	bl	11a3c <fprintf@plt>
   1880c:	b	1874c <argp_parse@@Base+0x19fc>
   18810:	ldrd	r2, [sp, #40]	; 0x28
   18814:	mov	r0, r4
   18818:	movw	r1, #63956	; 0xf9d4
   1881c:	movt	r1, #1
   18820:	ldr	ip, [sp, #48]	; 0x30
   18824:	strd	r2, [sp]
   18828:	ldrd	r2, [sp, #32]
   1882c:	str	ip, [sp, #8]
   18830:	bl	11a3c <fprintf@plt>
   18834:	b	1874c <argp_parse@@Base+0x19fc>
   18838:	ldr	ip, [sp, #40]	; 0x28
   1883c:	mov	r0, r4
   18840:	movw	r1, #63992	; 0xf9f8
   18844:	movt	r1, #1
   18848:	ldr	r2, [sp, #44]	; 0x2c
   1884c:	ldr	r3, [sp, #52]	; 0x34
   18850:	str	ip, [sp]
   18854:	ldr	ip, [sp, #48]	; 0x30
   18858:	str	r2, [sp, #4]
   1885c:	str	ip, [sp, #8]
   18860:	str	r3, [sp, #12]
   18864:	ldrd	r2, [sp, #32]
   18868:	bl	11a3c <fprintf@plt>
   1886c:	b	1874c <argp_parse@@Base+0x19fc>
   18870:	ldr	r3, [sp, #40]	; 0x28
   18874:	mov	r0, r4
   18878:	movw	r1, #64032	; 0xfa20
   1887c:	movt	r1, #1
   18880:	ldr	ip, [sp, #44]	; 0x2c
   18884:	ldr	r2, [sp, #56]	; 0x38
   18888:	stm	sp, {r3, ip}
   1888c:	ldr	r3, [sp, #48]	; 0x30
   18890:	ldr	ip, [sp, #52]	; 0x34
   18894:	str	r3, [sp, #8]
   18898:	str	r2, [sp, #16]
   1889c:	str	ip, [sp, #12]
   188a0:	ldr	r2, [sp, #32]
   188a4:	ldr	r3, [sp, #36]	; 0x24
   188a8:	bl	11a3c <fprintf@plt>
   188ac:	b	1874c <argp_parse@@Base+0x19fc>
   188b0:	ldrd	r2, [sp, #40]	; 0x28
   188b4:	mov	r0, r4
   188b8:	movw	r1, #64076	; 0xfa4c
   188bc:	movt	r1, #1
   188c0:	ldr	ip, [sp, #60]	; 0x3c
   188c4:	strd	r2, [sp]
   188c8:	ldrd	r2, [sp, #48]	; 0x30
   188cc:	str	ip, [sp, #20]
   188d0:	ldr	ip, [sp, #56]	; 0x38
   188d4:	strd	r2, [sp, #8]
   188d8:	ldrd	r2, [sp, #32]
   188dc:	str	ip, [sp, #16]
   188e0:	bl	11a3c <fprintf@plt>
   188e4:	b	1874c <argp_parse@@Base+0x19fc>
   188e8:	mov	r5, r3
   188ec:	b	1865c <argp_parse@@Base+0x190c>
   188f0:	mov	r5, #1
   188f4:	b	1865c <argp_parse@@Base+0x190c>
   188f8:	mov	r5, #2
   188fc:	b	1865c <argp_parse@@Base+0x190c>
   18900:	mov	r5, #3
   18904:	b	1865c <argp_parse@@Base+0x190c>
   18908:	mov	r5, #4
   1890c:	b	1865c <argp_parse@@Base+0x190c>
   18910:	mov	r5, #5
   18914:	b	1865c <argp_parse@@Base+0x190c>
   18918:	mov	r5, #6
   1891c:	b	1865c <argp_parse@@Base+0x190c>
   18920:	mov	r5, #7
   18924:	b	1865c <argp_parse@@Base+0x190c>
   18928:	mov	r5, #8
   1892c:	b	1865c <argp_parse@@Base+0x190c>
   18930:	movw	r1, #64176	; 0xfab0
   18934:	movt	r1, #1
   18938:	ldr	ip, [sp, #40]	; 0x28
   1893c:	mov	r0, r4
   18940:	b	18710 <argp_parse@@Base+0x19c0>
   18944:	push	{r3}		; (str r3, [sp, #-4]!)
   18948:	push	{lr}		; (str lr, [sp, #-4]!)
   1894c:	sub	sp, sp, #56	; 0x38
   18950:	ldr	ip, [sp, #64]	; 0x40
   18954:	add	r3, sp, #64	; 0x40
   18958:	str	r3, [sp, #12]
   1895c:	cmp	ip, #0
   18960:	str	ip, [sp, #16]
   18964:	beq	189fc <argp_parse@@Base+0x1cac>
   18968:	ldr	ip, [sp, #68]	; 0x44
   1896c:	cmp	ip, #0
   18970:	str	ip, [sp, #20]
   18974:	beq	18a20 <argp_parse@@Base+0x1cd0>
   18978:	ldr	ip, [sp, #72]	; 0x48
   1897c:	cmp	ip, #0
   18980:	str	ip, [sp, #24]
   18984:	beq	18a28 <argp_parse@@Base+0x1cd8>
   18988:	ldr	ip, [sp, #76]	; 0x4c
   1898c:	cmp	ip, #0
   18990:	str	ip, [sp, #28]
   18994:	beq	18a30 <argp_parse@@Base+0x1ce0>
   18998:	ldr	ip, [sp, #80]	; 0x50
   1899c:	cmp	ip, #0
   189a0:	str	ip, [sp, #32]
   189a4:	beq	18a38 <argp_parse@@Base+0x1ce8>
   189a8:	ldr	ip, [sp, #84]	; 0x54
   189ac:	cmp	ip, #0
   189b0:	str	ip, [sp, #36]	; 0x24
   189b4:	beq	18a40 <argp_parse@@Base+0x1cf0>
   189b8:	ldr	ip, [sp, #88]	; 0x58
   189bc:	cmp	ip, #0
   189c0:	str	ip, [sp, #40]	; 0x28
   189c4:	beq	18a48 <argp_parse@@Base+0x1cf8>
   189c8:	ldr	ip, [sp, #92]	; 0x5c
   189cc:	cmp	ip, #0
   189d0:	str	ip, [sp, #44]	; 0x2c
   189d4:	beq	18a50 <argp_parse@@Base+0x1d00>
   189d8:	ldr	ip, [sp, #96]	; 0x60
   189dc:	cmp	ip, #0
   189e0:	str	ip, [sp, #48]	; 0x30
   189e4:	beq	18a58 <argp_parse@@Base+0x1d08>
   189e8:	ldr	r3, [sp, #100]	; 0x64
   189ec:	cmp	r3, #0
   189f0:	str	r3, [sp, #52]	; 0x34
   189f4:	movne	ip, #10
   189f8:	moveq	ip, #9
   189fc:	ldr	r3, [sp, #60]	; 0x3c
   18a00:	add	lr, sp, #16
   18a04:	str	lr, [sp]
   18a08:	str	ip, [sp, #4]
   18a0c:	bl	17f80 <argp_parse@@Base+0x1230>
   18a10:	add	sp, sp, #56	; 0x38
   18a14:	pop	{lr}		; (ldr lr, [sp], #4)
   18a18:	add	sp, sp, #4
   18a1c:	bx	lr
   18a20:	mov	ip, #1
   18a24:	b	189fc <argp_parse@@Base+0x1cac>
   18a28:	mov	ip, #2
   18a2c:	b	189fc <argp_parse@@Base+0x1cac>
   18a30:	mov	ip, #3
   18a34:	b	189fc <argp_parse@@Base+0x1cac>
   18a38:	mov	ip, #4
   18a3c:	b	189fc <argp_parse@@Base+0x1cac>
   18a40:	mov	ip, #5
   18a44:	b	189fc <argp_parse@@Base+0x1cac>
   18a48:	mov	ip, #6
   18a4c:	b	189fc <argp_parse@@Base+0x1cac>
   18a50:	mov	ip, #7
   18a54:	b	189fc <argp_parse@@Base+0x1cac>
   18a58:	mov	ip, #8
   18a5c:	b	189fc <argp_parse@@Base+0x1cac>
   18a60:	movw	r3, #5052	; 0x13bc
   18a64:	movt	r3, #3
   18a68:	str	r4, [sp, #-8]!
   18a6c:	mov	r0, #10
   18a70:	ldr	r1, [r3]
   18a74:	str	lr, [sp, #4]
   18a78:	bl	11b38 <fputc@plt>
   18a7c:	movw	r1, #64236	; 0xfaec
   18a80:	movt	r1, #1
   18a84:	movw	r0, #64260	; 0xfb04
   18a88:	movt	r0, #1
   18a8c:	bl	117b4 <printf@plt>
   18a90:	movw	r2, #64280	; 0xfb18
   18a94:	movt	r2, #1
   18a98:	movw	r1, #63540	; 0xf834
   18a9c:	movt	r1, #1
   18aa0:	movw	r0, #64320	; 0xfb40
   18aa4:	movt	r0, #1
   18aa8:	bl	117b4 <printf@plt>
   18aac:	movw	r1, #64340	; 0xfb54
   18ab0:	movt	r1, #1
   18ab4:	ldr	r4, [sp]
   18ab8:	movw	r0, #64372	; 0xfb74
   18abc:	movt	r0, #1
   18ac0:	ldr	lr, [sp, #4]
   18ac4:	add	sp, sp, #8
   18ac8:	b	117b4 <printf@plt>
   18acc:	cmp	r1, #0
   18ad0:	cmpne	r0, #0
   18ad4:	beq	18b20 <argp_parse@@Base+0x1dd0>
   18ad8:	strd	r4, [sp, #-16]!
   18adc:	umull	r4, r5, r0, r1
   18ae0:	str	r6, [sp, #8]
   18ae4:	str	lr, [sp, #12]
   18ae8:	adds	r3, r5, #0
   18aec:	movne	r3, #1
   18af0:	cmp	r4, #0
   18af4:	blt	18b00 <argp_parse@@Base+0x1db0>
   18af8:	cmp	r3, #0
   18afc:	beq	18b2c <argp_parse@@Base+0x1ddc>
   18b00:	bl	11a54 <__errno_location@plt>
   18b04:	mov	r3, #12
   18b08:	ldrd	r4, [sp]
   18b0c:	ldr	r6, [sp, #8]
   18b10:	add	sp, sp, #12
   18b14:	str	r3, [r0]
   18b18:	mov	r0, #0
   18b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   18b20:	mov	r1, #1
   18b24:	mov	r0, r1
   18b28:	b	11748 <calloc@plt>
   18b2c:	ldrd	r4, [sp]
   18b30:	ldr	r6, [sp, #8]
   18b34:	ldr	lr, [sp, #12]
   18b38:	add	sp, sp, #16
   18b3c:	b	11748 <calloc@plt>
   18b40:	cmp	r0, #0
   18b44:	beq	18b50 <argp_parse@@Base+0x1e00>
   18b48:	blt	18b58 <argp_parse@@Base+0x1e08>
   18b4c:	b	11988 <malloc@plt>
   18b50:	mov	r0, #1
   18b54:	b	11988 <malloc@plt>
   18b58:	str	r4, [sp, #-8]!
   18b5c:	str	lr, [sp, #4]
   18b60:	bl	11a54 <__errno_location@plt>
   18b64:	mov	r3, #12
   18b68:	ldr	r4, [sp]
   18b6c:	add	sp, sp, #4
   18b70:	str	r3, [r0]
   18b74:	mov	r0, #0
   18b78:	pop	{pc}		; (ldr pc, [sp], #4)
   18b7c:	cmp	r0, #0
   18b80:	beq	18ba8 <argp_parse@@Base+0x1e58>
   18b84:	cmp	r1, #0
   18b88:	str	r4, [sp, #-8]!
   18b8c:	str	lr, [sp, #4]
   18b90:	beq	18bb0 <argp_parse@@Base+0x1e60>
   18b94:	blt	18bc4 <argp_parse@@Base+0x1e74>
   18b98:	ldr	r4, [sp]
   18b9c:	ldr	lr, [sp, #4]
   18ba0:	add	sp, sp, #8
   18ba4:	b	118c8 <realloc@plt>
   18ba8:	mov	r0, r1
   18bac:	b	18b40 <argp_parse@@Base+0x1df0>
   18bb0:	bl	17d88 <argp_parse@@Base+0x1038>
   18bb4:	ldr	r4, [sp]
   18bb8:	add	sp, sp, #4
   18bbc:	mov	r0, #0
   18bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   18bc4:	bl	11a54 <__errno_location@plt>
   18bc8:	mov	r3, #12
   18bcc:	str	r3, [r0]
   18bd0:	b	18bb4 <argp_parse@@Base+0x1e64>
   18bd4:	ldr	r3, [r0, #12]
   18bd8:	strd	r4, [sp, #-16]!
   18bdc:	ldr	r2, [r1, #12]
   18be0:	str	r6, [sp, #8]
   18be4:	str	lr, [sp, #12]
   18be8:	cmp	r3, r2
   18bec:	beq	18c4c <argp_parse@@Base+0x1efc>
   18bf0:	mov	r5, r1
   18bf4:	mov	r4, r0
   18bf8:	mov	r1, r2
   18bfc:	mov	r0, r3
   18c00:	bl	18bd4 <argp_parse@@Base+0x1e84>
   18c04:	cmp	r0, #0
   18c08:	bne	18c3c <argp_parse@@Base+0x1eec>
   18c0c:	ldr	r3, [r5, #8]
   18c10:	ldr	r0, [r4, #8]
   18c14:	mvn	r2, r3
   18c18:	lsr	r2, r2, #31
   18c1c:	cmp	r2, r0, lsr #31
   18c20:	subne	r0, r0, r3
   18c24:	subeq	r0, r3, r0
   18c28:	cmp	r0, #0
   18c2c:	bne	18c3c <argp_parse@@Base+0x1eec>
   18c30:	ldr	r0, [r4, #4]
   18c34:	ldr	r3, [r5, #4]
   18c38:	sub	r0, r3, r0
   18c3c:	ldrd	r4, [sp]
   18c40:	ldr	r6, [sp, #8]
   18c44:	add	sp, sp, #12
   18c48:	pop	{pc}		; (ldr pc, [sp], #4)
   18c4c:	ldr	lr, [r1, #4]
   18c50:	ldr	r3, [r1, #8]
   18c54:	ldr	r2, [r0, #8]
   18c58:	ldr	ip, [r0, #4]
   18c5c:	mvn	r1, r3
   18c60:	lsr	r1, r1, #31
   18c64:	ldrd	r4, [sp]
   18c68:	cmp	r1, r2, lsr #31
   18c6c:	ldr	r6, [sp, #8]
   18c70:	add	sp, sp, #12
   18c74:	subne	r0, r2, r3
   18c78:	subeq	r0, r3, r2
   18c7c:	cmp	r0, #0
   18c80:	subeq	r0, lr, ip
   18c84:	pop	{pc}		; (ldr pc, [sp], #4)
   18c88:	strd	r4, [sp, #-16]!
   18c8c:	subs	r5, r0, #0
   18c90:	mov	r4, r1
   18c94:	str	r6, [sp, #8]
   18c98:	str	lr, [sp, #12]
   18c9c:	beq	18cb0 <argp_parse@@Base+0x1f60>
   18ca0:	mov	r1, #10
   18ca4:	bl	11a24 <strchr@plt>
   18ca8:	adds	r5, r0, #0
   18cac:	movne	r5, #1
   18cb0:	cmp	r4, #0
   18cb4:	beq	18ce0 <argp_parse@@Base+0x1f90>
   18cb8:	ldr	r3, [r4]
   18cbc:	cmp	r3, #0
   18cc0:	beq	18ce0 <argp_parse@@Base+0x1f90>
   18cc4:	ldr	r0, [r3, #8]
   18cc8:	ldr	r1, [r3, #16]
   18ccc:	bl	18c88 <argp_parse@@Base+0x1f38>
   18cd0:	ldr	r3, [r4, #16]!
   18cd4:	add	r5, r5, r0
   18cd8:	cmp	r3, #0
   18cdc:	bne	18cc4 <argp_parse@@Base+0x1f74>
   18ce0:	mov	r0, r5
   18ce4:	ldrd	r4, [sp]
   18ce8:	ldr	r6, [sp, #8]
   18cec:	add	sp, sp, #12
   18cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   18cf4:	ldr	r3, [r0, #16]
   18cf8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18cfc:	ldr	r4, [r0]
   18d00:	strd	r6, [sp, #8]
   18d04:	strd	r8, [sp, #16]
   18d08:	strd	sl, [sp, #24]
   18d0c:	str	lr, [sp, #32]
   18d10:	sub	sp, sp, #52	; 0x34
   18d14:	stm	sp, {r0, r3}
   18d18:	mov	r0, #16
   18d1c:	str	r1, [sp, #8]
   18d20:	bl	18b40 <argp_parse@@Base+0x1df0>
   18d24:	subs	fp, r0, #0
   18d28:	beq	19390 <argp_parse@@Base+0x2640>
   18d2c:	mov	r3, #0
   18d30:	cmp	r4, r3
   18d34:	str	r3, [fp, #4]
   18d38:	str	r3, [fp, #12]
   18d3c:	beq	18f98 <argp_parse@@Base+0x2248>
   18d40:	ldr	r0, [r4, #12]
   18d44:	ands	r0, r0, #4
   18d48:	bne	193cc <argp_parse@@Base+0x267c>
   18d4c:	mov	r9, r0
   18d50:	add	r5, r4, #24
   18d54:	mov	r8, r0
   18d58:	b	18da8 <argp_parse@@Base+0x2058>
   18d5c:	ldr	r3, [r5, #-12]
   18d60:	tst	r3, #4
   18d64:	bne	18d74 <argp_parse@@Base+0x2024>
   18d68:	add	r9, r9, #1
   18d6c:	str	r9, [fp, #4]
   18d70:	ldr	r3, [r5, #-12]
   18d74:	tst	r3, #8
   18d78:	bne	18da4 <argp_parse@@Base+0x2054>
   18d7c:	ldr	r6, [r5, #-20]	; 0xffffffec
   18d80:	sub	r3, r6, #1
   18d84:	cmp	r3, #254	; 0xfe
   18d88:	bhi	18da4 <argp_parse@@Base+0x2054>
   18d8c:	bl	119dc <__ctype_b_loc@plt>
   18d90:	ldr	r3, [r0]
   18d94:	lsl	r6, r6, #1
   18d98:	ldrh	r3, [r3, r6]
   18d9c:	tst	r3, #16384	; 0x4000
   18da0:	addne	r8, r8, #1
   18da4:	add	r5, r5, #24
   18da8:	ldr	r3, [r5, #-20]	; 0xffffffec
   18dac:	cmp	r3, #0
   18db0:	bne	18d5c <argp_parse@@Base+0x200c>
   18db4:	ldr	r3, [r5, #-24]	; 0xffffffe8
   18db8:	cmp	r3, #0
   18dbc:	bne	18d5c <argp_parse@@Base+0x200c>
   18dc0:	ldr	r3, [r5, #-8]
   18dc4:	cmp	r3, #0
   18dc8:	bne	18d5c <argp_parse@@Base+0x200c>
   18dcc:	ldr	sl, [r5, #-4]
   18dd0:	cmp	sl, #0
   18dd4:	bne	18d5c <argp_parse@@Base+0x200c>
   18dd8:	rsb	r9, r9, r9, lsl #3
   18ddc:	lsl	r0, r9, #2
   18de0:	bl	18b40 <argp_parse@@Base+0x1df0>
   18de4:	str	r0, [fp]
   18de8:	add	r0, r8, #1
   18dec:	bl	18b40 <argp_parse@@Base+0x1df0>
   18df0:	ldr	r5, [fp]
   18df4:	mov	r7, r0
   18df8:	str	r0, [fp, #8]
   18dfc:	cmp	r5, #0
   18e00:	cmpne	r0, #0
   18e04:	beq	19334 <argp_parse@@Base+0x25e4>
   18e08:	ldr	r2, [fp, #4]
   18e0c:	movw	r3, #37449	; 0x9249
   18e10:	movt	r3, #2340	; 0x924
   18e14:	cmp	r2, r3
   18e18:	bhi	19354 <argp_parse@@Base+0x2604>
   18e1c:	mov	r6, r0
   18e20:	mov	r8, sl
   18e24:	ldr	r3, [r4, #4]
   18e28:	mov	r0, sl
   18e2c:	add	r5, r5, #28
   18e30:	str	fp, [sp, #12]
   18e34:	ldr	sl, [sp, #8]
   18e38:	mov	fp, r7
   18e3c:	cmp	r3, #0
   18e40:	ldr	r7, [r4, #20]
   18e44:	bne	18e54 <argp_parse@@Base+0x2104>
   18e48:	ldr	ip, [r4]
   18e4c:	cmp	ip, #0
   18e50:	beq	18f34 <argp_parse@@Base+0x21e4>
   18e54:	cmp	r7, #0
   18e58:	str	r4, [r5, #-28]	; 0xffffffe4
   18e5c:	str	r8, [r5, #-24]	; 0xffffffe8
   18e60:	str	r6, [r5, #-20]	; 0xffffffec
   18e64:	bne	18e78 <argp_parse@@Base+0x2128>
   18e68:	ldr	r2, [r4]
   18e6c:	orrs	r3, r2, r3
   18e70:	movne	r7, r0
   18e74:	beq	18f54 <argp_parse@@Base+0x2204>
   18e78:	ldr	r2, [sp]
   18e7c:	mov	r3, #0
   18e80:	str	r7, [r5, #-16]
   18e84:	str	sl, [r5, #-12]
   18e88:	str	r2, [r5, #-8]
   18e8c:	add	r3, r3, #1
   18e90:	str	r3, [r5, #-24]	; 0xffffffe8
   18e94:	ldr	r3, [r4, #12]
   18e98:	tst	r3, #8
   18e9c:	bne	18f04 <argp_parse@@Base+0x21b4>
   18ea0:	ldr	r9, [r4, #4]
   18ea4:	sub	r3, r9, #1
   18ea8:	cmp	r3, #254	; 0xfe
   18eac:	bhi	18f04 <argp_parse@@Base+0x21b4>
   18eb0:	bl	119dc <__ctype_b_loc@plt>
   18eb4:	ldr	r0, [r0]
   18eb8:	lsl	r3, r9, #1
   18ebc:	ldrh	r3, [r0, r3]
   18ec0:	tst	r3, #16384	; 0x4000
   18ec4:	beq	18f04 <argp_parse@@Base+0x21b4>
   18ec8:	cmp	fp, r6
   18ecc:	uxtb	r9, r9
   18ed0:	bcs	18f00 <argp_parse@@Base+0x21b0>
   18ed4:	ldrb	r3, [fp]
   18ed8:	cmp	r3, r9
   18edc:	beq	18f04 <argp_parse@@Base+0x21b4>
   18ee0:	mov	r3, fp
   18ee4:	sub	r0, r6, #1
   18ee8:	b	18ef8 <argp_parse@@Base+0x21a8>
   18eec:	ldrb	ip, [r3, #1]!
   18ef0:	cmp	ip, r9
   18ef4:	beq	18f04 <argp_parse@@Base+0x21b4>
   18ef8:	cmp	r0, r3
   18efc:	bne	18eec <argp_parse@@Base+0x219c>
   18f00:	strb	r9, [r6], #1
   18f04:	add	r4, r4, #24
   18f08:	ldr	r0, [r4, #4]
   18f0c:	cmp	r0, #0
   18f10:	bne	18f20 <argp_parse@@Base+0x21d0>
   18f14:	ldr	r3, [r4]
   18f18:	cmp	r3, #0
   18f1c:	beq	18f5c <argp_parse@@Base+0x220c>
   18f20:	ldr	r3, [r4, #12]
   18f24:	tst	r3, #4
   18f28:	beq	18f80 <argp_parse@@Base+0x2230>
   18f2c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   18f30:	b	18e8c <argp_parse@@Base+0x213c>
   18f34:	ldr	ip, [r4, #16]
   18f38:	cmp	ip, #0
   18f3c:	beq	18f88 <argp_parse@@Base+0x2238>
   18f40:	cmp	r7, #0
   18f44:	str	r4, [r5, #-28]	; 0xffffffe4
   18f48:	str	r3, [r5, #-24]	; 0xffffffe8
   18f4c:	str	r6, [r5, #-20]	; 0xffffffec
   18f50:	bne	18e78 <argp_parse@@Base+0x2128>
   18f54:	add	r7, r0, #1
   18f58:	b	18e78 <argp_parse@@Base+0x2128>
   18f5c:	ldr	r3, [r4, #16]
   18f60:	cmp	r3, #0
   18f64:	bne	18f20 <argp_parse@@Base+0x21d0>
   18f68:	ldr	r3, [r4, #20]
   18f6c:	cmp	r3, #0
   18f70:	bne	18f20 <argp_parse@@Base+0x21d0>
   18f74:	add	r5, r5, #28
   18f78:	mov	r0, r7
   18f7c:	b	18e3c <argp_parse@@Base+0x20ec>
   18f80:	mov	r3, r0
   18f84:	b	18f74 <argp_parse@@Base+0x2224>
   18f88:	cmp	r7, #0
   18f8c:	bne	190d4 <argp_parse@@Base+0x2384>
   18f90:	ldr	fp, [sp, #12]
   18f94:	strb	r3, [r6]
   18f98:	ldr	sl, [sp, #4]
   18f9c:	cmp	sl, #0
   18fa0:	beq	190b4 <argp_parse@@Base+0x2364>
   18fa4:	ldr	r0, [sl]
   18fa8:	cmp	r0, #0
   18fac:	beq	190b4 <argp_parse@@Base+0x2364>
   18fb0:	movw	r3, #37449	; 0x9249
   18fb4:	movt	r3, #2340	; 0x924
   18fb8:	str	r3, [sp, #28]
   18fbc:	add	r3, fp, #12
   18fc0:	str	r3, [sp, #44]	; 0x2c
   18fc4:	ldr	r6, [sl, #8]
   18fc8:	ldr	r5, [sl, #12]
   18fcc:	cmp	r5, #0
   18fd0:	bne	18fdc <argp_parse@@Base+0x228c>
   18fd4:	cmp	r6, #0
   18fd8:	beq	1931c <argp_parse@@Base+0x25cc>
   18fdc:	ldr	r3, [sp]
   18fe0:	mov	r0, #28
   18fe4:	ldr	r4, [r3, #16]
   18fe8:	bl	18b40 <argp_parse@@Base+0x1df0>
   18fec:	subs	r1, r0, #0
   18ff0:	beq	190e4 <argp_parse@@Base+0x2394>
   18ff4:	ldr	r2, [sp]
   18ff8:	sub	r4, sl, r4
   18ffc:	asr	r4, r4, #4
   19000:	str	r6, [r1]
   19004:	ldr	r3, [sp, #8]
   19008:	strd	r4, [r1, #4]
   1900c:	cmp	r3, #0
   19010:	str	r3, [r1, #12]
   19014:	ldrne	r3, [r3, #20]
   19018:	str	r2, [r1, #16]
   1901c:	ldr	r2, [fp, #12]
   19020:	ldr	r0, [sl]
   19024:	addne	r3, r3, #1
   19028:	str	r1, [fp, #12]
   1902c:	str	r3, [r1, #20]
   19030:	str	r2, [r1, #24]
   19034:	bl	18cf4 <argp_parse@@Base+0x1fa4>
   19038:	ldr	r3, [fp, #12]
   1903c:	mov	r4, r0
   19040:	cmp	r3, #0
   19044:	bne	19050 <argp_parse@@Base+0x2300>
   19048:	b	19324 <argp_parse@@Base+0x25d4>
   1904c:	mov	r3, r2
   19050:	ldr	r2, [r3, #24]
   19054:	cmp	r2, #0
   19058:	bne	1904c <argp_parse@@Base+0x22fc>
   1905c:	add	r3, r3, #24
   19060:	ldr	r2, [r4, #4]
   19064:	ldr	r1, [r4, #12]
   19068:	cmp	r2, #0
   1906c:	str	r1, [r3]
   19070:	mov	r3, #0
   19074:	str	r3, [r4, #12]
   19078:	beq	190a0 <argp_parse@@Base+0x2350>
   1907c:	ldr	r3, [fp, #4]
   19080:	cmp	r3, #0
   19084:	bne	190ec <argp_parse@@Base+0x239c>
   19088:	ldr	r1, [r4]
   1908c:	str	r2, [fp, #4]
   19090:	ldr	r2, [r4, #8]
   19094:	str	r1, [fp]
   19098:	str	r2, [fp, #8]
   1909c:	str	r3, [r4, #4]
   190a0:	mov	r0, r4
   190a4:	bl	17d88 <argp_parse@@Base+0x1038>
   190a8:	ldr	r0, [sl, #16]!
   190ac:	cmp	r0, #0
   190b0:	bne	18fc4 <argp_parse@@Base+0x2274>
   190b4:	mov	r0, fp
   190b8:	add	sp, sp, #52	; 0x34
   190bc:	ldrd	r4, [sp]
   190c0:	ldrd	r6, [sp, #8]
   190c4:	ldrd	r8, [sp, #16]
   190c8:	ldrd	sl, [sp, #24]
   190cc:	add	sp, sp, #32
   190d0:	pop	{pc}		; (ldr pc, [sp], #4)
   190d4:	str	r4, [r5, #-28]	; 0xffffffe4
   190d8:	str	r3, [r5, #-24]	; 0xffffffe8
   190dc:	str	r6, [r5, #-20]	; 0xffffffec
   190e0:	b	18e78 <argp_parse@@Base+0x2128>
   190e4:	ldr	r0, [sl]
   190e8:	b	19034 <argp_parse@@Base+0x22e4>
   190ec:	add	r3, r2, r3
   190f0:	rsb	r0, r3, r3, lsl #3
   190f4:	str	r3, [sp, #12]
   190f8:	lsl	r0, r0, #2
   190fc:	bl	18b40 <argp_parse@@Base+0x1df0>
   19100:	mov	r5, r0
   19104:	ldr	r0, [fp, #8]
   19108:	str	r5, [sp, #4]
   1910c:	bl	11a0c <strlen@plt>
   19110:	mov	r8, r0
   19114:	ldr	r0, [r4, #8]
   19118:	bl	11a0c <strlen@plt>
   1911c:	add	r0, r8, r0
   19120:	add	r0, r0, #1
   19124:	bl	18b40 <argp_parse@@Base+0x1df0>
   19128:	cmp	r5, #0
   1912c:	cmpne	r0, #0
   19130:	mov	r9, r0
   19134:	beq	19374 <argp_parse@@Base+0x2624>
   19138:	ldr	r3, [sp, #12]
   1913c:	ldr	r2, [sp, #28]
   19140:	cmp	r3, r2
   19144:	bhi	193b0 <argp_parse@@Base+0x2660>
   19148:	ldm	fp, {r1, r6}
   1914c:	ldr	r0, [sp, #4]
   19150:	rsb	r5, r6, r6, lsl #3
   19154:	str	r1, [sp, #16]
   19158:	lsl	r5, r5, #2
   1915c:	mov	r2, r5
   19160:	bl	119d0 <mempcpy@plt>
   19164:	ldm	r4, {r1, r3}
   19168:	rsb	r2, r3, r3, lsl #3
   1916c:	str	r3, [sp, #20]
   19170:	lsl	r2, r2, #2
   19174:	bl	1182c <memcpy@plt>
   19178:	ldr	r7, [fp, #8]
   1917c:	mov	r2, r8
   19180:	mov	r0, r9
   19184:	mov	r1, r7
   19188:	bl	1182c <memcpy@plt>
   1918c:	cmp	r6, #0
   19190:	ldr	r3, [sp, #20]
   19194:	beq	1932c <argp_parse@@Base+0x25dc>
   19198:	ldr	r1, [sp, #4]
   1919c:	subs	r6, r6, #1
   191a0:	add	r1, r1, #28
   191a4:	ldr	r2, [r1, #-20]	; 0xffffffec
   191a8:	sub	r2, r2, r7
   191ac:	add	r2, r9, r2
   191b0:	str	r2, [r1, #-20]	; 0xffffffec
   191b4:	bne	1919c <argp_parse@@Base+0x244c>
   191b8:	ldr	r2, [sp, #4]
   191bc:	add	r5, r2, r5
   191c0:	add	r2, r9, r8
   191c4:	cmp	r3, #0
   191c8:	ldr	r1, [r4, #8]
   191cc:	str	r2, [sp, #20]
   191d0:	beq	19270 <argp_parse@@Base+0x2520>
   191d4:	sub	r0, r2, #1
   191d8:	add	r5, r5, #28
   191dc:	mov	r7, r2
   191e0:	str	r0, [sp, #24]
   191e4:	strd	sl, [sp, #36]	; 0x24
   191e8:	mov	sl, r1
   191ec:	mov	fp, r3
   191f0:	str	r4, [sp, #32]
   191f4:	str	r7, [r5, #-20]	; 0xffffffec
   191f8:	ldr	r6, [r5, #-24]	; 0xffffffe8
   191fc:	ldr	r8, [r5, #-28]	; 0xffffffe4
   19200:	cmp	r6, #0
   19204:	beq	19258 <argp_parse@@Base+0x2508>
   19208:	ldr	r3, [r8, #12]
   1920c:	tst	r3, #8
   19210:	bne	1924c <argp_parse@@Base+0x24fc>
   19214:	ldr	r4, [r8, #4]
   19218:	sub	r3, r4, #1
   1921c:	cmp	r3, #254	; 0xfe
   19220:	bhi	1924c <argp_parse@@Base+0x24fc>
   19224:	bl	119dc <__ctype_b_loc@plt>
   19228:	ldr	r1, [r0]
   1922c:	lsl	r2, r4, #1
   19230:	ldrb	r3, [sl]
   19234:	ldrh	r2, [r1, r2]
   19238:	sub	r4, r3, r4
   1923c:	clz	r4, r4
   19240:	lsr	r4, r4, #5
   19244:	ands	r2, r4, r2, lsr #14
   19248:	bne	192d8 <argp_parse@@Base+0x2588>
   1924c:	subs	r6, r6, #1
   19250:	add	r8, r8, #24
   19254:	bne	19208 <argp_parse@@Base+0x24b8>
   19258:	subs	fp, fp, #1
   1925c:	add	r5, r5, #28
   19260:	bne	191f4 <argp_parse@@Base+0x24a4>
   19264:	add	r4, sp, #32
   19268:	mov	r2, r7
   1926c:	ldm	r4, {r4, sl, fp}
   19270:	mov	r3, #0
   19274:	strb	r3, [r2]
   19278:	ldr	r0, [sp, #16]
   1927c:	bl	17d88 <argp_parse@@Base+0x1038>
   19280:	ldr	r0, [fp, #8]
   19284:	bl	17d88 <argp_parse@@Base+0x1038>
   19288:	ldr	r3, [sp, #4]
   1928c:	ldr	r0, [r4, #12]
   19290:	str	r3, [fp]
   19294:	ldr	r3, [sp, #12]
   19298:	cmp	r0, #0
   1929c:	str	r3, [fp, #4]
   192a0:	str	r9, [fp, #8]
   192a4:	beq	192b8 <argp_parse@@Base+0x2568>
   192a8:	ldr	r5, [r0, #24]
   192ac:	bl	17d88 <argp_parse@@Base+0x1038>
   192b0:	subs	r0, r5, #0
   192b4:	bne	192a8 <argp_parse@@Base+0x2558>
   192b8:	ldr	r3, [r4, #4]
   192bc:	cmp	r3, #0
   192c0:	beq	190a0 <argp_parse@@Base+0x2350>
   192c4:	ldr	r0, [r4]
   192c8:	bl	17d88 <argp_parse@@Base+0x1038>
   192cc:	ldr	r0, [r4, #8]
   192d0:	bl	17d88 <argp_parse@@Base+0x1038>
   192d4:	b	190a0 <argp_parse@@Base+0x2350>
   192d8:	ldr	r2, [sp, #20]
   192dc:	cmp	r9, r2
   192e0:	bcs	19310 <argp_parse@@Base+0x25c0>
   192e4:	ldrb	r2, [r9]
   192e8:	cmp	r2, r3
   192ec:	beq	19314 <argp_parse@@Base+0x25c4>
   192f0:	mov	r2, r9
   192f4:	ldr	r0, [sp, #24]
   192f8:	b	19308 <argp_parse@@Base+0x25b8>
   192fc:	ldrb	r1, [r2, #1]!
   19300:	cmp	r1, r3
   19304:	beq	19314 <argp_parse@@Base+0x25c4>
   19308:	cmp	r0, r2
   1930c:	bne	192fc <argp_parse@@Base+0x25ac>
   19310:	strb	r3, [r7], #1
   19314:	add	sl, sl, #1
   19318:	b	1924c <argp_parse@@Base+0x24fc>
   1931c:	ldr	r1, [sp, #8]
   19320:	b	19034 <argp_parse@@Base+0x22e4>
   19324:	ldr	r3, [sp, #44]	; 0x2c
   19328:	b	19060 <argp_parse@@Base+0x2310>
   1932c:	ldr	r5, [sp, #4]
   19330:	b	191c0 <argp_parse@@Base+0x2470>
   19334:	movw	r3, #64460	; 0xfbcc
   19338:	movt	r3, #1
   1933c:	movw	r1, #64628	; 0xfc74
   19340:	movt	r1, #1
   19344:	movw	r0, #64660	; 0xfc94
   19348:	movt	r0, #1
   1934c:	movw	r2, #474	; 0x1da
   19350:	bl	11c58 <__assert_fail@plt>
   19354:	movw	r3, #64460	; 0xfbcc
   19358:	movt	r3, #1
   1935c:	movw	r1, #64628	; 0xfc74
   19360:	movt	r1, #1
   19364:	movw	r0, #64696	; 0xfcb8
   19368:	movt	r0, #1
   1936c:	mov	r2, #476	; 0x1dc
   19370:	bl	11c58 <__assert_fail@plt>
   19374:	movw	r1, #64628	; 0xfc74
   19378:	movt	r1, #1
   1937c:	ldr	r3, [pc, #104]	; 193ec <argp_parse@@Base+0x269c>
   19380:	movw	r0, #64756	; 0xfcf4
   19384:	movt	r0, #1
   19388:	movw	r2, #970	; 0x3ca
   1938c:	bl	11c58 <__assert_fail@plt>
   19390:	movw	r3, #64460	; 0xfbcc
   19394:	movt	r3, #1
   19398:	movw	r1, #64628	; 0xfc74
   1939c:	movt	r1, #1
   193a0:	movw	r0, #64640	; 0xfc80
   193a4:	movt	r0, #1
   193a8:	movw	r2, #450	; 0x1c2
   193ac:	bl	11c58 <__assert_fail@plt>
   193b0:	movw	r1, #64628	; 0xfc74
   193b4:	movt	r1, #1
   193b8:	ldr	r3, [pc, #44]	; 193ec <argp_parse@@Base+0x269c>
   193bc:	movw	r0, #64784	; 0xfd10
   193c0:	movt	r0, #1
   193c4:	mov	r2, #972	; 0x3cc
   193c8:	bl	11c58 <__assert_fail@plt>
   193cc:	movw	r3, #64460	; 0xfbcc
   193d0:	movt	r3, #1
   193d4:	movw	r1, #64628	; 0xfc74
   193d8:	movt	r1, #1
   193dc:	movw	r0, #64644	; 0xfc84
   193e0:	movt	r0, #1
   193e4:	mov	r2, #460	; 0x1cc
   193e8:	bl	11c58 <__assert_fail@plt>
   193ec:	ldrdeq	pc, [r1], -r8
   193f0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   193f4:	mov	r4, r3
   193f8:	ldr	r3, [r0, #20]
   193fc:	cmp	r3, #0
   19400:	ldr	r3, [r0, #16]
   19404:	strd	r6, [sp, #8]
   19408:	strd	r8, [sp, #16]
   1940c:	mov	r8, r2
   19410:	ldr	r2, [r2]
   19414:	strd	sl, [sp, #24]
   19418:	ldr	r7, [r0, #8]
   1941c:	str	lr, [sp, #32]
   19420:	sub	sp, sp, #28
   19424:	ldr	r5, [sp, #64]	; 0x40
   19428:	str	r3, [sp, #8]
   1942c:	moveq	r9, r7
   19430:	str	r7, [sp, #12]
   19434:	str	r2, [sp, #16]
   19438:	str	r1, [sp, #20]
   1943c:	beq	19464 <argp_parse@@Base+0x2714>
   19440:	mov	r6, r0
   19444:	bl	17c08 <argp_parse@@Base+0xeb8>
   19448:	mov	r2, r0
   1944c:	mov	r1, r7
   19450:	ldr	r3, [r6, #20]
   19454:	mov	r0, #6
   19458:	movt	r0, #512	; 0x200
   1945c:	blx	r3
   19460:	mov	r9, r0
   19464:	cmp	r9, #0
   19468:	beq	19658 <argp_parse@@Base+0x2908>
   1946c:	mov	r1, #10
   19470:	mov	r0, r9
   19474:	bl	117f0 <strchrnul@plt>
   19478:	ldrb	r3, [r0]
   1947c:	mov	r6, r0
   19480:	cmp	r3, #0
   19484:	moveq	fp, r3
   19488:	moveq	r7, r9
   1948c:	beq	194d8 <argp_parse@@Base+0x2788>
   19490:	ldr	r3, [sp, #16]
   19494:	ldrb	sl, [r3]
   19498:	cmp	sl, #0
   1949c:	beq	196dc <argp_parse@@Base+0x298c>
   194a0:	mov	fp, #0
   194a4:	add	r7, r0, #1
   194a8:	add	fp, fp, #1
   194ac:	mov	r0, r7
   194b0:	mov	r1, #10
   194b4:	bl	117f0 <strchrnul@plt>
   194b8:	cmp	fp, sl
   194bc:	bne	194a4 <argp_parse@@Base+0x2754>
   194c0:	mov	r6, r0
   194c4:	ldr	r3, [r8]
   194c8:	mov	r2, #1
   194cc:	mov	fp, r2
   194d0:	add	r3, r3, r2
   194d4:	str	r3, [r8]
   194d8:	ldr	ip, [r5, #16]
   194dc:	add	sl, r6, #1
   194e0:	sub	sl, sl, r7
   194e4:	ldr	r1, [r5, #24]
   194e8:	ldr	r3, [r5, #28]
   194ec:	sub	r1, r3, r1
   194f0:	mov	r0, r3
   194f4:	cmp	r1, ip
   194f8:	bhi	19644 <argp_parse@@Base+0x28f4>
   194fc:	ldr	ip, [r5, #8]
   19500:	ldr	r1, [r5, #20]
   19504:	cmp	r1, #0
   19508:	addge	sl, sl, r1
   1950c:	ldr	r1, [r5, #32]
   19510:	cmp	sl, ip
   19514:	bcc	19534 <argp_parse@@Base+0x27e4>
   19518:	cmp	r3, r1
   1951c:	bcs	19694 <argp_parse@@Base+0x2944>
   19520:	add	r0, r3, #1
   19524:	mov	r1, #10
   19528:	str	r0, [r5, #28]
   1952c:	strb	r1, [r3]
   19530:	b	1954c <argp_parse@@Base+0x27fc>
   19534:	cmp	r3, r1
   19538:	bcs	196c0 <argp_parse@@Base+0x2970>
   1953c:	add	r1, r0, #1
   19540:	mov	r3, #32
   19544:	str	r1, [r5, #28]
   19548:	strb	r3, [r0]
   1954c:	ldrd	r0, [r5, #28]
   19550:	sub	sl, r6, r7
   19554:	add	r3, r0, sl
   19558:	cmp	r1, r3
   1955c:	bcs	19578 <argp_parse@@Base+0x2828>
   19560:	mov	r1, sl
   19564:	mov	r0, r5
   19568:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1956c:	cmp	r0, #0
   19570:	beq	19590 <argp_parse@@Base+0x2840>
   19574:	ldr	r0, [r5, #28]
   19578:	mov	r2, sl
   1957c:	mov	r1, r7
   19580:	bl	1182c <memcpy@plt>
   19584:	ldr	r3, [r5, #28]
   19588:	add	sl, r3, sl
   1958c:	str	sl, [r5, #28]
   19590:	ldr	r3, [sp, #12]
   19594:	cmp	r3, r9
   19598:	beq	195a4 <argp_parse@@Base+0x2854>
   1959c:	mov	r0, r9
   195a0:	bl	17d88 <argp_parse@@Base+0x1038>
   195a4:	ldr	r3, [sp, #8]
   195a8:	cmp	r3, #0
   195ac:	beq	195f4 <argp_parse@@Base+0x28a4>
   195b0:	ldr	r2, [r3]
   195b4:	cmp	r2, #0
   195b8:	beq	195f4 <argp_parse@@Base+0x28a4>
   195bc:	mov	r3, r4
   195c0:	ldr	r7, [sp, #8]
   195c4:	ldr	r4, [sp, #20]
   195c8:	mov	r0, r2
   195cc:	mov	r1, r4
   195d0:	str	r5, [sp]
   195d4:	mov	r2, r8
   195d8:	bl	193f0 <argp_parse@@Base+0x26a0>
   195dc:	ldr	r2, [r7, #16]!
   195e0:	clz	r3, r0
   195e4:	lsr	r3, r3, #5
   195e8:	cmp	r2, #0
   195ec:	bne	195c8 <argp_parse@@Base+0x2878>
   195f0:	mov	r4, r3
   195f4:	cmp	r4, #0
   195f8:	mov	r3, fp
   195fc:	moveq	r3, #0
   19600:	cmp	r3, #0
   19604:	beq	19678 <argp_parse@@Base+0x2928>
   19608:	ldrb	r3, [r6]
   1960c:	ldr	r2, [sp, #16]
   19610:	cmp	r3, #0
   19614:	ldrb	r0, [r2]
   19618:	beq	19684 <argp_parse@@Base+0x2934>
   1961c:	add	r4, r0, #1
   19620:	mov	r0, #1
   19624:	strb	r4, [r2]
   19628:	add	sp, sp, #28
   1962c:	ldrd	r4, [sp]
   19630:	ldrd	r6, [sp, #8]
   19634:	ldrd	r8, [sp, #16]
   19638:	ldrd	sl, [sp, #24]
   1963c:	add	sp, sp, #32
   19640:	pop	{pc}		; (ldr pc, [sp], #4)
   19644:	mov	r0, r5
   19648:	bl	1e254 <argp_error@@Base+0x15b0>
   1964c:	ldr	r3, [r5, #28]
   19650:	mov	r0, r3
   19654:	b	194fc <argp_parse@@Base+0x27ac>
   19658:	ldr	r3, [sp, #8]
   1965c:	cmp	r3, #0
   19660:	beq	19678 <argp_parse@@Base+0x2928>
   19664:	ldr	r2, [r3]
   19668:	cmp	r2, #0
   1966c:	movne	r6, r9
   19670:	movne	fp, r6
   19674:	bne	195bc <argp_parse@@Base+0x286c>
   19678:	clz	r0, r4
   1967c:	lsr	r0, r0, #5
   19680:	b	19628 <argp_parse@@Base+0x28d8>
   19684:	cmp	r0, #0
   19688:	movne	r0, r3
   1968c:	strbne	r3, [r2]
   19690:	b	19628 <argp_parse@@Base+0x28d8>
   19694:	mov	r1, #1
   19698:	mov	r0, r5
   1969c:	bl	1e8e4 <argp_error@@Base+0x1c40>
   196a0:	cmp	r0, #0
   196a4:	beq	1954c <argp_parse@@Base+0x27fc>
   196a8:	ldr	r3, [r5, #28]
   196ac:	mov	r1, #10
   196b0:	add	r0, r3, #1
   196b4:	str	r0, [r5, #28]
   196b8:	strb	r1, [r3]
   196bc:	b	1954c <argp_parse@@Base+0x27fc>
   196c0:	mov	r1, #1
   196c4:	mov	r0, r5
   196c8:	bl	1e8e4 <argp_error@@Base+0x1c40>
   196cc:	cmp	r0, #0
   196d0:	beq	1954c <argp_parse@@Base+0x27fc>
   196d4:	ldr	r0, [r5, #28]
   196d8:	b	1953c <argp_parse@@Base+0x27ec>
   196dc:	mov	r7, r9
   196e0:	b	194c4 <argp_parse@@Base+0x2774>
   196e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   196e8:	subs	r4, r1, #0
   196ec:	strd	r6, [sp, #8]
   196f0:	mov	r7, r0
   196f4:	mov	r6, r2
   196f8:	strd	r8, [sp, #16]
   196fc:	strd	sl, [sp, #24]
   19700:	str	lr, [sp, #32]
   19704:	sub	sp, sp, #12
   19708:	beq	19744 <argp_parse@@Base+0x29f4>
   1970c:	ldr	r3, [r4, #20]
   19710:	cmp	r3, #0
   19714:	beq	19744 <argp_parse@@Base+0x29f4>
   19718:	mov	r0, r4
   1971c:	ldr	r1, [r2, #16]
   19720:	bl	17c08 <argp_parse@@Base+0xeb8>
   19724:	mov	r2, r0
   19728:	mov	r1, r7
   1972c:	ldr	r3, [r4, #20]
   19730:	mov	r0, #3
   19734:	movt	r0, #512	; 0x200
   19738:	blx	r3
   1973c:	mov	r9, r0
   19740:	b	19748 <argp_parse@@Base+0x29f8>
   19744:	mov	r9, r7
   19748:	cmp	r9, #0
   1974c:	beq	19768 <argp_parse@@Base+0x2a18>
   19750:	ldrb	r2, [r9]
   19754:	ldr	r3, [r6, #8]
   19758:	cmp	r2, #0
   1975c:	bne	19794 <argp_parse@@Base+0x2a44>
   19760:	mov	r2, #1
   19764:	str	r2, [r3, #4]
   19768:	cmp	r7, r9
   1976c:	beq	198e0 <argp_parse@@Base+0x2b90>
   19770:	mov	r0, r9
   19774:	add	sp, sp, #12
   19778:	ldrd	r4, [sp]
   1977c:	ldrd	r6, [sp, #8]
   19780:	ldrd	r8, [sp, #16]
   19784:	ldrd	sl, [sp, #24]
   19788:	ldr	lr, [sp, #32]
   1978c:	add	sp, sp, #36	; 0x24
   19790:	b	17d88 <argp_parse@@Base+0x1038>
   19794:	ldr	r3, [r3]
   19798:	ldr	r4, [r6, #4]
   1979c:	cmp	r3, #0
   197a0:	ldr	r3, [r4, #28]
   197a4:	beq	197e4 <argp_parse@@Base+0x2a94>
   197a8:	ldr	r2, [r4, #32]
   197ac:	cmp	r2, r3
   197b0:	bhi	197cc <argp_parse@@Base+0x2a7c>
   197b4:	mov	r1, #1
   197b8:	mov	r0, r4
   197bc:	bl	1e8e4 <argp_error@@Base+0x1c40>
   197c0:	cmp	r0, #0
   197c4:	ldrne	r3, [r4, #28]
   197c8:	beq	197dc <argp_parse@@Base+0x2a8c>
   197cc:	add	r1, r3, #1
   197d0:	mov	r2, #10
   197d4:	str	r1, [r4, #28]
   197d8:	strb	r2, [r3]
   197dc:	ldr	r4, [r6, #4]
   197e0:	ldr	r3, [r4, #28]
   197e4:	movw	r8, #4980	; 0x1374
   197e8:	movt	r8, #3
   197ec:	ldr	r2, [r4, #16]
   197f0:	ldr	r1, [r4, #24]
   197f4:	ldr	r5, [r8, #24]
   197f8:	sub	r3, r3, r1
   197fc:	cmp	r3, r2
   19800:	bhi	199c4 <argp_parse@@Base+0x2c74>
   19804:	ldr	r3, [r4, #20]
   19808:	cmp	r3, #0
   1980c:	subge	r5, r5, r3
   19810:	cmp	r5, #0
   19814:	sub	r5, r5, #1
   19818:	ble	19860 <argp_parse@@Base+0x2b10>
   1981c:	mov	sl, #32
   19820:	ldr	r3, [r4, #28]
   19824:	mov	r1, #1
   19828:	mov	r0, r4
   1982c:	sub	r5, r5, #1
   19830:	ldr	r2, [r4, #32]
   19834:	cmp	r3, r2
   19838:	bcc	1984c <argp_parse@@Base+0x2afc>
   1983c:	bl	1e8e4 <argp_error@@Base+0x1c40>
   19840:	cmp	r0, #0
   19844:	beq	19858 <argp_parse@@Base+0x2b08>
   19848:	ldr	r3, [r4, #28]
   1984c:	add	r2, r3, #1
   19850:	str	r2, [r4, #28]
   19854:	strb	sl, [r3]
   19858:	cmn	r5, #1
   1985c:	bne	19820 <argp_parse@@Base+0x2ad0>
   19860:	ldr	r4, [r6, #4]
   19864:	ldr	sl, [r8, #24]
   19868:	ldr	r1, [r4, #16]
   1986c:	ldr	r3, [r4, #24]
   19870:	ldr	r5, [r4, #28]
   19874:	sub	r3, r5, r3
   19878:	cmp	r3, r1
   1987c:	movls	fp, r4
   19880:	strls	sl, [r4, #4]
   19884:	bhi	1997c <argp_parse@@Base+0x2c2c>
   19888:	mov	r0, r9
   1988c:	str	sl, [fp, #12]
   19890:	bl	11a0c <strlen@plt>
   19894:	subs	r8, r0, #0
   19898:	bne	1992c <argp_parse@@Base+0x2bdc>
   1989c:	ldr	r2, [r4, #16]
   198a0:	ldr	r3, [r4, #24]
   198a4:	sub	r3, r5, r3
   198a8:	cmp	r3, r2
   198ac:	movls	r8, r4
   198b0:	bhi	19918 <argp_parse@@Base+0x2bc8>
   198b4:	ldr	r3, [r8, #32]
   198b8:	mov	r2, #0
   198bc:	str	r2, [r4, #4]
   198c0:	cmp	r3, r5
   198c4:	bls	198fc <argp_parse@@Base+0x2bac>
   198c8:	add	r2, r5, #1
   198cc:	mov	r3, #10
   198d0:	str	r2, [r8, #28]
   198d4:	strb	r3, [r5]
   198d8:	ldr	r3, [r6, #8]
   198dc:	b	19760 <argp_parse@@Base+0x2a10>
   198e0:	add	sp, sp, #12
   198e4:	ldrd	r4, [sp]
   198e8:	ldrd	r6, [sp, #8]
   198ec:	ldrd	r8, [sp, #16]
   198f0:	ldrd	sl, [sp, #24]
   198f4:	add	sp, sp, #32
   198f8:	pop	{pc}		; (ldr pc, [sp], #4)
   198fc:	mov	r1, #1
   19900:	mov	r0, r8
   19904:	bl	1e8e4 <argp_error@@Base+0x1c40>
   19908:	cmp	r0, #0
   1990c:	ldrne	r5, [r8, #28]
   19910:	bne	198c8 <argp_parse@@Base+0x2b78>
   19914:	b	198d8 <argp_parse@@Base+0x2b88>
   19918:	mov	r0, r4
   1991c:	bl	1e254 <argp_error@@Base+0x15b0>
   19920:	ldr	r8, [r6, #4]
   19924:	ldr	r5, [r8, #28]
   19928:	b	198b4 <argp_parse@@Base+0x2b64>
   1992c:	ldr	r2, [r4, #32]
   19930:	add	r3, r5, r8
   19934:	cmp	r2, r3
   19938:	bcs	19954 <argp_parse@@Base+0x2c04>
   1993c:	mov	r1, r8
   19940:	mov	r0, r4
   19944:	bl	1e8e4 <argp_error@@Base+0x1c40>
   19948:	cmp	r0, #0
   1994c:	beq	19970 <argp_parse@@Base+0x2c20>
   19950:	ldr	r5, [r4, #28]
   19954:	mov	r2, r8
   19958:	mov	r0, r5
   1995c:	mov	r1, r9
   19960:	bl	1182c <memcpy@plt>
   19964:	ldr	r3, [r4, #28]
   19968:	add	r8, r3, r8
   1996c:	str	r8, [r4, #28]
   19970:	ldr	r4, [r6, #4]
   19974:	ldr	r5, [r4, #28]
   19978:	b	1989c <argp_parse@@Base+0x2b4c>
   1997c:	mov	r0, r4
   19980:	str	sl, [sp, #4]
   19984:	bl	1e254 <argp_error@@Base+0x15b0>
   19988:	ldr	fp, [r6, #4]
   1998c:	ldr	r2, [sp, #4]
   19990:	ldr	sl, [r8, #24]
   19994:	ldr	r1, [fp, #16]
   19998:	ldr	r3, [fp, #24]
   1999c:	ldr	r5, [fp, #28]
   199a0:	str	r2, [r4, #4]
   199a4:	sub	r3, r5, r3
   199a8:	cmp	r3, r1
   199ac:	bls	199d0 <argp_parse@@Base+0x2c80>
   199b0:	mov	r0, fp
   199b4:	bl	1e254 <argp_error@@Base+0x15b0>
   199b8:	ldr	r4, [r6, #4]
   199bc:	ldr	r5, [r4, #28]
   199c0:	b	19888 <argp_parse@@Base+0x2b38>
   199c4:	mov	r0, r4
   199c8:	bl	1e254 <argp_error@@Base+0x15b0>
   199cc:	b	19804 <argp_parse@@Base+0x2ab4>
   199d0:	mov	r4, fp
   199d4:	b	19888 <argp_parse@@Base+0x2b38>
   199d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   199dc:	strd	r6, [sp, #8]
   199e0:	strd	r8, [sp, #16]
   199e4:	strd	sl, [sp, #24]
   199e8:	add	fp, sp, #32
   199ec:	str	lr, [sp, #32]
   199f0:	sub	sp, sp, #36	; 0x24
   199f4:	ldr	r3, [r0, #4]
   199f8:	cmp	r3, #0
   199fc:	str	r3, [fp, #-40]	; 0xffffffd8
   19a00:	beq	19c1c <argp_parse@@Base+0x2ecc>
   19a04:	mov	r4, r0
   19a08:	ldr	r0, [r0, #8]
   19a0c:	str	r4, [fp, #-60]	; 0xffffffc4
   19a10:	str	r1, [fp, #-48]	; 0xffffffd0
   19a14:	str	r3, [fp, #-44]	; 0xffffffd4
   19a18:	bl	11a0c <strlen@plt>
   19a1c:	add	r3, r0, #8
   19a20:	ldr	r2, [r4]
   19a24:	bic	r3, r3, #7
   19a28:	sub	sp, sp, r3
   19a2c:	mov	r3, sp
   19a30:	str	r3, [fp, #-56]	; 0xffffffc8
   19a34:	str	r3, [fp, #-52]	; 0xffffffcc
   19a38:	add	r3, r2, #28
   19a3c:	mov	r9, r3
   19a40:	str	r3, [fp, #-64]	; 0xffffffc0
   19a44:	ldr	r8, [r9, #-28]	; 0xffffffe4
   19a48:	ldr	r5, [r9, #-24]	; 0xffffffe8
   19a4c:	ldr	sl, [r9, #-20]	; 0xffffffec
   19a50:	cmp	r5, #0
   19a54:	beq	19aa8 <argp_parse@@Base+0x2d58>
   19a58:	mov	r4, r8
   19a5c:	ldr	r6, [r4, #12]
   19a60:	tst	r6, #8
   19a64:	bne	19a9c <argp_parse@@Base+0x2d4c>
   19a68:	ldr	r7, [r4, #4]
   19a6c:	sub	r3, r7, #1
   19a70:	cmp	r3, #254	; 0xfe
   19a74:	bhi	19a9c <argp_parse@@Base+0x2d4c>
   19a78:	bl	119dc <__ctype_b_loc@plt>
   19a7c:	ldr	r2, [r0]
   19a80:	lsl	r3, r7, #1
   19a84:	ldrh	r3, [r2, r3]
   19a88:	tst	r3, #16384	; 0x4000
   19a8c:	beq	19a9c <argp_parse@@Base+0x2d4c>
   19a90:	ldrb	r3, [sl]
   19a94:	cmp	r7, r3
   19a98:	beq	19c38 <argp_parse@@Base+0x2ee8>
   19a9c:	subs	r5, r5, #1
   19aa0:	add	r4, r4, #24
   19aa4:	bne	19a5c <argp_parse@@Base+0x2d0c>
   19aa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19aac:	add	r9, r9, #28
   19ab0:	subs	r3, r3, #1
   19ab4:	str	r3, [fp, #-44]	; 0xffffffd4
   19ab8:	bne	19a44 <argp_parse@@Base+0x2cf4>
   19abc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19ac0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19ac4:	cmp	r3, r2
   19ac8:	bcc	19e08 <argp_parse@@Base+0x30b8>
   19acc:	ldr	r6, [fp, #-64]	; 0xffffffc0
   19ad0:	movw	r3, #64856	; 0xfd58
   19ad4:	movt	r3, #1
   19ad8:	str	r3, [fp, #-44]	; 0xffffffd4
   19adc:	movw	r3, #64844	; 0xfd4c
   19ae0:	movt	r3, #1
   19ae4:	str	r3, [fp, #-52]	; 0xffffffcc
   19ae8:	ldr	r8, [r6, #-28]	; 0xffffffe4
   19aec:	ldr	r5, [r6, #-24]	; 0xffffffe8
   19af0:	ldr	r7, [r6, #-20]	; 0xffffffec
   19af4:	cmp	r5, #0
   19af8:	movne	r4, r8
   19afc:	beq	19b4c <argp_parse@@Base+0x2dfc>
   19b00:	ldr	r9, [r4, #12]
   19b04:	tst	r9, #8
   19b08:	bne	19b40 <argp_parse@@Base+0x2df0>
   19b0c:	ldr	sl, [r4, #4]
   19b10:	sub	r3, sl, #1
   19b14:	cmp	r3, #254	; 0xfe
   19b18:	bhi	19b40 <argp_parse@@Base+0x2df0>
   19b1c:	bl	119dc <__ctype_b_loc@plt>
   19b20:	ldr	r2, [r0]
   19b24:	lsl	r3, sl, #1
   19b28:	ldrh	r3, [r2, r3]
   19b2c:	tst	r3, #16384	; 0x4000
   19b30:	beq	19b40 <argp_parse@@Base+0x2df0>
   19b34:	ldrb	r3, [r7]
   19b38:	cmp	sl, r3
   19b3c:	beq	19c80 <argp_parse@@Base+0x2f30>
   19b40:	subs	r5, r5, #1
   19b44:	add	r4, r4, #24
   19b48:	bne	19b00 <argp_parse@@Base+0x2db0>
   19b4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19b50:	add	r6, r6, #28
   19b54:	subs	r3, r3, #1
   19b58:	str	r3, [fp, #-40]	; 0xffffffd8
   19b5c:	bne	19ae8 <argp_parse@@Base+0x2d98>
   19b60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19b64:	ldm	r3, {r7, r8}
   19b68:	cmp	r8, #0
   19b6c:	beq	19c1c <argp_parse@@Base+0x2ecc>
   19b70:	movw	sl, #64884	; 0xfd74
   19b74:	movt	sl, #1
   19b78:	movw	r9, #64868	; 0xfd64
   19b7c:	movt	r9, #1
   19b80:	str	sl, [fp, #-40]	; 0xffffffd8
   19b84:	movw	r3, #64896	; 0xfd80
   19b88:	movt	r3, #1
   19b8c:	ldr	sl, [fp, #-48]	; 0xffffffd0
   19b90:	add	r7, r7, #28
   19b94:	str	r3, [fp, #-44]	; 0xffffffd4
   19b98:	ldr	r6, [r7, #-28]	; 0xffffffe4
   19b9c:	ldr	r5, [r7, #-24]	; 0xffffffe8
   19ba0:	cmp	r5, #0
   19ba4:	movne	r4, r6
   19ba8:	beq	19c10 <argp_parse@@Base+0x2ec0>
   19bac:	ldr	r2, [r4]
   19bb0:	cmp	r2, #0
   19bb4:	beq	19c04 <argp_parse@@Base+0x2eb4>
   19bb8:	ldr	r1, [r4, #12]
   19bbc:	tst	r1, #4
   19bc0:	moveq	r6, r4
   19bc4:	tst	r1, #2
   19bc8:	bne	19c04 <argp_parse@@Base+0x2eb4>
   19bcc:	ldr	r3, [r4, #8]
   19bd0:	ldr	r0, [r6, #12]
   19bd4:	cmp	r3, #0
   19bd8:	orr	r1, r1, r0
   19bdc:	and	r0, r1, #16
   19be0:	beq	19c5c <argp_parse@@Base+0x2f0c>
   19be4:	cmp	r0, #0
   19be8:	bne	19c04 <argp_parse@@Base+0x2eb4>
   19bec:	tst	r1, #1
   19bf0:	movne	r1, r9
   19bf4:	movne	r0, sl
   19bf8:	ldreq	r1, [fp, #-40]	; 0xffffffd8
   19bfc:	moveq	r0, sl
   19c00:	bl	1e904 <argp_error@@Base+0x1c60>
   19c04:	subs	r5, r5, #1
   19c08:	add	r4, r4, #24
   19c0c:	bne	19bac <argp_parse@@Base+0x2e5c>
   19c10:	subs	r8, r8, #1
   19c14:	add	r7, r7, #28
   19c18:	bne	19b98 <argp_parse@@Base+0x2e48>
   19c1c:	sub	sp, fp, #32
   19c20:	ldrd	r4, [sp]
   19c24:	ldrd	r6, [sp, #8]
   19c28:	ldrd	r8, [sp, #16]
   19c2c:	ldrd	sl, [sp, #24]
   19c30:	add	sp, sp, #32
   19c34:	pop	{pc}		; (ldr pc, [sp], #4)
   19c38:	tst	r6, #4
   19c3c:	moveq	r8, r4
   19c40:	tst	r6, #2
   19c44:	bne	19c54 <argp_parse@@Base+0x2f04>
   19c48:	ldr	r3, [r4, #8]
   19c4c:	cmp	r3, #0
   19c50:	beq	19ccc <argp_parse@@Base+0x2f7c>
   19c54:	add	sl, sl, #1
   19c58:	b	19a9c <argp_parse@@Base+0x2d4c>
   19c5c:	cmp	r0, #0
   19c60:	bne	19c04 <argp_parse@@Base+0x2eb4>
   19c64:	ldr	r3, [r6, #8]
   19c68:	cmp	r3, #0
   19c6c:	bne	19bec <argp_parse@@Base+0x2e9c>
   19c70:	mov	r0, sl
   19c74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c78:	bl	1e904 <argp_error@@Base+0x1c60>
   19c7c:	b	19c04 <argp_parse@@Base+0x2eb4>
   19c80:	tst	r9, #4
   19c84:	moveq	r8, r4
   19c88:	tst	r9, #2
   19c8c:	bne	19cc4 <argp_parse@@Base+0x2f74>
   19c90:	ldr	r3, [r4, #8]
   19c94:	cmp	r3, #0
   19c98:	beq	19cf8 <argp_parse@@Base+0x2fa8>
   19c9c:	ldr	r2, [r8, #12]
   19ca0:	orr	r9, r9, r2
   19ca4:	tst	r9, #16
   19ca8:	bne	19cc4 <argp_parse@@Base+0x2f74>
   19cac:	tst	r9, #1
   19cb0:	beq	19d08 <argp_parse@@Base+0x2fb8>
   19cb4:	mov	r2, sl
   19cb8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19cbc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19cc0:	bl	1e904 <argp_error@@Base+0x1c60>
   19cc4:	add	r7, r7, #1
   19cc8:	b	19b40 <argp_parse@@Base+0x2df0>
   19ccc:	ldr	r3, [r8, #8]
   19cd0:	cmp	r3, #0
   19cd4:	bne	19c54 <argp_parse@@Base+0x2f04>
   19cd8:	ldr	r3, [r8, #12]
   19cdc:	orr	r6, r6, r3
   19ce0:	tst	r6, #16
   19ce4:	bne	19c54 <argp_parse@@Base+0x2f04>
   19ce8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19cec:	strb	r7, [r3], #1
   19cf0:	str	r3, [fp, #-52]	; 0xffffffcc
   19cf4:	b	19c54 <argp_parse@@Base+0x2f04>
   19cf8:	ldr	r3, [r8, #8]
   19cfc:	cmp	r3, #0
   19d00:	beq	19cc4 <argp_parse@@Base+0x2f74>
   19d04:	b	19c9c <argp_parse@@Base+0x2f4c>
   19d08:	mov	r0, r3
   19d0c:	str	r3, [fp, #-56]	; 0xffffffc8
   19d10:	bl	11a0c <strlen@plt>
   19d14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19d18:	mov	r9, r0
   19d1c:	ldr	r0, [r3, #16]
   19d20:	ldr	r2, [r3, #24]
   19d24:	ldr	r1, [r3, #28]
   19d28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19d2c:	sub	r2, r1, r2
   19d30:	cmp	r2, r0
   19d34:	bhi	19df0 <argp_parse@@Base+0x30a0>
   19d38:	ldr	lr, [fp, #-48]	; 0xffffffd0
   19d3c:	ldr	r0, [lr, #8]
   19d40:	ldr	r2, [lr, #20]
   19d44:	ldr	ip, [lr, #32]
   19d48:	bic	r2, r2, r2, asr #31
   19d4c:	add	r2, r2, #6
   19d50:	add	r2, r2, r9
   19d54:	cmp	r2, r0
   19d58:	bcs	19dac <argp_parse@@Base+0x305c>
   19d5c:	cmp	r1, ip
   19d60:	bcc	19d88 <argp_parse@@Base+0x3038>
   19d64:	mov	r1, #1
   19d68:	mov	r0, lr
   19d6c:	str	r3, [fp, #-56]	; 0xffffffc8
   19d70:	mov	r9, lr
   19d74:	bl	1e8e4 <argp_error@@Base+0x1c40>
   19d78:	cmp	r0, #0
   19d7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19d80:	beq	19d9c <argp_parse@@Base+0x304c>
   19d84:	ldr	r1, [r9, #28]
   19d88:	add	r2, r1, #1
   19d8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19d90:	str	r2, [r0, #28]
   19d94:	mov	r2, #32
   19d98:	strb	r2, [r1]
   19d9c:	ldrd	r0, [fp, #-48]	; 0xffffffd0
   19da0:	ldr	r2, [r4, #4]
   19da4:	bl	1e904 <argp_error@@Base+0x1c60>
   19da8:	b	19cc4 <argp_parse@@Base+0x2f74>
   19dac:	cmp	r1, ip
   19db0:	bcc	19dd8 <argp_parse@@Base+0x3088>
   19db4:	mov	r1, #1
   19db8:	mov	r0, lr
   19dbc:	str	r3, [fp, #-56]	; 0xffffffc8
   19dc0:	mov	r9, lr
   19dc4:	bl	1e8e4 <argp_error@@Base+0x1c40>
   19dc8:	cmp	r0, #0
   19dcc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19dd0:	beq	19d9c <argp_parse@@Base+0x304c>
   19dd4:	ldr	r1, [r9, #28]
   19dd8:	add	r0, r1, #1
   19ddc:	mov	r2, #10
   19de0:	ldr	ip, [fp, #-48]	; 0xffffffd0
   19de4:	str	r0, [ip, #28]
   19de8:	strb	r2, [r1]
   19dec:	b	19d9c <argp_parse@@Base+0x304c>
   19df0:	ldr	sl, [fp, #-48]	; 0xffffffd0
   19df4:	mov	r0, sl
   19df8:	bl	1e254 <argp_error@@Base+0x15b0>
   19dfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19e00:	ldr	r1, [sl, #28]
   19e04:	b	19d38 <argp_parse@@Base+0x2fe8>
   19e08:	mov	r2, r3
   19e0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19e10:	movw	r1, #64836	; 0xfd44
   19e14:	movt	r1, #1
   19e18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19e1c:	strb	r0, [r3]
   19e20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19e24:	bl	1e904 <argp_error@@Base+0x1c60>
   19e28:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19e2c:	ldr	r3, [r2, #4]
   19e30:	cmp	r3, #0
   19e34:	str	r3, [fp, #-40]	; 0xffffffd8
   19e38:	beq	19c1c <argp_parse@@Base+0x2ecc>
   19e3c:	ldr	r2, [r2]
   19e40:	add	r3, r2, #28
   19e44:	str	r3, [fp, #-64]	; 0xffffffc0
   19e48:	b	19acc <argp_parse@@Base+0x2d7c>
   19e4c:	ldr	r3, [r1, #12]
   19e50:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19e54:	mov	r5, r0
   19e58:	ldr	r4, [r1, #4]
   19e5c:	strd	r6, [sp, #8]
   19e60:	mov	r6, r1
   19e64:	str	r8, [sp, #16]
   19e68:	cmp	r3, #0
   19e6c:	str	lr, [sp, #20]
   19e70:	beq	19f9c <argp_parse@@Base+0x324c>
   19e74:	ldr	r2, [r1]
   19e78:	ldr	r3, [r1, #8]
   19e7c:	ldr	r7, [r2, #16]
   19e80:	ldr	r8, [r3]
   19e84:	ldr	r3, [r3, #4]
   19e88:	cmp	r3, #0
   19e8c:	cmpne	r8, #0
   19e90:	bne	19f44 <argp_parse@@Base+0x31f4>
   19e94:	cmp	r7, #0
   19e98:	beq	19eb4 <argp_parse@@Base+0x3164>
   19e9c:	ldr	r0, [r7]
   19ea0:	cmp	r0, #0
   19ea4:	beq	19eb4 <argp_parse@@Base+0x3164>
   19ea8:	ldrb	r3, [r0]
   19eac:	cmp	r3, #0
   19eb0:	bne	1a00c <argp_parse@@Base+0x32bc>
   19eb4:	ldr	r2, [r4, #16]
   19eb8:	ldr	r1, [r4, #24]
   19ebc:	ldr	r3, [r4, #28]
   19ec0:	sub	r3, r3, r1
   19ec4:	mov	r1, #0
   19ec8:	cmp	r3, r2
   19ecc:	str	r1, [r6, #12]
   19ed0:	bhi	1a000 <argp_parse@@Base+0x32b0>
   19ed4:	ldr	r3, [r4, #20]
   19ed8:	cmp	r3, #0
   19edc:	subge	r5, r5, r3
   19ee0:	cmp	r5, #0
   19ee4:	sub	r5, r5, #1
   19ee8:	ble	19f30 <argp_parse@@Base+0x31e0>
   19eec:	mov	r6, #32
   19ef0:	ldr	r3, [r4, #28]
   19ef4:	mov	r1, #1
   19ef8:	mov	r0, r4
   19efc:	sub	r5, r5, #1
   19f00:	ldr	r2, [r4, #32]
   19f04:	cmp	r3, r2
   19f08:	bcc	19f1c <argp_parse@@Base+0x31cc>
   19f0c:	bl	1e8e4 <argp_error@@Base+0x1c40>
   19f10:	cmp	r0, #0
   19f14:	beq	19f28 <argp_parse@@Base+0x31d8>
   19f18:	ldr	r3, [r4, #28]
   19f1c:	add	r2, r3, #1
   19f20:	str	r2, [r4, #28]
   19f24:	strb	r6, [r3]
   19f28:	cmn	r5, #1
   19f2c:	bne	19ef0 <argp_parse@@Base+0x31a0>
   19f30:	ldrd	r4, [sp]
   19f34:	ldrd	r6, [sp, #8]
   19f38:	ldr	r8, [sp, #16]
   19f3c:	add	sp, sp, #20
   19f40:	pop	{pc}		; (ldr pc, [sp], #4)
   19f44:	ldr	r2, [r2, #12]
   19f48:	ldr	r3, [r8, #12]
   19f4c:	cmp	r2, r3
   19f50:	beq	19e94 <argp_parse@@Base+0x3144>
   19f54:	ldr	r3, [r4, #28]
   19f58:	ldr	r2, [r4, #32]
   19f5c:	cmp	r3, r2
   19f60:	bcc	19f7c <argp_parse@@Base+0x322c>
   19f64:	mov	r1, #1
   19f68:	mov	r0, r4
   19f6c:	bl	1e8e4 <argp_error@@Base+0x1c40>
   19f70:	cmp	r0, #0
   19f74:	ldrne	r3, [r4, #28]
   19f78:	beq	19f8c <argp_parse@@Base+0x323c>
   19f7c:	add	r1, r3, #1
   19f80:	mov	r2, #10
   19f84:	str	r1, [r4, #28]
   19f88:	strb	r2, [r3]
   19f8c:	cmp	r7, #0
   19f90:	ldr	r4, [r6, #4]
   19f94:	bne	19e9c <argp_parse@@Base+0x314c>
   19f98:	b	19eb4 <argp_parse@@Base+0x3164>
   19f9c:	ldr	r3, [r4, #28]
   19fa0:	ldr	r1, [r4, #32]
   19fa4:	add	r2, r3, #2
   19fa8:	cmp	r1, r2
   19fac:	bcs	19fc8 <argp_parse@@Base+0x3278>
   19fb0:	mov	r1, #2
   19fb4:	mov	r0, r4
   19fb8:	bl	1e8e4 <argp_error@@Base+0x1c40>
   19fbc:	cmp	r0, #0
   19fc0:	beq	19fe4 <argp_parse@@Base+0x3294>
   19fc4:	ldr	r3, [r4, #28]
   19fc8:	movw	r2, #64904	; 0xfd88
   19fcc:	movt	r2, #1
   19fd0:	ldrh	r2, [r2]
   19fd4:	strh	r2, [r3]
   19fd8:	ldr	r3, [r4, #28]
   19fdc:	add	r3, r3, #2
   19fe0:	str	r3, [r4, #28]
   19fe4:	ldr	r4, [r6, #4]
   19fe8:	ldr	r2, [r4, #16]
   19fec:	ldr	r1, [r4, #24]
   19ff0:	ldr	r3, [r4, #28]
   19ff4:	sub	r3, r3, r1
   19ff8:	cmp	r3, r2
   19ffc:	bls	19ed4 <argp_parse@@Base+0x3184>
   1a000:	mov	r0, r4
   1a004:	bl	1e254 <argp_error@@Base+0x15b0>
   1a008:	b	19ed4 <argp_parse@@Base+0x3184>
   1a00c:	cmp	r8, #0
   1a010:	beq	1a040 <argp_parse@@Base+0x32f0>
   1a014:	ldr	r3, [r8, #16]
   1a018:	cmp	r3, r7
   1a01c:	beq	19eb4 <argp_parse@@Base+0x3164>
   1a020:	cmp	r3, #0
   1a024:	beq	1a040 <argp_parse@@Base+0x32f0>
   1a028:	ldr	r3, [r3, #12]
   1a02c:	cmp	r3, #0
   1a030:	cmpne	r7, r3
   1a034:	bne	1a028 <argp_parse@@Base+0x32d8>
   1a038:	cmp	r7, r3
   1a03c:	beq	19eb4 <argp_parse@@Base+0x3164>
   1a040:	mov	r2, r6
   1a044:	ldr	r1, [r7, #16]
   1a048:	ldr	r7, [r4, #12]
   1a04c:	bl	196e4 <argp_parse@@Base+0x2994>
   1a050:	ldr	r8, [r6, #4]
   1a054:	ldr	r2, [r8, #16]
   1a058:	ldr	r1, [r8, #24]
   1a05c:	ldr	r3, [r8, #28]
   1a060:	sub	r3, r3, r1
   1a064:	cmp	r3, r2
   1a068:	movls	r4, r8
   1a06c:	bhi	1a078 <argp_parse@@Base+0x3328>
   1a070:	str	r7, [r8, #12]
   1a074:	b	19ec4 <argp_parse@@Base+0x3174>
   1a078:	mov	r0, r8
   1a07c:	bl	1e254 <argp_error@@Base+0x15b0>
   1a080:	ldr	r4, [r6, #4]
   1a084:	ldr	r2, [r4, #16]
   1a088:	ldr	r1, [r4, #24]
   1a08c:	ldr	r3, [r4, #28]
   1a090:	sub	r3, r3, r1
   1a094:	b	1a070 <argp_parse@@Base+0x3320>
   1a098:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a09c:	strd	r6, [sp, #8]
   1a0a0:	mov	r7, r0
   1a0a4:	ldr	r6, [r0, #12]
   1a0a8:	strd	r8, [sp, #16]
   1a0ac:	mov	r8, r2
   1a0b0:	strd	sl, [sp, #24]
   1a0b4:	mov	sl, r3
   1a0b8:	mov	fp, r1
   1a0bc:	ldr	r3, [r0, #16]
   1a0c0:	str	lr, [sp, #32]
   1a0c4:	sub	sp, sp, #28
   1a0c8:	cmp	r6, #0
   1a0cc:	ldr	r5, [sp, #68]	; 0x44
   1a0d0:	str	r3, [sp, #8]
   1a0d4:	ldr	r3, [r0, #20]
   1a0d8:	beq	1a448 <argp_parse@@Base+0x36f8>
   1a0dc:	mov	r1, #11
   1a0e0:	mov	r0, r6
   1a0e4:	str	r3, [sp, #12]
   1a0e8:	bl	11a24 <strchr@plt>
   1a0ec:	cmp	r8, #0
   1a0f0:	mov	r9, r0
   1a0f4:	ldr	r3, [sp, #12]
   1a0f8:	bne	1a344 <argp_parse@@Base+0x35f4>
   1a0fc:	cmp	r0, #0
   1a100:	beq	1a644 <argp_parse@@Base+0x38f4>
   1a104:	subs	r1, r0, r6
   1a108:	movne	r4, #1
   1a10c:	moveq	r4, #0
   1a110:	cmp	r3, #0
   1a114:	str	r1, [sp, #20]
   1a118:	beq	1a5e8 <argp_parse@@Base+0x3898>
   1a11c:	cmp	r1, #0
   1a120:	beq	1a638 <argp_parse@@Base+0x38e8>
   1a124:	mov	r0, r6
   1a128:	mov	r4, #1
   1a12c:	bl	11814 <strndup@plt>
   1a130:	adds	r3, r0, #0
   1a134:	mov	r6, r0
   1a138:	movne	r3, #1
   1a13c:	str	r3, [sp, #16]
   1a140:	mov	r1, fp
   1a144:	mov	r0, r7
   1a148:	bl	17c08 <argp_parse@@Base+0xeb8>
   1a14c:	mov	r2, r0
   1a150:	mov	r1, r6
   1a154:	ldr	r3, [r7, #20]
   1a158:	mov	r0, #1
   1a15c:	movt	r0, #512	; 0x200
   1a160:	str	r2, [sp, #12]
   1a164:	blx	r3
   1a168:	subs	r9, r0, #0
   1a16c:	moveq	r4, r9
   1a170:	beq	1a200 <argp_parse@@Base+0x34b0>
   1a174:	cmp	r6, r9
   1a178:	movne	r4, #0
   1a17c:	andeq	r4, r4, #1
   1a180:	cmp	sl, #0
   1a184:	ldr	r2, [r5, #28]
   1a188:	bne	1a490 <argp_parse@@Base+0x3740>
   1a18c:	cmp	r4, #0
   1a190:	beq	1a3e8 <argp_parse@@Base+0x3698>
   1a194:	ldr	r3, [sp, #20]
   1a198:	ldr	r0, [r5, #32]
   1a19c:	add	r1, r2, r3
   1a1a0:	cmp	r0, r1
   1a1a4:	bcs	1a3a0 <argp_parse@@Base+0x3650>
   1a1a8:	mov	r1, r3
   1a1ac:	mov	r0, r5
   1a1b0:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1a1b4:	cmp	r0, #0
   1a1b8:	ldr	r2, [r5, #28]
   1a1bc:	bne	1a3a0 <argp_parse@@Base+0x3650>
   1a1c0:	ldr	r0, [r5, #16]
   1a1c4:	ldr	r1, [r5, #24]
   1a1c8:	sub	r2, r2, r1
   1a1cc:	cmp	r2, r0
   1a1d0:	bhi	1a4d8 <argp_parse@@Base+0x3788>
   1a1d4:	ldr	r1, [r5, #4]
   1a1d8:	ldr	r2, [r5, #20]
   1a1dc:	bic	r2, r2, r2, asr #31
   1a1e0:	cmp	r1, r2
   1a1e4:	bcc	1a4b4 <argp_parse@@Base+0x3764>
   1a1e8:	cmp	r9, r6
   1a1ec:	moveq	r4, #1
   1a1f0:	beq	1a200 <argp_parse@@Base+0x34b0>
   1a1f4:	mov	r0, r9
   1a1f8:	mov	r4, #1
   1a1fc:	bl	17d88 <argp_parse@@Base+0x1038>
   1a200:	ldr	r3, [sp, #16]
   1a204:	cmp	r3, #0
   1a208:	beq	1a220 <argp_parse@@Base+0x34d0>
   1a20c:	ldr	r3, [r7, #20]
   1a210:	cmp	r3, #0
   1a214:	beq	1a2a0 <argp_parse@@Base+0x3550>
   1a218:	mov	r0, r6
   1a21c:	bl	17d88 <argp_parse@@Base+0x1038>
   1a220:	cmp	r8, #0
   1a224:	beq	1a2a0 <argp_parse@@Base+0x3550>
   1a228:	ldr	r3, [r7, #20]
   1a22c:	cmp	r3, #0
   1a230:	beq	1a2a0 <argp_parse@@Base+0x3550>
   1a234:	mov	r0, #4
   1a238:	movt	r0, #512	; 0x200
   1a23c:	ldr	r2, [sp, #12]
   1a240:	mov	r1, #0
   1a244:	blx	r3
   1a248:	subs	r6, r0, #0
   1a24c:	beq	1a2a0 <argp_parse@@Base+0x3550>
   1a250:	orrs	r3, sl, r4
   1a254:	bne	1a574 <argp_parse@@Base+0x3824>
   1a258:	mov	r0, r6
   1a25c:	bl	11a0c <strlen@plt>
   1a260:	subs	r4, r0, #0
   1a264:	bne	1a52c <argp_parse@@Base+0x37dc>
   1a268:	mov	r0, r6
   1a26c:	bl	17d88 <argp_parse@@Base+0x1038>
   1a270:	ldr	r2, [r5, #16]
   1a274:	ldr	r1, [r5, #24]
   1a278:	ldr	r3, [r5, #28]
   1a27c:	sub	r3, r3, r1
   1a280:	cmp	r3, r2
   1a284:	bhi	1a5c0 <argp_parse@@Base+0x3870>
   1a288:	ldr	r2, [r5, #4]
   1a28c:	ldr	r3, [r5, #20]
   1a290:	bic	r3, r3, r3, asr #31
   1a294:	cmp	r2, r3
   1a298:	bcc	1a598 <argp_parse@@Base+0x3848>
   1a29c:	mov	r4, #1
   1a2a0:	ldr	r7, [sp, #8]
   1a2a4:	cmp	r7, #0
   1a2a8:	beq	1a324 <argp_parse@@Base+0x35d4>
   1a2ac:	ldr	r3, [r7]
   1a2b0:	cmp	r3, #0
   1a2b4:	beq	1a324 <argp_parse@@Base+0x35d4>
   1a2b8:	ldr	r2, [sp, #64]	; 0x40
   1a2bc:	eor	r6, r2, #1
   1a2c0:	eor	r2, r4, #1
   1a2c4:	orr	r2, r2, r6
   1a2c8:	and	r6, r6, #1
   1a2cc:	tst	r2, #1
   1a2d0:	beq	1a5f8 <argp_parse@@Base+0x38a8>
   1a2d4:	ldr	r9, [sp, #64]	; 0x40
   1a2d8:	orrs	r2, r4, sl
   1a2dc:	mov	r0, r3
   1a2e0:	str	r9, [sp]
   1a2e4:	movne	r3, #1
   1a2e8:	moveq	r3, #0
   1a2ec:	str	r5, [sp, #4]
   1a2f0:	mov	r2, r8
   1a2f4:	mov	r1, fp
   1a2f8:	bl	1a098 <argp_parse@@Base+0x3348>
   1a2fc:	ldr	r3, [r7, #16]
   1a300:	orr	r4, r4, r0
   1a304:	add	r7, r7, #16
   1a308:	cmp	r3, #0
   1a30c:	beq	1a324 <argp_parse@@Base+0x35d4>
   1a310:	cmp	r4, #0
   1a314:	movne	r2, r6
   1a318:	moveq	r2, #1
   1a31c:	cmp	r2, #0
   1a320:	bne	1a2d8 <argp_parse@@Base+0x3588>
   1a324:	mov	r0, r4
   1a328:	add	sp, sp, #28
   1a32c:	ldrd	r4, [sp]
   1a330:	ldrd	r6, [sp, #8]
   1a334:	ldrd	r8, [sp, #16]
   1a338:	ldrd	sl, [sp, #24]
   1a33c:	add	sp, sp, #32
   1a340:	pop	{pc}		; (ldr pc, [sp], #4)
   1a344:	cmp	r0, #0
   1a348:	beq	1a5cc <argp_parse@@Base+0x387c>
   1a34c:	cmp	r3, #0
   1a350:	add	r6, r0, #1
   1a354:	movne	r1, fp
   1a358:	movne	r0, r7
   1a35c:	beq	1a3c4 <argp_parse@@Base+0x3674>
   1a360:	bl	17c08 <argp_parse@@Base+0xeb8>
   1a364:	ldr	r3, [r7, #20]
   1a368:	str	r0, [sp, #12]
   1a36c:	mov	r0, #2
   1a370:	movt	r0, #512	; 0x200
   1a374:	mov	r1, r6
   1a378:	ldr	r2, [sp, #12]
   1a37c:	blx	r3
   1a380:	subs	r9, r0, #0
   1a384:	moveq	r4, r9
   1a388:	beq	1a220 <argp_parse@@Base+0x34d0>
   1a38c:	mov	r3, #0
   1a390:	mov	r4, r3
   1a394:	str	r3, [sp, #16]
   1a398:	str	r3, [sp, #20]
   1a39c:	b	1a174 <argp_parse@@Base+0x3424>
   1a3a0:	ldr	r4, [sp, #20]
   1a3a4:	mov	r0, r2
   1a3a8:	mov	r1, r6
   1a3ac:	mov	r2, r4
   1a3b0:	bl	1182c <memcpy@plt>
   1a3b4:	ldr	r2, [r5, #28]
   1a3b8:	add	r2, r2, r4
   1a3bc:	str	r2, [r5, #28]
   1a3c0:	b	1a1c0 <argp_parse@@Base+0x3470>
   1a3c4:	cmp	r6, #0
   1a3c8:	moveq	r4, r6
   1a3cc:	beq	1a2a0 <argp_parse@@Base+0x3550>
   1a3d0:	cmp	sl, #0
   1a3d4:	ldr	r2, [r5, #28]
   1a3d8:	bne	1a478 <argp_parse@@Base+0x3728>
   1a3dc:	mov	r9, r6
   1a3e0:	str	sl, [sp, #12]
   1a3e4:	str	sl, [sp, #16]
   1a3e8:	mov	r0, r9
   1a3ec:	str	r2, [sp, #20]
   1a3f0:	bl	11a0c <strlen@plt>
   1a3f4:	subs	r4, r0, #0
   1a3f8:	ldr	r2, [sp, #20]
   1a3fc:	beq	1a1c0 <argp_parse@@Base+0x3470>
   1a400:	ldr	r0, [r5, #32]
   1a404:	add	r1, r2, r4
   1a408:	cmp	r0, r1
   1a40c:	bcs	1a428 <argp_parse@@Base+0x36d8>
   1a410:	mov	r1, r4
   1a414:	mov	r0, r5
   1a418:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1a41c:	cmp	r0, #0
   1a420:	ldr	r2, [r5, #28]
   1a424:	beq	1a1c0 <argp_parse@@Base+0x3470>
   1a428:	mov	r0, r2
   1a42c:	mov	r1, r9
   1a430:	mov	r2, r4
   1a434:	bl	1182c <memcpy@plt>
   1a438:	ldr	r2, [r5, #28]
   1a43c:	add	r2, r2, r4
   1a440:	str	r2, [r5, #28]
   1a444:	b	1a1c0 <argp_parse@@Base+0x3470>
   1a448:	cmp	r3, #0
   1a44c:	beq	1a5e0 <argp_parse@@Base+0x3890>
   1a450:	bl	17c08 <argp_parse@@Base+0xeb8>
   1a454:	mov	r2, #1
   1a458:	movt	r2, #512	; 0x200
   1a45c:	str	r0, [sp, #12]
   1a460:	cmp	r8, #0
   1a464:	mov	r0, #2
   1a468:	movt	r0, #512	; 0x200
   1a46c:	moveq	r0, r2
   1a470:	ldr	r3, [r7, #20]
   1a474:	b	1a374 <argp_parse@@Base+0x3624>
   1a478:	mov	r3, #0
   1a47c:	mov	r9, r6
   1a480:	mov	r4, r3
   1a484:	str	r3, [sp, #12]
   1a488:	str	r3, [sp, #16]
   1a48c:	str	r3, [sp, #20]
   1a490:	ldr	r1, [r5, #32]
   1a494:	cmp	r1, r2
   1a498:	bls	1a4e4 <argp_parse@@Base+0x3794>
   1a49c:	add	r0, r2, #1
   1a4a0:	mov	r1, #10
   1a4a4:	str	r0, [r5, #28]
   1a4a8:	strb	r1, [r2]
   1a4ac:	ldr	r2, [r5, #28]
   1a4b0:	b	1a18c <argp_parse@@Base+0x343c>
   1a4b4:	ldr	r2, [r5, #28]
   1a4b8:	ldr	r1, [r5, #32]
   1a4bc:	cmp	r2, r1
   1a4c0:	bcs	1a500 <argp_parse@@Base+0x37b0>
   1a4c4:	add	r0, r2, #1
   1a4c8:	mov	r1, #10
   1a4cc:	str	r0, [r5, #28]
   1a4d0:	strb	r1, [r2]
   1a4d4:	b	1a1e8 <argp_parse@@Base+0x3498>
   1a4d8:	mov	r0, r5
   1a4dc:	bl	1e254 <argp_error@@Base+0x15b0>
   1a4e0:	b	1a1d4 <argp_parse@@Base+0x3484>
   1a4e4:	mov	r1, #1
   1a4e8:	mov	r0, r5
   1a4ec:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1a4f0:	cmp	r0, #0
   1a4f4:	ldr	r2, [r5, #28]
   1a4f8:	bne	1a49c <argp_parse@@Base+0x374c>
   1a4fc:	b	1a18c <argp_parse@@Base+0x343c>
   1a500:	mov	r1, #1
   1a504:	mov	r0, r5
   1a508:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1a50c:	cmp	r0, #0
   1a510:	beq	1a1e8 <argp_parse@@Base+0x3498>
   1a514:	ldr	r2, [r5, #28]
   1a518:	mov	r1, #10
   1a51c:	add	r0, r2, #1
   1a520:	str	r0, [r5, #28]
   1a524:	strb	r1, [r2]
   1a528:	b	1a1e8 <argp_parse@@Base+0x3498>
   1a52c:	ldr	r0, [r5, #28]
   1a530:	ldr	r2, [r5, #32]
   1a534:	add	r3, r0, r4
   1a538:	cmp	r2, r3
   1a53c:	bcs	1a558 <argp_parse@@Base+0x3808>
   1a540:	mov	r1, r4
   1a544:	mov	r0, r5
   1a548:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1a54c:	cmp	r0, #0
   1a550:	beq	1a268 <argp_parse@@Base+0x3518>
   1a554:	ldr	r0, [r5, #28]
   1a558:	mov	r2, r4
   1a55c:	mov	r1, r6
   1a560:	bl	1182c <memcpy@plt>
   1a564:	ldr	r3, [r5, #28]
   1a568:	add	r4, r3, r4
   1a56c:	str	r4, [r5, #28]
   1a570:	b	1a268 <argp_parse@@Base+0x3518>
   1a574:	ldr	r3, [r5, #28]
   1a578:	ldr	r2, [r5, #32]
   1a57c:	cmp	r3, r2
   1a580:	bcs	1a61c <argp_parse@@Base+0x38cc>
   1a584:	add	r1, r3, #1
   1a588:	mov	r2, #10
   1a58c:	str	r1, [r5, #28]
   1a590:	strb	r2, [r3]
   1a594:	b	1a258 <argp_parse@@Base+0x3508>
   1a598:	ldr	r3, [r5, #28]
   1a59c:	ldr	r2, [r5, #32]
   1a5a0:	cmp	r3, r2
   1a5a4:	bcs	1a600 <argp_parse@@Base+0x38b0>
   1a5a8:	add	r1, r3, #1
   1a5ac:	mov	r2, #10
   1a5b0:	mov	r4, #1
   1a5b4:	str	r1, [r5, #28]
   1a5b8:	strb	r2, [r3]
   1a5bc:	b	1a2a0 <argp_parse@@Base+0x3550>
   1a5c0:	mov	r0, r5
   1a5c4:	bl	1e254 <argp_error@@Base+0x15b0>
   1a5c8:	b	1a288 <argp_parse@@Base+0x3538>
   1a5cc:	cmp	r3, #0
   1a5d0:	movne	r1, fp
   1a5d4:	movne	r0, r7
   1a5d8:	movne	r6, r9
   1a5dc:	bne	1a360 <argp_parse@@Base+0x3610>
   1a5e0:	mov	r4, r3
   1a5e4:	b	1a2a0 <argp_parse@@Base+0x3550>
   1a5e8:	mov	r9, r6
   1a5ec:	str	r8, [sp, #12]
   1a5f0:	str	r4, [sp, #16]
   1a5f4:	b	1a174 <argp_parse@@Base+0x3424>
   1a5f8:	mov	r4, #1
   1a5fc:	b	1a324 <argp_parse@@Base+0x35d4>
   1a600:	mov	r1, #1
   1a604:	mov	r0, r5
   1a608:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1a60c:	cmp	r0, #0
   1a610:	beq	1a29c <argp_parse@@Base+0x354c>
   1a614:	ldr	r3, [r5, #28]
   1a618:	b	1a5a8 <argp_parse@@Base+0x3858>
   1a61c:	mov	r1, #1
   1a620:	mov	r0, r5
   1a624:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1a628:	cmp	r0, #0
   1a62c:	beq	1a258 <argp_parse@@Base+0x3508>
   1a630:	ldr	r3, [r5, #28]
   1a634:	b	1a584 <argp_parse@@Base+0x3834>
   1a638:	ldr	r4, [sp, #20]
   1a63c:	str	r4, [sp, #16]
   1a640:	b	1a140 <argp_parse@@Base+0x33f0>
   1a644:	cmp	r3, #0
   1a648:	beq	1a3d0 <argp_parse@@Base+0x3680>
   1a64c:	mov	r1, fp
   1a650:	mov	r0, r7
   1a654:	bl	17c08 <argp_parse@@Base+0xeb8>
   1a658:	str	r0, [sp, #12]
   1a65c:	mov	r0, #1
   1a660:	movt	r0, #512	; 0x200
   1a664:	ldr	r3, [r7, #20]
   1a668:	b	1a374 <argp_parse@@Base+0x3624>
   1a66c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a670:	ldr	r4, [r0, #16]
   1a674:	strd	r6, [sp, #8]
   1a678:	strd	r8, [sp, #16]
   1a67c:	strd	sl, [sp, #24]
   1a680:	str	lr, [sp, #32]
   1a684:	sub	sp, sp, #20
   1a688:	cmp	r4, #0
   1a68c:	movne	r3, r4
   1a690:	bne	1a69c <argp_parse@@Base+0x394c>
   1a694:	b	1af2c <argp_parse@@Base+0x41dc>
   1a698:	mov	r3, r2
   1a69c:	ldr	r2, [r3, #12]
   1a6a0:	cmp	r2, #0
   1a6a4:	bne	1a698 <argp_parse@@Base+0x3948>
   1a6a8:	ldr	r2, [r3, #8]
   1a6ac:	ldr	r7, [r1, #16]
   1a6b0:	cmp	r7, #0
   1a6b4:	movne	r3, r7
   1a6b8:	bne	1a6c4 <argp_parse@@Base+0x3974>
   1a6bc:	b	1af24 <argp_parse@@Base+0x41d4>
   1a6c0:	mov	r3, ip
   1a6c4:	ldr	ip, [r3, #12]
   1a6c8:	cmp	ip, #0
   1a6cc:	bne	1a6c0 <argp_parse@@Base+0x3970>
   1a6d0:	ldr	ip, [r3, #8]
   1a6d4:	mvn	r3, ip
   1a6d8:	lsr	r3, r3, #31
   1a6dc:	cmp	r3, r2, lsr #31
   1a6e0:	subne	ip, r2, ip
   1a6e4:	subeq	ip, ip, r2
   1a6e8:	cmp	ip, #0
   1a6ec:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a6f0:	adds	ip, r7, #0
   1a6f4:	movne	ip, #1
   1a6f8:	cmp	r4, #0
   1a6fc:	rsbeq	ip, ip, #0
   1a700:	rsbne	ip, ip, #1
   1a704:	cmp	ip, #0
   1a708:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a70c:	cmp	r4, #0
   1a710:	mov	r6, r1
   1a714:	mov	r5, r0
   1a718:	beq	1ac1c <argp_parse@@Base+0x3ecc>
   1a71c:	ldr	r8, [r4, #12]
   1a720:	ldr	r1, [r4, #20]
   1a724:	ldr	r2, [r7, #20]
   1a728:	ldr	r9, [r7, #12]
   1a72c:	cmp	r1, r2
   1a730:	bgt	1a8f0 <argp_parse@@Base+0x3ba0>
   1a734:	blt	1a740 <argp_parse@@Base+0x39f0>
   1a738:	b	1aa80 <argp_parse@@Base+0x3d30>
   1a73c:	mov	r9, r5
   1a740:	ldr	r5, [r9, #12]
   1a744:	ldr	r3, [r9, #20]
   1a748:	cmp	r1, r3
   1a74c:	blt	1a73c <argp_parse@@Base+0x39ec>
   1a750:	cmp	r8, r5
   1a754:	beq	1b0ec <argp_parse@@Base+0x439c>
   1a758:	ldr	r7, [r5, #12]
   1a75c:	ldr	r6, [r8, #12]
   1a760:	cmp	r6, r7
   1a764:	beq	1b034 <argp_parse@@Base+0x42e4>
   1a768:	ldr	sl, [r6, #12]
   1a76c:	ldr	fp, [r7, #12]
   1a770:	cmp	sl, fp
   1a774:	beq	1b154 <argp_parse@@Base+0x4404>
   1a778:	ldr	r3, [sl, #12]
   1a77c:	ldr	r2, [fp, #12]
   1a780:	cmp	r3, r2
   1a784:	beq	1b1f0 <argp_parse@@Base+0x44a0>
   1a788:	ldr	r1, [r2, #12]
   1a78c:	ldr	r0, [r3, #12]
   1a790:	cmp	r0, r1
   1a794:	beq	1b28c <argp_parse@@Base+0x453c>
   1a798:	str	r3, [sp]
   1a79c:	str	r2, [sp, #4]
   1a7a0:	bl	18bd4 <argp_parse@@Base+0x1e84>
   1a7a4:	subs	ip, r0, #0
   1a7a8:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a7ac:	ldr	r3, [sp]
   1a7b0:	ldr	r2, [sp, #4]
   1a7b4:	ldr	r0, [r3, #8]
   1a7b8:	ldr	r1, [r2, #8]
   1a7bc:	mvn	ip, r1
   1a7c0:	lsr	ip, ip, #31
   1a7c4:	cmp	ip, r0, lsr #31
   1a7c8:	subne	ip, r0, r1
   1a7cc:	subeq	ip, r1, r0
   1a7d0:	cmp	ip, #0
   1a7d4:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a7d8:	ldr	r1, [r2, #4]
   1a7dc:	ldr	r3, [r3, #4]
   1a7e0:	sub	ip, r1, r3
   1a7e4:	cmp	ip, #0
   1a7e8:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a7ec:	ldr	r1, [fp, #8]
   1a7f0:	ldr	r0, [sl, #8]
   1a7f4:	mvn	r3, r1
   1a7f8:	lsr	r3, r3, #31
   1a7fc:	cmp	r3, r0, lsr #31
   1a800:	subne	ip, r0, r1
   1a804:	subeq	ip, r1, r0
   1a808:	cmp	ip, #0
   1a80c:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a810:	ldr	r3, [sl, #4]
   1a814:	ldr	r1, [fp, #4]
   1a818:	sub	ip, r1, r3
   1a81c:	cmp	ip, #0
   1a820:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a824:	ldr	r1, [r7, #8]
   1a828:	ldr	r0, [r6, #8]
   1a82c:	mvn	r3, r1
   1a830:	lsr	r3, r3, #31
   1a834:	cmp	r3, r0, lsr #31
   1a838:	subne	ip, r0, r1
   1a83c:	subeq	ip, r1, r0
   1a840:	cmp	ip, #0
   1a844:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a848:	ldr	r3, [r6, #4]
   1a84c:	ldr	r1, [r7, #4]
   1a850:	sub	ip, r1, r3
   1a854:	cmp	ip, #0
   1a858:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a85c:	ldr	r1, [r5, #8]
   1a860:	ldr	r0, [r8, #8]
   1a864:	mvn	r3, r1
   1a868:	lsr	r3, r3, #31
   1a86c:	cmp	r3, r0, lsr #31
   1a870:	subne	ip, r0, r1
   1a874:	subeq	ip, r1, r0
   1a878:	cmp	ip, #0
   1a87c:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a880:	ldr	r1, [r5, #4]
   1a884:	ldr	r3, [r8, #4]
   1a888:	sub	ip, r1, r3
   1a88c:	cmp	ip, #0
   1a890:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a894:	ldr	r1, [r9, #8]
   1a898:	ldr	r0, [r4, #8]
   1a89c:	mvn	r3, r1
   1a8a0:	lsr	r3, r3, #31
   1a8a4:	cmp	r3, r0, lsr #31
   1a8a8:	subne	ip, r0, r1
   1a8ac:	subeq	ip, r1, r0
   1a8b0:	cmp	ip, #0
   1a8b4:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a8b8:	ldr	r0, [r4, #4]
   1a8bc:	ldr	r1, [r9, #4]
   1a8c0:	sub	ip, r1, r0
   1a8c4:	cmp	ip, #0
   1a8c8:	mvneq	ip, #0
   1a8cc:	mov	r0, ip
   1a8d0:	add	sp, sp, #20
   1a8d4:	ldrd	r4, [sp]
   1a8d8:	ldrd	r6, [sp, #8]
   1a8dc:	ldrd	r8, [sp, #16]
   1a8e0:	ldrd	sl, [sp, #24]
   1a8e4:	add	sp, sp, #32
   1a8e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a8ec:	mov	r8, r4
   1a8f0:	ldr	r4, [r8, #12]
   1a8f4:	ldr	r3, [r8, #20]
   1a8f8:	cmp	r2, r3
   1a8fc:	blt	1a8ec <argp_parse@@Base+0x3b9c>
   1a900:	cmp	r4, r9
   1a904:	beq	1b0b8 <argp_parse@@Base+0x4368>
   1a908:	ldr	r5, [r4, #12]
   1a90c:	ldr	r6, [r9, #12]
   1a910:	cmp	r5, r6
   1a914:	beq	1b120 <argp_parse@@Base+0x43d0>
   1a918:	ldr	sl, [r5, #12]
   1a91c:	ldr	fp, [r6, #12]
   1a920:	cmp	sl, fp
   1a924:	beq	1b068 <argp_parse@@Base+0x4318>
   1a928:	ldr	r3, [sl, #12]
   1a92c:	ldr	r2, [fp, #12]
   1a930:	cmp	r3, r2
   1a934:	beq	1b198 <argp_parse@@Base+0x4448>
   1a938:	ldr	r1, [r2, #12]
   1a93c:	ldr	r0, [r3, #12]
   1a940:	cmp	r0, r1
   1a944:	beq	1b224 <argp_parse@@Base+0x44d4>
   1a948:	str	r3, [sp]
   1a94c:	str	r2, [sp, #4]
   1a950:	bl	18bd4 <argp_parse@@Base+0x1e84>
   1a954:	subs	ip, r0, #0
   1a958:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a95c:	ldr	r3, [sp]
   1a960:	ldr	r2, [sp, #4]
   1a964:	ldr	r0, [r3, #8]
   1a968:	ldr	r1, [r2, #8]
   1a96c:	mvn	ip, r1
   1a970:	lsr	ip, ip, #31
   1a974:	cmp	ip, r0, lsr #31
   1a978:	subne	ip, r0, r1
   1a97c:	subeq	ip, r1, r0
   1a980:	cmp	ip, #0
   1a984:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a988:	ldr	r1, [r2, #4]
   1a98c:	ldr	r3, [r3, #4]
   1a990:	sub	ip, r1, r3
   1a994:	cmp	ip, #0
   1a998:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a99c:	ldr	r1, [fp, #8]
   1a9a0:	ldr	r0, [sl, #8]
   1a9a4:	mvn	r3, r1
   1a9a8:	lsr	r3, r3, #31
   1a9ac:	cmp	r3, r0, lsr #31
   1a9b0:	subne	ip, r0, r1
   1a9b4:	subeq	ip, r1, r0
   1a9b8:	cmp	ip, #0
   1a9bc:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a9c0:	ldr	r3, [sl, #4]
   1a9c4:	ldr	r1, [fp, #4]
   1a9c8:	sub	ip, r1, r3
   1a9cc:	cmp	ip, #0
   1a9d0:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a9d4:	ldr	r1, [r6, #8]
   1a9d8:	ldr	r0, [r5, #8]
   1a9dc:	mvn	r3, r1
   1a9e0:	lsr	r3, r3, #31
   1a9e4:	cmp	r3, r0, lsr #31
   1a9e8:	subne	ip, r0, r1
   1a9ec:	subeq	ip, r1, r0
   1a9f0:	cmp	ip, #0
   1a9f4:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1a9f8:	ldr	r3, [r5, #4]
   1a9fc:	ldr	r1, [r6, #4]
   1aa00:	sub	ip, r1, r3
   1aa04:	cmp	ip, #0
   1aa08:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1aa0c:	ldr	r1, [r9, #8]
   1aa10:	ldr	r0, [r4, #8]
   1aa14:	mvn	r3, r1
   1aa18:	lsr	r3, r3, #31
   1aa1c:	cmp	r3, r0, lsr #31
   1aa20:	subne	ip, r0, r1
   1aa24:	subeq	ip, r1, r0
   1aa28:	cmp	ip, #0
   1aa2c:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1aa30:	ldr	r0, [r4, #4]
   1aa34:	ldr	r1, [r9, #4]
   1aa38:	sub	ip, r1, r0
   1aa3c:	cmp	ip, #0
   1aa40:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1aa44:	ldr	r1, [r7, #8]
   1aa48:	ldr	r0, [r8, #8]
   1aa4c:	mvn	r3, r1
   1aa50:	lsr	r3, r3, #31
   1aa54:	cmp	r3, r0, lsr #31
   1aa58:	subne	ip, r0, r1
   1aa5c:	subeq	ip, r1, r0
   1aa60:	cmp	ip, #0
   1aa64:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1aa68:	ldr	r1, [r7, #4]
   1aa6c:	ldr	r0, [r8, #4]
   1aa70:	sub	ip, r1, r0
   1aa74:	cmp	ip, #0
   1aa78:	moveq	ip, #1
   1aa7c:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1aa80:	cmp	r8, r9
   1aa84:	beq	1b258 <argp_parse@@Base+0x4508>
   1aa88:	ldr	sl, [r8, #12]
   1aa8c:	ldr	fp, [r9, #12]
   1aa90:	cmp	sl, fp
   1aa94:	beq	1b2c0 <argp_parse@@Base+0x4570>
   1aa98:	ldr	r3, [sl, #12]
   1aa9c:	mov	r2, r3
   1aaa0:	ldr	r3, [fp, #12]
   1aaa4:	str	r2, [sp]
   1aaa8:	cmp	r2, r3
   1aaac:	beq	1b2f4 <argp_parse@@Base+0x45a4>
   1aab0:	ldr	r2, [r2, #12]
   1aab4:	mov	r1, r2
   1aab8:	ldr	r2, [r3, #12]
   1aabc:	str	r1, [sp, #4]
   1aac0:	cmp	r1, r2
   1aac4:	beq	1b328 <argp_parse@@Base+0x45d8>
   1aac8:	ldr	r0, [r1, #12]
   1aacc:	ldr	r1, [r2, #12]
   1aad0:	cmp	r0, r1
   1aad4:	beq	1b360 <argp_parse@@Base+0x4610>
   1aad8:	str	r3, [sp, #8]
   1aadc:	str	r2, [sp, #12]
   1aae0:	bl	18bd4 <argp_parse@@Base+0x1e84>
   1aae4:	subs	ip, r0, #0
   1aae8:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1aaec:	ldr	r3, [sp, #4]
   1aaf0:	ldr	r2, [sp, #12]
   1aaf4:	ldr	r0, [r3, #8]
   1aaf8:	ldr	r1, [r2, #8]
   1aafc:	ldr	r3, [sp, #8]
   1ab00:	mvn	ip, r1
   1ab04:	lsr	ip, ip, #31
   1ab08:	cmp	ip, r0, lsr #31
   1ab0c:	subne	ip, r0, r1
   1ab10:	subeq	ip, r1, r0
   1ab14:	cmp	ip, #0
   1ab18:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1ab1c:	ldr	r1, [r2, #4]
   1ab20:	ldr	r2, [sp, #4]
   1ab24:	ldr	r2, [r2, #4]
   1ab28:	sub	ip, r1, r2
   1ab2c:	cmp	ip, #0
   1ab30:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1ab34:	ldr	r2, [sp]
   1ab38:	ldr	r1, [r3, #8]
   1ab3c:	ldr	r0, [r2, #8]
   1ab40:	mvn	r2, r1
   1ab44:	lsr	r2, r2, #31
   1ab48:	cmp	r2, r0, lsr #31
   1ab4c:	subne	ip, r0, r1
   1ab50:	subeq	ip, r1, r0
   1ab54:	cmp	ip, #0
   1ab58:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1ab5c:	ldr	r1, [r3, #4]
   1ab60:	ldr	r3, [sp]
   1ab64:	ldr	r3, [r3, #4]
   1ab68:	sub	ip, r1, r3
   1ab6c:	cmp	ip, #0
   1ab70:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1ab74:	ldr	r1, [fp, #8]
   1ab78:	ldr	r0, [sl, #8]
   1ab7c:	mvn	r3, r1
   1ab80:	lsr	r3, r3, #31
   1ab84:	cmp	r3, r0, lsr #31
   1ab88:	subne	ip, r0, r1
   1ab8c:	subeq	ip, r1, r0
   1ab90:	cmp	ip, #0
   1ab94:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1ab98:	ldr	r3, [sl, #4]
   1ab9c:	ldr	r1, [fp, #4]
   1aba0:	sub	ip, r1, r3
   1aba4:	cmp	ip, #0
   1aba8:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1abac:	ldr	r1, [r9, #8]
   1abb0:	ldr	r0, [r8, #8]
   1abb4:	mvn	r3, r1
   1abb8:	lsr	r3, r3, #31
   1abbc:	cmp	r3, r0, lsr #31
   1abc0:	subne	ip, r0, r1
   1abc4:	subeq	ip, r1, r0
   1abc8:	cmp	ip, #0
   1abcc:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1abd0:	ldr	r3, [r8, #4]
   1abd4:	ldr	r1, [r9, #4]
   1abd8:	sub	ip, r1, r3
   1abdc:	cmp	ip, #0
   1abe0:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1abe4:	ldr	r1, [r7, #8]
   1abe8:	ldr	r0, [r4, #8]
   1abec:	mvn	r3, r1
   1abf0:	lsr	r3, r3, #31
   1abf4:	cmp	r3, r0, lsr #31
   1abf8:	subne	ip, r0, r1
   1abfc:	subeq	ip, r1, r0
   1ac00:	cmp	ip, #0
   1ac04:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1ac08:	ldr	r3, [r4, #4]
   1ac0c:	ldr	r1, [r7, #4]
   1ac10:	sub	ip, r1, r3
   1ac14:	cmp	ip, #0
   1ac18:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1ac1c:	ldr	r1, [r6, #12]
   1ac20:	ldr	r0, [r5, #12]
   1ac24:	mvn	r3, r1
   1ac28:	lsr	r3, r3, #31
   1ac2c:	cmp	r3, r0, lsr #31
   1ac30:	subne	ip, r0, r1
   1ac34:	subeq	ip, r1, r0
   1ac38:	cmp	ip, #0
   1ac3c:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1ac40:	ldm	r5, {r3, sl}
   1ac44:	cmp	sl, #0
   1ac48:	beq	1b188 <argp_parse@@Base+0x4438>
   1ac4c:	add	r2, r3, #24
   1ac50:	mov	r1, sl
   1ac54:	ldr	r7, [r2, #-24]	; 0xffffffe8
   1ac58:	cmp	r7, #0
   1ac5c:	beq	1ac6c <argp_parse@@Base+0x3f1c>
   1ac60:	ldr	r0, [r2, #-12]
   1ac64:	tst	r0, #2
   1ac68:	beq	1ac7c <argp_parse@@Base+0x3f2c>
   1ac6c:	subs	r1, r1, #1
   1ac70:	add	r2, r2, #24
   1ac74:	bne	1ac54 <argp_parse@@Base+0x3f04>
   1ac78:	mov	r7, r1
   1ac7c:	ldrd	r8, [r6]
   1ac80:	cmp	r9, #0
   1ac84:	beq	1b190 <argp_parse@@Base+0x4440>
   1ac88:	add	r2, r8, #24
   1ac8c:	mov	r1, r9
   1ac90:	ldr	r4, [r2, #-24]	; 0xffffffe8
   1ac94:	cmp	r4, #0
   1ac98:	beq	1aca8 <argp_parse@@Base+0x3f58>
   1ac9c:	ldr	r0, [r2, #-12]
   1aca0:	tst	r0, #2
   1aca4:	beq	1acb8 <argp_parse@@Base+0x3f68>
   1aca8:	subs	r1, r1, #1
   1acac:	add	r2, r2, #24
   1acb0:	bne	1ac90 <argp_parse@@Base+0x3f40>
   1acb4:	mov	r4, r1
   1acb8:	ldr	r2, [r3, #12]
   1acbc:	tst	r2, #8
   1acc0:	beq	1ad34 <argp_parse@@Base+0x3fe4>
   1acc4:	cmp	r7, #0
   1acc8:	beq	1ad34 <argp_parse@@Base+0x3fe4>
   1accc:	str	r3, [sp]
   1acd0:	bl	119dc <__ctype_b_loc@plt>
   1acd4:	ldrb	r1, [r7]
   1acd8:	ldr	r0, [r0]
   1acdc:	ldr	r3, [sp]
   1ace0:	lsl	r2, r1, #1
   1ace4:	ldrh	r2, [r0, r2]
   1ace8:	tst	r2, #8192	; 0x2000
   1acec:	beq	1ad04 <argp_parse@@Base+0x3fb4>
   1acf0:	ldrb	r1, [r7, #1]!
   1acf4:	lsl	r2, r1, #1
   1acf8:	ldrh	r2, [r0, r2]
   1acfc:	tst	r2, #8192	; 0x2000
   1ad00:	bne	1acf0 <argp_parse@@Base+0x3fa0>
   1ad04:	cmp	r1, #0
   1ad08:	bne	1ad24 <argp_parse@@Base+0x3fd4>
   1ad0c:	b	1b018 <argp_parse@@Base+0x42c8>
   1ad10:	ldrb	r2, [r7, #1]!
   1ad14:	cmp	r2, #0
   1ad18:	lsl	ip, r2, #1
   1ad1c:	beq	1ad2c <argp_parse@@Base+0x3fdc>
   1ad20:	ldrh	r2, [r0, ip]
   1ad24:	tst	r2, #8
   1ad28:	beq	1ad10 <argp_parse@@Base+0x3fc0>
   1ad2c:	cmp	r1, #45	; 0x2d
   1ad30:	bne	1b018 <argp_parse@@Base+0x42c8>
   1ad34:	ldr	r2, [r8, #12]
   1ad38:	tst	r2, #8
   1ad3c:	bne	1af34 <argp_parse@@Base+0x41e4>
   1ad40:	cmp	sl, #0
   1ad44:	ldr	r2, [r5, #8]
   1ad48:	ldr	r6, [r6, #8]
   1ad4c:	beq	1afbc <argp_parse@@Base+0x426c>
   1ad50:	mov	fp, sl
   1ad54:	mov	r5, r3
   1ad58:	str	r7, [sp]
   1ad5c:	stmib	sp, {r4, r6}
   1ad60:	mov	r4, r2
   1ad64:	ldr	sl, [r5, #12]
   1ad68:	mov	r0, #1
   1ad6c:	ands	r6, sl, #8
   1ad70:	movne	r6, #0
   1ad74:	bne	1adc4 <argp_parse@@Base+0x4074>
   1ad78:	ldr	r7, [r5, #4]
   1ad7c:	sub	ip, r7, #1
   1ad80:	cmp	ip, #254	; 0xfe
   1ad84:	bhi	1adc4 <argp_parse@@Base+0x4074>
   1ad88:	bl	119dc <__ctype_b_loc@plt>
   1ad8c:	ldr	lr, [r0]
   1ad90:	lsl	ip, r7, #1
   1ad94:	mov	r0, #1
   1ad98:	ldrh	ip, [lr, ip]
   1ad9c:	tst	ip, #16384	; 0x4000
   1ada0:	beq	1adc4 <argp_parse@@Base+0x4074>
   1ada4:	ldrb	ip, [r4]
   1ada8:	cmp	r7, ip
   1adac:	bne	1adc4 <argp_parse@@Base+0x4074>
   1adb0:	and	sl, sl, #2
   1adb4:	add	r4, r4, r0
   1adb8:	cmp	sl, #0
   1adbc:	moveq	r6, r7
   1adc0:	moveq	r0, #0
   1adc4:	subs	fp, fp, #1
   1adc8:	add	r5, r5, #24
   1adcc:	moveq	r0, #0
   1add0:	cmp	r0, #0
   1add4:	bne	1ad64 <argp_parse@@Base+0x4014>
   1add8:	uxtb	r3, r6
   1addc:	mov	fp, r6
   1ade0:	ldr	r7, [sp]
   1ade4:	cmp	r9, #0
   1ade8:	ldmib	sp, {r4, r6}
   1adec:	str	r3, [sp]
   1adf0:	strne	r4, [sp, #4]
   1adf4:	beq	1b1cc <argp_parse@@Base+0x447c>
   1adf8:	ldr	r5, [r8, #12]
   1adfc:	mov	r3, #1
   1ae00:	ands	sl, r5, #8
   1ae04:	movne	sl, #0
   1ae08:	bne	1ae58 <argp_parse@@Base+0x4108>
   1ae0c:	ldr	r4, [r8, #4]
   1ae10:	sub	r1, r4, #1
   1ae14:	cmp	r1, #254	; 0xfe
   1ae18:	bhi	1ae58 <argp_parse@@Base+0x4108>
   1ae1c:	bl	119dc <__ctype_b_loc@plt>
   1ae20:	ldr	r0, [r0]
   1ae24:	lsl	r1, r4, #1
   1ae28:	mov	r3, #1
   1ae2c:	ldrh	r1, [r0, r1]
   1ae30:	tst	r1, #16384	; 0x4000
   1ae34:	beq	1ae58 <argp_parse@@Base+0x4108>
   1ae38:	ldrb	r1, [r6]
   1ae3c:	cmp	r4, r1
   1ae40:	bne	1ae58 <argp_parse@@Base+0x4108>
   1ae44:	and	r5, r5, #2
   1ae48:	add	r6, r6, r3
   1ae4c:	cmp	r5, #0
   1ae50:	moveq	sl, r4
   1ae54:	moveq	r3, #0
   1ae58:	subs	r9, r9, #1
   1ae5c:	add	r8, r8, #24
   1ae60:	moveq	r3, #0
   1ae64:	cmp	r3, #0
   1ae68:	bne	1adf8 <argp_parse@@Base+0x40a8>
   1ae6c:	cmp	fp, #0
   1ae70:	uxtb	r6, sl
   1ae74:	ldr	r4, [sp, #4]
   1ae78:	beq	1affc <argp_parse@@Base+0x42ac>
   1ae7c:	ldr	r3, [sp]
   1ae80:	lsl	r9, r3, #2
   1ae84:	cmp	sl, #0
   1ae88:	beq	1afe8 <argp_parse@@Base+0x4298>
   1ae8c:	lsl	r8, r6, #2
   1ae90:	bl	119b8 <__ctype_tolower_loc@plt>
   1ae94:	ldr	r3, [r0]
   1ae98:	ldr	r1, [r3, r9]
   1ae9c:	ldr	r0, [r3, r8]
   1aea0:	subs	ip, r1, r0
   1aea4:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1aea8:	ldr	r3, [sp]
   1aeac:	subs	ip, r6, r3
   1aeb0:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1aeb4:	adds	r0, sl, #0
   1aeb8:	movne	r0, #1
   1aebc:	cmp	fp, #0
   1aec0:	rsbeq	ip, r0, #0
   1aec4:	rsbne	ip, r0, #1
   1aec8:	cmp	ip, #0
   1aecc:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1aed0:	cmp	fp, #0
   1aed4:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1aed8:	adds	r0, r4, #0
   1aedc:	movne	r0, #1
   1aee0:	cmp	r7, #0
   1aee4:	rsbeq	ip, r0, #0
   1aee8:	rsbne	ip, r0, #1
   1aeec:	cmp	ip, #0
   1aef0:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1aef4:	cmp	r7, #0
   1aef8:	beq	1a8cc <argp_parse@@Base+0x3b7c>
   1aefc:	mov	r1, r4
   1af00:	mov	r0, r7
   1af04:	add	sp, sp, #20
   1af08:	ldrd	r4, [sp]
   1af0c:	ldrd	r6, [sp, #8]
   1af10:	ldrd	r8, [sp, #16]
   1af14:	ldrd	sl, [sp, #24]
   1af18:	ldr	lr, [sp, #32]
   1af1c:	add	sp, sp, #36	; 0x24
   1af20:	b	118ec <strcasecmp@plt>
   1af24:	ldr	ip, [r1, #12]
   1af28:	b	1a6d4 <argp_parse@@Base+0x3984>
   1af2c:	ldr	r2, [r0, #12]
   1af30:	b	1a6ac <argp_parse@@Base+0x395c>
   1af34:	cmp	r4, #0
   1af38:	movne	fp, #0
   1af3c:	beq	1ad40 <argp_parse@@Base+0x3ff0>
   1af40:	str	r3, [sp]
   1af44:	bl	119dc <__ctype_b_loc@plt>
   1af48:	ldrb	ip, [r4]
   1af4c:	ldr	r1, [r0]
   1af50:	ldr	r3, [sp]
   1af54:	lsl	r2, ip, #1
   1af58:	ldrh	r2, [r1, r2]
   1af5c:	tst	r2, #8192	; 0x2000
   1af60:	beq	1af78 <argp_parse@@Base+0x4228>
   1af64:	ldrb	ip, [r4, #1]!
   1af68:	lsl	r2, ip, #1
   1af6c:	ldrh	r2, [r1, r2]
   1af70:	tst	r2, #8192	; 0x2000
   1af74:	bne	1af64 <argp_parse@@Base+0x4214>
   1af78:	cmp	ip, #0
   1af7c:	bne	1af98 <argp_parse@@Base+0x4248>
   1af80:	b	1afa0 <argp_parse@@Base+0x4250>
   1af84:	ldrb	r2, [r4, #1]!
   1af88:	cmp	r2, #0
   1af8c:	lsl	r0, r2, #1
   1af90:	beq	1afa0 <argp_parse@@Base+0x4250>
   1af94:	ldrh	r2, [r1, r0]
   1af98:	tst	r2, #8
   1af9c:	beq	1af84 <argp_parse@@Base+0x4234>
   1afa0:	cmp	ip, #45	; 0x2d
   1afa4:	moveq	r0, fp
   1afa8:	subne	r0, fp, #1
   1afac:	cmp	r0, #0
   1afb0:	movne	ip, r0
   1afb4:	bne	1a8cc <argp_parse@@Base+0x3b7c>
   1afb8:	b	1ad40 <argp_parse@@Base+0x3ff0>
   1afbc:	cmp	r9, #0
   1afc0:	movne	fp, sl
   1afc4:	strne	r4, [sp, #4]
   1afc8:	strne	fp, [sp]
   1afcc:	bne	1adf8 <argp_parse@@Base+0x40a8>
   1afd0:	cmp	r7, #0
   1afd4:	beq	1b39c <argp_parse@@Base+0x464c>
   1afd8:	ldrb	r3, [r7]
   1afdc:	mov	fp, sl
   1afe0:	lsl	r9, r3, #2
   1afe4:	str	r3, [sp]
   1afe8:	cmp	r4, #0
   1afec:	beq	1b09c <argp_parse@@Base+0x434c>
   1aff0:	ldrb	r6, [r4]
   1aff4:	mov	sl, #0
   1aff8:	b	1ae8c <argp_parse@@Base+0x413c>
   1affc:	cmp	r7, #0
   1b000:	beq	1b0ac <argp_parse@@Base+0x435c>
   1b004:	ldrb	r3, [r7]
   1b008:	mov	fp, #0
   1b00c:	lsl	r9, r3, #2
   1b010:	str	r3, [sp]
   1b014:	b	1ae84 <argp_parse@@Base+0x4134>
   1b018:	ldr	r2, [r8, #12]
   1b01c:	tst	r2, #8
   1b020:	beq	1b02c <argp_parse@@Base+0x42dc>
   1b024:	cmp	r4, #0
   1b028:	bne	1b3a4 <argp_parse@@Base+0x4654>
   1b02c:	mov	ip, #1
   1b030:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b034:	ldr	lr, [r5, #4]
   1b038:	ldr	r1, [r5, #8]
   1b03c:	ldr	r0, [r8, #8]
   1b040:	ldr	r2, [r8, #4]
   1b044:	mvn	r3, r1
   1b048:	lsr	r3, r3, #31
   1b04c:	cmp	r3, r0, lsr #31
   1b050:	subne	ip, r0, r1
   1b054:	subeq	ip, r1, r0
   1b058:	cmp	ip, #0
   1b05c:	subeq	ip, lr, r2
   1b060:	beq	1a88c <argp_parse@@Base+0x3b3c>
   1b064:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b068:	ldr	r2, [r5, #4]
   1b06c:	ldr	r1, [r6, #8]
   1b070:	ldr	r0, [r5, #8]
   1b074:	ldr	lr, [r6, #4]
   1b078:	mvn	r3, r1
   1b07c:	lsr	r3, r3, #31
   1b080:	cmp	r3, r0, lsr #31
   1b084:	subne	ip, r0, r1
   1b088:	subeq	ip, r1, r0
   1b08c:	cmp	ip, #0
   1b090:	subeq	ip, lr, r2
   1b094:	beq	1aa04 <argp_parse@@Base+0x3cb4>
   1b098:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b09c:	mov	sl, r4
   1b0a0:	mov	r8, r4
   1b0a4:	mov	r6, r4
   1b0a8:	b	1ae90 <argp_parse@@Base+0x4140>
   1b0ac:	mov	r9, r7
   1b0b0:	str	r7, [sp]
   1b0b4:	b	1ae84 <argp_parse@@Base+0x4134>
   1b0b8:	ldr	lr, [r7, #4]
   1b0bc:	ldr	r1, [r7, #8]
   1b0c0:	ldr	r0, [r8, #8]
   1b0c4:	ldr	r2, [r8, #4]
   1b0c8:	mvn	r3, r1
   1b0cc:	lsr	r3, r3, #31
   1b0d0:	cmp	r3, r0, lsr #31
   1b0d4:	subne	ip, r0, r1
   1b0d8:	subeq	ip, r1, r0
   1b0dc:	cmp	ip, #0
   1b0e0:	subeq	ip, lr, r2
   1b0e4:	beq	1aa74 <argp_parse@@Base+0x3d24>
   1b0e8:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b0ec:	ldr	r2, [r4, #4]
   1b0f0:	ldr	r1, [r9, #8]
   1b0f4:	ldr	r0, [r4, #8]
   1b0f8:	ldr	lr, [r9, #4]
   1b0fc:	mvn	r3, r1
   1b100:	lsr	r3, r3, #31
   1b104:	cmp	r3, r0, lsr #31
   1b108:	subne	ip, r0, r1
   1b10c:	subeq	ip, r1, r0
   1b110:	cmp	ip, #0
   1b114:	subeq	ip, lr, r2
   1b118:	beq	1a8c4 <argp_parse@@Base+0x3b74>
   1b11c:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b120:	ldr	r2, [r4, #4]
   1b124:	ldr	r1, [r9, #8]
   1b128:	ldr	r0, [r4, #8]
   1b12c:	ldr	lr, [r9, #4]
   1b130:	mvn	r3, r1
   1b134:	lsr	r3, r3, #31
   1b138:	cmp	r3, r0, lsr #31
   1b13c:	subne	ip, r0, r1
   1b140:	subeq	ip, r1, r0
   1b144:	cmp	ip, #0
   1b148:	subeq	ip, lr, r2
   1b14c:	beq	1aa3c <argp_parse@@Base+0x3cec>
   1b150:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b154:	ldr	r2, [r6, #4]
   1b158:	ldr	r1, [r7, #8]
   1b15c:	ldr	r0, [r6, #8]
   1b160:	ldr	lr, [r7, #4]
   1b164:	mvn	r3, r1
   1b168:	lsr	r3, r3, #31
   1b16c:	cmp	r3, r0, lsr #31
   1b170:	subne	ip, r0, r1
   1b174:	subeq	ip, r1, r0
   1b178:	cmp	ip, #0
   1b17c:	subeq	ip, lr, r2
   1b180:	beq	1a854 <argp_parse@@Base+0x3b04>
   1b184:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b188:	mov	r7, ip
   1b18c:	b	1ac7c <argp_parse@@Base+0x3f2c>
   1b190:	mov	r4, r9
   1b194:	b	1acb8 <argp_parse@@Base+0x3f68>
   1b198:	ldr	r2, [sl, #4]
   1b19c:	ldr	r1, [fp, #8]
   1b1a0:	ldr	r0, [sl, #8]
   1b1a4:	ldr	lr, [fp, #4]
   1b1a8:	mvn	r3, r1
   1b1ac:	lsr	r3, r3, #31
   1b1b0:	cmp	r3, r0, lsr #31
   1b1b4:	subne	ip, r0, r1
   1b1b8:	subeq	ip, r1, r0
   1b1bc:	cmp	ip, #0
   1b1c0:	subeq	ip, lr, r2
   1b1c4:	beq	1a9cc <argp_parse@@Base+0x3c7c>
   1b1c8:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b1cc:	cmp	fp, #0
   1b1d0:	lslne	r9, fp, #2
   1b1d4:	bne	1afe8 <argp_parse@@Base+0x4298>
   1b1d8:	cmp	r7, #0
   1b1dc:	movne	sl, fp
   1b1e0:	movne	r6, sl
   1b1e4:	bne	1b004 <argp_parse@@Base+0x42b4>
   1b1e8:	str	r7, [sp]
   1b1ec:	b	1afe8 <argp_parse@@Base+0x4298>
   1b1f0:	ldr	r2, [sl, #4]
   1b1f4:	ldr	r1, [fp, #8]
   1b1f8:	ldr	r0, [sl, #8]
   1b1fc:	ldr	lr, [fp, #4]
   1b200:	mvn	r3, r1
   1b204:	lsr	r3, r3, #31
   1b208:	cmp	r3, r0, lsr #31
   1b20c:	subne	ip, r0, r1
   1b210:	subeq	ip, r1, r0
   1b214:	cmp	ip, #0
   1b218:	subeq	ip, lr, r2
   1b21c:	beq	1a81c <argp_parse@@Base+0x3acc>
   1b220:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b224:	ldr	r0, [r3, #8]
   1b228:	ldr	r1, [r2, #8]
   1b22c:	ldr	lr, [r2, #4]
   1b230:	ldr	r3, [r3, #4]
   1b234:	mvn	r2, r1
   1b238:	lsr	r2, r2, #31
   1b23c:	cmp	r2, r0, lsr #31
   1b240:	subne	ip, r0, r1
   1b244:	subeq	ip, r1, r0
   1b248:	cmp	ip, #0
   1b24c:	subeq	ip, lr, r3
   1b250:	beq	1a994 <argp_parse@@Base+0x3c44>
   1b254:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b258:	ldr	r2, [r4, #4]
   1b25c:	ldr	r1, [r7, #8]
   1b260:	ldr	r0, [r4, #8]
   1b264:	ldr	lr, [r7, #4]
   1b268:	mvn	r3, r1
   1b26c:	lsr	r3, r3, #31
   1b270:	cmp	r3, r0, lsr #31
   1b274:	subne	ip, r0, r1
   1b278:	subeq	ip, r1, r0
   1b27c:	cmp	ip, #0
   1b280:	subeq	ip, lr, r2
   1b284:	beq	1ac14 <argp_parse@@Base+0x3ec4>
   1b288:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b28c:	ldr	r0, [r3, #8]
   1b290:	ldr	r1, [r2, #8]
   1b294:	ldr	lr, [r2, #4]
   1b298:	ldr	r3, [r3, #4]
   1b29c:	mvn	r2, r1
   1b2a0:	lsr	r2, r2, #31
   1b2a4:	cmp	r2, r0, lsr #31
   1b2a8:	subne	ip, r0, r1
   1b2ac:	subeq	ip, r1, r0
   1b2b0:	cmp	ip, #0
   1b2b4:	subeq	ip, lr, r3
   1b2b8:	beq	1a7e4 <argp_parse@@Base+0x3a94>
   1b2bc:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b2c0:	ldr	r2, [r8, #4]
   1b2c4:	ldr	r1, [r9, #8]
   1b2c8:	ldr	r0, [r8, #8]
   1b2cc:	ldr	lr, [r9, #4]
   1b2d0:	mvn	r3, r1
   1b2d4:	lsr	r3, r3, #31
   1b2d8:	cmp	r3, r0, lsr #31
   1b2dc:	subne	ip, r0, r1
   1b2e0:	subeq	ip, r1, r0
   1b2e4:	cmp	ip, #0
   1b2e8:	subeq	ip, lr, r2
   1b2ec:	beq	1abdc <argp_parse@@Base+0x3e8c>
   1b2f0:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b2f4:	ldr	r2, [sl, #4]
   1b2f8:	ldr	r1, [fp, #8]
   1b2fc:	ldr	r0, [sl, #8]
   1b300:	ldr	lr, [fp, #4]
   1b304:	mvn	r3, r1
   1b308:	lsr	r3, r3, #31
   1b30c:	cmp	r3, r0, lsr #31
   1b310:	subne	ip, r0, r1
   1b314:	subeq	ip, r1, r0
   1b318:	cmp	ip, #0
   1b31c:	subeq	ip, lr, r2
   1b320:	beq	1aba4 <argp_parse@@Base+0x3e54>
   1b324:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b328:	ldr	ip, [sp]
   1b32c:	ldr	r2, [r3, #4]
   1b330:	ldr	r1, [r3, #8]
   1b334:	ldr	lr, [ip, #4]
   1b338:	ldr	r0, [ip, #8]
   1b33c:	mvn	r3, r1
   1b340:	lsr	r3, r3, #31
   1b344:	cmp	r3, r0, lsr #31
   1b348:	subne	ip, r0, r1
   1b34c:	subeq	ip, r1, r0
   1b350:	cmp	ip, #0
   1b354:	subeq	ip, r2, lr
   1b358:	beq	1ab6c <argp_parse@@Base+0x3e1c>
   1b35c:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b360:	ldr	r0, [sp, #4]
   1b364:	ldr	lr, [r2, #4]
   1b368:	ldr	r1, [r2, #8]
   1b36c:	ldr	r2, [sp, #4]
   1b370:	ldr	r0, [r0, #8]
   1b374:	mvn	ip, r1
   1b378:	lsr	ip, ip, #31
   1b37c:	ldr	r2, [r2, #4]
   1b380:	cmp	ip, r0, lsr #31
   1b384:	subne	ip, r0, r1
   1b388:	subeq	ip, r1, r0
   1b38c:	cmp	ip, #0
   1b390:	subeq	ip, lr, r2
   1b394:	beq	1ab2c <argp_parse@@Base+0x3ddc>
   1b398:	b	1a8cc <argp_parse@@Base+0x3b7c>
   1b39c:	mov	fp, r7
   1b3a0:	b	1b1e8 <argp_parse@@Base+0x4498>
   1b3a4:	mov	fp, #1
   1b3a8:	b	1af40 <argp_parse@@Base+0x41f0>

0001b3ac <argp_failure@@Base>:
   1b3ac:	push	{r3}		; (str r3, [sp, #-4]!)
   1b3b0:	strd	r4, [sp, #-20]!	; 0xffffffec
   1b3b4:	subs	r5, r0, #0
   1b3b8:	strd	r6, [sp, #8]
   1b3bc:	mov	r7, r1
   1b3c0:	mov	r6, r2
   1b3c4:	str	lr, [sp, #16]
   1b3c8:	sub	sp, sp, #200	; 0xc8
   1b3cc:	beq	1b528 <argp_failure@@Base+0x17c>
   1b3d0:	ldr	r3, [r5, #16]
   1b3d4:	tst	r3, #2
   1b3d8:	bne	1b50c <argp_failure@@Base+0x160>
   1b3dc:	ldr	r4, [r5, #44]	; 0x2c
   1b3e0:	cmp	r4, #0
   1b3e4:	beq	1b50c <argp_failure@@Base+0x160>
   1b3e8:	mov	r0, r4
   1b3ec:	bl	11b8c <flockfile@plt>
   1b3f0:	ldr	r0, [r5, #40]	; 0x28
   1b3f4:	mov	r1, r4
   1b3f8:	bl	11754 <fputs_unlocked@plt>
   1b3fc:	ldr	r3, [sp, #220]	; 0xdc
   1b400:	cmp	r3, #0
   1b404:	beq	1b460 <argp_failure@@Base+0xb4>
   1b408:	ldr	r3, [r4, #20]
   1b40c:	add	r1, sp, #224	; 0xe0
   1b410:	ldr	r2, [r4, #24]
   1b414:	str	r1, [sp]
   1b418:	cmp	r3, r2
   1b41c:	addcc	r1, r3, #1
   1b420:	movcc	r2, #58	; 0x3a
   1b424:	strcc	r1, [r4, #20]
   1b428:	strbcc	r2, [r3]
   1b42c:	bcs	1b598 <argp_failure@@Base+0x1ec>
   1b430:	ldr	r3, [r4, #20]
   1b434:	ldr	r2, [r4, #24]
   1b438:	cmp	r3, r2
   1b43c:	addcc	r1, r3, #1
   1b440:	movcc	r2, #32
   1b444:	strcc	r1, [r4, #20]
   1b448:	strbcc	r2, [r3]
   1b44c:	bcs	1b588 <argp_failure@@Base+0x1dc>
   1b450:	mov	r0, r4
   1b454:	ldr	r2, [sp]
   1b458:	ldr	r1, [sp, #220]	; 0xdc
   1b45c:	bl	11b2c <vfprintf@plt>
   1b460:	cmp	r6, #0
   1b464:	ldr	r3, [r4, #20]
   1b468:	ldr	r2, [r4, #24]
   1b46c:	beq	1b4d0 <argp_failure@@Base+0x124>
   1b470:	cmp	r2, r3
   1b474:	addhi	r1, r3, #1
   1b478:	movhi	r2, #58	; 0x3a
   1b47c:	strhi	r1, [r4, #20]
   1b480:	strbhi	r2, [r3]
   1b484:	bls	1b5b8 <argp_failure@@Base+0x20c>
   1b488:	ldr	r3, [r4, #20]
   1b48c:	ldr	r2, [r4, #24]
   1b490:	cmp	r3, r2
   1b494:	addcc	r1, r3, #1
   1b498:	movcc	r2, #32
   1b49c:	strcc	r1, [r4, #20]
   1b4a0:	strbcc	r2, [r3]
   1b4a4:	bcs	1b5a8 <argp_failure@@Base+0x1fc>
   1b4a8:	mov	r2, #200	; 0xc8
   1b4ac:	mov	r1, sp
   1b4b0:	mov	r0, r6
   1b4b4:	bl	11a6c <strerror_r@plt>
   1b4b8:	cmp	r0, #0
   1b4bc:	beq	1b56c <argp_failure@@Base+0x1c0>
   1b4c0:	mov	r1, r4
   1b4c4:	bl	11754 <fputs_unlocked@plt>
   1b4c8:	ldr	r3, [r4, #20]
   1b4cc:	ldr	r2, [r4, #24]
   1b4d0:	cmp	r3, r2
   1b4d4:	addcc	r1, r3, #1
   1b4d8:	movcc	r2, #10
   1b4dc:	strcc	r1, [r4, #20]
   1b4e0:	strbcc	r2, [r3]
   1b4e4:	bcs	1b55c <argp_failure@@Base+0x1b0>
   1b4e8:	mov	r0, r4
   1b4ec:	bl	118f8 <funlockfile@plt>
   1b4f0:	cmp	r7, #0
   1b4f4:	beq	1b50c <argp_failure@@Base+0x160>
   1b4f8:	cmp	r5, #0
   1b4fc:	beq	1b554 <argp_failure@@Base+0x1a8>
   1b500:	ldr	r3, [r5, #16]
   1b504:	tst	r3, #32
   1b508:	beq	1b554 <argp_failure@@Base+0x1a8>
   1b50c:	add	sp, sp, #200	; 0xc8
   1b510:	ldrd	r4, [sp]
   1b514:	ldrd	r6, [sp, #8]
   1b518:	ldr	lr, [sp, #16]
   1b51c:	add	sp, sp, #20
   1b520:	add	sp, sp, #4
   1b524:	bx	lr
   1b528:	movw	r3, #5048	; 0x13b8
   1b52c:	movt	r3, #3
   1b530:	ldr	r4, [r3]
   1b534:	cmp	r4, #0
   1b538:	beq	1b50c <argp_failure@@Base+0x160>
   1b53c:	mov	r0, r4
   1b540:	bl	11b8c <flockfile@plt>
   1b544:	movw	r3, #5040	; 0x13b0
   1b548:	movt	r3, #3
   1b54c:	ldr	r0, [r3]
   1b550:	b	1b3f4 <argp_failure@@Base+0x48>
   1b554:	mov	r0, r7
   1b558:	bl	119f4 <exit@plt>
   1b55c:	mov	r1, #10
   1b560:	mov	r0, r4
   1b564:	bl	11ae4 <__overflow@plt>
   1b568:	b	1b4e8 <argp_failure@@Base+0x13c>
   1b56c:	mov	r0, r6
   1b570:	bl	119ac <strerror@plt>
   1b574:	cmp	r0, #0
   1b578:	movw	r3, #64908	; 0xfd8c
   1b57c:	movt	r3, #1
   1b580:	moveq	r0, r3
   1b584:	b	1b4c0 <argp_failure@@Base+0x114>
   1b588:	mov	r1, #32
   1b58c:	mov	r0, r4
   1b590:	bl	11ae4 <__overflow@plt>
   1b594:	b	1b450 <argp_failure@@Base+0xa4>
   1b598:	mov	r1, #58	; 0x3a
   1b59c:	mov	r0, r4
   1b5a0:	bl	11ae4 <__overflow@plt>
   1b5a4:	b	1b430 <argp_failure@@Base+0x84>
   1b5a8:	mov	r1, #32
   1b5ac:	mov	r0, r4
   1b5b0:	bl	11ae4 <__overflow@plt>
   1b5b4:	b	1b4a8 <argp_failure@@Base+0xfc>
   1b5b8:	mov	r1, #58	; 0x3a
   1b5bc:	mov	r0, r4
   1b5c0:	bl	11ae4 <__overflow@plt>
   1b5c4:	b	1b488 <argp_failure@@Base+0xdc>
   1b5c8:	cmp	r2, #0
   1b5cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b5d0:	strd	r6, [sp, #8]
   1b5d4:	strd	r8, [sp, #16]
   1b5d8:	strd	sl, [sp, #24]
   1b5dc:	add	fp, sp, #32
   1b5e0:	str	lr, [sp, #32]
   1b5e4:	sub	sp, sp, #124	; 0x7c
   1b5e8:	str	r2, [fp, #-132]	; 0xffffff7c
   1b5ec:	str	r0, [fp, #-108]	; 0xffffff94
   1b5f0:	str	r3, [fp, #-104]	; 0xffffff98
   1b5f4:	str	r1, [fp, #-100]	; 0xffffff9c
   1b5f8:	beq	1baac <argp_failure@@Base+0x700>
   1b5fc:	mov	r0, r2
   1b600:	movw	r9, #4980	; 0x1374
   1b604:	movt	r9, #3
   1b608:	bl	11b8c <flockfile@plt>
   1b60c:	ldr	r3, [r9, #36]	; 0x24
   1b610:	cmp	r3, #0
   1b614:	beq	1bac8 <argp_failure@@Base+0x71c>
   1b618:	mov	r3, #0
   1b61c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1b620:	mov	r1, r3
   1b624:	ldr	r2, [r9, #32]
   1b628:	bl	1e1bc <argp_error@@Base+0x1518>
   1b62c:	subs	r7, r0, #0
   1b630:	beq	1c924 <argp_failure@@Base+0x1578>
   1b634:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b638:	ands	r3, r3, #11
   1b63c:	streq	r3, [fp, #-112]	; 0xffffff90
   1b640:	bne	1be54 <argp_failure@@Base+0xaa8>
   1b644:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b648:	ands	r4, r3, #3
   1b64c:	bne	1bc98 <argp_failure@@Base+0x8ec>
   1b650:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b654:	tst	r3, #16
   1b658:	bne	1bc64 <argp_failure@@Base+0x8b8>
   1b65c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b660:	tst	r3, #4
   1b664:	and	r5, r3, #8
   1b668:	bne	1bbdc <argp_failure@@Base+0x830>
   1b66c:	cmp	r5, #0
   1b670:	beq	1ba18 <argp_failure@@Base+0x66c>
   1b674:	ldr	r3, [fp, #-112]	; 0xffffff90
   1b678:	ldr	r3, [r3, #4]
   1b67c:	cmp	r3, #0
   1b680:	str	r3, [fp, #-116]	; 0xffffff8c
   1b684:	beq	1ba18 <argp_failure@@Base+0x66c>
   1b688:	cmp	r4, #0
   1b68c:	bne	1bc0c <argp_failure@@Base+0x860>
   1b690:	ldr	r3, [fp, #-112]	; 0xffffff90
   1b694:	ldr	r3, [r3]
   1b698:	str	r4, [fp, #-88]	; 0xffffffa8
   1b69c:	str	r4, [fp, #-84]	; 0xffffffac
   1b6a0:	str	r4, [fp, #-80]	; 0xffffffb0
   1b6a4:	mov	r0, r3
   1b6a8:	movw	r3, #63284	; 0xf734
   1b6ac:	movt	r3, #1
   1b6b0:	ldr	r2, [r7, #16]
   1b6b4:	str	r3, [fp, #-140]	; 0xffffff74
   1b6b8:	movw	r3, #61620	; 0xf0b4
   1b6bc:	movt	r3, #1
   1b6c0:	ldr	r1, [r7, #24]
   1b6c4:	str	r3, [fp, #-144]	; 0xffffff70
   1b6c8:	ldr	r3, [r7, #28]
   1b6cc:	str	r9, [fp, #-96]	; 0xffffffa0
   1b6d0:	mov	r9, r0
   1b6d4:	sub	r3, r3, r1
   1b6d8:	ldr	r4, [r9]
   1b6dc:	cmp	r3, r2
   1b6e0:	ldr	r8, [r9, #8]
   1b6e4:	bhi	1c3a8 <argp_failure@@Base+0xffc>
   1b6e8:	mov	r1, #1
   1b6ec:	ldr	r0, [r7, #4]
   1b6f0:	ldr	r6, [r4, #12]
   1b6f4:	str	r0, [fp, #-120]	; 0xffffff88
   1b6f8:	mov	r0, #0
   1b6fc:	str	r0, [r7, #4]
   1b700:	ldr	r0, [r7, #12]
   1b704:	str	r1, [fp, #-64]	; 0xffffffc0
   1b708:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b70c:	str	r0, [fp, #-124]	; 0xffffff84
   1b710:	ands	r0, r6, #8
   1b714:	str	r9, [fp, #-76]	; 0xffffffb4
   1b718:	str	r0, [fp, #-128]	; 0xffffff80
   1b71c:	sub	r0, fp, #88	; 0x58
   1b720:	str	r7, [fp, #-72]	; 0xffffffb8
   1b724:	str	r1, [fp, #-60]	; 0xffffffc4
   1b728:	movne	r1, #0
   1b72c:	str	r0, [fp, #-68]	; 0xffffffbc
   1b730:	strne	r1, [fp, #-128]	; 0xffffff80
   1b734:	bne	1b76c <argp_failure@@Base+0x3c0>
   1b738:	ldr	r0, [r9, #4]
   1b73c:	cmp	r0, #0
   1b740:	beq	1b76c <argp_failure@@Base+0x3c0>
   1b744:	add	r1, r4, #24
   1b748:	ldr	ip, [r1, #-24]	; 0xffffffe8
   1b74c:	cmp	ip, #0
   1b750:	beq	1b760 <argp_failure@@Base+0x3b4>
   1b754:	ldr	ip, [r1, #-12]
   1b758:	tst	ip, #2
   1b75c:	beq	1c4d8 <argp_failure@@Base+0x112c>
   1b760:	subs	r0, r0, #1
   1b764:	add	r1, r1, #24
   1b768:	bne	1b748 <argp_failure@@Base+0x39c>
   1b76c:	cmp	r3, r2
   1b770:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b774:	ldr	r5, [r3, #8]
   1b778:	bhi	1c39c <argp_failure@@Base+0xff0>
   1b77c:	str	r5, [r7, #12]
   1b780:	ldr	sl, [r9, #4]
   1b784:	cmp	sl, #0
   1b788:	beq	1b7f8 <argp_failure@@Base+0x44c>
   1b78c:	mov	r5, r4
   1b790:	str	r9, [fp, #-136]	; 0xffffff78
   1b794:	mov	r9, r7
   1b798:	mov	r7, r4
   1b79c:	mov	r4, r8
   1b7a0:	ldr	r8, [r5, #12]
   1b7a4:	tst	r8, #8
   1b7a8:	bne	1b7e0 <argp_failure@@Base+0x434>
   1b7ac:	ldr	r6, [r5, #4]
   1b7b0:	sub	r2, r6, #1
   1b7b4:	cmp	r2, #254	; 0xfe
   1b7b8:	bhi	1b7e0 <argp_failure@@Base+0x434>
   1b7bc:	bl	119dc <__ctype_b_loc@plt>
   1b7c0:	ldr	r1, [r0]
   1b7c4:	lsl	r2, r6, #1
   1b7c8:	ldrh	r2, [r1, r2]
   1b7cc:	tst	r2, #16384	; 0x4000
   1b7d0:	beq	1b7e0 <argp_failure@@Base+0x434>
   1b7d4:	ldrb	r2, [r4]
   1b7d8:	cmp	r6, r2
   1b7dc:	beq	1bfac <argp_failure@@Base+0xc00>
   1b7e0:	subs	sl, sl, #1
   1b7e4:	add	r5, r5, #24
   1b7e8:	bne	1b7a0 <argp_failure@@Base+0x3f4>
   1b7ec:	mov	r4, r7
   1b7f0:	mov	r7, r9
   1b7f4:	ldr	r9, [fp, #-136]	; 0xffffff78
   1b7f8:	ldr	r2, [r4, #12]
   1b7fc:	ldr	r1, [r7, #24]
   1b800:	ldr	r3, [r7, #28]
   1b804:	tst	r2, #8
   1b808:	ldr	r2, [r7, #16]
   1b80c:	sub	r3, r3, r1
   1b810:	beq	1bfbc <argp_failure@@Base+0xc10>
   1b814:	cmp	r3, r2
   1b818:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b81c:	ldr	r5, [r3, #16]
   1b820:	bhi	1c53c <argp_failure@@Base+0x1190>
   1b824:	str	r5, [r7, #12]
   1b828:	ldr	r6, [r9, #4]
   1b82c:	cmp	r6, #0
   1b830:	addne	r5, r4, #24
   1b834:	bne	1b848 <argp_failure@@Base+0x49c>
   1b838:	b	1b8d8 <argp_failure@@Base+0x52c>
   1b83c:	subs	r6, r6, #1
   1b840:	add	r5, r5, #24
   1b844:	beq	1b8d8 <argp_failure@@Base+0x52c>
   1b848:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1b84c:	cmp	r3, #0
   1b850:	beq	1b83c <argp_failure@@Base+0x490>
   1b854:	ldr	r3, [r5, #-12]
   1b858:	tst	r3, #2
   1b85c:	bne	1b83c <argp_failure@@Base+0x490>
   1b860:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b864:	sub	r1, fp, #76	; 0x4c
   1b868:	ldr	r0, [r3, #16]
   1b86c:	bl	19e4c <argp_parse@@Base+0x30fc>
   1b870:	ldr	sl, [r5, #-24]	; 0xffffffe8
   1b874:	mov	r0, sl
   1b878:	bl	11a0c <strlen@plt>
   1b87c:	subs	r8, r0, #0
   1b880:	beq	1b83c <argp_failure@@Base+0x490>
   1b884:	ldr	ip, [r7, #28]
   1b888:	mov	r1, r8
   1b88c:	mov	r0, r7
   1b890:	ldr	lr, [r7, #32]
   1b894:	add	r2, ip, r8
   1b898:	cmp	lr, r2
   1b89c:	bcs	1b8b0 <argp_failure@@Base+0x504>
   1b8a0:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1b8a4:	cmp	r0, #0
   1b8a8:	beq	1b83c <argp_failure@@Base+0x490>
   1b8ac:	ldr	ip, [r7, #28]
   1b8b0:	mov	r2, r8
   1b8b4:	mov	r1, sl
   1b8b8:	mov	r0, ip
   1b8bc:	add	r5, r5, #24
   1b8c0:	bl	1182c <memcpy@plt>
   1b8c4:	ldr	r2, [r7, #28]
   1b8c8:	subs	r6, r6, #1
   1b8cc:	add	r3, r2, r8
   1b8d0:	str	r3, [r7, #28]
   1b8d4:	bne	1b848 <argp_failure@@Base+0x49c>
   1b8d8:	ldr	r2, [r7, #16]
   1b8dc:	ldr	r1, [r7, #24]
   1b8e0:	ldr	r3, [r7, #28]
   1b8e4:	sub	r3, r3, r1
   1b8e8:	cmp	r3, r2
   1b8ec:	bhi	1c390 <argp_failure@@Base+0xfe4>
   1b8f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b8f4:	mov	r2, #0
   1b8f8:	str	r2, [r7, #4]
   1b8fc:	cmp	r3, r2
   1b900:	beq	1c070 <argp_failure@@Base+0xcc4>
   1b904:	ldr	r3, [r4, #12]
   1b908:	tst	r3, #8
   1b90c:	bne	1b938 <argp_failure@@Base+0x58c>
   1b910:	ldr	r5, [r4, #4]
   1b914:	sub	r3, r5, #1
   1b918:	cmp	r3, #254	; 0xfe
   1b91c:	bhi	1b938 <argp_failure@@Base+0x58c>
   1b920:	bl	119dc <__ctype_b_loc@plt>
   1b924:	ldr	r3, [r0]
   1b928:	lsl	r5, r5, #1
   1b92c:	ldrh	r3, [r3, r5]
   1b930:	tst	r3, #16384	; 0x4000
   1b934:	bne	1b944 <argp_failure@@Base+0x598>
   1b938:	ldr	r3, [r4]
   1b93c:	cmp	r3, #0
   1b940:	beq	1c670 <argp_failure@@Base+0x12c4>
   1b944:	ldr	r2, [r7, #16]
   1b948:	ldr	r1, [r7, #24]
   1b94c:	ldr	r3, [r7, #28]
   1b950:	sub	r0, r3, r1
   1b954:	cmp	r0, r2
   1b958:	bhi	1c3c4 <argp_failure@@Base+0x1018>
   1b95c:	ldr	r0, [fp, #-120]	; 0xffffff88
   1b960:	str	r0, [r7, #4]
   1b964:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1b968:	add	r9, r9, #28
   1b96c:	subs	r0, r0, #1
   1b970:	str	r0, [fp, #-116]	; 0xffffff8c
   1b974:	ldr	r0, [fp, #-124]	; 0xffffff84
   1b978:	str	r0, [r7, #12]
   1b97c:	bne	1b6d4 <argp_failure@@Base+0x328>
   1b980:	ldr	r9, [fp, #-96]	; 0xffffffa0
   1b984:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b988:	cmp	r3, #0
   1b98c:	beq	1ba14 <argp_failure@@Base+0x668>
   1b990:	ldr	r3, [r9, #4]
   1b994:	cmp	r3, #0
   1b998:	beq	1ba14 <argp_failure@@Base+0x668>
   1b99c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b9a0:	cmp	r1, #0
   1b9a4:	beq	1ca4c <argp_failure@@Base+0x16a0>
   1b9a8:	ldr	r5, [r1]
   1b9ac:	cmp	r5, #0
   1b9b0:	beq	1cb3c <argp_failure@@Base+0x1790>
   1b9b4:	ldr	r4, [r5, #20]
   1b9b8:	cmp	r4, #0
   1b9bc:	beq	1cadc <argp_failure@@Base+0x1730>
   1b9c0:	mov	r0, r5
   1b9c4:	movw	r4, #64932	; 0xfda4
   1b9c8:	movt	r4, #1
   1b9cc:	bl	17c08 <argp_parse@@Base+0xeb8>
   1b9d0:	mov	r2, r0
   1b9d4:	mov	r1, r4
   1b9d8:	ldr	r3, [r5, #20]
   1b9dc:	mov	r0, #5
   1b9e0:	movt	r0, #512	; 0x200
   1b9e4:	blx	r3
   1b9e8:	subs	r5, r0, #0
   1b9ec:	beq	1ba14 <argp_failure@@Base+0x668>
   1b9f0:	ldrb	r3, [r5]
   1b9f4:	subs	r4, r5, r4
   1b9f8:	movne	r4, #1
   1b9fc:	cmp	r3, #0
   1ba00:	bne	1ca58 <argp_failure@@Base+0x16ac>
   1ba04:	cmp	r4, #0
   1ba08:	beq	1ba14 <argp_failure@@Base+0x668>
   1ba0c:	mov	r0, r5
   1ba10:	bl	17d88 <argp_parse@@Base+0x1038>
   1ba14:	mov	r4, #1
   1ba18:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ba1c:	tst	r3, #32
   1ba20:	bne	1bf48 <argp_failure@@Base+0xb9c>
   1ba24:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ba28:	tst	r3, #64	; 0x40
   1ba2c:	beq	1ba5c <argp_failure@@Base+0x6b0>
   1ba30:	movw	r5, #5660	; 0x161c
   1ba34:	movt	r5, #3
   1ba38:	ldr	r2, [r5]
   1ba3c:	cmp	r2, #0
   1ba40:	beq	1ba5c <argp_failure@@Base+0x6b0>
   1ba44:	cmp	r4, #0
   1ba48:	bne	1bf84 <argp_failure@@Base+0xbd8>
   1ba4c:	movw	r1, #65364	; 0xff54
   1ba50:	movt	r1, #1
   1ba54:	mov	r0, r7
   1ba58:	bl	1e904 <argp_error@@Base+0x1c60>
   1ba5c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1ba60:	bl	118f8 <funlockfile@plt>
   1ba64:	ldr	r3, [fp, #-112]	; 0xffffff90
   1ba68:	cmp	r3, #0
   1ba6c:	beq	1baa4 <argp_failure@@Base+0x6f8>
   1ba70:	ldr	r0, [r3, #12]
   1ba74:	cmp	r0, #0
   1ba78:	beq	1ba8c <argp_failure@@Base+0x6e0>
   1ba7c:	ldr	r4, [r0, #24]
   1ba80:	bl	17d88 <argp_parse@@Base+0x1038>
   1ba84:	subs	r0, r4, #0
   1ba88:	bne	1ba7c <argp_failure@@Base+0x6d0>
   1ba8c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1ba90:	ldr	r3, [r3, #4]
   1ba94:	cmp	r3, #0
   1ba98:	bne	1c7dc <argp_failure@@Base+0x1430>
   1ba9c:	ldr	r0, [fp, #-112]	; 0xffffff90
   1baa0:	bl	17d88 <argp_parse@@Base+0x1038>
   1baa4:	mov	r0, r7
   1baa8:	bl	1e7b4 <argp_error@@Base+0x1b10>
   1baac:	sub	sp, fp, #32
   1bab0:	ldrd	r4, [sp]
   1bab4:	ldrd	r6, [sp, #8]
   1bab8:	ldrd	r8, [sp, #16]
   1babc:	ldrd	sl, [sp, #24]
   1bac0:	add	sp, sp, #32
   1bac4:	pop	{pc}		; (ldr pc, [sp], #4)
   1bac8:	movw	r0, #65048	; 0xfe18
   1bacc:	movt	r0, #1
   1bad0:	bl	11970 <getenv@plt>
   1bad4:	subs	r8, r0, #0
   1bad8:	ldrd	r2, [r9]
   1badc:	sub	sl, fp, #76	; 0x4c
   1bae0:	ldrd	r0, [r9, #8]
   1bae4:	ldrd	r4, [r9, #16]
   1bae8:	strd	r2, [fp, #-76]	; 0xffffffb4
   1baec:	ldrd	r2, [r9, #24]
   1baf0:	strd	r0, [sl, #8]
   1baf4:	ldrd	r0, [r9, #32]
   1baf8:	strd	r4, [sl, #16]
   1bafc:	strd	r2, [sl, #24]
   1bb00:	strd	r0, [sl, #32]
   1bb04:	beq	1b618 <argp_failure@@Base+0x26c>
   1bb08:	ldrb	r6, [r8]
   1bb0c:	cmp	r6, #0
   1bb10:	beq	1bb5c <argp_failure@@Base+0x7b0>
   1bb14:	bl	119dc <__ctype_b_loc@plt>
   1bb18:	mov	r3, r0
   1bb1c:	mov	r0, r6
   1bb20:	mov	r6, r3
   1bb24:	ldr	r1, [r6]
   1bb28:	lsl	r3, r0, #1
   1bb2c:	ldrh	r3, [r1, r3]
   1bb30:	tst	r3, #8192	; 0x2000
   1bb34:	beq	1bb4c <argp_failure@@Base+0x7a0>
   1bb38:	ldrb	r0, [r8, #1]!
   1bb3c:	lsl	r3, r0, #1
   1bb40:	ldrh	r3, [r1, r3]
   1bb44:	tst	r3, #8192	; 0x2000
   1bb48:	bne	1bb38 <argp_failure@@Base+0x78c>
   1bb4c:	ands	r2, r3, #1024	; 0x400
   1bb50:	bne	1c214 <argp_failure@@Base+0xe68>
   1bb54:	cmp	r0, #0
   1bb58:	bne	1c930 <argp_failure@@Base+0x1584>
   1bb5c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1bb60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bb64:	cmp	r3, r2
   1bb68:	ble	1cae8 <argp_failure@@Base+0x173c>
   1bb6c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bb70:	cmp	r3, r2
   1bb74:	ble	1cb14 <argp_failure@@Base+0x1768>
   1bb78:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1bb7c:	cmp	r3, r2
   1bb80:	ble	1cb1c <argp_failure@@Base+0x1770>
   1bb84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bb88:	cmp	r3, r2
   1bb8c:	ble	1cb24 <argp_failure@@Base+0x1778>
   1bb90:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bb94:	cmp	r3, r2
   1bb98:	ble	1cb2c <argp_failure@@Base+0x1780>
   1bb9c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bba0:	cmp	r3, r2
   1bba4:	ble	1cb34 <argp_failure@@Base+0x1788>
   1bba8:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   1bbac:	mov	ip, #1
   1bbb0:	ldrd	r4, [sl, #8]
   1bbb4:	ldrd	r2, [sl, #32]
   1bbb8:	strd	r0, [r9]
   1bbbc:	ldrd	r0, [sl, #24]
   1bbc0:	strd	r4, [r9, #8]
   1bbc4:	strd	r2, [r9, #32]
   1bbc8:	ldrd	r2, [sl, #16]
   1bbcc:	strd	r2, [r9, #16]
   1bbd0:	strd	r0, [r9, #24]
   1bbd4:	str	ip, [r9, #36]	; 0x24
   1bbd8:	b	1b618 <argp_failure@@Base+0x26c>
   1bbdc:	ldr	r3, [fp, #4]
   1bbe0:	movw	r1, #65284	; 0xff04
   1bbe4:	movt	r1, #1
   1bbe8:	mov	r0, r7
   1bbec:	mov	r2, r3
   1bbf0:	bl	1e904 <argp_error@@Base+0x1c60>
   1bbf4:	cmp	r5, #0
   1bbf8:	beq	1ba14 <argp_failure@@Base+0x668>
   1bbfc:	ldr	r3, [fp, #-112]	; 0xffffff90
   1bc00:	ldr	r3, [r3, #4]
   1bc04:	cmp	r3, #0
   1bc08:	beq	1ba14 <argp_failure@@Base+0x668>
   1bc0c:	ldr	r3, [r7, #28]
   1bc10:	ldr	r2, [r7, #32]
   1bc14:	cmp	r3, r2
   1bc18:	bcs	1c984 <argp_failure@@Base+0x15d8>
   1bc1c:	add	r1, r3, #1
   1bc20:	mov	r2, #10
   1bc24:	str	r1, [r7, #28]
   1bc28:	strb	r2, [r3]
   1bc2c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1bc30:	ldr	r3, [r3, #4]
   1bc34:	mov	r2, r3
   1bc38:	str	r3, [fp, #-116]	; 0xffffff8c
   1bc3c:	mov	r3, #0
   1bc40:	cmp	r2, r3
   1bc44:	ldr	r2, [fp, #-112]	; 0xffffff90
   1bc48:	ldr	r2, [r2]
   1bc4c:	str	r3, [fp, #-88]	; 0xffffffa8
   1bc50:	str	r3, [fp, #-84]	; 0xffffffac
   1bc54:	str	r3, [fp, #-80]	; 0xffffffb0
   1bc58:	mov	r0, r2
   1bc5c:	bne	1b6a8 <argp_failure@@Base+0x2fc>
   1bc60:	b	1ba14 <argp_failure@@Base+0x668>
   1bc64:	mov	r0, #1
   1bc68:	mov	r3, #0
   1bc6c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1bc70:	mov	r2, r3
   1bc74:	stm	sp, {r0, r7}
   1bc78:	ldr	r0, [fp, #-108]	; 0xffffff94
   1bc7c:	bl	1a098 <argp_parse@@Base+0x3348>
   1bc80:	ldr	r3, [fp, #-104]	; 0xffffff98
   1bc84:	orr	r4, r4, r0
   1bc88:	tst	r3, #4
   1bc8c:	and	r5, r3, #8
   1bc90:	beq	1b66c <argp_failure@@Base+0x2c0>
   1bc94:	b	1bbdc <argp_failure@@Base+0x830>
   1bc98:	ldr	r3, [fp, #-108]	; 0xffffff94
   1bc9c:	ldr	r0, [r3, #8]
   1bca0:	ldr	r5, [r3, #16]
   1bca4:	cmp	r0, #0
   1bca8:	moveq	r4, r0
   1bcac:	beq	1bcc0 <argp_failure@@Base+0x914>
   1bcb0:	mov	r1, #10
   1bcb4:	bl	11a24 <strchr@plt>
   1bcb8:	adds	r4, r0, #0
   1bcbc:	movne	r4, #1
   1bcc0:	cmp	r5, #0
   1bcc4:	beq	1bcf0 <argp_failure@@Base+0x944>
   1bcc8:	ldr	r3, [r5]
   1bccc:	cmp	r3, #0
   1bcd0:	beq	1bcf0 <argp_failure@@Base+0x944>
   1bcd4:	ldr	r0, [r3, #8]
   1bcd8:	ldr	r1, [r3, #16]
   1bcdc:	bl	18c88 <argp_parse@@Base+0x1f38>
   1bce0:	ldr	r3, [r5, #16]!
   1bce4:	add	r4, r4, r0
   1bce8:	cmp	r3, #0
   1bcec:	bne	1bcd4 <argp_failure@@Base+0x928>
   1bcf0:	add	r3, r4, #7
   1bcf4:	sub	sl, fp, #76	; 0x4c
   1bcf8:	bic	r3, r3, #7
   1bcfc:	movw	r8, #65252	; 0xfee4
   1bd00:	movt	r8, #1
   1bd04:	sub	sp, sp, r3
   1bd08:	movw	r3, #65260	; 0xfeec
   1bd0c:	movt	r3, #1
   1bd10:	mov	r2, r4
   1bd14:	mov	r1, #0
   1bd18:	str	r3, [fp, #-124]	; 0xffffff84
   1bd1c:	add	r3, sp, #8
   1bd20:	mov	r4, #1
   1bd24:	mov	r0, r3
   1bd28:	str	r3, [fp, #-96]	; 0xffffffa0
   1bd2c:	movw	r3, #65244	; 0xfedc
   1bd30:	movt	r3, #1
   1bd34:	str	r3, [fp, #-128]	; 0xffffff80
   1bd38:	bl	11a84 <memset@plt>
   1bd3c:	str	r8, [fp, #-120]	; 0xffffff88
   1bd40:	str	sl, [fp, #-116]	; 0xffffff8c
   1bd44:	ldr	sl, [fp, #-112]	; 0xffffff90
   1bd48:	ldr	r8, [fp, #-104]	; 0xffffff98
   1bd4c:	b	1be2c <argp_failure@@Base+0xa80>
   1bd50:	cmp	r4, #0
   1bd54:	mov	r0, r7
   1bd58:	ldr	r1, [fp, #-120]	; 0xffffff88
   1bd5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1bd60:	ldrne	r2, [fp, #-128]	; 0xffffff80
   1bd64:	ldreq	r2, [fp, #-124]	; 0xffffff84
   1bd68:	ldr	r4, [r7, #12]
   1bd6c:	str	r5, [r7, #12]
   1bd70:	str	r3, [fp, #-76]	; 0xffffffb4
   1bd74:	ldr	r3, [fp, #4]
   1bd78:	bl	1e904 <argp_error@@Base+0x1c60>
   1bd7c:	ldr	r2, [r7, #16]
   1bd80:	ldr	r1, [r7, #24]
   1bd84:	ldr	r3, [r7, #28]
   1bd88:	ldr	r5, [r9, #28]
   1bd8c:	sub	r3, r3, r1
   1bd90:	cmp	r3, r2
   1bd94:	bhi	1bf3c <argp_failure@@Base+0xb90>
   1bd98:	tst	r8, #2
   1bd9c:	ldr	r6, [r7, #4]
   1bda0:	str	r5, [r7, #4]
   1bda4:	beq	1bf28 <argp_failure@@Base+0xb7c>
   1bda8:	ldr	r3, [sl, #4]
   1bdac:	cmp	r3, #0
   1bdb0:	bne	1c714 <argp_failure@@Base+0x1368>
   1bdb4:	mov	r3, #1
   1bdb8:	str	r7, [sp]
   1bdbc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1bdc0:	ldr	r0, [fp, #-108]	; 0xffffff94
   1bdc4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1bdc8:	bl	193f0 <argp_parse@@Base+0x26a0>
   1bdcc:	ldr	r1, [r7, #16]
   1bdd0:	mov	r5, r0
   1bdd4:	ldrd	r2, [r7, #24]
   1bdd8:	sub	r2, r3, r2
   1bddc:	cmp	r2, r1
   1bde0:	strls	r4, [r7, #12]
   1bde4:	bhi	1bef8 <argp_failure@@Base+0xb4c>
   1bde8:	ldr	r2, [r7, #32]
   1bdec:	str	r6, [r7, #4]
   1bdf0:	cmp	r2, r3
   1bdf4:	bhi	1be10 <argp_failure@@Base+0xa64>
   1bdf8:	mov	r1, #1
   1bdfc:	mov	r0, r7
   1be00:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1be04:	cmp	r0, #0
   1be08:	beq	1be20 <argp_failure@@Base+0xa74>
   1be0c:	ldr	r3, [r7, #28]
   1be10:	add	r1, r3, #1
   1be14:	mov	r2, #10
   1be18:	str	r1, [r7, #28]
   1be1c:	strb	r2, [r3]
   1be20:	cmp	r5, #0
   1be24:	mov	r4, #0
   1be28:	beq	1bf6c <argp_failure@@Base+0xbc0>
   1be2c:	ldr	r2, [r7, #16]
   1be30:	ldr	r1, [r7, #24]
   1be34:	ldr	r3, [r7, #28]
   1be38:	ldr	r5, [r9, #28]
   1be3c:	sub	r3, r3, r1
   1be40:	cmp	r3, r2
   1be44:	bls	1bd50 <argp_failure@@Base+0x9a4>
   1be48:	mov	r0, r7
   1be4c:	bl	1e254 <argp_error@@Base+0x15b0>
   1be50:	b	1bd50 <argp_failure@@Base+0x9a4>
   1be54:	mov	r1, #0
   1be58:	ldr	r0, [fp, #-108]	; 0xffffff94
   1be5c:	bl	18cf4 <argp_parse@@Base+0x1fa4>
   1be60:	ldr	r5, [r0]
   1be64:	mov	r3, r0
   1be68:	ldr	r2, [r0, #4]
   1be6c:	cmp	r2, #0
   1be70:	sub	r4, r2, #1
   1be74:	strd	r2, [fp, #-116]	; 0xffffff8c
   1be78:	str	r5, [fp, #-96]	; 0xffffffa0
   1be7c:	beq	1b644 <argp_failure@@Base+0x298>
   1be80:	movw	r6, #60324	; 0xeba4
   1be84:	movt	r6, #1
   1be88:	str	r4, [fp, #-120]	; 0xffffff88
   1be8c:	mov	sl, r4
   1be90:	ldr	r8, [r5]
   1be94:	ldr	r3, [r5, #4]
   1be98:	cmp	r3, #0
   1be9c:	sub	r4, r3, #1
   1bea0:	beq	1bee0 <argp_failure@@Base+0xb34>
   1bea4:	add	r8, r8, #24
   1bea8:	ldr	r0, [r8, #-24]	; 0xffffffe8
   1beac:	sub	r4, r4, #1
   1beb0:	cmp	r0, #0
   1beb4:	beq	1bed4 <argp_failure@@Base+0xb28>
   1beb8:	ldr	r3, [r8, #-12]
   1bebc:	mov	r1, r6
   1bec0:	tst	r3, #2
   1bec4:	bne	1bed4 <argp_failure@@Base+0xb28>
   1bec8:	bl	11778 <strcmp@plt>
   1becc:	cmp	r0, #0
   1bed0:	beq	1c588 <argp_failure@@Base+0x11dc>
   1bed4:	cmn	r4, #1
   1bed8:	add	r8, r8, #24
   1bedc:	bne	1bea8 <argp_failure@@Base+0xafc>
   1bee0:	sub	sl, sl, #1
   1bee4:	add	r5, r5, #28
   1bee8:	cmn	sl, #1
   1beec:	bne	1be90 <argp_failure@@Base+0xae4>
   1bef0:	ldr	r4, [fp, #-120]	; 0xffffff88
   1bef4:	b	1c5a8 <argp_failure@@Base+0x11fc>
   1bef8:	mov	r0, r7
   1befc:	bl	1e254 <argp_error@@Base+0x15b0>
   1bf00:	ldr	r1, [r7, #16]
   1bf04:	str	r4, [r7, #12]
   1bf08:	ldrd	r2, [r7, #24]
   1bf0c:	sub	r2, r3, r2
   1bf10:	cmp	r2, r1
   1bf14:	bls	1bde8 <argp_failure@@Base+0xa3c>
   1bf18:	mov	r0, r7
   1bf1c:	bl	1e254 <argp_error@@Base+0x15b0>
   1bf20:	ldr	r3, [r7, #28]
   1bf24:	b	1bde8 <argp_failure@@Base+0xa3c>
   1bf28:	mov	r1, r7
   1bf2c:	mov	r0, sl
   1bf30:	orr	r8, r8, #2
   1bf34:	bl	199d8 <argp_parse@@Base+0x2c88>
   1bf38:	b	1bdb4 <argp_failure@@Base+0xa08>
   1bf3c:	mov	r0, r7
   1bf40:	bl	1e254 <argp_error@@Base+0x15b0>
   1bf44:	b	1bd98 <argp_failure@@Base+0x9ec>
   1bf48:	mov	r2, #0
   1bf4c:	mov	r3, r4
   1bf50:	ldr	r0, [fp, #-108]	; 0xffffff94
   1bf54:	stm	sp, {r2, r7}
   1bf58:	mov	r2, #1
   1bf5c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1bf60:	bl	1a098 <argp_parse@@Base+0x3348>
   1bf64:	orr	r4, r4, r0
   1bf68:	b	1ba24 <argp_failure@@Base+0x678>
   1bf6c:	str	r8, [fp, #-104]	; 0xffffff98
   1bf70:	mov	r4, #1
   1bf74:	ldr	r3, [fp, #-104]	; 0xffffff98
   1bf78:	tst	r3, #16
   1bf7c:	beq	1b65c <argp_failure@@Base+0x2b0>
   1bf80:	b	1bc64 <argp_failure@@Base+0x8b8>
   1bf84:	ldr	r3, [r7, #28]
   1bf88:	ldr	r2, [r7, #32]
   1bf8c:	cmp	r3, r2
   1bf90:	bcs	1c968 <argp_failure@@Base+0x15bc>
   1bf94:	add	r1, r3, #1
   1bf98:	mov	r2, #10
   1bf9c:	str	r1, [r7, #28]
   1bfa0:	strb	r2, [r3]
   1bfa4:	ldr	r2, [r5]
   1bfa8:	b	1ba4c <argp_failure@@Base+0x6a0>
   1bfac:	tst	r8, #2
   1bfb0:	beq	1c428 <argp_failure@@Base+0x107c>
   1bfb4:	add	r4, r4, #1
   1bfb8:	b	1b7e0 <argp_failure@@Base+0x434>
   1bfbc:	cmp	r3, r2
   1bfc0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1bfc4:	ldr	r5, [r3, #12]
   1bfc8:	bhi	1c558 <argp_failure@@Base+0x11ac>
   1bfcc:	str	r5, [r7, #12]
   1bfd0:	ldr	sl, [r9, #4]
   1bfd4:	cmp	sl, #0
   1bfd8:	beq	1b8d8 <argp_failure@@Base+0x52c>
   1bfdc:	movw	r3, #65348	; 0xff44
   1bfe0:	movt	r3, #1
   1bfe4:	movw	r6, #65340	; 0xff3c
   1bfe8:	movt	r6, #1
   1bfec:	movw	r8, #65356	; 0xff4c
   1bff0:	movt	r8, #1
   1bff4:	str	r3, [fp, #-128]	; 0xffffff80
   1bff8:	add	r5, r4, #24
   1bffc:	b	1c00c <argp_failure@@Base+0xc60>
   1c000:	subs	sl, sl, #1
   1c004:	add	r5, r5, #24
   1c008:	beq	1b8d8 <argp_failure@@Base+0x52c>
   1c00c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1c010:	cmp	r3, #0
   1c014:	beq	1c000 <argp_failure@@Base+0xc54>
   1c018:	ldr	r3, [r5, #-12]
   1c01c:	tst	r3, #2
   1c020:	bne	1c000 <argp_failure@@Base+0xc54>
   1c024:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c028:	sub	r1, fp, #76	; 0x4c
   1c02c:	ldr	r0, [r3, #12]
   1c030:	bl	19e4c <argp_parse@@Base+0x30fc>
   1c034:	mov	r1, r6
   1c038:	mov	r0, r7
   1c03c:	ldr	r2, [r5, #-24]	; 0xffffffe8
   1c040:	bl	1e904 <argp_error@@Base+0x1c60>
   1c044:	ldr	r3, [r4, #8]
   1c048:	cmp	r3, #0
   1c04c:	beq	1c000 <argp_failure@@Base+0xc54>
   1c050:	ldr	ip, [r4, #12]
   1c054:	mov	r1, r8
   1c058:	mov	r2, r3
   1c05c:	mov	r0, r7
   1c060:	tst	ip, #1
   1c064:	ldrne	r1, [fp, #-128]	; 0xffffff80
   1c068:	bl	1e904 <argp_error@@Base+0x1c60>
   1c06c:	b	1c000 <argp_failure@@Base+0xc54>
   1c070:	ldr	r6, [r9, #20]
   1c074:	ldr	r5, [r4, #16]
   1c078:	cmp	r6, #0
   1c07c:	beq	1c420 <argp_failure@@Base+0x1074>
   1c080:	ldr	r3, [r6, #20]
   1c084:	cmp	r3, #0
   1c088:	beq	1c420 <argp_failure@@Base+0x1074>
   1c08c:	ldr	r4, [r4, #4]
   1c090:	mov	r0, r6
   1c094:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1c098:	bl	17c08 <argp_parse@@Base+0xeb8>
   1c09c:	mov	r2, r0
   1c0a0:	mov	r1, r5
   1c0a4:	ldr	r3, [r6, #20]
   1c0a8:	mov	r0, r4
   1c0ac:	blx	r3
   1c0b0:	mov	r4, r0
   1c0b4:	cmp	r4, #0
   1c0b8:	beq	1c1bc <argp_failure@@Base+0xe10>
   1c0bc:	ldrb	r3, [r4]
   1c0c0:	cmp	r3, #0
   1c0c4:	beq	1c1ac <argp_failure@@Base+0xe00>
   1c0c8:	ldr	r1, [r7, #16]
   1c0cc:	ldrd	r2, [r7, #24]
   1c0d0:	sub	r2, r3, r2
   1c0d4:	cmp	r2, r1
   1c0d8:	bhi	1c8bc <argp_failure@@Base+0x1510>
   1c0dc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1c0e0:	ldr	r8, [r7, #20]
   1c0e4:	ldr	r6, [r2, #20]
   1c0e8:	bic	r8, r8, r8, asr #31
   1c0ec:	mov	sl, r6
   1c0f0:	str	r6, [r7, #4]
   1c0f4:	add	r2, r6, #3
   1c0f8:	str	sl, [r7, #12]
   1c0fc:	cmp	r2, r8
   1c100:	bcc	1c89c <argp_failure@@Base+0x14f0>
   1c104:	cmp	r6, r8
   1c108:	bhi	1c828 <argp_failure@@Base+0x147c>
   1c10c:	ldr	r1, [r7, #32]
   1c110:	add	r2, r3, #3
   1c114:	cmp	r1, r2
   1c118:	bcs	1c134 <argp_failure@@Base+0xd88>
   1c11c:	mov	r1, #3
   1c120:	mov	r0, r7
   1c124:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1c128:	cmp	r0, #0
   1c12c:	beq	1c158 <argp_failure@@Base+0xdac>
   1c130:	ldr	r3, [r7, #28]
   1c134:	movw	r2, #65360	; 0xff50
   1c138:	movt	r2, #1
   1c13c:	ldrh	r1, [r2]
   1c140:	ldrb	r2, [r2, #2]
   1c144:	strh	r1, [r3]
   1c148:	strb	r2, [r3, #2]
   1c14c:	ldr	r3, [r7, #28]
   1c150:	add	r3, r3, #3
   1c154:	str	r3, [r7, #28]
   1c158:	mov	r0, r4
   1c15c:	bl	11a0c <strlen@plt>
   1c160:	subs	r6, r0, #0
   1c164:	beq	1c1ac <argp_failure@@Base+0xe00>
   1c168:	ldr	r0, [r7, #28]
   1c16c:	ldr	r2, [r7, #32]
   1c170:	add	r3, r0, r6
   1c174:	cmp	r2, r3
   1c178:	bcs	1c194 <argp_failure@@Base+0xde8>
   1c17c:	mov	r1, r6
   1c180:	mov	r0, r7
   1c184:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1c188:	cmp	r0, #0
   1c18c:	beq	1c1ac <argp_failure@@Base+0xe00>
   1c190:	ldr	r0, [r7, #28]
   1c194:	mov	r2, r6
   1c198:	mov	r1, r4
   1c19c:	bl	1182c <memcpy@plt>
   1c1a0:	ldr	r3, [r7, #28]
   1c1a4:	add	r6, r3, r6
   1c1a8:	str	r6, [r7, #28]
   1c1ac:	cmp	r5, r4
   1c1b0:	beq	1c1bc <argp_failure@@Base+0xe10>
   1c1b4:	mov	r0, r4
   1c1b8:	bl	17d88 <argp_parse@@Base+0x1038>
   1c1bc:	ldr	r1, [r7, #16]
   1c1c0:	ldrd	r2, [r7, #24]
   1c1c4:	sub	r2, r3, r2
   1c1c8:	cmp	r2, r1
   1c1cc:	bhi	1c548 <argp_failure@@Base+0x119c>
   1c1d0:	mov	r2, #0
   1c1d4:	str	r2, [r7, #4]
   1c1d8:	ldr	r2, [r7, #32]
   1c1dc:	cmp	r2, r3
   1c1e0:	bhi	1c1fc <argp_failure@@Base+0xe50>
   1c1e4:	mov	r1, #1
   1c1e8:	mov	r0, r7
   1c1ec:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1c1f0:	cmp	r0, #0
   1c1f4:	beq	1c20c <argp_failure@@Base+0xe60>
   1c1f8:	ldr	r3, [r7, #28]
   1c1fc:	add	r1, r3, #1
   1c200:	mov	r2, #10
   1c204:	str	r1, [r7, #28]
   1c208:	strb	r2, [r3]
   1c20c:	str	r9, [fp, #-88]	; 0xffffffa8
   1c210:	b	1b944 <argp_failure@@Base+0x598>
   1c214:	cmp	r0, #45	; 0x2d
   1c218:	cmpne	r0, #95	; 0x5f
   1c21c:	ubfx	r7, r3, #3, #1
   1c220:	moveq	r2, #1
   1c224:	movne	r2, #0
   1c228:	orrs	r7, r2, r7
   1c22c:	beq	1ca40 <argp_failure@@Base+0x1694>
   1c230:	mov	r4, r8
   1c234:	ldrb	r2, [r4, #1]!
   1c238:	lsl	r3, r2, #1
   1c23c:	cmp	r2, #45	; 0x2d
   1c240:	cmpne	r2, #95	; 0x5f
   1c244:	moveq	lr, #1
   1c248:	movne	lr, #0
   1c24c:	ldrh	r3, [r1, r3]
   1c250:	ubfx	ip, r3, #3, #1
   1c254:	orrs	ip, lr, ip
   1c258:	bne	1c234 <argp_failure@@Base+0xe88>
   1c25c:	tst	r3, #8192	; 0x2000
   1c260:	sub	r7, r4, r8
   1c264:	beq	1c27c <argp_failure@@Base+0xed0>
   1c268:	ldrb	r2, [r4, #1]!
   1c26c:	lsl	r3, r2, #1
   1c270:	ldrh	r3, [r1, r3]
   1c274:	tst	r3, #8192	; 0x2000
   1c278:	bne	1c268 <argp_failure@@Base+0xebc>
   1c27c:	cmp	r2, #44	; 0x2c
   1c280:	cmpne	r2, #0
   1c284:	beq	1c4e4 <argp_failure@@Base+0x1138>
   1c288:	cmp	r2, #61	; 0x3d
   1c28c:	beq	1c9ac <argp_failure@@Base+0x1600>
   1c290:	ands	r3, r3, #2048	; 0x800
   1c294:	streq	r3, [fp, #-112]	; 0xffffff90
   1c298:	streq	r3, [fp, #-96]	; 0xffffffa0
   1c29c:	bne	1c9dc <argp_failure@@Base+0x1630>
   1c2a0:	ldr	r0, [pc, #2292]	; 1cb9c <argp_failure@@Base+0x17f0>
   1c2a4:	bl	11a0c <strlen@plt>
   1c2a8:	cmp	r7, r0
   1c2ac:	beq	1c508 <argp_failure@@Base+0x115c>
   1c2b0:	ldr	r5, [pc, #2280]	; 1cba0 <argp_failure@@Base+0x17f4>
   1c2b4:	mov	r0, r5
   1c2b8:	bl	11a0c <strlen@plt>
   1c2bc:	cmp	r7, r0
   1c2c0:	beq	1c684 <argp_failure@@Base+0x12d8>
   1c2c4:	ldr	r5, [pc, #2264]	; 1cba4 <argp_failure@@Base+0x17f8>
   1c2c8:	mov	r0, r5
   1c2cc:	bl	11a0c <strlen@plt>
   1c2d0:	cmp	r7, r0
   1c2d4:	beq	1c6c0 <argp_failure@@Base+0x1314>
   1c2d8:	ldr	r5, [pc, #2248]	; 1cba8 <argp_failure@@Base+0x17fc>
   1c2dc:	mov	r0, r5
   1c2e0:	bl	11a0c <strlen@plt>
   1c2e4:	cmp	r7, r0
   1c2e8:	beq	1c6dc <argp_failure@@Base+0x1330>
   1c2ec:	ldr	r5, [pc, #2232]	; 1cbac <argp_failure@@Base+0x1800>
   1c2f0:	mov	r0, r5
   1c2f4:	bl	11a0c <strlen@plt>
   1c2f8:	cmp	r7, r0
   1c2fc:	beq	1c6f8 <argp_failure@@Base+0x134c>
   1c300:	ldr	r5, [pc, #2216]	; 1cbb0 <argp_failure@@Base+0x1804>
   1c304:	mov	r0, r5
   1c308:	bl	11a0c <strlen@plt>
   1c30c:	cmp	r7, r0
   1c310:	beq	1c76c <argp_failure@@Base+0x13c0>
   1c314:	ldr	r5, [pc, #2200]	; 1cbb4 <argp_failure@@Base+0x1808>
   1c318:	mov	r0, r5
   1c31c:	bl	11a0c <strlen@plt>
   1c320:	cmp	r7, r0
   1c324:	beq	1c788 <argp_failure@@Base+0x13dc>
   1c328:	ldr	r5, [pc, #2184]	; 1cbb8 <argp_failure@@Base+0x180c>
   1c32c:	mov	r0, r5
   1c330:	bl	11a0c <strlen@plt>
   1c334:	cmp	r7, r0
   1c338:	beq	1c7a4 <argp_failure@@Base+0x13f8>
   1c33c:	ldr	r5, [pc, #2168]	; 1cbbc <argp_failure@@Base+0x1810>
   1c340:	mov	r0, r5
   1c344:	bl	11a0c <strlen@plt>
   1c348:	cmp	r0, r7
   1c34c:	beq	1c7c0 <argp_failure@@Base+0x1414>
   1c350:	movw	r3, #65112	; 0xfe58
   1c354:	movt	r3, #1
   1c358:	mov	r2, #0
   1c35c:	mov	r1, r2
   1c360:	stm	sp, {r7, r8}
   1c364:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1c368:	bl	1b3ac <argp_failure@@Base>
   1c36c:	ldrb	r0, [r4]
   1c370:	cmp	r0, #44	; 0x2c
   1c374:	movne	r8, r4
   1c378:	bne	1c384 <argp_failure@@Base+0xfd8>
   1c37c:	ldrb	r0, [r4, #1]
   1c380:	add	r8, r4, #1
   1c384:	cmp	r0, #0
   1c388:	bne	1bb24 <argp_failure@@Base+0x778>
   1c38c:	b	1bb5c <argp_failure@@Base+0x7b0>
   1c390:	mov	r0, r7
   1c394:	bl	1e254 <argp_error@@Base+0x15b0>
   1c398:	b	1b8f0 <argp_failure@@Base+0x544>
   1c39c:	mov	r0, r7
   1c3a0:	bl	1e254 <argp_error@@Base+0x15b0>
   1c3a4:	b	1b77c <argp_failure@@Base+0x3d0>
   1c3a8:	mov	r0, r7
   1c3ac:	bl	1e254 <argp_error@@Base+0x15b0>
   1c3b0:	ldr	r2, [r7, #16]
   1c3b4:	ldr	r3, [r7, #24]
   1c3b8:	ldr	r1, [r7, #28]
   1c3bc:	sub	r3, r1, r3
   1c3c0:	b	1b6e8 <argp_failure@@Base+0x33c>
   1c3c4:	mov	r0, r7
   1c3c8:	bl	1e254 <argp_error@@Base+0x15b0>
   1c3cc:	ldr	r3, [fp, #-120]	; 0xffffff88
   1c3d0:	ldr	r2, [r7, #16]
   1c3d4:	ldr	r1, [r7, #24]
   1c3d8:	str	r3, [r7, #4]
   1c3dc:	ldr	r3, [r7, #28]
   1c3e0:	sub	r0, r3, r1
   1c3e4:	cmp	r0, r2
   1c3e8:	bls	1b964 <argp_failure@@Base+0x5b8>
   1c3ec:	mov	r0, r7
   1c3f0:	add	r9, r9, #28
   1c3f4:	bl	1e254 <argp_error@@Base+0x15b0>
   1c3f8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1c3fc:	subs	r3, r3, #1
   1c400:	str	r3, [fp, #-116]	; 0xffffff8c
   1c404:	ldr	r3, [fp, #-124]	; 0xffffff84
   1c408:	str	r3, [r7, #12]
   1c40c:	beq	1b980 <argp_failure@@Base+0x5d4>
   1c410:	ldr	r2, [r7, #16]
   1c414:	ldr	r1, [r7, #24]
   1c418:	ldr	r3, [r7, #28]
   1c41c:	b	1b6d4 <argp_failure@@Base+0x328>
   1c420:	mov	r4, r5
   1c424:	b	1c0b4 <argp_failure@@Base+0xd08>
   1c428:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c42c:	sub	r1, fp, #76	; 0x4c
   1c430:	ldr	r0, [r3, #8]
   1c434:	bl	19e4c <argp_parse@@Base+0x30fc>
   1c438:	ldr	r2, [r9, #28]
   1c43c:	ldr	r1, [r9, #32]
   1c440:	cmp	r2, r1
   1c444:	bcc	1c460 <argp_failure@@Base+0x10b4>
   1c448:	mov	r1, #1
   1c44c:	mov	r0, r9
   1c450:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1c454:	cmp	r0, #0
   1c458:	beq	1c470 <argp_failure@@Base+0x10c4>
   1c45c:	ldr	r2, [r9, #28]
   1c460:	add	r0, r2, #1
   1c464:	mov	r1, #45	; 0x2d
   1c468:	str	r0, [r9, #28]
   1c46c:	strb	r1, [r2]
   1c470:	ldr	r2, [r9, #28]
   1c474:	ldr	r1, [r9, #32]
   1c478:	ldrb	r6, [r4]
   1c47c:	cmp	r2, r1
   1c480:	bcc	1c49c <argp_failure@@Base+0x10f0>
   1c484:	mov	r1, #1
   1c488:	mov	r0, r9
   1c48c:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1c490:	cmp	r0, #0
   1c494:	beq	1c4a8 <argp_failure@@Base+0x10fc>
   1c498:	ldr	r2, [r9, #28]
   1c49c:	add	r1, r2, #1
   1c4a0:	str	r1, [r9, #28]
   1c4a4:	strb	r6, [r2]
   1c4a8:	ldr	r3, [fp, #-128]	; 0xffffff80
   1c4ac:	ldr	r2, [r7, #8]
   1c4b0:	cmp	r3, #0
   1c4b4:	beq	1c564 <argp_failure@@Base+0x11b8>
   1c4b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c4bc:	ldr	r1, [r3]
   1c4c0:	cmp	r1, #0
   1c4c4:	bne	1c564 <argp_failure@@Base+0x11b8>
   1c4c8:	cmp	r2, #0
   1c4cc:	movne	r2, #1
   1c4d0:	strne	r2, [fp, #-80]	; 0xffffffb0
   1c4d4:	b	1bfb4 <argp_failure@@Base+0xc08>
   1c4d8:	mov	r1, #1
   1c4dc:	str	r1, [fp, #-128]	; 0xffffff80
   1c4e0:	b	1b76c <argp_failure@@Base+0x3c0>
   1c4e4:	cmp	r0, #110	; 0x6e
   1c4e8:	beq	1c7f4 <argp_failure@@Base+0x1448>
   1c4ec:	mov	r3, #1
   1c4f0:	ldr	r0, [pc, #1700]	; 1cb9c <argp_failure@@Base+0x17f0>
   1c4f4:	str	r3, [fp, #-112]	; 0xffffff90
   1c4f8:	str	r3, [fp, #-96]	; 0xffffffa0
   1c4fc:	bl	11a0c <strlen@plt>
   1c500:	cmp	r7, r0
   1c504:	bne	1c2b0 <argp_failure@@Base+0xf04>
   1c508:	mov	r2, r7
   1c50c:	ldr	r1, [pc, #1672]	; 1cb9c <argp_failure@@Base+0x17f0>
   1c510:	mov	r0, r8
   1c514:	bl	11c04 <strncmp@plt>
   1c518:	cmp	r0, #0
   1c51c:	bne	1c2b0 <argp_failure@@Base+0xf04>
   1c520:	ldr	r5, [pc, #1652]	; 1cb9c <argp_failure@@Base+0x17f0>
   1c524:	sub	r2, fp, #36	; 0x24
   1c528:	ldrb	r3, [r5, #15]
   1c52c:	add	r3, r2, r3
   1c530:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c534:	str	r2, [r3, #-40]	; 0xffffffd8
   1c538:	b	1c36c <argp_failure@@Base+0xfc0>
   1c53c:	mov	r0, r7
   1c540:	bl	1e254 <argp_error@@Base+0x15b0>
   1c544:	b	1b824 <argp_failure@@Base+0x478>
   1c548:	mov	r0, r7
   1c54c:	bl	1e254 <argp_error@@Base+0x15b0>
   1c550:	ldr	r3, [r7, #28]
   1c554:	b	1c1d0 <argp_failure@@Base+0xe24>
   1c558:	mov	r0, r7
   1c55c:	bl	1e254 <argp_error@@Base+0x15b0>
   1c560:	b	1bfcc <argp_failure@@Base+0xc20>
   1c564:	cmp	r2, #0
   1c568:	beq	1bfb4 <argp_failure@@Base+0xc08>
   1c56c:	ldr	r1, [r7, #12]
   1c570:	mov	r0, r9
   1c574:	tst	r1, #1
   1c578:	ldrne	r1, [fp, #-144]	; 0xffffff70
   1c57c:	ldreq	r1, [fp, #-140]	; 0xffffff74
   1c580:	bl	1e904 <argp_error@@Base+0x1c60>
   1c584:	b	1bfb4 <argp_failure@@Base+0xc08>
   1c588:	mvn	r3, #0
   1c58c:	str	r3, [r5, #12]
   1c590:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c594:	ldr	r3, [r3, #4]
   1c598:	cmp	r3, #0
   1c59c:	sub	r4, r3, #1
   1c5a0:	str	r3, [fp, #-116]	; 0xffffff8c
   1c5a4:	beq	1b644 <argp_failure@@Base+0x298>
   1c5a8:	ldr	r5, [fp, #-96]	; 0xffffffa0
   1c5ac:	movw	r6, #63332	; 0xf764
   1c5b0:	movt	r6, #1
   1c5b4:	ldm	r5, {r8, sl}
   1c5b8:	cmp	sl, #0
   1c5bc:	sub	sl, sl, #1
   1c5c0:	beq	1c600 <argp_failure@@Base+0x1254>
   1c5c4:	add	r8, r8, #24
   1c5c8:	ldr	r0, [r8, #-24]	; 0xffffffe8
   1c5cc:	sub	sl, sl, #1
   1c5d0:	cmp	r0, #0
   1c5d4:	beq	1c5f4 <argp_failure@@Base+0x1248>
   1c5d8:	ldr	r3, [r8, #-12]
   1c5dc:	mov	r1, r6
   1c5e0:	tst	r3, #2
   1c5e4:	bne	1c5f4 <argp_failure@@Base+0x1248>
   1c5e8:	bl	11778 <strcmp@plt>
   1c5ec:	cmp	r0, #0
   1c5f0:	beq	1c618 <argp_failure@@Base+0x126c>
   1c5f4:	cmn	sl, #1
   1c5f8:	add	r8, r8, #24
   1c5fc:	bne	1c5c8 <argp_failure@@Base+0x121c>
   1c600:	cmp	r4, #0
   1c604:	add	r5, r5, #28
   1c608:	sub	r4, r4, #1
   1c60c:	bne	1c5b4 <argp_failure@@Base+0x1208>
   1c610:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1c614:	b	1c630 <argp_failure@@Base+0x1284>
   1c618:	mvn	r3, #0
   1c61c:	str	r3, [r5, #12]
   1c620:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c624:	ldr	r1, [r3, #4]
   1c628:	cmp	r1, #0
   1c62c:	beq	1b644 <argp_failure@@Base+0x298>
   1c630:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1c634:	mov	r3, #0
   1c638:	str	r3, [r2, #24]
   1c63c:	add	r3, r3, #1
   1c640:	add	r2, r2, #28
   1c644:	cmp	r1, r3
   1c648:	bhi	1c638 <argp_failure@@Base+0x128c>
   1c64c:	movw	r3, #42604	; 0xa66c
   1c650:	movt	r3, #1
   1c654:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1c658:	mov	r2, #28
   1c65c:	bl	11bb0 <qsort@plt>
   1c660:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c664:	ands	r4, r3, #3
   1c668:	beq	1b650 <argp_failure@@Base+0x2a4>
   1c66c:	b	1bc98 <argp_failure@@Base+0x8ec>
   1c670:	sub	r2, fp, #76	; 0x4c
   1c674:	ldr	r0, [r4, #16]
   1c678:	ldr	r1, [r9, #20]
   1c67c:	bl	196e4 <argp_parse@@Base+0x2994>
   1c680:	b	1c20c <argp_failure@@Base+0xe60>
   1c684:	mov	r2, r7
   1c688:	mov	r1, r5
   1c68c:	mov	r0, r8
   1c690:	bl	11c04 <strncmp@plt>
   1c694:	cmp	r0, #0
   1c698:	bne	1c2c4 <argp_failure@@Base+0xf18>
   1c69c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c6a0:	cmp	r3, #0
   1c6a4:	beq	1c524 <argp_failure@@Base+0x1178>
   1c6a8:	ldrb	r2, [r5, #14]
   1c6ac:	cmp	r2, #0
   1c6b0:	movweq	r3, #65064	; 0xfe28
   1c6b4:	movteq	r3, #1
   1c6b8:	bne	1c524 <argp_failure@@Base+0x1178>
   1c6bc:	b	1c35c <argp_failure@@Base+0xfb0>
   1c6c0:	mov	r2, r7
   1c6c4:	mov	r1, r5
   1c6c8:	mov	r0, r8
   1c6cc:	bl	11c04 <strncmp@plt>
   1c6d0:	cmp	r0, #0
   1c6d4:	bne	1c2d8 <argp_failure@@Base+0xf2c>
   1c6d8:	b	1c69c <argp_failure@@Base+0x12f0>
   1c6dc:	mov	r2, r7
   1c6e0:	mov	r1, r5
   1c6e4:	mov	r0, r8
   1c6e8:	bl	11c04 <strncmp@plt>
   1c6ec:	cmp	r0, #0
   1c6f0:	bne	1c2ec <argp_failure@@Base+0xf40>
   1c6f4:	b	1c69c <argp_failure@@Base+0x12f0>
   1c6f8:	mov	r2, r7
   1c6fc:	mov	r1, r5
   1c700:	mov	r0, r8
   1c704:	bl	11c04 <strncmp@plt>
   1c708:	cmp	r0, #0
   1c70c:	bne	1c300 <argp_failure@@Base+0xf54>
   1c710:	b	1c69c <argp_failure@@Base+0x12f0>
   1c714:	ldr	r3, [r7, #28]
   1c718:	ldr	r1, [r7, #32]
   1c71c:	add	r2, r3, #12
   1c720:	cmp	r1, r2
   1c724:	bcs	1c740 <argp_failure@@Base+0x1394>
   1c728:	mov	r1, #12
   1c72c:	mov	r0, r7
   1c730:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1c734:	cmp	r0, #0
   1c738:	beq	1bdb4 <argp_failure@@Base+0xa08>
   1c73c:	ldr	r3, [r7, #28]
   1c740:	movw	r2, #65268	; 0xfef4
   1c744:	movt	r2, #1
   1c748:	ldrd	r0, [r2]
   1c74c:	ldr	r2, [r2, #8]
   1c750:	str	r0, [r3]
   1c754:	str	r1, [r3, #4]
   1c758:	str	r2, [r3, #8]
   1c75c:	ldr	r3, [r7, #28]
   1c760:	add	r3, r3, #12
   1c764:	str	r3, [r7, #28]
   1c768:	b	1bdb4 <argp_failure@@Base+0xa08>
   1c76c:	mov	r2, r7
   1c770:	mov	r1, r5
   1c774:	mov	r0, r8
   1c778:	bl	11c04 <strncmp@plt>
   1c77c:	cmp	r0, #0
   1c780:	bne	1c314 <argp_failure@@Base+0xf68>
   1c784:	b	1c69c <argp_failure@@Base+0x12f0>
   1c788:	mov	r2, r7
   1c78c:	mov	r1, r5
   1c790:	mov	r0, r8
   1c794:	bl	11c04 <strncmp@plt>
   1c798:	cmp	r0, #0
   1c79c:	bne	1c328 <argp_failure@@Base+0xf7c>
   1c7a0:	b	1c69c <argp_failure@@Base+0x12f0>
   1c7a4:	mov	r2, r7
   1c7a8:	mov	r1, r5
   1c7ac:	mov	r0, r8
   1c7b0:	bl	11c04 <strncmp@plt>
   1c7b4:	cmp	r0, #0
   1c7b8:	bne	1c33c <argp_failure@@Base+0xf90>
   1c7bc:	b	1c69c <argp_failure@@Base+0x12f0>
   1c7c0:	mov	r2, r7
   1c7c4:	mov	r1, r5
   1c7c8:	mov	r0, r8
   1c7cc:	bl	11c04 <strncmp@plt>
   1c7d0:	cmp	r0, #0
   1c7d4:	bne	1c350 <argp_failure@@Base+0xfa4>
   1c7d8:	b	1c69c <argp_failure@@Base+0x12f0>
   1c7dc:	ldr	r4, [fp, #-112]	; 0xffffff90
   1c7e0:	ldr	r0, [r4]
   1c7e4:	bl	17d88 <argp_parse@@Base+0x1038>
   1c7e8:	ldr	r0, [r4, #8]
   1c7ec:	bl	17d88 <argp_parse@@Base+0x1038>
   1c7f0:	b	1ba9c <argp_failure@@Base+0x6f0>
   1c7f4:	ldrb	r3, [r8, #1]
   1c7f8:	cmp	r3, #111	; 0x6f
   1c7fc:	bne	1c4ec <argp_failure@@Base+0x1140>
   1c800:	ldrb	r3, [r8, #2]
   1c804:	cmp	r3, #45	; 0x2d
   1c808:	bne	1c4ec <argp_failure@@Base+0x1140>
   1c80c:	mov	r3, #0
   1c810:	add	r8, r8, #3
   1c814:	sub	r7, r7, #3
   1c818:	str	r3, [fp, #-112]	; 0xffffff90
   1c81c:	mov	r3, #1
   1c820:	str	r3, [fp, #-96]	; 0xffffffa0
   1c824:	b	1c2a0 <argp_failure@@Base+0xef4>
   1c828:	ldr	r1, [r7, #16]
   1c82c:	ldr	r2, [r7, #24]
   1c830:	sub	r3, r3, r2
   1c834:	cmp	r3, r1
   1c838:	bhi	1c9a0 <argp_failure@@Base+0x15f4>
   1c83c:	ldr	r3, [r7, #20]
   1c840:	cmp	r3, #0
   1c844:	subge	r6, r6, r3
   1c848:	cmp	r6, #0
   1c84c:	sub	r6, r6, #1
   1c850:	ble	1c158 <argp_failure@@Base+0xdac>
   1c854:	mov	r8, #32
   1c858:	ldr	r3, [r7, #28]
   1c85c:	mov	r1, #1
   1c860:	mov	r0, r7
   1c864:	sub	r6, r6, #1
   1c868:	ldr	r2, [r7, #32]
   1c86c:	cmp	r3, r2
   1c870:	bcc	1c884 <argp_failure@@Base+0x14d8>
   1c874:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1c878:	cmp	r0, #0
   1c87c:	beq	1c890 <argp_failure@@Base+0x14e4>
   1c880:	ldr	r3, [r7, #28]
   1c884:	add	r2, r3, #1
   1c888:	str	r2, [r7, #28]
   1c88c:	strb	r8, [r3]
   1c890:	cmn	r6, #1
   1c894:	bne	1c858 <argp_failure@@Base+0x14ac>
   1c898:	b	1c158 <argp_failure@@Base+0xdac>
   1c89c:	ldr	r2, [r7, #32]
   1c8a0:	cmp	r2, r3
   1c8a4:	bls	1c94c <argp_failure@@Base+0x15a0>
   1c8a8:	add	r1, r3, #1
   1c8ac:	mov	r2, #10
   1c8b0:	str	r1, [r7, #28]
   1c8b4:	strb	r2, [r3]
   1c8b8:	b	1c158 <argp_failure@@Base+0xdac>
   1c8bc:	mov	r0, r7
   1c8c0:	bl	1e254 <argp_error@@Base+0x15b0>
   1c8c4:	ldr	r1, [r7, #16]
   1c8c8:	ldrd	r2, [r7, #24]
   1c8cc:	ldr	sl, [fp, #-96]	; 0xffffffa0
   1c8d0:	ldr	r8, [r7, #20]
   1c8d4:	sub	r2, r3, r2
   1c8d8:	cmp	r2, r1
   1c8dc:	ldr	r6, [sl, #20]
   1c8e0:	bic	r8, r8, r8, asr #31
   1c8e4:	bls	1c0ec <argp_failure@@Base+0xd40>
   1c8e8:	mov	r0, r7
   1c8ec:	bl	1e254 <argp_error@@Base+0x15b0>
   1c8f0:	ldr	r1, [r7, #16]
   1c8f4:	str	r6, [r7, #4]
   1c8f8:	mov	r6, sl
   1c8fc:	ldrd	r2, [r7, #24]
   1c900:	ldr	sl, [sl, #20]
   1c904:	sub	r2, r3, r2
   1c908:	cmp	r2, r1
   1c90c:	bls	1cb94 <argp_failure@@Base+0x17e8>
   1c910:	mov	r0, r7
   1c914:	bl	1e254 <argp_error@@Base+0x15b0>
   1c918:	ldr	r6, [r6, #20]
   1c91c:	ldr	r3, [r7, #28]
   1c920:	b	1c0f4 <argp_failure@@Base+0xd48>
   1c924:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1c928:	bl	118f8 <funlockfile@plt>
   1c92c:	b	1baac <argp_failure@@Base+0x700>
   1c930:	movw	r3, #65152	; 0xfe80
   1c934:	movt	r3, #1
   1c938:	str	r8, [sp]
   1c93c:	mov	r1, r2
   1c940:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1c944:	bl	1b3ac <argp_failure@@Base>
   1c948:	b	1bb5c <argp_failure@@Base+0x7b0>
   1c94c:	mov	r1, #1
   1c950:	mov	r0, r7
   1c954:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1c958:	cmp	r0, #0
   1c95c:	beq	1c158 <argp_failure@@Base+0xdac>
   1c960:	ldr	r3, [r7, #28]
   1c964:	b	1c8a8 <argp_failure@@Base+0x14fc>
   1c968:	mov	r1, #1
   1c96c:	mov	r0, r7
   1c970:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1c974:	cmp	r0, #0
   1c978:	ldrne	r3, [r7, #28]
   1c97c:	bne	1bf94 <argp_failure@@Base+0xbe8>
   1c980:	b	1bfa4 <argp_failure@@Base+0xbf8>
   1c984:	mov	r1, #1
   1c988:	mov	r0, r7
   1c98c:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1c990:	cmp	r0, #0
   1c994:	ldrne	r3, [r7, #28]
   1c998:	bne	1bc1c <argp_failure@@Base+0x870>
   1c99c:	b	1bc2c <argp_failure@@Base+0x880>
   1c9a0:	mov	r0, r7
   1c9a4:	bl	1e254 <argp_error@@Base+0x15b0>
   1c9a8:	b	1c83c <argp_failure@@Base+0x1490>
   1c9ac:	ldrb	r3, [r4, #1]
   1c9b0:	add	r4, r4, #1
   1c9b4:	lsl	r3, r3, #1
   1c9b8:	ldrh	r3, [r1, r3]
   1c9bc:	tst	r3, #8192	; 0x2000
   1c9c0:	beq	1c290 <argp_failure@@Base+0xee4>
   1c9c4:	ldrb	r3, [r4, #1]!
   1c9c8:	lsl	r3, r3, #1
   1c9cc:	ldrh	r3, [r1, r3]
   1c9d0:	tst	r3, #8192	; 0x2000
   1c9d4:	bne	1c9c4 <argp_failure@@Base+0x1618>
   1c9d8:	b	1c290 <argp_failure@@Base+0xee4>
   1c9dc:	mov	r2, #10
   1c9e0:	mov	r1, #0
   1c9e4:	mov	r0, r4
   1c9e8:	bl	11784 <strtol@plt>
   1c9ec:	ldrb	r3, [r4]
   1c9f0:	ldr	r2, [r6]
   1c9f4:	lsl	r3, r3, #1
   1c9f8:	ldrh	r3, [r2, r3]
   1c9fc:	str	r0, [fp, #-112]	; 0xffffff90
   1ca00:	tst	r3, #2048	; 0x800
   1ca04:	beq	1ca1c <argp_failure@@Base+0x1670>
   1ca08:	ldrb	r3, [r4, #1]!
   1ca0c:	lsl	r3, r3, #1
   1ca10:	ldrh	r3, [r2, r3]
   1ca14:	tst	r3, #2048	; 0x800
   1ca18:	bne	1ca08 <argp_failure@@Base+0x165c>
   1ca1c:	ands	r3, r3, #8192	; 0x2000
   1ca20:	beq	1ca38 <argp_failure@@Base+0x168c>
   1ca24:	ldrb	r3, [r4, #1]!
   1ca28:	lsl	r3, r3, #1
   1ca2c:	ldrh	r3, [r2, r3]
   1ca30:	ands	r3, r3, #8192	; 0x2000
   1ca34:	bne	1ca24 <argp_failure@@Base+0x1678>
   1ca38:	str	r3, [fp, #-96]	; 0xffffffa0
   1ca3c:	b	1c2a0 <argp_failure@@Base+0xef4>
   1ca40:	mov	r2, r0
   1ca44:	mov	r4, r8
   1ca48:	b	1c27c <argp_failure@@Base+0xed0>
   1ca4c:	movw	r5, #64932	; 0xfda4
   1ca50:	movt	r5, #1
   1ca54:	mov	r4, r1
   1ca58:	ldr	r3, [r7, #28]
   1ca5c:	ldr	r2, [r7, #32]
   1ca60:	cmp	r3, r2
   1ca64:	bcc	1ca80 <argp_failure@@Base+0x16d4>
   1ca68:	mov	r1, #1
   1ca6c:	mov	r0, r7
   1ca70:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1ca74:	cmp	r0, #0
   1ca78:	beq	1ca90 <argp_failure@@Base+0x16e4>
   1ca7c:	ldr	r3, [r7, #28]
   1ca80:	add	r1, r3, #1
   1ca84:	mov	r2, #10
   1ca88:	str	r1, [r7, #28]
   1ca8c:	strb	r2, [r3]
   1ca90:	mov	r0, r5
   1ca94:	bl	11a0c <strlen@plt>
   1ca98:	subs	r6, r0, #0
   1ca9c:	ldr	r0, [r7, #28]
   1caa0:	ldr	r3, [r7, #32]
   1caa4:	bne	1cb4c <argp_failure@@Base+0x17a0>
   1caa8:	cmp	r0, r3
   1caac:	bcc	1cac8 <argp_failure@@Base+0x171c>
   1cab0:	mov	r1, #1
   1cab4:	mov	r0, r7
   1cab8:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1cabc:	cmp	r0, #0
   1cac0:	beq	1ba04 <argp_failure@@Base+0x658>
   1cac4:	ldr	r0, [r7, #28]
   1cac8:	add	r2, r0, #1
   1cacc:	mov	r3, #10
   1cad0:	str	r2, [r7, #28]
   1cad4:	strb	r3, [r0]
   1cad8:	b	1ba04 <argp_failure@@Base+0x658>
   1cadc:	movw	r5, #64932	; 0xfda4
   1cae0:	movt	r5, #1
   1cae4:	b	1ca58 <argp_failure@@Base+0x16ac>
   1cae8:	ldr	r3, [pc, #180]	; 1cba4 <argp_failure@@Base+0x17f8>
   1caec:	movw	r0, #65236	; 0xfed4
   1caf0:	movt	r0, #1
   1caf4:	mov	r2, #0
   1caf8:	mov	r1, r2
   1cafc:	stm	sp, {r0, r3}
   1cb00:	movw	r3, #65184	; 0xfea0
   1cb04:	movt	r3, #1
   1cb08:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1cb0c:	bl	1b3ac <argp_failure@@Base>
   1cb10:	b	1b618 <argp_failure@@Base+0x26c>
   1cb14:	ldr	r3, [pc, #140]	; 1cba8 <argp_failure@@Base+0x17fc>
   1cb18:	b	1caec <argp_failure@@Base+0x1740>
   1cb1c:	ldr	r3, [pc, #136]	; 1cbac <argp_failure@@Base+0x1800>
   1cb20:	b	1caec <argp_failure@@Base+0x1740>
   1cb24:	ldr	r3, [pc, #132]	; 1cbb0 <argp_failure@@Base+0x1804>
   1cb28:	b	1caec <argp_failure@@Base+0x1740>
   1cb2c:	ldr	r3, [pc, #128]	; 1cbb4 <argp_failure@@Base+0x1808>
   1cb30:	b	1caec <argp_failure@@Base+0x1740>
   1cb34:	ldr	r3, [pc, #124]	; 1cbb8 <argp_failure@@Base+0x180c>
   1cb38:	b	1caec <argp_failure@@Base+0x1740>
   1cb3c:	mov	r4, r5
   1cb40:	movw	r5, #64932	; 0xfda4
   1cb44:	movt	r5, #1
   1cb48:	b	1ca58 <argp_failure@@Base+0x16ac>
   1cb4c:	add	r2, r0, r6
   1cb50:	cmp	r3, r2
   1cb54:	bcs	1cb74 <argp_failure@@Base+0x17c8>
   1cb58:	mov	r1, r6
   1cb5c:	mov	r0, r7
   1cb60:	bl	1e8e4 <argp_error@@Base+0x1c40>
   1cb64:	cmp	r0, #0
   1cb68:	ldr	r0, [r7, #28]
   1cb6c:	ldreq	r3, [r7, #32]
   1cb70:	beq	1caa8 <argp_failure@@Base+0x16fc>
   1cb74:	mov	r2, r6
   1cb78:	mov	r1, r5
   1cb7c:	bl	1182c <memcpy@plt>
   1cb80:	ldr	r0, [r7, #28]
   1cb84:	ldr	r3, [r7, #32]
   1cb88:	add	r0, r0, r6
   1cb8c:	str	r0, [r7, #28]
   1cb90:	b	1caa8 <argp_failure@@Base+0x16fc>
   1cb94:	mov	r6, sl
   1cb98:	b	1c0f4 <argp_failure@@Base+0xd48>
   1cb9c:	andeq	pc, r1, r4, ror #23
   1cba0:	strdeq	pc, [r1], -r4
   1cba4:	andeq	pc, r1, r4, lsl #24
   1cba8:	andeq	pc, r1, r4, lsl ip	; <UNPREDICTABLE>
   1cbac:	andeq	pc, r1, r4, lsr #24
   1cbb0:	andeq	pc, r1, r4, lsr ip	; <UNPREDICTABLE>
   1cbb4:	andeq	pc, r1, r4, asr #24
   1cbb8:	andeq	pc, r1, r4, asr ip	; <UNPREDICTABLE>
   1cbbc:	andeq	pc, r1, r4, ror #24

0001cbc0 <argp_help@@Base>:
   1cbc0:	push	{lr}		; (str lr, [sp, #-4]!)
   1cbc4:	sub	sp, sp, #12
   1cbc8:	str	r3, [sp]
   1cbcc:	mov	r3, r2
   1cbd0:	mov	r2, r1
   1cbd4:	mov	r1, #0
   1cbd8:	bl	1b5c8 <argp_failure@@Base+0x21c>
   1cbdc:	add	sp, sp, #12
   1cbe0:	pop	{pc}		; (ldr pc, [sp], #4)

0001cbe4 <argp_state_help@@Base>:
   1cbe4:	strd	r4, [sp, #-12]!
   1cbe8:	subs	r4, r0, #0
   1cbec:	mov	r5, r2
   1cbf0:	str	lr, [sp, #8]
   1cbf4:	sub	sp, sp, #12
   1cbf8:	beq	1cc68 <argp_state_help@@Base+0x84>
   1cbfc:	ldr	r3, [r4, #16]
   1cc00:	adds	r2, r1, #0
   1cc04:	movne	r2, #1
   1cc08:	eor	r0, r3, #2
   1cc0c:	ands	r2, r2, r0, lsr #1
   1cc10:	bne	1cc24 <argp_state_help@@Base+0x40>
   1cc14:	add	sp, sp, #12
   1cc18:	ldrd	r4, [sp]
   1cc1c:	add	sp, sp, #8
   1cc20:	pop	{pc}		; (ldr pc, [sp], #4)
   1cc24:	ldr	r0, [r4, #40]	; 0x28
   1cc28:	tst	r3, #64	; 0x40
   1cc2c:	mov	r2, r1
   1cc30:	orrne	r5, r5, #128	; 0x80
   1cc34:	mov	r1, r4
   1cc38:	mov	r3, r5
   1cc3c:	str	r0, [sp]
   1cc40:	ldr	r0, [r4]
   1cc44:	bl	1b5c8 <argp_failure@@Base+0x21c>
   1cc48:	ldr	r3, [r4, #16]
   1cc4c:	tst	r3, #32
   1cc50:	bne	1cc14 <argp_state_help@@Base+0x30>
   1cc54:	ands	r0, r5, #256	; 0x100
   1cc58:	bne	1cc94 <argp_state_help@@Base+0xb0>
   1cc5c:	tst	r5, #512	; 0x200
   1cc60:	beq	1cc14 <argp_state_help@@Base+0x30>
   1cc64:	bl	119f4 <exit@plt>
   1cc68:	cmp	r1, #0
   1cc6c:	beq	1cc14 <argp_state_help@@Base+0x30>
   1cc70:	movw	r3, #5040	; 0x13b0
   1cc74:	movt	r3, #3
   1cc78:	ldr	ip, [r3]
   1cc7c:	mov	r2, r1
   1cc80:	mov	r3, r5
   1cc84:	mov	r1, r4
   1cc88:	str	ip, [sp]
   1cc8c:	bl	1b5c8 <argp_failure@@Base+0x21c>
   1cc90:	b	1cc54 <argp_state_help@@Base+0x70>
   1cc94:	movw	r3, #5032	; 0x13a8
   1cc98:	movt	r3, #3
   1cc9c:	ldr	r0, [r3]
   1cca0:	bl	119f4 <exit@plt>

0001cca4 <argp_error@@Base>:
   1cca4:	push	{r1, r2, r3}
   1cca8:	strd	r4, [sp, #-12]!
   1ccac:	subs	r5, r0, #0
   1ccb0:	str	lr, [sp, #8]
   1ccb4:	sub	sp, sp, #8
   1ccb8:	beq	1cd90 <argp_error@@Base+0xec>
   1ccbc:	ldr	r3, [r5, #16]
   1ccc0:	tst	r3, #2
   1ccc4:	bne	1cd78 <argp_error@@Base+0xd4>
   1ccc8:	ldr	r4, [r5, #44]	; 0x2c
   1cccc:	cmp	r4, #0
   1ccd0:	beq	1cd78 <argp_error@@Base+0xd4>
   1ccd4:	mov	r0, r4
   1ccd8:	bl	11b8c <flockfile@plt>
   1ccdc:	ldr	r0, [r5, #40]	; 0x28
   1cce0:	add	r3, sp, #24
   1cce4:	str	r3, [sp, #4]
   1cce8:	mov	r1, r4
   1ccec:	bl	11754 <fputs_unlocked@plt>
   1ccf0:	ldr	r3, [r4, #20]
   1ccf4:	ldr	r2, [r4, #24]
   1ccf8:	cmp	r3, r2
   1ccfc:	addcc	r1, r3, #1
   1cd00:	movcc	r2, #58	; 0x3a
   1cd04:	strcc	r1, [r4, #20]
   1cd08:	strbcc	r2, [r3]
   1cd0c:	bcs	1cdd4 <argp_error@@Base+0x130>
   1cd10:	ldr	r3, [r4, #20]
   1cd14:	ldr	r2, [r4, #24]
   1cd18:	cmp	r3, r2
   1cd1c:	addcc	r1, r3, #1
   1cd20:	movcc	r2, #32
   1cd24:	strcc	r1, [r4, #20]
   1cd28:	strbcc	r2, [r3]
   1cd2c:	bcs	1cde4 <argp_error@@Base+0x140>
   1cd30:	mov	r0, r4
   1cd34:	ldr	r2, [sp, #4]
   1cd38:	ldr	r1, [sp, #20]
   1cd3c:	bl	11b2c <vfprintf@plt>
   1cd40:	ldr	r3, [r4, #20]
   1cd44:	ldr	r2, [r4, #24]
   1cd48:	cmp	r3, r2
   1cd4c:	addcc	r1, r3, #1
   1cd50:	movcc	r2, #10
   1cd54:	strcc	r1, [r4, #20]
   1cd58:	strbcc	r2, [r3]
   1cd5c:	bcs	1cdc4 <argp_error@@Base+0x120>
   1cd60:	mov	r0, r5
   1cd64:	mov	r2, #260	; 0x104
   1cd68:	mov	r1, r4
   1cd6c:	bl	1cbe4 <argp_state_help@@Base>
   1cd70:	mov	r0, r4
   1cd74:	bl	118f8 <funlockfile@plt>
   1cd78:	add	sp, sp, #8
   1cd7c:	ldrd	r4, [sp]
   1cd80:	ldr	lr, [sp, #8]
   1cd84:	add	sp, sp, #12
   1cd88:	add	sp, sp, #12
   1cd8c:	bx	lr
   1cd90:	movw	r3, #5048	; 0x13b8
   1cd94:	movt	r3, #3
   1cd98:	ldr	r4, [r3]
   1cd9c:	cmp	r4, #0
   1cda0:	beq	1cd78 <argp_error@@Base+0xd4>
   1cda4:	mov	r0, r4
   1cda8:	bl	11b8c <flockfile@plt>
   1cdac:	add	r2, sp, #24
   1cdb0:	movw	r3, #5040	; 0x13b0
   1cdb4:	movt	r3, #3
   1cdb8:	str	r2, [sp, #4]
   1cdbc:	ldr	r0, [r3]
   1cdc0:	b	1cce8 <argp_error@@Base+0x44>
   1cdc4:	mov	r1, #10
   1cdc8:	mov	r0, r4
   1cdcc:	bl	11ae4 <__overflow@plt>
   1cdd0:	b	1cd60 <argp_error@@Base+0xbc>
   1cdd4:	mov	r1, #58	; 0x3a
   1cdd8:	mov	r0, r4
   1cddc:	bl	11ae4 <__overflow@plt>
   1cde0:	b	1cd10 <argp_error@@Base+0x6c>
   1cde4:	mov	r1, #32
   1cde8:	mov	r0, r4
   1cdec:	bl	11ae4 <__overflow@plt>
   1cdf0:	b	1cd30 <argp_error@@Base+0x8c>
   1cdf4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1cdf8:	ldr	r2, [r1]
   1cdfc:	ldr	ip, [r1, #32]
   1ce00:	strd	r6, [sp, #8]
   1ce04:	strd	r8, [sp, #16]
   1ce08:	strd	sl, [sp, #24]
   1ce0c:	str	lr, [sp, #32]
   1ce10:	sub	sp, sp, #36	; 0x24
   1ce14:	str	r2, [sp, #24]
   1ce18:	str	r1, [sp, #28]
   1ce1c:	ldr	r1, [r1, #28]
   1ce20:	cmp	r1, ip
   1ce24:	cmplt	ip, r2
   1ce28:	str	r1, [sp, #20]
   1ce2c:	bge	1cf2c <argp_error@@Base+0x288>
   1ce30:	mov	r3, r1
   1ce34:	lsl	r1, ip, #2
   1ce38:	mov	lr, r2
   1ce3c:	mov	r2, r1
   1ce40:	add	r2, r2, #8
   1ce44:	str	r1, [sp, #8]
   1ce48:	add	r1, r0, r1
   1ce4c:	str	r1, [sp, #4]
   1ce50:	str	r2, [sp, #12]
   1ce54:	sub	r2, r1, #8
   1ce58:	str	r2, [sp, #16]
   1ce5c:	sub	r1, lr, ip
   1ce60:	sub	r8, ip, r3
   1ce64:	cmp	r1, r8
   1ce68:	ble	1cf64 <argp_error@@Base+0x2c0>
   1ce6c:	lsl	r2, r3, #2
   1ce70:	sub	lr, lr, r8
   1ce74:	sub	r5, r8, #1
   1ce78:	add	r1, lr, #2
   1ce7c:	lsl	r6, lr, #2
   1ce80:	cmp	r2, r1, lsl #2
   1ce84:	add	r7, r2, #8
   1ce88:	add	r2, r0, r2
   1ce8c:	add	r1, r0, r6
   1ce90:	movge	r4, #1
   1ce94:	movlt	r4, #0
   1ce98:	cmp	r6, r7
   1ce9c:	orrge	r4, r4, #1
   1cea0:	orr	r9, r1, r2
   1cea4:	cmp	r5, #3
   1cea8:	movls	r4, #0
   1ceac:	andhi	r4, r4, #1
   1ceb0:	tst	r9, #7
   1ceb4:	movne	r4, #0
   1ceb8:	cmp	r4, #0
   1cebc:	beq	1d038 <argp_error@@Base+0x394>
   1cec0:	lsr	fp, r8, #1
   1cec4:	sub	r2, r2, #8
   1cec8:	sub	sl, r1, #8
   1cecc:	mov	r9, r2
   1ced0:	add	fp, r1, fp, lsl #3
   1ced4:	ldrd	r4, [r2, #8]!
   1ced8:	ldrd	r6, [sl, #8]!
   1cedc:	strd	r6, [r9, #8]!
   1cee0:	strd	r4, [r1], #8
   1cee4:	cmp	r1, fp
   1cee8:	bne	1ced4 <argp_error@@Base+0x230>
   1ceec:	bic	r2, r8, #1
   1cef0:	cmp	r8, r2
   1cef4:	beq	1cf10 <argp_error@@Base+0x26c>
   1cef8:	add	r1, r3, r2
   1cefc:	add	r2, lr, r2
   1cf00:	ldr	r4, [r0, r1, lsl #2]
   1cf04:	ldr	r5, [r0, r2, lsl #2]
   1cf08:	str	r5, [r0, r1, lsl #2]
   1cf0c:	str	r4, [r0, r2, lsl #2]
   1cf10:	cmp	lr, ip
   1cf14:	movle	r2, #0
   1cf18:	movgt	r2, #1
   1cf1c:	cmp	r3, ip
   1cf20:	movge	r2, #0
   1cf24:	cmp	r2, #0
   1cf28:	bne	1ce5c <argp_error@@Base+0x1b8>
   1cf2c:	ldr	r3, [sp, #24]
   1cf30:	ldr	r2, [sp, #28]
   1cf34:	sub	ip, r3, ip
   1cf38:	str	r3, [r2, #32]
   1cf3c:	ldr	r3, [sp, #20]
   1cf40:	add	ip, ip, r3
   1cf44:	str	ip, [r2, #28]
   1cf48:	add	sp, sp, #36	; 0x24
   1cf4c:	ldrd	r4, [sp]
   1cf50:	ldrd	r6, [sp, #8]
   1cf54:	ldrd	r8, [sp, #16]
   1cf58:	ldrd	sl, [sp, #24]
   1cf5c:	add	sp, sp, #32
   1cf60:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf64:	ldr	r4, [sp, #8]
   1cf68:	lsl	r5, r3, #2
   1cf6c:	sub	r7, r1, #1
   1cf70:	ldr	r8, [sp, #12]
   1cf74:	mov	r6, r5
   1cf78:	add	r5, r5, #8
   1cf7c:	add	r2, r0, r6
   1cf80:	cmp	r8, r6
   1cf84:	cmpgt	r5, r4
   1cf88:	ldr	r8, [sp, #4]
   1cf8c:	movle	r5, #1
   1cf90:	movgt	r5, #0
   1cf94:	cmp	r7, #3
   1cf98:	movls	r4, #0
   1cf9c:	andhi	r4, r5, #1
   1cfa0:	orr	r6, r2, r8
   1cfa4:	tst	r6, #7
   1cfa8:	movne	r4, #0
   1cfac:	cmp	r4, #0
   1cfb0:	beq	1d010 <argp_error@@Base+0x36c>
   1cfb4:	lsr	fp, r1, #1
   1cfb8:	ldr	sl, [sp, #16]
   1cfbc:	sub	r2, r2, #8
   1cfc0:	mov	r9, r2
   1cfc4:	add	fp, r8, fp, lsl #3
   1cfc8:	ldrd	r4, [r2, #8]!
   1cfcc:	ldrd	r6, [sl, #8]!
   1cfd0:	strd	r6, [r9, #8]!
   1cfd4:	strd	r4, [r8], #8
   1cfd8:	cmp	r8, fp
   1cfdc:	bne	1cfc8 <argp_error@@Base+0x324>
   1cfe0:	bic	r2, r1, #1
   1cfe4:	cmp	r1, r2
   1cfe8:	addeq	r3, r1, r3
   1cfec:	beq	1cf10 <argp_error@@Base+0x26c>
   1cff0:	add	r4, r3, r2
   1cff4:	add	r2, ip, r2
   1cff8:	ldr	r5, [r0, r4, lsl #2]
   1cffc:	add	r3, r1, r3
   1d000:	ldr	r6, [r0, r2, lsl #2]
   1d004:	str	r6, [r0, r4, lsl #2]
   1d008:	str	r5, [r0, r2, lsl #2]
   1d00c:	b	1cf10 <argp_error@@Base+0x26c>
   1d010:	add	r3, r1, r3
   1d014:	ldr	r1, [sp, #4]
   1d018:	add	r6, r0, r3, lsl #2
   1d01c:	ldr	r5, [r1]
   1d020:	ldr	r4, [r2]
   1d024:	str	r5, [r2], #4
   1d028:	cmp	r2, r6
   1d02c:	str	r4, [r1], #4
   1d030:	bne	1d01c <argp_error@@Base+0x378>
   1d034:	b	1cf10 <argp_error@@Base+0x26c>
   1d038:	add	r8, r3, r8
   1d03c:	add	r8, r0, r8, lsl #2
   1d040:	ldr	r5, [r1]
   1d044:	ldr	r4, [r2]
   1d048:	str	r5, [r2], #4
   1d04c:	cmp	r8, r2
   1d050:	str	r4, [r1], #4
   1d054:	bne	1d040 <argp_error@@Base+0x39c>
   1d058:	b	1cf10 <argp_error@@Base+0x26c>
   1d05c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d060:	strd	r6, [sp, #8]
   1d064:	strd	r8, [sp, #16]
   1d068:	strd	sl, [sp, #24]
   1d06c:	str	lr, [sp, #32]
   1d070:	sub	sp, sp, #52	; 0x34
   1d074:	str	r3, [sp, #8]
   1d078:	ldr	r3, [sp, #96]	; 0x60
   1d07c:	str	r1, [sp, #20]
   1d080:	str	r2, [sp, #28]
   1d084:	str	r0, [sp, #32]
   1d088:	ldr	r9, [r3, #20]
   1d08c:	ldrb	r5, [r9]
   1d090:	mov	r8, r9
   1d094:	str	r9, [sp, #24]
   1d098:	cmp	r5, #61	; 0x3d
   1d09c:	cmpne	r5, #0
   1d0a0:	movne	r5, #1
   1d0a4:	moveq	r5, #0
   1d0a8:	beq	1d0c0 <argp_error@@Base+0x41c>
   1d0ac:	ldrb	r3, [r8, #1]!
   1d0b0:	cmp	r3, #0
   1d0b4:	cmpne	r3, #61	; 0x3d
   1d0b8:	bne	1d0ac <argp_error@@Base+0x408>
   1d0bc:	sub	r5, r8, r9
   1d0c0:	ldr	r3, [sp, #8]
   1d0c4:	ldr	r3, [r3]
   1d0c8:	cmp	r3, #0
   1d0cc:	str	r3, [sp, #12]
   1d0d0:	beq	1d2c4 <argp_error@@Base+0x620>
   1d0d4:	ldr	fp, [sp, #8]
   1d0d8:	mov	r4, r3
   1d0dc:	mov	r6, #0
   1d0e0:	str	fp, [sp, #16]
   1d0e4:	b	1d0ec <argp_error@@Base+0x448>
   1d0e8:	mov	r6, r7
   1d0ec:	mov	r2, r5
   1d0f0:	mov	r1, r9
   1d0f4:	mov	r0, r4
   1d0f8:	add	r7, r6, #1
   1d0fc:	bl	11c04 <strncmp@plt>
   1d100:	cmp	r0, #0
   1d104:	mov	sl, fp
   1d108:	mov	r0, r4
   1d10c:	bne	1d11c <argp_error@@Base+0x478>
   1d110:	bl	11a0c <strlen@plt>
   1d114:	cmp	r0, r5
   1d118:	beq	1d23c <argp_error@@Base+0x598>
   1d11c:	ldr	r4, [fp, #16]!
   1d120:	cmp	r4, #0
   1d124:	bne	1d0e8 <argp_error@@Base+0x444>
   1d128:	ldr	r3, [sp, #100]	; 0x64
   1d12c:	cmp	r3, #0
   1d130:	ldr	r3, [sp, #92]	; 0x5c
   1d134:	beq	1d1d0 <argp_error@@Base+0x52c>
   1d138:	cmp	r3, #0
   1d13c:	bne	1d33c <argp_error@@Base+0x698>
   1d140:	ldr	r0, [sp, #12]
   1d144:	mov	r9, r3
   1d148:	mov	sl, r3
   1d14c:	mov	fp, #1
   1d150:	str	r3, [sp, #40]	; 0x28
   1d154:	ldr	r1, [sp, #24]
   1d158:	str	r7, [sp, #24]
   1d15c:	mov	r7, r5
   1d160:	ldr	r5, [sp, #16]
   1d164:	str	r6, [sp, #16]
   1d168:	ldr	r6, [sp, #96]	; 0x60
   1d16c:	str	r3, [sp, #44]	; 0x2c
   1d170:	mvn	r3, #0
   1d174:	str	r3, [sp, #36]	; 0x24
   1d178:	mov	r2, r7
   1d17c:	bl	11c04 <strncmp@plt>
   1d180:	cmp	r0, #0
   1d184:	bne	1d1b8 <argp_error@@Base+0x514>
   1d188:	cmp	sl, #0
   1d18c:	beq	1d520 <argp_error@@Base+0x87c>
   1d190:	ldr	r2, [r5, #4]
   1d194:	ldr	r1, [sl, #4]
   1d198:	cmp	r1, r2
   1d19c:	beq	1d640 <argp_error@@Base+0x99c>
   1d1a0:	ldr	r3, [sp, #40]	; 0x28
   1d1a4:	cmp	r3, #0
   1d1a8:	bne	1d1b8 <argp_error@@Base+0x514>
   1d1ac:	cmp	r4, #0
   1d1b0:	beq	1d5b8 <argp_error@@Base+0x914>
   1d1b4:	strb	fp, [r4, r9]
   1d1b8:	ldr	r0, [r5, #16]!
   1d1bc:	add	r9, r9, #1
   1d1c0:	cmp	r0, #0
   1d1c4:	beq	1d450 <argp_error@@Base+0x7ac>
   1d1c8:	ldr	r1, [r6, #20]
   1d1cc:	b	1d178 <argp_error@@Base+0x4d4>
   1d1d0:	cmp	r3, #0
   1d1d4:	beq	1d3b4 <argp_error@@Base+0x710>
   1d1d8:	ldr	r0, [sp, #12]
   1d1dc:	mvn	r3, #0
   1d1e0:	ldr	r6, [sp, #100]	; 0x64
   1d1e4:	str	r3, [sp, #36]	; 0x24
   1d1e8:	ldr	sl, [sp, #16]
   1d1ec:	mov	r7, r6
   1d1f0:	mov	r2, r5
   1d1f4:	mov	r1, r9
   1d1f8:	bl	11c04 <strncmp@plt>
   1d1fc:	cmp	r0, #0
   1d200:	bne	1d214 <argp_error@@Base+0x570>
   1d204:	cmp	r4, #0
   1d208:	moveq	r4, sl
   1d20c:	movne	r6, #1
   1d210:	streq	r7, [sp, #36]	; 0x24
   1d214:	ldr	r0, [sl, #16]!
   1d218:	add	r7, r7, #1
   1d21c:	cmp	r0, #0
   1d220:	bne	1d1f0 <argp_error@@Base+0x54c>
   1d224:	cmp	r6, #0
   1d228:	moveq	sl, r4
   1d22c:	bne	1d4b8 <argp_error@@Base+0x814>
   1d230:	cmp	sl, #0
   1d234:	ldrne	r6, [sp, #36]	; 0x24
   1d238:	beq	1d2c4 <argp_error@@Base+0x620>
   1d23c:	ldr	r3, [sp, #96]	; 0x60
   1d240:	mov	r2, #0
   1d244:	ldr	r1, [sp, #96]	; 0x60
   1d248:	ldr	r0, [sl, #4]
   1d24c:	ldr	r3, [r3]
   1d250:	str	r2, [r1, #20]
   1d254:	add	r2, r3, #1
   1d258:	str	r2, [r1]
   1d25c:	ldrb	r1, [r8]
   1d260:	cmp	r1, #0
   1d264:	bne	1d2ac <argp_error@@Base+0x608>
   1d268:	cmp	r0, #1
   1d26c:	beq	1d4ec <argp_error@@Base+0x848>
   1d270:	ldr	r3, [sp, #88]	; 0x58
   1d274:	cmp	r3, #0
   1d278:	strne	r6, [r3]
   1d27c:	ldr	r3, [sl, #8]
   1d280:	ldr	r0, [sl, #12]
   1d284:	cmp	r3, #0
   1d288:	strne	r0, [r3]
   1d28c:	movne	r0, #0
   1d290:	add	sp, sp, #52	; 0x34
   1d294:	ldrd	r4, [sp]
   1d298:	ldrd	r6, [sp, #8]
   1d29c:	ldrd	r8, [sp, #16]
   1d2a0:	ldrd	sl, [sp, #24]
   1d2a4:	add	sp, sp, #32
   1d2a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d2ac:	cmp	r0, #0
   1d2b0:	beq	1d52c <argp_error@@Base+0x888>
   1d2b4:	ldr	r3, [sp, #96]	; 0x60
   1d2b8:	add	r8, r8, #1
   1d2bc:	str	r8, [r3, #12]
   1d2c0:	b	1d270 <argp_error@@Base+0x5cc>
   1d2c4:	ldr	r3, [sp, #92]	; 0x5c
   1d2c8:	cmp	r3, #0
   1d2cc:	beq	1d308 <argp_error@@Base+0x664>
   1d2d0:	ldr	r2, [sp, #20]
   1d2d4:	ldr	r3, [sp, #96]	; 0x60
   1d2d8:	ldr	r3, [r3]
   1d2dc:	ldr	r3, [r2, r3, lsl #2]
   1d2e0:	ldrb	r3, [r3, #1]
   1d2e4:	cmp	r3, #45	; 0x2d
   1d2e8:	beq	1d308 <argp_error@@Base+0x664>
   1d2ec:	ldr	r0, [sp, #28]
   1d2f0:	ldr	r3, [sp, #96]	; 0x60
   1d2f4:	ldr	r3, [r3, #20]
   1d2f8:	ldrb	r1, [r3]
   1d2fc:	bl	11a24 <strchr@plt>
   1d300:	cmp	r0, #0
   1d304:	bne	1d57c <argp_error@@Base+0x8d8>
   1d308:	ldr	r3, [sp, #100]	; 0x64
   1d30c:	cmp	r3, #0
   1d310:	bne	1d41c <argp_error@@Base+0x778>
   1d314:	ldr	r3, [sp, #96]	; 0x60
   1d318:	mov	r2, #0
   1d31c:	mov	r0, #63	; 0x3f
   1d320:	ldr	r1, [sp, #96]	; 0x60
   1d324:	ldr	r3, [r3]
   1d328:	str	r2, [r1, #8]
   1d32c:	str	r2, [r1, #20]
   1d330:	add	r3, r3, #1
   1d334:	str	r3, [r1]
   1d338:	b	1d290 <argp_error@@Base+0x5ec>
   1d33c:	ldr	r0, [sp, #12]
   1d340:	mvn	r3, #0
   1d344:	mov	sl, r4
   1d348:	mov	r9, r4
   1d34c:	ldr	fp, [sp, #16]
   1d350:	str	r3, [sp, #36]	; 0x24
   1d354:	ldr	r1, [sp, #24]
   1d358:	str	r7, [sp, #24]
   1d35c:	ldr	r7, [sp, #96]	; 0x60
   1d360:	str	r4, [sp, #40]	; 0x28
   1d364:	str	r4, [sp, #44]	; 0x2c
   1d368:	mov	r2, r5
   1d36c:	bl	11c04 <strncmp@plt>
   1d370:	cmp	r0, #0
   1d374:	bne	1d39c <argp_error@@Base+0x6f8>
   1d378:	cmp	sl, #0
   1d37c:	beq	1d514 <argp_error@@Base+0x870>
   1d380:	ldr	r3, [sp, #40]	; 0x28
   1d384:	cmp	r3, #0
   1d388:	bne	1d39c <argp_error@@Base+0x6f8>
   1d38c:	cmp	r4, #0
   1d390:	beq	1d584 <argp_error@@Base+0x8e0>
   1d394:	mov	r3, #1
   1d398:	strb	r3, [r4, r9]
   1d39c:	ldr	r0, [fp, #16]!
   1d3a0:	add	r9, r9, #1
   1d3a4:	cmp	r0, #0
   1d3a8:	beq	1d454 <argp_error@@Base+0x7b0>
   1d3ac:	ldr	r1, [r7, #20]
   1d3b0:	b	1d368 <argp_error@@Base+0x6c4>
   1d3b4:	mov	r6, r3
   1d3b8:	mov	r7, r3
   1d3bc:	ldr	r0, [sp, #12]
   1d3c0:	mvn	r3, #0
   1d3c4:	ldr	sl, [sp, #16]
   1d3c8:	str	r3, [sp, #36]	; 0x24
   1d3cc:	b	1d3f4 <argp_error@@Base+0x750>
   1d3d0:	ldr	r2, [r4, #4]
   1d3d4:	ldr	r3, [sl, #4]
   1d3d8:	cmp	r2, r3
   1d3dc:	beq	1d61c <argp_error@@Base+0x978>
   1d3e0:	mov	r6, #1
   1d3e4:	ldr	r0, [sl, #16]!
   1d3e8:	add	r7, r7, #1
   1d3ec:	cmp	r0, #0
   1d3f0:	beq	1d224 <argp_error@@Base+0x580>
   1d3f4:	mov	r2, r5
   1d3f8:	mov	r1, r9
   1d3fc:	bl	11c04 <strncmp@plt>
   1d400:	cmp	r0, #0
   1d404:	bne	1d3e4 <argp_error@@Base+0x740>
   1d408:	cmp	r4, #0
   1d40c:	bne	1d3d0 <argp_error@@Base+0x72c>
   1d410:	mov	r4, sl
   1d414:	str	r7, [sp, #36]	; 0x24
   1d418:	b	1d3e4 <argp_error@@Base+0x740>
   1d41c:	ldr	r3, [sp, #96]	; 0x60
   1d420:	movw	r0, #5048	; 0x13b8
   1d424:	movt	r0, #3
   1d428:	movw	r1, #65472	; 0xffc0
   1d42c:	movt	r1, #1
   1d430:	ldr	r0, [r0]
   1d434:	ldr	ip, [r3, #20]
   1d438:	ldr	r3, [sp, #20]
   1d43c:	ldr	r2, [r3]
   1d440:	str	ip, [sp]
   1d444:	ldr	r3, [sp, #104]	; 0x68
   1d448:	bl	11a3c <fprintf@plt>
   1d44c:	b	1d314 <argp_error@@Base+0x670>
   1d450:	ldr	r6, [sp, #16]
   1d454:	ldr	r3, [sp, #40]	; 0x28
   1d458:	orrs	r3, r4, r3
   1d45c:	beq	1d230 <argp_error@@Base+0x58c>
   1d460:	ldr	r3, [sp, #40]	; 0x28
   1d464:	movw	r5, #5048	; 0x13b8
   1d468:	movt	r5, #3
   1d46c:	ldr	r0, [r5]
   1d470:	cmp	r3, #0
   1d474:	beq	1d664 <argp_error@@Base+0x9c0>
   1d478:	ldr	r2, [sp, #20]
   1d47c:	movw	r1, #65384	; 0xff68
   1d480:	movt	r1, #1
   1d484:	ldr	r3, [sp, #96]	; 0x60
   1d488:	ldr	r2, [r2]
   1d48c:	ldr	ip, [r3, #20]
   1d490:	ldr	r3, [sp, #104]	; 0x68
   1d494:	str	ip, [sp]
   1d498:	bl	11a3c <fprintf@plt>
   1d49c:	ldr	r3, [sp, #44]	; 0x2c
   1d4a0:	cmp	r3, #0
   1d4a4:	beq	1d4b0 <argp_error@@Base+0x80c>
   1d4a8:	mov	r0, r4
   1d4ac:	bl	17d88 <argp_parse@@Base+0x1038>
   1d4b0:	ldr	r3, [sp, #96]	; 0x60
   1d4b4:	ldr	r9, [r3, #20]
   1d4b8:	mov	r0, r9
   1d4bc:	bl	11a0c <strlen@plt>
   1d4c0:	ldr	r3, [sp, #96]	; 0x60
   1d4c4:	add	r9, r9, r0
   1d4c8:	mov	r2, #0
   1d4cc:	mov	r0, #63	; 0x3f
   1d4d0:	ldr	r1, [sp, #96]	; 0x60
   1d4d4:	ldr	r3, [r3]
   1d4d8:	str	r2, [r1, #8]
   1d4dc:	str	r9, [r1, #20]
   1d4e0:	add	r3, r3, #1
   1d4e4:	str	r3, [r1]
   1d4e8:	b	1d290 <argp_error@@Base+0x5ec>
   1d4ec:	ldr	r1, [sp, #32]
   1d4f0:	cmp	r2, r1
   1d4f4:	bge	1d5ec <argp_error@@Base+0x948>
   1d4f8:	ldr	r1, [sp, #20]
   1d4fc:	add	r3, r3, #2
   1d500:	ldr	r2, [r1, r2, lsl #2]
   1d504:	ldr	r1, [sp, #96]	; 0x60
   1d508:	str	r3, [r1]
   1d50c:	str	r2, [r1, #12]
   1d510:	b	1d270 <argp_error@@Base+0x5cc>
   1d514:	mov	sl, fp
   1d518:	str	r9, [sp, #36]	; 0x24
   1d51c:	b	1d39c <argp_error@@Base+0x6f8>
   1d520:	mov	sl, r5
   1d524:	str	r9, [sp, #36]	; 0x24
   1d528:	b	1d1b8 <argp_error@@Base+0x514>
   1d52c:	ldr	r3, [sp, #100]	; 0x64
   1d530:	cmp	r3, #0
   1d534:	bne	1d54c <argp_error@@Base+0x8a8>
   1d538:	ldr	r3, [sl, #12]
   1d53c:	mov	r0, #63	; 0x3f
   1d540:	ldr	r2, [sp, #96]	; 0x60
   1d544:	str	r3, [r2, #8]
   1d548:	b	1d290 <argp_error@@Base+0x5ec>
   1d54c:	ldr	ip, [sl]
   1d550:	movw	r0, #5048	; 0x13b8
   1d554:	movt	r0, #3
   1d558:	movw	r1, #65504	; 0xffe0
   1d55c:	movt	r1, #1
   1d560:	ldr	r3, [sp, #20]
   1d564:	ldr	r0, [r0]
   1d568:	ldr	r2, [r3]
   1d56c:	str	ip, [sp]
   1d570:	ldr	r3, [sp, #104]	; 0x68
   1d574:	bl	11a3c <fprintf@plt>
   1d578:	b	1d538 <argp_error@@Base+0x894>
   1d57c:	mvn	r0, #0
   1d580:	b	1d290 <argp_error@@Base+0x5ec>
   1d584:	ldr	r0, [sp, #24]
   1d588:	bl	18b40 <argp_parse@@Base+0x1df0>
   1d58c:	subs	r4, r0, #0
   1d590:	beq	1d728 <argp_error@@Base+0xa84>
   1d594:	ldr	r2, [sp, #24]
   1d598:	ldr	r1, [sp, #40]	; 0x28
   1d59c:	bl	11a84 <memset@plt>
   1d5a0:	mov	r3, #1
   1d5a4:	mov	r2, #1
   1d5a8:	str	r3, [sp, #44]	; 0x2c
   1d5ac:	ldr	r3, [sp, #36]	; 0x24
   1d5b0:	strb	r2, [r4, r3]
   1d5b4:	b	1d394 <argp_error@@Base+0x6f0>
   1d5b8:	ldr	r0, [sp, #24]
   1d5bc:	bl	18b40 <argp_parse@@Base+0x1df0>
   1d5c0:	subs	r4, r0, #0
   1d5c4:	mov	r3, #1
   1d5c8:	streq	r3, [sp, #40]	; 0x28
   1d5cc:	beq	1d1b8 <argp_error@@Base+0x514>
   1d5d0:	ldr	r2, [sp, #24]
   1d5d4:	str	r3, [sp, #44]	; 0x2c
   1d5d8:	ldr	r1, [sp, #40]	; 0x28
   1d5dc:	bl	11a84 <memset@plt>
   1d5e0:	ldr	r3, [sp, #36]	; 0x24
   1d5e4:	strb	fp, [r4, r3]
   1d5e8:	b	1d1b4 <argp_error@@Base+0x510>
   1d5ec:	ldr	r3, [sp, #100]	; 0x64
   1d5f0:	cmp	r3, #0
   1d5f4:	bne	1d6f8 <argp_error@@Base+0xa54>
   1d5f8:	ldr	r3, [sl, #12]
   1d5fc:	ldr	r2, [sp, #96]	; 0x60
   1d600:	str	r3, [r2, #8]
   1d604:	ldr	r3, [sp, #28]
   1d608:	ldrb	r3, [r3]
   1d60c:	cmp	r3, #58	; 0x3a
   1d610:	moveq	r0, #58	; 0x3a
   1d614:	movne	r0, #63	; 0x3f
   1d618:	b	1d290 <argp_error@@Base+0x5ec>
   1d61c:	ldr	r2, [r4, #8]
   1d620:	ldr	r3, [sl, #8]
   1d624:	cmp	r2, r3
   1d628:	bne	1d3e0 <argp_error@@Base+0x73c>
   1d62c:	ldr	r2, [r4, #12]
   1d630:	ldr	r3, [sl, #12]
   1d634:	cmp	r2, r3
   1d638:	movne	r6, #1
   1d63c:	b	1d3e4 <argp_error@@Base+0x740>
   1d640:	ldr	r2, [r5, #8]
   1d644:	ldr	r1, [sl, #8]
   1d648:	cmp	r1, r2
   1d64c:	bne	1d1a0 <argp_error@@Base+0x4fc>
   1d650:	ldr	r2, [r5, #12]
   1d654:	ldr	r1, [sl, #12]
   1d658:	cmp	r1, r2
   1d65c:	bne	1d1a0 <argp_error@@Base+0x4fc>
   1d660:	b	1d1b8 <argp_error@@Base+0x514>
   1d664:	bl	11b8c <flockfile@plt>
   1d668:	ldr	r2, [sp, #20]
   1d66c:	movw	r1, #65416	; 0xff88
   1d670:	movt	r1, #1
   1d674:	movw	r7, #65464	; 0xffb8
   1d678:	movt	r7, #1
   1d67c:	ldr	r3, [sp, #96]	; 0x60
   1d680:	add	r6, r4, r6
   1d684:	sub	r8, r4, #1
   1d688:	ldr	r2, [r2]
   1d68c:	ldr	r0, [r3, #20]
   1d690:	ldr	r3, [sp, #104]	; 0x68
   1d694:	str	r0, [sp]
   1d698:	ldr	r0, [r5]
   1d69c:	bl	11a3c <fprintf@plt>
   1d6a0:	ldr	r0, [r5]
   1d6a4:	ldr	sl, [sp, #8]
   1d6a8:	ldr	r9, [sp, #40]	; 0x28
   1d6ac:	b	1d6bc <argp_error@@Base+0xa18>
   1d6b0:	cmp	r6, r8
   1d6b4:	add	r9, r9, #1
   1d6b8:	beq	1d6e0 <argp_error@@Base+0xa3c>
   1d6bc:	ldrb	r3, [r8, #1]!
   1d6c0:	cmp	r3, #0
   1d6c4:	beq	1d6b0 <argp_error@@Base+0xa0c>
   1d6c8:	mov	r1, r7
   1d6cc:	ldr	r3, [sl, r9, lsl #4]
   1d6d0:	ldr	r2, [sp, #104]	; 0x68
   1d6d4:	bl	11a3c <fprintf@plt>
   1d6d8:	ldr	r0, [r5]
   1d6dc:	b	1d6b0 <argp_error@@Base+0xa0c>
   1d6e0:	mov	r1, r0
   1d6e4:	mov	r0, #10
   1d6e8:	bl	11b38 <fputc@plt>
   1d6ec:	ldr	r0, [r5]
   1d6f0:	bl	118f8 <funlockfile@plt>
   1d6f4:	b	1d49c <argp_error@@Base+0x7f8>
   1d6f8:	ldr	ip, [sl]
   1d6fc:	movw	r0, #5048	; 0x13b8
   1d700:	movt	r0, #3
   1d704:	movw	r1, #16
   1d708:	movt	r1, #2
   1d70c:	ldr	r3, [sp, #20]
   1d710:	ldr	r0, [r0]
   1d714:	ldr	r2, [r3]
   1d718:	str	ip, [sp]
   1d71c:	ldr	r3, [sp, #104]	; 0x68
   1d720:	bl	11a3c <fprintf@plt>
   1d724:	b	1d5f8 <argp_error@@Base+0x954>
   1d728:	mov	r3, #1
   1d72c:	str	r3, [sp, #40]	; 0x28
   1d730:	b	1d39c <argp_error@@Base+0x6f8>
   1d734:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d738:	subs	r5, r0, #0
   1d73c:	strd	r6, [sp, #8]
   1d740:	strd	r8, [sp, #16]
   1d744:	strd	sl, [sp, #24]
   1d748:	str	lr, [sp, #32]
   1d74c:	sub	sp, sp, #36	; 0x24
   1d750:	ldr	r4, [sp, #80]	; 0x50
   1d754:	ldr	r7, [r4, #4]
   1d758:	ble	1d94c <argp_error@@Base+0xca8>
   1d75c:	mov	r6, r2
   1d760:	mov	sl, r3
   1d764:	ldr	r2, [r4]
   1d768:	mov	r3, #0
   1d76c:	mov	r9, r1
   1d770:	str	r3, [r4, #12]
   1d774:	cmp	r2, r3
   1d778:	beq	1d9f4 <argp_error@@Base+0xd50>
   1d77c:	ldr	r3, [r4, #16]
   1d780:	cmp	r3, #0
   1d784:	bne	1d918 <argp_error@@Base+0xc74>
   1d788:	mov	r3, #0
   1d78c:	str	r3, [r4, #20]
   1d790:	str	r2, [r4, #28]
   1d794:	str	r2, [r4, #32]
   1d798:	ldrb	r2, [r6]
   1d79c:	cmp	r2, #45	; 0x2d
   1d7a0:	moveq	r2, #2
   1d7a4:	addeq	r6, r6, #1
   1d7a8:	streq	r2, [r4, #24]
   1d7ac:	beq	1d7d4 <argp_error@@Base+0xb30>
   1d7b0:	cmp	r2, #43	; 0x2b
   1d7b4:	addeq	r6, r6, #1
   1d7b8:	streq	r3, [r4, #24]
   1d7bc:	beq	1d7d4 <argp_error@@Base+0xb30>
   1d7c0:	ldr	r2, [sp, #84]	; 0x54
   1d7c4:	cmp	r2, #0
   1d7c8:	beq	1db24 <argp_error@@Base+0xe80>
   1d7cc:	mov	r2, #0
   1d7d0:	str	r2, [r4, #24]
   1d7d4:	mov	r2, #1
   1d7d8:	str	r2, [r4, #16]
   1d7dc:	ldrb	r2, [r6]
   1d7e0:	cmp	r2, #58	; 0x3a
   1d7e4:	moveq	r7, #0
   1d7e8:	cmp	r3, #0
   1d7ec:	beq	1d880 <argp_error@@Base+0xbdc>
   1d7f0:	ldrb	r2, [r3]
   1d7f4:	cmp	r2, #0
   1d7f8:	beq	1d880 <argp_error@@Base+0xbdc>
   1d7fc:	add	fp, r3, #1
   1d800:	mov	r0, r6
   1d804:	str	r3, [sp, #28]
   1d808:	str	fp, [r4, #20]
   1d80c:	ldrb	r8, [r3]
   1d810:	mov	r1, r8
   1d814:	str	r8, [sp, #24]
   1d818:	bl	11a24 <strchr@plt>
   1d81c:	ldrd	r2, [sp, #24]
   1d820:	ldrb	r1, [r3, #1]
   1d824:	cmp	r1, #0
   1d828:	bne	1d838 <argp_error@@Base+0xb94>
   1d82c:	ldr	r1, [r4]
   1d830:	add	r1, r1, #1
   1d834:	str	r1, [r4]
   1d838:	sub	r1, r8, #58	; 0x3a
   1d83c:	cmp	r0, #0
   1d840:	cmpne	r1, #1
   1d844:	bls	1db9c <argp_error@@Base+0xef8>
   1d848:	ldrb	ip, [r0]
   1d84c:	ldrb	r1, [r0, #1]
   1d850:	cmp	ip, #87	; 0x57
   1d854:	beq	1daa4 <argp_error@@Base+0xe00>
   1d858:	cmp	r1, #58	; 0x3a
   1d85c:	beq	1db48 <argp_error@@Base+0xea4>
   1d860:	mov	r0, r2
   1d864:	add	sp, sp, #36	; 0x24
   1d868:	ldrd	r4, [sp]
   1d86c:	ldrd	r6, [sp, #8]
   1d870:	ldrd	r8, [sp, #16]
   1d874:	ldrd	sl, [sp, #24]
   1d878:	add	sp, sp, #32
   1d87c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d880:	ldr	r8, [r4]
   1d884:	ldr	r2, [r4, #28]
   1d888:	ldr	r3, [r4, #32]
   1d88c:	cmp	r3, r8
   1d890:	ldr	r3, [r4, #24]
   1d894:	strgt	r8, [r4, #32]
   1d898:	cmp	r8, r2
   1d89c:	movlt	r2, r8
   1d8a0:	strlt	r8, [r4, #28]
   1d8a4:	cmp	r3, #1
   1d8a8:	beq	1d954 <argp_error@@Base+0xcb0>
   1d8ac:	cmp	r5, r8
   1d8b0:	beq	1d934 <argp_error@@Base+0xc90>
   1d8b4:	ldr	r3, [r9, r8, lsl #2]
   1d8b8:	movw	fp, #63276	; 0xf72c
   1d8bc:	movt	fp, #1
   1d8c0:	mov	r1, fp
   1d8c4:	mov	r0, r3
   1d8c8:	str	r3, [sp, #24]
   1d8cc:	bl	11778 <strcmp@plt>
   1d8d0:	cmp	r0, #0
   1d8d4:	ldr	r3, [sp, #24]
   1d8d8:	bne	1d9c8 <argp_error@@Base+0xd24>
   1d8dc:	ldr	r3, [r4, #28]
   1d8e0:	add	r8, r8, #1
   1d8e4:	ldr	r2, [r4, #32]
   1d8e8:	str	r8, [r4]
   1d8ec:	cmp	r3, r2
   1d8f0:	beq	1dbb0 <argp_error@@Base+0xf0c>
   1d8f4:	cmp	r8, r2
   1d8f8:	beq	1d90c <argp_error@@Base+0xc68>
   1d8fc:	mov	r0, r9
   1d900:	mov	r1, r4
   1d904:	bl	1cdf4 <argp_error@@Base+0x150>
   1d908:	ldr	r3, [r4, #28]
   1d90c:	str	r5, [r4]
   1d910:	str	r5, [r4, #32]
   1d914:	b	1d93c <argp_error@@Base+0xc98>
   1d918:	ldrb	r2, [r6]
   1d91c:	ldr	r3, [r4, #20]
   1d920:	sub	r1, r2, #43	; 0x2b
   1d924:	tst	r1, #253	; 0xfd
   1d928:	ldrbeq	r2, [r6, #1]
   1d92c:	addeq	r6, r6, #1
   1d930:	b	1d7e0 <argp_error@@Base+0xb3c>
   1d934:	ldr	r3, [r4, #28]
   1d938:	ldr	r5, [r4, #32]
   1d93c:	cmp	r5, r3
   1d940:	mvnne	r2, #0
   1d944:	strne	r3, [r4]
   1d948:	bne	1d860 <argp_error@@Base+0xbbc>
   1d94c:	mvn	r2, #0
   1d950:	b	1d860 <argp_error@@Base+0xbbc>
   1d954:	ldr	r3, [r4, #32]
   1d958:	cmp	r3, r2
   1d95c:	beq	1db88 <argp_error@@Base+0xee4>
   1d960:	cmp	r8, r3
   1d964:	beq	1d978 <argp_error@@Base+0xcd4>
   1d968:	mov	r1, r4
   1d96c:	mov	r0, r9
   1d970:	bl	1cdf4 <argp_error@@Base+0x150>
   1d974:	ldr	r3, [r4]
   1d978:	cmp	r5, r3
   1d97c:	ble	1d9b4 <argp_error@@Base+0xd10>
   1d980:	add	r1, r9, r3, lsl #2
   1d984:	b	1d998 <argp_error@@Base+0xcf4>
   1d988:	add	r3, r3, #1
   1d98c:	cmp	r3, r5
   1d990:	str	r3, [r4]
   1d994:	beq	1d9b4 <argp_error@@Base+0xd10>
   1d998:	ldr	r2, [r1], #4
   1d99c:	ldrb	r0, [r2]
   1d9a0:	cmp	r0, #45	; 0x2d
   1d9a4:	bne	1d988 <argp_error@@Base+0xce4>
   1d9a8:	ldrb	r2, [r2, #1]
   1d9ac:	cmp	r2, #0
   1d9b0:	beq	1d988 <argp_error@@Base+0xce4>
   1d9b4:	mov	r8, r3
   1d9b8:	str	r3, [r4, #32]
   1d9bc:	cmp	r5, r8
   1d9c0:	bne	1d8b4 <argp_error@@Base+0xc10>
   1d9c4:	b	1d934 <argp_error@@Base+0xc90>
   1d9c8:	ldrb	r2, [r3]
   1d9cc:	cmp	r2, #45	; 0x2d
   1d9d0:	beq	1da04 <argp_error@@Base+0xd60>
   1d9d4:	ldr	r2, [r4, #24]
   1d9d8:	cmp	r2, #0
   1d9dc:	beq	1d94c <argp_error@@Base+0xca8>
   1d9e0:	add	r8, r8, #1
   1d9e4:	mov	r2, #1
   1d9e8:	str	r8, [r4]
   1d9ec:	str	r3, [r4, #12]
   1d9f0:	b	1d860 <argp_error@@Base+0xbbc>
   1d9f4:	mov	r3, #1
   1d9f8:	mov	r2, r3
   1d9fc:	str	r3, [r4]
   1da00:	b	1d788 <argp_error@@Base+0xae4>
   1da04:	ldrb	r1, [r3, #1]
   1da08:	cmp	r1, #0
   1da0c:	beq	1d9d4 <argp_error@@Base+0xd30>
   1da10:	cmp	sl, #0
   1da14:	beq	1da9c <argp_error@@Base+0xdf8>
   1da18:	cmp	r1, #45	; 0x2d
   1da1c:	beq	1dc34 <argp_error@@Base+0xf90>
   1da20:	ldr	r2, [sp, #76]	; 0x4c
   1da24:	cmp	r2, #0
   1da28:	beq	1da9c <argp_error@@Base+0xdf8>
   1da2c:	ldrb	r2, [r3, #2]
   1da30:	cmp	r2, #0
   1da34:	bne	1da50 <argp_error@@Base+0xdac>
   1da38:	mov	r0, r6
   1da3c:	str	r3, [sp, #24]
   1da40:	bl	11a24 <strchr@plt>
   1da44:	cmp	r0, #0
   1da48:	ldr	r3, [sp, #24]
   1da4c:	bne	1da9c <argp_error@@Base+0xdf8>
   1da50:	ldr	r2, [sp, #72]	; 0x48
   1da54:	add	ip, r3, #1
   1da58:	movw	r0, #72	; 0x48
   1da5c:	movt	r0, #2
   1da60:	mov	r3, sl
   1da64:	ldr	r1, [sp, #76]	; 0x4c
   1da68:	str	r2, [sp]
   1da6c:	mov	r2, r6
   1da70:	str	r0, [sp, #16]
   1da74:	mov	r0, r5
   1da78:	stmib	sp, {r1, r4, r7}
   1da7c:	mov	r1, r9
   1da80:	str	ip, [r4, #20]
   1da84:	bl	1d05c <argp_error@@Base+0x3b8>
   1da88:	cmn	r0, #1
   1da8c:	mov	r2, r0
   1da90:	bne	1d860 <argp_error@@Base+0xbbc>
   1da94:	ldr	r3, [r4]
   1da98:	ldr	r3, [r9, r3, lsl #2]
   1da9c:	add	r3, r3, #1
   1daa0:	b	1d7fc <argp_error@@Base+0xb58>
   1daa4:	sub	ip, r1, #59	; 0x3b
   1daa8:	cmp	sl, #0
   1daac:	clz	ip, ip
   1dab0:	lsr	ip, ip, #5
   1dab4:	moveq	ip, #0
   1dab8:	cmp	ip, #0
   1dabc:	beq	1d858 <argp_error@@Base+0xbb4>
   1dac0:	ldrb	r3, [r3, #1]
   1dac4:	cmp	r3, #0
   1dac8:	bne	1dadc <argp_error@@Base+0xe38>
   1dacc:	ldr	r3, [r4]
   1dad0:	cmp	r3, r5
   1dad4:	beq	1dc68 <argp_error@@Base+0xfc4>
   1dad8:	ldr	fp, [r9, r3, lsl #2]
   1dadc:	mov	lr, #0
   1dae0:	movw	ip, #148	; 0x94
   1dae4:	movt	ip, #2
   1dae8:	ldr	r3, [sp, #72]	; 0x48
   1daec:	mov	r2, r6
   1daf0:	mov	r1, r9
   1daf4:	mov	r0, r5
   1daf8:	str	r3, [sp]
   1dafc:	mov	r3, sl
   1db00:	str	r4, [sp, #8]
   1db04:	str	r7, [sp, #12]
   1db08:	str	ip, [sp, #16]
   1db0c:	str	fp, [r4, #20]
   1db10:	str	lr, [sp, #4]
   1db14:	str	lr, [r4, #12]
   1db18:	bl	1d05c <argp_error@@Base+0x3b8>
   1db1c:	mov	r2, r0
   1db20:	b	1d860 <argp_error@@Base+0xbbc>
   1db24:	movw	r0, #56	; 0x38
   1db28:	movt	r0, #2
   1db2c:	bl	11970 <getenv@plt>
   1db30:	cmp	r0, #0
   1db34:	ldr	r3, [r4, #20]
   1db38:	bne	1d7cc <argp_error@@Base+0xb28>
   1db3c:	mov	r2, #1
   1db40:	str	r2, [r4, #24]
   1db44:	b	1d7d4 <argp_error@@Base+0xb30>
   1db48:	ldrb	r1, [r0, #2]
   1db4c:	ldrb	r3, [r3, #1]
   1db50:	cmp	r1, #58	; 0x3a
   1db54:	beq	1dbf0 <argp_error@@Base+0xf4c>
   1db58:	cmp	r3, #0
   1db5c:	ldr	r3, [r4]
   1db60:	bne	1dbbc <argp_error@@Base+0xf18>
   1db64:	cmp	r5, r3
   1db68:	beq	1dc14 <argp_error@@Base+0xf70>
   1db6c:	ldr	r1, [r9, r3, lsl #2]
   1db70:	add	r3, r3, #1
   1db74:	str	r3, [r4]
   1db78:	str	r1, [r4, #12]
   1db7c:	mov	r3, #0
   1db80:	str	r3, [r4, #20]
   1db84:	b	1d860 <argp_error@@Base+0xbbc>
   1db88:	cmp	r8, r2
   1db8c:	movne	r3, r8
   1db90:	moveq	r3, r2
   1db94:	strne	r8, [r4, #28]
   1db98:	b	1d978 <argp_error@@Base+0xcd4>
   1db9c:	cmp	r7, #0
   1dba0:	bne	1dbcc <argp_error@@Base+0xf28>
   1dba4:	mov	r2, #63	; 0x3f
   1dba8:	str	r8, [r4, #8]
   1dbac:	b	1d860 <argp_error@@Base+0xbbc>
   1dbb0:	mov	r3, r8
   1dbb4:	str	r8, [r4, #28]
   1dbb8:	b	1d90c <argp_error@@Base+0xc68>
   1dbbc:	add	r3, r3, #1
   1dbc0:	str	r3, [r4]
   1dbc4:	str	fp, [r4, #12]
   1dbc8:	b	1db7c <argp_error@@Base+0xed8>
   1dbcc:	movw	r0, #5048	; 0x13b8
   1dbd0:	movt	r0, #3
   1dbd4:	ldr	r2, [r9]
   1dbd8:	movw	r1, #76	; 0x4c
   1dbdc:	movt	r1, #2
   1dbe0:	mov	r3, r8
   1dbe4:	ldr	r0, [r0]
   1dbe8:	bl	11a3c <fprintf@plt>
   1dbec:	b	1dba4 <argp_error@@Base+0xf00>
   1dbf0:	cmp	r3, #0
   1dbf4:	ldrne	r3, [r4]
   1dbf8:	moveq	fp, r3
   1dbfc:	str	fp, [r4, #12]
   1dc00:	addne	r3, r3, #1
   1dc04:	strne	r3, [r4]
   1dc08:	mov	r3, #0
   1dc0c:	str	r3, [r4, #20]
   1dc10:	b	1d860 <argp_error@@Base+0xbbc>
   1dc14:	cmp	r7, #0
   1dc18:	bne	1dc88 <argp_error@@Base+0xfe4>
   1dc1c:	str	r8, [r4, #8]
   1dc20:	ldrb	r3, [r6]
   1dc24:	cmp	r3, #58	; 0x3a
   1dc28:	moveq	r2, #58	; 0x3a
   1dc2c:	movne	r2, #63	; 0x3f
   1dc30:	b	1db7c <argp_error@@Base+0xed8>
   1dc34:	ldr	r2, [sp, #72]	; 0x48
   1dc38:	add	ip, r3, #2
   1dc3c:	mov	r1, r9
   1dc40:	mov	r3, sl
   1dc44:	ldr	r0, [sp, #76]	; 0x4c
   1dc48:	str	r2, [sp]
   1dc4c:	mov	r2, r6
   1dc50:	stmib	sp, {r0, r4, r7, fp}
   1dc54:	mov	r0, r5
   1dc58:	str	ip, [r4, #20]
   1dc5c:	bl	1d05c <argp_error@@Base+0x3b8>
   1dc60:	mov	r2, r0
   1dc64:	b	1d860 <argp_error@@Base+0xbbc>
   1dc68:	cmp	r7, #0
   1dc6c:	bne	1dcac <argp_error@@Base+0x1008>
   1dc70:	str	r8, [r4, #8]
   1dc74:	ldrb	r3, [r6]
   1dc78:	cmp	r3, #58	; 0x3a
   1dc7c:	moveq	r2, #58	; 0x3a
   1dc80:	movne	r2, #63	; 0x3f
   1dc84:	b	1d860 <argp_error@@Base+0xbbc>
   1dc88:	movw	r0, #5048	; 0x13b8
   1dc8c:	movt	r0, #3
   1dc90:	ldr	r2, [r9]
   1dc94:	movw	r1, #104	; 0x68
   1dc98:	movt	r1, #2
   1dc9c:	mov	r3, r8
   1dca0:	ldr	r0, [r0]
   1dca4:	bl	11a3c <fprintf@plt>
   1dca8:	b	1dc1c <argp_error@@Base+0xf78>
   1dcac:	movw	r0, #5048	; 0x13b8
   1dcb0:	movt	r0, #3
   1dcb4:	ldr	r2, [r9]
   1dcb8:	movw	r1, #104	; 0x68
   1dcbc:	movt	r1, #2
   1dcc0:	mov	r3, r8
   1dcc4:	ldr	r0, [r0]
   1dcc8:	bl	11a3c <fprintf@plt>
   1dccc:	b	1dc70 <argp_error@@Base+0xfcc>
   1dcd0:	strd	r4, [sp, #-16]!
   1dcd4:	movw	r5, #5020	; 0x139c
   1dcd8:	movt	r5, #3
   1dcdc:	str	r6, [sp, #8]
   1dce0:	movw	r4, #5320	; 0x14c8
   1dce4:	movt	r4, #3
   1dce8:	str	lr, [sp, #12]
   1dcec:	sub	sp, sp, #16
   1dcf0:	ldr	lr, [sp, #32]
   1dcf4:	ldr	ip, [r5]
   1dcf8:	ldr	r6, [sp, #36]	; 0x24
   1dcfc:	str	lr, [sp]
   1dd00:	ldr	lr, [sp, #40]	; 0x28
   1dd04:	str	ip, [r4]
   1dd08:	ldr	ip, [r5, #4]
   1dd0c:	str	r6, [sp, #4]
   1dd10:	str	r4, [sp, #8]
   1dd14:	str	lr, [sp, #12]
   1dd18:	str	ip, [r4, #4]
   1dd1c:	bl	1d734 <argp_error@@Base+0xa90>
   1dd20:	ldr	ip, [r4]
   1dd24:	movw	r3, #5668	; 0x1624
   1dd28:	movt	r3, #3
   1dd2c:	ldr	r1, [r4, #8]
   1dd30:	ldr	r2, [r4, #12]
   1dd34:	str	ip, [r5]
   1dd38:	str	r1, [r5, #8]
   1dd3c:	str	r2, [r3]
   1dd40:	add	sp, sp, #16
   1dd44:	ldrd	r4, [sp]
   1dd48:	ldr	r6, [sp, #8]
   1dd4c:	add	sp, sp, #12
   1dd50:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd54:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1dd58:	movw	r4, #5320	; 0x14c8
   1dd5c:	movt	r4, #3
   1dd60:	strd	r6, [sp, #8]
   1dd64:	movw	r6, #5020	; 0x139c
   1dd68:	movt	r6, #3
   1dd6c:	strd	r8, [sp, #16]
   1dd70:	subs	r9, r0, #0
   1dd74:	strd	sl, [sp, #24]
   1dd78:	ldm	r6, {r5, sl}
   1dd7c:	str	lr, [sp, #32]
   1dd80:	sub	sp, sp, #20
   1dd84:	str	r1, [sp, #4]
   1dd88:	stm	r4, {r5, sl}
   1dd8c:	ble	1e160 <argp_error@@Base+0x14bc>
   1dd90:	mov	r3, #0
   1dd94:	mov	r8, r2
   1dd98:	cmp	r5, r3
   1dd9c:	str	r3, [r4, #12]
   1dda0:	beq	1de70 <argp_error@@Base+0x11cc>
   1dda4:	ldr	r3, [r4, #16]
   1dda8:	cmp	r3, #0
   1ddac:	beq	1de7c <argp_error@@Base+0x11d8>
   1ddb0:	ldrb	r3, [r2]
   1ddb4:	sub	r2, r3, #43	; 0x2b
   1ddb8:	tst	r2, #253	; 0xfd
   1ddbc:	ldrbeq	r3, [r8, #1]
   1ddc0:	addeq	r8, r8, #1
   1ddc4:	cmp	r3, #58	; 0x3a
   1ddc8:	ldr	r3, [r4, #20]
   1ddcc:	moveq	sl, #0
   1ddd0:	cmp	r3, #0
   1ddd4:	beq	1debc <argp_error@@Base+0x1218>
   1ddd8:	ldrb	r2, [r3]
   1dddc:	cmp	r2, #0
   1dde0:	beq	1debc <argp_error@@Base+0x1218>
   1dde4:	add	r7, r3, #1
   1dde8:	mov	r0, r8
   1ddec:	str	r3, [sp, #12]
   1ddf0:	str	r7, [r4, #20]
   1ddf4:	ldrb	fp, [r3]
   1ddf8:	mov	r1, fp
   1ddfc:	str	fp, [sp, #8]
   1de00:	bl	11a24 <strchr@plt>
   1de04:	ldrd	r2, [sp, #8]
   1de08:	ldrb	r1, [r3, #1]
   1de0c:	cmp	r1, #0
   1de10:	sub	r1, fp, #58	; 0x3a
   1de14:	addeq	r5, r5, #1
   1de18:	streq	r5, [r4]
   1de1c:	cmp	r0, #0
   1de20:	cmpne	r1, #1
   1de24:	bls	1e088 <argp_error@@Base+0x13e4>
   1de28:	ldrb	r1, [r0, #1]
   1de2c:	cmp	r1, #58	; 0x3a
   1de30:	beq	1e0a4 <argp_error@@Base+0x1400>
   1de34:	ldr	r1, [r4, #8]
   1de38:	ldr	r7, [r4, #12]
   1de3c:	mov	r0, r2
   1de40:	movw	r3, #5668	; 0x1624
   1de44:	movt	r3, #3
   1de48:	str	r5, [r6]
   1de4c:	str	r1, [r6, #8]
   1de50:	str	r7, [r3]
   1de54:	add	sp, sp, #20
   1de58:	ldrd	r4, [sp]
   1de5c:	ldrd	r6, [sp, #8]
   1de60:	ldrd	r8, [sp, #16]
   1de64:	ldrd	sl, [sp, #24]
   1de68:	add	sp, sp, #32
   1de6c:	pop	{pc}		; (ldr pc, [sp], #4)
   1de70:	mov	r3, #1
   1de74:	mov	r5, r3
   1de78:	str	r3, [r4]
   1de7c:	mov	r3, #0
   1de80:	str	r3, [r4, #20]
   1de84:	str	r5, [r4, #28]
   1de88:	str	r5, [r4, #32]
   1de8c:	ldrb	r2, [r8]
   1de90:	cmp	r2, #45	; 0x2d
   1de94:	beq	1df64 <argp_error@@Base+0x12c0>
   1de98:	cmp	r2, #43	; 0x2b
   1de9c:	mov	r1, r3
   1dea0:	str	r3, [r4, #24]
   1dea4:	addeq	r8, r8, #1
   1dea8:	mov	r3, #1
   1deac:	str	r3, [r4, #16]
   1deb0:	ldrb	r3, [r8]
   1deb4:	cmp	r3, #58	; 0x3a
   1deb8:	beq	1dfa8 <argp_error@@Base+0x1304>
   1debc:	mov	r2, r5
   1dec0:	ldr	r1, [r4, #24]
   1dec4:	ldr	r3, [r4, #32]
   1dec8:	ldr	r0, [r4, #28]
   1decc:	cmp	r3, r5
   1ded0:	movgt	r3, r5
   1ded4:	strgt	r5, [r4, #32]
   1ded8:	cmp	r5, r0
   1dedc:	movge	r5, r0
   1dee0:	strlt	r5, [r4, #28]
   1dee4:	cmp	r1, #1
   1dee8:	beq	1dfbc <argp_error@@Base+0x1318>
   1deec:	cmp	r9, r2
   1def0:	beq	1e030 <argp_error@@Base+0x138c>
   1def4:	ldr	fp, [sp, #4]
   1def8:	movw	r1, #63276	; 0xf72c
   1defc:	movt	r1, #1
   1df00:	strd	r2, [sp, #8]
   1df04:	ldr	r7, [fp, r2, lsl #2]
   1df08:	mov	r0, r7
   1df0c:	bl	11778 <strcmp@plt>
   1df10:	cmp	r0, #0
   1df14:	ldr	r2, [sp, #8]
   1df18:	bne	1df78 <argp_error@@Base+0x12d4>
   1df1c:	ldr	r3, [sp, #12]
   1df20:	add	r2, r2, #1
   1df24:	ldr	r5, [r4, #28]
   1df28:	str	r2, [r4]
   1df2c:	cmp	r5, r3
   1df30:	beq	1e0ec <argp_error@@Base+0x1448>
   1df34:	cmp	r2, r3
   1df38:	beq	1df50 <argp_error@@Base+0x12ac>
   1df3c:	mov	r0, fp
   1df40:	movw	r1, #5320	; 0x14c8
   1df44:	movt	r1, #3
   1df48:	bl	1cdf4 <argp_error@@Base+0x150>
   1df4c:	ldr	r5, [r4, #28]
   1df50:	mov	r2, r9
   1df54:	mov	r3, r9
   1df58:	str	r9, [r4]
   1df5c:	str	r9, [r4, #32]
   1df60:	b	1e034 <argp_error@@Base+0x1390>
   1df64:	mov	r3, #2
   1df68:	add	r8, r8, #1
   1df6c:	mov	r1, r3
   1df70:	str	r3, [r4, #24]
   1df74:	b	1dea8 <argp_error@@Base+0x1204>
   1df78:	ldrb	r3, [r7]
   1df7c:	cmp	r3, #45	; 0x2d
   1df80:	beq	1e054 <argp_error@@Base+0x13b0>
   1df84:	ldr	r3, [r4, #24]
   1df88:	cmp	r3, #0
   1df8c:	beq	1e15c <argp_error@@Base+0x14b8>
   1df90:	add	r5, r2, #1
   1df94:	mov	r2, #1
   1df98:	ldr	r1, [r4, #8]
   1df9c:	str	r5, [r4]
   1dfa0:	str	r7, [r4, #12]
   1dfa4:	b	1de3c <argp_error@@Base+0x1198>
   1dfa8:	cmp	r1, #1
   1dfac:	mov	r3, r5
   1dfb0:	mov	r2, r5
   1dfb4:	mov	sl, #0
   1dfb8:	bne	1deec <argp_error@@Base+0x1248>
   1dfbc:	cmp	r5, r3
   1dfc0:	beq	1e06c <argp_error@@Base+0x13c8>
   1dfc4:	cmp	r2, r3
   1dfc8:	beq	1dfe0 <argp_error@@Base+0x133c>
   1dfcc:	movw	r1, #5320	; 0x14c8
   1dfd0:	movt	r1, #3
   1dfd4:	ldr	r0, [sp, #4]
   1dfd8:	bl	1cdf4 <argp_error@@Base+0x150>
   1dfdc:	ldr	r3, [r4]
   1dfe0:	cmp	r9, r3
   1dfe4:	ble	1e020 <argp_error@@Base+0x137c>
   1dfe8:	ldr	r2, [sp, #4]
   1dfec:	add	r1, r2, r3, lsl #2
   1dff0:	b	1e004 <argp_error@@Base+0x1360>
   1dff4:	add	r3, r3, #1
   1dff8:	cmp	r9, r3
   1dffc:	str	r3, [r4]
   1e000:	beq	1e080 <argp_error@@Base+0x13dc>
   1e004:	ldr	r2, [r1], #4
   1e008:	ldrb	r0, [r2]
   1e00c:	cmp	r0, #45	; 0x2d
   1e010:	bne	1dff4 <argp_error@@Base+0x1350>
   1e014:	ldrb	r2, [r2, #1]
   1e018:	cmp	r2, #0
   1e01c:	beq	1dff4 <argp_error@@Base+0x1350>
   1e020:	mov	r2, r3
   1e024:	cmp	r9, r2
   1e028:	str	r3, [r4, #32]
   1e02c:	bne	1def4 <argp_error@@Base+0x1250>
   1e030:	ldr	r5, [r4, #28]
   1e034:	cmp	r3, r5
   1e038:	moveq	r5, r2
   1e03c:	mvnne	r2, #0
   1e040:	ldr	r1, [r4, #8]
   1e044:	strne	r5, [r4]
   1e048:	mvneq	r2, #0
   1e04c:	ldr	r7, [r4, #12]
   1e050:	b	1de3c <argp_error@@Base+0x1198>
   1e054:	ldrb	r3, [r7, #1]
   1e058:	cmp	r3, #0
   1e05c:	beq	1df84 <argp_error@@Base+0x12e0>
   1e060:	add	r3, r7, #1
   1e064:	mov	r5, r2
   1e068:	b	1dde4 <argp_error@@Base+0x1140>
   1e06c:	cmp	r2, r3
   1e070:	beq	1dfe0 <argp_error@@Base+0x133c>
   1e074:	mov	r3, r2
   1e078:	str	r2, [r4, #28]
   1e07c:	b	1dfe0 <argp_error@@Base+0x133c>
   1e080:	mov	r2, r9
   1e084:	b	1e024 <argp_error@@Base+0x1380>
   1e088:	cmp	sl, #0
   1e08c:	bne	1e10c <argp_error@@Base+0x1468>
   1e090:	mov	r1, fp
   1e094:	mov	r2, #63	; 0x3f
   1e098:	str	fp, [r4, #8]
   1e09c:	ldr	r7, [r4, #12]
   1e0a0:	b	1de3c <argp_error@@Base+0x1198>
   1e0a4:	ldrb	r1, [r0, #2]
   1e0a8:	ldrb	r3, [r3, #1]
   1e0ac:	cmp	r1, #58	; 0x3a
   1e0b0:	beq	1e138 <argp_error@@Base+0x1494>
   1e0b4:	cmp	r3, #0
   1e0b8:	bne	1e0f8 <argp_error@@Base+0x1454>
   1e0bc:	cmp	r9, r5
   1e0c0:	beq	1e168 <argp_error@@Base+0x14c4>
   1e0c4:	ldr	r3, [sp, #4]
   1e0c8:	ldr	r1, [r4, #8]
   1e0cc:	ldr	r7, [r3, r5, lsl #2]
   1e0d0:	add	r3, r5, #1
   1e0d4:	mov	r5, r3
   1e0d8:	str	r3, [r4]
   1e0dc:	str	r7, [r4, #12]
   1e0e0:	mov	r3, #0
   1e0e4:	str	r3, [r4, #20]
   1e0e8:	b	1de3c <argp_error@@Base+0x1198>
   1e0ec:	mov	r5, r2
   1e0f0:	str	r2, [r4, #28]
   1e0f4:	b	1df50 <argp_error@@Base+0x12ac>
   1e0f8:	add	r5, r5, #1
   1e0fc:	ldr	r1, [r4, #8]
   1e100:	str	r5, [r4]
   1e104:	str	r7, [r4, #12]
   1e108:	b	1e0e0 <argp_error@@Base+0x143c>
   1e10c:	ldr	r3, [sp, #4]
   1e110:	movw	r0, #5048	; 0x13b8
   1e114:	movt	r0, #3
   1e118:	movw	r1, #76	; 0x4c
   1e11c:	movt	r1, #2
   1e120:	ldr	r0, [r0]
   1e124:	ldr	r2, [r3]
   1e128:	mov	r3, fp
   1e12c:	bl	11a3c <fprintf@plt>
   1e130:	ldr	r5, [r4]
   1e134:	b	1e090 <argp_error@@Base+0x13ec>
   1e138:	cmp	r3, #0
   1e13c:	ldr	r1, [r4, #8]
   1e140:	moveq	r7, r3
   1e144:	addne	r5, r5, #1
   1e148:	mov	r3, #0
   1e14c:	strne	r5, [r4]
   1e150:	str	r7, [r4, #12]
   1e154:	str	r3, [r4, #20]
   1e158:	b	1de3c <argp_error@@Base+0x1198>
   1e15c:	mov	r5, r2
   1e160:	mvn	r2, #0
   1e164:	b	1de34 <argp_error@@Base+0x1190>
   1e168:	cmp	sl, #0
   1e16c:	bne	1e190 <argp_error@@Base+0x14ec>
   1e170:	str	fp, [r4, #8]
   1e174:	mov	r1, fp
   1e178:	ldrb	r3, [r8]
   1e17c:	ldr	r7, [r4, #12]
   1e180:	cmp	r3, #58	; 0x3a
   1e184:	moveq	r2, #58	; 0x3a
   1e188:	movne	r2, #63	; 0x3f
   1e18c:	b	1e0e0 <argp_error@@Base+0x143c>
   1e190:	ldr	r3, [sp, #4]
   1e194:	movw	r0, #5048	; 0x13b8
   1e198:	movt	r0, #3
   1e19c:	movw	r1, #104	; 0x68
   1e1a0:	movt	r1, #2
   1e1a4:	ldr	r0, [r0]
   1e1a8:	ldr	r2, [r3]
   1e1ac:	mov	r3, fp
   1e1b0:	bl	11a3c <fprintf@plt>
   1e1b4:	ldr	r5, [r4]
   1e1b8:	b	1e170 <argp_error@@Base+0x14cc>
   1e1bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1e1c0:	mov	r5, r3
   1e1c4:	strd	r6, [sp, #8]
   1e1c8:	mov	r7, r1
   1e1cc:	mov	r6, r2
   1e1d0:	str	r8, [sp, #16]
   1e1d4:	mov	r8, r0
   1e1d8:	mov	r0, #36	; 0x24
   1e1dc:	str	lr, [sp, #20]
   1e1e0:	bl	18b40 <argp_parse@@Base+0x1df0>
   1e1e4:	subs	r4, r0, #0
   1e1e8:	beq	1e22c <argp_error@@Base+0x1588>
   1e1ec:	mov	r3, #0
   1e1f0:	mov	r0, #200	; 0xc8
   1e1f4:	str	r8, [r4]
   1e1f8:	str	r7, [r4, #4]
   1e1fc:	str	r6, [r4, #8]
   1e200:	str	r5, [r4, #12]
   1e204:	str	r3, [r4, #16]
   1e208:	str	r3, [r4, #20]
   1e20c:	bl	18b40 <argp_parse@@Base+0x1df0>
   1e210:	cmp	r0, #0
   1e214:	mov	r3, r0
   1e218:	str	r0, [r4, #24]
   1e21c:	addne	r2, r0, #200	; 0xc8
   1e220:	strne	r0, [r4, #28]
   1e224:	strne	r2, [r4, #32]
   1e228:	beq	1e244 <argp_error@@Base+0x15a0>
   1e22c:	mov	r0, r4
   1e230:	ldrd	r4, [sp]
   1e234:	ldrd	r6, [sp, #8]
   1e238:	ldr	r8, [sp, #16]
   1e23c:	add	sp, sp, #20
   1e240:	pop	{pc}		; (ldr pc, [sp], #4)
   1e244:	mov	r0, r4
   1e248:	mov	r4, r3
   1e24c:	bl	17d88 <argp_parse@@Base+0x1038>
   1e250:	b	1e22c <argp_error@@Base+0x1588>
   1e254:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e258:	mov	r5, r0
   1e25c:	ldr	r4, [r0, #16]
   1e260:	ldr	r3, [r0, #24]
   1e264:	strd	r6, [sp, #8]
   1e268:	strd	r8, [sp, #16]
   1e26c:	ldr	r8, [r0, #28]
   1e270:	strd	sl, [sp, #24]
   1e274:	add	r4, r3, r4
   1e278:	str	lr, [sp, #32]
   1e27c:	sub	sp, sp, #12
   1e280:	cmp	r4, r8
   1e284:	bcc	1e300 <argp_error@@Base+0x165c>
   1e288:	b	1e55c <argp_error@@Base+0x18b8>
   1e28c:	sub	r2, fp, r4
   1e290:	add	r2, r2, r6
   1e294:	cmp	r2, r3
   1e298:	blt	1e59c <argp_error@@Base+0x18f8>
   1e29c:	ldr	sl, [r5, #12]
   1e2a0:	sub	r7, r3, #1
   1e2a4:	str	r3, [sp, #4]
   1e2a8:	cmp	sl, #0
   1e2ac:	bge	1e3bc <argp_error@@Base+0x1718>
   1e2b0:	cmp	r8, fp
   1e2b4:	bls	1e734 <argp_error@@Base+0x1a90>
   1e2b8:	sub	r0, r7, r6
   1e2bc:	sub	r2, r8, fp
   1e2c0:	add	r0, r4, r0
   1e2c4:	mov	r1, fp
   1e2c8:	bl	117e4 <memmove@plt>
   1e2cc:	ldr	r2, [r5, #20]
   1e2d0:	mov	r3, #0
   1e2d4:	str	r3, [r5, #20]
   1e2d8:	ldr	r3, [sp, #4]
   1e2dc:	ldr	r8, [r5, #28]
   1e2e0:	sub	r7, r7, r2
   1e2e4:	add	r7, r4, r7
   1e2e8:	sub	fp, r7, fp
   1e2ec:	add	r4, r4, r3
   1e2f0:	sub	r8, r8, fp
   1e2f4:	str	r8, [r5, #28]
   1e2f8:	cmp	r4, r8
   1e2fc:	bcs	1e558 <argp_error@@Base+0x18b4>
   1e300:	ldr	r6, [r5, #20]
   1e304:	cmp	r6, #0
   1e308:	bne	1e368 <argp_error@@Base+0x16c4>
   1e30c:	ldr	r7, [r5, #4]
   1e310:	cmp	r7, #0
   1e314:	beq	1e580 <argp_error@@Base+0x18dc>
   1e318:	ldr	r2, [r5, #32]
   1e31c:	add	r3, r8, r7
   1e320:	cmp	r2, r3
   1e324:	bls	1e6a8 <argp_error@@Base+0x1a04>
   1e328:	add	r6, r4, r7
   1e32c:	sub	r2, r8, r4
   1e330:	mov	r1, r4
   1e334:	mov	r0, r6
   1e338:	bl	117e4 <memmove@plt>
   1e33c:	ldr	r3, [r5, #28]
   1e340:	mov	r0, r4
   1e344:	mov	r2, r7
   1e348:	mov	r1, #32
   1e34c:	mov	r4, r6
   1e350:	add	r3, r3, r7
   1e354:	str	r3, [r5, #28]
   1e358:	bl	11a84 <memset@plt>
   1e35c:	ldr	r8, [r5, #28]
   1e360:	mov	r6, r7
   1e364:	str	r7, [r5, #20]
   1e368:	sub	r9, r8, r4
   1e36c:	mov	r1, #10
   1e370:	mov	r2, r9
   1e374:	mov	r0, r4
   1e378:	bl	11ac0 <memchr@plt>
   1e37c:	cmp	r6, #0
   1e380:	mov	fp, r0
   1e384:	bge	1e390 <argp_error@@Base+0x16ec>
   1e388:	mov	r6, #0
   1e38c:	str	r6, [r5, #20]
   1e390:	cmp	fp, #0
   1e394:	ldr	r3, [r5, #8]
   1e398:	bne	1e28c <argp_error@@Base+0x15e8>
   1e39c:	add	r1, r6, r9
   1e3a0:	cmp	r1, r3
   1e3a4:	bcc	1e7a4 <argp_error@@Base+0x1b00>
   1e3a8:	ldr	sl, [r5, #12]
   1e3ac:	sub	r7, r3, #1
   1e3b0:	cmp	sl, #0
   1e3b4:	blt	1e738 <argp_error@@Base+0x1a94>
   1e3b8:	mov	fp, r8
   1e3bc:	add	r7, r7, #1
   1e3c0:	sub	r6, r7, r6
   1e3c4:	adds	r6, r4, r6
   1e3c8:	bcs	1e5e0 <argp_error@@Base+0x193c>
   1e3cc:	bl	119dc <__ctype_b_loc@plt>
   1e3d0:	mov	r3, r6
   1e3d4:	ldr	ip, [r0]
   1e3d8:	b	1e3e8 <argp_error@@Base+0x1744>
   1e3dc:	cmp	r4, r0
   1e3e0:	mov	r3, r0
   1e3e4:	bhi	1e5e4 <argp_error@@Base+0x1940>
   1e3e8:	ldrb	r1, [r3]
   1e3ec:	mov	r7, r3
   1e3f0:	sub	r0, r3, #1
   1e3f4:	lsl	r1, r1, #1
   1e3f8:	ldrh	r1, [ip, r1]
   1e3fc:	tst	r1, #1
   1e400:	beq	1e3dc <argp_error@@Base+0x1738>
   1e404:	add	r0, r3, #1
   1e408:	cmp	r4, r0
   1e40c:	bcs	1e5f4 <argp_error@@Base+0x1950>
   1e410:	cmp	r4, r3
   1e414:	movhi	r6, r0
   1e418:	movhi	r7, r6
   1e41c:	bls	1e438 <argp_error@@Base+0x1794>
   1e420:	b	1e44c <argp_error@@Base+0x17a8>
   1e424:	ldrb	r1, [r6, #-1]
   1e428:	lsl	r1, r1, #1
   1e42c:	ldrh	r1, [ip, r1]
   1e430:	tst	r1, #1
   1e434:	beq	1e448 <argp_error@@Base+0x17a4>
   1e438:	cmp	r4, r3
   1e43c:	mov	r6, r3
   1e440:	sub	r3, r3, #1
   1e444:	bne	1e424 <argp_error@@Base+0x1780>
   1e448:	mov	r7, r0
   1e44c:	add	r3, r9, #1
   1e450:	add	r3, r4, r3
   1e454:	cmp	r7, r3
   1e458:	beq	1e5b0 <argp_error@@Base+0x190c>
   1e45c:	add	r1, r6, #1
   1e460:	sub	r3, r7, r1
   1e464:	cmp	r3, sl
   1e468:	bge	1e5c8 <argp_error@@Base+0x1924>
   1e46c:	cmp	r7, r8
   1e470:	bcs	1e5c0 <argp_error@@Base+0x191c>
   1e474:	ldr	r3, [r5, #32]
   1e478:	add	sl, sl, #1
   1e47c:	sub	r3, r3, r8
   1e480:	cmp	r3, sl
   1e484:	bgt	1e750 <argp_error@@Base+0x1aac>
   1e488:	ldr	r3, [r5]
   1e48c:	ldr	r0, [r5, #24]
   1e490:	cmp	r0, r6
   1e494:	bcs	1e4a8 <argp_error@@Base+0x1804>
   1e498:	sub	r2, r6, r0
   1e49c:	mov	r1, #1
   1e4a0:	bl	11850 <fwrite_unlocked@plt>
   1e4a4:	ldr	r3, [r5]
   1e4a8:	ldr	r2, [r3, #20]
   1e4ac:	ldr	r1, [r3, #24]
   1e4b0:	cmp	r2, r1
   1e4b4:	addcc	r1, r2, #1
   1e4b8:	strcc	r1, [r3, #20]
   1e4bc:	movcc	r3, #10
   1e4c0:	strbcc	r3, [r2]
   1e4c4:	bcs	1e794 <argp_error@@Base+0x1af0>
   1e4c8:	ldr	fp, [r5, #24]
   1e4cc:	sub	r4, r4, fp
   1e4d0:	sub	r3, r7, fp
   1e4d4:	add	r9, r9, r4
   1e4d8:	mov	r8, r3
   1e4dc:	mov	r4, fp
   1e4e0:	ldr	r2, [r5, #12]
   1e4e4:	cmp	r2, r3
   1e4e8:	ble	1e50c <argp_error@@Base+0x1868>
   1e4ec:	add	r3, r9, #1
   1e4f0:	add	r3, fp, r3
   1e4f4:	cmp	r7, r3
   1e4f8:	bne	1e628 <argp_error@@Base+0x1984>
   1e4fc:	ldr	r3, [r5, #32]
   1e500:	sub	r3, r3, r7
   1e504:	cmp	r2, r3
   1e508:	bgt	1e628 <argp_error@@Base+0x1984>
   1e50c:	cmp	r2, #0
   1e510:	ble	1e530 <argp_error@@Base+0x188c>
   1e514:	mov	r3, #0
   1e518:	mov	r1, #32
   1e51c:	strb	r1, [r4], #1
   1e520:	add	r3, r3, #1
   1e524:	ldr	r2, [r5, #12]
   1e528:	cmp	r2, r3
   1e52c:	bgt	1e51c <argp_error@@Base+0x1878>
   1e530:	cmp	r4, r7
   1e534:	bcc	1e68c <argp_error@@Base+0x19e8>
   1e538:	cmp	r2, #0
   1e53c:	sub	r8, r9, r8
   1e540:	add	r8, r4, r8
   1e544:	mvneq	r2, #0
   1e548:	cmp	r4, r8
   1e54c:	str	r2, [r5, #20]
   1e550:	str	r8, [r5, #28]
   1e554:	bcc	1e300 <argp_error@@Base+0x165c>
   1e558:	ldr	r3, [r5, #24]
   1e55c:	sub	r8, r8, r3
   1e560:	str	r8, [r5, #16]
   1e564:	add	sp, sp, #12
   1e568:	ldrd	r4, [sp]
   1e56c:	ldrd	r6, [sp, #8]
   1e570:	ldrd	r8, [sp, #16]
   1e574:	ldrd	sl, [sp, #24]
   1e578:	add	sp, sp, #32
   1e57c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e580:	sub	r9, r8, r4
   1e584:	mov	r1, #10
   1e588:	mov	r2, r9
   1e58c:	mov	r0, r4
   1e590:	bl	11ac0 <memchr@plt>
   1e594:	mov	fp, r0
   1e598:	b	1e390 <argp_error@@Base+0x16ec>
   1e59c:	mov	r3, #0
   1e5a0:	add	r4, fp, #1
   1e5a4:	ldr	r8, [r5, #28]
   1e5a8:	str	r3, [r5, #20]
   1e5ac:	b	1e2f8 <argp_error@@Base+0x1654>
   1e5b0:	ldr	r3, [r5, #32]
   1e5b4:	sub	r3, r3, r6
   1e5b8:	cmp	r3, sl
   1e5bc:	ble	1e46c <argp_error@@Base+0x17c8>
   1e5c0:	add	r1, r6, #1
   1e5c4:	sub	r3, r7, r1
   1e5c8:	mov	r2, #10
   1e5cc:	sub	r8, r7, r4
   1e5d0:	mov	fp, r4
   1e5d4:	mov	r4, r1
   1e5d8:	strb	r2, [r6]
   1e5dc:	b	1e4e0 <argp_error@@Base+0x183c>
   1e5e0:	add	r7, r6, #1
   1e5e4:	cmp	r4, r7
   1e5e8:	bcs	1e5f4 <argp_error@@Base+0x1950>
   1e5ec:	mov	r6, r7
   1e5f0:	b	1e44c <argp_error@@Base+0x17a8>
   1e5f4:	cmp	r6, fp
   1e5f8:	bcc	1e6fc <argp_error@@Base+0x1a58>
   1e5fc:	cmp	r6, fp
   1e600:	beq	1e6e8 <argp_error@@Base+0x1a44>
   1e604:	bl	119dc <__ctype_b_loc@plt>
   1e608:	ldr	r1, [r0]
   1e60c:	mov	r7, r6
   1e610:	ldrb	r3, [r7, #1]!
   1e614:	lsl	r3, r3, #1
   1e618:	ldrh	r3, [r1, r3]
   1e61c:	tst	r3, #1
   1e620:	bne	1e610 <argp_error@@Base+0x196c>
   1e624:	b	1e44c <argp_error@@Base+0x17a8>
   1e628:	cmp	r2, #0
   1e62c:	movgt	r6, #0
   1e630:	movgt	sl, #32
   1e634:	bgt	1e654 <argp_error@@Base+0x19b0>
   1e638:	b	1e530 <argp_error@@Base+0x188c>
   1e63c:	str	ip, [r0, #20]
   1e640:	add	r6, r6, #1
   1e644:	strb	sl, [r2]
   1e648:	ldr	r2, [r5, #12]
   1e64c:	cmp	r2, r6
   1e650:	ble	1e530 <argp_error@@Base+0x188c>
   1e654:	ldr	r0, [r5]
   1e658:	ldr	r2, [r0, #20]
   1e65c:	ldr	r1, [r0, #24]
   1e660:	add	ip, r2, #1
   1e664:	cmp	r2, r1
   1e668:	bcc	1e63c <argp_error@@Base+0x1998>
   1e66c:	mov	r1, #32
   1e670:	add	r6, r6, #1
   1e674:	bl	11ae4 <__overflow@plt>
   1e678:	ldr	r2, [r5, #12]
   1e67c:	cmp	r6, r2
   1e680:	blt	1e654 <argp_error@@Base+0x19b0>
   1e684:	cmp	r4, r7
   1e688:	bcs	1e538 <argp_error@@Base+0x1894>
   1e68c:	add	r2, fp, r9
   1e690:	mov	r1, r7
   1e694:	sub	r2, r2, r7
   1e698:	mov	r0, r4
   1e69c:	bl	117e4 <memmove@plt>
   1e6a0:	ldr	r2, [r5, #12]
   1e6a4:	b	1e538 <argp_error@@Base+0x1894>
   1e6a8:	mov	r8, #32
   1e6ac:	b	1e6bc <argp_error@@Base+0x1a18>
   1e6b0:	add	r6, r6, #1
   1e6b4:	cmp	r7, r6
   1e6b8:	beq	1e35c <argp_error@@Base+0x16b8>
   1e6bc:	ldr	r0, [r5]
   1e6c0:	ldr	r3, [r0, #20]
   1e6c4:	ldr	r2, [r0, #24]
   1e6c8:	add	r1, r3, #1
   1e6cc:	cmp	r3, r2
   1e6d0:	strcc	r1, [r0, #20]
   1e6d4:	strbcc	r8, [r3]
   1e6d8:	bcc	1e6b0 <argp_error@@Base+0x1a0c>
   1e6dc:	mov	r1, #32
   1e6e0:	bl	11ae4 <__overflow@plt>
   1e6e4:	b	1e6b0 <argp_error@@Base+0x1a0c>
   1e6e8:	mov	r3, #0
   1e6ec:	add	r4, r6, #1
   1e6f0:	ldr	r8, [r5, #28]
   1e6f4:	str	r3, [r5, #20]
   1e6f8:	b	1e2f8 <argp_error@@Base+0x1654>
   1e6fc:	add	r7, r6, #1
   1e700:	b	1e724 <argp_error@@Base+0x1a80>
   1e704:	bl	119dc <__ctype_b_loc@plt>
   1e708:	ldrb	r3, [r7]
   1e70c:	add	r7, r7, #1
   1e710:	ldr	r1, [r0]
   1e714:	lsl	r3, r3, #1
   1e718:	ldrh	r3, [r1, r3]
   1e71c:	tst	r3, #1
   1e720:	bne	1e60c <argp_error@@Base+0x1968>
   1e724:	cmp	fp, r7
   1e728:	mov	r6, r7
   1e72c:	bne	1e704 <argp_error@@Base+0x1a60>
   1e730:	b	1e5fc <argp_error@@Base+0x1958>
   1e734:	add	r1, r9, r6
   1e738:	sub	r7, r7, r1
   1e73c:	str	r1, [r5, #20]
   1e740:	add	r8, r8, r7
   1e744:	ldr	r3, [r5, #24]
   1e748:	str	r8, [r5, #28]
   1e74c:	b	1e55c <argp_error@@Base+0x18b8>
   1e750:	sub	r8, r8, r7
   1e754:	mov	r1, r7
   1e758:	mov	r2, r8
   1e75c:	add	r0, r6, sl
   1e760:	bl	117e4 <memmove@plt>
   1e764:	ldr	r3, [r5, #12]
   1e768:	mov	r2, r6
   1e76c:	mov	r1, #10
   1e770:	mov	fp, r4
   1e774:	strb	r1, [r2], #1
   1e778:	add	r7, r3, #1
   1e77c:	add	r7, r6, r7
   1e780:	add	r9, r7, r8
   1e784:	sub	r8, r7, r4
   1e788:	sub	r9, r9, r4
   1e78c:	mov	r4, r2
   1e790:	b	1e4e0 <argp_error@@Base+0x183c>
   1e794:	mov	r0, r3
   1e798:	mov	r1, #10
   1e79c:	bl	11ae4 <__overflow@plt>
   1e7a0:	b	1e4c8 <argp_error@@Base+0x1824>
   1e7a4:	str	r1, [r5, #20]
   1e7a8:	ldr	r3, [r5, #24]
   1e7ac:	ldr	r8, [r5, #28]
   1e7b0:	b	1e55c <argp_error@@Base+0x18b8>
   1e7b4:	str	r4, [sp, #-8]!
   1e7b8:	mov	r4, r0
   1e7bc:	str	lr, [sp, #4]
   1e7c0:	bl	1e254 <argp_error@@Base+0x15b0>
   1e7c4:	ldr	r0, [r4, #24]
   1e7c8:	ldr	r2, [r4, #28]
   1e7cc:	cmp	r2, r0
   1e7d0:	bls	1e7e8 <argp_error@@Base+0x1b44>
   1e7d4:	sub	r2, r2, r0
   1e7d8:	mov	r1, #1
   1e7dc:	ldr	r3, [r4]
   1e7e0:	bl	11850 <fwrite_unlocked@plt>
   1e7e4:	ldr	r0, [r4, #24]
   1e7e8:	bl	17d88 <argp_parse@@Base+0x1038>
   1e7ec:	mov	r0, r4
   1e7f0:	ldr	r4, [sp]
   1e7f4:	ldr	lr, [sp, #4]
   1e7f8:	add	sp, sp, #8
   1e7fc:	b	17d88 <argp_parse@@Base+0x1038>
   1e800:	strd	r4, [sp, #-16]!
   1e804:	mov	r4, r0
   1e808:	mov	r5, r1
   1e80c:	str	r6, [sp, #8]
   1e810:	str	lr, [sp, #12]
   1e814:	bl	1e254 <argp_error@@Base+0x15b0>
   1e818:	mov	r1, #1
   1e81c:	ldr	r3, [r4]
   1e820:	ldr	r2, [r4, #24]
   1e824:	ldr	ip, [r4, #28]
   1e828:	mov	r0, r2
   1e82c:	sub	r2, ip, r2
   1e830:	bl	11850 <fwrite_unlocked@plt>
   1e834:	mov	ip, r0
   1e838:	ldr	r0, [r4, #24]
   1e83c:	ldr	r3, [r4, #28]
   1e840:	sub	r2, r3, r0
   1e844:	cmp	ip, r2
   1e848:	bne	1e8a8 <argp_error@@Base+0x1c04>
   1e84c:	ldr	r1, [r4, #32]
   1e850:	mov	r3, #0
   1e854:	str	r3, [r4, #16]
   1e858:	str	r0, [r4, #28]
   1e85c:	sub	r1, r1, r0
   1e860:	cmp	r1, r5
   1e864:	movcs	r3, #1
   1e868:	bcs	1e894 <argp_error@@Base+0x1bf0>
   1e86c:	adds	r5, r1, r5
   1e870:	bcs	1e8d0 <argp_error@@Base+0x1c2c>
   1e874:	mov	r1, r5
   1e878:	bl	18b7c <argp_parse@@Base+0x1e2c>
   1e87c:	cmp	r0, #0
   1e880:	beq	1e8d0 <argp_error@@Base+0x1c2c>
   1e884:	add	r1, r0, r5
   1e888:	mov	r3, #1
   1e88c:	str	r0, [r4, #24]
   1e890:	strd	r0, [r4, #28]
   1e894:	ldrd	r4, [sp]
   1e898:	mov	r0, r3
   1e89c:	ldr	r6, [sp, #8]
   1e8a0:	add	sp, sp, #12
   1e8a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e8a8:	ldr	lr, [r4, #16]
   1e8ac:	sub	r3, r3, ip
   1e8b0:	add	r1, r0, ip
   1e8b4:	sub	r2, r3, r0
   1e8b8:	str	r3, [r4, #28]
   1e8bc:	sub	ip, lr, ip
   1e8c0:	str	ip, [r4, #16]
   1e8c4:	bl	117e4 <memmove@plt>
   1e8c8:	mov	r3, #0
   1e8cc:	b	1e894 <argp_error@@Base+0x1bf0>
   1e8d0:	bl	11a54 <__errno_location@plt>
   1e8d4:	mov	r2, #12
   1e8d8:	mov	r3, #0
   1e8dc:	str	r2, [r0]
   1e8e0:	b	1e894 <argp_error@@Base+0x1bf0>
   1e8e4:	ldr	ip, [r0, #28]
   1e8e8:	ldr	r3, [r0, #32]
   1e8ec:	sub	r3, r3, ip
   1e8f0:	cmp	r3, r1
   1e8f4:	bcc	1e900 <argp_error@@Base+0x1c5c>
   1e8f8:	mov	r0, #1
   1e8fc:	bx	lr
   1e900:	b	1e800 <argp_error@@Base+0x1b5c>
   1e904:	push	{r1, r2, r3}
   1e908:	mov	r1, #150	; 0x96
   1e90c:	strd	r4, [sp, #-20]!	; 0xffffffec
   1e910:	mov	r5, r0
   1e914:	strd	r6, [sp, #8]
   1e918:	str	lr, [sp, #16]
   1e91c:	sub	sp, sp, #8
   1e920:	ldr	r7, [sp, #28]
   1e924:	add	r6, sp, #32
   1e928:	ldr	r0, [r5, #28]
   1e92c:	ldr	r3, [r5, #32]
   1e930:	sub	r2, r3, r0
   1e934:	cmp	r1, r2
   1e938:	bhi	1e988 <argp_error@@Base+0x1ce4>
   1e93c:	sub	r4, r3, r0
   1e940:	mov	r2, r7
   1e944:	str	r6, [sp, #4]
   1e948:	mov	r1, r4
   1e94c:	mov	r3, r6
   1e950:	bl	11b98 <vsnprintf@plt>
   1e954:	cmp	r0, r4
   1e958:	add	r1, r0, #1
   1e95c:	bcs	1e928 <argp_error@@Base+0x1c84>
   1e960:	ldr	r3, [r5, #28]
   1e964:	add	r3, r3, r0
   1e968:	str	r3, [r5, #28]
   1e96c:	add	sp, sp, #8
   1e970:	ldrd	r4, [sp]
   1e974:	ldrd	r6, [sp, #8]
   1e978:	ldr	lr, [sp, #16]
   1e97c:	add	sp, sp, #20
   1e980:	add	sp, sp, #12
   1e984:	bx	lr
   1e988:	mov	r0, r5
   1e98c:	bl	1e800 <argp_error@@Base+0x1b5c>
   1e990:	cmp	r0, #0
   1e994:	beq	1e9a4 <argp_error@@Base+0x1d00>
   1e998:	ldr	r0, [r5, #28]
   1e99c:	ldr	r3, [r5, #32]
   1e9a0:	b	1e93c <argp_error@@Base+0x1c98>
   1e9a4:	mvn	r0, #0
   1e9a8:	b	1e96c <argp_error@@Base+0x1cc8>
   1e9ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e9b0:	mov	r7, r0
   1e9b4:	ldr	r6, [pc, #72]	; 1ea04 <argp_error@@Base+0x1d60>
   1e9b8:	ldr	r5, [pc, #72]	; 1ea08 <argp_error@@Base+0x1d64>
   1e9bc:	add	r6, pc, r6
   1e9c0:	add	r5, pc, r5
   1e9c4:	sub	r6, r6, r5
   1e9c8:	mov	r8, r1
   1e9cc:	mov	r9, r2
   1e9d0:	bl	11728 <calloc@plt-0x20>
   1e9d4:	asrs	r6, r6, #2
   1e9d8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e9dc:	mov	r4, #0
   1e9e0:	add	r4, r4, #1
   1e9e4:	ldr	r3, [r5], #4
   1e9e8:	mov	r2, r9
   1e9ec:	mov	r1, r8
   1e9f0:	mov	r0, r7
   1e9f4:	blx	r3
   1e9f8:	cmp	r6, r4
   1e9fc:	bne	1e9e0 <argp_error@@Base+0x1d3c>
   1ea00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ea04:	andeq	r2, r1, r8, asr #10
   1ea08:	andeq	r2, r1, r0, asr #10
   1ea0c:	bx	lr

Disassembly of section .fini:

0001ea10 <.fini>:
   1ea10:	push	{r3, lr}
   1ea14:	pop	{r3, pc}
