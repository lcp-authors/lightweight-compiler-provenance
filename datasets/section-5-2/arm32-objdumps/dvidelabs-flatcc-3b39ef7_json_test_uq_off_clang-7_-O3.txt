
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf32-littlearm


Disassembly of section .init:

00014e10 <.init>:
   14e10:	push	{r3, lr}
   14e14:	bl	14f8c <_start@@Base+0x3c>
   14e18:	pop	{r3, pc}

Disassembly of section .plt:

00014e1c <raise@plt-0x14>:
   14e1c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e20:	ldr	lr, [pc, #4]	; 14e2c <raise@plt-0x4>
   14e24:	add	lr, pc, lr
   14e28:	ldr	pc, [lr, #8]!
   14e2c:	ldrdeq	r8, [r4], -r4

00014e30 <raise@plt>:
   14e30:	add	ip, pc, #0, 12
   14e34:	add	ip, ip, #72, 20	; 0x48000
   14e38:	ldr	pc, [ip, #468]!	; 0x1d4

00014e3c <strcmp@plt>:
   14e3c:	add	ip, pc, #0, 12
   14e40:	add	ip, ip, #72, 20	; 0x48000
   14e44:	ldr	pc, [ip, #460]!	; 0x1cc

00014e48 <memmove@plt>:
   14e48:	add	ip, pc, #0, 12
   14e4c:	add	ip, ip, #72, 20	; 0x48000
   14e50:	ldr	pc, [ip, #452]!	; 0x1c4

00014e54 <free@plt>:
   14e54:	add	ip, pc, #0, 12
   14e58:	add	ip, ip, #72, 20	; 0x48000
   14e5c:	ldr	pc, [ip, #444]!	; 0x1bc

00014e60 <memcpy@plt>:
   14e60:	add	ip, pc, #0, 12
   14e64:	add	ip, ip, #72, 20	; 0x48000
   14e68:	ldr	pc, [ip, #436]!	; 0x1b4

00014e6c <memcmp@plt>:
   14e6c:	add	ip, pc, #0, 12
   14e70:	add	ip, ip, #72, 20	; 0x48000
   14e74:	ldr	pc, [ip, #428]!	; 0x1ac

00014e78 <__isinff@plt>:
   14e78:	add	ip, pc, #0, 12
   14e7c:	add	ip, ip, #72, 20	; 0x48000
   14e80:	ldr	pc, [ip, #420]!	; 0x1a4

00014e84 <__isinf@plt>:
   14e84:	add	ip, pc, #0, 12
   14e88:	add	ip, ip, #72, 20	; 0x48000
   14e8c:	ldr	pc, [ip, #412]!	; 0x19c

00014e90 <realloc@plt>:
   14e90:	add	ip, pc, #0, 12
   14e94:	add	ip, ip, #72, 20	; 0x48000
   14e98:	ldr	pc, [ip, #404]!	; 0x194

00014e9c <fwrite@plt>:
   14e9c:	add	ip, pc, #0, 12
   14ea0:	add	ip, ip, #72, 20	; 0x48000
   14ea4:	ldr	pc, [ip, #396]!	; 0x18c

00014ea8 <malloc@plt>:
   14ea8:	add	ip, pc, #0, 12
   14eac:	add	ip, ip, #72, 20	; 0x48000
   14eb0:	ldr	pc, [ip, #388]!	; 0x184

00014eb4 <__libc_start_main@plt>:
   14eb4:	add	ip, pc, #0, 12
   14eb8:	add	ip, ip, #72, 20	; 0x48000
   14ebc:	ldr	pc, [ip, #380]!	; 0x17c

00014ec0 <__gmon_start__@plt>:
   14ec0:	add	ip, pc, #0, 12
   14ec4:	add	ip, ip, #72, 20	; 0x48000
   14ec8:	ldr	pc, [ip, #372]!	; 0x174

00014ecc <strlen@plt>:
   14ecc:	add	ip, pc, #0, 12
   14ed0:	add	ip, ip, #72, 20	; 0x48000
   14ed4:	ldr	pc, [ip, #364]!	; 0x16c

00014ed8 <fprintf@plt>:
   14ed8:	add	ip, pc, #0, 12
   14edc:	add	ip, ip, #72, 20	; 0x48000
   14ee0:	ldr	pc, [ip, #356]!	; 0x164

00014ee4 <posix_memalign@plt>:
   14ee4:	add	ip, pc, #0, 12
   14ee8:	add	ip, ip, #72, 20	; 0x48000
   14eec:	ldr	pc, [ip, #348]!	; 0x15c

00014ef0 <memset@plt>:
   14ef0:	add	ip, pc, #0, 12
   14ef4:	add	ip, ip, #72, 20	; 0x48000
   14ef8:	ldr	pc, [ip, #340]!	; 0x154

00014efc <strncpy@plt>:
   14efc:	add	ip, pc, #0, 12
   14f00:	add	ip, ip, #72, 20	; 0x48000
   14f04:	ldr	pc, [ip, #332]!	; 0x14c

00014f08 <strtod@plt>:
   14f08:	add	ip, pc, #0, 12
   14f0c:	add	ip, ip, #72, 20	; 0x48000
   14f10:	ldr	pc, [ip, #324]!	; 0x144

00014f14 <memchr@plt>:
   14f14:	add	ip, pc, #0, 12
   14f18:	add	ip, ip, #72, 20	; 0x48000
   14f1c:	ldr	pc, [ip, #316]!	; 0x13c

00014f20 <fputc@plt>:
   14f20:	add	ip, pc, #0, 12
   14f24:	add	ip, ip, #72, 20	; 0x48000
   14f28:	ldr	pc, [ip, #308]!	; 0x134

00014f2c <sprintf@plt>:
   14f2c:	add	ip, pc, #0, 12
   14f30:	add	ip, ip, #72, 20	; 0x48000
   14f34:	ldr	pc, [ip, #300]!	; 0x12c

00014f38 <abort@plt>:
   14f38:	add	ip, pc, #0, 12
   14f3c:	add	ip, ip, #72, 20	; 0x48000
   14f40:	ldr	pc, [ip, #292]!	; 0x124

00014f44 <__assert_fail@plt>:
   14f44:	add	ip, pc, #0, 12
   14f48:	add	ip, ip, #72, 20	; 0x48000
   14f4c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00014f50 <_start@@Base>:
   14f50:	mov	fp, #0
   14f54:	mov	lr, #0
   14f58:	pop	{r1}		; (ldr r1, [sp], #4)
   14f5c:	mov	r2, sp
   14f60:	push	{r2}		; (str r2, [sp, #-4]!)
   14f64:	push	{r0}		; (str r0, [sp, #-4]!)
   14f68:	ldr	ip, [pc, #16]	; 14f80 <_start@@Base+0x30>
   14f6c:	push	{ip}		; (str ip, [sp, #-4]!)
   14f70:	ldr	r0, [pc, #12]	; 14f84 <_start@@Base+0x34>
   14f74:	ldr	r3, [pc, #12]	; 14f88 <_start@@Base+0x38>
   14f78:	bl	14eb4 <__libc_start_main@plt>
   14f7c:	bl	14f38 <abort@plt>
   14f80:	andeq	r6, r4, r0, ror #5
   14f84:	andeq	r5, r1, r8, asr #26
   14f88:	andeq	r6, r4, r0, lsl #5
   14f8c:	ldr	r3, [pc, #20]	; 14fa8 <_start@@Base+0x58>
   14f90:	ldr	r2, [pc, #20]	; 14fac <_start@@Base+0x5c>
   14f94:	add	r3, pc, r3
   14f98:	ldr	r2, [r3, r2]
   14f9c:	cmp	r2, #0
   14fa0:	bxeq	lr
   14fa4:	b	14ec0 <__gmon_start__@plt>
   14fa8:	andeq	r8, r4, r4, rrx
   14fac:	andeq	r0, r0, ip, rrx
   14fb0:	ldr	r0, [pc, #24]	; 14fd0 <_start@@Base+0x80>
   14fb4:	ldr	r3, [pc, #24]	; 14fd4 <_start@@Base+0x84>
   14fb8:	cmp	r3, r0
   14fbc:	bxeq	lr
   14fc0:	ldr	r3, [pc, #16]	; 14fd8 <_start@@Base+0x88>
   14fc4:	cmp	r3, #0
   14fc8:	bxeq	lr
   14fcc:	bx	r3
   14fd0:	andeq	sp, r5, r4, asr #6
   14fd4:	andeq	sp, r5, r4, asr #6
   14fd8:	andeq	r0, r0, r0
   14fdc:	ldr	r0, [pc, #36]	; 15008 <_start@@Base+0xb8>
   14fe0:	ldr	r1, [pc, #36]	; 1500c <_start@@Base+0xbc>
   14fe4:	sub	r1, r1, r0
   14fe8:	asr	r1, r1, #2
   14fec:	add	r1, r1, r1, lsr #31
   14ff0:	asrs	r1, r1, #1
   14ff4:	bxeq	lr
   14ff8:	ldr	r3, [pc, #16]	; 15010 <_start@@Base+0xc0>
   14ffc:	cmp	r3, #0
   15000:	bxeq	lr
   15004:	bx	r3
   15008:	andeq	sp, r5, r4, asr #6
   1500c:	andeq	sp, r5, r4, asr #6
   15010:	andeq	r0, r0, r0
   15014:	push	{r4, lr}
   15018:	ldr	r4, [pc, #24]	; 15038 <_start@@Base+0xe8>
   1501c:	ldrb	r3, [r4]
   15020:	cmp	r3, #0
   15024:	popne	{r4, pc}
   15028:	bl	14fb0 <_start@@Base+0x60>
   1502c:	mov	r3, #1
   15030:	strb	r3, [r4]
   15034:	pop	{r4, pc}
   15038:	andeq	sp, r5, r0, asr r3
   1503c:	b	14fdc <_start@@Base+0x8c>

00015040 <test_json@@Base>:
   15040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15044:	add	fp, sp, #28
   15048:	sub	sp, sp, #364	; 0x16c
   1504c:	mov	r6, r0
   15050:	add	r0, sp, #100	; 0x64
   15054:	mov	r7, r3
   15058:	mov	r9, r2
   1505c:	mov	r4, r1
   15060:	bl	2d7bc <flatcc_builder_init@@Base>
   15064:	add	r0, sp, #12
   15068:	mov	r1, #0
   1506c:	bl	457b0 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15070:	ldr	r0, [fp, #12]
   15074:	ldr	r5, [fp, #8]
   15078:	ldr	r8, [fp, #16]
   1507c:	and	r1, r0, #1
   15080:	tst	r0, #16
   15084:	strb	r1, [sp, #38]	; 0x26
   15088:	uxtb	r1, r0
   1508c:	ubfx	r2, r1, #1, #1
   15090:	strb	r2, [sp, #39]	; 0x27
   15094:	ubfx	r2, r1, #2, #1
   15098:	strb	r2, [sp, #40]	; 0x28
   1509c:	ubfx	r1, r1, #3, #1
   150a0:	strb	r1, [sp, #41]	; 0x29
   150a4:	movne	r1, #2
   150a8:	strbne	r1, [sp, #37]	; 0x25
   150ac:	tst	r0, #32
   150b0:	movne	r0, #0
   150b4:	strbne	r0, [sp, #39]	; 0x27
   150b8:	movwne	r0, #258	; 0x102
   150bc:	strhne	r0, [sp, #37]	; 0x25
   150c0:	mov	r0, r4
   150c4:	bl	14ecc <strlen@plt>
   150c8:	mov	r3, r0
   150cc:	ldm	r6, {r0, r1}
   150d0:	str	r5, [sp]
   150d4:	mov	r2, r4
   150d8:	stmib	sp, {r0, r1}
   150dc:	add	r0, sp, #100	; 0x64
   150e0:	add	r1, sp, #60	; 0x3c
   150e4:	bl	38c60 <flatcc_json_parser_table_as_root@@Base>
   150e8:	cmp	r0, r7
   150ec:	bne	1519c <test_json@@Base+0x15c>
   150f0:	mov	r5, #0
   150f4:	cmp	r7, #0
   150f8:	beq	15104 <test_json@@Base+0xc4>
   150fc:	mov	r4, #0
   15100:	b	15178 <test_json@@Base+0x138>
   15104:	add	r0, sp, #100	; 0x64
   15108:	sub	r1, fp, #56	; 0x38
   1510c:	bl	321d8 <flatcc_builder_finalize_aligned_buffer@@Base>
   15110:	ldr	r2, [r6]
   15114:	ldr	r3, [r6, #12]
   15118:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1511c:	mov	r4, r0
   15120:	bl	33568 <flatcc_verify_table_as_root@@Base>
   15124:	cmp	r0, #0
   15128:	bne	15260 <test_json@@Base+0x220>
   1512c:	ldr	r0, [r6, #8]
   15130:	ldr	r3, [r6]
   15134:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15138:	add	r6, sp, #12
   1513c:	mov	r1, r4
   15140:	str	r0, [sp]
   15144:	mov	r0, r6
   15148:	bl	44e64 <flatcc_json_printer_table_as_root@@Base>
   1514c:	sub	r1, fp, #60	; 0x3c
   15150:	mov	r0, r6
   15154:	bl	458dc <flatcc_json_printer_get_buffer@@Base>
   15158:	mov	r6, r0
   1515c:	cmp	r0, #0
   15160:	beq	151d0 <test_json@@Base+0x190>
   15164:	mov	r0, r9
   15168:	mov	r1, r6
   1516c:	bl	14e3c <strcmp@plt>
   15170:	cmp	r0, #0
   15174:	bne	151d0 <test_json@@Base+0x190>
   15178:	mov	r0, r4
   1517c:	bl	32318 <flatcc_builder_aligned_free@@Base>
   15180:	add	r0, sp, #100	; 0x64
   15184:	bl	2dd64 <flatcc_builder_clear@@Base>
   15188:	add	r0, sp, #12
   1518c:	bl	45964 <flatcc_json_printer_clear@@Base>
   15190:	mov	r0, r5
   15194:	sub	sp, fp, #28
   15198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1519c:	movw	r6, #54088	; 0xd348
   151a0:	cmp	r7, #0
   151a4:	movt	r6, #5
   151a8:	beq	1523c <test_json@@Base+0x1fc>
   151ac:	ldr	r5, [r6]
   151b0:	cmp	r0, #0
   151b4:	bne	153b8 <test_json@@Base+0x378>
   151b8:	mov	r0, r7
   151bc:	bl	347b8 <flatcc_json_parser_error_string@@Base>
   151c0:	movw	r1, #25370	; 0x631a
   151c4:	mov	r3, r0
   151c8:	movt	r1, #4
   151cc:	b	15250 <test_json@@Base+0x210>
   151d0:	movw	r7, #54088	; 0xd348
   151d4:	movw	r1, #25584	; 0x63f0
   151d8:	mov	r2, r8
   151dc:	movt	r7, #5
   151e0:	movt	r1, #4
   151e4:	ldr	r0, [r7]
   151e8:	bl	14ed8 <fprintf@plt>
   151ec:	ldr	r0, [r7]
   151f0:	movw	r5, #36409	; 0x8e39
   151f4:	mov	r2, r6
   151f8:	movt	r5, #4
   151fc:	mov	r1, r5
   15200:	bl	14ed8 <fprintf@plt>
   15204:	ldr	r3, [r7]
   15208:	movw	r0, #25637	; 0x6425
   1520c:	mov	r1, #10
   15210:	mov	r2, #1
   15214:	movt	r0, #4
   15218:	bl	14e9c <fwrite@plt>
   1521c:	ldr	r0, [r7]
   15220:	mov	r1, r5
   15224:	mov	r2, r9
   15228:	bl	14ed8 <fprintf@plt>
   1522c:	mvn	r5, #0
   15230:	cmp	r4, #0
   15234:	beq	150fc <test_json@@Base+0xbc>
   15238:	b	1529c <test_json@@Base+0x25c>
   1523c:	ldr	r5, [r6]
   15240:	bl	347b8 <flatcc_json_parser_error_string@@Base>
   15244:	movw	r1, #25434	; 0x635a
   15248:	mov	r3, r0
   1524c:	movt	r1, #4
   15250:	mov	r0, r5
   15254:	mov	r2, r8
   15258:	bl	14ed8 <fprintf@plt>
   1525c:	b	153f4 <test_json@@Base+0x3b4>
   15260:	movw	r1, #54088	; 0xd348
   15264:	movt	r1, #5
   15268:	ldr	r5, [r1]
   1526c:	bl	328e4 <flatcc_verify_error_string@@Base>
   15270:	movw	r1, #25470	; 0x637e
   15274:	movw	r2, #25509	; 0x63a5
   15278:	str	r0, [sp]
   1527c:	mov	r0, r5
   15280:	mov	r3, r8
   15284:	movt	r1, #4
   15288:	movt	r2, #4
   1528c:	bl	14ed8 <fprintf@plt>
   15290:	mvn	r5, #0
   15294:	cmp	r4, #0
   15298:	beq	150fc <test_json@@Base+0xbc>
   1529c:	movw	r0, #54088	; 0xd348
   152a0:	ldr	r9, [fp, #-56]	; 0xffffffc8
   152a4:	movw	r1, #36402	; 0x8e32
   152a8:	movw	r2, #25648	; 0x6430
   152ac:	movt	r0, #5
   152b0:	movt	r1, #4
   152b4:	movt	r2, #4
   152b8:	ldr	r6, [r0]
   152bc:	mov	r0, r6
   152c0:	bl	14ed8 <fprintf@plt>
   152c4:	cmp	r9, #0
   152c8:	beq	153a0 <test_json@@Base+0x360>
   152cc:	sub	r7, fp, #49	; 0x31
   152d0:	mov	r8, #0
   152d4:	ands	sl, r8, #15
   152d8:	bne	15310 <test_json@@Base+0x2d0>
   152dc:	cmp	r8, #0
   152e0:	beq	152f8 <test_json@@Base+0x2b8>
   152e4:	movw	r1, #36407	; 0x8e37
   152e8:	mov	r0, r6
   152ec:	mov	r2, r7
   152f0:	movt	r1, #4
   152f4:	bl	14ed8 <fprintf@plt>
   152f8:	movw	r1, #36413	; 0x8e3d
   152fc:	mov	r0, r6
   15300:	mov	r2, r8
   15304:	movt	r1, #4
   15308:	bl	14ed8 <fprintf@plt>
   1530c:	b	15324 <test_json@@Base+0x2e4>
   15310:	tst	r8, #7
   15314:	bne	15324 <test_json@@Base+0x2e4>
   15318:	mov	r0, #32
   1531c:	mov	r1, r6
   15320:	bl	14f20 <fputc@plt>
   15324:	ldrb	r2, [r4, r8]
   15328:	movw	r1, #36421	; 0x8e45
   1532c:	mov	r0, r6
   15330:	movt	r1, #4
   15334:	bl	14ed8 <fprintf@plt>
   15338:	ldrb	r0, [r4, r8]
   1533c:	add	r8, r8, #1
   15340:	sub	r1, r0, #32
   15344:	uxtb	r1, r1
   15348:	cmp	r1, #94	; 0x5e
   1534c:	mov	r1, #0
   15350:	movwhi	r0, #46	; 0x2e
   15354:	cmp	r9, r8
   15358:	strb	r0, [r7, sl]
   1535c:	add	r0, r7, sl
   15360:	strb	r1, [r0, #1]
   15364:	bne	152d4 <test_json@@Base+0x294>
   15368:	tst	r9, #15
   1536c:	beq	153a0 <test_json@@Base+0x360>
   15370:	movw	r8, #36427	; 0x8e4b
   15374:	add	r7, r9, #1
   15378:	movt	r8, #4
   1537c:	mov	r0, r8
   15380:	mov	r1, #3
   15384:	mov	r2, #1
   15388:	mov	r3, r6
   1538c:	bl	14e9c <fwrite@plt>
   15390:	add	r0, r7, #1
   15394:	tst	r7, #15
   15398:	mov	r7, r0
   1539c:	bne	1537c <test_json@@Base+0x33c>
   153a0:	movw	r1, #36407	; 0x8e37
   153a4:	sub	r2, fp, #49	; 0x31
   153a8:	mov	r0, r6
   153ac:	movt	r1, #4
   153b0:	bl	14ed8 <fprintf@plt>
   153b4:	b	15178 <test_json@@Base+0x138>
   153b8:	bl	347b8 <flatcc_json_parser_error_string@@Base>
   153bc:	movw	r1, #25332	; 0x62f4
   153c0:	mov	r3, r0
   153c4:	mov	r0, r5
   153c8:	mov	r2, r8
   153cc:	movt	r1, #4
   153d0:	bl	14ed8 <fprintf@plt>
   153d4:	ldr	r5, [r6]
   153d8:	mov	r0, r7
   153dc:	bl	347b8 <flatcc_json_parser_error_string@@Base>
   153e0:	movw	r1, #25403	; 0x633b
   153e4:	mov	r2, r0
   153e8:	mov	r0, r5
   153ec:	movt	r1, #4
   153f0:	bl	14ed8 <fprintf@plt>
   153f4:	ldr	r0, [r6]
   153f8:	movw	r1, #36409	; 0x8e39
   153fc:	mov	r2, r4
   15400:	movt	r1, #4
   15404:	bl	14ed8 <fprintf@plt>
   15408:	movw	r4, #54088	; 0xd348
   1540c:	ldr	r0, [sp, #76]	; 0x4c
   15410:	movt	r4, #5
   15414:	ldr	r3, [r4]
   15418:	cmp	r0, #2
   1541c:	blt	15448 <test_json@@Base+0x408>
   15420:	mov	r5, #0
   15424:	mov	r0, #32
   15428:	mov	r1, r3
   1542c:	bl	14f20 <fputc@plt>
   15430:	ldr	r0, [sp, #76]	; 0x4c
   15434:	ldr	r3, [r4]
   15438:	add	r5, r5, #1
   1543c:	sub	r0, r0, #1
   15440:	cmp	r5, r0
   15444:	blt	15424 <test_json@@Base+0x3e4>
   15448:	movw	r0, #25467	; 0x637b
   1544c:	mov	r1, #2
   15450:	mov	r2, #1
   15454:	movt	r0, #4
   15458:	bl	14e9c <fwrite@plt>
   1545c:	mvn	r5, #0
   15460:	b	150fc <test_json@@Base+0xbc>

00015464 <edge_case_tests@@Base>:
   15464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15468:	add	fp, sp, #28
   1546c:	sub	sp, sp, #28
   15470:	movw	r4, #37360	; 0x91f0
   15474:	movw	r1, #25662	; 0x643e
   15478:	movw	r2, #25715	; 0x6473
   1547c:	mov	r0, #158	; 0x9e
   15480:	mov	r9, #0
   15484:	mov	r3, #0
   15488:	movt	r4, #4
   1548c:	str	r0, [sp, #8]
   15490:	movt	r1, #4
   15494:	movt	r2, #4
   15498:	str	r9, [sp]
   1549c:	str	r9, [sp, #4]
   154a0:	mov	r0, r4
   154a4:	bl	15040 <test_json@@Base>
   154a8:	movw	r5, #25745	; 0x6491
   154ac:	movw	sl, #25778	; 0x64b2
   154b0:	str	r0, [sp, #24]
   154b4:	mov	r7, #2
   154b8:	mov	r0, #168	; 0xa8
   154bc:	mov	r3, #0
   154c0:	movt	r5, #4
   154c4:	movt	sl, #4
   154c8:	stm	sp, {r7, r9}
   154cc:	str	r0, [sp, #8]
   154d0:	mov	r0, r4
   154d4:	mov	r1, r5
   154d8:	mov	r2, sl
   154dc:	bl	15040 <test_json@@Base>
   154e0:	movw	r1, #25812	; 0x64d4
   154e4:	movw	r2, #25851	; 0x64fb
   154e8:	str	r0, [sp, #20]
   154ec:	mov	r0, #172	; 0xac
   154f0:	mov	r3, #0
   154f4:	str	r9, [sp]
   154f8:	str	r7, [sp, #4]
   154fc:	str	r0, [sp, #8]
   15500:	movt	r1, #4
   15504:	movt	r2, #4
   15508:	mov	r0, r4
   1550c:	bl	15040 <test_json@@Base>
   15510:	movw	r2, #25880	; 0x6518
   15514:	str	r0, [sp, #16]
   15518:	mov	r0, #176	; 0xb0
   1551c:	mov	r1, #4
   15520:	mov	r3, #0
   15524:	str	r7, [sp]
   15528:	str	r1, [sp, #4]
   1552c:	str	r0, [sp, #8]
   15530:	movt	r2, #4
   15534:	mov	r0, r4
   15538:	mov	r1, r5
   1553c:	bl	15040 <test_json@@Base>
   15540:	mov	r1, #8
   15544:	movw	r2, #25933	; 0x654d
   15548:	str	r0, [sp, #12]
   1554c:	mov	r0, #180	; 0xb4
   15550:	mov	r3, #0
   15554:	str	r9, [sp]
   15558:	str	r1, [sp, #4]
   1555c:	movw	r1, #25899	; 0x652b
   15560:	str	r0, [sp, #8]
   15564:	movt	r2, #4
   15568:	mov	r0, r4
   1556c:	movt	r1, #4
   15570:	bl	15040 <test_json@@Base>
   15574:	movw	r1, #26207	; 0x665f
   15578:	mov	r6, r0
   1557c:	mov	r0, #195	; 0xc3
   15580:	stm	sp, {r7, r9}
   15584:	mov	r2, sl
   15588:	mov	r3, #0
   1558c:	str	r0, [sp, #8]
   15590:	movt	r1, #4
   15594:	mov	r0, r4
   15598:	bl	15040 <test_json@@Base>
   1559c:	movw	r5, #26245	; 0x6685
   155a0:	movw	r2, #26295	; 0x66b7
   155a4:	mov	r7, r0
   155a8:	mov	r0, #199	; 0xc7
   155ac:	mov	sl, #1
   155b0:	mov	r3, #0
   155b4:	str	r9, [sp, #4]
   155b8:	movt	r5, #4
   155bc:	str	r0, [sp, #8]
   155c0:	movt	r2, #4
   155c4:	mov	r0, r4
   155c8:	str	sl, [sp]
   155cc:	mov	r1, r5
   155d0:	bl	15040 <test_json@@Base>
   155d4:	movw	r2, #26322	; 0x66d2
   155d8:	mov	r8, r0
   155dc:	mov	r0, #203	; 0xcb
   155e0:	mov	r1, r5
   155e4:	mov	r3, #0
   155e8:	str	sl, [sp]
   155ec:	str	sl, [sp, #4]
   155f0:	str	r0, [sp, #8]
   155f4:	movt	r2, #4
   155f8:	mov	r0, r4
   155fc:	bl	15040 <test_json@@Base>
   15600:	mov	r1, #209	; 0xd1
   15604:	ldr	r2, [sp, #20]
   15608:	mov	r3, #0
   1560c:	str	sl, [sp]
   15610:	str	r9, [sp, #4]
   15614:	str	r1, [sp, #8]
   15618:	ldr	r1, [sp, #24]
   1561c:	orr	r1, r2, r1
   15620:	ldr	r2, [sp, #16]
   15624:	orr	r1, r1, r2
   15628:	ldr	r2, [sp, #12]
   1562c:	orr	r1, r1, r2
   15630:	movw	r2, #26295	; 0x66b7
   15634:	orr	r1, r1, r6
   15638:	movt	r2, #4
   1563c:	orr	r1, r1, r7
   15640:	orr	r1, r1, r8
   15644:	orr	r5, r1, r0
   15648:	movw	r1, #26345	; 0x66e9
   1564c:	mov	r0, r4
   15650:	movt	r1, #4
   15654:	bl	15040 <test_json@@Base>
   15658:	orr	r0, r5, r0
   1565c:	sub	sp, fp, #28
   15660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015664 <error_case_tests@@Base>:
   15664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15668:	add	fp, sp, #28
   1566c:	sub	sp, sp, #36	; 0x24
   15670:	movw	r4, #37360	; 0x91f0
   15674:	movw	r1, #26458	; 0x675a
   15678:	movw	r0, #285	; 0x11d
   1567c:	mov	r6, #0
   15680:	mov	r2, #0
   15684:	mov	r3, #13
   15688:	movt	r4, #4
   1568c:	str	r0, [sp, #8]
   15690:	movt	r1, #4
   15694:	str	r6, [sp]
   15698:	str	r6, [sp, #4]
   1569c:	mov	r0, r4
   156a0:	bl	15040 <test_json@@Base>
   156a4:	movw	r1, #26484	; 0x6774
   156a8:	str	r0, [sp, #32]
   156ac:	movw	r0, #287	; 0x11f
   156b0:	mov	r2, #0
   156b4:	mov	r3, #13
   156b8:	str	r6, [sp]
   156bc:	str	r6, [sp, #4]
   156c0:	str	r0, [sp, #8]
   156c4:	movt	r1, #4
   156c8:	mov	r0, r4
   156cc:	bl	15040 <test_json@@Base>
   156d0:	movw	r1, #26581	; 0x67d5
   156d4:	str	r0, [sp, #28]
   156d8:	movw	r0, #289	; 0x121
   156dc:	mov	r2, #0
   156e0:	mov	r3, #13
   156e4:	str	r6, [sp]
   156e8:	str	r6, [sp, #4]
   156ec:	str	r0, [sp, #8]
   156f0:	movt	r1, #4
   156f4:	mov	r0, r4
   156f8:	bl	15040 <test_json@@Base>
   156fc:	movw	r1, #26675	; 0x6833
   15700:	str	r0, [sp, #24]
   15704:	movw	r0, #291	; 0x123
   15708:	mov	r2, #0
   1570c:	mov	r3, #13
   15710:	str	r6, [sp]
   15714:	str	r6, [sp, #4]
   15718:	str	r0, [sp, #8]
   1571c:	movt	r1, #4
   15720:	mov	r0, r4
   15724:	bl	15040 <test_json@@Base>
   15728:	movw	r1, #26763	; 0x688b
   1572c:	str	r0, [sp, #20]
   15730:	movw	r0, #293	; 0x125
   15734:	mov	r2, #0
   15738:	mov	r3, #13
   1573c:	str	r6, [sp]
   15740:	str	r6, [sp, #4]
   15744:	str	r0, [sp, #8]
   15748:	movt	r1, #4
   1574c:	mov	r0, r4
   15750:	bl	15040 <test_json@@Base>
   15754:	movw	r1, #26848	; 0x68e0
   15758:	str	r0, [sp, #16]
   1575c:	mov	r0, #296	; 0x128
   15760:	mov	r2, #0
   15764:	mov	r3, #13
   15768:	str	r6, [sp]
   1576c:	str	r6, [sp, #4]
   15770:	str	r0, [sp, #8]
   15774:	movt	r1, #4
   15778:	mov	r0, r4
   1577c:	bl	15040 <test_json@@Base>
   15780:	movw	r1, #27006	; 0x697e
   15784:	mov	r7, r0
   15788:	movw	r0, #299	; 0x12b
   1578c:	mov	r2, #0
   15790:	mov	r3, #13
   15794:	str	r6, [sp]
   15798:	str	r6, [sp, #4]
   1579c:	str	r0, [sp, #8]
   157a0:	movt	r1, #4
   157a4:	mov	r0, r4
   157a8:	bl	15040 <test_json@@Base>
   157ac:	movw	r1, #27161	; 0x6a19
   157b0:	mov	r8, r0
   157b4:	movw	r0, #303	; 0x12f
   157b8:	mov	r2, #0
   157bc:	mov	r3, #13
   157c0:	str	r6, [sp]
   157c4:	str	r6, [sp, #4]
   157c8:	str	r0, [sp, #8]
   157cc:	movt	r1, #4
   157d0:	mov	r0, r4
   157d4:	bl	15040 <test_json@@Base>
   157d8:	movw	r1, #27360	; 0x6ae0
   157dc:	mov	r9, r0
   157e0:	movw	r0, #307	; 0x133
   157e4:	mov	r2, #0
   157e8:	mov	r3, #13
   157ec:	str	r6, [sp]
   157f0:	str	r6, [sp, #4]
   157f4:	str	r0, [sp, #8]
   157f8:	movt	r1, #4
   157fc:	mov	r0, r4
   15800:	bl	15040 <test_json@@Base>
   15804:	movw	r1, #27559	; 0x6ba7
   15808:	mov	sl, r0
   1580c:	movw	r0, #311	; 0x137
   15810:	mov	r2, #0
   15814:	mov	r3, #5
   15818:	str	r6, [sp]
   1581c:	str	r6, [sp, #4]
   15820:	str	r0, [sp, #8]
   15824:	movt	r1, #4
   15828:	mov	r0, r4
   1582c:	bl	15040 <test_json@@Base>
   15830:	movw	r1, #27583	; 0x6bbf
   15834:	mov	r5, r0
   15838:	movw	r0, #314	; 0x13a
   1583c:	mov	r2, #0
   15840:	mov	r3, #5
   15844:	str	r6, [sp]
   15848:	str	r6, [sp, #4]
   1584c:	str	r0, [sp, #8]
   15850:	movt	r1, #4
   15854:	mov	r0, r4
   15858:	bl	15040 <test_json@@Base>
   1585c:	movw	r1, #317	; 0x13d
   15860:	ldr	r2, [sp, #28]
   15864:	mov	r3, #5
   15868:	str	r6, [sp]
   1586c:	str	r6, [sp, #4]
   15870:	str	r1, [sp, #8]
   15874:	ldr	r1, [sp, #32]
   15878:	orr	r1, r2, r1
   1587c:	ldr	r2, [sp, #24]
   15880:	orr	r1, r1, r2
   15884:	ldr	r2, [sp, #20]
   15888:	orr	r1, r1, r2
   1588c:	ldr	r2, [sp, #16]
   15890:	orr	r1, r1, r2
   15894:	mov	r2, #0
   15898:	orr	r1, r1, r7
   1589c:	orr	r1, r1, r8
   158a0:	orr	r1, r1, r9
   158a4:	orr	r1, r1, sl
   158a8:	orr	r1, r1, r5
   158ac:	orr	r5, r1, r0
   158b0:	movw	r1, #27621	; 0x6be5
   158b4:	mov	r0, r4
   158b8:	movt	r1, #4
   158bc:	bl	15040 <test_json@@Base>
   158c0:	orr	r0, r5, r0
   158c4:	sub	sp, fp, #28
   158c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000158cc <base64_tests@@Base>:
   158cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158d0:	add	fp, sp, #28
   158d4:	sub	sp, sp, #20
   158d8:	movw	r4, #37360	; 0x91f0
   158dc:	movw	r1, #27677	; 0x6c1d
   158e0:	movw	r2, #25880	; 0x6518
   158e4:	movw	r0, #369	; 0x171
   158e8:	mov	r8, #0
   158ec:	mov	r3, #0
   158f0:	movt	r4, #4
   158f4:	str	r0, [sp, #8]
   158f8:	movt	r1, #4
   158fc:	movt	r2, #4
   15900:	str	r8, [sp]
   15904:	str	r8, [sp, #4]
   15908:	mov	r0, r4
   1590c:	bl	15040 <test_json@@Base>
   15910:	movw	r1, #27699	; 0x6c33
   15914:	movw	r2, #27738	; 0x6c5a
   15918:	str	r0, [sp, #16]
   1591c:	mov	r0, #372	; 0x174
   15920:	mov	r3, #0
   15924:	str	r8, [sp]
   15928:	str	r8, [sp, #4]
   1592c:	str	r0, [sp, #8]
   15930:	movt	r1, #4
   15934:	movt	r2, #4
   15938:	mov	r0, r4
   1593c:	bl	15040 <test_json@@Base>
   15940:	movw	r6, #27958	; 0x6d36
   15944:	movw	r1, #27773	; 0x6c7d
   15948:	mov	r9, r0
   1594c:	mov	r0, #376	; 0x178
   15950:	mov	r3, #0
   15954:	str	r8, [sp]
   15958:	str	r8, [sp, #4]
   1595c:	movt	r6, #4
   15960:	str	r0, [sp, #8]
   15964:	movt	r1, #4
   15968:	mov	r0, r4
   1596c:	mov	r2, r6
   15970:	bl	15040 <test_json@@Base>
   15974:	movw	r7, #28326	; 0x6ea6
   15978:	movw	r1, #28138	; 0x6dea
   1597c:	mov	sl, r0
   15980:	movw	r0, #379	; 0x17b
   15984:	mov	r3, #0
   15988:	str	r8, [sp]
   1598c:	str	r8, [sp, #4]
   15990:	movt	r7, #4
   15994:	str	r0, [sp, #8]
   15998:	movt	r1, #4
   1599c:	mov	r0, r4
   159a0:	mov	r2, r7
   159a4:	bl	15040 <test_json@@Base>
   159a8:	movw	r1, #28509	; 0x6f5d
   159ac:	mov	r5, r0
   159b0:	movw	r0, #382	; 0x17e
   159b4:	mov	r2, r6
   159b8:	mov	r3, #0
   159bc:	str	r8, [sp]
   159c0:	str	r8, [sp, #4]
   159c4:	str	r0, [sp, #8]
   159c8:	movt	r1, #4
   159cc:	mov	r0, r4
   159d0:	bl	15040 <test_json@@Base>
   159d4:	movw	r1, #28692	; 0x7014
   159d8:	mov	r6, r0
   159dc:	movw	r0, #385	; 0x181
   159e0:	mov	r2, r7
   159e4:	mov	r3, #0
   159e8:	str	r8, [sp]
   159ec:	str	r8, [sp, #4]
   159f0:	str	r0, [sp, #8]
   159f4:	movt	r1, #4
   159f8:	mov	r0, r4
   159fc:	bl	15040 <test_json@@Base>
   15a00:	movw	r1, #28878	; 0x70ce
   15a04:	mov	r7, r0
   15a08:	mov	r0, #388	; 0x184
   15a0c:	mov	r2, #0
   15a10:	mov	r3, #31
   15a14:	str	r8, [sp]
   15a18:	str	r8, [sp, #4]
   15a1c:	str	r0, [sp, #8]
   15a20:	movt	r1, #4
   15a24:	mov	r0, r4
   15a28:	bl	15040 <test_json@@Base>
   15a2c:	movw	r1, #391	; 0x187
   15a30:	mov	r2, #0
   15a34:	mov	r3, #32
   15a38:	str	r8, [sp]
   15a3c:	str	r8, [sp, #4]
   15a40:	str	r1, [sp, #8]
   15a44:	ldr	r1, [sp, #16]
   15a48:	orr	r1, r9, r1
   15a4c:	orr	r1, r1, sl
   15a50:	orr	r1, r1, r5
   15a54:	orr	r1, r1, r6
   15a58:	orr	r1, r1, r7
   15a5c:	orr	r5, r1, r0
   15a60:	movw	r1, #29063	; 0x7187
   15a64:	mov	r0, r4
   15a68:	movt	r1, #4
   15a6c:	bl	15040 <test_json@@Base>
   15a70:	orr	r0, r5, r0
   15a74:	sub	sp, fp, #28
   15a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015a7c <mixed_type_union_tests@@Base>:
   15a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a80:	add	fp, sp, #28
   15a84:	sub	sp, sp, #20
   15a88:	movw	r4, #37376	; 0x9200
   15a8c:	movw	r1, #29251	; 0x7243
   15a90:	movw	r2, #29330	; 0x7292
   15a94:	mov	r0, #432	; 0x1b0
   15a98:	mov	r8, #0
   15a9c:	mov	r3, #0
   15aa0:	movt	r4, #4
   15aa4:	str	r0, [sp, #8]
   15aa8:	movt	r1, #4
   15aac:	movt	r2, #4
   15ab0:	str	r8, [sp]
   15ab4:	str	r8, [sp, #4]
   15ab8:	mov	r0, r4
   15abc:	bl	15040 <test_json@@Base>
   15ac0:	movw	r9, #29532	; 0x735c
   15ac4:	movw	r1, #29401	; 0x72d9
   15ac8:	str	r0, [sp, #16]
   15acc:	movw	r0, #437	; 0x1b5
   15ad0:	mov	r3, #0
   15ad4:	str	r8, [sp]
   15ad8:	str	r8, [sp, #4]
   15adc:	movt	r9, #4
   15ae0:	str	r0, [sp, #8]
   15ae4:	movt	r1, #4
   15ae8:	mov	r0, r4
   15aec:	mov	r2, r9
   15af0:	bl	15040 <test_json@@Base>
   15af4:	movw	r1, #29651	; 0x73d3
   15af8:	mov	sl, r0
   15afc:	movw	r0, #442	; 0x1ba
   15b00:	mov	r2, r9
   15b04:	mov	r3, #0
   15b08:	str	r8, [sp]
   15b0c:	str	r8, [sp, #4]
   15b10:	str	r0, [sp, #8]
   15b14:	movt	r1, #4
   15b18:	mov	r0, r4
   15b1c:	bl	15040 <test_json@@Base>
   15b20:	movw	r1, #29801	; 0x7469
   15b24:	movw	r2, #30022	; 0x7546
   15b28:	mov	r5, r0
   15b2c:	movw	r0, #449	; 0x1c1
   15b30:	mov	r3, #0
   15b34:	str	r8, [sp]
   15b38:	str	r8, [sp, #4]
   15b3c:	str	r0, [sp, #8]
   15b40:	movt	r1, #4
   15b44:	movt	r2, #4
   15b48:	mov	r0, r4
   15b4c:	bl	15040 <test_json@@Base>
   15b50:	movw	r1, #30207	; 0x75ff
   15b54:	movw	r2, #30469	; 0x7705
   15b58:	mov	r6, r0
   15b5c:	movw	r0, #458	; 0x1ca
   15b60:	mov	r3, #0
   15b64:	str	r8, [sp]
   15b68:	str	r8, [sp, #4]
   15b6c:	str	r0, [sp, #8]
   15b70:	movt	r1, #4
   15b74:	movt	r2, #4
   15b78:	mov	r0, r4
   15b7c:	bl	15040 <test_json@@Base>
   15b80:	movw	r1, #30691	; 0x77e3
   15b84:	movw	r2, #31076	; 0x7964
   15b88:	mov	r7, r0
   15b8c:	movw	r0, #469	; 0x1d5
   15b90:	mov	r3, #0
   15b94:	str	r8, [sp]
   15b98:	str	r8, [sp, #4]
   15b9c:	str	r0, [sp, #8]
   15ba0:	movt	r1, #4
   15ba4:	movt	r2, #4
   15ba8:	mov	r0, r4
   15bac:	bl	15040 <test_json@@Base>
   15bb0:	movw	r1, #474	; 0x1da
   15bb4:	mov	r2, r9
   15bb8:	mov	r3, #0
   15bbc:	str	r8, [sp]
   15bc0:	str	r8, [sp, #4]
   15bc4:	str	r1, [sp, #8]
   15bc8:	ldr	r1, [sp, #16]
   15bcc:	orr	r1, sl, r1
   15bd0:	orr	r1, r1, r5
   15bd4:	orr	r1, r1, r6
   15bd8:	orr	r1, r1, r7
   15bdc:	orr	r5, r1, r0
   15be0:	movw	r1, #31402	; 0x7aaa
   15be4:	mov	r0, r4
   15be8:	movt	r1, #4
   15bec:	bl	15040 <test_json@@Base>
   15bf0:	orr	r0, r5, r0
   15bf4:	sub	sp, fp, #28
   15bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015bfc <union_vector_tests@@Base>:
   15bfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c00:	add	fp, sp, #28
   15c04:	sub	sp, sp, #12
   15c08:	movw	r4, #37392	; 0x9210
   15c0c:	movw	r8, #31607	; 0x7b77
   15c10:	movw	r1, #31543	; 0x7b37
   15c14:	movw	r0, #485	; 0x1e5
   15c18:	mov	r7, #0
   15c1c:	mov	r3, #0
   15c20:	movt	r8, #4
   15c24:	movt	r4, #4
   15c28:	str	r0, [sp, #8]
   15c2c:	movt	r1, #4
   15c30:	str	r7, [sp]
   15c34:	str	r7, [sp, #4]
   15c38:	mov	r0, r4
   15c3c:	mov	r2, r8
   15c40:	bl	15040 <test_json@@Base>
   15c44:	movw	r1, #31663	; 0x7baf
   15c48:	movw	r2, #31714	; 0x7be2
   15c4c:	mov	r9, r0
   15c50:	mov	r0, #488	; 0x1e8
   15c54:	mov	r3, #0
   15c58:	str	r7, [sp]
   15c5c:	str	r7, [sp, #4]
   15c60:	str	r0, [sp, #8]
   15c64:	movt	r1, #4
   15c68:	movt	r2, #4
   15c6c:	mov	r0, r4
   15c70:	bl	15040 <test_json@@Base>
   15c74:	movw	r1, #31757	; 0x7c0d
   15c78:	movw	r2, #31834	; 0x7c5a
   15c7c:	mov	sl, r0
   15c80:	movw	r0, #491	; 0x1eb
   15c84:	mov	r3, #0
   15c88:	str	r7, [sp]
   15c8c:	str	r7, [sp, #4]
   15c90:	str	r0, [sp, #8]
   15c94:	movt	r1, #4
   15c98:	movt	r2, #4
   15c9c:	mov	r0, r4
   15ca0:	bl	15040 <test_json@@Base>
   15ca4:	movw	r1, #31902	; 0x7c9e
   15ca8:	movw	r2, #32027	; 0x7d1b
   15cac:	mov	r6, r0
   15cb0:	movw	r0, #494	; 0x1ee
   15cb4:	mov	r3, #0
   15cb8:	str	r7, [sp]
   15cbc:	str	r7, [sp, #4]
   15cc0:	str	r0, [sp, #8]
   15cc4:	movt	r1, #4
   15cc8:	movt	r2, #4
   15ccc:	mov	r0, r4
   15cd0:	bl	15040 <test_json@@Base>
   15cd4:	movw	r1, #32135	; 0x7d87
   15cd8:	mov	r5, r0
   15cdc:	movw	r0, #497	; 0x1f1
   15ce0:	mov	r2, r8
   15ce4:	mov	r3, #0
   15ce8:	str	r7, [sp]
   15cec:	str	r7, [sp, #4]
   15cf0:	str	r0, [sp, #8]
   15cf4:	movt	r1, #4
   15cf8:	mov	r0, r4
   15cfc:	bl	15040 <test_json@@Base>
   15d00:	mov	r1, #500	; 0x1f4
   15d04:	movw	r2, #32300	; 0x7e2c
   15d08:	mov	r3, #0
   15d0c:	str	r7, [sp]
   15d10:	str	r7, [sp, #4]
   15d14:	str	r1, [sp, #8]
   15d18:	orr	r1, sl, r9
   15d1c:	movt	r2, #4
   15d20:	orr	r1, r1, r6
   15d24:	orr	r1, r1, r5
   15d28:	orr	r5, r1, r0
   15d2c:	movw	r1, #32198	; 0x7dc6
   15d30:	mov	r0, r4
   15d34:	movt	r1, #4
   15d38:	bl	15040 <test_json@@Base>
   15d3c:	orr	r0, r5, r0
   15d40:	sub	sp, fp, #28
   15d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015d48 <main@@Base>:
   15d48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d4c:	add	fp, sp, #28
   15d50:	sub	sp, sp, #164	; 0xa4
   15d54:	bl	15464 <edge_case_tests@@Base>
   15d58:	str	r0, [fp, #-32]	; 0xffffffe0
   15d5c:	bl	15664 <error_case_tests@@Base>
   15d60:	str	r0, [fp, #-36]	; 0xffffffdc
   15d64:	bl	15bfc <union_vector_tests@@Base>
   15d68:	str	r0, [fp, #-40]	; 0xffffffd8
   15d6c:	bl	158cc <base64_tests@@Base>
   15d70:	str	r0, [fp, #-44]	; 0xffffffd4
   15d74:	bl	15a7c <mixed_type_union_tests@@Base>
   15d78:	movw	r4, #37360	; 0x91f0
   15d7c:	movw	r9, #25880	; 0x6518
   15d80:	movw	r1, #32392	; 0x7e88
   15d84:	str	r0, [fp, #-48]	; 0xffffffd0
   15d88:	movw	r0, #525	; 0x20d
   15d8c:	mov	r8, #0
   15d90:	mov	r3, #0
   15d94:	movt	r9, #4
   15d98:	movt	r4, #4
   15d9c:	str	r0, [sp, #8]
   15da0:	movt	r1, #4
   15da4:	str	r8, [sp]
   15da8:	str	r8, [sp, #4]
   15dac:	mov	r0, r4
   15db0:	mov	r2, r9
   15db4:	bl	15040 <test_json@@Base>
   15db8:	movw	r5, #32454	; 0x7ec6
   15dbc:	movw	r1, #32415	; 0x7e9f
   15dc0:	str	r0, [fp, #-52]	; 0xffffffcc
   15dc4:	mov	r0, #528	; 0x210
   15dc8:	mov	r3, #0
   15dcc:	str	r8, [sp]
   15dd0:	str	r8, [sp, #4]
   15dd4:	movt	r5, #4
   15dd8:	str	r0, [sp, #8]
   15ddc:	movt	r1, #4
   15de0:	mov	r0, r4
   15de4:	mov	r2, r5
   15de8:	bl	15040 <test_json@@Base>
   15dec:	movw	r7, #32527	; 0x7f0f
   15df0:	movw	r1, #32487	; 0x7ee7
   15df4:	str	r0, [fp, #-56]	; 0xffffffc8
   15df8:	movw	r0, #531	; 0x213
   15dfc:	mov	r3, #0
   15e00:	str	r8, [sp]
   15e04:	str	r8, [sp, #4]
   15e08:	movt	r7, #4
   15e0c:	str	r0, [sp, #8]
   15e10:	movt	r1, #4
   15e14:	mov	r0, r4
   15e18:	mov	r2, r7
   15e1c:	bl	15040 <test_json@@Base>
   15e20:	movw	r6, #32611	; 0x7f63
   15e24:	movw	r1, #32562	; 0x7f32
   15e28:	str	r0, [fp, #-60]	; 0xffffffc4
   15e2c:	movw	r0, #534	; 0x216
   15e30:	mov	r3, #0
   15e34:	str	r8, [sp]
   15e38:	str	r8, [sp, #4]
   15e3c:	movt	r6, #4
   15e40:	str	r0, [sp, #8]
   15e44:	movt	r1, #4
   15e48:	mov	r0, r4
   15e4c:	mov	r2, r6
   15e50:	bl	15040 <test_json@@Base>
   15e54:	movw	r1, #32655	; 0x7f8f
   15e58:	str	r0, [fp, #-64]	; 0xffffffc0
   15e5c:	movw	r0, #537	; 0x219
   15e60:	mov	r2, r6
   15e64:	mov	r3, #0
   15e68:	str	r8, [sp]
   15e6c:	str	r8, [sp, #4]
   15e70:	str	r0, [sp, #8]
   15e74:	movt	r1, #4
   15e78:	mov	r0, r4
   15e7c:	bl	15040 <test_json@@Base>
   15e80:	movw	r1, #32713	; 0x7fc9
   15e84:	str	r0, [fp, #-68]	; 0xffffffbc
   15e88:	mov	r0, #540	; 0x21c
   15e8c:	mov	r2, r5
   15e90:	mov	r3, #0
   15e94:	str	r8, [sp]
   15e98:	str	r8, [sp, #4]
   15e9c:	str	r0, [sp, #8]
   15ea0:	movt	r1, #4
   15ea4:	mov	r0, r4
   15ea8:	bl	15040 <test_json@@Base>
   15eac:	movw	r1, #32751	; 0x7fef
   15eb0:	str	r0, [fp, #-72]	; 0xffffffb8
   15eb4:	movw	r0, #543	; 0x21f
   15eb8:	mov	r2, r7
   15ebc:	mov	r3, #0
   15ec0:	str	r8, [sp]
   15ec4:	str	r8, [sp, #4]
   15ec8:	str	r0, [sp, #8]
   15ecc:	movt	r1, #4
   15ed0:	mov	r0, r4
   15ed4:	bl	15040 <test_json@@Base>
   15ed8:	movw	r1, #32792	; 0x8018
   15edc:	str	r0, [fp, #-76]	; 0xffffffb4
   15ee0:	movw	r0, #547	; 0x223
   15ee4:	mov	r2, r9
   15ee8:	mov	r3, #0
   15eec:	str	r8, [sp]
   15ef0:	str	r8, [sp, #4]
   15ef4:	str	r0, [sp, #8]
   15ef8:	movt	r1, #4
   15efc:	mov	r0, r4
   15f00:	bl	15040 <test_json@@Base>
   15f04:	movw	r1, #25745	; 0x6491
   15f08:	str	r0, [fp, #-80]	; 0xffffffb0
   15f0c:	movw	r0, #551	; 0x227
   15f10:	mov	r2, r9
   15f14:	mov	r3, #0
   15f18:	str	r8, [sp]
   15f1c:	str	r8, [sp, #4]
   15f20:	str	r0, [sp, #8]
   15f24:	movt	r1, #4
   15f28:	mov	r0, r4
   15f2c:	bl	15040 <test_json@@Base>
   15f30:	movw	r1, #32831	; 0x803f
   15f34:	str	r0, [fp, #-84]	; 0xffffffac
   15f38:	movw	r0, #601	; 0x259
   15f3c:	mov	r2, r5
   15f40:	mov	r3, #0
   15f44:	str	r8, [sp]
   15f48:	str	r8, [sp, #4]
   15f4c:	str	r0, [sp, #8]
   15f50:	movt	r1, #4
   15f54:	mov	r0, r4
   15f58:	bl	15040 <test_json@@Base>
   15f5c:	movw	r1, #32864	; 0x8060
   15f60:	str	r0, [fp, #-88]	; 0xffffffa8
   15f64:	mov	r0, #604	; 0x25c
   15f68:	mov	r2, r7
   15f6c:	mov	r3, #0
   15f70:	str	r8, [sp]
   15f74:	str	r8, [sp, #4]
   15f78:	str	r0, [sp, #8]
   15f7c:	movt	r1, #4
   15f80:	mov	r0, r4
   15f84:	bl	15040 <test_json@@Base>
   15f88:	movw	r1, #32897	; 0x8081
   15f8c:	movw	r2, #32930	; 0x80a2
   15f90:	str	r0, [fp, #-92]	; 0xffffffa4
   15f94:	movw	r0, #607	; 0x25f
   15f98:	mov	r3, #0
   15f9c:	str	r8, [sp]
   15fa0:	str	r8, [sp, #4]
   15fa4:	str	r0, [sp, #8]
   15fa8:	movt	r1, #4
   15fac:	movt	r2, #4
   15fb0:	mov	r0, r4
   15fb4:	bl	15040 <test_json@@Base>
   15fb8:	movw	r1, #32968	; 0x80c8
   15fbc:	str	r0, [sp, #96]	; 0x60
   15fc0:	movw	r0, #610	; 0x262
   15fc4:	mov	r2, r6
   15fc8:	mov	r3, #0
   15fcc:	str	r8, [sp]
   15fd0:	str	r8, [sp, #4]
   15fd4:	str	r0, [sp, #8]
   15fd8:	movt	r1, #4
   15fdc:	mov	r0, r4
   15fe0:	bl	15040 <test_json@@Base>
   15fe4:	movw	r1, #33002	; 0x80ea
   15fe8:	movw	r2, #33036	; 0x810c
   15fec:	str	r0, [sp, #92]	; 0x5c
   15ff0:	movw	r0, #613	; 0x265
   15ff4:	mov	r3, #0
   15ff8:	str	r8, [sp]
   15ffc:	str	r8, [sp, #4]
   16000:	str	r0, [sp, #8]
   16004:	movt	r1, #4
   16008:	movt	r2, #4
   1600c:	mov	r0, r4
   16010:	bl	15040 <test_json@@Base>
   16014:	movw	r1, #33066	; 0x812a
   16018:	movw	r2, #33100	; 0x814c
   1601c:	str	r0, [sp, #88]	; 0x58
   16020:	mov	r0, #616	; 0x268
   16024:	mov	r3, #0
   16028:	str	r8, [sp]
   1602c:	str	r8, [sp, #4]
   16030:	str	r0, [sp, #8]
   16034:	movt	r1, #4
   16038:	movt	r2, #4
   1603c:	mov	r0, r4
   16040:	bl	15040 <test_json@@Base>
   16044:	movw	r1, #33130	; 0x816a
   16048:	movw	r2, #33163	; 0x818b
   1604c:	str	r0, [sp, #84]	; 0x54
   16050:	movw	r0, #619	; 0x26b
   16054:	mov	r3, #0
   16058:	str	r8, [sp]
   1605c:	str	r8, [sp, #4]
   16060:	str	r0, [sp, #8]
   16064:	movt	r1, #4
   16068:	movt	r2, #4
   1606c:	mov	r0, r4
   16070:	bl	15040 <test_json@@Base>
   16074:	movw	r1, #33192	; 0x81a8
   16078:	str	r0, [sp, #80]	; 0x50
   1607c:	movw	r0, #622	; 0x26e
   16080:	mov	r2, r5
   16084:	mov	r3, #0
   16088:	str	r8, [sp]
   1608c:	str	r8, [sp, #4]
   16090:	str	r0, [sp, #8]
   16094:	movt	r1, #4
   16098:	mov	r0, r4
   1609c:	bl	15040 <test_json@@Base>
   160a0:	movw	r1, #33235	; 0x81d3
   160a4:	str	r0, [sp, #76]	; 0x4c
   160a8:	movw	r0, #625	; 0x271
   160ac:	mov	r2, r5
   160b0:	mov	r3, #0
   160b4:	str	r8, [sp]
   160b8:	str	r8, [sp, #4]
   160bc:	str	r0, [sp, #8]
   160c0:	movt	r1, #4
   160c4:	mov	r0, r4
   160c8:	bl	15040 <test_json@@Base>
   160cc:	movw	r5, #33293	; 0x820d
   160d0:	movw	r6, #33335	; 0x8237
   160d4:	str	r0, [sp, #72]	; 0x48
   160d8:	mov	r0, #628	; 0x274
   160dc:	mov	r3, #0
   160e0:	str	r8, [sp]
   160e4:	str	r8, [sp, #4]
   160e8:	movt	r5, #4
   160ec:	movt	r6, #4
   160f0:	str	r0, [sp, #8]
   160f4:	mov	r0, r4
   160f8:	mov	r1, r5
   160fc:	mov	r2, r6
   16100:	bl	15040 <test_json@@Base>
   16104:	str	r0, [sp, #68]	; 0x44
   16108:	movw	r0, #631	; 0x277
   1610c:	mov	r1, r5
   16110:	mov	r2, r6
   16114:	mov	r3, #0
   16118:	str	r8, [sp]
   1611c:	str	r8, [sp, #4]
   16120:	str	r0, [sp, #8]
   16124:	mov	r0, r4
   16128:	bl	15040 <test_json@@Base>
   1612c:	movw	r1, #33361	; 0x8251
   16130:	movw	r2, #33442	; 0x82a2
   16134:	str	r0, [sp, #64]	; 0x40
   16138:	movw	r0, #634	; 0x27a
   1613c:	mov	r3, #0
   16140:	str	r8, [sp]
   16144:	str	r8, [sp, #4]
   16148:	str	r0, [sp, #8]
   1614c:	movt	r1, #4
   16150:	movt	r2, #4
   16154:	mov	r0, r4
   16158:	bl	15040 <test_json@@Base>
   1615c:	movw	r1, #33513	; 0x82e9
   16160:	movw	r2, #33598	; 0x833e
   16164:	str	r0, [sp, #60]	; 0x3c
   16168:	movw	r0, #638	; 0x27e
   1616c:	mov	r3, #0
   16170:	str	r8, [sp]
   16174:	str	r8, [sp, #4]
   16178:	str	r0, [sp, #8]
   1617c:	movt	r1, #4
   16180:	movt	r2, #4
   16184:	mov	r0, r4
   16188:	bl	15040 <test_json@@Base>
   1618c:	movw	r1, #33672	; 0x8388
   16190:	movw	r2, #33783	; 0x83f7
   16194:	str	r0, [sp, #56]	; 0x38
   16198:	movw	r0, #642	; 0x282
   1619c:	mov	r3, #0
   161a0:	str	r8, [sp]
   161a4:	str	r8, [sp, #4]
   161a8:	str	r0, [sp, #8]
   161ac:	movt	r1, #4
   161b0:	movt	r2, #4
   161b4:	mov	r0, r4
   161b8:	bl	15040 <test_json@@Base>
   161bc:	movw	r1, #33881	; 0x8459
   161c0:	str	r0, [sp, #52]	; 0x34
   161c4:	movw	r0, #646	; 0x286
   161c8:	mov	r2, r9
   161cc:	mov	r3, #0
   161d0:	str	r8, [sp]
   161d4:	str	r8, [sp, #4]
   161d8:	str	r0, [sp, #8]
   161dc:	movt	r1, #4
   161e0:	mov	r0, r4
   161e4:	bl	15040 <test_json@@Base>
   161e8:	movw	r1, #33924	; 0x8484
   161ec:	str	r0, [sp, #48]	; 0x30
   161f0:	movw	r0, #649	; 0x289
   161f4:	mov	r2, r9
   161f8:	mov	r3, #0
   161fc:	str	r8, [sp]
   16200:	str	r8, [sp, #4]
   16204:	str	r0, [sp, #8]
   16208:	movt	r1, #4
   1620c:	mov	r0, r4
   16210:	bl	15040 <test_json@@Base>
   16214:	movw	r1, #33962	; 0x84aa
   16218:	movw	r2, #34071	; 0x8517
   1621c:	str	r0, [sp, #44]	; 0x2c
   16220:	mov	r0, #716	; 0x2cc
   16224:	mov	r3, #0
   16228:	str	r8, [sp]
   1622c:	str	r8, [sp, #4]
   16230:	str	r0, [sp, #8]
   16234:	movt	r1, #4
   16238:	movt	r2, #4
   1623c:	mov	r0, r4
   16240:	bl	15040 <test_json@@Base>
   16244:	movw	r1, #34165	; 0x8575
   16248:	movw	r2, #34226	; 0x85b2
   1624c:	str	r0, [sp, #40]	; 0x28
   16250:	movw	r0, #731	; 0x2db
   16254:	mov	r3, #0
   16258:	str	r8, [sp]
   1625c:	str	r8, [sp, #4]
   16260:	str	r0, [sp, #8]
   16264:	movt	r1, #4
   16268:	movt	r2, #4
   1626c:	mov	r0, r4
   16270:	bl	15040 <test_json@@Base>
   16274:	movw	r1, #34274	; 0x85e2
   16278:	movw	r2, #34300	; 0x85fc
   1627c:	str	r0, [sp, #36]	; 0x24
   16280:	movw	r0, #734	; 0x2de
   16284:	mov	r3, #0
   16288:	str	r8, [sp]
   1628c:	str	r8, [sp, #4]
   16290:	str	r0, [sp, #8]
   16294:	movt	r1, #4
   16298:	movt	r2, #4
   1629c:	mov	r0, r4
   162a0:	bl	15040 <test_json@@Base>
   162a4:	movw	r5, #34390	; 0x8656
   162a8:	movw	r1, #34318	; 0x860e
   162ac:	str	r0, [sp, #32]
   162b0:	movw	r0, #738	; 0x2e2
   162b4:	mov	r3, #0
   162b8:	str	r8, [sp]
   162bc:	str	r8, [sp, #4]
   162c0:	movt	r5, #4
   162c4:	str	r0, [sp, #8]
   162c8:	movt	r1, #4
   162cc:	mov	r0, r4
   162d0:	mov	r2, r5
   162d4:	bl	15040 <test_json@@Base>
   162d8:	movw	r1, #34455	; 0x8697
   162dc:	str	r0, [sp, #28]
   162e0:	movw	r0, #750	; 0x2ee
   162e4:	mov	r2, r5
   162e8:	mov	r3, #0
   162ec:	str	r8, [sp]
   162f0:	str	r8, [sp, #4]
   162f4:	str	r0, [sp, #8]
   162f8:	movt	r1, #4
   162fc:	mov	r0, r4
   16300:	bl	15040 <test_json@@Base>
   16304:	movw	r1, #34612	; 0x8734
   16308:	movw	r2, #34651	; 0x875b
   1630c:	str	r0, [sp, #24]
   16310:	movw	r0, #766	; 0x2fe
   16314:	mov	r3, #0
   16318:	str	r8, [sp]
   1631c:	str	r8, [sp, #4]
   16320:	str	r0, [sp, #8]
   16324:	movt	r1, #4
   16328:	movt	r2, #4
   1632c:	mov	r0, r4
   16330:	bl	15040 <test_json@@Base>
   16334:	movw	r1, #34685	; 0x877d
   16338:	movw	r2, #34732	; 0x87ac
   1633c:	str	r0, [sp, #20]
   16340:	movw	r0, #770	; 0x302
   16344:	mov	r3, #0
   16348:	str	r8, [sp]
   1634c:	str	r8, [sp, #4]
   16350:	str	r0, [sp, #8]
   16354:	movt	r1, #4
   16358:	movt	r2, #4
   1635c:	mov	r0, r4
   16360:	bl	15040 <test_json@@Base>
   16364:	movw	r1, #34774	; 0x87d6
   16368:	movw	r2, #34897	; 0x8851
   1636c:	str	r0, [sp, #16]
   16370:	mov	r0, #776	; 0x308
   16374:	mov	r3, #0
   16378:	str	r8, [sp]
   1637c:	str	r8, [sp, #4]
   16380:	str	r0, [sp, #8]
   16384:	movt	r1, #4
   16388:	movt	r2, #4
   1638c:	mov	r0, r4
   16390:	bl	15040 <test_json@@Base>
   16394:	movw	r1, #35009	; 0x88c1
   16398:	mov	r7, r0
   1639c:	movw	r0, #781	; 0x30d
   163a0:	mov	r2, r9
   163a4:	mov	r3, #0
   163a8:	str	r8, [sp]
   163ac:	str	r8, [sp, #4]
   163b0:	str	r0, [sp, #8]
   163b4:	movt	r1, #4
   163b8:	mov	r0, r4
   163bc:	bl	15040 <test_json@@Base>
   163c0:	movw	r1, #35129	; 0x8939
   163c4:	movw	r2, #35251	; 0x89b3
   163c8:	mov	r6, r0
   163cc:	movw	r0, #786	; 0x312
   163d0:	mov	r3, #0
   163d4:	str	r8, [sp]
   163d8:	str	r8, [sp, #4]
   163dc:	str	r0, [sp, #8]
   163e0:	movt	r1, #4
   163e4:	movt	r2, #4
   163e8:	mov	r0, r4
   163ec:	bl	15040 <test_json@@Base>
   163f0:	movw	r1, #35362	; 0x8a22
   163f4:	movw	r2, #35501	; 0x8aad
   163f8:	mov	r9, r0
   163fc:	movw	r0, #791	; 0x317
   16400:	mov	r3, #0
   16404:	str	r8, [sp]
   16408:	str	r8, [sp, #4]
   1640c:	str	r0, [sp, #8]
   16410:	movt	r1, #4
   16414:	movt	r2, #4
   16418:	mov	r0, r4
   1641c:	bl	15040 <test_json@@Base>
   16420:	movw	r1, #35627	; 0x8b2b
   16424:	movw	r2, #35750	; 0x8ba6
   16428:	mov	sl, r0
   1642c:	mov	r0, #796	; 0x31c
   16430:	mov	r3, #0
   16434:	str	r8, [sp]
   16438:	str	r8, [sp, #4]
   1643c:	str	r0, [sp, #8]
   16440:	movt	r1, #4
   16444:	movt	r2, #4
   16448:	mov	r0, r4
   1644c:	bl	15040 <test_json@@Base>
   16450:	movw	r1, #35862	; 0x8c16
   16454:	movw	r2, #36000	; 0x8ca0
   16458:	mov	r5, r0
   1645c:	movw	r0, #801	; 0x321
   16460:	mov	r3, #0
   16464:	str	r8, [sp]
   16468:	str	r8, [sp, #4]
   1646c:	str	r0, [sp, #8]
   16470:	movt	r1, #4
   16474:	movt	r2, #4
   16478:	mov	r0, r4
   1647c:	bl	15040 <test_json@@Base>
   16480:	movw	r1, #806	; 0x326
   16484:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16488:	mov	r3, #0
   1648c:	str	r8, [sp]
   16490:	str	r8, [sp, #4]
   16494:	str	r1, [sp, #8]
   16498:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1649c:	orr	r1, r2, r1
   164a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   164a4:	orr	r1, r1, r2
   164a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   164ac:	orr	r1, r1, r2
   164b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   164b4:	orr	r1, r1, r2
   164b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   164bc:	orr	r1, r1, r2
   164c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   164c4:	orr	r1, r1, r2
   164c8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   164cc:	orr	r1, r1, r2
   164d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   164d4:	orr	r1, r1, r2
   164d8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   164dc:	orr	r1, r1, r2
   164e0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   164e4:	orr	r1, r1, r2
   164e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   164ec:	orr	r1, r1, r2
   164f0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   164f4:	orr	r1, r1, r2
   164f8:	ldr	r2, [fp, #-84]	; 0xffffffac
   164fc:	orr	r1, r1, r2
   16500:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16504:	orr	r1, r1, r2
   16508:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1650c:	orr	r1, r1, r2
   16510:	ldr	r2, [sp, #96]	; 0x60
   16514:	orr	r1, r1, r2
   16518:	ldr	r2, [sp, #92]	; 0x5c
   1651c:	orr	r1, r1, r2
   16520:	ldr	r2, [sp, #88]	; 0x58
   16524:	orr	r1, r1, r2
   16528:	ldr	r2, [sp, #84]	; 0x54
   1652c:	orr	r1, r1, r2
   16530:	ldr	r2, [sp, #80]	; 0x50
   16534:	orr	r1, r1, r2
   16538:	ldr	r2, [sp, #76]	; 0x4c
   1653c:	orr	r1, r1, r2
   16540:	ldr	r2, [sp, #72]	; 0x48
   16544:	orr	r1, r1, r2
   16548:	ldr	r2, [sp, #68]	; 0x44
   1654c:	orr	r1, r1, r2
   16550:	ldr	r2, [sp, #64]	; 0x40
   16554:	orr	r1, r1, r2
   16558:	ldr	r2, [sp, #60]	; 0x3c
   1655c:	orr	r1, r1, r2
   16560:	ldr	r2, [sp, #56]	; 0x38
   16564:	orr	r1, r1, r2
   16568:	ldr	r2, [sp, #52]	; 0x34
   1656c:	orr	r1, r1, r2
   16570:	ldr	r2, [sp, #48]	; 0x30
   16574:	orr	r1, r1, r2
   16578:	ldr	r2, [sp, #44]	; 0x2c
   1657c:	orr	r1, r1, r2
   16580:	ldr	r2, [sp, #40]	; 0x28
   16584:	orr	r1, r1, r2
   16588:	ldr	r2, [sp, #36]	; 0x24
   1658c:	orr	r1, r1, r2
   16590:	ldr	r2, [sp, #32]
   16594:	orr	r1, r1, r2
   16598:	ldr	r2, [sp, #28]
   1659c:	orr	r1, r1, r2
   165a0:	ldr	r2, [sp, #24]
   165a4:	orr	r1, r1, r2
   165a8:	ldr	r2, [sp, #20]
   165ac:	orr	r1, r1, r2
   165b0:	ldr	r2, [sp, #16]
   165b4:	orr	r1, r1, r2
   165b8:	movw	r2, #36270	; 0x8dae
   165bc:	orr	r1, r1, r7
   165c0:	movt	r2, #4
   165c4:	orr	r1, r1, r6
   165c8:	orr	r1, r1, r9
   165cc:	orr	r1, r1, sl
   165d0:	orr	r1, r1, r5
   165d4:	orr	r5, r1, r0
   165d8:	movw	r1, #36127	; 0x8d1f
   165dc:	mov	r0, r4
   165e0:	movt	r1, #4
   165e4:	bl	15040 <test_json@@Base>
   165e8:	orrs	r0, r5, r0
   165ec:	mvnne	r0, #0
   165f0:	sub	sp, fp, #28
   165f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165fc:	add	fp, sp, #28
   16600:	sub	sp, sp, #4
   16604:	vpush	{d8-d9}
   16608:	sub	sp, sp, #80	; 0x50
   1660c:	mov	r9, r0
   16610:	mov	r0, #0
   16614:	mov	sl, r1
   16618:	mov	r1, #36	; 0x24
   1661c:	mov	r4, r3
   16620:	mov	r6, r2
   16624:	str	r0, [r3]
   16628:	ldr	r0, [r9]
   1662c:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   16630:	cmp	r0, #0
   16634:	beq	16664 <main@@Base+0x91c>
   16638:	mov	r0, r9
   1663c:	mov	r1, sl
   16640:	mov	r2, r6
   16644:	mov	r3, #33	; 0x21
   16648:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1664c:	mov	sl, r0
   16650:	mov	r0, sl
   16654:	sub	sp, fp, #48	; 0x30
   16658:	vpop	{d8-d9}
   1665c:	add	sp, sp, #4
   16660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16664:	add	r0, sp, #48	; 0x30
   16668:	mov	r1, sl
   1666c:	mov	r2, r6
   16670:	mov	r3, #1
   16674:	str	r0, [sp]
   16678:	mov	r0, r9
   1667c:	bl	37780 <flatcc_json_parser_prepare_unions@@Base>
   16680:	cmp	r0, r6
   16684:	beq	16638 <main@@Base+0x8f0>
   16688:	cmp	sl, r6
   1668c:	beq	166cc <main@@Base+0x984>
   16690:	ldrb	r0, [sl]
   16694:	cmp	r0, #123	; 0x7b
   16698:	bne	166cc <main@@Base+0x984>
   1669c:	add	r1, sl, #1
   166a0:	sub	r0, r6, r1
   166a4:	cmp	r0, #2
   166a8:	blt	16764 <main@@Base+0xa1c>
   166ac:	ldrb	r0, [r1]
   166b0:	cmp	r0, #32
   166b4:	bls	16754 <main@@Base+0xa0c>
   166b8:	mov	sl, r1
   166bc:	cmp	sl, r6
   166c0:	mov	r2, r6
   166c4:	bne	16780 <main@@Base+0xa38>
   166c8:	b	167c4 <main@@Base+0xa7c>
   166cc:	mov	r0, r9
   166d0:	mov	r1, sl
   166d4:	mov	r2, r6
   166d8:	mov	r3, #21
   166dc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   166e0:	mov	sl, r0
   166e4:	add	r0, r9, #20
   166e8:	ldr	r0, [r0]
   166ec:	cmp	r0, #0
   166f0:	bne	16638 <main@@Base+0x8f0>
   166f4:	ldr	r0, [r9]
   166f8:	mov	r1, #3
   166fc:	bl	304f4 <flatcc_builder_check_required_field@@Base>
   16700:	cmp	r0, #0
   16704:	beq	16738 <main@@Base+0x9f0>
   16708:	ldr	r3, [sp, #48]	; 0x30
   1670c:	mov	r0, r9
   16710:	mov	r1, sl
   16714:	mov	r2, r6
   16718:	bl	37810 <flatcc_json_parser_finalize_unions@@Base>
   1671c:	mov	sl, r0
   16720:	ldr	r0, [r9]
   16724:	bl	30680 <flatcc_builder_end_table@@Base>
   16728:	cmp	r0, #0
   1672c:	str	r0, [r4]
   16730:	bne	16650 <main@@Base+0x908>
   16734:	b	16638 <main@@Base+0x8f0>
   16738:	mov	r0, r9
   1673c:	mov	r1, sl
   16740:	mov	r2, r6
   16744:	mov	r3, #29
   16748:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1674c:	mov	sl, r0
   16750:	b	16638 <main@@Base+0x8f0>
   16754:	bne	16764 <main@@Base+0xa1c>
   16758:	ldrb	r0, [sl, #2]!
   1675c:	cmp	r0, #32
   16760:	bhi	16774 <main@@Base+0xa2c>
   16764:	mov	r0, r9
   16768:	mov	r2, r6
   1676c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   16770:	mov	sl, r0
   16774:	cmp	sl, r6
   16778:	mov	r2, r6
   1677c:	beq	167c4 <main@@Base+0xa7c>
   16780:	ldrb	r0, [sl]
   16784:	cmp	r0, #125	; 0x7d
   16788:	bne	167c0 <main@@Base+0xa78>
   1678c:	add	r1, sl, #1
   16790:	sub	r0, r6, r1
   16794:	cmp	r0, #2
   16798:	blt	1fe90 <main@@Base+0xa148>
   1679c:	ldrb	r0, [r1]
   167a0:	cmp	r0, #32
   167a4:	bls	1fe80 <main@@Base+0xa138>
   167a8:	mov	sl, r1
   167ac:	add	r0, r9, #20
   167b0:	ldr	r0, [r0]
   167b4:	cmp	r0, #0
   167b8:	bne	16638 <main@@Base+0x8f0>
   167bc:	b	166f4 <main@@Base+0x9ac>
   167c0:	mov	r2, sl
   167c4:	add	r0, r9, #20
   167c8:	vldr	s18, [pc, #984]	; 16ba8 <main@@Base+0xe60>
   167cc:	vmov.f32	s16, #8	; 0x40400000  3.0
   167d0:	str	r6, [sp, #44]	; 0x2c
   167d4:	str	r9, [sp, #40]	; 0x28
   167d8:	str	r4, [sp, #36]	; 0x24
   167dc:	str	r0, [sp, #32]
   167e0:	movw	r0, #53876	; 0xd274
   167e4:	movt	r0, #5
   167e8:	add	r0, r0, #48	; 0x30
   167ec:	str	r0, [sp, #24]
   167f0:	movw	r0, #13407	; 0x345f
   167f4:	movt	r0, #29494	; 0x7336
   167f8:	sub	r0, r0, #512	; 0x200
   167fc:	sub	r0, r0, #196608	; 0x30000
   16800:	str	r0, [sp, #28]
   16804:	b	17a98 <main@@Base+0x1d50>
   16808:	bne	16818 <main@@Base+0xad0>
   1680c:	ldrb	r0, [r2, #2]!
   16810:	cmp	r0, #32
   16814:	bhi	16828 <main@@Base+0xae0>
   16818:	mov	r0, r9
   1681c:	mov	r2, r6
   16820:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   16824:	mov	r2, r0
   16828:	cmp	r2, r6
   1682c:	bne	1fd9c <main@@Base+0xa054>
   16830:	b	1fe14 <main@@Base+0xa0cc>
   16834:	mov	r7, #0
   16838:	mov	r8, r2
   1683c:	cmp	sl, r8
   16840:	bne	168b8 <main@@Base+0xb70>
   16844:	b	16878 <main@@Base+0xb30>
   16848:	mov	r6, #0
   1684c:	mov	r7, #0
   16850:	mov	r8, sl
   16854:	cmp	sl, r8
   16858:	bne	168b8 <main@@Base+0xb70>
   1685c:	b	16878 <main@@Base+0xb30>
   16860:	ldr	r6, [fp, #-56]	; 0xffffffc8
   16864:	ldr	r7, [fp, #-52]	; 0xffffffcc
   16868:	str	r7, [sp, #60]	; 0x3c
   1686c:	str	r6, [sp, #56]	; 0x38
   16870:	cmp	sl, r8
   16874:	bne	168b8 <main@@Base+0xb70>
   16878:	add	r0, sp, #56	; 0x38
   1687c:	ldr	r2, [sp, #44]	; 0x2c
   16880:	mov	r1, sl
   16884:	str	r0, [sp]
   16888:	movw	r0, #53516	; 0xd10c
   1688c:	movt	r0, #5
   16890:	add	r3, r0, #72	; 0x48
   16894:	ldr	r0, [sp, #40]	; 0x28
   16898:	bl	24abc <main@@Base+0xed74>
   1689c:	cmp	r0, sl
   168a0:	mov	r8, r0
   168a4:	ldrne	r0, [sp, #44]	; 0x2c
   168a8:	cmpne	r8, r0
   168ac:	beq	1fecc <main@@Base+0xa184>
   168b0:	ldr	r6, [sp, #56]	; 0x38
   168b4:	ldr	r7, [sp, #60]	; 0x3c
   168b8:	ldr	r9, [sp, #40]	; 0x28
   168bc:	orrs	r0, r6, r7
   168c0:	bne	168d0 <main@@Base+0xb88>
   168c4:	ldrb	r0, [r9, #8]
   168c8:	tst	r0, #2
   168cc:	beq	176ac <main@@Base+0x1964>
   168d0:	ldr	r0, [r9]
   168d4:	mov	r1, #23
   168d8:	mov	r2, #8
   168dc:	mov	r3, #8
   168e0:	bl	31040 <flatcc_builder_table_add@@Base>
   168e4:	cmp	r0, #0
   168e8:	beq	1fecc <main@@Base+0xa184>
   168ec:	strd	r6, [r0]
   168f0:	ldr	r9, [sp, #40]	; 0x28
   168f4:	b	176ac <main@@Base+0x1964>
   168f8:	mov	sl, r6
   168fc:	b	1d4c4 <main@@Base+0x777c>
   16900:	bne	16910 <main@@Base+0xbc8>
   16904:	ldrb	r0, [sl, #2]!
   16908:	cmp	r0, #32
   1690c:	bhi	16920 <main@@Base+0xbd8>
   16910:	ldr	r0, [sp, #40]	; 0x28
   16914:	ldr	r2, [sp, #44]	; 0x2c
   16918:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1691c:	mov	sl, r0
   16920:	ldr	r2, [sp, #44]	; 0x2c
   16924:	cmp	sl, r2
   16928:	beq	16970 <main@@Base+0xc28>
   1692c:	ldrb	r0, [sl]
   16930:	cmp	r0, #125	; 0x7d
   16934:	bne	1696c <main@@Base+0xc24>
   16938:	ldr	r0, [sp, #44]	; 0x2c
   1693c:	add	r1, sl, #1
   16940:	sub	r0, r0, r1
   16944:	cmp	r0, #2
   16948:	blt	17a88 <main@@Base+0x1d40>
   1694c:	ldrb	r0, [r1]
   16950:	cmp	r0, #32
   16954:	bhi	17864 <main@@Base+0x1b1c>
   16958:	bne	17a88 <main@@Base+0x1d40>
   1695c:	ldrb	r0, [sl, #2]!
   16960:	cmp	r0, #32
   16964:	bhi	1d088 <main@@Base+0x7340>
   16968:	b	17a88 <main@@Base+0x1d40>
   1696c:	mov	r2, sl
   16970:	ldr	r4, [sp, #44]	; 0x2c
   16974:	ldr	r5, [sp, #40]	; 0x28
   16978:	cmp	r2, r4
   1697c:	mov	r8, r4
   16980:	beq	169b0 <main@@Base+0xc68>
   16984:	ldrb	r0, [r2]
   16988:	cmp	r0, #34	; 0x22
   1698c:	bne	16998 <main@@Base+0xc50>
   16990:	add	r8, r2, #1
   16994:	b	169b0 <main@@Base+0xc68>
   16998:	mov	r1, r2
   1699c:	mov	r0, r5
   169a0:	mov	r2, r4
   169a4:	mov	r3, #5
   169a8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   169ac:	mov	r8, r0
   169b0:	sub	lr, r4, r8
   169b4:	mov	r0, #8
   169b8:	cmp	lr, #8
   169bc:	movcc	r0, lr
   169c0:	and	r0, r0, #15
   169c4:	sub	r7, r0, #1
   169c8:	cmp	r7, #7
   169cc:	bhi	170e8 <main@@Base+0x13a0>
   169d0:	add	r4, pc, #32
   169d4:	mov	r1, #0
   169d8:	mov	ip, #0
   169dc:	mov	r9, #0
   169e0:	mov	r6, #0
   169e4:	mov	r3, #0
   169e8:	mov	r5, #0
   169ec:	mov	r2, #0
   169f0:	mov	r0, #0
   169f4:	ldr	pc, [r4, r7, lsl #2]
   169f8:	andeq	r6, r1, ip, asr sl
   169fc:	andeq	r6, r1, r4, asr sl
   16a00:	andeq	r6, r1, ip, asr #20
   16a04:	andeq	r6, r1, r4, asr #20
   16a08:	andeq	r6, r1, r8, lsr sl
   16a0c:	andeq	r6, r1, ip, lsr #20
   16a10:	andeq	r6, r1, ip, lsl sl
   16a14:	andeq	r6, r1, r8, lsl sl
   16a18:	ldrb	ip, [r8, #7]
   16a1c:	ldrb	r0, [r8, #6]
   16a20:	mov	r9, r1
   16a24:	orr	r0, ip, r0, lsl #8
   16a28:	mov	r1, r0
   16a2c:	ldrb	r0, [r8, #5]
   16a30:	mov	r6, r9
   16a34:	orr	r1, r1, r0, lsl #16
   16a38:	ldrb	r0, [r8, #4]
   16a3c:	mov	r3, r6
   16a40:	orr	r1, r1, r0, lsl #24
   16a44:	ldrb	r0, [r8, #3]
   16a48:	orr	r5, r0, r3
   16a4c:	ldrb	r0, [r8, #2]
   16a50:	orr	r2, r5, r0, lsl #8
   16a54:	ldrb	r0, [r8, #1]
   16a58:	orr	r0, r2, r0, lsl #16
   16a5c:	ldrb	r2, [r8]
   16a60:	orr	r2, r0, r2, lsl #24
   16a64:	movw	r0, #65535	; 0xffff
   16a68:	movt	r0, #26979	; 0x6963
   16a6c:	cmp	r2, r0
   16a70:	bhi	16ae0 <main@@Base+0xd98>
   16a74:	movw	r0, #30062	; 0x756e
   16a78:	and	r1, r1, #-16777216	; 0xff000000
   16a7c:	movt	r0, #25455	; 0x636f
   16a80:	eor	r1, r1, #1946157056	; 0x74000000
   16a84:	eor	r0, r2, r0
   16a88:	orrs	r0, r1, r0
   16a8c:	bne	170e8 <main@@Base+0x13a0>
   16a90:	cmp	lr, #6
   16a94:	mov	r7, r8
   16a98:	blt	16d58 <main@@Base+0x1010>
   16a9c:	ldrb	r0, [r8, #5]
   16aa0:	mov	r7, r8
   16aa4:	cmp	r0, #34	; 0x22
   16aa8:	bne	16d58 <main@@Base+0x1010>
   16aac:	ldr	r0, [sp, #44]	; 0x2c
   16ab0:	add	r1, r8, #6
   16ab4:	sub	r0, r0, r1
   16ab8:	cmp	r0, #2
   16abc:	blt	16bc0 <main@@Base+0xe78>
   16ac0:	ldrb	r0, [r1]
   16ac4:	cmp	r0, #32
   16ac8:	bls	16bac <main@@Base+0xe64>
   16acc:	mov	r7, r1
   16ad0:	ldr	r0, [sp, #44]	; 0x2c
   16ad4:	cmp	r7, r0
   16ad8:	bne	16bdc <main@@Base+0xe94>
   16adc:	b	16c18 <main@@Base+0xed0>
   16ae0:	movw	r1, #27648	; 0x6c00
   16ae4:	bic	r0, r2, #255	; 0xff
   16ae8:	movt	r1, #30305	; 0x7661
   16aec:	teq	r0, r1
   16af0:	bne	16b44 <main@@Base+0xdfc>
   16af4:	cmp	lr, #4
   16af8:	mov	r7, r8
   16afc:	blt	16ee0 <main@@Base+0x1198>
   16b00:	ldrb	r0, [r8, #3]
   16b04:	mov	r7, r8
   16b08:	cmp	r0, #34	; 0x22
   16b0c:	bne	16ee0 <main@@Base+0x1198>
   16b10:	ldr	r0, [sp, #44]	; 0x2c
   16b14:	add	r1, r8, #4
   16b18:	sub	r0, r0, r1
   16b1c:	cmp	r0, #2
   16b20:	blt	16c44 <main@@Base+0xefc>
   16b24:	ldrb	r0, [r1]
   16b28:	cmp	r0, #32
   16b2c:	bls	16c30 <main@@Base+0xee8>
   16b30:	mov	r7, r1
   16b34:	ldr	r0, [sp, #44]	; 0x2c
   16b38:	cmp	r7, r0
   16b3c:	bne	16c60 <main@@Base+0xf18>
   16b40:	b	16c9c <main@@Base+0xf54>
   16b44:	movw	r0, #0
   16b48:	bfc	r2, #0, #16
   16b4c:	movt	r0, #26980	; 0x6964
   16b50:	teq	r2, r0
   16b54:	bne	170e8 <main@@Base+0x13a0>
   16b58:	cmp	lr, #3
   16b5c:	mov	r1, r8
   16b60:	blt	17088 <main@@Base+0x1340>
   16b64:	ldrb	r0, [r8, #2]
   16b68:	mov	r1, r8
   16b6c:	cmp	r0, #34	; 0x22
   16b70:	bne	17088 <main@@Base+0x1340>
   16b74:	ldr	r0, [sp, #44]	; 0x2c
   16b78:	add	r2, r8, #3
   16b7c:	sub	r0, r0, r2
   16b80:	cmp	r0, #2
   16b84:	blt	16cc8 <main@@Base+0xf80>
   16b88:	ldrb	r0, [r2]
   16b8c:	cmp	r0, #32
   16b90:	bls	16cb4 <main@@Base+0xf6c>
   16b94:	mov	r1, r2
   16b98:	ldr	r0, [sp, #44]	; 0x2c
   16b9c:	cmp	r1, r0
   16ba0:	bne	16ce8 <main@@Base+0xfa0>
   16ba4:	b	16d24 <main@@Base+0xfdc>
   16ba8:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   16bac:	bne	16bc0 <main@@Base+0xe78>
   16bb0:	mov	r7, r8
   16bb4:	ldrb	r0, [r7, #7]!
   16bb8:	cmp	r0, #32
   16bbc:	bhi	16bd0 <main@@Base+0xe88>
   16bc0:	ldr	r0, [sp, #40]	; 0x28
   16bc4:	ldr	r2, [sp, #44]	; 0x2c
   16bc8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   16bcc:	mov	r7, r0
   16bd0:	ldr	r0, [sp, #44]	; 0x2c
   16bd4:	cmp	r7, r0
   16bd8:	beq	16c18 <main@@Base+0xed0>
   16bdc:	ldrb	r0, [r7]
   16be0:	cmp	r0, #58	; 0x3a
   16be4:	bne	16c18 <main@@Base+0xed0>
   16be8:	ldr	r0, [sp, #44]	; 0x2c
   16bec:	add	r1, r7, #1
   16bf0:	sub	r0, r0, r1
   16bf4:	cmp	r0, #2
   16bf8:	blt	16d48 <main@@Base+0x1000>
   16bfc:	ldrb	r0, [r1]
   16c00:	cmp	r0, #32
   16c04:	bls	16d38 <main@@Base+0xff0>
   16c08:	mov	r7, r1
   16c0c:	cmp	r8, r7
   16c10:	bne	16d60 <main@@Base+0x1018>
   16c14:	b	170e8 <main@@Base+0x13a0>
   16c18:	ldr	r0, [sp, #40]	; 0x28
   16c1c:	ldr	r2, [sp, #44]	; 0x2c
   16c20:	mov	r1, r7
   16c24:	mov	r3, #4
   16c28:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   16c2c:	b	16d54 <main@@Base+0x100c>
   16c30:	bne	16c44 <main@@Base+0xefc>
   16c34:	mov	r7, r8
   16c38:	ldrb	r0, [r7, #5]!
   16c3c:	cmp	r0, #32
   16c40:	bhi	16c54 <main@@Base+0xf0c>
   16c44:	ldr	r0, [sp, #40]	; 0x28
   16c48:	ldr	r2, [sp, #44]	; 0x2c
   16c4c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   16c50:	mov	r7, r0
   16c54:	ldr	r0, [sp, #44]	; 0x2c
   16c58:	cmp	r7, r0
   16c5c:	beq	16c9c <main@@Base+0xf54>
   16c60:	ldrb	r0, [r7]
   16c64:	cmp	r0, #58	; 0x3a
   16c68:	bne	16c9c <main@@Base+0xf54>
   16c6c:	ldr	r0, [sp, #44]	; 0x2c
   16c70:	add	r1, r7, #1
   16c74:	sub	r0, r0, r1
   16c78:	cmp	r0, #2
   16c7c:	blt	16ed0 <main@@Base+0x1188>
   16c80:	ldrb	r0, [r1]
   16c84:	cmp	r0, #32
   16c88:	bls	16ec0 <main@@Base+0x1178>
   16c8c:	mov	r7, r1
   16c90:	cmp	r8, r7
   16c94:	bne	16ee8 <main@@Base+0x11a0>
   16c98:	b	170e8 <main@@Base+0x13a0>
   16c9c:	ldr	r0, [sp, #40]	; 0x28
   16ca0:	ldr	r2, [sp, #44]	; 0x2c
   16ca4:	mov	r1, r7
   16ca8:	mov	r3, #4
   16cac:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   16cb0:	b	16edc <main@@Base+0x1194>
   16cb4:	bne	16cc8 <main@@Base+0xf80>
   16cb8:	mov	r1, r8
   16cbc:	ldrb	r0, [r1, #4]!
   16cc0:	cmp	r0, #32
   16cc4:	bhi	16cdc <main@@Base+0xf94>
   16cc8:	mov	r1, r2
   16ccc:	ldr	r0, [sp, #40]	; 0x28
   16cd0:	ldr	r2, [sp, #44]	; 0x2c
   16cd4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   16cd8:	mov	r1, r0
   16cdc:	ldr	r0, [sp, #44]	; 0x2c
   16ce0:	cmp	r1, r0
   16ce4:	beq	16d24 <main@@Base+0xfdc>
   16ce8:	ldrb	r0, [r1]
   16cec:	cmp	r0, #58	; 0x3a
   16cf0:	bne	16d24 <main@@Base+0xfdc>
   16cf4:	ldr	r0, [sp, #44]	; 0x2c
   16cf8:	add	r2, r1, #1
   16cfc:	sub	r0, r0, r2
   16d00:	cmp	r0, #2
   16d04:	blt	17074 <main@@Base+0x132c>
   16d08:	ldrb	r0, [r2]
   16d0c:	cmp	r0, #32
   16d10:	bls	17064 <main@@Base+0x131c>
   16d14:	mov	r1, r2
   16d18:	cmp	r8, r1
   16d1c:	bne	17090 <main@@Base+0x1348>
   16d20:	b	170e8 <main@@Base+0x13a0>
   16d24:	ldr	r0, [sp, #40]	; 0x28
   16d28:	ldr	r2, [sp, #44]	; 0x2c
   16d2c:	mov	r3, #4
   16d30:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   16d34:	b	17084 <main@@Base+0x133c>
   16d38:	bne	16d48 <main@@Base+0x1000>
   16d3c:	ldrb	r0, [r7, #2]!
   16d40:	cmp	r0, #32
   16d44:	bhi	16d58 <main@@Base+0x1010>
   16d48:	ldr	r0, [sp, #40]	; 0x28
   16d4c:	ldr	r2, [sp, #44]	; 0x2c
   16d50:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   16d54:	mov	r7, r0
   16d58:	cmp	r8, r7
   16d5c:	beq	170e8 <main@@Base+0x13a0>
   16d60:	ldr	r0, [sp, #44]	; 0x2c
   16d64:	mov	r5, #0
   16d68:	str	r5, [fp, #-52]	; 0xffffffcc
   16d6c:	str	r5, [fp, #-56]	; 0xffffffc8
   16d70:	strh	r5, [fp, #-60]	; 0xffffffc4
   16d74:	str	r5, [sp, #56]	; 0x38
   16d78:	cmp	r7, r0
   16d7c:	beq	16dd8 <main@@Base+0x1090>
   16d80:	sub	r0, fp, #56	; 0x38
   16d84:	ldr	r2, [sp, #44]	; 0x2c
   16d88:	mov	r1, r7
   16d8c:	add	r3, sp, #56	; 0x38
   16d90:	str	r0, [sp]
   16d94:	ldr	r0, [sp, #40]	; 0x28
   16d98:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   16d9c:	cmp	r0, r7
   16da0:	beq	16de8 <main@@Base+0x10a0>
   16da4:	mov	sl, r0
   16da8:	ldr	r0, [sp, #56]	; 0x38
   16dac:	cmp	r0, #0
   16db0:	beq	16df8 <main@@Base+0x10b0>
   16db4:	ldr	r0, [sp, #40]	; 0x28
   16db8:	ldr	r2, [sp, #44]	; 0x2c
   16dbc:	mov	r1, sl
   16dc0:	mov	r3, #8
   16dc4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   16dc8:	mov	sl, r0
   16dcc:	cmp	r7, sl
   16dd0:	bne	16e7c <main@@Base+0x1134>
   16dd4:	b	16e40 <main@@Base+0x10f8>
   16dd8:	ldr	sl, [sp, #44]	; 0x2c
   16ddc:	cmp	r7, sl
   16de0:	bne	16e7c <main@@Base+0x1134>
   16de4:	b	16e40 <main@@Base+0x10f8>
   16de8:	mov	sl, r7
   16dec:	cmp	r7, sl
   16df0:	bne	16e7c <main@@Base+0x1134>
   16df4:	b	16e40 <main@@Base+0x10f8>
   16df8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16dfc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16e00:	subs	r2, r0, #65536	; 0x10000
   16e04:	sbcs	r1, r1, #0
   16e08:	bcc	16e30 <main@@Base+0x10e8>
   16e0c:	ldr	r0, [sp, #40]	; 0x28
   16e10:	ldr	r2, [sp, #44]	; 0x2c
   16e14:	mov	r1, sl
   16e18:	mov	r3, #7
   16e1c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   16e20:	mov	sl, r0
   16e24:	cmp	r7, sl
   16e28:	bne	16e7c <main@@Base+0x1134>
   16e2c:	b	16e40 <main@@Base+0x10f8>
   16e30:	mov	r5, r0
   16e34:	strh	r0, [fp, #-60]	; 0xffffffc4
   16e38:	cmp	r7, sl
   16e3c:	bne	16e7c <main@@Base+0x1134>
   16e40:	sub	r0, fp, #60	; 0x3c
   16e44:	ldr	r2, [sp, #44]	; 0x2c
   16e48:	mov	r1, r7
   16e4c:	str	r0, [sp]
   16e50:	movw	r0, #53876	; 0xd274
   16e54:	movt	r0, #5
   16e58:	add	r3, r0, #24
   16e5c:	ldr	r0, [sp, #40]	; 0x28
   16e60:	bl	2c3ac <main@@Base+0x16664>
   16e64:	cmp	r0, r7
   16e68:	mov	sl, r0
   16e6c:	ldrne	r0, [sp, #44]	; 0x2c
   16e70:	cmpne	sl, r0
   16e74:	beq	1d098 <main@@Base+0x7350>
   16e78:	ldrh	r5, [fp, #-60]	; 0xffffffc4
   16e7c:	movw	r0, #65535	; 0xffff
   16e80:	tst	r5, r0
   16e84:	bne	16e98 <main@@Base+0x1150>
   16e88:	ldr	r0, [sp, #40]	; 0x28
   16e8c:	ldrb	r0, [r0, #8]
   16e90:	tst	r0, #2
   16e94:	beq	170d0 <main@@Base+0x1388>
   16e98:	ldr	r0, [sp, #40]	; 0x28
   16e9c:	mov	r1, #2
   16ea0:	mov	r2, #2
   16ea4:	mov	r3, #2
   16ea8:	ldr	r0, [r0]
   16eac:	bl	31040 <flatcc_builder_table_add@@Base>
   16eb0:	cmp	r0, #0
   16eb4:	beq	1d098 <main@@Base+0x7350>
   16eb8:	strh	r5, [r0]
   16ebc:	b	170d0 <main@@Base+0x1388>
   16ec0:	bne	16ed0 <main@@Base+0x1188>
   16ec4:	ldrb	r0, [r7, #2]!
   16ec8:	cmp	r0, #32
   16ecc:	bhi	16ee0 <main@@Base+0x1198>
   16ed0:	ldr	r0, [sp, #40]	; 0x28
   16ed4:	ldr	r2, [sp, #44]	; 0x2c
   16ed8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   16edc:	mov	r7, r0
   16ee0:	cmp	r8, r7
   16ee4:	beq	170e8 <main@@Base+0x13a0>
   16ee8:	ldr	r0, [sp, #44]	; 0x2c
   16eec:	mov	r6, #0
   16ef0:	str	r6, [fp, #-52]	; 0xffffffcc
   16ef4:	str	r6, [fp, #-56]	; 0xffffffc8
   16ef8:	str	r6, [sp, #60]	; 0x3c
   16efc:	str	r6, [sp, #56]	; 0x38
   16f00:	str	r6, [fp, #-60]	; 0xffffffc4
   16f04:	cmp	r7, r0
   16f08:	beq	16f68 <main@@Base+0x1220>
   16f0c:	sub	r0, fp, #56	; 0x38
   16f10:	ldr	r2, [sp, #44]	; 0x2c
   16f14:	mov	r1, r7
   16f18:	sub	r3, fp, #60	; 0x3c
   16f1c:	str	r0, [sp]
   16f20:	ldr	r0, [sp, #40]	; 0x28
   16f24:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   16f28:	cmp	r0, r7
   16f2c:	beq	16f7c <main@@Base+0x1234>
   16f30:	mov	sl, r0
   16f34:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16f38:	ldr	r6, [fp, #-56]	; 0xffffffc8
   16f3c:	ldr	r5, [fp, #-52]	; 0xffffffcc
   16f40:	cmp	r0, #0
   16f44:	beq	16f94 <main@@Base+0x124c>
   16f48:	subs	r0, r6, #1
   16f4c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   16f50:	bcc	16fc8 <main@@Base+0x1280>
   16f54:	ldr	r0, [sp, #40]	; 0x28
   16f58:	ldr	r2, [sp, #44]	; 0x2c
   16f5c:	mov	r1, sl
   16f60:	mov	r3, #8
   16f64:	b	16fac <main@@Base+0x1264>
   16f68:	ldr	sl, [sp, #44]	; 0x2c
   16f6c:	mov	r5, #0
   16f70:	cmp	r7, sl
   16f74:	bne	17020 <main@@Base+0x12d8>
   16f78:	b	16fe0 <main@@Base+0x1298>
   16f7c:	mov	r6, #0
   16f80:	mov	r5, #0
   16f84:	mov	sl, r7
   16f88:	cmp	r7, sl
   16f8c:	bne	17020 <main@@Base+0x12d8>
   16f90:	b	16fe0 <main@@Base+0x1298>
   16f94:	cmn	r5, #1
   16f98:	bgt	16fd0 <main@@Base+0x1288>
   16f9c:	ldr	r0, [sp, #40]	; 0x28
   16fa0:	ldr	r2, [sp, #44]	; 0x2c
   16fa4:	mov	r1, sl
   16fa8:	mov	r3, #7
   16fac:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   16fb0:	mov	sl, r0
   16fb4:	mov	r6, #0
   16fb8:	mov	r5, #0
   16fbc:	cmp	r7, sl
   16fc0:	bne	17020 <main@@Base+0x12d8>
   16fc4:	b	16fe0 <main@@Base+0x1298>
   16fc8:	rsbs	r6, r6, #0
   16fcc:	rsc	r5, r5, #0
   16fd0:	str	r6, [sp, #56]	; 0x38
   16fd4:	str	r5, [sp, #60]	; 0x3c
   16fd8:	cmp	r7, sl
   16fdc:	bne	17020 <main@@Base+0x12d8>
   16fe0:	add	r0, sp, #56	; 0x38
   16fe4:	ldr	r2, [sp, #44]	; 0x2c
   16fe8:	mov	r1, r7
   16fec:	str	r0, [sp]
   16ff0:	movw	r0, #53876	; 0xd274
   16ff4:	movt	r0, #5
   16ff8:	add	r3, r0, #36	; 0x24
   16ffc:	ldr	r0, [sp, #40]	; 0x28
   17000:	bl	2467c <main@@Base+0xe934>
   17004:	cmp	r0, r7
   17008:	mov	sl, r0
   1700c:	ldrne	r0, [sp, #44]	; 0x2c
   17010:	cmpne	sl, r0
   17014:	beq	1d098 <main@@Base+0x7350>
   17018:	ldr	r6, [sp, #56]	; 0x38
   1701c:	ldr	r5, [sp, #60]	; 0x3c
   17020:	orrs	r0, r6, r5
   17024:	bne	17038 <main@@Base+0x12f0>
   17028:	ldr	r0, [sp, #40]	; 0x28
   1702c:	ldrb	r0, [r0, #8]
   17030:	tst	r0, #2
   17034:	beq	170d0 <main@@Base+0x1388>
   17038:	ldr	r0, [sp, #40]	; 0x28
   1703c:	mov	r1, #1
   17040:	mov	r2, #8
   17044:	mov	r3, #8
   17048:	ldr	r0, [r0]
   1704c:	bl	31040 <flatcc_builder_table_add@@Base>
   17050:	cmp	r0, #0
   17054:	beq	1d098 <main@@Base+0x7350>
   17058:	str	r6, [r0]
   1705c:	str	r5, [r0, #4]
   17060:	b	170d0 <main@@Base+0x1388>
   17064:	bne	17074 <main@@Base+0x132c>
   17068:	ldrb	r0, [r1, #2]!
   1706c:	cmp	r0, #32
   17070:	bhi	17088 <main@@Base+0x1340>
   17074:	mov	r1, r2
   17078:	ldr	r0, [sp, #40]	; 0x28
   1707c:	ldr	r2, [sp, #44]	; 0x2c
   17080:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   17084:	mov	r1, r0
   17088:	cmp	r8, r1
   1708c:	beq	170e8 <main@@Base+0x13a0>
   17090:	ldr	r0, [sp, #40]	; 0x28
   17094:	ldr	r2, [sp, #44]	; 0x2c
   17098:	add	r3, sp, #64	; 0x40
   1709c:	bl	37464 <flatcc_json_parser_build_string@@Base>
   170a0:	mov	sl, r0
   170a4:	ldr	r0, [sp, #64]	; 0x40
   170a8:	cmp	r0, #0
   170ac:	beq	1d098 <main@@Base+0x7350>
   170b0:	ldr	r0, [sp, #40]	; 0x28
   170b4:	mov	r1, #0
   170b8:	ldr	r0, [r0]
   170bc:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   170c0:	cmp	r0, #0
   170c4:	beq	1d098 <main@@Base+0x7350>
   170c8:	ldr	r1, [sp, #64]	; 0x40
   170cc:	str	r1, [r0]
   170d0:	ldr	r4, [sp, #44]	; 0x2c
   170d4:	ldr	r5, [sp, #40]	; 0x28
   170d8:	sub	r0, r4, sl
   170dc:	cmp	r0, #2
   170e0:	blt	17140 <main@@Base+0x13f8>
   170e4:	b	17110 <main@@Base+0x13c8>
   170e8:	ldr	r5, [sp, #40]	; 0x28
   170ec:	ldr	r4, [sp, #44]	; 0x2c
   170f0:	mov	r1, r8
   170f4:	mov	r0, r5
   170f8:	mov	r2, r4
   170fc:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   17100:	mov	sl, r0
   17104:	sub	r0, r4, sl
   17108:	cmp	r0, #2
   1710c:	blt	17140 <main@@Base+0x13f8>
   17110:	ldrb	r0, [sl]
   17114:	cmp	r0, #32
   17118:	bls	1712c <main@@Base+0x13e4>
   1711c:	mov	r2, sl
   17120:	cmp	r2, r4
   17124:	bne	1715c <main@@Base+0x1414>
   17128:	b	17824 <main@@Base+0x1adc>
   1712c:	bne	17140 <main@@Base+0x13f8>
   17130:	mov	r2, sl
   17134:	ldrb	r0, [r2, #1]!
   17138:	cmp	r0, #32
   1713c:	bhi	17154 <main@@Base+0x140c>
   17140:	mov	r0, r5
   17144:	mov	r1, sl
   17148:	mov	r2, r4
   1714c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   17150:	mov	r2, r0
   17154:	cmp	r2, r4
   17158:	beq	17824 <main@@Base+0x1adc>
   1715c:	ldrb	r0, [r2]
   17160:	cmp	r0, #44	; 0x2c
   17164:	bne	1783c <main@@Base+0x1af4>
   17168:	add	r1, r2, #1
   1716c:	sub	r0, r4, r1
   17170:	cmp	r0, #2
   17174:	blt	171a4 <main@@Base+0x145c>
   17178:	ldrb	r0, [r1]
   1717c:	cmp	r0, #32
   17180:	bls	17194 <main@@Base+0x144c>
   17184:	mov	r2, r1
   17188:	cmp	r2, r4
   1718c:	bne	171bc <main@@Base+0x1474>
   17190:	b	178b8 <main@@Base+0x1b70>
   17194:	bne	171a4 <main@@Base+0x145c>
   17198:	ldrb	r0, [r2, #2]!
   1719c:	cmp	r0, #32
   171a0:	bhi	171b4 <main@@Base+0x146c>
   171a4:	mov	r0, r5
   171a8:	mov	r2, r4
   171ac:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   171b0:	mov	r2, r0
   171b4:	cmp	r2, r4
   171b8:	beq	178b8 <main@@Base+0x1b70>
   171bc:	ldrb	r0, [r2]
   171c0:	cmp	r0, #125	; 0x7d
   171c4:	bne	16978 <main@@Base+0xc30>
   171c8:	add	r1, r2, #1
   171cc:	sub	r0, r4, r1
   171d0:	cmp	r0, #2
   171d4:	blt	17a88 <main@@Base+0x1d40>
   171d8:	b	17858 <main@@Base+0x1b10>
   171dc:	cmp	r0, #93	; 0x5d
   171e0:	bne	177c4 <main@@Base+0x1a7c>
   171e4:	ldr	r6, [sp, #44]	; 0x2c
   171e8:	ldr	r9, [sp, #40]	; 0x28
   171ec:	add	r1, r2, #1
   171f0:	sub	r0, r6, r1
   171f4:	cmp	r0, #2
   171f8:	blt	179c4 <main@@Base+0x1c7c>
   171fc:	ldrb	r0, [r1]
   17200:	cmp	r0, #32
   17204:	bls	179a8 <main@@Base+0x1c60>
   17208:	ldr	r6, [sp, #44]	; 0x2c
   1720c:	ldr	r9, [sp, #40]	; 0x28
   17210:	mov	sl, r1
   17214:	b	1d4c4 <main@@Base+0x777c>
   17218:	ldr	r9, [sp, #40]	; 0x28
   1721c:	ldr	r6, [sp, #44]	; 0x2c
   17220:	mov	r1, r2
   17224:	mov	r0, r9
   17228:	mov	r2, r6
   1722c:	mov	r3, #9
   17230:	b	1c594 <main@@Base+0x684c>
   17234:	mov	sl, r6
   17238:	b	179f4 <main@@Base+0x1cac>
   1723c:	mov	r0, r9
   17240:	mov	r1, r6
   17244:	b	177d4 <main@@Base+0x1a8c>
   17248:	cmp	r0, #93	; 0x5d
   1724c:	bne	1780c <main@@Base+0x1ac4>
   17250:	ldr	r0, [sp, #44]	; 0x2c
   17254:	add	r1, sl, #1
   17258:	sub	r0, r0, r1
   1725c:	cmp	r0, #2
   17260:	blt	179e4 <main@@Base+0x1c9c>
   17264:	b	17300 <main@@Base+0x15b8>
   17268:	mov	sl, r6
   1726c:	ldr	r0, [sp, #32]
   17270:	ldr	r0, [r0]
   17274:	cmp	r0, #0
   17278:	bne	1cbfc <main@@Base+0x6eb4>
   1727c:	b	172d8 <main@@Base+0x1590>
   17280:	mov	r0, r9
   17284:	mov	r1, r6
   17288:	mov	r2, r6
   1728c:	b	17818 <main@@Base+0x1ad0>
   17290:	cmp	r0, #125	; 0x7d
   17294:	bne	1789c <main@@Base+0x1b54>
   17298:	ldr	r6, [sp, #44]	; 0x2c
   1729c:	ldr	r9, [sp, #40]	; 0x28
   172a0:	add	r1, r3, #1
   172a4:	sub	r0, r6, r1
   172a8:	cmp	r0, #2
   172ac:	blt	17a1c <main@@Base+0x1cd4>
   172b0:	ldrb	r0, [r1]
   172b4:	cmp	r0, #32
   172b8:	bls	17a00 <main@@Base+0x1cb8>
   172bc:	ldr	r6, [sp, #44]	; 0x2c
   172c0:	ldr	r9, [sp, #40]	; 0x28
   172c4:	mov	sl, r1
   172c8:	ldr	r0, [sp, #32]
   172cc:	ldr	r0, [r0]
   172d0:	cmp	r0, #0
   172d4:	bne	1cbfc <main@@Base+0x6eb4>
   172d8:	ldr	r0, [r9]
   172dc:	bl	30680 <flatcc_builder_end_table@@Base>
   172e0:	cmp	r0, #0
   172e4:	str	r0, [sp, #52]	; 0x34
   172e8:	bne	1cc20 <main@@Base+0x6ed8>
   172ec:	b	1cbfc <main@@Base+0x6eb4>
   172f0:	add	r1, sl, #1
   172f4:	sub	r0, r6, r1
   172f8:	cmp	r0, #2
   172fc:	blt	179e4 <main@@Base+0x1c9c>
   17300:	ldrb	r0, [r1]
   17304:	cmp	r0, #32
   17308:	bls	179d4 <main@@Base+0x1c8c>
   1730c:	mov	sl, r1
   17310:	b	179f4 <main@@Base+0x1cac>
   17314:	mov	r0, r9
   17318:	mov	r1, r6
   1731c:	b	178ac <main@@Base+0x1b64>
   17320:	bne	17330 <main@@Base+0x15e8>
   17324:	ldrb	r0, [sl, #2]!
   17328:	cmp	r0, #32
   1732c:	bhi	17340 <main@@Base+0x15f8>
   17330:	ldr	r0, [sp, #40]	; 0x28
   17334:	ldr	r2, [sp, #44]	; 0x2c
   17338:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1733c:	mov	sl, r0
   17340:	ldr	r5, [sp, #44]	; 0x2c
   17344:	cmp	sl, r5
   17348:	beq	1735c <main@@Base+0x1614>
   1734c:	ldrb	r0, [sl]
   17350:	cmp	r0, #93	; 0x5d
   17354:	beq	178d8 <main@@Base+0x1b90>
   17358:	mov	r5, sl
   1735c:	mov	r0, #0
   17360:	mov	r1, #1
   17364:	strb	r0, [fp, #-60]	; 0xffffffc4
   17368:	ldr	r0, [sp, #40]	; 0x28
   1736c:	ldr	r0, [r0]
   17370:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   17374:	cmp	r0, #0
   17378:	beq	1ff44 <main@@Base+0xa1fc>
   1737c:	mov	r7, r0
   17380:	mov	sl, r5
   17384:	ldr	r4, [sp, #44]	; 0x2c
   17388:	mov	r5, #0
   1738c:	str	r5, [fp, #-52]	; 0xffffffcc
   17390:	str	r5, [fp, #-56]	; 0xffffffc8
   17394:	strb	r5, [fp, #-60]	; 0xffffffc4
   17398:	str	r5, [sp, #56]	; 0x38
   1739c:	cmp	sl, r4
   173a0:	beq	173e8 <main@@Base+0x16a0>
   173a4:	sub	r0, fp, #56	; 0x38
   173a8:	mov	r1, sl
   173ac:	mov	r2, r4
   173b0:	add	r3, sp, #56	; 0x38
   173b4:	str	r0, [sp]
   173b8:	ldr	r0, [sp, #40]	; 0x28
   173bc:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   173c0:	cmp	r0, sl
   173c4:	beq	173fc <main@@Base+0x16b4>
   173c8:	mov	r1, r0
   173cc:	ldr	r0, [sp, #56]	; 0x38
   173d0:	cmp	r0, #0
   173d4:	beq	17414 <main@@Base+0x16cc>
   173d8:	ldr	r6, [sp, #40]	; 0x28
   173dc:	ldr	r4, [sp, #44]	; 0x2c
   173e0:	mov	r3, #8
   173e4:	b	17434 <main@@Base+0x16ec>
   173e8:	mov	r1, r4
   173ec:	ldr	r6, [sp, #40]	; 0x28
   173f0:	cmp	sl, r1
   173f4:	bne	17494 <main@@Base+0x174c>
   173f8:	b	1744c <main@@Base+0x1704>
   173fc:	mov	r1, sl
   17400:	ldr	r4, [sp, #44]	; 0x2c
   17404:	ldr	r6, [sp, #40]	; 0x28
   17408:	cmp	sl, r1
   1740c:	bne	17494 <main@@Base+0x174c>
   17410:	b	1744c <main@@Base+0x1704>
   17414:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17418:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1741c:	subs	r3, r0, #256	; 0x100
   17420:	sbcs	r2, r2, #0
   17424:	bcc	1759c <main@@Base+0x1854>
   17428:	ldr	r6, [sp, #40]	; 0x28
   1742c:	ldr	r4, [sp, #44]	; 0x2c
   17430:	mov	r3, #7
   17434:	mov	r0, r6
   17438:	mov	r2, r4
   1743c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   17440:	mov	r1, r0
   17444:	cmp	sl, r1
   17448:	bne	17494 <main@@Base+0x174c>
   1744c:	sub	r0, fp, #60	; 0x3c
   17450:	mov	r1, sl
   17454:	mov	r2, r4
   17458:	str	r0, [sp]
   1745c:	movw	r0, #53516	; 0xd10c
   17460:	movt	r0, #5
   17464:	add	r3, r0, #84	; 0x54
   17468:	mov	r0, r6
   1746c:	bl	22024 <main@@Base+0xc2dc>
   17470:	mov	r1, r0
   17474:	cmp	r0, sl
   17478:	beq	1ff3c <main@@Base+0xa1f4>
   1747c:	ldr	r0, [sp, #44]	; 0x2c
   17480:	cmp	r1, r0
   17484:	beq	1ff3c <main@@Base+0xa1f4>
   17488:	ldrb	r5, [fp, #-60]	; 0xffffffc4
   1748c:	ldr	r4, [sp, #44]	; 0x2c
   17490:	ldr	r6, [sp, #40]	; 0x28
   17494:	sub	r0, r4, r1
   17498:	strb	r5, [r7]
   1749c:	cmp	r0, #2
   174a0:	blt	174e0 <main@@Base+0x1798>
   174a4:	ldrb	r0, [r1]
   174a8:	cmp	r0, #32
   174ac:	bls	174c4 <main@@Base+0x177c>
   174b0:	ldr	r4, [sp, #44]	; 0x2c
   174b4:	mov	sl, r1
   174b8:	cmp	sl, r4
   174bc:	bne	174f8 <main@@Base+0x17b0>
   174c0:	b	178c8 <main@@Base+0x1b80>
   174c4:	ldr	r4, [sp, #44]	; 0x2c
   174c8:	ldr	r6, [sp, #40]	; 0x28
   174cc:	bne	174e0 <main@@Base+0x1798>
   174d0:	mov	sl, r1
   174d4:	ldrb	r0, [sl, #1]!
   174d8:	cmp	r0, #32
   174dc:	bhi	174f0 <main@@Base+0x17a8>
   174e0:	mov	r0, r6
   174e4:	mov	r2, r4
   174e8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   174ec:	mov	sl, r0
   174f0:	cmp	sl, r4
   174f4:	beq	178c8 <main@@Base+0x1b80>
   174f8:	ldrb	r0, [sl]
   174fc:	cmp	r0, #44	; 0x2c
   17500:	bne	178d0 <main@@Base+0x1b88>
   17504:	ldr	r4, [sp, #44]	; 0x2c
   17508:	add	r1, sl, #1
   1750c:	sub	r0, r4, r1
   17510:	cmp	r0, #2
   17514:	ldr	r0, [sp, #40]	; 0x28
   17518:	blt	17554 <main@@Base+0x180c>
   1751c:	ldrb	r0, [r1]
   17520:	cmp	r0, #32
   17524:	bls	1753c <main@@Base+0x17f4>
   17528:	ldr	r4, [sp, #44]	; 0x2c
   1752c:	mov	sl, r1
   17530:	cmp	sl, r4
   17534:	bne	17568 <main@@Base+0x1820>
   17538:	b	1792c <main@@Base+0x1be4>
   1753c:	ldr	r4, [sp, #44]	; 0x2c
   17540:	ldr	r0, [sp, #40]	; 0x28
   17544:	bne	17554 <main@@Base+0x180c>
   17548:	ldrb	r2, [sl, #2]!
   1754c:	cmp	r2, #32
   17550:	bhi	17560 <main@@Base+0x1818>
   17554:	mov	r2, r4
   17558:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1755c:	mov	sl, r0
   17560:	cmp	sl, r4
   17564:	beq	1792c <main@@Base+0x1be4>
   17568:	ldrb	r0, [sl]
   1756c:	cmp	r0, #93	; 0x5d
   17570:	beq	178d8 <main@@Base+0x1b90>
   17574:	mov	r0, #0
   17578:	mov	r1, #1
   1757c:	strb	r0, [fp, #-60]	; 0xffffffc4
   17580:	ldr	r0, [sp, #40]	; 0x28
   17584:	ldr	r0, [r0]
   17588:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   1758c:	mov	r7, r0
   17590:	cmp	r0, #0
   17594:	bne	17384 <main@@Base+0x163c>
   17598:	b	1fed0 <main@@Base+0xa188>
   1759c:	mov	r5, r0
   175a0:	strb	r0, [fp, #-60]	; 0xffffffc4
   175a4:	ldr	r4, [sp, #44]	; 0x2c
   175a8:	ldr	r6, [sp, #40]	; 0x28
   175ac:	cmp	sl, r1
   175b0:	bne	17494 <main@@Base+0x174c>
   175b4:	b	1744c <main@@Base+0x1704>
   175b8:	ldr	r6, [sp, #44]	; 0x2c
   175bc:	ldr	r9, [sp, #40]	; 0x28
   175c0:	b	1c44c <main@@Base+0x6704>
   175c4:	ldr	r6, [sp, #44]	; 0x2c
   175c8:	ldr	r9, [sp, #40]	; 0x28
   175cc:	bne	175e0 <main@@Base+0x1898>
   175d0:	ldrb	r0, [r2, #2]!
   175d4:	cmp	r0, #32
   175d8:	mov	sl, r2
   175dc:	bhi	1c59c <main@@Base+0x6854>
   175e0:	mov	r0, r9
   175e4:	mov	r2, r6
   175e8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   175ec:	b	1c598 <main@@Base+0x6850>
   175f0:	ldr	r9, [sp, #40]	; 0x28
   175f4:	ldr	r6, [sp, #44]	; 0x2c
   175f8:	mov	r1, r2
   175fc:	mov	r0, r9
   17600:	mov	r2, r6
   17604:	mov	r3, #9
   17608:	b	1cd54 <main@@Base+0x700c>
   1760c:	ldr	r0, [sp, #40]	; 0x28
   17610:	ldr	r2, [sp, #44]	; 0x2c
   17614:	mov	r1, sl
   17618:	mov	r3, #9
   1761c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   17620:	b	177fc <main@@Base+0x1ab4>
   17624:	ldr	r5, [fp, #-56]	; 0xffffffc8
   17628:	str	r5, [fp, #-60]	; 0xffffffc4
   1762c:	cmp	sl, r8
   17630:	bne	17670 <main@@Base+0x1928>
   17634:	sub	r0, fp, #60	; 0x3c
   17638:	ldr	r2, [sp, #44]	; 0x2c
   1763c:	mov	r1, sl
   17640:	str	r0, [sp]
   17644:	movw	r0, #53516	; 0xd10c
   17648:	movt	r0, #5
   1764c:	add	r3, r0, #48	; 0x30
   17650:	ldr	r0, [sp, #40]	; 0x28
   17654:	bl	248a8 <main@@Base+0xeb60>
   17658:	cmp	r0, sl
   1765c:	mov	r8, r0
   17660:	ldrne	r0, [sp, #44]	; 0x2c
   17664:	cmpne	r8, r0
   17668:	beq	1fecc <main@@Base+0xa184>
   1766c:	ldr	r5, [fp, #-60]	; 0xffffffc4
   17670:	ldr	r9, [sp, #40]	; 0x28
   17674:	cmp	r5, #0
   17678:	bne	17688 <main@@Base+0x1940>
   1767c:	ldrb	r0, [r9, #8]
   17680:	tst	r0, #2
   17684:	beq	176ac <main@@Base+0x1964>
   17688:	ldr	r0, [r9]
   1768c:	mov	r1, #21
   17690:	mov	r2, #4
   17694:	mov	r3, #4
   17698:	bl	31040 <flatcc_builder_table_add@@Base>
   1769c:	cmp	r0, #0
   176a0:	beq	1fecc <main@@Base+0xa184>
   176a4:	ldr	r9, [sp, #40]	; 0x28
   176a8:	str	r5, [r0]
   176ac:	ldr	r6, [sp, #44]	; 0x2c
   176b0:	sub	r0, r6, r8
   176b4:	cmp	r0, #2
   176b8:	bge	1fd4c <main@@Base+0xa004>
   176bc:	b	1fdc0 <main@@Base+0xa078>
   176c0:	ldr	r9, [sp, #40]	; 0x28
   176c4:	mov	sl, r6
   176c8:	b	1f134 <main@@Base+0x93ec>
   176cc:	cmp	r0, #93	; 0x5d
   176d0:	bne	17a2c <main@@Base+0x1ce4>
   176d4:	ldr	r0, [sp, #44]	; 0x2c
   176d8:	add	r1, sl, #1
   176dc:	sub	r0, r0, r1
   176e0:	cmp	r0, #2
   176e4:	blt	17788 <main@@Base+0x1a40>
   176e8:	ldrb	r0, [r1]
   176ec:	cmp	r0, #32
   176f0:	bhi	1777c <main@@Base+0x1a34>
   176f4:	bne	17788 <main@@Base+0x1a40>
   176f8:	ldrb	r0, [sl, #2]!
   176fc:	cmp	r0, #32
   17700:	bhi	17a44 <main@@Base+0x1cfc>
   17704:	b	17788 <main@@Base+0x1a40>
   17708:	mov	r0, r9
   1770c:	mov	r1, r6
   17710:	mov	r2, r6
   17714:	b	17a38 <main@@Base+0x1cf0>
   17718:	ldr	r6, [sp, #44]	; 0x2c
   1771c:	ldr	r9, [sp, #40]	; 0x28
   17720:	bne	17734 <main@@Base+0x19ec>
   17724:	ldrb	r0, [sl, #2]!
   17728:	cmp	r0, #32
   1772c:	mov	r8, sl
   17730:	bhi	1c668 <main@@Base+0x6920>
   17734:	mov	r0, r9
   17738:	mov	r2, r6
   1773c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   17740:	b	1c664 <main@@Base+0x691c>
   17744:	ldr	r9, [sp, #40]	; 0x28
   17748:	ldr	r6, [sp, #44]	; 0x2c
   1774c:	mov	r1, r2
   17750:	mov	r0, r9
   17754:	mov	r2, r6
   17758:	mov	r3, #10
   1775c:	b	1c434 <main@@Base+0x66ec>
   17760:	add	r1, sl, #1
   17764:	sub	r0, r6, r1
   17768:	cmp	r0, #2
   1776c:	blt	17788 <main@@Base+0x1a40>
   17770:	ldrb	r0, [r1]
   17774:	cmp	r0, #32
   17778:	bls	176f4 <main@@Base+0x19ac>
   1777c:	ldr	r9, [sp, #40]	; 0x28
   17780:	mov	sl, r1
   17784:	b	1f134 <main@@Base+0x93ec>
   17788:	ldr	r0, [sp, #40]	; 0x28
   1778c:	ldr	r2, [sp, #44]	; 0x2c
   17790:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   17794:	b	17a40 <main@@Base+0x1cf8>
   17798:	ldr	r6, [sp, #44]	; 0x2c
   1779c:	ldr	r9, [sp, #40]	; 0x28
   177a0:	bne	177b4 <main@@Base+0x1a6c>
   177a4:	ldrb	r0, [r2, #2]!
   177a8:	cmp	r0, #32
   177ac:	mov	sl, r2
   177b0:	bhi	1cd5c <main@@Base+0x7014>
   177b4:	mov	r0, r9
   177b8:	mov	r2, r6
   177bc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   177c0:	b	1cd58 <main@@Base+0x7010>
   177c4:	ldr	r9, [sp, #40]	; 0x28
   177c8:	ldr	r6, [sp, #44]	; 0x2c
   177cc:	mov	r1, r2
   177d0:	mov	r0, r9
   177d4:	mov	r2, r6
   177d8:	mov	r3, #9
   177dc:	b	1d4bc <main@@Base+0x7774>
   177e0:	bne	177f0 <main@@Base+0x1aa8>
   177e4:	ldrb	r0, [sl, #2]!
   177e8:	cmp	r0, #32
   177ec:	bhi	17800 <main@@Base+0x1ab8>
   177f0:	ldr	r0, [sp, #40]	; 0x28
   177f4:	ldr	r2, [sp, #44]	; 0x2c
   177f8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   177fc:	mov	sl, r0
   17800:	ldr	r6, [sp, #44]	; 0x2c
   17804:	ldr	r9, [sp, #40]	; 0x28
   17808:	b	1d180 <main@@Base+0x7438>
   1780c:	ldr	r0, [sp, #40]	; 0x28
   17810:	ldr	r2, [sp, #44]	; 0x2c
   17814:	mov	r1, sl
   17818:	mov	r3, #9
   1781c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   17820:	b	179f0 <main@@Base+0x1ca8>
   17824:	mov	sl, r4
   17828:	ldr	r0, [sp, #32]
   1782c:	ldr	r0, [r0]
   17830:	cmp	r0, #0
   17834:	bne	1d098 <main@@Base+0x7350>
   17838:	b	17878 <main@@Base+0x1b30>
   1783c:	cmp	r0, #125	; 0x7d
   17840:	bne	17a4c <main@@Base+0x1d04>
   17844:	ldr	r0, [sp, #44]	; 0x2c
   17848:	add	r1, r2, #1
   1784c:	sub	r0, r0, r1
   17850:	cmp	r0, #2
   17854:	blt	17a88 <main@@Base+0x1d40>
   17858:	ldrb	r0, [r1]
   1785c:	cmp	r0, #32
   17860:	bls	17a74 <main@@Base+0x1d2c>
   17864:	mov	sl, r1
   17868:	ldr	r0, [sp, #32]
   1786c:	ldr	r0, [r0]
   17870:	cmp	r0, #0
   17874:	bne	1d098 <main@@Base+0x7350>
   17878:	ldr	r0, [sp, #40]	; 0x28
   1787c:	ldr	r0, [r0]
   17880:	bl	30680 <flatcc_builder_end_table@@Base>
   17884:	cmp	r0, #0
   17888:	str	r0, [sp, #52]	; 0x34
   1788c:	beq	1d098 <main@@Base+0x7350>
   17890:	ldr	r6, [sp, #44]	; 0x2c
   17894:	ldr	r9, [sp, #40]	; 0x28
   17898:	b	1d0c4 <main@@Base+0x737c>
   1789c:	ldr	r9, [sp, #40]	; 0x28
   178a0:	ldr	r6, [sp, #44]	; 0x2c
   178a4:	mov	r1, r3
   178a8:	mov	r0, r9
   178ac:	mov	r2, r6
   178b0:	mov	r3, #10
   178b4:	b	1cbe4 <main@@Base+0x6e9c>
   178b8:	mov	r0, r5
   178bc:	mov	r1, r4
   178c0:	mov	r2, r4
   178c4:	b	17a58 <main@@Base+0x1d10>
   178c8:	ldr	sl, [sp, #44]	; 0x2c
   178cc:	b	1795c <main@@Base+0x1c14>
   178d0:	cmp	r0, #93	; 0x5d
   178d4:	bne	17a60 <main@@Base+0x1d18>
   178d8:	ldr	r0, [sp, #44]	; 0x2c
   178dc:	add	r1, sl, #1
   178e0:	sub	r0, r0, r1
   178e4:	cmp	r0, #2
   178e8:	blt	1794c <main@@Base+0x1c04>
   178ec:	ldrb	r0, [r1]
   178f0:	cmp	r0, #32
   178f4:	bls	1793c <main@@Base+0x1bf4>
   178f8:	mov	sl, r1
   178fc:	b	1795c <main@@Base+0x1c14>
   17900:	ldr	r6, [sp, #44]	; 0x2c
   17904:	ldr	r9, [sp, #40]	; 0x28
   17908:	bne	1791c <main@@Base+0x1bd4>
   1790c:	ldrb	r0, [r2, #2]!
   17910:	cmp	r0, #32
   17914:	mov	sl, r2
   17918:	bhi	1c43c <main@@Base+0x66f4>
   1791c:	mov	r0, r9
   17920:	mov	r2, r6
   17924:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   17928:	b	1c438 <main@@Base+0x66f0>
   1792c:	ldr	r1, [sp, #44]	; 0x2c
   17930:	ldr	r0, [sp, #40]	; 0x28
   17934:	mov	r2, r1
   17938:	b	17a6c <main@@Base+0x1d24>
   1793c:	bne	1794c <main@@Base+0x1c04>
   17940:	ldrb	r0, [sl, #2]!
   17944:	cmp	r0, #32
   17948:	bhi	1795c <main@@Base+0x1c14>
   1794c:	ldr	r0, [sp, #40]	; 0x28
   17950:	ldr	r2, [sp, #44]	; 0x2c
   17954:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   17958:	mov	sl, r0
   1795c:	ldr	r9, [sp, #40]	; 0x28
   17960:	ldr	r0, [r9]
   17964:	bl	30998 <flatcc_builder_end_vector@@Base>
   17968:	ldr	r6, [sp, #44]	; 0x2c
   1796c:	cmp	r0, #0
   17970:	str	r0, [sp, #52]	; 0x34
   17974:	beq	16638 <main@@Base+0x8f0>
   17978:	ldr	r0, [r9]
   1797c:	mov	r1, #13
   17980:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   17984:	cmp	r0, #0
   17988:	beq	16638 <main@@Base+0x8f0>
   1798c:	ldr	r1, [sp, #52]	; 0x34
   17990:	mov	r8, sl
   17994:	str	r1, [r0]
   17998:	sub	r0, r6, r8
   1799c:	cmp	r0, #2
   179a0:	bge	1fd4c <main@@Base+0xa004>
   179a4:	b	1fdc0 <main@@Base+0xa078>
   179a8:	ldr	r6, [sp, #44]	; 0x2c
   179ac:	ldr	r9, [sp, #40]	; 0x28
   179b0:	bne	179c4 <main@@Base+0x1c7c>
   179b4:	ldrb	r0, [r2, #2]!
   179b8:	cmp	r0, #32
   179bc:	mov	sl, r2
   179c0:	bhi	1d4c4 <main@@Base+0x777c>
   179c4:	mov	r0, r9
   179c8:	mov	r2, r6
   179cc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   179d0:	b	1d4c0 <main@@Base+0x7778>
   179d4:	bne	179e4 <main@@Base+0x1c9c>
   179d8:	ldrb	r0, [sl, #2]!
   179dc:	cmp	r0, #32
   179e0:	bhi	179f4 <main@@Base+0x1cac>
   179e4:	ldr	r0, [sp, #40]	; 0x28
   179e8:	ldr	r2, [sp, #44]	; 0x2c
   179ec:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   179f0:	mov	sl, r0
   179f4:	ldr	r6, [sp, #44]	; 0x2c
   179f8:	ldr	r9, [sp, #40]	; 0x28
   179fc:	b	1d998 <main@@Base+0x7c50>
   17a00:	ldr	r6, [sp, #44]	; 0x2c
   17a04:	ldr	r9, [sp, #40]	; 0x28
   17a08:	bne	17a1c <main@@Base+0x1cd4>
   17a0c:	ldrb	r0, [r3, #2]!
   17a10:	cmp	r0, #32
   17a14:	mov	sl, r3
   17a18:	bhi	1cbec <main@@Base+0x6ea4>
   17a1c:	mov	r0, r9
   17a20:	mov	r2, r6
   17a24:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   17a28:	b	1cbe8 <main@@Base+0x6ea0>
   17a2c:	ldr	r0, [sp, #40]	; 0x28
   17a30:	ldr	r2, [sp, #44]	; 0x2c
   17a34:	mov	r1, sl
   17a38:	mov	r3, #9
   17a3c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   17a40:	mov	sl, r0
   17a44:	ldr	r9, [sp, #40]	; 0x28
   17a48:	b	1f134 <main@@Base+0x93ec>
   17a4c:	mov	r1, r2
   17a50:	ldr	r0, [sp, #40]	; 0x28
   17a54:	ldr	r2, [sp, #44]	; 0x2c
   17a58:	mov	r3, #10
   17a5c:	b	1d080 <main@@Base+0x7338>
   17a60:	ldr	r0, [sp, #40]	; 0x28
   17a64:	ldr	r2, [sp, #44]	; 0x2c
   17a68:	mov	r1, sl
   17a6c:	mov	r3, #9
   17a70:	b	1dacc <main@@Base+0x7d84>
   17a74:	bne	17a88 <main@@Base+0x1d40>
   17a78:	ldrb	r0, [r2, #2]!
   17a7c:	cmp	r0, #32
   17a80:	mov	sl, r2
   17a84:	bhi	1d088 <main@@Base+0x7340>
   17a88:	ldr	r0, [sp, #40]	; 0x28
   17a8c:	ldr	r2, [sp, #44]	; 0x2c
   17a90:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   17a94:	b	1d084 <main@@Base+0x733c>
   17a98:	cmp	r2, r6
   17a9c:	mov	sl, r6
   17aa0:	beq	17ad0 <main@@Base+0x1d88>
   17aa4:	ldrb	r0, [r2]
   17aa8:	cmp	r0, #34	; 0x22
   17aac:	bne	17ab8 <main@@Base+0x1d70>
   17ab0:	add	sl, r2, #1
   17ab4:	b	17ad0 <main@@Base+0x1d88>
   17ab8:	mov	r1, r2
   17abc:	mov	r0, r9
   17ac0:	mov	r2, r6
   17ac4:	mov	r3, #5
   17ac8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   17acc:	mov	sl, r0
   17ad0:	sub	r8, r6, sl
   17ad4:	mov	r0, #8
   17ad8:	cmp	r8, #8
   17adc:	movcc	r0, r8
   17ae0:	and	r0, r0, #15
   17ae4:	sub	r2, r0, #1
   17ae8:	cmp	r2, #7
   17aec:	bhi	1a500 <main@@Base+0x47b8>
   17af0:	add	r0, pc, #32
   17af4:	mov	r9, #0
   17af8:	mov	ip, #0
   17afc:	mov	r7, #0
   17b00:	mov	r1, #0
   17b04:	mov	r3, #0
   17b08:	mov	r5, #0
   17b0c:	mov	r4, #0
   17b10:	mov	r6, #0
   17b14:	ldr	pc, [r0, r2, lsl #2]
   17b18:	andeq	r7, r1, ip, ror fp
   17b1c:	andeq	r7, r1, r4, ror fp
   17b20:	andeq	r7, r1, ip, ror #22
   17b24:	andeq	r7, r1, r4, ror #22
   17b28:	andeq	r7, r1, r8, asr fp
   17b2c:	andeq	r7, r1, ip, asr #22
   17b30:	andeq	r7, r1, ip, lsr fp
   17b34:	andeq	r7, r1, r8, lsr fp
   17b38:	ldrb	ip, [sl, #7]
   17b3c:	ldrb	r0, [sl, #6]
   17b40:	mov	r7, r9
   17b44:	orr	r0, ip, r0, lsl #8
   17b48:	mov	r9, r0
   17b4c:	ldrb	r0, [sl, #5]
   17b50:	mov	r1, r7
   17b54:	orr	r9, r9, r0, lsl #16
   17b58:	ldrb	r0, [sl, #4]
   17b5c:	mov	r3, r1
   17b60:	orr	r9, r9, r0, lsl #24
   17b64:	ldrb	r0, [sl, #3]
   17b68:	orr	r5, r0, r3
   17b6c:	ldrb	r0, [sl, #2]
   17b70:	orr	r4, r5, r0, lsl #8
   17b74:	ldrb	r0, [sl, #1]
   17b78:	orr	r6, r4, r0, lsl #16
   17b7c:	ldrb	r0, [sl]
   17b80:	movw	r1, #29281	; 0x7261
   17b84:	movw	r5, #29556	; 0x7374
   17b88:	movt	r1, #24946	; 0x6172
   17b8c:	movt	r5, #29797	; 0x7465
   17b90:	subs	r1, r9, r1
   17b94:	orr	r0, r6, r0, lsl #24
   17b98:	sbcs	r1, r0, r5
   17b9c:	bcs	17c4c <main@@Base+0x1f04>
   17ba0:	movw	r1, #28004	; 0x6d64
   17ba4:	movw	r2, #30309	; 0x7665
   17ba8:	movt	r1, #28257	; 0x6e61
   17bac:	movt	r2, #26990	; 0x696e
   17bb0:	cmp	r0, r1
   17bb4:	bhi	17dd0 <main@@Base+0x2088>
   17bb8:	ldr	r6, [sp, #44]	; 0x2c
   17bbc:	movw	r1, #25975	; 0x6577
   17bc0:	movt	r1, #26220	; 0x666c
   17bc4:	cmp	r0, r1
   17bc8:	bhi	17edc <main@@Base+0x2194>
   17bcc:	movw	r1, #27759	; 0x6c6f
   17bd0:	movt	r1, #25455	; 0x636f
   17bd4:	eor	r2, r0, r1
   17bd8:	and	r1, r9, #-16777216	; 0xff000000
   17bdc:	eor	r3, r1, #1912602624	; 0x72000000
   17be0:	orrs	r2, r3, r2
   17be4:	beq	1878c <main@@Base+0x2a44>
   17be8:	movw	r2, #25965	; 0x656d
   17bec:	ldr	r9, [sp, #40]	; 0x28
   17bf0:	eor	r1, r1, #2030043136	; 0x79000000
   17bf4:	movt	r2, #25966	; 0x656e
   17bf8:	eor	r0, r0, r2
   17bfc:	orrs	r0, r1, r0
   17c00:	bne	1a500 <main@@Base+0x47b8>
   17c04:	cmp	r8, #6
   17c08:	mov	r1, sl
   17c0c:	blt	19a6c <main@@Base+0x3d24>
   17c10:	ldrb	r0, [sl, #5]
   17c14:	mov	r1, sl
   17c18:	cmp	r0, #34	; 0x22
   17c1c:	bne	19a6c <main@@Base+0x3d24>
   17c20:	add	r2, sl, #6
   17c24:	sub	r0, r6, r2
   17c28:	cmp	r0, #2
   17c2c:	blt	19064 <main@@Base+0x331c>
   17c30:	ldrb	r0, [r2]
   17c34:	cmp	r0, #32
   17c38:	bls	19050 <main@@Base+0x3308>
   17c3c:	mov	r1, r2
   17c40:	cmp	r1, r6
   17c44:	bne	19080 <main@@Base+0x3338>
   17c48:	b	190b8 <main@@Base+0x3370>
   17c4c:	movw	r1, #0
   17c50:	movt	r1, #26163	; 0x6633
   17c54:	subs	r1, r9, r1
   17c58:	sbcs	r1, r0, r5
   17c5c:	bcs	17e5c <main@@Base+0x2114>
   17c60:	movw	r1, #29281	; 0x7261
   17c64:	ldr	r6, [sp, #44]	; 0x2c
   17c68:	movt	r1, #24946	; 0x6172
   17c6c:	eor	r2, r9, r1
   17c70:	eor	r1, r0, r5
   17c74:	orrs	r2, r2, r1
   17c78:	bne	17f50 <main@@Base+0x2208>
   17c7c:	add	r8, sl, #8
   17c80:	mov	r0, #8
   17c84:	sub	ip, r6, r8
   17c88:	cmp	ip, #8
   17c8c:	movcc	r0, ip
   17c90:	and	r0, r0, #15
   17c94:	sub	r6, r0, #1
   17c98:	cmp	r6, #7
   17c9c:	bhi	197b0 <main@@Base+0x3a68>
   17ca0:	add	r0, pc, #32
   17ca4:	mov	r1, #0
   17ca8:	mov	lr, #0
   17cac:	mov	r9, #0
   17cb0:	mov	r5, #0
   17cb4:	mov	r3, #0
   17cb8:	mov	r7, #0
   17cbc:	mov	r4, #0
   17cc0:	mov	r2, #0
   17cc4:	ldr	pc, [r0, r6, lsl #2]
   17cc8:	andeq	r7, r1, ip, lsr #26
   17ccc:	andeq	r7, r1, r4, lsr #26
   17cd0:	andeq	r7, r1, ip, lsl sp
   17cd4:	andeq	r7, r1, r4, lsl sp
   17cd8:	andeq	r7, r1, r8, lsl #26
   17cdc:	strdeq	r7, [r1], -ip
   17ce0:	andeq	r7, r1, ip, ror #25
   17ce4:	andeq	r7, r1, r8, ror #25
   17ce8:	ldrb	lr, [sl, #15]
   17cec:	ldrb	r0, [sl, #14]
   17cf0:	mov	r9, r1
   17cf4:	orr	r0, lr, r0, lsl #8
   17cf8:	mov	r1, r0
   17cfc:	ldrb	r0, [sl, #13]
   17d00:	mov	r5, r9
   17d04:	orr	r1, r1, r0, lsl #16
   17d08:	ldrb	r0, [sl, #12]
   17d0c:	mov	r3, r5
   17d10:	orr	r1, r1, r0, lsl #24
   17d14:	ldrb	r0, [sl, #11]
   17d18:	orr	r7, r0, r3
   17d1c:	ldrb	r0, [sl, #10]
   17d20:	orr	r4, r7, r0, lsl #8
   17d24:	ldrb	r0, [sl, #9]
   17d28:	orr	r2, r4, r0, lsl #16
   17d2c:	ldrb	r0, [r8]
   17d30:	movw	r7, #26227	; 0x6673
   17d34:	movt	r7, #31087	; 0x796f
   17d38:	orr	r2, r2, r0, lsl #24
   17d3c:	movw	r0, #26989	; 0x696d
   17d40:	movt	r0, #29810	; 0x7472
   17d44:	subs	r0, r0, r1
   17d48:	sbcs	r0, r7, r2
   17d4c:	bcc	186c0 <main@@Base+0x2978>
   17d50:	movw	r0, #29797	; 0x7465
   17d54:	eor	r3, r2, r7
   17d58:	movt	r0, #28530	; 0x6f72
   17d5c:	eor	r0, r1, r0
   17d60:	orrs	r0, r0, r3
   17d64:	beq	18b70 <main@@Base+0x2e28>
   17d68:	movw	r0, #27763	; 0x6c73
   17d6c:	movt	r0, #28527	; 0x6f6f
   17d70:	eor	r0, r1, r0
   17d74:	movw	r1, #26210	; 0x6662
   17d78:	movt	r1, #31087	; 0x796f
   17d7c:	eor	r1, r2, r1
   17d80:	orrs	r0, r0, r1
   17d84:	bne	197b0 <main@@Base+0x3a68>
   17d88:	cmp	ip, #9
   17d8c:	blt	197b0 <main@@Base+0x3a68>
   17d90:	ldrb	r0, [sl, #16]
   17d94:	cmp	r0, #34	; 0x22
   17d98:	bne	197b0 <main@@Base+0x3a68>
   17d9c:	ldr	r4, [sp, #44]	; 0x2c
   17da0:	ldr	r5, [sp, #40]	; 0x28
   17da4:	add	r1, sl, #17
   17da8:	sub	r0, r4, r1
   17dac:	cmp	r0, #2
   17db0:	blt	19764 <main@@Base+0x3a1c>
   17db4:	ldrb	r0, [r1]
   17db8:	cmp	r0, #32
   17dbc:	bls	19754 <main@@Base+0x3a0c>
   17dc0:	mov	sl, r1
   17dc4:	cmp	sl, r4
   17dc8:	bne	1977c <main@@Base+0x3a34>
   17dcc:	b	197c4 <main@@Base+0x3a7c>
   17dd0:	ldr	r6, [sp, #44]	; 0x2c
   17dd4:	movw	r1, #29555	; 0x7373
   17dd8:	movt	r1, #29797	; 0x7465
   17ddc:	cmp	r0, r1
   17de0:	bhi	1801c <main@@Base+0x22d4>
   17de4:	movw	r3, #24430	; 0x5f6e
   17de8:	movw	r2, #29285	; 0x7265
   17dec:	movt	r3, #28276	; 0x6e74
   17df0:	movt	r2, #28769	; 0x7061
   17df4:	subs	r1, r9, r3
   17df8:	sbcs	r1, r0, r2
   17dfc:	bcs	181c0 <main@@Base+0x2478>
   17e00:	movw	r1, #28005	; 0x6d65
   17e04:	movt	r1, #28257	; 0x6e61
   17e08:	teq	r0, r1
   17e0c:	bne	1a4fc <main@@Base+0x47b4>
   17e10:	ldr	r9, [sp, #40]	; 0x28
   17e14:	cmp	r8, #5
   17e18:	mov	r1, sl
   17e1c:	blt	19c4c <main@@Base+0x3f04>
   17e20:	ldrb	r0, [sl, #4]
   17e24:	mov	r1, sl
   17e28:	cmp	r0, #34	; 0x22
   17e2c:	bne	19c4c <main@@Base+0x3f04>
   17e30:	add	r2, sl, #5
   17e34:	sub	r0, r6, r2
   17e38:	cmp	r0, #2
   17e3c:	blt	1915c <main@@Base+0x3414>
   17e40:	ldrb	r0, [r2]
   17e44:	cmp	r0, #32
   17e48:	bls	19148 <main@@Base+0x3400>
   17e4c:	mov	r1, r2
   17e50:	cmp	r1, r6
   17e54:	bne	19178 <main@@Base+0x3430>
   17e58:	b	191b0 <main@@Base+0x3468>
   17e5c:	movw	r2, #29544	; 0x7368
   17e60:	ldr	r6, [sp, #44]	; 0x2c
   17e64:	movt	r2, #26721	; 0x6861
   17e68:	subs	r1, r9, r2
   17e6c:	sbcs	r1, r0, r5
   17e70:	bcs	1807c <main@@Base+0x2334>
   17e74:	movw	r1, #0
   17e78:	bfc	r9, #0, #16
   17e7c:	eor	r0, r0, r5
   17e80:	movt	r1, #26163	; 0x6633
   17e84:	eor	r1, r9, r1
   17e88:	orrs	r0, r1, r0
   17e8c:	bne	1a4fc <main@@Base+0x47b4>
   17e90:	ldr	r9, [sp, #40]	; 0x28
   17e94:	cmp	r8, #7
   17e98:	mov	r7, sl
   17e9c:	blt	19424 <main@@Base+0x36dc>
   17ea0:	ldrb	r0, [sl, #6]
   17ea4:	mov	r7, sl
   17ea8:	cmp	r0, #34	; 0x22
   17eac:	bne	19424 <main@@Base+0x36dc>
   17eb0:	add	r1, sl, #7
   17eb4:	sub	r0, r6, r1
   17eb8:	cmp	r0, #2
   17ebc:	blt	18f6c <main@@Base+0x3224>
   17ec0:	ldrb	r0, [r1]
   17ec4:	cmp	r0, #32
   17ec8:	bls	18f58 <main@@Base+0x3210>
   17ecc:	mov	r7, r1
   17ed0:	cmp	r7, r6
   17ed4:	bne	18f84 <main@@Base+0x323c>
   17ed8:	b	18fbc <main@@Base+0x3274>
   17edc:	movw	r1, #65535	; 0xffff
   17ee0:	movw	r3, #28530	; 0x6f72
   17ee4:	movt	r1, #26735	; 0x686f
   17ee8:	movt	r3, #28276	; 0x6e74
   17eec:	cmp	r0, r1
   17ef0:	bhi	1839c <main@@Base+0x2654>
   17ef4:	movw	r1, #25976	; 0x6578
   17ef8:	movt	r1, #26220	; 0x666c
   17efc:	teq	r0, r1
   17f00:	bne	1a4fc <main@@Base+0x47b4>
   17f04:	ldr	r9, [sp, #40]	; 0x28
   17f08:	cmp	r8, #5
   17f0c:	mov	r8, sl
   17f10:	blt	19cac <main@@Base+0x3f64>
   17f14:	ldrb	r0, [sl, #4]
   17f18:	mov	r8, sl
   17f1c:	cmp	r0, #34	; 0x22
   17f20:	bne	19cac <main@@Base+0x3f64>
   17f24:	add	r1, sl, #5
   17f28:	sub	r0, r6, r1
   17f2c:	cmp	r0, #2
   17f30:	blt	191d8 <main@@Base+0x3490>
   17f34:	ldrb	r0, [r1]
   17f38:	cmp	r0, #32
   17f3c:	bls	191c4 <main@@Base+0x347c>
   17f40:	mov	r8, r1
   17f44:	cmp	r8, r6
   17f48:	bne	191f0 <main@@Base+0x34a8>
   17f4c:	b	19228 <main@@Base+0x34e0>
   17f50:	movw	r2, #28788	; 0x7074
   17f54:	movt	r2, #25965	; 0x656d
   17f58:	subs	r2, r9, r2
   17f5c:	sbcs	r2, r0, r5
   17f60:	bcs	18408 <main@@Base+0x26c0>
   17f64:	movw	r0, #28524	; 0x6f6c
   17f68:	movt	r0, #25199	; 0x626f
   17f6c:	eor	r0, r9, r0
   17f70:	orrs	r0, r0, r1
   17f74:	beq	18b24 <main@@Base+0x2ddc>
   17f78:	movw	r0, #29541	; 0x7365
   17f7c:	movt	r0, #25185	; 0x6261
   17f80:	eor	r0, r9, r0
   17f84:	orrs	r0, r0, r1
   17f88:	bne	1a4fc <main@@Base+0x47b4>
   17f8c:	add	r7, sl, #8
   17f90:	mov	r1, #8
   17f94:	ldr	r9, [sp, #40]	; 0x28
   17f98:	sub	r0, r6, r7
   17f9c:	cmp	r0, #8
   17fa0:	movcc	r1, r0
   17fa4:	and	r2, r1, #15
   17fa8:	sub	r1, r2, #2
   17fac:	cmp	r1, #7
   17fb0:	bcs	18ee8 <main@@Base+0x31a0>
   17fb4:	ldrb	r1, [sl, #9]
   17fb8:	lsl	r2, r1, #16
   17fbc:	mov	r1, #0
   17fc0:	ldrb	r3, [r7]
   17fc4:	orr	r2, r2, r3, lsl #24
   17fc8:	movw	r3, #0
   17fcc:	movt	r3, #13876	; 0x3634
   17fd0:	eor	r2, r2, r3
   17fd4:	orrs	r1, r1, r2
   17fd8:	bne	1fd2c <main@@Base+0x9fe4>
   17fdc:	cmp	r0, #3
   17fe0:	blt	1fd2c <main@@Base+0x9fe4>
   17fe4:	ldrb	r0, [sl, #10]
   17fe8:	cmp	r0, #34	; 0x22
   17fec:	bne	1fd2c <main@@Base+0x9fe4>
   17ff0:	add	r1, sl, #11
   17ff4:	sub	r0, r6, r1
   17ff8:	cmp	r0, #2
   17ffc:	blt	1a09c <main@@Base+0x4354>
   18000:	ldrb	r0, [r1]
   18004:	cmp	r0, #32
   18008:	bls	1a08c <main@@Base+0x4344>
   1800c:	mov	sl, r1
   18010:	cmp	sl, r6
   18014:	bne	1a0b4 <main@@Base+0x436c>
   18018:	b	1a0ec <main@@Base+0x43a4>
   1801c:	eor	r7, r0, r5
   18020:	mov	r2, r5
   18024:	and	r5, r9, #-16777216	; 0xff000000
   18028:	eor	r1, r5, #872415232	; 0x34000000
   1802c:	orrs	r1, r1, r7
   18030:	bne	184a4 <main@@Base+0x275c>
   18034:	cmp	r8, #6
   18038:	mov	r8, sl
   1803c:	blt	194f8 <main@@Base+0x37b0>
   18040:	ldrb	r0, [sl, #5]
   18044:	mov	r8, sl
   18048:	cmp	r0, #34	; 0x22
   1804c:	bne	194f8 <main@@Base+0x37b0>
   18050:	add	r1, sl, #6
   18054:	sub	r0, r6, r1
   18058:	cmp	r0, #2
   1805c:	blt	18fe8 <main@@Base+0x32a0>
   18060:	ldrb	r0, [r1]
   18064:	cmp	r0, #32
   18068:	bls	18fd4 <main@@Base+0x328c>
   1806c:	mov	r8, r1
   18070:	cmp	r8, r6
   18074:	bne	19000 <main@@Base+0x32b8>
   18078:	b	19038 <main@@Base+0x32f0>
   1807c:	eor	r2, r9, r2
   18080:	eor	r1, r0, r5
   18084:	orrs	r2, r2, r1
   18088:	bne	184f4 <main@@Base+0x27ac>
   1808c:	add	r8, sl, #8
   18090:	mov	r0, #8
   18094:	sub	ip, r6, r8
   18098:	cmp	ip, #8
   1809c:	movcc	r0, ip
   180a0:	and	r0, r0, #15
   180a4:	sub	r6, r0, #1
   180a8:	cmp	r6, #7
   180ac:	bhi	197b0 <main@@Base+0x3a68>
   180b0:	add	r0, pc, #32
   180b4:	mov	r1, #0
   180b8:	mov	lr, #0
   180bc:	mov	r9, #0
   180c0:	mov	r5, #0
   180c4:	mov	r3, #0
   180c8:	mov	r7, #0
   180cc:	mov	r4, #0
   180d0:	mov	r2, #0
   180d4:	ldr	pc, [r0, r6, lsl #2]
   180d8:	andeq	r8, r1, ip, lsr r1
   180dc:	andeq	r8, r1, r4, lsr r1
   180e0:	andeq	r8, r1, ip, lsr #2
   180e4:	andeq	r8, r1, r4, lsr #2
   180e8:	andeq	r8, r1, r8, lsl r1
   180ec:	andeq	r8, r1, ip, lsl #2
   180f0:	strdeq	r8, [r1], -ip
   180f4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   180f8:	ldrb	lr, [sl, #15]
   180fc:	ldrb	r0, [sl, #14]
   18100:	mov	r9, r1
   18104:	orr	r0, lr, r0, lsl #8
   18108:	mov	r1, r0
   1810c:	ldrb	r0, [sl, #13]
   18110:	mov	r5, r9
   18114:	orr	r1, r1, r0, lsl #16
   18118:	ldrb	r0, [sl, #12]
   1811c:	mov	r3, r5
   18120:	orr	r1, r1, r0, lsl #24
   18124:	ldrb	r0, [sl, #11]
   18128:	orr	r7, r0, r3
   1812c:	ldrb	r0, [sl, #10]
   18130:	orr	r4, r7, r0, lsl #8
   18134:	ldrb	r0, [sl, #9]
   18138:	orr	r2, r4, r0, lsl #16
   1813c:	ldrb	r0, [r8]
   18140:	movw	r3, #30257	; 0x7631
   18144:	movt	r3, #26222	; 0x666e
   18148:	orr	r2, r2, r0, lsl #24
   1814c:	subs	r0, r1, r3
   18150:	movw	r0, #13407	; 0x345f
   18154:	movt	r0, #29494	; 0x7336
   18158:	sbcs	r0, r2, r0
   1815c:	bcs	18a98 <main@@Base+0x2d50>
   18160:	eor	r0, r1, r3
   18164:	ldr	r1, [sp, #28]
   18168:	eor	r1, r2, r1
   1816c:	orrs	r0, r0, r1
   18170:	bne	197b0 <main@@Base+0x3a68>
   18174:	ldr	r9, [sp, #40]	; 0x28
   18178:	cmp	ip, #9
   1817c:	blt	199b8 <main@@Base+0x3c70>
   18180:	ldrb	r0, [sl, #16]
   18184:	cmp	r0, #34	; 0x22
   18188:	bne	199b8 <main@@Base+0x3c70>
   1818c:	ldr	r4, [sp, #44]	; 0x2c
   18190:	add	r1, sl, #17
   18194:	sub	r0, r4, r1
   18198:	cmp	r0, #2
   1819c:	blt	19968 <main@@Base+0x3c20>
   181a0:	ldrb	r0, [r1]
   181a4:	cmp	r0, #32
   181a8:	bls	19950 <main@@Base+0x3c08>
   181ac:	ldr	r4, [sp, #44]	; 0x2c
   181b0:	mov	r6, r1
   181b4:	cmp	r6, r4
   181b8:	bne	19980 <main@@Base+0x3c38>
   181bc:	b	19a30 <main@@Base+0x3ce8>
   181c0:	eor	r1, r9, r3
   181c4:	eor	r2, r0, r2
   181c8:	orrs	r1, r1, r2
   181cc:	bne	187d8 <main@@Base+0x2a90>
   181d0:	add	r1, sl, #8
   181d4:	mov	r2, #8
   181d8:	ldr	r9, [sp, #40]	; 0x28
   181dc:	sub	r0, r6, r1
   181e0:	cmp	r0, #8
   181e4:	movcs	r0, r2
   181e8:	and	r0, r0, #15
   181ec:	sub	r7, r0, #1
   181f0:	cmp	r7, #7
   181f4:	bhi	18b1c <main@@Base+0x2dd4>
   181f8:	add	r0, pc, #32
   181fc:	mov	r8, #0
   18200:	mov	ip, #0
   18204:	mov	lr, #0
   18208:	mov	r6, #0
   1820c:	mov	r3, #0
   18210:	mov	r5, #0
   18214:	mov	r4, #0
   18218:	mov	r2, #0
   1821c:	ldr	pc, [r0, r7, lsl #2]
   18220:	andeq	r8, r1, r4, lsl #5
   18224:	andeq	r8, r1, ip, ror r2
   18228:	andeq	r8, r1, r4, ror r2
   1822c:	andeq	r8, r1, ip, ror #4
   18230:	andeq	r8, r1, r0, ror #4
   18234:	andeq	r8, r1, r4, asr r2
   18238:	andeq	r8, r1, r4, asr #4
   1823c:	andeq	r8, r1, r0, asr #4
   18240:	ldrb	ip, [sl, #15]
   18244:	ldrb	r0, [sl, #14]
   18248:	mov	lr, r8
   1824c:	orr	r0, ip, r0, lsl #8
   18250:	mov	r8, r0
   18254:	ldrb	r0, [sl, #13]
   18258:	mov	r6, lr
   1825c:	orr	r8, r8, r0, lsl #16
   18260:	ldrb	r0, [sl, #12]
   18264:	mov	r3, r6
   18268:	orr	r8, r8, r0, lsl #24
   1826c:	ldrb	r0, [sl, #11]
   18270:	orr	r5, r0, r3
   18274:	ldrb	r0, [sl, #10]
   18278:	orr	r4, r5, r0, lsl #8
   1827c:	ldrb	r0, [sl, #9]
   18280:	orr	r2, r4, r0, lsl #16
   18284:	ldrb	r3, [r1]
   18288:	movw	r0, #25445	; 0x6365
   1828c:	ldr	r6, [sp, #44]	; 0x2c
   18290:	movt	r0, #28769	; 0x7061
   18294:	eor	r0, r8, r0
   18298:	orr	r2, r2, r3, lsl #24
   1829c:	movw	r3, #25971	; 0x6573
   182a0:	movt	r3, #24941	; 0x616d
   182a4:	eor	r2, r2, r3
   182a8:	orrs	r0, r0, r2
   182ac:	bne	18b1c <main@@Base+0x2dd4>
   182b0:	add	r8, sl, #16
   182b4:	mov	r1, #8
   182b8:	sub	r0, r6, r8
   182bc:	cmp	r0, #8
   182c0:	movcc	r1, r0
   182c4:	and	r1, r1, #15
   182c8:	sub	r3, r1, #1
   182cc:	cmp	r3, #7
   182d0:	bhi	1d974 <main@@Base+0x7c2c>
   182d4:	add	r7, pc, #20
   182d8:	mov	r1, #0
   182dc:	mov	r2, #0
   182e0:	mov	r6, #0
   182e4:	mov	r5, #0
   182e8:	mov	r4, #0
   182ec:	ldr	pc, [r7, r3, lsl #2]
   182f0:	andeq	r8, r1, r4, lsr r3
   182f4:	andeq	r8, r1, ip, lsr #6
   182f8:	andeq	r8, r1, r4, lsr #6
   182fc:	andeq	r8, r1, r8, lsl r3
   18300:	andeq	r8, r1, r0, lsl r3
   18304:	andeq	r8, r1, r0, lsl r3
   18308:	andeq	r8, r1, r0, lsl r3
   1830c:	andeq	r8, r1, r0, lsl r3
   18310:	ldrb	r2, [sl, #20]
   18314:	lsl	r2, r2, #24
   18318:	ldrb	r3, [sl, #19]
   1831c:	orr	r6, r3, r1
   18320:	mov	r1, r2
   18324:	ldrb	r2, [sl, #18]
   18328:	orr	r5, r6, r2, lsl #8
   1832c:	ldrb	r2, [sl, #17]
   18330:	orr	r4, r5, r2, lsl #16
   18334:	ldrb	r2, [r8]
   18338:	movw	r3, #25971	; 0x6573
   1833c:	ldr	r6, [sp, #44]	; 0x2c
   18340:	and	r1, r1, #-16777216	; 0xff000000
   18344:	movt	r3, #24436	; 0x5f74
   18348:	eor	r1, r1, #1946157056	; 0x74000000
   1834c:	orr	r2, r4, r2, lsl #24
   18350:	eor	r2, r2, r3
   18354:	orrs	r1, r1, r2
   18358:	bne	1d974 <main@@Base+0x7c2c>
   1835c:	cmp	r0, #6
   18360:	blt	1d974 <main@@Base+0x7c2c>
   18364:	ldrb	r0, [sl, #21]
   18368:	cmp	r0, #34	; 0x22
   1836c:	bne	1d974 <main@@Base+0x7c2c>
   18370:	add	r1, sl, #22
   18374:	sub	r0, r6, r1
   18378:	cmp	r0, #2
   1837c:	blt	1a98c <main@@Base+0x4c44>
   18380:	ldrb	r0, [r1]
   18384:	cmp	r0, #32
   18388:	bls	1a97c <main@@Base+0x4c34>
   1838c:	mov	sl, r1
   18390:	cmp	sl, r6
   18394:	bne	1a9a4 <main@@Base+0x4c5c>
   18398:	b	1a9dc <main@@Base+0x4c94>
   1839c:	subs	r1, r9, r3
   183a0:	sbcs	r1, r0, r2
   183a4:	bcs	18838 <main@@Base+0x2af0>
   183a8:	movw	r1, #0
   183ac:	bfc	r0, #0, #16
   183b0:	movt	r1, #26736	; 0x6870
   183b4:	teq	r0, r1
   183b8:	bne	1a4fc <main@@Base+0x47b4>
   183bc:	ldr	r9, [sp, #40]	; 0x28
   183c0:	cmp	r8, #3
   183c4:	mov	r7, sl
   183c8:	blt	1ac64 <main@@Base+0x4f1c>
   183cc:	ldrb	r0, [sl, #2]
   183d0:	mov	r7, sl
   183d4:	cmp	r0, #34	; 0x22
   183d8:	bne	1ac64 <main@@Base+0x4f1c>
   183dc:	add	r1, sl, #3
   183e0:	sub	r0, r6, r1
   183e4:	cmp	r0, #2
   183e8:	blt	197f0 <main@@Base+0x3aa8>
   183ec:	ldrb	r0, [r1]
   183f0:	cmp	r0, #32
   183f4:	bls	197dc <main@@Base+0x3a94>
   183f8:	mov	r7, r1
   183fc:	cmp	r7, r6
   18400:	bne	19808 <main@@Base+0x3ac0>
   18404:	b	19840 <main@@Base+0x3af8>
   18408:	mvn	r2, #-1711276032	; 0x9a000000
   1840c:	subs	r2, r2, r9
   18410:	sbcs	r2, r5, r0
   18414:	bcc	188c0 <main@@Base+0x2b78>
   18418:	movw	r0, #28788	; 0x7074
   1841c:	movt	r0, #25965	; 0x656d
   18420:	eor	r0, r9, r0
   18424:	orrs	r0, r0, r1
   18428:	bne	1a4fc <main@@Base+0x47b4>
   1842c:	add	r7, sl, #8
   18430:	mov	r1, #8
   18434:	mov	r2, #-268435456	; 0xf0000000
   18438:	ldr	r9, [sp, #40]	; 0x28
   1843c:	sub	r0, r6, r7
   18440:	cmp	r0, #8
   18444:	movcc	r1, r0
   18448:	add	r1, r2, r1, lsl #28
   1844c:	asr	r1, r1, #28
   18450:	cmp	r1, #0
   18454:	blt	1fd2c <main@@Base+0x9fe4>
   18458:	ldrb	r1, [r7]
   1845c:	cmp	r1, #121	; 0x79
   18460:	bne	1fd2c <main@@Base+0x9fe4>
   18464:	cmp	r0, #2
   18468:	blt	1fd2c <main@@Base+0x9fe4>
   1846c:	ldrb	r0, [sl, #9]
   18470:	cmp	r0, #34	; 0x22
   18474:	bne	1fd2c <main@@Base+0x9fe4>
   18478:	add	r1, sl, #10
   1847c:	sub	r0, r6, r1
   18480:	cmp	r0, #2
   18484:	blt	1ab64 <main@@Base+0x4e1c>
   18488:	ldrb	r0, [r1]
   1848c:	cmp	r0, #32
   18490:	bls	1ab54 <main@@Base+0x4e0c>
   18494:	mov	sl, r1
   18498:	cmp	sl, r6
   1849c:	bne	1ab7c <main@@Base+0x4e34>
   184a0:	b	1abb4 <main@@Base+0x4e6c>
   184a4:	teq	r0, r2
   184a8:	bne	192a4 <main@@Base+0x355c>
   184ac:	cmp	r8, #5
   184b0:	mov	r1, sl
   184b4:	blt	1a02c <main@@Base+0x42e4>
   184b8:	ldrb	r0, [sl, #4]
   184bc:	mov	r1, sl
   184c0:	cmp	r0, #34	; 0x22
   184c4:	bne	1a02c <main@@Base+0x42e4>
   184c8:	add	r2, sl, #5
   184cc:	sub	r0, r6, r2
   184d0:	cmp	r0, #2
   184d4:	blt	19254 <main@@Base+0x350c>
   184d8:	ldrb	r0, [r2]
   184dc:	cmp	r0, #32
   184e0:	bls	19240 <main@@Base+0x34f8>
   184e4:	mov	r1, r2
   184e8:	cmp	r1, r6
   184ec:	bne	19270 <main@@Base+0x3528>
   184f0:	b	192f8 <main@@Base+0x35b0>
   184f4:	movw	r7, #24431	; 0x5f6f
   184f8:	movw	r3, #25460	; 0x6374
   184fc:	movt	r7, #28530	; 0x6f72
   18500:	movt	r3, #30309	; 0x7665
   18504:	subs	r2, r9, r7
   18508:	sbcs	r2, r0, r3
   1850c:	bcs	18934 <main@@Base+0x2bec>
   18510:	movw	r0, #29556	; 0x7374
   18514:	movt	r0, #28261	; 0x6e65
   18518:	eor	r0, r9, r0
   1851c:	orrs	r0, r0, r1
   18520:	bne	1a4fc <main@@Base+0x47b4>
   18524:	add	r1, sl, #8
   18528:	mov	r2, #8
   1852c:	ldr	r9, [sp, #40]	; 0x28
   18530:	sub	r0, r6, r1
   18534:	cmp	r0, #8
   18538:	movcs	r0, r2
   1853c:	and	r0, r0, #15
   18540:	sub	r7, r0, #1
   18544:	cmp	r7, #7
   18548:	bhi	18b1c <main@@Base+0x2dd4>
   1854c:	add	r0, pc, #32
   18550:	mov	r8, #0
   18554:	mov	ip, #0
   18558:	mov	lr, #0
   1855c:	mov	r6, #0
   18560:	mov	r3, #0
   18564:	mov	r5, #0
   18568:	mov	r4, #0
   1856c:	mov	r2, #0
   18570:	ldr	pc, [r0, r7, lsl #2]
   18574:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18578:	ldrdeq	r8, [r1], -r0
   1857c:	andeq	r8, r1, r8, asr #11
   18580:	andeq	r8, r1, r0, asr #11
   18584:			; <UNDEFINED> instruction: 0x000185b4
   18588:	andeq	r8, r1, r8, lsr #11
   1858c:	muleq	r1, r8, r5
   18590:	muleq	r1, r4, r5
   18594:	ldrb	ip, [sl, #15]
   18598:	ldrb	r0, [sl, #14]
   1859c:	mov	lr, r8
   185a0:	orr	r0, ip, r0, lsl #8
   185a4:	mov	r8, r0
   185a8:	ldrb	r0, [sl, #13]
   185ac:	mov	r6, lr
   185b0:	orr	r8, r8, r0, lsl #16
   185b4:	ldrb	r0, [sl, #12]
   185b8:	mov	r3, r6
   185bc:	orr	r8, r8, r0, lsl #24
   185c0:	ldrb	r0, [sl, #11]
   185c4:	orr	r5, r0, r3
   185c8:	ldrb	r0, [sl, #10]
   185cc:	orr	r4, r5, r0, lsl #8
   185d0:	ldrb	r0, [sl, #9]
   185d4:	orr	r2, r4, r0, lsl #16
   185d8:	ldrb	r3, [r1]
   185dc:	movw	r0, #25205	; 0x6275
   185e0:	ldr	r6, [sp, #44]	; 0x2c
   185e4:	movt	r0, #24948	; 0x6174
   185e8:	eor	r0, r8, r0
   185ec:	orr	r2, r2, r3, lsl #24
   185f0:	movw	r3, #26220	; 0x666c
   185f4:	movt	r3, #25956	; 0x6564
   185f8:	eor	r2, r2, r3
   185fc:	orrs	r0, r0, r2
   18600:	bne	18b1c <main@@Base+0x2dd4>
   18604:	add	r7, sl, #16
   18608:	mov	r1, #8
   1860c:	sub	r0, r6, r7
   18610:	cmp	r0, #8
   18614:	movcc	r1, r0
   18618:	and	r1, r1, #15
   1861c:	sub	r2, r1, #1
   18620:	cmp	r2, #7
   18624:	bhi	1fd2c <main@@Base+0x9fe4>
   18628:	add	r3, pc, #4
   1862c:	mov	r1, #0
   18630:	ldr	pc, [r3, r2, lsl #2]
   18634:	andeq	r8, r1, r8, ror #12
   18638:	andeq	r8, r1, r0, ror #12
   1863c:	andeq	r8, r1, r8, asr r6
   18640:	andeq	r8, r1, r4, asr r6
   18644:	andeq	r8, r1, r4, asr r6
   18648:	andeq	r8, r1, r4, asr r6
   1864c:	andeq	r8, r1, r4, asr r6
   18650:	andeq	r8, r1, r4, asr r6
   18654:	ldrb	r1, [sl, #19]
   18658:	ldrb	r2, [sl, #18]
   1865c:	orr	r1, r1, r2, lsl #8
   18660:	ldrb	r2, [sl, #17]
   18664:	orr	r1, r1, r2, lsl #16
   18668:	ldrb	r2, [r7]
   1866c:	orr	r1, r1, r2, lsl #24
   18670:	movw	r2, #25970	; 0x6572
   18674:	movt	r2, #26214	; 0x6666
   18678:	teq	r1, r2
   1867c:	bne	1fd2c <main@@Base+0x9fe4>
   18680:	cmp	r0, #5
   18684:	blt	1fd2c <main@@Base+0x9fe4>
   18688:	ldrb	r0, [sl, #20]
   1868c:	cmp	r0, #34	; 0x22
   18690:	bne	1fd2c <main@@Base+0x9fe4>
   18694:	add	r1, sl, #21
   18698:	sub	r0, r6, r1
   1869c:	cmp	r0, #2
   186a0:	blt	1c328 <main@@Base+0x65e0>
   186a4:	ldrb	r0, [r1]
   186a8:	cmp	r0, #32
   186ac:	bls	1c318 <main@@Base+0x65d0>
   186b0:	mov	sl, r1
   186b4:	cmp	sl, r6
   186b8:	bne	1c340 <main@@Base+0x65f8>
   186bc:	b	1c380 <main@@Base+0x6638>
   186c0:	movw	r0, #27749	; 0x6c65
   186c4:	movw	r3, #26228	; 0x6674
   186c8:	ldr	r6, [sp, #44]	; 0x2c
   186cc:	ldr	r9, [sp, #40]	; 0x28
   186d0:	movt	r0, #24930	; 0x6162
   186d4:	movt	r3, #31087	; 0x796f
   186d8:	eor	r0, r1, r0
   186dc:	eor	r3, r2, r3
   186e0:	orrs	r0, r0, r3
   186e4:	beq	18c8c <main@@Base+0x2f44>
   186e8:	movw	r0, #26990	; 0x696e
   186ec:	movt	r0, #29810	; 0x7472
   186f0:	eor	r0, r1, r0
   186f4:	eor	r1, r2, r7
   186f8:	orrs	r0, r0, r1
   186fc:	bne	1d974 <main@@Base+0x7c2c>
   18700:	add	r7, sl, #16
   18704:	mov	r1, #8
   18708:	sub	r0, r6, r7
   1870c:	cmp	r0, #8
   18710:	movcc	r1, r0
   18714:	and	r2, r1, #15
   18718:	sub	r1, r2, #2
   1871c:	cmp	r1, #7
   18720:	bcs	18f44 <main@@Base+0x31fc>
   18724:	ldrb	r1, [sl, #17]
   18728:	lsl	r2, r1, #16
   1872c:	mov	r1, #0
   18730:	ldrb	r3, [r7]
   18734:	orr	r2, r2, r3, lsl #24
   18738:	movw	r3, #0
   1873c:	movt	r3, #26418	; 0x6732
   18740:	eor	r3, r2, r3
   18744:	orrs	r1, r1, r3
   18748:	bne	18e2c <main@@Base+0x30e4>
   1874c:	cmp	r0, #3
   18750:	blt	1fd2c <main@@Base+0x9fe4>
   18754:	ldrb	r0, [sl, #18]
   18758:	cmp	r0, #34	; 0x22
   1875c:	bne	1fd2c <main@@Base+0x9fe4>
   18760:	add	r1, sl, #19
   18764:	sub	r0, r6, r1
   18768:	cmp	r0, #2
   1876c:	blt	1a114 <main@@Base+0x43cc>
   18770:	ldrb	r0, [r1]
   18774:	cmp	r0, #32
   18778:	bls	1a104 <main@@Base+0x43bc>
   1877c:	mov	sl, r1
   18780:	cmp	sl, r6
   18784:	bne	1a12c <main@@Base+0x43e4>
   18788:	b	1a164 <main@@Base+0x441c>
   1878c:	ldr	r9, [sp, #40]	; 0x28
   18790:	cmp	r8, #6
   18794:	mov	r7, sl
   18798:	blt	19acc <main@@Base+0x3d84>
   1879c:	ldrb	r0, [sl, #5]
   187a0:	mov	r7, sl
   187a4:	cmp	r0, #34	; 0x22
   187a8:	bne	19acc <main@@Base+0x3d84>
   187ac:	add	r1, sl, #6
   187b0:	sub	r0, r6, r1
   187b4:	cmp	r0, #2
   187b8:	blt	190e0 <main@@Base+0x3398>
   187bc:	ldrb	r0, [r1]
   187c0:	cmp	r0, #32
   187c4:	bls	190cc <main@@Base+0x3384>
   187c8:	mov	r7, r1
   187cc:	cmp	r7, r6
   187d0:	bne	190f8 <main@@Base+0x33b0>
   187d4:	b	19130 <main@@Base+0x33e8>
   187d8:	ldr	r9, [sp, #40]	; 0x28
   187dc:	movw	r1, #29440	; 0x7300
   187e0:	bic	r0, r0, #255	; 0xff
   187e4:	movt	r1, #28783	; 0x706f
   187e8:	teq	r0, r1
   187ec:	bne	1a500 <main@@Base+0x47b8>
   187f0:	cmp	r8, #4
   187f4:	mov	r8, sl
   187f8:	blt	1adec <main@@Base+0x50a4>
   187fc:	ldrb	r0, [sl, #3]
   18800:	mov	r8, sl
   18804:	cmp	r0, #34	; 0x22
   18808:	bne	1adec <main@@Base+0x50a4>
   1880c:	add	r1, sl, #4
   18810:	sub	r0, r6, r1
   18814:	cmp	r0, #2
   18818:	blt	1986c <main@@Base+0x3b24>
   1881c:	ldrb	r0, [r1]
   18820:	cmp	r0, #32
   18824:	bls	19858 <main@@Base+0x3b10>
   18828:	mov	r8, r1
   1882c:	cmp	r8, r6
   18830:	bne	19884 <main@@Base+0x3b3c>
   18834:	b	198bc <main@@Base+0x3b74>
   18838:	eor	r1, r9, r3
   1883c:	eor	r2, r0, r2
   18840:	orrs	r1, r1, r2
   18844:	bne	18d00 <main@@Base+0x2fb8>
   18848:	add	r7, sl, #8
   1884c:	mov	r1, #8
   18850:	mov	r2, #-268435456	; 0xf0000000
   18854:	ldr	r9, [sp, #40]	; 0x28
   18858:	sub	r0, r6, r7
   1885c:	cmp	r0, #8
   18860:	movcc	r1, r0
   18864:	add	r1, r2, r1, lsl #28
   18868:	asr	r1, r1, #28
   1886c:	cmp	r1, #0
   18870:	blt	1fd2c <main@@Base+0x9fe4>
   18874:	ldrb	r1, [r7]
   18878:	cmp	r1, #121	; 0x79
   1887c:	bne	1fd2c <main@@Base+0x9fe4>
   18880:	cmp	r0, #2
   18884:	blt	1fd2c <main@@Base+0x9fe4>
   18888:	ldrb	r0, [sl, #9]
   1888c:	cmp	r0, #34	; 0x22
   18890:	bne	1fd2c <main@@Base+0x9fe4>
   18894:	add	r1, sl, #10
   18898:	sub	r0, r6, r1
   1889c:	cmp	r0, #2
   188a0:	blt	1abdc <main@@Base+0x4e94>
   188a4:	ldrb	r0, [r1]
   188a8:	cmp	r0, #32
   188ac:	bls	1abcc <main@@Base+0x4e84>
   188b0:	mov	sl, r1
   188b4:	cmp	sl, r6
   188b8:	bne	1abf4 <main@@Base+0x4eac>
   188bc:	b	1ac2c <main@@Base+0x4ee4>
   188c0:	movw	r3, #0
   188c4:	mov	r2, r9
   188c8:	movt	r3, #26163	; 0x6633
   188cc:	bfc	r2, #0, #16
   188d0:	subs	r3, r3, #65536	; 0x10000
   188d4:	eor	r2, r2, r3
   188d8:	sbc	r3, r5, #0
   188dc:	eor	r0, r0, r3
   188e0:	orrs	r0, r2, r0
   188e4:	bne	18d5c <main@@Base+0x3014>
   188e8:	ldr	r9, [sp, #40]	; 0x28
   188ec:	cmp	r8, #7
   188f0:	mov	r7, sl
   188f4:	blt	1bb14 <main@@Base+0x5dcc>
   188f8:	ldrb	r0, [sl, #6]
   188fc:	mov	r7, sl
   18900:	cmp	r0, #34	; 0x22
   18904:	bne	1bb14 <main@@Base+0x5dcc>
   18908:	add	r1, sl, #7
   1890c:	sub	r0, r6, r1
   18910:	cmp	r0, #2
   18914:	blt	198e8 <main@@Base+0x3ba0>
   18918:	ldrb	r0, [r1]
   1891c:	cmp	r0, #32
   18920:	bls	198d4 <main@@Base+0x3b8c>
   18924:	mov	r7, r1
   18928:	cmp	r7, r6
   1892c:	bne	19900 <main@@Base+0x3bb8>
   18930:	b	19938 <main@@Base+0x3bf0>
   18934:	eor	r1, r9, r7
   18938:	eor	r0, r0, r3
   1893c:	orrs	r0, r1, r0
   18940:	bne	1a4fc <main@@Base+0x47b4>
   18944:	add	r8, sl, #8
   18948:	mov	r0, #8
   1894c:	sub	lr, r6, r8
   18950:	cmp	lr, #8
   18954:	movcc	r0, lr
   18958:	and	r0, r0, #15
   1895c:	sub	r6, r0, #1
   18960:	cmp	r6, #7
   18964:	bhi	197b0 <main@@Base+0x3a68>
   18968:	add	r2, pc, #32
   1896c:	mov	r1, #0
   18970:	mov	ip, #0
   18974:	mov	r9, #0
   18978:	mov	r5, #0
   1897c:	mov	r3, #0
   18980:	mov	r7, #0
   18984:	mov	r4, #0
   18988:	mov	r0, #0
   1898c:	ldr	pc, [r2, r6, lsl #2]
   18990:	strdeq	r8, [r1], -r4
   18994:	andeq	r8, r1, ip, ror #19
   18998:	andeq	r8, r1, r4, ror #19
   1899c:	ldrdeq	r8, [r1], -ip
   189a0:	ldrdeq	r8, [r1], -r0
   189a4:	andeq	r8, r1, r4, asr #19
   189a8:			; <UNDEFINED> instruction: 0x000189b4
   189ac:			; <UNDEFINED> instruction: 0x000189b0
   189b0:	ldrb	ip, [sl, #15]
   189b4:	ldrb	r0, [sl, #14]
   189b8:	mov	r9, r1
   189bc:	orr	r0, ip, r0, lsl #8
   189c0:	mov	r1, r0
   189c4:	ldrb	r0, [sl, #13]
   189c8:	mov	r5, r9
   189cc:	orr	r1, r1, r0, lsl #16
   189d0:	ldrb	r0, [sl, #12]
   189d4:	mov	r3, r5
   189d8:	orr	r1, r1, r0, lsl #24
   189dc:	ldrb	r0, [sl, #11]
   189e0:	orr	r7, r0, r3
   189e4:	ldrb	r0, [sl, #10]
   189e8:	orr	r4, r7, r0, lsl #8
   189ec:	ldrb	r0, [sl, #9]
   189f0:	orr	r0, r4, r0, lsl #16
   189f4:	ldrb	r3, [r8]
   189f8:	movw	r2, #27749	; 0x6c65
   189fc:	movt	r2, #30050	; 0x7562
   18a00:	eor	r2, r1, r2
   18a04:	orr	r0, r0, r3, lsl #24
   18a08:	movw	r3, #25711	; 0x646f
   18a0c:	movt	r3, #26207	; 0x665f
   18a10:	eor	r3, r0, r3
   18a14:	orrs	r2, r2, r3
   18a18:	bne	18e78 <main@@Base+0x3130>
   18a1c:	ldr	r6, [sp, #44]	; 0x2c
   18a20:	add	r7, sl, #16
   18a24:	mov	r1, #8
   18a28:	mov	r2, #-268435456	; 0xf0000000
   18a2c:	ldr	r9, [sp, #40]	; 0x28
   18a30:	sub	r0, r6, r7
   18a34:	cmp	r0, #8
   18a38:	movcc	r1, r0
   18a3c:	add	r1, r2, r1, lsl #28
   18a40:	asr	r1, r1, #28
   18a44:	cmp	r1, #0
   18a48:	blt	1fd2c <main@@Base+0x9fe4>
   18a4c:	ldrb	r1, [r7]
   18a50:	cmp	r1, #115	; 0x73
   18a54:	bne	1fd2c <main@@Base+0x9fe4>
   18a58:	cmp	r0, #2
   18a5c:	blt	1fd2c <main@@Base+0x9fe4>
   18a60:	ldrb	r0, [sl, #17]
   18a64:	cmp	r0, #34	; 0x22
   18a68:	bne	1fd2c <main@@Base+0x9fe4>
   18a6c:	add	r1, sl, #18
   18a70:	sub	r0, r6, r1
   18a74:	cmp	r0, #2
   18a78:	blt	1c954 <main@@Base+0x6c0c>
   18a7c:	ldrb	r0, [r1]
   18a80:	cmp	r0, #32
   18a84:	bls	1c944 <main@@Base+0x6bfc>
   18a88:	mov	sl, r1
   18a8c:	cmp	sl, r6
   18a90:	bne	1c96c <main@@Base+0x6c24>
   18a94:	b	1c9ac <main@@Base+0x6c64>
   18a98:	movw	r0, #30256	; 0x7630
   18a9c:	ldr	r6, [sp, #44]	; 0x2c
   18aa0:	movt	r0, #26222	; 0x666e
   18aa4:	subs	r0, r0, r1
   18aa8:	movw	r0, #12895	; 0x325f
   18aac:	movt	r0, #30003	; 0x7533
   18ab0:	sbcs	r0, r0, r2
   18ab4:	eor	r0, r1, r3
   18ab8:	bcc	18db8 <main@@Base+0x3070>
   18abc:	movw	r1, #13407	; 0x345f
   18ac0:	ldr	r9, [sp, #40]	; 0x28
   18ac4:	movt	r1, #29494	; 0x7336
   18ac8:	eor	r1, r2, r1
   18acc:	orrs	r0, r0, r1
   18ad0:	bne	1d974 <main@@Base+0x7c2c>
   18ad4:	cmp	ip, #9
   18ad8:	blt	1a354 <main@@Base+0x460c>
   18adc:	ldrb	r0, [sl, #16]
   18ae0:	cmp	r0, #34	; 0x22
   18ae4:	bne	1a354 <main@@Base+0x460c>
   18ae8:	ldr	r4, [sp, #44]	; 0x2c
   18aec:	add	r1, sl, #17
   18af0:	sub	r0, r4, r1
   18af4:	cmp	r0, #2
   18af8:	blt	1a304 <main@@Base+0x45bc>
   18afc:	ldrb	r0, [r1]
   18b00:	cmp	r0, #32
   18b04:	bls	1a2ec <main@@Base+0x45a4>
   18b08:	ldr	r4, [sp, #44]	; 0x2c
   18b0c:	mov	r6, r1
   18b10:	cmp	r6, r4
   18b14:	bne	1a31c <main@@Base+0x45d4>
   18b18:	b	1a3cc <main@@Base+0x4684>
   18b1c:	mov	r0, r9
   18b20:	b	1fd34 <main@@Base+0x9fec>
   18b24:	ldr	r9, [sp, #40]	; 0x28
   18b28:	cmp	r8, #9
   18b2c:	mov	r7, sl
   18b30:	blt	1a7c0 <main@@Base+0x4a78>
   18b34:	ldrb	r0, [sl, #8]
   18b38:	mov	r7, sl
   18b3c:	cmp	r0, #34	; 0x22
   18b40:	bne	1a7c0 <main@@Base+0x4a78>
   18b44:	add	r1, sl, #9
   18b48:	sub	r0, r6, r1
   18b4c:	cmp	r0, #2
   18b50:	blt	1939c <main@@Base+0x3654>
   18b54:	ldrb	r0, [r1]
   18b58:	cmp	r0, #32
   18b5c:	bls	19388 <main@@Base+0x3640>
   18b60:	mov	r7, r1
   18b64:	cmp	r7, r6
   18b68:	bne	193b4 <main@@Base+0x366c>
   18b6c:	b	193ec <main@@Base+0x36a4>
   18b70:	ldr	r0, [sp, #44]	; 0x2c
   18b74:	add	r8, sl, #16
   18b78:	mov	r1, #8
   18b7c:	ldr	r9, [sp, #40]	; 0x28
   18b80:	sub	lr, r0, r8
   18b84:	cmp	lr, #8
   18b88:	movcc	r1, lr
   18b8c:	and	r1, r1, #15
   18b90:	sub	r6, r1, #1
   18b94:	cmp	r6, #7
   18b98:	bhi	197b4 <main@@Base+0x3a6c>
   18b9c:	add	r0, pc, #28
   18ba0:	mov	r1, #0
   18ba4:	mov	ip, #0
   18ba8:	mov	r7, #0
   18bac:	mov	r3, #0
   18bb0:	mov	r5, #0
   18bb4:	mov	r4, #0
   18bb8:	mov	r2, #0
   18bbc:	ldr	pc, [r0, r6, lsl #2]
   18bc0:	andeq	r8, r1, ip, lsl ip
   18bc4:	andeq	r8, r1, r4, lsl ip
   18bc8:	andeq	r8, r1, ip, lsl #24
   18bcc:	andeq	r8, r1, r4, lsl #24
   18bd0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18bd4:	andeq	r8, r1, r8, ror #23
   18bd8:	andeq	r8, r1, r0, ror #23
   18bdc:	andeq	r8, r1, r0, ror #23
   18be0:	ldrb	r0, [sl, #22]
   18be4:	lsl	ip, r0, #8
   18be8:	ldrb	r0, [sl, #21]
   18bec:	mov	r7, r1
   18bf0:	orr	r0, ip, r0, lsl #16
   18bf4:	mov	r1, r0
   18bf8:	ldrb	r0, [sl, #20]
   18bfc:	mov	r3, r7
   18c00:	orr	r1, r1, r0, lsl #24
   18c04:	ldrb	r0, [sl, #19]
   18c08:	orr	r5, r0, r3
   18c0c:	ldrb	r0, [sl, #18]
   18c10:	orr	r4, r5, r0, lsl #8
   18c14:	ldrb	r0, [sl, #17]
   18c18:	orr	r2, r4, r0, lsl #16
   18c1c:	bic	r0, r1, #255	; 0xff
   18c20:	movw	r1, #29696	; 0x7400
   18c24:	movt	r1, #30051	; 0x7563
   18c28:	eor	r0, r0, r1
   18c2c:	ldrb	r1, [r8]
   18c30:	orr	r1, r2, r1, lsl #24
   18c34:	movw	r2, #29810	; 0x7472
   18c38:	movt	r2, #25715	; 0x6473
   18c3c:	eor	r1, r1, r2
   18c40:	orrs	r0, r0, r1
   18c44:	bne	197b4 <main@@Base+0x3a6c>
   18c48:	ldr	r6, [sp, #44]	; 0x2c
   18c4c:	cmp	lr, #8
   18c50:	blt	1d974 <main@@Base+0x7c2c>
   18c54:	ldrb	r0, [sl, #23]
   18c58:	cmp	r0, #34	; 0x22
   18c5c:	bne	1d974 <main@@Base+0x7c2c>
   18c60:	add	r1, sl, #24
   18c64:	sub	r0, r6, r1
   18c68:	cmp	r0, #2
   18c6c:	blt	1a18c <main@@Base+0x4444>
   18c70:	ldrb	r0, [r1]
   18c74:	cmp	r0, #32
   18c78:	bls	1a17c <main@@Base+0x4434>
   18c7c:	mov	sl, r1
   18c80:	cmp	sl, r6
   18c84:	bne	1a1a4 <main@@Base+0x445c>
   18c88:	b	1a1dc <main@@Base+0x4494>
   18c8c:	add	r7, sl, #16
   18c90:	mov	r1, #8
   18c94:	mov	r2, #-268435456	; 0xf0000000
   18c98:	sub	r0, r6, r7
   18c9c:	cmp	r0, #8
   18ca0:	movcc	r1, r0
   18ca4:	add	r1, r2, r1, lsl #28
   18ca8:	asr	r1, r1, #28
   18cac:	cmp	r1, #0
   18cb0:	blt	1fd2c <main@@Base+0x9fe4>
   18cb4:	ldrb	r1, [r7]
   18cb8:	cmp	r1, #115	; 0x73
   18cbc:	bne	1fd2c <main@@Base+0x9fe4>
   18cc0:	cmp	r0, #2
   18cc4:	blt	1fd2c <main@@Base+0x9fe4>
   18cc8:	ldrb	r0, [sl, #17]
   18ccc:	cmp	r0, #34	; 0x22
   18cd0:	bne	1fd2c <main@@Base+0x9fe4>
   18cd4:	add	r1, sl, #18
   18cd8:	sub	r0, r6, r1
   18cdc:	cmp	r0, #2
   18ce0:	blt	1aa18 <main@@Base+0x4cd0>
   18ce4:	ldrb	r0, [r1]
   18ce8:	cmp	r0, #32
   18cec:	bls	1aa08 <main@@Base+0x4cc0>
   18cf0:	mov	sl, r1
   18cf4:	cmp	sl, r6
   18cf8:	bne	1aa30 <main@@Base+0x4ce8>
   18cfc:	b	1aa68 <main@@Base+0x4d20>
   18d00:	ldr	r9, [sp, #40]	; 0x28
   18d04:	movw	r1, #28257	; 0x6e61
   18d08:	movt	r1, #28001	; 0x6d61
   18d0c:	teq	r0, r1
   18d10:	bne	1a500 <main@@Base+0x47b8>
   18d14:	cmp	r8, #5
   18d18:	mov	r7, sl
   18d1c:	blt	1c724 <main@@Base+0x69dc>
   18d20:	ldrb	r0, [sl, #4]
   18d24:	mov	r7, sl
   18d28:	cmp	r0, #34	; 0x22
   18d2c:	bne	1c724 <main@@Base+0x69dc>
   18d30:	add	r1, sl, #5
   18d34:	sub	r0, r6, r1
   18d38:	cmp	r0, #2
   18d3c:	blt	1a208 <main@@Base+0x44c0>
   18d40:	ldrb	r0, [r1]
   18d44:	cmp	r0, #32
   18d48:	bls	1a1f4 <main@@Base+0x44ac>
   18d4c:	mov	r7, r1
   18d50:	cmp	r7, r6
   18d54:	bne	1a220 <main@@Base+0x44d8>
   18d58:	b	1a258 <main@@Base+0x4510>
   18d5c:	and	r0, r9, #-16777216	; 0xff000000
   18d60:	eor	r0, r0, #1711276032	; 0x66000000
   18d64:	orrs	r0, r0, r1
   18d68:	bne	1a4fc <main@@Base+0x47b4>
   18d6c:	ldr	r9, [sp, #40]	; 0x28
   18d70:	cmp	r8, #6
   18d74:	mov	r7, sl
   18d78:	blt	1c8b8 <main@@Base+0x6b70>
   18d7c:	ldrb	r0, [sl, #5]
   18d80:	mov	r7, sl
   18d84:	cmp	r0, #34	; 0x22
   18d88:	bne	1c8b8 <main@@Base+0x6b70>
   18d8c:	add	r1, sl, #6
   18d90:	sub	r0, r6, r1
   18d94:	cmp	r0, #2
   18d98:	blt	1a284 <main@@Base+0x453c>
   18d9c:	ldrb	r0, [r1]
   18da0:	cmp	r0, #32
   18da4:	bls	1a270 <main@@Base+0x4528>
   18da8:	mov	r7, r1
   18dac:	cmp	r7, r6
   18db0:	bne	1a29c <main@@Base+0x4554>
   18db4:	b	1a2d4 <main@@Base+0x458c>
   18db8:	movw	r1, #13407	; 0x345f
   18dbc:	ldr	r9, [sp, #40]	; 0x28
   18dc0:	movt	r1, #30006	; 0x7536
   18dc4:	eor	r1, r2, r1
   18dc8:	orrs	r1, r0, r1
   18dcc:	beq	18efc <main@@Base+0x31b4>
   18dd0:	movw	r1, #12895	; 0x325f
   18dd4:	movt	r1, #30003	; 0x7533
   18dd8:	eor	r1, r2, r1
   18ddc:	orrs	r0, r0, r1
   18de0:	bne	1d974 <main@@Base+0x7c2c>
   18de4:	cmp	ip, #9
   18de8:	blt	1bc0c <main@@Base+0x5ec4>
   18dec:	ldrb	r0, [sl, #16]
   18df0:	cmp	r0, #34	; 0x22
   18df4:	bne	1bc0c <main@@Base+0x5ec4>
   18df8:	ldr	r4, [sp, #44]	; 0x2c
   18dfc:	add	r1, sl, #17
   18e00:	sub	r0, r4, r1
   18e04:	cmp	r0, #2
   18e08:	blt	1bbb8 <main@@Base+0x5e70>
   18e0c:	ldrb	r0, [r1]
   18e10:	cmp	r0, #32
   18e14:	bls	1bba0 <main@@Base+0x5e58>
   18e18:	ldr	r4, [sp, #44]	; 0x2c
   18e1c:	mov	r6, r1
   18e20:	cmp	r6, r4
   18e24:	bne	1bbd0 <main@@Base+0x5e88>
   18e28:	b	1bc8c <main@@Base+0x5f44>
   18e2c:	and	r1, r2, #-16777216	; 0xff000000
   18e30:	teq	r1, #1728053248	; 0x67000000
   18e34:	bne	1fd2c <main@@Base+0x9fe4>
   18e38:	cmp	r0, #2
   18e3c:	blt	1fd2c <main@@Base+0x9fe4>
   18e40:	ldrb	r0, [sl, #17]
   18e44:	cmp	r0, #34	; 0x22
   18e48:	bne	1fd2c <main@@Base+0x9fe4>
   18e4c:	add	r1, sl, #18
   18e50:	sub	r0, r6, r1
   18e54:	cmp	r0, #2
   18e58:	blt	1bed0 <main@@Base+0x6188>
   18e5c:	ldrb	r0, [r1]
   18e60:	cmp	r0, #32
   18e64:	bls	1bec0 <main@@Base+0x6178>
   18e68:	mov	sl, r1
   18e6c:	cmp	sl, r6
   18e70:	bne	1bee8 <main@@Base+0x61a0>
   18e74:	b	1bf28 <main@@Base+0x61e0>
   18e78:	movw	r2, #24428	; 0x5f6c
   18e7c:	lsr	r1, r1, #8
   18e80:	movt	r2, #102	; 0x66
   18e84:	eor	r2, r2, r0, lsr #8
   18e88:	orr	r0, r1, r0, lsl #24
   18e8c:	movw	r1, #26483	; 0x6773
   18e90:	movt	r1, #28526	; 0x6f6e
   18e94:	eor	r0, r0, r1
   18e98:	orrs	r0, r0, r2
   18e9c:	bne	197b0 <main@@Base+0x3a68>
   18ea0:	ldr	r6, [sp, #44]	; 0x2c
   18ea4:	ldr	r9, [sp, #40]	; 0x28
   18ea8:	cmp	lr, #8
   18eac:	blt	1d974 <main@@Base+0x7c2c>
   18eb0:	ldrb	r0, [sl, #15]
   18eb4:	cmp	r0, #34	; 0x22
   18eb8:	bne	1d974 <main@@Base+0x7c2c>
   18ebc:	add	r1, sl, #16
   18ec0:	sub	r0, r6, r1
   18ec4:	cmp	r0, #2
   18ec8:	blt	1c2a8 <main@@Base+0x6560>
   18ecc:	ldrb	r0, [r1]
   18ed0:	cmp	r0, #32
   18ed4:	bls	1c298 <main@@Base+0x6550>
   18ed8:	mov	sl, r1
   18edc:	cmp	sl, r6
   18ee0:	bne	1c2c0 <main@@Base+0x6578>
   18ee4:	b	1c300 <main@@Base+0x65b8>
   18ee8:	cmp	r2, #1
   18eec:	mov	r1, #0
   18ef0:	mov	r2, #0
   18ef4:	beq	17fc0 <main@@Base+0x2278>
   18ef8:	b	1fd2c <main@@Base+0x9fe4>
   18efc:	cmp	ip, #9
   18f00:	blt	1bd10 <main@@Base+0x5fc8>
   18f04:	ldrb	r0, [sl, #16]
   18f08:	cmp	r0, #34	; 0x22
   18f0c:	bne	1bd10 <main@@Base+0x5fc8>
   18f10:	ldr	r4, [sp, #44]	; 0x2c
   18f14:	add	r1, sl, #17
   18f18:	sub	r0, r4, r1
   18f1c:	cmp	r0, #2
   18f20:	blt	1bcbc <main@@Base+0x5f74>
   18f24:	ldrb	r0, [r1]
   18f28:	cmp	r0, #32
   18f2c:	bls	1bca4 <main@@Base+0x5f5c>
   18f30:	ldr	r4, [sp, #44]	; 0x2c
   18f34:	mov	r6, r1
   18f38:	cmp	r6, r4
   18f3c:	bne	1bcd4 <main@@Base+0x5f8c>
   18f40:	b	1bd90 <main@@Base+0x6048>
   18f44:	cmp	r2, #1
   18f48:	mov	r1, #0
   18f4c:	mov	r2, #0
   18f50:	beq	18730 <main@@Base+0x29e8>
   18f54:	b	1fd2c <main@@Base+0x9fe4>
   18f58:	bne	18f6c <main@@Base+0x3224>
   18f5c:	mov	r7, sl
   18f60:	ldrb	r0, [r7, #8]!
   18f64:	cmp	r0, #32
   18f68:	bhi	18f7c <main@@Base+0x3234>
   18f6c:	mov	r0, r9
   18f70:	mov	r2, r6
   18f74:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   18f78:	mov	r7, r0
   18f7c:	cmp	r7, r6
   18f80:	beq	18fbc <main@@Base+0x3274>
   18f84:	ldrb	r0, [r7]
   18f88:	cmp	r0, #58	; 0x3a
   18f8c:	bne	18fbc <main@@Base+0x3274>
   18f90:	add	r1, r7, #1
   18f94:	sub	r0, r6, r1
   18f98:	cmp	r0, #2
   18f9c:	blt	19414 <main@@Base+0x36cc>
   18fa0:	ldrb	r0, [r1]
   18fa4:	cmp	r0, #32
   18fa8:	bls	19404 <main@@Base+0x36bc>
   18fac:	mov	r7, r1
   18fb0:	cmp	sl, r7
   18fb4:	bne	1942c <main@@Base+0x36e4>
   18fb8:	b	1a500 <main@@Base+0x47b8>
   18fbc:	mov	r0, r9
   18fc0:	mov	r1, r7
   18fc4:	mov	r2, r6
   18fc8:	mov	r3, #4
   18fcc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   18fd0:	b	19420 <main@@Base+0x36d8>
   18fd4:	bne	18fe8 <main@@Base+0x32a0>
   18fd8:	mov	r8, sl
   18fdc:	ldrb	r0, [r8, #7]!
   18fe0:	cmp	r0, #32
   18fe4:	bhi	18ff8 <main@@Base+0x32b0>
   18fe8:	ldr	r0, [sp, #40]	; 0x28
   18fec:	mov	r2, r6
   18ff0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   18ff4:	mov	r8, r0
   18ff8:	cmp	r8, r6
   18ffc:	beq	19038 <main@@Base+0x32f0>
   19000:	ldrb	r0, [r8]
   19004:	cmp	r0, #58	; 0x3a
   19008:	bne	19038 <main@@Base+0x32f0>
   1900c:	add	r1, r8, #1
   19010:	sub	r0, r6, r1
   19014:	cmp	r0, #2
   19018:	blt	194e8 <main@@Base+0x37a0>
   1901c:	ldrb	r0, [r1]
   19020:	cmp	r0, #32
   19024:	bls	194d8 <main@@Base+0x3790>
   19028:	mov	r8, r1
   1902c:	cmp	sl, r8
   19030:	bne	19500 <main@@Base+0x37b8>
   19034:	b	1a470 <main@@Base+0x4728>
   19038:	ldr	r0, [sp, #40]	; 0x28
   1903c:	mov	r1, r8
   19040:	mov	r2, r6
   19044:	mov	r3, #4
   19048:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1904c:	b	194f4 <main@@Base+0x37ac>
   19050:	bne	19064 <main@@Base+0x331c>
   19054:	mov	r1, sl
   19058:	ldrb	r0, [r1, #7]!
   1905c:	cmp	r0, #32
   19060:	bhi	19078 <main@@Base+0x3330>
   19064:	mov	r1, r2
   19068:	mov	r0, r9
   1906c:	mov	r2, r6
   19070:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19074:	mov	r1, r0
   19078:	cmp	r1, r6
   1907c:	beq	190b8 <main@@Base+0x3370>
   19080:	ldrb	r0, [r1]
   19084:	cmp	r0, #58	; 0x3a
   19088:	bne	190b8 <main@@Base+0x3370>
   1908c:	add	r2, r1, #1
   19090:	sub	r0, r6, r2
   19094:	cmp	r0, #2
   19098:	blt	19a58 <main@@Base+0x3d10>
   1909c:	ldrb	r0, [r2]
   190a0:	cmp	r0, #32
   190a4:	bls	19a48 <main@@Base+0x3d00>
   190a8:	mov	r1, r2
   190ac:	cmp	sl, r1
   190b0:	bne	19a74 <main@@Base+0x3d2c>
   190b4:	b	1a500 <main@@Base+0x47b8>
   190b8:	mov	r0, r9
   190bc:	mov	r2, r6
   190c0:	mov	r3, #4
   190c4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   190c8:	b	19a68 <main@@Base+0x3d20>
   190cc:	bne	190e0 <main@@Base+0x3398>
   190d0:	mov	r7, sl
   190d4:	ldrb	r0, [r7, #7]!
   190d8:	cmp	r0, #32
   190dc:	bhi	190f0 <main@@Base+0x33a8>
   190e0:	mov	r0, r9
   190e4:	mov	r2, r6
   190e8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   190ec:	mov	r7, r0
   190f0:	cmp	r7, r6
   190f4:	beq	19130 <main@@Base+0x33e8>
   190f8:	ldrb	r0, [r7]
   190fc:	cmp	r0, #58	; 0x3a
   19100:	bne	19130 <main@@Base+0x33e8>
   19104:	add	r1, r7, #1
   19108:	sub	r0, r6, r1
   1910c:	cmp	r0, #2
   19110:	blt	19abc <main@@Base+0x3d74>
   19114:	ldrb	r0, [r1]
   19118:	cmp	r0, #32
   1911c:	bls	19aac <main@@Base+0x3d64>
   19120:	mov	r7, r1
   19124:	cmp	sl, r7
   19128:	bne	19ad4 <main@@Base+0x3d8c>
   1912c:	b	1a500 <main@@Base+0x47b8>
   19130:	mov	r0, r9
   19134:	mov	r1, r7
   19138:	mov	r2, r6
   1913c:	mov	r3, #4
   19140:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   19144:	b	19ac8 <main@@Base+0x3d80>
   19148:	bne	1915c <main@@Base+0x3414>
   1914c:	mov	r1, sl
   19150:	ldrb	r0, [r1, #6]!
   19154:	cmp	r0, #32
   19158:	bhi	19170 <main@@Base+0x3428>
   1915c:	mov	r1, r2
   19160:	mov	r0, r9
   19164:	mov	r2, r6
   19168:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1916c:	mov	r1, r0
   19170:	cmp	r1, r6
   19174:	beq	191b0 <main@@Base+0x3468>
   19178:	ldrb	r0, [r1]
   1917c:	cmp	r0, #58	; 0x3a
   19180:	bne	191b0 <main@@Base+0x3468>
   19184:	add	r2, r1, #1
   19188:	sub	r0, r6, r2
   1918c:	cmp	r0, #2
   19190:	blt	19c38 <main@@Base+0x3ef0>
   19194:	ldrb	r0, [r2]
   19198:	cmp	r0, #32
   1919c:	bls	19c28 <main@@Base+0x3ee0>
   191a0:	mov	r1, r2
   191a4:	cmp	sl, r1
   191a8:	bne	19c54 <main@@Base+0x3f0c>
   191ac:	b	1a500 <main@@Base+0x47b8>
   191b0:	mov	r0, r9
   191b4:	mov	r2, r6
   191b8:	mov	r3, #4
   191bc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   191c0:	b	19c48 <main@@Base+0x3f00>
   191c4:	bne	191d8 <main@@Base+0x3490>
   191c8:	mov	r8, sl
   191cc:	ldrb	r0, [r8, #6]!
   191d0:	cmp	r0, #32
   191d4:	bhi	191e8 <main@@Base+0x34a0>
   191d8:	mov	r0, r9
   191dc:	mov	r2, r6
   191e0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   191e4:	mov	r8, r0
   191e8:	cmp	r8, r6
   191ec:	beq	19228 <main@@Base+0x34e0>
   191f0:	ldrb	r0, [r8]
   191f4:	cmp	r0, #58	; 0x3a
   191f8:	bne	19228 <main@@Base+0x34e0>
   191fc:	add	r1, r8, #1
   19200:	sub	r0, r6, r1
   19204:	cmp	r0, #2
   19208:	blt	19c9c <main@@Base+0x3f54>
   1920c:	ldrb	r0, [r1]
   19210:	cmp	r0, #32
   19214:	bls	19c8c <main@@Base+0x3f44>
   19218:	mov	r8, r1
   1921c:	cmp	sl, r8
   19220:	bne	19cb4 <main@@Base+0x3f6c>
   19224:	b	1a500 <main@@Base+0x47b8>
   19228:	mov	r0, r9
   1922c:	mov	r1, r8
   19230:	mov	r2, r6
   19234:	mov	r3, #4
   19238:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1923c:	b	19ca8 <main@@Base+0x3f60>
   19240:	bne	19254 <main@@Base+0x350c>
   19244:	mov	r1, sl
   19248:	ldrb	r0, [r1, #6]!
   1924c:	cmp	r0, #32
   19250:	bhi	19268 <main@@Base+0x3520>
   19254:	ldr	r0, [sp, #40]	; 0x28
   19258:	mov	r1, r2
   1925c:	mov	r2, r6
   19260:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19264:	mov	r1, r0
   19268:	cmp	r1, r6
   1926c:	beq	192f8 <main@@Base+0x35b0>
   19270:	ldrb	r0, [r1]
   19274:	cmp	r0, #58	; 0x3a
   19278:	bne	192f8 <main@@Base+0x35b0>
   1927c:	add	r2, r1, #1
   19280:	sub	r0, r6, r2
   19284:	cmp	r0, #2
   19288:	blt	1a018 <main@@Base+0x42d0>
   1928c:	ldrb	r0, [r2]
   19290:	cmp	r0, #32
   19294:	bls	1a008 <main@@Base+0x42c0>
   19298:	mov	r1, r2
   1929c:	cmp	sl, r1
   192a0:	bne	1a034 <main@@Base+0x42ec>
   192a4:	eor	r0, r5, #889192448	; 0x35000000
   192a8:	orrs	r0, r0, r7
   192ac:	bne	1a470 <main@@Base+0x4728>
   192b0:	cmp	r8, #6
   192b4:	mov	r8, sl
   192b8:	blt	1a404 <main@@Base+0x46bc>
   192bc:	ldrb	r0, [sl, #5]
   192c0:	mov	r8, sl
   192c4:	cmp	r0, #34	; 0x22
   192c8:	bne	1a404 <main@@Base+0x46bc>
   192cc:	add	r1, sl, #6
   192d0:	sub	r0, r6, r1
   192d4:	cmp	r0, #2
   192d8:	blt	19320 <main@@Base+0x35d8>
   192dc:	ldrb	r0, [r1]
   192e0:	cmp	r0, #32
   192e4:	bls	1930c <main@@Base+0x35c4>
   192e8:	mov	r8, r1
   192ec:	cmp	r8, r6
   192f0:	bne	19338 <main@@Base+0x35f0>
   192f4:	b	19370 <main@@Base+0x3628>
   192f8:	ldr	r0, [sp, #40]	; 0x28
   192fc:	mov	r2, r6
   19300:	mov	r3, #4
   19304:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   19308:	b	1a028 <main@@Base+0x42e0>
   1930c:	bne	19320 <main@@Base+0x35d8>
   19310:	mov	r8, sl
   19314:	ldrb	r0, [r8, #7]!
   19318:	cmp	r0, #32
   1931c:	bhi	19330 <main@@Base+0x35e8>
   19320:	ldr	r0, [sp, #40]	; 0x28
   19324:	mov	r2, r6
   19328:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1932c:	mov	r8, r0
   19330:	cmp	r8, r6
   19334:	beq	19370 <main@@Base+0x3628>
   19338:	ldrb	r0, [r8]
   1933c:	cmp	r0, #58	; 0x3a
   19340:	bne	19370 <main@@Base+0x3628>
   19344:	add	r1, r8, #1
   19348:	sub	r0, r6, r1
   1934c:	cmp	r0, #2
   19350:	blt	1a3f4 <main@@Base+0x46ac>
   19354:	ldrb	r0, [r1]
   19358:	cmp	r0, #32
   1935c:	bls	1a3e4 <main@@Base+0x469c>
   19360:	mov	r8, r1
   19364:	cmp	sl, r8
   19368:	bne	1a40c <main@@Base+0x46c4>
   1936c:	b	1a470 <main@@Base+0x4728>
   19370:	ldr	r0, [sp, #40]	; 0x28
   19374:	mov	r1, r8
   19378:	mov	r2, r6
   1937c:	mov	r3, #4
   19380:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   19384:	b	1a400 <main@@Base+0x46b8>
   19388:	bne	1939c <main@@Base+0x3654>
   1938c:	mov	r7, sl
   19390:	ldrb	r0, [r7, #10]!
   19394:	cmp	r0, #32
   19398:	bhi	193ac <main@@Base+0x3664>
   1939c:	mov	r0, r9
   193a0:	mov	r2, r6
   193a4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   193a8:	mov	r7, r0
   193ac:	cmp	r7, r6
   193b0:	beq	193ec <main@@Base+0x36a4>
   193b4:	ldrb	r0, [r7]
   193b8:	cmp	r0, #58	; 0x3a
   193bc:	bne	193ec <main@@Base+0x36a4>
   193c0:	add	r1, r7, #1
   193c4:	sub	r0, r6, r1
   193c8:	cmp	r0, #2
   193cc:	blt	1a7b0 <main@@Base+0x4a68>
   193d0:	ldrb	r0, [r1]
   193d4:	cmp	r0, #32
   193d8:	bls	1a7a0 <main@@Base+0x4a58>
   193dc:	mov	r7, r1
   193e0:	cmp	sl, r7
   193e4:	bne	1a7c8 <main@@Base+0x4a80>
   193e8:	b	1a500 <main@@Base+0x47b8>
   193ec:	mov	r0, r9
   193f0:	mov	r1, r7
   193f4:	mov	r2, r6
   193f8:	mov	r3, #4
   193fc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   19400:	b	1a7bc <main@@Base+0x4a74>
   19404:	bne	19414 <main@@Base+0x36cc>
   19408:	ldrb	r0, [r7, #2]!
   1940c:	cmp	r0, #32
   19410:	bhi	19424 <main@@Base+0x36dc>
   19414:	mov	r0, r9
   19418:	mov	r2, r6
   1941c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19420:	mov	r7, r0
   19424:	cmp	sl, r7
   19428:	beq	1a500 <main@@Base+0x47b8>
   1942c:	mov	r0, #0
   19430:	mov	r1, r7
   19434:	mov	r2, r6
   19438:	sub	r3, fp, #56	; 0x38
   1943c:	str	r0, [fp, #-56]	; 0xffffffc8
   19440:	mov	r0, r9
   19444:	bl	36d58 <flatcc_json_parser_float@@Base>
   19448:	mov	r8, r0
   1944c:	cmp	r7, r0
   19450:	bne	19488 <main@@Base+0x3740>
   19454:	sub	r0, fp, #56	; 0x38
   19458:	mov	r1, r7
   1945c:	mov	r2, r6
   19460:	str	r0, [sp]
   19464:	movw	r0, #53396	; 0xd094
   19468:	movt	r0, #5
   1946c:	add	r3, r0, #96	; 0x60
   19470:	mov	r0, r9
   19474:	bl	242ac <main@@Base+0xe564>
   19478:	mov	r8, r0
   1947c:	cmp	r0, r7
   19480:	cmpne	r8, r6
   19484:	beq	1fe78 <main@@Base+0xa130>
   19488:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1948c:	vcmp.f32	s0, #0.0
   19490:	vmrs	APSR_nzcv, fpscr
   19494:	bne	194a4 <main@@Base+0x375c>
   19498:	ldrb	r0, [r9, #8]
   1949c:	tst	r0, #2
   194a0:	beq	1fd40 <main@@Base+0x9ff8>
   194a4:	ldr	r0, [r9]
   194a8:	mov	r1, #27
   194ac:	mov	r2, #4
   194b0:	mov	r3, #4
   194b4:	bl	31040 <flatcc_builder_table_add@@Base>
   194b8:	cmp	r0, #0
   194bc:	beq	1fe78 <main@@Base+0xa130>
   194c0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   194c4:	str	r1, [r0]
   194c8:	sub	r0, r6, r8
   194cc:	cmp	r0, #2
   194d0:	bge	1fd4c <main@@Base+0xa004>
   194d4:	b	1fdc0 <main@@Base+0xa078>
   194d8:	bne	194e8 <main@@Base+0x37a0>
   194dc:	ldrb	r0, [r8, #2]!
   194e0:	cmp	r0, #32
   194e4:	bhi	194f8 <main@@Base+0x37b0>
   194e8:	ldr	r0, [sp, #40]	; 0x28
   194ec:	mov	r2, r6
   194f0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   194f4:	mov	r8, r0
   194f8:	cmp	sl, r8
   194fc:	beq	1a470 <main@@Base+0x4728>
   19500:	ldr	r9, [sp, #40]	; 0x28
   19504:	mov	r1, #4
   19508:	mov	r2, #2
   1950c:	mvn	r3, #-1073741824	; 0xc0000000
   19510:	ldr	r0, [r9]
   19514:	bl	2f718 <flatcc_builder_start_vector@@Base>
   19518:	cmp	r0, #0
   1951c:	bne	1fe78 <main@@Base+0xa130>
   19520:	cmp	r8, r6
   19524:	beq	19564 <main@@Base+0x381c>
   19528:	ldrb	r0, [r8]
   1952c:	cmp	r0, #91	; 0x5b
   19530:	bne	19564 <main@@Base+0x381c>
   19534:	add	r1, r8, #1
   19538:	sub	r0, r6, r1
   1953c:	cmp	r0, #2
   19540:	blt	195b8 <main@@Base+0x3870>
   19544:	ldrb	r0, [r1]
   19548:	cmp	r0, #32
   1954c:	bls	195a8 <main@@Base+0x3860>
   19550:	mov	r8, r1
   19554:	cmp	r8, r6
   19558:	mov	sl, r6
   1955c:	bne	195d4 <main@@Base+0x388c>
   19560:	b	19614 <main@@Base+0x38cc>
   19564:	mov	r0, r9
   19568:	mov	r1, r8
   1956c:	mov	r2, r6
   19570:	mov	r3, #22
   19574:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   19578:	mov	r8, r0
   1957c:	ldr	r0, [r9]
   19580:	bl	30998 <flatcc_builder_end_vector@@Base>
   19584:	cmp	r0, #0
   19588:	str	r0, [sp, #52]	; 0x34
   1958c:	beq	1fe78 <main@@Base+0xa130>
   19590:	ldr	r0, [r9]
   19594:	mov	r1, #9
   19598:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1959c:	cmp	r0, #0
   195a0:	bne	1a54c <main@@Base+0x4804>
   195a4:	b	1fe78 <main@@Base+0xa130>
   195a8:	bne	195b8 <main@@Base+0x3870>
   195ac:	ldrb	r0, [r8, #2]!
   195b0:	cmp	r0, #32
   195b4:	bhi	195c8 <main@@Base+0x3880>
   195b8:	mov	r0, r9
   195bc:	mov	r2, r6
   195c0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   195c4:	mov	r8, r0
   195c8:	cmp	r8, r6
   195cc:	mov	sl, r6
   195d0:	beq	19614 <main@@Base+0x38cc>
   195d4:	ldrb	r0, [r8]
   195d8:	cmp	r0, #93	; 0x5d
   195dc:	bne	19610 <main@@Base+0x38c8>
   195e0:	add	r1, r8, #1
   195e4:	sub	r0, r6, r1
   195e8:	cmp	r0, #2
   195ec:	blt	1a07c <main@@Base+0x4334>
   195f0:	ldrb	r0, [r1]
   195f4:	cmp	r0, #32
   195f8:	bhi	19740 <main@@Base+0x39f8>
   195fc:	bne	1a07c <main@@Base+0x4334>
   19600:	ldrb	r0, [r8, #2]!
   19604:	cmp	r0, #32
   19608:	bhi	1957c <main@@Base+0x3834>
   1960c:	b	1a07c <main@@Base+0x4334>
   19610:	mov	sl, r8
   19614:	ldr	r0, [r9]
   19618:	mov	r1, #1
   1961c:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   19620:	mov	r3, r0
   19624:	cmp	r0, #0
   19628:	beq	16638 <main@@Base+0x8f0>
   1962c:	mov	r0, r9
   19630:	mov	r1, sl
   19634:	mov	r2, r6
   19638:	bl	2246c <main@@Base+0xc724>
   1963c:	mov	r1, r0
   19640:	sub	r0, r6, r0
   19644:	cmp	r0, #2
   19648:	blt	1967c <main@@Base+0x3934>
   1964c:	ldrb	r0, [r1]
   19650:	cmp	r0, #32
   19654:	bls	19668 <main@@Base+0x3920>
   19658:	mov	sl, r1
   1965c:	cmp	sl, r6
   19660:	bne	19694 <main@@Base+0x394c>
   19664:	b	19714 <main@@Base+0x39cc>
   19668:	bne	1967c <main@@Base+0x3934>
   1966c:	mov	sl, r1
   19670:	ldrb	r0, [sl, #1]!
   19674:	cmp	r0, #32
   19678:	bhi	1968c <main@@Base+0x3944>
   1967c:	mov	r0, r9
   19680:	mov	r2, r6
   19684:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19688:	mov	sl, r0
   1968c:	cmp	sl, r6
   19690:	beq	19714 <main@@Base+0x39cc>
   19694:	ldrb	r0, [sl]
   19698:	cmp	r0, #44	; 0x2c
   1969c:	bne	1971c <main@@Base+0x39d4>
   196a0:	add	r1, sl, #1
   196a4:	sub	r0, r6, r1
   196a8:	cmp	r0, #2
   196ac:	blt	196dc <main@@Base+0x3994>
   196b0:	ldrb	r0, [r1]
   196b4:	cmp	r0, #32
   196b8:	bls	196cc <main@@Base+0x3984>
   196bc:	mov	sl, r1
   196c0:	cmp	sl, r6
   196c4:	bne	196f4 <main@@Base+0x39ac>
   196c8:	b	19748 <main@@Base+0x3a00>
   196cc:	bne	196dc <main@@Base+0x3994>
   196d0:	ldrb	r0, [sl, #2]!
   196d4:	cmp	r0, #32
   196d8:	bhi	196ec <main@@Base+0x39a4>
   196dc:	mov	r0, r9
   196e0:	mov	r2, r6
   196e4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   196e8:	mov	sl, r0
   196ec:	cmp	sl, r6
   196f0:	beq	19748 <main@@Base+0x3a00>
   196f4:	ldrb	r0, [sl]
   196f8:	cmp	r0, #93	; 0x5d
   196fc:	bne	19614 <main@@Base+0x38cc>
   19700:	add	r1, sl, #1
   19704:	sub	r0, r6, r1
   19708:	cmp	r0, #2
   1970c:	blt	1a07c <main@@Base+0x4334>
   19710:	b	19734 <main@@Base+0x39ec>
   19714:	mov	r8, r6
   19718:	b	1957c <main@@Base+0x3834>
   1971c:	cmp	r0, #93	; 0x5d
   19720:	bne	19c14 <main@@Base+0x3ecc>
   19724:	add	r1, sl, #1
   19728:	sub	r0, r6, r1
   1972c:	cmp	r0, #2
   19730:	blt	1a07c <main@@Base+0x4334>
   19734:	ldrb	r0, [r1]
   19738:	cmp	r0, #32
   1973c:	bls	1a068 <main@@Base+0x4320>
   19740:	mov	r8, r1
   19744:	b	1957c <main@@Base+0x3834>
   19748:	mov	r0, r9
   1974c:	mov	r1, r6
   19750:	b	19c1c <main@@Base+0x3ed4>
   19754:	bne	19764 <main@@Base+0x3a1c>
   19758:	ldrb	r0, [sl, #18]!
   1975c:	cmp	r0, #32
   19760:	bhi	19774 <main@@Base+0x3a2c>
   19764:	mov	r0, r5
   19768:	mov	r2, r4
   1976c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19770:	mov	sl, r0
   19774:	cmp	sl, r4
   19778:	beq	197c4 <main@@Base+0x3a7c>
   1977c:	ldrb	r0, [sl]
   19780:	cmp	r0, #58	; 0x3a
   19784:	bne	197c4 <main@@Base+0x3a7c>
   19788:	add	r1, sl, #1
   1978c:	sub	r0, r4, r1
   19790:	cmp	r0, #2
   19794:	blt	1aa90 <main@@Base+0x4d48>
   19798:	ldrb	r0, [r1]
   1979c:	cmp	r0, #32
   197a0:	bls	1aa80 <main@@Base+0x4d38>
   197a4:	mov	sl, r1
   197a8:	cmp	r8, sl
   197ac:	bne	1aaa8 <main@@Base+0x4d60>
   197b0:	ldr	r9, [sp, #40]	; 0x28
   197b4:	ldr	r6, [sp, #44]	; 0x2c
   197b8:	mov	r0, r9
   197bc:	mov	r1, r8
   197c0:	b	1fd34 <main@@Base+0x9fec>
   197c4:	mov	r0, r5
   197c8:	mov	r1, sl
   197cc:	mov	r2, r4
   197d0:	mov	r3, #4
   197d4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   197d8:	b	1aa9c <main@@Base+0x4d54>
   197dc:	bne	197f0 <main@@Base+0x3aa8>
   197e0:	mov	r7, sl
   197e4:	ldrb	r0, [r7, #4]!
   197e8:	cmp	r0, #32
   197ec:	bhi	19800 <main@@Base+0x3ab8>
   197f0:	mov	r0, r9
   197f4:	mov	r2, r6
   197f8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   197fc:	mov	r7, r0
   19800:	cmp	r7, r6
   19804:	beq	19840 <main@@Base+0x3af8>
   19808:	ldrb	r0, [r7]
   1980c:	cmp	r0, #58	; 0x3a
   19810:	bne	19840 <main@@Base+0x3af8>
   19814:	add	r1, r7, #1
   19818:	sub	r0, r6, r1
   1981c:	cmp	r0, #2
   19820:	blt	1ac54 <main@@Base+0x4f0c>
   19824:	ldrb	r0, [r1]
   19828:	cmp	r0, #32
   1982c:	bls	1ac44 <main@@Base+0x4efc>
   19830:	mov	r7, r1
   19834:	cmp	sl, r7
   19838:	bne	1ac6c <main@@Base+0x4f24>
   1983c:	b	1a500 <main@@Base+0x47b8>
   19840:	mov	r0, r9
   19844:	mov	r1, r7
   19848:	mov	r2, r6
   1984c:	mov	r3, #4
   19850:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   19854:	b	1ac60 <main@@Base+0x4f18>
   19858:	bne	1986c <main@@Base+0x3b24>
   1985c:	mov	r8, sl
   19860:	ldrb	r0, [r8, #5]!
   19864:	cmp	r0, #32
   19868:	bhi	1987c <main@@Base+0x3b34>
   1986c:	mov	r0, r9
   19870:	mov	r2, r6
   19874:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19878:	mov	r8, r0
   1987c:	cmp	r8, r6
   19880:	beq	198bc <main@@Base+0x3b74>
   19884:	ldrb	r0, [r8]
   19888:	cmp	r0, #58	; 0x3a
   1988c:	bne	198bc <main@@Base+0x3b74>
   19890:	add	r1, r8, #1
   19894:	sub	r0, r6, r1
   19898:	cmp	r0, #2
   1989c:	blt	1addc <main@@Base+0x5094>
   198a0:	ldrb	r0, [r1]
   198a4:	cmp	r0, #32
   198a8:	bls	1adcc <main@@Base+0x5084>
   198ac:	mov	r8, r1
   198b0:	cmp	sl, r8
   198b4:	bne	1adf4 <main@@Base+0x50ac>
   198b8:	b	1a500 <main@@Base+0x47b8>
   198bc:	mov	r0, r9
   198c0:	mov	r1, r8
   198c4:	mov	r2, r6
   198c8:	mov	r3, #4
   198cc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   198d0:	b	1ade8 <main@@Base+0x50a0>
   198d4:	bne	198e8 <main@@Base+0x3ba0>
   198d8:	mov	r7, sl
   198dc:	ldrb	r0, [r7, #8]!
   198e0:	cmp	r0, #32
   198e4:	bhi	198f8 <main@@Base+0x3bb0>
   198e8:	mov	r0, r9
   198ec:	mov	r2, r6
   198f0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   198f4:	mov	r7, r0
   198f8:	cmp	r7, r6
   198fc:	beq	19938 <main@@Base+0x3bf0>
   19900:	ldrb	r0, [r7]
   19904:	cmp	r0, #58	; 0x3a
   19908:	bne	19938 <main@@Base+0x3bf0>
   1990c:	add	r1, r7, #1
   19910:	sub	r0, r6, r1
   19914:	cmp	r0, #2
   19918:	blt	1bb04 <main@@Base+0x5dbc>
   1991c:	ldrb	r0, [r1]
   19920:	cmp	r0, #32
   19924:	bls	1baf4 <main@@Base+0x5dac>
   19928:	mov	r7, r1
   1992c:	cmp	sl, r7
   19930:	bne	1bb1c <main@@Base+0x5dd4>
   19934:	b	1a500 <main@@Base+0x47b8>
   19938:	mov	r0, r9
   1993c:	mov	r1, r7
   19940:	mov	r2, r6
   19944:	mov	r3, #4
   19948:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1994c:	b	1bb10 <main@@Base+0x5dc8>
   19950:	ldr	r4, [sp, #44]	; 0x2c
   19954:	bne	19968 <main@@Base+0x3c20>
   19958:	mov	r6, sl
   1995c:	ldrb	r0, [r6, #18]!
   19960:	cmp	r0, #32
   19964:	bhi	19978 <main@@Base+0x3c30>
   19968:	mov	r0, r9
   1996c:	mov	r2, r4
   19970:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19974:	mov	r6, r0
   19978:	cmp	r6, r4
   1997c:	beq	19a30 <main@@Base+0x3ce8>
   19980:	ldrb	r0, [r6]
   19984:	cmp	r0, #58	; 0x3a
   19988:	bne	19a30 <main@@Base+0x3ce8>
   1998c:	ldr	r0, [sp, #44]	; 0x2c
   19990:	add	r1, r6, #1
   19994:	sub	r0, r0, r1
   19998:	cmp	r0, #2
   1999c:	blt	1bdcc <main@@Base+0x6084>
   199a0:	ldrb	r0, [r1]
   199a4:	cmp	r0, #32
   199a8:	bls	1bdbc <main@@Base+0x6074>
   199ac:	mov	r6, r1
   199b0:	cmp	r8, r6
   199b4:	bne	1bde4 <main@@Base+0x609c>
   199b8:	ldr	r6, [sp, #44]	; 0x2c
   199bc:	add	r7, sl, #16
   199c0:	mov	r1, #8
   199c4:	mov	r2, #-268435456	; 0xf0000000
   199c8:	sub	r0, r6, r7
   199cc:	cmp	r0, #8
   199d0:	movcc	r1, r0
   199d4:	add	r1, r2, r1, lsl #28
   199d8:	asr	r1, r1, #28
   199dc:	cmp	r1, #0
   199e0:	blt	1fd2c <main@@Base+0x9fe4>
   199e4:	ldrb	r1, [r7]
   199e8:	cmp	r1, #97	; 0x61
   199ec:	bne	1fd2c <main@@Base+0x9fe4>
   199f0:	cmp	r0, #2
   199f4:	blt	1fd2c <main@@Base+0x9fe4>
   199f8:	ldrb	r0, [sl, #17]
   199fc:	cmp	r0, #34	; 0x22
   19a00:	bne	1fd2c <main@@Base+0x9fe4>
   19a04:	add	r1, sl, #18
   19a08:	sub	r0, r6, r1
   19a0c:	cmp	r0, #2
   19a10:	blt	1bf50 <main@@Base+0x6208>
   19a14:	ldrb	r0, [r1]
   19a18:	cmp	r0, #32
   19a1c:	bls	1bf40 <main@@Base+0x61f8>
   19a20:	mov	sl, r1
   19a24:	cmp	sl, r6
   19a28:	bne	1bf68 <main@@Base+0x6220>
   19a2c:	b	1bfa8 <main@@Base+0x6260>
   19a30:	ldr	r2, [sp, #44]	; 0x2c
   19a34:	mov	r0, r9
   19a38:	mov	r1, r6
   19a3c:	mov	r3, #4
   19a40:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   19a44:	b	1bdd8 <main@@Base+0x6090>
   19a48:	bne	19a58 <main@@Base+0x3d10>
   19a4c:	ldrb	r0, [r1, #2]!
   19a50:	cmp	r0, #32
   19a54:	bhi	19a6c <main@@Base+0x3d24>
   19a58:	mov	r1, r2
   19a5c:	mov	r0, r9
   19a60:	mov	r2, r6
   19a64:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19a68:	mov	r1, r0
   19a6c:	cmp	sl, r1
   19a70:	beq	1a500 <main@@Base+0x47b8>
   19a74:	mov	r0, r9
   19a78:	mov	r2, r6
   19a7c:	add	r3, sp, #52	; 0x34
   19a80:	bl	165f8 <main@@Base+0x8b0>
   19a84:	mov	r8, r0
   19a88:	ldr	r0, [sp, #52]	; 0x34
   19a8c:	cmp	r0, #0
   19a90:	beq	1fe78 <main@@Base+0xa130>
   19a94:	ldr	r0, [r9]
   19a98:	mov	r1, #12
   19a9c:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   19aa0:	cmp	r0, #0
   19aa4:	bne	1a54c <main@@Base+0x4804>
   19aa8:	b	1fe78 <main@@Base+0xa130>
   19aac:	bne	19abc <main@@Base+0x3d74>
   19ab0:	ldrb	r0, [r7, #2]!
   19ab4:	cmp	r0, #32
   19ab8:	bhi	19acc <main@@Base+0x3d84>
   19abc:	mov	r0, r9
   19ac0:	mov	r2, r6
   19ac4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19ac8:	mov	r7, r0
   19acc:	cmp	sl, r7
   19ad0:	beq	1a500 <main@@Base+0x47b8>
   19ad4:	mov	r4, #0
   19ad8:	cmp	r7, r6
   19adc:	str	r4, [fp, #-52]	; 0xffffffcc
   19ae0:	str	r4, [fp, #-56]	; 0xffffffc8
   19ae4:	strb	r4, [fp, #-60]	; 0xffffffc4
   19ae8:	str	r4, [sp, #56]	; 0x38
   19aec:	beq	19b4c <main@@Base+0x3e04>
   19af0:	sub	r0, fp, #56	; 0x38
   19af4:	mov	r1, r7
   19af8:	mov	r2, r6
   19afc:	add	r3, sp, #56	; 0x38
   19b00:	str	r0, [sp]
   19b04:	mov	r0, r9
   19b08:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   19b0c:	cmp	r0, r7
   19b10:	beq	19b5c <main@@Base+0x3e14>
   19b14:	ldr	r2, [sp, #56]	; 0x38
   19b18:	mov	r8, r0
   19b1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19b20:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19b24:	cmp	r2, #0
   19b28:	beq	19b6c <main@@Base+0x3e24>
   19b2c:	subs	r2, r0, #129	; 0x81
   19b30:	sbcs	r1, r1, #0
   19b34:	bcc	19b9c <main@@Base+0x3e54>
   19b38:	mov	r0, r9
   19b3c:	mov	r1, r8
   19b40:	mov	r2, r6
   19b44:	mov	r3, #8
   19b48:	b	19b88 <main@@Base+0x3e40>
   19b4c:	mov	r8, r6
   19b50:	cmp	r7, r8
   19b54:	bne	19bf4 <main@@Base+0x3eac>
   19b58:	b	19bc0 <main@@Base+0x3e78>
   19b5c:	mov	r8, r7
   19b60:	cmp	r7, r8
   19b64:	bne	19bf4 <main@@Base+0x3eac>
   19b68:	b	19bc0 <main@@Base+0x3e78>
   19b6c:	subs	r2, r0, #128	; 0x80
   19b70:	sbcs	r1, r1, #0
   19b74:	bcc	19bb0 <main@@Base+0x3e68>
   19b78:	mov	r0, r9
   19b7c:	mov	r1, r8
   19b80:	mov	r2, r6
   19b84:	mov	r3, #7
   19b88:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   19b8c:	mov	r8, r0
   19b90:	cmp	r7, r8
   19b94:	bne	19bf4 <main@@Base+0x3eac>
   19b98:	b	19bc0 <main@@Base+0x3e78>
   19b9c:	rsb	r4, r0, #0
   19ba0:	strb	r4, [fp, #-60]	; 0xffffffc4
   19ba4:	cmp	r7, r8
   19ba8:	bne	19bf4 <main@@Base+0x3eac>
   19bac:	b	19bc0 <main@@Base+0x3e78>
   19bb0:	mov	r4, r0
   19bb4:	strb	r4, [fp, #-60]	; 0xffffffc4
   19bb8:	cmp	r7, r8
   19bbc:	bne	19bf4 <main@@Base+0x3eac>
   19bc0:	ldr	r3, [sp, #24]
   19bc4:	sub	r0, fp, #60	; 0x3c
   19bc8:	mov	r1, r7
   19bcc:	mov	r2, r6
   19bd0:	str	r0, [sp]
   19bd4:	mov	r0, r9
   19bd8:	bl	21df8 <main@@Base+0xc0b0>
   19bdc:	mov	r8, r0
   19be0:	cmp	r0, r7
   19be4:	beq	1fe78 <main@@Base+0xa130>
   19be8:	cmp	r8, r6
   19bec:	beq	1fe78 <main@@Base+0xa130>
   19bf0:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   19bf4:	uxtb	r0, r4
   19bf8:	cmp	r0, #8
   19bfc:	ldrbeq	r0, [r9, #8]
   19c00:	tsteq	r0, #2
   19c04:	beq	1fd40 <main@@Base+0x9ff8>
   19c08:	ldr	r0, [r9]
   19c0c:	mov	r1, #6
   19c10:	b	1a934 <main@@Base+0x4bec>
   19c14:	mov	r0, r9
   19c18:	mov	r1, sl
   19c1c:	mov	r2, r6
   19c20:	mov	r3, #9
   19c24:	b	19574 <main@@Base+0x382c>
   19c28:	bne	19c38 <main@@Base+0x3ef0>
   19c2c:	ldrb	r0, [r1, #2]!
   19c30:	cmp	r0, #32
   19c34:	bhi	19c4c <main@@Base+0x3f04>
   19c38:	mov	r1, r2
   19c3c:	mov	r0, r9
   19c40:	mov	r2, r6
   19c44:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19c48:	mov	r1, r0
   19c4c:	cmp	sl, r1
   19c50:	beq	1a500 <main@@Base+0x47b8>
   19c54:	mov	r0, r9
   19c58:	mov	r2, r6
   19c5c:	add	r3, sp, #52	; 0x34
   19c60:	bl	37464 <flatcc_json_parser_build_string@@Base>
   19c64:	mov	r8, r0
   19c68:	ldr	r0, [sp, #52]	; 0x34
   19c6c:	cmp	r0, #0
   19c70:	beq	1fe78 <main@@Base+0xa130>
   19c74:	ldr	r0, [r9]
   19c78:	mov	r1, #3
   19c7c:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   19c80:	cmp	r0, #0
   19c84:	bne	1a54c <main@@Base+0x4804>
   19c88:	b	1fe78 <main@@Base+0xa130>
   19c8c:	bne	19c9c <main@@Base+0x3f54>
   19c90:	ldrb	r0, [r8, #2]!
   19c94:	cmp	r0, #32
   19c98:	bhi	19cac <main@@Base+0x3f64>
   19c9c:	mov	r0, r9
   19ca0:	mov	r2, r6
   19ca4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19ca8:	mov	r8, r0
   19cac:	cmp	sl, r8
   19cb0:	beq	1a500 <main@@Base+0x47b8>
   19cb4:	ldr	r0, [r9]
   19cb8:	mov	r1, #1
   19cbc:	mov	r2, #1
   19cc0:	mvn	r3, #0
   19cc4:	bl	2f718 <flatcc_builder_start_vector@@Base>
   19cc8:	cmp	r0, #0
   19ccc:	bne	1fe78 <main@@Base+0xa130>
   19cd0:	cmp	r8, r6
   19cd4:	beq	19d14 <main@@Base+0x3fcc>
   19cd8:	ldrb	r0, [r8]
   19cdc:	cmp	r0, #91	; 0x5b
   19ce0:	bne	19d14 <main@@Base+0x3fcc>
   19ce4:	add	r1, r8, #1
   19ce8:	sub	r0, r6, r1
   19cec:	cmp	r0, #2
   19cf0:	blt	19d68 <main@@Base+0x4020>
   19cf4:	ldrb	r0, [r1]
   19cf8:	cmp	r0, #32
   19cfc:	bls	19d58 <main@@Base+0x4010>
   19d00:	mov	r8, r1
   19d04:	cmp	r8, r6
   19d08:	mov	r5, r6
   19d0c:	bne	19d84 <main@@Base+0x403c>
   19d10:	b	19d94 <main@@Base+0x404c>
   19d14:	mov	r0, r9
   19d18:	mov	r1, r8
   19d1c:	mov	r2, r6
   19d20:	mov	r3, #22
   19d24:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   19d28:	mov	r8, r0
   19d2c:	ldr	r0, [r9]
   19d30:	bl	30998 <flatcc_builder_end_vector@@Base>
   19d34:	cmp	r0, #0
   19d38:	str	r0, [sp, #52]	; 0x34
   19d3c:	beq	1fe78 <main@@Base+0xa130>
   19d40:	ldr	r0, [r9]
   19d44:	mov	r1, #30
   19d48:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   19d4c:	cmp	r0, #0
   19d50:	bne	1a54c <main@@Base+0x4804>
   19d54:	b	1fe78 <main@@Base+0xa130>
   19d58:	bne	19d68 <main@@Base+0x4020>
   19d5c:	ldrb	r0, [r8, #2]!
   19d60:	cmp	r0, #32
   19d64:	bhi	19d78 <main@@Base+0x4030>
   19d68:	mov	r0, r9
   19d6c:	mov	r2, r6
   19d70:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19d74:	mov	r8, r0
   19d78:	cmp	r8, r6
   19d7c:	mov	r5, r6
   19d80:	beq	19d94 <main@@Base+0x404c>
   19d84:	ldrb	r0, [r8]
   19d88:	cmp	r0, #93	; 0x5d
   19d8c:	beq	19fb8 <main@@Base+0x4270>
   19d90:	mov	r5, r8
   19d94:	mov	r0, #0
   19d98:	mov	r1, #1
   19d9c:	strb	r0, [fp, #-60]	; 0xffffffc4
   19da0:	ldr	r0, [r9]
   19da4:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   19da8:	cmp	r0, #0
   19dac:	beq	1fef4 <main@@Base+0xa1ac>
   19db0:	mov	r4, r0
   19db4:	mov	r8, r5
   19db8:	mov	r5, #0
   19dbc:	cmp	r8, r6
   19dc0:	str	r5, [fp, #-52]	; 0xffffffcc
   19dc4:	str	r5, [fp, #-56]	; 0xffffffc8
   19dc8:	strb	r5, [fp, #-60]	; 0xffffffc4
   19dcc:	str	r5, [sp, #56]	; 0x38
   19dd0:	beq	19e28 <main@@Base+0x40e0>
   19dd4:	sub	r0, fp, #56	; 0x38
   19dd8:	mov	r1, r8
   19ddc:	mov	r2, r6
   19de0:	add	r3, sp, #56	; 0x38
   19de4:	str	r0, [sp]
   19de8:	mov	r0, r9
   19dec:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   19df0:	cmp	r0, r8
   19df4:	beq	19e38 <main@@Base+0x40f0>
   19df8:	mov	r1, r0
   19dfc:	ldr	r0, [sp, #56]	; 0x38
   19e00:	cmp	r0, #0
   19e04:	beq	19e48 <main@@Base+0x4100>
   19e08:	mov	r0, r9
   19e0c:	mov	r2, r6
   19e10:	mov	r3, #8
   19e14:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   19e18:	mov	r1, r0
   19e1c:	cmp	r8, r1
   19e20:	bne	19ec0 <main@@Base+0x4178>
   19e24:	b	19e8c <main@@Base+0x4144>
   19e28:	mov	r1, r6
   19e2c:	cmp	r8, r1
   19e30:	bne	19ec0 <main@@Base+0x4178>
   19e34:	b	19e8c <main@@Base+0x4144>
   19e38:	mov	r1, r8
   19e3c:	cmp	r8, r1
   19e40:	bne	19ec0 <main@@Base+0x4178>
   19e44:	b	19e8c <main@@Base+0x4144>
   19e48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19e4c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19e50:	subs	r3, r0, #256	; 0x100
   19e54:	sbcs	r2, r2, #0
   19e58:	bcc	19e7c <main@@Base+0x4134>
   19e5c:	mov	r0, r9
   19e60:	mov	r2, r6
   19e64:	mov	r3, #7
   19e68:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   19e6c:	mov	r1, r0
   19e70:	cmp	r8, r1
   19e74:	bne	19ec0 <main@@Base+0x4178>
   19e78:	b	19e8c <main@@Base+0x4144>
   19e7c:	mov	r5, r0
   19e80:	strb	r0, [fp, #-60]	; 0xffffffc4
   19e84:	cmp	r8, r1
   19e88:	bne	19ec0 <main@@Base+0x4178>
   19e8c:	movw	r3, #53396	; 0xd094
   19e90:	sub	r0, fp, #60	; 0x3c
   19e94:	mov	r1, r8
   19e98:	mov	r2, r6
   19e9c:	str	r0, [sp]
   19ea0:	mov	r0, r9
   19ea4:	movt	r3, #5
   19ea8:	bl	22024 <main@@Base+0xc2dc>
   19eac:	mov	r1, r0
   19eb0:	cmp	r0, r8
   19eb4:	cmpne	r1, r6
   19eb8:	beq	1fee8 <main@@Base+0xa1a0>
   19ebc:	ldrb	r5, [fp, #-60]	; 0xffffffc4
   19ec0:	sub	r0, r6, r1
   19ec4:	strb	r5, [r4]
   19ec8:	cmp	r0, #2
   19ecc:	blt	19f00 <main@@Base+0x41b8>
   19ed0:	ldrb	r0, [r1]
   19ed4:	cmp	r0, #32
   19ed8:	bls	19eec <main@@Base+0x41a4>
   19edc:	mov	r8, r1
   19ee0:	cmp	r8, r6
   19ee4:	bne	19f18 <main@@Base+0x41d0>
   19ee8:	b	19fa8 <main@@Base+0x4260>
   19eec:	bne	19f00 <main@@Base+0x41b8>
   19ef0:	mov	r8, r1
   19ef4:	ldrb	r0, [r8, #1]!
   19ef8:	cmp	r0, #32
   19efc:	bhi	19f10 <main@@Base+0x41c8>
   19f00:	mov	r0, r9
   19f04:	mov	r2, r6
   19f08:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19f0c:	mov	r8, r0
   19f10:	cmp	r8, r6
   19f14:	beq	19fa8 <main@@Base+0x4260>
   19f18:	ldrb	r0, [r8]
   19f1c:	cmp	r0, #44	; 0x2c
   19f20:	bne	19fb0 <main@@Base+0x4268>
   19f24:	add	r1, r8, #1
   19f28:	sub	r0, r6, r1
   19f2c:	cmp	r0, #2
   19f30:	blt	19f60 <main@@Base+0x4218>
   19f34:	ldrb	r0, [r1]
   19f38:	cmp	r0, #32
   19f3c:	bls	19f50 <main@@Base+0x4208>
   19f40:	mov	r8, r1
   19f44:	cmp	r8, r6
   19f48:	bne	19f78 <main@@Base+0x4230>
   19f4c:	b	19ffc <main@@Base+0x42b4>
   19f50:	bne	19f60 <main@@Base+0x4218>
   19f54:	ldrb	r0, [r8, #2]!
   19f58:	cmp	r0, #32
   19f5c:	bhi	19f70 <main@@Base+0x4228>
   19f60:	mov	r0, r9
   19f64:	mov	r2, r6
   19f68:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19f6c:	mov	r8, r0
   19f70:	cmp	r8, r6
   19f74:	beq	19ffc <main@@Base+0x42b4>
   19f78:	ldrb	r0, [r8]
   19f7c:	cmp	r0, #93	; 0x5d
   19f80:	beq	19fb8 <main@@Base+0x4270>
   19f84:	mov	r0, #0
   19f88:	mov	r1, #1
   19f8c:	strb	r0, [fp, #-60]	; 0xffffffc4
   19f90:	ldr	r0, [r9]
   19f94:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   19f98:	mov	r4, r0
   19f9c:	cmp	r0, #0
   19fa0:	bne	19db8 <main@@Base+0x4070>
   19fa4:	b	1fe78 <main@@Base+0xa130>
   19fa8:	mov	r8, r6
   19fac:	b	19d2c <main@@Base+0x3fe4>
   19fb0:	cmp	r0, #93	; 0x5d
   19fb4:	bne	1a9f4 <main@@Base+0x4cac>
   19fb8:	add	r1, r8, #1
   19fbc:	sub	r0, r6, r1
   19fc0:	cmp	r0, #2
   19fc4:	blt	19fec <main@@Base+0x42a4>
   19fc8:	ldrb	r0, [r1]
   19fcc:	cmp	r0, #32
   19fd0:	bls	19fdc <main@@Base+0x4294>
   19fd4:	mov	r8, r1
   19fd8:	b	19d2c <main@@Base+0x3fe4>
   19fdc:	bne	19fec <main@@Base+0x42a4>
   19fe0:	ldrb	r0, [r8, #2]!
   19fe4:	cmp	r0, #32
   19fe8:	bhi	19d2c <main@@Base+0x3fe4>
   19fec:	mov	r0, r9
   19ff0:	mov	r2, r6
   19ff4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   19ff8:	b	19d28 <main@@Base+0x3fe0>
   19ffc:	mov	r0, r9
   1a000:	mov	r1, r6
   1a004:	b	1a9fc <main@@Base+0x4cb4>
   1a008:	bne	1a018 <main@@Base+0x42d0>
   1a00c:	ldrb	r0, [r1, #2]!
   1a010:	cmp	r0, #32
   1a014:	bhi	1a02c <main@@Base+0x42e4>
   1a018:	ldr	r0, [sp, #40]	; 0x28
   1a01c:	mov	r1, r2
   1a020:	mov	r2, r6
   1a024:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a028:	mov	r1, r0
   1a02c:	cmp	sl, r1
   1a030:	beq	192a4 <main@@Base+0x355c>
   1a034:	ldr	r0, [sp, #48]	; 0x30
   1a038:	ldr	r9, [sp, #40]	; 0x28
   1a03c:	mov	r2, #8
   1a040:	mov	r3, #0
   1a044:	str	r2, [sp]
   1a048:	mov	r2, r6
   1a04c:	str	r0, [sp, #4]
   1a050:	movw	r0, #11304	; 0x2c28
   1a054:	movt	r0, #2
   1a058:	str	r0, [sp, #8]
   1a05c:	mov	r0, r9
   1a060:	bl	37884 <flatcc_json_parser_union@@Base>
   1a064:	b	1fd3c <main@@Base+0x9ff4>
   1a068:	bne	1a07c <main@@Base+0x4334>
   1a06c:	ldrb	r0, [sl, #2]!
   1a070:	cmp	r0, #32
   1a074:	mov	r8, sl
   1a078:	bhi	1957c <main@@Base+0x3834>
   1a07c:	mov	r0, r9
   1a080:	mov	r2, r6
   1a084:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a088:	b	19578 <main@@Base+0x3830>
   1a08c:	bne	1a09c <main@@Base+0x4354>
   1a090:	ldrb	r0, [sl, #12]!
   1a094:	cmp	r0, #32
   1a098:	bhi	1a0ac <main@@Base+0x4364>
   1a09c:	mov	r0, r9
   1a0a0:	mov	r2, r6
   1a0a4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a0a8:	mov	sl, r0
   1a0ac:	cmp	sl, r6
   1a0b0:	beq	1a0ec <main@@Base+0x43a4>
   1a0b4:	ldrb	r0, [sl]
   1a0b8:	cmp	r0, #58	; 0x3a
   1a0bc:	bne	1a0ec <main@@Base+0x43a4>
   1a0c0:	add	r1, sl, #1
   1a0c4:	sub	r0, r6, r1
   1a0c8:	cmp	r0, #2
   1a0cc:	blt	1c3a8 <main@@Base+0x6660>
   1a0d0:	ldrb	r0, [r1]
   1a0d4:	cmp	r0, #32
   1a0d8:	bls	1c398 <main@@Base+0x6650>
   1a0dc:	mov	sl, r1
   1a0e0:	cmp	r7, sl
   1a0e4:	bne	1c3c0 <main@@Base+0x6678>
   1a0e8:	b	1fd2c <main@@Base+0x9fe4>
   1a0ec:	mov	r0, r9
   1a0f0:	mov	r1, sl
   1a0f4:	mov	r2, r6
   1a0f8:	mov	r3, #4
   1a0fc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1a100:	b	1c3b4 <main@@Base+0x666c>
   1a104:	bne	1a114 <main@@Base+0x43cc>
   1a108:	ldrb	r0, [sl, #20]!
   1a10c:	cmp	r0, #32
   1a110:	bhi	1a124 <main@@Base+0x43dc>
   1a114:	mov	r0, r9
   1a118:	mov	r2, r6
   1a11c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a120:	mov	sl, r0
   1a124:	cmp	sl, r6
   1a128:	beq	1a164 <main@@Base+0x441c>
   1a12c:	ldrb	r0, [sl]
   1a130:	cmp	r0, #58	; 0x3a
   1a134:	bne	1a164 <main@@Base+0x441c>
   1a138:	add	r1, sl, #1
   1a13c:	sub	r0, r6, r1
   1a140:	cmp	r0, #2
   1a144:	blt	1c518 <main@@Base+0x67d0>
   1a148:	ldrb	r0, [r1]
   1a14c:	cmp	r0, #32
   1a150:	bls	1c508 <main@@Base+0x67c0>
   1a154:	mov	sl, r1
   1a158:	cmp	r7, sl
   1a15c:	bne	1c530 <main@@Base+0x67e8>
   1a160:	b	1fd2c <main@@Base+0x9fe4>
   1a164:	mov	r0, r9
   1a168:	mov	r1, sl
   1a16c:	mov	r2, r6
   1a170:	mov	r3, #4
   1a174:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1a178:	b	1c524 <main@@Base+0x67dc>
   1a17c:	bne	1a18c <main@@Base+0x4444>
   1a180:	ldrb	r0, [sl, #25]!
   1a184:	cmp	r0, #32
   1a188:	bhi	1a19c <main@@Base+0x4454>
   1a18c:	mov	r0, r9
   1a190:	mov	r2, r6
   1a194:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a198:	mov	sl, r0
   1a19c:	cmp	sl, r6
   1a1a0:	beq	1a1dc <main@@Base+0x4494>
   1a1a4:	ldrb	r0, [sl]
   1a1a8:	cmp	r0, #58	; 0x3a
   1a1ac:	bne	1a1dc <main@@Base+0x4494>
   1a1b0:	add	r1, sl, #1
   1a1b4:	sub	r0, r6, r1
   1a1b8:	cmp	r0, #2
   1a1bc:	blt	1c5d8 <main@@Base+0x6890>
   1a1c0:	ldrb	r0, [r1]
   1a1c4:	cmp	r0, #32
   1a1c8:	bls	1c5c8 <main@@Base+0x6880>
   1a1cc:	mov	sl, r1
   1a1d0:	cmp	r8, sl
   1a1d4:	bne	1c5f0 <main@@Base+0x68a8>
   1a1d8:	b	1d974 <main@@Base+0x7c2c>
   1a1dc:	mov	r0, r9
   1a1e0:	mov	r1, sl
   1a1e4:	mov	r2, r6
   1a1e8:	mov	r3, #4
   1a1ec:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1a1f0:	b	1c5e4 <main@@Base+0x689c>
   1a1f4:	bne	1a208 <main@@Base+0x44c0>
   1a1f8:	mov	r7, sl
   1a1fc:	ldrb	r0, [r7, #6]!
   1a200:	cmp	r0, #32
   1a204:	bhi	1a218 <main@@Base+0x44d0>
   1a208:	mov	r0, r9
   1a20c:	mov	r2, r6
   1a210:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a214:	mov	r7, r0
   1a218:	cmp	r7, r6
   1a21c:	beq	1a258 <main@@Base+0x4510>
   1a220:	ldrb	r0, [r7]
   1a224:	cmp	r0, #58	; 0x3a
   1a228:	bne	1a258 <main@@Base+0x4510>
   1a22c:	add	r1, r7, #1
   1a230:	sub	r0, r6, r1
   1a234:	cmp	r0, #2
   1a238:	blt	1c714 <main@@Base+0x69cc>
   1a23c:	ldrb	r0, [r1]
   1a240:	cmp	r0, #32
   1a244:	bls	1c704 <main@@Base+0x69bc>
   1a248:	mov	r7, r1
   1a24c:	cmp	sl, r7
   1a250:	bne	1c72c <main@@Base+0x69e4>
   1a254:	b	1a500 <main@@Base+0x47b8>
   1a258:	mov	r0, r9
   1a25c:	mov	r1, r7
   1a260:	mov	r2, r6
   1a264:	mov	r3, #4
   1a268:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1a26c:	b	1c720 <main@@Base+0x69d8>
   1a270:	bne	1a284 <main@@Base+0x453c>
   1a274:	mov	r7, sl
   1a278:	ldrb	r0, [r7, #7]!
   1a27c:	cmp	r0, #32
   1a280:	bhi	1a294 <main@@Base+0x454c>
   1a284:	mov	r0, r9
   1a288:	mov	r2, r6
   1a28c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a290:	mov	r7, r0
   1a294:	cmp	r7, r6
   1a298:	beq	1a2d4 <main@@Base+0x458c>
   1a29c:	ldrb	r0, [r7]
   1a2a0:	cmp	r0, #58	; 0x3a
   1a2a4:	bne	1a2d4 <main@@Base+0x458c>
   1a2a8:	add	r1, r7, #1
   1a2ac:	sub	r0, r6, r1
   1a2b0:	cmp	r0, #2
   1a2b4:	blt	1c8a8 <main@@Base+0x6b60>
   1a2b8:	ldrb	r0, [r1]
   1a2bc:	cmp	r0, #32
   1a2c0:	bls	1c898 <main@@Base+0x6b50>
   1a2c4:	mov	r7, r1
   1a2c8:	cmp	sl, r7
   1a2cc:	bne	1c8c0 <main@@Base+0x6b78>
   1a2d0:	b	1a500 <main@@Base+0x47b8>
   1a2d4:	mov	r0, r9
   1a2d8:	mov	r1, r7
   1a2dc:	mov	r2, r6
   1a2e0:	mov	r3, #4
   1a2e4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1a2e8:	b	1c8b4 <main@@Base+0x6b6c>
   1a2ec:	ldr	r4, [sp, #44]	; 0x2c
   1a2f0:	bne	1a304 <main@@Base+0x45bc>
   1a2f4:	mov	r6, sl
   1a2f8:	ldrb	r0, [r6, #18]!
   1a2fc:	cmp	r0, #32
   1a300:	bhi	1a314 <main@@Base+0x45cc>
   1a304:	mov	r0, r9
   1a308:	mov	r2, r4
   1a30c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a310:	mov	r6, r0
   1a314:	cmp	r6, r4
   1a318:	beq	1a3cc <main@@Base+0x4684>
   1a31c:	ldrb	r0, [r6]
   1a320:	cmp	r0, #58	; 0x3a
   1a324:	bne	1a3cc <main@@Base+0x4684>
   1a328:	ldr	r0, [sp, #44]	; 0x2c
   1a32c:	add	r1, r6, #1
   1a330:	sub	r0, r0, r1
   1a334:	cmp	r0, #2
   1a338:	blt	1c9d4 <main@@Base+0x6c8c>
   1a33c:	ldrb	r0, [r1]
   1a340:	cmp	r0, #32
   1a344:	bls	1c9c4 <main@@Base+0x6c7c>
   1a348:	mov	r6, r1
   1a34c:	cmp	r8, r6
   1a350:	bne	1c9ec <main@@Base+0x6ca4>
   1a354:	ldr	r6, [sp, #44]	; 0x2c
   1a358:	add	r7, sl, #16
   1a35c:	mov	r1, #8
   1a360:	mov	r2, #-268435456	; 0xf0000000
   1a364:	sub	r0, r6, r7
   1a368:	cmp	r0, #8
   1a36c:	movcc	r1, r0
   1a370:	add	r1, r2, r1, lsl #28
   1a374:	asr	r1, r1, #28
   1a378:	cmp	r1, #0
   1a37c:	blt	1fd2c <main@@Base+0x9fe4>
   1a380:	ldrb	r1, [r7]
   1a384:	cmp	r1, #97	; 0x61
   1a388:	bne	1fd2c <main@@Base+0x9fe4>
   1a38c:	cmp	r0, #2
   1a390:	blt	1fd2c <main@@Base+0x9fe4>
   1a394:	ldrb	r0, [sl, #17]
   1a398:	cmp	r0, #34	; 0x22
   1a39c:	bne	1fd2c <main@@Base+0x9fe4>
   1a3a0:	add	r1, sl, #18
   1a3a4:	sub	r0, r6, r1
   1a3a8:	cmp	r0, #2
   1a3ac:	blt	1cc50 <main@@Base+0x6f08>
   1a3b0:	ldrb	r0, [r1]
   1a3b4:	cmp	r0, #32
   1a3b8:	bls	1cc40 <main@@Base+0x6ef8>
   1a3bc:	mov	sl, r1
   1a3c0:	cmp	sl, r6
   1a3c4:	bne	1cc68 <main@@Base+0x6f20>
   1a3c8:	b	1cca8 <main@@Base+0x6f60>
   1a3cc:	ldr	r2, [sp, #44]	; 0x2c
   1a3d0:	mov	r0, r9
   1a3d4:	mov	r1, r6
   1a3d8:	mov	r3, #4
   1a3dc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1a3e0:	b	1c9e0 <main@@Base+0x6c98>
   1a3e4:	bne	1a3f4 <main@@Base+0x46ac>
   1a3e8:	ldrb	r0, [r8, #2]!
   1a3ec:	cmp	r0, #32
   1a3f0:	bhi	1a404 <main@@Base+0x46bc>
   1a3f4:	ldr	r0, [sp, #40]	; 0x28
   1a3f8:	mov	r2, r6
   1a3fc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a400:	mov	r8, r0
   1a404:	cmp	sl, r8
   1a408:	beq	1a470 <main@@Base+0x4728>
   1a40c:	ldr	r9, [sp, #40]	; 0x28
   1a410:	mov	r1, #4
   1a414:	mov	r2, #2
   1a418:	mvn	r3, #-1073741824	; 0xc0000000
   1a41c:	ldr	r0, [r9]
   1a420:	bl	2f718 <flatcc_builder_start_vector@@Base>
   1a424:	cmp	r0, #0
   1a428:	bne	1fe78 <main@@Base+0xa130>
   1a42c:	cmp	r8, r6
   1a430:	beq	1a50c <main@@Base+0x47c4>
   1a434:	ldrb	r0, [r8]
   1a438:	cmp	r0, #91	; 0x5b
   1a43c:	bne	1a50c <main@@Base+0x47c4>
   1a440:	add	r1, r8, #1
   1a444:	sub	r0, r6, r1
   1a448:	cmp	r0, #2
   1a44c:	blt	1a574 <main@@Base+0x482c>
   1a450:	ldrb	r0, [r1]
   1a454:	cmp	r0, #32
   1a458:	bls	1a564 <main@@Base+0x481c>
   1a45c:	mov	r8, r1
   1a460:	cmp	r8, r6
   1a464:	mov	sl, r6
   1a468:	bne	1a590 <main@@Base+0x4848>
   1a46c:	b	1a5d0 <main@@Base+0x4888>
   1a470:	movw	r0, #31088	; 0x7970
   1a474:	movt	r0, #24436	; 0x5f74
   1a478:	eor	r0, r9, r0
   1a47c:	orrs	r0, r0, r7
   1a480:	bne	1a4fc <main@@Base+0x47b4>
   1a484:	add	r7, sl, #8
   1a488:	mov	r1, #8
   1a48c:	mov	r2, #-268435456	; 0xf0000000
   1a490:	ldr	r9, [sp, #40]	; 0x28
   1a494:	sub	r0, r6, r7
   1a498:	cmp	r0, #8
   1a49c:	movcc	r1, r0
   1a4a0:	add	r1, r2, r1, lsl #28
   1a4a4:	asr	r1, r1, #28
   1a4a8:	cmp	r1, #0
   1a4ac:	blt	1fd2c <main@@Base+0x9fe4>
   1a4b0:	ldrb	r1, [r7]
   1a4b4:	cmp	r1, #101	; 0x65
   1a4b8:	bne	1fd2c <main@@Base+0x9fe4>
   1a4bc:	cmp	r0, #2
   1a4c0:	blt	1fd2c <main@@Base+0x9fe4>
   1a4c4:	ldrb	r0, [sl, #9]
   1a4c8:	cmp	r0, #34	; 0x22
   1a4cc:	bne	1fd2c <main@@Base+0x9fe4>
   1a4d0:	add	r1, sl, #10
   1a4d4:	sub	r0, r6, r1
   1a4d8:	cmp	r0, #2
   1a4dc:	blt	1a738 <main@@Base+0x49f0>
   1a4e0:	ldrb	r0, [r1]
   1a4e4:	cmp	r0, #32
   1a4e8:	bls	1a728 <main@@Base+0x49e0>
   1a4ec:	mov	sl, r1
   1a4f0:	cmp	sl, r6
   1a4f4:	bne	1a750 <main@@Base+0x4a08>
   1a4f8:	b	1a788 <main@@Base+0x4a40>
   1a4fc:	ldr	r9, [sp, #40]	; 0x28
   1a500:	mov	r0, r9
   1a504:	mov	r1, sl
   1a508:	b	1fd34 <main@@Base+0x9fec>
   1a50c:	mov	r0, r9
   1a510:	mov	r1, r8
   1a514:	mov	r2, r6
   1a518:	mov	r3, #22
   1a51c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1a520:	mov	r8, r0
   1a524:	ldr	r0, [r9]
   1a528:	bl	30998 <flatcc_builder_end_vector@@Base>
   1a52c:	cmp	r0, #0
   1a530:	str	r0, [sp, #52]	; 0x34
   1a534:	beq	1fe78 <main@@Base+0xa130>
   1a538:	ldr	r0, [r9]
   1a53c:	mov	r1, #31
   1a540:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1a544:	cmp	r0, #0
   1a548:	beq	1fe78 <main@@Base+0xa130>
   1a54c:	ldr	r1, [sp, #52]	; 0x34
   1a550:	str	r1, [r0]
   1a554:	sub	r0, r6, r8
   1a558:	cmp	r0, #2
   1a55c:	bge	1fd4c <main@@Base+0xa004>
   1a560:	b	1fdc0 <main@@Base+0xa078>
   1a564:	bne	1a574 <main@@Base+0x482c>
   1a568:	ldrb	r0, [r8, #2]!
   1a56c:	cmp	r0, #32
   1a570:	bhi	1a584 <main@@Base+0x483c>
   1a574:	mov	r0, r9
   1a578:	mov	r2, r6
   1a57c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a580:	mov	r8, r0
   1a584:	cmp	r8, r6
   1a588:	mov	sl, r6
   1a58c:	beq	1a5d0 <main@@Base+0x4888>
   1a590:	ldrb	r0, [r8]
   1a594:	cmp	r0, #93	; 0x5d
   1a598:	bne	1a5cc <main@@Base+0x4884>
   1a59c:	add	r1, r8, #1
   1a5a0:	sub	r0, r6, r1
   1a5a4:	cmp	r0, #2
   1a5a8:	blt	1d730 <main@@Base+0x79e8>
   1a5ac:	ldrb	r0, [r1]
   1a5b0:	cmp	r0, #32
   1a5b4:	bhi	1a6d8 <main@@Base+0x4990>
   1a5b8:	bne	1d730 <main@@Base+0x79e8>
   1a5bc:	ldrb	r0, [r8, #2]!
   1a5c0:	cmp	r0, #32
   1a5c4:	bhi	1a524 <main@@Base+0x47dc>
   1a5c8:	b	1d730 <main@@Base+0x79e8>
   1a5cc:	mov	sl, r8
   1a5d0:	ldr	r0, [r9]
   1a5d4:	mov	r1, #1
   1a5d8:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   1a5dc:	mov	r3, r0
   1a5e0:	cmp	r0, #0
   1a5e4:	beq	16638 <main@@Base+0x8f0>
   1a5e8:	mov	r0, r9
   1a5ec:	mov	r1, sl
   1a5f0:	mov	r2, r6
   1a5f4:	bl	2246c <main@@Base+0xc724>
   1a5f8:	mov	r1, r0
   1a5fc:	sub	r0, r6, r0
   1a600:	cmp	r0, #2
   1a604:	blt	1a638 <main@@Base+0x48f0>
   1a608:	ldrb	r0, [r1]
   1a60c:	cmp	r0, #32
   1a610:	bls	1a624 <main@@Base+0x48dc>
   1a614:	mov	sl, r1
   1a618:	cmp	sl, r6
   1a61c:	bne	1a650 <main@@Base+0x4908>
   1a620:	b	1a6e0 <main@@Base+0x4998>
   1a624:	bne	1a638 <main@@Base+0x48f0>
   1a628:	mov	sl, r1
   1a62c:	ldrb	r0, [sl, #1]!
   1a630:	cmp	r0, #32
   1a634:	bhi	1a648 <main@@Base+0x4900>
   1a638:	mov	r0, r9
   1a63c:	mov	r2, r6
   1a640:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a644:	mov	sl, r0
   1a648:	cmp	sl, r6
   1a64c:	beq	1a6e0 <main@@Base+0x4998>
   1a650:	ldrb	r0, [sl]
   1a654:	cmp	r0, #44	; 0x2c
   1a658:	bne	1a6e8 <main@@Base+0x49a0>
   1a65c:	add	r1, sl, #1
   1a660:	sub	r0, r6, r1
   1a664:	cmp	r0, #2
   1a668:	blt	1a698 <main@@Base+0x4950>
   1a66c:	ldrb	r0, [r1]
   1a670:	cmp	r0, #32
   1a674:	bls	1a688 <main@@Base+0x4940>
   1a678:	mov	sl, r1
   1a67c:	cmp	sl, r6
   1a680:	bne	1a6b0 <main@@Base+0x4968>
   1a684:	b	1a71c <main@@Base+0x49d4>
   1a688:	bne	1a698 <main@@Base+0x4950>
   1a68c:	ldrb	r0, [sl, #2]!
   1a690:	cmp	r0, #32
   1a694:	bhi	1a6a8 <main@@Base+0x4960>
   1a698:	mov	r0, r9
   1a69c:	mov	r2, r6
   1a6a0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a6a4:	mov	sl, r0
   1a6a8:	cmp	sl, r6
   1a6ac:	beq	1a71c <main@@Base+0x49d4>
   1a6b0:	ldrb	r0, [sl]
   1a6b4:	cmp	r0, #93	; 0x5d
   1a6b8:	bne	1a5d0 <main@@Base+0x4888>
   1a6bc:	add	r1, sl, #1
   1a6c0:	sub	r0, r6, r1
   1a6c4:	cmp	r0, #2
   1a6c8:	blt	1d730 <main@@Base+0x79e8>
   1a6cc:	ldrb	r0, [r1]
   1a6d0:	cmp	r0, #32
   1a6d4:	bls	1cb40 <main@@Base+0x6df8>
   1a6d8:	mov	r8, r1
   1a6dc:	b	1a524 <main@@Base+0x47dc>
   1a6e0:	mov	r8, r6
   1a6e4:	b	1a524 <main@@Base+0x47dc>
   1a6e8:	cmp	r0, #93	; 0x5d
   1a6ec:	bne	1bda8 <main@@Base+0x6060>
   1a6f0:	add	r1, sl, #1
   1a6f4:	sub	r0, r6, r1
   1a6f8:	cmp	r0, #2
   1a6fc:	blt	1d730 <main@@Base+0x79e8>
   1a700:	ldrb	r0, [r1]
   1a704:	cmp	r0, #32
   1a708:	bls	1d714 <main@@Base+0x79cc>
   1a70c:	ldr	r6, [sp, #44]	; 0x2c
   1a710:	ldr	r9, [sp, #40]	; 0x28
   1a714:	mov	r8, r1
   1a718:	b	1a524 <main@@Base+0x47dc>
   1a71c:	mov	r0, r9
   1a720:	mov	r1, r6
   1a724:	b	1bdb0 <main@@Base+0x6068>
   1a728:	bne	1a738 <main@@Base+0x49f0>
   1a72c:	ldrb	r0, [sl, #11]!
   1a730:	cmp	r0, #32
   1a734:	bhi	1a748 <main@@Base+0x4a00>
   1a738:	mov	r0, r9
   1a73c:	mov	r2, r6
   1a740:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a744:	mov	sl, r0
   1a748:	cmp	sl, r6
   1a74c:	beq	1a788 <main@@Base+0x4a40>
   1a750:	ldrb	r0, [sl]
   1a754:	cmp	r0, #58	; 0x3a
   1a758:	bne	1a788 <main@@Base+0x4a40>
   1a75c:	add	r1, sl, #1
   1a760:	sub	r0, r6, r1
   1a764:	cmp	r0, #2
   1a768:	blt	1c4b0 <main@@Base+0x6768>
   1a76c:	ldrb	r0, [r1]
   1a770:	cmp	r0, #32
   1a774:	bls	1c4a0 <main@@Base+0x6758>
   1a778:	mov	sl, r1
   1a77c:	cmp	r7, sl
   1a780:	bne	1c4c8 <main@@Base+0x6780>
   1a784:	b	1fd2c <main@@Base+0x9fe4>
   1a788:	mov	r0, r9
   1a78c:	mov	r1, sl
   1a790:	mov	r2, r6
   1a794:	mov	r3, #4
   1a798:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1a79c:	b	1c4bc <main@@Base+0x6774>
   1a7a0:	bne	1a7b0 <main@@Base+0x4a68>
   1a7a4:	ldrb	r0, [r7, #2]!
   1a7a8:	cmp	r0, #32
   1a7ac:	bhi	1a7c0 <main@@Base+0x4a78>
   1a7b0:	mov	r0, r9
   1a7b4:	mov	r2, r6
   1a7b8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a7bc:	mov	r7, r0
   1a7c0:	cmp	sl, r7
   1a7c4:	beq	1a500 <main@@Base+0x47b8>
   1a7c8:	mov	r0, #0
   1a7cc:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a7d0:	sub	r0, r6, r7
   1a7d4:	cmp	r0, #4
   1a7d8:	blt	1a814 <main@@Base+0x4acc>
   1a7dc:	ldr	r1, [r7]
   1a7e0:	movw	r2, #29300	; 0x7274
   1a7e4:	movt	r2, #25973	; 0x6575
   1a7e8:	cmp	r1, r2
   1a7ec:	beq	1a87c <main@@Base+0x4b34>
   1a7f0:	cmp	r0, #5
   1a7f4:	blt	1a814 <main@@Base+0x4acc>
   1a7f8:	movw	r1, #36441	; 0x8e59
   1a7fc:	mov	r0, r7
   1a800:	mov	r2, #5
   1a804:	movt	r1, #4
   1a808:	bl	14e6c <memcmp@plt>
   1a80c:	cmp	r0, #0
   1a810:	beq	1a95c <main@@Base+0x4c14>
   1a814:	mov	r4, #0
   1a818:	cmp	r7, r6
   1a81c:	str	r4, [fp, #-52]	; 0xffffffcc
   1a820:	str	r4, [fp, #-56]	; 0xffffffc8
   1a824:	str	r4, [sp, #56]	; 0x38
   1a828:	beq	1a874 <main@@Base+0x4b2c>
   1a82c:	sub	r0, fp, #56	; 0x38
   1a830:	mov	r1, r7
   1a834:	mov	r2, r6
   1a838:	add	r3, sp, #56	; 0x38
   1a83c:	str	r0, [sp]
   1a840:	mov	r0, r9
   1a844:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1a848:	cmp	r0, r7
   1a84c:	beq	1a894 <main@@Base+0x4b4c>
   1a850:	mov	r8, r0
   1a854:	ldr	r0, [sp, #56]	; 0x38
   1a858:	cmp	r0, #0
   1a85c:	beq	1a89c <main@@Base+0x4b54>
   1a860:	mov	r0, r9
   1a864:	mov	r1, r8
   1a868:	mov	r2, r6
   1a86c:	mov	r3, #8
   1a870:	b	1a8c0 <main@@Base+0x4b78>
   1a874:	mov	r8, r6
   1a878:	b	1a8c8 <main@@Base+0x4b80>
   1a87c:	mov	r4, #1
   1a880:	add	r8, r7, #4
   1a884:	strb	r4, [fp, #-60]	; 0xffffffc4
   1a888:	cmp	r7, r8
   1a88c:	bne	1a91c <main@@Base+0x4bd4>
   1a890:	b	1a8e0 <main@@Base+0x4b98>
   1a894:	mov	r8, r7
   1a898:	b	1a8c8 <main@@Base+0x4b80>
   1a89c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a8a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a8a4:	subs	r2, r0, #256	; 0x100
   1a8a8:	sbcs	r1, r1, #0
   1a8ac:	bcc	1a974 <main@@Base+0x4c2c>
   1a8b0:	mov	r0, r9
   1a8b4:	mov	r1, r8
   1a8b8:	mov	r2, r6
   1a8bc:	mov	r3, #7
   1a8c0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1a8c4:	mov	r8, r0
   1a8c8:	uxtb	r4, r4
   1a8cc:	cmp	r4, #0
   1a8d0:	movwne	r4, #1
   1a8d4:	strb	r4, [fp, #-60]	; 0xffffffc4
   1a8d8:	cmp	r7, r8
   1a8dc:	bne	1a91c <main@@Base+0x4bd4>
   1a8e0:	sub	r0, fp, #60	; 0x3c
   1a8e4:	mov	r1, r7
   1a8e8:	mov	r2, r6
   1a8ec:	str	r0, [sp]
   1a8f0:	movw	r0, #53396	; 0xd094
   1a8f4:	movt	r0, #5
   1a8f8:	add	r3, r0, #60	; 0x3c
   1a8fc:	mov	r0, r9
   1a900:	bl	240b8 <main@@Base+0xe370>
   1a904:	mov	r8, r0
   1a908:	cmp	r0, r7
   1a90c:	beq	1fe78 <main@@Base+0xa130>
   1a910:	cmp	r8, r6
   1a914:	beq	1fe78 <main@@Base+0xa130>
   1a918:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   1a91c:	cmp	r4, #1
   1a920:	ldrbeq	r0, [r9, #8]
   1a924:	tsteq	r0, #2
   1a928:	beq	1fd40 <main@@Base+0x9ff8>
   1a92c:	ldr	r0, [r9]
   1a930:	mov	r1, #15
   1a934:	mov	r2, #1
   1a938:	mov	r3, #1
   1a93c:	bl	31040 <flatcc_builder_table_add@@Base>
   1a940:	cmp	r0, #0
   1a944:	beq	1fe78 <main@@Base+0xa130>
   1a948:	strb	r4, [r0]
   1a94c:	sub	r0, r6, r8
   1a950:	cmp	r0, #2
   1a954:	bge	1fd4c <main@@Base+0xa004>
   1a958:	b	1fdc0 <main@@Base+0xa078>
   1a95c:	mov	r4, #0
   1a960:	add	r8, r7, #5
   1a964:	strb	r4, [fp, #-60]	; 0xffffffc4
   1a968:	cmp	r7, r8
   1a96c:	bne	1a91c <main@@Base+0x4bd4>
   1a970:	b	1a8e0 <main@@Base+0x4b98>
   1a974:	mov	r4, r0
   1a978:	b	1a8c8 <main@@Base+0x4b80>
   1a97c:	bne	1a98c <main@@Base+0x4c44>
   1a980:	ldrb	r0, [sl, #23]!
   1a984:	cmp	r0, #32
   1a988:	bhi	1a99c <main@@Base+0x4c54>
   1a98c:	mov	r0, r9
   1a990:	mov	r2, r6
   1a994:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1a998:	mov	sl, r0
   1a99c:	cmp	sl, r6
   1a9a0:	beq	1a9dc <main@@Base+0x4c94>
   1a9a4:	ldrb	r0, [sl]
   1a9a8:	cmp	r0, #58	; 0x3a
   1a9ac:	bne	1a9dc <main@@Base+0x4c94>
   1a9b0:	add	r1, sl, #1
   1a9b4:	sub	r0, r6, r1
   1a9b8:	cmp	r0, #2
   1a9bc:	blt	1cb58 <main@@Base+0x6e10>
   1a9c0:	ldrb	r0, [r1]
   1a9c4:	cmp	r0, #32
   1a9c8:	bls	1cb48 <main@@Base+0x6e00>
   1a9cc:	mov	sl, r1
   1a9d0:	cmp	r8, sl
   1a9d4:	bne	1cb70 <main@@Base+0x6e28>
   1a9d8:	b	1d974 <main@@Base+0x7c2c>
   1a9dc:	mov	r0, r9
   1a9e0:	mov	r1, sl
   1a9e4:	mov	r2, r6
   1a9e8:	mov	r3, #4
   1a9ec:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1a9f0:	b	1cb64 <main@@Base+0x6e1c>
   1a9f4:	mov	r0, r9
   1a9f8:	mov	r1, r8
   1a9fc:	mov	r2, r6
   1aa00:	mov	r3, #9
   1aa04:	b	19d24 <main@@Base+0x3fdc>
   1aa08:	bne	1aa18 <main@@Base+0x4cd0>
   1aa0c:	ldrb	r0, [sl, #19]!
   1aa10:	cmp	r0, #32
   1aa14:	bhi	1aa28 <main@@Base+0x4ce0>
   1aa18:	mov	r0, r9
   1aa1c:	mov	r2, r6
   1aa20:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1aa24:	mov	sl, r0
   1aa28:	cmp	sl, r6
   1aa2c:	beq	1aa68 <main@@Base+0x4d20>
   1aa30:	ldrb	r0, [sl]
   1aa34:	cmp	r0, #58	; 0x3a
   1aa38:	bne	1aa68 <main@@Base+0x4d20>
   1aa3c:	add	r1, sl, #1
   1aa40:	sub	r0, r6, r1
   1aa44:	cmp	r0, #2
   1aa48:	blt	1ccd0 <main@@Base+0x6f88>
   1aa4c:	ldrb	r0, [r1]
   1aa50:	cmp	r0, #32
   1aa54:	bls	1ccc0 <main@@Base+0x6f78>
   1aa58:	mov	sl, r1
   1aa5c:	cmp	r7, sl
   1aa60:	bne	1cce8 <main@@Base+0x6fa0>
   1aa64:	b	1fd2c <main@@Base+0x9fe4>
   1aa68:	mov	r0, r9
   1aa6c:	mov	r1, sl
   1aa70:	mov	r2, r6
   1aa74:	mov	r3, #4
   1aa78:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1aa7c:	b	1ccdc <main@@Base+0x6f94>
   1aa80:	bne	1aa90 <main@@Base+0x4d48>
   1aa84:	ldrb	r0, [sl, #2]!
   1aa88:	cmp	r0, #32
   1aa8c:	bhi	1aaa0 <main@@Base+0x4d58>
   1aa90:	mov	r0, r5
   1aa94:	mov	r2, r4
   1aa98:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1aa9c:	mov	sl, r0
   1aaa0:	cmp	r8, sl
   1aaa4:	beq	197b0 <main@@Base+0x3a68>
   1aaa8:	ldr	r9, [sp, #40]	; 0x28
   1aaac:	mov	r1, #1
   1aab0:	mov	r2, #1
   1aab4:	mvn	r3, #0
   1aab8:	ldr	r0, [r9]
   1aabc:	bl	2f718 <flatcc_builder_start_vector@@Base>
   1aac0:	cmp	r0, #0
   1aac4:	bne	1ff00 <main@@Base+0xa1b8>
   1aac8:	ldr	r6, [sp, #44]	; 0x2c
   1aacc:	cmp	sl, r6
   1aad0:	beq	1ab10 <main@@Base+0x4dc8>
   1aad4:	ldrb	r0, [sl]
   1aad8:	cmp	r0, #91	; 0x5b
   1aadc:	bne	1ab10 <main@@Base+0x4dc8>
   1aae0:	add	r1, sl, #1
   1aae4:	sub	r0, r6, r1
   1aae8:	cmp	r0, #2
   1aaec:	blt	1bfd0 <main@@Base+0x6288>
   1aaf0:	ldrb	r0, [r1]
   1aaf4:	cmp	r0, #32
   1aaf8:	bls	1bfc0 <main@@Base+0x6278>
   1aafc:	mov	sl, r1
   1ab00:	cmp	sl, r6
   1ab04:	mov	r5, r6
   1ab08:	bne	1bfec <main@@Base+0x62a4>
   1ab0c:	b	1bffc <main@@Base+0x62b4>
   1ab10:	mov	r0, r9
   1ab14:	mov	r1, sl
   1ab18:	mov	r2, r6
   1ab1c:	mov	r3, #22
   1ab20:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1ab24:	mov	sl, r0
   1ab28:	ldr	r0, [r9]
   1ab2c:	bl	30998 <flatcc_builder_end_vector@@Base>
   1ab30:	cmp	r0, #0
   1ab34:	str	r0, [sp, #52]	; 0x34
   1ab38:	beq	16638 <main@@Base+0x8f0>
   1ab3c:	ldr	r0, [r9]
   1ab40:	mov	r1, #24
   1ab44:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1ab48:	cmp	r0, #0
   1ab4c:	bne	1798c <main@@Base+0x1c44>
   1ab50:	b	16638 <main@@Base+0x8f0>
   1ab54:	bne	1ab64 <main@@Base+0x4e1c>
   1ab58:	ldrb	r0, [sl, #11]!
   1ab5c:	cmp	r0, #32
   1ab60:	bhi	1ab74 <main@@Base+0x4e2c>
   1ab64:	mov	r0, r9
   1ab68:	mov	r2, r6
   1ab6c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1ab70:	mov	sl, r0
   1ab74:	cmp	sl, r6
   1ab78:	beq	1abb4 <main@@Base+0x4e6c>
   1ab7c:	ldrb	r0, [sl]
   1ab80:	cmp	r0, #58	; 0x3a
   1ab84:	bne	1abb4 <main@@Base+0x4e6c>
   1ab88:	add	r1, sl, #1
   1ab8c:	sub	r0, r6, r1
   1ab90:	cmp	r0, #2
   1ab94:	blt	1cff8 <main@@Base+0x72b0>
   1ab98:	ldrb	r0, [r1]
   1ab9c:	cmp	r0, #32
   1aba0:	bls	1cfe8 <main@@Base+0x72a0>
   1aba4:	mov	sl, r1
   1aba8:	cmp	r7, sl
   1abac:	bne	1d010 <main@@Base+0x72c8>
   1abb0:	b	1fd2c <main@@Base+0x9fe4>
   1abb4:	mov	r0, r9
   1abb8:	mov	r1, sl
   1abbc:	mov	r2, r6
   1abc0:	mov	r3, #4
   1abc4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1abc8:	b	1d004 <main@@Base+0x72bc>
   1abcc:	bne	1abdc <main@@Base+0x4e94>
   1abd0:	ldrb	r0, [sl, #11]!
   1abd4:	cmp	r0, #32
   1abd8:	bhi	1abec <main@@Base+0x4ea4>
   1abdc:	mov	r0, r9
   1abe0:	mov	r2, r6
   1abe4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1abe8:	mov	sl, r0
   1abec:	cmp	sl, r6
   1abf0:	beq	1ac2c <main@@Base+0x4ee4>
   1abf4:	ldrb	r0, [sl]
   1abf8:	cmp	r0, #58	; 0x3a
   1abfc:	bne	1ac2c <main@@Base+0x4ee4>
   1ac00:	add	r1, sl, #1
   1ac04:	sub	r0, r6, r1
   1ac08:	cmp	r0, #2
   1ac0c:	blt	1d0ec <main@@Base+0x73a4>
   1ac10:	ldrb	r0, [r1]
   1ac14:	cmp	r0, #32
   1ac18:	bls	1d0dc <main@@Base+0x7394>
   1ac1c:	mov	sl, r1
   1ac20:	cmp	r7, sl
   1ac24:	bne	1d104 <main@@Base+0x73bc>
   1ac28:	b	1fd2c <main@@Base+0x9fe4>
   1ac2c:	mov	r0, r9
   1ac30:	mov	r1, sl
   1ac34:	mov	r2, r6
   1ac38:	mov	r3, #4
   1ac3c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1ac40:	b	1d0f8 <main@@Base+0x73b0>
   1ac44:	bne	1ac54 <main@@Base+0x4f0c>
   1ac48:	ldrb	r0, [r7, #2]!
   1ac4c:	cmp	r0, #32
   1ac50:	bhi	1ac64 <main@@Base+0x4f1c>
   1ac54:	mov	r0, r9
   1ac58:	mov	r2, r6
   1ac5c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1ac60:	mov	r7, r0
   1ac64:	cmp	sl, r7
   1ac68:	beq	1a500 <main@@Base+0x47b8>
   1ac6c:	mov	r4, #0
   1ac70:	cmp	r7, r6
   1ac74:	str	r4, [fp, #-52]	; 0xffffffcc
   1ac78:	str	r4, [fp, #-56]	; 0xffffffc8
   1ac7c:	strh	r4, [fp, #-60]	; 0xffffffc4
   1ac80:	str	r4, [sp, #56]	; 0x38
   1ac84:	beq	1ace8 <main@@Base+0x4fa0>
   1ac88:	sub	r0, fp, #56	; 0x38
   1ac8c:	mov	r1, r7
   1ac90:	mov	r2, r6
   1ac94:	add	r3, sp, #56	; 0x38
   1ac98:	str	r0, [sp]
   1ac9c:	mov	r0, r9
   1aca0:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1aca4:	cmp	r0, r7
   1aca8:	beq	1acf8 <main@@Base+0x4fb0>
   1acac:	ldr	r2, [sp, #56]	; 0x38
   1acb0:	mov	r8, r0
   1acb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1acb8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1acbc:	cmp	r2, #0
   1acc0:	beq	1ad08 <main@@Base+0x4fc0>
   1acc4:	movw	r2, #32769	; 0x8001
   1acc8:	subs	r2, r0, r2
   1accc:	sbcs	r1, r1, #0
   1acd0:	bcc	1ad38 <main@@Base+0x4ff0>
   1acd4:	mov	r0, r9
   1acd8:	mov	r1, r8
   1acdc:	mov	r2, r6
   1ace0:	mov	r3, #8
   1ace4:	b	1ad24 <main@@Base+0x4fdc>
   1ace8:	mov	r8, r6
   1acec:	cmp	r7, r8
   1acf0:	bne	1ad98 <main@@Base+0x5050>
   1acf4:	b	1ad5c <main@@Base+0x5014>
   1acf8:	mov	r8, r7
   1acfc:	cmp	r7, r8
   1ad00:	bne	1ad98 <main@@Base+0x5050>
   1ad04:	b	1ad5c <main@@Base+0x5014>
   1ad08:	subs	r2, r0, #32768	; 0x8000
   1ad0c:	sbcs	r1, r1, #0
   1ad10:	bcc	1ad4c <main@@Base+0x5004>
   1ad14:	mov	r0, r9
   1ad18:	mov	r1, r8
   1ad1c:	mov	r2, r6
   1ad20:	mov	r3, #7
   1ad24:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1ad28:	mov	r8, r0
   1ad2c:	cmp	r7, r8
   1ad30:	bne	1ad98 <main@@Base+0x5050>
   1ad34:	b	1ad5c <main@@Base+0x5014>
   1ad38:	rsb	r4, r0, #0
   1ad3c:	strh	r4, [fp, #-60]	; 0xffffffc4
   1ad40:	cmp	r7, r8
   1ad44:	bne	1ad98 <main@@Base+0x5050>
   1ad48:	b	1ad5c <main@@Base+0x5014>
   1ad4c:	mov	r4, r0
   1ad50:	strh	r4, [fp, #-60]	; 0xffffffc4
   1ad54:	cmp	r7, r8
   1ad58:	bne	1ad98 <main@@Base+0x5050>
   1ad5c:	sub	r0, fp, #60	; 0x3c
   1ad60:	mov	r1, r7
   1ad64:	mov	r2, r6
   1ad68:	str	r0, [sp]
   1ad6c:	movw	r0, #53396	; 0xd094
   1ad70:	movt	r0, #5
   1ad74:	add	r3, r0, #12
   1ad78:	mov	r0, r9
   1ad7c:	bl	2223c <main@@Base+0xc4f4>
   1ad80:	mov	r8, r0
   1ad84:	cmp	r0, r7
   1ad88:	beq	1fe78 <main@@Base+0xa130>
   1ad8c:	cmp	r8, r6
   1ad90:	beq	1fe78 <main@@Base+0xa130>
   1ad94:	ldrh	r4, [fp, #-60]	; 0xffffffc4
   1ad98:	uxth	r0, r4
   1ad9c:	cmp	r0, #100	; 0x64
   1ada0:	ldrbeq	r0, [r9, #8]
   1ada4:	tsteq	r0, #2
   1ada8:	beq	1fd40 <main@@Base+0x9ff8>
   1adac:	ldr	r0, [r9]
   1adb0:	mov	r1, #2
   1adb4:	mov	r2, #2
   1adb8:	mov	r3, #2
   1adbc:	bl	31040 <flatcc_builder_table_add@@Base>
   1adc0:	cmp	r0, #0
   1adc4:	bne	1c884 <main@@Base+0x6b3c>
   1adc8:	b	1fe78 <main@@Base+0xa130>
   1adcc:	bne	1addc <main@@Base+0x5094>
   1add0:	ldrb	r0, [r8, #2]!
   1add4:	cmp	r0, #32
   1add8:	bhi	1adec <main@@Base+0x50a4>
   1addc:	mov	r0, r9
   1ade0:	mov	r2, r6
   1ade4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1ade8:	mov	r8, r0
   1adec:	cmp	sl, r8
   1adf0:	beq	1a500 <main@@Base+0x47b8>
   1adf4:	ldr	r0, [r9]
   1adf8:	mov	r1, #0
   1adfc:	mov	r2, #32
   1ae00:	mov	r3, #16
   1ae04:	bl	31040 <flatcc_builder_table_add@@Base>
   1ae08:	cmp	r0, #0
   1ae0c:	beq	1fedc <main@@Base+0xa194>
   1ae10:	cmp	r8, r6
   1ae14:	beq	1ae58 <main@@Base+0x5110>
   1ae18:	mov	r9, r0
   1ae1c:	ldrb	r0, [r8]
   1ae20:	cmp	r0, #123	; 0x7b
   1ae24:	bne	1ae58 <main@@Base+0x5110>
   1ae28:	add	r1, r8, #1
   1ae2c:	sub	r0, r6, r1
   1ae30:	cmp	r0, #2
   1ae34:	blt	1ae84 <main@@Base+0x513c>
   1ae38:	ldrb	r0, [r1]
   1ae3c:	cmp	r0, #32
   1ae40:	bls	1ae74 <main@@Base+0x512c>
   1ae44:	mov	r8, r1
   1ae48:	cmp	r8, r6
   1ae4c:	mov	r2, r6
   1ae50:	bne	1aea0 <main@@Base+0x5158>
   1ae54:	b	1aee4 <main@@Base+0x519c>
   1ae58:	ldr	r9, [sp, #40]	; 0x28
   1ae5c:	mov	r1, r8
   1ae60:	mov	r2, r6
   1ae64:	mov	r3, #21
   1ae68:	mov	r0, r9
   1ae6c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1ae70:	b	1fd3c <main@@Base+0x9ff4>
   1ae74:	bne	1ae84 <main@@Base+0x513c>
   1ae78:	ldrb	r0, [r8, #2]!
   1ae7c:	cmp	r0, #32
   1ae80:	bhi	1ae94 <main@@Base+0x514c>
   1ae84:	ldr	r0, [sp, #40]	; 0x28
   1ae88:	mov	r2, r6
   1ae8c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1ae90:	mov	r8, r0
   1ae94:	cmp	r8, r6
   1ae98:	mov	r2, r6
   1ae9c:	beq	1aee4 <main@@Base+0x519c>
   1aea0:	ldrb	r0, [r8]
   1aea4:	cmp	r0, #125	; 0x7d
   1aea8:	bne	1aee0 <main@@Base+0x5198>
   1aeac:	ldr	r9, [sp, #40]	; 0x28
   1aeb0:	add	r1, r8, #1
   1aeb4:	sub	r0, r6, r1
   1aeb8:	cmp	r0, #2
   1aebc:	blt	1e950 <main@@Base+0x8c08>
   1aec0:	ldrb	r0, [r1]
   1aec4:	cmp	r0, #32
   1aec8:	bhi	1ba58 <main@@Base+0x5d10>
   1aecc:	bne	1e950 <main@@Base+0x8c08>
   1aed0:	ldrb	r0, [r8, #2]!
   1aed4:	cmp	r0, #32
   1aed8:	bls	1e950 <main@@Base+0x8c08>
   1aedc:	b	1fd40 <main@@Base+0x9ff8>
   1aee0:	mov	r2, r8
   1aee4:	add	r0, r9, #26
   1aee8:	str	r0, [sp, #20]
   1aeec:	cmp	r2, r6
   1aef0:	mov	r8, r6
   1aef4:	beq	1af24 <main@@Base+0x51dc>
   1aef8:	ldrb	r0, [r2]
   1aefc:	cmp	r0, #34	; 0x22
   1af00:	bne	1af0c <main@@Base+0x51c4>
   1af04:	add	r8, r2, #1
   1af08:	b	1af24 <main@@Base+0x51dc>
   1af0c:	ldr	r0, [sp, #40]	; 0x28
   1af10:	mov	r1, r2
   1af14:	mov	r2, r6
   1af18:	mov	r3, #5
   1af1c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1af20:	mov	r8, r0
   1af24:	sub	ip, r6, r8
   1af28:	mov	r0, #8
   1af2c:	cmp	ip, #8
   1af30:	movcc	r0, ip
   1af34:	and	r0, r0, #15
   1af38:	sub	r7, r0, #1
   1af3c:	cmp	r7, #7
   1af40:	bhi	1b964 <main@@Base+0x5c1c>
   1af44:	add	r4, pc, #32
   1af48:	mov	r1, #0
   1af4c:	mov	lr, #0
   1af50:	mov	sl, #0
   1af54:	mov	r6, #0
   1af58:	mov	r3, #0
   1af5c:	mov	r5, #0
   1af60:	mov	r0, #0
   1af64:	mov	r2, #0
   1af68:	ldr	pc, [r4, r7, lsl #2]
   1af6c:	ldrdeq	sl, [r1], -r0
   1af70:	andeq	sl, r1, r8, asr #31
   1af74:	andeq	sl, r1, r0, asr #31
   1af78:			; <UNDEFINED> instruction: 0x0001afb8
   1af7c:	andeq	sl, r1, ip, lsr #31
   1af80:	andeq	sl, r1, r0, lsr #31
   1af84:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1af88:	andeq	sl, r1, ip, lsl #31
   1af8c:	ldrb	lr, [r8, #7]
   1af90:	ldrb	r0, [r8, #6]
   1af94:	mov	sl, r1
   1af98:	orr	r0, lr, r0, lsl #8
   1af9c:	mov	r1, r0
   1afa0:	ldrb	r0, [r8, #5]
   1afa4:	mov	r6, sl
   1afa8:	orr	r1, r1, r0, lsl #16
   1afac:	ldrb	r0, [r8, #4]
   1afb0:	mov	r3, r6
   1afb4:	orr	r1, r1, r0, lsl #24
   1afb8:	ldrb	r0, [r8, #3]
   1afbc:	orr	r5, r0, r3
   1afc0:	ldrb	r0, [r8, #2]
   1afc4:	orr	r0, r5, r0, lsl #8
   1afc8:	ldrb	r2, [r8, #1]
   1afcc:	orr	r2, r0, r2, lsl #16
   1afd0:	ldrb	r0, [r8]
   1afd4:	movw	r3, #29556	; 0x7374
   1afd8:	movt	r3, #29797	; 0x7465
   1afdc:	orr	r2, r2, r0, lsl #24
   1afe0:	mvn	r0, #-855638016	; 0xcd000000
   1afe4:	subs	r0, r0, r1
   1afe8:	sbcs	r0, r3, r2
   1afec:	bcc	1b05c <main@@Base+0x5314>
   1aff0:	ldr	r6, [sp, #44]	; 0x2c
   1aff4:	and	r1, r1, #-16777216	; 0xff000000
   1aff8:	eor	r0, r2, r3
   1affc:	eor	r2, r1, #822083584	; 0x31000000
   1b000:	orrs	r2, r2, r0
   1b004:	beq	1b128 <main@@Base+0x53e0>
   1b008:	eor	r1, r1, #838860800	; 0x32000000
   1b00c:	orrs	r0, r1, r0
   1b010:	bne	1b964 <main@@Base+0x5c1c>
   1b014:	cmp	ip, #6
   1b018:	mov	r7, r8
   1b01c:	blt	1b440 <main@@Base+0x56f8>
   1b020:	ldrb	r0, [r8, #5]
   1b024:	mov	r7, r8
   1b028:	cmp	r0, #34	; 0x22
   1b02c:	bne	1b440 <main@@Base+0x56f8>
   1b030:	add	r1, r8, #6
   1b034:	sub	r0, r6, r1
   1b038:	cmp	r0, #2
   1b03c:	blt	1b22c <main@@Base+0x54e4>
   1b040:	ldrb	r0, [r1]
   1b044:	cmp	r0, #32
   1b048:	bls	1b218 <main@@Base+0x54d0>
   1b04c:	mov	r7, r1
   1b050:	cmp	r7, r6
   1b054:	bne	1b244 <main@@Base+0x54fc>
   1b058:	b	1b280 <main@@Base+0x5538>
   1b05c:	ldr	r6, [sp, #44]	; 0x2c
   1b060:	cmn	r2, #-2013265919	; 0x88000001
   1b064:	bhi	1b0c4 <main@@Base+0x537c>
   1b068:	and	r1, r1, #-16777216	; 0xff000000
   1b06c:	eor	r0, r2, r3
   1b070:	eor	r1, r1, #855638016	; 0x33000000
   1b074:	orrs	r0, r1, r0
   1b078:	bne	1b964 <main@@Base+0x5c1c>
   1b07c:	cmp	ip, #6
   1b080:	mov	r1, r8
   1b084:	blt	1b758 <main@@Base+0x5a10>
   1b088:	ldrb	r0, [r8, #5]
   1b08c:	mov	r1, r8
   1b090:	cmp	r0, #34	; 0x22
   1b094:	bne	1b758 <main@@Base+0x5a10>
   1b098:	add	r2, r8, #6
   1b09c:	sub	r0, r6, r2
   1b0a0:	cmp	r0, #2
   1b0a4:	blt	1b32c <main@@Base+0x55e4>
   1b0a8:	ldrb	r0, [r2]
   1b0ac:	cmp	r0, #32
   1b0b0:	bls	1b318 <main@@Base+0x55d0>
   1b0b4:	mov	r1, r2
   1b0b8:	cmp	r1, r6
   1b0bc:	bne	1b348 <main@@Base+0x5600>
   1b0c0:	b	1b384 <main@@Base+0x563c>
   1b0c4:	lsr	r1, r2, #24
   1b0c8:	and	r0, r2, #-16777216	; 0xff000000
   1b0cc:	cmp	r1, #120	; 0x78
   1b0d0:	bhi	1b170 <main@@Base+0x5428>
   1b0d4:	teq	r0, #2013265920	; 0x78000000
   1b0d8:	bne	1b964 <main@@Base+0x5c1c>
   1b0dc:	cmp	ip, #2
   1b0e0:	mov	r7, r8
   1b0e4:	blt	1b7a8 <main@@Base+0x5a60>
   1b0e8:	ldrb	r0, [r8, #1]
   1b0ec:	mov	r7, r8
   1b0f0:	cmp	r0, #34	; 0x22
   1b0f4:	bne	1b7a8 <main@@Base+0x5a60>
   1b0f8:	add	r1, r8, #2
   1b0fc:	sub	r0, r6, r1
   1b100:	cmp	r0, #2
   1b104:	blt	1b3b0 <main@@Base+0x5668>
   1b108:	ldrb	r0, [r1]
   1b10c:	cmp	r0, #32
   1b110:	bls	1b398 <main@@Base+0x5650>
   1b114:	ldr	r6, [sp, #44]	; 0x2c
   1b118:	mov	r7, r1
   1b11c:	cmp	r7, r6
   1b120:	bne	1b3c8 <main@@Base+0x5680>
   1b124:	b	1b404 <main@@Base+0x56bc>
   1b128:	cmp	ip, #6
   1b12c:	mov	r7, r8
   1b130:	blt	1b59c <main@@Base+0x5854>
   1b134:	ldrb	r0, [r8, #5]
   1b138:	mov	r7, r8
   1b13c:	cmp	r0, #34	; 0x22
   1b140:	bne	1b59c <main@@Base+0x5854>
   1b144:	add	r1, r8, #6
   1b148:	sub	r0, r6, r1
   1b14c:	cmp	r0, #2
   1b150:	blt	1b2ac <main@@Base+0x5564>
   1b154:	ldrb	r0, [r1]
   1b158:	cmp	r0, #32
   1b15c:	bls	1b298 <main@@Base+0x5550>
   1b160:	mov	r7, r1
   1b164:	cmp	r7, r6
   1b168:	bne	1b2c4 <main@@Base+0x557c>
   1b16c:	b	1b300 <main@@Base+0x55b8>
   1b170:	teq	r0, #2030043136	; 0x79000000
   1b174:	beq	1b1cc <main@@Base+0x5484>
   1b178:	teq	r0, #2046820352	; 0x7a000000
   1b17c:	bne	1b964 <main@@Base+0x5c1c>
   1b180:	cmp	ip, #2
   1b184:	mov	r7, r8
   1b188:	blt	1b848 <main@@Base+0x5b00>
   1b18c:	ldrb	r0, [r8, #1]
   1b190:	mov	r7, r8
   1b194:	cmp	r0, #34	; 0x22
   1b198:	bne	1b848 <main@@Base+0x5b00>
   1b19c:	add	r1, r8, #2
   1b1a0:	sub	r0, r6, r1
   1b1a4:	cmp	r0, #2
   1b1a8:	blt	1b630 <main@@Base+0x58e8>
   1b1ac:	ldrb	r0, [r1]
   1b1b0:	cmp	r0, #32
   1b1b4:	bls	1b618 <main@@Base+0x58d0>
   1b1b8:	ldr	r6, [sp, #44]	; 0x2c
   1b1bc:	mov	r7, r1
   1b1c0:	cmp	r7, r6
   1b1c4:	bne	1b648 <main@@Base+0x5900>
   1b1c8:	b	1b688 <main@@Base+0x5940>
   1b1cc:	cmp	ip, #2
   1b1d0:	mov	r7, r8
   1b1d4:	blt	1b8e8 <main@@Base+0x5ba0>
   1b1d8:	ldrb	r0, [r8, #1]
   1b1dc:	mov	r7, r8
   1b1e0:	cmp	r0, #34	; 0x22
   1b1e4:	bne	1b8e8 <main@@Base+0x5ba0>
   1b1e8:	add	r1, r8, #2
   1b1ec:	sub	r0, r6, r1
   1b1f0:	cmp	r0, #2
   1b1f4:	blt	1b6bc <main@@Base+0x5974>
   1b1f8:	ldrb	r0, [r1]
   1b1fc:	cmp	r0, #32
   1b200:	bls	1b6a4 <main@@Base+0x595c>
   1b204:	ldr	r6, [sp, #44]	; 0x2c
   1b208:	mov	r7, r1
   1b20c:	cmp	r7, r6
   1b210:	bne	1b6d4 <main@@Base+0x598c>
   1b214:	b	1b714 <main@@Base+0x59cc>
   1b218:	bne	1b22c <main@@Base+0x54e4>
   1b21c:	mov	r7, r8
   1b220:	ldrb	r0, [r7, #7]!
   1b224:	cmp	r0, #32
   1b228:	bhi	1b23c <main@@Base+0x54f4>
   1b22c:	ldr	r0, [sp, #40]	; 0x28
   1b230:	mov	r2, r6
   1b234:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b238:	mov	r7, r0
   1b23c:	cmp	r7, r6
   1b240:	beq	1b280 <main@@Base+0x5538>
   1b244:	ldrb	r0, [r7]
   1b248:	cmp	r0, #58	; 0x3a
   1b24c:	bne	1b280 <main@@Base+0x5538>
   1b250:	add	r1, r7, #1
   1b254:	sub	r0, r6, r1
   1b258:	cmp	r0, #2
   1b25c:	blt	1b430 <main@@Base+0x56e8>
   1b260:	ldrb	r0, [r1]
   1b264:	cmp	r0, #32
   1b268:	bls	1b41c <main@@Base+0x56d4>
   1b26c:	ldr	r6, [sp, #44]	; 0x2c
   1b270:	mov	r7, r1
   1b274:	cmp	r8, r7
   1b278:	bne	1b448 <main@@Base+0x5700>
   1b27c:	b	1b964 <main@@Base+0x5c1c>
   1b280:	ldr	r0, [sp, #40]	; 0x28
   1b284:	mov	r1, r7
   1b288:	mov	r2, r6
   1b28c:	mov	r3, #4
   1b290:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1b294:	b	1b43c <main@@Base+0x56f4>
   1b298:	bne	1b2ac <main@@Base+0x5564>
   1b29c:	mov	r7, r8
   1b2a0:	ldrb	r0, [r7, #7]!
   1b2a4:	cmp	r0, #32
   1b2a8:	bhi	1b2bc <main@@Base+0x5574>
   1b2ac:	ldr	r0, [sp, #40]	; 0x28
   1b2b0:	mov	r2, r6
   1b2b4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b2b8:	mov	r7, r0
   1b2bc:	cmp	r7, r6
   1b2c0:	beq	1b300 <main@@Base+0x55b8>
   1b2c4:	ldrb	r0, [r7]
   1b2c8:	cmp	r0, #58	; 0x3a
   1b2cc:	bne	1b300 <main@@Base+0x55b8>
   1b2d0:	add	r1, r7, #1
   1b2d4:	sub	r0, r6, r1
   1b2d8:	cmp	r0, #2
   1b2dc:	blt	1b58c <main@@Base+0x5844>
   1b2e0:	ldrb	r0, [r1]
   1b2e4:	cmp	r0, #32
   1b2e8:	bls	1b578 <main@@Base+0x5830>
   1b2ec:	ldr	r6, [sp, #44]	; 0x2c
   1b2f0:	mov	r7, r1
   1b2f4:	cmp	r8, r7
   1b2f8:	bne	1b5a4 <main@@Base+0x585c>
   1b2fc:	b	1b964 <main@@Base+0x5c1c>
   1b300:	ldr	r0, [sp, #40]	; 0x28
   1b304:	mov	r1, r7
   1b308:	mov	r2, r6
   1b30c:	mov	r3, #4
   1b310:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1b314:	b	1b598 <main@@Base+0x5850>
   1b318:	bne	1b32c <main@@Base+0x55e4>
   1b31c:	mov	r1, r8
   1b320:	ldrb	r0, [r1, #7]!
   1b324:	cmp	r0, #32
   1b328:	bhi	1b340 <main@@Base+0x55f8>
   1b32c:	ldr	r0, [sp, #40]	; 0x28
   1b330:	mov	r1, r2
   1b334:	mov	r2, r6
   1b338:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b33c:	mov	r1, r0
   1b340:	cmp	r1, r6
   1b344:	beq	1b384 <main@@Base+0x563c>
   1b348:	ldrb	r0, [r1]
   1b34c:	cmp	r0, #58	; 0x3a
   1b350:	bne	1b384 <main@@Base+0x563c>
   1b354:	add	r2, r1, #1
   1b358:	sub	r0, r6, r2
   1b35c:	cmp	r0, #2
   1b360:	blt	1b744 <main@@Base+0x59fc>
   1b364:	ldrb	r0, [r2]
   1b368:	cmp	r0, #32
   1b36c:	bls	1b730 <main@@Base+0x59e8>
   1b370:	ldr	r6, [sp, #44]	; 0x2c
   1b374:	mov	r1, r2
   1b378:	cmp	r8, r1
   1b37c:	bne	1b760 <main@@Base+0x5a18>
   1b380:	b	1b964 <main@@Base+0x5c1c>
   1b384:	ldr	r0, [sp, #40]	; 0x28
   1b388:	mov	r2, r6
   1b38c:	mov	r3, #4
   1b390:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1b394:	b	1b754 <main@@Base+0x5a0c>
   1b398:	ldr	r6, [sp, #44]	; 0x2c
   1b39c:	bne	1b3b0 <main@@Base+0x5668>
   1b3a0:	mov	r7, r8
   1b3a4:	ldrb	r0, [r7, #3]!
   1b3a8:	cmp	r0, #32
   1b3ac:	bhi	1b3c0 <main@@Base+0x5678>
   1b3b0:	ldr	r0, [sp, #40]	; 0x28
   1b3b4:	mov	r2, r6
   1b3b8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b3bc:	mov	r7, r0
   1b3c0:	cmp	r7, r6
   1b3c4:	beq	1b404 <main@@Base+0x56bc>
   1b3c8:	ldrb	r0, [r7]
   1b3cc:	cmp	r0, #58	; 0x3a
   1b3d0:	bne	1b404 <main@@Base+0x56bc>
   1b3d4:	add	r1, r7, #1
   1b3d8:	sub	r0, r6, r1
   1b3dc:	cmp	r0, #2
   1b3e0:	blt	1b798 <main@@Base+0x5a50>
   1b3e4:	ldrb	r0, [r1]
   1b3e8:	cmp	r0, #32
   1b3ec:	bls	1b784 <main@@Base+0x5a3c>
   1b3f0:	ldr	r6, [sp, #44]	; 0x2c
   1b3f4:	mov	r7, r1
   1b3f8:	cmp	r8, r7
   1b3fc:	bne	1b7b0 <main@@Base+0x5a68>
   1b400:	b	1b964 <main@@Base+0x5c1c>
   1b404:	ldr	r0, [sp, #40]	; 0x28
   1b408:	mov	r1, r7
   1b40c:	mov	r2, r6
   1b410:	mov	r3, #4
   1b414:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1b418:	b	1b7a4 <main@@Base+0x5a5c>
   1b41c:	ldr	r6, [sp, #44]	; 0x2c
   1b420:	bne	1b430 <main@@Base+0x56e8>
   1b424:	ldrb	r0, [r7, #2]!
   1b428:	cmp	r0, #32
   1b42c:	bhi	1b440 <main@@Base+0x56f8>
   1b430:	ldr	r0, [sp, #40]	; 0x28
   1b434:	mov	r2, r6
   1b438:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b43c:	mov	r7, r0
   1b440:	cmp	r8, r7
   1b444:	beq	1b964 <main@@Base+0x5c1c>
   1b448:	mov	r5, #0
   1b44c:	cmp	r7, r6
   1b450:	str	r5, [fp, #-52]	; 0xffffffcc
   1b454:	str	r5, [fp, #-56]	; 0xffffffc8
   1b458:	strb	r5, [fp, #-60]	; 0xffffffc4
   1b45c:	str	r5, [sp, #56]	; 0x38
   1b460:	beq	1b4bc <main@@Base+0x5774>
   1b464:	sub	r0, fp, #56	; 0x38
   1b468:	mov	r1, r7
   1b46c:	mov	r2, r6
   1b470:	add	r3, sp, #56	; 0x38
   1b474:	str	r0, [sp]
   1b478:	ldr	r0, [sp, #40]	; 0x28
   1b47c:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1b480:	cmp	r0, r7
   1b484:	beq	1b4cc <main@@Base+0x5784>
   1b488:	ldr	r3, [sp, #56]	; 0x38
   1b48c:	mov	r1, r0
   1b490:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b494:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b498:	cmp	r3, #0
   1b49c:	beq	1b4dc <main@@Base+0x5794>
   1b4a0:	subs	r3, r0, #129	; 0x81
   1b4a4:	sbcs	r2, r2, #0
   1b4a8:	bcc	1b508 <main@@Base+0x57c0>
   1b4ac:	ldr	r0, [sp, #40]	; 0x28
   1b4b0:	mov	r2, r6
   1b4b4:	mov	r3, #8
   1b4b8:	b	1b4f4 <main@@Base+0x57ac>
   1b4bc:	mov	r1, r6
   1b4c0:	cmp	r7, r1
   1b4c4:	bne	1b564 <main@@Base+0x581c>
   1b4c8:	b	1b52c <main@@Base+0x57e4>
   1b4cc:	mov	r1, r7
   1b4d0:	cmp	r7, r1
   1b4d4:	bne	1b564 <main@@Base+0x581c>
   1b4d8:	b	1b52c <main@@Base+0x57e4>
   1b4dc:	subs	r3, r0, #128	; 0x80
   1b4e0:	sbcs	r2, r2, #0
   1b4e4:	bcc	1b51c <main@@Base+0x57d4>
   1b4e8:	ldr	r0, [sp, #40]	; 0x28
   1b4ec:	mov	r2, r6
   1b4f0:	mov	r3, #7
   1b4f4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1b4f8:	mov	r1, r0
   1b4fc:	cmp	r7, r1
   1b500:	bne	1b564 <main@@Base+0x581c>
   1b504:	b	1b52c <main@@Base+0x57e4>
   1b508:	rsb	r5, r0, #0
   1b50c:	strb	r5, [fp, #-60]	; 0xffffffc4
   1b510:	cmp	r7, r1
   1b514:	bne	1b564 <main@@Base+0x581c>
   1b518:	b	1b52c <main@@Base+0x57e4>
   1b51c:	mov	r5, r0
   1b520:	strb	r5, [fp, #-60]	; 0xffffffc4
   1b524:	cmp	r7, r1
   1b528:	bne	1b564 <main@@Base+0x581c>
   1b52c:	sub	r0, fp, #60	; 0x3c
   1b530:	mov	r1, r7
   1b534:	mov	r2, r6
   1b538:	str	r0, [sp]
   1b53c:	movw	r0, #53876	; 0xd274
   1b540:	movt	r0, #5
   1b544:	add	r3, r0, #80	; 0x50
   1b548:	ldr	r0, [sp, #40]	; 0x28
   1b54c:	bl	21df8 <main@@Base+0xc0b0>
   1b550:	mov	r1, r0
   1b554:	cmp	r0, r7
   1b558:	cmpne	r1, r6
   1b55c:	beq	1ba6c <main@@Base+0x5d24>
   1b560:	ldrb	r5, [fp, #-60]	; 0xffffffc4
   1b564:	strb	r5, [r9, #24]
   1b568:	sub	r0, r6, r1
   1b56c:	cmp	r0, #2
   1b570:	bge	1b984 <main@@Base+0x5c3c>
   1b574:	b	1b9b4 <main@@Base+0x5c6c>
   1b578:	ldr	r6, [sp, #44]	; 0x2c
   1b57c:	bne	1b58c <main@@Base+0x5844>
   1b580:	ldrb	r0, [r7, #2]!
   1b584:	cmp	r0, #32
   1b588:	bhi	1b59c <main@@Base+0x5854>
   1b58c:	ldr	r0, [sp, #40]	; 0x28
   1b590:	mov	r2, r6
   1b594:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b598:	mov	r7, r0
   1b59c:	cmp	r8, r7
   1b5a0:	beq	1b964 <main@@Base+0x5c1c>
   1b5a4:	mov	r0, #0
   1b5a8:	mov	r1, r7
   1b5ac:	mov	r2, r6
   1b5b0:	sub	r3, fp, #56	; 0x38
   1b5b4:	str	r0, [fp, #-52]	; 0xffffffcc
   1b5b8:	str	r0, [fp, #-56]	; 0xffffffc8
   1b5bc:	ldr	r0, [sp, #40]	; 0x28
   1b5c0:	bl	36308 <flatcc_json_parser_double@@Base>
   1b5c4:	mov	r1, r0
   1b5c8:	cmp	r7, r0
   1b5cc:	bne	1b600 <main@@Base+0x58b8>
   1b5d0:	sub	r0, fp, #56	; 0x38
   1b5d4:	movw	r3, #53636	; 0xd184
   1b5d8:	mov	r1, r7
   1b5dc:	mov	r2, r6
   1b5e0:	str	r0, [sp]
   1b5e4:	ldr	r0, [sp, #40]	; 0x28
   1b5e8:	movt	r3, #5
   1b5ec:	bl	24cc0 <main@@Base+0xef78>
   1b5f0:	mov	r1, r0
   1b5f4:	cmp	r0, r7
   1b5f8:	cmpne	r1, r6
   1b5fc:	beq	1ba6c <main@@Base+0x5d24>
   1b600:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1b604:	vstr	d16, [r9, #16]
   1b608:	sub	r0, r6, r1
   1b60c:	cmp	r0, #2
   1b610:	bge	1b984 <main@@Base+0x5c3c>
   1b614:	b	1b9b4 <main@@Base+0x5c6c>
   1b618:	ldr	r6, [sp, #44]	; 0x2c
   1b61c:	bne	1b630 <main@@Base+0x58e8>
   1b620:	mov	r7, r8
   1b624:	ldrb	r0, [r7, #3]!
   1b628:	cmp	r0, #32
   1b62c:	bhi	1b640 <main@@Base+0x58f8>
   1b630:	ldr	r0, [sp, #40]	; 0x28
   1b634:	mov	r2, r6
   1b638:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b63c:	mov	r7, r0
   1b640:	cmp	r7, r6
   1b644:	beq	1b688 <main@@Base+0x5940>
   1b648:	ldrb	r0, [r7]
   1b64c:	cmp	r0, #58	; 0x3a
   1b650:	bne	1b688 <main@@Base+0x5940>
   1b654:	ldr	r6, [sp, #44]	; 0x2c
   1b658:	add	r1, r7, #1
   1b65c:	sub	r0, r6, r1
   1b660:	cmp	r0, #2
   1b664:	blt	1b838 <main@@Base+0x5af0>
   1b668:	ldrb	r0, [r1]
   1b66c:	cmp	r0, #32
   1b670:	bls	1b824 <main@@Base+0x5adc>
   1b674:	ldr	r6, [sp, #44]	; 0x2c
   1b678:	mov	r7, r1
   1b67c:	cmp	r8, r7
   1b680:	bne	1b850 <main@@Base+0x5b08>
   1b684:	b	1b964 <main@@Base+0x5c1c>
   1b688:	ldr	r6, [sp, #44]	; 0x2c
   1b68c:	ldr	r0, [sp, #40]	; 0x28
   1b690:	mov	r1, r7
   1b694:	mov	r3, #4
   1b698:	mov	r2, r6
   1b69c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1b6a0:	b	1b844 <main@@Base+0x5afc>
   1b6a4:	ldr	r6, [sp, #44]	; 0x2c
   1b6a8:	bne	1b6bc <main@@Base+0x5974>
   1b6ac:	mov	r7, r8
   1b6b0:	ldrb	r0, [r7, #3]!
   1b6b4:	cmp	r0, #32
   1b6b8:	bhi	1b6cc <main@@Base+0x5984>
   1b6bc:	ldr	r0, [sp, #40]	; 0x28
   1b6c0:	mov	r2, r6
   1b6c4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b6c8:	mov	r7, r0
   1b6cc:	cmp	r7, r6
   1b6d0:	beq	1b714 <main@@Base+0x59cc>
   1b6d4:	ldrb	r0, [r7]
   1b6d8:	cmp	r0, #58	; 0x3a
   1b6dc:	bne	1b714 <main@@Base+0x59cc>
   1b6e0:	ldr	r6, [sp, #44]	; 0x2c
   1b6e4:	add	r1, r7, #1
   1b6e8:	sub	r0, r6, r1
   1b6ec:	cmp	r0, #2
   1b6f0:	blt	1b8d8 <main@@Base+0x5b90>
   1b6f4:	ldrb	r0, [r1]
   1b6f8:	cmp	r0, #32
   1b6fc:	bls	1b8c4 <main@@Base+0x5b7c>
   1b700:	ldr	r6, [sp, #44]	; 0x2c
   1b704:	mov	r7, r1
   1b708:	cmp	r8, r7
   1b70c:	bne	1b8f0 <main@@Base+0x5ba8>
   1b710:	b	1b964 <main@@Base+0x5c1c>
   1b714:	ldr	r6, [sp, #44]	; 0x2c
   1b718:	ldr	r0, [sp, #40]	; 0x28
   1b71c:	mov	r1, r7
   1b720:	mov	r3, #4
   1b724:	mov	r2, r6
   1b728:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1b72c:	b	1b8e4 <main@@Base+0x5b9c>
   1b730:	ldr	r6, [sp, #44]	; 0x2c
   1b734:	bne	1b744 <main@@Base+0x59fc>
   1b738:	ldrb	r0, [r1, #2]!
   1b73c:	cmp	r0, #32
   1b740:	bhi	1b758 <main@@Base+0x5a10>
   1b744:	ldr	r0, [sp, #40]	; 0x28
   1b748:	mov	r1, r2
   1b74c:	mov	r2, r6
   1b750:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b754:	mov	r1, r0
   1b758:	cmp	r8, r1
   1b75c:	beq	1b964 <main@@Base+0x5c1c>
   1b760:	ldr	r0, [sp, #40]	; 0x28
   1b764:	ldr	r3, [sp, #20]
   1b768:	mov	r2, r6
   1b76c:	bl	2246c <main@@Base+0xc724>
   1b770:	mov	r1, r0
   1b774:	sub	r0, r6, r1
   1b778:	cmp	r0, #2
   1b77c:	bge	1b984 <main@@Base+0x5c3c>
   1b780:	b	1b9b4 <main@@Base+0x5c6c>
   1b784:	ldr	r6, [sp, #44]	; 0x2c
   1b788:	bne	1b798 <main@@Base+0x5a50>
   1b78c:	ldrb	r0, [r7, #2]!
   1b790:	cmp	r0, #32
   1b794:	bhi	1b7a8 <main@@Base+0x5a60>
   1b798:	ldr	r0, [sp, #40]	; 0x28
   1b79c:	mov	r2, r6
   1b7a0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b7a4:	mov	r7, r0
   1b7a8:	cmp	r8, r7
   1b7ac:	beq	1b964 <main@@Base+0x5c1c>
   1b7b0:	mov	r0, #0
   1b7b4:	mov	r1, r7
   1b7b8:	mov	r2, r6
   1b7bc:	sub	r3, fp, #56	; 0x38
   1b7c0:	str	r0, [fp, #-56]	; 0xffffffc8
   1b7c4:	ldr	r0, [sp, #40]	; 0x28
   1b7c8:	bl	36d58 <flatcc_json_parser_float@@Base>
   1b7cc:	mov	r1, r0
   1b7d0:	cmp	r7, r0
   1b7d4:	bne	1b80c <main@@Base+0x5ac4>
   1b7d8:	sub	r0, fp, #56	; 0x38
   1b7dc:	mov	r1, r7
   1b7e0:	mov	r2, r6
   1b7e4:	str	r0, [sp]
   1b7e8:	movw	r0, #53636	; 0xd184
   1b7ec:	movt	r0, #5
   1b7f0:	add	r3, r0, #12
   1b7f4:	ldr	r0, [sp, #40]	; 0x28
   1b7f8:	bl	242ac <main@@Base+0xe564>
   1b7fc:	mov	r1, r0
   1b800:	cmp	r0, r7
   1b804:	cmpne	r1, r6
   1b808:	beq	1ba6c <main@@Base+0x5d24>
   1b80c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b810:	str	r0, [r9]
   1b814:	sub	r0, r6, r1
   1b818:	cmp	r0, #2
   1b81c:	bge	1b984 <main@@Base+0x5c3c>
   1b820:	b	1b9b4 <main@@Base+0x5c6c>
   1b824:	ldr	r6, [sp, #44]	; 0x2c
   1b828:	bne	1b838 <main@@Base+0x5af0>
   1b82c:	ldrb	r0, [r7, #2]!
   1b830:	cmp	r0, #32
   1b834:	bhi	1b848 <main@@Base+0x5b00>
   1b838:	ldr	r0, [sp, #40]	; 0x28
   1b83c:	mov	r2, r6
   1b840:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b844:	mov	r7, r0
   1b848:	cmp	r8, r7
   1b84c:	beq	1b964 <main@@Base+0x5c1c>
   1b850:	mov	r0, #0
   1b854:	mov	r1, r7
   1b858:	mov	r2, r6
   1b85c:	sub	r3, fp, #56	; 0x38
   1b860:	str	r0, [fp, #-56]	; 0xffffffc8
   1b864:	ldr	r0, [sp, #40]	; 0x28
   1b868:	bl	36d58 <flatcc_json_parser_float@@Base>
   1b86c:	mov	r1, r0
   1b870:	cmp	r7, r0
   1b874:	bne	1b8ac <main@@Base+0x5b64>
   1b878:	sub	r0, fp, #56	; 0x38
   1b87c:	mov	r1, r7
   1b880:	mov	r2, r6
   1b884:	str	r0, [sp]
   1b888:	movw	r0, #53636	; 0xd184
   1b88c:	movt	r0, #5
   1b890:	add	r3, r0, #24
   1b894:	ldr	r0, [sp, #40]	; 0x28
   1b898:	bl	242ac <main@@Base+0xe564>
   1b89c:	mov	r1, r0
   1b8a0:	cmp	r0, r7
   1b8a4:	cmpne	r1, r6
   1b8a8:	beq	1ba6c <main@@Base+0x5d24>
   1b8ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b8b0:	str	r0, [r9, #8]
   1b8b4:	sub	r0, r6, r1
   1b8b8:	cmp	r0, #2
   1b8bc:	bge	1b984 <main@@Base+0x5c3c>
   1b8c0:	b	1b9b4 <main@@Base+0x5c6c>
   1b8c4:	ldr	r6, [sp, #44]	; 0x2c
   1b8c8:	bne	1b8d8 <main@@Base+0x5b90>
   1b8cc:	ldrb	r0, [r7, #2]!
   1b8d0:	cmp	r0, #32
   1b8d4:	bhi	1b8e8 <main@@Base+0x5ba0>
   1b8d8:	ldr	r0, [sp, #40]	; 0x28
   1b8dc:	mov	r2, r6
   1b8e0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b8e4:	mov	r7, r0
   1b8e8:	cmp	r8, r7
   1b8ec:	beq	1b964 <main@@Base+0x5c1c>
   1b8f0:	mov	r0, #0
   1b8f4:	mov	r1, r7
   1b8f8:	mov	r2, r6
   1b8fc:	sub	r3, fp, #56	; 0x38
   1b900:	str	r0, [fp, #-56]	; 0xffffffc8
   1b904:	ldr	r0, [sp, #40]	; 0x28
   1b908:	bl	36d58 <flatcc_json_parser_float@@Base>
   1b90c:	mov	r1, r0
   1b910:	cmp	r7, r0
   1b914:	bne	1b94c <main@@Base+0x5c04>
   1b918:	sub	r0, fp, #56	; 0x38
   1b91c:	mov	r1, r7
   1b920:	mov	r2, r6
   1b924:	str	r0, [sp]
   1b928:	movw	r0, #53636	; 0xd184
   1b92c:	movt	r0, #5
   1b930:	add	r3, r0, #36	; 0x24
   1b934:	ldr	r0, [sp, #40]	; 0x28
   1b938:	bl	242ac <main@@Base+0xe564>
   1b93c:	mov	r1, r0
   1b940:	cmp	r0, r7
   1b944:	cmpne	r1, r6
   1b948:	beq	1ba6c <main@@Base+0x5d24>
   1b94c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b950:	str	r0, [r9, #4]
   1b954:	sub	r0, r6, r1
   1b958:	cmp	r0, #2
   1b95c:	blt	1b9b4 <main@@Base+0x5c6c>
   1b960:	b	1b984 <main@@Base+0x5c3c>
   1b964:	ldr	r0, [sp, #40]	; 0x28
   1b968:	mov	r1, r8
   1b96c:	mov	r2, r6
   1b970:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   1b974:	mov	r1, r0
   1b978:	sub	r0, r6, r1
   1b97c:	cmp	r0, #2
   1b980:	blt	1b9b4 <main@@Base+0x5c6c>
   1b984:	ldrb	r0, [r1]
   1b988:	cmp	r0, #32
   1b98c:	bls	1b9a0 <main@@Base+0x5c58>
   1b990:	mov	r2, r1
   1b994:	cmp	r2, r6
   1b998:	bne	1b9cc <main@@Base+0x5c84>
   1b99c:	b	1ba88 <main@@Base+0x5d40>
   1b9a0:	bne	1b9b4 <main@@Base+0x5c6c>
   1b9a4:	mov	r2, r1
   1b9a8:	ldrb	r0, [r2, #1]!
   1b9ac:	cmp	r0, #32
   1b9b0:	bhi	1b9c4 <main@@Base+0x5c7c>
   1b9b4:	ldr	r0, [sp, #40]	; 0x28
   1b9b8:	mov	r2, r6
   1b9bc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1b9c0:	mov	r2, r0
   1b9c4:	cmp	r2, r6
   1b9c8:	beq	1ba88 <main@@Base+0x5d40>
   1b9cc:	ldrb	r0, [r2]
   1b9d0:	cmp	r0, #44	; 0x2c
   1b9d4:	bne	1baa0 <main@@Base+0x5d58>
   1b9d8:	add	r1, r2, #1
   1b9dc:	sub	r0, r6, r1
   1b9e0:	cmp	r0, #2
   1b9e4:	blt	1ba14 <main@@Base+0x5ccc>
   1b9e8:	ldrb	r0, [r1]
   1b9ec:	cmp	r0, #32
   1b9f0:	bls	1ba04 <main@@Base+0x5cbc>
   1b9f4:	mov	r2, r1
   1b9f8:	cmp	r2, r6
   1b9fc:	bne	1ba2c <main@@Base+0x5ce4>
   1ba00:	b	1bae4 <main@@Base+0x5d9c>
   1ba04:	bne	1ba14 <main@@Base+0x5ccc>
   1ba08:	ldrb	r0, [r2, #2]!
   1ba0c:	cmp	r0, #32
   1ba10:	bhi	1ba24 <main@@Base+0x5cdc>
   1ba14:	ldr	r0, [sp, #40]	; 0x28
   1ba18:	mov	r2, r6
   1ba1c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1ba20:	mov	r2, r0
   1ba24:	cmp	r2, r6
   1ba28:	beq	1bae4 <main@@Base+0x5d9c>
   1ba2c:	ldrb	r0, [r2]
   1ba30:	cmp	r0, #125	; 0x7d
   1ba34:	bne	1aeec <main@@Base+0x51a4>
   1ba38:	ldr	r9, [sp, #40]	; 0x28
   1ba3c:	add	r1, r2, #1
   1ba40:	sub	r0, r6, r1
   1ba44:	cmp	r0, #2
   1ba48:	blt	1e950 <main@@Base+0x8c08>
   1ba4c:	ldrb	r0, [r1]
   1ba50:	cmp	r0, #32
   1ba54:	bls	1d41c <main@@Base+0x76d4>
   1ba58:	mov	r8, r1
   1ba5c:	sub	r0, r6, r8
   1ba60:	cmp	r0, #2
   1ba64:	bge	1fd4c <main@@Base+0xa004>
   1ba68:	b	1fdc0 <main@@Base+0xa078>
   1ba6c:	ldr	r9, [sp, #40]	; 0x28
   1ba70:	ldr	r6, [sp, #44]	; 0x2c
   1ba74:	mov	r3, #33	; 0x21
   1ba78:	mov	r0, r9
   1ba7c:	mov	r2, r6
   1ba80:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1ba84:	b	1fd3c <main@@Base+0x9ff4>
   1ba88:	ldr	r9, [sp, #40]	; 0x28
   1ba8c:	mov	r8, r6
   1ba90:	sub	r0, r6, r8
   1ba94:	cmp	r0, #2
   1ba98:	bge	1fd4c <main@@Base+0xa004>
   1ba9c:	b	1fdc0 <main@@Base+0xa078>
   1baa0:	ldr	r9, [sp, #40]	; 0x28
   1baa4:	cmp	r0, #125	; 0x7d
   1baa8:	bne	1c488 <main@@Base+0x6740>
   1baac:	add	r1, r2, #1
   1bab0:	sub	r0, r6, r1
   1bab4:	cmp	r0, #2
   1bab8:	blt	1e950 <main@@Base+0x8c08>
   1babc:	ldrb	r0, [r1]
   1bac0:	cmp	r0, #32
   1bac4:	bls	1e934 <main@@Base+0x8bec>
   1bac8:	ldr	r6, [sp, #44]	; 0x2c
   1bacc:	ldr	r9, [sp, #40]	; 0x28
   1bad0:	mov	r8, r1
   1bad4:	sub	r0, r6, r8
   1bad8:	cmp	r0, #2
   1badc:	bge	1fd4c <main@@Base+0xa004>
   1bae0:	b	1fdc0 <main@@Base+0xa078>
   1bae4:	ldr	r9, [sp, #40]	; 0x28
   1bae8:	mov	r1, r6
   1baec:	mov	r0, r9
   1baf0:	b	1c490 <main@@Base+0x6748>
   1baf4:	bne	1bb04 <main@@Base+0x5dbc>
   1baf8:	ldrb	r0, [r7, #2]!
   1bafc:	cmp	r0, #32
   1bb00:	bhi	1bb14 <main@@Base+0x5dcc>
   1bb04:	mov	r0, r9
   1bb08:	mov	r2, r6
   1bb0c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1bb10:	mov	r7, r0
   1bb14:	cmp	sl, r7
   1bb18:	beq	1a500 <main@@Base+0x47b8>
   1bb1c:	mov	r0, #0
   1bb20:	mov	r1, r7
   1bb24:	mov	r2, r6
   1bb28:	sub	r3, fp, #56	; 0x38
   1bb2c:	str	r0, [fp, #-56]	; 0xffffffc8
   1bb30:	mov	r0, r9
   1bb34:	bl	36d58 <flatcc_json_parser_float@@Base>
   1bb38:	mov	r8, r0
   1bb3c:	cmp	r7, r0
   1bb40:	bne	1bb78 <main@@Base+0x5e30>
   1bb44:	sub	r0, fp, #56	; 0x38
   1bb48:	mov	r1, r7
   1bb4c:	mov	r2, r6
   1bb50:	str	r0, [sp]
   1bb54:	movw	r0, #53396	; 0xd094
   1bb58:	movt	r0, #5
   1bb5c:	add	r3, r0, #72	; 0x48
   1bb60:	mov	r0, r9
   1bb64:	bl	242ac <main@@Base+0xe564>
   1bb68:	mov	r8, r0
   1bb6c:	cmp	r0, r7
   1bb70:	cmpne	r8, r6
   1bb74:	beq	1fe78 <main@@Base+0xa130>
   1bb78:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1bb7c:	vcmp.f32	s0, s16
   1bb80:	vmrs	APSR_nzcv, fpscr
   1bb84:	bne	1bb94 <main@@Base+0x5e4c>
   1bb88:	ldrb	r0, [r9, #8]
   1bb8c:	tst	r0, #2
   1bb90:	beq	1fd40 <main@@Base+0x9ff8>
   1bb94:	ldr	r0, [r9]
   1bb98:	mov	r1, #26
   1bb9c:	b	194ac <main@@Base+0x3764>
   1bba0:	ldr	r4, [sp, #44]	; 0x2c
   1bba4:	bne	1bbb8 <main@@Base+0x5e70>
   1bba8:	mov	r6, sl
   1bbac:	ldrb	r0, [r6, #18]!
   1bbb0:	cmp	r0, #32
   1bbb4:	bhi	1bbc8 <main@@Base+0x5e80>
   1bbb8:	mov	r0, r9
   1bbbc:	mov	r2, r4
   1bbc0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1bbc4:	mov	r6, r0
   1bbc8:	cmp	r6, r4
   1bbcc:	beq	1bc8c <main@@Base+0x5f44>
   1bbd0:	ldrb	r0, [r6]
   1bbd4:	cmp	r0, #58	; 0x3a
   1bbd8:	bne	1bc8c <main@@Base+0x5f44>
   1bbdc:	ldr	r0, [sp, #44]	; 0x2c
   1bbe0:	add	r1, r6, #1
   1bbe4:	sub	r0, r0, r1
   1bbe8:	cmp	r0, #2
   1bbec:	blt	1d1c0 <main@@Base+0x7478>
   1bbf0:	ldrb	r0, [r1]
   1bbf4:	cmp	r0, #32
   1bbf8:	bls	1d1ac <main@@Base+0x7464>
   1bbfc:	ldr	r9, [sp, #40]	; 0x28
   1bc00:	mov	r6, r1
   1bc04:	cmp	r8, r6
   1bc08:	bne	1d1d8 <main@@Base+0x7490>
   1bc0c:	ldr	r6, [sp, #44]	; 0x2c
   1bc10:	add	r7, sl, #16
   1bc14:	mov	r1, #8
   1bc18:	mov	r2, #-268435456	; 0xf0000000
   1bc1c:	sub	r0, r6, r7
   1bc20:	cmp	r0, #8
   1bc24:	movcc	r1, r0
   1bc28:	add	r1, r2, r1, lsl #28
   1bc2c:	asr	r1, r1, #28
   1bc30:	cmp	r1, #0
   1bc34:	blt	1fd2c <main@@Base+0x9fe4>
   1bc38:	ldrb	r1, [r7]
   1bc3c:	cmp	r1, #97	; 0x61
   1bc40:	bne	1fd2c <main@@Base+0x9fe4>
   1bc44:	cmp	r0, #2
   1bc48:	blt	1fd2c <main@@Base+0x9fe4>
   1bc4c:	ldrb	r0, [sl, #17]
   1bc50:	cmp	r0, #34	; 0x22
   1bc54:	bne	1fd2c <main@@Base+0x9fe4>
   1bc58:	add	r1, sl, #18
   1bc5c:	sub	r0, r6, r1
   1bc60:	cmp	r0, #2
   1bc64:	blt	1d508 <main@@Base+0x77c0>
   1bc68:	ldrb	r0, [r1]
   1bc6c:	cmp	r0, #32
   1bc70:	bls	1d4f0 <main@@Base+0x77a8>
   1bc74:	ldr	r6, [sp, #44]	; 0x2c
   1bc78:	ldr	r9, [sp, #40]	; 0x28
   1bc7c:	mov	sl, r1
   1bc80:	cmp	sl, r6
   1bc84:	bne	1d520 <main@@Base+0x77d8>
   1bc88:	b	1d560 <main@@Base+0x7818>
   1bc8c:	ldr	r2, [sp, #44]	; 0x2c
   1bc90:	mov	r0, r9
   1bc94:	mov	r1, r6
   1bc98:	mov	r3, #4
   1bc9c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1bca0:	b	1d1cc <main@@Base+0x7484>
   1bca4:	ldr	r4, [sp, #44]	; 0x2c
   1bca8:	bne	1bcbc <main@@Base+0x5f74>
   1bcac:	mov	r6, sl
   1bcb0:	ldrb	r0, [r6, #18]!
   1bcb4:	cmp	r0, #32
   1bcb8:	bhi	1bccc <main@@Base+0x5f84>
   1bcbc:	mov	r0, r9
   1bcc0:	mov	r2, r4
   1bcc4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1bcc8:	mov	r6, r0
   1bccc:	cmp	r6, r4
   1bcd0:	beq	1bd90 <main@@Base+0x6048>
   1bcd4:	ldrb	r0, [r6]
   1bcd8:	cmp	r0, #58	; 0x3a
   1bcdc:	bne	1bd90 <main@@Base+0x6048>
   1bce0:	ldr	r0, [sp, #44]	; 0x2c
   1bce4:	add	r1, r6, #1
   1bce8:	sub	r0, r0, r1
   1bcec:	cmp	r0, #2
   1bcf0:	blt	1d2b4 <main@@Base+0x756c>
   1bcf4:	ldrb	r0, [r1]
   1bcf8:	cmp	r0, #32
   1bcfc:	bls	1d2a0 <main@@Base+0x7558>
   1bd00:	ldr	r9, [sp, #40]	; 0x28
   1bd04:	mov	r6, r1
   1bd08:	cmp	r8, r6
   1bd0c:	bne	1d2cc <main@@Base+0x7584>
   1bd10:	ldr	r6, [sp, #44]	; 0x2c
   1bd14:	add	r7, sl, #16
   1bd18:	mov	r1, #8
   1bd1c:	mov	r2, #-268435456	; 0xf0000000
   1bd20:	sub	r0, r6, r7
   1bd24:	cmp	r0, #8
   1bd28:	movcc	r1, r0
   1bd2c:	add	r1, r2, r1, lsl #28
   1bd30:	asr	r1, r1, #28
   1bd34:	cmp	r1, #0
   1bd38:	blt	1fd2c <main@@Base+0x9fe4>
   1bd3c:	ldrb	r1, [r7]
   1bd40:	cmp	r1, #97	; 0x61
   1bd44:	bne	1fd2c <main@@Base+0x9fe4>
   1bd48:	cmp	r0, #2
   1bd4c:	blt	1fd2c <main@@Base+0x9fe4>
   1bd50:	ldrb	r0, [sl, #17]
   1bd54:	cmp	r0, #34	; 0x22
   1bd58:	bne	1fd2c <main@@Base+0x9fe4>
   1bd5c:	add	r1, sl, #18
   1bd60:	sub	r0, r6, r1
   1bd64:	cmp	r0, #2
   1bd68:	blt	1d590 <main@@Base+0x7848>
   1bd6c:	ldrb	r0, [r1]
   1bd70:	cmp	r0, #32
   1bd74:	bls	1d578 <main@@Base+0x7830>
   1bd78:	ldr	r6, [sp, #44]	; 0x2c
   1bd7c:	ldr	r9, [sp, #40]	; 0x28
   1bd80:	mov	sl, r1
   1bd84:	cmp	sl, r6
   1bd88:	bne	1d5a8 <main@@Base+0x7860>
   1bd8c:	b	1d5e8 <main@@Base+0x78a0>
   1bd90:	ldr	r2, [sp, #44]	; 0x2c
   1bd94:	mov	r0, r9
   1bd98:	mov	r1, r6
   1bd9c:	mov	r3, #4
   1bda0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1bda4:	b	1d2c0 <main@@Base+0x7578>
   1bda8:	mov	r0, r9
   1bdac:	mov	r1, sl
   1bdb0:	mov	r2, r6
   1bdb4:	mov	r3, #9
   1bdb8:	b	1a51c <main@@Base+0x47d4>
   1bdbc:	bne	1bdcc <main@@Base+0x6084>
   1bdc0:	ldrb	r0, [r6, #2]!
   1bdc4:	cmp	r0, #32
   1bdc8:	bhi	1bddc <main@@Base+0x6094>
   1bdcc:	ldr	r2, [sp, #44]	; 0x2c
   1bdd0:	mov	r0, r9
   1bdd4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1bdd8:	mov	r6, r0
   1bddc:	cmp	r8, r6
   1bde0:	beq	199b8 <main@@Base+0x3c70>
   1bde4:	ldr	r2, [sp, #44]	; 0x2c
   1bde8:	mov	r4, #0
   1bdec:	str	r4, [fp, #-52]	; 0xffffffcc
   1bdf0:	str	r4, [fp, #-56]	; 0xffffffc8
   1bdf4:	str	r4, [fp, #-60]	; 0xffffffc4
   1bdf8:	str	r4, [sp, #56]	; 0x38
   1bdfc:	cmp	r6, r2
   1be00:	beq	1be5c <main@@Base+0x6114>
   1be04:	sub	r0, fp, #56	; 0x38
   1be08:	mov	r1, r6
   1be0c:	add	r3, sp, #56	; 0x38
   1be10:	str	r0, [sp]
   1be14:	mov	r0, r9
   1be18:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1be1c:	cmp	r0, r6
   1be20:	beq	1be6c <main@@Base+0x6124>
   1be24:	ldr	r2, [sp, #56]	; 0x38
   1be28:	mov	r8, r0
   1be2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1be30:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1be34:	cmp	r2, #0
   1be38:	beq	1be7c <main@@Base+0x6134>
   1be3c:	subs	r2, r0, #-2147483647	; 0x80000001
   1be40:	sbcs	r1, r1, #0
   1be44:	bcc	1beac <main@@Base+0x6164>
   1be48:	ldr	r2, [sp, #44]	; 0x2c
   1be4c:	mov	r0, r9
   1be50:	mov	r1, r8
   1be54:	mov	r3, #8
   1be58:	b	1be98 <main@@Base+0x6150>
   1be5c:	mov	r8, r2
   1be60:	cmp	r6, r8
   1be64:	bne	1c6e0 <main@@Base+0x6998>
   1be68:	b	1c6a4 <main@@Base+0x695c>
   1be6c:	mov	r8, r6
   1be70:	cmp	r6, r8
   1be74:	bne	1c6e0 <main@@Base+0x6998>
   1be78:	b	1c6a4 <main@@Base+0x695c>
   1be7c:	subs	r2, r0, #-2147483648	; 0x80000000
   1be80:	sbcs	r1, r1, #0
   1be84:	bcc	1c694 <main@@Base+0x694c>
   1be88:	ldr	r2, [sp, #44]	; 0x2c
   1be8c:	mov	r0, r9
   1be90:	mov	r1, r8
   1be94:	mov	r3, #7
   1be98:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1be9c:	mov	r8, r0
   1bea0:	cmp	r6, r8
   1bea4:	bne	1c6e0 <main@@Base+0x6998>
   1bea8:	b	1c6a4 <main@@Base+0x695c>
   1beac:	rsb	r4, r0, #0
   1beb0:	str	r4, [fp, #-60]	; 0xffffffc4
   1beb4:	cmp	r6, r8
   1beb8:	bne	1c6e0 <main@@Base+0x6998>
   1bebc:	b	1c6a4 <main@@Base+0x695c>
   1bec0:	bne	1bed0 <main@@Base+0x6188>
   1bec4:	ldrb	r0, [sl, #19]!
   1bec8:	cmp	r0, #32
   1becc:	bhi	1bee0 <main@@Base+0x6198>
   1bed0:	mov	r0, r9
   1bed4:	mov	r2, r6
   1bed8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1bedc:	mov	sl, r0
   1bee0:	cmp	sl, r6
   1bee4:	beq	1bf28 <main@@Base+0x61e0>
   1bee8:	ldrb	r0, [sl]
   1beec:	cmp	r0, #58	; 0x3a
   1bef0:	bne	1bf28 <main@@Base+0x61e0>
   1bef4:	add	r1, sl, #1
   1bef8:	sub	r0, r6, r1
   1befc:	cmp	r0, #2
   1bf00:	blt	1d43c <main@@Base+0x76f4>
   1bf04:	ldrb	r0, [r1]
   1bf08:	cmp	r0, #32
   1bf0c:	bls	1d424 <main@@Base+0x76dc>
   1bf10:	ldr	r6, [sp, #44]	; 0x2c
   1bf14:	ldr	r9, [sp, #40]	; 0x28
   1bf18:	mov	sl, r1
   1bf1c:	cmp	r7, sl
   1bf20:	bne	1d454 <main@@Base+0x770c>
   1bf24:	b	1fd2c <main@@Base+0x9fe4>
   1bf28:	mov	r0, r9
   1bf2c:	mov	r1, sl
   1bf30:	mov	r2, r6
   1bf34:	mov	r3, #4
   1bf38:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1bf3c:	b	1d448 <main@@Base+0x7700>
   1bf40:	bne	1bf50 <main@@Base+0x6208>
   1bf44:	ldrb	r0, [sl, #19]!
   1bf48:	cmp	r0, #32
   1bf4c:	bhi	1bf60 <main@@Base+0x6218>
   1bf50:	mov	r0, r9
   1bf54:	mov	r2, r6
   1bf58:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1bf5c:	mov	sl, r0
   1bf60:	cmp	sl, r6
   1bf64:	beq	1bfa8 <main@@Base+0x6260>
   1bf68:	ldrb	r0, [sl]
   1bf6c:	cmp	r0, #58	; 0x3a
   1bf70:	bne	1bfa8 <main@@Base+0x6260>
   1bf74:	add	r1, sl, #1
   1bf78:	sub	r0, r6, r1
   1bf7c:	cmp	r0, #2
   1bf80:	blt	1d618 <main@@Base+0x78d0>
   1bf84:	ldrb	r0, [r1]
   1bf88:	cmp	r0, #32
   1bf8c:	bls	1d600 <main@@Base+0x78b8>
   1bf90:	ldr	r6, [sp, #44]	; 0x2c
   1bf94:	ldr	r9, [sp, #40]	; 0x28
   1bf98:	mov	sl, r1
   1bf9c:	cmp	r7, sl
   1bfa0:	bne	1d630 <main@@Base+0x78e8>
   1bfa4:	b	1fd2c <main@@Base+0x9fe4>
   1bfa8:	mov	r0, r9
   1bfac:	mov	r1, sl
   1bfb0:	mov	r2, r6
   1bfb4:	mov	r3, #4
   1bfb8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1bfbc:	b	1d624 <main@@Base+0x78dc>
   1bfc0:	bne	1bfd0 <main@@Base+0x6288>
   1bfc4:	ldrb	r0, [sl, #2]!
   1bfc8:	cmp	r0, #32
   1bfcc:	bhi	1bfe0 <main@@Base+0x6298>
   1bfd0:	mov	r0, r9
   1bfd4:	mov	r2, r6
   1bfd8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1bfdc:	mov	sl, r0
   1bfe0:	cmp	sl, r6
   1bfe4:	mov	r5, r6
   1bfe8:	beq	1bffc <main@@Base+0x62b4>
   1bfec:	ldrb	r0, [sl]
   1bff0:	cmp	r0, #93	; 0x5d
   1bff4:	beq	1c26c <main@@Base+0x6524>
   1bff8:	mov	r5, sl
   1bffc:	mov	r0, #0
   1c000:	mov	r1, #1
   1c004:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c008:	ldr	r0, [r9]
   1c00c:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   1c010:	cmp	r0, #0
   1c014:	beq	1fef8 <main@@Base+0xa1b0>
   1c018:	mov	r7, r0
   1c01c:	mov	sl, r5
   1c020:	sub	r0, r6, sl
   1c024:	cmp	r0, #4
   1c028:	blt	1c064 <main@@Base+0x631c>
   1c02c:	ldr	r1, [sl]
   1c030:	movw	r2, #29300	; 0x7274
   1c034:	movt	r2, #25973	; 0x6575
   1c038:	cmp	r1, r2
   1c03c:	beq	1c0c8 <main@@Base+0x6380>
   1c040:	cmp	r0, #5
   1c044:	blt	1c064 <main@@Base+0x631c>
   1c048:	movw	r1, #36441	; 0x8e59
   1c04c:	mov	r0, sl
   1c050:	mov	r2, #5
   1c054:	movt	r1, #4
   1c058:	bl	14e6c <memcmp@plt>
   1c05c:	cmp	r0, #0
   1c060:	beq	1c24c <main@@Base+0x6504>
   1c064:	mov	r5, #0
   1c068:	cmp	sl, r6
   1c06c:	str	r5, [fp, #-52]	; 0xffffffcc
   1c070:	str	r5, [fp, #-56]	; 0xffffffc8
   1c074:	str	r5, [sp, #56]	; 0x38
   1c078:	beq	1c0c0 <main@@Base+0x6378>
   1c07c:	sub	r0, fp, #56	; 0x38
   1c080:	mov	r1, sl
   1c084:	mov	r2, r6
   1c088:	add	r3, sp, #56	; 0x38
   1c08c:	str	r0, [sp]
   1c090:	mov	r0, r9
   1c094:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1c098:	cmp	r0, sl
   1c09c:	beq	1c0e0 <main@@Base+0x6398>
   1c0a0:	mov	r1, r0
   1c0a4:	ldr	r0, [sp, #56]	; 0x38
   1c0a8:	cmp	r0, #0
   1c0ac:	beq	1c0e8 <main@@Base+0x63a0>
   1c0b0:	mov	r0, r9
   1c0b4:	mov	r2, r6
   1c0b8:	mov	r3, #8
   1c0bc:	b	1c108 <main@@Base+0x63c0>
   1c0c0:	mov	r1, r6
   1c0c4:	b	1c110 <main@@Base+0x63c8>
   1c0c8:	mov	r0, #1
   1c0cc:	add	r1, sl, #4
   1c0d0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c0d4:	cmp	sl, r1
   1c0d8:	bne	1c164 <main@@Base+0x641c>
   1c0dc:	b	1c128 <main@@Base+0x63e0>
   1c0e0:	mov	r1, sl
   1c0e4:	b	1c110 <main@@Base+0x63c8>
   1c0e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c0ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c0f0:	subs	r3, r0, #256	; 0x100
   1c0f4:	sbcs	r2, r2, #0
   1c0f8:	bcc	1c264 <main@@Base+0x651c>
   1c0fc:	mov	r0, r9
   1c100:	mov	r2, r6
   1c104:	mov	r3, #7
   1c108:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1c10c:	mov	r1, r0
   1c110:	uxtb	r0, r5
   1c114:	cmp	r0, #0
   1c118:	movwne	r0, #1
   1c11c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c120:	cmp	sl, r1
   1c124:	bne	1c164 <main@@Base+0x641c>
   1c128:	sub	r0, fp, #60	; 0x3c
   1c12c:	mov	r1, sl
   1c130:	mov	r2, r6
   1c134:	str	r0, [sp]
   1c138:	movw	r0, #53396	; 0xd094
   1c13c:	movt	r0, #5
   1c140:	add	r3, r0, #48	; 0x30
   1c144:	mov	r0, r9
   1c148:	bl	240b8 <main@@Base+0xe370>
   1c14c:	mov	r1, r0
   1c150:	cmp	r0, sl
   1c154:	beq	1ff24 <main@@Base+0xa1dc>
   1c158:	cmp	r1, r6
   1c15c:	beq	1ff24 <main@@Base+0xa1dc>
   1c160:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1c164:	strb	r0, [r7]
   1c168:	sub	r0, r6, r1
   1c16c:	cmp	r0, #2
   1c170:	blt	1c1a4 <main@@Base+0x645c>
   1c174:	ldrb	r0, [r1]
   1c178:	cmp	r0, #32
   1c17c:	bls	1c190 <main@@Base+0x6448>
   1c180:	mov	sl, r1
   1c184:	cmp	sl, r6
   1c188:	bne	1c1bc <main@@Base+0x6474>
   1c18c:	b	1cc38 <main@@Base+0x6ef0>
   1c190:	bne	1c1a4 <main@@Base+0x645c>
   1c194:	mov	sl, r1
   1c198:	ldrb	r0, [sl, #1]!
   1c19c:	cmp	r0, #32
   1c1a0:	bhi	1c1b4 <main@@Base+0x646c>
   1c1a4:	mov	r0, r9
   1c1a8:	mov	r2, r6
   1c1ac:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1c1b0:	mov	sl, r0
   1c1b4:	cmp	sl, r6
   1c1b8:	beq	1cc38 <main@@Base+0x6ef0>
   1c1bc:	ldrb	r0, [sl]
   1c1c0:	cmp	r0, #44	; 0x2c
   1c1c4:	bne	1cd88 <main@@Base+0x7040>
   1c1c8:	add	r1, sl, #1
   1c1cc:	sub	r0, r6, r1
   1c1d0:	cmp	r0, #2
   1c1d4:	blt	1c204 <main@@Base+0x64bc>
   1c1d8:	ldrb	r0, [r1]
   1c1dc:	cmp	r0, #32
   1c1e0:	bls	1c1f4 <main@@Base+0x64ac>
   1c1e4:	mov	sl, r1
   1c1e8:	cmp	sl, r6
   1c1ec:	bne	1c21c <main@@Base+0x64d4>
   1c1f0:	b	1cdd4 <main@@Base+0x708c>
   1c1f4:	bne	1c204 <main@@Base+0x64bc>
   1c1f8:	ldrb	r0, [sl, #2]!
   1c1fc:	cmp	r0, #32
   1c200:	bhi	1c214 <main@@Base+0x64cc>
   1c204:	mov	r0, r9
   1c208:	mov	r2, r6
   1c20c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1c210:	mov	sl, r0
   1c214:	cmp	sl, r6
   1c218:	beq	1cdd4 <main@@Base+0x708c>
   1c21c:	ldrb	r0, [sl]
   1c220:	cmp	r0, #93	; 0x5d
   1c224:	beq	1c26c <main@@Base+0x6524>
   1c228:	mov	r0, #0
   1c22c:	mov	r1, #1
   1c230:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c234:	ldr	r0, [r9]
   1c238:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   1c23c:	mov	r7, r0
   1c240:	cmp	r0, #0
   1c244:	bne	1c020 <main@@Base+0x62d8>
   1c248:	b	16638 <main@@Base+0x8f0>
   1c24c:	mov	r0, #0
   1c250:	add	r1, sl, #5
   1c254:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c258:	cmp	sl, r1
   1c25c:	bne	1c164 <main@@Base+0x641c>
   1c260:	b	1c128 <main@@Base+0x63e0>
   1c264:	mov	r5, r0
   1c268:	b	1c110 <main@@Base+0x63c8>
   1c26c:	add	r1, sl, #1
   1c270:	sub	r0, r6, r1
   1c274:	cmp	r0, #2
   1c278:	blt	1cdc4 <main@@Base+0x707c>
   1c27c:	ldrb	r0, [r1]
   1c280:	cmp	r0, #32
   1c284:	bls	1cdac <main@@Base+0x7064>
   1c288:	ldr	r6, [sp, #44]	; 0x2c
   1c28c:	ldr	r9, [sp, #40]	; 0x28
   1c290:	mov	sl, r1
   1c294:	b	1ab28 <main@@Base+0x4de0>
   1c298:	bne	1c2a8 <main@@Base+0x6560>
   1c29c:	ldrb	r0, [sl, #17]!
   1c2a0:	cmp	r0, #32
   1c2a4:	bhi	1c2b8 <main@@Base+0x6570>
   1c2a8:	mov	r0, r9
   1c2ac:	mov	r2, r6
   1c2b0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1c2b4:	mov	sl, r0
   1c2b8:	cmp	sl, r6
   1c2bc:	beq	1c300 <main@@Base+0x65b8>
   1c2c0:	ldrb	r0, [sl]
   1c2c4:	cmp	r0, #58	; 0x3a
   1c2c8:	bne	1c300 <main@@Base+0x65b8>
   1c2cc:	add	r1, sl, #1
   1c2d0:	sub	r0, r6, r1
   1c2d4:	cmp	r0, #2
   1c2d8:	blt	1d8fc <main@@Base+0x7bb4>
   1c2dc:	ldrb	r0, [r1]
   1c2e0:	cmp	r0, #32
   1c2e4:	bls	1d8e4 <main@@Base+0x7b9c>
   1c2e8:	ldr	r6, [sp, #44]	; 0x2c
   1c2ec:	ldr	r9, [sp, #40]	; 0x28
   1c2f0:	mov	sl, r1
   1c2f4:	cmp	r8, sl
   1c2f8:	bne	1d914 <main@@Base+0x7bcc>
   1c2fc:	b	1d974 <main@@Base+0x7c2c>
   1c300:	mov	r0, r9
   1c304:	mov	r1, sl
   1c308:	mov	r2, r6
   1c30c:	mov	r3, #4
   1c310:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1c314:	b	1d908 <main@@Base+0x7bc0>
   1c318:	bne	1c328 <main@@Base+0x65e0>
   1c31c:	ldrb	r0, [sl, #22]!
   1c320:	cmp	r0, #32
   1c324:	bhi	1c338 <main@@Base+0x65f0>
   1c328:	mov	r0, r9
   1c32c:	mov	r2, r6
   1c330:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1c334:	mov	sl, r0
   1c338:	cmp	sl, r6
   1c33c:	beq	1c380 <main@@Base+0x6638>
   1c340:	ldrb	r0, [sl]
   1c344:	cmp	r0, #58	; 0x3a
   1c348:	bne	1c380 <main@@Base+0x6638>
   1c34c:	add	r1, sl, #1
   1c350:	sub	r0, r6, r1
   1c354:	cmp	r0, #2
   1c358:	blt	1d9dc <main@@Base+0x7c94>
   1c35c:	ldrb	r0, [r1]
   1c360:	cmp	r0, #32
   1c364:	bls	1d9c4 <main@@Base+0x7c7c>
   1c368:	ldr	r6, [sp, #44]	; 0x2c
   1c36c:	ldr	r9, [sp, #40]	; 0x28
   1c370:	mov	sl, r1
   1c374:	cmp	r7, sl
   1c378:	bne	1d9f4 <main@@Base+0x7cac>
   1c37c:	b	1fd2c <main@@Base+0x9fe4>
   1c380:	mov	r0, r9
   1c384:	mov	r1, sl
   1c388:	mov	r2, r6
   1c38c:	mov	r3, #4
   1c390:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1c394:	b	1d9e8 <main@@Base+0x7ca0>
   1c398:	bne	1c3a8 <main@@Base+0x6660>
   1c39c:	ldrb	r0, [sl, #2]!
   1c3a0:	cmp	r0, #32
   1c3a4:	bhi	1c3b8 <main@@Base+0x6670>
   1c3a8:	mov	r0, r9
   1c3ac:	mov	r2, r6
   1c3b0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1c3b4:	mov	sl, r0
   1c3b8:	cmp	r7, sl
   1c3bc:	beq	1fd2c <main@@Base+0x9fe4>
   1c3c0:	mov	r0, #0
   1c3c4:	mov	r1, #3
   1c3c8:	str	r0, [sp, #52]	; 0x34
   1c3cc:	ldr	r0, [r9]
   1c3d0:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   1c3d4:	cmp	r0, #0
   1c3d8:	bne	1c44c <main@@Base+0x6704>
   1c3dc:	cmp	sl, r6
   1c3e0:	beq	1c424 <main@@Base+0x66dc>
   1c3e4:	ldrb	r0, [sl]
   1c3e8:	cmp	r0, #123	; 0x7b
   1c3ec:	bne	1c424 <main@@Base+0x66dc>
   1c3f0:	add	r1, sl, #1
   1c3f4:	sub	r0, r6, r1
   1c3f8:	cmp	r0, #2
   1c3fc:	blt	1e9c0 <main@@Base+0x8c78>
   1c400:	ldrb	r0, [r1]
   1c404:	cmp	r0, #32
   1c408:	bls	1e9a8 <main@@Base+0x8c60>
   1c40c:	ldr	r6, [sp, #44]	; 0x2c
   1c410:	mov	sl, r1
   1c414:	cmp	sl, r6
   1c418:	mov	r2, r6
   1c41c:	bne	1e9dc <main@@Base+0x8c94>
   1c420:	b	1ea2c <main@@Base+0x8ce4>
   1c424:	mov	r0, r9
   1c428:	mov	r1, sl
   1c42c:	mov	r2, r6
   1c430:	mov	r3, #21
   1c434:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1c438:	mov	sl, r0
   1c43c:	ldr	r0, [sp, #32]
   1c440:	ldr	r0, [r0]
   1c444:	cmp	r0, #0
   1c448:	beq	1fb64 <main@@Base+0x9e1c>
   1c44c:	mov	r0, r9
   1c450:	mov	r1, sl
   1c454:	mov	r2, r6
   1c458:	mov	r3, #33	; 0x21
   1c45c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1c460:	mov	sl, r0
   1c464:	ldr	r0, [sp, #52]	; 0x34
   1c468:	cmp	r0, #0
   1c46c:	beq	16638 <main@@Base+0x8f0>
   1c470:	ldr	r0, [r9]
   1c474:	mov	r1, #35	; 0x23
   1c478:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1c47c:	cmp	r0, #0
   1c480:	bne	1798c <main@@Base+0x1c44>
   1c484:	b	16638 <main@@Base+0x8f0>
   1c488:	mov	r0, r9
   1c48c:	mov	r1, r2
   1c490:	mov	r2, r6
   1c494:	mov	r3, #10
   1c498:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1c49c:	b	1fd3c <main@@Base+0x9ff4>
   1c4a0:	bne	1c4b0 <main@@Base+0x6768>
   1c4a4:	ldrb	r0, [sl, #2]!
   1c4a8:	cmp	r0, #32
   1c4ac:	bhi	1c4c0 <main@@Base+0x6778>
   1c4b0:	mov	r0, r9
   1c4b4:	mov	r2, r6
   1c4b8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1c4bc:	mov	sl, r0
   1c4c0:	cmp	r7, sl
   1c4c4:	beq	1fd2c <main@@Base+0x9fe4>
   1c4c8:	ldr	r0, [sp, #48]	; 0x30
   1c4cc:	movw	r1, #53876	; 0xd274
   1c4d0:	mov	r2, #8
   1c4d4:	mov	r3, #0
   1c4d8:	movt	r1, #5
   1c4dc:	str	r2, [sp]
   1c4e0:	mov	r2, r6
   1c4e4:	add	r1, r1, #64	; 0x40
   1c4e8:	stmib	sp, {r0, r1}
   1c4ec:	movw	r0, #11304	; 0x2c28
   1c4f0:	mov	r1, sl
   1c4f4:	movt	r0, #2
   1c4f8:	str	r0, [sp, #12]
   1c4fc:	mov	r0, r9
   1c500:	bl	379dc <flatcc_json_parser_union_type@@Base>
   1c504:	b	1fd3c <main@@Base+0x9ff4>
   1c508:	bne	1c518 <main@@Base+0x67d0>
   1c50c:	ldrb	r0, [sl, #2]!
   1c510:	cmp	r0, #32
   1c514:	bhi	1c528 <main@@Base+0x67e0>
   1c518:	mov	r0, r9
   1c51c:	mov	r2, r6
   1c520:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1c524:	mov	sl, r0
   1c528:	cmp	r7, sl
   1c52c:	beq	1fd2c <main@@Base+0x9fe4>
   1c530:	ldr	r0, [r9]
   1c534:	bl	2f7a4 <flatcc_builder_start_offset_vector@@Base>
   1c538:	cmp	r0, #0
   1c53c:	bne	16638 <main@@Base+0x8f0>
   1c540:	cmp	sl, r6
   1c544:	beq	1c584 <main@@Base+0x683c>
   1c548:	ldrb	r0, [sl]
   1c54c:	cmp	r0, #91	; 0x5b
   1c550:	bne	1c584 <main@@Base+0x683c>
   1c554:	add	r1, sl, #1
   1c558:	sub	r0, r6, r1
   1c55c:	cmp	r0, #2
   1c560:	blt	1cdf0 <main@@Base+0x70a8>
   1c564:	ldrb	r0, [r1]
   1c568:	cmp	r0, #32
   1c56c:	bls	1cde0 <main@@Base+0x7098>
   1c570:	mov	sl, r1
   1c574:	cmp	sl, r6
   1c578:	mov	r2, r6
   1c57c:	bne	1ce0c <main@@Base+0x70c4>
   1c580:	b	1ce54 <main@@Base+0x710c>
   1c584:	mov	r0, r9
   1c588:	mov	r1, sl
   1c58c:	mov	r2, r6
   1c590:	mov	r3, #22
   1c594:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1c598:	mov	sl, r0
   1c59c:	ldr	r0, [r9]
   1c5a0:	bl	2fa5c <flatcc_builder_end_offset_vector@@Base>
   1c5a4:	cmp	r0, #0
   1c5a8:	str	r0, [sp, #52]	; 0x34
   1c5ac:	beq	16638 <main@@Base+0x8f0>
   1c5b0:	ldr	r0, [r9]
   1c5b4:	mov	r1, #28
   1c5b8:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1c5bc:	cmp	r0, #0
   1c5c0:	bne	1798c <main@@Base+0x1c44>
   1c5c4:	b	16638 <main@@Base+0x8f0>
   1c5c8:	bne	1c5d8 <main@@Base+0x6890>
   1c5cc:	ldrb	r0, [sl, #2]!
   1c5d0:	cmp	r0, #32
   1c5d4:	bhi	1c5e8 <main@@Base+0x68a0>
   1c5d8:	mov	r0, r9
   1c5dc:	mov	r2, r6
   1c5e0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1c5e4:	mov	sl, r0
   1c5e8:	cmp	r8, sl
   1c5ec:	beq	1d974 <main@@Base+0x7c2c>
   1c5f0:	ldr	r0, [r9]
   1c5f4:	mov	r1, #8
   1c5f8:	mov	r2, #4
   1c5fc:	mvn	r3, #-536870912	; 0xe0000000
   1c600:	bl	2f718 <flatcc_builder_start_vector@@Base>
   1c604:	cmp	r0, #0
   1c608:	bne	16638 <main@@Base+0x8f0>
   1c60c:	cmp	sl, r6
   1c610:	beq	1c650 <main@@Base+0x6908>
   1c614:	ldrb	r0, [sl]
   1c618:	cmp	r0, #91	; 0x5b
   1c61c:	bne	1c650 <main@@Base+0x6908>
   1c620:	add	r1, sl, #1
   1c624:	sub	r0, r6, r1
   1c628:	cmp	r0, #2
   1c62c:	blt	1cf80 <main@@Base+0x7238>
   1c630:	ldrb	r0, [r1]
   1c634:	cmp	r0, #32
   1c638:	bls	1cf6c <main@@Base+0x7224>
   1c63c:	mov	r8, r1
   1c640:	cmp	r8, r6
   1c644:	mov	sl, r6
   1c648:	bne	1cf9c <main@@Base+0x7254>
   1c64c:	b	1de08 <main@@Base+0x80c0>
   1c650:	mov	r0, r9
   1c654:	mov	r1, sl
   1c658:	mov	r2, r6
   1c65c:	mov	r3, #22
   1c660:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1c664:	mov	r8, r0
   1c668:	ldr	r0, [r9]
   1c66c:	bl	30998 <flatcc_builder_end_vector@@Base>
   1c670:	cmp	r0, #0
   1c674:	str	r0, [sp, #52]	; 0x34
   1c678:	beq	1fe78 <main@@Base+0xa130>
   1c67c:	ldr	r0, [r9]
   1c680:	mov	r1, #29
   1c684:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1c688:	cmp	r0, #0
   1c68c:	bne	1a54c <main@@Base+0x4804>
   1c690:	b	1fe78 <main@@Base+0xa130>
   1c694:	mov	r4, r0
   1c698:	str	r4, [fp, #-60]	; 0xffffffc4
   1c69c:	cmp	r6, r8
   1c6a0:	bne	1c6e0 <main@@Base+0x6998>
   1c6a4:	ldr	r4, [sp, #44]	; 0x2c
   1c6a8:	sub	r0, fp, #60	; 0x3c
   1c6ac:	mov	r1, r6
   1c6b0:	str	r0, [sp]
   1c6b4:	movw	r0, #53396	; 0xd094
   1c6b8:	movt	r0, #5
   1c6bc:	add	r3, r0, #108	; 0x6c
   1c6c0:	mov	r0, r9
   1c6c4:	mov	r2, r4
   1c6c8:	bl	24450 <main@@Base+0xe708>
   1c6cc:	mov	r8, r0
   1c6d0:	cmp	r0, r6
   1c6d4:	cmpne	r8, r4
   1c6d8:	beq	1fecc <main@@Base+0xa184>
   1c6dc:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1c6e0:	ldr	r6, [sp, #44]	; 0x2c
   1c6e4:	cmp	r4, #0
   1c6e8:	bne	1c6f8 <main@@Base+0x69b0>
   1c6ec:	ldrb	r0, [r9, #8]
   1c6f0:	tst	r0, #2
   1c6f4:	beq	1fd40 <main@@Base+0x9ff8>
   1c6f8:	ldr	r0, [r9]
   1c6fc:	mov	r1, #16
   1c700:	b	1e754 <main@@Base+0x8a0c>
   1c704:	bne	1c714 <main@@Base+0x69cc>
   1c708:	ldrb	r0, [r7, #2]!
   1c70c:	cmp	r0, #32
   1c710:	bhi	1c724 <main@@Base+0x69dc>
   1c714:	mov	r0, r9
   1c718:	mov	r2, r6
   1c71c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1c720:	mov	r7, r0
   1c724:	cmp	sl, r7
   1c728:	beq	1a500 <main@@Base+0x47b8>
   1c72c:	mov	r4, #0
   1c730:	cmp	r7, r6
   1c734:	str	r4, [fp, #-52]	; 0xffffffcc
   1c738:	str	r4, [fp, #-56]	; 0xffffffc8
   1c73c:	strh	r4, [fp, #-60]	; 0xffffffc4
   1c740:	str	r4, [sp, #56]	; 0x38
   1c744:	beq	1c7a8 <main@@Base+0x6a60>
   1c748:	sub	r0, fp, #56	; 0x38
   1c74c:	mov	r1, r7
   1c750:	mov	r2, r6
   1c754:	add	r3, sp, #56	; 0x38
   1c758:	str	r0, [sp]
   1c75c:	mov	r0, r9
   1c760:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1c764:	cmp	r0, r7
   1c768:	beq	1c7b8 <main@@Base+0x6a70>
   1c76c:	ldr	r2, [sp, #56]	; 0x38
   1c770:	mov	r8, r0
   1c774:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c778:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c77c:	cmp	r2, #0
   1c780:	beq	1c7c8 <main@@Base+0x6a80>
   1c784:	movw	r2, #32769	; 0x8001
   1c788:	subs	r2, r0, r2
   1c78c:	sbcs	r1, r1, #0
   1c790:	bcc	1c7f8 <main@@Base+0x6ab0>
   1c794:	mov	r0, r9
   1c798:	mov	r1, r8
   1c79c:	mov	r2, r6
   1c7a0:	mov	r3, #8
   1c7a4:	b	1c7e4 <main@@Base+0x6a9c>
   1c7a8:	mov	r8, r6
   1c7ac:	cmp	r7, r8
   1c7b0:	bne	1c854 <main@@Base+0x6b0c>
   1c7b4:	b	1c81c <main@@Base+0x6ad4>
   1c7b8:	mov	r8, r7
   1c7bc:	cmp	r7, r8
   1c7c0:	bne	1c854 <main@@Base+0x6b0c>
   1c7c4:	b	1c81c <main@@Base+0x6ad4>
   1c7c8:	subs	r2, r0, #32768	; 0x8000
   1c7cc:	sbcs	r1, r1, #0
   1c7d0:	bcc	1c80c <main@@Base+0x6ac4>
   1c7d4:	mov	r0, r9
   1c7d8:	mov	r1, r8
   1c7dc:	mov	r2, r6
   1c7e0:	mov	r3, #7
   1c7e4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1c7e8:	mov	r8, r0
   1c7ec:	cmp	r7, r8
   1c7f0:	bne	1c854 <main@@Base+0x6b0c>
   1c7f4:	b	1c81c <main@@Base+0x6ad4>
   1c7f8:	rsb	r4, r0, #0
   1c7fc:	strh	r4, [fp, #-60]	; 0xffffffc4
   1c800:	cmp	r7, r8
   1c804:	bne	1c854 <main@@Base+0x6b0c>
   1c808:	b	1c81c <main@@Base+0x6ad4>
   1c80c:	mov	r4, r0
   1c810:	strh	r4, [fp, #-60]	; 0xffffffc4
   1c814:	cmp	r7, r8
   1c818:	bne	1c854 <main@@Base+0x6b0c>
   1c81c:	sub	r0, fp, #60	; 0x3c
   1c820:	mov	r1, r7
   1c824:	mov	r2, r6
   1c828:	str	r0, [sp]
   1c82c:	movw	r0, #53396	; 0xd094
   1c830:	movt	r0, #5
   1c834:	add	r3, r0, #36	; 0x24
   1c838:	mov	r0, r9
   1c83c:	bl	2223c <main@@Base+0xc4f4>
   1c840:	mov	r8, r0
   1c844:	cmp	r0, r7
   1c848:	cmpne	r8, r6
   1c84c:	beq	1fecc <main@@Base+0xa184>
   1c850:	ldrh	r4, [fp, #-60]	; 0xffffffc4
   1c854:	uxth	r0, r4
   1c858:	cmp	r0, #150	; 0x96
   1c85c:	ldrbeq	r0, [r9, #8]
   1c860:	tsteq	r0, #2
   1c864:	beq	1fd40 <main@@Base+0x9ff8>
   1c868:	ldr	r0, [r9]
   1c86c:	mov	r1, #1
   1c870:	mov	r2, #2
   1c874:	mov	r3, #2
   1c878:	bl	31040 <flatcc_builder_table_add@@Base>
   1c87c:	cmp	r0, #0
   1c880:	beq	1fecc <main@@Base+0xa184>
   1c884:	strh	r4, [r0]
   1c888:	sub	r0, r6, r8
   1c88c:	cmp	r0, #2
   1c890:	bge	1fd4c <main@@Base+0xa004>
   1c894:	b	1fdc0 <main@@Base+0xa078>
   1c898:	bne	1c8a8 <main@@Base+0x6b60>
   1c89c:	ldrb	r0, [r7, #2]!
   1c8a0:	cmp	r0, #32
   1c8a4:	bhi	1c8b8 <main@@Base+0x6b70>
   1c8a8:	mov	r0, r9
   1c8ac:	mov	r2, r6
   1c8b0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1c8b4:	mov	r7, r0
   1c8b8:	cmp	sl, r7
   1c8bc:	beq	1a500 <main@@Base+0x47b8>
   1c8c0:	mov	r0, #0
   1c8c4:	mov	r1, r7
   1c8c8:	mov	r2, r6
   1c8cc:	sub	r3, fp, #56	; 0x38
   1c8d0:	str	r0, [fp, #-56]	; 0xffffffc8
   1c8d4:	mov	r0, r9
   1c8d8:	bl	36d58 <flatcc_json_parser_float@@Base>
   1c8dc:	mov	r8, r0
   1c8e0:	cmp	r7, r0
   1c8e4:	bne	1c91c <main@@Base+0x6bd4>
   1c8e8:	sub	r0, fp, #56	; 0x38
   1c8ec:	mov	r1, r7
   1c8f0:	mov	r2, r6
   1c8f4:	str	r0, [sp]
   1c8f8:	movw	r0, #53396	; 0xd094
   1c8fc:	movt	r0, #5
   1c900:	add	r3, r0, #84	; 0x54
   1c904:	mov	r0, r9
   1c908:	bl	242ac <main@@Base+0xe564>
   1c90c:	mov	r8, r0
   1c910:	cmp	r0, r7
   1c914:	cmpne	r8, r6
   1c918:	beq	1fe78 <main@@Base+0xa130>
   1c91c:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1c920:	vcmp.f32	s0, s18
   1c924:	vmrs	APSR_nzcv, fpscr
   1c928:	bne	1c938 <main@@Base+0x6bf0>
   1c92c:	ldrb	r0, [r9, #8]
   1c930:	tst	r0, #2
   1c934:	beq	1fd40 <main@@Base+0x9ff8>
   1c938:	ldr	r0, [r9]
   1c93c:	mov	r1, #25
   1c940:	b	194ac <main@@Base+0x3764>
   1c944:	bne	1c954 <main@@Base+0x6c0c>
   1c948:	ldrb	r0, [sl, #19]!
   1c94c:	cmp	r0, #32
   1c950:	bhi	1c964 <main@@Base+0x6c1c>
   1c954:	mov	r0, r9
   1c958:	mov	r2, r6
   1c95c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1c960:	mov	sl, r0
   1c964:	cmp	sl, r6
   1c968:	beq	1c9ac <main@@Base+0x6c64>
   1c96c:	ldrb	r0, [sl]
   1c970:	cmp	r0, #58	; 0x3a
   1c974:	bne	1c9ac <main@@Base+0x6c64>
   1c978:	add	r1, sl, #1
   1c97c:	sub	r0, r6, r1
   1c980:	cmp	r0, #2
   1c984:	blt	1f0a0 <main@@Base+0x9358>
   1c988:	ldrb	r0, [r1]
   1c98c:	cmp	r0, #32
   1c990:	bls	1f088 <main@@Base+0x9340>
   1c994:	ldr	r6, [sp, #44]	; 0x2c
   1c998:	ldr	r9, [sp, #40]	; 0x28
   1c99c:	mov	sl, r1
   1c9a0:	cmp	r7, sl
   1c9a4:	bne	1f0b8 <main@@Base+0x9370>
   1c9a8:	b	1fd2c <main@@Base+0x9fe4>
   1c9ac:	mov	r0, r9
   1c9b0:	mov	r1, sl
   1c9b4:	mov	r2, r6
   1c9b8:	mov	r3, #4
   1c9bc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1c9c0:	b	1f0ac <main@@Base+0x9364>
   1c9c4:	bne	1c9d4 <main@@Base+0x6c8c>
   1c9c8:	ldrb	r0, [r6, #2]!
   1c9cc:	cmp	r0, #32
   1c9d0:	bhi	1c9e4 <main@@Base+0x6c9c>
   1c9d4:	ldr	r2, [sp, #44]	; 0x2c
   1c9d8:	mov	r0, r9
   1c9dc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1c9e0:	mov	r6, r0
   1c9e4:	cmp	r8, r6
   1c9e8:	beq	1a354 <main@@Base+0x460c>
   1c9ec:	ldr	r2, [sp, #44]	; 0x2c
   1c9f0:	mov	r4, #0
   1c9f4:	str	r4, [fp, #-52]	; 0xffffffcc
   1c9f8:	str	r4, [fp, #-56]	; 0xffffffc8
   1c9fc:	str	r4, [sp, #60]	; 0x3c
   1ca00:	str	r4, [sp, #56]	; 0x38
   1ca04:	str	r4, [fp, #-60]	; 0xffffffc4
   1ca08:	cmp	r6, r2
   1ca0c:	beq	1ca64 <main@@Base+0x6d1c>
   1ca10:	sub	r0, fp, #56	; 0x38
   1ca14:	mov	r1, r6
   1ca18:	sub	r3, fp, #60	; 0x3c
   1ca1c:	str	r0, [sp]
   1ca20:	mov	r0, r9
   1ca24:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1ca28:	cmp	r0, r6
   1ca2c:	beq	1ca78 <main@@Base+0x6d30>
   1ca30:	sub	r5, fp, #60	; 0x3c
   1ca34:	mov	r8, r0
   1ca38:	ldm	r5, {r0, r4, r5}
   1ca3c:	cmp	r0, #0
   1ca40:	beq	1ca90 <main@@Base+0x6d48>
   1ca44:	subs	r0, r4, #1
   1ca48:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1ca4c:	bcc	1cac4 <main@@Base+0x6d7c>
   1ca50:	ldr	r2, [sp, #44]	; 0x2c
   1ca54:	mov	r0, r9
   1ca58:	mov	r1, r8
   1ca5c:	mov	r3, #8
   1ca60:	b	1caa8 <main@@Base+0x6d60>
   1ca64:	mov	r5, #0
   1ca68:	mov	r8, r2
   1ca6c:	cmp	r6, r8
   1ca70:	bne	1cb1c <main@@Base+0x6dd4>
   1ca74:	b	1cadc <main@@Base+0x6d94>
   1ca78:	mov	r4, #0
   1ca7c:	mov	r5, #0
   1ca80:	mov	r8, r6
   1ca84:	cmp	r6, r8
   1ca88:	bne	1cb1c <main@@Base+0x6dd4>
   1ca8c:	b	1cadc <main@@Base+0x6d94>
   1ca90:	cmn	r5, #1
   1ca94:	bgt	1cacc <main@@Base+0x6d84>
   1ca98:	ldr	r2, [sp, #44]	; 0x2c
   1ca9c:	mov	r0, r9
   1caa0:	mov	r1, r8
   1caa4:	mov	r3, #7
   1caa8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1caac:	mov	r8, r0
   1cab0:	mov	r4, #0
   1cab4:	mov	r5, #0
   1cab8:	cmp	r6, r8
   1cabc:	bne	1cb1c <main@@Base+0x6dd4>
   1cac0:	b	1cadc <main@@Base+0x6d94>
   1cac4:	rsbs	r4, r4, #0
   1cac8:	rsc	r5, r5, #0
   1cacc:	str	r4, [sp, #56]	; 0x38
   1cad0:	str	r5, [sp, #60]	; 0x3c
   1cad4:	cmp	r6, r8
   1cad8:	bne	1cb1c <main@@Base+0x6dd4>
   1cadc:	ldr	r4, [sp, #44]	; 0x2c
   1cae0:	add	r0, sp, #56	; 0x38
   1cae4:	mov	r1, r6
   1cae8:	str	r0, [sp]
   1caec:	movw	r0, #53516	; 0xd10c
   1caf0:	movt	r0, #5
   1caf4:	add	r3, r0, #12
   1caf8:	mov	r0, r9
   1cafc:	mov	r2, r4
   1cb00:	bl	2467c <main@@Base+0xe934>
   1cb04:	mov	r8, r0
   1cb08:	cmp	r0, r6
   1cb0c:	cmpne	r8, r4
   1cb10:	beq	1fecc <main@@Base+0xa184>
   1cb14:	ldr	r4, [sp, #56]	; 0x38
   1cb18:	ldr	r5, [sp, #60]	; 0x3c
   1cb1c:	ldr	r6, [sp, #44]	; 0x2c
   1cb20:	orrs	r0, r4, r5
   1cb24:	bne	1cb34 <main@@Base+0x6dec>
   1cb28:	ldrb	r0, [r9, #8]
   1cb2c:	tst	r0, #2
   1cb30:	beq	1fd40 <main@@Base+0x9ff8>
   1cb34:	ldr	r0, [r9]
   1cb38:	mov	r1, #18
   1cb3c:	b	1d3f4 <main@@Base+0x76ac>
   1cb40:	beq	1d720 <main@@Base+0x79d8>
   1cb44:	b	1d730 <main@@Base+0x79e8>
   1cb48:	bne	1cb58 <main@@Base+0x6e10>
   1cb4c:	ldrb	r0, [sl, #2]!
   1cb50:	cmp	r0, #32
   1cb54:	bhi	1cb68 <main@@Base+0x6e20>
   1cb58:	mov	r0, r9
   1cb5c:	mov	r2, r6
   1cb60:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1cb64:	mov	sl, r0
   1cb68:	cmp	r8, sl
   1cb6c:	beq	1d974 <main@@Base+0x7c2c>
   1cb70:	mov	r0, #0
   1cb74:	mov	r1, #0
   1cb78:	str	r0, [sp, #52]	; 0x34
   1cb7c:	ldr	r0, [r9]
   1cb80:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   1cb84:	cmp	r0, #0
   1cb88:	bne	1cbfc <main@@Base+0x6eb4>
   1cb8c:	cmp	sl, r6
   1cb90:	beq	1cbd4 <main@@Base+0x6e8c>
   1cb94:	ldrb	r0, [sl]
   1cb98:	cmp	r0, #123	; 0x7b
   1cb9c:	bne	1cbd4 <main@@Base+0x6e8c>
   1cba0:	add	r1, sl, #1
   1cba4:	sub	r0, r6, r1
   1cba8:	cmp	r0, #2
   1cbac:	blt	1f720 <main@@Base+0x99d8>
   1cbb0:	ldrb	r0, [r1]
   1cbb4:	cmp	r0, #32
   1cbb8:	bls	1f70c <main@@Base+0x99c4>
   1cbbc:	ldr	r6, [sp, #44]	; 0x2c
   1cbc0:	mov	sl, r1
   1cbc4:	cmp	sl, r6
   1cbc8:	mov	r3, r6
   1cbcc:	bne	1f73c <main@@Base+0x99f4>
   1cbd0:	b	1f78c <main@@Base+0x9a44>
   1cbd4:	mov	r0, r9
   1cbd8:	mov	r1, sl
   1cbdc:	mov	r2, r6
   1cbe0:	mov	r3, #21
   1cbe4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1cbe8:	mov	sl, r0
   1cbec:	ldr	r0, [sp, #32]
   1cbf0:	ldr	r0, [r0]
   1cbf4:	cmp	r0, #0
   1cbf8:	beq	172d8 <main@@Base+0x1590>
   1cbfc:	mov	r0, r9
   1cc00:	mov	r1, sl
   1cc04:	mov	r2, r6
   1cc08:	mov	r3, #33	; 0x21
   1cc0c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1cc10:	mov	sl, r0
   1cc14:	ldr	r0, [sp, #52]	; 0x34
   1cc18:	cmp	r0, #0
   1cc1c:	beq	16638 <main@@Base+0x8f0>
   1cc20:	ldr	r0, [r9]
   1cc24:	mov	r1, #34	; 0x22
   1cc28:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1cc2c:	cmp	r0, #0
   1cc30:	bne	1798c <main@@Base+0x1c44>
   1cc34:	b	16638 <main@@Base+0x8f0>
   1cc38:	mov	sl, r6
   1cc3c:	b	1ab28 <main@@Base+0x4de0>
   1cc40:	bne	1cc50 <main@@Base+0x6f08>
   1cc44:	ldrb	r0, [sl, #19]!
   1cc48:	cmp	r0, #32
   1cc4c:	bhi	1cc60 <main@@Base+0x6f18>
   1cc50:	mov	r0, r9
   1cc54:	mov	r2, r6
   1cc58:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1cc5c:	mov	sl, r0
   1cc60:	cmp	sl, r6
   1cc64:	beq	1cca8 <main@@Base+0x6f60>
   1cc68:	ldrb	r0, [sl]
   1cc6c:	cmp	r0, #58	; 0x3a
   1cc70:	bne	1cca8 <main@@Base+0x6f60>
   1cc74:	add	r1, sl, #1
   1cc78:	sub	r0, r6, r1
   1cc7c:	cmp	r0, #2
   1cc80:	blt	1f4f4 <main@@Base+0x97ac>
   1cc84:	ldrb	r0, [r1]
   1cc88:	cmp	r0, #32
   1cc8c:	bls	1f4dc <main@@Base+0x9794>
   1cc90:	ldr	r6, [sp, #44]	; 0x2c
   1cc94:	ldr	r9, [sp, #40]	; 0x28
   1cc98:	mov	sl, r1
   1cc9c:	cmp	r7, sl
   1cca0:	bne	1f50c <main@@Base+0x97c4>
   1cca4:	b	1fd2c <main@@Base+0x9fe4>
   1cca8:	mov	r0, r9
   1ccac:	mov	r1, sl
   1ccb0:	mov	r2, r6
   1ccb4:	mov	r3, #4
   1ccb8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1ccbc:	b	1f500 <main@@Base+0x97b8>
   1ccc0:	bne	1ccd0 <main@@Base+0x6f88>
   1ccc4:	ldrb	r0, [sl, #2]!
   1ccc8:	cmp	r0, #32
   1cccc:	bhi	1cce0 <main@@Base+0x6f98>
   1ccd0:	mov	r0, r9
   1ccd4:	mov	r2, r6
   1ccd8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1ccdc:	mov	sl, r0
   1cce0:	cmp	r7, sl
   1cce4:	beq	1fd2c <main@@Base+0x9fe4>
   1cce8:	ldr	r0, [r9]
   1ccec:	bl	2f7a4 <flatcc_builder_start_offset_vector@@Base>
   1ccf0:	cmp	r0, #0
   1ccf4:	bne	16638 <main@@Base+0x8f0>
   1ccf8:	cmp	sl, r6
   1ccfc:	beq	1cd44 <main@@Base+0x6ffc>
   1cd00:	ldrb	r0, [sl]
   1cd04:	cmp	r0, #91	; 0x5b
   1cd08:	bne	1cd44 <main@@Base+0x6ffc>
   1cd0c:	add	r1, sl, #1
   1cd10:	sub	r0, r6, r1
   1cd14:	cmp	r0, #2
   1cd18:	blt	1d758 <main@@Base+0x7a10>
   1cd1c:	ldrb	r0, [r1]
   1cd20:	cmp	r0, #32
   1cd24:	bls	1d740 <main@@Base+0x79f8>
   1cd28:	ldr	r6, [sp, #44]	; 0x2c
   1cd2c:	ldr	r9, [sp, #40]	; 0x28
   1cd30:	mov	sl, r1
   1cd34:	cmp	sl, r6
   1cd38:	mov	r2, r6
   1cd3c:	bne	1d774 <main@@Base+0x7a2c>
   1cd40:	b	1d7cc <main@@Base+0x7a84>
   1cd44:	mov	r0, r9
   1cd48:	mov	r1, sl
   1cd4c:	mov	r2, r6
   1cd50:	mov	r3, #22
   1cd54:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1cd58:	mov	sl, r0
   1cd5c:	ldr	r0, [r9]
   1cd60:	bl	2fa5c <flatcc_builder_end_offset_vector@@Base>
   1cd64:	cmp	r0, #0
   1cd68:	str	r0, [sp, #52]	; 0x34
   1cd6c:	beq	16638 <main@@Base+0x8f0>
   1cd70:	ldr	r0, [r9]
   1cd74:	mov	r1, #11
   1cd78:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1cd7c:	cmp	r0, #0
   1cd80:	bne	1798c <main@@Base+0x1c44>
   1cd84:	b	16638 <main@@Base+0x8f0>
   1cd88:	cmp	r0, #93	; 0x5d
   1cd8c:	bne	1dd98 <main@@Base+0x8050>
   1cd90:	ldr	r6, [sp, #44]	; 0x2c
   1cd94:	ldr	r9, [sp, #40]	; 0x28
   1cd98:	add	r1, sl, #1
   1cd9c:	sub	r0, r6, r1
   1cda0:	cmp	r0, #2
   1cda4:	bge	1c27c <main@@Base+0x6534>
   1cda8:	b	1cdc4 <main@@Base+0x707c>
   1cdac:	ldr	r6, [sp, #44]	; 0x2c
   1cdb0:	ldr	r9, [sp, #40]	; 0x28
   1cdb4:	bne	1cdc4 <main@@Base+0x707c>
   1cdb8:	ldrb	r0, [sl, #2]!
   1cdbc:	cmp	r0, #32
   1cdc0:	bhi	1ab28 <main@@Base+0x4de0>
   1cdc4:	mov	r0, r9
   1cdc8:	mov	r2, r6
   1cdcc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1cdd0:	b	1ab24 <main@@Base+0x4ddc>
   1cdd4:	mov	r0, r9
   1cdd8:	mov	r1, r6
   1cddc:	b	1dda8 <main@@Base+0x8060>
   1cde0:	bne	1cdf0 <main@@Base+0x70a8>
   1cde4:	ldrb	r0, [sl, #2]!
   1cde8:	cmp	r0, #32
   1cdec:	bhi	1ce00 <main@@Base+0x70b8>
   1cdf0:	mov	r0, r9
   1cdf4:	mov	r2, r6
   1cdf8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1cdfc:	mov	sl, r0
   1ce00:	cmp	sl, r6
   1ce04:	mov	r2, r6
   1ce08:	beq	1ce54 <main@@Base+0x710c>
   1ce0c:	ldrb	r0, [sl]
   1ce10:	cmp	r0, #93	; 0x5d
   1ce14:	bne	1ce50 <main@@Base+0x7108>
   1ce18:	add	r1, sl, #1
   1ce1c:	sub	r0, r6, r1
   1ce20:	cmp	r0, #2
   1ce24:	blt	175e0 <main@@Base+0x1898>
   1ce28:	ldrb	r0, [r1]
   1ce2c:	cmp	r0, #32
   1ce30:	bhi	1e98c <main@@Base+0x8c44>
   1ce34:	ldr	r6, [sp, #44]	; 0x2c
   1ce38:	ldr	r9, [sp, #40]	; 0x28
   1ce3c:	bne	175e0 <main@@Base+0x1898>
   1ce40:	ldrb	r0, [sl, #2]!
   1ce44:	cmp	r0, #32
   1ce48:	bhi	1c59c <main@@Base+0x6854>
   1ce4c:	b	175e0 <main@@Base+0x1898>
   1ce50:	mov	r2, sl
   1ce54:	mov	r1, r2
   1ce58:	mov	r0, r9
   1ce5c:	mov	r2, r6
   1ce60:	add	r3, sp, #52	; 0x34
   1ce64:	bl	37464 <flatcc_json_parser_build_string@@Base>
   1ce68:	mov	sl, r0
   1ce6c:	ldr	r0, [sp, #52]	; 0x34
   1ce70:	cmp	r0, #0
   1ce74:	beq	16638 <main@@Base+0x8f0>
   1ce78:	ldr	r0, [r9]
   1ce7c:	mov	r1, #1
   1ce80:	bl	2ef60 <flatcc_builder_extend_offset_vector@@Base>
   1ce84:	cmp	r0, #0
   1ce88:	beq	16638 <main@@Base+0x8f0>
   1ce8c:	ldr	r1, [sp, #52]	; 0x34
   1ce90:	str	r1, [r0]
   1ce94:	sub	r0, r6, sl
   1ce98:	cmp	r0, #2
   1ce9c:	blt	1ced0 <main@@Base+0x7188>
   1cea0:	ldrb	r0, [sl]
   1cea4:	cmp	r0, #32
   1cea8:	bls	1cebc <main@@Base+0x7174>
   1ceac:	mov	r2, sl
   1ceb0:	cmp	r2, r6
   1ceb4:	bne	1ceec <main@@Base+0x71a4>
   1ceb8:	b	1e92c <main@@Base+0x8be4>
   1cebc:	bne	1ced0 <main@@Base+0x7188>
   1cec0:	mov	r2, sl
   1cec4:	ldrb	r0, [r2, #1]!
   1cec8:	cmp	r0, #32
   1cecc:	bhi	1cee4 <main@@Base+0x719c>
   1ced0:	mov	r0, r9
   1ced4:	mov	r1, sl
   1ced8:	mov	r2, r6
   1cedc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1cee0:	mov	r2, r0
   1cee4:	cmp	r2, r6
   1cee8:	beq	1e92c <main@@Base+0x8be4>
   1ceec:	ldrb	r0, [r2]
   1cef0:	cmp	r0, #44	; 0x2c
   1cef4:	bne	1e960 <main@@Base+0x8c18>
   1cef8:	add	r1, r2, #1
   1cefc:	sub	r0, r6, r1
   1cf00:	cmp	r0, #2
   1cf04:	blt	1cf34 <main@@Base+0x71ec>
   1cf08:	ldrb	r0, [r1]
   1cf0c:	cmp	r0, #32
   1cf10:	bls	1cf24 <main@@Base+0x71dc>
   1cf14:	mov	r2, r1
   1cf18:	cmp	r2, r6
   1cf1c:	bne	1cf4c <main@@Base+0x7204>
   1cf20:	b	1e99c <main@@Base+0x8c54>
   1cf24:	bne	1cf34 <main@@Base+0x71ec>
   1cf28:	ldrb	r0, [r2, #2]!
   1cf2c:	cmp	r0, #32
   1cf30:	bhi	1cf44 <main@@Base+0x71fc>
   1cf34:	mov	r0, r9
   1cf38:	mov	r2, r6
   1cf3c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1cf40:	mov	r2, r0
   1cf44:	cmp	r2, r6
   1cf48:	beq	1e99c <main@@Base+0x8c54>
   1cf4c:	ldrb	r0, [r2]
   1cf50:	cmp	r0, #93	; 0x5d
   1cf54:	bne	1ce54 <main@@Base+0x710c>
   1cf58:	add	r1, r2, #1
   1cf5c:	sub	r0, r6, r1
   1cf60:	cmp	r0, #2
   1cf64:	bge	1e980 <main@@Base+0x8c38>
   1cf68:	b	175e0 <main@@Base+0x1898>
   1cf6c:	bne	1cf80 <main@@Base+0x7238>
   1cf70:	ldrb	r0, [sl, #2]!
   1cf74:	cmp	r0, #32
   1cf78:	mov	r8, sl
   1cf7c:	bhi	1cf90 <main@@Base+0x7248>
   1cf80:	mov	r0, r9
   1cf84:	mov	r2, r6
   1cf88:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1cf8c:	mov	r8, r0
   1cf90:	cmp	r8, r6
   1cf94:	mov	sl, r6
   1cf98:	beq	1de08 <main@@Base+0x80c0>
   1cf9c:	ldrb	r0, [r8]
   1cfa0:	cmp	r0, #93	; 0x5d
   1cfa4:	bne	1cfe0 <main@@Base+0x7298>
   1cfa8:	add	r1, r8, #1
   1cfac:	sub	r0, r6, r1
   1cfb0:	cmp	r0, #2
   1cfb4:	blt	17734 <main@@Base+0x19ec>
   1cfb8:	ldrb	r0, [r1]
   1cfbc:	cmp	r0, #32
   1cfc0:	bhi	1e6a4 <main@@Base+0x895c>
   1cfc4:	ldr	r6, [sp, #44]	; 0x2c
   1cfc8:	ldr	r9, [sp, #40]	; 0x28
   1cfcc:	bne	17734 <main@@Base+0x19ec>
   1cfd0:	ldrb	r0, [r8, #2]!
   1cfd4:	cmp	r0, #32
   1cfd8:	bhi	1c668 <main@@Base+0x6920>
   1cfdc:	b	17734 <main@@Base+0x19ec>
   1cfe0:	mov	sl, r8
   1cfe4:	b	1de08 <main@@Base+0x80c0>
   1cfe8:	bne	1cff8 <main@@Base+0x72b0>
   1cfec:	ldrb	r0, [sl, #2]!
   1cff0:	cmp	r0, #32
   1cff4:	bhi	1d008 <main@@Base+0x72c0>
   1cff8:	mov	r0, r9
   1cffc:	mov	r2, r6
   1d000:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d004:	mov	sl, r0
   1d008:	cmp	r7, sl
   1d00c:	beq	1fd2c <main@@Base+0x9fe4>
   1d010:	mov	r0, #0
   1d014:	mov	r1, #3
   1d018:	str	r0, [sp, #52]	; 0x34
   1d01c:	ldr	r0, [r9]
   1d020:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   1d024:	cmp	r0, #0
   1d028:	bne	1d0a0 <main@@Base+0x7358>
   1d02c:	cmp	sl, r6
   1d030:	beq	1d070 <main@@Base+0x7328>
   1d034:	ldrb	r0, [sl]
   1d038:	cmp	r0, #123	; 0x7b
   1d03c:	bne	1d070 <main@@Base+0x7328>
   1d040:	add	r1, sl, #1
   1d044:	sub	r0, r6, r1
   1d048:	cmp	r0, #2
   1d04c:	blt	16910 <main@@Base+0xbc8>
   1d050:	ldrb	r0, [r1]
   1d054:	cmp	r0, #32
   1d058:	bls	16900 <main@@Base+0xbb8>
   1d05c:	mov	sl, r1
   1d060:	ldr	r2, [sp, #44]	; 0x2c
   1d064:	cmp	sl, r2
   1d068:	bne	1692c <main@@Base+0xbe4>
   1d06c:	b	16970 <main@@Base+0xc28>
   1d070:	mov	r0, r9
   1d074:	mov	r1, sl
   1d078:	mov	r2, r6
   1d07c:	mov	r3, #21
   1d080:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1d084:	mov	sl, r0
   1d088:	ldr	r0, [sp, #32]
   1d08c:	ldr	r0, [r0]
   1d090:	cmp	r0, #0
   1d094:	beq	17878 <main@@Base+0x1b30>
   1d098:	ldr	r6, [sp, #44]	; 0x2c
   1d09c:	ldr	r9, [sp, #40]	; 0x28
   1d0a0:	mov	r0, r9
   1d0a4:	mov	r1, sl
   1d0a8:	mov	r2, r6
   1d0ac:	mov	r3, #33	; 0x21
   1d0b0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1d0b4:	mov	sl, r0
   1d0b8:	ldr	r0, [sp, #52]	; 0x34
   1d0bc:	cmp	r0, #0
   1d0c0:	beq	16638 <main@@Base+0x8f0>
   1d0c4:	ldr	r0, [r9]
   1d0c8:	mov	r1, #14
   1d0cc:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1d0d0:	cmp	r0, #0
   1d0d4:	bne	1798c <main@@Base+0x1c44>
   1d0d8:	b	16638 <main@@Base+0x8f0>
   1d0dc:	bne	1d0ec <main@@Base+0x73a4>
   1d0e0:	ldrb	r0, [sl, #2]!
   1d0e4:	cmp	r0, #32
   1d0e8:	bhi	1d0fc <main@@Base+0x73b4>
   1d0ec:	mov	r0, r9
   1d0f0:	mov	r2, r6
   1d0f4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d0f8:	mov	sl, r0
   1d0fc:	cmp	r7, sl
   1d100:	beq	1fd2c <main@@Base+0x9fe4>
   1d104:	ldr	r0, [r9]
   1d108:	mov	r1, #1
   1d10c:	mov	r2, #1
   1d110:	mvn	r3, #0
   1d114:	bl	2f718 <flatcc_builder_start_vector@@Base>
   1d118:	cmp	r0, #0
   1d11c:	bne	16638 <main@@Base+0x8f0>
   1d120:	cmp	sl, r6
   1d124:	beq	1d168 <main@@Base+0x7420>
   1d128:	ldrb	r0, [sl]
   1d12c:	cmp	r0, #91	; 0x5b
   1d130:	bne	1d168 <main@@Base+0x7420>
   1d134:	add	r1, sl, #1
   1d138:	sub	r0, r6, r1
   1d13c:	cmp	r0, #2
   1d140:	blt	1daec <main@@Base+0x7da4>
   1d144:	ldrb	r0, [r1]
   1d148:	cmp	r0, #32
   1d14c:	bls	1dad4 <main@@Base+0x7d8c>
   1d150:	ldr	r6, [sp, #44]	; 0x2c
   1d154:	ldr	r9, [sp, #40]	; 0x28
   1d158:	mov	sl, r1
   1d15c:	cmp	sl, r6
   1d160:	bne	1db04 <main@@Base+0x7dbc>
   1d164:	b	1db64 <main@@Base+0x7e1c>
   1d168:	mov	r0, r9
   1d16c:	mov	r1, sl
   1d170:	mov	r2, r6
   1d174:	mov	r3, #22
   1d178:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1d17c:	mov	sl, r0
   1d180:	ldr	r0, [r9]
   1d184:	bl	30998 <flatcc_builder_end_vector@@Base>
   1d188:	cmp	r0, #0
   1d18c:	str	r0, [sp, #52]	; 0x34
   1d190:	beq	16638 <main@@Base+0x8f0>
   1d194:	ldr	r0, [r9]
   1d198:	mov	r1, #5
   1d19c:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1d1a0:	cmp	r0, #0
   1d1a4:	bne	1798c <main@@Base+0x1c44>
   1d1a8:	b	16638 <main@@Base+0x8f0>
   1d1ac:	ldr	r9, [sp, #40]	; 0x28
   1d1b0:	bne	1d1c0 <main@@Base+0x7478>
   1d1b4:	ldrb	r0, [r6, #2]!
   1d1b8:	cmp	r0, #32
   1d1bc:	bhi	1d1d0 <main@@Base+0x7488>
   1d1c0:	ldr	r2, [sp, #44]	; 0x2c
   1d1c4:	mov	r0, r9
   1d1c8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d1cc:	mov	r6, r0
   1d1d0:	cmp	r8, r6
   1d1d4:	beq	1bc0c <main@@Base+0x5ec4>
   1d1d8:	ldr	r2, [sp, #44]	; 0x2c
   1d1dc:	mov	r4, #0
   1d1e0:	str	r4, [fp, #-52]	; 0xffffffcc
   1d1e4:	str	r4, [fp, #-56]	; 0xffffffc8
   1d1e8:	str	r4, [fp, #-60]	; 0xffffffc4
   1d1ec:	str	r4, [sp, #56]	; 0x38
   1d1f0:	cmp	r6, r2
   1d1f4:	beq	1d24c <main@@Base+0x7504>
   1d1f8:	sub	r0, fp, #56	; 0x38
   1d1fc:	mov	r1, r6
   1d200:	add	r3, sp, #56	; 0x38
   1d204:	str	r0, [sp]
   1d208:	mov	r0, r9
   1d20c:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1d210:	cmp	r0, r6
   1d214:	beq	1d25c <main@@Base+0x7514>
   1d218:	mov	r8, r0
   1d21c:	ldr	r0, [sp, #56]	; 0x38
   1d220:	cmp	r0, #0
   1d224:	beq	1d26c <main@@Base+0x7524>
   1d228:	ldr	r2, [sp, #44]	; 0x2c
   1d22c:	mov	r0, r9
   1d230:	mov	r1, r8
   1d234:	mov	r3, #8
   1d238:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1d23c:	mov	r8, r0
   1d240:	cmp	r6, r8
   1d244:	bne	1e734 <main@@Base+0x89ec>
   1d248:	b	1e6f4 <main@@Base+0x89ac>
   1d24c:	mov	r8, r2
   1d250:	cmp	r6, r8
   1d254:	bne	1e734 <main@@Base+0x89ec>
   1d258:	b	1e6f4 <main@@Base+0x89ac>
   1d25c:	mov	r8, r6
   1d260:	cmp	r6, r8
   1d264:	bne	1e734 <main@@Base+0x89ec>
   1d268:	b	1e6f4 <main@@Base+0x89ac>
   1d26c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d270:	cmp	r0, #0
   1d274:	beq	1e6e0 <main@@Base+0x8998>
   1d278:	ldr	r9, [sp, #40]	; 0x28
   1d27c:	ldr	r2, [sp, #44]	; 0x2c
   1d280:	mov	r1, r8
   1d284:	mov	r3, #7
   1d288:	mov	r0, r9
   1d28c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1d290:	mov	r8, r0
   1d294:	cmp	r6, r8
   1d298:	bne	1e734 <main@@Base+0x89ec>
   1d29c:	b	1e6f4 <main@@Base+0x89ac>
   1d2a0:	ldr	r9, [sp, #40]	; 0x28
   1d2a4:	bne	1d2b4 <main@@Base+0x756c>
   1d2a8:	ldrb	r0, [r6, #2]!
   1d2ac:	cmp	r0, #32
   1d2b0:	bhi	1d2c4 <main@@Base+0x757c>
   1d2b4:	ldr	r2, [sp, #44]	; 0x2c
   1d2b8:	mov	r0, r9
   1d2bc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d2c0:	mov	r6, r0
   1d2c4:	cmp	r8, r6
   1d2c8:	beq	1bd10 <main@@Base+0x5fc8>
   1d2cc:	ldr	r2, [sp, #44]	; 0x2c
   1d2d0:	mov	r4, #0
   1d2d4:	str	r4, [fp, #-52]	; 0xffffffcc
   1d2d8:	str	r4, [fp, #-56]	; 0xffffffc8
   1d2dc:	str	r4, [sp, #60]	; 0x3c
   1d2e0:	str	r4, [sp, #56]	; 0x38
   1d2e4:	str	r4, [fp, #-60]	; 0xffffffc4
   1d2e8:	cmp	r6, r2
   1d2ec:	beq	1d34c <main@@Base+0x7604>
   1d2f0:	sub	r0, fp, #56	; 0x38
   1d2f4:	mov	r1, r6
   1d2f8:	sub	r3, fp, #60	; 0x3c
   1d2fc:	str	r0, [sp]
   1d300:	mov	r0, r9
   1d304:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1d308:	cmp	r0, r6
   1d30c:	beq	1d360 <main@@Base+0x7618>
   1d310:	mov	r8, r0
   1d314:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d318:	cmp	r0, #0
   1d31c:	beq	1d378 <main@@Base+0x7630>
   1d320:	ldr	r2, [sp, #44]	; 0x2c
   1d324:	mov	r0, r9
   1d328:	mov	r1, r8
   1d32c:	mov	r3, #8
   1d330:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1d334:	mov	r8, r0
   1d338:	mov	r4, #0
   1d33c:	mov	r5, #0
   1d340:	cmp	r6, r8
   1d344:	bne	1d3d4 <main@@Base+0x768c>
   1d348:	b	1d390 <main@@Base+0x7648>
   1d34c:	mov	r5, #0
   1d350:	mov	r8, r2
   1d354:	cmp	r6, r8
   1d358:	bne	1d3d4 <main@@Base+0x768c>
   1d35c:	b	1d390 <main@@Base+0x7648>
   1d360:	mov	r4, #0
   1d364:	mov	r5, #0
   1d368:	mov	r8, r6
   1d36c:	cmp	r6, r8
   1d370:	bne	1d3d4 <main@@Base+0x768c>
   1d374:	b	1d390 <main@@Base+0x7648>
   1d378:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1d37c:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1d380:	str	r5, [sp, #60]	; 0x3c
   1d384:	str	r4, [sp, #56]	; 0x38
   1d388:	cmp	r6, r8
   1d38c:	bne	1d3d4 <main@@Base+0x768c>
   1d390:	ldr	r4, [sp, #44]	; 0x2c
   1d394:	add	r0, sp, #56	; 0x38
   1d398:	mov	r1, r6
   1d39c:	str	r0, [sp]
   1d3a0:	movw	r0, #53516	; 0xd10c
   1d3a4:	movt	r0, #5
   1d3a8:	add	r3, r0, #60	; 0x3c
   1d3ac:	mov	r0, r9
   1d3b0:	mov	r2, r4
   1d3b4:	bl	24abc <main@@Base+0xed74>
   1d3b8:	mov	r8, r0
   1d3bc:	cmp	r0, r6
   1d3c0:	cmpne	r8, r4
   1d3c4:	beq	1fecc <main@@Base+0xa184>
   1d3c8:	ldr	r4, [sp, #56]	; 0x38
   1d3cc:	ldr	r5, [sp, #60]	; 0x3c
   1d3d0:	ldr	r9, [sp, #40]	; 0x28
   1d3d4:	ldr	r6, [sp, #44]	; 0x2c
   1d3d8:	orrs	r0, r4, r5
   1d3dc:	bne	1d3ec <main@@Base+0x76a4>
   1d3e0:	ldrb	r0, [r9, #8]
   1d3e4:	tst	r0, #2
   1d3e8:	beq	1fd40 <main@@Base+0x9ff8>
   1d3ec:	ldr	r0, [r9]
   1d3f0:	mov	r1, #19
   1d3f4:	mov	r2, #8
   1d3f8:	mov	r3, #8
   1d3fc:	bl	31040 <flatcc_builder_table_add@@Base>
   1d400:	cmp	r0, #0
   1d404:	beq	1fecc <main@@Base+0xa184>
   1d408:	strd	r4, [r0]
   1d40c:	sub	r0, r6, r8
   1d410:	cmp	r0, #2
   1d414:	bge	1fd4c <main@@Base+0xa004>
   1d418:	b	1fdc0 <main@@Base+0xa078>
   1d41c:	beq	1e940 <main@@Base+0x8bf8>
   1d420:	b	1e950 <main@@Base+0x8c08>
   1d424:	ldr	r6, [sp, #44]	; 0x2c
   1d428:	ldr	r9, [sp, #40]	; 0x28
   1d42c:	bne	1d43c <main@@Base+0x76f4>
   1d430:	ldrb	r0, [sl, #2]!
   1d434:	cmp	r0, #32
   1d438:	bhi	1d44c <main@@Base+0x7704>
   1d43c:	mov	r0, r9
   1d440:	mov	r2, r6
   1d444:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d448:	mov	sl, r0
   1d44c:	cmp	r7, sl
   1d450:	beq	1fd2c <main@@Base+0x9fe4>
   1d454:	ldr	r0, [r9]
   1d458:	bl	2f7a4 <flatcc_builder_start_offset_vector@@Base>
   1d45c:	cmp	r0, #0
   1d460:	bne	16638 <main@@Base+0x8f0>
   1d464:	cmp	sl, r6
   1d468:	beq	1d4ac <main@@Base+0x7764>
   1d46c:	ldrb	r0, [sl]
   1d470:	cmp	r0, #91	; 0x5b
   1d474:	bne	1d4ac <main@@Base+0x7764>
   1d478:	add	r1, sl, #1
   1d47c:	sub	r0, r6, r1
   1d480:	cmp	r0, #2
   1d484:	blt	1e7a0 <main@@Base+0x8a58>
   1d488:	ldrb	r0, [r1]
   1d48c:	cmp	r0, #32
   1d490:	bls	1e788 <main@@Base+0x8a40>
   1d494:	ldr	r6, [sp, #44]	; 0x2c
   1d498:	mov	sl, r1
   1d49c:	cmp	sl, r6
   1d4a0:	mov	r2, r6
   1d4a4:	bne	1e7bc <main@@Base+0x8a74>
   1d4a8:	b	1e80c <main@@Base+0x8ac4>
   1d4ac:	mov	r0, r9
   1d4b0:	mov	r1, sl
   1d4b4:	mov	r2, r6
   1d4b8:	mov	r3, #22
   1d4bc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1d4c0:	mov	sl, r0
   1d4c4:	ldr	r0, [r9]
   1d4c8:	bl	2fa5c <flatcc_builder_end_offset_vector@@Base>
   1d4cc:	cmp	r0, #0
   1d4d0:	str	r0, [sp, #52]	; 0x34
   1d4d4:	beq	16638 <main@@Base+0x8f0>
   1d4d8:	ldr	r0, [r9]
   1d4dc:	mov	r1, #10
   1d4e0:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1d4e4:	cmp	r0, #0
   1d4e8:	bne	1798c <main@@Base+0x1c44>
   1d4ec:	b	16638 <main@@Base+0x8f0>
   1d4f0:	ldr	r6, [sp, #44]	; 0x2c
   1d4f4:	ldr	r9, [sp, #40]	; 0x28
   1d4f8:	bne	1d508 <main@@Base+0x77c0>
   1d4fc:	ldrb	r0, [sl, #19]!
   1d500:	cmp	r0, #32
   1d504:	bhi	1d518 <main@@Base+0x77d0>
   1d508:	mov	r0, r9
   1d50c:	mov	r2, r6
   1d510:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d514:	mov	sl, r0
   1d518:	cmp	sl, r6
   1d51c:	beq	1d560 <main@@Base+0x7818>
   1d520:	ldrb	r0, [sl]
   1d524:	cmp	r0, #58	; 0x3a
   1d528:	bne	1d560 <main@@Base+0x7818>
   1d52c:	add	r1, sl, #1
   1d530:	sub	r0, r6, r1
   1d534:	cmp	r0, #2
   1d538:	blt	1fba0 <main@@Base+0x9e58>
   1d53c:	ldrb	r0, [r1]
   1d540:	cmp	r0, #32
   1d544:	bls	1fb88 <main@@Base+0x9e40>
   1d548:	ldr	r6, [sp, #44]	; 0x2c
   1d54c:	ldr	r9, [sp, #40]	; 0x28
   1d550:	mov	sl, r1
   1d554:	cmp	r7, sl
   1d558:	bne	1fbb8 <main@@Base+0x9e70>
   1d55c:	b	1fd2c <main@@Base+0x9fe4>
   1d560:	mov	r0, r9
   1d564:	mov	r1, sl
   1d568:	mov	r2, r6
   1d56c:	mov	r3, #4
   1d570:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1d574:	b	1fbac <main@@Base+0x9e64>
   1d578:	ldr	r6, [sp, #44]	; 0x2c
   1d57c:	ldr	r9, [sp, #40]	; 0x28
   1d580:	bne	1d590 <main@@Base+0x7848>
   1d584:	ldrb	r0, [sl, #19]!
   1d588:	cmp	r0, #32
   1d58c:	bhi	1d5a0 <main@@Base+0x7858>
   1d590:	mov	r0, r9
   1d594:	mov	r2, r6
   1d598:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d59c:	mov	sl, r0
   1d5a0:	cmp	sl, r6
   1d5a4:	beq	1d5e8 <main@@Base+0x78a0>
   1d5a8:	ldrb	r0, [sl]
   1d5ac:	cmp	r0, #58	; 0x3a
   1d5b0:	bne	1d5e8 <main@@Base+0x78a0>
   1d5b4:	add	r1, sl, #1
   1d5b8:	sub	r0, r6, r1
   1d5bc:	cmp	r0, #2
   1d5c0:	blt	1fc94 <main@@Base+0x9f4c>
   1d5c4:	ldrb	r0, [r1]
   1d5c8:	cmp	r0, #32
   1d5cc:	bls	1fc7c <main@@Base+0x9f34>
   1d5d0:	ldr	r6, [sp, #44]	; 0x2c
   1d5d4:	ldr	r9, [sp, #40]	; 0x28
   1d5d8:	mov	sl, r1
   1d5dc:	cmp	r7, sl
   1d5e0:	bne	1fcac <main@@Base+0x9f64>
   1d5e4:	b	1fd2c <main@@Base+0x9fe4>
   1d5e8:	mov	r0, r9
   1d5ec:	mov	r1, sl
   1d5f0:	mov	r2, r6
   1d5f4:	mov	r3, #4
   1d5f8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1d5fc:	b	1fca0 <main@@Base+0x9f58>
   1d600:	ldr	r6, [sp, #44]	; 0x2c
   1d604:	ldr	r9, [sp, #40]	; 0x28
   1d608:	bne	1d618 <main@@Base+0x78d0>
   1d60c:	ldrb	r0, [sl, #2]!
   1d610:	cmp	r0, #32
   1d614:	bhi	1d628 <main@@Base+0x78e0>
   1d618:	mov	r0, r9
   1d61c:	mov	r2, r6
   1d620:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d624:	mov	sl, r0
   1d628:	cmp	r7, sl
   1d62c:	beq	1fd2c <main@@Base+0x9fe4>
   1d630:	mov	r2, r6
   1d634:	mov	r6, #0
   1d638:	cmp	sl, r2
   1d63c:	str	r6, [fp, #-52]	; 0xffffffcc
   1d640:	str	r6, [fp, #-56]	; 0xffffffc8
   1d644:	str	r6, [fp, #-60]	; 0xffffffc4
   1d648:	str	r6, [sp, #56]	; 0x38
   1d64c:	beq	1d6a8 <main@@Base+0x7960>
   1d650:	sub	r0, fp, #56	; 0x38
   1d654:	mov	r1, sl
   1d658:	add	r3, sp, #56	; 0x38
   1d65c:	str	r0, [sp]
   1d660:	mov	r0, r9
   1d664:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1d668:	cmp	r0, sl
   1d66c:	beq	1d6b8 <main@@Base+0x7970>
   1d670:	ldr	r2, [sp, #56]	; 0x38
   1d674:	mov	r8, r0
   1d678:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d67c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1d680:	cmp	r2, #0
   1d684:	beq	1d6c8 <main@@Base+0x7980>
   1d688:	subs	r2, r0, #-2147483647	; 0x80000001
   1d68c:	sbcs	r1, r1, #0
   1d690:	bcc	1d6fc <main@@Base+0x79b4>
   1d694:	ldr	r9, [sp, #40]	; 0x28
   1d698:	ldr	r2, [sp, #44]	; 0x2c
   1d69c:	mov	r1, r8
   1d6a0:	mov	r3, #8
   1d6a4:	b	1d6e4 <main@@Base+0x799c>
   1d6a8:	mov	r8, r2
   1d6ac:	cmp	sl, r8
   1d6b0:	bne	1f1b8 <main@@Base+0x9470>
   1d6b4:	b	1f17c <main@@Base+0x9434>
   1d6b8:	mov	r8, sl
   1d6bc:	cmp	sl, r8
   1d6c0:	bne	1f1b8 <main@@Base+0x9470>
   1d6c4:	b	1f17c <main@@Base+0x9434>
   1d6c8:	subs	r2, r0, #-2147483648	; 0x80000000
   1d6cc:	sbcs	r1, r1, #0
   1d6d0:	bcc	1f168 <main@@Base+0x9420>
   1d6d4:	ldr	r9, [sp, #40]	; 0x28
   1d6d8:	ldr	r2, [sp, #44]	; 0x2c
   1d6dc:	mov	r1, r8
   1d6e0:	mov	r3, #7
   1d6e4:	mov	r0, r9
   1d6e8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1d6ec:	mov	r8, r0
   1d6f0:	cmp	sl, r8
   1d6f4:	bne	1f1b8 <main@@Base+0x9470>
   1d6f8:	b	1f17c <main@@Base+0x9434>
   1d6fc:	rsb	r6, r0, #0
   1d700:	ldr	r9, [sp, #40]	; 0x28
   1d704:	str	r6, [fp, #-60]	; 0xffffffc4
   1d708:	cmp	sl, r8
   1d70c:	bne	1f1b8 <main@@Base+0x9470>
   1d710:	b	1f17c <main@@Base+0x9434>
   1d714:	ldr	r6, [sp, #44]	; 0x2c
   1d718:	ldr	r9, [sp, #40]	; 0x28
   1d71c:	bne	1d730 <main@@Base+0x79e8>
   1d720:	ldrb	r0, [sl, #2]!
   1d724:	cmp	r0, #32
   1d728:	mov	r8, sl
   1d72c:	bhi	1a524 <main@@Base+0x47dc>
   1d730:	mov	r0, r9
   1d734:	mov	r2, r6
   1d738:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d73c:	b	1a520 <main@@Base+0x47d8>
   1d740:	ldr	r6, [sp, #44]	; 0x2c
   1d744:	ldr	r9, [sp, #40]	; 0x28
   1d748:	bne	1d758 <main@@Base+0x7a10>
   1d74c:	ldrb	r0, [sl, #2]!
   1d750:	cmp	r0, #32
   1d754:	bhi	1d768 <main@@Base+0x7a20>
   1d758:	mov	r0, r9
   1d75c:	mov	r2, r6
   1d760:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d764:	mov	sl, r0
   1d768:	cmp	sl, r6
   1d76c:	mov	r2, r6
   1d770:	beq	1d7cc <main@@Base+0x7a84>
   1d774:	ldrb	r0, [sl]
   1d778:	cmp	r0, #93	; 0x5d
   1d77c:	bne	1d7c0 <main@@Base+0x7a78>
   1d780:	ldr	r6, [sp, #44]	; 0x2c
   1d784:	ldr	r9, [sp, #40]	; 0x28
   1d788:	add	r1, sl, #1
   1d78c:	sub	r0, r6, r1
   1d790:	cmp	r0, #2
   1d794:	blt	177b4 <main@@Base+0x1a6c>
   1d798:	ldrb	r0, [r1]
   1d79c:	cmp	r0, #32
   1d7a0:	bhi	1f6b8 <main@@Base+0x9970>
   1d7a4:	ldr	r6, [sp, #44]	; 0x2c
   1d7a8:	ldr	r9, [sp, #40]	; 0x28
   1d7ac:	bne	177b4 <main@@Base+0x1a6c>
   1d7b0:	ldrb	r0, [sl, #2]!
   1d7b4:	cmp	r0, #32
   1d7b8:	bhi	1cd5c <main@@Base+0x7014>
   1d7bc:	b	177b4 <main@@Base+0x1a6c>
   1d7c0:	ldr	r6, [sp, #44]	; 0x2c
   1d7c4:	ldr	r9, [sp, #40]	; 0x28
   1d7c8:	mov	r2, sl
   1d7cc:	mov	r1, r2
   1d7d0:	mov	r0, r9
   1d7d4:	mov	r2, r6
   1d7d8:	add	r3, sp, #52	; 0x34
   1d7dc:	bl	165f8 <main@@Base+0x8b0>
   1d7e0:	mov	sl, r0
   1d7e4:	ldr	r0, [sp, #52]	; 0x34
   1d7e8:	cmp	r0, #0
   1d7ec:	beq	16638 <main@@Base+0x8f0>
   1d7f0:	ldr	r0, [r9]
   1d7f4:	mov	r1, #1
   1d7f8:	bl	2ef60 <flatcc_builder_extend_offset_vector@@Base>
   1d7fc:	cmp	r0, #0
   1d800:	beq	16638 <main@@Base+0x8f0>
   1d804:	ldr	r1, [sp, #52]	; 0x34
   1d808:	str	r1, [r0]
   1d80c:	sub	r0, r6, sl
   1d810:	cmp	r0, #2
   1d814:	blt	1d848 <main@@Base+0x7b00>
   1d818:	ldrb	r0, [sl]
   1d81c:	cmp	r0, #32
   1d820:	bls	1d834 <main@@Base+0x7aec>
   1d824:	mov	r2, sl
   1d828:	cmp	r2, r6
   1d82c:	bne	1d864 <main@@Base+0x7b1c>
   1d830:	b	1f684 <main@@Base+0x993c>
   1d834:	bne	1d848 <main@@Base+0x7b00>
   1d838:	mov	r2, sl
   1d83c:	ldrb	r0, [r2, #1]!
   1d840:	cmp	r0, #32
   1d844:	bhi	1d85c <main@@Base+0x7b14>
   1d848:	mov	r0, r9
   1d84c:	mov	r1, sl
   1d850:	mov	r2, r6
   1d854:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d858:	mov	r2, r0
   1d85c:	cmp	r2, r6
   1d860:	beq	1f684 <main@@Base+0x993c>
   1d864:	ldrb	r0, [r2]
   1d868:	cmp	r0, #44	; 0x2c
   1d86c:	bne	1f68c <main@@Base+0x9944>
   1d870:	add	r1, r2, #1
   1d874:	sub	r0, r6, r1
   1d878:	cmp	r0, #2
   1d87c:	blt	1d8ac <main@@Base+0x7b64>
   1d880:	ldrb	r0, [r1]
   1d884:	cmp	r0, #32
   1d888:	bls	1d89c <main@@Base+0x7b54>
   1d88c:	mov	r2, r1
   1d890:	cmp	r2, r6
   1d894:	bne	1d8c4 <main@@Base+0x7b7c>
   1d898:	b	1f6d0 <main@@Base+0x9988>
   1d89c:	bne	1d8ac <main@@Base+0x7b64>
   1d8a0:	ldrb	r0, [r2, #2]!
   1d8a4:	cmp	r0, #32
   1d8a8:	bhi	1d8bc <main@@Base+0x7b74>
   1d8ac:	mov	r0, r9
   1d8b0:	mov	r2, r6
   1d8b4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d8b8:	mov	r2, r0
   1d8bc:	cmp	r2, r6
   1d8c0:	beq	1f6d0 <main@@Base+0x9988>
   1d8c4:	ldrb	r0, [r2]
   1d8c8:	cmp	r0, #93	; 0x5d
   1d8cc:	bne	1d7cc <main@@Base+0x7a84>
   1d8d0:	add	r1, r2, #1
   1d8d4:	sub	r0, r6, r1
   1d8d8:	cmp	r0, #2
   1d8dc:	bge	1f6ac <main@@Base+0x9964>
   1d8e0:	b	177b4 <main@@Base+0x1a6c>
   1d8e4:	ldr	r6, [sp, #44]	; 0x2c
   1d8e8:	ldr	r9, [sp, #40]	; 0x28
   1d8ec:	bne	1d8fc <main@@Base+0x7bb4>
   1d8f0:	ldrb	r0, [sl, #2]!
   1d8f4:	cmp	r0, #32
   1d8f8:	bhi	1d90c <main@@Base+0x7bc4>
   1d8fc:	mov	r0, r9
   1d900:	mov	r2, r6
   1d904:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d908:	mov	sl, r0
   1d90c:	cmp	r8, sl
   1d910:	beq	1d974 <main@@Base+0x7c2c>
   1d914:	ldr	r0, [r9]
   1d918:	mov	r1, #8
   1d91c:	mov	r2, #8
   1d920:	mvn	r3, #-536870912	; 0xe0000000
   1d924:	bl	2f718 <flatcc_builder_start_vector@@Base>
   1d928:	cmp	r0, #0
   1d92c:	bne	16638 <main@@Base+0x8f0>
   1d930:	cmp	sl, r6
   1d934:	beq	1d980 <main@@Base+0x7c38>
   1d938:	ldrb	r0, [sl]
   1d93c:	cmp	r0, #91	; 0x5b
   1d940:	bne	1d980 <main@@Base+0x7c38>
   1d944:	add	r1, sl, #1
   1d948:	sub	r0, r6, r1
   1d94c:	cmp	r0, #2
   1d950:	blt	1f208 <main@@Base+0x94c0>
   1d954:	ldrb	r0, [r1]
   1d958:	cmp	r0, #32
   1d95c:	bls	1f1f0 <main@@Base+0x94a8>
   1d960:	ldr	r6, [sp, #44]	; 0x2c
   1d964:	mov	sl, r1
   1d968:	cmp	sl, r6
   1d96c:	bne	1f220 <main@@Base+0x94d8>
   1d970:	b	1f27c <main@@Base+0x9534>
   1d974:	mov	r0, r9
   1d978:	mov	r1, r8
   1d97c:	b	1fd34 <main@@Base+0x9fec>
   1d980:	mov	r0, r9
   1d984:	mov	r1, sl
   1d988:	mov	r2, r6
   1d98c:	mov	r3, #22
   1d990:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1d994:	mov	sl, r0
   1d998:	ldr	r0, [r9]
   1d99c:	bl	30998 <flatcc_builder_end_vector@@Base>
   1d9a0:	cmp	r0, #0
   1d9a4:	str	r0, [sp, #52]	; 0x34
   1d9a8:	beq	16638 <main@@Base+0x8f0>
   1d9ac:	ldr	r0, [r9]
   1d9b0:	mov	r1, #32
   1d9b4:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1d9b8:	cmp	r0, #0
   1d9bc:	bne	1798c <main@@Base+0x1c44>
   1d9c0:	b	16638 <main@@Base+0x8f0>
   1d9c4:	ldr	r6, [sp, #44]	; 0x2c
   1d9c8:	ldr	r9, [sp, #40]	; 0x28
   1d9cc:	bne	1d9dc <main@@Base+0x7c94>
   1d9d0:	ldrb	r0, [sl, #2]!
   1d9d4:	cmp	r0, #32
   1d9d8:	bhi	1d9ec <main@@Base+0x7ca4>
   1d9dc:	mov	r0, r9
   1d9e0:	mov	r2, r6
   1d9e4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1d9e8:	mov	sl, r0
   1d9ec:	cmp	r7, sl
   1d9f0:	beq	1fd2c <main@@Base+0x9fe4>
   1d9f4:	cmp	sl, r6
   1d9f8:	beq	1da64 <main@@Base+0x7d1c>
   1d9fc:	ldrb	r0, [sl]
   1da00:	cmp	r0, #91	; 0x5b
   1da04:	bne	1da64 <main@@Base+0x7d1c>
   1da08:	ldr	r0, [r9]
   1da0c:	mov	r1, #1
   1da10:	mov	r2, #1
   1da14:	mvn	r3, #0
   1da18:	bl	2f718 <flatcc_builder_start_vector@@Base>
   1da1c:	cmp	r0, #0
   1da20:	bne	1fed0 <main@@Base+0xa188>
   1da24:	ldrb	r0, [sl]
   1da28:	cmp	r0, #91	; 0x5b
   1da2c:	bne	1dabc <main@@Base+0x7d74>
   1da30:	ldr	r0, [sp, #44]	; 0x2c
   1da34:	add	r1, sl, #1
   1da38:	sub	r0, r0, r1
   1da3c:	cmp	r0, #2
   1da40:	blt	17330 <main@@Base+0x15e8>
   1da44:	ldrb	r0, [r1]
   1da48:	cmp	r0, #32
   1da4c:	bls	17320 <main@@Base+0x15d8>
   1da50:	mov	sl, r1
   1da54:	ldr	r5, [sp, #44]	; 0x2c
   1da58:	cmp	sl, r5
   1da5c:	bne	1734c <main@@Base+0x1604>
   1da60:	b	1735c <main@@Base+0x1614>
   1da64:	ldr	r0, [r9]
   1da68:	mov	r1, #0
   1da6c:	mov	r2, #0
   1da70:	mov	r3, #0
   1da74:	bl	2e6d8 <flatcc_builder_start_buffer@@Base>
   1da78:	cmp	r0, #0
   1da7c:	bne	16638 <main@@Base+0x8f0>
   1da80:	mov	r0, r9
   1da84:	mov	r1, sl
   1da88:	mov	r2, r6
   1da8c:	add	r3, sp, #52	; 0x34
   1da90:	bl	165f8 <main@@Base+0x8b0>
   1da94:	ldr	r1, [sp, #52]	; 0x34
   1da98:	mov	sl, r0
   1da9c:	cmp	r1, #0
   1daa0:	beq	16638 <main@@Base+0x8f0>
   1daa4:	ldr	r0, [r9]
   1daa8:	bl	2e8c8 <flatcc_builder_end_buffer@@Base>
   1daac:	cmp	r0, #0
   1dab0:	str	r0, [sp, #52]	; 0x34
   1dab4:	bne	17978 <main@@Base+0x1c30>
   1dab8:	b	16638 <main@@Base+0x8f0>
   1dabc:	ldr	r0, [sp, #40]	; 0x28
   1dac0:	ldr	r2, [sp, #44]	; 0x2c
   1dac4:	mov	r1, sl
   1dac8:	mov	r3, #22
   1dacc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1dad0:	b	17958 <main@@Base+0x1c10>
   1dad4:	ldr	r6, [sp, #44]	; 0x2c
   1dad8:	ldr	r9, [sp, #40]	; 0x28
   1dadc:	bne	1daec <main@@Base+0x7da4>
   1dae0:	ldrb	r0, [sl, #2]!
   1dae4:	cmp	r0, #32
   1dae8:	bhi	1dafc <main@@Base+0x7db4>
   1daec:	mov	r0, r9
   1daf0:	mov	r2, r6
   1daf4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1daf8:	mov	sl, r0
   1dafc:	cmp	sl, r6
   1db00:	beq	1db64 <main@@Base+0x7e1c>
   1db04:	ldrb	r0, [sl]
   1db08:	cmp	r0, #93	; 0x5d
   1db0c:	bne	1db5c <main@@Base+0x7e14>
   1db10:	ldr	r6, [sp, #44]	; 0x2c
   1db14:	ldr	r9, [sp, #40]	; 0x28
   1db18:	add	r1, sl, #1
   1db1c:	sub	r0, r6, r1
   1db20:	cmp	r0, #2
   1db24:	blt	1db4c <main@@Base+0x7e04>
   1db28:	ldrb	r0, [r1]
   1db2c:	cmp	r0, #32
   1db30:	bhi	1f8d0 <main@@Base+0x9b88>
   1db34:	ldr	r6, [sp, #44]	; 0x2c
   1db38:	ldr	r9, [sp, #40]	; 0x28
   1db3c:	bne	1db4c <main@@Base+0x7e04>
   1db40:	ldrb	r0, [sl, #2]!
   1db44:	cmp	r0, #32
   1db48:	bhi	1d180 <main@@Base+0x7438>
   1db4c:	mov	r0, r9
   1db50:	mov	r2, r6
   1db54:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1db58:	b	1d17c <main@@Base+0x7434>
   1db5c:	ldr	r9, [sp, #40]	; 0x28
   1db60:	mov	r6, sl
   1db64:	mov	r0, #0
   1db68:	mov	r1, #1
   1db6c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1db70:	ldr	r0, [r9]
   1db74:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   1db78:	cmp	r0, #0
   1db7c:	beq	1ff18 <main@@Base+0xa1d0>
   1db80:	mov	sl, r6
   1db84:	ldr	r6, [sp, #44]	; 0x2c
   1db88:	ldr	r9, [sp, #40]	; 0x28
   1db8c:	mov	r7, r0
   1db90:	mov	r5, #0
   1db94:	cmp	sl, r6
   1db98:	str	r5, [fp, #-52]	; 0xffffffcc
   1db9c:	str	r5, [fp, #-56]	; 0xffffffc8
   1dba0:	strb	r5, [fp, #-60]	; 0xffffffc4
   1dba4:	str	r5, [sp, #56]	; 0x38
   1dba8:	beq	1dc00 <main@@Base+0x7eb8>
   1dbac:	sub	r0, fp, #56	; 0x38
   1dbb0:	mov	r1, sl
   1dbb4:	mov	r2, r6
   1dbb8:	add	r3, sp, #56	; 0x38
   1dbbc:	str	r0, [sp]
   1dbc0:	mov	r0, r9
   1dbc4:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1dbc8:	cmp	r0, sl
   1dbcc:	beq	1dc10 <main@@Base+0x7ec8>
   1dbd0:	mov	r1, r0
   1dbd4:	ldr	r0, [sp, #56]	; 0x38
   1dbd8:	cmp	r0, #0
   1dbdc:	beq	1dc20 <main@@Base+0x7ed8>
   1dbe0:	mov	r0, r9
   1dbe4:	mov	r2, r6
   1dbe8:	mov	r3, #8
   1dbec:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1dbf0:	mov	r1, r0
   1dbf4:	cmp	sl, r1
   1dbf8:	bne	1dcb0 <main@@Base+0x7f68>
   1dbfc:	b	1dc74 <main@@Base+0x7f2c>
   1dc00:	mov	r1, r6
   1dc04:	cmp	sl, r1
   1dc08:	bne	1dcb0 <main@@Base+0x7f68>
   1dc0c:	b	1dc74 <main@@Base+0x7f2c>
   1dc10:	mov	r1, sl
   1dc14:	cmp	sl, r1
   1dc18:	bne	1dcb0 <main@@Base+0x7f68>
   1dc1c:	b	1dc74 <main@@Base+0x7f2c>
   1dc20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dc24:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1dc28:	subs	r3, r0, #256	; 0x100
   1dc2c:	sbcs	r2, r2, #0
   1dc30:	bcc	1dc5c <main@@Base+0x7f14>
   1dc34:	ldr	r9, [sp, #40]	; 0x28
   1dc38:	ldr	r6, [sp, #44]	; 0x2c
   1dc3c:	mov	r3, #7
   1dc40:	mov	r0, r9
   1dc44:	mov	r2, r6
   1dc48:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1dc4c:	mov	r1, r0
   1dc50:	cmp	sl, r1
   1dc54:	bne	1dcb0 <main@@Base+0x7f68>
   1dc58:	b	1dc74 <main@@Base+0x7f2c>
   1dc5c:	ldr	r6, [sp, #44]	; 0x2c
   1dc60:	ldr	r9, [sp, #40]	; 0x28
   1dc64:	mov	r5, r0
   1dc68:	strb	r0, [fp, #-60]	; 0xffffffc4
   1dc6c:	cmp	sl, r1
   1dc70:	bne	1dcb0 <main@@Base+0x7f68>
   1dc74:	sub	r0, fp, #60	; 0x3c
   1dc78:	mov	r1, sl
   1dc7c:	mov	r2, r6
   1dc80:	str	r0, [sp]
   1dc84:	movw	r0, #53396	; 0xd094
   1dc88:	movt	r0, #5
   1dc8c:	add	r3, r0, #24
   1dc90:	mov	r0, r9
   1dc94:	bl	22024 <main@@Base+0xc2dc>
   1dc98:	mov	r1, r0
   1dc9c:	cmp	r0, sl
   1dca0:	beq	1ff24 <main@@Base+0xa1dc>
   1dca4:	cmp	r1, r6
   1dca8:	beq	1ff24 <main@@Base+0xa1dc>
   1dcac:	ldrb	r5, [fp, #-60]	; 0xffffffc4
   1dcb0:	sub	r0, r6, r1
   1dcb4:	strb	r5, [r7]
   1dcb8:	cmp	r0, #2
   1dcbc:	blt	1dcf0 <main@@Base+0x7fa8>
   1dcc0:	ldrb	r0, [r1]
   1dcc4:	cmp	r0, #32
   1dcc8:	bls	1dcdc <main@@Base+0x7f94>
   1dccc:	mov	sl, r1
   1dcd0:	cmp	sl, r6
   1dcd4:	bne	1dd08 <main@@Base+0x7fc0>
   1dcd8:	b	1f6c8 <main@@Base+0x9980>
   1dcdc:	bne	1dcf0 <main@@Base+0x7fa8>
   1dce0:	mov	sl, r1
   1dce4:	ldrb	r0, [sl, #1]!
   1dce8:	cmp	r0, #32
   1dcec:	bhi	1dd00 <main@@Base+0x7fb8>
   1dcf0:	mov	r0, r9
   1dcf4:	mov	r2, r6
   1dcf8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1dcfc:	mov	sl, r0
   1dd00:	cmp	sl, r6
   1dd04:	beq	1f6c8 <main@@Base+0x9980>
   1dd08:	ldrb	r0, [sl]
   1dd0c:	cmp	r0, #44	; 0x2c
   1dd10:	bne	1f6dc <main@@Base+0x9994>
   1dd14:	add	r1, sl, #1
   1dd18:	sub	r0, r6, r1
   1dd1c:	cmp	r0, #2
   1dd20:	blt	1dd50 <main@@Base+0x8008>
   1dd24:	ldrb	r0, [r1]
   1dd28:	cmp	r0, #32
   1dd2c:	bls	1dd40 <main@@Base+0x7ff8>
   1dd30:	mov	sl, r1
   1dd34:	cmp	sl, r6
   1dd38:	bne	1dd68 <main@@Base+0x8020>
   1dd3c:	b	1f6fc <main@@Base+0x99b4>
   1dd40:	bne	1dd50 <main@@Base+0x8008>
   1dd44:	ldrb	r0, [sl, #2]!
   1dd48:	cmp	r0, #32
   1dd4c:	bhi	1dd60 <main@@Base+0x8018>
   1dd50:	mov	r0, r9
   1dd54:	mov	r2, r6
   1dd58:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1dd5c:	mov	sl, r0
   1dd60:	cmp	sl, r6
   1dd64:	beq	1f6fc <main@@Base+0x99b4>
   1dd68:	ldrb	r0, [sl]
   1dd6c:	cmp	r0, #93	; 0x5d
   1dd70:	beq	1f8b4 <main@@Base+0x9b6c>
   1dd74:	mov	r0, #0
   1dd78:	mov	r1, #1
   1dd7c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1dd80:	ldr	r0, [r9]
   1dd84:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   1dd88:	mov	r7, r0
   1dd8c:	cmp	r0, #0
   1dd90:	bne	1db90 <main@@Base+0x7e48>
   1dd94:	b	16638 <main@@Base+0x8f0>
   1dd98:	ldr	r9, [sp, #40]	; 0x28
   1dd9c:	ldr	r6, [sp, #44]	; 0x2c
   1dda0:	mov	r1, sl
   1dda4:	mov	r0, r9
   1dda8:	mov	r2, r6
   1ddac:	mov	r3, #9
   1ddb0:	b	1ab20 <main@@Base+0x4dd8>
   1ddb4:	mov	r0, r9
   1ddb8:	mov	r1, r6
   1ddbc:	b	1ddd0 <main@@Base+0x8088>
   1ddc0:	ldr	r9, [sp, #40]	; 0x28
   1ddc4:	ldr	r6, [sp, #44]	; 0x2c
   1ddc8:	mov	r1, r2
   1ddcc:	mov	r0, r9
   1ddd0:	mov	r2, r6
   1ddd4:	mov	r3, #10
   1ddd8:	b	1de74 <main@@Base+0x812c>
   1dddc:	ldr	r6, [sp, #44]	; 0x2c
   1dde0:	ldr	r9, [sp, #40]	; 0x28
   1dde4:	bne	1ddf8 <main@@Base+0x80b0>
   1dde8:	ldrb	r0, [r2, #2]!
   1ddec:	cmp	r0, #32
   1ddf0:	mov	sl, r2
   1ddf4:	bhi	1de7c <main@@Base+0x8134>
   1ddf8:	mov	r0, r9
   1ddfc:	mov	r2, r6
   1de00:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1de04:	b	1de78 <main@@Base+0x8130>
   1de08:	ldr	r0, [r9]
   1de0c:	mov	r1, #1
   1de10:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   1de14:	mov	r8, r0
   1de18:	cmp	r0, #0
   1de1c:	beq	16638 <main@@Base+0x8f0>
   1de20:	cmp	sl, r6
   1de24:	beq	1de64 <main@@Base+0x811c>
   1de28:	ldrb	r0, [sl]
   1de2c:	cmp	r0, #123	; 0x7b
   1de30:	bne	1de64 <main@@Base+0x811c>
   1de34:	add	r1, sl, #1
   1de38:	sub	r0, r6, r1
   1de3c:	cmp	r0, #2
   1de40:	blt	1decc <main@@Base+0x8184>
   1de44:	ldrb	r0, [r1]
   1de48:	cmp	r0, #32
   1de4c:	bls	1debc <main@@Base+0x8174>
   1de50:	mov	sl, r1
   1de54:	cmp	sl, r6
   1de58:	mov	r2, r6
   1de5c:	bne	1dee8 <main@@Base+0x81a0>
   1de60:	b	1df50 <main@@Base+0x8208>
   1de64:	mov	r0, r9
   1de68:	mov	r1, sl
   1de6c:	mov	r2, r6
   1de70:	mov	r3, #21
   1de74:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1de78:	mov	sl, r0
   1de7c:	sub	r0, r6, sl
   1de80:	cmp	r0, #2
   1de84:	blt	1e5fc <main@@Base+0x88b4>
   1de88:	ldrb	r0, [sl]
   1de8c:	cmp	r0, #32
   1de90:	bls	1dea4 <main@@Base+0x815c>
   1de94:	mov	r8, sl
   1de98:	cmp	r8, r6
   1de9c:	bne	1e618 <main@@Base+0x88d0>
   1dea0:	b	1e6b4 <main@@Base+0x896c>
   1dea4:	bne	1e5fc <main@@Base+0x88b4>
   1dea8:	mov	r8, sl
   1deac:	ldrb	r0, [r8, #1]!
   1deb0:	cmp	r0, #32
   1deb4:	bls	1e5fc <main@@Base+0x88b4>
   1deb8:	b	1e610 <main@@Base+0x88c8>
   1debc:	bne	1decc <main@@Base+0x8184>
   1dec0:	ldrb	r0, [sl, #2]!
   1dec4:	cmp	r0, #32
   1dec8:	bhi	1dedc <main@@Base+0x8194>
   1decc:	mov	r0, r9
   1ded0:	mov	r2, r6
   1ded4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1ded8:	mov	sl, r0
   1dedc:	cmp	sl, r6
   1dee0:	mov	r2, r6
   1dee4:	beq	1df50 <main@@Base+0x8208>
   1dee8:	ldrb	r0, [sl]
   1deec:	cmp	r0, #125	; 0x7d
   1def0:	bne	1df2c <main@@Base+0x81e4>
   1def4:	add	r1, sl, #1
   1def8:	sub	r0, r6, r1
   1defc:	cmp	r0, #2
   1df00:	blt	1ddf8 <main@@Base+0x80b0>
   1df04:	ldrb	r0, [r1]
   1df08:	cmp	r0, #32
   1df0c:	bhi	1e5e4 <main@@Base+0x889c>
   1df10:	ldr	r6, [sp, #44]	; 0x2c
   1df14:	ldr	r9, [sp, #40]	; 0x28
   1df18:	bne	1ddf8 <main@@Base+0x80b0>
   1df1c:	ldrb	r0, [sl, #2]!
   1df20:	cmp	r0, #32
   1df24:	bls	1ddf8 <main@@Base+0x80b0>
   1df28:	b	1de7c <main@@Base+0x8134>
   1df2c:	mov	r2, sl
   1df30:	b	1df50 <main@@Base+0x8208>
   1df34:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1df38:	ldr	r6, [sp, #44]	; 0x2c
   1df3c:	str	r4, [fp, #-60]	; 0xffffffc4
   1df40:	ldr	r9, [sp, #40]	; 0x28
   1df44:	cmp	r7, r1
   1df48:	bne	1e4f4 <main@@Base+0x87ac>
   1df4c:	b	1e4b8 <main@@Base+0x8770>
   1df50:	cmp	r2, r6
   1df54:	mov	r9, r6
   1df58:	beq	1df88 <main@@Base+0x8240>
   1df5c:	ldrb	r0, [r2]
   1df60:	cmp	r0, #34	; 0x22
   1df64:	bne	1df70 <main@@Base+0x8228>
   1df68:	add	r9, r2, #1
   1df6c:	b	1df88 <main@@Base+0x8240>
   1df70:	ldr	r0, [sp, #40]	; 0x28
   1df74:	mov	r1, r2
   1df78:	mov	r2, r6
   1df7c:	mov	r3, #5
   1df80:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1df84:	mov	r9, r0
   1df88:	sub	lr, r6, r9
   1df8c:	mov	r0, #8
   1df90:	cmp	lr, #8
   1df94:	movcc	r0, lr
   1df98:	and	r0, r0, #15
   1df9c:	sub	r7, r0, #1
   1dfa0:	cmp	r7, #7
   1dfa4:	bhi	1e40c <main@@Base+0x86c4>
   1dfa8:	add	r2, pc, #32
   1dfac:	mov	r1, #0
   1dfb0:	mov	ip, #0
   1dfb4:	mov	sl, #0
   1dfb8:	mov	r6, #0
   1dfbc:	mov	r3, #0
   1dfc0:	mov	r5, #0
   1dfc4:	mov	r4, #0
   1dfc8:	mov	r0, #0
   1dfcc:	ldr	pc, [r2, r7, lsl #2]
   1dfd0:	andeq	lr, r1, r4, lsr r0
   1dfd4:	andeq	lr, r1, ip, lsr #32
   1dfd8:	andeq	lr, r1, r4, lsr #32
   1dfdc:	andeq	lr, r1, ip, lsl r0
   1dfe0:	andeq	lr, r1, r0, lsl r0
   1dfe4:	andeq	lr, r1, r4
   1dfe8:	strdeq	sp, [r1], -r4
   1dfec:	strdeq	sp, [r1], -r0
   1dff0:	ldrb	ip, [r9, #7]
   1dff4:	ldrb	r0, [r9, #6]
   1dff8:	mov	sl, r1
   1dffc:	orr	r0, ip, r0, lsl #8
   1e000:	mov	r1, r0
   1e004:	ldrb	r0, [r9, #5]
   1e008:	mov	r6, sl
   1e00c:	orr	r1, r1, r0, lsl #16
   1e010:	ldrb	r0, [r9, #4]
   1e014:	mov	r3, r6
   1e018:	orr	r1, r1, r0, lsl #24
   1e01c:	ldrb	r0, [r9, #3]
   1e020:	orr	r5, r0, r3
   1e024:	ldrb	r0, [r9, #2]
   1e028:	orr	r4, r5, r0, lsl #8
   1e02c:	ldrb	r0, [r9, #1]
   1e030:	orr	r0, r4, r0, lsl #16
   1e034:	ldrb	r2, [r9]
   1e038:	movw	r3, #0
   1e03c:	movt	r3, #26980	; 0x6964
   1e040:	orr	r0, r0, r2, lsl #24
   1e044:	mov	r2, r0
   1e048:	bfc	r2, #0, #16
   1e04c:	teq	r2, r3
   1e050:	bne	1e0a4 <main@@Base+0x835c>
   1e054:	ldr	r6, [sp, #44]	; 0x2c
   1e058:	cmp	lr, #3
   1e05c:	mov	r7, r9
   1e060:	blt	1e248 <main@@Base+0x8500>
   1e064:	ldrb	r0, [r9, #2]
   1e068:	mov	r7, r9
   1e06c:	cmp	r0, #34	; 0x22
   1e070:	bne	1e248 <main@@Base+0x8500>
   1e074:	add	r1, r9, #3
   1e078:	sub	r0, r6, r1
   1e07c:	cmp	r0, #2
   1e080:	blt	1e12c <main@@Base+0x83e4>
   1e084:	ldrb	r0, [r1]
   1e088:	cmp	r0, #32
   1e08c:	bls	1e114 <main@@Base+0x83cc>
   1e090:	ldr	r6, [sp, #44]	; 0x2c
   1e094:	mov	r7, r1
   1e098:	cmp	r7, r6
   1e09c:	bne	1e144 <main@@Base+0x83fc>
   1e0a0:	b	1e180 <main@@Base+0x8438>
   1e0a4:	movw	r2, #25445	; 0x6365
   1e0a8:	ldr	r6, [sp, #44]	; 0x2c
   1e0ac:	movt	r2, #24942	; 0x616e
   1e0b0:	eor	r1, r1, r2
   1e0b4:	movw	r2, #29556	; 0x7374
   1e0b8:	movt	r2, #25705	; 0x6469
   1e0bc:	eor	r0, r0, r2
   1e0c0:	orrs	r0, r1, r0
   1e0c4:	bne	1e40c <main@@Base+0x86c4>
   1e0c8:	cmp	lr, #9
   1e0cc:	mov	r7, r9
   1e0d0:	blt	1e3a0 <main@@Base+0x8658>
   1e0d4:	ldrb	r0, [r9, #8]
   1e0d8:	mov	r7, r9
   1e0dc:	cmp	r0, #34	; 0x22
   1e0e0:	bne	1e3a0 <main@@Base+0x8658>
   1e0e4:	add	r1, r9, #9
   1e0e8:	sub	r0, r6, r1
   1e0ec:	cmp	r0, #2
   1e0f0:	blt	1e1b0 <main@@Base+0x8468>
   1e0f4:	ldrb	r0, [r1]
   1e0f8:	cmp	r0, #32
   1e0fc:	bls	1e198 <main@@Base+0x8450>
   1e100:	ldr	r6, [sp, #44]	; 0x2c
   1e104:	mov	r7, r1
   1e108:	cmp	r7, r6
   1e10c:	bne	1e1c8 <main@@Base+0x8480>
   1e110:	b	1e208 <main@@Base+0x84c0>
   1e114:	ldr	r6, [sp, #44]	; 0x2c
   1e118:	bne	1e12c <main@@Base+0x83e4>
   1e11c:	mov	r7, r9
   1e120:	ldrb	r0, [r7, #4]!
   1e124:	cmp	r0, #32
   1e128:	bhi	1e13c <main@@Base+0x83f4>
   1e12c:	ldr	r0, [sp, #40]	; 0x28
   1e130:	mov	r2, r6
   1e134:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e138:	mov	r7, r0
   1e13c:	cmp	r7, r6
   1e140:	beq	1e180 <main@@Base+0x8438>
   1e144:	ldrb	r0, [r7]
   1e148:	cmp	r0, #58	; 0x3a
   1e14c:	bne	1e180 <main@@Base+0x8438>
   1e150:	add	r1, r7, #1
   1e154:	sub	r0, r6, r1
   1e158:	cmp	r0, #2
   1e15c:	blt	1e238 <main@@Base+0x84f0>
   1e160:	ldrb	r0, [r1]
   1e164:	cmp	r0, #32
   1e168:	bls	1e224 <main@@Base+0x84dc>
   1e16c:	ldr	r6, [sp, #44]	; 0x2c
   1e170:	mov	r7, r1
   1e174:	cmp	r9, r7
   1e178:	bne	1e250 <main@@Base+0x8508>
   1e17c:	b	1e40c <main@@Base+0x86c4>
   1e180:	ldr	r0, [sp, #40]	; 0x28
   1e184:	mov	r1, r7
   1e188:	mov	r2, r6
   1e18c:	mov	r3, #4
   1e190:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1e194:	b	1e244 <main@@Base+0x84fc>
   1e198:	ldr	r6, [sp, #44]	; 0x2c
   1e19c:	bne	1e1b0 <main@@Base+0x8468>
   1e1a0:	mov	r7, r9
   1e1a4:	ldrb	r0, [r7, #10]!
   1e1a8:	cmp	r0, #32
   1e1ac:	bhi	1e1c0 <main@@Base+0x8478>
   1e1b0:	ldr	r0, [sp, #40]	; 0x28
   1e1b4:	mov	r2, r6
   1e1b8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e1bc:	mov	r7, r0
   1e1c0:	cmp	r7, r6
   1e1c4:	beq	1e208 <main@@Base+0x84c0>
   1e1c8:	ldrb	r0, [r7]
   1e1cc:	cmp	r0, #58	; 0x3a
   1e1d0:	bne	1e208 <main@@Base+0x84c0>
   1e1d4:	ldr	r6, [sp, #44]	; 0x2c
   1e1d8:	add	r1, r7, #1
   1e1dc:	sub	r0, r6, r1
   1e1e0:	cmp	r0, #2
   1e1e4:	blt	1e390 <main@@Base+0x8648>
   1e1e8:	ldrb	r0, [r1]
   1e1ec:	cmp	r0, #32
   1e1f0:	bls	1e37c <main@@Base+0x8634>
   1e1f4:	ldr	r6, [sp, #44]	; 0x2c
   1e1f8:	mov	r7, r1
   1e1fc:	cmp	r9, r7
   1e200:	bne	1e3a8 <main@@Base+0x8660>
   1e204:	b	1e40c <main@@Base+0x86c4>
   1e208:	ldr	r6, [sp, #44]	; 0x2c
   1e20c:	ldr	r0, [sp, #40]	; 0x28
   1e210:	mov	r1, r7
   1e214:	mov	r3, #4
   1e218:	mov	r2, r6
   1e21c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1e220:	b	1e39c <main@@Base+0x8654>
   1e224:	ldr	r6, [sp, #44]	; 0x2c
   1e228:	bne	1e238 <main@@Base+0x84f0>
   1e22c:	ldrb	r0, [r7, #2]!
   1e230:	cmp	r0, #32
   1e234:	bhi	1e248 <main@@Base+0x8500>
   1e238:	ldr	r0, [sp, #40]	; 0x28
   1e23c:	mov	r2, r6
   1e240:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e244:	mov	r7, r0
   1e248:	cmp	r9, r7
   1e24c:	beq	1e40c <main@@Base+0x86c4>
   1e250:	mov	r4, #0
   1e254:	cmp	r7, r6
   1e258:	str	r4, [fp, #-52]	; 0xffffffcc
   1e25c:	str	r4, [fp, #-56]	; 0xffffffc8
   1e260:	str	r4, [fp, #-60]	; 0xffffffc4
   1e264:	str	r4, [sp, #56]	; 0x38
   1e268:	beq	1e2c4 <main@@Base+0x857c>
   1e26c:	ldr	r9, [sp, #40]	; 0x28
   1e270:	sub	r0, fp, #56	; 0x38
   1e274:	mov	r1, r7
   1e278:	mov	r2, r6
   1e27c:	add	r3, sp, #56	; 0x38
   1e280:	str	r0, [sp]
   1e284:	mov	r0, r9
   1e288:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1e28c:	cmp	r0, r7
   1e290:	beq	1e2d8 <main@@Base+0x8590>
   1e294:	mov	r1, r0
   1e298:	ldr	r0, [sp, #56]	; 0x38
   1e29c:	cmp	r0, #0
   1e2a0:	beq	1e2e8 <main@@Base+0x85a0>
   1e2a4:	mov	r0, r9
   1e2a8:	mov	r2, r6
   1e2ac:	mov	r3, #8
   1e2b0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1e2b4:	mov	r1, r0
   1e2b8:	cmp	r7, r1
   1e2bc:	bne	1e368 <main@@Base+0x8620>
   1e2c0:	b	1e334 <main@@Base+0x85ec>
   1e2c4:	mov	r1, r6
   1e2c8:	ldr	r9, [sp, #40]	; 0x28
   1e2cc:	cmp	r7, r1
   1e2d0:	bne	1e368 <main@@Base+0x8620>
   1e2d4:	b	1e334 <main@@Base+0x85ec>
   1e2d8:	mov	r1, r7
   1e2dc:	cmp	r7, r1
   1e2e0:	bne	1e368 <main@@Base+0x8620>
   1e2e4:	b	1e334 <main@@Base+0x85ec>
   1e2e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1e2ec:	cmp	r0, #0
   1e2f0:	beq	1e31c <main@@Base+0x85d4>
   1e2f4:	ldr	r9, [sp, #40]	; 0x28
   1e2f8:	ldr	r6, [sp, #44]	; 0x2c
   1e2fc:	mov	r3, #7
   1e300:	mov	r0, r9
   1e304:	mov	r2, r6
   1e308:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1e30c:	mov	r1, r0
   1e310:	cmp	r7, r1
   1e314:	bne	1e368 <main@@Base+0x8620>
   1e318:	b	1e334 <main@@Base+0x85ec>
   1e31c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1e320:	ldr	r6, [sp, #44]	; 0x2c
   1e324:	str	r4, [fp, #-60]	; 0xffffffc4
   1e328:	ldr	r9, [sp, #40]	; 0x28
   1e32c:	cmp	r7, r1
   1e330:	bne	1e368 <main@@Base+0x8620>
   1e334:	movw	r3, #53876	; 0xd274
   1e338:	sub	r0, fp, #60	; 0x3c
   1e33c:	mov	r1, r7
   1e340:	mov	r2, r6
   1e344:	str	r0, [sp]
   1e348:	mov	r0, r9
   1e34c:	movt	r3, #5
   1e350:	bl	248a8 <main@@Base+0xeb60>
   1e354:	mov	r1, r0
   1e358:	cmp	r0, r7
   1e35c:	cmpne	r1, r6
   1e360:	beq	1e58c <main@@Base+0x8844>
   1e364:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1e368:	str	r4, [r8]
   1e36c:	sub	r0, r6, r1
   1e370:	cmp	r0, #2
   1e374:	blt	1e504 <main@@Base+0x87bc>
   1e378:	b	1e430 <main@@Base+0x86e8>
   1e37c:	ldr	r6, [sp, #44]	; 0x2c
   1e380:	bne	1e390 <main@@Base+0x8648>
   1e384:	ldrb	r0, [r7, #2]!
   1e388:	cmp	r0, #32
   1e38c:	bhi	1e3a0 <main@@Base+0x8658>
   1e390:	ldr	r0, [sp, #40]	; 0x28
   1e394:	mov	r2, r6
   1e398:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e39c:	mov	r7, r0
   1e3a0:	cmp	r9, r7
   1e3a4:	beq	1e40c <main@@Base+0x86c4>
   1e3a8:	mov	r4, #0
   1e3ac:	cmp	r7, r6
   1e3b0:	str	r4, [fp, #-52]	; 0xffffffcc
   1e3b4:	str	r4, [fp, #-56]	; 0xffffffc8
   1e3b8:	str	r4, [fp, #-60]	; 0xffffffc4
   1e3bc:	str	r4, [sp, #56]	; 0x38
   1e3c0:	beq	1e464 <main@@Base+0x871c>
   1e3c4:	ldr	r9, [sp, #40]	; 0x28
   1e3c8:	sub	r0, fp, #56	; 0x38
   1e3cc:	mov	r1, r7
   1e3d0:	mov	r2, r6
   1e3d4:	add	r3, sp, #56	; 0x38
   1e3d8:	str	r0, [sp]
   1e3dc:	mov	r0, r9
   1e3e0:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1e3e4:	cmp	r0, r7
   1e3e8:	beq	1e478 <main@@Base+0x8730>
   1e3ec:	mov	r1, r0
   1e3f0:	ldr	r0, [sp, #56]	; 0x38
   1e3f4:	cmp	r0, #0
   1e3f8:	beq	1e488 <main@@Base+0x8740>
   1e3fc:	ldr	r9, [sp, #40]	; 0x28
   1e400:	ldr	r6, [sp, #44]	; 0x2c
   1e404:	mov	r3, #8
   1e408:	b	1e4a0 <main@@Base+0x8758>
   1e40c:	ldr	r0, [sp, #40]	; 0x28
   1e410:	mov	r1, r9
   1e414:	mov	r2, r6
   1e418:	mov	r9, r0
   1e41c:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   1e420:	mov	r1, r0
   1e424:	sub	r0, r6, r1
   1e428:	cmp	r0, #2
   1e42c:	blt	1e504 <main@@Base+0x87bc>
   1e430:	ldrb	r0, [r1]
   1e434:	cmp	r0, #32
   1e438:	bls	1e44c <main@@Base+0x8704>
   1e43c:	mov	r2, r1
   1e440:	cmp	r2, r6
   1e444:	bne	1e51c <main@@Base+0x87d4>
   1e448:	b	1e5a4 <main@@Base+0x885c>
   1e44c:	bne	1e504 <main@@Base+0x87bc>
   1e450:	mov	r2, r1
   1e454:	ldrb	r0, [r2, #1]!
   1e458:	cmp	r0, #32
   1e45c:	bls	1e504 <main@@Base+0x87bc>
   1e460:	b	1e514 <main@@Base+0x87cc>
   1e464:	mov	r1, r6
   1e468:	ldr	r9, [sp, #40]	; 0x28
   1e46c:	cmp	r7, r1
   1e470:	bne	1e4f4 <main@@Base+0x87ac>
   1e474:	b	1e4b8 <main@@Base+0x8770>
   1e478:	mov	r1, r7
   1e47c:	cmp	r7, r1
   1e480:	bne	1e4f4 <main@@Base+0x87ac>
   1e484:	b	1e4b8 <main@@Base+0x8770>
   1e488:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1e48c:	cmp	r0, #0
   1e490:	beq	1df34 <main@@Base+0x81ec>
   1e494:	ldr	r9, [sp, #40]	; 0x28
   1e498:	ldr	r6, [sp, #44]	; 0x2c
   1e49c:	mov	r3, #7
   1e4a0:	mov	r0, r9
   1e4a4:	mov	r2, r6
   1e4a8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1e4ac:	mov	r1, r0
   1e4b0:	cmp	r7, r1
   1e4b4:	bne	1e4f4 <main@@Base+0x87ac>
   1e4b8:	sub	r0, fp, #60	; 0x3c
   1e4bc:	mov	r1, r7
   1e4c0:	mov	r2, r6
   1e4c4:	str	r0, [sp]
   1e4c8:	movw	r0, #53876	; 0xd274
   1e4cc:	movt	r0, #5
   1e4d0:	add	r3, r0, #12
   1e4d4:	mov	r0, r9
   1e4d8:	bl	248a8 <main@@Base+0xeb60>
   1e4dc:	mov	r1, r0
   1e4e0:	cmp	r0, r7
   1e4e4:	cmpne	r1, r6
   1e4e8:	beq	1e58c <main@@Base+0x8844>
   1e4ec:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1e4f0:	ldr	r9, [sp, #40]	; 0x28
   1e4f4:	str	r4, [r8, #4]
   1e4f8:	sub	r0, r6, r1
   1e4fc:	cmp	r0, #2
   1e500:	bge	1e430 <main@@Base+0x86e8>
   1e504:	mov	r0, r9
   1e508:	mov	r2, r6
   1e50c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e510:	mov	r2, r0
   1e514:	cmp	r2, r6
   1e518:	beq	1e5a4 <main@@Base+0x885c>
   1e51c:	ldrb	r0, [r2]
   1e520:	cmp	r0, #44	; 0x2c
   1e524:	bne	1e5b8 <main@@Base+0x8870>
   1e528:	add	r1, r2, #1
   1e52c:	sub	r0, r6, r1
   1e530:	cmp	r0, #2
   1e534:	blt	1e564 <main@@Base+0x881c>
   1e538:	ldrb	r0, [r1]
   1e53c:	cmp	r0, #32
   1e540:	bls	1e554 <main@@Base+0x880c>
   1e544:	mov	r2, r1
   1e548:	cmp	r2, r6
   1e54c:	bne	1e57c <main@@Base+0x8834>
   1e550:	b	1ddb4 <main@@Base+0x806c>
   1e554:	bne	1e564 <main@@Base+0x881c>
   1e558:	ldrb	r0, [r2, #2]!
   1e55c:	cmp	r0, #32
   1e560:	bhi	1e574 <main@@Base+0x882c>
   1e564:	mov	r0, r9
   1e568:	mov	r2, r6
   1e56c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e570:	mov	r2, r0
   1e574:	cmp	r2, r6
   1e578:	beq	1ddb4 <main@@Base+0x806c>
   1e57c:	ldrb	r0, [r2]
   1e580:	cmp	r0, #125	; 0x7d
   1e584:	bne	1df50 <main@@Base+0x8208>
   1e588:	b	1e5c4 <main@@Base+0x887c>
   1e58c:	ldr	r9, [sp, #40]	; 0x28
   1e590:	ldr	r6, [sp, #44]	; 0x2c
   1e594:	mov	r3, #33	; 0x21
   1e598:	mov	r0, r9
   1e59c:	mov	r2, r6
   1e5a0:	b	1de74 <main@@Base+0x812c>
   1e5a4:	mov	sl, r6
   1e5a8:	sub	r0, r6, sl
   1e5ac:	cmp	r0, #2
   1e5b0:	bge	1de88 <main@@Base+0x8140>
   1e5b4:	b	1e5fc <main@@Base+0x88b4>
   1e5b8:	cmp	r0, #125	; 0x7d
   1e5bc:	bne	1ddc0 <main@@Base+0x8078>
   1e5c0:	ldr	r6, [sp, #44]	; 0x2c
   1e5c4:	add	r1, r2, #1
   1e5c8:	ldr	r9, [sp, #40]	; 0x28
   1e5cc:	sub	r0, r6, r1
   1e5d0:	cmp	r0, #2
   1e5d4:	blt	1ddf8 <main@@Base+0x80b0>
   1e5d8:	ldrb	r0, [r1]
   1e5dc:	cmp	r0, #32
   1e5e0:	bls	1dddc <main@@Base+0x8094>
   1e5e4:	ldr	r6, [sp, #44]	; 0x2c
   1e5e8:	ldr	r9, [sp, #40]	; 0x28
   1e5ec:	mov	sl, r1
   1e5f0:	sub	r0, r6, sl
   1e5f4:	cmp	r0, #2
   1e5f8:	bge	1de88 <main@@Base+0x8140>
   1e5fc:	mov	r0, r9
   1e600:	mov	r1, sl
   1e604:	mov	r2, r6
   1e608:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e60c:	mov	r8, r0
   1e610:	cmp	r8, r6
   1e614:	beq	1e6b4 <main@@Base+0x896c>
   1e618:	ldrb	r0, [r8]
   1e61c:	cmp	r0, #44	; 0x2c
   1e620:	bne	1e6bc <main@@Base+0x8974>
   1e624:	add	r1, r8, #1
   1e628:	sub	r0, r6, r1
   1e62c:	cmp	r0, #2
   1e630:	blt	1e664 <main@@Base+0x891c>
   1e634:	ldrb	r0, [r1]
   1e638:	cmp	r0, #32
   1e63c:	bls	1e650 <main@@Base+0x8908>
   1e640:	mov	sl, r1
   1e644:	cmp	sl, r6
   1e648:	bne	1e67c <main@@Base+0x8934>
   1e64c:	b	1e77c <main@@Base+0x8a34>
   1e650:	bne	1e664 <main@@Base+0x891c>
   1e654:	ldrb	r0, [r8, #2]!
   1e658:	cmp	r0, #32
   1e65c:	mov	sl, r8
   1e660:	bhi	1e674 <main@@Base+0x892c>
   1e664:	mov	r0, r9
   1e668:	mov	r2, r6
   1e66c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e670:	mov	sl, r0
   1e674:	cmp	sl, r6
   1e678:	beq	1e77c <main@@Base+0x8a34>
   1e67c:	ldrb	r0, [sl]
   1e680:	cmp	r0, #93	; 0x5d
   1e684:	bne	1de08 <main@@Base+0x80c0>
   1e688:	add	r1, sl, #1
   1e68c:	sub	r0, r6, r1
   1e690:	cmp	r0, #2
   1e694:	blt	17734 <main@@Base+0x19ec>
   1e698:	ldrb	r0, [r1]
   1e69c:	cmp	r0, #32
   1e6a0:	bls	17718 <main@@Base+0x19d0>
   1e6a4:	ldr	r6, [sp, #44]	; 0x2c
   1e6a8:	ldr	r9, [sp, #40]	; 0x28
   1e6ac:	mov	r8, r1
   1e6b0:	b	1c668 <main@@Base+0x6920>
   1e6b4:	mov	r8, r6
   1e6b8:	b	1c668 <main@@Base+0x6920>
   1e6bc:	cmp	r0, #93	; 0x5d
   1e6c0:	bne	1f8d8 <main@@Base+0x9b90>
   1e6c4:	ldr	r6, [sp, #44]	; 0x2c
   1e6c8:	ldr	r9, [sp, #40]	; 0x28
   1e6cc:	add	r1, r8, #1
   1e6d0:	sub	r0, r6, r1
   1e6d4:	cmp	r0, #2
   1e6d8:	bge	1cfb8 <main@@Base+0x7270>
   1e6dc:	b	17734 <main@@Base+0x19ec>
   1e6e0:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1e6e4:	ldr	r9, [sp, #40]	; 0x28
   1e6e8:	str	r4, [fp, #-60]	; 0xffffffc4
   1e6ec:	cmp	r6, r8
   1e6f0:	bne	1e734 <main@@Base+0x89ec>
   1e6f4:	ldr	r4, [sp, #44]	; 0x2c
   1e6f8:	sub	r0, fp, #60	; 0x3c
   1e6fc:	mov	r1, r6
   1e700:	str	r0, [sp]
   1e704:	movw	r0, #53516	; 0xd10c
   1e708:	movt	r0, #5
   1e70c:	add	r3, r0, #36	; 0x24
   1e710:	mov	r0, r9
   1e714:	mov	r2, r4
   1e718:	bl	248a8 <main@@Base+0xeb60>
   1e71c:	mov	r8, r0
   1e720:	cmp	r0, r6
   1e724:	cmpne	r8, r4
   1e728:	beq	1fecc <main@@Base+0xa184>
   1e72c:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1e730:	ldr	r9, [sp, #40]	; 0x28
   1e734:	ldr	r6, [sp, #44]	; 0x2c
   1e738:	cmp	r4, #0
   1e73c:	bne	1e74c <main@@Base+0x8a04>
   1e740:	ldrb	r0, [r9, #8]
   1e744:	tst	r0, #2
   1e748:	beq	1fd40 <main@@Base+0x9ff8>
   1e74c:	ldr	r0, [r9]
   1e750:	mov	r1, #17
   1e754:	mov	r2, #4
   1e758:	mov	r3, #4
   1e75c:	bl	31040 <flatcc_builder_table_add@@Base>
   1e760:	cmp	r0, #0
   1e764:	beq	1fecc <main@@Base+0xa184>
   1e768:	str	r4, [r0]
   1e76c:	sub	r0, r6, r8
   1e770:	cmp	r0, #2
   1e774:	bge	1fd4c <main@@Base+0xa004>
   1e778:	b	1fdc0 <main@@Base+0xa078>
   1e77c:	mov	r0, r9
   1e780:	mov	r1, r6
   1e784:	b	1f8e8 <main@@Base+0x9ba0>
   1e788:	ldr	r6, [sp, #44]	; 0x2c
   1e78c:	ldr	r9, [sp, #40]	; 0x28
   1e790:	bne	1e7a0 <main@@Base+0x8a58>
   1e794:	ldrb	r0, [sl, #2]!
   1e798:	cmp	r0, #32
   1e79c:	bhi	1e7b0 <main@@Base+0x8a68>
   1e7a0:	mov	r0, r9
   1e7a4:	mov	r2, r6
   1e7a8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e7ac:	mov	sl, r0
   1e7b0:	cmp	sl, r6
   1e7b4:	mov	r2, r6
   1e7b8:	beq	1e80c <main@@Base+0x8ac4>
   1e7bc:	ldrb	r0, [sl]
   1e7c0:	cmp	r0, #93	; 0x5d
   1e7c4:	bne	1e808 <main@@Base+0x8ac0>
   1e7c8:	ldr	r6, [sp, #44]	; 0x2c
   1e7cc:	ldr	r9, [sp, #40]	; 0x28
   1e7d0:	add	r1, sl, #1
   1e7d4:	sub	r0, r6, r1
   1e7d8:	cmp	r0, #2
   1e7dc:	blt	179c4 <main@@Base+0x1c7c>
   1e7e0:	ldrb	r0, [r1]
   1e7e4:	cmp	r0, #32
   1e7e8:	bhi	17208 <main@@Base+0x14c0>
   1e7ec:	ldr	r6, [sp, #44]	; 0x2c
   1e7f0:	ldr	r9, [sp, #40]	; 0x28
   1e7f4:	bne	179c4 <main@@Base+0x1c7c>
   1e7f8:	ldrb	r0, [sl, #2]!
   1e7fc:	cmp	r0, #32
   1e800:	bhi	1d4c4 <main@@Base+0x777c>
   1e804:	b	179c4 <main@@Base+0x1c7c>
   1e808:	mov	r2, sl
   1e80c:	ldr	r6, [sp, #44]	; 0x2c
   1e810:	ldr	r9, [sp, #40]	; 0x28
   1e814:	mov	r1, r2
   1e818:	mov	r0, r9
   1e81c:	mov	r2, r6
   1e820:	add	r3, sp, #52	; 0x34
   1e824:	bl	37464 <flatcc_json_parser_build_string@@Base>
   1e828:	mov	sl, r0
   1e82c:	ldr	r0, [sp, #52]	; 0x34
   1e830:	cmp	r0, #0
   1e834:	beq	16638 <main@@Base+0x8f0>
   1e838:	ldr	r0, [r9]
   1e83c:	mov	r1, #1
   1e840:	bl	2ef60 <flatcc_builder_extend_offset_vector@@Base>
   1e844:	cmp	r0, #0
   1e848:	beq	16638 <main@@Base+0x8f0>
   1e84c:	ldr	r1, [sp, #52]	; 0x34
   1e850:	str	r1, [r0]
   1e854:	sub	r0, r6, sl
   1e858:	cmp	r0, #2
   1e85c:	blt	1e890 <main@@Base+0x8b48>
   1e860:	ldrb	r0, [sl]
   1e864:	cmp	r0, #32
   1e868:	bls	1e87c <main@@Base+0x8b34>
   1e86c:	mov	r2, sl
   1e870:	cmp	r2, r6
   1e874:	bne	1e8ac <main@@Base+0x8b64>
   1e878:	b	168f8 <main@@Base+0xbb0>
   1e87c:	bne	1e890 <main@@Base+0x8b48>
   1e880:	mov	r2, sl
   1e884:	ldrb	r0, [r2, #1]!
   1e888:	cmp	r0, #32
   1e88c:	bhi	1e8a4 <main@@Base+0x8b5c>
   1e890:	mov	r0, r9
   1e894:	mov	r1, sl
   1e898:	mov	r2, r6
   1e89c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e8a0:	mov	r2, r0
   1e8a4:	cmp	r2, r6
   1e8a8:	beq	168f8 <main@@Base+0xbb0>
   1e8ac:	ldrb	r0, [r2]
   1e8b0:	cmp	r0, #44	; 0x2c
   1e8b4:	bne	171dc <main@@Base+0x1494>
   1e8b8:	add	r1, r2, #1
   1e8bc:	sub	r0, r6, r1
   1e8c0:	cmp	r0, #2
   1e8c4:	blt	1e8f4 <main@@Base+0x8bac>
   1e8c8:	ldrb	r0, [r1]
   1e8cc:	cmp	r0, #32
   1e8d0:	bls	1e8e4 <main@@Base+0x8b9c>
   1e8d4:	mov	r2, r1
   1e8d8:	cmp	r2, r6
   1e8dc:	bne	1e90c <main@@Base+0x8bc4>
   1e8e0:	b	1723c <main@@Base+0x14f4>
   1e8e4:	bne	1e8f4 <main@@Base+0x8bac>
   1e8e8:	ldrb	r0, [r2, #2]!
   1e8ec:	cmp	r0, #32
   1e8f0:	bhi	1e904 <main@@Base+0x8bbc>
   1e8f4:	mov	r0, r9
   1e8f8:	mov	r2, r6
   1e8fc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e900:	mov	r2, r0
   1e904:	cmp	r2, r6
   1e908:	beq	1723c <main@@Base+0x14f4>
   1e90c:	ldrb	r0, [r2]
   1e910:	cmp	r0, #93	; 0x5d
   1e914:	bne	1e814 <main@@Base+0x8acc>
   1e918:	add	r1, r2, #1
   1e91c:	sub	r0, r6, r1
   1e920:	cmp	r0, #2
   1e924:	bge	171fc <main@@Base+0x14b4>
   1e928:	b	179c4 <main@@Base+0x1c7c>
   1e92c:	mov	sl, r6
   1e930:	b	1c59c <main@@Base+0x6854>
   1e934:	ldr	r6, [sp, #44]	; 0x2c
   1e938:	ldr	r9, [sp, #40]	; 0x28
   1e93c:	bne	1e950 <main@@Base+0x8c08>
   1e940:	ldrb	r0, [r2, #2]!
   1e944:	cmp	r0, #32
   1e948:	mov	r8, r2
   1e94c:	bhi	1fd40 <main@@Base+0x9ff8>
   1e950:	mov	r0, r9
   1e954:	mov	r2, r6
   1e958:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e95c:	b	1fd3c <main@@Base+0x9ff4>
   1e960:	cmp	r0, #93	; 0x5d
   1e964:	bne	17218 <main@@Base+0x14d0>
   1e968:	ldr	r6, [sp, #44]	; 0x2c
   1e96c:	ldr	r9, [sp, #40]	; 0x28
   1e970:	add	r1, r2, #1
   1e974:	sub	r0, r6, r1
   1e978:	cmp	r0, #2
   1e97c:	blt	175e0 <main@@Base+0x1898>
   1e980:	ldrb	r0, [r1]
   1e984:	cmp	r0, #32
   1e988:	bls	175c4 <main@@Base+0x187c>
   1e98c:	ldr	r6, [sp, #44]	; 0x2c
   1e990:	ldr	r9, [sp, #40]	; 0x28
   1e994:	mov	sl, r1
   1e998:	b	1c59c <main@@Base+0x6854>
   1e99c:	mov	r0, r9
   1e9a0:	mov	r1, r6
   1e9a4:	b	17228 <main@@Base+0x14e0>
   1e9a8:	ldr	r6, [sp, #44]	; 0x2c
   1e9ac:	ldr	r9, [sp, #40]	; 0x28
   1e9b0:	bne	1e9c0 <main@@Base+0x8c78>
   1e9b4:	ldrb	r0, [sl, #2]!
   1e9b8:	cmp	r0, #32
   1e9bc:	bhi	1e9d0 <main@@Base+0x8c88>
   1e9c0:	mov	r0, r9
   1e9c4:	mov	r2, r6
   1e9c8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1e9cc:	mov	sl, r0
   1e9d0:	cmp	sl, r6
   1e9d4:	mov	r2, r6
   1e9d8:	beq	1ea2c <main@@Base+0x8ce4>
   1e9dc:	ldrb	r0, [sl]
   1e9e0:	cmp	r0, #125	; 0x7d
   1e9e4:	bne	1ea28 <main@@Base+0x8ce0>
   1e9e8:	ldr	r6, [sp, #44]	; 0x2c
   1e9ec:	ldr	r9, [sp, #40]	; 0x28
   1e9f0:	add	r1, sl, #1
   1e9f4:	sub	r0, r6, r1
   1e9f8:	cmp	r0, #2
   1e9fc:	blt	1791c <main@@Base+0x1bd4>
   1ea00:	ldrb	r0, [r1]
   1ea04:	cmp	r0, #32
   1ea08:	bhi	1fb48 <main@@Base+0x9e00>
   1ea0c:	ldr	r6, [sp, #44]	; 0x2c
   1ea10:	ldr	r9, [sp, #40]	; 0x28
   1ea14:	bne	1791c <main@@Base+0x1bd4>
   1ea18:	ldrb	r0, [sl, #2]!
   1ea1c:	cmp	r0, #32
   1ea20:	bhi	1c43c <main@@Base+0x66f4>
   1ea24:	b	1791c <main@@Base+0x1bd4>
   1ea28:	mov	r2, sl
   1ea2c:	ldr	r6, [sp, #44]	; 0x2c
   1ea30:	ldr	r9, [sp, #40]	; 0x28
   1ea34:	cmp	r2, r6
   1ea38:	mov	r8, r6
   1ea3c:	beq	1ea6c <main@@Base+0x8d24>
   1ea40:	ldrb	r0, [r2]
   1ea44:	cmp	r0, #34	; 0x22
   1ea48:	bne	1ea54 <main@@Base+0x8d0c>
   1ea4c:	add	r8, r2, #1
   1ea50:	b	1ea6c <main@@Base+0x8d24>
   1ea54:	mov	r1, r2
   1ea58:	mov	r0, r9
   1ea5c:	mov	r2, r6
   1ea60:	mov	r3, #5
   1ea64:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1ea68:	mov	r8, r0
   1ea6c:	sub	lr, r6, r8
   1ea70:	mov	r0, #8
   1ea74:	cmp	lr, #8
   1ea78:	movcc	r0, lr
   1ea7c:	and	r0, r0, #15
   1ea80:	sub	r7, r0, #1
   1ea84:	cmp	r7, #7
   1ea88:	bhi	1ec1c <main@@Base+0x8ed4>
   1ea8c:	add	r4, pc, #32
   1ea90:	mov	r1, #0
   1ea94:	mov	ip, #0
   1ea98:	mov	r9, #0
   1ea9c:	mov	r6, #0
   1eaa0:	mov	r3, #0
   1eaa4:	mov	r5, #0
   1eaa8:	mov	r2, #0
   1eaac:	mov	r0, #0
   1eab0:	ldr	pc, [r4, r7, lsl #2]
   1eab4:	andeq	lr, r1, r8, lsl fp
   1eab8:	andeq	lr, r1, r0, lsl fp
   1eabc:	andeq	lr, r1, r8, lsl #22
   1eac0:	andeq	lr, r1, r0, lsl #22
   1eac4:	strdeq	lr, [r1], -r4
   1eac8:	andeq	lr, r1, r8, ror #21
   1eacc:	ldrdeq	lr, [r1], -r8
   1ead0:	ldrdeq	lr, [r1], -r4
   1ead4:	ldrb	ip, [r8, #7]
   1ead8:	ldrb	r0, [r8, #6]
   1eadc:	mov	r9, r1
   1eae0:	orr	r0, ip, r0, lsl #8
   1eae4:	mov	r1, r0
   1eae8:	ldrb	r0, [r8, #5]
   1eaec:	mov	r6, r9
   1eaf0:	orr	r1, r1, r0, lsl #16
   1eaf4:	ldrb	r0, [r8, #4]
   1eaf8:	mov	r3, r6
   1eafc:	orr	r1, r1, r0, lsl #24
   1eb00:	ldrb	r0, [r8, #3]
   1eb04:	orr	r5, r0, r3
   1eb08:	ldrb	r0, [r8, #2]
   1eb0c:	orr	r2, r5, r0, lsl #8
   1eb10:	ldrb	r0, [r8, #1]
   1eb14:	orr	r0, r2, r0, lsl #16
   1eb18:	ldrb	r2, [r8]
   1eb1c:	orr	r2, r0, r2, lsl #24
   1eb20:	movw	r0, #0
   1eb24:	movt	r0, #25956	; 0x6564
   1eb28:	subs	r0, r1, r0
   1eb2c:	movw	r0, #29556	; 0x7374
   1eb30:	movt	r0, #28261	; 0x6e65
   1eb34:	sbcs	r0, r2, r0
   1eb38:	bcs	1eba4 <main@@Base+0x8e5c>
   1eb3c:	ldr	r6, [sp, #44]	; 0x2c
   1eb40:	ldr	r9, [sp, #40]	; 0x28
   1eb44:	movw	r0, #29793	; 0x7461
   1eb48:	movt	r0, #25697	; 0x6461
   1eb4c:	teq	r2, r0
   1eb50:	bne	1ec1c <main@@Base+0x8ed4>
   1eb54:	cmp	lr, #5
   1eb58:	mov	r1, r8
   1eb5c:	blt	1ee4c <main@@Base+0x9104>
   1eb60:	ldrb	r0, [r8, #4]
   1eb64:	mov	r1, r8
   1eb68:	cmp	r0, #34	; 0x22
   1eb6c:	bne	1ee4c <main@@Base+0x9104>
   1eb70:	ldr	r0, [sp, #44]	; 0x2c
   1eb74:	add	r2, r8, #5
   1eb78:	sub	r0, r0, r2
   1eb7c:	cmp	r0, #2
   1eb80:	blt	1ecb0 <main@@Base+0x8f68>
   1eb84:	ldrb	r0, [r2]
   1eb88:	cmp	r0, #32
   1eb8c:	bls	1ec9c <main@@Base+0x8f54>
   1eb90:	mov	r1, r2
   1eb94:	ldr	r0, [sp, #44]	; 0x2c
   1eb98:	cmp	r1, r0
   1eb9c:	bne	1ecd0 <main@@Base+0x8f88>
   1eba0:	b	1ed0c <main@@Base+0x8fc4>
   1eba4:	movw	r0, #29292	; 0x726c
   1eba8:	lsr	r3, r1, #8
   1ebac:	movw	r7, #29793	; 0x7461
   1ebb0:	movt	r0, #117	; 0x75
   1ebb4:	orr	r3, r3, r2, lsl #24
   1ebb8:	movt	r7, #25697	; 0x6461
   1ebbc:	eor	r0, r0, r2, lsr #8
   1ebc0:	eor	r3, r3, r7
   1ebc4:	orrs	r0, r3, r0
   1ebc8:	bne	1ec28 <main@@Base+0x8ee0>
   1ebcc:	cmp	lr, #8
   1ebd0:	mov	r1, r8
   1ebd4:	blt	1eebc <main@@Base+0x9174>
   1ebd8:	ldrb	r0, [r8, #7]
   1ebdc:	mov	r1, r8
   1ebe0:	cmp	r0, #34	; 0x22
   1ebe4:	bne	1eebc <main@@Base+0x9174>
   1ebe8:	ldr	r0, [sp, #44]	; 0x2c
   1ebec:	add	r2, r8, #8
   1ebf0:	sub	r0, r0, r2
   1ebf4:	cmp	r0, #2
   1ebf8:	blt	1ed34 <main@@Base+0x8fec>
   1ebfc:	ldrb	r0, [r2]
   1ec00:	cmp	r0, #32
   1ec04:	bls	1ed20 <main@@Base+0x8fd8>
   1ec08:	mov	r1, r2
   1ec0c:	ldr	r0, [sp, #44]	; 0x2c
   1ec10:	cmp	r1, r0
   1ec14:	bne	1ed54 <main@@Base+0x900c>
   1ec18:	b	1ed90 <main@@Base+0x9048>
   1ec1c:	mov	r0, r9
   1ec20:	mov	r1, r8
   1ec24:	b	1efa4 <main@@Base+0x925c>
   1ec28:	movw	r0, #29556	; 0x7374
   1ec2c:	bfc	r1, #0, #16
   1ec30:	movt	r0, #28261	; 0x6e65
   1ec34:	eor	r0, r2, r0
   1ec38:	movw	r2, #0
   1ec3c:	movt	r2, #25956	; 0x6564
   1ec40:	eor	r1, r1, r2
   1ec44:	orrs	r0, r1, r0
   1ec48:	bne	1ef94 <main@@Base+0x924c>
   1ec4c:	cmp	lr, #7
   1ec50:	mov	r1, r8
   1ec54:	blt	1ef2c <main@@Base+0x91e4>
   1ec58:	ldrb	r0, [r8, #6]
   1ec5c:	mov	r1, r8
   1ec60:	cmp	r0, #34	; 0x22
   1ec64:	bne	1ef2c <main@@Base+0x91e4>
   1ec68:	ldr	r0, [sp, #44]	; 0x2c
   1ec6c:	add	r2, r8, #7
   1ec70:	sub	r0, r0, r2
   1ec74:	cmp	r0, #2
   1ec78:	blt	1edb8 <main@@Base+0x9070>
   1ec7c:	ldrb	r0, [r2]
   1ec80:	cmp	r0, #32
   1ec84:	bls	1eda4 <main@@Base+0x905c>
   1ec88:	mov	r1, r2
   1ec8c:	ldr	r0, [sp, #44]	; 0x2c
   1ec90:	cmp	r1, r0
   1ec94:	bne	1edd8 <main@@Base+0x9090>
   1ec98:	b	1ee14 <main@@Base+0x90cc>
   1ec9c:	bne	1ecb0 <main@@Base+0x8f68>
   1eca0:	mov	r1, r8
   1eca4:	ldrb	r0, [r1, #6]!
   1eca8:	cmp	r0, #32
   1ecac:	bhi	1ecc4 <main@@Base+0x8f7c>
   1ecb0:	mov	r1, r2
   1ecb4:	ldr	r0, [sp, #40]	; 0x28
   1ecb8:	ldr	r2, [sp, #44]	; 0x2c
   1ecbc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1ecc0:	mov	r1, r0
   1ecc4:	ldr	r0, [sp, #44]	; 0x2c
   1ecc8:	cmp	r1, r0
   1eccc:	beq	1ed0c <main@@Base+0x8fc4>
   1ecd0:	ldrb	r0, [r1]
   1ecd4:	cmp	r0, #58	; 0x3a
   1ecd8:	bne	1ed0c <main@@Base+0x8fc4>
   1ecdc:	ldr	r0, [sp, #44]	; 0x2c
   1ece0:	add	r2, r1, #1
   1ece4:	sub	r0, r0, r2
   1ece8:	cmp	r0, #2
   1ecec:	blt	1ee38 <main@@Base+0x90f0>
   1ecf0:	ldrb	r0, [r2]
   1ecf4:	cmp	r0, #32
   1ecf8:	bls	1ee28 <main@@Base+0x90e0>
   1ecfc:	mov	r1, r2
   1ed00:	cmp	r8, r1
   1ed04:	bne	1ee54 <main@@Base+0x910c>
   1ed08:	b	1ef94 <main@@Base+0x924c>
   1ed0c:	ldr	r0, [sp, #40]	; 0x28
   1ed10:	ldr	r2, [sp, #44]	; 0x2c
   1ed14:	mov	r3, #4
   1ed18:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1ed1c:	b	1ee48 <main@@Base+0x9100>
   1ed20:	bne	1ed34 <main@@Base+0x8fec>
   1ed24:	mov	r1, r8
   1ed28:	ldrb	r0, [r1, #9]!
   1ed2c:	cmp	r0, #32
   1ed30:	bhi	1ed48 <main@@Base+0x9000>
   1ed34:	mov	r1, r2
   1ed38:	ldr	r0, [sp, #40]	; 0x28
   1ed3c:	ldr	r2, [sp, #44]	; 0x2c
   1ed40:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1ed44:	mov	r1, r0
   1ed48:	ldr	r0, [sp, #44]	; 0x2c
   1ed4c:	cmp	r1, r0
   1ed50:	beq	1ed90 <main@@Base+0x9048>
   1ed54:	ldrb	r0, [r1]
   1ed58:	cmp	r0, #58	; 0x3a
   1ed5c:	bne	1ed90 <main@@Base+0x9048>
   1ed60:	ldr	r0, [sp, #44]	; 0x2c
   1ed64:	add	r2, r1, #1
   1ed68:	sub	r0, r0, r2
   1ed6c:	cmp	r0, #2
   1ed70:	blt	1eea8 <main@@Base+0x9160>
   1ed74:	ldrb	r0, [r2]
   1ed78:	cmp	r0, #32
   1ed7c:	bls	1ee98 <main@@Base+0x9150>
   1ed80:	mov	r1, r2
   1ed84:	cmp	r8, r1
   1ed88:	bne	1eec4 <main@@Base+0x917c>
   1ed8c:	b	1ef94 <main@@Base+0x924c>
   1ed90:	ldr	r0, [sp, #40]	; 0x28
   1ed94:	ldr	r2, [sp, #44]	; 0x2c
   1ed98:	mov	r3, #4
   1ed9c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1eda0:	b	1eeb8 <main@@Base+0x9170>
   1eda4:	bne	1edb8 <main@@Base+0x9070>
   1eda8:	mov	r1, r8
   1edac:	ldrb	r0, [r1, #8]!
   1edb0:	cmp	r0, #32
   1edb4:	bhi	1edcc <main@@Base+0x9084>
   1edb8:	mov	r1, r2
   1edbc:	ldr	r0, [sp, #40]	; 0x28
   1edc0:	ldr	r2, [sp, #44]	; 0x2c
   1edc4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1edc8:	mov	r1, r0
   1edcc:	ldr	r0, [sp, #44]	; 0x2c
   1edd0:	cmp	r1, r0
   1edd4:	beq	1ee14 <main@@Base+0x90cc>
   1edd8:	ldrb	r0, [r1]
   1eddc:	cmp	r0, #58	; 0x3a
   1ede0:	bne	1ee14 <main@@Base+0x90cc>
   1ede4:	ldr	r0, [sp, #44]	; 0x2c
   1ede8:	add	r2, r1, #1
   1edec:	sub	r0, r0, r2
   1edf0:	cmp	r0, #2
   1edf4:	blt	1ef18 <main@@Base+0x91d0>
   1edf8:	ldrb	r0, [r2]
   1edfc:	cmp	r0, #32
   1ee00:	bls	1ef08 <main@@Base+0x91c0>
   1ee04:	mov	r1, r2
   1ee08:	cmp	r8, r1
   1ee0c:	bne	1ef34 <main@@Base+0x91ec>
   1ee10:	b	1ef94 <main@@Base+0x924c>
   1ee14:	ldr	r0, [sp, #40]	; 0x28
   1ee18:	ldr	r2, [sp, #44]	; 0x2c
   1ee1c:	mov	r3, #4
   1ee20:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1ee24:	b	1ef28 <main@@Base+0x91e0>
   1ee28:	bne	1ee38 <main@@Base+0x90f0>
   1ee2c:	ldrb	r0, [r1, #2]!
   1ee30:	cmp	r0, #32
   1ee34:	bhi	1ee4c <main@@Base+0x9104>
   1ee38:	mov	r1, r2
   1ee3c:	ldr	r0, [sp, #40]	; 0x28
   1ee40:	ldr	r2, [sp, #44]	; 0x2c
   1ee44:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1ee48:	mov	r1, r0
   1ee4c:	cmp	r8, r1
   1ee50:	beq	1ef94 <main@@Base+0x924c>
   1ee54:	mov	r0, #0
   1ee58:	ldr	r2, [sp, #44]	; 0x2c
   1ee5c:	sub	r3, fp, #56	; 0x38
   1ee60:	str	r0, [sp]
   1ee64:	ldr	r0, [sp, #40]	; 0x28
   1ee68:	bl	37014 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1ee6c:	mov	sl, r0
   1ee70:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ee74:	cmp	r0, #0
   1ee78:	beq	175b8 <main@@Base+0x1870>
   1ee7c:	ldr	r0, [sp, #40]	; 0x28
   1ee80:	mov	r1, #0
   1ee84:	ldr	r0, [r0]
   1ee88:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1ee8c:	cmp	r0, #0
   1ee90:	bne	1ef74 <main@@Base+0x922c>
   1ee94:	b	175b8 <main@@Base+0x1870>
   1ee98:	bne	1eea8 <main@@Base+0x9160>
   1ee9c:	ldrb	r0, [r1, #2]!
   1eea0:	cmp	r0, #32
   1eea4:	bhi	1eebc <main@@Base+0x9174>
   1eea8:	mov	r1, r2
   1eeac:	ldr	r0, [sp, #40]	; 0x28
   1eeb0:	ldr	r2, [sp, #44]	; 0x2c
   1eeb4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1eeb8:	mov	r1, r0
   1eebc:	cmp	r8, r1
   1eec0:	beq	1ef94 <main@@Base+0x924c>
   1eec4:	mov	r0, #1
   1eec8:	ldr	r2, [sp, #44]	; 0x2c
   1eecc:	sub	r3, fp, #56	; 0x38
   1eed0:	str	r0, [sp]
   1eed4:	ldr	r0, [sp, #40]	; 0x28
   1eed8:	bl	37014 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1eedc:	mov	sl, r0
   1eee0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1eee4:	cmp	r0, #0
   1eee8:	beq	175b8 <main@@Base+0x1870>
   1eeec:	ldr	r0, [sp, #40]	; 0x28
   1eef0:	mov	r1, #1
   1eef4:	ldr	r0, [r0]
   1eef8:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1eefc:	cmp	r0, #0
   1ef00:	bne	1ef74 <main@@Base+0x922c>
   1ef04:	b	175b8 <main@@Base+0x1870>
   1ef08:	bne	1ef18 <main@@Base+0x91d0>
   1ef0c:	ldrb	r0, [r1, #2]!
   1ef10:	cmp	r0, #32
   1ef14:	bhi	1ef2c <main@@Base+0x91e4>
   1ef18:	mov	r1, r2
   1ef1c:	ldr	r0, [sp, #40]	; 0x28
   1ef20:	ldr	r2, [sp, #44]	; 0x2c
   1ef24:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1ef28:	mov	r1, r0
   1ef2c:	cmp	r8, r1
   1ef30:	beq	1ef94 <main@@Base+0x924c>
   1ef34:	mov	r0, #0
   1ef38:	ldr	r2, [sp, #44]	; 0x2c
   1ef3c:	sub	r3, fp, #56	; 0x38
   1ef40:	str	r0, [sp]
   1ef44:	ldr	r0, [sp, #40]	; 0x28
   1ef48:	bl	37014 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1ef4c:	mov	sl, r0
   1ef50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ef54:	cmp	r0, #0
   1ef58:	beq	175b8 <main@@Base+0x1870>
   1ef5c:	ldr	r0, [sp, #40]	; 0x28
   1ef60:	mov	r1, #2
   1ef64:	ldr	r0, [r0]
   1ef68:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1ef6c:	cmp	r0, #0
   1ef70:	beq	175b8 <main@@Base+0x1870>
   1ef74:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1ef78:	str	r1, [r0]
   1ef7c:	ldr	r6, [sp, #44]	; 0x2c
   1ef80:	ldr	r9, [sp, #40]	; 0x28
   1ef84:	sub	r0, r6, sl
   1ef88:	cmp	r0, #2
   1ef8c:	blt	1efec <main@@Base+0x92a4>
   1ef90:	b	1efbc <main@@Base+0x9274>
   1ef94:	ldr	r9, [sp, #40]	; 0x28
   1ef98:	ldr	r6, [sp, #44]	; 0x2c
   1ef9c:	mov	r1, r8
   1efa0:	mov	r0, r9
   1efa4:	mov	r2, r6
   1efa8:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   1efac:	mov	sl, r0
   1efb0:	sub	r0, r6, sl
   1efb4:	cmp	r0, #2
   1efb8:	blt	1efec <main@@Base+0x92a4>
   1efbc:	ldrb	r0, [sl]
   1efc0:	cmp	r0, #32
   1efc4:	bls	1efd8 <main@@Base+0x9290>
   1efc8:	mov	r2, sl
   1efcc:	cmp	r2, r6
   1efd0:	bne	1f008 <main@@Base+0x92c0>
   1efd4:	b	1f8f4 <main@@Base+0x9bac>
   1efd8:	bne	1efec <main@@Base+0x92a4>
   1efdc:	mov	r2, sl
   1efe0:	ldrb	r0, [r2, #1]!
   1efe4:	cmp	r0, #32
   1efe8:	bhi	1f000 <main@@Base+0x92b8>
   1efec:	mov	r0, r9
   1eff0:	mov	r1, sl
   1eff4:	mov	r2, r6
   1eff8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1effc:	mov	r2, r0
   1f000:	cmp	r2, r6
   1f004:	beq	1f8f4 <main@@Base+0x9bac>
   1f008:	ldrb	r0, [r2]
   1f00c:	cmp	r0, #44	; 0x2c
   1f010:	bne	1fb1c <main@@Base+0x9dd4>
   1f014:	add	r1, r2, #1
   1f018:	sub	r0, r6, r1
   1f01c:	cmp	r0, #2
   1f020:	blt	1f050 <main@@Base+0x9308>
   1f024:	ldrb	r0, [r1]
   1f028:	cmp	r0, #32
   1f02c:	bls	1f040 <main@@Base+0x92f8>
   1f030:	mov	r2, r1
   1f034:	cmp	r2, r6
   1f038:	bne	1f068 <main@@Base+0x9320>
   1f03c:	b	1fb7c <main@@Base+0x9e34>
   1f040:	bne	1f050 <main@@Base+0x9308>
   1f044:	ldrb	r0, [r2, #2]!
   1f048:	cmp	r0, #32
   1f04c:	bhi	1f060 <main@@Base+0x9318>
   1f050:	mov	r0, r9
   1f054:	mov	r2, r6
   1f058:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1f05c:	mov	r2, r0
   1f060:	cmp	r2, r6
   1f064:	beq	1fb7c <main@@Base+0x9e34>
   1f068:	ldrb	r0, [r2]
   1f06c:	cmp	r0, #125	; 0x7d
   1f070:	bne	1ea34 <main@@Base+0x8cec>
   1f074:	add	r1, r2, #1
   1f078:	sub	r0, r6, r1
   1f07c:	cmp	r0, #2
   1f080:	bge	1fb3c <main@@Base+0x9df4>
   1f084:	b	1791c <main@@Base+0x1bd4>
   1f088:	ldr	r6, [sp, #44]	; 0x2c
   1f08c:	ldr	r9, [sp, #40]	; 0x28
   1f090:	bne	1f0a0 <main@@Base+0x9358>
   1f094:	ldrb	r0, [sl, #2]!
   1f098:	cmp	r0, #32
   1f09c:	bhi	1f0b0 <main@@Base+0x9368>
   1f0a0:	mov	r0, r9
   1f0a4:	mov	r2, r6
   1f0a8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1f0ac:	mov	sl, r0
   1f0b0:	cmp	r7, sl
   1f0b4:	beq	1fd2c <main@@Base+0x9fe4>
   1f0b8:	ldr	r0, [r9]
   1f0bc:	mov	r1, #8
   1f0c0:	mov	r2, #8
   1f0c4:	mvn	r3, #-536870912	; 0xe0000000
   1f0c8:	bl	2f718 <flatcc_builder_start_vector@@Base>
   1f0cc:	cmp	r0, #0
   1f0d0:	bne	1ff10 <main@@Base+0xa1c8>
   1f0d4:	cmp	sl, r6
   1f0d8:	beq	1f118 <main@@Base+0x93d0>
   1f0dc:	ldrb	r0, [sl]
   1f0e0:	cmp	r0, #91	; 0x5b
   1f0e4:	bne	1f118 <main@@Base+0x93d0>
   1f0e8:	add	r1, sl, #1
   1f0ec:	sub	r0, r6, r1
   1f0f0:	cmp	r0, #2
   1f0f4:	blt	1f91c <main@@Base+0x9bd4>
   1f0f8:	ldrb	r0, [r1]
   1f0fc:	cmp	r0, #32
   1f100:	bls	1f90c <main@@Base+0x9bc4>
   1f104:	mov	sl, r1
   1f108:	ldr	r7, [sp, #44]	; 0x2c
   1f10c:	cmp	sl, r7
   1f110:	bne	1f938 <main@@Base+0x9bf0>
   1f114:	b	1f990 <main@@Base+0x9c48>
   1f118:	ldr	r9, [sp, #40]	; 0x28
   1f11c:	mov	r1, sl
   1f120:	mov	r2, r6
   1f124:	mov	r3, #22
   1f128:	mov	r0, r9
   1f12c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1f130:	mov	sl, r0
   1f134:	ldr	r0, [r9]
   1f138:	bl	30998 <flatcc_builder_end_vector@@Base>
   1f13c:	cmp	r0, #0
   1f140:	str	r0, [sp, #52]	; 0x34
   1f144:	beq	1ff00 <main@@Base+0xa1b8>
   1f148:	ldr	r0, [r9]
   1f14c:	mov	r1, #33	; 0x21
   1f150:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   1f154:	cmp	r0, #0
   1f158:	beq	1ff00 <main@@Base+0xa1b8>
   1f15c:	ldr	r1, [sp, #52]	; 0x34
   1f160:	ldr	r6, [sp, #44]	; 0x2c
   1f164:	b	17990 <main@@Base+0x1c48>
   1f168:	mov	r6, r0
   1f16c:	ldr	r9, [sp, #40]	; 0x28
   1f170:	str	r6, [fp, #-60]	; 0xffffffc4
   1f174:	cmp	sl, r8
   1f178:	bne	1f1b8 <main@@Base+0x9470>
   1f17c:	ldr	r4, [sp, #44]	; 0x2c
   1f180:	movw	r3, #53516	; 0xd10c
   1f184:	sub	r0, fp, #60	; 0x3c
   1f188:	mov	r1, sl
   1f18c:	str	r0, [sp]
   1f190:	mov	r0, r9
   1f194:	movt	r3, #5
   1f198:	mov	r2, r4
   1f19c:	bl	24450 <main@@Base+0xe708>
   1f1a0:	mov	r8, r0
   1f1a4:	cmp	r0, sl
   1f1a8:	cmpne	r8, r4
   1f1ac:	beq	1fecc <main@@Base+0xa184>
   1f1b0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1f1b4:	ldr	r9, [sp, #40]	; 0x28
   1f1b8:	cmp	r6, #0
   1f1bc:	bne	1f1cc <main@@Base+0x9484>
   1f1c0:	ldrb	r0, [r9, #8]
   1f1c4:	tst	r0, #2
   1f1c8:	beq	176ac <main@@Base+0x1964>
   1f1cc:	ldr	r0, [r9]
   1f1d0:	mov	r1, #20
   1f1d4:	mov	r2, #4
   1f1d8:	mov	r3, #4
   1f1dc:	bl	31040 <flatcc_builder_table_add@@Base>
   1f1e0:	cmp	r0, #0
   1f1e4:	beq	1fecc <main@@Base+0xa184>
   1f1e8:	str	r6, [r0]
   1f1ec:	b	176ac <main@@Base+0x1964>
   1f1f0:	ldr	r6, [sp, #44]	; 0x2c
   1f1f4:	ldr	r9, [sp, #40]	; 0x28
   1f1f8:	bne	1f208 <main@@Base+0x94c0>
   1f1fc:	ldrb	r0, [sl, #2]!
   1f200:	cmp	r0, #32
   1f204:	bhi	1f218 <main@@Base+0x94d0>
   1f208:	mov	r0, r9
   1f20c:	mov	r2, r6
   1f210:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1f214:	mov	sl, r0
   1f218:	cmp	sl, r6
   1f21c:	beq	1f27c <main@@Base+0x9534>
   1f220:	ldrb	r0, [sl]
   1f224:	cmp	r0, #93	; 0x5d
   1f228:	bne	1f278 <main@@Base+0x9530>
   1f22c:	ldr	r6, [sp, #44]	; 0x2c
   1f230:	ldr	r9, [sp, #40]	; 0x28
   1f234:	add	r1, sl, #1
   1f238:	sub	r0, r6, r1
   1f23c:	cmp	r0, #2
   1f240:	blt	1f268 <main@@Base+0x9520>
   1f244:	ldrb	r0, [r1]
   1f248:	cmp	r0, #32
   1f24c:	bhi	1730c <main@@Base+0x15c4>
   1f250:	ldr	r6, [sp, #44]	; 0x2c
   1f254:	ldr	r9, [sp, #40]	; 0x28
   1f258:	bne	1f268 <main@@Base+0x9520>
   1f25c:	ldrb	r0, [sl, #2]!
   1f260:	cmp	r0, #32
   1f264:	bhi	1d998 <main@@Base+0x7c50>
   1f268:	mov	r0, r9
   1f26c:	mov	r2, r6
   1f270:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1f274:	b	1d994 <main@@Base+0x7c4c>
   1f278:	mov	r6, sl
   1f27c:	mov	r0, #0
   1f280:	mov	r1, #1
   1f284:	str	r0, [sp, #60]	; 0x3c
   1f288:	str	r0, [sp, #56]	; 0x38
   1f28c:	ldr	r0, [sp, #40]	; 0x28
   1f290:	ldr	r0, [r0]
   1f294:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   1f298:	cmp	r0, #0
   1f29c:	beq	1ff18 <main@@Base+0xa1d0>
   1f2a0:	mov	sl, r6
   1f2a4:	ldr	r6, [sp, #44]	; 0x2c
   1f2a8:	ldr	r9, [sp, #40]	; 0x28
   1f2ac:	mov	r7, r0
   1f2b0:	mov	r0, #0
   1f2b4:	cmp	sl, r6
   1f2b8:	str	r0, [fp, #-52]	; 0xffffffcc
   1f2bc:	str	r0, [fp, #-56]	; 0xffffffc8
   1f2c0:	str	r0, [sp, #60]	; 0x3c
   1f2c4:	str	r0, [sp, #56]	; 0x38
   1f2c8:	str	r0, [fp, #-60]	; 0xffffffc4
   1f2cc:	beq	1f32c <main@@Base+0x95e4>
   1f2d0:	sub	r0, fp, #56	; 0x38
   1f2d4:	mov	r1, sl
   1f2d8:	mov	r2, r6
   1f2dc:	sub	r3, fp, #60	; 0x3c
   1f2e0:	str	r0, [sp]
   1f2e4:	mov	r0, r9
   1f2e8:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1f2ec:	cmp	r0, sl
   1f2f0:	beq	1f340 <main@@Base+0x95f8>
   1f2f4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1f2f8:	mov	r1, r0
   1f2fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f300:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f304:	cmp	r2, #0
   1f308:	beq	1f358 <main@@Base+0x9610>
   1f30c:	rsbs	r2, r0, #0
   1f310:	mov	r2, #-2147483648	; 0x80000000
   1f314:	sbcs	r2, r2, r3
   1f318:	bcs	1f390 <main@@Base+0x9648>
   1f31c:	ldr	r9, [sp, #40]	; 0x28
   1f320:	ldr	r6, [sp, #44]	; 0x2c
   1f324:	mov	r3, #8
   1f328:	b	1f36c <main@@Base+0x9624>
   1f32c:	mov	r3, #0
   1f330:	mov	r1, r6
   1f334:	cmp	sl, r1
   1f338:	bne	1f3f0 <main@@Base+0x96a8>
   1f33c:	b	1f3b0 <main@@Base+0x9668>
   1f340:	mov	r0, #0
   1f344:	mov	r3, #0
   1f348:	mov	r1, sl
   1f34c:	cmp	sl, r1
   1f350:	bne	1f3f0 <main@@Base+0x96a8>
   1f354:	b	1f3b0 <main@@Base+0x9668>
   1f358:	cmn	r3, #1
   1f35c:	bgt	1f398 <main@@Base+0x9650>
   1f360:	ldr	r9, [sp, #40]	; 0x28
   1f364:	ldr	r6, [sp, #44]	; 0x2c
   1f368:	mov	r3, #7
   1f36c:	mov	r0, r9
   1f370:	mov	r2, r6
   1f374:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1f378:	mov	r1, r0
   1f37c:	mov	r0, #0
   1f380:	mov	r3, #0
   1f384:	cmp	sl, r1
   1f388:	bne	1f3f0 <main@@Base+0x96a8>
   1f38c:	b	1f3b0 <main@@Base+0x9668>
   1f390:	rsbs	r0, r0, #0
   1f394:	rsc	r3, r3, #0
   1f398:	ldr	r6, [sp, #44]	; 0x2c
   1f39c:	ldr	r9, [sp, #40]	; 0x28
   1f3a0:	str	r0, [sp, #56]	; 0x38
   1f3a4:	str	r3, [sp, #60]	; 0x3c
   1f3a8:	cmp	sl, r1
   1f3ac:	bne	1f3f0 <main@@Base+0x96a8>
   1f3b0:	add	r0, sp, #56	; 0x38
   1f3b4:	mov	r1, sl
   1f3b8:	mov	r2, r6
   1f3bc:	str	r0, [sp]
   1f3c0:	movw	r0, #53516	; 0xd10c
   1f3c4:	movt	r0, #5
   1f3c8:	add	r3, r0, #108	; 0x6c
   1f3cc:	mov	r0, r9
   1f3d0:	bl	2467c <main@@Base+0xe934>
   1f3d4:	mov	r1, r0
   1f3d8:	cmp	r0, sl
   1f3dc:	cmpne	r1, r6
   1f3e0:	beq	1ff20 <main@@Base+0xa1d8>
   1f3e4:	ldr	r0, [sp, #56]	; 0x38
   1f3e8:	ldr	r3, [sp, #60]	; 0x3c
   1f3ec:	ldr	r9, [sp, #40]	; 0x28
   1f3f0:	stm	r7, {r0, r3}
   1f3f4:	sub	r0, r6, r1
   1f3f8:	cmp	r0, #2
   1f3fc:	blt	1f430 <main@@Base+0x96e8>
   1f400:	ldrb	r0, [r1]
   1f404:	cmp	r0, #32
   1f408:	bls	1f41c <main@@Base+0x96d4>
   1f40c:	mov	sl, r1
   1f410:	cmp	sl, r6
   1f414:	bne	1f448 <main@@Base+0x9700>
   1f418:	b	17234 <main@@Base+0x14ec>
   1f41c:	bne	1f430 <main@@Base+0x96e8>
   1f420:	mov	sl, r1
   1f424:	ldrb	r0, [sl, #1]!
   1f428:	cmp	r0, #32
   1f42c:	bhi	1f440 <main@@Base+0x96f8>
   1f430:	mov	r0, r9
   1f434:	mov	r2, r6
   1f438:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1f43c:	mov	sl, r0
   1f440:	cmp	sl, r6
   1f444:	beq	17234 <main@@Base+0x14ec>
   1f448:	ldrb	r0, [sl]
   1f44c:	cmp	r0, #44	; 0x2c
   1f450:	bne	17248 <main@@Base+0x1500>
   1f454:	add	r1, sl, #1
   1f458:	sub	r0, r6, r1
   1f45c:	cmp	r0, #2
   1f460:	blt	1f490 <main@@Base+0x9748>
   1f464:	ldrb	r0, [r1]
   1f468:	cmp	r0, #32
   1f46c:	bls	1f480 <main@@Base+0x9738>
   1f470:	mov	sl, r1
   1f474:	cmp	sl, r6
   1f478:	bne	1f4a8 <main@@Base+0x9760>
   1f47c:	b	17280 <main@@Base+0x1538>
   1f480:	bne	1f490 <main@@Base+0x9748>
   1f484:	ldrb	r0, [sl, #2]!
   1f488:	cmp	r0, #32
   1f48c:	bhi	1f4a0 <main@@Base+0x9758>
   1f490:	mov	r0, r9
   1f494:	mov	r2, r6
   1f498:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1f49c:	mov	sl, r0
   1f4a0:	cmp	sl, r6
   1f4a4:	beq	17280 <main@@Base+0x1538>
   1f4a8:	ldrb	r0, [sl]
   1f4ac:	cmp	r0, #93	; 0x5d
   1f4b0:	beq	172f0 <main@@Base+0x15a8>
   1f4b4:	mov	r0, #0
   1f4b8:	mov	r1, #1
   1f4bc:	str	r0, [sp, #60]	; 0x3c
   1f4c0:	str	r0, [sp, #56]	; 0x38
   1f4c4:	ldr	r0, [r9]
   1f4c8:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   1f4cc:	mov	r7, r0
   1f4d0:	cmp	r0, #0
   1f4d4:	bne	1f2b0 <main@@Base+0x9568>
   1f4d8:	b	16638 <main@@Base+0x8f0>
   1f4dc:	ldr	r6, [sp, #44]	; 0x2c
   1f4e0:	ldr	r9, [sp, #40]	; 0x28
   1f4e4:	bne	1f4f4 <main@@Base+0x97ac>
   1f4e8:	ldrb	r0, [sl, #2]!
   1f4ec:	cmp	r0, #32
   1f4f0:	bhi	1f504 <main@@Base+0x97bc>
   1f4f4:	mov	r0, r9
   1f4f8:	mov	r2, r6
   1f4fc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1f500:	mov	sl, r0
   1f504:	cmp	r7, sl
   1f508:	beq	1fd2c <main@@Base+0x9fe4>
   1f50c:	mov	r2, r6
   1f510:	mov	r6, #0
   1f514:	cmp	sl, r2
   1f518:	str	r6, [fp, #-52]	; 0xffffffcc
   1f51c:	str	r6, [fp, #-56]	; 0xffffffc8
   1f520:	str	r6, [sp, #60]	; 0x3c
   1f524:	str	r6, [sp, #56]	; 0x38
   1f528:	str	r6, [fp, #-60]	; 0xffffffc4
   1f52c:	beq	1f584 <main@@Base+0x983c>
   1f530:	sub	r0, fp, #56	; 0x38
   1f534:	mov	r1, sl
   1f538:	sub	r3, fp, #60	; 0x3c
   1f53c:	str	r0, [sp]
   1f540:	mov	r0, r9
   1f544:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1f548:	cmp	r0, sl
   1f54c:	beq	1f598 <main@@Base+0x9850>
   1f550:	sub	r7, fp, #60	; 0x3c
   1f554:	mov	r8, r0
   1f558:	ldm	r7, {r0, r6, r7}
   1f55c:	cmp	r0, #0
   1f560:	beq	1f5b4 <main@@Base+0x986c>
   1f564:	subs	r0, r6, #1
   1f568:	sbcs	r0, r7, #-2147483648	; 0x80000000
   1f56c:	bcc	1f5ec <main@@Base+0x98a4>
   1f570:	ldr	r9, [sp, #40]	; 0x28
   1f574:	ldr	r2, [sp, #44]	; 0x2c
   1f578:	mov	r1, r8
   1f57c:	mov	r3, #8
   1f580:	b	1f5cc <main@@Base+0x9884>
   1f584:	mov	r7, #0
   1f588:	mov	r8, r2
   1f58c:	cmp	sl, r8
   1f590:	bne	1f64c <main@@Base+0x9904>
   1f594:	b	1f608 <main@@Base+0x98c0>
   1f598:	mov	r6, #0
   1f59c:	mov	r7, #0
   1f5a0:	mov	r8, sl
   1f5a4:	ldr	r9, [sp, #40]	; 0x28
   1f5a8:	cmp	sl, r8
   1f5ac:	bne	1f64c <main@@Base+0x9904>
   1f5b0:	b	1f608 <main@@Base+0x98c0>
   1f5b4:	cmn	r7, #1
   1f5b8:	bgt	1f5f4 <main@@Base+0x98ac>
   1f5bc:	ldr	r9, [sp, #40]	; 0x28
   1f5c0:	ldr	r2, [sp, #44]	; 0x2c
   1f5c4:	mov	r1, r8
   1f5c8:	mov	r3, #7
   1f5cc:	mov	r0, r9
   1f5d0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1f5d4:	mov	r8, r0
   1f5d8:	mov	r6, #0
   1f5dc:	mov	r7, #0
   1f5e0:	cmp	sl, r8
   1f5e4:	bne	1f64c <main@@Base+0x9904>
   1f5e8:	b	1f608 <main@@Base+0x98c0>
   1f5ec:	rsbs	r6, r6, #0
   1f5f0:	rsc	r7, r7, #0
   1f5f4:	str	r6, [sp, #56]	; 0x38
   1f5f8:	str	r7, [sp, #60]	; 0x3c
   1f5fc:	ldr	r9, [sp, #40]	; 0x28
   1f600:	cmp	sl, r8
   1f604:	bne	1f64c <main@@Base+0x9904>
   1f608:	add	r0, sp, #56	; 0x38
   1f60c:	ldr	r2, [sp, #44]	; 0x2c
   1f610:	mov	r1, sl
   1f614:	str	r0, [sp]
   1f618:	movw	r0, #53516	; 0xd10c
   1f61c:	movt	r0, #5
   1f620:	add	r3, r0, #24
   1f624:	mov	r0, r9
   1f628:	bl	2467c <main@@Base+0xe934>
   1f62c:	cmp	r0, sl
   1f630:	mov	r8, r0
   1f634:	ldrne	r0, [sp, #44]	; 0x2c
   1f638:	cmpne	r8, r0
   1f63c:	beq	1fecc <main@@Base+0xa184>
   1f640:	ldr	r6, [sp, #56]	; 0x38
   1f644:	ldr	r7, [sp, #60]	; 0x3c
   1f648:	ldr	r9, [sp, #40]	; 0x28
   1f64c:	orrs	r0, r6, r7
   1f650:	bne	1f660 <main@@Base+0x9918>
   1f654:	ldrb	r0, [r9, #8]
   1f658:	tst	r0, #2
   1f65c:	beq	176ac <main@@Base+0x1964>
   1f660:	ldr	r0, [r9]
   1f664:	mov	r1, #22
   1f668:	mov	r2, #8
   1f66c:	mov	r3, #8
   1f670:	bl	31040 <flatcc_builder_table_add@@Base>
   1f674:	cmp	r0, #0
   1f678:	beq	1fecc <main@@Base+0xa184>
   1f67c:	strd	r6, [r0]
   1f680:	b	176ac <main@@Base+0x1964>
   1f684:	mov	sl, r6
   1f688:	b	1cd5c <main@@Base+0x7014>
   1f68c:	cmp	r0, #93	; 0x5d
   1f690:	bne	175f0 <main@@Base+0x18a8>
   1f694:	ldr	r6, [sp, #44]	; 0x2c
   1f698:	ldr	r9, [sp, #40]	; 0x28
   1f69c:	add	r1, r2, #1
   1f6a0:	sub	r0, r6, r1
   1f6a4:	cmp	r0, #2
   1f6a8:	blt	177b4 <main@@Base+0x1a6c>
   1f6ac:	ldrb	r0, [r1]
   1f6b0:	cmp	r0, #32
   1f6b4:	bls	17798 <main@@Base+0x1a50>
   1f6b8:	ldr	r6, [sp, #44]	; 0x2c
   1f6bc:	ldr	r9, [sp, #40]	; 0x28
   1f6c0:	mov	sl, r1
   1f6c4:	b	1cd5c <main@@Base+0x7014>
   1f6c8:	mov	sl, r6
   1f6cc:	b	17800 <main@@Base+0x1ab8>
   1f6d0:	mov	r0, r9
   1f6d4:	mov	r1, r6
   1f6d8:	b	17600 <main@@Base+0x18b8>
   1f6dc:	cmp	r0, #93	; 0x5d
   1f6e0:	bne	1760c <main@@Base+0x18c4>
   1f6e4:	ldr	r0, [sp, #44]	; 0x2c
   1f6e8:	add	r1, sl, #1
   1f6ec:	sub	r0, r0, r1
   1f6f0:	cmp	r0, #2
   1f6f4:	blt	177f0 <main@@Base+0x1aa8>
   1f6f8:	b	1f8c4 <main@@Base+0x9b7c>
   1f6fc:	mov	r0, r9
   1f700:	mov	r1, r6
   1f704:	mov	r2, r6
   1f708:	b	17618 <main@@Base+0x18d0>
   1f70c:	ldr	r6, [sp, #44]	; 0x2c
   1f710:	bne	1f720 <main@@Base+0x99d8>
   1f714:	ldrb	r0, [sl, #2]!
   1f718:	cmp	r0, #32
   1f71c:	bhi	1f730 <main@@Base+0x99e8>
   1f720:	ldr	r0, [sp, #40]	; 0x28
   1f724:	mov	r2, r6
   1f728:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1f72c:	mov	sl, r0
   1f730:	cmp	sl, r6
   1f734:	mov	r3, r6
   1f738:	beq	1f78c <main@@Base+0x9a44>
   1f73c:	ldrb	r0, [sl]
   1f740:	cmp	r0, #125	; 0x7d
   1f744:	bne	1f788 <main@@Base+0x9a40>
   1f748:	ldr	r6, [sp, #44]	; 0x2c
   1f74c:	ldr	r9, [sp, #40]	; 0x28
   1f750:	add	r1, sl, #1
   1f754:	sub	r0, r6, r1
   1f758:	cmp	r0, #2
   1f75c:	blt	17a1c <main@@Base+0x1cd4>
   1f760:	ldrb	r0, [r1]
   1f764:	cmp	r0, #32
   1f768:	bhi	172bc <main@@Base+0x1574>
   1f76c:	ldr	r6, [sp, #44]	; 0x2c
   1f770:	ldr	r9, [sp, #40]	; 0x28
   1f774:	bne	17a1c <main@@Base+0x1cd4>
   1f778:	ldrb	r0, [sl, #2]!
   1f77c:	cmp	r0, #32
   1f780:	bhi	1cbec <main@@Base+0x6ea4>
   1f784:	b	17a1c <main@@Base+0x1cd4>
   1f788:	mov	r3, sl
   1f78c:	ldr	r6, [sp, #44]	; 0x2c
   1f790:	ldr	r9, [sp, #40]	; 0x28
   1f794:	cmp	r3, r6
   1f798:	mov	r1, r6
   1f79c:	beq	1f7cc <main@@Base+0x9a84>
   1f7a0:	ldrb	r0, [r3]
   1f7a4:	cmp	r0, #34	; 0x22
   1f7a8:	bne	1f7b4 <main@@Base+0x9a6c>
   1f7ac:	add	r1, r3, #1
   1f7b0:	b	1f7cc <main@@Base+0x9a84>
   1f7b4:	mov	r1, r3
   1f7b8:	mov	r0, r9
   1f7bc:	mov	r2, r6
   1f7c0:	mov	r3, #5
   1f7c4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1f7c8:	mov	r1, r0
   1f7cc:	mov	r0, r9
   1f7d0:	mov	r2, r6
   1f7d4:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   1f7d8:	mov	r2, r0
   1f7dc:	sub	r0, r6, r0
   1f7e0:	cmp	r0, #2
   1f7e4:	blt	1f818 <main@@Base+0x9ad0>
   1f7e8:	ldrb	r0, [r2]
   1f7ec:	cmp	r0, #32
   1f7f0:	bls	1f804 <main@@Base+0x9abc>
   1f7f4:	mov	r3, r2
   1f7f8:	cmp	r3, r6
   1f7fc:	bne	1f834 <main@@Base+0x9aec>
   1f800:	b	17268 <main@@Base+0x1520>
   1f804:	bne	1f818 <main@@Base+0x9ad0>
   1f808:	mov	r3, r2
   1f80c:	ldrb	r0, [r3, #1]!
   1f810:	cmp	r0, #32
   1f814:	bhi	1f82c <main@@Base+0x9ae4>
   1f818:	mov	r1, r2
   1f81c:	mov	r0, r9
   1f820:	mov	r2, r6
   1f824:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1f828:	mov	r3, r0
   1f82c:	cmp	r3, r6
   1f830:	beq	17268 <main@@Base+0x1520>
   1f834:	ldrb	r0, [r3]
   1f838:	cmp	r0, #44	; 0x2c
   1f83c:	bne	17290 <main@@Base+0x1548>
   1f840:	add	r1, r3, #1
   1f844:	sub	r0, r6, r1
   1f848:	cmp	r0, #2
   1f84c:	blt	1f87c <main@@Base+0x9b34>
   1f850:	ldrb	r0, [r1]
   1f854:	cmp	r0, #32
   1f858:	bls	1f86c <main@@Base+0x9b24>
   1f85c:	mov	r3, r1
   1f860:	cmp	r3, r6
   1f864:	bne	1f894 <main@@Base+0x9b4c>
   1f868:	b	17314 <main@@Base+0x15cc>
   1f86c:	bne	1f87c <main@@Base+0x9b34>
   1f870:	ldrb	r0, [r3, #2]!
   1f874:	cmp	r0, #32
   1f878:	bhi	1f88c <main@@Base+0x9b44>
   1f87c:	mov	r0, r9
   1f880:	mov	r2, r6
   1f884:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1f888:	mov	r3, r0
   1f88c:	cmp	r3, r6
   1f890:	beq	17314 <main@@Base+0x15cc>
   1f894:	ldrb	r0, [r3]
   1f898:	cmp	r0, #125	; 0x7d
   1f89c:	bne	1f794 <main@@Base+0x9a4c>
   1f8a0:	add	r1, r3, #1
   1f8a4:	sub	r0, r6, r1
   1f8a8:	cmp	r0, #2
   1f8ac:	bge	172b0 <main@@Base+0x1568>
   1f8b0:	b	17a1c <main@@Base+0x1cd4>
   1f8b4:	add	r1, sl, #1
   1f8b8:	sub	r0, r6, r1
   1f8bc:	cmp	r0, #2
   1f8c0:	blt	177f0 <main@@Base+0x1aa8>
   1f8c4:	ldrb	r0, [r1]
   1f8c8:	cmp	r0, #32
   1f8cc:	bls	177e0 <main@@Base+0x1a98>
   1f8d0:	mov	sl, r1
   1f8d4:	b	17800 <main@@Base+0x1ab8>
   1f8d8:	ldr	r9, [sp, #40]	; 0x28
   1f8dc:	ldr	r6, [sp, #44]	; 0x2c
   1f8e0:	mov	r1, r8
   1f8e4:	mov	r0, r9
   1f8e8:	mov	r2, r6
   1f8ec:	mov	r3, #9
   1f8f0:	b	1c660 <main@@Base+0x6918>
   1f8f4:	mov	sl, r6
   1f8f8:	ldr	r0, [sp, #32]
   1f8fc:	ldr	r0, [r0]
   1f900:	cmp	r0, #0
   1f904:	bne	1c44c <main@@Base+0x6704>
   1f908:	b	1fb64 <main@@Base+0x9e1c>
   1f90c:	bne	1f91c <main@@Base+0x9bd4>
   1f910:	ldrb	r0, [sl, #2]!
   1f914:	cmp	r0, #32
   1f918:	bhi	1f92c <main@@Base+0x9be4>
   1f91c:	ldr	r0, [sp, #40]	; 0x28
   1f920:	ldr	r2, [sp, #44]	; 0x2c
   1f924:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1f928:	mov	sl, r0
   1f92c:	ldr	r7, [sp, #44]	; 0x2c
   1f930:	cmp	sl, r7
   1f934:	beq	1f990 <main@@Base+0x9c48>
   1f938:	ldrb	r0, [sl]
   1f93c:	cmp	r0, #93	; 0x5d
   1f940:	bne	1f98c <main@@Base+0x9c44>
   1f944:	ldr	r0, [sp, #44]	; 0x2c
   1f948:	ldr	r9, [sp, #40]	; 0x28
   1f94c:	add	r1, sl, #1
   1f950:	sub	r0, r0, r1
   1f954:	cmp	r0, #2
   1f958:	blt	1f97c <main@@Base+0x9c34>
   1f95c:	ldrb	r0, [r1]
   1f960:	cmp	r0, #32
   1f964:	bhi	1777c <main@@Base+0x1a34>
   1f968:	ldr	r9, [sp, #40]	; 0x28
   1f96c:	bne	1f97c <main@@Base+0x9c34>
   1f970:	ldrb	r0, [sl, #2]!
   1f974:	cmp	r0, #32
   1f978:	bhi	1f134 <main@@Base+0x93ec>
   1f97c:	ldr	r2, [sp, #44]	; 0x2c
   1f980:	mov	r0, r9
   1f984:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1f988:	b	1f130 <main@@Base+0x93e8>
   1f98c:	mov	r7, sl
   1f990:	mov	r0, #0
   1f994:	mov	r1, #1
   1f998:	str	r0, [fp, #-52]	; 0xffffffcc
   1f99c:	str	r0, [fp, #-56]	; 0xffffffc8
   1f9a0:	ldr	r0, [sp, #40]	; 0x28
   1f9a4:	ldr	r0, [r0]
   1f9a8:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   1f9ac:	cmp	r0, #0
   1f9b0:	beq	1ff2c <main@@Base+0xa1e4>
   1f9b4:	ldr	r6, [sp, #44]	; 0x2c
   1f9b8:	ldr	r9, [sp, #40]	; 0x28
   1f9bc:	mov	r8, r0
   1f9c0:	mov	sl, r7
   1f9c4:	mov	r0, r9
   1f9c8:	mov	r1, sl
   1f9cc:	mov	r2, r6
   1f9d0:	sub	r3, fp, #56	; 0x38
   1f9d4:	bl	36308 <flatcc_json_parser_double@@Base>
   1f9d8:	mov	r7, r0
   1f9dc:	cmp	sl, r0
   1f9e0:	bne	1fa24 <main@@Base+0x9cdc>
   1f9e4:	sub	r0, fp, #56	; 0x38
   1f9e8:	mov	r1, sl
   1f9ec:	mov	r2, r6
   1f9f0:	str	r0, [sp]
   1f9f4:	movw	r0, #53516	; 0xd10c
   1f9f8:	movt	r0, #5
   1f9fc:	add	r3, r0, #96	; 0x60
   1fa00:	mov	r0, r9
   1fa04:	bl	24cc0 <main@@Base+0xef78>
   1fa08:	mov	r7, r0
   1fa0c:	cmp	r0, sl
   1fa10:	beq	1ff2c <main@@Base+0xa1e4>
   1fa14:	ldr	r6, [sp, #44]	; 0x2c
   1fa18:	ldr	r9, [sp, #40]	; 0x28
   1fa1c:	cmp	r7, r6
   1fa20:	beq	1ff08 <main@@Base+0xa1c0>
   1fa24:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1fa28:	sub	r0, r6, r7
   1fa2c:	cmp	r0, #2
   1fa30:	vstr	d16, [r8]
   1fa34:	blt	1fa68 <main@@Base+0x9d20>
   1fa38:	ldrb	r0, [r7]
   1fa3c:	cmp	r0, #32
   1fa40:	bls	1fa54 <main@@Base+0x9d0c>
   1fa44:	mov	sl, r7
   1fa48:	cmp	sl, r6
   1fa4c:	bne	1fa84 <main@@Base+0x9d3c>
   1fa50:	b	176c0 <main@@Base+0x1978>
   1fa54:	bne	1fa68 <main@@Base+0x9d20>
   1fa58:	mov	sl, r7
   1fa5c:	ldrb	r0, [sl, #1]!
   1fa60:	cmp	r0, #32
   1fa64:	bhi	1fa7c <main@@Base+0x9d34>
   1fa68:	mov	r0, r9
   1fa6c:	mov	r1, r7
   1fa70:	mov	r2, r6
   1fa74:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1fa78:	mov	sl, r0
   1fa7c:	cmp	sl, r6
   1fa80:	beq	176c0 <main@@Base+0x1978>
   1fa84:	ldrb	r0, [sl]
   1fa88:	cmp	r0, #44	; 0x2c
   1fa8c:	bne	176cc <main@@Base+0x1984>
   1fa90:	add	r1, sl, #1
   1fa94:	sub	r0, r6, r1
   1fa98:	cmp	r0, #2
   1fa9c:	blt	1facc <main@@Base+0x9d84>
   1faa0:	ldrb	r0, [r1]
   1faa4:	cmp	r0, #32
   1faa8:	bls	1fabc <main@@Base+0x9d74>
   1faac:	mov	sl, r1
   1fab0:	cmp	sl, r6
   1fab4:	bne	1fae4 <main@@Base+0x9d9c>
   1fab8:	b	17708 <main@@Base+0x19c0>
   1fabc:	bne	1facc <main@@Base+0x9d84>
   1fac0:	ldrb	r0, [sl, #2]!
   1fac4:	cmp	r0, #32
   1fac8:	bhi	1fadc <main@@Base+0x9d94>
   1facc:	mov	r0, r9
   1fad0:	mov	r2, r6
   1fad4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1fad8:	mov	sl, r0
   1fadc:	cmp	sl, r6
   1fae0:	beq	17708 <main@@Base+0x19c0>
   1fae4:	ldrb	r0, [sl]
   1fae8:	cmp	r0, #93	; 0x5d
   1faec:	beq	17760 <main@@Base+0x1a18>
   1faf0:	mov	r0, #0
   1faf4:	mov	r1, #1
   1faf8:	str	r0, [fp, #-52]	; 0xffffffcc
   1fafc:	str	r0, [fp, #-56]	; 0xffffffc8
   1fb00:	ldr	r0, [r9]
   1fb04:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   1fb08:	mov	r8, r0
   1fb0c:	cmp	r0, #0
   1fb10:	mov	r7, sl
   1fb14:	bne	1f9c4 <main@@Base+0x9c7c>
   1fb18:	b	1ff08 <main@@Base+0xa1c0>
   1fb1c:	cmp	r0, #125	; 0x7d
   1fb20:	bne	17744 <main@@Base+0x19fc>
   1fb24:	ldr	r6, [sp, #44]	; 0x2c
   1fb28:	ldr	r9, [sp, #40]	; 0x28
   1fb2c:	add	r1, r2, #1
   1fb30:	sub	r0, r6, r1
   1fb34:	cmp	r0, #2
   1fb38:	blt	1791c <main@@Base+0x1bd4>
   1fb3c:	ldrb	r0, [r1]
   1fb40:	cmp	r0, #32
   1fb44:	bls	17900 <main@@Base+0x1bb8>
   1fb48:	ldr	r6, [sp, #44]	; 0x2c
   1fb4c:	ldr	r9, [sp, #40]	; 0x28
   1fb50:	mov	sl, r1
   1fb54:	ldr	r0, [sp, #32]
   1fb58:	ldr	r0, [r0]
   1fb5c:	cmp	r0, #0
   1fb60:	bne	1c44c <main@@Base+0x6704>
   1fb64:	ldr	r0, [r9]
   1fb68:	bl	30680 <flatcc_builder_end_table@@Base>
   1fb6c:	cmp	r0, #0
   1fb70:	str	r0, [sp, #52]	; 0x34
   1fb74:	bne	1c470 <main@@Base+0x6728>
   1fb78:	b	1c44c <main@@Base+0x6704>
   1fb7c:	mov	r0, r9
   1fb80:	mov	r1, r6
   1fb84:	b	17754 <main@@Base+0x1a0c>
   1fb88:	ldr	r6, [sp, #44]	; 0x2c
   1fb8c:	ldr	r9, [sp, #40]	; 0x28
   1fb90:	bne	1fba0 <main@@Base+0x9e58>
   1fb94:	ldrb	r0, [sl, #2]!
   1fb98:	cmp	r0, #32
   1fb9c:	bhi	1fbb0 <main@@Base+0x9e68>
   1fba0:	mov	r0, r9
   1fba4:	mov	r2, r6
   1fba8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1fbac:	mov	sl, r0
   1fbb0:	cmp	r7, sl
   1fbb4:	beq	1fd2c <main@@Base+0x9fe4>
   1fbb8:	mov	r5, #0
   1fbbc:	cmp	sl, r6
   1fbc0:	str	r5, [fp, #-52]	; 0xffffffcc
   1fbc4:	str	r5, [fp, #-56]	; 0xffffffc8
   1fbc8:	str	r5, [fp, #-60]	; 0xffffffc4
   1fbcc:	str	r5, [sp, #56]	; 0x38
   1fbd0:	beq	1fc2c <main@@Base+0x9ee4>
   1fbd4:	sub	r0, fp, #56	; 0x38
   1fbd8:	mov	r1, sl
   1fbdc:	mov	r2, r6
   1fbe0:	add	r3, sp, #56	; 0x38
   1fbe4:	str	r0, [sp]
   1fbe8:	ldr	r0, [sp, #40]	; 0x28
   1fbec:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1fbf0:	cmp	r0, sl
   1fbf4:	beq	1fc3c <main@@Base+0x9ef4>
   1fbf8:	mov	r8, r0
   1fbfc:	ldr	r0, [sp, #56]	; 0x38
   1fc00:	cmp	r0, #0
   1fc04:	beq	1fc4c <main@@Base+0x9f04>
   1fc08:	ldr	r0, [sp, #40]	; 0x28
   1fc0c:	ldr	r2, [sp, #44]	; 0x2c
   1fc10:	mov	r1, r8
   1fc14:	mov	r3, #8
   1fc18:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1fc1c:	mov	r8, r0
   1fc20:	cmp	sl, r8
   1fc24:	bne	17670 <main@@Base+0x1928>
   1fc28:	b	17634 <main@@Base+0x18ec>
   1fc2c:	mov	r8, r6
   1fc30:	cmp	sl, r8
   1fc34:	bne	17670 <main@@Base+0x1928>
   1fc38:	b	17634 <main@@Base+0x18ec>
   1fc3c:	mov	r8, sl
   1fc40:	cmp	sl, r8
   1fc44:	bne	17670 <main@@Base+0x1928>
   1fc48:	b	17634 <main@@Base+0x18ec>
   1fc4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fc50:	cmp	r0, #0
   1fc54:	beq	17624 <main@@Base+0x18dc>
   1fc58:	ldr	r0, [sp, #40]	; 0x28
   1fc5c:	ldr	r2, [sp, #44]	; 0x2c
   1fc60:	mov	r1, r8
   1fc64:	mov	r3, #7
   1fc68:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1fc6c:	mov	r8, r0
   1fc70:	cmp	sl, r8
   1fc74:	bne	17670 <main@@Base+0x1928>
   1fc78:	b	17634 <main@@Base+0x18ec>
   1fc7c:	ldr	r6, [sp, #44]	; 0x2c
   1fc80:	ldr	r9, [sp, #40]	; 0x28
   1fc84:	bne	1fc94 <main@@Base+0x9f4c>
   1fc88:	ldrb	r0, [sl, #2]!
   1fc8c:	cmp	r0, #32
   1fc90:	bhi	1fca4 <main@@Base+0x9f5c>
   1fc94:	mov	r0, r9
   1fc98:	mov	r2, r6
   1fc9c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1fca0:	mov	sl, r0
   1fca4:	cmp	r7, sl
   1fca8:	beq	1fd2c <main@@Base+0x9fe4>
   1fcac:	mov	r2, r6
   1fcb0:	mov	r6, #0
   1fcb4:	cmp	sl, r2
   1fcb8:	str	r6, [fp, #-52]	; 0xffffffcc
   1fcbc:	str	r6, [fp, #-56]	; 0xffffffc8
   1fcc0:	str	r6, [sp, #60]	; 0x3c
   1fcc4:	str	r6, [sp, #56]	; 0x38
   1fcc8:	str	r6, [fp, #-60]	; 0xffffffc4
   1fccc:	beq	16834 <main@@Base+0xaec>
   1fcd0:	sub	r0, fp, #56	; 0x38
   1fcd4:	mov	r1, sl
   1fcd8:	sub	r3, fp, #60	; 0x3c
   1fcdc:	str	r0, [sp]
   1fce0:	ldr	r0, [sp, #40]	; 0x28
   1fce4:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   1fce8:	cmp	r0, sl
   1fcec:	beq	16848 <main@@Base+0xb00>
   1fcf0:	mov	r8, r0
   1fcf4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1fcf8:	cmp	r0, #0
   1fcfc:	beq	16860 <main@@Base+0xb18>
   1fd00:	ldr	r0, [sp, #40]	; 0x28
   1fd04:	ldr	r2, [sp, #44]	; 0x2c
   1fd08:	mov	r1, r8
   1fd0c:	mov	r3, #8
   1fd10:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1fd14:	mov	r8, r0
   1fd18:	mov	r6, #0
   1fd1c:	mov	r7, #0
   1fd20:	cmp	sl, r8
   1fd24:	bne	168b8 <main@@Base+0xb70>
   1fd28:	b	16878 <main@@Base+0xb30>
   1fd2c:	mov	r0, r9
   1fd30:	mov	r1, r7
   1fd34:	mov	r2, r6
   1fd38:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   1fd3c:	mov	r8, r0
   1fd40:	sub	r0, r6, r8
   1fd44:	cmp	r0, #2
   1fd48:	blt	1fdc0 <main@@Base+0xa078>
   1fd4c:	ldrb	r0, [r8]
   1fd50:	cmp	r0, #32
   1fd54:	bls	1fdac <main@@Base+0xa064>
   1fd58:	mov	r2, r8
   1fd5c:	cmp	r2, r6
   1fd60:	beq	1fddc <main@@Base+0xa094>
   1fd64:	ldrb	r0, [r2]
   1fd68:	ldr	r4, [sp, #36]	; 0x24
   1fd6c:	cmp	r0, #44	; 0x2c
   1fd70:	bne	1fdf8 <main@@Base+0xa0b0>
   1fd74:	add	r1, r2, #1
   1fd78:	sub	r0, r6, r1
   1fd7c:	cmp	r0, #2
   1fd80:	blt	16818 <main@@Base+0xad0>
   1fd84:	ldrb	r0, [r1]
   1fd88:	cmp	r0, #32
   1fd8c:	bls	16808 <main@@Base+0xac0>
   1fd90:	mov	r2, r1
   1fd94:	cmp	r2, r6
   1fd98:	beq	1fe14 <main@@Base+0xa0cc>
   1fd9c:	ldrb	r0, [r2]
   1fda0:	cmp	r0, #125	; 0x7d
   1fda4:	bne	17a98 <main@@Base+0x1d50>
   1fda8:	b	1fe20 <main@@Base+0xa0d8>
   1fdac:	bne	1fdc0 <main@@Base+0xa078>
   1fdb0:	mov	r2, r8
   1fdb4:	ldrb	r0, [r2, #1]!
   1fdb8:	cmp	r0, #32
   1fdbc:	bhi	1fdd4 <main@@Base+0xa08c>
   1fdc0:	mov	r0, r9
   1fdc4:	mov	r1, r8
   1fdc8:	mov	r2, r6
   1fdcc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1fdd0:	mov	r2, r0
   1fdd4:	cmp	r2, r6
   1fdd8:	bne	1fd64 <main@@Base+0xa01c>
   1fddc:	ldr	r4, [sp, #36]	; 0x24
   1fde0:	mov	sl, r6
   1fde4:	ldr	r0, [sp, #32]
   1fde8:	ldr	r0, [r0]
   1fdec:	cmp	r0, #0
   1fdf0:	bne	16638 <main@@Base+0x8f0>
   1fdf4:	b	166f4 <main@@Base+0x9ac>
   1fdf8:	cmp	r0, #125	; 0x7d
   1fdfc:	bne	1fea0 <main@@Base+0xa158>
   1fe00:	add	sl, r2, #1
   1fe04:	sub	r0, r6, sl
   1fe08:	cmp	r0, #2
   1fe0c:	blt	1fe64 <main@@Base+0xa11c>
   1fe10:	b	1fe30 <main@@Base+0xa0e8>
   1fe14:	mov	r0, r9
   1fe18:	mov	r1, r6
   1fe1c:	b	1fea8 <main@@Base+0xa160>
   1fe20:	add	sl, r2, #1
   1fe24:	sub	r0, r6, sl
   1fe28:	cmp	r0, #2
   1fe2c:	blt	1fe64 <main@@Base+0xa11c>
   1fe30:	ldrb	r0, [sl]
   1fe34:	cmp	r0, #32
   1fe38:	bhi	1feb8 <main@@Base+0xa170>
   1fe3c:	bne	1fe64 <main@@Base+0xa11c>
   1fe40:	ldrb	r0, [r2, #2]!
   1fe44:	cmp	r0, #32
   1fe48:	bls	1fe64 <main@@Base+0xa11c>
   1fe4c:	mov	sl, r2
   1fe50:	ldr	r0, [sp, #32]
   1fe54:	ldr	r0, [r0]
   1fe58:	cmp	r0, #0
   1fe5c:	bne	16638 <main@@Base+0x8f0>
   1fe60:	b	166f4 <main@@Base+0x9ac>
   1fe64:	mov	r0, r9
   1fe68:	mov	r1, sl
   1fe6c:	mov	r2, r6
   1fe70:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1fe74:	b	1feb4 <main@@Base+0xa16c>
   1fe78:	mov	sl, r8
   1fe7c:	b	16638 <main@@Base+0x8f0>
   1fe80:	bne	1fe90 <main@@Base+0xa148>
   1fe84:	ldrb	r0, [sl, #2]!
   1fe88:	cmp	r0, #32
   1fe8c:	bhi	166e4 <main@@Base+0x99c>
   1fe90:	mov	r0, r9
   1fe94:	mov	r2, r6
   1fe98:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   1fe9c:	b	166e0 <main@@Base+0x998>
   1fea0:	mov	r0, r9
   1fea4:	mov	r1, r2
   1fea8:	mov	r2, r6
   1feac:	mov	r3, #10
   1feb0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   1feb4:	mov	sl, r0
   1feb8:	ldr	r0, [sp, #32]
   1febc:	ldr	r0, [r0]
   1fec0:	cmp	r0, #0
   1fec4:	bne	16638 <main@@Base+0x8f0>
   1fec8:	b	166f4 <main@@Base+0x9ac>
   1fecc:	mov	sl, r8
   1fed0:	ldr	r6, [sp, #44]	; 0x2c
   1fed4:	ldr	r9, [sp, #40]	; 0x28
   1fed8:	b	16638 <main@@Base+0x8f0>
   1fedc:	ldr	r9, [sp, #40]	; 0x28
   1fee0:	mov	sl, r8
   1fee4:	b	16638 <main@@Base+0x8f0>
   1fee8:	mov	r8, r1
   1feec:	mov	sl, r1
   1fef0:	b	16638 <main@@Base+0x8f0>
   1fef4:	mov	r8, r5
   1fef8:	mov	sl, r5
   1fefc:	b	16638 <main@@Base+0x8f0>
   1ff00:	ldr	r6, [sp, #44]	; 0x2c
   1ff04:	b	16638 <main@@Base+0x8f0>
   1ff08:	mov	sl, r7
   1ff0c:	b	16638 <main@@Base+0x8f0>
   1ff10:	ldr	r9, [sp, #40]	; 0x28
   1ff14:	b	16638 <main@@Base+0x8f0>
   1ff18:	mov	sl, r6
   1ff1c:	b	1fed0 <main@@Base+0xa188>
   1ff20:	ldr	r9, [sp, #40]	; 0x28
   1ff24:	mov	sl, r1
   1ff28:	b	16638 <main@@Base+0x8f0>
   1ff2c:	ldr	r6, [sp, #44]	; 0x2c
   1ff30:	ldr	r9, [sp, #40]	; 0x28
   1ff34:	mov	sl, r7
   1ff38:	b	16638 <main@@Base+0x8f0>
   1ff3c:	mov	sl, r1
   1ff40:	b	1fed0 <main@@Base+0xa188>
   1ff44:	mov	sl, r5
   1ff48:	b	1fed0 <main@@Base+0xa188>
   1ff4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff50:	add	fp, sp, #28
   1ff54:	sub	sp, sp, #20
   1ff58:	mov	r5, r0
   1ff5c:	movw	r0, #50628	; 0xc5c4
   1ff60:	movw	r3, #36447	; 0x8e5f
   1ff64:	mov	r4, r1
   1ff68:	mov	r1, #3
   1ff6c:	mov	r2, #0
   1ff70:	mov	r8, #0
   1ff74:	movt	r0, #2
   1ff78:	str	r1, [sp]
   1ff7c:	movt	r3, #4
   1ff80:	mov	r1, r4
   1ff84:	str	r0, [sp, #4]
   1ff88:	mov	r0, r5
   1ff8c:	bl	44aac <flatcc_json_printer_struct_field@@Base>
   1ff90:	movw	r3, #36451	; 0x8e63
   1ff94:	mov	r0, #150	; 0x96
   1ff98:	mov	r1, #4
   1ff9c:	mov	r2, #1
   1ffa0:	mov	r6, #4
   1ffa4:	str	r1, [sp]
   1ffa8:	str	r0, [sp, #4]
   1ffac:	movt	r3, #4
   1ffb0:	mov	r0, r5
   1ffb4:	mov	r1, r4
   1ffb8:	bl	3bac0 <flatcc_json_printer_int16_field@@Base>
   1ffbc:	movw	r3, #36456	; 0x8e68
   1ffc0:	mov	r0, #100	; 0x64
   1ffc4:	mov	r1, #2
   1ffc8:	mov	r2, #2
   1ffcc:	str	r1, [sp]
   1ffd0:	str	r0, [sp, #4]
   1ffd4:	movt	r3, #4
   1ffd8:	mov	r0, r5
   1ffdc:	mov	r1, r4
   1ffe0:	bl	3bac0 <flatcc_json_printer_int16_field@@Base>
   1ffe4:	movw	r3, #36459	; 0x8e6b
   1ffe8:	mov	r0, r5
   1ffec:	mov	r1, r4
   1fff0:	mov	r2, #3
   1fff4:	str	r6, [sp]
   1fff8:	movt	r3, #4
   1fffc:	bl	3b0ec <flatcc_json_printer_string_field@@Base>
   20000:	movw	r3, #36464	; 0x8e70
   20004:	mov	r0, #9
   20008:	mov	r1, r4
   2000c:	mov	r2, #5
   20010:	mov	r7, #5
   20014:	str	r0, [sp]
   20018:	movt	r3, #4
   2001c:	mov	r0, r5
   20020:	bl	3dba0 <flatcc_json_printer_uint8_vector_field@@Base>
   20024:	movw	r0, #50880	; 0xc6c0
   20028:	movw	r3, #36474	; 0x8e7a
   2002c:	mov	r1, #8
   20030:	mov	r2, #6
   20034:	str	r7, [sp]
   20038:	mov	r7, #5
   2003c:	movt	r0, #2
   20040:	str	r1, [sp, #4]
   20044:	movt	r3, #4
   20048:	mov	r1, r4
   2004c:	str	r0, [sp, #8]
   20050:	mov	r0, r5
   20054:	bl	3c450 <flatcc_json_printer_int8_enum_field@@Base>
   20058:	movw	r0, #51224	; 0xc818
   2005c:	movw	r1, #51108	; 0xc7a4
   20060:	movw	r3, #36850	; 0x8ff2
   20064:	mov	r2, #8
   20068:	str	r6, [sp]
   2006c:	movt	r0, #2
   20070:	movt	r1, #2
   20074:	movt	r3, #4
   20078:	str	r1, [sp, #4]
   2007c:	str	r0, [sp, #8]
   20080:	mov	r0, r5
   20084:	mov	r1, r4
   20088:	bl	441b8 <flatcc_json_printer_union_field@@Base>
   2008c:	movw	r0, #51312	; 0xc870
   20090:	movw	r3, #36480	; 0x8e80
   20094:	mov	r1, r4
   20098:	mov	r2, #9
   2009c:	str	r7, [sp]
   200a0:	mov	sl, #5
   200a4:	str	r6, [sp, #4]
   200a8:	movt	r0, #2
   200ac:	movt	r3, #4
   200b0:	str	r0, [sp, #8]
   200b4:	mov	r0, r5
   200b8:	bl	42e0c <flatcc_json_printer_struct_vector_field@@Base>
   200bc:	movw	r3, #36486	; 0x8e86
   200c0:	mov	r7, #17
   200c4:	mov	r0, r5
   200c8:	mov	r1, r4
   200cc:	mov	r2, #10
   200d0:	movt	r3, #4
   200d4:	str	r7, [sp]
   200d8:	bl	433a8 <flatcc_json_printer_string_vector_field@@Base>
   200dc:	movw	r9, #65356	; 0xff4c
   200e0:	movw	r3, #36504	; 0x8e98
   200e4:	mov	r0, r5
   200e8:	mov	r1, r4
   200ec:	mov	r2, #11
   200f0:	movt	r9, #1
   200f4:	movt	r3, #4
   200f8:	stm	sp, {r7, r9}
   200fc:	bl	43760 <flatcc_json_printer_table_vector_field@@Base>
   20100:	movw	r3, #36522	; 0x8eaa
   20104:	mov	r0, r5
   20108:	mov	r1, r4
   2010c:	mov	r2, #12
   20110:	str	sl, [sp]
   20114:	mov	sl, #5
   20118:	str	r9, [sp, #4]
   2011c:	movt	r3, #4
   20120:	bl	43fd0 <flatcc_json_printer_table_field@@Base>
   20124:	movw	r3, #36528	; 0x8eb0
   20128:	mov	r0, #20
   2012c:	mov	r1, r4
   20130:	mov	r2, #13
   20134:	stm	sp, {r0, r8, r9}
   20138:	movt	r3, #4
   2013c:	mov	r0, r5
   20140:	bl	45308 <flatcc_json_printer_table_as_nested_root@@Base>
   20144:	movw	r0, #51408	; 0xc8d0
   20148:	movw	r3, #36549	; 0x8ec5
   2014c:	mov	r1, #9
   20150:	mov	r2, #14
   20154:	movt	r0, #2
   20158:	str	r1, [sp]
   2015c:	movt	r3, #4
   20160:	mov	r1, r4
   20164:	str	r0, [sp, #4]
   20168:	mov	r0, r5
   2016c:	bl	43fd0 <flatcc_json_printer_table_field@@Base>
   20170:	movw	r3, #36559	; 0x8ecf
   20174:	mov	r0, #1
   20178:	mov	r9, #8
   2017c:	mov	r1, r4
   20180:	mov	r2, #15
   20184:	str	r0, [sp, #4]
   20188:	movt	r3, #4
   2018c:	mov	r0, r5
   20190:	str	r9, [sp]
   20194:	bl	3bd70 <flatcc_json_printer_bool_field@@Base>
   20198:	movw	r3, #36568	; 0x8ed8
   2019c:	mov	r6, #16
   201a0:	mov	r0, r5
   201a4:	mov	r1, r4
   201a8:	mov	r2, #16
   201ac:	movt	r3, #4
   201b0:	stm	sp, {r6, r8}
   201b4:	bl	3bba0 <flatcc_json_printer_int32_field@@Base>
   201b8:	movw	r3, #36585	; 0x8ee9
   201bc:	mov	r0, r5
   201c0:	mov	r1, r4
   201c4:	mov	r2, #17
   201c8:	stm	sp, {r6, r8}
   201cc:	movt	r3, #4
   201d0:	bl	3b7a0 <flatcc_json_printer_uint32_field@@Base>
   201d4:	movw	r3, #36602	; 0x8efa
   201d8:	mov	r0, r5
   201dc:	mov	r1, r4
   201e0:	mov	r2, #18
   201e4:	str	r8, [sp, #8]
   201e8:	str	r8, [sp, #12]
   201ec:	str	r6, [sp]
   201f0:	movt	r3, #4
   201f4:	bl	3bc78 <flatcc_json_printer_int64_field@@Base>
   201f8:	movw	r3, #36619	; 0x8f0b
   201fc:	mov	r0, r5
   20200:	mov	r1, r4
   20204:	mov	r2, #19
   20208:	str	r8, [sp, #8]
   2020c:	str	r8, [sp, #12]
   20210:	str	r6, [sp]
   20214:	movt	r3, #4
   20218:	bl	3b860 <flatcc_json_printer_uint64_field@@Base>
   2021c:	movw	r3, #36636	; 0x8f1c
   20220:	mov	r0, r5
   20224:	mov	r1, r4
   20228:	mov	r2, #20
   2022c:	stm	sp, {r7, r8}
   20230:	movt	r3, #4
   20234:	bl	3bba0 <flatcc_json_printer_int32_field@@Base>
   20238:	movw	r3, #36654	; 0x8f2e
   2023c:	mov	r0, r5
   20240:	mov	r1, r4
   20244:	mov	r2, #21
   20248:	stm	sp, {r7, r8}
   2024c:	movt	r3, #4
   20250:	bl	3b7a0 <flatcc_json_printer_uint32_field@@Base>
   20254:	movw	r3, #36672	; 0x8f40
   20258:	mov	r0, r5
   2025c:	mov	r1, r4
   20260:	mov	r2, #22
   20264:	str	r8, [sp, #8]
   20268:	str	r8, [sp, #12]
   2026c:	str	r7, [sp]
   20270:	movt	r3, #4
   20274:	bl	3bc78 <flatcc_json_printer_int64_field@@Base>
   20278:	movw	r3, #36690	; 0x8f52
   2027c:	mov	r0, r5
   20280:	mov	r1, r4
   20284:	mov	r2, #23
   20288:	str	r8, [sp, #8]
   2028c:	str	r8, [sp, #12]
   20290:	str	r7, [sp]
   20294:	mov	r8, #23
   20298:	movt	r3, #4
   2029c:	bl	3b860 <flatcc_json_printer_uint64_field@@Base>
   202a0:	movw	r3, #36708	; 0x8f64
   202a4:	mov	r0, r5
   202a8:	mov	r1, r4
   202ac:	mov	r2, #24
   202b0:	str	r6, [sp]
   202b4:	movt	r3, #4
   202b8:	bl	3fcf0 <flatcc_json_printer_bool_vector_field@@Base>
   202bc:	vldr	s0, [pc, #396]	; 20450 <main@@Base+0xa708>
   202c0:	movw	r3, #36725	; 0x8f75
   202c4:	mov	r0, r5
   202c8:	mov	r1, r4
   202cc:	mov	r2, #25
   202d0:	str	sl, [sp]
   202d4:	movt	r3, #4
   202d8:	bl	3be64 <flatcc_json_printer_float_field@@Base>
   202dc:	movw	r3, #36731	; 0x8f7b
   202e0:	mov	r6, #6
   202e4:	vmov.f32	s0, #8	; 0x40400000  3.0
   202e8:	mov	r0, r5
   202ec:	mov	r1, r4
   202f0:	mov	r2, #26
   202f4:	movt	r3, #4
   202f8:	str	r6, [sp]
   202fc:	bl	3be64 <flatcc_json_printer_float_field@@Base>
   20300:	vldr	s0, [pc, #332]	; 20454 <main@@Base+0xa70c>
   20304:	movw	r3, #36738	; 0x8f82
   20308:	mov	r0, r5
   2030c:	mov	r1, r4
   20310:	mov	r2, #27
   20314:	str	r6, [sp]
   20318:	movt	r3, #4
   2031c:	bl	3be64 <flatcc_json_printer_float_field@@Base>
   20320:	movw	r3, #36745	; 0x8f89
   20324:	mov	r0, #18
   20328:	mov	r1, r4
   2032c:	mov	r2, #28
   20330:	str	r0, [sp]
   20334:	movt	r3, #4
   20338:	mov	r0, r5
   2033c:	bl	433a8 <flatcc_json_printer_string_vector_field@@Base>
   20340:	movw	r0, #51540	; 0xc954
   20344:	movw	r3, #36764	; 0x8f9c
   20348:	stm	sp, {r8, r9}
   2034c:	mov	r1, r4
   20350:	mov	r2, #29
   20354:	movt	r0, #2
   20358:	movt	r3, #4
   2035c:	str	r0, [sp, #8]
   20360:	mov	r0, r5
   20364:	bl	42e0c <flatcc_json_printer_struct_vector_field@@Base>
   20368:	movw	r3, #36788	; 0x8fb4
   2036c:	mov	r6, #4
   20370:	mov	r0, r5
   20374:	mov	r1, r4
   20378:	mov	r2, #30
   2037c:	movt	r3, #4
   20380:	str	r6, [sp]
   20384:	bl	3dba0 <flatcc_json_printer_uint8_vector_field@@Base>
   20388:	movw	r0, #51312	; 0xc870
   2038c:	movw	r3, #36793	; 0x8fb9
   20390:	mov	r1, r4
   20394:	mov	r2, #31
   20398:	str	sl, [sp]
   2039c:	str	r6, [sp, #4]
   203a0:	movt	r0, #2
   203a4:	movt	r3, #4
   203a8:	str	r0, [sp, #8]
   203ac:	mov	r0, r5
   203b0:	bl	42e0c <flatcc_json_printer_struct_vector_field@@Base>
   203b4:	movw	r3, #36799	; 0x8fbf
   203b8:	mov	r0, #15
   203bc:	mov	r1, r4
   203c0:	mov	r2, #32
   203c4:	str	r0, [sp]
   203c8:	movt	r3, #4
   203cc:	mov	r0, r5
   203d0:	bl	3f8e8 <flatcc_json_printer_int64_vector_field@@Base>
   203d4:	movw	r3, #36815	; 0x8fcf
   203d8:	mov	r0, r5
   203dc:	mov	r1, r4
   203e0:	mov	r2, #33	; 0x21
   203e4:	str	r7, [sp]
   203e8:	movt	r3, #4
   203ec:	bl	404f4 <flatcc_json_printer_double_vector_field@@Base>
   203f0:	movw	r0, #51648	; 0xc9c0
   203f4:	movw	r3, #36833	; 0x8fe1
   203f8:	mov	r1, #21
   203fc:	mov	r2, #34	; 0x22
   20400:	movt	r0, #2
   20404:	str	r1, [sp]
   20408:	movt	r3, #4
   2040c:	mov	r1, r4
   20410:	str	r0, [sp, #4]
   20414:	mov	r0, r5
   20418:	bl	43fd0 <flatcc_json_printer_table_field@@Base>
   2041c:	movw	r0, #51652	; 0xc9c4
   20420:	movw	r3, #36855	; 0x8ff7
   20424:	mov	r1, #10
   20428:	mov	r2, #35	; 0x23
   2042c:	movt	r0, #2
   20430:	str	r1, [sp]
   20434:	movt	r3, #4
   20438:	mov	r1, r4
   2043c:	str	r0, [sp, #4]
   20440:	mov	r0, r5
   20444:	bl	43fd0 <flatcc_json_printer_table_field@@Base>
   20448:	sub	sp, fp, #28
   2044c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20450:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   20454:	andeq	r0, r0, r0
   20458:	push	{r4, r5, r6, r7, fp, lr}
   2045c:	add	fp, sp, #16
   20460:	sub	sp, sp, #8
   20464:	mov	r1, #0
   20468:	mov	r2, #32
   2046c:	mov	r3, #16
   20470:	mov	r4, r0
   20474:	bl	32904 <flatcc_verify_field@@Base>
   20478:	cmp	r0, #0
   2047c:	bne	20884 <main@@Base+0xab3c>
   20480:	mov	r0, r4
   20484:	mov	r1, #2
   20488:	mov	r2, #2
   2048c:	mov	r3, #2
   20490:	bl	32904 <flatcc_verify_field@@Base>
   20494:	cmp	r0, #0
   20498:	bne	20884 <main@@Base+0xab3c>
   2049c:	mov	r0, r4
   204a0:	mov	r1, #1
   204a4:	mov	r2, #2
   204a8:	mov	r3, #2
   204ac:	bl	32904 <flatcc_verify_field@@Base>
   204b0:	cmp	r0, #0
   204b4:	bne	20884 <main@@Base+0xab3c>
   204b8:	mov	r0, r4
   204bc:	mov	r1, #3
   204c0:	mov	r2, #1
   204c4:	bl	32988 <flatcc_verify_string_field@@Base>
   204c8:	cmp	r0, #0
   204cc:	bne	20884 <main@@Base+0xab3c>
   204d0:	mov	r0, r4
   204d4:	mov	r1, #6
   204d8:	mov	r2, #1
   204dc:	mov	r3, #1
   204e0:	mov	r5, #1
   204e4:	bl	32904 <flatcc_verify_field@@Base>
   204e8:	cmp	r0, #0
   204ec:	bne	20884 <main@@Base+0xab3c>
   204f0:	mvn	r0, #0
   204f4:	mov	r1, #5
   204f8:	mov	r2, #0
   204fc:	mov	r3, #1
   20500:	str	r5, [sp]
   20504:	str	r0, [sp, #4]
   20508:	mov	r0, r4
   2050c:	bl	32a6c <flatcc_verify_vector_field@@Base>
   20510:	cmp	r0, #0
   20514:	bne	20884 <main@@Base+0xab3c>
   20518:	movw	r3, #1112	; 0x458
   2051c:	mov	r0, r4
   20520:	mov	r1, #11
   20524:	mov	r2, #0
   20528:	movt	r3, #2
   2052c:	bl	32e74 <flatcc_verify_table_vector_field@@Base>
   20530:	cmp	r0, #0
   20534:	bne	20884 <main@@Base+0xab3c>
   20538:	mov	r0, r4
   2053c:	mov	r1, #10
   20540:	mov	r2, #0
   20544:	bl	32b64 <flatcc_verify_string_vector_field@@Base>
   20548:	cmp	r0, #0
   2054c:	bne	20884 <main@@Base+0xab3c>
   20550:	mov	r0, r4
   20554:	mov	r1, #28
   20558:	mov	r2, #0
   2055c:	bl	32b64 <flatcc_verify_string_vector_field@@Base>
   20560:	cmp	r0, #0
   20564:	bne	20884 <main@@Base+0xab3c>
   20568:	mvn	r0, #0
   2056c:	mov	r1, #1
   20570:	mov	r2, #0
   20574:	mov	r3, #1
   20578:	str	r1, [sp]
   2057c:	str	r0, [sp, #4]
   20580:	mov	r0, r4
   20584:	mov	r1, #24
   20588:	bl	32a6c <flatcc_verify_vector_field@@Base>
   2058c:	cmp	r0, #0
   20590:	bne	20884 <main@@Base+0xab3c>
   20594:	mvn	r0, #-536870912	; 0xe0000000
   20598:	mov	r1, #4
   2059c:	mov	r2, #0
   205a0:	mov	r3, #8
   205a4:	str	r1, [sp]
   205a8:	str	r0, [sp, #4]
   205ac:	mov	r0, r4
   205b0:	mov	r1, #29
   205b4:	bl	32a6c <flatcc_verify_vector_field@@Base>
   205b8:	cmp	r0, #0
   205bc:	bne	20884 <main@@Base+0xab3c>
   205c0:	movw	r5, #1112	; 0x458
   205c4:	mov	r0, r4
   205c8:	mov	r1, #12
   205cc:	mov	r2, #0
   205d0:	movt	r5, #2
   205d4:	mov	r3, r5
   205d8:	bl	32d08 <flatcc_verify_table_field@@Base>
   205dc:	cmp	r0, #0
   205e0:	bne	20884 <main@@Base+0xab3c>
   205e4:	movw	r3, #53492	; 0xd0f4
   205e8:	mov	r0, r4
   205ec:	mov	r1, #8
   205f0:	mov	r2, #0
   205f4:	movt	r3, #2
   205f8:	bl	33db0 <flatcc_verify_union_field@@Base>
   205fc:	cmp	r0, #0
   20600:	bne	20884 <main@@Base+0xab3c>
   20604:	mvn	r6, #-1073741824	; 0xc0000000
   20608:	mov	r7, #2
   2060c:	mov	r0, r4
   20610:	mov	r1, #9
   20614:	mov	r2, #0
   20618:	mov	r3, #4
   2061c:	str	r7, [sp]
   20620:	str	r6, [sp, #4]
   20624:	bl	32a6c <flatcc_verify_vector_field@@Base>
   20628:	cmp	r0, #0
   2062c:	bne	20884 <main@@Base+0xab3c>
   20630:	mov	r0, r4
   20634:	mov	r1, #31
   20638:	mov	r2, #0
   2063c:	mov	r3, #4
   20640:	str	r7, [sp]
   20644:	str	r6, [sp, #4]
   20648:	bl	32a6c <flatcc_verify_vector_field@@Base>
   2064c:	cmp	r0, #0
   20650:	bne	20884 <main@@Base+0xab3c>
   20654:	mov	r0, #1
   20658:	mov	r1, #13
   2065c:	mov	r2, #0
   20660:	mov	r3, #0
   20664:	stm	sp, {r0, r5}
   20668:	mov	r0, r4
   2066c:	bl	33a78 <flatcc_verify_table_as_nested_root@@Base>
   20670:	cmp	r0, #0
   20674:	bne	20884 <main@@Base+0xab3c>
   20678:	movw	r3, #53536	; 0xd120
   2067c:	mov	r0, r4
   20680:	mov	r1, #14
   20684:	mov	r2, #0
   20688:	movt	r3, #2
   2068c:	bl	32d08 <flatcc_verify_table_field@@Base>
   20690:	cmp	r0, #0
   20694:	bne	20884 <main@@Base+0xab3c>
   20698:	mov	r0, r4
   2069c:	mov	r1, #15
   206a0:	mov	r2, #1
   206a4:	mov	r3, #1
   206a8:	bl	32904 <flatcc_verify_field@@Base>
   206ac:	cmp	r0, #0
   206b0:	bne	20884 <main@@Base+0xab3c>
   206b4:	mov	r0, r4
   206b8:	mov	r1, #16
   206bc:	mov	r2, #4
   206c0:	mov	r3, #4
   206c4:	bl	32904 <flatcc_verify_field@@Base>
   206c8:	cmp	r0, #0
   206cc:	bne	20884 <main@@Base+0xab3c>
   206d0:	mov	r0, r4
   206d4:	mov	r1, #17
   206d8:	mov	r2, #4
   206dc:	mov	r3, #4
   206e0:	bl	32904 <flatcc_verify_field@@Base>
   206e4:	cmp	r0, #0
   206e8:	bne	20884 <main@@Base+0xab3c>
   206ec:	mov	r0, r4
   206f0:	mov	r1, #18
   206f4:	mov	r2, #8
   206f8:	mov	r3, #8
   206fc:	bl	32904 <flatcc_verify_field@@Base>
   20700:	cmp	r0, #0
   20704:	bne	20884 <main@@Base+0xab3c>
   20708:	mov	r0, r4
   2070c:	mov	r1, #19
   20710:	mov	r2, #8
   20714:	mov	r3, #8
   20718:	bl	32904 <flatcc_verify_field@@Base>
   2071c:	cmp	r0, #0
   20720:	bne	20884 <main@@Base+0xab3c>
   20724:	mov	r0, r4
   20728:	mov	r1, #20
   2072c:	mov	r2, #4
   20730:	mov	r3, #4
   20734:	bl	32904 <flatcc_verify_field@@Base>
   20738:	cmp	r0, #0
   2073c:	bne	20884 <main@@Base+0xab3c>
   20740:	mov	r0, r4
   20744:	mov	r1, #21
   20748:	mov	r2, #4
   2074c:	mov	r3, #4
   20750:	bl	32904 <flatcc_verify_field@@Base>
   20754:	cmp	r0, #0
   20758:	bne	20884 <main@@Base+0xab3c>
   2075c:	mov	r0, r4
   20760:	mov	r1, #22
   20764:	mov	r2, #8
   20768:	mov	r3, #8
   2076c:	bl	32904 <flatcc_verify_field@@Base>
   20770:	cmp	r0, #0
   20774:	bne	20884 <main@@Base+0xab3c>
   20778:	mov	r0, r4
   2077c:	mov	r1, #23
   20780:	mov	r2, #8
   20784:	mov	r3, #8
   20788:	bl	32904 <flatcc_verify_field@@Base>
   2078c:	cmp	r0, #0
   20790:	bne	20884 <main@@Base+0xab3c>
   20794:	mov	r0, r4
   20798:	mov	r1, #25
   2079c:	mov	r2, #4
   207a0:	mov	r3, #4
   207a4:	bl	32904 <flatcc_verify_field@@Base>
   207a8:	cmp	r0, #0
   207ac:	bne	20884 <main@@Base+0xab3c>
   207b0:	mov	r0, r4
   207b4:	mov	r1, #26
   207b8:	mov	r2, #4
   207bc:	mov	r3, #4
   207c0:	bl	32904 <flatcc_verify_field@@Base>
   207c4:	cmp	r0, #0
   207c8:	bne	20884 <main@@Base+0xab3c>
   207cc:	mov	r0, r4
   207d0:	mov	r1, #27
   207d4:	mov	r2, #4
   207d8:	mov	r3, #4
   207dc:	bl	32904 <flatcc_verify_field@@Base>
   207e0:	cmp	r0, #0
   207e4:	bne	20884 <main@@Base+0xab3c>
   207e8:	mvn	r0, #0
   207ec:	mov	r1, #1
   207f0:	mov	r2, #0
   207f4:	mov	r3, #1
   207f8:	str	r1, [sp]
   207fc:	str	r0, [sp, #4]
   20800:	mov	r0, r4
   20804:	mov	r1, #30
   20808:	bl	32a6c <flatcc_verify_vector_field@@Base>
   2080c:	cmp	r0, #0
   20810:	bne	20884 <main@@Base+0xab3c>
   20814:	mvn	r5, #-536870912	; 0xe0000000
   20818:	mov	r6, #8
   2081c:	mov	r0, r4
   20820:	mov	r1, #32
   20824:	mov	r2, #0
   20828:	mov	r3, #8
   2082c:	str	r6, [sp]
   20830:	str	r5, [sp, #4]
   20834:	bl	32a6c <flatcc_verify_vector_field@@Base>
   20838:	cmp	r0, #0
   2083c:	bne	20884 <main@@Base+0xab3c>
   20840:	mov	r0, r4
   20844:	mov	r1, #33	; 0x21
   20848:	mov	r2, #0
   2084c:	mov	r3, #8
   20850:	str	r6, [sp]
   20854:	str	r5, [sp, #4]
   20858:	bl	32a6c <flatcc_verify_vector_field@@Base>
   2085c:	cmp	r0, #0
   20860:	bne	20884 <main@@Base+0xab3c>
   20864:	movw	r3, #53624	; 0xd178
   20868:	mov	r0, r4
   2086c:	mov	r1, #34	; 0x22
   20870:	mov	r2, #0
   20874:	movt	r3, #2
   20878:	bl	32d08 <flatcc_verify_table_field@@Base>
   2087c:	cmp	r0, #0
   20880:	beq	2088c <main@@Base+0xab44>
   20884:	sub	sp, fp, #16
   20888:	pop	{r4, r5, r6, r7, fp, pc}
   2088c:	movw	r3, #53632	; 0xd180
   20890:	mov	r0, r4
   20894:	mov	r1, #35	; 0x23
   20898:	mov	r2, #0
   2089c:	movt	r3, #2
   208a0:	sub	sp, fp, #16
   208a4:	pop	{r4, r5, r6, r7, fp, lr}
   208a8:	b	32d08 <flatcc_verify_table_field@@Base>
   208ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   208b0:	add	fp, sp, #28
   208b4:	sub	sp, sp, #12
   208b8:	mov	r5, r1
   208bc:	sub	r1, r2, r1
   208c0:	cmp	r1, #8
   208c4:	movcs	r1, #8
   208c8:	and	r1, r1, #15
   208cc:	sub	r4, r1, #1
   208d0:	cmp	r4, #7
   208d4:	bhi	20a44 <main@@Base+0xacfc>
   208d8:	str	r3, [sp, #8]
   208dc:	add	r8, pc, #32
   208e0:	mov	r9, #0
   208e4:	mov	ip, #0
   208e8:	mov	lr, #0
   208ec:	mov	sl, #0
   208f0:	mov	r6, #0
   208f4:	mov	r3, #0
   208f8:	mov	r1, #0
   208fc:	mov	r7, #0
   20900:	ldr	pc, [r8, r4, lsl #2]
   20904:	andeq	r0, r2, r8, ror #18
   20908:	andeq	r0, r2, r0, ror #18
   2090c:	andeq	r0, r2, r8, asr r9
   20910:	andeq	r0, r2, r0, asr r9
   20914:	andeq	r0, r2, r4, asr #18
   20918:	andeq	r0, r2, r8, lsr r9
   2091c:	andeq	r0, r2, r8, lsr #18
   20920:	andeq	r0, r2, r4, lsr #18
   20924:	ldrb	ip, [r5, #7]
   20928:	ldrb	r1, [r5, #6]
   2092c:	mov	lr, r9
   20930:	orr	r1, ip, r1, lsl #8
   20934:	mov	r9, r1
   20938:	ldrb	r1, [r5, #5]
   2093c:	mov	sl, lr
   20940:	orr	r9, r9, r1, lsl #16
   20944:	ldrb	r1, [r5, #4]
   20948:	mov	r6, sl
   2094c:	orr	r9, r9, r1, lsl #24
   20950:	ldrb	r1, [r5, #3]
   20954:	orr	r3, r1, r6
   20958:	ldrb	r1, [r5, #2]
   2095c:	orr	r1, r3, r1, lsl #8
   20960:	ldrb	r3, [r5, #1]
   20964:	orr	r7, r1, r3, lsl #16
   20968:	ldrb	r1, [r5]
   2096c:	ldr	r3, [fp, #12]
   20970:	ldr	r8, [fp, #8]
   20974:	movw	r4, #25957	; 0x6565
   20978:	movt	r4, #18290	; 0x4772
   2097c:	orr	r7, r7, r1, lsl #24
   20980:	mvn	r1, #-1845493760	; 0x92000000
   20984:	subs	r1, r1, r9
   20988:	sbcs	r1, r4, r7
   2098c:	bcc	209c4 <main@@Base+0xac7c>
   20990:	movw	r1, #30053	; 0x7565
   20994:	movt	r1, #17004	; 0x426c
   20998:	teq	r7, r1
   2099c:	bne	20a44 <main@@Base+0xacfc>
   209a0:	str	r3, [sp]
   209a4:	mov	r1, r5
   209a8:	mov	r3, #4
   209ac:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   209b0:	cmp	r0, r5
   209b4:	beq	20a44 <main@@Base+0xacfc>
   209b8:	mov	r1, #0
   209bc:	mov	r2, #8
   209c0:	b	20a30 <main@@Base+0xace8>
   209c4:	movw	r6, #25600	; 0x6400
   209c8:	bic	r1, r7, #255	; 0xff
   209cc:	movt	r6, #21093	; 0x5265
   209d0:	teq	r1, r6
   209d4:	bne	209fc <main@@Base+0xacb4>
   209d8:	str	r3, [sp]
   209dc:	mov	r1, r5
   209e0:	mov	r3, #3
   209e4:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   209e8:	cmp	r0, r5
   209ec:	beq	20a44 <main@@Base+0xacfc>
   209f0:	mov	r1, #0
   209f4:	mov	r2, #1
   209f8:	b	20a30 <main@@Base+0xace8>
   209fc:	eor	r1, r7, r4
   20a00:	and	r7, r9, #-16777216	; 0xff000000
   20a04:	eor	r7, r7, #1845493760	; 0x6e000000
   20a08:	orrs	r1, r7, r1
   20a0c:	bne	20a44 <main@@Base+0xacfc>
   20a10:	str	r3, [sp]
   20a14:	mov	r1, r5
   20a18:	mov	r3, #5
   20a1c:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   20a20:	cmp	r0, r5
   20a24:	beq	20a44 <main@@Base+0xacfc>
   20a28:	mov	r1, #0
   20a2c:	mov	r2, #2
   20a30:	str	r2, [r8]
   20a34:	str	r1, [r8, #4]
   20a38:	mov	r5, r0
   20a3c:	ldr	r2, [sp, #8]
   20a40:	str	r1, [r2]
   20a44:	mov	r0, r5
   20a48:	sub	sp, fp, #28
   20a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20a50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20a54:	add	fp, sp, #28
   20a58:	sub	sp, sp, #20
   20a5c:	sub	lr, r2, r1
   20a60:	cmp	lr, #8
   20a64:	mov	r7, lr
   20a68:	movcs	r7, #8
   20a6c:	and	r7, r7, #15
   20a70:	sub	r7, r7, #1
   20a74:	cmp	r7, #7
   20a78:	bhi	20e98 <main@@Base+0xb150>
   20a7c:	str	r0, [sp, #16]
   20a80:	str	r3, [sp, #12]
   20a84:	mov	r4, #0
   20a88:	mov	sl, #0
   20a8c:	mov	r8, #0
   20a90:	mov	r5, #0
   20a94:	mov	r3, #0
   20a98:	mov	r6, #0
   20a9c:	mov	r9, #0
   20aa0:	mov	ip, #0
   20aa4:	ldr	r0, [fp, #12]
   20aa8:	str	r0, [sp, #8]
   20aac:	ldr	r0, [fp, #8]
   20ab0:	str	r0, [sp, #4]
   20ab4:	add	r0, pc, #0
   20ab8:	ldr	pc, [r0, r7, lsl #2]
   20abc:	andeq	r0, r2, r0, lsr #22
   20ac0:	andeq	r0, r2, r8, lsl fp
   20ac4:	andeq	r0, r2, r0, lsl fp
   20ac8:	andeq	r0, r2, r8, lsl #22
   20acc:	strdeq	r0, [r2], -ip
   20ad0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20ad4:	andeq	r0, r2, r0, ror #21
   20ad8:	ldrdeq	r0, [r2], -ip
   20adc:	ldrb	sl, [r1, #7]
   20ae0:	ldrb	r0, [r1, #6]
   20ae4:	mov	r8, r4
   20ae8:	orr	r0, sl, r0, lsl #8
   20aec:	mov	r4, r0
   20af0:	ldrb	r0, [r1, #5]
   20af4:	mov	r5, r8
   20af8:	orr	r4, r4, r0, lsl #16
   20afc:	ldrb	r0, [r1, #4]
   20b00:	mov	r3, r5
   20b04:	orr	r4, r4, r0, lsl #24
   20b08:	ldrb	r0, [r1, #3]
   20b0c:	orr	r6, r0, r3
   20b10:	ldrb	r0, [r1, #2]
   20b14:	orr	r9, r6, r0, lsl #8
   20b18:	ldrb	r0, [r1, #1]
   20b1c:	orr	ip, r9, r0, lsl #16
   20b20:	ldrb	r0, [r1]
   20b24:	movw	r7, #30061	; 0x756d
   20b28:	movw	r3, #30815	; 0x785f
   20b2c:	movt	r7, #25966	; 0x656e
   20b30:	movt	r3, #26725	; 0x6865
   20b34:	orr	r6, ip, r0, lsl #24
   20b38:	subs	r0, r4, r7
   20b3c:	sbcs	r0, r6, r3
   20b40:	bcs	20ba8 <main@@Base+0xae60>
   20b44:	movw	r3, #27759	; 0x6c6f
   20b48:	mvn	r0, #-1912602624	; 0x8e000000
   20b4c:	bic	r7, r6, #255	; 0xff
   20b50:	movt	r3, #17263	; 0x436f
   20b54:	subs	r0, r0, r4
   20b58:	sbcs	r0, r3, r6
   20b5c:	bcc	20c04 <main@@Base+0xaebc>
   20b60:	cmp	lr, #4
   20b64:	blt	20e98 <main@@Base+0xb150>
   20b68:	movw	r0, #30976	; 0x7900
   20b6c:	movt	r0, #16750	; 0x416e
   20b70:	teq	r7, r0
   20b74:	bne	20e98 <main@@Base+0xb150>
   20b78:	ldrb	r0, [r1, #3]
   20b7c:	mov	r3, r1
   20b80:	cmp	r0, #46	; 0x2e
   20b84:	addeq	r3, r3, #4
   20b88:	cmp	r3, r1
   20b8c:	beq	20e98 <main@@Base+0xb150>
   20b90:	mov	r1, r3
   20b94:	ldr	r0, [sp, #16]
   20b98:	ldr	r3, [sp, #12]
   20b9c:	sub	sp, fp, #28
   20ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ba4:	b	23c7c <main@@Base+0xdf34>
   20ba8:	add	r0, r3, #64512	; 0xfc00
   20bac:	add	r5, r0, #17301504	; 0x1080000
   20bb0:	subs	r0, r4, r7
   20bb4:	sbcs	r0, r6, r5
   20bb8:	bcs	20c4c <main@@Base+0xaf04>
   20bbc:	cmp	lr, #9
   20bc0:	blt	20e98 <main@@Base+0xb150>
   20bc4:	eor	r0, r4, r7
   20bc8:	eor	r3, r6, r3
   20bcc:	orrs	r0, r0, r3
   20bd0:	bne	20e98 <main@@Base+0xb150>
   20bd4:	ldrb	r0, [r1, #8]
   20bd8:	mov	r3, r1
   20bdc:	cmp	r0, #46	; 0x2e
   20be0:	addeq	r3, r3, #9
   20be4:	cmp	r3, r1
   20be8:	beq	20e98 <main@@Base+0xb150>
   20bec:	mov	r1, r3
   20bf0:	ldr	r0, [sp, #16]
   20bf4:	ldr	r3, [sp, #12]
   20bf8:	sub	sp, fp, #28
   20bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c00:	b	250e0 <main@@Base+0xf398>
   20c04:	movw	r0, #28416	; 0x6f00
   20c08:	movt	r0, #18031	; 0x466f
   20c0c:	teq	r7, r0
   20c10:	bne	20ca8 <main@@Base+0xaf60>
   20c14:	cmp	lr, #4
   20c18:	blt	20e98 <main@@Base+0xb150>
   20c1c:	ldrb	r0, [r1, #3]
   20c20:	mov	r3, r1
   20c24:	cmp	r0, #46	; 0x2e
   20c28:	addeq	r3, r3, #4
   20c2c:	cmp	r3, r1
   20c30:	beq	20e98 <main@@Base+0xb150>
   20c34:	mov	r1, r3
   20c38:	ldr	r0, [sp, #16]
   20c3c:	ldr	r3, [sp, #12]
   20c40:	sub	sp, fp, #28
   20c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c48:	b	24e70 <main@@Base+0xf128>
   20c4c:	sub	r0, r3, #4352	; 0x1100
   20c50:	subs	r3, r4, r7
   20c54:	sub	r0, r0, #-100663296	; 0xfa000000
   20c58:	sbcs	r0, r6, r0
   20c5c:	bcs	20cf4 <main@@Base+0xafac>
   20c60:	cmp	lr, #9
   20c64:	blt	20e98 <main@@Base+0xb150>
   20c68:	eor	r0, r4, r7
   20c6c:	eor	r3, r6, r5
   20c70:	orrs	r0, r0, r3
   20c74:	bne	20e98 <main@@Base+0xb150>
   20c78:	ldrb	r0, [r1, #8]
   20c7c:	mov	r3, r1
   20c80:	cmp	r0, #46	; 0x2e
   20c84:	addeq	r3, r3, #9
   20c88:	cmp	r3, r1
   20c8c:	beq	20e98 <main@@Base+0xb150>
   20c90:	mov	r1, r3
   20c94:	ldr	r0, [sp, #16]
   20c98:	ldr	r3, [sp, #12]
   20c9c:	sub	sp, fp, #28
   20ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ca4:	b	25290 <main@@Base+0xf548>
   20ca8:	cmp	lr, #6
   20cac:	blt	20e98 <main@@Base+0xb150>
   20cb0:	and	r0, r4, #-16777216	; 0xff000000
   20cb4:	eor	r3, r6, r3
   20cb8:	eor	r0, r0, #1912602624	; 0x72000000
   20cbc:	orrs	r0, r0, r3
   20cc0:	bne	20e98 <main@@Base+0xb150>
   20cc4:	ldrb	r0, [r1, #5]
   20cc8:	mov	r3, r1
   20ccc:	cmp	r0, #46	; 0x2e
   20cd0:	addeq	r3, r3, #6
   20cd4:	cmp	r3, r1
   20cd8:	beq	20e98 <main@@Base+0xb150>
   20cdc:	mov	r1, r3
   20ce0:	ldr	r0, [sp, #16]
   20ce4:	ldr	r3, [sp, #12]
   20ce8:	sub	sp, fp, #28
   20cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20cf0:	b	208ac <main@@Base+0xab64>
   20cf4:	movw	r0, #29817	; 0x7479
   20cf8:	movw	r3, #29797	; 0x7465
   20cfc:	movt	r0, #28016	; 0x6d70
   20d00:	movt	r3, #28271	; 0x6e6f
   20d04:	eor	r0, r4, r0
   20d08:	eor	r3, r6, r3
   20d0c:	orrs	r0, r0, r3
   20d10:	beq	20d64 <main@@Base+0xb01c>
   20d14:	movw	r3, #26463	; 0x675f
   20d18:	eor	r0, r4, r7
   20d1c:	movt	r3, #28261	; 0x6e65
   20d20:	eor	r3, r6, r3
   20d24:	orrs	r0, r0, r3
   20d28:	bne	20e98 <main@@Base+0xb150>
   20d2c:	cmp	lr, #9
   20d30:	blt	20e98 <main@@Base+0xb150>
   20d34:	ldrb	r0, [r1, #8]
   20d38:	mov	r3, r1
   20d3c:	cmp	r0, #46	; 0x2e
   20d40:	addeq	r3, r3, #9
   20d44:	cmp	r3, r1
   20d48:	beq	20e98 <main@@Base+0xb150>
   20d4c:	mov	r1, r3
   20d50:	ldr	r0, [sp, #16]
   20d54:	ldr	r3, [sp, #12]
   20d58:	sub	sp, fp, #28
   20d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20d60:	b	25484 <main@@Base+0xf73c>
   20d64:	add	r8, r1, #8
   20d68:	sub	r5, r2, r8
   20d6c:	cmp	r5, #8
   20d70:	mov	r0, r5
   20d74:	movcs	r0, #8
   20d78:	and	r0, r0, #15
   20d7c:	sub	r4, r0, #1
   20d80:	cmp	r4, #7
   20d84:	bhi	20e98 <main@@Base+0xb150>
   20d88:	add	r0, pc, #16
   20d8c:	mov	lr, #0
   20d90:	mov	r9, #0
   20d94:	mov	r3, #0
   20d98:	mov	r6, #0
   20d9c:	ldr	pc, [r0, r4, lsl #2]
   20da0:	ldrdeq	r0, [r2], -r8
   20da4:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20da8:	andeq	r0, r2, r8, asr #27
   20dac:	andeq	r0, r2, r0, asr #27
   20db0:	andeq	r0, r2, r0, asr #27
   20db4:	andeq	r0, r2, r0, asr #27
   20db8:	andeq	r0, r2, r0, asr #27
   20dbc:	andeq	r0, r2, r0, asr #27
   20dc0:	ldrb	r9, [r1, #11]
   20dc4:	mov	lr, #0
   20dc8:	ldrb	r0, [r1, #10]
   20dcc:	orr	r3, r9, r0, lsl #8
   20dd0:	ldrb	r0, [r1, #9]
   20dd4:	orr	r6, r3, r0, lsl #16
   20dd8:	cmp	r5, #5
   20ddc:	blt	20e98 <main@@Base+0xb150>
   20de0:	ldrb	r0, [r8]
   20de4:	orr	r0, r6, r0, lsl #24
   20de8:	eor	r0, r0, r7
   20dec:	orrs	r0, lr, r0
   20df0:	bne	20e98 <main@@Base+0xb150>
   20df4:	ldrb	r0, [r1, #12]
   20df8:	mov	r5, r8
   20dfc:	cmp	r0, #46	; 0x2e
   20e00:	addeq	r5, r1, #13
   20e04:	cmp	r5, r8
   20e08:	beq	20e98 <main@@Base+0xb150>
   20e0c:	sub	r0, r2, r5
   20e10:	mov	r1, #-268435456	; 0xf0000000
   20e14:	cmp	r0, #8
   20e18:	movcs	r0, #8
   20e1c:	add	r0, r1, r0, lsl #28
   20e20:	asr	r0, r0, #28
   20e24:	cmp	r0, #0
   20e28:	blt	20e84 <main@@Base+0xb13c>
   20e2c:	ldrb	r0, [r5]
   20e30:	cmp	r0, #120	; 0x78
   20e34:	bne	20e94 <main@@Base+0xb14c>
   20e38:	ldr	r0, [sp, #8]
   20e3c:	mov	r1, r5
   20e40:	mov	r3, #1
   20e44:	str	r0, [sp]
   20e48:	ldr	r0, [sp, #16]
   20e4c:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   20e50:	cmp	r0, r5
   20e54:	mov	r1, r5
   20e58:	beq	20e98 <main@@Base+0xb150>
   20e5c:	ldr	r2, [sp, #4]
   20e60:	mov	r1, #0
   20e64:	str	r1, [r2]
   20e68:	str	r1, [r2, #4]
   20e6c:	ldr	r2, [sp, #12]
   20e70:	str	r1, [r2]
   20e74:	mov	r1, r0
   20e78:	mov	r0, r1
   20e7c:	sub	sp, fp, #28
   20e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e84:	mov	r1, r5
   20e88:	mov	r0, r1
   20e8c:	sub	sp, fp, #28
   20e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e94:	mov	r1, r5
   20e98:	mov	r0, r1
   20e9c:	sub	sp, fp, #28
   20ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ea8:	add	fp, sp, #28
   20eac:	sub	sp, sp, #28
   20eb0:	mov	r8, r2
   20eb4:	sub	r2, r2, r1
   20eb8:	cmp	r2, #8
   20ebc:	movcs	r2, #8
   20ec0:	and	r2, r2, #15
   20ec4:	sub	r2, r2, #1
   20ec8:	cmp	r2, #7
   20ecc:	bhi	21dec <main@@Base+0xc0a4>
   20ed0:	str	r0, [sp, #24]
   20ed4:	mov	sl, #0
   20ed8:	mov	ip, #0
   20edc:	mov	lr, #0
   20ee0:	mov	r9, #0
   20ee4:	mov	r6, #0
   20ee8:	mov	r4, #0
   20eec:	mov	r5, #0
   20ef0:	ldr	r0, [fp, #12]
   20ef4:	str	r0, [sp, #20]
   20ef8:	ldr	r0, [fp, #8]
   20efc:	str	r0, [sp, #16]
   20f00:	add	r7, pc, #4
   20f04:	mov	r0, #0
   20f08:	ldr	pc, [r7, r2, lsl #2]
   20f0c:	andeq	r0, r2, r0, ror pc
   20f10:	andeq	r0, r2, r8, ror #30
   20f14:	andeq	r0, r2, r0, ror #30
   20f18:	andeq	r0, r2, r8, asr pc
   20f1c:	andeq	r0, r2, ip, asr #30
   20f20:	andeq	r0, r2, r0, asr #30
   20f24:	andeq	r0, r2, r0, lsr pc
   20f28:	andeq	r0, r2, ip, lsr #30
   20f2c:	ldrb	ip, [r1, #7]
   20f30:	ldrb	r2, [r1, #6]
   20f34:	mov	lr, sl
   20f38:	orr	r2, ip, r2, lsl #8
   20f3c:	mov	sl, r2
   20f40:	ldrb	r2, [r1, #5]
   20f44:	mov	r9, lr
   20f48:	orr	sl, sl, r2, lsl #16
   20f4c:	ldrb	r2, [r1, #4]
   20f50:	mov	r6, r9
   20f54:	orr	sl, sl, r2, lsl #24
   20f58:	ldrb	r2, [r1, #3]
   20f5c:	orr	r4, r2, r6
   20f60:	ldrb	r2, [r1, #2]
   20f64:	orr	r0, r4, r2, lsl #8
   20f68:	ldrb	r2, [r1, #1]
   20f6c:	orr	r5, r0, r2, lsl #16
   20f70:	ldrb	r2, [r1]
   20f74:	movw	r7, #11844	; 0x2e44
   20f78:	movw	r0, #18273	; 0x4761
   20f7c:	movt	r7, #28005	; 0x6d65
   20f80:	movt	r0, #19833	; 0x4d79
   20f84:	subs	r7, r7, sl
   20f88:	orr	r2, r5, r2, lsl #24
   20f8c:	sbcs	r7, r0, r2
   20f90:	bcc	210f8 <main@@Base+0xb3b0>
   20f94:	movw	r0, #31022	; 0x792e
   20f98:	movw	r7, #28276	; 0x6e74
   20f9c:	movt	r0, #24947	; 0x6173
   20fa0:	movt	r7, #18017	; 0x4661
   20fa4:	eor	r0, sl, r0
   20fa8:	eor	r2, r2, r7
   20fac:	orrs	r0, r0, r2
   20fb0:	bne	21dec <main@@Base+0xc0a4>
   20fb4:	add	lr, r1, #8
   20fb8:	sub	r0, r8, lr
   20fbc:	cmp	r0, #8
   20fc0:	movcs	r0, #8
   20fc4:	and	r0, r0, #15
   20fc8:	sub	r6, r0, #1
   20fcc:	cmp	r6, #7
   20fd0:	bhi	21dec <main@@Base+0xc0a4>
   20fd4:	str	r3, [sp, #12]
   20fd8:	add	r2, pc, #32
   20fdc:	mov	sl, #0
   20fe0:	mov	ip, #0
   20fe4:	mov	r9, #0
   20fe8:	mov	r4, #0
   20fec:	mov	r7, #0
   20ff0:	mov	r5, #0
   20ff4:	mov	r0, #0
   20ff8:	mov	r3, #0
   20ffc:	ldr	pc, [r2, r6, lsl #2]
   21000:	andeq	r1, r2, r4, rrx
   21004:	andeq	r1, r2, ip, asr r0
   21008:	andeq	r1, r2, r4, asr r0
   2100c:	andeq	r1, r2, ip, asr #32
   21010:	andeq	r1, r2, r0, asr #32
   21014:	andeq	r1, r2, r4, lsr r0
   21018:	andeq	r1, r2, r4, lsr #32
   2101c:	andeq	r1, r2, r0, lsr #32
   21020:	ldrb	ip, [r1, #15]
   21024:	ldrb	r0, [r1, #14]
   21028:	mov	r9, sl
   2102c:	orr	r0, ip, r0, lsl #8
   21030:	mov	sl, r0
   21034:	ldrb	r0, [r1, #13]
   21038:	mov	r4, r9
   2103c:	orr	sl, sl, r0, lsl #16
   21040:	ldrb	r0, [r1, #12]
   21044:	mov	r7, r4
   21048:	orr	sl, sl, r0, lsl #24
   2104c:	ldrb	r0, [r1, #11]
   21050:	orr	r5, r0, r7
   21054:	ldrb	r0, [r1, #10]
   21058:	orr	r0, r5, r0, lsl #8
   2105c:	ldrb	r2, [r1, #9]
   21060:	orr	r3, r0, r2, lsl #16
   21064:	ldrb	r2, [lr]
   21068:	movw	r0, #29797	; 0x7465
   2106c:	movt	r0, #24931	; 0x6163
   21070:	eor	r0, sl, r0
   21074:	orr	r2, r3, r2, lsl #24
   21078:	movw	r3, #24946	; 0x6172
   2107c:	movt	r3, #17256	; 0x4368
   21080:	eor	r2, r2, r3
   21084:	orrs	r0, r0, r2
   21088:	bne	21dec <main@@Base+0xc0a4>
   2108c:	add	r0, r1, #16
   21090:	mov	r7, #-268435456	; 0xf0000000
   21094:	sub	r2, r8, r0
   21098:	cmp	r2, #8
   2109c:	mov	r3, r2
   210a0:	movcs	r3, #8
   210a4:	add	r3, r7, r3, lsl #28
   210a8:	asr	r3, r3, #28
   210ac:	cmp	r3, #0
   210b0:	cmpge	r2, #2
   210b4:	blt	21dec <main@@Base+0xc0a4>
   210b8:	ldrb	r2, [r0]
   210bc:	cmp	r2, #114	; 0x72
   210c0:	bne	21dec <main@@Base+0xc0a4>
   210c4:	ldrb	r2, [r1, #17]
   210c8:	ldr	r3, [sp, #12]
   210cc:	cmp	r2, #46	; 0x2e
   210d0:	mov	r2, r0
   210d4:	addeq	r2, r1, #18
   210d8:	cmp	r2, r0
   210dc:	beq	21dec <main@@Base+0xc0a4>
   210e0:	ldr	r0, [sp, #24]
   210e4:	mov	r1, r2
   210e8:	mov	r2, r8
   210ec:	sub	sp, fp, #28
   210f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   210f4:	b	255d0 <main@@Base+0xf888>
   210f8:	movw	r7, #11855	; 0x2e4f
   210fc:	eor	r2, r2, r0
   21100:	movt	r7, #28005	; 0x6d65
   21104:	eor	r7, sl, r7
   21108:	orrs	r0, r7, r2
   2110c:	beq	212ac <main@@Base+0xb564>
   21110:	movw	r0, #11845	; 0x2e45
   21114:	movt	r0, #28005	; 0x6d65
   21118:	eor	r0, sl, r0
   2111c:	orrs	r0, r0, r2
   21120:	bne	21dec <main@@Base+0xc0a4>
   21124:	add	lr, r1, #8
   21128:	sub	r0, r8, lr
   2112c:	cmp	r0, #8
   21130:	movcs	r0, #8
   21134:	and	r0, r0, #15
   21138:	sub	r7, r0, #1
   2113c:	cmp	r7, #7
   21140:	bhi	21dec <main@@Base+0xc0a4>
   21144:	str	r3, [sp, #12]
   21148:	add	sl, pc, #32
   2114c:	mov	r0, #0
   21150:	mov	ip, #0
   21154:	mov	r9, #0
   21158:	mov	r4, #0
   2115c:	mov	r6, #0
   21160:	mov	r5, #0
   21164:	mov	r2, #0
   21168:	mov	r3, #0
   2116c:	ldr	pc, [sl, r7, lsl #2]
   21170:	ldrdeq	r1, [r2], -r4
   21174:	andeq	r1, r2, ip, asr #3
   21178:	andeq	r1, r2, r4, asr #3
   2117c:			; <UNDEFINED> instruction: 0x000211bc
   21180:			; <UNDEFINED> instruction: 0x000211b0
   21184:	andeq	r1, r2, r4, lsr #3
   21188:	muleq	r2, r4, r1
   2118c:	muleq	r2, r0, r1
   21190:	ldrb	ip, [r1, #15]
   21194:	ldrb	r2, [r1, #14]
   21198:	mov	r9, r0
   2119c:	orr	r2, ip, r2, lsl #8
   211a0:	mov	r0, r2
   211a4:	ldrb	r2, [r1, #13]
   211a8:	mov	r4, r9
   211ac:	orr	r0, r0, r2, lsl #16
   211b0:	ldrb	r2, [r1, #12]
   211b4:	mov	r6, r4
   211b8:	orr	r0, r0, r2, lsl #24
   211bc:	ldrb	r2, [r1, #11]
   211c0:	orr	r5, r2, r6
   211c4:	ldrb	r2, [r1, #10]
   211c8:	orr	r2, r5, r2, lsl #8
   211cc:	ldrb	r3, [r1, #9]
   211d0:	orr	r3, r2, r3, lsl #16
   211d4:	ldrb	r2, [lr]
   211d8:	movw	r6, #11880	; 0x2e68
   211dc:	movt	r6, #27749	; 0x6c65
   211e0:	subs	r7, r0, r6
   211e4:	orr	r2, r3, r2, lsl #24
   211e8:	movw	r3, #28016	; 0x6d70
   211ec:	movt	r3, #30817	; 0x7861
   211f0:	sbcs	r7, r2, r3
   211f4:	bcs	2167c <main@@Base+0xb934>
   211f8:	ldr	lr, [sp, #12]
   211fc:	subs	r7, r6, #37	; 0x25
   21200:	sbc	r5, r3, #0
   21204:	subs	r7, r0, r7
   21208:	sbcs	r7, r2, r5
   2120c:	bcs	21798 <main@@Base+0xba50>
   21210:	subs	r7, r6, #39	; 0x27
   21214:	sbc	r3, r3, #0
   21218:	eor	r0, r0, r7
   2121c:	eor	r2, r2, r3
   21220:	orrs	r0, r0, r2
   21224:	bne	21dec <main@@Base+0xc0a4>
   21228:	add	r0, r1, #16
   2122c:	sub	r2, r8, r0
   21230:	cmp	r2, #8
   21234:	mov	r3, r2
   21238:	movcs	r3, #8
   2123c:	and	r7, r3, #15
   21240:	sub	r3, r7, #2
   21244:	cmp	r3, #7
   21248:	bcs	21c7c <main@@Base+0xbf34>
   2124c:	ldrb	r3, [r1, #17]
   21250:	lsl	r7, r3, #16
   21254:	mov	r3, #0
   21258:	cmp	r2, #3
   2125c:	blt	21dec <main@@Base+0xc0a4>
   21260:	ldrb	r2, [r0]
   21264:	orr	r2, r7, r2, lsl #24
   21268:	eor	r2, r2, #7929856	; 0x790000
   2126c:	eor	r2, r2, #1845493760	; 0x6e000000
   21270:	orrs	r2, r3, r2
   21274:	bne	21dec <main@@Base+0xc0a4>
   21278:	ldrb	r2, [r1, #18]
   2127c:	cmp	r2, #46	; 0x2e
   21280:	mov	r2, r0
   21284:	addeq	r2, r1, #19
   21288:	cmp	r2, r0
   2128c:	beq	21dec <main@@Base+0xc0a4>
   21290:	ldr	r0, [sp, #24]
   21294:	mov	r1, r2
   21298:	mov	r2, r8
   2129c:	mov	r3, lr
   212a0:	sub	sp, fp, #28
   212a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   212a8:	b	23c7c <main@@Base+0xdf34>
   212ac:	add	lr, r1, #8
   212b0:	sub	r0, r8, lr
   212b4:	cmp	r0, #8
   212b8:	movcs	r0, #8
   212bc:	and	r0, r0, #15
   212c0:	sub	r7, r0, #1
   212c4:	cmp	r7, #7
   212c8:	bhi	21dec <main@@Base+0xc0a4>
   212cc:	str	r3, [sp, #12]
   212d0:	add	r3, pc, #32
   212d4:	mov	r2, #0
   212d8:	mov	ip, #0
   212dc:	mov	sl, #0
   212e0:	mov	r4, #0
   212e4:	mov	r6, #0
   212e8:	mov	r5, #0
   212ec:	mov	r0, #0
   212f0:	mov	r9, #0
   212f4:	ldr	pc, [r3, r7, lsl #2]
   212f8:	andeq	r1, r2, ip, asr r3
   212fc:	andeq	r1, r2, r4, asr r3
   21300:	andeq	r1, r2, ip, asr #6
   21304:	andeq	r1, r2, r4, asr #6
   21308:	andeq	r1, r2, r8, lsr r3
   2130c:	andeq	r1, r2, ip, lsr #6
   21310:	andeq	r1, r2, ip, lsl r3
   21314:	andeq	r1, r2, r8, lsl r3
   21318:	ldrb	ip, [r1, #15]
   2131c:	ldrb	r0, [r1, #14]
   21320:	mov	sl, r2
   21324:	orr	r0, ip, r0, lsl #8
   21328:	mov	r2, r0
   2132c:	ldrb	r0, [r1, #13]
   21330:	mov	r4, sl
   21334:	orr	r2, r2, r0, lsl #16
   21338:	ldrb	r0, [r1, #12]
   2133c:	mov	r6, r4
   21340:	orr	r2, r2, r0, lsl #24
   21344:	ldrb	r0, [r1, #11]
   21348:	orr	r5, r0, r6
   2134c:	ldrb	r0, [r1, #10]
   21350:	orr	r0, r5, r0, lsl #8
   21354:	ldrb	r3, [r1, #9]
   21358:	orr	r9, r0, r3, lsl #16
   2135c:	movw	r0, #28005	; 0x6d65
   21360:	movw	r3, #25970	; 0x6572
   21364:	movt	r0, #20065	; 0x4e61
   21368:	movt	r3, #29800	; 0x7468
   2136c:	eor	r0, r2, r0
   21370:	ldrb	r2, [lr]
   21374:	orr	r2, r9, r2, lsl #24
   21378:	eor	r2, r2, r3
   2137c:	orrs	r0, r0, r2
   21380:	bne	21dec <main@@Base+0xc0a4>
   21384:	add	lr, r1, #16
   21388:	sub	r0, r8, lr
   2138c:	cmp	r0, #8
   21390:	movcs	r0, #8
   21394:	and	r0, r0, #15
   21398:	sub	r7, r0, #1
   2139c:	cmp	r7, #7
   213a0:	bhi	21dec <main@@Base+0xc0a4>
   213a4:	add	r2, pc, #32
   213a8:	mov	sl, #0
   213ac:	mov	ip, #0
   213b0:	mov	r9, #0
   213b4:	mov	r4, #0
   213b8:	mov	r6, #0
   213bc:	mov	r5, #0
   213c0:	mov	r0, #0
   213c4:	mov	r3, #0
   213c8:	ldr	pc, [r2, r7, lsl #2]
   213cc:	andeq	r1, r2, r0, lsr r4
   213d0:	andeq	r1, r2, r8, lsr #8
   213d4:	andeq	r1, r2, r0, lsr #8
   213d8:	andeq	r1, r2, r8, lsl r4
   213dc:	andeq	r1, r2, ip, lsl #8
   213e0:	andeq	r1, r2, r0, lsl #8
   213e4:	strdeq	r1, [r2], -r0
   213e8:	andeq	r1, r2, ip, ror #7
   213ec:	ldrb	ip, [r1, #23]
   213f0:	ldrb	r0, [r1, #22]
   213f4:	mov	r9, sl
   213f8:	orr	r0, ip, r0, lsl #8
   213fc:	mov	sl, r0
   21400:	ldrb	r0, [r1, #21]
   21404:	mov	r4, r9
   21408:	orr	sl, sl, r0, lsl #16
   2140c:	ldrb	r0, [r1, #20]
   21410:	mov	r6, r4
   21414:	orr	sl, sl, r0, lsl #24
   21418:	ldrb	r0, [r1, #19]
   2141c:	orr	r5, r0, r6
   21420:	ldrb	r0, [r1, #18]
   21424:	orr	r0, r5, r0, lsl #8
   21428:	ldrb	r2, [r1, #17]
   2142c:	orr	r3, r0, r2, lsl #16
   21430:	ldrb	r2, [lr]
   21434:	movw	r0, #18034	; 0x4672
   21438:	movt	r0, #25902	; 0x652e
   2143c:	eor	r0, sl, r0
   21440:	orr	r2, r3, r2, lsl #24
   21444:	movw	r3, #24931	; 0x6163
   21448:	movt	r3, #21360	; 0x5370
   2144c:	eor	r2, r2, r3
   21450:	orrs	r0, r0, r2
   21454:	bne	21dec <main@@Base+0xc0a4>
   21458:	add	lr, r1, #24
   2145c:	sub	r0, r8, lr
   21460:	cmp	r0, #8
   21464:	movcs	r0, #8
   21468:	and	r0, r0, #15
   2146c:	sub	r7, r0, #1
   21470:	cmp	r7, #7
   21474:	bhi	21dec <main@@Base+0xc0a4>
   21478:	add	r2, pc, #32
   2147c:	mov	sl, #0
   21480:	mov	ip, #0
   21484:	mov	r9, #0
   21488:	mov	r4, #0
   2148c:	mov	r6, #0
   21490:	mov	r5, #0
   21494:	mov	r0, #0
   21498:	mov	r3, #0
   2149c:	ldr	pc, [r2, r7, lsl #2]
   214a0:	andeq	r1, r2, r4, lsl #10
   214a4:	strdeq	r1, [r2], -ip
   214a8:	strdeq	r1, [r2], -r4
   214ac:	andeq	r1, r2, ip, ror #9
   214b0:	andeq	r1, r2, r0, ror #9
   214b4:	ldrdeq	r1, [r2], -r4
   214b8:	andeq	r1, r2, r4, asr #9
   214bc:	andeq	r1, r2, r0, asr #9
   214c0:	ldrb	ip, [r1, #31]
   214c4:	ldrb	r0, [r1, #30]
   214c8:	mov	r9, sl
   214cc:	orr	r0, ip, r0, lsl #8
   214d0:	mov	sl, r0
   214d4:	ldrb	r0, [r1, #29]
   214d8:	mov	r4, r9
   214dc:	orr	sl, sl, r0, lsl #16
   214e0:	ldrb	r0, [r1, #28]
   214e4:	mov	r6, r4
   214e8:	orr	sl, sl, r0, lsl #24
   214ec:	ldrb	r0, [r1, #27]
   214f0:	orr	r5, r0, r6
   214f4:	ldrb	r0, [r1, #26]
   214f8:	orr	r0, r5, r0, lsl #8
   214fc:	ldrb	r2, [r1, #25]
   21500:	orr	r3, r0, r2, lsl #16
   21504:	ldrb	r2, [lr]
   21508:	movw	r0, #30052	; 0x7564
   2150c:	movt	r0, #25452	; 0x636c
   21510:	eor	r0, sl, r0
   21514:	orr	r2, r3, r2, lsl #24
   21518:	movw	r3, #18798	; 0x496e
   2151c:	movt	r3, #28525	; 0x6f6d
   21520:	eor	r2, r2, r3
   21524:	orrs	r0, r0, r2
   21528:	bne	21dec <main@@Base+0xc0a4>
   2152c:	add	r0, r1, #32
   21530:	mov	r7, #-268435456	; 0xf0000000
   21534:	sub	r2, r8, r0
   21538:	cmp	r2, #8
   2153c:	mov	r3, r2
   21540:	movcs	r3, #8
   21544:	add	r3, r7, r3, lsl #28
   21548:	asr	r3, r3, #28
   2154c:	cmp	r3, #0
   21550:	cmpge	r2, #2
   21554:	blt	21dec <main@@Base+0xc0a4>
   21558:	ldrb	r2, [r0]
   2155c:	cmp	r2, #101	; 0x65
   21560:	bne	21dec <main@@Base+0xc0a4>
   21564:	ldrb	r2, [r1, #33]	; 0x21
   21568:	ldr	r9, [sp, #12]
   2156c:	mov	r7, r0
   21570:	cmp	r2, #46	; 0x2e
   21574:	addeq	r7, r1, #34	; 0x22
   21578:	cmp	r7, r0
   2157c:	beq	21dec <main@@Base+0xc0a4>
   21580:	sub	r0, r8, r7
   21584:	cmp	r0, #8
   21588:	movcs	r0, #8
   2158c:	and	r0, r0, #15
   21590:	sub	r2, r0, #1
   21594:	cmp	r2, #7
   21598:	bhi	21dc8 <main@@Base+0xc080>
   2159c:	add	r5, pc, #32
   215a0:	mov	sl, #0
   215a4:	mov	ip, #0
   215a8:	mov	lr, #0
   215ac:	mov	r1, #0
   215b0:	mov	r3, #0
   215b4:	mov	r6, #0
   215b8:	mov	r4, #0
   215bc:	mov	r0, #0
   215c0:	ldr	pc, [r5, r2, lsl #2]
   215c4:	andeq	r1, r2, r8, lsr #12
   215c8:	andeq	r1, r2, r0, lsr #12
   215cc:	andeq	r1, r2, r8, lsl r6
   215d0:	andeq	r1, r2, r0, lsl r6
   215d4:	andeq	r1, r2, r4, lsl #12
   215d8:	strdeq	r1, [r2], -r8
   215dc:	andeq	r1, r2, r8, ror #11
   215e0:	andeq	r1, r2, r4, ror #11
   215e4:	ldrb	ip, [r7, #7]
   215e8:	ldrb	r0, [r7, #6]
   215ec:	mov	lr, sl
   215f0:	orr	r0, ip, r0, lsl #8
   215f4:	mov	sl, r0
   215f8:	ldrb	r0, [r7, #5]
   215fc:	mov	r1, lr
   21600:	orr	sl, sl, r0, lsl #16
   21604:	ldrb	r0, [r7, #4]
   21608:	mov	r3, r1
   2160c:	orr	sl, sl, r0, lsl #24
   21610:	ldrb	r0, [r7, #3]
   21614:	orr	r6, r0, r3
   21618:	ldrb	r0, [r7, #2]
   2161c:	orr	r4, r6, r0, lsl #8
   21620:	ldrb	r0, [r7, #1]
   21624:	orr	r0, r4, r0, lsl #16
   21628:	ldrb	r1, [r7]
   2162c:	ldr	r4, [sp, #24]
   21630:	orr	r6, r0, r1, lsl #24
   21634:	movw	r1, #28416	; 0x6f00
   21638:	bic	r0, r6, #255	; 0xff
   2163c:	movt	r1, #18031	; 0x466f
   21640:	teq	r0, r1
   21644:	bne	21ca4 <main@@Base+0xbf5c>
   21648:	ldr	r0, [sp, #20]
   2164c:	mov	r1, r7
   21650:	mov	r2, r8
   21654:	mov	r3, #3
   21658:	str	r0, [sp]
   2165c:	mov	r0, r4
   21660:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   21664:	cmp	r0, r7
   21668:	beq	21ca4 <main@@Base+0xbf5c>
   2166c:	mov	r1, r0
   21670:	mov	r3, #0
   21674:	mov	r2, #17
   21678:	b	21d3c <main@@Base+0xbff4>
   2167c:	eor	r5, r0, r6
   21680:	eor	r7, r2, r3
   21684:	orrs	r5, r5, r7
   21688:	bne	21890 <main@@Base+0xbb48>
   2168c:	add	ip, r1, #16
   21690:	sub	r2, r8, ip
   21694:	cmp	r2, #8
   21698:	mov	r0, r2
   2169c:	movcs	r0, #8
   216a0:	and	r0, r0, #15
   216a4:	sub	r4, r0, #1
   216a8:	cmp	r4, #7
   216ac:	bhi	21dec <main@@Base+0xc0a4>
   216b0:	add	r6, pc, #28
   216b4:	mov	r9, #0
   216b8:	mov	lr, #0
   216bc:	mov	sl, #0
   216c0:	mov	r3, #0
   216c4:	mov	r5, #0
   216c8:	mov	r0, #0
   216cc:	mov	r7, #0
   216d0:	ldr	pc, [r6, r4, lsl #2]
   216d4:	andeq	r1, r2, r0, lsr r7
   216d8:	andeq	r1, r2, r8, lsr #14
   216dc:	andeq	r1, r2, r0, lsr #14
   216e0:	andeq	r1, r2, r8, lsl r7
   216e4:	andeq	r1, r2, ip, lsl #14
   216e8:	strdeq	r1, [r2], -ip
   216ec:	strdeq	r1, [r2], -r4
   216f0:	strdeq	r1, [r2], -r4
   216f4:	ldrb	r0, [r1, #22]
   216f8:	lsl	lr, r0, #8
   216fc:	ldrb	r0, [r1, #21]
   21700:	mov	sl, r9
   21704:	orr	r0, lr, r0, lsl #16
   21708:	mov	r9, r0
   2170c:	ldrb	r0, [r1, #20]
   21710:	mov	r3, sl
   21714:	orr	r9, r9, r0, lsl #24
   21718:	ldrb	r0, [r1, #19]
   2171c:	orr	r5, r0, r3
   21720:	ldrb	r0, [r1, #18]
   21724:	orr	r0, r5, r0, lsl #8
   21728:	ldrb	r3, [r1, #17]
   2172c:	orr	r7, r0, r3, lsl #16
   21730:	cmp	r2, #8
   21734:	blt	21dec <main@@Base+0xc0a4>
   21738:	ldrb	r0, [ip]
   2173c:	movw	r2, #24421	; 0x5f65
   21740:	movw	r3, #27904	; 0x6d00
   21744:	movt	r2, #25959	; 0x6567
   21748:	movt	r3, #28277	; 0x6e75
   2174c:	add	r2, r2, #1114112	; 0x110000
   21750:	eor	r3, r9, r3
   21754:	orr	r0, r7, r0, lsl #24
   21758:	eor	r0, r0, r2
   2175c:	orrs	r0, r3, r0
   21760:	bne	21dec <main@@Base+0xc0a4>
   21764:	ldrb	r0, [r1, #23]
   21768:	ldr	r3, [sp, #12]
   2176c:	mov	r2, ip
   21770:	cmp	r0, #46	; 0x2e
   21774:	addeq	r2, r1, #24
   21778:	cmp	r2, ip
   2177c:	beq	21dec <main@@Base+0xc0a4>
   21780:	ldr	r0, [sp, #24]
   21784:	mov	r1, r2
   21788:	mov	r2, r8
   2178c:	sub	sp, fp, #28
   21790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21794:	b	250e0 <main@@Base+0xf398>
   21798:	movw	r7, #11846	; 0x2e46
   2179c:	eor	r2, r2, r3
   217a0:	movt	r7, #27749	; 0x6c65
   217a4:	eor	r7, r0, r7
   217a8:	orrs	r3, r7, r2
   217ac:	beq	21af0 <main@@Base+0xbda8>
   217b0:	movw	r3, #11843	; 0x2e43
   217b4:	movt	r3, #27749	; 0x6c65
   217b8:	eor	r0, r0, r3
   217bc:	orrs	r0, r0, r2
   217c0:	bne	21dec <main@@Base+0xc0a4>
   217c4:	add	r0, r1, #16
   217c8:	sub	r2, r8, r0
   217cc:	cmp	r2, #8
   217d0:	mov	r3, r2
   217d4:	movcs	r3, #8
   217d8:	and	r3, r3, #15
   217dc:	sub	r6, r3, #1
   217e0:	cmp	r6, #7
   217e4:	bhi	21dec <main@@Base+0xc0a4>
   217e8:	add	r3, pc, #16
   217ec:	mov	ip, #0
   217f0:	mov	r7, #0
   217f4:	mov	r4, #0
   217f8:	mov	r5, #0
   217fc:	ldr	pc, [r3, r6, lsl #2]
   21800:	andeq	r1, r2, r8, lsr r8
   21804:	andeq	r1, r2, r0, lsr r8
   21808:	andeq	r1, r2, r8, lsr #16
   2180c:	andeq	r1, r2, r0, lsr #16
   21810:	andeq	r1, r2, r0, lsr #16
   21814:	andeq	r1, r2, r0, lsr #16
   21818:	andeq	r1, r2, r0, lsr #16
   2181c:	andeq	r1, r2, r0, lsr #16
   21820:	ldrb	r7, [r1, #19]
   21824:	mov	ip, #0
   21828:	ldrb	r3, [r1, #18]
   2182c:	orr	r4, r7, r3, lsl #8
   21830:	ldrb	r3, [r1, #17]
   21834:	orr	r5, r4, r3, lsl #16
   21838:	cmp	r2, #5
   2183c:	blt	21dec <main@@Base+0xc0a4>
   21840:	ldrb	r2, [r0]
   21844:	movw	r3, #28530	; 0x6f72
   21848:	movt	r3, #28524	; 0x6f6c
   2184c:	orr	r2, r5, r2, lsl #24
   21850:	eor	r2, r2, r3
   21854:	orrs	r2, ip, r2
   21858:	bne	21dec <main@@Base+0xc0a4>
   2185c:	ldrb	r2, [r1, #20]
   21860:	cmp	r2, #46	; 0x2e
   21864:	mov	r2, r0
   21868:	addeq	r2, r1, #21
   2186c:	cmp	r2, r0
   21870:	beq	21dec <main@@Base+0xc0a4>
   21874:	ldr	r0, [sp, #24]
   21878:	mov	r1, r2
   2187c:	mov	r2, r8
   21880:	mov	r3, lr
   21884:	sub	sp, fp, #28
   21888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2188c:	b	208ac <main@@Base+0xab64>
   21890:	add	r5, r6, #6
   21894:	subs	r4, r0, r5
   21898:	sbcs	r2, r2, r3
   2189c:	bcs	219c0 <main@@Base+0xbc78>
   218a0:	add	r2, r6, #1
   218a4:	eor	r0, r0, r2
   218a8:	orrs	r0, r0, r7
   218ac:	bne	21dec <main@@Base+0xc0a4>
   218b0:	add	ip, r1, #16
   218b4:	sub	r2, r8, ip
   218b8:	cmp	r2, #8
   218bc:	mov	r0, r2
   218c0:	movcs	r0, #8
   218c4:	and	r0, r0, #15
   218c8:	sub	r4, r0, #1
   218cc:	cmp	r4, #7
   218d0:	bhi	21dec <main@@Base+0xc0a4>
   218d4:	add	r6, pc, #28
   218d8:	mov	r9, #0
   218dc:	mov	lr, #0
   218e0:	mov	sl, #0
   218e4:	mov	r3, #0
   218e8:	mov	r5, #0
   218ec:	mov	r7, #0
   218f0:	mov	r0, #0
   218f4:	ldr	pc, [r6, r4, lsl #2]
   218f8:	andeq	r1, r2, r4, asr r9
   218fc:	andeq	r1, r2, ip, asr #18
   21900:	andeq	r1, r2, r4, asr #18
   21904:	andeq	r1, r2, ip, lsr r9
   21908:	andeq	r1, r2, r0, lsr r9
   2190c:	andeq	r1, r2, r0, lsr #18
   21910:	andeq	r1, r2, r8, lsl r9
   21914:	andeq	r1, r2, r8, lsl r9
   21918:	ldrb	r0, [r1, #22]
   2191c:	lsl	lr, r0, #8
   21920:	ldrb	r0, [r1, #21]
   21924:	mov	sl, r9
   21928:	orr	r0, lr, r0, lsl #16
   2192c:	mov	r9, r0
   21930:	ldrb	r0, [r1, #20]
   21934:	mov	r3, sl
   21938:	orr	r9, r9, r0, lsl #24
   2193c:	ldrb	r0, [r1, #19]
   21940:	orr	r5, r0, r3
   21944:	ldrb	r0, [r1, #18]
   21948:	orr	r7, r5, r0, lsl #8
   2194c:	ldrb	r0, [r1, #17]
   21950:	orr	r0, r7, r0, lsl #16
   21954:	cmp	r2, #8
   21958:	blt	21dec <main@@Base+0xc0a4>
   2195c:	ldrb	r3, [ip]
   21960:	movw	r2, #24421	; 0x5f65
   21964:	movt	r2, #25959	; 0x6567
   21968:	add	r2, r2, #851968	; 0xd0000
   2196c:	add	r2, r2, #150994944	; 0x9000000
   21970:	orr	r0, r0, r3, lsl #24
   21974:	movw	r3, #27904	; 0x6d00
   21978:	movt	r3, #28277	; 0x6e75
   2197c:	eor	r0, r0, r2
   21980:	eor	r3, r9, r3
   21984:	orrs	r0, r3, r0
   21988:	bne	21dec <main@@Base+0xc0a4>
   2198c:	ldrb	r0, [r1, #23]
   21990:	ldr	r3, [sp, #12]
   21994:	mov	r2, ip
   21998:	cmp	r0, #46	; 0x2e
   2199c:	addeq	r2, r1, #24
   219a0:	cmp	r2, ip
   219a4:	beq	21dec <main@@Base+0xc0a4>
   219a8:	ldr	r0, [sp, #24]
   219ac:	mov	r1, r2
   219b0:	mov	r2, r8
   219b4:	sub	sp, fp, #28
   219b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   219bc:	b	25290 <main@@Base+0xf548>
   219c0:	eor	r0, r0, r5
   219c4:	orrs	r0, r0, r7
   219c8:	bne	21dec <main@@Base+0xc0a4>
   219cc:	add	lr, r1, #16
   219d0:	sub	r2, r8, lr
   219d4:	cmp	r2, #8
   219d8:	mov	r0, r2
   219dc:	movcs	r0, #8
   219e0:	and	r0, r0, #15
   219e4:	sub	r7, r0, #1
   219e8:	cmp	r7, #7
   219ec:	bhi	21dec <main@@Base+0xc0a4>
   219f0:	add	r3, pc, #36	; 0x24
   219f4:	mov	r0, #0
   219f8:	mov	sl, #0
   219fc:	mov	r9, #0
   21a00:	mov	r4, #0
   21a04:	mov	r6, #0
   21a08:	mov	r5, #0
   21a0c:	mov	ip, #0
   21a10:	str	r0, [sp, #8]
   21a14:	mov	r0, #0
   21a18:	ldr	pc, [r3, r7, lsl #2]
   21a1c:	andeq	r1, r2, r8, lsl #21
   21a20:	andeq	r1, r2, r0, lsl #21
   21a24:	andeq	r1, r2, r8, ror sl
   21a28:	andeq	r1, r2, r0, ror sl
   21a2c:	andeq	r1, r2, r4, ror #20
   21a30:	andeq	r1, r2, r8, asr sl
   21a34:	andeq	r1, r2, r4, asr #20
   21a38:	andeq	r1, r2, ip, lsr sl
   21a3c:	ldrb	r0, [r1, #23]
   21a40:	str	r0, [sp, #8]
   21a44:	ldrb	r0, [r1, #22]
   21a48:	ldr	r3, [sp, #8]
   21a4c:	mov	r9, sl
   21a50:	orr	r0, r3, r0, lsl #8
   21a54:	mov	sl, r0
   21a58:	ldrb	r0, [r1, #21]
   21a5c:	mov	r4, r9
   21a60:	orr	sl, sl, r0, lsl #16
   21a64:	ldrb	r0, [r1, #20]
   21a68:	mov	r6, r4
   21a6c:	orr	sl, sl, r0, lsl #24
   21a70:	ldrb	r0, [r1, #19]
   21a74:	orr	r5, r0, r6
   21a78:	ldrb	r0, [r1, #18]
   21a7c:	orr	ip, r5, r0, lsl #8
   21a80:	ldrb	r0, [r1, #17]
   21a84:	orr	r0, ip, r0, lsl #16
   21a88:	ldrb	r3, [lr]
   21a8c:	movw	ip, #27904	; 0x6d00
   21a90:	cmp	r2, #8
   21a94:	movt	ip, #28277	; 0x6e75
   21a98:	orr	r6, r0, r3, lsl #24
   21a9c:	blt	21b74 <main@@Base+0xbe2c>
   21aa0:	movw	r2, #24421	; 0x5f65
   21aa4:	bic	r0, sl, #255	; 0xff
   21aa8:	movt	r2, #25959	; 0x6567
   21aac:	eor	r0, r0, ip
   21ab0:	eor	r2, r6, r2
   21ab4:	orrs	r0, r0, r2
   21ab8:	bne	21b74 <main@@Base+0xbe2c>
   21abc:	ldrb	r0, [r1, #23]
   21ac0:	mov	r2, lr
   21ac4:	cmp	r0, #46	; 0x2e
   21ac8:	addeq	r2, r1, #24
   21acc:	cmp	r2, lr
   21ad0:	beq	21b74 <main@@Base+0xbe2c>
   21ad4:	ldr	r0, [sp, #24]
   21ad8:	ldr	r3, [sp, #12]
   21adc:	mov	r1, r2
   21ae0:	mov	r2, r8
   21ae4:	sub	sp, fp, #28
   21ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21aec:	b	25484 <main@@Base+0xf73c>
   21af0:	add	r0, r1, #16
   21af4:	sub	r2, r8, r0
   21af8:	cmp	r2, #8
   21afc:	mov	r3, r2
   21b00:	movcs	r3, #8
   21b04:	and	r7, r3, #15
   21b08:	sub	r3, r7, #2
   21b0c:	cmp	r3, #7
   21b10:	bcs	21c90 <main@@Base+0xbf48>
   21b14:	ldrb	r3, [r1, #17]
   21b18:	lsl	r7, r3, #16
   21b1c:	mov	r3, #0
   21b20:	cmp	r2, #3
   21b24:	blt	21dec <main@@Base+0xc0a4>
   21b28:	ldrb	r2, [r0]
   21b2c:	orr	r2, r7, r2, lsl #24
   21b30:	eor	r2, r2, #7274496	; 0x6f0000
   21b34:	eor	r2, r2, #1862270976	; 0x6f000000
   21b38:	orrs	r2, r3, r2
   21b3c:	bne	21dec <main@@Base+0xc0a4>
   21b40:	ldrb	r2, [r1, #18]
   21b44:	cmp	r2, #46	; 0x2e
   21b48:	mov	r2, r0
   21b4c:	addeq	r2, r1, #19
   21b50:	cmp	r2, r0
   21b54:	beq	21dec <main@@Base+0xc0a4>
   21b58:	ldr	r0, [sp, #24]
   21b5c:	mov	r1, r2
   21b60:	mov	r2, r8
   21b64:	mov	r3, lr
   21b68:	sub	sp, fp, #28
   21b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21b70:	b	24e70 <main@@Base+0xf128>
   21b74:	movw	r0, #31077	; 0x7965
   21b78:	movw	r2, #25965	; 0x656d
   21b7c:	movt	r0, #28788	; 0x7074
   21b80:	movt	r2, #28532	; 0x6f74
   21b84:	eor	r0, sl, r0
   21b88:	eor	r2, r6, r2
   21b8c:	orrs	r0, r0, r2
   21b90:	bne	21dec <main@@Base+0xc0a4>
   21b94:	add	r0, r1, #24
   21b98:	sub	r2, r8, r0
   21b9c:	cmp	r2, #8
   21ba0:	mov	r3, r2
   21ba4:	movcs	r3, #8
   21ba8:	and	r7, r3, #15
   21bac:	sub	r3, r7, #3
   21bb0:	cmp	r3, #6
   21bb4:	bcs	21d58 <main@@Base+0xc010>
   21bb8:	ldrb	r3, [r1, #26]
   21bbc:	ldr	r4, [sp, #12]
   21bc0:	lsl	r7, r3, #8
   21bc4:	mov	r3, #0
   21bc8:	ldrb	r6, [r1, #25]
   21bcc:	orr	r7, r7, r6, lsl #16
   21bd0:	cmp	r2, #4
   21bd4:	blt	21dec <main@@Base+0xc0a4>
   21bd8:	ldrb	r2, [r0]
   21bdc:	orr	r2, r7, r2, lsl #24
   21be0:	eor	r2, r2, ip
   21be4:	orrs	r2, r3, r2
   21be8:	bne	21dec <main@@Base+0xc0a4>
   21bec:	ldrb	r2, [r1, #27]
   21bf0:	mov	r6, r0
   21bf4:	cmp	r2, #46	; 0x2e
   21bf8:	addeq	r6, r1, #28
   21bfc:	cmp	r6, r0
   21c00:	beq	21dec <main@@Base+0xc0a4>
   21c04:	sub	r0, r8, r6
   21c08:	mov	r1, #-268435456	; 0xf0000000
   21c0c:	cmp	r0, #8
   21c10:	movcs	r0, #8
   21c14:	add	r0, r1, r0, lsl #28
   21c18:	asr	r0, r0, #28
   21c1c:	cmp	r0, #0
   21c20:	blt	21d98 <main@@Base+0xc050>
   21c24:	ldrb	r0, [r6]
   21c28:	cmp	r0, #120	; 0x78
   21c2c:	bne	21db8 <main@@Base+0xc070>
   21c30:	ldr	r0, [sp, #20]
   21c34:	mov	r1, r6
   21c38:	mov	r2, r8
   21c3c:	mov	r3, #1
   21c40:	str	r0, [sp]
   21c44:	ldr	r0, [sp, #24]
   21c48:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   21c4c:	cmp	r0, r6
   21c50:	mov	r1, r6
   21c54:	beq	21dec <main@@Base+0xc0a4>
   21c58:	ldr	r2, [sp, #16]
   21c5c:	mov	r1, #0
   21c60:	str	r1, [r2]
   21c64:	str	r1, [r2, #4]
   21c68:	str	r1, [r4]
   21c6c:	mov	r1, r0
   21c70:	mov	r0, r1
   21c74:	sub	sp, fp, #28
   21c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21c7c:	cmp	r7, #1
   21c80:	mov	r3, #0
   21c84:	mov	r7, #0
   21c88:	beq	21258 <main@@Base+0xb510>
   21c8c:	b	21dec <main@@Base+0xc0a4>
   21c90:	cmp	r7, #1
   21c94:	mov	r3, #0
   21c98:	mov	r7, #0
   21c9c:	beq	21b20 <main@@Base+0xbdd8>
   21ca0:	b	21dec <main@@Base+0xc0a4>
   21ca4:	movw	r0, #25942	; 0x6556
   21ca8:	movw	r1, #25452	; 0x636c
   21cac:	movt	r0, #30052	; 0x7564
   21cb0:	movt	r1, #18798	; 0x496e
   21cb4:	eor	r0, sl, r0
   21cb8:	eor	r1, r6, r1
   21cbc:	orrs	r0, r0, r1
   21cc0:	bne	21d78 <main@@Base+0xc030>
   21cc4:	add	r6, r7, #8
   21cc8:	sub	r0, r8, r6
   21ccc:	cmp	r0, #8
   21cd0:	movcs	r0, #8
   21cd4:	and	r1, r0, #15
   21cd8:	sub	r0, r1, #2
   21cdc:	cmp	r0, #7
   21ce0:	bcs	21dd8 <main@@Base+0xc090>
   21ce4:	ldrb	r0, [r7, #9]
   21ce8:	lsl	r1, r0, #16
   21cec:	mov	r0, #0
   21cf0:	ldrb	r2, [r6]
   21cf4:	orr	r1, r1, r2, lsl #24
   21cf8:	eor	r1, r1, #23855104	; 0x16c0000
   21cfc:	eor	r1, r1, #1610612736	; 0x60000000
   21d00:	orrs	r0, r0, r1
   21d04:	bne	21da8 <main@@Base+0xc060>
   21d08:	ldr	r0, [sp, #20]
   21d0c:	mov	r1, r6
   21d10:	mov	r2, r8
   21d14:	mov	r3, #2
   21d18:	str	r0, [sp]
   21d1c:	mov	r0, r4
   21d20:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   21d24:	cmp	r0, r6
   21d28:	mov	r1, r7
   21d2c:	beq	21dec <main@@Base+0xc0a4>
   21d30:	mov	r2, #0
   21d34:	mov	r3, #0
   21d38:	mov	r1, r0
   21d3c:	ldr	r0, [sp, #16]
   21d40:	strd	r2, [r0]
   21d44:	mov	r0, #0
   21d48:	str	r0, [r9]
   21d4c:	mov	r0, r1
   21d50:	sub	sp, fp, #28
   21d54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d58:	ldr	r4, [sp, #12]
   21d5c:	mov	r3, #0
   21d60:	cmp	r7, #1
   21d64:	beq	21d88 <main@@Base+0xc040>
   21d68:	cmp	r7, #2
   21d6c:	mov	r7, #0
   21d70:	beq	21bc8 <main@@Base+0xbe80>
   21d74:	b	21dec <main@@Base+0xc0a4>
   21d78:	mov	r1, r7
   21d7c:	mov	r0, r1
   21d80:	sub	sp, fp, #28
   21d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d88:	mov	r7, #0
   21d8c:	cmp	r2, #4
   21d90:	bge	21bd8 <main@@Base+0xbe90>
   21d94:	b	21dec <main@@Base+0xc0a4>
   21d98:	mov	r1, r6
   21d9c:	mov	r0, r1
   21da0:	sub	sp, fp, #28
   21da4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21da8:	mov	r1, r7
   21dac:	mov	r0, r1
   21db0:	sub	sp, fp, #28
   21db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21db8:	mov	r1, r6
   21dbc:	mov	r0, r1
   21dc0:	sub	sp, fp, #28
   21dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21dc8:	mov	r1, r7
   21dcc:	mov	r0, r1
   21dd0:	sub	sp, fp, #28
   21dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21dd8:	cmp	r1, #1
   21ddc:	mov	r0, #0
   21de0:	mov	r1, #0
   21de4:	beq	21cf0 <main@@Base+0xbfa8>
   21de8:	mov	r1, r7
   21dec:	mov	r0, r1
   21df0:	sub	sp, fp, #28
   21df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21df8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21dfc:	add	fp, sp, #28
   21e00:	sub	sp, sp, #44	; 0x2c
   21e04:	mov	r6, r2
   21e08:	ldr	r2, [fp, #8]
   21e0c:	mov	r5, r0
   21e10:	mov	r0, #0
   21e14:	mov	sl, r3
   21e18:	cmp	r1, r6
   21e1c:	strb	r0, [r2]
   21e20:	beq	21e34 <main@@Base+0xc0ec>
   21e24:	ldrb	r0, [r1]
   21e28:	cmp	r0, #34	; 0x22
   21e2c:	bne	21e5c <main@@Base+0xc114>
   21e30:	add	r1, r1, #1
   21e34:	sub	r0, r6, r1
   21e38:	cmp	r0, #2
   21e3c:	blt	21e94 <main@@Base+0xc14c>
   21e40:	ldrb	r0, [r1]
   21e44:	cmp	r0, #32
   21e48:	bls	21e80 <main@@Base+0xc138>
   21e4c:	mov	r7, r1
   21e50:	cmp	r7, r6
   21e54:	bne	21eac <main@@Base+0xc164>
   21e58:	b	21fd0 <main@@Base+0xc288>
   21e5c:	mov	r0, r5
   21e60:	mov	r2, r6
   21e64:	mov	r3, #5
   21e68:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   21e6c:	mov	r1, r0
   21e70:	sub	r0, r6, r1
   21e74:	cmp	r0, #2
   21e78:	bge	21e40 <main@@Base+0xc0f8>
   21e7c:	b	21e94 <main@@Base+0xc14c>
   21e80:	bne	21e94 <main@@Base+0xc14c>
   21e84:	mov	r7, r1
   21e88:	ldrb	r0, [r7, #1]!
   21e8c:	cmp	r0, #32
   21e90:	bhi	21ea4 <main@@Base+0xc15c>
   21e94:	mov	r0, r5
   21e98:	mov	r2, r6
   21e9c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   21ea0:	mov	r7, r0
   21ea4:	cmp	r7, r6
   21ea8:	beq	21fd0 <main@@Base+0xc288>
   21eac:	add	r0, sl, #4
   21eb0:	mov	r2, #0
   21eb4:	add	r8, sp, #32
   21eb8:	add	r9, sp, #28
   21ebc:	str	sl, [sp, #16]
   21ec0:	str	r0, [sp, #12]
   21ec4:	ldr	r4, [sl]
   21ec8:	mov	sl, r0
   21ecc:	str	r2, [sp, #20]
   21ed0:	add	r0, sp, #24
   21ed4:	mov	r1, r7
   21ed8:	mov	r2, r6
   21edc:	mov	r3, r9
   21ee0:	str	r8, [sp]
   21ee4:	str	r0, [sp, #4]
   21ee8:	mov	r0, r5
   21eec:	blx	r4
   21ef0:	cmp	r0, r6
   21ef4:	beq	21fe0 <main@@Base+0xc298>
   21ef8:	mov	r4, r0
   21efc:	cmp	r0, r7
   21f00:	bne	21f14 <main@@Base+0xc1cc>
   21f04:	ldr	r4, [sl], #4
   21f08:	cmp	r4, #0
   21f0c:	bne	21ed0 <main@@Base+0xc188>
   21f10:	b	21ff0 <main@@Base+0xc2a8>
   21f14:	ldr	r2, [sp, #28]
   21f18:	ldr	r0, [sp, #32]
   21f1c:	ldr	r1, [sp, #36]	; 0x24
   21f20:	cmp	r2, #0
   21f24:	beq	21f4c <main@@Base+0xc204>
   21f28:	ldr	sl, [sp, #16]
   21f2c:	subs	r2, r0, #129	; 0x81
   21f30:	sbcs	r1, r1, #0
   21f34:	bcc	21f80 <main@@Base+0xc238>
   21f38:	mov	r0, r5
   21f3c:	mov	r1, r4
   21f40:	mov	r2, r6
   21f44:	mov	r3, #8
   21f48:	b	21f6c <main@@Base+0xc224>
   21f4c:	ldr	sl, [sp, #16]
   21f50:	subs	r2, r0, #128	; 0x80
   21f54:	sbcs	r1, r1, #0
   21f58:	bcc	21f94 <main@@Base+0xc24c>
   21f5c:	mov	r0, r5
   21f60:	mov	r1, r4
   21f64:	mov	r2, r6
   21f68:	mov	r3, #7
   21f6c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   21f70:	ldr	r2, [sp, #20]
   21f74:	cmp	r0, r6
   21f78:	bne	21fa4 <main@@Base+0xc25c>
   21f7c:	b	22014 <main@@Base+0xc2cc>
   21f80:	rsb	r2, r0, #0
   21f84:	mov	r0, r4
   21f88:	cmp	r0, r6
   21f8c:	bne	21fa4 <main@@Base+0xc25c>
   21f90:	b	22014 <main@@Base+0xc2cc>
   21f94:	mov	r2, r0
   21f98:	mov	r0, r4
   21f9c:	cmp	r0, r6
   21fa0:	beq	22014 <main@@Base+0xc2cc>
   21fa4:	ldr	r0, [fp, #8]
   21fa8:	mov	r7, r4
   21fac:	mov	r1, r0
   21fb0:	ldrb	r0, [r0]
   21fb4:	add	r0, r0, r2
   21fb8:	strb	r0, [r1]
   21fbc:	ldr	r0, [sp, #24]
   21fc0:	cmp	r0, #0
   21fc4:	ldr	r0, [sp, #12]
   21fc8:	bne	21ec4 <main@@Base+0xc17c>
   21fcc:	b	21fd4 <main@@Base+0xc28c>
   21fd0:	mov	r4, r6
   21fd4:	mov	r0, r4
   21fd8:	sub	sp, fp, #28
   21fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21fe0:	mov	r4, r6
   21fe4:	mov	r0, r4
   21fe8:	sub	sp, fp, #28
   21fec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21ff0:	mov	r0, r5
   21ff4:	mov	r1, r7
   21ff8:	mov	r2, r6
   21ffc:	mov	r3, #23
   22000:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   22004:	mov	r4, r0
   22008:	mov	r0, r4
   2200c:	sub	sp, fp, #28
   22010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22014:	mov	r4, r6
   22018:	mov	r0, r4
   2201c:	sub	sp, fp, #28
   22020:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22024:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22028:	add	fp, sp, #28
   2202c:	sub	sp, sp, #44	; 0x2c
   22030:	mov	r6, r2
   22034:	ldr	r2, [fp, #8]
   22038:	mov	r5, r0
   2203c:	mov	r0, #0
   22040:	mov	sl, r3
   22044:	cmp	r1, r6
   22048:	strb	r0, [r2]
   2204c:	beq	22060 <main@@Base+0xc318>
   22050:	ldrb	r0, [r1]
   22054:	cmp	r0, #34	; 0x22
   22058:	bne	22088 <main@@Base+0xc340>
   2205c:	add	r1, r1, #1
   22060:	sub	r0, r6, r1
   22064:	cmp	r0, #2
   22068:	blt	220c0 <main@@Base+0xc378>
   2206c:	ldrb	r0, [r1]
   22070:	cmp	r0, #32
   22074:	bls	220ac <main@@Base+0xc364>
   22078:	mov	r7, r1
   2207c:	cmp	r7, r6
   22080:	bne	220d8 <main@@Base+0xc390>
   22084:	b	221e8 <main@@Base+0xc4a0>
   22088:	mov	r0, r5
   2208c:	mov	r2, r6
   22090:	mov	r3, #5
   22094:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   22098:	mov	r1, r0
   2209c:	sub	r0, r6, r1
   220a0:	cmp	r0, #2
   220a4:	bge	2206c <main@@Base+0xc324>
   220a8:	b	220c0 <main@@Base+0xc378>
   220ac:	bne	220c0 <main@@Base+0xc378>
   220b0:	mov	r7, r1
   220b4:	ldrb	r0, [r7, #1]!
   220b8:	cmp	r0, #32
   220bc:	bhi	220d0 <main@@Base+0xc388>
   220c0:	mov	r0, r5
   220c4:	mov	r2, r6
   220c8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   220cc:	mov	r7, r0
   220d0:	cmp	r7, r6
   220d4:	beq	221e8 <main@@Base+0xc4a0>
   220d8:	add	r0, sl, #4
   220dc:	mov	r1, #0
   220e0:	add	r8, sp, #32
   220e4:	add	r9, sp, #28
   220e8:	str	sl, [sp, #16]
   220ec:	str	r1, [sp, #20]
   220f0:	str	r0, [sp, #12]
   220f4:	ldr	r4, [sl]
   220f8:	mov	sl, r0
   220fc:	add	r0, sp, #24
   22100:	mov	r1, r7
   22104:	mov	r2, r6
   22108:	mov	r3, r9
   2210c:	str	r8, [sp]
   22110:	str	r0, [sp, #4]
   22114:	mov	r0, r5
   22118:	blx	r4
   2211c:	cmp	r0, r6
   22120:	beq	221f8 <main@@Base+0xc4b0>
   22124:	mov	r4, r0
   22128:	cmp	r0, r7
   2212c:	bne	22140 <main@@Base+0xc3f8>
   22130:	ldr	r4, [sl], #4
   22134:	cmp	r4, #0
   22138:	bne	220fc <main@@Base+0xc3b4>
   2213c:	b	22208 <main@@Base+0xc4c0>
   22140:	ldr	r0, [sp, #28]
   22144:	cmp	r0, #0
   22148:	beq	22170 <main@@Base+0xc428>
   2214c:	mov	r0, r5
   22150:	mov	r1, r4
   22154:	mov	r2, r6
   22158:	mov	r3, #8
   2215c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   22160:	ldr	sl, [sp, #16]
   22164:	cmp	r0, r6
   22168:	bne	221b8 <main@@Base+0xc470>
   2216c:	b	2222c <main@@Base+0xc4e4>
   22170:	ldr	r0, [sp, #32]
   22174:	ldr	r1, [sp, #36]	; 0x24
   22178:	ldr	sl, [sp, #16]
   2217c:	subs	r2, r0, #256	; 0x100
   22180:	sbcs	r1, r1, #0
   22184:	bcc	221a8 <main@@Base+0xc460>
   22188:	mov	r0, r5
   2218c:	mov	r1, r4
   22190:	mov	r2, r6
   22194:	mov	r3, #7
   22198:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2219c:	cmp	r0, r6
   221a0:	bne	221b8 <main@@Base+0xc470>
   221a4:	b	2222c <main@@Base+0xc4e4>
   221a8:	str	r0, [sp, #20]
   221ac:	mov	r0, r4
   221b0:	cmp	r0, r6
   221b4:	beq	2222c <main@@Base+0xc4e4>
   221b8:	ldr	r0, [fp, #8]
   221bc:	ldr	r2, [sp, #20]
   221c0:	mov	r7, r4
   221c4:	mov	r1, r0
   221c8:	ldrb	r0, [r0]
   221cc:	add	r0, r0, r2
   221d0:	strb	r0, [r1]
   221d4:	ldr	r0, [sp, #24]
   221d8:	cmp	r0, #0
   221dc:	ldr	r0, [sp, #12]
   221e0:	bne	220f4 <main@@Base+0xc3ac>
   221e4:	b	221ec <main@@Base+0xc4a4>
   221e8:	mov	r4, r6
   221ec:	mov	r0, r4
   221f0:	sub	sp, fp, #28
   221f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   221f8:	mov	r4, r6
   221fc:	mov	r0, r4
   22200:	sub	sp, fp, #28
   22204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22208:	mov	r0, r5
   2220c:	mov	r1, r7
   22210:	mov	r2, r6
   22214:	mov	r3, #23
   22218:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2221c:	mov	r4, r0
   22220:	mov	r0, r4
   22224:	sub	sp, fp, #28
   22228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2222c:	mov	r4, r6
   22230:	mov	r0, r4
   22234:	sub	sp, fp, #28
   22238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2223c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22240:	add	fp, sp, #28
   22244:	sub	sp, sp, #44	; 0x2c
   22248:	mov	r6, r2
   2224c:	ldr	r2, [fp, #8]
   22250:	mov	r5, r0
   22254:	mov	r0, #0
   22258:	mov	sl, r3
   2225c:	cmp	r1, r6
   22260:	strh	r0, [r2]
   22264:	beq	22278 <main@@Base+0xc530>
   22268:	ldrb	r0, [r1]
   2226c:	cmp	r0, #34	; 0x22
   22270:	bne	222a0 <main@@Base+0xc558>
   22274:	add	r1, r1, #1
   22278:	sub	r0, r6, r1
   2227c:	cmp	r0, #2
   22280:	blt	222d8 <main@@Base+0xc590>
   22284:	ldrb	r0, [r1]
   22288:	cmp	r0, #32
   2228c:	bls	222c4 <main@@Base+0xc57c>
   22290:	mov	r7, r1
   22294:	cmp	r7, r6
   22298:	bne	222f0 <main@@Base+0xc5a8>
   2229c:	b	22418 <main@@Base+0xc6d0>
   222a0:	mov	r0, r5
   222a4:	mov	r2, r6
   222a8:	mov	r3, #5
   222ac:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   222b0:	mov	r1, r0
   222b4:	sub	r0, r6, r1
   222b8:	cmp	r0, #2
   222bc:	bge	22284 <main@@Base+0xc53c>
   222c0:	b	222d8 <main@@Base+0xc590>
   222c4:	bne	222d8 <main@@Base+0xc590>
   222c8:	mov	r7, r1
   222cc:	ldrb	r0, [r7, #1]!
   222d0:	cmp	r0, #32
   222d4:	bhi	222e8 <main@@Base+0xc5a0>
   222d8:	mov	r0, r5
   222dc:	mov	r2, r6
   222e0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   222e4:	mov	r7, r0
   222e8:	cmp	r7, r6
   222ec:	beq	22418 <main@@Base+0xc6d0>
   222f0:	add	r0, sl, #4
   222f4:	mov	r2, #0
   222f8:	add	r8, sp, #32
   222fc:	add	r9, sp, #28
   22300:	str	sl, [sp, #16]
   22304:	str	r0, [sp, #12]
   22308:	ldr	r4, [sl]
   2230c:	mov	sl, r0
   22310:	str	r2, [sp, #20]
   22314:	add	r0, sp, #24
   22318:	mov	r1, r7
   2231c:	mov	r2, r6
   22320:	mov	r3, r9
   22324:	str	r8, [sp]
   22328:	str	r0, [sp, #4]
   2232c:	mov	r0, r5
   22330:	blx	r4
   22334:	cmp	r0, r6
   22338:	beq	22428 <main@@Base+0xc6e0>
   2233c:	mov	r4, r0
   22340:	cmp	r0, r7
   22344:	bne	22358 <main@@Base+0xc610>
   22348:	ldr	r4, [sl], #4
   2234c:	cmp	r4, #0
   22350:	bne	22314 <main@@Base+0xc5cc>
   22354:	b	22438 <main@@Base+0xc6f0>
   22358:	ldr	r2, [sp, #28]
   2235c:	ldr	r0, [sp, #32]
   22360:	ldr	r1, [sp, #36]	; 0x24
   22364:	cmp	r2, #0
   22368:	beq	22394 <main@@Base+0xc64c>
   2236c:	ldr	sl, [sp, #16]
   22370:	movw	r2, #32769	; 0x8001
   22374:	subs	r2, r0, r2
   22378:	sbcs	r1, r1, #0
   2237c:	bcc	223c8 <main@@Base+0xc680>
   22380:	mov	r0, r5
   22384:	mov	r1, r4
   22388:	mov	r2, r6
   2238c:	mov	r3, #8
   22390:	b	223b4 <main@@Base+0xc66c>
   22394:	ldr	sl, [sp, #16]
   22398:	subs	r2, r0, #32768	; 0x8000
   2239c:	sbcs	r1, r1, #0
   223a0:	bcc	223dc <main@@Base+0xc694>
   223a4:	mov	r0, r5
   223a8:	mov	r1, r4
   223ac:	mov	r2, r6
   223b0:	mov	r3, #7
   223b4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   223b8:	ldr	r2, [sp, #20]
   223bc:	cmp	r0, r6
   223c0:	bne	223ec <main@@Base+0xc6a4>
   223c4:	b	2245c <main@@Base+0xc714>
   223c8:	rsb	r2, r0, #0
   223cc:	mov	r0, r4
   223d0:	cmp	r0, r6
   223d4:	bne	223ec <main@@Base+0xc6a4>
   223d8:	b	2245c <main@@Base+0xc714>
   223dc:	mov	r2, r0
   223e0:	mov	r0, r4
   223e4:	cmp	r0, r6
   223e8:	beq	2245c <main@@Base+0xc714>
   223ec:	ldr	r0, [fp, #8]
   223f0:	mov	r7, r4
   223f4:	mov	r1, r0
   223f8:	ldrh	r0, [r0]
   223fc:	add	r0, r0, r2
   22400:	strh	r0, [r1]
   22404:	ldr	r0, [sp, #24]
   22408:	cmp	r0, #0
   2240c:	ldr	r0, [sp, #12]
   22410:	bne	22308 <main@@Base+0xc5c0>
   22414:	b	2241c <main@@Base+0xc6d4>
   22418:	mov	r4, r6
   2241c:	mov	r0, r4
   22420:	sub	sp, fp, #28
   22424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22428:	mov	r4, r6
   2242c:	mov	r0, r4
   22430:	sub	sp, fp, #28
   22434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22438:	mov	r0, r5
   2243c:	mov	r1, r7
   22440:	mov	r2, r6
   22444:	mov	r3, #23
   22448:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2244c:	mov	r4, r0
   22450:	mov	r0, r4
   22454:	sub	sp, fp, #28
   22458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2245c:	mov	r4, r6
   22460:	mov	r0, r4
   22464:	sub	sp, fp, #28
   22468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2246c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22470:	add	fp, sp, #28
   22474:	sub	sp, sp, #28
   22478:	mov	r7, r2
   2247c:	mov	r5, r0
   22480:	cmp	r1, r2
   22484:	beq	224fc <main@@Base+0xc7b4>
   22488:	ldrb	r0, [r1]
   2248c:	cmp	r0, #123	; 0x7b
   22490:	bne	224fc <main@@Base+0xc7b4>
   22494:	add	r2, r1, #1
   22498:	mov	sl, r3
   2249c:	sub	r0, r7, r2
   224a0:	cmp	r0, #2
   224a4:	blt	2252c <main@@Base+0xc7e4>
   224a8:	ldrb	r0, [r2]
   224ac:	cmp	r0, #32
   224b0:	bls	2251c <main@@Base+0xc7d4>
   224b4:	mov	r1, r2
   224b8:	cmp	r1, r7
   224bc:	mov	r2, r7
   224c0:	beq	2254c <main@@Base+0xc804>
   224c4:	ldrb	r0, [r1]
   224c8:	cmp	r0, #125	; 0x7d
   224cc:	bne	22514 <main@@Base+0xc7cc>
   224d0:	add	r2, r1, #1
   224d4:	sub	r0, r7, r2
   224d8:	cmp	r0, #2
   224dc:	blt	22bc4 <main@@Base+0xce7c>
   224e0:	ldrb	r0, [r2]
   224e4:	cmp	r0, #32
   224e8:	bls	22bb4 <main@@Base+0xce6c>
   224ec:	mov	r1, r2
   224f0:	mov	r0, r1
   224f4:	sub	sp, fp, #28
   224f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   224fc:	mov	r0, r5
   22500:	mov	r2, r7
   22504:	mov	r3, #21
   22508:	sub	sp, fp, #28
   2250c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22510:	b	347d8 <flatcc_json_parser_set_error@@Base>
   22514:	mov	r2, r1
   22518:	b	2254c <main@@Base+0xc804>
   2251c:	bne	2252c <main@@Base+0xc7e4>
   22520:	ldrb	r0, [r1, #2]!
   22524:	cmp	r0, #32
   22528:	bhi	22540 <main@@Base+0xc7f8>
   2252c:	mov	r1, r2
   22530:	mov	r0, r5
   22534:	mov	r2, r7
   22538:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2253c:	mov	r1, r0
   22540:	cmp	r1, r7
   22544:	mov	r2, r7
   22548:	bne	224c4 <main@@Base+0xc77c>
   2254c:	movw	r0, #53636	; 0xd184
   22550:	mov	r8, #-268435456	; 0xf0000000
   22554:	mov	r9, #1627389952	; 0x61000000
   22558:	movt	r0, #5
   2255c:	add	r0, r0, #60	; 0x3c
   22560:	str	r0, [sp, #4]
   22564:	cmp	r2, r7
   22568:	mov	r4, r7
   2256c:	beq	2259c <main@@Base+0xc854>
   22570:	ldrb	r0, [r2]
   22574:	cmp	r0, #34	; 0x22
   22578:	bne	22584 <main@@Base+0xc83c>
   2257c:	add	r4, r2, #1
   22580:	b	2259c <main@@Base+0xc854>
   22584:	mov	r1, r2
   22588:	mov	r0, r5
   2258c:	mov	r2, r7
   22590:	mov	r3, #5
   22594:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   22598:	mov	r4, r0
   2259c:	sub	r0, r7, r4
   225a0:	mov	r1, #8
   225a4:	cmp	r0, #8
   225a8:	movcc	r1, r0
   225ac:	add	r1, r8, r1, lsl #28
   225b0:	asr	r1, r1, #28
   225b4:	cmp	r1, #0
   225b8:	blt	22a28 <main@@Base+0xcce0>
   225bc:	ldrb	r1, [r4]
   225c0:	teq	r9, r1, lsl #24
   225c4:	beq	2261c <main@@Base+0xc8d4>
   225c8:	lsl	r1, r1, #24
   225cc:	teq	r1, #1644167168	; 0x62000000
   225d0:	bne	22a28 <main@@Base+0xcce0>
   225d4:	cmp	r0, #2
   225d8:	mov	r6, r4
   225dc:	blt	2277c <main@@Base+0xca34>
   225e0:	ldrb	r0, [r4, #1]
   225e4:	mov	r6, r4
   225e8:	cmp	r0, #34	; 0x22
   225ec:	bne	2277c <main@@Base+0xca34>
   225f0:	add	r1, r4, #2
   225f4:	sub	r0, r7, r1
   225f8:	cmp	r0, #2
   225fc:	blt	22678 <main@@Base+0xc930>
   22600:	ldrb	r0, [r1]
   22604:	cmp	r0, #32
   22608:	bls	22664 <main@@Base+0xc91c>
   2260c:	mov	r6, r1
   22610:	cmp	r6, r7
   22614:	bne	22690 <main@@Base+0xc948>
   22618:	b	226c8 <main@@Base+0xc980>
   2261c:	cmp	r0, #2
   22620:	mov	r6, r4
   22624:	blt	22998 <main@@Base+0xcc50>
   22628:	ldrb	r0, [r4, #1]
   2262c:	mov	r6, r4
   22630:	cmp	r0, #34	; 0x22
   22634:	bne	22998 <main@@Base+0xcc50>
   22638:	add	r1, r4, #2
   2263c:	sub	r0, r7, r1
   22640:	cmp	r0, #2
   22644:	blt	226f4 <main@@Base+0xc9ac>
   22648:	ldrb	r0, [r1]
   2264c:	cmp	r0, #32
   22650:	bls	226e0 <main@@Base+0xc998>
   22654:	mov	r6, r1
   22658:	cmp	r6, r7
   2265c:	bne	2270c <main@@Base+0xc9c4>
   22660:	b	22744 <main@@Base+0xc9fc>
   22664:	bne	22678 <main@@Base+0xc930>
   22668:	mov	r6, r4
   2266c:	ldrb	r0, [r6, #3]!
   22670:	cmp	r0, #32
   22674:	bhi	22688 <main@@Base+0xc940>
   22678:	mov	r0, r5
   2267c:	mov	r2, r7
   22680:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   22684:	mov	r6, r0
   22688:	cmp	r6, r7
   2268c:	beq	226c8 <main@@Base+0xc980>
   22690:	ldrb	r0, [r6]
   22694:	cmp	r0, #58	; 0x3a
   22698:	bne	226c8 <main@@Base+0xc980>
   2269c:	add	r1, r6, #1
   226a0:	sub	r0, r7, r1
   226a4:	cmp	r0, #2
   226a8:	blt	2276c <main@@Base+0xca24>
   226ac:	ldrb	r0, [r1]
   226b0:	cmp	r0, #32
   226b4:	bls	2275c <main@@Base+0xca14>
   226b8:	mov	r6, r1
   226bc:	cmp	r4, r6
   226c0:	bne	22784 <main@@Base+0xca3c>
   226c4:	b	22a28 <main@@Base+0xcce0>
   226c8:	mov	r0, r5
   226cc:	mov	r1, r6
   226d0:	mov	r2, r7
   226d4:	mov	r3, #4
   226d8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   226dc:	b	22778 <main@@Base+0xca30>
   226e0:	bne	226f4 <main@@Base+0xc9ac>
   226e4:	mov	r6, r4
   226e8:	ldrb	r0, [r6, #3]!
   226ec:	cmp	r0, #32
   226f0:	bhi	22704 <main@@Base+0xc9bc>
   226f4:	mov	r0, r5
   226f8:	mov	r2, r7
   226fc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   22700:	mov	r6, r0
   22704:	cmp	r6, r7
   22708:	beq	22744 <main@@Base+0xc9fc>
   2270c:	ldrb	r0, [r6]
   22710:	cmp	r0, #58	; 0x3a
   22714:	bne	22744 <main@@Base+0xc9fc>
   22718:	add	r1, r6, #1
   2271c:	sub	r0, r7, r1
   22720:	cmp	r0, #2
   22724:	blt	22988 <main@@Base+0xcc40>
   22728:	ldrb	r0, [r1]
   2272c:	cmp	r0, #32
   22730:	bls	22978 <main@@Base+0xcc30>
   22734:	mov	r6, r1
   22738:	cmp	r4, r6
   2273c:	bne	229a0 <main@@Base+0xcc58>
   22740:	b	22a28 <main@@Base+0xcce0>
   22744:	mov	r0, r5
   22748:	mov	r1, r6
   2274c:	mov	r2, r7
   22750:	mov	r3, #4
   22754:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   22758:	b	22994 <main@@Base+0xcc4c>
   2275c:	bne	2276c <main@@Base+0xca24>
   22760:	ldrb	r0, [r6, #2]!
   22764:	cmp	r0, #32
   22768:	bhi	2277c <main@@Base+0xca34>
   2276c:	mov	r0, r5
   22770:	mov	r2, r7
   22774:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   22778:	mov	r6, r0
   2277c:	cmp	r4, r6
   22780:	beq	22a28 <main@@Base+0xcce0>
   22784:	mov	r4, #0
   22788:	cmp	r6, r7
   2278c:	str	r4, [sp, #20]
   22790:	str	r4, [sp, #16]
   22794:	strb	r4, [sp, #10]
   22798:	str	r4, [sp, #12]
   2279c:	beq	22808 <main@@Base+0xcac0>
   227a0:	add	r0, sp, #16
   227a4:	mov	r1, r6
   227a8:	mov	r2, r7
   227ac:	add	r3, sp, #12
   227b0:	str	r0, [sp]
   227b4:	mov	r0, r5
   227b8:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   227bc:	cmp	r0, r6
   227c0:	beq	228cc <main@@Base+0xcb84>
   227c4:	ldr	r3, [sp, #12]
   227c8:	mov	r1, r0
   227cc:	ldr	r0, [sp, #16]
   227d0:	ldr	r2, [sp, #20]
   227d4:	cmp	r3, #0
   227d8:	beq	228dc <main@@Base+0xcb94>
   227dc:	subs	r3, r0, #129	; 0x81
   227e0:	sbcs	r2, r2, #0
   227e4:	bcc	22908 <main@@Base+0xcbc0>
   227e8:	mov	r0, r5
   227ec:	mov	r2, r7
   227f0:	mov	r3, #8
   227f4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   227f8:	mov	r1, r0
   227fc:	cmp	r6, r1
   22800:	bne	22814 <main@@Base+0xcacc>
   22804:	b	2292c <main@@Base+0xcbe4>
   22808:	mov	r1, r7
   2280c:	cmp	r6, r1
   22810:	beq	2292c <main@@Base+0xcbe4>
   22814:	strb	r4, [sl, #2]
   22818:	sub	r0, r7, r1
   2281c:	cmp	r0, #2
   22820:	blt	22a48 <main@@Base+0xcd00>
   22824:	ldrb	r0, [r1]
   22828:	cmp	r0, #32
   2282c:	bls	22880 <main@@Base+0xcb38>
   22830:	mov	r2, r1
   22834:	cmp	r2, r7
   22838:	beq	22b38 <main@@Base+0xcdf0>
   2283c:	ldrb	r0, [r2]
   22840:	cmp	r0, #44	; 0x2c
   22844:	bne	22b48 <main@@Base+0xce00>
   22848:	add	r1, r2, #1
   2284c:	sub	r0, r7, r1
   22850:	cmp	r0, #2
   22854:	blt	228b0 <main@@Base+0xcb68>
   22858:	ldrb	r0, [r1]
   2285c:	cmp	r0, #32
   22860:	bls	228a0 <main@@Base+0xcb58>
   22864:	mov	r2, r1
   22868:	cmp	r2, r7
   2286c:	beq	22b7c <main@@Base+0xce34>
   22870:	ldrb	r0, [r2]
   22874:	cmp	r0, #125	; 0x7d
   22878:	bne	22564 <main@@Base+0xc81c>
   2287c:	b	22b88 <main@@Base+0xce40>
   22880:	bne	22a48 <main@@Base+0xcd00>
   22884:	mov	r2, r1
   22888:	ldrb	r0, [r2, #1]!
   2288c:	cmp	r0, #32
   22890:	bls	22a48 <main@@Base+0xcd00>
   22894:	cmp	r2, r7
   22898:	bne	2283c <main@@Base+0xcaf4>
   2289c:	b	22b38 <main@@Base+0xcdf0>
   228a0:	bne	228b0 <main@@Base+0xcb68>
   228a4:	ldrb	r0, [r2, #2]!
   228a8:	cmp	r0, #32
   228ac:	bhi	228c0 <main@@Base+0xcb78>
   228b0:	mov	r0, r5
   228b4:	mov	r2, r7
   228b8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   228bc:	mov	r2, r0
   228c0:	cmp	r2, r7
   228c4:	bne	22870 <main@@Base+0xcb28>
   228c8:	b	22b7c <main@@Base+0xce34>
   228cc:	mov	r1, r6
   228d0:	cmp	r6, r1
   228d4:	bne	22814 <main@@Base+0xcacc>
   228d8:	b	2292c <main@@Base+0xcbe4>
   228dc:	subs	r3, r0, #128	; 0x80
   228e0:	sbcs	r2, r2, #0
   228e4:	bcc	2291c <main@@Base+0xcbd4>
   228e8:	mov	r0, r5
   228ec:	mov	r2, r7
   228f0:	mov	r3, #7
   228f4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   228f8:	mov	r1, r0
   228fc:	cmp	r6, r1
   22900:	bne	22814 <main@@Base+0xcacc>
   22904:	b	2292c <main@@Base+0xcbe4>
   22908:	rsb	r4, r0, #0
   2290c:	strb	r4, [sp, #10]
   22910:	cmp	r6, r1
   22914:	bne	22814 <main@@Base+0xcacc>
   22918:	b	2292c <main@@Base+0xcbe4>
   2291c:	mov	r4, r0
   22920:	strb	r4, [sp, #10]
   22924:	cmp	r6, r1
   22928:	bne	22814 <main@@Base+0xcacc>
   2292c:	add	r0, sp, #10
   22930:	mov	r1, r6
   22934:	mov	r2, r7
   22938:	str	r0, [sp]
   2293c:	movw	r0, #53636	; 0xd184
   22940:	movt	r0, #5
   22944:	add	r3, r0, #48	; 0x30
   22948:	mov	r0, r5
   2294c:	bl	21df8 <main@@Base+0xc0b0>
   22950:	mov	r1, r0
   22954:	cmp	r0, r6
   22958:	cmpne	r1, r7
   2295c:	beq	22b28 <main@@Base+0xcde0>
   22960:	ldrb	r4, [sp, #10]
   22964:	strb	r4, [sl, #2]
   22968:	sub	r0, r7, r1
   2296c:	cmp	r0, #2
   22970:	blt	22a48 <main@@Base+0xcd00>
   22974:	b	22824 <main@@Base+0xcadc>
   22978:	bne	22988 <main@@Base+0xcc40>
   2297c:	ldrb	r0, [r6, #2]!
   22980:	cmp	r0, #32
   22984:	bhi	22998 <main@@Base+0xcc50>
   22988:	mov	r0, r5
   2298c:	mov	r2, r7
   22990:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   22994:	mov	r6, r0
   22998:	cmp	r4, r6
   2299c:	beq	22a28 <main@@Base+0xcce0>
   229a0:	mov	r4, #0
   229a4:	cmp	r6, r7
   229a8:	str	r4, [sp, #20]
   229ac:	str	r4, [sp, #16]
   229b0:	strh	r4, [sp, #10]
   229b4:	str	r4, [sp, #12]
   229b8:	beq	22a64 <main@@Base+0xcd1c>
   229bc:	add	r0, sp, #16
   229c0:	mov	r1, r6
   229c4:	mov	r2, r7
   229c8:	add	r3, sp, #12
   229cc:	str	r0, [sp]
   229d0:	mov	r0, r5
   229d4:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   229d8:	cmp	r0, r6
   229dc:	beq	22a84 <main@@Base+0xcd3c>
   229e0:	ldr	r3, [sp, #12]
   229e4:	mov	r1, r0
   229e8:	ldr	r0, [sp, #16]
   229ec:	ldr	r2, [sp, #20]
   229f0:	cmp	r3, #0
   229f4:	beq	22ad4 <main@@Base+0xcd8c>
   229f8:	movw	r3, #32769	; 0x8001
   229fc:	subs	r3, r0, r3
   22a00:	sbcs	r2, r2, #0
   22a04:	bcc	22b00 <main@@Base+0xcdb8>
   22a08:	mov	r0, r5
   22a0c:	mov	r2, r7
   22a10:	mov	r3, #8
   22a14:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   22a18:	mov	r1, r0
   22a1c:	cmp	r6, r1
   22a20:	bne	22a70 <main@@Base+0xcd28>
   22a24:	b	22a90 <main@@Base+0xcd48>
   22a28:	mov	r0, r5
   22a2c:	mov	r1, r4
   22a30:	mov	r2, r7
   22a34:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   22a38:	mov	r1, r0
   22a3c:	sub	r0, r7, r1
   22a40:	cmp	r0, #2
   22a44:	bge	22824 <main@@Base+0xcadc>
   22a48:	mov	r0, r5
   22a4c:	mov	r2, r7
   22a50:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   22a54:	mov	r2, r0
   22a58:	cmp	r2, r7
   22a5c:	bne	2283c <main@@Base+0xcaf4>
   22a60:	b	22b38 <main@@Base+0xcdf0>
   22a64:	mov	r1, r7
   22a68:	cmp	r6, r1
   22a6c:	beq	22a90 <main@@Base+0xcd48>
   22a70:	strh	r4, [sl]
   22a74:	sub	r0, r7, r1
   22a78:	cmp	r0, #2
   22a7c:	bge	22824 <main@@Base+0xcadc>
   22a80:	b	22a48 <main@@Base+0xcd00>
   22a84:	mov	r1, r6
   22a88:	cmp	r6, r1
   22a8c:	bne	22a70 <main@@Base+0xcd28>
   22a90:	add	r0, sp, #10
   22a94:	mov	r1, r6
   22a98:	mov	r2, r7
   22a9c:	str	r0, [sp]
   22aa0:	mov	r0, r5
   22aa4:	ldr	r3, [sp, #4]
   22aa8:	bl	2223c <main@@Base+0xc4f4>
   22aac:	mov	r1, r0
   22ab0:	cmp	r0, r6
   22ab4:	cmpne	r1, r7
   22ab8:	beq	22b28 <main@@Base+0xcde0>
   22abc:	ldrh	r4, [sp, #10]
   22ac0:	strh	r4, [sl]
   22ac4:	sub	r0, r7, r1
   22ac8:	cmp	r0, #2
   22acc:	bge	22824 <main@@Base+0xcadc>
   22ad0:	b	22a48 <main@@Base+0xcd00>
   22ad4:	subs	r3, r0, #32768	; 0x8000
   22ad8:	sbcs	r2, r2, #0
   22adc:	bcc	22b14 <main@@Base+0xcdcc>
   22ae0:	mov	r0, r5
   22ae4:	mov	r2, r7
   22ae8:	mov	r3, #7
   22aec:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   22af0:	mov	r1, r0
   22af4:	cmp	r6, r1
   22af8:	bne	22a70 <main@@Base+0xcd28>
   22afc:	b	22a90 <main@@Base+0xcd48>
   22b00:	rsb	r4, r0, #0
   22b04:	strh	r4, [sp, #10]
   22b08:	cmp	r6, r1
   22b0c:	bne	22a70 <main@@Base+0xcd28>
   22b10:	b	22a90 <main@@Base+0xcd48>
   22b14:	mov	r4, r0
   22b18:	strh	r4, [sp, #10]
   22b1c:	cmp	r6, r1
   22b20:	bne	22a70 <main@@Base+0xcd28>
   22b24:	b	22a90 <main@@Base+0xcd48>
   22b28:	mov	r0, r5
   22b2c:	mov	r2, r7
   22b30:	mov	r3, #33	; 0x21
   22b34:	b	22bec <main@@Base+0xcea4>
   22b38:	mov	r1, r7
   22b3c:	mov	r0, r1
   22b40:	sub	sp, fp, #28
   22b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b48:	cmp	r0, #125	; 0x7d
   22b4c:	bne	22bdc <main@@Base+0xce94>
   22b50:	add	r3, r2, #1
   22b54:	sub	r0, r7, r3
   22b58:	cmp	r0, #2
   22b5c:	blt	22c08 <main@@Base+0xcec0>
   22b60:	ldrb	r0, [r3]
   22b64:	cmp	r0, #32
   22b68:	bls	22bf4 <main@@Base+0xceac>
   22b6c:	mov	r1, r3
   22b70:	mov	r0, r1
   22b74:	sub	sp, fp, #28
   22b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b7c:	mov	r0, r5
   22b80:	mov	r1, r7
   22b84:	b	22be4 <main@@Base+0xce9c>
   22b88:	add	r3, r2, #1
   22b8c:	sub	r0, r7, r3
   22b90:	cmp	r0, #2
   22b94:	blt	22c08 <main@@Base+0xcec0>
   22b98:	ldrb	r0, [r3]
   22b9c:	cmp	r0, #32
   22ba0:	bls	22bf4 <main@@Base+0xceac>
   22ba4:	mov	r1, r3
   22ba8:	mov	r0, r1
   22bac:	sub	sp, fp, #28
   22bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22bb4:	bne	22bc4 <main@@Base+0xce7c>
   22bb8:	ldrb	r0, [r1, #2]!
   22bbc:	cmp	r0, #32
   22bc0:	bhi	22c1c <main@@Base+0xced4>
   22bc4:	mov	r1, r2
   22bc8:	mov	r0, r5
   22bcc:	mov	r2, r7
   22bd0:	sub	sp, fp, #28
   22bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22bd8:	b	34888 <flatcc_json_parser_space_ext@@Base>
   22bdc:	mov	r0, r5
   22be0:	mov	r1, r2
   22be4:	mov	r2, r7
   22be8:	mov	r3, #10
   22bec:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   22bf0:	b	22c18 <main@@Base+0xced0>
   22bf4:	bne	22c08 <main@@Base+0xcec0>
   22bf8:	ldrb	r0, [r2, #2]!
   22bfc:	cmp	r0, #32
   22c00:	mov	r1, r2
   22c04:	bhi	22c1c <main@@Base+0xced4>
   22c08:	mov	r0, r5
   22c0c:	mov	r1, r3
   22c10:	mov	r2, r7
   22c14:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   22c18:	mov	r1, r0
   22c1c:	mov	r0, r1
   22c20:	sub	sp, fp, #28
   22c24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c2c:	add	fp, sp, #28
   22c30:	sub	sp, sp, #36	; 0x24
   22c34:	ldr	r5, [fp, #8]
   22c38:	mov	r8, r0
   22c3c:	mov	r0, #0
   22c40:	mov	sl, r2
   22c44:	mov	r4, r1
   22c48:	cmp	r3, #4
   22c4c:	str	r0, [r5]
   22c50:	bhi	22cac <main@@Base+0xcf64>
   22c54:	add	r0, pc, #0
   22c58:	ldr	pc, [r0, r3, lsl #2]
   22c5c:	andeq	r2, r2, r0, ror ip
   22c60:	ldrdeq	r2, [r2], -r4
   22c64:	andeq	r2, r2, ip, ror #25
   22c68:	andeq	r2, r2, ip, asr #26
   22c6c:	andeq	r2, r2, ip, lsr #27
   22c70:	sub	r0, sl, r4
   22c74:	cmp	r0, #4
   22c78:	blt	22c90 <main@@Base+0xcf48>
   22c7c:	ldr	r0, [r4]
   22c80:	movw	r1, #30062	; 0x756e
   22c84:	movt	r1, #27756	; 0x6c6c
   22c88:	cmp	r0, r1
   22c8c:	beq	22e60 <main@@Base+0xd118>
   22c90:	mov	r0, r8
   22c94:	mov	r1, r4
   22c98:	mov	r2, sl
   22c9c:	mov	r3, #26
   22ca0:	sub	sp, fp, #28
   22ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ca8:	b	347d8 <flatcc_json_parser_set_error@@Base>
   22cac:	ldrb	r0, [r8, #8]
   22cb0:	tst	r0, #1
   22cb4:	bne	22e48 <main@@Base+0xd100>
   22cb8:	mov	r0, r8
   22cbc:	mov	r1, r4
   22cc0:	mov	r2, sl
   22cc4:	mov	r3, #15
   22cc8:	sub	sp, fp, #28
   22ccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22cd0:	b	347d8 <flatcc_json_parser_set_error@@Base>
   22cd4:	mov	r0, r8
   22cd8:	mov	r1, r4
   22cdc:	mov	r2, sl
   22ce0:	mov	r3, r5
   22ce4:	bl	165f8 <main@@Base+0x8b0>
   22ce8:	b	22dfc <main@@Base+0xd0b4>
   22cec:	mov	r0, #0
   22cf0:	mov	r1, #4
   22cf4:	str	r0, [r5]
   22cf8:	ldr	r0, [r8]
   22cfc:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   22d00:	cmp	r0, #0
   22d04:	bne	22de8 <main@@Base+0xd0a0>
   22d08:	cmp	r4, sl
   22d0c:	beq	22dc4 <main@@Base+0xd07c>
   22d10:	ldrb	r0, [r4]
   22d14:	cmp	r0, #123	; 0x7b
   22d18:	bne	22dc4 <main@@Base+0xd07c>
   22d1c:	add	r1, r4, #1
   22d20:	sub	r0, sl, r1
   22d24:	cmp	r0, #2
   22d28:	blt	22e80 <main@@Base+0xd138>
   22d2c:	ldrb	r0, [r1]
   22d30:	cmp	r0, #32
   22d34:	bls	22e70 <main@@Base+0xd128>
   22d38:	mov	r4, r1
   22d3c:	cmp	r4, sl
   22d40:	mov	r2, sl
   22d44:	bne	22e9c <main@@Base+0xd154>
   22d48:	b	22ecc <main@@Base+0xd184>
   22d4c:	mov	r0, #0
   22d50:	mov	r1, #0
   22d54:	str	r0, [r5]
   22d58:	ldr	r0, [r8]
   22d5c:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   22d60:	cmp	r0, #0
   22d64:	bne	22de8 <main@@Base+0xd0a0>
   22d68:	cmp	r4, sl
   22d6c:	beq	22dc4 <main@@Base+0xd07c>
   22d70:	ldrb	r0, [r4]
   22d74:	cmp	r0, #123	; 0x7b
   22d78:	bne	22dc4 <main@@Base+0xd07c>
   22d7c:	add	r1, r4, #1
   22d80:	sub	r0, sl, r1
   22d84:	cmp	r0, #2
   22d88:	blt	23a28 <main@@Base+0xdce0>
   22d8c:	ldrb	r0, [r1]
   22d90:	cmp	r0, #32
   22d94:	bls	23a18 <main@@Base+0xdcd0>
   22d98:	mov	r4, r1
   22d9c:	cmp	r4, sl
   22da0:	mov	r3, sl
   22da4:	bne	23a44 <main@@Base+0xdcfc>
   22da8:	b	23a84 <main@@Base+0xdd3c>
   22dac:	mov	r0, r8
   22db0:	mov	r1, r4
   22db4:	mov	r2, sl
   22db8:	mov	r3, r5
   22dbc:	bl	258c0 <main@@Base+0xfb78>
   22dc0:	b	22dfc <main@@Base+0xd0b4>
   22dc4:	mov	r0, r8
   22dc8:	mov	r1, r4
   22dcc:	mov	r2, sl
   22dd0:	mov	r3, #21
   22dd4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   22dd8:	mov	r4, r0
   22ddc:	ldr	r0, [r8, #20]
   22de0:	cmp	r0, #0
   22de4:	beq	23c2c <main@@Base+0xdee4>
   22de8:	mov	r0, r8
   22dec:	mov	r1, r4
   22df0:	mov	r2, sl
   22df4:	mov	r3, #33	; 0x21
   22df8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   22dfc:	mov	r4, r0
   22e00:	ldr	r0, [r8, #20]
   22e04:	cmp	r0, #0
   22e08:	bne	22e18 <main@@Base+0xd0d0>
   22e0c:	ldr	r0, [r5]
   22e10:	cmp	r0, #0
   22e14:	beq	22e24 <main@@Base+0xd0dc>
   22e18:	mov	r0, r4
   22e1c:	sub	sp, fp, #28
   22e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e24:	mov	r0, r8
   22e28:	mov	r1, r4
   22e2c:	mov	r2, sl
   22e30:	mov	r3, #33	; 0x21
   22e34:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   22e38:	mov	r4, r0
   22e3c:	mov	r0, r4
   22e40:	sub	sp, fp, #28
   22e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e48:	mov	r0, r8
   22e4c:	mov	r1, r4
   22e50:	mov	r2, sl
   22e54:	sub	sp, fp, #28
   22e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22e5c:	b	35224 <flatcc_json_parser_generic_json@@Base>
   22e60:	add	r4, r4, #4
   22e64:	mov	r0, r4
   22e68:	sub	sp, fp, #28
   22e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e70:	bne	22e80 <main@@Base+0xd138>
   22e74:	ldrb	r0, [r4, #2]!
   22e78:	cmp	r0, #32
   22e7c:	bhi	22e90 <main@@Base+0xd148>
   22e80:	mov	r0, r8
   22e84:	mov	r2, sl
   22e88:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   22e8c:	mov	r4, r0
   22e90:	cmp	r4, sl
   22e94:	mov	r2, sl
   22e98:	beq	22ecc <main@@Base+0xd184>
   22e9c:	ldrb	r0, [r4]
   22ea0:	cmp	r0, #125	; 0x7d
   22ea4:	bne	22ec8 <main@@Base+0xd180>
   22ea8:	add	r1, r4, #1
   22eac:	sub	r0, sl, r1
   22eb0:	cmp	r0, #2
   22eb4:	blt	23c6c <main@@Base+0xdf24>
   22eb8:	ldrb	r0, [r1]
   22ebc:	cmp	r0, #32
   22ec0:	bls	23a6c <main@@Base+0xdd24>
   22ec4:	b	23c1c <main@@Base+0xded4>
   22ec8:	mov	r2, r4
   22ecc:	movw	r0, #53876	; 0xd274
   22ed0:	movt	r0, #5
   22ed4:	add	r0, r0, #96	; 0x60
   22ed8:	str	r0, [sp, #12]
   22edc:	movw	r0, #53636	; 0xd184
   22ee0:	movt	r0, #5
   22ee4:	add	r0, r0, #72	; 0x48
   22ee8:	str	r0, [sp, #8]
   22eec:	cmp	r2, sl
   22ef0:	mov	r9, sl
   22ef4:	beq	22f24 <main@@Base+0xd1dc>
   22ef8:	ldrb	r0, [r2]
   22efc:	cmp	r0, #34	; 0x22
   22f00:	bne	22f0c <main@@Base+0xd1c4>
   22f04:	add	r9, r2, #1
   22f08:	b	22f24 <main@@Base+0xd1dc>
   22f0c:	mov	r1, r2
   22f10:	mov	r0, r8
   22f14:	mov	r2, sl
   22f18:	mov	r3, #5
   22f1c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   22f20:	mov	r9, r0
   22f24:	sub	lr, sl, r9
   22f28:	mov	r0, #8
   22f2c:	cmp	lr, #8
   22f30:	movcc	r0, lr
   22f34:	and	r0, r0, #15
   22f38:	sub	r2, r0, #1
   22f3c:	cmp	r2, #7
   22f40:	bhi	23848 <main@@Base+0xdb00>
   22f44:	mov	ip, r5
   22f48:	add	r5, pc, #24
   22f4c:	mov	r0, #0
   22f50:	mov	r1, #0
   22f54:	mov	r3, #0
   22f58:	mov	r7, #0
   22f5c:	mov	r6, #0
   22f60:	mov	r4, #0
   22f64:	ldr	pc, [r5, r2, lsl #2]
   22f68:			; <UNDEFINED> instruction: 0x00022fb8
   22f6c:			; <UNDEFINED> instruction: 0x00022fb0
   22f70:	andeq	r2, r2, r8, lsr #31
   22f74:	andeq	r2, r2, r0, lsr #31
   22f78:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   22f7c:	andeq	r2, r2, r8, lsl #31
   22f80:	andeq	r2, r2, r8, lsl #31
   22f84:	andeq	r2, r2, r8, lsl #31
   22f88:	ldrb	r1, [r9, #5]
   22f8c:	lsl	r1, r1, #16
   22f90:	ldrb	r2, [r9, #4]
   22f94:	mov	r3, r0
   22f98:	orr	r1, r1, r2, lsl #24
   22f9c:	mov	r0, r1
   22fa0:	ldrb	r1, [r9, #3]
   22fa4:	orr	r7, r1, r3
   22fa8:	ldrb	r1, [r9, #2]
   22fac:	orr	r6, r7, r1, lsl #8
   22fb0:	ldrb	r1, [r9, #1]
   22fb4:	orr	r4, r6, r1, lsl #16
   22fb8:	ldrb	r1, [r9]
   22fbc:	movw	r3, #29234	; 0x7232
   22fc0:	lsr	r2, r0, #16
   22fc4:	movt	r3, #27759	; 0x6c6f
   22fc8:	orr	r7, r4, r1, lsl #24
   22fcc:	movw	r1, #25455	; 0x636f
   22fd0:	orr	r2, r2, r7, lsl #16
   22fd4:	eor	r1, r1, r7, lsr #16
   22fd8:	eor	r2, r2, r3
   22fdc:	orrs	r1, r2, r1
   22fe0:	bne	23030 <main@@Base+0xd2e8>
   22fe4:	cmp	lr, #7
   22fe8:	mov	r6, r9
   22fec:	mov	r5, ip
   22ff0:	blt	231d0 <main@@Base+0xd488>
   22ff4:	ldrb	r0, [r9, #6]
   22ff8:	mov	r6, r9
   22ffc:	cmp	r0, #34	; 0x22
   23000:	bne	231d0 <main@@Base+0xd488>
   23004:	add	r1, r9, #7
   23008:	sub	r0, sl, r1
   2300c:	cmp	r0, #2
   23010:	blt	230ac <main@@Base+0xd364>
   23014:	ldrb	r0, [r1]
   23018:	cmp	r0, #32
   2301c:	bls	23098 <main@@Base+0xd350>
   23020:	mov	r6, r1
   23024:	cmp	r6, sl
   23028:	bne	230cc <main@@Base+0xd384>
   2302c:	b	23104 <main@@Base+0xd3bc>
   23030:	movw	r1, #27759	; 0x6c6f
   23034:	and	r0, r0, #-16777216	; 0xff000000
   23038:	mov	r5, ip
   2303c:	movt	r1, #25455	; 0x636f
   23040:	eor	r0, r0, #1912602624	; 0x72000000
   23044:	eor	r1, r7, r1
   23048:	orrs	r0, r0, r1
   2304c:	bne	233bc <main@@Base+0xd674>
   23050:	cmp	lr, #6
   23054:	mov	r6, r9
   23058:	blt	2333c <main@@Base+0xd5f4>
   2305c:	ldrb	r0, [r9, #5]
   23060:	mov	r6, r9
   23064:	cmp	r0, #34	; 0x22
   23068:	bne	2333c <main@@Base+0xd5f4>
   2306c:	add	r1, r9, #6
   23070:	sub	r0, sl, r1
   23074:	cmp	r0, #2
   23078:	blt	23134 <main@@Base+0xd3ec>
   2307c:	ldrb	r0, [r1]
   23080:	cmp	r0, #32
   23084:	bls	23120 <main@@Base+0xd3d8>
   23088:	mov	r6, r1
   2308c:	cmp	r6, sl
   23090:	bne	23154 <main@@Base+0xd40c>
   23094:	b	2318c <main@@Base+0xd444>
   23098:	bne	230ac <main@@Base+0xd364>
   2309c:	mov	r6, r9
   230a0:	ldrb	r0, [r6, #8]!
   230a4:	cmp	r0, #32
   230a8:	bhi	230c4 <main@@Base+0xd37c>
   230ac:	mov	r0, r8
   230b0:	mov	r2, sl
   230b4:	mov	r4, lr
   230b8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   230bc:	mov	lr, r4
   230c0:	mov	r6, r0
   230c4:	cmp	r6, sl
   230c8:	beq	23104 <main@@Base+0xd3bc>
   230cc:	ldrb	r0, [r6]
   230d0:	cmp	r0, #58	; 0x3a
   230d4:	bne	23104 <main@@Base+0xd3bc>
   230d8:	add	r1, r6, #1
   230dc:	sub	r0, sl, r1
   230e0:	cmp	r0, #2
   230e4:	blt	231b8 <main@@Base+0xd470>
   230e8:	ldrb	r0, [r1]
   230ec:	cmp	r0, #32
   230f0:	bls	231a8 <main@@Base+0xd460>
   230f4:	mov	r6, r1
   230f8:	cmp	r9, r6
   230fc:	bne	231d8 <main@@Base+0xd490>
   23100:	b	233bc <main@@Base+0xd674>
   23104:	mov	r0, r8
   23108:	mov	r1, r6
   2310c:	mov	r2, sl
   23110:	mov	r3, #4
   23114:	mov	r4, lr
   23118:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2311c:	b	231c8 <main@@Base+0xd480>
   23120:	bne	23134 <main@@Base+0xd3ec>
   23124:	mov	r6, r9
   23128:	ldrb	r0, [r6, #7]!
   2312c:	cmp	r0, #32
   23130:	bhi	2314c <main@@Base+0xd404>
   23134:	mov	r0, r8
   23138:	mov	r2, sl
   2313c:	mov	r4, lr
   23140:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   23144:	mov	lr, r4
   23148:	mov	r6, r0
   2314c:	cmp	r6, sl
   23150:	beq	2318c <main@@Base+0xd444>
   23154:	ldrb	r0, [r6]
   23158:	cmp	r0, #58	; 0x3a
   2315c:	bne	2318c <main@@Base+0xd444>
   23160:	add	r1, r6, #1
   23164:	sub	r0, sl, r1
   23168:	cmp	r0, #2
   2316c:	blt	23324 <main@@Base+0xd5dc>
   23170:	ldrb	r0, [r1]
   23174:	cmp	r0, #32
   23178:	bls	23314 <main@@Base+0xd5cc>
   2317c:	mov	r6, r1
   23180:	cmp	r9, r6
   23184:	bne	23344 <main@@Base+0xd5fc>
   23188:	b	233bc <main@@Base+0xd674>
   2318c:	mov	r0, r8
   23190:	mov	r1, r6
   23194:	mov	r2, sl
   23198:	mov	r3, #4
   2319c:	mov	r4, lr
   231a0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   231a4:	b	23334 <main@@Base+0xd5ec>
   231a8:	bne	231b8 <main@@Base+0xd470>
   231ac:	ldrb	r0, [r6, #2]!
   231b0:	cmp	r0, #32
   231b4:	bhi	231d0 <main@@Base+0xd488>
   231b8:	mov	r0, r8
   231bc:	mov	r2, sl
   231c0:	mov	r4, lr
   231c4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   231c8:	mov	lr, r4
   231cc:	mov	r6, r0
   231d0:	cmp	r9, r6
   231d4:	beq	233bc <main@@Base+0xd674>
   231d8:	mov	r7, #0
   231dc:	cmp	r6, sl
   231e0:	str	r7, [sp, #28]
   231e4:	str	r7, [sp, #24]
   231e8:	strb	r7, [sp, #19]
   231ec:	str	r7, [sp, #20]
   231f0:	beq	23250 <main@@Base+0xd508>
   231f4:	add	r0, sp, #24
   231f8:	mov	r1, r6
   231fc:	mov	r2, sl
   23200:	add	r3, sp, #20
   23204:	str	r0, [sp]
   23208:	mov	r0, r8
   2320c:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   23210:	cmp	r0, r6
   23214:	beq	23260 <main@@Base+0xd518>
   23218:	ldr	r2, [sp, #20]
   2321c:	mov	r4, r0
   23220:	ldr	r0, [sp, #24]
   23224:	ldr	r1, [sp, #28]
   23228:	cmp	r2, #0
   2322c:	beq	23270 <main@@Base+0xd528>
   23230:	subs	r2, r0, #129	; 0x81
   23234:	sbcs	r1, r1, #0
   23238:	bcc	232a0 <main@@Base+0xd558>
   2323c:	mov	r0, r8
   23240:	mov	r1, r4
   23244:	mov	r2, sl
   23248:	mov	r3, #8
   2324c:	b	2328c <main@@Base+0xd544>
   23250:	mov	r4, sl
   23254:	cmp	r6, r4
   23258:	bne	232f4 <main@@Base+0xd5ac>
   2325c:	b	232c4 <main@@Base+0xd57c>
   23260:	mov	r4, r6
   23264:	cmp	r6, r4
   23268:	bne	232f4 <main@@Base+0xd5ac>
   2326c:	b	232c4 <main@@Base+0xd57c>
   23270:	subs	r2, r0, #128	; 0x80
   23274:	sbcs	r1, r1, #0
   23278:	bcc	232b4 <main@@Base+0xd56c>
   2327c:	mov	r0, r8
   23280:	mov	r1, r4
   23284:	mov	r2, sl
   23288:	mov	r3, #7
   2328c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   23290:	mov	r4, r0
   23294:	cmp	r6, r4
   23298:	bne	232f4 <main@@Base+0xd5ac>
   2329c:	b	232c4 <main@@Base+0xd57c>
   232a0:	rsb	r7, r0, #0
   232a4:	strb	r7, [sp, #19]
   232a8:	cmp	r6, r4
   232ac:	bne	232f4 <main@@Base+0xd5ac>
   232b0:	b	232c4 <main@@Base+0xd57c>
   232b4:	mov	r7, r0
   232b8:	strb	r7, [sp, #19]
   232bc:	cmp	r6, r4
   232c0:	bne	232f4 <main@@Base+0xd5ac>
   232c4:	add	r0, sp, #19
   232c8:	mov	r1, r6
   232cc:	mov	r2, sl
   232d0:	str	r0, [sp]
   232d4:	mov	r0, r8
   232d8:	ldr	r3, [sp, #12]
   232dc:	bl	21df8 <main@@Base+0xc0b0>
   232e0:	mov	r4, r0
   232e4:	cmp	r0, r6
   232e8:	cmpne	r4, sl
   232ec:	beq	22de8 <main@@Base+0xd0a0>
   232f0:	ldrb	r7, [sp, #19]
   232f4:	uxtb	r0, r7
   232f8:	cmp	r0, #2
   232fc:	ldrbeq	r0, [r8, #8]
   23300:	tsteq	r0, #2
   23304:	beq	2385c <main@@Base+0xdb14>
   23308:	ldr	r0, [r8]
   2330c:	mov	r1, #1
   23310:	b	235b4 <main@@Base+0xd86c>
   23314:	bne	23324 <main@@Base+0xd5dc>
   23318:	ldrb	r0, [r6, #2]!
   2331c:	cmp	r0, #32
   23320:	bhi	2333c <main@@Base+0xd5f4>
   23324:	mov	r0, r8
   23328:	mov	r2, sl
   2332c:	mov	r4, lr
   23330:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   23334:	mov	lr, r4
   23338:	mov	r6, r0
   2333c:	cmp	r9, r6
   23340:	beq	233bc <main@@Base+0xd674>
   23344:	mov	r7, #0
   23348:	cmp	r6, sl
   2334c:	str	r7, [sp, #28]
   23350:	str	r7, [sp, #24]
   23354:	strb	r7, [sp, #19]
   23358:	str	r7, [sp, #20]
   2335c:	beq	23474 <main@@Base+0xd72c>
   23360:	add	r0, sp, #24
   23364:	mov	r1, r6
   23368:	mov	r2, sl
   2336c:	add	r3, sp, #20
   23370:	str	r0, [sp]
   23374:	mov	r0, r8
   23378:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   2337c:	cmp	r0, r6
   23380:	beq	23484 <main@@Base+0xd73c>
   23384:	ldr	r2, [sp, #20]
   23388:	mov	r4, r0
   2338c:	ldr	r0, [sp, #24]
   23390:	ldr	r1, [sp, #28]
   23394:	cmp	r2, #0
   23398:	beq	23494 <main@@Base+0xd74c>
   2339c:	subs	r2, r0, #129	; 0x81
   233a0:	sbcs	r1, r1, #0
   233a4:	bcc	234c4 <main@@Base+0xd77c>
   233a8:	mov	r0, r8
   233ac:	mov	r1, r4
   233b0:	mov	r2, sl
   233b4:	mov	r3, #8
   233b8:	b	234b0 <main@@Base+0xd768>
   233bc:	movw	r1, #12800	; 0x3200
   233c0:	bic	r0, r7, #255	; 0xff
   233c4:	movt	r1, #30051	; 0x7563
   233c8:	teq	r0, r1
   233cc:	bne	23418 <main@@Base+0xd6d0>
   233d0:	cmp	lr, #4
   233d4:	mov	r7, r9
   233d8:	blt	23678 <main@@Base+0xd930>
   233dc:	ldrb	r0, [r9, #3]
   233e0:	mov	r7, r9
   233e4:	cmp	r0, #34	; 0x22
   233e8:	bne	23678 <main@@Base+0xd930>
   233ec:	add	r1, r9, #4
   233f0:	sub	r0, sl, r1
   233f4:	cmp	r0, #2
   233f8:	blt	234ec <main@@Base+0xd7a4>
   233fc:	ldrb	r0, [r1]
   23400:	cmp	r0, #32
   23404:	bls	234d8 <main@@Base+0xd790>
   23408:	mov	r7, r1
   2340c:	cmp	r7, sl
   23410:	bne	23504 <main@@Base+0xd7bc>
   23414:	b	2353c <main@@Base+0xd7f4>
   23418:	movw	r0, #0
   2341c:	bfc	r7, #0, #16
   23420:	movt	r0, #30051	; 0x7563
   23424:	teq	r7, r0
   23428:	bne	23848 <main@@Base+0xdb00>
   2342c:	cmp	lr, #3
   23430:	mov	r7, r9
   23434:	blt	237cc <main@@Base+0xda84>
   23438:	ldrb	r0, [r9, #2]
   2343c:	mov	r7, r9
   23440:	cmp	r0, #34	; 0x22
   23444:	bne	237cc <main@@Base+0xda84>
   23448:	add	r1, r9, #3
   2344c:	sub	r0, sl, r1
   23450:	cmp	r0, #2
   23454:	blt	235f0 <main@@Base+0xd8a8>
   23458:	ldrb	r0, [r1]
   2345c:	cmp	r0, #32
   23460:	bls	235dc <main@@Base+0xd894>
   23464:	mov	r7, r1
   23468:	cmp	r7, sl
   2346c:	bne	23608 <main@@Base+0xd8c0>
   23470:	b	23640 <main@@Base+0xd8f8>
   23474:	mov	r4, sl
   23478:	cmp	r6, r4
   2347c:	bne	23598 <main@@Base+0xd850>
   23480:	b	23564 <main@@Base+0xd81c>
   23484:	mov	r4, r6
   23488:	cmp	r6, r4
   2348c:	bne	23598 <main@@Base+0xd850>
   23490:	b	23564 <main@@Base+0xd81c>
   23494:	subs	r2, r0, #128	; 0x80
   23498:	sbcs	r1, r1, #0
   2349c:	bcc	23554 <main@@Base+0xd80c>
   234a0:	mov	r0, r8
   234a4:	mov	r1, r4
   234a8:	mov	r2, sl
   234ac:	mov	r3, #7
   234b0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   234b4:	mov	r4, r0
   234b8:	cmp	r6, r4
   234bc:	bne	23598 <main@@Base+0xd850>
   234c0:	b	23564 <main@@Base+0xd81c>
   234c4:	rsb	r7, r0, #0
   234c8:	strb	r7, [sp, #19]
   234cc:	cmp	r6, r4
   234d0:	bne	23598 <main@@Base+0xd850>
   234d4:	b	23564 <main@@Base+0xd81c>
   234d8:	bne	234ec <main@@Base+0xd7a4>
   234dc:	mov	r7, r9
   234e0:	ldrb	r0, [r7, #5]!
   234e4:	cmp	r0, #32
   234e8:	bhi	234fc <main@@Base+0xd7b4>
   234ec:	mov	r0, r8
   234f0:	mov	r2, sl
   234f4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   234f8:	mov	r7, r0
   234fc:	cmp	r7, sl
   23500:	beq	2353c <main@@Base+0xd7f4>
   23504:	ldrb	r0, [r7]
   23508:	cmp	r0, #58	; 0x3a
   2350c:	bne	2353c <main@@Base+0xd7f4>
   23510:	add	r1, r7, #1
   23514:	sub	r0, sl, r1
   23518:	cmp	r0, #2
   2351c:	blt	23668 <main@@Base+0xd920>
   23520:	ldrb	r0, [r1]
   23524:	cmp	r0, #32
   23528:	bls	23658 <main@@Base+0xd910>
   2352c:	mov	r7, r1
   23530:	cmp	r9, r7
   23534:	bne	23680 <main@@Base+0xd938>
   23538:	b	23848 <main@@Base+0xdb00>
   2353c:	mov	r0, r8
   23540:	mov	r1, r7
   23544:	mov	r2, sl
   23548:	mov	r3, #4
   2354c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   23550:	b	23674 <main@@Base+0xd92c>
   23554:	mov	r7, r0
   23558:	strb	r7, [sp, #19]
   2355c:	cmp	r6, r4
   23560:	bne	23598 <main@@Base+0xd850>
   23564:	movw	r3, #53988	; 0xd2e4
   23568:	add	r0, sp, #19
   2356c:	mov	r1, r6
   23570:	mov	r2, sl
   23574:	str	r0, [sp]
   23578:	mov	r0, r8
   2357c:	movt	r3, #5
   23580:	bl	21df8 <main@@Base+0xc0b0>
   23584:	mov	r4, r0
   23588:	cmp	r0, r6
   2358c:	cmpne	r4, sl
   23590:	beq	22de8 <main@@Base+0xd0a0>
   23594:	ldrb	r7, [sp, #19]
   23598:	uxtb	r0, r7
   2359c:	cmp	r0, #2
   235a0:	ldrbeq	r0, [r8, #8]
   235a4:	tsteq	r0, #2
   235a8:	beq	2385c <main@@Base+0xdb14>
   235ac:	ldr	r0, [r8]
   235b0:	mov	r1, #0
   235b4:	mov	r2, #1
   235b8:	mov	r3, #1
   235bc:	bl	31040 <flatcc_builder_table_add@@Base>
   235c0:	cmp	r0, #0
   235c4:	beq	22de8 <main@@Base+0xd0a0>
   235c8:	strb	r7, [r0]
   235cc:	sub	r0, sl, r4
   235d0:	cmp	r0, #2
   235d4:	bge	23868 <main@@Base+0xdb20>
   235d8:	b	2397c <main@@Base+0xdc34>
   235dc:	bne	235f0 <main@@Base+0xd8a8>
   235e0:	mov	r7, r9
   235e4:	ldrb	r0, [r7, #4]!
   235e8:	cmp	r0, #32
   235ec:	bhi	23600 <main@@Base+0xd8b8>
   235f0:	mov	r0, r8
   235f4:	mov	r2, sl
   235f8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   235fc:	mov	r7, r0
   23600:	cmp	r7, sl
   23604:	beq	23640 <main@@Base+0xd8f8>
   23608:	ldrb	r0, [r7]
   2360c:	cmp	r0, #58	; 0x3a
   23610:	bne	23640 <main@@Base+0xd8f8>
   23614:	add	r1, r7, #1
   23618:	sub	r0, sl, r1
   2361c:	cmp	r0, #2
   23620:	blt	237bc <main@@Base+0xda74>
   23624:	ldrb	r0, [r1]
   23628:	cmp	r0, #32
   2362c:	bls	237ac <main@@Base+0xda64>
   23630:	mov	r7, r1
   23634:	cmp	r9, r7
   23638:	bne	237d4 <main@@Base+0xda8c>
   2363c:	b	23848 <main@@Base+0xdb00>
   23640:	mov	r0, r8
   23644:	mov	r1, r7
   23648:	mov	r2, sl
   2364c:	mov	r3, #4
   23650:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   23654:	b	237c8 <main@@Base+0xda80>
   23658:	bne	23668 <main@@Base+0xd920>
   2365c:	ldrb	r0, [r7, #2]!
   23660:	cmp	r0, #32
   23664:	bhi	23678 <main@@Base+0xd930>
   23668:	mov	r0, r8
   2366c:	mov	r2, sl
   23670:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   23674:	mov	r7, r0
   23678:	cmp	r9, r7
   2367c:	beq	23848 <main@@Base+0xdb00>
   23680:	mov	r6, #0
   23684:	cmp	r7, sl
   23688:	str	r6, [sp, #28]
   2368c:	str	r6, [sp, #24]
   23690:	strb	r6, [sp, #19]
   23694:	str	r6, [sp, #20]
   23698:	beq	236f4 <main@@Base+0xd9ac>
   2369c:	add	r0, sp, #24
   236a0:	mov	r1, r7
   236a4:	mov	r2, sl
   236a8:	add	r3, sp, #20
   236ac:	str	r0, [sp]
   236b0:	mov	r0, r8
   236b4:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   236b8:	cmp	r0, r7
   236bc:	beq	23704 <main@@Base+0xd9bc>
   236c0:	mov	r4, r0
   236c4:	ldr	r0, [sp, #20]
   236c8:	cmp	r0, #0
   236cc:	beq	23714 <main@@Base+0xd9cc>
   236d0:	mov	r0, r8
   236d4:	mov	r1, r4
   236d8:	mov	r2, sl
   236dc:	mov	r3, #8
   236e0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   236e4:	mov	r4, r0
   236e8:	cmp	r7, r4
   236ec:	bne	2378c <main@@Base+0xda44>
   236f0:	b	2375c <main@@Base+0xda14>
   236f4:	mov	r4, sl
   236f8:	cmp	r7, r4
   236fc:	bne	2378c <main@@Base+0xda44>
   23700:	b	2375c <main@@Base+0xda14>
   23704:	mov	r4, r7
   23708:	cmp	r7, r4
   2370c:	bne	2378c <main@@Base+0xda44>
   23710:	b	2375c <main@@Base+0xda14>
   23714:	ldr	r0, [sp, #24]
   23718:	ldr	r1, [sp, #28]
   2371c:	subs	r2, r0, #256	; 0x100
   23720:	sbcs	r1, r1, #0
   23724:	bcc	2374c <main@@Base+0xda04>
   23728:	mov	r0, r8
   2372c:	mov	r1, r4
   23730:	mov	r2, sl
   23734:	mov	r3, #7
   23738:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2373c:	mov	r4, r0
   23740:	cmp	r7, r4
   23744:	bne	2378c <main@@Base+0xda44>
   23748:	b	2375c <main@@Base+0xda14>
   2374c:	mov	r6, r0
   23750:	strb	r0, [sp, #19]
   23754:	cmp	r7, r4
   23758:	bne	2378c <main@@Base+0xda44>
   2375c:	add	r0, sp, #19
   23760:	mov	r1, r7
   23764:	mov	r2, sl
   23768:	str	r0, [sp]
   2376c:	mov	r0, r8
   23770:	ldr	r3, [sp, #8]
   23774:	bl	22024 <main@@Base+0xc2dc>
   23778:	mov	r4, r0
   2377c:	cmp	r0, r7
   23780:	cmpne	r4, sl
   23784:	beq	22de8 <main@@Base+0xd0a0>
   23788:	ldrb	r6, [sp, #19]
   2378c:	uxtb	r0, r6
   23790:	cmp	r0, #2
   23794:	ldrbeq	r0, [r8, #8]
   23798:	tsteq	r0, #2
   2379c:	beq	2385c <main@@Base+0xdb14>
   237a0:	ldr	r0, [r8]
   237a4:	mov	r1, #3
   237a8:	b	23958 <main@@Base+0xdc10>
   237ac:	bne	237bc <main@@Base+0xda74>
   237b0:	ldrb	r0, [r7, #2]!
   237b4:	cmp	r0, #32
   237b8:	bhi	237cc <main@@Base+0xda84>
   237bc:	mov	r0, r8
   237c0:	mov	r2, sl
   237c4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   237c8:	mov	r7, r0
   237cc:	cmp	r9, r7
   237d0:	beq	23848 <main@@Base+0xdb00>
   237d4:	mov	r6, #0
   237d8:	cmp	r7, sl
   237dc:	str	r6, [sp, #28]
   237e0:	str	r6, [sp, #24]
   237e4:	strb	r6, [sp, #19]
   237e8:	str	r6, [sp, #20]
   237ec:	beq	2389c <main@@Base+0xdb54>
   237f0:	add	r0, sp, #24
   237f4:	mov	r1, r7
   237f8:	mov	r2, sl
   237fc:	add	r3, sp, #20
   23800:	str	r0, [sp]
   23804:	mov	r0, r8
   23808:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   2380c:	cmp	r0, r7
   23810:	beq	238ac <main@@Base+0xdb64>
   23814:	mov	r4, r0
   23818:	ldr	r0, [sp, #20]
   2381c:	cmp	r0, #0
   23820:	beq	238bc <main@@Base+0xdb74>
   23824:	mov	r0, r8
   23828:	mov	r1, r4
   2382c:	mov	r2, sl
   23830:	mov	r3, #8
   23834:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   23838:	mov	r4, r0
   2383c:	cmp	r7, r4
   23840:	bne	2393c <main@@Base+0xdbf4>
   23844:	b	23904 <main@@Base+0xdbbc>
   23848:	mov	r0, r8
   2384c:	mov	r1, r9
   23850:	mov	r2, sl
   23854:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   23858:	mov	r4, r0
   2385c:	sub	r0, sl, r4
   23860:	cmp	r0, #2
   23864:	blt	2397c <main@@Base+0xdc34>
   23868:	ldrb	r0, [r4]
   2386c:	cmp	r0, #32
   23870:	bls	23884 <main@@Base+0xdb3c>
   23874:	mov	r2, r4
   23878:	cmp	r2, sl
   2387c:	bne	23998 <main@@Base+0xdc50>
   23880:	b	23b9c <main@@Base+0xde54>
   23884:	bne	2397c <main@@Base+0xdc34>
   23888:	mov	r2, r4
   2388c:	ldrb	r0, [r2, #1]!
   23890:	cmp	r0, #32
   23894:	bhi	23990 <main@@Base+0xdc48>
   23898:	b	2397c <main@@Base+0xdc34>
   2389c:	mov	r4, sl
   238a0:	cmp	r7, r4
   238a4:	bne	2393c <main@@Base+0xdbf4>
   238a8:	b	23904 <main@@Base+0xdbbc>
   238ac:	mov	r4, r7
   238b0:	cmp	r7, r4
   238b4:	bne	2393c <main@@Base+0xdbf4>
   238b8:	b	23904 <main@@Base+0xdbbc>
   238bc:	ldr	r0, [sp, #24]
   238c0:	ldr	r1, [sp, #28]
   238c4:	subs	r2, r0, #256	; 0x100
   238c8:	sbcs	r1, r1, #0
   238cc:	bcc	238f4 <main@@Base+0xdbac>
   238d0:	mov	r0, r8
   238d4:	mov	r1, r4
   238d8:	mov	r2, sl
   238dc:	mov	r3, #7
   238e0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   238e4:	mov	r4, r0
   238e8:	cmp	r7, r4
   238ec:	bne	2393c <main@@Base+0xdbf4>
   238f0:	b	23904 <main@@Base+0xdbbc>
   238f4:	mov	r6, r0
   238f8:	strb	r0, [sp, #19]
   238fc:	cmp	r7, r4
   23900:	bne	2393c <main@@Base+0xdbf4>
   23904:	add	r0, sp, #19
   23908:	mov	r1, r7
   2390c:	mov	r2, sl
   23910:	str	r0, [sp]
   23914:	movw	r0, #53636	; 0xd184
   23918:	movt	r0, #5
   2391c:	add	r3, r0, #84	; 0x54
   23920:	mov	r0, r8
   23924:	bl	22024 <main@@Base+0xc2dc>
   23928:	mov	r4, r0
   2392c:	cmp	r0, r7
   23930:	cmpne	r4, sl
   23934:	beq	22de8 <main@@Base+0xd0a0>
   23938:	ldrb	r6, [sp, #19]
   2393c:	uxtb	r0, r6
   23940:	cmp	r0, #2
   23944:	ldrbeq	r0, [r8, #8]
   23948:	tsteq	r0, #2
   2394c:	beq	2385c <main@@Base+0xdb14>
   23950:	ldr	r0, [r8]
   23954:	mov	r1, #2
   23958:	mov	r2, #1
   2395c:	mov	r3, #1
   23960:	bl	31040 <flatcc_builder_table_add@@Base>
   23964:	cmp	r0, #0
   23968:	beq	22de8 <main@@Base+0xd0a0>
   2396c:	strb	r6, [r0]
   23970:	sub	r0, sl, r4
   23974:	cmp	r0, #2
   23978:	bge	23868 <main@@Base+0xdb20>
   2397c:	mov	r0, r8
   23980:	mov	r1, r4
   23984:	mov	r2, sl
   23988:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2398c:	mov	r2, r0
   23990:	cmp	r2, sl
   23994:	beq	23b9c <main@@Base+0xde54>
   23998:	ldrb	r0, [r2]
   2399c:	cmp	r0, #44	; 0x2c
   239a0:	bne	23bf8 <main@@Base+0xdeb0>
   239a4:	add	r1, r2, #1
   239a8:	sub	r0, sl, r1
   239ac:	cmp	r0, #2
   239b0:	blt	239e0 <main@@Base+0xdc98>
   239b4:	ldrb	r0, [r1]
   239b8:	cmp	r0, #32
   239bc:	bls	239d0 <main@@Base+0xdc88>
   239c0:	mov	r2, r1
   239c4:	cmp	r2, sl
   239c8:	bne	239f8 <main@@Base+0xdcb0>
   239cc:	b	23b90 <main@@Base+0xde48>
   239d0:	bne	239e0 <main@@Base+0xdc98>
   239d4:	ldrb	r0, [r2, #2]!
   239d8:	cmp	r0, #32
   239dc:	bhi	239f0 <main@@Base+0xdca8>
   239e0:	mov	r0, r8
   239e4:	mov	r2, sl
   239e8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   239ec:	mov	r2, r0
   239f0:	cmp	r2, sl
   239f4:	beq	23b90 <main@@Base+0xde48>
   239f8:	ldrb	r0, [r2]
   239fc:	cmp	r0, #125	; 0x7d
   23a00:	bne	22eec <main@@Base+0xd1a4>
   23a04:	add	r1, r2, #1
   23a08:	sub	r0, sl, r1
   23a0c:	cmp	r0, #2
   23a10:	blt	23c6c <main@@Base+0xdf24>
   23a14:	b	23c10 <main@@Base+0xdec8>
   23a18:	bne	23a28 <main@@Base+0xdce0>
   23a1c:	ldrb	r0, [r4, #2]!
   23a20:	cmp	r0, #32
   23a24:	bhi	23a38 <main@@Base+0xdcf0>
   23a28:	mov	r0, r8
   23a2c:	mov	r2, sl
   23a30:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   23a34:	mov	r4, r0
   23a38:	cmp	r4, sl
   23a3c:	mov	r3, sl
   23a40:	beq	23a84 <main@@Base+0xdd3c>
   23a44:	ldrb	r0, [r4]
   23a48:	cmp	r0, #125	; 0x7d
   23a4c:	bne	23a80 <main@@Base+0xdd38>
   23a50:	add	r1, r4, #1
   23a54:	sub	r0, sl, r1
   23a58:	cmp	r0, #2
   23a5c:	blt	23c6c <main@@Base+0xdf24>
   23a60:	ldrb	r0, [r1]
   23a64:	cmp	r0, #32
   23a68:	bhi	23c1c <main@@Base+0xded4>
   23a6c:	bne	23c6c <main@@Base+0xdf24>
   23a70:	ldrb	r0, [r4, #2]!
   23a74:	cmp	r0, #32
   23a78:	bhi	22ddc <main@@Base+0xd094>
   23a7c:	b	23c6c <main@@Base+0xdf24>
   23a80:	mov	r3, r4
   23a84:	cmp	r3, sl
   23a88:	mov	r1, sl
   23a8c:	beq	23abc <main@@Base+0xdd74>
   23a90:	ldrb	r0, [r3]
   23a94:	cmp	r0, #34	; 0x22
   23a98:	bne	23aa4 <main@@Base+0xdd5c>
   23a9c:	add	r1, r3, #1
   23aa0:	b	23abc <main@@Base+0xdd74>
   23aa4:	mov	r1, r3
   23aa8:	mov	r0, r8
   23aac:	mov	r2, sl
   23ab0:	mov	r3, #5
   23ab4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   23ab8:	mov	r1, r0
   23abc:	mov	r0, r8
   23ac0:	mov	r2, sl
   23ac4:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   23ac8:	mov	r2, r0
   23acc:	sub	r0, sl, r0
   23ad0:	cmp	r0, #2
   23ad4:	blt	23b48 <main@@Base+0xde00>
   23ad8:	ldrb	r0, [r2]
   23adc:	cmp	r0, #32
   23ae0:	bls	23b34 <main@@Base+0xddec>
   23ae4:	mov	r3, r2
   23ae8:	cmp	r3, sl
   23aec:	beq	23b9c <main@@Base+0xde54>
   23af0:	ldrb	r0, [r3]
   23af4:	cmp	r0, #44	; 0x2c
   23af8:	bne	23bb0 <main@@Base+0xde68>
   23afc:	add	r1, r3, #1
   23b00:	sub	r0, sl, r1
   23b04:	cmp	r0, #2
   23b08:	blt	23b78 <main@@Base+0xde30>
   23b0c:	ldrb	r0, [r1]
   23b10:	cmp	r0, #32
   23b14:	bls	23b68 <main@@Base+0xde20>
   23b18:	mov	r3, r1
   23b1c:	cmp	r3, sl
   23b20:	beq	23b90 <main@@Base+0xde48>
   23b24:	ldrb	r0, [r3]
   23b28:	cmp	r0, #125	; 0x7d
   23b2c:	bne	23a84 <main@@Base+0xdd3c>
   23b30:	b	23bb8 <main@@Base+0xde70>
   23b34:	bne	23b48 <main@@Base+0xde00>
   23b38:	mov	r3, r2
   23b3c:	ldrb	r0, [r3, #1]!
   23b40:	cmp	r0, #32
   23b44:	bhi	23b5c <main@@Base+0xde14>
   23b48:	mov	r1, r2
   23b4c:	mov	r0, r8
   23b50:	mov	r2, sl
   23b54:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   23b58:	mov	r3, r0
   23b5c:	cmp	r3, sl
   23b60:	bne	23af0 <main@@Base+0xdda8>
   23b64:	b	23b9c <main@@Base+0xde54>
   23b68:	bne	23b78 <main@@Base+0xde30>
   23b6c:	ldrb	r0, [r3, #2]!
   23b70:	cmp	r0, #32
   23b74:	bhi	23b88 <main@@Base+0xde40>
   23b78:	mov	r0, r8
   23b7c:	mov	r2, sl
   23b80:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   23b84:	mov	r3, r0
   23b88:	cmp	r3, sl
   23b8c:	bne	23b24 <main@@Base+0xdddc>
   23b90:	mov	r0, r8
   23b94:	mov	r1, sl
   23b98:	b	23c4c <main@@Base+0xdf04>
   23b9c:	mov	r4, sl
   23ba0:	ldr	r0, [r8, #20]
   23ba4:	cmp	r0, #0
   23ba8:	bne	22de8 <main@@Base+0xd0a0>
   23bac:	b	23c2c <main@@Base+0xdee4>
   23bb0:	cmp	r0, #125	; 0x7d
   23bb4:	bne	23bec <main@@Base+0xdea4>
   23bb8:	add	r1, r3, #1
   23bbc:	sub	r0, sl, r1
   23bc0:	cmp	r0, #2
   23bc4:	blt	23c6c <main@@Base+0xdf24>
   23bc8:	ldrb	r0, [r1]
   23bcc:	cmp	r0, #32
   23bd0:	bhi	23c1c <main@@Base+0xded4>
   23bd4:	bne	23c6c <main@@Base+0xdf24>
   23bd8:	ldrb	r0, [r3, #2]!
   23bdc:	cmp	r0, #32
   23be0:	mov	r4, r3
   23be4:	bhi	22ddc <main@@Base+0xd094>
   23be8:	b	23c6c <main@@Base+0xdf24>
   23bec:	mov	r0, r8
   23bf0:	mov	r1, r3
   23bf4:	b	23c4c <main@@Base+0xdf04>
   23bf8:	cmp	r0, #125	; 0x7d
   23bfc:	bne	23c44 <main@@Base+0xdefc>
   23c00:	add	r1, r2, #1
   23c04:	sub	r0, sl, r1
   23c08:	cmp	r0, #2
   23c0c:	blt	23c6c <main@@Base+0xdf24>
   23c10:	ldrb	r0, [r1]
   23c14:	cmp	r0, #32
   23c18:	bls	23c58 <main@@Base+0xdf10>
   23c1c:	mov	r4, r1
   23c20:	ldr	r0, [r8, #20]
   23c24:	cmp	r0, #0
   23c28:	bne	22de8 <main@@Base+0xd0a0>
   23c2c:	ldr	r0, [r8]
   23c30:	bl	30680 <flatcc_builder_end_table@@Base>
   23c34:	cmp	r0, #0
   23c38:	str	r0, [r5]
   23c3c:	bne	22e00 <main@@Base+0xd0b8>
   23c40:	b	22de8 <main@@Base+0xd0a0>
   23c44:	mov	r0, r8
   23c48:	mov	r1, r2
   23c4c:	mov	r2, sl
   23c50:	mov	r3, #10
   23c54:	b	22dd4 <main@@Base+0xd08c>
   23c58:	bne	23c6c <main@@Base+0xdf24>
   23c5c:	ldrb	r0, [r2, #2]!
   23c60:	cmp	r0, #32
   23c64:	mov	r4, r2
   23c68:	bhi	22ddc <main@@Base+0xd094>
   23c6c:	mov	r0, r8
   23c70:	mov	r2, sl
   23c74:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   23c78:	b	22dd8 <main@@Base+0xd090>
   23c7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c80:	add	fp, sp, #28
   23c84:	sub	sp, sp, #20
   23c88:	mov	sl, r1
   23c8c:	sub	r1, r2, r1
   23c90:	cmp	r1, #8
   23c94:	movcs	r1, #8
   23c98:	and	r1, r1, #15
   23c9c:	sub	r5, r1, #1
   23ca0:	cmp	r5, #7
   23ca4:	bhi	23ea8 <main@@Base+0xe160>
   23ca8:	str	r2, [sp, #16]
   23cac:	str	r0, [sp, #12]
   23cb0:	add	r0, pc, #36	; 0x24
   23cb4:	mov	lr, r3
   23cb8:	mov	r8, #0
   23cbc:	mov	ip, #0
   23cc0:	mov	r2, #0
   23cc4:	mov	r1, #0
   23cc8:	mov	r3, #0
   23ccc:	mov	r7, #0
   23cd0:	mov	r6, #0
   23cd4:	mov	r4, #0
   23cd8:	ldr	pc, [r0, r5, lsl #2]
   23cdc:	andeq	r3, r2, r0, asr #26
   23ce0:	andeq	r3, r2, r8, lsr sp
   23ce4:	andeq	r3, r2, r0, lsr sp
   23ce8:	andeq	r3, r2, r8, lsr #26
   23cec:	andeq	r3, r2, ip, lsl sp
   23cf0:	andeq	r3, r2, r0, lsl sp
   23cf4:	andeq	r3, r2, r0, lsl #26
   23cf8:	strdeq	r3, [r2], -ip
   23cfc:	ldrb	ip, [sl, #7]
   23d00:	ldrb	r0, [sl, #6]
   23d04:	mov	r2, r8
   23d08:	orr	r0, ip, r0, lsl #8
   23d0c:	mov	r8, r0
   23d10:	ldrb	r0, [sl, #5]
   23d14:	mov	r1, r2
   23d18:	orr	r8, r8, r0, lsl #16
   23d1c:	ldrb	r0, [sl, #4]
   23d20:	mov	r3, r1
   23d24:	orr	r8, r8, r0, lsl #24
   23d28:	ldrb	r0, [sl, #3]
   23d2c:	orr	r7, r0, r3
   23d30:	ldrb	r0, [sl, #2]
   23d34:	orr	r6, r7, r0, lsl #8
   23d38:	ldrb	r0, [sl, #1]
   23d3c:	orr	r4, r6, r0, lsl #16
   23d40:	ldrb	r0, [sl]
   23d44:	ldr	r7, [fp, #12]
   23d48:	ldr	r5, [fp, #8]
   23d4c:	movw	r1, #28275	; 0x6e73
   23d50:	movt	r1, #19823	; 0x4d6f
   23d54:	orr	r9, r4, r0, lsl #24
   23d58:	movw	r0, #29184	; 0x7200
   23d5c:	movt	r0, #29797	; 0x7465
   23d60:	subs	r2, r8, r0
   23d64:	sbcs	r2, r9, r1
   23d68:	bcs	23db0 <main@@Base+0xe068>
   23d6c:	movw	r1, #29696	; 0x7400
   23d70:	bic	r0, r9, #255	; 0xff
   23d74:	movt	r1, #16748	; 0x416c
   23d78:	teq	r0, r1
   23d7c:	bne	23ea8 <main@@Base+0xe160>
   23d80:	ldr	r0, [sp, #12]
   23d84:	ldr	r2, [sp, #16]
   23d88:	mov	r1, sl
   23d8c:	mov	r3, #3
   23d90:	mov	r4, lr
   23d94:	str	r7, [sp]
   23d98:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   23d9c:	cmp	r0, sl
   23da0:	beq	23ea8 <main@@Base+0xe160>
   23da4:	mov	r1, #0
   23da8:	mov	r2, #4
   23dac:	b	23df0 <main@@Base+0xe0a8>
   23db0:	add	r2, r0, #50	; 0x32
   23db4:	eor	r1, r9, r1
   23db8:	eor	r2, r8, r2
   23dbc:	orrs	r2, r2, r1
   23dc0:	bne	23e00 <main@@Base+0xe0b8>
   23dc4:	ldr	r0, [sp, #12]
   23dc8:	ldr	r2, [sp, #16]
   23dcc:	mov	r1, sl
   23dd0:	mov	r3, #8
   23dd4:	mov	r4, lr
   23dd8:	str	r7, [sp]
   23ddc:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   23de0:	cmp	r0, sl
   23de4:	beq	23ea8 <main@@Base+0xe160>
   23de8:	mov	r1, #0
   23dec:	mov	r2, #3
   23df0:	str	r2, [r5]
   23df4:	str	r1, [r5, #4]
   23df8:	str	r1, [r4]
   23dfc:	b	23ea4 <main@@Base+0xe15c>
   23e00:	ldr	r5, [sp, #16]
   23e04:	ldr	r6, [sp, #12]
   23e08:	bic	r2, r8, #255	; 0xff
   23e0c:	eor	r0, r2, r0
   23e10:	orrs	r0, r0, r1
   23e14:	bne	23e58 <main@@Base+0xe110>
   23e18:	mov	r0, r6
   23e1c:	mov	r1, sl
   23e20:	mov	r2, r5
   23e24:	mov	r3, #7
   23e28:	str	r7, [sp]
   23e2c:	mov	r4, lr
   23e30:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   23e34:	mov	lr, r4
   23e38:	cmp	r0, sl
   23e3c:	beq	23e58 <main@@Base+0xe110>
   23e40:	ldr	r3, [fp, #8]
   23e44:	mov	r2, #1
   23e48:	mov	r1, #0
   23e4c:	str	r2, [r3]
   23e50:	str	r1, [r3, #4]
   23e54:	b	23ea0 <main@@Base+0xe158>
   23e58:	movw	r0, #20037	; 0x4e45
   23e5c:	movt	r0, #20047	; 0x4e4f
   23e60:	teq	r9, r0
   23e64:	bne	23eb4 <main@@Base+0xe16c>
   23e68:	mov	r0, r6
   23e6c:	mov	r1, sl
   23e70:	mov	r2, r5
   23e74:	mov	r3, #4
   23e78:	str	r7, [sp]
   23e7c:	mov	r4, lr
   23e80:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   23e84:	mov	lr, r4
   23e88:	cmp	r0, sl
   23e8c:	beq	23eb4 <main@@Base+0xe16c>
   23e90:	ldr	r2, [fp, #8]
   23e94:	mov	r1, #0
   23e98:	str	r1, [r2]
   23e9c:	str	r1, [r2, #4]
   23ea0:	str	r1, [lr]
   23ea4:	mov	sl, r0
   23ea8:	mov	r0, sl
   23eac:	sub	sp, fp, #28
   23eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23eb4:	movw	r0, #28016	; 0x6d70
   23eb8:	movw	r1, #29556	; 0x7374
   23ebc:	movt	r0, #21353	; 0x5369
   23ec0:	movt	r1, #21605	; 0x5465
   23ec4:	eor	r0, r8, r0
   23ec8:	eor	r1, r9, r1
   23ecc:	orrs	r0, r0, r1
   23ed0:	bne	23ea8 <main@@Base+0xe160>
   23ed4:	str	lr, [sp, #8]
   23ed8:	add	lr, sl, #8
   23edc:	sub	r0, r5, lr
   23ee0:	cmp	r0, #8
   23ee4:	movcs	r0, #8
   23ee8:	and	r0, r0, #15
   23eec:	sub	r5, r0, #1
   23ef0:	cmp	r5, #7
   23ef4:	bhi	23ea8 <main@@Base+0xe160>
   23ef8:	add	r1, pc, #32
   23efc:	mov	r9, #0
   23f00:	mov	ip, #0
   23f04:	mov	r8, #0
   23f08:	mov	r2, #0
   23f0c:	mov	r3, #0
   23f10:	mov	r0, #0
   23f14:	mov	r4, #0
   23f18:	mov	r6, #0
   23f1c:	ldr	pc, [r1, r5, lsl #2]
   23f20:	andeq	r3, r2, r4, lsl #31
   23f24:	andeq	r3, r2, ip, ror pc
   23f28:	andeq	r3, r2, r4, ror pc
   23f2c:	andeq	r3, r2, ip, ror #30
   23f30:	andeq	r3, r2, r0, ror #30
   23f34:	andeq	r3, r2, r4, asr pc
   23f38:	andeq	r3, r2, r4, asr #30
   23f3c:	andeq	r3, r2, r0, asr #30
   23f40:	ldrb	ip, [sl, #15]
   23f44:	ldrb	r0, [sl, #14]
   23f48:	mov	r8, r9
   23f4c:	orr	r0, ip, r0, lsl #8
   23f50:	mov	r9, r0
   23f54:	ldrb	r0, [sl, #13]
   23f58:	mov	r2, r8
   23f5c:	orr	r9, r9, r0, lsl #16
   23f60:	ldrb	r0, [sl, #12]
   23f64:	mov	r3, r2
   23f68:	orr	r9, r9, r0, lsl #24
   23f6c:	ldrb	r0, [sl, #11]
   23f70:	orr	r0, r0, r3
   23f74:	ldrb	r1, [sl, #10]
   23f78:	orr	r4, r0, r1, lsl #8
   23f7c:	ldrb	r0, [sl, #9]
   23f80:	orr	r6, r4, r0, lsl #16
   23f84:	ldrb	r1, [lr]
   23f88:	movw	r0, #25943	; 0x6557
   23f8c:	movw	r2, #21601	; 0x5461
   23f90:	movt	r0, #25196	; 0x626c
   23f94:	movt	r2, #27749	; 0x6c65
   23f98:	eor	r0, r9, r0
   23f9c:	orr	r1, r6, r1, lsl #24
   23fa0:	eor	r1, r1, r2
   23fa4:	orrs	r0, r0, r1
   23fa8:	bne	23ea8 <main@@Base+0xe160>
   23fac:	ldr	r0, [sp, #16]
   23fb0:	add	r9, sl, #16
   23fb4:	sub	r0, r0, r9
   23fb8:	cmp	r0, #8
   23fbc:	movcs	r0, #8
   23fc0:	and	r0, r0, #15
   23fc4:	sub	r3, r0, #1
   23fc8:	cmp	r3, #7
   23fcc:	bhi	23ea8 <main@@Base+0xe160>
   23fd0:	add	r1, pc, #28
   23fd4:	mov	r0, #0
   23fd8:	mov	ip, #0
   23fdc:	mov	lr, #0
   23fe0:	mov	r2, #0
   23fe4:	mov	r5, #0
   23fe8:	mov	r6, #0
   23fec:	mov	r4, #0
   23ff0:	ldr	pc, [r1, r3, lsl #2]
   23ff4:	andeq	r4, r2, r0, asr r0
   23ff8:	andeq	r4, r2, r8, asr #32
   23ffc:	andeq	r4, r2, r0, asr #32
   24000:	andeq	r4, r2, r8, lsr r0
   24004:	andeq	r4, r2, ip, lsr #32
   24008:	andeq	r4, r2, ip, lsl r0
   2400c:	andeq	r4, r2, r4, lsl r0
   24010:	andeq	r4, r2, r4, lsl r0
   24014:	ldrb	r1, [sl, #22]
   24018:	lsl	ip, r1, #8
   2401c:	ldrb	r1, [sl, #21]
   24020:	mov	lr, r0
   24024:	orr	r1, ip, r1, lsl #16
   24028:	mov	r0, r1
   2402c:	ldrb	r1, [sl, #20]
   24030:	mov	r2, lr
   24034:	orr	r0, r0, r1, lsl #24
   24038:	ldrb	r1, [sl, #19]
   2403c:	orr	r5, r1, r2
   24040:	ldrb	r1, [sl, #18]
   24044:	orr	r6, r5, r1, lsl #8
   24048:	ldrb	r1, [sl, #17]
   2404c:	orr	r4, r6, r1, lsl #16
   24050:	movw	r1, #27904	; 0x6d00
   24054:	movw	r2, #26693	; 0x6845
   24058:	movt	r1, #28277	; 0x6e75
   2405c:	movt	r2, #26996	; 0x6974
   24060:	eor	r0, r0, r1
   24064:	ldrb	r1, [r9]
   24068:	orr	r1, r4, r1, lsl #24
   2406c:	eor	r1, r1, r2
   24070:	orrs	r0, r0, r1
   24074:	bne	23ea8 <main@@Base+0xe160>
   24078:	ldr	r0, [sp, #12]
   2407c:	ldr	r2, [sp, #16]
   24080:	mov	r1, r9
   24084:	mov	r3, #7
   24088:	str	r7, [sp]
   2408c:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   24090:	ldr	r3, [fp, #8]
   24094:	cmp	r0, r9
   24098:	beq	23ea8 <main@@Base+0xe160>
   2409c:	mov	r2, #2
   240a0:	mov	r1, #0
   240a4:	str	r2, [r3]
   240a8:	str	r1, [r3, #4]
   240ac:	ldr	r2, [sp, #8]
   240b0:	str	r1, [r2]
   240b4:	b	23ea4 <main@@Base+0xe15c>
   240b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   240bc:	add	fp, sp, #28
   240c0:	sub	sp, sp, #44	; 0x2c
   240c4:	mov	r7, r2
   240c8:	ldr	r2, [fp, #8]
   240cc:	mov	r5, r0
   240d0:	mov	r0, #0
   240d4:	mov	sl, r3
   240d8:	cmp	r1, r7
   240dc:	strb	r0, [r2]
   240e0:	beq	240f4 <main@@Base+0xe3ac>
   240e4:	ldrb	r0, [r1]
   240e8:	cmp	r0, #34	; 0x22
   240ec:	bne	2411c <main@@Base+0xe3d4>
   240f0:	add	r1, r1, #1
   240f4:	sub	r0, r7, r1
   240f8:	cmp	r0, #2
   240fc:	blt	24154 <main@@Base+0xe40c>
   24100:	ldrb	r0, [r1]
   24104:	cmp	r0, #32
   24108:	bls	24140 <main@@Base+0xe3f8>
   2410c:	mov	r6, r1
   24110:	cmp	r6, r7
   24114:	bne	2416c <main@@Base+0xe424>
   24118:	b	24258 <main@@Base+0xe510>
   2411c:	mov	r0, r5
   24120:	mov	r2, r7
   24124:	mov	r3, #5
   24128:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2412c:	mov	r1, r0
   24130:	sub	r0, r7, r1
   24134:	cmp	r0, #2
   24138:	bge	24100 <main@@Base+0xe3b8>
   2413c:	b	24154 <main@@Base+0xe40c>
   24140:	bne	24154 <main@@Base+0xe40c>
   24144:	mov	r6, r1
   24148:	ldrb	r0, [r6, #1]!
   2414c:	cmp	r0, #32
   24150:	bhi	24164 <main@@Base+0xe41c>
   24154:	mov	r0, r5
   24158:	mov	r2, r7
   2415c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   24160:	mov	r6, r0
   24164:	cmp	r6, r7
   24168:	beq	24258 <main@@Base+0xe510>
   2416c:	add	r0, sl, #4
   24170:	mov	r1, #0
   24174:	add	r8, sp, #32
   24178:	add	r9, sp, #28
   2417c:	str	sl, [sp, #16]
   24180:	str	r1, [sp, #20]
   24184:	str	r0, [sp, #12]
   24188:	ldr	r4, [sl]
   2418c:	mov	sl, r0
   24190:	add	r0, sp, #24
   24194:	mov	r1, r6
   24198:	mov	r2, r7
   2419c:	mov	r3, r9
   241a0:	str	r8, [sp]
   241a4:	str	r0, [sp, #4]
   241a8:	mov	r0, r5
   241ac:	blx	r4
   241b0:	cmp	r0, r7
   241b4:	beq	24268 <main@@Base+0xe520>
   241b8:	mov	r4, r0
   241bc:	cmp	r0, r6
   241c0:	bne	241d4 <main@@Base+0xe48c>
   241c4:	ldr	r4, [sl], #4
   241c8:	cmp	r4, #0
   241cc:	bne	24190 <main@@Base+0xe448>
   241d0:	b	24278 <main@@Base+0xe530>
   241d4:	ldr	r0, [sp, #28]
   241d8:	cmp	r0, #0
   241dc:	beq	24204 <main@@Base+0xe4bc>
   241e0:	mov	r0, r5
   241e4:	mov	r1, r4
   241e8:	mov	r2, r7
   241ec:	mov	r3, #8
   241f0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   241f4:	ldr	sl, [sp, #16]
   241f8:	cmp	r0, r7
   241fc:	bne	24228 <main@@Base+0xe4e0>
   24200:	b	2429c <main@@Base+0xe554>
   24204:	ldr	r0, [sp, #32]
   24208:	ldr	r1, [sp, #36]	; 0x24
   2420c:	orrs	r0, r0, r1
   24210:	movwne	r0, #1
   24214:	str	r0, [sp, #20]
   24218:	mov	r0, r4
   2421c:	ldr	sl, [sp, #16]
   24220:	cmp	r0, r7
   24224:	beq	2429c <main@@Base+0xe554>
   24228:	ldr	r0, [fp, #8]
   2422c:	ldr	r2, [sp, #20]
   24230:	mov	r6, r4
   24234:	mov	r1, r0
   24238:	ldrb	r0, [r0]
   2423c:	add	r0, r0, r2
   24240:	strb	r0, [r1]
   24244:	ldr	r0, [sp, #24]
   24248:	cmp	r0, #0
   2424c:	ldr	r0, [sp, #12]
   24250:	bne	24188 <main@@Base+0xe440>
   24254:	b	2425c <main@@Base+0xe514>
   24258:	mov	r4, r7
   2425c:	mov	r0, r4
   24260:	sub	sp, fp, #28
   24264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24268:	mov	r4, r7
   2426c:	mov	r0, r4
   24270:	sub	sp, fp, #28
   24274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24278:	mov	r0, r5
   2427c:	mov	r1, r6
   24280:	mov	r2, r7
   24284:	mov	r3, #23
   24288:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2428c:	mov	r4, r0
   24290:	mov	r0, r4
   24294:	sub	sp, fp, #28
   24298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2429c:	mov	r4, r7
   242a0:	mov	r0, r4
   242a4:	sub	sp, fp, #28
   242a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   242ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   242b0:	add	fp, sp, #28
   242b4:	sub	sp, sp, #36	; 0x24
   242b8:	mov	r6, r2
   242bc:	ldr	r2, [fp, #8]
   242c0:	mov	r5, r0
   242c4:	mov	r0, #0
   242c8:	mov	r8, r3
   242cc:	cmp	r1, r6
   242d0:	str	r0, [r2]
   242d4:	beq	242e8 <main@@Base+0xe5a0>
   242d8:	ldrb	r0, [r1]
   242dc:	cmp	r0, #34	; 0x22
   242e0:	bne	24310 <main@@Base+0xe5c8>
   242e4:	add	r1, r1, #1
   242e8:	sub	r0, r6, r1
   242ec:	cmp	r0, #2
   242f0:	blt	24348 <main@@Base+0xe600>
   242f4:	ldrb	r0, [r1]
   242f8:	cmp	r0, #32
   242fc:	bls	24334 <main@@Base+0xe5ec>
   24300:	mov	r7, r1
   24304:	cmp	r7, r6
   24308:	bne	24360 <main@@Base+0xe618>
   2430c:	b	2440c <main@@Base+0xe6c4>
   24310:	mov	r0, r5
   24314:	mov	r2, r6
   24318:	mov	r3, #5
   2431c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   24320:	mov	r1, r0
   24324:	sub	r0, r6, r1
   24328:	cmp	r0, #2
   2432c:	bge	242f4 <main@@Base+0xe5ac>
   24330:	b	24348 <main@@Base+0xe600>
   24334:	bne	24348 <main@@Base+0xe600>
   24338:	mov	r7, r1
   2433c:	ldrb	r0, [r7, #1]!
   24340:	cmp	r0, #32
   24344:	bhi	24358 <main@@Base+0xe610>
   24348:	mov	r0, r5
   2434c:	mov	r2, r6
   24350:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   24354:	mov	r7, r0
   24358:	cmp	r7, r6
   2435c:	beq	2440c <main@@Base+0xe6c4>
   24360:	add	r0, r8, #4
   24364:	add	sl, sp, #24
   24368:	add	r9, sp, #20
   2436c:	str	r8, [sp, #12]
   24370:	str	r0, [sp, #8]
   24374:	ldr	r4, [r8]
   24378:	mov	r8, r0
   2437c:	add	r0, sp, #16
   24380:	mov	r1, r7
   24384:	mov	r2, r6
   24388:	mov	r3, r9
   2438c:	str	sl, [sp]
   24390:	str	r0, [sp, #4]
   24394:	mov	r0, r5
   24398:	blx	r4
   2439c:	cmp	r0, r6
   243a0:	beq	2441c <main@@Base+0xe6d4>
   243a4:	mov	r4, r0
   243a8:	cmp	r0, r7
   243ac:	bne	243c0 <main@@Base+0xe678>
   243b0:	ldr	r4, [r8], #4
   243b4:	cmp	r4, #0
   243b8:	bne	2437c <main@@Base+0xe634>
   243bc:	b	2442c <main@@Base+0xe6e4>
   243c0:	ldr	r0, [sp, #24]
   243c4:	ldr	r1, [sp, #28]
   243c8:	bl	46080 <flatcc_json_printer_clear@@Base+0x71c>
   243cc:	ldr	r2, [fp, #8]
   243d0:	ldr	r1, [sp, #20]
   243d4:	vmov	s2, r0
   243d8:	ldr	r8, [sp, #12]
   243dc:	mov	r7, r4
   243e0:	vneg.f32	s4, s2
   243e4:	vldr	s0, [r2]
   243e8:	cmp	r1, #0
   243ec:	vseleq.f32	s2, s2, s4
   243f0:	vadd.f32	s0, s0, s2
   243f4:	vstr	s0, [r2]
   243f8:	ldr	r0, [sp, #16]
   243fc:	cmp	r0, #0
   24400:	ldr	r0, [sp, #8]
   24404:	bne	24374 <main@@Base+0xe62c>
   24408:	b	24410 <main@@Base+0xe6c8>
   2440c:	mov	r4, r6
   24410:	mov	r0, r4
   24414:	sub	sp, fp, #28
   24418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2441c:	mov	r4, r6
   24420:	mov	r0, r4
   24424:	sub	sp, fp, #28
   24428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2442c:	mov	r0, r5
   24430:	mov	r1, r7
   24434:	mov	r2, r6
   24438:	mov	r3, #23
   2443c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   24440:	mov	r4, r0
   24444:	mov	r0, r4
   24448:	sub	sp, fp, #28
   2444c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24454:	add	fp, sp, #28
   24458:	sub	sp, sp, #44	; 0x2c
   2445c:	mov	r6, r2
   24460:	ldr	r2, [fp, #8]
   24464:	mov	r5, r0
   24468:	mov	r0, #0
   2446c:	mov	sl, r3
   24470:	cmp	r1, r6
   24474:	str	r0, [r2]
   24478:	beq	2448c <main@@Base+0xe744>
   2447c:	ldrb	r0, [r1]
   24480:	cmp	r0, #34	; 0x22
   24484:	bne	244b4 <main@@Base+0xe76c>
   24488:	add	r1, r1, #1
   2448c:	sub	r0, r6, r1
   24490:	cmp	r0, #2
   24494:	blt	244ec <main@@Base+0xe7a4>
   24498:	ldrb	r0, [r1]
   2449c:	cmp	r0, #32
   244a0:	bls	244d8 <main@@Base+0xe790>
   244a4:	mov	r7, r1
   244a8:	cmp	r7, r6
   244ac:	bne	24504 <main@@Base+0xe7bc>
   244b0:	b	24628 <main@@Base+0xe8e0>
   244b4:	mov	r0, r5
   244b8:	mov	r2, r6
   244bc:	mov	r3, #5
   244c0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   244c4:	mov	r1, r0
   244c8:	sub	r0, r6, r1
   244cc:	cmp	r0, #2
   244d0:	bge	24498 <main@@Base+0xe750>
   244d4:	b	244ec <main@@Base+0xe7a4>
   244d8:	bne	244ec <main@@Base+0xe7a4>
   244dc:	mov	r7, r1
   244e0:	ldrb	r0, [r7, #1]!
   244e4:	cmp	r0, #32
   244e8:	bhi	244fc <main@@Base+0xe7b4>
   244ec:	mov	r0, r5
   244f0:	mov	r2, r6
   244f4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   244f8:	mov	r7, r0
   244fc:	cmp	r7, r6
   24500:	beq	24628 <main@@Base+0xe8e0>
   24504:	add	r0, sl, #4
   24508:	mov	r2, #0
   2450c:	add	r8, sp, #32
   24510:	add	r9, sp, #28
   24514:	str	sl, [sp, #16]
   24518:	str	r0, [sp, #12]
   2451c:	ldr	r4, [sl]
   24520:	mov	sl, r0
   24524:	str	r2, [sp, #20]
   24528:	add	r0, sp, #24
   2452c:	mov	r1, r7
   24530:	mov	r2, r6
   24534:	mov	r3, r9
   24538:	str	r8, [sp]
   2453c:	str	r0, [sp, #4]
   24540:	mov	r0, r5
   24544:	blx	r4
   24548:	cmp	r0, r6
   2454c:	beq	24638 <main@@Base+0xe8f0>
   24550:	mov	r4, r0
   24554:	cmp	r0, r7
   24558:	bne	2456c <main@@Base+0xe824>
   2455c:	ldr	r4, [sl], #4
   24560:	cmp	r4, #0
   24564:	bne	24528 <main@@Base+0xe7e0>
   24568:	b	24648 <main@@Base+0xe900>
   2456c:	ldr	r2, [sp, #28]
   24570:	ldr	r0, [sp, #32]
   24574:	ldr	r1, [sp, #36]	; 0x24
   24578:	cmp	r2, #0
   2457c:	beq	245a4 <main@@Base+0xe85c>
   24580:	ldr	sl, [sp, #16]
   24584:	subs	r2, r0, #-2147483647	; 0x80000001
   24588:	sbcs	r1, r1, #0
   2458c:	bcc	245d8 <main@@Base+0xe890>
   24590:	mov	r0, r5
   24594:	mov	r1, r4
   24598:	mov	r2, r6
   2459c:	mov	r3, #8
   245a0:	b	245c4 <main@@Base+0xe87c>
   245a4:	ldr	sl, [sp, #16]
   245a8:	subs	r2, r0, #-2147483648	; 0x80000000
   245ac:	sbcs	r1, r1, #0
   245b0:	bcc	245ec <main@@Base+0xe8a4>
   245b4:	mov	r0, r5
   245b8:	mov	r1, r4
   245bc:	mov	r2, r6
   245c0:	mov	r3, #7
   245c4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   245c8:	ldr	r2, [sp, #20]
   245cc:	cmp	r0, r6
   245d0:	bne	245fc <main@@Base+0xe8b4>
   245d4:	b	2466c <main@@Base+0xe924>
   245d8:	rsb	r2, r0, #0
   245dc:	mov	r0, r4
   245e0:	cmp	r0, r6
   245e4:	bne	245fc <main@@Base+0xe8b4>
   245e8:	b	2466c <main@@Base+0xe924>
   245ec:	mov	r2, r0
   245f0:	mov	r0, r4
   245f4:	cmp	r0, r6
   245f8:	beq	2466c <main@@Base+0xe924>
   245fc:	ldr	r0, [fp, #8]
   24600:	mov	r7, r4
   24604:	mov	r1, r0
   24608:	ldr	r0, [r0]
   2460c:	add	r0, r0, r2
   24610:	str	r0, [r1]
   24614:	ldr	r0, [sp, #24]
   24618:	cmp	r0, #0
   2461c:	ldr	r0, [sp, #12]
   24620:	bne	2451c <main@@Base+0xe7d4>
   24624:	b	2462c <main@@Base+0xe8e4>
   24628:	mov	r4, r6
   2462c:	mov	r0, r4
   24630:	sub	sp, fp, #28
   24634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24638:	mov	r4, r6
   2463c:	mov	r0, r4
   24640:	sub	sp, fp, #28
   24644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24648:	mov	r0, r5
   2464c:	mov	r1, r7
   24650:	mov	r2, r6
   24654:	mov	r3, #23
   24658:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2465c:	mov	r4, r0
   24660:	mov	r0, r4
   24664:	sub	sp, fp, #28
   24668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2466c:	mov	r4, r6
   24670:	mov	r0, r4
   24674:	sub	sp, fp, #28
   24678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2467c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24680:	add	fp, sp, #28
   24684:	sub	sp, sp, #44	; 0x2c
   24688:	mov	r6, r2
   2468c:	ldr	r2, [fp, #8]
   24690:	mov	r5, r0
   24694:	mov	r0, #0
   24698:	mov	sl, r3
   2469c:	cmp	r1, r6
   246a0:	str	r0, [r2]
   246a4:	str	r0, [r2, #4]
   246a8:	beq	246bc <main@@Base+0xe974>
   246ac:	ldrb	r0, [r1]
   246b0:	cmp	r0, #34	; 0x22
   246b4:	bne	246e4 <main@@Base+0xe99c>
   246b8:	add	r1, r1, #1
   246bc:	sub	r0, r6, r1
   246c0:	cmp	r0, #2
   246c4:	blt	2471c <main@@Base+0xe9d4>
   246c8:	ldrb	r0, [r1]
   246cc:	cmp	r0, #32
   246d0:	bls	24708 <main@@Base+0xe9c0>
   246d4:	mov	r7, r1
   246d8:	cmp	r7, r6
   246dc:	bne	24734 <main@@Base+0xe9ec>
   246e0:	b	24854 <main@@Base+0xeb0c>
   246e4:	mov	r0, r5
   246e8:	mov	r2, r6
   246ec:	mov	r3, #5
   246f0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   246f4:	mov	r1, r0
   246f8:	sub	r0, r6, r1
   246fc:	cmp	r0, #2
   24700:	bge	246c8 <main@@Base+0xe980>
   24704:	b	2471c <main@@Base+0xe9d4>
   24708:	bne	2471c <main@@Base+0xe9d4>
   2470c:	mov	r7, r1
   24710:	ldrb	r0, [r7, #1]!
   24714:	cmp	r0, #32
   24718:	bhi	2472c <main@@Base+0xe9e4>
   2471c:	mov	r0, r5
   24720:	mov	r2, r6
   24724:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   24728:	mov	r7, r0
   2472c:	cmp	r7, r6
   24730:	beq	24854 <main@@Base+0xeb0c>
   24734:	add	r0, sl, #4
   24738:	mov	r1, #0
   2473c:	add	r8, sp, #32
   24740:	add	r9, sp, #28
   24744:	mov	r2, #0
   24748:	str	sl, [sp, #12]
   2474c:	str	r0, [sp, #8]
   24750:	ldr	r4, [sl]
   24754:	mov	sl, r0
   24758:	str	r2, [sp, #16]
   2475c:	str	r1, [sp, #20]
   24760:	add	r0, sp, #24
   24764:	mov	r1, r7
   24768:	mov	r2, r6
   2476c:	mov	r3, r9
   24770:	str	r8, [sp]
   24774:	str	r0, [sp, #4]
   24778:	mov	r0, r5
   2477c:	blx	r4
   24780:	cmp	r0, r6
   24784:	beq	24864 <main@@Base+0xeb1c>
   24788:	mov	r4, r0
   2478c:	cmp	r0, r7
   24790:	bne	247a4 <main@@Base+0xea5c>
   24794:	ldr	r4, [sl], #4
   24798:	cmp	r4, #0
   2479c:	bne	24760 <main@@Base+0xea18>
   247a0:	b	24874 <main@@Base+0xeb2c>
   247a4:	add	r2, sp, #28
   247a8:	ldm	r2, {r0, r1, r2}
   247ac:	cmp	r0, #0
   247b0:	beq	247d8 <main@@Base+0xea90>
   247b4:	ldr	sl, [sp, #12]
   247b8:	subs	r0, r1, #1
   247bc:	sbcs	r0, r2, #-2147483648	; 0x80000000
   247c0:	bcc	24810 <main@@Base+0xeac8>
   247c4:	mov	r0, r5
   247c8:	mov	r1, r4
   247cc:	mov	r2, r6
   247d0:	mov	r3, #8
   247d4:	b	247f8 <main@@Base+0xeab0>
   247d8:	ldr	sl, [sp, #12]
   247dc:	cmn	r2, #1
   247e0:	mov	r0, r4
   247e4:	bgt	24804 <main@@Base+0xeabc>
   247e8:	mov	r0, r5
   247ec:	mov	r1, r4
   247f0:	mov	r2, r6
   247f4:	mov	r3, #7
   247f8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   247fc:	ldr	r1, [sp, #20]
   24800:	ldr	r2, [sp, #16]
   24804:	cmp	r0, r6
   24808:	bne	24824 <main@@Base+0xeadc>
   2480c:	b	24898 <main@@Base+0xeb50>
   24810:	rsbs	r1, r1, #0
   24814:	mov	r0, r4
   24818:	rsc	r2, r2, #0
   2481c:	cmp	r0, r6
   24820:	beq	24898 <main@@Base+0xeb50>
   24824:	ldr	r0, [fp, #8]
   24828:	mov	r7, r0
   2482c:	ldm	r0, {r0, r3}
   24830:	adds	r0, r0, r1
   24834:	adc	r3, r3, r2
   24838:	stm	r7, {r0, r3}
   2483c:	mov	r7, r4
   24840:	ldr	r0, [sp, #24]
   24844:	cmp	r0, #0
   24848:	ldr	r0, [sp, #8]
   2484c:	bne	24750 <main@@Base+0xea08>
   24850:	b	24858 <main@@Base+0xeb10>
   24854:	mov	r4, r6
   24858:	mov	r0, r4
   2485c:	sub	sp, fp, #28
   24860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24864:	mov	r4, r6
   24868:	mov	r0, r4
   2486c:	sub	sp, fp, #28
   24870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24874:	mov	r0, r5
   24878:	mov	r1, r7
   2487c:	mov	r2, r6
   24880:	mov	r3, #23
   24884:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   24888:	mov	r4, r0
   2488c:	mov	r0, r4
   24890:	sub	sp, fp, #28
   24894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24898:	mov	r4, r6
   2489c:	mov	r0, r4
   248a0:	sub	sp, fp, #28
   248a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   248a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   248ac:	add	fp, sp, #28
   248b0:	sub	sp, sp, #44	; 0x2c
   248b4:	mov	r6, r2
   248b8:	ldr	r2, [fp, #8]
   248bc:	mov	r5, r0
   248c0:	mov	r0, #0
   248c4:	mov	sl, r3
   248c8:	cmp	r1, r6
   248cc:	str	r0, [r2]
   248d0:	beq	248e4 <main@@Base+0xeb9c>
   248d4:	ldrb	r0, [r1]
   248d8:	cmp	r0, #34	; 0x22
   248dc:	bne	2490c <main@@Base+0xebc4>
   248e0:	add	r1, r1, #1
   248e4:	sub	r0, r6, r1
   248e8:	cmp	r0, #2
   248ec:	blt	24944 <main@@Base+0xebfc>
   248f0:	ldrb	r0, [r1]
   248f4:	cmp	r0, #32
   248f8:	bls	24930 <main@@Base+0xebe8>
   248fc:	mov	r7, r1
   24900:	cmp	r7, r6
   24904:	bne	2495c <main@@Base+0xec14>
   24908:	b	24a68 <main@@Base+0xed20>
   2490c:	mov	r0, r5
   24910:	mov	r2, r6
   24914:	mov	r3, #5
   24918:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2491c:	mov	r1, r0
   24920:	sub	r0, r6, r1
   24924:	cmp	r0, #2
   24928:	bge	248f0 <main@@Base+0xeba8>
   2492c:	b	24944 <main@@Base+0xebfc>
   24930:	bne	24944 <main@@Base+0xebfc>
   24934:	mov	r7, r1
   24938:	ldrb	r0, [r7, #1]!
   2493c:	cmp	r0, #32
   24940:	bhi	24954 <main@@Base+0xec0c>
   24944:	mov	r0, r5
   24948:	mov	r2, r6
   2494c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   24950:	mov	r7, r0
   24954:	cmp	r7, r6
   24958:	beq	24a68 <main@@Base+0xed20>
   2495c:	add	r0, sl, #4
   24960:	mov	r1, #0
   24964:	add	r8, sp, #32
   24968:	add	r9, sp, #28
   2496c:	str	sl, [sp, #16]
   24970:	str	r1, [sp, #20]
   24974:	str	r0, [sp, #12]
   24978:	ldr	r4, [sl]
   2497c:	mov	sl, r0
   24980:	add	r0, sp, #24
   24984:	mov	r1, r7
   24988:	mov	r2, r6
   2498c:	mov	r3, r9
   24990:	str	r8, [sp]
   24994:	str	r0, [sp, #4]
   24998:	mov	r0, r5
   2499c:	blx	r4
   249a0:	cmp	r0, r6
   249a4:	beq	24a78 <main@@Base+0xed30>
   249a8:	mov	r4, r0
   249ac:	cmp	r0, r7
   249b0:	bne	249c4 <main@@Base+0xec7c>
   249b4:	ldr	r4, [sl], #4
   249b8:	cmp	r4, #0
   249bc:	bne	24980 <main@@Base+0xec38>
   249c0:	b	24a88 <main@@Base+0xed40>
   249c4:	ldr	r0, [sp, #28]
   249c8:	cmp	r0, #0
   249cc:	beq	249f4 <main@@Base+0xecac>
   249d0:	mov	r0, r5
   249d4:	mov	r1, r4
   249d8:	mov	r2, r6
   249dc:	mov	r3, #8
   249e0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   249e4:	ldr	sl, [sp, #16]
   249e8:	cmp	r0, r6
   249ec:	bne	24a38 <main@@Base+0xecf0>
   249f0:	b	24aac <main@@Base+0xed64>
   249f4:	ldr	r0, [sp, #36]	; 0x24
   249f8:	ldr	sl, [sp, #16]
   249fc:	cmp	r0, #0
   24a00:	beq	24a24 <main@@Base+0xecdc>
   24a04:	mov	r0, r5
   24a08:	mov	r1, r4
   24a0c:	mov	r2, r6
   24a10:	mov	r3, #7
   24a14:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   24a18:	cmp	r0, r6
   24a1c:	bne	24a38 <main@@Base+0xecf0>
   24a20:	b	24aac <main@@Base+0xed64>
   24a24:	ldr	r0, [sp, #32]
   24a28:	str	r0, [sp, #20]
   24a2c:	mov	r0, r4
   24a30:	cmp	r0, r6
   24a34:	beq	24aac <main@@Base+0xed64>
   24a38:	ldr	r0, [fp, #8]
   24a3c:	ldr	r2, [sp, #20]
   24a40:	mov	r7, r4
   24a44:	mov	r1, r0
   24a48:	ldr	r0, [r0]
   24a4c:	add	r0, r0, r2
   24a50:	str	r0, [r1]
   24a54:	ldr	r0, [sp, #24]
   24a58:	cmp	r0, #0
   24a5c:	ldr	r0, [sp, #12]
   24a60:	bne	24978 <main@@Base+0xec30>
   24a64:	b	24a6c <main@@Base+0xed24>
   24a68:	mov	r4, r6
   24a6c:	mov	r0, r4
   24a70:	sub	sp, fp, #28
   24a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a78:	mov	r4, r6
   24a7c:	mov	r0, r4
   24a80:	sub	sp, fp, #28
   24a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a88:	mov	r0, r5
   24a8c:	mov	r1, r7
   24a90:	mov	r2, r6
   24a94:	mov	r3, #23
   24a98:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   24a9c:	mov	r4, r0
   24aa0:	mov	r0, r4
   24aa4:	sub	sp, fp, #28
   24aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24aac:	mov	r4, r6
   24ab0:	mov	r0, r4
   24ab4:	sub	sp, fp, #28
   24ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24ac0:	add	fp, sp, #28
   24ac4:	sub	sp, sp, #44	; 0x2c
   24ac8:	mov	r7, r2
   24acc:	ldr	r2, [fp, #8]
   24ad0:	mov	r5, r0
   24ad4:	mov	r0, #0
   24ad8:	mov	sl, r3
   24adc:	cmp	r1, r7
   24ae0:	str	r0, [r2]
   24ae4:	str	r0, [r2, #4]
   24ae8:	beq	24afc <main@@Base+0xedb4>
   24aec:	ldrb	r0, [r1]
   24af0:	cmp	r0, #34	; 0x22
   24af4:	bne	24b24 <main@@Base+0xeddc>
   24af8:	add	r1, r1, #1
   24afc:	sub	r0, r7, r1
   24b00:	cmp	r0, #2
   24b04:	blt	24b5c <main@@Base+0xee14>
   24b08:	ldrb	r0, [r1]
   24b0c:	cmp	r0, #32
   24b10:	bls	24b48 <main@@Base+0xee00>
   24b14:	mov	r6, r1
   24b18:	cmp	r6, r7
   24b1c:	bne	24b74 <main@@Base+0xee2c>
   24b20:	b	24c6c <main@@Base+0xef24>
   24b24:	mov	r0, r5
   24b28:	mov	r2, r7
   24b2c:	mov	r3, #5
   24b30:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   24b34:	mov	r1, r0
   24b38:	sub	r0, r7, r1
   24b3c:	cmp	r0, #2
   24b40:	bge	24b08 <main@@Base+0xedc0>
   24b44:	b	24b5c <main@@Base+0xee14>
   24b48:	bne	24b5c <main@@Base+0xee14>
   24b4c:	mov	r6, r1
   24b50:	ldrb	r0, [r6, #1]!
   24b54:	cmp	r0, #32
   24b58:	bhi	24b6c <main@@Base+0xee24>
   24b5c:	mov	r0, r5
   24b60:	mov	r2, r7
   24b64:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   24b68:	mov	r6, r0
   24b6c:	cmp	r6, r7
   24b70:	beq	24c6c <main@@Base+0xef24>
   24b74:	mov	r1, #0
   24b78:	add	r0, sl, #4
   24b7c:	add	r8, sp, #32
   24b80:	add	r9, sp, #28
   24b84:	str	sl, [sp, #12]
   24b88:	str	r1, [sp, #20]
   24b8c:	mov	r1, #0
   24b90:	str	r0, [sp, #8]
   24b94:	str	r1, [sp, #16]
   24b98:	ldr	r4, [sl]
   24b9c:	mov	sl, r0
   24ba0:	add	r0, sp, #24
   24ba4:	mov	r1, r6
   24ba8:	mov	r2, r7
   24bac:	mov	r3, r9
   24bb0:	str	r8, [sp]
   24bb4:	str	r0, [sp, #4]
   24bb8:	mov	r0, r5
   24bbc:	blx	r4
   24bc0:	cmp	r0, r7
   24bc4:	beq	24c7c <main@@Base+0xef34>
   24bc8:	mov	r4, r0
   24bcc:	cmp	r0, r6
   24bd0:	bne	24be4 <main@@Base+0xee9c>
   24bd4:	ldr	r4, [sl], #4
   24bd8:	cmp	r4, #0
   24bdc:	bne	24ba0 <main@@Base+0xee58>
   24be0:	b	24c8c <main@@Base+0xef44>
   24be4:	ldr	r0, [sp, #28]
   24be8:	cmp	r0, #0
   24bec:	beq	24c14 <main@@Base+0xeecc>
   24bf0:	mov	r0, r5
   24bf4:	mov	r1, r4
   24bf8:	mov	r2, r7
   24bfc:	mov	r3, #8
   24c00:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   24c04:	ldr	sl, [sp, #12]
   24c08:	cmp	r0, r7
   24c0c:	bne	24c34 <main@@Base+0xeeec>
   24c10:	b	24cb0 <main@@Base+0xef68>
   24c14:	ldr	r0, [sp, #32]
   24c18:	str	r0, [sp, #20]
   24c1c:	ldr	r0, [sp, #36]	; 0x24
   24c20:	str	r0, [sp, #16]
   24c24:	mov	r0, r4
   24c28:	ldr	sl, [sp, #12]
   24c2c:	cmp	r0, r7
   24c30:	beq	24cb0 <main@@Base+0xef68>
   24c34:	ldr	r0, [fp, #8]
   24c38:	ldr	r3, [sp, #20]
   24c3c:	mov	r6, r4
   24c40:	mov	r2, r0
   24c44:	ldrd	r0, [r0]
   24c48:	adds	r0, r0, r3
   24c4c:	ldr	r3, [sp, #16]
   24c50:	adc	r1, r1, r3
   24c54:	strd	r0, [r2]
   24c58:	ldr	r0, [sp, #24]
   24c5c:	cmp	r0, #0
   24c60:	ldr	r0, [sp, #8]
   24c64:	bne	24b98 <main@@Base+0xee50>
   24c68:	b	24c70 <main@@Base+0xef28>
   24c6c:	mov	r4, r7
   24c70:	mov	r0, r4
   24c74:	sub	sp, fp, #28
   24c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c7c:	mov	r4, r7
   24c80:	mov	r0, r4
   24c84:	sub	sp, fp, #28
   24c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c8c:	mov	r0, r5
   24c90:	mov	r1, r6
   24c94:	mov	r2, r7
   24c98:	mov	r3, #23
   24c9c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   24ca0:	mov	r4, r0
   24ca4:	mov	r0, r4
   24ca8:	sub	sp, fp, #28
   24cac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24cb0:	mov	r4, r7
   24cb4:	mov	r0, r4
   24cb8:	sub	sp, fp, #28
   24cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24cc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24cc4:	add	fp, sp, #28
   24cc8:	sub	sp, sp, #36	; 0x24
   24ccc:	mov	r6, r2
   24cd0:	ldr	r2, [fp, #8]
   24cd4:	mov	r5, r0
   24cd8:	mov	r0, #0
   24cdc:	mov	r8, r3
   24ce0:	cmp	r1, r6
   24ce4:	str	r0, [r2]
   24ce8:	str	r0, [r2, #4]
   24cec:	beq	24d00 <main@@Base+0xefb8>
   24cf0:	ldrb	r0, [r1]
   24cf4:	cmp	r0, #34	; 0x22
   24cf8:	bne	24d28 <main@@Base+0xefe0>
   24cfc:	add	r1, r1, #1
   24d00:	sub	r0, r6, r1
   24d04:	cmp	r0, #2
   24d08:	blt	24d60 <main@@Base+0xf018>
   24d0c:	ldrb	r0, [r1]
   24d10:	cmp	r0, #32
   24d14:	bls	24d4c <main@@Base+0xf004>
   24d18:	mov	r7, r1
   24d1c:	cmp	r7, r6
   24d20:	bne	24d78 <main@@Base+0xf030>
   24d24:	b	24e2c <main@@Base+0xf0e4>
   24d28:	mov	r0, r5
   24d2c:	mov	r2, r6
   24d30:	mov	r3, #5
   24d34:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   24d38:	mov	r1, r0
   24d3c:	sub	r0, r6, r1
   24d40:	cmp	r0, #2
   24d44:	bge	24d0c <main@@Base+0xefc4>
   24d48:	b	24d60 <main@@Base+0xf018>
   24d4c:	bne	24d60 <main@@Base+0xf018>
   24d50:	mov	r7, r1
   24d54:	ldrb	r0, [r7, #1]!
   24d58:	cmp	r0, #32
   24d5c:	bhi	24d70 <main@@Base+0xf028>
   24d60:	mov	r0, r5
   24d64:	mov	r2, r6
   24d68:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   24d6c:	mov	r7, r0
   24d70:	cmp	r7, r6
   24d74:	beq	24e2c <main@@Base+0xf0e4>
   24d78:	add	r0, r8, #4
   24d7c:	add	sl, sp, #24
   24d80:	add	r9, sp, #20
   24d84:	str	r8, [sp, #12]
   24d88:	str	r0, [sp, #8]
   24d8c:	ldr	r4, [r8]
   24d90:	mov	r8, r0
   24d94:	add	r0, sp, #16
   24d98:	mov	r1, r7
   24d9c:	mov	r2, r6
   24da0:	mov	r3, r9
   24da4:	str	sl, [sp]
   24da8:	str	r0, [sp, #4]
   24dac:	mov	r0, r5
   24db0:	blx	r4
   24db4:	cmp	r0, r6
   24db8:	beq	24e3c <main@@Base+0xf0f4>
   24dbc:	mov	r4, r0
   24dc0:	cmp	r0, r7
   24dc4:	bne	24dd8 <main@@Base+0xf090>
   24dc8:	ldr	r4, [r8], #4
   24dcc:	cmp	r4, #0
   24dd0:	bne	24d94 <main@@Base+0xf04c>
   24dd4:	b	24e4c <main@@Base+0xf104>
   24dd8:	ldr	r0, [sp, #24]
   24ddc:	ldr	r1, [sp, #28]
   24de0:	bl	45e48 <flatcc_json_printer_clear@@Base+0x4e4>
   24de4:	ldr	r2, [fp, #8]
   24de8:	ldr	r3, [sp, #20]
   24dec:	vmov	d17, r0, r1
   24df0:	ldr	r8, [sp, #12]
   24df4:	vldr	d16, [r2]
   24df8:	mov	r7, r2
   24dfc:	eor	r2, r1, #-2147483648	; 0x80000000
   24e00:	cmp	r3, #0
   24e04:	vmov	d18, r0, r2
   24e08:	vseleq.f64	d17, d17, d18
   24e0c:	vadd.f64	d16, d16, d17
   24e10:	vstr	d16, [r7]
   24e14:	mov	r7, r4
   24e18:	ldr	r0, [sp, #16]
   24e1c:	cmp	r0, #0
   24e20:	ldr	r0, [sp, #8]
   24e24:	bne	24d8c <main@@Base+0xf044>
   24e28:	b	24e30 <main@@Base+0xf0e8>
   24e2c:	mov	r4, r6
   24e30:	mov	r0, r4
   24e34:	sub	sp, fp, #28
   24e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24e3c:	mov	r4, r6
   24e40:	mov	r0, r4
   24e44:	sub	sp, fp, #28
   24e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24e4c:	mov	r0, r5
   24e50:	mov	r1, r7
   24e54:	mov	r2, r6
   24e58:	mov	r3, #23
   24e5c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   24e60:	mov	r4, r0
   24e64:	mov	r0, r4
   24e68:	sub	sp, fp, #28
   24e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24e70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24e74:	add	fp, sp, #28
   24e78:	sub	sp, sp, #12
   24e7c:	mov	sl, r1
   24e80:	sub	r1, r2, r1
   24e84:	cmp	r1, #8
   24e88:	movcs	r1, #8
   24e8c:	and	r1, r1, #15
   24e90:	sub	r5, r1, #1
   24e94:	cmp	r5, #7
   24e98:	bhi	250d4 <main@@Base+0xf38c>
   24e9c:	str	r3, [sp, #8]
   24ea0:	add	r7, pc, #32
   24ea4:	mov	r8, #0
   24ea8:	mov	ip, #0
   24eac:	mov	lr, #0
   24eb0:	mov	r9, #0
   24eb4:	mov	r6, #0
   24eb8:	mov	r1, #0
   24ebc:	mov	r3, #0
   24ec0:	mov	r4, #0
   24ec4:	ldr	pc, [r7, r5, lsl #2]
   24ec8:	andeq	r4, r2, ip, lsr #30
   24ecc:	andeq	r4, r2, r4, lsr #30
   24ed0:	andeq	r4, r2, ip, lsl pc
   24ed4:	andeq	r4, r2, r4, lsl pc
   24ed8:	andeq	r4, r2, r8, lsl #30
   24edc:	strdeq	r4, [r2], -ip
   24ee0:	andeq	r4, r2, ip, ror #29
   24ee4:	andeq	r4, r2, r8, ror #29
   24ee8:	ldrb	ip, [sl, #7]
   24eec:	ldrb	r1, [sl, #6]
   24ef0:	mov	lr, r8
   24ef4:	orr	r1, ip, r1, lsl #8
   24ef8:	mov	r8, r1
   24efc:	ldrb	r1, [sl, #5]
   24f00:	mov	r9, lr
   24f04:	orr	r8, r8, r1, lsl #16
   24f08:	ldrb	r1, [sl, #4]
   24f0c:	mov	r6, r9
   24f10:	orr	r8, r8, r1, lsl #24
   24f14:	ldrb	r1, [sl, #3]
   24f18:	orr	r1, r1, r6
   24f1c:	ldrb	r3, [sl, #2]
   24f20:	orr	r3, r1, r3, lsl #8
   24f24:	ldrb	r1, [sl, #1]
   24f28:	orr	r4, r3, r1, lsl #16
   24f2c:	movw	r1, #28276	; 0x6e74
   24f30:	movw	r7, #20577	; 0x5061
   24f34:	ldr	r6, [fp, #12]
   24f38:	movt	r1, #29285	; 0x7265
   24f3c:	movt	r7, #18798	; 0x496e
   24f40:	eor	r3, r8, r1
   24f44:	ldrb	r1, [sl]
   24f48:	orr	r1, r4, r1, lsl #24
   24f4c:	eor	r7, r1, r7
   24f50:	orrs	r3, r3, r7
   24f54:	bne	25088 <main@@Base+0xf340>
   24f58:	add	r8, sl, #8
   24f5c:	sub	r1, r2, r8
   24f60:	cmp	r1, #8
   24f64:	movcs	r1, #8
   24f68:	and	r1, r1, #15
   24f6c:	sub	r7, r1, #1
   24f70:	cmp	r7, #7
   24f74:	bhi	250d4 <main@@Base+0xf38c>
   24f78:	str	r0, [sp, #4]
   24f7c:	add	lr, pc, #32
   24f80:	mov	r6, #0
   24f84:	mov	r0, #0
   24f88:	mov	r1, #0
   24f8c:	mov	r5, #0
   24f90:	mov	r4, #0
   24f94:	mov	r3, #0
   24f98:	mov	ip, #0
   24f9c:	mov	r9, #0
   24fa0:	ldr	pc, [lr, r7, lsl #2]
   24fa4:	andeq	r5, r2, r8
   24fa8:	andeq	r5, r2, r0
   24fac:	strdeq	r4, [r2], -r8
   24fb0:	strdeq	r4, [r2], -r0
   24fb4:	andeq	r4, r2, r4, ror #31
   24fb8:	ldrdeq	r4, [r2], -r8
   24fbc:	andeq	r4, r2, r8, asr #31
   24fc0:	andeq	r4, r2, r4, asr #31
   24fc4:	ldrb	r0, [sl, #15]
   24fc8:	ldrb	r1, [sl, #14]
   24fcc:	orr	r0, r0, r1, lsl #8
   24fd0:	mov	r1, r6
   24fd4:	mov	r6, r0
   24fd8:	ldrb	r0, [sl, #13]
   24fdc:	mov	r5, r1
   24fe0:	orr	r6, r6, r0, lsl #16
   24fe4:	ldrb	r0, [sl, #12]
   24fe8:	mov	r4, r5
   24fec:	orr	r6, r6, r0, lsl #24
   24ff0:	ldrb	r0, [sl, #11]
   24ff4:	orr	r3, r0, r4
   24ff8:	ldrb	r0, [sl, #10]
   24ffc:	orr	ip, r3, r0, lsl #8
   25000:	ldrb	r0, [sl, #9]
   25004:	orr	r9, ip, r0, lsl #16
   25008:	ldrb	r1, [r8]
   2500c:	movw	r0, #24931	; 0x6163
   25010:	movw	r3, #28005	; 0x6d65
   25014:	movt	r0, #29552	; 0x7370
   25018:	movt	r3, #20065	; 0x4e61
   2501c:	eor	r0, r6, r0
   25020:	orr	r1, r9, r1, lsl #24
   25024:	eor	r1, r1, r3
   25028:	orrs	r0, r0, r1
   2502c:	bne	250d4 <main@@Base+0xf38c>
   25030:	add	r6, sl, #16
   25034:	mov	r1, #-268435456	; 0xf0000000
   25038:	sub	r0, r2, r6
   2503c:	cmp	r0, #8
   25040:	movcs	r0, #8
   25044:	add	r0, r1, r0, lsl #28
   25048:	asr	r0, r0, #28
   2504c:	cmp	r0, #0
   25050:	blt	250d4 <main@@Base+0xf38c>
   25054:	ldrb	r0, [r6]
   25058:	cmp	r0, #101	; 0x65
   2505c:	bne	250d4 <main@@Base+0xf38c>
   25060:	ldr	r0, [fp, #12]
   25064:	mov	r1, r6
   25068:	mov	r3, #1
   2506c:	mov	r8, #1
   25070:	str	r0, [sp]
   25074:	ldr	r0, [sp, #4]
   25078:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   2507c:	cmp	r0, r6
   25080:	bne	250b4 <main@@Base+0xf36c>
   25084:	b	250d4 <main@@Base+0xf38c>
   25088:	movw	r3, #20037	; 0x4e45
   2508c:	movt	r3, #20047	; 0x4e4f
   25090:	teq	r1, r3
   25094:	bne	250d4 <main@@Base+0xf38c>
   25098:	mov	r1, sl
   2509c:	mov	r3, #4
   250a0:	str	r6, [sp]
   250a4:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   250a8:	cmp	r0, sl
   250ac:	beq	250d4 <main@@Base+0xf38c>
   250b0:	mov	r8, #0
   250b4:	mov	sl, r0
   250b8:	ldr	r0, [fp, #8]
   250bc:	mov	r1, #0
   250c0:	str	r8, [r0]
   250c4:	str	r1, [r0, #4]
   250c8:	mov	r0, #0
   250cc:	ldr	r1, [sp, #8]
   250d0:	str	r0, [r1]
   250d4:	mov	r0, sl
   250d8:	sub	sp, fp, #28
   250dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   250e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   250e4:	add	fp, sp, #28
   250e8:	sub	sp, sp, #12
   250ec:	mov	r5, r1
   250f0:	sub	r1, r2, r1
   250f4:	cmp	r1, #8
   250f8:	movcs	r1, #8
   250fc:	and	r1, r1, #15
   25100:	sub	r7, r1, #1
   25104:	cmp	r7, #7
   25108:	bhi	25284 <main@@Base+0xf53c>
   2510c:	str	r3, [sp, #8]
   25110:	add	r8, pc, #32
   25114:	mov	lr, #0
   25118:	mov	ip, #0
   2511c:	mov	r9, #0
   25120:	mov	sl, #0
   25124:	mov	r1, #0
   25128:	mov	r3, #0
   2512c:	mov	r4, #0
   25130:	mov	r6, #0
   25134:	ldr	pc, [r8, r7, lsl #2]
   25138:	muleq	r2, ip, r1
   2513c:	muleq	r2, r4, r1
   25140:	andeq	r5, r2, ip, lsl #3
   25144:	andeq	r5, r2, r4, lsl #3
   25148:	andeq	r5, r2, r8, ror r1
   2514c:	andeq	r5, r2, ip, ror #2
   25150:	andeq	r5, r2, ip, asr r1
   25154:	andeq	r5, r2, r8, asr r1
   25158:	ldrb	ip, [r5, #7]
   2515c:	ldrb	r1, [r5, #6]
   25160:	mov	r9, lr
   25164:	orr	r1, ip, r1, lsl #8
   25168:	mov	lr, r1
   2516c:	ldrb	r1, [r5, #5]
   25170:	mov	sl, r9
   25174:	orr	lr, lr, r1, lsl #16
   25178:	ldrb	r1, [r5, #4]
   2517c:	orr	lr, lr, r1, lsl #24
   25180:	mov	r1, sl
   25184:	ldrb	r3, [r5, #3]
   25188:	orr	r3, r3, r1
   2518c:	ldrb	r1, [r5, #2]
   25190:	orr	r4, r3, r1, lsl #8
   25194:	ldrb	r1, [r5, #1]
   25198:	orr	r6, r4, r1, lsl #16
   2519c:	ldrb	r1, [r5]
   251a0:	ldr	r3, [fp, #12]
   251a4:	ldr	r8, [fp, #8]
   251a8:	orr	r1, r6, r1, lsl #24
   251ac:	movw	r6, #30769	; 0x7831
   251b0:	movt	r6, #26725	; 0x6865
   251b4:	cmp	r1, r6
   251b8:	bhi	251e8 <main@@Base+0xf4a0>
   251bc:	teq	r1, r6
   251c0:	bne	25284 <main@@Base+0xf53c>
   251c4:	str	r3, [sp]
   251c8:	mov	r1, r5
   251cc:	mov	r3, #4
   251d0:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   251d4:	cmp	r0, r5
   251d8:	beq	25284 <main@@Base+0xf53c>
   251dc:	mov	r1, #0
   251e0:	mov	r2, #3
   251e4:	b	25270 <main@@Base+0xf528>
   251e8:	lsr	r4, lr, #16
   251ec:	movw	r7, #25959	; 0x6567
   251f0:	movw	r6, #26725	; 0x6865
   251f4:	orr	r4, r4, r1, lsl #16
   251f8:	movt	r7, #30830	; 0x786e
   251fc:	eor	r6, r6, r1, lsr #16
   25200:	eor	r7, r4, r7
   25204:	orrs	r7, r7, r6
   25208:	bne	2523c <main@@Base+0xf4f4>
   2520c:	str	r3, [sp]
   25210:	mov	r1, r5
   25214:	mov	r3, #6
   25218:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   2521c:	cmp	r0, r5
   25220:	beq	25284 <main@@Base+0xf53c>
   25224:	mvn	r2, #1
   25228:	mvn	r1, #0
   2522c:	str	r2, [r8]
   25230:	str	r1, [r8, #4]
   25234:	mov	r1, #1
   25238:	b	25278 <main@@Base+0xf530>
   2523c:	movw	r7, #30770	; 0x7832
   25240:	movt	r7, #26725	; 0x6865
   25244:	teq	r1, r7
   25248:	bne	25284 <main@@Base+0xf53c>
   2524c:	str	r3, [sp]
   25250:	mov	r1, r5
   25254:	mov	r3, #4
   25258:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   2525c:	cmp	r0, r5
   25260:	beq	25284 <main@@Base+0xf53c>
   25264:	movw	r2, #48815	; 0xbeaf
   25268:	mov	r1, #0
   2526c:	movt	r2, #32431	; 0x7eaf
   25270:	str	r2, [r8]
   25274:	str	r1, [r8, #4]
   25278:	ldr	r2, [sp, #8]
   2527c:	mov	r5, r0
   25280:	str	r1, [r2]
   25284:	mov	r0, r5
   25288:	sub	sp, fp, #28
   2528c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25294:	add	fp, sp, #28
   25298:	sub	sp, sp, #12
   2529c:	mov	sl, r1
   252a0:	sub	r1, r2, r1
   252a4:	cmp	r1, #8
   252a8:	movcs	r1, #8
   252ac:	and	r1, r1, #15
   252b0:	sub	r4, r1, #1
   252b4:	cmp	r4, #7
   252b8:	bhi	25478 <main@@Base+0xf730>
   252bc:	str	r3, [sp, #8]
   252c0:	add	r8, pc, #32
   252c4:	mov	r9, #0
   252c8:	mov	ip, #0
   252cc:	mov	lr, #0
   252d0:	mov	r7, #0
   252d4:	mov	r6, #0
   252d8:	mov	r3, #0
   252dc:	mov	r1, #0
   252e0:	mov	r5, #0
   252e4:	ldr	pc, [r8, r4, lsl #2]
   252e8:	andeq	r5, r2, ip, asr #6
   252ec:	andeq	r5, r2, r4, asr #6
   252f0:	andeq	r5, r2, ip, lsr r3
   252f4:	andeq	r5, r2, r4, lsr r3
   252f8:	andeq	r5, r2, r8, lsr #6
   252fc:	andeq	r5, r2, ip, lsl r3
   25300:	andeq	r5, r2, ip, lsl #6
   25304:	andeq	r5, r2, r8, lsl #6
   25308:	ldrb	ip, [sl, #7]
   2530c:	ldrb	r1, [sl, #6]
   25310:	mov	lr, r9
   25314:	orr	r1, ip, r1, lsl #8
   25318:	mov	r9, r1
   2531c:	ldrb	r1, [sl, #5]
   25320:	mov	r7, lr
   25324:	orr	r9, r9, r1, lsl #16
   25328:	ldrb	r1, [sl, #4]
   2532c:	mov	r6, r7
   25330:	orr	r9, r9, r1, lsl #24
   25334:	ldrb	r1, [sl, #3]
   25338:	orr	r3, r1, r6
   2533c:	ldrb	r1, [sl, #2]
   25340:	orr	r1, r3, r1, lsl #8
   25344:	ldrb	r3, [sl, #1]
   25348:	orr	r5, r1, r3, lsl #16
   2534c:	ldrb	r1, [sl]
   25350:	ldr	r3, [fp, #12]
   25354:	ldr	r6, [fp, #8]
   25358:	orr	r7, r5, r1, lsl #24
   2535c:	movw	r1, #29745	; 0x7431
   25360:	movt	r1, #26990	; 0x696e
   25364:	cmp	r7, r1
   25368:	bhi	25398 <main@@Base+0xf650>
   2536c:	teq	r7, r1
   25370:	bne	25478 <main@@Base+0xf730>
   25374:	str	r3, [sp]
   25378:	mov	r1, sl
   2537c:	mov	r3, #4
   25380:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   25384:	cmp	r0, sl
   25388:	beq	25478 <main@@Base+0xf730>
   2538c:	mov	r1, #0
   25390:	mov	r2, #2
   25394:	b	253e4 <main@@Base+0xf69c>
   25398:	movw	r4, #0
   2539c:	movw	r1, #29806	; 0x746e
   253a0:	movt	r4, #25959	; 0x6567
   253a4:	movt	r1, #26990	; 0x696e
   253a8:	subs	r5, r9, r4
   253ac:	sbcs	r5, r7, r1
   253b0:	bcs	253f0 <main@@Base+0xf6a8>
   253b4:	movw	r1, #29746	; 0x7432
   253b8:	movt	r1, #26990	; 0x696e
   253bc:	teq	r7, r1
   253c0:	bne	25478 <main@@Base+0xf730>
   253c4:	str	r3, [sp]
   253c8:	mov	r1, sl
   253cc:	mov	r3, #4
   253d0:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   253d4:	cmp	r0, sl
   253d8:	beq	25478 <main@@Base+0xf730>
   253dc:	mov	r1, #0
   253e0:	mov	r2, #42	; 0x2a
   253e4:	str	r2, [r6]
   253e8:	str	r1, [r6, #4]
   253ec:	b	2546c <main@@Base+0xf724>
   253f0:	eor	r1, r7, r1
   253f4:	add	r7, r4, #12800	; 0x3200
   253f8:	bic	r5, r9, #255	; 0xff
   253fc:	eor	r7, r5, r7
   25400:	orrs	r7, r7, r1
   25404:	bne	25430 <main@@Base+0xf6e8>
   25408:	str	r3, [sp]
   2540c:	mov	r1, sl
   25410:	mov	r3, #7
   25414:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   25418:	cmp	r0, sl
   2541c:	beq	25478 <main@@Base+0xf730>
   25420:	mvn	r2, #1
   25424:	mvn	r1, #0
   25428:	add	r2, r2, #1
   2542c:	b	25460 <main@@Base+0xf718>
   25430:	bfc	r9, #0, #16
   25434:	eor	r7, r9, r4
   25438:	orrs	r1, r7, r1
   2543c:	bne	25478 <main@@Base+0xf730>
   25440:	str	r3, [sp]
   25444:	mov	r1, sl
   25448:	mov	r3, #6
   2544c:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   25450:	cmp	r0, sl
   25454:	beq	25478 <main@@Base+0xf730>
   25458:	mvn	r1, #0
   2545c:	mvn	r2, #1
   25460:	str	r2, [r6]
   25464:	str	r1, [r6, #4]
   25468:	mov	r1, #1
   2546c:	ldr	r2, [sp, #8]
   25470:	mov	sl, r0
   25474:	str	r1, [r2]
   25478:	mov	r0, sl
   2547c:	sub	sp, fp, #28
   25480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25484:	push	{r4, r5, r6, r7, fp, lr}
   25488:	add	fp, sp, #16
   2548c:	sub	sp, sp, #8
   25490:	mov	r5, r1
   25494:	sub	r1, r2, r1
   25498:	mov	r4, r3
   2549c:	cmp	r1, #8
   254a0:	movcs	r1, #8
   254a4:	and	r1, r1, #15
   254a8:	sub	r3, r1, #1
   254ac:	cmp	r3, #7
   254b0:	bhi	255c4 <main@@Base+0xf87c>
   254b4:	add	r7, pc, #4
   254b8:	mov	r1, #0
   254bc:	ldr	pc, [r7, r3, lsl #2]
   254c0:	strdeq	r5, [r2], -r8
   254c4:	strdeq	r5, [r2], -r0
   254c8:	andeq	r5, r2, r8, ror #9
   254cc:	andeq	r5, r2, r0, ror #9
   254d0:	andeq	r5, r2, r0, ror #9
   254d4:	andeq	r5, r2, r0, ror #9
   254d8:	andeq	r5, r2, r0, ror #9
   254dc:	andeq	r5, r2, r0, ror #9
   254e0:	ldrb	r3, [r5, #3]
   254e4:	orr	r1, r3, r1
   254e8:	ldrb	r3, [r5, #2]
   254ec:	orr	r1, r1, r3, lsl #8
   254f0:	ldrb	r3, [r5, #1]
   254f4:	orr	r1, r1, r3, lsl #16
   254f8:	ldrb	r6, [r5]
   254fc:	ldr	r3, [fp, #12]
   25500:	ldr	r7, [fp, #8]
   25504:	orr	r1, r1, r6, lsl #24
   25508:	movw	r6, #26417	; 0x6731
   2550c:	movt	r6, #28261	; 0x6e65
   25510:	cmp	r1, r6
   25514:	bhi	25544 <main@@Base+0xf7fc>
   25518:	teq	r1, r6
   2551c:	bne	255c4 <main@@Base+0xf87c>
   25520:	str	r3, [sp]
   25524:	mov	r1, r5
   25528:	mov	r3, #4
   2552c:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   25530:	cmp	r0, r5
   25534:	beq	255c4 <main@@Base+0xf87c>
   25538:	mvn	r1, #0
   2553c:	mvn	r2, #11
   25540:	b	255b0 <main@@Base+0xf868>
   25544:	movw	r6, #26418	; 0x6732
   25548:	movt	r6, #28261	; 0x6e65
   2554c:	teq	r1, r6
   25550:	beq	2558c <main@@Base+0xf844>
   25554:	movw	r6, #26419	; 0x6733
   25558:	movt	r6, #28261	; 0x6e65
   2555c:	teq	r1, r6
   25560:	bne	255c4 <main@@Base+0xf87c>
   25564:	str	r3, [sp]
   25568:	mov	r1, r5
   2556c:	mov	r3, #4
   25570:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   25574:	cmp	r0, r5
   25578:	beq	255c4 <main@@Base+0xf87c>
   2557c:	mvn	r2, #11
   25580:	mvn	r1, #0
   25584:	add	r2, r2, #2
   25588:	b	255b0 <main@@Base+0xf868>
   2558c:	str	r3, [sp]
   25590:	mov	r1, r5
   25594:	mov	r3, #4
   25598:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   2559c:	cmp	r0, r5
   255a0:	beq	255c4 <main@@Base+0xf87c>
   255a4:	mvn	r2, #11
   255a8:	mvn	r1, #0
   255ac:	add	r2, r2, #1
   255b0:	str	r2, [r7]
   255b4:	str	r1, [r7, #4]
   255b8:	mov	r1, #1
   255bc:	mov	r5, r0
   255c0:	str	r1, [r4]
   255c4:	mov	r0, r5
   255c8:	sub	sp, fp, #16
   255cc:	pop	{r4, r5, r6, r7, fp, pc}
   255d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   255d4:	add	fp, sp, #28
   255d8:	sub	sp, sp, #12
   255dc:	mov	sl, r1
   255e0:	sub	r1, r2, r1
   255e4:	cmp	r1, #8
   255e8:	movcs	r1, #8
   255ec:	and	r1, r1, #15
   255f0:	sub	r6, r1, #1
   255f4:	cmp	r6, #7
   255f8:	bhi	25874 <main@@Base+0xfb2c>
   255fc:	str	r3, [sp, #8]
   25600:	add	r9, pc, #32
   25604:	mov	r1, #0
   25608:	mov	ip, #0
   2560c:	mov	lr, #0
   25610:	mov	r4, #0
   25614:	mov	r7, #0
   25618:	mov	r3, #0
   2561c:	mov	r5, #0
   25620:	mov	r8, #0
   25624:	ldr	pc, [r9, r6, lsl #2]
   25628:	andeq	r5, r2, ip, lsl #13
   2562c:	andeq	r5, r2, r4, lsl #13
   25630:	andeq	r5, r2, ip, ror r6
   25634:	andeq	r5, r2, r4, ror r6
   25638:	andeq	r5, r2, r8, ror #12
   2563c:	andeq	r5, r2, ip, asr r6
   25640:	andeq	r5, r2, ip, asr #12
   25644:	andeq	r5, r2, r8, asr #12
   25648:	ldrb	ip, [sl, #7]
   2564c:	ldrb	r3, [sl, #6]
   25650:	mov	lr, r1
   25654:	orr	r3, ip, r3, lsl #8
   25658:	mov	r1, r3
   2565c:	ldrb	r3, [sl, #5]
   25660:	mov	r4, lr
   25664:	orr	r1, r1, r3, lsl #16
   25668:	ldrb	r3, [sl, #4]
   2566c:	mov	r7, r4
   25670:	orr	r1, r1, r3, lsl #24
   25674:	ldrb	r3, [sl, #3]
   25678:	orr	r3, r3, r7
   2567c:	ldrb	r7, [sl, #2]
   25680:	orr	r5, r3, r7, lsl #8
   25684:	ldrb	r3, [sl, #1]
   25688:	orr	r8, r5, r3, lsl #16
   2568c:	ldrb	r3, [sl]
   25690:	ldr	lr, [fp, #12]
   25694:	ldr	r9, [fp, #8]
   25698:	orr	r6, r8, r3, lsl #24
   2569c:	movw	r3, #20036	; 0x4e44
   256a0:	movt	r3, #20047	; 0x4e4f
   256a4:	cmp	r6, r3
   256a8:	bhi	25708 <main@@Base+0xf9c0>
   256ac:	movw	r7, #28160	; 0x6e00
   256b0:	movw	r4, #28523	; 0x6f6b
   256b4:	and	r3, r1, #-16777216	; 0xff000000
   256b8:	movt	r7, #18017	; 0x4661
   256bc:	movt	r4, #17007	; 0x426f
   256c0:	subs	r5, r1, r7
   256c4:	sbcs	r5, r6, r4
   256c8:	bcs	25754 <main@@Base+0xfa0c>
   256cc:	movw	r1, #27756	; 0x6c6c
   256d0:	eor	r3, r3, #1694498816	; 0x65000000
   256d4:	movt	r1, #16997	; 0x4265
   256d8:	eor	r1, r6, r1
   256dc:	orrs	r1, r3, r1
   256e0:	bne	25874 <main@@Base+0xfb2c>
   256e4:	mov	r1, sl
   256e8:	mov	r3, #5
   256ec:	str	lr, [sp]
   256f0:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   256f4:	cmp	r0, sl
   256f8:	beq	25874 <main@@Base+0xfb2c>
   256fc:	mov	r1, #0
   25700:	mov	r2, #9
   25704:	b	25860 <main@@Base+0xfb18>
   25708:	movw	r7, #26725	; 0x6865
   2570c:	mvn	r3, #-1912602624	; 0x8e000000
   25710:	movt	r7, #20340	; 0x4f74
   25714:	subs	r3, r3, r1
   25718:	sbcs	r3, r7, r6
   2571c:	bcc	25790 <main@@Base+0xfa48>
   25720:	movw	r1, #20037	; 0x4e45
   25724:	movt	r1, #20047	; 0x4e4f
   25728:	teq	r6, r1
   2572c:	bne	25874 <main@@Base+0xfb2c>
   25730:	mov	r1, sl
   25734:	mov	r3, #4
   25738:	str	lr, [sp]
   2573c:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   25740:	cmp	r0, sl
   25744:	beq	25874 <main@@Base+0xfb2c>
   25748:	mov	r1, #0
   2574c:	str	r1, [r9]
   25750:	b	25864 <main@@Base+0xfb1c>
   25754:	movw	r5, #19553	; 0x4c61
   25758:	eor	r3, r3, #1845493760	; 0x6e000000
   2575c:	movt	r5, #19829	; 0x4d75
   25760:	eor	r5, r6, r5
   25764:	orrs	r3, r3, r5
   25768:	bne	257e4 <main@@Base+0xfa9c>
   2576c:	mov	r1, sl
   25770:	mov	r3, #5
   25774:	str	lr, [sp]
   25778:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   2577c:	cmp	r0, sl
   25780:	beq	25874 <main@@Base+0xfb2c>
   25784:	mov	r1, #0
   25788:	mov	r2, #2
   2578c:	b	25860 <main@@Base+0xfb18>
   25790:	movw	r4, #25964	; 0x656c
   25794:	movw	ip, #28789	; 0x7075
   25798:	movt	r4, #28282	; 0x6e7a
   2579c:	movt	ip, #21089	; 0x5261
   257a0:	subs	r3, r1, r4
   257a4:	sbcs	r3, r6, ip
   257a8:	bcs	2581c <main@@Base+0xfad4>
   257ac:	and	r1, r1, #-16777216	; 0xff000000
   257b0:	eor	r3, r6, r7
   257b4:	eor	r1, r1, #1912602624	; 0x72000000
   257b8:	orrs	r1, r1, r3
   257bc:	bne	25874 <main@@Base+0xfb2c>
   257c0:	mov	r1, sl
   257c4:	mov	r3, #5
   257c8:	str	lr, [sp]
   257cc:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   257d0:	cmp	r0, sl
   257d4:	beq	25874 <main@@Base+0xfb2c>
   257d8:	mov	r1, #0
   257dc:	mov	r2, #11
   257e0:	b	25860 <main@@Base+0xfb18>
   257e4:	bic	r1, r1, #255	; 0xff
   257e8:	eor	r3, r6, r4
   257ec:	eor	r1, r1, r7
   257f0:	orrs	r1, r1, r3
   257f4:	bne	25874 <main@@Base+0xfb2c>
   257f8:	mov	r1, sl
   257fc:	mov	r3, #7
   25800:	str	lr, [sp]
   25804:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   25808:	cmp	r0, sl
   2580c:	beq	25874 <main@@Base+0xfb2c>
   25810:	mov	r1, #0
   25814:	mov	r2, #10
   25818:	b	25860 <main@@Base+0xfb18>
   2581c:	lsr	r5, r1, #16
   25820:	movw	r7, #25956	; 0x6564
   25824:	movw	r3, #21870	; 0x556e
   25828:	orr	r5, r5, r6, lsl #16
   2582c:	movt	r7, #30067	; 0x7573
   25830:	eor	r3, r3, r6, lsr #16
   25834:	eor	r5, r5, r7
   25838:	orrs	r3, r5, r3
   2583c:	bne	25880 <main@@Base+0xfb38>
   25840:	mov	r1, sl
   25844:	mov	r3, #6
   25848:	str	lr, [sp]
   2584c:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   25850:	cmp	r0, sl
   25854:	beq	25874 <main@@Base+0xfb2c>
   25858:	mov	r1, #0
   2585c:	mov	r2, #255	; 0xff
   25860:	str	r2, [r9]
   25864:	str	r1, [r9, #4]
   25868:	ldr	r2, [sp, #8]
   2586c:	str	r1, [r2]
   25870:	mov	sl, r0
   25874:	mov	r0, sl
   25878:	sub	sp, fp, #28
   2587c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25880:	eor	r1, r1, r4
   25884:	eor	r3, r6, ip
   25888:	orrs	r1, r1, r3
   2588c:	bne	25874 <main@@Base+0xfb2c>
   25890:	mov	r1, sl
   25894:	mov	r3, #8
   25898:	str	lr, [sp]
   2589c:	mov	r4, #8
   258a0:	bl	34f14 <flatcc_json_parser_match_constant@@Base>
   258a4:	cmp	r0, sl
   258a8:	beq	25874 <main@@Base+0xfb2c>
   258ac:	mov	r5, #0
   258b0:	strd	r4, [r9]
   258b4:	ldr	r1, [sp, #8]
   258b8:	str	r5, [r1]
   258bc:	b	25870 <main@@Base+0xfb28>
   258c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   258c4:	add	fp, sp, #28
   258c8:	sub	sp, sp, #36	; 0x24
   258cc:	mov	r5, r0
   258d0:	mov	r0, #0
   258d4:	mov	r4, r1
   258d8:	mov	r1, #4
   258dc:	mov	r7, r3
   258e0:	mov	r8, r2
   258e4:	str	r0, [r3]
   258e8:	ldr	r0, [r5]
   258ec:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   258f0:	cmp	r0, #0
   258f4:	beq	2591c <main@@Base+0xfbd4>
   258f8:	mov	r0, r5
   258fc:	mov	r1, r4
   25900:	mov	r2, r8
   25904:	mov	r3, #33	; 0x21
   25908:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2590c:	mov	r4, r0
   25910:	mov	r0, r4
   25914:	sub	sp, fp, #28
   25918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2591c:	add	r0, sp, #28
   25920:	mov	r1, r4
   25924:	mov	r2, r8
   25928:	mov	r3, #1
   2592c:	str	r0, [sp]
   25930:	mov	r0, r5
   25934:	bl	37780 <flatcc_json_parser_prepare_unions@@Base>
   25938:	cmp	r0, r8
   2593c:	beq	258f8 <main@@Base+0xfbb0>
   25940:	cmp	r4, r8
   25944:	beq	25984 <main@@Base+0xfc3c>
   25948:	ldrb	r0, [r4]
   2594c:	cmp	r0, #123	; 0x7b
   25950:	bne	25984 <main@@Base+0xfc3c>
   25954:	add	r1, r4, #1
   25958:	sub	r0, r8, r1
   2595c:	cmp	r0, #2
   25960:	blt	259e8 <main@@Base+0xfca0>
   25964:	ldrb	r0, [r1]
   25968:	cmp	r0, #32
   2596c:	bls	259d8 <main@@Base+0xfc90>
   25970:	mov	r4, r1
   25974:	cmp	r4, r8
   25978:	mov	r2, r8
   2597c:	bne	25a04 <main@@Base+0xfcbc>
   25980:	b	25a44 <main@@Base+0xfcfc>
   25984:	mov	r0, r5
   25988:	mov	r1, r4
   2598c:	mov	r2, r8
   25990:	mov	r3, #21
   25994:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   25998:	mov	r4, r0
   2599c:	ldr	r0, [r5, #20]
   259a0:	cmp	r0, #0
   259a4:	bne	258f8 <main@@Base+0xfbb0>
   259a8:	ldr	r3, [sp, #28]
   259ac:	mov	r0, r5
   259b0:	mov	r1, r4
   259b4:	mov	r2, r8
   259b8:	bl	37810 <flatcc_json_parser_finalize_unions@@Base>
   259bc:	mov	r4, r0
   259c0:	ldr	r0, [r5]
   259c4:	bl	30680 <flatcc_builder_end_table@@Base>
   259c8:	cmp	r0, #0
   259cc:	str	r0, [r7]
   259d0:	bne	25910 <main@@Base+0xfbc8>
   259d4:	b	258f8 <main@@Base+0xfbb0>
   259d8:	bne	259e8 <main@@Base+0xfca0>
   259dc:	ldrb	r0, [r4, #2]!
   259e0:	cmp	r0, #32
   259e4:	bhi	259f8 <main@@Base+0xfcb0>
   259e8:	mov	r0, r5
   259ec:	mov	r2, r8
   259f0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   259f4:	mov	r4, r0
   259f8:	cmp	r4, r8
   259fc:	mov	r2, r8
   25a00:	beq	25a44 <main@@Base+0xfcfc>
   25a04:	ldrb	r0, [r4]
   25a08:	cmp	r0, #125	; 0x7d
   25a0c:	bne	25a40 <main@@Base+0xfcf8>
   25a10:	add	r1, r4, #1
   25a14:	sub	r0, r8, r1
   25a18:	cmp	r0, #2
   25a1c:	blt	26278 <main@@Base+0x10530>
   25a20:	ldrb	r0, [r1]
   25a24:	cmp	r0, #32
   25a28:	bhi	26230 <main@@Base+0x104e8>
   25a2c:	bne	26278 <main@@Base+0x10530>
   25a30:	ldrb	r0, [r4, #2]!
   25a34:	cmp	r0, #32
   25a38:	bhi	2599c <main@@Base+0xfc54>
   25a3c:	b	26278 <main@@Base+0x10530>
   25a40:	mov	r2, r4
   25a44:	str	r7, [sp, #20]
   25a48:	cmp	r2, r8
   25a4c:	mov	r9, r8
   25a50:	beq	25a80 <main@@Base+0xfd38>
   25a54:	ldrb	r0, [r2]
   25a58:	cmp	r0, #34	; 0x22
   25a5c:	bne	25a68 <main@@Base+0xfd20>
   25a60:	add	r9, r2, #1
   25a64:	b	25a80 <main@@Base+0xfd38>
   25a68:	mov	r1, r2
   25a6c:	mov	r0, r5
   25a70:	mov	r2, r8
   25a74:	mov	r3, #5
   25a78:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   25a7c:	mov	r9, r0
   25a80:	sub	r1, r8, r9
   25a84:	mov	r0, #8
   25a88:	cmp	r1, #8
   25a8c:	movcc	r0, r1
   25a90:	and	r0, r0, #15
   25a94:	sub	r2, r0, #1
   25a98:	cmp	r2, #7
   25a9c:	bhi	261bc <main@@Base+0x10474>
   25aa0:	str	r1, [sp, #24]
   25aa4:	add	r0, pc, #36	; 0x24
   25aa8:	mov	lr, r5
   25aac:	mov	sl, #0
   25ab0:	mov	ip, #0
   25ab4:	mov	r6, #0
   25ab8:	mov	r1, #0
   25abc:	mov	r3, #0
   25ac0:	mov	r5, #0
   25ac4:	mov	r7, #0
   25ac8:	mov	r4, #0
   25acc:	ldr	pc, [r0, r2, lsl #2]
   25ad0:	andeq	r5, r2, r4, lsr fp
   25ad4:	andeq	r5, r2, ip, lsr #22
   25ad8:	andeq	r5, r2, r4, lsr #22
   25adc:	andeq	r5, r2, ip, lsl fp
   25ae0:	andeq	r5, r2, r0, lsl fp
   25ae4:	andeq	r5, r2, r4, lsl #22
   25ae8:	strdeq	r5, [r2], -r4
   25aec:	strdeq	r5, [r2], -r0
   25af0:	ldrb	ip, [r9, #7]
   25af4:	ldrb	r0, [r9, #6]
   25af8:	mov	r6, sl
   25afc:	orr	r0, ip, r0, lsl #8
   25b00:	mov	sl, r0
   25b04:	ldrb	r0, [r9, #5]
   25b08:	mov	r1, r6
   25b0c:	orr	sl, sl, r0, lsl #16
   25b10:	ldrb	r0, [r9, #4]
   25b14:	mov	r3, r1
   25b18:	orr	sl, sl, r0, lsl #24
   25b1c:	ldrb	r0, [r9, #3]
   25b20:	orr	r5, r0, r3
   25b24:	ldrb	r0, [r9, #2]
   25b28:	orr	r7, r5, r0, lsl #8
   25b2c:	ldrb	r0, [r9, #1]
   25b30:	orr	r4, r7, r0, lsl #16
   25b34:	movw	r2, #30976	; 0x7900
   25b38:	movt	r2, #24942	; 0x616e
   25b3c:	add	r0, r2, #95	; 0x5f
   25b40:	eor	r1, sl, r0
   25b44:	ldrb	r0, [r9]
   25b48:	orr	r4, r4, r0, lsl #24
   25b4c:	movw	r0, #28281	; 0x6e79
   25b50:	movt	r0, #28001	; 0x6d61
   25b54:	eor	r0, r4, r0
   25b58:	orrs	r1, r1, r0
   25b5c:	bne	25c24 <main@@Base+0xfedc>
   25b60:	add	r6, r9, #8
   25b64:	mov	r1, #8
   25b68:	ldr	r7, [sp, #20]
   25b6c:	mov	r5, lr
   25b70:	sub	r0, r8, r6
   25b74:	cmp	r0, #8
   25b78:	movcc	r1, r0
   25b7c:	and	r1, r1, #15
   25b80:	sub	r2, r1, #1
   25b84:	cmp	r2, #7
   25b88:	bhi	25e30 <main@@Base+0x100e8>
   25b8c:	add	r3, pc, #4
   25b90:	mov	r1, #0
   25b94:	ldr	pc, [r3, r2, lsl #2]
   25b98:	andeq	r5, r2, ip, asr #23
   25b9c:	andeq	r5, r2, r4, asr #23
   25ba0:			; <UNDEFINED> instruction: 0x00025bbc
   25ba4:			; <UNDEFINED> instruction: 0x00025bb8
   25ba8:			; <UNDEFINED> instruction: 0x00025bb8
   25bac:			; <UNDEFINED> instruction: 0x00025bb8
   25bb0:			; <UNDEFINED> instruction: 0x00025bb8
   25bb4:			; <UNDEFINED> instruction: 0x00025bb8
   25bb8:	ldrb	r1, [r9, #11]
   25bbc:	ldrb	r2, [r9, #10]
   25bc0:	orr	r1, r1, r2, lsl #8
   25bc4:	ldrb	r2, [r9, #9]
   25bc8:	orr	r1, r1, r2, lsl #16
   25bcc:	ldrb	r2, [r6]
   25bd0:	orr	r1, r1, r2, lsl #24
   25bd4:	movw	r2, #28773	; 0x7065
   25bd8:	movt	r2, #29817	; 0x7479
   25bdc:	teq	r1, r2
   25be0:	bne	25e30 <main@@Base+0x100e8>
   25be4:	cmp	r0, #5
   25be8:	blt	25e30 <main@@Base+0x100e8>
   25bec:	ldrb	r0, [r9, #12]
   25bf0:	cmp	r0, #34	; 0x22
   25bf4:	bne	25e30 <main@@Base+0x100e8>
   25bf8:	add	r1, r9, #13
   25bfc:	sub	r0, r8, r1
   25c00:	cmp	r0, #2
   25c04:	blt	25de4 <main@@Base+0x1009c>
   25c08:	ldrb	r0, [r1]
   25c0c:	cmp	r0, #32
   25c10:	bls	25dd4 <main@@Base+0x1008c>
   25c14:	mov	r9, r1
   25c18:	cmp	r9, r8
   25c1c:	bne	25dfc <main@@Base+0x100b4>
   25c20:	b	25e3c <main@@Base+0x100f4>
   25c24:	ldr	r6, [sp, #24]
   25c28:	bic	r1, sl, #255	; 0xff
   25c2c:	mov	r5, lr
   25c30:	eor	r1, r1, r2
   25c34:	orrs	r0, r1, r0
   25c38:	bne	25ce8 <main@@Base+0xffa0>
   25c3c:	cmp	r6, #8
   25c40:	mov	r1, r9
   25c44:	blt	25f70 <main@@Base+0x10228>
   25c48:	ldrb	r0, [r9, #7]
   25c4c:	mov	r1, r9
   25c50:	cmp	r0, #34	; 0x22
   25c54:	bne	25f70 <main@@Base+0x10228>
   25c58:	add	r2, r9, #8
   25c5c:	sub	r0, r8, r2
   25c60:	cmp	r0, #2
   25c64:	blt	25c98 <main@@Base+0xff50>
   25c68:	ldrb	r0, [r2]
   25c6c:	cmp	r0, #32
   25c70:	bls	25c84 <main@@Base+0xff3c>
   25c74:	mov	r1, r2
   25c78:	cmp	r1, r8
   25c7c:	bne	25cb4 <main@@Base+0xff6c>
   25c80:	b	25dc0 <main@@Base+0x10078>
   25c84:	bne	25c98 <main@@Base+0xff50>
   25c88:	mov	r1, r9
   25c8c:	ldrb	r0, [r1, #9]!
   25c90:	cmp	r0, #32
   25c94:	bhi	25cac <main@@Base+0xff64>
   25c98:	mov	r1, r2
   25c9c:	mov	r0, r5
   25ca0:	mov	r2, r8
   25ca4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   25ca8:	mov	r1, r0
   25cac:	cmp	r1, r8
   25cb0:	beq	25dc0 <main@@Base+0x10078>
   25cb4:	ldrb	r0, [r1]
   25cb8:	cmp	r0, #58	; 0x3a
   25cbc:	bne	25dc0 <main@@Base+0x10078>
   25cc0:	add	r2, r1, #1
   25cc4:	sub	r0, r8, r2
   25cc8:	cmp	r0, #2
   25ccc:	blt	25f5c <main@@Base+0x10214>
   25cd0:	ldrb	r0, [r2]
   25cd4:	cmp	r0, #32
   25cd8:	bls	25f4c <main@@Base+0x10204>
   25cdc:	mov	r1, r2
   25ce0:	cmp	r9, r1
   25ce4:	bne	25f78 <main@@Base+0x10230>
   25ce8:	lsr	r1, sl, #16
   25cec:	movw	r2, #27000	; 0x6978
   25cf0:	movw	r0, #28786	; 0x7072
   25cf4:	orr	r1, r1, r4, lsl #16
   25cf8:	movt	r2, #25958	; 0x6566
   25cfc:	eor	r0, r0, r4, lsr #16
   25d00:	eor	r1, r1, r2
   25d04:	orrs	r0, r1, r0
   25d08:	bne	25d58 <main@@Base+0x10010>
   25d0c:	ldr	r7, [sp, #20]
   25d10:	cmp	r6, #7
   25d14:	mov	r1, r9
   25d18:	blt	26108 <main@@Base+0x103c0>
   25d1c:	ldrb	r0, [r9, #6]
   25d20:	mov	r1, r9
   25d24:	cmp	r0, #34	; 0x22
   25d28:	bne	26108 <main@@Base+0x103c0>
   25d2c:	add	r2, r9, #7
   25d30:	sub	r0, r8, r2
   25d34:	cmp	r0, #2
   25d38:	blt	25e68 <main@@Base+0x10120>
   25d3c:	ldrb	r0, [r2]
   25d40:	cmp	r0, #32
   25d44:	bls	25e54 <main@@Base+0x1010c>
   25d48:	mov	r1, r2
   25d4c:	cmp	r1, r8
   25d50:	bne	25e84 <main@@Base+0x1013c>
   25d54:	b	25ebc <main@@Base+0x10174>
   25d58:	movw	r0, #30313	; 0x7669
   25d5c:	ldr	r7, [sp, #20]
   25d60:	and	r1, sl, #-16777216	; 0xff000000
   25d64:	movt	r0, #28015	; 0x6d6f
   25d68:	eor	r1, r1, #1694498816	; 0x65000000
   25d6c:	eor	r0, r4, r0
   25d70:	orrs	r0, r1, r0
   25d74:	bne	261bc <main@@Base+0x10474>
   25d78:	cmp	r6, #6
   25d7c:	mov	r1, r9
   25d80:	blt	2616c <main@@Base+0x10424>
   25d84:	ldrb	r0, [r9, #5]
   25d88:	mov	r1, r9
   25d8c:	cmp	r0, #34	; 0x22
   25d90:	bne	2616c <main@@Base+0x10424>
   25d94:	add	r2, r9, #6
   25d98:	sub	r0, r8, r2
   25d9c:	cmp	r0, #2
   25da0:	blt	25ee4 <main@@Base+0x1019c>
   25da4:	ldrb	r0, [r2]
   25da8:	cmp	r0, #32
   25dac:	bls	25ed0 <main@@Base+0x10188>
   25db0:	mov	r1, r2
   25db4:	cmp	r1, r8
   25db8:	bne	25f00 <main@@Base+0x101b8>
   25dbc:	b	25f38 <main@@Base+0x101f0>
   25dc0:	mov	r0, r5
   25dc4:	mov	r2, r8
   25dc8:	mov	r3, #4
   25dcc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   25dd0:	b	25f6c <main@@Base+0x10224>
   25dd4:	bne	25de4 <main@@Base+0x1009c>
   25dd8:	ldrb	r0, [r9, #14]!
   25ddc:	cmp	r0, #32
   25de0:	bhi	25df4 <main@@Base+0x100ac>
   25de4:	mov	r0, r5
   25de8:	mov	r2, r8
   25dec:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   25df0:	mov	r9, r0
   25df4:	cmp	r9, r8
   25df8:	beq	25e3c <main@@Base+0x100f4>
   25dfc:	ldrb	r0, [r9]
   25e00:	cmp	r0, #58	; 0x3a
   25e04:	bne	25e3c <main@@Base+0x100f4>
   25e08:	add	r1, r9, #1
   25e0c:	sub	r0, r8, r1
   25e10:	cmp	r0, #2
   25e14:	blt	26070 <main@@Base+0x10328>
   25e18:	ldrb	r0, [r1]
   25e1c:	cmp	r0, #32
   25e20:	bls	26060 <main@@Base+0x10318>
   25e24:	mov	r9, r1
   25e28:	cmp	r6, r9
   25e2c:	bne	26088 <main@@Base+0x10340>
   25e30:	mov	r0, r5
   25e34:	mov	r1, r6
   25e38:	b	261c4 <main@@Base+0x1047c>
   25e3c:	mov	r0, r5
   25e40:	mov	r1, r9
   25e44:	mov	r2, r8
   25e48:	mov	r3, #4
   25e4c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   25e50:	b	2607c <main@@Base+0x10334>
   25e54:	bne	25e68 <main@@Base+0x10120>
   25e58:	mov	r1, r9
   25e5c:	ldrb	r0, [r1, #8]!
   25e60:	cmp	r0, #32
   25e64:	bhi	25e7c <main@@Base+0x10134>
   25e68:	mov	r1, r2
   25e6c:	mov	r0, r5
   25e70:	mov	r2, r8
   25e74:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   25e78:	mov	r1, r0
   25e7c:	cmp	r1, r8
   25e80:	beq	25ebc <main@@Base+0x10174>
   25e84:	ldrb	r0, [r1]
   25e88:	cmp	r0, #58	; 0x3a
   25e8c:	bne	25ebc <main@@Base+0x10174>
   25e90:	add	r2, r1, #1
   25e94:	sub	r0, r8, r2
   25e98:	cmp	r0, #2
   25e9c:	blt	260f4 <main@@Base+0x103ac>
   25ea0:	ldrb	r0, [r2]
   25ea4:	cmp	r0, #32
   25ea8:	bls	260e4 <main@@Base+0x1039c>
   25eac:	mov	r1, r2
   25eb0:	cmp	r9, r1
   25eb4:	bne	26110 <main@@Base+0x103c8>
   25eb8:	b	261bc <main@@Base+0x10474>
   25ebc:	mov	r0, r5
   25ec0:	mov	r2, r8
   25ec4:	mov	r3, #4
   25ec8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   25ecc:	b	26104 <main@@Base+0x103bc>
   25ed0:	bne	25ee4 <main@@Base+0x1019c>
   25ed4:	mov	r1, r9
   25ed8:	ldrb	r0, [r1, #7]!
   25edc:	cmp	r0, #32
   25ee0:	bhi	25ef8 <main@@Base+0x101b0>
   25ee4:	mov	r1, r2
   25ee8:	mov	r0, r5
   25eec:	mov	r2, r8
   25ef0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   25ef4:	mov	r1, r0
   25ef8:	cmp	r1, r8
   25efc:	beq	25f38 <main@@Base+0x101f0>
   25f00:	ldrb	r0, [r1]
   25f04:	cmp	r0, #58	; 0x3a
   25f08:	bne	25f38 <main@@Base+0x101f0>
   25f0c:	add	r2, r1, #1
   25f10:	sub	r0, r8, r2
   25f14:	cmp	r0, #2
   25f18:	blt	26158 <main@@Base+0x10410>
   25f1c:	ldrb	r0, [r2]
   25f20:	cmp	r0, #32
   25f24:	bls	26148 <main@@Base+0x10400>
   25f28:	mov	r1, r2
   25f2c:	cmp	r9, r1
   25f30:	bne	26174 <main@@Base+0x1042c>
   25f34:	b	261bc <main@@Base+0x10474>
   25f38:	mov	r0, r5
   25f3c:	mov	r2, r8
   25f40:	mov	r3, #4
   25f44:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   25f48:	b	26168 <main@@Base+0x10420>
   25f4c:	bne	25f5c <main@@Base+0x10214>
   25f50:	ldrb	r0, [r1, #2]!
   25f54:	cmp	r0, #32
   25f58:	bhi	25f70 <main@@Base+0x10228>
   25f5c:	mov	r1, r2
   25f60:	mov	r0, r5
   25f64:	mov	r2, r8
   25f68:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   25f6c:	mov	r1, r0
   25f70:	cmp	r9, r1
   25f74:	beq	25ce8 <main@@Base+0xffa0>
   25f78:	ldr	r0, [sp, #28]
   25f7c:	mov	r2, #3
   25f80:	mov	r3, #0
   25f84:	str	r2, [sp]
   25f88:	mov	r2, r8
   25f8c:	str	r0, [sp, #4]
   25f90:	movw	r0, #11304	; 0x2c28
   25f94:	movt	r0, #2
   25f98:	str	r0, [sp, #8]
   25f9c:	mov	r0, r5
   25fa0:	bl	37f90 <flatcc_json_parser_union_vector@@Base>
   25fa4:	ldr	r7, [sp, #20]
   25fa8:	mov	r4, r0
   25fac:	sub	r0, r8, r4
   25fb0:	cmp	r0, #2
   25fb4:	blt	261dc <main@@Base+0x10494>
   25fb8:	ldrb	r0, [r4]
   25fbc:	cmp	r0, #32
   25fc0:	bls	26014 <main@@Base+0x102cc>
   25fc4:	mov	r2, r4
   25fc8:	cmp	r2, r8
   25fcc:	beq	261f8 <main@@Base+0x104b0>
   25fd0:	ldrb	r0, [r2]
   25fd4:	cmp	r0, #44	; 0x2c
   25fd8:	bne	2620c <main@@Base+0x104c4>
   25fdc:	add	r1, r2, #1
   25fe0:	sub	r0, r8, r1
   25fe4:	cmp	r0, #2
   25fe8:	blt	26044 <main@@Base+0x102fc>
   25fec:	ldrb	r0, [r1]
   25ff0:	cmp	r0, #32
   25ff4:	bls	26034 <main@@Base+0x102ec>
   25ff8:	mov	r2, r1
   25ffc:	cmp	r2, r8
   26000:	beq	26244 <main@@Base+0x104fc>
   26004:	ldrb	r0, [r2]
   26008:	cmp	r0, #125	; 0x7d
   2600c:	bne	25a48 <main@@Base+0xfd00>
   26010:	b	26214 <main@@Base+0x104cc>
   26014:	bne	261dc <main@@Base+0x10494>
   26018:	mov	r2, r4
   2601c:	ldrb	r0, [r2, #1]!
   26020:	cmp	r0, #32
   26024:	bls	261dc <main@@Base+0x10494>
   26028:	cmp	r2, r8
   2602c:	bne	25fd0 <main@@Base+0x10288>
   26030:	b	261f8 <main@@Base+0x104b0>
   26034:	bne	26044 <main@@Base+0x102fc>
   26038:	ldrb	r0, [r2, #2]!
   2603c:	cmp	r0, #32
   26040:	bhi	26054 <main@@Base+0x1030c>
   26044:	mov	r0, r5
   26048:	mov	r2, r8
   2604c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26050:	mov	r2, r0
   26054:	cmp	r2, r8
   26058:	bne	26004 <main@@Base+0x102bc>
   2605c:	b	26244 <main@@Base+0x104fc>
   26060:	bne	26070 <main@@Base+0x10328>
   26064:	ldrb	r0, [r9, #2]!
   26068:	cmp	r0, #32
   2606c:	bhi	26080 <main@@Base+0x10338>
   26070:	mov	r0, r5
   26074:	mov	r2, r8
   26078:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2607c:	mov	r9, r0
   26080:	cmp	r6, r9
   26084:	beq	25e30 <main@@Base+0x100e8>
   26088:	ldr	r0, [sp, #28]
   2608c:	mov	r1, #3
   26090:	mov	r2, r8
   26094:	mov	r3, #0
   26098:	str	r1, [sp]
   2609c:	mov	r1, r9
   260a0:	str	r0, [sp, #4]
   260a4:	movw	r0, #53368	; 0xd078
   260a8:	movt	r0, #5
   260ac:	str	r0, [sp, #8]
   260b0:	movw	r0, #11304	; 0x2c28
   260b4:	movt	r0, #2
   260b8:	str	r0, [sp, #12]
   260bc:	movw	r0, #25224	; 0x6288
   260c0:	movt	r0, #2
   260c4:	str	r0, [sp, #16]
   260c8:	mov	r0, r5
   260cc:	bl	38504 <flatcc_json_parser_union_type_vector@@Base>
   260d0:	mov	r4, r0
   260d4:	sub	r0, r8, r4
   260d8:	cmp	r0, #2
   260dc:	bge	25fb8 <main@@Base+0x10270>
   260e0:	b	261dc <main@@Base+0x10494>
   260e4:	bne	260f4 <main@@Base+0x103ac>
   260e8:	ldrb	r0, [r1, #2]!
   260ec:	cmp	r0, #32
   260f0:	bhi	26108 <main@@Base+0x103c0>
   260f4:	mov	r1, r2
   260f8:	mov	r0, r5
   260fc:	mov	r2, r8
   26100:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26104:	mov	r1, r0
   26108:	cmp	r9, r1
   2610c:	beq	261bc <main@@Base+0x10474>
   26110:	mov	r0, r5
   26114:	mov	r2, r8
   26118:	add	r3, sp, #32
   2611c:	bl	2629c <main@@Base+0x10554>
   26120:	ldr	r6, [sp, #32]
   26124:	mov	r4, r0
   26128:	cmp	r6, #0
   2612c:	beq	258f8 <main@@Base+0xfbb0>
   26130:	ldr	r0, [r5]
   26134:	mov	r1, #0
   26138:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   2613c:	cmp	r0, #0
   26140:	bne	261a8 <main@@Base+0x10460>
   26144:	b	258f8 <main@@Base+0xfbb0>
   26148:	bne	26158 <main@@Base+0x10410>
   2614c:	ldrb	r0, [r1, #2]!
   26150:	cmp	r0, #32
   26154:	bhi	2616c <main@@Base+0x10424>
   26158:	mov	r1, r2
   2615c:	mov	r0, r5
   26160:	mov	r2, r8
   26164:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26168:	mov	r1, r0
   2616c:	cmp	r9, r1
   26170:	beq	261bc <main@@Base+0x10474>
   26174:	mov	r0, r5
   26178:	mov	r2, r8
   2617c:	add	r3, sp, #32
   26180:	bl	297a0 <main@@Base+0x13a58>
   26184:	ldr	r6, [sp, #32]
   26188:	mov	r4, r0
   2618c:	cmp	r6, #0
   26190:	beq	258f8 <main@@Base+0xfbb0>
   26194:	ldr	r0, [r5]
   26198:	mov	r1, #1
   2619c:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   261a0:	cmp	r0, #0
   261a4:	beq	258f8 <main@@Base+0xfbb0>
   261a8:	str	r6, [r0]
   261ac:	sub	r0, r8, r4
   261b0:	cmp	r0, #2
   261b4:	bge	25fb8 <main@@Base+0x10270>
   261b8:	b	261dc <main@@Base+0x10494>
   261bc:	mov	r0, r5
   261c0:	mov	r1, r9
   261c4:	mov	r2, r8
   261c8:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   261cc:	mov	r4, r0
   261d0:	sub	r0, r8, r4
   261d4:	cmp	r0, #2
   261d8:	bge	25fb8 <main@@Base+0x10270>
   261dc:	mov	r0, r5
   261e0:	mov	r1, r4
   261e4:	mov	r2, r8
   261e8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   261ec:	mov	r2, r0
   261f0:	cmp	r2, r8
   261f4:	bne	25fd0 <main@@Base+0x10288>
   261f8:	mov	r4, r8
   261fc:	ldr	r0, [r5, #20]
   26200:	cmp	r0, #0
   26204:	bne	258f8 <main@@Base+0xfbb0>
   26208:	b	259a8 <main@@Base+0xfc60>
   2620c:	cmp	r0, #125	; 0x7d
   26210:	bne	26250 <main@@Base+0x10508>
   26214:	add	r1, r2, #1
   26218:	sub	r0, r8, r1
   2621c:	cmp	r0, #2
   26220:	blt	26278 <main@@Base+0x10530>
   26224:	ldrb	r0, [r1]
   26228:	cmp	r0, #32
   2622c:	bls	26264 <main@@Base+0x1051c>
   26230:	mov	r4, r1
   26234:	ldr	r0, [r5, #20]
   26238:	cmp	r0, #0
   2623c:	bne	258f8 <main@@Base+0xfbb0>
   26240:	b	259a8 <main@@Base+0xfc60>
   26244:	mov	r0, r5
   26248:	mov	r1, r8
   2624c:	b	26258 <main@@Base+0x10510>
   26250:	mov	r0, r5
   26254:	mov	r1, r2
   26258:	mov	r2, r8
   2625c:	mov	r3, #10
   26260:	b	25994 <main@@Base+0xfc4c>
   26264:	bne	26278 <main@@Base+0x10530>
   26268:	ldrb	r0, [r2, #2]!
   2626c:	cmp	r0, #32
   26270:	mov	r4, r2
   26274:	bhi	2599c <main@@Base+0xfc54>
   26278:	mov	r0, r5
   2627c:	mov	r2, r8
   26280:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26284:	b	25998 <main@@Base+0xfc50>
   26288:	mov	r1, #0
   2628c:	cmp	r0, #5
   26290:	movwcc	r1, #1
   26294:	mov	r0, r1
   26298:	bx	lr
   2629c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   262a0:	add	fp, sp, #28
   262a4:	sub	sp, sp, #68	; 0x44
   262a8:	mov	r7, r0
   262ac:	mov	r0, #0
   262b0:	mov	r8, r1
   262b4:	mov	r1, #3
   262b8:	mov	r4, r3
   262bc:	mov	r9, r2
   262c0:	str	r0, [r3]
   262c4:	ldr	r0, [r7]
   262c8:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   262cc:	cmp	r0, #0
   262d0:	bne	2977c <main@@Base+0x13a34>
   262d4:	cmp	r8, r9
   262d8:	beq	26318 <main@@Base+0x105d0>
   262dc:	ldrb	r0, [r8]
   262e0:	cmp	r0, #123	; 0x7b
   262e4:	bne	26318 <main@@Base+0x105d0>
   262e8:	add	r1, r8, #1
   262ec:	sub	r0, r9, r1
   262f0:	cmp	r0, #2
   262f4:	blt	26354 <main@@Base+0x1060c>
   262f8:	ldrb	r0, [r1]
   262fc:	cmp	r0, #32
   26300:	bls	26344 <main@@Base+0x105fc>
   26304:	mov	r8, r1
   26308:	cmp	r8, r9
   2630c:	mov	r2, r9
   26310:	bne	26370 <main@@Base+0x10628>
   26314:	b	263b4 <main@@Base+0x1066c>
   26318:	mov	r0, r7
   2631c:	mov	r1, r8
   26320:	mov	r2, r9
   26324:	mov	r3, #21
   26328:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2632c:	mov	r8, r0
   26330:	add	r0, r7, #20
   26334:	ldr	r0, [r0]
   26338:	cmp	r0, #0
   2633c:	bne	2977c <main@@Base+0x13a34>
   26340:	b	296e4 <main@@Base+0x1399c>
   26344:	bne	26354 <main@@Base+0x1060c>
   26348:	ldrb	r0, [r8, #2]!
   2634c:	cmp	r0, #32
   26350:	bhi	26364 <main@@Base+0x1061c>
   26354:	mov	r0, r7
   26358:	mov	r2, r9
   2635c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26360:	mov	r8, r0
   26364:	cmp	r8, r9
   26368:	mov	r2, r9
   2636c:	beq	263b4 <main@@Base+0x1066c>
   26370:	ldrb	r0, [r8]
   26374:	cmp	r0, #125	; 0x7d
   26378:	bne	263b0 <main@@Base+0x10668>
   2637c:	add	r1, r8, #1
   26380:	sub	r0, r9, r1
   26384:	cmp	r0, #2
   26388:	blt	29714 <main@@Base+0x139cc>
   2638c:	ldrb	r0, [r1]
   26390:	cmp	r0, #32
   26394:	bls	29704 <main@@Base+0x139bc>
   26398:	mov	r8, r1
   2639c:	add	r0, r7, #20
   263a0:	ldr	r0, [r0]
   263a4:	cmp	r0, #0
   263a8:	bne	2977c <main@@Base+0x13a34>
   263ac:	b	296e4 <main@@Base+0x1399c>
   263b0:	mov	r2, r8
   263b4:	add	r0, r7, #20
   263b8:	movw	r1, #25186	; 0x6262
   263bc:	mov	r8, #8
   263c0:	str	r9, [sp, #24]
   263c4:	str	r7, [sp, #32]
   263c8:	str	r4, [sp, #28]
   263cc:	str	r0, [sp, #20]
   263d0:	movw	r0, #53636	; 0xd184
   263d4:	movt	r1, #25186	; 0x6262
   263d8:	movt	r0, #5
   263dc:	add	r0, r0, #96	; 0x60
   263e0:	str	r0, [sp, #8]
   263e4:	movw	r0, #257	; 0x101
   263e8:	movt	r0, #257	; 0x101
   263ec:	add	r0, r1, r0
   263f0:	str	r0, [sp, #16]
   263f4:	movw	r0, #514	; 0x202
   263f8:	movt	r0, #514	; 0x202
   263fc:	add	r0, r1, r0
   26400:	str	r0, [sp, #12]
   26404:	b	29128 <main@@Base+0x133e0>
   26408:	bne	26418 <main@@Base+0x106d0>
   2640c:	ldrb	r0, [r2, #2]!
   26410:	cmp	r0, #32
   26414:	bhi	26428 <main@@Base+0x106e0>
   26418:	mov	r0, r7
   2641c:	mov	r2, r9
   26420:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26424:	mov	r2, r0
   26428:	cmp	r2, r9
   2642c:	bne	295e0 <main@@Base+0x13898>
   26430:	b	29658 <main@@Base+0x13910>
   26434:	mov	r0, r5
   26438:	mov	r1, sl
   2643c:	mov	r2, r4
   26440:	mov	r3, #4
   26444:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   26448:	b	26594 <main@@Base+0x1084c>
   2644c:	ldr	r4, [sp, #24]
   26450:	bne	26464 <main@@Base+0x1071c>
   26454:	mov	r8, sl
   26458:	ldrb	r0, [r8, #23]!
   2645c:	cmp	r0, #32
   26460:	bhi	26484 <main@@Base+0x1073c>
   26464:	mov	r0, r2
   26468:	mov	r8, r2
   2646c:	mov	r2, r4
   26470:	mov	r7, ip
   26474:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26478:	mov	r2, r8
   2647c:	mov	ip, r7
   26480:	mov	r8, r0
   26484:	cmp	r8, r4
   26488:	str	ip, [sp, #4]
   2648c:	beq	264d0 <main@@Base+0x10788>
   26490:	ldrb	r0, [r8]
   26494:	cmp	r0, #58	; 0x3a
   26498:	bne	264d0 <main@@Base+0x10788>
   2649c:	ldr	r0, [sp, #24]
   264a0:	add	r1, r8, #1
   264a4:	sub	r0, r0, r1
   264a8:	cmp	r0, #2
   264ac:	blt	2666c <main@@Base+0x10924>
   264b0:	ldrb	r0, [r1]
   264b4:	cmp	r0, #32
   264b8:	bls	2665c <main@@Base+0x10914>
   264bc:	mov	r8, r1
   264c0:	ldr	ip, [sp, #4]
   264c4:	cmp	ip, r8
   264c8:	bne	26688 <main@@Base+0x10940>
   264cc:	b	29458 <main@@Base+0x13710>
   264d0:	mov	r0, r2
   264d4:	ldr	r2, [sp, #24]
   264d8:	mov	r1, r8
   264dc:	mov	r3, #4
   264e0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   264e4:	b	26678 <main@@Base+0x10930>
   264e8:	bne	264f8 <main@@Base+0x107b0>
   264ec:	ldrb	r0, [sl, #24]!
   264f0:	cmp	r0, #32
   264f4:	bhi	26510 <main@@Base+0x107c8>
   264f8:	mov	r0, r7
   264fc:	mov	r2, r9
   26500:	mov	r4, ip
   26504:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26508:	mov	ip, r4
   2650c:	mov	sl, r0
   26510:	mov	r4, ip
   26514:	cmp	sl, r9
   26518:	beq	26560 <main@@Base+0x10818>
   2651c:	ldrb	r0, [sl]
   26520:	cmp	r0, #58	; 0x3a
   26524:	bne	26560 <main@@Base+0x10818>
   26528:	add	r1, sl, #1
   2652c:	sub	r0, r9, r1
   26530:	cmp	r0, #2
   26534:	blt	26844 <main@@Base+0x10afc>
   26538:	ldrb	r0, [r1]
   2653c:	cmp	r0, #32
   26540:	bls	26834 <main@@Base+0x10aec>
   26544:	mov	sl, r1
   26548:	mov	ip, r4
   2654c:	cmp	r4, sl
   26550:	bne	26860 <main@@Base+0x10b18>
   26554:	mov	r0, r7
   26558:	mov	r1, ip
   2655c:	b	29578 <main@@Base+0x13830>
   26560:	mov	r0, r7
   26564:	mov	r1, sl
   26568:	mov	r2, r9
   2656c:	mov	r3, #4
   26570:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   26574:	b	26850 <main@@Base+0x10b08>
   26578:	bne	26588 <main@@Base+0x10840>
   2657c:	ldrb	r0, [sl, #2]!
   26580:	cmp	r0, #32
   26584:	bhi	26598 <main@@Base+0x10850>
   26588:	mov	r0, r5
   2658c:	mov	r2, r4
   26590:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26594:	mov	sl, r0
   26598:	mov	ip, r6
   2659c:	cmp	r6, sl
   265a0:	beq	29568 <main@@Base+0x13820>
   265a4:	ldr	r7, [sp, #32]
   265a8:	mov	r1, #2
   265ac:	ldr	r0, [r7]
   265b0:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   265b4:	cmp	r0, #0
   265b8:	bne	29738 <main@@Base+0x139f0>
   265bc:	ldr	r9, [sp, #24]
   265c0:	cmp	sl, r9
   265c4:	beq	26604 <main@@Base+0x108bc>
   265c8:	ldrb	r0, [sl]
   265cc:	cmp	r0, #123	; 0x7b
   265d0:	bne	26604 <main@@Base+0x108bc>
   265d4:	add	r1, sl, #1
   265d8:	sub	r0, r9, r1
   265dc:	cmp	r0, #2
   265e0:	blt	26764 <main@@Base+0x10a1c>
   265e4:	ldrb	r0, [r1]
   265e8:	cmp	r0, #32
   265ec:	bls	26754 <main@@Base+0x10a0c>
   265f0:	mov	sl, r1
   265f4:	cmp	sl, r9
   265f8:	mov	r2, r9
   265fc:	bne	26780 <main@@Base+0x10a38>
   26600:	b	26a98 <main@@Base+0x10d50>
   26604:	mov	r0, r7
   26608:	mov	r1, sl
   2660c:	mov	r2, r9
   26610:	mov	r3, #21
   26614:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   26618:	mov	sl, r0
   2661c:	ldr	r0, [sp, #20]
   26620:	ldr	r0, [r0]
   26624:	cmp	r0, #0
   26628:	bne	29764 <main@@Base+0x13a1c>
   2662c:	ldr	r0, [r7]
   26630:	bl	30680 <flatcc_builder_end_table@@Base>
   26634:	mov	r1, r7
   26638:	cmp	r0, #0
   2663c:	beq	29724 <main@@Base+0x139dc>
   26640:	mov	r7, r0
   26644:	ldr	r0, [r1]
   26648:	mov	r1, #1
   2664c:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   26650:	cmp	r0, #0
   26654:	bne	2690c <main@@Base+0x10bc4>
   26658:	b	2972c <main@@Base+0x139e4>
   2665c:	bne	2666c <main@@Base+0x10924>
   26660:	ldrb	r0, [r8, #2]!
   26664:	cmp	r0, #32
   26668:	bhi	2667c <main@@Base+0x10934>
   2666c:	mov	r0, r2
   26670:	ldr	r2, [sp, #24]
   26674:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26678:	mov	r8, r0
   2667c:	ldr	ip, [sp, #4]
   26680:	cmp	ip, r8
   26684:	beq	29458 <main@@Base+0x13710>
   26688:	ldr	r7, [sp, #32]
   2668c:	mov	r1, #9
   26690:	ldr	r0, [r7]
   26694:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   26698:	cmp	r0, #0
   2669c:	bne	29740 <main@@Base+0x139f8>
   266a0:	ldr	r9, [sp, #24]
   266a4:	cmp	r8, r9
   266a8:	beq	266e8 <main@@Base+0x109a0>
   266ac:	ldrb	r0, [r8]
   266b0:	cmp	r0, #123	; 0x7b
   266b4:	bne	266e8 <main@@Base+0x109a0>
   266b8:	add	r1, r8, #1
   266bc:	sub	r0, r9, r1
   266c0:	cmp	r0, #2
   266c4:	blt	267d4 <main@@Base+0x10a8c>
   266c8:	ldrb	r0, [r1]
   266cc:	cmp	r0, #32
   266d0:	bls	267c4 <main@@Base+0x10a7c>
   266d4:	mov	r8, r1
   266d8:	cmp	r8, r9
   266dc:	mov	r2, r9
   266e0:	bne	267f0 <main@@Base+0x10aa8>
   266e4:	b	27cbc <main@@Base+0x11f74>
   266e8:	mov	r0, r7
   266ec:	mov	r1, r8
   266f0:	mov	r2, r9
   266f4:	mov	r3, #21
   266f8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   266fc:	mov	r8, r0
   26700:	ldr	r0, [sp, #20]
   26704:	ldr	r0, [r0]
   26708:	cmp	r0, #0
   2670c:	bne	29750 <main@@Base+0x13a08>
   26710:	ldr	r0, [r7]
   26714:	bl	30680 <flatcc_builder_end_table@@Base>
   26718:	cmp	r0, #0
   2671c:	beq	29750 <main@@Base+0x13a08>
   26720:	mov	r4, r0
   26724:	ldr	r0, [r7]
   26728:	mov	r1, #0
   2672c:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   26730:	cmp	r0, #0
   26734:	beq	2977c <main@@Base+0x13a34>
   26738:	mov	sl, r8
   2673c:	str	r4, [r0]
   26740:	mov	r8, #8
   26744:	sub	r0, r9, sl
   26748:	cmp	r0, #2
   2674c:	bge	29590 <main@@Base+0x13848>
   26750:	b	29604 <main@@Base+0x138bc>
   26754:	bne	26764 <main@@Base+0x10a1c>
   26758:	ldrb	r0, [sl, #2]!
   2675c:	cmp	r0, #32
   26760:	bhi	26774 <main@@Base+0x10a2c>
   26764:	mov	r0, r7
   26768:	mov	r2, r9
   2676c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26770:	mov	sl, r0
   26774:	cmp	sl, r9
   26778:	mov	r2, r9
   2677c:	beq	26a98 <main@@Base+0x10d50>
   26780:	ldrb	r0, [sl]
   26784:	cmp	r0, #125	; 0x7d
   26788:	bne	267bc <main@@Base+0x10a74>
   2678c:	add	r1, sl, #1
   26790:	sub	r0, r9, r1
   26794:	cmp	r0, #2
   26798:	blt	2723c <main@@Base+0x114f4>
   2679c:	ldrb	r0, [r1]
   267a0:	cmp	r0, #32
   267a4:	bhi	271f0 <main@@Base+0x114a8>
   267a8:	bne	2723c <main@@Base+0x114f4>
   267ac:	ldrb	r0, [sl, #2]!
   267b0:	cmp	r0, #32
   267b4:	bhi	2661c <main@@Base+0x108d4>
   267b8:	b	2723c <main@@Base+0x114f4>
   267bc:	mov	r2, sl
   267c0:	b	26a98 <main@@Base+0x10d50>
   267c4:	bne	267d4 <main@@Base+0x10a8c>
   267c8:	ldrb	r0, [r8, #2]!
   267cc:	cmp	r0, #32
   267d0:	bhi	267e4 <main@@Base+0x10a9c>
   267d4:	mov	r0, r7
   267d8:	mov	r2, r9
   267dc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   267e0:	mov	r8, r0
   267e4:	cmp	r8, r9
   267e8:	mov	r2, r9
   267ec:	beq	27cbc <main@@Base+0x11f74>
   267f0:	ldrb	r0, [r8]
   267f4:	cmp	r0, #125	; 0x7d
   267f8:	bne	2682c <main@@Base+0x10ae4>
   267fc:	add	r1, r8, #1
   26800:	sub	r0, r9, r1
   26804:	cmp	r0, #2
   26808:	blt	29118 <main@@Base+0x133d0>
   2680c:	ldrb	r0, [r1]
   26810:	cmp	r0, #32
   26814:	bhi	290cc <main@@Base+0x13384>
   26818:	bne	29118 <main@@Base+0x133d0>
   2681c:	ldrb	r0, [r8, #2]!
   26820:	cmp	r0, #32
   26824:	bhi	26700 <main@@Base+0x109b8>
   26828:	b	29118 <main@@Base+0x133d0>
   2682c:	mov	r2, r8
   26830:	b	27cbc <main@@Base+0x11f74>
   26834:	bne	26844 <main@@Base+0x10afc>
   26838:	ldrb	r0, [sl, #2]!
   2683c:	cmp	r0, #32
   26840:	bhi	26854 <main@@Base+0x10b0c>
   26844:	mov	r0, r7
   26848:	mov	r2, r9
   2684c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26850:	mov	sl, r0
   26854:	mov	ip, r4
   26858:	cmp	r4, sl
   2685c:	beq	26554 <main@@Base+0x1080c>
   26860:	ldr	r0, [r7]
   26864:	mov	r1, #2
   26868:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   2686c:	cmp	r0, #0
   26870:	bne	29764 <main@@Base+0x13a1c>
   26874:	cmp	sl, r9
   26878:	beq	268b8 <main@@Base+0x10b70>
   2687c:	ldrb	r0, [sl]
   26880:	cmp	r0, #123	; 0x7b
   26884:	bne	268b8 <main@@Base+0x10b70>
   26888:	add	r1, sl, #1
   2688c:	sub	r0, r9, r1
   26890:	cmp	r0, #2
   26894:	blt	26934 <main@@Base+0x10bec>
   26898:	ldrb	r0, [r1]
   2689c:	cmp	r0, #32
   268a0:	bls	26924 <main@@Base+0x10bdc>
   268a4:	mov	sl, r1
   268a8:	cmp	sl, r9
   268ac:	mov	r2, r9
   268b0:	bne	26950 <main@@Base+0x10c08>
   268b4:	b	27688 <main@@Base+0x11940>
   268b8:	mov	r0, r7
   268bc:	mov	r1, sl
   268c0:	mov	r2, r9
   268c4:	mov	r3, #21
   268c8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   268cc:	mov	sl, r0
   268d0:	ldr	r0, [sp, #20]
   268d4:	ldr	r0, [r0]
   268d8:	cmp	r0, #0
   268dc:	bne	29764 <main@@Base+0x13a1c>
   268e0:	ldr	r0, [r7]
   268e4:	bl	30680 <flatcc_builder_end_table@@Base>
   268e8:	mov	r1, r7
   268ec:	cmp	r0, #0
   268f0:	beq	29724 <main@@Base+0x139dc>
   268f4:	mov	r7, r0
   268f8:	ldr	r0, [r1]
   268fc:	mov	r1, #2
   26900:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   26904:	cmp	r0, #0
   26908:	beq	2972c <main@@Base+0x139e4>
   2690c:	str	r7, [r0]
   26910:	ldr	r7, [sp, #32]
   26914:	sub	r0, r9, sl
   26918:	cmp	r0, #2
   2691c:	bge	29590 <main@@Base+0x13848>
   26920:	b	29604 <main@@Base+0x138bc>
   26924:	bne	26934 <main@@Base+0x10bec>
   26928:	ldrb	r0, [sl, #2]!
   2692c:	cmp	r0, #32
   26930:	bhi	26944 <main@@Base+0x10bfc>
   26934:	mov	r0, r7
   26938:	mov	r2, r9
   2693c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26940:	mov	sl, r0
   26944:	cmp	sl, r9
   26948:	mov	r2, r9
   2694c:	beq	27688 <main@@Base+0x11940>
   26950:	ldrb	r0, [sl]
   26954:	cmp	r0, #125	; 0x7d
   26958:	bne	2698c <main@@Base+0x10c44>
   2695c:	add	r1, sl, #1
   26960:	sub	r0, r9, r1
   26964:	cmp	r0, #2
   26968:	blt	27bbc <main@@Base+0x11e74>
   2696c:	ldrb	r0, [r1]
   26970:	cmp	r0, #32
   26974:	bhi	27afc <main@@Base+0x11db4>
   26978:	bne	27bbc <main@@Base+0x11e74>
   2697c:	ldrb	r0, [sl, #2]!
   26980:	cmp	r0, #32
   26984:	bhi	268d0 <main@@Base+0x10b88>
   26988:	b	27bbc <main@@Base+0x11e74>
   2698c:	mov	r2, sl
   26990:	b	27688 <main@@Base+0x11940>
   26994:	mov	sl, r2
   26998:	mov	r8, #8
   2699c:	cmp	r9, sl
   269a0:	bne	26a34 <main@@Base+0x10cec>
   269a4:	b	269f0 <main@@Base+0x10ca8>
   269a8:	mov	sl, r9
   269ac:	mov	r8, #8
   269b0:	cmp	r9, sl
   269b4:	bne	26a34 <main@@Base+0x10cec>
   269b8:	b	269f0 <main@@Base+0x10ca8>
   269bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   269c0:	cmp	r0, #0
   269c4:	beq	26a7c <main@@Base+0x10d34>
   269c8:	ldr	r7, [sp, #32]
   269cc:	ldr	r2, [sp, #24]
   269d0:	mov	r1, sl
   269d4:	mov	r3, #7
   269d8:	mov	r0, r7
   269dc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   269e0:	mov	sl, r0
   269e4:	mov	r8, #8
   269e8:	cmp	r9, sl
   269ec:	bne	26a34 <main@@Base+0x10cec>
   269f0:	ldr	r4, [sp, #24]
   269f4:	sub	r0, fp, #44	; 0x2c
   269f8:	mov	r1, r9
   269fc:	str	r0, [sp]
   26a00:	movw	r0, #53636	; 0xd184
   26a04:	movt	r0, #5
   26a08:	add	r3, r0, #108	; 0x6c
   26a0c:	mov	r0, r7
   26a10:	mov	r2, r4
   26a14:	bl	248a8 <main@@Base+0xeb60>
   26a18:	mov	sl, r0
   26a1c:	cmp	r0, r9
   26a20:	cmpne	sl, r4
   26a24:	beq	2975c <main@@Base+0x13a14>
   26a28:	ldr	r5, [fp, #-44]	; 0xffffffd4
   26a2c:	ldr	r7, [sp, #32]
   26a30:	mov	r8, #8
   26a34:	ldr	r9, [sp, #24]
   26a38:	cmp	r5, #0
   26a3c:	bne	26a4c <main@@Base+0x10d04>
   26a40:	ldrb	r0, [r7, #8]
   26a44:	tst	r0, #2
   26a48:	beq	270dc <main@@Base+0x11394>
   26a4c:	ldr	r0, [r7]
   26a50:	mov	r1, #1
   26a54:	mov	r2, #4
   26a58:	mov	r3, #4
   26a5c:	bl	31040 <flatcc_builder_table_add@@Base>
   26a60:	cmp	r0, #0
   26a64:	beq	2975c <main@@Base+0x13a14>
   26a68:	str	r5, [r0]
   26a6c:	sub	r0, r9, sl
   26a70:	cmp	r0, #2
   26a74:	bge	270e8 <main@@Base+0x113a0>
   26a78:	b	27118 <main@@Base+0x113d0>
   26a7c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26a80:	ldr	r7, [sp, #32]
   26a84:	str	r5, [fp, #-44]	; 0xffffffd4
   26a88:	mov	r8, #8
   26a8c:	cmp	r9, sl
   26a90:	bne	26a34 <main@@Base+0x10cec>
   26a94:	b	269f0 <main@@Base+0x10ca8>
   26a98:	cmp	r2, r9
   26a9c:	mov	r4, r9
   26aa0:	beq	26ad8 <main@@Base+0x10d90>
   26aa4:	ldrb	r0, [r2]
   26aa8:	cmp	r0, #34	; 0x22
   26aac:	bne	26abc <main@@Base+0x10d74>
   26ab0:	ldr	r4, [sp, #24]
   26ab4:	add	r9, r2, #1
   26ab8:	b	26ad8 <main@@Base+0x10d90>
   26abc:	ldr	r4, [sp, #24]
   26ac0:	mov	r1, r2
   26ac4:	mov	r0, r7
   26ac8:	mov	r3, #5
   26acc:	mov	r2, r4
   26ad0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   26ad4:	mov	r9, r0
   26ad8:	sub	r0, r4, r9
   26adc:	cmp	r0, #8
   26ae0:	movcs	r0, r8
   26ae4:	and	r0, r0, #15
   26ae8:	sub	r3, r0, #1
   26aec:	cmp	r3, #7
   26af0:	bhi	26cd8 <main@@Base+0x10f90>
   26af4:	add	r4, pc, #32
   26af8:	mov	r0, #0
   26afc:	mov	ip, #0
   26b00:	mov	lr, #0
   26b04:	mov	r6, #0
   26b08:	mov	r2, #0
   26b0c:	mov	r5, #0
   26b10:	mov	r7, #0
   26b14:	mov	r1, #0
   26b18:	ldr	pc, [r4, r3, lsl #2]
   26b1c:	andeq	r6, r2, r0, lsl #23
   26b20:	andeq	r6, r2, r8, ror fp
   26b24:	andeq	r6, r2, r0, ror fp
   26b28:	andeq	r6, r2, r8, ror #22
   26b2c:	andeq	r6, r2, ip, asr fp
   26b30:	andeq	r6, r2, r0, asr fp
   26b34:	andeq	r6, r2, r0, asr #22
   26b38:	andeq	r6, r2, ip, lsr fp
   26b3c:	ldrb	ip, [r9, #7]
   26b40:	ldrb	r1, [r9, #6]
   26b44:	mov	lr, r0
   26b48:	orr	r1, ip, r1, lsl #8
   26b4c:	mov	r0, r1
   26b50:	ldrb	r1, [r9, #5]
   26b54:	mov	r6, lr
   26b58:	orr	r0, r0, r1, lsl #16
   26b5c:	ldrb	r1, [r9, #4]
   26b60:	mov	r2, r6
   26b64:	orr	r0, r0, r1, lsl #24
   26b68:	ldrb	r1, [r9, #3]
   26b6c:	orr	r5, r1, r2
   26b70:	ldrb	r1, [r9, #2]
   26b74:	orr	r7, r5, r1, lsl #8
   26b78:	ldrb	r1, [r9, #1]
   26b7c:	orr	r1, r7, r1, lsl #16
   26b80:	movw	r2, #25186	; 0x6262
   26b84:	ldr	r7, [sp, #32]
   26b88:	movt	r2, #24418	; 0x5f62
   26b8c:	eor	r0, r0, r2
   26b90:	ldrb	r2, [r9]
   26b94:	orr	r1, r1, r2, lsl #24
   26b98:	movw	r2, #24929	; 0x6161
   26b9c:	movt	r2, #24929	; 0x6161
   26ba0:	eor	r1, r1, r2
   26ba4:	orrs	r0, r0, r1
   26ba8:	bne	26cd8 <main@@Base+0x10f90>
   26bac:	ldr	r0, [sp, #24]
   26bb0:	add	r8, r9, #8
   26bb4:	sub	lr, r0, r8
   26bb8:	mov	r0, #8
   26bbc:	cmp	lr, #8
   26bc0:	movcc	r0, lr
   26bc4:	and	r0, r0, #15
   26bc8:	sub	r6, r0, #1
   26bcc:	cmp	r6, #7
   26bd0:	bhi	270c0 <main@@Base+0x11378>
   26bd4:	add	r2, pc, #32
   26bd8:	mov	r1, #0
   26bdc:	mov	ip, #0
   26be0:	mov	sl, #0
   26be4:	mov	r5, #0
   26be8:	mov	r3, #0
   26bec:	mov	r4, #0
   26bf0:	mov	r7, #0
   26bf4:	mov	r0, #0
   26bf8:	ldr	pc, [r2, r6, lsl #2]
   26bfc:	andeq	r6, r2, r0, ror #24
   26c00:	andeq	r6, r2, r8, asr ip
   26c04:	andeq	r6, r2, r0, asr ip
   26c08:	andeq	r6, r2, r8, asr #24
   26c0c:	andeq	r6, r2, ip, lsr ip
   26c10:	andeq	r6, r2, r0, lsr ip
   26c14:	andeq	r6, r2, r0, lsr #24
   26c18:	andeq	r6, r2, ip, lsl ip
   26c1c:	ldrb	ip, [r9, #15]
   26c20:	ldrb	r0, [r9, #14]
   26c24:	mov	sl, r1
   26c28:	orr	r0, ip, r0, lsl #8
   26c2c:	mov	r1, r0
   26c30:	ldrb	r0, [r9, #13]
   26c34:	mov	r5, sl
   26c38:	orr	r1, r1, r0, lsl #16
   26c3c:	ldrb	r0, [r9, #12]
   26c40:	mov	r3, r5
   26c44:	orr	r1, r1, r0, lsl #24
   26c48:	ldrb	r0, [r9, #11]
   26c4c:	orr	r4, r0, r3
   26c50:	ldrb	r0, [r9, #10]
   26c54:	orr	r7, r4, r0, lsl #8
   26c58:	ldrb	r0, [r9, #9]
   26c5c:	orr	r0, r7, r0, lsl #16
   26c60:	movw	r3, #29440	; 0x7300
   26c64:	bic	r2, r1, #255	; 0xff
   26c68:	movt	r3, #25968	; 0x6570
   26c6c:	eor	r2, r2, r3
   26c70:	ldrb	r3, [r8]
   26c74:	orr	r0, r0, r3, lsl #24
   26c78:	movw	r3, #29556	; 0x7374
   26c7c:	movt	r3, #25183	; 0x625f
   26c80:	eor	r0, r0, r3
   26c84:	orrs	r2, r2, r0
   26c88:	bne	26d00 <main@@Base+0x10fb8>
   26c8c:	ldr	r7, [sp, #32]
   26c90:	cmp	lr, #8
   26c94:	blt	270c0 <main@@Base+0x11378>
   26c98:	ldrb	r0, [r9, #15]
   26c9c:	cmp	r0, #34	; 0x22
   26ca0:	bne	270c0 <main@@Base+0x11378>
   26ca4:	ldr	r4, [sp, #24]
   26ca8:	add	r1, r9, #16
   26cac:	sub	r0, r4, r1
   26cb0:	cmp	r0, #2
   26cb4:	blt	26d74 <main@@Base+0x1102c>
   26cb8:	ldrb	r0, [r1]
   26cbc:	cmp	r0, #32
   26cc0:	bls	26d60 <main@@Base+0x11018>
   26cc4:	ldr	r4, [sp, #24]
   26cc8:	mov	r9, r1
   26ccc:	cmp	r9, r4
   26cd0:	bne	26d8c <main@@Base+0x11044>
   26cd4:	b	26dc8 <main@@Base+0x11080>
   26cd8:	mov	r1, r9
   26cdc:	ldr	r9, [sp, #24]
   26ce0:	mov	r0, r7
   26ce4:	mov	r2, r9
   26ce8:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   26cec:	mov	sl, r0
   26cf0:	sub	r0, r9, sl
   26cf4:	cmp	r0, #2
   26cf8:	bge	270e8 <main@@Base+0x113a0>
   26cfc:	b	27118 <main@@Base+0x113d0>
   26d00:	movw	r2, #29791	; 0x745f
   26d04:	ldr	r7, [sp, #32]
   26d08:	movt	r2, #24946	; 0x6172
   26d0c:	eor	r1, r1, r2
   26d10:	orrs	r0, r1, r0
   26d14:	bne	270c0 <main@@Base+0x11378>
   26d18:	cmp	lr, #9
   26d1c:	blt	270c0 <main@@Base+0x11378>
   26d20:	ldrb	r0, [r9, #16]
   26d24:	cmp	r0, #34	; 0x22
   26d28:	bne	270c0 <main@@Base+0x11378>
   26d2c:	ldr	r4, [sp, #24]
   26d30:	add	r1, r9, #17
   26d34:	sub	r0, r4, r1
   26d38:	cmp	r0, #2
   26d3c:	blt	26df4 <main@@Base+0x110ac>
   26d40:	ldrb	r0, [r1]
   26d44:	cmp	r0, #32
   26d48:	bls	26de0 <main@@Base+0x11098>
   26d4c:	ldr	r4, [sp, #24]
   26d50:	mov	r9, r1
   26d54:	cmp	r9, r4
   26d58:	bne	26e0c <main@@Base+0x110c4>
   26d5c:	b	26e4c <main@@Base+0x11104>
   26d60:	ldr	r4, [sp, #24]
   26d64:	bne	26d74 <main@@Base+0x1102c>
   26d68:	ldrb	r0, [r9, #17]!
   26d6c:	cmp	r0, #32
   26d70:	bhi	26d84 <main@@Base+0x1103c>
   26d74:	mov	r0, r7
   26d78:	mov	r2, r4
   26d7c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26d80:	mov	r9, r0
   26d84:	cmp	r9, r4
   26d88:	beq	26dc8 <main@@Base+0x11080>
   26d8c:	ldrb	r0, [r9]
   26d90:	cmp	r0, #58	; 0x3a
   26d94:	bne	26dc8 <main@@Base+0x11080>
   26d98:	ldr	r0, [sp, #24]
   26d9c:	add	r1, r9, #1
   26da0:	sub	r0, r0, r1
   26da4:	cmp	r0, #2
   26da8:	blt	26e74 <main@@Base+0x1112c>
   26dac:	ldrb	r0, [r1]
   26db0:	cmp	r0, #32
   26db4:	bls	26e64 <main@@Base+0x1111c>
   26db8:	mov	r9, r1
   26dbc:	cmp	r8, r9
   26dc0:	bne	26e8c <main@@Base+0x11144>
   26dc4:	b	270c0 <main@@Base+0x11378>
   26dc8:	ldr	r2, [sp, #24]
   26dcc:	mov	r0, r7
   26dd0:	mov	r1, r9
   26dd4:	mov	r3, #4
   26dd8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   26ddc:	b	26e80 <main@@Base+0x11138>
   26de0:	ldr	r4, [sp, #24]
   26de4:	bne	26df4 <main@@Base+0x110ac>
   26de8:	ldrb	r0, [r9, #18]!
   26dec:	cmp	r0, #32
   26df0:	bhi	26e04 <main@@Base+0x110bc>
   26df4:	mov	r0, r7
   26df8:	mov	r2, r4
   26dfc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26e00:	mov	r9, r0
   26e04:	cmp	r9, r4
   26e08:	beq	26e4c <main@@Base+0x11104>
   26e0c:	ldrb	r0, [r9]
   26e10:	cmp	r0, #58	; 0x3a
   26e14:	bne	26e4c <main@@Base+0x11104>
   26e18:	ldr	r0, [sp, #24]
   26e1c:	add	r1, r9, #1
   26e20:	sub	r0, r0, r1
   26e24:	cmp	r0, #2
   26e28:	blt	27044 <main@@Base+0x112fc>
   26e2c:	ldrb	r0, [r1]
   26e30:	cmp	r0, #32
   26e34:	bls	27030 <main@@Base+0x112e8>
   26e38:	ldr	r7, [sp, #32]
   26e3c:	mov	r9, r1
   26e40:	cmp	r8, r9
   26e44:	bne	2705c <main@@Base+0x11314>
   26e48:	b	270c0 <main@@Base+0x11378>
   26e4c:	ldr	r2, [sp, #24]
   26e50:	mov	r0, r7
   26e54:	mov	r1, r9
   26e58:	mov	r3, #4
   26e5c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   26e60:	b	27050 <main@@Base+0x11308>
   26e64:	bne	26e74 <main@@Base+0x1112c>
   26e68:	ldrb	r0, [r9, #2]!
   26e6c:	cmp	r0, #32
   26e70:	bhi	26e84 <main@@Base+0x1113c>
   26e74:	ldr	r2, [sp, #24]
   26e78:	mov	r0, r7
   26e7c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   26e80:	mov	r9, r0
   26e84:	cmp	r8, r9
   26e88:	beq	270c0 <main@@Base+0x11378>
   26e8c:	ldr	r2, [sp, #24]
   26e90:	mov	r6, #0
   26e94:	str	r6, [fp, #-36]	; 0xffffffdc
   26e98:	str	r6, [fp, #-40]	; 0xffffffd8
   26e9c:	str	r6, [sp, #44]	; 0x2c
   26ea0:	str	r6, [sp, #40]	; 0x28
   26ea4:	str	r6, [fp, #-44]	; 0xffffffd4
   26ea8:	cmp	r9, r2
   26eac:	beq	26f24 <main@@Base+0x111dc>
   26eb0:	sub	r0, fp, #40	; 0x28
   26eb4:	mov	r1, r9
   26eb8:	sub	r3, fp, #44	; 0x2c
   26ebc:	str	r0, [sp]
   26ec0:	mov	r0, r7
   26ec4:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   26ec8:	cmp	r0, r9
   26ecc:	beq	26f3c <main@@Base+0x111f4>
   26ed0:	mov	sl, r0
   26ed4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26ed8:	ldr	r6, [fp, #-40]	; 0xffffffd8
   26edc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   26ee0:	cmp	r0, #0
   26ee4:	beq	26f58 <main@@Base+0x11210>
   26ee8:	subs	r0, r6, #1
   26eec:	sbcs	r0, r5, #-2147483648	; 0x80000000
   26ef0:	bcc	26f90 <main@@Base+0x11248>
   26ef4:	ldr	r2, [sp, #24]
   26ef8:	mov	r0, r7
   26efc:	mov	r1, sl
   26f00:	mov	r3, #8
   26f04:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   26f08:	mov	sl, r0
   26f0c:	mov	r6, #0
   26f10:	mov	r5, #0
   26f14:	mov	r8, #8
   26f18:	cmp	r9, sl
   26f1c:	bne	26fe4 <main@@Base+0x1129c>
   26f20:	b	26fac <main@@Base+0x11264>
   26f24:	mov	r5, #0
   26f28:	mov	sl, r2
   26f2c:	mov	r8, #8
   26f30:	cmp	r9, sl
   26f34:	bne	26fe4 <main@@Base+0x1129c>
   26f38:	b	26fac <main@@Base+0x11264>
   26f3c:	mov	r6, #0
   26f40:	mov	r5, #0
   26f44:	mov	sl, r9
   26f48:	mov	r8, #8
   26f4c:	cmp	r9, sl
   26f50:	bne	26fe4 <main@@Base+0x1129c>
   26f54:	b	26fac <main@@Base+0x11264>
   26f58:	cmn	r5, #1
   26f5c:	mov	r8, #8
   26f60:	bgt	26f9c <main@@Base+0x11254>
   26f64:	ldr	r2, [sp, #24]
   26f68:	mov	r0, r7
   26f6c:	mov	r1, sl
   26f70:	mov	r3, #7
   26f74:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   26f78:	mov	sl, r0
   26f7c:	mov	r6, #0
   26f80:	mov	r5, #0
   26f84:	cmp	r9, sl
   26f88:	bne	26fe4 <main@@Base+0x1129c>
   26f8c:	b	26fac <main@@Base+0x11264>
   26f90:	rsbs	r6, r6, #0
   26f94:	mov	r8, #8
   26f98:	rsc	r5, r5, #0
   26f9c:	str	r6, [sp, #40]	; 0x28
   26fa0:	str	r5, [sp, #44]	; 0x2c
   26fa4:	cmp	r9, sl
   26fa8:	bne	26fe4 <main@@Base+0x1129c>
   26fac:	ldr	r4, [sp, #24]
   26fb0:	ldr	r3, [sp, #8]
   26fb4:	add	r0, sp, #40	; 0x28
   26fb8:	mov	r1, r9
   26fbc:	str	r0, [sp]
   26fc0:	mov	r0, r7
   26fc4:	mov	r2, r4
   26fc8:	bl	2467c <main@@Base+0xe934>
   26fcc:	mov	sl, r0
   26fd0:	cmp	r0, r9
   26fd4:	cmpne	sl, r4
   26fd8:	beq	2975c <main@@Base+0x13a14>
   26fdc:	ldr	r6, [sp, #40]	; 0x28
   26fe0:	ldr	r5, [sp, #44]	; 0x2c
   26fe4:	ldr	r9, [sp, #24]
   26fe8:	orrs	r0, r6, r5
   26fec:	bne	26ffc <main@@Base+0x112b4>
   26ff0:	ldrb	r0, [r7, #8]
   26ff4:	tst	r0, #2
   26ff8:	beq	270dc <main@@Base+0x11394>
   26ffc:	ldr	r0, [r7]
   27000:	mov	r1, #0
   27004:	mov	r2, #8
   27008:	mov	r3, #8
   2700c:	bl	31040 <flatcc_builder_table_add@@Base>
   27010:	cmp	r0, #0
   27014:	beq	2975c <main@@Base+0x13a14>
   27018:	str	r6, [r0]
   2701c:	str	r5, [r0, #4]
   27020:	sub	r0, r9, sl
   27024:	cmp	r0, #2
   27028:	bge	270e8 <main@@Base+0x113a0>
   2702c:	b	27118 <main@@Base+0x113d0>
   27030:	ldr	r7, [sp, #32]
   27034:	bne	27044 <main@@Base+0x112fc>
   27038:	ldrb	r0, [r9, #2]!
   2703c:	cmp	r0, #32
   27040:	bhi	27054 <main@@Base+0x1130c>
   27044:	ldr	r2, [sp, #24]
   27048:	mov	r0, r7
   2704c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   27050:	mov	r9, r0
   27054:	cmp	r8, r9
   27058:	beq	270c0 <main@@Base+0x11378>
   2705c:	ldr	r2, [sp, #24]
   27060:	mov	r5, #0
   27064:	str	r5, [fp, #-36]	; 0xffffffdc
   27068:	str	r5, [fp, #-40]	; 0xffffffd8
   2706c:	str	r5, [fp, #-44]	; 0xffffffd4
   27070:	str	r5, [sp, #40]	; 0x28
   27074:	cmp	r9, r2
   27078:	beq	26994 <main@@Base+0x10c4c>
   2707c:	sub	r0, fp, #40	; 0x28
   27080:	mov	r1, r9
   27084:	add	r3, sp, #40	; 0x28
   27088:	str	r0, [sp]
   2708c:	mov	r0, r7
   27090:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   27094:	cmp	r0, r9
   27098:	beq	269a8 <main@@Base+0x10c60>
   2709c:	mov	sl, r0
   270a0:	ldr	r0, [sp, #40]	; 0x28
   270a4:	cmp	r0, #0
   270a8:	beq	269bc <main@@Base+0x10c74>
   270ac:	ldr	r2, [sp, #24]
   270b0:	mov	r0, r7
   270b4:	mov	r1, sl
   270b8:	mov	r3, #8
   270bc:	b	269dc <main@@Base+0x10c94>
   270c0:	ldr	r9, [sp, #24]
   270c4:	mov	r0, r7
   270c8:	mov	r1, r8
   270cc:	mov	r2, r9
   270d0:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   270d4:	mov	sl, r0
   270d8:	mov	r8, #8
   270dc:	sub	r0, r9, sl
   270e0:	cmp	r0, #2
   270e4:	blt	27118 <main@@Base+0x113d0>
   270e8:	ldrb	r0, [sl]
   270ec:	cmp	r0, #32
   270f0:	bls	27104 <main@@Base+0x113bc>
   270f4:	mov	r2, sl
   270f8:	cmp	r2, r9
   270fc:	bne	27134 <main@@Base+0x113ec>
   27100:	b	271b4 <main@@Base+0x1146c>
   27104:	bne	27118 <main@@Base+0x113d0>
   27108:	mov	r2, sl
   2710c:	ldrb	r0, [r2, #1]!
   27110:	cmp	r0, #32
   27114:	bhi	2712c <main@@Base+0x113e4>
   27118:	mov	r0, r7
   2711c:	mov	r1, sl
   27120:	mov	r2, r9
   27124:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   27128:	mov	r2, r0
   2712c:	cmp	r2, r9
   27130:	beq	271b4 <main@@Base+0x1146c>
   27134:	ldrb	r0, [r2]
   27138:	cmp	r0, #44	; 0x2c
   2713c:	bne	271cc <main@@Base+0x11484>
   27140:	add	r1, r2, #1
   27144:	sub	r0, r9, r1
   27148:	cmp	r0, #2
   2714c:	blt	2717c <main@@Base+0x11434>
   27150:	ldrb	r0, [r1]
   27154:	cmp	r0, #32
   27158:	bls	2716c <main@@Base+0x11424>
   2715c:	mov	r2, r1
   27160:	cmp	r2, r9
   27164:	bne	27194 <main@@Base+0x1144c>
   27168:	b	27208 <main@@Base+0x114c0>
   2716c:	bne	2717c <main@@Base+0x11434>
   27170:	ldrb	r0, [r2, #2]!
   27174:	cmp	r0, #32
   27178:	bhi	2718c <main@@Base+0x11444>
   2717c:	mov	r0, r7
   27180:	mov	r2, r9
   27184:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   27188:	mov	r2, r0
   2718c:	cmp	r2, r9
   27190:	beq	27208 <main@@Base+0x114c0>
   27194:	ldrb	r0, [r2]
   27198:	cmp	r0, #125	; 0x7d
   2719c:	bne	26a98 <main@@Base+0x10d50>
   271a0:	add	r1, r2, #1
   271a4:	sub	r0, r9, r1
   271a8:	cmp	r0, #2
   271ac:	blt	2723c <main@@Base+0x114f4>
   271b0:	b	271e4 <main@@Base+0x1149c>
   271b4:	mov	sl, r9
   271b8:	ldr	r0, [sp, #20]
   271bc:	ldr	r0, [r0]
   271c0:	cmp	r0, #0
   271c4:	beq	2662c <main@@Base+0x108e4>
   271c8:	b	29764 <main@@Base+0x13a1c>
   271cc:	cmp	r0, #125	; 0x7d
   271d0:	bne	27214 <main@@Base+0x114cc>
   271d4:	add	r1, r2, #1
   271d8:	sub	r0, r9, r1
   271dc:	cmp	r0, #2
   271e0:	blt	2723c <main@@Base+0x114f4>
   271e4:	ldrb	r0, [r1]
   271e8:	cmp	r0, #32
   271ec:	bls	27228 <main@@Base+0x114e0>
   271f0:	mov	sl, r1
   271f4:	ldr	r0, [sp, #20]
   271f8:	ldr	r0, [r0]
   271fc:	cmp	r0, #0
   27200:	beq	2662c <main@@Base+0x108e4>
   27204:	b	29764 <main@@Base+0x13a1c>
   27208:	mov	r0, r7
   2720c:	mov	r1, r9
   27210:	b	2721c <main@@Base+0x114d4>
   27214:	mov	r0, r7
   27218:	mov	r1, r2
   2721c:	mov	r2, r9
   27220:	mov	r3, #10
   27224:	b	26614 <main@@Base+0x108cc>
   27228:	bne	2723c <main@@Base+0x114f4>
   2722c:	ldrb	r0, [r2, #2]!
   27230:	cmp	r0, #32
   27234:	mov	sl, r2
   27238:	bhi	2661c <main@@Base+0x108d4>
   2723c:	mov	r0, r7
   27240:	mov	r2, r9
   27244:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   27248:	b	26618 <main@@Base+0x108d0>
   2724c:	ldr	r4, [sp, #24]
   27250:	bne	27260 <main@@Base+0x11518>
   27254:	ldrb	r0, [r9, #17]!
   27258:	cmp	r0, #32
   2725c:	bhi	27270 <main@@Base+0x11528>
   27260:	mov	r0, r7
   27264:	mov	r2, r4
   27268:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2726c:	mov	r9, r0
   27270:	cmp	r9, r4
   27274:	beq	272b8 <main@@Base+0x11570>
   27278:	ldrb	r0, [r9]
   2727c:	cmp	r0, #58	; 0x3a
   27280:	bne	272b8 <main@@Base+0x11570>
   27284:	ldr	r0, [sp, #24]
   27288:	add	r1, r9, #1
   2728c:	sub	r0, r0, r1
   27290:	cmp	r0, #2
   27294:	blt	27368 <main@@Base+0x11620>
   27298:	ldrb	r0, [r1]
   2729c:	cmp	r0, #32
   272a0:	bls	27354 <main@@Base+0x1160c>
   272a4:	ldr	r7, [sp, #32]
   272a8:	mov	r9, r1
   272ac:	cmp	r8, r9
   272b0:	bne	27380 <main@@Base+0x11638>
   272b4:	b	27a00 <main@@Base+0x11cb8>
   272b8:	ldr	r2, [sp, #24]
   272bc:	mov	r0, r7
   272c0:	mov	r1, r9
   272c4:	mov	r3, #4
   272c8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   272cc:	b	27374 <main@@Base+0x1162c>
   272d0:	ldr	r4, [sp, #24]
   272d4:	bne	272e4 <main@@Base+0x1159c>
   272d8:	ldrb	r0, [r9, #23]!
   272dc:	cmp	r0, #32
   272e0:	bhi	272f4 <main@@Base+0x115ac>
   272e4:	mov	r0, r7
   272e8:	mov	r2, r4
   272ec:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   272f0:	mov	r9, r0
   272f4:	cmp	r9, r4
   272f8:	beq	2733c <main@@Base+0x115f4>
   272fc:	ldrb	r0, [r9]
   27300:	cmp	r0, #58	; 0x3a
   27304:	bne	2733c <main@@Base+0x115f4>
   27308:	ldr	r0, [sp, #24]
   2730c:	add	r1, r9, #1
   27310:	sub	r0, r0, r1
   27314:	cmp	r0, #2
   27318:	blt	27514 <main@@Base+0x117cc>
   2731c:	ldrb	r0, [r1]
   27320:	cmp	r0, #32
   27324:	bls	27500 <main@@Base+0x117b8>
   27328:	ldr	r7, [sp, #32]
   2732c:	mov	r9, r1
   27330:	cmp	r8, r9
   27334:	bne	2752c <main@@Base+0x117e4>
   27338:	b	27a00 <main@@Base+0x11cb8>
   2733c:	ldr	r2, [sp, #24]
   27340:	mov	r0, r7
   27344:	mov	r1, r9
   27348:	mov	r3, #4
   2734c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   27350:	b	27520 <main@@Base+0x117d8>
   27354:	ldr	r7, [sp, #32]
   27358:	bne	27368 <main@@Base+0x11620>
   2735c:	ldrb	r0, [r9, #2]!
   27360:	cmp	r0, #32
   27364:	bhi	27378 <main@@Base+0x11630>
   27368:	ldr	r2, [sp, #24]
   2736c:	mov	r0, r7
   27370:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   27374:	mov	r9, r0
   27378:	cmp	r8, r9
   2737c:	beq	27a00 <main@@Base+0x11cb8>
   27380:	ldr	r2, [sp, #24]
   27384:	mov	r6, #0
   27388:	str	r6, [fp, #-36]	; 0xffffffdc
   2738c:	str	r6, [fp, #-40]	; 0xffffffd8
   27390:	str	r6, [sp, #44]	; 0x2c
   27394:	str	r6, [sp, #40]	; 0x28
   27398:	str	r6, [fp, #-44]	; 0xffffffd4
   2739c:	cmp	r9, r2
   273a0:	beq	273fc <main@@Base+0x116b4>
   273a4:	sub	r0, fp, #40	; 0x28
   273a8:	mov	r1, r9
   273ac:	sub	r3, fp, #44	; 0x2c
   273b0:	str	r0, [sp]
   273b4:	mov	r0, r7
   273b8:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   273bc:	cmp	r0, r9
   273c0:	beq	27410 <main@@Base+0x116c8>
   273c4:	mov	sl, r0
   273c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   273cc:	ldr	r6, [fp, #-40]	; 0xffffffd8
   273d0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   273d4:	cmp	r0, #0
   273d8:	beq	2742c <main@@Base+0x116e4>
   273dc:	subs	r0, r6, #1
   273e0:	sbcs	r0, r5, #-2147483648	; 0x80000000
   273e4:	bcc	27464 <main@@Base+0x1171c>
   273e8:	ldr	r7, [sp, #32]
   273ec:	ldr	r2, [sp, #24]
   273f0:	mov	r1, sl
   273f4:	mov	r3, #8
   273f8:	b	27444 <main@@Base+0x116fc>
   273fc:	mov	r5, #0
   27400:	mov	sl, r2
   27404:	cmp	r9, sl
   27408:	bne	274c4 <main@@Base+0x1177c>
   2740c:	b	27480 <main@@Base+0x11738>
   27410:	mov	r6, #0
   27414:	mov	r5, #0
   27418:	mov	sl, r9
   2741c:	ldr	r7, [sp, #32]
   27420:	cmp	r9, sl
   27424:	bne	274c4 <main@@Base+0x1177c>
   27428:	b	27480 <main@@Base+0x11738>
   2742c:	cmn	r5, #1
   27430:	bgt	2746c <main@@Base+0x11724>
   27434:	ldr	r7, [sp, #32]
   27438:	ldr	r2, [sp, #24]
   2743c:	mov	r1, sl
   27440:	mov	r3, #7
   27444:	mov	r0, r7
   27448:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2744c:	mov	sl, r0
   27450:	mov	r6, #0
   27454:	mov	r5, #0
   27458:	cmp	r9, sl
   2745c:	bne	274c4 <main@@Base+0x1177c>
   27460:	b	27480 <main@@Base+0x11738>
   27464:	rsbs	r6, r6, #0
   27468:	rsc	r5, r5, #0
   2746c:	str	r6, [sp, #40]	; 0x28
   27470:	str	r5, [sp, #44]	; 0x2c
   27474:	ldr	r7, [sp, #32]
   27478:	cmp	r9, sl
   2747c:	bne	274c4 <main@@Base+0x1177c>
   27480:	add	r0, sp, #40	; 0x28
   27484:	ldr	r2, [sp, #24]
   27488:	mov	r1, r9
   2748c:	str	r0, [sp]
   27490:	movw	r0, #53756	; 0xd1fc
   27494:	movt	r0, #5
   27498:	add	r3, r0, #84	; 0x54
   2749c:	mov	r0, r7
   274a0:	bl	2467c <main@@Base+0xe934>
   274a4:	cmp	r0, r9
   274a8:	mov	sl, r0
   274ac:	ldrne	r0, [sp, #24]
   274b0:	cmpne	sl, r0
   274b4:	beq	2975c <main@@Base+0x13a14>
   274b8:	ldr	r6, [sp, #40]	; 0x28
   274bc:	ldr	r5, [sp, #44]	; 0x2c
   274c0:	ldr	r7, [sp, #32]
   274c4:	orrs	r0, r6, r5
   274c8:	bne	274d8 <main@@Base+0x11790>
   274cc:	ldrb	r0, [r7, #8]
   274d0:	tst	r0, #2
   274d4:	beq	27658 <main@@Base+0x11910>
   274d8:	ldr	r0, [r7]
   274dc:	mov	r1, #0
   274e0:	mov	r2, #8
   274e4:	mov	r3, #8
   274e8:	bl	31040 <flatcc_builder_table_add@@Base>
   274ec:	cmp	r0, #0
   274f0:	beq	2975c <main@@Base+0x13a14>
   274f4:	str	r6, [r0]
   274f8:	str	r5, [r0, #4]
   274fc:	b	27658 <main@@Base+0x11910>
   27500:	ldr	r7, [sp, #32]
   27504:	bne	27514 <main@@Base+0x117cc>
   27508:	ldrb	r0, [r9, #2]!
   2750c:	cmp	r0, #32
   27510:	bhi	27524 <main@@Base+0x117dc>
   27514:	ldr	r2, [sp, #24]
   27518:	mov	r0, r7
   2751c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   27520:	mov	r9, r0
   27524:	cmp	r8, r9
   27528:	beq	27a00 <main@@Base+0x11cb8>
   2752c:	ldr	r2, [sp, #24]
   27530:	mov	r5, #0
   27534:	str	r5, [fp, #-36]	; 0xffffffdc
   27538:	str	r5, [fp, #-40]	; 0xffffffd8
   2753c:	str	r5, [fp, #-44]	; 0xffffffd4
   27540:	str	r5, [sp, #40]	; 0x28
   27544:	cmp	r9, r2
   27548:	beq	27590 <main@@Base+0x11848>
   2754c:	sub	r0, fp, #40	; 0x28
   27550:	mov	r1, r9
   27554:	add	r3, sp, #40	; 0x28
   27558:	str	r0, [sp]
   2755c:	mov	r0, r7
   27560:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   27564:	cmp	r0, r9
   27568:	beq	275a0 <main@@Base+0x11858>
   2756c:	mov	sl, r0
   27570:	ldr	r0, [sp, #40]	; 0x28
   27574:	cmp	r0, #0
   27578:	beq	275b4 <main@@Base+0x1186c>
   2757c:	ldr	r7, [sp, #32]
   27580:	ldr	r2, [sp, #24]
   27584:	mov	r1, sl
   27588:	mov	r3, #8
   2758c:	b	275d0 <main@@Base+0x11888>
   27590:	mov	sl, r2
   27594:	cmp	r9, sl
   27598:	bne	27624 <main@@Base+0x118dc>
   2759c:	b	275e4 <main@@Base+0x1189c>
   275a0:	mov	sl, r9
   275a4:	ldr	r7, [sp, #32]
   275a8:	cmp	r9, sl
   275ac:	bne	27624 <main@@Base+0x118dc>
   275b0:	b	275e4 <main@@Base+0x1189c>
   275b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   275b8:	cmp	r0, #0
   275bc:	beq	27670 <main@@Base+0x11928>
   275c0:	ldr	r7, [sp, #32]
   275c4:	ldr	r2, [sp, #24]
   275c8:	mov	r1, sl
   275cc:	mov	r3, #7
   275d0:	mov	r0, r7
   275d4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   275d8:	mov	sl, r0
   275dc:	cmp	r9, sl
   275e0:	bne	27624 <main@@Base+0x118dc>
   275e4:	sub	r0, fp, #44	; 0x2c
   275e8:	ldr	r2, [sp, #24]
   275ec:	mov	r1, r9
   275f0:	str	r0, [sp]
   275f4:	movw	r0, #53756	; 0xd1fc
   275f8:	movt	r0, #5
   275fc:	add	r3, r0, #72	; 0x48
   27600:	mov	r0, r7
   27604:	bl	248a8 <main@@Base+0xeb60>
   27608:	cmp	r0, r9
   2760c:	mov	sl, r0
   27610:	ldrne	r0, [sp, #24]
   27614:	cmpne	sl, r0
   27618:	beq	2975c <main@@Base+0x13a14>
   2761c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   27620:	ldr	r7, [sp, #32]
   27624:	cmp	r5, #0
   27628:	bne	27638 <main@@Base+0x118f0>
   2762c:	ldrb	r0, [r7, #8]
   27630:	tst	r0, #2
   27634:	beq	27658 <main@@Base+0x11910>
   27638:	ldr	r0, [r7]
   2763c:	mov	r1, #1
   27640:	mov	r2, #4
   27644:	mov	r3, #4
   27648:	bl	31040 <flatcc_builder_table_add@@Base>
   2764c:	cmp	r0, #0
   27650:	beq	2975c <main@@Base+0x13a14>
   27654:	str	r5, [r0]
   27658:	ldr	r9, [sp, #24]
   2765c:	mov	r8, #8
   27660:	sub	r0, r9, sl
   27664:	cmp	r0, #2
   27668:	bge	27a28 <main@@Base+0x11ce0>
   2766c:	b	27a58 <main@@Base+0x11d10>
   27670:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27674:	str	r5, [fp, #-44]	; 0xffffffd4
   27678:	ldr	r7, [sp, #32]
   2767c:	cmp	r9, sl
   27680:	bne	27624 <main@@Base+0x118dc>
   27684:	b	275e4 <main@@Base+0x1189c>
   27688:	cmp	r2, r9
   2768c:	mov	r4, r9
   27690:	beq	276c8 <main@@Base+0x11980>
   27694:	ldrb	r0, [r2]
   27698:	cmp	r0, #34	; 0x22
   2769c:	bne	276ac <main@@Base+0x11964>
   276a0:	ldr	r4, [sp, #24]
   276a4:	add	r9, r2, #1
   276a8:	b	276c8 <main@@Base+0x11980>
   276ac:	ldr	r4, [sp, #24]
   276b0:	mov	r1, r2
   276b4:	mov	r0, r7
   276b8:	mov	r3, #5
   276bc:	mov	r2, r4
   276c0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   276c4:	mov	r9, r0
   276c8:	sub	r0, r4, r9
   276cc:	cmp	r0, #8
   276d0:	movcs	r0, r8
   276d4:	and	r0, r0, #15
   276d8:	sub	r3, r0, #1
   276dc:	cmp	r3, #7
   276e0:	bhi	27970 <main@@Base+0x11c28>
   276e4:	add	r4, pc, #32
   276e8:	mov	r0, #0
   276ec:	mov	ip, #0
   276f0:	mov	lr, #0
   276f4:	mov	r6, #0
   276f8:	mov	r2, #0
   276fc:	mov	r5, #0
   27700:	mov	r7, #0
   27704:	mov	r1, #0
   27708:	ldr	pc, [r4, r3, lsl #2]
   2770c:	andeq	r7, r2, r0, ror r7
   27710:	andeq	r7, r2, r8, ror #14
   27714:	andeq	r7, r2, r0, ror #14
   27718:	andeq	r7, r2, r8, asr r7
   2771c:	andeq	r7, r2, ip, asr #14
   27720:	andeq	r7, r2, r0, asr #14
   27724:	andeq	r7, r2, r0, lsr r7
   27728:	andeq	r7, r2, ip, lsr #14
   2772c:	ldrb	ip, [r9, #7]
   27730:	ldrb	r1, [r9, #6]
   27734:	mov	lr, r0
   27738:	orr	r1, ip, r1, lsl #8
   2773c:	mov	r0, r1
   27740:	ldrb	r1, [r9, #5]
   27744:	mov	r6, lr
   27748:	orr	r0, r0, r1, lsl #16
   2774c:	ldrb	r1, [r9, #4]
   27750:	mov	r2, r6
   27754:	orr	r0, r0, r1, lsl #24
   27758:	ldrb	r1, [r9, #3]
   2775c:	orr	r5, r1, r2
   27760:	ldrb	r1, [r9, #2]
   27764:	orr	r7, r5, r1, lsl #8
   27768:	ldrb	r1, [r9, #1]
   2776c:	orr	r1, r7, r1, lsl #16
   27770:	movw	r2, #25186	; 0x6262
   27774:	ldr	r7, [sp, #32]
   27778:	movt	r2, #24418	; 0x5f62
   2777c:	eor	r0, r0, r2
   27780:	ldrb	r2, [r9]
   27784:	orr	r1, r1, r2, lsl #24
   27788:	movw	r2, #24929	; 0x6161
   2778c:	movt	r2, #24929	; 0x6161
   27790:	eor	r1, r1, r2
   27794:	orrs	r0, r0, r1
   27798:	bne	27970 <main@@Base+0x11c28>
   2779c:	ldr	r0, [sp, #24]
   277a0:	add	r8, r9, #8
   277a4:	sub	lr, r0, r8
   277a8:	mov	r0, #8
   277ac:	cmp	lr, #8
   277b0:	movcc	r0, lr
   277b4:	and	r0, r0, #15
   277b8:	sub	r6, r0, #1
   277bc:	cmp	r6, #7
   277c0:	bhi	27a00 <main@@Base+0x11cb8>
   277c4:	add	r2, pc, #32
   277c8:	mov	r1, #0
   277cc:	mov	ip, #0
   277d0:	mov	sl, #0
   277d4:	mov	r5, #0
   277d8:	mov	r3, #0
   277dc:	mov	r4, #0
   277e0:	mov	r7, #0
   277e4:	mov	r0, #0
   277e8:	ldr	pc, [r2, r6, lsl #2]
   277ec:	andeq	r7, r2, r0, asr r8
   277f0:	andeq	r7, r2, r8, asr #16
   277f4:	andeq	r7, r2, r0, asr #16
   277f8:	andeq	r7, r2, r8, lsr r8
   277fc:	andeq	r7, r2, ip, lsr #16
   27800:	andeq	r7, r2, r0, lsr #16
   27804:	andeq	r7, r2, r0, lsl r8
   27808:	andeq	r7, r2, ip, lsl #16
   2780c:	ldrb	ip, [r9, #15]
   27810:	ldrb	r0, [r9, #14]
   27814:	mov	sl, r1
   27818:	orr	r0, ip, r0, lsl #8
   2781c:	mov	r1, r0
   27820:	ldrb	r0, [r9, #13]
   27824:	mov	r5, sl
   27828:	orr	r1, r1, r0, lsl #16
   2782c:	ldrb	r0, [r9, #12]
   27830:	mov	r3, r5
   27834:	orr	r1, r1, r0, lsl #24
   27838:	ldrb	r0, [r9, #11]
   2783c:	orr	r4, r0, r3
   27840:	ldrb	r0, [r9, #10]
   27844:	orr	r7, r4, r0, lsl #8
   27848:	ldrb	r0, [r9, #9]
   2784c:	orr	r0, r7, r0, lsl #16
   27850:	ldrb	r3, [r8]
   27854:	movw	r2, #29791	; 0x745f
   27858:	movt	r2, #24946	; 0x6172
   2785c:	eor	r2, r1, r2
   27860:	orr	r0, r0, r3, lsl #24
   27864:	movw	r3, #29556	; 0x7374
   27868:	movt	r3, #25183	; 0x625f
   2786c:	eor	r0, r0, r3
   27870:	orrs	r2, r2, r0
   27874:	bne	27998 <main@@Base+0x11c50>
   27878:	ldr	r0, [sp, #24]
   2787c:	add	r8, r9, #16
   27880:	mov	r1, #8
   27884:	sub	r0, r0, r8
   27888:	cmp	r0, #8
   2788c:	movcc	r1, r0
   27890:	and	r1, r1, #15
   27894:	sub	r3, r1, #1
   27898:	cmp	r3, #7
   2789c:	bhi	279fc <main@@Base+0x11cb4>
   278a0:	add	r4, pc, #20
   278a4:	mov	r1, #0
   278a8:	mov	r2, #0
   278ac:	mov	r6, #0
   278b0:	mov	r7, #0
   278b4:	mov	r5, #0
   278b8:	ldr	pc, [r4, r3, lsl #2]
   278bc:	andeq	r7, r2, r0, lsl #18
   278c0:	strdeq	r7, [r2], -r8
   278c4:	strdeq	r7, [r2], -r0
   278c8:	andeq	r7, r2, r4, ror #17
   278cc:	ldrdeq	r7, [r2], -ip
   278d0:	ldrdeq	r7, [r2], -ip
   278d4:	ldrdeq	r7, [r2], -ip
   278d8:	ldrdeq	r7, [r2], -ip
   278dc:	ldrb	r2, [r9, #20]
   278e0:	lsl	r2, r2, #24
   278e4:	ldrb	r3, [r9, #19]
   278e8:	orr	r6, r3, r1
   278ec:	mov	r1, r2
   278f0:	ldrb	r2, [r9, #18]
   278f4:	orr	r7, r6, r2, lsl #8
   278f8:	ldrb	r2, [r9, #17]
   278fc:	orr	r5, r7, r2, lsl #16
   27900:	ldrb	r2, [r8]
   27904:	movw	r3, #25968	; 0x6570
   27908:	and	r1, r1, #-16777216	; 0xff000000
   2790c:	movt	r3, #29556	; 0x7374
   27910:	eor	r1, r1, #1929379840	; 0x73000000
   27914:	orr	r2, r5, r2, lsl #24
   27918:	eor	r2, r2, r3
   2791c:	orrs	r1, r1, r2
   27920:	bne	279fc <main@@Base+0x11cb4>
   27924:	ldr	r7, [sp, #32]
   27928:	cmp	r0, #6
   2792c:	blt	27a00 <main@@Base+0x11cb8>
   27930:	ldrb	r0, [r9, #21]
   27934:	cmp	r0, #34	; 0x22
   27938:	bne	27a00 <main@@Base+0x11cb8>
   2793c:	ldr	r4, [sp, #24]
   27940:	add	r1, r9, #22
   27944:	sub	r0, r4, r1
   27948:	cmp	r0, #2
   2794c:	blt	272e4 <main@@Base+0x1159c>
   27950:	ldrb	r0, [r1]
   27954:	cmp	r0, #32
   27958:	bls	272d0 <main@@Base+0x11588>
   2795c:	ldr	r4, [sp, #24]
   27960:	mov	r9, r1
   27964:	cmp	r9, r4
   27968:	bne	272fc <main@@Base+0x115b4>
   2796c:	b	2733c <main@@Base+0x115f4>
   27970:	mov	r1, r9
   27974:	ldr	r9, [sp, #24]
   27978:	mov	r0, r7
   2797c:	mov	r2, r9
   27980:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   27984:	mov	sl, r0
   27988:	sub	r0, r9, sl
   2798c:	cmp	r0, #2
   27990:	bge	27a28 <main@@Base+0x11ce0>
   27994:	b	27a58 <main@@Base+0x11d10>
   27998:	movw	r2, #29440	; 0x7300
   2799c:	ldr	r7, [sp, #32]
   279a0:	bic	r1, r1, #255	; 0xff
   279a4:	movt	r2, #25968	; 0x6570
   279a8:	eor	r1, r1, r2
   279ac:	orrs	r0, r1, r0
   279b0:	bne	27a00 <main@@Base+0x11cb8>
   279b4:	cmp	lr, #8
   279b8:	blt	27a00 <main@@Base+0x11cb8>
   279bc:	ldrb	r0, [r9, #15]
   279c0:	cmp	r0, #34	; 0x22
   279c4:	bne	27a00 <main@@Base+0x11cb8>
   279c8:	ldr	r4, [sp, #24]
   279cc:	add	r1, r9, #16
   279d0:	sub	r0, r4, r1
   279d4:	cmp	r0, #2
   279d8:	blt	27260 <main@@Base+0x11518>
   279dc:	ldrb	r0, [r1]
   279e0:	cmp	r0, #32
   279e4:	bls	2724c <main@@Base+0x11504>
   279e8:	ldr	r4, [sp, #24]
   279ec:	mov	r9, r1
   279f0:	cmp	r9, r4
   279f4:	bne	27278 <main@@Base+0x11530>
   279f8:	b	272b8 <main@@Base+0x11570>
   279fc:	ldr	r7, [sp, #32]
   27a00:	ldr	r9, [sp, #24]
   27a04:	mov	r0, r7
   27a08:	mov	r1, r8
   27a0c:	mov	r2, r9
   27a10:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   27a14:	mov	sl, r0
   27a18:	mov	r8, #8
   27a1c:	sub	r0, r9, sl
   27a20:	cmp	r0, #2
   27a24:	blt	27a58 <main@@Base+0x11d10>
   27a28:	ldrb	r0, [sl]
   27a2c:	cmp	r0, #32
   27a30:	bls	27a44 <main@@Base+0x11cfc>
   27a34:	mov	r2, sl
   27a38:	cmp	r2, r9
   27a3c:	bne	27a74 <main@@Base+0x11d2c>
   27a40:	b	27b14 <main@@Base+0x11dcc>
   27a44:	bne	27a58 <main@@Base+0x11d10>
   27a48:	mov	r2, sl
   27a4c:	ldrb	r0, [r2, #1]!
   27a50:	cmp	r0, #32
   27a54:	bhi	27a6c <main@@Base+0x11d24>
   27a58:	mov	r0, r7
   27a5c:	mov	r1, sl
   27a60:	mov	r2, r9
   27a64:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   27a68:	mov	r2, r0
   27a6c:	cmp	r2, r9
   27a70:	beq	27b14 <main@@Base+0x11dcc>
   27a74:	ldrb	r0, [r2]
   27a78:	cmp	r0, #44	; 0x2c
   27a7c:	bne	27b2c <main@@Base+0x11de4>
   27a80:	add	r1, r2, #1
   27a84:	sub	r0, r9, r1
   27a88:	cmp	r0, #2
   27a8c:	blt	27abc <main@@Base+0x11d74>
   27a90:	ldrb	r0, [r1]
   27a94:	cmp	r0, #32
   27a98:	bls	27aac <main@@Base+0x11d64>
   27a9c:	mov	r2, r1
   27aa0:	cmp	r2, r9
   27aa4:	bne	27ad4 <main@@Base+0x11d8c>
   27aa8:	b	27b74 <main@@Base+0x11e2c>
   27aac:	bne	27abc <main@@Base+0x11d74>
   27ab0:	ldrb	r0, [r2, #2]!
   27ab4:	cmp	r0, #32
   27ab8:	bhi	27acc <main@@Base+0x11d84>
   27abc:	mov	r0, r7
   27ac0:	mov	r2, r9
   27ac4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   27ac8:	mov	r2, r0
   27acc:	cmp	r2, r9
   27ad0:	beq	27b74 <main@@Base+0x11e2c>
   27ad4:	ldrb	r0, [r2]
   27ad8:	cmp	r0, #125	; 0x7d
   27adc:	bne	27688 <main@@Base+0x11940>
   27ae0:	add	r1, r2, #1
   27ae4:	sub	r0, r9, r1
   27ae8:	cmp	r0, #2
   27aec:	blt	27bbc <main@@Base+0x11e74>
   27af0:	ldrb	r0, [r1]
   27af4:	cmp	r0, #32
   27af8:	bls	27b94 <main@@Base+0x11e4c>
   27afc:	mov	sl, r1
   27b00:	ldr	r0, [sp, #20]
   27b04:	ldr	r0, [r0]
   27b08:	cmp	r0, #0
   27b0c:	beq	268e0 <main@@Base+0x10b98>
   27b10:	b	29764 <main@@Base+0x13a1c>
   27b14:	mov	sl, r9
   27b18:	ldr	r0, [sp, #20]
   27b1c:	ldr	r0, [r0]
   27b20:	cmp	r0, #0
   27b24:	beq	268e0 <main@@Base+0x10b98>
   27b28:	b	29764 <main@@Base+0x13a1c>
   27b2c:	cmp	r0, #125	; 0x7d
   27b30:	bne	27b80 <main@@Base+0x11e38>
   27b34:	add	r1, r2, #1
   27b38:	sub	r0, r9, r1
   27b3c:	cmp	r0, #2
   27b40:	blt	27bbc <main@@Base+0x11e74>
   27b44:	ldrb	r0, [r1]
   27b48:	cmp	r0, #32
   27b4c:	bls	27b9c <main@@Base+0x11e54>
   27b50:	ldr	r9, [sp, #24]
   27b54:	ldr	r7, [sp, #32]
   27b58:	mov	sl, r1
   27b5c:	mov	r8, #8
   27b60:	ldr	r0, [sp, #20]
   27b64:	ldr	r0, [r0]
   27b68:	cmp	r0, #0
   27b6c:	beq	268e0 <main@@Base+0x10b98>
   27b70:	b	29764 <main@@Base+0x13a1c>
   27b74:	mov	r0, r7
   27b78:	mov	r1, r9
   27b7c:	b	27b88 <main@@Base+0x11e40>
   27b80:	mov	r0, r7
   27b84:	mov	r1, r2
   27b88:	mov	r2, r9
   27b8c:	mov	r3, #10
   27b90:	b	268c8 <main@@Base+0x10b80>
   27b94:	beq	27bac <main@@Base+0x11e64>
   27b98:	b	27bbc <main@@Base+0x11e74>
   27b9c:	ldr	r9, [sp, #24]
   27ba0:	ldr	r7, [sp, #32]
   27ba4:	mov	r8, #8
   27ba8:	bne	27bbc <main@@Base+0x11e74>
   27bac:	ldrb	r0, [r2, #2]!
   27bb0:	cmp	r0, #32
   27bb4:	mov	sl, r2
   27bb8:	bhi	268d0 <main@@Base+0x10b88>
   27bbc:	mov	r0, r7
   27bc0:	mov	r2, r9
   27bc4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   27bc8:	b	268cc <main@@Base+0x10b84>
   27bcc:	ldr	r8, [sp, #24]
   27bd0:	cmp	sl, r8
   27bd4:	bne	27c68 <main@@Base+0x11f20>
   27bd8:	b	27c2c <main@@Base+0x11ee4>
   27bdc:	mov	r8, sl
   27be0:	cmp	sl, r8
   27be4:	bne	27c68 <main@@Base+0x11f20>
   27be8:	b	27c2c <main@@Base+0x11ee4>
   27bec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27bf0:	cmp	r0, #0
   27bf4:	beq	27c1c <main@@Base+0x11ed4>
   27bf8:	ldr	r0, [sp, #32]
   27bfc:	ldr	r2, [sp, #24]
   27c00:	mov	r1, r8
   27c04:	mov	r3, #7
   27c08:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   27c0c:	mov	r8, r0
   27c10:	cmp	sl, r8
   27c14:	bne	27c68 <main@@Base+0x11f20>
   27c18:	b	27c2c <main@@Base+0x11ee4>
   27c1c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   27c20:	str	r4, [fp, #-44]	; 0xffffffd4
   27c24:	cmp	sl, r8
   27c28:	bne	27c68 <main@@Base+0x11f20>
   27c2c:	sub	r0, fp, #44	; 0x2c
   27c30:	ldr	r2, [sp, #24]
   27c34:	mov	r1, sl
   27c38:	str	r0, [sp]
   27c3c:	movw	r0, #53756	; 0xd1fc
   27c40:	movt	r0, #5
   27c44:	add	r3, r0, #60	; 0x3c
   27c48:	ldr	r0, [sp, #32]
   27c4c:	bl	248a8 <main@@Base+0xeb60>
   27c50:	cmp	r0, sl
   27c54:	mov	r8, r0
   27c58:	ldrne	r0, [sp, #24]
   27c5c:	cmpne	r8, r0
   27c60:	beq	29748 <main@@Base+0x13a00>
   27c64:	ldr	r4, [fp, #-44]	; 0xffffffd4
   27c68:	cmp	r4, #0
   27c6c:	bne	27c80 <main@@Base+0x11f38>
   27c70:	ldr	r0, [sp, #32]
   27c74:	ldrb	r0, [r0, #8]
   27c78:	tst	r0, #2
   27c7c:	beq	27ca4 <main@@Base+0x11f5c>
   27c80:	ldr	r0, [sp, #32]
   27c84:	mov	r1, #8
   27c88:	mov	r2, #4
   27c8c:	mov	r3, #4
   27c90:	ldr	r0, [r0]
   27c94:	bl	31040 <flatcc_builder_table_add@@Base>
   27c98:	cmp	r0, #0
   27c9c:	beq	29748 <main@@Base+0x13a00>
   27ca0:	str	r4, [r0]
   27ca4:	ldr	r9, [sp, #24]
   27ca8:	ldr	r7, [sp, #32]
   27cac:	sub	r0, r9, r8
   27cb0:	cmp	r0, #2
   27cb4:	bge	28fc4 <main@@Base+0x1327c>
   27cb8:	b	28ff4 <main@@Base+0x132ac>
   27cbc:	cmp	r2, r9
   27cc0:	mov	sl, r9
   27cc4:	beq	27cf4 <main@@Base+0x11fac>
   27cc8:	ldrb	r0, [r2]
   27ccc:	cmp	r0, #34	; 0x22
   27cd0:	bne	27cdc <main@@Base+0x11f94>
   27cd4:	add	sl, r2, #1
   27cd8:	b	27cf4 <main@@Base+0x11fac>
   27cdc:	mov	r1, r2
   27ce0:	mov	r0, r7
   27ce4:	mov	r2, r9
   27ce8:	mov	r3, #5
   27cec:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   27cf0:	mov	sl, r0
   27cf4:	sub	r8, r9, sl
   27cf8:	mov	r0, #8
   27cfc:	cmp	r8, #8
   27d00:	movcc	r0, r8
   27d04:	and	r0, r0, #15
   27d08:	sub	r3, r0, #1
   27d0c:	cmp	r3, #7
   27d10:	bhi	28648 <main@@Base+0x12900>
   27d14:	add	r4, pc, #32
   27d18:	mov	r0, #0
   27d1c:	mov	ip, #0
   27d20:	mov	lr, #0
   27d24:	mov	r6, #0
   27d28:	mov	r2, #0
   27d2c:	mov	r5, #0
   27d30:	mov	r7, #0
   27d34:	mov	r1, #0
   27d38:	ldr	pc, [r4, r3, lsl #2]
   27d3c:	andeq	r7, r2, r0, lsr #27
   27d40:	muleq	r2, r8, sp
   27d44:	muleq	r2, r0, sp
   27d48:	andeq	r7, r2, r8, lsl #27
   27d4c:	andeq	r7, r2, ip, ror sp
   27d50:	andeq	r7, r2, r0, ror sp
   27d54:	andeq	r7, r2, r0, ror #26
   27d58:	andeq	r7, r2, ip, asr sp
   27d5c:	ldrb	ip, [sl, #7]
   27d60:	ldrb	r1, [sl, #6]
   27d64:	mov	lr, r0
   27d68:	orr	r1, ip, r1, lsl #8
   27d6c:	mov	r0, r1
   27d70:	ldrb	r1, [sl, #5]
   27d74:	mov	r6, lr
   27d78:	orr	r0, r0, r1, lsl #16
   27d7c:	ldrb	r1, [sl, #4]
   27d80:	mov	r2, r6
   27d84:	orr	r0, r0, r1, lsl #24
   27d88:	ldrb	r1, [sl, #3]
   27d8c:	orr	r5, r1, r2
   27d90:	ldrb	r1, [sl, #2]
   27d94:	orr	r7, r5, r1, lsl #8
   27d98:	ldrb	r1, [sl, #1]
   27d9c:	orr	r1, r7, r1, lsl #16
   27da0:	ldrb	r2, [sl]
   27da4:	orr	r4, r1, r2, lsl #24
   27da8:	movw	r1, #25442	; 0x6362
   27dac:	movt	r1, #25443	; 0x6363
   27db0:	cmp	r4, r1
   27db4:	bhi	27e54 <main@@Base+0x1210c>
   27db8:	movw	r1, #13108	; 0x3334
   27dbc:	movw	r2, #25186	; 0x6262
   27dc0:	movt	r1, #12594	; 0x3132
   27dc4:	movt	r2, #25186	; 0x6262
   27dc8:	eor	r5, r0, r1
   27dcc:	movw	r1, #24929	; 0x6161
   27dd0:	movt	r1, #24929	; 0x6161
   27dd4:	eor	r0, r4, r1
   27dd8:	orrs	r0, r5, r0
   27ddc:	bne	27eb8 <main@@Base+0x12170>
   27de0:	add	r7, sl, #8
   27de4:	mov	r1, #8
   27de8:	mov	r2, #-268435456	; 0xf0000000
   27dec:	sub	r0, r9, r7
   27df0:	cmp	r0, #8
   27df4:	movcc	r1, r0
   27df8:	add	r1, r2, r1, lsl #28
   27dfc:	asr	r1, r1, #28
   27e00:	cmp	r1, #0
   27e04:	blt	28fa0 <main@@Base+0x13258>
   27e08:	ldrb	r1, [r7]
   27e0c:	cmp	r1, #53	; 0x35
   27e10:	bne	28fa0 <main@@Base+0x13258>
   27e14:	cmp	r0, #2
   27e18:	blt	28fa0 <main@@Base+0x13258>
   27e1c:	ldrb	r0, [sl, #9]
   27e20:	cmp	r0, #34	; 0x22
   27e24:	bne	28fa0 <main@@Base+0x13258>
   27e28:	add	r1, sl, #10
   27e2c:	sub	r0, r9, r1
   27e30:	cmp	r0, #2
   27e34:	blt	283e4 <main@@Base+0x1269c>
   27e38:	ldrb	r0, [r1]
   27e3c:	cmp	r0, #32
   27e40:	bls	283d4 <main@@Base+0x1268c>
   27e44:	mov	sl, r1
   27e48:	cmp	sl, r9
   27e4c:	bne	283fc <main@@Base+0x126b4>
   27e50:	b	28438 <main@@Base+0x126f0>
   27e54:	movw	r1, #13108	; 0x3334
   27e58:	movt	r1, #12594	; 0x3132
   27e5c:	eor	r5, r0, r1
   27e60:	ldr	r0, [sp, #16]
   27e64:	eor	r0, r4, r0
   27e68:	orrs	r0, r5, r0
   27e6c:	bne	27f0c <main@@Base+0x121c4>
   27e70:	cmp	r8, #9
   27e74:	mov	r7, sl
   27e78:	blt	28470 <main@@Base+0x12728>
   27e7c:	ldrb	r0, [sl, #8]
   27e80:	mov	r7, sl
   27e84:	cmp	r0, #34	; 0x22
   27e88:	bne	28470 <main@@Base+0x12728>
   27e8c:	add	r1, sl, #9
   27e90:	sub	r0, r9, r1
   27e94:	cmp	r0, #2
   27e98:	blt	27f7c <main@@Base+0x12234>
   27e9c:	ldrb	r0, [r1]
   27ea0:	cmp	r0, #32
   27ea4:	bls	27f68 <main@@Base+0x12220>
   27ea8:	mov	r7, r1
   27eac:	cmp	r7, r9
   27eb0:	bne	27f94 <main@@Base+0x1224c>
   27eb4:	b	28040 <main@@Base+0x122f8>
   27eb8:	ldr	r7, [sp, #32]
   27ebc:	teq	r4, r1
   27ec0:	bne	280cc <main@@Base+0x12384>
   27ec4:	cmp	r8, #5
   27ec8:	mov	r1, sl
   27ecc:	blt	28694 <main@@Base+0x1294c>
   27ed0:	ldrb	r0, [sl, #4]
   27ed4:	mov	r1, sl
   27ed8:	cmp	r0, #34	; 0x22
   27edc:	bne	28694 <main@@Base+0x1294c>
   27ee0:	add	r2, sl, #5
   27ee4:	sub	r0, r9, r2
   27ee8:	cmp	r0, #2
   27eec:	blt	2806c <main@@Base+0x12324>
   27ef0:	ldrb	r0, [r2]
   27ef4:	cmp	r0, #32
   27ef8:	bls	28058 <main@@Base+0x12310>
   27efc:	mov	r1, r2
   27f00:	cmp	r1, r9
   27f04:	bne	28088 <main@@Base+0x12340>
   27f08:	b	28170 <main@@Base+0x12428>
   27f0c:	ldr	r7, [sp, #32]
   27f10:	movw	r0, #25443	; 0x6363
   27f14:	movt	r0, #25443	; 0x6363
   27f18:	teq	r4, r0
   27f1c:	bne	281f0 <main@@Base+0x124a8>
   27f20:	cmp	r8, #5
   27f24:	mov	r1, sl
   27f28:	blt	28708 <main@@Base+0x129c0>
   27f2c:	ldrb	r0, [sl, #4]
   27f30:	mov	r1, sl
   27f34:	cmp	r0, #34	; 0x22
   27f38:	bne	28708 <main@@Base+0x129c0>
   27f3c:	add	r2, sl, #5
   27f40:	sub	r0, r9, r2
   27f44:	cmp	r0, #2
   27f48:	blt	28198 <main@@Base+0x12450>
   27f4c:	ldrb	r0, [r2]
   27f50:	cmp	r0, #32
   27f54:	bls	28184 <main@@Base+0x1243c>
   27f58:	mov	r1, r2
   27f5c:	cmp	r1, r9
   27f60:	bne	281b4 <main@@Base+0x1246c>
   27f64:	b	28248 <main@@Base+0x12500>
   27f68:	bne	27f7c <main@@Base+0x12234>
   27f6c:	mov	r7, sl
   27f70:	ldrb	r0, [r7, #10]!
   27f74:	cmp	r0, #32
   27f78:	bhi	27f8c <main@@Base+0x12244>
   27f7c:	ldr	r0, [sp, #32]
   27f80:	mov	r2, r9
   27f84:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   27f88:	mov	r7, r0
   27f8c:	cmp	r7, r9
   27f90:	beq	28040 <main@@Base+0x122f8>
   27f94:	ldrb	r0, [r7]
   27f98:	cmp	r0, #58	; 0x3a
   27f9c:	bne	28040 <main@@Base+0x122f8>
   27fa0:	add	r1, r7, #1
   27fa4:	sub	r0, r9, r1
   27fa8:	cmp	r0, #2
   27fac:	blt	28460 <main@@Base+0x12718>
   27fb0:	ldrb	r0, [r1]
   27fb4:	cmp	r0, #32
   27fb8:	bls	28450 <main@@Base+0x12708>
   27fbc:	mov	r7, r1
   27fc0:	cmp	sl, r7
   27fc4:	bne	28478 <main@@Base+0x12730>
   27fc8:	add	r7, sl, #8
   27fcc:	mov	r1, #8
   27fd0:	mov	r2, #-268435456	; 0xf0000000
   27fd4:	sub	r0, r9, r7
   27fd8:	cmp	r0, #8
   27fdc:	movcc	r1, r0
   27fe0:	add	r1, r2, r1, lsl #28
   27fe4:	asr	r1, r1, #28
   27fe8:	cmp	r1, #0
   27fec:	blt	28fa0 <main@@Base+0x13258>
   27ff0:	ldrb	r1, [r7]
   27ff4:	cmp	r1, #53	; 0x35
   27ff8:	bne	28fa0 <main@@Base+0x13258>
   27ffc:	cmp	r0, #2
   28000:	blt	28fa0 <main@@Base+0x13258>
   28004:	ldrb	r0, [sl, #9]
   28008:	cmp	r0, #34	; 0x22
   2800c:	bne	28fa0 <main@@Base+0x13258>
   28010:	add	r1, sl, #10
   28014:	sub	r0, r9, r1
   28018:	cmp	r0, #2
   2801c:	blt	2875c <main@@Base+0x12a14>
   28020:	ldrb	r0, [r1]
   28024:	cmp	r0, #32
   28028:	bls	28748 <main@@Base+0x12a00>
   2802c:	ldr	r9, [sp, #24]
   28030:	mov	sl, r1
   28034:	cmp	sl, r9
   28038:	bne	28774 <main@@Base+0x12a2c>
   2803c:	b	287b0 <main@@Base+0x12a68>
   28040:	ldr	r0, [sp, #32]
   28044:	mov	r1, r7
   28048:	mov	r2, r9
   2804c:	mov	r3, #4
   28050:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   28054:	b	2846c <main@@Base+0x12724>
   28058:	bne	2806c <main@@Base+0x12324>
   2805c:	mov	r1, sl
   28060:	ldrb	r0, [r1, #6]!
   28064:	cmp	r0, #32
   28068:	bhi	28080 <main@@Base+0x12338>
   2806c:	mov	r1, r2
   28070:	mov	r0, r7
   28074:	mov	r2, r9
   28078:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2807c:	mov	r1, r0
   28080:	cmp	r1, r9
   28084:	beq	28170 <main@@Base+0x12428>
   28088:	ldrb	r0, [r1]
   2808c:	cmp	r0, #58	; 0x3a
   28090:	bne	28170 <main@@Base+0x12428>
   28094:	add	r2, r1, #1
   28098:	sub	r0, r9, r2
   2809c:	cmp	r0, #2
   280a0:	blt	28680 <main@@Base+0x12938>
   280a4:	ldrb	r0, [r2]
   280a8:	cmp	r0, #32
   280ac:	bls	28668 <main@@Base+0x12920>
   280b0:	ldr	r9, [sp, #24]
   280b4:	ldr	r7, [sp, #32]
   280b8:	mov	r1, r2
   280bc:	movw	r2, #25186	; 0x6262
   280c0:	cmp	sl, r1
   280c4:	movt	r2, #25186	; 0x6262
   280c8:	bne	286a4 <main@@Base+0x1295c>
   280cc:	eor	r0, r4, r2
   280d0:	orrs	r0, r5, r0
   280d4:	bne	28120 <main@@Base+0x123d8>
   280d8:	cmp	r8, #9
   280dc:	mov	r7, sl
   280e0:	blt	287ec <main@@Base+0x12aa4>
   280e4:	ldrb	r0, [sl, #8]
   280e8:	mov	r7, sl
   280ec:	cmp	r0, #34	; 0x22
   280f0:	bne	287ec <main@@Base+0x12aa4>
   280f4:	add	r1, sl, #9
   280f8:	sub	r0, r9, r1
   280fc:	cmp	r0, #2
   28100:	blt	28270 <main@@Base+0x12528>
   28104:	ldrb	r0, [r1]
   28108:	cmp	r0, #32
   2810c:	bls	2825c <main@@Base+0x12514>
   28110:	mov	r7, r1
   28114:	cmp	r7, r9
   28118:	bne	28288 <main@@Base+0x12540>
   2811c:	b	282c8 <main@@Base+0x12580>
   28120:	teq	r4, r2
   28124:	bne	28648 <main@@Base+0x12900>
   28128:	cmp	r8, #5
   2812c:	mov	r1, sl
   28130:	blt	28c9c <main@@Base+0x12f54>
   28134:	ldrb	r0, [sl, #4]
   28138:	mov	r1, sl
   2813c:	cmp	r0, #34	; 0x22
   28140:	bne	28c9c <main@@Base+0x12f54>
   28144:	add	r2, sl, #5
   28148:	sub	r0, r9, r2
   2814c:	cmp	r0, #2
   28150:	blt	285f0 <main@@Base+0x128a8>
   28154:	ldrb	r0, [r2]
   28158:	cmp	r0, #32
   2815c:	bls	285dc <main@@Base+0x12894>
   28160:	mov	r1, r2
   28164:	cmp	r1, r9
   28168:	bne	2860c <main@@Base+0x128c4>
   2816c:	b	28654 <main@@Base+0x1290c>
   28170:	mov	r0, r7
   28174:	mov	r2, r9
   28178:	mov	r3, #4
   2817c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   28180:	b	28690 <main@@Base+0x12948>
   28184:	bne	28198 <main@@Base+0x12450>
   28188:	mov	r1, sl
   2818c:	ldrb	r0, [r1, #6]!
   28190:	cmp	r0, #32
   28194:	bhi	281ac <main@@Base+0x12464>
   28198:	mov	r1, r2
   2819c:	mov	r0, r7
   281a0:	mov	r2, r9
   281a4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   281a8:	mov	r1, r0
   281ac:	cmp	r1, r9
   281b0:	beq	28248 <main@@Base+0x12500>
   281b4:	ldrb	r0, [r1]
   281b8:	cmp	r0, #58	; 0x3a
   281bc:	bne	28248 <main@@Base+0x12500>
   281c0:	add	r2, r1, #1
   281c4:	sub	r0, r9, r2
   281c8:	cmp	r0, #2
   281cc:	blt	286f4 <main@@Base+0x129ac>
   281d0:	ldrb	r0, [r2]
   281d4:	cmp	r0, #32
   281d8:	bls	286dc <main@@Base+0x12994>
   281dc:	ldr	r9, [sp, #24]
   281e0:	ldr	r7, [sp, #32]
   281e4:	mov	r1, r2
   281e8:	cmp	sl, r1
   281ec:	bne	28710 <main@@Base+0x129c8>
   281f0:	ldr	r0, [sp, #12]
   281f4:	eor	r0, r4, r0
   281f8:	orrs	r0, r5, r0
   281fc:	bne	28648 <main@@Base+0x12900>
   28200:	cmp	r8, #9
   28204:	mov	r7, sl
   28208:	blt	28968 <main@@Base+0x12c20>
   2820c:	ldrb	r0, [sl, #8]
   28210:	mov	r7, sl
   28214:	cmp	r0, #34	; 0x22
   28218:	bne	28968 <main@@Base+0x12c20>
   2821c:	add	r1, sl, #9
   28220:	sub	r0, r9, r1
   28224:	cmp	r0, #2
   28228:	blt	282f4 <main@@Base+0x125ac>
   2822c:	ldrb	r0, [r1]
   28230:	cmp	r0, #32
   28234:	bls	282e0 <main@@Base+0x12598>
   28238:	mov	r7, r1
   2823c:	cmp	r7, r9
   28240:	bne	2830c <main@@Base+0x125c4>
   28244:	b	283bc <main@@Base+0x12674>
   28248:	mov	r0, r7
   2824c:	mov	r2, r9
   28250:	mov	r3, #4
   28254:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   28258:	b	28704 <main@@Base+0x129bc>
   2825c:	bne	28270 <main@@Base+0x12528>
   28260:	mov	r7, sl
   28264:	ldrb	r0, [r7, #10]!
   28268:	cmp	r0, #32
   2826c:	bhi	28280 <main@@Base+0x12538>
   28270:	ldr	r0, [sp, #32]
   28274:	mov	r2, r9
   28278:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2827c:	mov	r7, r0
   28280:	cmp	r7, r9
   28284:	beq	282c8 <main@@Base+0x12580>
   28288:	ldrb	r0, [r7]
   2828c:	cmp	r0, #58	; 0x3a
   28290:	bne	282c8 <main@@Base+0x12580>
   28294:	add	r1, r7, #1
   28298:	sub	r0, r9, r1
   2829c:	cmp	r0, #2
   282a0:	blt	287dc <main@@Base+0x12a94>
   282a4:	ldrb	r0, [r1]
   282a8:	cmp	r0, #32
   282ac:	bls	287c8 <main@@Base+0x12a80>
   282b0:	ldr	r9, [sp, #24]
   282b4:	mov	r7, r1
   282b8:	cmp	sl, r7
   282bc:	bne	287f4 <main@@Base+0x12aac>
   282c0:	ldr	r7, [sp, #32]
   282c4:	b	28648 <main@@Base+0x12900>
   282c8:	ldr	r0, [sp, #32]
   282cc:	mov	r1, r7
   282d0:	mov	r2, r9
   282d4:	mov	r3, #4
   282d8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   282dc:	b	287e8 <main@@Base+0x12aa0>
   282e0:	bne	282f4 <main@@Base+0x125ac>
   282e4:	mov	r7, sl
   282e8:	ldrb	r0, [r7, #10]!
   282ec:	cmp	r0, #32
   282f0:	bhi	28304 <main@@Base+0x125bc>
   282f4:	ldr	r0, [sp, #32]
   282f8:	mov	r2, r9
   282fc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   28300:	mov	r7, r0
   28304:	cmp	r7, r9
   28308:	beq	283bc <main@@Base+0x12674>
   2830c:	ldrb	r0, [r7]
   28310:	cmp	r0, #58	; 0x3a
   28314:	bne	283bc <main@@Base+0x12674>
   28318:	add	r1, r7, #1
   2831c:	sub	r0, r9, r1
   28320:	cmp	r0, #2
   28324:	blt	28958 <main@@Base+0x12c10>
   28328:	ldrb	r0, [r1]
   2832c:	cmp	r0, #32
   28330:	bls	28944 <main@@Base+0x12bfc>
   28334:	ldr	r9, [sp, #24]
   28338:	mov	r7, r1
   2833c:	cmp	sl, r7
   28340:	bne	28970 <main@@Base+0x12c28>
   28344:	add	r7, sl, #8
   28348:	mov	r1, #8
   2834c:	mov	r2, #-268435456	; 0xf0000000
   28350:	sub	r0, r9, r7
   28354:	cmp	r0, #8
   28358:	movcc	r1, r0
   2835c:	add	r1, r2, r1, lsl #28
   28360:	asr	r1, r1, #28
   28364:	cmp	r1, #0
   28368:	blt	28fa0 <main@@Base+0x13258>
   2836c:	ldrb	r1, [r7]
   28370:	cmp	r1, #53	; 0x35
   28374:	bne	28fa0 <main@@Base+0x13258>
   28378:	cmp	r0, #2
   2837c:	blt	28fa0 <main@@Base+0x13258>
   28380:	ldrb	r0, [sl, #9]
   28384:	cmp	r0, #34	; 0x22
   28388:	bne	28fa0 <main@@Base+0x13258>
   2838c:	add	r1, sl, #10
   28390:	sub	r0, r9, r1
   28394:	cmp	r0, #2
   28398:	blt	28d00 <main@@Base+0x12fb8>
   2839c:	ldrb	r0, [r1]
   283a0:	cmp	r0, #32
   283a4:	bls	28cf0 <main@@Base+0x12fa8>
   283a8:	mov	sl, r1
   283ac:	ldr	r0, [sp, #24]
   283b0:	cmp	sl, r0
   283b4:	bne	28d1c <main@@Base+0x12fd4>
   283b8:	b	28d5c <main@@Base+0x13014>
   283bc:	ldr	r0, [sp, #32]
   283c0:	mov	r1, r7
   283c4:	mov	r2, r9
   283c8:	mov	r3, #4
   283cc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   283d0:	b	28964 <main@@Base+0x12c1c>
   283d4:	bne	283e4 <main@@Base+0x1269c>
   283d8:	ldrb	r0, [sl, #11]!
   283dc:	cmp	r0, #32
   283e0:	bhi	283f4 <main@@Base+0x126ac>
   283e4:	ldr	r0, [sp, #32]
   283e8:	mov	r2, r9
   283ec:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   283f0:	mov	sl, r0
   283f4:	cmp	sl, r9
   283f8:	beq	28438 <main@@Base+0x126f0>
   283fc:	ldrb	r0, [sl]
   28400:	cmp	r0, #58	; 0x3a
   28404:	bne	28438 <main@@Base+0x126f0>
   28408:	add	r1, sl, #1
   2840c:	sub	r0, r9, r1
   28410:	cmp	r0, #2
   28414:	blt	28af8 <main@@Base+0x12db0>
   28418:	ldrb	r0, [r1]
   2841c:	cmp	r0, #32
   28420:	bls	28ae4 <main@@Base+0x12d9c>
   28424:	ldr	r9, [sp, #24]
   28428:	mov	sl, r1
   2842c:	cmp	r7, sl
   28430:	bne	28b10 <main@@Base+0x12dc8>
   28434:	b	28fa0 <main@@Base+0x13258>
   28438:	ldr	r0, [sp, #32]
   2843c:	mov	r1, sl
   28440:	mov	r2, r9
   28444:	mov	r3, #4
   28448:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2844c:	b	28b04 <main@@Base+0x12dbc>
   28450:	bne	28460 <main@@Base+0x12718>
   28454:	ldrb	r0, [r7, #2]!
   28458:	cmp	r0, #32
   2845c:	bhi	28470 <main@@Base+0x12728>
   28460:	ldr	r0, [sp, #32]
   28464:	mov	r2, r9
   28468:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2846c:	mov	r7, r0
   28470:	cmp	sl, r7
   28474:	beq	27fc8 <main@@Base+0x12280>
   28478:	mov	r4, #0
   2847c:	cmp	r7, r9
   28480:	str	r4, [fp, #-36]	; 0xffffffdc
   28484:	str	r4, [fp, #-40]	; 0xffffffd8
   28488:	str	r4, [sp, #44]	; 0x2c
   2848c:	str	r4, [sp, #40]	; 0x28
   28490:	str	r4, [fp, #-44]	; 0xffffffd4
   28494:	beq	284f0 <main@@Base+0x127a8>
   28498:	sub	r0, fp, #40	; 0x28
   2849c:	mov	r1, r7
   284a0:	mov	r2, r9
   284a4:	sub	r3, fp, #44	; 0x2c
   284a8:	str	r0, [sp]
   284ac:	ldr	r0, [sp, #32]
   284b0:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   284b4:	cmp	r0, r7
   284b8:	beq	28504 <main@@Base+0x127bc>
   284bc:	sub	r5, fp, #44	; 0x2c
   284c0:	mov	r8, r0
   284c4:	ldm	r5, {r0, r4, r5}
   284c8:	cmp	r0, #0
   284cc:	beq	2851c <main@@Base+0x127d4>
   284d0:	subs	r0, r4, #1
   284d4:	sbcs	r0, r5, #-2147483648	; 0x80000000
   284d8:	bcc	28550 <main@@Base+0x12808>
   284dc:	ldr	r0, [sp, #32]
   284e0:	mov	r1, r8
   284e4:	mov	r2, r9
   284e8:	mov	r3, #8
   284ec:	b	28534 <main@@Base+0x127ec>
   284f0:	mov	r5, #0
   284f4:	mov	r8, r9
   284f8:	cmp	r7, r8
   284fc:	bne	285a4 <main@@Base+0x1285c>
   28500:	b	28568 <main@@Base+0x12820>
   28504:	mov	r4, #0
   28508:	mov	r5, #0
   2850c:	mov	r8, r7
   28510:	cmp	r7, r8
   28514:	bne	285a4 <main@@Base+0x1285c>
   28518:	b	28568 <main@@Base+0x12820>
   2851c:	cmn	r5, #1
   28520:	bgt	28558 <main@@Base+0x12810>
   28524:	ldr	r0, [sp, #32]
   28528:	mov	r1, r8
   2852c:	mov	r2, r9
   28530:	mov	r3, #7
   28534:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   28538:	mov	r8, r0
   2853c:	mov	r4, #0
   28540:	mov	r5, #0
   28544:	cmp	r7, r8
   28548:	bne	285a4 <main@@Base+0x1285c>
   2854c:	b	28568 <main@@Base+0x12820>
   28550:	rsbs	r4, r4, #0
   28554:	rsc	r5, r5, #0
   28558:	str	r4, [sp, #40]	; 0x28
   2855c:	str	r5, [sp, #44]	; 0x2c
   28560:	cmp	r7, r8
   28564:	bne	285a4 <main@@Base+0x1285c>
   28568:	add	r0, sp, #40	; 0x28
   2856c:	mov	r1, r7
   28570:	mov	r2, r9
   28574:	str	r0, [sp]
   28578:	movw	r0, #53756	; 0xd1fc
   2857c:	movt	r0, #5
   28580:	add	r3, r0, #24
   28584:	ldr	r0, [sp, #32]
   28588:	bl	2467c <main@@Base+0xe934>
   2858c:	mov	r8, r0
   28590:	cmp	r0, r7
   28594:	cmpne	r8, r9
   28598:	beq	2974c <main@@Base+0x13a04>
   2859c:	ldr	r4, [sp, #40]	; 0x28
   285a0:	ldr	r5, [sp, #44]	; 0x2c
   285a4:	ldr	r7, [sp, #32]
   285a8:	orrs	r0, r4, r5
   285ac:	bne	285bc <main@@Base+0x12874>
   285b0:	ldrb	r0, [r7, #8]
   285b4:	tst	r0, #2
   285b8:	beq	28fb8 <main@@Base+0x13270>
   285bc:	ldr	r0, [r7]
   285c0:	mov	r1, #5
   285c4:	mov	r2, #8
   285c8:	mov	r3, #8
   285cc:	bl	31040 <flatcc_builder_table_add@@Base>
   285d0:	cmp	r0, #0
   285d4:	bne	28ad0 <main@@Base+0x12d88>
   285d8:	b	2974c <main@@Base+0x13a04>
   285dc:	bne	285f0 <main@@Base+0x128a8>
   285e0:	mov	r1, sl
   285e4:	ldrb	r0, [r1, #6]!
   285e8:	cmp	r0, #32
   285ec:	bhi	28604 <main@@Base+0x128bc>
   285f0:	mov	r1, r2
   285f4:	mov	r0, r7
   285f8:	mov	r2, r9
   285fc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   28600:	mov	r1, r0
   28604:	cmp	r1, r9
   28608:	beq	28654 <main@@Base+0x1290c>
   2860c:	ldrb	r0, [r1]
   28610:	cmp	r0, #58	; 0x3a
   28614:	bne	28654 <main@@Base+0x1290c>
   28618:	add	r2, r1, #1
   2861c:	sub	r0, r9, r2
   28620:	cmp	r0, #2
   28624:	blt	28c88 <main@@Base+0x12f40>
   28628:	ldrb	r0, [r2]
   2862c:	cmp	r0, #32
   28630:	bls	28c70 <main@@Base+0x12f28>
   28634:	ldr	r9, [sp, #24]
   28638:	ldr	r7, [sp, #32]
   2863c:	mov	r1, r2
   28640:	cmp	sl, r1
   28644:	bne	28ca4 <main@@Base+0x12f5c>
   28648:	mov	r0, r7
   2864c:	mov	r1, sl
   28650:	b	28fac <main@@Base+0x13264>
   28654:	mov	r0, r7
   28658:	mov	r2, r9
   2865c:	mov	r3, #4
   28660:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   28664:	b	28c98 <main@@Base+0x12f50>
   28668:	ldr	r9, [sp, #24]
   2866c:	ldr	r7, [sp, #32]
   28670:	bne	28680 <main@@Base+0x12938>
   28674:	ldrb	r0, [r1, #2]!
   28678:	cmp	r0, #32
   2867c:	bhi	28694 <main@@Base+0x1294c>
   28680:	mov	r1, r2
   28684:	mov	r0, r7
   28688:	mov	r2, r9
   2868c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   28690:	mov	r1, r0
   28694:	movw	r2, #25186	; 0x6262
   28698:	cmp	sl, r1
   2869c:	movt	r2, #25186	; 0x6262
   286a0:	beq	280cc <main@@Base+0x12384>
   286a4:	mov	r0, r7
   286a8:	mov	r2, r9
   286ac:	add	r3, sp, #36	; 0x24
   286b0:	bl	37464 <flatcc_json_parser_build_string@@Base>
   286b4:	mov	r8, r0
   286b8:	ldr	r0, [sp, #36]	; 0x24
   286bc:	cmp	r0, #0
   286c0:	beq	29750 <main@@Base+0x13a08>
   286c4:	ldr	r0, [r7]
   286c8:	mov	r1, #0
   286cc:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   286d0:	cmp	r0, #0
   286d4:	bne	28cd8 <main@@Base+0x12f90>
   286d8:	b	29750 <main@@Base+0x13a08>
   286dc:	ldr	r9, [sp, #24]
   286e0:	ldr	r7, [sp, #32]
   286e4:	bne	286f4 <main@@Base+0x129ac>
   286e8:	ldrb	r0, [r1, #2]!
   286ec:	cmp	r0, #32
   286f0:	bhi	28708 <main@@Base+0x129c0>
   286f4:	mov	r1, r2
   286f8:	mov	r0, r7
   286fc:	mov	r2, r9
   28700:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   28704:	mov	r1, r0
   28708:	cmp	sl, r1
   2870c:	beq	281f0 <main@@Base+0x124a8>
   28710:	mov	r0, r7
   28714:	mov	r2, r9
   28718:	add	r3, sp, #36	; 0x24
   2871c:	bl	37464 <flatcc_json_parser_build_string@@Base>
   28720:	mov	r8, r0
   28724:	ldr	r0, [sp, #36]	; 0x24
   28728:	cmp	r0, #0
   2872c:	beq	29750 <main@@Base+0x13a08>
   28730:	ldr	r0, [r7]
   28734:	mov	r1, #4
   28738:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   2873c:	cmp	r0, #0
   28740:	bne	28cd8 <main@@Base+0x12f90>
   28744:	b	29750 <main@@Base+0x13a08>
   28748:	ldr	r9, [sp, #24]
   2874c:	bne	2875c <main@@Base+0x12a14>
   28750:	ldrb	r0, [sl, #11]!
   28754:	cmp	r0, #32
   28758:	bhi	2876c <main@@Base+0x12a24>
   2875c:	ldr	r0, [sp, #32]
   28760:	mov	r2, r9
   28764:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   28768:	mov	sl, r0
   2876c:	cmp	sl, r9
   28770:	beq	287b0 <main@@Base+0x12a68>
   28774:	ldrb	r0, [sl]
   28778:	cmp	r0, #58	; 0x3a
   2877c:	bne	287b0 <main@@Base+0x12a68>
   28780:	add	r1, sl, #1
   28784:	sub	r0, r9, r1
   28788:	cmp	r0, #2
   2878c:	blt	28d88 <main@@Base+0x13040>
   28790:	ldrb	r0, [r1]
   28794:	cmp	r0, #32
   28798:	bls	28d74 <main@@Base+0x1302c>
   2879c:	ldr	r9, [sp, #24]
   287a0:	mov	sl, r1
   287a4:	cmp	r7, sl
   287a8:	bne	28da0 <main@@Base+0x13058>
   287ac:	b	28fa0 <main@@Base+0x13258>
   287b0:	ldr	r0, [sp, #32]
   287b4:	mov	r1, sl
   287b8:	mov	r2, r9
   287bc:	mov	r3, #4
   287c0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   287c4:	b	28d94 <main@@Base+0x1304c>
   287c8:	ldr	r9, [sp, #24]
   287cc:	bne	287dc <main@@Base+0x12a94>
   287d0:	ldrb	r0, [r7, #2]!
   287d4:	cmp	r0, #32
   287d8:	bhi	287ec <main@@Base+0x12aa4>
   287dc:	ldr	r0, [sp, #32]
   287e0:	mov	r2, r9
   287e4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   287e8:	mov	r7, r0
   287ec:	cmp	sl, r7
   287f0:	beq	282c0 <main@@Base+0x12578>
   287f4:	mov	r4, #0
   287f8:	cmp	r7, r9
   287fc:	str	r4, [fp, #-36]	; 0xffffffdc
   28800:	str	r4, [fp, #-40]	; 0xffffffd8
   28804:	str	r4, [sp, #44]	; 0x2c
   28808:	str	r4, [sp, #40]	; 0x28
   2880c:	str	r4, [fp, #-44]	; 0xffffffd4
   28810:	beq	2886c <main@@Base+0x12b24>
   28814:	sub	r0, fp, #40	; 0x28
   28818:	mov	r1, r7
   2881c:	mov	r2, r9
   28820:	sub	r3, fp, #44	; 0x2c
   28824:	str	r0, [sp]
   28828:	ldr	r0, [sp, #32]
   2882c:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   28830:	cmp	r0, r7
   28834:	beq	28880 <main@@Base+0x12b38>
   28838:	sub	r5, fp, #44	; 0x2c
   2883c:	mov	r8, r0
   28840:	ldm	r5, {r0, r4, r5}
   28844:	cmp	r0, #0
   28848:	beq	28898 <main@@Base+0x12b50>
   2884c:	subs	r0, r4, #1
   28850:	sbcs	r0, r5, #-2147483648	; 0x80000000
   28854:	bcc	288cc <main@@Base+0x12b84>
   28858:	ldr	r0, [sp, #32]
   2885c:	mov	r1, r8
   28860:	mov	r2, r9
   28864:	mov	r3, #8
   28868:	b	288b0 <main@@Base+0x12b68>
   2886c:	mov	r5, #0
   28870:	mov	r8, r9
   28874:	cmp	r7, r8
   28878:	bne	28920 <main@@Base+0x12bd8>
   2887c:	b	288e4 <main@@Base+0x12b9c>
   28880:	mov	r4, #0
   28884:	mov	r5, #0
   28888:	mov	r8, r7
   2888c:	cmp	r7, r8
   28890:	bne	28920 <main@@Base+0x12bd8>
   28894:	b	288e4 <main@@Base+0x12b9c>
   28898:	cmn	r5, #1
   2889c:	bgt	288d4 <main@@Base+0x12b8c>
   288a0:	ldr	r0, [sp, #32]
   288a4:	mov	r1, r8
   288a8:	mov	r2, r9
   288ac:	mov	r3, #7
   288b0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   288b4:	mov	r8, r0
   288b8:	mov	r4, #0
   288bc:	mov	r5, #0
   288c0:	cmp	r7, r8
   288c4:	bne	28920 <main@@Base+0x12bd8>
   288c8:	b	288e4 <main@@Base+0x12b9c>
   288cc:	rsbs	r4, r4, #0
   288d0:	rsc	r5, r5, #0
   288d4:	str	r4, [sp, #40]	; 0x28
   288d8:	str	r5, [sp, #44]	; 0x2c
   288dc:	cmp	r7, r8
   288e0:	bne	28920 <main@@Base+0x12bd8>
   288e4:	add	r0, sp, #40	; 0x28
   288e8:	mov	r1, r7
   288ec:	mov	r2, r9
   288f0:	str	r0, [sp]
   288f4:	movw	r0, #53756	; 0xd1fc
   288f8:	movt	r0, #5
   288fc:	add	r3, r0, #12
   28900:	ldr	r0, [sp, #32]
   28904:	bl	2467c <main@@Base+0xe934>
   28908:	mov	r8, r0
   2890c:	cmp	r0, r7
   28910:	cmpne	r8, r9
   28914:	beq	29748 <main@@Base+0x13a00>
   28918:	ldr	r4, [sp, #40]	; 0x28
   2891c:	ldr	r5, [sp, #44]	; 0x2c
   28920:	ldr	r7, [sp, #32]
   28924:	orrs	r0, r4, r5
   28928:	bne	28938 <main@@Base+0x12bf0>
   2892c:	ldrb	r0, [r7, #8]
   28930:	tst	r0, #2
   28934:	beq	28fb8 <main@@Base+0x13270>
   28938:	ldr	r0, [r7]
   2893c:	mov	r1, #3
   28940:	b	28abc <main@@Base+0x12d74>
   28944:	ldr	r9, [sp, #24]
   28948:	bne	28958 <main@@Base+0x12c10>
   2894c:	ldrb	r0, [r7, #2]!
   28950:	cmp	r0, #32
   28954:	bhi	28968 <main@@Base+0x12c20>
   28958:	ldr	r0, [sp, #32]
   2895c:	mov	r2, r9
   28960:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   28964:	mov	r7, r0
   28968:	cmp	sl, r7
   2896c:	beq	28344 <main@@Base+0x125fc>
   28970:	mov	r4, #0
   28974:	cmp	r7, r9
   28978:	str	r4, [fp, #-36]	; 0xffffffdc
   2897c:	str	r4, [fp, #-40]	; 0xffffffd8
   28980:	str	r4, [sp, #44]	; 0x2c
   28984:	str	r4, [sp, #40]	; 0x28
   28988:	str	r4, [fp, #-44]	; 0xffffffd4
   2898c:	beq	289e8 <main@@Base+0x12ca0>
   28990:	sub	r0, fp, #40	; 0x28
   28994:	mov	r1, r7
   28998:	mov	r2, r9
   2899c:	sub	r3, fp, #44	; 0x2c
   289a0:	str	r0, [sp]
   289a4:	ldr	r0, [sp, #32]
   289a8:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   289ac:	cmp	r0, r7
   289b0:	beq	289fc <main@@Base+0x12cb4>
   289b4:	sub	r5, fp, #44	; 0x2c
   289b8:	mov	r8, r0
   289bc:	ldm	r5, {r0, r4, r5}
   289c0:	cmp	r0, #0
   289c4:	beq	28a14 <main@@Base+0x12ccc>
   289c8:	subs	r0, r4, #1
   289cc:	sbcs	r0, r5, #-2147483648	; 0x80000000
   289d0:	bcc	28a48 <main@@Base+0x12d00>
   289d4:	ldr	r0, [sp, #32]
   289d8:	mov	r1, r8
   289dc:	mov	r2, r9
   289e0:	mov	r3, #8
   289e4:	b	28a2c <main@@Base+0x12ce4>
   289e8:	mov	r5, #0
   289ec:	mov	r8, r9
   289f0:	cmp	r7, r8
   289f4:	bne	28a9c <main@@Base+0x12d54>
   289f8:	b	28a60 <main@@Base+0x12d18>
   289fc:	mov	r4, #0
   28a00:	mov	r5, #0
   28a04:	mov	r8, r7
   28a08:	cmp	r7, r8
   28a0c:	bne	28a9c <main@@Base+0x12d54>
   28a10:	b	28a60 <main@@Base+0x12d18>
   28a14:	cmn	r5, #1
   28a18:	bgt	28a50 <main@@Base+0x12d08>
   28a1c:	ldr	r0, [sp, #32]
   28a20:	mov	r1, r8
   28a24:	mov	r2, r9
   28a28:	mov	r3, #7
   28a2c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   28a30:	mov	r8, r0
   28a34:	mov	r4, #0
   28a38:	mov	r5, #0
   28a3c:	cmp	r7, r8
   28a40:	bne	28a9c <main@@Base+0x12d54>
   28a44:	b	28a60 <main@@Base+0x12d18>
   28a48:	rsbs	r4, r4, #0
   28a4c:	rsc	r5, r5, #0
   28a50:	str	r4, [sp, #40]	; 0x28
   28a54:	str	r5, [sp, #44]	; 0x2c
   28a58:	cmp	r7, r8
   28a5c:	bne	28a9c <main@@Base+0x12d54>
   28a60:	add	r0, sp, #40	; 0x28
   28a64:	mov	r1, r7
   28a68:	mov	r2, r9
   28a6c:	str	r0, [sp]
   28a70:	movw	r0, #53756	; 0xd1fc
   28a74:	movt	r0, #5
   28a78:	add	r3, r0, #48	; 0x30
   28a7c:	ldr	r0, [sp, #32]
   28a80:	bl	2467c <main@@Base+0xe934>
   28a84:	mov	r8, r0
   28a88:	cmp	r0, r7
   28a8c:	cmpne	r8, r9
   28a90:	beq	29748 <main@@Base+0x13a00>
   28a94:	ldr	r4, [sp, #40]	; 0x28
   28a98:	ldr	r5, [sp, #44]	; 0x2c
   28a9c:	ldr	r7, [sp, #32]
   28aa0:	orrs	r0, r4, r5
   28aa4:	bne	28ab4 <main@@Base+0x12d6c>
   28aa8:	ldrb	r0, [r7, #8]
   28aac:	tst	r0, #2
   28ab0:	beq	28fb8 <main@@Base+0x13270>
   28ab4:	ldr	r0, [r7]
   28ab8:	mov	r1, #7
   28abc:	mov	r2, #8
   28ac0:	mov	r3, #8
   28ac4:	bl	31040 <flatcc_builder_table_add@@Base>
   28ac8:	cmp	r0, #0
   28acc:	beq	29748 <main@@Base+0x13a00>
   28ad0:	strd	r4, [r0]
   28ad4:	sub	r0, r9, r8
   28ad8:	cmp	r0, #2
   28adc:	bge	28fc4 <main@@Base+0x1327c>
   28ae0:	b	28ff4 <main@@Base+0x132ac>
   28ae4:	ldr	r9, [sp, #24]
   28ae8:	bne	28af8 <main@@Base+0x12db0>
   28aec:	ldrb	r0, [sl, #2]!
   28af0:	cmp	r0, #32
   28af4:	bhi	28b08 <main@@Base+0x12dc0>
   28af8:	ldr	r0, [sp, #32]
   28afc:	mov	r2, r9
   28b00:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   28b04:	mov	sl, r0
   28b08:	cmp	r7, sl
   28b0c:	beq	28fa0 <main@@Base+0x13258>
   28b10:	mov	r4, #0
   28b14:	cmp	sl, r9
   28b18:	str	r4, [fp, #-36]	; 0xffffffdc
   28b1c:	str	r4, [fp, #-40]	; 0xffffffd8
   28b20:	str	r4, [fp, #-44]	; 0xffffffd4
   28b24:	str	r4, [sp, #40]	; 0x28
   28b28:	beq	28b78 <main@@Base+0x12e30>
   28b2c:	ldr	r7, [sp, #32]
   28b30:	sub	r0, fp, #40	; 0x28
   28b34:	mov	r1, sl
   28b38:	mov	r2, r9
   28b3c:	add	r3, sp, #40	; 0x28
   28b40:	str	r0, [sp]
   28b44:	mov	r0, r7
   28b48:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   28b4c:	cmp	r0, sl
   28b50:	beq	28b8c <main@@Base+0x12e44>
   28b54:	mov	r8, r0
   28b58:	ldr	r0, [sp, #40]	; 0x28
   28b5c:	cmp	r0, #0
   28b60:	beq	28b9c <main@@Base+0x12e54>
   28b64:	ldr	r7, [sp, #32]
   28b68:	ldr	r9, [sp, #24]
   28b6c:	mov	r1, r8
   28b70:	mov	r3, #8
   28b74:	b	28bb8 <main@@Base+0x12e70>
   28b78:	mov	r8, r9
   28b7c:	ldr	r7, [sp, #32]
   28b80:	cmp	sl, r8
   28b84:	bne	28c10 <main@@Base+0x12ec8>
   28b88:	b	28bd0 <main@@Base+0x12e88>
   28b8c:	mov	r8, sl
   28b90:	cmp	sl, r8
   28b94:	bne	28c10 <main@@Base+0x12ec8>
   28b98:	b	28bd0 <main@@Base+0x12e88>
   28b9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28ba0:	cmp	r0, #0
   28ba4:	beq	28c54 <main@@Base+0x12f0c>
   28ba8:	ldr	r7, [sp, #32]
   28bac:	ldr	r9, [sp, #24]
   28bb0:	mov	r1, r8
   28bb4:	mov	r3, #7
   28bb8:	mov	r0, r7
   28bbc:	mov	r2, r9
   28bc0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   28bc4:	mov	r8, r0
   28bc8:	cmp	sl, r8
   28bcc:	bne	28c10 <main@@Base+0x12ec8>
   28bd0:	movw	r3, #53756	; 0xd1fc
   28bd4:	sub	r0, fp, #44	; 0x2c
   28bd8:	mov	r1, sl
   28bdc:	mov	r2, r9
   28be0:	str	r0, [sp]
   28be4:	mov	r0, r7
   28be8:	movt	r3, #5
   28bec:	bl	248a8 <main@@Base+0xeb60>
   28bf0:	cmp	r0, sl
   28bf4:	mov	r8, r0
   28bf8:	ldrne	r0, [sp, #24]
   28bfc:	cmpne	r8, r0
   28c00:	beq	29748 <main@@Base+0x13a00>
   28c04:	ldr	r4, [fp, #-44]	; 0xffffffd4
   28c08:	ldr	r9, [sp, #24]
   28c0c:	ldr	r7, [sp, #32]
   28c10:	cmp	r4, #0
   28c14:	bne	28c24 <main@@Base+0x12edc>
   28c18:	ldrb	r0, [r7, #8]
   28c1c:	tst	r0, #2
   28c20:	beq	28fb8 <main@@Base+0x13270>
   28c24:	ldr	r0, [r7]
   28c28:	mov	r1, #1
   28c2c:	mov	r2, #4
   28c30:	mov	r3, #4
   28c34:	bl	31040 <flatcc_builder_table_add@@Base>
   28c38:	cmp	r0, #0
   28c3c:	beq	29748 <main@@Base+0x13a00>
   28c40:	str	r4, [r0]
   28c44:	sub	r0, r9, r8
   28c48:	cmp	r0, #2
   28c4c:	bge	28fc4 <main@@Base+0x1327c>
   28c50:	b	28ff4 <main@@Base+0x132ac>
   28c54:	ldr	r4, [fp, #-40]	; 0xffffffd8
   28c58:	ldr	r9, [sp, #24]
   28c5c:	str	r4, [fp, #-44]	; 0xffffffd4
   28c60:	ldr	r7, [sp, #32]
   28c64:	cmp	sl, r8
   28c68:	bne	28c10 <main@@Base+0x12ec8>
   28c6c:	b	28bd0 <main@@Base+0x12e88>
   28c70:	ldr	r9, [sp, #24]
   28c74:	ldr	r7, [sp, #32]
   28c78:	bne	28c88 <main@@Base+0x12f40>
   28c7c:	ldrb	r0, [r1, #2]!
   28c80:	cmp	r0, #32
   28c84:	bhi	28c9c <main@@Base+0x12f54>
   28c88:	mov	r1, r2
   28c8c:	mov	r0, r7
   28c90:	mov	r2, r9
   28c94:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   28c98:	mov	r1, r0
   28c9c:	cmp	sl, r1
   28ca0:	beq	28648 <main@@Base+0x12900>
   28ca4:	mov	r0, r7
   28ca8:	mov	r2, r9
   28cac:	add	r3, sp, #36	; 0x24
   28cb0:	bl	37464 <flatcc_json_parser_build_string@@Base>
   28cb4:	mov	r8, r0
   28cb8:	ldr	r0, [sp, #36]	; 0x24
   28cbc:	cmp	r0, #0
   28cc0:	beq	29750 <main@@Base+0x13a08>
   28cc4:	ldr	r0, [r7]
   28cc8:	mov	r1, #2
   28ccc:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   28cd0:	cmp	r0, #0
   28cd4:	beq	29750 <main@@Base+0x13a08>
   28cd8:	ldr	r1, [sp, #36]	; 0x24
   28cdc:	str	r1, [r0]
   28ce0:	sub	r0, r9, r8
   28ce4:	cmp	r0, #2
   28ce8:	bge	28fc4 <main@@Base+0x1327c>
   28cec:	b	28ff4 <main@@Base+0x132ac>
   28cf0:	bne	28d00 <main@@Base+0x12fb8>
   28cf4:	ldrb	r0, [sl, #11]!
   28cf8:	cmp	r0, #32
   28cfc:	bhi	28d10 <main@@Base+0x12fc8>
   28d00:	ldr	r0, [sp, #32]
   28d04:	ldr	r2, [sp, #24]
   28d08:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   28d0c:	mov	sl, r0
   28d10:	ldr	r0, [sp, #24]
   28d14:	cmp	sl, r0
   28d18:	beq	28d5c <main@@Base+0x13014>
   28d1c:	ldrb	r0, [sl]
   28d20:	cmp	r0, #58	; 0x3a
   28d24:	bne	28d5c <main@@Base+0x13014>
   28d28:	ldr	r0, [sp, #24]
   28d2c:	add	r1, sl, #1
   28d30:	sub	r0, r0, r1
   28d34:	cmp	r0, #2
   28d38:	blt	28f10 <main@@Base+0x131c8>
   28d3c:	ldrb	r0, [r1]
   28d40:	cmp	r0, #32
   28d44:	bls	28f00 <main@@Base+0x131b8>
   28d48:	mov	sl, r1
   28d4c:	ldr	r9, [sp, #24]
   28d50:	cmp	r7, sl
   28d54:	bne	28f2c <main@@Base+0x131e4>
   28d58:	b	28fa0 <main@@Base+0x13258>
   28d5c:	ldr	r0, [sp, #32]
   28d60:	ldr	r2, [sp, #24]
   28d64:	mov	r1, sl
   28d68:	mov	r3, #4
   28d6c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   28d70:	b	28f1c <main@@Base+0x131d4>
   28d74:	ldr	r9, [sp, #24]
   28d78:	bne	28d88 <main@@Base+0x13040>
   28d7c:	ldrb	r0, [sl, #2]!
   28d80:	cmp	r0, #32
   28d84:	bhi	28d98 <main@@Base+0x13050>
   28d88:	ldr	r0, [sp, #32]
   28d8c:	mov	r2, r9
   28d90:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   28d94:	mov	sl, r0
   28d98:	cmp	r7, sl
   28d9c:	beq	28fa0 <main@@Base+0x13258>
   28da0:	mov	r4, #0
   28da4:	cmp	sl, r9
   28da8:	str	r4, [fp, #-36]	; 0xffffffdc
   28dac:	str	r4, [fp, #-40]	; 0xffffffd8
   28db0:	str	r4, [fp, #-44]	; 0xffffffd4
   28db4:	str	r4, [sp, #40]	; 0x28
   28db8:	beq	28e14 <main@@Base+0x130cc>
   28dbc:	sub	r0, fp, #40	; 0x28
   28dc0:	ldr	r2, [sp, #24]
   28dc4:	mov	r1, sl
   28dc8:	add	r3, sp, #40	; 0x28
   28dcc:	str	r0, [sp]
   28dd0:	ldr	r0, [sp, #32]
   28dd4:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   28dd8:	cmp	r0, sl
   28ddc:	beq	28e24 <main@@Base+0x130dc>
   28de0:	mov	r8, r0
   28de4:	ldr	r0, [sp, #40]	; 0x28
   28de8:	cmp	r0, #0
   28dec:	beq	28e34 <main@@Base+0x130ec>
   28df0:	ldr	r0, [sp, #32]
   28df4:	ldr	r2, [sp, #24]
   28df8:	mov	r1, r8
   28dfc:	mov	r3, #8
   28e00:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   28e04:	mov	r8, r0
   28e08:	cmp	sl, r8
   28e0c:	bne	28eb0 <main@@Base+0x13168>
   28e10:	b	28e74 <main@@Base+0x1312c>
   28e14:	ldr	r8, [sp, #24]
   28e18:	cmp	sl, r8
   28e1c:	bne	28eb0 <main@@Base+0x13168>
   28e20:	b	28e74 <main@@Base+0x1312c>
   28e24:	mov	r8, sl
   28e28:	cmp	sl, r8
   28e2c:	bne	28eb0 <main@@Base+0x13168>
   28e30:	b	28e74 <main@@Base+0x1312c>
   28e34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28e38:	cmp	r0, #0
   28e3c:	beq	28e64 <main@@Base+0x1311c>
   28e40:	ldr	r0, [sp, #32]
   28e44:	ldr	r2, [sp, #24]
   28e48:	mov	r1, r8
   28e4c:	mov	r3, #7
   28e50:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   28e54:	mov	r8, r0
   28e58:	cmp	sl, r8
   28e5c:	bne	28eb0 <main@@Base+0x13168>
   28e60:	b	28e74 <main@@Base+0x1312c>
   28e64:	ldr	r4, [fp, #-40]	; 0xffffffd8
   28e68:	str	r4, [fp, #-44]	; 0xffffffd4
   28e6c:	cmp	sl, r8
   28e70:	bne	28eb0 <main@@Base+0x13168>
   28e74:	sub	r0, fp, #44	; 0x2c
   28e78:	ldr	r2, [sp, #24]
   28e7c:	mov	r1, sl
   28e80:	str	r0, [sp]
   28e84:	movw	r0, #53756	; 0xd1fc
   28e88:	movt	r0, #5
   28e8c:	add	r3, r0, #36	; 0x24
   28e90:	ldr	r0, [sp, #32]
   28e94:	bl	248a8 <main@@Base+0xeb60>
   28e98:	cmp	r0, sl
   28e9c:	mov	r8, r0
   28ea0:	ldrne	r0, [sp, #24]
   28ea4:	cmpne	r8, r0
   28ea8:	beq	29748 <main@@Base+0x13a00>
   28eac:	ldr	r4, [fp, #-44]	; 0xffffffd4
   28eb0:	ldr	r7, [sp, #32]
   28eb4:	cmp	r4, #0
   28eb8:	bne	28ec8 <main@@Base+0x13180>
   28ebc:	ldrb	r0, [r7, #8]
   28ec0:	tst	r0, #2
   28ec4:	beq	28eec <main@@Base+0x131a4>
   28ec8:	ldr	r0, [r7]
   28ecc:	mov	r1, #6
   28ed0:	mov	r2, #4
   28ed4:	mov	r3, #4
   28ed8:	bl	31040 <flatcc_builder_table_add@@Base>
   28edc:	cmp	r0, #0
   28ee0:	beq	29748 <main@@Base+0x13a00>
   28ee4:	ldr	r7, [sp, #32]
   28ee8:	str	r4, [r0]
   28eec:	ldr	r9, [sp, #24]
   28ef0:	sub	r0, r9, r8
   28ef4:	cmp	r0, #2
   28ef8:	bge	28fc4 <main@@Base+0x1327c>
   28efc:	b	28ff4 <main@@Base+0x132ac>
   28f00:	bne	28f10 <main@@Base+0x131c8>
   28f04:	ldrb	r0, [sl, #2]!
   28f08:	cmp	r0, #32
   28f0c:	bhi	28f20 <main@@Base+0x131d8>
   28f10:	ldr	r0, [sp, #32]
   28f14:	ldr	r2, [sp, #24]
   28f18:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   28f1c:	mov	sl, r0
   28f20:	ldr	r9, [sp, #24]
   28f24:	cmp	r7, sl
   28f28:	beq	28fa0 <main@@Base+0x13258>
   28f2c:	mov	r4, #0
   28f30:	cmp	sl, r9
   28f34:	str	r4, [fp, #-36]	; 0xffffffdc
   28f38:	str	r4, [fp, #-40]	; 0xffffffd8
   28f3c:	str	r4, [fp, #-44]	; 0xffffffd4
   28f40:	str	r4, [sp, #40]	; 0x28
   28f44:	beq	27bcc <main@@Base+0x11e84>
   28f48:	sub	r0, fp, #40	; 0x28
   28f4c:	ldr	r2, [sp, #24]
   28f50:	mov	r1, sl
   28f54:	add	r3, sp, #40	; 0x28
   28f58:	str	r0, [sp]
   28f5c:	ldr	r0, [sp, #32]
   28f60:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   28f64:	cmp	r0, sl
   28f68:	beq	27bdc <main@@Base+0x11e94>
   28f6c:	mov	r8, r0
   28f70:	ldr	r0, [sp, #40]	; 0x28
   28f74:	cmp	r0, #0
   28f78:	beq	27bec <main@@Base+0x11ea4>
   28f7c:	ldr	r0, [sp, #32]
   28f80:	ldr	r2, [sp, #24]
   28f84:	mov	r1, r8
   28f88:	mov	r3, #8
   28f8c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   28f90:	mov	r8, r0
   28f94:	cmp	sl, r8
   28f98:	bne	27c68 <main@@Base+0x11f20>
   28f9c:	b	27c2c <main@@Base+0x11ee4>
   28fa0:	ldr	r0, [sp, #32]
   28fa4:	mov	r1, r7
   28fa8:	mov	r7, r0
   28fac:	mov	r2, r9
   28fb0:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   28fb4:	mov	r8, r0
   28fb8:	sub	r0, r9, r8
   28fbc:	cmp	r0, #2
   28fc0:	blt	28ff4 <main@@Base+0x132ac>
   28fc4:	ldrb	r0, [r8]
   28fc8:	cmp	r0, #32
   28fcc:	bls	28fe0 <main@@Base+0x13298>
   28fd0:	mov	r2, r8
   28fd4:	cmp	r2, r9
   28fd8:	bne	29010 <main@@Base+0x132c8>
   28fdc:	b	29090 <main@@Base+0x13348>
   28fe0:	bne	28ff4 <main@@Base+0x132ac>
   28fe4:	mov	r2, r8
   28fe8:	ldrb	r0, [r2, #1]!
   28fec:	cmp	r0, #32
   28ff0:	bhi	29008 <main@@Base+0x132c0>
   28ff4:	mov	r0, r7
   28ff8:	mov	r1, r8
   28ffc:	mov	r2, r9
   29000:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   29004:	mov	r2, r0
   29008:	cmp	r2, r9
   2900c:	beq	29090 <main@@Base+0x13348>
   29010:	ldrb	r0, [r2]
   29014:	cmp	r0, #44	; 0x2c
   29018:	bne	290a8 <main@@Base+0x13360>
   2901c:	add	r1, r2, #1
   29020:	sub	r0, r9, r1
   29024:	cmp	r0, #2
   29028:	blt	29058 <main@@Base+0x13310>
   2902c:	ldrb	r0, [r1]
   29030:	cmp	r0, #32
   29034:	bls	29048 <main@@Base+0x13300>
   29038:	mov	r2, r1
   2903c:	cmp	r2, r9
   29040:	bne	29070 <main@@Base+0x13328>
   29044:	b	290e4 <main@@Base+0x1339c>
   29048:	bne	29058 <main@@Base+0x13310>
   2904c:	ldrb	r0, [r2, #2]!
   29050:	cmp	r0, #32
   29054:	bhi	29068 <main@@Base+0x13320>
   29058:	mov	r0, r7
   2905c:	mov	r2, r9
   29060:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   29064:	mov	r2, r0
   29068:	cmp	r2, r9
   2906c:	beq	290e4 <main@@Base+0x1339c>
   29070:	ldrb	r0, [r2]
   29074:	cmp	r0, #125	; 0x7d
   29078:	bne	27cbc <main@@Base+0x11f74>
   2907c:	add	r1, r2, #1
   29080:	sub	r0, r9, r1
   29084:	cmp	r0, #2
   29088:	blt	29118 <main@@Base+0x133d0>
   2908c:	b	290c0 <main@@Base+0x13378>
   29090:	mov	r8, r9
   29094:	ldr	r0, [sp, #20]
   29098:	ldr	r0, [r0]
   2909c:	cmp	r0, #0
   290a0:	beq	26710 <main@@Base+0x109c8>
   290a4:	b	29750 <main@@Base+0x13a08>
   290a8:	cmp	r0, #125	; 0x7d
   290ac:	bne	290f0 <main@@Base+0x133a8>
   290b0:	add	r1, r2, #1
   290b4:	sub	r0, r9, r1
   290b8:	cmp	r0, #2
   290bc:	blt	29118 <main@@Base+0x133d0>
   290c0:	ldrb	r0, [r1]
   290c4:	cmp	r0, #32
   290c8:	bls	29104 <main@@Base+0x133bc>
   290cc:	mov	r8, r1
   290d0:	ldr	r0, [sp, #20]
   290d4:	ldr	r0, [r0]
   290d8:	cmp	r0, #0
   290dc:	beq	26710 <main@@Base+0x109c8>
   290e0:	b	29750 <main@@Base+0x13a08>
   290e4:	mov	r0, r7
   290e8:	mov	r1, r9
   290ec:	b	290f8 <main@@Base+0x133b0>
   290f0:	mov	r0, r7
   290f4:	mov	r1, r2
   290f8:	mov	r2, r9
   290fc:	mov	r3, #10
   29100:	b	266f8 <main@@Base+0x109b0>
   29104:	bne	29118 <main@@Base+0x133d0>
   29108:	ldrb	r0, [r2, #2]!
   2910c:	cmp	r0, #32
   29110:	mov	r8, r2
   29114:	bhi	26700 <main@@Base+0x109b8>
   29118:	mov	r0, r7
   2911c:	mov	r2, r9
   29120:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   29124:	b	266fc <main@@Base+0x109b4>
   29128:	cmp	r2, r9
   2912c:	mov	sl, r9
   29130:	beq	29160 <main@@Base+0x13418>
   29134:	ldrb	r0, [r2]
   29138:	cmp	r0, #34	; 0x22
   2913c:	bne	29148 <main@@Base+0x13400>
   29140:	add	sl, r2, #1
   29144:	b	29160 <main@@Base+0x13418>
   29148:	mov	r1, r2
   2914c:	mov	r0, r7
   29150:	mov	r2, r9
   29154:	mov	r3, #5
   29158:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2915c:	mov	sl, r0
   29160:	sub	r0, r9, sl
   29164:	cmp	r0, #8
   29168:	movcs	r0, r8
   2916c:	and	r0, r0, #15
   29170:	sub	r3, r0, #1
   29174:	cmp	r3, #7
   29178:	bhi	29418 <main@@Base+0x136d0>
   2917c:	add	r5, pc, #32
   29180:	mov	r0, #0
   29184:	mov	ip, #0
   29188:	mov	lr, #0
   2918c:	mov	r7, #0
   29190:	mov	r2, #0
   29194:	mov	r6, #0
   29198:	mov	r4, #0
   2919c:	mov	r1, #0
   291a0:	ldr	pc, [r5, r3, lsl #2]
   291a4:	andeq	r9, r2, r8, lsl #4
   291a8:	andeq	r9, r2, r0, lsl #4
   291ac:	strdeq	r9, [r2], -r8
   291b0:	strdeq	r9, [r2], -r0
   291b4:	andeq	r9, r2, r4, ror #3
   291b8:	ldrdeq	r9, [r2], -r8
   291bc:	andeq	r9, r2, r8, asr #3
   291c0:	andeq	r9, r2, r4, asr #3
   291c4:	ldrb	ip, [sl, #7]
   291c8:	ldrb	r1, [sl, #6]
   291cc:	mov	lr, r0
   291d0:	orr	r1, ip, r1, lsl #8
   291d4:	mov	r0, r1
   291d8:	ldrb	r1, [sl, #5]
   291dc:	mov	r7, lr
   291e0:	orr	r0, r0, r1, lsl #16
   291e4:	ldrb	r1, [sl, #4]
   291e8:	mov	r2, r7
   291ec:	orr	r0, r0, r1, lsl #24
   291f0:	ldrb	r1, [sl, #3]
   291f4:	orr	r6, r1, r2
   291f8:	ldrb	r1, [sl, #2]
   291fc:	orr	r4, r6, r1, lsl #8
   29200:	ldrb	r1, [sl, #1]
   29204:	orr	r1, r4, r1, lsl #16
   29208:	movw	r2, #28526	; 0x6f6e
   2920c:	movt	r2, #27251	; 0x6a73
   29210:	eor	r0, r0, r2
   29214:	ldrb	r2, [sl]
   29218:	orr	r1, r1, r2, lsl #24
   2921c:	movw	r2, #29556	; 0x7374
   29220:	movt	r2, #29797	; 0x7465
   29224:	eor	r1, r1, r2
   29228:	orrs	r0, r0, r1
   2922c:	bne	29418 <main@@Base+0x136d0>
   29230:	add	r1, sl, #8
   29234:	sub	r0, r9, r1
   29238:	cmp	r0, #8
   2923c:	movcs	r0, r8
   29240:	and	r0, r0, #15
   29244:	sub	r7, r0, #1
   29248:	cmp	r7, #7
   2924c:	bhi	29424 <main@@Base+0x136dc>
   29250:	add	r0, pc, #32
   29254:	mov	r8, #0
   29258:	mov	ip, #0
   2925c:	mov	lr, #0
   29260:	mov	r6, #0
   29264:	mov	r3, #0
   29268:	mov	r5, #0
   2926c:	mov	r2, #0
   29270:	mov	r4, #0
   29274:	ldr	pc, [r0, r7, lsl #2]
   29278:	ldrdeq	r9, [r2], -ip
   2927c:	ldrdeq	r9, [r2], -r4
   29280:	andeq	r9, r2, ip, asr #5
   29284:	andeq	r9, r2, r4, asr #5
   29288:			; <UNDEFINED> instruction: 0x000292b8
   2928c:	andeq	r9, r2, ip, lsr #5
   29290:	muleq	r2, ip, r2
   29294:	muleq	r2, r8, r2
   29298:	ldrb	ip, [sl, #15]
   2929c:	ldrb	r0, [sl, #14]
   292a0:	mov	lr, r8
   292a4:	orr	r0, ip, r0, lsl #8
   292a8:	mov	r8, r0
   292ac:	ldrb	r0, [sl, #13]
   292b0:	mov	r6, lr
   292b4:	orr	r8, r8, r0, lsl #16
   292b8:	ldrb	r0, [sl, #12]
   292bc:	mov	r3, r6
   292c0:	orr	r8, r8, r0, lsl #24
   292c4:	ldrb	r0, [sl, #11]
   292c8:	orr	r5, r0, r3
   292cc:	ldrb	r0, [sl, #10]
   292d0:	orr	r2, r5, r0, lsl #8
   292d4:	ldrb	r0, [sl, #9]
   292d8:	orr	r4, r2, r0, lsl #16
   292dc:	ldrb	r2, [r1]
   292e0:	movw	r0, #28769	; 0x7061
   292e4:	movw	r3, #25958	; 0x6566
   292e8:	movt	r0, #27000	; 0x6978
   292ec:	movt	r3, #28786	; 0x7072
   292f0:	eor	r0, r8, r0
   292f4:	mov	r8, #8
   292f8:	orr	r2, r4, r2, lsl #24
   292fc:	eor	r2, r2, r3
   29300:	orrs	r0, r0, r2
   29304:	bne	29424 <main@@Base+0x136dc>
   29308:	add	ip, sl, #16
   2930c:	mov	r0, #8
   29310:	sub	r9, r9, ip
   29314:	cmp	r9, #8
   29318:	movcc	r0, r9
   2931c:	and	r0, r0, #15
   29320:	sub	r2, r0, #1
   29324:	cmp	r2, #7
   29328:	bhi	29568 <main@@Base+0x13820>
   2932c:	add	r7, pc, #24
   29330:	mov	r0, #0
   29334:	mov	r1, #0
   29338:	mov	r3, #0
   2933c:	mov	r6, #0
   29340:	mov	r4, #0
   29344:	mov	r5, #0
   29348:	ldr	pc, [r7, r2, lsl #2]
   2934c:	muleq	r2, ip, r3
   29350:	muleq	r2, r4, r3
   29354:	andeq	r9, r2, ip, lsl #7
   29358:	andeq	r9, r2, r4, lsl #7
   2935c:	andeq	r9, r2, r4, ror r3
   29360:	andeq	r9, r2, ip, ror #6
   29364:	andeq	r9, r2, ip, ror #6
   29368:	andeq	r9, r2, ip, ror #6
   2936c:	ldrb	r1, [sl, #21]
   29370:	lsl	r1, r1, #16
   29374:	ldrb	r2, [sl, #20]
   29378:	mov	r3, r0
   2937c:	orr	r1, r1, r2, lsl #24
   29380:	mov	r0, r1
   29384:	ldrb	r1, [sl, #19]
   29388:	orr	r6, r1, r3
   2938c:	ldrb	r1, [sl, #18]
   29390:	orr	r4, r6, r1, lsl #8
   29394:	ldrb	r1, [sl, #17]
   29398:	orr	r5, r4, r1, lsl #16
   2939c:	mov	r6, r0
   293a0:	movw	r1, #0
   293a4:	movw	r3, #26990	; 0x696e
   293a8:	bfc	r6, #0, #16
   293ac:	movt	r1, #26418	; 0x6732
   293b0:	movt	r3, #29299	; 0x7273
   293b4:	eor	r2, r6, r1
   293b8:	ldrb	r1, [ip]
   293bc:	orr	r1, r5, r1, lsl #24
   293c0:	eor	r5, r1, r3
   293c4:	orrs	r2, r2, r5
   293c8:	bne	2942c <main@@Base+0x136e4>
   293cc:	cmp	r9, #7
   293d0:	blt	29568 <main@@Base+0x13820>
   293d4:	ldrb	r0, [sl, #22]
   293d8:	cmp	r0, #34	; 0x22
   293dc:	bne	29568 <main@@Base+0x13820>
   293e0:	ldr	r4, [sp, #24]
   293e4:	ldr	r5, [sp, #32]
   293e8:	add	r1, sl, #23
   293ec:	sub	r0, r4, r1
   293f0:	cmp	r0, #2
   293f4:	blt	2950c <main@@Base+0x137c4>
   293f8:	ldrb	r0, [r1]
   293fc:	cmp	r0, #32
   29400:	bls	294fc <main@@Base+0x137b4>
   29404:	mov	sl, r1
   29408:	mov	r6, ip
   2940c:	cmp	sl, r4
   29410:	bne	29530 <main@@Base+0x137e8>
   29414:	b	26434 <main@@Base+0x106ec>
   29418:	ldr	r7, [sp, #32]
   2941c:	mov	r1, sl
   29420:	b	29574 <main@@Base+0x1382c>
   29424:	ldr	r7, [sp, #32]
   29428:	b	29574 <main@@Base+0x1382c>
   2942c:	cmp	r9, #6
   29430:	blt	29458 <main@@Base+0x13710>
   29434:	movw	r2, #26990	; 0x696e
   29438:	and	r0, r0, #-16777216	; 0xff000000
   2943c:	movt	r2, #29299	; 0x7273
   29440:	eor	r0, r0, #1728053248	; 0x67000000
   29444:	eor	r1, r1, r2
   29448:	orrs	r0, r0, r1
   2944c:	ldrbeq	r0, [sl, #21]
   29450:	cmpeq	r0, #34	; 0x22
   29454:	beq	294c0 <main@@Base+0x13778>
   29458:	movw	r0, #0
   2945c:	mov	r8, #8
   29460:	movt	r0, #26418	; 0x6732
   29464:	add	r0, r0, #65536	; 0x10000
   29468:	eor	r0, r6, r0
   2946c:	orrs	r0, r0, r5
   29470:	bne	29568 <main@@Base+0x13820>
   29474:	cmp	r9, #7
   29478:	ldr	r9, [sp, #24]
   2947c:	ldr	r7, [sp, #32]
   29480:	blt	26554 <main@@Base+0x1080c>
   29484:	ldrb	r0, [sl, #22]
   29488:	cmp	r0, #34	; 0x22
   2948c:	bne	26554 <main@@Base+0x1080c>
   29490:	add	r1, sl, #23
   29494:	sub	r0, r9, r1
   29498:	cmp	r0, #2
   2949c:	blt	264f8 <main@@Base+0x107b0>
   294a0:	ldrb	r0, [r1]
   294a4:	cmp	r0, #32
   294a8:	bls	264e8 <main@@Base+0x107a0>
   294ac:	mov	sl, r1
   294b0:	mov	r4, ip
   294b4:	cmp	sl, r9
   294b8:	bne	2651c <main@@Base+0x107d4>
   294bc:	b	26560 <main@@Base+0x10818>
   294c0:	ldr	r4, [sp, #24]
   294c4:	ldr	r2, [sp, #32]
   294c8:	add	r1, sl, #22
   294cc:	sub	r0, r4, r1
   294d0:	cmp	r0, #2
   294d4:	blt	26464 <main@@Base+0x1071c>
   294d8:	ldrb	r0, [r1]
   294dc:	cmp	r0, #32
   294e0:	bls	2644c <main@@Base+0x10704>
   294e4:	ldr	r4, [sp, #24]
   294e8:	mov	r8, r1
   294ec:	cmp	r8, r4
   294f0:	str	ip, [sp, #4]
   294f4:	bne	26490 <main@@Base+0x10748>
   294f8:	b	264d0 <main@@Base+0x10788>
   294fc:	bne	2950c <main@@Base+0x137c4>
   29500:	ldrb	r0, [sl, #24]!
   29504:	cmp	r0, #32
   29508:	bhi	29524 <main@@Base+0x137dc>
   2950c:	mov	r0, r5
   29510:	mov	r2, r4
   29514:	mov	r6, ip
   29518:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2951c:	mov	ip, r6
   29520:	mov	sl, r0
   29524:	mov	r6, ip
   29528:	cmp	sl, r4
   2952c:	beq	26434 <main@@Base+0x106ec>
   29530:	ldrb	r0, [sl]
   29534:	cmp	r0, #58	; 0x3a
   29538:	bne	26434 <main@@Base+0x106ec>
   2953c:	add	r1, sl, #1
   29540:	sub	r0, r4, r1
   29544:	cmp	r0, #2
   29548:	blt	26588 <main@@Base+0x10840>
   2954c:	ldrb	r0, [r1]
   29550:	cmp	r0, #32
   29554:	bls	26578 <main@@Base+0x10830>
   29558:	mov	sl, r1
   2955c:	mov	ip, r6
   29560:	cmp	r6, sl
   29564:	bne	265a4 <main@@Base+0x1085c>
   29568:	ldr	r7, [sp, #32]
   2956c:	ldr	r9, [sp, #24]
   29570:	mov	r1, ip
   29574:	mov	r0, r7
   29578:	mov	r2, r9
   2957c:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   29580:	mov	sl, r0
   29584:	sub	r0, r9, sl
   29588:	cmp	r0, #2
   2958c:	blt	29604 <main@@Base+0x138bc>
   29590:	ldrb	r0, [sl]
   29594:	cmp	r0, #32
   29598:	bls	295f0 <main@@Base+0x138a8>
   2959c:	mov	r2, sl
   295a0:	cmp	r2, r9
   295a4:	beq	29620 <main@@Base+0x138d8>
   295a8:	ldrb	r0, [r2]
   295ac:	ldr	r4, [sp, #28]
   295b0:	cmp	r0, #44	; 0x2c
   295b4:	bne	2963c <main@@Base+0x138f4>
   295b8:	add	r1, r2, #1
   295bc:	sub	r0, r9, r1
   295c0:	cmp	r0, #2
   295c4:	blt	26418 <main@@Base+0x106d0>
   295c8:	ldrb	r0, [r1]
   295cc:	cmp	r0, #32
   295d0:	bls	26408 <main@@Base+0x106c0>
   295d4:	mov	r2, r1
   295d8:	cmp	r2, r9
   295dc:	beq	29658 <main@@Base+0x13910>
   295e0:	ldrb	r0, [r2]
   295e4:	cmp	r0, #125	; 0x7d
   295e8:	bne	29128 <main@@Base+0x133e0>
   295ec:	b	29664 <main@@Base+0x1391c>
   295f0:	bne	29604 <main@@Base+0x138bc>
   295f4:	mov	r2, sl
   295f8:	ldrb	r0, [r2, #1]!
   295fc:	cmp	r0, #32
   29600:	bhi	29618 <main@@Base+0x138d0>
   29604:	mov	r0, r7
   29608:	mov	r1, sl
   2960c:	mov	r2, r9
   29610:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   29614:	mov	r2, r0
   29618:	cmp	r2, r9
   2961c:	bne	295a8 <main@@Base+0x13860>
   29620:	ldr	r4, [sp, #28]
   29624:	mov	r8, r9
   29628:	ldr	r0, [sp, #20]
   2962c:	ldr	r0, [r0]
   29630:	cmp	r0, #0
   29634:	bne	2977c <main@@Base+0x13a34>
   29638:	b	296e4 <main@@Base+0x1399c>
   2963c:	cmp	r0, #125	; 0x7d
   29640:	bne	296bc <main@@Base+0x13974>
   29644:	add	r8, r2, #1
   29648:	sub	r0, r9, r8
   2964c:	cmp	r0, #2
   29650:	blt	296a8 <main@@Base+0x13960>
   29654:	b	29674 <main@@Base+0x1392c>
   29658:	mov	r0, r7
   2965c:	mov	r1, r9
   29660:	b	296c4 <main@@Base+0x1397c>
   29664:	add	r8, r2, #1
   29668:	sub	r0, r9, r8
   2966c:	cmp	r0, #2
   29670:	blt	296a8 <main@@Base+0x13960>
   29674:	ldrb	r0, [r8]
   29678:	cmp	r0, #32
   2967c:	bhi	296d4 <main@@Base+0x1398c>
   29680:	bne	296a8 <main@@Base+0x13960>
   29684:	ldrb	r0, [r2, #2]!
   29688:	cmp	r0, #32
   2968c:	bls	296a8 <main@@Base+0x13960>
   29690:	mov	r8, r2
   29694:	ldr	r0, [sp, #20]
   29698:	ldr	r0, [r0]
   2969c:	cmp	r0, #0
   296a0:	bne	2977c <main@@Base+0x13a34>
   296a4:	b	296e4 <main@@Base+0x1399c>
   296a8:	mov	r0, r7
   296ac:	mov	r1, r8
   296b0:	mov	r2, r9
   296b4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   296b8:	b	296d0 <main@@Base+0x13988>
   296bc:	mov	r0, r7
   296c0:	mov	r1, r2
   296c4:	mov	r2, r9
   296c8:	mov	r3, #10
   296cc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   296d0:	mov	r8, r0
   296d4:	ldr	r0, [sp, #20]
   296d8:	ldr	r0, [r0]
   296dc:	cmp	r0, #0
   296e0:	bne	2977c <main@@Base+0x13a34>
   296e4:	ldr	r0, [r7]
   296e8:	bl	30680 <flatcc_builder_end_table@@Base>
   296ec:	cmp	r0, #0
   296f0:	str	r0, [r4]
   296f4:	beq	2977c <main@@Base+0x13a34>
   296f8:	mov	r0, r8
   296fc:	sub	sp, fp, #28
   29700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29704:	bne	29714 <main@@Base+0x139cc>
   29708:	ldrb	r0, [r8, #2]!
   2970c:	cmp	r0, #32
   29710:	bhi	26330 <main@@Base+0x105e8>
   29714:	mov	r0, r7
   29718:	mov	r2, r9
   2971c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   29720:	b	2632c <main@@Base+0x105e4>
   29724:	mov	r7, r1
   29728:	b	29764 <main@@Base+0x13a1c>
   2972c:	ldr	r7, [sp, #32]
   29730:	mov	r8, sl
   29734:	b	2977c <main@@Base+0x13a34>
   29738:	ldr	r9, [sp, #24]
   2973c:	b	29764 <main@@Base+0x13a1c>
   29740:	ldr	r9, [sp, #24]
   29744:	b	29750 <main@@Base+0x13a08>
   29748:	ldr	r9, [sp, #24]
   2974c:	ldr	r7, [sp, #32]
   29750:	mov	r0, r7
   29754:	mov	r1, r8
   29758:	b	2976c <main@@Base+0x13a24>
   2975c:	ldr	r9, [sp, #24]
   29760:	ldr	r7, [sp, #32]
   29764:	mov	r0, r7
   29768:	mov	r1, sl
   2976c:	mov	r2, r9
   29770:	mov	r3, #33	; 0x21
   29774:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   29778:	mov	r8, r0
   2977c:	mov	r0, r7
   29780:	mov	r1, r8
   29784:	mov	r2, r9
   29788:	mov	r3, #33	; 0x21
   2978c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   29790:	mov	r8, r0
   29794:	mov	r0, r8
   29798:	sub	sp, fp, #28
   2979c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   297a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   297a4:	add	fp, sp, #28
   297a8:	sub	sp, sp, #44	; 0x2c
   297ac:	mov	sl, r0
   297b0:	mov	r0, #0
   297b4:	mov	r7, r1
   297b8:	mov	r1, #10
   297bc:	mov	r9, r3
   297c0:	mov	r4, r2
   297c4:	str	r0, [r3]
   297c8:	ldr	r0, [sl]
   297cc:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   297d0:	cmp	r0, #0
   297d4:	beq	297fc <main@@Base+0x13ab4>
   297d8:	mov	r0, sl
   297dc:	mov	r1, r7
   297e0:	mov	r2, r4
   297e4:	mov	r3, #33	; 0x21
   297e8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   297ec:	mov	r7, r0
   297f0:	mov	r0, r7
   297f4:	sub	sp, fp, #28
   297f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   297fc:	sub	r0, fp, #32
   29800:	mov	r1, r7
   29804:	mov	r2, r4
   29808:	mov	r3, #5
   2980c:	str	r0, [sp]
   29810:	mov	r0, sl
   29814:	bl	37780 <flatcc_json_parser_prepare_unions@@Base>
   29818:	cmp	r0, r4
   2981c:	beq	297d8 <main@@Base+0x13a90>
   29820:	cmp	r7, r4
   29824:	beq	29864 <main@@Base+0x13b1c>
   29828:	ldrb	r0, [r7]
   2982c:	cmp	r0, #123	; 0x7b
   29830:	bne	29864 <main@@Base+0x13b1c>
   29834:	add	r1, r7, #1
   29838:	sub	r0, r4, r1
   2983c:	cmp	r0, #2
   29840:	blt	298c8 <main@@Base+0x13b80>
   29844:	ldrb	r0, [r1]
   29848:	cmp	r0, #32
   2984c:	bls	298b8 <main@@Base+0x13b70>
   29850:	mov	r7, r1
   29854:	cmp	r7, r4
   29858:	mov	r3, r4
   2985c:	bne	298e4 <main@@Base+0x13b9c>
   29860:	b	29924 <main@@Base+0x13bdc>
   29864:	mov	r0, sl
   29868:	mov	r1, r7
   2986c:	mov	r2, r4
   29870:	mov	r3, #21
   29874:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   29878:	mov	r7, r0
   2987c:	ldr	r0, [sl, #20]
   29880:	cmp	r0, #0
   29884:	bne	297d8 <main@@Base+0x13a90>
   29888:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2988c:	mov	r0, sl
   29890:	mov	r1, r7
   29894:	mov	r2, r4
   29898:	bl	37810 <flatcc_json_parser_finalize_unions@@Base>
   2989c:	mov	r7, r0
   298a0:	ldr	r0, [sl]
   298a4:	bl	30680 <flatcc_builder_end_table@@Base>
   298a8:	cmp	r0, #0
   298ac:	str	r0, [r9]
   298b0:	bne	297f0 <main@@Base+0x13aa8>
   298b4:	b	297d8 <main@@Base+0x13a90>
   298b8:	bne	298c8 <main@@Base+0x13b80>
   298bc:	ldrb	r0, [r7, #2]!
   298c0:	cmp	r0, #32
   298c4:	bhi	298d8 <main@@Base+0x13b90>
   298c8:	mov	r0, sl
   298cc:	mov	r2, r4
   298d0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   298d4:	mov	r7, r0
   298d8:	cmp	r7, r4
   298dc:	mov	r3, r4
   298e0:	beq	29924 <main@@Base+0x13bdc>
   298e4:	ldrb	r0, [r7]
   298e8:	cmp	r0, #125	; 0x7d
   298ec:	bne	29920 <main@@Base+0x13bd8>
   298f0:	add	r1, r7, #1
   298f4:	sub	r0, r4, r1
   298f8:	cmp	r0, #2
   298fc:	blt	2ac90 <main@@Base+0x14f48>
   29900:	ldrb	r0, [r1]
   29904:	cmp	r0, #32
   29908:	bhi	2ac48 <main@@Base+0x14f00>
   2990c:	bne	2ac90 <main@@Base+0x14f48>
   29910:	ldrb	r0, [r7, #2]!
   29914:	cmp	r0, #32
   29918:	bhi	2987c <main@@Base+0x13b34>
   2991c:	b	2ac90 <main@@Base+0x14f48>
   29920:	mov	r3, r7
   29924:	movw	r0, #24436	; 0x5f74
   29928:	movw	r1, #53988	; 0xd2e4
   2992c:	str	r9, [sp, #32]
   29930:	str	r4, [sp, #36]	; 0x24
   29934:	movt	r0, #29299	; 0x7273
   29938:	movt	r1, #5
   2993c:	add	r0, r0, #65536	; 0x10000
   29940:	add	r1, r1, #32
   29944:	add	r0, r0, #16777216	; 0x1000000
   29948:	str	r1, [sp, #20]
   2994c:	str	r0, [sp, #24]
   29950:	b	2a5cc <main@@Base+0x14884>
   29954:	bne	29964 <main@@Base+0x13c1c>
   29958:	ldrb	r0, [r3, #2]!
   2995c:	cmp	r0, #32
   29960:	bhi	29974 <main@@Base+0x13c2c>
   29964:	mov	r0, sl
   29968:	mov	r2, r4
   2996c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   29970:	mov	r3, r0
   29974:	cmp	r3, r4
   29978:	bne	2abe4 <main@@Base+0x14e9c>
   2997c:	b	2ac5c <main@@Base+0x14f14>
   29980:	add	r6, r5, #8
   29984:	mov	r1, #8
   29988:	ldr	r9, [sp, #32]
   2998c:	sub	r0, r4, r6
   29990:	cmp	r0, #8
   29994:	movcc	r1, r0
   29998:	and	r2, r1, #15
   2999c:	sub	r1, r2, #2
   299a0:	cmp	r1, #7
   299a4:	bcs	29c98 <main@@Base+0x13f50>
   299a8:	ldrb	r1, [r5, #9]
   299ac:	lsl	r2, r1, #16
   299b0:	mov	r1, #0
   299b4:	ldrb	r3, [r6]
   299b8:	orr	r2, r2, r3, lsl #24
   299bc:	movw	r3, #0
   299c0:	movt	r3, #28773	; 0x7065
   299c4:	eor	r2, r2, r3
   299c8:	orrs	r1, r1, r2
   299cc:	bne	2a514 <main@@Base+0x147cc>
   299d0:	cmp	r0, #3
   299d4:	blt	2a514 <main@@Base+0x147cc>
   299d8:	ldrb	r0, [r5, #10]
   299dc:	cmp	r0, #34	; 0x22
   299e0:	bne	2a514 <main@@Base+0x147cc>
   299e4:	add	r1, r5, #11
   299e8:	sub	r0, r4, r1
   299ec:	cmp	r0, #2
   299f0:	blt	29e24 <main@@Base+0x140dc>
   299f4:	ldrb	r0, [r1]
   299f8:	cmp	r0, #32
   299fc:	bls	29e14 <main@@Base+0x140cc>
   29a00:	mov	r5, r1
   29a04:	cmp	r5, r4
   29a08:	bne	29e3c <main@@Base+0x140f4>
   29a0c:	b	29e74 <main@@Base+0x1412c>
   29a10:	and	r0, r1, #-16777216	; 0xff000000
   29a14:	eor	r0, r0, #1862270976	; 0x6f000000
   29a18:	orrs	r0, r0, r3
   29a1c:	bne	2a354 <main@@Base+0x1460c>
   29a20:	cmp	ip, #6
   29a24:	mov	r1, r5
   29a28:	blt	2a090 <main@@Base+0x14348>
   29a2c:	ldrb	r0, [r5, #5]
   29a30:	mov	r1, r5
   29a34:	cmp	r0, #34	; 0x22
   29a38:	bne	2a090 <main@@Base+0x14348>
   29a3c:	add	r2, r5, #6
   29a40:	sub	r0, r4, r2
   29a44:	cmp	r0, #2
   29a48:	blt	29d34 <main@@Base+0x13fec>
   29a4c:	ldrb	r0, [r2]
   29a50:	cmp	r0, #32
   29a54:	bls	29d20 <main@@Base+0x13fd8>
   29a58:	mov	r1, r2
   29a5c:	cmp	r1, r4
   29a60:	bne	29d50 <main@@Base+0x14008>
   29a64:	b	29d88 <main@@Base+0x14040>
   29a68:	add	r6, r5, #8
   29a6c:	mov	r1, #8
   29a70:	ldr	r9, [sp, #32]
   29a74:	sub	lr, r4, r6
   29a78:	cmp	lr, #8
   29a7c:	movcc	r1, lr
   29a80:	and	r1, r1, #15
   29a84:	sub	r3, r1, #1
   29a88:	cmp	r3, #7
   29a8c:	bhi	2a514 <main@@Base+0x147cc>
   29a90:	str	r6, [sp, #28]
   29a94:	add	r6, pc, #24
   29a98:	mov	ip, #0
   29a9c:	mov	r8, #0
   29aa0:	mov	r1, #0
   29aa4:	mov	r7, #0
   29aa8:	mov	r0, #0
   29aac:	mov	r2, #0
   29ab0:	ldr	pc, [r6, r3, lsl #2]
   29ab4:	andeq	r9, r2, r4, lsl #22
   29ab8:	strdeq	r9, [r2], -ip
   29abc:	strdeq	r9, [r2], -r4
   29ac0:	andeq	r9, r2, ip, ror #21
   29ac4:	ldrdeq	r9, [r2], -ip
   29ac8:	ldrdeq	r9, [r2], -r4
   29acc:	ldrdeq	r9, [r2], -r4
   29ad0:	ldrdeq	r9, [r2], -r4
   29ad4:	ldrb	r1, [r5, #13]
   29ad8:	lsl	r8, r1, #16
   29adc:	ldrb	r1, [r5, #12]
   29ae0:	orr	r2, r8, r1, lsl #24
   29ae4:	mov	r1, ip
   29ae8:	mov	ip, r2
   29aec:	ldrb	r2, [r5, #11]
   29af0:	orr	r7, r2, r1
   29af4:	ldrb	r1, [r5, #10]
   29af8:	orr	r0, r7, r1, lsl #8
   29afc:	ldrb	r1, [r5, #9]
   29b00:	orr	r2, r0, r1, lsl #16
   29b04:	ldr	r6, [sp, #28]
   29b08:	movw	r0, #27487	; 0x6b5f
   29b0c:	lsr	r3, ip, #16
   29b10:	ldrb	r1, [r6]
   29b14:	orr	r1, r2, r1, lsl #24
   29b18:	eor	r2, r0, r1, lsr #16
   29b1c:	movw	r0, #28773	; 0x7065
   29b20:	orr	r3, r3, r1, lsl #16
   29b24:	movt	r0, #29817	; 0x7479
   29b28:	eor	r3, r3, r0
   29b2c:	orrs	r2, r3, r2
   29b30:	bne	29cac <main@@Base+0x13f64>
   29b34:	cmp	lr, #7
   29b38:	blt	2a514 <main@@Base+0x147cc>
   29b3c:	ldrb	r0, [r5, #14]
   29b40:	cmp	r0, #34	; 0x22
   29b44:	bne	2a514 <main@@Base+0x147cc>
   29b48:	add	r1, r5, #15
   29b4c:	sub	r0, r4, r1
   29b50:	cmp	r0, #2
   29b54:	blt	29f14 <main@@Base+0x141cc>
   29b58:	ldrb	r0, [r1]
   29b5c:	cmp	r0, #32
   29b60:	bls	29f04 <main@@Base+0x141bc>
   29b64:	mov	r5, r1
   29b68:	cmp	r5, r4
   29b6c:	bne	29f2c <main@@Base+0x141e4>
   29b70:	b	29f64 <main@@Base+0x1421c>
   29b74:	ldr	r4, [sp, #36]	; 0x24
   29b78:	movw	r0, #0
   29b7c:	bfc	r1, #0, #16
   29b80:	movt	r0, #29556	; 0x7374
   29b84:	teq	r1, r0
   29b88:	bne	2a3b8 <main@@Base+0x14670>
   29b8c:	cmp	ip, #3
   29b90:	blt	2a3b8 <main@@Base+0x14670>
   29b94:	ldrb	r0, [r7, #10]
   29b98:	mov	r2, r7
   29b9c:	cmp	r0, #34	; 0x22
   29ba0:	bne	2a3b8 <main@@Base+0x14670>
   29ba4:	add	r1, r2, #11
   29ba8:	sub	r0, r4, r1
   29bac:	cmp	r0, #2
   29bb0:	blt	29f8c <main@@Base+0x14244>
   29bb4:	ldrb	r0, [r1]
   29bb8:	cmp	r0, #32
   29bbc:	bls	29f7c <main@@Base+0x14234>
   29bc0:	mov	r2, r1
   29bc4:	cmp	r2, r4
   29bc8:	bne	29fa4 <main@@Base+0x1425c>
   29bcc:	b	29fdc <main@@Base+0x14294>
   29bd0:	ldr	r4, [sp, #36]	; 0x24
   29bd4:	movw	r1, #0
   29bd8:	bfc	r0, #0, #16
   29bdc:	movt	r1, #29299	; 0x7273
   29be0:	teq	r0, r1
   29be4:	bne	2a4c4 <main@@Base+0x1477c>
   29be8:	cmp	ip, #3
   29bec:	blt	2a4c4 <main@@Base+0x1477c>
   29bf0:	ldrb	r0, [r3, #10]
   29bf4:	cmp	r0, #34	; 0x22
   29bf8:	bne	2a4c4 <main@@Base+0x1477c>
   29bfc:	add	r1, r3, #11
   29c00:	sub	r0, r4, r1
   29c04:	cmp	r0, #2
   29c08:	blt	2a004 <main@@Base+0x142bc>
   29c0c:	ldrb	r0, [r1]
   29c10:	cmp	r0, #32
   29c14:	bls	29ff4 <main@@Base+0x142ac>
   29c18:	mov	r3, r1
   29c1c:	cmp	r3, r4
   29c20:	bne	2a01c <main@@Base+0x142d4>
   29c24:	b	2a054 <main@@Base+0x1430c>
   29c28:	movw	r2, #29281	; 0x7261
   29c2c:	lsr	r1, r1, #16
   29c30:	ldr	r4, [sp, #36]	; 0x24
   29c34:	mov	sl, r9
   29c38:	eor	r2, r2, r0, lsr #16
   29c3c:	orr	r0, r1, r0, lsl #16
   29c40:	movw	r1, #25970	; 0x6572
   29c44:	movt	r1, #25460	; 0x6374
   29c48:	eor	r0, r0, r1
   29c4c:	orrs	r0, r0, r2
   29c50:	bne	29cf8 <main@@Base+0x13fb0>
   29c54:	ldr	r9, [sp, #32]
   29c58:	cmp	lr, #7
   29c5c:	blt	2a4c4 <main@@Base+0x1477c>
   29c60:	ldrb	r0, [r5, #14]
   29c64:	cmp	r0, #34	; 0x22
   29c68:	bne	2a4c4 <main@@Base+0x1477c>
   29c6c:	add	r1, r5, #15
   29c70:	sub	r0, r4, r1
   29c74:	cmp	r0, #2
   29c78:	blt	2a194 <main@@Base+0x1444c>
   29c7c:	ldrb	r0, [r1]
   29c80:	cmp	r0, #32
   29c84:	bls	2a184 <main@@Base+0x1443c>
   29c88:	mov	r5, r1
   29c8c:	cmp	r5, r4
   29c90:	bne	2a1ac <main@@Base+0x14464>
   29c94:	b	2a1e4 <main@@Base+0x1449c>
   29c98:	cmp	r2, #1
   29c9c:	mov	r1, #0
   29ca0:	mov	r2, #0
   29ca4:	beq	299b4 <main@@Base+0x13c6c>
   29ca8:	b	2a514 <main@@Base+0x147cc>
   29cac:	and	r1, r1, #-16777216	; 0xff000000
   29cb0:	teq	r1, #1795162112	; 0x6b000000
   29cb4:	bne	2a514 <main@@Base+0x147cc>
   29cb8:	cmp	lr, #2
   29cbc:	blt	2a514 <main@@Base+0x147cc>
   29cc0:	ldrb	r0, [r5, #9]
   29cc4:	cmp	r0, #34	; 0x22
   29cc8:	bne	2a514 <main@@Base+0x147cc>
   29ccc:	add	r1, r5, #10
   29cd0:	sub	r0, r4, r1
   29cd4:	cmp	r0, #2
   29cd8:	blt	2a20c <main@@Base+0x144c4>
   29cdc:	ldrb	r0, [r1]
   29ce0:	cmp	r0, #32
   29ce4:	bls	2a1fc <main@@Base+0x144b4>
   29ce8:	mov	r5, r1
   29cec:	cmp	r5, r4
   29cf0:	bne	2a224 <main@@Base+0x144dc>
   29cf4:	b	2a25c <main@@Base+0x14514>
   29cf8:	mov	r0, sl
   29cfc:	mov	r1, r7
   29d00:	b	2ab7c <main@@Base+0x14e34>
   29d04:	ldr	r9, [sp, #32]
   29d08:	mov	r1, #0
   29d0c:	cmp	r2, #1
   29d10:	beq	2ab18 <main@@Base+0x14dd0>
   29d14:	cmp	r2, #2
   29d18:	beq	2ab10 <main@@Base+0x14dc8>
   29d1c:	b	2a354 <main@@Base+0x1460c>
   29d20:	bne	29d34 <main@@Base+0x13fec>
   29d24:	mov	r1, r5
   29d28:	ldrb	r0, [r1, #7]!
   29d2c:	cmp	r0, #32
   29d30:	bhi	29d48 <main@@Base+0x14000>
   29d34:	mov	r1, r2
   29d38:	mov	r0, sl
   29d3c:	mov	r2, r4
   29d40:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   29d44:	mov	r1, r0
   29d48:	cmp	r1, r4
   29d4c:	beq	29d88 <main@@Base+0x14040>
   29d50:	ldrb	r0, [r1]
   29d54:	cmp	r0, #58	; 0x3a
   29d58:	bne	29d88 <main@@Base+0x14040>
   29d5c:	add	r2, r1, #1
   29d60:	sub	r0, r4, r2
   29d64:	cmp	r0, #2
   29d68:	blt	2a07c <main@@Base+0x14334>
   29d6c:	ldrb	r0, [r2]
   29d70:	cmp	r0, #32
   29d74:	bls	2a06c <main@@Base+0x14324>
   29d78:	mov	r1, r2
   29d7c:	cmp	r5, r1
   29d80:	bne	2a098 <main@@Base+0x14350>
   29d84:	b	2a354 <main@@Base+0x1460c>
   29d88:	mov	r0, sl
   29d8c:	mov	r2, r4
   29d90:	mov	r3, #4
   29d94:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   29d98:	b	2a08c <main@@Base+0x14344>
   29d9c:	bne	29dac <main@@Base+0x14064>
   29da0:	ldrb	r0, [r3, #17]!
   29da4:	cmp	r0, #32
   29da8:	bhi	29dbc <main@@Base+0x14074>
   29dac:	mov	r0, sl
   29db0:	mov	r2, r4
   29db4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   29db8:	mov	r3, r0
   29dbc:	cmp	r3, r4
   29dc0:	beq	29dfc <main@@Base+0x140b4>
   29dc4:	ldrb	r0, [r3]
   29dc8:	cmp	r0, #58	; 0x3a
   29dcc:	bne	29dfc <main@@Base+0x140b4>
   29dd0:	add	r1, r3, #1
   29dd4:	sub	r0, r4, r1
   29dd8:	cmp	r0, #2
   29ddc:	blt	2a0e8 <main@@Base+0x143a0>
   29de0:	ldrb	r0, [r1]
   29de4:	cmp	r0, #32
   29de8:	bls	2a0d8 <main@@Base+0x14390>
   29dec:	mov	r3, r1
   29df0:	cmp	r8, r3
   29df4:	bne	2a100 <main@@Base+0x143b8>
   29df8:	b	2a3b8 <main@@Base+0x14670>
   29dfc:	mov	r1, r3
   29e00:	mov	r0, sl
   29e04:	mov	r2, r4
   29e08:	mov	r3, #4
   29e0c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   29e10:	b	2a0f4 <main@@Base+0x143ac>
   29e14:	bne	29e24 <main@@Base+0x140dc>
   29e18:	ldrb	r0, [r5, #12]!
   29e1c:	cmp	r0, #32
   29e20:	bhi	29e34 <main@@Base+0x140ec>
   29e24:	mov	r0, sl
   29e28:	mov	r2, r4
   29e2c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   29e30:	mov	r5, r0
   29e34:	cmp	r5, r4
   29e38:	beq	29e74 <main@@Base+0x1412c>
   29e3c:	ldrb	r0, [r5]
   29e40:	cmp	r0, #58	; 0x3a
   29e44:	bne	29e74 <main@@Base+0x1412c>
   29e48:	add	r1, r5, #1
   29e4c:	sub	r0, r4, r1
   29e50:	cmp	r0, #2
   29e54:	blt	2a140 <main@@Base+0x143f8>
   29e58:	ldrb	r0, [r1]
   29e5c:	cmp	r0, #32
   29e60:	bls	2a130 <main@@Base+0x143e8>
   29e64:	mov	r5, r1
   29e68:	cmp	r6, r5
   29e6c:	bne	2a158 <main@@Base+0x14410>
   29e70:	b	2a514 <main@@Base+0x147cc>
   29e74:	mov	r0, sl
   29e78:	mov	r1, r5
   29e7c:	mov	r2, r4
   29e80:	mov	r3, #4
   29e84:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   29e88:	b	2a14c <main@@Base+0x14404>
   29e8c:	bne	29e9c <main@@Base+0x14154>
   29e90:	ldrb	r0, [r3, #17]!
   29e94:	cmp	r0, #32
   29e98:	bhi	29eac <main@@Base+0x14164>
   29e9c:	mov	r0, sl
   29ea0:	mov	r2, r4
   29ea4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   29ea8:	mov	r3, r0
   29eac:	cmp	r3, r4
   29eb0:	beq	29eec <main@@Base+0x141a4>
   29eb4:	ldrb	r0, [r3]
   29eb8:	cmp	r0, #58	; 0x3a
   29ebc:	bne	29eec <main@@Base+0x141a4>
   29ec0:	add	r1, r3, #1
   29ec4:	sub	r0, r4, r1
   29ec8:	cmp	r0, #2
   29ecc:	blt	2a284 <main@@Base+0x1453c>
   29ed0:	ldrb	r0, [r1]
   29ed4:	cmp	r0, #32
   29ed8:	bls	2a274 <main@@Base+0x1452c>
   29edc:	mov	r3, r1
   29ee0:	cmp	r7, r3
   29ee4:	bne	2a29c <main@@Base+0x14554>
   29ee8:	b	2a4c4 <main@@Base+0x1477c>
   29eec:	mov	r1, r3
   29ef0:	mov	r0, sl
   29ef4:	mov	r2, r4
   29ef8:	mov	r3, #4
   29efc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   29f00:	b	2a290 <main@@Base+0x14548>
   29f04:	bne	29f14 <main@@Base+0x141cc>
   29f08:	ldrb	r0, [r5, #16]!
   29f0c:	cmp	r0, #32
   29f10:	bhi	29f24 <main@@Base+0x141dc>
   29f14:	mov	r0, sl
   29f18:	mov	r2, r4
   29f1c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   29f20:	mov	r5, r0
   29f24:	cmp	r5, r4
   29f28:	beq	29f64 <main@@Base+0x1421c>
   29f2c:	ldrb	r0, [r5]
   29f30:	cmp	r0, #58	; 0x3a
   29f34:	bne	29f64 <main@@Base+0x1421c>
   29f38:	add	r1, r5, #1
   29f3c:	sub	r0, r4, r1
   29f40:	cmp	r0, #2
   29f44:	blt	2a3d4 <main@@Base+0x1468c>
   29f48:	ldrb	r0, [r1]
   29f4c:	cmp	r0, #32
   29f50:	bls	2a3c4 <main@@Base+0x1467c>
   29f54:	mov	r5, r1
   29f58:	cmp	r6, r5
   29f5c:	bne	2a3ec <main@@Base+0x146a4>
   29f60:	b	2a514 <main@@Base+0x147cc>
   29f64:	mov	r0, sl
   29f68:	mov	r1, r5
   29f6c:	mov	r2, r4
   29f70:	mov	r3, #4
   29f74:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   29f78:	b	2a3e0 <main@@Base+0x14698>
   29f7c:	bne	29f8c <main@@Base+0x14244>
   29f80:	ldrb	r0, [r2, #12]!
   29f84:	cmp	r0, #32
   29f88:	bhi	29f9c <main@@Base+0x14254>
   29f8c:	mov	r0, sl
   29f90:	mov	r2, r4
   29f94:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   29f98:	mov	r2, r0
   29f9c:	cmp	r2, r4
   29fa0:	beq	29fdc <main@@Base+0x14294>
   29fa4:	ldrb	r0, [r2]
   29fa8:	cmp	r0, #58	; 0x3a
   29fac:	bne	29fdc <main@@Base+0x14294>
   29fb0:	add	r1, r2, #1
   29fb4:	sub	r0, r4, r1
   29fb8:	cmp	r0, #2
   29fbc:	blt	2a388 <main@@Base+0x14640>
   29fc0:	ldrb	r0, [r1]
   29fc4:	cmp	r0, #32
   29fc8:	bls	2a378 <main@@Base+0x14630>
   29fcc:	mov	r2, r1
   29fd0:	cmp	r8, r2
   29fd4:	bne	2a3a0 <main@@Base+0x14658>
   29fd8:	b	2a3b8 <main@@Base+0x14670>
   29fdc:	mov	r1, r2
   29fe0:	mov	r0, sl
   29fe4:	mov	r2, r4
   29fe8:	mov	r3, #4
   29fec:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   29ff0:	b	2a394 <main@@Base+0x1464c>
   29ff4:	bne	2a004 <main@@Base+0x142bc>
   29ff8:	ldrb	r0, [r3, #12]!
   29ffc:	cmp	r0, #32
   2a000:	bhi	2a014 <main@@Base+0x142cc>
   2a004:	mov	r0, sl
   2a008:	mov	r2, r4
   2a00c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a010:	mov	r3, r0
   2a014:	cmp	r3, r4
   2a018:	beq	2a054 <main@@Base+0x1430c>
   2a01c:	ldrb	r0, [r3]
   2a020:	cmp	r0, #58	; 0x3a
   2a024:	bne	2a054 <main@@Base+0x1430c>
   2a028:	add	r1, r3, #1
   2a02c:	sub	r0, r4, r1
   2a030:	cmp	r0, #2
   2a034:	blt	2a42c <main@@Base+0x146e4>
   2a038:	ldrb	r0, [r1]
   2a03c:	cmp	r0, #32
   2a040:	bls	2a41c <main@@Base+0x146d4>
   2a044:	mov	r3, r1
   2a048:	cmp	r7, r3
   2a04c:	bne	2a444 <main@@Base+0x146fc>
   2a050:	b	2a4c4 <main@@Base+0x1477c>
   2a054:	mov	r1, r3
   2a058:	mov	r0, sl
   2a05c:	mov	r2, r4
   2a060:	mov	r3, #4
   2a064:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2a068:	b	2a438 <main@@Base+0x146f0>
   2a06c:	bne	2a07c <main@@Base+0x14334>
   2a070:	ldrb	r0, [r1, #2]!
   2a074:	cmp	r0, #32
   2a078:	bhi	2a090 <main@@Base+0x14348>
   2a07c:	mov	r1, r2
   2a080:	mov	r0, sl
   2a084:	mov	r2, r4
   2a088:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a08c:	mov	r1, r0
   2a090:	cmp	r5, r1
   2a094:	beq	2a354 <main@@Base+0x1460c>
   2a098:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a09c:	mov	r2, #7
   2a0a0:	mov	r3, #3
   2a0a4:	str	r2, [sp]
   2a0a8:	mov	r2, r4
   2a0ac:	str	r0, [sp, #4]
   2a0b0:	movw	r0, #44524	; 0xadec
   2a0b4:	movt	r0, #2
   2a0b8:	str	r0, [sp, #8]
   2a0bc:	mov	r0, sl
   2a0c0:	bl	37884 <flatcc_json_parser_union@@Base>
   2a0c4:	mov	r2, r0
   2a0c8:	sub	r0, r4, r2
   2a0cc:	cmp	r0, #2
   2a0d0:	bge	2ab98 <main@@Base+0x14e50>
   2a0d4:	b	2a534 <main@@Base+0x147ec>
   2a0d8:	bne	2a0e8 <main@@Base+0x143a0>
   2a0dc:	ldrb	r0, [r3, #2]!
   2a0e0:	cmp	r0, #32
   2a0e4:	bhi	2a0f8 <main@@Base+0x143b0>
   2a0e8:	mov	r0, sl
   2a0ec:	mov	r2, r4
   2a0f0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a0f4:	mov	r3, r0
   2a0f8:	cmp	r8, r3
   2a0fc:	beq	2a3b8 <main@@Base+0x14670>
   2a100:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a104:	movw	r1, #53988	; 0xd2e4
   2a108:	mov	r2, #3
   2a10c:	movt	r1, #5
   2a110:	str	r2, [sp]
   2a114:	mov	r2, r4
   2a118:	add	r1, r1, #16
   2a11c:	stmib	sp, {r0, r1}
   2a120:	movw	r0, #44524	; 0xadec
   2a124:	mov	r1, r3
   2a128:	mov	r3, #1
   2a12c:	b	2a5a8 <main@@Base+0x14860>
   2a130:	bne	2a140 <main@@Base+0x143f8>
   2a134:	ldrb	r0, [r5, #2]!
   2a138:	cmp	r0, #32
   2a13c:	bhi	2a150 <main@@Base+0x14408>
   2a140:	mov	r0, sl
   2a144:	mov	r2, r4
   2a148:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a14c:	mov	r5, r0
   2a150:	cmp	r6, r5
   2a154:	beq	2a514 <main@@Base+0x147cc>
   2a158:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a15c:	mov	r1, #7
   2a160:	mov	r2, r4
   2a164:	mov	r3, #3
   2a168:	str	r1, [sp]
   2a16c:	mov	r1, r5
   2a170:	str	r0, [sp, #4]
   2a174:	ldr	r0, [sp, #20]
   2a178:	str	r0, [sp, #8]
   2a17c:	movw	r0, #44524	; 0xadec
   2a180:	b	2a5a8 <main@@Base+0x14860>
   2a184:	bne	2a194 <main@@Base+0x1444c>
   2a188:	ldrb	r0, [r5, #16]!
   2a18c:	cmp	r0, #32
   2a190:	bhi	2a1a4 <main@@Base+0x1445c>
   2a194:	mov	r0, sl
   2a198:	mov	r2, r4
   2a19c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a1a0:	mov	r5, r0
   2a1a4:	cmp	r5, r4
   2a1a8:	beq	2a1e4 <main@@Base+0x1449c>
   2a1ac:	ldrb	r0, [r5]
   2a1b0:	cmp	r0, #58	; 0x3a
   2a1b4:	bne	2a1e4 <main@@Base+0x1449c>
   2a1b8:	add	r1, r5, #1
   2a1bc:	sub	r0, r4, r1
   2a1c0:	cmp	r0, #2
   2a1c4:	blt	2a498 <main@@Base+0x14750>
   2a1c8:	ldrb	r0, [r1]
   2a1cc:	cmp	r0, #32
   2a1d0:	bls	2a488 <main@@Base+0x14740>
   2a1d4:	mov	r5, r1
   2a1d8:	cmp	r7, r5
   2a1dc:	bne	2a4b0 <main@@Base+0x14768>
   2a1e0:	b	2a4c4 <main@@Base+0x1477c>
   2a1e4:	mov	r0, sl
   2a1e8:	mov	r1, r5
   2a1ec:	mov	r2, r4
   2a1f0:	mov	r3, #4
   2a1f4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2a1f8:	b	2a4a4 <main@@Base+0x1475c>
   2a1fc:	bne	2a20c <main@@Base+0x144c4>
   2a200:	ldrb	r0, [r5, #11]!
   2a204:	cmp	r0, #32
   2a208:	bhi	2a21c <main@@Base+0x144d4>
   2a20c:	mov	r0, sl
   2a210:	mov	r2, r4
   2a214:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a218:	mov	r5, r0
   2a21c:	cmp	r5, r4
   2a220:	beq	2a25c <main@@Base+0x14514>
   2a224:	ldrb	r0, [r5]
   2a228:	cmp	r0, #58	; 0x3a
   2a22c:	bne	2a25c <main@@Base+0x14514>
   2a230:	add	r1, r5, #1
   2a234:	sub	r0, r4, r1
   2a238:	cmp	r0, #2
   2a23c:	blt	2a4e0 <main@@Base+0x14798>
   2a240:	ldrb	r0, [r1]
   2a244:	cmp	r0, #32
   2a248:	bls	2a4d0 <main@@Base+0x14788>
   2a24c:	mov	r5, r1
   2a250:	cmp	r6, r5
   2a254:	bne	2a4f8 <main@@Base+0x147b0>
   2a258:	b	2a514 <main@@Base+0x147cc>
   2a25c:	mov	r0, sl
   2a260:	mov	r1, r5
   2a264:	mov	r2, r4
   2a268:	mov	r3, #4
   2a26c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2a270:	b	2a4ec <main@@Base+0x147a4>
   2a274:	bne	2a284 <main@@Base+0x1453c>
   2a278:	ldrb	r0, [r3, #2]!
   2a27c:	cmp	r0, #32
   2a280:	bhi	2a294 <main@@Base+0x1454c>
   2a284:	mov	r0, sl
   2a288:	mov	r2, r4
   2a28c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a290:	mov	r3, r0
   2a294:	cmp	r7, r3
   2a298:	beq	2a4c4 <main@@Base+0x1477c>
   2a29c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a2a0:	movw	r1, #53988	; 0xd2e4
   2a2a4:	mov	r2, #9
   2a2a8:	movt	r1, #5
   2a2ac:	str	r2, [sp]
   2a2b0:	mov	r2, r4
   2a2b4:	add	r1, r1, #48	; 0x30
   2a2b8:	stmib	sp, {r0, r1}
   2a2bc:	movw	r0, #44524	; 0xadec
   2a2c0:	mov	r1, r3
   2a2c4:	mov	r3, #4
   2a2c8:	movt	r0, #2
   2a2cc:	str	r0, [sp, #12]
   2a2d0:	movw	r0, #48392	; 0xbd08
   2a2d4:	movt	r0, #2
   2a2d8:	str	r0, [sp, #16]
   2a2dc:	mov	r0, sl
   2a2e0:	bl	38504 <flatcc_json_parser_union_type_vector@@Base>
   2a2e4:	mov	r2, r0
   2a2e8:	sub	r0, r4, r2
   2a2ec:	cmp	r0, #2
   2a2f0:	bge	2ab98 <main@@Base+0x14e50>
   2a2f4:	b	2a534 <main@@Base+0x147ec>
   2a2f8:	bne	2a308 <main@@Base+0x145c0>
   2a2fc:	ldrb	r0, [r3, #21]!
   2a300:	cmp	r0, #32
   2a304:	bhi	2a318 <main@@Base+0x145d0>
   2a308:	mov	r0, sl
   2a30c:	mov	r2, r4
   2a310:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a314:	mov	r3, r0
   2a318:	cmp	r3, r4
   2a31c:	beq	2a360 <main@@Base+0x14618>
   2a320:	ldrb	r0, [r3]
   2a324:	cmp	r0, #58	; 0x3a
   2a328:	bne	2a360 <main@@Base+0x14618>
   2a32c:	add	r1, r3, #1
   2a330:	sub	r0, r4, r1
   2a334:	cmp	r0, #2
   2a338:	blt	2a564 <main@@Base+0x1481c>
   2a33c:	ldrb	r0, [r1]
   2a340:	cmp	r0, #32
   2a344:	bls	2a554 <main@@Base+0x1480c>
   2a348:	mov	r3, r1
   2a34c:	cmp	r5, r3
   2a350:	bne	2a57c <main@@Base+0x14834>
   2a354:	mov	r0, sl
   2a358:	mov	r1, r5
   2a35c:	b	2a51c <main@@Base+0x147d4>
   2a360:	mov	r1, r3
   2a364:	mov	r0, sl
   2a368:	mov	r2, r4
   2a36c:	mov	r3, #4
   2a370:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2a374:	b	2a570 <main@@Base+0x14828>
   2a378:	bne	2a388 <main@@Base+0x14640>
   2a37c:	ldrb	r0, [r2, #2]!
   2a380:	cmp	r0, #32
   2a384:	bhi	2a398 <main@@Base+0x14650>
   2a388:	mov	r0, sl
   2a38c:	mov	r2, r4
   2a390:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a394:	mov	r2, r0
   2a398:	cmp	r8, r2
   2a39c:	beq	2a3b8 <main@@Base+0x14670>
   2a3a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a3a4:	mov	r1, #3
   2a3a8:	mov	r3, #1
   2a3ac:	str	r1, [sp]
   2a3b0:	mov	r1, r2
   2a3b4:	b	2a0a8 <main@@Base+0x14360>
   2a3b8:	mov	r0, sl
   2a3bc:	mov	r1, r8
   2a3c0:	b	2a51c <main@@Base+0x147d4>
   2a3c4:	bne	2a3d4 <main@@Base+0x1468c>
   2a3c8:	ldrb	r0, [r5, #2]!
   2a3cc:	cmp	r0, #32
   2a3d0:	bhi	2a3e4 <main@@Base+0x1469c>
   2a3d4:	mov	r0, sl
   2a3d8:	mov	r2, r4
   2a3dc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a3e0:	mov	r5, r0
   2a3e4:	cmp	r6, r5
   2a3e8:	beq	2a514 <main@@Base+0x147cc>
   2a3ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a3f0:	movw	r1, #53988	; 0xd2e4
   2a3f4:	mov	r2, #5
   2a3f8:	mov	r3, #2
   2a3fc:	movt	r1, #5
   2a400:	str	r2, [sp]
   2a404:	mov	r2, r4
   2a408:	add	r1, r1, #80	; 0x50
   2a40c:	stmib	sp, {r0, r1}
   2a410:	movw	r0, #44524	; 0xadec
   2a414:	mov	r1, r5
   2a418:	b	2a5a8 <main@@Base+0x14860>
   2a41c:	bne	2a42c <main@@Base+0x146e4>
   2a420:	ldrb	r0, [r3, #2]!
   2a424:	cmp	r0, #32
   2a428:	bhi	2a43c <main@@Base+0x146f4>
   2a42c:	mov	r0, sl
   2a430:	mov	r2, r4
   2a434:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a438:	mov	r3, r0
   2a43c:	cmp	r7, r3
   2a440:	beq	2a4c4 <main@@Base+0x1477c>
   2a444:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a448:	mov	r1, #9
   2a44c:	mov	r2, r4
   2a450:	str	r1, [sp]
   2a454:	mov	r1, r3
   2a458:	mov	r3, #4
   2a45c:	str	r0, [sp, #4]
   2a460:	movw	r0, #44524	; 0xadec
   2a464:	movt	r0, #2
   2a468:	str	r0, [sp, #8]
   2a46c:	mov	r0, sl
   2a470:	bl	37f90 <flatcc_json_parser_union_vector@@Base>
   2a474:	mov	r2, r0
   2a478:	sub	r0, r4, r2
   2a47c:	cmp	r0, #2
   2a480:	bge	2ab98 <main@@Base+0x14e50>
   2a484:	b	2a534 <main@@Base+0x147ec>
   2a488:	bne	2a498 <main@@Base+0x14750>
   2a48c:	ldrb	r0, [r5, #2]!
   2a490:	cmp	r0, #32
   2a494:	bhi	2a4a8 <main@@Base+0x14760>
   2a498:	mov	r0, sl
   2a49c:	mov	r2, r4
   2a4a0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a4a4:	mov	r5, r0
   2a4a8:	cmp	r7, r5
   2a4ac:	beq	2a4c4 <main@@Base+0x1477c>
   2a4b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a4b4:	mov	r1, #1
   2a4b8:	mov	r2, r4
   2a4bc:	mov	r3, #0
   2a4c0:	b	2a508 <main@@Base+0x147c0>
   2a4c4:	mov	r0, sl
   2a4c8:	mov	r1, r7
   2a4cc:	b	2a51c <main@@Base+0x147d4>
   2a4d0:	bne	2a4e0 <main@@Base+0x14798>
   2a4d4:	ldrb	r0, [r5, #2]!
   2a4d8:	cmp	r0, #32
   2a4dc:	bhi	2a4f0 <main@@Base+0x147a8>
   2a4e0:	mov	r0, sl
   2a4e4:	mov	r2, r4
   2a4e8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a4ec:	mov	r5, r0
   2a4f0:	cmp	r6, r5
   2a4f4:	beq	2a514 <main@@Base+0x147cc>
   2a4f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a4fc:	mov	r1, #5
   2a500:	mov	r2, r4
   2a504:	mov	r3, #2
   2a508:	str	r1, [sp]
   2a50c:	mov	r1, r5
   2a510:	b	2a0ac <main@@Base+0x14364>
   2a514:	mov	r0, sl
   2a518:	mov	r1, r6
   2a51c:	mov	r2, r4
   2a520:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   2a524:	mov	r2, r0
   2a528:	sub	r0, r4, r2
   2a52c:	cmp	r0, #2
   2a530:	bge	2ab98 <main@@Base+0x14e50>
   2a534:	mov	r1, r2
   2a538:	mov	r0, sl
   2a53c:	mov	r2, r4
   2a540:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a544:	mov	r3, r0
   2a548:	cmp	r3, r4
   2a54c:	bne	2abb0 <main@@Base+0x14e68>
   2a550:	b	2ac10 <main@@Base+0x14ec8>
   2a554:	bne	2a564 <main@@Base+0x1481c>
   2a558:	ldrb	r0, [r3, #2]!
   2a55c:	cmp	r0, #32
   2a560:	bhi	2a574 <main@@Base+0x1482c>
   2a564:	mov	r0, sl
   2a568:	mov	r2, r4
   2a56c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2a570:	mov	r3, r0
   2a574:	cmp	r5, r3
   2a578:	beq	2a354 <main@@Base+0x1460c>
   2a57c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a580:	movw	r1, #53988	; 0xd2e4
   2a584:	mov	r2, #1
   2a588:	movt	r1, #5
   2a58c:	str	r2, [sp]
   2a590:	mov	r2, r4
   2a594:	add	r1, r1, #64	; 0x40
   2a598:	stmib	sp, {r0, r1}
   2a59c:	movw	r0, #44524	; 0xadec
   2a5a0:	mov	r1, r3
   2a5a4:	mov	r3, #0
   2a5a8:	movt	r0, #2
   2a5ac:	str	r0, [sp, #12]
   2a5b0:	mov	r0, sl
   2a5b4:	bl	379dc <flatcc_json_parser_union_type@@Base>
   2a5b8:	mov	r2, r0
   2a5bc:	sub	r0, r4, r2
   2a5c0:	cmp	r0, #2
   2a5c4:	bge	2ab98 <main@@Base+0x14e50>
   2a5c8:	b	2a534 <main@@Base+0x147ec>
   2a5cc:	cmp	r3, r4
   2a5d0:	mov	r5, r4
   2a5d4:	beq	2a604 <main@@Base+0x148bc>
   2a5d8:	ldrb	r0, [r3]
   2a5dc:	cmp	r0, #34	; 0x22
   2a5e0:	bne	2a5ec <main@@Base+0x148a4>
   2a5e4:	add	r5, r3, #1
   2a5e8:	b	2a604 <main@@Base+0x148bc>
   2a5ec:	mov	r1, r3
   2a5f0:	mov	r0, sl
   2a5f4:	mov	r2, r4
   2a5f8:	mov	r3, #5
   2a5fc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2a600:	mov	r5, r0
   2a604:	sub	ip, r4, r5
   2a608:	mov	r0, #8
   2a60c:	cmp	ip, #8
   2a610:	movcc	r0, ip
   2a614:	and	r0, r0, #15
   2a618:	sub	r6, r0, #1
   2a61c:	cmp	r6, #7
   2a620:	bhi	2a354 <main@@Base+0x1460c>
   2a624:	mov	r9, sl
   2a628:	add	sl, pc, #32
   2a62c:	mov	r1, #0
   2a630:	mov	lr, #0
   2a634:	mov	r8, #0
   2a638:	mov	r4, #0
   2a63c:	mov	r3, #0
   2a640:	mov	r7, #0
   2a644:	mov	r0, #0
   2a648:	mov	r2, #0
   2a64c:	ldr	pc, [sl, r6, lsl #2]
   2a650:			; <UNDEFINED> instruction: 0x0002a6b4
   2a654:	andeq	sl, r2, ip, lsr #13
   2a658:	andeq	sl, r2, r4, lsr #13
   2a65c:	muleq	r2, ip, r6
   2a660:	muleq	r2, r0, r6
   2a664:	andeq	sl, r2, r4, lsl #13
   2a668:	andeq	sl, r2, r4, ror r6
   2a66c:	andeq	sl, r2, r0, ror r6
   2a670:	ldrb	lr, [r5, #7]
   2a674:	ldrb	r0, [r5, #6]
   2a678:	mov	r8, r1
   2a67c:	orr	r0, lr, r0, lsl #8
   2a680:	mov	r1, r0
   2a684:	ldrb	r0, [r5, #5]
   2a688:	mov	r4, r8
   2a68c:	orr	r1, r1, r0, lsl #16
   2a690:	ldrb	r0, [r5, #4]
   2a694:	mov	r3, r4
   2a698:	orr	r1, r1, r0, lsl #24
   2a69c:	ldrb	r0, [r5, #3]
   2a6a0:	orr	r7, r0, r3
   2a6a4:	ldrb	r0, [r5, #2]
   2a6a8:	orr	r0, r7, r0, lsl #8
   2a6ac:	ldrb	r2, [r5, #1]
   2a6b0:	orr	r2, r0, r2, lsl #16
   2a6b4:	ldrb	r0, [r5]
   2a6b8:	orr	r2, r2, r0, lsl #24
   2a6bc:	movw	r0, #29797	; 0x7465
   2a6c0:	movt	r0, #24931	; 0x6163
   2a6c4:	subs	r0, r1, r0
   2a6c8:	movw	r0, #24946	; 0x6172
   2a6cc:	movt	r0, #25448	; 0x6368
   2a6d0:	sbcs	r0, r2, r0
   2a6d4:	bcs	2a848 <main@@Base+0x14b00>
   2a6d8:	movw	r0, #29817	; 0x7479
   2a6dc:	movw	r3, #28005	; 0x6d65
   2a6e0:	ldr	r4, [sp, #36]	; 0x24
   2a6e4:	mov	sl, r9
   2a6e8:	movt	r0, #28511	; 0x6f5f
   2a6ec:	movt	r3, #25441	; 0x6361
   2a6f0:	eor	r0, r1, r0
   2a6f4:	eor	r3, r2, r3
   2a6f8:	orrs	r0, r0, r3
   2a6fc:	beq	29980 <main@@Base+0x13c38>
   2a700:	movw	r0, #28265	; 0x6e69
   2a704:	movw	r7, #29793	; 0x7461
   2a708:	ldr	r9, [sp, #32]
   2a70c:	movt	r0, #26479	; 0x676f
   2a710:	movt	r7, #24942	; 0x616e
   2a714:	eor	r0, r1, r0
   2a718:	eor	r2, r2, r7
   2a71c:	orrs	r0, r0, r2
   2a720:	bne	29a10 <main@@Base+0x13cc8>
   2a724:	add	r8, r5, #8
   2a728:	mov	r0, #8
   2a72c:	sub	ip, r4, r8
   2a730:	cmp	ip, #8
   2a734:	movcc	r0, ip
   2a738:	and	r0, r0, #15
   2a73c:	sub	r6, r0, #1
   2a740:	cmp	r6, #7
   2a744:	bhi	2a3b8 <main@@Base+0x14670>
   2a748:	str	r8, [sp, #28]
   2a74c:	add	r2, pc, #32
   2a750:	mov	r1, r5
   2a754:	mov	r4, #0
   2a758:	mov	lr, #0
   2a75c:	mov	r8, #0
   2a760:	mov	r3, #0
   2a764:	mov	r7, #0
   2a768:	mov	r5, #0
   2a76c:	mov	r0, #0
   2a770:	ldr	pc, [r2, r6, lsl #2]
   2a774:	ldrdeq	sl, [r2], -r0
   2a778:	andeq	sl, r2, r8, asr #15
   2a77c:	andeq	sl, r2, r0, asr #15
   2a780:			; <UNDEFINED> instruction: 0x0002a7b8
   2a784:	andeq	sl, r2, ip, lsr #15
   2a788:	muleq	r2, ip, r7
   2a78c:	muleq	r2, r4, r7
   2a790:	muleq	r2, r4, r7
   2a794:	ldrb	r0, [r1, #14]
   2a798:	lsl	lr, r0, #8
   2a79c:	ldrb	r0, [r1, #13]
   2a7a0:	mov	r8, r4
   2a7a4:	orr	r0, lr, r0, lsl #16
   2a7a8:	mov	r4, r0
   2a7ac:	ldrb	r0, [r1, #12]
   2a7b0:	mov	r3, r8
   2a7b4:	orr	r4, r4, r0, lsl #24
   2a7b8:	ldrb	r0, [r1, #11]
   2a7bc:	orr	r7, r0, r3
   2a7c0:	ldrb	r0, [r1, #10]
   2a7c4:	orr	r5, r7, r0, lsl #8
   2a7c8:	ldrb	r0, [r1, #9]
   2a7cc:	orr	r0, r5, r0, lsl #16
   2a7d0:	ldr	r8, [sp, #28]
   2a7d4:	mov	r7, r1
   2a7d8:	movw	r3, #25856	; 0x6500
   2a7dc:	bic	r2, r4, #255	; 0xff
   2a7e0:	movt	r3, #31088	; 0x7970
   2a7e4:	eor	r2, r2, r3
   2a7e8:	ldrb	r1, [r8]
   2a7ec:	orr	r1, r0, r1, lsl #24
   2a7f0:	ldr	r0, [sp, #24]
   2a7f4:	eor	r0, r1, r0
   2a7f8:	orrs	r0, r2, r0
   2a7fc:	bne	29b74 <main@@Base+0x13e2c>
   2a800:	ldr	r4, [sp, #36]	; 0x24
   2a804:	cmp	ip, #8
   2a808:	blt	2a3b8 <main@@Base+0x14670>
   2a80c:	ldrb	r0, [r7, #15]
   2a810:	mov	r3, r7
   2a814:	cmp	r0, #34	; 0x22
   2a818:	bne	2a3b8 <main@@Base+0x14670>
   2a81c:	add	r1, r3, #16
   2a820:	sub	r0, r4, r1
   2a824:	cmp	r0, #2
   2a828:	blt	29dac <main@@Base+0x14064>
   2a82c:	ldrb	r0, [r1]
   2a830:	cmp	r0, #32
   2a834:	bls	29d9c <main@@Base+0x14054>
   2a838:	mov	r3, r1
   2a83c:	cmp	r3, r4
   2a840:	bne	29dc4 <main@@Base+0x1407c>
   2a844:	b	29dfc <main@@Base+0x140b4>
   2a848:	movw	r0, #26720	; 0x6860
   2a84c:	ldr	r4, [sp, #36]	; 0x24
   2a850:	mov	sl, r9
   2a854:	movt	r0, #24419	; 0x5f63
   2a858:	subs	r0, r0, r1
   2a85c:	movw	r0, #26990	; 0x696e
   2a860:	movt	r0, #28001	; 0x6d61
   2a864:	sbcs	r0, r0, r2
   2a868:	bcc	2a9b4 <main@@Base+0x14c6c>
   2a86c:	movw	r0, #29797	; 0x7465
   2a870:	movt	r0, #24931	; 0x6163
   2a874:	eor	r0, r1, r0
   2a878:	movw	r1, #24946	; 0x6172
   2a87c:	movt	r1, #25448	; 0x6368
   2a880:	eor	r1, r2, r1
   2a884:	orrs	r0, r0, r1
   2a888:	bne	2ab74 <main@@Base+0x14e2c>
   2a88c:	add	r7, r5, #8
   2a890:	mov	r0, #8
   2a894:	ldr	r9, [sp, #32]
   2a898:	sub	ip, r4, r7
   2a89c:	cmp	ip, #8
   2a8a0:	movcc	r0, ip
   2a8a4:	and	r0, r0, #15
   2a8a8:	sub	r6, r0, #1
   2a8ac:	cmp	r6, #7
   2a8b0:	bhi	2a4c4 <main@@Base+0x1477c>
   2a8b4:	str	r7, [sp, #28]
   2a8b8:	add	r2, pc, #32
   2a8bc:	mov	r1, r5
   2a8c0:	mov	r8, #0
   2a8c4:	mov	lr, #0
   2a8c8:	mov	r4, #0
   2a8cc:	mov	r3, #0
   2a8d0:	mov	r7, #0
   2a8d4:	mov	r5, #0
   2a8d8:	mov	r0, #0
   2a8dc:	ldr	pc, [r2, r6, lsl #2]
   2a8e0:	andeq	sl, r2, ip, lsr r9
   2a8e4:	andeq	sl, r2, r4, lsr r9
   2a8e8:	andeq	sl, r2, ip, lsr #18
   2a8ec:	andeq	sl, r2, r4, lsr #18
   2a8f0:	andeq	sl, r2, r8, lsl r9
   2a8f4:	andeq	sl, r2, r8, lsl #18
   2a8f8:	andeq	sl, r2, r0, lsl #18
   2a8fc:	andeq	sl, r2, r0, lsl #18
   2a900:	ldrb	r0, [r1, #14]
   2a904:	lsl	lr, r0, #8
   2a908:	ldrb	r0, [r1, #13]
   2a90c:	mov	r4, r8
   2a910:	orr	r0, lr, r0, lsl #16
   2a914:	mov	r8, r0
   2a918:	ldrb	r0, [r1, #12]
   2a91c:	mov	r3, r4
   2a920:	orr	r8, r8, r0, lsl #24
   2a924:	ldrb	r0, [r1, #11]
   2a928:	orr	r7, r0, r3
   2a92c:	ldrb	r0, [r1, #10]
   2a930:	orr	r5, r7, r0, lsl #8
   2a934:	ldrb	r0, [r1, #9]
   2a938:	orr	r0, r5, r0, lsl #16
   2a93c:	ldr	r7, [sp, #28]
   2a940:	movw	r2, #25856	; 0x6500
   2a944:	mov	r3, r1
   2a948:	bic	r1, r8, #255	; 0xff
   2a94c:	movt	r2, #31088	; 0x7970
   2a950:	eor	r1, r1, r2
   2a954:	ldrb	r2, [r7]
   2a958:	orr	r0, r0, r2, lsl #24
   2a95c:	movw	r2, #24436	; 0x5f74
   2a960:	movt	r2, #29299	; 0x7273
   2a964:	eor	r2, r0, r2
   2a968:	orrs	r1, r1, r2
   2a96c:	bne	29bd0 <main@@Base+0x13e88>
   2a970:	ldr	r4, [sp, #36]	; 0x24
   2a974:	cmp	ip, #8
   2a978:	blt	2a4c4 <main@@Base+0x1477c>
   2a97c:	ldrb	r0, [r3, #15]
   2a980:	cmp	r0, #34	; 0x22
   2a984:	bne	2a4c4 <main@@Base+0x1477c>
   2a988:	add	r1, r3, #16
   2a98c:	sub	r0, r4, r1
   2a990:	cmp	r0, #2
   2a994:	blt	29e9c <main@@Base+0x14154>
   2a998:	ldrb	r0, [r1]
   2a99c:	cmp	r0, #32
   2a9a0:	bls	29e8c <main@@Base+0x14144>
   2a9a4:	mov	r3, r1
   2a9a8:	cmp	r3, r4
   2a9ac:	bne	29eb4 <main@@Base+0x1416c>
   2a9b0:	b	29eec <main@@Base+0x141a4>
   2a9b4:	movw	r0, #26979	; 0x6963
   2a9b8:	movw	r3, #25701	; 0x6465
   2a9bc:	movt	r0, #24427	; 0x5f6b
   2a9c0:	movt	r3, #29545	; 0x7369
   2a9c4:	eor	r0, r1, r0
   2a9c8:	eor	r3, r2, r3
   2a9cc:	orrs	r0, r0, r3
   2a9d0:	beq	29a68 <main@@Base+0x13d20>
   2a9d4:	movw	r0, #26721	; 0x6861
   2a9d8:	movt	r0, #24419	; 0x5f63
   2a9dc:	eor	r0, r1, r0
   2a9e0:	movw	r1, #26990	; 0x696e
   2a9e4:	movt	r1, #28001	; 0x6d61
   2a9e8:	eor	r1, r2, r1
   2a9ec:	orrs	r0, r0, r1
   2a9f0:	bne	2ab74 <main@@Base+0x14e2c>
   2a9f4:	add	r7, r5, #8
   2a9f8:	mov	r0, #8
   2a9fc:	sub	lr, r4, r7
   2aa00:	cmp	lr, #8
   2aa04:	movcc	r0, lr
   2aa08:	and	r0, r0, #15
   2aa0c:	sub	r6, r0, #1
   2aa10:	cmp	r6, #7
   2aa14:	bhi	29cf8 <main@@Base+0x13fb0>
   2aa18:	str	r7, [sp, #28]
   2aa1c:	add	r4, pc, #32
   2aa20:	mov	r1, #0
   2aa24:	mov	ip, #0
   2aa28:	mov	sl, #0
   2aa2c:	mov	r8, #0
   2aa30:	mov	r3, #0
   2aa34:	mov	r7, #0
   2aa38:	mov	r2, #0
   2aa3c:	mov	r0, #0
   2aa40:	ldr	pc, [r4, r6, lsl #2]
   2aa44:	andeq	sl, r2, r8, lsr #21
   2aa48:	andeq	sl, r2, r0, lsr #21
   2aa4c:	muleq	r2, r8, sl
   2aa50:	muleq	r2, r0, sl
   2aa54:	andeq	sl, r2, r4, lsl #21
   2aa58:	andeq	sl, r2, r8, ror sl
   2aa5c:	andeq	sl, r2, r8, ror #20
   2aa60:	andeq	sl, r2, r4, ror #20
   2aa64:	ldrb	ip, [r5, #15]
   2aa68:	ldrb	r0, [r5, #14]
   2aa6c:	mov	sl, r1
   2aa70:	orr	r0, ip, r0, lsl #8
   2aa74:	mov	r1, r0
   2aa78:	ldrb	r0, [r5, #13]
   2aa7c:	mov	r8, sl
   2aa80:	orr	r1, r1, r0, lsl #16
   2aa84:	ldrb	r0, [r5, #12]
   2aa88:	mov	r3, r8
   2aa8c:	orr	r1, r1, r0, lsl #24
   2aa90:	ldrb	r0, [r5, #11]
   2aa94:	orr	r7, r0, r3
   2aa98:	ldrb	r0, [r5, #10]
   2aa9c:	orr	r2, r7, r0, lsl #8
   2aaa0:	ldrb	r0, [r5, #9]
   2aaa4:	orr	r0, r2, r0, lsl #16
   2aaa8:	ldr	r7, [sp, #28]
   2aaac:	movw	r2, #24436	; 0x5f74
   2aab0:	movt	r2, #25970	; 0x6572
   2aab4:	eor	r2, r1, r2
   2aab8:	ldrb	r3, [r7]
   2aabc:	orr	r0, r0, r3, lsl #24
   2aac0:	movw	r3, #25460	; 0x6374
   2aac4:	movt	r3, #29281	; 0x7261
   2aac8:	eor	r3, r0, r3
   2aacc:	orrs	r2, r2, r3
   2aad0:	bne	29c28 <main@@Base+0x13ee0>
   2aad4:	ldr	r4, [sp, #36]	; 0x24
   2aad8:	mov	r3, r5
   2aadc:	add	r5, r5, #16
   2aae0:	mov	r1, #8
   2aae4:	mov	sl, r9
   2aae8:	sub	r0, r4, r5
   2aaec:	cmp	r0, #8
   2aaf0:	movcc	r1, r0
   2aaf4:	and	r2, r1, #15
   2aaf8:	sub	r1, r2, #3
   2aafc:	cmp	r1, #6
   2ab00:	bcs	29d04 <main@@Base+0x13fbc>
   2ab04:	ldrb	r1, [r3, #18]
   2ab08:	ldr	r9, [sp, #32]
   2ab0c:	lsl	r1, r1, #8
   2ab10:	ldrb	r2, [r3, #17]
   2ab14:	orr	r1, r1, r2, lsl #16
   2ab18:	ldrb	r2, [r5]
   2ab1c:	bic	r1, r1, #255	; 0xff
   2ab20:	orr	r1, r1, r2, lsl #24
   2ab24:	movw	r2, #25856	; 0x6500
   2ab28:	movt	r2, #31088	; 0x7970
   2ab2c:	teq	r1, r2
   2ab30:	bne	2a354 <main@@Base+0x1460c>
   2ab34:	cmp	r0, #4
   2ab38:	blt	2a354 <main@@Base+0x1460c>
   2ab3c:	ldrb	r0, [r3, #19]
   2ab40:	cmp	r0, #34	; 0x22
   2ab44:	bne	2a354 <main@@Base+0x1460c>
   2ab48:	add	r1, r3, #20
   2ab4c:	sub	r0, r4, r1
   2ab50:	cmp	r0, #2
   2ab54:	blt	2a308 <main@@Base+0x145c0>
   2ab58:	ldrb	r0, [r1]
   2ab5c:	cmp	r0, #32
   2ab60:	bls	2a2f8 <main@@Base+0x145b0>
   2ab64:	mov	r3, r1
   2ab68:	cmp	r3, r4
   2ab6c:	bne	2a320 <main@@Base+0x145d8>
   2ab70:	b	2a360 <main@@Base+0x14618>
   2ab74:	mov	r0, sl
   2ab78:	mov	r1, r5
   2ab7c:	mov	r2, r4
   2ab80:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   2ab84:	ldr	r9, [sp, #32]
   2ab88:	mov	r2, r0
   2ab8c:	sub	r0, r4, r2
   2ab90:	cmp	r0, #2
   2ab94:	blt	2a534 <main@@Base+0x147ec>
   2ab98:	ldrb	r0, [r2]
   2ab9c:	cmp	r0, #32
   2aba0:	bls	2abf4 <main@@Base+0x14eac>
   2aba4:	mov	r3, r2
   2aba8:	cmp	r3, r4
   2abac:	beq	2ac10 <main@@Base+0x14ec8>
   2abb0:	ldrb	r0, [r3]
   2abb4:	cmp	r0, #44	; 0x2c
   2abb8:	bne	2ac24 <main@@Base+0x14edc>
   2abbc:	add	r1, r3, #1
   2abc0:	sub	r0, r4, r1
   2abc4:	cmp	r0, #2
   2abc8:	blt	29964 <main@@Base+0x13c1c>
   2abcc:	ldrb	r0, [r1]
   2abd0:	cmp	r0, #32
   2abd4:	bls	29954 <main@@Base+0x13c0c>
   2abd8:	mov	r3, r1
   2abdc:	cmp	r3, r4
   2abe0:	beq	2ac5c <main@@Base+0x14f14>
   2abe4:	ldrb	r0, [r3]
   2abe8:	cmp	r0, #125	; 0x7d
   2abec:	bne	2a5cc <main@@Base+0x14884>
   2abf0:	b	2ac2c <main@@Base+0x14ee4>
   2abf4:	bne	2a534 <main@@Base+0x147ec>
   2abf8:	mov	r3, r2
   2abfc:	ldrb	r0, [r3, #1]!
   2ac00:	cmp	r0, #32
   2ac04:	bls	2a534 <main@@Base+0x147ec>
   2ac08:	cmp	r3, r4
   2ac0c:	bne	2abb0 <main@@Base+0x14e68>
   2ac10:	mov	r7, r4
   2ac14:	ldr	r0, [sl, #20]
   2ac18:	cmp	r0, #0
   2ac1c:	bne	297d8 <main@@Base+0x13a90>
   2ac20:	b	29888 <main@@Base+0x13b40>
   2ac24:	cmp	r0, #125	; 0x7d
   2ac28:	bne	2ac68 <main@@Base+0x14f20>
   2ac2c:	add	r1, r3, #1
   2ac30:	sub	r0, r4, r1
   2ac34:	cmp	r0, #2
   2ac38:	blt	2ac90 <main@@Base+0x14f48>
   2ac3c:	ldrb	r0, [r1]
   2ac40:	cmp	r0, #32
   2ac44:	bls	2ac7c <main@@Base+0x14f34>
   2ac48:	mov	r7, r1
   2ac4c:	ldr	r0, [sl, #20]
   2ac50:	cmp	r0, #0
   2ac54:	bne	297d8 <main@@Base+0x13a90>
   2ac58:	b	29888 <main@@Base+0x13b40>
   2ac5c:	mov	r0, sl
   2ac60:	mov	r1, r4
   2ac64:	b	2ac70 <main@@Base+0x14f28>
   2ac68:	mov	r0, sl
   2ac6c:	mov	r1, r3
   2ac70:	mov	r2, r4
   2ac74:	mov	r3, #10
   2ac78:	b	29874 <main@@Base+0x13b2c>
   2ac7c:	bne	2ac90 <main@@Base+0x14f48>
   2ac80:	ldrb	r0, [r3, #2]!
   2ac84:	cmp	r0, #32
   2ac88:	mov	r7, r3
   2ac8c:	bhi	2987c <main@@Base+0x13b34>
   2ac90:	mov	r0, sl
   2ac94:	mov	r2, r4
   2ac98:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2ac9c:	b	29878 <main@@Base+0x13b30>
   2aca0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aca4:	add	fp, sp, #28
   2aca8:	push	{r3}		; (str r3, [sp, #-4]!)
   2acac:	sub	r7, r2, r1
   2acb0:	cmp	r7, #8
   2acb4:	movcs	r7, #8
   2acb8:	and	r7, r7, #15
   2acbc:	sub	r5, r7, #1
   2acc0:	cmp	r5, #7
   2acc4:	bhi	2ada8 <main@@Base+0x15060>
   2acc8:	add	lr, pc, #32
   2accc:	mov	ip, #0
   2acd0:	mov	r3, #0
   2acd4:	mov	r8, #0
   2acd8:	mov	r9, #0
   2acdc:	mov	sl, #0
   2ace0:	mov	r7, #0
   2ace4:	mov	r4, #0
   2ace8:	mov	r6, #0
   2acec:	ldr	pc, [lr, r5, lsl #2]
   2acf0:	andeq	sl, r2, r4, asr sp
   2acf4:	andeq	sl, r2, ip, asr #26
   2acf8:	andeq	sl, r2, r4, asr #26
   2acfc:	andeq	sl, r2, ip, lsr sp
   2ad00:	andeq	sl, r2, r0, lsr sp
   2ad04:	andeq	sl, r2, r4, lsr #26
   2ad08:	andeq	sl, r2, r4, lsl sp
   2ad0c:	andeq	sl, r2, r0, lsl sp
   2ad10:	ldrb	r3, [r1, #7]
   2ad14:	ldrb	r7, [r1, #6]
   2ad18:	mov	r8, ip
   2ad1c:	orr	r3, r3, r7, lsl #8
   2ad20:	mov	ip, r3
   2ad24:	ldrb	r3, [r1, #5]
   2ad28:	mov	r9, r8
   2ad2c:	orr	ip, ip, r3, lsl #16
   2ad30:	ldrb	r3, [r1, #4]
   2ad34:	mov	sl, r9
   2ad38:	orr	ip, ip, r3, lsl #24
   2ad3c:	ldrb	r3, [r1, #3]
   2ad40:	orr	r7, r3, sl
   2ad44:	ldrb	r3, [r1, #2]
   2ad48:	orr	r4, r7, r3, lsl #8
   2ad4c:	ldrb	r3, [r1, #1]
   2ad50:	orr	r6, r4, r3, lsl #16
   2ad54:	ldrb	r7, [r1]
   2ad58:	movw	r3, #29797	; 0x7465
   2ad5c:	movt	r3, #24931	; 0x6163
   2ad60:	eor	r3, ip, r3
   2ad64:	orr	r7, r6, r7, lsl #24
   2ad68:	movw	r6, #24946	; 0x6172
   2ad6c:	movt	r6, #17256	; 0x4368
   2ad70:	eor	r7, r7, r6
   2ad74:	orrs	r3, r3, r7
   2ad78:	bne	2ada8 <main@@Base+0x15060>
   2ad7c:	add	lr, r1, #8
   2ad80:	mov	r6, #-268435456	; 0xf0000000
   2ad84:	sub	r7, r2, lr
   2ad88:	cmp	r7, #8
   2ad8c:	mov	r3, r7
   2ad90:	movcs	r3, #8
   2ad94:	add	r3, r6, r3, lsl #28
   2ad98:	asr	r3, r3, #28
   2ad9c:	cmp	r3, #0
   2ada0:	cmpge	r7, #2
   2ada4:	bge	2adb4 <main@@Base+0x1506c>
   2ada8:	mov	r0, r1
   2adac:	sub	sp, fp, #28
   2adb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2adb4:	ldrb	r3, [lr]
   2adb8:	cmp	r3, #114	; 0x72
   2adbc:	bne	2ada8 <main@@Base+0x15060>
   2adc0:	ldrb	r3, [r1, #9]
   2adc4:	mov	ip, lr
   2adc8:	cmp	r3, #46	; 0x2e
   2adcc:	addeq	ip, r1, #10
   2add0:	cmp	ip, lr
   2add4:	beq	2ada8 <main@@Base+0x15060>
   2add8:	ldr	r3, [sp]
   2addc:	mov	r1, ip
   2ade0:	sub	sp, fp, #28
   2ade4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ade8:	b	255d0 <main@@Base+0xf888>
   2adec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2adf0:	add	fp, sp, #28
   2adf4:	sub	sp, sp, #36	; 0x24
   2adf8:	ldr	r5, [fp, #8]
   2adfc:	mov	r8, r0
   2ae00:	mov	r0, #0
   2ae04:	mov	r9, r2
   2ae08:	mov	r4, r1
   2ae0c:	cmp	r3, #11
   2ae10:	str	r0, [r5]
   2ae14:	bhi	2ae68 <main@@Base+0x15120>
   2ae18:	add	r0, pc, #0
   2ae1c:	ldr	pc, [r0, r3, lsl #2]
   2ae20:			; <UNDEFINED> instruction: 0x0002aeb0
   2ae24:	andeq	sl, r2, r8, lsl #29
   2ae28:	andeq	sl, r2, ip, ror #29
   2ae2c:	andeq	sl, r2, r8, lsl #29
   2ae30:	andeq	sl, r2, r8, lsl #29
   2ae34:	andeq	sl, r2, r8, lsl #29
   2ae38:	andeq	sl, r2, r8, lsl #29
   2ae3c:	andeq	sl, r2, r8, lsl #29
   2ae40:	andeq	sl, r2, ip, asr #30
   2ae44:	andeq	sl, r2, r0, asr lr
   2ae48:	andeq	sl, r2, r0, asr lr
   2ae4c:	andeq	sl, r2, r0, ror lr
   2ae50:	mov	r0, r8
   2ae54:	mov	r1, r4
   2ae58:	mov	r2, r9
   2ae5c:	mov	r3, r5
   2ae60:	bl	2bd30 <main@@Base+0x15fe8>
   2ae64:	b	2b050 <main@@Base+0x15308>
   2ae68:	cmp	r3, #255	; 0xff
   2ae6c:	bne	2ae88 <main@@Base+0x15140>
   2ae70:	mov	r0, r8
   2ae74:	mov	r1, r4
   2ae78:	mov	r2, r9
   2ae7c:	mov	r3, r5
   2ae80:	bl	37464 <flatcc_json_parser_build_string@@Base>
   2ae84:	b	2b050 <main@@Base+0x15308>
   2ae88:	ldrb	r0, [r8, #8]
   2ae8c:	tst	r0, #1
   2ae90:	bne	2afb4 <main@@Base+0x1526c>
   2ae94:	mov	r0, r8
   2ae98:	mov	r1, r4
   2ae9c:	mov	r2, r9
   2aea0:	mov	r3, #15
   2aea4:	sub	sp, fp, #28
   2aea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aeac:	b	347d8 <flatcc_json_parser_set_error@@Base>
   2aeb0:	sub	r0, r9, r4
   2aeb4:	cmp	r0, #4
   2aeb8:	blt	2aed0 <main@@Base+0x15188>
   2aebc:	ldr	r0, [r4]
   2aec0:	movw	r1, #30062	; 0x756e
   2aec4:	movt	r1, #27756	; 0x6c6c
   2aec8:	cmp	r0, r1
   2aecc:	beq	2b09c <main@@Base+0x15354>
   2aed0:	mov	r0, r8
   2aed4:	mov	r1, r4
   2aed8:	mov	r2, r9
   2aedc:	mov	r3, #26
   2aee0:	sub	sp, fp, #28
   2aee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aee8:	b	347d8 <flatcc_json_parser_set_error@@Base>
   2aeec:	mov	r0, #0
   2aef0:	mov	r1, #1
   2aef4:	str	r0, [r5]
   2aef8:	ldr	r0, [r8]
   2aefc:	bl	2fcd0 <flatcc_builder_start_table@@Base>
   2af00:	cmp	r0, #0
   2af04:	bne	2b03c <main@@Base+0x152f4>
   2af08:	cmp	r4, r9
   2af0c:	beq	2b018 <main@@Base+0x152d0>
   2af10:	ldrb	r0, [r4]
   2af14:	cmp	r0, #123	; 0x7b
   2af18:	bne	2b018 <main@@Base+0x152d0>
   2af1c:	add	r1, r4, #1
   2af20:	sub	r0, r9, r1
   2af24:	cmp	r0, #2
   2af28:	blt	2b5ec <main@@Base+0x158a4>
   2af2c:	ldrb	r0, [r1]
   2af30:	cmp	r0, #32
   2af34:	bls	2b5dc <main@@Base+0x15894>
   2af38:	mov	r4, r1
   2af3c:	cmp	r4, r9
   2af40:	mov	r2, r9
   2af44:	bne	2b608 <main@@Base+0x158c0>
   2af48:	b	2b648 <main@@Base+0x15900>
   2af4c:	mov	r0, #0
   2af50:	mov	r1, #2
   2af54:	mov	r2, #2
   2af58:	str	r0, [r5]
   2af5c:	ldr	r0, [r8]
   2af60:	bl	2e9f8 <flatcc_builder_start_struct@@Base>
   2af64:	cmp	r0, #0
   2af68:	beq	2b00c <main@@Base+0x152c4>
   2af6c:	cmp	r4, r9
   2af70:	beq	2afcc <main@@Base+0x15284>
   2af74:	ldrb	r1, [r4]
   2af78:	cmp	r1, #123	; 0x7b
   2af7c:	bne	2afcc <main@@Base+0x15284>
   2af80:	add	r1, r4, #1
   2af84:	str	r0, [sp, #8]
   2af88:	sub	r0, r9, r1
   2af8c:	cmp	r0, #2
   2af90:	blt	2b0bc <main@@Base+0x15374>
   2af94:	ldrb	r0, [r1]
   2af98:	cmp	r0, #32
   2af9c:	bls	2b0ac <main@@Base+0x15364>
   2afa0:	mov	r4, r1
   2afa4:	cmp	r4, r9
   2afa8:	mov	r3, r9
   2afac:	bne	2b0d8 <main@@Base+0x15390>
   2afb0:	b	2b118 <main@@Base+0x153d0>
   2afb4:	mov	r0, r8
   2afb8:	mov	r1, r4
   2afbc:	mov	r2, r9
   2afc0:	sub	sp, fp, #28
   2afc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2afc8:	b	35224 <flatcc_json_parser_generic_json@@Base>
   2afcc:	mov	r0, r8
   2afd0:	mov	r1, r4
   2afd4:	mov	r2, r9
   2afd8:	mov	r3, #21
   2afdc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2afe0:	mov	r4, r0
   2afe4:	cmp	r4, r9
   2afe8:	mov	r1, r9
   2afec:	beq	2b010 <main@@Base+0x152c8>
   2aff0:	ldr	r0, [r8]
   2aff4:	bl	2eaec <flatcc_builder_end_struct@@Base>
   2aff8:	cmp	r0, #0
   2affc:	mov	r1, r4
   2b000:	str	r0, [r5]
   2b004:	bne	2b054 <main@@Base+0x1530c>
   2b008:	b	2b010 <main@@Base+0x152c8>
   2b00c:	mov	r1, r4
   2b010:	mov	r0, r8
   2b014:	b	2b044 <main@@Base+0x152fc>
   2b018:	mov	r0, r8
   2b01c:	mov	r1, r4
   2b020:	mov	r2, r9
   2b024:	mov	r3, #21
   2b028:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2b02c:	mov	r4, r0
   2b030:	ldr	r0, [r8, #20]
   2b034:	cmp	r0, #0
   2b038:	beq	2bc30 <main@@Base+0x15ee8>
   2b03c:	mov	r0, r8
   2b040:	mov	r1, r4
   2b044:	mov	r2, r9
   2b048:	mov	r3, #33	; 0x21
   2b04c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2b050:	mov	r4, r0
   2b054:	ldr	r0, [r8, #20]
   2b058:	cmp	r0, #0
   2b05c:	bne	2b06c <main@@Base+0x15324>
   2b060:	ldr	r0, [r5]
   2b064:	cmp	r0, #0
   2b068:	beq	2b078 <main@@Base+0x15330>
   2b06c:	mov	r0, r4
   2b070:	sub	sp, fp, #28
   2b074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b078:	mov	r0, r8
   2b07c:	mov	r1, r4
   2b080:	mov	r2, r9
   2b084:	mov	r3, #33	; 0x21
   2b088:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2b08c:	mov	r4, r0
   2b090:	mov	r0, r4
   2b094:	sub	sp, fp, #28
   2b098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b09c:	add	r4, r4, #4
   2b0a0:	mov	r0, r4
   2b0a4:	sub	sp, fp, #28
   2b0a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b0ac:	bne	2b0bc <main@@Base+0x15374>
   2b0b0:	ldrb	r0, [r4, #2]!
   2b0b4:	cmp	r0, #32
   2b0b8:	bhi	2b0cc <main@@Base+0x15384>
   2b0bc:	mov	r0, r8
   2b0c0:	mov	r2, r9
   2b0c4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2b0c8:	mov	r4, r0
   2b0cc:	cmp	r4, r9
   2b0d0:	mov	r3, r9
   2b0d4:	beq	2b118 <main@@Base+0x153d0>
   2b0d8:	ldrb	r0, [r4]
   2b0dc:	cmp	r0, #125	; 0x7d
   2b0e0:	bne	2b114 <main@@Base+0x153cc>
   2b0e4:	add	r1, r4, #1
   2b0e8:	sub	r0, r9, r1
   2b0ec:	cmp	r0, #2
   2b0f0:	blt	2bc7c <main@@Base+0x15f34>
   2b0f4:	ldrb	r0, [r1]
   2b0f8:	cmp	r0, #32
   2b0fc:	bhi	2b5bc <main@@Base+0x15874>
   2b100:	bne	2bc7c <main@@Base+0x15f34>
   2b104:	ldrb	r0, [r4, #2]!
   2b108:	cmp	r0, #32
   2b10c:	bhi	2afe4 <main@@Base+0x1529c>
   2b110:	b	2bc7c <main@@Base+0x15f34>
   2b114:	mov	r3, r4
   2b118:	movw	r0, #53756	; 0xd1fc
   2b11c:	movt	r0, #5
   2b120:	add	r0, r0, #108	; 0x6c
   2b124:	str	r0, [sp, #4]
   2b128:	str	r5, [sp, #12]
   2b12c:	b	2b2c4 <main@@Base+0x1557c>
   2b130:	bne	2b140 <main@@Base+0x153f8>
   2b134:	ldrb	r0, [r3, #2]!
   2b138:	cmp	r0, #32
   2b13c:	bhi	2b150 <main@@Base+0x15408>
   2b140:	mov	r0, r8
   2b144:	mov	r2, r9
   2b148:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2b14c:	mov	r3, r0
   2b150:	cmp	r3, r9
   2b154:	bne	2b550 <main@@Base+0x15808>
   2b158:	b	2b5d0 <main@@Base+0x15888>
   2b15c:	mov	r0, r8
   2b160:	mov	r1, sl
   2b164:	mov	r2, r9
   2b168:	mov	r3, #4
   2b16c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2b170:	b	2b190 <main@@Base+0x15448>
   2b174:	bne	2b184 <main@@Base+0x1543c>
   2b178:	ldrb	r0, [sl, #2]!
   2b17c:	cmp	r0, #32
   2b180:	bhi	2b194 <main@@Base+0x1544c>
   2b184:	mov	r0, r8
   2b188:	mov	r2, r9
   2b18c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2b190:	mov	sl, r0
   2b194:	cmp	r4, sl
   2b198:	beq	2b4e0 <main@@Base+0x15798>
   2b19c:	mov	r4, #0
   2b1a0:	cmp	sl, r9
   2b1a4:	str	r4, [sp, #28]
   2b1a8:	str	r4, [sp, #24]
   2b1ac:	strh	r4, [sp, #16]
   2b1b0:	str	r4, [sp, #20]
   2b1b4:	beq	2b200 <main@@Base+0x154b8>
   2b1b8:	add	r0, sp, #24
   2b1bc:	mov	r1, sl
   2b1c0:	mov	r2, r9
   2b1c4:	add	r3, sp, #20
   2b1c8:	str	r0, [sp]
   2b1cc:	mov	r0, r8
   2b1d0:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   2b1d4:	cmp	r0, sl
   2b1d8:	beq	2b214 <main@@Base+0x154cc>
   2b1dc:	mov	r2, r0
   2b1e0:	ldr	r0, [sp, #20]
   2b1e4:	cmp	r0, #0
   2b1e8:	beq	2b228 <main@@Base+0x154e0>
   2b1ec:	mov	r1, r2
   2b1f0:	mov	r0, r8
   2b1f4:	mov	r2, r9
   2b1f8:	mov	r3, #8
   2b1fc:	b	2b24c <main@@Base+0x15504>
   2b200:	mov	r2, r9
   2b204:	ldr	r0, [sp, #8]
   2b208:	cmp	sl, r2
   2b20c:	bne	2b294 <main@@Base+0x1554c>
   2b210:	b	2b260 <main@@Base+0x15518>
   2b214:	mov	r2, sl
   2b218:	ldr	r0, [sp, #8]
   2b21c:	cmp	sl, r2
   2b220:	bne	2b294 <main@@Base+0x1554c>
   2b224:	b	2b260 <main@@Base+0x15518>
   2b228:	ldr	r0, [sp, #24]
   2b22c:	ldr	r1, [sp, #28]
   2b230:	subs	r3, r0, #65536	; 0x10000
   2b234:	sbcs	r1, r1, #0
   2b238:	bcc	2b2ac <main@@Base+0x15564>
   2b23c:	mov	r1, r2
   2b240:	mov	r0, r8
   2b244:	mov	r2, r9
   2b248:	mov	r3, #7
   2b24c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2b250:	mov	r2, r0
   2b254:	ldr	r0, [sp, #8]
   2b258:	cmp	sl, r2
   2b25c:	bne	2b294 <main@@Base+0x1554c>
   2b260:	add	r0, sp, #16
   2b264:	mov	r1, sl
   2b268:	mov	r2, r9
   2b26c:	str	r0, [sp]
   2b270:	mov	r0, r8
   2b274:	ldr	r3, [sp, #4]
   2b278:	bl	2c3ac <main@@Base+0x16664>
   2b27c:	mov	r2, r0
   2b280:	cmp	r0, sl
   2b284:	cmpne	r2, r9
   2b288:	beq	2bcd4 <main@@Base+0x15f8c>
   2b28c:	ldrh	r4, [sp, #16]
   2b290:	ldr	r0, [sp, #8]
   2b294:	strh	r4, [r0]
   2b298:	ldr	r5, [sp, #12]
   2b29c:	sub	r0, r9, r2
   2b2a0:	cmp	r0, #2
   2b2a4:	bge	2b504 <main@@Base+0x157bc>
   2b2a8:	b	2b574 <main@@Base+0x1582c>
   2b2ac:	mov	r4, r0
   2b2b0:	strh	r0, [sp, #16]
   2b2b4:	ldr	r0, [sp, #8]
   2b2b8:	cmp	sl, r2
   2b2bc:	bne	2b294 <main@@Base+0x1554c>
   2b2c0:	b	2b260 <main@@Base+0x15518>
   2b2c4:	cmp	r3, r9
   2b2c8:	mov	sl, r9
   2b2cc:	beq	2b2fc <main@@Base+0x155b4>
   2b2d0:	ldrb	r0, [r3]
   2b2d4:	cmp	r0, #34	; 0x22
   2b2d8:	bne	2b2e4 <main@@Base+0x1559c>
   2b2dc:	add	sl, r3, #1
   2b2e0:	b	2b2fc <main@@Base+0x155b4>
   2b2e4:	mov	r1, r3
   2b2e8:	mov	r0, r8
   2b2ec:	mov	r2, r9
   2b2f0:	mov	r3, #5
   2b2f4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2b2f8:	mov	sl, r0
   2b2fc:	sub	r0, r9, sl
   2b300:	mov	r1, #8
   2b304:	cmp	r0, #8
   2b308:	movcs	r0, r1
   2b30c:	and	r0, r0, #15
   2b310:	sub	r3, r0, #1
   2b314:	cmp	r3, #7
   2b318:	bhi	2b460 <main@@Base+0x15718>
   2b31c:	add	r7, pc, #32
   2b320:	mov	r0, #0
   2b324:	mov	ip, #0
   2b328:	mov	lr, #0
   2b32c:	mov	r4, #0
   2b330:	mov	r2, #0
   2b334:	mov	r5, #0
   2b338:	mov	r1, #0
   2b33c:	mov	r6, #0
   2b340:	ldr	pc, [r7, r3, lsl #2]
   2b344:	andeq	fp, r2, r8, lsr #7
   2b348:	andeq	fp, r2, r0, lsr #7
   2b34c:	muleq	r2, r8, r3
   2b350:	muleq	r2, r0, r3
   2b354:	andeq	fp, r2, r4, lsl #7
   2b358:	andeq	fp, r2, r8, ror r3
   2b35c:	andeq	fp, r2, r8, ror #6
   2b360:	andeq	fp, r2, r4, ror #6
   2b364:	ldrb	ip, [sl, #7]
   2b368:	ldrb	r1, [sl, #6]
   2b36c:	mov	lr, r0
   2b370:	orr	r1, ip, r1, lsl #8
   2b374:	mov	r0, r1
   2b378:	ldrb	r1, [sl, #5]
   2b37c:	mov	r4, lr
   2b380:	orr	r0, r0, r1, lsl #16
   2b384:	ldrb	r1, [sl, #4]
   2b388:	mov	r2, r4
   2b38c:	orr	r0, r0, r1, lsl #24
   2b390:	ldrb	r1, [sl, #3]
   2b394:	orr	r5, r1, r2
   2b398:	ldrb	r1, [sl, #2]
   2b39c:	orr	r1, r5, r1, lsl #8
   2b3a0:	ldrb	r2, [sl, #1]
   2b3a4:	orr	r6, r1, r2, lsl #16
   2b3a8:	movw	r1, #25966	; 0x656e
   2b3ac:	movw	r2, #26994	; 0x6972
   2b3b0:	movt	r1, #24428	; 0x5f6c
   2b3b4:	movt	r2, #26721	; 0x6861
   2b3b8:	eor	r0, r0, r1
   2b3bc:	ldrb	r1, [sl]
   2b3c0:	orr	r1, r6, r1, lsl #24
   2b3c4:	eor	r1, r1, r2
   2b3c8:	orrs	r0, r0, r1
   2b3cc:	bne	2b460 <main@@Base+0x15718>
   2b3d0:	add	r4, sl, #8
   2b3d4:	mov	r1, #8
   2b3d8:	sub	r0, r9, r4
   2b3dc:	cmp	r0, #8
   2b3e0:	movcc	r1, r0
   2b3e4:	and	r2, r1, #15
   2b3e8:	sub	r1, r2, #3
   2b3ec:	cmp	r1, #6
   2b3f0:	bcs	2b46c <main@@Base+0x15724>
   2b3f4:	ldrb	r1, [sl, #10]
   2b3f8:	lsl	r1, r1, #8
   2b3fc:	ldrb	r2, [sl, #9]
   2b400:	orr	r1, r1, r2, lsl #16
   2b404:	ldrb	r2, [r4]
   2b408:	bic	r1, r1, #255	; 0xff
   2b40c:	orr	r1, r1, r2, lsl #24
   2b410:	movw	r2, #26624	; 0x6800
   2b414:	movt	r2, #26484	; 0x6774
   2b418:	teq	r1, r2
   2b41c:	bne	2b4e0 <main@@Base+0x15798>
   2b420:	cmp	r0, #4
   2b424:	blt	2b4e0 <main@@Base+0x15798>
   2b428:	ldrb	r0, [sl, #11]
   2b42c:	cmp	r0, #34	; 0x22
   2b430:	bne	2b4e0 <main@@Base+0x15798>
   2b434:	add	r1, sl, #12
   2b438:	sub	r0, r9, r1
   2b43c:	cmp	r0, #2
   2b440:	blt	2b494 <main@@Base+0x1574c>
   2b444:	ldrb	r0, [r1]
   2b448:	cmp	r0, #32
   2b44c:	bls	2b484 <main@@Base+0x1573c>
   2b450:	mov	sl, r1
   2b454:	cmp	sl, r9
   2b458:	bne	2b4ac <main@@Base+0x15764>
   2b45c:	b	2b15c <main@@Base+0x15414>
   2b460:	mov	r0, r8
   2b464:	mov	r1, sl
   2b468:	b	2b4e8 <main@@Base+0x157a0>
   2b46c:	mov	r1, #0
   2b470:	cmp	r2, #1
   2b474:	beq	2b404 <main@@Base+0x156bc>
   2b478:	cmp	r2, #2
   2b47c:	beq	2b3fc <main@@Base+0x156b4>
   2b480:	b	2b4e0 <main@@Base+0x15798>
   2b484:	bne	2b494 <main@@Base+0x1574c>
   2b488:	ldrb	r0, [sl, #13]!
   2b48c:	cmp	r0, #32
   2b490:	bhi	2b4a4 <main@@Base+0x1575c>
   2b494:	mov	r0, r8
   2b498:	mov	r2, r9
   2b49c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2b4a0:	mov	sl, r0
   2b4a4:	cmp	sl, r9
   2b4a8:	beq	2b15c <main@@Base+0x15414>
   2b4ac:	ldrb	r0, [sl]
   2b4b0:	cmp	r0, #58	; 0x3a
   2b4b4:	bne	2b15c <main@@Base+0x15414>
   2b4b8:	add	r1, sl, #1
   2b4bc:	sub	r0, r9, r1
   2b4c0:	cmp	r0, #2
   2b4c4:	blt	2b184 <main@@Base+0x1543c>
   2b4c8:	ldrb	r0, [r1]
   2b4cc:	cmp	r0, #32
   2b4d0:	bls	2b174 <main@@Base+0x1542c>
   2b4d4:	mov	sl, r1
   2b4d8:	cmp	r4, sl
   2b4dc:	bne	2b19c <main@@Base+0x15454>
   2b4e0:	mov	r0, r8
   2b4e4:	mov	r1, r4
   2b4e8:	mov	r2, r9
   2b4ec:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   2b4f0:	mov	r2, r0
   2b4f4:	ldr	r5, [sp, #12]
   2b4f8:	sub	r0, r9, r2
   2b4fc:	cmp	r0, #2
   2b500:	blt	2b574 <main@@Base+0x1582c>
   2b504:	ldrb	r0, [r2]
   2b508:	cmp	r0, #32
   2b50c:	bls	2b560 <main@@Base+0x15818>
   2b510:	mov	r3, r2
   2b514:	cmp	r3, r9
   2b518:	beq	2b590 <main@@Base+0x15848>
   2b51c:	ldrb	r0, [r3]
   2b520:	cmp	r0, #44	; 0x2c
   2b524:	bne	2b598 <main@@Base+0x15850>
   2b528:	add	r1, r3, #1
   2b52c:	sub	r0, r9, r1
   2b530:	cmp	r0, #2
   2b534:	blt	2b140 <main@@Base+0x153f8>
   2b538:	ldrb	r0, [r1]
   2b53c:	cmp	r0, #32
   2b540:	bls	2b130 <main@@Base+0x153e8>
   2b544:	mov	r3, r1
   2b548:	cmp	r3, r9
   2b54c:	beq	2b5d0 <main@@Base+0x15888>
   2b550:	ldrb	r0, [r3]
   2b554:	cmp	r0, #125	; 0x7d
   2b558:	bne	2b2c4 <main@@Base+0x1557c>
   2b55c:	b	2b5a0 <main@@Base+0x15858>
   2b560:	bne	2b574 <main@@Base+0x1582c>
   2b564:	mov	r3, r2
   2b568:	ldrb	r0, [r3, #1]!
   2b56c:	cmp	r0, #32
   2b570:	bhi	2b588 <main@@Base+0x15840>
   2b574:	mov	r1, r2
   2b578:	mov	r0, r8
   2b57c:	mov	r2, r9
   2b580:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2b584:	mov	r3, r0
   2b588:	cmp	r3, r9
   2b58c:	bne	2b51c <main@@Base+0x157d4>
   2b590:	mov	r1, r9
   2b594:	b	2b010 <main@@Base+0x152c8>
   2b598:	cmp	r0, #125	; 0x7d
   2b59c:	bne	2bc54 <main@@Base+0x15f0c>
   2b5a0:	add	r1, r3, #1
   2b5a4:	sub	r0, r9, r1
   2b5a8:	cmp	r0, #2
   2b5ac:	blt	2bc7c <main@@Base+0x15f34>
   2b5b0:	ldrb	r0, [r1]
   2b5b4:	cmp	r0, #32
   2b5b8:	bls	2bc68 <main@@Base+0x15f20>
   2b5bc:	mov	r4, r1
   2b5c0:	cmp	r4, r9
   2b5c4:	mov	r1, r9
   2b5c8:	bne	2aff0 <main@@Base+0x152a8>
   2b5cc:	b	2b010 <main@@Base+0x152c8>
   2b5d0:	mov	r0, r8
   2b5d4:	mov	r1, r9
   2b5d8:	b	2bc5c <main@@Base+0x15f14>
   2b5dc:	bne	2b5ec <main@@Base+0x158a4>
   2b5e0:	ldrb	r0, [r4, #2]!
   2b5e4:	cmp	r0, #32
   2b5e8:	bhi	2b5fc <main@@Base+0x158b4>
   2b5ec:	mov	r0, r8
   2b5f0:	mov	r2, r9
   2b5f4:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2b5f8:	mov	r4, r0
   2b5fc:	cmp	r4, r9
   2b600:	mov	r2, r9
   2b604:	beq	2b648 <main@@Base+0x15900>
   2b608:	ldrb	r0, [r4]
   2b60c:	cmp	r0, #125	; 0x7d
   2b610:	bne	2b644 <main@@Base+0x158fc>
   2b614:	add	r1, r4, #1
   2b618:	sub	r0, r9, r1
   2b61c:	cmp	r0, #2
   2b620:	blt	2bcc4 <main@@Base+0x15f7c>
   2b624:	ldrb	r0, [r1]
   2b628:	cmp	r0, #32
   2b62c:	bhi	2bc20 <main@@Base+0x15ed8>
   2b630:	bne	2bcc4 <main@@Base+0x15f7c>
   2b634:	ldrb	r0, [r4, #2]!
   2b638:	cmp	r0, #32
   2b63c:	bhi	2b030 <main@@Base+0x152e8>
   2b640:	b	2bcc4 <main@@Base+0x15f7c>
   2b644:	mov	r2, r4
   2b648:	movw	r0, #53756	; 0xd1fc
   2b64c:	movt	r0, #5
   2b650:	add	r0, r0, #96	; 0x60
   2b654:	str	r0, [sp, #4]
   2b658:	str	r5, [sp, #12]
   2b65c:	b	2b83c <main@@Base+0x15af4>
   2b660:	bne	2b670 <main@@Base+0x15928>
   2b664:	ldrb	r0, [r2, #2]!
   2b668:	cmp	r0, #32
   2b66c:	bhi	2b680 <main@@Base+0x15938>
   2b670:	mov	r0, r8
   2b674:	mov	r2, r9
   2b678:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2b67c:	mov	r2, r0
   2b680:	cmp	r2, r9
   2b684:	beq	2bc48 <main@@Base+0x15f00>
   2b688:	ldrb	r0, [r2]
   2b68c:	cmp	r0, #125	; 0x7d
   2b690:	bne	2b83c <main@@Base+0x15af4>
   2b694:	b	2bc04 <main@@Base+0x15ebc>
   2b698:	mov	r0, r8
   2b69c:	mov	r1, sl
   2b6a0:	mov	r2, r9
   2b6a4:	mov	r3, #4
   2b6a8:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2b6ac:	b	2b6cc <main@@Base+0x15984>
   2b6b0:	bne	2b6c0 <main@@Base+0x15978>
   2b6b4:	ldrb	r0, [sl, #2]!
   2b6b8:	cmp	r0, #32
   2b6bc:	bhi	2b6d0 <main@@Base+0x15988>
   2b6c0:	mov	r0, r8
   2b6c4:	mov	r2, r9
   2b6c8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2b6cc:	mov	sl, r0
   2b6d0:	cmp	r4, sl
   2b6d4:	beq	2bb44 <main@@Base+0x15dfc>
   2b6d8:	mov	r6, #0
   2b6dc:	cmp	sl, r9
   2b6e0:	str	r6, [sp, #28]
   2b6e4:	str	r6, [sp, #24]
   2b6e8:	str	r6, [sp, #16]
   2b6ec:	str	r6, [sp, #20]
   2b6f0:	beq	2b750 <main@@Base+0x15a08>
   2b6f4:	add	r0, sp, #24
   2b6f8:	mov	r1, sl
   2b6fc:	mov	r2, r9
   2b700:	add	r3, sp, #20
   2b704:	str	r0, [sp]
   2b708:	mov	r0, r8
   2b70c:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   2b710:	cmp	r0, sl
   2b714:	beq	2b760 <main@@Base+0x15a18>
   2b718:	ldr	r2, [sp, #20]
   2b71c:	mov	r4, r0
   2b720:	ldr	r0, [sp, #24]
   2b724:	ldr	r1, [sp, #28]
   2b728:	cmp	r2, #0
   2b72c:	beq	2b770 <main@@Base+0x15a28>
   2b730:	subs	r2, r0, #-2147483647	; 0x80000001
   2b734:	sbcs	r1, r1, #0
   2b738:	bcc	2b7a0 <main@@Base+0x15a58>
   2b73c:	mov	r0, r8
   2b740:	mov	r1, r4
   2b744:	mov	r2, r9
   2b748:	mov	r3, #8
   2b74c:	b	2b78c <main@@Base+0x15a44>
   2b750:	mov	r4, r9
   2b754:	cmp	sl, r4
   2b758:	bne	2b7f4 <main@@Base+0x15aac>
   2b75c:	b	2b7c4 <main@@Base+0x15a7c>
   2b760:	mov	r4, sl
   2b764:	cmp	sl, r4
   2b768:	bne	2b7f4 <main@@Base+0x15aac>
   2b76c:	b	2b7c4 <main@@Base+0x15a7c>
   2b770:	subs	r2, r0, #-2147483648	; 0x80000000
   2b774:	sbcs	r1, r1, #0
   2b778:	bcc	2b7b4 <main@@Base+0x15a6c>
   2b77c:	mov	r0, r8
   2b780:	mov	r1, r4
   2b784:	mov	r2, r9
   2b788:	mov	r3, #7
   2b78c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2b790:	mov	r4, r0
   2b794:	cmp	sl, r4
   2b798:	bne	2b7f4 <main@@Base+0x15aac>
   2b79c:	b	2b7c4 <main@@Base+0x15a7c>
   2b7a0:	rsb	r6, r0, #0
   2b7a4:	str	r6, [sp, #16]
   2b7a8:	cmp	sl, r4
   2b7ac:	bne	2b7f4 <main@@Base+0x15aac>
   2b7b0:	b	2b7c4 <main@@Base+0x15a7c>
   2b7b4:	mov	r6, r0
   2b7b8:	str	r6, [sp, #16]
   2b7bc:	cmp	sl, r4
   2b7c0:	bne	2b7f4 <main@@Base+0x15aac>
   2b7c4:	add	r0, sp, #16
   2b7c8:	mov	r1, sl
   2b7cc:	mov	r2, r9
   2b7d0:	str	r0, [sp]
   2b7d4:	mov	r0, r8
   2b7d8:	ldr	r3, [sp, #4]
   2b7dc:	bl	24450 <main@@Base+0xe708>
   2b7e0:	mov	r4, r0
   2b7e4:	cmp	r0, sl
   2b7e8:	cmpne	r4, r9
   2b7ec:	beq	2bd00 <main@@Base+0x15fb8>
   2b7f0:	ldr	r6, [sp, #16]
   2b7f4:	ldr	r5, [sp, #12]
   2b7f8:	cmp	r6, #0
   2b7fc:	bne	2b80c <main@@Base+0x15ac4>
   2b800:	ldrb	r0, [r8, #8]
   2b804:	tst	r0, #2
   2b808:	beq	2bb5c <main@@Base+0x15e14>
   2b80c:	ldr	r0, [r8]
   2b810:	mov	r1, #0
   2b814:	mov	r2, #4
   2b818:	mov	r3, #4
   2b81c:	bl	31040 <flatcc_builder_table_add@@Base>
   2b820:	cmp	r0, #0
   2b824:	beq	2bd00 <main@@Base+0x15fb8>
   2b828:	str	r6, [r0]
   2b82c:	sub	r0, r9, r4
   2b830:	cmp	r0, #2
   2b834:	bge	2bb68 <main@@Base+0x15e20>
   2b838:	b	2bbcc <main@@Base+0x15e84>
   2b83c:	cmp	r2, r9
   2b840:	mov	sl, r9
   2b844:	beq	2b874 <main@@Base+0x15b2c>
   2b848:	ldrb	r0, [r2]
   2b84c:	cmp	r0, #34	; 0x22
   2b850:	bne	2b85c <main@@Base+0x15b14>
   2b854:	add	sl, r2, #1
   2b858:	b	2b874 <main@@Base+0x15b2c>
   2b85c:	mov	r1, r2
   2b860:	mov	r0, r8
   2b864:	mov	r2, r9
   2b868:	mov	r3, #5
   2b86c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2b870:	mov	sl, r0
   2b874:	sub	r0, r9, sl
   2b878:	mov	r1, #8
   2b87c:	cmp	r0, #8
   2b880:	movcs	r0, r1
   2b884:	and	r0, r0, #15
   2b888:	sub	r3, r0, #1
   2b88c:	cmp	r3, #7
   2b890:	bhi	2babc <main@@Base+0x15d74>
   2b894:	add	r5, pc, #32
   2b898:	mov	r0, #0
   2b89c:	mov	ip, #0
   2b8a0:	mov	lr, #0
   2b8a4:	mov	r4, #0
   2b8a8:	mov	r2, #0
   2b8ac:	mov	r6, #0
   2b8b0:	mov	r7, #0
   2b8b4:	mov	r1, #0
   2b8b8:	ldr	pc, [r5, r3, lsl #2]
   2b8bc:	andeq	fp, r2, r0, lsr #18
   2b8c0:	andeq	fp, r2, r8, lsl r9
   2b8c4:	andeq	fp, r2, r0, lsl r9
   2b8c8:	andeq	fp, r2, r8, lsl #18
   2b8cc:	strdeq	fp, [r2], -ip
   2b8d0:	strdeq	fp, [r2], -r0
   2b8d4:	andeq	fp, r2, r0, ror #17
   2b8d8:	ldrdeq	fp, [r2], -ip
   2b8dc:	ldrb	ip, [sl, #7]
   2b8e0:	ldrb	r1, [sl, #6]
   2b8e4:	mov	lr, r0
   2b8e8:	orr	r1, ip, r1, lsl #8
   2b8ec:	mov	r0, r1
   2b8f0:	ldrb	r1, [sl, #5]
   2b8f4:	mov	r4, lr
   2b8f8:	orr	r0, r0, r1, lsl #16
   2b8fc:	ldrb	r1, [sl, #4]
   2b900:	mov	r2, r4
   2b904:	orr	r0, r0, r1, lsl #24
   2b908:	ldrb	r1, [sl, #3]
   2b90c:	orr	r6, r1, r2
   2b910:	ldrb	r1, [sl, #2]
   2b914:	orr	r7, r6, r1, lsl #8
   2b918:	ldrb	r1, [sl, #1]
   2b91c:	orr	r1, r7, r1, lsl #16
   2b920:	movw	r2, #24948	; 0x6174
   2b924:	movt	r2, #25695	; 0x645f
   2b928:	eor	r0, r0, r2
   2b92c:	ldrb	r2, [sl]
   2b930:	orr	r1, r1, r2, lsl #24
   2b934:	movw	r2, #28530	; 0x6f72
   2b938:	movt	r2, #29559	; 0x7377
   2b93c:	eor	r1, r1, r2
   2b940:	orrs	r0, r0, r1
   2b944:	bne	2babc <main@@Base+0x15d74>
   2b948:	add	r1, sl, #8
   2b94c:	mov	r2, #8
   2b950:	sub	r0, r9, r1
   2b954:	cmp	r0, #8
   2b958:	movcs	r0, r2
   2b95c:	and	r0, r0, #15
   2b960:	sub	r4, r0, #1
   2b964:	cmp	r4, #7
   2b968:	bhi	2bac8 <main@@Base+0x15d80>
   2b96c:	add	ip, pc, #36	; 0x24
   2b970:	mov	r2, #0
   2b974:	mov	r0, #0
   2b978:	mov	lr, #0
   2b97c:	mov	r3, #0
   2b980:	mov	r6, #0
   2b984:	mov	r7, #0
   2b988:	mov	r5, #0
   2b98c:	str	r2, [sp, #8]
   2b990:	mov	r2, #0
   2b994:	ldr	pc, [ip, r4, lsl #2]
   2b998:	andeq	fp, r2, r4, lsl #20
   2b99c:	strdeq	fp, [r2], -ip
   2b9a0:	strdeq	fp, [r2], -r4
   2b9a4:	andeq	fp, r2, ip, ror #19
   2b9a8:	andeq	fp, r2, r0, ror #19
   2b9ac:	ldrdeq	fp, [r2], -r4
   2b9b0:	andeq	fp, r2, r0, asr #19
   2b9b4:			; <UNDEFINED> instruction: 0x0002b9b8
   2b9b8:	ldrb	r2, [sl, #15]
   2b9bc:	str	r2, [sp, #8]
   2b9c0:	ldrb	r2, [sl, #14]
   2b9c4:	ldr	r3, [sp, #8]
   2b9c8:	mov	lr, r0
   2b9cc:	orr	r2, r3, r2, lsl #8
   2b9d0:	mov	r0, r2
   2b9d4:	ldrb	r2, [sl, #13]
   2b9d8:	orr	r0, r0, r2, lsl #16
   2b9dc:	mov	r2, lr
   2b9e0:	ldrb	r3, [sl, #12]
   2b9e4:	orr	r0, r0, r3, lsl #24
   2b9e8:	mov	r3, r2
   2b9ec:	ldrb	r2, [sl, #11]
   2b9f0:	orr	r6, r2, r3
   2b9f4:	ldrb	r2, [sl, #10]
   2b9f8:	orr	r7, r6, r2, lsl #8
   2b9fc:	ldrb	r2, [sl, #9]
   2ba00:	orr	r5, r7, r2, lsl #16
   2ba04:	movw	r2, #24941	; 0x616d
   2ba08:	movw	r3, #25451	; 0x636b
   2ba0c:	movt	r2, #24420	; 0x5f64
   2ba10:	movt	r3, #29793	; 0x7461
   2ba14:	eor	r0, r0, r2
   2ba18:	ldrb	r2, [r1]
   2ba1c:	orr	r2, r5, r2, lsl #24
   2ba20:	eor	r2, r2, r3
   2ba24:	orrs	r0, r0, r2
   2ba28:	bne	2bac8 <main@@Base+0x15d80>
   2ba2c:	add	r4, sl, #16
   2ba30:	mov	r1, #8
   2ba34:	sub	r0, r9, r4
   2ba38:	cmp	r0, #8
   2ba3c:	movcc	r1, r0
   2ba40:	and	r2, r1, #15
   2ba44:	sub	r1, r2, #3
   2ba48:	cmp	r1, #6
   2ba4c:	bcs	2bad0 <main@@Base+0x15d88>
   2ba50:	ldrb	r1, [sl, #18]
   2ba54:	lsl	r1, r1, #8
   2ba58:	ldrb	r2, [sl, #17]
   2ba5c:	orr	r1, r1, r2, lsl #16
   2ba60:	ldrb	r2, [r4]
   2ba64:	bic	r1, r1, #255	; 0xff
   2ba68:	orr	r1, r1, r2, lsl #24
   2ba6c:	movw	r2, #25856	; 0x6500
   2ba70:	movt	r2, #24935	; 0x6167
   2ba74:	teq	r1, r2
   2ba78:	bne	2bb44 <main@@Base+0x15dfc>
   2ba7c:	cmp	r0, #4
   2ba80:	blt	2bb44 <main@@Base+0x15dfc>
   2ba84:	ldrb	r0, [sl, #19]
   2ba88:	cmp	r0, #34	; 0x22
   2ba8c:	bne	2bb44 <main@@Base+0x15dfc>
   2ba90:	add	r1, sl, #20
   2ba94:	sub	r0, r9, r1
   2ba98:	cmp	r0, #2
   2ba9c:	blt	2baf8 <main@@Base+0x15db0>
   2baa0:	ldrb	r0, [r1]
   2baa4:	cmp	r0, #32
   2baa8:	bls	2bae8 <main@@Base+0x15da0>
   2baac:	mov	sl, r1
   2bab0:	cmp	sl, r9
   2bab4:	bne	2bb10 <main@@Base+0x15dc8>
   2bab8:	b	2b698 <main@@Base+0x15950>
   2babc:	mov	r0, r8
   2bac0:	mov	r1, sl
   2bac4:	b	2bb4c <main@@Base+0x15e04>
   2bac8:	mov	r0, r8
   2bacc:	b	2bb4c <main@@Base+0x15e04>
   2bad0:	mov	r1, #0
   2bad4:	cmp	r2, #1
   2bad8:	beq	2ba60 <main@@Base+0x15d18>
   2badc:	cmp	r2, #2
   2bae0:	beq	2ba58 <main@@Base+0x15d10>
   2bae4:	b	2bb44 <main@@Base+0x15dfc>
   2bae8:	bne	2baf8 <main@@Base+0x15db0>
   2baec:	ldrb	r0, [sl, #21]!
   2baf0:	cmp	r0, #32
   2baf4:	bhi	2bb08 <main@@Base+0x15dc0>
   2baf8:	mov	r0, r8
   2bafc:	mov	r2, r9
   2bb00:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2bb04:	mov	sl, r0
   2bb08:	cmp	sl, r9
   2bb0c:	beq	2b698 <main@@Base+0x15950>
   2bb10:	ldrb	r0, [sl]
   2bb14:	cmp	r0, #58	; 0x3a
   2bb18:	bne	2b698 <main@@Base+0x15950>
   2bb1c:	add	r1, sl, #1
   2bb20:	sub	r0, r9, r1
   2bb24:	cmp	r0, #2
   2bb28:	blt	2b6c0 <main@@Base+0x15978>
   2bb2c:	ldrb	r0, [r1]
   2bb30:	cmp	r0, #32
   2bb34:	bls	2b6b0 <main@@Base+0x15968>
   2bb38:	mov	sl, r1
   2bb3c:	cmp	r4, sl
   2bb40:	bne	2b6d8 <main@@Base+0x15990>
   2bb44:	mov	r0, r8
   2bb48:	mov	r1, r4
   2bb4c:	mov	r2, r9
   2bb50:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   2bb54:	ldr	r5, [sp, #12]
   2bb58:	mov	r4, r0
   2bb5c:	sub	r0, r9, r4
   2bb60:	cmp	r0, #2
   2bb64:	blt	2bbcc <main@@Base+0x15e84>
   2bb68:	ldrb	r0, [r4]
   2bb6c:	cmp	r0, #32
   2bb70:	bls	2bbb8 <main@@Base+0x15e70>
   2bb74:	mov	r2, r4
   2bb78:	cmp	r2, r9
   2bb7c:	beq	2bbe8 <main@@Base+0x15ea0>
   2bb80:	ldrb	r0, [r2]
   2bb84:	cmp	r0, #44	; 0x2c
   2bb88:	bne	2bbfc <main@@Base+0x15eb4>
   2bb8c:	add	r1, r2, #1
   2bb90:	sub	r0, r9, r1
   2bb94:	cmp	r0, #2
   2bb98:	blt	2b670 <main@@Base+0x15928>
   2bb9c:	ldrb	r0, [r1]
   2bba0:	cmp	r0, #32
   2bba4:	bls	2b660 <main@@Base+0x15918>
   2bba8:	mov	r2, r1
   2bbac:	cmp	r2, r9
   2bbb0:	bne	2b688 <main@@Base+0x15940>
   2bbb4:	b	2bc48 <main@@Base+0x15f00>
   2bbb8:	bne	2bbcc <main@@Base+0x15e84>
   2bbbc:	mov	r2, r4
   2bbc0:	ldrb	r0, [r2, #1]!
   2bbc4:	cmp	r0, #32
   2bbc8:	bhi	2bbe0 <main@@Base+0x15e98>
   2bbcc:	mov	r0, r8
   2bbd0:	mov	r1, r4
   2bbd4:	mov	r2, r9
   2bbd8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2bbdc:	mov	r2, r0
   2bbe0:	cmp	r2, r9
   2bbe4:	bne	2bb80 <main@@Base+0x15e38>
   2bbe8:	mov	r4, r9
   2bbec:	ldr	r0, [r8, #20]
   2bbf0:	cmp	r0, #0
   2bbf4:	bne	2b03c <main@@Base+0x152f4>
   2bbf8:	b	2bc30 <main@@Base+0x15ee8>
   2bbfc:	cmp	r0, #125	; 0x7d
   2bc00:	bne	2bc9c <main@@Base+0x15f54>
   2bc04:	add	r1, r2, #1
   2bc08:	sub	r0, r9, r1
   2bc0c:	cmp	r0, #2
   2bc10:	blt	2bcc4 <main@@Base+0x15f7c>
   2bc14:	ldrb	r0, [r1]
   2bc18:	cmp	r0, #32
   2bc1c:	bls	2bcb0 <main@@Base+0x15f68>
   2bc20:	mov	r4, r1
   2bc24:	ldr	r0, [r8, #20]
   2bc28:	cmp	r0, #0
   2bc2c:	bne	2b03c <main@@Base+0x152f4>
   2bc30:	ldr	r0, [r8]
   2bc34:	bl	30680 <flatcc_builder_end_table@@Base>
   2bc38:	cmp	r0, #0
   2bc3c:	str	r0, [r5]
   2bc40:	bne	2b054 <main@@Base+0x1530c>
   2bc44:	b	2b03c <main@@Base+0x152f4>
   2bc48:	mov	r0, r8
   2bc4c:	mov	r1, r9
   2bc50:	b	2bca4 <main@@Base+0x15f5c>
   2bc54:	mov	r0, r8
   2bc58:	mov	r1, r3
   2bc5c:	mov	r2, r9
   2bc60:	mov	r3, #10
   2bc64:	b	2afdc <main@@Base+0x15294>
   2bc68:	bne	2bc7c <main@@Base+0x15f34>
   2bc6c:	ldrb	r0, [r3, #2]!
   2bc70:	cmp	r0, #32
   2bc74:	mov	r4, r3
   2bc78:	bhi	2afe4 <main@@Base+0x1529c>
   2bc7c:	mov	r0, r8
   2bc80:	mov	r2, r9
   2bc84:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2bc88:	mov	r4, r0
   2bc8c:	cmp	r4, r9
   2bc90:	mov	r1, r9
   2bc94:	bne	2aff0 <main@@Base+0x152a8>
   2bc98:	b	2b010 <main@@Base+0x152c8>
   2bc9c:	mov	r0, r8
   2bca0:	mov	r1, r2
   2bca4:	mov	r2, r9
   2bca8:	mov	r3, #10
   2bcac:	b	2b028 <main@@Base+0x152e0>
   2bcb0:	bne	2bcc4 <main@@Base+0x15f7c>
   2bcb4:	ldrb	r0, [r2, #2]!
   2bcb8:	cmp	r0, #32
   2bcbc:	mov	r4, r2
   2bcc0:	bhi	2b030 <main@@Base+0x152e8>
   2bcc4:	mov	r0, r8
   2bcc8:	mov	r2, r9
   2bccc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2bcd0:	b	2b02c <main@@Base+0x152e4>
   2bcd4:	mov	r1, r2
   2bcd8:	mov	r0, r8
   2bcdc:	mov	r2, r9
   2bce0:	mov	r3, #33	; 0x21
   2bce4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2bce8:	ldr	r5, [sp, #12]
   2bcec:	mov	r4, r0
   2bcf0:	cmp	r4, r9
   2bcf4:	mov	r1, r9
   2bcf8:	bne	2aff0 <main@@Base+0x152a8>
   2bcfc:	b	2b010 <main@@Base+0x152c8>
   2bd00:	ldr	r5, [sp, #12]
   2bd04:	b	2b03c <main@@Base+0x152f4>
   2bd08:	add	r0, r0, #1
   2bd0c:	uxtb	r1, r0
   2bd10:	cmp	r1, #12
   2bd14:	movhi	r0, #0
   2bd18:	bxhi	lr
   2bd1c:	movw	r1, #37408	; 0x9220
   2bd20:	sxtb	r0, r0
   2bd24:	movt	r1, #4
   2bd28:	ldr	r0, [r1, r0, lsl #2]
   2bd2c:	bx	lr
   2bd30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bd34:	add	fp, sp, #28
   2bd38:	sub	sp, sp, #36	; 0x24
   2bd3c:	mov	r5, r0
   2bd40:	mov	r0, #0
   2bd44:	mov	sl, r2
   2bd48:	mov	r4, r1
   2bd4c:	mov	r1, #4
   2bd50:	mov	r2, #4
   2bd54:	str	r3, [sp, #12]
   2bd58:	str	r0, [r3]
   2bd5c:	ldr	r0, [r5]
   2bd60:	bl	2e9f8 <flatcc_builder_start_struct@@Base>
   2bd64:	cmp	r0, #0
   2bd68:	beq	2be38 <main@@Base+0x160f0>
   2bd6c:	cmp	r4, sl
   2bd70:	beq	2bdec <main@@Base+0x160a4>
   2bd74:	ldrb	r1, [r4]
   2bd78:	cmp	r1, #123	; 0x7b
   2bd7c:	bne	2bdec <main@@Base+0x160a4>
   2bd80:	add	r1, r4, #1
   2bd84:	str	r0, [sp, #8]
   2bd88:	sub	r0, sl, r1
   2bd8c:	cmp	r0, #2
   2bd90:	blt	2be74 <main@@Base+0x1612c>
   2bd94:	ldrb	r0, [r1]
   2bd98:	cmp	r0, #32
   2bd9c:	bls	2be64 <main@@Base+0x1611c>
   2bda0:	mov	r4, r1
   2bda4:	cmp	r4, sl
   2bda8:	mov	r3, sl
   2bdac:	beq	2c04c <main@@Base+0x16304>
   2bdb0:	ldrb	r0, [r4]
   2bdb4:	cmp	r0, #125	; 0x7d
   2bdb8:	bne	2be5c <main@@Base+0x16114>
   2bdbc:	add	r1, r4, #1
   2bdc0:	sub	r0, sl, r1
   2bdc4:	cmp	r0, #2
   2bdc8:	blt	2c388 <main@@Base+0x16640>
   2bdcc:	ldrb	r0, [r1]
   2bdd0:	cmp	r0, #32
   2bdd4:	bhi	2c340 <main@@Base+0x165f8>
   2bdd8:	bne	2c388 <main@@Base+0x16640>
   2bddc:	ldrb	r0, [r4, #2]!
   2bde0:	cmp	r0, #32
   2bde4:	bhi	2be04 <main@@Base+0x160bc>
   2bde8:	b	2c388 <main@@Base+0x16640>
   2bdec:	mov	r0, r5
   2bdf0:	mov	r1, r4
   2bdf4:	mov	r2, sl
   2bdf8:	mov	r3, #21
   2bdfc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2be00:	mov	r4, r0
   2be04:	cmp	r4, sl
   2be08:	mov	r1, sl
   2be0c:	beq	2be3c <main@@Base+0x160f4>
   2be10:	ldr	r0, [r5]
   2be14:	bl	2eaec <flatcc_builder_end_struct@@Base>
   2be18:	ldr	r1, [sp, #12]
   2be1c:	cmp	r0, #0
   2be20:	str	r0, [r1]
   2be24:	mov	r1, r4
   2be28:	beq	2be3c <main@@Base+0x160f4>
   2be2c:	mov	r0, r4
   2be30:	sub	sp, fp, #28
   2be34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2be38:	mov	r1, r4
   2be3c:	mov	r0, r5
   2be40:	mov	r2, sl
   2be44:	mov	r3, #33	; 0x21
   2be48:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2be4c:	mov	r4, r0
   2be50:	mov	r0, r4
   2be54:	sub	sp, fp, #28
   2be58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2be5c:	mov	r3, r4
   2be60:	b	2c04c <main@@Base+0x16304>
   2be64:	bne	2be74 <main@@Base+0x1612c>
   2be68:	ldrb	r0, [r4, #2]!
   2be6c:	cmp	r0, #32
   2be70:	bhi	2be84 <main@@Base+0x1613c>
   2be74:	mov	r0, r5
   2be78:	mov	r2, sl
   2be7c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2be80:	mov	r4, r0
   2be84:	cmp	r4, sl
   2be88:	mov	r3, sl
   2be8c:	bne	2bdb0 <main@@Base+0x16068>
   2be90:	b	2c04c <main@@Base+0x16304>
   2be94:	bne	2bea4 <main@@Base+0x1615c>
   2be98:	ldrb	r0, [r3, #2]!
   2be9c:	cmp	r0, #32
   2bea0:	bhi	2beb4 <main@@Base+0x1616c>
   2bea4:	mov	r0, r5
   2bea8:	mov	r2, sl
   2beac:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2beb0:	mov	r3, r0
   2beb4:	cmp	r3, sl
   2beb8:	bne	2c2d4 <main@@Base+0x1658c>
   2bebc:	b	2c354 <main@@Base+0x1660c>
   2bec0:	mov	r0, r5
   2bec4:	mov	r1, r9
   2bec8:	mov	r2, sl
   2becc:	mov	r3, #4
   2bed0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2bed4:	b	2bef4 <main@@Base+0x161ac>
   2bed8:	bne	2bee8 <main@@Base+0x161a0>
   2bedc:	ldrb	r0, [r9, #2]!
   2bee0:	cmp	r0, #32
   2bee4:	bhi	2bef8 <main@@Base+0x161b0>
   2bee8:	mov	r0, r5
   2beec:	mov	r2, sl
   2bef0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2bef4:	mov	r9, r0
   2bef8:	cmp	r8, r9
   2befc:	beq	2c268 <main@@Base+0x16520>
   2bf00:	mov	r8, #0
   2bf04:	cmp	r9, sl
   2bf08:	str	r8, [sp, #28]
   2bf0c:	str	r8, [sp, #24]
   2bf10:	str	r8, [sp, #16]
   2bf14:	str	r8, [sp, #20]
   2bf18:	beq	2bf78 <main@@Base+0x16230>
   2bf1c:	add	r0, sp, #24
   2bf20:	mov	r1, r9
   2bf24:	mov	r2, sl
   2bf28:	add	r3, sp, #20
   2bf2c:	str	r0, [sp]
   2bf30:	mov	r0, r5
   2bf34:	bl	36ea4 <flatcc_json_parser_integer@@Base>
   2bf38:	cmp	r0, r9
   2bf3c:	beq	2bf8c <main@@Base+0x16244>
   2bf40:	ldr	r3, [sp, #20]
   2bf44:	mov	r2, r0
   2bf48:	ldr	r0, [sp, #24]
   2bf4c:	ldr	r1, [sp, #28]
   2bf50:	cmp	r3, #0
   2bf54:	beq	2bfa0 <main@@Base+0x16258>
   2bf58:	subs	r3, r0, #-2147483647	; 0x80000001
   2bf5c:	sbcs	r1, r1, #0
   2bf60:	bcc	2bfd4 <main@@Base+0x1628c>
   2bf64:	mov	r1, r2
   2bf68:	mov	r0, r5
   2bf6c:	mov	r2, sl
   2bf70:	mov	r3, #8
   2bf74:	b	2bfbc <main@@Base+0x16274>
   2bf78:	ldr	r0, [sp, #8]
   2bf7c:	mov	r2, sl
   2bf80:	cmp	r9, r2
   2bf84:	bne	2c038 <main@@Base+0x162f0>
   2bf88:	b	2c000 <main@@Base+0x162b8>
   2bf8c:	ldr	r0, [sp, #8]
   2bf90:	mov	r2, r9
   2bf94:	cmp	r9, r2
   2bf98:	bne	2c038 <main@@Base+0x162f0>
   2bf9c:	b	2c000 <main@@Base+0x162b8>
   2bfa0:	subs	r3, r0, #-2147483648	; 0x80000000
   2bfa4:	sbcs	r1, r1, #0
   2bfa8:	bcc	2bfec <main@@Base+0x162a4>
   2bfac:	mov	r1, r2
   2bfb0:	mov	r0, r5
   2bfb4:	mov	r2, sl
   2bfb8:	mov	r3, #7
   2bfbc:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2bfc0:	mov	r2, r0
   2bfc4:	ldr	r0, [sp, #8]
   2bfc8:	cmp	r9, r2
   2bfcc:	bne	2c038 <main@@Base+0x162f0>
   2bfd0:	b	2c000 <main@@Base+0x162b8>
   2bfd4:	rsb	r8, r0, #0
   2bfd8:	ldr	r0, [sp, #8]
   2bfdc:	str	r8, [sp, #16]
   2bfe0:	cmp	r9, r2
   2bfe4:	bne	2c038 <main@@Base+0x162f0>
   2bfe8:	b	2c000 <main@@Base+0x162b8>
   2bfec:	mov	r8, r0
   2bff0:	ldr	r0, [sp, #8]
   2bff4:	str	r8, [sp, #16]
   2bff8:	cmp	r9, r2
   2bffc:	bne	2c038 <main@@Base+0x162f0>
   2c000:	movw	r3, #53384	; 0xd088
   2c004:	add	r0, sp, #16
   2c008:	mov	r1, r9
   2c00c:	mov	r2, sl
   2c010:	str	r0, [sp]
   2c014:	mov	r0, r5
   2c018:	movt	r3, #5
   2c01c:	bl	24450 <main@@Base+0xe708>
   2c020:	mov	r2, r0
   2c024:	cmp	r0, r9
   2c028:	cmpne	r2, sl
   2c02c:	beq	2c398 <main@@Base+0x16650>
   2c030:	ldr	r8, [sp, #16]
   2c034:	ldr	r0, [sp, #8]
   2c038:	str	r8, [r0]
   2c03c:	sub	r0, sl, r2
   2c040:	cmp	r0, #2
   2c044:	bge	2c288 <main@@Base+0x16540>
   2c048:	b	2c2f8 <main@@Base+0x165b0>
   2c04c:	cmp	r3, sl
   2c050:	mov	r9, sl
   2c054:	beq	2c084 <main@@Base+0x1633c>
   2c058:	ldrb	r0, [r3]
   2c05c:	cmp	r0, #34	; 0x22
   2c060:	bne	2c06c <main@@Base+0x16324>
   2c064:	add	r9, r3, #1
   2c068:	b	2c084 <main@@Base+0x1633c>
   2c06c:	mov	r1, r3
   2c070:	mov	r0, r5
   2c074:	mov	r2, sl
   2c078:	mov	r3, #5
   2c07c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2c080:	mov	r9, r0
   2c084:	sub	r0, sl, r9
   2c088:	mov	r1, #8
   2c08c:	cmp	r0, #8
   2c090:	movcs	r0, r1
   2c094:	and	r0, r0, #15
   2c098:	sub	r3, r0, #1
   2c09c:	cmp	r3, #7
   2c0a0:	bhi	2c1ec <main@@Base+0x164a4>
   2c0a4:	add	r6, pc, #36	; 0x24
   2c0a8:	mov	r8, r5
   2c0ac:	mov	r0, #0
   2c0b0:	mov	ip, #0
   2c0b4:	mov	lr, #0
   2c0b8:	mov	r7, #0
   2c0bc:	mov	r2, #0
   2c0c0:	mov	r5, #0
   2c0c4:	mov	r4, #0
   2c0c8:	mov	r1, #0
   2c0cc:	ldr	pc, [r6, r3, lsl #2]
   2c0d0:	andeq	ip, r2, r4, lsr r1
   2c0d4:	andeq	ip, r2, ip, lsr #2
   2c0d8:	andeq	ip, r2, r4, lsr #2
   2c0dc:	andeq	ip, r2, ip, lsl r1
   2c0e0:	andeq	ip, r2, r0, lsl r1
   2c0e4:	andeq	ip, r2, r4, lsl #2
   2c0e8:	strdeq	ip, [r2], -r4
   2c0ec:	strdeq	ip, [r2], -r0
   2c0f0:	ldrb	ip, [r9, #7]
   2c0f4:	ldrb	r1, [r9, #6]
   2c0f8:	mov	lr, r0
   2c0fc:	orr	r1, ip, r1, lsl #8
   2c100:	mov	r0, r1
   2c104:	ldrb	r1, [r9, #5]
   2c108:	mov	r7, lr
   2c10c:	orr	r0, r0, r1, lsl #16
   2c110:	ldrb	r1, [r9, #4]
   2c114:	mov	r2, r7
   2c118:	orr	r0, r0, r1, lsl #24
   2c11c:	ldrb	r1, [r9, #3]
   2c120:	orr	r5, r1, r2
   2c124:	ldrb	r1, [r9, #2]
   2c128:	orr	r4, r5, r1, lsl #8
   2c12c:	ldrb	r1, [r9, #1]
   2c130:	orr	r1, r4, r1, lsl #16
   2c134:	movw	r2, #29285	; 0x7265
   2c138:	mov	r5, r8
   2c13c:	movt	r2, #29535	; 0x735f
   2c140:	eor	r0, r0, r2
   2c144:	ldrb	r2, [r9]
   2c148:	orr	r1, r1, r2, lsl #24
   2c14c:	movw	r2, #28523	; 0x6f6b
   2c150:	movt	r2, #25199	; 0x626f
   2c154:	eor	r1, r1, r2
   2c158:	orrs	r0, r0, r1
   2c15c:	bne	2c1ec <main@@Base+0x164a4>
   2c160:	add	r8, r9, #8
   2c164:	mov	r1, #8
   2c168:	sub	r0, sl, r8
   2c16c:	cmp	r0, #8
   2c170:	movcc	r1, r0
   2c174:	and	r2, r1, #15
   2c178:	sub	r1, r2, #2
   2c17c:	cmp	r1, #7
   2c180:	bcs	2c1f8 <main@@Base+0x164b0>
   2c184:	ldrb	r1, [r9, #9]
   2c188:	lsl	r2, r1, #16
   2c18c:	mov	r1, #0
   2c190:	ldrb	r3, [r8]
   2c194:	orr	r2, r2, r3, lsl #24
   2c198:	movw	r3, #0
   2c19c:	movt	r3, #24932	; 0x6164
   2c1a0:	eor	r2, r2, r3
   2c1a4:	orrs	r1, r1, r2
   2c1a8:	bne	2c268 <main@@Base+0x16520>
   2c1ac:	cmp	r0, #3
   2c1b0:	blt	2c268 <main@@Base+0x16520>
   2c1b4:	ldrb	r0, [r9, #10]
   2c1b8:	cmp	r0, #34	; 0x22
   2c1bc:	bne	2c268 <main@@Base+0x16520>
   2c1c0:	add	r1, r9, #11
   2c1c4:	sub	r0, sl, r1
   2c1c8:	cmp	r0, #2
   2c1cc:	blt	2c21c <main@@Base+0x164d4>
   2c1d0:	ldrb	r0, [r1]
   2c1d4:	cmp	r0, #32
   2c1d8:	bls	2c20c <main@@Base+0x164c4>
   2c1dc:	mov	r9, r1
   2c1e0:	cmp	r9, sl
   2c1e4:	bne	2c234 <main@@Base+0x164ec>
   2c1e8:	b	2bec0 <main@@Base+0x16178>
   2c1ec:	mov	r0, r5
   2c1f0:	mov	r1, r9
   2c1f4:	b	2c270 <main@@Base+0x16528>
   2c1f8:	cmp	r2, #1
   2c1fc:	mov	r1, #0
   2c200:	mov	r2, #0
   2c204:	beq	2c190 <main@@Base+0x16448>
   2c208:	b	2c268 <main@@Base+0x16520>
   2c20c:	bne	2c21c <main@@Base+0x164d4>
   2c210:	ldrb	r0, [r9, #12]!
   2c214:	cmp	r0, #32
   2c218:	bhi	2c22c <main@@Base+0x164e4>
   2c21c:	mov	r0, r5
   2c220:	mov	r2, sl
   2c224:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2c228:	mov	r9, r0
   2c22c:	cmp	r9, sl
   2c230:	beq	2bec0 <main@@Base+0x16178>
   2c234:	ldrb	r0, [r9]
   2c238:	cmp	r0, #58	; 0x3a
   2c23c:	bne	2bec0 <main@@Base+0x16178>
   2c240:	add	r1, r9, #1
   2c244:	sub	r0, sl, r1
   2c248:	cmp	r0, #2
   2c24c:	blt	2bee8 <main@@Base+0x161a0>
   2c250:	ldrb	r0, [r1]
   2c254:	cmp	r0, #32
   2c258:	bls	2bed8 <main@@Base+0x16190>
   2c25c:	mov	r9, r1
   2c260:	cmp	r8, r9
   2c264:	bne	2bf00 <main@@Base+0x161b8>
   2c268:	mov	r0, r5
   2c26c:	mov	r1, r8
   2c270:	mov	r2, sl
   2c274:	bl	35044 <flatcc_json_parser_unmatched_symbol@@Base>
   2c278:	mov	r2, r0
   2c27c:	sub	r0, sl, r2
   2c280:	cmp	r0, #2
   2c284:	blt	2c2f8 <main@@Base+0x165b0>
   2c288:	ldrb	r0, [r2]
   2c28c:	cmp	r0, #32
   2c290:	bls	2c2e4 <main@@Base+0x1659c>
   2c294:	mov	r3, r2
   2c298:	cmp	r3, sl
   2c29c:	beq	2c314 <main@@Base+0x165cc>
   2c2a0:	ldrb	r0, [r3]
   2c2a4:	cmp	r0, #44	; 0x2c
   2c2a8:	bne	2c31c <main@@Base+0x165d4>
   2c2ac:	add	r1, r3, #1
   2c2b0:	sub	r0, sl, r1
   2c2b4:	cmp	r0, #2
   2c2b8:	blt	2bea4 <main@@Base+0x1615c>
   2c2bc:	ldrb	r0, [r1]
   2c2c0:	cmp	r0, #32
   2c2c4:	bls	2be94 <main@@Base+0x1614c>
   2c2c8:	mov	r3, r1
   2c2cc:	cmp	r3, sl
   2c2d0:	beq	2c354 <main@@Base+0x1660c>
   2c2d4:	ldrb	r0, [r3]
   2c2d8:	cmp	r0, #125	; 0x7d
   2c2dc:	bne	2c04c <main@@Base+0x16304>
   2c2e0:	b	2c324 <main@@Base+0x165dc>
   2c2e4:	bne	2c2f8 <main@@Base+0x165b0>
   2c2e8:	mov	r3, r2
   2c2ec:	ldrb	r0, [r3, #1]!
   2c2f0:	cmp	r0, #32
   2c2f4:	bhi	2c30c <main@@Base+0x165c4>
   2c2f8:	mov	r1, r2
   2c2fc:	mov	r0, r5
   2c300:	mov	r2, sl
   2c304:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2c308:	mov	r3, r0
   2c30c:	cmp	r3, sl
   2c310:	bne	2c2a0 <main@@Base+0x16558>
   2c314:	mov	r1, sl
   2c318:	b	2be3c <main@@Base+0x160f4>
   2c31c:	cmp	r0, #125	; 0x7d
   2c320:	bne	2c360 <main@@Base+0x16618>
   2c324:	add	r1, r3, #1
   2c328:	sub	r0, sl, r1
   2c32c:	cmp	r0, #2
   2c330:	blt	2c388 <main@@Base+0x16640>
   2c334:	ldrb	r0, [r1]
   2c338:	cmp	r0, #32
   2c33c:	bls	2c374 <main@@Base+0x1662c>
   2c340:	mov	r4, r1
   2c344:	cmp	r4, sl
   2c348:	mov	r1, sl
   2c34c:	bne	2be10 <main@@Base+0x160c8>
   2c350:	b	2be3c <main@@Base+0x160f4>
   2c354:	mov	r0, r5
   2c358:	mov	r1, sl
   2c35c:	b	2c368 <main@@Base+0x16620>
   2c360:	mov	r0, r5
   2c364:	mov	r1, r3
   2c368:	mov	r2, sl
   2c36c:	mov	r3, #10
   2c370:	b	2bdfc <main@@Base+0x160b4>
   2c374:	bne	2c388 <main@@Base+0x16640>
   2c378:	ldrb	r0, [r3, #2]!
   2c37c:	cmp	r0, #32
   2c380:	mov	r4, r3
   2c384:	bhi	2be04 <main@@Base+0x160bc>
   2c388:	mov	r0, r5
   2c38c:	mov	r2, sl
   2c390:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2c394:	b	2be00 <main@@Base+0x160b8>
   2c398:	mov	r1, r2
   2c39c:	mov	r0, r5
   2c3a0:	mov	r2, sl
   2c3a4:	mov	r3, #33	; 0x21
   2c3a8:	b	2bdfc <main@@Base+0x160b4>
   2c3ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c3b0:	add	fp, sp, #28
   2c3b4:	sub	sp, sp, #44	; 0x2c
   2c3b8:	mov	r6, r2
   2c3bc:	ldr	r2, [fp, #8]
   2c3c0:	mov	r5, r0
   2c3c4:	mov	r0, #0
   2c3c8:	mov	sl, r3
   2c3cc:	cmp	r1, r6
   2c3d0:	strh	r0, [r2]
   2c3d4:	beq	2c3e8 <main@@Base+0x166a0>
   2c3d8:	ldrb	r0, [r1]
   2c3dc:	cmp	r0, #34	; 0x22
   2c3e0:	bne	2c410 <main@@Base+0x166c8>
   2c3e4:	add	r1, r1, #1
   2c3e8:	sub	r0, r6, r1
   2c3ec:	cmp	r0, #2
   2c3f0:	blt	2c448 <main@@Base+0x16700>
   2c3f4:	ldrb	r0, [r1]
   2c3f8:	cmp	r0, #32
   2c3fc:	bls	2c434 <main@@Base+0x166ec>
   2c400:	mov	r7, r1
   2c404:	cmp	r7, r6
   2c408:	bne	2c460 <main@@Base+0x16718>
   2c40c:	b	2c570 <main@@Base+0x16828>
   2c410:	mov	r0, r5
   2c414:	mov	r2, r6
   2c418:	mov	r3, #5
   2c41c:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2c420:	mov	r1, r0
   2c424:	sub	r0, r6, r1
   2c428:	cmp	r0, #2
   2c42c:	bge	2c3f4 <main@@Base+0x166ac>
   2c430:	b	2c448 <main@@Base+0x16700>
   2c434:	bne	2c448 <main@@Base+0x16700>
   2c438:	mov	r7, r1
   2c43c:	ldrb	r0, [r7, #1]!
   2c440:	cmp	r0, #32
   2c444:	bhi	2c458 <main@@Base+0x16710>
   2c448:	mov	r0, r5
   2c44c:	mov	r2, r6
   2c450:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   2c454:	mov	r7, r0
   2c458:	cmp	r7, r6
   2c45c:	beq	2c570 <main@@Base+0x16828>
   2c460:	add	r0, sl, #4
   2c464:	mov	r1, #0
   2c468:	add	r8, sp, #32
   2c46c:	add	r9, sp, #28
   2c470:	str	sl, [sp, #16]
   2c474:	str	r1, [sp, #20]
   2c478:	str	r0, [sp, #12]
   2c47c:	ldr	r4, [sl]
   2c480:	mov	sl, r0
   2c484:	add	r0, sp, #24
   2c488:	mov	r1, r7
   2c48c:	mov	r2, r6
   2c490:	mov	r3, r9
   2c494:	str	r8, [sp]
   2c498:	str	r0, [sp, #4]
   2c49c:	mov	r0, r5
   2c4a0:	blx	r4
   2c4a4:	cmp	r0, r6
   2c4a8:	beq	2c580 <main@@Base+0x16838>
   2c4ac:	mov	r4, r0
   2c4b0:	cmp	r0, r7
   2c4b4:	bne	2c4c8 <main@@Base+0x16780>
   2c4b8:	ldr	r4, [sl], #4
   2c4bc:	cmp	r4, #0
   2c4c0:	bne	2c484 <main@@Base+0x1673c>
   2c4c4:	b	2c590 <main@@Base+0x16848>
   2c4c8:	ldr	r0, [sp, #28]
   2c4cc:	cmp	r0, #0
   2c4d0:	beq	2c4f8 <main@@Base+0x167b0>
   2c4d4:	mov	r0, r5
   2c4d8:	mov	r1, r4
   2c4dc:	mov	r2, r6
   2c4e0:	mov	r3, #8
   2c4e4:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2c4e8:	ldr	sl, [sp, #16]
   2c4ec:	cmp	r0, r6
   2c4f0:	bne	2c540 <main@@Base+0x167f8>
   2c4f4:	b	2c5b4 <main@@Base+0x1686c>
   2c4f8:	ldr	r0, [sp, #32]
   2c4fc:	ldr	r1, [sp, #36]	; 0x24
   2c500:	ldr	sl, [sp, #16]
   2c504:	subs	r2, r0, #65536	; 0x10000
   2c508:	sbcs	r1, r1, #0
   2c50c:	bcc	2c530 <main@@Base+0x167e8>
   2c510:	mov	r0, r5
   2c514:	mov	r1, r4
   2c518:	mov	r2, r6
   2c51c:	mov	r3, #7
   2c520:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2c524:	cmp	r0, r6
   2c528:	bne	2c540 <main@@Base+0x167f8>
   2c52c:	b	2c5b4 <main@@Base+0x1686c>
   2c530:	str	r0, [sp, #20]
   2c534:	mov	r0, r4
   2c538:	cmp	r0, r6
   2c53c:	beq	2c5b4 <main@@Base+0x1686c>
   2c540:	ldr	r0, [fp, #8]
   2c544:	ldr	r2, [sp, #20]
   2c548:	mov	r7, r4
   2c54c:	mov	r1, r0
   2c550:	ldrh	r0, [r0]
   2c554:	add	r0, r0, r2
   2c558:	strh	r0, [r1]
   2c55c:	ldr	r0, [sp, #24]
   2c560:	cmp	r0, #0
   2c564:	ldr	r0, [sp, #12]
   2c568:	bne	2c47c <main@@Base+0x16734>
   2c56c:	b	2c574 <main@@Base+0x1682c>
   2c570:	mov	r4, r6
   2c574:	mov	r0, r4
   2c578:	sub	sp, fp, #28
   2c57c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c580:	mov	r4, r6
   2c584:	mov	r0, r4
   2c588:	sub	sp, fp, #28
   2c58c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c590:	mov	r0, r5
   2c594:	mov	r1, r7
   2c598:	mov	r2, r6
   2c59c:	mov	r3, #23
   2c5a0:	bl	347d8 <flatcc_json_parser_set_error@@Base>
   2c5a4:	mov	r4, r0
   2c5a8:	mov	r0, r4
   2c5ac:	sub	sp, fp, #28
   2c5b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c5b4:	mov	r4, r6
   2c5b8:	mov	r0, r4
   2c5bc:	sub	sp, fp, #28
   2c5c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c5c4:	push	{r4, r5, r6, sl, fp, lr}
   2c5c8:	add	fp, sp, #16
   2c5cc:	sub	sp, sp, #16
   2c5d0:	mov	r5, r0
   2c5d4:	movw	r0, #36425	; 0x8e49
   2c5d8:	mov	r4, r1
   2c5dc:	mov	r6, #1
   2c5e0:	mov	r1, #0
   2c5e4:	mov	r3, #0
   2c5e8:	movt	r0, #4
   2c5ec:	mov	r2, r4
   2c5f0:	stm	sp, {r0, r6}
   2c5f4:	mov	r0, r5
   2c5f8:	bl	3cf70 <flatcc_json_printer_float_struct_field@@Base>
   2c5fc:	movw	r0, #46367	; 0xb51f
   2c600:	mov	r1, #1
   2c604:	mov	r2, r4
   2c608:	mov	r3, #4
   2c60c:	movt	r0, #4
   2c610:	stm	sp, {r0, r6}
   2c614:	mov	r0, r5
   2c618:	bl	3cf70 <flatcc_json_printer_float_struct_field@@Base>
   2c61c:	movw	r0, #36866	; 0x9002
   2c620:	mov	r1, #2
   2c624:	mov	r2, r4
   2c628:	mov	r3, #8
   2c62c:	movt	r0, #4
   2c630:	stm	sp, {r0, r6}
   2c634:	mov	r0, r5
   2c638:	bl	3cf70 <flatcc_json_printer_float_struct_field@@Base>
   2c63c:	movw	r0, #36868	; 0x9004
   2c640:	mov	r6, #5
   2c644:	mov	r1, #3
   2c648:	mov	r2, r4
   2c64c:	mov	r3, #16
   2c650:	movt	r0, #4
   2c654:	stm	sp, {r0, r6}
   2c658:	mov	r0, r5
   2c65c:	bl	3cfd4 <flatcc_json_printer_double_struct_field@@Base>
   2c660:	movw	r0, #50880	; 0xc6c0
   2c664:	movw	r1, #36874	; 0x900a
   2c668:	mov	r2, r4
   2c66c:	mov	r3, #24
   2c670:	movt	r1, #4
   2c674:	movt	r0, #2
   2c678:	stm	sp, {r1, r6}
   2c67c:	str	r0, [sp, #8]
   2c680:	mov	r0, r5
   2c684:	mov	r1, #4
   2c688:	bl	3d2d8 <flatcc_json_printer_int8_enum_struct_field@@Base>
   2c68c:	movw	r0, #51312	; 0xc870
   2c690:	movw	r1, #36880	; 0x9010
   2c694:	mov	r2, r4
   2c698:	mov	r3, #26
   2c69c:	movt	r1, #4
   2c6a0:	movt	r0, #2
   2c6a4:	stm	sp, {r1, r6}
   2c6a8:	str	r0, [sp, #8]
   2c6ac:	mov	r0, r5
   2c6b0:	mov	r1, #5
   2c6b4:	bl	44960 <flatcc_json_printer_embedded_struct_field@@Base>
   2c6b8:	sub	sp, fp, #16
   2c6bc:	pop	{r4, r5, r6, sl, fp, pc}
   2c6c0:	push	{r4, r5, r6, r7, fp, lr}
   2c6c4:	add	fp, sp, #16
   2c6c8:	mov	r4, r0
   2c6cc:	mvn	r0, #0
   2c6d0:	uxtb	r7, r1
   2c6d4:	uxtab	r0, r0, r1
   2c6d8:	ands	r5, r0, r7
   2c6dc:	movwne	r5, #1
   2c6e0:	cmp	r1, #0
   2c6e4:	beq	2c728 <main@@Base+0x169e0>
   2c6e8:	ands	r0, r1, #244	; 0xf4
   2c6ec:	bne	2c728 <main@@Base+0x169e0>
   2c6f0:	mov	r0, r4
   2c6f4:	mov	r1, r5
   2c6f8:	bl	3afec <flatcc_json_printer_delimit_enum_flags@@Base>
   2c6fc:	mov	r6, #0
   2c700:	tst	r7, #1
   2c704:	bne	2c734 <main@@Base+0x169ec>
   2c708:	tst	r7, #2
   2c70c:	bne	2c758 <main@@Base+0x16a10>
   2c710:	tst	r7, #8
   2c714:	bne	2c77c <main@@Base+0x16a34>
   2c718:	mov	r0, r4
   2c71c:	mov	r1, r5
   2c720:	pop	{r4, r5, r6, r7, fp, lr}
   2c724:	b	3afec <flatcc_json_printer_delimit_enum_flags@@Base>
   2c728:	mov	r0, r4
   2c72c:	pop	{r4, r5, r6, r7, fp, lr}
   2c730:	b	3acfc <flatcc_json_printer_int8@@Base>
   2c734:	movw	r2, #36886	; 0x9016
   2c738:	mov	r0, r4
   2c73c:	mov	r1, #0
   2c740:	mov	r3, #3
   2c744:	movt	r2, #4
   2c748:	bl	3b020 <flatcc_json_printer_enum_flag@@Base>
   2c74c:	mov	r6, #1
   2c750:	tst	r7, #2
   2c754:	beq	2c710 <main@@Base+0x169c8>
   2c758:	movw	r2, #36890	; 0x901a
   2c75c:	mov	r0, r4
   2c760:	mov	r1, r6
   2c764:	mov	r3, #5
   2c768:	movt	r2, #4
   2c76c:	bl	3b020 <flatcc_json_printer_enum_flag@@Base>
   2c770:	add	r6, r6, #1
   2c774:	tst	r7, #8
   2c778:	beq	2c718 <main@@Base+0x169d0>
   2c77c:	movw	r2, #36896	; 0x9020
   2c780:	mov	r0, r4
   2c784:	mov	r1, r6
   2c788:	mov	r3, #4
   2c78c:	movt	r2, #4
   2c790:	bl	3b020 <flatcc_json_printer_enum_flag@@Base>
   2c794:	mov	r0, r4
   2c798:	mov	r1, r5
   2c79c:	pop	{r4, r5, r6, r7, fp, lr}
   2c7a0:	b	3afec <flatcc_json_printer_delimit_enum_flags@@Base>
   2c7a4:	sub	r1, r1, #1
   2c7a8:	cmp	r1, #3
   2c7ac:	bhi	2c7d8 <main@@Base+0x16a90>
   2c7b0:	add	r2, pc, #0
   2c7b4:	ldr	pc, [r2, r1, lsl #2]
   2c7b8:	andeq	ip, r2, r8, asr #15
   2c7bc:	andeq	ip, r2, r8, ror #15
   2c7c0:	strdeq	ip, [r2], -r8
   2c7c4:	andeq	ip, r2, r8, lsl #16
   2c7c8:	movw	r1, #36901	; 0x9025
   2c7cc:	mov	r2, #7
   2c7d0:	movt	r1, #4
   2c7d4:	b	3af00 <flatcc_json_printer_enum@@Base>
   2c7d8:	movw	r1, #43348	; 0xa954
   2c7dc:	mov	r2, #4
   2c7e0:	movt	r1, #4
   2c7e4:	b	3af00 <flatcc_json_printer_enum@@Base>
   2c7e8:	movw	r1, #36909	; 0x902d
   2c7ec:	mov	r2, #23
   2c7f0:	movt	r1, #4
   2c7f4:	b	3af00 <flatcc_json_printer_enum@@Base>
   2c7f8:	movw	r1, #36933	; 0x9045
   2c7fc:	mov	r2, #8
   2c800:	movt	r1, #4
   2c804:	b	3af00 <flatcc_json_printer_enum@@Base>
   2c808:	movw	r1, #36942	; 0x904e
   2c80c:	mov	r2, #3
   2c810:	movt	r1, #4
   2c814:	b	3af00 <flatcc_json_printer_enum@@Base>
   2c818:	ldrb	r2, [r1, #8]
   2c81c:	sub	r2, r2, #1
   2c820:	cmp	r2, #3
   2c824:	bxhi	lr
   2c828:	add	r3, pc, #0
   2c82c:	ldr	pc, [r3, r2, lsl #2]
   2c830:	andeq	ip, r2, r0, asr #16
   2c834:	andeq	ip, r2, r4, ror #16
   2c838:	andeq	ip, r2, ip, asr #16
   2c83c:	andeq	ip, r2, r8, asr r8
   2c840:	movw	r2, #65356	; 0xff4c
   2c844:	movt	r2, #1
   2c848:	b	446ac <flatcc_json_printer_union_table@@Base>
   2c84c:	movw	r2, #51948	; 0xcaec
   2c850:	movt	r2, #2
   2c854:	b	446ac <flatcc_json_printer_union_table@@Base>
   2c858:	movw	r2, #51952	; 0xcaf0
   2c85c:	movt	r2, #2
   2c860:	b	446ac <flatcc_json_printer_union_table@@Base>
   2c864:	movw	r2, #51784	; 0xca48
   2c868:	movt	r2, #2
   2c86c:	b	446ac <flatcc_json_printer_union_table@@Base>
   2c870:	push	{r4, r5, r6, sl, fp, lr}
   2c874:	add	fp, sp, #16
   2c878:	sub	sp, sp, #8
   2c87c:	mov	r5, r0
   2c880:	movw	r0, #36652	; 0x8f2c
   2c884:	mov	r4, r1
   2c888:	mov	r6, #1
   2c88c:	mov	r1, #0
   2c890:	mov	r3, #0
   2c894:	movt	r0, #4
   2c898:	mov	r2, r4
   2c89c:	stm	sp, {r0, r6}
   2c8a0:	mov	r0, r5
   2c8a4:	bl	3cd74 <flatcc_json_printer_int16_struct_field@@Base>
   2c8a8:	movw	r0, #37067	; 0x90cb
   2c8ac:	mov	r1, #1
   2c8b0:	mov	r2, r4
   2c8b4:	mov	r3, #2
   2c8b8:	movt	r0, #4
   2c8bc:	stm	sp, {r0, r6}
   2c8c0:	mov	r0, r5
   2c8c4:	bl	3cc5c <flatcc_json_printer_int8_struct_field@@Base>
   2c8c8:	sub	sp, fp, #16
   2c8cc:	pop	{r4, r5, r6, sl, fp, pc}
   2c8d0:	push	{r4, r5, r6, sl, fp, lr}
   2c8d4:	add	fp, sp, #16
   2c8d8:	sub	sp, sp, #16
   2c8dc:	movw	r3, #37314	; 0x91c2
   2c8e0:	mov	r5, r0
   2c8e4:	mov	r0, #2
   2c8e8:	mov	r2, #0
   2c8ec:	mov	r4, r1
   2c8f0:	mov	r6, #0
   2c8f4:	str	r0, [sp]
   2c8f8:	movt	r3, #4
   2c8fc:	mov	r0, r5
   2c900:	bl	3b0ec <flatcc_json_printer_string_field@@Base>
   2c904:	movw	r3, #37317	; 0x91c5
   2c908:	mov	r0, #3
   2c90c:	mov	r1, r4
   2c910:	mov	r2, #1
   2c914:	str	r6, [sp, #8]
   2c918:	str	r6, [sp, #12]
   2c91c:	str	r0, [sp]
   2c920:	movt	r3, #4
   2c924:	mov	r0, r5
   2c928:	bl	3bc78 <flatcc_json_printer_int64_field@@Base>
   2c92c:	movw	r3, #39600	; 0x9ab0
   2c930:	mov	r0, #5
   2c934:	mov	r1, r4
   2c938:	mov	r2, #2
   2c93c:	stm	sp, {r0, r6}
   2c940:	movt	r3, #4
   2c944:	mov	r0, r5
   2c948:	bl	3b6e0 <flatcc_json_printer_uint16_field@@Base>
   2c94c:	sub	sp, fp, #16
   2c950:	pop	{r4, r5, r6, sl, fp, pc}
   2c954:	push	{r4, r5, fp, lr}
   2c958:	add	fp, sp, #8
   2c95c:	sub	sp, sp, #8
   2c960:	mov	r4, r1
   2c964:	movw	r1, #37314	; 0x91c2
   2c968:	mov	r5, r0
   2c96c:	mov	r0, #2
   2c970:	mov	r3, #0
   2c974:	movt	r1, #4
   2c978:	str	r0, [sp, #4]
   2c97c:	mov	r0, r5
   2c980:	mov	r2, r4
   2c984:	str	r1, [sp]
   2c988:	mov	r1, #0
   2c98c:	bl	3cba4 <flatcc_json_printer_uint32_struct_field@@Base>
   2c990:	movw	r1, #37321	; 0x91c9
   2c994:	mov	r0, #8
   2c998:	mov	r2, r4
   2c99c:	mov	r3, #4
   2c9a0:	movt	r1, #4
   2c9a4:	str	r0, [sp, #4]
   2c9a8:	mov	r0, r5
   2c9ac:	str	r1, [sp]
   2c9b0:	mov	r1, #1
   2c9b4:	bl	3cba4 <flatcc_json_printer_uint32_struct_field@@Base>
   2c9b8:	sub	sp, fp, #8
   2c9bc:	pop	{r4, r5, fp, pc}
   2c9c0:	bx	lr
   2c9c4:	push	{r4, r5, r6, sl, fp, lr}
   2c9c8:	add	fp, sp, #16
   2c9cc:	sub	sp, sp, #8
   2c9d0:	movw	r3, #37333	; 0x91d5
   2c9d4:	mov	r5, r0
   2c9d8:	mov	r6, #0
   2c9dc:	mov	r0, #4
   2c9e0:	mov	r2, #0
   2c9e4:	mov	r4, r1
   2c9e8:	stm	sp, {r0, r6}
   2c9ec:	movt	r3, #4
   2c9f0:	mov	r0, r5
   2c9f4:	bl	3b37c <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2c9f8:	movw	r3, #37330	; 0x91d2
   2c9fc:	mov	r0, #1
   2ca00:	mov	r1, #7
   2ca04:	mov	r2, #1
   2ca08:	str	r1, [sp]
   2ca0c:	str	r0, [sp, #4]
   2ca10:	movt	r3, #4
   2ca14:	mov	r0, r5
   2ca18:	mov	r1, r4
   2ca1c:	bl	3b37c <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2ca20:	movw	r3, #37338	; 0x91da
   2ca24:	mov	r0, #6
   2ca28:	mov	r1, r4
   2ca2c:	mov	r2, #2
   2ca30:	stm	sp, {r0, r6}
   2ca34:	movt	r3, #4
   2ca38:	mov	r0, r5
   2ca3c:	bl	3b37c <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2ca40:	sub	sp, fp, #16
   2ca44:	pop	{r4, r5, r6, sl, fp, pc}
   2ca48:	push	{r4, r5, r6, r7, fp, lr}
   2ca4c:	add	fp, sp, #16
   2ca50:	sub	sp, sp, #16
   2ca54:	movw	r7, #50880	; 0xc6c0
   2ca58:	movw	r3, #36474	; 0x8e7a
   2ca5c:	mov	r5, r0
   2ca60:	mov	r6, #2
   2ca64:	mov	r0, #5
   2ca68:	mov	r2, #0
   2ca6c:	mov	r4, r1
   2ca70:	movt	r7, #2
   2ca74:	movt	r3, #4
   2ca78:	stm	sp, {r0, r6, r7}
   2ca7c:	mov	r0, r5
   2ca80:	bl	3c450 <flatcc_json_printer_int8_enum_field@@Base>
   2ca84:	movw	r3, #36946	; 0x9052
   2ca88:	mov	r0, #6
   2ca8c:	mov	r1, r4
   2ca90:	mov	r2, #1
   2ca94:	stm	sp, {r0, r6, r7}
   2ca98:	movt	r3, #4
   2ca9c:	mov	r0, r5
   2caa0:	bl	3c450 <flatcc_json_printer_int8_enum_field@@Base>
   2caa4:	movw	r3, #36953	; 0x9059
   2caa8:	mov	r0, r5
   2caac:	mov	r1, r4
   2cab0:	mov	r2, #2
   2cab4:	str	r6, [sp]
   2cab8:	str	r6, [sp, #4]
   2cabc:	movt	r3, #4
   2cac0:	bl	3b588 <flatcc_json_printer_uint8_field@@Base>
   2cac4:	movw	r3, #36956	; 0x905c
   2cac8:	mov	r0, #3
   2cacc:	mov	r1, r4
   2cad0:	mov	r2, #3
   2cad4:	stm	sp, {r0, r6}
   2cad8:	movt	r3, #4
   2cadc:	mov	r0, r5
   2cae0:	bl	3b588 <flatcc_json_printer_uint8_field@@Base>
   2cae4:	sub	sp, fp, #16
   2cae8:	pop	{r4, r5, r6, r7, fp, pc}
   2caec:	bx	lr
   2caf0:	push	{r4, r5, fp, lr}
   2caf4:	add	fp, sp, #8
   2caf8:	sub	sp, sp, #16
   2cafc:	mov	r5, r0
   2cb00:	movw	r0, #52124	; 0xcb9c
   2cb04:	movw	r3, #36960	; 0x9060
   2cb08:	mov	r4, r1
   2cb0c:	mov	r1, #6
   2cb10:	mov	r2, #0
   2cb14:	movt	r0, #2
   2cb18:	str	r1, [sp]
   2cb1c:	movt	r3, #4
   2cb20:	mov	r1, r4
   2cb24:	str	r0, [sp, #4]
   2cb28:	mov	r0, r5
   2cb2c:	bl	43fd0 <flatcc_json_printer_table_field@@Base>
   2cb30:	movw	r0, #52280	; 0xcc38
   2cb34:	movw	r3, #36967	; 0x9067
   2cb38:	mov	r1, #5
   2cb3c:	mov	r2, #1
   2cb40:	movt	r0, #2
   2cb44:	str	r1, [sp]
   2cb48:	movt	r3, #4
   2cb4c:	mov	r1, r4
   2cb50:	str	r0, [sp, #4]
   2cb54:	mov	r0, r5
   2cb58:	bl	43fd0 <flatcc_json_printer_table_field@@Base>
   2cb5c:	movw	r0, #51224	; 0xc818
   2cb60:	movw	r1, #51108	; 0xc7a4
   2cb64:	movw	r3, #36973	; 0x906d
   2cb68:	mov	r2, #7
   2cb6c:	movt	r0, #2
   2cb70:	movt	r1, #2
   2cb74:	str	r2, [sp]
   2cb78:	movt	r3, #4
   2cb7c:	mov	r2, #3
   2cb80:	str	r1, [sp, #4]
   2cb84:	str	r0, [sp, #8]
   2cb88:	mov	r0, r5
   2cb8c:	mov	r1, r4
   2cb90:	bl	43bf8 <flatcc_json_printer_union_vector_field@@Base>
   2cb94:	sub	sp, fp, #8
   2cb98:	pop	{r4, r5, fp, pc}
   2cb9c:	push	{r4, r5, r6, sl, fp, lr}
   2cba0:	add	fp, sp, #16
   2cba4:	sub	sp, sp, #8
   2cba8:	mov	r5, r0
   2cbac:	movw	r0, #52508	; 0xcd1c
   2cbb0:	movw	r3, #36981	; 0x9075
   2cbb4:	mov	r4, r1
   2cbb8:	mov	r1, #21
   2cbbc:	mov	r2, #0
   2cbc0:	movt	r0, #2
   2cbc4:	str	r1, [sp]
   2cbc8:	movt	r3, #4
   2cbcc:	mov	r1, r4
   2cbd0:	str	r0, [sp, #4]
   2cbd4:	mov	r0, r5
   2cbd8:	bl	43fd0 <flatcc_json_printer_table_field@@Base>
   2cbdc:	movw	r0, #52832	; 0xce60
   2cbe0:	movw	r3, #37003	; 0x908b
   2cbe4:	mov	r6, #22
   2cbe8:	mov	r1, r4
   2cbec:	mov	r2, #1
   2cbf0:	movt	r0, #2
   2cbf4:	movt	r3, #4
   2cbf8:	str	r6, [sp]
   2cbfc:	str	r0, [sp, #4]
   2cc00:	mov	r0, r5
   2cc04:	bl	43fd0 <flatcc_json_printer_table_field@@Base>
   2cc08:	movw	r0, #52932	; 0xcec4
   2cc0c:	movw	r3, #37026	; 0x90a2
   2cc10:	mov	r1, r4
   2cc14:	mov	r2, #2
   2cc18:	str	r6, [sp]
   2cc1c:	movt	r0, #2
   2cc20:	movt	r3, #4
   2cc24:	str	r0, [sp, #4]
   2cc28:	mov	r0, r5
   2cc2c:	bl	43fd0 <flatcc_json_printer_table_field@@Base>
   2cc30:	sub	sp, fp, #16
   2cc34:	pop	{r4, r5, r6, sl, fp, pc}
   2cc38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2cc3c:	add	fp, sp, #24
   2cc40:	sub	sp, sp, #16
   2cc44:	movw	r7, #53032	; 0xcf28
   2cc48:	movw	r6, #53212	; 0xcfdc
   2cc4c:	movw	r3, #37176	; 0x9138
   2cc50:	mov	r5, r0
   2cc54:	mov	r0, #14
   2cc58:	mov	r2, #1
   2cc5c:	mov	r4, r1
   2cc60:	movt	r7, #2
   2cc64:	movt	r6, #2
   2cc68:	movt	r3, #4
   2cc6c:	stm	sp, {r0, r7}
   2cc70:	mov	r0, r5
   2cc74:	str	r6, [sp, #8]
   2cc78:	bl	441b8 <flatcc_json_printer_union_field@@Base>
   2cc7c:	movw	r3, #37191	; 0x9147
   2cc80:	mov	r8, #10
   2cc84:	mov	r0, r5
   2cc88:	mov	r1, r4
   2cc8c:	mov	r2, #3
   2cc90:	str	r7, [sp, #4]
   2cc94:	str	r6, [sp, #8]
   2cc98:	movt	r3, #4
   2cc9c:	str	r8, [sp]
   2cca0:	bl	441b8 <flatcc_json_printer_union_field@@Base>
   2cca4:	movw	r3, #37202	; 0x9152
   2cca8:	mov	r0, #9
   2ccac:	mov	r1, r4
   2ccb0:	mov	r2, #5
   2ccb4:	mov	r9, #5
   2ccb8:	stm	sp, {r0, r7}
   2ccbc:	movt	r3, #4
   2ccc0:	mov	r0, r5
   2ccc4:	str	r6, [sp, #8]
   2ccc8:	bl	441b8 <flatcc_json_printer_union_field@@Base>
   2cccc:	movw	r3, #37212	; 0x915c
   2ccd0:	mov	r0, r5
   2ccd4:	mov	r1, r4
   2ccd8:	mov	r2, #7
   2ccdc:	str	r9, [sp]
   2cce0:	str	r7, [sp, #4]
   2cce4:	str	r6, [sp, #8]
   2cce8:	movt	r3, #4
   2ccec:	bl	441b8 <flatcc_json_printer_union_field@@Base>
   2ccf0:	movw	r3, #37218	; 0x9162
   2ccf4:	mov	r0, r5
   2ccf8:	mov	r1, r4
   2ccfc:	mov	r2, #9
   2cd00:	str	r8, [sp]
   2cd04:	str	r7, [sp, #4]
   2cd08:	str	r6, [sp, #8]
   2cd0c:	movt	r3, #4
   2cd10:	bl	43bf8 <flatcc_json_printer_union_vector_field@@Base>
   2cd14:	sub	sp, fp, #24
   2cd18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2cd1c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2cd20:	add	fp, sp, #24
   2cd24:	sub	sp, sp, #16
   2cd28:	movw	r3, #37049	; 0x90b9
   2cd2c:	mov	r9, #4
   2cd30:	mov	r2, #0
   2cd34:	mov	r4, r1
   2cd38:	mov	r5, r0
   2cd3c:	mov	r6, #0
   2cd40:	movt	r3, #4
   2cd44:	str	r9, [sp]
   2cd48:	bl	3b0ec <flatcc_json_printer_string_field@@Base>
   2cd4c:	movw	r3, #37054	; 0x90be
   2cd50:	mov	r8, #9
   2cd54:	mov	r0, r5
   2cd58:	mov	r1, r4
   2cd5c:	mov	r2, #1
   2cd60:	str	r6, [sp, #4]
   2cd64:	movt	r3, #4
   2cd68:	str	r8, [sp]
   2cd6c:	bl	3b7a0 <flatcc_json_printer_uint32_field@@Base>
   2cd70:	movw	r3, #37064	; 0x90c8
   2cd74:	mov	r0, r5
   2cd78:	mov	r1, r4
   2cd7c:	mov	r2, #2
   2cd80:	str	r9, [sp]
   2cd84:	movt	r3, #4
   2cd88:	bl	3b0ec <flatcc_json_printer_string_field@@Base>
   2cd8c:	movw	r3, #37069	; 0x90cd
   2cd90:	mov	r7, #8
   2cd94:	mov	r0, r5
   2cd98:	mov	r1, r4
   2cd9c:	mov	r2, #3
   2cda0:	str	r6, [sp, #8]
   2cda4:	str	r6, [sp, #12]
   2cda8:	movt	r3, #4
   2cdac:	str	r7, [sp]
   2cdb0:	bl	3bc78 <flatcc_json_printer_int64_field@@Base>
   2cdb4:	movw	r3, #37078	; 0x90d6
   2cdb8:	mov	r0, r5
   2cdbc:	mov	r1, r4
   2cdc0:	mov	r2, #4
   2cdc4:	str	r9, [sp]
   2cdc8:	movt	r3, #4
   2cdcc:	bl	3b0ec <flatcc_json_printer_string_field@@Base>
   2cdd0:	movw	r3, #37083	; 0x90db
   2cdd4:	mov	r0, r5
   2cdd8:	mov	r1, r4
   2cddc:	mov	r2, #5
   2cde0:	str	r6, [sp, #8]
   2cde4:	str	r6, [sp, #12]
   2cde8:	str	r7, [sp]
   2cdec:	movt	r3, #4
   2cdf0:	bl	3bc78 <flatcc_json_printer_int64_field@@Base>
   2cdf4:	movw	r3, #37092	; 0x90e4
   2cdf8:	mov	r0, r5
   2cdfc:	mov	r1, r4
   2ce00:	mov	r2, #6
   2ce04:	str	r8, [sp]
   2ce08:	str	r6, [sp, #4]
   2ce0c:	movt	r3, #4
   2ce10:	bl	3b7a0 <flatcc_json_printer_uint32_field@@Base>
   2ce14:	movw	r3, #37102	; 0x90ee
   2ce18:	mov	r0, r5
   2ce1c:	mov	r1, r4
   2ce20:	mov	r2, #7
   2ce24:	str	r6, [sp, #8]
   2ce28:	str	r6, [sp, #12]
   2ce2c:	str	r7, [sp]
   2ce30:	movt	r3, #4
   2ce34:	bl	3bc78 <flatcc_json_printer_int64_field@@Base>
   2ce38:	movw	r3, #37111	; 0x90f7
   2ce3c:	mov	r0, r5
   2ce40:	mov	r1, r4
   2ce44:	mov	r2, #8
   2ce48:	str	r8, [sp]
   2ce4c:	str	r6, [sp, #4]
   2ce50:	movt	r3, #4
   2ce54:	bl	3b7a0 <flatcc_json_printer_uint32_field@@Base>
   2ce58:	sub	sp, fp, #24
   2ce5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ce60:	push	{r4, r5, r6, sl, fp, lr}
   2ce64:	add	fp, sp, #16
   2ce68:	sub	sp, sp, #16
   2ce6c:	movw	r3, #37121	; 0x9101
   2ce70:	mov	r5, r0
   2ce74:	mov	r0, #15
   2ce78:	mov	r6, #0
   2ce7c:	mov	r2, #0
   2ce80:	mov	r4, r1
   2ce84:	str	r0, [sp]
   2ce88:	movt	r3, #4
   2ce8c:	mov	r0, r5
   2ce90:	str	r6, [sp, #8]
   2ce94:	str	r6, [sp, #12]
   2ce98:	bl	3bc78 <flatcc_json_printer_int64_field@@Base>
   2ce9c:	movw	r3, #37137	; 0x9111
   2cea0:	mov	r0, #16
   2cea4:	mov	r1, r4
   2cea8:	mov	r2, #1
   2ceac:	stm	sp, {r0, r6}
   2ceb0:	movt	r3, #4
   2ceb4:	mov	r0, r5
   2ceb8:	bl	3b7a0 <flatcc_json_printer_uint32_field@@Base>
   2cebc:	sub	sp, fp, #16
   2cec0:	pop	{r4, r5, r6, sl, fp, pc}
   2cec4:	push	{r4, r5, r6, sl, fp, lr}
   2cec8:	add	fp, sp, #16
   2cecc:	sub	sp, sp, #16
   2ced0:	movw	r3, #37121	; 0x9101
   2ced4:	mov	r5, r0
   2ced8:	mov	r0, #15
   2cedc:	mov	r6, #0
   2cee0:	mov	r2, #0
   2cee4:	mov	r4, r1
   2cee8:	str	r0, [sp]
   2ceec:	movt	r3, #4
   2cef0:	mov	r0, r5
   2cef4:	str	r6, [sp, #8]
   2cef8:	str	r6, [sp, #12]
   2cefc:	bl	3bc78 <flatcc_json_printer_int64_field@@Base>
   2cf00:	movw	r3, #37154	; 0x9122
   2cf04:	mov	r0, #21
   2cf08:	mov	r1, r4
   2cf0c:	mov	r2, #1
   2cf10:	stm	sp, {r0, r6}
   2cf14:	movt	r3, #4
   2cf18:	mov	r0, r5
   2cf1c:	bl	3b7a0 <flatcc_json_printer_uint32_field@@Base>
   2cf20:	sub	sp, fp, #16
   2cf24:	pop	{r4, r5, r6, sl, fp, pc}
   2cf28:	sub	r2, r1, #2
   2cf2c:	cmp	r2, #9
   2cf30:	bhi	2cf74 <main@@Base+0x1722c>
   2cf34:	add	r1, pc, #0
   2cf38:	ldr	pc, [r1, r2, lsl #2]
   2cf3c:	andeq	ip, r2, r4, ror #30
   2cf40:	andeq	ip, r2, ip, lsl #31
   2cf44:	andeq	ip, r2, ip, lsl #31
   2cf48:	andeq	ip, r2, ip, lsl #31
   2cf4c:	andeq	ip, r2, ip, lsl #31
   2cf50:	andeq	ip, r2, ip, lsl #31
   2cf54:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   2cf58:	andeq	ip, r2, ip, lsr #31
   2cf5c:			; <UNDEFINED> instruction: 0x0002cfbc
   2cf60:	andeq	ip, r2, ip, asr #31
   2cf64:	movw	r1, #37229	; 0x916d
   2cf68:	mov	r2, #5
   2cf6c:	movt	r1, #4
   2cf70:	b	3af00 <flatcc_json_printer_enum@@Base>
   2cf74:	cmp	r1, #255	; 0xff
   2cf78:	bne	2cf8c <main@@Base+0x17244>
   2cf7c:	movw	r1, #37264	; 0x9190
   2cf80:	mov	r2, #6
   2cf84:	movt	r1, #4
   2cf88:	b	3af00 <flatcc_json_printer_enum@@Base>
   2cf8c:	movw	r1, #43348	; 0xa954
   2cf90:	mov	r2, #4
   2cf94:	movt	r1, #4
   2cf98:	b	3af00 <flatcc_json_printer_enum@@Base>
   2cf9c:	movw	r1, #37235	; 0x9173
   2cfa0:	mov	r2, #8
   2cfa4:	movt	r1, #4
   2cfa8:	b	3af00 <flatcc_json_printer_enum@@Base>
   2cfac:	movw	r1, #37244	; 0x917c
   2cfb0:	mov	r2, #5
   2cfb4:	movt	r1, #4
   2cfb8:	b	3af00 <flatcc_json_printer_enum@@Base>
   2cfbc:	movw	r1, #37250	; 0x9182
   2cfc0:	mov	r2, #7
   2cfc4:	movt	r1, #4
   2cfc8:	b	3af00 <flatcc_json_printer_enum@@Base>
   2cfcc:	movw	r1, #37258	; 0x918a
   2cfd0:	mov	r2, #5
   2cfd4:	movt	r1, #4
   2cfd8:	b	3af00 <flatcc_json_printer_enum@@Base>
   2cfdc:	ldrb	r3, [r1, #8]
   2cfe0:	sub	r2, r3, #2
   2cfe4:	cmp	r2, #9
   2cfe8:	bhi	2d028 <main@@Base+0x172e0>
   2cfec:	add	r3, pc, #0
   2cff0:	ldr	pc, [r3, r2, lsl #2]
   2cff4:	andeq	sp, r2, r4, lsr r0
   2cff8:	andeq	sp, r2, ip, asr #32
   2cffc:	andeq	sp, r2, ip, asr #32
   2d000:	andeq	sp, r2, ip, asr #32
   2d004:	andeq	sp, r2, ip, asr #32
   2d008:	andeq	sp, r2, ip, asr #32
   2d00c:	andeq	sp, r2, r0, asr #32
   2d010:	andeq	sp, r2, ip, lsl r0
   2d014:	andeq	sp, r2, ip, lsl r0
   2d018:	andeq	sp, r2, r0, lsr r0
   2d01c:	movw	r2, #53436	; 0xd0bc
   2d020:	movt	r2, #2
   2d024:	b	4482c <flatcc_json_printer_union_struct@@Base>
   2d028:	cmp	r3, #255	; 0xff
   2d02c:	bxne	lr
   2d030:	b	4494c <flatcc_json_printer_union_string@@Base>
   2d034:	movw	r2, #53328	; 0xd050
   2d038:	movt	r2, #2
   2d03c:	b	446ac <flatcc_json_printer_union_table@@Base>
   2d040:	movw	r2, #53380	; 0xd084
   2d044:	movt	r2, #2
   2d048:	b	4482c <flatcc_json_printer_union_struct@@Base>
   2d04c:	bx	lr
   2d050:	push	{fp, lr}
   2d054:	mov	fp, sp
   2d058:	sub	sp, sp, #8
   2d05c:	mov	r3, #19
   2d060:	mov	r2, #0
   2d064:	str	r3, [sp]
   2d068:	movw	r3, #37271	; 0x9197
   2d06c:	str	r2, [sp, #4]
   2d070:	mov	r2, #0
   2d074:	movt	r3, #4
   2d078:	bl	3bba0 <flatcc_json_printer_int32_field@@Base>
   2d07c:	mov	sp, fp
   2d080:	pop	{fp, pc}
   2d084:	push	{fp, lr}
   2d088:	mov	fp, sp
   2d08c:	sub	sp, sp, #8
   2d090:	movw	r3, #37291	; 0x91ab
   2d094:	mov	r2, r1
   2d098:	mov	r1, #11
   2d09c:	movt	r3, #4
   2d0a0:	str	r1, [sp, #4]
   2d0a4:	mov	r1, #0
   2d0a8:	str	r3, [sp]
   2d0ac:	mov	r3, #0
   2d0b0:	bl	3cb48 <flatcc_json_printer_uint16_struct_field@@Base>
   2d0b4:	mov	sp, fp
   2d0b8:	pop	{fp, pc}
   2d0bc:	push	{fp, lr}
   2d0c0:	mov	fp, sp
   2d0c4:	sub	sp, sp, #8
   2d0c8:	movw	r3, #37303	; 0x91b7
   2d0cc:	mov	r2, r1
   2d0d0:	mov	r1, #10
   2d0d4:	movt	r3, #4
   2d0d8:	str	r1, [sp, #4]
   2d0dc:	mov	r1, #0
   2d0e0:	str	r3, [sp]
   2d0e4:	mov	r3, #0
   2d0e8:	bl	3cde8 <flatcc_json_printer_int32_struct_field@@Base>
   2d0ec:	mov	sp, fp
   2d0f0:	pop	{fp, pc}
   2d0f4:	ldrb	r1, [r0, #12]
   2d0f8:	sub	r1, r1, #1
   2d0fc:	uxtb	r2, r1
   2d100:	cmp	r2, #3
   2d104:	movhi	r0, #0
   2d108:	bxhi	lr
   2d10c:	movw	r2, #37460	; 0x9254
   2d110:	sxtb	r1, r1
   2d114:	movt	r2, #4
   2d118:	ldr	r1, [r2, r1, lsl #2]
   2d11c:	b	33174 <flatcc_verify_union_table@@Base>
   2d120:	push	{r4, sl, fp, lr}
   2d124:	add	fp, sp, #8
   2d128:	mov	r1, #0
   2d12c:	mov	r2, #0
   2d130:	mov	r4, r0
   2d134:	bl	32988 <flatcc_verify_string_field@@Base>
   2d138:	cmp	r0, #0
   2d13c:	popne	{r4, sl, fp, pc}
   2d140:	mov	r0, r4
   2d144:	mov	r1, #1
   2d148:	mov	r2, #8
   2d14c:	mov	r3, #8
   2d150:	bl	32904 <flatcc_verify_field@@Base>
   2d154:	cmp	r0, #0
   2d158:	beq	2d160 <main@@Base+0x17418>
   2d15c:	pop	{r4, sl, fp, pc}
   2d160:	mov	r0, r4
   2d164:	mov	r1, #2
   2d168:	mov	r2, #2
   2d16c:	mov	r3, #2
   2d170:	pop	{r4, sl, fp, lr}
   2d174:	b	32904 <flatcc_verify_field@@Base>
   2d178:	mov	r0, #0
   2d17c:	bx	lr
   2d180:	push	{r4, r5, r6, sl, fp, lr}
   2d184:	add	fp, sp, #16
   2d188:	sub	sp, sp, #8
   2d18c:	mvn	r5, #0
   2d190:	mov	r6, #1
   2d194:	mov	r1, #0
   2d198:	mov	r2, #0
   2d19c:	mov	r3, #1
   2d1a0:	mov	r4, r0
   2d1a4:	str	r6, [sp]
   2d1a8:	str	r5, [sp, #4]
   2d1ac:	bl	32a6c <flatcc_verify_vector_field@@Base>
   2d1b0:	cmp	r0, #0
   2d1b4:	bne	2d1dc <main@@Base+0x17494>
   2d1b8:	mov	r0, r4
   2d1bc:	mov	r1, #1
   2d1c0:	mov	r2, #0
   2d1c4:	mov	r3, #1
   2d1c8:	str	r6, [sp]
   2d1cc:	str	r5, [sp, #4]
   2d1d0:	bl	32a6c <flatcc_verify_vector_field@@Base>
   2d1d4:	cmp	r0, #0
   2d1d8:	beq	2d1e4 <main@@Base+0x1749c>
   2d1dc:	sub	sp, fp, #16
   2d1e0:	pop	{r4, r5, r6, sl, fp, pc}
   2d1e4:	movw	r0, #1112	; 0x458
   2d1e8:	mov	r1, #1
   2d1ec:	mov	r2, #0
   2d1f0:	mov	r3, #0
   2d1f4:	movt	r0, #2
   2d1f8:	str	r1, [sp]
   2d1fc:	mov	r1, #2
   2d200:	str	r0, [sp, #4]
   2d204:	mov	r0, r4
   2d208:	bl	33a78 <flatcc_verify_table_as_nested_root@@Base>
   2d20c:	sub	sp, fp, #16
   2d210:	pop	{r4, r5, r6, sl, fp, pc}
   2d214:	push	{r4, sl, fp, lr}
   2d218:	add	fp, sp, #8
   2d21c:	mov	r1, #0
   2d220:	mov	r2, #1
   2d224:	mov	r3, #1
   2d228:	mov	r4, r0
   2d22c:	bl	32904 <flatcc_verify_field@@Base>
   2d230:	cmp	r0, #0
   2d234:	bne	2d270 <main@@Base+0x17528>
   2d238:	mov	r0, r4
   2d23c:	mov	r1, #1
   2d240:	mov	r2, #1
   2d244:	mov	r3, #1
   2d248:	bl	32904 <flatcc_verify_field@@Base>
   2d24c:	cmp	r0, #0
   2d250:	popne	{r4, sl, fp, pc}
   2d254:	mov	r0, r4
   2d258:	mov	r1, #2
   2d25c:	mov	r2, #1
   2d260:	mov	r3, #1
   2d264:	bl	32904 <flatcc_verify_field@@Base>
   2d268:	cmp	r0, #0
   2d26c:	beq	2d274 <main@@Base+0x1752c>
   2d270:	pop	{r4, sl, fp, pc}
   2d274:	mov	r0, r4
   2d278:	mov	r1, #3
   2d27c:	mov	r2, #1
   2d280:	mov	r3, #1
   2d284:	pop	{r4, sl, fp, lr}
   2d288:	b	32904 <flatcc_verify_field@@Base>
   2d28c:	mov	r0, #0
   2d290:	bx	lr
   2d294:	push	{r4, sl, fp, lr}
   2d298:	add	fp, sp, #8
   2d29c:	movw	r3, #54012	; 0xd2fc
   2d2a0:	mov	r1, #0
   2d2a4:	mov	r2, #0
   2d2a8:	mov	r4, r0
   2d2ac:	movt	r3, #2
   2d2b0:	bl	32d08 <flatcc_verify_table_field@@Base>
   2d2b4:	cmp	r0, #0
   2d2b8:	popne	{r4, sl, fp, pc}
   2d2bc:	movw	r3, #54116	; 0xd364
   2d2c0:	mov	r0, r4
   2d2c4:	mov	r1, #1
   2d2c8:	mov	r2, #0
   2d2cc:	movt	r3, #2
   2d2d0:	bl	32d08 <flatcc_verify_table_field@@Base>
   2d2d4:	cmp	r0, #0
   2d2d8:	beq	2d2e0 <main@@Base+0x17598>
   2d2dc:	pop	{r4, sl, fp, pc}
   2d2e0:	movw	r3, #53492	; 0xd0f4
   2d2e4:	mov	r0, r4
   2d2e8:	mov	r1, #3
   2d2ec:	mov	r2, #0
   2d2f0:	movt	r3, #2
   2d2f4:	pop	{r4, sl, fp, lr}
   2d2f8:	b	33f34 <flatcc_verify_union_vector_field@@Base>
   2d2fc:	push	{r4, sl, fp, lr}
   2d300:	add	fp, sp, #8
   2d304:	movw	r3, #54284	; 0xd40c
   2d308:	mov	r1, #0
   2d30c:	mov	r2, #0
   2d310:	mov	r4, r0
   2d314:	movt	r3, #2
   2d318:	bl	32d08 <flatcc_verify_table_field@@Base>
   2d31c:	cmp	r0, #0
   2d320:	popne	{r4, sl, fp, pc}
   2d324:	movw	r3, #54532	; 0xd504
   2d328:	mov	r0, r4
   2d32c:	mov	r1, #1
   2d330:	mov	r2, #0
   2d334:	movt	r3, #2
   2d338:	bl	32d08 <flatcc_verify_table_field@@Base>
   2d33c:	cmp	r0, #0
   2d340:	beq	2d348 <main@@Base+0x17600>
   2d344:	pop	{r4, sl, fp, pc}
   2d348:	movw	r3, #54592	; 0xd540
   2d34c:	mov	r0, r4
   2d350:	mov	r1, #2
   2d354:	mov	r2, #0
   2d358:	movt	r3, #2
   2d35c:	pop	{r4, sl, fp, lr}
   2d360:	b	32d08 <flatcc_verify_table_field@@Base>
   2d364:	push	{r4, sl, fp, lr}
   2d368:	add	fp, sp, #8
   2d36c:	movw	r3, #54652	; 0xd57c
   2d370:	mov	r1, #1
   2d374:	mov	r2, #0
   2d378:	mov	r4, r0
   2d37c:	movt	r3, #2
   2d380:	bl	33db0 <flatcc_verify_union_field@@Base>
   2d384:	cmp	r0, #0
   2d388:	bne	2d3ec <main@@Base+0x176a4>
   2d38c:	movw	r3, #54652	; 0xd57c
   2d390:	mov	r0, r4
   2d394:	mov	r1, #3
   2d398:	mov	r2, #0
   2d39c:	movt	r3, #2
   2d3a0:	bl	33db0 <flatcc_verify_union_field@@Base>
   2d3a4:	cmp	r0, #0
   2d3a8:	bne	2d3ec <main@@Base+0x176a4>
   2d3ac:	movw	r3, #54652	; 0xd57c
   2d3b0:	mov	r0, r4
   2d3b4:	mov	r1, #5
   2d3b8:	mov	r2, #0
   2d3bc:	movt	r3, #2
   2d3c0:	bl	33db0 <flatcc_verify_union_field@@Base>
   2d3c4:	cmp	r0, #0
   2d3c8:	popne	{r4, sl, fp, pc}
   2d3cc:	movw	r3, #54652	; 0xd57c
   2d3d0:	mov	r0, r4
   2d3d4:	mov	r1, #7
   2d3d8:	mov	r2, #0
   2d3dc:	movt	r3, #2
   2d3e0:	bl	33db0 <flatcc_verify_union_field@@Base>
   2d3e4:	cmp	r0, #0
   2d3e8:	beq	2d3f0 <main@@Base+0x176a8>
   2d3ec:	pop	{r4, sl, fp, pc}
   2d3f0:	movw	r3, #54652	; 0xd57c
   2d3f4:	mov	r0, r4
   2d3f8:	mov	r1, #9
   2d3fc:	mov	r2, #0
   2d400:	movt	r3, #2
   2d404:	pop	{r4, sl, fp, lr}
   2d408:	b	33f34 <flatcc_verify_union_vector_field@@Base>
   2d40c:	push	{r4, sl, fp, lr}
   2d410:	add	fp, sp, #8
   2d414:	mov	r1, #0
   2d418:	mov	r2, #0
   2d41c:	mov	r4, r0
   2d420:	bl	32988 <flatcc_verify_string_field@@Base>
   2d424:	cmp	r0, #0
   2d428:	bne	2d4e8 <main@@Base+0x177a0>
   2d42c:	mov	r0, r4
   2d430:	mov	r1, #1
   2d434:	mov	r2, #4
   2d438:	mov	r3, #4
   2d43c:	bl	32904 <flatcc_verify_field@@Base>
   2d440:	cmp	r0, #0
   2d444:	bne	2d4e8 <main@@Base+0x177a0>
   2d448:	mov	r0, r4
   2d44c:	mov	r1, #2
   2d450:	mov	r2, #0
   2d454:	bl	32988 <flatcc_verify_string_field@@Base>
   2d458:	cmp	r0, #0
   2d45c:	bne	2d4e8 <main@@Base+0x177a0>
   2d460:	mov	r0, r4
   2d464:	mov	r1, #3
   2d468:	mov	r2, #8
   2d46c:	mov	r3, #8
   2d470:	bl	32904 <flatcc_verify_field@@Base>
   2d474:	cmp	r0, #0
   2d478:	bne	2d4e8 <main@@Base+0x177a0>
   2d47c:	mov	r0, r4
   2d480:	mov	r1, #4
   2d484:	mov	r2, #0
   2d488:	bl	32988 <flatcc_verify_string_field@@Base>
   2d48c:	cmp	r0, #0
   2d490:	bne	2d4e8 <main@@Base+0x177a0>
   2d494:	mov	r0, r4
   2d498:	mov	r1, #5
   2d49c:	mov	r2, #8
   2d4a0:	mov	r3, #8
   2d4a4:	bl	32904 <flatcc_verify_field@@Base>
   2d4a8:	cmp	r0, #0
   2d4ac:	bne	2d4e8 <main@@Base+0x177a0>
   2d4b0:	mov	r0, r4
   2d4b4:	mov	r1, #6
   2d4b8:	mov	r2, #4
   2d4bc:	mov	r3, #4
   2d4c0:	bl	32904 <flatcc_verify_field@@Base>
   2d4c4:	cmp	r0, #0
   2d4c8:	popne	{r4, sl, fp, pc}
   2d4cc:	mov	r0, r4
   2d4d0:	mov	r1, #7
   2d4d4:	mov	r2, #8
   2d4d8:	mov	r3, #8
   2d4dc:	bl	32904 <flatcc_verify_field@@Base>
   2d4e0:	cmp	r0, #0
   2d4e4:	beq	2d4ec <main@@Base+0x177a4>
   2d4e8:	pop	{r4, sl, fp, pc}
   2d4ec:	mov	r0, r4
   2d4f0:	mov	r1, #8
   2d4f4:	mov	r2, #4
   2d4f8:	mov	r3, #4
   2d4fc:	pop	{r4, sl, fp, lr}
   2d500:	b	32904 <flatcc_verify_field@@Base>
   2d504:	push	{r4, sl, fp, lr}
   2d508:	add	fp, sp, #8
   2d50c:	mov	r1, #0
   2d510:	mov	r2, #8
   2d514:	mov	r3, #8
   2d518:	mov	r4, r0
   2d51c:	bl	32904 <flatcc_verify_field@@Base>
   2d520:	cmp	r0, #0
   2d524:	popne	{r4, sl, fp, pc}
   2d528:	mov	r0, r4
   2d52c:	mov	r1, #1
   2d530:	mov	r2, #4
   2d534:	mov	r3, #4
   2d538:	pop	{r4, sl, fp, lr}
   2d53c:	b	32904 <flatcc_verify_field@@Base>
   2d540:	push	{r4, sl, fp, lr}
   2d544:	add	fp, sp, #8
   2d548:	mov	r1, #0
   2d54c:	mov	r2, #8
   2d550:	mov	r3, #8
   2d554:	mov	r4, r0
   2d558:	bl	32904 <flatcc_verify_field@@Base>
   2d55c:	cmp	r0, #0
   2d560:	popne	{r4, sl, fp, pc}
   2d564:	mov	r0, r4
   2d568:	mov	r1, #1
   2d56c:	mov	r2, #4
   2d570:	mov	r3, #4
   2d574:	pop	{r4, sl, fp, lr}
   2d578:	b	32904 <flatcc_verify_field@@Base>
   2d57c:	ldrb	r2, [r0, #12]
   2d580:	sub	r1, r2, #2
   2d584:	cmp	r1, #9
   2d588:	bhi	2d5c8 <main@@Base+0x17880>
   2d58c:	add	r2, pc, #0
   2d590:	ldr	pc, [r2, r1, lsl #2]
   2d594:	ldrdeq	sp, [r2], -ip
   2d598:	ldrdeq	sp, [r2], -r4
   2d59c:	ldrdeq	sp, [r2], -r4
   2d5a0:	ldrdeq	sp, [r2], -r4
   2d5a4:	ldrdeq	sp, [r2], -r4
   2d5a8:	ldrdeq	sp, [r2], -r4
   2d5ac:	andeq	sp, r2, r8, ror #11
   2d5b0:			; <UNDEFINED> instruction: 0x0002d5bc
   2d5b4:			; <UNDEFINED> instruction: 0x0002d5bc
   2d5b8:	ldrdeq	sp, [r2], -r0
   2d5bc:	mov	r1, #4
   2d5c0:	mov	r2, #4
   2d5c4:	b	3325c <flatcc_verify_union_struct@@Base>
   2d5c8:	cmp	r2, #255	; 0xff
   2d5cc:	bne	2d5d4 <main@@Base+0x1788c>
   2d5d0:	b	332b4 <flatcc_verify_union_string@@Base>
   2d5d4:	mov	r0, #0
   2d5d8:	bx	lr
   2d5dc:	movw	r1, #54772	; 0xd5f4
   2d5e0:	movt	r1, #2
   2d5e4:	b	33174 <flatcc_verify_union_table@@Base>
   2d5e8:	mov	r1, #2
   2d5ec:	mov	r2, #2
   2d5f0:	b	3325c <flatcc_verify_union_struct@@Base>
   2d5f4:	mov	r1, #0
   2d5f8:	mov	r2, #4
   2d5fc:	mov	r3, #4
   2d600:	b	32904 <flatcc_verify_field@@Base>

0002d604 <flatcc_builder_default_alloc@@Base>:
   2d604:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d608:	add	fp, sp, #24
   2d60c:	mov	r4, r1
   2d610:	cmp	r2, #0
   2d614:	beq	2d65c <flatcc_builder_default_alloc@@Base+0x58>
   2d618:	ldr	r0, [fp, #8]
   2d61c:	mov	r8, r3
   2d620:	sub	r1, r0, #1
   2d624:	cmp	r1, #6
   2d628:	bhi	2d688 <flatcc_builder_default_alloc@@Base+0x84>
   2d62c:	add	r3, pc, #4
   2d630:	mov	r0, #256	; 0x100
   2d634:	ldr	pc, [r3, r1, lsl #2]
   2d638:	muleq	r2, ip, r6
   2d63c:	andeq	sp, r2, r8, lsl #13
   2d640:	andeq	sp, r2, r8, lsl #13
   2d644:	andeq	sp, r2, r4, asr r6
   2d648:	muleq	r2, r0, r6
   2d64c:	andeq	sp, r2, r8, lsl #13
   2d650:	muleq	r2, r8, r6
   2d654:	mov	r0, #288	; 0x120
   2d658:	b	2d69c <flatcc_builder_default_alloc@@Base+0x98>
   2d65c:	ldr	r0, [r4]
   2d660:	cmp	r0, #0
   2d664:	moveq	r6, #0
   2d668:	moveq	r0, r6
   2d66c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d670:	bl	14e54 <free@plt>
   2d674:	mov	r6, #0
   2d678:	mov	r0, r6
   2d67c:	str	r6, [r4]
   2d680:	str	r6, [r4, #4]
   2d684:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d688:	mov	r0, #32
   2d68c:	b	2d69c <flatcc_builder_default_alloc@@Base+0x98>
   2d690:	mov	r0, r2
   2d694:	b	2d69c <flatcc_builder_default_alloc@@Base+0x98>
   2d698:	mov	r0, #64	; 0x40
   2d69c:	mov	r7, r0
   2d6a0:	lsl	r0, r0, #1
   2d6a4:	cmp	r7, r2
   2d6a8:	bcc	2d69c <flatcc_builder_default_alloc@@Base+0x98>
   2d6ac:	ldr	r0, [r4, #4]
   2d6b0:	mov	r6, #0
   2d6b4:	cmp	r0, r2
   2d6b8:	lsrcs	r0, r0, #1
   2d6bc:	cmpcs	r0, r7
   2d6c0:	bcs	2d6f8 <flatcc_builder_default_alloc@@Base+0xf4>
   2d6c4:	ldr	r0, [r4]
   2d6c8:	mov	r1, r7
   2d6cc:	bl	14e90 <realloc@plt>
   2d6d0:	cmp	r0, #0
   2d6d4:	mvneq	r6, #0
   2d6d8:	moveq	r0, r6
   2d6dc:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d6e0:	cmp	r8, #0
   2d6e4:	mov	r5, r0
   2d6e8:	ldrne	r1, [r4, #4]
   2d6ec:	cmpne	r7, r1
   2d6f0:	bhi	2d700 <flatcc_builder_default_alloc@@Base+0xfc>
   2d6f4:	stm	r4, {r5, r7}
   2d6f8:	mov	r0, r6
   2d6fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d700:	add	r0, r5, r1
   2d704:	sub	r2, r7, r1
   2d708:	mov	r1, #0
   2d70c:	bl	14ef0 <memset@plt>
   2d710:	b	2d6f4 <flatcc_builder_default_alloc@@Base+0xf0>

0002d714 <flatcc_builder_flush_vtable_cache@@Base>:
   2d714:	push	{r4, r5, fp, lr}
   2d718:	add	fp, sp, #8
   2d71c:	mov	r4, r0
   2d720:	ldr	r0, [r0, #116]	; 0x74
   2d724:	cmp	r0, #0
   2d728:	popeq	{r4, r5, fp, pc}
   2d72c:	ldr	r0, [r4, #92]	; 0x5c
   2d730:	ldr	r2, [r4, #96]	; 0x60
   2d734:	mov	r1, #0
   2d738:	mov	r5, #0
   2d73c:	bl	14ef0 <memset@plt>
   2d740:	mov	r0, #16
   2d744:	str	r5, [r4, #120]	; 0x78
   2d748:	str	r0, [r4, #124]	; 0x7c
   2d74c:	pop	{r4, r5, fp, pc}

0002d750 <flatcc_builder_custom_init@@Base>:
   2d750:	push	{r4, r5, r6, r7, fp, lr}
   2d754:	add	fp, sp, #16
   2d758:	mov	r6, r2
   2d75c:	mov	r7, r1
   2d760:	mov	r1, #0
   2d764:	mov	r2, #232	; 0xe8
   2d768:	mov	r5, r3
   2d76c:	mov	r4, r0
   2d770:	bl	14ef0 <memset@plt>
   2d774:	ldr	r0, [fp, #8]
   2d778:	cmp	r7, #0
   2d77c:	bne	2d794 <flatcc_builder_custom_init@@Base+0x44>
   2d780:	movw	r7, #9392	; 0x24b0
   2d784:	mov	r1, #1
   2d788:	add	r6, r4, #188	; 0xbc
   2d78c:	movt	r7, #3
   2d790:	str	r1, [r4, #184]	; 0xb8
   2d794:	movw	r1, #54788	; 0xd604
   2d798:	cmp	r5, #0
   2d79c:	str	r6, [r4, #36]	; 0x24
   2d7a0:	str	r0, [r4, #40]	; 0x28
   2d7a4:	mov	r0, #0
   2d7a8:	str	r7, [r4, #44]	; 0x2c
   2d7ac:	movt	r1, #2
   2d7b0:	movne	r1, r5
   2d7b4:	str	r1, [r4, #48]	; 0x30
   2d7b8:	pop	{r4, r5, r6, r7, fp, pc}

0002d7bc <flatcc_builder_init@@Base>:
   2d7bc:	push	{r4, r5, fp, lr}
   2d7c0:	add	fp, sp, #8
   2d7c4:	mov	r1, #0
   2d7c8:	mov	r2, #232	; 0xe8
   2d7cc:	mov	r4, r0
   2d7d0:	mov	r5, #0
   2d7d4:	bl	14ef0 <memset@plt>
   2d7d8:	mov	r0, #1
   2d7dc:	movw	r2, #9392	; 0x24b0
   2d7e0:	add	r1, r4, #188	; 0xbc
   2d7e4:	str	r0, [r4, #184]	; 0xb8
   2d7e8:	movw	r0, #54788	; 0xd604
   2d7ec:	movt	r2, #3
   2d7f0:	str	r1, [r4, #36]	; 0x24
   2d7f4:	str	r5, [r4, #40]	; 0x28
   2d7f8:	movt	r0, #2
   2d7fc:	str	r2, [r4, #44]	; 0x2c
   2d800:	str	r0, [r4, #48]	; 0x30
   2d804:	mov	r0, #0
   2d808:	pop	{r4, r5, fp, pc}

0002d80c <flatcc_builder_custom_reset@@Base>:
   2d80c:	push	{r4, r5, r6, sl, fp, lr}
   2d810:	add	fp, sp, #16
   2d814:	sub	sp, sp, #8
   2d818:	mov	r5, r1
   2d81c:	mov	r4, r0
   2d820:	cmp	r2, #0
   2d824:	beq	2d884 <flatcc_builder_custom_reset@@Base+0x78>
   2d828:	mov	r1, r4
   2d82c:	ldr	r0, [r1, #52]!	; 0x34
   2d830:	cmp	r0, #0
   2d834:	beq	2d8b0 <flatcc_builder_custom_reset@@Base+0xa4>
   2d838:	ldr	r0, [r4, #40]	; 0x28
   2d83c:	ldr	r6, [r4, #48]	; 0x30
   2d840:	mov	r2, #0
   2d844:	mov	r3, #1
   2d848:	str	r2, [sp]
   2d84c:	mov	r2, #1
   2d850:	blx	r6
   2d854:	mvn	r6, #0
   2d858:	cmp	r0, #0
   2d85c:	bne	2db64 <flatcc_builder_custom_reset@@Base+0x358>
   2d860:	ldr	r0, [r4, #52]	; 0x34
   2d864:	ldr	r2, [r4, #56]	; 0x38
   2d868:	mov	r1, #0
   2d86c:	bl	14ef0 <memset@plt>
   2d870:	mov	r1, r4
   2d874:	ldr	r0, [r1, #60]!	; 0x3c
   2d878:	cmp	r0, #0
   2d87c:	bne	2d8cc <flatcc_builder_custom_reset@@Base+0xc0>
   2d880:	b	2d918 <flatcc_builder_custom_reset@@Base+0x10c>
   2d884:	ldr	r0, [r4, #52]	; 0x34
   2d888:	ldr	r2, [r4, #56]	; 0x38
   2d88c:	cmp	r0, #0
   2d890:	beq	2d980 <flatcc_builder_custom_reset@@Base+0x174>
   2d894:	mov	r1, #0
   2d898:	bl	14ef0 <memset@plt>
   2d89c:	ldr	r0, [r4, #60]	; 0x3c
   2d8a0:	ldr	r2, [r4, #64]	; 0x40
   2d8a4:	cmp	r0, #0
   2d8a8:	bne	2d998 <flatcc_builder_custom_reset@@Base+0x18c>
   2d8ac:	b	2d9b4 <flatcc_builder_custom_reset@@Base+0x1a8>
   2d8b0:	ldr	r0, [r4, #56]	; 0x38
   2d8b4:	cmp	r0, #0
   2d8b8:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2d8bc:	mov	r1, r4
   2d8c0:	ldr	r0, [r1, #60]!	; 0x3c
   2d8c4:	cmp	r0, #0
   2d8c8:	beq	2d918 <flatcc_builder_custom_reset@@Base+0x10c>
   2d8cc:	ldr	r0, [r4, #40]	; 0x28
   2d8d0:	ldr	r6, [r4, #48]	; 0x30
   2d8d4:	mov	r2, #1
   2d8d8:	mov	r3, #1
   2d8dc:	str	r2, [sp]
   2d8e0:	mov	r2, #1
   2d8e4:	blx	r6
   2d8e8:	mvn	r6, #0
   2d8ec:	cmp	r0, #0
   2d8f0:	bne	2db64 <flatcc_builder_custom_reset@@Base+0x358>
   2d8f4:	ldr	r0, [r4, #60]	; 0x3c
   2d8f8:	ldr	r2, [r4, #64]	; 0x40
   2d8fc:	mov	r1, #0
   2d900:	bl	14ef0 <memset@plt>
   2d904:	mov	r1, r4
   2d908:	ldr	r0, [r1, #68]!	; 0x44
   2d90c:	cmp	r0, #0
   2d910:	bne	2d934 <flatcc_builder_custom_reset@@Base+0x128>
   2d914:	b	2db70 <flatcc_builder_custom_reset@@Base+0x364>
   2d918:	ldr	r0, [r4, #64]	; 0x40
   2d91c:	cmp	r0, #0
   2d920:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2d924:	mov	r1, r4
   2d928:	ldr	r0, [r1, #68]!	; 0x44
   2d92c:	cmp	r0, #0
   2d930:	beq	2db70 <flatcc_builder_custom_reset@@Base+0x364>
   2d934:	ldr	r0, [r4, #40]	; 0x28
   2d938:	ldr	r6, [r4, #48]	; 0x30
   2d93c:	mov	r2, #2
   2d940:	mov	r3, #1
   2d944:	str	r2, [sp]
   2d948:	mov	r2, #1
   2d94c:	blx	r6
   2d950:	mvn	r6, #0
   2d954:	cmp	r0, #0
   2d958:	bne	2db64 <flatcc_builder_custom_reset@@Base+0x358>
   2d95c:	ldr	r0, [r4, #68]	; 0x44
   2d960:	ldr	r2, [r4, #72]	; 0x48
   2d964:	mov	r1, #0
   2d968:	bl	14ef0 <memset@plt>
   2d96c:	mov	r1, r4
   2d970:	ldr	r0, [r1, #76]!	; 0x4c
   2d974:	cmp	r0, #0
   2d978:	bne	2db8c <flatcc_builder_custom_reset@@Base+0x380>
   2d97c:	b	2dbd8 <flatcc_builder_custom_reset@@Base+0x3cc>
   2d980:	cmp	r2, #0
   2d984:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2d988:	ldr	r0, [r4, #60]	; 0x3c
   2d98c:	ldr	r2, [r4, #64]	; 0x40
   2d990:	cmp	r0, #0
   2d994:	beq	2d9b4 <flatcc_builder_custom_reset@@Base+0x1a8>
   2d998:	mov	r1, #0
   2d99c:	bl	14ef0 <memset@plt>
   2d9a0:	ldr	r0, [r4, #68]	; 0x44
   2d9a4:	ldr	r2, [r4, #72]	; 0x48
   2d9a8:	cmp	r0, #0
   2d9ac:	bne	2d9cc <flatcc_builder_custom_reset@@Base+0x1c0>
   2d9b0:	b	2d9e8 <flatcc_builder_custom_reset@@Base+0x1dc>
   2d9b4:	cmp	r2, #0
   2d9b8:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2d9bc:	ldr	r0, [r4, #68]	; 0x44
   2d9c0:	ldr	r2, [r4, #72]	; 0x48
   2d9c4:	cmp	r0, #0
   2d9c8:	beq	2d9e8 <flatcc_builder_custom_reset@@Base+0x1dc>
   2d9cc:	mov	r1, #0
   2d9d0:	bl	14ef0 <memset@plt>
   2d9d4:	ldr	r0, [r4, #76]	; 0x4c
   2d9d8:	ldr	r2, [r4, #80]	; 0x50
   2d9dc:	cmp	r0, #0
   2d9e0:	bne	2da00 <flatcc_builder_custom_reset@@Base+0x1f4>
   2d9e4:	b	2da1c <flatcc_builder_custom_reset@@Base+0x210>
   2d9e8:	cmp	r2, #0
   2d9ec:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2d9f0:	ldr	r0, [r4, #76]	; 0x4c
   2d9f4:	ldr	r2, [r4, #80]	; 0x50
   2d9f8:	cmp	r0, #0
   2d9fc:	beq	2da1c <flatcc_builder_custom_reset@@Base+0x210>
   2da00:	mov	r1, #0
   2da04:	bl	14ef0 <memset@plt>
   2da08:	ldr	r0, [r4, #84]	; 0x54
   2da0c:	ldr	r2, [r4, #88]	; 0x58
   2da10:	cmp	r0, #0
   2da14:	bne	2da34 <flatcc_builder_custom_reset@@Base+0x228>
   2da18:	b	2da50 <flatcc_builder_custom_reset@@Base+0x244>
   2da1c:	cmp	r2, #0
   2da20:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2da24:	ldr	r0, [r4, #84]	; 0x54
   2da28:	ldr	r2, [r4, #88]	; 0x58
   2da2c:	cmp	r0, #0
   2da30:	beq	2da50 <flatcc_builder_custom_reset@@Base+0x244>
   2da34:	mov	r1, #0
   2da38:	bl	14ef0 <memset@plt>
   2da3c:	ldr	r0, [r4, #92]	; 0x5c
   2da40:	ldr	r2, [r4, #96]	; 0x60
   2da44:	cmp	r0, #0
   2da48:	bne	2da68 <flatcc_builder_custom_reset@@Base+0x25c>
   2da4c:	b	2da84 <flatcc_builder_custom_reset@@Base+0x278>
   2da50:	cmp	r2, #0
   2da54:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2da58:	ldr	r0, [r4, #92]	; 0x5c
   2da5c:	ldr	r2, [r4, #96]	; 0x60
   2da60:	cmp	r0, #0
   2da64:	beq	2da84 <flatcc_builder_custom_reset@@Base+0x278>
   2da68:	mov	r1, #0
   2da6c:	bl	14ef0 <memset@plt>
   2da70:	ldr	r0, [r4, #100]	; 0x64
   2da74:	ldr	r2, [r4, #104]	; 0x68
   2da78:	cmp	r0, #0
   2da7c:	bne	2da9c <flatcc_builder_custom_reset@@Base+0x290>
   2da80:	b	2dab8 <flatcc_builder_custom_reset@@Base+0x2ac>
   2da84:	cmp	r2, #0
   2da88:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2da8c:	ldr	r0, [r4, #100]	; 0x64
   2da90:	ldr	r2, [r4, #104]	; 0x68
   2da94:	cmp	r0, #0
   2da98:	beq	2dab8 <flatcc_builder_custom_reset@@Base+0x2ac>
   2da9c:	mov	r1, #0
   2daa0:	bl	14ef0 <memset@plt>
   2daa4:	ldr	r0, [r4, #108]	; 0x6c
   2daa8:	ldr	r2, [r4, #112]	; 0x70
   2daac:	cmp	r0, #0
   2dab0:	bne	2dad0 <flatcc_builder_custom_reset@@Base+0x2c4>
   2dab4:	b	2dadc <flatcc_builder_custom_reset@@Base+0x2d0>
   2dab8:	cmp	r2, #0
   2dabc:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2dac0:	ldr	r0, [r4, #108]	; 0x6c
   2dac4:	ldr	r2, [r4, #112]	; 0x70
   2dac8:	cmp	r0, #0
   2dacc:	beq	2dadc <flatcc_builder_custom_reset@@Base+0x2d0>
   2dad0:	mov	r1, #0
   2dad4:	bl	14ef0 <memset@plt>
   2dad8:	b	2dae4 <flatcc_builder_custom_reset@@Base+0x2d8>
   2dadc:	cmp	r2, #0
   2dae0:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2dae4:	mov	r0, #0
   2dae8:	vmov.i32	q8, #0	; 0x00000000
   2daec:	mov	r6, #0
   2daf0:	str	r0, [r4, #120]	; 0x78
   2daf4:	ldr	r1, [r4, #124]	; 0x7c
   2daf8:	cmp	r1, #0
   2dafc:	movne	r1, #16
   2db00:	strne	r1, [r4, #124]	; 0x7c
   2db04:	add	r1, r4, #148	; 0x94
   2db08:	strh	r0, [r4, #128]	; 0x80
   2db0c:	str	r0, [r4, #136]	; 0x88
   2db10:	str	r0, [r4, #140]	; 0x8c
   2db14:	str	r0, [r4, #32]
   2db18:	cmp	r5, #0
   2db1c:	vst1.32	{d16-d17}, [r1]
   2db20:	ldr	r2, [r4, #60]	; 0x3c
   2db24:	ldr	r1, [r4, #52]	; 0x34
   2db28:	ldr	r3, [r4, #76]	; 0x4c
   2db2c:	str	r2, [r4, #16]
   2db30:	str	r0, [r4, #20]
   2db34:	str	r0, [r4, #24]
   2db38:	movne	r0, #0
   2db3c:	str	r3, [r4]
   2db40:	str	r1, [r4, #4]
   2db44:	strne	r0, [r4, #172]	; 0xac
   2db48:	strne	r0, [r4, #176]	; 0xb0
   2db4c:	strne	r0, [r4, #180]	; 0xb4
   2db50:	ldr	r0, [r4, #184]	; 0xb8
   2db54:	cmp	r0, #0
   2db58:	beq	2db64 <flatcc_builder_custom_reset@@Base+0x358>
   2db5c:	add	r0, r4, #188	; 0xbc
   2db60:	bl	32378 <flatcc_emitter_reset@@Base>
   2db64:	mov	r0, r6
   2db68:	sub	sp, fp, #16
   2db6c:	pop	{r4, r5, r6, sl, fp, pc}
   2db70:	ldr	r0, [r4, #72]	; 0x48
   2db74:	cmp	r0, #0
   2db78:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2db7c:	mov	r1, r4
   2db80:	ldr	r0, [r1, #76]!	; 0x4c
   2db84:	cmp	r0, #0
   2db88:	beq	2dbd8 <flatcc_builder_custom_reset@@Base+0x3cc>
   2db8c:	ldr	r0, [r4, #40]	; 0x28
   2db90:	ldr	r6, [r4, #48]	; 0x30
   2db94:	mov	r2, #3
   2db98:	mov	r3, #1
   2db9c:	str	r2, [sp]
   2dba0:	mov	r2, #1
   2dba4:	blx	r6
   2dba8:	mvn	r6, #0
   2dbac:	cmp	r0, #0
   2dbb0:	bne	2db64 <flatcc_builder_custom_reset@@Base+0x358>
   2dbb4:	ldr	r0, [r4, #76]	; 0x4c
   2dbb8:	ldr	r2, [r4, #80]	; 0x50
   2dbbc:	mov	r1, #0
   2dbc0:	bl	14ef0 <memset@plt>
   2dbc4:	mov	r1, r4
   2dbc8:	ldr	r0, [r1, #84]!	; 0x54
   2dbcc:	cmp	r0, #0
   2dbd0:	bne	2dbf4 <flatcc_builder_custom_reset@@Base+0x3e8>
   2dbd4:	b	2dc40 <flatcc_builder_custom_reset@@Base+0x434>
   2dbd8:	ldr	r0, [r4, #80]	; 0x50
   2dbdc:	cmp	r0, #0
   2dbe0:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2dbe4:	mov	r1, r4
   2dbe8:	ldr	r0, [r1, #84]!	; 0x54
   2dbec:	cmp	r0, #0
   2dbf0:	beq	2dc40 <flatcc_builder_custom_reset@@Base+0x434>
   2dbf4:	ldr	r0, [r4, #40]	; 0x28
   2dbf8:	ldr	r6, [r4, #48]	; 0x30
   2dbfc:	mov	r2, #4
   2dc00:	mov	r3, #1
   2dc04:	str	r2, [sp]
   2dc08:	mov	r2, #1
   2dc0c:	blx	r6
   2dc10:	mvn	r6, #0
   2dc14:	cmp	r0, #0
   2dc18:	bne	2db64 <flatcc_builder_custom_reset@@Base+0x358>
   2dc1c:	ldr	r0, [r4, #84]	; 0x54
   2dc20:	ldr	r2, [r4, #88]	; 0x58
   2dc24:	mov	r1, #0
   2dc28:	bl	14ef0 <memset@plt>
   2dc2c:	ldr	r0, [r4, #92]	; 0x5c
   2dc30:	ldr	r2, [r4, #96]	; 0x60
   2dc34:	cmp	r0, #0
   2dc38:	bne	2dc5c <flatcc_builder_custom_reset@@Base+0x450>
   2dc3c:	b	2dc78 <flatcc_builder_custom_reset@@Base+0x46c>
   2dc40:	ldr	r0, [r4, #88]	; 0x58
   2dc44:	cmp	r0, #0
   2dc48:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2dc4c:	ldr	r0, [r4, #92]	; 0x5c
   2dc50:	ldr	r2, [r4, #96]	; 0x60
   2dc54:	cmp	r0, #0
   2dc58:	beq	2dc78 <flatcc_builder_custom_reset@@Base+0x46c>
   2dc5c:	mov	r1, #0
   2dc60:	bl	14ef0 <memset@plt>
   2dc64:	mov	r1, r4
   2dc68:	ldr	r0, [r1, #100]!	; 0x64
   2dc6c:	cmp	r0, #0
   2dc70:	bne	2dc90 <flatcc_builder_custom_reset@@Base+0x484>
   2dc74:	b	2dcdc <flatcc_builder_custom_reset@@Base+0x4d0>
   2dc78:	cmp	r2, #0
   2dc7c:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2dc80:	mov	r1, r4
   2dc84:	ldr	r0, [r1, #100]!	; 0x64
   2dc88:	cmp	r0, #0
   2dc8c:	beq	2dcdc <flatcc_builder_custom_reset@@Base+0x4d0>
   2dc90:	ldr	r0, [r4, #40]	; 0x28
   2dc94:	ldr	r6, [r4, #48]	; 0x30
   2dc98:	mov	r2, #6
   2dc9c:	mov	r3, #1
   2dca0:	str	r2, [sp]
   2dca4:	mov	r2, #1
   2dca8:	blx	r6
   2dcac:	mvn	r6, #0
   2dcb0:	cmp	r0, #0
   2dcb4:	bne	2db64 <flatcc_builder_custom_reset@@Base+0x358>
   2dcb8:	ldr	r0, [r4, #100]	; 0x64
   2dcbc:	ldr	r2, [r4, #104]	; 0x68
   2dcc0:	mov	r1, #0
   2dcc4:	bl	14ef0 <memset@plt>
   2dcc8:	mov	r1, r4
   2dccc:	ldr	r0, [r1, #108]!	; 0x6c
   2dcd0:	cmp	r0, #0
   2dcd4:	bne	2dcf8 <flatcc_builder_custom_reset@@Base+0x4ec>
   2dcd8:	b	2dd2c <flatcc_builder_custom_reset@@Base+0x520>
   2dcdc:	ldr	r0, [r4, #104]	; 0x68
   2dce0:	cmp	r0, #0
   2dce4:	bne	2dd38 <flatcc_builder_custom_reset@@Base+0x52c>
   2dce8:	mov	r1, r4
   2dcec:	ldr	r0, [r1, #108]!	; 0x6c
   2dcf0:	cmp	r0, #0
   2dcf4:	beq	2dd2c <flatcc_builder_custom_reset@@Base+0x520>
   2dcf8:	ldr	r0, [r4, #40]	; 0x28
   2dcfc:	ldr	r6, [r4, #48]	; 0x30
   2dd00:	mov	r2, #7
   2dd04:	mov	r3, #1
   2dd08:	str	r2, [sp]
   2dd0c:	mov	r2, #1
   2dd10:	blx	r6
   2dd14:	mvn	r6, #0
   2dd18:	cmp	r0, #0
   2dd1c:	bne	2db64 <flatcc_builder_custom_reset@@Base+0x358>
   2dd20:	ldr	r0, [r4, #108]	; 0x6c
   2dd24:	ldr	r2, [r4, #112]	; 0x70
   2dd28:	b	2dad0 <flatcc_builder_custom_reset@@Base+0x2c4>
   2dd2c:	ldr	r0, [r4, #112]	; 0x70
   2dd30:	cmp	r0, #0
   2dd34:	beq	2dae4 <flatcc_builder_custom_reset@@Base+0x2d8>
   2dd38:	movw	r0, #37988	; 0x9464
   2dd3c:	movw	r1, #38006	; 0x9476
   2dd40:	movw	r3, #38076	; 0x94bc
   2dd44:	movw	r2, #434	; 0x1b2
   2dd48:	movt	r0, #4
   2dd4c:	movt	r1, #4
   2dd50:	movt	r3, #4
   2dd54:	bl	14f44 <__assert_fail@plt>

0002dd58 <flatcc_builder_reset@@Base>:
   2dd58:	mov	r1, #0
   2dd5c:	mov	r2, #0
   2dd60:	b	2d80c <flatcc_builder_custom_reset@@Base>

0002dd64 <flatcc_builder_clear@@Base>:
   2dd64:	push	{r4, sl, fp, lr}
   2dd68:	add	fp, sp, #8
   2dd6c:	sub	sp, sp, #8
   2dd70:	mov	r4, r0
   2dd74:	ldr	r0, [r0, #40]	; 0x28
   2dd78:	mov	r1, #0
   2dd7c:	mov	r2, #0
   2dd80:	mov	r3, #0
   2dd84:	ldr	ip, [r4, #48]	; 0x30
   2dd88:	str	r1, [sp]
   2dd8c:	add	r1, r4, #52	; 0x34
   2dd90:	blx	ip
   2dd94:	ldr	r0, [r4, #40]	; 0x28
   2dd98:	ldr	ip, [r4, #48]	; 0x30
   2dd9c:	mov	r1, #1
   2dda0:	mov	r2, #0
   2dda4:	mov	r3, #0
   2dda8:	str	r1, [sp]
   2ddac:	add	r1, r4, #60	; 0x3c
   2ddb0:	blx	ip
   2ddb4:	ldr	r0, [r4, #40]	; 0x28
   2ddb8:	ldr	ip, [r4, #48]	; 0x30
   2ddbc:	mov	r1, #2
   2ddc0:	mov	r2, #0
   2ddc4:	mov	r3, #0
   2ddc8:	str	r1, [sp]
   2ddcc:	add	r1, r4, #68	; 0x44
   2ddd0:	blx	ip
   2ddd4:	ldr	r0, [r4, #40]	; 0x28
   2ddd8:	ldr	ip, [r4, #48]	; 0x30
   2dddc:	mov	r1, #3
   2dde0:	mov	r2, #0
   2dde4:	mov	r3, #0
   2dde8:	str	r1, [sp]
   2ddec:	add	r1, r4, #76	; 0x4c
   2ddf0:	blx	ip
   2ddf4:	ldr	r0, [r4, #40]	; 0x28
   2ddf8:	ldr	ip, [r4, #48]	; 0x30
   2ddfc:	mov	r1, #4
   2de00:	mov	r2, #0
   2de04:	mov	r3, #0
   2de08:	str	r1, [sp]
   2de0c:	add	r1, r4, #84	; 0x54
   2de10:	blx	ip
   2de14:	ldr	r0, [r4, #40]	; 0x28
   2de18:	ldr	ip, [r4, #48]	; 0x30
   2de1c:	mov	r1, #5
   2de20:	mov	r2, #0
   2de24:	mov	r3, #0
   2de28:	str	r1, [sp]
   2de2c:	add	r1, r4, #92	; 0x5c
   2de30:	blx	ip
   2de34:	ldr	r0, [r4, #40]	; 0x28
   2de38:	ldr	ip, [r4, #48]	; 0x30
   2de3c:	mov	r1, #6
   2de40:	mov	r2, #0
   2de44:	mov	r3, #0
   2de48:	str	r1, [sp]
   2de4c:	add	r1, r4, #100	; 0x64
   2de50:	blx	ip
   2de54:	ldr	r0, [r4, #40]	; 0x28
   2de58:	ldr	ip, [r4, #48]	; 0x30
   2de5c:	mov	r1, #7
   2de60:	mov	r2, #0
   2de64:	mov	r3, #0
   2de68:	str	r1, [sp]
   2de6c:	add	r1, r4, #108	; 0x6c
   2de70:	blx	ip
   2de74:	ldr	r0, [r4, #184]	; 0xb8
   2de78:	cmp	r0, #0
   2de7c:	beq	2de88 <flatcc_builder_clear@@Base+0x124>
   2de80:	add	r0, r4, #188	; 0xbc
   2de84:	bl	32444 <flatcc_emitter_clear@@Base>
   2de88:	mov	r0, r4
   2de8c:	mov	r1, #0
   2de90:	mov	r2, #232	; 0xe8
   2de94:	sub	sp, fp, #8
   2de98:	pop	{r4, sl, fp, lr}
   2de9c:	b	14ef0 <memset@plt>

0002dea0 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2dea0:	push	{r4, r5, r6, r7, fp, lr}
   2dea4:	add	fp, sp, #16
   2dea8:	sub	sp, sp, #8
   2deac:	mov	r4, r0
   2deb0:	ldr	r0, [r0, #112]	; 0x70
   2deb4:	add	r1, r1, #7
   2deb8:	ldr	r7, [r4, #228]	; 0xe4
   2debc:	bic	r5, r1, #3
   2dec0:	add	r6, r4, #108	; 0x6c
   2dec4:	add	r2, r7, r5
   2dec8:	cmp	r2, r0
   2decc:	bls	2def4 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   2ded0:	ldr	r0, [r4, #40]	; 0x28
   2ded4:	ldr	ip, [r4, #48]	; 0x30
   2ded8:	mov	r1, #7
   2dedc:	mov	r3, #0
   2dee0:	str	r1, [sp]
   2dee4:	mov	r1, r6
   2dee8:	blx	ip
   2deec:	cmp	r0, #0
   2def0:	bne	2df48 <flatcc_builder_enter_user_frame_ptr@@Base+0xa8>
   2def4:	ldr	r0, [r6]
   2def8:	adds	r6, r0, r7
   2defc:	beq	2df38 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   2df00:	mov	r0, r6
   2df04:	mov	r1, #0
   2df08:	mov	r2, r5
   2df0c:	bl	14ef0 <memset@plt>
   2df10:	ldr	r0, [r4, #224]	; 0xe0
   2df14:	str	r0, [r6], #4
   2df18:	ldr	r0, [r4, #228]	; 0xe4
   2df1c:	add	r1, r0, #4
   2df20:	add	r0, r0, r5
   2df24:	str	r1, [r4, #224]	; 0xe0
   2df28:	str	r0, [r4, #228]	; 0xe4
   2df2c:	mov	r0, r6
   2df30:	sub	sp, fp, #16
   2df34:	pop	{r4, r5, r6, r7, fp, pc}
   2df38:	mov	r6, #0
   2df3c:	mov	r0, r6
   2df40:	sub	sp, fp, #16
   2df44:	pop	{r4, r5, r6, r7, fp, pc}
   2df48:	movw	r0, #42524	; 0xa61c
   2df4c:	movw	r1, #38006	; 0x9476
   2df50:	movw	r3, #42070	; 0xa456
   2df54:	mov	r2, #308	; 0x134
   2df58:	movt	r0, #4
   2df5c:	movt	r1, #4
   2df60:	movt	r3, #4
   2df64:	bl	14f44 <__assert_fail@plt>

0002df68 <flatcc_builder_enter_user_frame@@Base>:
   2df68:	push	{r4, r5, r6, r7, fp, lr}
   2df6c:	add	fp, sp, #16
   2df70:	sub	sp, sp, #8
   2df74:	mov	r4, r0
   2df78:	ldr	r0, [r0, #112]	; 0x70
   2df7c:	add	r1, r1, #7
   2df80:	ldr	r7, [r4, #228]	; 0xe4
   2df84:	bic	r5, r1, #3
   2df88:	add	r6, r4, #108	; 0x6c
   2df8c:	add	r2, r7, r5
   2df90:	cmp	r2, r0
   2df94:	bls	2dfbc <flatcc_builder_enter_user_frame@@Base+0x54>
   2df98:	ldr	r0, [r4, #40]	; 0x28
   2df9c:	ldr	ip, [r4, #48]	; 0x30
   2dfa0:	mov	r1, #7
   2dfa4:	mov	r3, #0
   2dfa8:	str	r1, [sp]
   2dfac:	mov	r1, r6
   2dfb0:	blx	ip
   2dfb4:	cmp	r0, #0
   2dfb8:	bne	2e004 <flatcc_builder_enter_user_frame@@Base+0x9c>
   2dfbc:	ldr	r0, [r6]
   2dfc0:	adds	r6, r0, r7
   2dfc4:	moveq	r0, #0
   2dfc8:	subeq	sp, fp, #16
   2dfcc:	popeq	{r4, r5, r6, r7, fp, pc}
   2dfd0:	mov	r0, r6
   2dfd4:	mov	r1, #0
   2dfd8:	mov	r2, r5
   2dfdc:	bl	14ef0 <memset@plt>
   2dfe0:	ldr	r0, [r4, #224]	; 0xe0
   2dfe4:	str	r0, [r6]
   2dfe8:	ldr	r1, [r4, #228]	; 0xe4
   2dfec:	add	r0, r1, #4
   2dff0:	add	r1, r1, r5
   2dff4:	str	r0, [r4, #224]	; 0xe0
   2dff8:	str	r1, [r4, #228]	; 0xe4
   2dffc:	sub	sp, fp, #16
   2e000:	pop	{r4, r5, r6, r7, fp, pc}
   2e004:	movw	r0, #42524	; 0xa61c
   2e008:	movw	r1, #38006	; 0x9476
   2e00c:	movw	r3, #42070	; 0xa456
   2e010:	mov	r2, #308	; 0x134
   2e014:	movt	r0, #4
   2e018:	movt	r1, #4
   2e01c:	movt	r3, #4
   2e020:	bl	14f44 <__assert_fail@plt>

0002e024 <flatcc_builder_exit_user_frame@@Base>:
   2e024:	ldr	r1, [r0, #224]	; 0xe0
   2e028:	cmp	r1, #0
   2e02c:	subne	r2, r1, #4
   2e030:	strne	r2, [r0, #228]	; 0xe4
   2e034:	ldrne	r2, [r0, #108]	; 0x6c
   2e038:	addne	r1, r2, r1
   2e03c:	ldrne	r1, [r1, #-4]
   2e040:	strne	r1, [r0, #224]	; 0xe0
   2e044:	movne	r0, r1
   2e048:	bxne	lr
   2e04c:	push	{fp, lr}
   2e050:	mov	fp, sp
   2e054:	movw	r0, #38138	; 0x94fa
   2e058:	movw	r1, #38006	; 0x9476
   2e05c:	movw	r3, #38163	; 0x9513
   2e060:	movw	r2, #542	; 0x21e
   2e064:	movt	r0, #4
   2e068:	movt	r1, #4
   2e06c:	movt	r3, #4
   2e070:	bl	14f44 <__assert_fail@plt>

0002e074 <flatcc_builder_exit_user_frame_at@@Base>:
   2e074:	push	{fp, lr}
   2e078:	mov	fp, sp
   2e07c:	ldr	r2, [r0, #224]	; 0xe0
   2e080:	cmp	r2, r1
   2e084:	bcc	2e0d0 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   2e088:	cmp	r1, #0
   2e08c:	str	r1, [r0, #224]	; 0xe0
   2e090:	subne	r2, r1, #4
   2e094:	strne	r2, [r0, #228]	; 0xe4
   2e098:	ldrne	r2, [r0, #108]	; 0x6c
   2e09c:	addne	r1, r2, r1
   2e0a0:	ldrne	r1, [r1, #-4]
   2e0a4:	strne	r1, [r0, #224]	; 0xe0
   2e0a8:	movne	r0, r1
   2e0ac:	popne	{fp, pc}
   2e0b0:	movw	r0, #38138	; 0x94fa
   2e0b4:	movw	r1, #38006	; 0x9476
   2e0b8:	movw	r3, #38163	; 0x9513
   2e0bc:	movw	r2, #542	; 0x21e
   2e0c0:	movt	r0, #4
   2e0c4:	movt	r1, #4
   2e0c8:	movt	r3, #4
   2e0cc:	bl	14f44 <__assert_fail@plt>
   2e0d0:	movw	r0, #38221	; 0x954d
   2e0d4:	movw	r1, #38006	; 0x9476
   2e0d8:	movw	r3, #38252	; 0x956c
   2e0dc:	movw	r2, #551	; 0x227
   2e0e0:	movt	r0, #4
   2e0e4:	movt	r1, #4
   2e0e8:	movt	r3, #4
   2e0ec:	bl	14f44 <__assert_fail@plt>

0002e0f0 <flatcc_builder_get_current_user_frame@@Base>:
   2e0f0:	ldr	r0, [r0, #224]	; 0xe0
   2e0f4:	bx	lr

0002e0f8 <flatcc_builder_get_user_frame_ptr@@Base>:
   2e0f8:	ldr	r0, [r0, #108]	; 0x6c
   2e0fc:	add	r0, r0, r1
   2e100:	bx	lr

0002e104 <flatcc_builder_embed_buffer@@Base>:
   2e104:	push	{r4, r5, r6, r7, fp, lr}
   2e108:	add	fp, sp, #16
   2e10c:	sub	sp, sp, #88	; 0x58
   2e110:	mov	r4, r0
   2e114:	ldr	r0, [fp, #8]
   2e118:	mov	r5, r3
   2e11c:	mov	r7, r2
   2e120:	mov	r2, r1
   2e124:	sub	r1, fp, #18
   2e128:	strh	r0, [fp, #-18]	; 0xffffffee
   2e12c:	mov	r0, r4
   2e130:	ldr	r3, [r4, #152]	; 0x98
   2e134:	cmp	r3, #0
   2e138:	movwne	r3, #1
   2e13c:	bl	2e274 <flatcc_builder_embed_buffer@@Base+0x170>
   2e140:	ldr	r1, [fp, #12]
   2e144:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2e148:	ldr	r0, [r4, #136]	; 0x88
   2e14c:	mov	r2, #0
   2e150:	str	r2, [sp, #8]
   2e154:	str	r2, [sp, #12]
   2e158:	and	r1, r1, #2
   2e15c:	sub	r3, r3, #1
   2e160:	add	r1, r5, r1, lsl #1
   2e164:	sub	r1, r0, r1
   2e168:	and	r3, r3, r1
   2e16c:	add	r1, r3, r5
   2e170:	str	r1, [fp, #-24]	; 0xffffffe8
   2e174:	ldr	r1, [r4, #152]	; 0x98
   2e178:	cmp	r1, #0
   2e17c:	mov	r1, #0
   2e180:	beq	2e1a0 <flatcc_builder_embed_buffer@@Base+0x9c>
   2e184:	sub	r1, fp, #24
   2e188:	mov	r2, #1
   2e18c:	str	r1, [sp, #16]
   2e190:	mov	r1, #4
   2e194:	str	r1, [sp, #8]
   2e198:	str	r1, [sp, #20]
   2e19c:	str	r2, [sp, #12]
   2e1a0:	cmp	r5, #0
   2e1a4:	beq	2e1c8 <flatcc_builder_embed_buffer@@Base+0xc4>
   2e1a8:	add	r6, sp, #8
   2e1ac:	add	r1, r1, r5
   2e1b0:	add	r6, r6, r2, lsl #3
   2e1b4:	add	r2, r2, #1
   2e1b8:	str	r1, [sp, #8]
   2e1bc:	str	r7, [r6, #8]
   2e1c0:	str	r5, [r6, #12]
   2e1c4:	str	r2, [sp, #12]
   2e1c8:	cmp	r3, #0
   2e1cc:	beq	2e1f8 <flatcc_builder_embed_buffer@@Base+0xf4>
   2e1d0:	add	r7, sp, #8
   2e1d4:	movw	r6, #37476	; 0x9264
   2e1d8:	add	r1, r1, r3
   2e1dc:	add	r7, r7, r2, lsl #3
   2e1e0:	add	r2, r2, #1
   2e1e4:	movt	r6, #4
   2e1e8:	str	r1, [sp, #8]
   2e1ec:	str	r6, [r7, #8]
   2e1f0:	str	r3, [r7, #12]
   2e1f4:	str	r2, [sp, #12]
   2e1f8:	cmp	r1, #0
   2e1fc:	ble	2e254 <flatcc_builder_embed_buffer@@Base+0x150>
   2e200:	sub	r5, r0, r1
   2e204:	ldr	r0, [r4, #36]	; 0x24
   2e208:	ldr	r7, [r4, #44]	; 0x2c
   2e20c:	str	r1, [sp]
   2e210:	add	r1, sp, #8
   2e214:	add	r1, r1, #8
   2e218:	mov	r3, r5
   2e21c:	blx	r7
   2e220:	cmp	r0, #0
   2e224:	streq	r5, [r4, #136]	; 0x88
   2e228:	moveq	r0, r5
   2e22c:	subeq	sp, fp, #16
   2e230:	popeq	{r4, r5, r6, r7, fp, pc}
   2e234:	movw	r0, #42524	; 0xa61c
   2e238:	movw	r1, #38006	; 0x9476
   2e23c:	movw	r3, #42203	; 0xa4db
   2e240:	movw	r2, #651	; 0x28b
   2e244:	movt	r0, #4
   2e248:	movt	r1, #4
   2e24c:	movt	r3, #4
   2e250:	bl	14f44 <__assert_fail@plt>
   2e254:	movw	r0, #42524	; 0xa61c
   2e258:	movw	r1, #38006	; 0x9476
   2e25c:	movw	r3, #42203	; 0xa4db
   2e260:	movw	r2, #647	; 0x287
   2e264:	movt	r0, #4
   2e268:	movt	r1, #4
   2e26c:	movt	r3, #4
   2e270:	bl	14f44 <__assert_fail@plt>
   2e274:	push	{r4, sl, fp, lr}
   2e278:	add	fp, sp, #8
   2e27c:	sub	sp, sp, #80	; 0x50
   2e280:	cmp	r2, #0
   2e284:	bne	2e294 <flatcc_builder_embed_buffer@@Base+0x190>
   2e288:	ldrh	r2, [r0, #132]	; 0x84
   2e28c:	cmp	r2, #0
   2e290:	movweq	r2, #1
   2e294:	ldrh	r4, [r1]
   2e298:	cmp	r4, #4
   2e29c:	movwcc	r4, #4
   2e2a0:	cmpcs	r4, r2
   2e2a4:	bcs	2e2b4 <flatcc_builder_embed_buffer@@Base+0x1b0>
   2e2a8:	cmp	r4, r2
   2e2ac:	movcc	r4, r2
   2e2b0:	strh	r4, [r1]
   2e2b4:	cmp	r3, #0
   2e2b8:	bne	2e32c <flatcc_builder_embed_buffer@@Base+0x228>
   2e2bc:	ldr	r4, [r0, #140]	; 0x8c
   2e2c0:	sub	r1, r2, #1
   2e2c4:	ands	r1, r4, r1
   2e2c8:	beq	2e32c <flatcc_builder_embed_buffer@@Base+0x228>
   2e2cc:	movw	r2, #37476	; 0x9264
   2e2d0:	cmn	r1, #1
   2e2d4:	movt	r2, #4
   2e2d8:	str	r2, [sp, #16]
   2e2dc:	mov	r2, #1
   2e2e0:	str	r1, [sp, #8]
   2e2e4:	str	r1, [sp, #20]
   2e2e8:	str	r2, [sp, #12]
   2e2ec:	add	r2, r4, r1
   2e2f0:	str	r2, [r0, #140]	; 0x8c
   2e2f4:	ble	2e334 <flatcc_builder_embed_buffer@@Base+0x230>
   2e2f8:	ldr	r2, [r0, #36]	; 0x24
   2e2fc:	ldr	ip, [r0, #44]	; 0x2c
   2e300:	add	r0, sp, #8
   2e304:	str	r1, [sp]
   2e308:	mov	r3, r4
   2e30c:	add	r1, r0, #8
   2e310:	mov	r0, r2
   2e314:	mov	r2, #1
   2e318:	blx	ip
   2e31c:	cmp	r0, #0
   2e320:	bne	2e354 <flatcc_builder_embed_buffer@@Base+0x250>
   2e324:	cmn	r4, #1
   2e328:	beq	2e374 <flatcc_builder_embed_buffer@@Base+0x270>
   2e32c:	sub	sp, fp, #8
   2e330:	pop	{r4, sl, fp, pc}
   2e334:	movw	r0, #42524	; 0xa61c
   2e338:	movw	r1, #38006	; 0x9476
   2e33c:	movw	r3, #42391	; 0xa597
   2e340:	movw	r2, #673	; 0x2a1
   2e344:	movt	r0, #4
   2e348:	movt	r1, #4
   2e34c:	movt	r3, #4
   2e350:	bl	14f44 <__assert_fail@plt>
   2e354:	movw	r0, #42524	; 0xa61c
   2e358:	movw	r1, #38006	; 0x9476
   2e35c:	movw	r3, #42391	; 0xa597
   2e360:	movw	r2, #677	; 0x2a5
   2e364:	movt	r0, #4
   2e368:	movt	r1, #4
   2e36c:	movt	r3, #4
   2e370:	bl	14f44 <__assert_fail@plt>
   2e374:	movw	r0, #42524	; 0xa61c
   2e378:	movw	r1, #38006	; 0x9476
   2e37c:	movw	r3, #42137	; 0xa499
   2e380:	movw	r2, #702	; 0x2be
   2e384:	movt	r0, #4
   2e388:	movt	r1, #4
   2e38c:	movt	r3, #4
   2e390:	bl	14f44 <__assert_fail@plt>

0002e394 <flatcc_builder_create_buffer@@Base>:
   2e394:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e398:	add	fp, sp, #28
   2e39c:	sub	sp, sp, #100	; 0x64
   2e3a0:	ldr	r8, [fp, #12]
   2e3a4:	mov	r4, r0
   2e3a8:	ldr	r0, [fp, #8]
   2e3ac:	mov	r7, r1
   2e3b0:	mov	r5, #0
   2e3b4:	mov	r9, r3
   2e3b8:	sub	r1, fp, #30
   2e3bc:	str	r5, [sp, #12]
   2e3c0:	and	r6, r8, #1
   2e3c4:	strh	r0, [fp, #-30]	; 0xffffffe2
   2e3c8:	mov	r0, r4
   2e3cc:	mov	r3, r6
   2e3d0:	bl	2e274 <flatcc_builder_embed_buffer@@Base+0x170>
   2e3d4:	ldrh	r0, [r4, #128]	; 0x80
   2e3d8:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2e3dc:	cmp	r0, r1
   2e3e0:	strhcc	r1, [r4, #128]	; 0x80
   2e3e4:	cmp	r7, #0
   2e3e8:	stmib	sp, {r6, r9}
   2e3ec:	beq	2e408 <flatcc_builder_create_buffer@@Base+0x74>
   2e3f0:	ldr	r5, [r7]
   2e3f4:	cmp	r5, #0
   2e3f8:	str	r5, [sp, #12]
   2e3fc:	movwne	r5, #1
   2e400:	lsl	r7, r5, #2
   2e404:	b	2e40c <flatcc_builder_create_buffer@@Base+0x78>
   2e408:	mov	r7, #0
   2e40c:	ldr	r9, [r4, #136]	; 0x88
   2e410:	mov	sl, #4
   2e414:	mvn	r6, #3
   2e418:	mov	r3, #0
   2e41c:	ands	ip, r8, #3
   2e420:	and	r2, sl, r8, lsl #1
   2e424:	str	r3, [sp, #20]
   2e428:	str	r3, [sp, #16]
   2e42c:	sub	r2, r6, r2
   2e430:	sub	r6, r1, #1
   2e434:	mov	r1, #4
   2e438:	add	r2, r2, r9
   2e43c:	sub	r2, r2, r7
   2e440:	beq	2e464 <flatcc_builder_create_buffer@@Base+0xd0>
   2e444:	sub	r1, fp, #40	; 0x28
   2e448:	mov	r3, #1
   2e44c:	str	r1, [sp, #24]
   2e450:	mov	r1, #4
   2e454:	str	r1, [sp, #16]
   2e458:	str	r1, [sp, #28]
   2e45c:	mov	r1, #8
   2e460:	str	r3, [sp, #20]
   2e464:	add	lr, sp, #16
   2e468:	and	r6, r2, r6
   2e46c:	sub	r0, fp, #36	; 0x24
   2e470:	str	r1, [sp, #16]
   2e474:	cmp	r5, #0
   2e478:	add	r2, lr, r3, lsl #3
   2e47c:	str	r0, [r2, #8]
   2e480:	str	sl, [r2, #12]
   2e484:	add	r2, r3, #1
   2e488:	str	r2, [sp, #20]
   2e48c:	beq	2e4b0 <flatcc_builder_create_buffer@@Base+0x11c>
   2e490:	add	r1, r1, r7
   2e494:	add	r0, lr, r2, lsl #3
   2e498:	add	r2, sp, #12
   2e49c:	str	r1, [sp, #16]
   2e4a0:	str	r2, [r0, #8]
   2e4a4:	orr	r2, r3, #2
   2e4a8:	str	r7, [r0, #12]
   2e4ac:	str	r2, [sp, #20]
   2e4b0:	cmp	r6, #0
   2e4b4:	beq	2e4dc <flatcc_builder_create_buffer@@Base+0x148>
   2e4b8:	movw	r3, #37476	; 0x9264
   2e4bc:	add	r1, r1, r6
   2e4c0:	add	r0, lr, r2, lsl #3
   2e4c4:	add	r2, r2, #1
   2e4c8:	movt	r3, #4
   2e4cc:	str	r1, [sp, #16]
   2e4d0:	str	r3, [r0, #8]
   2e4d4:	str	r6, [r0, #12]
   2e4d8:	str	r2, [sp, #20]
   2e4dc:	ldr	r5, [sp, #4]
   2e4e0:	sub	r7, r9, r1
   2e4e4:	cmp	ip, #0
   2e4e8:	mov	r6, #144	; 0x90
   2e4ec:	ldr	r3, [sp, #8]
   2e4f0:	mov	r0, r7
   2e4f4:	addne	r0, r0, #4
   2e4f8:	cmp	r5, #0
   2e4fc:	sub	r3, r3, r0
   2e500:	movweq	r6, #140	; 0x8c
   2e504:	cmp	r1, #0
   2e508:	ldr	r6, [r4, r6]
   2e50c:	str	r3, [fp, #-36]	; 0xffffffdc
   2e510:	sub	r0, r6, r0
   2e514:	str	r0, [fp, #-40]	; 0xffffffd8
   2e518:	ble	2e570 <flatcc_builder_create_buffer@@Base+0x1dc>
   2e51c:	ldr	r0, [r4, #36]	; 0x24
   2e520:	ldr	r6, [r4, #44]	; 0x2c
   2e524:	str	r1, [sp]
   2e528:	add	r1, lr, #8
   2e52c:	mov	r3, r7
   2e530:	blx	r6
   2e534:	cmp	r0, #0
   2e538:	bne	2e590 <flatcc_builder_create_buffer@@Base+0x1fc>
   2e53c:	cmp	r7, #0
   2e540:	str	r7, [r4, #136]	; 0x88
   2e544:	movne	r0, r7
   2e548:	subne	sp, fp, #28
   2e54c:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e550:	movw	r0, #42524	; 0xa61c
   2e554:	movw	r1, #38006	; 0x9476
   2e558:	movw	r3, #38321	; 0x95b1
   2e55c:	mov	r2, #772	; 0x304
   2e560:	movt	r0, #4
   2e564:	movt	r1, #4
   2e568:	movt	r3, #4
   2e56c:	bl	14f44 <__assert_fail@plt>
   2e570:	movw	r0, #42524	; 0xa61c
   2e574:	movw	r1, #38006	; 0x9476
   2e578:	movw	r3, #42203	; 0xa4db
   2e57c:	movw	r2, #647	; 0x287
   2e580:	movt	r0, #4
   2e584:	movt	r1, #4
   2e588:	movt	r3, #4
   2e58c:	bl	14f44 <__assert_fail@plt>
   2e590:	movw	r0, #42524	; 0xa61c
   2e594:	movw	r1, #38006	; 0x9476
   2e598:	movw	r3, #42203	; 0xa4db
   2e59c:	movw	r2, #651	; 0x28b
   2e5a0:	movt	r0, #4
   2e5a4:	movt	r1, #4
   2e5a8:	movt	r3, #4
   2e5ac:	bl	14f44 <__assert_fail@plt>

0002e5b0 <flatcc_builder_create_struct@@Base>:
   2e5b0:	push	{r4, r5, r6, sl, fp, lr}
   2e5b4:	add	fp, sp, #16
   2e5b8:	sub	sp, sp, #80	; 0x50
   2e5bc:	cmp	r3, #0
   2e5c0:	beq	2e698 <flatcc_builder_create_struct@@Base+0xe8>
   2e5c4:	mov	r5, r0
   2e5c8:	ldrh	r0, [r0, #128]	; 0x80
   2e5cc:	mov	r4, #0
   2e5d0:	cmp	r0, r3
   2e5d4:	strhcc	r3, [r5, #128]	; 0x80
   2e5d8:	sub	r3, r3, #1
   2e5dc:	cmp	r2, #0
   2e5e0:	ldr	r0, [r5, #136]	; 0x88
   2e5e4:	str	r4, [sp, #12]
   2e5e8:	str	r4, [sp, #8]
   2e5ec:	movne	r4, #1
   2e5f0:	strne	r1, [sp, #16]
   2e5f4:	strne	r2, [sp, #8]
   2e5f8:	strne	r2, [sp, #20]
   2e5fc:	strne	r4, [sp, #12]
   2e600:	sub	r6, r0, r2
   2e604:	and	r3, r6, r3
   2e608:	cmp	r3, #0
   2e60c:	beq	2e638 <flatcc_builder_create_struct@@Base+0x88>
   2e610:	add	r1, sp, #8
   2e614:	movw	r6, #37476	; 0x9264
   2e618:	add	r2, r3, r2
   2e61c:	add	r1, r1, r4, lsl #3
   2e620:	add	r4, r4, #1
   2e624:	movt	r6, #4
   2e628:	str	r2, [sp, #8]
   2e62c:	str	r6, [r1, #8]
   2e630:	str	r3, [r1, #12]
   2e634:	str	r4, [sp, #12]
   2e638:	cmp	r2, #0
   2e63c:	ble	2e6b8 <flatcc_builder_create_struct@@Base+0x108>
   2e640:	sub	r6, r0, r2
   2e644:	ldr	r0, [r5, #36]	; 0x24
   2e648:	ldr	ip, [r5, #44]	; 0x2c
   2e64c:	add	r1, sp, #8
   2e650:	str	r2, [sp]
   2e654:	mov	r2, r4
   2e658:	add	r1, r1, #8
   2e65c:	mov	r3, r6
   2e660:	blx	ip
   2e664:	cmp	r0, #0
   2e668:	streq	r6, [r5, #136]	; 0x88
   2e66c:	moveq	r0, r6
   2e670:	subeq	sp, fp, #16
   2e674:	popeq	{r4, r5, r6, sl, fp, pc}
   2e678:	movw	r0, #42524	; 0xa61c
   2e67c:	movw	r1, #38006	; 0x9476
   2e680:	movw	r3, #42203	; 0xa4db
   2e684:	movw	r2, #651	; 0x28b
   2e688:	movt	r0, #4
   2e68c:	movt	r1, #4
   2e690:	movt	r3, #4
   2e694:	bl	14f44 <__assert_fail@plt>
   2e698:	movw	r0, #38452	; 0x9634
   2e69c:	movw	r1, #38006	; 0x9476
   2e6a0:	movw	r3, #38463	; 0x963f
   2e6a4:	movw	r2, #783	; 0x30f
   2e6a8:	movt	r0, #4
   2e6ac:	movt	r1, #4
   2e6b0:	movt	r3, #4
   2e6b4:	bl	14f44 <__assert_fail@plt>
   2e6b8:	movw	r0, #42524	; 0xa61c
   2e6bc:	movw	r1, #38006	; 0x9476
   2e6c0:	movw	r3, #42203	; 0xa4db
   2e6c4:	movw	r2, #647	; 0x287
   2e6c8:	movt	r0, #4
   2e6cc:	movt	r1, #4
   2e6d0:	movt	r3, #4
   2e6d4:	bl	14f44 <__assert_fail@plt>

0002e6d8 <flatcc_builder_start_buffer@@Base>:
   2e6d8:	push	{r4, r5, r6, r7, fp, lr}
   2e6dc:	add	fp, sp, #16
   2e6e0:	mov	r5, r1
   2e6e4:	ldrh	r1, [r0, #128]	; 0x80
   2e6e8:	mov	r6, r3
   2e6ec:	mov	r7, r2
   2e6f0:	mov	r4, r0
   2e6f4:	bl	2e794 <flatcc_builder_start_buffer@@Base+0xbc>
   2e6f8:	mov	r1, r0
   2e6fc:	mvn	r0, #0
   2e700:	cmp	r1, #0
   2e704:	popne	{r4, r5, r6, r7, fp, pc}
   2e708:	mov	r0, #1
   2e70c:	cmp	r5, #0
   2e710:	strh	r0, [r4, #128]	; 0x80
   2e714:	ldrh	r1, [r4, #132]	; 0x84
   2e718:	ldr	r2, [r4, #32]
   2e71c:	strh	r1, [r2, #34]	; 0x22
   2e720:	strh	r7, [r4, #132]	; 0x84
   2e724:	ldrh	r1, [r4, #164]	; 0xa4
   2e728:	ldr	r2, [r4, #32]
   2e72c:	strh	r1, [r2, #32]
   2e730:	strh	r6, [r4, #164]	; 0xa4
   2e734:	ldr	r1, [r4, #32]
   2e738:	ldr	r2, [r4, #144]	; 0x90
   2e73c:	str	r2, [r1, #20]
   2e740:	ldr	r1, [r4, #32]
   2e744:	ldr	r2, [r4, #152]	; 0x98
   2e748:	str	r2, [r1, #28]
   2e74c:	ldr	r3, [r4, #148]	; 0x94
   2e750:	ldr	r1, [r4, #32]
   2e754:	ldr	r2, [r4, #136]	; 0x88
   2e758:	ldr	r7, [r4, #168]	; 0xa8
   2e75c:	add	r6, r3, #1
   2e760:	str	r2, [r4, #144]	; 0x90
   2e764:	str	r6, [r4, #148]	; 0x94
   2e768:	str	r3, [r4, #152]	; 0x98
   2e76c:	str	r7, [r1, #16]
   2e770:	movw	r1, #37476	; 0x9264
   2e774:	movt	r1, #4
   2e778:	movne	r1, r5
   2e77c:	ldr	r1, [r1]
   2e780:	str	r1, [r4, #168]	; 0xa8
   2e784:	ldr	r1, [r4, #32]
   2e788:	strh	r0, [r1, #14]
   2e78c:	mov	r0, #0
   2e790:	pop	{r4, r5, r6, r7, fp, pc}
   2e794:	push	{r4, r5, r6, r7, fp, lr}
   2e798:	add	fp, sp, #16
   2e79c:	sub	sp, sp, #8
   2e7a0:	mov	r5, r1
   2e7a4:	ldr	r1, [r0, #156]	; 0x9c
   2e7a8:	ldr	r2, [r0, #160]	; 0xa0
   2e7ac:	mov	r4, r0
   2e7b0:	add	r0, r1, #1
   2e7b4:	cmp	r1, r2
   2e7b8:	str	r0, [r4, #156]	; 0x9c
   2e7bc:	bge	2e7d0 <flatcc_builder_start_buffer@@Base+0xf8>
   2e7c0:	ldr	r0, [r4, #32]
   2e7c4:	add	r0, r0, #36	; 0x24
   2e7c8:	str	r0, [r4, #32]
   2e7cc:	b	2e864 <flatcc_builder_start_buffer@@Base+0x18c>
   2e7d0:	ldr	r2, [r4, #176]	; 0xb0
   2e7d4:	mvn	r6, #0
   2e7d8:	cmp	r2, #1
   2e7dc:	cmpge	r1, r2
   2e7e0:	bge	2e89c <flatcc_builder_start_buffer@@Base+0x1c4>
   2e7e4:	add	r7, r0, r0, lsl #3
   2e7e8:	ldr	r0, [r4, #88]	; 0x58
   2e7ec:	lsl	r2, r7, #2
   2e7f0:	cmp	r2, r0
   2e7f4:	bls	2e81c <flatcc_builder_start_buffer@@Base+0x144>
   2e7f8:	ldr	r0, [r4, #40]	; 0x28
   2e7fc:	ldr	ip, [r4, #48]	; 0x30
   2e800:	mov	r3, #4
   2e804:	add	r1, r4, #84	; 0x54
   2e808:	str	r3, [sp]
   2e80c:	mov	r3, #0
   2e810:	blx	ip
   2e814:	cmp	r0, #0
   2e818:	bne	2e8a8 <flatcc_builder_start_buffer@@Base+0x1d0>
   2e81c:	ldr	r1, [r4, #84]	; 0x54
   2e820:	mvn	r0, #35	; 0x23
   2e824:	add	r0, r0, r7, lsl #2
   2e828:	adds	r0, r0, r1
   2e82c:	str	r0, [r4, #32]
   2e830:	beq	2e89c <flatcc_builder_start_buffer@@Base+0x1c4>
   2e834:	ldr	r1, [r4, #88]	; 0x58
   2e838:	movw	r3, #36409	; 0x8e39
   2e83c:	ldr	r2, [r4, #176]	; 0xb0
   2e840:	movt	r3, #14563	; 0x38e3
   2e844:	umull	r1, r3, r1, r3
   2e848:	lsr	r1, r3, #3
   2e84c:	cmp	r2, r3, lsr #3
   2e850:	mov	r3, r1
   2e854:	movlt	r3, r2
   2e858:	cmp	r2, #0
   2e85c:	movle	r3, r1
   2e860:	str	r3, [r4, #160]	; 0xa0
   2e864:	ldr	r1, [r4, #20]
   2e868:	mvn	r3, #3
   2e86c:	mov	r6, #0
   2e870:	str	r1, [r0, #8]
   2e874:	ldrh	r2, [r4, #130]	; 0x82
   2e878:	strh	r2, [r0, #12]
   2e87c:	strh	r5, [r4, #130]	; 0x82
   2e880:	ldr	r2, [r4, #28]
   2e884:	stm	r0, {r2, r3}
   2e888:	add	r0, r1, r2
   2e88c:	str	r6, [r4, #20]
   2e890:	add	r0, r0, #7
   2e894:	bic	r0, r0, #7
   2e898:	str	r0, [r4, #28]
   2e89c:	mov	r0, r6
   2e8a0:	sub	sp, fp, #16
   2e8a4:	pop	{r4, r5, r6, r7, fp, pc}
   2e8a8:	movw	r0, #42524	; 0xa61c
   2e8ac:	movw	r1, #38006	; 0x9476
   2e8b0:	movw	r3, #42070	; 0xa456
   2e8b4:	mov	r2, #308	; 0x134
   2e8b8:	movt	r0, #4
   2e8bc:	movt	r1, #4
   2e8c0:	movt	r3, #4
   2e8c4:	bl	14f44 <__assert_fail@plt>

0002e8c8 <flatcc_builder_end_buffer@@Base>:
   2e8c8:	push	{r4, r5, r6, sl, fp, lr}
   2e8cc:	add	fp, sp, #16
   2e8d0:	sub	sp, sp, #8
   2e8d4:	mov	r4, r0
   2e8d8:	ldr	r0, [r0, #32]
   2e8dc:	ldrh	r0, [r0, #14]
   2e8e0:	cmp	r0, #1
   2e8e4:	bne	2e9d8 <flatcc_builder_end_buffer@@Base+0x110>
   2e8e8:	mov	r3, r1
   2e8ec:	ldr	r1, [r4, #152]	; 0x98
   2e8f0:	ldrh	r0, [r4, #164]	; 0xa4
   2e8f4:	ldrh	r2, [r4, #132]	; 0x84
   2e8f8:	cmp	r1, #0
   2e8fc:	ldrh	r1, [r4, #128]	; 0x80
   2e900:	and	r0, r0, #2
   2e904:	orrne	r0, r0, #1
   2e908:	cmp	r1, r2
   2e90c:	movcc	r1, r2
   2e910:	strhcc	r2, [r4, #128]	; 0x80
   2e914:	str	r0, [sp, #4]
   2e918:	mov	r0, r4
   2e91c:	str	r1, [sp]
   2e920:	add	r1, r4, #168	; 0xa8
   2e924:	bl	2e394 <flatcc_builder_create_buffer@@Base>
   2e928:	mov	r6, r0
   2e92c:	cmp	r0, #0
   2e930:	beq	2e9cc <flatcc_builder_end_buffer@@Base+0x104>
   2e934:	ldr	r1, [r4, #32]
   2e938:	ldr	r0, [r4, #16]
   2e93c:	ldr	r2, [r4, #20]
   2e940:	ldr	r3, [r1, #20]
   2e944:	str	r3, [r4, #144]	; 0x90
   2e948:	ldr	r3, [r1, #28]
   2e94c:	str	r3, [r4, #152]	; 0x98
   2e950:	ldr	r3, [r1, #16]
   2e954:	str	r3, [r4, #168]	; 0xa8
   2e958:	ldrh	r1, [r1, #32]
   2e95c:	strh	r1, [r4, #164]	; 0xa4
   2e960:	mov	r1, #0
   2e964:	bl	14ef0 <memset@plt>
   2e968:	ldr	r0, [r4, #32]
   2e96c:	ldr	r1, [r4, #60]	; 0x3c
   2e970:	ldr	r2, [r4, #64]	; 0x40
   2e974:	ldr	r3, [r0, #8]
   2e978:	str	r3, [r4, #20]
   2e97c:	ldr	r3, [r0]
   2e980:	str	r3, [r4, #28]
   2e984:	add	r1, r1, r3
   2e988:	ldr	r5, [r0, #4]
   2e98c:	str	r1, [r4, #16]
   2e990:	sub	r1, r2, r3
   2e994:	cmp	r1, r5
   2e998:	movhi	r1, r5
   2e99c:	str	r1, [r4, #24]
   2e9a0:	ldrh	r1, [r4, #130]	; 0x82
   2e9a4:	ldrh	r2, [r4, #128]	; 0x80
   2e9a8:	cmp	r2, r1
   2e9ac:	strhcc	r1, [r4, #128]	; 0x80
   2e9b0:	ldrh	r1, [r0, #12]
   2e9b4:	sub	r0, r0, #36	; 0x24
   2e9b8:	str	r0, [r4, #32]
   2e9bc:	strh	r1, [r4, #130]	; 0x82
   2e9c0:	ldr	r0, [r4, #156]	; 0x9c
   2e9c4:	sub	r0, r0, #1
   2e9c8:	str	r0, [r4, #156]	; 0x9c
   2e9cc:	mov	r0, r6
   2e9d0:	sub	sp, fp, #16
   2e9d4:	pop	{r4, r5, r6, sl, fp, pc}
   2e9d8:	movw	r0, #38565	; 0x96a5
   2e9dc:	movw	r1, #38006	; 0x9476
   2e9e0:	movw	r3, #38609	; 0x96d1
   2e9e4:	movw	r2, #838	; 0x346
   2e9e8:	movt	r0, #4
   2e9ec:	movt	r1, #4
   2e9f0:	movt	r3, #4
   2e9f4:	bl	14f44 <__assert_fail@plt>

0002e9f8 <flatcc_builder_start_struct@@Base>:
   2e9f8:	push	{r4, r5, r6, r7, fp, lr}
   2e9fc:	add	fp, sp, #16
   2ea00:	sub	sp, sp, #8
   2ea04:	mov	r6, r1
   2ea08:	mov	r1, r2
   2ea0c:	mov	r4, r0
   2ea10:	bl	2e794 <flatcc_builder_start_buffer@@Base+0xbc>
   2ea14:	mov	r5, #0
   2ea18:	cmp	r0, #0
   2ea1c:	bne	2ea98 <flatcc_builder_start_struct@@Base+0xa0>
   2ea20:	ldr	r2, [r4, #32]
   2ea24:	mov	r0, #2
   2ea28:	mvn	r7, #3
   2ea2c:	strh	r0, [r2, #14]
   2ea30:	ldr	r1, [r4, #28]
   2ea34:	ldr	r3, [r4, #64]	; 0x40
   2ea38:	ldr	r0, [r4, #60]	; 0x3c
   2ea3c:	sub	r3, r3, r1
   2ea40:	add	r0, r0, r1
   2ea44:	cmn	r3, #4
   2ea48:	str	r0, [r4, #16]
   2ea4c:	movcs	r3, r7
   2ea50:	str	r3, [r4, #24]
   2ea54:	str	r7, [r2, #4]
   2ea58:	ldr	r7, [r4, #20]
   2ea5c:	add	r2, r7, r6
   2ea60:	cmp	r2, r3
   2ea64:	str	r2, [r4, #20]
   2ea68:	bcc	2ead4 <flatcc_builder_start_struct@@Base+0xdc>
   2ea6c:	ldr	r0, [r4, #40]	; 0x28
   2ea70:	ldr	r6, [r4, #48]	; 0x30
   2ea74:	add	r1, r1, r2
   2ea78:	mov	r3, #1
   2ea7c:	str	r3, [sp]
   2ea80:	add	r2, r1, #1
   2ea84:	add	r1, r4, #60	; 0x3c
   2ea88:	mov	r3, #1
   2ea8c:	blx	r6
   2ea90:	cmp	r0, #0
   2ea94:	beq	2eaa4 <flatcc_builder_start_struct@@Base+0xac>
   2ea98:	mov	r0, r5
   2ea9c:	sub	sp, fp, #16
   2eaa0:	pop	{r4, r5, r6, r7, fp, pc}
   2eaa4:	ldr	r1, [r4, #28]
   2eaa8:	ldr	r0, [r4, #60]	; 0x3c
   2eaac:	ldr	r3, [r4, #64]	; 0x40
   2eab0:	ldr	r2, [r4, #32]
   2eab4:	add	r0, r0, r1
   2eab8:	sub	r1, r3, r1
   2eabc:	mvn	r3, #3
   2eac0:	cmn	r1, #4
   2eac4:	str	r0, [r4, #16]
   2eac8:	movcs	r1, r3
   2eacc:	str	r1, [r4, #24]
   2ead0:	str	r3, [r2, #4]
   2ead4:	add	r5, r0, r7
   2ead8:	mov	r0, r5
   2eadc:	sub	sp, fp, #16
   2eae0:	pop	{r4, r5, r6, r7, fp, pc}

0002eae4 <flatcc_builder_struct_edit@@Base>:
   2eae4:	ldr	r0, [r0, #16]
   2eae8:	bx	lr

0002eaec <flatcc_builder_end_struct@@Base>:
   2eaec:	push	{r4, r5, fp, lr}
   2eaf0:	add	fp, sp, #8
   2eaf4:	mov	r4, r0
   2eaf8:	ldr	r0, [r0, #32]
   2eafc:	ldrh	r0, [r0, #14]
   2eb00:	cmp	r0, #2
   2eb04:	bne	2eba4 <flatcc_builder_end_struct@@Base+0xb8>
   2eb08:	ldrh	r3, [r4, #130]	; 0x82
   2eb0c:	ldr	r1, [r4, #16]
   2eb10:	ldr	r2, [r4, #20]
   2eb14:	mov	r0, r4
   2eb18:	bl	2e5b0 <flatcc_builder_create_struct@@Base>
   2eb1c:	mov	r5, r0
   2eb20:	cmp	r0, #0
   2eb24:	beq	2eb9c <flatcc_builder_end_struct@@Base+0xb0>
   2eb28:	ldr	r0, [r4, #16]
   2eb2c:	ldr	r2, [r4, #20]
   2eb30:	mov	r1, #0
   2eb34:	bl	14ef0 <memset@plt>
   2eb38:	ldr	r0, [r4, #32]
   2eb3c:	ldr	r1, [r4, #60]	; 0x3c
   2eb40:	ldr	ip, [r4, #64]	; 0x40
   2eb44:	ldr	r3, [r0, #8]
   2eb48:	str	r3, [r4, #20]
   2eb4c:	ldr	r3, [r0]
   2eb50:	str	r3, [r4, #28]
   2eb54:	add	r1, r1, r3
   2eb58:	ldr	r2, [r0, #4]
   2eb5c:	str	r1, [r4, #16]
   2eb60:	sub	r1, ip, r3
   2eb64:	cmp	r1, r2
   2eb68:	movhi	r1, r2
   2eb6c:	str	r1, [r4, #24]
   2eb70:	ldrh	r1, [r4, #130]	; 0x82
   2eb74:	ldrh	r2, [r4, #128]	; 0x80
   2eb78:	cmp	r2, r1
   2eb7c:	strhcc	r1, [r4, #128]	; 0x80
   2eb80:	ldrh	r1, [r0, #12]
   2eb84:	sub	r0, r0, #36	; 0x24
   2eb88:	str	r0, [r4, #32]
   2eb8c:	strh	r1, [r4, #130]	; 0x82
   2eb90:	ldr	r0, [r4, #156]	; 0x9c
   2eb94:	sub	r0, r0, #1
   2eb98:	str	r0, [r4, #156]	; 0x9c
   2eb9c:	mov	r0, r5
   2eba0:	pop	{r4, r5, fp, pc}
   2eba4:	movw	r0, #38698	; 0x972a
   2eba8:	movw	r1, #38006	; 0x9476
   2ebac:	movw	r3, #38742	; 0x9756
   2ebb0:	mov	r2, #872	; 0x368
   2ebb4:	movt	r0, #4
   2ebb8:	movt	r1, #4
   2ebbc:	movt	r3, #4
   2ebc0:	bl	14f44 <__assert_fail@plt>

0002ebc4 <flatcc_builder_extend_vector@@Base>:
   2ebc4:	push	{r4, r5, fp, lr}
   2ebc8:	add	fp, sp, #8
   2ebcc:	sub	sp, sp, #8
   2ebd0:	mov	r4, r0
   2ebd4:	ldr	r0, [r0, #32]
   2ebd8:	ldr	r2, [r0, #20]
   2ebdc:	adds	r2, r2, r1
   2ebe0:	bcs	2eca0 <flatcc_builder_extend_vector@@Base+0xdc>
   2ebe4:	ldr	r3, [r0, #24]
   2ebe8:	cmp	r2, r3
   2ebec:	bhi	2eca0 <flatcc_builder_extend_vector@@Base+0xdc>
   2ebf0:	str	r2, [r0, #20]
   2ebf4:	ldr	r2, [r4, #32]
   2ebf8:	ldr	r5, [r4, #20]
   2ebfc:	ldr	r0, [r4, #24]
   2ec00:	ldr	r2, [r2, #16]
   2ec04:	mla	r1, r2, r1, r5
   2ec08:	cmp	r1, r0
   2ec0c:	str	r1, [r4, #20]
   2ec10:	bcs	2ec24 <flatcc_builder_extend_vector@@Base+0x60>
   2ec14:	ldr	r0, [r4, #16]
   2ec18:	add	r0, r0, r5
   2ec1c:	sub	sp, fp, #8
   2ec20:	pop	{r4, r5, fp, pc}
   2ec24:	ldr	r2, [r4, #28]
   2ec28:	ldr	r0, [r4, #40]	; 0x28
   2ec2c:	ldr	ip, [r4, #48]	; 0x30
   2ec30:	mov	r3, #1
   2ec34:	str	r3, [sp]
   2ec38:	mov	r3, #1
   2ec3c:	add	r1, r1, r2
   2ec40:	add	r2, r1, #1
   2ec44:	add	r1, r4, #60	; 0x3c
   2ec48:	blx	ip
   2ec4c:	mov	r1, r0
   2ec50:	mov	r0, #0
   2ec54:	cmp	r1, #0
   2ec58:	beq	2ec64 <flatcc_builder_extend_vector@@Base+0xa0>
   2ec5c:	sub	sp, fp, #8
   2ec60:	pop	{r4, r5, fp, pc}
   2ec64:	ldr	r1, [r4, #28]
   2ec68:	ldr	r0, [r4, #60]	; 0x3c
   2ec6c:	ldr	r3, [r4, #64]	; 0x40
   2ec70:	ldr	r2, [r4, #32]
   2ec74:	add	r0, r0, r1
   2ec78:	sub	r1, r3, r1
   2ec7c:	mvn	r3, #3
   2ec80:	cmn	r1, #4
   2ec84:	str	r0, [r4, #16]
   2ec88:	movcs	r1, r3
   2ec8c:	str	r1, [r4, #24]
   2ec90:	str	r3, [r2, #4]
   2ec94:	add	r0, r0, r5
   2ec98:	sub	sp, fp, #8
   2ec9c:	pop	{r4, r5, fp, pc}
   2eca0:	movw	r0, #42277	; 0xa525
   2eca4:	movw	r1, #38006	; 0x9476
   2eca8:	movw	r3, #42304	; 0xa540
   2ecac:	mov	r2, #892	; 0x37c
   2ecb0:	movt	r0, #4
   2ecb4:	movt	r1, #4
   2ecb8:	movt	r3, #4
   2ecbc:	bl	14f44 <__assert_fail@plt>

0002ecc0 <flatcc_builder_vector_push@@Base>:
   2ecc0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ecc4:	add	fp, sp, #24
   2ecc8:	sub	sp, sp, #8
   2eccc:	mov	r5, r0
   2ecd0:	ldr	r0, [r0, #32]
   2ecd4:	mov	r8, r1
   2ecd8:	ldrh	r1, [r0, #14]
   2ecdc:	cmp	r1, #4
   2ece0:	bne	2edcc <flatcc_builder_vector_push@@Base+0x10c>
   2ece4:	ldr	r1, [r0, #20]
   2ece8:	ldr	r2, [r0, #24]
   2ecec:	cmp	r1, r2
   2ecf0:	bhi	2edec <flatcc_builder_vector_push@@Base+0x12c>
   2ecf4:	add	r1, r1, #1
   2ecf8:	str	r1, [r0, #20]
   2ecfc:	ldr	r1, [r5, #32]
   2ed00:	ldr	r4, [r5, #20]
   2ed04:	ldr	r0, [r5, #24]
   2ed08:	ldr	r6, [r1, #16]
   2ed0c:	add	r1, r4, r6
   2ed10:	cmp	r1, r0
   2ed14:	str	r1, [r5, #20]
   2ed18:	bcs	2ed44 <flatcc_builder_vector_push@@Base+0x84>
   2ed1c:	ldr	r0, [r5, #16]
   2ed20:	adds	r7, r0, r4
   2ed24:	beq	2edbc <flatcc_builder_vector_push@@Base+0xfc>
   2ed28:	mov	r0, r7
   2ed2c:	mov	r1, r8
   2ed30:	mov	r2, r6
   2ed34:	bl	14e60 <memcpy@plt>
   2ed38:	mov	r0, r7
   2ed3c:	sub	sp, fp, #24
   2ed40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ed44:	ldr	r2, [r5, #28]
   2ed48:	ldr	r0, [r5, #40]	; 0x28
   2ed4c:	ldr	r7, [r5, #48]	; 0x30
   2ed50:	mov	r3, #1
   2ed54:	str	r3, [sp]
   2ed58:	mov	r3, #1
   2ed5c:	add	r1, r1, r2
   2ed60:	add	r2, r1, #1
   2ed64:	add	r1, r5, #60	; 0x3c
   2ed68:	blx	r7
   2ed6c:	mov	r7, #0
   2ed70:	cmp	r0, #0
   2ed74:	beq	2ed84 <flatcc_builder_vector_push@@Base+0xc4>
   2ed78:	mov	r0, r7
   2ed7c:	sub	sp, fp, #24
   2ed80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ed84:	ldr	r1, [r5, #28]
   2ed88:	ldr	r0, [r5, #60]	; 0x3c
   2ed8c:	ldr	r3, [r5, #64]	; 0x40
   2ed90:	ldr	r2, [r5, #32]
   2ed94:	add	r0, r0, r1
   2ed98:	sub	r1, r3, r1
   2ed9c:	mvn	r3, #3
   2eda0:	cmn	r1, #4
   2eda4:	str	r0, [r5, #16]
   2eda8:	movcs	r1, r3
   2edac:	str	r1, [r5, #24]
   2edb0:	str	r3, [r2, #4]
   2edb4:	adds	r7, r0, r4
   2edb8:	bne	2ed28 <flatcc_builder_vector_push@@Base+0x68>
   2edbc:	mov	r7, #0
   2edc0:	mov	r0, r7
   2edc4:	sub	sp, fp, #24
   2edc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2edcc:	movw	r0, #38809	; 0x9799
   2edd0:	movw	r1, #38006	; 0x9476
   2edd4:	movw	r3, #38853	; 0x97c5
   2edd8:	movw	r2, #907	; 0x38b
   2eddc:	movt	r0, #4
   2ede0:	movt	r1, #4
   2ede4:	movt	r3, #4
   2ede8:	bl	14f44 <__assert_fail@plt>
   2edec:	movw	r0, #38920	; 0x9808
   2edf0:	movw	r1, #38006	; 0x9476
   2edf4:	movw	r3, #38853	; 0x97c5
   2edf8:	mov	r2, #908	; 0x38c
   2edfc:	movt	r0, #4
   2ee00:	movt	r1, #4
   2ee04:	movt	r3, #4
   2ee08:	bl	14f44 <__assert_fail@plt>

0002ee0c <flatcc_builder_append_vector@@Base>:
   2ee0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2ee10:	add	fp, sp, #24
   2ee14:	sub	sp, sp, #8
   2ee18:	mov	r6, r0
   2ee1c:	ldr	r0, [r0, #32]
   2ee20:	mov	r8, r1
   2ee24:	ldrh	r1, [r0, #14]
   2ee28:	cmp	r1, #4
   2ee2c:	bne	2ef40 <flatcc_builder_append_vector@@Base+0x134>
   2ee30:	ldr	r1, [r0, #20]
   2ee34:	mov	r5, r2
   2ee38:	adds	r1, r1, r2
   2ee3c:	bcs	2ef20 <flatcc_builder_append_vector@@Base+0x114>
   2ee40:	ldr	r2, [r0, #24]
   2ee44:	cmp	r1, r2
   2ee48:	bhi	2ef20 <flatcc_builder_append_vector@@Base+0x114>
   2ee4c:	str	r1, [r0, #20]
   2ee50:	ldr	r1, [r6, #32]
   2ee54:	ldr	r4, [r6, #20]
   2ee58:	ldr	r0, [r6, #24]
   2ee5c:	ldr	r9, [r1, #16]
   2ee60:	mla	r1, r9, r5, r4
   2ee64:	cmp	r1, r0
   2ee68:	str	r1, [r6, #20]
   2ee6c:	bcs	2ee98 <flatcc_builder_append_vector@@Base+0x8c>
   2ee70:	ldr	r0, [r6, #16]
   2ee74:	adds	r7, r0, r4
   2ee78:	beq	2ef10 <flatcc_builder_append_vector@@Base+0x104>
   2ee7c:	mul	r2, r9, r5
   2ee80:	mov	r0, r7
   2ee84:	mov	r1, r8
   2ee88:	bl	14e60 <memcpy@plt>
   2ee8c:	mov	r0, r7
   2ee90:	sub	sp, fp, #24
   2ee94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ee98:	ldr	r2, [r6, #28]
   2ee9c:	ldr	r0, [r6, #40]	; 0x28
   2eea0:	ldr	r7, [r6, #48]	; 0x30
   2eea4:	mov	r3, #1
   2eea8:	str	r3, [sp]
   2eeac:	mov	r3, #1
   2eeb0:	add	r1, r1, r2
   2eeb4:	add	r2, r1, #1
   2eeb8:	add	r1, r6, #60	; 0x3c
   2eebc:	blx	r7
   2eec0:	mov	r7, #0
   2eec4:	cmp	r0, #0
   2eec8:	beq	2eed8 <flatcc_builder_append_vector@@Base+0xcc>
   2eecc:	mov	r0, r7
   2eed0:	sub	sp, fp, #24
   2eed4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2eed8:	ldr	r1, [r6, #28]
   2eedc:	ldr	r0, [r6, #60]	; 0x3c
   2eee0:	ldr	r3, [r6, #64]	; 0x40
   2eee4:	ldr	r2, [r6, #32]
   2eee8:	add	r0, r0, r1
   2eeec:	sub	r1, r3, r1
   2eef0:	mvn	r3, #3
   2eef4:	cmn	r1, #4
   2eef8:	str	r0, [r6, #16]
   2eefc:	movcs	r1, r3
   2ef00:	str	r1, [r6, #24]
   2ef04:	str	r3, [r2, #4]
   2ef08:	adds	r7, r0, r4
   2ef0c:	bne	2ee7c <flatcc_builder_append_vector@@Base+0x70>
   2ef10:	mov	r7, #0
   2ef14:	mov	r0, r7
   2ef18:	sub	sp, fp, #24
   2ef1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ef20:	movw	r0, #42277	; 0xa525
   2ef24:	movw	r1, #38006	; 0x9476
   2ef28:	movw	r3, #42304	; 0xa540
   2ef2c:	mov	r2, #892	; 0x37c
   2ef30:	movt	r0, #4
   2ef34:	movt	r1, #4
   2ef38:	movt	r3, #4
   2ef3c:	bl	14f44 <__assert_fail@plt>
   2ef40:	movw	r0, #38809	; 0x9799
   2ef44:	movw	r1, #38006	; 0x9476
   2ef48:	movw	r3, #38981	; 0x9845
   2ef4c:	movw	r2, #915	; 0x393
   2ef50:	movt	r0, #4
   2ef54:	movt	r1, #4
   2ef58:	movt	r3, #4
   2ef5c:	bl	14f44 <__assert_fail@plt>

0002ef60 <flatcc_builder_extend_offset_vector@@Base>:
   2ef60:	push	{r4, r5, fp, lr}
   2ef64:	add	fp, sp, #8
   2ef68:	sub	sp, sp, #8
   2ef6c:	mov	r4, r0
   2ef70:	ldr	r0, [r0, #32]
   2ef74:	ldr	r2, [r0, #20]
   2ef78:	adds	r2, r2, r1
   2ef7c:	cmpcc	r2, #1073741824	; 0x40000000
   2ef80:	bcc	2efa4 <flatcc_builder_extend_offset_vector@@Base+0x44>
   2ef84:	movw	r0, #42277	; 0xa525
   2ef88:	movw	r1, #38006	; 0x9476
   2ef8c:	movw	r3, #42304	; 0xa540
   2ef90:	mov	r2, #892	; 0x37c
   2ef94:	movt	r0, #4
   2ef98:	movt	r1, #4
   2ef9c:	movt	r3, #4
   2efa0:	bl	14f44 <__assert_fail@plt>
   2efa4:	str	r2, [r0, #20]
   2efa8:	ldr	r5, [r4, #20]
   2efac:	ldr	r0, [r4, #24]
   2efb0:	add	r1, r5, r1, lsl #2
   2efb4:	cmp	r1, r0
   2efb8:	str	r1, [r4, #20]
   2efbc:	bcs	2efd0 <flatcc_builder_extend_offset_vector@@Base+0x70>
   2efc0:	ldr	r0, [r4, #16]
   2efc4:	add	r0, r0, r5
   2efc8:	sub	sp, fp, #8
   2efcc:	pop	{r4, r5, fp, pc}
   2efd0:	ldr	r2, [r4, #28]
   2efd4:	ldr	r0, [r4, #40]	; 0x28
   2efd8:	ldr	ip, [r4, #48]	; 0x30
   2efdc:	mov	r3, #1
   2efe0:	str	r3, [sp]
   2efe4:	mov	r3, #1
   2efe8:	add	r1, r1, r2
   2efec:	add	r2, r1, #1
   2eff0:	add	r1, r4, #60	; 0x3c
   2eff4:	blx	ip
   2eff8:	mov	r1, r0
   2effc:	mov	r0, #0
   2f000:	cmp	r1, #0
   2f004:	beq	2f010 <flatcc_builder_extend_offset_vector@@Base+0xb0>
   2f008:	sub	sp, fp, #8
   2f00c:	pop	{r4, r5, fp, pc}
   2f010:	ldr	r1, [r4, #28]
   2f014:	ldr	r0, [r4, #60]	; 0x3c
   2f018:	ldr	r3, [r4, #64]	; 0x40
   2f01c:	ldr	r2, [r4, #32]
   2f020:	add	r0, r0, r1
   2f024:	sub	r1, r3, r1
   2f028:	mvn	r3, #3
   2f02c:	cmn	r1, #4
   2f030:	str	r0, [r4, #16]
   2f034:	movcs	r1, r3
   2f038:	str	r1, [r4, #24]
   2f03c:	str	r3, [r2, #4]
   2f040:	add	r0, r0, r5
   2f044:	sub	sp, fp, #8
   2f048:	pop	{r4, r5, fp, pc}

0002f04c <flatcc_builder_offset_vector_push@@Base>:
   2f04c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f050:	add	fp, sp, #24
   2f054:	sub	sp, sp, #8
   2f058:	mov	r6, r0
   2f05c:	ldr	r0, [r0, #32]
   2f060:	mov	r8, r1
   2f064:	ldrh	r1, [r0, #14]
   2f068:	cmp	r1, #5
   2f06c:	bne	2f12c <flatcc_builder_offset_vector_push@@Base+0xe0>
   2f070:	ldr	r1, [r0, #20]
   2f074:	mov	r5, #0
   2f078:	cmn	r1, #-1073741823	; 0xc0000001
   2f07c:	beq	2f0d8 <flatcc_builder_offset_vector_push@@Base+0x8c>
   2f080:	add	r1, r1, #1
   2f084:	str	r1, [r0, #20]
   2f088:	ldr	r7, [r6, #20]
   2f08c:	ldr	r0, [r6, #24]
   2f090:	add	r1, r7, #4
   2f094:	cmp	r1, r0
   2f098:	str	r1, [r6, #20]
   2f09c:	bcs	2f0a8 <flatcc_builder_offset_vector_push@@Base+0x5c>
   2f0a0:	ldr	r0, [r6, #16]
   2f0a4:	b	2f114 <flatcc_builder_offset_vector_push@@Base+0xc8>
   2f0a8:	ldr	r1, [r6, #28]
   2f0ac:	ldr	r0, [r6, #40]	; 0x28
   2f0b0:	ldr	r4, [r6, #48]	; 0x30
   2f0b4:	mov	r2, #1
   2f0b8:	mov	r3, #1
   2f0bc:	str	r2, [sp]
   2f0c0:	add	r1, r7, r1
   2f0c4:	add	r2, r1, #5
   2f0c8:	add	r1, r6, #60	; 0x3c
   2f0cc:	blx	r4
   2f0d0:	cmp	r0, #0
   2f0d4:	beq	2f0e4 <flatcc_builder_offset_vector_push@@Base+0x98>
   2f0d8:	mov	r0, r5
   2f0dc:	sub	sp, fp, #24
   2f0e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f0e4:	ldr	r1, [r6, #28]
   2f0e8:	ldr	r0, [r6, #60]	; 0x3c
   2f0ec:	ldr	r3, [r6, #64]	; 0x40
   2f0f0:	ldr	r2, [r6, #32]
   2f0f4:	add	r0, r0, r1
   2f0f8:	sub	r1, r3, r1
   2f0fc:	mvn	r3, #3
   2f100:	cmn	r1, #4
   2f104:	str	r0, [r6, #16]
   2f108:	movcs	r1, r3
   2f10c:	str	r1, [r6, #24]
   2f110:	str	r3, [r2, #4]
   2f114:	adds	r0, r0, r7
   2f118:	movne	r5, r0
   2f11c:	strne	r8, [r0]
   2f120:	mov	r0, r5
   2f124:	sub	sp, fp, #24
   2f128:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f12c:	movw	r0, #39058	; 0x9892
   2f130:	movw	r1, #38006	; 0x9476
   2f134:	movw	r3, #39109	; 0x98c5
   2f138:	movw	r2, #934	; 0x3a6
   2f13c:	movt	r0, #4
   2f140:	movt	r1, #4
   2f144:	movt	r3, #4
   2f148:	bl	14f44 <__assert_fail@plt>

0002f14c <flatcc_builder_append_offset_vector@@Base>:
   2f14c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f150:	add	fp, sp, #24
   2f154:	sub	sp, sp, #8
   2f158:	mov	r6, r0
   2f15c:	ldr	r0, [r0, #32]
   2f160:	mov	r8, r1
   2f164:	ldrh	r1, [r0, #14]
   2f168:	cmp	r1, #5
   2f16c:	bne	2f270 <flatcc_builder_append_offset_vector@@Base+0x124>
   2f170:	ldr	r1, [r0, #20]
   2f174:	mov	r5, r2
   2f178:	adds	r1, r1, r2
   2f17c:	cmpcc	r1, #1073741824	; 0x40000000
   2f180:	bcc	2f1a4 <flatcc_builder_append_offset_vector@@Base+0x58>
   2f184:	movw	r0, #42277	; 0xa525
   2f188:	movw	r1, #38006	; 0x9476
   2f18c:	movw	r3, #42304	; 0xa540
   2f190:	mov	r2, #892	; 0x37c
   2f194:	movt	r0, #4
   2f198:	movt	r1, #4
   2f19c:	movt	r3, #4
   2f1a0:	bl	14f44 <__assert_fail@plt>
   2f1a4:	str	r1, [r0, #20]
   2f1a8:	ldr	r4, [r6, #20]
   2f1ac:	ldr	r0, [r6, #24]
   2f1b0:	add	r1, r4, r5, lsl #2
   2f1b4:	cmp	r1, r0
   2f1b8:	str	r1, [r6, #20]
   2f1bc:	bcs	2f1e8 <flatcc_builder_append_offset_vector@@Base+0x9c>
   2f1c0:	ldr	r0, [r6, #16]
   2f1c4:	adds	r7, r0, r4
   2f1c8:	beq	2f260 <flatcc_builder_append_offset_vector@@Base+0x114>
   2f1cc:	lsl	r2, r5, #2
   2f1d0:	mov	r0, r7
   2f1d4:	mov	r1, r8
   2f1d8:	bl	14e60 <memcpy@plt>
   2f1dc:	mov	r0, r7
   2f1e0:	sub	sp, fp, #24
   2f1e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f1e8:	ldr	r2, [r6, #28]
   2f1ec:	ldr	r0, [r6, #40]	; 0x28
   2f1f0:	ldr	r7, [r6, #48]	; 0x30
   2f1f4:	mov	r3, #1
   2f1f8:	str	r3, [sp]
   2f1fc:	mov	r3, #1
   2f200:	add	r1, r1, r2
   2f204:	add	r2, r1, #1
   2f208:	add	r1, r6, #60	; 0x3c
   2f20c:	blx	r7
   2f210:	mov	r7, #0
   2f214:	cmp	r0, #0
   2f218:	beq	2f228 <flatcc_builder_append_offset_vector@@Base+0xdc>
   2f21c:	mov	r0, r7
   2f220:	sub	sp, fp, #24
   2f224:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f228:	ldr	r1, [r6, #28]
   2f22c:	ldr	r0, [r6, #60]	; 0x3c
   2f230:	ldr	r3, [r6, #64]	; 0x40
   2f234:	ldr	r2, [r6, #32]
   2f238:	add	r0, r0, r1
   2f23c:	sub	r1, r3, r1
   2f240:	mvn	r3, #3
   2f244:	cmn	r1, #4
   2f248:	str	r0, [r6, #16]
   2f24c:	movcs	r1, r3
   2f250:	str	r1, [r6, #24]
   2f254:	str	r3, [r2, #4]
   2f258:	adds	r7, r0, r4
   2f25c:	bne	2f1cc <flatcc_builder_append_offset_vector@@Base+0x80>
   2f260:	mov	r7, #0
   2f264:	mov	r0, r7
   2f268:	sub	sp, fp, #24
   2f26c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f270:	movw	r0, #39058	; 0x9892
   2f274:	movw	r1, #38006	; 0x9476
   2f278:	movw	r3, #39207	; 0x9927
   2f27c:	mov	r2, #948	; 0x3b4
   2f280:	movt	r0, #4
   2f284:	movt	r1, #4
   2f288:	movt	r3, #4
   2f28c:	bl	14f44 <__assert_fail@plt>

0002f290 <flatcc_builder_extend_string@@Base>:
   2f290:	push	{r4, r5, fp, lr}
   2f294:	add	fp, sp, #8
   2f298:	sub	sp, sp, #8
   2f29c:	mov	r4, r0
   2f2a0:	ldr	r0, [r0, #32]
   2f2a4:	ldrh	r2, [r0, #14]
   2f2a8:	cmp	r2, #6
   2f2ac:	bne	2f364 <flatcc_builder_extend_string@@Base+0xd4>
   2f2b0:	ldr	r2, [r0, #20]
   2f2b4:	adds	r2, r2, r1
   2f2b8:	bcs	2f384 <flatcc_builder_extend_string@@Base+0xf4>
   2f2bc:	str	r2, [r0, #20]
   2f2c0:	ldr	r5, [r4, #20]
   2f2c4:	ldr	r0, [r4, #24]
   2f2c8:	add	r1, r5, r1
   2f2cc:	cmp	r1, r0
   2f2d0:	str	r1, [r4, #20]
   2f2d4:	bcs	2f2e8 <flatcc_builder_extend_string@@Base+0x58>
   2f2d8:	ldr	r0, [r4, #16]
   2f2dc:	add	r0, r0, r5
   2f2e0:	sub	sp, fp, #8
   2f2e4:	pop	{r4, r5, fp, pc}
   2f2e8:	ldr	r2, [r4, #28]
   2f2ec:	ldr	r0, [r4, #40]	; 0x28
   2f2f0:	ldr	ip, [r4, #48]	; 0x30
   2f2f4:	mov	r3, #1
   2f2f8:	str	r3, [sp]
   2f2fc:	mov	r3, #1
   2f300:	add	r1, r1, r2
   2f304:	add	r2, r1, #1
   2f308:	add	r1, r4, #60	; 0x3c
   2f30c:	blx	ip
   2f310:	mov	r1, r0
   2f314:	mov	r0, #0
   2f318:	cmp	r1, #0
   2f31c:	beq	2f328 <flatcc_builder_extend_string@@Base+0x98>
   2f320:	sub	sp, fp, #8
   2f324:	pop	{r4, r5, fp, pc}
   2f328:	ldr	r1, [r4, #28]
   2f32c:	ldr	r0, [r4, #60]	; 0x3c
   2f330:	ldr	r3, [r4, #64]	; 0x40
   2f334:	ldr	r2, [r4, #32]
   2f338:	add	r0, r0, r1
   2f33c:	sub	r1, r3, r1
   2f340:	mvn	r3, #3
   2f344:	cmn	r1, #4
   2f348:	str	r0, [r4, #16]
   2f34c:	movcs	r1, r3
   2f350:	str	r1, [r4, #24]
   2f354:	str	r3, [r2, #4]
   2f358:	add	r0, r0, r5
   2f35c:	sub	sp, fp, #8
   2f360:	pop	{r4, r5, fp, pc}
   2f364:	movw	r0, #39323	; 0x999b
   2f368:	movw	r1, #38006	; 0x9476
   2f36c:	movw	r3, #39367	; 0x99c7
   2f370:	movw	r2, #957	; 0x3bd
   2f374:	movt	r0, #4
   2f378:	movt	r1, #4
   2f37c:	movt	r3, #4
   2f380:	bl	14f44 <__assert_fail@plt>
   2f384:	movw	r0, #42277	; 0xa525
   2f388:	movw	r1, #38006	; 0x9476
   2f38c:	movw	r3, #42304	; 0xa540
   2f390:	mov	r2, #892	; 0x37c
   2f394:	movt	r0, #4
   2f398:	movt	r1, #4
   2f39c:	movt	r3, #4
   2f3a0:	bl	14f44 <__assert_fail@plt>

0002f3a4 <flatcc_builder_append_string@@Base>:
   2f3a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f3a8:	add	fp, sp, #24
   2f3ac:	sub	sp, sp, #8
   2f3b0:	mov	r6, r0
   2f3b4:	ldr	r0, [r0, #32]
   2f3b8:	mov	r8, r1
   2f3bc:	ldrh	r1, [r0, #14]
   2f3c0:	cmp	r1, #6
   2f3c4:	bne	2f4a4 <flatcc_builder_append_string@@Base+0x100>
   2f3c8:	ldr	r1, [r0, #20]
   2f3cc:	mov	r4, r2
   2f3d0:	adds	r1, r1, r2
   2f3d4:	bcs	2f4c4 <flatcc_builder_append_string@@Base+0x120>
   2f3d8:	str	r1, [r0, #20]
   2f3dc:	ldr	r5, [r6, #20]
   2f3e0:	ldr	r0, [r6, #24]
   2f3e4:	add	r1, r5, r4
   2f3e8:	cmp	r1, r0
   2f3ec:	str	r1, [r6, #20]
   2f3f0:	bcs	2f41c <flatcc_builder_append_string@@Base+0x78>
   2f3f4:	ldr	r0, [r6, #16]
   2f3f8:	adds	r7, r0, r5
   2f3fc:	beq	2f494 <flatcc_builder_append_string@@Base+0xf0>
   2f400:	mov	r0, r7
   2f404:	mov	r1, r8
   2f408:	mov	r2, r4
   2f40c:	bl	14e60 <memcpy@plt>
   2f410:	mov	r0, r7
   2f414:	sub	sp, fp, #24
   2f418:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f41c:	ldr	r2, [r6, #28]
   2f420:	ldr	r0, [r6, #40]	; 0x28
   2f424:	ldr	r7, [r6, #48]	; 0x30
   2f428:	mov	r3, #1
   2f42c:	str	r3, [sp]
   2f430:	mov	r3, #1
   2f434:	add	r1, r1, r2
   2f438:	add	r2, r1, #1
   2f43c:	add	r1, r6, #60	; 0x3c
   2f440:	blx	r7
   2f444:	mov	r7, #0
   2f448:	cmp	r0, #0
   2f44c:	beq	2f45c <flatcc_builder_append_string@@Base+0xb8>
   2f450:	mov	r0, r7
   2f454:	sub	sp, fp, #24
   2f458:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f45c:	ldr	r1, [r6, #28]
   2f460:	ldr	r0, [r6, #60]	; 0x3c
   2f464:	ldr	r3, [r6, #64]	; 0x40
   2f468:	ldr	r2, [r6, #32]
   2f46c:	add	r0, r0, r1
   2f470:	sub	r1, r3, r1
   2f474:	mvn	r3, #3
   2f478:	cmn	r1, #4
   2f47c:	str	r0, [r6, #16]
   2f480:	movcs	r1, r3
   2f484:	str	r1, [r6, #24]
   2f488:	str	r3, [r2, #4]
   2f48c:	adds	r7, r0, r5
   2f490:	bne	2f400 <flatcc_builder_append_string@@Base+0x5c>
   2f494:	mov	r7, #0
   2f498:	mov	r0, r7
   2f49c:	sub	sp, fp, #24
   2f4a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f4a4:	movw	r0, #39323	; 0x999b
   2f4a8:	movw	r1, #38006	; 0x9476
   2f4ac:	movw	r3, #39430	; 0x9a06
   2f4b0:	movw	r2, #966	; 0x3c6
   2f4b4:	movt	r0, #4
   2f4b8:	movt	r1, #4
   2f4bc:	movt	r3, #4
   2f4c0:	bl	14f44 <__assert_fail@plt>
   2f4c4:	movw	r0, #42277	; 0xa525
   2f4c8:	movw	r1, #38006	; 0x9476
   2f4cc:	movw	r3, #42304	; 0xa540
   2f4d0:	mov	r2, #892	; 0x37c
   2f4d4:	movt	r0, #4
   2f4d8:	movt	r1, #4
   2f4dc:	movt	r3, #4
   2f4e0:	bl	14f44 <__assert_fail@plt>

0002f4e4 <flatcc_builder_append_string_str@@Base>:
   2f4e4:	push	{r4, r5, fp, lr}
   2f4e8:	add	fp, sp, #8
   2f4ec:	mov	r5, r0
   2f4f0:	mov	r0, r1
   2f4f4:	mov	r4, r1
   2f4f8:	bl	14ecc <strlen@plt>
   2f4fc:	mov	r2, r0
   2f500:	mov	r0, r5
   2f504:	mov	r1, r4
   2f508:	pop	{r4, r5, fp, lr}
   2f50c:	b	2f3a4 <flatcc_builder_append_string@@Base>

0002f510 <flatcc_builder_append_string_strn@@Base>:
   2f510:	push	{r4, r5, r6, sl, fp, lr}
   2f514:	add	fp, sp, #16
   2f518:	mov	r6, r0
   2f51c:	mov	r5, r1
   2f520:	mov	r0, r1
   2f524:	mov	r1, #0
   2f528:	mov	r4, r2
   2f52c:	bl	14f14 <memchr@plt>
   2f530:	cmp	r0, #0
   2f534:	mov	r1, r5
   2f538:	subne	r4, r0, r5
   2f53c:	mov	r0, r6
   2f540:	mov	r2, r4
   2f544:	pop	{r4, r5, r6, sl, fp, lr}
   2f548:	b	2f3a4 <flatcc_builder_append_string@@Base>

0002f54c <flatcc_builder_truncate_vector@@Base>:
   2f54c:	push	{fp, lr}
   2f550:	mov	fp, sp
   2f554:	ldr	r2, [r0, #32]
   2f558:	ldrh	r3, [r2, #14]
   2f55c:	cmp	r3, #4
   2f560:	bne	2f5a8 <flatcc_builder_truncate_vector@@Base+0x5c>
   2f564:	ldr	r3, [r2, #20]
   2f568:	cmp	r3, r1
   2f56c:	bcc	2f5c8 <flatcc_builder_truncate_vector@@Base+0x7c>
   2f570:	sub	r3, r3, r1
   2f574:	str	r3, [r2, #20]
   2f578:	ldr	r2, [r0, #32]
   2f57c:	ldr	r3, [r0, #20]
   2f580:	ldr	ip, [r0, #16]
   2f584:	ldr	r2, [r2, #16]
   2f588:	mls	r3, r2, r1, r3
   2f58c:	mul	r2, r2, r1
   2f590:	mov	r1, #0
   2f594:	str	r3, [r0, #20]
   2f598:	add	r0, ip, r3
   2f59c:	bl	14ef0 <memset@plt>
   2f5a0:	mov	r0, #0
   2f5a4:	pop	{fp, pc}
   2f5a8:	movw	r0, #38809	; 0x9799
   2f5ac:	movw	r1, #38006	; 0x9476
   2f5b0:	movw	r3, #39507	; 0x9a53
   2f5b4:	movw	r2, #985	; 0x3d9
   2f5b8:	movt	r0, #4
   2f5bc:	movt	r1, #4
   2f5c0:	movt	r3, #4
   2f5c4:	bl	14f44 <__assert_fail@plt>
   2f5c8:	movw	r0, #39570	; 0x9a92
   2f5cc:	movw	r1, #38006	; 0x9476
   2f5d0:	movw	r3, #39507	; 0x9a53
   2f5d4:	movw	r2, #986	; 0x3da
   2f5d8:	movt	r0, #4
   2f5dc:	movt	r1, #4
   2f5e0:	movt	r3, #4
   2f5e4:	bl	14f44 <__assert_fail@plt>

0002f5e8 <flatcc_builder_truncate_offset_vector@@Base>:
   2f5e8:	push	{fp, lr}
   2f5ec:	mov	fp, sp
   2f5f0:	ldr	r2, [r0, #32]
   2f5f4:	ldrh	r3, [r2, #14]
   2f5f8:	cmp	r3, #5
   2f5fc:	bne	2f644 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2f600:	ldr	r3, [r2, #20]
   2f604:	cmp	r3, r1
   2f608:	bcc	2f664 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   2f60c:	sub	r3, r3, r1
   2f610:	str	r3, [r2, #20]
   2f614:	ldr	r2, [r0, #32]
   2f618:	ldr	r3, [r0, #20]
   2f61c:	ldr	ip, [r0, #16]
   2f620:	ldr	r2, [r2, #16]
   2f624:	mls	r3, r2, r1, r3
   2f628:	mul	r2, r2, r1
   2f62c:	mov	r1, #0
   2f630:	str	r3, [r0, #20]
   2f634:	add	r0, ip, r3
   2f638:	bl	14ef0 <memset@plt>
   2f63c:	mov	r0, #0
   2f640:	pop	{fp, pc}
   2f644:	movw	r0, #39058	; 0x9892
   2f648:	movw	r1, #38006	; 0x9476
   2f64c:	movw	r3, #39606	; 0x9ab6
   2f650:	movw	r2, #994	; 0x3e2
   2f654:	movt	r0, #4
   2f658:	movt	r1, #4
   2f65c:	movt	r3, #4
   2f660:	bl	14f44 <__assert_fail@plt>
   2f664:	movw	r0, #39676	; 0x9afc
   2f668:	movw	r1, #38006	; 0x9476
   2f66c:	movw	r3, #39606	; 0x9ab6
   2f670:	movw	r2, #995	; 0x3e3
   2f674:	movt	r0, #4
   2f678:	movt	r1, #4
   2f67c:	movt	r3, #4
   2f680:	bl	14f44 <__assert_fail@plt>

0002f684 <flatcc_builder_truncate_string@@Base>:
   2f684:	push	{fp, lr}
   2f688:	mov	fp, sp
   2f68c:	mov	r2, r1
   2f690:	ldr	r1, [r0, #32]
   2f694:	ldrh	r3, [r1, #14]
   2f698:	cmp	r3, #6
   2f69c:	bne	2f6d8 <flatcc_builder_truncate_string@@Base+0x54>
   2f6a0:	ldr	r3, [r1, #20]
   2f6a4:	cmp	r3, r2
   2f6a8:	bcc	2f6f8 <flatcc_builder_truncate_string@@Base+0x74>
   2f6ac:	sub	r3, r3, r2
   2f6b0:	str	r3, [r1, #20]
   2f6b4:	ldr	r3, [r0, #20]
   2f6b8:	ldr	r1, [r0, #16]
   2f6bc:	sub	r3, r3, r2
   2f6c0:	str	r3, [r0, #20]
   2f6c4:	add	r0, r1, r3
   2f6c8:	mov	r1, #0
   2f6cc:	bl	14ef0 <memset@plt>
   2f6d0:	mov	r0, #0
   2f6d4:	pop	{fp, pc}
   2f6d8:	movw	r0, #39323	; 0x999b
   2f6dc:	movw	r1, #38006	; 0x9476
   2f6e0:	movw	r3, #39735	; 0x9b37
   2f6e4:	movw	r2, #1003	; 0x3eb
   2f6e8:	movt	r0, #4
   2f6ec:	movt	r1, #4
   2f6f0:	movt	r3, #4
   2f6f4:	bl	14f44 <__assert_fail@plt>
   2f6f8:	movw	r0, #39798	; 0x9b76
   2f6fc:	movw	r1, #38006	; 0x9476
   2f700:	movw	r3, #39735	; 0x9b37
   2f704:	mov	r2, #1004	; 0x3ec
   2f708:	movt	r0, #4
   2f70c:	movt	r1, #4
   2f710:	movt	r3, #4
   2f714:	bl	14f44 <__assert_fail@plt>

0002f718 <flatcc_builder_start_vector@@Base>:
   2f718:	push	{r4, r5, r6, r7, fp, lr}
   2f71c:	add	fp, sp, #16
   2f720:	mov	r7, #4
   2f724:	cmp	r2, #4
   2f728:	mov	r6, r1
   2f72c:	mov	r5, r3
   2f730:	mov	r4, r0
   2f734:	movls	r2, r7
   2f738:	mov	r1, r2
   2f73c:	bl	2e794 <flatcc_builder_start_buffer@@Base+0xbc>
   2f740:	mov	r1, r0
   2f744:	mvn	r0, #0
   2f748:	cmp	r1, #0
   2f74c:	popne	{r4, r5, r6, r7, fp, pc}
   2f750:	ldr	r0, [r4, #32]
   2f754:	str	r6, [r0, #16]
   2f758:	mov	r0, #0
   2f75c:	ldr	r1, [r4, #32]
   2f760:	str	r0, [r1, #20]
   2f764:	ldr	r1, [r4, #32]
   2f768:	str	r5, [r1, #24]
   2f76c:	ldr	r1, [r4, #32]
   2f770:	strh	r7, [r1, #14]
   2f774:	ldr	r2, [r4, #28]
   2f778:	ldr	r3, [r4, #60]	; 0x3c
   2f77c:	ldr	r7, [r4, #64]	; 0x40
   2f780:	add	r3, r3, r2
   2f784:	sub	r2, r7, r2
   2f788:	str	r3, [r4, #16]
   2f78c:	mvn	r3, #3
   2f790:	cmn	r2, #4
   2f794:	movcs	r2, r3
   2f798:	str	r2, [r4, #24]
   2f79c:	str	r3, [r1, #4]
   2f7a0:	pop	{r4, r5, r6, r7, fp, pc}

0002f7a4 <flatcc_builder_start_offset_vector@@Base>:
   2f7a4:	push	{r4, r5, fp, lr}
   2f7a8:	add	fp, sp, #8
   2f7ac:	mov	r1, #4
   2f7b0:	mov	r4, r0
   2f7b4:	mov	r5, #4
   2f7b8:	bl	2e794 <flatcc_builder_start_buffer@@Base+0xbc>
   2f7bc:	mov	r1, r0
   2f7c0:	mvn	r0, #0
   2f7c4:	cmp	r1, #0
   2f7c8:	popne	{r4, r5, fp, pc}
   2f7cc:	ldr	r0, [r4, #32]
   2f7d0:	mov	r2, #5
   2f7d4:	str	r5, [r0, #16]
   2f7d8:	mov	r0, #0
   2f7dc:	ldr	r1, [r4, #32]
   2f7e0:	str	r0, [r1, #20]
   2f7e4:	ldr	r1, [r4, #32]
   2f7e8:	strh	r2, [r1, #14]
   2f7ec:	ldr	r2, [r4, #28]
   2f7f0:	ldr	r3, [r4, #60]	; 0x3c
   2f7f4:	ldr	r5, [r4, #64]	; 0x40
   2f7f8:	add	r3, r3, r2
   2f7fc:	sub	r2, r5, r2
   2f800:	str	r3, [r4, #16]
   2f804:	mvn	r3, #3
   2f808:	cmn	r2, #4
   2f80c:	movcs	r2, r3
   2f810:	str	r2, [r4, #24]
   2f814:	str	r3, [r1, #4]
   2f818:	pop	{r4, r5, fp, pc}

0002f81c <flatcc_builder_create_offset_vector@@Base>:
   2f81c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f820:	add	fp, sp, #24
   2f824:	sub	sp, sp, #8
   2f828:	mov	r8, r1
   2f82c:	mov	r1, #4
   2f830:	mov	r6, r2
   2f834:	mov	r4, r0
   2f838:	mov	r5, #4
   2f83c:	bl	2e794 <flatcc_builder_start_buffer@@Base+0xbc>
   2f840:	mov	r7, #0
   2f844:	cmp	r0, #0
   2f848:	beq	2f858 <flatcc_builder_create_offset_vector@@Base+0x3c>
   2f84c:	mov	r0, r7
   2f850:	sub	sp, fp, #24
   2f854:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f858:	ldr	r0, [r4, #32]
   2f85c:	mov	r1, #0
   2f860:	str	r5, [r0, #16]
   2f864:	ldr	r0, [r4, #32]
   2f868:	str	r1, [r0, #20]
   2f86c:	mov	r1, #5
   2f870:	ldr	r0, [r4, #32]
   2f874:	strh	r1, [r0, #14]
   2f878:	ldr	r1, [r4, #28]
   2f87c:	ldr	r2, [r4, #60]	; 0x3c
   2f880:	ldr	r3, [r4, #64]	; 0x40
   2f884:	add	r2, r2, r1
   2f888:	sub	r1, r3, r1
   2f88c:	str	r2, [r4, #16]
   2f890:	mvn	r2, #3
   2f894:	cmn	r1, #4
   2f898:	movcs	r1, r2
   2f89c:	str	r1, [r4, #24]
   2f8a0:	str	r2, [r0, #4]
   2f8a4:	ldr	r1, [r0, #20]
   2f8a8:	adds	r1, r1, r6
   2f8ac:	cmpcc	r1, #1073741824	; 0x40000000
   2f8b0:	bcc	2f8d4 <flatcc_builder_create_offset_vector@@Base+0xb8>
   2f8b4:	movw	r0, #42277	; 0xa525
   2f8b8:	movw	r1, #38006	; 0x9476
   2f8bc:	movw	r3, #42304	; 0xa540
   2f8c0:	mov	r2, #892	; 0x37c
   2f8c4:	movt	r0, #4
   2f8c8:	movt	r1, #4
   2f8cc:	movt	r3, #4
   2f8d0:	bl	14f44 <__assert_fail@plt>
   2f8d4:	str	r1, [r0, #20]
   2f8d8:	ldr	r5, [r4, #20]
   2f8dc:	ldr	r0, [r4, #24]
   2f8e0:	add	r1, r5, r6, lsl #2
   2f8e4:	cmp	r1, r0
   2f8e8:	str	r1, [r4, #20]
   2f8ec:	bcs	2f9c0 <flatcc_builder_create_offset_vector@@Base+0x1a4>
   2f8f0:	ldr	r0, [r4, #16]
   2f8f4:	adds	r0, r0, r5
   2f8f8:	beq	2fa2c <flatcc_builder_create_offset_vector@@Base+0x210>
   2f8fc:	lsl	r2, r6, #2
   2f900:	mov	r1, r8
   2f904:	bl	14e60 <memcpy@plt>
   2f908:	ldr	r0, [r4, #32]
   2f90c:	ldrh	r1, [r0, #14]
   2f910:	cmp	r1, #5
   2f914:	bne	2fa3c <flatcc_builder_create_offset_vector@@Base+0x220>
   2f918:	ldr	r2, [r0, #20]
   2f91c:	ldr	r1, [r4, #16]
   2f920:	mov	r0, r4
   2f924:	mov	r3, #0
   2f928:	mov	r7, #0
   2f92c:	bl	30aa4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2f930:	cmp	r0, #0
   2f934:	beq	2f84c <flatcc_builder_create_offset_vector@@Base+0x30>
   2f938:	mov	r5, r0
   2f93c:	ldr	r0, [r4, #16]
   2f940:	ldr	r2, [r4, #20]
   2f944:	mov	r1, #0
   2f948:	bl	14ef0 <memset@plt>
   2f94c:	ldr	r0, [r4, #32]
   2f950:	ldr	r1, [r4, #60]	; 0x3c
   2f954:	ldr	r2, [r4, #64]	; 0x40
   2f958:	ldr	r3, [r0, #8]
   2f95c:	str	r3, [r4, #20]
   2f960:	ldr	r3, [r0]
   2f964:	str	r3, [r4, #28]
   2f968:	add	r1, r1, r3
   2f96c:	ldr	r7, [r0, #4]
   2f970:	str	r1, [r4, #16]
   2f974:	sub	r1, r2, r3
   2f978:	cmp	r1, r7
   2f97c:	movhi	r1, r7
   2f980:	mov	r7, r5
   2f984:	str	r1, [r4, #24]
   2f988:	ldrh	r1, [r4, #130]	; 0x82
   2f98c:	ldrh	r2, [r4, #128]	; 0x80
   2f990:	cmp	r2, r1
   2f994:	strhcc	r1, [r4, #128]	; 0x80
   2f998:	ldrh	r1, [r0, #12]
   2f99c:	sub	r0, r0, #36	; 0x24
   2f9a0:	str	r0, [r4, #32]
   2f9a4:	strh	r1, [r4, #130]	; 0x82
   2f9a8:	ldr	r0, [r4, #156]	; 0x9c
   2f9ac:	sub	r0, r0, #1
   2f9b0:	str	r0, [r4, #156]	; 0x9c
   2f9b4:	mov	r0, r7
   2f9b8:	sub	sp, fp, #24
   2f9bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f9c0:	ldr	r2, [r4, #28]
   2f9c4:	ldr	r0, [r4, #40]	; 0x28
   2f9c8:	ldr	r7, [r4, #48]	; 0x30
   2f9cc:	mov	r3, #1
   2f9d0:	str	r3, [sp]
   2f9d4:	mov	r3, #1
   2f9d8:	add	r1, r1, r2
   2f9dc:	add	r2, r1, #1
   2f9e0:	add	r1, r4, #60	; 0x3c
   2f9e4:	blx	r7
   2f9e8:	mov	r7, #0
   2f9ec:	cmp	r0, #0
   2f9f0:	bne	2f84c <flatcc_builder_create_offset_vector@@Base+0x30>
   2f9f4:	ldr	r1, [r4, #28]
   2f9f8:	ldr	r0, [r4, #60]	; 0x3c
   2f9fc:	ldr	r3, [r4, #64]	; 0x40
   2fa00:	ldr	r2, [r4, #32]
   2fa04:	add	r0, r0, r1
   2fa08:	sub	r1, r3, r1
   2fa0c:	mvn	r3, #3
   2fa10:	cmn	r1, #4
   2fa14:	str	r0, [r4, #16]
   2fa18:	movcs	r1, r3
   2fa1c:	str	r1, [r4, #24]
   2fa20:	str	r3, [r2, #4]
   2fa24:	adds	r0, r0, r5
   2fa28:	bne	2f8fc <flatcc_builder_create_offset_vector@@Base+0xe0>
   2fa2c:	mov	r7, #0
   2fa30:	mov	r0, r7
   2fa34:	sub	sp, fp, #24
   2fa38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fa3c:	movw	r0, #39058	; 0x9892
   2fa40:	movw	r1, #38006	; 0x9476
   2fa44:	movw	r3, #40641	; 0x9ec1
   2fa48:	movw	r2, #1480	; 0x5c8
   2fa4c:	movt	r0, #4
   2fa50:	movt	r1, #4
   2fa54:	movt	r3, #4
   2fa58:	bl	14f44 <__assert_fail@plt>

0002fa5c <flatcc_builder_end_offset_vector@@Base>:
   2fa5c:	push	{r4, r5, fp, lr}
   2fa60:	add	fp, sp, #8
   2fa64:	mov	r4, r0
   2fa68:	ldr	r0, [r0, #32]
   2fa6c:	ldrh	r1, [r0, #14]
   2fa70:	cmp	r1, #5
   2fa74:	bne	2fb14 <flatcc_builder_end_offset_vector@@Base+0xb8>
   2fa78:	ldr	r2, [r0, #20]
   2fa7c:	ldr	r1, [r4, #16]
   2fa80:	mov	r0, r4
   2fa84:	mov	r3, #0
   2fa88:	bl	30aa4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2fa8c:	mov	r5, r0
   2fa90:	cmp	r0, #0
   2fa94:	beq	2fb0c <flatcc_builder_end_offset_vector@@Base+0xb0>
   2fa98:	ldr	r0, [r4, #16]
   2fa9c:	ldr	r2, [r4, #20]
   2faa0:	mov	r1, #0
   2faa4:	bl	14ef0 <memset@plt>
   2faa8:	ldr	r0, [r4, #32]
   2faac:	ldr	r1, [r4, #60]	; 0x3c
   2fab0:	ldr	ip, [r4, #64]	; 0x40
   2fab4:	ldr	r3, [r0, #8]
   2fab8:	str	r3, [r4, #20]
   2fabc:	ldr	r3, [r0]
   2fac0:	str	r3, [r4, #28]
   2fac4:	add	r1, r1, r3
   2fac8:	ldr	r2, [r0, #4]
   2facc:	str	r1, [r4, #16]
   2fad0:	sub	r1, ip, r3
   2fad4:	cmp	r1, r2
   2fad8:	movhi	r1, r2
   2fadc:	str	r1, [r4, #24]
   2fae0:	ldrh	r1, [r4, #130]	; 0x82
   2fae4:	ldrh	r2, [r4, #128]	; 0x80
   2fae8:	cmp	r2, r1
   2faec:	strhcc	r1, [r4, #128]	; 0x80
   2faf0:	ldrh	r1, [r0, #12]
   2faf4:	sub	r0, r0, #36	; 0x24
   2faf8:	str	r0, [r4, #32]
   2fafc:	strh	r1, [r4, #130]	; 0x82
   2fb00:	ldr	r0, [r4, #156]	; 0x9c
   2fb04:	sub	r0, r0, #1
   2fb08:	str	r0, [r4, #156]	; 0x9c
   2fb0c:	mov	r0, r5
   2fb10:	pop	{r4, r5, fp, pc}
   2fb14:	movw	r0, #39058	; 0x9892
   2fb18:	movw	r1, #38006	; 0x9476
   2fb1c:	movw	r3, #40641	; 0x9ec1
   2fb20:	movw	r2, #1480	; 0x5c8
   2fb24:	movt	r0, #4
   2fb28:	movt	r1, #4
   2fb2c:	movt	r3, #4
   2fb30:	bl	14f44 <__assert_fail@plt>

0002fb34 <flatcc_builder_start_string@@Base>:
   2fb34:	push	{r4, r5, fp, lr}
   2fb38:	add	fp, sp, #8
   2fb3c:	mov	r1, #1
   2fb40:	mov	r4, r0
   2fb44:	mov	r5, #1
   2fb48:	bl	2e794 <flatcc_builder_start_buffer@@Base+0xbc>
   2fb4c:	mov	r1, r0
   2fb50:	mvn	r0, #0
   2fb54:	cmp	r1, #0
   2fb58:	popne	{r4, r5, fp, pc}
   2fb5c:	ldr	r0, [r4, #32]
   2fb60:	mov	r2, #6
   2fb64:	str	r5, [r0, #16]
   2fb68:	mov	r0, #0
   2fb6c:	ldr	r1, [r4, #32]
   2fb70:	str	r0, [r1, #20]
   2fb74:	ldr	r1, [r4, #32]
   2fb78:	strh	r2, [r1, #14]
   2fb7c:	ldr	r2, [r4, #28]
   2fb80:	ldr	r3, [r4, #60]	; 0x3c
   2fb84:	ldr	r5, [r4, #64]	; 0x40
   2fb88:	add	r3, r3, r2
   2fb8c:	sub	r2, r5, r2
   2fb90:	str	r3, [r4, #16]
   2fb94:	mvn	r3, #3
   2fb98:	cmn	r2, #4
   2fb9c:	movcs	r2, r3
   2fba0:	str	r2, [r4, #24]
   2fba4:	str	r3, [r1, #4]
   2fba8:	pop	{r4, r5, fp, pc}

0002fbac <flatcc_builder_reserve_table@@Base>:
   2fbac:	push	{r4, r5, r6, sl, fp, lr}
   2fbb0:	add	fp, sp, #16
   2fbb4:	sub	sp, sp, #8
   2fbb8:	cmn	r1, #1
   2fbbc:	ble	2fc90 <flatcc_builder_reserve_table@@Base+0xe4>
   2fbc0:	mov	r4, r0
   2fbc4:	ldr	r0, [r0, #32]
   2fbc8:	mov	r5, r1
   2fbcc:	ldr	r1, [r4, #56]	; 0x38
   2fbd0:	ldrh	r2, [r0, #28]
   2fbd4:	ldr	r0, [r0, #16]
   2fbd8:	add	r6, r0, r2, lsl #1
   2fbdc:	add	r0, r6, r5, lsl #1
   2fbe0:	add	r2, r0, #4
   2fbe4:	cmp	r2, r1
   2fbe8:	bls	2fc10 <flatcc_builder_reserve_table@@Base+0x64>
   2fbec:	ldr	r0, [r4, #40]	; 0x28
   2fbf0:	ldr	ip, [r4, #48]	; 0x30
   2fbf4:	mov	r3, #0
   2fbf8:	add	r1, r4, #52	; 0x34
   2fbfc:	str	r3, [sp]
   2fc00:	mov	r3, #1
   2fc04:	blx	ip
   2fc08:	cmp	r0, #0
   2fc0c:	bne	2fcb0 <flatcc_builder_reserve_table@@Base+0x104>
   2fc10:	ldr	r0, [r4, #52]	; 0x34
   2fc14:	adds	r0, r0, r6
   2fc18:	str	r0, [r4, #4]
   2fc1c:	mvneq	r0, #0
   2fc20:	subeq	sp, fp, #16
   2fc24:	popeq	{r4, r5, r6, sl, fp, pc}
   2fc28:	add	r0, r0, #4
   2fc2c:	lsl	r1, r5, #1
   2fc30:	str	r0, [r4, #4]
   2fc34:	ldr	r0, [r4, #32]
   2fc38:	ldr	r3, [r4, #80]	; 0x50
   2fc3c:	ldr	r5, [r0, #20]
   2fc40:	orr	r0, r1, #1
   2fc44:	add	r2, r5, r0
   2fc48:	cmp	r2, r3
   2fc4c:	bls	2fc74 <flatcc_builder_reserve_table@@Base+0xc8>
   2fc50:	ldr	r0, [r4, #40]	; 0x28
   2fc54:	ldr	r6, [r4, #48]	; 0x30
   2fc58:	mov	r3, #3
   2fc5c:	add	r1, r4, #76	; 0x4c
   2fc60:	str	r3, [sp]
   2fc64:	mov	r3, #0
   2fc68:	blx	r6
   2fc6c:	cmp	r0, #0
   2fc70:	bne	2fcb0 <flatcc_builder_reserve_table@@Base+0x104>
   2fc74:	ldr	r0, [r4, #76]	; 0x4c
   2fc78:	adds	r0, r0, r5
   2fc7c:	str	r0, [r4]
   2fc80:	mov	r0, #0
   2fc84:	mvneq	r0, #0
   2fc88:	sub	sp, fp, #16
   2fc8c:	pop	{r4, r5, r6, sl, fp, pc}
   2fc90:	movw	r0, #39897	; 0x9bd9
   2fc94:	movw	r1, #38006	; 0x9476
   2fc98:	movw	r3, #39832	; 0x9b98
   2fc9c:	movw	r2, #1065	; 0x429
   2fca0:	movt	r0, #4
   2fca4:	movt	r1, #4
   2fca8:	movt	r3, #4
   2fcac:	bl	14f44 <__assert_fail@plt>
   2fcb0:	movw	r0, #42524	; 0xa61c
   2fcb4:	movw	r1, #38006	; 0x9476
   2fcb8:	movw	r3, #42070	; 0xa456
   2fcbc:	mov	r2, #308	; 0x134
   2fcc0:	movt	r0, #4
   2fcc4:	movt	r1, #4
   2fcc8:	movt	r3, #4
   2fccc:	bl	14f44 <__assert_fail@plt>

0002fcd0 <flatcc_builder_start_table@@Base>:
   2fcd0:	push	{r4, r5, r6, r7, fp, lr}
   2fcd4:	add	fp, sp, #16
   2fcd8:	sub	sp, sp, #8
   2fcdc:	mov	r6, r1
   2fce0:	mov	r1, #4
   2fce4:	mov	r4, r0
   2fce8:	bl	2e794 <flatcc_builder_start_buffer@@Base+0xbc>
   2fcec:	mvn	r5, #0
   2fcf0:	cmp	r0, #0
   2fcf4:	beq	2fd04 <flatcc_builder_start_table@@Base+0x34>
   2fcf8:	mov	r0, r5
   2fcfc:	sub	sp, fp, #16
   2fd00:	pop	{r4, r5, r6, r7, fp, pc}
   2fd04:	mov	r1, r4
   2fd08:	ldr	r2, [r4, #4]
   2fd0c:	ldr	r3, [r4, #32]
   2fd10:	ldr	r0, [r1, #52]!	; 0x34
   2fd14:	sub	r0, r2, r0
   2fd18:	str	r0, [r3, #16]
   2fd1c:	ldr	r0, [r4]
   2fd20:	ldr	r3, [r4, #76]	; 0x4c
   2fd24:	ldr	r2, [r4, #32]
   2fd28:	sub	r0, r0, r3
   2fd2c:	mov	r3, #0
   2fd30:	str	r0, [r2, #20]
   2fd34:	ldr	r0, [r4, #12]
   2fd38:	ldr	r2, [r4, #32]
   2fd3c:	str	r0, [r2, #24]
   2fd40:	ldr	r0, [r4, #32]
   2fd44:	ldrh	r2, [r4, #8]
   2fd48:	strh	r2, [r0, #28]
   2fd4c:	movw	r0, #15186	; 0x3b52
   2fd50:	strh	r3, [r4, #8]
   2fd54:	mov	r2, #3
   2fd58:	movt	r0, #12137	; 0x2f69
   2fd5c:	str	r0, [r4, #12]
   2fd60:	ldr	r0, [r4, #32]
   2fd64:	strh	r2, [r0, #14]
   2fd68:	ldrh	r2, [r0, #28]
   2fd6c:	ldr	r0, [r0, #16]
   2fd70:	add	r7, r0, r2, lsl #1
   2fd74:	add	r0, r7, r6, lsl #1
   2fd78:	add	r2, r0, #4
   2fd7c:	ldr	r0, [r4, #56]	; 0x38
   2fd80:	cmp	r2, r0
   2fd84:	bls	2fda4 <flatcc_builder_start_table@@Base+0xd4>
   2fd88:	ldr	r0, [r4, #40]	; 0x28
   2fd8c:	ldr	ip, [r4, #48]	; 0x30
   2fd90:	str	r3, [sp]
   2fd94:	mov	r3, #1
   2fd98:	blx	ip
   2fd9c:	cmp	r0, #0
   2fda0:	bne	2fe50 <flatcc_builder_start_table@@Base+0x180>
   2fda4:	ldr	r0, [r4, #52]	; 0x34
   2fda8:	adds	r0, r0, r7
   2fdac:	str	r0, [r4, #4]
   2fdb0:	beq	2fcf8 <flatcc_builder_start_table@@Base+0x28>
   2fdb4:	add	r0, r0, #4
   2fdb8:	lsl	r1, r6, #1
   2fdbc:	str	r0, [r4, #4]
   2fdc0:	ldr	r0, [r4, #32]
   2fdc4:	ldr	r3, [r4, #80]	; 0x50
   2fdc8:	ldr	r6, [r0, #20]
   2fdcc:	orr	r0, r1, #1
   2fdd0:	add	r2, r6, r0
   2fdd4:	cmp	r2, r3
   2fdd8:	bls	2fe00 <flatcc_builder_start_table@@Base+0x130>
   2fddc:	ldr	r0, [r4, #40]	; 0x28
   2fde0:	ldr	r7, [r4, #48]	; 0x30
   2fde4:	mov	r3, #3
   2fde8:	add	r1, r4, #76	; 0x4c
   2fdec:	str	r3, [sp]
   2fdf0:	mov	r3, #0
   2fdf4:	blx	r7
   2fdf8:	cmp	r0, #0
   2fdfc:	bne	2fe50 <flatcc_builder_start_table@@Base+0x180>
   2fe00:	ldr	r0, [r4, #76]	; 0x4c
   2fe04:	adds	r0, r0, r6
   2fe08:	str	r0, [r4]
   2fe0c:	beq	2fcf8 <flatcc_builder_start_table@@Base+0x28>
   2fe10:	ldr	r0, [r4, #28]
   2fe14:	ldr	r2, [r4, #60]	; 0x3c
   2fe18:	ldr	r3, [r4, #64]	; 0x40
   2fe1c:	ldr	r1, [r4, #32]
   2fe20:	mov	r5, #0
   2fe24:	add	r2, r2, r0
   2fe28:	sub	r0, r3, r0
   2fe2c:	str	r2, [r4, #16]
   2fe30:	movw	r2, #65532	; 0xfffc
   2fe34:	cmp	r0, r2
   2fe38:	movcs	r0, r2
   2fe3c:	str	r0, [r4, #24]
   2fe40:	str	r2, [r1, #4]
   2fe44:	mov	r0, r5
   2fe48:	sub	sp, fp, #16
   2fe4c:	pop	{r4, r5, r6, r7, fp, pc}
   2fe50:	movw	r0, #42524	; 0xa61c
   2fe54:	movw	r1, #38006	; 0x9476
   2fe58:	movw	r3, #42070	; 0xa456
   2fe5c:	mov	r2, #308	; 0x134
   2fe60:	movt	r0, #4
   2fe64:	movt	r1, #4
   2fe68:	movt	r3, #4
   2fe6c:	bl	14f44 <__assert_fail@plt>

0002fe70 <flatcc_builder_create_vtable@@Base>:
   2fe70:	push	{r4, r5, fp, lr}
   2fe74:	add	fp, sp, #8
   2fe78:	sub	sp, sp, #80	; 0x50
   2fe7c:	mov	r3, r2
   2fe80:	mov	r2, #0
   2fe84:	mov	r4, r0
   2fe88:	cmp	r3, #0
   2fe8c:	str	r2, [sp, #12]
   2fe90:	str	r2, [sp, #8]
   2fe94:	movne	r2, #1
   2fe98:	strne	r1, [sp, #16]
   2fe9c:	strne	r3, [sp, #8]
   2fea0:	strne	r3, [sp, #20]
   2fea4:	strne	r2, [sp, #12]
   2fea8:	ldr	r0, [r4, #152]	; 0x98
   2feac:	cmp	r0, #0
   2feb0:	bne	2fec0 <flatcc_builder_create_vtable@@Base+0x50>
   2feb4:	ldr	r0, [r4, #180]	; 0xb4
   2feb8:	cmp	r0, #0
   2febc:	beq	2ff0c <flatcc_builder_create_vtable@@Base+0x9c>
   2fec0:	cmp	r3, #0
   2fec4:	beq	2ff50 <flatcc_builder_create_vtable@@Base+0xe0>
   2fec8:	ldr	r0, [r4, #136]	; 0x88
   2fecc:	ldr	ip, [r4, #44]	; 0x2c
   2fed0:	add	r1, sp, #8
   2fed4:	add	r1, r1, #8
   2fed8:	sub	r5, r0, r3
   2fedc:	ldr	r0, [r4, #36]	; 0x24
   2fee0:	str	r3, [sp]
   2fee4:	mov	r3, r5
   2fee8:	blx	ip
   2feec:	cmp	r0, #0
   2fef0:	bne	2ff70 <flatcc_builder_create_vtable@@Base+0x100>
   2fef4:	cmp	r5, #0
   2fef8:	str	r5, [r4, #136]	; 0x88
   2fefc:	beq	2ff44 <flatcc_builder_create_vtable@@Base+0xd4>
   2ff00:	add	r0, r5, #1
   2ff04:	sub	sp, fp, #8
   2ff08:	pop	{r4, r5, fp, pc}
   2ff0c:	ldr	r5, [r4, #140]	; 0x8c
   2ff10:	ldr	r0, [r4, #36]	; 0x24
   2ff14:	ldr	ip, [r4, #44]	; 0x2c
   2ff18:	add	r1, r5, r3
   2ff1c:	str	r1, [r4, #140]	; 0x8c
   2ff20:	add	r1, sp, #8
   2ff24:	str	r3, [sp]
   2ff28:	mov	r3, r5
   2ff2c:	add	r1, r1, #8
   2ff30:	blx	ip
   2ff34:	cmp	r0, #0
   2ff38:	bne	2ff90 <flatcc_builder_create_vtable@@Base+0x120>
   2ff3c:	adds	r0, r5, #1
   2ff40:	bne	2ff04 <flatcc_builder_create_vtable@@Base+0x94>
   2ff44:	mov	r0, #0
   2ff48:	sub	sp, fp, #8
   2ff4c:	pop	{r4, r5, fp, pc}
   2ff50:	movw	r0, #42524	; 0xa61c
   2ff54:	movw	r1, #38006	; 0x9476
   2ff58:	movw	r3, #42203	; 0xa4db
   2ff5c:	movw	r2, #647	; 0x287
   2ff60:	movt	r0, #4
   2ff64:	movt	r1, #4
   2ff68:	movt	r3, #4
   2ff6c:	bl	14f44 <__assert_fail@plt>
   2ff70:	movw	r0, #42524	; 0xa61c
   2ff74:	movw	r1, #38006	; 0x9476
   2ff78:	movw	r3, #42203	; 0xa4db
   2ff7c:	movw	r2, #651	; 0x28b
   2ff80:	movt	r0, #4
   2ff84:	movt	r1, #4
   2ff88:	movt	r3, #4
   2ff8c:	bl	14f44 <__assert_fail@plt>
   2ff90:	movw	r0, #42524	; 0xa61c
   2ff94:	movw	r1, #38006	; 0x9476
   2ff98:	movw	r3, #42391	; 0xa597
   2ff9c:	movw	r2, #677	; 0x2a5
   2ffa0:	movt	r0, #4
   2ffa4:	movt	r1, #4
   2ffa8:	movt	r3, #4
   2ffac:	bl	14f44 <__assert_fail@plt>

0002ffb0 <flatcc_builder_create_cached_vtable@@Base>:
   2ffb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ffb4:	add	fp, sp, #28
   2ffb8:	sub	sp, sp, #20
   2ffbc:	mov	sl, r0
   2ffc0:	ldr	r0, [r0, #116]	; 0x74
   2ffc4:	mov	r8, r3
   2ffc8:	mov	r5, r2
   2ffcc:	str	r1, [sp, #16]
   2ffd0:	cmp	r0, #0
   2ffd4:	beq	30078 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2ffd8:	ldr	r1, [sl, #92]	; 0x5c
   2ffdc:	rsb	r0, r0, #32
   2ffe0:	lsr	r0, r8, r0
   2ffe4:	add	r6, r1, r0, lsl #2
   2ffe8:	cmp	r6, #0
   2ffec:	beq	3013c <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2fff0:	ldr	r7, [r6]
   2fff4:	str	r6, [sp, #12]
   2fff8:	cmp	r7, #0
   2fffc:	beq	3014c <flatcc_builder_create_cached_vtable@@Base+0x19c>
   30000:	ldr	r4, [sl, #68]	; 0x44
   30004:	ldr	r8, [sl, #100]	; 0x64
   30008:	mov	r0, #0
   3000c:	str	r0, [sp, #8]
   30010:	add	r9, r8, r7
   30014:	mov	r1, r4
   30018:	ldr	r0, [r9, #8]
   3001c:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   30020:	cmp	r0, r5
   30024:	bne	3003c <flatcc_builder_create_cached_vtable@@Base+0x8c>
   30028:	ldr	r0, [sp, #16]
   3002c:	mov	r2, r5
   30030:	bl	14e6c <memcmp@plt>
   30034:	cmp	r0, #0
   30038:	beq	30050 <flatcc_builder_create_cached_vtable@@Base+0xa0>
   3003c:	ldr	r7, [r9, #12]!
   30040:	cmp	r7, #0
   30044:	mov	r6, r9
   30048:	bne	30010 <flatcc_builder_create_cached_vtable@@Base+0x60>
   3004c:	b	30134 <flatcc_builder_create_cached_vtable@@Base+0x184>
   30050:	ldr	r0, [sl, #152]	; 0x98
   30054:	ldr	r1, [r9, #4]
   30058:	cmp	r1, r0
   3005c:	beq	302b8 <flatcc_builder_create_cached_vtable@@Base+0x308>
   30060:	mov	r6, r9
   30064:	mov	r0, r9
   30068:	ldr	r7, [r6, #12]!
   3006c:	cmp	r7, #0
   30070:	bne	3000c <flatcc_builder_create_cached_vtable@@Base+0x5c>
   30074:	b	30150 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   30078:	ldr	r0, [sl, #124]	; 0x7c
   3007c:	cmp	r0, #0
   30080:	bne	3030c <flatcc_builder_create_cached_vtable@@Base+0x35c>
   30084:	ldr	r0, [sl, #104]	; 0x68
   30088:	add	r7, sl, #100	; 0x64
   3008c:	cmp	r0, #15
   30090:	bhi	300bc <flatcc_builder_create_cached_vtable@@Base+0x10c>
   30094:	ldr	r0, [sl, #40]	; 0x28
   30098:	ldr	r6, [sl, #48]	; 0x30
   3009c:	mov	r1, #6
   300a0:	mov	r2, #16
   300a4:	mov	r3, #0
   300a8:	str	r1, [sp]
   300ac:	mov	r1, r7
   300b0:	blx	r6
   300b4:	cmp	r0, #0
   300b8:	bne	302ec <flatcc_builder_create_cached_vtable@@Base+0x33c>
   300bc:	ldr	r0, [r7]
   300c0:	mov	r7, #0
   300c4:	cmp	r0, #0
   300c8:	beq	301f0 <flatcc_builder_create_cached_vtable@@Base+0x240>
   300cc:	mov	r0, #16
   300d0:	mov	r2, #5
   300d4:	add	r1, sl, #92	; 0x5c
   300d8:	mov	r3, #1
   300dc:	mov	r4, #256	; 0x100
   300e0:	str	r0, [sl, #124]	; 0x7c
   300e4:	ldr	r0, [sl, #40]	; 0x28
   300e8:	ldr	r6, [sl, #48]	; 0x30
   300ec:	str	r2, [sp]
   300f0:	mov	r2, #256	; 0x100
   300f4:	blx	r6
   300f8:	cmp	r0, #0
   300fc:	bne	301f0 <flatcc_builder_create_cached_vtable@@Base+0x240>
   30100:	ldr	r0, [sl, #96]	; 0x60
   30104:	mov	r1, r4
   30108:	lsl	r4, r4, #1
   3010c:	cmp	r0, r1, lsl #1
   30110:	bcs	30104 <flatcc_builder_create_cached_vtable@@Base+0x154>
   30114:	lsr	r1, r1, #2
   30118:	mvn	r0, #0
   3011c:	mov	r2, #1
   30120:	add	r0, r0, #1
   30124:	cmp	r1, r2, lsl r0
   30128:	bhi	30120 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3012c:	str	r0, [sl, #116]	; 0x74
   30130:	b	2ffd8 <flatcc_builder_create_cached_vtable@@Base+0x28>
   30134:	ldr	r9, [sp, #8]
   30138:	b	30150 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3013c:	mov	r7, #0
   30140:	mov	r0, r7
   30144:	sub	sp, fp, #28
   30148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3014c:	mov	r9, #0
   30150:	ldr	r4, [sl, #124]	; 0x7c
   30154:	ldr	r0, [sl, #104]	; 0x68
   30158:	add	r7, sl, #100	; 0x64
   3015c:	add	r2, r4, #16
   30160:	cmp	r2, r0
   30164:	bls	3018c <flatcc_builder_create_cached_vtable@@Base+0x1dc>
   30168:	ldr	r0, [sl, #40]	; 0x28
   3016c:	ldr	r6, [sl, #48]	; 0x30
   30170:	mov	r1, #6
   30174:	mov	r3, #0
   30178:	str	r1, [sp]
   3017c:	mov	r1, r7
   30180:	blx	r6
   30184:	cmp	r0, #0
   30188:	bne	302ec <flatcc_builder_create_cached_vtable@@Base+0x33c>
   3018c:	ldr	r0, [r7]
   30190:	mov	r7, #0
   30194:	adds	r4, r0, r4
   30198:	beq	301f0 <flatcc_builder_create_cached_vtable@@Base+0x240>
   3019c:	ldr	r0, [sl, #124]	; 0x7c
   301a0:	ldr	r1, [sl, #152]	; 0x98
   301a4:	add	r2, r0, #16
   301a8:	str	r2, [sl, #124]	; 0x7c
   301ac:	ldr	r2, [sp, #12]
   301b0:	str	r1, [r4, #4]
   301b4:	ldr	r1, [r2]
   301b8:	str	r1, [r4, #12]
   301bc:	ldr	r1, [sp, #16]
   301c0:	str	r0, [r2]
   301c4:	mov	r0, sl
   301c8:	mov	r2, r5
   301cc:	bl	2fe70 <flatcc_builder_create_vtable@@Base>
   301d0:	cmp	r0, #0
   301d4:	str	r0, [r4]
   301d8:	beq	301f0 <flatcc_builder_create_cached_vtable@@Base+0x240>
   301dc:	cmp	r9, #0
   301e0:	beq	301fc <flatcc_builder_create_cached_vtable@@Base+0x24c>
   301e4:	ldr	r0, [r9, #8]
   301e8:	str	r0, [r4, #8]
   301ec:	ldr	r7, [r4]
   301f0:	mov	r0, r7
   301f4:	sub	sp, fp, #28
   301f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   301fc:	ldr	r6, [sl, #120]	; 0x78
   30200:	ldr	r0, [sl, #172]	; 0xac
   30204:	add	r2, r6, r5
   30208:	cmp	r0, #0
   3020c:	beq	30248 <flatcc_builder_create_cached_vtable@@Base+0x298>
   30210:	cmp	r0, r2
   30214:	bcs	30248 <flatcc_builder_create_cached_vtable@@Base+0x298>
   30218:	ldr	r0, [sl, #116]	; 0x74
   3021c:	cmp	r0, #0
   30220:	beq	301ec <flatcc_builder_create_cached_vtable@@Base+0x23c>
   30224:	ldr	r0, [sl, #92]	; 0x5c
   30228:	ldr	r2, [sl, #96]	; 0x60
   3022c:	mov	r1, #0
   30230:	mov	r5, #0
   30234:	bl	14ef0 <memset@plt>
   30238:	mov	r0, #16
   3023c:	str	r5, [sl, #120]	; 0x78
   30240:	str	r0, [sl, #124]	; 0x7c
   30244:	b	301ec <flatcc_builder_create_cached_vtable@@Base+0x23c>
   30248:	ldr	r0, [sl, #72]	; 0x48
   3024c:	add	r7, sl, #68	; 0x44
   30250:	cmp	r2, r0
   30254:	bls	3027c <flatcc_builder_create_cached_vtable@@Base+0x2cc>
   30258:	ldr	r0, [sl, #40]	; 0x28
   3025c:	ldr	ip, [sl, #48]	; 0x30
   30260:	mov	r1, #2
   30264:	mov	r3, #0
   30268:	str	r1, [sp]
   3026c:	mov	r1, r7
   30270:	blx	ip
   30274:	cmp	r0, #0
   30278:	bne	302ec <flatcc_builder_create_cached_vtable@@Base+0x33c>
   3027c:	ldr	r0, [r7]
   30280:	adds	r0, r0, r6
   30284:	beq	302a8 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   30288:	ldr	r1, [sl, #120]	; 0x78
   3028c:	mov	r2, r5
   30290:	str	r1, [r4, #8]
   30294:	add	r1, r1, r5
   30298:	str	r1, [sl, #120]	; 0x78
   3029c:	ldr	r1, [sp, #16]
   302a0:	bl	14e60 <memcpy@plt>
   302a4:	b	301ec <flatcc_builder_create_cached_vtable@@Base+0x23c>
   302a8:	mvn	r7, #0
   302ac:	mov	r0, r7
   302b0:	sub	sp, fp, #28
   302b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   302b8:	ldr	r0, [sp, #12]
   302bc:	cmp	r6, r0
   302c0:	beq	302dc <flatcc_builder_create_cached_vtable@@Base+0x32c>
   302c4:	mov	r1, r0
   302c8:	ldr	r0, [r9, #12]
   302cc:	str	r0, [r6]
   302d0:	ldr	r0, [r1]
   302d4:	str	r0, [r9, #12]
   302d8:	str	r7, [r1]
   302dc:	ldr	r7, [r9]
   302e0:	mov	r0, r7
   302e4:	sub	sp, fp, #28
   302e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   302ec:	movw	r0, #42524	; 0xa61c
   302f0:	movw	r1, #38006	; 0x9476
   302f4:	movw	r3, #42070	; 0xa456
   302f8:	mov	r2, #308	; 0x134
   302fc:	movt	r0, #4
   30300:	movt	r1, #4
   30304:	movt	r3, #4
   30308:	bl	14f44 <__assert_fail@plt>
   3030c:	movw	r0, #42464	; 0xa5e0
   30310:	movw	r1, #38006	; 0x9476
   30314:	movw	r3, #42479	; 0xa5ef
   30318:	movw	r2, #342	; 0x156
   3031c:	movt	r0, #4
   30320:	movt	r1, #4
   30324:	movt	r3, #4
   30328:	bl	14f44 <__assert_fail@plt>

0003032c <flatcc_builder_create_table@@Base>:
   3032c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30330:	add	fp, sp, #24
   30334:	sub	sp, sp, #80	; 0x50
   30338:	ldr	r5, [fp, #12]
   3033c:	cmn	r5, #1
   30340:	ble	30494 <flatcc_builder_create_table@@Base+0x168>
   30344:	ldr	ip, [fp, #16]
   30348:	tst	ip, #1
   3034c:	beq	304b4 <flatcc_builder_create_table@@Base+0x188>
   30350:	mov	r8, r0
   30354:	ldrh	r0, [r0, #128]	; 0x80
   30358:	cmp	r3, #4
   3035c:	movls	r3, #4
   30360:	cmp	r0, r3
   30364:	strhcc	r3, [r8, #128]	; 0x80
   30368:	sub	r3, r3, #1
   3036c:	cmp	r5, #1
   30370:	ldr	r4, [r8, #136]	; 0x88
   30374:	sub	r0, r4, r2
   30378:	and	r0, r0, r3
   3037c:	add	r3, ip, r0
   30380:	mvn	ip, #3
   30384:	sub	r6, ip, r2
   30388:	add	r4, r6, r4
   3038c:	add	r6, r4, #1
   30390:	sub	r3, r6, r3
   30394:	str	r3, [fp, #-28]	; 0xffffffe4
   30398:	blt	303c4 <flatcc_builder_create_table@@Base+0x98>
   3039c:	ldr	r3, [fp, #8]
   303a0:	sub	r6, r4, r0
   303a4:	sub	r4, ip, r6
   303a8:	ldrh	r6, [r3], #2
   303ac:	subs	r5, r5, #1
   303b0:	ldr	r7, [r6, r1]
   303b4:	add	r7, r4, r7
   303b8:	sub	r7, r7, r6
   303bc:	str	r7, [r6, r1]
   303c0:	bne	303a8 <flatcc_builder_create_table@@Base+0x7c>
   303c4:	sub	r3, fp, #28
   303c8:	mov	r4, #4
   303cc:	cmp	r2, #0
   303d0:	str	r3, [sp, #12]
   303d4:	mov	r3, #1
   303d8:	str	r4, [sp, #4]
   303dc:	str	r4, [sp, #16]
   303e0:	str	r3, [sp, #8]
   303e4:	beq	30400 <flatcc_builder_create_table@@Base+0xd4>
   303e8:	mov	r3, #2
   303ec:	add	r4, r2, #4
   303f0:	str	r1, [sp, #20]
   303f4:	str	r2, [sp, #24]
   303f8:	str	r3, [sp, #8]
   303fc:	str	r4, [sp, #4]
   30400:	cmp	r0, #0
   30404:	beq	30430 <flatcc_builder_create_table@@Base+0x104>
   30408:	add	r1, sp, #4
   3040c:	movw	r2, #37476	; 0x9264
   30410:	add	r4, r4, r0
   30414:	add	r1, r1, r3, lsl #3
   30418:	add	r3, r3, #1
   3041c:	movt	r2, #4
   30420:	str	r4, [sp, #4]
   30424:	str	r2, [r1, #8]
   30428:	str	r0, [r1, #12]
   3042c:	str	r3, [sp, #8]
   30430:	cmp	r4, #0
   30434:	ble	304d4 <flatcc_builder_create_table@@Base+0x1a8>
   30438:	ldr	r0, [r8, #136]	; 0x88
   3043c:	ldr	r7, [r8, #44]	; 0x2c
   30440:	add	r1, sp, #4
   30444:	mov	r2, r3
   30448:	add	r1, r1, #8
   3044c:	sub	r5, r0, r4
   30450:	ldr	r0, [r8, #36]	; 0x24
   30454:	str	r4, [sp]
   30458:	mov	r3, r5
   3045c:	blx	r7
   30460:	cmp	r0, #0
   30464:	streq	r5, [r8, #136]	; 0x88
   30468:	moveq	r0, r5
   3046c:	subeq	sp, fp, #24
   30470:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   30474:	movw	r0, #42524	; 0xa61c
   30478:	movw	r1, #38006	; 0x9476
   3047c:	movw	r3, #42203	; 0xa4db
   30480:	movw	r2, #651	; 0x28b
   30484:	movt	r0, #4
   30488:	movt	r1, #4
   3048c:	movt	r3, #4
   30490:	bl	14f44 <__assert_fail@plt>
   30494:	movw	r0, #39890	; 0x9bd2
   30498:	movw	r1, #38006	; 0x9476
   3049c:	movw	r3, #39908	; 0x9be4
   304a0:	movw	r2, #1237	; 0x4d5
   304a4:	movt	r0, #4
   304a8:	movt	r1, #4
   304ac:	movt	r3, #4
   304b0:	bl	14f44 <__assert_fail@plt>
   304b4:	movw	r0, #40064	; 0x9c80
   304b8:	movw	r1, #38006	; 0x9476
   304bc:	movw	r3, #39908	; 0x9be4
   304c0:	movw	r2, #1243	; 0x4db
   304c4:	movt	r0, #4
   304c8:	movt	r1, #4
   304cc:	movt	r3, #4
   304d0:	bl	14f44 <__assert_fail@plt>
   304d4:	movw	r0, #42524	; 0xa61c
   304d8:	movw	r1, #38006	; 0x9476
   304dc:	movw	r3, #42203	; 0xa4db
   304e0:	movw	r2, #647	; 0x287
   304e4:	movt	r0, #4
   304e8:	movt	r1, #4
   304ec:	movt	r3, #4
   304f0:	bl	14f44 <__assert_fail@plt>

000304f4 <flatcc_builder_check_required_field@@Base>:
   304f4:	ldr	r2, [r0, #32]
   304f8:	ldrh	r2, [r2, #14]
   304fc:	cmp	r2, #3
   30500:	bne	30530 <flatcc_builder_check_required_field@@Base+0x3c>
   30504:	ldrh	r3, [r0, #8]
   30508:	mov	r2, #0
   3050c:	cmp	r3, r1
   30510:	bls	30528 <flatcc_builder_check_required_field@@Base+0x34>
   30514:	ldr	r0, [r0, #4]
   30518:	add	r0, r0, r1, lsl #1
   3051c:	ldrh	r2, [r0]
   30520:	cmp	r2, #0
   30524:	movwne	r2, #1
   30528:	mov	r0, r2
   3052c:	bx	lr
   30530:	push	{fp, lr}
   30534:	mov	fp, sp
   30538:	movw	r0, #40075	; 0x9c8b
   3053c:	movw	r1, #38006	; 0x9476
   30540:	movw	r3, #40118	; 0x9cb6
   30544:	movw	r2, #1272	; 0x4f8
   30548:	movt	r0, #4
   3054c:	movt	r1, #4
   30550:	movt	r3, #4
   30554:	bl	14f44 <__assert_fail@plt>

00030558 <flatcc_builder_check_union_field@@Base>:
   30558:	mov	r2, r0
   3055c:	ldr	r0, [r0, #32]
   30560:	ldrh	r0, [r0, #14]
   30564:	cmp	r0, #3
   30568:	bne	305c8 <flatcc_builder_check_union_field@@Base+0x70>
   3056c:	cmp	r1, #0
   30570:	mov	r0, #0
   30574:	ldrhne	r3, [r2, #8]
   30578:	cmpne	r3, r1
   3057c:	bhi	30584 <flatcc_builder_check_union_field@@Base+0x2c>
   30580:	bx	lr
   30584:	ldr	r0, [r2, #4]
   30588:	add	r0, r0, r1, lsl #1
   3058c:	ldrh	r1, [r0, #-2]
   30590:	cmp	r1, #0
   30594:	beq	305b8 <flatcc_builder_check_union_field@@Base+0x60>
   30598:	ldr	r2, [r2, #16]
   3059c:	ldrh	r0, [r0]
   305a0:	ldrb	r1, [r2, r1]
   305a4:	cmp	r1, #0
   305a8:	beq	305bc <flatcc_builder_check_union_field@@Base+0x64>
   305ac:	cmp	r0, #0
   305b0:	movwne	r0, #1
   305b4:	bx	lr
   305b8:	ldrh	r0, [r0]
   305bc:	clz	r0, r0
   305c0:	lsr	r0, r0, #5
   305c4:	bx	lr
   305c8:	push	{fp, lr}
   305cc:	mov	fp, sp
   305d0:	movw	r0, #40075	; 0x9c8b
   305d4:	movw	r1, #38006	; 0x9476
   305d8:	movw	r3, #40201	; 0x9d09
   305dc:	movw	r2, #1279	; 0x4ff
   305e0:	movt	r0, #4
   305e4:	movt	r1, #4
   305e8:	movt	r3, #4
   305ec:	bl	14f44 <__assert_fail@plt>

000305f0 <flatcc_builder_check_required@@Base>:
   305f0:	push	{fp, lr}
   305f4:	mov	fp, sp
   305f8:	mov	r3, r0
   305fc:	ldr	r0, [r0, #32]
   30600:	ldrh	r0, [r0, #14]
   30604:	cmp	r0, #3
   30608:	bne	30660 <flatcc_builder_check_required@@Base+0x70>
   3060c:	ldrh	ip, [r3, #8]
   30610:	mov	r0, #0
   30614:	cmp	ip, r2
   30618:	movge	r0, #1
   3061c:	cmpge	r2, #1
   30620:	bge	30628 <flatcc_builder_check_required@@Base+0x38>
   30624:	pop	{fp, pc}
   30628:	ldr	ip, [r3, #4]
   3062c:	mov	lr, #0
   30630:	b	30644 <flatcc_builder_check_required@@Base+0x54>
   30634:	add	lr, lr, #1
   30638:	add	r1, r1, #2
   3063c:	cmp	lr, r2
   30640:	popge	{fp, pc}
   30644:	ldrh	r3, [r1]
   30648:	add	r3, ip, r3, lsl #1
   3064c:	ldrh	r3, [r3]
   30650:	cmp	r3, #0
   30654:	bne	30634 <flatcc_builder_check_required@@Base+0x44>
   30658:	mov	r0, #0
   3065c:	pop	{fp, pc}
   30660:	movw	r0, #40075	; 0x9c8b
   30664:	movw	r1, #38006	; 0x9476
   30668:	movw	r3, #40281	; 0x9d59
   3066c:	movw	r2, #1297	; 0x511
   30670:	movt	r0, #4
   30674:	movt	r1, #4
   30678:	movt	r3, #4
   3067c:	bl	14f44 <__assert_fail@plt>

00030680 <flatcc_builder_end_table@@Base>:
   30680:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30684:	add	fp, sp, #24
   30688:	sub	sp, sp, #16
   3068c:	mov	r4, r0
   30690:	ldr	r0, [r0, #32]
   30694:	ldrh	r0, [r0, #14]
   30698:	cmp	r0, #3
   3069c:	bne	30820 <flatcc_builder_end_table@@Base+0x1a0>
   306a0:	ldrh	r0, [r4, #8]
   306a4:	ldr	r5, [r4, #4]
   306a8:	mov	r1, #4
   306ac:	movw	r2, #31153	; 0x79b1
   306b0:	movt	r2, #40503	; 0x9e37
   306b4:	add	r0, r1, r0, lsl #1
   306b8:	strh	r0, [r5, #-4]!
   306bc:	ldrh	r1, [r4, #20]
   306c0:	uxth	r6, r0
   306c4:	add	r1, r1, #4
   306c8:	strh	r1, [r5, #2]
   306cc:	uxth	r1, r1
   306d0:	ldr	r0, [r4, #12]
   306d4:	eor	r0, r0, r6
   306d8:	mul	r0, r0, r2
   306dc:	eor	r0, r0, r1
   306e0:	mov	r1, r5
   306e4:	mul	r3, r0, r2
   306e8:	mov	r0, r4
   306ec:	mov	r2, r6
   306f0:	str	r3, [r4, #12]
   306f4:	bl	2ffb0 <flatcc_builder_create_cached_vtable@@Base>
   306f8:	cmp	r0, #0
   306fc:	beq	30810 <flatcc_builder_end_table@@Base+0x190>
   30700:	mov	r7, r0
   30704:	mov	r0, r5
   30708:	mov	r1, #0
   3070c:	mov	r2, r6
   30710:	mov	r8, #0
   30714:	bl	14ef0 <memset@plt>
   30718:	ldr	r5, [r4, #32]
   3071c:	ldr	r0, [r4, #76]	; 0x4c
   30720:	ldr	r6, [r4]
   30724:	ldrh	r3, [r4, #130]	; 0x82
   30728:	ldr	r1, [r4, #16]
   3072c:	ldr	r2, [r4, #20]
   30730:	ldr	r5, [r5, #20]
   30734:	add	r0, r0, r5
   30738:	sub	r6, r6, r0
   3073c:	asr	r6, r6, #1
   30740:	stm	sp, {r0, r6, r7}
   30744:	mov	r0, r4
   30748:	bl	3032c <flatcc_builder_create_table@@Base>
   3074c:	cmp	r0, #0
   30750:	beq	30804 <flatcc_builder_end_table@@Base+0x184>
   30754:	ldr	r1, [r4, #32]
   30758:	mov	r5, r0
   3075c:	ldr	r0, [r4, #16]
   30760:	ldr	r2, [r4, #20]
   30764:	ldr	r3, [r4, #52]	; 0x34
   30768:	ldr	r7, [r1, #24]
   3076c:	str	r7, [r4, #12]
   30770:	ldrh	r7, [r1, #28]
   30774:	strh	r7, [r4, #8]
   30778:	ldr	r7, [r1, #16]
   3077c:	add	r3, r3, r7
   30780:	str	r3, [r4, #4]
   30784:	ldr	r3, [r4, #76]	; 0x4c
   30788:	ldr	r1, [r1, #20]
   3078c:	add	r1, r3, r1
   30790:	str	r1, [r4]
   30794:	mov	r1, #0
   30798:	bl	14ef0 <memset@plt>
   3079c:	ldr	r0, [r4, #32]
   307a0:	ldr	r1, [r4, #60]	; 0x3c
   307a4:	ldr	r2, [r4, #64]	; 0x40
   307a8:	mov	r8, r5
   307ac:	ldr	r3, [r0, #8]
   307b0:	str	r3, [r4, #20]
   307b4:	ldr	r3, [r0]
   307b8:	str	r3, [r4, #28]
   307bc:	add	r1, r1, r3
   307c0:	ldr	r7, [r0, #4]
   307c4:	str	r1, [r4, #16]
   307c8:	sub	r1, r2, r3
   307cc:	cmp	r1, r7
   307d0:	movhi	r1, r7
   307d4:	str	r1, [r4, #24]
   307d8:	ldrh	r1, [r4, #130]	; 0x82
   307dc:	ldrh	r2, [r4, #128]	; 0x80
   307e0:	cmp	r2, r1
   307e4:	strhcc	r1, [r4, #128]	; 0x80
   307e8:	ldrh	r1, [r0, #12]
   307ec:	sub	r0, r0, #36	; 0x24
   307f0:	str	r0, [r4, #32]
   307f4:	strh	r1, [r4, #130]	; 0x82
   307f8:	ldr	r0, [r4, #156]	; 0x9c
   307fc:	sub	r0, r0, #1
   30800:	str	r0, [r4, #156]	; 0x9c
   30804:	mov	r0, r8
   30808:	sub	sp, fp, #24
   3080c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30810:	mov	r8, #0
   30814:	mov	r0, r8
   30818:	sub	sp, fp, #24
   3081c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30820:	movw	r0, #40075	; 0x9c8b
   30824:	movw	r1, #38006	; 0x9476
   30828:	movw	r3, #40371	; 0x9db3
   3082c:	movw	r2, #1317	; 0x525
   30830:	movt	r0, #4
   30834:	movt	r1, #4
   30838:	movt	r3, #4
   3083c:	bl	14f44 <__assert_fail@plt>

00030840 <flatcc_builder_create_vector@@Base>:
   30840:	push	{r4, r5, r6, r7, fp, lr}
   30844:	add	fp, sp, #16
   30848:	sub	sp, sp, #80	; 0x50
   3084c:	mov	r7, r0
   30850:	ldr	r0, [fp, #12]
   30854:	cmp	r2, r0
   30858:	bhi	30958 <flatcc_builder_create_vector@@Base+0x118>
   3085c:	ldr	r0, [fp, #8]
   30860:	mov	r4, r2
   30864:	ldrh	r2, [r7, #128]	; 0x80
   30868:	mov	r5, #4
   3086c:	cmp	r0, #4
   30870:	movls	r0, r5
   30874:	cmp	r2, r0
   30878:	sub	r2, fp, #20
   3087c:	strhcc	r0, [r7, #128]	; 0x80
   30880:	str	r4, [fp, #-20]	; 0xffffffec
   30884:	sub	r0, r0, #1
   30888:	ldr	ip, [r7, #136]	; 0x88
   3088c:	str	r2, [sp, #12]
   30890:	mov	r2, #1
   30894:	str	r5, [sp, #4]
   30898:	str	r5, [sp, #16]
   3089c:	str	r2, [sp, #8]
   308a0:	mls	r6, r3, r4, ip
   308a4:	mul	r3, r3, r4
   308a8:	and	r0, r6, r0
   308ac:	cmp	r3, #0
   308b0:	beq	308cc <flatcc_builder_create_vector@@Base+0x8c>
   308b4:	mov	r2, #2
   308b8:	add	r5, r3, #4
   308bc:	str	r1, [sp, #20]
   308c0:	str	r3, [sp, #24]
   308c4:	str	r2, [sp, #8]
   308c8:	str	r5, [sp, #4]
   308cc:	cmp	r0, #0
   308d0:	beq	308fc <flatcc_builder_create_vector@@Base+0xbc>
   308d4:	add	r1, sp, #4
   308d8:	movw	r3, #37476	; 0x9264
   308dc:	add	r5, r5, r0
   308e0:	add	r1, r1, r2, lsl #3
   308e4:	add	r2, r2, #1
   308e8:	movt	r3, #4
   308ec:	str	r5, [sp, #4]
   308f0:	str	r3, [r1, #8]
   308f4:	str	r0, [r1, #12]
   308f8:	str	r2, [sp, #8]
   308fc:	cmp	r5, #0
   30900:	ble	30978 <flatcc_builder_create_vector@@Base+0x138>
   30904:	ldr	r0, [r7, #36]	; 0x24
   30908:	ldr	r6, [r7, #44]	; 0x2c
   3090c:	add	r1, sp, #4
   30910:	sub	r4, ip, r5
   30914:	str	r5, [sp]
   30918:	add	r1, r1, #8
   3091c:	mov	r3, r4
   30920:	blx	r6
   30924:	cmp	r0, #0
   30928:	streq	r4, [r7, #136]	; 0x88
   3092c:	moveq	r0, r4
   30930:	subeq	sp, fp, #16
   30934:	popeq	{r4, r5, r6, r7, fp, pc}
   30938:	movw	r0, #42524	; 0xa61c
   3093c:	movw	r1, #38006	; 0x9476
   30940:	movw	r3, #42203	; 0xa4db
   30944:	movw	r2, #651	; 0x28b
   30948:	movt	r0, #4
   3094c:	movt	r1, #4
   30950:	movt	r3, #4
   30954:	bl	14f44 <__assert_fail@plt>
   30958:	movw	r0, #40437	; 0x9df5
   3095c:	movw	r1, #38006	; 0x9476
   30960:	movw	r3, #40456	; 0x9e08
   30964:	movw	r2, #1365	; 0x555
   30968:	movt	r0, #4
   3096c:	movt	r1, #4
   30970:	movt	r3, #4
   30974:	bl	14f44 <__assert_fail@plt>
   30978:	movw	r0, #42524	; 0xa61c
   3097c:	movw	r1, #38006	; 0x9476
   30980:	movw	r3, #42203	; 0xa4db
   30984:	movw	r2, #647	; 0x287
   30988:	movt	r0, #4
   3098c:	movt	r1, #4
   30990:	movt	r3, #4
   30994:	bl	14f44 <__assert_fail@plt>

00030998 <flatcc_builder_end_vector@@Base>:
   30998:	push	{r4, r5, fp, lr}
   3099c:	add	fp, sp, #8
   309a0:	sub	sp, sp, #8
   309a4:	mov	r4, r0
   309a8:	ldr	r0, [r0, #32]
   309ac:	ldrh	r1, [r0, #14]
   309b0:	cmp	r1, #4
   309b4:	bne	30a68 <flatcc_builder_end_vector@@Base+0xd0>
   309b8:	ldr	r3, [r0, #16]
   309bc:	ldr	r2, [r0, #20]
   309c0:	ldr	r0, [r0, #24]
   309c4:	ldr	r1, [r4, #16]
   309c8:	ldrh	r5, [r4, #130]	; 0x82
   309cc:	str	r0, [sp, #4]
   309d0:	mov	r0, r4
   309d4:	str	r5, [sp]
   309d8:	bl	30840 <flatcc_builder_create_vector@@Base>
   309dc:	mov	r5, r0
   309e0:	cmp	r0, #0
   309e4:	beq	30a5c <flatcc_builder_end_vector@@Base+0xc4>
   309e8:	ldr	r0, [r4, #16]
   309ec:	ldr	r2, [r4, #20]
   309f0:	mov	r1, #0
   309f4:	bl	14ef0 <memset@plt>
   309f8:	ldr	r0, [r4, #32]
   309fc:	ldr	r1, [r4, #60]	; 0x3c
   30a00:	ldr	ip, [r4, #64]	; 0x40
   30a04:	ldr	r3, [r0, #8]
   30a08:	str	r3, [r4, #20]
   30a0c:	ldr	r3, [r0]
   30a10:	str	r3, [r4, #28]
   30a14:	add	r1, r1, r3
   30a18:	ldr	r2, [r0, #4]
   30a1c:	str	r1, [r4, #16]
   30a20:	sub	r1, ip, r3
   30a24:	cmp	r1, r2
   30a28:	movhi	r1, r2
   30a2c:	str	r1, [r4, #24]
   30a30:	ldrh	r1, [r4, #130]	; 0x82
   30a34:	ldrh	r2, [r4, #128]	; 0x80
   30a38:	cmp	r2, r1
   30a3c:	strhcc	r1, [r4, #128]	; 0x80
   30a40:	ldrh	r1, [r0, #12]
   30a44:	sub	r0, r0, #36	; 0x24
   30a48:	str	r0, [r4, #32]
   30a4c:	strh	r1, [r4, #130]	; 0x82
   30a50:	ldr	r0, [r4, #156]	; 0x9c
   30a54:	sub	r0, r0, #1
   30a58:	str	r0, [r4, #156]	; 0x9c
   30a5c:	mov	r0, r5
   30a60:	sub	sp, fp, #8
   30a64:	pop	{r4, r5, fp, pc}
   30a68:	movw	r0, #38809	; 0x9799
   30a6c:	movw	r1, #38006	; 0x9476
   30a70:	movw	r3, #40574	; 0x9e7e
   30a74:	movw	r2, #1400	; 0x578
   30a78:	movt	r0, #4
   30a7c:	movt	r1, #4
   30a80:	movt	r3, #4
   30a84:	bl	14f44 <__assert_fail@plt>

00030a88 <flatcc_builder_vector_count@@Base>:
   30a88:	ldr	r0, [r0, #32]
   30a8c:	ldr	r0, [r0, #20]
   30a90:	bx	lr

00030a94 <flatcc_builder_vector_edit@@Base>:
   30a94:	ldr	r0, [r0, #16]
   30a98:	bx	lr

00030a9c <flatcc_builder_create_offset_vector_direct@@Base>:
   30a9c:	mov	r3, #0
   30aa0:	b	30aa4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30aa4:	push	{r4, r5, r6, r7, fp, lr}
   30aa8:	add	fp, sp, #16
   30aac:	sub	sp, sp, #80	; 0x50
   30ab0:	mov	r5, #0
   30ab4:	cmn	r2, #-1073741823	; 0xc0000001
   30ab8:	bhi	30c18 <flatcc_builder_create_offset_vector_direct@@Base+0x17c>
   30abc:	mov	r7, r0
   30ac0:	ldrh	r0, [r0, #128]	; 0x80
   30ac4:	sub	r6, fp, #20
   30ac8:	mov	r4, #4
   30acc:	mov	ip, #1
   30ad0:	cmp	r0, #3
   30ad4:	movls	r0, #4
   30ad8:	strhls	r0, [r7, #128]	; 0x80
   30adc:	str	r2, [fp, #-20]	; 0xffffffec
   30ae0:	ldr	lr, [r7, #136]	; 0x88
   30ae4:	str	r6, [sp, #12]
   30ae8:	mov	r6, #0
   30aec:	str	r4, [sp, #4]
   30af0:	str	r4, [sp, #16]
   30af4:	str	ip, [sp, #8]
   30af8:	cmp	r6, r2, lsl #2
   30afc:	and	r5, lr, #3
   30b00:	beq	30b20 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   30b04:	lsl	r6, r2, #2
   30b08:	mov	ip, #2
   30b0c:	str	r1, [sp, #20]
   30b10:	add	r4, r6, #4
   30b14:	str	r6, [sp, #24]
   30b18:	str	ip, [sp, #8]
   30b1c:	str	r4, [sp, #4]
   30b20:	cmp	r5, #0
   30b24:	beq	30b50 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   30b28:	add	r6, sp, #4
   30b2c:	movw	r0, #37476	; 0x9264
   30b30:	add	r4, r4, r5
   30b34:	add	r6, r6, ip, lsl #3
   30b38:	add	ip, ip, #1
   30b3c:	movt	r0, #4
   30b40:	str	r4, [sp, #4]
   30b44:	str	r0, [r6, #8]
   30b48:	str	r5, [r6, #12]
   30b4c:	str	ip, [sp, #8]
   30b50:	cmp	r2, #0
   30b54:	beq	30bdc <flatcc_builder_create_offset_vector_direct@@Base+0x140>
   30b58:	mvn	r0, #3
   30b5c:	cmp	r3, #0
   30b60:	sub	r0, r0, lr
   30b64:	add	r0, r0, r4
   30b68:	beq	30bb4 <flatcc_builder_create_offset_vector_direct@@Base+0x118>
   30b6c:	mov	r5, #0
   30b70:	ldr	r6, [r1, r5, lsl #2]
   30b74:	cmp	r6, #0
   30b78:	beq	30b94 <flatcc_builder_create_offset_vector_direct@@Base+0xf8>
   30b7c:	add	r6, r0, r6
   30b80:	str	r6, [r1, r5, lsl #2]
   30b84:	ldrb	r6, [r3, r5]
   30b88:	cmp	r6, #0
   30b8c:	bne	30ba0 <flatcc_builder_create_offset_vector_direct@@Base+0x104>
   30b90:	b	30c24 <flatcc_builder_create_offset_vector_direct@@Base+0x188>
   30b94:	ldrb	r6, [r3, r5]
   30b98:	cmp	r6, #0
   30b9c:	bne	30c64 <flatcc_builder_create_offset_vector_direct@@Base+0x1c8>
   30ba0:	add	r5, r5, #1
   30ba4:	sub	r0, r0, #4
   30ba8:	cmp	r5, r2
   30bac:	bcc	30b70 <flatcc_builder_create_offset_vector_direct@@Base+0xd4>
   30bb0:	b	30bdc <flatcc_builder_create_offset_vector_direct@@Base+0x140>
   30bb4:	mov	r3, #0
   30bb8:	ldr	r5, [r1, r3, lsl #2]
   30bbc:	cmp	r5, #0
   30bc0:	beq	30c44 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   30bc4:	add	r6, r0, r5
   30bc8:	sub	r0, r0, #4
   30bcc:	str	r6, [r1, r3, lsl #2]
   30bd0:	add	r3, r3, #1
   30bd4:	cmp	r3, r2
   30bd8:	bcc	30bb8 <flatcc_builder_create_offset_vector_direct@@Base+0x11c>
   30bdc:	cmp	r4, #0
   30be0:	ble	30c84 <flatcc_builder_create_offset_vector_direct@@Base+0x1e8>
   30be4:	ldr	r0, [r7, #136]	; 0x88
   30be8:	ldr	r6, [r7, #44]	; 0x2c
   30bec:	add	r1, sp, #4
   30bf0:	mov	r2, ip
   30bf4:	add	r1, r1, #8
   30bf8:	sub	r5, r0, r4
   30bfc:	ldr	r0, [r7, #36]	; 0x24
   30c00:	str	r4, [sp]
   30c04:	mov	r3, r5
   30c08:	blx	r6
   30c0c:	cmp	r0, #0
   30c10:	bne	30ca4 <flatcc_builder_create_offset_vector_direct@@Base+0x208>
   30c14:	str	r5, [r7, #136]	; 0x88
   30c18:	mov	r0, r5
   30c1c:	sub	sp, fp, #16
   30c20:	pop	{r4, r5, r6, r7, fp, pc}
   30c24:	movw	r0, #42512	; 0xa610
   30c28:	movw	r1, #38006	; 0x9476
   30c2c:	movw	r3, #42526	; 0xa61e
   30c30:	movw	r2, #1457	; 0x5b1
   30c34:	movt	r0, #4
   30c38:	movt	r1, #4
   30c3c:	movt	r3, #4
   30c40:	bl	14f44 <__assert_fail@plt>
   30c44:	movw	r0, #42524	; 0xa61c
   30c48:	movw	r1, #38006	; 0x9476
   30c4c:	movw	r3, #42526	; 0xa61e
   30c50:	movw	r2, #1463	; 0x5b7
   30c54:	movt	r0, #4
   30c58:	movt	r1, #4
   30c5c:	movt	r3, #4
   30c60:	bl	14f44 <__assert_fail@plt>
   30c64:	movw	r0, #42657	; 0xa6a1
   30c68:	movw	r1, #38006	; 0x9476
   30c6c:	movw	r3, #42526	; 0xa61e
   30c70:	movw	r2, #1461	; 0x5b5
   30c74:	movt	r0, #4
   30c78:	movt	r1, #4
   30c7c:	movt	r3, #4
   30c80:	bl	14f44 <__assert_fail@plt>
   30c84:	movw	r0, #42524	; 0xa61c
   30c88:	movw	r1, #38006	; 0x9476
   30c8c:	movw	r3, #42203	; 0xa4db
   30c90:	movw	r2, #647	; 0x287
   30c94:	movt	r0, #4
   30c98:	movt	r1, #4
   30c9c:	movt	r3, #4
   30ca0:	bl	14f44 <__assert_fail@plt>
   30ca4:	movw	r0, #42524	; 0xa61c
   30ca8:	movw	r1, #38006	; 0x9476
   30cac:	movw	r3, #42203	; 0xa4db
   30cb0:	movw	r2, #651	; 0x28b
   30cb4:	movt	r0, #4
   30cb8:	movt	r1, #4
   30cbc:	movt	r3, #4
   30cc0:	bl	14f44 <__assert_fail@plt>

00030cc4 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   30cc4:	push	{r4, r5, fp, lr}
   30cc8:	add	fp, sp, #8
   30ccc:	mov	r4, r0
   30cd0:	ldr	r0, [r0, #32]
   30cd4:	mov	r3, r1
   30cd8:	ldrh	r1, [r0, #14]
   30cdc:	cmp	r1, #5
   30ce0:	bne	30d7c <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   30ce4:	ldr	r2, [r0, #20]
   30ce8:	ldr	r1, [r4, #16]
   30cec:	mov	r0, r4
   30cf0:	bl	30aa4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30cf4:	mov	r5, r0
   30cf8:	cmp	r0, #0
   30cfc:	beq	30d74 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   30d00:	ldr	r0, [r4, #16]
   30d04:	ldr	r2, [r4, #20]
   30d08:	mov	r1, #0
   30d0c:	bl	14ef0 <memset@plt>
   30d10:	ldr	r0, [r4, #32]
   30d14:	ldr	r1, [r4, #60]	; 0x3c
   30d18:	ldr	ip, [r4, #64]	; 0x40
   30d1c:	ldr	r3, [r0, #8]
   30d20:	str	r3, [r4, #20]
   30d24:	ldr	r3, [r0]
   30d28:	str	r3, [r4, #28]
   30d2c:	add	r1, r1, r3
   30d30:	ldr	r2, [r0, #4]
   30d34:	str	r1, [r4, #16]
   30d38:	sub	r1, ip, r3
   30d3c:	cmp	r1, r2
   30d40:	movhi	r1, r2
   30d44:	str	r1, [r4, #24]
   30d48:	ldrh	r1, [r4, #130]	; 0x82
   30d4c:	ldrh	r2, [r4, #128]	; 0x80
   30d50:	cmp	r2, r1
   30d54:	strhcc	r1, [r4, #128]	; 0x80
   30d58:	ldrh	r1, [r0, #12]
   30d5c:	sub	r0, r0, #36	; 0x24
   30d60:	str	r0, [r4, #32]
   30d64:	strh	r1, [r4, #130]	; 0x82
   30d68:	ldr	r0, [r4, #156]	; 0x9c
   30d6c:	sub	r0, r0, #1
   30d70:	str	r0, [r4, #156]	; 0x9c
   30d74:	mov	r0, r5
   30d78:	pop	{r4, r5, fp, pc}
   30d7c:	movw	r0, #39058	; 0x9892
   30d80:	movw	r1, #38006	; 0x9476
   30d84:	movw	r3, #40715	; 0x9f0b
   30d88:	movw	r2, #1493	; 0x5d5
   30d8c:	movt	r0, #4
   30d90:	movt	r1, #4
   30d94:	movt	r3, #4
   30d98:	bl	14f44 <__assert_fail@plt>

00030d9c <flatcc_builder_offset_vector_edit@@Base>:
   30d9c:	ldr	r0, [r0, #16]
   30da0:	bx	lr

00030da4 <flatcc_builder_offset_vector_count@@Base>:
   30da4:	ldr	r0, [r0, #32]
   30da8:	ldr	r0, [r0, #20]
   30dac:	bx	lr

00030db0 <flatcc_builder_table_add_union@@Base>:
   30db0:	push	{r4, r5, r6, r7, fp, lr}
   30db4:	add	fp, sp, #16
   30db8:	mov	r5, r0
   30dbc:	ldr	r0, [r0, #32]
   30dc0:	ldrh	r0, [r0, #14]
   30dc4:	cmp	r0, #3
   30dc8:	bne	30e50 <flatcc_builder_table_add_union@@Base+0xa0>
   30dcc:	mov	r7, r3
   30dd0:	mov	r4, r2
   30dd4:	mov	r6, r1
   30dd8:	cmp	r3, #0
   30ddc:	beq	30dec <flatcc_builder_table_add_union@@Base+0x3c>
   30de0:	uxtb	r0, r4
   30de4:	cmp	r0, #0
   30de8:	beq	30e70 <flatcc_builder_table_add_union@@Base+0xc0>
   30dec:	cmp	r7, #0
   30df0:	beq	30e0c <flatcc_builder_table_add_union@@Base+0x5c>
   30df4:	mov	r0, r5
   30df8:	mov	r1, r6
   30dfc:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   30e00:	cmp	r0, #0
   30e04:	beq	30e90 <flatcc_builder_table_add_union@@Base+0xe0>
   30e08:	str	r7, [r0]
   30e0c:	sub	r1, r6, #1
   30e10:	mov	r0, r5
   30e14:	mov	r2, #1
   30e18:	mov	r3, #1
   30e1c:	bl	31040 <flatcc_builder_table_add@@Base>
   30e20:	cmp	r0, #0
   30e24:	strbne	r4, [r0]
   30e28:	movne	r0, #0
   30e2c:	popne	{r4, r5, r6, r7, fp, pc}
   30e30:	movw	r0, #40961	; 0xa001
   30e34:	movw	r1, #38006	; 0x9476
   30e38:	movw	r3, #40829	; 0x9f7d
   30e3c:	movw	r2, #1526	; 0x5f6
   30e40:	movt	r0, #4
   30e44:	movt	r1, #4
   30e48:	movt	r3, #4
   30e4c:	bl	14f44 <__assert_fail@plt>
   30e50:	movw	r0, #40075	; 0x9c8b
   30e54:	movw	r1, #38006	; 0x9476
   30e58:	movw	r3, #40829	; 0x9f7d
   30e5c:	movw	r2, #1518	; 0x5ee
   30e60:	movt	r0, #4
   30e64:	movt	r1, #4
   30e68:	movt	r3, #4
   30e6c:	bl	14f44 <__assert_fail@plt>
   30e70:	movw	r0, #40917	; 0x9fd5
   30e74:	movw	r1, #38006	; 0x9476
   30e78:	movw	r3, #40829	; 0x9f7d
   30e7c:	movw	r2, #1519	; 0x5ef
   30e80:	movt	r0, #4
   30e84:	movt	r1, #4
   30e88:	movt	r3, #4
   30e8c:	bl	14f44 <__assert_fail@plt>
   30e90:	movw	r0, #40951	; 0x9ff7
   30e94:	movw	r1, #38006	; 0x9476
   30e98:	movw	r3, #40829	; 0x9f7d
   30e9c:	movw	r2, #1522	; 0x5f2
   30ea0:	movt	r0, #4
   30ea4:	movt	r1, #4
   30ea8:	movt	r3, #4
   30eac:	bl	14f44 <__assert_fail@plt>

00030eb0 <flatcc_builder_table_add_offset@@Base>:
   30eb0:	push	{r4, r5, r6, r7, fp, lr}
   30eb4:	add	fp, sp, #16
   30eb8:	sub	sp, sp, #8
   30ebc:	mov	r4, r0
   30ec0:	ldr	r0, [r0, #32]
   30ec4:	ldrh	r0, [r0, #14]
   30ec8:	cmp	r0, #3
   30ecc:	bne	30fe0 <flatcc_builder_table_add_offset@@Base+0x130>
   30ed0:	movw	r0, #32765	; 0x7ffd
   30ed4:	mov	r5, r1
   30ed8:	cmp	r1, r0
   30edc:	bcs	31000 <flatcc_builder_table_add_offset@@Base+0x150>
   30ee0:	ldr	r0, [r4, #4]
   30ee4:	add	r1, r0, r5, lsl #1
   30ee8:	ldrh	r1, [r1]
   30eec:	cmp	r1, #0
   30ef0:	bne	31020 <flatcc_builder_table_add_offset@@Base+0x170>
   30ef4:	ldr	r2, [r4, #20]
   30ef8:	ldr	r1, [r4, #12]
   30efc:	ldr	r3, [r4, #24]
   30f00:	add	r2, r2, #3
   30f04:	eor	r1, r1, r5
   30f08:	bic	r6, r2, #3
   30f0c:	movw	r2, #31153	; 0x79b1
   30f10:	movt	r2, #40503	; 0x9e37
   30f14:	add	r7, r6, #4
   30f18:	mul	r1, r1, r2
   30f1c:	cmp	r7, r3
   30f20:	str	r7, [r4, #20]
   30f24:	eor	r1, r1, #4
   30f28:	mul	r1, r1, r2
   30f2c:	str	r1, [r4, #12]
   30f30:	bls	30fa4 <flatcc_builder_table_add_offset@@Base+0xf4>
   30f34:	ldr	r1, [r4, #28]
   30f38:	ldr	r0, [r4, #40]	; 0x28
   30f3c:	ldr	ip, [r4, #48]	; 0x30
   30f40:	mov	r2, #1
   30f44:	mov	r3, #1
   30f48:	str	r2, [sp]
   30f4c:	add	r2, r1, r7
   30f50:	add	r1, r4, #60	; 0x3c
   30f54:	blx	ip
   30f58:	mov	r1, r0
   30f5c:	mov	r0, #0
   30f60:	cmp	r1, #0
   30f64:	beq	30f70 <flatcc_builder_table_add_offset@@Base+0xc0>
   30f68:	sub	sp, fp, #16
   30f6c:	pop	{r4, r5, r6, r7, fp, pc}
   30f70:	ldr	r0, [r4, #28]
   30f74:	ldr	r2, [r4, #60]	; 0x3c
   30f78:	ldr	r3, [r4, #64]	; 0x40
   30f7c:	ldr	r1, [r4, #32]
   30f80:	add	r2, r2, r0
   30f84:	sub	r0, r3, r0
   30f88:	str	r2, [r4, #16]
   30f8c:	movw	r2, #65532	; 0xfffc
   30f90:	cmp	r0, r2
   30f94:	movcs	r0, r2
   30f98:	str	r0, [r4, #24]
   30f9c:	str	r2, [r1, #4]
   30fa0:	ldr	r0, [r4, #4]
   30fa4:	uxth	r1, r5
   30fa8:	add	r0, r0, r1, lsl #1
   30fac:	strh	r7, [r0]
   30fb0:	ldrh	r0, [r4, #8]
   30fb4:	cmp	r0, r1
   30fb8:	addls	r0, r5, #1
   30fbc:	strhls	r0, [r4, #8]
   30fc0:	ldr	r0, [r4]
   30fc4:	add	r1, r0, #2
   30fc8:	str	r1, [r4]
   30fcc:	strh	r6, [r0]
   30fd0:	ldr	r0, [r4, #16]
   30fd4:	add	r0, r0, r6
   30fd8:	sub	sp, fp, #16
   30fdc:	pop	{r4, r5, r6, r7, fp, pc}
   30fe0:	movw	r0, #40075	; 0x9c8b
   30fe4:	movw	r1, #38006	; 0x9476
   30fe8:	movw	r3, #41855	; 0xa37f
   30fec:	movw	r2, #1811	; 0x713
   30ff0:	movt	r0, #4
   30ff4:	movt	r1, #4
   30ff8:	movt	r3, #4
   30ffc:	bl	14f44 <__assert_fail@plt>
   31000:	movw	r0, #41727	; 0xa2ff
   31004:	movw	r1, #38006	; 0x9476
   31008:	movw	r3, #41855	; 0xa37f
   3100c:	movw	r2, #1812	; 0x714
   31010:	movt	r0, #4
   31014:	movt	r1, #4
   31018:	movt	r3, #4
   3101c:	bl	14f44 <__assert_fail@plt>
   31020:	movw	r0, #42524	; 0xa61c
   31024:	movw	r1, #38006	; 0x9476
   31028:	movw	r3, #41855	; 0xa37f
   3102c:	movw	r2, #1819	; 0x71b
   31030:	movt	r0, #4
   31034:	movt	r1, #4
   31038:	movt	r3, #4
   3103c:	bl	14f44 <__assert_fail@plt>

00031040 <flatcc_builder_table_add@@Base>:
   31040:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31044:	add	fp, sp, #24
   31048:	sub	sp, sp, #8
   3104c:	mov	r4, r0
   31050:	ldr	r0, [r0, #32]
   31054:	ldrh	r0, [r0, #14]
   31058:	cmp	r0, #3
   3105c:	bne	3117c <flatcc_builder_table_add@@Base+0x13c>
   31060:	movw	r0, #32765	; 0x7ffd
   31064:	mov	r8, r1
   31068:	cmp	r1, r0
   3106c:	bcs	3119c <flatcc_builder_table_add@@Base+0x15c>
   31070:	ldrh	r0, [r4, #130]	; 0x82
   31074:	cmp	r0, r3
   31078:	strhcc	r3, [r4, #130]	; 0x82
   3107c:	ldr	r0, [r4, #4]
   31080:	add	r1, r0, r8, lsl #1
   31084:	ldrh	r1, [r1]
   31088:	cmp	r1, #0
   3108c:	bne	311bc <flatcc_builder_table_add@@Base+0x17c>
   31090:	ldr	r1, [r4, #12]
   31094:	movw	r7, #31153	; 0x79b1
   31098:	ldr	r6, [r4, #20]
   3109c:	ldr	r5, [r4, #24]
   310a0:	movt	r7, #40503	; 0x9e37
   310a4:	eor	r1, r1, r8
   310a8:	mul	r1, r1, r7
   310ac:	eor	r1, r1, r2
   310b0:	mul	r1, r1, r7
   310b4:	str	r1, [r4, #12]
   310b8:	add	r1, r3, r6
   310bc:	rsb	r3, r3, #0
   310c0:	sub	r1, r1, #1
   310c4:	and	r6, r1, r3
   310c8:	add	r1, r6, r2
   310cc:	cmp	r1, r5
   310d0:	str	r1, [r4, #20]
   310d4:	bcc	3114c <flatcc_builder_table_add@@Base+0x10c>
   310d8:	ldr	r2, [r4, #28]
   310dc:	ldr	r0, [r4, #40]	; 0x28
   310e0:	ldr	r7, [r4, #48]	; 0x30
   310e4:	mov	r3, #1
   310e8:	str	r3, [sp]
   310ec:	mov	r3, #1
   310f0:	add	r1, r1, r2
   310f4:	add	r2, r1, #1
   310f8:	add	r1, r4, #60	; 0x3c
   310fc:	blx	r7
   31100:	mov	r1, r0
   31104:	mov	r0, #0
   31108:	cmp	r1, #0
   3110c:	beq	31118 <flatcc_builder_table_add@@Base+0xd8>
   31110:	sub	sp, fp, #24
   31114:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31118:	ldr	r0, [r4, #28]
   3111c:	ldr	r2, [r4, #60]	; 0x3c
   31120:	ldr	r3, [r4, #64]	; 0x40
   31124:	ldr	r1, [r4, #32]
   31128:	add	r2, r2, r0
   3112c:	sub	r0, r3, r0
   31130:	str	r2, [r4, #16]
   31134:	movw	r2, #65532	; 0xfffc
   31138:	cmp	r0, r2
   3113c:	movcs	r0, r2
   31140:	str	r0, [r4, #24]
   31144:	str	r2, [r1, #4]
   31148:	ldr	r0, [r4, #4]
   3114c:	uxth	r1, r8
   31150:	add	r2, r6, #4
   31154:	add	r0, r0, r1, lsl #1
   31158:	strh	r2, [r0]
   3115c:	ldrh	r0, [r4, #8]
   31160:	cmp	r0, r1
   31164:	addls	r0, r8, #1
   31168:	strhls	r0, [r4, #8]
   3116c:	ldr	r0, [r4, #16]
   31170:	add	r0, r0, r6
   31174:	sub	sp, fp, #24
   31178:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3117c:	movw	r0, #40075	; 0x9c8b
   31180:	movw	r1, #38006	; 0x9476
   31184:	movw	r3, #41653	; 0xa2b5
   31188:	movw	r2, #1773	; 0x6ed
   3118c:	movt	r0, #4
   31190:	movt	r1, #4
   31194:	movt	r3, #4
   31198:	bl	14f44 <__assert_fail@plt>
   3119c:	movw	r0, #41727	; 0xa2ff
   311a0:	movw	r1, #38006	; 0x9476
   311a4:	movw	r3, #41653	; 0xa2b5
   311a8:	movw	r2, #1774	; 0x6ee
   311ac:	movt	r0, #4
   311b0:	movt	r1, #4
   311b4:	movt	r3, #4
   311b8:	bl	14f44 <__assert_fail@plt>
   311bc:	movw	r0, #42524	; 0xa61c
   311c0:	movw	r1, #38006	; 0x9476
   311c4:	movw	r3, #41653	; 0xa2b5
   311c8:	movw	r2, #1784	; 0x6f8
   311cc:	movt	r0, #4
   311d0:	movt	r1, #4
   311d4:	movt	r3, #4
   311d8:	bl	14f44 <__assert_fail@plt>

000311dc <flatcc_builder_table_add_union_vector@@Base>:
   311dc:	push	{r4, r5, r6, r7, fp, lr}
   311e0:	add	fp, sp, #16
   311e4:	mov	r6, r0
   311e8:	ldr	r0, [r0, #32]
   311ec:	ldrh	r0, [r0, #14]
   311f0:	cmp	r0, #3
   311f4:	bne	3125c <flatcc_builder_table_add_union_vector@@Base+0x80>
   311f8:	clz	r0, r3
   311fc:	mov	r5, r1
   31200:	clz	r1, r2
   31204:	mov	r4, r3
   31208:	mov	r7, r2
   3120c:	lsr	r0, r0, #5
   31210:	lsr	r1, r1, #5
   31214:	cmp	r1, r0
   31218:	bne	3127c <flatcc_builder_table_add_union_vector@@Base+0xa0>
   3121c:	cmp	r7, #0
   31220:	beq	31254 <flatcc_builder_table_add_union_vector@@Base+0x78>
   31224:	sub	r1, r5, #1
   31228:	mov	r0, r6
   3122c:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   31230:	cmp	r0, #0
   31234:	beq	3129c <flatcc_builder_table_add_union_vector@@Base+0xc0>
   31238:	str	r7, [r0]
   3123c:	mov	r0, r6
   31240:	mov	r1, r5
   31244:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   31248:	cmp	r0, #0
   3124c:	beq	312bc <flatcc_builder_table_add_union_vector@@Base+0xe0>
   31250:	str	r4, [r0]
   31254:	mov	r0, #0
   31258:	pop	{r4, r5, r6, r7, fp, pc}
   3125c:	movw	r0, #40075	; 0x9c8b
   31260:	movw	r1, #38006	; 0x9476
   31264:	movw	r3, #40973	; 0xa00d
   31268:	mov	r2, #1536	; 0x600
   3126c:	movt	r0, #4
   31270:	movt	r1, #4
   31274:	movt	r3, #4
   31278:	bl	14f44 <__assert_fail@plt>
   3127c:	movw	r0, #41072	; 0xa070
   31280:	movw	r1, #38006	; 0x9476
   31284:	movw	r3, #40973	; 0xa00d
   31288:	movw	r2, #1537	; 0x601
   3128c:	movt	r0, #4
   31290:	movt	r1, #4
   31294:	movt	r3, #4
   31298:	bl	14f44 <__assert_fail@plt>
   3129c:	movw	r0, #40951	; 0x9ff7
   312a0:	movw	r1, #38006	; 0x9476
   312a4:	movw	r3, #40973	; 0xa00d
   312a8:	movw	r2, #1540	; 0x604
   312ac:	movt	r0, #4
   312b0:	movt	r1, #4
   312b4:	movt	r3, #4
   312b8:	bl	14f44 <__assert_fail@plt>
   312bc:	movw	r0, #40951	; 0x9ff7
   312c0:	movw	r1, #38006	; 0x9476
   312c4:	movw	r3, #40973	; 0xa00d
   312c8:	movw	r2, #1544	; 0x608
   312cc:	movt	r0, #4
   312d0:	movt	r1, #4
   312d4:	movt	r3, #4
   312d8:	bl	14f44 <__assert_fail@plt>

000312dc <flatcc_builder_create_union_vector@@Base>:
   312dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   312e0:	add	fp, sp, #28
   312e4:	sub	sp, sp, #12
   312e8:	mov	r7, #0
   312ec:	mov	r4, r1
   312f0:	mov	r5, r0
   312f4:	mov	sl, r3
   312f8:	mov	r9, r2
   312fc:	mov	r6, #4
   31300:	str	r7, [r0]
   31304:	str	r7, [r0, #4]
   31308:	mov	r0, r1
   3130c:	mov	r1, #4
   31310:	bl	2e794 <flatcc_builder_start_buffer@@Base+0xbc>
   31314:	cmp	r0, #0
   31318:	beq	31324 <flatcc_builder_create_union_vector@@Base+0x48>
   3131c:	sub	sp, fp, #28
   31320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31324:	ldr	r0, [r4, #32]
   31328:	mov	r1, #5
   3132c:	str	r6, [r0, #16]
   31330:	ldr	r0, [r4, #32]
   31334:	str	r7, [r0, #20]
   31338:	ldr	r0, [r4, #32]
   3133c:	strh	r1, [r0, #14]
   31340:	ldr	r1, [r4, #28]
   31344:	ldr	r2, [r4, #60]	; 0x3c
   31348:	ldr	r3, [r4, #64]	; 0x40
   3134c:	add	r2, r2, r1
   31350:	sub	r1, r3, r1
   31354:	str	r2, [r4, #16]
   31358:	mvn	r2, #3
   3135c:	cmn	r1, #4
   31360:	movcs	r1, r2
   31364:	str	r1, [r4, #24]
   31368:	str	r2, [r0, #4]
   3136c:	ldr	r1, [r0, #20]
   31370:	adds	r1, r1, sl
   31374:	cmpcc	r1, #1073741824	; 0x40000000
   31378:	bcc	3139c <flatcc_builder_create_union_vector@@Base+0xc0>
   3137c:	movw	r0, #42277	; 0xa525
   31380:	movw	r1, #38006	; 0x9476
   31384:	movw	r3, #42304	; 0xa540
   31388:	mov	r2, #892	; 0x37c
   3138c:	movt	r0, #4
   31390:	movt	r1, #4
   31394:	movt	r3, #4
   31398:	bl	14f44 <__assert_fail@plt>
   3139c:	str	r1, [r0, #20]
   313a0:	ldr	r7, [r4, #20]
   313a4:	ldr	r0, [r4, #24]
   313a8:	add	r1, r7, sl, lsl #2
   313ac:	cmp	r1, r0
   313b0:	str	r1, [r4, #20]
   313b4:	bcs	313c8 <flatcc_builder_create_union_vector@@Base+0xec>
   313b8:	ldr	r1, [r4, #16]
   313bc:	adds	r2, r1, r7
   313c0:	bne	31430 <flatcc_builder_create_union_vector@@Base+0x154>
   313c4:	b	3131c <flatcc_builder_create_union_vector@@Base+0x40>
   313c8:	ldr	r2, [r4, #28]
   313cc:	ldr	r0, [r4, #40]	; 0x28
   313d0:	ldr	r6, [r4, #48]	; 0x30
   313d4:	mov	r3, #1
   313d8:	str	r3, [sp]
   313dc:	mov	r3, #1
   313e0:	add	r1, r1, r2
   313e4:	add	r2, r1, #1
   313e8:	add	r1, r4, #60	; 0x3c
   313ec:	blx	r6
   313f0:	cmp	r0, #0
   313f4:	bne	3131c <flatcc_builder_create_union_vector@@Base+0x40>
   313f8:	ldr	r0, [r4, #28]
   313fc:	ldr	r1, [r4, #60]	; 0x3c
   31400:	ldr	r3, [r4, #64]	; 0x40
   31404:	ldr	r2, [r4, #32]
   31408:	add	r1, r1, r0
   3140c:	sub	r0, r3, r0
   31410:	mvn	r3, #3
   31414:	cmn	r0, #4
   31418:	str	r1, [r4, #16]
   3141c:	movcs	r0, r3
   31420:	str	r0, [r4, #24]
   31424:	str	r3, [r2, #4]
   31428:	adds	r2, r1, r7
   3142c:	beq	3131c <flatcc_builder_create_union_vector@@Base+0x40>
   31430:	ldr	r7, [r4, #20]
   31434:	add	r2, r7, sl
   31438:	cmp	r2, r0
   3143c:	str	r2, [r4, #20]
   31440:	bcc	314a4 <flatcc_builder_create_union_vector@@Base+0x1c8>
   31444:	ldr	r1, [r4, #28]
   31448:	ldr	r0, [r4, #40]	; 0x28
   3144c:	ldr	r6, [r4, #48]	; 0x30
   31450:	mov	r3, #1
   31454:	str	r3, [sp]
   31458:	mov	r3, #1
   3145c:	add	r1, r2, r1
   31460:	add	r2, r1, #1
   31464:	add	r1, r4, #60	; 0x3c
   31468:	blx	r6
   3146c:	cmp	r0, #0
   31470:	bne	3131c <flatcc_builder_create_union_vector@@Base+0x40>
   31474:	ldr	r0, [r4, #28]
   31478:	ldr	r1, [r4, #60]	; 0x3c
   3147c:	ldr	r3, [r4, #64]	; 0x40
   31480:	ldr	r2, [r4, #32]
   31484:	add	r1, r1, r0
   31488:	sub	r0, r3, r0
   3148c:	mvn	r3, #3
   31490:	cmn	r0, #4
   31494:	str	r1, [r4, #16]
   31498:	movcs	r0, r3
   3149c:	str	r0, [r4, #24]
   314a0:	str	r3, [r2, #4]
   314a4:	adds	r8, r1, r7
   314a8:	beq	3131c <flatcc_builder_create_union_vector@@Base+0x40>
   314ac:	cmp	sl, #0
   314b0:	beq	314e0 <flatcc_builder_create_union_vector@@Base+0x204>
   314b4:	add	r0, r9, #4
   314b8:	mov	r2, sl
   314bc:	mov	r3, r1
   314c0:	mov	r7, r8
   314c4:	ldrb	r6, [r0, #-4]
   314c8:	subs	r2, r2, #1
   314cc:	strb	r6, [r7], #1
   314d0:	ldr	r6, [r0]
   314d4:	add	r0, r0, #8
   314d8:	str	r6, [r3], #4
   314dc:	bne	314c4 <flatcc_builder_create_union_vector@@Base+0x1e8>
   314e0:	mov	r0, r4
   314e4:	mov	r2, sl
   314e8:	mov	r3, r8
   314ec:	bl	30aa4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   314f0:	mov	r7, r0
   314f4:	mov	r9, #0
   314f8:	cmp	r0, #0
   314fc:	beq	31528 <flatcc_builder_create_union_vector@@Base+0x24c>
   31500:	mvn	r0, #0
   31504:	mov	r1, #1
   31508:	mov	r2, sl
   3150c:	mov	r3, #1
   31510:	str	r1, [sp]
   31514:	str	r0, [sp, #4]
   31518:	mov	r0, r4
   3151c:	mov	r1, r8
   31520:	bl	30840 <flatcc_builder_create_vector@@Base>
   31524:	b	3152c <flatcc_builder_create_union_vector@@Base+0x250>
   31528:	mov	r0, #0
   3152c:	orr	r1, r9, r7
   31530:	stm	r5, {r0, r1}
   31534:	mov	r1, #0
   31538:	ldr	r0, [r4, #16]
   3153c:	ldr	r2, [r4, #20]
   31540:	bl	14ef0 <memset@plt>
   31544:	ldr	r0, [r4, #32]
   31548:	ldr	r1, [r4, #60]	; 0x3c
   3154c:	ldr	r2, [r4, #64]	; 0x40
   31550:	ldr	r3, [r0, #8]
   31554:	str	r3, [r4, #20]
   31558:	ldr	r3, [r0]
   3155c:	str	r3, [r4, #28]
   31560:	add	r1, r1, r3
   31564:	ldr	r7, [r0, #4]
   31568:	str	r1, [r4, #16]
   3156c:	sub	r1, r2, r3
   31570:	cmp	r1, r7
   31574:	movhi	r1, r7
   31578:	str	r1, [r4, #24]
   3157c:	ldrh	r1, [r4, #130]	; 0x82
   31580:	ldrh	r2, [r4, #128]	; 0x80
   31584:	cmp	r2, r1
   31588:	strhcc	r1, [r4, #128]	; 0x80
   3158c:	ldrh	r1, [r0, #12]
   31590:	sub	r0, r0, #36	; 0x24
   31594:	str	r0, [r4, #32]
   31598:	strh	r1, [r4, #130]	; 0x82
   3159c:	ldr	r0, [r4, #156]	; 0x9c
   315a0:	sub	r0, r0, #1
   315a4:	str	r0, [r4, #156]	; 0x9c
   315a8:	sub	sp, fp, #28
   315ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000315b0 <flatcc_builder_create_union_vector_direct@@Base>:
   315b0:	push	{r4, r5, r6, r7, fp, lr}
   315b4:	add	fp, sp, #16
   315b8:	sub	sp, sp, #8
   315bc:	ldr	r7, [fp, #8]
   315c0:	mov	r5, r2
   315c4:	mov	r4, r0
   315c8:	mov	r0, #0
   315cc:	mov	r6, r1
   315d0:	str	r0, [r4]
   315d4:	str	r0, [r4, #4]
   315d8:	mov	r0, r1
   315dc:	mov	r1, r3
   315e0:	mov	r3, r5
   315e4:	mov	r2, r7
   315e8:	bl	30aa4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   315ec:	cmp	r0, #0
   315f0:	str	r0, [r4, #4]
   315f4:	beq	31620 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   315f8:	mvn	r0, #0
   315fc:	mov	r1, #1
   31600:	mov	r2, r7
   31604:	mov	r3, #1
   31608:	str	r1, [sp]
   3160c:	str	r0, [sp, #4]
   31610:	mov	r0, r6
   31614:	mov	r1, r5
   31618:	bl	30840 <flatcc_builder_create_vector@@Base>
   3161c:	str	r0, [r4]
   31620:	sub	sp, fp, #16
   31624:	pop	{r4, r5, r6, r7, fp, pc}

00031628 <flatcc_builder_start_union_vector@@Base>:
   31628:	push	{r4, sl, fp, lr}
   3162c:	add	fp, sp, #8
   31630:	mov	r1, #4
   31634:	mov	r4, r0
   31638:	bl	2e794 <flatcc_builder_start_buffer@@Base+0xbc>
   3163c:	mov	r1, r0
   31640:	mvn	r0, #0
   31644:	cmp	r1, #0
   31648:	popne	{r4, sl, fp, pc}
   3164c:	ldr	r0, [r4, #32]
   31650:	mov	r1, #8
   31654:	mov	r2, #7
   31658:	str	r1, [r0, #16]
   3165c:	mov	r0, #0
   31660:	ldr	r1, [r4, #32]
   31664:	str	r0, [r1, #20]
   31668:	ldr	r1, [r4, #32]
   3166c:	strh	r2, [r1, #14]
   31670:	ldr	r2, [r4, #28]
   31674:	ldr	r3, [r4, #60]	; 0x3c
   31678:	ldr	ip, [r4, #64]	; 0x40
   3167c:	add	r3, r3, r2
   31680:	sub	r2, ip, r2
   31684:	str	r3, [r4, #16]
   31688:	mvn	r3, #3
   3168c:	cmn	r2, #4
   31690:	movcs	r2, r3
   31694:	str	r2, [r4, #24]
   31698:	str	r3, [r1, #4]
   3169c:	pop	{r4, sl, fp, pc}

000316a0 <flatcc_builder_end_union_vector@@Base>:
   316a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   316a4:	add	fp, sp, #28
   316a8:	sub	sp, sp, #12
   316ac:	mov	sl, r0
   316b0:	mov	r0, #0
   316b4:	mov	r4, r1
   316b8:	str	r0, [sl]
   316bc:	str	r0, [sl, #4]
   316c0:	ldr	r0, [r1, #32]
   316c4:	ldrh	r1, [r0, #14]
   316c8:	cmp	r1, #7
   316cc:	bne	31874 <flatcc_builder_end_union_vector@@Base+0x1d4>
   316d0:	ldr	r6, [r0, #20]
   316d4:	ldr	r7, [r4, #20]
   316d8:	ldr	r2, [r4, #24]
   316dc:	add	r0, r6, r6, lsl #2
   316e0:	add	r1, r7, r0
   316e4:	cmp	r1, r2
   316e8:	str	r1, [r4, #20]
   316ec:	bcs	3177c <flatcc_builder_end_union_vector@@Base+0xdc>
   316f0:	ldr	r0, [r4, #16]
   316f4:	adds	r1, r0, r7
   316f8:	beq	317e4 <flatcc_builder_end_union_vector@@Base+0x144>
   316fc:	add	r8, r1, r6, lsl #2
   31700:	cmp	r6, #0
   31704:	beq	31734 <flatcc_builder_end_union_vector@@Base+0x94>
   31708:	add	r0, r0, #4
   3170c:	mov	r2, r6
   31710:	mov	r3, r1
   31714:	mov	r7, r8
   31718:	ldrb	r5, [r0, #-4]
   3171c:	subs	r2, r2, #1
   31720:	strb	r5, [r7], #1
   31724:	ldr	r5, [r0]
   31728:	add	r0, r0, #8
   3172c:	str	r5, [r3], #4
   31730:	bne	31718 <flatcc_builder_end_union_vector@@Base+0x78>
   31734:	mov	r0, r4
   31738:	mov	r2, r6
   3173c:	mov	r3, r8
   31740:	bl	30aa4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   31744:	mov	r7, r0
   31748:	mov	r9, #0
   3174c:	cmp	r0, #0
   31750:	beq	317ec <flatcc_builder_end_union_vector@@Base+0x14c>
   31754:	mvn	r0, #0
   31758:	mov	r1, #1
   3175c:	mov	r2, r6
   31760:	mov	r3, #1
   31764:	str	r1, [sp]
   31768:	str	r0, [sp, #4]
   3176c:	mov	r0, r4
   31770:	mov	r1, r8
   31774:	bl	30840 <flatcc_builder_create_vector@@Base>
   31778:	b	317f0 <flatcc_builder_end_union_vector@@Base+0x150>
   3177c:	ldr	r2, [r4, #28]
   31780:	ldr	r0, [r4, #40]	; 0x28
   31784:	ldr	r5, [r4, #48]	; 0x30
   31788:	mov	r3, #1
   3178c:	str	r3, [sp]
   31790:	mov	r3, #1
   31794:	add	r1, r1, r2
   31798:	add	r2, r1, #1
   3179c:	add	r1, r4, #60	; 0x3c
   317a0:	blx	r5
   317a4:	cmp	r0, #0
   317a8:	bne	317e4 <flatcc_builder_end_union_vector@@Base+0x144>
   317ac:	ldr	r1, [r4, #28]
   317b0:	ldr	r0, [r4, #60]	; 0x3c
   317b4:	ldr	r3, [r4, #64]	; 0x40
   317b8:	ldr	r2, [r4, #32]
   317bc:	add	r0, r0, r1
   317c0:	sub	r1, r3, r1
   317c4:	mvn	r3, #3
   317c8:	cmn	r1, #4
   317cc:	str	r0, [r4, #16]
   317d0:	movcs	r1, r3
   317d4:	str	r1, [r4, #24]
   317d8:	str	r3, [r2, #4]
   317dc:	adds	r1, r0, r7
   317e0:	bne	316fc <flatcc_builder_end_union_vector@@Base+0x5c>
   317e4:	sub	sp, fp, #28
   317e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   317ec:	mov	r0, #0
   317f0:	orr	r1, r9, r7
   317f4:	stm	sl, {r0, r1}
   317f8:	mov	r1, #0
   317fc:	ldr	r0, [r4, #16]
   31800:	ldr	r2, [r4, #20]
   31804:	bl	14ef0 <memset@plt>
   31808:	ldr	r0, [r4, #32]
   3180c:	ldr	r1, [r4, #60]	; 0x3c
   31810:	ldr	r2, [r4, #64]	; 0x40
   31814:	ldr	r3, [r0, #8]
   31818:	str	r3, [r4, #20]
   3181c:	ldr	r3, [r0]
   31820:	str	r3, [r4, #28]
   31824:	add	r1, r1, r3
   31828:	ldr	r7, [r0, #4]
   3182c:	str	r1, [r4, #16]
   31830:	sub	r1, r2, r3
   31834:	cmp	r1, r7
   31838:	movhi	r1, r7
   3183c:	str	r1, [r4, #24]
   31840:	ldrh	r1, [r4, #130]	; 0x82
   31844:	ldrh	r2, [r4, #128]	; 0x80
   31848:	cmp	r2, r1
   3184c:	strhcc	r1, [r4, #128]	; 0x80
   31850:	ldrh	r1, [r0, #12]
   31854:	sub	r0, r0, #36	; 0x24
   31858:	str	r0, [r4, #32]
   3185c:	strh	r1, [r4, #130]	; 0x82
   31860:	ldr	r0, [r4, #156]	; 0x9c
   31864:	sub	r0, r0, #1
   31868:	str	r0, [r4, #156]	; 0x9c
   3186c:	sub	sp, fp, #28
   31870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31874:	movw	r0, #41112	; 0xa098
   31878:	movw	r1, #38006	; 0x9476
   3187c:	movw	r3, #41162	; 0xa0ca
   31880:	movw	r2, #1617	; 0x651
   31884:	movt	r0, #4
   31888:	movt	r1, #4
   3188c:	movt	r3, #4
   31890:	bl	14f44 <__assert_fail@plt>

00031894 <flatcc_builder_union_vector_count@@Base>:
   31894:	ldr	r0, [r0, #32]
   31898:	ldr	r0, [r0, #20]
   3189c:	bx	lr

000318a0 <flatcc_builder_union_vector_edit@@Base>:
   318a0:	ldr	r0, [r0, #16]
   318a4:	bx	lr

000318a8 <flatcc_builder_extend_union_vector@@Base>:
   318a8:	push	{r4, r5, fp, lr}
   318ac:	add	fp, sp, #8
   318b0:	sub	sp, sp, #8
   318b4:	mov	r4, r0
   318b8:	ldr	r0, [r0, #32]
   318bc:	ldr	r2, [r0, #20]
   318c0:	adds	r2, r2, r1
   318c4:	cmpcc	r2, #536870912	; 0x20000000
   318c8:	bcc	318ec <flatcc_builder_extend_union_vector@@Base+0x44>
   318cc:	movw	r0, #42277	; 0xa525
   318d0:	movw	r1, #38006	; 0x9476
   318d4:	movw	r3, #42304	; 0xa540
   318d8:	mov	r2, #892	; 0x37c
   318dc:	movt	r0, #4
   318e0:	movt	r1, #4
   318e4:	movt	r3, #4
   318e8:	bl	14f44 <__assert_fail@plt>
   318ec:	str	r2, [r0, #20]
   318f0:	ldr	r5, [r4, #20]
   318f4:	ldr	r0, [r4, #24]
   318f8:	add	r1, r5, r1, lsl #3
   318fc:	cmp	r1, r0
   31900:	str	r1, [r4, #20]
   31904:	bcs	31918 <flatcc_builder_extend_union_vector@@Base+0x70>
   31908:	ldr	r0, [r4, #16]
   3190c:	add	r0, r0, r5
   31910:	sub	sp, fp, #8
   31914:	pop	{r4, r5, fp, pc}
   31918:	ldr	r2, [r4, #28]
   3191c:	ldr	r0, [r4, #40]	; 0x28
   31920:	ldr	ip, [r4, #48]	; 0x30
   31924:	mov	r3, #1
   31928:	str	r3, [sp]
   3192c:	mov	r3, #1
   31930:	add	r1, r1, r2
   31934:	add	r2, r1, #1
   31938:	add	r1, r4, #60	; 0x3c
   3193c:	blx	ip
   31940:	mov	r1, r0
   31944:	mov	r0, #0
   31948:	cmp	r1, #0
   3194c:	beq	31958 <flatcc_builder_extend_union_vector@@Base+0xb0>
   31950:	sub	sp, fp, #8
   31954:	pop	{r4, r5, fp, pc}
   31958:	ldr	r1, [r4, #28]
   3195c:	ldr	r0, [r4, #60]	; 0x3c
   31960:	ldr	r3, [r4, #64]	; 0x40
   31964:	ldr	r2, [r4, #32]
   31968:	add	r0, r0, r1
   3196c:	sub	r1, r3, r1
   31970:	mvn	r3, #3
   31974:	cmn	r1, #4
   31978:	str	r0, [r4, #16]
   3197c:	movcs	r1, r3
   31980:	str	r1, [r4, #24]
   31984:	str	r3, [r2, #4]
   31988:	add	r0, r0, r5
   3198c:	sub	sp, fp, #8
   31990:	pop	{r4, r5, fp, pc}

00031994 <flatcc_builder_truncate_union_vector@@Base>:
   31994:	push	{fp, lr}
   31998:	mov	fp, sp
   3199c:	ldr	r2, [r0, #32]
   319a0:	ldrh	r3, [r2, #14]
   319a4:	cmp	r3, #7
   319a8:	bne	319f0 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   319ac:	ldr	r3, [r2, #20]
   319b0:	cmp	r3, r1
   319b4:	bcc	31a10 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   319b8:	sub	r3, r3, r1
   319bc:	str	r3, [r2, #20]
   319c0:	ldr	r2, [r0, #32]
   319c4:	ldr	r3, [r0, #20]
   319c8:	ldr	ip, [r0, #16]
   319cc:	ldr	r2, [r2, #16]
   319d0:	mls	r3, r2, r1, r3
   319d4:	mul	r2, r2, r1
   319d8:	mov	r1, #0
   319dc:	str	r3, [r0, #20]
   319e0:	add	r0, ip, r3
   319e4:	bl	14ef0 <memset@plt>
   319e8:	mov	r0, #0
   319ec:	pop	{fp, pc}
   319f0:	movw	r0, #41112	; 0xa098
   319f4:	movw	r1, #38006	; 0x9476
   319f8:	movw	r3, #41245	; 0xa11d
   319fc:	movw	r2, #1665	; 0x681
   31a00:	movt	r0, #4
   31a04:	movt	r1, #4
   31a08:	movt	r3, #4
   31a0c:	bl	14f44 <__assert_fail@plt>
   31a10:	movw	r0, #39676	; 0x9afc
   31a14:	movw	r1, #38006	; 0x9476
   31a18:	movw	r3, #41245	; 0xa11d
   31a1c:	movw	r2, #1666	; 0x682
   31a20:	movt	r0, #4
   31a24:	movt	r1, #4
   31a28:	movt	r3, #4
   31a2c:	bl	14f44 <__assert_fail@plt>

00031a30 <flatcc_builder_union_vector_push@@Base>:
   31a30:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31a34:	add	fp, sp, #24
   31a38:	sub	sp, sp, #8
   31a3c:	mov	r7, r0
   31a40:	ldr	r0, [r0, #32]
   31a44:	mov	r9, r1
   31a48:	ldrh	r1, [r0, #14]
   31a4c:	cmp	r1, #7
   31a50:	bne	31b18 <flatcc_builder_union_vector_push@@Base+0xe8>
   31a54:	ldr	r1, [r0, #20]
   31a58:	mov	r6, #0
   31a5c:	cmn	r1, #-536870911	; 0xe0000001
   31a60:	beq	31ac0 <flatcc_builder_union_vector_push@@Base+0x90>
   31a64:	add	r1, r1, #1
   31a68:	mov	r8, r2
   31a6c:	str	r1, [r0, #20]
   31a70:	ldr	r4, [r7, #20]
   31a74:	ldr	r0, [r7, #24]
   31a78:	add	r1, r4, #8
   31a7c:	cmp	r1, r0
   31a80:	str	r1, [r7, #20]
   31a84:	bcs	31a90 <flatcc_builder_union_vector_push@@Base+0x60>
   31a88:	ldr	r0, [r7, #16]
   31a8c:	b	31afc <flatcc_builder_union_vector_push@@Base+0xcc>
   31a90:	ldr	r1, [r7, #28]
   31a94:	ldr	r0, [r7, #40]	; 0x28
   31a98:	ldr	r5, [r7, #48]	; 0x30
   31a9c:	mov	r2, #1
   31aa0:	mov	r3, #1
   31aa4:	str	r2, [sp]
   31aa8:	add	r1, r4, r1
   31aac:	add	r2, r1, #9
   31ab0:	add	r1, r7, #60	; 0x3c
   31ab4:	blx	r5
   31ab8:	cmp	r0, #0
   31abc:	beq	31acc <flatcc_builder_union_vector_push@@Base+0x9c>
   31ac0:	mov	r0, r6
   31ac4:	sub	sp, fp, #24
   31ac8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31acc:	ldr	r1, [r7, #28]
   31ad0:	ldr	r0, [r7, #60]	; 0x3c
   31ad4:	ldr	r3, [r7, #64]	; 0x40
   31ad8:	ldr	r2, [r7, #32]
   31adc:	add	r0, r0, r1
   31ae0:	sub	r1, r3, r1
   31ae4:	mvn	r3, #3
   31ae8:	cmn	r1, #4
   31aec:	str	r0, [r7, #16]
   31af0:	movcs	r1, r3
   31af4:	str	r1, [r7, #24]
   31af8:	str	r3, [r2, #4]
   31afc:	adds	r0, r0, r4
   31b00:	movne	r6, r0
   31b04:	strne	r9, [r0]
   31b08:	strne	r8, [r0, #4]
   31b0c:	mov	r0, r6
   31b10:	sub	sp, fp, #24
   31b14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31b18:	movw	r0, #41112	; 0xa098
   31b1c:	movw	r1, #38006	; 0x9476
   31b20:	movw	r3, #41314	; 0xa162
   31b24:	movw	r2, #1677	; 0x68d
   31b28:	movt	r0, #4
   31b2c:	movt	r1, #4
   31b30:	movt	r3, #4
   31b34:	bl	14f44 <__assert_fail@plt>

00031b38 <flatcc_builder_append_union_vector@@Base>:
   31b38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31b3c:	add	fp, sp, #24
   31b40:	sub	sp, sp, #8
   31b44:	mov	r6, r0
   31b48:	ldr	r0, [r0, #32]
   31b4c:	mov	r8, r1
   31b50:	ldrh	r1, [r0, #14]
   31b54:	cmp	r1, #7
   31b58:	bne	31c5c <flatcc_builder_append_union_vector@@Base+0x124>
   31b5c:	ldr	r1, [r0, #20]
   31b60:	mov	r5, r2
   31b64:	adds	r1, r1, r2
   31b68:	cmpcc	r1, #536870912	; 0x20000000
   31b6c:	bcc	31b90 <flatcc_builder_append_union_vector@@Base+0x58>
   31b70:	movw	r0, #42277	; 0xa525
   31b74:	movw	r1, #38006	; 0x9476
   31b78:	movw	r3, #42304	; 0xa540
   31b7c:	mov	r2, #892	; 0x37c
   31b80:	movt	r0, #4
   31b84:	movt	r1, #4
   31b88:	movt	r3, #4
   31b8c:	bl	14f44 <__assert_fail@plt>
   31b90:	str	r1, [r0, #20]
   31b94:	ldr	r4, [r6, #20]
   31b98:	ldr	r0, [r6, #24]
   31b9c:	add	r1, r4, r5, lsl #3
   31ba0:	cmp	r1, r0
   31ba4:	str	r1, [r6, #20]
   31ba8:	bcs	31bd4 <flatcc_builder_append_union_vector@@Base+0x9c>
   31bac:	ldr	r0, [r6, #16]
   31bb0:	adds	r7, r0, r4
   31bb4:	beq	31c4c <flatcc_builder_append_union_vector@@Base+0x114>
   31bb8:	lsl	r2, r5, #3
   31bbc:	mov	r0, r7
   31bc0:	mov	r1, r8
   31bc4:	bl	14e60 <memcpy@plt>
   31bc8:	mov	r0, r7
   31bcc:	sub	sp, fp, #24
   31bd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31bd4:	ldr	r2, [r6, #28]
   31bd8:	ldr	r0, [r6, #40]	; 0x28
   31bdc:	ldr	r7, [r6, #48]	; 0x30
   31be0:	mov	r3, #1
   31be4:	str	r3, [sp]
   31be8:	mov	r3, #1
   31bec:	add	r1, r1, r2
   31bf0:	add	r2, r1, #1
   31bf4:	add	r1, r6, #60	; 0x3c
   31bf8:	blx	r7
   31bfc:	mov	r7, #0
   31c00:	cmp	r0, #0
   31c04:	beq	31c14 <flatcc_builder_append_union_vector@@Base+0xdc>
   31c08:	mov	r0, r7
   31c0c:	sub	sp, fp, #24
   31c10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31c14:	ldr	r1, [r6, #28]
   31c18:	ldr	r0, [r6, #60]	; 0x3c
   31c1c:	ldr	r3, [r6, #64]	; 0x40
   31c20:	ldr	r2, [r6, #32]
   31c24:	add	r0, r0, r1
   31c28:	sub	r1, r3, r1
   31c2c:	mvn	r3, #3
   31c30:	cmn	r1, #4
   31c34:	str	r0, [r6, #16]
   31c38:	movcs	r1, r3
   31c3c:	str	r1, [r6, #24]
   31c40:	str	r3, [r2, #4]
   31c44:	adds	r7, r0, r4
   31c48:	bne	31bb8 <flatcc_builder_append_union_vector@@Base+0x80>
   31c4c:	mov	r7, #0
   31c50:	mov	r0, r7
   31c54:	sub	sp, fp, #24
   31c58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31c5c:	movw	r0, #41112	; 0xa098
   31c60:	movw	r1, #38006	; 0x9476
   31c64:	movw	r3, #41423	; 0xa1cf
   31c68:	movw	r2, #1692	; 0x69c
   31c6c:	movt	r0, #4
   31c70:	movt	r1, #4
   31c74:	movt	r3, #4
   31c78:	bl	14f44 <__assert_fail@plt>

00031c7c <flatcc_builder_create_string@@Base>:
   31c7c:	push	{r4, r5, r6, sl, fp, lr}
   31c80:	add	fp, sp, #16
   31c84:	sub	sp, sp, #80	; 0x50
   31c88:	str	r2, [fp, #-20]	; 0xffffffec
   31c8c:	mvn	r5, r2
   31c90:	mov	r6, r0
   31c94:	mov	r3, #1
   31c98:	cmp	r2, #0
   31c9c:	ldr	ip, [r0, #136]	; 0x88
   31ca0:	sub	r0, fp, #20
   31ca4:	str	r0, [sp, #12]
   31ca8:	mov	r0, #4
   31cac:	str	r0, [sp, #4]
   31cb0:	str	r0, [sp, #16]
   31cb4:	str	r3, [sp, #8]
   31cb8:	add	r5, ip, r5
   31cbc:	and	r5, r5, #3
   31cc0:	add	r5, r5, #1
   31cc4:	beq	31ce0 <flatcc_builder_create_string@@Base+0x64>
   31cc8:	mov	r3, #2
   31ccc:	add	r0, r2, #4
   31cd0:	str	r1, [sp, #20]
   31cd4:	str	r2, [sp, #24]
   31cd8:	str	r3, [sp, #8]
   31cdc:	str	r0, [sp, #4]
   31ce0:	movw	r2, #37476	; 0x9264
   31ce4:	add	lr, sp, #4
   31ce8:	add	r1, r0, r5
   31cec:	add	r0, lr, r3, lsl #3
   31cf0:	movt	r2, #4
   31cf4:	str	r1, [sp, #4]
   31cf8:	cmp	r1, #0
   31cfc:	str	r2, [r0, #8]
   31d00:	add	r2, r3, #1
   31d04:	str	r5, [r0, #12]
   31d08:	str	r2, [sp, #8]
   31d0c:	ble	31d60 <flatcc_builder_create_string@@Base+0xe4>
   31d10:	ldr	r0, [r6, #36]	; 0x24
   31d14:	ldr	r4, [r6, #44]	; 0x2c
   31d18:	sub	r5, ip, r1
   31d1c:	str	r1, [sp]
   31d20:	add	r1, lr, #8
   31d24:	mov	r3, r5
   31d28:	blx	r4
   31d2c:	cmp	r0, #0
   31d30:	streq	r5, [r6, #136]	; 0x88
   31d34:	moveq	r0, r5
   31d38:	subeq	sp, fp, #16
   31d3c:	popeq	{r4, r5, r6, sl, fp, pc}
   31d40:	movw	r0, #42524	; 0xa61c
   31d44:	movw	r1, #38006	; 0x9476
   31d48:	movw	r3, #42203	; 0xa4db
   31d4c:	movw	r2, #651	; 0x28b
   31d50:	movt	r0, #4
   31d54:	movt	r1, #4
   31d58:	movt	r3, #4
   31d5c:	bl	14f44 <__assert_fail@plt>
   31d60:	movw	r0, #42524	; 0xa61c
   31d64:	movw	r1, #38006	; 0x9476
   31d68:	movw	r3, #42203	; 0xa4db
   31d6c:	movw	r2, #647	; 0x287
   31d70:	movt	r0, #4
   31d74:	movt	r1, #4
   31d78:	movt	r3, #4
   31d7c:	bl	14f44 <__assert_fail@plt>

00031d80 <flatcc_builder_create_string_str@@Base>:
   31d80:	push	{r4, r5, fp, lr}
   31d84:	add	fp, sp, #8
   31d88:	mov	r5, r0
   31d8c:	mov	r0, r1
   31d90:	mov	r4, r1
   31d94:	bl	14ecc <strlen@plt>
   31d98:	mov	r2, r0
   31d9c:	mov	r0, r5
   31da0:	mov	r1, r4
   31da4:	pop	{r4, r5, fp, lr}
   31da8:	b	31c7c <flatcc_builder_create_string@@Base>

00031dac <flatcc_builder_create_string_strn@@Base>:
   31dac:	push	{r4, r5, r6, sl, fp, lr}
   31db0:	add	fp, sp, #16
   31db4:	mov	r6, r0
   31db8:	mov	r5, r1
   31dbc:	mov	r0, r1
   31dc0:	mov	r1, #0
   31dc4:	mov	r4, r2
   31dc8:	bl	14f14 <memchr@plt>
   31dcc:	cmp	r0, #0
   31dd0:	mov	r1, r5
   31dd4:	subne	r4, r0, r5
   31dd8:	mov	r0, r6
   31ddc:	mov	r2, r4
   31de0:	pop	{r4, r5, r6, sl, fp, lr}
   31de4:	b	31c7c <flatcc_builder_create_string@@Base>

00031de8 <flatcc_builder_end_string@@Base>:
   31de8:	push	{r4, r5, fp, lr}
   31dec:	add	fp, sp, #8
   31df0:	mov	r4, r0
   31df4:	ldr	r0, [r0, #32]
   31df8:	ldrh	r1, [r0, #14]
   31dfc:	cmp	r1, #6
   31e00:	bne	31ea8 <flatcc_builder_end_string@@Base+0xc0>
   31e04:	ldr	r2, [r0, #20]
   31e08:	ldr	r0, [r4, #20]
   31e0c:	cmp	r2, r0
   31e10:	bne	31ec8 <flatcc_builder_end_string@@Base+0xe0>
   31e14:	ldr	r1, [r4, #16]
   31e18:	mov	r0, r4
   31e1c:	bl	31c7c <flatcc_builder_create_string@@Base>
   31e20:	mov	r5, r0
   31e24:	cmp	r0, #0
   31e28:	beq	31ea0 <flatcc_builder_end_string@@Base+0xb8>
   31e2c:	ldr	r0, [r4, #16]
   31e30:	ldr	r2, [r4, #20]
   31e34:	mov	r1, #0
   31e38:	bl	14ef0 <memset@plt>
   31e3c:	ldr	r0, [r4, #32]
   31e40:	ldr	r1, [r4, #60]	; 0x3c
   31e44:	ldr	ip, [r4, #64]	; 0x40
   31e48:	ldr	r3, [r0, #8]
   31e4c:	str	r3, [r4, #20]
   31e50:	ldr	r3, [r0]
   31e54:	str	r3, [r4, #28]
   31e58:	add	r1, r1, r3
   31e5c:	ldr	r2, [r0, #4]
   31e60:	str	r1, [r4, #16]
   31e64:	sub	r1, ip, r3
   31e68:	cmp	r1, r2
   31e6c:	movhi	r1, r2
   31e70:	str	r1, [r4, #24]
   31e74:	ldrh	r1, [r4, #130]	; 0x82
   31e78:	ldrh	r2, [r4, #128]	; 0x80
   31e7c:	cmp	r2, r1
   31e80:	strhcc	r1, [r4, #128]	; 0x80
   31e84:	ldrh	r1, [r0, #12]
   31e88:	sub	r0, r0, #36	; 0x24
   31e8c:	str	r0, [r4, #32]
   31e90:	strh	r1, [r4, #130]	; 0x82
   31e94:	ldr	r0, [r4, #156]	; 0x9c
   31e98:	sub	r0, r0, #1
   31e9c:	str	r0, [r4, #156]	; 0x9c
   31ea0:	mov	r0, r5
   31ea4:	pop	{r4, r5, fp, pc}
   31ea8:	movw	r0, #39323	; 0x999b
   31eac:	movw	r1, #38006	; 0x9476
   31eb0:	movw	r3, #41550	; 0xa24e
   31eb4:	movw	r2, #1732	; 0x6c4
   31eb8:	movt	r0, #4
   31ebc:	movt	r1, #4
   31ec0:	movt	r3, #4
   31ec4:	bl	14f44 <__assert_fail@plt>
   31ec8:	movw	r0, #41617	; 0xa291
   31ecc:	movw	r1, #38006	; 0x9476
   31ed0:	movw	r3, #41550	; 0xa24e
   31ed4:	movw	r2, #1733	; 0x6c5
   31ed8:	movt	r0, #4
   31edc:	movt	r1, #4
   31ee0:	movt	r3, #4
   31ee4:	bl	14f44 <__assert_fail@plt>

00031ee8 <flatcc_builder_string_edit@@Base>:
   31ee8:	ldr	r0, [r0, #16]
   31eec:	bx	lr

00031ef0 <flatcc_builder_string_len@@Base>:
   31ef0:	ldr	r0, [r0, #32]
   31ef4:	ldr	r0, [r0, #20]
   31ef8:	bx	lr

00031efc <flatcc_builder_table_edit@@Base>:
   31efc:	ldr	r2, [r0, #32]
   31f00:	ldrh	r2, [r2, #14]
   31f04:	cmp	r2, #3
   31f08:	ldreq	r2, [r0, #16]
   31f0c:	ldreq	r0, [r0, #20]
   31f10:	addeq	r0, r2, r0
   31f14:	subeq	r0, r0, r1
   31f18:	bxeq	lr
   31f1c:	push	{fp, lr}
   31f20:	mov	fp, sp
   31f24:	movw	r0, #40075	; 0x9c8b
   31f28:	movw	r1, #38006	; 0x9476
   31f2c:	movw	r3, #41795	; 0xa343
   31f30:	movw	r2, #1794	; 0x702
   31f34:	movt	r0, #4
   31f38:	movt	r1, #4
   31f3c:	movt	r3, #4
   31f40:	bl	14f44 <__assert_fail@plt>

00031f44 <flatcc_builder_table_add_copy@@Base>:
   31f44:	push	{r4, r5, r6, sl, fp, lr}
   31f48:	add	fp, sp, #16
   31f4c:	mov	r4, r3
   31f50:	ldr	r3, [fp, #8]
   31f54:	mov	r5, r2
   31f58:	mov	r2, r4
   31f5c:	bl	31040 <flatcc_builder_table_add@@Base>
   31f60:	mov	r6, r0
   31f64:	cmp	r0, #0
   31f68:	beq	31f7c <flatcc_builder_table_add_copy@@Base+0x38>
   31f6c:	mov	r0, r6
   31f70:	mov	r1, r5
   31f74:	mov	r2, r4
   31f78:	bl	14e60 <memcpy@plt>
   31f7c:	mov	r0, r6
   31f80:	pop	{r4, r5, r6, sl, fp, pc}

00031f84 <flatcc_builder_push_buffer_alignment@@Base>:
   31f84:	ldrh	r1, [r0, #128]	; 0x80
   31f88:	mov	r2, #4
   31f8c:	strh	r2, [r0, #128]	; 0x80
   31f90:	mov	r0, r1
   31f94:	bx	lr

00031f98 <flatcc_builder_pop_buffer_alignment@@Base>:
   31f98:	ldrh	r2, [r0, #128]	; 0x80
   31f9c:	cmp	r2, r1
   31fa0:	strhcc	r1, [r0, #128]	; 0x80
   31fa4:	bx	lr

00031fa8 <flatcc_builder_get_buffer_alignment@@Base>:
   31fa8:	ldrh	r0, [r0, #128]	; 0x80
   31fac:	bx	lr

00031fb0 <flatcc_builder_set_vtable_clustering@@Base>:
   31fb0:	clz	r1, r1
   31fb4:	lsr	r1, r1, #5
   31fb8:	str	r1, [r0, #180]	; 0xb4
   31fbc:	bx	lr

00031fc0 <flatcc_builder_set_block_align@@Base>:
   31fc0:	strh	r1, [r0, #132]	; 0x84
   31fc4:	bx	lr

00031fc8 <flatcc_builder_get_level@@Base>:
   31fc8:	ldr	r0, [r0, #156]	; 0x9c
   31fcc:	bx	lr

00031fd0 <flatcc_builder_set_max_level@@Base>:
   31fd0:	str	r1, [r0, #176]	; 0xb0
   31fd4:	ldr	r2, [r0, #160]	; 0xa0
   31fd8:	cmp	r2, r1
   31fdc:	strlt	r1, [r0, #160]	; 0xa0
   31fe0:	bx	lr

00031fe4 <flatcc_builder_get_buffer_size@@Base>:
   31fe4:	ldr	r1, [r0, #136]	; 0x88
   31fe8:	ldr	r0, [r0, #140]	; 0x8c
   31fec:	sub	r0, r0, r1
   31ff0:	bx	lr

00031ff4 <flatcc_builder_get_buffer_start@@Base>:
   31ff4:	ldr	r0, [r0, #136]	; 0x88
   31ff8:	bx	lr

00031ffc <flatcc_builder_get_buffer_end@@Base>:
   31ffc:	ldr	r0, [r0, #140]	; 0x8c
   32000:	bx	lr

00032004 <flatcc_builder_set_vtable_cache_limit@@Base>:
   32004:	str	r1, [r0, #172]	; 0xac
   32008:	bx	lr

0003200c <flatcc_builder_set_identifier@@Base>:
   3200c:	movw	r2, #37476	; 0x9264
   32010:	cmp	r1, #0
   32014:	movt	r2, #4
   32018:	movne	r2, r1
   3201c:	ldr	r1, [r2]
   32020:	str	r1, [r0, #168]	; 0xa8
   32024:	bx	lr

00032028 <flatcc_builder_get_type@@Base>:
   32028:	ldr	r0, [r0, #32]
   3202c:	cmp	r0, #0
   32030:	ldrhne	r0, [r0, #14]
   32034:	moveq	r0, #0
   32038:	bx	lr

0003203c <flatcc_builder_get_type_at@@Base>:
   3203c:	mov	r2, r0
   32040:	cmp	r1, #1
   32044:	mov	r0, #0
   32048:	ldrge	r3, [r2, #156]	; 0x9c
   3204c:	cmpge	r3, r1
   32050:	bge	32058 <flatcc_builder_get_type_at@@Base+0x1c>
   32054:	bx	lr
   32058:	sub	r0, r1, r3
   3205c:	ldr	r1, [r2, #32]
   32060:	add	r0, r0, r0, lsl #3
   32064:	add	r0, r1, r0, lsl #2
   32068:	ldrh	r0, [r0, #14]
   3206c:	bx	lr

00032070 <flatcc_builder_get_direct_buffer@@Base>:
   32070:	ldr	r2, [r0, #184]	; 0xb8
   32074:	cmp	r2, #0
   32078:	beq	320a4 <flatcc_builder_get_direct_buffer@@Base+0x34>
   3207c:	ldr	r2, [r0, #188]	; 0xbc
   32080:	ldr	r3, [r0, #192]	; 0xc0
   32084:	cmp	r2, r3
   32088:	beq	320bc <flatcc_builder_get_direct_buffer@@Base+0x4c>
   3208c:	cmp	r1, #0
   32090:	moveq	r0, #0
   32094:	bxeq	lr
   32098:	mov	r0, #0
   3209c:	str	r0, [r1]
   320a0:	bx	lr
   320a4:	cmp	r1, #0
   320a8:	moveq	r0, #0
   320ac:	bxeq	lr
   320b0:	mov	r0, #0
   320b4:	str	r0, [r1]
   320b8:	bx	lr
   320bc:	cmp	r1, #0
   320c0:	ldrne	r2, [r0, #212]	; 0xd4
   320c4:	strne	r2, [r1]
   320c8:	ldr	r0, [r0, #196]	; 0xc4
   320cc:	bx	lr

000320d0 <flatcc_builder_copy_buffer@@Base>:
   320d0:	push	{fp, lr}
   320d4:	mov	fp, sp
   320d8:	ldr	r3, [r0, #184]	; 0xb8
   320dc:	cmp	r3, #0
   320e0:	beq	32114 <flatcc_builder_copy_buffer@@Base+0x44>
   320e4:	add	r0, r0, #188	; 0xbc
   320e8:	bl	32828 <flatcc_emitter_copy_buffer@@Base>
   320ec:	cmp	r0, #0
   320f0:	popne	{fp, pc}
   320f4:	movw	r0, #25655	; 0x6437
   320f8:	movw	r1, #38006	; 0x9476
   320fc:	movw	r3, #41934	; 0xa3ce
   32100:	movw	r2, #1926	; 0x786
   32104:	movt	r0, #4
   32108:	movt	r1, #4
   3210c:	movt	r3, #4
   32110:	bl	14f44 <__assert_fail@plt>
   32114:	mov	r0, #0
   32118:	pop	{fp, pc}

0003211c <flatcc_builder_finalize_buffer@@Base>:
   3211c:	push	{r4, r5, r6, sl, fp, lr}
   32120:	add	fp, sp, #16
   32124:	mov	r5, r0
   32128:	ldr	r0, [r0, #136]	; 0x88
   3212c:	cmp	r1, #0
   32130:	ldr	r2, [r5, #140]	; 0x8c
   32134:	sub	r4, r2, r0
   32138:	mov	r0, r4
   3213c:	strne	r4, [r1]
   32140:	bl	14ea8 <malloc@plt>
   32144:	cmp	r0, #0
   32148:	beq	32198 <flatcc_builder_finalize_buffer@@Base+0x7c>
   3214c:	mov	r6, r0
   32150:	ldr	r0, [r5, #184]	; 0xb8
   32154:	cmp	r0, #0
   32158:	beq	321b8 <flatcc_builder_finalize_buffer@@Base+0x9c>
   3215c:	add	r0, r5, #188	; 0xbc
   32160:	mov	r1, r6
   32164:	mov	r2, r4
   32168:	bl	32828 <flatcc_emitter_copy_buffer@@Base>
   3216c:	cmp	r0, #0
   32170:	movne	r0, r6
   32174:	popne	{r4, r5, r6, sl, fp, pc}
   32178:	movw	r0, #25655	; 0x6437
   3217c:	movw	r1, #38006	; 0x9476
   32180:	movw	r3, #41934	; 0xa3ce
   32184:	movw	r2, #1926	; 0x786
   32188:	movt	r0, #4
   3218c:	movt	r1, #4
   32190:	movt	r3, #4
   32194:	bl	14f44 <__assert_fail@plt>
   32198:	movw	r0, #42524	; 0xa61c
   3219c:	movw	r1, #38006	; 0x9476
   321a0:	movw	r3, #42003	; 0xa413
   321a4:	movw	r2, #1944	; 0x798
   321a8:	movt	r0, #4
   321ac:	movt	r1, #4
   321b0:	movt	r3, #4
   321b4:	bl	14f44 <__assert_fail@plt>
   321b8:	movw	r0, #42524	; 0xa61c
   321bc:	movw	r1, #38006	; 0x9476
   321c0:	movw	r3, #42003	; 0xa413
   321c4:	movw	r2, #1948	; 0x79c
   321c8:	movt	r0, #4
   321cc:	movt	r1, #4
   321d0:	movt	r3, #4
   321d4:	bl	14f44 <__assert_fail@plt>

000321d8 <flatcc_builder_finalize_aligned_buffer@@Base>:
   321d8:	push	{r4, r5, r6, r7, fp, lr}
   321dc:	add	fp, sp, #16
   321e0:	sub	sp, sp, #8
   321e4:	mov	r5, r0
   321e8:	mov	r4, r1
   321ec:	ldr	r0, [r0, #136]	; 0x88
   321f0:	ldr	r1, [r5, #140]	; 0x8c
   321f4:	cmp	r4, #0
   321f8:	sub	r0, r1, r0
   321fc:	mov	r1, #0
   32200:	strne	r0, [r4]
   32204:	ldrh	r2, [r5, #128]	; 0x80
   32208:	str	r1, [sp, #4]
   3220c:	add	r0, r0, r2
   32210:	cmp	r2, #4
   32214:	mov	r1, r2
   32218:	rsb	r2, r2, #0
   3221c:	sub	r0, r0, #1
   32220:	movls	r1, #4
   32224:	and	r7, r0, r2
   32228:	add	r0, sp, #4
   3222c:	mov	r2, r7
   32230:	bl	14ee4 <posix_memalign@plt>
   32234:	ldr	r6, [sp, #4]
   32238:	cmp	r0, #0
   3223c:	cmpne	r6, #0
   32240:	bne	3227c <flatcc_builder_finalize_aligned_buffer@@Base+0xa4>
   32244:	cmp	r6, #0
   32248:	beq	32284 <flatcc_builder_finalize_aligned_buffer@@Base+0xac>
   3224c:	ldr	r0, [r5, #184]	; 0xb8
   32250:	cmp	r0, #0
   32254:	beq	3227c <flatcc_builder_finalize_aligned_buffer@@Base+0xa4>
   32258:	add	r0, r5, #188	; 0xbc
   3225c:	mov	r1, r6
   32260:	mov	r2, r7
   32264:	bl	32828 <flatcc_emitter_copy_buffer@@Base>
   32268:	cmp	r0, #0
   3226c:	beq	3229c <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
   32270:	mov	r0, r6
   32274:	sub	sp, fp, #16
   32278:	pop	{r4, r5, r6, r7, fp, pc}
   3227c:	mov	r0, r6
   32280:	bl	14e54 <free@plt>
   32284:	mov	r6, #0
   32288:	cmp	r4, #0
   3228c:	strne	r6, [r4]
   32290:	mov	r0, r6
   32294:	sub	sp, fp, #16
   32298:	pop	{r4, r5, r6, r7, fp, pc}
   3229c:	movw	r0, #25655	; 0x6437
   322a0:	movw	r1, #38006	; 0x9476
   322a4:	movw	r3, #41934	; 0xa3ce
   322a8:	movw	r2, #1926	; 0x786
   322ac:	movt	r0, #4
   322b0:	movt	r1, #4
   322b4:	movt	r3, #4
   322b8:	bl	14f44 <__assert_fail@plt>

000322bc <flatcc_builder_aligned_alloc@@Base>:
   322bc:	push	{fp, lr}
   322c0:	mov	fp, sp
   322c4:	sub	sp, sp, #8
   322c8:	mov	r2, r1
   322cc:	mov	r1, r0
   322d0:	mov	r0, #0
   322d4:	cmp	r1, #4
   322d8:	str	r0, [sp, #4]
   322dc:	add	r0, sp, #4
   322e0:	movls	r1, #4
   322e4:	bl	14ee4 <posix_memalign@plt>
   322e8:	mov	r1, r0
   322ec:	ldr	r0, [sp, #4]
   322f0:	cmp	r1, #0
   322f4:	cmpne	r0, #0
   322f8:	bne	32304 <flatcc_builder_aligned_alloc@@Base+0x48>
   322fc:	mov	sp, fp
   32300:	pop	{fp, pc}
   32304:	bl	14e54 <free@plt>
   32308:	mov	r0, #0
   3230c:	str	r0, [sp, #4]
   32310:	mov	sp, fp
   32314:	pop	{fp, pc}

00032318 <flatcc_builder_aligned_free@@Base>:
   32318:	b	14e54 <free@plt>

0003231c <flatcc_builder_get_emit_context@@Base>:
   3231c:	ldr	r0, [r0, #36]	; 0x24
   32320:	bx	lr

00032324 <flatcc_emitter_recycle_page@@Base>:
   32324:	ldr	r3, [r0]
   32328:	mov	r2, r0
   3232c:	mvn	r0, #0
   32330:	cmp	r3, r1
   32334:	ldrne	r2, [r2, #4]
   32338:	cmpne	r2, r1
   3233c:	bne	32344 <flatcc_emitter_recycle_page@@Base+0x20>
   32340:	bx	lr
   32344:	ldr	r0, [r1, #2944]	; 0xb80
   32348:	ldr	r2, [r1, #2948]	; 0xb84
   3234c:	str	r2, [r0, #2948]	; 0xb84
   32350:	ldr	r2, [r1, #2948]	; 0xb84
   32354:	str	r0, [r2, #2944]	; 0xb80
   32358:	ldr	r0, [r3, #2948]	; 0xb84
   3235c:	str	r3, [r1, #2944]	; 0xb80
   32360:	str	r0, [r1, #2948]	; 0xb84
   32364:	str	r1, [r0, #2944]	; 0xb80
   32368:	ldr	r0, [r1, #2944]	; 0xb80
   3236c:	str	r1, [r0, #2948]	; 0xb84
   32370:	mov	r0, #0
   32374:	bx	lr

00032378 <flatcc_emitter_reset@@Base>:
   32378:	push	{r4, sl, fp, lr}
   3237c:	add	fp, sp, #8
   32380:	ldr	r1, [r0]
   32384:	cmp	r1, #0
   32388:	beq	32440 <flatcc_emitter_reset@@Base+0xc8>
   3238c:	mov	r4, r0
   32390:	add	r2, r1, #1472	; 0x5c0
   32394:	mov	r0, #1472	; 0x5c0
   32398:	mov	r3, #0
   3239c:	stmib	r4, {r1, r2}
   323a0:	str	r0, [r4, #12]
   323a4:	str	r2, [r4, #16]
   323a8:	str	r0, [r4, #20]
   323ac:	movw	r0, #64064	; 0xfa40
   323b0:	movt	r0, #65535	; 0xffff
   323b4:	str	r0, [r1, #2952]	; 0xb88
   323b8:	ldr	r2, [r4, #32]
   323bc:	ldr	r0, [r4, #24]
   323c0:	cmp	r2, #0
   323c4:	moveq	r2, r0
   323c8:	streq	r0, [r4, #32]
   323cc:	str	r3, [r4, #24]
   323d0:	add	r2, r2, r2, lsl #1
   323d4:	lsr	r2, r2, #2
   323d8:	add	r0, r2, r0, lsr #2
   323dc:	str	r0, [r4, #32]
   323e0:	ldr	r2, [r4, #28]
   323e4:	cmp	r2, r0, lsl #1
   323e8:	bls	32440 <flatcc_emitter_reset@@Base+0xc8>
   323ec:	mov	r2, r1
   323f0:	ldr	r0, [r2, #2944]!	; 0xb80
   323f4:	cmp	r0, r1
   323f8:	beq	32440 <flatcc_emitter_reset@@Base+0xc8>
   323fc:	ldr	r3, [r0, #2944]	; 0xb80
   32400:	str	r3, [r2]
   32404:	ldr	r2, [r0, #2944]	; 0xb80
   32408:	str	r1, [r2, #2948]	; 0xb84
   3240c:	bl	14e54 <free@plt>
   32410:	ldr	r0, [r4, #28]
   32414:	ldr	r1, [r4, #32]
   32418:	sub	r0, r0, #2944	; 0xb80
   3241c:	cmp	r0, r1, lsl #1
   32420:	str	r0, [r4, #28]
   32424:	popls	{r4, sl, fp, pc}
   32428:	ldr	r1, [r4, #4]
   3242c:	ldr	r3, [r4]
   32430:	mov	r2, r1
   32434:	ldr	r0, [r2, #2944]!	; 0xb80
   32438:	cmp	r0, r3
   3243c:	bne	323fc <flatcc_emitter_reset@@Base+0x84>
   32440:	pop	{r4, sl, fp, pc}

00032444 <flatcc_emitter_clear@@Base>:
   32444:	push	{r4, r5, r6, sl, fp, lr}
   32448:	add	fp, sp, #16
   3244c:	ldr	r5, [r0]
   32450:	cmp	r5, #0
   32454:	popeq	{r4, r5, r6, sl, fp, pc}
   32458:	mov	r4, r0
   3245c:	ldr	r0, [r5, #2948]	; 0xb84
   32460:	mov	r6, #0
   32464:	str	r6, [r0, #2944]	; 0xb80
   32468:	ldr	r0, [r5, #2944]	; 0xb80
   3246c:	cmp	r0, #0
   32470:	beq	3248c <flatcc_emitter_clear@@Base+0x48>
   32474:	mov	r5, r0
   32478:	ldr	r0, [r0, #2948]	; 0xb84
   3247c:	bl	14e54 <free@plt>
   32480:	ldr	r0, [r5, #2944]	; 0xb80
   32484:	cmp	r0, #0
   32488:	bne	32474 <flatcc_emitter_clear@@Base+0x30>
   3248c:	mov	r0, r5
   32490:	bl	14e54 <free@plt>
   32494:	vmov.i32	q8, #0	; 0x00000000
   32498:	add	r0, r4, #16
   3249c:	vst1.32	{d16-d17}, [r0]
   324a0:	mov	r0, #32
   324a4:	vst1.32	{d16-d17}, [r4], r0
   324a8:	str	r6, [r4]
   324ac:	pop	{r4, r5, r6, sl, fp, pc}

000324b0 <flatcc_emitter@@Base>:
   324b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   324b4:	add	fp, sp, #28
   324b8:	sub	sp, sp, #4
   324bc:	mov	r6, r0
   324c0:	mov	r7, r1
   324c4:	ldr	r0, [r0, #24]
   324c8:	ldr	r1, [fp, #8]
   324cc:	mov	r4, r2
   324d0:	cmn	r3, #1
   324d4:	mov	r9, r6
   324d8:	add	r0, r0, r1
   324dc:	str	r0, [r6, #24]
   324e0:	ble	3262c <flatcc_emitter@@Base+0x17c>
   324e4:	ldr	r0, [r9, #20]!
   324e8:	cmp	r0, r1
   324ec:	bcs	327ac <flatcc_emitter@@Base+0x2fc>
   324f0:	mov	r8, #0
   324f4:	cmp	r4, #0
   324f8:	beq	3280c <flatcc_emitter@@Base+0x35c>
   324fc:	movw	sl, #64064	; 0xfa40
   32500:	movt	sl, #65535	; 0xffff
   32504:	ldr	r8, [r7, #4]
   32508:	cmp	r8, #0
   3250c:	beq	32610 <flatcc_emitter@@Base+0x160>
   32510:	ldr	r9, [r7]
   32514:	cmp	r8, r0
   32518:	mov	r5, r8
   3251c:	bls	325dc <flatcc_emitter@@Base+0x12c>
   32520:	mov	r5, r0
   32524:	cmp	r5, #0
   32528:	bne	325dc <flatcc_emitter@@Base+0x12c>
   3252c:	ldr	r5, [r6, #4]
   32530:	cmp	r5, #0
   32534:	beq	32548 <flatcc_emitter@@Base+0x98>
   32538:	ldr	r0, [r5, #2944]	; 0xb80
   3253c:	ldr	r1, [r6]
   32540:	cmp	r0, r1
   32544:	bne	32580 <flatcc_emitter@@Base+0xd0>
   32548:	movw	r0, #2956	; 0xb8c
   3254c:	bl	14ea8 <malloc@plt>
   32550:	cmp	r0, #0
   32554:	beq	327bc <flatcc_emitter@@Base+0x30c>
   32558:	ldr	r1, [r6, #28]
   3255c:	cmp	r5, #0
   32560:	add	r1, r1, #2944	; 0xb80
   32564:	str	r1, [r6, #28]
   32568:	beq	325ac <flatcc_emitter@@Base+0xfc>
   3256c:	ldr	r1, [r6]
   32570:	str	r1, [r0, #2944]	; 0xb80
   32574:	str	r5, [r0, #2948]	; 0xb84
   32578:	str	r0, [r1, #2948]	; 0xb84
   3257c:	str	r0, [r5, #2944]	; 0xb80
   32580:	mov	r5, #2944	; 0xb80
   32584:	str	r0, [r6, #4]
   32588:	str	r0, [r6, #16]
   3258c:	str	r5, [r6, #20]
   32590:	ldr	r1, [r0, #2948]	; 0xb84
   32594:	ldr	r1, [r1, #2952]	; 0xb88
   32598:	add	r1, r1, #2944	; 0xb80
   3259c:	str	r1, [r0, #2952]	; 0xb88
   325a0:	cmp	r8, r5
   325a4:	bhi	32524 <flatcc_emitter@@Base+0x74>
   325a8:	b	325d8 <flatcc_emitter@@Base+0x128>
   325ac:	add	r1, r0, #1472	; 0x5c0
   325b0:	mov	r5, #1472	; 0x5c0
   325b4:	str	r0, [r6]
   325b8:	stmib	r6, {r0, r1, r5}
   325bc:	str	r1, [r6, #16]
   325c0:	str	r5, [r6, #20]
   325c4:	str	r0, [r0, #2944]	; 0xb80
   325c8:	str	r0, [r0, #2948]	; 0xb84
   325cc:	str	sl, [r0, #2952]	; 0xb88
   325d0:	cmp	r8, r5
   325d4:	bhi	32524 <flatcc_emitter@@Base+0x74>
   325d8:	mov	r5, r8
   325dc:	ldr	r0, [r6, #16]
   325e0:	mov	r1, r9
   325e4:	mov	r2, r5
   325e8:	bl	14e60 <memcpy@plt>
   325ec:	ldr	r0, [r6, #16]
   325f0:	ldr	r1, [r6, #20]
   325f4:	add	r9, r9, r5
   325f8:	subs	r8, r8, r5
   325fc:	add	r2, r0, r5
   32600:	sub	r0, r1, r5
   32604:	str	r2, [r6, #16]
   32608:	str	r0, [r6, #20]
   3260c:	bne	32514 <flatcc_emitter@@Base+0x64>
   32610:	subs	r4, r4, #1
   32614:	add	r7, r7, #8
   32618:	bne	32504 <flatcc_emitter@@Base+0x54>
   3261c:	mov	r8, #0
   32620:	mov	r0, r8
   32624:	sub	sp, fp, #28
   32628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3262c:	ldr	r0, [r9, #12]!
   32630:	cmp	r0, r1
   32634:	bcs	327cc <flatcc_emitter@@Base+0x31c>
   32638:	mov	r8, #0
   3263c:	cmp	r4, #0
   32640:	beq	3280c <flatcc_emitter@@Base+0x35c>
   32644:	add	r0, r7, r4, lsl #3
   32648:	movw	sl, #2952	; 0xb88
   3264c:	ldr	r8, [r0, #-4]
   32650:	sub	r1, r0, #8
   32654:	str	r1, [sp]
   32658:	cmp	r8, #0
   3265c:	beq	32790 <flatcc_emitter@@Base+0x2e0>
   32660:	ldr	r0, [sp]
   32664:	ldr	r0, [r0]
   32668:	add	r7, r0, r8
   3266c:	ldr	r1, [r9]
   32670:	cmp	r8, r1
   32674:	bhi	326a4 <flatcc_emitter@@Base+0x1f4>
   32678:	b	32760 <flatcc_emitter@@Base+0x2b0>
   3267c:	add	r3, r0, #2944	; 0xb80
   32680:	mov	r1, #2944	; 0xb80
   32684:	str	r3, [r6, #8]
   32688:	str	r1, [r6, #12]
   3268c:	ldr	r0, [r0, #2944]	; 0xb80
   32690:	ldr	r0, [r0, #2952]	; 0xb88
   32694:	sub	r0, r0, #2944	; 0xb80
   32698:	str	r0, [r2]
   3269c:	cmp	r8, r1
   326a0:	bls	32760 <flatcc_emitter@@Base+0x2b0>
   326a4:	cmp	r1, #0
   326a8:	mov	r5, r1
   326ac:	bne	32764 <flatcc_emitter@@Base+0x2b4>
   326b0:	ldr	r5, [r6]
   326b4:	cmp	r5, #0
   326b8:	beq	326e4 <flatcc_emitter@@Base+0x234>
   326bc:	ldr	r0, [r5, #2948]	; 0xb84
   326c0:	ldr	r1, [r6, #4]
   326c4:	cmp	r0, r1
   326c8:	beq	326e4 <flatcc_emitter@@Base+0x234>
   326cc:	ldr	r1, [r5, #2952]	; 0xb88
   326d0:	mov	r2, r0
   326d4:	sub	r1, r1, #2944	; 0xb80
   326d8:	str	r1, [r2, #2952]!	; 0xb88
   326dc:	str	r0, [r6]
   326e0:	b	3267c <flatcc_emitter@@Base+0x1cc>
   326e4:	movw	r0, #2956	; 0xb8c
   326e8:	bl	14ea8 <malloc@plt>
   326ec:	cmp	r0, #0
   326f0:	beq	32818 <flatcc_emitter@@Base+0x368>
   326f4:	ldr	r1, [r6, #28]
   326f8:	cmp	r5, #0
   326fc:	add	r1, r1, #2944	; 0xb80
   32700:	str	r1, [r6, #28]
   32704:	beq	32728 <flatcc_emitter@@Base+0x278>
   32708:	ldr	r1, [r6, #4]
   3270c:	add	r2, r0, sl
   32710:	str	r5, [r0, #2944]	; 0xb80
   32714:	str	r1, [r0, #2948]	; 0xb84
   32718:	str	r0, [r5, #2948]	; 0xb84
   3271c:	str	r0, [r1, #2944]	; 0xb80
   32720:	str	r0, [r6]
   32724:	b	3267c <flatcc_emitter@@Base+0x1cc>
   32728:	add	r2, r0, #1472	; 0x5c0
   3272c:	mov	r1, #1472	; 0x5c0
   32730:	str	r0, [r6]
   32734:	stmib	r6, {r0, r2}
   32738:	str	r1, [r6, #12]
   3273c:	str	r2, [r6, #16]
   32740:	movw	r2, #64064	; 0xfa40
   32744:	str	r1, [r6, #20]
   32748:	str	r0, [r0, #2944]	; 0xb80
   3274c:	str	r0, [r0, #2948]	; 0xb84
   32750:	movt	r2, #65535	; 0xffff
   32754:	str	r2, [r0, #2952]	; 0xb88
   32758:	cmp	r8, r1
   3275c:	bhi	326a4 <flatcc_emitter@@Base+0x1f4>
   32760:	mov	r5, r8
   32764:	sub	r0, r1, r5
   32768:	sub	r7, r7, r5
   3276c:	mov	r2, r5
   32770:	str	r0, [r6, #12]
   32774:	mov	r1, r7
   32778:	ldr	r0, [r6, #8]
   3277c:	sub	r0, r0, r5
   32780:	str	r0, [r6, #8]
   32784:	bl	14e60 <memcpy@plt>
   32788:	subs	r8, r8, r5
   3278c:	bne	3266c <flatcc_emitter@@Base+0x1bc>
   32790:	ldr	r0, [sp]
   32794:	subs	r4, r4, #1
   32798:	bne	3264c <flatcc_emitter@@Base+0x19c>
   3279c:	mov	r8, #0
   327a0:	mov	r0, r8
   327a4:	sub	sp, fp, #28
   327a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   327ac:	ldr	r5, [r6, #16]
   327b0:	add	r2, r5, r1
   327b4:	str	r2, [r6, #16]
   327b8:	b	327d8 <flatcc_emitter@@Base+0x328>
   327bc:	mvn	r8, #0
   327c0:	mov	r0, r8
   327c4:	sub	sp, fp, #28
   327c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   327cc:	ldr	r2, [r6, #8]
   327d0:	sub	r5, r2, r1
   327d4:	str	r5, [r6, #8]
   327d8:	sub	r0, r0, r1
   327dc:	mov	r8, #0
   327e0:	cmp	r4, #0
   327e4:	str	r0, [r9]
   327e8:	beq	3280c <flatcc_emitter@@Base+0x35c>
   327ec:	ldm	r7, {r1, r2}
   327f0:	mov	r0, r5
   327f4:	bl	14e60 <memcpy@plt>
   327f8:	ldr	r0, [r7, #4]
   327fc:	add	r7, r7, #8
   32800:	subs	r4, r4, #1
   32804:	add	r5, r5, r0
   32808:	bne	327ec <flatcc_emitter@@Base+0x33c>
   3280c:	mov	r0, r8
   32810:	sub	sp, fp, #28
   32814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32818:	mvn	r8, #0
   3281c:	mov	r0, r8
   32820:	sub	sp, fp, #28
   32824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00032828 <flatcc_emitter_copy_buffer@@Base>:
   32828:	push	{r4, r5, r6, sl, fp, lr}
   3282c:	add	fp, sp, #16
   32830:	mov	r3, r2
   32834:	ldr	r2, [r0, #24]
   32838:	mov	r5, #0
   3283c:	cmp	r2, r3
   32840:	bhi	328c8 <flatcc_emitter_copy_buffer@@Base+0xa0>
   32844:	mov	r4, r0
   32848:	ldr	r0, [r0]
   3284c:	cmp	r0, #0
   32850:	beq	328c8 <flatcc_emitter_copy_buffer@@Base+0xa0>
   32854:	mov	r6, r1
   32858:	ldr	r1, [r4, #4]
   3285c:	cmp	r0, r1
   32860:	beq	328d0 <flatcc_emitter_copy_buffer@@Base+0xa8>
   32864:	ldr	r0, [r4, #12]
   32868:	ldr	r1, [r4, #8]
   3286c:	rsb	r5, r0, #2944	; 0xb80
   32870:	mov	r0, r6
   32874:	mov	r2, r5
   32878:	bl	14e60 <memcpy@plt>
   3287c:	ldm	r4, {r0, r1}
   32880:	add	r5, r6, r5
   32884:	ldr	r6, [r0, #2944]	; 0xb80
   32888:	cmp	r6, r1
   3288c:	beq	328b4 <flatcc_emitter_copy_buffer@@Base+0x8c>
   32890:	mov	r0, r5
   32894:	mov	r1, r6
   32898:	mov	r2, #2944	; 0xb80
   3289c:	bl	14e60 <memcpy@plt>
   328a0:	ldr	r6, [r6, #2944]	; 0xb80
   328a4:	ldr	r0, [r4, #4]
   328a8:	add	r5, r5, #2944	; 0xb80
   328ac:	cmp	r6, r0
   328b0:	bne	32890 <flatcc_emitter_copy_buffer@@Base+0x68>
   328b4:	ldr	r0, [r4, #20]
   328b8:	mov	r1, r6
   328bc:	rsb	r2, r0, #2944	; 0xb80
   328c0:	mov	r0, r5
   328c4:	bl	14e60 <memcpy@plt>
   328c8:	mov	r0, r5
   328cc:	pop	{r4, r5, r6, sl, fp, pc}
   328d0:	ldr	r1, [r4, #8]
   328d4:	mov	r0, r6
   328d8:	bl	14e60 <memcpy@plt>
   328dc:	mov	r0, r6
   328e0:	pop	{r4, r5, r6, sl, fp, pc}

000328e4 <flatcc_verify_error_string@@Base>:
   328e4:	cmp	r0, #36	; 0x24
   328e8:	movwhi	r0, #43738	; 0xaada
   328ec:	movthi	r0, #4
   328f0:	bxhi	lr
   328f4:	movw	r1, #43760	; 0xaaf0
   328f8:	movt	r1, #4
   328fc:	ldr	r0, [r1, r0, lsl #2]
   32900:	bx	lr

00032904 <flatcc_verify_field@@Base>:
   32904:	push	{r4, sl, fp, lr}
   32908:	add	fp, sp, #8
   3290c:	ldrh	r4, [r0, #22]
   32910:	mov	ip, #4
   32914:	mov	lr, #0
   32918:	add	r1, ip, r1, lsl #1
   3291c:	uxth	ip, r1
   32920:	cmp	ip, r4
   32924:	bcs	32980 <flatcc_verify_field@@Base+0x7c>
   32928:	ldr	r4, [r0, #12]
   3292c:	uxtah	r1, r4, r1
   32930:	ldrh	ip, [r1]
   32934:	cmp	ip, #0
   32938:	beq	32980 <flatcc_verify_field@@Base+0x7c>
   3293c:	add	r1, ip, r2
   32940:	ldrh	r2, [r0, #20]
   32944:	mov	lr, #13
   32948:	cmp	r1, r2
   3294c:	bhi	32980 <flatcc_verify_field@@Base+0x7c>
   32950:	ldr	r1, [r0]
   32954:	mov	lr, #0
   32958:	add	r2, r1, ip
   3295c:	ldr	r1, [r0, #16]
   32960:	add	r4, r2, r1
   32964:	sub	r1, r3, #1
   32968:	tst	r4, r1
   3296c:	beq	32980 <flatcc_verify_field@@Base+0x7c>
   32970:	ldr	r0, [r0, #16]
   32974:	add	r0, r2, r0
   32978:	ands	lr, r0, r1
   3297c:	movwne	lr, #12
   32980:	mov	r0, lr
   32984:	pop	{r4, sl, fp, pc}

00032988 <flatcc_verify_string_field@@Base>:
   32988:	push	{fp, lr}
   3298c:	mov	fp, sp
   32990:	mov	lr, r2
   32994:	ldrh	r2, [r0, #22]
   32998:	mov	r3, #4
   3299c:	add	r1, r3, r1, lsl #1
   329a0:	uxth	r3, r1
   329a4:	cmp	r3, r2
   329a8:	bcs	32a44 <flatcc_verify_string_field@@Base+0xbc>
   329ac:	ldr	r2, [r0, #12]
   329b0:	uxtah	r1, r2, r1
   329b4:	ldrh	r1, [r1]
   329b8:	cmp	r1, #0
   329bc:	beq	32a44 <flatcc_verify_string_field@@Base+0xbc>
   329c0:	ldrh	r2, [r0, #20]
   329c4:	add	r3, r1, #4
   329c8:	mov	lr, #13
   329cc:	cmp	r3, r2
   329d0:	bhi	32a3c <flatcc_verify_string_field@@Base+0xb4>
   329d4:	ldr	r2, [r0, #16]
   329d8:	mov	lr, #12
   329dc:	add	r3, r2, r1
   329e0:	tst	r3, #3
   329e4:	bne	32a3c <flatcc_verify_string_field@@Base+0xb4>
   329e8:	cmp	r3, #0
   329ec:	moveq	lr, #0
   329f0:	moveq	r0, lr
   329f4:	popeq	{fp, pc}
   329f8:	ldr	ip, [r0]
   329fc:	mov	lr, #17
   32a00:	ldr	r1, [ip, r3]
   32a04:	add	r1, r1, r3
   32a08:	tst	r1, #3
   32a0c:	bne	32a3c <flatcc_verify_string_field@@Base+0xb4>
   32a10:	cmp	r1, r3
   32a14:	bls	32a3c <flatcc_verify_string_field@@Base+0xb4>
   32a18:	ldr	r3, [r0, #4]
   32a1c:	add	r0, r1, #4
   32a20:	cmp	r3, r0
   32a24:	ldrcs	r1, [ip, r1]
   32a28:	subcs	r2, r3, r0
   32a2c:	movcs	lr, #8
   32a30:	addcs	r3, r1, #1
   32a34:	cmpcs	r2, r3
   32a38:	bcs	32a54 <flatcc_verify_string_field@@Base+0xcc>
   32a3c:	mov	r0, lr
   32a40:	pop	{fp, pc}
   32a44:	cmp	lr, #0
   32a48:	movwne	lr, #4
   32a4c:	mov	r0, lr
   32a50:	pop	{fp, pc}
   32a54:	add	r0, ip, r0
   32a58:	ldrb	lr, [r0, r1]
   32a5c:	cmp	lr, #0
   32a60:	movwne	lr, #7
   32a64:	mov	r0, lr
   32a68:	pop	{fp, pc}

00032a6c <flatcc_verify_vector_field@@Base>:
   32a6c:	push	{r4, r5, fp, lr}
   32a70:	add	fp, sp, #8
   32a74:	mov	r5, r2
   32a78:	ldrh	r2, [r0, #22]
   32a7c:	mov	r4, #4
   32a80:	add	r1, r4, r1, lsl #1
   32a84:	uxth	r4, r1
   32a88:	cmp	r4, r2
   32a8c:	bcs	32b54 <flatcc_verify_vector_field@@Base+0xe8>
   32a90:	ldr	r2, [r0, #12]
   32a94:	uxtah	r1, r2, r1
   32a98:	ldrh	r1, [r1]
   32a9c:	cmp	r1, #0
   32aa0:	beq	32b54 <flatcc_verify_vector_field@@Base+0xe8>
   32aa4:	ldrh	r2, [r0, #20]
   32aa8:	add	r4, r1, #4
   32aac:	mov	r5, #13
   32ab0:	cmp	r4, r2
   32ab4:	bhi	32b4c <flatcc_verify_vector_field@@Base+0xe0>
   32ab8:	ldr	r2, [r0, #16]
   32abc:	mov	r5, #12
   32ac0:	add	r1, r2, r1
   32ac4:	tst	r1, #3
   32ac8:	bne	32b4c <flatcc_verify_vector_field@@Base+0xe0>
   32acc:	cmp	r1, #0
   32ad0:	moveq	r5, #0
   32ad4:	moveq	r0, r5
   32ad8:	popeq	{r4, r5, fp, pc}
   32adc:	ldr	ip, [r0]
   32ae0:	ldr	r4, [fp, #8]
   32ae4:	mov	r5, #16
   32ae8:	ldr	r2, [ip, r1]
   32aec:	cmp	r4, #4
   32af0:	movls	r4, #4
   32af4:	add	lr, r2, r1
   32af8:	cmp	lr, r1
   32afc:	bls	32b4c <flatcc_verify_vector_field@@Base+0xe0>
   32b00:	ldr	r0, [r0, #4]
   32b04:	add	r1, lr, #4
   32b08:	cmp	r1, r0
   32b0c:	bhi	32b4c <flatcc_verify_vector_field@@Base+0xe0>
   32b10:	sub	r2, r4, #1
   32b14:	orr	r2, r2, #3
   32b18:	tst	r1, r2
   32b1c:	bne	32b4c <flatcc_verify_vector_field@@Base+0xe0>
   32b20:	ldr	r2, [fp, #12]
   32b24:	ldr	r1, [ip, lr]
   32b28:	mov	r5, #25
   32b2c:	cmp	r1, r2
   32b30:	bhi	32b4c <flatcc_verify_vector_field@@Base+0xe0>
   32b34:	sub	r0, r0, #4
   32b38:	mul	r1, r1, r3
   32b3c:	mov	r5, #0
   32b40:	sub	r0, r0, lr
   32b44:	cmp	r0, r1
   32b48:	movwcc	r5, #26
   32b4c:	mov	r0, r5
   32b50:	pop	{r4, r5, fp, pc}
   32b54:	cmp	r5, #0
   32b58:	movwne	r5, #4
   32b5c:	mov	r0, r5
   32b60:	pop	{r4, r5, fp, pc}

00032b64 <flatcc_verify_string_vector_field@@Base>:
   32b64:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   32b68:	add	fp, sp, #24
   32b6c:	ldrh	r7, [r0, #22]
   32b70:	mov	r3, #4
   32b74:	add	r1, r3, r1, lsl #1
   32b78:	uxth	r3, r1
   32b7c:	cmp	r3, r7
   32b80:	bcs	32bc8 <flatcc_verify_string_vector_field@@Base+0x64>
   32b84:	ldr	r3, [r0, #12]
   32b88:	uxtah	r1, r3, r1
   32b8c:	ldrh	r1, [r1]
   32b90:	cmp	r1, #0
   32b94:	beq	32bc8 <flatcc_verify_string_vector_field@@Base+0x64>
   32b98:	ldrh	r3, [r0, #20]
   32b9c:	add	r7, r1, #4
   32ba0:	mov	r2, #13
   32ba4:	cmp	r7, r3
   32ba8:	bhi	32bc0 <flatcc_verify_string_vector_field@@Base+0x5c>
   32bac:	ldr	r4, [r0, #16]
   32bb0:	mov	r2, #12
   32bb4:	add	r6, r4, r1
   32bb8:	tst	r6, #3
   32bbc:	beq	32bd8 <flatcc_verify_string_vector_field@@Base+0x74>
   32bc0:	mov	r0, r2
   32bc4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   32bc8:	cmp	r2, #0
   32bcc:	movwne	r2, #4
   32bd0:	mov	r0, r2
   32bd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   32bd8:	mov	r2, #0
   32bdc:	cmp	r6, #0
   32be0:	beq	32bc0 <flatcc_verify_string_vector_field@@Base+0x5c>
   32be4:	ldr	r5, [r0]
   32be8:	mov	r2, #16
   32bec:	ldr	r7, [r5, r6]
   32bf0:	add	r3, r7, r6
   32bf4:	cmp	r3, r6
   32bf8:	bls	32bc0 <flatcc_verify_string_vector_field@@Base+0x5c>
   32bfc:	ldr	lr, [r0, #4]
   32c00:	add	r0, r3, #4
   32c04:	cmp	r0, lr
   32c08:	bhi	32bc0 <flatcc_verify_string_vector_field@@Base+0x5c>
   32c0c:	ands	r0, r0, #3
   32c10:	bne	32bc0 <flatcc_verify_string_vector_field@@Base+0x5c>
   32c14:	ldr	ip, [r5, r3]
   32c18:	mov	r2, #25
   32c1c:	cmn	ip, #-1073741823	; 0xc0000001
   32c20:	bhi	32bc0 <flatcc_verify_string_vector_field@@Base+0x5c>
   32c24:	sub	r0, lr, #4
   32c28:	mov	r2, #26
   32c2c:	sub	r0, r0, r3
   32c30:	cmp	r0, ip, lsl #2
   32c34:	bcc	32bc0 <flatcc_verify_string_vector_field@@Base+0x5c>
   32c38:	cmp	ip, #0
   32c3c:	mov	r2, #0
   32c40:	beq	32bc0 <flatcc_verify_string_vector_field@@Base+0x5c>
   32c44:	sub	r0, lr, #8
   32c48:	add	r9, r7, r4
   32c4c:	sub	r0, r0, r1
   32c50:	sub	r0, r0, r7
   32c54:	sub	r8, r0, r4
   32c58:	add	r0, r5, r9
   32c5c:	mov	r5, #0
   32c60:	rsb	r4, r0, #0
   32c64:	sub	r0, r1, r4
   32c68:	add	r3, r1, r9
   32c6c:	mov	r2, #17
   32c70:	ldr	r6, [r0, #4]
   32c74:	add	r7, r3, r6
   32c78:	add	r0, r7, #4
   32c7c:	tst	r0, #3
   32c80:	bne	32bc0 <flatcc_verify_string_vector_field@@Base+0x5c>
   32c84:	add	r3, r3, #4
   32c88:	cmp	r0, r3
   32c8c:	bls	32bc0 <flatcc_verify_string_vector_field@@Base+0x5c>
   32c90:	add	r0, r7, #8
   32c94:	cmp	lr, r0
   32c98:	bcc	32bc0 <flatcc_verify_string_vector_field@@Base+0x5c>
   32c9c:	add	r0, r1, r6
   32ca0:	sub	r2, r8, r6
   32ca4:	sub	r0, r0, r4
   32ca8:	ldr	r0, [r0, #4]
   32cac:	add	r3, r0, #1
   32cb0:	cmp	r2, r3
   32cb4:	bcc	32cf0 <flatcc_verify_string_vector_field@@Base+0x18c>
   32cb8:	add	r0, r6, r0
   32cbc:	add	r0, r1, r0
   32cc0:	sub	r0, r0, r4
   32cc4:	ldrb	r0, [r0, #8]
   32cc8:	cmp	r0, #0
   32ccc:	bne	32cfc <flatcc_verify_string_vector_field@@Base+0x198>
   32cd0:	add	r5, r5, #1
   32cd4:	sub	r8, r8, #4
   32cd8:	add	r9, r9, #4
   32cdc:	sub	r4, r4, #4
   32ce0:	mov	r2, #0
   32ce4:	cmp	r5, ip
   32ce8:	bcc	32c64 <flatcc_verify_string_vector_field@@Base+0x100>
   32cec:	b	32bc0 <flatcc_verify_string_vector_field@@Base+0x5c>
   32cf0:	mov	r2, #8
   32cf4:	mov	r0, r2
   32cf8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   32cfc:	mov	r2, #7
   32d00:	mov	r0, r2
   32d04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00032d08 <flatcc_verify_table_field@@Base>:
   32d08:	push	{r4, r5, r6, sl, fp, lr}
   32d0c:	add	fp, sp, #16
   32d10:	sub	sp, sp, #24
   32d14:	ldrh	r5, [r0, #22]
   32d18:	mov	r6, #4
   32d1c:	add	r1, r6, r1, lsl #1
   32d20:	uxth	r6, r1
   32d24:	cmp	r6, r5
   32d28:	bcs	32e40 <flatcc_verify_table_field@@Base+0x138>
   32d2c:	ldr	r6, [r0, #12]
   32d30:	uxtah	r1, r6, r1
   32d34:	ldrh	r1, [r1]
   32d38:	cmp	r1, #0
   32d3c:	beq	32e40 <flatcc_verify_table_field@@Base+0x138>
   32d40:	ldrh	r6, [r0, #20]
   32d44:	add	r5, r1, #4
   32d48:	mov	r2, #13
   32d4c:	cmp	r5, r6
   32d50:	bhi	32e48 <flatcc_verify_table_field@@Base+0x140>
   32d54:	ldr	r2, [r0, #16]
   32d58:	add	r4, r2, r1
   32d5c:	mov	r2, #12
   32d60:	tst	r4, #3
   32d64:	bne	32e48 <flatcc_verify_table_field@@Base+0x140>
   32d68:	cmp	r4, #0
   32d6c:	beq	32e54 <flatcc_verify_table_field@@Base+0x14c>
   32d70:	ldm	r0, {r1, ip}
   32d74:	ldr	r2, [r0, #8]
   32d78:	ldr	r0, [r1, r4]
   32d7c:	subs	r2, r2, #1
   32d80:	str	r2, [sp, #8]
   32d84:	beq	32e64 <flatcc_verify_table_field@@Base+0x15c>
   32d88:	add	r0, r0, r4
   32d8c:	mov	r2, #15
   32d90:	tst	r0, #3
   32d94:	bne	32e48 <flatcc_verify_table_field@@Base+0x140>
   32d98:	cmp	r0, r4
   32d9c:	bls	32e48 <flatcc_verify_table_field@@Base+0x140>
   32da0:	add	r6, r0, #4
   32da4:	cmp	r6, ip
   32da8:	bhi	32e48 <flatcc_verify_table_field@@Base+0x140>
   32dac:	str	r0, [sp, #16]
   32db0:	ldr	r2, [r1, r0]
   32db4:	sub	r5, r0, r2
   32db8:	mov	r2, #29
   32dbc:	tst	r5, #-2147483647	; 0x80000001
   32dc0:	bne	32e48 <flatcc_verify_table_field@@Base+0x140>
   32dc4:	add	r4, r5, #2
   32dc8:	mov	r2, #27
   32dcc:	cmp	r4, ip
   32dd0:	bhi	32e48 <flatcc_verify_table_field@@Base+0x140>
   32dd4:	mov	lr, r1
   32dd8:	mov	r2, #30
   32ddc:	ldrh	r6, [lr, r5]!
   32de0:	tst	r6, #1
   32de4:	strh	r6, [sp, #22]
   32de8:	bne	32e48 <flatcc_verify_table_field@@Base+0x140>
   32dec:	add	r5, r5, r6
   32df0:	cmp	r5, ip
   32df4:	bhi	32e48 <flatcc_verify_table_field@@Base+0x140>
   32df8:	mov	r2, #28
   32dfc:	cmp	r6, #4
   32e00:	bcc	32e48 <flatcc_verify_table_field@@Base+0x140>
   32e04:	add	r2, r1, r4
   32e08:	sub	r0, ip, r0
   32e0c:	ldrh	r4, [r2]
   32e10:	mov	r2, #20
   32e14:	cmp	r0, r4
   32e18:	strh	r4, [sp, #20]
   32e1c:	bcc	32e48 <flatcc_verify_table_field@@Base+0x140>
   32e20:	mov	r0, sp
   32e24:	str	lr, [sp, #12]
   32e28:	stm	sp, {r1, ip}
   32e2c:	blx	r3
   32e30:	mov	r2, r0
   32e34:	mov	r0, r2
   32e38:	sub	sp, fp, #16
   32e3c:	pop	{r4, r5, r6, sl, fp, pc}
   32e40:	cmp	r2, #0
   32e44:	movwne	r2, #4
   32e48:	mov	r0, r2
   32e4c:	sub	sp, fp, #16
   32e50:	pop	{r4, r5, r6, sl, fp, pc}
   32e54:	mov	r2, #0
   32e58:	mov	r0, r2
   32e5c:	sub	sp, fp, #16
   32e60:	pop	{r4, r5, r6, sl, fp, pc}
   32e64:	mov	r2, #3
   32e68:	mov	r0, r2
   32e6c:	sub	sp, fp, #16
   32e70:	pop	{r4, r5, r6, sl, fp, pc}

00032e74 <flatcc_verify_table_vector_field@@Base>:
   32e74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32e78:	add	fp, sp, #28
   32e7c:	sub	sp, sp, #36	; 0x24
   32e80:	ldrh	r7, [r0, #22]
   32e84:	mov	r4, r3
   32e88:	mov	r3, #4
   32e8c:	add	r1, r3, r1, lsl #1
   32e90:	uxth	r3, r1
   32e94:	cmp	r3, r7
   32e98:	bcs	33058 <flatcc_verify_table_vector_field@@Base+0x1e4>
   32e9c:	ldr	r3, [r0, #12]
   32ea0:	uxtah	r1, r3, r1
   32ea4:	ldrh	r1, [r1]
   32ea8:	cmp	r1, #0
   32eac:	beq	33058 <flatcc_verify_table_vector_field@@Base+0x1e4>
   32eb0:	ldrh	r3, [r0, #20]
   32eb4:	add	r7, r1, #4
   32eb8:	mov	r2, #13
   32ebc:	cmp	r7, r3
   32ec0:	bhi	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   32ec4:	ldr	r3, [r0, #16]
   32ec8:	mov	r2, #12
   32ecc:	add	r6, r3, r1
   32ed0:	tst	r6, #3
   32ed4:	bne	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   32ed8:	mov	r2, #0
   32edc:	cmp	r6, #0
   32ee0:	beq	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   32ee4:	ldr	r7, [r0, #8]
   32ee8:	cmp	r7, #1
   32eec:	blt	3306c <flatcc_verify_table_vector_field@@Base+0x1f8>
   32ef0:	ldr	sl, [r0]
   32ef4:	mov	r2, #16
   32ef8:	ldr	ip, [sl, r6]
   32efc:	add	r5, ip, r6
   32f00:	cmp	r5, r6
   32f04:	bls	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   32f08:	ldr	r9, [r0, #4]
   32f0c:	add	r8, r5, #4
   32f10:	cmp	r8, r9
   32f14:	bhi	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   32f18:	ands	r0, r8, #3
   32f1c:	bne	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   32f20:	ldr	lr, [sl, r5]
   32f24:	mov	r2, #25
   32f28:	cmn	lr, #-1073741823	; 0xc0000001
   32f2c:	bhi	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   32f30:	sub	r0, r9, #4
   32f34:	mov	r2, #26
   32f38:	sub	r6, r0, r5
   32f3c:	cmp	r6, lr, lsl #2
   32f40:	bcc	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   32f44:	cmp	lr, #0
   32f48:	mov	r2, #0
   32f4c:	beq	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   32f50:	subs	r2, r7, #2
   32f54:	str	r2, [sp, #4]
   32f58:	beq	33138 <flatcc_verify_table_vector_field@@Base+0x2c4>
   32f5c:	sub	r0, r0, r1
   32f60:	sub	r0, r0, ip
   32f64:	sub	r5, r0, r3
   32f68:	mov	r0, #0
   32f6c:	str	r0, [sp, #8]
   32f70:	ldr	r2, [sl, r8]
   32f74:	ldr	r0, [sp, #4]
   32f78:	str	r0, [sp, #20]
   32f7c:	add	r0, r8, r2
   32f80:	add	ip, r0, #4
   32f84:	tst	r0, #3
   32f88:	bne	3307c <flatcc_verify_table_vector_field@@Base+0x208>
   32f8c:	cmp	r0, r8
   32f90:	bls	3307c <flatcc_verify_table_vector_field@@Base+0x208>
   32f94:	cmp	ip, r9
   32f98:	bhi	3307c <flatcc_verify_table_vector_field@@Base+0x208>
   32f9c:	str	r0, [sp, #28]
   32fa0:	add	r1, sl, r2
   32fa4:	ldr	r7, [r1, r8]
   32fa8:	sub	r1, r2, r7
   32fac:	add	r3, r8, r1
   32fb0:	tst	r3, #-2147483647	; 0x80000001
   32fb4:	bne	3307c <flatcc_verify_table_vector_field@@Base+0x208>
   32fb8:	add	r6, r3, #2
   32fbc:	cmp	r6, r9
   32fc0:	bhi	3307c <flatcc_verify_table_vector_field@@Base+0x208>
   32fc4:	add	r1, sl, r1
   32fc8:	add	r1, r1, r8
   32fcc:	ldrh	r1, [r1]
   32fd0:	cmp	r1, #4
   32fd4:	strh	r1, [sp, #34]	; 0x22
   32fd8:	bcc	3307c <flatcc_verify_table_vector_field@@Base+0x208>
   32fdc:	ands	r6, r1, #1
   32fe0:	bne	3307c <flatcc_verify_table_vector_field@@Base+0x208>
   32fe4:	add	r1, r2, r1
   32fe8:	sub	r1, r1, r7
   32fec:	add	r1, r8, r1
   32ff0:	cmp	r1, r9
   32ff4:	bhi	3307c <flatcc_verify_table_vector_field@@Base+0x208>
   32ff8:	add	r1, sl, r3
   32ffc:	sub	r2, r5, r2
   33000:	ldrh	r3, [r1, #2]
   33004:	cmp	r2, r3
   33008:	strh	r3, [sp, #32]
   3300c:	bcc	3307c <flatcc_verify_table_vector_field@@Base+0x208>
   33010:	add	r0, sp, #12
   33014:	str	sl, [sp, #12]
   33018:	str	r1, [sp, #24]
   3301c:	mov	r6, lr
   33020:	str	r9, [sp, #16]
   33024:	blx	r4
   33028:	cmp	r0, #0
   3302c:	bne	33150 <flatcc_verify_table_vector_field@@Base+0x2dc>
   33030:	ldr	r0, [sp, #8]
   33034:	sub	r5, r5, #4
   33038:	add	r8, r8, #4
   3303c:	mov	r2, #0
   33040:	mov	lr, r6
   33044:	add	r0, r0, #1
   33048:	cmp	r0, r6
   3304c:	str	r0, [sp, #8]
   33050:	bcc	32f70 <flatcc_verify_table_vector_field@@Base+0xfc>
   33054:	b	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   33058:	cmp	r2, #0
   3305c:	movwne	r2, #4
   33060:	mov	r0, r2
   33064:	sub	sp, fp, #28
   33068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3306c:	mov	r2, #3
   33070:	mov	r0, r2
   33074:	sub	sp, fp, #28
   33078:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3307c:	ldr	r1, [sp, #4]
   33080:	str	r1, [sp, #20]
   33084:	mov	r2, #15
   33088:	tst	r0, #3
   3308c:	bne	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   33090:	cmp	r0, r8
   33094:	bls	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   33098:	cmp	ip, r9
   3309c:	bhi	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   330a0:	str	r0, [sp, #28]
   330a4:	mov	r2, #29
   330a8:	ldr	r1, [sl, r0]
   330ac:	sub	r7, r0, r1
   330b0:	tst	r7, #-2147483647	; 0x80000001
   330b4:	bne	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   330b8:	add	r3, r7, #2
   330bc:	mov	r2, #27
   330c0:	cmp	r3, r9
   330c4:	bhi	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   330c8:	mov	r1, sl
   330cc:	mov	r2, #30
   330d0:	ldrh	r6, [r1, r7]!
   330d4:	tst	r6, #1
   330d8:	strh	r6, [sp, #34]	; 0x22
   330dc:	bne	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   330e0:	add	r7, r7, r6
   330e4:	cmp	r7, r9
   330e8:	bhi	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   330ec:	mov	r2, #28
   330f0:	cmp	r6, #4
   330f4:	bcc	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   330f8:	add	r2, sl, r3
   330fc:	sub	r0, r9, r0
   33100:	ldrh	r3, [r2]
   33104:	mov	r2, #20
   33108:	cmp	r0, r3
   3310c:	strh	r3, [sp, #32]
   33110:	bcc	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>
   33114:	add	r0, sp, #12
   33118:	str	sl, [sp, #12]
   3311c:	str	r1, [sp, #24]
   33120:	str	r9, [sp, #16]
   33124:	blx	r4
   33128:	mov	r2, r0
   3312c:	mov	r0, r2
   33130:	sub	sp, fp, #28
   33134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33138:	mov	r0, #0
   3313c:	mov	r2, #3
   33140:	str	r0, [sp, #20]
   33144:	mov	r0, r2
   33148:	sub	sp, fp, #28
   3314c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33150:	ldr	r0, [sl, r8]
   33154:	ldr	r1, [sp, #4]
   33158:	add	r0, r0, r8
   3315c:	str	r1, [sp, #20]
   33160:	add	ip, r0, #4
   33164:	mov	r2, #15
   33168:	tst	r0, #3
   3316c:	beq	33090 <flatcc_verify_table_vector_field@@Base+0x21c>
   33170:	b	33060 <flatcc_verify_table_vector_field@@Base+0x1ec>

00033174 <flatcc_verify_union_table@@Base>:
   33174:	push	{r4, r5, r6, sl, fp, lr}
   33178:	add	fp, sp, #16
   3317c:	sub	sp, sp, #24
   33180:	ldr	r5, [r0, #16]
   33184:	ldr	r3, [r0, #20]
   33188:	ldr	ip, [r0]
   3318c:	ldr	r2, [r0, #4]
   33190:	ldr	r0, [r0, #8]
   33194:	subs	r0, r0, #1
   33198:	str	r0, [sp, #8]
   3319c:	moveq	r0, #3
   331a0:	subeq	sp, fp, #16
   331a4:	popeq	{r4, r5, r6, sl, fp, pc}
   331a8:	add	r3, r3, r5
   331ac:	mov	r0, #15
   331b0:	tst	r3, #3
   331b4:	bne	33254 <flatcc_verify_union_table@@Base+0xe0>
   331b8:	cmp	r3, r5
   331bc:	bls	33254 <flatcc_verify_union_table@@Base+0xe0>
   331c0:	add	r6, r3, #4
   331c4:	cmp	r6, r2
   331c8:	bhi	33254 <flatcc_verify_union_table@@Base+0xe0>
   331cc:	str	r3, [sp, #16]
   331d0:	ldr	r0, [ip, r3]
   331d4:	sub	r5, r3, r0
   331d8:	mov	r0, #29
   331dc:	tst	r5, #-2147483647	; 0x80000001
   331e0:	bne	33254 <flatcc_verify_union_table@@Base+0xe0>
   331e4:	add	r4, r5, #2
   331e8:	mov	r0, #27
   331ec:	cmp	r4, r2
   331f0:	bhi	33254 <flatcc_verify_union_table@@Base+0xe0>
   331f4:	mov	lr, ip
   331f8:	mov	r0, #30
   331fc:	ldrh	r6, [lr, r5]!
   33200:	tst	r6, #1
   33204:	strh	r6, [sp, #22]
   33208:	bne	33254 <flatcc_verify_union_table@@Base+0xe0>
   3320c:	add	r5, r5, r6
   33210:	cmp	r5, r2
   33214:	bhi	33254 <flatcc_verify_union_table@@Base+0xe0>
   33218:	mov	r0, #28
   3321c:	cmp	r6, #4
   33220:	bcc	33254 <flatcc_verify_union_table@@Base+0xe0>
   33224:	add	r0, ip, r4
   33228:	sub	r3, r2, r3
   3322c:	ldrh	r4, [r0]
   33230:	mov	r0, #20
   33234:	cmp	r3, r4
   33238:	strh	r4, [sp, #20]
   3323c:	bcc	33254 <flatcc_verify_union_table@@Base+0xe0>
   33240:	mov	r0, sp
   33244:	str	ip, [sp]
   33248:	str	lr, [sp, #12]
   3324c:	str	r2, [sp, #4]
   33250:	blx	r1
   33254:	sub	sp, fp, #16
   33258:	pop	{r4, r5, r6, sl, fp, pc}

0003325c <flatcc_verify_union_struct@@Base>:
   3325c:	push	{fp, lr}
   33260:	mov	fp, sp
   33264:	ldr	lr, [r0, #20]
   33268:	mov	r3, r0
   3326c:	mov	r0, #18
   33270:	cmp	lr, #0
   33274:	beq	332b0 <flatcc_verify_union_struct@@Base+0x54>
   33278:	ldr	ip, [r3, #4]
   3327c:	ldr	r3, [r3, #16]
   33280:	add	r3, r3, lr
   33284:	cmp	r3, ip
   33288:	bhi	332b0 <flatcc_verify_union_struct@@Base+0x54>
   3328c:	adds	r1, r3, r1
   33290:	mov	r0, #10
   33294:	bcs	332b0 <flatcc_verify_union_struct@@Base+0x54>
   33298:	mov	r0, #9
   3329c:	cmp	r1, ip
   332a0:	pophi	{fp, pc}
   332a4:	sub	r0, r2, #1
   332a8:	ands	r0, r3, r0
   332ac:	movwne	r0, #11
   332b0:	pop	{fp, pc}

000332b4 <flatcc_verify_union_string@@Base>:
   332b4:	mov	r1, r0
   332b8:	ldr	r3, [r0, #16]
   332bc:	ldr	r0, [r0, #20]
   332c0:	add	r2, r0, r3
   332c4:	mov	r0, #17
   332c8:	tst	r2, #3
   332cc:	bne	33320 <flatcc_verify_union_string@@Base+0x6c>
   332d0:	cmp	r2, r3
   332d4:	bls	33320 <flatcc_verify_union_string@@Base+0x6c>
   332d8:	ldr	r3, [r1, #4]
   332dc:	add	ip, r2, #4
   332e0:	cmp	r3, ip
   332e4:	bcc	33320 <flatcc_verify_union_string@@Base+0x6c>
   332e8:	push	{fp, lr}
   332ec:	mov	fp, sp
   332f0:	ldr	r1, [r1]
   332f4:	sub	lr, r3, ip
   332f8:	mov	r0, #8
   332fc:	ldr	r2, [r1, r2]
   33300:	add	r3, r2, #1
   33304:	cmp	lr, r3
   33308:	pop	{fp, lr}
   3330c:	bxcc	lr
   33310:	add	r0, r1, ip
   33314:	ldrb	r0, [r0, r2]
   33318:	cmp	r0, #0
   3331c:	movwne	r0, #7
   33320:	bx	lr

00033324 <flatcc_verify_buffer_header@@Base>:
   33324:	push	{r4, sl, fp, lr}
   33328:	add	fp, sp, #8
   3332c:	sub	sp, sp, #8
   33330:	mov	r4, r0
   33334:	mov	r0, #5
   33338:	tst	r4, #3
   3333c:	bne	33390 <flatcc_verify_buffer_header@@Base+0x6c>
   33340:	mov	r0, #6
   33344:	cmn	r1, #9
   33348:	bhi	33390 <flatcc_verify_buffer_header@@Base+0x6c>
   3334c:	mov	r0, #1
   33350:	cmp	r1, #8
   33354:	bcc	33390 <flatcc_verify_buffer_header@@Base+0x6c>
   33358:	cmp	r2, #0
   3335c:	beq	33398 <flatcc_verify_buffer_header@@Base+0x74>
   33360:	mov	r0, #0
   33364:	mov	r1, r2
   33368:	mov	r2, #4
   3336c:	str	r0, [sp, #4]
   33370:	add	r0, sp, #4
   33374:	bl	14efc <strncpy@plt>
   33378:	ldr	r1, [sp, #4]
   3337c:	cmp	r1, #0
   33380:	ldrne	r2, [r4, #4]
   33384:	movne	r0, #2
   33388:	cmpne	r2, r1
   3338c:	moveq	r0, #0
   33390:	sub	sp, fp, #8
   33394:	pop	{r4, sl, fp, pc}
   33398:	mov	r0, #0
   3339c:	sub	sp, fp, #8
   333a0:	pop	{r4, sl, fp, pc}

000333a4 <flatcc_verify_typed_buffer_header@@Base>:
   333a4:	mov	r3, r0
   333a8:	mov	r0, #5
   333ac:	tst	r3, #3
   333b0:	bne	333e4 <flatcc_verify_typed_buffer_header@@Base+0x40>
   333b4:	mov	r0, #6
   333b8:	cmn	r1, #9
   333bc:	bhi	333e4 <flatcc_verify_typed_buffer_header@@Base+0x40>
   333c0:	mov	r0, #1
   333c4:	cmp	r1, #8
   333c8:	bxcc	lr
   333cc:	cmp	r2, #0
   333d0:	beq	333e8 <flatcc_verify_typed_buffer_header@@Base+0x44>
   333d4:	ldr	r1, [r3, #4]
   333d8:	mov	r0, #2
   333dc:	cmp	r1, r2
   333e0:	moveq	r0, #0
   333e4:	bx	lr
   333e8:	mov	r0, #0
   333ec:	bx	lr

000333f0 <flatcc_verify_struct_as_root@@Base>:
   333f0:	push	{r4, r5, r6, r7, fp, lr}
   333f4:	add	fp, sp, #16
   333f8:	sub	sp, sp, #8
   333fc:	mov	r5, r0
   33400:	mov	r0, #5
   33404:	tst	r5, #3
   33408:	bne	334a0 <flatcc_verify_struct_as_root@@Base+0xb0>
   3340c:	mov	r4, r1
   33410:	mov	r0, #6
   33414:	cmn	r1, #9
   33418:	bhi	334a0 <flatcc_verify_struct_as_root@@Base+0xb0>
   3341c:	mov	r0, #1
   33420:	cmp	r4, #8
   33424:	bcc	334a0 <flatcc_verify_struct_as_root@@Base+0xb0>
   33428:	mov	r6, r3
   3342c:	mov	r7, r2
   33430:	cmp	r2, #0
   33434:	beq	33464 <flatcc_verify_struct_as_root@@Base+0x74>
   33438:	mov	r0, #0
   3343c:	mov	r1, r7
   33440:	mov	r2, #4
   33444:	str	r0, [sp]
   33448:	mov	r0, sp
   3344c:	bl	14efc <strncpy@plt>
   33450:	ldr	r0, [sp]
   33454:	cmp	r0, #0
   33458:	ldrne	r1, [r5, #4]
   3345c:	cmpne	r1, r0
   33460:	bne	334a8 <flatcc_verify_struct_as_root@@Base+0xb8>
   33464:	ldr	r1, [r5]
   33468:	mov	r0, #18
   3346c:	sub	r2, r1, #1
   33470:	cmp	r2, r4
   33474:	bcs	334a0 <flatcc_verify_struct_as_root@@Base+0xb0>
   33478:	adds	r2, r1, r6
   3347c:	mov	r0, #10
   33480:	bcs	334a0 <flatcc_verify_struct_as_root@@Base+0xb0>
   33484:	mov	r0, #9
   33488:	cmp	r2, r4
   3348c:	bhi	334a0 <flatcc_verify_struct_as_root@@Base+0xb0>
   33490:	ldr	r0, [fp, #8]
   33494:	sub	r0, r0, #1
   33498:	ands	r0, r1, r0
   3349c:	movwne	r0, #11
   334a0:	sub	sp, fp, #16
   334a4:	pop	{r4, r5, r6, r7, fp, pc}
   334a8:	mov	r0, #0
   334ac:	mov	r1, r7
   334b0:	mov	r2, #4
   334b4:	str	r0, [sp, #4]
   334b8:	add	r0, sp, #4
   334bc:	bl	14efc <strncpy@plt>
   334c0:	ldr	r1, [sp, #4]
   334c4:	ldr	r0, [r5, #4]
   334c8:	subs	r0, r0, r1
   334cc:	movwne	r0, #2
   334d0:	cmp	r1, #0
   334d4:	moveq	r0, r1
   334d8:	sub	sp, fp, #16
   334dc:	pop	{r4, r5, r6, r7, fp, pc}

000334e0 <flatcc_verify_struct_as_typed_root@@Base>:
   334e0:	push	{fp, lr}
   334e4:	mov	fp, sp
   334e8:	mov	ip, r0
   334ec:	mov	r0, #5
   334f0:	tst	ip, #3
   334f4:	bne	33564 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   334f8:	mov	r0, #6
   334fc:	cmn	r1, #9
   33500:	bhi	33564 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   33504:	mov	r0, #1
   33508:	cmp	r1, #8
   3350c:	bcc	33564 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   33510:	cmp	r2, #0
   33514:	beq	33528 <flatcc_verify_struct_as_typed_root@@Base+0x48>
   33518:	ldr	lr, [ip, #4]
   3351c:	mov	r0, #2
   33520:	cmp	lr, r2
   33524:	bne	33564 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   33528:	ldr	ip, [ip]
   3352c:	mov	r0, #18
   33530:	sub	r2, ip, #1
   33534:	cmp	r2, r1
   33538:	bcs	33564 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   3353c:	adds	r3, ip, r3
   33540:	mov	r0, #10
   33544:	bcs	33564 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   33548:	mov	r0, #9
   3354c:	cmp	r3, r1
   33550:	pophi	{fp, pc}
   33554:	ldr	r0, [fp, #8]
   33558:	sub	r0, r0, #1
   3355c:	ands	r0, ip, r0
   33560:	movwne	r0, #11
   33564:	pop	{fp, pc}

00033568 <flatcc_verify_table_as_root@@Base>:
   33568:	push	{r4, r5, r6, r7, fp, lr}
   3356c:	add	fp, sp, #16
   33570:	sub	sp, sp, #24
   33574:	mov	r4, r0
   33578:	mov	r0, #5
   3357c:	tst	r4, #3
   33580:	bne	3368c <flatcc_verify_table_as_root@@Base+0x124>
   33584:	mov	r6, r1
   33588:	mov	r0, #6
   3358c:	cmn	r1, #9
   33590:	bhi	3368c <flatcc_verify_table_as_root@@Base+0x124>
   33594:	mov	r0, #1
   33598:	cmp	r6, #8
   3359c:	bcc	3368c <flatcc_verify_table_as_root@@Base+0x124>
   335a0:	mov	r5, r3
   335a4:	mov	r7, r2
   335a8:	cmp	r2, #0
   335ac:	beq	335dc <flatcc_verify_table_as_root@@Base+0x74>
   335b0:	mov	r0, #0
   335b4:	mov	r1, r7
   335b8:	mov	r2, #4
   335bc:	str	r0, [sp]
   335c0:	mov	r0, sp
   335c4:	bl	14efc <strncpy@plt>
   335c8:	ldr	r0, [sp]
   335cc:	cmp	r0, #0
   335d0:	ldrne	r1, [r4, #4]
   335d4:	cmpne	r1, r0
   335d8:	bne	33694 <flatcc_verify_table_as_root@@Base+0x12c>
   335dc:	ldr	r1, [r4]
   335e0:	mov	r0, #99	; 0x63
   335e4:	str	r0, [sp, #8]
   335e8:	mov	r0, #15
   335ec:	tst	r1, #3
   335f0:	bne	3368c <flatcc_verify_table_as_root@@Base+0x124>
   335f4:	cmp	r1, #0
   335f8:	beq	3368c <flatcc_verify_table_as_root@@Base+0x124>
   335fc:	add	r2, r1, #4
   33600:	cmp	r2, r6
   33604:	bhi	3368c <flatcc_verify_table_as_root@@Base+0x124>
   33608:	str	r1, [sp, #16]
   3360c:	ldr	r0, [r4, r1]
   33610:	sub	r7, r1, r0
   33614:	mov	r0, #29
   33618:	tst	r7, #-2147483647	; 0x80000001
   3361c:	bne	3368c <flatcc_verify_table_as_root@@Base+0x124>
   33620:	add	r3, r7, #2
   33624:	mov	r0, #27
   33628:	cmp	r3, r6
   3362c:	bhi	3368c <flatcc_verify_table_as_root@@Base+0x124>
   33630:	mov	ip, r4
   33634:	mov	r0, #30
   33638:	ldrh	r2, [ip, r7]!
   3363c:	tst	r2, #1
   33640:	strh	r2, [sp, #22]
   33644:	bne	3368c <flatcc_verify_table_as_root@@Base+0x124>
   33648:	add	r7, r7, r2
   3364c:	cmp	r7, r6
   33650:	bhi	3368c <flatcc_verify_table_as_root@@Base+0x124>
   33654:	mov	r0, #28
   33658:	cmp	r2, #4
   3365c:	bcc	3368c <flatcc_verify_table_as_root@@Base+0x124>
   33660:	add	r0, r4, r3
   33664:	sub	r1, r6, r1
   33668:	ldrh	r2, [r0]
   3366c:	mov	r0, #20
   33670:	cmp	r1, r2
   33674:	strh	r2, [sp, #20]
   33678:	bcc	3368c <flatcc_verify_table_as_root@@Base+0x124>
   3367c:	mov	r0, sp
   33680:	str	ip, [sp, #12]
   33684:	stm	sp, {r4, r6}
   33688:	blx	r5
   3368c:	sub	sp, fp, #16
   33690:	pop	{r4, r5, r6, r7, fp, pc}
   33694:	mov	r0, #0
   33698:	mov	r1, r7
   3369c:	mov	r2, #4
   336a0:	str	r0, [sp]
   336a4:	mov	r0, sp
   336a8:	bl	14efc <strncpy@plt>
   336ac:	ldr	r1, [sp]
   336b0:	ldr	r0, [r4, #4]
   336b4:	subs	r0, r0, r1
   336b8:	movwne	r0, #2
   336bc:	cmp	r1, #0
   336c0:	moveq	r0, r1
   336c4:	sub	sp, fp, #16
   336c8:	pop	{r4, r5, r6, r7, fp, pc}

000336cc <flatcc_verify_table_as_typed_root@@Base>:
   336cc:	push	{r4, r5, r6, sl, fp, lr}
   336d0:	add	fp, sp, #16
   336d4:	sub	sp, sp, #24
   336d8:	mov	ip, #5
   336dc:	tst	r0, #3
   336e0:	bne	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   336e4:	mov	ip, #6
   336e8:	cmn	r1, #9
   336ec:	bhi	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   336f0:	mov	ip, #1
   336f4:	cmp	r1, #8
   336f8:	bcc	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   336fc:	cmp	r2, #0
   33700:	beq	33714 <flatcc_verify_table_as_typed_root@@Base+0x48>
   33704:	ldr	r6, [r0, #4]
   33708:	mov	ip, #2
   3370c:	cmp	r6, r2
   33710:	bne	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   33714:	ldr	r2, [r0]
   33718:	mov	r6, #99	; 0x63
   3371c:	mov	ip, #15
   33720:	str	r6, [sp, #8]
   33724:	tst	r2, #3
   33728:	bne	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   3372c:	cmp	r2, #0
   33730:	beq	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   33734:	add	r6, r2, #4
   33738:	cmp	r6, r1
   3373c:	bhi	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   33740:	str	r2, [sp, #16]
   33744:	mov	ip, #29
   33748:	ldr	r6, [r0, r2]
   3374c:	sub	r5, r2, r6
   33750:	tst	r5, #-2147483647	; 0x80000001
   33754:	bne	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   33758:	add	r4, r5, #2
   3375c:	mov	ip, #27
   33760:	cmp	r4, r1
   33764:	bhi	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   33768:	mov	lr, r0
   3376c:	mov	ip, #30
   33770:	ldrh	r6, [lr, r5]!
   33774:	tst	r6, #1
   33778:	strh	r6, [sp, #22]
   3377c:	bne	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   33780:	add	r5, r5, r6
   33784:	cmp	r5, r1
   33788:	bhi	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   3378c:	mov	ip, #28
   33790:	cmp	r6, #4
   33794:	bcc	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   33798:	add	r6, r0, r4
   3379c:	sub	r2, r1, r2
   337a0:	mov	ip, #20
   337a4:	ldrh	r4, [r6]
   337a8:	cmp	r2, r4
   337ac:	strh	r4, [sp, #20]
   337b0:	bcc	337c8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   337b4:	str	lr, [sp, #12]
   337b8:	stm	sp, {r0, r1}
   337bc:	mov	r0, sp
   337c0:	blx	r3
   337c4:	mov	ip, r0
   337c8:	mov	r0, ip
   337cc:	sub	sp, fp, #16
   337d0:	pop	{r4, r5, r6, sl, fp, pc}

000337d4 <flatcc_verify_struct_as_nested_root@@Base>:
   337d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   337d8:	add	fp, sp, #24
   337dc:	sub	sp, sp, #8
   337e0:	ldrh	r6, [r0, #22]
   337e4:	mov	r4, r3
   337e8:	mov	r3, #4
   337ec:	ldr	r9, [fp, #12]
   337f0:	add	r3, r3, r1, lsl #1
   337f4:	uxth	r7, r3
   337f8:	cmp	r7, r6
   337fc:	bcs	33880 <flatcc_verify_struct_as_nested_root@@Base+0xac>
   33800:	ldr	r1, [r0, #12]
   33804:	ldrh	r5, [r1, r7]!
   33808:	cmp	r5, #0
   3380c:	beq	33880 <flatcc_verify_struct_as_nested_root@@Base+0xac>
   33810:	ldrh	r3, [r0, #20]
   33814:	add	r7, r5, #4
   33818:	cmp	r7, r3
   3381c:	bhi	33898 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   33820:	ldr	r3, [r0, #16]
   33824:	add	r6, r3, r5
   33828:	tst	r6, #3
   3382c:	bne	33898 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   33830:	cmp	r6, #0
   33834:	beq	33954 <flatcc_verify_struct_as_nested_root@@Base+0x180>
   33838:	ldr	r3, [r0]
   3383c:	ldr	r7, [r3, r6]
   33840:	add	r7, r7, r6
   33844:	cmp	r7, r6
   33848:	bls	33898 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   3384c:	ldr	r6, [r0, #4]
   33850:	add	r5, r7, #4
   33854:	cmp	r5, r6
   33858:	bhi	33898 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   3385c:	ands	r5, r5, #3
   33860:	bne	33898 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   33864:	ldr	r3, [r3, r7]
   33868:	sub	r6, r6, #4
   3386c:	sub	r6, r6, r7
   33870:	mul	r3, r3, r9
   33874:	cmp	r6, r3
   33878:	bcc	33898 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   3387c:	b	33954 <flatcc_verify_struct_as_nested_root@@Base+0x180>
   33880:	cmp	r2, #0
   33884:	beq	33940 <flatcc_verify_struct_as_nested_root@@Base+0x16c>
   33888:	cmp	r7, r6
   3388c:	bcs	3392c <flatcc_verify_struct_as_nested_root@@Base+0x158>
   33890:	ldr	r1, [r0, #12]
   33894:	uxtah	r1, r1, r3
   33898:	ldrh	r1, [r1]
   3389c:	cmp	r1, #0
   338a0:	beq	3392c <flatcc_verify_struct_as_nested_root@@Base+0x158>
   338a4:	ldrh	r3, [r0, #20]
   338a8:	add	r7, r1, #4
   338ac:	mov	r2, #13
   338b0:	cmp	r7, r3
   338b4:	bhi	33974 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   338b8:	ldr	r2, [r0, #16]
   338bc:	add	r7, r2, r1
   338c0:	mov	r2, #12
   338c4:	tst	r7, #3
   338c8:	bne	33974 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   338cc:	cmp	r7, #0
   338d0:	beq	33a2c <flatcc_verify_struct_as_nested_root@@Base+0x258>
   338d4:	ldr	r1, [r0]
   338d8:	ldr	r2, [r1, r7]
   338dc:	add	r3, r2, r7
   338e0:	mov	r2, #16
   338e4:	cmp	r3, r7
   338e8:	bls	33974 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   338ec:	ldr	r0, [r0, #4]
   338f0:	add	r7, r3, #4
   338f4:	cmp	r7, r0
   338f8:	bhi	33974 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   338fc:	ands	r7, r7, #3
   33900:	bne	33974 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   33904:	ldr	r1, [r1, r3]
   33908:	sub	r0, r0, #4
   3390c:	mov	r2, #0
   33910:	sub	r0, r0, r3
   33914:	mul	r1, r1, r9
   33918:	cmp	r0, r1
   3391c:	movwcc	r2, #26
   33920:	mov	r0, r2
   33924:	sub	sp, fp, #24
   33928:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3392c:	cmp	r2, #0
   33930:	movwne	r2, #4
   33934:	mov	r0, r2
   33938:	sub	sp, fp, #24
   3393c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   33940:	mov	r2, #0
   33944:	cmp	r7, r6
   33948:	bcs	33974 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   3394c:	ldr	r1, [r0, #12]
   33950:	uxtah	r1, r1, r3
   33954:	ldrh	r1, [r1]
   33958:	mov	r2, #0
   3395c:	cmp	r1, #0
   33960:	ldrne	r3, [r0]
   33964:	ldrne	r0, [r0, #16]
   33968:	addne	r0, r3, r0
   3396c:	addsne	r0, r0, r1
   33970:	bne	33980 <flatcc_verify_struct_as_nested_root@@Base+0x1ac>
   33974:	mov	r0, r2
   33978:	sub	sp, fp, #24
   3397c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   33980:	ldr	r7, [r0]
   33984:	mov	r2, #5
   33988:	ldr	r8, [r7, r0]!
   3398c:	add	r6, r7, #4
   33990:	tst	r6, #3
   33994:	bne	33974 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   33998:	mov	r2, #6
   3399c:	cmn	r8, #9
   339a0:	bhi	33974 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   339a4:	mov	r2, #1
   339a8:	cmp	r8, #8
   339ac:	bcc	33974 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   339b0:	cmp	r4, #0
   339b4:	beq	339e4 <flatcc_verify_struct_as_nested_root@@Base+0x210>
   339b8:	mov	r0, #0
   339bc:	mov	r1, r4
   339c0:	mov	r2, #4
   339c4:	str	r0, [sp]
   339c8:	mov	r0, sp
   339cc:	bl	14efc <strncpy@plt>
   339d0:	ldr	r0, [sp]
   339d4:	cmp	r0, #0
   339d8:	ldrne	r1, [r7, #8]
   339dc:	cmpne	r1, r0
   339e0:	bne	33a3c <flatcc_verify_struct_as_nested_root@@Base+0x268>
   339e4:	ldr	r0, [r6]
   339e8:	mov	r2, #18
   339ec:	sub	r1, r0, #1
   339f0:	cmp	r1, r8
   339f4:	bcs	33974 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   339f8:	ldr	r1, [fp, #8]
   339fc:	mov	r2, #10
   33a00:	adds	r1, r0, r1
   33a04:	bcs	33974 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   33a08:	mov	r2, #9
   33a0c:	cmp	r1, r8
   33a10:	bhi	33974 <flatcc_verify_struct_as_nested_root@@Base+0x1a0>
   33a14:	sub	r1, r9, #1
   33a18:	ands	r2, r0, r1
   33a1c:	movwne	r2, #11
   33a20:	mov	r0, r2
   33a24:	sub	sp, fp, #24
   33a28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   33a2c:	mov	r2, #0
   33a30:	mov	r0, r2
   33a34:	sub	sp, fp, #24
   33a38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   33a3c:	mov	r0, #0
   33a40:	mov	r1, r4
   33a44:	mov	r2, #4
   33a48:	str	r0, [sp, #4]
   33a4c:	add	r0, sp, #4
   33a50:	bl	14efc <strncpy@plt>
   33a54:	ldr	r0, [sp, #4]
   33a58:	ldr	r1, [r7, #8]
   33a5c:	subs	r2, r1, r0
   33a60:	movwne	r2, #2
   33a64:	cmp	r0, #0
   33a68:	moveq	r2, r0
   33a6c:	mov	r0, r2
   33a70:	sub	sp, fp, #24
   33a74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00033a78 <flatcc_verify_table_as_nested_root@@Base>:
   33a78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33a7c:	add	fp, sp, #24
   33a80:	sub	sp, sp, #24
   33a84:	mov	r4, r0
   33a88:	mov	r0, #4
   33a8c:	ldr	ip, [fp, #8]
   33a90:	mov	r5, r3
   33a94:	ldrh	r6, [r4, #22]
   33a98:	add	r3, r0, r1, lsl #1
   33a9c:	uxth	r7, r3
   33aa0:	cmp	r7, r6
   33aa4:	bcs	33b28 <flatcc_verify_table_as_nested_root@@Base+0xb0>
   33aa8:	ldr	r1, [r4, #12]
   33aac:	ldrh	r0, [r1, r7]!
   33ab0:	cmp	r0, #0
   33ab4:	beq	33b28 <flatcc_verify_table_as_nested_root@@Base+0xb0>
   33ab8:	ldrh	r3, [r4, #20]
   33abc:	add	r7, r0, #4
   33ac0:	cmp	r7, r3
   33ac4:	bhi	33b40 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33ac8:	ldr	r3, [r4, #16]
   33acc:	add	r0, r3, r0
   33ad0:	tst	r0, #3
   33ad4:	bne	33b40 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33ad8:	cmp	r0, #0
   33adc:	beq	33bfc <flatcc_verify_table_as_nested_root@@Base+0x184>
   33ae0:	ldr	r3, [r4]
   33ae4:	ldr	r7, [r3, r0]
   33ae8:	add	r7, r7, r0
   33aec:	cmp	r7, r0
   33af0:	bls	33b40 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33af4:	ldr	r0, [r4, #4]
   33af8:	add	r6, r7, #4
   33afc:	cmp	r6, r0
   33b00:	bhi	33b40 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33b04:	ands	r6, r6, #3
   33b08:	bne	33b40 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33b0c:	ldr	r3, [r3, r7]
   33b10:	sub	r0, r0, #4
   33b14:	sub	r0, r0, r7
   33b18:	mul	r3, r3, ip
   33b1c:	cmp	r0, r3
   33b20:	bcc	33b40 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33b24:	b	33bfc <flatcc_verify_table_as_nested_root@@Base+0x184>
   33b28:	cmp	r2, #0
   33b2c:	beq	33be8 <flatcc_verify_table_as_nested_root@@Base+0x170>
   33b30:	cmp	r7, r6
   33b34:	bcs	33bd4 <flatcc_verify_table_as_nested_root@@Base+0x15c>
   33b38:	ldr	r0, [r4, #12]
   33b3c:	uxtah	r1, r0, r3
   33b40:	ldrh	r0, [r1]
   33b44:	cmp	r0, #0
   33b48:	beq	33bd4 <flatcc_verify_table_as_nested_root@@Base+0x15c>
   33b4c:	ldrh	r1, [r4, #20]
   33b50:	add	r3, r0, #4
   33b54:	mov	r2, #13
   33b58:	cmp	r3, r1
   33b5c:	bhi	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33b60:	ldr	r1, [r4, #16]
   33b64:	mov	r2, #12
   33b68:	add	r0, r1, r0
   33b6c:	tst	r0, #3
   33b70:	bne	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33b74:	cmp	r0, #0
   33b78:	beq	33d58 <flatcc_verify_table_as_nested_root@@Base+0x2e0>
   33b7c:	ldr	r1, [r4]
   33b80:	ldr	r2, [r1, r0]
   33b84:	add	r3, r2, r0
   33b88:	mov	r2, #16
   33b8c:	cmp	r3, r0
   33b90:	bls	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33b94:	ldr	r0, [r4, #4]
   33b98:	add	r7, r3, #4
   33b9c:	cmp	r7, r0
   33ba0:	bhi	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33ba4:	ands	r7, r7, #3
   33ba8:	bne	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33bac:	ldr	r1, [r1, r3]
   33bb0:	sub	r0, r0, #4
   33bb4:	mov	r2, #0
   33bb8:	sub	r0, r0, r3
   33bbc:	mul	r1, r1, ip
   33bc0:	cmp	r0, r1
   33bc4:	movwcc	r2, #26
   33bc8:	mov	r0, r2
   33bcc:	sub	sp, fp, #24
   33bd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33bd4:	cmp	r2, #0
   33bd8:	movwne	r2, #4
   33bdc:	mov	r0, r2
   33be0:	sub	sp, fp, #24
   33be4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33be8:	mov	r2, #0
   33bec:	cmp	r7, r6
   33bf0:	bcs	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33bf4:	ldr	r0, [r4, #12]
   33bf8:	uxtah	r1, r0, r3
   33bfc:	ldrh	r0, [r1]
   33c00:	mov	r2, #0
   33c04:	cmp	r0, #0
   33c08:	ldrne	r1, [r4]
   33c0c:	ldrne	r3, [r4, #16]
   33c10:	addne	r1, r1, r3
   33c14:	addsne	r0, r1, r0
   33c18:	bne	33c28 <flatcc_verify_table_as_nested_root@@Base+0x1b0>
   33c1c:	mov	r0, r2
   33c20:	sub	sp, fp, #24
   33c24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33c28:	ldr	r6, [r0]
   33c2c:	mov	r2, #5
   33c30:	ldr	r8, [r6, r0]!
   33c34:	add	r7, r6, #4
   33c38:	tst	r7, #3
   33c3c:	bne	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33c40:	mov	r2, #6
   33c44:	cmn	r8, #9
   33c48:	bhi	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33c4c:	mov	r2, #1
   33c50:	cmp	r8, #8
   33c54:	bcc	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33c58:	cmp	r5, #0
   33c5c:	beq	33c8c <flatcc_verify_table_as_nested_root@@Base+0x214>
   33c60:	mov	r0, #0
   33c64:	mov	r1, r5
   33c68:	mov	r2, #4
   33c6c:	str	r0, [sp]
   33c70:	mov	r0, sp
   33c74:	bl	14efc <strncpy@plt>
   33c78:	ldr	r0, [sp]
   33c7c:	cmp	r0, #0
   33c80:	ldrne	r1, [r6, #8]
   33c84:	cmpne	r1, r0
   33c88:	bne	33d68 <flatcc_verify_table_as_nested_root@@Base+0x2f0>
   33c8c:	ldr	r1, [r4, #8]
   33c90:	ldr	r0, [r7]
   33c94:	subs	r1, r1, #1
   33c98:	str	r1, [sp, #8]
   33c9c:	beq	33da0 <flatcc_verify_table_as_nested_root@@Base+0x328>
   33ca0:	mov	r2, #15
   33ca4:	tst	r0, #3
   33ca8:	bne	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33cac:	cmp	r0, #0
   33cb0:	beq	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33cb4:	add	r1, r0, #4
   33cb8:	cmp	r1, r8
   33cbc:	bhi	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33cc0:	str	r0, [sp, #16]
   33cc4:	mov	r2, #29
   33cc8:	ldr	r1, [r7, r0]
   33ccc:	sub	r6, r0, r1
   33cd0:	tst	r6, #-2147483647	; 0x80000001
   33cd4:	bne	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33cd8:	add	r3, r6, #2
   33cdc:	mov	r2, #27
   33ce0:	cmp	r3, r8
   33ce4:	bhi	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33ce8:	mov	r1, r7
   33cec:	mov	r2, #30
   33cf0:	ldrh	r5, [r1, r6]!
   33cf4:	tst	r5, #1
   33cf8:	strh	r5, [sp, #22]
   33cfc:	bne	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33d00:	add	r6, r6, r5
   33d04:	cmp	r6, r8
   33d08:	bhi	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33d0c:	mov	r2, #28
   33d10:	cmp	r5, #4
   33d14:	bcc	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33d18:	add	r2, r7, r3
   33d1c:	sub	r0, r8, r0
   33d20:	ldrh	r3, [r2]
   33d24:	mov	r2, #20
   33d28:	cmp	r0, r3
   33d2c:	strh	r3, [sp, #20]
   33d30:	bcc	33c1c <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   33d34:	ldr	r2, [fp, #12]
   33d38:	mov	r0, sp
   33d3c:	str	r1, [sp, #12]
   33d40:	stm	sp, {r7, r8}
   33d44:	blx	r2
   33d48:	mov	r2, r0
   33d4c:	mov	r0, r2
   33d50:	sub	sp, fp, #24
   33d54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33d58:	mov	r2, #0
   33d5c:	mov	r0, r2
   33d60:	sub	sp, fp, #24
   33d64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33d68:	mov	r0, #0
   33d6c:	mov	r1, r5
   33d70:	mov	r2, #4
   33d74:	str	r0, [sp]
   33d78:	mov	r0, sp
   33d7c:	bl	14efc <strncpy@plt>
   33d80:	ldr	r1, [sp]
   33d84:	ldr	r0, [r6, #8]
   33d88:	subs	r0, r0, r1
   33d8c:	movwne	r0, #2
   33d90:	cmp	r1, #0
   33d94:	moveq	r0, r1
   33d98:	sub	sp, fp, #24
   33d9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33da0:	mov	r2, #3
   33da4:	mov	r0, r2
   33da8:	sub	sp, fp, #24
   33dac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00033db0 <flatcc_verify_union_field@@Base>:
   33db0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33db4:	add	fp, sp, #28
   33db8:	sub	sp, sp, #28
   33dbc:	ldrh	r4, [r0, #22]
   33dc0:	mov	r7, #2
   33dc4:	lsl	r5, r1, #1
   33dc8:	add	r7, r7, r1, lsl #1
   33dcc:	uxth	r6, r7
   33dd0:	cmp	r6, r4
   33dd4:	bcs	33ed0 <flatcc_verify_union_field@@Base+0x120>
   33dd8:	ldr	r6, [r0, #12]
   33ddc:	uxtah	r1, r6, r7
   33de0:	ldrh	ip, [r1]
   33de4:	cmp	ip, #0
   33de8:	beq	33ed0 <flatcc_verify_union_field@@Base+0x120>
   33dec:	ldrh	r7, [r0, #20]
   33df0:	mov	r1, #13
   33df4:	cmp	ip, r7
   33df8:	bcs	33ef8 <flatcc_verify_union_field@@Base+0x148>
   33dfc:	add	r7, r5, #4
   33e00:	ldr	lr, [r0]
   33e04:	ldr	r9, [r0, #16]
   33e08:	mov	r1, #1
   33e0c:	uxth	sl, r7
   33e10:	cmp	sl, r4
   33e14:	uxtahcc	r1, r6, r7
   33e18:	ldrhcc	r1, [r1]
   33e1c:	add	r8, lr, r9
   33e20:	ldrb	r5, [r8, ip]
   33e24:	clzcc	r1, r1
   33e28:	lsrcc	r1, r1, #5
   33e2c:	cmp	r1, #0
   33e30:	moveq	r1, #24
   33e34:	cmpeq	r5, #0
   33e38:	beq	33ef8 <flatcc_verify_union_field@@Base+0x148>
   33e3c:	mov	r1, #0
   33e40:	cmp	r5, #0
   33e44:	beq	33ef8 <flatcc_verify_union_field@@Base+0x148>
   33e48:	cmp	sl, r4
   33e4c:	bcs	33f1c <flatcc_verify_union_field@@Base+0x16c>
   33e50:	uxtah	r1, r6, r7
   33e54:	ldrh	r4, [r1]
   33e58:	cmp	r4, #0
   33e5c:	beq	33f1c <flatcc_verify_union_field@@Base+0x16c>
   33e60:	ldrh	r1, [r0, #20]
   33e64:	add	r2, r4, #4
   33e68:	cmp	r2, r1
   33e6c:	mov	r1, #13
   33e70:	bhi	33ef8 <flatcc_verify_union_field@@Base+0x148>
   33e74:	add	r2, r9, r4
   33e78:	mov	r1, #12
   33e7c:	tst	r2, #3
   33e80:	bne	33ef8 <flatcc_verify_union_field@@Base+0x148>
   33e84:	cmp	r2, #0
   33e88:	mov	r1, #0
   33e8c:	beq	33ef8 <flatcc_verify_union_field@@Base+0x148>
   33e90:	str	lr, [sp, #4]
   33e94:	ldr	r1, [r0, #4]
   33e98:	ldr	r0, [r0, #8]
   33e9c:	str	r1, [sp, #8]
   33ea0:	str	r2, [sp, #20]
   33ea4:	str	r0, [sp, #12]
   33ea8:	ldr	r0, [lr, r2]
   33eac:	str	r0, [sp, #24]
   33eb0:	ldrb	r0, [r8, ip]
   33eb4:	strb	r0, [sp, #16]
   33eb8:	add	r0, sp, #4
   33ebc:	blx	r3
   33ec0:	mov	r1, r0
   33ec4:	mov	r0, r1
   33ec8:	sub	sp, fp, #28
   33ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33ed0:	add	r1, r5, #4
   33ed4:	uxth	r3, r1
   33ed8:	cmp	r3, r4
   33edc:	bcs	33f04 <flatcc_verify_union_field@@Base+0x154>
   33ee0:	ldr	r0, [r0, #12]
   33ee4:	uxtah	r0, r0, r1
   33ee8:	mov	r1, #23
   33eec:	ldrh	r0, [r0]
   33ef0:	cmp	r0, #0
   33ef4:	beq	33f04 <flatcc_verify_union_field@@Base+0x154>
   33ef8:	mov	r0, r1
   33efc:	sub	sp, fp, #28
   33f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33f04:	cmp	r2, #0
   33f08:	movwne	r2, #21
   33f0c:	mov	r1, r2
   33f10:	mov	r0, r1
   33f14:	sub	sp, fp, #28
   33f18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33f1c:	cmp	r2, #0
   33f20:	movwne	r2, #4
   33f24:	mov	r1, r2
   33f28:	mov	r0, r1
   33f2c:	sub	sp, fp, #28
   33f30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033f34 <flatcc_verify_union_vector_field@@Base>:
   33f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33f38:	add	fp, sp, #28
   33f3c:	sub	sp, sp, #28
   33f40:	mov	r9, r3
   33f44:	mov	r3, #2
   33f48:	lsl	lr, r1, #1
   33f4c:	add	r6, r3, r1, lsl #1
   33f50:	ldrh	r3, [r0, #22]
   33f54:	uxth	r4, r6
   33f58:	cmp	r4, r3
   33f5c:	bcs	33f74 <flatcc_verify_union_vector_field@@Base+0x40>
   33f60:	ldr	r7, [r0, #12]
   33f64:	mov	r1, r7
   33f68:	ldrh	r5, [r1, r4]!
   33f6c:	cmp	r5, #0
   33f70:	bne	33fc0 <flatcc_verify_union_vector_field@@Base+0x8c>
   33f74:	add	r1, lr, #4
   33f78:	uxth	r7, r1
   33f7c:	cmp	r7, r3
   33f80:	bcs	3402c <flatcc_verify_union_vector_field@@Base+0xf8>
   33f84:	cmp	r2, #0
   33f88:	beq	33fa4 <flatcc_verify_union_vector_field@@Base+0x70>
   33f8c:	ldr	r7, [r0, #12]
   33f90:	uxtah	r1, r7, r1
   33f94:	ldrh	r7, [r1]
   33f98:	mov	r1, #22
   33f9c:	cmp	r7, #0
   33fa0:	beq	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   33fa4:	cmp	r4, r3
   33fa8:	bcs	3403c <flatcc_verify_union_vector_field@@Base+0x108>
   33fac:	ldr	r7, [r0, #12]
   33fb0:	mov	r1, r7
   33fb4:	ldrh	r5, [r1, r4]!
   33fb8:	cmp	r5, #0
   33fbc:	beq	3403c <flatcc_verify_union_vector_field@@Base+0x108>
   33fc0:	ldrh	r6, [r0, #20]
   33fc4:	add	r4, r5, #4
   33fc8:	cmp	r4, r6
   33fcc:	bhi	34054 <flatcc_verify_union_vector_field@@Base+0x120>
   33fd0:	ldr	r6, [r0, #16]
   33fd4:	add	r4, r6, r5
   33fd8:	tst	r4, #3
   33fdc:	bne	34054 <flatcc_verify_union_vector_field@@Base+0x120>
   33fe0:	cmp	r4, #0
   33fe4:	beq	340f8 <flatcc_verify_union_vector_field@@Base+0x1c4>
   33fe8:	ldr	r6, [r0]
   33fec:	ldr	r5, [r6, r4]
   33ff0:	add	r5, r5, r4
   33ff4:	cmp	r5, r4
   33ff8:	bls	34054 <flatcc_verify_union_vector_field@@Base+0x120>
   33ffc:	ldr	ip, [r0, #4]
   34000:	add	r4, r5, #4
   34004:	cmp	r4, ip
   34008:	bhi	34054 <flatcc_verify_union_vector_field@@Base+0x120>
   3400c:	ands	r4, r4, #3
   34010:	bne	34054 <flatcc_verify_union_vector_field@@Base+0x120>
   34014:	ldr	r4, [r6, r5]
   34018:	sub	r6, ip, #4
   3401c:	sub	r6, r6, r5
   34020:	cmp	r6, r4
   34024:	bcc	34054 <flatcc_verify_union_vector_field@@Base+0x120>
   34028:	b	340f8 <flatcc_verify_union_vector_field@@Base+0x1c4>
   3402c:	mov	r1, #22
   34030:	cmp	r2, #0
   34034:	bne	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   34038:	b	33fa4 <flatcc_verify_union_vector_field@@Base+0x70>
   3403c:	cmp	r2, #0
   34040:	beq	340e4 <flatcc_verify_union_vector_field@@Base+0x1b0>
   34044:	cmp	r4, r3
   34048:	bcs	34260 <flatcc_verify_union_vector_field@@Base+0x32c>
   3404c:	ldr	r1, [r0, #12]
   34050:	uxtah	r1, r1, r6
   34054:	ldrh	r3, [r1]
   34058:	cmp	r3, #0
   3405c:	beq	34260 <flatcc_verify_union_vector_field@@Base+0x32c>
   34060:	ldrh	r2, [r0, #20]
   34064:	add	r7, r3, #4
   34068:	mov	r1, #13
   3406c:	cmp	r7, r2
   34070:	bhi	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   34074:	ldr	r1, [r0, #16]
   34078:	add	r7, r1, r3
   3407c:	mov	r1, #12
   34080:	tst	r7, #3
   34084:	bne	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   34088:	cmp	r7, #0
   3408c:	beq	34278 <flatcc_verify_union_vector_field@@Base+0x344>
   34090:	ldr	r2, [r0]
   34094:	ldr	r1, [r2, r7]
   34098:	add	r3, r1, r7
   3409c:	mov	r1, #16
   340a0:	cmp	r3, r7
   340a4:	bls	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   340a8:	ldr	r0, [r0, #4]
   340ac:	add	r7, r3, #4
   340b0:	cmp	r7, r0
   340b4:	bhi	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   340b8:	ands	r7, r7, #3
   340bc:	bne	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   340c0:	ldr	r2, [r2, r3]
   340c4:	sub	r0, r0, #4
   340c8:	mov	r1, #0
   340cc:	sub	r0, r0, r3
   340d0:	cmp	r0, r2
   340d4:	movwcc	r1, #26
   340d8:	mov	r0, r1
   340dc:	sub	sp, fp, #28
   340e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   340e4:	mov	r1, #0
   340e8:	cmp	r4, r3
   340ec:	bcs	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   340f0:	ldr	r7, [r0, #12]
   340f4:	uxtah	r1, r7, r6
   340f8:	ldrh	r5, [r1]
   340fc:	mov	r1, #0
   34100:	cmp	r5, #0
   34104:	ldrne	r8, [r0]
   34108:	ldrne	r6, [r0, #16]
   3410c:	addne	r4, r8, r6
   34110:	addsne	ip, r4, r5
   34114:	beq	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   34118:	add	r1, lr, #4
   3411c:	uxth	r5, r1
   34120:	cmp	r5, r3
   34124:	bcs	34260 <flatcc_verify_union_vector_field@@Base+0x32c>
   34128:	uxtah	r1, r7, r1
   3412c:	ldrh	r3, [r1]
   34130:	cmp	r3, #0
   34134:	beq	34260 <flatcc_verify_union_vector_field@@Base+0x32c>
   34138:	ldrh	r2, [r0, #20]
   3413c:	add	r7, r3, #4
   34140:	mov	r1, #13
   34144:	cmp	r7, r2
   34148:	bhi	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   3414c:	add	r4, r6, r3
   34150:	mov	r1, #12
   34154:	tst	r4, #3
   34158:	bne	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   3415c:	cmp	r4, #0
   34160:	mov	r1, #0
   34164:	beq	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   34168:	ldr	r7, [r0, #8]
   3416c:	cmp	r7, #1
   34170:	blt	34288 <flatcc_verify_union_vector_field@@Base+0x354>
   34174:	ldr	r2, [r8, r4]
   34178:	mov	r1, #16
   3417c:	add	r5, r2, r4
   34180:	cmp	r5, r4
   34184:	bls	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   34188:	ldr	r0, [r0, #4]
   3418c:	add	r4, r5, #4
   34190:	cmp	r4, r0
   34194:	bhi	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   34198:	ands	r4, r4, #3
   3419c:	bne	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   341a0:	ldr	r4, [r8, r5]
   341a4:	mov	r1, #25
   341a8:	cmn	r4, #-1073741823	; 0xc0000001
   341ac:	bhi	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   341b0:	sub	r1, r0, #4
   341b4:	sub	r5, r1, r5
   341b8:	mov	r1, #26
   341bc:	cmp	r5, r4, lsl #2
   341c0:	bcc	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   341c4:	ldr	r5, [ip]
   341c8:	mov	r1, #34	; 0x22
   341cc:	ldr	sl, [r5, ip]!
   341d0:	cmp	r4, sl
   341d4:	bne	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   341d8:	cmp	sl, #0
   341dc:	sub	r1, r7, #1
   341e0:	str	r0, [sp, #8]
   341e4:	str	r8, [sp, #4]
   341e8:	str	r1, [sp, #12]
   341ec:	beq	34298 <flatcc_verify_union_vector_field@@Base+0x364>
   341f0:	add	r0, r2, r6
   341f4:	add	r7, r5, #4
   341f8:	mov	r5, #0
   341fc:	add	r4, sp, #4
   34200:	add	r0, r0, r3
   34204:	add	r6, r0, #4
   34208:	ldr	r1, [r8, r6]
   3420c:	ldrb	r0, [r7, r5]
   34210:	cmp	r1, #0
   34214:	beq	34240 <flatcc_verify_union_vector_field@@Base+0x30c>
   34218:	cmp	r0, #0
   3421c:	beq	342a8 <flatcc_verify_union_vector_field@@Base+0x374>
   34220:	str	r6, [sp, #20]
   34224:	strb	r0, [sp, #16]
   34228:	mov	r0, r4
   3422c:	str	r1, [sp, #24]
   34230:	blx	r9
   34234:	cmp	r0, #0
   34238:	beq	34248 <flatcc_verify_union_vector_field@@Base+0x314>
   3423c:	b	342b8 <flatcc_verify_union_vector_field@@Base+0x384>
   34240:	cmp	r0, #0
   34244:	bne	342d0 <flatcc_verify_union_vector_field@@Base+0x39c>
   34248:	add	r5, r5, #1
   3424c:	add	r6, r6, #4
   34250:	mov	r1, #0
   34254:	cmp	r5, sl
   34258:	bcc	34208 <flatcc_verify_union_vector_field@@Base+0x2d4>
   3425c:	b	3426c <flatcc_verify_union_vector_field@@Base+0x338>
   34260:	cmp	r2, #0
   34264:	movwne	r2, #4
   34268:	mov	r1, r2
   3426c:	mov	r0, r1
   34270:	sub	sp, fp, #28
   34274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34278:	mov	r1, #0
   3427c:	mov	r0, r1
   34280:	sub	sp, fp, #28
   34284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34288:	mov	r1, #3
   3428c:	mov	r0, r1
   34290:	sub	sp, fp, #28
   34294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34298:	mov	r1, #0
   3429c:	mov	r0, r1
   342a0:	sub	sp, fp, #28
   342a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   342a8:	mov	r1, #33	; 0x21
   342ac:	mov	r0, r1
   342b0:	sub	sp, fp, #28
   342b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   342b8:	add	r0, sp, #4
   342bc:	blx	r9
   342c0:	mov	r1, r0
   342c4:	mov	r0, r1
   342c8:	sub	sp, fp, #28
   342cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   342d0:	mov	r1, #32
   342d4:	mov	r0, r1
   342d8:	sub	sp, fp, #28
   342dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000342e0 <grisu3_diy_fp_encode_double@@Base>:
   342e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   342e4:	add	fp, sp, #28
   342e8:	sub	sp, sp, #12
   342ec:	ldr	lr, [fp, #8]
   342f0:	orr	r7, r0, r1
   342f4:	cmp	lr, #0
   342f8:	movwne	lr, #4
   342fc:	cmp	r7, #0
   34300:	beq	346f8 <grisu3_diy_fp_encode_double@@Base+0x418>
   34304:	mov	ip, #0
   34308:	mov	r5, #0
   3430c:	cmp	ip, r1, lsr #22
   34310:	bne	34330 <grisu3_diy_fp_encode_double@@Base+0x50>
   34314:	mov	ip, #0
   34318:	lsl	r1, r1, #10
   3431c:	sub	ip, ip, #10
   34320:	orr	r1, r1, r0, lsr #22
   34324:	lsl	r0, r0, #10
   34328:	cmp	r1, #4194304	; 0x400000
   3432c:	bcc	34318 <grisu3_diy_fp_encode_double@@Base+0x38>
   34330:	sub	r6, r2, r3
   34334:	mvn	r2, #0
   34338:	cmp	r1, #0
   3433c:	blt	34364 <grisu3_diy_fp_encode_double@@Base+0x84>
   34340:	lsl	r1, r1, #1
   34344:	lsl	r4, r0, #1
   34348:	sub	ip, ip, #1
   3434c:	orr	r1, r1, r0, lsr #31
   34350:	subs	r0, r2, r0, lsl #1
   34354:	sbcs	r0, r2, r1
   34358:	mov	r0, r4
   3435c:	blt	34340 <grisu3_diy_fp_encode_double@@Base+0x60>
   34360:	b	34368 <grisu3_diy_fp_encode_double@@Base+0x88>
   34364:	mov	r4, r0
   34368:	cmn	r6, #348	; 0x15c
   3436c:	blt	34718 <grisu3_diy_fp_encode_double@@Base+0x438>
   34370:	cmp	r6, #348	; 0x15c
   34374:	bge	34738 <grisu3_diy_fp_encode_double@@Base+0x458>
   34378:	add	r0, r6, #348	; 0x15c
   3437c:	movw	r9, #44032	; 0xac00
   34380:	asr	r5, r0, #31
   34384:	movt	r9, #4
   34388:	add	r0, r0, r5, lsr #29
   3438c:	mvn	r5, #15
   34390:	and	r0, r5, r0, lsl #1
   34394:	ldr	r5, [r9, r0]!
   34398:	ldrsh	r0, [r9, #10]
   3439c:	cmp	r6, r0
   343a0:	blt	34758 <grisu3_diy_fp_encode_double@@Base+0x478>
   343a4:	add	r7, r0, #8
   343a8:	cmp	r7, r6
   343ac:	ble	34778 <grisu3_diy_fp_encode_double@@Base+0x498>
   343b0:	rsb	r7, ip, #0
   343b4:	cmp	r6, r0
   343b8:	lsl	r8, lr, r7
   343bc:	beq	34448 <grisu3_diy_fp_encode_double@@Base+0x168>
   343c0:	mvn	r0, r0
   343c4:	str	r8, [sp, #4]
   343c8:	str	r3, [sp, #8]
   343cc:	add	sl, r6, r0
   343d0:	cmp	sl, #7
   343d4:	bcs	34798 <grisu3_diy_fp_encode_double@@Base+0x4b8>
   343d8:	movw	r0, #43920	; 0xab90
   343dc:	movt	r0, #4
   343e0:	ldr	r7, [r0, sl, lsl #4]!
   343e4:	ldr	r8, [r0, #4]
   343e8:	ldr	r0, [r0, #8]
   343ec:	umull	lr, r6, r7, r1
   343f0:	str	r0, [sp]
   343f4:	umull	r3, r0, r8, r4
   343f8:	umaal	r6, r0, r8, r1
   343fc:	umull	r1, r4, r7, r4
   34400:	ldr	r8, [sp, #4]
   34404:	mov	r1, #0
   34408:	adds	r7, lr, r4
   3440c:	adc	r1, r1, #0
   34410:	adds	r3, r7, r3
   34414:	adc	r1, r1, #0
   34418:	adds	r3, r3, #-2147483648	; 0x80000000
   3441c:	adc	r1, r1, #0
   34420:	adds	r4, r6, r1
   34424:	adc	r1, r0, #0
   34428:	ldr	r0, [sp, #8]
   3442c:	add	r0, r0, sl
   34430:	add	r0, r0, #1
   34434:	cmp	r0, #19
   34438:	ldr	r0, [sp]
   3443c:	addgt	r8, r8, #4
   34440:	add	r0, ip, r0
   34444:	add	ip, r0, #64	; 0x40
   34448:	ldr	r0, [r9, #4]
   3444c:	umull	r3, r6, r4, r5
   34450:	mov	lr, #0
   34454:	umull	r3, r7, r1, r5
   34458:	adds	r3, r3, r6
   3445c:	adc	r6, lr, #0
   34460:	umull	r4, r5, r4, r0
   34464:	adds	r3, r3, r4
   34468:	umaal	r7, r5, r1, r0
   3446c:	adc	r4, r6, #0
   34470:	adds	r3, r3, #-2147483648	; 0x80000000
   34474:	mov	r6, #9
   34478:	adc	r3, r4, #0
   3447c:	adds	r4, r7, r3
   34480:	adc	r3, r5, #0
   34484:	cmp	r8, #0
   34488:	orr	r0, r4, r3
   3448c:	movweq	r6, #8
   34490:	cmp	r0, #0
   34494:	beq	346f8 <grisu3_diy_fp_encode_double@@Base+0x418>
   34498:	ldrsh	r0, [r9, #8]
   3449c:	cmp	lr, r3, lsr #22
   344a0:	add	r0, r0, ip
   344a4:	add	r5, r0, #64	; 0x40
   344a8:	bne	344e0 <grisu3_diy_fp_encode_double@@Base+0x200>
   344ac:	mov	lr, #0
   344b0:	mov	r1, r5
   344b4:	lsl	r0, r3, #10
   344b8:	sub	r1, r1, #10
   344bc:	orr	r3, r0, r4, lsr #22
   344c0:	lsl	r4, r4, #10
   344c4:	cmp	r3, #4194304	; 0x400000
   344c8:	bcc	344b4 <grisu3_diy_fp_encode_double@@Base+0x1d4>
   344cc:	subs	r0, r2, r4
   344d0:	add	r7, r6, r8
   344d4:	sbcs	r0, r2, r3
   344d8:	blt	344f4 <grisu3_diy_fp_encode_double@@Base+0x214>
   344dc:	b	34518 <grisu3_diy_fp_encode_double@@Base+0x238>
   344e0:	mov	r1, r5
   344e4:	subs	r0, r2, r4
   344e8:	add	r7, r6, r8
   344ec:	sbcs	r0, r2, r3
   344f0:	bge	34518 <grisu3_diy_fp_encode_double@@Base+0x238>
   344f4:	lsl	r0, r3, #1
   344f8:	subs	r6, r2, r4, lsl #1
   344fc:	sub	r1, r1, #1
   34500:	orr	r3, r0, r4, lsr #31
   34504:	lsl	r0, r4, #1
   34508:	sbcs	r6, r2, r3
   3450c:	mov	r4, r0
   34510:	blt	344f4 <grisu3_diy_fp_encode_double@@Base+0x214>
   34514:	b	3451c <grisu3_diy_fp_encode_double@@Base+0x23c>
   34518:	mov	r0, r4
   3451c:	movw	ip, #64462	; 0xfbce
   34520:	sub	r2, r5, r1
   34524:	mov	r5, #0
   34528:	movt	ip, #65535	; 0xffff
   3452c:	lsl	lr, r7, r2
   34530:	sub	r2, ip, #1
   34534:	cmp	r1, r2
   34538:	bgt	3458c <grisu3_diy_fp_encode_double@@Base+0x2ac>
   3453c:	mvn	r2, #1136	; 0x470
   34540:	mov	r5, #64	; 0x40
   34544:	cmp	r1, r2
   34548:	blt	34558 <grisu3_diy_fp_encode_double@@Base+0x278>
   3454c:	sub	r5, ip, r1
   34550:	cmp	r5, #61	; 0x3d
   34554:	blt	3458c <grisu3_diy_fp_encode_double@@Base+0x2ac>
   34558:	sub	r2, r5, #62	; 0x3e
   3455c:	mov	r4, #9
   34560:	add	lr, r4, lr, asr r2
   34564:	lsr	r0, r0, r2
   34568:	rsb	r4, r5, #94	; 0x5e
   3456c:	add	r1, r2, r1
   34570:	orr	r0, r0, r3, lsl r4
   34574:	sub	r4, r5, #94	; 0x5e
   34578:	mov	r5, #62	; 0x3e
   3457c:	cmp	r4, #0
   34580:	lsrge	r0, r3, r4
   34584:	lsr	r3, r3, r2
   34588:	movwge	r3, #0
   3458c:	lsr	r2, r0, r5
   34590:	rsb	r4, r5, #32
   34594:	lsr	r6, r3, r5
   34598:	add	r1, r1, r5
   3459c:	orr	r2, r2, r3, lsl r4
   345a0:	sub	r4, r5, #32
   345a4:	cmp	r4, #0
   345a8:	lsrge	r2, r3, r4
   345ac:	sub	r3, r5, #1
   345b0:	mov	r4, #1
   345b4:	movwge	r6, #0
   345b8:	lsl	r4, r4, r3
   345bc:	sub	r3, r5, #33	; 0x21
   345c0:	cmp	r3, #0
   345c4:	movwge	r4, #0
   345c8:	add	sl, lr, r4, lsl #3
   345cc:	cmp	r5, sl
   345d0:	blt	345f0 <grisu3_diy_fp_encode_double@@Base+0x310>
   345d4:	adds	r2, r2, #1
   345d8:	adc	r6, r6, #0
   345dc:	tst	r6, #2097152	; 0x200000
   345e0:	beq	345f0 <grisu3_diy_fp_encode_double@@Base+0x310>
   345e4:	lsrs	r6, r6, #1
   345e8:	add	r1, r1, #1
   345ec:	rrx	r2, r2
   345f0:	and	r0, r4, r0
   345f4:	cmp	r6, #2097152	; 0x200000
   345f8:	bcc	3461c <grisu3_diy_fp_encode_double@@Base+0x33c>
   345fc:	mov	r3, #0
   34600:	lsrs	r7, r6, #1
   34604:	add	r1, r1, #1
   34608:	rrx	r2, r2
   3460c:	cmp	r3, r6, lsr #22
   34610:	mov	r6, r7
   34614:	bne	34600 <grisu3_diy_fp_encode_double@@Base+0x320>
   34618:	b	34620 <grisu3_diy_fp_encode_double@@Base+0x340>
   3461c:	mov	r7, r6
   34620:	ldr	r8, [fp, #12]
   34624:	lsl	r9, r4, #3
   34628:	lsl	r0, r0, #3
   3462c:	vmov.i32	d16, #0	; 0x00000000
   34630:	cmp	r1, ip
   34634:	blt	346cc <grisu3_diy_fp_encode_double@@Base+0x3ec>
   34638:	and	r3, r7, #1048576	; 0x100000
   3463c:	mov	r4, #1
   34640:	cmp	r1, ip
   34644:	eor	r5, r4, r3, lsr #20
   34648:	beq	3468c <grisu3_diy_fp_encode_double@@Base+0x3ac>
   3464c:	cmp	r3, #0
   34650:	bne	3468c <grisu3_diy_fp_encode_double@@Base+0x3ac>
   34654:	mov	r3, #1
   34658:	lsl	r4, r7, #1
   3465c:	and	r7, r7, #524288	; 0x80000
   34660:	cmn	r1, #1072	; 0x430
   34664:	orr	r6, r4, r2, lsr #31
   34668:	eor	r5, r3, r7, lsr #19
   3466c:	lsl	r2, r2, #1
   34670:	sub	r4, r1, #1
   34674:	blt	34694 <grisu3_diy_fp_encode_double@@Base+0x3b4>
   34678:	cmp	r7, #0
   3467c:	mov	r7, r6
   34680:	mov	r1, r4
   34684:	beq	34658 <grisu3_diy_fp_encode_double@@Base+0x378>
   34688:	b	34694 <grisu3_diy_fp_encode_double@@Base+0x3b4>
   3468c:	mov	r4, r1
   34690:	mov	r6, r7
   34694:	cmp	r4, ip
   34698:	bne	346ac <grisu3_diy_fp_encode_double@@Base+0x3cc>
   3469c:	mov	r1, #0
   346a0:	cmp	r5, #0
   346a4:	mov	r3, #0
   346a8:	bne	346bc <grisu3_diy_fp_encode_double@@Base+0x3dc>
   346ac:	movw	r1, #0
   346b0:	movt	r1, #17200	; 0x4330
   346b4:	add	r3, r1, r4, lsl #20
   346b8:	mov	r1, #0
   346bc:	bfc	r6, #20, #12
   346c0:	orr	r1, r1, r2
   346c4:	orr	r2, r3, r6
   346c8:	vmov	d16, r1, r2
   346cc:	cmp	r0, sl
   346d0:	mov	r2, #0
   346d4:	sub	r3, r9, lr
   346d8:	mov	r1, #0
   346dc:	vstr	d16, [r8]
   346e0:	movwge	r2, #1
   346e4:	cmp	r3, r0
   346e8:	movwge	r1, #1
   346ec:	orr	r0, r2, r1
   346f0:	sub	sp, fp, #28
   346f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   346f8:	movw	r0, #47394	; 0xb922
   346fc:	movw	r1, #47403	; 0xb92b
   34700:	movw	r3, #47489	; 0xb981
   34704:	mov	r2, #260	; 0x104
   34708:	movt	r0, #4
   3470c:	movt	r1, #4
   34710:	movt	r3, #4
   34714:	bl	14f44 <__assert_fail@plt>
   34718:	movw	r0, #47546	; 0xb9ba
   3471c:	movw	r1, #46104	; 0xb418
   34720:	movw	r3, #47577	; 0xb9d9
   34724:	mov	r2, #80	; 0x50
   34728:	movt	r0, #4
   3472c:	movt	r1, #4
   34730:	movt	r3, #4
   34734:	bl	14f44 <__assert_fail@plt>
   34738:	movw	r0, #47634	; 0xba12
   3473c:	movw	r1, #46104	; 0xb418
   34740:	movw	r3, #47577	; 0xb9d9
   34744:	mov	r2, #81	; 0x51
   34748:	movt	r0, #4
   3474c:	movt	r1, #4
   34750:	movt	r3, #4
   34754:	bl	14f44 <__assert_fail@plt>
   34758:	movw	r0, #47677	; 0xba3d
   3475c:	movw	r1, #46104	; 0xb418
   34760:	movw	r3, #47577	; 0xb9d9
   34764:	mov	r2, #88	; 0x58
   34768:	movt	r0, #4
   3476c:	movt	r1, #4
   34770:	movt	r3, #4
   34774:	bl	14f44 <__assert_fail@plt>
   34778:	movw	r0, #47692	; 0xba4c
   3477c:	movw	r1, #46104	; 0xb418
   34780:	movw	r3, #47577	; 0xb9d9
   34784:	mov	r2, #89	; 0x59
   34788:	movt	r0, #4
   3478c:	movt	r1, #4
   34790:	movt	r3, #4
   34794:	bl	14f44 <__assert_fail@plt>
   34798:	movw	r0, #46076	; 0xb3fc
   3479c:	movw	r1, #46104	; 0xb418
   347a0:	movw	r3, #46191	; 0xb46f
   347a4:	mov	r2, #185	; 0xb9
   347a8:	movt	r0, #4
   347ac:	movt	r1, #4
   347b0:	movt	r3, #4
   347b4:	bl	14f44 <__assert_fail@plt>

000347b8 <flatcc_json_parser_error_string@@Base>:
   347b8:	cmp	r0, #34	; 0x22
   347bc:	movwhi	r0, #43738	; 0xaada
   347c0:	movthi	r0, #4
   347c4:	bxhi	lr
   347c8:	movw	r1, #45936	; 0xb370
   347cc:	movt	r1, #4
   347d0:	ldr	r0, [r1, r0, lsl #2]
   347d4:	bx	lr

000347d8 <flatcc_json_parser_set_error@@Base>:
   347d8:	mov	ip, r2
   347dc:	ldr	r2, [r0, #20]
   347e0:	cmp	r2, #0
   347e4:	beq	347f0 <flatcc_json_parser_set_error@@Base+0x18>
   347e8:	mov	r0, ip
   347ec:	bx	lr
   347f0:	str	r1, [r0, #32]
   347f4:	add	r1, r1, #1
   347f8:	ldr	r2, [r0, #4]
   347fc:	sub	r1, r1, r2
   34800:	str	r1, [r0, #16]
   34804:	str	r3, [r0, #20]
   34808:	mov	r0, ip
   3480c:	bx	lr

00034810 <flatcc_json_parser_string_part@@Base>:
   34810:	cmp	r1, r2
   34814:	beq	34840 <flatcc_json_parser_string_part@@Base+0x30>
   34818:	ldrb	r3, [r1]
   3481c:	cmp	r3, #32
   34820:	bcc	34874 <flatcc_json_parser_string_part@@Base+0x64>
   34824:	cmp	r3, #34	; 0x22
   34828:	cmpne	r3, #92	; 0x5c
   3482c:	beq	3486c <flatcc_json_parser_string_part@@Base+0x5c>
   34830:	add	r1, r1, #1
   34834:	cmp	r2, r1
   34838:	bne	34818 <flatcc_json_parser_string_part@@Base+0x8>
   3483c:	mov	r1, r2
   34840:	ldr	r3, [r0, #20]
   34844:	cmp	r3, #0
   34848:	bne	34868 <flatcc_json_parser_string_part@@Base+0x58>
   3484c:	mov	ip, #20
   34850:	str	r1, [r0, #32]
   34854:	add	r1, r1, #1
   34858:	ldr	r3, [r0, #4]
   3485c:	sub	r1, r1, r3
   34860:	str	r1, [r0, #16]
   34864:	str	ip, [r0, #20]
   34868:	mov	r1, r2
   3486c:	mov	r0, r1
   34870:	bx	lr
   34874:	ldr	r3, [r0, #20]
   34878:	cmp	r3, #0
   3487c:	bne	34868 <flatcc_json_parser_string_part@@Base+0x58>
   34880:	mov	ip, #17
   34884:	b	34850 <flatcc_json_parser_string_part@@Base+0x40>

00034888 <flatcc_json_parser_space_ext@@Base>:
   34888:	mov	ip, r2
   3488c:	cmp	r1, r2
   34890:	bne	3496c <flatcc_json_parser_space_ext@@Base+0xe4>
   34894:	b	34994 <flatcc_json_parser_space_ext@@Base+0x10c>
   34898:	add	r1, r1, #1
   3489c:	str	r1, [r0, #4]
   348a0:	ldr	r2, [r0, #12]
   348a4:	add	r2, r2, #1
   348a8:	str	r2, [r0, #12]
   348ac:	cmp	r1, ip
   348b0:	bne	348c4 <flatcc_json_parser_space_ext@@Base+0x3c>
   348b4:	b	34994 <flatcc_json_parser_space_ext@@Base+0x10c>
   348b8:	add	r1, r1, #1
   348bc:	cmp	r1, ip
   348c0:	beq	34994 <flatcc_json_parser_space_ext@@Base+0x10c>
   348c4:	ldrb	r3, [r1]
   348c8:	cmp	r3, #32
   348cc:	movhi	r0, r1
   348d0:	bxhi	lr
   348d4:	sub	r3, r3, #9
   348d8:	cmp	r3, #23
   348dc:	bhi	34988 <flatcc_json_parser_space_ext@@Base+0x100>
   348e0:	add	r2, pc, #0
   348e4:	ldr	pc, [r2, r3, lsl #2]
   348e8:			; <UNDEFINED> instruction: 0x000348b8
   348ec:	muleq	r3, r8, r8
   348f0:	andeq	r4, r3, r8, lsl #19
   348f4:	andeq	r4, r3, r8, lsl #19
   348f8:	andeq	r4, r3, r8, asr #18
   348fc:	andeq	r4, r3, r8, lsl #19
   34900:	andeq	r4, r3, r8, lsl #19
   34904:	andeq	r4, r3, r8, lsl #19
   34908:	andeq	r4, r3, r8, lsl #19
   3490c:	andeq	r4, r3, r8, lsl #19
   34910:	andeq	r4, r3, r8, lsl #19
   34914:	andeq	r4, r3, r8, lsl #19
   34918:	andeq	r4, r3, r8, lsl #19
   3491c:	andeq	r4, r3, r8, lsl #19
   34920:	andeq	r4, r3, r8, lsl #19
   34924:	andeq	r4, r3, r8, lsl #19
   34928:	andeq	r4, r3, r8, lsl #19
   3492c:	andeq	r4, r3, r8, lsl #19
   34930:	andeq	r4, r3, r8, lsl #19
   34934:	andeq	r4, r3, r8, lsl #19
   34938:	andeq	r4, r3, r8, lsl #19
   3493c:	andeq	r4, r3, r8, lsl #19
   34940:	andeq	r4, r3, r8, lsl #19
   34944:	andeq	r4, r3, ip, ror r9
   34948:	sub	r2, ip, r1
   3494c:	mov	r3, #0
   34950:	cmp	r2, #2
   34954:	ldrbge	r2, [r1, #1]
   34958:	subge	r2, r2, #10
   3495c:	clzge	r2, r2
   34960:	lsrge	r3, r2, #5
   34964:	add	r1, r1, r3
   34968:	b	34898 <flatcc_json_parser_space_ext@@Base+0x10>
   3496c:	ldrb	r3, [r1]
   34970:	cmp	r3, #32
   34974:	bne	348ac <flatcc_json_parser_space_ext@@Base+0x24>
   34978:	add	r1, r1, #1
   3497c:	cmp	r1, ip
   34980:	bne	3496c <flatcc_json_parser_space_ext@@Base+0xe4>
   34984:	b	34994 <flatcc_json_parser_space_ext@@Base+0x10c>
   34988:	ldr	r2, [r0, #20]
   3498c:	cmp	r2, #0
   34990:	beq	3499c <flatcc_json_parser_space_ext@@Base+0x114>
   34994:	mov	r0, ip
   34998:	bx	lr
   3499c:	str	r1, [r0, #32]
   349a0:	add	r1, r1, #1
   349a4:	mov	r2, #5
   349a8:	ldr	r3, [r0, #4]
   349ac:	sub	r1, r1, r3
   349b0:	str	r1, [r0, #16]
   349b4:	str	r2, [r0, #20]
   349b8:	mov	r0, ip
   349bc:	bx	lr

000349c0 <flatcc_json_parser_string_escape@@Base>:
   349c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   349c4:	add	fp, sp, #24
   349c8:	sub	r7, r2, r1
   349cc:	cmp	r7, #2
   349d0:	blt	34c28 <flatcc_json_parser_string_escape@@Base+0x268>
   349d4:	ldrb	r6, [r1]
   349d8:	cmp	r6, #92	; 0x5c
   349dc:	bne	34c28 <flatcc_json_parser_string_escape@@Base+0x268>
   349e0:	ldrb	r6, [r1, #1]
   349e4:	sub	r6, r6, #34	; 0x22
   349e8:	cmp	r6, #86	; 0x56
   349ec:	bhi	34c28 <flatcc_json_parser_string_escape@@Base+0x268>
   349f0:	add	r5, pc, #0
   349f4:	ldr	pc, [r5, r6, lsl #2]
   349f8:	andeq	r4, r3, r4, asr fp
   349fc:	andeq	r4, r3, r8, lsr #24
   34a00:	andeq	r4, r3, r8, lsr #24
   34a04:	andeq	r4, r3, r8, lsr #24
   34a08:	andeq	r4, r3, r8, lsr #24
   34a0c:	andeq	r4, r3, r8, lsr #24
   34a10:	andeq	r4, r3, r8, lsr #24
   34a14:	andeq	r4, r3, r8, lsr #24
   34a18:	andeq	r4, r3, r8, lsr #24
   34a1c:	andeq	r4, r3, r8, lsr #24
   34a20:	andeq	r4, r3, r8, lsr #24
   34a24:	andeq	r4, r3, r8, lsr #24
   34a28:	andeq	r4, r3, r8, lsr #24
   34a2c:	andeq	r4, r3, r8, ror #22
   34a30:	andeq	r4, r3, r8, lsr #24
   34a34:	andeq	r4, r3, r8, lsr #24
   34a38:	andeq	r4, r3, r8, lsr #24
   34a3c:	andeq	r4, r3, r8, lsr #24
   34a40:	andeq	r4, r3, r8, lsr #24
   34a44:	andeq	r4, r3, r8, lsr #24
   34a48:	andeq	r4, r3, r8, lsr #24
   34a4c:	andeq	r4, r3, r8, lsr #24
   34a50:	andeq	r4, r3, r8, lsr #24
   34a54:	andeq	r4, r3, r8, lsr #24
   34a58:	andeq	r4, r3, r8, lsr #24
   34a5c:	andeq	r4, r3, r8, lsr #24
   34a60:	andeq	r4, r3, r8, lsr #24
   34a64:	andeq	r4, r3, r8, lsr #24
   34a68:	andeq	r4, r3, r8, lsr #24
   34a6c:	andeq	r4, r3, r8, lsr #24
   34a70:	andeq	r4, r3, r8, lsr #24
   34a74:	andeq	r4, r3, r8, lsr #24
   34a78:	andeq	r4, r3, r8, lsr #24
   34a7c:	andeq	r4, r3, r8, lsr #24
   34a80:	andeq	r4, r3, r8, lsr #24
   34a84:	andeq	r4, r3, r8, lsr #24
   34a88:	andeq	r4, r3, r8, lsr #24
   34a8c:	andeq	r4, r3, r8, lsr #24
   34a90:	andeq	r4, r3, r8, lsr #24
   34a94:	andeq	r4, r3, r8, lsr #24
   34a98:	andeq	r4, r3, r8, lsr #24
   34a9c:	andeq	r4, r3, r8, lsr #24
   34aa0:	andeq	r4, r3, r8, lsr #24
   34aa4:	andeq	r4, r3, r8, lsr #24
   34aa8:	andeq	r4, r3, r8, lsr #24
   34aac:	andeq	r4, r3, r8, lsr #24
   34ab0:	andeq	r4, r3, r8, lsr #24
   34ab4:	andeq	r4, r3, r8, lsr #24
   34ab8:	andeq	r4, r3, r8, lsr #24
   34abc:	andeq	r4, r3, r8, lsr #24
   34ac0:	andeq	r4, r3, r8, lsr #24
   34ac4:	andeq	r4, r3, r8, lsr #24
   34ac8:	andeq	r4, r3, r8, lsr #24
   34acc:	andeq	r4, r3, r8, lsr #24
   34ad0:	andeq	r4, r3, r8, lsr #24
   34ad4:	andeq	r4, r3, r8, lsr #24
   34ad8:	andeq	r4, r3, r8, lsr #24
   34adc:	andeq	r4, r3, r8, lsr #24
   34ae0:	andeq	r4, r3, ip, ror fp
   34ae4:	andeq	r4, r3, r8, lsr #24
   34ae8:	andeq	r4, r3, r8, lsr #24
   34aec:	andeq	r4, r3, r8, lsr #24
   34af0:	andeq	r4, r3, r8, lsr #24
   34af4:	andeq	r4, r3, r8, lsr #24
   34af8:	muleq	r3, r0, fp
   34afc:	andeq	r4, r3, r8, lsr #24
   34b00:	andeq	r4, r3, r8, lsr #24
   34b04:	andeq	r4, r3, r8, lsr #24
   34b08:	andeq	r4, r3, r4, lsr #23
   34b0c:	andeq	r4, r3, r8, lsr #24
   34b10:	andeq	r4, r3, r8, lsr #24
   34b14:	andeq	r4, r3, r8, lsr #24
   34b18:	andeq	r4, r3, r8, lsr #24
   34b1c:	andeq	r4, r3, r8, lsr #24
   34b20:	andeq	r4, r3, r8, lsr #24
   34b24:	andeq	r4, r3, r8, lsr #24
   34b28:			; <UNDEFINED> instruction: 0x00034bb8
   34b2c:	andeq	r4, r3, r8, lsr #24
   34b30:	andeq	r4, r3, r8, lsr #24
   34b34:	andeq	r4, r3, r8, lsr #24
   34b38:	andeq	r4, r3, ip, asr #23
   34b3c:	andeq	r4, r3, r8, lsr #24
   34b40:	andeq	r4, r3, r0, ror #23
   34b44:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   34b48:	andeq	r4, r3, r8, lsr #24
   34b4c:	andeq	r4, r3, r8, lsr #24
   34b50:	andeq	r4, r3, r8, lsl ip
   34b54:	movw	r0, #8705	; 0x2201
   34b58:	add	r2, r1, #2
   34b5c:	strh	r0, [r3]
   34b60:	mov	r0, r2
   34b64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34b68:	movw	r0, #12033	; 0x2f01
   34b6c:	add	r2, r1, #2
   34b70:	strh	r0, [r3]
   34b74:	mov	r0, r2
   34b78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34b7c:	movw	r0, #23553	; 0x5c01
   34b80:	add	r2, r1, #2
   34b84:	strh	r0, [r3]
   34b88:	mov	r0, r2
   34b8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34b90:	movw	r0, #2049	; 0x801
   34b94:	add	r2, r1, #2
   34b98:	strh	r0, [r3]
   34b9c:	mov	r0, r2
   34ba0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34ba4:	movw	r0, #3073	; 0xc01
   34ba8:	add	r2, r1, #2
   34bac:	strh	r0, [r3]
   34bb0:	mov	r0, r2
   34bb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34bb8:	movw	r0, #2561	; 0xa01
   34bbc:	add	r2, r1, #2
   34bc0:	strh	r0, [r3]
   34bc4:	mov	r0, r2
   34bc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34bcc:	movw	r0, #3329	; 0xd01
   34bd0:	add	r2, r1, #2
   34bd4:	strh	r0, [r3]
   34bd8:	mov	r0, r2
   34bdc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34be0:	movw	r0, #2305	; 0x901
   34be4:	add	r2, r1, #2
   34be8:	strh	r0, [r3]
   34bec:	mov	r0, r2
   34bf0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34bf4:	cmp	r7, #5
   34bf8:	ble	34c28 <flatcc_json_parser_string_escape@@Base+0x268>
   34bfc:	ldrb	r7, [r1, #2]
   34c00:	sub	r6, r7, #48	; 0x30
   34c04:	uxtb	r6, r6
   34c08:	cmp	r6, #9
   34c0c:	bhi	34c84 <flatcc_json_parser_string_escape@@Base+0x2c4>
   34c10:	lsl	ip, r7, #12
   34c14:	b	34ca4 <flatcc_json_parser_string_escape@@Base+0x2e4>
   34c18:	mov	r6, #1
   34c1c:	cmp	r7, #3
   34c20:	strb	r6, [r3]
   34c24:	bgt	34c68 <flatcc_json_parser_string_escape@@Base+0x2a8>
   34c28:	mov	r7, #0
   34c2c:	strb	r7, [r3]
   34c30:	ldr	r3, [r0, #20]
   34c34:	cmp	r3, #0
   34c38:	beq	34c44 <flatcc_json_parser_string_escape@@Base+0x284>
   34c3c:	mov	r0, r2
   34c40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34c44:	str	r1, [r0, #32]
   34c48:	add	r1, r1, #1
   34c4c:	mov	r3, #18
   34c50:	ldr	r7, [r0, #4]
   34c54:	sub	r1, r1, r7
   34c58:	str	r1, [r0, #16]
   34c5c:	str	r3, [r0, #20]
   34c60:	mov	r0, r2
   34c64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34c68:	ldrb	r7, [r1, #2]
   34c6c:	sub	r6, r7, #48	; 0x30
   34c70:	uxtb	r6, r6
   34c74:	cmp	r6, #9
   34c78:	bhi	34cc0 <flatcc_json_parser_string_escape@@Base+0x300>
   34c7c:	lsl	r7, r7, #4
   34c80:	b	34cdc <flatcc_json_parser_string_escape@@Base+0x31c>
   34c84:	orr	r6, r7, #32
   34c88:	sub	r6, r6, #97	; 0x61
   34c8c:	uxtb	r6, r6
   34c90:	cmp	r6, #5
   34c94:	bhi	34c28 <flatcc_json_parser_string_escape@@Base+0x268>
   34c98:	movw	r6, #36864	; 0x9000
   34c9c:	movt	r6, #65535	; 0xffff
   34ca0:	add	ip, r6, r7, lsl #12
   34ca4:	ldrb	lr, [r1, #3]
   34ca8:	sub	r4, lr, #48	; 0x30
   34cac:	uxtb	r4, r4
   34cb0:	cmp	r4, #10
   34cb4:	bcs	34d1c <flatcc_json_parser_string_escape@@Base+0x35c>
   34cb8:	mov	r8, #53248	; 0xd000
   34cbc:	b	34d34 <flatcc_json_parser_string_escape@@Base+0x374>
   34cc0:	orr	r6, r7, #32
   34cc4:	sub	r6, r6, #97	; 0x61
   34cc8:	uxtb	r6, r6
   34ccc:	cmp	r6, #5
   34cd0:	bhi	34c28 <flatcc_json_parser_string_escape@@Base+0x268>
   34cd4:	mvn	r6, #111	; 0x6f
   34cd8:	add	r7, r6, r7, lsl #4
   34cdc:	ldrb	r5, [r1, #3]
   34ce0:	sub	r6, r5, #48	; 0x30
   34ce4:	uxtb	r4, r6
   34ce8:	cmp	r4, #10
   34cec:	bcc	34d08 <flatcc_json_parser_string_escape@@Base+0x348>
   34cf0:	orr	r6, r5, #32
   34cf4:	sub	r5, r6, #97	; 0x61
   34cf8:	uxtb	r5, r5
   34cfc:	cmp	r5, #5
   34d00:	bhi	34c28 <flatcc_json_parser_string_escape@@Base+0x268>
   34d04:	sub	r6, r6, #87	; 0x57
   34d08:	orr	r0, r6, r7
   34d0c:	add	r2, r1, #4
   34d10:	strb	r0, [r3, #1]
   34d14:	mov	r0, r2
   34d18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34d1c:	orr	lr, lr, #32
   34d20:	mov	r8, #43264	; 0xa900
   34d24:	sub	r4, lr, #97	; 0x61
   34d28:	uxtb	r4, r4
   34d2c:	cmp	r4, #6
   34d30:	bcs	34c28 <flatcc_json_parser_string_escape@@Base+0x268>
   34d34:	ldrb	r5, [r1, #4]
   34d38:	sub	r4, r5, #48	; 0x30
   34d3c:	uxtb	r4, r4
   34d40:	cmp	r4, #10
   34d44:	bcs	34d50 <flatcc_json_parser_string_escape@@Base+0x390>
   34d48:	mov	r9, #64768	; 0xfd00
   34d4c:	b	34d68 <flatcc_json_parser_string_escape@@Base+0x3a8>
   34d50:	orr	r5, r5, #32
   34d54:	movw	r9, #64144	; 0xfa90
   34d58:	sub	r4, r5, #97	; 0x61
   34d5c:	uxtb	r4, r4
   34d60:	cmp	r4, #6
   34d64:	bcs	34c28 <flatcc_json_parser_string_escape@@Base+0x268>
   34d68:	ldrb	r7, [r1, #5]
   34d6c:	sub	r4, r7, #48	; 0x30
   34d70:	uxtb	r4, r4
   34d74:	cmp	r4, #10
   34d78:	bcs	34d88 <flatcc_json_parser_string_escape@@Base+0x3c8>
   34d7c:	mvn	r0, #86	; 0x56
   34d80:	add	r4, r0, #39	; 0x27
   34d84:	b	34da0 <flatcc_json_parser_string_escape@@Base+0x3e0>
   34d88:	orr	r7, r7, #32
   34d8c:	movw	r4, #65449	; 0xffa9
   34d90:	sub	r6, r7, #97	; 0x61
   34d94:	uxtb	r6, r6
   34d98:	cmp	r6, #6
   34d9c:	bcs	34c28 <flatcc_json_parser_string_escape@@Base+0x268>
   34da0:	add	r0, r8, lr, lsl #8
   34da4:	add	r2, r9, r5, lsl #4
   34da8:	orr	r0, r0, ip
   34dac:	orr	r0, r0, r2
   34db0:	add	r2, r4, r7
   34db4:	orr	r0, r0, r2
   34db8:	uxth	r7, r0
   34dbc:	cmp	r7, #127	; 0x7f
   34dc0:	bhi	34ddc <flatcc_json_parser_string_escape@@Base+0x41c>
   34dc4:	mov	r2, #1
   34dc8:	strb	r2, [r3]
   34dcc:	strb	r0, [r3, r2]
   34dd0:	add	r2, r1, #6
   34dd4:	mov	r0, r2
   34dd8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34ddc:	and	r2, r0, #63488	; 0xf800
   34de0:	mov	r6, #0
   34de4:	cmp	r6, r2, lsr #11
   34de8:	bne	34e04 <flatcc_json_parser_string_escape@@Base+0x444>
   34dec:	mov	r7, #192	; 0xc0
   34df0:	mov	r2, #2
   34df4:	orr	r7, r7, r0, lsr #6
   34df8:	strb	r2, [r3]
   34dfc:	strb	r7, [r3, #1]
   34e00:	b	34e28 <flatcc_json_parser_string_escape@@Base+0x468>
   34e04:	mov	r6, #224	; 0xe0
   34e08:	mov	r2, #3
   34e0c:	orr	r6, r6, r7, lsr #12
   34e10:	strb	r2, [r3]
   34e14:	lsr	r7, r7, #6
   34e18:	strb	r6, [r3, #1]
   34e1c:	mov	r6, #2
   34e20:	bfi	r7, r6, #6, #26
   34e24:	strb	r7, [r3, #2]
   34e28:	mvn	r7, #-67108863	; 0xfc000001
   34e2c:	bfi	r0, r7, #6, #26
   34e30:	strb	r0, [r3, r2]
   34e34:	add	r2, r1, #6
   34e38:	mov	r0, r2
   34e3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00034e40 <flatcc_json_parser_skip_constant@@Base>:
   34e40:	push	{r4, r5, r6, sl, fp, lr}
   34e44:	add	fp, sp, #16
   34e48:	cmp	r1, r2
   34e4c:	moveq	r0, r1
   34e50:	popeq	{r4, r5, r6, sl, fp, pc}
   34e54:	mov	r4, r2
   34e58:	mov	r5, r0
   34e5c:	ldrsb	r0, [r1]
   34e60:	mov	r6, r1
   34e64:	cmp	r0, #0
   34e68:	bge	34e8c <flatcc_json_parser_skip_constant@@Base+0x4c>
   34e6c:	b	34ec0 <flatcc_json_parser_skip_constant@@Base+0x80>
   34e70:	cmp	r1, r4
   34e74:	moveq	r0, r4
   34e78:	popeq	{r4, r5, r6, sl, fp, pc}
   34e7c:	ldrsb	r0, [r1]
   34e80:	mov	r6, r1
   34e84:	cmp	r0, #0
   34e88:	blt	34ec0 <flatcc_json_parser_skip_constant@@Base+0x80>
   34e8c:	uxtb	r0, r0
   34e90:	cmp	r0, #95	; 0x5f
   34e94:	cmpne	r0, #46	; 0x2e
   34e98:	beq	34ec0 <flatcc_json_parser_skip_constant@@Base+0x80>
   34e9c:	sub	r1, r0, #48	; 0x30
   34ea0:	uxtb	r1, r1
   34ea4:	cmp	r1, #9
   34ea8:	bls	34ec0 <flatcc_json_parser_skip_constant@@Base+0x80>
   34eac:	orr	r1, r0, #32
   34eb0:	sub	r1, r1, #97	; 0x61
   34eb4:	uxtb	r1, r1
   34eb8:	cmp	r1, #25
   34ebc:	bhi	34ec8 <flatcc_json_parser_skip_constant@@Base+0x88>
   34ec0:	add	r1, r6, #1
   34ec4:	b	34e70 <flatcc_json_parser_skip_constant@@Base+0x30>
   34ec8:	sub	r1, r4, r6
   34ecc:	cmp	r1, #2
   34ed0:	blt	34ef0 <flatcc_json_parser_skip_constant@@Base+0xb0>
   34ed4:	cmp	r0, #32
   34ed8:	bhi	34f0c <flatcc_json_parser_skip_constant@@Base+0xcc>
   34edc:	bne	34ef0 <flatcc_json_parser_skip_constant@@Base+0xb0>
   34ee0:	mov	r1, r6
   34ee4:	ldrb	r0, [r1, #1]!
   34ee8:	cmp	r0, #32
   34eec:	bhi	34e70 <flatcc_json_parser_skip_constant@@Base+0x30>
   34ef0:	mov	r0, r5
   34ef4:	mov	r1, r6
   34ef8:	mov	r2, r4
   34efc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   34f00:	mov	r1, r0
   34f04:	cmp	r0, r6
   34f08:	bne	34e70 <flatcc_json_parser_skip_constant@@Base+0x30>
   34f0c:	mov	r0, r6
   34f10:	pop	{r4, r5, r6, sl, fp, pc}

00034f14 <flatcc_json_parser_match_constant@@Base>:
   34f14:	push	{r4, r5, fp, lr}
   34f18:	add	fp, sp, #8
   34f1c:	ldr	r5, [fp, #8]
   34f20:	sub	r4, r2, r1
   34f24:	cmp	r4, r3
   34f28:	ble	34fa4 <flatcc_json_parser_match_constant@@Base+0x90>
   34f2c:	add	ip, r1, r3
   34f30:	ldrb	r4, [ip]
   34f34:	cmp	r4, #92	; 0x5c
   34f38:	beq	34fb4 <flatcc_json_parser_match_constant@@Base+0xa0>
   34f3c:	cmp	r4, #34	; 0x22
   34f40:	beq	34f74 <flatcc_json_parser_match_constant@@Base+0x60>
   34f44:	cmp	r4, #32
   34f48:	bne	34fa4 <flatcc_json_parser_match_constant@@Base+0x90>
   34f4c:	add	r1, r1, r3
   34f50:	add	r1, r1, #1
   34f54:	cmp	r2, r1
   34f58:	beq	34fd0 <flatcc_json_parser_match_constant@@Base+0xbc>
   34f5c:	ldrb	r3, [r1], #1
   34f60:	cmp	r3, #32
   34f64:	beq	34f54 <flatcc_json_parser_match_constant@@Base+0x40>
   34f68:	cmp	r3, #34	; 0x22
   34f6c:	bne	35030 <flatcc_json_parser_match_constant@@Base+0x11c>
   34f70:	sub	ip, r1, #1
   34f74:	mvn	r2, ip
   34f78:	add	r1, ip, #1
   34f7c:	cmp	r2, #2
   34f80:	blt	35014 <flatcc_json_parser_match_constant@@Base+0x100>
   34f84:	ldrb	r2, [r1]
   34f88:	cmp	r2, #32
   34f8c:	bls	35004 <flatcc_json_parser_match_constant@@Base+0xf0>
   34f90:	mov	ip, r1
   34f94:	mov	r0, #0
   34f98:	str	r0, [r5]
   34f9c:	mov	r0, ip
   34fa0:	pop	{r4, r5, fp, pc}
   34fa4:	mov	r0, #0
   34fa8:	str	r0, [r5]
   34fac:	mov	r0, r1
   34fb0:	pop	{r4, r5, fp, pc}
   34fb4:	mov	r1, #0
   34fb8:	str	r1, [r5]
   34fbc:	ldr	r1, [r0, #20]
   34fc0:	cmp	r1, #0
   34fc4:	beq	34fe0 <flatcc_json_parser_match_constant@@Base+0xcc>
   34fc8:	mov	r0, r2
   34fcc:	pop	{r4, r5, fp, pc}
   34fd0:	mov	r0, #0
   34fd4:	str	r0, [r5]
   34fd8:	mov	r0, r2
   34fdc:	pop	{r4, r5, fp, pc}
   34fe0:	str	ip, [r0, #32]
   34fe4:	add	r5, ip, #1
   34fe8:	mov	r1, #18
   34fec:	ldr	r3, [r0, #4]
   34ff0:	sub	r3, r5, r3
   34ff4:	str	r3, [r0, #16]
   34ff8:	str	r1, [r0, #20]
   34ffc:	mov	r0, r2
   35000:	pop	{r4, r5, fp, pc}
   35004:	bne	35014 <flatcc_json_parser_match_constant@@Base+0x100>
   35008:	ldrb	r2, [ip, #2]!
   3500c:	cmp	r2, #32
   35010:	bhi	35020 <flatcc_json_parser_match_constant@@Base+0x10c>
   35014:	mov	r2, #0
   35018:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   3501c:	mov	ip, r0
   35020:	mov	r0, #0
   35024:	str	r0, [r5]
   35028:	mov	r0, ip
   3502c:	pop	{r4, r5, fp, pc}
   35030:	mov	r0, #1
   35034:	sub	ip, r1, #1
   35038:	str	r0, [r5]
   3503c:	mov	r0, ip
   35040:	pop	{r4, r5, fp, pc}

00035044 <flatcc_json_parser_unmatched_symbol@@Base>:
   35044:	push	{r4, r5, fp, lr}
   35048:	add	fp, sp, #8
   3504c:	mov	r5, r0
   35050:	ldrb	r0, [r0, #8]
   35054:	mov	r4, r2
   35058:	tst	r0, #1
   3505c:	bne	35090 <flatcc_json_parser_unmatched_symbol@@Base+0x4c>
   35060:	ldr	r0, [r5, #20]
   35064:	cmp	r0, #0
   35068:	bne	351c4 <flatcc_json_parser_unmatched_symbol@@Base+0x180>
   3506c:	str	r1, [r5, #32]
   35070:	add	r1, r1, #1
   35074:	mov	r0, #13
   35078:	ldr	r2, [r5, #4]
   3507c:	sub	r1, r1, r2
   35080:	str	r1, [r5, #16]
   35084:	str	r0, [r5, #20]
   35088:	mov	r0, r4
   3508c:	pop	{r4, r5, fp, pc}
   35090:	cmp	r1, r4
   35094:	beq	350dc <flatcc_json_parser_unmatched_symbol@@Base+0x98>
   35098:	ldrb	r0, [r1]
   3509c:	cmp	r0, #92	; 0x5c
   350a0:	beq	350bc <flatcc_json_parser_unmatched_symbol@@Base+0x78>
   350a4:	cmp	r0, #34	; 0x22
   350a8:	beq	35144 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
   350ac:	add	r1, r1, #1
   350b0:	cmp	r1, r4
   350b4:	bne	35098 <flatcc_json_parser_unmatched_symbol@@Base+0x54>
   350b8:	b	350d8 <flatcc_json_parser_unmatched_symbol@@Base+0x94>
   350bc:	sub	r0, r4, r1
   350c0:	cmp	r0, #2
   350c4:	blt	350dc <flatcc_json_parser_unmatched_symbol@@Base+0x98>
   350c8:	add	r1, r1, #1
   350cc:	add	r1, r1, #1
   350d0:	cmp	r1, r4
   350d4:	bne	35098 <flatcc_json_parser_unmatched_symbol@@Base+0x54>
   350d8:	mov	r1, r4
   350dc:	ldr	r0, [r5, #20]
   350e0:	mov	r2, r4
   350e4:	cmp	r0, #0
   350e8:	beq	35114 <flatcc_json_parser_unmatched_symbol@@Base+0xd0>
   350ec:	sub	r0, r4, r2
   350f0:	cmp	r0, #2
   350f4:	blt	3516c <flatcc_json_parser_unmatched_symbol@@Base+0x128>
   350f8:	ldrb	r0, [r2]
   350fc:	cmp	r0, #32
   35100:	bls	35158 <flatcc_json_parser_unmatched_symbol@@Base+0x114>
   35104:	mov	r3, r2
   35108:	cmp	r3, r4
   3510c:	bne	35188 <flatcc_json_parser_unmatched_symbol@@Base+0x144>
   35110:	b	351b8 <flatcc_json_parser_unmatched_symbol@@Base+0x174>
   35114:	str	r1, [r5, #32]
   35118:	add	r1, r1, #1
   3511c:	mov	r0, #20
   35120:	ldr	r2, [r5, #4]
   35124:	sub	r1, r1, r2
   35128:	mov	r2, r4
   3512c:	str	r1, [r5, #16]
   35130:	str	r0, [r5, #20]
   35134:	sub	r0, r4, r2
   35138:	cmp	r0, #2
   3513c:	bge	350f8 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   35140:	b	3516c <flatcc_json_parser_unmatched_symbol@@Base+0x128>
   35144:	add	r2, r1, #1
   35148:	sub	r0, r4, r2
   3514c:	cmp	r0, #2
   35150:	bge	350f8 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   35154:	b	3516c <flatcc_json_parser_unmatched_symbol@@Base+0x128>
   35158:	bne	3516c <flatcc_json_parser_unmatched_symbol@@Base+0x128>
   3515c:	mov	r3, r2
   35160:	ldrb	r0, [r3, #1]!
   35164:	cmp	r0, #32
   35168:	bhi	35180 <flatcc_json_parser_unmatched_symbol@@Base+0x13c>
   3516c:	mov	r1, r2
   35170:	mov	r0, r5
   35174:	mov	r2, r4
   35178:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   3517c:	mov	r3, r0
   35180:	cmp	r3, r4
   35184:	beq	351b8 <flatcc_json_parser_unmatched_symbol@@Base+0x174>
   35188:	ldrb	r0, [r3]
   3518c:	cmp	r0, #58	; 0x3a
   35190:	bne	351b8 <flatcc_json_parser_unmatched_symbol@@Base+0x174>
   35194:	add	r1, r3, #1
   35198:	sub	r0, r4, r1
   3519c:	cmp	r0, #2
   351a0:	blt	35200 <flatcc_json_parser_unmatched_symbol@@Base+0x1bc>
   351a4:	ldrb	r0, [r1]
   351a8:	cmp	r0, #32
   351ac:	bls	351f0 <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   351b0:	mov	r3, r1
   351b4:	b	35210 <flatcc_json_parser_unmatched_symbol@@Base+0x1cc>
   351b8:	ldr	r0, [r5, #20]
   351bc:	cmp	r0, #0
   351c0:	beq	351cc <flatcc_json_parser_unmatched_symbol@@Base+0x188>
   351c4:	mov	r0, r4
   351c8:	pop	{r4, r5, fp, pc}
   351cc:	str	r3, [r5, #32]
   351d0:	add	r2, r3, #1
   351d4:	mov	r0, #4
   351d8:	ldr	r1, [r5, #4]
   351dc:	sub	r1, r2, r1
   351e0:	str	r1, [r5, #16]
   351e4:	str	r0, [r5, #20]
   351e8:	mov	r0, r4
   351ec:	pop	{r4, r5, fp, pc}
   351f0:	bne	35200 <flatcc_json_parser_unmatched_symbol@@Base+0x1bc>
   351f4:	ldrb	r0, [r3, #2]!
   351f8:	cmp	r0, #32
   351fc:	bhi	35210 <flatcc_json_parser_unmatched_symbol@@Base+0x1cc>
   35200:	mov	r0, r5
   35204:	mov	r2, r4
   35208:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   3520c:	mov	r3, r0
   35210:	mov	r0, r5
   35214:	mov	r1, r3
   35218:	mov	r2, r4
   3521c:	pop	{r4, r5, fp, lr}
   35220:	b	35224 <flatcc_json_parser_generic_json@@Base>

00035224 <flatcc_json_parser_generic_json@@Base>:
   35224:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35228:	add	fp, sp, #28
   3522c:	sub	sp, sp, #540	; 0x21c
   35230:	mov	r7, r1
   35234:	cmp	r1, r2
   35238:	beq	361b4 <flatcc_json_parser_generic_json@@Base+0xf90>
   3523c:	mov	r9, r0
   35240:	add	r0, r2, #1
   35244:	add	r1, sp, #24
   35248:	mov	r4, r2
   3524c:	mov	r6, #0
   35250:	str	r0, [sp]
   35254:	add	r0, r9, #32
   35258:	sub	sl, r1, #1
   3525c:	add	r8, r9, #16
   35260:	add	r5, r9, #4
   35264:	str	r0, [sp, #12]
   35268:	add	r0, r9, #20
   3526c:	str	r0, [sp, #16]
   35270:	mov	r0, r1
   35274:	stmib	sp, {r5, r8}
   35278:	cmp	r6, #0
   3527c:	beq	353d4 <flatcc_json_parser_generic_json@@Base+0x1b0>
   35280:	ldrb	r0, [r0, #-1]
   35284:	cmp	r0, #125	; 0x7d
   35288:	bne	353d4 <flatcc_json_parser_generic_json@@Base+0x1b0>
   3528c:	ldrb	r0, [r7]
   35290:	cmp	r0, #34	; 0x22
   35294:	bne	352ec <flatcc_json_parser_generic_json@@Base+0xc8>
   35298:	add	r0, r7, #1
   3529c:	mov	r2, r4
   352a0:	cmp	r0, r4
   352a4:	beq	35328 <flatcc_json_parser_generic_json@@Base+0x104>
   352a8:	ldrb	r1, [r0]
   352ac:	cmp	r1, #92	; 0x5c
   352b0:	beq	352cc <flatcc_json_parser_generic_json@@Base+0xa8>
   352b4:	cmp	r1, #34	; 0x22
   352b8:	beq	35878 <flatcc_json_parser_generic_json@@Base+0x654>
   352bc:	add	r0, r0, #1
   352c0:	cmp	r0, r4
   352c4:	bne	352a8 <flatcc_json_parser_generic_json@@Base+0x84>
   352c8:	b	35324 <flatcc_json_parser_generic_json@@Base+0x100>
   352cc:	sub	r1, r4, r0
   352d0:	cmp	r1, #2
   352d4:	blt	35aa8 <flatcc_json_parser_generic_json@@Base+0x884>
   352d8:	add	r0, r0, #1
   352dc:	add	r0, r0, #1
   352e0:	cmp	r0, r4
   352e4:	bne	352a8 <flatcc_json_parser_generic_json@@Base+0x84>
   352e8:	b	35324 <flatcc_json_parser_generic_json@@Base+0x100>
   352ec:	ldr	r0, [sp, #16]
   352f0:	mov	r1, r4
   352f4:	ldr	r0, [r0]
   352f8:	cmp	r0, #0
   352fc:	bne	3533c <flatcc_json_parser_generic_json@@Base+0x118>
   35300:	ldr	r0, [sp, #16]
   35304:	mov	r1, #5
   35308:	str	r1, [r0]
   3530c:	add	r1, r7, #1
   35310:	ldr	r0, [r5]
   35314:	sub	r0, r1, r0
   35318:	str	r0, [r8]
   3531c:	ldr	r0, [sp, #12]
   35320:	str	r7, [r0]
   35324:	mov	r2, r4
   35328:	ldr	r0, [sp, #16]
   3532c:	mov	r1, r4
   35330:	ldr	r0, [r0]
   35334:	cmp	r0, #0
   35338:	beq	3575c <flatcc_json_parser_generic_json@@Base+0x538>
   3533c:	sub	r0, r4, r1
   35340:	cmp	r0, #2
   35344:	blt	35888 <flatcc_json_parser_generic_json@@Base+0x664>
   35348:	ldrb	r0, [r1]
   3534c:	cmp	r0, #32
   35350:	bls	3539c <flatcc_json_parser_generic_json@@Base+0x178>
   35354:	mov	r7, r1
   35358:	cmp	r7, r4
   3535c:	beq	36270 <flatcc_json_parser_generic_json@@Base+0x104c>
   35360:	ldrb	r0, [r7]
   35364:	cmp	r0, #58	; 0x3a
   35368:	bne	3628c <flatcc_json_parser_generic_json@@Base+0x1068>
   3536c:	add	r1, r7, #1
   35370:	sub	r0, r4, r1
   35374:	cmp	r0, #2
   35378:	blt	353c4 <flatcc_json_parser_generic_json@@Base+0x1a0>
   3537c:	ldrb	r8, [r1]
   35380:	cmp	r8, #32
   35384:	bls	353b4 <flatcc_json_parser_generic_json@@Base+0x190>
   35388:	mov	r7, r1
   3538c:	sub	r0, r8, #34	; 0x22
   35390:	cmp	r0, #89	; 0x59
   35394:	bls	353e4 <flatcc_json_parser_generic_json@@Base+0x1c0>
   35398:	b	361c4 <flatcc_json_parser_generic_json@@Base+0xfa0>
   3539c:	bne	35888 <flatcc_json_parser_generic_json@@Base+0x664>
   353a0:	mov	r7, r1
   353a4:	ldrb	r0, [r7, #1]!
   353a8:	cmp	r0, #32
   353ac:	bls	35888 <flatcc_json_parser_generic_json@@Base+0x664>
   353b0:	b	35898 <flatcc_json_parser_generic_json@@Base+0x674>
   353b4:	bne	353c4 <flatcc_json_parser_generic_json@@Base+0x1a0>
   353b8:	ldrb	r8, [r7, #2]!
   353bc:	cmp	r8, #32
   353c0:	bhi	353d8 <flatcc_json_parser_generic_json@@Base+0x1b4>
   353c4:	mov	r0, r9
   353c8:	mov	r2, r4
   353cc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   353d0:	mov	r7, r0
   353d4:	ldrb	r8, [r7]
   353d8:	sub	r0, r8, #34	; 0x22
   353dc:	cmp	r0, #89	; 0x59
   353e0:	bhi	361c4 <flatcc_json_parser_generic_json@@Base+0xfa0>
   353e4:	add	r1, pc, #0
   353e8:	ldr	pc, [r1, r0, lsl #2]
   353ec:	muleq	r3, r4, r7
   353f0:	andeq	r6, r3, r4, asr #3
   353f4:	andeq	r6, r3, r4, asr #3
   353f8:	andeq	r6, r3, r4, asr #3
   353fc:	andeq	r6, r3, r4, asr #3
   35400:	andeq	r6, r3, r4, asr #3
   35404:	andeq	r6, r3, r4, asr #3
   35408:	andeq	r6, r3, r4, asr #3
   3540c:	andeq	r6, r3, r4, asr #3
   35410:	andeq	r6, r3, r4, asr #3
   35414:	andeq	r6, r3, r4, asr #3
   35418:	andeq	r5, r3, r4, asr r5
   3541c:	andeq	r6, r3, r4, asr #3
   35420:	andeq	r6, r3, r4, asr #3
   35424:	andeq	r5, r3, r4, asr r5
   35428:	andeq	r5, r3, r4, asr r5
   3542c:	andeq	r5, r3, r4, asr r5
   35430:	andeq	r5, r3, r4, asr r5
   35434:	andeq	r5, r3, r4, asr r5
   35438:	andeq	r5, r3, r4, asr r5
   3543c:	andeq	r5, r3, r4, asr r5
   35440:	andeq	r5, r3, r4, asr r5
   35444:	andeq	r5, r3, r4, asr r5
   35448:	andeq	r5, r3, r4, asr r5
   3544c:	andeq	r6, r3, r4, asr #3
   35450:	andeq	r6, r3, r4, asr #3
   35454:	andeq	r6, r3, r4, asr #3
   35458:	andeq	r6, r3, r4, asr #3
   3545c:	andeq	r6, r3, r4, asr #3
   35460:	andeq	r6, r3, r4, asr #3
   35464:	andeq	r6, r3, r4, asr #3
   35468:	andeq	r6, r3, r4, asr #3
   3546c:	andeq	r6, r3, r4, asr #3
   35470:	andeq	r6, r3, r4, asr #3
   35474:	andeq	r6, r3, r4, asr #3
   35478:	andeq	r6, r3, r4, asr #3
   3547c:	andeq	r6, r3, r4, asr #3
   35480:	andeq	r6, r3, r4, asr #3
   35484:	andeq	r6, r3, r4, asr #3
   35488:	andeq	r6, r3, r4, asr #3
   3548c:	andeq	r6, r3, r4, asr #3
   35490:	andeq	r6, r3, r4, asr #3
   35494:	andeq	r6, r3, r4, asr #3
   35498:	andeq	r6, r3, r4, asr #3
   3549c:	andeq	r6, r3, r4, asr #3
   354a0:	andeq	r6, r3, r4, asr #3
   354a4:	andeq	r6, r3, r4, asr #3
   354a8:	andeq	r6, r3, r4, asr #3
   354ac:	andeq	r6, r3, r4, asr #3
   354b0:	andeq	r6, r3, r4, asr #3
   354b4:	andeq	r6, r3, r4, asr #3
   354b8:	andeq	r6, r3, r4, asr #3
   354bc:	andeq	r6, r3, r4, asr #3
   354c0:	andeq	r6, r3, r4, asr #3
   354c4:	andeq	r6, r3, r4, asr #3
   354c8:	andeq	r6, r3, r4, asr #3
   354cc:	andeq	r6, r3, r4, asr #3
   354d0:			; <UNDEFINED> instruction: 0x000357b8
   354d4:	andeq	r6, r3, r4, asr #3
   354d8:	andeq	r6, r3, r4, asr #3
   354dc:	andeq	r6, r3, r4, asr #3
   354e0:	andeq	r6, r3, r4, asr #3
   354e4:	andeq	r6, r3, r4, asr #3
   354e8:	andeq	r6, r3, r4, asr #3
   354ec:	andeq	r6, r3, r4, asr #3
   354f0:	andeq	r6, r3, r4, asr #3
   354f4:	andeq	r6, r3, r4, asr #3
   354f8:	andeq	r6, r3, r4, asr #3
   354fc:	andeq	r5, r3, r4, lsr r6
   35500:	andeq	r6, r3, r4, asr #3
   35504:	andeq	r6, r3, r4, asr #3
   35508:	andeq	r6, r3, r4, asr #3
   3550c:	andeq	r6, r3, r4, asr #3
   35510:	andeq	r6, r3, r4, asr #3
   35514:	andeq	r6, r3, r4, asr #3
   35518:	andeq	r6, r3, r4, asr #3
   3551c:	strdeq	r5, [r3], -ip
   35520:	andeq	r6, r3, r4, asr #3
   35524:	andeq	r6, r3, r4, asr #3
   35528:	andeq	r6, r3, r4, asr #3
   3552c:	andeq	r6, r3, r4, asr #3
   35530:	andeq	r6, r3, r4, asr #3
   35534:	andeq	r5, r3, r4, lsr r6
   35538:	andeq	r6, r3, r4, asr #3
   3553c:	andeq	r6, r3, r4, asr #3
   35540:	andeq	r6, r3, r4, asr #3
   35544:	andeq	r6, r3, r4, asr #3
   35548:	andeq	r6, r3, r4, asr #3
   3554c:	andeq	r6, r3, r4, asr #3
   35550:	andeq	r5, r3, r4, lsr r8
   35554:	cmp	r7, r4
   35558:	beq	35754 <flatcc_json_parser_generic_json@@Base+0x530>
   3555c:	cmp	r8, #45	; 0x2d
   35560:	bne	35574 <flatcc_json_parser_generic_json@@Base+0x350>
   35564:	add	r7, r7, #1
   35568:	cmp	r7, r4
   3556c:	beq	35744 <flatcc_json_parser_generic_json@@Base+0x520>
   35570:	ldrb	r8, [r7]
   35574:	cmp	r8, #48	; 0x30
   35578:	bne	355e8 <flatcc_json_parser_generic_json@@Base+0x3c4>
   3557c:	ldmib	sp, {r5, r8}
   35580:	add	r1, r7, #1
   35584:	cmp	r1, r4
   35588:	mov	r2, r4
   3558c:	beq	35e54 <flatcc_json_parser_generic_json@@Base+0xc30>
   35590:	ldrb	r0, [r1]
   35594:	cmp	r0, #46	; 0x2e
   35598:	bne	358d8 <flatcc_json_parser_generic_json@@Base+0x6b4>
   3559c:	mov	r0, r1
   355a0:	ldrb	r2, [r0, #1]!
   355a4:	sub	r2, r2, #48	; 0x30
   355a8:	uxtb	r2, r2
   355ac:	cmp	r2, #10
   355b0:	bcc	358a4 <flatcc_json_parser_generic_json@@Base+0x680>
   355b4:	ldr	r2, [sp, #16]
   355b8:	ldr	r1, [r2]
   355bc:	cmp	r1, #0
   355c0:	bne	35e64 <flatcc_json_parser_generic_json@@Base+0xc40>
   355c4:	mov	r1, #6
   355c8:	str	r1, [r2]
   355cc:	add	r2, r0, #1
   355d0:	ldr	r1, [r5]
   355d4:	sub	r1, r2, r1
   355d8:	str	r1, [r8]
   355dc:	ldr	r1, [sp, #12]
   355e0:	str	r0, [r1]
   355e4:	b	35e64 <flatcc_json_parser_generic_json@@Base+0xc40>
   355e8:	sub	r0, r8, #49	; 0x31
   355ec:	uxtb	r0, r0
   355f0:	cmp	r0, #8
   355f4:	bls	3570c <flatcc_json_parser_generic_json@@Base+0x4e8>
   355f8:	ldr	r1, [sp, #16]
   355fc:	ldr	r0, [r1]
   35600:	ldmib	sp, {r5, r8}
   35604:	cmp	r0, #0
   35608:	bne	35e64 <flatcc_json_parser_generic_json@@Base+0xc40>
   3560c:	mov	r0, #6
   35610:	str	r0, [r1]
   35614:	add	r1, r7, #1
   35618:	ldr	r0, [r5]
   3561c:	sub	r0, r1, r0
   35620:	mov	r1, r4
   35624:	str	r0, [r8]
   35628:	ldr	r0, [sp, #12]
   3562c:	str	r7, [r0]
   35630:	b	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   35634:	sub	r0, r4, r7
   35638:	cmp	r0, #4
   3563c:	blt	35678 <flatcc_json_parser_generic_json@@Base+0x454>
   35640:	ldr	r1, [r7]
   35644:	movw	r2, #29300	; 0x7274
   35648:	movt	r2, #25973	; 0x6575
   3564c:	cmp	r1, r2
   35650:	beq	35a78 <flatcc_json_parser_generic_json@@Base+0x854>
   35654:	cmp	r0, #5
   35658:	blt	35678 <flatcc_json_parser_generic_json@@Base+0x454>
   3565c:	movw	r1, #36441	; 0x8e59
   35660:	mov	r0, r7
   35664:	mov	r2, #5
   35668:	movt	r1, #4
   3566c:	bl	14e6c <memcmp@plt>
   35670:	cmp	r0, #0
   35674:	beq	35cd4 <flatcc_json_parser_generic_json@@Base+0xab0>
   35678:	cmp	r7, r4
   3567c:	mov	r1, r4
   35680:	beq	35cd8 <flatcc_json_parser_generic_json@@Base+0xab4>
   35684:	sub	r0, r8, #48	; 0x30
   35688:	mov	r2, #1
   3568c:	uxtb	r1, r0
   35690:	mov	r0, #0
   35694:	cmp	r1, #9
   35698:	bhi	35a60 <flatcc_json_parser_generic_json@@Base+0x83c>
   3569c:	add	lr, r7, #1
   356a0:	mov	r3, #0
   356a4:	mov	r2, #0
   356a8:	add	r5, r2, r2, lsl #2
   356ac:	uxtb	r0, r8
   356b0:	mov	r1, #10
   356b4:	lsl	r5, r5, #1
   356b8:	umlal	r0, r5, r3, r1
   356bc:	subs	r0, r0, #48	; 0x30
   356c0:	sbc	ip, r5, #0
   356c4:	subs	r3, r0, r3
   356c8:	sbcs	r2, ip, r2
   356cc:	bcc	35b68 <flatcc_json_parser_generic_json@@Base+0x944>
   356d0:	cmp	r4, lr
   356d4:	beq	35bb8 <flatcc_json_parser_generic_json@@Base+0x994>
   356d8:	ldrb	r8, [lr], #1
   356dc:	mov	r3, r0
   356e0:	sub	r2, r8, #48	; 0x30
   356e4:	uxtb	r2, r2
   356e8:	cmp	r2, #10
   356ec:	mov	r2, ip
   356f0:	bcc	356a8 <flatcc_json_parser_generic_json@@Base+0x484>
   356f4:	sub	lr, lr, #1
   356f8:	mov	r2, #1
   356fc:	cmp	lr, r7
   35700:	mov	r1, r7
   35704:	bne	35bcc <flatcc_json_parser_generic_json@@Base+0x9a8>
   35708:	b	35cd8 <flatcc_json_parser_generic_json@@Base+0xab4>
   3570c:	ldmib	sp, {r5, r8}
   35710:	add	r0, r7, #1
   35714:	cmp	r4, r0
   35718:	beq	35a38 <flatcc_json_parser_generic_json@@Base+0x814>
   3571c:	ldrb	r1, [r0], #1
   35720:	sub	r1, r1, #48	; 0x30
   35724:	uxtb	r1, r1
   35728:	cmp	r1, #10
   3572c:	bcc	35714 <flatcc_json_parser_generic_json@@Base+0x4f0>
   35730:	sub	r1, r0, #1
   35734:	cmp	r1, r4
   35738:	mov	r2, r4
   3573c:	bne	35590 <flatcc_json_parser_generic_json@@Base+0x36c>
   35740:	b	35e54 <flatcc_json_parser_generic_json@@Base+0xc30>
   35744:	ldr	r1, [sp, #16]
   35748:	ldr	r0, [r1]
   3574c:	cmp	r0, #0
   35750:	beq	35a50 <flatcc_json_parser_generic_json@@Base+0x82c>
   35754:	ldmib	sp, {r5, r8}
   35758:	b	35e64 <flatcc_json_parser_generic_json@@Base+0xc40>
   3575c:	ldr	r0, [sp, #16]
   35760:	mov	r1, #20
   35764:	str	r1, [r0]
   35768:	add	r1, r2, #1
   3576c:	ldr	r0, [r5]
   35770:	sub	r0, r1, r0
   35774:	mov	r1, r4
   35778:	str	r0, [r8]
   3577c:	ldr	r0, [sp, #12]
   35780:	str	r2, [r0]
   35784:	sub	r0, r4, r1
   35788:	cmp	r0, #2
   3578c:	bge	35348 <flatcc_json_parser_generic_json@@Base+0x124>
   35790:	b	35888 <flatcc_json_parser_generic_json@@Base+0x664>
   35794:	cmp	r7, r4
   35798:	beq	35a8c <flatcc_json_parser_generic_json@@Base+0x868>
   3579c:	ldmib	sp, {r5, r8}
   357a0:	add	r0, r7, #1
   357a4:	mov	r1, r4
   357a8:	add	r7, sp, #20
   357ac:	cmp	r0, r4
   357b0:	bne	35d28 <flatcc_json_parser_generic_json@@Base+0xb04>
   357b4:	b	35e0c <flatcc_json_parser_generic_json@@Base+0xbe8>
   357b8:	cmp	r6, #512	; 0x200
   357bc:	beq	362d8 <flatcc_json_parser_generic_json@@Base+0x10b4>
   357c0:	add	r0, sp, #24
   357c4:	mov	r1, #93	; 0x5d
   357c8:	strb	r1, [r0, r6]
   357cc:	add	r1, r7, #1
   357d0:	ldmib	sp, {r5, r8}
   357d4:	sub	r0, r4, r1
   357d8:	cmp	r0, #2
   357dc:	blt	35ac0 <flatcc_json_parser_generic_json@@Base+0x89c>
   357e0:	ldrb	r0, [r1]
   357e4:	cmp	r0, #32
   357e8:	bls	35ab0 <flatcc_json_parser_generic_json@@Base+0x88c>
   357ec:	mov	r7, r1
   357f0:	cmp	r7, r4
   357f4:	bne	35ad8 <flatcc_json_parser_generic_json@@Base+0x8b4>
   357f8:	b	36260 <flatcc_json_parser_generic_json@@Base+0x103c>
   357fc:	sub	r0, r4, r7
   35800:	mov	r1, r7
   35804:	cmp	r0, #4
   35808:	blt	35cd8 <flatcc_json_parser_generic_json@@Base+0xab4>
   3580c:	mov	r1, r7
   35810:	movw	r2, #30062	; 0x756e
   35814:	ldr	r0, [r1], #4
   35818:	movt	r2, #27756	; 0x6c6c
   3581c:	cmp	r0, r2
   35820:	movne	r1, r7
   35824:	ldmib	sp, {r5, r8}
   35828:	cmp	r7, r1
   3582c:	bne	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   35830:	b	362a4 <flatcc_json_parser_generic_json@@Base+0x1080>
   35834:	cmp	r6, #512	; 0x200
   35838:	beq	362d8 <flatcc_json_parser_generic_json@@Base+0x10b4>
   3583c:	add	r0, sp, #24
   35840:	mov	r1, #125	; 0x7d
   35844:	strb	r1, [r0, r6]
   35848:	add	r1, r7, #1
   3584c:	ldmib	sp, {r5, r8}
   35850:	sub	r0, r4, r1
   35854:	cmp	r0, #2
   35858:	blt	35b00 <flatcc_json_parser_generic_json@@Base+0x8dc>
   3585c:	ldrb	r0, [r1]
   35860:	cmp	r0, #32
   35864:	bls	35af0 <flatcc_json_parser_generic_json@@Base+0x8cc>
   35868:	mov	r7, r1
   3586c:	cmp	r7, r4
   35870:	bne	35b18 <flatcc_json_parser_generic_json@@Base+0x8f4>
   35874:	b	36260 <flatcc_json_parser_generic_json@@Base+0x103c>
   35878:	add	r1, r0, #1
   3587c:	sub	r0, r4, r1
   35880:	cmp	r0, #2
   35884:	bge	35348 <flatcc_json_parser_generic_json@@Base+0x124>
   35888:	mov	r0, r9
   3588c:	mov	r2, r4
   35890:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   35894:	mov	r7, r0
   35898:	cmp	r7, r4
   3589c:	bne	35360 <flatcc_json_parser_generic_json@@Base+0x13c>
   358a0:	b	36270 <flatcc_json_parser_generic_json@@Base+0x104c>
   358a4:	add	r1, r1, #2
   358a8:	mov	r2, r4
   358ac:	cmp	r1, r4
   358b0:	beq	35e54 <flatcc_json_parser_generic_json@@Base+0xc30>
   358b4:	ldrb	r0, [r1]
   358b8:	sub	r2, r0, #48	; 0x30
   358bc:	uxtb	r2, r2
   358c0:	cmp	r2, #9
   358c4:	bhi	358d8 <flatcc_json_parser_generic_json@@Base+0x6b4>
   358c8:	add	r1, r1, #1
   358cc:	cmp	r4, r1
   358d0:	bne	358b4 <flatcc_json_parser_generic_json@@Base+0x690>
   358d4:	b	35a38 <flatcc_json_parser_generic_json@@Base+0x814>
   358d8:	cmp	r1, r4
   358dc:	mov	r2, r4
   358e0:	beq	35e54 <flatcc_json_parser_generic_json@@Base+0xc30>
   358e4:	orr	r2, r0, #32
   358e8:	cmp	r2, #101	; 0x65
   358ec:	bne	3594c <flatcc_json_parser_generic_json@@Base+0x728>
   358f0:	add	r0, r1, #1
   358f4:	cmp	r0, r4
   358f8:	beq	35b30 <flatcc_json_parser_generic_json@@Base+0x90c>
   358fc:	ldrb	r2, [r0]
   35900:	cmp	r2, #45	; 0x2d
   35904:	cmpne	r2, #43	; 0x2b
   35908:	addeq	r0, r1, #2
   3590c:	cmp	r0, r4
   35910:	beq	355b4 <flatcc_json_parser_generic_json@@Base+0x390>
   35914:	ldrb	r1, [r0]
   35918:	sub	r1, r1, #48	; 0x30
   3591c:	uxtb	r1, r1
   35920:	cmp	r1, #9
   35924:	bhi	355b4 <flatcc_json_parser_generic_json@@Base+0x390>
   35928:	add	r1, r0, #1
   3592c:	cmp	r4, r1
   35930:	beq	35a38 <flatcc_json_parser_generic_json@@Base+0x814>
   35934:	ldrb	r0, [r1], #1
   35938:	sub	r2, r0, #48	; 0x30
   3593c:	uxtb	r2, r2
   35940:	cmp	r2, #10
   35944:	bcc	3592c <flatcc_json_parser_generic_json@@Base+0x708>
   35948:	sub	r1, r1, #1
   3594c:	cmp	r1, r4
   35950:	mov	r2, r4
   35954:	beq	35e54 <flatcc_json_parser_generic_json@@Base+0xc30>
   35958:	sub	r3, r0, #9
   3595c:	cmp	r3, #49	; 0x31
   35960:	bhi	35e40 <flatcc_json_parser_generic_json@@Base+0xc1c>
   35964:	add	r0, pc, #4
   35968:	mov	r2, r1
   3596c:	ldr	pc, [r0, r3, lsl #2]
   35970:	andeq	r5, r3, r8, ror #28
   35974:	andeq	r5, r3, r8, ror #28
   35978:	andeq	r5, r3, r8, ror #28
   3597c:	andeq	r5, r3, r4, asr lr
   35980:	andeq	r5, r3, r8, ror #28
   35984:	andeq	r5, r3, r4, asr lr
   35988:	andeq	r5, r3, r4, asr lr
   3598c:	andeq	r5, r3, r4, asr lr
   35990:	andeq	r5, r3, r4, asr lr
   35994:	andeq	r5, r3, r4, asr lr
   35998:	andeq	r5, r3, r4, asr lr
   3599c:	andeq	r5, r3, r4, asr lr
   359a0:	andeq	r5, r3, r4, asr lr
   359a4:	andeq	r5, r3, r4, asr lr
   359a8:	andeq	r5, r3, r4, asr lr
   359ac:	andeq	r5, r3, r4, asr lr
   359b0:	andeq	r5, r3, r4, asr lr
   359b4:	andeq	r5, r3, r4, asr lr
   359b8:	andeq	r5, r3, r4, asr lr
   359bc:	andeq	r5, r3, r4, asr lr
   359c0:	andeq	r5, r3, r4, asr lr
   359c4:	andeq	r5, r3, r4, asr lr
   359c8:	andeq	r5, r3, r4, asr lr
   359cc:	andeq	r5, r3, r8, ror #28
   359d0:	andeq	r5, r3, r4, asr lr
   359d4:	andeq	r5, r3, r4, asr lr
   359d8:	andeq	r5, r3, r4, asr lr
   359dc:	andeq	r5, r3, r4, asr lr
   359e0:	andeq	r5, r3, r4, asr lr
   359e4:	andeq	r5, r3, r4, asr lr
   359e8:	andeq	r5, r3, r4, asr lr
   359ec:	andeq	r5, r3, r4, asr lr
   359f0:	andeq	r5, r3, r4, asr lr
   359f4:	andeq	r5, r3, r4, asr lr
   359f8:	andeq	r5, r3, r4, asr lr
   359fc:	andeq	r5, r3, r8, ror #28
   35a00:	andeq	r5, r3, r4, asr lr
   35a04:	andeq	r5, r3, r4, asr lr
   35a08:	andeq	r5, r3, r4, asr lr
   35a0c:	andeq	r5, r3, r4, asr lr
   35a10:	andeq	r5, r3, r4, asr lr
   35a14:	andeq	r5, r3, r4, asr lr
   35a18:	andeq	r5, r3, r4, asr lr
   35a1c:	andeq	r5, r3, r4, asr lr
   35a20:	andeq	r5, r3, r4, asr lr
   35a24:	andeq	r5, r3, r4, asr lr
   35a28:	andeq	r5, r3, r4, asr lr
   35a2c:	andeq	r5, r3, r4, asr lr
   35a30:	andeq	r5, r3, r4, asr lr
   35a34:	andeq	r5, r3, r8, ror #28
   35a38:	mov	r2, r4
   35a3c:	ldr	r1, [sp, #16]
   35a40:	ldr	r0, [r1]
   35a44:	cmp	r0, #0
   35a48:	bne	35e64 <flatcc_json_parser_generic_json@@Base+0xc40>
   35a4c:	b	36178 <flatcc_json_parser_generic_json@@Base+0xf54>
   35a50:	ldr	r5, [sp, #4]
   35a54:	mov	r0, #6
   35a58:	ldr	r8, [sp, #8]
   35a5c:	b	35b44 <flatcc_json_parser_generic_json@@Base+0x920>
   35a60:	mov	lr, r7
   35a64:	mov	ip, #0
   35a68:	cmp	lr, r7
   35a6c:	mov	r1, r7
   35a70:	bne	35bcc <flatcc_json_parser_generic_json@@Base+0x9a8>
   35a74:	b	35cd8 <flatcc_json_parser_generic_json@@Base+0xab4>
   35a78:	add	r1, r7, #4
   35a7c:	ldmib	sp, {r5, r8}
   35a80:	cmp	r7, r1
   35a84:	bne	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   35a88:	b	362a4 <flatcc_json_parser_generic_json@@Base+0x1080>
   35a8c:	ldr	r1, [sp, #16]
   35a90:	ldr	r0, [r1]
   35a94:	ldmib	sp, {r5, r8}
   35a98:	cmp	r0, #0
   35a9c:	bne	35e64 <flatcc_json_parser_generic_json@@Base+0xc40>
   35aa0:	mov	r0, #16
   35aa4:	b	35b44 <flatcc_json_parser_generic_json@@Base+0x920>
   35aa8:	mov	r2, r0
   35aac:	b	35328 <flatcc_json_parser_generic_json@@Base+0x104>
   35ab0:	bne	35ac0 <flatcc_json_parser_generic_json@@Base+0x89c>
   35ab4:	ldrb	r0, [r7, #2]!
   35ab8:	cmp	r0, #32
   35abc:	bhi	35ad0 <flatcc_json_parser_generic_json@@Base+0x8ac>
   35ac0:	mov	r0, r9
   35ac4:	mov	r2, r4
   35ac8:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   35acc:	mov	r7, r0
   35ad0:	cmp	r7, r4
   35ad4:	beq	36260 <flatcc_json_parser_generic_json@@Base+0x103c>
   35ad8:	ldrb	r0, [r7]
   35adc:	add	r6, r6, #1
   35ae0:	cmp	r0, #93	; 0x5d
   35ae4:	mov	r1, r7
   35ae8:	bne	36164 <flatcc_json_parser_generic_json@@Base+0xf40>
   35aec:	b	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   35af0:	bne	35b00 <flatcc_json_parser_generic_json@@Base+0x8dc>
   35af4:	ldrb	r0, [r7, #2]!
   35af8:	cmp	r0, #32
   35afc:	bhi	35b10 <flatcc_json_parser_generic_json@@Base+0x8ec>
   35b00:	mov	r0, r9
   35b04:	mov	r2, r4
   35b08:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   35b0c:	mov	r7, r0
   35b10:	cmp	r7, r4
   35b14:	beq	36260 <flatcc_json_parser_generic_json@@Base+0x103c>
   35b18:	ldrb	r0, [r7]
   35b1c:	add	r6, r6, #1
   35b20:	cmp	r0, #125	; 0x7d
   35b24:	mov	r1, r7
   35b28:	beq	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   35b2c:	b	36164 <flatcc_json_parser_generic_json@@Base+0xf40>
   35b30:	ldr	r1, [sp, #16]
   35b34:	ldr	r0, [r1]
   35b38:	cmp	r0, #0
   35b3c:	bne	35e64 <flatcc_json_parser_generic_json@@Base+0xc40>
   35b40:	mov	r0, #6
   35b44:	str	r0, [r1]
   35b48:	ldr	r1, [sp]
   35b4c:	ldr	r0, [r5]
   35b50:	sub	r0, r1, r0
   35b54:	str	r0, [r8]
   35b58:	ldr	r0, [sp, #12]
   35b5c:	mov	r1, r4
   35b60:	str	r4, [r0]
   35b64:	b	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   35b68:	ldr	r0, [sp, #16]
   35b6c:	mov	ip, #0
   35b70:	mov	r3, r4
   35b74:	ldr	r2, [r0]
   35b78:	mov	r0, #0
   35b7c:	cmp	r2, #0
   35b80:	bne	35c54 <flatcc_json_parser_generic_json@@Base+0xa30>
   35b84:	ldr	r1, [sp, #16]
   35b88:	mov	r2, #8
   35b8c:	sub	r0, lr, #1
   35b90:	str	r2, [r1]
   35b94:	ldr	r1, [sp, #4]
   35b98:	add	r2, r0, #1
   35b9c:	ldr	r1, [r1]
   35ba0:	sub	r1, r2, r1
   35ba4:	ldr	r2, [sp, #8]
   35ba8:	str	r1, [r2]
   35bac:	ldr	r1, [sp, #12]
   35bb0:	str	r0, [r1]
   35bb4:	b	35c34 <flatcc_json_parser_generic_json@@Base+0xa10>
   35bb8:	mov	r2, #0
   35bbc:	mov	lr, r4
   35bc0:	cmp	lr, r7
   35bc4:	mov	r1, r7
   35bc8:	beq	35cd8 <flatcc_json_parser_generic_json@@Base+0xab4>
   35bcc:	cmp	r2, #0
   35bd0:	beq	35c50 <flatcc_json_parser_generic_json@@Base+0xa2c>
   35bd4:	ldrb	r1, [lr]
   35bd8:	cmp	r1, #46	; 0x2e
   35bdc:	beq	35bec <flatcc_json_parser_generic_json@@Base+0x9c8>
   35be0:	cmp	r1, #101	; 0x65
   35be4:	cmpne	r1, #69	; 0x45
   35be8:	bne	361a0 <flatcc_json_parser_generic_json@@Base+0xf7c>
   35bec:	ldr	r0, [sp, #16]
   35bf0:	mov	ip, #0
   35bf4:	mov	r3, r4
   35bf8:	ldr	r1, [r0]
   35bfc:	mov	r0, #0
   35c00:	cmp	r1, #0
   35c04:	bne	35c54 <flatcc_json_parser_generic_json@@Base+0xa30>
   35c08:	ldr	r0, [sp, #16]
   35c0c:	mov	r1, #12
   35c10:	str	r1, [r0]
   35c14:	ldr	r0, [sp, #4]
   35c18:	add	r1, lr, #1
   35c1c:	ldr	r0, [r0]
   35c20:	sub	r0, r1, r0
   35c24:	ldr	r1, [sp, #8]
   35c28:	str	r0, [r1]
   35c2c:	ldr	r0, [sp, #12]
   35c30:	str	lr, [r0]
   35c34:	mov	r0, #0
   35c38:	mov	ip, #0
   35c3c:	mov	r3, r4
   35c40:	cmp	r3, r7
   35c44:	mov	r1, r7
   35c48:	bne	35c60 <flatcc_json_parser_generic_json@@Base+0xa3c>
   35c4c:	b	35cd8 <flatcc_json_parser_generic_json@@Base+0xab4>
   35c50:	mov	r3, lr
   35c54:	cmp	r3, r7
   35c58:	mov	r1, r7
   35c5c:	beq	35cd8 <flatcc_json_parser_generic_json@@Base+0xab4>
   35c60:	subs	r0, r0, #256	; 0x100
   35c64:	sbcs	r0, ip, #0
   35c68:	bcc	35cc0 <flatcc_json_parser_generic_json@@Base+0xa9c>
   35c6c:	ldr	r0, [sp, #16]
   35c70:	mov	r1, r4
   35c74:	ldr	r0, [r0]
   35c78:	cmp	r0, #0
   35c7c:	bne	35cd8 <flatcc_json_parser_generic_json@@Base+0xab4>
   35c80:	ldr	r0, [sp, #16]
   35c84:	mov	r1, #7
   35c88:	str	r1, [r0]
   35c8c:	ldr	r0, [sp, #4]
   35c90:	add	r1, r3, #1
   35c94:	ldr	r0, [r0]
   35c98:	sub	r0, r1, r0
   35c9c:	ldr	r1, [sp, #8]
   35ca0:	str	r0, [r1]
   35ca4:	ldr	r0, [sp, #12]
   35ca8:	mov	r1, r4
   35cac:	str	r3, [r0]
   35cb0:	ldmib	sp, {r5, r8}
   35cb4:	cmp	r7, r1
   35cb8:	bne	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   35cbc:	b	362a4 <flatcc_json_parser_generic_json@@Base+0x1080>
   35cc0:	mov	r1, r3
   35cc4:	ldmib	sp, {r5, r8}
   35cc8:	cmp	r7, r1
   35ccc:	bne	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   35cd0:	b	362a4 <flatcc_json_parser_generic_json@@Base+0x1080>
   35cd4:	add	r1, r7, #5
   35cd8:	ldmib	sp, {r5, r8}
   35cdc:	cmp	r7, r1
   35ce0:	bne	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   35ce4:	b	362a4 <flatcc_json_parser_generic_json@@Base+0x1080>
   35ce8:	ldr	r0, [sp, #16]
   35cec:	mov	r1, r4
   35cf0:	ldr	r0, [r0]
   35cf4:	cmp	r0, #0
   35cf8:	bne	35dcc <flatcc_json_parser_generic_json@@Base+0xba8>
   35cfc:	ldr	r0, [sp, #16]
   35d00:	mov	r1, #20
   35d04:	str	r1, [r0]
   35d08:	ldr	r1, [sp]
   35d0c:	ldr	r0, [r5]
   35d10:	sub	r0, r1, r0
   35d14:	mov	r1, r4
   35d18:	str	r0, [r8]
   35d1c:	ldr	r0, [sp, #12]
   35d20:	str	r4, [r0]
   35d24:	b	35dcc <flatcc_json_parser_generic_json@@Base+0xba8>
   35d28:	ldrb	r1, [r0]
   35d2c:	cmp	r1, #34	; 0x22
   35d30:	beq	35dec <flatcc_json_parser_generic_json@@Base+0xbc8>
   35d34:	cmp	r1, #32
   35d38:	bcc	35d74 <flatcc_json_parser_generic_json@@Base+0xb50>
   35d3c:	rsb	r0, r0, #0
   35d40:	uxtb	r2, r1
   35d44:	cmp	r2, #34	; 0x22
   35d48:	cmpne	r2, #92	; 0x5c
   35d4c:	beq	35db4 <flatcc_json_parser_generic_json@@Base+0xb90>
   35d50:	add	r1, r4, r0
   35d54:	cmp	r1, #1
   35d58:	beq	35ce8 <flatcc_json_parser_generic_json@@Base+0xac4>
   35d5c:	rsb	r1, r0, #0
   35d60:	sub	r0, r0, #1
   35d64:	ldrb	r1, [r1, #1]
   35d68:	cmp	r1, #32
   35d6c:	bcs	35d40 <flatcc_json_parser_generic_json@@Base+0xb1c>
   35d70:	rsb	r0, r0, #0
   35d74:	ldr	r1, [sp, #16]
   35d78:	ldr	r1, [r1]
   35d7c:	cmp	r1, #0
   35d80:	mov	r1, r4
   35d84:	bne	35dcc <flatcc_json_parser_generic_json@@Base+0xba8>
   35d88:	ldr	r1, [sp, #16]
   35d8c:	mov	r2, #17
   35d90:	str	r2, [r1]
   35d94:	add	r2, r0, #1
   35d98:	ldr	r1, [r5]
   35d9c:	sub	r1, r2, r1
   35da0:	str	r1, [r8]
   35da4:	ldr	r1, [sp, #12]
   35da8:	str	r0, [r1]
   35dac:	mov	r1, r4
   35db0:	b	35dcc <flatcc_json_parser_generic_json@@Base+0xba8>
   35db4:	adds	r1, r4, r0
   35db8:	mov	r1, r4
   35dbc:	beq	35dcc <flatcc_json_parser_generic_json@@Base+0xba8>
   35dc0:	rsb	r1, r0, #0
   35dc4:	cmp	r2, #34	; 0x22
   35dc8:	beq	35df0 <flatcc_json_parser_generic_json@@Base+0xbcc>
   35dcc:	mov	r0, r9
   35dd0:	mov	r2, r4
   35dd4:	mov	r3, r7
   35dd8:	bl	349c0 <flatcc_json_parser_string_escape@@Base>
   35ddc:	cmp	r0, r4
   35de0:	bne	35d28 <flatcc_json_parser_generic_json@@Base+0xb04>
   35de4:	mov	r1, r4
   35de8:	b	35e0c <flatcc_json_parser_generic_json@@Base+0xbe8>
   35dec:	mov	r1, r0
   35df0:	cmp	r1, r4
   35df4:	beq	35e0c <flatcc_json_parser_generic_json@@Base+0xbe8>
   35df8:	ldrb	r0, [r1]
   35dfc:	cmp	r0, #34	; 0x22
   35e00:	bne	35e0c <flatcc_json_parser_generic_json@@Base+0xbe8>
   35e04:	add	r1, r1, #1
   35e08:	b	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   35e0c:	ldr	r2, [sp, #16]
   35e10:	ldr	r0, [r2]
   35e14:	cmp	r0, #0
   35e18:	bne	35e64 <flatcc_json_parser_generic_json@@Base+0xc40>
   35e1c:	mov	r0, #20
   35e20:	str	r0, [r2]
   35e24:	add	r2, r1, #1
   35e28:	ldr	r0, [r5]
   35e2c:	sub	r0, r2, r0
   35e30:	str	r0, [r8]
   35e34:	ldr	r0, [sp, #12]
   35e38:	str	r1, [r0]
   35e3c:	b	35e64 <flatcc_json_parser_generic_json@@Base+0xc40>
   35e40:	cmp	r0, #93	; 0x5d
   35e44:	beq	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   35e48:	cmp	r0, #125	; 0x7d
   35e4c:	mov	r2, r1
   35e50:	beq	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   35e54:	ldr	r1, [sp, #16]
   35e58:	ldr	r0, [r1]
   35e5c:	cmp	r0, #0
   35e60:	beq	36178 <flatcc_json_parser_generic_json@@Base+0xf54>
   35e64:	mov	r1, r4
   35e68:	subs	r0, r1, r4
   35e6c:	mov	r3, r6
   35e70:	movwne	r0, #1
   35e74:	cmp	r6, #0
   35e78:	movwne	r3, #1
   35e7c:	cmp	r1, r4
   35e80:	beq	361f8 <flatcc_json_parser_generic_json@@Base+0xfd4>
   35e84:	cmp	r6, #0
   35e88:	beq	36208 <flatcc_json_parser_generic_json@@Base+0xfe4>
   35e8c:	ldrb	r2, [sl, r6]
   35e90:	sub	r0, r4, r1
   35e94:	cmp	r2, #93	; 0x5d
   35e98:	bne	35ef4 <flatcc_json_parser_generic_json@@Base+0xcd0>
   35e9c:	cmp	r0, #2
   35ea0:	blt	35f80 <flatcc_json_parser_generic_json@@Base+0xd5c>
   35ea4:	ldrb	r0, [r1]
   35ea8:	cmp	r0, #32
   35eac:	bls	35f6c <flatcc_json_parser_generic_json@@Base+0xd48>
   35eb0:	mov	r7, r1
   35eb4:	cmp	r7, r4
   35eb8:	mov	r1, r4
   35ebc:	beq	36104 <flatcc_json_parser_generic_json@@Base+0xee0>
   35ec0:	ldrb	r0, [r7]
   35ec4:	cmp	r0, #44	; 0x2c
   35ec8:	beq	35fd4 <flatcc_json_parser_generic_json@@Base+0xdb0>
   35ecc:	cmp	r0, #93	; 0x5d
   35ed0:	beq	360b8 <flatcc_json_parser_generic_json@@Base+0xe94>
   35ed4:	ldr	r0, [sp, #16]
   35ed8:	mov	r1, r4
   35edc:	ldr	r0, [r0]
   35ee0:	cmp	r0, #0
   35ee4:	bne	36104 <flatcc_json_parser_generic_json@@Base+0xee0>
   35ee8:	ldr	r0, [sp, #16]
   35eec:	mov	r1, #9
   35ef0:	b	35f48 <flatcc_json_parser_generic_json@@Base+0xd24>
   35ef4:	cmp	r0, #2
   35ef8:	blt	35fb4 <flatcc_json_parser_generic_json@@Base+0xd90>
   35efc:	ldrb	r0, [r1]
   35f00:	cmp	r0, #32
   35f04:	bls	35fa0 <flatcc_json_parser_generic_json@@Base+0xd7c>
   35f08:	mov	r7, r1
   35f0c:	cmp	r7, r4
   35f10:	mov	r1, r4
   35f14:	beq	36104 <flatcc_json_parser_generic_json@@Base+0xee0>
   35f18:	ldrb	r0, [r7]
   35f1c:	cmp	r0, #44	; 0x2c
   35f20:	beq	3601c <flatcc_json_parser_generic_json@@Base+0xdf8>
   35f24:	cmp	r0, #125	; 0x7d
   35f28:	beq	360b8 <flatcc_json_parser_generic_json@@Base+0xe94>
   35f2c:	ldr	r0, [sp, #16]
   35f30:	mov	r1, r4
   35f34:	ldr	r0, [r0]
   35f38:	cmp	r0, #0
   35f3c:	bne	36104 <flatcc_json_parser_generic_json@@Base+0xee0>
   35f40:	ldr	r0, [sp, #16]
   35f44:	mov	r1, #10
   35f48:	str	r1, [r0]
   35f4c:	add	r1, r7, #1
   35f50:	ldr	r0, [r5]
   35f54:	sub	r0, r1, r0
   35f58:	mov	r1, r4
   35f5c:	str	r0, [r8]
   35f60:	ldr	r0, [sp, #12]
   35f64:	str	r7, [r0]
   35f68:	b	36104 <flatcc_json_parser_generic_json@@Base+0xee0>
   35f6c:	bne	35f80 <flatcc_json_parser_generic_json@@Base+0xd5c>
   35f70:	mov	r7, r1
   35f74:	ldrb	r0, [r7, #1]!
   35f78:	cmp	r0, #32
   35f7c:	bhi	35f90 <flatcc_json_parser_generic_json@@Base+0xd6c>
   35f80:	mov	r0, r9
   35f84:	mov	r2, r4
   35f88:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   35f8c:	mov	r7, r0
   35f90:	cmp	r7, r4
   35f94:	mov	r1, r4
   35f98:	bne	35ec0 <flatcc_json_parser_generic_json@@Base+0xc9c>
   35f9c:	b	36104 <flatcc_json_parser_generic_json@@Base+0xee0>
   35fa0:	bne	35fb4 <flatcc_json_parser_generic_json@@Base+0xd90>
   35fa4:	mov	r7, r1
   35fa8:	ldrb	r0, [r7, #1]!
   35fac:	cmp	r0, #32
   35fb0:	bhi	35fc4 <flatcc_json_parser_generic_json@@Base+0xda0>
   35fb4:	mov	r0, r9
   35fb8:	mov	r2, r4
   35fbc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   35fc0:	mov	r7, r0
   35fc4:	cmp	r7, r4
   35fc8:	mov	r1, r4
   35fcc:	bne	35f18 <flatcc_json_parser_generic_json@@Base+0xcf4>
   35fd0:	b	36104 <flatcc_json_parser_generic_json@@Base+0xee0>
   35fd4:	add	r1, r7, #1
   35fd8:	sub	r0, r4, r1
   35fdc:	cmp	r0, #2
   35fe0:	blt	36094 <flatcc_json_parser_generic_json@@Base+0xe70>
   35fe4:	ldrb	r0, [r1]
   35fe8:	cmp	r0, #32
   35fec:	bls	36084 <flatcc_json_parser_generic_json@@Base+0xe60>
   35ff0:	mov	r7, r1
   35ff4:	cmp	r7, r4
   35ff8:	bne	360ac <flatcc_json_parser_generic_json@@Base+0xe88>
   35ffc:	ldr	r0, [sp, #16]
   36000:	mov	r1, r4
   36004:	ldr	r0, [r0]
   36008:	cmp	r0, #0
   3600c:	bne	36104 <flatcc_json_parser_generic_json@@Base+0xee0>
   36010:	ldr	r0, [sp, #16]
   36014:	mov	r1, #9
   36018:	b	36060 <flatcc_json_parser_generic_json@@Base+0xe3c>
   3601c:	add	r1, r7, #1
   36020:	sub	r0, r4, r1
   36024:	cmp	r0, #2
   36028:	blt	36140 <flatcc_json_parser_generic_json@@Base+0xf1c>
   3602c:	ldrb	r0, [r1]
   36030:	cmp	r0, #32
   36034:	bls	36130 <flatcc_json_parser_generic_json@@Base+0xf0c>
   36038:	mov	r7, r1
   3603c:	cmp	r7, r4
   36040:	bne	36158 <flatcc_json_parser_generic_json@@Base+0xf34>
   36044:	ldr	r0, [sp, #16]
   36048:	mov	r1, r4
   3604c:	ldr	r0, [r0]
   36050:	cmp	r0, #0
   36054:	bne	36104 <flatcc_json_parser_generic_json@@Base+0xee0>
   36058:	ldr	r0, [sp, #16]
   3605c:	mov	r1, #10
   36060:	str	r1, [r0]
   36064:	ldr	r1, [sp]
   36068:	ldr	r0, [r5]
   3606c:	sub	r0, r1, r0
   36070:	mov	r1, r4
   36074:	str	r0, [r8]
   36078:	ldr	r0, [sp, #12]
   3607c:	str	r4, [r0]
   36080:	b	36104 <flatcc_json_parser_generic_json@@Base+0xee0>
   36084:	bne	36094 <flatcc_json_parser_generic_json@@Base+0xe70>
   36088:	ldrb	r0, [r7, #2]!
   3608c:	cmp	r0, #32
   36090:	bhi	360a4 <flatcc_json_parser_generic_json@@Base+0xe80>
   36094:	mov	r0, r9
   36098:	mov	r2, r4
   3609c:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   360a0:	mov	r7, r0
   360a4:	cmp	r7, r4
   360a8:	beq	35ffc <flatcc_json_parser_generic_json@@Base+0xdd8>
   360ac:	ldrb	r0, [r7]
   360b0:	cmp	r0, #93	; 0x5d
   360b4:	bne	36164 <flatcc_json_parser_generic_json@@Base+0xf40>
   360b8:	add	r2, r7, #1
   360bc:	sub	r0, r4, r2
   360c0:	cmp	r0, #2
   360c4:	blt	360f0 <flatcc_json_parser_generic_json@@Base+0xecc>
   360c8:	ldrb	r0, [r2]
   360cc:	cmp	r0, #32
   360d0:	bls	360dc <flatcc_json_parser_generic_json@@Base+0xeb8>
   360d4:	mov	r1, r2
   360d8:	b	36104 <flatcc_json_parser_generic_json@@Base+0xee0>
   360dc:	bne	360f0 <flatcc_json_parser_generic_json@@Base+0xecc>
   360e0:	ldrb	r0, [r7, #2]!
   360e4:	cmp	r0, #32
   360e8:	mov	r1, r7
   360ec:	bhi	36104 <flatcc_json_parser_generic_json@@Base+0xee0>
   360f0:	mov	r1, r2
   360f4:	mov	r0, r9
   360f8:	mov	r2, r4
   360fc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   36100:	mov	r1, r0
   36104:	subs	r0, r1, r4
   36108:	sub	r2, r6, #1
   3610c:	movwne	r0, #1
   36110:	subs	r3, r6, #1
   36114:	movwne	r3, #1
   36118:	cmp	r1, r4
   3611c:	beq	3620c <flatcc_json_parser_generic_json@@Base+0xfe8>
   36120:	cmp	r6, #1
   36124:	mov	r6, r2
   36128:	bne	35e8c <flatcc_json_parser_generic_json@@Base+0xc68>
   3612c:	b	3620c <flatcc_json_parser_generic_json@@Base+0xfe8>
   36130:	bne	36140 <flatcc_json_parser_generic_json@@Base+0xf1c>
   36134:	ldrb	r0, [r7, #2]!
   36138:	cmp	r0, #32
   3613c:	bhi	36150 <flatcc_json_parser_generic_json@@Base+0xf2c>
   36140:	mov	r0, r9
   36144:	mov	r2, r4
   36148:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   3614c:	mov	r7, r0
   36150:	cmp	r7, r4
   36154:	beq	36044 <flatcc_json_parser_generic_json@@Base+0xe20>
   36158:	ldrb	r0, [r7]
   3615c:	cmp	r0, #125	; 0x7d
   36160:	beq	360b8 <flatcc_json_parser_generic_json@@Base+0xe94>
   36164:	add	r0, sp, #24
   36168:	cmp	r7, r4
   3616c:	add	r0, r0, r6
   36170:	bne	35278 <flatcc_json_parser_generic_json@@Base+0x54>
   36174:	b	36260 <flatcc_json_parser_generic_json@@Base+0x103c>
   36178:	mov	r0, #6
   3617c:	str	r0, [r1]
   36180:	add	r1, r2, #1
   36184:	ldr	r0, [r5]
   36188:	sub	r0, r1, r0
   3618c:	mov	r1, r4
   36190:	str	r0, [r8]
   36194:	ldr	r0, [sp, #12]
   36198:	str	r2, [r0]
   3619c:	b	35e68 <flatcc_json_parser_generic_json@@Base+0xc44>
   361a0:	mov	r3, lr
   361a4:	cmp	r3, r7
   361a8:	mov	r1, r7
   361ac:	bne	35c60 <flatcc_json_parser_generic_json@@Base+0xa3c>
   361b0:	b	35cd8 <flatcc_json_parser_generic_json@@Base+0xab4>
   361b4:	mov	r1, r7
   361b8:	mov	r0, r1
   361bc:	sub	sp, fp, #28
   361c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   361c4:	ldr	r1, [sp, #16]
   361c8:	ldr	r0, [r1]
   361cc:	cmp	r0, #0
   361d0:	bne	36260 <flatcc_json_parser_generic_json@@Base+0x103c>
   361d4:	mov	r0, #5
   361d8:	str	r0, [r1]
   361dc:	ldr	r0, [sp, #4]
   361e0:	add	r1, r7, #1
   361e4:	ldr	r0, [r0]
   361e8:	sub	r0, r1, r0
   361ec:	ldr	r1, [sp, #8]
   361f0:	str	r0, [r1]
   361f4:	b	362cc <flatcc_json_parser_generic_json@@Base+0x10a8>
   361f8:	mov	r2, r6
   361fc:	cmp	r0, #0
   36200:	beq	36214 <flatcc_json_parser_generic_json@@Base+0xff0>
   36204:	b	36264 <flatcc_json_parser_generic_json@@Base+0x1040>
   36208:	mov	r2, r6
   3620c:	cmp	r0, #0
   36210:	bne	36264 <flatcc_json_parser_generic_json@@Base+0x1040>
   36214:	cmp	r3, #0
   36218:	beq	36264 <flatcc_json_parser_generic_json@@Base+0x1040>
   3621c:	ldr	r3, [sp, #16]
   36220:	ldr	r0, [r3]
   36224:	cmp	r0, #0
   36228:	bne	36260 <flatcc_json_parser_generic_json@@Base+0x103c>
   3622c:	add	r0, sp, #24
   36230:	mov	r1, #10
   36234:	add	r0, r0, r2
   36238:	ldrb	r0, [r0, #-1]
   3623c:	cmp	r0, #93	; 0x5d
   36240:	movweq	r1, #9
   36244:	str	r1, [r3]
   36248:	ldr	r0, [r5]
   3624c:	ldr	r1, [sp]
   36250:	sub	r0, r1, r0
   36254:	str	r0, [r8]
   36258:	ldr	r0, [sp, #12]
   3625c:	str	r4, [r0]
   36260:	mov	r1, r4
   36264:	mov	r0, r1
   36268:	sub	sp, fp, #28
   3626c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36270:	ldr	r1, [sp, #16]
   36274:	ldr	r0, [r1]
   36278:	cmp	r0, #0
   3627c:	bne	36260 <flatcc_json_parser_generic_json@@Base+0x103c>
   36280:	mov	r0, #10
   36284:	str	r0, [r1]
   36288:	b	36248 <flatcc_json_parser_generic_json@@Base+0x1024>
   3628c:	ldr	r1, [sp, #16]
   36290:	ldr	r0, [r1]
   36294:	cmp	r0, #0
   36298:	bne	36260 <flatcc_json_parser_generic_json@@Base+0x103c>
   3629c:	mov	r0, #4
   362a0:	b	362b8 <flatcc_json_parser_generic_json@@Base+0x1094>
   362a4:	ldr	r1, [sp, #16]
   362a8:	ldr	r0, [r1]
   362ac:	cmp	r0, #0
   362b0:	bne	36260 <flatcc_json_parser_generic_json@@Base+0x103c>
   362b4:	mov	r0, #5
   362b8:	str	r0, [r1]
   362bc:	add	r1, r7, #1
   362c0:	ldr	r0, [r5]
   362c4:	sub	r0, r1, r0
   362c8:	str	r0, [r8]
   362cc:	ldr	r0, [sp, #12]
   362d0:	str	r7, [r0]
   362d4:	b	36260 <flatcc_json_parser_generic_json@@Base+0x103c>
   362d8:	ldr	r3, [sp, #16]
   362dc:	ldr	r0, [r3]
   362e0:	ldmib	sp, {r1, r2}
   362e4:	cmp	r0, #0
   362e8:	bne	36260 <flatcc_json_parser_generic_json@@Base+0x103c>
   362ec:	mov	r0, #2
   362f0:	str	r0, [r3]
   362f4:	ldr	r0, [r1]
   362f8:	add	r1, r7, #1
   362fc:	sub	r0, r1, r0
   36300:	str	r0, [r2]
   36304:	b	362cc <flatcc_json_parser_generic_json@@Base+0x10a8>

00036308 <flatcc_json_parser_double@@Base>:
   36308:	push	{r4, r5, r6, r7, fp, lr}
   3630c:	add	fp, sp, #16
   36310:	mov	r5, r0
   36314:	mov	r0, #0
   36318:	mov	r6, r1
   3631c:	cmp	r1, r2
   36320:	str	r0, [r3]
   36324:	str	r0, [r3, #4]
   36328:	moveq	r0, r6
   3632c:	popeq	{r4, r5, r6, r7, fp, pc}
   36330:	mov	r0, r6
   36334:	mov	r4, r2
   36338:	mov	r7, r3
   3633c:	ldrb	r1, [r0], #1
   36340:	cmp	r1, #45	; 0x2d
   36344:	movne	r0, r6
   36348:	sub	r2, r2, r0
   3634c:	cmp	r2, #2
   36350:	blt	3637c <flatcc_json_parser_double@@Base+0x74>
   36354:	sub	r1, r1, #45	; 0x2d
   36358:	clz	r1, r1
   3635c:	lsr	r1, r1, #5
   36360:	ldrb	r1, [r6, r1]
   36364:	cmp	r1, #46	; 0x2e
   36368:	beq	363cc <flatcc_json_parser_double@@Base+0xc4>
   3636c:	cmp	r1, #48	; 0x30
   36370:	ldrbeq	r0, [r0, #1]
   36374:	cmpeq	r0, #48	; 0x30
   36378:	beq	363cc <flatcc_json_parser_double@@Base+0xc4>
   3637c:	sub	r1, r4, r6
   36380:	mov	r0, r6
   36384:	mov	r2, r7
   36388:	bl	36400 <flatcc_json_parser_double@@Base+0xf8>
   3638c:	cmp	r0, #0
   36390:	cmpne	r0, r6
   36394:	popne	{r4, r5, r6, r7, fp, pc}
   36398:	vldr	d0, [r7]
   3639c:	bl	14e84 <__isinf@plt>
   363a0:	ldr	r1, [r5, #20]
   363a4:	cmp	r0, #0
   363a8:	beq	363bc <flatcc_json_parser_double@@Base+0xb4>
   363ac:	cmp	r1, #0
   363b0:	bne	363c4 <flatcc_json_parser_double@@Base+0xbc>
   363b4:	mov	r0, #7
   363b8:	b	363dc <flatcc_json_parser_double@@Base+0xd4>
   363bc:	cmp	r1, #0
   363c0:	beq	363d8 <flatcc_json_parser_double@@Base+0xd0>
   363c4:	mov	r0, r4
   363c8:	pop	{r4, r5, r6, r7, fp, pc}
   363cc:	ldr	r0, [r5, #20]
   363d0:	cmp	r0, #0
   363d4:	bne	363c4 <flatcc_json_parser_double@@Base+0xbc>
   363d8:	mov	r0, #6
   363dc:	str	r6, [r5, #32]
   363e0:	add	r2, r6, #1
   363e4:	ldr	r1, [r5, #4]
   363e8:	sub	r1, r2, r1
   363ec:	str	r1, [r5, #16]
   363f0:	str	r0, [r5, #20]
   363f4:	mov	r0, r4
   363f8:	pop	{r4, r5, r6, r7, fp, pc}
   363fc:	nop	{0}
   36400:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36404:	add	fp, sp, #28
   36408:	sub	sp, sp, #36	; 0x24
   3640c:	cmp	r1, #1000	; 0x3e8
   36410:	mov	r3, r1
   36414:	mov	r6, #0
   36418:	mov	r9, r0
   3641c:	movge	r1, #1000	; 0x3e8
   36420:	str	r6, [r2]
   36424:	str	r6, [r2, #4]
   36428:	add	lr, r0, r1
   3642c:	add	r4, lr, #1
   36430:	cmp	r4, r0
   36434:	beq	3649c <flatcc_json_parser_double@@Base+0x194>
   36438:	ldrb	r0, [r9]
   3643c:	mov	r5, r9
   36440:	cmp	r0, #45	; 0x2d
   36444:	bne	3645c <flatcc_json_parser_double@@Base+0x154>
   36448:	cmp	r1, #0
   3644c:	beq	364ec <flatcc_json_parser_double@@Base+0x1e4>
   36450:	add	r5, r9, #1
   36454:	mov	r6, #1
   36458:	ldrb	r0, [r5]
   3645c:	cmp	r0, #48	; 0x30
   36460:	bne	364ac <flatcc_json_parser_double@@Base+0x1a4>
   36464:	add	ip, r5, #1
   36468:	cmp	r5, lr
   3646c:	beq	3652c <flatcc_json_parser_double@@Base+0x224>
   36470:	ldrb	r1, [ip]
   36474:	orr	r0, r1, #32
   36478:	cmp	r0, #120	; 0x78
   3647c:	bne	364fc <flatcc_json_parser_double@@Base+0x1f4>
   36480:	mov	r0, #0
   36484:	str	r0, [r2]
   36488:	str	r0, [r2, #4]
   3648c:	mov	r2, r9
   36490:	mov	r0, r2
   36494:	sub	sp, fp, #28
   36498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3649c:	mov	r2, r9
   364a0:	mov	r0, r2
   364a4:	sub	sp, fp, #28
   364a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   364ac:	sub	r1, r0, #49	; 0x31
   364b0:	uxtb	r1, r1
   364b4:	cmp	r1, #9
   364b8:	bcc	364d4 <flatcc_json_parser_double@@Base+0x1cc>
   364bc:	cmp	r6, #0
   364c0:	movne	r9, #0
   364c4:	mov	r2, r9
   364c8:	mov	r0, r2
   364cc:	sub	sp, fp, #28
   364d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   364d4:	sub	r0, r0, #48	; 0x30
   364d8:	add	ip, r5, #1
   364dc:	asr	r1, r0, #31
   364e0:	cmp	ip, r4
   364e4:	bne	3653c <flatcc_json_parser_double@@Base+0x234>
   364e8:	b	365b8 <flatcc_json_parser_double@@Base+0x2b0>
   364ec:	mov	r2, #0
   364f0:	mov	r0, r2
   364f4:	sub	sp, fp, #28
   364f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   364fc:	cmp	r1, #48	; 0x30
   36500:	mov	r0, #0
   36504:	mov	r1, #0
   36508:	bne	36534 <flatcc_json_parser_double@@Base+0x22c>
   3650c:	add	r0, r5, #2
   36510:	mov	ip, r0
   36514:	cmp	r4, r0
   36518:	beq	3652c <flatcc_json_parser_double@@Base+0x224>
   3651c:	mov	r0, ip
   36520:	ldrb	r1, [r0], #1
   36524:	cmp	r1, #48	; 0x30
   36528:	beq	36510 <flatcc_json_parser_double@@Base+0x208>
   3652c:	mov	r0, #0
   36530:	mov	r1, #0
   36534:	cmp	ip, r4
   36538:	beq	365b8 <flatcc_json_parser_double@@Base+0x2b0>
   3653c:	movw	r5, #39321	; 0x9999
   36540:	mov	sl, #10
   36544:	mov	r7, ip
   36548:	str	r6, [sp, #20]
   3654c:	str	r2, [sp, #24]
   36550:	movt	r5, #6553	; 0x1999
   36554:	ldrb	r8, [r7]
   36558:	sub	r2, r8, #48	; 0x30
   3655c:	uxtb	r6, r2
   36560:	mov	r2, #0
   36564:	cmp	r6, #9
   36568:	bhi	365a0 <flatcc_json_parser_double@@Base+0x298>
   3656c:	movw	r6, #39320	; 0x9998
   36570:	movt	r6, #39321	; 0x9999
   36574:	subs	r6, r6, r0
   36578:	sbcs	r6, r5, r1
   3657c:	bcc	365c8 <flatcc_json_parser_double@@Base+0x2c0>
   36580:	add	r1, r1, r1, lsl #2
   36584:	add	r7, r7, #1
   36588:	lsl	r1, r1, #1
   3658c:	umlal	r8, r1, r0, sl
   36590:	subs	r0, r8, #48	; 0x30
   36594:	sbc	r1, r1, #0
   36598:	cmp	r4, r7
   3659c:	bne	36554 <flatcc_json_parser_double@@Base+0x24c>
   365a0:	mov	r5, r1
   365a4:	mov	sl, #0
   365a8:	str	r0, [sp, #28]
   365ac:	cmp	r7, r4
   365b0:	bne	365ec <flatcc_json_parser_double@@Base+0x2e4>
   365b4:	b	36ae4 <flatcc_json_parser_double@@Base+0x7dc>
   365b8:	mov	r2, #0
   365bc:	mov	r0, r2
   365c0:	sub	sp, fp, #28
   365c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   365c8:	adds	r6, r0, #1
   365cc:	mov	sl, #1
   365d0:	adc	r5, r1, #0
   365d4:	cmp	r8, #52	; 0x34
   365d8:	movls	r6, r0
   365dc:	movls	r5, r1
   365e0:	str	r6, [sp, #28]
   365e4:	cmp	r7, r4
   365e8:	beq	36ae4 <flatcc_json_parser_double@@Base+0x7dc>
   365ec:	sub	r8, r7, ip
   365f0:	mvn	ip, r3
   365f4:	mov	r3, #0
   365f8:	cmn	ip, #1000	; 0x3e8
   365fc:	mov	r0, ip
   36600:	mvnlt	r0, #1000	; 0x3e8
   36604:	mvn	r0, r0
   36608:	sub	r0, r0, r7
   3660c:	add	r0, r9, r0
   36610:	ldrb	r1, [r7]
   36614:	cmp	r1, #48	; 0x30
   36618:	bne	36648 <flatcc_json_parser_double@@Base+0x340>
   3661c:	add	r1, r7, #1
   36620:	cmp	r7, lr
   36624:	sub	r0, r0, #1
   36628:	add	r3, r3, #1
   3662c:	mov	r7, r1
   36630:	bne	36610 <flatcc_json_parser_double@@Base+0x308>
   36634:	mov	r7, r1
   36638:	mov	r2, #0
   3663c:	cmp	r7, r4
   36640:	bne	3669c <flatcc_json_parser_double@@Base+0x394>
   36644:	b	36ae4 <flatcc_json_parser_double@@Base+0x7dc>
   36648:	sub	r1, r1, #49	; 0x31
   3664c:	uxtb	r1, r1
   36650:	cmp	r1, #8
   36654:	bhi	36690 <flatcc_json_parser_double@@Base+0x388>
   36658:	mvn	r2, #0
   3665c:	mov	r1, r2
   36660:	cmp	r0, #0
   36664:	beq	36684 <flatcc_json_parser_double@@Base+0x37c>
   36668:	ldrb	r2, [r7, -r1]
   3666c:	sub	r0, r0, #1
   36670:	sub	r2, r2, #48	; 0x30
   36674:	uxtb	r6, r2
   36678:	sub	r2, r1, #1
   3667c:	cmp	r6, #10
   36680:	bcc	3665c <flatcc_json_parser_double@@Base+0x354>
   36684:	sub	r3, r3, r1
   36688:	sub	r7, r7, r1
   3668c:	mov	sl, #1
   36690:	mov	r2, #0
   36694:	cmp	r7, r4
   36698:	beq	36ae4 <flatcc_json_parser_double@@Base+0x7dc>
   3669c:	ldrb	r0, [r7]
   366a0:	cmp	r0, #46	; 0x2e
   366a4:	bne	36848 <flatcc_json_parser_double@@Base+0x540>
   366a8:	mov	r6, r7
   366ac:	ldrb	r0, [r6, #1]!
   366b0:	sub	r1, r0, #48	; 0x30
   366b4:	uxtb	r1, r1
   366b8:	cmp	r1, #9
   366bc:	bhi	36ae4 <flatcc_json_parser_double@@Base+0x7dc>
   366c0:	cmp	r7, lr
   366c4:	beq	36788 <flatcc_json_parser_double@@Base+0x480>
   366c8:	cmn	ip, #1000	; 0x3e8
   366cc:	mvn	r1, #1
   366d0:	str	sl, [sp, #12]
   366d4:	str	r6, [sp, #8]
   366d8:	str	r8, [sp, #16]
   366dc:	mvnlt	ip, #1000	; 0x3e8
   366e0:	sub	r1, r1, ip
   366e4:	sub	r1, r1, r7
   366e8:	add	sl, r9, r1
   366ec:	mov	r1, #0
   366f0:	mov	ip, r1
   366f4:	ldr	r1, [sp, #28]
   366f8:	movw	r6, #39320	; 0x9998
   366fc:	movt	r6, #39321	; 0x9999
   36700:	subs	r1, r6, r1
   36704:	movw	r1, #39321	; 0x9999
   36708:	movt	r1, #6553	; 0x1999
   3670c:	sbcs	r1, r1, r5
   36710:	bcc	36798 <flatcc_json_parser_double@@Base+0x490>
   36714:	add	r1, r5, r5, lsl #2
   36718:	ldr	r5, [sp, #28]
   3671c:	uxtb	r0, r0
   36720:	mov	r6, #10
   36724:	lsl	r1, r1, #1
   36728:	umlal	r0, r1, r5, r6
   3672c:	add	r6, r7, ip
   36730:	subs	r0, r0, #48	; 0x30
   36734:	sbc	r5, r1, #0
   36738:	cmp	sl, ip
   3673c:	str	r0, [sp, #28]
   36740:	beq	36764 <flatcc_json_parser_double@@Base+0x45c>
   36744:	ldrb	r0, [r6, #2]
   36748:	mov	r8, r5
   3674c:	add	r1, ip, #1
   36750:	sub	r5, r0, #48	; 0x30
   36754:	uxtb	r5, r5
   36758:	cmp	r5, #10
   3675c:	mov	r5, r8
   36760:	bcc	366f0 <flatcc_json_parser_double@@Base+0x3e8>
   36764:	ldr	r8, [sp, #16]
   36768:	ldr	sl, [sp, #12]
   3676c:	sub	r0, r3, #1
   36770:	add	r7, r6, #2
   36774:	sub	r3, r0, ip
   36778:	ldr	r6, [sp, #8]
   3677c:	cmp	r7, r4
   36780:	bne	367e4 <flatcc_json_parser_double@@Base+0x4dc>
   36784:	b	36ae4 <flatcc_json_parser_double@@Base+0x7dc>
   36788:	mov	r7, r6
   3678c:	cmp	r7, r4
   36790:	bne	367e4 <flatcc_json_parser_double@@Base+0x4dc>
   36794:	b	36ae4 <flatcc_json_parser_double@@Base+0x7dc>
   36798:	ldr	sl, [sp, #12]
   3679c:	ldr	r8, [sp, #16]
   367a0:	add	r1, r7, ip
   367a4:	sub	r3, r3, ip
   367a8:	add	r7, r1, #1
   367ac:	cmp	sl, #0
   367b0:	bne	367d8 <flatcc_json_parser_double@@Base+0x4d0>
   367b4:	ldr	r6, [sp, #28]
   367b8:	uxtb	r0, r0
   367bc:	mov	sl, #1
   367c0:	adds	r1, r6, #1
   367c4:	adc	ip, r5, #0
   367c8:	cmp	r0, #52	; 0x34
   367cc:	movhi	r6, r1
   367d0:	movhi	r5, ip
   367d4:	str	r6, [sp, #28]
   367d8:	ldr	r6, [sp, #8]
   367dc:	cmp	r7, r4
   367e0:	beq	36ae4 <flatcc_json_parser_double@@Base+0x7dc>
   367e4:	sub	r0, r7, r6
   367e8:	add	r8, r0, r8
   367ec:	ldrb	r0, [r7]
   367f0:	cmp	r0, #48	; 0x30
   367f4:	bne	3680c <flatcc_json_parser_double@@Base+0x504>
   367f8:	add	r7, r7, #1
   367fc:	add	r3, r3, #1
   36800:	cmp	r4, r7
   36804:	bne	367ec <flatcc_json_parser_double@@Base+0x4e4>
   36808:	b	36848 <flatcc_json_parser_double@@Base+0x540>
   3680c:	sub	r0, r0, #49	; 0x31
   36810:	uxtb	r0, r0
   36814:	cmp	r0, #8
   36818:	bhi	36848 <flatcc_json_parser_double@@Base+0x540>
   3681c:	add	r0, r7, #1
   36820:	mov	sl, #1
   36824:	mov	r7, r0
   36828:	cmp	r4, r0
   3682c:	beq	36848 <flatcc_json_parser_double@@Base+0x540>
   36830:	mov	r0, r7
   36834:	ldrb	r1, [r0], #1
   36838:	sub	r1, r1, #48	; 0x30
   3683c:	uxtb	r1, r1
   36840:	cmp	r1, #10
   36844:	bcc	36824 <flatcc_json_parser_double@@Base+0x51c>
   36848:	cmp	r7, r4
   3684c:	beq	36ae4 <flatcc_json_parser_double@@Base+0x7dc>
   36850:	ldrb	r0, [r7]
   36854:	mov	ip, #0
   36858:	orr	r0, r0, #32
   3685c:	cmp	r0, #101	; 0x65
   36860:	bne	36880 <flatcc_json_parser_double@@Base+0x578>
   36864:	sub	r0, r4, r7
   36868:	cmp	r0, #2
   3686c:	bge	368f8 <flatcc_json_parser_double@@Base+0x5f0>
   36870:	mov	r2, #0
   36874:	mov	r0, r2
   36878:	sub	sp, fp, #28
   3687c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36880:	mov	r0, #0
   36884:	cmp	r7, r4
   36888:	mov	r2, #0
   3688c:	beq	36ae4 <flatcc_json_parser_double@@Base+0x7dc>
   36890:	ldr	r1, [sp, #28]
   36894:	cmp	ip, #0
   36898:	vmov.i32	d16, #0	; 0x00000000
   3689c:	rsbne	r0, r0, #0
   368a0:	orrs	r1, r1, r5
   368a4:	beq	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   368a8:	add	r1, r8, r3
   368ac:	add	r4, r1, r0
   368b0:	cmn	r4, #324	; 0x144
   368b4:	blt	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   368b8:	movw	r0, #310	; 0x136
   368bc:	cmp	r4, r0
   368c0:	ble	3692c <flatcc_json_parser_double@@Base+0x624>
   368c4:	vldr	d16, [pc, #988]	; 36ca8 <flatcc_json_parser_double@@Base+0x9a0>
   368c8:	ldr	r0, [sp, #24]
   368cc:	vstr	d16, [r0]
   368d0:	ldr	r0, [sp, #20]
   368d4:	cmp	r0, #0
   368d8:	ldrne	r0, [sp, #24]
   368dc:	vldrne	d16, [r0]
   368e0:	vnegne.f64	d16, d16
   368e4:	vstrne	d16, [r0]
   368e8:	mov	r2, r7
   368ec:	mov	r0, r2
   368f0:	sub	sp, fp, #28
   368f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   368f8:	mov	r1, r7
   368fc:	ldrb	r0, [r1, #1]!
   36900:	cmp	r0, #45	; 0x2d
   36904:	beq	36a24 <flatcc_json_parser_double@@Base+0x71c>
   36908:	mov	ip, #0
   3690c:	cmp	r0, #43	; 0x2b
   36910:	bne	36a34 <flatcc_json_parser_double@@Base+0x72c>
   36914:	add	r1, r7, #2
   36918:	mov	r2, #0
   3691c:	cmp	r1, r4
   36920:	beq	36ae4 <flatcc_json_parser_double@@Base+0x7dc>
   36924:	mov	ip, #0
   36928:	b	36a34 <flatcc_json_parser_double@@Base+0x72c>
   3692c:	mov	r0, #0
   36930:	cmp	r0, r5, lsr #21
   36934:	bne	36a94 <flatcc_json_parser_double@@Base+0x78c>
   36938:	cmp	r4, #22
   3693c:	bhi	36a94 <flatcc_json_parser_double@@Base+0x78c>
   36940:	ldr	r0, [sp, #28]
   36944:	mov	r1, r5
   36948:	bl	45e48 <flatcc_json_printer_clear@@Base+0x4e4>
   3694c:	sub	r2, r4, r8
   36950:	vmov	d16, r0, r1
   36954:	add	r0, r2, #22
   36958:	cmp	r0, #44	; 0x2c
   3695c:	bhi	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36960:	add	r1, pc, #0
   36964:	ldr	pc, [r1, r0, lsl #2]
   36968:	andeq	r6, r3, ip, lsl sl
   3696c:	strdeq	r6, [r3], -r0
   36970:	strdeq	r6, [r3], -r8
   36974:	andeq	r6, r3, r0, lsl #22
   36978:	andeq	r6, r3, r8, lsl #22
   3697c:	andeq	r6, r3, r0, lsl fp
   36980:	andeq	r6, r3, r8, lsl fp
   36984:	andeq	r6, r3, r0, lsr #22
   36988:	andeq	r6, r3, r8, lsr #22
   3698c:	andeq	r6, r3, r0, lsr fp
   36990:	andeq	r6, r3, r8, lsr fp
   36994:	andeq	r6, r3, r0, asr #22
   36998:	andeq	r6, r3, r8, asr #22
   3699c:	andeq	r6, r3, r0, asr fp
   369a0:	andeq	r6, r3, r8, asr fp
   369a4:	andeq	r6, r3, r0, ror #22
   369a8:	andeq	r6, r3, r8, ror #22
   369ac:	andeq	r6, r3, r0, ror fp
   369b0:	andeq	r6, r3, r8, ror fp
   369b4:	andeq	r6, r3, r0, lsl #23
   369b8:	andeq	r6, r3, r8, lsl #23
   369bc:	muleq	r3, r0, fp
   369c0:	andeq	r6, r3, r8, asr #17
   369c4:	muleq	r3, ip, fp
   369c8:	andeq	r6, r3, r8, lsr #23
   369cc:			; <UNDEFINED> instruction: 0x00036bb4
   369d0:	andeq	r6, r3, r0, asr #23
   369d4:	andeq	r6, r3, ip, asr #23
   369d8:	ldrdeq	r6, [r3], -r8
   369dc:	andeq	r6, r3, r4, ror #23
   369e0:	strdeq	r6, [r3], -r0
   369e4:	strdeq	r6, [r3], -ip
   369e8:	andeq	r6, r3, r8, lsl #24
   369ec:	andeq	r6, r3, r4, lsl ip
   369f0:	andeq	r6, r3, r0, lsr #24
   369f4:	andeq	r6, r3, ip, lsr #24
   369f8:	andeq	r6, r3, r8, lsr ip
   369fc:	andeq	r6, r3, r4, asr #24
   36a00:	andeq	r6, r3, r0, asr ip
   36a04:	andeq	r6, r3, ip, asr ip
   36a08:	andeq	r6, r3, r8, ror #24
   36a0c:	andeq	r6, r3, r4, ror ip
   36a10:	andeq	r6, r3, r0, lsl #25
   36a14:	andeq	r6, r3, ip, lsl #25
   36a18:	muleq	r3, r8, ip
   36a1c:	vldr	d17, [pc, #812]	; 36d50 <flatcc_json_parser_double@@Base+0xa48>
   36a20:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36a24:	add	r1, r7, #2
   36a28:	mov	ip, #1
   36a2c:	cmp	r1, r4
   36a30:	beq	36ae0 <flatcc_json_parser_double@@Base+0x7d8>
   36a34:	ldrb	r0, [r1]
   36a38:	mov	r7, r5
   36a3c:	mov	r2, #0
   36a40:	sub	r0, r0, #48	; 0x30
   36a44:	uxtb	r5, r0
   36a48:	cmp	r5, #9
   36a4c:	bhi	36ae4 <flatcc_json_parser_double@@Base+0x7dc>
   36a50:	mov	r5, r7
   36a54:	add	r7, r1, #1
   36a58:	cmp	r1, lr
   36a5c:	beq	36884 <flatcc_json_parser_double@@Base+0x57c>
   36a60:	ldrb	r1, [r7]
   36a64:	sub	r2, r1, #48	; 0x30
   36a68:	uxtb	r2, r2
   36a6c:	cmp	r2, #9
   36a70:	bhi	36884 <flatcc_json_parser_double@@Base+0x57c>
   36a74:	cmp	r0, #32768	; 0x8000
   36a78:	add	r7, r7, #1
   36a7c:	addlt	r0, r0, r0, lsl #2
   36a80:	addlt	r0, r1, r0, lsl #1
   36a84:	sublt	r0, r0, #48	; 0x30
   36a88:	cmp	r4, r7
   36a8c:	bne	36a60 <flatcc_json_parser_double@@Base+0x758>
   36a90:	b	36884 <flatcc_json_parser_double@@Base+0x57c>
   36a94:	ldr	r0, [sp, #24]
   36a98:	mov	r1, r5
   36a9c:	mov	r2, r4
   36aa0:	mov	r3, r8
   36aa4:	str	sl, [sp]
   36aa8:	str	r0, [sp, #4]
   36aac:	ldr	r0, [sp, #28]
   36ab0:	bl	342e0 <grisu3_diy_fp_encode_double@@Base>
   36ab4:	cmp	r0, #0
   36ab8:	bne	368d0 <flatcc_json_parser_double@@Base+0x5c8>
   36abc:	add	r1, sp, #32
   36ac0:	mov	r0, r9
   36ac4:	bl	14f08 <strtod@plt>
   36ac8:	ldr	r0, [sp, #24]
   36acc:	vstr	d0, [r0]
   36ad0:	ldr	r0, [sp, #32]
   36ad4:	cmp	r0, r7
   36ad8:	movcc	r7, r0
   36adc:	b	368e8 <flatcc_json_parser_double@@Base+0x5e0>
   36ae0:	mov	r2, #0
   36ae4:	mov	r0, r2
   36ae8:	sub	sp, fp, #28
   36aec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36af0:	vldr	d17, [pc, #440]	; 36cb0 <flatcc_json_parser_double@@Base+0x9a8>
   36af4:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36af8:	vldr	d17, [pc, #440]	; 36cb8 <flatcc_json_parser_double@@Base+0x9b0>
   36afc:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b00:	vldr	d17, [pc, #440]	; 36cc0 <flatcc_json_parser_double@@Base+0x9b8>
   36b04:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b08:	vldr	d17, [pc, #440]	; 36cc8 <flatcc_json_parser_double@@Base+0x9c0>
   36b0c:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b10:	vldr	d17, [pc, #440]	; 36cd0 <flatcc_json_parser_double@@Base+0x9c8>
   36b14:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b18:	vldr	d17, [pc, #440]	; 36cd8 <flatcc_json_parser_double@@Base+0x9d0>
   36b1c:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b20:	vldr	d17, [pc, #440]	; 36ce0 <flatcc_json_parser_double@@Base+0x9d8>
   36b24:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b28:	vldr	d17, [pc, #440]	; 36ce8 <flatcc_json_parser_double@@Base+0x9e0>
   36b2c:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b30:	vldr	d17, [pc, #440]	; 36cf0 <flatcc_json_parser_double@@Base+0x9e8>
   36b34:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b38:	vldr	d17, [pc, #440]	; 36cf8 <flatcc_json_parser_double@@Base+0x9f0>
   36b3c:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b40:	vldr	d17, [pc, #440]	; 36d00 <flatcc_json_parser_double@@Base+0x9f8>
   36b44:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b48:	vldr	d17, [pc, #440]	; 36d08 <flatcc_json_parser_double@@Base+0xa00>
   36b4c:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b50:	vldr	d17, [pc, #440]	; 36d10 <flatcc_json_parser_double@@Base+0xa08>
   36b54:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b58:	vldr	d17, [pc, #440]	; 36d18 <flatcc_json_parser_double@@Base+0xa10>
   36b5c:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b60:	vldr	d17, [pc, #440]	; 36d20 <flatcc_json_parser_double@@Base+0xa18>
   36b64:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b68:	vldr	d17, [pc, #440]	; 36d28 <flatcc_json_parser_double@@Base+0xa20>
   36b6c:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b70:	vldr	d17, [pc, #440]	; 36d30 <flatcc_json_parser_double@@Base+0xa28>
   36b74:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b78:	vldr	d17, [pc, #440]	; 36d38 <flatcc_json_parser_double@@Base+0xa30>
   36b7c:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b80:	vldr	d17, [pc, #440]	; 36d40 <flatcc_json_parser_double@@Base+0xa38>
   36b84:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b88:	vldr	d17, [pc, #440]	; 36d48 <flatcc_json_parser_double@@Base+0xa40>
   36b8c:	b	36b94 <flatcc_json_parser_double@@Base+0x88c>
   36b90:	vmov.f64	d17, #36	; 0x41200000  10.0
   36b94:	vdiv.f64	d16, d16, d17
   36b98:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36b9c:	vmov.f64	d17, #36	; 0x41200000  10.0
   36ba0:	vmul.f64	d16, d16, d17
   36ba4:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36ba8:	vldr	d17, [pc, #408]	; 36d48 <flatcc_json_parser_double@@Base+0xa40>
   36bac:	vmul.f64	d16, d16, d17
   36bb0:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36bb4:	vldr	d17, [pc, #388]	; 36d40 <flatcc_json_parser_double@@Base+0xa38>
   36bb8:	vmul.f64	d16, d16, d17
   36bbc:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36bc0:	vldr	d17, [pc, #368]	; 36d38 <flatcc_json_parser_double@@Base+0xa30>
   36bc4:	vmul.f64	d16, d16, d17
   36bc8:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36bcc:	vldr	d17, [pc, #348]	; 36d30 <flatcc_json_parser_double@@Base+0xa28>
   36bd0:	vmul.f64	d16, d16, d17
   36bd4:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36bd8:	vldr	d17, [pc, #328]	; 36d28 <flatcc_json_parser_double@@Base+0xa20>
   36bdc:	vmul.f64	d16, d16, d17
   36be0:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36be4:	vldr	d17, [pc, #308]	; 36d20 <flatcc_json_parser_double@@Base+0xa18>
   36be8:	vmul.f64	d16, d16, d17
   36bec:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36bf0:	vldr	d17, [pc, #288]	; 36d18 <flatcc_json_parser_double@@Base+0xa10>
   36bf4:	vmul.f64	d16, d16, d17
   36bf8:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36bfc:	vldr	d17, [pc, #268]	; 36d10 <flatcc_json_parser_double@@Base+0xa08>
   36c00:	vmul.f64	d16, d16, d17
   36c04:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c08:	vldr	d17, [pc, #248]	; 36d08 <flatcc_json_parser_double@@Base+0xa00>
   36c0c:	vmul.f64	d16, d16, d17
   36c10:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c14:	vldr	d17, [pc, #228]	; 36d00 <flatcc_json_parser_double@@Base+0x9f8>
   36c18:	vmul.f64	d16, d16, d17
   36c1c:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c20:	vldr	d17, [pc, #208]	; 36cf8 <flatcc_json_parser_double@@Base+0x9f0>
   36c24:	vmul.f64	d16, d16, d17
   36c28:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c2c:	vldr	d17, [pc, #188]	; 36cf0 <flatcc_json_parser_double@@Base+0x9e8>
   36c30:	vmul.f64	d16, d16, d17
   36c34:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c38:	vldr	d17, [pc, #168]	; 36ce8 <flatcc_json_parser_double@@Base+0x9e0>
   36c3c:	vmul.f64	d16, d16, d17
   36c40:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c44:	vldr	d17, [pc, #148]	; 36ce0 <flatcc_json_parser_double@@Base+0x9d8>
   36c48:	vmul.f64	d16, d16, d17
   36c4c:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c50:	vldr	d17, [pc, #128]	; 36cd8 <flatcc_json_parser_double@@Base+0x9d0>
   36c54:	vmul.f64	d16, d16, d17
   36c58:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c5c:	vldr	d17, [pc, #108]	; 36cd0 <flatcc_json_parser_double@@Base+0x9c8>
   36c60:	vmul.f64	d16, d16, d17
   36c64:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c68:	vldr	d17, [pc, #88]	; 36cc8 <flatcc_json_parser_double@@Base+0x9c0>
   36c6c:	vmul.f64	d16, d16, d17
   36c70:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c74:	vldr	d17, [pc, #68]	; 36cc0 <flatcc_json_parser_double@@Base+0x9b8>
   36c78:	vmul.f64	d16, d16, d17
   36c7c:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c80:	vldr	d17, [pc, #48]	; 36cb8 <flatcc_json_parser_double@@Base+0x9b0>
   36c84:	vmul.f64	d16, d16, d17
   36c88:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c8c:	vldr	d17, [pc, #28]	; 36cb0 <flatcc_json_parser_double@@Base+0x9a8>
   36c90:	vmul.f64	d16, d16, d17
   36c94:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36c98:	vldr	d17, [pc, #176]	; 36d50 <flatcc_json_parser_double@@Base+0xa48>
   36c9c:	vmul.f64	d16, d16, d17
   36ca0:	b	368c8 <flatcc_json_parser_double@@Base+0x5c0>
   36ca4:	nop	{0}
   36ca8:	andeq	r0, r0, r0
   36cac:	svcvc	0x00f00000	; IMB
   36cb0:	usatle	lr, #2, r0, asr #30
   36cb4:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   36cb8:	ldmvc	r5!, {r6, sl, fp, pc}
   36cbc:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   36cc0:	addsvs	r3, r1, r0, lsl #26
   36cc4:	mvnmi	r5, #228, 16	; 0xe40000
   36cc8:	strbvs	ip, [lr, -r0, lsl #16]
   36ccc:			; <UNDEFINED> instruction: 0x43abc16d
   36cd0:	ldrbhi	sl, [r8]
   36cd4:	cmnmi	r6, #1459617792	; 0x57000000
   36cd8:	strbcc	r8, [r0, r0]!
   36cdc:	movtmi	ip, #4985	; 0x1379
   36ce0:	ldrtcs	r0, [r4], -r0
   36ce4:	movwmi	r6, #52213	; 0xcbf5
   36ce8:	cdpne	0, 9, cr0, cr0, cr0, {0}
   36cec:	sbcsmi	fp, r6, #196, 24	; 0xc400
   36cf0:	strb	r0, [r0, #-0]
   36cf4:	adcmi	r3, r2, #156	; 0x9c
   36cf8:	andge	r0, r0, #0
   36cfc:	rsbmi	r1, sp, #148, 20	; 0x94000
   36d00:	stmda	r0, {}	; <UNPREDICTABLE>
   36d04:	eorsmi	r4, r7, #7733248	; 0x760000
   36d08:	andcs	r0, r0, r0
   36d0c:	andmi	sl, r2, #95	; 0x5f
   36d10:	andeq	r0, r0, r0
   36d14:	bicmi	ip, sp, r5, ror #26
   36d18:	andeq	r0, r0, r0
   36d1c:	orrsmi	sp, r7, r4, lsl #15
   36d20:	andeq	r0, r0, r0
   36d24:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   36d28:	andeq	r0, r0, r0
   36d2c:	smlawbmi	lr, r0, r4, r8
   36d30:	andeq	r0, r0, r0
   36d34:	rscsmi	r6, r8, r0, lsl #20
   36d38:	andeq	r0, r0, r0
   36d3c:	sbcmi	r8, r3, r0, lsl #16
   36d40:	andeq	r0, r0, r0
   36d44:	addmi	r4, pc, r0
   36d48:	andeq	r0, r0, r0
   36d4c:	subsmi	r0, r9, r0
   36d50:			; <UNDEFINED> instruction: 0x064dd592
   36d54:	strmi	pc, [r0], #207	; 0xcf

00036d58 <flatcc_json_parser_float@@Base>:
   36d58:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   36d5c:	add	fp, sp, #24
   36d60:	vpush	{d8-d9}
   36d64:	sub	sp, sp, #8
   36d68:	mov	r8, r0
   36d6c:	mov	r0, #0
   36d70:	mov	r6, r1
   36d74:	cmp	r1, r2
   36d78:	str	r0, [r3]
   36d7c:	beq	36e40 <flatcc_json_parser_float@@Base+0xe8>
   36d80:	mov	r0, r6
   36d84:	mov	r5, r2
   36d88:	mov	r7, r3
   36d8c:	ldrb	r1, [r0], #1
   36d90:	cmp	r1, #45	; 0x2d
   36d94:	movne	r0, r6
   36d98:	sub	r2, r2, r0
   36d9c:	cmp	r2, #2
   36da0:	blt	36dcc <flatcc_json_parser_float@@Base+0x74>
   36da4:	sub	r1, r1, #45	; 0x2d
   36da8:	clz	r1, r1
   36dac:	lsr	r1, r1, #5
   36db0:	ldrb	r1, [r6, r1]
   36db4:	cmp	r1, #46	; 0x2e
   36db8:	beq	36e54 <flatcc_json_parser_float@@Base+0xfc>
   36dbc:	cmp	r1, #48	; 0x30
   36dc0:	ldrbeq	r0, [r0, #1]
   36dc4:	cmpeq	r0, #48	; 0x30
   36dc8:	beq	36e54 <flatcc_json_parser_float@@Base+0xfc>
   36dcc:	sub	r1, r5, r6
   36dd0:	mov	r2, sp
   36dd4:	mov	r0, r6
   36dd8:	bl	36400 <flatcc_json_parser_double@@Base+0xf8>
   36ddc:	vldr	d16, [sp]
   36de0:	mov	r4, r0
   36de4:	add	r0, pc, #176	; 0xb0
   36de8:	vcmpe.f64	d16, #0.0
   36dec:	vcvt.f32.f64	s16, d16
   36df0:	vmrs	APSR_nzcv, fpscr
   36df4:	vmov.f32	s0, s16
   36df8:	addmi	r0, r0, #4
   36dfc:	vldr	s18, [r0]
   36e00:	bl	14e78 <__isinff@plt>
   36e04:	cmp	r0, #0
   36e08:	movne	r4, r6
   36e0c:	vseleq.f32	s0, s16, s18
   36e10:	cmp	r4, #0
   36e14:	vstr	s0, [r7]
   36e18:	cmpne	r4, r6
   36e1c:	bne	36e44 <flatcc_json_parser_float@@Base+0xec>
   36e20:	bl	14e78 <__isinff@plt>
   36e24:	ldr	r1, [r8, #20]
   36e28:	cmp	r0, #0
   36e2c:	beq	36e64 <flatcc_json_parser_float@@Base+0x10c>
   36e30:	cmp	r1, #0
   36e34:	bne	36e88 <flatcc_json_parser_float@@Base+0x130>
   36e38:	mov	r0, #7
   36e3c:	b	36e70 <flatcc_json_parser_float@@Base+0x118>
   36e40:	mov	r4, r6
   36e44:	mov	r0, r4
   36e48:	sub	sp, fp, #40	; 0x28
   36e4c:	vpop	{d8-d9}
   36e50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   36e54:	ldr	r0, [r8, #20]
   36e58:	cmp	r0, #0
   36e5c:	bne	36e88 <flatcc_json_parser_float@@Base+0x130>
   36e60:	b	36e6c <flatcc_json_parser_float@@Base+0x114>
   36e64:	cmp	r1, #0
   36e68:	bne	36e88 <flatcc_json_parser_float@@Base+0x130>
   36e6c:	mov	r0, #6
   36e70:	str	r6, [r8, #32]
   36e74:	add	r2, r6, #1
   36e78:	ldr	r1, [r8, #4]
   36e7c:	sub	r1, r2, r1
   36e80:	str	r1, [r8, #16]
   36e84:	str	r0, [r8, #20]
   36e88:	mov	r4, r5
   36e8c:	mov	r0, r4
   36e90:	sub	sp, fp, #40	; 0x28
   36e94:	vpop	{d8-d9}
   36e98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   36e9c:	svcvc	0x00800000
   36ea0:			; <UNDEFINED> instruction: 0xff800000

00036ea4 <flatcc_json_parser_integer@@Base>:
   36ea4:	push	{r4, r5, r6, r7, fp, lr}
   36ea8:	add	fp, sp, #16
   36eac:	mov	ip, r1
   36eb0:	cmp	r1, r2
   36eb4:	beq	36fa0 <flatcc_json_parser_integer@@Base+0xfc>
   36eb8:	ldrb	r1, [ip]
   36ebc:	mov	r4, #0
   36ec0:	sub	r1, r1, #45	; 0x2d
   36ec4:	clz	r1, r1
   36ec8:	lsr	r1, r1, #5
   36ecc:	str	r1, [r3]
   36ed0:	add	r1, ip, r1
   36ed4:	cmp	r1, r2
   36ed8:	beq	36f8c <flatcc_json_parser_integer@@Base+0xe8>
   36edc:	mov	lr, #10
   36ee0:	mov	r5, #0
   36ee4:	ldrb	r6, [r1]
   36ee8:	sub	r7, r6, #48	; 0x30
   36eec:	uxtb	r7, r7
   36ef0:	cmp	r7, #9
   36ef4:	bhi	36fa8 <flatcc_json_parser_integer@@Base+0x104>
   36ef8:	add	r7, r5, r5, lsl #2
   36efc:	lsl	r7, r7, #1
   36f00:	umlal	r6, r7, r4, lr
   36f04:	subs	r6, r6, #48	; 0x30
   36f08:	sbc	r7, r7, #0
   36f0c:	subs	r4, r6, r4
   36f10:	sbcs	r4, r7, r5
   36f14:	bcc	36fb8 <flatcc_json_parser_integer@@Base+0x114>
   36f18:	add	r1, r1, #1
   36f1c:	mov	r4, r6
   36f20:	mov	r5, r7
   36f24:	cmp	r2, r1
   36f28:	bne	36ee4 <flatcc_json_parser_integer@@Base+0x40>
   36f2c:	mov	r3, #0
   36f30:	mov	r1, r2
   36f34:	mov	r4, r6
   36f38:	mov	r5, r7
   36f3c:	cmp	r1, ip
   36f40:	beq	36fa0 <flatcc_json_parser_integer@@Base+0xfc>
   36f44:	cmp	r3, #0
   36f48:	beq	36fd4 <flatcc_json_parser_integer@@Base+0x130>
   36f4c:	ldrb	r3, [r1]
   36f50:	cmp	r3, #46	; 0x2e
   36f54:	cmpne	r3, #101	; 0x65
   36f58:	bne	36fcc <flatcc_json_parser_integer@@Base+0x128>
   36f5c:	ldr	r3, [r0, #20]
   36f60:	cmp	r3, #0
   36f64:	bne	36fc4 <flatcc_json_parser_integer@@Base+0x120>
   36f68:	str	r1, [r0, #32]
   36f6c:	add	r1, r1, #1
   36f70:	mov	r3, #12
   36f74:	ldr	r7, [r0, #4]
   36f78:	sub	r1, r1, r7
   36f7c:	str	r1, [r0, #16]
   36f80:	str	r3, [r0, #20]
   36f84:	mov	r0, r2
   36f88:	pop	{r4, r5, r6, r7, fp, pc}
   36f8c:	mov	r1, r2
   36f90:	mov	r5, #0
   36f94:	mov	r3, #0
   36f98:	cmp	r1, ip
   36f9c:	bne	36f44 <flatcc_json_parser_integer@@Base+0xa0>
   36fa0:	mov	r0, ip
   36fa4:	pop	{r4, r5, r6, r7, fp, pc}
   36fa8:	mov	r3, #1
   36fac:	cmp	r1, ip
   36fb0:	bne	36f44 <flatcc_json_parser_integer@@Base+0xa0>
   36fb4:	b	36fa0 <flatcc_json_parser_integer@@Base+0xfc>
   36fb8:	ldr	r7, [r0, #20]
   36fbc:	cmp	r7, #0
   36fc0:	beq	36fe8 <flatcc_json_parser_integer@@Base+0x144>
   36fc4:	mov	r0, r2
   36fc8:	pop	{r4, r5, r6, r7, fp, pc}
   36fcc:	cmp	r3, #69	; 0x45
   36fd0:	beq	36f5c <flatcc_json_parser_integer@@Base+0xb8>
   36fd4:	ldr	r0, [fp, #8]
   36fd8:	mov	ip, r1
   36fdc:	strd	r4, [r0]
   36fe0:	mov	r0, ip
   36fe4:	pop	{r4, r5, r6, r7, fp, pc}
   36fe8:	str	r1, [r0, #32]
   36fec:	cmp	r3, #0
   36ff0:	mov	r7, #8
   36ff4:	add	r1, r1, #1
   36ff8:	ldr	r3, [r0, #4]
   36ffc:	movweq	r7, #7
   37000:	sub	r1, r1, r3
   37004:	str	r1, [r0, #16]
   37008:	str	r7, [r0, #20]
   3700c:	mov	r0, r2
   37010:	pop	{r4, r5, r6, r7, fp, pc}

00037014 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   37014:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37018:	add	fp, sp, #28
   3701c:	sub	sp, sp, #28
   37020:	ldr	r9, [fp, #8]
   37024:	mov	r6, r3
   37028:	mov	r4, r2
   3702c:	mov	r5, r0
   37030:	cmp	r1, r2
   37034:	beq	3707c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   37038:	ldrb	r0, [r1]
   3703c:	cmp	r0, #34	; 0x22
   37040:	bne	3707c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   37044:	add	sl, r1, #1
   37048:	cmp	sl, r4
   3704c:	beq	37088 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x74>
   37050:	mov	r7, sl
   37054:	ldrb	r1, [r7]
   37058:	cmp	r1, #32
   3705c:	bcc	372cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b8>
   37060:	cmp	r1, #34	; 0x22
   37064:	cmpne	r1, #92	; 0x5c
   37068:	beq	3712c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x118>
   3706c:	add	r7, r7, #1
   37070:	cmp	r4, r7
   37074:	bne	37054 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
   37078:	b	37088 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x74>
   3707c:	ldr	r0, [r5, #20]
   37080:	cmp	r0, #0
   37084:	beq	3709c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x88>
   37088:	ldr	r0, [r5, #20]
   3708c:	cmp	r0, #0
   37090:	mov	r0, r4
   37094:	bne	370e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   37098:	b	370c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xb4>
   3709c:	str	r1, [r5, #32]
   370a0:	add	r1, r1, #1
   370a4:	mov	r0, #16
   370a8:	ldr	r2, [r5, #4]
   370ac:	sub	r1, r1, r2
   370b0:	str	r1, [r5, #16]
   370b4:	str	r0, [r5, #20]
   370b8:	ldr	r0, [r5, #20]
   370bc:	cmp	r0, #0
   370c0:	mov	r0, r4
   370c4:	bne	370e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   370c8:	str	r4, [r5, #32]
   370cc:	mov	r0, #20
   370d0:	add	r2, r4, #1
   370d4:	ldr	r1, [r5, #4]
   370d8:	sub	r1, r2, r1
   370dc:	str	r1, [r5, #16]
   370e0:	str	r0, [r5, #20]
   370e4:	mov	r0, r4
   370e8:	mov	r1, #0
   370ec:	str	r1, [r6]
   370f0:	ldr	r1, [r5, #20]
   370f4:	cmp	r1, #0
   370f8:	bne	37120 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   370fc:	str	r0, [r5, #32]
   37100:	mov	r1, #31
   37104:	cmp	r9, #0
   37108:	add	r0, r0, #1
   3710c:	ldr	r2, [r5, #4]
   37110:	movwne	r1, #32
   37114:	sub	r0, r0, r2
   37118:	str	r0, [r5, #16]
   3711c:	str	r1, [r5, #20]
   37120:	mov	r0, r4
   37124:	sub	sp, fp, #28
   37128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3712c:	cmp	r4, r7
   37130:	mov	r0, r4
   37134:	beq	370e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   37138:	cmp	r1, #34	; 0x22
   3713c:	bne	37168 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x154>
   37140:	sub	r1, r7, sl
   37144:	and	r0, r1, #3
   37148:	str	r1, [sp, #20]
   3714c:	lsr	r1, r1, #2
   37150:	add	r8, r1, r1, lsl #1
   37154:	cmp	r0, #2
   37158:	beq	37170 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x15c>
   3715c:	cmp	r0, #3
   37160:	addeq	r8, r8, #2
   37164:	b	37174 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x160>
   37168:	mov	r0, r7
   3716c:	b	370e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   37170:	add	r8, r8, #1
   37174:	ldr	r0, [r5]
   37178:	mov	r1, #1
   3717c:	mov	r2, #1
   37180:	mvn	r3, #0
   37184:	bl	2f718 <flatcc_builder_start_vector@@Base>
   37188:	cmp	r0, #0
   3718c:	beq	371cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   37190:	mov	r0, #0
   37194:	str	r0, [r6]
   37198:	ldr	r0, [r5, #20]
   3719c:	cmp	r0, #0
   371a0:	bne	37120 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   371a4:	mov	r0, #33	; 0x21
   371a8:	str	r7, [r5, #32]
   371ac:	add	r2, r7, #1
   371b0:	ldr	r1, [r5, #4]
   371b4:	sub	r1, r2, r1
   371b8:	str	r1, [r5, #16]
   371bc:	str	r0, [r5, #20]
   371c0:	mov	r0, r4
   371c4:	sub	sp, fp, #28
   371c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   371cc:	ldr	r0, [r5]
   371d0:	mov	r1, r8
   371d4:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   371d8:	cmp	r0, #0
   371dc:	beq	37190 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   371e0:	movw	r2, #45680	; 0xb270
   371e4:	mov	r1, r8
   371e8:	movw	r8, #45424	; 0xb170
   371ec:	str	r0, [sp]
   371f0:	str	r0, [sp, #12]
   371f4:	ldr	r0, [sp, #20]
   371f8:	cmp	r9, #0
   371fc:	add	lr, sp, #24
   37200:	mov	ip, sl
   37204:	movt	r2, #4
   37208:	movt	r8, #4
   3720c:	str	r1, [sp, #4]
   37210:	movne	r8, r2
   37214:	cmp	r1, #0
   37218:	mvneq	r1, #0
   3721c:	str	r1, [sp, #16]
   37220:	mov	r1, #0
   37224:	str	r0, [sp, #8]
   37228:	cmp	r0, r1
   3722c:	beq	372ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   37230:	ldrb	r2, [ip, r1]
   37234:	ldrb	r3, [r8, r2]
   37238:	cmp	r3, #64	; 0x40
   3723c:	strb	r3, [lr, r1]
   37240:	bcc	37258 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x244>
   37244:	cmp	r3, #65	; 0x41
   37248:	bne	37328 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x314>
   3724c:	sub	r1, r1, #1
   37250:	sub	r0, r0, #1
   37254:	add	ip, ip, #1
   37258:	add	r1, r1, #1
   3725c:	cmp	r1, #4
   37260:	bcc	37228 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x214>
   37264:	ldr	lr, [sp, #16]
   37268:	cmp	lr, #3
   3726c:	bcc	3731c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x308>
   37270:	ldrb	r2, [sp, #25]
   37274:	ldrb	r1, [sp, #24]
   37278:	subs	lr, lr, #3
   3727c:	sub	r0, r0, #4
   37280:	add	ip, ip, #4
   37284:	str	lr, [sp, #16]
   37288:	add	lr, sp, #24
   3728c:	lsr	r3, r2, #4
   37290:	orr	r1, r3, r1, lsl #2
   37294:	ldr	r3, [sp, #12]
   37298:	strb	r1, [r3]
   3729c:	ldrb	r1, [sp, #26]
   372a0:	lsr	r1, r1, #2
   372a4:	orr	r1, r1, r2, lsl #4
   372a8:	strb	r1, [r3, #1]
   372ac:	ldrb	r1, [sp, #26]
   372b0:	ldrb	r2, [sp, #27]
   372b4:	orr	r1, r2, r1, lsl #6
   372b8:	strb	r1, [r3, #2]
   372bc:	add	r3, r3, #3
   372c0:	str	r3, [sp, #12]
   372c4:	bne	37220 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20c>
   372c8:	b	373d8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   372cc:	ldr	r0, [r5, #20]
   372d0:	cmp	r0, #0
   372d4:	mov	r0, r4
   372d8:	bne	370e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   372dc:	str	r7, [r5, #32]
   372e0:	mov	r0, #17
   372e4:	add	r2, r7, #1
   372e8:	b	370d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   372ec:	mov	r1, r0
   372f0:	mov	r3, r0
   372f4:	ldr	r2, [sp, #16]
   372f8:	sub	r0, r0, r3
   372fc:	cmp	r1, #0
   37300:	beq	373d8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   37304:	cmp	r1, #3
   37308:	beq	37368 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x354>
   3730c:	cmp	r1, #2
   37310:	ldrbeq	r1, [sp, #25]
   37314:	tsteq	r1, #15
   37318:	beq	373c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3ac>
   3731c:	ldr	r0, [sp, #20]
   37320:	ldr	r1, [sp, #8]
   37324:	b	373e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3d4>
   37328:	cmp	r3, #66	; 0x42
   3732c:	bne	373a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x394>
   37330:	add	r2, r1, #1
   37334:	mov	r3, r2
   37338:	cmp	r2, r0
   3733c:	bcs	372f4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e0>
   37340:	cmp	r3, #7
   37344:	bhi	372f4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e0>
   37348:	ldrb	r2, [ip, r3]
   3734c:	ldrb	r2, [r8, r2]
   37350:	sub	r2, r2, #65	; 0x41
   37354:	uxtb	lr, r2
   37358:	add	r2, r3, #1
   3735c:	cmp	lr, #2
   37360:	bcc	37334 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x320>
   37364:	b	372f4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e0>
   37368:	cmp	r2, #2
   3736c:	bcc	3731c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x308>
   37370:	ldrb	r1, [sp, #26]
   37374:	ands	r2, r1, #3
   37378:	bne	3731c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x308>
   3737c:	ldrb	r3, [sp, #25]
   37380:	ldrb	ip, [sp, #24]
   37384:	lsl	r2, r3, #4
   37388:	orr	r1, r2, r1, lsr #2
   3738c:	ldr	r2, [sp, #12]
   37390:	strb	r1, [r2, #1]
   37394:	lsr	r1, r3, #4
   37398:	orr	r1, r1, ip, lsl #2
   3739c:	strb	r1, [r2]
   373a0:	add	r2, r2, #2
   373a4:	b	373d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c0>
   373a8:	mov	r3, r1
   373ac:	ldr	r2, [sp, #16]
   373b0:	sub	r0, r0, r3
   373b4:	cmp	r1, #0
   373b8:	bne	37304 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f0>
   373bc:	b	373d8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   373c0:	ldrb	r2, [sp, #24]
   373c4:	lsl	r2, r2, #2
   373c8:	orr	r1, r2, r1, lsr #4
   373cc:	ldr	r2, [sp, #12]
   373d0:	strb	r1, [r2], #1
   373d4:	str	r2, [sp, #12]
   373d8:	cmp	r0, #0
   373dc:	beq	373f4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3e0>
   373e0:	mov	r1, r0
   373e4:	ldr	r0, [sp, #20]
   373e8:	sub	r0, r0, r1
   373ec:	add	r0, sl, r0
   373f0:	b	370e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   373f4:	ldr	r0, [sp]
   373f8:	ldr	r1, [sp, #12]
   373fc:	sub	r0, r1, r0
   37400:	ldr	r1, [sp, #4]
   37404:	cmp	r1, r0
   37408:	bls	37420 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40c>
   3740c:	sub	r1, r1, r0
   37410:	ldr	r0, [r5]
   37414:	bl	2f54c <flatcc_builder_truncate_vector@@Base>
   37418:	cmp	r0, #0
   3741c:	bne	37190 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   37420:	ldr	r0, [r5]
   37424:	bl	30998 <flatcc_builder_end_vector@@Base>
   37428:	cmp	r0, #0
   3742c:	str	r0, [r6]
   37430:	beq	37190 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   37434:	ldrb	r0, [r7]
   37438:	cmp	r0, #34	; 0x22
   3743c:	bne	37450 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x43c>
   37440:	add	r4, r7, #1
   37444:	mov	r0, r4
   37448:	sub	sp, fp, #28
   3744c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37450:	ldr	r0, [r5, #20]
   37454:	cmp	r0, #0
   37458:	bne	37120 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   3745c:	mov	r0, #20
   37460:	b	371a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x194>

00037464 <flatcc_json_parser_build_string@@Base>:
   37464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37468:	add	fp, sp, #28
   3746c:	sub	sp, sp, #4
   37470:	mov	sl, r3
   37474:	mov	r4, r2
   37478:	mov	r5, r0
   3747c:	cmp	r1, r2
   37480:	beq	374dc <flatcc_json_parser_build_string@@Base+0x78>
   37484:	ldrb	r0, [r1]
   37488:	cmp	r0, #34	; 0x22
   3748c:	bne	374dc <flatcc_json_parser_build_string@@Base+0x78>
   37490:	add	r1, r1, #1
   37494:	mov	r6, r4
   37498:	cmp	r1, r4
   3749c:	beq	374ec <flatcc_json_parser_build_string@@Base+0x88>
   374a0:	mov	r6, r1
   374a4:	ldrb	r0, [r6]
   374a8:	cmp	r0, #32
   374ac:	bcc	37720 <flatcc_json_parser_build_string@@Base+0x2bc>
   374b0:	cmp	r0, #34	; 0x22
   374b4:	cmpne	r0, #92	; 0x5c
   374b8:	beq	37620 <flatcc_json_parser_build_string@@Base+0x1bc>
   374bc:	add	r6, r6, #1
   374c0:	cmp	r4, r6
   374c4:	bne	374a4 <flatcc_json_parser_build_string@@Base+0x40>
   374c8:	mov	r6, r1
   374cc:	ldr	r0, [r5, #20]
   374d0:	cmp	r0, #0
   374d4:	bne	37514 <flatcc_json_parser_build_string@@Base+0xb0>
   374d8:	b	374f8 <flatcc_json_parser_build_string@@Base+0x94>
   374dc:	ldr	r0, [r5, #20]
   374e0:	mov	r6, r4
   374e4:	cmp	r0, #0
   374e8:	beq	375f0 <flatcc_json_parser_build_string@@Base+0x18c>
   374ec:	ldr	r0, [r5, #20]
   374f0:	cmp	r0, #0
   374f4:	bne	37514 <flatcc_json_parser_build_string@@Base+0xb0>
   374f8:	str	r4, [r5, #32]
   374fc:	add	r2, r4, #1
   37500:	mov	r0, #20
   37504:	ldr	r1, [r5, #4]
   37508:	sub	r1, r2, r1
   3750c:	str	r1, [r5, #16]
   37510:	str	r0, [r5, #20]
   37514:	mov	r7, r4
   37518:	ldr	r0, [r5]
   3751c:	bl	2fb34 <flatcc_builder_start_string@@Base>
   37520:	cmp	r0, #0
   37524:	bne	37744 <flatcc_json_parser_build_string@@Base+0x2e0>
   37528:	ldr	r0, [r5]
   3752c:	sub	r2, r7, r6
   37530:	mov	r1, r6
   37534:	bl	2f3a4 <flatcc_builder_append_string@@Base>
   37538:	cmp	r0, #0
   3753c:	beq	37744 <flatcc_json_parser_build_string@@Base+0x2e0>
   37540:	cmp	r7, r4
   37544:	mov	r6, r4
   37548:	beq	376c4 <flatcc_json_parser_build_string@@Base+0x260>
   3754c:	mov	r8, sp
   37550:	add	r9, r8, #1
   37554:	ldrb	r0, [r7]
   37558:	cmp	r0, #34	; 0x22
   3755c:	beq	376c0 <flatcc_json_parser_build_string@@Base+0x25c>
   37560:	mov	r0, r5
   37564:	mov	r1, r7
   37568:	mov	r2, r4
   3756c:	mov	r3, r8
   37570:	bl	349c0 <flatcc_json_parser_string_escape@@Base>
   37574:	mov	r6, r0
   37578:	ldr	r0, [r5]
   3757c:	ldrb	r2, [sp]
   37580:	mov	r1, r9
   37584:	bl	2f3a4 <flatcc_builder_append_string@@Base>
   37588:	cmp	r0, #0
   3758c:	beq	37718 <flatcc_json_parser_build_string@@Base+0x2b4>
   37590:	cmp	r6, r4
   37594:	beq	3766c <flatcc_json_parser_build_string@@Base+0x208>
   37598:	mov	r7, r6
   3759c:	ldrb	r0, [r7]
   375a0:	cmp	r0, #32
   375a4:	bcc	3768c <flatcc_json_parser_build_string@@Base+0x228>
   375a8:	cmp	r0, #34	; 0x22
   375ac:	cmpne	r0, #92	; 0x5c
   375b0:	beq	375c4 <flatcc_json_parser_build_string@@Base+0x160>
   375b4:	add	r7, r7, #1
   375b8:	cmp	r4, r7
   375bc:	bne	3759c <flatcc_json_parser_build_string@@Base+0x138>
   375c0:	b	3766c <flatcc_json_parser_build_string@@Base+0x208>
   375c4:	cmp	r4, r7
   375c8:	beq	376b8 <flatcc_json_parser_build_string@@Base+0x254>
   375cc:	ldr	r0, [r5]
   375d0:	sub	r2, r7, r6
   375d4:	mov	r1, r6
   375d8:	bl	2f3a4 <flatcc_builder_append_string@@Base>
   375dc:	cmp	r0, #0
   375e0:	beq	37744 <flatcc_json_parser_build_string@@Base+0x2e0>
   375e4:	cmp	r4, r7
   375e8:	bne	37554 <flatcc_json_parser_build_string@@Base+0xf0>
   375ec:	b	376b8 <flatcc_json_parser_build_string@@Base+0x254>
   375f0:	str	r1, [r5, #32]
   375f4:	add	r1, r1, #1
   375f8:	mov	r0, #16
   375fc:	mov	r6, r4
   37600:	ldr	r2, [r5, #4]
   37604:	sub	r1, r1, r2
   37608:	str	r1, [r5, #16]
   3760c:	str	r0, [r5, #20]
   37610:	ldr	r0, [r5, #20]
   37614:	cmp	r0, #0
   37618:	bne	37514 <flatcc_json_parser_build_string@@Base+0xb0>
   3761c:	b	374f8 <flatcc_json_parser_build_string@@Base+0x94>
   37620:	cmp	r4, r6
   37624:	beq	3772c <flatcc_json_parser_build_string@@Base+0x2c8>
   37628:	cmp	r0, #34	; 0x22
   3762c:	bne	37664 <flatcc_json_parser_build_string@@Base+0x200>
   37630:	ldr	r0, [r5]
   37634:	sub	r2, r6, r1
   37638:	bl	31c7c <flatcc_builder_create_string@@Base>
   3763c:	cmp	r6, r4
   37640:	str	r0, [sl]
   37644:	beq	376d8 <flatcc_json_parser_build_string@@Base+0x274>
   37648:	ldrb	r0, [r6]
   3764c:	cmp	r0, #34	; 0x22
   37650:	bne	376d8 <flatcc_json_parser_build_string@@Base+0x274>
   37654:	add	r4, r6, #1
   37658:	mov	r0, r4
   3765c:	sub	sp, fp, #28
   37660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37664:	mov	r7, r6
   37668:	b	37730 <flatcc_json_parser_build_string@@Base+0x2cc>
   3766c:	ldr	r0, [r5, #20]
   37670:	mov	r6, r4
   37674:	cmp	r0, #0
   37678:	bne	376c4 <flatcc_json_parser_build_string@@Base+0x260>
   3767c:	str	r4, [r5, #32]
   37680:	mov	r0, #20
   37684:	add	r2, r4, #1
   37688:	b	376a8 <flatcc_json_parser_build_string@@Base+0x244>
   3768c:	ldr	r0, [r5, #20]
   37690:	mov	r6, r4
   37694:	cmp	r0, #0
   37698:	bne	376c4 <flatcc_json_parser_build_string@@Base+0x260>
   3769c:	str	r7, [r5, #32]
   376a0:	mov	r0, #17
   376a4:	add	r2, r7, #1
   376a8:	ldr	r1, [r5, #4]
   376ac:	sub	r1, r2, r1
   376b0:	str	r1, [r5, #16]
   376b4:	str	r0, [r5, #20]
   376b8:	mov	r6, r4
   376bc:	b	376c4 <flatcc_json_parser_build_string@@Base+0x260>
   376c0:	mov	r6, r7
   376c4:	ldr	r0, [r5]
   376c8:	bl	31de8 <flatcc_builder_end_string@@Base>
   376cc:	cmp	r6, r4
   376d0:	str	r0, [sl]
   376d4:	bne	37648 <flatcc_json_parser_build_string@@Base+0x1e4>
   376d8:	ldr	r0, [r5, #20]
   376dc:	cmp	r0, #0
   376e0:	beq	376f0 <flatcc_json_parser_build_string@@Base+0x28c>
   376e4:	mov	r0, r4
   376e8:	sub	sp, fp, #28
   376ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   376f0:	str	r6, [r5, #32]
   376f4:	add	r2, r6, #1
   376f8:	mov	r0, #20
   376fc:	ldr	r1, [r5, #4]
   37700:	sub	r1, r2, r1
   37704:	str	r1, [r5, #16]
   37708:	str	r0, [r5, #20]
   3770c:	mov	r0, r4
   37710:	sub	sp, fp, #28
   37714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37718:	mov	r4, r6
   3771c:	b	37748 <flatcc_json_parser_build_string@@Base+0x2e4>
   37720:	ldr	r0, [r5, #20]
   37724:	cmp	r0, #0
   37728:	beq	3775c <flatcc_json_parser_build_string@@Base+0x2f8>
   3772c:	mov	r7, r4
   37730:	mov	r6, r1
   37734:	ldr	r0, [r5]
   37738:	bl	2fb34 <flatcc_builder_start_string@@Base>
   3773c:	cmp	r0, #0
   37740:	beq	37528 <flatcc_json_parser_build_string@@Base+0xc4>
   37744:	mov	r4, r7
   37748:	mov	r0, #0
   3774c:	str	r0, [sl]
   37750:	mov	r0, r4
   37754:	sub	sp, fp, #28
   37758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3775c:	str	r6, [r5, #32]
   37760:	add	r3, r6, #1
   37764:	mov	r0, #17
   37768:	mov	r7, r4
   3776c:	ldr	r2, [r5, #4]
   37770:	sub	r2, r3, r2
   37774:	str	r2, [r5, #16]
   37778:	str	r0, [r5, #20]
   3777c:	b	37730 <flatcc_json_parser_build_string@@Base+0x2cc>

00037780 <flatcc_json_parser_prepare_unions@@Base>:
   37780:	push	{r4, r5, r6, r7, fp, lr}
   37784:	add	fp, sp, #16
   37788:	mov	r5, r1
   3778c:	mov	r6, r0
   37790:	add	r0, r3, r3, lsl #1
   37794:	mov	r1, #8
   37798:	mov	r7, r3
   3779c:	mov	r4, r2
   377a0:	add	r1, r1, r0, lsl #3
   377a4:	ldr	r0, [r6]
   377a8:	bl	2df68 <flatcc_builder_enter_user_frame@@Base>
   377ac:	mov	r1, r0
   377b0:	ldr	r0, [fp, #8]
   377b4:	cmp	r1, #0
   377b8:	str	r1, [r0]
   377bc:	beq	377d8 <flatcc_json_parser_prepare_unions@@Base+0x58>
   377c0:	ldr	r0, [r6]
   377c4:	bl	2e0f8 <flatcc_builder_get_user_frame_ptr@@Base>
   377c8:	mov	r4, r5
   377cc:	str	r7, [r0]
   377d0:	mov	r0, r4
   377d4:	pop	{r4, r5, r6, r7, fp, pc}
   377d8:	ldr	r0, [r6, #20]
   377dc:	cmp	r0, #0
   377e0:	beq	377ec <flatcc_json_parser_prepare_unions@@Base+0x6c>
   377e4:	mov	r0, r4
   377e8:	pop	{r4, r5, r6, r7, fp, pc}
   377ec:	str	r5, [r6, #32]
   377f0:	add	r2, r5, #1
   377f4:	mov	r0, #33	; 0x21
   377f8:	ldr	r1, [r6, #4]
   377fc:	sub	r1, r2, r1
   37800:	str	r1, [r6, #16]
   37804:	str	r0, [r6, #20]
   37808:	mov	r0, r4
   3780c:	pop	{r4, r5, r6, r7, fp, pc}

00037810 <flatcc_json_parser_finalize_unions@@Base>:
   37810:	push	{r4, r5, r6, r7, fp, lr}
   37814:	add	fp, sp, #16
   37818:	mov	r6, r0
   3781c:	ldr	r0, [r0]
   37820:	mov	r7, r1
   37824:	mov	r1, r3
   37828:	mov	r5, r3
   3782c:	mov	r4, r2
   37830:	bl	2e0f8 <flatcc_builder_get_user_frame_ptr@@Base>
   37834:	ldr	r0, [r0, #4]
   37838:	cmp	r0, #0
   3783c:	beq	3786c <flatcc_json_parser_finalize_unions@@Base+0x5c>
   37840:	ldr	r0, [r6, #20]
   37844:	cmp	r0, #0
   37848:	bne	37870 <flatcc_json_parser_finalize_unions@@Base+0x60>
   3784c:	str	r7, [r6, #32]
   37850:	add	r2, r7, #1
   37854:	mov	r0, #27
   37858:	ldr	r1, [r6, #4]
   3785c:	sub	r1, r2, r1
   37860:	str	r1, [r6, #16]
   37864:	str	r0, [r6, #20]
   37868:	b	37870 <flatcc_json_parser_finalize_unions@@Base+0x60>
   3786c:	mov	r4, r7
   37870:	ldr	r0, [r6]
   37874:	mov	r1, r5
   37878:	bl	2e074 <flatcc_builder_exit_user_frame_at@@Base>
   3787c:	mov	r0, r4
   37880:	pop	{r4, r5, r6, r7, fp, pc}

00037884 <flatcc_json_parser_union@@Base>:
   37884:	push	{r4, r5, r6, r7, fp, lr}
   37888:	add	fp, sp, #16
   3788c:	sub	sp, sp, #16
   37890:	mov	r6, r1
   37894:	mov	r5, r0
   37898:	ldr	r0, [r0]
   3789c:	ldr	r1, [fp, #12]
   378a0:	mov	r7, r3
   378a4:	mov	r4, r2
   378a8:	bl	2e0f8 <flatcc_builder_get_user_frame_ptr@@Base>
   378ac:	add	r2, r0, #8
   378b0:	add	r3, r7, r7, lsl #1
   378b4:	mov	r1, r2
   378b8:	ldr	r7, [r1, r3, lsl #3]!
   378bc:	cmp	r7, #0
   378c0:	beq	378f8 <flatcc_json_parser_union@@Base+0x74>
   378c4:	ldr	r0, [r5, #20]
   378c8:	cmp	r0, #0
   378cc:	bne	379c8 <flatcc_json_parser_union@@Base+0x144>
   378d0:	mov	r0, #28
   378d4:	str	r6, [r5, #32]
   378d8:	add	r2, r6, #1
   378dc:	ldr	r1, [r5, #4]
   378e0:	sub	r1, r2, r1
   378e4:	str	r1, [r5, #16]
   378e8:	str	r0, [r5, #20]
   378ec:	mov	r0, r4
   378f0:	sub	sp, fp, #16
   378f4:	pop	{r4, r5, r6, r7, fp, pc}
   378f8:	add	r2, r2, r3, lsl #3
   378fc:	ldrb	r3, [r2, #12]
   37900:	cmp	r3, #0
   37904:	beq	3797c <flatcc_json_parser_union@@Base+0xf8>
   37908:	ldrb	r3, [r2, #13]
   3790c:	cmp	r3, #0
   37910:	strb	r3, [sp, #8]
   37914:	beq	379bc <flatcc_json_parser_union@@Base+0x138>
   37918:	ldr	r1, [r0, #4]
   3791c:	ldr	r7, [fp, #16]
   37920:	mov	r2, r4
   37924:	sub	r1, r1, #1
   37928:	str	r1, [r0, #4]
   3792c:	add	r0, sp, #8
   37930:	mov	r1, r6
   37934:	add	r0, r0, #4
   37938:	str	r0, [sp]
   3793c:	mov	r0, r5
   37940:	blx	r7
   37944:	cmp	r0, r4
   37948:	beq	379c8 <flatcc_json_parser_union@@Base+0x144>
   3794c:	mov	r6, r0
   37950:	ldr	r1, [fp, #8]
   37954:	ldr	r0, [r5]
   37958:	ldr	r2, [sp, #8]
   3795c:	ldr	r3, [sp, #12]
   37960:	bl	30db0 <flatcc_builder_table_add_union@@Base>
   37964:	cmp	r0, #0
   37968:	bne	378c4 <flatcc_json_parser_union@@Base+0x40>
   3796c:	mov	r4, r6
   37970:	mov	r0, r4
   37974:	sub	sp, fp, #16
   37978:	pop	{r4, r5, r6, r7, fp, pc}
   3797c:	ldr	r3, [r0, #4]
   37980:	add	r3, r3, #1
   37984:	str	r3, [r0, #4]
   37988:	ldr	r0, [r5, #12]
   3798c:	str	r0, [r2, #8]
   37990:	ldr	r0, [r5, #4]
   37994:	str	r0, [r2, #4]
   37998:	str	r6, [r1]
   3799c:	mov	r0, r5
   379a0:	mov	r1, r6
   379a4:	mov	r2, r4
   379a8:	bl	35224 <flatcc_json_parser_generic_json@@Base>
   379ac:	mov	r4, r0
   379b0:	mov	r0, r4
   379b4:	sub	sp, fp, #16
   379b8:	pop	{r4, r5, r6, r7, fp, pc}
   379bc:	ldr	r0, [r5, #20]
   379c0:	cmp	r0, #0
   379c4:	beq	379d4 <flatcc_json_parser_union@@Base+0x150>
   379c8:	mov	r0, r4
   379cc:	sub	sp, fp, #16
   379d0:	pop	{r4, r5, r6, r7, fp, pc}
   379d4:	mov	r0, #25
   379d8:	b	378d4 <flatcc_json_parser_union@@Base+0x50>

000379dc <flatcc_json_parser_union_type@@Base>:
   379dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   379e0:	add	fp, sp, #28
   379e4:	sub	sp, sp, #20
   379e8:	mov	r8, r1
   379ec:	mov	r5, r0
   379f0:	ldr	r0, [r0]
   379f4:	ldr	r1, [fp, #12]
   379f8:	mov	r6, r3
   379fc:	mov	r4, r2
   37a00:	bl	2e0f8 <flatcc_builder_get_user_frame_ptr@@Base>
   37a04:	add	r2, r0, #8
   37a08:	add	r3, r6, r6, lsl #1
   37a0c:	mov	r9, r0
   37a10:	add	sl, r2, r3, lsl #3
   37a14:	mov	r0, sl
   37a18:	ldrb	r1, [r0, #12]!
   37a1c:	cmp	r1, #0
   37a20:	beq	37a3c <flatcc_json_parser_union_type@@Base+0x60>
   37a24:	ldr	r0, [r5, #20]
   37a28:	cmp	r0, #0
   37a2c:	beq	37b24 <flatcc_json_parser_union_type@@Base+0x148>
   37a30:	mov	r0, r4
   37a34:	sub	sp, fp, #28
   37a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37a3c:	mov	r1, #1
   37a40:	mov	r6, #0
   37a44:	mov	lr, sl
   37a48:	cmp	r8, r4
   37a4c:	str	r3, [sp, #4]
   37a50:	str	r2, [sp, #8]
   37a54:	strb	r1, [r0]
   37a58:	strb	r6, [lr, #13]!
   37a5c:	beq	37c44 <flatcc_json_parser_union_type@@Base+0x268>
   37a60:	mov	r2, r8
   37a64:	ldrb	ip, [r2], #1
   37a68:	cmp	ip, #45	; 0x2d
   37a6c:	movne	r2, r8
   37a70:	cmp	r2, r4
   37a74:	beq	37b4c <flatcc_json_parser_union_type@@Base+0x170>
   37a78:	mov	r6, #0
   37a7c:	mov	r0, #10
   37a80:	mov	r7, #0
   37a84:	ldrb	r1, [r2]
   37a88:	sub	r3, r1, #48	; 0x30
   37a8c:	uxtb	r3, r3
   37a90:	cmp	r3, #9
   37a94:	bhi	37bd8 <flatcc_json_parser_union_type@@Base+0x1fc>
   37a98:	add	r3, r7, r7, lsl #2
   37a9c:	lsl	r3, r3, #1
   37aa0:	umlal	r1, r3, r6, r0
   37aa4:	subs	r1, r1, #48	; 0x30
   37aa8:	sbc	r3, r3, #0
   37aac:	subs	r6, r1, r6
   37ab0:	sbcs	r7, r3, r7
   37ab4:	bcc	37be8 <flatcc_json_parser_union_type@@Base+0x20c>
   37ab8:	add	r2, r2, #1
   37abc:	mov	r6, r1
   37ac0:	mov	r7, r3
   37ac4:	cmp	r4, r2
   37ac8:	bne	37a84 <flatcc_json_parser_union_type@@Base+0xa8>
   37acc:	mov	r0, #0
   37ad0:	mov	r2, r4
   37ad4:	mov	r6, r1
   37ad8:	mov	r7, r3
   37adc:	cmp	r2, r8
   37ae0:	beq	37c44 <flatcc_json_parser_union_type@@Base+0x268>
   37ae4:	cmp	r0, #0
   37ae8:	beq	37b64 <flatcc_json_parser_union_type@@Base+0x188>
   37aec:	ldrb	r0, [r2]
   37af0:	cmp	r0, #46	; 0x2e
   37af4:	beq	37b04 <flatcc_json_parser_union_type@@Base+0x128>
   37af8:	cmp	r0, #101	; 0x65
   37afc:	cmpne	r0, #69	; 0x45
   37b00:	bne	37b64 <flatcc_json_parser_union_type@@Base+0x188>
   37b04:	ldr	r0, [r5, #20]
   37b08:	mov	r6, #0
   37b0c:	mov	r7, #0
   37b10:	cmp	r0, #0
   37b14:	mov	r0, r4
   37b18:	bne	37c28 <flatcc_json_parser_union_type@@Base+0x24c>
   37b1c:	mov	r0, #12
   37b20:	b	37c04 <flatcc_json_parser_union_type@@Base+0x228>
   37b24:	str	r8, [r5, #32]
   37b28:	mov	r0, #28
   37b2c:	add	r2, r8, #1
   37b30:	ldr	r1, [r5, #4]
   37b34:	sub	r1, r2, r1
   37b38:	str	r1, [r5, #16]
   37b3c:	str	r0, [r5, #20]
   37b40:	mov	r0, r4
   37b44:	sub	sp, fp, #28
   37b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37b4c:	mov	r2, r4
   37b50:	mov	r7, #0
   37b54:	mov	r0, #0
   37b58:	cmp	r2, r8
   37b5c:	bne	37ae4 <flatcc_json_parser_union_type@@Base+0x108>
   37b60:	b	37c44 <flatcc_json_parser_union_type@@Base+0x268>
   37b64:	mov	r0, r2
   37b68:	cmp	r0, r8
   37b6c:	beq	37c44 <flatcc_json_parser_union_type@@Base+0x268>
   37b70:	cmp	ip, #45	; 0x2d
   37b74:	bne	37b90 <flatcc_json_parser_union_type@@Base+0x1b4>
   37b78:	ldr	r1, [r5, #20]
   37b7c:	mov	r2, r4
   37b80:	cmp	r1, #0
   37b84:	bne	37c3c <flatcc_json_parser_union_type@@Base+0x260>
   37b88:	mov	r1, #8
   37b8c:	b	37bb0 <flatcc_json_parser_union_type@@Base+0x1d4>
   37b90:	subs	r1, r6, #256	; 0x100
   37b94:	sbcs	r1, r7, #0
   37b98:	bcc	37c34 <flatcc_json_parser_union_type@@Base+0x258>
   37b9c:	ldr	r1, [r5, #20]
   37ba0:	mov	r2, r4
   37ba4:	cmp	r1, #0
   37ba8:	bne	37c3c <flatcc_json_parser_union_type@@Base+0x260>
   37bac:	mov	r1, #7
   37bb0:	str	r0, [r5, #32]
   37bb4:	add	r0, r0, #1
   37bb8:	ldr	r2, [r5, #4]
   37bbc:	sub	r0, r0, r2
   37bc0:	mov	r2, r4
   37bc4:	str	r0, [r5, #16]
   37bc8:	str	r1, [r5, #20]
   37bcc:	cmp	r2, r8
   37bd0:	bne	37c68 <flatcc_json_parser_union_type@@Base+0x28c>
   37bd4:	b	37c44 <flatcc_json_parser_union_type@@Base+0x268>
   37bd8:	mov	r0, #1
   37bdc:	cmp	r2, r8
   37be0:	bne	37ae4 <flatcc_json_parser_union_type@@Base+0x108>
   37be4:	b	37c44 <flatcc_json_parser_union_type@@Base+0x268>
   37be8:	ldr	r0, [r5, #20]
   37bec:	mov	r6, #0
   37bf0:	mov	r7, #0
   37bf4:	cmp	r0, #0
   37bf8:	mov	r0, r4
   37bfc:	bne	37c28 <flatcc_json_parser_union_type@@Base+0x24c>
   37c00:	mov	r0, #8
   37c04:	str	r2, [r5, #32]
   37c08:	add	r2, r2, #1
   37c0c:	mov	r6, #0
   37c10:	mov	r7, #0
   37c14:	ldr	r1, [r5, #4]
   37c18:	sub	r1, r2, r1
   37c1c:	str	r1, [r5, #16]
   37c20:	str	r0, [r5, #20]
   37c24:	mov	r0, r4
   37c28:	cmp	r0, r8
   37c2c:	bne	37b70 <flatcc_json_parser_union_type@@Base+0x194>
   37c30:	b	37c44 <flatcc_json_parser_union_type@@Base+0x268>
   37c34:	mov	r2, r0
   37c38:	strb	r6, [lr]
   37c3c:	cmp	r2, r8
   37c40:	bne	37c68 <flatcc_json_parser_union_type@@Base+0x28c>
   37c44:	ldr	r3, [fp, #16]
   37c48:	mov	r0, r5
   37c4c:	mov	r1, r8
   37c50:	mov	r2, r4
   37c54:	str	lr, [sp]
   37c58:	mov	r6, lr
   37c5c:	bl	37d70 <flatcc_json_parser_union_type@@Base+0x394>
   37c60:	mov	lr, r6
   37c64:	mov	r2, r0
   37c68:	ldr	r0, [sp, #8]
   37c6c:	ldr	r1, [sp, #4]
   37c70:	ldr	r1, [r0, r1, lsl #3]
   37c74:	cmp	r1, #0
   37c78:	beq	37d14 <flatcc_json_parser_union_type@@Base+0x338>
   37c7c:	ldr	r0, [r9, #4]
   37c80:	str	r2, [sp, #8]
   37c84:	cmp	r0, #0
   37c88:	beq	37d50 <flatcc_json_parser_union_type@@Base+0x374>
   37c8c:	sub	r0, r0, #1
   37c90:	ldr	r6, [fp, #20]
   37c94:	mov	r2, r4
   37c98:	str	r0, [r9, #4]
   37c9c:	ldr	r0, [sl, #8]
   37ca0:	ldr	r8, [r5, #4]
   37ca4:	ldr	r7, [r5, #12]
   37ca8:	str	r0, [r5, #12]
   37cac:	ldr	r0, [sl, #4]
   37cb0:	str	r0, [r5, #4]
   37cb4:	add	r0, sp, #12
   37cb8:	ldrb	r3, [lr]
   37cbc:	add	r0, r0, #4
   37cc0:	str	r0, [sp]
   37cc4:	mov	r0, r5
   37cc8:	strb	r3, [sp, #12]
   37ccc:	blx	r6
   37cd0:	cmp	r0, r4
   37cd4:	beq	37a30 <flatcc_json_parser_union_type@@Base+0x54>
   37cd8:	ldr	r1, [fp, #8]
   37cdc:	ldr	r0, [r5]
   37ce0:	ldr	r2, [sp, #12]
   37ce4:	ldr	r3, [sp, #16]
   37ce8:	bl	30db0 <flatcc_builder_table_add_union@@Base>
   37cec:	cmp	r0, #0
   37cf0:	beq	37d38 <flatcc_json_parser_union_type@@Base+0x35c>
   37cf4:	ldr	r0, [r5, #20]
   37cf8:	cmp	r0, #0
   37cfc:	bne	37a30 <flatcc_json_parser_union_type@@Base+0x54>
   37d00:	ldr	r2, [sp, #8]
   37d04:	mov	r0, #28
   37d08:	str	r2, [r5, #32]
   37d0c:	add	r2, r2, #1
   37d10:	b	37b30 <flatcc_json_parser_union_type@@Base+0x154>
   37d14:	ldrb	r0, [lr]
   37d18:	ldr	r1, [r9, #4]
   37d1c:	mov	r4, r2
   37d20:	cmp	r0, #0
   37d24:	addne	r1, r1, #1
   37d28:	str	r1, [r9, #4]
   37d2c:	mov	r0, r4
   37d30:	sub	sp, fp, #28
   37d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37d38:	ldr	r4, [sp, #8]
   37d3c:	str	r8, [r5, #4]
   37d40:	str	r7, [r5, #12]
   37d44:	mov	r0, r4
   37d48:	sub	sp, fp, #28
   37d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37d50:	movw	r0, #46852	; 0xb704
   37d54:	movw	r1, #46867	; 0xb713
   37d58:	movw	r3, #46941	; 0xb75d
   37d5c:	movw	r2, #965	; 0x3c5
   37d60:	movt	r0, #4
   37d64:	movt	r1, #4
   37d68:	movt	r3, #4
   37d6c:	bl	14f44 <__assert_fail@plt>
   37d70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37d74:	add	fp, sp, #28
   37d78:	sub	sp, sp, #36	; 0x24
   37d7c:	mov	r4, r2
   37d80:	mov	r2, r1
   37d84:	ldr	r1, [fp, #8]
   37d88:	mov	r5, r0
   37d8c:	mov	r0, #0
   37d90:	mov	r6, r3
   37d94:	cmp	r2, r4
   37d98:	strb	r0, [r1]
   37d9c:	beq	37dc0 <flatcc_json_parser_union_type@@Base+0x3e4>
   37da0:	ldrb	r0, [r2]
   37da4:	cmp	r0, #34	; 0x22
   37da8:	bne	37dd4 <flatcc_json_parser_union_type@@Base+0x3f8>
   37dac:	add	r1, r2, #1
   37db0:	sub	r0, r4, r1
   37db4:	cmp	r0, #2
   37db8:	bge	37df0 <flatcc_json_parser_union_type@@Base+0x414>
   37dbc:	b	37e50 <flatcc_json_parser_union_type@@Base+0x474>
   37dc0:	mov	r1, r2
   37dc4:	sub	r0, r4, r1
   37dc8:	cmp	r0, #2
   37dcc:	bge	37df0 <flatcc_json_parser_union_type@@Base+0x414>
   37dd0:	b	37e50 <flatcc_json_parser_union_type@@Base+0x474>
   37dd4:	ldr	r0, [r5, #20]
   37dd8:	mov	r1, r4
   37ddc:	cmp	r0, #0
   37de0:	beq	37e24 <flatcc_json_parser_union_type@@Base+0x448>
   37de4:	sub	r0, r4, r1
   37de8:	cmp	r0, #2
   37dec:	blt	37e50 <flatcc_json_parser_union_type@@Base+0x474>
   37df0:	ldrb	r0, [r1]
   37df4:	cmp	r0, #32
   37df8:	bls	37e0c <flatcc_json_parser_union_type@@Base+0x430>
   37dfc:	mov	r7, r1
   37e00:	cmp	r7, r4
   37e04:	bne	37e68 <flatcc_json_parser_union_type@@Base+0x48c>
   37e08:	b	37f50 <flatcc_json_parser_union_type@@Base+0x574>
   37e0c:	bne	37e50 <flatcc_json_parser_union_type@@Base+0x474>
   37e10:	mov	r7, r1
   37e14:	ldrb	r0, [r7, #1]!
   37e18:	cmp	r0, #32
   37e1c:	bls	37e50 <flatcc_json_parser_union_type@@Base+0x474>
   37e20:	b	37e60 <flatcc_json_parser_union_type@@Base+0x484>
   37e24:	str	r2, [r5, #32]
   37e28:	add	r2, r2, #1
   37e2c:	mov	r0, #5
   37e30:	ldr	r1, [r5, #4]
   37e34:	sub	r1, r2, r1
   37e38:	str	r1, [r5, #16]
   37e3c:	mov	r1, r4
   37e40:	str	r0, [r5, #20]
   37e44:	sub	r0, r4, r1
   37e48:	cmp	r0, #2
   37e4c:	bge	37df0 <flatcc_json_parser_union_type@@Base+0x414>
   37e50:	mov	r0, r5
   37e54:	mov	r2, r4
   37e58:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   37e5c:	mov	r7, r0
   37e60:	cmp	r7, r4
   37e64:	beq	37f50 <flatcc_json_parser_union_type@@Base+0x574>
   37e68:	add	sl, r6, #4
   37e6c:	add	r8, sp, #24
   37e70:	add	r9, sp, #20
   37e74:	str	r6, [sp, #12]
   37e78:	str	sl, [sp, #8]
   37e7c:	b	37eb0 <flatcc_json_parser_union_type@@Base+0x4d4>
   37e80:	ldr	r2, [fp, #8]
   37e84:	ldr	r6, [sp, #12]
   37e88:	ldr	sl, [sp, #8]
   37e8c:	mov	r7, r0
   37e90:	mov	r3, r2
   37e94:	ldrb	r2, [r2]
   37e98:	add	r1, r2, r1
   37e9c:	strb	r1, [r3]
   37ea0:	ldr	r1, [sp, #16]
   37ea4:	cmp	r1, #0
   37ea8:	subeq	sp, fp, #28
   37eac:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37eb0:	ldr	r6, [r6]
   37eb4:	add	r0, sp, #16
   37eb8:	mov	r1, r7
   37ebc:	mov	r2, r4
   37ec0:	mov	r3, r9
   37ec4:	str	r8, [sp]
   37ec8:	str	r0, [sp, #4]
   37ecc:	mov	r0, r5
   37ed0:	blx	r6
   37ed4:	cmp	r0, r4
   37ed8:	beq	37f50 <flatcc_json_parser_union_type@@Base+0x574>
   37edc:	cmp	r0, r7
   37ee0:	bne	37ef4 <flatcc_json_parser_union_type@@Base+0x518>
   37ee4:	ldr	r6, [sl], #4
   37ee8:	cmp	r6, #0
   37eec:	bne	37eb4 <flatcc_json_parser_union_type@@Base+0x4d8>
   37ef0:	b	37f28 <flatcc_json_parser_union_type@@Base+0x54c>
   37ef4:	ldr	r1, [sp, #20]
   37ef8:	cmp	r1, #0
   37efc:	bne	37f5c <flatcc_json_parser_union_type@@Base+0x580>
   37f00:	ldr	r1, [sp, #24]
   37f04:	ldr	r2, [sp, #28]
   37f08:	subs	r3, r1, #256	; 0x100
   37f0c:	sbcs	r2, r2, #0
   37f10:	bcc	37e80 <flatcc_json_parser_union_type@@Base+0x4a4>
   37f14:	ldr	r1, [r5, #20]
   37f18:	cmp	r1, #0
   37f1c:	bne	37f50 <flatcc_json_parser_union_type@@Base+0x574>
   37f20:	mov	r1, #7
   37f24:	b	37f6c <flatcc_json_parser_union_type@@Base+0x590>
   37f28:	ldr	r0, [r5, #20]
   37f2c:	cmp	r0, #0
   37f30:	bne	37f50 <flatcc_json_parser_union_type@@Base+0x574>
   37f34:	str	r7, [r5, #32]
   37f38:	add	r2, r7, #1
   37f3c:	mov	r0, #23
   37f40:	ldr	r1, [r5, #4]
   37f44:	sub	r1, r2, r1
   37f48:	str	r1, [r5, #16]
   37f4c:	str	r0, [r5, #20]
   37f50:	mov	r0, r4
   37f54:	sub	sp, fp, #28
   37f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37f5c:	ldr	r1, [r5, #20]
   37f60:	cmp	r1, #0
   37f64:	bne	37f50 <flatcc_json_parser_union_type@@Base+0x574>
   37f68:	mov	r1, #8
   37f6c:	str	r0, [r5, #32]
   37f70:	add	r0, r0, #1
   37f74:	ldr	r2, [r5, #4]
   37f78:	sub	r0, r0, r2
   37f7c:	str	r0, [r5, #16]
   37f80:	str	r1, [r5, #20]
   37f84:	mov	r0, r4
   37f88:	sub	sp, fp, #28
   37f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00037f90 <flatcc_json_parser_union_vector@@Base>:
   37f90:	push	{r4, r5, r6, r7, fp, lr}
   37f94:	add	fp, sp, #16
   37f98:	sub	sp, sp, #16
   37f9c:	mov	r6, r1
   37fa0:	mov	r5, r0
   37fa4:	ldr	r0, [r0]
   37fa8:	ldr	r1, [fp, #12]
   37fac:	mov	r7, r3
   37fb0:	mov	r4, r2
   37fb4:	bl	2e0f8 <flatcc_builder_get_user_frame_ptr@@Base>
   37fb8:	add	r2, r0, #8
   37fbc:	add	r3, r7, r7, lsl #1
   37fc0:	mov	r1, r2
   37fc4:	ldr	r7, [r1, r3, lsl #3]!
   37fc8:	cmp	r7, #0
   37fcc:	beq	37fe8 <flatcc_json_parser_union_vector@@Base+0x58>
   37fd0:	ldr	r0, [r5, #20]
   37fd4:	cmp	r0, #0
   37fd8:	beq	38034 <flatcc_json_parser_union_vector@@Base+0xa4>
   37fdc:	mov	r0, r4
   37fe0:	sub	sp, fp, #16
   37fe4:	pop	{r4, r5, r6, r7, fp, pc}
   37fe8:	add	r2, r2, r3, lsl #3
   37fec:	ldr	r3, [r0, #4]
   37ff0:	ldrb	r7, [r2, #12]
   37ff4:	cmp	r7, #0
   37ff8:	beq	3805c <flatcc_json_parser_union_vector@@Base+0xcc>
   37ffc:	sub	r3, r3, #1
   38000:	ldr	r1, [fp, #16]
   38004:	ldr	r7, [fp, #8]
   38008:	str	r3, [r0, #4]
   3800c:	ldr	r0, [r2, #16]
   38010:	ldr	r3, [r2, #20]
   38014:	mov	r2, r4
   38018:	stm	sp, {r0, r7}
   3801c:	str	r1, [sp, #8]
   38020:	mov	r0, r5
   38024:	mov	r1, r6
   38028:	bl	38090 <flatcc_json_parser_union_vector@@Base+0x100>
   3802c:	sub	sp, fp, #16
   38030:	pop	{r4, r5, r6, r7, fp, pc}
   38034:	str	r6, [r5, #32]
   38038:	add	r2, r6, #1
   3803c:	mov	r0, #28
   38040:	ldr	r1, [r5, #4]
   38044:	sub	r1, r2, r1
   38048:	str	r1, [r5, #16]
   3804c:	str	r0, [r5, #20]
   38050:	mov	r0, r4
   38054:	sub	sp, fp, #16
   38058:	pop	{r4, r5, r6, r7, fp, pc}
   3805c:	add	r3, r3, #1
   38060:	str	r3, [r0, #4]
   38064:	ldr	r0, [r5, #12]
   38068:	str	r0, [r2, #8]
   3806c:	ldr	r0, [r5, #4]
   38070:	str	r0, [r2, #4]
   38074:	str	r6, [r1]
   38078:	mov	r0, r5
   3807c:	mov	r1, r6
   38080:	mov	r2, r4
   38084:	sub	sp, fp, #16
   38088:	pop	{r4, r5, r6, r7, fp, lr}
   3808c:	b	35224 <flatcc_json_parser_generic_json@@Base>
   38090:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38094:	add	fp, sp, #28
   38098:	sub	sp, sp, #12
   3809c:	mov	r5, r0
   380a0:	mov	r0, #0
   380a4:	mov	r8, r3
   380a8:	mov	r6, r2
   380ac:	mov	r7, r1
   380b0:	str	r0, [sp, #8]
   380b4:	ldr	r0, [r5]
   380b8:	bl	2f7a4 <flatcc_builder_start_offset_vector@@Base>
   380bc:	cmp	r0, #0
   380c0:	beq	380e0 <flatcc_json_parser_union_vector@@Base+0x150>
   380c4:	ldr	r0, [r5, #20]
   380c8:	cmp	r0, #0
   380cc:	bne	38168 <flatcc_json_parser_union_vector@@Base+0x1d8>
   380d0:	str	r7, [r5, #32]
   380d4:	mov	r0, #33	; 0x21
   380d8:	add	r2, r7, #1
   380dc:	b	38158 <flatcc_json_parser_union_vector@@Base+0x1c8>
   380e0:	ldr	sl, [fp, #8]
   380e4:	cmp	r7, r6
   380e8:	beq	38128 <flatcc_json_parser_union_vector@@Base+0x198>
   380ec:	ldrb	r0, [r7]
   380f0:	cmp	r0, #91	; 0x5b
   380f4:	bne	38128 <flatcc_json_parser_union_vector@@Base+0x198>
   380f8:	add	r1, r7, #1
   380fc:	sub	r0, r6, r1
   38100:	cmp	r0, #2
   38104:	blt	38210 <flatcc_json_parser_union_vector@@Base+0x280>
   38108:	ldrb	r0, [r1]
   3810c:	cmp	r0, #32
   38110:	bls	38200 <flatcc_json_parser_union_vector@@Base+0x270>
   38114:	mov	r7, r1
   38118:	cmp	r7, r6
   3811c:	mov	r4, r6
   38120:	bne	3822c <flatcc_json_parser_union_vector@@Base+0x29c>
   38124:	b	38268 <flatcc_json_parser_union_vector@@Base+0x2d8>
   38128:	ldr	r0, [r5, #20]
   3812c:	mov	r9, r6
   38130:	cmp	r0, #0
   38134:	beq	38174 <flatcc_json_parser_union_vector@@Base+0x1e4>
   38138:	cmp	sl, #0
   3813c:	beq	3819c <flatcc_json_parser_union_vector@@Base+0x20c>
   38140:	ldr	r0, [r5, #20]
   38144:	cmp	r0, #0
   38148:	bne	38168 <flatcc_json_parser_union_vector@@Base+0x1d8>
   3814c:	str	r9, [r5, #32]
   38150:	mov	r0, #30
   38154:	add	r2, r9, #1
   38158:	ldr	r1, [r5, #4]
   3815c:	sub	r1, r2, r1
   38160:	str	r1, [r5, #16]
   38164:	str	r0, [r5, #20]
   38168:	mov	r0, r6
   3816c:	sub	sp, fp, #28
   38170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38174:	str	r7, [r5, #32]
   38178:	add	r2, r7, #1
   3817c:	mov	r0, #22
   38180:	mov	r9, r6
   38184:	ldr	r1, [r5, #4]
   38188:	sub	r1, r2, r1
   3818c:	str	r1, [r5, #16]
   38190:	str	r0, [r5, #20]
   38194:	cmp	sl, #0
   38198:	bne	38140 <flatcc_json_parser_union_vector@@Base+0x1b0>
   3819c:	ldr	r0, [r5]
   381a0:	mov	r1, r8
   381a4:	bl	2e0f8 <flatcc_builder_get_user_frame_ptr@@Base>
   381a8:	mov	r1, r0
   381ac:	ldr	r0, [r5]
   381b0:	bl	30cc4 <flatcc_builder_end_offset_vector_for_unions@@Base>
   381b4:	cmp	r0, #0
   381b8:	str	r0, [sp, #8]
   381bc:	beq	381ec <flatcc_json_parser_union_vector@@Base+0x25c>
   381c0:	ldr	r1, [fp, #12]
   381c4:	ldr	r0, [r5]
   381c8:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   381cc:	cmp	r0, #0
   381d0:	beq	381ec <flatcc_json_parser_union_vector@@Base+0x25c>
   381d4:	ldr	r1, [sp, #8]
   381d8:	mov	r6, r9
   381dc:	str	r1, [r0]
   381e0:	mov	r0, r6
   381e4:	sub	sp, fp, #28
   381e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   381ec:	mov	r7, r9
   381f0:	ldr	r0, [r5, #20]
   381f4:	cmp	r0, #0
   381f8:	bne	38168 <flatcc_json_parser_union_vector@@Base+0x1d8>
   381fc:	b	380d0 <flatcc_json_parser_union_vector@@Base+0x140>
   38200:	bne	38210 <flatcc_json_parser_union_vector@@Base+0x280>
   38204:	ldrb	r0, [r7, #2]!
   38208:	cmp	r0, #32
   3820c:	bhi	38220 <flatcc_json_parser_union_vector@@Base+0x290>
   38210:	mov	r0, r5
   38214:	mov	r2, r6
   38218:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   3821c:	mov	r7, r0
   38220:	cmp	r7, r6
   38224:	mov	r4, r6
   38228:	beq	38268 <flatcc_json_parser_union_vector@@Base+0x2d8>
   3822c:	ldrb	r0, [r7]
   38230:	cmp	r0, #93	; 0x5d
   38234:	bne	38264 <flatcc_json_parser_union_vector@@Base+0x2d4>
   38238:	add	r1, r7, #1
   3823c:	sub	r0, r6, r1
   38240:	cmp	r0, #2
   38244:	blt	383f4 <flatcc_json_parser_union_vector@@Base+0x464>
   38248:	ldrb	r0, [r1]
   3824c:	cmp	r0, #32
   38250:	bls	383e0 <flatcc_json_parser_union_vector@@Base+0x450>
   38254:	mov	r9, r1
   38258:	cmp	sl, #0
   3825c:	bne	38140 <flatcc_json_parser_union_vector@@Base+0x1b0>
   38260:	b	3819c <flatcc_json_parser_union_vector@@Base+0x20c>
   38264:	mov	r4, r7
   38268:	cmp	sl, #0
   3826c:	beq	383c4 <flatcc_json_parser_union_vector@@Base+0x434>
   38270:	add	r0, r6, #1
   38274:	mov	sl, #0
   38278:	add	r9, sp, #8
   3827c:	str	r0, [sp, #4]
   38280:	ldr	r0, [r5]
   38284:	mov	r1, r8
   38288:	bl	2e0f8 <flatcc_builder_get_user_frame_ptr@@Base>
   3828c:	ldrb	r3, [r0, -sl]
   38290:	ldr	r7, [fp, #16]
   38294:	mov	r0, r5
   38298:	mov	r1, r4
   3829c:	mov	r2, r6
   382a0:	str	r9, [sp]
   382a4:	blx	r7
   382a8:	cmp	r0, r6
   382ac:	beq	38168 <flatcc_json_parser_union_vector@@Base+0x1d8>
   382b0:	mov	r7, r0
   382b4:	ldr	r0, [r5]
   382b8:	mov	r1, #1
   382bc:	bl	2ef60 <flatcc_builder_extend_offset_vector@@Base>
   382c0:	cmp	r0, #0
   382c4:	beq	380c4 <flatcc_json_parser_union_vector@@Base+0x134>
   382c8:	ldr	r1, [sp, #8]
   382cc:	str	r1, [r0]
   382d0:	sub	r0, r6, r7
   382d4:	cmp	r0, #2
   382d8:	blt	3835c <flatcc_json_parser_union_vector@@Base+0x3cc>
   382dc:	ldrb	r0, [r7]
   382e0:	cmp	r0, #32
   382e4:	bls	38348 <flatcc_json_parser_union_vector@@Base+0x3b8>
   382e8:	mov	r4, r7
   382ec:	cmp	r4, r6
   382f0:	beq	38410 <flatcc_json_parser_union_vector@@Base+0x480>
   382f4:	ldrb	r0, [r4]
   382f8:	cmp	r0, #44	; 0x2c
   382fc:	bne	38428 <flatcc_json_parser_union_vector@@Base+0x498>
   38300:	add	r1, r4, #1
   38304:	sub	r0, r6, r1
   38308:	cmp	r0, #2
   3830c:	blt	3838c <flatcc_json_parser_union_vector@@Base+0x3fc>
   38310:	ldrb	r0, [r1]
   38314:	cmp	r0, #32
   38318:	bls	3837c <flatcc_json_parser_union_vector@@Base+0x3ec>
   3831c:	mov	r4, r1
   38320:	cmp	r4, r6
   38324:	beq	383a4 <flatcc_json_parser_union_vector@@Base+0x414>
   38328:	ldrb	r0, [r4]
   3832c:	cmp	r0, #93	; 0x5d
   38330:	beq	38464 <flatcc_json_parser_union_vector@@Base+0x4d4>
   38334:	ldr	r0, [fp, #8]
   38338:	sub	sl, sl, #1
   3833c:	adds	r0, r0, sl
   38340:	bne	38280 <flatcc_json_parser_union_vector@@Base+0x2f0>
   38344:	b	383c4 <flatcc_json_parser_union_vector@@Base+0x434>
   38348:	bne	3835c <flatcc_json_parser_union_vector@@Base+0x3cc>
   3834c:	mov	r4, r7
   38350:	ldrb	r0, [r4, #1]!
   38354:	cmp	r0, #32
   38358:	bhi	38370 <flatcc_json_parser_union_vector@@Base+0x3e0>
   3835c:	mov	r0, r5
   38360:	mov	r1, r7
   38364:	mov	r2, r6
   38368:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   3836c:	mov	r4, r0
   38370:	cmp	r4, r6
   38374:	bne	382f4 <flatcc_json_parser_union_vector@@Base+0x364>
   38378:	b	38410 <flatcc_json_parser_union_vector@@Base+0x480>
   3837c:	bne	3838c <flatcc_json_parser_union_vector@@Base+0x3fc>
   38380:	ldrb	r0, [r4, #2]!
   38384:	cmp	r0, #32
   38388:	bhi	3839c <flatcc_json_parser_union_vector@@Base+0x40c>
   3838c:	mov	r0, r5
   38390:	mov	r2, r6
   38394:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   38398:	mov	r4, r0
   3839c:	cmp	r4, r6
   383a0:	bne	38328 <flatcc_json_parser_union_vector@@Base+0x398>
   383a4:	ldr	r0, [r5, #20]
   383a8:	mov	r9, r6
   383ac:	cmp	r0, #0
   383b0:	bne	384bc <flatcc_json_parser_union_vector@@Base+0x52c>
   383b4:	str	r6, [r5, #32]
   383b8:	ldr	r2, [sp, #4]
   383bc:	mov	r0, #9
   383c0:	b	384dc <flatcc_json_parser_union_vector@@Base+0x54c>
   383c4:	ldr	r0, [r5, #20]
   383c8:	cmp	r0, #0
   383cc:	bne	38168 <flatcc_json_parser_union_vector@@Base+0x1d8>
   383d0:	str	r4, [r5, #32]
   383d4:	mov	r0, #30
   383d8:	add	r2, r4, #1
   383dc:	b	38158 <flatcc_json_parser_union_vector@@Base+0x1c8>
   383e0:	bne	383f4 <flatcc_json_parser_union_vector@@Base+0x464>
   383e4:	ldrb	r0, [r7, #2]!
   383e8:	cmp	r0, #32
   383ec:	mov	r9, r7
   383f0:	bhi	38138 <flatcc_json_parser_union_vector@@Base+0x1a8>
   383f4:	mov	r0, r5
   383f8:	mov	r2, r6
   383fc:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   38400:	mov	r9, r0
   38404:	cmp	sl, #0
   38408:	bne	38140 <flatcc_json_parser_union_vector@@Base+0x1b0>
   3840c:	b	3819c <flatcc_json_parser_union_vector@@Base+0x20c>
   38410:	mov	r9, r6
   38414:	ldr	r0, [fp, #8]
   38418:	add	r0, r0, sl
   3841c:	cmp	r0, #1
   38420:	bne	38140 <flatcc_json_parser_union_vector@@Base+0x1b0>
   38424:	b	3819c <flatcc_json_parser_union_vector@@Base+0x20c>
   38428:	cmp	r0, #93	; 0x5d
   3842c:	bne	384ac <flatcc_json_parser_union_vector@@Base+0x51c>
   38430:	add	r1, r4, #1
   38434:	sub	r0, r6, r1
   38438:	cmp	r0, #2
   3843c:	blt	38498 <flatcc_json_parser_union_vector@@Base+0x508>
   38440:	ldrb	r0, [r1]
   38444:	cmp	r0, #32
   38448:	bhi	38480 <flatcc_json_parser_union_vector@@Base+0x4f0>
   3844c:	bne	38498 <flatcc_json_parser_union_vector@@Base+0x508>
   38450:	ldrb	r0, [r4, #2]!
   38454:	cmp	r0, #32
   38458:	mov	r9, r4
   3845c:	bhi	384bc <flatcc_json_parser_union_vector@@Base+0x52c>
   38460:	b	38498 <flatcc_json_parser_union_vector@@Base+0x508>
   38464:	add	r1, r4, #1
   38468:	sub	r0, r6, r1
   3846c:	cmp	r0, #2
   38470:	blt	38498 <flatcc_json_parser_union_vector@@Base+0x508>
   38474:	ldrb	r0, [r1]
   38478:	cmp	r0, #32
   3847c:	bls	3844c <flatcc_json_parser_union_vector@@Base+0x4bc>
   38480:	mov	r9, r1
   38484:	ldr	r0, [fp, #8]
   38488:	add	r0, r0, sl
   3848c:	cmp	r0, #1
   38490:	bne	38140 <flatcc_json_parser_union_vector@@Base+0x1b0>
   38494:	b	3819c <flatcc_json_parser_union_vector@@Base+0x20c>
   38498:	mov	r0, r5
   3849c:	mov	r2, r6
   384a0:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   384a4:	mov	r9, r0
   384a8:	b	384bc <flatcc_json_parser_union_vector@@Base+0x52c>
   384ac:	ldr	r0, [r5, #20]
   384b0:	mov	r9, r6
   384b4:	cmp	r0, #0
   384b8:	beq	384d0 <flatcc_json_parser_union_vector@@Base+0x540>
   384bc:	ldr	r0, [fp, #8]
   384c0:	add	r0, r0, sl
   384c4:	cmp	r0, #1
   384c8:	bne	38140 <flatcc_json_parser_union_vector@@Base+0x1b0>
   384cc:	b	3819c <flatcc_json_parser_union_vector@@Base+0x20c>
   384d0:	str	r4, [r5, #32]
   384d4:	mov	r0, #9
   384d8:	add	r2, r4, #1
   384dc:	ldr	r1, [r5, #4]
   384e0:	sub	r1, r2, r1
   384e4:	mov	r9, r6
   384e8:	str	r1, [r5, #16]
   384ec:	str	r0, [r5, #20]
   384f0:	ldr	r0, [fp, #8]
   384f4:	add	r0, r0, sl
   384f8:	cmp	r0, #1
   384fc:	bne	38140 <flatcc_json_parser_union_vector@@Base+0x1b0>
   38500:	b	3819c <flatcc_json_parser_union_vector@@Base+0x20c>

00038504 <flatcc_json_parser_union_type_vector@@Base>:
   38504:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38508:	add	fp, sp, #28
   3850c:	sub	sp, sp, #28
   38510:	mov	r7, r1
   38514:	mov	r5, r0
   38518:	ldr	r0, [r0]
   3851c:	ldr	r1, [fp, #12]
   38520:	mov	r4, r3
   38524:	mov	r8, r2
   38528:	bl	2e0f8 <flatcc_builder_get_user_frame_ptr@@Base>
   3852c:	add	r0, r0, #8
   38530:	add	r6, r4, r4, lsl #1
   38534:	add	r4, r0, r6, lsl #3
   38538:	mov	r0, r4
   3853c:	ldrb	r1, [r0, #12]!
   38540:	cmp	r1, #0
   38544:	beq	38564 <flatcc_json_parser_union_type_vector@@Base+0x60>
   38548:	ldr	r0, [r5, #20]
   3854c:	cmp	r0, #0
   38550:	bne	385b4 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   38554:	str	r7, [r5, #32]
   38558:	mov	r0, #28
   3855c:	add	r2, r7, #1
   38560:	b	385a4 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   38564:	mov	r1, #1
   38568:	mov	r2, #1
   3856c:	mvn	r3, #0
   38570:	strb	r1, [r0]
   38574:	mov	r1, #1
   38578:	ldr	r0, [r5]
   3857c:	bl	2f718 <flatcc_builder_start_vector@@Base>
   38580:	cmp	r0, #0
   38584:	beq	385c0 <flatcc_json_parser_union_type_vector@@Base+0xbc>
   38588:	mov	sl, r7
   3858c:	ldr	r0, [r5, #20]
   38590:	cmp	r0, #0
   38594:	bne	385b4 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   38598:	str	sl, [r5, #32]
   3859c:	mov	r0, #33	; 0x21
   385a0:	add	r2, sl, #1
   385a4:	ldr	r1, [r5, #4]
   385a8:	sub	r1, r2, r1
   385ac:	str	r1, [r5, #16]
   385b0:	str	r0, [r5, #20]
   385b4:	mov	r0, r8
   385b8:	sub	sp, fp, #28
   385bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   385c0:	cmp	r7, r8
   385c4:	beq	38604 <flatcc_json_parser_union_type_vector@@Base+0x100>
   385c8:	ldrb	r0, [r7]
   385cc:	cmp	r0, #91	; 0x5b
   385d0:	bne	38604 <flatcc_json_parser_union_type_vector@@Base+0x100>
   385d4:	add	r1, r7, #1
   385d8:	sub	r0, r8, r1
   385dc:	cmp	r0, #2
   385e0:	blt	38648 <flatcc_json_parser_union_type_vector@@Base+0x144>
   385e4:	ldrb	r0, [r1]
   385e8:	cmp	r0, #32
   385ec:	bls	38638 <flatcc_json_parser_union_type_vector@@Base+0x134>
   385f0:	mov	r7, r1
   385f4:	cmp	r7, r8
   385f8:	mov	sl, r8
   385fc:	bne	38664 <flatcc_json_parser_union_type_vector@@Base+0x160>
   38600:	b	386a8 <flatcc_json_parser_union_type_vector@@Base+0x1a4>
   38604:	ldr	r0, [r5, #20]
   38608:	cmp	r0, #0
   3860c:	mov	r0, r8
   38610:	bne	38b18 <flatcc_json_parser_union_type_vector@@Base+0x614>
   38614:	str	r7, [r5, #32]
   38618:	mov	r0, #22
   3861c:	add	r2, r7, #1
   38620:	ldr	r1, [r5, #4]
   38624:	sub	r1, r2, r1
   38628:	str	r1, [r5, #16]
   3862c:	str	r0, [r5, #20]
   38630:	mov	r0, r8
   38634:	b	38b18 <flatcc_json_parser_union_type_vector@@Base+0x614>
   38638:	bne	38648 <flatcc_json_parser_union_type_vector@@Base+0x144>
   3863c:	ldrb	r0, [r7, #2]!
   38640:	cmp	r0, #32
   38644:	bhi	38658 <flatcc_json_parser_union_type_vector@@Base+0x154>
   38648:	mov	r0, r5
   3864c:	mov	r2, r8
   38650:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   38654:	mov	r7, r0
   38658:	cmp	r7, r8
   3865c:	mov	sl, r8
   38660:	beq	386a8 <flatcc_json_parser_union_type_vector@@Base+0x1a4>
   38664:	ldrb	r0, [r7]
   38668:	cmp	r0, #93	; 0x5d
   3866c:	bne	386a4 <flatcc_json_parser_union_type_vector@@Base+0x1a0>
   38670:	add	r1, r7, #1
   38674:	sub	r0, r8, r1
   38678:	cmp	r0, #2
   3867c:	blt	38b0c <flatcc_json_parser_union_type_vector@@Base+0x608>
   38680:	ldrb	r0, [r1]
   38684:	cmp	r0, #32
   38688:	bhi	38aa0 <flatcc_json_parser_union_type_vector@@Base+0x59c>
   3868c:	bne	38b0c <flatcc_json_parser_union_type_vector@@Base+0x608>
   38690:	ldrb	r0, [r7, #2]!
   38694:	cmp	r0, #32
   38698:	mov	r0, r7
   3869c:	bls	38b0c <flatcc_json_parser_union_type_vector@@Base+0x608>
   386a0:	b	38b18 <flatcc_json_parser_union_type_vector@@Base+0x614>
   386a4:	mov	sl, r7
   386a8:	ldr	r0, [r5]
   386ac:	mov	r1, #1
   386b0:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   386b4:	cmp	r0, #0
   386b8:	beq	3858c <flatcc_json_parser_union_type_vector@@Base+0x88>
   386bc:	mov	r1, r0
   386c0:	add	r0, r8, #1
   386c4:	str	r4, [sp, #16]
   386c8:	str	r0, [sp, #12]
   386cc:	mov	r9, #0
   386d0:	cmp	sl, r8
   386d4:	mov	r4, r8
   386d8:	str	r1, [sp, #20]
   386dc:	strb	r9, [sp, #27]
   386e0:	beq	38904 <flatcc_json_parser_union_type_vector@@Base+0x400>
   386e4:	mov	r2, sl
   386e8:	mov	r9, #0
   386ec:	ldrb	ip, [r2], #1
   386f0:	cmp	ip, #45	; 0x2d
   386f4:	movne	r2, sl
   386f8:	cmp	r2, r8
   386fc:	beq	38774 <flatcc_json_parser_union_type_vector@@Base+0x270>
   38700:	mov	r7, #0
   38704:	mov	r0, #0
   38708:	mov	r4, #10
   3870c:	ldrb	r1, [r2]
   38710:	sub	r3, r1, #48	; 0x30
   38714:	uxtb	r3, r3
   38718:	cmp	r3, #9
   3871c:	bhi	38794 <flatcc_json_parser_union_type_vector@@Base+0x290>
   38720:	add	r3, r0, r0, lsl #2
   38724:	lsl	r3, r3, #1
   38728:	umlal	r1, r3, r7, r4
   3872c:	subs	r1, r1, #48	; 0x30
   38730:	sbc	r3, r3, #0
   38734:	subs	r7, r1, r7
   38738:	sbcs	r0, r3, r0
   3873c:	bcc	38818 <flatcc_json_parser_union_type_vector@@Base+0x314>
   38740:	add	r2, r2, #1
   38744:	mov	r7, r1
   38748:	mov	r0, r3
   3874c:	cmp	r8, r2
   38750:	bne	3870c <flatcc_json_parser_union_type_vector@@Base+0x208>
   38754:	mov	lr, #0
   38758:	mov	r2, r8
   3875c:	mov	r7, r1
   38760:	mov	r0, r3
   38764:	cmp	r2, sl
   38768:	mov	r4, sl
   3876c:	bne	387a4 <flatcc_json_parser_union_type_vector@@Base+0x2a0>
   38770:	b	38904 <flatcc_json_parser_union_type_vector@@Base+0x400>
   38774:	mov	r2, r8
   38778:	mov	r7, #0
   3877c:	mov	r0, #0
   38780:	mov	lr, #0
   38784:	cmp	r2, sl
   38788:	mov	r4, sl
   3878c:	bne	387a4 <flatcc_json_parser_union_type_vector@@Base+0x2a0>
   38790:	b	38904 <flatcc_json_parser_union_type_vector@@Base+0x400>
   38794:	mov	lr, #1
   38798:	cmp	r2, sl
   3879c:	mov	r4, sl
   387a0:	beq	38904 <flatcc_json_parser_union_type_vector@@Base+0x400>
   387a4:	cmp	lr, #0
   387a8:	beq	387f8 <flatcc_json_parser_union_type_vector@@Base+0x2f4>
   387ac:	ldrb	r1, [r2]
   387b0:	cmp	r1, #46	; 0x2e
   387b4:	beq	387c4 <flatcc_json_parser_union_type_vector@@Base+0x2c0>
   387b8:	cmp	r1, #101	; 0x65
   387bc:	cmpne	r1, #69	; 0x45
   387c0:	bne	38868 <flatcc_json_parser_union_type_vector@@Base+0x364>
   387c4:	ldr	r0, [r5, #20]
   387c8:	mov	r7, #0
   387cc:	mov	r4, r8
   387d0:	cmp	r0, #0
   387d4:	mov	r0, #0
   387d8:	bne	3886c <flatcc_json_parser_union_type_vector@@Base+0x368>
   387dc:	str	r2, [r5, #32]
   387e0:	add	r1, r2, #1
   387e4:	ldr	r0, [r5, #4]
   387e8:	sub	r0, r1, r0
   387ec:	str	r0, [r5, #16]
   387f0:	mov	r0, #12
   387f4:	b	38848 <flatcc_json_parser_union_type_vector@@Base+0x344>
   387f8:	mov	r4, r2
   387fc:	mov	r9, #0
   38800:	cmp	r4, sl
   38804:	bne	38878 <flatcc_json_parser_union_type_vector@@Base+0x374>
   38808:	mov	r4, sl
   3880c:	cmp	sl, r4
   38810:	bne	38940 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   38814:	b	3890c <flatcc_json_parser_union_type_vector@@Base+0x408>
   38818:	ldr	r0, [r5, #20]
   3881c:	mov	r7, #0
   38820:	mov	r4, r8
   38824:	cmp	r0, #0
   38828:	mov	r0, #0
   3882c:	bne	3886c <flatcc_json_parser_union_type_vector@@Base+0x368>
   38830:	str	r2, [r5, #32]
   38834:	add	r1, r2, #1
   38838:	ldr	r0, [r5, #4]
   3883c:	sub	r0, r1, r0
   38840:	str	r0, [r5, #16]
   38844:	mov	r0, #8
   38848:	str	r0, [r5, #20]
   3884c:	mov	r7, #0
   38850:	mov	r0, #0
   38854:	mov	r4, r8
   38858:	mov	r9, #0
   3885c:	cmp	r4, sl
   38860:	bne	38878 <flatcc_json_parser_union_type_vector@@Base+0x374>
   38864:	b	38808 <flatcc_json_parser_union_type_vector@@Base+0x304>
   38868:	mov	r4, r2
   3886c:	mov	r9, #0
   38870:	cmp	r4, sl
   38874:	beq	38808 <flatcc_json_parser_union_type_vector@@Base+0x304>
   38878:	cmp	ip, #45	; 0x2d
   3887c:	bne	388a8 <flatcc_json_parser_union_type_vector@@Base+0x3a4>
   38880:	ldr	r0, [r5, #20]
   38884:	cmp	r0, #0
   38888:	bne	388c0 <flatcc_json_parser_union_type_vector@@Base+0x3bc>
   3888c:	str	r4, [r5, #32]
   38890:	add	r1, r4, #1
   38894:	ldr	r0, [r5, #4]
   38898:	sub	r0, r1, r0
   3889c:	str	r0, [r5, #16]
   388a0:	mov	r0, #8
   388a4:	b	388fc <flatcc_json_parser_union_type_vector@@Base+0x3f8>
   388a8:	subs	r1, r7, #256	; 0x100
   388ac:	sbcs	r0, r0, #0
   388b0:	bcc	388d0 <flatcc_json_parser_union_type_vector@@Base+0x3cc>
   388b4:	ldr	r0, [r5, #20]
   388b8:	cmp	r0, #0
   388bc:	beq	388e4 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   388c0:	mov	r4, r8
   388c4:	cmp	sl, r4
   388c8:	bne	38940 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   388cc:	b	3890c <flatcc_json_parser_union_type_vector@@Base+0x408>
   388d0:	mov	r9, r7
   388d4:	strb	r7, [sp, #27]
   388d8:	cmp	sl, r4
   388dc:	bne	38940 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   388e0:	b	3890c <flatcc_json_parser_union_type_vector@@Base+0x408>
   388e4:	str	r4, [r5, #32]
   388e8:	add	r1, r4, #1
   388ec:	ldr	r0, [r5, #4]
   388f0:	sub	r0, r1, r0
   388f4:	str	r0, [r5, #16]
   388f8:	mov	r0, #7
   388fc:	str	r0, [r5, #20]
   38900:	mov	r4, r8
   38904:	cmp	sl, r4
   38908:	bne	38940 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3890c:	ldr	r3, [fp, #16]
   38910:	add	r0, sp, #27
   38914:	mov	r1, sl
   38918:	mov	r2, r8
   3891c:	str	r0, [sp]
   38920:	mov	r0, r5
   38924:	bl	37d70 <flatcc_json_parser_union_type@@Base+0x394>
   38928:	mov	r4, r0
   3892c:	cmp	r0, sl
   38930:	beq	38ac8 <flatcc_json_parser_union_type_vector@@Base+0x5c4>
   38934:	cmp	r4, r8
   38938:	beq	38ac8 <flatcc_json_parser_union_type_vector@@Base+0x5c4>
   3893c:	ldrb	r9, [sp, #27]
   38940:	ldr	r1, [fp, #24]
   38944:	uxtb	r0, r9
   38948:	blx	r1
   3894c:	cmp	r0, #0
   38950:	bne	38968 <flatcc_json_parser_union_type_vector@@Base+0x464>
   38954:	ldrb	r0, [r5, #8]
   38958:	tst	r0, #1
   3895c:	beq	38adc <flatcc_json_parser_union_type_vector@@Base+0x5d8>
   38960:	mov	r9, #0
   38964:	strb	r9, [sp, #27]
   38968:	ldr	r0, [sp, #20]
   3896c:	strb	r9, [r0]
   38970:	sub	r0, r8, r4
   38974:	cmp	r0, #2
   38978:	blt	38a08 <flatcc_json_parser_union_type_vector@@Base+0x504>
   3897c:	ldrb	r0, [r4]
   38980:	cmp	r0, #32
   38984:	bls	389f4 <flatcc_json_parser_union_type_vector@@Base+0x4f0>
   38988:	mov	sl, r4
   3898c:	cmp	sl, r8
   38990:	beq	38a70 <flatcc_json_parser_union_type_vector@@Base+0x56c>
   38994:	ldrb	r0, [sl]
   38998:	ldr	r4, [sp, #16]
   3899c:	cmp	r0, #44	; 0x2c
   389a0:	bne	38a7c <flatcc_json_parser_union_type_vector@@Base+0x578>
   389a4:	add	r1, sl, #1
   389a8:	sub	r0, r8, r1
   389ac:	cmp	r0, #2
   389b0:	blt	38a38 <flatcc_json_parser_union_type_vector@@Base+0x534>
   389b4:	ldrb	r0, [r1]
   389b8:	cmp	r0, #32
   389bc:	bls	38a28 <flatcc_json_parser_union_type_vector@@Base+0x524>
   389c0:	mov	sl, r1
   389c4:	cmp	sl, r8
   389c8:	beq	38a50 <flatcc_json_parser_union_type_vector@@Base+0x54c>
   389cc:	ldrb	r0, [sl]
   389d0:	cmp	r0, #93	; 0x5d
   389d4:	beq	38a84 <flatcc_json_parser_union_type_vector@@Base+0x580>
   389d8:	ldr	r0, [r5]
   389dc:	mov	r1, #1
   389e0:	bl	2ebc4 <flatcc_builder_extend_vector@@Base>
   389e4:	mov	r1, r0
   389e8:	cmp	r0, #0
   389ec:	bne	386cc <flatcc_json_parser_union_type_vector@@Base+0x1c8>
   389f0:	b	3858c <flatcc_json_parser_union_type_vector@@Base+0x88>
   389f4:	bne	38a08 <flatcc_json_parser_union_type_vector@@Base+0x504>
   389f8:	mov	sl, r4
   389fc:	ldrb	r0, [sl, #1]!
   38a00:	cmp	r0, #32
   38a04:	bhi	38a1c <flatcc_json_parser_union_type_vector@@Base+0x518>
   38a08:	mov	r0, r5
   38a0c:	mov	r1, r4
   38a10:	mov	r2, r8
   38a14:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   38a18:	mov	sl, r0
   38a1c:	cmp	sl, r8
   38a20:	bne	38994 <flatcc_json_parser_union_type_vector@@Base+0x490>
   38a24:	b	38a70 <flatcc_json_parser_union_type_vector@@Base+0x56c>
   38a28:	bne	38a38 <flatcc_json_parser_union_type_vector@@Base+0x534>
   38a2c:	ldrb	r0, [sl, #2]!
   38a30:	cmp	r0, #32
   38a34:	bhi	38a48 <flatcc_json_parser_union_type_vector@@Base+0x544>
   38a38:	mov	r0, r5
   38a3c:	mov	r2, r8
   38a40:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   38a44:	mov	sl, r0
   38a48:	cmp	sl, r8
   38a4c:	bne	389cc <flatcc_json_parser_union_type_vector@@Base+0x4c8>
   38a50:	ldr	r0, [r5, #20]
   38a54:	cmp	r0, #0
   38a58:	mov	r0, r8
   38a5c:	bne	38b18 <flatcc_json_parser_union_type_vector@@Base+0x614>
   38a60:	str	r8, [r5, #32]
   38a64:	ldr	r2, [sp, #12]
   38a68:	mov	r0, #9
   38a6c:	b	38620 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   38a70:	ldr	r4, [sp, #16]
   38a74:	mov	r0, r8
   38a78:	b	38b18 <flatcc_json_parser_union_type_vector@@Base+0x614>
   38a7c:	cmp	r0, #93	; 0x5d
   38a80:	bne	38aa8 <flatcc_json_parser_union_type_vector@@Base+0x5a4>
   38a84:	add	r1, sl, #1
   38a88:	sub	r0, r8, r1
   38a8c:	cmp	r0, #2
   38a90:	blt	38b0c <flatcc_json_parser_union_type_vector@@Base+0x608>
   38a94:	ldrb	r0, [r1]
   38a98:	cmp	r0, #32
   38a9c:	bls	38af8 <flatcc_json_parser_union_type_vector@@Base+0x5f4>
   38aa0:	mov	r0, r1
   38aa4:	b	38b18 <flatcc_json_parser_union_type_vector@@Base+0x614>
   38aa8:	ldr	r0, [r5, #20]
   38aac:	cmp	r0, #0
   38ab0:	mov	r0, r8
   38ab4:	bne	38b18 <flatcc_json_parser_union_type_vector@@Base+0x614>
   38ab8:	str	sl, [r5, #32]
   38abc:	mov	r0, #9
   38ac0:	add	r2, sl, #1
   38ac4:	b	38620 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   38ac8:	mov	sl, r4
   38acc:	ldr	r0, [r5, #20]
   38ad0:	cmp	r0, #0
   38ad4:	bne	385b4 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   38ad8:	b	38598 <flatcc_json_parser_union_type_vector@@Base+0x94>
   38adc:	ldr	r0, [r5, #20]
   38ae0:	cmp	r0, #0
   38ae4:	bne	385b4 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   38ae8:	str	r4, [r5, #32]
   38aec:	mov	r0, #15
   38af0:	add	r2, r4, #1
   38af4:	b	385a4 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   38af8:	bne	38b0c <flatcc_json_parser_union_type_vector@@Base+0x608>
   38afc:	ldrb	r0, [sl, #2]!
   38b00:	cmp	r0, #32
   38b04:	mov	r0, sl
   38b08:	bhi	38b18 <flatcc_json_parser_union_type_vector@@Base+0x614>
   38b0c:	mov	r0, r5
   38b10:	mov	r2, r8
   38b14:	bl	34888 <flatcc_json_parser_space_ext@@Base>
   38b18:	mov	sl, r0
   38b1c:	ldr	r0, [r5]
   38b20:	bl	30a88 <flatcc_builder_vector_count@@Base>
   38b24:	str	r0, [r4, #16]
   38b28:	mov	r7, r0
   38b2c:	ldr	r0, [r5]
   38b30:	mov	r1, r7
   38b34:	bl	2df68 <flatcc_builder_enter_user_frame@@Base>
   38b38:	mov	r9, r0
   38b3c:	ldr	r0, [r5]
   38b40:	mov	r1, r9
   38b44:	bl	2e0f8 <flatcc_builder_get_user_frame_ptr@@Base>
   38b48:	mov	r4, r0
   38b4c:	ldr	r0, [r5]
   38b50:	bl	30a94 <flatcc_builder_vector_edit@@Base>
   38b54:	mov	r1, r0
   38b58:	mov	r0, r4
   38b5c:	mov	r2, r7
   38b60:	bl	14e60 <memcpy@plt>
   38b64:	ldr	r0, [r5]
   38b68:	bl	30998 <flatcc_builder_end_vector@@Base>
   38b6c:	cmp	r0, #0
   38b70:	beq	3858c <flatcc_json_parser_union_type_vector@@Base+0x88>
   38b74:	ldr	r1, [fp, #8]
   38b78:	mov	r4, r0
   38b7c:	ldr	r0, [r5]
   38b80:	sub	r1, r1, #1
   38b84:	bl	30eb0 <flatcc_builder_table_add_offset@@Base>
   38b88:	cmp	r0, #0
   38b8c:	beq	3858c <flatcc_json_parser_union_type_vector@@Base+0x88>
   38b90:	str	r4, [r0]
   38b94:	ldr	r1, [fp, #12]
   38b98:	ldr	r0, [r5]
   38b9c:	bl	2e0f8 <flatcc_builder_get_user_frame_ptr@@Base>
   38ba0:	add	r2, r0, #8
   38ba4:	mov	r3, r2
   38ba8:	ldr	r1, [r3, r6, lsl #3]!
   38bac:	str	r9, [r3, #20]
   38bb0:	cmp	r1, #0
   38bb4:	ldr	r3, [r0, #4]
   38bb8:	beq	38c28 <flatcc_json_parser_union_type_vector@@Base+0x724>
   38bbc:	cmp	r3, #0
   38bc0:	beq	38c40 <flatcc_json_parser_union_type_vector@@Base+0x73c>
   38bc4:	sub	r3, r3, #1
   38bc8:	ldr	ip, [fp, #20]
   38bcc:	str	r3, [r0, #4]
   38bd0:	add	r0, r2, r6, lsl #3
   38bd4:	mov	r3, r9
   38bd8:	ldr	r2, [r0, #8]
   38bdc:	ldr	r6, [r5, #4]
   38be0:	ldr	r4, [r5, #12]
   38be4:	str	r2, [r5, #12]
   38be8:	mov	r2, r8
   38bec:	ldr	r0, [r0, #4]
   38bf0:	str	r0, [r5, #4]
   38bf4:	ldr	r0, [fp, #8]
   38bf8:	str	r7, [sp]
   38bfc:	stmib	sp, {r0, ip}
   38c00:	mov	r0, r5
   38c04:	bl	38090 <flatcc_json_parser_union_vector@@Base+0x100>
   38c08:	cmp	r0, r8
   38c0c:	beq	385b4 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   38c10:	str	r6, [r5, #4]
   38c14:	str	r4, [r5, #12]
   38c18:	mov	r8, sl
   38c1c:	mov	r0, r8
   38c20:	sub	sp, fp, #28
   38c24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38c28:	add	r1, r3, #1
   38c2c:	str	r1, [r0, #4]
   38c30:	mov	r8, sl
   38c34:	mov	r0, r8
   38c38:	sub	sp, fp, #28
   38c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38c40:	movw	r0, #46852	; 0xb704
   38c44:	movw	r1, #46867	; 0xb713
   38c48:	movw	r3, #47145	; 0xb829
   38c4c:	movw	r2, #1122	; 0x462
   38c50:	movt	r0, #4
   38c54:	movt	r1, #4
   38c58:	movt	r3, #4
   38c5c:	bl	14f44 <__assert_fail@plt>

00038c60 <flatcc_json_parser_table_as_root@@Base>:
   38c60:	push	{r4, r5, r6, r7, fp, lr}
   38c64:	add	fp, sp, #16
   38c68:	sub	sp, sp, #48	; 0x30
   38c6c:	add	r5, sp, #8
   38c70:	cmp	r1, #0
   38c74:	mov	r6, r0
   38c78:	vmov.i32	q8, #0	; 0x00000000
   38c7c:	add	r7, r2, r3
   38c80:	mov	r4, r2
   38c84:	movne	r5, r1
   38c88:	mov	r1, #2
   38c8c:	add	r0, r5, #16
   38c90:	vst1.32	{d16-d17}, [r0]
   38c94:	mov	r0, #0
   38c98:	str	r0, [r5, #36]	; 0x24
   38c9c:	mov	r0, #1
   38ca0:	str	r2, [r5, #32]
   38ca4:	str	r6, [r5]
   38ca8:	str	r2, [r5, #4]
   38cac:	str	r0, [r5, #12]
   38cb0:	ldr	r0, [fp, #8]
   38cb4:	and	r3, r1, r0, lsr #1
   38cb8:	ldr	r1, [fp, #12]
   38cbc:	str	r0, [r5, #8]
   38cc0:	str	r2, [r5, #24]
   38cc4:	mov	r0, r6
   38cc8:	mov	r2, #0
   38ccc:	str	r7, [r5, #28]
   38cd0:	bl	2e6d8 <flatcc_builder_start_buffer@@Base>
   38cd4:	mov	r1, r0
   38cd8:	mvn	r0, #0
   38cdc:	cmp	r1, #0
   38ce0:	bne	38d08 <flatcc_json_parser_table_as_root@@Base+0xa8>
   38ce4:	ldr	ip, [fp, #16]
   38ce8:	add	r3, sp, #4
   38cec:	mov	r0, r5
   38cf0:	mov	r1, r4
   38cf4:	mov	r2, r7
   38cf8:	blx	ip
   38cfc:	ldr	r0, [r5, #20]
   38d00:	cmp	r0, #0
   38d04:	beq	38d10 <flatcc_json_parser_table_as_root@@Base+0xb0>
   38d08:	sub	sp, fp, #16
   38d0c:	pop	{r4, r5, r6, r7, fp, pc}
   38d10:	ldr	r1, [sp, #4]
   38d14:	mov	r0, r6
   38d18:	bl	2e8c8 <flatcc_builder_end_buffer@@Base>
   38d1c:	cmp	r0, #0
   38d20:	mvn	r0, #0
   38d24:	movne	r0, #0
   38d28:	strne	r4, [r5, #36]	; 0x24
   38d2c:	sub	sp, fp, #16
   38d30:	pop	{r4, r5, r6, r7, fp, pc}

00038d34 <flatcc_json_parser_struct_as_root@@Base>:
   38d34:	push	{r4, r5, r6, r7, fp, lr}
   38d38:	add	fp, sp, #16
   38d3c:	sub	sp, sp, #48	; 0x30
   38d40:	add	r5, sp, #8
   38d44:	cmp	r1, #0
   38d48:	mov	r6, r0
   38d4c:	vmov.i32	q8, #0	; 0x00000000
   38d50:	add	r7, r2, r3
   38d54:	mov	r4, r2
   38d58:	movne	r5, r1
   38d5c:	mov	r1, #2
   38d60:	add	r0, r5, #16
   38d64:	vst1.32	{d16-d17}, [r0]
   38d68:	mov	r0, #0
   38d6c:	str	r0, [r5, #36]	; 0x24
   38d70:	mov	r0, #1
   38d74:	str	r2, [r5, #32]
   38d78:	str	r6, [r5]
   38d7c:	str	r2, [r5, #4]
   38d80:	str	r0, [r5, #12]
   38d84:	ldr	r0, [fp, #8]
   38d88:	and	r3, r1, r0, lsr #1
   38d8c:	ldr	r1, [fp, #12]
   38d90:	str	r0, [r5, #8]
   38d94:	str	r2, [r5, #24]
   38d98:	mov	r0, r6
   38d9c:	mov	r2, #0
   38da0:	str	r7, [r5, #28]
   38da4:	bl	2e6d8 <flatcc_builder_start_buffer@@Base>
   38da8:	mov	r1, r0
   38dac:	mvn	r0, #0
   38db0:	cmp	r1, #0
   38db4:	bne	38ddc <flatcc_json_parser_struct_as_root@@Base+0xa8>
   38db8:	ldr	ip, [fp, #16]
   38dbc:	add	r3, sp, #4
   38dc0:	mov	r0, r5
   38dc4:	mov	r1, r4
   38dc8:	mov	r2, r7
   38dcc:	blx	ip
   38dd0:	ldr	r0, [r5, #20]
   38dd4:	cmp	r0, #0
   38dd8:	beq	38de4 <flatcc_json_parser_struct_as_root@@Base+0xb0>
   38ddc:	sub	sp, fp, #16
   38de0:	pop	{r4, r5, r6, r7, fp, pc}
   38de4:	ldr	r1, [sp, #4]
   38de8:	mov	r0, r6
   38dec:	bl	2e8c8 <flatcc_builder_end_buffer@@Base>
   38df0:	cmp	r0, #0
   38df4:	mvn	r0, #0
   38df8:	movne	r0, #0
   38dfc:	strne	r4, [r5, #36]	; 0x24
   38e00:	sub	sp, fp, #16
   38e04:	pop	{r4, r5, r6, r7, fp, pc}

00038e08 <flatcc_json_printer_error_string@@Base>:
   38e08:	cmp	r0, #3
   38e0c:	movwhi	r0, #43738	; 0xaada
   38e10:	movthi	r0, #4
   38e14:	bxhi	lr
   38e18:	movw	r1, #50508	; 0xc54c
   38e1c:	movt	r1, #4
   38e20:	ldr	r0, [r1, r0, lsl #2]
   38e24:	bx	lr

00038e28 <flatcc_json_printer_fmt_float@@Base>:
   38e28:	vcvt.f64.f32	d0, s0
   38e2c:	b	38e30 <flatcc_json_printer_fmt_float@@Base+0x8>
   38e30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38e34:	add	fp, sp, #28
   38e38:	sub	sp, sp, #84	; 0x54
   38e3c:	cmp	r0, #0
   38e40:	beq	39c00 <flatcc_json_printer_fmt_float@@Base+0xdd8>
   38e44:	mov	ip, r0
   38e48:	vmov	r3, r2, d0
   38e4c:	mov	r0, #-2147483648	; 0x80000000
   38e50:	mov	r6, #0
   38e54:	add	r1, r0, #266338304	; 0xfe00000
   38e58:	lsl	r7, r2, #1
   38e5c:	subs	r6, r6, r3, lsl #1
   38e60:	add	r1, r1, #1879048192	; 0x70000000
   38e64:	orr	r7, r7, r3, lsr #31
   38e68:	sbcs	r1, r1, r7
   38e6c:	bcs	38e88 <flatcc_json_printer_fmt_float@@Base+0x60>
   38e70:	movw	r1, #48303	; 0xbcaf
   38e74:	mov	r0, ip
   38e78:	movt	r1, #4
   38e7c:	sub	sp, fp, #28
   38e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38e84:	b	14f2c <sprintf@plt>
   38e88:	cmn	r2, #1
   38e8c:	ble	38e98 <flatcc_json_printer_fmt_float@@Base+0x70>
   38e90:	mov	r5, ip
   38e94:	b	38eac <flatcc_json_printer_fmt_float@@Base+0x84>
   38e98:	mov	r1, #45	; 0x2d
   38e9c:	mov	r5, ip
   38ea0:	vneg.f64	d0, d0
   38ea4:	eor	r2, r2, r0
   38ea8:	strb	r1, [r5], #1
   38eac:	movw	r0, #0
   38eb0:	movt	r0, #32752	; 0x7ff0
   38eb4:	eor	r1, r2, r0
   38eb8:	orrs	r1, r3, r1
   38ebc:	beq	38edc <flatcc_json_printer_fmt_float@@Base+0xb4>
   38ec0:	orrs	r1, r3, r2
   38ec4:	bne	38ef4 <flatcc_json_printer_fmt_float@@Base+0xcc>
   38ec8:	mov	r0, #48	; 0x30
   38ecc:	strh	r0, [r5], #1
   38ed0:	sub	r0, r5, ip
   38ed4:	sub	sp, fp, #28
   38ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38edc:	movw	r0, #28265	; 0x6e69
   38ee0:	movt	r0, #102	; 0x66
   38ee4:	str	r0, [r5], #3
   38ee8:	sub	r0, r5, ip
   38eec:	sub	sp, fp, #28
   38ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38ef4:	vmov	sl, r9, d0
   38ef8:	ands	r1, r9, r0
   38efc:	bfc	r9, #20, #12
   38f00:	str	r1, [fp, #-40]	; 0xffffffd8
   38f04:	beq	38f20 <flatcc_json_printer_fmt_float@@Base+0xf8>
   38f08:	movw	r0, #64461	; 0xfbcd
   38f0c:	orr	r6, r9, #1048576	; 0x100000
   38f10:	movt	r0, #65535	; 0xffff
   38f14:	add	r4, r0, r1, lsr #20
   38f18:	mov	r0, #0
   38f1c:	b	38f38 <flatcc_json_printer_fmt_float@@Base+0x110>
   38f20:	orrs	r0, sl, r9
   38f24:	beq	39c60 <flatcc_json_printer_fmt_float@@Base+0xe38>
   38f28:	movw	r4, #64462	; 0xfbce
   38f2c:	mov	r0, #0
   38f30:	mov	r6, r9
   38f34:	movt	r4, #65535	; 0xffff
   38f38:	mov	r7, r4
   38f3c:	mov	r3, sl
   38f40:	mov	r2, r6
   38f44:	lsl	r1, r2, #10
   38f48:	sub	r7, r7, #10
   38f4c:	orr	r2, r1, r3, lsr #22
   38f50:	lsl	r3, r3, #10
   38f54:	cmp	r2, #4194304	; 0x400000
   38f58:	bcc	38f44 <flatcc_json_printer_fmt_float@@Base+0x11c>
   38f5c:	cmp	r2, #0
   38f60:	str	r5, [fp, #-36]	; 0xffffffdc
   38f64:	blt	38f90 <flatcc_json_printer_fmt_float@@Base+0x168>
   38f68:	mvn	r5, #0
   38f6c:	lsl	r1, r2, #1
   38f70:	sub	r7, r7, #1
   38f74:	orr	r2, r1, r3, lsr #31
   38f78:	lsl	r1, r3, #1
   38f7c:	subs	r3, r5, r3, lsl #1
   38f80:	sbcs	r3, r5, r2
   38f84:	mov	r3, r1
   38f88:	blt	38f6c <flatcc_json_printer_fmt_float@@Base+0x144>
   38f8c:	b	38f98 <flatcc_json_printer_fmt_float@@Base+0x170>
   38f90:	mov	r1, r3
   38f94:	mvn	r5, #0
   38f98:	mov	r0, #1
   38f9c:	sub	r8, r4, #1
   38fa0:	str	r6, [fp, #-44]	; 0xffffffd4
   38fa4:	str	r4, [fp, #-32]	; 0xffffffe0
   38fa8:	orr	r3, r0, sl, lsl #1
   38fac:	lsl	r0, r6, #1
   38fb0:	orr	lr, r0, sl, lsr #31
   38fb4:	mov	r0, #0
   38fb8:	cmp	r0, lr, lsr #22
   38fbc:	bne	38ffc <flatcc_json_printer_fmt_float@@Base+0x1d4>
   38fc0:	mov	r0, #0
   38fc4:	mov	r6, lr
   38fc8:	mov	r4, r8
   38fcc:	str	r0, [fp, #-48]	; 0xffffffd0
   38fd0:	lsl	r0, r6, #10
   38fd4:	sub	r4, r4, #10
   38fd8:	orr	r6, r0, r3, lsr #22
   38fdc:	lsl	r3, r3, #10
   38fe0:	cmp	r6, #4194304	; 0x400000
   38fe4:	bcc	38fd0 <flatcc_json_printer_fmt_float@@Base+0x1a8>
   38fe8:	subs	r0, r5, r3
   38fec:	str	ip, [sp, #24]
   38ff0:	sbcs	r0, r5, r6
   38ff4:	blt	3901c <flatcc_json_printer_fmt_float@@Base+0x1f4>
   38ff8:	b	39040 <flatcc_json_printer_fmt_float@@Base+0x218>
   38ffc:	mov	r0, #0
   39000:	mov	r4, r8
   39004:	mov	r6, lr
   39008:	str	r0, [fp, #-48]	; 0xffffffd0
   3900c:	subs	r0, r5, r3
   39010:	str	ip, [sp, #24]
   39014:	sbcs	r0, r5, r6
   39018:	bge	39040 <flatcc_json_printer_fmt_float@@Base+0x218>
   3901c:	lsl	r0, r6, #1
   39020:	lsl	ip, r3, #1
   39024:	sub	r4, r4, #1
   39028:	orr	r6, r0, r3, lsr #31
   3902c:	subs	r0, r5, r3, lsl #1
   39030:	mov	r3, ip
   39034:	sbcs	r0, r5, r6
   39038:	blt	3901c <flatcc_json_printer_fmt_float@@Base+0x1f4>
   3903c:	b	39044 <flatcc_json_printer_fmt_float@@Base+0x21c>
   39040:	mov	ip, r3
   39044:	vcmpe.f64	d0, #0.0
   39048:	vmrs	APSR_nzcv, fpscr
   3904c:	ble	39c40 <flatcc_json_printer_fmt_float@@Base+0xe18>
   39050:	vldr	d16, [pc, #672]	; 392f8 <flatcc_json_printer_fmt_float@@Base+0x4d0>
   39054:	vcmpe.f64	d0, d16
   39058:	vmrs	APSR_nzcv, fpscr
   3905c:	bhi	39c40 <flatcc_json_printer_fmt_float@@Base+0xe18>
   39060:	ldr	r5, [fp, #-40]	; 0xffffffd8
   39064:	ldr	r0, [fp, #-44]	; 0xffffffd4
   39068:	orrs	r3, sl, r9
   3906c:	vldr	d16, [pc, #652]	; 39300 <flatcc_json_printer_fmt_float@@Base+0x4d8>
   39070:	movwne	r3, #1
   39074:	clz	r5, r5
   39078:	lsl	r0, r0, #2
   3907c:	lsr	r5, r5, #5
   39080:	orrs	r3, r3, r5
   39084:	mvn	r5, #60	; 0x3c
   39088:	sub	r5, r5, r7
   3908c:	orreq	lr, r0, sl, lsr #30
   39090:	lsl	r0, sl, #2
   39094:	lslne	r0, sl, #1
   39098:	vmov	s2, r5
   3909c:	subs	r9, r0, #1
   390a0:	vcvt.f64.s32	d17, s2
   390a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   390a8:	sbc	lr, lr, #0
   390ac:	cmp	r3, #0
   390b0:	vmul.f64	d16, d17, d16
   390b4:	vcvt.s32.f64	s2, d16
   390b8:	vcmpe.f64	d16, #0.0
   390bc:	subeq	r8, r0, #2
   390c0:	sub	r3, r8, r4
   390c4:	rsb	r0, r3, #32
   390c8:	lsl	sl, r9, r3
   390cc:	lsr	r0, r9, r0
   390d0:	orr	r5, r0, lr, lsl r3
   390d4:	sub	r0, r3, #32
   390d8:	cmp	r0, #0
   390dc:	lslge	r5, r9, r0
   390e0:	movwge	sl, #0
   390e4:	vmrs	APSR_nzcv, fpscr
   390e8:	str	r5, [fp, #-32]	; 0xffffffe0
   390ec:	vmov	r5, s2
   390f0:	bmi	39108 <flatcc_json_printer_fmt_float@@Base+0x2e0>
   390f4:	vcvt.f64.s32	d17, s2
   390f8:	vsub.f64	d16, d16, d17
   390fc:	vcmp.f64	d16, #0.0
   39100:	vmrs	APSR_nzcv, fpscr
   39104:	addne	r5, r5, #1
   39108:	movw	r0, #347	; 0x15b
   3910c:	bic	r1, r1, #1
   39110:	add	r0, r5, r0
   39114:	asr	r5, r0, #31
   39118:	add	r0, r0, r5, lsr #29
   3911c:	mvn	r5, #15
   39120:	and	r0, r5, r0, lsl #1
   39124:	movw	r5, #49056	; 0xbfa0
   39128:	movt	r5, #4
   3912c:	add	r0, r5, r0
   39130:	ldrd	r8, [r0, #16]
   39134:	str	r0, [sp, #28]
   39138:	umull	r0, r5, r9, ip
   3913c:	str	r0, [fp, #-40]	; 0xffffffd8
   39140:	umull	r0, lr, r8, r6
   39144:	umaal	lr, r5, r9, r6
   39148:	umull	r6, r3, r8, ip
   3914c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   39150:	adds	r0, r0, r3
   39154:	mov	r3, #0
   39158:	adc	r3, r3, #0
   3915c:	adds	r0, r0, r6
   39160:	adc	r3, r3, #0
   39164:	adds	r0, r0, #-2147483648	; 0x80000000
   39168:	adc	r0, r3, #0
   3916c:	adds	r0, lr, r0
   39170:	adc	r3, r5, #0
   39174:	adds	r0, r0, #1
   39178:	str	r0, [sp, #36]	; 0x24
   3917c:	adc	ip, r3, #0
   39180:	umull	r0, r3, r9, sl
   39184:	str	r0, [fp, #-40]	; 0xffffffd8
   39188:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3918c:	umull	lr, r5, r8, r0
   39190:	umaal	r5, r3, r9, r0
   39194:	umull	r0, r6, r8, sl
   39198:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3919c:	adds	sl, lr, r6
   391a0:	mov	r6, #0
   391a4:	mov	lr, ip
   391a8:	adc	r6, r6, #0
   391ac:	adds	r0, sl, r0
   391b0:	adc	r6, r6, #0
   391b4:	adds	r0, r0, #-2147483648	; 0x80000000
   391b8:	adc	r0, r6, #0
   391bc:	adds	r0, r5, r0
   391c0:	adc	r3, r3, #0
   391c4:	subs	ip, r0, #1
   391c8:	umull	r0, r6, r8, r2
   391cc:	sbc	sl, r3, #0
   391d0:	umull	r3, r5, r9, r1
   391d4:	umaal	r6, r5, r9, r2
   391d8:	umull	r1, r2, r8, r1
   391dc:	ldr	r8, [sp, #36]	; 0x24
   391e0:	mov	r1, #0
   391e4:	adds	r0, r0, r2
   391e8:	bic	r2, r3, #1
   391ec:	str	r1, [sp, #40]	; 0x28
   391f0:	mov	r1, #0
   391f4:	adc	r1, r1, #0
   391f8:	adds	r0, r0, r2
   391fc:	adc	r1, r1, #0
   39200:	adds	r0, r0, #-2147483648	; 0x80000000
   39204:	adc	r0, r1, #0
   39208:	adds	r0, r6, r0
   3920c:	str	r0, [sp, #12]
   39210:	adc	r0, r5, #0
   39214:	str	r0, [sp, #16]
   39218:	subs	r0, r8, ip
   3921c:	str	r0, [sp, #48]	; 0x30
   39220:	sbcs	r0, lr, sl
   39224:	str	r0, [fp, #-44]	; 0xffffffd4
   39228:	bcc	39c20 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   3922c:	ldr	r0, [sp, #28]
   39230:	movw	sl, #50448	; 0xc510
   39234:	movt	sl, #4
   39238:	ldrsh	r0, [r0, #24]
   3923c:	add	r0, r0, #64	; 0x40
   39240:	add	r1, r0, r4
   39244:	add	r6, r0, r7
   39248:	movw	r7, #1233	; 0x4d1
   3924c:	str	r1, [sp, #8]
   39250:	mvn	r1, #31
   39254:	rsb	r3, r6, #0
   39258:	add	r2, r6, #32
   3925c:	str	r6, [sp, #4]
   39260:	sub	r4, r1, r6
   39264:	movw	r1, #14609	; 0x3911
   39268:	lsr	r0, r8, r3
   3926c:	movt	r1, #1
   39270:	orr	r0, r0, lr, lsl r2
   39274:	cmp	r4, #0
   39278:	mla	r5, r6, r7, r1
   3927c:	mov	r1, #1
   39280:	lsrge	r0, lr, r4
   39284:	add	r7, r1, r5, asr #12
   39288:	lsr	r2, r1, r2
   3928c:	ldr	r6, [sl, r7, lsl #2]
   39290:	cmp	r6, r0
   39294:	asrhi	r7, r5, #12
   39298:	cmp	r4, #0
   3929c:	lslge	r2, r1, r4
   392a0:	str	r2, [sp, #44]	; 0x2c
   392a4:	str	r3, [fp, #-40]	; 0xffffffd8
   392a8:	lsl	r3, r1, r3
   392ac:	movwge	r3, #0
   392b0:	subs	r1, r3, #1
   392b4:	str	r3, [sp, #32]
   392b8:	str	lr, [sp, #20]
   392bc:	sbc	r2, r2, #0
   392c0:	and	r3, r8, r1
   392c4:	cmp	r7, #0
   392c8:	str	r1, [fp, #-48]	; 0xffffffd0
   392cc:	and	r9, lr, r2
   392d0:	str	r2, [fp, #-52]	; 0xffffffcc
   392d4:	ble	3938c <flatcc_json_printer_fmt_float@@Base+0x564>
   392d8:	ldr	r1, [sl, r7, lsl #2]
   392dc:	movw	ip, #52429	; 0xcccd
   392e0:	sub	r7, r7, #1
   392e4:	mov	r4, #0
   392e8:	mov	r8, r9
   392ec:	movt	ip, #52428	; 0xcccc
   392f0:	str	r7, [fp, #-32]	; 0xffffffe0
   392f4:	b	39320 <flatcc_json_printer_fmt_float@@Base+0x4f8>
   392f8:			; <UNDEFINED> instruction: 0xffffffff
   392fc:	svcvc	0x00efffff
   39300:			; <UNDEFINED> instruction: 0x509f79fe
   39304:	svccc	0x00d34413
   39308:	umull	r1, r2, r1, ip
   3930c:	mov	r4, lr
   39310:	sub	r7, r7, #1
   39314:	add	r4, lr, #1
   39318:	lsr	r1, r2, #3
   3931c:	str	r7, [fp, #-32]	; 0xffffffe0
   39320:	udiv	r2, r0, r1
   39324:	ldr	r5, [fp, #-36]	; 0xffffffdc
   39328:	mov	lr, r4
   3932c:	ldr	r7, [sp, #48]	; 0x30
   39330:	add	r6, r2, #48	; 0x30
   39334:	mls	r0, r2, r1, r0
   39338:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3933c:	strb	r6, [r5, r4]
   39340:	sub	r4, r2, #32
   39344:	rsb	sl, r2, #32
   39348:	lsl	r2, r0, r2
   3934c:	cmp	r4, #0
   39350:	lsr	r5, r0, sl
   39354:	movwge	r2, #0
   39358:	lslge	r5, r0, r4
   3935c:	adds	r2, r2, r3
   39360:	adc	r5, r5, r8
   39364:	subs	r7, r2, r7
   39368:	ldr	r7, [fp, #-44]	; 0xffffffd4
   3936c:	sbcs	r7, r5, r7
   39370:	bcc	3959c <flatcc_json_printer_fmt_float@@Base+0x774>
   39374:	ldr	r7, [fp, #-32]	; 0xffffffe0
   39378:	add	r2, r7, #1
   3937c:	cmp	r2, #2
   39380:	bge	39308 <flatcc_json_printer_fmt_float@@Base+0x4e0>
   39384:	add	r0, lr, #1
   39388:	str	r0, [sp, #40]	; 0x28
   3938c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   39390:	mov	r4, r9
   39394:	mov	r1, #0
   39398:	mov	r9, #1
   3939c:	rsb	r2, r0, #32
   393a0:	str	r2, [sp, #56]	; 0x38
   393a4:	sub	r2, r0, #32
   393a8:	str	r2, [sp, #52]	; 0x34
   393ac:	ldr	lr, [sp, #40]	; 0x28
   393b0:	ldr	sl, [fp, #-44]	; 0xffffffd4
   393b4:	ldr	r6, [sp, #48]	; 0x30
   393b8:	mov	ip, r1
   393bc:	mov	r1, #10
   393c0:	str	r7, [fp, #-32]	; 0xffffffe0
   393c4:	mov	r2, r9
   393c8:	umull	r7, r1, r3, r1
   393cc:	add	r3, r4, r4, lsl #2
   393d0:	add	r8, ip, ip, lsl #2
   393d4:	lsr	r5, r7, r0
   393d8:	ldr	r0, [sp, #56]	; 0x38
   393dc:	add	r3, r1, r3, lsl #1
   393e0:	orr	r1, r5, r3, lsl r0
   393e4:	ldr	r0, [sp, #52]	; 0x34
   393e8:	cmp	r0, #0
   393ec:	lsrge	r1, r3, r0
   393f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   393f4:	add	r5, r1, #48	; 0x30
   393f8:	strb	r5, [r0, lr]
   393fc:	mov	r0, #10
   39400:	add	lr, lr, #1
   39404:	umull	r9, r1, r9, r0
   39408:	umull	r6, r4, r6, r0
   3940c:	add	r0, sl, sl, lsl #2
   39410:	add	sl, r4, r0, lsl #1
   39414:	ldr	r0, [fp, #-52]	; 0xffffffcc
   39418:	add	r1, r1, r8, lsl #1
   3941c:	and	r4, r3, r0
   39420:	ldr	r0, [fp, #-48]	; 0xffffffd0
   39424:	and	r3, r7, r0
   39428:	ldr	r7, [fp, #-32]	; 0xffffffe0
   3942c:	subs	r0, r3, r6
   39430:	sbcs	r0, r4, sl
   39434:	ldr	r0, [fp, #-40]	; 0xffffffd8
   39438:	sub	r7, r7, #1
   3943c:	bcs	393b8 <flatcc_json_printer_fmt_float@@Base+0x590>
   39440:	str	r4, [sp]
   39444:	str	r8, [sp, #52]	; 0x34
   39448:	str	r2, [sp, #56]	; 0x38
   3944c:	str	ip, [fp, #-52]	; 0xffffffcc
   39450:	str	lr, [sp, #40]	; 0x28
   39454:	ldr	r0, [sp, #8]
   39458:	ldr	r2, [sp, #4]
   3945c:	ldr	ip, [sp, #20]
   39460:	ldr	lr, [sp, #36]	; 0x24
   39464:	ldr	r4, [sp, #12]
   39468:	cmp	r0, r2
   3946c:	ldr	r2, [sp, #16]
   39470:	bne	39c20 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   39474:	subs	r0, lr, r4
   39478:	sbcs	r0, ip, r2
   3947c:	bcc	39c20 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   39480:	subs	r0, lr, r4
   39484:	sbc	r2, ip, r2
   39488:	umull	ip, r4, r9, r0
   3948c:	mla	r2, r9, r2, r4
   39490:	mla	r0, r1, r0, r2
   39494:	adds	r2, ip, r9
   39498:	str	r2, [sp, #36]	; 0x24
   3949c:	adc	r2, r0, r1
   394a0:	subs	lr, ip, r9
   394a4:	mov	ip, #0
   394a8:	str	r2, [sp, #20]
   394ac:	sbc	r9, r0, r1
   394b0:	subs	r0, r6, r3
   394b4:	ldr	r4, [sp]
   394b8:	str	sl, [fp, #-44]	; 0xffffffd4
   394bc:	ldr	r2, [sp, #32]
   394c0:	sbc	r1, sl, r4
   394c4:	subs	r0, r0, r2
   394c8:	ldr	r0, [sp, #44]	; 0x2c
   394cc:	str	r7, [fp, #-32]	; 0xffffffe0
   394d0:	str	r6, [sp, #48]	; 0x30
   394d4:	sbcs	r0, r1, r0
   394d8:	movwcc	ip, #1
   394dc:	cmp	ip, #0
   394e0:	bne	39594 <flatcc_json_printer_fmt_float@@Base+0x76c>
   394e4:	subs	r0, r3, lr
   394e8:	str	lr, [fp, #-40]	; 0xffffffd8
   394ec:	sbcs	r0, r4, r9
   394f0:	bcs	39594 <flatcc_json_printer_fmt_float@@Base+0x76c>
   394f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   394f8:	ldr	r1, [sp, #40]	; 0x28
   394fc:	add	r0, r0, r1
   39500:	str	r0, [fp, #-48]	; 0xffffffd0
   39504:	ldr	r6, [sp, #44]	; 0x2c
   39508:	ldr	lr, [sp, #32]
   3950c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   39510:	adds	r8, r3, lr
   39514:	adc	sl, r4, r6
   39518:	subs	r0, r8, r2
   3951c:	sbcs	r0, sl, r9
   39520:	bcc	39544 <flatcc_json_printer_fmt_float@@Base+0x71c>
   39524:	subs	r0, r8, r2
   39528:	sbc	r1, sl, r9
   3952c:	subs	r7, r2, r3
   39530:	sbc	r6, r9, r4
   39534:	subs	r0, r7, r0
   39538:	sbcs	r0, r6, r1
   3953c:	ldr	r6, [sp, #44]	; 0x2c
   39540:	bcc	396f0 <flatcc_json_printer_fmt_float@@Base+0x8c8>
   39544:	ldr	r0, [fp, #-48]	; 0xffffffd0
   39548:	sub	r5, r5, #1
   3954c:	mov	ip, #0
   39550:	strb	r5, [r0, #-1]
   39554:	ldr	r0, [sp, #48]	; 0x30
   39558:	subs	r1, r0, r8
   3955c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   39560:	sbc	r7, r0, sl
   39564:	subs	r0, r1, lr
   39568:	sbcs	r0, r7, r6
   3956c:	movwcc	ip, #1
   39570:	subs	r0, r8, r2
   39574:	sbcs	r0, sl, r9
   39578:	bcs	396fc <flatcc_json_printer_fmt_float@@Base+0x8d4>
   3957c:	subs	r0, r1, lr
   39580:	mov	r3, r8
   39584:	mov	r4, sl
   39588:	sbcs	r0, r7, r6
   3958c:	bcs	39510 <flatcc_json_printer_fmt_float@@Base+0x6e8>
   39590:	b	396fc <flatcc_json_printer_fmt_float@@Base+0x8d4>
   39594:	ldr	r6, [sp, #44]	; 0x2c
   39598:	b	396f4 <flatcc_json_printer_fmt_float@@Base+0x8cc>
   3959c:	ldr	r9, [sp, #36]	; 0x24
   395a0:	ldr	r0, [sp, #12]
   395a4:	subs	r3, r9, r0
   395a8:	str	r3, [sp, #52]	; 0x34
   395ac:	ldr	r8, [sp, #20]
   395b0:	ldr	r7, [sp, #16]
   395b4:	sbc	r3, r8, r7
   395b8:	str	r3, [sp, #56]	; 0x38
   395bc:	ldr	r3, [sp, #8]
   395c0:	ldr	ip, [sp, #4]
   395c4:	cmp	r3, ip
   395c8:	bne	39c20 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   395cc:	subs	r0, r9, r0
   395d0:	sbcs	r0, r8, r7
   395d4:	bcc	39c20 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   395d8:	ldr	r0, [sp, #48]	; 0x30
   395dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   395e0:	lsr	r8, r1, sl
   395e4:	subs	r0, r0, r2
   395e8:	sbc	r3, r3, r5
   395ec:	cmp	r4, #0
   395f0:	mov	sl, r3
   395f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   395f8:	lslge	r8, r1, r4
   395fc:	lsl	r9, r1, r3
   39600:	mov	r1, #0
   39604:	movwge	r9, #0
   39608:	subs	r7, r0, r9
   3960c:	sbcs	r7, sl, r8
   39610:	ldr	r7, [sp, #52]	; 0x34
   39614:	movwcc	r1, #1
   39618:	adds	r3, r7, #1
   3961c:	str	r3, [fp, #-48]	; 0xffffffd0
   39620:	ldr	r4, [sp, #56]	; 0x38
   39624:	adc	r3, r4, #0
   39628:	subs	ip, r7, #1
   3962c:	str	r3, [fp, #-52]	; 0xffffffcc
   39630:	sbc	r3, r4, #0
   39634:	subs	r4, r2, ip
   39638:	sbcs	r4, r5, r3
   3963c:	bcs	396e8 <flatcc_json_printer_fmt_float@@Base+0x8c0>
   39640:	subs	r0, r0, r9
   39644:	sbcs	r0, sl, r8
   39648:	bcc	396e8 <flatcc_json_printer_fmt_float@@Base+0x8c0>
   3964c:	ldr	sl, [sp, #48]	; 0x30
   39650:	adds	r4, r2, r9
   39654:	adc	r0, r5, r8
   39658:	subs	r1, r4, ip
   3965c:	sbcs	r1, r0, r3
   39660:	bcc	3969c <flatcc_json_printer_fmt_float@@Base+0x874>
   39664:	subs	sl, r4, ip
   39668:	mov	r7, r9
   3966c:	mov	r9, r8
   39670:	sbc	r1, r0, r3
   39674:	str	r1, [fp, #-40]	; 0xffffffd8
   39678:	subs	r1, ip, r2
   3967c:	sbc	r8, r3, r5
   39680:	subs	r1, r1, sl
   39684:	ldr	sl, [sp, #48]	; 0x30
   39688:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3968c:	sbcs	r1, r8, r1
   39690:	mov	r8, r9
   39694:	mov	r9, r7
   39698:	bcc	397d8 <flatcc_json_printer_fmt_float@@Base+0x9b0>
   3969c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   396a0:	sub	r6, r6, #1
   396a4:	subs	r2, sl, r4
   396a8:	strb	r6, [r1, lr]
   396ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   396b0:	sbc	r5, r1, r0
   396b4:	subs	r1, r2, r9
   396b8:	sbcs	r1, r5, r8
   396bc:	mov	r1, #0
   396c0:	movwcc	r1, #1
   396c4:	subs	r7, r4, ip
   396c8:	sbcs	r7, r0, r3
   396cc:	bcs	397e4 <flatcc_json_printer_fmt_float@@Base+0x9bc>
   396d0:	subs	r2, r2, r9
   396d4:	sbcs	r2, r5, r8
   396d8:	mov	r5, r0
   396dc:	mov	r2, r4
   396e0:	bcs	39650 <flatcc_json_printer_fmt_float@@Base+0x828>
   396e4:	b	397e4 <flatcc_json_printer_fmt_float@@Base+0x9bc>
   396e8:	ldr	sl, [sp, #48]	; 0x30
   396ec:	b	397dc <flatcc_json_printer_fmt_float@@Base+0x9b4>
   396f0:	mov	ip, #0
   396f4:	mov	r8, r3
   396f8:	mov	sl, r4
   396fc:	ldr	r3, [sp, #36]	; 0x24
   39700:	ldr	r4, [sp, #20]
   39704:	subs	r0, r8, r3
   39708:	sbcs	r0, sl, r4
   3970c:	bcs	39774 <flatcc_json_printer_fmt_float@@Base+0x94c>
   39710:	cmp	ip, #0
   39714:	bne	39774 <flatcc_json_printer_fmt_float@@Base+0x94c>
   39718:	ldr	r0, [sp, #32]
   3971c:	ldr	r5, [sp, #56]	; 0x38
   39720:	ldr	r9, [sp, #52]	; 0x34
   39724:	adds	r1, r8, r0
   39728:	adc	r7, sl, r6
   3972c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   39730:	subs	r0, r1, r3
   39734:	sbcs	r0, r7, r4
   39738:	bcc	398dc <flatcc_json_printer_fmt_float@@Base+0xab4>
   3973c:	subs	ip, r1, r3
   39740:	mov	r0, #20
   39744:	sbc	lr, r7, r4
   39748:	subs	r7, r3, r8
   3974c:	umull	r0, r3, r5, r0
   39750:	sbc	r1, r4, sl
   39754:	add	r3, r3, r9, lsl #2
   39758:	subs	r0, r8, r0
   3975c:	sbcs	r0, sl, r3
   39760:	bcc	398dc <flatcc_json_printer_fmt_float@@Base+0xab4>
   39764:	subs	r0, ip, r7
   39768:	sbcs	r0, lr, r1
   3976c:	bcs	39798 <flatcc_json_printer_fmt_float@@Base+0x970>
   39770:	b	398dc <flatcc_json_printer_fmt_float@@Base+0xab4>
   39774:	ldr	r5, [sp, #56]	; 0x38
   39778:	ldr	r3, [sp, #52]	; 0x34
   3977c:	mov	r0, #20
   39780:	ldr	r6, [fp, #-52]	; 0xffffffcc
   39784:	umull	r0, r1, r5, r0
   39788:	add	r1, r1, r3, lsl #2
   3978c:	subs	r0, r8, r0
   39790:	sbcs	r0, sl, r1
   39794:	bcc	398dc <flatcc_json_printer_fmt_float@@Base+0xab4>
   39798:	mvn	r7, #0
   3979c:	ldr	r2, [sp, #48]	; 0x30
   397a0:	subs	r0, r7, #39	; 0x27
   397a4:	umull	r1, r3, r5, r0
   397a8:	sbc	r7, r7, #0
   397ac:	mla	r3, r5, r7, r3
   397b0:	mla	r0, r6, r0, r3
   397b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   397b8:	adds	r1, r1, r2
   397bc:	adc	r0, r0, r3
   397c0:	subs	r1, r1, r8
   397c4:	sbcs	r0, r0, sl
   397c8:	bcc	398dc <flatcc_json_printer_fmt_float@@Base+0xab4>
   397cc:	ldr	r0, [sp, #40]	; 0x28
   397d0:	sub	lr, r0, #1
   397d4:	b	39884 <flatcc_json_printer_fmt_float@@Base+0xa5c>
   397d8:	mov	r1, #0
   397dc:	mov	r4, r2
   397e0:	mov	r0, r5
   397e4:	add	r2, lr, #1
   397e8:	str	r2, [sp, #40]	; 0x28
   397ec:	ldr	r5, [fp, #-48]	; 0xffffffd0
   397f0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   397f4:	subs	r2, r4, r5
   397f8:	sbcs	r2, r0, r6
   397fc:	bcs	39860 <flatcc_json_printer_fmt_float@@Base+0xa38>
   39800:	cmp	r1, #0
   39804:	bne	39860 <flatcc_json_printer_fmt_float@@Base+0xa38>
   39808:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3980c:	adds	r1, r4, r9
   39810:	adc	r2, r0, r8
   39814:	subs	r7, r1, r5
   39818:	sbcs	r7, r2, r6
   3981c:	bcc	398dc <flatcc_json_printer_fmt_float@@Base+0xab4>
   39820:	subs	ip, r1, r5
   39824:	sbc	r9, r2, r6
   39828:	subs	r7, r5, r4
   3982c:	sbc	r1, r6, r0
   39830:	subs	r8, sl, #4
   39834:	sbc	r3, r3, #0
   39838:	subs	r2, r4, #2
   3983c:	sbcs	r2, r0, #0
   39840:	bcc	398dc <flatcc_json_printer_fmt_float@@Base+0xab4>
   39844:	subs	r2, ip, r7
   39848:	sbcs	r1, r9, r1
   3984c:	bcc	398dc <flatcc_json_printer_fmt_float@@Base+0xab4>
   39850:	subs	r1, r8, r4
   39854:	sbcs	r0, r3, r0
   39858:	bcs	39884 <flatcc_json_printer_fmt_float@@Base+0xa5c>
   3985c:	b	398dc <flatcc_json_printer_fmt_float@@Base+0xab4>
   39860:	ldr	r2, [fp, #-44]	; 0xffffffd4
   39864:	subs	r1, sl, #4
   39868:	sbc	r2, r2, #0
   3986c:	subs	r3, r4, #2
   39870:	sbcs	r3, r0, #0
   39874:	bcc	398dc <flatcc_json_printer_fmt_float@@Base+0xab4>
   39878:	subs	r1, r1, r4
   3987c:	sbcs	r0, r2, r0
   39880:	bcc	398dc <flatcc_json_printer_fmt_float@@Base+0xab4>
   39884:	ldr	r0, [sp, #28]
   39888:	ldr	r4, [sp, #40]	; 0x28
   3988c:	ldr	r7, [fp, #-32]	; 0xffffffe0
   39890:	ldrsh	r5, [r0, #26]
   39894:	sub	r0, r4, #1
   39898:	cmp	r4, #3
   3989c:	movwlt	r0, #1
   398a0:	sub	r9, r7, r5
   398a4:	rsb	r3, r9, #0
   398a8:	cmp	r0, r3
   398ac:	movge	r0, r3
   398b0:	cmn	r9, #1
   398b4:	ble	39908 <flatcc_json_printer_fmt_float@@Base+0xae0>
   398b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   398bc:	cmp	r9, #3
   398c0:	bcc	39988 <flatcc_json_printer_fmt_float@@Base+0xb60>
   398c4:	mov	r0, #101	; 0x65
   398c8:	add	lr, r4, #1
   398cc:	strb	r0, [r1, r4]
   398d0:	add	r0, r1, lr
   398d4:	mov	r2, r0
   398d8:	b	39ae4 <flatcc_json_printer_fmt_float@@Base+0xcbc>
   398dc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   398e0:	movw	r1, #48317	; 0xbcbd
   398e4:	vmov	r2, r3, d0
   398e8:	movt	r1, #4
   398ec:	mov	r0, r4
   398f0:	bl	14f2c <sprintf@plt>
   398f4:	ldr	r1, [sp, #24]
   398f8:	sub	r1, r4, r1
   398fc:	add	r0, r1, r0
   39900:	sub	sp, fp, #28
   39904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39908:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3990c:	cmp	r4, r3
   39910:	bgt	399ec <flatcc_json_printer_fmt_float@@Base+0xbc4>
   39914:	add	r2, r9, r4
   39918:	cmn	r2, #2
   3991c:	blt	399ec <flatcc_json_printer_fmt_float@@Base+0xbc4>
   39920:	add	r8, r1, #2
   39924:	mvn	r0, lr
   39928:	add	r2, r8, r3
   3992c:	add	r0, r2, r0
   39930:	mov	r2, r4
   39934:	bl	14e48 <memmove@plt>
   39938:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3993c:	movw	r0, #11824	; 0x2e30
   39940:	mov	r6, r4
   39944:	strh	r0, [r1]
   39948:	rsb	r0, r4, #2
   3994c:	sub	r4, r0, r9
   39950:	mov	r0, #2
   39954:	cmp	r4, #3
   39958:	blt	39978 <flatcc_json_printer_fmt_float@@Base+0xb50>
   3995c:	sub	r0, r5, r7
   39960:	mov	r1, #48	; 0x30
   39964:	sub	r2, r0, r6
   39968:	mov	r0, r8
   3996c:	bl	14ef0 <memset@plt>
   39970:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39974:	mov	r0, r4
   39978:	ldr	ip, [sp, #24]
   3997c:	add	r6, r0, r6
   39980:	mov	r4, r6
   39984:	b	39b60 <flatcc_json_printer_fmt_float@@Base+0xd38>
   39988:	cmp	r9, #0
   3998c:	beq	39a5c <flatcc_json_printer_fmt_float@@Base+0xc34>
   39990:	add	r0, r1, r4
   39994:	mvn	r1, r7
   39998:	mov	r6, r4
   3999c:	mvn	r4, #1
   399a0:	add	r1, r1, r5
   399a4:	cmn	r1, #2
   399a8:	movle	r1, r4
   399ac:	add	r1, r7, r1
   399b0:	add	r1, r1, #2
   399b4:	sub	r2, r1, r5
   399b8:	mov	r1, #48	; 0x30
   399bc:	bl	14ef0 <memset@plt>
   399c0:	mvn	r0, r9
   399c4:	cmn	r0, #2
   399c8:	movgt	r4, r0
   399cc:	add	r0, r9, r4
   399d0:	add	r0, r0, #2
   399d4:	cmp	r0, #4
   399d8:	bcs	39a64 <flatcc_json_printer_fmt_float@@Base+0xc3c>
   399dc:	ldr	ip, [sp, #24]
   399e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   399e4:	mov	r4, r6
   399e8:	b	39ab0 <flatcc_json_printer_fmt_float@@Base+0xc88>
   399ec:	cmp	r4, #2
   399f0:	blt	39ac8 <flatcc_json_printer_fmt_float@@Base+0xca0>
   399f4:	ldr	ip, [sp, #24]
   399f8:	cmp	r0, #1
   399fc:	blt	39a24 <flatcc_json_printer_fmt_float@@Base+0xbfc>
   39a00:	add	r2, r1, r4
   39a04:	mov	r6, #0
   39a08:	mov	r3, r2
   39a0c:	ldrb	r7, [r3, #-1]!
   39a10:	add	r6, r6, #1
   39a14:	cmp	r6, r0
   39a18:	strb	r7, [r2]
   39a1c:	mov	r2, r3
   39a20:	blt	39a0c <flatcc_json_printer_fmt_float@@Base+0xbe4>
   39a24:	sub	r3, r4, r0
   39a28:	mov	r2, #46	; 0x2e
   39a2c:	adds	r7, r0, r9
   39a30:	add	r0, r4, #1
   39a34:	strb	r2, [r1, r3]
   39a38:	beq	39b74 <flatcc_json_printer_fmt_float@@Base+0xd4c>
   39a3c:	mov	r2, #101	; 0x65
   39a40:	add	lr, r4, #2
   39a44:	cmn	r7, #1
   39a48:	strb	r2, [r1, r0]
   39a4c:	add	r0, r1, lr
   39a50:	ble	39b7c <flatcc_json_printer_fmt_float@@Base+0xd54>
   39a54:	mov	r2, r0
   39a58:	b	39b8c <flatcc_json_printer_fmt_float@@Base+0xd64>
   39a5c:	ldr	ip, [sp, #24]
   39a60:	b	39b60 <flatcc_json_printer_fmt_float@@Base+0xd38>
   39a64:	ldr	ip, [sp, #24]
   39a68:	mov	r1, #0
   39a6c:	vmov.i32	q9, #1	; 0x00000001
   39a70:	vdup.32	q8, r1
   39a74:	bic	r1, r0, #3
   39a78:	vmov.32	d16[0], r6
   39a7c:	sub	r9, r9, r1
   39a80:	mov	r2, r1
   39a84:	subs	r2, r2, #4
   39a88:	vadd.i32	q8, q8, q9
   39a8c:	bne	39a84 <flatcc_json_printer_fmt_float@@Base+0xc5c>
   39a90:	vext.8	q9, q8, q8, #8
   39a94:	cmp	r0, r1
   39a98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39a9c:	vadd.i32	q8, q8, q9
   39aa0:	vdup.32	q9, d16[1]
   39aa4:	vadd.i32	q8, q8, q9
   39aa8:	vmov.32	r4, d16[0]
   39aac:	beq	39b60 <flatcc_json_printer_fmt_float@@Base+0xd38>
   39ab0:	add	r0, r9, #1
   39ab4:	sub	r0, r0, #1
   39ab8:	add	r4, r4, #1
   39abc:	cmp	r0, #1
   39ac0:	bgt	39ab4 <flatcc_json_printer_fmt_float@@Base+0xc8c>
   39ac4:	b	39b60 <flatcc_json_printer_fmt_float@@Base+0xd38>
   39ac8:	add	r0, r1, r4
   39acc:	movw	r2, #11621	; 0x2d65
   39ad0:	add	lr, r4, #1
   39ad4:	mov	r9, r3
   39ad8:	strh	r2, [r0]
   39adc:	add	r0, r1, lr
   39ae0:	add	r2, r0, #1
   39ae4:	ldr	ip, [sp, #24]
   39ae8:	movw	r7, #26215	; 0x6667
   39aec:	mov	r3, r2
   39af0:	movt	r7, #26214	; 0x6666
   39af4:	smmul	r6, r9, r7
   39af8:	asr	r5, r6, #2
   39afc:	add	r4, r5, r6, lsr #31
   39b00:	add	r6, r4, r4, lsl #2
   39b04:	sub	r6, r9, r6, lsl #1
   39b08:	add	r6, r6, #48	; 0x30
   39b0c:	strb	r6, [r3], #1
   39b10:	add	r6, r9, #9
   39b14:	mov	r9, r4
   39b18:	cmp	r6, #18
   39b1c:	bhi	39af4 <flatcc_json_printer_fmt_float@@Base+0xccc>
   39b20:	mov	r6, #0
   39b24:	mov	r7, r3
   39b28:	strb	r6, [r7], -r2
   39b2c:	cmp	r7, #2
   39b30:	blt	39b58 <flatcc_json_printer_fmt_float@@Base+0xd30>
   39b34:	add	r7, r7, r7, lsr #31
   39b38:	sub	r6, r3, #1
   39b3c:	asr	r7, r7, #1
   39b40:	ldrb	r5, [r2]
   39b44:	ldrb	r4, [r6]
   39b48:	subs	r7, r7, #1
   39b4c:	strb	r4, [r2], #1
   39b50:	strb	r5, [r6], #-1
   39b54:	bne	39b40 <flatcc_json_printer_fmt_float@@Base+0xd18>
   39b58:	sub	r0, lr, r0
   39b5c:	add	r4, r0, r3
   39b60:	mov	r0, #0
   39b64:	strb	r0, [r1, r4]!
   39b68:	sub	r0, r1, ip
   39b6c:	sub	sp, fp, #28
   39b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39b74:	mov	r4, r0
   39b78:	b	39b60 <flatcc_json_printer_fmt_float@@Base+0xd38>
   39b7c:	mov	r3, #45	; 0x2d
   39b80:	mov	r2, r0
   39b84:	rsb	r7, r7, #0
   39b88:	strb	r3, [r2], #1
   39b8c:	movw	r6, #26215	; 0x6667
   39b90:	mov	r3, r2
   39b94:	movt	r6, #26214	; 0x6666
   39b98:	smmul	r5, r7, r6
   39b9c:	asr	r4, r5, #2
   39ba0:	add	r5, r4, r5, lsr #31
   39ba4:	add	r4, r5, r5, lsl #2
   39ba8:	sub	r4, r7, r4, lsl #1
   39bac:	add	r7, r7, #9
   39bb0:	add	r4, r4, #48	; 0x30
   39bb4:	cmp	r7, #18
   39bb8:	mov	r7, r5
   39bbc:	strb	r4, [r3], #1
   39bc0:	bhi	39b98 <flatcc_json_printer_fmt_float@@Base+0xd70>
   39bc4:	mov	r6, #0
   39bc8:	mov	r7, r3
   39bcc:	strb	r6, [r7], -r2
   39bd0:	cmp	r7, #2
   39bd4:	blt	39b58 <flatcc_json_printer_fmt_float@@Base+0xd30>
   39bd8:	add	r7, r7, r7, lsr #31
   39bdc:	sub	r6, r3, #1
   39be0:	asr	r7, r7, #1
   39be4:	ldrb	r5, [r2]
   39be8:	ldrb	r4, [r6]
   39bec:	subs	r7, r7, #1
   39bf0:	strb	r4, [r2], #1
   39bf4:	strb	r5, [r6], #-1
   39bf8:	bne	39be4 <flatcc_json_printer_fmt_float@@Base+0xdbc>
   39bfc:	b	39b58 <flatcc_json_printer_fmt_float@@Base+0xd30>
   39c00:	movw	r0, #48172	; 0xbc2c
   39c04:	movw	r1, #48176	; 0xbc30
   39c08:	movw	r3, #48263	; 0xbc87
   39c0c:	mov	r2, #189	; 0xbd
   39c10:	movt	r0, #4
   39c14:	movt	r1, #4
   39c18:	movt	r3, #4
   39c1c:	bl	14f44 <__assert_fail@plt>
   39c20:	movw	r0, #48401	; 0xbd11
   39c24:	movw	r1, #47403	; 0xb92b
   39c28:	movw	r3, #48426	; 0xbd2a
   39c2c:	mov	r2, #239	; 0xef
   39c30:	movt	r0, #4
   39c34:	movt	r1, #4
   39c38:	movt	r3, #4
   39c3c:	bl	14f44 <__assert_fail@plt>
   39c40:	movw	r0, #48323	; 0xbcc3
   39c44:	movw	r1, #48176	; 0xbc30
   39c48:	movw	r3, #48360	; 0xbce8
   39c4c:	mov	r2, #138	; 0x8a
   39c50:	movt	r0, #4
   39c54:	movt	r1, #4
   39c58:	movt	r3, #4
   39c5c:	bl	14f44 <__assert_fail@plt>
   39c60:	movw	r0, #47394	; 0xb922
   39c64:	movw	r1, #47403	; 0xb92b
   39c68:	movw	r3, #47489	; 0xb981
   39c6c:	mov	r2, #260	; 0x104
   39c70:	movt	r0, #4
   39c74:	movt	r1, #4
   39c78:	movt	r3, #4
   39c7c:	bl	14f44 <__assert_fail@plt>

00039c80 <flatcc_json_printer_fmt_double@@Base>:
   39c80:	b	38e30 <flatcc_json_printer_fmt_float@@Base+0x8>

00039c84 <flatcc_json_printer_fmt_bool@@Base>:
   39c84:	cmp	r1, #0
   39c88:	movwne	r1, #29300	; 0x7274
   39c8c:	movtne	r1, #25973	; 0x6575
   39c90:	strne	r1, [r0]
   39c94:	movne	r0, #4
   39c98:	bxne	lr
   39c9c:	mov	r1, #101	; 0x65
   39ca0:	strb	r1, [r0, #4]
   39ca4:	movw	r1, #24934	; 0x6166
   39ca8:	movt	r1, #29548	; 0x736c
   39cac:	str	r1, [r0]
   39cb0:	mov	r0, #5
   39cb4:	bx	lr

00039cb8 <flatcc_json_printer_string@@Base>:
   39cb8:	b	39cbc <flatcc_json_printer_string@@Base+0x4>
   39cbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39cc0:	add	fp, sp, #28
   39cc4:	sub	sp, sp, #12
   39cc8:	mov	r5, r0
   39ccc:	mov	r4, r0
   39cd0:	mov	r6, r1
   39cd4:	mov	r3, r2
   39cd8:	ldr	r0, [r5, #20]!
   39cdc:	add	r1, r0, #1
   39ce0:	str	r5, [sp, #4]
   39ce4:	str	r1, [r5]
   39ce8:	mov	r1, #34	; 0x22
   39cec:	strb	r1, [r0]
   39cf0:	ldrb	sl, [r6]
   39cf4:	mov	r8, r6
   39cf8:	cmp	sl, #32
   39cfc:	bcc	39d3c <flatcc_json_printer_string@@Base+0x84>
   39d00:	b	39d20 <flatcc_json_printer_string@@Base+0x68>
   39d04:	strb	r2, [r1]
   39d08:	sub	r3, r0, #1
   39d0c:	add	r6, r8, #1
   39d10:	ldrb	sl, [r6]
   39d14:	mov	r8, r6
   39d18:	cmp	sl, #32
   39d1c:	bcc	39d3c <flatcc_json_printer_string@@Base+0x84>
   39d20:	uxtb	r0, sl
   39d24:	cmp	r0, #34	; 0x22
   39d28:	cmpne	r0, #92	; 0x5c
   39d2c:	beq	39d3c <flatcc_json_printer_string@@Base+0x84>
   39d30:	ldrb	sl, [r8, #1]!
   39d34:	cmp	sl, #31
   39d38:	bhi	39d20 <flatcc_json_printer_string@@Base+0x68>
   39d3c:	ldr	r0, [r4, #20]
   39d40:	ldr	r1, [r4, #16]
   39d44:	sub	r9, r8, r6
   39d48:	add	r2, r0, r9
   39d4c:	cmp	r2, r1
   39d50:	bcs	39d70 <flatcc_json_printer_string@@Base+0xb8>
   39d54:	mov	r1, r6
   39d58:	mov	r2, r9
   39d5c:	mov	r6, r3
   39d60:	bl	14e60 <memcpy@plt>
   39d64:	mov	r2, r6
   39d68:	mov	r7, r9
   39d6c:	b	39dfc <flatcc_json_printer_string@@Base+0x144>
   39d70:	cmp	r0, r1
   39d74:	str	r3, [sp, #8]
   39d78:	bcc	39d94 <flatcc_json_printer_string@@Base+0xdc>
   39d7c:	ldr	r2, [r4, #44]	; 0x2c
   39d80:	mov	r0, r4
   39d84:	mov	r1, #0
   39d88:	blx	r2
   39d8c:	ldr	r1, [r4, #16]
   39d90:	ldr	r0, [r4, #20]
   39d94:	sub	r5, r1, r0
   39d98:	mov	r7, r9
   39d9c:	cmp	r5, r9
   39da0:	bcs	39de8 <flatcc_json_printer_string@@Base+0x130>
   39da4:	mov	r1, r6
   39da8:	mov	r2, r5
   39dac:	bl	14e60 <memcpy@plt>
   39db0:	ldr	r0, [r4, #20]
   39db4:	ldr	r2, [r4, #44]	; 0x2c
   39db8:	mov	r1, #0
   39dbc:	add	r0, r0, r5
   39dc0:	str	r0, [r4, #20]
   39dc4:	mov	r0, r4
   39dc8:	blx	r2
   39dcc:	ldr	r1, [r4, #16]
   39dd0:	ldr	r0, [r4, #20]
   39dd4:	sub	r7, r7, r5
   39dd8:	add	r6, r6, r5
   39ddc:	sub	r5, r1, r0
   39de0:	cmp	r7, r5
   39de4:	bhi	39da4 <flatcc_json_printer_string@@Base+0xec>
   39de8:	ldr	r5, [sp, #4]
   39dec:	mov	r1, r6
   39df0:	mov	r2, r7
   39df4:	bl	14e60 <memcpy@plt>
   39df8:	ldr	r2, [sp, #8]
   39dfc:	ldr	r0, [r5]
   39e00:	add	r1, r0, r7
   39e04:	add	r0, r1, #1
   39e08:	str	r0, [r5]
   39e0c:	subs	r0, r2, r9
   39e10:	beq	39fb4 <flatcc_json_printer_string@@Base+0x2fc>
   39e14:	mov	r2, #92	; 0x5c
   39e18:	strb	r2, [r1]
   39e1c:	mvn	r1, #7
   39e20:	uxtab	r2, r1, sl
   39e24:	uxtb	r1, sl
   39e28:	cmp	r2, #26
   39e2c:	bhi	39eb8 <flatcc_json_printer_string@@Base+0x200>
   39e30:	add	r3, pc, #0
   39e34:	ldr	pc, [r3, r2, lsl #2]
   39e38:	andeq	r9, r3, r4, lsr #29
   39e3c:	andeq	r9, r3, r0, asr pc
   39e40:	andeq	r9, r3, r4, ror #30
   39e44:	ldrdeq	r9, [r3], -r4
   39e48:	andeq	r9, r3, r8, ror pc
   39e4c:	andeq	r9, r3, ip, lsl #31
   39e50:	ldrdeq	r9, [r3], -r4
   39e54:	ldrdeq	r9, [r3], -r4
   39e58:	ldrdeq	r9, [r3], -r4
   39e5c:	ldrdeq	r9, [r3], -r4
   39e60:	ldrdeq	r9, [r3], -r4
   39e64:	ldrdeq	r9, [r3], -r4
   39e68:	ldrdeq	r9, [r3], -r4
   39e6c:	ldrdeq	r9, [r3], -r4
   39e70:	ldrdeq	r9, [r3], -r4
   39e74:	ldrdeq	r9, [r3], -r4
   39e78:	ldrdeq	r9, [r3], -r4
   39e7c:	ldrdeq	r9, [r3], -r4
   39e80:	ldrdeq	r9, [r3], -r4
   39e84:	ldrdeq	r9, [r3], -r4
   39e88:	ldrdeq	r9, [r3], -r4
   39e8c:	ldrdeq	r9, [r3], -r4
   39e90:	ldrdeq	r9, [r3], -r4
   39e94:	ldrdeq	r9, [r3], -r4
   39e98:	ldrdeq	r9, [r3], -r4
   39e9c:	ldrdeq	r9, [r3], -r4
   39ea0:	andeq	r9, r3, r0, lsr #31
   39ea4:	ldr	r1, [r5]
   39ea8:	add	r2, r1, #1
   39eac:	str	r2, [r5]
   39eb0:	mov	r2, #98	; 0x62
   39eb4:	b	39d04 <flatcc_json_printer_string@@Base+0x4c>
   39eb8:	cmp	r1, #92	; 0x5c
   39ebc:	bne	39ed4 <flatcc_json_printer_string@@Base+0x21c>
   39ec0:	ldr	r1, [r5]
   39ec4:	add	r2, r1, #1
   39ec8:	str	r2, [r5]
   39ecc:	mov	r2, #92	; 0x5c
   39ed0:	b	39d04 <flatcc_json_printer_string@@Base+0x4c>
   39ed4:	ldr	r2, [r5]
   39ed8:	mov	r7, #48	; 0x30
   39edc:	cmp	r1, #160	; 0xa0
   39ee0:	add	r3, r2, #1
   39ee4:	str	r3, [r5]
   39ee8:	mov	r3, #117	; 0x75
   39eec:	strb	r3, [r2]
   39ef0:	ldr	r2, [r5]
   39ef4:	add	r3, r2, #1
   39ef8:	str	r3, [r5]
   39efc:	strb	r7, [r2]
   39f00:	ldr	r2, [r5]
   39f04:	add	r3, r2, #1
   39f08:	str	r3, [r5]
   39f0c:	strb	r7, [r2]
   39f10:	ldr	r2, [r5]
   39f14:	add	r3, r2, #1
   39f18:	str	r3, [r5]
   39f1c:	mov	r3, #87	; 0x57
   39f20:	movwcc	r3, #48	; 0x30
   39f24:	add	r1, r3, r1, lsr #4
   39f28:	mov	r3, #87	; 0x57
   39f2c:	strb	r1, [r2]
   39f30:	ldr	r1, [r5]
   39f34:	add	r2, r1, #1
   39f38:	str	r2, [r5]
   39f3c:	and	r2, sl, #15
   39f40:	cmp	r2, #10
   39f44:	movwcc	r3, #48	; 0x30
   39f48:	add	r2, r3, r2
   39f4c:	b	39d04 <flatcc_json_printer_string@@Base+0x4c>
   39f50:	ldr	r1, [r5]
   39f54:	add	r2, r1, #1
   39f58:	str	r2, [r5]
   39f5c:	mov	r2, #116	; 0x74
   39f60:	b	39d04 <flatcc_json_printer_string@@Base+0x4c>
   39f64:	ldr	r1, [r5]
   39f68:	add	r2, r1, #1
   39f6c:	str	r2, [r5]
   39f70:	mov	r2, #110	; 0x6e
   39f74:	b	39d04 <flatcc_json_printer_string@@Base+0x4c>
   39f78:	ldr	r1, [r5]
   39f7c:	add	r2, r1, #1
   39f80:	str	r2, [r5]
   39f84:	mov	r2, #102	; 0x66
   39f88:	b	39d04 <flatcc_json_printer_string@@Base+0x4c>
   39f8c:	ldr	r1, [r5]
   39f90:	add	r2, r1, #1
   39f94:	str	r2, [r5]
   39f98:	mov	r2, #114	; 0x72
   39f9c:	b	39d04 <flatcc_json_printer_string@@Base+0x4c>
   39fa0:	ldr	r1, [r5]
   39fa4:	add	r2, r1, #1
   39fa8:	str	r2, [r5]
   39fac:	mov	r2, #34	; 0x22
   39fb0:	b	39d04 <flatcc_json_printer_string@@Base+0x4c>
   39fb4:	mov	r0, #34	; 0x22
   39fb8:	strb	r0, [r1]
   39fbc:	sub	sp, fp, #28
   39fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00039fc4 <flatcc_json_printer_write@@Base>:
   39fc4:	push	{r4, r5, r6, r7, fp, lr}
   39fc8:	add	fp, sp, #16
   39fcc:	mov	r6, r1
   39fd0:	mov	r5, r0
   39fd4:	ldr	r1, [r0, #16]
   39fd8:	ldr	r0, [r0, #20]
   39fdc:	mov	r4, r2
   39fe0:	add	r2, r0, r2
   39fe4:	cmp	r2, r1
   39fe8:	bcc	3a05c <flatcc_json_printer_write@@Base+0x98>
   39fec:	cmp	r0, r1
   39ff0:	bcc	3a00c <flatcc_json_printer_write@@Base+0x48>
   39ff4:	ldr	r2, [r5, #44]	; 0x2c
   39ff8:	mov	r0, r5
   39ffc:	mov	r1, #0
   3a000:	blx	r2
   3a004:	ldr	r1, [r5, #16]
   3a008:	ldr	r0, [r5, #20]
   3a00c:	sub	r7, r1, r0
   3a010:	cmp	r7, r4
   3a014:	bcs	3a05c <flatcc_json_printer_write@@Base+0x98>
   3a018:	mov	r1, r6
   3a01c:	mov	r2, r7
   3a020:	bl	14e60 <memcpy@plt>
   3a024:	ldr	r0, [r5, #20]
   3a028:	ldr	r2, [r5, #44]	; 0x2c
   3a02c:	mov	r1, #0
   3a030:	add	r0, r0, r7
   3a034:	str	r0, [r5, #20]
   3a038:	mov	r0, r5
   3a03c:	blx	r2
   3a040:	ldr	r1, [r5, #16]
   3a044:	ldr	r0, [r5, #20]
   3a048:	sub	r4, r4, r7
   3a04c:	add	r6, r6, r7
   3a050:	sub	r7, r1, r0
   3a054:	cmp	r4, r7
   3a058:	bhi	3a018 <flatcc_json_printer_write@@Base+0x54>
   3a05c:	mov	r1, r6
   3a060:	mov	r2, r4
   3a064:	bl	14e60 <memcpy@plt>
   3a068:	ldr	r0, [r5, #20]
   3a06c:	add	r0, r0, r4
   3a070:	str	r0, [r5, #20]
   3a074:	pop	{r4, r5, r6, r7, fp, pc}

0003a078 <flatcc_json_printer_nl@@Base>:
   3a078:	ldr	r1, [r0, #20]
   3a07c:	add	r2, r1, #1
   3a080:	str	r2, [r0, #20]
   3a084:	mov	r2, #10
   3a088:	strb	r2, [r1]
   3a08c:	ldr	r1, [r0, #16]
   3a090:	ldr	r2, [r0, #20]
   3a094:	cmp	r2, r1
   3a098:	bxcc	lr
   3a09c:	ldr	r2, [r0, #44]	; 0x2c
   3a0a0:	mov	r1, #0
   3a0a4:	bx	r2

0003a0a8 <flatcc_json_printer_char@@Base>:
   3a0a8:	ldr	r2, [r0, #20]
   3a0ac:	add	r3, r2, #1
   3a0b0:	str	r3, [r0, #20]
   3a0b4:	strb	r1, [r2]
   3a0b8:	bx	lr

0003a0bc <flatcc_json_printer_indent@@Base>:
   3a0bc:	push	{r4, r5, r6, sl, fp, lr}
   3a0c0:	add	fp, sp, #16
   3a0c4:	mov	r4, r0
   3a0c8:	ldr	r1, [r0, #16]
   3a0cc:	ldr	r0, [r0, #20]
   3a0d0:	ldrb	r2, [r4, #25]
   3a0d4:	ldr	r3, [r4, #32]
   3a0d8:	mla	r6, r3, r2, r0
   3a0dc:	mul	r5, r3, r2
   3a0e0:	cmp	r6, r1
   3a0e4:	bls	3a154 <flatcc_json_printer_indent@@Base+0x98>
   3a0e8:	cmp	r0, r1
   3a0ec:	bcc	3a108 <flatcc_json_printer_indent@@Base+0x4c>
   3a0f0:	ldr	r2, [r4, #44]	; 0x2c
   3a0f4:	mov	r0, r4
   3a0f8:	mov	r1, #0
   3a0fc:	blx	r2
   3a100:	ldr	r1, [r4, #16]
   3a104:	ldr	r0, [r4, #20]
   3a108:	sub	r6, r1, r0
   3a10c:	cmp	r6, r5
   3a110:	bcs	3a154 <flatcc_json_printer_indent@@Base+0x98>
   3a114:	mov	r1, #32
   3a118:	mov	r2, r6
   3a11c:	bl	14ef0 <memset@plt>
   3a120:	ldr	r0, [r4, #20]
   3a124:	ldr	r2, [r4, #44]	; 0x2c
   3a128:	mov	r1, #0
   3a12c:	add	r0, r0, r6
   3a130:	str	r0, [r4, #20]
   3a134:	mov	r0, r4
   3a138:	blx	r2
   3a13c:	ldr	r1, [r4, #16]
   3a140:	ldr	r0, [r4, #20]
   3a144:	sub	r5, r5, r6
   3a148:	sub	r6, r1, r0
   3a14c:	cmp	r5, r6
   3a150:	bhi	3a114 <flatcc_json_printer_indent@@Base+0x58>
   3a154:	mov	r1, #32
   3a158:	mov	r2, r5
   3a15c:	bl	14ef0 <memset@plt>
   3a160:	ldr	r0, [r4, #20]
   3a164:	add	r0, r0, r5
   3a168:	str	r0, [r4, #20]
   3a16c:	pop	{r4, r5, r6, sl, fp, pc}

0003a170 <flatcc_json_printer_add_level@@Base>:
   3a170:	ldr	r2, [r0, #32]
   3a174:	add	r1, r2, r1
   3a178:	str	r1, [r0, #32]
   3a17c:	bx	lr

0003a180 <flatcc_json_printer_get_level@@Base>:
   3a180:	ldr	r0, [r0, #32]
   3a184:	bx	lr

0003a188 <flatcc_json_printer_uint8@@Base>:
   3a188:	push	{fp, lr}
   3a18c:	mov	fp, sp
   3a190:	ldr	lr, [r0, #20]
   3a194:	cmp	r1, #100	; 0x64
   3a198:	bcc	3a1f0 <flatcc_json_printer_uint8@@Base+0x68>
   3a19c:	mov	r3, #0
   3a1a0:	strb	r3, [lr, #3]
   3a1a4:	movw	r3, #34079	; 0x851f
   3a1a8:	movt	r3, #20971	; 0x51eb
   3a1ac:	umull	r3, ip, r1, r3
   3a1b0:	mov	r3, #48	; 0x30
   3a1b4:	orr	r3, r3, ip, lsr #5
   3a1b8:	lsr	ip, ip, #5
   3a1bc:	strb	r3, [lr]
   3a1c0:	mov	r3, #100	; 0x64
   3a1c4:	mls	r1, ip, r3, r1
   3a1c8:	movw	r3, #48496	; 0xbd70
   3a1cc:	movt	r3, #4
   3a1d0:	add	r1, r3, r1, lsl #1
   3a1d4:	ldrh	r1, [r1]
   3a1d8:	strh	r1, [lr, #1]
   3a1dc:	mov	r1, #3
   3a1e0:	ldr	r2, [r0, #20]
   3a1e4:	add	r1, r2, r1
   3a1e8:	str	r1, [r0, #20]
   3a1ec:	pop	{fp, pc}
   3a1f0:	cmp	r1, #10
   3a1f4:	bcc	3a240 <flatcc_json_printer_uint8@@Base+0xb8>
   3a1f8:	mov	r3, #0
   3a1fc:	strb	r3, [lr, #2]
   3a200:	movw	r3, #34079	; 0x851f
   3a204:	movt	r3, #20971	; 0x51eb
   3a208:	umull	r3, r2, r1, r3
   3a20c:	lsr	r2, r2, #5
   3a210:	mov	r3, #100	; 0x64
   3a214:	mls	r1, r2, r3, r1
   3a218:	movw	r2, #48496	; 0xbd70
   3a21c:	movt	r2, #4
   3a220:	add	r1, r2, r1, lsl #1
   3a224:	ldrh	r1, [r1]
   3a228:	strh	r1, [lr]
   3a22c:	mov	r1, #2
   3a230:	ldr	r2, [r0, #20]
   3a234:	add	r1, r2, r1
   3a238:	str	r1, [r0, #20]
   3a23c:	pop	{fp, pc}
   3a240:	mov	r2, #0
   3a244:	add	r1, r1, #48	; 0x30
   3a248:	strb	r2, [lr, #1]
   3a24c:	strb	r1, [lr]
   3a250:	mov	r1, #1
   3a254:	ldr	r2, [r0, #20]
   3a258:	add	r1, r2, r1
   3a25c:	str	r1, [r0, #20]
   3a260:	pop	{fp, pc}

0003a264 <flatcc_json_printer_uint16@@Base>:
   3a264:	push	{r4, sl, fp, lr}
   3a268:	add	fp, sp, #8
   3a26c:	mov	r2, r1
   3a270:	ldr	r1, [r0, #20]
   3a274:	mov	r4, r0
   3a278:	mov	r0, r2
   3a27c:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3a280:	ldr	r1, [r4, #20]
   3a284:	add	r0, r1, r0
   3a288:	str	r0, [r4, #20]
   3a28c:	pop	{r4, sl, fp, pc}
   3a290:	mov	ip, r0
   3a294:	cmp	r0, #1000	; 0x3e8
   3a298:	bcc	3a300 <flatcc_json_printer_uint16@@Base+0x9c>
   3a29c:	movw	r3, #9999	; 0x270f
   3a2a0:	mov	r0, #4
   3a2a4:	cmp	ip, r3
   3a2a8:	movwhi	r0, #5
   3a2ac:	mov	r3, #0
   3a2b0:	tst	r0, #1
   3a2b4:	strb	r3, [r1, r0]!
   3a2b8:	bne	3a334 <flatcc_json_printer_uint16@@Base+0xd0>
   3a2bc:	cmp	r0, #2
   3a2c0:	beq	3a3bc <flatcc_json_printer_uint16@@Base+0x158>
   3a2c4:	cmp	r0, #4
   3a2c8:	bxne	lr
   3a2cc:	movw	r2, #34079	; 0x851f
   3a2d0:	movt	r2, #20971	; 0x51eb
   3a2d4:	umull	r2, r3, ip, r2
   3a2d8:	lsr	r3, r3, #5
   3a2dc:	mov	r2, #100	; 0x64
   3a2e0:	mls	r2, r3, r2, ip
   3a2e4:	uxth	ip, r2
   3a2e8:	movw	r2, #48496	; 0xbd70
   3a2ec:	movt	r2, #4
   3a2f0:	add	r2, r2, ip, lsl #1
   3a2f4:	ldrh	r2, [r2]
   3a2f8:	strh	r2, [r1, #-2]!
   3a2fc:	b	3a3c0 <flatcc_json_printer_uint16@@Base+0x15c>
   3a300:	cmp	ip, #100	; 0x64
   3a304:	bcc	3a318 <flatcc_json_printer_uint16@@Base+0xb4>
   3a308:	mov	r0, #0
   3a30c:	strb	r0, [r1, #3]!
   3a310:	mov	r0, #3
   3a314:	b	3a37c <flatcc_json_printer_uint16@@Base+0x118>
   3a318:	mov	r0, #1
   3a31c:	cmp	ip, #9
   3a320:	movwhi	r0, #2
   3a324:	mov	r3, #0
   3a328:	tst	r0, #1
   3a32c:	strb	r3, [r1, r0]!
   3a330:	beq	3a2bc <flatcc_json_printer_uint16@@Base+0x58>
   3a334:	cmp	r0, #1
   3a338:	beq	3a3f4 <flatcc_json_printer_uint16@@Base+0x190>
   3a33c:	cmp	r0, #3
   3a340:	beq	3a37c <flatcc_json_printer_uint16@@Base+0x118>
   3a344:	cmp	r0, #5
   3a348:	bne	3a3f0 <flatcc_json_printer_uint16@@Base+0x18c>
   3a34c:	movw	r3, #34079	; 0x851f
   3a350:	movt	r3, #20971	; 0x51eb
   3a354:	umull	r3, r2, ip, r3
   3a358:	lsr	r2, r2, #5
   3a35c:	mov	r3, #100	; 0x64
   3a360:	mls	ip, r2, r3, ip
   3a364:	movw	r3, #48496	; 0xbd70
   3a368:	movt	r3, #4
   3a36c:	add	r3, r3, ip, lsl #1
   3a370:	mov	ip, r2
   3a374:	ldrh	r3, [r3]
   3a378:	strh	r3, [r1, #-2]!
   3a37c:	movw	r3, #34079	; 0x851f
   3a380:	uxth	r2, ip
   3a384:	movt	r3, #20971	; 0x51eb
   3a388:	umull	r2, r3, r2, r3
   3a38c:	lsr	r3, r3, #5
   3a390:	mov	r2, #100	; 0x64
   3a394:	mls	r2, r3, r2, ip
   3a398:	uxth	ip, r2
   3a39c:	movw	r2, #48496	; 0xbd70
   3a3a0:	movt	r2, #4
   3a3a4:	add	r2, r2, ip, lsl #1
   3a3a8:	ldrh	r2, [r2]
   3a3ac:	strh	r2, [r1, #-2]!
   3a3b0:	add	r2, r3, #48	; 0x30
   3a3b4:	strb	r2, [r1, #-1]
   3a3b8:	bx	lr
   3a3bc:	mov	r3, ip
   3a3c0:	uxth	ip, r3
   3a3c4:	movw	r3, #34079	; 0x851f
   3a3c8:	movt	r3, #20971	; 0x51eb
   3a3cc:	umull	r3, r2, ip, r3
   3a3d0:	lsr	r2, r2, #5
   3a3d4:	mov	r3, #100	; 0x64
   3a3d8:	mls	r2, r2, r3, ip
   3a3dc:	movw	r3, #48496	; 0xbd70
   3a3e0:	movt	r3, #4
   3a3e4:	add	r2, r3, r2, lsl #1
   3a3e8:	ldrh	r2, [r2]
   3a3ec:	strh	r2, [r1, #-2]
   3a3f0:	bx	lr
   3a3f4:	mov	r3, ip
   3a3f8:	add	r2, r3, #48	; 0x30
   3a3fc:	strb	r2, [r1, #-1]
   3a400:	bx	lr

0003a404 <flatcc_json_printer_uint32@@Base>:
   3a404:	push	{r4, sl, fp, lr}
   3a408:	add	fp, sp, #8
   3a40c:	mov	r2, r1
   3a410:	ldr	r1, [r0, #20]
   3a414:	mov	r4, r0
   3a418:	mov	r0, r2
   3a41c:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3a420:	ldr	r1, [r4, #20]
   3a424:	add	r0, r1, r0
   3a428:	str	r0, [r4, #20]
   3a42c:	pop	{r4, sl, fp, pc}
   3a430:	mov	ip, r0
   3a434:	movw	r0, #10000	; 0x2710
   3a438:	cmp	ip, r0
   3a43c:	bcc	3a470 <flatcc_json_printer_uint32@@Base+0x6c>
   3a440:	movw	r0, #38528	; 0x9680
   3a444:	movt	r0, #152	; 0x98
   3a448:	cmp	ip, r0
   3a44c:	bcc	3a49c <flatcc_json_printer_uint32@@Base+0x98>
   3a450:	movw	r0, #51712	; 0xca00
   3a454:	movt	r0, #15258	; 0x3b9a
   3a458:	cmp	ip, r0
   3a45c:	bcc	3a60c <flatcc_json_printer_uint32@@Base+0x208>
   3a460:	mov	r0, #0
   3a464:	strb	r0, [r1, #10]!
   3a468:	mov	r0, #10
   3a46c:	b	3a4d8 <flatcc_json_printer_uint32@@Base+0xd4>
   3a470:	cmp	ip, #100	; 0x64
   3a474:	bcc	3a4bc <flatcc_json_printer_uint32@@Base+0xb8>
   3a478:	lsr	r3, ip, #3
   3a47c:	mov	r0, #3
   3a480:	cmp	r3, #124	; 0x7c
   3a484:	movwhi	r0, #4
   3a488:	mov	r3, #0
   3a48c:	tst	r0, #1
   3a490:	strb	r3, [r1, r0]!
   3a494:	beq	3a4d8 <flatcc_json_printer_uint32@@Base+0xd4>
   3a498:	b	3a658 <flatcc_json_printer_uint32@@Base+0x254>
   3a49c:	movw	r0, #16960	; 0x4240
   3a4a0:	movt	r0, #15
   3a4a4:	cmp	ip, r0
   3a4a8:	bcc	3a634 <flatcc_json_printer_uint32@@Base+0x230>
   3a4ac:	mov	r0, #0
   3a4b0:	strb	r0, [r1, #7]!
   3a4b4:	mov	r0, #7
   3a4b8:	b	3a658 <flatcc_json_printer_uint32@@Base+0x254>
   3a4bc:	mov	r0, #1
   3a4c0:	cmp	ip, #9
   3a4c4:	movwhi	r0, #2
   3a4c8:	mov	r3, #0
   3a4cc:	tst	r0, #1
   3a4d0:	strb	r3, [r1, r0]!
   3a4d4:	bne	3a658 <flatcc_json_printer_uint32@@Base+0x254>
   3a4d8:	lsr	r2, r0, #1
   3a4dc:	orr	r2, r2, r0, lsl #3
   3a4e0:	eor	r3, r2, #4
   3a4e4:	sbfx	r2, r3, #0, #4
   3a4e8:	cmp	r2, #0
   3a4ec:	blt	3a608 <flatcc_json_printer_uint32@@Base+0x204>
   3a4f0:	and	r2, r3, #15
   3a4f4:	add	r3, pc, #0
   3a4f8:	ldr	pc, [r3, r2, lsl #2]
   3a4fc:	andeq	sl, r3, ip, asr #10
   3a500:	andeq	sl, r3, ip, lsl r5
   3a504:	andeq	sl, r3, r8, lsl #12
   3a508:	andeq	sl, r3, r8, lsl #12
   3a50c:	andeq	sl, r3, r8, lsl #12
   3a510:	ldrdeq	sl, [r3], -ip
   3a514:	andeq	sl, r3, ip, lsr #11
   3a518:	andeq	sl, r3, ip, ror r5
   3a51c:	movw	r2, #34079	; 0x851f
   3a520:	movt	r2, #20971	; 0x51eb
   3a524:	umull	r2, r3, ip, r2
   3a528:	lsr	r2, r3, #5
   3a52c:	mov	r3, #100	; 0x64
   3a530:	mls	ip, r2, r3, ip
   3a534:	movw	r3, #48496	; 0xbd70
   3a538:	movt	r3, #4
   3a53c:	add	r3, r3, ip, lsl #1
   3a540:	mov	ip, r2
   3a544:	ldrh	r3, [r3]
   3a548:	strh	r3, [r1, #-2]!
   3a54c:	movw	r2, #34079	; 0x851f
   3a550:	movt	r2, #20971	; 0x51eb
   3a554:	umull	r2, r3, ip, r2
   3a558:	lsr	r2, r3, #5
   3a55c:	mov	r3, #100	; 0x64
   3a560:	mls	ip, r2, r3, ip
   3a564:	movw	r3, #48496	; 0xbd70
   3a568:	movt	r3, #4
   3a56c:	add	r3, r3, ip, lsl #1
   3a570:	mov	ip, r2
   3a574:	ldrh	r3, [r3]
   3a578:	strh	r3, [r1, #-2]!
   3a57c:	movw	r2, #34079	; 0x851f
   3a580:	movt	r2, #20971	; 0x51eb
   3a584:	umull	r2, r3, ip, r2
   3a588:	lsr	r2, r3, #5
   3a58c:	mov	r3, #100	; 0x64
   3a590:	mls	ip, r2, r3, ip
   3a594:	movw	r3, #48496	; 0xbd70
   3a598:	movt	r3, #4
   3a59c:	add	r3, r3, ip, lsl #1
   3a5a0:	mov	ip, r2
   3a5a4:	ldrh	r3, [r3]
   3a5a8:	strh	r3, [r1, #-2]!
   3a5ac:	movw	r2, #34079	; 0x851f
   3a5b0:	movt	r2, #20971	; 0x51eb
   3a5b4:	umull	r2, r3, ip, r2
   3a5b8:	lsr	r2, r3, #5
   3a5bc:	mov	r3, #100	; 0x64
   3a5c0:	mls	ip, r2, r3, ip
   3a5c4:	movw	r3, #48496	; 0xbd70
   3a5c8:	movt	r3, #4
   3a5cc:	add	r3, r3, ip, lsl #1
   3a5d0:	mov	ip, r2
   3a5d4:	ldrh	r3, [r3]
   3a5d8:	strh	r3, [r1, #-2]!
   3a5dc:	movw	r2, #34079	; 0x851f
   3a5e0:	movt	r2, #20971	; 0x51eb
   3a5e4:	umull	r2, r3, ip, r2
   3a5e8:	lsr	r2, r3, #5
   3a5ec:	mov	r3, #100	; 0x64
   3a5f0:	mls	r2, r2, r3, ip
   3a5f4:	movw	r3, #48496	; 0xbd70
   3a5f8:	movt	r3, #4
   3a5fc:	add	r2, r3, r2, lsl #1
   3a600:	ldrh	r2, [r2]
   3a604:	strh	r2, [r1, #-2]
   3a608:	bx	lr
   3a60c:	movw	r3, #57599	; 0xe0ff
   3a610:	mov	r0, #8
   3a614:	movt	r3, #1525	; 0x5f5
   3a618:	cmp	ip, r3
   3a61c:	movwhi	r0, #9
   3a620:	mov	r3, #0
   3a624:	tst	r0, #1
   3a628:	strb	r3, [r1, r0]!
   3a62c:	beq	3a4d8 <flatcc_json_printer_uint32@@Base+0xd4>
   3a630:	b	3a658 <flatcc_json_printer_uint32@@Base+0x254>
   3a634:	movw	r3, #34463	; 0x869f
   3a638:	mov	r0, #5
   3a63c:	movt	r3, #1
   3a640:	cmp	ip, r3
   3a644:	movwhi	r0, #6
   3a648:	mov	r3, #0
   3a64c:	tst	r0, #1
   3a650:	strb	r3, [r1, r0]!
   3a654:	beq	3a4d8 <flatcc_json_printer_uint32@@Base+0xd4>
   3a658:	add	r3, r0, #7
   3a65c:	ubfx	r2, r3, #1, #3
   3a660:	orr	r3, r2, r3, lsl #3
   3a664:	sbfx	r2, r3, #0, #4
   3a668:	cmp	r2, #0
   3a66c:	bxlt	lr
   3a670:	and	r2, r3, #15
   3a674:	add	r3, pc, #0
   3a678:	ldr	pc, [r3, r2, lsl #2]
   3a67c:	muleq	r3, ip, r6
   3a680:	andeq	sl, r3, r8, lsl #12
   3a684:	andeq	sl, r3, r8, lsl #12
   3a688:	andeq	sl, r3, r8, lsl #12
   3a68c:	andeq	sl, r3, ip, asr r7
   3a690:	andeq	sl, r3, ip, lsr #14
   3a694:	strdeq	sl, [r3], -ip
   3a698:	andeq	sl, r3, ip, asr #13
   3a69c:	movw	r2, #34079	; 0x851f
   3a6a0:	movt	r2, #20971	; 0x51eb
   3a6a4:	umull	r2, r3, ip, r2
   3a6a8:	lsr	r2, r3, #5
   3a6ac:	mov	r3, #100	; 0x64
   3a6b0:	mls	ip, r2, r3, ip
   3a6b4:	movw	r3, #48496	; 0xbd70
   3a6b8:	movt	r3, #4
   3a6bc:	add	r3, r3, ip, lsl #1
   3a6c0:	mov	ip, r2
   3a6c4:	ldrh	r3, [r3]
   3a6c8:	strh	r3, [r1, #-2]!
   3a6cc:	movw	r2, #34079	; 0x851f
   3a6d0:	movt	r2, #20971	; 0x51eb
   3a6d4:	umull	r2, r3, ip, r2
   3a6d8:	lsr	r2, r3, #5
   3a6dc:	mov	r3, #100	; 0x64
   3a6e0:	mls	ip, r2, r3, ip
   3a6e4:	movw	r3, #48496	; 0xbd70
   3a6e8:	movt	r3, #4
   3a6ec:	add	r3, r3, ip, lsl #1
   3a6f0:	mov	ip, r2
   3a6f4:	ldrh	r3, [r3]
   3a6f8:	strh	r3, [r1, #-2]!
   3a6fc:	movw	r2, #34079	; 0x851f
   3a700:	movt	r2, #20971	; 0x51eb
   3a704:	umull	r2, r3, ip, r2
   3a708:	lsr	r2, r3, #5
   3a70c:	mov	r3, #100	; 0x64
   3a710:	mls	ip, r2, r3, ip
   3a714:	movw	r3, #48496	; 0xbd70
   3a718:	movt	r3, #4
   3a71c:	add	r3, r3, ip, lsl #1
   3a720:	mov	ip, r2
   3a724:	ldrh	r3, [r3]
   3a728:	strh	r3, [r1, #-2]!
   3a72c:	movw	r2, #34079	; 0x851f
   3a730:	movt	r2, #20971	; 0x51eb
   3a734:	umull	r2, r3, ip, r2
   3a738:	lsr	r2, r3, #5
   3a73c:	mov	r3, #100	; 0x64
   3a740:	mls	ip, r2, r3, ip
   3a744:	movw	r3, #48496	; 0xbd70
   3a748:	movt	r3, #4
   3a74c:	add	r3, r3, ip, lsl #1
   3a750:	mov	ip, r2
   3a754:	ldrh	r3, [r3]
   3a758:	strh	r3, [r1, #-2]!
   3a75c:	add	r2, ip, #48	; 0x30
   3a760:	strb	r2, [r1, #-1]
   3a764:	bx	lr

0003a768 <flatcc_json_printer_uint64@@Base>:
   3a768:	push	{r4, sl, fp, lr}
   3a76c:	add	fp, sp, #8
   3a770:	mov	r1, r3
   3a774:	mov	r3, r2
   3a778:	ldr	r2, [r0, #20]
   3a77c:	mov	r4, r0
   3a780:	mov	r0, r3
   3a784:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3a788:	ldr	r1, [r4, #20]
   3a78c:	add	r0, r1, r0
   3a790:	str	r0, [r4, #20]
   3a794:	pop	{r4, sl, fp, pc}
   3a798:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3a79c:	add	fp, sp, #24
   3a7a0:	mov	r7, r0
   3a7a4:	movw	r0, #51711	; 0xc9ff
   3a7a8:	mov	r4, r2
   3a7ac:	movt	r0, #15258	; 0x3b9a
   3a7b0:	subs	r0, r0, r7
   3a7b4:	rscs	r0, r1, #0
   3a7b8:	bcc	3a7cc <flatcc_json_printer_uint64@@Base+0x64>
   3a7bc:	mov	r0, r7
   3a7c0:	mov	r1, r4
   3a7c4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3a7c8:	b	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3a7cc:	mov	r6, r1
   3a7d0:	movw	r1, #40960	; 0xa000
   3a7d4:	movw	r0, #2328	; 0x918
   3a7d8:	movt	r1, #20082	; 0x4e72
   3a7dc:	subs	r1, r7, r1
   3a7e0:	sbcs	r0, r6, r0
   3a7e4:	bcc	3a854 <flatcc_json_printer_uint64@@Base+0xec>
   3a7e8:	movw	r1, #0
   3a7ec:	movw	r0, #34546	; 0x86f2
   3a7f0:	movt	r1, #28609	; 0x6fc1
   3a7f4:	movt	r0, #35	; 0x23
   3a7f8:	subs	r1, r7, r1
   3a7fc:	sbcs	r0, r6, r0
   3a800:	bcc	3aa08 <flatcc_json_printer_uint64@@Base+0x2a0>
   3a804:	movw	r1, #0
   3a808:	movw	r0, #46771	; 0xb6b3
   3a80c:	movt	r1, #42852	; 0xa764
   3a810:	movt	r0, #3552	; 0xde0
   3a814:	subs	r1, r7, r1
   3a818:	sbcs	r0, r6, r0
   3a81c:	bcc	3ac98 <flatcc_json_printer_uint64@@Base+0x530>
   3a820:	movw	r1, #65535	; 0xffff
   3a824:	movw	r0, #8964	; 0x2304
   3a828:	mov	r8, #19
   3a82c:	movt	r1, #35303	; 0x89e7
   3a830:	movt	r0, #35527	; 0x8ac7
   3a834:	subs	r1, r1, r7
   3a838:	sbcs	r0, r0, r6
   3a83c:	movwcc	r8, #20
   3a840:	mov	r0, #0
   3a844:	tst	r8, #1
   3a848:	strb	r0, [r4, r8]!
   3a84c:	bne	3a890 <flatcc_json_printer_uint64@@Base+0x128>
   3a850:	b	3aa5c <flatcc_json_printer_uint64@@Base+0x2f4>
   3a854:	movw	r0, #59392	; 0xe800
   3a858:	movt	r0, #18550	; 0x4876
   3a85c:	subs	r0, r7, r0
   3a860:	sbcs	r0, r6, #23
   3a864:	bcc	3aa34 <flatcc_json_printer_uint64@@Base+0x2cc>
   3a868:	movw	r0, #4095	; 0xfff
   3a86c:	mov	r8, #12
   3a870:	movt	r0, #54437	; 0xd4a5
   3a874:	subs	r0, r0, r7
   3a878:	rscs	r0, r6, #232	; 0xe8
   3a87c:	movwcc	r8, #13
   3a880:	mov	r0, #0
   3a884:	tst	r8, #1
   3a888:	strb	r0, [r4, r8]!
   3a88c:	beq	3aa5c <flatcc_json_printer_uint64@@Base+0x2f4>
   3a890:	sub	r0, r8, #11
   3a894:	cmp	r0, #8
   3a898:	bhi	3abec <flatcc_json_printer_uint64@@Base+0x484>
   3a89c:	add	r1, pc, #0
   3a8a0:	ldr	pc, [r1, r0, lsl #2]
   3a8a4:	andeq	sl, r3, r0, lsr #19
   3a8a8:	andeq	sl, r3, ip, ror #23
   3a8ac:	andeq	sl, r3, r8, ror #18
   3a8b0:	andeq	sl, r3, ip, ror #23
   3a8b4:	andeq	sl, r3, r0, lsr r9
   3a8b8:	andeq	sl, r3, ip, ror #23
   3a8bc:	strdeq	sl, [r3], -r8
   3a8c0:	andeq	sl, r3, ip, ror #23
   3a8c4:	andeq	sl, r3, r8, asr #17
   3a8c8:	mov	r0, r7
   3a8cc:	mov	r1, r6
   3a8d0:	mov	r2, #100	; 0x64
   3a8d4:	mov	r3, #0
   3a8d8:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3a8dc:	mov	r7, r0
   3a8e0:	movw	r0, #48496	; 0xbd70
   3a8e4:	mov	r6, r1
   3a8e8:	movt	r0, #4
   3a8ec:	add	r0, r0, r2, lsl #1
   3a8f0:	ldrh	r0, [r0]
   3a8f4:	strh	r0, [r4, #-2]!
   3a8f8:	mov	r0, r7
   3a8fc:	mov	r1, r6
   3a900:	mov	r2, #100	; 0x64
   3a904:	mov	r3, #0
   3a908:	mov	r5, #100	; 0x64
   3a90c:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3a910:	movw	r2, #48496	; 0xbd70
   3a914:	mov	r6, r1
   3a918:	mls	r1, r0, r5, r7
   3a91c:	mov	r7, r0
   3a920:	movt	r2, #4
   3a924:	add	r1, r2, r1, lsl #1
   3a928:	ldrh	r1, [r1]
   3a92c:	strh	r1, [r4, #-2]!
   3a930:	mov	r0, r7
   3a934:	mov	r1, r6
   3a938:	mov	r2, #100	; 0x64
   3a93c:	mov	r3, #0
   3a940:	mov	r5, #100	; 0x64
   3a944:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3a948:	movw	r2, #48496	; 0xbd70
   3a94c:	mov	r6, r1
   3a950:	mls	r1, r0, r5, r7
   3a954:	mov	r7, r0
   3a958:	movt	r2, #4
   3a95c:	add	r1, r2, r1, lsl #1
   3a960:	ldrh	r1, [r1]
   3a964:	strh	r1, [r4, #-2]!
   3a968:	mov	r0, r7
   3a96c:	mov	r1, r6
   3a970:	mov	r2, #100	; 0x64
   3a974:	mov	r3, #0
   3a978:	mov	r5, #100	; 0x64
   3a97c:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3a980:	movw	r2, #48496	; 0xbd70
   3a984:	mov	r6, r1
   3a988:	mls	r1, r0, r5, r7
   3a98c:	mov	r7, r0
   3a990:	movt	r2, #4
   3a994:	add	r1, r2, r1, lsl #1
   3a998:	ldrh	r1, [r1]
   3a99c:	strh	r1, [r4, #-2]!
   3a9a0:	mov	r0, r7
   3a9a4:	mov	r1, r6
   3a9a8:	mov	r2, #100	; 0x64
   3a9ac:	mov	r3, #0
   3a9b0:	mov	r9, #100	; 0x64
   3a9b4:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3a9b8:	mov	r2, #10
   3a9bc:	mov	r3, #0
   3a9c0:	mov	r5, r0
   3a9c4:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3a9c8:	orr	r0, r2, #48	; 0x30
   3a9cc:	movw	r1, #48496	; 0xbd70
   3a9d0:	mov	r2, #1000	; 0x3e8
   3a9d4:	mov	r3, #0
   3a9d8:	strb	r0, [r4, #-3]!
   3a9dc:	mls	r0, r5, r9, r7
   3a9e0:	movt	r1, #4
   3a9e4:	add	r0, r1, r0, lsl #1
   3a9e8:	mov	r1, r6
   3a9ec:	ldrh	r0, [r0]
   3a9f0:	strh	r0, [r4, #1]
   3a9f4:	mov	r0, r7
   3a9f8:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3a9fc:	mov	r7, r0
   3aa00:	mov	r6, r1
   3aa04:	b	3abec <flatcc_json_printer_uint64@@Base+0x484>
   3aa08:	movw	r1, #32768	; 0x8000
   3aa0c:	movw	r0, #36222	; 0x8d7e
   3aa10:	movt	r1, #42182	; 0xa4c6
   3aa14:	movt	r0, #3
   3aa18:	subs	r1, r7, r1
   3aa1c:	sbcs	r0, r6, r0
   3aa20:	bcc	3accc <flatcc_json_printer_uint64@@Base+0x564>
   3aa24:	mov	r0, #0
   3aa28:	mov	r8, #16
   3aa2c:	strb	r0, [r4, #16]!
   3aa30:	b	3ab0c <flatcc_json_printer_uint64@@Base+0x3a4>
   3aa34:	movw	r0, #58367	; 0xe3ff
   3aa38:	mov	r8, #10
   3aa3c:	movt	r0, #21515	; 0x540b
   3aa40:	subs	r0, r0, r7
   3aa44:	rscs	r0, r6, #2
   3aa48:	movwcc	r8, #11
   3aa4c:	mov	r0, #0
   3aa50:	tst	r8, #1
   3aa54:	strb	r0, [r4, r8]!
   3aa58:	bne	3a890 <flatcc_json_printer_uint64@@Base+0x128>
   3aa5c:	sub	r0, r8, #10
   3aa60:	cmp	r0, #10
   3aa64:	bhi	3abec <flatcc_json_printer_uint64@@Base+0x484>
   3aa68:	add	r1, pc, #0
   3aa6c:	ldr	pc, [r1, r0, lsl #2]
   3aa70:			; <UNDEFINED> instruction: 0x0003abb4
   3aa74:	andeq	sl, r3, ip, ror #23
   3aa78:	andeq	sl, r3, ip, ror fp
   3aa7c:	andeq	sl, r3, ip, ror #23
   3aa80:	andeq	sl, r3, r4, asr #22
   3aa84:	andeq	sl, r3, ip, ror #23
   3aa88:	andeq	sl, r3, ip, lsl #22
   3aa8c:	andeq	sl, r3, ip, ror #23
   3aa90:	ldrdeq	sl, [r3], -r4
   3aa94:	andeq	sl, r3, ip, ror #23
   3aa98:	muleq	r3, ip, sl
   3aa9c:	mov	r0, r7
   3aaa0:	mov	r1, r6
   3aaa4:	mov	r2, #100	; 0x64
   3aaa8:	mov	r3, #0
   3aaac:	mov	r5, #100	; 0x64
   3aab0:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3aab4:	movw	r2, #48496	; 0xbd70
   3aab8:	mov	r6, r1
   3aabc:	mls	r1, r0, r5, r7
   3aac0:	mov	r7, r0
   3aac4:	movt	r2, #4
   3aac8:	add	r1, r2, r1, lsl #1
   3aacc:	ldrh	r1, [r1]
   3aad0:	strh	r1, [r4, #-2]!
   3aad4:	mov	r0, r7
   3aad8:	mov	r1, r6
   3aadc:	mov	r2, #100	; 0x64
   3aae0:	mov	r3, #0
   3aae4:	mov	r5, #100	; 0x64
   3aae8:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3aaec:	movw	r2, #48496	; 0xbd70
   3aaf0:	mov	r6, r1
   3aaf4:	mls	r1, r0, r5, r7
   3aaf8:	mov	r7, r0
   3aafc:	movt	r2, #4
   3ab00:	add	r1, r2, r1, lsl #1
   3ab04:	ldrh	r1, [r1]
   3ab08:	strh	r1, [r4, #-2]!
   3ab0c:	mov	r0, r7
   3ab10:	mov	r1, r6
   3ab14:	mov	r2, #100	; 0x64
   3ab18:	mov	r3, #0
   3ab1c:	mov	r5, #100	; 0x64
   3ab20:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3ab24:	movw	r2, #48496	; 0xbd70
   3ab28:	mov	r6, r1
   3ab2c:	mls	r1, r0, r5, r7
   3ab30:	mov	r7, r0
   3ab34:	movt	r2, #4
   3ab38:	add	r1, r2, r1, lsl #1
   3ab3c:	ldrh	r1, [r1]
   3ab40:	strh	r1, [r4, #-2]!
   3ab44:	mov	r0, r7
   3ab48:	mov	r1, r6
   3ab4c:	mov	r2, #100	; 0x64
   3ab50:	mov	r3, #0
   3ab54:	mov	r5, #100	; 0x64
   3ab58:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3ab5c:	movw	r2, #48496	; 0xbd70
   3ab60:	mov	r6, r1
   3ab64:	mls	r1, r0, r5, r7
   3ab68:	mov	r7, r0
   3ab6c:	movt	r2, #4
   3ab70:	add	r1, r2, r1, lsl #1
   3ab74:	ldrh	r1, [r1]
   3ab78:	strh	r1, [r4, #-2]!
   3ab7c:	mov	r0, r7
   3ab80:	mov	r1, r6
   3ab84:	mov	r2, #100	; 0x64
   3ab88:	mov	r3, #0
   3ab8c:	mov	r5, #100	; 0x64
   3ab90:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3ab94:	movw	r2, #48496	; 0xbd70
   3ab98:	mov	r6, r1
   3ab9c:	mls	r1, r0, r5, r7
   3aba0:	mov	r7, r0
   3aba4:	movt	r2, #4
   3aba8:	add	r1, r2, r1, lsl #1
   3abac:	ldrh	r1, [r1]
   3abb0:	strh	r1, [r4, #-2]!
   3abb4:	mov	r0, r7
   3abb8:	mov	r1, r6
   3abbc:	mov	r2, #100	; 0x64
   3abc0:	mov	r3, #0
   3abc4:	mov	r5, #100	; 0x64
   3abc8:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3abcc:	movw	r2, #48496	; 0xbd70
   3abd0:	mov	r6, r1
   3abd4:	mls	r1, r0, r5, r7
   3abd8:	mov	r7, r0
   3abdc:	movt	r2, #4
   3abe0:	add	r1, r2, r1, lsl #1
   3abe4:	ldrh	r1, [r1]
   3abe8:	strh	r1, [r4, #-2]!
   3abec:	mov	r0, r7
   3abf0:	mov	r1, r6
   3abf4:	mov	r2, #100	; 0x64
   3abf8:	mov	r3, #0
   3abfc:	mov	r5, #100	; 0x64
   3ac00:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3ac04:	mls	r2, r0, r5, r7
   3ac08:	movw	r5, #48496	; 0xbd70
   3ac0c:	mov	r3, #0
   3ac10:	movt	r5, #4
   3ac14:	add	r2, r5, r2, lsl #1
   3ac18:	ldrh	r2, [r2]
   3ac1c:	strh	r2, [r4, #-2]
   3ac20:	mov	r2, #100	; 0x64
   3ac24:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3ac28:	add	r0, r5, r2, lsl #1
   3ac2c:	mov	r1, r6
   3ac30:	movw	r2, #10000	; 0x2710
   3ac34:	mov	r3, #0
   3ac38:	ldrh	r0, [r0]
   3ac3c:	strh	r0, [r4, #-4]
   3ac40:	mov	r0, r7
   3ac44:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3ac48:	mov	r2, #100	; 0x64
   3ac4c:	mov	r3, #0
   3ac50:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3ac54:	add	r0, r5, r2, lsl #1
   3ac58:	movw	r2, #16960	; 0x4240
   3ac5c:	mov	r1, r6
   3ac60:	mov	r3, #0
   3ac64:	ldrh	r0, [r0]
   3ac68:	movt	r2, #15
   3ac6c:	strh	r0, [r4, #-6]
   3ac70:	mov	r0, r7
   3ac74:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3ac78:	mov	r2, #100	; 0x64
   3ac7c:	mov	r3, #0
   3ac80:	bl	4610c <flatcc_json_printer_clear@@Base+0x7a8>
   3ac84:	add	r0, r5, r2, lsl #1
   3ac88:	ldrh	r0, [r0]
   3ac8c:	strh	r0, [r4, #-8]
   3ac90:	mov	r0, r8
   3ac94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3ac98:	movw	r1, #65535	; 0xffff
   3ac9c:	movw	r0, #17784	; 0x4578
   3aca0:	mov	r8, #17
   3aca4:	movt	r1, #23945	; 0x5d89
   3aca8:	movt	r0, #355	; 0x163
   3acac:	subs	r1, r1, r7
   3acb0:	sbcs	r0, r0, r6
   3acb4:	movwcc	r8, #18
   3acb8:	mov	r0, #0
   3acbc:	tst	r8, #1
   3acc0:	strb	r0, [r4, r8]!
   3acc4:	bne	3a890 <flatcc_json_printer_uint64@@Base+0x128>
   3acc8:	b	3aa5c <flatcc_json_printer_uint64@@Base+0x2f4>
   3accc:	movw	r1, #16383	; 0x3fff
   3acd0:	movw	r0, #23283	; 0x5af3
   3acd4:	mov	r8, #14
   3acd8:	movt	r1, #4218	; 0x107a
   3acdc:	subs	r1, r1, r7
   3ace0:	sbcs	r0, r0, r6
   3ace4:	movwcc	r8, #15
   3ace8:	mov	r0, #0
   3acec:	tst	r8, #1
   3acf0:	strb	r0, [r4, r8]!
   3acf4:	bne	3a890 <flatcc_json_printer_uint64@@Base+0x128>
   3acf8:	b	3aa5c <flatcc_json_printer_uint64@@Base+0x2f4>

0003acfc <flatcc_json_printer_int8@@Base>:
   3acfc:	push	{r4, sl, fp, lr}
   3ad00:	add	fp, sp, #8
   3ad04:	ubfx	ip, r1, #7, #1
   3ad08:	ldr	r4, [r0, #20]
   3ad0c:	cmn	r1, #1
   3ad10:	movle	r2, #45	; 0x2d
   3ad14:	rsble	r1, r1, #0
   3ad18:	strble	r2, [r4], #1
   3ad1c:	uxtb	r2, r1
   3ad20:	cmp	r2, #100	; 0x64
   3ad24:	bcc	3ad70 <flatcc_json_printer_int8@@Base+0x74>
   3ad28:	mov	r1, #0
   3ad2c:	strb	r1, [r4, #3]
   3ad30:	movw	r1, #34079	; 0x851f
   3ad34:	movt	r1, #20971	; 0x51eb
   3ad38:	umull	r1, lr, r2, r1
   3ad3c:	mov	r1, #48	; 0x30
   3ad40:	orr	r1, r1, lr, lsr #5
   3ad44:	lsr	lr, lr, #5
   3ad48:	strb	r1, [r4]
   3ad4c:	mov	r1, #100	; 0x64
   3ad50:	mls	r1, lr, r1, r2
   3ad54:	movw	r2, #48496	; 0xbd70
   3ad58:	movt	r2, #4
   3ad5c:	add	r1, r2, r1, lsl #1
   3ad60:	ldrh	r1, [r1]
   3ad64:	strh	r1, [r4, #1]
   3ad68:	mov	r1, #3
   3ad6c:	b	3adc8 <flatcc_json_printer_int8@@Base+0xcc>
   3ad70:	cmp	r2, #10
   3ad74:	bcc	3adb4 <flatcc_json_printer_int8@@Base+0xb8>
   3ad78:	mov	r1, #0
   3ad7c:	strb	r1, [r4, #2]
   3ad80:	movw	r1, #34079	; 0x851f
   3ad84:	movt	r1, #20971	; 0x51eb
   3ad88:	umull	r1, r3, r2, r1
   3ad8c:	lsr	r1, r3, #5
   3ad90:	mov	r3, #100	; 0x64
   3ad94:	mls	r1, r1, r3, r2
   3ad98:	movw	r2, #48496	; 0xbd70
   3ad9c:	movt	r2, #4
   3ada0:	add	r1, r2, r1, lsl #1
   3ada4:	ldrh	r1, [r1]
   3ada8:	strh	r1, [r4]
   3adac:	mov	r1, #2
   3adb0:	b	3adc8 <flatcc_json_printer_int8@@Base+0xcc>
   3adb4:	mov	r2, #0
   3adb8:	add	r1, r1, #48	; 0x30
   3adbc:	strb	r2, [r4, #1]
   3adc0:	strb	r1, [r4]
   3adc4:	mov	r1, #1
   3adc8:	ldr	r2, [r0, #20]
   3adcc:	add	r1, r1, ip
   3add0:	add	r1, r2, r1
   3add4:	str	r1, [r0, #20]
   3add8:	pop	{r4, sl, fp, pc}

0003addc <flatcc_json_printer_int16@@Base>:
   3addc:	push	{r4, r5, fp, lr}
   3ade0:	add	fp, sp, #8
   3ade4:	ubfx	r5, r1, #15, #1
   3ade8:	ldr	r2, [r0, #20]
   3adec:	cmn	r1, #1
   3adf0:	mov	r4, r0
   3adf4:	movle	r0, #45	; 0x2d
   3adf8:	rsble	r1, r1, #0
   3adfc:	strble	r0, [r2], #1
   3ae00:	uxth	r0, r1
   3ae04:	mov	r1, r2
   3ae08:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3ae0c:	ldr	r1, [r4, #20]
   3ae10:	add	r0, r0, r5
   3ae14:	add	r0, r1, r0
   3ae18:	str	r0, [r4, #20]
   3ae1c:	pop	{r4, r5, fp, pc}

0003ae20 <flatcc_json_printer_int32@@Base>:
   3ae20:	push	{r4, r5, fp, lr}
   3ae24:	add	fp, sp, #8
   3ae28:	mov	r2, r1
   3ae2c:	lsr	r5, r1, #31
   3ae30:	ldr	r1, [r0, #20]
   3ae34:	mov	r4, r0
   3ae38:	cmn	r2, #1
   3ae3c:	movle	r0, #45	; 0x2d
   3ae40:	rsble	r2, r2, #0
   3ae44:	strble	r0, [r1], #1
   3ae48:	mov	r0, r2
   3ae4c:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3ae50:	ldr	r1, [r4, #20]
   3ae54:	add	r0, r0, r5
   3ae58:	add	r0, r1, r0
   3ae5c:	str	r0, [r4, #20]
   3ae60:	pop	{r4, r5, fp, pc}

0003ae64 <flatcc_json_printer_int64@@Base>:
   3ae64:	push	{r4, r5, fp, lr}
   3ae68:	add	fp, sp, #8
   3ae6c:	mov	r1, r3
   3ae70:	mov	r3, r2
   3ae74:	ldr	r2, [r0, #20]
   3ae78:	mov	r4, r0
   3ae7c:	lsr	r5, r1, #31
   3ae80:	cmn	r1, #1
   3ae84:	bgt	3ae98 <flatcc_json_printer_int64@@Base+0x34>
   3ae88:	mov	r0, #45	; 0x2d
   3ae8c:	rsbs	r3, r3, #0
   3ae90:	strb	r0, [r2], #1
   3ae94:	rsc	r1, r1, #0
   3ae98:	mov	r0, r3
   3ae9c:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3aea0:	ldr	r1, [r4, #20]
   3aea4:	add	r0, r0, r5
   3aea8:	add	r0, r1, r0
   3aeac:	str	r0, [r4, #20]
   3aeb0:	pop	{r4, r5, fp, pc}

0003aeb4 <flatcc_json_printer_float@@Base>:
   3aeb4:	push	{r4, sl, fp, lr}
   3aeb8:	add	fp, sp, #8
   3aebc:	mov	r4, r0
   3aec0:	ldr	r0, [r0, #20]
   3aec4:	vcvt.f64.f32	d0, s0
   3aec8:	bl	38e30 <flatcc_json_printer_fmt_float@@Base+0x8>
   3aecc:	ldr	r1, [r4, #20]
   3aed0:	add	r0, r1, r0
   3aed4:	str	r0, [r4, #20]
   3aed8:	pop	{r4, sl, fp, pc}

0003aedc <flatcc_json_printer_double@@Base>:
   3aedc:	push	{r4, sl, fp, lr}
   3aee0:	add	fp, sp, #8
   3aee4:	mov	r4, r0
   3aee8:	ldr	r0, [r0, #20]
   3aeec:	bl	38e30 <flatcc_json_printer_fmt_float@@Base+0x8>
   3aef0:	ldr	r1, [r4, #20]
   3aef4:	add	r0, r1, r0
   3aef8:	str	r0, [r4, #20]
   3aefc:	pop	{r4, sl, fp, pc}

0003af00 <flatcc_json_printer_enum@@Base>:
   3af00:	push	{r4, r5, r6, r7, fp, lr}
   3af04:	add	fp, sp, #16
   3af08:	mov	r4, r0
   3af0c:	ldr	r0, [r0, #20]
   3af10:	mov	r6, r1
   3af14:	mov	r1, #34	; 0x22
   3af18:	mov	r5, r2
   3af1c:	strb	r1, [r0]
   3af20:	ldrb	r2, [r4, #26]
   3af24:	ldr	r0, [r4, #20]
   3af28:	ldr	r1, [r4, #16]
   3af2c:	cmp	r2, #0
   3af30:	addeq	r0, r0, #1
   3af34:	add	r2, r0, r5
   3af38:	str	r0, [r4, #20]
   3af3c:	cmp	r2, r1
   3af40:	bcc	3afb4 <flatcc_json_printer_enum@@Base+0xb4>
   3af44:	cmp	r0, r1
   3af48:	bcc	3af64 <flatcc_json_printer_enum@@Base+0x64>
   3af4c:	ldr	r2, [r4, #44]	; 0x2c
   3af50:	mov	r0, r4
   3af54:	mov	r1, #0
   3af58:	blx	r2
   3af5c:	ldr	r1, [r4, #16]
   3af60:	ldr	r0, [r4, #20]
   3af64:	sub	r7, r1, r0
   3af68:	cmp	r7, r5
   3af6c:	bcs	3afb4 <flatcc_json_printer_enum@@Base+0xb4>
   3af70:	mov	r1, r6
   3af74:	mov	r2, r7
   3af78:	bl	14e60 <memcpy@plt>
   3af7c:	ldr	r0, [r4, #20]
   3af80:	ldr	r2, [r4, #44]	; 0x2c
   3af84:	mov	r1, #0
   3af88:	add	r0, r0, r7
   3af8c:	str	r0, [r4, #20]
   3af90:	mov	r0, r4
   3af94:	blx	r2
   3af98:	ldr	r1, [r4, #16]
   3af9c:	ldr	r0, [r4, #20]
   3afa0:	sub	r5, r5, r7
   3afa4:	add	r6, r6, r7
   3afa8:	sub	r7, r1, r0
   3afac:	cmp	r5, r7
   3afb0:	bhi	3af70 <flatcc_json_printer_enum@@Base+0x70>
   3afb4:	mov	r1, r6
   3afb8:	mov	r2, r5
   3afbc:	bl	14e60 <memcpy@plt>
   3afc0:	ldr	r0, [r4, #20]
   3afc4:	add	r1, r0, r5
   3afc8:	str	r1, [r4, #20]
   3afcc:	mov	r1, #34	; 0x22
   3afd0:	strb	r1, [r0, r5]
   3afd4:	ldrb	r0, [r4, #26]
   3afd8:	ldr	r1, [r4, #20]
   3afdc:	cmp	r0, #0
   3afe0:	addeq	r1, r1, #1
   3afe4:	str	r1, [r4, #20]
   3afe8:	pop	{r4, r5, r6, r7, fp, pc}

0003afec <flatcc_json_printer_delimit_enum_flags@@Base>:
   3afec:	ldrb	ip, [r0, #26]
   3aff0:	ldr	r3, [r0, #20]
   3aff4:	mov	r2, #34	; 0x22
   3aff8:	cmp	r1, #0
   3affc:	movwne	r1, #1
   3b000:	strb	r2, [r3]
   3b004:	clz	r2, ip
   3b008:	lsr	r2, r2, #5
   3b00c:	orr	r1, r1, r2
   3b010:	ldr	r2, [r0, #20]
   3b014:	add	r1, r2, r1
   3b018:	str	r1, [r0, #20]
   3b01c:	bx	lr

0003b020 <flatcc_json_printer_enum_flag@@Base>:
   3b020:	push	{r4, r5, r6, r7, fp, lr}
   3b024:	add	fp, sp, #16
   3b028:	mov	r5, r0
   3b02c:	ldr	r0, [r0, #20]
   3b030:	mov	r6, r2
   3b034:	mov	r2, #32
   3b038:	cmp	r1, #0
   3b03c:	mov	r4, r3
   3b040:	strb	r2, [r0]
   3b044:	ldr	r0, [r5, #20]
   3b048:	ldr	r2, [r5, #16]
   3b04c:	addgt	r0, r0, #1
   3b050:	add	r1, r0, r3
   3b054:	str	r0, [r5, #20]
   3b058:	cmp	r1, r2
   3b05c:	bcc	3b0d0 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3b060:	cmp	r0, r2
   3b064:	bcc	3b080 <flatcc_json_printer_enum_flag@@Base+0x60>
   3b068:	ldr	r2, [r5, #44]	; 0x2c
   3b06c:	mov	r0, r5
   3b070:	mov	r1, #0
   3b074:	blx	r2
   3b078:	ldr	r2, [r5, #16]
   3b07c:	ldr	r0, [r5, #20]
   3b080:	sub	r7, r2, r0
   3b084:	cmp	r7, r4
   3b088:	bcs	3b0d0 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3b08c:	mov	r1, r6
   3b090:	mov	r2, r7
   3b094:	bl	14e60 <memcpy@plt>
   3b098:	ldr	r0, [r5, #20]
   3b09c:	ldr	r2, [r5, #44]	; 0x2c
   3b0a0:	mov	r1, #0
   3b0a4:	add	r0, r0, r7
   3b0a8:	str	r0, [r5, #20]
   3b0ac:	mov	r0, r5
   3b0b0:	blx	r2
   3b0b4:	ldr	r1, [r5, #16]
   3b0b8:	ldr	r0, [r5, #20]
   3b0bc:	sub	r4, r4, r7
   3b0c0:	add	r6, r6, r7
   3b0c4:	sub	r7, r1, r0
   3b0c8:	cmp	r4, r7
   3b0cc:	bhi	3b08c <flatcc_json_printer_enum_flag@@Base+0x6c>
   3b0d0:	mov	r1, r6
   3b0d4:	mov	r2, r4
   3b0d8:	bl	14e60 <memcpy@plt>
   3b0dc:	ldr	r0, [r5, #20]
   3b0e0:	add	r0, r0, r4
   3b0e4:	str	r0, [r5, #20]
   3b0e8:	pop	{r4, r5, r6, r7, fp, pc}

0003b0ec <flatcc_json_printer_string_field@@Base>:
   3b0ec:	push	{r4, r5, r6, sl, fp, lr}
   3b0f0:	add	fp, sp, #16
   3b0f4:	mov	r4, r0
   3b0f8:	mov	r0, #4
   3b0fc:	add	r0, r0, r2, lsl #1
   3b100:	ldr	r2, [r1, #8]
   3b104:	cmp	r0, r2
   3b108:	popge	{r4, r5, r6, sl, fp, pc}
   3b10c:	ldr	r2, [r1, #4]
   3b110:	add	r0, r2, r0
   3b114:	ldrh	r0, [r0]
   3b118:	cmp	r0, #0
   3b11c:	ldrne	r2, [r1]
   3b120:	addsne	r6, r2, r0
   3b124:	bne	3b12c <flatcc_json_printer_string_field@@Base+0x40>
   3b128:	pop	{r4, r5, r6, sl, fp, pc}
   3b12c:	ldr	r0, [r1, #16]
   3b130:	ldr	r2, [fp, #8]
   3b134:	add	r5, r0, #1
   3b138:	cmp	r0, #0
   3b13c:	str	r5, [r1, #16]
   3b140:	ldrne	r0, [r4, #20]
   3b144:	addne	r1, r0, #1
   3b148:	strne	r1, [r4, #20]
   3b14c:	movne	r1, #44	; 0x2c
   3b150:	strbne	r1, [r0]
   3b154:	mov	r0, r4
   3b158:	mov	r1, r3
   3b15c:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3b160:	ldr	r0, [r6]
   3b164:	ldr	r2, [r6, r0]!
   3b168:	mov	r0, r4
   3b16c:	add	r1, r6, #4
   3b170:	pop	{r4, r5, r6, sl, fp, lr}
   3b174:	b	39cbc <flatcc_json_printer_string@@Base+0x4>
   3b178:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3b17c:	add	fp, sp, #24
   3b180:	mov	r4, r0
   3b184:	mov	r6, r1
   3b188:	ldr	r0, [r0, #20]
   3b18c:	mov	r8, r2
   3b190:	ldrb	r1, [r4, #25]
   3b194:	cmp	r1, #0
   3b198:	beq	3b258 <flatcc_json_printer_string_field@@Base+0x16c>
   3b19c:	add	r1, r0, #1
   3b1a0:	mov	r9, r4
   3b1a4:	str	r1, [r4, #20]
   3b1a8:	mov	r1, #10
   3b1ac:	strb	r1, [r0]
   3b1b0:	ldr	r1, [r9, #16]!
   3b1b4:	ldr	r0, [r4, #20]
   3b1b8:	ldrb	r2, [r9, #9]
   3b1bc:	ldr	r3, [r9, #16]
   3b1c0:	mla	r5, r3, r2, r0
   3b1c4:	mul	r7, r3, r2
   3b1c8:	cmp	r5, r1
   3b1cc:	bls	3b23c <flatcc_json_printer_string_field@@Base+0x150>
   3b1d0:	cmp	r0, r1
   3b1d4:	bcc	3b1f0 <flatcc_json_printer_string_field@@Base+0x104>
   3b1d8:	ldr	r2, [r4, #44]	; 0x2c
   3b1dc:	mov	r0, r4
   3b1e0:	mov	r1, #0
   3b1e4:	blx	r2
   3b1e8:	ldr	r1, [r4, #16]
   3b1ec:	ldr	r0, [r4, #20]
   3b1f0:	sub	r5, r1, r0
   3b1f4:	cmp	r5, r7
   3b1f8:	bcs	3b23c <flatcc_json_printer_string_field@@Base+0x150>
   3b1fc:	mov	r1, #32
   3b200:	mov	r2, r5
   3b204:	bl	14ef0 <memset@plt>
   3b208:	ldr	r0, [r4, #20]
   3b20c:	ldr	r2, [r4, #44]	; 0x2c
   3b210:	mov	r1, #0
   3b214:	add	r0, r0, r5
   3b218:	str	r0, [r4, #20]
   3b21c:	mov	r0, r4
   3b220:	blx	r2
   3b224:	ldr	r1, [r4, #16]
   3b228:	ldr	r0, [r4, #20]
   3b22c:	sub	r7, r7, r5
   3b230:	sub	r5, r1, r0
   3b234:	cmp	r7, r5
   3b238:	bhi	3b1fc <flatcc_json_printer_string_field@@Base+0x110>
   3b23c:	mov	r1, #32
   3b240:	mov	r2, r7
   3b244:	bl	14ef0 <memset@plt>
   3b248:	ldr	r0, [r4, #20]
   3b24c:	add	r0, r0, r7
   3b250:	str	r0, [r4, #20]
   3b254:	b	3b27c <flatcc_json_printer_string_field@@Base+0x190>
   3b258:	mov	r9, r4
   3b25c:	ldr	r1, [r9, #16]!
   3b260:	cmp	r0, r1
   3b264:	bcc	3b27c <flatcc_json_printer_string_field@@Base+0x190>
   3b268:	ldr	r2, [r4, #44]	; 0x2c
   3b26c:	mov	r0, r4
   3b270:	mov	r1, #0
   3b274:	blx	r2
   3b278:	ldr	r0, [r4, #20]
   3b27c:	mov	r1, #34	; 0x22
   3b280:	strb	r1, [r0]
   3b284:	ldrb	r2, [r4, #26]
   3b288:	ldr	r0, [r4, #20]
   3b28c:	ldr	r1, [r4, #16]
   3b290:	cmp	r2, #0
   3b294:	addeq	r0, r0, #1
   3b298:	add	r2, r0, r8
   3b29c:	str	r0, [r4, #20]
   3b2a0:	cmp	r2, r1
   3b2a4:	bcc	3b318 <flatcc_json_printer_string_field@@Base+0x22c>
   3b2a8:	cmp	r0, r1
   3b2ac:	bcc	3b2c8 <flatcc_json_printer_string_field@@Base+0x1dc>
   3b2b0:	ldr	r2, [r4, #44]	; 0x2c
   3b2b4:	mov	r0, r4
   3b2b8:	mov	r1, #0
   3b2bc:	blx	r2
   3b2c0:	ldr	r0, [r4, #20]
   3b2c4:	ldr	r1, [r9]
   3b2c8:	sub	r7, r1, r0
   3b2cc:	cmp	r7, r8
   3b2d0:	bcs	3b318 <flatcc_json_printer_string_field@@Base+0x22c>
   3b2d4:	mov	r1, r6
   3b2d8:	mov	r2, r7
   3b2dc:	bl	14e60 <memcpy@plt>
   3b2e0:	ldr	r0, [r4, #20]
   3b2e4:	ldr	r2, [r4, #44]	; 0x2c
   3b2e8:	mov	r1, #0
   3b2ec:	add	r0, r0, r7
   3b2f0:	str	r0, [r4, #20]
   3b2f4:	mov	r0, r4
   3b2f8:	blx	r2
   3b2fc:	ldr	r0, [r4, #20]
   3b300:	ldr	r1, [r9]
   3b304:	sub	r8, r8, r7
   3b308:	add	r6, r6, r7
   3b30c:	sub	r7, r1, r0
   3b310:	cmp	r8, r7
   3b314:	bhi	3b2d4 <flatcc_json_printer_string_field@@Base+0x1e8>
   3b318:	mov	r1, r6
   3b31c:	mov	r2, r8
   3b320:	bl	14e60 <memcpy@plt>
   3b324:	ldr	r0, [r4, #20]
   3b328:	add	r1, r0, r8
   3b32c:	str	r1, [r4, #20]
   3b330:	mov	r1, #34	; 0x22
   3b334:	strb	r1, [r0, r8]
   3b338:	ldrb	r0, [r4, #26]
   3b33c:	ldr	r1, [r4, #20]
   3b340:	cmp	r0, #0
   3b344:	addeq	r1, r1, #1
   3b348:	add	r0, r1, #1
   3b34c:	str	r0, [r4, #20]
   3b350:	mov	r0, #58	; 0x3a
   3b354:	strb	r0, [r1]
   3b358:	mov	r1, #32
   3b35c:	ldr	r0, [r4, #20]
   3b360:	strb	r1, [r0]
   3b364:	ldrb	r0, [r4, #25]
   3b368:	ldr	r1, [r4, #20]
   3b36c:	cmp	r0, #0
   3b370:	addne	r1, r1, #1
   3b374:	str	r1, [r4, #20]
   3b378:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003b37c <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   3b37c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b380:	add	fp, sp, #28
   3b384:	sub	sp, sp, #12
   3b388:	mov	r4, r0
   3b38c:	mov	r0, #4
   3b390:	add	r0, r0, r2, lsl #1
   3b394:	ldr	r2, [r1, #8]
   3b398:	cmp	r0, r2
   3b39c:	bge	3b560 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   3b3a0:	ldr	r2, [r1, #4]
   3b3a4:	add	r0, r2, r0
   3b3a8:	ldrh	r0, [r0]
   3b3ac:	cmp	r0, #0
   3b3b0:	beq	3b560 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   3b3b4:	ldr	r5, [fp, #12]
   3b3b8:	ldr	r2, [r1]
   3b3bc:	cmp	r5, #0
   3b3c0:	add	r6, r2, r0
   3b3c4:	movwne	r5, #1
   3b3c8:	cmp	r6, #0
   3b3cc:	beq	3b560 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   3b3d0:	ldr	r0, [r1, #16]
   3b3d4:	ldr	r2, [fp, #8]
   3b3d8:	add	r7, r0, #1
   3b3dc:	cmp	r0, #0
   3b3e0:	str	r7, [r1, #16]
   3b3e4:	beq	3b414 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x98>
   3b3e8:	mov	r7, r4
   3b3ec:	ldr	r0, [r7, #20]!
   3b3f0:	add	r1, r0, #1
   3b3f4:	str	r7, [sp]
   3b3f8:	str	r1, [r7]
   3b3fc:	mov	r1, #44	; 0x2c
   3b400:	strb	r1, [r0]
   3b404:	mov	r0, r4
   3b408:	mov	r1, r3
   3b40c:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3b410:	b	3b428 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xac>
   3b414:	mov	r0, r4
   3b418:	mov	r1, r3
   3b41c:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3b420:	add	r0, r4, #20
   3b424:	str	r0, [sp]
   3b428:	ldr	r0, [r6]
   3b42c:	ldr	r0, [r6, r0]!
   3b430:	str	r0, [sp, #8]
   3b434:	ldr	r0, [r4, #20]
   3b438:	add	r1, r0, #1
   3b43c:	str	r1, [r4, #20]
   3b440:	mov	r1, #34	; 0x22
   3b444:	strb	r1, [r0]
   3b448:	movw	r1, #43691	; 0xaaab
   3b44c:	ldr	r0, [sp, #8]
   3b450:	movt	r1, #43690	; 0xaaaa
   3b454:	lsl	r0, r0, #2
   3b458:	umull	r0, r1, r0, r1
   3b45c:	mov	r0, #3
   3b460:	add	r0, r0, r1, lsr #1
   3b464:	ldr	r1, [r4, #16]
   3b468:	bic	r7, r0, #3
   3b46c:	ldr	r0, [r4, #20]
   3b470:	add	r2, r0, r7
   3b474:	cmp	r2, r1
   3b478:	bcc	3b498 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x11c>
   3b47c:	ldr	r2, [r4, #44]	; 0x2c
   3b480:	mov	r0, r4
   3b484:	mov	r1, #0
   3b488:	blx	r2
   3b48c:	ldr	r0, [r4, #20]
   3b490:	ldr	r1, [r4, #16]
   3b494:	add	r2, r0, r7
   3b498:	add	r6, r6, #4
   3b49c:	cmp	r2, r1
   3b4a0:	bls	3b534 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1b8>
   3b4a4:	add	sl, sp, #4
   3b4a8:	mov	r8, #3
   3b4ac:	sub	r1, r1, r0
   3b4b0:	bic	r7, r1, #3
   3b4b4:	add	r1, r7, r7, lsl #1
   3b4b8:	cmp	r1, #0
   3b4bc:	beq	3b568 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1ec>
   3b4c0:	lsr	r9, r1, #2
   3b4c4:	mov	r1, r6
   3b4c8:	mov	r2, sl
   3b4cc:	mov	r3, r5
   3b4d0:	str	r9, [sp, #4]
   3b4d4:	bl	459a4 <flatcc_json_printer_clear@@Base+0x40>
   3b4d8:	ldr	r0, [r4, #20]
   3b4dc:	mov	r1, #0
   3b4e0:	add	r0, r0, r7
   3b4e4:	str	r0, [r4, #20]
   3b4e8:	ldr	r0, [sp, #8]
   3b4ec:	sub	r0, r0, r9
   3b4f0:	str	r0, [sp, #8]
   3b4f4:	mov	r0, r4
   3b4f8:	ldr	r2, [r4, #44]	; 0x2c
   3b4fc:	blx	r2
   3b500:	ldr	r0, [sp, #8]
   3b504:	movw	r1, #43691	; 0xaaab
   3b508:	add	r6, r6, r9
   3b50c:	movt	r1, #43690	; 0xaaaa
   3b510:	lsl	r0, r0, #2
   3b514:	umull	r0, r1, r0, r1
   3b518:	add	r0, r8, r1, lsr #1
   3b51c:	ldr	r1, [r4, #16]
   3b520:	bic	r7, r0, #3
   3b524:	ldr	r0, [r4, #20]
   3b528:	add	r2, r0, r7
   3b52c:	cmp	r2, r1
   3b530:	bhi	3b4ac <flatcc_json_printer_uint8_vector_base64_field@@Base+0x130>
   3b534:	orr	r3, r5, #128	; 0x80
   3b538:	add	r2, sp, #8
   3b53c:	mov	r1, r6
   3b540:	bl	459a4 <flatcc_json_printer_clear@@Base+0x40>
   3b544:	ldr	r2, [sp]
   3b548:	ldr	r0, [r2]
   3b54c:	add	r1, r0, r7
   3b550:	add	r1, r1, #1
   3b554:	str	r1, [r2]
   3b558:	mov	r1, #34	; 0x22
   3b55c:	strb	r1, [r0, r7]
   3b560:	sub	sp, fp, #28
   3b564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b568:	movw	r0, #48697	; 0xbe39
   3b56c:	movw	r1, #47771	; 0xba9b
   3b570:	movw	r3, #48703	; 0xbe3f
   3b574:	movw	r2, #277	; 0x115
   3b578:	movt	r0, #4
   3b57c:	movt	r1, #4
   3b580:	movt	r3, #4
   3b584:	bl	14f44 <__assert_fail@plt>

0003b588 <flatcc_json_printer_uint8_field@@Base>:
   3b588:	push	{r4, r5, r6, sl, fp, lr}
   3b58c:	add	fp, sp, #16
   3b590:	mov	r6, r0
   3b594:	mov	r0, #4
   3b598:	ldr	r5, [r1, #8]
   3b59c:	add	r2, r0, r2, lsl #1
   3b5a0:	ldr	r0, [fp, #12]
   3b5a4:	cmp	r2, r5
   3b5a8:	bge	3b5c8 <flatcc_json_printer_uint8_field@@Base+0x40>
   3b5ac:	ldr	r5, [r1, #4]
   3b5b0:	add	r2, r5, r2
   3b5b4:	ldrh	r2, [r2]
   3b5b8:	cmp	r2, #0
   3b5bc:	ldrne	r5, [r1]
   3b5c0:	addsne	r2, r5, r2
   3b5c4:	bne	3b6c0 <flatcc_json_printer_uint8_field@@Base+0x138>
   3b5c8:	ldrb	r2, [r6, #29]
   3b5cc:	mov	r5, r0
   3b5d0:	cmp	r2, #0
   3b5d4:	popeq	{r4, r5, r6, sl, fp, pc}
   3b5d8:	ldr	r0, [r1, #16]
   3b5dc:	ldr	r2, [fp, #8]
   3b5e0:	add	r4, r0, #1
   3b5e4:	cmp	r0, #0
   3b5e8:	str	r4, [r1, #16]
   3b5ec:	ldrne	r0, [r6, #20]
   3b5f0:	addne	r1, r0, #1
   3b5f4:	strne	r1, [r6, #20]
   3b5f8:	movne	r1, #44	; 0x2c
   3b5fc:	strbne	r1, [r0]
   3b600:	mov	r0, r6
   3b604:	mov	r1, r3
   3b608:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3b60c:	ldr	r0, [r6, #20]
   3b610:	mov	r1, #0
   3b614:	cmp	r5, #100	; 0x64
   3b618:	bcc	3b660 <flatcc_json_printer_uint8_field@@Base+0xd8>
   3b61c:	strb	r1, [r0, #3]
   3b620:	movw	r1, #34079	; 0x851f
   3b624:	movt	r1, #20971	; 0x51eb
   3b628:	umull	r1, r2, r5, r1
   3b62c:	mov	r1, #48	; 0x30
   3b630:	orr	r1, r1, r2, lsr #5
   3b634:	strb	r1, [r0]
   3b638:	lsr	r1, r2, #5
   3b63c:	mov	r2, #100	; 0x64
   3b640:	mls	r1, r1, r2, r5
   3b644:	movw	r2, #48496	; 0xbd70
   3b648:	movt	r2, #4
   3b64c:	add	r1, r2, r1, lsl #1
   3b650:	ldrh	r1, [r1]
   3b654:	strh	r1, [r0, #1]
   3b658:	mov	r0, #3
   3b65c:	b	3b6b0 <flatcc_json_printer_uint8_field@@Base+0x128>
   3b660:	cmp	r5, #10
   3b664:	bcc	3b6a0 <flatcc_json_printer_uint8_field@@Base+0x118>
   3b668:	strb	r1, [r0, #2]
   3b66c:	movw	r1, #34079	; 0x851f
   3b670:	movt	r1, #20971	; 0x51eb
   3b674:	umull	r1, r2, r5, r1
   3b678:	lsr	r1, r2, #5
   3b67c:	mov	r2, #100	; 0x64
   3b680:	mls	r1, r1, r2, r5
   3b684:	movw	r2, #48496	; 0xbd70
   3b688:	movt	r2, #4
   3b68c:	add	r1, r2, r1, lsl #1
   3b690:	ldrh	r1, [r1]
   3b694:	strh	r1, [r0]
   3b698:	mov	r0, #2
   3b69c:	b	3b6b0 <flatcc_json_printer_uint8_field@@Base+0x128>
   3b6a0:	strb	r1, [r0, #1]
   3b6a4:	add	r1, r5, #48	; 0x30
   3b6a8:	strb	r1, [r0]
   3b6ac:	mov	r0, #1
   3b6b0:	ldr	r1, [r6, #20]
   3b6b4:	add	r0, r1, r0
   3b6b8:	str	r0, [r6, #20]
   3b6bc:	pop	{r4, r5, r6, sl, fp, pc}
   3b6c0:	ldrb	r5, [r2]
   3b6c4:	cmp	r5, r0
   3b6c8:	bne	3b5d8 <flatcc_json_printer_uint8_field@@Base+0x50>
   3b6cc:	ldrb	r2, [r6, #28]
   3b6d0:	mov	r5, r0
   3b6d4:	cmp	r2, #0
   3b6d8:	bne	3b6bc <flatcc_json_printer_uint8_field@@Base+0x134>
   3b6dc:	b	3b5d8 <flatcc_json_printer_uint8_field@@Base+0x50>

0003b6e0 <flatcc_json_printer_uint16_field@@Base>:
   3b6e0:	push	{r4, r5, r6, sl, fp, lr}
   3b6e4:	add	fp, sp, #16
   3b6e8:	mov	r4, r0
   3b6ec:	mov	r0, #4
   3b6f0:	ldr	r5, [r1, #8]
   3b6f4:	add	r2, r0, r2, lsl #1
   3b6f8:	ldr	r0, [fp, #12]
   3b6fc:	cmp	r2, r5
   3b700:	bge	3b720 <flatcc_json_printer_uint16_field@@Base+0x40>
   3b704:	ldr	r5, [r1, #4]
   3b708:	add	r2, r5, r2
   3b70c:	ldrh	r2, [r2]
   3b710:	cmp	r2, #0
   3b714:	ldrne	r5, [r1]
   3b718:	addsne	r2, r5, r2
   3b71c:	bne	3b780 <flatcc_json_printer_uint16_field@@Base+0xa0>
   3b720:	ldrb	r2, [r4, #29]
   3b724:	mov	r6, r0
   3b728:	cmp	r2, #0
   3b72c:	popeq	{r4, r5, r6, sl, fp, pc}
   3b730:	ldr	r0, [r1, #16]
   3b734:	ldr	r2, [fp, #8]
   3b738:	add	r5, r0, #1
   3b73c:	cmp	r0, #0
   3b740:	str	r5, [r1, #16]
   3b744:	ldrne	r0, [r4, #20]
   3b748:	addne	r1, r0, #1
   3b74c:	strne	r1, [r4, #20]
   3b750:	movne	r1, #44	; 0x2c
   3b754:	strbne	r1, [r0]
   3b758:	mov	r0, r4
   3b75c:	mov	r1, r3
   3b760:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3b764:	ldr	r1, [r4, #20]
   3b768:	mov	r0, r6
   3b76c:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3b770:	ldr	r1, [r4, #20]
   3b774:	add	r0, r1, r0
   3b778:	str	r0, [r4, #20]
   3b77c:	pop	{r4, r5, r6, sl, fp, pc}
   3b780:	ldrh	r6, [r2]
   3b784:	cmp	r6, r0
   3b788:	bne	3b730 <flatcc_json_printer_uint16_field@@Base+0x50>
   3b78c:	ldrb	r2, [r4, #28]
   3b790:	mov	r6, r0
   3b794:	cmp	r2, #0
   3b798:	bne	3b77c <flatcc_json_printer_uint16_field@@Base+0x9c>
   3b79c:	b	3b730 <flatcc_json_printer_uint16_field@@Base+0x50>

0003b7a0 <flatcc_json_printer_uint32_field@@Base>:
   3b7a0:	push	{r4, r5, r6, sl, fp, lr}
   3b7a4:	add	fp, sp, #16
   3b7a8:	mov	r4, r0
   3b7ac:	mov	r0, #4
   3b7b0:	ldr	r5, [r1, #8]
   3b7b4:	add	r2, r0, r2, lsl #1
   3b7b8:	ldr	r0, [fp, #12]
   3b7bc:	cmp	r2, r5
   3b7c0:	bge	3b7e0 <flatcc_json_printer_uint32_field@@Base+0x40>
   3b7c4:	ldr	r5, [r1, #4]
   3b7c8:	add	r2, r5, r2
   3b7cc:	ldrh	r2, [r2]
   3b7d0:	cmp	r2, #0
   3b7d4:	ldrne	r5, [r1]
   3b7d8:	addsne	r2, r5, r2
   3b7dc:	bne	3b840 <flatcc_json_printer_uint32_field@@Base+0xa0>
   3b7e0:	ldrb	r2, [r4, #29]
   3b7e4:	mov	r6, r0
   3b7e8:	cmp	r2, #0
   3b7ec:	popeq	{r4, r5, r6, sl, fp, pc}
   3b7f0:	ldr	r0, [r1, #16]
   3b7f4:	ldr	r2, [fp, #8]
   3b7f8:	add	r5, r0, #1
   3b7fc:	cmp	r0, #0
   3b800:	str	r5, [r1, #16]
   3b804:	ldrne	r0, [r4, #20]
   3b808:	addne	r1, r0, #1
   3b80c:	strne	r1, [r4, #20]
   3b810:	movne	r1, #44	; 0x2c
   3b814:	strbne	r1, [r0]
   3b818:	mov	r0, r4
   3b81c:	mov	r1, r3
   3b820:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3b824:	ldr	r1, [r4, #20]
   3b828:	mov	r0, r6
   3b82c:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3b830:	ldr	r1, [r4, #20]
   3b834:	add	r0, r1, r0
   3b838:	str	r0, [r4, #20]
   3b83c:	pop	{r4, r5, r6, sl, fp, pc}
   3b840:	ldr	r6, [r2]
   3b844:	cmp	r6, r0
   3b848:	bne	3b7f0 <flatcc_json_printer_uint32_field@@Base+0x50>
   3b84c:	ldrb	r2, [r4, #28]
   3b850:	mov	r6, r0
   3b854:	cmp	r2, #0
   3b858:	bne	3b83c <flatcc_json_printer_uint32_field@@Base+0x9c>
   3b85c:	b	3b7f0 <flatcc_json_printer_uint32_field@@Base+0x50>

0003b860 <flatcc_json_printer_uint64_field@@Base>:
   3b860:	push	{r4, r6, r7, r8, fp, lr}
   3b864:	add	fp, sp, #16
   3b868:	mov	r4, r0
   3b86c:	mov	r0, #4
   3b870:	ldr	r6, [r1, #8]
   3b874:	ldr	lr, [fp, #20]
   3b878:	add	r7, r0, r2, lsl #1
   3b87c:	ldr	r2, [fp, #16]
   3b880:	cmp	r7, r6
   3b884:	bge	3b8a4 <flatcc_json_printer_uint64_field@@Base+0x44>
   3b888:	ldr	r6, [r1, #4]
   3b88c:	add	r7, r6, r7
   3b890:	ldrh	r7, [r7]
   3b894:	cmp	r7, #0
   3b898:	ldrne	r6, [r1]
   3b89c:	addsne	r7, r6, r7
   3b8a0:	bne	3b90c <flatcc_json_printer_uint64_field@@Base+0xac>
   3b8a4:	ldrb	r0, [r4, #29]
   3b8a8:	mov	r8, r2
   3b8ac:	mov	r7, lr
   3b8b0:	cmp	r0, #0
   3b8b4:	popeq	{r4, r6, r7, r8, fp, pc}
   3b8b8:	ldr	r0, [r1, #16]
   3b8bc:	ldr	r2, [fp, #8]
   3b8c0:	add	r6, r0, #1
   3b8c4:	cmp	r0, #0
   3b8c8:	str	r6, [r1, #16]
   3b8cc:	ldrne	r0, [r4, #20]
   3b8d0:	addne	r1, r0, #1
   3b8d4:	strne	r1, [r4, #20]
   3b8d8:	movne	r1, #44	; 0x2c
   3b8dc:	strbne	r1, [r0]
   3b8e0:	mov	r0, r4
   3b8e4:	mov	r1, r3
   3b8e8:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3b8ec:	ldr	r2, [r4, #20]
   3b8f0:	mov	r0, r8
   3b8f4:	mov	r1, r7
   3b8f8:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3b8fc:	ldr	r1, [r4, #20]
   3b900:	add	r0, r1, r0
   3b904:	str	r0, [r4, #20]
   3b908:	pop	{r4, r6, r7, r8, fp, pc}
   3b90c:	ldr	r8, [r7]
   3b910:	ldr	r7, [r7, #4]
   3b914:	eor	ip, r7, lr
   3b918:	eor	r0, r8, r2
   3b91c:	orrs	r0, r0, ip
   3b920:	bne	3b8b8 <flatcc_json_printer_uint64_field@@Base+0x58>
   3b924:	ldrb	r0, [r4, #28]
   3b928:	mov	r8, r2
   3b92c:	mov	r7, lr
   3b930:	cmp	r0, #0
   3b934:	bne	3b908 <flatcc_json_printer_uint64_field@@Base+0xa8>
   3b938:	b	3b8b8 <flatcc_json_printer_uint64_field@@Base+0x58>

0003b93c <flatcc_json_printer_int8_field@@Base>:
   3b93c:	push	{r4, r5, r6, sl, fp, lr}
   3b940:	add	fp, sp, #16
   3b944:	mov	r6, r0
   3b948:	mov	r0, #4
   3b94c:	ldr	r5, [r1, #8]
   3b950:	add	r2, r0, r2, lsl #1
   3b954:	ldr	r0, [fp, #12]
   3b958:	cmp	r2, r5
   3b95c:	bge	3b97c <flatcc_json_printer_int8_field@@Base+0x40>
   3b960:	ldr	r5, [r1, #4]
   3b964:	add	r2, r5, r2
   3b968:	ldrh	r2, [r2]
   3b96c:	cmp	r2, #0
   3b970:	ldrne	r5, [r1]
   3b974:	addsne	r2, r5, r2
   3b978:	bne	3ba9c <flatcc_json_printer_int8_field@@Base+0x160>
   3b97c:	ldrb	r2, [r6, #29]
   3b980:	mov	r5, r0
   3b984:	cmp	r2, #0
   3b988:	popeq	{r4, r5, r6, sl, fp, pc}
   3b98c:	ldr	r0, [r1, #16]
   3b990:	ldr	r2, [fp, #8]
   3b994:	add	r4, r0, #1
   3b998:	cmp	r0, #0
   3b99c:	str	r4, [r1, #16]
   3b9a0:	ldrne	r0, [r6, #20]
   3b9a4:	addne	r1, r0, #1
   3b9a8:	strne	r1, [r6, #20]
   3b9ac:	movne	r1, #44	; 0x2c
   3b9b0:	strbne	r1, [r0]
   3b9b4:	mov	r0, r6
   3b9b8:	mov	r1, r3
   3b9bc:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3b9c0:	ubfx	r0, r5, #7, #1
   3b9c4:	ldr	r1, [r6, #20]
   3b9c8:	sxtb	r2, r5
   3b9cc:	cmn	r2, #1
   3b9d0:	movle	r2, #45	; 0x2d
   3b9d4:	rsble	r5, r5, #0
   3b9d8:	strble	r2, [r1], #1
   3b9dc:	uxtb	r2, r5
   3b9e0:	cmp	r2, #100	; 0x64
   3b9e4:	bcc	3ba30 <flatcc_json_printer_int8_field@@Base+0xf4>
   3b9e8:	mov	r3, #0
   3b9ec:	strb	r3, [r1, #3]
   3b9f0:	movw	r3, #34079	; 0x851f
   3b9f4:	movt	r3, #20971	; 0x51eb
   3b9f8:	umull	r3, r5, r2, r3
   3b9fc:	mov	r3, #48	; 0x30
   3ba00:	orr	r3, r3, r5, lsr #5
   3ba04:	strb	r3, [r1]
   3ba08:	lsr	r3, r5, #5
   3ba0c:	mov	r5, #100	; 0x64
   3ba10:	mls	r2, r3, r5, r2
   3ba14:	movw	r3, #48496	; 0xbd70
   3ba18:	movt	r3, #4
   3ba1c:	add	r2, r3, r2, lsl #1
   3ba20:	ldrh	r2, [r2]
   3ba24:	strh	r2, [r1, #1]
   3ba28:	mov	r1, #3
   3ba2c:	b	3ba88 <flatcc_json_printer_int8_field@@Base+0x14c>
   3ba30:	cmp	r2, #10
   3ba34:	bcc	3ba74 <flatcc_json_printer_int8_field@@Base+0x138>
   3ba38:	mov	r3, #0
   3ba3c:	strb	r3, [r1, #2]
   3ba40:	movw	r3, #34079	; 0x851f
   3ba44:	movt	r3, #20971	; 0x51eb
   3ba48:	umull	r3, r5, r2, r3
   3ba4c:	lsr	r3, r5, #5
   3ba50:	mov	r5, #100	; 0x64
   3ba54:	mls	r2, r3, r5, r2
   3ba58:	movw	r3, #48496	; 0xbd70
   3ba5c:	movt	r3, #4
   3ba60:	add	r2, r3, r2, lsl #1
   3ba64:	ldrh	r2, [r2]
   3ba68:	strh	r2, [r1]
   3ba6c:	mov	r1, #2
   3ba70:	b	3ba88 <flatcc_json_printer_int8_field@@Base+0x14c>
   3ba74:	mov	r2, #0
   3ba78:	strb	r2, [r1, #1]
   3ba7c:	add	r2, r5, #48	; 0x30
   3ba80:	strb	r2, [r1]
   3ba84:	mov	r1, #1
   3ba88:	add	r0, r1, r0
   3ba8c:	ldr	r1, [r6, #20]
   3ba90:	add	r0, r1, r0
   3ba94:	str	r0, [r6, #20]
   3ba98:	pop	{r4, r5, r6, sl, fp, pc}
   3ba9c:	ldrb	r5, [r2]
   3baa0:	uxtb	r2, r0
   3baa4:	cmp	r5, r2
   3baa8:	bne	3b98c <flatcc_json_printer_int8_field@@Base+0x50>
   3baac:	ldrb	r2, [r6, #28]
   3bab0:	mov	r5, r0
   3bab4:	cmp	r2, #0
   3bab8:	bne	3ba98 <flatcc_json_printer_int8_field@@Base+0x15c>
   3babc:	b	3b98c <flatcc_json_printer_int8_field@@Base+0x50>

0003bac0 <flatcc_json_printer_int16_field@@Base>:
   3bac0:	push	{r4, r5, r6, sl, fp, lr}
   3bac4:	add	fp, sp, #16
   3bac8:	mov	r4, r0
   3bacc:	mov	r0, #4
   3bad0:	ldr	r6, [r1, #8]
   3bad4:	add	r2, r0, r2, lsl #1
   3bad8:	ldr	r0, [fp, #12]
   3badc:	cmp	r2, r6
   3bae0:	bge	3bb00 <flatcc_json_printer_int16_field@@Base+0x40>
   3bae4:	ldr	r6, [r1, #4]
   3bae8:	add	r2, r6, r2
   3baec:	ldrh	r2, [r2]
   3baf0:	cmp	r2, #0
   3baf4:	ldrne	r6, [r1]
   3baf8:	addsne	r2, r6, r2
   3bafc:	bne	3bb7c <flatcc_json_printer_int16_field@@Base+0xbc>
   3bb00:	ldrb	r2, [r4, #29]
   3bb04:	mov	r5, r0
   3bb08:	cmp	r2, #0
   3bb0c:	popeq	{r4, r5, r6, sl, fp, pc}
   3bb10:	ldr	r0, [r1, #16]
   3bb14:	ldr	r2, [fp, #8]
   3bb18:	add	r6, r0, #1
   3bb1c:	cmp	r0, #0
   3bb20:	str	r6, [r1, #16]
   3bb24:	ldrne	r0, [r4, #20]
   3bb28:	addne	r1, r0, #1
   3bb2c:	strne	r1, [r4, #20]
   3bb30:	movne	r1, #44	; 0x2c
   3bb34:	strbne	r1, [r0]
   3bb38:	mov	r0, r4
   3bb3c:	mov	r1, r3
   3bb40:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3bb44:	ubfx	r6, r5, #15, #1
   3bb48:	ldr	r1, [r4, #20]
   3bb4c:	sxth	r0, r5
   3bb50:	cmn	r0, #1
   3bb54:	movle	r0, #45	; 0x2d
   3bb58:	rsble	r5, r5, #0
   3bb5c:	strble	r0, [r1], #1
   3bb60:	uxth	r0, r5
   3bb64:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3bb68:	ldr	r1, [r4, #20]
   3bb6c:	add	r0, r0, r6
   3bb70:	add	r0, r1, r0
   3bb74:	str	r0, [r4, #20]
   3bb78:	pop	{r4, r5, r6, sl, fp, pc}
   3bb7c:	ldrh	r5, [r2]
   3bb80:	uxth	r2, r0
   3bb84:	cmp	r5, r2
   3bb88:	bne	3bb10 <flatcc_json_printer_int16_field@@Base+0x50>
   3bb8c:	ldrb	r2, [r4, #28]
   3bb90:	mov	r5, r0
   3bb94:	cmp	r2, #0
   3bb98:	bne	3bb78 <flatcc_json_printer_int16_field@@Base+0xb8>
   3bb9c:	b	3bb10 <flatcc_json_printer_int16_field@@Base+0x50>

0003bba0 <flatcc_json_printer_int32_field@@Base>:
   3bba0:	push	{r4, r5, r6, sl, fp, lr}
   3bba4:	add	fp, sp, #16
   3bba8:	mov	r4, r0
   3bbac:	mov	r0, #4
   3bbb0:	ldr	r6, [r1, #8]
   3bbb4:	add	r2, r0, r2, lsl #1
   3bbb8:	ldr	r0, [fp, #12]
   3bbbc:	cmp	r2, r6
   3bbc0:	bge	3bbe0 <flatcc_json_printer_int32_field@@Base+0x40>
   3bbc4:	ldr	r6, [r1, #4]
   3bbc8:	add	r2, r6, r2
   3bbcc:	ldrh	r2, [r2]
   3bbd0:	cmp	r2, #0
   3bbd4:	ldrne	r6, [r1]
   3bbd8:	addsne	r2, r6, r2
   3bbdc:	bne	3bc58 <flatcc_json_printer_int32_field@@Base+0xb8>
   3bbe0:	ldrb	r2, [r4, #29]
   3bbe4:	mov	r5, r0
   3bbe8:	cmp	r2, #0
   3bbec:	popeq	{r4, r5, r6, sl, fp, pc}
   3bbf0:	ldr	r0, [r1, #16]
   3bbf4:	ldr	r2, [fp, #8]
   3bbf8:	add	r6, r0, #1
   3bbfc:	cmp	r0, #0
   3bc00:	str	r6, [r1, #16]
   3bc04:	ldrne	r0, [r4, #20]
   3bc08:	addne	r1, r0, #1
   3bc0c:	strne	r1, [r4, #20]
   3bc10:	movne	r1, #44	; 0x2c
   3bc14:	strbne	r1, [r0]
   3bc18:	mov	r0, r4
   3bc1c:	mov	r1, r3
   3bc20:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3bc24:	ldr	r1, [r4, #20]
   3bc28:	cmn	r5, #1
   3bc2c:	lsr	r6, r5, #31
   3bc30:	movle	r0, #45	; 0x2d
   3bc34:	rsble	r5, r5, #0
   3bc38:	strble	r0, [r1], #1
   3bc3c:	mov	r0, r5
   3bc40:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3bc44:	ldr	r1, [r4, #20]
   3bc48:	add	r0, r0, r6
   3bc4c:	add	r0, r1, r0
   3bc50:	str	r0, [r4, #20]
   3bc54:	pop	{r4, r5, r6, sl, fp, pc}
   3bc58:	ldr	r5, [r2]
   3bc5c:	cmp	r5, r0
   3bc60:	bne	3bbf0 <flatcc_json_printer_int32_field@@Base+0x50>
   3bc64:	ldrb	r2, [r4, #28]
   3bc68:	mov	r5, r0
   3bc6c:	cmp	r2, #0
   3bc70:	bne	3bc54 <flatcc_json_printer_int32_field@@Base+0xb4>
   3bc74:	b	3bbf0 <flatcc_json_printer_int32_field@@Base+0x50>

0003bc78 <flatcc_json_printer_int64_field@@Base>:
   3bc78:	push	{r4, r5, r6, r7, fp, lr}
   3bc7c:	add	fp, sp, #16
   3bc80:	mov	r4, r0
   3bc84:	mov	r0, #4
   3bc88:	ldr	r6, [r1, #8]
   3bc8c:	add	r7, r0, r2, lsl #1
   3bc90:	ldr	r0, [fp, #20]
   3bc94:	ldr	r2, [fp, #16]
   3bc98:	cmp	r7, r6
   3bc9c:	bge	3bcbc <flatcc_json_printer_int64_field@@Base+0x44>
   3bca0:	ldr	r6, [r1, #4]
   3bca4:	add	r7, r6, r7
   3bca8:	ldrh	r7, [r7]
   3bcac:	cmp	r7, #0
   3bcb0:	ldrne	r6, [r1]
   3bcb4:	addsne	r7, r6, r7
   3bcb8:	bne	3bd44 <flatcc_json_printer_int64_field@@Base+0xcc>
   3bcbc:	ldrb	r7, [r4, #29]
   3bcc0:	mov	r6, r2
   3bcc4:	cmp	r7, #0
   3bcc8:	mov	r7, r0
   3bccc:	popeq	{r4, r5, r6, r7, fp, pc}
   3bcd0:	ldr	r0, [r1, #16]
   3bcd4:	ldr	r2, [fp, #8]
   3bcd8:	add	r5, r0, #1
   3bcdc:	cmp	r0, #0
   3bce0:	str	r5, [r1, #16]
   3bce4:	ldrne	r0, [r4, #20]
   3bce8:	addne	r1, r0, #1
   3bcec:	strne	r1, [r4, #20]
   3bcf0:	movne	r1, #44	; 0x2c
   3bcf4:	strbne	r1, [r0]
   3bcf8:	mov	r0, r4
   3bcfc:	mov	r1, r3
   3bd00:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3bd04:	ldr	r2, [r4, #20]
   3bd08:	lsr	r5, r7, #31
   3bd0c:	cmn	r7, #1
   3bd10:	bgt	3bd24 <flatcc_json_printer_int64_field@@Base+0xac>
   3bd14:	mov	r0, #45	; 0x2d
   3bd18:	rsbs	r6, r6, #0
   3bd1c:	strb	r0, [r2], #1
   3bd20:	rsc	r7, r7, #0
   3bd24:	mov	r0, r6
   3bd28:	mov	r1, r7
   3bd2c:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3bd30:	ldr	r1, [r4, #20]
   3bd34:	add	r0, r0, r5
   3bd38:	add	r0, r1, r0
   3bd3c:	str	r0, [r4, #20]
   3bd40:	pop	{r4, r5, r6, r7, fp, pc}
   3bd44:	ldrd	r6, [r7]
   3bd48:	eor	ip, r7, r0
   3bd4c:	eor	r5, r6, r2
   3bd50:	orrs	r5, r5, ip
   3bd54:	bne	3bcd0 <flatcc_json_printer_int64_field@@Base+0x58>
   3bd58:	ldrb	r7, [r4, #28]
   3bd5c:	mov	r6, r2
   3bd60:	cmp	r7, #0
   3bd64:	mov	r7, r0
   3bd68:	bne	3bd40 <flatcc_json_printer_int64_field@@Base+0xc8>
   3bd6c:	b	3bcd0 <flatcc_json_printer_int64_field@@Base+0x58>

0003bd70 <flatcc_json_printer_bool_field@@Base>:
   3bd70:	push	{r4, r5, r6, sl, fp, lr}
   3bd74:	add	fp, sp, #16
   3bd78:	mov	r4, r0
   3bd7c:	mov	r0, #4
   3bd80:	ldr	r5, [r1, #8]
   3bd84:	add	r2, r0, r2, lsl #1
   3bd88:	ldr	r0, [fp, #12]
   3bd8c:	cmp	r2, r5
   3bd90:	bge	3bdb0 <flatcc_json_printer_bool_field@@Base+0x40>
   3bd94:	ldr	r5, [r1, #4]
   3bd98:	add	r2, r5, r2
   3bd9c:	ldrh	r2, [r2]
   3bda0:	cmp	r2, #0
   3bda4:	ldrne	r5, [r1]
   3bda8:	addsne	r2, r5, r2
   3bdac:	bne	3be44 <flatcc_json_printer_bool_field@@Base+0xd4>
   3bdb0:	ldrb	r2, [r4, #29]
   3bdb4:	mov	r6, r0
   3bdb8:	cmp	r2, #0
   3bdbc:	popeq	{r4, r5, r6, sl, fp, pc}
   3bdc0:	ldr	r0, [r1, #16]
   3bdc4:	ldr	r2, [fp, #8]
   3bdc8:	add	r5, r0, #1
   3bdcc:	cmp	r0, #0
   3bdd0:	str	r5, [r1, #16]
   3bdd4:	ldrne	r0, [r4, #20]
   3bdd8:	addne	r1, r0, #1
   3bddc:	strne	r1, [r4, #20]
   3bde0:	movne	r1, #44	; 0x2c
   3bde4:	strbne	r1, [r0]
   3bde8:	mov	r0, r4
   3bdec:	mov	r1, r3
   3bdf0:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3bdf4:	ldr	r0, [r4, #20]
   3bdf8:	cmp	r6, #0
   3bdfc:	beq	3be1c <flatcc_json_printer_bool_field@@Base+0xac>
   3be00:	mov	r1, #0
   3be04:	strb	r1, [r0, #4]
   3be08:	movw	r1, #29300	; 0x7274
   3be0c:	movt	r1, #25973	; 0x6575
   3be10:	str	r1, [r0]
   3be14:	mov	r0, #4
   3be18:	b	3be34 <flatcc_json_printer_bool_field@@Base+0xc4>
   3be1c:	mov	r1, #101	; 0x65
   3be20:	strh	r1, [r0, #4]
   3be24:	movw	r1, #24934	; 0x6166
   3be28:	movt	r1, #29548	; 0x736c
   3be2c:	str	r1, [r0]
   3be30:	mov	r0, #5
   3be34:	ldr	r1, [r4, #20]
   3be38:	add	r0, r1, r0
   3be3c:	str	r0, [r4, #20]
   3be40:	pop	{r4, r5, r6, sl, fp, pc}
   3be44:	ldrb	r6, [r2]
   3be48:	cmp	r6, r0
   3be4c:	bne	3bdc0 <flatcc_json_printer_bool_field@@Base+0x50>
   3be50:	ldrb	r2, [r4, #28]
   3be54:	mov	r6, r0
   3be58:	cmp	r2, #0
   3be5c:	bne	3be40 <flatcc_json_printer_bool_field@@Base+0xd0>
   3be60:	b	3bdc0 <flatcc_json_printer_bool_field@@Base+0x50>

0003be64 <flatcc_json_printer_float_field@@Base>:
   3be64:	push	{r4, r5, fp, lr}
   3be68:	add	fp, sp, #8
   3be6c:	vpush	{d8}
   3be70:	mov	r5, r0
   3be74:	mov	r0, #4
   3be78:	vmov.f32	s16, s0
   3be7c:	add	r0, r0, r2, lsl #1
   3be80:	ldr	r2, [r1, #8]
   3be84:	cmp	r0, r2
   3be88:	bge	3bea8 <flatcc_json_printer_float_field@@Base+0x44>
   3be8c:	ldr	r2, [r1, #4]
   3be90:	add	r0, r2, r0
   3be94:	ldrh	r0, [r0]
   3be98:	cmp	r0, #0
   3be9c:	ldrne	r2, [r1]
   3bea0:	addsne	r0, r2, r0
   3bea4:	bne	3bf08 <flatcc_json_printer_float_field@@Base+0xa4>
   3bea8:	ldrb	r0, [r5, #29]
   3beac:	cmp	r0, #0
   3beb0:	beq	3bf00 <flatcc_json_printer_float_field@@Base+0x9c>
   3beb4:	ldr	r0, [r1, #16]
   3beb8:	ldr	r2, [fp, #8]
   3bebc:	add	r4, r0, #1
   3bec0:	cmp	r0, #0
   3bec4:	str	r4, [r1, #16]
   3bec8:	ldrne	r0, [r5, #20]
   3becc:	addne	r1, r0, #1
   3bed0:	strne	r1, [r5, #20]
   3bed4:	movne	r1, #44	; 0x2c
   3bed8:	strbne	r1, [r0]
   3bedc:	mov	r0, r5
   3bee0:	mov	r1, r3
   3bee4:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3bee8:	ldr	r0, [r5, #20]
   3beec:	vcvt.f64.f32	d0, s16
   3bef0:	bl	38e30 <flatcc_json_printer_fmt_float@@Base+0x8>
   3bef4:	ldr	r1, [r5, #20]
   3bef8:	add	r0, r1, r0
   3befc:	str	r0, [r5, #20]
   3bf00:	vpop	{d8}
   3bf04:	pop	{r4, r5, fp, pc}
   3bf08:	vldr	s0, [r0]
   3bf0c:	vcmp.f32	s0, s16
   3bf10:	vmrs	APSR_nzcv, fpscr
   3bf14:	bne	3bf2c <flatcc_json_printer_float_field@@Base+0xc8>
   3bf18:	ldrb	r0, [r5, #28]
   3bf1c:	vmov.f32	s16, s0
   3bf20:	cmp	r0, #0
   3bf24:	bne	3bf00 <flatcc_json_printer_float_field@@Base+0x9c>
   3bf28:	b	3beb4 <flatcc_json_printer_float_field@@Base+0x50>
   3bf2c:	vmov.f32	s16, s0
   3bf30:	b	3beb4 <flatcc_json_printer_float_field@@Base+0x50>

0003bf34 <flatcc_json_printer_double_field@@Base>:
   3bf34:	push	{r4, r5, fp, lr}
   3bf38:	add	fp, sp, #8
   3bf3c:	vpush	{d8}
   3bf40:	mov	r5, r0
   3bf44:	mov	r0, #4
   3bf48:	vmov.f64	d8, d0
   3bf4c:	add	r0, r0, r2, lsl #1
   3bf50:	ldr	r2, [r1, #8]
   3bf54:	cmp	r0, r2
   3bf58:	bge	3bf78 <flatcc_json_printer_double_field@@Base+0x44>
   3bf5c:	ldr	r2, [r1, #4]
   3bf60:	add	r0, r2, r0
   3bf64:	ldrh	r0, [r0]
   3bf68:	cmp	r0, #0
   3bf6c:	ldrne	r2, [r1]
   3bf70:	addsne	r0, r2, r0
   3bf74:	bne	3bfd8 <flatcc_json_printer_double_field@@Base+0xa4>
   3bf78:	ldrb	r0, [r5, #29]
   3bf7c:	cmp	r0, #0
   3bf80:	beq	3bfd0 <flatcc_json_printer_double_field@@Base+0x9c>
   3bf84:	ldr	r0, [r1, #16]
   3bf88:	ldr	r2, [fp, #8]
   3bf8c:	add	r4, r0, #1
   3bf90:	cmp	r0, #0
   3bf94:	str	r4, [r1, #16]
   3bf98:	ldrne	r0, [r5, #20]
   3bf9c:	addne	r1, r0, #1
   3bfa0:	strne	r1, [r5, #20]
   3bfa4:	movne	r1, #44	; 0x2c
   3bfa8:	strbne	r1, [r0]
   3bfac:	mov	r0, r5
   3bfb0:	mov	r1, r3
   3bfb4:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3bfb8:	ldr	r0, [r5, #20]
   3bfbc:	vmov.f64	d0, d8
   3bfc0:	bl	38e30 <flatcc_json_printer_fmt_float@@Base+0x8>
   3bfc4:	ldr	r1, [r5, #20]
   3bfc8:	add	r0, r1, r0
   3bfcc:	str	r0, [r5, #20]
   3bfd0:	vpop	{d8}
   3bfd4:	pop	{r4, r5, fp, pc}
   3bfd8:	vldr	d16, [r0]
   3bfdc:	vcmp.f64	d16, d8
   3bfe0:	vmrs	APSR_nzcv, fpscr
   3bfe4:	bne	3bffc <flatcc_json_printer_double_field@@Base+0xc8>
   3bfe8:	ldrb	r0, [r5, #28]
   3bfec:	vmov.f64	d8, d16
   3bff0:	cmp	r0, #0
   3bff4:	bne	3bfd0 <flatcc_json_printer_double_field@@Base+0x9c>
   3bff8:	b	3bf84 <flatcc_json_printer_double_field@@Base+0x50>
   3bffc:	vmov.f64	d8, d16
   3c000:	b	3bf84 <flatcc_json_printer_double_field@@Base+0x50>

0003c004 <flatcc_json_printer_uint8_enum_field@@Base>:
   3c004:	push	{r4, r5, r6, r7, fp, lr}
   3c008:	add	fp, sp, #16
   3c00c:	mov	r6, r0
   3c010:	mov	r0, #4
   3c014:	ldr	r4, [r1, #8]
   3c018:	ldr	ip, [fp, #16]
   3c01c:	add	r5, r0, r2, lsl #1
   3c020:	ldr	r0, [fp, #12]
   3c024:	ldr	r2, [fp, #8]
   3c028:	cmp	r5, r4
   3c02c:	bge	3c04c <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   3c030:	ldr	r4, [r1, #4]
   3c034:	add	r5, r4, r5
   3c038:	ldrh	r5, [r5]
   3c03c:	cmp	r5, #0
   3c040:	ldrne	r4, [r1]
   3c044:	addsne	r5, r4, r5
   3c048:	bne	3c164 <flatcc_json_printer_uint8_enum_field@@Base+0x160>
   3c04c:	ldrb	r5, [r6, #29]
   3c050:	cmp	r5, #0
   3c054:	mov	r5, r0
   3c058:	popeq	{r4, r5, r6, r7, fp, pc}
   3c05c:	ldr	r0, [r1, #16]
   3c060:	mov	r7, ip
   3c064:	add	r4, r0, #1
   3c068:	cmp	r0, #0
   3c06c:	str	r4, [r1, #16]
   3c070:	ldrne	r0, [r6, #20]
   3c074:	addne	r1, r0, #1
   3c078:	strne	r1, [r6, #20]
   3c07c:	movne	r1, #44	; 0x2c
   3c080:	strbne	r1, [r0]
   3c084:	mov	r0, r6
   3c088:	mov	r1, r3
   3c08c:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3c090:	ldrb	r0, [r6, #27]
   3c094:	cmp	r0, #0
   3c098:	beq	3c0f0 <flatcc_json_printer_uint8_enum_field@@Base+0xec>
   3c09c:	ldr	r0, [r6, #20]
   3c0a0:	mov	r1, #0
   3c0a4:	cmp	r5, #100	; 0x64
   3c0a8:	bcc	3c104 <flatcc_json_printer_uint8_enum_field@@Base+0x100>
   3c0ac:	strb	r1, [r0, #3]
   3c0b0:	movw	r1, #34079	; 0x851f
   3c0b4:	movt	r1, #20971	; 0x51eb
   3c0b8:	umull	r1, r2, r5, r1
   3c0bc:	mov	r1, #48	; 0x30
   3c0c0:	orr	r1, r1, r2, lsr #5
   3c0c4:	strb	r1, [r0]
   3c0c8:	lsr	r1, r2, #5
   3c0cc:	mov	r2, #100	; 0x64
   3c0d0:	mls	r1, r1, r2, r5
   3c0d4:	movw	r2, #48496	; 0xbd70
   3c0d8:	movt	r2, #4
   3c0dc:	add	r1, r2, r1, lsl #1
   3c0e0:	ldrh	r1, [r1]
   3c0e4:	strh	r1, [r0, #1]
   3c0e8:	mov	r0, #3
   3c0ec:	b	3c154 <flatcc_json_printer_uint8_enum_field@@Base+0x150>
   3c0f0:	mov	r0, r6
   3c0f4:	mov	r1, r5
   3c0f8:	mov	r2, r7
   3c0fc:	pop	{r4, r5, r6, r7, fp, lr}
   3c100:	bx	r2
   3c104:	cmp	r5, #10
   3c108:	bcc	3c144 <flatcc_json_printer_uint8_enum_field@@Base+0x140>
   3c10c:	strb	r1, [r0, #2]
   3c110:	movw	r1, #34079	; 0x851f
   3c114:	movt	r1, #20971	; 0x51eb
   3c118:	umull	r1, r2, r5, r1
   3c11c:	lsr	r1, r2, #5
   3c120:	mov	r2, #100	; 0x64
   3c124:	mls	r1, r1, r2, r5
   3c128:	movw	r2, #48496	; 0xbd70
   3c12c:	movt	r2, #4
   3c130:	add	r1, r2, r1, lsl #1
   3c134:	ldrh	r1, [r1]
   3c138:	strh	r1, [r0]
   3c13c:	mov	r0, #2
   3c140:	b	3c154 <flatcc_json_printer_uint8_enum_field@@Base+0x150>
   3c144:	strb	r1, [r0, #1]
   3c148:	add	r1, r5, #48	; 0x30
   3c14c:	strb	r1, [r0]
   3c150:	mov	r0, #1
   3c154:	ldr	r1, [r6, #20]
   3c158:	add	r0, r1, r0
   3c15c:	str	r0, [r6, #20]
   3c160:	pop	{r4, r5, r6, r7, fp, pc}
   3c164:	ldrb	r5, [r5]
   3c168:	cmp	r5, r0
   3c16c:	bne	3c05c <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3c170:	ldrb	r5, [r6, #28]
   3c174:	cmp	r5, #0
   3c178:	mov	r5, r0
   3c17c:	bne	3c160 <flatcc_json_printer_uint8_enum_field@@Base+0x15c>
   3c180:	b	3c05c <flatcc_json_printer_uint8_enum_field@@Base+0x58>

0003c184 <flatcc_json_printer_uint16_enum_field@@Base>:
   3c184:	push	{r4, r5, r6, r7, fp, lr}
   3c188:	add	fp, sp, #16
   3c18c:	mov	r4, r0
   3c190:	mov	r0, #4
   3c194:	ldr	r7, [fp, #16]
   3c198:	ldr	ip, [fp, #12]
   3c19c:	add	r5, r0, r2, lsl #1
   3c1a0:	ldr	r0, [r1, #8]
   3c1a4:	ldr	r2, [fp, #8]
   3c1a8:	cmp	r5, r0
   3c1ac:	bge	3c1cc <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   3c1b0:	ldr	r0, [r1, #4]
   3c1b4:	add	r0, r0, r5
   3c1b8:	ldrh	r5, [r0]
   3c1bc:	cmp	r5, #0
   3c1c0:	ldrne	r0, [r1]
   3c1c4:	addsne	r5, r0, r5
   3c1c8:	bne	3c248 <flatcc_json_printer_uint16_enum_field@@Base+0xc4>
   3c1cc:	ldrb	r0, [r4, #29]
   3c1d0:	mov	r6, ip
   3c1d4:	cmp	r0, #0
   3c1d8:	popeq	{r4, r5, r6, r7, fp, pc}
   3c1dc:	ldr	r0, [r1, #16]
   3c1e0:	add	r5, r0, #1
   3c1e4:	cmp	r0, #0
   3c1e8:	str	r5, [r1, #16]
   3c1ec:	ldrne	r0, [r4, #20]
   3c1f0:	addne	r1, r0, #1
   3c1f4:	strne	r1, [r4, #20]
   3c1f8:	movne	r1, #44	; 0x2c
   3c1fc:	strbne	r1, [r0]
   3c200:	mov	r0, r4
   3c204:	mov	r1, r3
   3c208:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3c20c:	ldrb	r0, [r4, #27]
   3c210:	cmp	r0, #0
   3c214:	beq	3c234 <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   3c218:	ldr	r1, [r4, #20]
   3c21c:	mov	r0, r6
   3c220:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3c224:	ldr	r1, [r4, #20]
   3c228:	add	r0, r1, r0
   3c22c:	str	r0, [r4, #20]
   3c230:	pop	{r4, r5, r6, r7, fp, pc}
   3c234:	mov	r0, r4
   3c238:	mov	r1, r6
   3c23c:	mov	r2, r7
   3c240:	pop	{r4, r5, r6, r7, fp, lr}
   3c244:	bx	r2
   3c248:	ldrh	r6, [r5]
   3c24c:	cmp	r6, ip
   3c250:	bne	3c1dc <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   3c254:	ldrb	r0, [r4, #28]
   3c258:	mov	r6, ip
   3c25c:	cmp	r0, #0
   3c260:	bne	3c230 <flatcc_json_printer_uint16_enum_field@@Base+0xac>
   3c264:	b	3c1dc <flatcc_json_printer_uint16_enum_field@@Base+0x58>

0003c268 <flatcc_json_printer_uint32_enum_field@@Base>:
   3c268:	push	{r4, r5, r6, r7, fp, lr}
   3c26c:	add	fp, sp, #16
   3c270:	mov	r4, r0
   3c274:	mov	r0, #4
   3c278:	ldr	r7, [fp, #16]
   3c27c:	ldr	ip, [fp, #12]
   3c280:	add	r5, r0, r2, lsl #1
   3c284:	ldr	r0, [r1, #8]
   3c288:	ldr	r2, [fp, #8]
   3c28c:	cmp	r5, r0
   3c290:	bge	3c2b0 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   3c294:	ldr	r0, [r1, #4]
   3c298:	add	r0, r0, r5
   3c29c:	ldrh	r5, [r0]
   3c2a0:	cmp	r5, #0
   3c2a4:	ldrne	r0, [r1]
   3c2a8:	addsne	r5, r0, r5
   3c2ac:	bne	3c32c <flatcc_json_printer_uint32_enum_field@@Base+0xc4>
   3c2b0:	ldrb	r0, [r4, #29]
   3c2b4:	mov	r6, ip
   3c2b8:	cmp	r0, #0
   3c2bc:	popeq	{r4, r5, r6, r7, fp, pc}
   3c2c0:	ldr	r0, [r1, #16]
   3c2c4:	add	r5, r0, #1
   3c2c8:	cmp	r0, #0
   3c2cc:	str	r5, [r1, #16]
   3c2d0:	ldrne	r0, [r4, #20]
   3c2d4:	addne	r1, r0, #1
   3c2d8:	strne	r1, [r4, #20]
   3c2dc:	movne	r1, #44	; 0x2c
   3c2e0:	strbne	r1, [r0]
   3c2e4:	mov	r0, r4
   3c2e8:	mov	r1, r3
   3c2ec:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3c2f0:	ldrb	r0, [r4, #27]
   3c2f4:	cmp	r0, #0
   3c2f8:	beq	3c318 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   3c2fc:	ldr	r1, [r4, #20]
   3c300:	mov	r0, r6
   3c304:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3c308:	ldr	r1, [r4, #20]
   3c30c:	add	r0, r1, r0
   3c310:	str	r0, [r4, #20]
   3c314:	pop	{r4, r5, r6, r7, fp, pc}
   3c318:	mov	r0, r4
   3c31c:	mov	r1, r6
   3c320:	mov	r2, r7
   3c324:	pop	{r4, r5, r6, r7, fp, lr}
   3c328:	bx	r2
   3c32c:	ldr	r6, [r5]
   3c330:	cmp	r6, ip
   3c334:	bne	3c2c0 <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   3c338:	ldrb	r0, [r4, #28]
   3c33c:	mov	r6, ip
   3c340:	cmp	r0, #0
   3c344:	bne	3c314 <flatcc_json_printer_uint32_enum_field@@Base+0xac>
   3c348:	b	3c2c0 <flatcc_json_printer_uint32_enum_field@@Base+0x58>

0003c34c <flatcc_json_printer_uint64_enum_field@@Base>:
   3c34c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c350:	add	fp, sp, #24
   3c354:	mov	r4, r0
   3c358:	mov	r0, #4
   3c35c:	ldr	ip, [fp, #20]
   3c360:	ldr	r6, [fp, #16]
   3c364:	ldr	r5, [fp, #24]
   3c368:	add	r7, r0, r2, lsl #1
   3c36c:	ldr	r0, [r1, #8]
   3c370:	ldr	r2, [fp, #8]
   3c374:	cmp	r7, r0
   3c378:	bge	3c398 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   3c37c:	ldr	r0, [r1, #4]
   3c380:	add	r0, r0, r7
   3c384:	ldrh	r7, [r0]
   3c388:	cmp	r7, #0
   3c38c:	ldrne	r0, [r1]
   3c390:	addsne	r7, r0, r7
   3c394:	bne	3c420 <flatcc_json_printer_uint64_enum_field@@Base+0xd4>
   3c398:	ldrb	r0, [r4, #29]
   3c39c:	mov	r8, r6
   3c3a0:	mov	r7, ip
   3c3a4:	cmp	r0, #0
   3c3a8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   3c3ac:	ldr	r0, [r1, #16]
   3c3b0:	add	r6, r0, #1
   3c3b4:	cmp	r0, #0
   3c3b8:	str	r6, [r1, #16]
   3c3bc:	ldrne	r0, [r4, #20]
   3c3c0:	addne	r1, r0, #1
   3c3c4:	strne	r1, [r4, #20]
   3c3c8:	movne	r1, #44	; 0x2c
   3c3cc:	strbne	r1, [r0]
   3c3d0:	mov	r0, r4
   3c3d4:	mov	r1, r3
   3c3d8:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3c3dc:	ldrb	r0, [r4, #27]
   3c3e0:	cmp	r0, #0
   3c3e4:	beq	3c408 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   3c3e8:	ldr	r2, [r4, #20]
   3c3ec:	mov	r0, r8
   3c3f0:	mov	r1, r7
   3c3f4:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3c3f8:	ldr	r1, [r4, #20]
   3c3fc:	add	r0, r1, r0
   3c400:	str	r0, [r4, #20]
   3c404:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3c408:	mov	r0, r4
   3c40c:	mov	r2, r8
   3c410:	mov	r3, r7
   3c414:	mov	r1, r5
   3c418:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c41c:	bx	r1
   3c420:	ldr	r8, [r7]
   3c424:	ldr	r7, [r7, #4]
   3c428:	eor	lr, r7, ip
   3c42c:	eor	r0, r8, r6
   3c430:	orrs	r0, r0, lr
   3c434:	bne	3c3ac <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   3c438:	ldrb	r0, [r4, #28]
   3c43c:	mov	r8, r6
   3c440:	mov	r7, ip
   3c444:	cmp	r0, #0
   3c448:	bne	3c404 <flatcc_json_printer_uint64_enum_field@@Base+0xb8>
   3c44c:	b	3c3ac <flatcc_json_printer_uint64_enum_field@@Base+0x60>

0003c450 <flatcc_json_printer_int8_enum_field@@Base>:
   3c450:	push	{r4, r5, r6, r7, fp, lr}
   3c454:	add	fp, sp, #16
   3c458:	mov	r6, r0
   3c45c:	mov	r0, #4
   3c460:	ldr	r4, [r1, #8]
   3c464:	ldr	ip, [fp, #16]
   3c468:	add	r5, r0, r2, lsl #1
   3c46c:	ldr	r0, [fp, #12]
   3c470:	ldr	r2, [fp, #8]
   3c474:	cmp	r5, r4
   3c478:	bge	3c498 <flatcc_json_printer_int8_enum_field@@Base+0x48>
   3c47c:	ldr	r4, [r1, #4]
   3c480:	add	r5, r4, r5
   3c484:	ldrh	r5, [r5]
   3c488:	cmp	r5, #0
   3c48c:	ldrne	r4, [r1]
   3c490:	addsne	r5, r4, r5
   3c494:	bne	3c5d8 <flatcc_json_printer_int8_enum_field@@Base+0x188>
   3c498:	ldrb	r5, [r6, #29]
   3c49c:	cmp	r5, #0
   3c4a0:	mov	r5, r0
   3c4a4:	popeq	{r4, r5, r6, r7, fp, pc}
   3c4a8:	ldr	r0, [r1, #16]
   3c4ac:	mov	r7, ip
   3c4b0:	add	r4, r0, #1
   3c4b4:	cmp	r0, #0
   3c4b8:	str	r4, [r1, #16]
   3c4bc:	ldrne	r0, [r6, #20]
   3c4c0:	addne	r1, r0, #1
   3c4c4:	strne	r1, [r6, #20]
   3c4c8:	movne	r1, #44	; 0x2c
   3c4cc:	strbne	r1, [r0]
   3c4d0:	mov	r0, r6
   3c4d4:	mov	r1, r3
   3c4d8:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3c4dc:	ldrb	r0, [r6, #27]
   3c4e0:	cmp	r0, #0
   3c4e4:	beq	3c558 <flatcc_json_printer_int8_enum_field@@Base+0x108>
   3c4e8:	ubfx	r0, r5, #7, #1
   3c4ec:	ldr	r1, [r6, #20]
   3c4f0:	sxtb	r2, r5
   3c4f4:	cmn	r2, #1
   3c4f8:	movle	r2, #45	; 0x2d
   3c4fc:	rsble	r5, r5, #0
   3c500:	strble	r2, [r1], #1
   3c504:	uxtb	r2, r5
   3c508:	cmp	r2, #100	; 0x64
   3c50c:	bcc	3c56c <flatcc_json_printer_int8_enum_field@@Base+0x11c>
   3c510:	mov	r3, #0
   3c514:	strb	r3, [r1, #3]
   3c518:	movw	r3, #34079	; 0x851f
   3c51c:	movt	r3, #20971	; 0x51eb
   3c520:	umull	r3, r5, r2, r3
   3c524:	mov	r3, #48	; 0x30
   3c528:	orr	r3, r3, r5, lsr #5
   3c52c:	strb	r3, [r1]
   3c530:	lsr	r3, r5, #5
   3c534:	mov	r5, #100	; 0x64
   3c538:	mls	r2, r3, r5, r2
   3c53c:	movw	r3, #48496	; 0xbd70
   3c540:	movt	r3, #4
   3c544:	add	r2, r3, r2, lsl #1
   3c548:	ldrh	r2, [r2]
   3c54c:	strh	r2, [r1, #1]
   3c550:	mov	r1, #3
   3c554:	b	3c5c4 <flatcc_json_printer_int8_enum_field@@Base+0x174>
   3c558:	sxtb	r1, r5
   3c55c:	mov	r0, r6
   3c560:	mov	r2, r7
   3c564:	pop	{r4, r5, r6, r7, fp, lr}
   3c568:	bx	r2
   3c56c:	cmp	r2, #10
   3c570:	bcc	3c5b0 <flatcc_json_printer_int8_enum_field@@Base+0x160>
   3c574:	mov	r3, #0
   3c578:	strb	r3, [r1, #2]
   3c57c:	movw	r3, #34079	; 0x851f
   3c580:	movt	r3, #20971	; 0x51eb
   3c584:	umull	r3, r5, r2, r3
   3c588:	lsr	r3, r5, #5
   3c58c:	mov	r5, #100	; 0x64
   3c590:	mls	r2, r3, r5, r2
   3c594:	movw	r3, #48496	; 0xbd70
   3c598:	movt	r3, #4
   3c59c:	add	r2, r3, r2, lsl #1
   3c5a0:	ldrh	r2, [r2]
   3c5a4:	strh	r2, [r1]
   3c5a8:	mov	r1, #2
   3c5ac:	b	3c5c4 <flatcc_json_printer_int8_enum_field@@Base+0x174>
   3c5b0:	mov	r2, #0
   3c5b4:	strb	r2, [r1, #1]
   3c5b8:	add	r2, r5, #48	; 0x30
   3c5bc:	strb	r2, [r1]
   3c5c0:	mov	r1, #1
   3c5c4:	add	r0, r1, r0
   3c5c8:	ldr	r1, [r6, #20]
   3c5cc:	add	r0, r1, r0
   3c5d0:	str	r0, [r6, #20]
   3c5d4:	pop	{r4, r5, r6, r7, fp, pc}
   3c5d8:	ldrb	r5, [r5]
   3c5dc:	uxtb	r4, r0
   3c5e0:	cmp	r5, r4
   3c5e4:	bne	3c4a8 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3c5e8:	ldrb	r5, [r6, #28]
   3c5ec:	cmp	r5, #0
   3c5f0:	mov	r5, r0
   3c5f4:	bne	3c5d4 <flatcc_json_printer_int8_enum_field@@Base+0x184>
   3c5f8:	b	3c4a8 <flatcc_json_printer_int8_enum_field@@Base+0x58>

0003c5fc <flatcc_json_printer_int16_enum_field@@Base>:
   3c5fc:	push	{r4, r5, r6, r7, fp, lr}
   3c600:	add	fp, sp, #16
   3c604:	mov	r4, r0
   3c608:	mov	r0, #4
   3c60c:	ldr	r5, [r1, #8]
   3c610:	ldr	ip, [fp, #16]
   3c614:	add	r6, r0, r2, lsl #1
   3c618:	ldr	r0, [fp, #12]
   3c61c:	ldr	r2, [fp, #8]
   3c620:	cmp	r6, r5
   3c624:	bge	3c644 <flatcc_json_printer_int16_enum_field@@Base+0x48>
   3c628:	ldr	r5, [r1, #4]
   3c62c:	add	r6, r5, r6
   3c630:	ldrh	r6, [r6]
   3c634:	cmp	r6, #0
   3c638:	ldrne	r5, [r1]
   3c63c:	addsne	r6, r5, r6
   3c640:	bne	3c6e0 <flatcc_json_printer_int16_enum_field@@Base+0xe4>
   3c644:	ldrb	r6, [r4, #29]
   3c648:	mov	r5, r0
   3c64c:	cmp	r6, #0
   3c650:	popeq	{r4, r5, r6, r7, fp, pc}
   3c654:	ldr	r0, [r1, #16]
   3c658:	mov	r7, ip
   3c65c:	add	r6, r0, #1
   3c660:	cmp	r0, #0
   3c664:	str	r6, [r1, #16]
   3c668:	ldrne	r0, [r4, #20]
   3c66c:	addne	r1, r0, #1
   3c670:	strne	r1, [r4, #20]
   3c674:	movne	r1, #44	; 0x2c
   3c678:	strbne	r1, [r0]
   3c67c:	mov	r0, r4
   3c680:	mov	r1, r3
   3c684:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3c688:	ldrb	r0, [r4, #27]
   3c68c:	cmp	r0, #0
   3c690:	beq	3c6cc <flatcc_json_printer_int16_enum_field@@Base+0xd0>
   3c694:	ubfx	r6, r5, #15, #1
   3c698:	ldr	r1, [r4, #20]
   3c69c:	sxth	r0, r5
   3c6a0:	cmn	r0, #1
   3c6a4:	movle	r0, #45	; 0x2d
   3c6a8:	rsble	r5, r5, #0
   3c6ac:	strble	r0, [r1], #1
   3c6b0:	uxth	r0, r5
   3c6b4:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3c6b8:	ldr	r1, [r4, #20]
   3c6bc:	add	r0, r0, r6
   3c6c0:	add	r0, r1, r0
   3c6c4:	str	r0, [r4, #20]
   3c6c8:	pop	{r4, r5, r6, r7, fp, pc}
   3c6cc:	sxth	r1, r5
   3c6d0:	mov	r0, r4
   3c6d4:	mov	r2, r7
   3c6d8:	pop	{r4, r5, r6, r7, fp, lr}
   3c6dc:	bx	r2
   3c6e0:	ldrh	r5, [r6]
   3c6e4:	uxth	r6, r0
   3c6e8:	cmp	r5, r6
   3c6ec:	bne	3c654 <flatcc_json_printer_int16_enum_field@@Base+0x58>
   3c6f0:	ldrb	r6, [r4, #28]
   3c6f4:	mov	r5, r0
   3c6f8:	cmp	r6, #0
   3c6fc:	bne	3c6c8 <flatcc_json_printer_int16_enum_field@@Base+0xcc>
   3c700:	b	3c654 <flatcc_json_printer_int16_enum_field@@Base+0x58>

0003c704 <flatcc_json_printer_int32_enum_field@@Base>:
   3c704:	push	{r4, r5, r6, r7, fp, lr}
   3c708:	add	fp, sp, #16
   3c70c:	mov	r4, r0
   3c710:	mov	r0, #4
   3c714:	ldr	r5, [r1, #8]
   3c718:	ldr	ip, [fp, #16]
   3c71c:	add	r6, r0, r2, lsl #1
   3c720:	ldr	r0, [fp, #12]
   3c724:	ldr	r2, [fp, #8]
   3c728:	cmp	r6, r5
   3c72c:	bge	3c74c <flatcc_json_printer_int32_enum_field@@Base+0x48>
   3c730:	ldr	r5, [r1, #4]
   3c734:	add	r6, r5, r6
   3c738:	ldrh	r6, [r6]
   3c73c:	cmp	r6, #0
   3c740:	ldrne	r5, [r1]
   3c744:	addsne	r6, r5, r6
   3c748:	bne	3c7e4 <flatcc_json_printer_int32_enum_field@@Base+0xe0>
   3c74c:	ldrb	r6, [r4, #29]
   3c750:	mov	r5, r0
   3c754:	cmp	r6, #0
   3c758:	popeq	{r4, r5, r6, r7, fp, pc}
   3c75c:	ldr	r0, [r1, #16]
   3c760:	mov	r7, ip
   3c764:	add	r6, r0, #1
   3c768:	cmp	r0, #0
   3c76c:	str	r6, [r1, #16]
   3c770:	ldrne	r0, [r4, #20]
   3c774:	addne	r1, r0, #1
   3c778:	strne	r1, [r4, #20]
   3c77c:	movne	r1, #44	; 0x2c
   3c780:	strbne	r1, [r0]
   3c784:	mov	r0, r4
   3c788:	mov	r1, r3
   3c78c:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3c790:	ldrb	r0, [r4, #27]
   3c794:	cmp	r0, #0
   3c798:	beq	3c7d0 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   3c79c:	ldr	r1, [r4, #20]
   3c7a0:	cmn	r5, #1
   3c7a4:	lsr	r6, r5, #31
   3c7a8:	movle	r0, #45	; 0x2d
   3c7ac:	rsble	r5, r5, #0
   3c7b0:	strble	r0, [r1], #1
   3c7b4:	mov	r0, r5
   3c7b8:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3c7bc:	ldr	r1, [r4, #20]
   3c7c0:	add	r0, r0, r6
   3c7c4:	add	r0, r1, r0
   3c7c8:	str	r0, [r4, #20]
   3c7cc:	pop	{r4, r5, r6, r7, fp, pc}
   3c7d0:	mov	r0, r4
   3c7d4:	mov	r1, r5
   3c7d8:	mov	r2, r7
   3c7dc:	pop	{r4, r5, r6, r7, fp, lr}
   3c7e0:	bx	r2
   3c7e4:	ldr	r5, [r6]
   3c7e8:	cmp	r5, r0
   3c7ec:	bne	3c75c <flatcc_json_printer_int32_enum_field@@Base+0x58>
   3c7f0:	ldrb	r6, [r4, #28]
   3c7f4:	mov	r5, r0
   3c7f8:	cmp	r6, #0
   3c7fc:	bne	3c7cc <flatcc_json_printer_int32_enum_field@@Base+0xc8>
   3c800:	b	3c75c <flatcc_json_printer_int32_enum_field@@Base+0x58>

0003c804 <flatcc_json_printer_int64_enum_field@@Base>:
   3c804:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3c808:	add	fp, sp, #24
   3c80c:	mov	r4, r0
   3c810:	mov	r0, #4
   3c814:	ldr	r5, [r1, #8]
   3c818:	ldr	r6, [fp, #16]
   3c81c:	ldr	r9, [fp, #24]
   3c820:	add	r7, r0, r2, lsl #1
   3c824:	ldr	r0, [fp, #20]
   3c828:	ldr	r2, [fp, #8]
   3c82c:	cmp	r7, r5
   3c830:	bge	3c850 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   3c834:	ldr	r5, [r1, #4]
   3c838:	add	r7, r5, r7
   3c83c:	ldrh	r7, [r7]
   3c840:	cmp	r7, #0
   3c844:	ldrne	r5, [r1]
   3c848:	addsne	r7, r5, r7
   3c84c:	bne	3c8f8 <flatcc_json_printer_int64_enum_field@@Base+0xf4>
   3c850:	ldrb	r7, [r4, #29]
   3c854:	mov	r8, r6
   3c858:	cmp	r7, #0
   3c85c:	mov	r7, r0
   3c860:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   3c864:	ldr	r0, [r1, #16]
   3c868:	add	r6, r0, #1
   3c86c:	cmp	r0, #0
   3c870:	str	r6, [r1, #16]
   3c874:	ldrne	r0, [r4, #20]
   3c878:	addne	r1, r0, #1
   3c87c:	strne	r1, [r4, #20]
   3c880:	movne	r1, #44	; 0x2c
   3c884:	strbne	r1, [r0]
   3c888:	mov	r0, r4
   3c88c:	mov	r1, r3
   3c890:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3c894:	ldrb	r0, [r4, #27]
   3c898:	cmp	r0, #0
   3c89c:	beq	3c8e0 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   3c8a0:	ldr	r2, [r4, #20]
   3c8a4:	lsr	r5, r7, #31
   3c8a8:	cmn	r7, #1
   3c8ac:	bgt	3c8c0 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   3c8b0:	mov	r0, #45	; 0x2d
   3c8b4:	rsbs	r8, r8, #0
   3c8b8:	strb	r0, [r2], #1
   3c8bc:	rsc	r7, r7, #0
   3c8c0:	mov	r0, r8
   3c8c4:	mov	r1, r7
   3c8c8:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3c8cc:	ldr	r1, [r4, #20]
   3c8d0:	add	r0, r0, r5
   3c8d4:	add	r0, r1, r0
   3c8d8:	str	r0, [r4, #20]
   3c8dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3c8e0:	mov	r0, r4
   3c8e4:	mov	r2, r8
   3c8e8:	mov	r3, r7
   3c8ec:	mov	r1, r9
   3c8f0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3c8f4:	bx	r1
   3c8f8:	ldr	r8, [r7]
   3c8fc:	ldr	r7, [r7, #4]
   3c900:	eor	ip, r7, r0
   3c904:	eor	r5, r8, r6
   3c908:	orrs	r5, r5, ip
   3c90c:	bne	3c864 <flatcc_json_printer_int64_enum_field@@Base+0x60>
   3c910:	ldrb	r7, [r4, #28]
   3c914:	mov	r8, r6
   3c918:	cmp	r7, #0
   3c91c:	mov	r7, r0
   3c920:	bne	3c8dc <flatcc_json_printer_int64_enum_field@@Base+0xd8>
   3c924:	b	3c864 <flatcc_json_printer_int64_enum_field@@Base+0x60>

0003c928 <flatcc_json_printer_bool_enum_field@@Base>:
   3c928:	push	{r4, r5, r6, r7, fp, lr}
   3c92c:	add	fp, sp, #16
   3c930:	mov	r4, r0
   3c934:	mov	r0, #4
   3c938:	ldr	r7, [fp, #16]
   3c93c:	ldr	ip, [fp, #12]
   3c940:	add	r5, r0, r2, lsl #1
   3c944:	ldr	r0, [r1, #8]
   3c948:	ldr	r2, [fp, #8]
   3c94c:	cmp	r5, r0
   3c950:	bge	3c970 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   3c954:	ldr	r0, [r1, #4]
   3c958:	add	r0, r0, r5
   3c95c:	ldrh	r5, [r0]
   3c960:	cmp	r5, #0
   3c964:	ldrne	r0, [r1]
   3c968:	addsne	r5, r0, r5
   3c96c:	bne	3ca20 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   3c970:	ldrb	r0, [r4, #29]
   3c974:	mov	r6, ip
   3c978:	cmp	r0, #0
   3c97c:	popeq	{r4, r5, r6, r7, fp, pc}
   3c980:	ldr	r0, [r1, #16]
   3c984:	add	r5, r0, #1
   3c988:	cmp	r0, #0
   3c98c:	str	r5, [r1, #16]
   3c990:	ldrne	r0, [r4, #20]
   3c994:	addne	r1, r0, #1
   3c998:	strne	r1, [r4, #20]
   3c99c:	movne	r1, #44	; 0x2c
   3c9a0:	strbne	r1, [r0]
   3c9a4:	mov	r0, r4
   3c9a8:	mov	r1, r3
   3c9ac:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3c9b0:	ldrb	r0, [r4, #27]
   3c9b4:	cmp	r0, #0
   3c9b8:	beq	3c9e4 <flatcc_json_printer_bool_enum_field@@Base+0xbc>
   3c9bc:	ldr	r0, [r4, #20]
   3c9c0:	cmp	r6, #0
   3c9c4:	beq	3c9f8 <flatcc_json_printer_bool_enum_field@@Base+0xd0>
   3c9c8:	mov	r1, #0
   3c9cc:	strb	r1, [r0, #4]
   3c9d0:	movw	r1, #29300	; 0x7274
   3c9d4:	movt	r1, #25973	; 0x6575
   3c9d8:	str	r1, [r0]
   3c9dc:	mov	r0, #4
   3c9e0:	b	3ca10 <flatcc_json_printer_bool_enum_field@@Base+0xe8>
   3c9e4:	mov	r0, r4
   3c9e8:	mov	r1, r6
   3c9ec:	mov	r2, r7
   3c9f0:	pop	{r4, r5, r6, r7, fp, lr}
   3c9f4:	bx	r2
   3c9f8:	mov	r1, #101	; 0x65
   3c9fc:	strh	r1, [r0, #4]
   3ca00:	movw	r1, #24934	; 0x6166
   3ca04:	movt	r1, #29548	; 0x736c
   3ca08:	str	r1, [r0]
   3ca0c:	mov	r0, #5
   3ca10:	ldr	r1, [r4, #20]
   3ca14:	add	r0, r1, r0
   3ca18:	str	r0, [r4, #20]
   3ca1c:	pop	{r4, r5, r6, r7, fp, pc}
   3ca20:	ldrb	r6, [r5]
   3ca24:	cmp	r6, ip
   3ca28:	bne	3c980 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   3ca2c:	ldrb	r0, [r4, #28]
   3ca30:	mov	r6, ip
   3ca34:	cmp	r0, #0
   3ca38:	bne	3ca1c <flatcc_json_printer_bool_enum_field@@Base+0xf4>
   3ca3c:	b	3c980 <flatcc_json_printer_bool_enum_field@@Base+0x58>

0003ca40 <flatcc_json_printer_uint8_struct_field@@Base>:
   3ca40:	push	{r4, r5, r6, sl, fp, lr}
   3ca44:	add	fp, sp, #16
   3ca48:	mov	r4, r1
   3ca4c:	mov	r5, r0
   3ca50:	ldrb	r6, [r2, r3]
   3ca54:	ldr	r2, [fp, #12]
   3ca58:	ldr	r1, [fp, #8]
   3ca5c:	cmp	r4, #0
   3ca60:	ldrne	r0, [r5, #20]
   3ca64:	addne	r3, r0, #1
   3ca68:	strne	r3, [r5, #20]
   3ca6c:	movne	r3, #44	; 0x2c
   3ca70:	strbne	r3, [r0]
   3ca74:	mov	r0, r5
   3ca78:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3ca7c:	ldr	r0, [r5, #20]
   3ca80:	mov	r1, #0
   3ca84:	cmp	r6, #100	; 0x64
   3ca88:	bcc	3cadc <flatcc_json_printer_uint8_struct_field@@Base+0x9c>
   3ca8c:	strb	r1, [r0, #3]
   3ca90:	movw	r1, #34079	; 0x851f
   3ca94:	movt	r1, #20971	; 0x51eb
   3ca98:	umull	r1, r2, r6, r1
   3ca9c:	mov	r1, #48	; 0x30
   3caa0:	orr	r1, r1, r2, lsr #5
   3caa4:	strb	r1, [r0]
   3caa8:	lsr	r1, r2, #5
   3caac:	mov	r2, #100	; 0x64
   3cab0:	mls	r1, r1, r2, r6
   3cab4:	movw	r2, #48496	; 0xbd70
   3cab8:	movt	r2, #4
   3cabc:	add	r1, r2, r1, lsl #1
   3cac0:	ldrh	r1, [r1]
   3cac4:	strh	r1, [r0, #1]
   3cac8:	mov	r0, #3
   3cacc:	ldr	r1, [r5, #20]
   3cad0:	add	r0, r1, r0
   3cad4:	str	r0, [r5, #20]
   3cad8:	pop	{r4, r5, r6, sl, fp, pc}
   3cadc:	cmp	r6, #10
   3cae0:	bcc	3cb28 <flatcc_json_printer_uint8_struct_field@@Base+0xe8>
   3cae4:	strb	r1, [r0, #2]
   3cae8:	movw	r1, #34079	; 0x851f
   3caec:	movt	r1, #20971	; 0x51eb
   3caf0:	umull	r1, r2, r6, r1
   3caf4:	lsr	r1, r2, #5
   3caf8:	mov	r2, #100	; 0x64
   3cafc:	mls	r1, r1, r2, r6
   3cb00:	movw	r2, #48496	; 0xbd70
   3cb04:	movt	r2, #4
   3cb08:	add	r1, r2, r1, lsl #1
   3cb0c:	ldrh	r1, [r1]
   3cb10:	strh	r1, [r0]
   3cb14:	mov	r0, #2
   3cb18:	ldr	r1, [r5, #20]
   3cb1c:	add	r0, r1, r0
   3cb20:	str	r0, [r5, #20]
   3cb24:	pop	{r4, r5, r6, sl, fp, pc}
   3cb28:	strb	r1, [r0, #1]
   3cb2c:	add	r1, r6, #48	; 0x30
   3cb30:	strb	r1, [r0]
   3cb34:	mov	r0, #1
   3cb38:	ldr	r1, [r5, #20]
   3cb3c:	add	r0, r1, r0
   3cb40:	str	r0, [r5, #20]
   3cb44:	pop	{r4, r5, r6, sl, fp, pc}

0003cb48 <flatcc_json_printer_uint16_struct_field@@Base>:
   3cb48:	push	{r4, r5, r6, sl, fp, lr}
   3cb4c:	add	fp, sp, #16
   3cb50:	mov	r5, r1
   3cb54:	mov	r4, r0
   3cb58:	add	r0, r2, r3
   3cb5c:	ldr	r2, [fp, #12]
   3cb60:	ldr	r1, [fp, #8]
   3cb64:	cmp	r5, #0
   3cb68:	ldrh	r6, [r0]
   3cb6c:	ldrne	r0, [r4, #20]
   3cb70:	addne	r3, r0, #1
   3cb74:	strne	r3, [r4, #20]
   3cb78:	movne	r3, #44	; 0x2c
   3cb7c:	strbne	r3, [r0]
   3cb80:	mov	r0, r4
   3cb84:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3cb88:	ldr	r1, [r4, #20]
   3cb8c:	mov	r0, r6
   3cb90:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3cb94:	ldr	r1, [r4, #20]
   3cb98:	add	r0, r1, r0
   3cb9c:	str	r0, [r4, #20]
   3cba0:	pop	{r4, r5, r6, sl, fp, pc}

0003cba4 <flatcc_json_printer_uint32_struct_field@@Base>:
   3cba4:	push	{r4, r5, r6, sl, fp, lr}
   3cba8:	add	fp, sp, #16
   3cbac:	mov	r5, r1
   3cbb0:	mov	r4, r0
   3cbb4:	ldr	r6, [r2, r3]
   3cbb8:	ldr	r2, [fp, #12]
   3cbbc:	ldr	r1, [fp, #8]
   3cbc0:	cmp	r5, #0
   3cbc4:	ldrne	r0, [r4, #20]
   3cbc8:	addne	r3, r0, #1
   3cbcc:	strne	r3, [r4, #20]
   3cbd0:	movne	r3, #44	; 0x2c
   3cbd4:	strbne	r3, [r0]
   3cbd8:	mov	r0, r4
   3cbdc:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3cbe0:	ldr	r1, [r4, #20]
   3cbe4:	mov	r0, r6
   3cbe8:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3cbec:	ldr	r1, [r4, #20]
   3cbf0:	add	r0, r1, r0
   3cbf4:	str	r0, [r4, #20]
   3cbf8:	pop	{r4, r5, r6, sl, fp, pc}

0003cbfc <flatcc_json_printer_uint64_struct_field@@Base>:
   3cbfc:	push	{r4, r5, r6, r7, fp, lr}
   3cc00:	add	fp, sp, #16
   3cc04:	mov	r5, r1
   3cc08:	ldr	r7, [r2, r3]!
   3cc0c:	mov	r4, r0
   3cc10:	ldr	r1, [fp, #8]
   3cc14:	cmp	r5, #0
   3cc18:	ldrne	r0, [r4, #20]
   3cc1c:	ldr	r6, [r2, #4]
   3cc20:	ldr	r2, [fp, #12]
   3cc24:	addne	r3, r0, #1
   3cc28:	strne	r3, [r4, #20]
   3cc2c:	movne	r3, #44	; 0x2c
   3cc30:	strbne	r3, [r0]
   3cc34:	mov	r0, r4
   3cc38:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3cc3c:	ldr	r2, [r4, #20]
   3cc40:	mov	r0, r7
   3cc44:	mov	r1, r6
   3cc48:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3cc4c:	ldr	r1, [r4, #20]
   3cc50:	add	r0, r1, r0
   3cc54:	str	r0, [r4, #20]
   3cc58:	pop	{r4, r5, r6, r7, fp, pc}

0003cc5c <flatcc_json_printer_int8_struct_field@@Base>:
   3cc5c:	push	{r4, r5, r6, sl, fp, lr}
   3cc60:	add	fp, sp, #16
   3cc64:	mov	r4, r1
   3cc68:	mov	r5, r0
   3cc6c:	add	r0, r2, r3
   3cc70:	ldr	r2, [fp, #12]
   3cc74:	ldr	r1, [fp, #8]
   3cc78:	cmp	r4, #0
   3cc7c:	ldrsb	r6, [r0]
   3cc80:	ldrne	r0, [r5, #20]
   3cc84:	addne	r3, r0, #1
   3cc88:	strne	r3, [r5, #20]
   3cc8c:	movne	r3, #44	; 0x2c
   3cc90:	strbne	r3, [r0]
   3cc94:	mov	r0, r5
   3cc98:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3cc9c:	ubfx	r0, r6, #7, #1
   3cca0:	ldr	r1, [r5, #20]
   3cca4:	cmn	r6, #1
   3cca8:	movle	r2, #45	; 0x2d
   3ccac:	rsble	r6, r6, #0
   3ccb0:	strble	r2, [r1], #1
   3ccb4:	uxtb	r2, r6
   3ccb8:	cmp	r2, #100	; 0x64
   3ccbc:	bcc	3cd08 <flatcc_json_printer_int8_struct_field@@Base+0xac>
   3ccc0:	mov	r3, #0
   3ccc4:	strb	r3, [r1, #3]
   3ccc8:	movw	r3, #34079	; 0x851f
   3cccc:	movt	r3, #20971	; 0x51eb
   3ccd0:	umull	r3, r6, r2, r3
   3ccd4:	mov	r3, #48	; 0x30
   3ccd8:	orr	r3, r3, r6, lsr #5
   3ccdc:	strb	r3, [r1]
   3cce0:	lsr	r3, r6, #5
   3cce4:	mov	r6, #100	; 0x64
   3cce8:	mls	r2, r3, r6, r2
   3ccec:	movw	r3, #48496	; 0xbd70
   3ccf0:	movt	r3, #4
   3ccf4:	add	r2, r3, r2, lsl #1
   3ccf8:	ldrh	r2, [r2]
   3ccfc:	strh	r2, [r1, #1]
   3cd00:	mov	r1, #3
   3cd04:	b	3cd60 <flatcc_json_printer_int8_struct_field@@Base+0x104>
   3cd08:	cmp	r2, #10
   3cd0c:	bcc	3cd4c <flatcc_json_printer_int8_struct_field@@Base+0xf0>
   3cd10:	mov	r3, #0
   3cd14:	strb	r3, [r1, #2]
   3cd18:	movw	r3, #34079	; 0x851f
   3cd1c:	movt	r3, #20971	; 0x51eb
   3cd20:	umull	r3, r6, r2, r3
   3cd24:	lsr	r3, r6, #5
   3cd28:	mov	r6, #100	; 0x64
   3cd2c:	mls	r2, r3, r6, r2
   3cd30:	movw	r3, #48496	; 0xbd70
   3cd34:	movt	r3, #4
   3cd38:	add	r2, r3, r2, lsl #1
   3cd3c:	ldrh	r2, [r2]
   3cd40:	strh	r2, [r1]
   3cd44:	mov	r1, #2
   3cd48:	b	3cd60 <flatcc_json_printer_int8_struct_field@@Base+0x104>
   3cd4c:	mov	r2, #0
   3cd50:	strb	r2, [r1, #1]
   3cd54:	add	r2, r6, #48	; 0x30
   3cd58:	strb	r2, [r1]
   3cd5c:	mov	r1, #1
   3cd60:	add	r0, r1, r0
   3cd64:	ldr	r1, [r5, #20]
   3cd68:	add	r0, r1, r0
   3cd6c:	str	r0, [r5, #20]
   3cd70:	pop	{r4, r5, r6, sl, fp, pc}

0003cd74 <flatcc_json_printer_int16_struct_field@@Base>:
   3cd74:	push	{r4, r5, r6, sl, fp, lr}
   3cd78:	add	fp, sp, #16
   3cd7c:	mov	ip, r1
   3cd80:	mov	r4, r0
   3cd84:	add	r0, r2, r3
   3cd88:	ldr	r2, [fp, #12]
   3cd8c:	ldr	r1, [fp, #8]
   3cd90:	cmp	ip, #0
   3cd94:	ldrsh	r5, [r0]
   3cd98:	ldrne	r0, [r4, #20]
   3cd9c:	addne	r3, r0, #1
   3cda0:	strne	r3, [r4, #20]
   3cda4:	movne	r3, #44	; 0x2c
   3cda8:	strbne	r3, [r0]
   3cdac:	mov	r0, r4
   3cdb0:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3cdb4:	ubfx	r6, r5, #15, #1
   3cdb8:	ldr	r1, [r4, #20]
   3cdbc:	cmn	r5, #1
   3cdc0:	movle	r0, #45	; 0x2d
   3cdc4:	rsble	r5, r5, #0
   3cdc8:	strble	r0, [r1], #1
   3cdcc:	uxth	r0, r5
   3cdd0:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3cdd4:	ldr	r1, [r4, #20]
   3cdd8:	add	r0, r0, r6
   3cddc:	add	r0, r1, r0
   3cde0:	str	r0, [r4, #20]
   3cde4:	pop	{r4, r5, r6, sl, fp, pc}

0003cde8 <flatcc_json_printer_int32_struct_field@@Base>:
   3cde8:	push	{r4, r5, r6, sl, fp, lr}
   3cdec:	add	fp, sp, #16
   3cdf0:	mov	ip, r1
   3cdf4:	mov	r4, r0
   3cdf8:	ldr	r5, [r2, r3]
   3cdfc:	ldr	r2, [fp, #12]
   3ce00:	ldr	r1, [fp, #8]
   3ce04:	cmp	ip, #0
   3ce08:	ldrne	r0, [r4, #20]
   3ce0c:	addne	r3, r0, #1
   3ce10:	strne	r3, [r4, #20]
   3ce14:	movne	r3, #44	; 0x2c
   3ce18:	strbne	r3, [r0]
   3ce1c:	mov	r0, r4
   3ce20:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3ce24:	ldr	r1, [r4, #20]
   3ce28:	cmn	r5, #1
   3ce2c:	lsr	r6, r5, #31
   3ce30:	movle	r0, #45	; 0x2d
   3ce34:	rsble	r5, r5, #0
   3ce38:	strble	r0, [r1], #1
   3ce3c:	mov	r0, r5
   3ce40:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3ce44:	ldr	r1, [r4, #20]
   3ce48:	add	r0, r0, r6
   3ce4c:	add	r0, r1, r0
   3ce50:	str	r0, [r4, #20]
   3ce54:	pop	{r4, r5, r6, sl, fp, pc}

0003ce58 <flatcc_json_printer_int64_struct_field@@Base>:
   3ce58:	push	{r4, r5, r6, r7, fp, lr}
   3ce5c:	add	fp, sp, #16
   3ce60:	mov	r5, r1
   3ce64:	ldr	r7, [r2, r3]!
   3ce68:	mov	r4, r0
   3ce6c:	ldr	r1, [fp, #8]
   3ce70:	cmp	r5, #0
   3ce74:	ldrne	r0, [r4, #20]
   3ce78:	ldr	r6, [r2, #4]
   3ce7c:	ldr	r2, [fp, #12]
   3ce80:	addne	r3, r0, #1
   3ce84:	strne	r3, [r4, #20]
   3ce88:	movne	r3, #44	; 0x2c
   3ce8c:	strbne	r3, [r0]
   3ce90:	mov	r0, r4
   3ce94:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3ce98:	ldr	r2, [r4, #20]
   3ce9c:	lsr	r5, r6, #31
   3cea0:	cmn	r6, #1
   3cea4:	bgt	3ceb8 <flatcc_json_printer_int64_struct_field@@Base+0x60>
   3cea8:	mov	r0, #45	; 0x2d
   3ceac:	rsbs	r7, r7, #0
   3ceb0:	strb	r0, [r2], #1
   3ceb4:	rsc	r6, r6, #0
   3ceb8:	mov	r0, r7
   3cebc:	mov	r1, r6
   3cec0:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3cec4:	ldr	r1, [r4, #20]
   3cec8:	add	r0, r0, r5
   3cecc:	add	r0, r1, r0
   3ced0:	str	r0, [r4, #20]
   3ced4:	pop	{r4, r5, r6, r7, fp, pc}

0003ced8 <flatcc_json_printer_bool_struct_field@@Base>:
   3ced8:	push	{r4, r5, fp, lr}
   3cedc:	add	fp, sp, #8
   3cee0:	mov	ip, r1
   3cee4:	mov	r4, r0
   3cee8:	ldrb	r5, [r2, r3]
   3ceec:	ldr	r2, [fp, #12]
   3cef0:	ldr	r1, [fp, #8]
   3cef4:	cmp	ip, #0
   3cef8:	ldrne	r0, [r4, #20]
   3cefc:	addne	r3, r0, #1
   3cf00:	strne	r3, [r4, #20]
   3cf04:	movne	r3, #44	; 0x2c
   3cf08:	strbne	r3, [r0]
   3cf0c:	mov	r0, r4
   3cf10:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3cf14:	ldr	r0, [r4, #20]
   3cf18:	cmp	r5, #0
   3cf1c:	beq	3cf48 <flatcc_json_printer_bool_struct_field@@Base+0x70>
   3cf20:	mov	r1, #0
   3cf24:	strb	r1, [r0, #4]
   3cf28:	movw	r1, #29300	; 0x7274
   3cf2c:	movt	r1, #25973	; 0x6575
   3cf30:	str	r1, [r0]
   3cf34:	mov	r0, #4
   3cf38:	ldr	r1, [r4, #20]
   3cf3c:	add	r0, r1, r0
   3cf40:	str	r0, [r4, #20]
   3cf44:	pop	{r4, r5, fp, pc}
   3cf48:	mov	r1, #101	; 0x65
   3cf4c:	strh	r1, [r0, #4]
   3cf50:	movw	r1, #24934	; 0x6166
   3cf54:	movt	r1, #29548	; 0x736c
   3cf58:	str	r1, [r0]
   3cf5c:	mov	r0, #5
   3cf60:	ldr	r1, [r4, #20]
   3cf64:	add	r0, r1, r0
   3cf68:	str	r0, [r4, #20]
   3cf6c:	pop	{r4, r5, fp, pc}

0003cf70 <flatcc_json_printer_float_struct_field@@Base>:
   3cf70:	push	{r4, sl, fp, lr}
   3cf74:	add	fp, sp, #8
   3cf78:	vpush	{d8}
   3cf7c:	mov	ip, r1
   3cf80:	mov	r4, r0
   3cf84:	add	r0, r2, r3
   3cf88:	ldr	r2, [fp, #12]
   3cf8c:	ldr	r1, [fp, #8]
   3cf90:	cmp	ip, #0
   3cf94:	vldr	s16, [r0]
   3cf98:	ldrne	r0, [r4, #20]
   3cf9c:	addne	r3, r0, #1
   3cfa0:	strne	r3, [r4, #20]
   3cfa4:	movne	r3, #44	; 0x2c
   3cfa8:	strbne	r3, [r0]
   3cfac:	mov	r0, r4
   3cfb0:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3cfb4:	ldr	r0, [r4, #20]
   3cfb8:	vcvt.f64.f32	d0, s16
   3cfbc:	bl	38e30 <flatcc_json_printer_fmt_float@@Base+0x8>
   3cfc0:	ldr	r1, [r4, #20]
   3cfc4:	add	r0, r1, r0
   3cfc8:	str	r0, [r4, #20]
   3cfcc:	vpop	{d8}
   3cfd0:	pop	{r4, sl, fp, pc}

0003cfd4 <flatcc_json_printer_double_struct_field@@Base>:
   3cfd4:	push	{r4, sl, fp, lr}
   3cfd8:	add	fp, sp, #8
   3cfdc:	vpush	{d8}
   3cfe0:	mov	ip, r1
   3cfe4:	mov	r4, r0
   3cfe8:	add	r0, r2, r3
   3cfec:	ldr	r2, [fp, #12]
   3cff0:	ldr	r1, [fp, #8]
   3cff4:	cmp	ip, #0
   3cff8:	vldr	d8, [r0]
   3cffc:	ldrne	r0, [r4, #20]
   3d000:	addne	r3, r0, #1
   3d004:	strne	r3, [r4, #20]
   3d008:	movne	r3, #44	; 0x2c
   3d00c:	strbne	r3, [r0]
   3d010:	mov	r0, r4
   3d014:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3d018:	ldr	r0, [r4, #20]
   3d01c:	vorr	d0, d8, d8
   3d020:	bl	38e30 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d024:	ldr	r1, [r4, #20]
   3d028:	add	r0, r1, r0
   3d02c:	str	r0, [r4, #20]
   3d030:	vpop	{d8}
   3d034:	pop	{r4, sl, fp, pc}

0003d038 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3d038:	push	{r4, r5, r6, r7, fp, lr}
   3d03c:	add	fp, sp, #16
   3d040:	mov	r5, r1
   3d044:	mov	r4, r0
   3d048:	add	r7, fp, #8
   3d04c:	ldrb	r6, [r2, r3]
   3d050:	cmp	r5, #0
   3d054:	ldm	r7, {r1, r2, r7}
   3d058:	ldrne	r0, [r4, #20]
   3d05c:	addne	r3, r0, #1
   3d060:	strne	r3, [r4, #20]
   3d064:	movne	r3, #44	; 0x2c
   3d068:	strbne	r3, [r0]
   3d06c:	mov	r0, r4
   3d070:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3d074:	ldrb	r0, [r4, #27]
   3d078:	cmp	r0, #0
   3d07c:	beq	3d0e0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xa8>
   3d080:	ldr	r0, [r4, #20]
   3d084:	mov	r1, #0
   3d088:	cmp	r6, #100	; 0x64
   3d08c:	bcc	3d0f4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xbc>
   3d090:	strb	r1, [r0, #3]
   3d094:	movw	r1, #34079	; 0x851f
   3d098:	movt	r1, #20971	; 0x51eb
   3d09c:	umull	r1, r2, r6, r1
   3d0a0:	mov	r1, #48	; 0x30
   3d0a4:	orr	r1, r1, r2, lsr #5
   3d0a8:	strb	r1, [r0]
   3d0ac:	lsr	r1, r2, #5
   3d0b0:	mov	r2, #100	; 0x64
   3d0b4:	mls	r1, r1, r2, r6
   3d0b8:	movw	r2, #48496	; 0xbd70
   3d0bc:	movt	r2, #4
   3d0c0:	add	r1, r2, r1, lsl #1
   3d0c4:	ldrh	r1, [r1]
   3d0c8:	strh	r1, [r0, #1]
   3d0cc:	mov	r0, #3
   3d0d0:	ldr	r1, [r4, #20]
   3d0d4:	add	r0, r1, r0
   3d0d8:	str	r0, [r4, #20]
   3d0dc:	pop	{r4, r5, r6, r7, fp, pc}
   3d0e0:	mov	r0, r4
   3d0e4:	mov	r1, r6
   3d0e8:	mov	r2, r7
   3d0ec:	pop	{r4, r5, r6, r7, fp, lr}
   3d0f0:	bx	r2
   3d0f4:	cmp	r6, #10
   3d0f8:	bcc	3d140 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x108>
   3d0fc:	strb	r1, [r0, #2]
   3d100:	movw	r1, #34079	; 0x851f
   3d104:	movt	r1, #20971	; 0x51eb
   3d108:	umull	r1, r2, r6, r1
   3d10c:	lsr	r1, r2, #5
   3d110:	mov	r2, #100	; 0x64
   3d114:	mls	r1, r1, r2, r6
   3d118:	movw	r2, #48496	; 0xbd70
   3d11c:	movt	r2, #4
   3d120:	add	r1, r2, r1, lsl #1
   3d124:	ldrh	r1, [r1]
   3d128:	strh	r1, [r0]
   3d12c:	mov	r0, #2
   3d130:	ldr	r1, [r4, #20]
   3d134:	add	r0, r1, r0
   3d138:	str	r0, [r4, #20]
   3d13c:	pop	{r4, r5, r6, r7, fp, pc}
   3d140:	strb	r1, [r0, #1]
   3d144:	add	r1, r6, #48	; 0x30
   3d148:	strb	r1, [r0]
   3d14c:	mov	r0, #1
   3d150:	ldr	r1, [r4, #20]
   3d154:	add	r0, r1, r0
   3d158:	str	r0, [r4, #20]
   3d15c:	pop	{r4, r5, r6, r7, fp, pc}

0003d160 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3d160:	push	{r4, r5, r6, r7, fp, lr}
   3d164:	add	fp, sp, #16
   3d168:	mov	r5, r1
   3d16c:	mov	r4, r0
   3d170:	add	r0, r2, r3
   3d174:	add	r7, fp, #8
   3d178:	cmp	r5, #0
   3d17c:	ldrh	r6, [r0]
   3d180:	ldm	r7, {r1, r2, r7}
   3d184:	ldrne	r0, [r4, #20]
   3d188:	addne	r3, r0, #1
   3d18c:	strne	r3, [r4, #20]
   3d190:	movne	r3, #44	; 0x2c
   3d194:	strbne	r3, [r0]
   3d198:	mov	r0, r4
   3d19c:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3d1a0:	ldrb	r0, [r4, #27]
   3d1a4:	cmp	r0, #0
   3d1a8:	beq	3d1c8 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x68>
   3d1ac:	ldr	r1, [r4, #20]
   3d1b0:	mov	r0, r6
   3d1b4:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3d1b8:	ldr	r1, [r4, #20]
   3d1bc:	add	r0, r1, r0
   3d1c0:	str	r0, [r4, #20]
   3d1c4:	pop	{r4, r5, r6, r7, fp, pc}
   3d1c8:	mov	r0, r4
   3d1cc:	mov	r1, r6
   3d1d0:	mov	r2, r7
   3d1d4:	pop	{r4, r5, r6, r7, fp, lr}
   3d1d8:	bx	r2

0003d1dc <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3d1dc:	push	{r4, r5, r6, r7, fp, lr}
   3d1e0:	add	fp, sp, #16
   3d1e4:	mov	r5, r1
   3d1e8:	mov	r4, r0
   3d1ec:	add	r7, fp, #8
   3d1f0:	ldr	r6, [r2, r3]
   3d1f4:	cmp	r5, #0
   3d1f8:	ldm	r7, {r1, r2, r7}
   3d1fc:	ldrne	r0, [r4, #20]
   3d200:	addne	r3, r0, #1
   3d204:	strne	r3, [r4, #20]
   3d208:	movne	r3, #44	; 0x2c
   3d20c:	strbne	r3, [r0]
   3d210:	mov	r0, r4
   3d214:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3d218:	ldrb	r0, [r4, #27]
   3d21c:	cmp	r0, #0
   3d220:	beq	3d240 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x64>
   3d224:	ldr	r1, [r4, #20]
   3d228:	mov	r0, r6
   3d22c:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3d230:	ldr	r1, [r4, #20]
   3d234:	add	r0, r1, r0
   3d238:	str	r0, [r4, #20]
   3d23c:	pop	{r4, r5, r6, r7, fp, pc}
   3d240:	mov	r0, r4
   3d244:	mov	r1, r6
   3d248:	mov	r2, r7
   3d24c:	pop	{r4, r5, r6, r7, fp, lr}
   3d250:	bx	r2

0003d254 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3d254:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d258:	add	fp, sp, #24
   3d25c:	ldr	r6, [r2, r3]!
   3d260:	mov	r5, r1
   3d264:	mov	r4, r0
   3d268:	add	r8, fp, #8
   3d26c:	cmp	r5, #0
   3d270:	ldr	r7, [r2, #4]
   3d274:	ldm	r8, {r1, r2, r8}
   3d278:	ldrne	r0, [r4, #20]
   3d27c:	addne	r3, r0, #1
   3d280:	strne	r3, [r4, #20]
   3d284:	movne	r3, #44	; 0x2c
   3d288:	strbne	r3, [r0]
   3d28c:	mov	r0, r4
   3d290:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3d294:	ldrb	r0, [r4, #27]
   3d298:	cmp	r0, #0
   3d29c:	beq	3d2c0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x6c>
   3d2a0:	ldr	r2, [r4, #20]
   3d2a4:	mov	r0, r6
   3d2a8:	mov	r1, r7
   3d2ac:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3d2b0:	ldr	r1, [r4, #20]
   3d2b4:	add	r0, r1, r0
   3d2b8:	str	r0, [r4, #20]
   3d2bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3d2c0:	mov	r0, r4
   3d2c4:	mov	r2, r6
   3d2c8:	mov	r3, r7
   3d2cc:	mov	r1, r8
   3d2d0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d2d4:	bx	r1

0003d2d8 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3d2d8:	push	{r4, r5, r6, r7, fp, lr}
   3d2dc:	add	fp, sp, #16
   3d2e0:	mov	r5, r1
   3d2e4:	mov	r4, r0
   3d2e8:	add	r0, r2, r3
   3d2ec:	add	r7, fp, #8
   3d2f0:	cmp	r5, #0
   3d2f4:	ldrsb	r6, [r0]
   3d2f8:	ldm	r7, {r1, r2, r7}
   3d2fc:	ldrne	r0, [r4, #20]
   3d300:	addne	r3, r0, #1
   3d304:	strne	r3, [r4, #20]
   3d308:	movne	r3, #44	; 0x2c
   3d30c:	strbne	r3, [r0]
   3d310:	mov	r0, r4
   3d314:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3d318:	ldrb	r0, [r4, #27]
   3d31c:	cmp	r0, #0
   3d320:	beq	3d390 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb8>
   3d324:	ubfx	r0, r6, #7, #1
   3d328:	ldr	r1, [r4, #20]
   3d32c:	cmn	r6, #1
   3d330:	movle	r2, #45	; 0x2d
   3d334:	rsble	r6, r6, #0
   3d338:	strble	r2, [r1], #1
   3d33c:	uxtb	r2, r6
   3d340:	cmp	r2, #100	; 0x64
   3d344:	bcc	3d3a4 <flatcc_json_printer_int8_enum_struct_field@@Base+0xcc>
   3d348:	mov	r3, #0
   3d34c:	strb	r3, [r1, #3]
   3d350:	movw	r3, #34079	; 0x851f
   3d354:	movt	r3, #20971	; 0x51eb
   3d358:	umull	r3, r6, r2, r3
   3d35c:	mov	r3, #48	; 0x30
   3d360:	orr	r3, r3, r6, lsr #5
   3d364:	strb	r3, [r1]
   3d368:	lsr	r3, r6, #5
   3d36c:	mov	r6, #100	; 0x64
   3d370:	mls	r2, r3, r6, r2
   3d374:	movw	r3, #48496	; 0xbd70
   3d378:	movt	r3, #4
   3d37c:	add	r2, r3, r2, lsl #1
   3d380:	ldrh	r2, [r2]
   3d384:	strh	r2, [r1, #1]
   3d388:	mov	r1, #3
   3d38c:	b	3d3fc <flatcc_json_printer_int8_enum_struct_field@@Base+0x124>
   3d390:	mov	r0, r4
   3d394:	mov	r1, r6
   3d398:	mov	r2, r7
   3d39c:	pop	{r4, r5, r6, r7, fp, lr}
   3d3a0:	bx	r2
   3d3a4:	cmp	r2, #10
   3d3a8:	bcc	3d3e8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x110>
   3d3ac:	mov	r3, #0
   3d3b0:	strb	r3, [r1, #2]
   3d3b4:	movw	r3, #34079	; 0x851f
   3d3b8:	movt	r3, #20971	; 0x51eb
   3d3bc:	umull	r3, r6, r2, r3
   3d3c0:	lsr	r3, r6, #5
   3d3c4:	mov	r6, #100	; 0x64
   3d3c8:	mls	r2, r3, r6, r2
   3d3cc:	movw	r3, #48496	; 0xbd70
   3d3d0:	movt	r3, #4
   3d3d4:	add	r2, r3, r2, lsl #1
   3d3d8:	ldrh	r2, [r2]
   3d3dc:	strh	r2, [r1]
   3d3e0:	mov	r1, #2
   3d3e4:	b	3d3fc <flatcc_json_printer_int8_enum_struct_field@@Base+0x124>
   3d3e8:	mov	r2, #0
   3d3ec:	strb	r2, [r1, #1]
   3d3f0:	add	r2, r6, #48	; 0x30
   3d3f4:	strb	r2, [r1]
   3d3f8:	mov	r1, #1
   3d3fc:	add	r0, r1, r0
   3d400:	ldr	r1, [r4, #20]
   3d404:	add	r0, r1, r0
   3d408:	str	r0, [r4, #20]
   3d40c:	pop	{r4, r5, r6, r7, fp, pc}

0003d410 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3d410:	push	{r4, r5, r6, r7, fp, lr}
   3d414:	add	fp, sp, #16
   3d418:	mov	r5, r1
   3d41c:	mov	r4, r0
   3d420:	add	r0, r2, r3
   3d424:	add	r7, fp, #8
   3d428:	cmp	r5, #0
   3d42c:	ldrsh	r6, [r0]
   3d430:	ldm	r7, {r1, r2, r7}
   3d434:	ldrne	r0, [r4, #20]
   3d438:	addne	r3, r0, #1
   3d43c:	strne	r3, [r4, #20]
   3d440:	movne	r3, #44	; 0x2c
   3d444:	strbne	r3, [r0]
   3d448:	mov	r0, r4
   3d44c:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3d450:	ldrb	r0, [r4, #27]
   3d454:	cmp	r0, #0
   3d458:	beq	3d490 <flatcc_json_printer_int16_enum_struct_field@@Base+0x80>
   3d45c:	ubfx	r5, r6, #15, #1
   3d460:	ldr	r1, [r4, #20]
   3d464:	cmn	r6, #1
   3d468:	movle	r0, #45	; 0x2d
   3d46c:	rsble	r6, r6, #0
   3d470:	strble	r0, [r1], #1
   3d474:	uxth	r0, r6
   3d478:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3d47c:	ldr	r1, [r4, #20]
   3d480:	add	r0, r0, r5
   3d484:	add	r0, r1, r0
   3d488:	str	r0, [r4, #20]
   3d48c:	pop	{r4, r5, r6, r7, fp, pc}
   3d490:	mov	r0, r4
   3d494:	mov	r1, r6
   3d498:	mov	r2, r7
   3d49c:	pop	{r4, r5, r6, r7, fp, lr}
   3d4a0:	bx	r2

0003d4a4 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3d4a4:	push	{r4, r5, r6, r7, fp, lr}
   3d4a8:	add	fp, sp, #16
   3d4ac:	mov	r5, r1
   3d4b0:	mov	r4, r0
   3d4b4:	add	r7, fp, #8
   3d4b8:	ldr	r6, [r2, r3]
   3d4bc:	cmp	r5, #0
   3d4c0:	ldm	r7, {r1, r2, r7}
   3d4c4:	ldrne	r0, [r4, #20]
   3d4c8:	addne	r3, r0, #1
   3d4cc:	strne	r3, [r4, #20]
   3d4d0:	movne	r3, #44	; 0x2c
   3d4d4:	strbne	r3, [r0]
   3d4d8:	mov	r0, r4
   3d4dc:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3d4e0:	ldrb	r0, [r4, #27]
   3d4e4:	cmp	r0, #0
   3d4e8:	beq	3d520 <flatcc_json_printer_int32_enum_struct_field@@Base+0x7c>
   3d4ec:	ldr	r1, [r4, #20]
   3d4f0:	cmn	r6, #1
   3d4f4:	lsr	r5, r6, #31
   3d4f8:	movle	r0, #45	; 0x2d
   3d4fc:	rsble	r6, r6, #0
   3d500:	strble	r0, [r1], #1
   3d504:	mov	r0, r6
   3d508:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3d50c:	ldr	r1, [r4, #20]
   3d510:	add	r0, r0, r5
   3d514:	add	r0, r1, r0
   3d518:	str	r0, [r4, #20]
   3d51c:	pop	{r4, r5, r6, r7, fp, pc}
   3d520:	mov	r0, r4
   3d524:	mov	r1, r6
   3d528:	mov	r2, r7
   3d52c:	pop	{r4, r5, r6, r7, fp, lr}
   3d530:	bx	r2

0003d534 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3d534:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d538:	add	fp, sp, #24
   3d53c:	ldr	r7, [r2, r3]!
   3d540:	mov	r6, r1
   3d544:	mov	r4, r0
   3d548:	add	r8, fp, #8
   3d54c:	cmp	r6, #0
   3d550:	ldr	r5, [r2, #4]
   3d554:	ldm	r8, {r1, r2, r8}
   3d558:	ldrne	r0, [r4, #20]
   3d55c:	addne	r3, r0, #1
   3d560:	strne	r3, [r4, #20]
   3d564:	movne	r3, #44	; 0x2c
   3d568:	strbne	r3, [r0]
   3d56c:	mov	r0, r4
   3d570:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3d574:	ldrb	r0, [r4, #27]
   3d578:	cmp	r0, #0
   3d57c:	beq	3d5c0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x8c>
   3d580:	ldr	r2, [r4, #20]
   3d584:	lsr	r6, r5, #31
   3d588:	cmn	r5, #1
   3d58c:	bgt	3d5a0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x6c>
   3d590:	mov	r0, #45	; 0x2d
   3d594:	rsbs	r7, r7, #0
   3d598:	strb	r0, [r2], #1
   3d59c:	rsc	r5, r5, #0
   3d5a0:	mov	r0, r7
   3d5a4:	mov	r1, r5
   3d5a8:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3d5ac:	ldr	r1, [r4, #20]
   3d5b0:	add	r0, r0, r6
   3d5b4:	add	r0, r1, r0
   3d5b8:	str	r0, [r4, #20]
   3d5bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3d5c0:	mov	r0, r4
   3d5c4:	mov	r2, r7
   3d5c8:	mov	r3, r5
   3d5cc:	mov	r1, r8
   3d5d0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d5d4:	bx	r1

0003d5d8 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3d5d8:	push	{r4, r5, r6, r7, fp, lr}
   3d5dc:	add	fp, sp, #16
   3d5e0:	mov	r5, r1
   3d5e4:	mov	r4, r0
   3d5e8:	add	r7, fp, #8
   3d5ec:	ldrb	r6, [r2, r3]
   3d5f0:	cmp	r5, #0
   3d5f4:	ldm	r7, {r1, r2, r7}
   3d5f8:	ldrne	r0, [r4, #20]
   3d5fc:	addne	r3, r0, #1
   3d600:	strne	r3, [r4, #20]
   3d604:	movne	r3, #44	; 0x2c
   3d608:	strbne	r3, [r0]
   3d60c:	mov	r0, r4
   3d610:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3d614:	ldrb	r0, [r4, #27]
   3d618:	cmp	r0, #0
   3d61c:	beq	3d654 <flatcc_json_printer_bool_enum_struct_field@@Base+0x7c>
   3d620:	ldr	r0, [r4, #20]
   3d624:	cmp	r6, #0
   3d628:	beq	3d668 <flatcc_json_printer_bool_enum_struct_field@@Base+0x90>
   3d62c:	mov	r1, #0
   3d630:	strb	r1, [r0, #4]
   3d634:	movw	r1, #29300	; 0x7274
   3d638:	movt	r1, #25973	; 0x6575
   3d63c:	str	r1, [r0]
   3d640:	mov	r0, #4
   3d644:	ldr	r1, [r4, #20]
   3d648:	add	r0, r1, r0
   3d64c:	str	r0, [r4, #20]
   3d650:	pop	{r4, r5, r6, r7, fp, pc}
   3d654:	mov	r0, r4
   3d658:	mov	r1, r6
   3d65c:	mov	r2, r7
   3d660:	pop	{r4, r5, r6, r7, fp, lr}
   3d664:	bx	r2
   3d668:	mov	r1, #101	; 0x65
   3d66c:	strh	r1, [r0, #4]
   3d670:	movw	r1, #24934	; 0x6166
   3d674:	movt	r1, #29548	; 0x736c
   3d678:	str	r1, [r0]
   3d67c:	mov	r0, #5
   3d680:	ldr	r1, [r4, #20]
   3d684:	add	r0, r1, r0
   3d688:	str	r0, [r4, #20]
   3d68c:	pop	{r4, r5, r6, r7, fp, pc}

0003d690 <flatcc_json_printer_utype_vector_field@@Base>:
   3d690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d694:	add	fp, sp, #28
   3d698:	sub	sp, sp, #4
   3d69c:	mov	r4, r0
   3d6a0:	mov	r0, #4
   3d6a4:	add	r0, r0, r2, lsl #1
   3d6a8:	ldr	r2, [r1, #8]
   3d6ac:	cmp	r0, r2
   3d6b0:	bge	3d6d0 <flatcc_json_printer_utype_vector_field@@Base+0x40>
   3d6b4:	ldr	r2, [r1, #4]
   3d6b8:	add	r0, r2, r0
   3d6bc:	ldrh	r0, [r0]
   3d6c0:	cmp	r0, #0
   3d6c4:	ldrne	r2, [r1]
   3d6c8:	addsne	r9, r2, r0
   3d6cc:	bne	3d6d8 <flatcc_json_printer_utype_vector_field@@Base+0x48>
   3d6d0:	sub	sp, fp, #28
   3d6d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d6d8:	ldr	r0, [r1, #16]
   3d6dc:	ldr	r2, [fp, #8]
   3d6e0:	add	r7, r0, #1
   3d6e4:	cmp	r0, #0
   3d6e8:	str	r7, [r1, #16]
   3d6ec:	ldrne	r0, [r4, #20]
   3d6f0:	addne	r1, r0, #1
   3d6f4:	strne	r1, [r4, #20]
   3d6f8:	movne	r1, #44	; 0x2c
   3d6fc:	strbne	r1, [r0]
   3d700:	mov	r1, r3
   3d704:	ldr	r0, [r9]
   3d708:	ldr	r8, [r9, r0]!
   3d70c:	mov	r0, r4
   3d710:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3d714:	ldr	r1, [r4, #32]
   3d718:	ldr	r0, [r4, #20]
   3d71c:	cmp	r8, #0
   3d720:	add	r1, r1, #1
   3d724:	str	r1, [r4, #32]
   3d728:	add	r1, r0, #1
   3d72c:	str	r1, [r4, #20]
   3d730:	mov	r1, #91	; 0x5b
   3d734:	strb	r1, [r0]
   3d738:	beq	3dabc <flatcc_json_printer_utype_vector_field@@Base+0x42c>
   3d73c:	ldrb	r1, [r4, #25]
   3d740:	ldr	r0, [r4, #20]
   3d744:	cmp	r1, #0
   3d748:	beq	3d814 <flatcc_json_printer_utype_vector_field@@Base+0x184>
   3d74c:	add	r1, r0, #1
   3d750:	str	r1, [r4, #20]
   3d754:	mov	r1, #10
   3d758:	strb	r1, [r0]
   3d75c:	ldr	r0, [r4, #20]
   3d760:	ldrb	r2, [r4, #25]
   3d764:	ldr	r3, [r4, #32]
   3d768:	ldr	r1, [r4, #16]
   3d76c:	mla	r7, r3, r2, r0
   3d770:	mul	r5, r3, r2
   3d774:	cmp	r7, r1
   3d778:	bls	3d7e8 <flatcc_json_printer_utype_vector_field@@Base+0x158>
   3d77c:	cmp	r0, r1
   3d780:	bcc	3d79c <flatcc_json_printer_utype_vector_field@@Base+0x10c>
   3d784:	ldr	r2, [r4, #44]	; 0x2c
   3d788:	mov	r0, r4
   3d78c:	mov	r1, #0
   3d790:	blx	r2
   3d794:	ldr	r1, [r4, #16]
   3d798:	ldr	r0, [r4, #20]
   3d79c:	sub	r6, r1, r0
   3d7a0:	cmp	r6, r5
   3d7a4:	bcs	3d7e8 <flatcc_json_printer_utype_vector_field@@Base+0x158>
   3d7a8:	mov	r1, #32
   3d7ac:	mov	r2, r6
   3d7b0:	bl	14ef0 <memset@plt>
   3d7b4:	ldr	r0, [r4, #20]
   3d7b8:	ldr	r2, [r4, #44]	; 0x2c
   3d7bc:	mov	r1, #0
   3d7c0:	add	r0, r0, r6
   3d7c4:	str	r0, [r4, #20]
   3d7c8:	mov	r0, r4
   3d7cc:	blx	r2
   3d7d0:	ldr	r1, [r4, #16]
   3d7d4:	ldr	r0, [r4, #20]
   3d7d8:	sub	r5, r5, r6
   3d7dc:	sub	r6, r1, r0
   3d7e0:	cmp	r5, r6
   3d7e4:	bhi	3d7a8 <flatcc_json_printer_utype_vector_field@@Base+0x118>
   3d7e8:	mov	r1, #32
   3d7ec:	mov	r2, r5
   3d7f0:	bl	14ef0 <memset@plt>
   3d7f4:	ldr	r0, [r4, #20]
   3d7f8:	add	r0, r0, r5
   3d7fc:	str	r0, [r4, #20]
   3d800:	ldrb	r1, [r9, #4]
   3d804:	mov	r2, #0
   3d808:	cmp	r1, #100	; 0x64
   3d80c:	bcs	3d844 <flatcc_json_printer_utype_vector_field@@Base+0x1b4>
   3d810:	b	3d888 <flatcc_json_printer_utype_vector_field@@Base+0x1f8>
   3d814:	ldr	r1, [r4, #16]
   3d818:	cmp	r0, r1
   3d81c:	bcc	3d834 <flatcc_json_printer_utype_vector_field@@Base+0x1a4>
   3d820:	ldr	r2, [r4, #44]	; 0x2c
   3d824:	mov	r0, r4
   3d828:	mov	r1, #0
   3d82c:	blx	r2
   3d830:	ldr	r0, [r4, #20]
   3d834:	ldrb	r1, [r9, #4]
   3d838:	mov	r2, #0
   3d83c:	cmp	r1, #100	; 0x64
   3d840:	bcc	3d888 <flatcc_json_printer_utype_vector_field@@Base+0x1f8>
   3d844:	strb	r2, [r0, #3]
   3d848:	movw	r2, #34079	; 0x851f
   3d84c:	movt	r2, #20971	; 0x51eb
   3d850:	umull	r2, r3, r1, r2
   3d854:	mov	r2, #48	; 0x30
   3d858:	orr	r2, r2, r3, lsr #5
   3d85c:	strb	r2, [r0]
   3d860:	lsr	r2, r3, #5
   3d864:	mov	r3, #100	; 0x64
   3d868:	mls	r1, r2, r3, r1
   3d86c:	movw	r2, #48496	; 0xbd70
   3d870:	movt	r2, #4
   3d874:	add	r1, r2, r1, lsl #1
   3d878:	ldrh	r1, [r1]
   3d87c:	strh	r1, [r0, #1]
   3d880:	mov	r0, #3
   3d884:	b	3d8d8 <flatcc_json_printer_utype_vector_field@@Base+0x248>
   3d888:	cmp	r1, #10
   3d88c:	bcc	3d8c8 <flatcc_json_printer_utype_vector_field@@Base+0x238>
   3d890:	strb	r2, [r0, #2]
   3d894:	movw	r2, #34079	; 0x851f
   3d898:	movt	r2, #20971	; 0x51eb
   3d89c:	umull	r2, r3, r1, r2
   3d8a0:	lsr	r2, r3, #5
   3d8a4:	mov	r3, #100	; 0x64
   3d8a8:	mls	r1, r2, r3, r1
   3d8ac:	movw	r2, #48496	; 0xbd70
   3d8b0:	movt	r2, #4
   3d8b4:	add	r1, r2, r1, lsl #1
   3d8b8:	ldrh	r1, [r1]
   3d8bc:	strh	r1, [r0]
   3d8c0:	mov	r0, #2
   3d8c4:	b	3d8d8 <flatcc_json_printer_utype_vector_field@@Base+0x248>
   3d8c8:	add	r1, r1, #48	; 0x30
   3d8cc:	strb	r2, [r0, #1]
   3d8d0:	strb	r1, [r0]
   3d8d4:	mov	r0, #1
   3d8d8:	ldr	r1, [r4, #20]
   3d8dc:	subs	r8, r8, #1
   3d8e0:	add	r0, r1, r0
   3d8e4:	str	r0, [r4, #20]
   3d8e8:	beq	3dabc <flatcc_json_printer_utype_vector_field@@Base+0x42c>
   3d8ec:	ldr	r0, [r4, #20]
   3d8f0:	add	r7, r9, #5
   3d8f4:	mov	r9, #44	; 0x2c
   3d8f8:	mov	sl, #0
   3d8fc:	add	r1, r0, #1
   3d900:	str	r1, [r4, #20]
   3d904:	strb	r9, [r0]
   3d908:	ldrb	r1, [r4, #25]
   3d90c:	ldr	r0, [r4, #20]
   3d910:	cmp	r1, #0
   3d914:	beq	3d9e0 <flatcc_json_printer_utype_vector_field@@Base+0x350>
   3d918:	add	r1, r0, #1
   3d91c:	str	r1, [r4, #20]
   3d920:	mov	r1, #10
   3d924:	strb	r1, [r0]
   3d928:	ldr	r0, [r4, #20]
   3d92c:	ldrb	r2, [r4, #25]
   3d930:	ldr	r3, [r4, #32]
   3d934:	ldr	r1, [r4, #16]
   3d938:	mla	r6, r3, r2, r0
   3d93c:	mul	r5, r3, r2
   3d940:	cmp	r6, r1
   3d944:	bls	3d9b4 <flatcc_json_printer_utype_vector_field@@Base+0x324>
   3d948:	cmp	r0, r1
   3d94c:	bcc	3d968 <flatcc_json_printer_utype_vector_field@@Base+0x2d8>
   3d950:	ldr	r2, [r4, #44]	; 0x2c
   3d954:	mov	r0, r4
   3d958:	mov	r1, #0
   3d95c:	blx	r2
   3d960:	ldr	r1, [r4, #16]
   3d964:	ldr	r0, [r4, #20]
   3d968:	sub	r6, r1, r0
   3d96c:	cmp	r6, r5
   3d970:	bcs	3d9b4 <flatcc_json_printer_utype_vector_field@@Base+0x324>
   3d974:	mov	r1, #32
   3d978:	mov	r2, r6
   3d97c:	bl	14ef0 <memset@plt>
   3d980:	ldr	r0, [r4, #20]
   3d984:	ldr	r2, [r4, #44]	; 0x2c
   3d988:	mov	r1, #0
   3d98c:	add	r0, r0, r6
   3d990:	str	r0, [r4, #20]
   3d994:	mov	r0, r4
   3d998:	blx	r2
   3d99c:	ldr	r1, [r4, #16]
   3d9a0:	ldr	r0, [r4, #20]
   3d9a4:	sub	r5, r5, r6
   3d9a8:	sub	r6, r1, r0
   3d9ac:	cmp	r5, r6
   3d9b0:	bhi	3d974 <flatcc_json_printer_utype_vector_field@@Base+0x2e4>
   3d9b4:	mov	r1, #32
   3d9b8:	mov	r2, r5
   3d9bc:	bl	14ef0 <memset@plt>
   3d9c0:	ldr	r0, [r4, #20]
   3d9c4:	add	r0, r0, r5
   3d9c8:	str	r0, [r4, #20]
   3d9cc:	ldrb	r1, [r7]
   3d9d0:	sub	r8, r8, #1
   3d9d4:	cmp	r1, #100	; 0x64
   3d9d8:	bcs	3da10 <flatcc_json_printer_utype_vector_field@@Base+0x380>
   3d9dc:	b	3da54 <flatcc_json_printer_utype_vector_field@@Base+0x3c4>
   3d9e0:	ldr	r1, [r4, #16]
   3d9e4:	cmp	r0, r1
   3d9e8:	bcc	3da00 <flatcc_json_printer_utype_vector_field@@Base+0x370>
   3d9ec:	ldr	r2, [r4, #44]	; 0x2c
   3d9f0:	mov	r0, r4
   3d9f4:	mov	r1, #0
   3d9f8:	blx	r2
   3d9fc:	ldr	r0, [r4, #20]
   3da00:	ldrb	r1, [r7]
   3da04:	sub	r8, r8, #1
   3da08:	cmp	r1, #100	; 0x64
   3da0c:	bcc	3da54 <flatcc_json_printer_utype_vector_field@@Base+0x3c4>
   3da10:	movw	r2, #34079	; 0x851f
   3da14:	strb	sl, [r0, #3]
   3da18:	movt	r2, #20971	; 0x51eb
   3da1c:	umull	r2, r3, r1, r2
   3da20:	mov	r2, #48	; 0x30
   3da24:	orr	r2, r2, r3, lsr #5
   3da28:	strb	r2, [r0]
   3da2c:	lsr	r2, r3, #5
   3da30:	mov	r3, #100	; 0x64
   3da34:	mls	r1, r2, r3, r1
   3da38:	movw	r2, #48496	; 0xbd70
   3da3c:	movt	r2, #4
   3da40:	add	r1, r2, r1, lsl #1
   3da44:	ldrh	r1, [r1]
   3da48:	strh	r1, [r0, #1]
   3da4c:	mov	r0, #3
   3da50:	b	3daa4 <flatcc_json_printer_utype_vector_field@@Base+0x414>
   3da54:	cmp	r1, #10
   3da58:	bcc	3da94 <flatcc_json_printer_utype_vector_field@@Base+0x404>
   3da5c:	movw	r2, #34079	; 0x851f
   3da60:	strb	sl, [r0, #2]
   3da64:	movt	r2, #20971	; 0x51eb
   3da68:	umull	r2, r3, r1, r2
   3da6c:	lsr	r2, r3, #5
   3da70:	mov	r3, #100	; 0x64
   3da74:	mls	r1, r2, r3, r1
   3da78:	movw	r2, #48496	; 0xbd70
   3da7c:	movt	r2, #4
   3da80:	add	r1, r2, r1, lsl #1
   3da84:	ldrh	r1, [r1]
   3da88:	strh	r1, [r0]
   3da8c:	mov	r0, #2
   3da90:	b	3daa4 <flatcc_json_printer_utype_vector_field@@Base+0x414>
   3da94:	add	r1, r1, #48	; 0x30
   3da98:	strb	sl, [r0, #1]
   3da9c:	strb	r1, [r0]
   3daa0:	mov	r0, #1
   3daa4:	ldr	r1, [r4, #20]
   3daa8:	add	r7, r7, #1
   3daac:	cmp	r8, #0
   3dab0:	add	r0, r1, r0
   3dab4:	str	r0, [r4, #20]
   3dab8:	bne	3d8fc <flatcc_json_printer_utype_vector_field@@Base+0x26c>
   3dabc:	ldrb	r1, [r4, #25]
   3dac0:	ldr	r0, [r4, #20]
   3dac4:	cmp	r1, #0
   3dac8:	beq	3db88 <flatcc_json_printer_utype_vector_field@@Base+0x4f8>
   3dacc:	add	r1, r0, #1
   3dad0:	str	r1, [r4, #20]
   3dad4:	mov	r1, #10
   3dad8:	strb	r1, [r0]
   3dadc:	ldr	r0, [r4, #32]
   3dae0:	sub	r2, r0, #1
   3dae4:	str	r2, [r4, #32]
   3dae8:	ldrb	r3, [r4, #25]
   3daec:	ldr	r0, [r4, #20]
   3daf0:	ldr	r1, [r4, #16]
   3daf4:	mla	r7, r2, r3, r0
   3daf8:	mul	r5, r2, r3
   3dafc:	cmp	r7, r1
   3db00:	bls	3db70 <flatcc_json_printer_utype_vector_field@@Base+0x4e0>
   3db04:	cmp	r0, r1
   3db08:	bcc	3db24 <flatcc_json_printer_utype_vector_field@@Base+0x494>
   3db0c:	ldr	r2, [r4, #44]	; 0x2c
   3db10:	mov	r0, r4
   3db14:	mov	r1, #0
   3db18:	blx	r2
   3db1c:	ldr	r1, [r4, #16]
   3db20:	ldr	r0, [r4, #20]
   3db24:	sub	r6, r1, r0
   3db28:	cmp	r6, r5
   3db2c:	bcs	3db70 <flatcc_json_printer_utype_vector_field@@Base+0x4e0>
   3db30:	mov	r1, #32
   3db34:	mov	r2, r6
   3db38:	bl	14ef0 <memset@plt>
   3db3c:	ldr	r0, [r4, #20]
   3db40:	ldr	r2, [r4, #44]	; 0x2c
   3db44:	mov	r1, #0
   3db48:	add	r0, r0, r6
   3db4c:	str	r0, [r4, #20]
   3db50:	mov	r0, r4
   3db54:	blx	r2
   3db58:	ldr	r1, [r4, #16]
   3db5c:	ldr	r0, [r4, #20]
   3db60:	sub	r5, r5, r6
   3db64:	sub	r6, r1, r0
   3db68:	cmp	r5, r6
   3db6c:	bhi	3db30 <flatcc_json_printer_utype_vector_field@@Base+0x4a0>
   3db70:	mov	r1, #32
   3db74:	mov	r2, r5
   3db78:	bl	14ef0 <memset@plt>
   3db7c:	ldr	r0, [r4, #20]
   3db80:	add	r0, r0, r5
   3db84:	str	r0, [r4, #20]
   3db88:	add	r1, r0, #1
   3db8c:	str	r1, [r4, #20]
   3db90:	mov	r1, #93	; 0x5d
   3db94:	strb	r1, [r0]
   3db98:	sub	sp, fp, #28
   3db9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003dba0 <flatcc_json_printer_uint8_vector_field@@Base>:
   3dba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dba4:	add	fp, sp, #28
   3dba8:	sub	sp, sp, #4
   3dbac:	mov	r4, r0
   3dbb0:	mov	r0, #4
   3dbb4:	add	r0, r0, r2, lsl #1
   3dbb8:	ldr	r2, [r1, #8]
   3dbbc:	cmp	r0, r2
   3dbc0:	bge	3dbe0 <flatcc_json_printer_uint8_vector_field@@Base+0x40>
   3dbc4:	ldr	r2, [r1, #4]
   3dbc8:	add	r0, r2, r0
   3dbcc:	ldrh	r0, [r0]
   3dbd0:	cmp	r0, #0
   3dbd4:	ldrne	r2, [r1]
   3dbd8:	addsne	r9, r2, r0
   3dbdc:	bne	3dbe8 <flatcc_json_printer_uint8_vector_field@@Base+0x48>
   3dbe0:	sub	sp, fp, #28
   3dbe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dbe8:	ldr	r0, [r1, #16]
   3dbec:	ldr	r2, [fp, #8]
   3dbf0:	add	r7, r0, #1
   3dbf4:	cmp	r0, #0
   3dbf8:	str	r7, [r1, #16]
   3dbfc:	ldrne	r0, [r4, #20]
   3dc00:	addne	r1, r0, #1
   3dc04:	strne	r1, [r4, #20]
   3dc08:	movne	r1, #44	; 0x2c
   3dc0c:	strbne	r1, [r0]
   3dc10:	mov	r1, r3
   3dc14:	ldr	r0, [r9]
   3dc18:	ldr	r8, [r9, r0]!
   3dc1c:	mov	r0, r4
   3dc20:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3dc24:	ldr	r1, [r4, #32]
   3dc28:	ldr	r0, [r4, #20]
   3dc2c:	cmp	r8, #0
   3dc30:	add	r1, r1, #1
   3dc34:	str	r1, [r4, #32]
   3dc38:	add	r1, r0, #1
   3dc3c:	str	r1, [r4, #20]
   3dc40:	mov	r1, #91	; 0x5b
   3dc44:	strb	r1, [r0]
   3dc48:	beq	3dfcc <flatcc_json_printer_uint8_vector_field@@Base+0x42c>
   3dc4c:	ldrb	r1, [r4, #25]
   3dc50:	ldr	r0, [r4, #20]
   3dc54:	cmp	r1, #0
   3dc58:	beq	3dd24 <flatcc_json_printer_uint8_vector_field@@Base+0x184>
   3dc5c:	add	r1, r0, #1
   3dc60:	str	r1, [r4, #20]
   3dc64:	mov	r1, #10
   3dc68:	strb	r1, [r0]
   3dc6c:	ldr	r0, [r4, #20]
   3dc70:	ldrb	r2, [r4, #25]
   3dc74:	ldr	r3, [r4, #32]
   3dc78:	ldr	r1, [r4, #16]
   3dc7c:	mla	r7, r3, r2, r0
   3dc80:	mul	r5, r3, r2
   3dc84:	cmp	r7, r1
   3dc88:	bls	3dcf8 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   3dc8c:	cmp	r0, r1
   3dc90:	bcc	3dcac <flatcc_json_printer_uint8_vector_field@@Base+0x10c>
   3dc94:	ldr	r2, [r4, #44]	; 0x2c
   3dc98:	mov	r0, r4
   3dc9c:	mov	r1, #0
   3dca0:	blx	r2
   3dca4:	ldr	r1, [r4, #16]
   3dca8:	ldr	r0, [r4, #20]
   3dcac:	sub	r6, r1, r0
   3dcb0:	cmp	r6, r5
   3dcb4:	bcs	3dcf8 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   3dcb8:	mov	r1, #32
   3dcbc:	mov	r2, r6
   3dcc0:	bl	14ef0 <memset@plt>
   3dcc4:	ldr	r0, [r4, #20]
   3dcc8:	ldr	r2, [r4, #44]	; 0x2c
   3dccc:	mov	r1, #0
   3dcd0:	add	r0, r0, r6
   3dcd4:	str	r0, [r4, #20]
   3dcd8:	mov	r0, r4
   3dcdc:	blx	r2
   3dce0:	ldr	r1, [r4, #16]
   3dce4:	ldr	r0, [r4, #20]
   3dce8:	sub	r5, r5, r6
   3dcec:	sub	r6, r1, r0
   3dcf0:	cmp	r5, r6
   3dcf4:	bhi	3dcb8 <flatcc_json_printer_uint8_vector_field@@Base+0x118>
   3dcf8:	mov	r1, #32
   3dcfc:	mov	r2, r5
   3dd00:	bl	14ef0 <memset@plt>
   3dd04:	ldr	r0, [r4, #20]
   3dd08:	add	r0, r0, r5
   3dd0c:	str	r0, [r4, #20]
   3dd10:	ldrb	r1, [r9, #4]
   3dd14:	mov	r2, #0
   3dd18:	cmp	r1, #100	; 0x64
   3dd1c:	bcs	3dd54 <flatcc_json_printer_uint8_vector_field@@Base+0x1b4>
   3dd20:	b	3dd98 <flatcc_json_printer_uint8_vector_field@@Base+0x1f8>
   3dd24:	ldr	r1, [r4, #16]
   3dd28:	cmp	r0, r1
   3dd2c:	bcc	3dd44 <flatcc_json_printer_uint8_vector_field@@Base+0x1a4>
   3dd30:	ldr	r2, [r4, #44]	; 0x2c
   3dd34:	mov	r0, r4
   3dd38:	mov	r1, #0
   3dd3c:	blx	r2
   3dd40:	ldr	r0, [r4, #20]
   3dd44:	ldrb	r1, [r9, #4]
   3dd48:	mov	r2, #0
   3dd4c:	cmp	r1, #100	; 0x64
   3dd50:	bcc	3dd98 <flatcc_json_printer_uint8_vector_field@@Base+0x1f8>
   3dd54:	strb	r2, [r0, #3]
   3dd58:	movw	r2, #34079	; 0x851f
   3dd5c:	movt	r2, #20971	; 0x51eb
   3dd60:	umull	r2, r3, r1, r2
   3dd64:	mov	r2, #48	; 0x30
   3dd68:	orr	r2, r2, r3, lsr #5
   3dd6c:	strb	r2, [r0]
   3dd70:	lsr	r2, r3, #5
   3dd74:	mov	r3, #100	; 0x64
   3dd78:	mls	r1, r2, r3, r1
   3dd7c:	movw	r2, #48496	; 0xbd70
   3dd80:	movt	r2, #4
   3dd84:	add	r1, r2, r1, lsl #1
   3dd88:	ldrh	r1, [r1]
   3dd8c:	strh	r1, [r0, #1]
   3dd90:	mov	r0, #3
   3dd94:	b	3dde8 <flatcc_json_printer_uint8_vector_field@@Base+0x248>
   3dd98:	cmp	r1, #10
   3dd9c:	bcc	3ddd8 <flatcc_json_printer_uint8_vector_field@@Base+0x238>
   3dda0:	strb	r2, [r0, #2]
   3dda4:	movw	r2, #34079	; 0x851f
   3dda8:	movt	r2, #20971	; 0x51eb
   3ddac:	umull	r2, r3, r1, r2
   3ddb0:	lsr	r2, r3, #5
   3ddb4:	mov	r3, #100	; 0x64
   3ddb8:	mls	r1, r2, r3, r1
   3ddbc:	movw	r2, #48496	; 0xbd70
   3ddc0:	movt	r2, #4
   3ddc4:	add	r1, r2, r1, lsl #1
   3ddc8:	ldrh	r1, [r1]
   3ddcc:	strh	r1, [r0]
   3ddd0:	mov	r0, #2
   3ddd4:	b	3dde8 <flatcc_json_printer_uint8_vector_field@@Base+0x248>
   3ddd8:	add	r1, r1, #48	; 0x30
   3dddc:	strb	r2, [r0, #1]
   3dde0:	strb	r1, [r0]
   3dde4:	mov	r0, #1
   3dde8:	ldr	r1, [r4, #20]
   3ddec:	subs	r8, r8, #1
   3ddf0:	add	r0, r1, r0
   3ddf4:	str	r0, [r4, #20]
   3ddf8:	beq	3dfcc <flatcc_json_printer_uint8_vector_field@@Base+0x42c>
   3ddfc:	ldr	r0, [r4, #20]
   3de00:	add	r7, r9, #5
   3de04:	mov	r9, #44	; 0x2c
   3de08:	mov	sl, #0
   3de0c:	add	r1, r0, #1
   3de10:	str	r1, [r4, #20]
   3de14:	strb	r9, [r0]
   3de18:	ldrb	r1, [r4, #25]
   3de1c:	ldr	r0, [r4, #20]
   3de20:	cmp	r1, #0
   3de24:	beq	3def0 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
   3de28:	add	r1, r0, #1
   3de2c:	str	r1, [r4, #20]
   3de30:	mov	r1, #10
   3de34:	strb	r1, [r0]
   3de38:	ldr	r0, [r4, #20]
   3de3c:	ldrb	r2, [r4, #25]
   3de40:	ldr	r3, [r4, #32]
   3de44:	ldr	r1, [r4, #16]
   3de48:	mla	r6, r3, r2, r0
   3de4c:	mul	r5, r3, r2
   3de50:	cmp	r6, r1
   3de54:	bls	3dec4 <flatcc_json_printer_uint8_vector_field@@Base+0x324>
   3de58:	cmp	r0, r1
   3de5c:	bcc	3de78 <flatcc_json_printer_uint8_vector_field@@Base+0x2d8>
   3de60:	ldr	r2, [r4, #44]	; 0x2c
   3de64:	mov	r0, r4
   3de68:	mov	r1, #0
   3de6c:	blx	r2
   3de70:	ldr	r1, [r4, #16]
   3de74:	ldr	r0, [r4, #20]
   3de78:	sub	r6, r1, r0
   3de7c:	cmp	r6, r5
   3de80:	bcs	3dec4 <flatcc_json_printer_uint8_vector_field@@Base+0x324>
   3de84:	mov	r1, #32
   3de88:	mov	r2, r6
   3de8c:	bl	14ef0 <memset@plt>
   3de90:	ldr	r0, [r4, #20]
   3de94:	ldr	r2, [r4, #44]	; 0x2c
   3de98:	mov	r1, #0
   3de9c:	add	r0, r0, r6
   3dea0:	str	r0, [r4, #20]
   3dea4:	mov	r0, r4
   3dea8:	blx	r2
   3deac:	ldr	r1, [r4, #16]
   3deb0:	ldr	r0, [r4, #20]
   3deb4:	sub	r5, r5, r6
   3deb8:	sub	r6, r1, r0
   3debc:	cmp	r5, r6
   3dec0:	bhi	3de84 <flatcc_json_printer_uint8_vector_field@@Base+0x2e4>
   3dec4:	mov	r1, #32
   3dec8:	mov	r2, r5
   3decc:	bl	14ef0 <memset@plt>
   3ded0:	ldr	r0, [r4, #20]
   3ded4:	add	r0, r0, r5
   3ded8:	str	r0, [r4, #20]
   3dedc:	ldrb	r1, [r7]
   3dee0:	sub	r8, r8, #1
   3dee4:	cmp	r1, #100	; 0x64
   3dee8:	bcs	3df20 <flatcc_json_printer_uint8_vector_field@@Base+0x380>
   3deec:	b	3df64 <flatcc_json_printer_uint8_vector_field@@Base+0x3c4>
   3def0:	ldr	r1, [r4, #16]
   3def4:	cmp	r0, r1
   3def8:	bcc	3df10 <flatcc_json_printer_uint8_vector_field@@Base+0x370>
   3defc:	ldr	r2, [r4, #44]	; 0x2c
   3df00:	mov	r0, r4
   3df04:	mov	r1, #0
   3df08:	blx	r2
   3df0c:	ldr	r0, [r4, #20]
   3df10:	ldrb	r1, [r7]
   3df14:	sub	r8, r8, #1
   3df18:	cmp	r1, #100	; 0x64
   3df1c:	bcc	3df64 <flatcc_json_printer_uint8_vector_field@@Base+0x3c4>
   3df20:	movw	r2, #34079	; 0x851f
   3df24:	strb	sl, [r0, #3]
   3df28:	movt	r2, #20971	; 0x51eb
   3df2c:	umull	r2, r3, r1, r2
   3df30:	mov	r2, #48	; 0x30
   3df34:	orr	r2, r2, r3, lsr #5
   3df38:	strb	r2, [r0]
   3df3c:	lsr	r2, r3, #5
   3df40:	mov	r3, #100	; 0x64
   3df44:	mls	r1, r2, r3, r1
   3df48:	movw	r2, #48496	; 0xbd70
   3df4c:	movt	r2, #4
   3df50:	add	r1, r2, r1, lsl #1
   3df54:	ldrh	r1, [r1]
   3df58:	strh	r1, [r0, #1]
   3df5c:	mov	r0, #3
   3df60:	b	3dfb4 <flatcc_json_printer_uint8_vector_field@@Base+0x414>
   3df64:	cmp	r1, #10
   3df68:	bcc	3dfa4 <flatcc_json_printer_uint8_vector_field@@Base+0x404>
   3df6c:	movw	r2, #34079	; 0x851f
   3df70:	strb	sl, [r0, #2]
   3df74:	movt	r2, #20971	; 0x51eb
   3df78:	umull	r2, r3, r1, r2
   3df7c:	lsr	r2, r3, #5
   3df80:	mov	r3, #100	; 0x64
   3df84:	mls	r1, r2, r3, r1
   3df88:	movw	r2, #48496	; 0xbd70
   3df8c:	movt	r2, #4
   3df90:	add	r1, r2, r1, lsl #1
   3df94:	ldrh	r1, [r1]
   3df98:	strh	r1, [r0]
   3df9c:	mov	r0, #2
   3dfa0:	b	3dfb4 <flatcc_json_printer_uint8_vector_field@@Base+0x414>
   3dfa4:	add	r1, r1, #48	; 0x30
   3dfa8:	strb	sl, [r0, #1]
   3dfac:	strb	r1, [r0]
   3dfb0:	mov	r0, #1
   3dfb4:	ldr	r1, [r4, #20]
   3dfb8:	add	r7, r7, #1
   3dfbc:	cmp	r8, #0
   3dfc0:	add	r0, r1, r0
   3dfc4:	str	r0, [r4, #20]
   3dfc8:	bne	3de0c <flatcc_json_printer_uint8_vector_field@@Base+0x26c>
   3dfcc:	ldrb	r1, [r4, #25]
   3dfd0:	ldr	r0, [r4, #20]
   3dfd4:	cmp	r1, #0
   3dfd8:	beq	3e098 <flatcc_json_printer_uint8_vector_field@@Base+0x4f8>
   3dfdc:	add	r1, r0, #1
   3dfe0:	str	r1, [r4, #20]
   3dfe4:	mov	r1, #10
   3dfe8:	strb	r1, [r0]
   3dfec:	ldr	r0, [r4, #32]
   3dff0:	sub	r2, r0, #1
   3dff4:	str	r2, [r4, #32]
   3dff8:	ldrb	r3, [r4, #25]
   3dffc:	ldr	r0, [r4, #20]
   3e000:	ldr	r1, [r4, #16]
   3e004:	mla	r7, r2, r3, r0
   3e008:	mul	r5, r2, r3
   3e00c:	cmp	r7, r1
   3e010:	bls	3e080 <flatcc_json_printer_uint8_vector_field@@Base+0x4e0>
   3e014:	cmp	r0, r1
   3e018:	bcc	3e034 <flatcc_json_printer_uint8_vector_field@@Base+0x494>
   3e01c:	ldr	r2, [r4, #44]	; 0x2c
   3e020:	mov	r0, r4
   3e024:	mov	r1, #0
   3e028:	blx	r2
   3e02c:	ldr	r1, [r4, #16]
   3e030:	ldr	r0, [r4, #20]
   3e034:	sub	r6, r1, r0
   3e038:	cmp	r6, r5
   3e03c:	bcs	3e080 <flatcc_json_printer_uint8_vector_field@@Base+0x4e0>
   3e040:	mov	r1, #32
   3e044:	mov	r2, r6
   3e048:	bl	14ef0 <memset@plt>
   3e04c:	ldr	r0, [r4, #20]
   3e050:	ldr	r2, [r4, #44]	; 0x2c
   3e054:	mov	r1, #0
   3e058:	add	r0, r0, r6
   3e05c:	str	r0, [r4, #20]
   3e060:	mov	r0, r4
   3e064:	blx	r2
   3e068:	ldr	r1, [r4, #16]
   3e06c:	ldr	r0, [r4, #20]
   3e070:	sub	r5, r5, r6
   3e074:	sub	r6, r1, r0
   3e078:	cmp	r5, r6
   3e07c:	bhi	3e040 <flatcc_json_printer_uint8_vector_field@@Base+0x4a0>
   3e080:	mov	r1, #32
   3e084:	mov	r2, r5
   3e088:	bl	14ef0 <memset@plt>
   3e08c:	ldr	r0, [r4, #20]
   3e090:	add	r0, r0, r5
   3e094:	str	r0, [r4, #20]
   3e098:	add	r1, r0, #1
   3e09c:	str	r1, [r4, #20]
   3e0a0:	mov	r1, #93	; 0x5d
   3e0a4:	strb	r1, [r0]
   3e0a8:	sub	sp, fp, #28
   3e0ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e0b0 <flatcc_json_printer_uint16_vector_field@@Base>:
   3e0b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e0b4:	add	fp, sp, #28
   3e0b8:	sub	sp, sp, #4
   3e0bc:	mov	r4, r0
   3e0c0:	mov	r0, #4
   3e0c4:	add	r0, r0, r2, lsl #1
   3e0c8:	ldr	r2, [r1, #8]
   3e0cc:	cmp	r0, r2
   3e0d0:	bge	3e0f0 <flatcc_json_printer_uint16_vector_field@@Base+0x40>
   3e0d4:	ldr	r2, [r1, #4]
   3e0d8:	add	r0, r2, r0
   3e0dc:	ldrh	r0, [r0]
   3e0e0:	cmp	r0, #0
   3e0e4:	ldrne	r2, [r1]
   3e0e8:	addsne	r8, r2, r0
   3e0ec:	bne	3e0f8 <flatcc_json_printer_uint16_vector_field@@Base+0x48>
   3e0f0:	sub	sp, fp, #28
   3e0f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e0f8:	ldr	r0, [r1, #16]
   3e0fc:	ldr	r2, [fp, #8]
   3e100:	add	r7, r0, #1
   3e104:	cmp	r0, #0
   3e108:	str	r7, [r1, #16]
   3e10c:	ldrne	r0, [r4, #20]
   3e110:	addne	r1, r0, #1
   3e114:	strne	r1, [r4, #20]
   3e118:	movne	r1, #44	; 0x2c
   3e11c:	strbne	r1, [r0]
   3e120:	mov	r1, r3
   3e124:	ldr	r0, [r8]
   3e128:	ldr	r7, [r8, r0]!
   3e12c:	mov	r0, r4
   3e130:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3e134:	ldr	r1, [r4, #32]
   3e138:	ldr	r0, [r4, #20]
   3e13c:	cmp	r7, #0
   3e140:	add	r1, r1, #1
   3e144:	str	r1, [r4, #32]
   3e148:	add	r1, r0, #1
   3e14c:	str	r1, [r4, #20]
   3e150:	mov	r1, #91	; 0x5b
   3e154:	strb	r1, [r0]
   3e158:	beq	3e380 <flatcc_json_printer_uint16_vector_field@@Base+0x2d0>
   3e15c:	ldrb	r0, [r4, #25]
   3e160:	ldr	r1, [r4, #20]
   3e164:	cmp	r0, #0
   3e168:	beq	3e224 <flatcc_json_printer_uint16_vector_field@@Base+0x174>
   3e16c:	add	r0, r1, #1
   3e170:	str	r0, [r4, #20]
   3e174:	mov	r0, #10
   3e178:	strb	r0, [r1]
   3e17c:	ldr	r0, [r4, #20]
   3e180:	ldrb	r2, [r4, #25]
   3e184:	ldr	r3, [r4, #32]
   3e188:	ldr	r1, [r4, #16]
   3e18c:	mla	r6, r3, r2, r0
   3e190:	mul	r5, r3, r2
   3e194:	cmp	r6, r1
   3e198:	bls	3e208 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   3e19c:	cmp	r0, r1
   3e1a0:	bcc	3e1bc <flatcc_json_printer_uint16_vector_field@@Base+0x10c>
   3e1a4:	ldr	r2, [r4, #44]	; 0x2c
   3e1a8:	mov	r0, r4
   3e1ac:	mov	r1, #0
   3e1b0:	blx	r2
   3e1b4:	ldr	r1, [r4, #16]
   3e1b8:	ldr	r0, [r4, #20]
   3e1bc:	sub	r6, r1, r0
   3e1c0:	cmp	r6, r5
   3e1c4:	bcs	3e208 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   3e1c8:	mov	r1, #32
   3e1cc:	mov	r2, r6
   3e1d0:	bl	14ef0 <memset@plt>
   3e1d4:	ldr	r0, [r4, #20]
   3e1d8:	ldr	r2, [r4, #44]	; 0x2c
   3e1dc:	mov	r1, #0
   3e1e0:	add	r0, r0, r6
   3e1e4:	str	r0, [r4, #20]
   3e1e8:	mov	r0, r4
   3e1ec:	blx	r2
   3e1f0:	ldr	r1, [r4, #16]
   3e1f4:	ldr	r0, [r4, #20]
   3e1f8:	sub	r5, r5, r6
   3e1fc:	sub	r6, r1, r0
   3e200:	cmp	r5, r6
   3e204:	bhi	3e1c8 <flatcc_json_printer_uint16_vector_field@@Base+0x118>
   3e208:	mov	r1, #32
   3e20c:	mov	r2, r5
   3e210:	bl	14ef0 <memset@plt>
   3e214:	ldr	r0, [r4, #20]
   3e218:	add	r1, r0, r5
   3e21c:	str	r1, [r4, #20]
   3e220:	b	3e244 <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   3e224:	ldr	r0, [r4, #16]
   3e228:	cmp	r1, r0
   3e22c:	bcc	3e244 <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   3e230:	ldr	r2, [r4, #44]	; 0x2c
   3e234:	mov	r0, r4
   3e238:	mov	r1, #0
   3e23c:	blx	r2
   3e240:	ldr	r1, [r4, #20]
   3e244:	ldrh	r0, [r8, #4]
   3e248:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3e24c:	ldr	r1, [r4, #20]
   3e250:	subs	r9, r7, #1
   3e254:	add	r0, r1, r0
   3e258:	str	r0, [r4, #20]
   3e25c:	beq	3e380 <flatcc_json_printer_uint16_vector_field@@Base+0x2d0>
   3e260:	ldr	r0, [r4, #20]
   3e264:	add	r7, r8, #6
   3e268:	mov	r8, #44	; 0x2c
   3e26c:	mov	sl, #10
   3e270:	add	r1, r0, #1
   3e274:	sub	r9, r9, #1
   3e278:	str	r1, [r4, #20]
   3e27c:	strb	r8, [r0]
   3e280:	ldrb	r0, [r4, #25]
   3e284:	ldr	r1, [r4, #20]
   3e288:	cmp	r0, #0
   3e28c:	beq	3e344 <flatcc_json_printer_uint16_vector_field@@Base+0x294>
   3e290:	add	r0, r1, #1
   3e294:	str	r0, [r4, #20]
   3e298:	strb	sl, [r1]
   3e29c:	ldr	r0, [r4, #20]
   3e2a0:	ldrb	r2, [r4, #25]
   3e2a4:	ldr	r3, [r4, #32]
   3e2a8:	ldr	r1, [r4, #16]
   3e2ac:	mla	r6, r3, r2, r0
   3e2b0:	mul	r5, r3, r2
   3e2b4:	cmp	r6, r1
   3e2b8:	bls	3e328 <flatcc_json_printer_uint16_vector_field@@Base+0x278>
   3e2bc:	cmp	r0, r1
   3e2c0:	bcc	3e2dc <flatcc_json_printer_uint16_vector_field@@Base+0x22c>
   3e2c4:	ldr	r2, [r4, #44]	; 0x2c
   3e2c8:	mov	r0, r4
   3e2cc:	mov	r1, #0
   3e2d0:	blx	r2
   3e2d4:	ldr	r1, [r4, #16]
   3e2d8:	ldr	r0, [r4, #20]
   3e2dc:	sub	r6, r1, r0
   3e2e0:	cmp	r6, r5
   3e2e4:	bcs	3e328 <flatcc_json_printer_uint16_vector_field@@Base+0x278>
   3e2e8:	mov	r1, #32
   3e2ec:	mov	r2, r6
   3e2f0:	bl	14ef0 <memset@plt>
   3e2f4:	ldr	r0, [r4, #20]
   3e2f8:	ldr	r2, [r4, #44]	; 0x2c
   3e2fc:	mov	r1, #0
   3e300:	add	r0, r0, r6
   3e304:	str	r0, [r4, #20]
   3e308:	mov	r0, r4
   3e30c:	blx	r2
   3e310:	ldr	r1, [r4, #16]
   3e314:	ldr	r0, [r4, #20]
   3e318:	sub	r5, r5, r6
   3e31c:	sub	r6, r1, r0
   3e320:	cmp	r5, r6
   3e324:	bhi	3e2e8 <flatcc_json_printer_uint16_vector_field@@Base+0x238>
   3e328:	mov	r1, #32
   3e32c:	mov	r2, r5
   3e330:	bl	14ef0 <memset@plt>
   3e334:	ldr	r0, [r4, #20]
   3e338:	add	r1, r0, r5
   3e33c:	str	r1, [r4, #20]
   3e340:	b	3e364 <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   3e344:	ldr	r0, [r4, #16]
   3e348:	cmp	r1, r0
   3e34c:	bcc	3e364 <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   3e350:	ldr	r2, [r4, #44]	; 0x2c
   3e354:	mov	r0, r4
   3e358:	mov	r1, #0
   3e35c:	blx	r2
   3e360:	ldr	r1, [r4, #20]
   3e364:	ldrh	r0, [r7], #2
   3e368:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3e36c:	ldr	r1, [r4, #20]
   3e370:	cmp	r9, #0
   3e374:	add	r0, r1, r0
   3e378:	str	r0, [r4, #20]
   3e37c:	bne	3e270 <flatcc_json_printer_uint16_vector_field@@Base+0x1c0>
   3e380:	ldrb	r1, [r4, #25]
   3e384:	ldr	r0, [r4, #20]
   3e388:	cmp	r1, #0
   3e38c:	beq	3e44c <flatcc_json_printer_uint16_vector_field@@Base+0x39c>
   3e390:	add	r1, r0, #1
   3e394:	str	r1, [r4, #20]
   3e398:	mov	r1, #10
   3e39c:	strb	r1, [r0]
   3e3a0:	ldr	r0, [r4, #32]
   3e3a4:	sub	r2, r0, #1
   3e3a8:	str	r2, [r4, #32]
   3e3ac:	ldrb	r3, [r4, #25]
   3e3b0:	ldr	r0, [r4, #20]
   3e3b4:	ldr	r1, [r4, #16]
   3e3b8:	mla	r7, r2, r3, r0
   3e3bc:	mul	r5, r2, r3
   3e3c0:	cmp	r7, r1
   3e3c4:	bls	3e434 <flatcc_json_printer_uint16_vector_field@@Base+0x384>
   3e3c8:	cmp	r0, r1
   3e3cc:	bcc	3e3e8 <flatcc_json_printer_uint16_vector_field@@Base+0x338>
   3e3d0:	ldr	r2, [r4, #44]	; 0x2c
   3e3d4:	mov	r0, r4
   3e3d8:	mov	r1, #0
   3e3dc:	blx	r2
   3e3e0:	ldr	r1, [r4, #16]
   3e3e4:	ldr	r0, [r4, #20]
   3e3e8:	sub	r6, r1, r0
   3e3ec:	cmp	r6, r5
   3e3f0:	bcs	3e434 <flatcc_json_printer_uint16_vector_field@@Base+0x384>
   3e3f4:	mov	r1, #32
   3e3f8:	mov	r2, r6
   3e3fc:	bl	14ef0 <memset@plt>
   3e400:	ldr	r0, [r4, #20]
   3e404:	ldr	r2, [r4, #44]	; 0x2c
   3e408:	mov	r1, #0
   3e40c:	add	r0, r0, r6
   3e410:	str	r0, [r4, #20]
   3e414:	mov	r0, r4
   3e418:	blx	r2
   3e41c:	ldr	r1, [r4, #16]
   3e420:	ldr	r0, [r4, #20]
   3e424:	sub	r5, r5, r6
   3e428:	sub	r6, r1, r0
   3e42c:	cmp	r5, r6
   3e430:	bhi	3e3f4 <flatcc_json_printer_uint16_vector_field@@Base+0x344>
   3e434:	mov	r1, #32
   3e438:	mov	r2, r5
   3e43c:	bl	14ef0 <memset@plt>
   3e440:	ldr	r0, [r4, #20]
   3e444:	add	r0, r0, r5
   3e448:	str	r0, [r4, #20]
   3e44c:	add	r1, r0, #1
   3e450:	str	r1, [r4, #20]
   3e454:	mov	r1, #93	; 0x5d
   3e458:	strb	r1, [r0]
   3e45c:	sub	sp, fp, #28
   3e460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e464 <flatcc_json_printer_uint32_vector_field@@Base>:
   3e464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e468:	add	fp, sp, #28
   3e46c:	sub	sp, sp, #4
   3e470:	mov	r4, r0
   3e474:	mov	r0, #4
   3e478:	add	r0, r0, r2, lsl #1
   3e47c:	ldr	r2, [r1, #8]
   3e480:	cmp	r0, r2
   3e484:	bge	3e4a4 <flatcc_json_printer_uint32_vector_field@@Base+0x40>
   3e488:	ldr	r2, [r1, #4]
   3e48c:	add	r0, r2, r0
   3e490:	ldrh	r0, [r0]
   3e494:	cmp	r0, #0
   3e498:	ldrne	r2, [r1]
   3e49c:	addsne	r8, r2, r0
   3e4a0:	bne	3e4ac <flatcc_json_printer_uint32_vector_field@@Base+0x48>
   3e4a4:	sub	sp, fp, #28
   3e4a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e4ac:	ldr	r0, [r1, #16]
   3e4b0:	ldr	r2, [fp, #8]
   3e4b4:	add	r7, r0, #1
   3e4b8:	cmp	r0, #0
   3e4bc:	str	r7, [r1, #16]
   3e4c0:	ldrne	r0, [r4, #20]
   3e4c4:	addne	r1, r0, #1
   3e4c8:	strne	r1, [r4, #20]
   3e4cc:	movne	r1, #44	; 0x2c
   3e4d0:	strbne	r1, [r0]
   3e4d4:	mov	r1, r3
   3e4d8:	ldr	r0, [r8]
   3e4dc:	ldr	r7, [r8, r0]!
   3e4e0:	mov	r0, r4
   3e4e4:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3e4e8:	ldr	r1, [r4, #32]
   3e4ec:	ldr	r0, [r4, #20]
   3e4f0:	cmp	r7, #0
   3e4f4:	add	r1, r1, #1
   3e4f8:	str	r1, [r4, #32]
   3e4fc:	add	r1, r0, #1
   3e500:	str	r1, [r4, #20]
   3e504:	mov	r1, #91	; 0x5b
   3e508:	strb	r1, [r0]
   3e50c:	beq	3e734 <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
   3e510:	ldrb	r0, [r4, #25]
   3e514:	ldr	r1, [r4, #20]
   3e518:	cmp	r0, #0
   3e51c:	beq	3e5d8 <flatcc_json_printer_uint32_vector_field@@Base+0x174>
   3e520:	add	r0, r1, #1
   3e524:	str	r0, [r4, #20]
   3e528:	mov	r0, #10
   3e52c:	strb	r0, [r1]
   3e530:	ldr	r0, [r4, #20]
   3e534:	ldrb	r2, [r4, #25]
   3e538:	ldr	r3, [r4, #32]
   3e53c:	ldr	r1, [r4, #16]
   3e540:	mla	r6, r3, r2, r0
   3e544:	mul	r5, r3, r2
   3e548:	cmp	r6, r1
   3e54c:	bls	3e5bc <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   3e550:	cmp	r0, r1
   3e554:	bcc	3e570 <flatcc_json_printer_uint32_vector_field@@Base+0x10c>
   3e558:	ldr	r2, [r4, #44]	; 0x2c
   3e55c:	mov	r0, r4
   3e560:	mov	r1, #0
   3e564:	blx	r2
   3e568:	ldr	r1, [r4, #16]
   3e56c:	ldr	r0, [r4, #20]
   3e570:	sub	r6, r1, r0
   3e574:	cmp	r6, r5
   3e578:	bcs	3e5bc <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   3e57c:	mov	r1, #32
   3e580:	mov	r2, r6
   3e584:	bl	14ef0 <memset@plt>
   3e588:	ldr	r0, [r4, #20]
   3e58c:	ldr	r2, [r4, #44]	; 0x2c
   3e590:	mov	r1, #0
   3e594:	add	r0, r0, r6
   3e598:	str	r0, [r4, #20]
   3e59c:	mov	r0, r4
   3e5a0:	blx	r2
   3e5a4:	ldr	r1, [r4, #16]
   3e5a8:	ldr	r0, [r4, #20]
   3e5ac:	sub	r5, r5, r6
   3e5b0:	sub	r6, r1, r0
   3e5b4:	cmp	r5, r6
   3e5b8:	bhi	3e57c <flatcc_json_printer_uint32_vector_field@@Base+0x118>
   3e5bc:	mov	r1, #32
   3e5c0:	mov	r2, r5
   3e5c4:	bl	14ef0 <memset@plt>
   3e5c8:	ldr	r0, [r4, #20]
   3e5cc:	add	r1, r0, r5
   3e5d0:	str	r1, [r4, #20]
   3e5d4:	b	3e5f8 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   3e5d8:	ldr	r0, [r4, #16]
   3e5dc:	cmp	r1, r0
   3e5e0:	bcc	3e5f8 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   3e5e4:	ldr	r2, [r4, #44]	; 0x2c
   3e5e8:	mov	r0, r4
   3e5ec:	mov	r1, #0
   3e5f0:	blx	r2
   3e5f4:	ldr	r1, [r4, #20]
   3e5f8:	ldr	r0, [r8, #4]
   3e5fc:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3e600:	ldr	r1, [r4, #20]
   3e604:	subs	r9, r7, #1
   3e608:	add	r0, r1, r0
   3e60c:	str	r0, [r4, #20]
   3e610:	beq	3e734 <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
   3e614:	ldr	r0, [r4, #20]
   3e618:	add	r7, r8, #8
   3e61c:	mov	r8, #44	; 0x2c
   3e620:	mov	sl, #10
   3e624:	add	r1, r0, #1
   3e628:	sub	r9, r9, #1
   3e62c:	str	r1, [r4, #20]
   3e630:	strb	r8, [r0]
   3e634:	ldrb	r0, [r4, #25]
   3e638:	ldr	r1, [r4, #20]
   3e63c:	cmp	r0, #0
   3e640:	beq	3e6f8 <flatcc_json_printer_uint32_vector_field@@Base+0x294>
   3e644:	add	r0, r1, #1
   3e648:	str	r0, [r4, #20]
   3e64c:	strb	sl, [r1]
   3e650:	ldr	r0, [r4, #20]
   3e654:	ldrb	r2, [r4, #25]
   3e658:	ldr	r3, [r4, #32]
   3e65c:	ldr	r1, [r4, #16]
   3e660:	mla	r6, r3, r2, r0
   3e664:	mul	r5, r3, r2
   3e668:	cmp	r6, r1
   3e66c:	bls	3e6dc <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   3e670:	cmp	r0, r1
   3e674:	bcc	3e690 <flatcc_json_printer_uint32_vector_field@@Base+0x22c>
   3e678:	ldr	r2, [r4, #44]	; 0x2c
   3e67c:	mov	r0, r4
   3e680:	mov	r1, #0
   3e684:	blx	r2
   3e688:	ldr	r1, [r4, #16]
   3e68c:	ldr	r0, [r4, #20]
   3e690:	sub	r6, r1, r0
   3e694:	cmp	r6, r5
   3e698:	bcs	3e6dc <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   3e69c:	mov	r1, #32
   3e6a0:	mov	r2, r6
   3e6a4:	bl	14ef0 <memset@plt>
   3e6a8:	ldr	r0, [r4, #20]
   3e6ac:	ldr	r2, [r4, #44]	; 0x2c
   3e6b0:	mov	r1, #0
   3e6b4:	add	r0, r0, r6
   3e6b8:	str	r0, [r4, #20]
   3e6bc:	mov	r0, r4
   3e6c0:	blx	r2
   3e6c4:	ldr	r1, [r4, #16]
   3e6c8:	ldr	r0, [r4, #20]
   3e6cc:	sub	r5, r5, r6
   3e6d0:	sub	r6, r1, r0
   3e6d4:	cmp	r5, r6
   3e6d8:	bhi	3e69c <flatcc_json_printer_uint32_vector_field@@Base+0x238>
   3e6dc:	mov	r1, #32
   3e6e0:	mov	r2, r5
   3e6e4:	bl	14ef0 <memset@plt>
   3e6e8:	ldr	r0, [r4, #20]
   3e6ec:	add	r1, r0, r5
   3e6f0:	str	r1, [r4, #20]
   3e6f4:	b	3e718 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   3e6f8:	ldr	r0, [r4, #16]
   3e6fc:	cmp	r1, r0
   3e700:	bcc	3e718 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   3e704:	ldr	r2, [r4, #44]	; 0x2c
   3e708:	mov	r0, r4
   3e70c:	mov	r1, #0
   3e710:	blx	r2
   3e714:	ldr	r1, [r4, #20]
   3e718:	ldr	r0, [r7], #4
   3e71c:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3e720:	ldr	r1, [r4, #20]
   3e724:	cmp	r9, #0
   3e728:	add	r0, r1, r0
   3e72c:	str	r0, [r4, #20]
   3e730:	bne	3e624 <flatcc_json_printer_uint32_vector_field@@Base+0x1c0>
   3e734:	ldrb	r1, [r4, #25]
   3e738:	ldr	r0, [r4, #20]
   3e73c:	cmp	r1, #0
   3e740:	beq	3e800 <flatcc_json_printer_uint32_vector_field@@Base+0x39c>
   3e744:	add	r1, r0, #1
   3e748:	str	r1, [r4, #20]
   3e74c:	mov	r1, #10
   3e750:	strb	r1, [r0]
   3e754:	ldr	r0, [r4, #32]
   3e758:	sub	r2, r0, #1
   3e75c:	str	r2, [r4, #32]
   3e760:	ldrb	r3, [r4, #25]
   3e764:	ldr	r0, [r4, #20]
   3e768:	ldr	r1, [r4, #16]
   3e76c:	mla	r7, r2, r3, r0
   3e770:	mul	r5, r2, r3
   3e774:	cmp	r7, r1
   3e778:	bls	3e7e8 <flatcc_json_printer_uint32_vector_field@@Base+0x384>
   3e77c:	cmp	r0, r1
   3e780:	bcc	3e79c <flatcc_json_printer_uint32_vector_field@@Base+0x338>
   3e784:	ldr	r2, [r4, #44]	; 0x2c
   3e788:	mov	r0, r4
   3e78c:	mov	r1, #0
   3e790:	blx	r2
   3e794:	ldr	r1, [r4, #16]
   3e798:	ldr	r0, [r4, #20]
   3e79c:	sub	r6, r1, r0
   3e7a0:	cmp	r6, r5
   3e7a4:	bcs	3e7e8 <flatcc_json_printer_uint32_vector_field@@Base+0x384>
   3e7a8:	mov	r1, #32
   3e7ac:	mov	r2, r6
   3e7b0:	bl	14ef0 <memset@plt>
   3e7b4:	ldr	r0, [r4, #20]
   3e7b8:	ldr	r2, [r4, #44]	; 0x2c
   3e7bc:	mov	r1, #0
   3e7c0:	add	r0, r0, r6
   3e7c4:	str	r0, [r4, #20]
   3e7c8:	mov	r0, r4
   3e7cc:	blx	r2
   3e7d0:	ldr	r1, [r4, #16]
   3e7d4:	ldr	r0, [r4, #20]
   3e7d8:	sub	r5, r5, r6
   3e7dc:	sub	r6, r1, r0
   3e7e0:	cmp	r5, r6
   3e7e4:	bhi	3e7a8 <flatcc_json_printer_uint32_vector_field@@Base+0x344>
   3e7e8:	mov	r1, #32
   3e7ec:	mov	r2, r5
   3e7f0:	bl	14ef0 <memset@plt>
   3e7f4:	ldr	r0, [r4, #20]
   3e7f8:	add	r0, r0, r5
   3e7fc:	str	r0, [r4, #20]
   3e800:	add	r1, r0, #1
   3e804:	str	r1, [r4, #20]
   3e808:	mov	r1, #93	; 0x5d
   3e80c:	strb	r1, [r0]
   3e810:	sub	sp, fp, #28
   3e814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e818 <flatcc_json_printer_uint64_vector_field@@Base>:
   3e818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e81c:	add	fp, sp, #28
   3e820:	sub	sp, sp, #4
   3e824:	mov	r4, r0
   3e828:	mov	r0, #4
   3e82c:	add	r0, r0, r2, lsl #1
   3e830:	ldr	r2, [r1, #8]
   3e834:	cmp	r0, r2
   3e838:	bge	3e858 <flatcc_json_printer_uint64_vector_field@@Base+0x40>
   3e83c:	ldr	r2, [r1, #4]
   3e840:	add	r0, r2, r0
   3e844:	ldrh	r0, [r0]
   3e848:	cmp	r0, #0
   3e84c:	ldrne	r2, [r1]
   3e850:	addsne	r8, r2, r0
   3e854:	bne	3e860 <flatcc_json_printer_uint64_vector_field@@Base+0x48>
   3e858:	sub	sp, fp, #28
   3e85c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e860:	ldr	r0, [r1, #16]
   3e864:	ldr	r2, [fp, #8]
   3e868:	add	r7, r0, #1
   3e86c:	cmp	r0, #0
   3e870:	str	r7, [r1, #16]
   3e874:	ldrne	r0, [r4, #20]
   3e878:	addne	r1, r0, #1
   3e87c:	strne	r1, [r4, #20]
   3e880:	movne	r1, #44	; 0x2c
   3e884:	strbne	r1, [r0]
   3e888:	mov	r1, r3
   3e88c:	ldr	r0, [r8]
   3e890:	ldr	r7, [r8, r0]!
   3e894:	mov	r0, r4
   3e898:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3e89c:	ldr	r1, [r4, #32]
   3e8a0:	ldr	r0, [r4, #20]
   3e8a4:	cmp	r7, #0
   3e8a8:	add	r1, r1, #1
   3e8ac:	str	r1, [r4, #32]
   3e8b0:	add	r1, r0, #1
   3e8b4:	str	r1, [r4, #20]
   3e8b8:	mov	r1, #91	; 0x5b
   3e8bc:	strb	r1, [r0]
   3e8c0:	beq	3eaec <flatcc_json_printer_uint64_vector_field@@Base+0x2d4>
   3e8c4:	ldrb	r0, [r4, #25]
   3e8c8:	ldr	r2, [r4, #20]
   3e8cc:	cmp	r0, #0
   3e8d0:	beq	3e98c <flatcc_json_printer_uint64_vector_field@@Base+0x174>
   3e8d4:	add	r0, r2, #1
   3e8d8:	str	r0, [r4, #20]
   3e8dc:	mov	r0, #10
   3e8e0:	strb	r0, [r2]
   3e8e4:	ldr	r0, [r4, #20]
   3e8e8:	ldrb	r2, [r4, #25]
   3e8ec:	ldr	r3, [r4, #32]
   3e8f0:	ldr	r1, [r4, #16]
   3e8f4:	mla	r6, r3, r2, r0
   3e8f8:	mul	r5, r3, r2
   3e8fc:	cmp	r6, r1
   3e900:	bls	3e970 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
   3e904:	cmp	r0, r1
   3e908:	bcc	3e924 <flatcc_json_printer_uint64_vector_field@@Base+0x10c>
   3e90c:	ldr	r2, [r4, #44]	; 0x2c
   3e910:	mov	r0, r4
   3e914:	mov	r1, #0
   3e918:	blx	r2
   3e91c:	ldr	r1, [r4, #16]
   3e920:	ldr	r0, [r4, #20]
   3e924:	sub	r6, r1, r0
   3e928:	cmp	r6, r5
   3e92c:	bcs	3e970 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
   3e930:	mov	r1, #32
   3e934:	mov	r2, r6
   3e938:	bl	14ef0 <memset@plt>
   3e93c:	ldr	r0, [r4, #20]
   3e940:	ldr	r2, [r4, #44]	; 0x2c
   3e944:	mov	r1, #0
   3e948:	add	r0, r0, r6
   3e94c:	str	r0, [r4, #20]
   3e950:	mov	r0, r4
   3e954:	blx	r2
   3e958:	ldr	r1, [r4, #16]
   3e95c:	ldr	r0, [r4, #20]
   3e960:	sub	r5, r5, r6
   3e964:	sub	r6, r1, r0
   3e968:	cmp	r5, r6
   3e96c:	bhi	3e930 <flatcc_json_printer_uint64_vector_field@@Base+0x118>
   3e970:	mov	r1, #32
   3e974:	mov	r2, r5
   3e978:	bl	14ef0 <memset@plt>
   3e97c:	ldr	r0, [r4, #20]
   3e980:	add	r2, r0, r5
   3e984:	str	r2, [r4, #20]
   3e988:	b	3e9ac <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   3e98c:	ldr	r0, [r4, #16]
   3e990:	cmp	r2, r0
   3e994:	bcc	3e9ac <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   3e998:	ldr	r2, [r4, #44]	; 0x2c
   3e99c:	mov	r0, r4
   3e9a0:	mov	r1, #0
   3e9a4:	blx	r2
   3e9a8:	ldr	r2, [r4, #20]
   3e9ac:	ldrd	r0, [r8, #4]
   3e9b0:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3e9b4:	ldr	r1, [r4, #20]
   3e9b8:	subs	r9, r7, #1
   3e9bc:	add	r0, r1, r0
   3e9c0:	str	r0, [r4, #20]
   3e9c4:	beq	3eaec <flatcc_json_printer_uint64_vector_field@@Base+0x2d4>
   3e9c8:	ldr	r0, [r4, #20]
   3e9cc:	add	r7, r8, #12
   3e9d0:	mov	r8, #44	; 0x2c
   3e9d4:	mov	sl, #10
   3e9d8:	add	r1, r0, #1
   3e9dc:	sub	r9, r9, #1
   3e9e0:	str	r1, [r4, #20]
   3e9e4:	strb	r8, [r0]
   3e9e8:	ldrb	r0, [r4, #25]
   3e9ec:	ldr	r2, [r4, #20]
   3e9f0:	cmp	r0, #0
   3e9f4:	beq	3eaac <flatcc_json_printer_uint64_vector_field@@Base+0x294>
   3e9f8:	add	r0, r2, #1
   3e9fc:	str	r0, [r4, #20]
   3ea00:	strb	sl, [r2]
   3ea04:	ldr	r0, [r4, #20]
   3ea08:	ldrb	r2, [r4, #25]
   3ea0c:	ldr	r3, [r4, #32]
   3ea10:	ldr	r1, [r4, #16]
   3ea14:	mla	r6, r3, r2, r0
   3ea18:	mul	r5, r3, r2
   3ea1c:	cmp	r6, r1
   3ea20:	bls	3ea90 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   3ea24:	cmp	r0, r1
   3ea28:	bcc	3ea44 <flatcc_json_printer_uint64_vector_field@@Base+0x22c>
   3ea2c:	ldr	r2, [r4, #44]	; 0x2c
   3ea30:	mov	r0, r4
   3ea34:	mov	r1, #0
   3ea38:	blx	r2
   3ea3c:	ldr	r1, [r4, #16]
   3ea40:	ldr	r0, [r4, #20]
   3ea44:	sub	r6, r1, r0
   3ea48:	cmp	r6, r5
   3ea4c:	bcs	3ea90 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   3ea50:	mov	r1, #32
   3ea54:	mov	r2, r6
   3ea58:	bl	14ef0 <memset@plt>
   3ea5c:	ldr	r0, [r4, #20]
   3ea60:	ldr	r2, [r4, #44]	; 0x2c
   3ea64:	mov	r1, #0
   3ea68:	add	r0, r0, r6
   3ea6c:	str	r0, [r4, #20]
   3ea70:	mov	r0, r4
   3ea74:	blx	r2
   3ea78:	ldr	r1, [r4, #16]
   3ea7c:	ldr	r0, [r4, #20]
   3ea80:	sub	r5, r5, r6
   3ea84:	sub	r6, r1, r0
   3ea88:	cmp	r5, r6
   3ea8c:	bhi	3ea50 <flatcc_json_printer_uint64_vector_field@@Base+0x238>
   3ea90:	mov	r1, #32
   3ea94:	mov	r2, r5
   3ea98:	bl	14ef0 <memset@plt>
   3ea9c:	ldr	r0, [r4, #20]
   3eaa0:	add	r2, r0, r5
   3eaa4:	str	r2, [r4, #20]
   3eaa8:	b	3eacc <flatcc_json_printer_uint64_vector_field@@Base+0x2b4>
   3eaac:	ldr	r0, [r4, #16]
   3eab0:	cmp	r2, r0
   3eab4:	bcc	3eacc <flatcc_json_printer_uint64_vector_field@@Base+0x2b4>
   3eab8:	ldr	r2, [r4, #44]	; 0x2c
   3eabc:	mov	r0, r4
   3eac0:	mov	r1, #0
   3eac4:	blx	r2
   3eac8:	ldr	r2, [r4, #20]
   3eacc:	ldrd	r0, [r7]
   3ead0:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3ead4:	ldr	r1, [r4, #20]
   3ead8:	add	r7, r7, #8
   3eadc:	cmp	r9, #0
   3eae0:	add	r0, r1, r0
   3eae4:	str	r0, [r4, #20]
   3eae8:	bne	3e9d8 <flatcc_json_printer_uint64_vector_field@@Base+0x1c0>
   3eaec:	ldrb	r1, [r4, #25]
   3eaf0:	ldr	r0, [r4, #20]
   3eaf4:	cmp	r1, #0
   3eaf8:	beq	3ebb8 <flatcc_json_printer_uint64_vector_field@@Base+0x3a0>
   3eafc:	add	r1, r0, #1
   3eb00:	str	r1, [r4, #20]
   3eb04:	mov	r1, #10
   3eb08:	strb	r1, [r0]
   3eb0c:	ldr	r0, [r4, #32]
   3eb10:	sub	r2, r0, #1
   3eb14:	str	r2, [r4, #32]
   3eb18:	ldrb	r3, [r4, #25]
   3eb1c:	ldr	r0, [r4, #20]
   3eb20:	ldr	r1, [r4, #16]
   3eb24:	mla	r7, r2, r3, r0
   3eb28:	mul	r5, r2, r3
   3eb2c:	cmp	r7, r1
   3eb30:	bls	3eba0 <flatcc_json_printer_uint64_vector_field@@Base+0x388>
   3eb34:	cmp	r0, r1
   3eb38:	bcc	3eb54 <flatcc_json_printer_uint64_vector_field@@Base+0x33c>
   3eb3c:	ldr	r2, [r4, #44]	; 0x2c
   3eb40:	mov	r0, r4
   3eb44:	mov	r1, #0
   3eb48:	blx	r2
   3eb4c:	ldr	r1, [r4, #16]
   3eb50:	ldr	r0, [r4, #20]
   3eb54:	sub	r6, r1, r0
   3eb58:	cmp	r6, r5
   3eb5c:	bcs	3eba0 <flatcc_json_printer_uint64_vector_field@@Base+0x388>
   3eb60:	mov	r1, #32
   3eb64:	mov	r2, r6
   3eb68:	bl	14ef0 <memset@plt>
   3eb6c:	ldr	r0, [r4, #20]
   3eb70:	ldr	r2, [r4, #44]	; 0x2c
   3eb74:	mov	r1, #0
   3eb78:	add	r0, r0, r6
   3eb7c:	str	r0, [r4, #20]
   3eb80:	mov	r0, r4
   3eb84:	blx	r2
   3eb88:	ldr	r1, [r4, #16]
   3eb8c:	ldr	r0, [r4, #20]
   3eb90:	sub	r5, r5, r6
   3eb94:	sub	r6, r1, r0
   3eb98:	cmp	r5, r6
   3eb9c:	bhi	3eb60 <flatcc_json_printer_uint64_vector_field@@Base+0x348>
   3eba0:	mov	r1, #32
   3eba4:	mov	r2, r5
   3eba8:	bl	14ef0 <memset@plt>
   3ebac:	ldr	r0, [r4, #20]
   3ebb0:	add	r0, r0, r5
   3ebb4:	str	r0, [r4, #20]
   3ebb8:	add	r1, r0, #1
   3ebbc:	str	r1, [r4, #20]
   3ebc0:	mov	r1, #93	; 0x5d
   3ebc4:	strb	r1, [r0]
   3ebc8:	sub	sp, fp, #28
   3ebcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ebd0 <flatcc_json_printer_int8_vector_field@@Base>:
   3ebd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ebd4:	add	fp, sp, #28
   3ebd8:	sub	sp, sp, #4
   3ebdc:	mov	r4, r0
   3ebe0:	mov	r0, #4
   3ebe4:	add	r0, r0, r2, lsl #1
   3ebe8:	ldr	r2, [r1, #8]
   3ebec:	cmp	r0, r2
   3ebf0:	bge	3ec10 <flatcc_json_printer_int8_vector_field@@Base+0x40>
   3ebf4:	ldr	r2, [r1, #4]
   3ebf8:	add	r0, r2, r0
   3ebfc:	ldrh	r0, [r0]
   3ec00:	cmp	r0, #0
   3ec04:	ldrne	r2, [r1]
   3ec08:	addsne	r9, r2, r0
   3ec0c:	bne	3ec18 <flatcc_json_printer_int8_vector_field@@Base+0x48>
   3ec10:	sub	sp, fp, #28
   3ec14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ec18:	ldr	r0, [r1, #16]
   3ec1c:	ldr	r2, [fp, #8]
   3ec20:	add	r7, r0, #1
   3ec24:	cmp	r0, #0
   3ec28:	str	r7, [r1, #16]
   3ec2c:	ldrne	r0, [r4, #20]
   3ec30:	addne	r1, r0, #1
   3ec34:	strne	r1, [r4, #20]
   3ec38:	movne	r1, #44	; 0x2c
   3ec3c:	strbne	r1, [r0]
   3ec40:	mov	r1, r3
   3ec44:	ldr	r0, [r9]
   3ec48:	ldr	r8, [r9, r0]!
   3ec4c:	mov	r0, r4
   3ec50:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3ec54:	ldr	r1, [r4, #32]
   3ec58:	ldr	r0, [r4, #20]
   3ec5c:	cmp	r8, #0
   3ec60:	add	r1, r1, #1
   3ec64:	str	r1, [r4, #32]
   3ec68:	add	r1, r0, #1
   3ec6c:	str	r1, [r4, #20]
   3ec70:	mov	r1, #91	; 0x5b
   3ec74:	strb	r1, [r0]
   3ec78:	beq	3f024 <flatcc_json_printer_int8_vector_field@@Base+0x454>
   3ec7c:	ldrb	r1, [r4, #25]
   3ec80:	ldr	r0, [r4, #20]
   3ec84:	cmp	r1, #0
   3ec88:	beq	3ed44 <flatcc_json_printer_int8_vector_field@@Base+0x174>
   3ec8c:	add	r1, r0, #1
   3ec90:	str	r1, [r4, #20]
   3ec94:	mov	r1, #10
   3ec98:	strb	r1, [r0]
   3ec9c:	ldr	r0, [r4, #20]
   3eca0:	ldrb	r2, [r4, #25]
   3eca4:	ldr	r3, [r4, #32]
   3eca8:	ldr	r1, [r4, #16]
   3ecac:	mla	r7, r3, r2, r0
   3ecb0:	mul	r5, r3, r2
   3ecb4:	cmp	r7, r1
   3ecb8:	bls	3ed28 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   3ecbc:	cmp	r0, r1
   3ecc0:	bcc	3ecdc <flatcc_json_printer_int8_vector_field@@Base+0x10c>
   3ecc4:	ldr	r2, [r4, #44]	; 0x2c
   3ecc8:	mov	r0, r4
   3eccc:	mov	r1, #0
   3ecd0:	blx	r2
   3ecd4:	ldr	r1, [r4, #16]
   3ecd8:	ldr	r0, [r4, #20]
   3ecdc:	sub	r6, r1, r0
   3ece0:	cmp	r6, r5
   3ece4:	bcs	3ed28 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   3ece8:	mov	r1, #32
   3ecec:	mov	r2, r6
   3ecf0:	bl	14ef0 <memset@plt>
   3ecf4:	ldr	r0, [r4, #20]
   3ecf8:	ldr	r2, [r4, #44]	; 0x2c
   3ecfc:	mov	r1, #0
   3ed00:	add	r0, r0, r6
   3ed04:	str	r0, [r4, #20]
   3ed08:	mov	r0, r4
   3ed0c:	blx	r2
   3ed10:	ldr	r1, [r4, #16]
   3ed14:	ldr	r0, [r4, #20]
   3ed18:	sub	r5, r5, r6
   3ed1c:	sub	r6, r1, r0
   3ed20:	cmp	r5, r6
   3ed24:	bhi	3ece8 <flatcc_json_printer_int8_vector_field@@Base+0x118>
   3ed28:	mov	r1, #32
   3ed2c:	mov	r2, r5
   3ed30:	bl	14ef0 <memset@plt>
   3ed34:	ldr	r0, [r4, #20]
   3ed38:	add	r0, r0, r5
   3ed3c:	str	r0, [r4, #20]
   3ed40:	b	3ed64 <flatcc_json_printer_int8_vector_field@@Base+0x194>
   3ed44:	ldr	r1, [r4, #16]
   3ed48:	cmp	r0, r1
   3ed4c:	bcc	3ed64 <flatcc_json_printer_int8_vector_field@@Base+0x194>
   3ed50:	ldr	r2, [r4, #44]	; 0x2c
   3ed54:	mov	r0, r4
   3ed58:	mov	r1, #0
   3ed5c:	blx	r2
   3ed60:	ldr	r0, [r4, #20]
   3ed64:	ldrb	r1, [r9, #4]
   3ed68:	sxtb	r2, r1
   3ed6c:	lsr	r1, r1, #7
   3ed70:	cmn	r2, #1
   3ed74:	movle	r3, #45	; 0x2d
   3ed78:	rsble	r2, r2, #0
   3ed7c:	strble	r3, [r0], #1
   3ed80:	uxtb	r3, r2
   3ed84:	cmp	r3, #100	; 0x64
   3ed88:	bcc	3edd4 <flatcc_json_printer_int8_vector_field@@Base+0x204>
   3ed8c:	mov	r2, #0
   3ed90:	strb	r2, [r0, #3]
   3ed94:	movw	r2, #34079	; 0x851f
   3ed98:	movt	r2, #20971	; 0x51eb
   3ed9c:	umull	r2, r7, r3, r2
   3eda0:	mov	r2, #48	; 0x30
   3eda4:	orr	r2, r2, r7, lsr #5
   3eda8:	strb	r2, [r0]
   3edac:	lsr	r2, r7, #5
   3edb0:	mov	r7, #100	; 0x64
   3edb4:	mls	r2, r2, r7, r3
   3edb8:	movw	r3, #48496	; 0xbd70
   3edbc:	movt	r3, #4
   3edc0:	add	r2, r3, r2, lsl #1
   3edc4:	ldrh	r2, [r2]
   3edc8:	strh	r2, [r0, #1]
   3edcc:	mov	r0, #3
   3edd0:	b	3ee2c <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   3edd4:	cmp	r3, #10
   3edd8:	bcc	3ee18 <flatcc_json_printer_int8_vector_field@@Base+0x248>
   3eddc:	mov	r2, #0
   3ede0:	strb	r2, [r0, #2]
   3ede4:	movw	r2, #34079	; 0x851f
   3ede8:	movt	r2, #20971	; 0x51eb
   3edec:	umull	r2, r7, r3, r2
   3edf0:	lsr	r2, r7, #5
   3edf4:	mov	r7, #100	; 0x64
   3edf8:	mls	r2, r2, r7, r3
   3edfc:	movw	r3, #48496	; 0xbd70
   3ee00:	movt	r3, #4
   3ee04:	add	r2, r3, r2, lsl #1
   3ee08:	ldrh	r2, [r2]
   3ee0c:	strh	r2, [r0]
   3ee10:	mov	r0, #2
   3ee14:	b	3ee2c <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   3ee18:	mov	r3, #0
   3ee1c:	add	r2, r2, #48	; 0x30
   3ee20:	strb	r3, [r0, #1]
   3ee24:	strb	r2, [r0]
   3ee28:	mov	r0, #1
   3ee2c:	add	r0, r0, r1
   3ee30:	ldr	r1, [r4, #20]
   3ee34:	subs	r8, r8, #1
   3ee38:	add	r0, r1, r0
   3ee3c:	str	r0, [r4, #20]
   3ee40:	beq	3f024 <flatcc_json_printer_int8_vector_field@@Base+0x454>
   3ee44:	ldr	r0, [r4, #20]
   3ee48:	add	r7, r9, #5
   3ee4c:	mov	r9, #44	; 0x2c
   3ee50:	mov	sl, #0
   3ee54:	add	r1, r0, #1
   3ee58:	str	r1, [r4, #20]
   3ee5c:	strb	r9, [r0]
   3ee60:	ldrb	r1, [r4, #25]
   3ee64:	ldr	r0, [r4, #20]
   3ee68:	cmp	r1, #0
   3ee6c:	beq	3ef28 <flatcc_json_printer_int8_vector_field@@Base+0x358>
   3ee70:	add	r1, r0, #1
   3ee74:	str	r1, [r4, #20]
   3ee78:	mov	r1, #10
   3ee7c:	strb	r1, [r0]
   3ee80:	ldr	r0, [r4, #20]
   3ee84:	ldrb	r2, [r4, #25]
   3ee88:	ldr	r3, [r4, #32]
   3ee8c:	ldr	r1, [r4, #16]
   3ee90:	mla	r6, r3, r2, r0
   3ee94:	mul	r5, r3, r2
   3ee98:	cmp	r6, r1
   3ee9c:	bls	3ef0c <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   3eea0:	cmp	r0, r1
   3eea4:	bcc	3eec0 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
   3eea8:	ldr	r2, [r4, #44]	; 0x2c
   3eeac:	mov	r0, r4
   3eeb0:	mov	r1, #0
   3eeb4:	blx	r2
   3eeb8:	ldr	r1, [r4, #16]
   3eebc:	ldr	r0, [r4, #20]
   3eec0:	sub	r6, r1, r0
   3eec4:	cmp	r6, r5
   3eec8:	bcs	3ef0c <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   3eecc:	mov	r1, #32
   3eed0:	mov	r2, r6
   3eed4:	bl	14ef0 <memset@plt>
   3eed8:	ldr	r0, [r4, #20]
   3eedc:	ldr	r2, [r4, #44]	; 0x2c
   3eee0:	mov	r1, #0
   3eee4:	add	r0, r0, r6
   3eee8:	str	r0, [r4, #20]
   3eeec:	mov	r0, r4
   3eef0:	blx	r2
   3eef4:	ldr	r1, [r4, #16]
   3eef8:	ldr	r0, [r4, #20]
   3eefc:	sub	r5, r5, r6
   3ef00:	sub	r6, r1, r0
   3ef04:	cmp	r5, r6
   3ef08:	bhi	3eecc <flatcc_json_printer_int8_vector_field@@Base+0x2fc>
   3ef0c:	mov	r1, #32
   3ef10:	mov	r2, r5
   3ef14:	bl	14ef0 <memset@plt>
   3ef18:	ldr	r0, [r4, #20]
   3ef1c:	add	r0, r0, r5
   3ef20:	str	r0, [r4, #20]
   3ef24:	b	3ef48 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   3ef28:	ldr	r1, [r4, #16]
   3ef2c:	cmp	r0, r1
   3ef30:	bcc	3ef48 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   3ef34:	ldr	r2, [r4, #44]	; 0x2c
   3ef38:	mov	r0, r4
   3ef3c:	mov	r1, #0
   3ef40:	blx	r2
   3ef44:	ldr	r0, [r4, #20]
   3ef48:	ldrb	r1, [r7]
   3ef4c:	sub	r8, r8, #1
   3ef50:	sxtb	r2, r1
   3ef54:	lsr	r1, r1, #7
   3ef58:	cmn	r2, #1
   3ef5c:	movle	r3, #45	; 0x2d
   3ef60:	rsble	r2, r2, #0
   3ef64:	strble	r3, [r0], #1
   3ef68:	uxtb	r3, r2
   3ef6c:	cmp	r3, #100	; 0x64
   3ef70:	bcc	3efb8 <flatcc_json_printer_int8_vector_field@@Base+0x3e8>
   3ef74:	movw	r2, #34079	; 0x851f
   3ef78:	strb	sl, [r0, #3]
   3ef7c:	movt	r2, #20971	; 0x51eb
   3ef80:	umull	r2, r6, r3, r2
   3ef84:	mov	r2, #48	; 0x30
   3ef88:	orr	r2, r2, r6, lsr #5
   3ef8c:	strb	r2, [r0]
   3ef90:	lsr	r2, r6, #5
   3ef94:	mov	r6, #100	; 0x64
   3ef98:	mls	r2, r2, r6, r3
   3ef9c:	movw	r3, #48496	; 0xbd70
   3efa0:	movt	r3, #4
   3efa4:	add	r2, r3, r2, lsl #1
   3efa8:	ldrh	r2, [r2]
   3efac:	strh	r2, [r0, #1]
   3efb0:	mov	r0, #3
   3efb4:	b	3f008 <flatcc_json_printer_int8_vector_field@@Base+0x438>
   3efb8:	cmp	r3, #10
   3efbc:	bcc	3eff8 <flatcc_json_printer_int8_vector_field@@Base+0x428>
   3efc0:	movw	r2, #34079	; 0x851f
   3efc4:	strb	sl, [r0, #2]
   3efc8:	movt	r2, #20971	; 0x51eb
   3efcc:	umull	r2, r6, r3, r2
   3efd0:	lsr	r2, r6, #5
   3efd4:	mov	r6, #100	; 0x64
   3efd8:	mls	r2, r2, r6, r3
   3efdc:	movw	r3, #48496	; 0xbd70
   3efe0:	movt	r3, #4
   3efe4:	add	r2, r3, r2, lsl #1
   3efe8:	ldrh	r2, [r2]
   3efec:	strh	r2, [r0]
   3eff0:	mov	r0, #2
   3eff4:	b	3f008 <flatcc_json_printer_int8_vector_field@@Base+0x438>
   3eff8:	add	r2, r2, #48	; 0x30
   3effc:	strb	sl, [r0, #1]
   3f000:	strb	r2, [r0]
   3f004:	mov	r0, #1
   3f008:	add	r0, r0, r1
   3f00c:	ldr	r1, [r4, #20]
   3f010:	add	r7, r7, #1
   3f014:	cmp	r8, #0
   3f018:	add	r0, r1, r0
   3f01c:	str	r0, [r4, #20]
   3f020:	bne	3ee54 <flatcc_json_printer_int8_vector_field@@Base+0x284>
   3f024:	ldrb	r1, [r4, #25]
   3f028:	ldr	r0, [r4, #20]
   3f02c:	cmp	r1, #0
   3f030:	beq	3f0f0 <flatcc_json_printer_int8_vector_field@@Base+0x520>
   3f034:	add	r1, r0, #1
   3f038:	str	r1, [r4, #20]
   3f03c:	mov	r1, #10
   3f040:	strb	r1, [r0]
   3f044:	ldr	r0, [r4, #32]
   3f048:	sub	r2, r0, #1
   3f04c:	str	r2, [r4, #32]
   3f050:	ldrb	r3, [r4, #25]
   3f054:	ldr	r0, [r4, #20]
   3f058:	ldr	r1, [r4, #16]
   3f05c:	mla	r7, r2, r3, r0
   3f060:	mul	r5, r2, r3
   3f064:	cmp	r7, r1
   3f068:	bls	3f0d8 <flatcc_json_printer_int8_vector_field@@Base+0x508>
   3f06c:	cmp	r0, r1
   3f070:	bcc	3f08c <flatcc_json_printer_int8_vector_field@@Base+0x4bc>
   3f074:	ldr	r2, [r4, #44]	; 0x2c
   3f078:	mov	r0, r4
   3f07c:	mov	r1, #0
   3f080:	blx	r2
   3f084:	ldr	r1, [r4, #16]
   3f088:	ldr	r0, [r4, #20]
   3f08c:	sub	r6, r1, r0
   3f090:	cmp	r6, r5
   3f094:	bcs	3f0d8 <flatcc_json_printer_int8_vector_field@@Base+0x508>
   3f098:	mov	r1, #32
   3f09c:	mov	r2, r6
   3f0a0:	bl	14ef0 <memset@plt>
   3f0a4:	ldr	r0, [r4, #20]
   3f0a8:	ldr	r2, [r4, #44]	; 0x2c
   3f0ac:	mov	r1, #0
   3f0b0:	add	r0, r0, r6
   3f0b4:	str	r0, [r4, #20]
   3f0b8:	mov	r0, r4
   3f0bc:	blx	r2
   3f0c0:	ldr	r1, [r4, #16]
   3f0c4:	ldr	r0, [r4, #20]
   3f0c8:	sub	r5, r5, r6
   3f0cc:	sub	r6, r1, r0
   3f0d0:	cmp	r5, r6
   3f0d4:	bhi	3f098 <flatcc_json_printer_int8_vector_field@@Base+0x4c8>
   3f0d8:	mov	r1, #32
   3f0dc:	mov	r2, r5
   3f0e0:	bl	14ef0 <memset@plt>
   3f0e4:	ldr	r0, [r4, #20]
   3f0e8:	add	r0, r0, r5
   3f0ec:	str	r0, [r4, #20]
   3f0f0:	add	r1, r0, #1
   3f0f4:	str	r1, [r4, #20]
   3f0f8:	mov	r1, #93	; 0x5d
   3f0fc:	strb	r1, [r0]
   3f100:	sub	sp, fp, #28
   3f104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f108 <flatcc_json_printer_int16_vector_field@@Base>:
   3f108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f10c:	add	fp, sp, #28
   3f110:	sub	sp, sp, #4
   3f114:	mov	r4, r0
   3f118:	mov	r0, #4
   3f11c:	add	r0, r0, r2, lsl #1
   3f120:	ldr	r2, [r1, #8]
   3f124:	cmp	r0, r2
   3f128:	bge	3f148 <flatcc_json_printer_int16_vector_field@@Base+0x40>
   3f12c:	ldr	r2, [r1, #4]
   3f130:	add	r0, r2, r0
   3f134:	ldrh	r0, [r0]
   3f138:	cmp	r0, #0
   3f13c:	ldrne	r2, [r1]
   3f140:	addsne	r8, r2, r0
   3f144:	bne	3f150 <flatcc_json_printer_int16_vector_field@@Base+0x48>
   3f148:	sub	sp, fp, #28
   3f14c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f150:	ldr	r0, [r1, #16]
   3f154:	ldr	r2, [fp, #8]
   3f158:	add	r7, r0, #1
   3f15c:	cmp	r0, #0
   3f160:	str	r7, [r1, #16]
   3f164:	ldrne	r0, [r4, #20]
   3f168:	addne	r1, r0, #1
   3f16c:	strne	r1, [r4, #20]
   3f170:	movne	r1, #44	; 0x2c
   3f174:	strbne	r1, [r0]
   3f178:	mov	r1, r3
   3f17c:	ldr	r0, [r8]
   3f180:	ldr	r7, [r8, r0]!
   3f184:	mov	r0, r4
   3f188:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3f18c:	ldr	r1, [r4, #32]
   3f190:	ldr	r0, [r4, #20]
   3f194:	cmp	r7, #0
   3f198:	add	r1, r1, #1
   3f19c:	str	r1, [r4, #32]
   3f1a0:	add	r1, r0, #1
   3f1a4:	str	r1, [r4, #20]
   3f1a8:	mov	r1, #91	; 0x5b
   3f1ac:	strb	r1, [r0]
   3f1b0:	beq	3f41c <flatcc_json_printer_int16_vector_field@@Base+0x314>
   3f1b4:	ldrb	r0, [r4, #25]
   3f1b8:	ldr	r1, [r4, #20]
   3f1bc:	cmp	r0, #0
   3f1c0:	beq	3f27c <flatcc_json_printer_int16_vector_field@@Base+0x174>
   3f1c4:	add	r0, r1, #1
   3f1c8:	str	r0, [r4, #20]
   3f1cc:	mov	r0, #10
   3f1d0:	strb	r0, [r1]
   3f1d4:	ldr	r0, [r4, #20]
   3f1d8:	ldrb	r2, [r4, #25]
   3f1dc:	ldr	r3, [r4, #32]
   3f1e0:	ldr	r1, [r4, #16]
   3f1e4:	mla	r6, r3, r2, r0
   3f1e8:	mul	r5, r3, r2
   3f1ec:	cmp	r6, r1
   3f1f0:	bls	3f260 <flatcc_json_printer_int16_vector_field@@Base+0x158>
   3f1f4:	cmp	r0, r1
   3f1f8:	bcc	3f214 <flatcc_json_printer_int16_vector_field@@Base+0x10c>
   3f1fc:	ldr	r2, [r4, #44]	; 0x2c
   3f200:	mov	r0, r4
   3f204:	mov	r1, #0
   3f208:	blx	r2
   3f20c:	ldr	r1, [r4, #16]
   3f210:	ldr	r0, [r4, #20]
   3f214:	sub	r6, r1, r0
   3f218:	cmp	r6, r5
   3f21c:	bcs	3f260 <flatcc_json_printer_int16_vector_field@@Base+0x158>
   3f220:	mov	r1, #32
   3f224:	mov	r2, r6
   3f228:	bl	14ef0 <memset@plt>
   3f22c:	ldr	r0, [r4, #20]
   3f230:	ldr	r2, [r4, #44]	; 0x2c
   3f234:	mov	r1, #0
   3f238:	add	r0, r0, r6
   3f23c:	str	r0, [r4, #20]
   3f240:	mov	r0, r4
   3f244:	blx	r2
   3f248:	ldr	r1, [r4, #16]
   3f24c:	ldr	r0, [r4, #20]
   3f250:	sub	r5, r5, r6
   3f254:	sub	r6, r1, r0
   3f258:	cmp	r5, r6
   3f25c:	bhi	3f220 <flatcc_json_printer_int16_vector_field@@Base+0x118>
   3f260:	mov	r1, #32
   3f264:	mov	r2, r5
   3f268:	bl	14ef0 <memset@plt>
   3f26c:	ldr	r0, [r4, #20]
   3f270:	add	r1, r0, r5
   3f274:	str	r1, [r4, #20]
   3f278:	b	3f29c <flatcc_json_printer_int16_vector_field@@Base+0x194>
   3f27c:	ldr	r0, [r4, #16]
   3f280:	cmp	r1, r0
   3f284:	bcc	3f29c <flatcc_json_printer_int16_vector_field@@Base+0x194>
   3f288:	ldr	r2, [r4, #44]	; 0x2c
   3f28c:	mov	r0, r4
   3f290:	mov	r1, #0
   3f294:	blx	r2
   3f298:	ldr	r1, [r4, #20]
   3f29c:	ldrh	r0, [r8, #4]
   3f2a0:	lsr	r5, r0, #15
   3f2a4:	sxth	r0, r0
   3f2a8:	cmn	r0, #1
   3f2ac:	rsble	r0, r0, #0
   3f2b0:	movle	r2, #45	; 0x2d
   3f2b4:	strble	r2, [r1], #1
   3f2b8:	uxth	r0, r0
   3f2bc:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3f2c0:	ldr	r1, [r4, #20]
   3f2c4:	add	r0, r0, r5
   3f2c8:	subs	r9, r7, #1
   3f2cc:	add	r0, r1, r0
   3f2d0:	str	r0, [r4, #20]
   3f2d4:	beq	3f41c <flatcc_json_printer_int16_vector_field@@Base+0x314>
   3f2d8:	ldr	r0, [r4, #20]
   3f2dc:	add	r7, r8, #6
   3f2e0:	mov	r8, #44	; 0x2c
   3f2e4:	mov	sl, #10
   3f2e8:	add	r1, r0, #1
   3f2ec:	str	r1, [r4, #20]
   3f2f0:	strb	r8, [r0]
   3f2f4:	ldrb	r0, [r4, #25]
   3f2f8:	ldr	r1, [r4, #20]
   3f2fc:	cmp	r0, #0
   3f300:	beq	3f3b8 <flatcc_json_printer_int16_vector_field@@Base+0x2b0>
   3f304:	add	r0, r1, #1
   3f308:	str	r0, [r4, #20]
   3f30c:	strb	sl, [r1]
   3f310:	ldr	r0, [r4, #20]
   3f314:	ldrb	r2, [r4, #25]
   3f318:	ldr	r3, [r4, #32]
   3f31c:	ldr	r1, [r4, #16]
   3f320:	mla	r6, r3, r2, r0
   3f324:	mul	r5, r3, r2
   3f328:	cmp	r6, r1
   3f32c:	bls	3f39c <flatcc_json_printer_int16_vector_field@@Base+0x294>
   3f330:	cmp	r0, r1
   3f334:	bcc	3f350 <flatcc_json_printer_int16_vector_field@@Base+0x248>
   3f338:	ldr	r2, [r4, #44]	; 0x2c
   3f33c:	mov	r0, r4
   3f340:	mov	r1, #0
   3f344:	blx	r2
   3f348:	ldr	r1, [r4, #16]
   3f34c:	ldr	r0, [r4, #20]
   3f350:	sub	r6, r1, r0
   3f354:	cmp	r6, r5
   3f358:	bcs	3f39c <flatcc_json_printer_int16_vector_field@@Base+0x294>
   3f35c:	mov	r1, #32
   3f360:	mov	r2, r6
   3f364:	bl	14ef0 <memset@plt>
   3f368:	ldr	r0, [r4, #20]
   3f36c:	ldr	r2, [r4, #44]	; 0x2c
   3f370:	mov	r1, #0
   3f374:	add	r0, r0, r6
   3f378:	str	r0, [r4, #20]
   3f37c:	mov	r0, r4
   3f380:	blx	r2
   3f384:	ldr	r1, [r4, #16]
   3f388:	ldr	r0, [r4, #20]
   3f38c:	sub	r5, r5, r6
   3f390:	sub	r6, r1, r0
   3f394:	cmp	r5, r6
   3f398:	bhi	3f35c <flatcc_json_printer_int16_vector_field@@Base+0x254>
   3f39c:	mov	r1, #32
   3f3a0:	mov	r2, r5
   3f3a4:	bl	14ef0 <memset@plt>
   3f3a8:	ldr	r0, [r4, #20]
   3f3ac:	add	r1, r0, r5
   3f3b0:	str	r1, [r4, #20]
   3f3b4:	b	3f3d8 <flatcc_json_printer_int16_vector_field@@Base+0x2d0>
   3f3b8:	ldr	r0, [r4, #16]
   3f3bc:	cmp	r1, r0
   3f3c0:	bcc	3f3d8 <flatcc_json_printer_int16_vector_field@@Base+0x2d0>
   3f3c4:	ldr	r2, [r4, #44]	; 0x2c
   3f3c8:	mov	r0, r4
   3f3cc:	mov	r1, #0
   3f3d0:	blx	r2
   3f3d4:	ldr	r1, [r4, #20]
   3f3d8:	ldrh	r0, [r7]
   3f3dc:	sub	r9, r9, #1
   3f3e0:	lsr	r5, r0, #15
   3f3e4:	sxth	r0, r0
   3f3e8:	cmn	r0, #1
   3f3ec:	rsble	r0, r0, #0
   3f3f0:	movle	r2, #45	; 0x2d
   3f3f4:	strble	r2, [r1], #1
   3f3f8:	uxth	r0, r0
   3f3fc:	bl	3a290 <flatcc_json_printer_uint16@@Base+0x2c>
   3f400:	ldr	r1, [r4, #20]
   3f404:	add	r0, r0, r5
   3f408:	add	r7, r7, #2
   3f40c:	cmp	r9, #0
   3f410:	add	r0, r1, r0
   3f414:	str	r0, [r4, #20]
   3f418:	bne	3f2e8 <flatcc_json_printer_int16_vector_field@@Base+0x1e0>
   3f41c:	ldrb	r1, [r4, #25]
   3f420:	ldr	r0, [r4, #20]
   3f424:	cmp	r1, #0
   3f428:	beq	3f4e8 <flatcc_json_printer_int16_vector_field@@Base+0x3e0>
   3f42c:	add	r1, r0, #1
   3f430:	str	r1, [r4, #20]
   3f434:	mov	r1, #10
   3f438:	strb	r1, [r0]
   3f43c:	ldr	r0, [r4, #32]
   3f440:	sub	r2, r0, #1
   3f444:	str	r2, [r4, #32]
   3f448:	ldrb	r3, [r4, #25]
   3f44c:	ldr	r0, [r4, #20]
   3f450:	ldr	r1, [r4, #16]
   3f454:	mla	r7, r2, r3, r0
   3f458:	mul	r5, r2, r3
   3f45c:	cmp	r7, r1
   3f460:	bls	3f4d0 <flatcc_json_printer_int16_vector_field@@Base+0x3c8>
   3f464:	cmp	r0, r1
   3f468:	bcc	3f484 <flatcc_json_printer_int16_vector_field@@Base+0x37c>
   3f46c:	ldr	r2, [r4, #44]	; 0x2c
   3f470:	mov	r0, r4
   3f474:	mov	r1, #0
   3f478:	blx	r2
   3f47c:	ldr	r1, [r4, #16]
   3f480:	ldr	r0, [r4, #20]
   3f484:	sub	r6, r1, r0
   3f488:	cmp	r6, r5
   3f48c:	bcs	3f4d0 <flatcc_json_printer_int16_vector_field@@Base+0x3c8>
   3f490:	mov	r1, #32
   3f494:	mov	r2, r6
   3f498:	bl	14ef0 <memset@plt>
   3f49c:	ldr	r0, [r4, #20]
   3f4a0:	ldr	r2, [r4, #44]	; 0x2c
   3f4a4:	mov	r1, #0
   3f4a8:	add	r0, r0, r6
   3f4ac:	str	r0, [r4, #20]
   3f4b0:	mov	r0, r4
   3f4b4:	blx	r2
   3f4b8:	ldr	r1, [r4, #16]
   3f4bc:	ldr	r0, [r4, #20]
   3f4c0:	sub	r5, r5, r6
   3f4c4:	sub	r6, r1, r0
   3f4c8:	cmp	r5, r6
   3f4cc:	bhi	3f490 <flatcc_json_printer_int16_vector_field@@Base+0x388>
   3f4d0:	mov	r1, #32
   3f4d4:	mov	r2, r5
   3f4d8:	bl	14ef0 <memset@plt>
   3f4dc:	ldr	r0, [r4, #20]
   3f4e0:	add	r0, r0, r5
   3f4e4:	str	r0, [r4, #20]
   3f4e8:	add	r1, r0, #1
   3f4ec:	str	r1, [r4, #20]
   3f4f0:	mov	r1, #93	; 0x5d
   3f4f4:	strb	r1, [r0]
   3f4f8:	sub	sp, fp, #28
   3f4fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f500 <flatcc_json_printer_int32_vector_field@@Base>:
   3f500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f504:	add	fp, sp, #28
   3f508:	sub	sp, sp, #4
   3f50c:	mov	r4, r0
   3f510:	mov	r0, #4
   3f514:	add	r0, r0, r2, lsl #1
   3f518:	ldr	r2, [r1, #8]
   3f51c:	cmp	r0, r2
   3f520:	bge	3f540 <flatcc_json_printer_int32_vector_field@@Base+0x40>
   3f524:	ldr	r2, [r1, #4]
   3f528:	add	r0, r2, r0
   3f52c:	ldrh	r0, [r0]
   3f530:	cmp	r0, #0
   3f534:	ldrne	r2, [r1]
   3f538:	addsne	r8, r2, r0
   3f53c:	bne	3f548 <flatcc_json_printer_int32_vector_field@@Base+0x48>
   3f540:	sub	sp, fp, #28
   3f544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f548:	ldr	r0, [r1, #16]
   3f54c:	ldr	r2, [fp, #8]
   3f550:	add	r7, r0, #1
   3f554:	cmp	r0, #0
   3f558:	str	r7, [r1, #16]
   3f55c:	ldrne	r0, [r4, #20]
   3f560:	addne	r1, r0, #1
   3f564:	strne	r1, [r4, #20]
   3f568:	movne	r1, #44	; 0x2c
   3f56c:	strbne	r1, [r0]
   3f570:	mov	r1, r3
   3f574:	ldr	r0, [r8]
   3f578:	ldr	r7, [r8, r0]!
   3f57c:	mov	r0, r4
   3f580:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3f584:	ldr	r1, [r4, #32]
   3f588:	ldr	r0, [r4, #20]
   3f58c:	cmp	r7, #0
   3f590:	add	r1, r1, #1
   3f594:	str	r1, [r4, #32]
   3f598:	add	r1, r0, #1
   3f59c:	str	r1, [r4, #20]
   3f5a0:	mov	r1, #91	; 0x5b
   3f5a4:	strb	r1, [r0]
   3f5a8:	beq	3f804 <flatcc_json_printer_int32_vector_field@@Base+0x304>
   3f5ac:	ldrb	r0, [r4, #25]
   3f5b0:	ldr	r1, [r4, #20]
   3f5b4:	cmp	r0, #0
   3f5b8:	beq	3f674 <flatcc_json_printer_int32_vector_field@@Base+0x174>
   3f5bc:	add	r0, r1, #1
   3f5c0:	str	r0, [r4, #20]
   3f5c4:	mov	r0, #10
   3f5c8:	strb	r0, [r1]
   3f5cc:	ldr	r0, [r4, #20]
   3f5d0:	ldrb	r2, [r4, #25]
   3f5d4:	ldr	r3, [r4, #32]
   3f5d8:	ldr	r1, [r4, #16]
   3f5dc:	mla	r6, r3, r2, r0
   3f5e0:	mul	r5, r3, r2
   3f5e4:	cmp	r6, r1
   3f5e8:	bls	3f658 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   3f5ec:	cmp	r0, r1
   3f5f0:	bcc	3f60c <flatcc_json_printer_int32_vector_field@@Base+0x10c>
   3f5f4:	ldr	r2, [r4, #44]	; 0x2c
   3f5f8:	mov	r0, r4
   3f5fc:	mov	r1, #0
   3f600:	blx	r2
   3f604:	ldr	r1, [r4, #16]
   3f608:	ldr	r0, [r4, #20]
   3f60c:	sub	r6, r1, r0
   3f610:	cmp	r6, r5
   3f614:	bcs	3f658 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   3f618:	mov	r1, #32
   3f61c:	mov	r2, r6
   3f620:	bl	14ef0 <memset@plt>
   3f624:	ldr	r0, [r4, #20]
   3f628:	ldr	r2, [r4, #44]	; 0x2c
   3f62c:	mov	r1, #0
   3f630:	add	r0, r0, r6
   3f634:	str	r0, [r4, #20]
   3f638:	mov	r0, r4
   3f63c:	blx	r2
   3f640:	ldr	r1, [r4, #16]
   3f644:	ldr	r0, [r4, #20]
   3f648:	sub	r5, r5, r6
   3f64c:	sub	r6, r1, r0
   3f650:	cmp	r5, r6
   3f654:	bhi	3f618 <flatcc_json_printer_int32_vector_field@@Base+0x118>
   3f658:	mov	r1, #32
   3f65c:	mov	r2, r5
   3f660:	bl	14ef0 <memset@plt>
   3f664:	ldr	r0, [r4, #20]
   3f668:	add	r1, r0, r5
   3f66c:	str	r1, [r4, #20]
   3f670:	b	3f694 <flatcc_json_printer_int32_vector_field@@Base+0x194>
   3f674:	ldr	r0, [r4, #16]
   3f678:	cmp	r1, r0
   3f67c:	bcc	3f694 <flatcc_json_printer_int32_vector_field@@Base+0x194>
   3f680:	ldr	r2, [r4, #44]	; 0x2c
   3f684:	mov	r0, r4
   3f688:	mov	r1, #0
   3f68c:	blx	r2
   3f690:	ldr	r1, [r4, #20]
   3f694:	ldr	r0, [r8, #4]
   3f698:	cmn	r0, #1
   3f69c:	lsr	r5, r0, #31
   3f6a0:	movle	r2, #45	; 0x2d
   3f6a4:	rsble	r0, r0, #0
   3f6a8:	strble	r2, [r1], #1
   3f6ac:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3f6b0:	ldr	r1, [r4, #20]
   3f6b4:	add	r0, r0, r5
   3f6b8:	subs	r9, r7, #1
   3f6bc:	add	r0, r1, r0
   3f6c0:	str	r0, [r4, #20]
   3f6c4:	beq	3f804 <flatcc_json_printer_int32_vector_field@@Base+0x304>
   3f6c8:	ldr	r0, [r4, #20]
   3f6cc:	add	r7, r8, #8
   3f6d0:	mov	r8, #44	; 0x2c
   3f6d4:	mov	sl, #10
   3f6d8:	add	r1, r0, #1
   3f6dc:	str	r1, [r4, #20]
   3f6e0:	strb	r8, [r0]
   3f6e4:	ldrb	r0, [r4, #25]
   3f6e8:	ldr	r1, [r4, #20]
   3f6ec:	cmp	r0, #0
   3f6f0:	beq	3f7a8 <flatcc_json_printer_int32_vector_field@@Base+0x2a8>
   3f6f4:	add	r0, r1, #1
   3f6f8:	str	r0, [r4, #20]
   3f6fc:	strb	sl, [r1]
   3f700:	ldr	r0, [r4, #20]
   3f704:	ldrb	r2, [r4, #25]
   3f708:	ldr	r3, [r4, #32]
   3f70c:	ldr	r1, [r4, #16]
   3f710:	mla	r6, r3, r2, r0
   3f714:	mul	r5, r3, r2
   3f718:	cmp	r6, r1
   3f71c:	bls	3f78c <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   3f720:	cmp	r0, r1
   3f724:	bcc	3f740 <flatcc_json_printer_int32_vector_field@@Base+0x240>
   3f728:	ldr	r2, [r4, #44]	; 0x2c
   3f72c:	mov	r0, r4
   3f730:	mov	r1, #0
   3f734:	blx	r2
   3f738:	ldr	r1, [r4, #16]
   3f73c:	ldr	r0, [r4, #20]
   3f740:	sub	r6, r1, r0
   3f744:	cmp	r6, r5
   3f748:	bcs	3f78c <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   3f74c:	mov	r1, #32
   3f750:	mov	r2, r6
   3f754:	bl	14ef0 <memset@plt>
   3f758:	ldr	r0, [r4, #20]
   3f75c:	ldr	r2, [r4, #44]	; 0x2c
   3f760:	mov	r1, #0
   3f764:	add	r0, r0, r6
   3f768:	str	r0, [r4, #20]
   3f76c:	mov	r0, r4
   3f770:	blx	r2
   3f774:	ldr	r1, [r4, #16]
   3f778:	ldr	r0, [r4, #20]
   3f77c:	sub	r5, r5, r6
   3f780:	sub	r6, r1, r0
   3f784:	cmp	r5, r6
   3f788:	bhi	3f74c <flatcc_json_printer_int32_vector_field@@Base+0x24c>
   3f78c:	mov	r1, #32
   3f790:	mov	r2, r5
   3f794:	bl	14ef0 <memset@plt>
   3f798:	ldr	r0, [r4, #20]
   3f79c:	add	r1, r0, r5
   3f7a0:	str	r1, [r4, #20]
   3f7a4:	b	3f7c8 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   3f7a8:	ldr	r0, [r4, #16]
   3f7ac:	cmp	r1, r0
   3f7b0:	bcc	3f7c8 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   3f7b4:	ldr	r2, [r4, #44]	; 0x2c
   3f7b8:	mov	r0, r4
   3f7bc:	mov	r1, #0
   3f7c0:	blx	r2
   3f7c4:	ldr	r1, [r4, #20]
   3f7c8:	ldr	r0, [r7]
   3f7cc:	sub	r9, r9, #1
   3f7d0:	cmn	r0, #1
   3f7d4:	lsr	r5, r0, #31
   3f7d8:	movle	r2, #45	; 0x2d
   3f7dc:	rsble	r0, r0, #0
   3f7e0:	strble	r2, [r1], #1
   3f7e4:	bl	3a430 <flatcc_json_printer_uint32@@Base+0x2c>
   3f7e8:	ldr	r1, [r4, #20]
   3f7ec:	add	r0, r0, r5
   3f7f0:	add	r7, r7, #4
   3f7f4:	cmp	r9, #0
   3f7f8:	add	r0, r1, r0
   3f7fc:	str	r0, [r4, #20]
   3f800:	bne	3f6d8 <flatcc_json_printer_int32_vector_field@@Base+0x1d8>
   3f804:	ldrb	r1, [r4, #25]
   3f808:	ldr	r0, [r4, #20]
   3f80c:	cmp	r1, #0
   3f810:	beq	3f8d0 <flatcc_json_printer_int32_vector_field@@Base+0x3d0>
   3f814:	add	r1, r0, #1
   3f818:	str	r1, [r4, #20]
   3f81c:	mov	r1, #10
   3f820:	strb	r1, [r0]
   3f824:	ldr	r0, [r4, #32]
   3f828:	sub	r2, r0, #1
   3f82c:	str	r2, [r4, #32]
   3f830:	ldrb	r3, [r4, #25]
   3f834:	ldr	r0, [r4, #20]
   3f838:	ldr	r1, [r4, #16]
   3f83c:	mla	r7, r2, r3, r0
   3f840:	mul	r5, r2, r3
   3f844:	cmp	r7, r1
   3f848:	bls	3f8b8 <flatcc_json_printer_int32_vector_field@@Base+0x3b8>
   3f84c:	cmp	r0, r1
   3f850:	bcc	3f86c <flatcc_json_printer_int32_vector_field@@Base+0x36c>
   3f854:	ldr	r2, [r4, #44]	; 0x2c
   3f858:	mov	r0, r4
   3f85c:	mov	r1, #0
   3f860:	blx	r2
   3f864:	ldr	r1, [r4, #16]
   3f868:	ldr	r0, [r4, #20]
   3f86c:	sub	r6, r1, r0
   3f870:	cmp	r6, r5
   3f874:	bcs	3f8b8 <flatcc_json_printer_int32_vector_field@@Base+0x3b8>
   3f878:	mov	r1, #32
   3f87c:	mov	r2, r6
   3f880:	bl	14ef0 <memset@plt>
   3f884:	ldr	r0, [r4, #20]
   3f888:	ldr	r2, [r4, #44]	; 0x2c
   3f88c:	mov	r1, #0
   3f890:	add	r0, r0, r6
   3f894:	str	r0, [r4, #20]
   3f898:	mov	r0, r4
   3f89c:	blx	r2
   3f8a0:	ldr	r1, [r4, #16]
   3f8a4:	ldr	r0, [r4, #20]
   3f8a8:	sub	r5, r5, r6
   3f8ac:	sub	r6, r1, r0
   3f8b0:	cmp	r5, r6
   3f8b4:	bhi	3f878 <flatcc_json_printer_int32_vector_field@@Base+0x378>
   3f8b8:	mov	r1, #32
   3f8bc:	mov	r2, r5
   3f8c0:	bl	14ef0 <memset@plt>
   3f8c4:	ldr	r0, [r4, #20]
   3f8c8:	add	r0, r0, r5
   3f8cc:	str	r0, [r4, #20]
   3f8d0:	add	r1, r0, #1
   3f8d4:	str	r1, [r4, #20]
   3f8d8:	mov	r1, #93	; 0x5d
   3f8dc:	strb	r1, [r0]
   3f8e0:	sub	sp, fp, #28
   3f8e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f8e8 <flatcc_json_printer_int64_vector_field@@Base>:
   3f8e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f8ec:	add	fp, sp, #28
   3f8f0:	sub	sp, sp, #4
   3f8f4:	mov	r4, r0
   3f8f8:	mov	r0, #4
   3f8fc:	add	r0, r0, r2, lsl #1
   3f900:	ldr	r2, [r1, #8]
   3f904:	cmp	r0, r2
   3f908:	bge	3f928 <flatcc_json_printer_int64_vector_field@@Base+0x40>
   3f90c:	ldr	r2, [r1, #4]
   3f910:	add	r0, r2, r0
   3f914:	ldrh	r0, [r0]
   3f918:	cmp	r0, #0
   3f91c:	ldrne	r2, [r1]
   3f920:	addsne	r8, r2, r0
   3f924:	bne	3f930 <flatcc_json_printer_int64_vector_field@@Base+0x48>
   3f928:	sub	sp, fp, #28
   3f92c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f930:	ldr	r0, [r1, #16]
   3f934:	ldr	r2, [fp, #8]
   3f938:	add	r7, r0, #1
   3f93c:	cmp	r0, #0
   3f940:	str	r7, [r1, #16]
   3f944:	ldrne	r0, [r4, #20]
   3f948:	addne	r1, r0, #1
   3f94c:	strne	r1, [r4, #20]
   3f950:	movne	r1, #44	; 0x2c
   3f954:	strbne	r1, [r0]
   3f958:	mov	r1, r3
   3f95c:	ldr	r0, [r8]
   3f960:	ldr	r7, [r8, r0]!
   3f964:	mov	r0, r4
   3f968:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3f96c:	ldr	r1, [r4, #32]
   3f970:	ldr	r0, [r4, #20]
   3f974:	cmp	r7, #0
   3f978:	add	r1, r1, #1
   3f97c:	str	r1, [r4, #32]
   3f980:	add	r1, r0, #1
   3f984:	str	r1, [r4, #20]
   3f988:	mov	r1, #91	; 0x5b
   3f98c:	strb	r1, [r0]
   3f990:	beq	3fc0c <flatcc_json_printer_int64_vector_field@@Base+0x324>
   3f994:	ldrb	r0, [r4, #25]
   3f998:	ldr	r2, [r4, #20]
   3f99c:	cmp	r0, #0
   3f9a0:	beq	3fa6c <flatcc_json_printer_int64_vector_field@@Base+0x184>
   3f9a4:	add	r0, r2, #1
   3f9a8:	str	r0, [r4, #20]
   3f9ac:	mov	r0, #10
   3f9b0:	strb	r0, [r2]
   3f9b4:	ldr	r0, [r4, #20]
   3f9b8:	ldrb	r2, [r4, #25]
   3f9bc:	ldr	r3, [r4, #32]
   3f9c0:	ldr	r1, [r4, #16]
   3f9c4:	mla	r6, r3, r2, r0
   3f9c8:	mul	r5, r3, r2
   3f9cc:	cmp	r6, r1
   3f9d0:	bls	3fa40 <flatcc_json_printer_int64_vector_field@@Base+0x158>
   3f9d4:	cmp	r0, r1
   3f9d8:	bcc	3f9f4 <flatcc_json_printer_int64_vector_field@@Base+0x10c>
   3f9dc:	ldr	r2, [r4, #44]	; 0x2c
   3f9e0:	mov	r0, r4
   3f9e4:	mov	r1, #0
   3f9e8:	blx	r2
   3f9ec:	ldr	r1, [r4, #16]
   3f9f0:	ldr	r0, [r4, #20]
   3f9f4:	sub	r6, r1, r0
   3f9f8:	cmp	r6, r5
   3f9fc:	bcs	3fa40 <flatcc_json_printer_int64_vector_field@@Base+0x158>
   3fa00:	mov	r1, #32
   3fa04:	mov	r2, r6
   3fa08:	bl	14ef0 <memset@plt>
   3fa0c:	ldr	r0, [r4, #20]
   3fa10:	ldr	r2, [r4, #44]	; 0x2c
   3fa14:	mov	r1, #0
   3fa18:	add	r0, r0, r6
   3fa1c:	str	r0, [r4, #20]
   3fa20:	mov	r0, r4
   3fa24:	blx	r2
   3fa28:	ldr	r1, [r4, #16]
   3fa2c:	ldr	r0, [r4, #20]
   3fa30:	sub	r5, r5, r6
   3fa34:	sub	r6, r1, r0
   3fa38:	cmp	r5, r6
   3fa3c:	bhi	3fa00 <flatcc_json_printer_int64_vector_field@@Base+0x118>
   3fa40:	mov	r1, #32
   3fa44:	mov	r2, r5
   3fa48:	bl	14ef0 <memset@plt>
   3fa4c:	ldr	r0, [r4, #20]
   3fa50:	add	r2, r0, r5
   3fa54:	str	r2, [r4, #20]
   3fa58:	ldrd	r0, [r8, #4]
   3fa5c:	lsr	r5, r1, #31
   3fa60:	cmn	r1, #1
   3fa64:	bgt	3faac <flatcc_json_printer_int64_vector_field@@Base+0x1c4>
   3fa68:	b	3fa9c <flatcc_json_printer_int64_vector_field@@Base+0x1b4>
   3fa6c:	ldr	r0, [r4, #16]
   3fa70:	cmp	r2, r0
   3fa74:	bcc	3fa8c <flatcc_json_printer_int64_vector_field@@Base+0x1a4>
   3fa78:	ldr	r2, [r4, #44]	; 0x2c
   3fa7c:	mov	r0, r4
   3fa80:	mov	r1, #0
   3fa84:	blx	r2
   3fa88:	ldr	r2, [r4, #20]
   3fa8c:	ldrd	r0, [r8, #4]
   3fa90:	lsr	r5, r1, #31
   3fa94:	cmn	r1, #1
   3fa98:	bgt	3faac <flatcc_json_printer_int64_vector_field@@Base+0x1c4>
   3fa9c:	mov	r3, #45	; 0x2d
   3faa0:	rsbs	r0, r0, #0
   3faa4:	strb	r3, [r2], #1
   3faa8:	rsc	r1, r1, #0
   3faac:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3fab0:	ldr	r1, [r4, #20]
   3fab4:	add	r0, r0, r5
   3fab8:	subs	r9, r7, #1
   3fabc:	add	r0, r1, r0
   3fac0:	str	r0, [r4, #20]
   3fac4:	beq	3fc0c <flatcc_json_printer_int64_vector_field@@Base+0x324>
   3fac8:	ldr	r0, [r4, #20]
   3facc:	add	r7, r8, #12
   3fad0:	mov	r8, #44	; 0x2c
   3fad4:	mov	sl, #10
   3fad8:	add	r1, r0, #1
   3fadc:	str	r1, [r4, #20]
   3fae0:	strb	r8, [r0]
   3fae4:	ldrb	r0, [r4, #25]
   3fae8:	ldr	r2, [r4, #20]
   3faec:	cmp	r0, #0
   3faf0:	beq	3fba8 <flatcc_json_printer_int64_vector_field@@Base+0x2c0>
   3faf4:	add	r0, r2, #1
   3faf8:	str	r0, [r4, #20]
   3fafc:	strb	sl, [r2]
   3fb00:	ldr	r0, [r4, #20]
   3fb04:	ldrb	r2, [r4, #25]
   3fb08:	ldr	r3, [r4, #32]
   3fb0c:	ldr	r1, [r4, #16]
   3fb10:	mla	r6, r3, r2, r0
   3fb14:	mul	r5, r3, r2
   3fb18:	cmp	r6, r1
   3fb1c:	bls	3fb8c <flatcc_json_printer_int64_vector_field@@Base+0x2a4>
   3fb20:	cmp	r0, r1
   3fb24:	bcc	3fb40 <flatcc_json_printer_int64_vector_field@@Base+0x258>
   3fb28:	ldr	r2, [r4, #44]	; 0x2c
   3fb2c:	mov	r0, r4
   3fb30:	mov	r1, #0
   3fb34:	blx	r2
   3fb38:	ldr	r1, [r4, #16]
   3fb3c:	ldr	r0, [r4, #20]
   3fb40:	sub	r6, r1, r0
   3fb44:	cmp	r6, r5
   3fb48:	bcs	3fb8c <flatcc_json_printer_int64_vector_field@@Base+0x2a4>
   3fb4c:	mov	r1, #32
   3fb50:	mov	r2, r6
   3fb54:	bl	14ef0 <memset@plt>
   3fb58:	ldr	r0, [r4, #20]
   3fb5c:	ldr	r2, [r4, #44]	; 0x2c
   3fb60:	mov	r1, #0
   3fb64:	add	r0, r0, r6
   3fb68:	str	r0, [r4, #20]
   3fb6c:	mov	r0, r4
   3fb70:	blx	r2
   3fb74:	ldr	r1, [r4, #16]
   3fb78:	ldr	r0, [r4, #20]
   3fb7c:	sub	r5, r5, r6
   3fb80:	sub	r6, r1, r0
   3fb84:	cmp	r5, r6
   3fb88:	bhi	3fb4c <flatcc_json_printer_int64_vector_field@@Base+0x264>
   3fb8c:	mov	r1, #32
   3fb90:	mov	r2, r5
   3fb94:	bl	14ef0 <memset@plt>
   3fb98:	ldr	r0, [r4, #20]
   3fb9c:	add	r2, r0, r5
   3fba0:	str	r2, [r4, #20]
   3fba4:	b	3fbc8 <flatcc_json_printer_int64_vector_field@@Base+0x2e0>
   3fba8:	ldr	r0, [r4, #16]
   3fbac:	cmp	r2, r0
   3fbb0:	bcc	3fbc8 <flatcc_json_printer_int64_vector_field@@Base+0x2e0>
   3fbb4:	ldr	r2, [r4, #44]	; 0x2c
   3fbb8:	mov	r0, r4
   3fbbc:	mov	r1, #0
   3fbc0:	blx	r2
   3fbc4:	ldr	r2, [r4, #20]
   3fbc8:	ldrd	r0, [r7]
   3fbcc:	sub	r9, r9, #1
   3fbd0:	lsr	r5, r1, #31
   3fbd4:	cmn	r1, #1
   3fbd8:	bgt	3fbec <flatcc_json_printer_int64_vector_field@@Base+0x304>
   3fbdc:	mov	r3, #45	; 0x2d
   3fbe0:	rsbs	r0, r0, #0
   3fbe4:	strb	r3, [r2], #1
   3fbe8:	rsc	r1, r1, #0
   3fbec:	bl	3a798 <flatcc_json_printer_uint64@@Base+0x30>
   3fbf0:	ldr	r1, [r4, #20]
   3fbf4:	add	r0, r0, r5
   3fbf8:	add	r7, r7, #8
   3fbfc:	cmp	r9, #0
   3fc00:	add	r0, r1, r0
   3fc04:	str	r0, [r4, #20]
   3fc08:	bne	3fad8 <flatcc_json_printer_int64_vector_field@@Base+0x1f0>
   3fc0c:	ldrb	r1, [r4, #25]
   3fc10:	ldr	r0, [r4, #20]
   3fc14:	cmp	r1, #0
   3fc18:	beq	3fcd8 <flatcc_json_printer_int64_vector_field@@Base+0x3f0>
   3fc1c:	add	r1, r0, #1
   3fc20:	str	r1, [r4, #20]
   3fc24:	mov	r1, #10
   3fc28:	strb	r1, [r0]
   3fc2c:	ldr	r0, [r4, #32]
   3fc30:	sub	r2, r0, #1
   3fc34:	str	r2, [r4, #32]
   3fc38:	ldrb	r3, [r4, #25]
   3fc3c:	ldr	r0, [r4, #20]
   3fc40:	ldr	r1, [r4, #16]
   3fc44:	mla	r7, r2, r3, r0
   3fc48:	mul	r5, r2, r3
   3fc4c:	cmp	r7, r1
   3fc50:	bls	3fcc0 <flatcc_json_printer_int64_vector_field@@Base+0x3d8>
   3fc54:	cmp	r0, r1
   3fc58:	bcc	3fc74 <flatcc_json_printer_int64_vector_field@@Base+0x38c>
   3fc5c:	ldr	r2, [r4, #44]	; 0x2c
   3fc60:	mov	r0, r4
   3fc64:	mov	r1, #0
   3fc68:	blx	r2
   3fc6c:	ldr	r1, [r4, #16]
   3fc70:	ldr	r0, [r4, #20]
   3fc74:	sub	r6, r1, r0
   3fc78:	cmp	r6, r5
   3fc7c:	bcs	3fcc0 <flatcc_json_printer_int64_vector_field@@Base+0x3d8>
   3fc80:	mov	r1, #32
   3fc84:	mov	r2, r6
   3fc88:	bl	14ef0 <memset@plt>
   3fc8c:	ldr	r0, [r4, #20]
   3fc90:	ldr	r2, [r4, #44]	; 0x2c
   3fc94:	mov	r1, #0
   3fc98:	add	r0, r0, r6
   3fc9c:	str	r0, [r4, #20]
   3fca0:	mov	r0, r4
   3fca4:	blx	r2
   3fca8:	ldr	r1, [r4, #16]
   3fcac:	ldr	r0, [r4, #20]
   3fcb0:	sub	r5, r5, r6
   3fcb4:	sub	r6, r1, r0
   3fcb8:	cmp	r5, r6
   3fcbc:	bhi	3fc80 <flatcc_json_printer_int64_vector_field@@Base+0x398>
   3fcc0:	mov	r1, #32
   3fcc4:	mov	r2, r5
   3fcc8:	bl	14ef0 <memset@plt>
   3fccc:	ldr	r0, [r4, #20]
   3fcd0:	add	r0, r0, r5
   3fcd4:	str	r0, [r4, #20]
   3fcd8:	add	r1, r0, #1
   3fcdc:	str	r1, [r4, #20]
   3fce0:	mov	r1, #93	; 0x5d
   3fce4:	strb	r1, [r0]
   3fce8:	sub	sp, fp, #28
   3fcec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003fcf0 <flatcc_json_printer_bool_vector_field@@Base>:
   3fcf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fcf4:	add	fp, sp, #28
   3fcf8:	sub	sp, sp, #4
   3fcfc:	mov	r4, r0
   3fd00:	mov	r0, #4
   3fd04:	add	r0, r0, r2, lsl #1
   3fd08:	ldr	r2, [r1, #8]
   3fd0c:	cmp	r0, r2
   3fd10:	bge	3fd30 <flatcc_json_printer_bool_vector_field@@Base+0x40>
   3fd14:	ldr	r2, [r1, #4]
   3fd18:	add	r0, r2, r0
   3fd1c:	ldrh	r0, [r0]
   3fd20:	cmp	r0, #0
   3fd24:	ldrne	r2, [r1]
   3fd28:	addsne	r8, r2, r0
   3fd2c:	bne	3fd38 <flatcc_json_printer_bool_vector_field@@Base+0x48>
   3fd30:	sub	sp, fp, #28
   3fd34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fd38:	ldr	r0, [r1, #16]
   3fd3c:	ldr	r2, [fp, #8]
   3fd40:	add	r7, r0, #1
   3fd44:	cmp	r0, #0
   3fd48:	str	r7, [r1, #16]
   3fd4c:	ldrne	r0, [r4, #20]
   3fd50:	addne	r1, r0, #1
   3fd54:	strne	r1, [r4, #20]
   3fd58:	movne	r1, #44	; 0x2c
   3fd5c:	strbne	r1, [r0]
   3fd60:	mov	r1, r3
   3fd64:	ldr	r0, [r8]
   3fd68:	ldr	r7, [r8, r0]!
   3fd6c:	mov	r0, r4
   3fd70:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   3fd74:	ldr	r1, [r4, #32]
   3fd78:	ldr	r0, [r4, #20]
   3fd7c:	cmp	r7, #0
   3fd80:	add	r1, r1, #1
   3fd84:	str	r1, [r4, #32]
   3fd88:	add	r1, r0, #1
   3fd8c:	str	r1, [r4, #20]
   3fd90:	mov	r1, #91	; 0x5b
   3fd94:	strb	r1, [r0]
   3fd98:	beq	40050 <flatcc_json_printer_bool_vector_field@@Base+0x360>
   3fd9c:	ldrb	r1, [r4, #25]
   3fda0:	ldr	r0, [r4, #20]
   3fda4:	cmp	r1, #0
   3fda8:	beq	3fe70 <flatcc_json_printer_bool_vector_field@@Base+0x180>
   3fdac:	add	r1, r0, #1
   3fdb0:	str	r1, [r4, #20]
   3fdb4:	mov	r1, #10
   3fdb8:	strb	r1, [r0]
   3fdbc:	ldr	r0, [r4, #20]
   3fdc0:	ldrb	r2, [r4, #25]
   3fdc4:	ldr	r3, [r4, #32]
   3fdc8:	ldr	r1, [r4, #16]
   3fdcc:	mla	r6, r3, r2, r0
   3fdd0:	mul	r5, r3, r2
   3fdd4:	cmp	r6, r1
   3fdd8:	bls	3fe48 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   3fddc:	cmp	r0, r1
   3fde0:	bcc	3fdfc <flatcc_json_printer_bool_vector_field@@Base+0x10c>
   3fde4:	ldr	r2, [r4, #44]	; 0x2c
   3fde8:	mov	r0, r4
   3fdec:	mov	r1, #0
   3fdf0:	blx	r2
   3fdf4:	ldr	r1, [r4, #16]
   3fdf8:	ldr	r0, [r4, #20]
   3fdfc:	sub	r6, r1, r0
   3fe00:	cmp	r6, r5
   3fe04:	bcs	3fe48 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   3fe08:	mov	r1, #32
   3fe0c:	mov	r2, r6
   3fe10:	bl	14ef0 <memset@plt>
   3fe14:	ldr	r0, [r4, #20]
   3fe18:	ldr	r2, [r4, #44]	; 0x2c
   3fe1c:	mov	r1, #0
   3fe20:	add	r0, r0, r6
   3fe24:	str	r0, [r4, #20]
   3fe28:	mov	r0, r4
   3fe2c:	blx	r2
   3fe30:	ldr	r1, [r4, #16]
   3fe34:	ldr	r0, [r4, #20]
   3fe38:	sub	r5, r5, r6
   3fe3c:	sub	r6, r1, r0
   3fe40:	cmp	r5, r6
   3fe44:	bhi	3fe08 <flatcc_json_printer_bool_vector_field@@Base+0x118>
   3fe48:	mov	r1, #32
   3fe4c:	mov	r2, r5
   3fe50:	bl	14ef0 <memset@plt>
   3fe54:	ldr	r0, [r4, #20]
   3fe58:	add	r0, r0, r5
   3fe5c:	str	r0, [r4, #20]
   3fe60:	ldrb	r1, [r8, #4]
   3fe64:	cmp	r1, #0
   3fe68:	bne	3fe9c <flatcc_json_printer_bool_vector_field@@Base+0x1ac>
   3fe6c:	b	3feb8 <flatcc_json_printer_bool_vector_field@@Base+0x1c8>
   3fe70:	ldr	r1, [r4, #16]
   3fe74:	cmp	r0, r1
   3fe78:	bcc	3fe90 <flatcc_json_printer_bool_vector_field@@Base+0x1a0>
   3fe7c:	ldr	r2, [r4, #44]	; 0x2c
   3fe80:	mov	r0, r4
   3fe84:	mov	r1, #0
   3fe88:	blx	r2
   3fe8c:	ldr	r0, [r4, #20]
   3fe90:	ldrb	r1, [r8, #4]
   3fe94:	cmp	r1, #0
   3fe98:	beq	3feb8 <flatcc_json_printer_bool_vector_field@@Base+0x1c8>
   3fe9c:	mov	r1, #0
   3fea0:	strb	r1, [r0, #4]
   3fea4:	movw	r1, #29300	; 0x7274
   3fea8:	movt	r1, #25973	; 0x6575
   3feac:	str	r1, [r0]
   3feb0:	mov	r0, #4
   3feb4:	b	3fed0 <flatcc_json_printer_bool_vector_field@@Base+0x1e0>
   3feb8:	mov	r1, #101	; 0x65
   3febc:	strh	r1, [r0, #4]
   3fec0:	movw	r1, #24934	; 0x6166
   3fec4:	movt	r1, #29548	; 0x736c
   3fec8:	str	r1, [r0]
   3fecc:	mov	r0, #5
   3fed0:	ldr	r1, [r4, #20]
   3fed4:	subs	r9, r7, #1
   3fed8:	add	r0, r1, r0
   3fedc:	str	r0, [r4, #20]
   3fee0:	beq	40050 <flatcc_json_printer_bool_vector_field@@Base+0x360>
   3fee4:	ldr	r0, [r4, #20]
   3fee8:	add	r7, r8, #5
   3feec:	mov	r8, #44	; 0x2c
   3fef0:	mov	sl, #10
   3fef4:	add	r1, r0, #1
   3fef8:	str	r1, [r4, #20]
   3fefc:	strb	r8, [r0]
   3ff00:	ldrb	r1, [r4, #25]
   3ff04:	ldr	r0, [r4, #20]
   3ff08:	cmp	r1, #0
   3ff0c:	beq	3ffd4 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   3ff10:	add	r1, r0, #1
   3ff14:	str	r1, [r4, #20]
   3ff18:	strb	sl, [r0]
   3ff1c:	ldr	r0, [r4, #20]
   3ff20:	ldrb	r2, [r4, #25]
   3ff24:	ldr	r3, [r4, #32]
   3ff28:	ldr	r1, [r4, #16]
   3ff2c:	mla	r6, r3, r2, r0
   3ff30:	mul	r5, r3, r2
   3ff34:	cmp	r6, r1
   3ff38:	bls	3ffa8 <flatcc_json_printer_bool_vector_field@@Base+0x2b8>
   3ff3c:	cmp	r0, r1
   3ff40:	bcc	3ff5c <flatcc_json_printer_bool_vector_field@@Base+0x26c>
   3ff44:	ldr	r2, [r4, #44]	; 0x2c
   3ff48:	mov	r0, r4
   3ff4c:	mov	r1, #0
   3ff50:	blx	r2
   3ff54:	ldr	r1, [r4, #16]
   3ff58:	ldr	r0, [r4, #20]
   3ff5c:	sub	r6, r1, r0
   3ff60:	cmp	r6, r5
   3ff64:	bcs	3ffa8 <flatcc_json_printer_bool_vector_field@@Base+0x2b8>
   3ff68:	mov	r1, #32
   3ff6c:	mov	r2, r6
   3ff70:	bl	14ef0 <memset@plt>
   3ff74:	ldr	r0, [r4, #20]
   3ff78:	ldr	r2, [r4, #44]	; 0x2c
   3ff7c:	mov	r1, #0
   3ff80:	add	r0, r0, r6
   3ff84:	str	r0, [r4, #20]
   3ff88:	mov	r0, r4
   3ff8c:	blx	r2
   3ff90:	ldr	r1, [r4, #16]
   3ff94:	ldr	r0, [r4, #20]
   3ff98:	sub	r5, r5, r6
   3ff9c:	sub	r6, r1, r0
   3ffa0:	cmp	r5, r6
   3ffa4:	bhi	3ff68 <flatcc_json_printer_bool_vector_field@@Base+0x278>
   3ffa8:	mov	r1, #32
   3ffac:	mov	r2, r5
   3ffb0:	bl	14ef0 <memset@plt>
   3ffb4:	ldr	r0, [r4, #20]
   3ffb8:	add	r0, r0, r5
   3ffbc:	str	r0, [r4, #20]
   3ffc0:	ldrb	r1, [r7]
   3ffc4:	sub	r9, r9, #1
   3ffc8:	cmp	r1, #0
   3ffcc:	bne	40004 <flatcc_json_printer_bool_vector_field@@Base+0x314>
   3ffd0:	b	40020 <flatcc_json_printer_bool_vector_field@@Base+0x330>
   3ffd4:	ldr	r1, [r4, #16]
   3ffd8:	cmp	r0, r1
   3ffdc:	bcc	3fff4 <flatcc_json_printer_bool_vector_field@@Base+0x304>
   3ffe0:	ldr	r2, [r4, #44]	; 0x2c
   3ffe4:	mov	r0, r4
   3ffe8:	mov	r1, #0
   3ffec:	blx	r2
   3fff0:	ldr	r0, [r4, #20]
   3fff4:	ldrb	r1, [r7]
   3fff8:	sub	r9, r9, #1
   3fffc:	cmp	r1, #0
   40000:	beq	40020 <flatcc_json_printer_bool_vector_field@@Base+0x330>
   40004:	mov	r1, #0
   40008:	strb	r1, [r0, #4]
   4000c:	movw	r1, #29300	; 0x7274
   40010:	movt	r1, #25973	; 0x6575
   40014:	str	r1, [r0]
   40018:	mov	r0, #4
   4001c:	b	40038 <flatcc_json_printer_bool_vector_field@@Base+0x348>
   40020:	mov	r1, #101	; 0x65
   40024:	strh	r1, [r0, #4]
   40028:	movw	r1, #24934	; 0x6166
   4002c:	movt	r1, #29548	; 0x736c
   40030:	str	r1, [r0]
   40034:	mov	r0, #5
   40038:	ldr	r1, [r4, #20]
   4003c:	add	r7, r7, #1
   40040:	cmp	r9, #0
   40044:	add	r0, r1, r0
   40048:	str	r0, [r4, #20]
   4004c:	bne	3fef4 <flatcc_json_printer_bool_vector_field@@Base+0x204>
   40050:	ldrb	r1, [r4, #25]
   40054:	ldr	r0, [r4, #20]
   40058:	cmp	r1, #0
   4005c:	beq	4011c <flatcc_json_printer_bool_vector_field@@Base+0x42c>
   40060:	add	r1, r0, #1
   40064:	str	r1, [r4, #20]
   40068:	mov	r1, #10
   4006c:	strb	r1, [r0]
   40070:	ldr	r0, [r4, #32]
   40074:	sub	r2, r0, #1
   40078:	str	r2, [r4, #32]
   4007c:	ldrb	r3, [r4, #25]
   40080:	ldr	r0, [r4, #20]
   40084:	ldr	r1, [r4, #16]
   40088:	mla	r7, r2, r3, r0
   4008c:	mul	r5, r2, r3
   40090:	cmp	r7, r1
   40094:	bls	40104 <flatcc_json_printer_bool_vector_field@@Base+0x414>
   40098:	cmp	r0, r1
   4009c:	bcc	400b8 <flatcc_json_printer_bool_vector_field@@Base+0x3c8>
   400a0:	ldr	r2, [r4, #44]	; 0x2c
   400a4:	mov	r0, r4
   400a8:	mov	r1, #0
   400ac:	blx	r2
   400b0:	ldr	r1, [r4, #16]
   400b4:	ldr	r0, [r4, #20]
   400b8:	sub	r6, r1, r0
   400bc:	cmp	r6, r5
   400c0:	bcs	40104 <flatcc_json_printer_bool_vector_field@@Base+0x414>
   400c4:	mov	r1, #32
   400c8:	mov	r2, r6
   400cc:	bl	14ef0 <memset@plt>
   400d0:	ldr	r0, [r4, #20]
   400d4:	ldr	r2, [r4, #44]	; 0x2c
   400d8:	mov	r1, #0
   400dc:	add	r0, r0, r6
   400e0:	str	r0, [r4, #20]
   400e4:	mov	r0, r4
   400e8:	blx	r2
   400ec:	ldr	r1, [r4, #16]
   400f0:	ldr	r0, [r4, #20]
   400f4:	sub	r5, r5, r6
   400f8:	sub	r6, r1, r0
   400fc:	cmp	r5, r6
   40100:	bhi	400c4 <flatcc_json_printer_bool_vector_field@@Base+0x3d4>
   40104:	mov	r1, #32
   40108:	mov	r2, r5
   4010c:	bl	14ef0 <memset@plt>
   40110:	ldr	r0, [r4, #20]
   40114:	add	r0, r0, r5
   40118:	str	r0, [r4, #20]
   4011c:	add	r1, r0, #1
   40120:	str	r1, [r4, #20]
   40124:	mov	r1, #93	; 0x5d
   40128:	strb	r1, [r0]
   4012c:	sub	sp, fp, #28
   40130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040134 <flatcc_json_printer_float_vector_field@@Base>:
   40134:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40138:	add	fp, sp, #28
   4013c:	sub	sp, sp, #4
   40140:	mov	r4, r0
   40144:	mov	r0, #4
   40148:	add	r0, r0, r2, lsl #1
   4014c:	ldr	r2, [r1, #8]
   40150:	cmp	r0, r2
   40154:	bge	40174 <flatcc_json_printer_float_vector_field@@Base+0x40>
   40158:	ldr	r2, [r1, #4]
   4015c:	add	r0, r2, r0
   40160:	ldrh	r0, [r0]
   40164:	cmp	r0, #0
   40168:	ldrne	r2, [r1]
   4016c:	addsne	r8, r2, r0
   40170:	bne	4017c <flatcc_json_printer_float_vector_field@@Base+0x48>
   40174:	sub	sp, fp, #28
   40178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4017c:	ldr	r0, [r1, #16]
   40180:	ldr	r2, [fp, #8]
   40184:	add	r7, r0, #1
   40188:	cmp	r0, #0
   4018c:	str	r7, [r1, #16]
   40190:	ldrne	r0, [r4, #20]
   40194:	addne	r1, r0, #1
   40198:	strne	r1, [r4, #20]
   4019c:	movne	r1, #44	; 0x2c
   401a0:	strbne	r1, [r0]
   401a4:	mov	r1, r3
   401a8:	ldr	r0, [r8]
   401ac:	ldr	r7, [r8, r0]!
   401b0:	mov	r0, r4
   401b4:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   401b8:	ldr	r1, [r4, #32]
   401bc:	ldr	r0, [r4, #20]
   401c0:	cmp	r7, #0
   401c4:	add	r1, r1, #1
   401c8:	str	r1, [r4, #32]
   401cc:	add	r1, r0, #1
   401d0:	str	r1, [r4, #20]
   401d4:	mov	r1, #91	; 0x5b
   401d8:	strb	r1, [r0]
   401dc:	beq	40410 <flatcc_json_printer_float_vector_field@@Base+0x2dc>
   401e0:	ldrb	r1, [r4, #25]
   401e4:	ldr	r0, [r4, #20]
   401e8:	cmp	r1, #0
   401ec:	beq	402a8 <flatcc_json_printer_float_vector_field@@Base+0x174>
   401f0:	add	r1, r0, #1
   401f4:	str	r1, [r4, #20]
   401f8:	mov	r1, #10
   401fc:	strb	r1, [r0]
   40200:	ldr	r0, [r4, #20]
   40204:	ldrb	r2, [r4, #25]
   40208:	ldr	r3, [r4, #32]
   4020c:	ldr	r1, [r4, #16]
   40210:	mla	r6, r3, r2, r0
   40214:	mul	r5, r3, r2
   40218:	cmp	r6, r1
   4021c:	bls	4028c <flatcc_json_printer_float_vector_field@@Base+0x158>
   40220:	cmp	r0, r1
   40224:	bcc	40240 <flatcc_json_printer_float_vector_field@@Base+0x10c>
   40228:	ldr	r2, [r4, #44]	; 0x2c
   4022c:	mov	r0, r4
   40230:	mov	r1, #0
   40234:	blx	r2
   40238:	ldr	r1, [r4, #16]
   4023c:	ldr	r0, [r4, #20]
   40240:	sub	r6, r1, r0
   40244:	cmp	r6, r5
   40248:	bcs	4028c <flatcc_json_printer_float_vector_field@@Base+0x158>
   4024c:	mov	r1, #32
   40250:	mov	r2, r6
   40254:	bl	14ef0 <memset@plt>
   40258:	ldr	r0, [r4, #20]
   4025c:	ldr	r2, [r4, #44]	; 0x2c
   40260:	mov	r1, #0
   40264:	add	r0, r0, r6
   40268:	str	r0, [r4, #20]
   4026c:	mov	r0, r4
   40270:	blx	r2
   40274:	ldr	r1, [r4, #16]
   40278:	ldr	r0, [r4, #20]
   4027c:	sub	r5, r5, r6
   40280:	sub	r6, r1, r0
   40284:	cmp	r5, r6
   40288:	bhi	4024c <flatcc_json_printer_float_vector_field@@Base+0x118>
   4028c:	mov	r1, #32
   40290:	mov	r2, r5
   40294:	bl	14ef0 <memset@plt>
   40298:	ldr	r0, [r4, #20]
   4029c:	add	r0, r0, r5
   402a0:	str	r0, [r4, #20]
   402a4:	b	402c8 <flatcc_json_printer_float_vector_field@@Base+0x194>
   402a8:	ldr	r1, [r4, #16]
   402ac:	cmp	r0, r1
   402b0:	bcc	402c8 <flatcc_json_printer_float_vector_field@@Base+0x194>
   402b4:	ldr	r2, [r4, #44]	; 0x2c
   402b8:	mov	r0, r4
   402bc:	mov	r1, #0
   402c0:	blx	r2
   402c4:	ldr	r0, [r4, #20]
   402c8:	vldr	s0, [r8, #4]
   402cc:	vcvt.f64.f32	d0, s0
   402d0:	bl	38e30 <flatcc_json_printer_fmt_float@@Base+0x8>
   402d4:	ldr	r1, [r4, #20]
   402d8:	subs	r9, r7, #1
   402dc:	add	r0, r1, r0
   402e0:	str	r0, [r4, #20]
   402e4:	beq	40410 <flatcc_json_printer_float_vector_field@@Base+0x2dc>
   402e8:	ldr	r0, [r4, #20]
   402ec:	add	r7, r8, #8
   402f0:	mov	r8, #44	; 0x2c
   402f4:	mov	sl, #10
   402f8:	add	r1, r0, #1
   402fc:	sub	r9, r9, #1
   40300:	str	r1, [r4, #20]
   40304:	strb	r8, [r0]
   40308:	ldrb	r1, [r4, #25]
   4030c:	ldr	r0, [r4, #20]
   40310:	cmp	r1, #0
   40314:	beq	403cc <flatcc_json_printer_float_vector_field@@Base+0x298>
   40318:	add	r1, r0, #1
   4031c:	str	r1, [r4, #20]
   40320:	strb	sl, [r0]
   40324:	ldr	r0, [r4, #20]
   40328:	ldrb	r2, [r4, #25]
   4032c:	ldr	r3, [r4, #32]
   40330:	ldr	r1, [r4, #16]
   40334:	mla	r6, r3, r2, r0
   40338:	mul	r5, r3, r2
   4033c:	cmp	r6, r1
   40340:	bls	403b0 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   40344:	cmp	r0, r1
   40348:	bcc	40364 <flatcc_json_printer_float_vector_field@@Base+0x230>
   4034c:	ldr	r2, [r4, #44]	; 0x2c
   40350:	mov	r0, r4
   40354:	mov	r1, #0
   40358:	blx	r2
   4035c:	ldr	r1, [r4, #16]
   40360:	ldr	r0, [r4, #20]
   40364:	sub	r6, r1, r0
   40368:	cmp	r6, r5
   4036c:	bcs	403b0 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   40370:	mov	r1, #32
   40374:	mov	r2, r6
   40378:	bl	14ef0 <memset@plt>
   4037c:	ldr	r0, [r4, #20]
   40380:	ldr	r2, [r4, #44]	; 0x2c
   40384:	mov	r1, #0
   40388:	add	r0, r0, r6
   4038c:	str	r0, [r4, #20]
   40390:	mov	r0, r4
   40394:	blx	r2
   40398:	ldr	r1, [r4, #16]
   4039c:	ldr	r0, [r4, #20]
   403a0:	sub	r5, r5, r6
   403a4:	sub	r6, r1, r0
   403a8:	cmp	r5, r6
   403ac:	bhi	40370 <flatcc_json_printer_float_vector_field@@Base+0x23c>
   403b0:	mov	r1, #32
   403b4:	mov	r2, r5
   403b8:	bl	14ef0 <memset@plt>
   403bc:	ldr	r0, [r4, #20]
   403c0:	add	r0, r0, r5
   403c4:	str	r0, [r4, #20]
   403c8:	b	403ec <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   403cc:	ldr	r1, [r4, #16]
   403d0:	cmp	r0, r1
   403d4:	bcc	403ec <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   403d8:	ldr	r2, [r4, #44]	; 0x2c
   403dc:	mov	r0, r4
   403e0:	mov	r1, #0
   403e4:	blx	r2
   403e8:	ldr	r0, [r4, #20]
   403ec:	vldr	s0, [r7]
   403f0:	vcvt.f64.f32	d0, s0
   403f4:	bl	38e30 <flatcc_json_printer_fmt_float@@Base+0x8>
   403f8:	ldr	r1, [r4, #20]
   403fc:	add	r7, r7, #4
   40400:	cmp	r9, #0
   40404:	add	r0, r1, r0
   40408:	str	r0, [r4, #20]
   4040c:	bne	402f8 <flatcc_json_printer_float_vector_field@@Base+0x1c4>
   40410:	ldrb	r1, [r4, #25]
   40414:	ldr	r0, [r4, #20]
   40418:	cmp	r1, #0
   4041c:	beq	404dc <flatcc_json_printer_float_vector_field@@Base+0x3a8>
   40420:	add	r1, r0, #1
   40424:	str	r1, [r4, #20]
   40428:	mov	r1, #10
   4042c:	strb	r1, [r0]
   40430:	ldr	r0, [r4, #32]
   40434:	sub	r2, r0, #1
   40438:	str	r2, [r4, #32]
   4043c:	ldrb	r3, [r4, #25]
   40440:	ldr	r0, [r4, #20]
   40444:	ldr	r1, [r4, #16]
   40448:	mla	r7, r2, r3, r0
   4044c:	mul	r5, r2, r3
   40450:	cmp	r7, r1
   40454:	bls	404c4 <flatcc_json_printer_float_vector_field@@Base+0x390>
   40458:	cmp	r0, r1
   4045c:	bcc	40478 <flatcc_json_printer_float_vector_field@@Base+0x344>
   40460:	ldr	r2, [r4, #44]	; 0x2c
   40464:	mov	r0, r4
   40468:	mov	r1, #0
   4046c:	blx	r2
   40470:	ldr	r1, [r4, #16]
   40474:	ldr	r0, [r4, #20]
   40478:	sub	r6, r1, r0
   4047c:	cmp	r6, r5
   40480:	bcs	404c4 <flatcc_json_printer_float_vector_field@@Base+0x390>
   40484:	mov	r1, #32
   40488:	mov	r2, r6
   4048c:	bl	14ef0 <memset@plt>
   40490:	ldr	r0, [r4, #20]
   40494:	ldr	r2, [r4, #44]	; 0x2c
   40498:	mov	r1, #0
   4049c:	add	r0, r0, r6
   404a0:	str	r0, [r4, #20]
   404a4:	mov	r0, r4
   404a8:	blx	r2
   404ac:	ldr	r1, [r4, #16]
   404b0:	ldr	r0, [r4, #20]
   404b4:	sub	r5, r5, r6
   404b8:	sub	r6, r1, r0
   404bc:	cmp	r5, r6
   404c0:	bhi	40484 <flatcc_json_printer_float_vector_field@@Base+0x350>
   404c4:	mov	r1, #32
   404c8:	mov	r2, r5
   404cc:	bl	14ef0 <memset@plt>
   404d0:	ldr	r0, [r4, #20]
   404d4:	add	r0, r0, r5
   404d8:	str	r0, [r4, #20]
   404dc:	add	r1, r0, #1
   404e0:	str	r1, [r4, #20]
   404e4:	mov	r1, #93	; 0x5d
   404e8:	strb	r1, [r0]
   404ec:	sub	sp, fp, #28
   404f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000404f4 <flatcc_json_printer_double_vector_field@@Base>:
   404f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   404f8:	add	fp, sp, #28
   404fc:	sub	sp, sp, #4
   40500:	mov	r4, r0
   40504:	mov	r0, #4
   40508:	add	r0, r0, r2, lsl #1
   4050c:	ldr	r2, [r1, #8]
   40510:	cmp	r0, r2
   40514:	bge	40534 <flatcc_json_printer_double_vector_field@@Base+0x40>
   40518:	ldr	r2, [r1, #4]
   4051c:	add	r0, r2, r0
   40520:	ldrh	r0, [r0]
   40524:	cmp	r0, #0
   40528:	ldrne	r2, [r1]
   4052c:	addsne	r8, r2, r0
   40530:	bne	4053c <flatcc_json_printer_double_vector_field@@Base+0x48>
   40534:	sub	sp, fp, #28
   40538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4053c:	ldr	r0, [r1, #16]
   40540:	ldr	r2, [fp, #8]
   40544:	add	r7, r0, #1
   40548:	cmp	r0, #0
   4054c:	str	r7, [r1, #16]
   40550:	ldrne	r0, [r4, #20]
   40554:	addne	r1, r0, #1
   40558:	strne	r1, [r4, #20]
   4055c:	movne	r1, #44	; 0x2c
   40560:	strbne	r1, [r0]
   40564:	mov	r1, r3
   40568:	ldr	r0, [r8]
   4056c:	ldr	r7, [r8, r0]!
   40570:	mov	r0, r4
   40574:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   40578:	ldr	r1, [r4, #32]
   4057c:	ldr	r0, [r4, #20]
   40580:	cmp	r7, #0
   40584:	add	r1, r1, #1
   40588:	str	r1, [r4, #32]
   4058c:	add	r1, r0, #1
   40590:	str	r1, [r4, #20]
   40594:	mov	r1, #91	; 0x5b
   40598:	strb	r1, [r0]
   4059c:	beq	407c8 <flatcc_json_printer_double_vector_field@@Base+0x2d4>
   405a0:	ldrb	r1, [r4, #25]
   405a4:	ldr	r0, [r4, #20]
   405a8:	cmp	r1, #0
   405ac:	beq	40668 <flatcc_json_printer_double_vector_field@@Base+0x174>
   405b0:	add	r1, r0, #1
   405b4:	str	r1, [r4, #20]
   405b8:	mov	r1, #10
   405bc:	strb	r1, [r0]
   405c0:	ldr	r0, [r4, #20]
   405c4:	ldrb	r2, [r4, #25]
   405c8:	ldr	r3, [r4, #32]
   405cc:	ldr	r1, [r4, #16]
   405d0:	mla	r6, r3, r2, r0
   405d4:	mul	r5, r3, r2
   405d8:	cmp	r6, r1
   405dc:	bls	4064c <flatcc_json_printer_double_vector_field@@Base+0x158>
   405e0:	cmp	r0, r1
   405e4:	bcc	40600 <flatcc_json_printer_double_vector_field@@Base+0x10c>
   405e8:	ldr	r2, [r4, #44]	; 0x2c
   405ec:	mov	r0, r4
   405f0:	mov	r1, #0
   405f4:	blx	r2
   405f8:	ldr	r1, [r4, #16]
   405fc:	ldr	r0, [r4, #20]
   40600:	sub	r6, r1, r0
   40604:	cmp	r6, r5
   40608:	bcs	4064c <flatcc_json_printer_double_vector_field@@Base+0x158>
   4060c:	mov	r1, #32
   40610:	mov	r2, r6
   40614:	bl	14ef0 <memset@plt>
   40618:	ldr	r0, [r4, #20]
   4061c:	ldr	r2, [r4, #44]	; 0x2c
   40620:	mov	r1, #0
   40624:	add	r0, r0, r6
   40628:	str	r0, [r4, #20]
   4062c:	mov	r0, r4
   40630:	blx	r2
   40634:	ldr	r1, [r4, #16]
   40638:	ldr	r0, [r4, #20]
   4063c:	sub	r5, r5, r6
   40640:	sub	r6, r1, r0
   40644:	cmp	r5, r6
   40648:	bhi	4060c <flatcc_json_printer_double_vector_field@@Base+0x118>
   4064c:	mov	r1, #32
   40650:	mov	r2, r5
   40654:	bl	14ef0 <memset@plt>
   40658:	ldr	r0, [r4, #20]
   4065c:	add	r0, r0, r5
   40660:	str	r0, [r4, #20]
   40664:	b	40688 <flatcc_json_printer_double_vector_field@@Base+0x194>
   40668:	ldr	r1, [r4, #16]
   4066c:	cmp	r0, r1
   40670:	bcc	40688 <flatcc_json_printer_double_vector_field@@Base+0x194>
   40674:	ldr	r2, [r4, #44]	; 0x2c
   40678:	mov	r0, r4
   4067c:	mov	r1, #0
   40680:	blx	r2
   40684:	ldr	r0, [r4, #20]
   40688:	vldr	d0, [r8, #4]
   4068c:	bl	38e30 <flatcc_json_printer_fmt_float@@Base+0x8>
   40690:	ldr	r1, [r4, #20]
   40694:	subs	r9, r7, #1
   40698:	add	r0, r1, r0
   4069c:	str	r0, [r4, #20]
   406a0:	beq	407c8 <flatcc_json_printer_double_vector_field@@Base+0x2d4>
   406a4:	ldr	r0, [r4, #20]
   406a8:	add	r7, r8, #12
   406ac:	mov	r8, #44	; 0x2c
   406b0:	mov	sl, #10
   406b4:	add	r1, r0, #1
   406b8:	sub	r9, r9, #1
   406bc:	str	r1, [r4, #20]
   406c0:	strb	r8, [r0]
   406c4:	ldrb	r1, [r4, #25]
   406c8:	ldr	r0, [r4, #20]
   406cc:	cmp	r1, #0
   406d0:	beq	40788 <flatcc_json_printer_double_vector_field@@Base+0x294>
   406d4:	add	r1, r0, #1
   406d8:	str	r1, [r4, #20]
   406dc:	strb	sl, [r0]
   406e0:	ldr	r0, [r4, #20]
   406e4:	ldrb	r2, [r4, #25]
   406e8:	ldr	r3, [r4, #32]
   406ec:	ldr	r1, [r4, #16]
   406f0:	mla	r6, r3, r2, r0
   406f4:	mul	r5, r3, r2
   406f8:	cmp	r6, r1
   406fc:	bls	4076c <flatcc_json_printer_double_vector_field@@Base+0x278>
   40700:	cmp	r0, r1
   40704:	bcc	40720 <flatcc_json_printer_double_vector_field@@Base+0x22c>
   40708:	ldr	r2, [r4, #44]	; 0x2c
   4070c:	mov	r0, r4
   40710:	mov	r1, #0
   40714:	blx	r2
   40718:	ldr	r1, [r4, #16]
   4071c:	ldr	r0, [r4, #20]
   40720:	sub	r6, r1, r0
   40724:	cmp	r6, r5
   40728:	bcs	4076c <flatcc_json_printer_double_vector_field@@Base+0x278>
   4072c:	mov	r1, #32
   40730:	mov	r2, r6
   40734:	bl	14ef0 <memset@plt>
   40738:	ldr	r0, [r4, #20]
   4073c:	ldr	r2, [r4, #44]	; 0x2c
   40740:	mov	r1, #0
   40744:	add	r0, r0, r6
   40748:	str	r0, [r4, #20]
   4074c:	mov	r0, r4
   40750:	blx	r2
   40754:	ldr	r1, [r4, #16]
   40758:	ldr	r0, [r4, #20]
   4075c:	sub	r5, r5, r6
   40760:	sub	r6, r1, r0
   40764:	cmp	r5, r6
   40768:	bhi	4072c <flatcc_json_printer_double_vector_field@@Base+0x238>
   4076c:	mov	r1, #32
   40770:	mov	r2, r5
   40774:	bl	14ef0 <memset@plt>
   40778:	ldr	r0, [r4, #20]
   4077c:	add	r0, r0, r5
   40780:	str	r0, [r4, #20]
   40784:	b	407a8 <flatcc_json_printer_double_vector_field@@Base+0x2b4>
   40788:	ldr	r1, [r4, #16]
   4078c:	cmp	r0, r1
   40790:	bcc	407a8 <flatcc_json_printer_double_vector_field@@Base+0x2b4>
   40794:	ldr	r2, [r4, #44]	; 0x2c
   40798:	mov	r0, r4
   4079c:	mov	r1, #0
   407a0:	blx	r2
   407a4:	ldr	r0, [r4, #20]
   407a8:	vldr	d0, [r7]
   407ac:	bl	38e30 <flatcc_json_printer_fmt_float@@Base+0x8>
   407b0:	ldr	r1, [r4, #20]
   407b4:	add	r7, r7, #8
   407b8:	cmp	r9, #0
   407bc:	add	r0, r1, r0
   407c0:	str	r0, [r4, #20]
   407c4:	bne	406b4 <flatcc_json_printer_double_vector_field@@Base+0x1c0>
   407c8:	ldrb	r1, [r4, #25]
   407cc:	ldr	r0, [r4, #20]
   407d0:	cmp	r1, #0
   407d4:	beq	40894 <flatcc_json_printer_double_vector_field@@Base+0x3a0>
   407d8:	add	r1, r0, #1
   407dc:	str	r1, [r4, #20]
   407e0:	mov	r1, #10
   407e4:	strb	r1, [r0]
   407e8:	ldr	r0, [r4, #32]
   407ec:	sub	r2, r0, #1
   407f0:	str	r2, [r4, #32]
   407f4:	ldrb	r3, [r4, #25]
   407f8:	ldr	r0, [r4, #20]
   407fc:	ldr	r1, [r4, #16]
   40800:	mla	r7, r2, r3, r0
   40804:	mul	r5, r2, r3
   40808:	cmp	r7, r1
   4080c:	bls	4087c <flatcc_json_printer_double_vector_field@@Base+0x388>
   40810:	cmp	r0, r1
   40814:	bcc	40830 <flatcc_json_printer_double_vector_field@@Base+0x33c>
   40818:	ldr	r2, [r4, #44]	; 0x2c
   4081c:	mov	r0, r4
   40820:	mov	r1, #0
   40824:	blx	r2
   40828:	ldr	r1, [r4, #16]
   4082c:	ldr	r0, [r4, #20]
   40830:	sub	r6, r1, r0
   40834:	cmp	r6, r5
   40838:	bcs	4087c <flatcc_json_printer_double_vector_field@@Base+0x388>
   4083c:	mov	r1, #32
   40840:	mov	r2, r6
   40844:	bl	14ef0 <memset@plt>
   40848:	ldr	r0, [r4, #20]
   4084c:	ldr	r2, [r4, #44]	; 0x2c
   40850:	mov	r1, #0
   40854:	add	r0, r0, r6
   40858:	str	r0, [r4, #20]
   4085c:	mov	r0, r4
   40860:	blx	r2
   40864:	ldr	r1, [r4, #16]
   40868:	ldr	r0, [r4, #20]
   4086c:	sub	r5, r5, r6
   40870:	sub	r6, r1, r0
   40874:	cmp	r5, r6
   40878:	bhi	4083c <flatcc_json_printer_double_vector_field@@Base+0x348>
   4087c:	mov	r1, #32
   40880:	mov	r2, r5
   40884:	bl	14ef0 <memset@plt>
   40888:	ldr	r0, [r4, #20]
   4088c:	add	r0, r0, r5
   40890:	str	r0, [r4, #20]
   40894:	add	r1, r0, #1
   40898:	str	r1, [r4, #20]
   4089c:	mov	r1, #93	; 0x5d
   408a0:	strb	r1, [r0]
   408a4:	sub	sp, fp, #28
   408a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000408ac <flatcc_json_printer_utype_enum_vector_field@@Base>:
   408ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   408b0:	add	fp, sp, #28
   408b4:	sub	sp, sp, #4
   408b8:	mov	r4, r0
   408bc:	ldrb	r0, [r0, #27]
   408c0:	cmp	r0, #0
   408c4:	beq	408d8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   408c8:	mov	r0, r4
   408cc:	sub	sp, fp, #28
   408d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   408d4:	b	3d690 <flatcc_json_printer_utype_vector_field@@Base>
   408d8:	mov	r0, #4
   408dc:	add	r0, r0, r2, lsl #1
   408e0:	ldr	r2, [r1, #8]
   408e4:	cmp	r0, r2
   408e8:	bge	40908 <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   408ec:	ldr	r2, [r1, #4]
   408f0:	add	r0, r2, r0
   408f4:	ldrh	r0, [r0]
   408f8:	cmp	r0, #0
   408fc:	ldrne	r2, [r1]
   40900:	addsne	r8, r2, r0
   40904:	bne	40910 <flatcc_json_printer_utype_enum_vector_field@@Base+0x64>
   40908:	sub	sp, fp, #28
   4090c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40910:	ldr	r0, [r1, #16]
   40914:	ldr	sl, [fp, #12]
   40918:	ldr	r2, [fp, #8]
   4091c:	add	r7, r0, #1
   40920:	cmp	r0, #0
   40924:	str	r7, [r1, #16]
   40928:	ldrne	r0, [r4, #20]
   4092c:	addne	r1, r0, #1
   40930:	strne	r1, [r4, #20]
   40934:	movne	r1, #44	; 0x2c
   40938:	strbne	r1, [r0]
   4093c:	mov	r1, r3
   40940:	ldr	r0, [r8]
   40944:	ldr	r9, [r8, r0]!
   40948:	mov	r0, r4
   4094c:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   40950:	ldr	r1, [r4, #32]
   40954:	ldr	r0, [r4, #20]
   40958:	cmp	r9, #0
   4095c:	add	r1, r1, #1
   40960:	str	r1, [r4, #32]
   40964:	add	r1, r0, #1
   40968:	str	r1, [r4, #20]
   4096c:	mov	r1, #91	; 0x5b
   40970:	strb	r1, [r0]
   40974:	beq	40b84 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d8>
   40978:	ldrb	r1, [r4, #25]
   4097c:	ldr	r0, [r4, #20]
   40980:	cmp	r1, #0
   40984:	beq	40a40 <flatcc_json_printer_utype_enum_vector_field@@Base+0x194>
   40988:	add	r1, r0, #1
   4098c:	str	r1, [r4, #20]
   40990:	mov	r1, #10
   40994:	strb	r1, [r0]
   40998:	ldr	r0, [r4, #20]
   4099c:	ldrb	r2, [r4, #25]
   409a0:	ldr	r3, [r4, #32]
   409a4:	ldr	r1, [r4, #16]
   409a8:	mla	r7, r3, r2, r0
   409ac:	mul	r5, r3, r2
   409b0:	cmp	r7, r1
   409b4:	bls	40a24 <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
   409b8:	cmp	r0, r1
   409bc:	bcc	409d8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x12c>
   409c0:	ldr	r2, [r4, #44]	; 0x2c
   409c4:	mov	r0, r4
   409c8:	mov	r1, #0
   409cc:	blx	r2
   409d0:	ldr	r1, [r4, #16]
   409d4:	ldr	r0, [r4, #20]
   409d8:	sub	r6, r1, r0
   409dc:	cmp	r6, r5
   409e0:	bcs	40a24 <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
   409e4:	mov	r1, #32
   409e8:	mov	r2, r6
   409ec:	bl	14ef0 <memset@plt>
   409f0:	ldr	r0, [r4, #20]
   409f4:	ldr	r2, [r4, #44]	; 0x2c
   409f8:	mov	r1, #0
   409fc:	add	r0, r0, r6
   40a00:	str	r0, [r4, #20]
   40a04:	mov	r0, r4
   40a08:	blx	r2
   40a0c:	ldr	r1, [r4, #16]
   40a10:	ldr	r0, [r4, #20]
   40a14:	sub	r5, r5, r6
   40a18:	sub	r6, r1, r0
   40a1c:	cmp	r5, r6
   40a20:	bhi	409e4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x138>
   40a24:	mov	r1, #32
   40a28:	mov	r2, r5
   40a2c:	bl	14ef0 <memset@plt>
   40a30:	ldr	r0, [r4, #20]
   40a34:	add	r0, r0, r5
   40a38:	str	r0, [r4, #20]
   40a3c:	b	40a5c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   40a40:	ldr	r1, [r4, #16]
   40a44:	cmp	r0, r1
   40a48:	bcc	40a5c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   40a4c:	ldr	r2, [r4, #44]	; 0x2c
   40a50:	mov	r0, r4
   40a54:	mov	r1, #0
   40a58:	blx	r2
   40a5c:	ldrb	r1, [r8, #4]
   40a60:	mov	r0, r4
   40a64:	blx	sl
   40a68:	subs	r9, r9, #1
   40a6c:	beq	40b84 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d8>
   40a70:	add	r7, r8, #5
   40a74:	mov	r8, #44	; 0x2c
   40a78:	ldr	r0, [r4, #20]
   40a7c:	sub	r9, r9, #1
   40a80:	add	r1, r0, #1
   40a84:	str	r1, [r4, #20]
   40a88:	strb	r8, [r0]
   40a8c:	ldrb	r1, [r4, #25]
   40a90:	ldr	r0, [r4, #20]
   40a94:	cmp	r1, #0
   40a98:	beq	40b54 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a8>
   40a9c:	add	r1, r0, #1
   40aa0:	str	r1, [r4, #20]
   40aa4:	mov	r1, #10
   40aa8:	strb	r1, [r0]
   40aac:	ldr	r0, [r4, #20]
   40ab0:	ldrb	r2, [r4, #25]
   40ab4:	ldr	r3, [r4, #32]
   40ab8:	ldr	r1, [r4, #16]
   40abc:	mla	r6, r3, r2, r0
   40ac0:	mul	r5, r3, r2
   40ac4:	cmp	r6, r1
   40ac8:	bls	40b38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   40acc:	cmp	r0, r1
   40ad0:	bcc	40aec <flatcc_json_printer_utype_enum_vector_field@@Base+0x240>
   40ad4:	ldr	r2, [r4, #44]	; 0x2c
   40ad8:	mov	r0, r4
   40adc:	mov	r1, #0
   40ae0:	blx	r2
   40ae4:	ldr	r1, [r4, #16]
   40ae8:	ldr	r0, [r4, #20]
   40aec:	sub	r6, r1, r0
   40af0:	cmp	r6, r5
   40af4:	bcs	40b38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   40af8:	mov	r1, #32
   40afc:	mov	r2, r6
   40b00:	bl	14ef0 <memset@plt>
   40b04:	ldr	r0, [r4, #20]
   40b08:	ldr	r2, [r4, #44]	; 0x2c
   40b0c:	mov	r1, #0
   40b10:	add	r0, r0, r6
   40b14:	str	r0, [r4, #20]
   40b18:	mov	r0, r4
   40b1c:	blx	r2
   40b20:	ldr	r1, [r4, #16]
   40b24:	ldr	r0, [r4, #20]
   40b28:	sub	r5, r5, r6
   40b2c:	sub	r6, r1, r0
   40b30:	cmp	r5, r6
   40b34:	bhi	40af8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x24c>
   40b38:	mov	r1, #32
   40b3c:	mov	r2, r5
   40b40:	bl	14ef0 <memset@plt>
   40b44:	ldr	r0, [r4, #20]
   40b48:	add	r0, r0, r5
   40b4c:	str	r0, [r4, #20]
   40b50:	b	40b70 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   40b54:	ldr	r1, [r4, #16]
   40b58:	cmp	r0, r1
   40b5c:	bcc	40b70 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   40b60:	ldr	r2, [r4, #44]	; 0x2c
   40b64:	mov	r0, r4
   40b68:	mov	r1, #0
   40b6c:	blx	r2
   40b70:	ldrb	r1, [r7], #1
   40b74:	mov	r0, r4
   40b78:	blx	sl
   40b7c:	cmp	r9, #0
   40b80:	bne	40a78 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1cc>
   40b84:	ldrb	r1, [r4, #25]
   40b88:	ldr	r0, [r4, #20]
   40b8c:	cmp	r1, #0
   40b90:	beq	40c50 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3a4>
   40b94:	add	r1, r0, #1
   40b98:	str	r1, [r4, #20]
   40b9c:	mov	r1, #10
   40ba0:	strb	r1, [r0]
   40ba4:	ldr	r0, [r4, #32]
   40ba8:	sub	r2, r0, #1
   40bac:	str	r2, [r4, #32]
   40bb0:	ldrb	r3, [r4, #25]
   40bb4:	ldr	r0, [r4, #20]
   40bb8:	ldr	r1, [r4, #16]
   40bbc:	mla	r7, r2, r3, r0
   40bc0:	mul	r5, r2, r3
   40bc4:	cmp	r7, r1
   40bc8:	bls	40c38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x38c>
   40bcc:	cmp	r0, r1
   40bd0:	bcc	40bec <flatcc_json_printer_utype_enum_vector_field@@Base+0x340>
   40bd4:	ldr	r2, [r4, #44]	; 0x2c
   40bd8:	mov	r0, r4
   40bdc:	mov	r1, #0
   40be0:	blx	r2
   40be4:	ldr	r1, [r4, #16]
   40be8:	ldr	r0, [r4, #20]
   40bec:	sub	r6, r1, r0
   40bf0:	cmp	r6, r5
   40bf4:	bcs	40c38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x38c>
   40bf8:	mov	r1, #32
   40bfc:	mov	r2, r6
   40c00:	bl	14ef0 <memset@plt>
   40c04:	ldr	r0, [r4, #20]
   40c08:	ldr	r2, [r4, #44]	; 0x2c
   40c0c:	mov	r1, #0
   40c10:	add	r0, r0, r6
   40c14:	str	r0, [r4, #20]
   40c18:	mov	r0, r4
   40c1c:	blx	r2
   40c20:	ldr	r1, [r4, #16]
   40c24:	ldr	r0, [r4, #20]
   40c28:	sub	r5, r5, r6
   40c2c:	sub	r6, r1, r0
   40c30:	cmp	r5, r6
   40c34:	bhi	40bf8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x34c>
   40c38:	mov	r1, #32
   40c3c:	mov	r2, r5
   40c40:	bl	14ef0 <memset@plt>
   40c44:	ldr	r0, [r4, #20]
   40c48:	add	r0, r0, r5
   40c4c:	str	r0, [r4, #20]
   40c50:	add	r1, r0, #1
   40c54:	str	r1, [r4, #20]
   40c58:	mov	r1, #93	; 0x5d
   40c5c:	strb	r1, [r0]
   40c60:	sub	sp, fp, #28
   40c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040c68 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   40c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40c6c:	add	fp, sp, #28
   40c70:	sub	sp, sp, #4
   40c74:	mov	r4, r0
   40c78:	ldrb	r0, [r0, #27]
   40c7c:	cmp	r0, #0
   40c80:	beq	40c94 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   40c84:	mov	r0, r4
   40c88:	sub	sp, fp, #28
   40c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40c90:	b	3dba0 <flatcc_json_printer_uint8_vector_field@@Base>
   40c94:	mov	r0, #4
   40c98:	add	r0, r0, r2, lsl #1
   40c9c:	ldr	r2, [r1, #8]
   40ca0:	cmp	r0, r2
   40ca4:	bge	40cc4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   40ca8:	ldr	r2, [r1, #4]
   40cac:	add	r0, r2, r0
   40cb0:	ldrh	r0, [r0]
   40cb4:	cmp	r0, #0
   40cb8:	ldrne	r2, [r1]
   40cbc:	addsne	r8, r2, r0
   40cc0:	bne	40ccc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x64>
   40cc4:	sub	sp, fp, #28
   40cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40ccc:	ldr	r0, [r1, #16]
   40cd0:	ldr	sl, [fp, #12]
   40cd4:	ldr	r2, [fp, #8]
   40cd8:	add	r7, r0, #1
   40cdc:	cmp	r0, #0
   40ce0:	str	r7, [r1, #16]
   40ce4:	ldrne	r0, [r4, #20]
   40ce8:	addne	r1, r0, #1
   40cec:	strne	r1, [r4, #20]
   40cf0:	movne	r1, #44	; 0x2c
   40cf4:	strbne	r1, [r0]
   40cf8:	mov	r1, r3
   40cfc:	ldr	r0, [r8]
   40d00:	ldr	r9, [r8, r0]!
   40d04:	mov	r0, r4
   40d08:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   40d0c:	ldr	r1, [r4, #32]
   40d10:	ldr	r0, [r4, #20]
   40d14:	cmp	r9, #0
   40d18:	add	r1, r1, #1
   40d1c:	str	r1, [r4, #32]
   40d20:	add	r1, r0, #1
   40d24:	str	r1, [r4, #20]
   40d28:	mov	r1, #91	; 0x5b
   40d2c:	strb	r1, [r0]
   40d30:	beq	40f40 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d8>
   40d34:	ldrb	r1, [r4, #25]
   40d38:	ldr	r0, [r4, #20]
   40d3c:	cmp	r1, #0
   40d40:	beq	40dfc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x194>
   40d44:	add	r1, r0, #1
   40d48:	str	r1, [r4, #20]
   40d4c:	mov	r1, #10
   40d50:	strb	r1, [r0]
   40d54:	ldr	r0, [r4, #20]
   40d58:	ldrb	r2, [r4, #25]
   40d5c:	ldr	r3, [r4, #32]
   40d60:	ldr	r1, [r4, #16]
   40d64:	mla	r7, r3, r2, r0
   40d68:	mul	r5, r3, r2
   40d6c:	cmp	r7, r1
   40d70:	bls	40de0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
   40d74:	cmp	r0, r1
   40d78:	bcc	40d94 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x12c>
   40d7c:	ldr	r2, [r4, #44]	; 0x2c
   40d80:	mov	r0, r4
   40d84:	mov	r1, #0
   40d88:	blx	r2
   40d8c:	ldr	r1, [r4, #16]
   40d90:	ldr	r0, [r4, #20]
   40d94:	sub	r6, r1, r0
   40d98:	cmp	r6, r5
   40d9c:	bcs	40de0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
   40da0:	mov	r1, #32
   40da4:	mov	r2, r6
   40da8:	bl	14ef0 <memset@plt>
   40dac:	ldr	r0, [r4, #20]
   40db0:	ldr	r2, [r4, #44]	; 0x2c
   40db4:	mov	r1, #0
   40db8:	add	r0, r0, r6
   40dbc:	str	r0, [r4, #20]
   40dc0:	mov	r0, r4
   40dc4:	blx	r2
   40dc8:	ldr	r1, [r4, #16]
   40dcc:	ldr	r0, [r4, #20]
   40dd0:	sub	r5, r5, r6
   40dd4:	sub	r6, r1, r0
   40dd8:	cmp	r5, r6
   40ddc:	bhi	40da0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x138>
   40de0:	mov	r1, #32
   40de4:	mov	r2, r5
   40de8:	bl	14ef0 <memset@plt>
   40dec:	ldr	r0, [r4, #20]
   40df0:	add	r0, r0, r5
   40df4:	str	r0, [r4, #20]
   40df8:	b	40e18 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   40dfc:	ldr	r1, [r4, #16]
   40e00:	cmp	r0, r1
   40e04:	bcc	40e18 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   40e08:	ldr	r2, [r4, #44]	; 0x2c
   40e0c:	mov	r0, r4
   40e10:	mov	r1, #0
   40e14:	blx	r2
   40e18:	ldrb	r1, [r8, #4]
   40e1c:	mov	r0, r4
   40e20:	blx	sl
   40e24:	subs	r9, r9, #1
   40e28:	beq	40f40 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d8>
   40e2c:	add	r7, r8, #5
   40e30:	mov	r8, #44	; 0x2c
   40e34:	ldr	r0, [r4, #20]
   40e38:	sub	r9, r9, #1
   40e3c:	add	r1, r0, #1
   40e40:	str	r1, [r4, #20]
   40e44:	strb	r8, [r0]
   40e48:	ldrb	r1, [r4, #25]
   40e4c:	ldr	r0, [r4, #20]
   40e50:	cmp	r1, #0
   40e54:	beq	40f10 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a8>
   40e58:	add	r1, r0, #1
   40e5c:	str	r1, [r4, #20]
   40e60:	mov	r1, #10
   40e64:	strb	r1, [r0]
   40e68:	ldr	r0, [r4, #20]
   40e6c:	ldrb	r2, [r4, #25]
   40e70:	ldr	r3, [r4, #32]
   40e74:	ldr	r1, [r4, #16]
   40e78:	mla	r6, r3, r2, r0
   40e7c:	mul	r5, r3, r2
   40e80:	cmp	r6, r1
   40e84:	bls	40ef4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   40e88:	cmp	r0, r1
   40e8c:	bcc	40ea8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x240>
   40e90:	ldr	r2, [r4, #44]	; 0x2c
   40e94:	mov	r0, r4
   40e98:	mov	r1, #0
   40e9c:	blx	r2
   40ea0:	ldr	r1, [r4, #16]
   40ea4:	ldr	r0, [r4, #20]
   40ea8:	sub	r6, r1, r0
   40eac:	cmp	r6, r5
   40eb0:	bcs	40ef4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   40eb4:	mov	r1, #32
   40eb8:	mov	r2, r6
   40ebc:	bl	14ef0 <memset@plt>
   40ec0:	ldr	r0, [r4, #20]
   40ec4:	ldr	r2, [r4, #44]	; 0x2c
   40ec8:	mov	r1, #0
   40ecc:	add	r0, r0, r6
   40ed0:	str	r0, [r4, #20]
   40ed4:	mov	r0, r4
   40ed8:	blx	r2
   40edc:	ldr	r1, [r4, #16]
   40ee0:	ldr	r0, [r4, #20]
   40ee4:	sub	r5, r5, r6
   40ee8:	sub	r6, r1, r0
   40eec:	cmp	r5, r6
   40ef0:	bhi	40eb4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x24c>
   40ef4:	mov	r1, #32
   40ef8:	mov	r2, r5
   40efc:	bl	14ef0 <memset@plt>
   40f00:	ldr	r0, [r4, #20]
   40f04:	add	r0, r0, r5
   40f08:	str	r0, [r4, #20]
   40f0c:	b	40f2c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   40f10:	ldr	r1, [r4, #16]
   40f14:	cmp	r0, r1
   40f18:	bcc	40f2c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   40f1c:	ldr	r2, [r4, #44]	; 0x2c
   40f20:	mov	r0, r4
   40f24:	mov	r1, #0
   40f28:	blx	r2
   40f2c:	ldrb	r1, [r7], #1
   40f30:	mov	r0, r4
   40f34:	blx	sl
   40f38:	cmp	r9, #0
   40f3c:	bne	40e34 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1cc>
   40f40:	ldrb	r1, [r4, #25]
   40f44:	ldr	r0, [r4, #20]
   40f48:	cmp	r1, #0
   40f4c:	beq	4100c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3a4>
   40f50:	add	r1, r0, #1
   40f54:	str	r1, [r4, #20]
   40f58:	mov	r1, #10
   40f5c:	strb	r1, [r0]
   40f60:	ldr	r0, [r4, #32]
   40f64:	sub	r2, r0, #1
   40f68:	str	r2, [r4, #32]
   40f6c:	ldrb	r3, [r4, #25]
   40f70:	ldr	r0, [r4, #20]
   40f74:	ldr	r1, [r4, #16]
   40f78:	mla	r7, r2, r3, r0
   40f7c:	mul	r5, r2, r3
   40f80:	cmp	r7, r1
   40f84:	bls	40ff4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38c>
   40f88:	cmp	r0, r1
   40f8c:	bcc	40fa8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x340>
   40f90:	ldr	r2, [r4, #44]	; 0x2c
   40f94:	mov	r0, r4
   40f98:	mov	r1, #0
   40f9c:	blx	r2
   40fa0:	ldr	r1, [r4, #16]
   40fa4:	ldr	r0, [r4, #20]
   40fa8:	sub	r6, r1, r0
   40fac:	cmp	r6, r5
   40fb0:	bcs	40ff4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38c>
   40fb4:	mov	r1, #32
   40fb8:	mov	r2, r6
   40fbc:	bl	14ef0 <memset@plt>
   40fc0:	ldr	r0, [r4, #20]
   40fc4:	ldr	r2, [r4, #44]	; 0x2c
   40fc8:	mov	r1, #0
   40fcc:	add	r0, r0, r6
   40fd0:	str	r0, [r4, #20]
   40fd4:	mov	r0, r4
   40fd8:	blx	r2
   40fdc:	ldr	r1, [r4, #16]
   40fe0:	ldr	r0, [r4, #20]
   40fe4:	sub	r5, r5, r6
   40fe8:	sub	r6, r1, r0
   40fec:	cmp	r5, r6
   40ff0:	bhi	40fb4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x34c>
   40ff4:	mov	r1, #32
   40ff8:	mov	r2, r5
   40ffc:	bl	14ef0 <memset@plt>
   41000:	ldr	r0, [r4, #20]
   41004:	add	r0, r0, r5
   41008:	str	r0, [r4, #20]
   4100c:	add	r1, r0, #1
   41010:	str	r1, [r4, #20]
   41014:	mov	r1, #93	; 0x5d
   41018:	strb	r1, [r0]
   4101c:	sub	sp, fp, #28
   41020:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041024 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   41024:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41028:	add	fp, sp, #28
   4102c:	sub	sp, sp, #4
   41030:	mov	r4, r0
   41034:	ldrb	r0, [r0, #27]
   41038:	cmp	r0, #0
   4103c:	beq	41050 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   41040:	mov	r0, r4
   41044:	sub	sp, fp, #28
   41048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4104c:	b	3e0b0 <flatcc_json_printer_uint16_vector_field@@Base>
   41050:	mov	r0, #4
   41054:	add	r0, r0, r2, lsl #1
   41058:	ldr	r2, [r1, #8]
   4105c:	cmp	r0, r2
   41060:	bge	41080 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   41064:	ldr	r2, [r1, #4]
   41068:	add	r0, r2, r0
   4106c:	ldrh	r0, [r0]
   41070:	cmp	r0, #0
   41074:	ldrne	r2, [r1]
   41078:	addsne	r8, r2, r0
   4107c:	bne	41088 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x64>
   41080:	sub	sp, fp, #28
   41084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41088:	ldr	r0, [r1, #16]
   4108c:	ldr	sl, [fp, #12]
   41090:	ldr	r2, [fp, #8]
   41094:	add	r7, r0, #1
   41098:	cmp	r0, #0
   4109c:	str	r7, [r1, #16]
   410a0:	ldrne	r0, [r4, #20]
   410a4:	addne	r1, r0, #1
   410a8:	strne	r1, [r4, #20]
   410ac:	movne	r1, #44	; 0x2c
   410b0:	strbne	r1, [r0]
   410b4:	mov	r1, r3
   410b8:	ldr	r0, [r8]
   410bc:	ldr	r9, [r8, r0]!
   410c0:	mov	r0, r4
   410c4:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   410c8:	ldr	r1, [r4, #32]
   410cc:	ldr	r0, [r4, #20]
   410d0:	cmp	r9, #0
   410d4:	add	r1, r1, #1
   410d8:	str	r1, [r4, #32]
   410dc:	add	r1, r0, #1
   410e0:	str	r1, [r4, #20]
   410e4:	mov	r1, #91	; 0x5b
   410e8:	strb	r1, [r0]
   410ec:	beq	412fc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d8>
   410f0:	ldrb	r1, [r4, #25]
   410f4:	ldr	r0, [r4, #20]
   410f8:	cmp	r1, #0
   410fc:	beq	411b8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x194>
   41100:	add	r1, r0, #1
   41104:	str	r1, [r4, #20]
   41108:	mov	r1, #10
   4110c:	strb	r1, [r0]
   41110:	ldr	r0, [r4, #20]
   41114:	ldrb	r2, [r4, #25]
   41118:	ldr	r3, [r4, #32]
   4111c:	ldr	r1, [r4, #16]
   41120:	mla	r7, r3, r2, r0
   41124:	mul	r5, r3, r2
   41128:	cmp	r7, r1
   4112c:	bls	4119c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
   41130:	cmp	r0, r1
   41134:	bcc	41150 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x12c>
   41138:	ldr	r2, [r4, #44]	; 0x2c
   4113c:	mov	r0, r4
   41140:	mov	r1, #0
   41144:	blx	r2
   41148:	ldr	r1, [r4, #16]
   4114c:	ldr	r0, [r4, #20]
   41150:	sub	r6, r1, r0
   41154:	cmp	r6, r5
   41158:	bcs	4119c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
   4115c:	mov	r1, #32
   41160:	mov	r2, r6
   41164:	bl	14ef0 <memset@plt>
   41168:	ldr	r0, [r4, #20]
   4116c:	ldr	r2, [r4, #44]	; 0x2c
   41170:	mov	r1, #0
   41174:	add	r0, r0, r6
   41178:	str	r0, [r4, #20]
   4117c:	mov	r0, r4
   41180:	blx	r2
   41184:	ldr	r1, [r4, #16]
   41188:	ldr	r0, [r4, #20]
   4118c:	sub	r5, r5, r6
   41190:	sub	r6, r1, r0
   41194:	cmp	r5, r6
   41198:	bhi	4115c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   4119c:	mov	r1, #32
   411a0:	mov	r2, r5
   411a4:	bl	14ef0 <memset@plt>
   411a8:	ldr	r0, [r4, #20]
   411ac:	add	r0, r0, r5
   411b0:	str	r0, [r4, #20]
   411b4:	b	411d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   411b8:	ldr	r1, [r4, #16]
   411bc:	cmp	r0, r1
   411c0:	bcc	411d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   411c4:	ldr	r2, [r4, #44]	; 0x2c
   411c8:	mov	r0, r4
   411cc:	mov	r1, #0
   411d0:	blx	r2
   411d4:	ldrh	r1, [r8, #4]
   411d8:	mov	r0, r4
   411dc:	blx	sl
   411e0:	subs	r9, r9, #1
   411e4:	beq	412fc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d8>
   411e8:	add	r7, r8, #6
   411ec:	mov	r8, #44	; 0x2c
   411f0:	ldr	r0, [r4, #20]
   411f4:	sub	r9, r9, #1
   411f8:	add	r1, r0, #1
   411fc:	str	r1, [r4, #20]
   41200:	strb	r8, [r0]
   41204:	ldrb	r1, [r4, #25]
   41208:	ldr	r0, [r4, #20]
   4120c:	cmp	r1, #0
   41210:	beq	412cc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a8>
   41214:	add	r1, r0, #1
   41218:	str	r1, [r4, #20]
   4121c:	mov	r1, #10
   41220:	strb	r1, [r0]
   41224:	ldr	r0, [r4, #20]
   41228:	ldrb	r2, [r4, #25]
   4122c:	ldr	r3, [r4, #32]
   41230:	ldr	r1, [r4, #16]
   41234:	mla	r6, r3, r2, r0
   41238:	mul	r5, r3, r2
   4123c:	cmp	r6, r1
   41240:	bls	412b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   41244:	cmp	r0, r1
   41248:	bcc	41264 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x240>
   4124c:	ldr	r2, [r4, #44]	; 0x2c
   41250:	mov	r0, r4
   41254:	mov	r1, #0
   41258:	blx	r2
   4125c:	ldr	r1, [r4, #16]
   41260:	ldr	r0, [r4, #20]
   41264:	sub	r6, r1, r0
   41268:	cmp	r6, r5
   4126c:	bcs	412b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   41270:	mov	r1, #32
   41274:	mov	r2, r6
   41278:	bl	14ef0 <memset@plt>
   4127c:	ldr	r0, [r4, #20]
   41280:	ldr	r2, [r4, #44]	; 0x2c
   41284:	mov	r1, #0
   41288:	add	r0, r0, r6
   4128c:	str	r0, [r4, #20]
   41290:	mov	r0, r4
   41294:	blx	r2
   41298:	ldr	r1, [r4, #16]
   4129c:	ldr	r0, [r4, #20]
   412a0:	sub	r5, r5, r6
   412a4:	sub	r6, r1, r0
   412a8:	cmp	r5, r6
   412ac:	bhi	41270 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x24c>
   412b0:	mov	r1, #32
   412b4:	mov	r2, r5
   412b8:	bl	14ef0 <memset@plt>
   412bc:	ldr	r0, [r4, #20]
   412c0:	add	r0, r0, r5
   412c4:	str	r0, [r4, #20]
   412c8:	b	412e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   412cc:	ldr	r1, [r4, #16]
   412d0:	cmp	r0, r1
   412d4:	bcc	412e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   412d8:	ldr	r2, [r4, #44]	; 0x2c
   412dc:	mov	r0, r4
   412e0:	mov	r1, #0
   412e4:	blx	r2
   412e8:	ldrh	r1, [r7], #2
   412ec:	mov	r0, r4
   412f0:	blx	sl
   412f4:	cmp	r9, #0
   412f8:	bne	411f0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1cc>
   412fc:	ldrb	r1, [r4, #25]
   41300:	ldr	r0, [r4, #20]
   41304:	cmp	r1, #0
   41308:	beq	413c8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3a4>
   4130c:	add	r1, r0, #1
   41310:	str	r1, [r4, #20]
   41314:	mov	r1, #10
   41318:	strb	r1, [r0]
   4131c:	ldr	r0, [r4, #32]
   41320:	sub	r2, r0, #1
   41324:	str	r2, [r4, #32]
   41328:	ldrb	r3, [r4, #25]
   4132c:	ldr	r0, [r4, #20]
   41330:	ldr	r1, [r4, #16]
   41334:	mla	r7, r2, r3, r0
   41338:	mul	r5, r2, r3
   4133c:	cmp	r7, r1
   41340:	bls	413b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38c>
   41344:	cmp	r0, r1
   41348:	bcc	41364 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x340>
   4134c:	ldr	r2, [r4, #44]	; 0x2c
   41350:	mov	r0, r4
   41354:	mov	r1, #0
   41358:	blx	r2
   4135c:	ldr	r1, [r4, #16]
   41360:	ldr	r0, [r4, #20]
   41364:	sub	r6, r1, r0
   41368:	cmp	r6, r5
   4136c:	bcs	413b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38c>
   41370:	mov	r1, #32
   41374:	mov	r2, r6
   41378:	bl	14ef0 <memset@plt>
   4137c:	ldr	r0, [r4, #20]
   41380:	ldr	r2, [r4, #44]	; 0x2c
   41384:	mov	r1, #0
   41388:	add	r0, r0, r6
   4138c:	str	r0, [r4, #20]
   41390:	mov	r0, r4
   41394:	blx	r2
   41398:	ldr	r1, [r4, #16]
   4139c:	ldr	r0, [r4, #20]
   413a0:	sub	r5, r5, r6
   413a4:	sub	r6, r1, r0
   413a8:	cmp	r5, r6
   413ac:	bhi	41370 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x34c>
   413b0:	mov	r1, #32
   413b4:	mov	r2, r5
   413b8:	bl	14ef0 <memset@plt>
   413bc:	ldr	r0, [r4, #20]
   413c0:	add	r0, r0, r5
   413c4:	str	r0, [r4, #20]
   413c8:	add	r1, r0, #1
   413cc:	str	r1, [r4, #20]
   413d0:	mov	r1, #93	; 0x5d
   413d4:	strb	r1, [r0]
   413d8:	sub	sp, fp, #28
   413dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000413e0 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   413e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   413e4:	add	fp, sp, #28
   413e8:	sub	sp, sp, #4
   413ec:	mov	r4, r0
   413f0:	ldrb	r0, [r0, #27]
   413f4:	cmp	r0, #0
   413f8:	beq	4140c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   413fc:	mov	r0, r4
   41400:	sub	sp, fp, #28
   41404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41408:	b	3e464 <flatcc_json_printer_uint32_vector_field@@Base>
   4140c:	mov	r0, #4
   41410:	add	r0, r0, r2, lsl #1
   41414:	ldr	r2, [r1, #8]
   41418:	cmp	r0, r2
   4141c:	bge	4143c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   41420:	ldr	r2, [r1, #4]
   41424:	add	r0, r2, r0
   41428:	ldrh	r0, [r0]
   4142c:	cmp	r0, #0
   41430:	ldrne	r2, [r1]
   41434:	addsne	r8, r2, r0
   41438:	bne	41444 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x64>
   4143c:	sub	sp, fp, #28
   41440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41444:	ldr	r0, [r1, #16]
   41448:	ldr	sl, [fp, #12]
   4144c:	ldr	r2, [fp, #8]
   41450:	add	r7, r0, #1
   41454:	cmp	r0, #0
   41458:	str	r7, [r1, #16]
   4145c:	ldrne	r0, [r4, #20]
   41460:	addne	r1, r0, #1
   41464:	strne	r1, [r4, #20]
   41468:	movne	r1, #44	; 0x2c
   4146c:	strbne	r1, [r0]
   41470:	mov	r1, r3
   41474:	ldr	r0, [r8]
   41478:	ldr	r9, [r8, r0]!
   4147c:	mov	r0, r4
   41480:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   41484:	ldr	r1, [r4, #32]
   41488:	ldr	r0, [r4, #20]
   4148c:	cmp	r9, #0
   41490:	add	r1, r1, #1
   41494:	str	r1, [r4, #32]
   41498:	add	r1, r0, #1
   4149c:	str	r1, [r4, #20]
   414a0:	mov	r1, #91	; 0x5b
   414a4:	strb	r1, [r0]
   414a8:	beq	416b8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d8>
   414ac:	ldrb	r1, [r4, #25]
   414b0:	ldr	r0, [r4, #20]
   414b4:	cmp	r1, #0
   414b8:	beq	41574 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x194>
   414bc:	add	r1, r0, #1
   414c0:	str	r1, [r4, #20]
   414c4:	mov	r1, #10
   414c8:	strb	r1, [r0]
   414cc:	ldr	r0, [r4, #20]
   414d0:	ldrb	r2, [r4, #25]
   414d4:	ldr	r3, [r4, #32]
   414d8:	ldr	r1, [r4, #16]
   414dc:	mla	r7, r3, r2, r0
   414e0:	mul	r5, r3, r2
   414e4:	cmp	r7, r1
   414e8:	bls	41558 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
   414ec:	cmp	r0, r1
   414f0:	bcc	4150c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x12c>
   414f4:	ldr	r2, [r4, #44]	; 0x2c
   414f8:	mov	r0, r4
   414fc:	mov	r1, #0
   41500:	blx	r2
   41504:	ldr	r1, [r4, #16]
   41508:	ldr	r0, [r4, #20]
   4150c:	sub	r6, r1, r0
   41510:	cmp	r6, r5
   41514:	bcs	41558 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
   41518:	mov	r1, #32
   4151c:	mov	r2, r6
   41520:	bl	14ef0 <memset@plt>
   41524:	ldr	r0, [r4, #20]
   41528:	ldr	r2, [r4, #44]	; 0x2c
   4152c:	mov	r1, #0
   41530:	add	r0, r0, r6
   41534:	str	r0, [r4, #20]
   41538:	mov	r0, r4
   4153c:	blx	r2
   41540:	ldr	r1, [r4, #16]
   41544:	ldr	r0, [r4, #20]
   41548:	sub	r5, r5, r6
   4154c:	sub	r6, r1, r0
   41550:	cmp	r5, r6
   41554:	bhi	41518 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   41558:	mov	r1, #32
   4155c:	mov	r2, r5
   41560:	bl	14ef0 <memset@plt>
   41564:	ldr	r0, [r4, #20]
   41568:	add	r0, r0, r5
   4156c:	str	r0, [r4, #20]
   41570:	b	41590 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   41574:	ldr	r1, [r4, #16]
   41578:	cmp	r0, r1
   4157c:	bcc	41590 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   41580:	ldr	r2, [r4, #44]	; 0x2c
   41584:	mov	r0, r4
   41588:	mov	r1, #0
   4158c:	blx	r2
   41590:	ldr	r1, [r8, #4]
   41594:	mov	r0, r4
   41598:	blx	sl
   4159c:	subs	r9, r9, #1
   415a0:	beq	416b8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d8>
   415a4:	add	r7, r8, #8
   415a8:	mov	r8, #44	; 0x2c
   415ac:	ldr	r0, [r4, #20]
   415b0:	sub	r9, r9, #1
   415b4:	add	r1, r0, #1
   415b8:	str	r1, [r4, #20]
   415bc:	strb	r8, [r0]
   415c0:	ldrb	r1, [r4, #25]
   415c4:	ldr	r0, [r4, #20]
   415c8:	cmp	r1, #0
   415cc:	beq	41688 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a8>
   415d0:	add	r1, r0, #1
   415d4:	str	r1, [r4, #20]
   415d8:	mov	r1, #10
   415dc:	strb	r1, [r0]
   415e0:	ldr	r0, [r4, #20]
   415e4:	ldrb	r2, [r4, #25]
   415e8:	ldr	r3, [r4, #32]
   415ec:	ldr	r1, [r4, #16]
   415f0:	mla	r6, r3, r2, r0
   415f4:	mul	r5, r3, r2
   415f8:	cmp	r6, r1
   415fc:	bls	4166c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   41600:	cmp	r0, r1
   41604:	bcc	41620 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x240>
   41608:	ldr	r2, [r4, #44]	; 0x2c
   4160c:	mov	r0, r4
   41610:	mov	r1, #0
   41614:	blx	r2
   41618:	ldr	r1, [r4, #16]
   4161c:	ldr	r0, [r4, #20]
   41620:	sub	r6, r1, r0
   41624:	cmp	r6, r5
   41628:	bcs	4166c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   4162c:	mov	r1, #32
   41630:	mov	r2, r6
   41634:	bl	14ef0 <memset@plt>
   41638:	ldr	r0, [r4, #20]
   4163c:	ldr	r2, [r4, #44]	; 0x2c
   41640:	mov	r1, #0
   41644:	add	r0, r0, r6
   41648:	str	r0, [r4, #20]
   4164c:	mov	r0, r4
   41650:	blx	r2
   41654:	ldr	r1, [r4, #16]
   41658:	ldr	r0, [r4, #20]
   4165c:	sub	r5, r5, r6
   41660:	sub	r6, r1, r0
   41664:	cmp	r5, r6
   41668:	bhi	4162c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x24c>
   4166c:	mov	r1, #32
   41670:	mov	r2, r5
   41674:	bl	14ef0 <memset@plt>
   41678:	ldr	r0, [r4, #20]
   4167c:	add	r0, r0, r5
   41680:	str	r0, [r4, #20]
   41684:	b	416a4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   41688:	ldr	r1, [r4, #16]
   4168c:	cmp	r0, r1
   41690:	bcc	416a4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   41694:	ldr	r2, [r4, #44]	; 0x2c
   41698:	mov	r0, r4
   4169c:	mov	r1, #0
   416a0:	blx	r2
   416a4:	ldr	r1, [r7], #4
   416a8:	mov	r0, r4
   416ac:	blx	sl
   416b0:	cmp	r9, #0
   416b4:	bne	415ac <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1cc>
   416b8:	ldrb	r1, [r4, #25]
   416bc:	ldr	r0, [r4, #20]
   416c0:	cmp	r1, #0
   416c4:	beq	41784 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3a4>
   416c8:	add	r1, r0, #1
   416cc:	str	r1, [r4, #20]
   416d0:	mov	r1, #10
   416d4:	strb	r1, [r0]
   416d8:	ldr	r0, [r4, #32]
   416dc:	sub	r2, r0, #1
   416e0:	str	r2, [r4, #32]
   416e4:	ldrb	r3, [r4, #25]
   416e8:	ldr	r0, [r4, #20]
   416ec:	ldr	r1, [r4, #16]
   416f0:	mla	r7, r2, r3, r0
   416f4:	mul	r5, r2, r3
   416f8:	cmp	r7, r1
   416fc:	bls	4176c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38c>
   41700:	cmp	r0, r1
   41704:	bcc	41720 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x340>
   41708:	ldr	r2, [r4, #44]	; 0x2c
   4170c:	mov	r0, r4
   41710:	mov	r1, #0
   41714:	blx	r2
   41718:	ldr	r1, [r4, #16]
   4171c:	ldr	r0, [r4, #20]
   41720:	sub	r6, r1, r0
   41724:	cmp	r6, r5
   41728:	bcs	4176c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38c>
   4172c:	mov	r1, #32
   41730:	mov	r2, r6
   41734:	bl	14ef0 <memset@plt>
   41738:	ldr	r0, [r4, #20]
   4173c:	ldr	r2, [r4, #44]	; 0x2c
   41740:	mov	r1, #0
   41744:	add	r0, r0, r6
   41748:	str	r0, [r4, #20]
   4174c:	mov	r0, r4
   41750:	blx	r2
   41754:	ldr	r1, [r4, #16]
   41758:	ldr	r0, [r4, #20]
   4175c:	sub	r5, r5, r6
   41760:	sub	r6, r1, r0
   41764:	cmp	r5, r6
   41768:	bhi	4172c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x34c>
   4176c:	mov	r1, #32
   41770:	mov	r2, r5
   41774:	bl	14ef0 <memset@plt>
   41778:	ldr	r0, [r4, #20]
   4177c:	add	r0, r0, r5
   41780:	str	r0, [r4, #20]
   41784:	add	r1, r0, #1
   41788:	str	r1, [r4, #20]
   4178c:	mov	r1, #93	; 0x5d
   41790:	strb	r1, [r0]
   41794:	sub	sp, fp, #28
   41798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004179c <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   4179c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   417a0:	add	fp, sp, #28
   417a4:	sub	sp, sp, #4
   417a8:	mov	r4, r0
   417ac:	ldrb	r0, [r0, #27]
   417b0:	cmp	r0, #0
   417b4:	beq	417c8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   417b8:	mov	r0, r4
   417bc:	sub	sp, fp, #28
   417c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   417c4:	b	3e818 <flatcc_json_printer_uint64_vector_field@@Base>
   417c8:	mov	r0, #4
   417cc:	add	r0, r0, r2, lsl #1
   417d0:	ldr	r2, [r1, #8]
   417d4:	cmp	r0, r2
   417d8:	bge	417f8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   417dc:	ldr	r2, [r1, #4]
   417e0:	add	r0, r2, r0
   417e4:	ldrh	r0, [r0]
   417e8:	cmp	r0, #0
   417ec:	ldrne	r2, [r1]
   417f0:	addsne	r8, r2, r0
   417f4:	bne	41800 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x64>
   417f8:	sub	sp, fp, #28
   417fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41800:	ldr	r0, [r1, #16]
   41804:	ldr	sl, [fp, #12]
   41808:	ldr	r2, [fp, #8]
   4180c:	add	r7, r0, #1
   41810:	cmp	r0, #0
   41814:	str	r7, [r1, #16]
   41818:	ldrne	r0, [r4, #20]
   4181c:	addne	r1, r0, #1
   41820:	strne	r1, [r4, #20]
   41824:	movne	r1, #44	; 0x2c
   41828:	strbne	r1, [r0]
   4182c:	mov	r1, r3
   41830:	ldr	r0, [r8]
   41834:	ldr	r9, [r8, r0]!
   41838:	mov	r0, r4
   4183c:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   41840:	ldr	r1, [r4, #32]
   41844:	ldr	r0, [r4, #20]
   41848:	cmp	r9, #0
   4184c:	add	r1, r1, #1
   41850:	str	r1, [r4, #32]
   41854:	add	r1, r0, #1
   41858:	str	r1, [r4, #20]
   4185c:	mov	r1, #91	; 0x5b
   41860:	strb	r1, [r0]
   41864:	beq	41a78 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2dc>
   41868:	ldrb	r1, [r4, #25]
   4186c:	ldr	r0, [r4, #20]
   41870:	cmp	r1, #0
   41874:	beq	41930 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x194>
   41878:	add	r1, r0, #1
   4187c:	str	r1, [r4, #20]
   41880:	mov	r1, #10
   41884:	strb	r1, [r0]
   41888:	ldr	r0, [r4, #20]
   4188c:	ldrb	r2, [r4, #25]
   41890:	ldr	r3, [r4, #32]
   41894:	ldr	r1, [r4, #16]
   41898:	mla	r7, r3, r2, r0
   4189c:	mul	r5, r3, r2
   418a0:	cmp	r7, r1
   418a4:	bls	41914 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
   418a8:	cmp	r0, r1
   418ac:	bcc	418c8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x12c>
   418b0:	ldr	r2, [r4, #44]	; 0x2c
   418b4:	mov	r0, r4
   418b8:	mov	r1, #0
   418bc:	blx	r2
   418c0:	ldr	r1, [r4, #16]
   418c4:	ldr	r0, [r4, #20]
   418c8:	sub	r6, r1, r0
   418cc:	cmp	r6, r5
   418d0:	bcs	41914 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
   418d4:	mov	r1, #32
   418d8:	mov	r2, r6
   418dc:	bl	14ef0 <memset@plt>
   418e0:	ldr	r0, [r4, #20]
   418e4:	ldr	r2, [r4, #44]	; 0x2c
   418e8:	mov	r1, #0
   418ec:	add	r0, r0, r6
   418f0:	str	r0, [r4, #20]
   418f4:	mov	r0, r4
   418f8:	blx	r2
   418fc:	ldr	r1, [r4, #16]
   41900:	ldr	r0, [r4, #20]
   41904:	sub	r5, r5, r6
   41908:	sub	r6, r1, r0
   4190c:	cmp	r5, r6
   41910:	bhi	418d4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   41914:	mov	r1, #32
   41918:	mov	r2, r5
   4191c:	bl	14ef0 <memset@plt>
   41920:	ldr	r0, [r4, #20]
   41924:	add	r0, r0, r5
   41928:	str	r0, [r4, #20]
   4192c:	b	4194c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   41930:	ldr	r1, [r4, #16]
   41934:	cmp	r0, r1
   41938:	bcc	4194c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   4193c:	ldr	r2, [r4, #44]	; 0x2c
   41940:	mov	r0, r4
   41944:	mov	r1, #0
   41948:	blx	r2
   4194c:	ldrd	r2, [r8, #4]
   41950:	mov	r0, r4
   41954:	blx	sl
   41958:	subs	r9, r9, #1
   4195c:	beq	41a78 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2dc>
   41960:	add	r7, r8, #12
   41964:	mov	r8, #44	; 0x2c
   41968:	ldr	r0, [r4, #20]
   4196c:	sub	r9, r9, #1
   41970:	add	r1, r0, #1
   41974:	str	r1, [r4, #20]
   41978:	strb	r8, [r0]
   4197c:	ldrb	r1, [r4, #25]
   41980:	ldr	r0, [r4, #20]
   41984:	cmp	r1, #0
   41988:	beq	41a44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a8>
   4198c:	add	r1, r0, #1
   41990:	str	r1, [r4, #20]
   41994:	mov	r1, #10
   41998:	strb	r1, [r0]
   4199c:	ldr	r0, [r4, #20]
   419a0:	ldrb	r2, [r4, #25]
   419a4:	ldr	r3, [r4, #32]
   419a8:	ldr	r1, [r4, #16]
   419ac:	mla	r6, r3, r2, r0
   419b0:	mul	r5, r3, r2
   419b4:	cmp	r6, r1
   419b8:	bls	41a28 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   419bc:	cmp	r0, r1
   419c0:	bcc	419dc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x240>
   419c4:	ldr	r2, [r4, #44]	; 0x2c
   419c8:	mov	r0, r4
   419cc:	mov	r1, #0
   419d0:	blx	r2
   419d4:	ldr	r1, [r4, #16]
   419d8:	ldr	r0, [r4, #20]
   419dc:	sub	r6, r1, r0
   419e0:	cmp	r6, r5
   419e4:	bcs	41a28 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   419e8:	mov	r1, #32
   419ec:	mov	r2, r6
   419f0:	bl	14ef0 <memset@plt>
   419f4:	ldr	r0, [r4, #20]
   419f8:	ldr	r2, [r4, #44]	; 0x2c
   419fc:	mov	r1, #0
   41a00:	add	r0, r0, r6
   41a04:	str	r0, [r4, #20]
   41a08:	mov	r0, r4
   41a0c:	blx	r2
   41a10:	ldr	r1, [r4, #16]
   41a14:	ldr	r0, [r4, #20]
   41a18:	sub	r5, r5, r6
   41a1c:	sub	r6, r1, r0
   41a20:	cmp	r5, r6
   41a24:	bhi	419e8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x24c>
   41a28:	mov	r1, #32
   41a2c:	mov	r2, r5
   41a30:	bl	14ef0 <memset@plt>
   41a34:	ldr	r0, [r4, #20]
   41a38:	add	r0, r0, r5
   41a3c:	str	r0, [r4, #20]
   41a40:	b	41a60 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   41a44:	ldr	r1, [r4, #16]
   41a48:	cmp	r0, r1
   41a4c:	bcc	41a60 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   41a50:	ldr	r2, [r4, #44]	; 0x2c
   41a54:	mov	r0, r4
   41a58:	mov	r1, #0
   41a5c:	blx	r2
   41a60:	ldrd	r2, [r7]
   41a64:	mov	r0, r4
   41a68:	blx	sl
   41a6c:	add	r7, r7, #8
   41a70:	cmp	r9, #0
   41a74:	bne	41968 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1cc>
   41a78:	ldrb	r1, [r4, #25]
   41a7c:	ldr	r0, [r4, #20]
   41a80:	cmp	r1, #0
   41a84:	beq	41b44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3a8>
   41a88:	add	r1, r0, #1
   41a8c:	str	r1, [r4, #20]
   41a90:	mov	r1, #10
   41a94:	strb	r1, [r0]
   41a98:	ldr	r0, [r4, #32]
   41a9c:	sub	r2, r0, #1
   41aa0:	str	r2, [r4, #32]
   41aa4:	ldrb	r3, [r4, #25]
   41aa8:	ldr	r0, [r4, #20]
   41aac:	ldr	r1, [r4, #16]
   41ab0:	mla	r7, r2, r3, r0
   41ab4:	mul	r5, r2, r3
   41ab8:	cmp	r7, r1
   41abc:	bls	41b2c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x390>
   41ac0:	cmp	r0, r1
   41ac4:	bcc	41ae0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x344>
   41ac8:	ldr	r2, [r4, #44]	; 0x2c
   41acc:	mov	r0, r4
   41ad0:	mov	r1, #0
   41ad4:	blx	r2
   41ad8:	ldr	r1, [r4, #16]
   41adc:	ldr	r0, [r4, #20]
   41ae0:	sub	r6, r1, r0
   41ae4:	cmp	r6, r5
   41ae8:	bcs	41b2c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x390>
   41aec:	mov	r1, #32
   41af0:	mov	r2, r6
   41af4:	bl	14ef0 <memset@plt>
   41af8:	ldr	r0, [r4, #20]
   41afc:	ldr	r2, [r4, #44]	; 0x2c
   41b00:	mov	r1, #0
   41b04:	add	r0, r0, r6
   41b08:	str	r0, [r4, #20]
   41b0c:	mov	r0, r4
   41b10:	blx	r2
   41b14:	ldr	r1, [r4, #16]
   41b18:	ldr	r0, [r4, #20]
   41b1c:	sub	r5, r5, r6
   41b20:	sub	r6, r1, r0
   41b24:	cmp	r5, r6
   41b28:	bhi	41aec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x350>
   41b2c:	mov	r1, #32
   41b30:	mov	r2, r5
   41b34:	bl	14ef0 <memset@plt>
   41b38:	ldr	r0, [r4, #20]
   41b3c:	add	r0, r0, r5
   41b40:	str	r0, [r4, #20]
   41b44:	add	r1, r0, #1
   41b48:	str	r1, [r4, #20]
   41b4c:	mov	r1, #93	; 0x5d
   41b50:	strb	r1, [r0]
   41b54:	sub	sp, fp, #28
   41b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041b5c <flatcc_json_printer_int8_enum_vector_field@@Base>:
   41b5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41b60:	add	fp, sp, #28
   41b64:	sub	sp, sp, #4
   41b68:	mov	r4, r0
   41b6c:	ldrb	r0, [r0, #27]
   41b70:	cmp	r0, #0
   41b74:	beq	41b88 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   41b78:	mov	r0, r4
   41b7c:	sub	sp, fp, #28
   41b80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41b84:	b	3ebd0 <flatcc_json_printer_int8_vector_field@@Base>
   41b88:	mov	r0, #4
   41b8c:	add	r0, r0, r2, lsl #1
   41b90:	ldr	r2, [r1, #8]
   41b94:	cmp	r0, r2
   41b98:	bge	41bb8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   41b9c:	ldr	r2, [r1, #4]
   41ba0:	add	r0, r2, r0
   41ba4:	ldrh	r0, [r0]
   41ba8:	cmp	r0, #0
   41bac:	ldrne	r2, [r1]
   41bb0:	addsne	r8, r2, r0
   41bb4:	bne	41bc0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x64>
   41bb8:	sub	sp, fp, #28
   41bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41bc0:	ldr	r0, [r1, #16]
   41bc4:	ldr	sl, [fp, #12]
   41bc8:	ldr	r2, [fp, #8]
   41bcc:	add	r7, r0, #1
   41bd0:	cmp	r0, #0
   41bd4:	str	r7, [r1, #16]
   41bd8:	ldrne	r0, [r4, #20]
   41bdc:	addne	r1, r0, #1
   41be0:	strne	r1, [r4, #20]
   41be4:	movne	r1, #44	; 0x2c
   41be8:	strbne	r1, [r0]
   41bec:	mov	r1, r3
   41bf0:	ldr	r0, [r8]
   41bf4:	ldr	r9, [r8, r0]!
   41bf8:	mov	r0, r4
   41bfc:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   41c00:	ldr	r1, [r4, #32]
   41c04:	ldr	r0, [r4, #20]
   41c08:	cmp	r9, #0
   41c0c:	add	r1, r1, #1
   41c10:	str	r1, [r4, #32]
   41c14:	add	r1, r0, #1
   41c18:	str	r1, [r4, #20]
   41c1c:	mov	r1, #91	; 0x5b
   41c20:	strb	r1, [r0]
   41c24:	beq	41e34 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d8>
   41c28:	ldrb	r1, [r4, #25]
   41c2c:	ldr	r0, [r4, #20]
   41c30:	cmp	r1, #0
   41c34:	beq	41cf0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x194>
   41c38:	add	r1, r0, #1
   41c3c:	str	r1, [r4, #20]
   41c40:	mov	r1, #10
   41c44:	strb	r1, [r0]
   41c48:	ldr	r0, [r4, #20]
   41c4c:	ldrb	r2, [r4, #25]
   41c50:	ldr	r3, [r4, #32]
   41c54:	ldr	r1, [r4, #16]
   41c58:	mla	r7, r3, r2, r0
   41c5c:	mul	r5, r3, r2
   41c60:	cmp	r7, r1
   41c64:	bls	41cd4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
   41c68:	cmp	r0, r1
   41c6c:	bcc	41c88 <flatcc_json_printer_int8_enum_vector_field@@Base+0x12c>
   41c70:	ldr	r2, [r4, #44]	; 0x2c
   41c74:	mov	r0, r4
   41c78:	mov	r1, #0
   41c7c:	blx	r2
   41c80:	ldr	r1, [r4, #16]
   41c84:	ldr	r0, [r4, #20]
   41c88:	sub	r6, r1, r0
   41c8c:	cmp	r6, r5
   41c90:	bcs	41cd4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
   41c94:	mov	r1, #32
   41c98:	mov	r2, r6
   41c9c:	bl	14ef0 <memset@plt>
   41ca0:	ldr	r0, [r4, #20]
   41ca4:	ldr	r2, [r4, #44]	; 0x2c
   41ca8:	mov	r1, #0
   41cac:	add	r0, r0, r6
   41cb0:	str	r0, [r4, #20]
   41cb4:	mov	r0, r4
   41cb8:	blx	r2
   41cbc:	ldr	r1, [r4, #16]
   41cc0:	ldr	r0, [r4, #20]
   41cc4:	sub	r5, r5, r6
   41cc8:	sub	r6, r1, r0
   41ccc:	cmp	r5, r6
   41cd0:	bhi	41c94 <flatcc_json_printer_int8_enum_vector_field@@Base+0x138>
   41cd4:	mov	r1, #32
   41cd8:	mov	r2, r5
   41cdc:	bl	14ef0 <memset@plt>
   41ce0:	ldr	r0, [r4, #20]
   41ce4:	add	r0, r0, r5
   41ce8:	str	r0, [r4, #20]
   41cec:	b	41d0c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   41cf0:	ldr	r1, [r4, #16]
   41cf4:	cmp	r0, r1
   41cf8:	bcc	41d0c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   41cfc:	ldr	r2, [r4, #44]	; 0x2c
   41d00:	mov	r0, r4
   41d04:	mov	r1, #0
   41d08:	blx	r2
   41d0c:	ldrsb	r1, [r8, #4]
   41d10:	mov	r0, r4
   41d14:	blx	sl
   41d18:	subs	r9, r9, #1
   41d1c:	beq	41e34 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d8>
   41d20:	add	r7, r8, #5
   41d24:	mov	r8, #44	; 0x2c
   41d28:	ldr	r0, [r4, #20]
   41d2c:	sub	r9, r9, #1
   41d30:	add	r1, r0, #1
   41d34:	str	r1, [r4, #20]
   41d38:	strb	r8, [r0]
   41d3c:	ldrb	r1, [r4, #25]
   41d40:	ldr	r0, [r4, #20]
   41d44:	cmp	r1, #0
   41d48:	beq	41e04 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a8>
   41d4c:	add	r1, r0, #1
   41d50:	str	r1, [r4, #20]
   41d54:	mov	r1, #10
   41d58:	strb	r1, [r0]
   41d5c:	ldr	r0, [r4, #20]
   41d60:	ldrb	r2, [r4, #25]
   41d64:	ldr	r3, [r4, #32]
   41d68:	ldr	r1, [r4, #16]
   41d6c:	mla	r6, r3, r2, r0
   41d70:	mul	r5, r3, r2
   41d74:	cmp	r6, r1
   41d78:	bls	41de8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   41d7c:	cmp	r0, r1
   41d80:	bcc	41d9c <flatcc_json_printer_int8_enum_vector_field@@Base+0x240>
   41d84:	ldr	r2, [r4, #44]	; 0x2c
   41d88:	mov	r0, r4
   41d8c:	mov	r1, #0
   41d90:	blx	r2
   41d94:	ldr	r1, [r4, #16]
   41d98:	ldr	r0, [r4, #20]
   41d9c:	sub	r6, r1, r0
   41da0:	cmp	r6, r5
   41da4:	bcs	41de8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   41da8:	mov	r1, #32
   41dac:	mov	r2, r6
   41db0:	bl	14ef0 <memset@plt>
   41db4:	ldr	r0, [r4, #20]
   41db8:	ldr	r2, [r4, #44]	; 0x2c
   41dbc:	mov	r1, #0
   41dc0:	add	r0, r0, r6
   41dc4:	str	r0, [r4, #20]
   41dc8:	mov	r0, r4
   41dcc:	blx	r2
   41dd0:	ldr	r1, [r4, #16]
   41dd4:	ldr	r0, [r4, #20]
   41dd8:	sub	r5, r5, r6
   41ddc:	sub	r6, r1, r0
   41de0:	cmp	r5, r6
   41de4:	bhi	41da8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x24c>
   41de8:	mov	r1, #32
   41dec:	mov	r2, r5
   41df0:	bl	14ef0 <memset@plt>
   41df4:	ldr	r0, [r4, #20]
   41df8:	add	r0, r0, r5
   41dfc:	str	r0, [r4, #20]
   41e00:	b	41e20 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   41e04:	ldr	r1, [r4, #16]
   41e08:	cmp	r0, r1
   41e0c:	bcc	41e20 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   41e10:	ldr	r2, [r4, #44]	; 0x2c
   41e14:	mov	r0, r4
   41e18:	mov	r1, #0
   41e1c:	blx	r2
   41e20:	ldrsb	r1, [r7], #1
   41e24:	mov	r0, r4
   41e28:	blx	sl
   41e2c:	cmp	r9, #0
   41e30:	bne	41d28 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1cc>
   41e34:	ldrb	r1, [r4, #25]
   41e38:	ldr	r0, [r4, #20]
   41e3c:	cmp	r1, #0
   41e40:	beq	41f00 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3a4>
   41e44:	add	r1, r0, #1
   41e48:	str	r1, [r4, #20]
   41e4c:	mov	r1, #10
   41e50:	strb	r1, [r0]
   41e54:	ldr	r0, [r4, #32]
   41e58:	sub	r2, r0, #1
   41e5c:	str	r2, [r4, #32]
   41e60:	ldrb	r3, [r4, #25]
   41e64:	ldr	r0, [r4, #20]
   41e68:	ldr	r1, [r4, #16]
   41e6c:	mla	r7, r2, r3, r0
   41e70:	mul	r5, r2, r3
   41e74:	cmp	r7, r1
   41e78:	bls	41ee8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x38c>
   41e7c:	cmp	r0, r1
   41e80:	bcc	41e9c <flatcc_json_printer_int8_enum_vector_field@@Base+0x340>
   41e84:	ldr	r2, [r4, #44]	; 0x2c
   41e88:	mov	r0, r4
   41e8c:	mov	r1, #0
   41e90:	blx	r2
   41e94:	ldr	r1, [r4, #16]
   41e98:	ldr	r0, [r4, #20]
   41e9c:	sub	r6, r1, r0
   41ea0:	cmp	r6, r5
   41ea4:	bcs	41ee8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x38c>
   41ea8:	mov	r1, #32
   41eac:	mov	r2, r6
   41eb0:	bl	14ef0 <memset@plt>
   41eb4:	ldr	r0, [r4, #20]
   41eb8:	ldr	r2, [r4, #44]	; 0x2c
   41ebc:	mov	r1, #0
   41ec0:	add	r0, r0, r6
   41ec4:	str	r0, [r4, #20]
   41ec8:	mov	r0, r4
   41ecc:	blx	r2
   41ed0:	ldr	r1, [r4, #16]
   41ed4:	ldr	r0, [r4, #20]
   41ed8:	sub	r5, r5, r6
   41edc:	sub	r6, r1, r0
   41ee0:	cmp	r5, r6
   41ee4:	bhi	41ea8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x34c>
   41ee8:	mov	r1, #32
   41eec:	mov	r2, r5
   41ef0:	bl	14ef0 <memset@plt>
   41ef4:	ldr	r0, [r4, #20]
   41ef8:	add	r0, r0, r5
   41efc:	str	r0, [r4, #20]
   41f00:	add	r1, r0, #1
   41f04:	str	r1, [r4, #20]
   41f08:	mov	r1, #93	; 0x5d
   41f0c:	strb	r1, [r0]
   41f10:	sub	sp, fp, #28
   41f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041f18 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   41f18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41f1c:	add	fp, sp, #28
   41f20:	sub	sp, sp, #4
   41f24:	mov	r4, r0
   41f28:	ldrb	r0, [r0, #27]
   41f2c:	cmp	r0, #0
   41f30:	beq	41f44 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   41f34:	mov	r0, r4
   41f38:	sub	sp, fp, #28
   41f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41f40:	b	3f108 <flatcc_json_printer_int16_vector_field@@Base>
   41f44:	mov	r0, #4
   41f48:	add	r0, r0, r2, lsl #1
   41f4c:	ldr	r2, [r1, #8]
   41f50:	cmp	r0, r2
   41f54:	bge	41f74 <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   41f58:	ldr	r2, [r1, #4]
   41f5c:	add	r0, r2, r0
   41f60:	ldrh	r0, [r0]
   41f64:	cmp	r0, #0
   41f68:	ldrne	r2, [r1]
   41f6c:	addsne	r8, r2, r0
   41f70:	bne	41f7c <flatcc_json_printer_int16_enum_vector_field@@Base+0x64>
   41f74:	sub	sp, fp, #28
   41f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41f7c:	ldr	r0, [r1, #16]
   41f80:	ldr	sl, [fp, #12]
   41f84:	ldr	r2, [fp, #8]
   41f88:	add	r7, r0, #1
   41f8c:	cmp	r0, #0
   41f90:	str	r7, [r1, #16]
   41f94:	ldrne	r0, [r4, #20]
   41f98:	addne	r1, r0, #1
   41f9c:	strne	r1, [r4, #20]
   41fa0:	movne	r1, #44	; 0x2c
   41fa4:	strbne	r1, [r0]
   41fa8:	mov	r1, r3
   41fac:	ldr	r0, [r8]
   41fb0:	ldr	r9, [r8, r0]!
   41fb4:	mov	r0, r4
   41fb8:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   41fbc:	ldr	r1, [r4, #32]
   41fc0:	ldr	r0, [r4, #20]
   41fc4:	cmp	r9, #0
   41fc8:	add	r1, r1, #1
   41fcc:	str	r1, [r4, #32]
   41fd0:	add	r1, r0, #1
   41fd4:	str	r1, [r4, #20]
   41fd8:	mov	r1, #91	; 0x5b
   41fdc:	strb	r1, [r0]
   41fe0:	beq	421f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d8>
   41fe4:	ldrb	r1, [r4, #25]
   41fe8:	ldr	r0, [r4, #20]
   41fec:	cmp	r1, #0
   41ff0:	beq	420ac <flatcc_json_printer_int16_enum_vector_field@@Base+0x194>
   41ff4:	add	r1, r0, #1
   41ff8:	str	r1, [r4, #20]
   41ffc:	mov	r1, #10
   42000:	strb	r1, [r0]
   42004:	ldr	r0, [r4, #20]
   42008:	ldrb	r2, [r4, #25]
   4200c:	ldr	r3, [r4, #32]
   42010:	ldr	r1, [r4, #16]
   42014:	mla	r7, r3, r2, r0
   42018:	mul	r5, r3, r2
   4201c:	cmp	r7, r1
   42020:	bls	42090 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
   42024:	cmp	r0, r1
   42028:	bcc	42044 <flatcc_json_printer_int16_enum_vector_field@@Base+0x12c>
   4202c:	ldr	r2, [r4, #44]	; 0x2c
   42030:	mov	r0, r4
   42034:	mov	r1, #0
   42038:	blx	r2
   4203c:	ldr	r1, [r4, #16]
   42040:	ldr	r0, [r4, #20]
   42044:	sub	r6, r1, r0
   42048:	cmp	r6, r5
   4204c:	bcs	42090 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
   42050:	mov	r1, #32
   42054:	mov	r2, r6
   42058:	bl	14ef0 <memset@plt>
   4205c:	ldr	r0, [r4, #20]
   42060:	ldr	r2, [r4, #44]	; 0x2c
   42064:	mov	r1, #0
   42068:	add	r0, r0, r6
   4206c:	str	r0, [r4, #20]
   42070:	mov	r0, r4
   42074:	blx	r2
   42078:	ldr	r1, [r4, #16]
   4207c:	ldr	r0, [r4, #20]
   42080:	sub	r5, r5, r6
   42084:	sub	r6, r1, r0
   42088:	cmp	r5, r6
   4208c:	bhi	42050 <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   42090:	mov	r1, #32
   42094:	mov	r2, r5
   42098:	bl	14ef0 <memset@plt>
   4209c:	ldr	r0, [r4, #20]
   420a0:	add	r0, r0, r5
   420a4:	str	r0, [r4, #20]
   420a8:	b	420c8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   420ac:	ldr	r1, [r4, #16]
   420b0:	cmp	r0, r1
   420b4:	bcc	420c8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   420b8:	ldr	r2, [r4, #44]	; 0x2c
   420bc:	mov	r0, r4
   420c0:	mov	r1, #0
   420c4:	blx	r2
   420c8:	ldrsh	r1, [r8, #4]
   420cc:	mov	r0, r4
   420d0:	blx	sl
   420d4:	subs	r9, r9, #1
   420d8:	beq	421f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d8>
   420dc:	add	r7, r8, #6
   420e0:	mov	r8, #44	; 0x2c
   420e4:	ldr	r0, [r4, #20]
   420e8:	sub	r9, r9, #1
   420ec:	add	r1, r0, #1
   420f0:	str	r1, [r4, #20]
   420f4:	strb	r8, [r0]
   420f8:	ldrb	r1, [r4, #25]
   420fc:	ldr	r0, [r4, #20]
   42100:	cmp	r1, #0
   42104:	beq	421c0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a8>
   42108:	add	r1, r0, #1
   4210c:	str	r1, [r4, #20]
   42110:	mov	r1, #10
   42114:	strb	r1, [r0]
   42118:	ldr	r0, [r4, #20]
   4211c:	ldrb	r2, [r4, #25]
   42120:	ldr	r3, [r4, #32]
   42124:	ldr	r1, [r4, #16]
   42128:	mla	r6, r3, r2, r0
   4212c:	mul	r5, r3, r2
   42130:	cmp	r6, r1
   42134:	bls	421a4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   42138:	cmp	r0, r1
   4213c:	bcc	42158 <flatcc_json_printer_int16_enum_vector_field@@Base+0x240>
   42140:	ldr	r2, [r4, #44]	; 0x2c
   42144:	mov	r0, r4
   42148:	mov	r1, #0
   4214c:	blx	r2
   42150:	ldr	r1, [r4, #16]
   42154:	ldr	r0, [r4, #20]
   42158:	sub	r6, r1, r0
   4215c:	cmp	r6, r5
   42160:	bcs	421a4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   42164:	mov	r1, #32
   42168:	mov	r2, r6
   4216c:	bl	14ef0 <memset@plt>
   42170:	ldr	r0, [r4, #20]
   42174:	ldr	r2, [r4, #44]	; 0x2c
   42178:	mov	r1, #0
   4217c:	add	r0, r0, r6
   42180:	str	r0, [r4, #20]
   42184:	mov	r0, r4
   42188:	blx	r2
   4218c:	ldr	r1, [r4, #16]
   42190:	ldr	r0, [r4, #20]
   42194:	sub	r5, r5, r6
   42198:	sub	r6, r1, r0
   4219c:	cmp	r5, r6
   421a0:	bhi	42164 <flatcc_json_printer_int16_enum_vector_field@@Base+0x24c>
   421a4:	mov	r1, #32
   421a8:	mov	r2, r5
   421ac:	bl	14ef0 <memset@plt>
   421b0:	ldr	r0, [r4, #20]
   421b4:	add	r0, r0, r5
   421b8:	str	r0, [r4, #20]
   421bc:	b	421dc <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   421c0:	ldr	r1, [r4, #16]
   421c4:	cmp	r0, r1
   421c8:	bcc	421dc <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   421cc:	ldr	r2, [r4, #44]	; 0x2c
   421d0:	mov	r0, r4
   421d4:	mov	r1, #0
   421d8:	blx	r2
   421dc:	ldrsh	r1, [r7], #2
   421e0:	mov	r0, r4
   421e4:	blx	sl
   421e8:	cmp	r9, #0
   421ec:	bne	420e4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1cc>
   421f0:	ldrb	r1, [r4, #25]
   421f4:	ldr	r0, [r4, #20]
   421f8:	cmp	r1, #0
   421fc:	beq	422bc <flatcc_json_printer_int16_enum_vector_field@@Base+0x3a4>
   42200:	add	r1, r0, #1
   42204:	str	r1, [r4, #20]
   42208:	mov	r1, #10
   4220c:	strb	r1, [r0]
   42210:	ldr	r0, [r4, #32]
   42214:	sub	r2, r0, #1
   42218:	str	r2, [r4, #32]
   4221c:	ldrb	r3, [r4, #25]
   42220:	ldr	r0, [r4, #20]
   42224:	ldr	r1, [r4, #16]
   42228:	mla	r7, r2, r3, r0
   4222c:	mul	r5, r2, r3
   42230:	cmp	r7, r1
   42234:	bls	422a4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38c>
   42238:	cmp	r0, r1
   4223c:	bcc	42258 <flatcc_json_printer_int16_enum_vector_field@@Base+0x340>
   42240:	ldr	r2, [r4, #44]	; 0x2c
   42244:	mov	r0, r4
   42248:	mov	r1, #0
   4224c:	blx	r2
   42250:	ldr	r1, [r4, #16]
   42254:	ldr	r0, [r4, #20]
   42258:	sub	r6, r1, r0
   4225c:	cmp	r6, r5
   42260:	bcs	422a4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38c>
   42264:	mov	r1, #32
   42268:	mov	r2, r6
   4226c:	bl	14ef0 <memset@plt>
   42270:	ldr	r0, [r4, #20]
   42274:	ldr	r2, [r4, #44]	; 0x2c
   42278:	mov	r1, #0
   4227c:	add	r0, r0, r6
   42280:	str	r0, [r4, #20]
   42284:	mov	r0, r4
   42288:	blx	r2
   4228c:	ldr	r1, [r4, #16]
   42290:	ldr	r0, [r4, #20]
   42294:	sub	r5, r5, r6
   42298:	sub	r6, r1, r0
   4229c:	cmp	r5, r6
   422a0:	bhi	42264 <flatcc_json_printer_int16_enum_vector_field@@Base+0x34c>
   422a4:	mov	r1, #32
   422a8:	mov	r2, r5
   422ac:	bl	14ef0 <memset@plt>
   422b0:	ldr	r0, [r4, #20]
   422b4:	add	r0, r0, r5
   422b8:	str	r0, [r4, #20]
   422bc:	add	r1, r0, #1
   422c0:	str	r1, [r4, #20]
   422c4:	mov	r1, #93	; 0x5d
   422c8:	strb	r1, [r0]
   422cc:	sub	sp, fp, #28
   422d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000422d4 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   422d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   422d8:	add	fp, sp, #28
   422dc:	sub	sp, sp, #4
   422e0:	mov	r4, r0
   422e4:	ldrb	r0, [r0, #27]
   422e8:	cmp	r0, #0
   422ec:	beq	42300 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   422f0:	mov	r0, r4
   422f4:	sub	sp, fp, #28
   422f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   422fc:	b	3f500 <flatcc_json_printer_int32_vector_field@@Base>
   42300:	mov	r0, #4
   42304:	add	r0, r0, r2, lsl #1
   42308:	ldr	r2, [r1, #8]
   4230c:	cmp	r0, r2
   42310:	bge	42330 <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   42314:	ldr	r2, [r1, #4]
   42318:	add	r0, r2, r0
   4231c:	ldrh	r0, [r0]
   42320:	cmp	r0, #0
   42324:	ldrne	r2, [r1]
   42328:	addsne	r8, r2, r0
   4232c:	bne	42338 <flatcc_json_printer_int32_enum_vector_field@@Base+0x64>
   42330:	sub	sp, fp, #28
   42334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42338:	ldr	r0, [r1, #16]
   4233c:	ldr	sl, [fp, #12]
   42340:	ldr	r2, [fp, #8]
   42344:	add	r7, r0, #1
   42348:	cmp	r0, #0
   4234c:	str	r7, [r1, #16]
   42350:	ldrne	r0, [r4, #20]
   42354:	addne	r1, r0, #1
   42358:	strne	r1, [r4, #20]
   4235c:	movne	r1, #44	; 0x2c
   42360:	strbne	r1, [r0]
   42364:	mov	r1, r3
   42368:	ldr	r0, [r8]
   4236c:	ldr	r9, [r8, r0]!
   42370:	mov	r0, r4
   42374:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   42378:	ldr	r1, [r4, #32]
   4237c:	ldr	r0, [r4, #20]
   42380:	cmp	r9, #0
   42384:	add	r1, r1, #1
   42388:	str	r1, [r4, #32]
   4238c:	add	r1, r0, #1
   42390:	str	r1, [r4, #20]
   42394:	mov	r1, #91	; 0x5b
   42398:	strb	r1, [r0]
   4239c:	beq	425ac <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d8>
   423a0:	ldrb	r1, [r4, #25]
   423a4:	ldr	r0, [r4, #20]
   423a8:	cmp	r1, #0
   423ac:	beq	42468 <flatcc_json_printer_int32_enum_vector_field@@Base+0x194>
   423b0:	add	r1, r0, #1
   423b4:	str	r1, [r4, #20]
   423b8:	mov	r1, #10
   423bc:	strb	r1, [r0]
   423c0:	ldr	r0, [r4, #20]
   423c4:	ldrb	r2, [r4, #25]
   423c8:	ldr	r3, [r4, #32]
   423cc:	ldr	r1, [r4, #16]
   423d0:	mla	r7, r3, r2, r0
   423d4:	mul	r5, r3, r2
   423d8:	cmp	r7, r1
   423dc:	bls	4244c <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
   423e0:	cmp	r0, r1
   423e4:	bcc	42400 <flatcc_json_printer_int32_enum_vector_field@@Base+0x12c>
   423e8:	ldr	r2, [r4, #44]	; 0x2c
   423ec:	mov	r0, r4
   423f0:	mov	r1, #0
   423f4:	blx	r2
   423f8:	ldr	r1, [r4, #16]
   423fc:	ldr	r0, [r4, #20]
   42400:	sub	r6, r1, r0
   42404:	cmp	r6, r5
   42408:	bcs	4244c <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
   4240c:	mov	r1, #32
   42410:	mov	r2, r6
   42414:	bl	14ef0 <memset@plt>
   42418:	ldr	r0, [r4, #20]
   4241c:	ldr	r2, [r4, #44]	; 0x2c
   42420:	mov	r1, #0
   42424:	add	r0, r0, r6
   42428:	str	r0, [r4, #20]
   4242c:	mov	r0, r4
   42430:	blx	r2
   42434:	ldr	r1, [r4, #16]
   42438:	ldr	r0, [r4, #20]
   4243c:	sub	r5, r5, r6
   42440:	sub	r6, r1, r0
   42444:	cmp	r5, r6
   42448:	bhi	4240c <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   4244c:	mov	r1, #32
   42450:	mov	r2, r5
   42454:	bl	14ef0 <memset@plt>
   42458:	ldr	r0, [r4, #20]
   4245c:	add	r0, r0, r5
   42460:	str	r0, [r4, #20]
   42464:	b	42484 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   42468:	ldr	r1, [r4, #16]
   4246c:	cmp	r0, r1
   42470:	bcc	42484 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   42474:	ldr	r2, [r4, #44]	; 0x2c
   42478:	mov	r0, r4
   4247c:	mov	r1, #0
   42480:	blx	r2
   42484:	ldr	r1, [r8, #4]
   42488:	mov	r0, r4
   4248c:	blx	sl
   42490:	subs	r9, r9, #1
   42494:	beq	425ac <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d8>
   42498:	add	r7, r8, #8
   4249c:	mov	r8, #44	; 0x2c
   424a0:	ldr	r0, [r4, #20]
   424a4:	sub	r9, r9, #1
   424a8:	add	r1, r0, #1
   424ac:	str	r1, [r4, #20]
   424b0:	strb	r8, [r0]
   424b4:	ldrb	r1, [r4, #25]
   424b8:	ldr	r0, [r4, #20]
   424bc:	cmp	r1, #0
   424c0:	beq	4257c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a8>
   424c4:	add	r1, r0, #1
   424c8:	str	r1, [r4, #20]
   424cc:	mov	r1, #10
   424d0:	strb	r1, [r0]
   424d4:	ldr	r0, [r4, #20]
   424d8:	ldrb	r2, [r4, #25]
   424dc:	ldr	r3, [r4, #32]
   424e0:	ldr	r1, [r4, #16]
   424e4:	mla	r6, r3, r2, r0
   424e8:	mul	r5, r3, r2
   424ec:	cmp	r6, r1
   424f0:	bls	42560 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   424f4:	cmp	r0, r1
   424f8:	bcc	42514 <flatcc_json_printer_int32_enum_vector_field@@Base+0x240>
   424fc:	ldr	r2, [r4, #44]	; 0x2c
   42500:	mov	r0, r4
   42504:	mov	r1, #0
   42508:	blx	r2
   4250c:	ldr	r1, [r4, #16]
   42510:	ldr	r0, [r4, #20]
   42514:	sub	r6, r1, r0
   42518:	cmp	r6, r5
   4251c:	bcs	42560 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   42520:	mov	r1, #32
   42524:	mov	r2, r6
   42528:	bl	14ef0 <memset@plt>
   4252c:	ldr	r0, [r4, #20]
   42530:	ldr	r2, [r4, #44]	; 0x2c
   42534:	mov	r1, #0
   42538:	add	r0, r0, r6
   4253c:	str	r0, [r4, #20]
   42540:	mov	r0, r4
   42544:	blx	r2
   42548:	ldr	r1, [r4, #16]
   4254c:	ldr	r0, [r4, #20]
   42550:	sub	r5, r5, r6
   42554:	sub	r6, r1, r0
   42558:	cmp	r5, r6
   4255c:	bhi	42520 <flatcc_json_printer_int32_enum_vector_field@@Base+0x24c>
   42560:	mov	r1, #32
   42564:	mov	r2, r5
   42568:	bl	14ef0 <memset@plt>
   4256c:	ldr	r0, [r4, #20]
   42570:	add	r0, r0, r5
   42574:	str	r0, [r4, #20]
   42578:	b	42598 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   4257c:	ldr	r1, [r4, #16]
   42580:	cmp	r0, r1
   42584:	bcc	42598 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   42588:	ldr	r2, [r4, #44]	; 0x2c
   4258c:	mov	r0, r4
   42590:	mov	r1, #0
   42594:	blx	r2
   42598:	ldr	r1, [r7], #4
   4259c:	mov	r0, r4
   425a0:	blx	sl
   425a4:	cmp	r9, #0
   425a8:	bne	424a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1cc>
   425ac:	ldrb	r1, [r4, #25]
   425b0:	ldr	r0, [r4, #20]
   425b4:	cmp	r1, #0
   425b8:	beq	42678 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3a4>
   425bc:	add	r1, r0, #1
   425c0:	str	r1, [r4, #20]
   425c4:	mov	r1, #10
   425c8:	strb	r1, [r0]
   425cc:	ldr	r0, [r4, #32]
   425d0:	sub	r2, r0, #1
   425d4:	str	r2, [r4, #32]
   425d8:	ldrb	r3, [r4, #25]
   425dc:	ldr	r0, [r4, #20]
   425e0:	ldr	r1, [r4, #16]
   425e4:	mla	r7, r2, r3, r0
   425e8:	mul	r5, r2, r3
   425ec:	cmp	r7, r1
   425f0:	bls	42660 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38c>
   425f4:	cmp	r0, r1
   425f8:	bcc	42614 <flatcc_json_printer_int32_enum_vector_field@@Base+0x340>
   425fc:	ldr	r2, [r4, #44]	; 0x2c
   42600:	mov	r0, r4
   42604:	mov	r1, #0
   42608:	blx	r2
   4260c:	ldr	r1, [r4, #16]
   42610:	ldr	r0, [r4, #20]
   42614:	sub	r6, r1, r0
   42618:	cmp	r6, r5
   4261c:	bcs	42660 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38c>
   42620:	mov	r1, #32
   42624:	mov	r2, r6
   42628:	bl	14ef0 <memset@plt>
   4262c:	ldr	r0, [r4, #20]
   42630:	ldr	r2, [r4, #44]	; 0x2c
   42634:	mov	r1, #0
   42638:	add	r0, r0, r6
   4263c:	str	r0, [r4, #20]
   42640:	mov	r0, r4
   42644:	blx	r2
   42648:	ldr	r1, [r4, #16]
   4264c:	ldr	r0, [r4, #20]
   42650:	sub	r5, r5, r6
   42654:	sub	r6, r1, r0
   42658:	cmp	r5, r6
   4265c:	bhi	42620 <flatcc_json_printer_int32_enum_vector_field@@Base+0x34c>
   42660:	mov	r1, #32
   42664:	mov	r2, r5
   42668:	bl	14ef0 <memset@plt>
   4266c:	ldr	r0, [r4, #20]
   42670:	add	r0, r0, r5
   42674:	str	r0, [r4, #20]
   42678:	add	r1, r0, #1
   4267c:	str	r1, [r4, #20]
   42680:	mov	r1, #93	; 0x5d
   42684:	strb	r1, [r0]
   42688:	sub	sp, fp, #28
   4268c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042690 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   42690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42694:	add	fp, sp, #28
   42698:	sub	sp, sp, #4
   4269c:	mov	r4, r0
   426a0:	ldrb	r0, [r0, #27]
   426a4:	cmp	r0, #0
   426a8:	beq	426bc <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   426ac:	mov	r0, r4
   426b0:	sub	sp, fp, #28
   426b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   426b8:	b	3f8e8 <flatcc_json_printer_int64_vector_field@@Base>
   426bc:	mov	r0, #4
   426c0:	add	r0, r0, r2, lsl #1
   426c4:	ldr	r2, [r1, #8]
   426c8:	cmp	r0, r2
   426cc:	bge	426ec <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   426d0:	ldr	r2, [r1, #4]
   426d4:	add	r0, r2, r0
   426d8:	ldrh	r0, [r0]
   426dc:	cmp	r0, #0
   426e0:	ldrne	r2, [r1]
   426e4:	addsne	r8, r2, r0
   426e8:	bne	426f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x64>
   426ec:	sub	sp, fp, #28
   426f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   426f4:	ldr	r0, [r1, #16]
   426f8:	ldr	sl, [fp, #12]
   426fc:	ldr	r2, [fp, #8]
   42700:	add	r7, r0, #1
   42704:	cmp	r0, #0
   42708:	str	r7, [r1, #16]
   4270c:	ldrne	r0, [r4, #20]
   42710:	addne	r1, r0, #1
   42714:	strne	r1, [r4, #20]
   42718:	movne	r1, #44	; 0x2c
   4271c:	strbne	r1, [r0]
   42720:	mov	r1, r3
   42724:	ldr	r0, [r8]
   42728:	ldr	r9, [r8, r0]!
   4272c:	mov	r0, r4
   42730:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   42734:	ldr	r1, [r4, #32]
   42738:	ldr	r0, [r4, #20]
   4273c:	cmp	r9, #0
   42740:	add	r1, r1, #1
   42744:	str	r1, [r4, #32]
   42748:	add	r1, r0, #1
   4274c:	str	r1, [r4, #20]
   42750:	mov	r1, #91	; 0x5b
   42754:	strb	r1, [r0]
   42758:	beq	4296c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2dc>
   4275c:	ldrb	r1, [r4, #25]
   42760:	ldr	r0, [r4, #20]
   42764:	cmp	r1, #0
   42768:	beq	42824 <flatcc_json_printer_int64_enum_vector_field@@Base+0x194>
   4276c:	add	r1, r0, #1
   42770:	str	r1, [r4, #20]
   42774:	mov	r1, #10
   42778:	strb	r1, [r0]
   4277c:	ldr	r0, [r4, #20]
   42780:	ldrb	r2, [r4, #25]
   42784:	ldr	r3, [r4, #32]
   42788:	ldr	r1, [r4, #16]
   4278c:	mla	r7, r3, r2, r0
   42790:	mul	r5, r3, r2
   42794:	cmp	r7, r1
   42798:	bls	42808 <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
   4279c:	cmp	r0, r1
   427a0:	bcc	427bc <flatcc_json_printer_int64_enum_vector_field@@Base+0x12c>
   427a4:	ldr	r2, [r4, #44]	; 0x2c
   427a8:	mov	r0, r4
   427ac:	mov	r1, #0
   427b0:	blx	r2
   427b4:	ldr	r1, [r4, #16]
   427b8:	ldr	r0, [r4, #20]
   427bc:	sub	r6, r1, r0
   427c0:	cmp	r6, r5
   427c4:	bcs	42808 <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
   427c8:	mov	r1, #32
   427cc:	mov	r2, r6
   427d0:	bl	14ef0 <memset@plt>
   427d4:	ldr	r0, [r4, #20]
   427d8:	ldr	r2, [r4, #44]	; 0x2c
   427dc:	mov	r1, #0
   427e0:	add	r0, r0, r6
   427e4:	str	r0, [r4, #20]
   427e8:	mov	r0, r4
   427ec:	blx	r2
   427f0:	ldr	r1, [r4, #16]
   427f4:	ldr	r0, [r4, #20]
   427f8:	sub	r5, r5, r6
   427fc:	sub	r6, r1, r0
   42800:	cmp	r5, r6
   42804:	bhi	427c8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   42808:	mov	r1, #32
   4280c:	mov	r2, r5
   42810:	bl	14ef0 <memset@plt>
   42814:	ldr	r0, [r4, #20]
   42818:	add	r0, r0, r5
   4281c:	str	r0, [r4, #20]
   42820:	b	42840 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   42824:	ldr	r1, [r4, #16]
   42828:	cmp	r0, r1
   4282c:	bcc	42840 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   42830:	ldr	r2, [r4, #44]	; 0x2c
   42834:	mov	r0, r4
   42838:	mov	r1, #0
   4283c:	blx	r2
   42840:	ldrd	r2, [r8, #4]
   42844:	mov	r0, r4
   42848:	blx	sl
   4284c:	subs	r9, r9, #1
   42850:	beq	4296c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2dc>
   42854:	add	r7, r8, #12
   42858:	mov	r8, #44	; 0x2c
   4285c:	ldr	r0, [r4, #20]
   42860:	sub	r9, r9, #1
   42864:	add	r1, r0, #1
   42868:	str	r1, [r4, #20]
   4286c:	strb	r8, [r0]
   42870:	ldrb	r1, [r4, #25]
   42874:	ldr	r0, [r4, #20]
   42878:	cmp	r1, #0
   4287c:	beq	42938 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a8>
   42880:	add	r1, r0, #1
   42884:	str	r1, [r4, #20]
   42888:	mov	r1, #10
   4288c:	strb	r1, [r0]
   42890:	ldr	r0, [r4, #20]
   42894:	ldrb	r2, [r4, #25]
   42898:	ldr	r3, [r4, #32]
   4289c:	ldr	r1, [r4, #16]
   428a0:	mla	r6, r3, r2, r0
   428a4:	mul	r5, r3, r2
   428a8:	cmp	r6, r1
   428ac:	bls	4291c <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   428b0:	cmp	r0, r1
   428b4:	bcc	428d0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x240>
   428b8:	ldr	r2, [r4, #44]	; 0x2c
   428bc:	mov	r0, r4
   428c0:	mov	r1, #0
   428c4:	blx	r2
   428c8:	ldr	r1, [r4, #16]
   428cc:	ldr	r0, [r4, #20]
   428d0:	sub	r6, r1, r0
   428d4:	cmp	r6, r5
   428d8:	bcs	4291c <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   428dc:	mov	r1, #32
   428e0:	mov	r2, r6
   428e4:	bl	14ef0 <memset@plt>
   428e8:	ldr	r0, [r4, #20]
   428ec:	ldr	r2, [r4, #44]	; 0x2c
   428f0:	mov	r1, #0
   428f4:	add	r0, r0, r6
   428f8:	str	r0, [r4, #20]
   428fc:	mov	r0, r4
   42900:	blx	r2
   42904:	ldr	r1, [r4, #16]
   42908:	ldr	r0, [r4, #20]
   4290c:	sub	r5, r5, r6
   42910:	sub	r6, r1, r0
   42914:	cmp	r5, r6
   42918:	bhi	428dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x24c>
   4291c:	mov	r1, #32
   42920:	mov	r2, r5
   42924:	bl	14ef0 <memset@plt>
   42928:	ldr	r0, [r4, #20]
   4292c:	add	r0, r0, r5
   42930:	str	r0, [r4, #20]
   42934:	b	42954 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   42938:	ldr	r1, [r4, #16]
   4293c:	cmp	r0, r1
   42940:	bcc	42954 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   42944:	ldr	r2, [r4, #44]	; 0x2c
   42948:	mov	r0, r4
   4294c:	mov	r1, #0
   42950:	blx	r2
   42954:	ldrd	r2, [r7]
   42958:	mov	r0, r4
   4295c:	blx	sl
   42960:	add	r7, r7, #8
   42964:	cmp	r9, #0
   42968:	bne	4285c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1cc>
   4296c:	ldrb	r1, [r4, #25]
   42970:	ldr	r0, [r4, #20]
   42974:	cmp	r1, #0
   42978:	beq	42a38 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3a8>
   4297c:	add	r1, r0, #1
   42980:	str	r1, [r4, #20]
   42984:	mov	r1, #10
   42988:	strb	r1, [r0]
   4298c:	ldr	r0, [r4, #32]
   42990:	sub	r2, r0, #1
   42994:	str	r2, [r4, #32]
   42998:	ldrb	r3, [r4, #25]
   4299c:	ldr	r0, [r4, #20]
   429a0:	ldr	r1, [r4, #16]
   429a4:	mla	r7, r2, r3, r0
   429a8:	mul	r5, r2, r3
   429ac:	cmp	r7, r1
   429b0:	bls	42a20 <flatcc_json_printer_int64_enum_vector_field@@Base+0x390>
   429b4:	cmp	r0, r1
   429b8:	bcc	429d4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x344>
   429bc:	ldr	r2, [r4, #44]	; 0x2c
   429c0:	mov	r0, r4
   429c4:	mov	r1, #0
   429c8:	blx	r2
   429cc:	ldr	r1, [r4, #16]
   429d0:	ldr	r0, [r4, #20]
   429d4:	sub	r6, r1, r0
   429d8:	cmp	r6, r5
   429dc:	bcs	42a20 <flatcc_json_printer_int64_enum_vector_field@@Base+0x390>
   429e0:	mov	r1, #32
   429e4:	mov	r2, r6
   429e8:	bl	14ef0 <memset@plt>
   429ec:	ldr	r0, [r4, #20]
   429f0:	ldr	r2, [r4, #44]	; 0x2c
   429f4:	mov	r1, #0
   429f8:	add	r0, r0, r6
   429fc:	str	r0, [r4, #20]
   42a00:	mov	r0, r4
   42a04:	blx	r2
   42a08:	ldr	r1, [r4, #16]
   42a0c:	ldr	r0, [r4, #20]
   42a10:	sub	r5, r5, r6
   42a14:	sub	r6, r1, r0
   42a18:	cmp	r5, r6
   42a1c:	bhi	429e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x350>
   42a20:	mov	r1, #32
   42a24:	mov	r2, r5
   42a28:	bl	14ef0 <memset@plt>
   42a2c:	ldr	r0, [r4, #20]
   42a30:	add	r0, r0, r5
   42a34:	str	r0, [r4, #20]
   42a38:	add	r1, r0, #1
   42a3c:	str	r1, [r4, #20]
   42a40:	mov	r1, #93	; 0x5d
   42a44:	strb	r1, [r0]
   42a48:	sub	sp, fp, #28
   42a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042a50 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   42a50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42a54:	add	fp, sp, #28
   42a58:	sub	sp, sp, #4
   42a5c:	mov	r4, r0
   42a60:	ldrb	r0, [r0, #27]
   42a64:	cmp	r0, #0
   42a68:	beq	42a7c <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   42a6c:	mov	r0, r4
   42a70:	sub	sp, fp, #28
   42a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42a78:	b	3fcf0 <flatcc_json_printer_bool_vector_field@@Base>
   42a7c:	mov	r0, #4
   42a80:	add	r0, r0, r2, lsl #1
   42a84:	ldr	r2, [r1, #8]
   42a88:	cmp	r0, r2
   42a8c:	bge	42aac <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   42a90:	ldr	r2, [r1, #4]
   42a94:	add	r0, r2, r0
   42a98:	ldrh	r0, [r0]
   42a9c:	cmp	r0, #0
   42aa0:	ldrne	r2, [r1]
   42aa4:	addsne	r8, r2, r0
   42aa8:	bne	42ab4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x64>
   42aac:	sub	sp, fp, #28
   42ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42ab4:	ldr	r0, [r1, #16]
   42ab8:	ldr	sl, [fp, #12]
   42abc:	ldr	r2, [fp, #8]
   42ac0:	add	r7, r0, #1
   42ac4:	cmp	r0, #0
   42ac8:	str	r7, [r1, #16]
   42acc:	ldrne	r0, [r4, #20]
   42ad0:	addne	r1, r0, #1
   42ad4:	strne	r1, [r4, #20]
   42ad8:	movne	r1, #44	; 0x2c
   42adc:	strbne	r1, [r0]
   42ae0:	mov	r1, r3
   42ae4:	ldr	r0, [r8]
   42ae8:	ldr	r9, [r8, r0]!
   42aec:	mov	r0, r4
   42af0:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   42af4:	ldr	r1, [r4, #32]
   42af8:	ldr	r0, [r4, #20]
   42afc:	cmp	r9, #0
   42b00:	add	r1, r1, #1
   42b04:	str	r1, [r4, #32]
   42b08:	add	r1, r0, #1
   42b0c:	str	r1, [r4, #20]
   42b10:	mov	r1, #91	; 0x5b
   42b14:	strb	r1, [r0]
   42b18:	beq	42d28 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d8>
   42b1c:	ldrb	r1, [r4, #25]
   42b20:	ldr	r0, [r4, #20]
   42b24:	cmp	r1, #0
   42b28:	beq	42be4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x194>
   42b2c:	add	r1, r0, #1
   42b30:	str	r1, [r4, #20]
   42b34:	mov	r1, #10
   42b38:	strb	r1, [r0]
   42b3c:	ldr	r0, [r4, #20]
   42b40:	ldrb	r2, [r4, #25]
   42b44:	ldr	r3, [r4, #32]
   42b48:	ldr	r1, [r4, #16]
   42b4c:	mla	r7, r3, r2, r0
   42b50:	mul	r5, r3, r2
   42b54:	cmp	r7, r1
   42b58:	bls	42bc8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
   42b5c:	cmp	r0, r1
   42b60:	bcc	42b7c <flatcc_json_printer_bool_enum_vector_field@@Base+0x12c>
   42b64:	ldr	r2, [r4, #44]	; 0x2c
   42b68:	mov	r0, r4
   42b6c:	mov	r1, #0
   42b70:	blx	r2
   42b74:	ldr	r1, [r4, #16]
   42b78:	ldr	r0, [r4, #20]
   42b7c:	sub	r6, r1, r0
   42b80:	cmp	r6, r5
   42b84:	bcs	42bc8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
   42b88:	mov	r1, #32
   42b8c:	mov	r2, r6
   42b90:	bl	14ef0 <memset@plt>
   42b94:	ldr	r0, [r4, #20]
   42b98:	ldr	r2, [r4, #44]	; 0x2c
   42b9c:	mov	r1, #0
   42ba0:	add	r0, r0, r6
   42ba4:	str	r0, [r4, #20]
   42ba8:	mov	r0, r4
   42bac:	blx	r2
   42bb0:	ldr	r1, [r4, #16]
   42bb4:	ldr	r0, [r4, #20]
   42bb8:	sub	r5, r5, r6
   42bbc:	sub	r6, r1, r0
   42bc0:	cmp	r5, r6
   42bc4:	bhi	42b88 <flatcc_json_printer_bool_enum_vector_field@@Base+0x138>
   42bc8:	mov	r1, #32
   42bcc:	mov	r2, r5
   42bd0:	bl	14ef0 <memset@plt>
   42bd4:	ldr	r0, [r4, #20]
   42bd8:	add	r0, r0, r5
   42bdc:	str	r0, [r4, #20]
   42be0:	b	42c00 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   42be4:	ldr	r1, [r4, #16]
   42be8:	cmp	r0, r1
   42bec:	bcc	42c00 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   42bf0:	ldr	r2, [r4, #44]	; 0x2c
   42bf4:	mov	r0, r4
   42bf8:	mov	r1, #0
   42bfc:	blx	r2
   42c00:	ldrb	r1, [r8, #4]
   42c04:	mov	r0, r4
   42c08:	blx	sl
   42c0c:	subs	r9, r9, #1
   42c10:	beq	42d28 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d8>
   42c14:	add	r7, r8, #5
   42c18:	mov	r8, #44	; 0x2c
   42c1c:	ldr	r0, [r4, #20]
   42c20:	sub	r9, r9, #1
   42c24:	add	r1, r0, #1
   42c28:	str	r1, [r4, #20]
   42c2c:	strb	r8, [r0]
   42c30:	ldrb	r1, [r4, #25]
   42c34:	ldr	r0, [r4, #20]
   42c38:	cmp	r1, #0
   42c3c:	beq	42cf8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a8>
   42c40:	add	r1, r0, #1
   42c44:	str	r1, [r4, #20]
   42c48:	mov	r1, #10
   42c4c:	strb	r1, [r0]
   42c50:	ldr	r0, [r4, #20]
   42c54:	ldrb	r2, [r4, #25]
   42c58:	ldr	r3, [r4, #32]
   42c5c:	ldr	r1, [r4, #16]
   42c60:	mla	r6, r3, r2, r0
   42c64:	mul	r5, r3, r2
   42c68:	cmp	r6, r1
   42c6c:	bls	42cdc <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   42c70:	cmp	r0, r1
   42c74:	bcc	42c90 <flatcc_json_printer_bool_enum_vector_field@@Base+0x240>
   42c78:	ldr	r2, [r4, #44]	; 0x2c
   42c7c:	mov	r0, r4
   42c80:	mov	r1, #0
   42c84:	blx	r2
   42c88:	ldr	r1, [r4, #16]
   42c8c:	ldr	r0, [r4, #20]
   42c90:	sub	r6, r1, r0
   42c94:	cmp	r6, r5
   42c98:	bcs	42cdc <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   42c9c:	mov	r1, #32
   42ca0:	mov	r2, r6
   42ca4:	bl	14ef0 <memset@plt>
   42ca8:	ldr	r0, [r4, #20]
   42cac:	ldr	r2, [r4, #44]	; 0x2c
   42cb0:	mov	r1, #0
   42cb4:	add	r0, r0, r6
   42cb8:	str	r0, [r4, #20]
   42cbc:	mov	r0, r4
   42cc0:	blx	r2
   42cc4:	ldr	r1, [r4, #16]
   42cc8:	ldr	r0, [r4, #20]
   42ccc:	sub	r5, r5, r6
   42cd0:	sub	r6, r1, r0
   42cd4:	cmp	r5, r6
   42cd8:	bhi	42c9c <flatcc_json_printer_bool_enum_vector_field@@Base+0x24c>
   42cdc:	mov	r1, #32
   42ce0:	mov	r2, r5
   42ce4:	bl	14ef0 <memset@plt>
   42ce8:	ldr	r0, [r4, #20]
   42cec:	add	r0, r0, r5
   42cf0:	str	r0, [r4, #20]
   42cf4:	b	42d14 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   42cf8:	ldr	r1, [r4, #16]
   42cfc:	cmp	r0, r1
   42d00:	bcc	42d14 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   42d04:	ldr	r2, [r4, #44]	; 0x2c
   42d08:	mov	r0, r4
   42d0c:	mov	r1, #0
   42d10:	blx	r2
   42d14:	ldrb	r1, [r7], #1
   42d18:	mov	r0, r4
   42d1c:	blx	sl
   42d20:	cmp	r9, #0
   42d24:	bne	42c1c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1cc>
   42d28:	ldrb	r1, [r4, #25]
   42d2c:	ldr	r0, [r4, #20]
   42d30:	cmp	r1, #0
   42d34:	beq	42df4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3a4>
   42d38:	add	r1, r0, #1
   42d3c:	str	r1, [r4, #20]
   42d40:	mov	r1, #10
   42d44:	strb	r1, [r0]
   42d48:	ldr	r0, [r4, #32]
   42d4c:	sub	r2, r0, #1
   42d50:	str	r2, [r4, #32]
   42d54:	ldrb	r3, [r4, #25]
   42d58:	ldr	r0, [r4, #20]
   42d5c:	ldr	r1, [r4, #16]
   42d60:	mla	r7, r2, r3, r0
   42d64:	mul	r5, r2, r3
   42d68:	cmp	r7, r1
   42d6c:	bls	42ddc <flatcc_json_printer_bool_enum_vector_field@@Base+0x38c>
   42d70:	cmp	r0, r1
   42d74:	bcc	42d90 <flatcc_json_printer_bool_enum_vector_field@@Base+0x340>
   42d78:	ldr	r2, [r4, #44]	; 0x2c
   42d7c:	mov	r0, r4
   42d80:	mov	r1, #0
   42d84:	blx	r2
   42d88:	ldr	r1, [r4, #16]
   42d8c:	ldr	r0, [r4, #20]
   42d90:	sub	r6, r1, r0
   42d94:	cmp	r6, r5
   42d98:	bcs	42ddc <flatcc_json_printer_bool_enum_vector_field@@Base+0x38c>
   42d9c:	mov	r1, #32
   42da0:	mov	r2, r6
   42da4:	bl	14ef0 <memset@plt>
   42da8:	ldr	r0, [r4, #20]
   42dac:	ldr	r2, [r4, #44]	; 0x2c
   42db0:	mov	r1, #0
   42db4:	add	r0, r0, r6
   42db8:	str	r0, [r4, #20]
   42dbc:	mov	r0, r4
   42dc0:	blx	r2
   42dc4:	ldr	r1, [r4, #16]
   42dc8:	ldr	r0, [r4, #20]
   42dcc:	sub	r5, r5, r6
   42dd0:	sub	r6, r1, r0
   42dd4:	cmp	r5, r6
   42dd8:	bhi	42d9c <flatcc_json_printer_bool_enum_vector_field@@Base+0x34c>
   42ddc:	mov	r1, #32
   42de0:	mov	r2, r5
   42de4:	bl	14ef0 <memset@plt>
   42de8:	ldr	r0, [r4, #20]
   42dec:	add	r0, r0, r5
   42df0:	str	r0, [r4, #20]
   42df4:	add	r1, r0, #1
   42df8:	str	r1, [r4, #20]
   42dfc:	mov	r1, #93	; 0x5d
   42e00:	strb	r1, [r0]
   42e04:	sub	sp, fp, #28
   42e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042e0c <flatcc_json_printer_struct_vector_field@@Base>:
   42e0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42e10:	add	fp, sp, #28
   42e14:	sub	sp, sp, #4
   42e18:	mov	r4, r0
   42e1c:	mov	r0, #4
   42e20:	add	r0, r0, r2, lsl #1
   42e24:	ldr	r2, [r1, #8]
   42e28:	cmp	r0, r2
   42e2c:	bge	42e4c <flatcc_json_printer_struct_vector_field@@Base+0x40>
   42e30:	ldr	r2, [r1, #4]
   42e34:	add	r0, r2, r0
   42e38:	ldrh	r0, [r0]
   42e3c:	cmp	r0, #0
   42e40:	ldrne	r2, [r1]
   42e44:	addsne	r6, r2, r0
   42e48:	bne	42e54 <flatcc_json_printer_struct_vector_field@@Base+0x48>
   42e4c:	sub	sp, fp, #28
   42e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42e54:	ldr	r0, [r1, #16]
   42e58:	ldr	r2, [fp, #8]
   42e5c:	add	r7, r0, #1
   42e60:	cmp	r0, #0
   42e64:	str	r7, [r1, #16]
   42e68:	ldrne	r0, [r4, #20]
   42e6c:	addne	r1, r0, #1
   42e70:	strne	r1, [r4, #20]
   42e74:	movne	r1, #44	; 0x2c
   42e78:	strbne	r1, [r0]
   42e7c:	mov	r1, r3
   42e80:	ldr	r0, [r6]
   42e84:	ldr	r5, [r6, r0]!
   42e88:	mov	r0, r4
   42e8c:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   42e90:	ldr	r1, [r4, #32]
   42e94:	ldr	r0, [r4, #20]
   42e98:	cmp	r5, #0
   42e9c:	add	r1, r1, #1
   42ea0:	str	r1, [r4, #32]
   42ea4:	add	r1, r0, #1
   42ea8:	str	r1, [r4, #20]
   42eac:	mov	r1, #91	; 0x5b
   42eb0:	strb	r1, [r0]
   42eb4:	beq	432c4 <flatcc_json_printer_struct_vector_field@@Base+0x4b8>
   42eb8:	ldrb	r1, [r4, #25]
   42ebc:	ldr	r0, [r4, #20]
   42ec0:	add	r9, r6, #4
   42ec4:	cmp	r1, #0
   42ec8:	beq	42f84 <flatcc_json_printer_struct_vector_field@@Base+0x178>
   42ecc:	add	r1, r0, #1
   42ed0:	str	r1, [r4, #20]
   42ed4:	mov	r1, #10
   42ed8:	strb	r1, [r0]
   42edc:	ldr	r0, [r4, #20]
   42ee0:	ldrb	r2, [r4, #25]
   42ee4:	ldr	r3, [r4, #32]
   42ee8:	ldr	r1, [r4, #16]
   42eec:	mla	r7, r3, r2, r0
   42ef0:	mul	r6, r3, r2
   42ef4:	cmp	r7, r1
   42ef8:	bls	42f68 <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   42efc:	cmp	r0, r1
   42f00:	bcc	42f1c <flatcc_json_printer_struct_vector_field@@Base+0x110>
   42f04:	ldr	r2, [r4, #44]	; 0x2c
   42f08:	mov	r0, r4
   42f0c:	mov	r1, #0
   42f10:	blx	r2
   42f14:	ldr	r1, [r4, #16]
   42f18:	ldr	r0, [r4, #20]
   42f1c:	sub	r7, r1, r0
   42f20:	cmp	r7, r6
   42f24:	bcs	42f68 <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   42f28:	mov	r1, #32
   42f2c:	mov	r2, r7
   42f30:	bl	14ef0 <memset@plt>
   42f34:	ldr	r0, [r4, #20]
   42f38:	ldr	r2, [r4, #44]	; 0x2c
   42f3c:	mov	r1, #0
   42f40:	add	r0, r0, r7
   42f44:	str	r0, [r4, #20]
   42f48:	mov	r0, r4
   42f4c:	blx	r2
   42f50:	ldr	r1, [r4, #16]
   42f54:	ldr	r0, [r4, #20]
   42f58:	sub	r6, r6, r7
   42f5c:	sub	r7, r1, r0
   42f60:	cmp	r6, r7
   42f64:	bhi	42f28 <flatcc_json_printer_struct_vector_field@@Base+0x11c>
   42f68:	mov	r1, #32
   42f6c:	mov	r2, r6
   42f70:	bl	14ef0 <memset@plt>
   42f74:	ldr	r0, [r4, #20]
   42f78:	add	r0, r0, r6
   42f7c:	str	r0, [r4, #20]
   42f80:	b	42fa4 <flatcc_json_printer_struct_vector_field@@Base+0x198>
   42f84:	ldr	r1, [r4, #16]
   42f88:	cmp	r0, r1
   42f8c:	bcc	42fa4 <flatcc_json_printer_struct_vector_field@@Base+0x198>
   42f90:	ldr	r2, [r4, #44]	; 0x2c
   42f94:	mov	r0, r4
   42f98:	mov	r1, #0
   42f9c:	blx	r2
   42fa0:	ldr	r0, [r4, #20]
   42fa4:	add	r1, r0, #1
   42fa8:	ldr	r2, [fp, #16]
   42fac:	str	r1, [r4, #20]
   42fb0:	ldr	r1, [r4, #32]
   42fb4:	add	r1, r1, #1
   42fb8:	str	r1, [r4, #32]
   42fbc:	mov	r1, #123	; 0x7b
   42fc0:	strb	r1, [r0]
   42fc4:	mov	r0, r4
   42fc8:	mov	r1, r9
   42fcc:	blx	r2
   42fd0:	ldrb	r1, [r4, #25]
   42fd4:	ldr	r0, [r4, #20]
   42fd8:	cmp	r1, #0
   42fdc:	beq	4309c <flatcc_json_printer_struct_vector_field@@Base+0x290>
   42fe0:	add	r1, r0, #1
   42fe4:	str	r1, [r4, #20]
   42fe8:	mov	r1, #10
   42fec:	strb	r1, [r0]
   42ff0:	ldr	r0, [r4, #32]
   42ff4:	sub	r2, r0, #1
   42ff8:	str	r2, [r4, #32]
   42ffc:	ldrb	r3, [r4, #25]
   43000:	ldr	r0, [r4, #20]
   43004:	ldr	r1, [r4, #16]
   43008:	mla	r7, r2, r3, r0
   4300c:	mul	r6, r2, r3
   43010:	cmp	r7, r1
   43014:	bls	43084 <flatcc_json_printer_struct_vector_field@@Base+0x278>
   43018:	cmp	r0, r1
   4301c:	bcc	43038 <flatcc_json_printer_struct_vector_field@@Base+0x22c>
   43020:	ldr	r2, [r4, #44]	; 0x2c
   43024:	mov	r0, r4
   43028:	mov	r1, #0
   4302c:	blx	r2
   43030:	ldr	r1, [r4, #16]
   43034:	ldr	r0, [r4, #20]
   43038:	sub	r7, r1, r0
   4303c:	cmp	r7, r6
   43040:	bcs	43084 <flatcc_json_printer_struct_vector_field@@Base+0x278>
   43044:	mov	r1, #32
   43048:	mov	r2, r7
   4304c:	bl	14ef0 <memset@plt>
   43050:	ldr	r0, [r4, #20]
   43054:	ldr	r2, [r4, #44]	; 0x2c
   43058:	mov	r1, #0
   4305c:	add	r0, r0, r7
   43060:	str	r0, [r4, #20]
   43064:	mov	r0, r4
   43068:	blx	r2
   4306c:	ldr	r1, [r4, #16]
   43070:	ldr	r0, [r4, #20]
   43074:	sub	r6, r6, r7
   43078:	sub	r7, r1, r0
   4307c:	cmp	r6, r7
   43080:	bhi	43044 <flatcc_json_printer_struct_vector_field@@Base+0x238>
   43084:	mov	r1, #32
   43088:	mov	r2, r6
   4308c:	bl	14ef0 <memset@plt>
   43090:	ldr	r0, [r4, #20]
   43094:	add	r0, r0, r6
   43098:	str	r0, [r4, #20]
   4309c:	add	r1, r0, #1
   430a0:	mov	sl, #125	; 0x7d
   430a4:	subs	r5, r5, #1
   430a8:	str	r1, [r4, #20]
   430ac:	strb	sl, [r0]
   430b0:	beq	432c4 <flatcc_json_printer_struct_vector_field@@Base+0x4b8>
   430b4:	mov	r8, #10
   430b8:	ldr	r0, [r4, #20]
   430bc:	add	r1, r0, #1
   430c0:	str	r1, [r4, #20]
   430c4:	mov	r1, #44	; 0x2c
   430c8:	strb	r1, [r0]
   430cc:	ldr	r0, [fp, #12]
   430d0:	ldrb	r1, [r4, #25]
   430d4:	add	r9, r9, r0
   430d8:	ldr	r0, [r4, #20]
   430dc:	cmp	r1, #0
   430e0:	beq	43198 <flatcc_json_printer_struct_vector_field@@Base+0x38c>
   430e4:	add	r1, r0, #1
   430e8:	str	r1, [r4, #20]
   430ec:	strb	r8, [r0]
   430f0:	ldr	r0, [r4, #20]
   430f4:	ldrb	r2, [r4, #25]
   430f8:	ldr	r3, [r4, #32]
   430fc:	ldr	r1, [r4, #16]
   43100:	mla	r7, r3, r2, r0
   43104:	mul	r6, r3, r2
   43108:	cmp	r7, r1
   4310c:	bls	4317c <flatcc_json_printer_struct_vector_field@@Base+0x370>
   43110:	cmp	r0, r1
   43114:	bcc	43130 <flatcc_json_printer_struct_vector_field@@Base+0x324>
   43118:	ldr	r2, [r4, #44]	; 0x2c
   4311c:	mov	r0, r4
   43120:	mov	r1, #0
   43124:	blx	r2
   43128:	ldr	r1, [r4, #16]
   4312c:	ldr	r0, [r4, #20]
   43130:	sub	r7, r1, r0
   43134:	cmp	r7, r6
   43138:	bcs	4317c <flatcc_json_printer_struct_vector_field@@Base+0x370>
   4313c:	mov	r1, #32
   43140:	mov	r2, r7
   43144:	bl	14ef0 <memset@plt>
   43148:	ldr	r0, [r4, #20]
   4314c:	ldr	r2, [r4, #44]	; 0x2c
   43150:	mov	r1, #0
   43154:	add	r0, r0, r7
   43158:	str	r0, [r4, #20]
   4315c:	mov	r0, r4
   43160:	blx	r2
   43164:	ldr	r1, [r4, #16]
   43168:	ldr	r0, [r4, #20]
   4316c:	sub	r6, r6, r7
   43170:	sub	r7, r1, r0
   43174:	cmp	r6, r7
   43178:	bhi	4313c <flatcc_json_printer_struct_vector_field@@Base+0x330>
   4317c:	mov	r1, #32
   43180:	mov	r2, r6
   43184:	bl	14ef0 <memset@plt>
   43188:	ldr	r0, [r4, #20]
   4318c:	add	r0, r0, r6
   43190:	str	r0, [r4, #20]
   43194:	b	431b8 <flatcc_json_printer_struct_vector_field@@Base+0x3ac>
   43198:	ldr	r1, [r4, #16]
   4319c:	cmp	r0, r1
   431a0:	bcc	431b8 <flatcc_json_printer_struct_vector_field@@Base+0x3ac>
   431a4:	ldr	r2, [r4, #44]	; 0x2c
   431a8:	mov	r0, r4
   431ac:	mov	r1, #0
   431b0:	blx	r2
   431b4:	ldr	r0, [r4, #20]
   431b8:	add	r1, r0, #1
   431bc:	ldr	r2, [fp, #16]
   431c0:	sub	r5, r5, #1
   431c4:	str	r1, [r4, #20]
   431c8:	ldr	r1, [r4, #32]
   431cc:	add	r1, r1, #1
   431d0:	str	r1, [r4, #32]
   431d4:	mov	r1, #123	; 0x7b
   431d8:	strb	r1, [r0]
   431dc:	mov	r0, r4
   431e0:	mov	r1, r9
   431e4:	blx	r2
   431e8:	ldrb	r1, [r4, #25]
   431ec:	ldr	r0, [r4, #20]
   431f0:	cmp	r1, #0
   431f4:	beq	432b0 <flatcc_json_printer_struct_vector_field@@Base+0x4a4>
   431f8:	add	r1, r0, #1
   431fc:	str	r1, [r4, #20]
   43200:	strb	r8, [r0]
   43204:	ldr	r0, [r4, #32]
   43208:	sub	r2, r0, #1
   4320c:	str	r2, [r4, #32]
   43210:	ldrb	r3, [r4, #25]
   43214:	ldr	r0, [r4, #20]
   43218:	ldr	r1, [r4, #16]
   4321c:	mla	r7, r2, r3, r0
   43220:	mul	r6, r2, r3
   43224:	cmp	r7, r1
   43228:	bls	43298 <flatcc_json_printer_struct_vector_field@@Base+0x48c>
   4322c:	cmp	r0, r1
   43230:	bcc	4324c <flatcc_json_printer_struct_vector_field@@Base+0x440>
   43234:	ldr	r2, [r4, #44]	; 0x2c
   43238:	mov	r0, r4
   4323c:	mov	r1, #0
   43240:	blx	r2
   43244:	ldr	r1, [r4, #16]
   43248:	ldr	r0, [r4, #20]
   4324c:	sub	r7, r1, r0
   43250:	cmp	r7, r6
   43254:	bcs	43298 <flatcc_json_printer_struct_vector_field@@Base+0x48c>
   43258:	mov	r1, #32
   4325c:	mov	r2, r7
   43260:	bl	14ef0 <memset@plt>
   43264:	ldr	r0, [r4, #20]
   43268:	ldr	r2, [r4, #44]	; 0x2c
   4326c:	mov	r1, #0
   43270:	add	r0, r0, r7
   43274:	str	r0, [r4, #20]
   43278:	mov	r0, r4
   4327c:	blx	r2
   43280:	ldr	r1, [r4, #16]
   43284:	ldr	r0, [r4, #20]
   43288:	sub	r6, r6, r7
   4328c:	sub	r7, r1, r0
   43290:	cmp	r6, r7
   43294:	bhi	43258 <flatcc_json_printer_struct_vector_field@@Base+0x44c>
   43298:	mov	r1, #32
   4329c:	mov	r2, r6
   432a0:	bl	14ef0 <memset@plt>
   432a4:	ldr	r0, [r4, #20]
   432a8:	add	r0, r0, r6
   432ac:	str	r0, [r4, #20]
   432b0:	add	r1, r0, #1
   432b4:	cmp	r5, #0
   432b8:	str	r1, [r4, #20]
   432bc:	strb	sl, [r0]
   432c0:	bne	430b8 <flatcc_json_printer_struct_vector_field@@Base+0x2ac>
   432c4:	ldrb	r1, [r4, #25]
   432c8:	ldr	r0, [r4, #20]
   432cc:	cmp	r1, #0
   432d0:	beq	43390 <flatcc_json_printer_struct_vector_field@@Base+0x584>
   432d4:	add	r1, r0, #1
   432d8:	str	r1, [r4, #20]
   432dc:	mov	r1, #10
   432e0:	strb	r1, [r0]
   432e4:	ldr	r0, [r4, #32]
   432e8:	sub	r2, r0, #1
   432ec:	str	r2, [r4, #32]
   432f0:	ldrb	r3, [r4, #25]
   432f4:	ldr	r0, [r4, #20]
   432f8:	ldr	r1, [r4, #16]
   432fc:	mla	r7, r2, r3, r0
   43300:	mul	r5, r2, r3
   43304:	cmp	r7, r1
   43308:	bls	43378 <flatcc_json_printer_struct_vector_field@@Base+0x56c>
   4330c:	cmp	r0, r1
   43310:	bcc	4332c <flatcc_json_printer_struct_vector_field@@Base+0x520>
   43314:	ldr	r2, [r4, #44]	; 0x2c
   43318:	mov	r0, r4
   4331c:	mov	r1, #0
   43320:	blx	r2
   43324:	ldr	r1, [r4, #16]
   43328:	ldr	r0, [r4, #20]
   4332c:	sub	r6, r1, r0
   43330:	cmp	r6, r5
   43334:	bcs	43378 <flatcc_json_printer_struct_vector_field@@Base+0x56c>
   43338:	mov	r1, #32
   4333c:	mov	r2, r6
   43340:	bl	14ef0 <memset@plt>
   43344:	ldr	r0, [r4, #20]
   43348:	ldr	r2, [r4, #44]	; 0x2c
   4334c:	mov	r1, #0
   43350:	add	r0, r0, r6
   43354:	str	r0, [r4, #20]
   43358:	mov	r0, r4
   4335c:	blx	r2
   43360:	ldr	r1, [r4, #16]
   43364:	ldr	r0, [r4, #20]
   43368:	sub	r5, r5, r6
   4336c:	sub	r6, r1, r0
   43370:	cmp	r5, r6
   43374:	bhi	43338 <flatcc_json_printer_struct_vector_field@@Base+0x52c>
   43378:	mov	r1, #32
   4337c:	mov	r2, r5
   43380:	bl	14ef0 <memset@plt>
   43384:	ldr	r0, [r4, #20]
   43388:	add	r0, r0, r5
   4338c:	str	r0, [r4, #20]
   43390:	add	r1, r0, #1
   43394:	str	r1, [r4, #20]
   43398:	mov	r1, #93	; 0x5d
   4339c:	strb	r1, [r0]
   433a0:	sub	sp, fp, #28
   433a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000433a8 <flatcc_json_printer_string_vector_field@@Base>:
   433a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   433ac:	add	fp, sp, #28
   433b0:	sub	sp, sp, #4
   433b4:	mov	r4, r0
   433b8:	mov	r0, #4
   433bc:	add	r0, r0, r2, lsl #1
   433c0:	ldr	r2, [r1, #8]
   433c4:	cmp	r0, r2
   433c8:	bge	433e8 <flatcc_json_printer_string_vector_field@@Base+0x40>
   433cc:	ldr	r2, [r1, #4]
   433d0:	add	r0, r2, r0
   433d4:	ldrh	r0, [r0]
   433d8:	cmp	r0, #0
   433dc:	ldrne	r2, [r1]
   433e0:	addsne	r5, r2, r0
   433e4:	bne	433f0 <flatcc_json_printer_string_vector_field@@Base+0x48>
   433e8:	sub	sp, fp, #28
   433ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   433f0:	ldr	r0, [r1, #16]
   433f4:	ldr	r2, [fp, #8]
   433f8:	add	r7, r0, #1
   433fc:	cmp	r0, #0
   43400:	str	r7, [r1, #16]
   43404:	ldrne	r0, [r4, #20]
   43408:	addne	r1, r0, #1
   4340c:	strne	r1, [r4, #20]
   43410:	movne	r1, #44	; 0x2c
   43414:	strbne	r1, [r0]
   43418:	mov	r1, r3
   4341c:	ldr	r0, [r5]
   43420:	ldr	r8, [r5, r0]!
   43424:	mov	r0, r4
   43428:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   4342c:	ldr	r1, [r4, #32]
   43430:	ldr	r0, [r4, #20]
   43434:	cmp	r8, #0
   43438:	add	r1, r1, #1
   4343c:	str	r1, [r4, #32]
   43440:	add	r1, r0, #1
   43444:	str	r1, [r4, #20]
   43448:	mov	r1, #91	; 0x5b
   4344c:	strb	r1, [r0]
   43450:	beq	4367c <flatcc_json_printer_string_vector_field@@Base+0x2d4>
   43454:	ldrb	r1, [r4, #25]
   43458:	ldr	r0, [r4, #20]
   4345c:	add	r9, r5, #4
   43460:	cmp	r1, #0
   43464:	beq	43520 <flatcc_json_printer_string_vector_field@@Base+0x178>
   43468:	add	r1, r0, #1
   4346c:	str	r1, [r4, #20]
   43470:	mov	r1, #10
   43474:	strb	r1, [r0]
   43478:	ldr	r0, [r4, #20]
   4347c:	ldrb	r2, [r4, #25]
   43480:	ldr	r3, [r4, #32]
   43484:	ldr	r1, [r4, #16]
   43488:	mla	r7, r3, r2, r0
   4348c:	mul	r5, r3, r2
   43490:	cmp	r7, r1
   43494:	bls	43504 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   43498:	cmp	r0, r1
   4349c:	bcc	434b8 <flatcc_json_printer_string_vector_field@@Base+0x110>
   434a0:	ldr	r2, [r4, #44]	; 0x2c
   434a4:	mov	r0, r4
   434a8:	mov	r1, #0
   434ac:	blx	r2
   434b0:	ldr	r1, [r4, #16]
   434b4:	ldr	r0, [r4, #20]
   434b8:	sub	r6, r1, r0
   434bc:	cmp	r6, r5
   434c0:	bcs	43504 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   434c4:	mov	r1, #32
   434c8:	mov	r2, r6
   434cc:	bl	14ef0 <memset@plt>
   434d0:	ldr	r0, [r4, #20]
   434d4:	ldr	r2, [r4, #44]	; 0x2c
   434d8:	mov	r1, #0
   434dc:	add	r0, r0, r6
   434e0:	str	r0, [r4, #20]
   434e4:	mov	r0, r4
   434e8:	blx	r2
   434ec:	ldr	r1, [r4, #16]
   434f0:	ldr	r0, [r4, #20]
   434f4:	sub	r5, r5, r6
   434f8:	sub	r6, r1, r0
   434fc:	cmp	r5, r6
   43500:	bhi	434c4 <flatcc_json_printer_string_vector_field@@Base+0x11c>
   43504:	mov	r1, #32
   43508:	mov	r2, r5
   4350c:	bl	14ef0 <memset@plt>
   43510:	ldr	r0, [r4, #20]
   43514:	add	r0, r0, r5
   43518:	str	r0, [r4, #20]
   4351c:	b	4353c <flatcc_json_printer_string_vector_field@@Base+0x194>
   43520:	ldr	r1, [r4, #16]
   43524:	cmp	r0, r1
   43528:	bcc	4353c <flatcc_json_printer_string_vector_field@@Base+0x194>
   4352c:	ldr	r2, [r4, #44]	; 0x2c
   43530:	mov	r0, r4
   43534:	mov	r1, #0
   43538:	blx	r2
   4353c:	ldr	r0, [r9]
   43540:	mov	r1, r9
   43544:	ldr	r2, [r1, r0]!
   43548:	mov	r0, r4
   4354c:	add	r1, r1, #4
   43550:	bl	39cbc <flatcc_json_printer_string@@Base+0x4>
   43554:	subs	r7, r8, #1
   43558:	beq	4367c <flatcc_json_printer_string_vector_field@@Base+0x2d4>
   4355c:	mov	r8, #44	; 0x2c
   43560:	mov	sl, #10
   43564:	ldr	r0, [r4, #20]
   43568:	add	r9, r9, #4
   4356c:	sub	r7, r7, #1
   43570:	add	r1, r0, #1
   43574:	str	r1, [r4, #20]
   43578:	strb	r8, [r0]
   4357c:	ldrb	r1, [r4, #25]
   43580:	ldr	r0, [r4, #20]
   43584:	cmp	r1, #0
   43588:	beq	43640 <flatcc_json_printer_string_vector_field@@Base+0x298>
   4358c:	add	r1, r0, #1
   43590:	str	r1, [r4, #20]
   43594:	strb	sl, [r0]
   43598:	ldr	r0, [r4, #20]
   4359c:	ldrb	r2, [r4, #25]
   435a0:	ldr	r3, [r4, #32]
   435a4:	ldr	r1, [r4, #16]
   435a8:	mla	r6, r3, r2, r0
   435ac:	mul	r5, r3, r2
   435b0:	cmp	r6, r1
   435b4:	bls	43624 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   435b8:	cmp	r0, r1
   435bc:	bcc	435d8 <flatcc_json_printer_string_vector_field@@Base+0x230>
   435c0:	ldr	r2, [r4, #44]	; 0x2c
   435c4:	mov	r0, r4
   435c8:	mov	r1, #0
   435cc:	blx	r2
   435d0:	ldr	r1, [r4, #16]
   435d4:	ldr	r0, [r4, #20]
   435d8:	sub	r6, r1, r0
   435dc:	cmp	r6, r5
   435e0:	bcs	43624 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   435e4:	mov	r1, #32
   435e8:	mov	r2, r6
   435ec:	bl	14ef0 <memset@plt>
   435f0:	ldr	r0, [r4, #20]
   435f4:	ldr	r2, [r4, #44]	; 0x2c
   435f8:	mov	r1, #0
   435fc:	add	r0, r0, r6
   43600:	str	r0, [r4, #20]
   43604:	mov	r0, r4
   43608:	blx	r2
   4360c:	ldr	r1, [r4, #16]
   43610:	ldr	r0, [r4, #20]
   43614:	sub	r5, r5, r6
   43618:	sub	r6, r1, r0
   4361c:	cmp	r5, r6
   43620:	bhi	435e4 <flatcc_json_printer_string_vector_field@@Base+0x23c>
   43624:	mov	r1, #32
   43628:	mov	r2, r5
   4362c:	bl	14ef0 <memset@plt>
   43630:	ldr	r0, [r4, #20]
   43634:	add	r0, r0, r5
   43638:	str	r0, [r4, #20]
   4363c:	b	4365c <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   43640:	ldr	r1, [r4, #16]
   43644:	cmp	r0, r1
   43648:	bcc	4365c <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   4364c:	ldr	r2, [r4, #44]	; 0x2c
   43650:	mov	r0, r4
   43654:	mov	r1, #0
   43658:	blx	r2
   4365c:	ldr	r0, [r9]
   43660:	mov	r1, r9
   43664:	ldr	r2, [r1, r0]!
   43668:	mov	r0, r4
   4366c:	add	r1, r1, #4
   43670:	bl	39cbc <flatcc_json_printer_string@@Base+0x4>
   43674:	cmp	r7, #0
   43678:	bne	43564 <flatcc_json_printer_string_vector_field@@Base+0x1bc>
   4367c:	ldrb	r1, [r4, #25]
   43680:	ldr	r0, [r4, #20]
   43684:	cmp	r1, #0
   43688:	beq	43748 <flatcc_json_printer_string_vector_field@@Base+0x3a0>
   4368c:	add	r1, r0, #1
   43690:	str	r1, [r4, #20]
   43694:	mov	r1, #10
   43698:	strb	r1, [r0]
   4369c:	ldr	r0, [r4, #32]
   436a0:	sub	r2, r0, #1
   436a4:	str	r2, [r4, #32]
   436a8:	ldrb	r3, [r4, #25]
   436ac:	ldr	r0, [r4, #20]
   436b0:	ldr	r1, [r4, #16]
   436b4:	mla	r7, r2, r3, r0
   436b8:	mul	r5, r2, r3
   436bc:	cmp	r7, r1
   436c0:	bls	43730 <flatcc_json_printer_string_vector_field@@Base+0x388>
   436c4:	cmp	r0, r1
   436c8:	bcc	436e4 <flatcc_json_printer_string_vector_field@@Base+0x33c>
   436cc:	ldr	r2, [r4, #44]	; 0x2c
   436d0:	mov	r0, r4
   436d4:	mov	r1, #0
   436d8:	blx	r2
   436dc:	ldr	r1, [r4, #16]
   436e0:	ldr	r0, [r4, #20]
   436e4:	sub	r6, r1, r0
   436e8:	cmp	r6, r5
   436ec:	bcs	43730 <flatcc_json_printer_string_vector_field@@Base+0x388>
   436f0:	mov	r1, #32
   436f4:	mov	r2, r6
   436f8:	bl	14ef0 <memset@plt>
   436fc:	ldr	r0, [r4, #20]
   43700:	ldr	r2, [r4, #44]	; 0x2c
   43704:	mov	r1, #0
   43708:	add	r0, r0, r6
   4370c:	str	r0, [r4, #20]
   43710:	mov	r0, r4
   43714:	blx	r2
   43718:	ldr	r1, [r4, #16]
   4371c:	ldr	r0, [r4, #20]
   43720:	sub	r5, r5, r6
   43724:	sub	r6, r1, r0
   43728:	cmp	r5, r6
   4372c:	bhi	436f0 <flatcc_json_printer_string_vector_field@@Base+0x348>
   43730:	mov	r1, #32
   43734:	mov	r2, r5
   43738:	bl	14ef0 <memset@plt>
   4373c:	ldr	r0, [r4, #20]
   43740:	add	r0, r0, r5
   43744:	str	r0, [r4, #20]
   43748:	add	r1, r0, #1
   4374c:	str	r1, [r4, #20]
   43750:	mov	r1, #93	; 0x5d
   43754:	strb	r1, [r0]
   43758:	sub	sp, fp, #28
   4375c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043760 <flatcc_json_printer_table_vector_field@@Base>:
   43760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43764:	add	fp, sp, #28
   43768:	sub	sp, sp, #20
   4376c:	mov	sl, r1
   43770:	ldr	r1, [r1, #8]
   43774:	mov	r4, r0
   43778:	mov	r0, #4
   4377c:	add	r0, r0, r2, lsl #1
   43780:	cmp	r0, r1
   43784:	bge	437a4 <flatcc_json_printer_table_vector_field@@Base+0x44>
   43788:	ldr	r1, [sl, #4]
   4378c:	add	r0, r1, r0
   43790:	ldrh	r0, [r0]
   43794:	cmp	r0, #0
   43798:	ldrne	r1, [sl]
   4379c:	addsne	r5, r1, r0
   437a0:	bne	437ac <flatcc_json_printer_table_vector_field@@Base+0x4c>
   437a4:	sub	sp, fp, #28
   437a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   437ac:	ldr	r0, [sl, #16]
   437b0:	ldr	r2, [fp, #8]
   437b4:	add	r1, r0, #1
   437b8:	cmp	r0, #0
   437bc:	str	r1, [sl, #16]
   437c0:	ldrne	r0, [r4, #20]
   437c4:	addne	r1, r0, #1
   437c8:	strne	r1, [r4, #20]
   437cc:	movne	r1, #44	; 0x2c
   437d0:	strbne	r1, [r0]
   437d4:	mov	r1, r3
   437d8:	ldr	r0, [r5]
   437dc:	ldr	r8, [r5, r0]!
   437e0:	mov	r0, r4
   437e4:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   437e8:	ldr	r1, [r4, #32]
   437ec:	ldr	r0, [r4, #20]
   437f0:	cmp	r8, #0
   437f4:	add	r1, r1, #1
   437f8:	str	r1, [r4, #32]
   437fc:	add	r1, r0, #1
   43800:	str	r1, [r4, #20]
   43804:	mov	r1, #91	; 0x5b
   43808:	strb	r1, [r0]
   4380c:	beq	43b14 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   43810:	ldr	r0, [sl, #12]
   43814:	ldr	r6, [fp, #12]
   43818:	add	r5, r5, #4
   4381c:	subs	r0, r0, #1
   43820:	beq	43968 <flatcc_json_printer_table_vector_field@@Base+0x208>
   43824:	ldr	r3, [r4, #32]
   43828:	ldr	r2, [r4, #20]
   4382c:	ldr	r1, [r5]
   43830:	add	r3, r3, #1
   43834:	add	r1, r5, r1
   43838:	str	r3, [r4, #32]
   4383c:	add	r3, r2, #1
   43840:	str	r3, [r4, #20]
   43844:	mov	r3, #123	; 0x7b
   43848:	strb	r3, [r2]
   4384c:	str	r0, [sp, #12]
   43850:	mov	r0, #0
   43854:	str	r0, [sp, #16]
   43858:	str	r1, [sp]
   4385c:	ldr	r0, [r1]
   43860:	sub	r2, r1, r0
   43864:	str	r2, [sp, #4]
   43868:	ldrh	r0, [r1, -r0]
   4386c:	mov	r1, sp
   43870:	str	r0, [sp, #8]
   43874:	mov	r0, r4
   43878:	blx	r6
   4387c:	ldrb	r1, [r4, #25]
   43880:	ldr	r0, [r4, #20]
   43884:	cmp	r1, #0
   43888:	beq	4394c <flatcc_json_printer_table_vector_field@@Base+0x1ec>
   4388c:	add	r1, r0, #1
   43890:	str	r1, [r4, #20]
   43894:	mov	r1, #10
   43898:	strb	r1, [r0]
   4389c:	ldr	r0, [r4, #32]
   438a0:	sub	r2, r0, #1
   438a4:	str	r2, [r4, #32]
   438a8:	ldrb	r3, [r4, #25]
   438ac:	ldr	r0, [r4, #20]
   438b0:	ldr	r1, [r4, #16]
   438b4:	mla	r7, r2, r3, r0
   438b8:	mul	r6, r2, r3
   438bc:	cmp	r7, r1
   438c0:	bls	43930 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
   438c4:	cmp	r0, r1
   438c8:	bcc	438e4 <flatcc_json_printer_table_vector_field@@Base+0x184>
   438cc:	ldr	r2, [r4, #44]	; 0x2c
   438d0:	mov	r0, r4
   438d4:	mov	r1, #0
   438d8:	blx	r2
   438dc:	ldr	r1, [r4, #16]
   438e0:	ldr	r0, [r4, #20]
   438e4:	sub	r7, r1, r0
   438e8:	cmp	r7, r6
   438ec:	bcs	43930 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
   438f0:	mov	r1, #32
   438f4:	mov	r2, r7
   438f8:	bl	14ef0 <memset@plt>
   438fc:	ldr	r0, [r4, #20]
   43900:	ldr	r2, [r4, #44]	; 0x2c
   43904:	mov	r1, #0
   43908:	add	r0, r0, r7
   4390c:	str	r0, [r4, #20]
   43910:	mov	r0, r4
   43914:	blx	r2
   43918:	ldr	r1, [r4, #16]
   4391c:	ldr	r0, [r4, #20]
   43920:	sub	r6, r6, r7
   43924:	sub	r7, r1, r0
   43928:	cmp	r6, r7
   4392c:	bhi	438f0 <flatcc_json_printer_table_vector_field@@Base+0x190>
   43930:	mov	r1, #32
   43934:	mov	r2, r6
   43938:	bl	14ef0 <memset@plt>
   4393c:	ldr	r0, [r4, #20]
   43940:	add	r0, r0, r6
   43944:	ldr	r6, [fp, #12]
   43948:	str	r0, [r4, #20]
   4394c:	add	r1, r0, #1
   43950:	str	r1, [r4, #20]
   43954:	mov	r1, #125	; 0x7d
   43958:	strb	r1, [r0]
   4395c:	subs	r9, r8, #1
   43960:	bne	43980 <flatcc_json_printer_table_vector_field@@Base+0x220>
   43964:	b	43b14 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   43968:	ldr	r0, [r4, #36]	; 0x24
   4396c:	cmp	r0, #0
   43970:	moveq	r0, #2
   43974:	streq	r0, [r4, #36]	; 0x24
   43978:	subs	r9, r8, #1
   4397c:	beq	43b14 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   43980:	mov	r8, #44	; 0x2c
   43984:	ldr	r0, [r4, #20]
   43988:	sub	r9, r9, #1
   4398c:	add	r1, r0, #1
   43990:	str	r1, [r4, #20]
   43994:	strb	r8, [r0]
   43998:	ldr	r0, [sl, #12]
   4399c:	ldr	r1, [r5, #4]!
   439a0:	subs	r0, r0, #1
   439a4:	beq	43ac4 <flatcc_json_printer_table_vector_field@@Base+0x364>
   439a8:	ldr	r3, [r4, #32]
   439ac:	ldr	r2, [r4, #20]
   439b0:	add	r1, r5, r1
   439b4:	add	r3, r3, #1
   439b8:	str	r3, [r4, #32]
   439bc:	add	r3, r2, #1
   439c0:	str	r3, [r4, #20]
   439c4:	mov	r3, #123	; 0x7b
   439c8:	strb	r3, [r2]
   439cc:	str	r0, [sp, #12]
   439d0:	mov	r0, #0
   439d4:	str	r0, [sp, #16]
   439d8:	str	r1, [sp]
   439dc:	ldr	r0, [r1]
   439e0:	sub	r2, r1, r0
   439e4:	str	r2, [sp, #4]
   439e8:	ldrh	r0, [r1, -r0]
   439ec:	mov	r1, sp
   439f0:	str	r0, [sp, #8]
   439f4:	mov	r0, r4
   439f8:	blx	r6
   439fc:	ldrb	r1, [r4, #25]
   43a00:	ldr	r0, [r4, #20]
   43a04:	cmp	r1, #0
   43a08:	beq	43afc <flatcc_json_printer_table_vector_field@@Base+0x39c>
   43a0c:	add	r1, r0, #1
   43a10:	str	r1, [r4, #20]
   43a14:	mov	r1, #10
   43a18:	strb	r1, [r0]
   43a1c:	ldr	r0, [r4, #32]
   43a20:	sub	r2, r0, #1
   43a24:	str	r2, [r4, #32]
   43a28:	ldrb	r3, [r4, #25]
   43a2c:	ldr	r0, [r4, #20]
   43a30:	ldr	r1, [r4, #16]
   43a34:	mla	r6, r2, r3, r0
   43a38:	mul	r7, r2, r3
   43a3c:	cmp	r6, r1
   43a40:	bls	43ae0 <flatcc_json_printer_table_vector_field@@Base+0x380>
   43a44:	cmp	r0, r1
   43a48:	bcc	43a64 <flatcc_json_printer_table_vector_field@@Base+0x304>
   43a4c:	ldr	r2, [r4, #44]	; 0x2c
   43a50:	mov	r0, r4
   43a54:	mov	r1, #0
   43a58:	blx	r2
   43a5c:	ldr	r1, [r4, #16]
   43a60:	ldr	r0, [r4, #20]
   43a64:	sub	r6, r1, r0
   43a68:	cmp	r6, r7
   43a6c:	bcs	43ab0 <flatcc_json_printer_table_vector_field@@Base+0x350>
   43a70:	mov	r1, #32
   43a74:	mov	r2, r6
   43a78:	bl	14ef0 <memset@plt>
   43a7c:	ldr	r0, [r4, #20]
   43a80:	ldr	r2, [r4, #44]	; 0x2c
   43a84:	mov	r1, #0
   43a88:	add	r0, r0, r6
   43a8c:	str	r0, [r4, #20]
   43a90:	mov	r0, r4
   43a94:	blx	r2
   43a98:	ldr	r1, [r4, #16]
   43a9c:	ldr	r0, [r4, #20]
   43aa0:	sub	r7, r7, r6
   43aa4:	sub	r6, r1, r0
   43aa8:	cmp	r7, r6
   43aac:	bhi	43a70 <flatcc_json_printer_table_vector_field@@Base+0x310>
   43ab0:	ldr	r6, [fp, #12]
   43ab4:	mov	r1, #32
   43ab8:	mov	r2, r7
   43abc:	bl	14ef0 <memset@plt>
   43ac0:	b	43af0 <flatcc_json_printer_table_vector_field@@Base+0x390>
   43ac4:	ldr	r0, [r4, #36]	; 0x24
   43ac8:	cmp	r0, #0
   43acc:	moveq	r0, #2
   43ad0:	streq	r0, [r4, #36]	; 0x24
   43ad4:	cmp	r9, #0
   43ad8:	bne	43984 <flatcc_json_printer_table_vector_field@@Base+0x224>
   43adc:	b	43b14 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   43ae0:	mov	r1, #32
   43ae4:	mov	r2, r7
   43ae8:	bl	14ef0 <memset@plt>
   43aec:	ldr	r6, [fp, #12]
   43af0:	ldr	r0, [r4, #20]
   43af4:	add	r0, r0, r7
   43af8:	str	r0, [r4, #20]
   43afc:	add	r1, r0, #1
   43b00:	str	r1, [r4, #20]
   43b04:	mov	r1, #125	; 0x7d
   43b08:	strb	r1, [r0]
   43b0c:	cmp	r9, #0
   43b10:	bne	43984 <flatcc_json_printer_table_vector_field@@Base+0x224>
   43b14:	ldrb	r1, [r4, #25]
   43b18:	ldr	r0, [r4, #20]
   43b1c:	cmp	r1, #0
   43b20:	beq	43be0 <flatcc_json_printer_table_vector_field@@Base+0x480>
   43b24:	add	r1, r0, #1
   43b28:	str	r1, [r4, #20]
   43b2c:	mov	r1, #10
   43b30:	strb	r1, [r0]
   43b34:	ldr	r0, [r4, #32]
   43b38:	sub	r2, r0, #1
   43b3c:	str	r2, [r4, #32]
   43b40:	ldrb	r3, [r4, #25]
   43b44:	ldr	r0, [r4, #20]
   43b48:	ldr	r1, [r4, #16]
   43b4c:	mla	r7, r2, r3, r0
   43b50:	mul	r5, r2, r3
   43b54:	cmp	r7, r1
   43b58:	bls	43bc8 <flatcc_json_printer_table_vector_field@@Base+0x468>
   43b5c:	cmp	r0, r1
   43b60:	bcc	43b7c <flatcc_json_printer_table_vector_field@@Base+0x41c>
   43b64:	ldr	r2, [r4, #44]	; 0x2c
   43b68:	mov	r0, r4
   43b6c:	mov	r1, #0
   43b70:	blx	r2
   43b74:	ldr	r1, [r4, #16]
   43b78:	ldr	r0, [r4, #20]
   43b7c:	sub	r6, r1, r0
   43b80:	cmp	r6, r5
   43b84:	bcs	43bc8 <flatcc_json_printer_table_vector_field@@Base+0x468>
   43b88:	mov	r1, #32
   43b8c:	mov	r2, r6
   43b90:	bl	14ef0 <memset@plt>
   43b94:	ldr	r0, [r4, #20]
   43b98:	ldr	r2, [r4, #44]	; 0x2c
   43b9c:	mov	r1, #0
   43ba0:	add	r0, r0, r6
   43ba4:	str	r0, [r4, #20]
   43ba8:	mov	r0, r4
   43bac:	blx	r2
   43bb0:	ldr	r1, [r4, #16]
   43bb4:	ldr	r0, [r4, #20]
   43bb8:	sub	r5, r5, r6
   43bbc:	sub	r6, r1, r0
   43bc0:	cmp	r5, r6
   43bc4:	bhi	43b88 <flatcc_json_printer_table_vector_field@@Base+0x428>
   43bc8:	mov	r1, #32
   43bcc:	mov	r2, r5
   43bd0:	bl	14ef0 <memset@plt>
   43bd4:	ldr	r0, [r4, #20]
   43bd8:	add	r0, r0, r5
   43bdc:	str	r0, [r4, #20]
   43be0:	add	r1, r0, #1
   43be4:	str	r1, [r4, #20]
   43be8:	mov	r1, #93	; 0x5d
   43bec:	strb	r1, [r0]
   43bf0:	sub	sp, fp, #28
   43bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043bf8 <flatcc_json_printer_union_vector_field@@Base>:
   43bf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43bfc:	add	fp, sp, #28
   43c00:	sub	sp, sp, #140	; 0x8c
   43c04:	mov	r6, r1
   43c08:	mov	r9, r0
   43c0c:	sub	r1, r2, #1
   43c10:	mov	r0, #4
   43c14:	mov	r4, r3
   43c18:	mov	r5, #0
   43c1c:	mov	r8, #0
   43c20:	str	r1, [sp, #8]
   43c24:	add	r3, r0, r1, lsl #1
   43c28:	ldr	r1, [r6, #8]
   43c2c:	cmp	r3, r1
   43c30:	bge	43c50 <flatcc_json_printer_union_vector_field@@Base+0x58>
   43c34:	ldr	r7, [r6, #4]
   43c38:	mov	r8, #0
   43c3c:	add	r3, r7, r3
   43c40:	ldrh	r3, [r3]
   43c44:	cmp	r3, #0
   43c48:	ldrne	r7, [r6]
   43c4c:	addne	r8, r7, r3
   43c50:	ldr	sl, [fp, #8]
   43c54:	add	r0, r0, r2, lsl #1
   43c58:	cmp	r0, r1
   43c5c:	bge	43c78 <flatcc_json_printer_union_vector_field@@Base+0x80>
   43c60:	ldr	r1, [r6, #4]
   43c64:	add	r0, r1, r0
   43c68:	ldrh	r0, [r0]
   43c6c:	cmp	r0, #0
   43c70:	ldrne	r1, [r6]
   43c74:	addne	r5, r1, r0
   43c78:	ldr	r0, [r6, #12]
   43c7c:	cmp	sl, #101	; 0x65
   43c80:	str	r5, [sp, #16]
   43c84:	str	r0, [sp, #24]
   43c88:	bge	43fa0 <flatcc_json_printer_union_vector_field@@Base+0x3a8>
   43c8c:	add	r5, sp, #32
   43c90:	mov	r1, r4
   43c94:	mov	r2, sl
   43c98:	str	r4, [sp, #12]
   43c9c:	mov	r0, r5
   43ca0:	bl	14e60 <memcpy@plt>
   43ca4:	movw	r0, #29791	; 0x745f
   43ca8:	cmp	r8, #0
   43cac:	mov	r1, #101	; 0x65
   43cb0:	movt	r0, #28793	; 0x7079
   43cb4:	str	r0, [r5, sl]
   43cb8:	add	r0, r5, sl
   43cbc:	ldr	r5, [sp, #16]
   43cc0:	strb	r1, [r0, #4]
   43cc4:	cmpne	r5, #0
   43cc8:	bne	43cd4 <flatcc_json_printer_union_vector_field@@Base+0xdc>
   43ccc:	sub	sp, fp, #28
   43cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43cd4:	ldr	r0, [fp, #12]
   43cd8:	ldr	r2, [sp, #8]
   43cdc:	add	r1, sl, #5
   43ce0:	add	r3, sp, #32
   43ce4:	str	r1, [sp]
   43ce8:	mov	r1, r6
   43cec:	str	r0, [sp, #4]
   43cf0:	mov	r0, r9
   43cf4:	bl	408ac <flatcc_json_printer_utype_enum_vector_field@@Base>
   43cf8:	ldr	r0, [r6, #16]
   43cfc:	add	r7, r9, #20
   43d00:	mov	r2, sl
   43d04:	add	r1, r0, #1
   43d08:	cmp	r0, #0
   43d0c:	str	r1, [r6, #16]
   43d10:	mov	r6, r5
   43d14:	ldrne	r0, [r7]
   43d18:	addne	r1, r0, #1
   43d1c:	strne	r1, [r7]
   43d20:	movne	r1, #44	; 0x2c
   43d24:	strbne	r1, [r0]
   43d28:	ldr	r1, [sp, #12]
   43d2c:	ldr	r0, [r5]
   43d30:	ldr	r5, [r8]
   43d34:	ldr	r4, [r6, r0]!
   43d38:	str	r0, [sp, #8]
   43d3c:	mov	r0, r9
   43d40:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   43d44:	ldr	r1, [r9, #32]
   43d48:	ldr	r0, [r9, #20]
   43d4c:	cmp	r4, #0
   43d50:	add	r1, r1, #1
   43d54:	str	r1, [r9, #32]
   43d58:	add	r1, r0, #1
   43d5c:	str	r1, [r9, #20]
   43d60:	mov	r1, #91	; 0x5b
   43d64:	strb	r1, [r0]
   43d68:	beq	43ebc <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   43d6c:	add	r5, r8, r5
   43d70:	ldr	r2, [fp, #16]
   43d74:	ldrb	r0, [r5, #4]
   43d78:	cmp	r0, #0
   43d7c:	beq	43da8 <flatcc_json_printer_union_vector_field@@Base+0x1b0>
   43d80:	add	r1, r6, #4
   43d84:	mov	r8, r2
   43d88:	str	r1, [sp, #20]
   43d8c:	strb	r0, [sp, #28]
   43d90:	add	r1, sp, #20
   43d94:	mov	r0, r9
   43d98:	blx	r2
   43d9c:	cmp	r4, #1
   43da0:	bne	43e00 <flatcc_json_printer_union_vector_field@@Base+0x208>
   43da4:	b	43ebc <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   43da8:	ldr	r0, [r7]
   43dac:	mov	r8, r2
   43db0:	add	r1, r0, #1
   43db4:	str	r1, [r7]
   43db8:	mov	r1, #110	; 0x6e
   43dbc:	strb	r1, [r0]
   43dc0:	ldr	r0, [r7]
   43dc4:	add	r1, r0, #1
   43dc8:	str	r1, [r7]
   43dcc:	mov	r1, #117	; 0x75
   43dd0:	strb	r1, [r0]
   43dd4:	ldr	r0, [r7]
   43dd8:	add	r1, r0, #1
   43ddc:	str	r1, [r7]
   43de0:	mov	r1, #108	; 0x6c
   43de4:	strb	r1, [r0]
   43de8:	ldr	r0, [r7]
   43dec:	add	r2, r0, #1
   43df0:	str	r2, [r7]
   43df4:	strb	r1, [r0]
   43df8:	cmp	r4, #1
   43dfc:	beq	43ebc <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   43e00:	ldr	r0, [sp, #16]
   43e04:	ldr	r1, [sp, #8]
   43e08:	add	r5, r5, #5
   43e0c:	rsb	r4, r4, #1
   43e10:	mov	sl, #44	; 0x2c
   43e14:	add	r0, r0, r1
   43e18:	add	r6, r0, #8
   43e1c:	ldrb	r0, [r5]
   43e20:	ldr	r1, [r7]
   43e24:	add	r2, r1, #1
   43e28:	cmp	r0, #0
   43e2c:	str	r2, [r7]
   43e30:	strb	sl, [r1]
   43e34:	beq	43e60 <flatcc_json_printer_union_vector_field@@Base+0x268>
   43e38:	str	r6, [sp, #20]
   43e3c:	strb	r0, [sp, #28]
   43e40:	mov	r0, r9
   43e44:	add	r1, sp, #20
   43e48:	blx	r8
   43e4c:	add	r6, r6, #4
   43e50:	add	r5, r5, #1
   43e54:	adds	r4, r4, #1
   43e58:	bne	43e1c <flatcc_json_printer_union_vector_field@@Base+0x224>
   43e5c:	b	43ebc <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   43e60:	ldr	r0, [r7]
   43e64:	mov	r2, #108	; 0x6c
   43e68:	add	r1, r0, #1
   43e6c:	str	r1, [r7]
   43e70:	mov	r1, #110	; 0x6e
   43e74:	strb	r1, [r0]
   43e78:	ldr	r0, [r7]
   43e7c:	add	r1, r0, #1
   43e80:	str	r1, [r7]
   43e84:	mov	r1, #117	; 0x75
   43e88:	strb	r1, [r0]
   43e8c:	ldr	r0, [r7]
   43e90:	add	r1, r0, #1
   43e94:	str	r1, [r7]
   43e98:	strb	r2, [r0]
   43e9c:	ldr	r0, [r7]
   43ea0:	add	r1, r0, #1
   43ea4:	str	r1, [r7]
   43ea8:	strb	r2, [r0]
   43eac:	add	r6, r6, #4
   43eb0:	add	r5, r5, #1
   43eb4:	adds	r4, r4, #1
   43eb8:	bne	43e1c <flatcc_json_printer_union_vector_field@@Base+0x224>
   43ebc:	ldrb	r1, [r9, #25]
   43ec0:	ldr	r0, [r9, #20]
   43ec4:	cmp	r1, #0
   43ec8:	beq	43f88 <flatcc_json_printer_union_vector_field@@Base+0x390>
   43ecc:	add	r1, r0, #1
   43ed0:	str	r1, [r9, #20]
   43ed4:	mov	r1, #10
   43ed8:	strb	r1, [r0]
   43edc:	ldr	r0, [r9, #32]
   43ee0:	sub	r2, r0, #1
   43ee4:	str	r2, [r9, #32]
   43ee8:	ldrb	r3, [r9, #25]
   43eec:	ldr	r0, [r9, #20]
   43ef0:	ldr	r1, [r9, #16]
   43ef4:	mla	r6, r2, r3, r0
   43ef8:	mul	r5, r2, r3
   43efc:	cmp	r6, r1
   43f00:	bls	43f70 <flatcc_json_printer_union_vector_field@@Base+0x378>
   43f04:	cmp	r0, r1
   43f08:	bcc	43f24 <flatcc_json_printer_union_vector_field@@Base+0x32c>
   43f0c:	ldr	r2, [r9, #44]	; 0x2c
   43f10:	mov	r0, r9
   43f14:	mov	r1, #0
   43f18:	blx	r2
   43f1c:	ldr	r1, [r9, #16]
   43f20:	ldr	r0, [r9, #20]
   43f24:	sub	r6, r1, r0
   43f28:	cmp	r6, r5
   43f2c:	bcs	43f70 <flatcc_json_printer_union_vector_field@@Base+0x378>
   43f30:	mov	r1, #32
   43f34:	mov	r2, r6
   43f38:	bl	14ef0 <memset@plt>
   43f3c:	ldr	r0, [r9, #20]
   43f40:	ldr	r2, [r9, #44]	; 0x2c
   43f44:	mov	r1, #0
   43f48:	add	r0, r0, r6
   43f4c:	str	r0, [r9, #20]
   43f50:	mov	r0, r9
   43f54:	blx	r2
   43f58:	ldr	r1, [r9, #16]
   43f5c:	ldr	r0, [r9, #20]
   43f60:	sub	r5, r5, r6
   43f64:	sub	r6, r1, r0
   43f68:	cmp	r5, r6
   43f6c:	bhi	43f30 <flatcc_json_printer_union_vector_field@@Base+0x338>
   43f70:	mov	r1, #32
   43f74:	mov	r2, r5
   43f78:	bl	14ef0 <memset@plt>
   43f7c:	ldr	r0, [r7]
   43f80:	add	r0, r0, r5
   43f84:	str	r0, [r7]
   43f88:	add	r1, r0, #1
   43f8c:	str	r1, [r7]
   43f90:	mov	r1, #93	; 0x5d
   43f94:	strb	r1, [r0]
   43f98:	sub	sp, fp, #28
   43f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43fa0:	ldr	r0, [r9, #36]	; 0x24
   43fa4:	movw	r1, #47771	; 0xba9b
   43fa8:	movw	r3, #47846	; 0xbae6
   43fac:	movw	r2, #843	; 0x34b
   43fb0:	movt	r1, #4
   43fb4:	movt	r3, #4
   43fb8:	cmp	r0, #0
   43fbc:	moveq	r0, #1
   43fc0:	streq	r0, [r9, #36]	; 0x24
   43fc4:	movw	r0, #47744	; 0xba80
   43fc8:	movt	r0, #4
   43fcc:	bl	14f44 <__assert_fail@plt>

00043fd0 <flatcc_json_printer_table_field@@Base>:
   43fd0:	push	{r4, r5, r6, sl, fp, lr}
   43fd4:	add	fp, sp, #16
   43fd8:	sub	sp, sp, #24
   43fdc:	mov	r5, r1
   43fe0:	ldr	r1, [r1, #8]
   43fe4:	mov	r4, r0
   43fe8:	mov	r0, #4
   43fec:	add	r0, r0, r2, lsl #1
   43ff0:	cmp	r0, r1
   43ff4:	bge	44014 <flatcc_json_printer_table_field@@Base+0x44>
   43ff8:	ldr	r1, [r5, #4]
   43ffc:	add	r0, r1, r0
   44000:	ldrh	r0, [r0]
   44004:	cmp	r0, #0
   44008:	ldrne	r1, [r5]
   4400c:	addsne	r6, r1, r0
   44010:	bne	4401c <flatcc_json_printer_table_field@@Base+0x4c>
   44014:	sub	sp, fp, #16
   44018:	pop	{r4, r5, r6, sl, fp, pc}
   4401c:	ldr	r0, [r5, #16]
   44020:	ldr	r2, [fp, #8]
   44024:	add	r1, r0, #1
   44028:	cmp	r0, #0
   4402c:	str	r1, [r5, #16]
   44030:	ldrne	r0, [r4, #20]
   44034:	addne	r1, r0, #1
   44038:	strne	r1, [r4, #20]
   4403c:	movne	r1, #44	; 0x2c
   44040:	strbne	r1, [r0]
   44044:	mov	r0, r4
   44048:	mov	r1, r3
   4404c:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   44050:	ldr	r0, [r5, #12]
   44054:	subs	r0, r0, #1
   44058:	beq	4419c <flatcc_json_printer_table_field@@Base+0x1cc>
   4405c:	ldr	r1, [r6]
   44060:	ldr	r3, [r4, #20]
   44064:	ldr	r2, [fp, #12]
   44068:	add	r1, r6, r1
   4406c:	ldr	r6, [r4, #32]
   44070:	add	r6, r6, #1
   44074:	str	r6, [r4, #32]
   44078:	add	r6, r3, #1
   4407c:	str	r6, [r4, #20]
   44080:	mov	r6, #123	; 0x7b
   44084:	strb	r6, [r3]
   44088:	str	r0, [sp, #16]
   4408c:	mov	r0, #0
   44090:	str	r0, [sp, #20]
   44094:	str	r1, [sp, #4]
   44098:	ldr	r0, [r1]
   4409c:	sub	r3, r1, r0
   440a0:	str	r3, [sp, #8]
   440a4:	ldrh	r0, [r1, -r0]
   440a8:	add	r1, sp, #4
   440ac:	str	r0, [sp, #12]
   440b0:	mov	r0, r4
   440b4:	blx	r2
   440b8:	ldrb	r1, [r4, #25]
   440bc:	ldr	r0, [r4, #20]
   440c0:	cmp	r1, #0
   440c4:	beq	44184 <flatcc_json_printer_table_field@@Base+0x1b4>
   440c8:	add	r1, r0, #1
   440cc:	str	r1, [r4, #20]
   440d0:	mov	r1, #10
   440d4:	strb	r1, [r0]
   440d8:	ldr	r0, [r4, #32]
   440dc:	sub	r2, r0, #1
   440e0:	str	r2, [r4, #32]
   440e4:	ldrb	r3, [r4, #25]
   440e8:	ldr	r0, [r4, #20]
   440ec:	ldr	r1, [r4, #16]
   440f0:	mla	r6, r2, r3, r0
   440f4:	mul	r5, r2, r3
   440f8:	cmp	r6, r1
   440fc:	bls	4416c <flatcc_json_printer_table_field@@Base+0x19c>
   44100:	cmp	r0, r1
   44104:	bcc	44120 <flatcc_json_printer_table_field@@Base+0x150>
   44108:	ldr	r2, [r4, #44]	; 0x2c
   4410c:	mov	r0, r4
   44110:	mov	r1, #0
   44114:	blx	r2
   44118:	ldr	r1, [r4, #16]
   4411c:	ldr	r0, [r4, #20]
   44120:	sub	r6, r1, r0
   44124:	cmp	r6, r5
   44128:	bcs	4416c <flatcc_json_printer_table_field@@Base+0x19c>
   4412c:	mov	r1, #32
   44130:	mov	r2, r6
   44134:	bl	14ef0 <memset@plt>
   44138:	ldr	r0, [r4, #20]
   4413c:	ldr	r2, [r4, #44]	; 0x2c
   44140:	mov	r1, #0
   44144:	add	r0, r0, r6
   44148:	str	r0, [r4, #20]
   4414c:	mov	r0, r4
   44150:	blx	r2
   44154:	ldr	r1, [r4, #16]
   44158:	ldr	r0, [r4, #20]
   4415c:	sub	r5, r5, r6
   44160:	sub	r6, r1, r0
   44164:	cmp	r5, r6
   44168:	bhi	4412c <flatcc_json_printer_table_field@@Base+0x15c>
   4416c:	mov	r1, #32
   44170:	mov	r2, r5
   44174:	bl	14ef0 <memset@plt>
   44178:	ldr	r0, [r4, #20]
   4417c:	add	r0, r0, r5
   44180:	str	r0, [r4, #20]
   44184:	add	r1, r0, #1
   44188:	str	r1, [r4, #20]
   4418c:	mov	r1, #125	; 0x7d
   44190:	strb	r1, [r0]
   44194:	sub	sp, fp, #16
   44198:	pop	{r4, r5, r6, sl, fp, pc}
   4419c:	ldr	r0, [r4, #36]	; 0x24
   441a0:	cmp	r0, #0
   441a4:	bne	44014 <flatcc_json_printer_table_field@@Base+0x44>
   441a8:	mov	r0, #2
   441ac:	str	r0, [r4, #36]	; 0x24
   441b0:	sub	sp, fp, #16
   441b4:	pop	{r4, r5, r6, sl, fp, pc}

000441b8 <flatcc_json_printer_union_field@@Base>:
   441b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   441bc:	add	fp, sp, #28
   441c0:	sub	sp, sp, #20
   441c4:	mov	r9, r1
   441c8:	mov	r4, r0
   441cc:	mov	r0, #2
   441d0:	mov	r8, r3
   441d4:	lsl	r1, r2, #1
   441d8:	add	r3, r0, r2, lsl #1
   441dc:	ldr	r2, [r9, #8]
   441e0:	mov	r0, #0
   441e4:	cmp	r3, r2
   441e8:	bge	44204 <flatcc_json_printer_union_field@@Base+0x4c>
   441ec:	ldr	r7, [r9, #4]
   441f0:	add	r3, r7, r3
   441f4:	ldrh	r3, [r3]
   441f8:	cmp	r3, #0
   441fc:	ldrne	r0, [r9]
   44200:	addne	r0, r0, r3
   44204:	add	r1, r1, #4
   44208:	cmp	r1, r2
   4420c:	bge	44234 <flatcc_json_printer_union_field@@Base+0x7c>
   44210:	ldr	r2, [r9, #4]
   44214:	add	r1, r2, r1
   44218:	ldrh	r1, [r1]
   4421c:	cmp	r1, #0
   44220:	beq	44234 <flatcc_json_printer_union_field@@Base+0x7c>
   44224:	cmp	r0, #0
   44228:	ldrne	r2, [r9]
   4422c:	addsne	r2, r2, r1
   44230:	bne	4423c <flatcc_json_printer_union_field@@Base+0x84>
   44234:	sub	sp, fp, #28
   44238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4423c:	ldrb	r6, [r0]
   44240:	ldr	r0, [r9, #16]
   44244:	ldr	r7, [fp, #8]
   44248:	str	r2, [sp]
   4424c:	add	r1, r0, #1
   44250:	cmp	r0, #0
   44254:	str	r1, [r9, #16]
   44258:	ldrne	r0, [r4, #20]
   4425c:	addne	r1, r0, #1
   44260:	strne	r1, [r4, #20]
   44264:	movne	r1, #44	; 0x2c
   44268:	strbne	r1, [r0]
   4426c:	ldrb	r1, [r4, #25]
   44270:	ldr	r0, [r4, #20]
   44274:	cmp	r1, #0
   44278:	beq	44334 <flatcc_json_printer_union_field@@Base+0x17c>
   4427c:	add	r1, r0, #1
   44280:	mov	sl, r4
   44284:	mov	r5, r6
   44288:	str	r1, [r4, #20]
   4428c:	mov	r1, #10
   44290:	strb	r1, [r0]
   44294:	ldr	r1, [sl, #16]!
   44298:	ldr	r0, [r4, #20]
   4429c:	ldrb	r2, [sl, #9]
   442a0:	ldr	r3, [sl, #16]
   442a4:	mla	r6, r3, r2, r0
   442a8:	mul	r7, r3, r2
   442ac:	cmp	r6, r1
   442b0:	bls	4435c <flatcc_json_printer_union_field@@Base+0x1a4>
   442b4:	cmp	r0, r1
   442b8:	bcc	442d4 <flatcc_json_printer_union_field@@Base+0x11c>
   442bc:	ldr	r2, [r4, #44]	; 0x2c
   442c0:	mov	r0, r4
   442c4:	mov	r1, #0
   442c8:	blx	r2
   442cc:	ldr	r1, [r4, #16]
   442d0:	ldr	r0, [r4, #20]
   442d4:	mov	r6, r5
   442d8:	sub	r5, r1, r0
   442dc:	cmp	r5, r7
   442e0:	bcs	44324 <flatcc_json_printer_union_field@@Base+0x16c>
   442e4:	mov	r1, #32
   442e8:	mov	r2, r5
   442ec:	bl	14ef0 <memset@plt>
   442f0:	ldr	r0, [r4, #20]
   442f4:	ldr	r2, [r4, #44]	; 0x2c
   442f8:	mov	r1, #0
   442fc:	add	r0, r0, r5
   44300:	str	r0, [r4, #20]
   44304:	mov	r0, r4
   44308:	blx	r2
   4430c:	ldr	r1, [r4, #16]
   44310:	ldr	r0, [r4, #20]
   44314:	sub	r7, r7, r5
   44318:	sub	r5, r1, r0
   4431c:	cmp	r7, r5
   44320:	bhi	442e4 <flatcc_json_printer_union_field@@Base+0x12c>
   44324:	mov	r1, #32
   44328:	mov	r2, r7
   4432c:	bl	14ef0 <memset@plt>
   44330:	b	4436c <flatcc_json_printer_union_field@@Base+0x1b4>
   44334:	mov	sl, r4
   44338:	ldr	r1, [sl, #16]!
   4433c:	cmp	r0, r1
   44340:	bcc	4437c <flatcc_json_printer_union_field@@Base+0x1c4>
   44344:	ldr	r2, [r4, #44]	; 0x2c
   44348:	mov	r0, r4
   4434c:	mov	r1, #0
   44350:	blx	r2
   44354:	ldr	r0, [r4, #20]
   44358:	b	4437c <flatcc_json_printer_union_field@@Base+0x1c4>
   4435c:	mov	r1, #32
   44360:	mov	r2, r7
   44364:	bl	14ef0 <memset@plt>
   44368:	mov	r6, r5
   4436c:	ldr	r0, [r4, #20]
   44370:	add	r0, r0, r7
   44374:	ldr	r7, [fp, #8]
   44378:	str	r0, [r4, #20]
   4437c:	mov	r1, #34	; 0x22
   44380:	str	r6, [sp, #4]
   44384:	strb	r1, [r0]
   44388:	ldrb	r2, [r4, #26]
   4438c:	ldr	r0, [r4, #20]
   44390:	ldr	r1, [r4, #16]
   44394:	cmp	r2, #0
   44398:	addeq	r0, r0, #1
   4439c:	add	r2, r0, r7
   443a0:	str	r0, [r4, #20]
   443a4:	cmp	r2, r1
   443a8:	bcs	443bc <flatcc_json_printer_union_field@@Base+0x204>
   443ac:	mov	r1, r8
   443b0:	mov	r2, r7
   443b4:	bl	14e60 <memcpy@plt>
   443b8:	b	44450 <flatcc_json_printer_union_field@@Base+0x298>
   443bc:	mov	r5, r8
   443c0:	cmp	r0, r1
   443c4:	bcc	443e0 <flatcc_json_printer_union_field@@Base+0x228>
   443c8:	ldr	r2, [r4, #44]	; 0x2c
   443cc:	mov	r0, r4
   443d0:	mov	r1, #0
   443d4:	blx	r2
   443d8:	ldr	r0, [r4, #20]
   443dc:	ldr	r1, [sl]
   443e0:	sub	r8, r1, r0
   443e4:	mov	r6, r5
   443e8:	cmp	r8, r7
   443ec:	bcs	4443c <flatcc_json_printer_union_field@@Base+0x284>
   443f0:	ldr	r7, [fp, #8]
   443f4:	mov	r6, r5
   443f8:	mov	r1, r6
   443fc:	mov	r2, r8
   44400:	bl	14e60 <memcpy@plt>
   44404:	ldr	r0, [r4, #20]
   44408:	ldr	r2, [r4, #44]	; 0x2c
   4440c:	mov	r1, #0
   44410:	add	r0, r0, r8
   44414:	str	r0, [r4, #20]
   44418:	mov	r0, r4
   4441c:	blx	r2
   44420:	ldr	r0, [r4, #20]
   44424:	ldr	r1, [sl]
   44428:	sub	r7, r7, r8
   4442c:	add	r6, r6, r8
   44430:	sub	r8, r1, r0
   44434:	cmp	r7, r8
   44438:	bhi	443f8 <flatcc_json_printer_union_field@@Base+0x240>
   4443c:	mov	r1, r6
   44440:	mov	r2, r7
   44444:	bl	14e60 <memcpy@plt>
   44448:	ldr	r6, [sp, #4]
   4444c:	mov	r8, r5
   44450:	ldr	r0, [r4, #20]
   44454:	ldr	r1, [r4, #16]
   44458:	add	r0, r0, r7
   4445c:	add	r2, r0, #5
   44460:	str	r0, [r4, #20]
   44464:	cmp	r2, r1
   44468:	bcs	4448c <flatcc_json_printer_union_field@@Base+0x2d4>
   4446c:	ldr	sl, [sp]
   44470:	mov	r1, #101	; 0x65
   44474:	mov	r7, #5
   44478:	strb	r1, [r0, #4]
   4447c:	movw	r1, #29791	; 0x745f
   44480:	movt	r1, #28793	; 0x7079
   44484:	str	r1, [r0]
   44488:	b	4452c <flatcc_json_printer_union_field@@Base+0x374>
   4448c:	cmp	r0, r1
   44490:	bcc	444ac <flatcc_json_printer_union_field@@Base+0x2f4>
   44494:	ldr	r2, [r4, #44]	; 0x2c
   44498:	mov	r0, r4
   4449c:	mov	r1, #0
   444a0:	blx	r2
   444a4:	ldr	r0, [r4, #20]
   444a8:	ldr	r1, [sl]
   444ac:	sub	r5, r1, r0
   444b0:	cmp	r5, #4
   444b4:	bhi	4450c <flatcc_json_printer_union_field@@Base+0x354>
   444b8:	movw	r6, #48048	; 0xbbb0
   444bc:	mov	r7, #5
   444c0:	movt	r6, #4
   444c4:	mov	r1, r6
   444c8:	mov	r2, r5
   444cc:	bl	14e60 <memcpy@plt>
   444d0:	ldr	r0, [r4, #20]
   444d4:	ldr	r2, [r4, #44]	; 0x2c
   444d8:	mov	r1, #0
   444dc:	add	r0, r0, r5
   444e0:	str	r0, [r4, #20]
   444e4:	mov	r0, r4
   444e8:	blx	r2
   444ec:	ldr	r0, [r4, #20]
   444f0:	ldr	r1, [sl]
   444f4:	sub	r7, r7, r5
   444f8:	add	r6, r6, r5
   444fc:	sub	r5, r1, r0
   44500:	cmp	r7, r5
   44504:	bhi	444c4 <flatcc_json_printer_union_field@@Base+0x30c>
   44508:	b	44518 <flatcc_json_printer_union_field@@Base+0x360>
   4450c:	movw	r6, #48048	; 0xbbb0
   44510:	mov	r7, #5
   44514:	movt	r6, #4
   44518:	ldr	sl, [sp]
   4451c:	mov	r1, r6
   44520:	mov	r2, r7
   44524:	bl	14e60 <memcpy@plt>
   44528:	ldr	r6, [sp, #4]
   4452c:	ldr	r0, [r4, #20]
   44530:	add	r1, r0, r7
   44534:	str	r1, [r4, #20]
   44538:	mov	r1, #34	; 0x22
   4453c:	strb	r1, [r0, r7]
   44540:	ldrb	r0, [r4, #26]
   44544:	ldr	r1, [r4, #20]
   44548:	cmp	r0, #0
   4454c:	addeq	r1, r1, #1
   44550:	add	r0, r1, #1
   44554:	str	r0, [r4, #20]
   44558:	mov	r0, #58	; 0x3a
   4455c:	strb	r0, [r1]
   44560:	mov	r1, #32
   44564:	ldr	r0, [r4, #20]
   44568:	strb	r1, [r0]
   4456c:	ldrb	r1, [r4, #25]
   44570:	ldr	r0, [r4, #20]
   44574:	cmp	r1, #0
   44578:	addne	r0, r0, #1
   4457c:	str	r0, [r4, #20]
   44580:	ldrb	r1, [r4, #27]
   44584:	cmp	r1, #0
   44588:	beq	445dc <flatcc_json_printer_union_field@@Base+0x424>
   4458c:	mov	r1, #0
   44590:	cmp	r6, #100	; 0x64
   44594:	bcc	445fc <flatcc_json_printer_union_field@@Base+0x444>
   44598:	strb	r1, [r0, #3]
   4459c:	movw	r1, #34079	; 0x851f
   445a0:	movt	r1, #20971	; 0x51eb
   445a4:	umull	r1, r2, r6, r1
   445a8:	mov	r1, #48	; 0x30
   445ac:	orr	r1, r1, r2, lsr #5
   445b0:	strb	r1, [r0]
   445b4:	lsr	r1, r2, #5
   445b8:	mov	r2, #100	; 0x64
   445bc:	mls	r1, r1, r2, r6
   445c0:	movw	r2, #48496	; 0xbd70
   445c4:	movt	r2, #4
   445c8:	add	r1, r2, r1, lsl #1
   445cc:	ldrh	r1, [r1]
   445d0:	strh	r1, [r0, #1]
   445d4:	mov	r0, #3
   445d8:	b	4464c <flatcc_json_printer_union_field@@Base+0x494>
   445dc:	ldr	r2, [fp, #12]
   445e0:	mov	r0, r4
   445e4:	mov	r1, r6
   445e8:	blx	r2
   445ec:	ldr	r2, [fp, #8]
   445f0:	cmp	r6, #0
   445f4:	bne	44664 <flatcc_json_printer_union_field@@Base+0x4ac>
   445f8:	b	44234 <flatcc_json_printer_union_field@@Base+0x7c>
   445fc:	cmp	r6, #10
   44600:	bcc	4463c <flatcc_json_printer_union_field@@Base+0x484>
   44604:	strb	r1, [r0, #2]
   44608:	movw	r1, #34079	; 0x851f
   4460c:	movt	r1, #20971	; 0x51eb
   44610:	umull	r1, r2, r6, r1
   44614:	lsr	r1, r2, #5
   44618:	mov	r2, #100	; 0x64
   4461c:	mls	r1, r1, r2, r6
   44620:	movw	r2, #48496	; 0xbd70
   44624:	movt	r2, #4
   44628:	add	r1, r2, r1, lsl #1
   4462c:	ldrh	r1, [r1]
   44630:	strh	r1, [r0]
   44634:	mov	r0, #2
   44638:	b	4464c <flatcc_json_printer_union_field@@Base+0x494>
   4463c:	strb	r1, [r0, #1]
   44640:	add	r1, r6, #48	; 0x30
   44644:	strb	r1, [r0]
   44648:	mov	r0, #1
   4464c:	ldr	r1, [r4, #20]
   44650:	ldr	r2, [fp, #8]
   44654:	add	r0, r1, r0
   44658:	str	r0, [r4, #20]
   4465c:	cmp	r6, #0
   44660:	beq	44234 <flatcc_json_printer_union_field@@Base+0x7c>
   44664:	ldr	r0, [r4, #20]
   44668:	ldr	r5, [fp, #16]
   4466c:	add	r1, r0, #1
   44670:	str	r1, [r4, #20]
   44674:	mov	r1, #44	; 0x2c
   44678:	strb	r1, [r0]
   4467c:	mov	r0, r4
   44680:	mov	r1, r8
   44684:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   44688:	ldr	r0, [r9, #12]
   4468c:	strb	r6, [sp, #16]
   44690:	str	sl, [sp, #8]
   44694:	add	r1, sp, #8
   44698:	str	r0, [sp, #12]
   4469c:	mov	r0, r4
   446a0:	blx	r5
   446a4:	sub	sp, fp, #28
   446a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000446ac <flatcc_json_printer_union_table@@Base>:
   446ac:	push	{r4, r5, r6, sl, fp, lr}
   446b0:	add	fp, sp, #16
   446b4:	sub	sp, sp, #24
   446b8:	mov	r4, r0
   446bc:	ldr	r0, [r1, #4]
   446c0:	subs	r0, r0, #1
   446c4:	beq	44808 <flatcc_json_printer_union_table@@Base+0x15c>
   446c8:	ldr	r1, [r1]
   446cc:	ldr	r6, [r4, #32]
   446d0:	ldr	r3, [r1]
   446d4:	add	r6, r6, #1
   446d8:	add	r1, r1, r3
   446dc:	ldr	r3, [r4, #20]
   446e0:	str	r6, [r4, #32]
   446e4:	add	r6, r3, #1
   446e8:	str	r6, [r4, #20]
   446ec:	mov	r6, #123	; 0x7b
   446f0:	strb	r6, [r3]
   446f4:	str	r0, [sp, #16]
   446f8:	mov	r0, #0
   446fc:	str	r0, [sp, #20]
   44700:	str	r1, [sp, #4]
   44704:	ldr	r0, [r1]
   44708:	sub	r3, r1, r0
   4470c:	str	r3, [sp, #8]
   44710:	ldrh	r0, [r1, -r0]
   44714:	add	r1, sp, #4
   44718:	str	r0, [sp, #12]
   4471c:	mov	r0, r4
   44720:	blx	r2
   44724:	ldrb	r1, [r4, #25]
   44728:	ldr	r0, [r4, #20]
   4472c:	cmp	r1, #0
   44730:	beq	447f0 <flatcc_json_printer_union_table@@Base+0x144>
   44734:	add	r1, r0, #1
   44738:	str	r1, [r4, #20]
   4473c:	mov	r1, #10
   44740:	strb	r1, [r0]
   44744:	ldr	r0, [r4, #32]
   44748:	sub	r2, r0, #1
   4474c:	str	r2, [r4, #32]
   44750:	ldrb	r3, [r4, #25]
   44754:	ldr	r0, [r4, #20]
   44758:	ldr	r1, [r4, #16]
   4475c:	mla	r6, r2, r3, r0
   44760:	mul	r5, r2, r3
   44764:	cmp	r6, r1
   44768:	bls	447d8 <flatcc_json_printer_union_table@@Base+0x12c>
   4476c:	cmp	r0, r1
   44770:	bcc	4478c <flatcc_json_printer_union_table@@Base+0xe0>
   44774:	ldr	r2, [r4, #44]	; 0x2c
   44778:	mov	r0, r4
   4477c:	mov	r1, #0
   44780:	blx	r2
   44784:	ldr	r1, [r4, #16]
   44788:	ldr	r0, [r4, #20]
   4478c:	sub	r6, r1, r0
   44790:	cmp	r6, r5
   44794:	bcs	447d8 <flatcc_json_printer_union_table@@Base+0x12c>
   44798:	mov	r1, #32
   4479c:	mov	r2, r6
   447a0:	bl	14ef0 <memset@plt>
   447a4:	ldr	r0, [r4, #20]
   447a8:	ldr	r2, [r4, #44]	; 0x2c
   447ac:	mov	r1, #0
   447b0:	add	r0, r0, r6
   447b4:	str	r0, [r4, #20]
   447b8:	mov	r0, r4
   447bc:	blx	r2
   447c0:	ldr	r1, [r4, #16]
   447c4:	ldr	r0, [r4, #20]
   447c8:	sub	r5, r5, r6
   447cc:	sub	r6, r1, r0
   447d0:	cmp	r5, r6
   447d4:	bhi	44798 <flatcc_json_printer_union_table@@Base+0xec>
   447d8:	mov	r1, #32
   447dc:	mov	r2, r5
   447e0:	bl	14ef0 <memset@plt>
   447e4:	ldr	r0, [r4, #20]
   447e8:	add	r0, r0, r5
   447ec:	str	r0, [r4, #20]
   447f0:	add	r1, r0, #1
   447f4:	str	r1, [r4, #20]
   447f8:	mov	r1, #125	; 0x7d
   447fc:	strb	r1, [r0]
   44800:	sub	sp, fp, #16
   44804:	pop	{r4, r5, r6, sl, fp, pc}
   44808:	ldr	r0, [r4, #36]	; 0x24
   4480c:	cmp	r0, #0
   44810:	beq	4481c <flatcc_json_printer_union_table@@Base+0x170>
   44814:	sub	sp, fp, #16
   44818:	pop	{r4, r5, r6, sl, fp, pc}
   4481c:	mov	r0, #2
   44820:	str	r0, [r4, #36]	; 0x24
   44824:	sub	sp, fp, #16
   44828:	pop	{r4, r5, r6, sl, fp, pc}

0004482c <flatcc_json_printer_union_struct@@Base>:
   4482c:	push	{r4, r5, r6, sl, fp, lr}
   44830:	add	fp, sp, #16
   44834:	mov	r4, r0
   44838:	ldr	r0, [r0, #20]
   4483c:	ldr	r3, [r4, #32]
   44840:	add	r3, r3, #1
   44844:	str	r3, [r4, #32]
   44848:	add	r3, r0, #1
   4484c:	str	r3, [r4, #20]
   44850:	mov	r3, #123	; 0x7b
   44854:	strb	r3, [r0]
   44858:	ldr	r0, [r1]
   4485c:	ldr	r1, [r0]
   44860:	add	r1, r0, r1
   44864:	mov	r0, r4
   44868:	blx	r2
   4486c:	ldrb	r1, [r4, #25]
   44870:	ldr	r0, [r4, #20]
   44874:	cmp	r1, #0
   44878:	beq	44938 <flatcc_json_printer_union_struct@@Base+0x10c>
   4487c:	add	r1, r0, #1
   44880:	str	r1, [r4, #20]
   44884:	mov	r1, #10
   44888:	strb	r1, [r0]
   4488c:	ldr	r0, [r4, #32]
   44890:	sub	r2, r0, #1
   44894:	str	r2, [r4, #32]
   44898:	ldrb	r3, [r4, #25]
   4489c:	ldr	r0, [r4, #20]
   448a0:	ldr	r1, [r4, #16]
   448a4:	mla	r6, r2, r3, r0
   448a8:	mul	r5, r2, r3
   448ac:	cmp	r6, r1
   448b0:	bls	44920 <flatcc_json_printer_union_struct@@Base+0xf4>
   448b4:	cmp	r0, r1
   448b8:	bcc	448d4 <flatcc_json_printer_union_struct@@Base+0xa8>
   448bc:	ldr	r2, [r4, #44]	; 0x2c
   448c0:	mov	r0, r4
   448c4:	mov	r1, #0
   448c8:	blx	r2
   448cc:	ldr	r1, [r4, #16]
   448d0:	ldr	r0, [r4, #20]
   448d4:	sub	r6, r1, r0
   448d8:	cmp	r6, r5
   448dc:	bcs	44920 <flatcc_json_printer_union_struct@@Base+0xf4>
   448e0:	mov	r1, #32
   448e4:	mov	r2, r6
   448e8:	bl	14ef0 <memset@plt>
   448ec:	ldr	r0, [r4, #20]
   448f0:	ldr	r2, [r4, #44]	; 0x2c
   448f4:	mov	r1, #0
   448f8:	add	r0, r0, r6
   448fc:	str	r0, [r4, #20]
   44900:	mov	r0, r4
   44904:	blx	r2
   44908:	ldr	r1, [r4, #16]
   4490c:	ldr	r0, [r4, #20]
   44910:	sub	r5, r5, r6
   44914:	sub	r6, r1, r0
   44918:	cmp	r5, r6
   4491c:	bhi	448e0 <flatcc_json_printer_union_struct@@Base+0xb4>
   44920:	mov	r1, #32
   44924:	mov	r2, r5
   44928:	bl	14ef0 <memset@plt>
   4492c:	ldr	r0, [r4, #20]
   44930:	add	r0, r0, r5
   44934:	str	r0, [r4, #20]
   44938:	add	r1, r0, #1
   4493c:	str	r1, [r4, #20]
   44940:	mov	r1, #125	; 0x7d
   44944:	strb	r1, [r0]
   44948:	pop	{r4, r5, r6, sl, fp, pc}

0004494c <flatcc_json_printer_union_string@@Base>:
   4494c:	ldr	r1, [r1]
   44950:	ldr	r2, [r1]
   44954:	ldr	r2, [r1, r2]!
   44958:	add	r1, r1, #4
   4495c:	b	39cbc <flatcc_json_printer_string@@Base+0x4>

00044960 <flatcc_json_printer_embedded_struct_field@@Base>:
   44960:	push	{r4, r5, r6, r7, fp, lr}
   44964:	add	fp, sp, #16
   44968:	mov	r5, r3
   4496c:	mov	r3, r1
   44970:	mov	r4, r0
   44974:	add	r7, fp, #8
   44978:	mov	r6, r2
   4497c:	cmp	r3, #0
   44980:	ldm	r7, {r1, r2, r7}
   44984:	ldrne	r0, [r4, #20]
   44988:	addne	r3, r0, #1
   4498c:	strne	r3, [r4, #20]
   44990:	movne	r3, #44	; 0x2c
   44994:	strbne	r3, [r0]
   44998:	mov	r0, r4
   4499c:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   449a0:	ldr	r1, [r4, #32]
   449a4:	ldr	r0, [r4, #20]
   449a8:	add	r1, r1, #1
   449ac:	str	r1, [r4, #32]
   449b0:	add	r1, r0, #1
   449b4:	str	r1, [r4, #20]
   449b8:	mov	r1, #123	; 0x7b
   449bc:	strb	r1, [r0]
   449c0:	add	r1, r6, r5
   449c4:	mov	r0, r4
   449c8:	blx	r7
   449cc:	ldrb	r1, [r4, #25]
   449d0:	ldr	r0, [r4, #20]
   449d4:	cmp	r1, #0
   449d8:	beq	44a98 <flatcc_json_printer_embedded_struct_field@@Base+0x138>
   449dc:	add	r1, r0, #1
   449e0:	str	r1, [r4, #20]
   449e4:	mov	r1, #10
   449e8:	strb	r1, [r0]
   449ec:	ldr	r0, [r4, #32]
   449f0:	sub	r2, r0, #1
   449f4:	str	r2, [r4, #32]
   449f8:	ldrb	r3, [r4, #25]
   449fc:	ldr	r0, [r4, #20]
   44a00:	ldr	r1, [r4, #16]
   44a04:	mla	r7, r2, r3, r0
   44a08:	mul	r5, r2, r3
   44a0c:	cmp	r7, r1
   44a10:	bls	44a80 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   44a14:	cmp	r0, r1
   44a18:	bcc	44a34 <flatcc_json_printer_embedded_struct_field@@Base+0xd4>
   44a1c:	ldr	r2, [r4, #44]	; 0x2c
   44a20:	mov	r0, r4
   44a24:	mov	r1, #0
   44a28:	blx	r2
   44a2c:	ldr	r1, [r4, #16]
   44a30:	ldr	r0, [r4, #20]
   44a34:	sub	r6, r1, r0
   44a38:	cmp	r6, r5
   44a3c:	bcs	44a80 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   44a40:	mov	r1, #32
   44a44:	mov	r2, r6
   44a48:	bl	14ef0 <memset@plt>
   44a4c:	ldr	r0, [r4, #20]
   44a50:	ldr	r2, [r4, #44]	; 0x2c
   44a54:	mov	r1, #0
   44a58:	add	r0, r0, r6
   44a5c:	str	r0, [r4, #20]
   44a60:	mov	r0, r4
   44a64:	blx	r2
   44a68:	ldr	r1, [r4, #16]
   44a6c:	ldr	r0, [r4, #20]
   44a70:	sub	r5, r5, r6
   44a74:	sub	r6, r1, r0
   44a78:	cmp	r5, r6
   44a7c:	bhi	44a40 <flatcc_json_printer_embedded_struct_field@@Base+0xe0>
   44a80:	mov	r1, #32
   44a84:	mov	r2, r5
   44a88:	bl	14ef0 <memset@plt>
   44a8c:	ldr	r0, [r4, #20]
   44a90:	add	r0, r0, r5
   44a94:	str	r0, [r4, #20]
   44a98:	add	r1, r0, #1
   44a9c:	str	r1, [r4, #20]
   44aa0:	mov	r1, #125	; 0x7d
   44aa4:	strb	r1, [r0]
   44aa8:	pop	{r4, r5, r6, r7, fp, pc}

00044aac <flatcc_json_printer_struct_field@@Base>:
   44aac:	push	{r4, r5, r6, r7, fp, lr}
   44ab0:	add	fp, sp, #16
   44ab4:	mov	r4, r0
   44ab8:	mov	r0, #4
   44abc:	add	r0, r0, r2, lsl #1
   44ac0:	ldr	r2, [r1, #8]
   44ac4:	cmp	r0, r2
   44ac8:	popge	{r4, r5, r6, r7, fp, pc}
   44acc:	ldr	r2, [r1, #4]
   44ad0:	add	r0, r2, r0
   44ad4:	ldrh	r0, [r0]
   44ad8:	cmp	r0, #0
   44adc:	ldrne	r2, [r1]
   44ae0:	addsne	r5, r2, r0
   44ae4:	bne	44aec <flatcc_json_printer_struct_field@@Base+0x40>
   44ae8:	pop	{r4, r5, r6, r7, fp, pc}
   44aec:	ldr	r0, [r1, #16]
   44af0:	ldr	r2, [fp, #8]
   44af4:	ldr	r7, [fp, #12]
   44af8:	add	r6, r0, #1
   44afc:	cmp	r0, #0
   44b00:	str	r6, [r1, #16]
   44b04:	ldrne	r0, [r4, #20]
   44b08:	addne	r1, r0, #1
   44b0c:	strne	r1, [r4, #20]
   44b10:	movne	r1, #44	; 0x2c
   44b14:	strbne	r1, [r0]
   44b18:	mov	r0, r4
   44b1c:	mov	r1, r3
   44b20:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   44b24:	ldr	r1, [r4, #32]
   44b28:	ldr	r0, [r4, #20]
   44b2c:	add	r1, r1, #1
   44b30:	str	r1, [r4, #32]
   44b34:	add	r1, r0, #1
   44b38:	str	r1, [r4, #20]
   44b3c:	mov	r1, #123	; 0x7b
   44b40:	strb	r1, [r0]
   44b44:	mov	r0, r4
   44b48:	mov	r1, r5
   44b4c:	blx	r7
   44b50:	ldrb	r1, [r4, #25]
   44b54:	ldr	r0, [r4, #20]
   44b58:	cmp	r1, #0
   44b5c:	beq	44c1c <flatcc_json_printer_struct_field@@Base+0x170>
   44b60:	add	r1, r0, #1
   44b64:	str	r1, [r4, #20]
   44b68:	mov	r1, #10
   44b6c:	strb	r1, [r0]
   44b70:	ldr	r0, [r4, #32]
   44b74:	sub	r2, r0, #1
   44b78:	str	r2, [r4, #32]
   44b7c:	ldrb	r3, [r4, #25]
   44b80:	ldr	r0, [r4, #20]
   44b84:	ldr	r1, [r4, #16]
   44b88:	mla	r7, r2, r3, r0
   44b8c:	mul	r5, r2, r3
   44b90:	cmp	r7, r1
   44b94:	bls	44c04 <flatcc_json_printer_struct_field@@Base+0x158>
   44b98:	cmp	r0, r1
   44b9c:	bcc	44bb8 <flatcc_json_printer_struct_field@@Base+0x10c>
   44ba0:	ldr	r2, [r4, #44]	; 0x2c
   44ba4:	mov	r0, r4
   44ba8:	mov	r1, #0
   44bac:	blx	r2
   44bb0:	ldr	r1, [r4, #16]
   44bb4:	ldr	r0, [r4, #20]
   44bb8:	sub	r6, r1, r0
   44bbc:	cmp	r6, r5
   44bc0:	bcs	44c04 <flatcc_json_printer_struct_field@@Base+0x158>
   44bc4:	mov	r1, #32
   44bc8:	mov	r2, r6
   44bcc:	bl	14ef0 <memset@plt>
   44bd0:	ldr	r0, [r4, #20]
   44bd4:	ldr	r2, [r4, #44]	; 0x2c
   44bd8:	mov	r1, #0
   44bdc:	add	r0, r0, r6
   44be0:	str	r0, [r4, #20]
   44be4:	mov	r0, r4
   44be8:	blx	r2
   44bec:	ldr	r1, [r4, #16]
   44bf0:	ldr	r0, [r4, #20]
   44bf4:	sub	r5, r5, r6
   44bf8:	sub	r6, r1, r0
   44bfc:	cmp	r5, r6
   44c00:	bhi	44bc4 <flatcc_json_printer_struct_field@@Base+0x118>
   44c04:	mov	r1, #32
   44c08:	mov	r2, r5
   44c0c:	bl	14ef0 <memset@plt>
   44c10:	ldr	r0, [r4, #20]
   44c14:	add	r0, r0, r5
   44c18:	str	r0, [r4, #20]
   44c1c:	add	r1, r0, #1
   44c20:	str	r1, [r4, #20]
   44c24:	mov	r1, #125	; 0x7d
   44c28:	strb	r1, [r0]
   44c2c:	pop	{r4, r5, r6, r7, fp, pc}

00044c30 <flatcc_json_printer_struct_as_root@@Base>:
   44c30:	push	{r4, r5, r6, sl, fp, lr}
   44c34:	add	fp, sp, #16
   44c38:	sub	sp, sp, #8
   44c3c:	cmp	r1, #0
   44c40:	mov	r4, r0
   44c44:	mov	r0, #0
   44c48:	cmpne	r2, #7
   44c4c:	str	r0, [sp, #4]
   44c50:	bls	44e04 <flatcc_json_printer_struct_as_root@@Base+0x1d4>
   44c54:	mov	r5, r1
   44c58:	cmp	r3, #0
   44c5c:	beq	44c84 <flatcc_json_printer_struct_as_root@@Base+0x54>
   44c60:	add	r0, sp, #4
   44c64:	mov	r1, r3
   44c68:	mov	r2, #4
   44c6c:	bl	14efc <strncpy@plt>
   44c70:	ldr	r0, [sp, #4]
   44c74:	cmp	r0, #0
   44c78:	ldrne	r1, [r5, #4]
   44c7c:	cmpne	r1, r0
   44c80:	bne	44e34 <flatcc_json_printer_struct_as_root@@Base+0x204>
   44c84:	ldr	r1, [r4, #32]
   44c88:	ldr	r0, [r4, #20]
   44c8c:	ldr	r2, [fp, #8]
   44c90:	add	r1, r1, #1
   44c94:	str	r1, [r4, #32]
   44c98:	add	r1, r0, #1
   44c9c:	str	r1, [r4, #20]
   44ca0:	mov	r1, #123	; 0x7b
   44ca4:	strb	r1, [r0]
   44ca8:	ldr	r0, [r5]
   44cac:	add	r1, r5, r0
   44cb0:	mov	r0, r4
   44cb4:	blx	r2
   44cb8:	ldrb	r1, [r4, #25]
   44cbc:	ldr	r0, [r4, #20]
   44cc0:	cmp	r1, #0
   44cc4:	beq	44d84 <flatcc_json_printer_struct_as_root@@Base+0x154>
   44cc8:	add	r1, r0, #1
   44ccc:	str	r1, [r4, #20]
   44cd0:	mov	r1, #10
   44cd4:	strb	r1, [r0]
   44cd8:	ldr	r0, [r4, #32]
   44cdc:	sub	r2, r0, #1
   44ce0:	str	r2, [r4, #32]
   44ce4:	ldrb	r3, [r4, #25]
   44ce8:	ldr	r0, [r4, #20]
   44cec:	ldr	r1, [r4, #16]
   44cf0:	mla	r6, r2, r3, r0
   44cf4:	mul	r5, r2, r3
   44cf8:	cmp	r6, r1
   44cfc:	bls	44d6c <flatcc_json_printer_struct_as_root@@Base+0x13c>
   44d00:	cmp	r0, r1
   44d04:	bcc	44d20 <flatcc_json_printer_struct_as_root@@Base+0xf0>
   44d08:	ldr	r2, [r4, #44]	; 0x2c
   44d0c:	mov	r0, r4
   44d10:	mov	r1, #0
   44d14:	blx	r2
   44d18:	ldr	r1, [r4, #16]
   44d1c:	ldr	r0, [r4, #20]
   44d20:	sub	r6, r1, r0
   44d24:	cmp	r6, r5
   44d28:	bcs	44d6c <flatcc_json_printer_struct_as_root@@Base+0x13c>
   44d2c:	mov	r1, #32
   44d30:	mov	r2, r6
   44d34:	bl	14ef0 <memset@plt>
   44d38:	ldr	r0, [r4, #20]
   44d3c:	ldr	r2, [r4, #44]	; 0x2c
   44d40:	mov	r1, #0
   44d44:	add	r0, r0, r6
   44d48:	str	r0, [r4, #20]
   44d4c:	mov	r0, r4
   44d50:	blx	r2
   44d54:	ldr	r1, [r4, #16]
   44d58:	ldr	r0, [r4, #20]
   44d5c:	sub	r5, r5, r6
   44d60:	sub	r6, r1, r0
   44d64:	cmp	r5, r6
   44d68:	bhi	44d2c <flatcc_json_printer_struct_as_root@@Base+0xfc>
   44d6c:	mov	r1, #32
   44d70:	mov	r2, r5
   44d74:	bl	14ef0 <memset@plt>
   44d78:	ldr	r0, [r4, #20]
   44d7c:	add	r0, r0, r5
   44d80:	str	r0, [r4, #20]
   44d84:	add	r1, r0, #1
   44d88:	str	r1, [r4, #20]
   44d8c:	mov	r1, #125	; 0x7d
   44d90:	strb	r1, [r0]
   44d94:	ldrb	r0, [r4, #25]
   44d98:	cmp	r0, #0
   44d9c:	beq	44dc0 <flatcc_json_printer_struct_as_root@@Base+0x190>
   44da0:	ldr	r0, [r4, #32]
   44da4:	cmp	r0, #0
   44da8:	bne	44dc0 <flatcc_json_printer_struct_as_root@@Base+0x190>
   44dac:	ldr	r0, [r4, #20]
   44db0:	add	r1, r0, #1
   44db4:	str	r1, [r4, #20]
   44db8:	mov	r1, #10
   44dbc:	strb	r1, [r0]
   44dc0:	ldr	r2, [r4, #44]	; 0x2c
   44dc4:	mov	r0, r4
   44dc8:	mov	r1, #1
   44dcc:	blx	r2
   44dd0:	ldr	r1, [r4, #36]	; 0x24
   44dd4:	mvn	r0, #0
   44dd8:	cmp	r1, #0
   44ddc:	beq	44de8 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   44de0:	sub	sp, fp, #16
   44de4:	pop	{r4, r5, r6, sl, fp, pc}
   44de8:	ldr	r1, [r4, #12]
   44dec:	ldr	r2, [r4, #20]
   44df0:	ldr	r0, [r4]
   44df4:	add	r1, r2, r1
   44df8:	sub	r0, r1, r0
   44dfc:	sub	sp, fp, #16
   44e00:	pop	{r4, r5, r6, sl, fp, pc}
   44e04:	ldr	r0, [r4, #36]	; 0x24
   44e08:	movw	r1, #47771	; 0xba9b
   44e0c:	movw	r3, #48946	; 0xbf32
   44e10:	movw	r2, #1019	; 0x3fb
   44e14:	movt	r1, #4
   44e18:	movt	r3, #4
   44e1c:	cmp	r0, #0
   44e20:	moveq	r0, #1
   44e24:	streq	r0, [r4, #36]	; 0x24
   44e28:	movw	r0, #48915	; 0xbf13
   44e2c:	movt	r0, #4
   44e30:	bl	14f44 <__assert_fail@plt>
   44e34:	ldr	r0, [r4, #36]	; 0x24
   44e38:	movw	r1, #47771	; 0xba9b
   44e3c:	movw	r3, #48946	; 0xbf32
   44e40:	movw	r2, #1028	; 0x404
   44e44:	movt	r1, #4
   44e48:	movt	r3, #4
   44e4c:	cmp	r0, #0
   44e50:	moveq	r0, #1
   44e54:	streq	r0, [r4, #36]	; 0x24
   44e58:	movw	r0, #49025	; 0xbf81
   44e5c:	movt	r0, #4
   44e60:	bl	14f44 <__assert_fail@plt>

00044e64 <flatcc_json_printer_table_as_root@@Base>:
   44e64:	push	{r4, r5, r6, sl, fp, lr}
   44e68:	add	fp, sp, #16
   44e6c:	sub	sp, sp, #24
   44e70:	cmp	r1, #0
   44e74:	mov	r4, r0
   44e78:	mov	r0, #0
   44e7c:	cmpne	r2, #7
   44e80:	str	r0, [sp, #4]
   44e84:	bls	45064 <flatcc_json_printer_table_as_root@@Base+0x200>
   44e88:	mov	r5, r1
   44e8c:	cmp	r3, #0
   44e90:	beq	44eb8 <flatcc_json_printer_table_as_root@@Base+0x54>
   44e94:	add	r0, sp, #4
   44e98:	mov	r1, r3
   44e9c:	mov	r2, #4
   44ea0:	bl	14efc <strncpy@plt>
   44ea4:	ldr	r0, [sp, #4]
   44ea8:	cmp	r0, #0
   44eac:	ldrne	r1, [r5, #4]
   44eb0:	cmpne	r1, r0
   44eb4:	bne	45094 <flatcc_json_printer_table_as_root@@Base+0x230>
   44eb8:	ldr	r3, [r4, #32]
   44ebc:	ldr	r1, [r4, #20]
   44ec0:	ldr	r0, [r5]
   44ec4:	ldr	r2, [fp, #8]
   44ec8:	add	r3, r3, #1
   44ecc:	str	r3, [r4, #32]
   44ed0:	add	r3, r1, #1
   44ed4:	str	r3, [r4, #20]
   44ed8:	mov	r3, #123	; 0x7b
   44edc:	strb	r3, [r1]
   44ee0:	mov	r1, #99	; 0x63
   44ee4:	str	r1, [sp, #16]
   44ee8:	mov	r1, #0
   44eec:	str	r1, [sp, #20]
   44ef0:	add	r1, r5, r0
   44ef4:	str	r1, [sp, #4]
   44ef8:	ldr	r0, [r5, r0]
   44efc:	sub	r3, r1, r0
   44f00:	str	r3, [sp, #8]
   44f04:	ldrh	r0, [r1, -r0]
   44f08:	add	r1, sp, #4
   44f0c:	str	r0, [sp, #12]
   44f10:	mov	r0, r4
   44f14:	blx	r2
   44f18:	ldrb	r1, [r4, #25]
   44f1c:	ldr	r0, [r4, #20]
   44f20:	cmp	r1, #0
   44f24:	beq	44fe4 <flatcc_json_printer_table_as_root@@Base+0x180>
   44f28:	add	r1, r0, #1
   44f2c:	str	r1, [r4, #20]
   44f30:	mov	r1, #10
   44f34:	strb	r1, [r0]
   44f38:	ldr	r0, [r4, #32]
   44f3c:	sub	r2, r0, #1
   44f40:	str	r2, [r4, #32]
   44f44:	ldrb	r3, [r4, #25]
   44f48:	ldr	r0, [r4, #20]
   44f4c:	ldr	r1, [r4, #16]
   44f50:	mla	r6, r2, r3, r0
   44f54:	mul	r5, r2, r3
   44f58:	cmp	r6, r1
   44f5c:	bls	44fcc <flatcc_json_printer_table_as_root@@Base+0x168>
   44f60:	cmp	r0, r1
   44f64:	bcc	44f80 <flatcc_json_printer_table_as_root@@Base+0x11c>
   44f68:	ldr	r2, [r4, #44]	; 0x2c
   44f6c:	mov	r0, r4
   44f70:	mov	r1, #0
   44f74:	blx	r2
   44f78:	ldr	r1, [r4, #16]
   44f7c:	ldr	r0, [r4, #20]
   44f80:	sub	r6, r1, r0
   44f84:	cmp	r6, r5
   44f88:	bcs	44fcc <flatcc_json_printer_table_as_root@@Base+0x168>
   44f8c:	mov	r1, #32
   44f90:	mov	r2, r6
   44f94:	bl	14ef0 <memset@plt>
   44f98:	ldr	r0, [r4, #20]
   44f9c:	ldr	r2, [r4, #44]	; 0x2c
   44fa0:	mov	r1, #0
   44fa4:	add	r0, r0, r6
   44fa8:	str	r0, [r4, #20]
   44fac:	mov	r0, r4
   44fb0:	blx	r2
   44fb4:	ldr	r1, [r4, #16]
   44fb8:	ldr	r0, [r4, #20]
   44fbc:	sub	r5, r5, r6
   44fc0:	sub	r6, r1, r0
   44fc4:	cmp	r5, r6
   44fc8:	bhi	44f8c <flatcc_json_printer_table_as_root@@Base+0x128>
   44fcc:	mov	r1, #32
   44fd0:	mov	r2, r5
   44fd4:	bl	14ef0 <memset@plt>
   44fd8:	ldr	r0, [r4, #20]
   44fdc:	add	r0, r0, r5
   44fe0:	str	r0, [r4, #20]
   44fe4:	add	r1, r0, #1
   44fe8:	str	r1, [r4, #20]
   44fec:	mov	r1, #125	; 0x7d
   44ff0:	strb	r1, [r0]
   44ff4:	ldrb	r0, [r4, #25]
   44ff8:	cmp	r0, #0
   44ffc:	beq	45020 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   45000:	ldr	r0, [r4, #32]
   45004:	cmp	r0, #0
   45008:	bne	45020 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   4500c:	ldr	r0, [r4, #20]
   45010:	add	r1, r0, #1
   45014:	str	r1, [r4, #20]
   45018:	mov	r1, #10
   4501c:	strb	r1, [r0]
   45020:	ldr	r2, [r4, #44]	; 0x2c
   45024:	mov	r0, r4
   45028:	mov	r1, #1
   4502c:	blx	r2
   45030:	ldr	r1, [r4, #36]	; 0x24
   45034:	mvn	r0, #0
   45038:	cmp	r1, #0
   4503c:	beq	45048 <flatcc_json_printer_table_as_root@@Base+0x1e4>
   45040:	sub	sp, fp, #16
   45044:	pop	{r4, r5, r6, sl, fp, pc}
   45048:	ldr	r1, [r4, #12]
   4504c:	ldr	r2, [r4, #20]
   45050:	ldr	r0, [r4]
   45054:	add	r1, r2, r1
   45058:	sub	r0, r1, r0
   4505c:	sub	sp, fp, #16
   45060:	pop	{r4, r5, r6, sl, fp, pc}
   45064:	ldr	r0, [r4, #36]	; 0x24
   45068:	movw	r1, #47771	; 0xba9b
   4506c:	movw	r3, #48946	; 0xbf32
   45070:	movw	r2, #1019	; 0x3fb
   45074:	movt	r1, #4
   45078:	movt	r3, #4
   4507c:	cmp	r0, #0
   45080:	moveq	r0, #1
   45084:	streq	r0, [r4, #36]	; 0x24
   45088:	movw	r0, #48915	; 0xbf13
   4508c:	movt	r0, #4
   45090:	bl	14f44 <__assert_fail@plt>
   45094:	ldr	r0, [r4, #36]	; 0x24
   45098:	movw	r1, #47771	; 0xba9b
   4509c:	movw	r3, #48946	; 0xbf32
   450a0:	movw	r2, #1028	; 0x404
   450a4:	movt	r1, #4
   450a8:	movt	r3, #4
   450ac:	cmp	r0, #0
   450b0:	moveq	r0, #1
   450b4:	streq	r0, [r4, #36]	; 0x24
   450b8:	movw	r0, #49025	; 0xbf81
   450bc:	movt	r0, #4
   450c0:	bl	14f44 <__assert_fail@plt>

000450c4 <flatcc_json_printer_struct_as_nested_root@@Base>:
   450c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   450c8:	add	fp, sp, #24
   450cc:	sub	sp, sp, #8
   450d0:	mov	r6, r1
   450d4:	ldr	r1, [r1, #8]
   450d8:	mov	r4, r0
   450dc:	mov	r0, #4
   450e0:	add	r0, r0, r2, lsl #1
   450e4:	cmp	r0, r1
   450e8:	bge	45108 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   450ec:	ldr	r1, [r6, #4]
   450f0:	add	r0, r1, r0
   450f4:	ldrh	r0, [r0]
   450f8:	cmp	r0, #0
   450fc:	ldrne	r1, [r6]
   45100:	addsne	r0, r1, r0
   45104:	bne	45110 <flatcc_json_printer_struct_as_nested_root@@Base+0x4c>
   45108:	sub	sp, fp, #24
   4510c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   45110:	ldr	r7, [r0]
   45114:	mov	r1, #0
   45118:	ldr	r0, [r7, r0]!
   4511c:	str	r1, [sp, #4]
   45120:	cmp	r7, #0
   45124:	cmpne	r0, #7
   45128:	bls	452a8 <flatcc_json_printer_struct_as_nested_root@@Base+0x1e4>
   4512c:	ldr	r1, [fp, #12]
   45130:	mov	r5, r3
   45134:	cmp	r1, #0
   45138:	beq	4515c <flatcc_json_printer_struct_as_nested_root@@Base+0x98>
   4513c:	add	r0, sp, #4
   45140:	mov	r2, #4
   45144:	bl	14efc <strncpy@plt>
   45148:	ldr	r0, [sp, #4]
   4514c:	cmp	r0, #0
   45150:	ldrne	r1, [r7, #4]
   45154:	cmpne	r1, r0
   45158:	bne	452d8 <flatcc_json_printer_struct_as_nested_root@@Base+0x214>
   4515c:	ldr	r0, [r6, #16]
   45160:	ldr	r2, [fp, #8]
   45164:	ldr	r8, [fp, #16]
   45168:	add	r1, r0, #1
   4516c:	cmp	r0, #0
   45170:	str	r1, [r6, #16]
   45174:	ldrne	r0, [r4, #20]
   45178:	addne	r1, r0, #1
   4517c:	strne	r1, [r4, #20]
   45180:	movne	r1, #44	; 0x2c
   45184:	strbne	r1, [r0]
   45188:	mov	r0, r4
   4518c:	mov	r1, r5
   45190:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   45194:	ldr	r1, [r4, #32]
   45198:	ldr	r0, [r4, #20]
   4519c:	add	r1, r1, #1
   451a0:	str	r1, [r4, #32]
   451a4:	add	r1, r0, #1
   451a8:	str	r1, [r4, #20]
   451ac:	mov	r1, #123	; 0x7b
   451b0:	strb	r1, [r0]
   451b4:	ldr	r0, [r7]
   451b8:	add	r1, r7, r0
   451bc:	mov	r0, r4
   451c0:	blx	r8
   451c4:	ldrb	r1, [r4, #25]
   451c8:	ldr	r0, [r4, #20]
   451cc:	cmp	r1, #0
   451d0:	beq	45290 <flatcc_json_printer_struct_as_nested_root@@Base+0x1cc>
   451d4:	add	r1, r0, #1
   451d8:	str	r1, [r4, #20]
   451dc:	mov	r1, #10
   451e0:	strb	r1, [r0]
   451e4:	ldr	r0, [r4, #32]
   451e8:	sub	r2, r0, #1
   451ec:	str	r2, [r4, #32]
   451f0:	ldrb	r3, [r4, #25]
   451f4:	ldr	r0, [r4, #20]
   451f8:	ldr	r1, [r4, #16]
   451fc:	mla	r7, r2, r3, r0
   45200:	mul	r5, r2, r3
   45204:	cmp	r7, r1
   45208:	bls	45278 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   4520c:	cmp	r0, r1
   45210:	bcc	4522c <flatcc_json_printer_struct_as_nested_root@@Base+0x168>
   45214:	ldr	r2, [r4, #44]	; 0x2c
   45218:	mov	r0, r4
   4521c:	mov	r1, #0
   45220:	blx	r2
   45224:	ldr	r1, [r4, #16]
   45228:	ldr	r0, [r4, #20]
   4522c:	sub	r6, r1, r0
   45230:	cmp	r6, r5
   45234:	bcs	45278 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   45238:	mov	r1, #32
   4523c:	mov	r2, r6
   45240:	bl	14ef0 <memset@plt>
   45244:	ldr	r0, [r4, #20]
   45248:	ldr	r2, [r4, #44]	; 0x2c
   4524c:	mov	r1, #0
   45250:	add	r0, r0, r6
   45254:	str	r0, [r4, #20]
   45258:	mov	r0, r4
   4525c:	blx	r2
   45260:	ldr	r1, [r4, #16]
   45264:	ldr	r0, [r4, #20]
   45268:	sub	r5, r5, r6
   4526c:	sub	r6, r1, r0
   45270:	cmp	r5, r6
   45274:	bhi	45238 <flatcc_json_printer_struct_as_nested_root@@Base+0x174>
   45278:	mov	r1, #32
   4527c:	mov	r2, r5
   45280:	bl	14ef0 <memset@plt>
   45284:	ldr	r0, [r4, #20]
   45288:	add	r0, r0, r5
   4528c:	str	r0, [r4, #20]
   45290:	add	r1, r0, #1
   45294:	str	r1, [r4, #20]
   45298:	mov	r1, #125	; 0x7d
   4529c:	strb	r1, [r0]
   452a0:	sub	sp, fp, #24
   452a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   452a8:	ldr	r0, [r4, #36]	; 0x24
   452ac:	movw	r1, #47771	; 0xba9b
   452b0:	movw	r3, #48946	; 0xbf32
   452b4:	movw	r2, #1019	; 0x3fb
   452b8:	movt	r1, #4
   452bc:	movt	r3, #4
   452c0:	cmp	r0, #0
   452c4:	moveq	r0, #1
   452c8:	streq	r0, [r4, #36]	; 0x24
   452cc:	movw	r0, #48915	; 0xbf13
   452d0:	movt	r0, #4
   452d4:	bl	14f44 <__assert_fail@plt>
   452d8:	ldr	r0, [r4, #36]	; 0x24
   452dc:	movw	r1, #47771	; 0xba9b
   452e0:	movw	r3, #48946	; 0xbf32
   452e4:	movw	r2, #1028	; 0x404
   452e8:	movt	r1, #4
   452ec:	movt	r3, #4
   452f0:	cmp	r0, #0
   452f4:	moveq	r0, #1
   452f8:	streq	r0, [r4, #36]	; 0x24
   452fc:	movw	r0, #49025	; 0xbf81
   45300:	movt	r0, #4
   45304:	bl	14f44 <__assert_fail@plt>

00045308 <flatcc_json_printer_table_as_nested_root@@Base>:
   45308:	push	{r4, r5, r6, r7, fp, lr}
   4530c:	add	fp, sp, #16
   45310:	sub	sp, sp, #24
   45314:	mov	r5, r1
   45318:	ldr	r1, [r1, #8]
   4531c:	mov	r4, r0
   45320:	mov	r0, #4
   45324:	add	r0, r0, r2, lsl #1
   45328:	cmp	r0, r1
   4532c:	bge	4534c <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   45330:	ldr	r1, [r5, #4]
   45334:	add	r0, r1, r0
   45338:	ldrh	r0, [r0]
   4533c:	cmp	r0, #0
   45340:	ldrne	r1, [r5]
   45344:	addsne	r0, r1, r0
   45348:	bne	45354 <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   4534c:	sub	sp, fp, #16
   45350:	pop	{r4, r5, r6, r7, fp, pc}
   45354:	ldr	r7, [r0]
   45358:	mov	r1, #0
   4535c:	ldr	r0, [r7, r0]!
   45360:	str	r1, [sp, #4]
   45364:	cmp	r0, #7
   45368:	bls	4553c <flatcc_json_printer_table_as_nested_root@@Base+0x234>
   4536c:	ldr	r1, [fp, #12]
   45370:	mov	r6, r3
   45374:	cmp	r1, #0
   45378:	beq	4539c <flatcc_json_printer_table_as_nested_root@@Base+0x94>
   4537c:	add	r0, sp, #4
   45380:	mov	r2, #4
   45384:	bl	14efc <strncpy@plt>
   45388:	ldr	r0, [sp, #4]
   4538c:	cmp	r0, #0
   45390:	ldrne	r1, [r7, #8]
   45394:	cmpne	r1, r0
   45398:	bne	4556c <flatcc_json_printer_table_as_nested_root@@Base+0x264>
   4539c:	ldr	r0, [r5, #16]
   453a0:	ldr	r2, [fp, #8]
   453a4:	add	r1, r0, #1
   453a8:	cmp	r0, #0
   453ac:	str	r1, [r5, #16]
   453b0:	ldrne	r0, [r4, #20]
   453b4:	addne	r1, r0, #1
   453b8:	strne	r1, [r4, #20]
   453bc:	movne	r1, #44	; 0x2c
   453c0:	strbne	r1, [r0]
   453c4:	mov	r0, r4
   453c8:	mov	r1, r6
   453cc:	bl	3b178 <flatcc_json_printer_string_field@@Base+0x8c>
   453d0:	ldr	r0, [r5, #12]
   453d4:	subs	r0, r0, #1
   453d8:	beq	45520 <flatcc_json_printer_table_as_nested_root@@Base+0x218>
   453dc:	add	r1, r7, #4
   453e0:	ldr	r7, [r4, #32]
   453e4:	ldr	r2, [fp, #16]
   453e8:	ldr	r3, [r1]
   453ec:	add	r7, r7, #1
   453f0:	add	r1, r1, r3
   453f4:	ldr	r3, [r4, #20]
   453f8:	str	r7, [r4, #32]
   453fc:	add	r7, r3, #1
   45400:	str	r7, [r4, #20]
   45404:	mov	r7, #123	; 0x7b
   45408:	strb	r7, [r3]
   4540c:	str	r0, [sp, #16]
   45410:	mov	r0, #0
   45414:	str	r0, [sp, #20]
   45418:	str	r1, [sp, #4]
   4541c:	ldr	r0, [r1]
   45420:	sub	r3, r1, r0
   45424:	str	r3, [sp, #8]
   45428:	ldrh	r0, [r1, -r0]
   4542c:	add	r1, sp, #4
   45430:	str	r0, [sp, #12]
   45434:	mov	r0, r4
   45438:	blx	r2
   4543c:	ldrb	r1, [r4, #25]
   45440:	ldr	r0, [r4, #20]
   45444:	cmp	r1, #0
   45448:	beq	45508 <flatcc_json_printer_table_as_nested_root@@Base+0x200>
   4544c:	add	r1, r0, #1
   45450:	str	r1, [r4, #20]
   45454:	mov	r1, #10
   45458:	strb	r1, [r0]
   4545c:	ldr	r0, [r4, #32]
   45460:	sub	r2, r0, #1
   45464:	str	r2, [r4, #32]
   45468:	ldrb	r3, [r4, #25]
   4546c:	ldr	r0, [r4, #20]
   45470:	ldr	r1, [r4, #16]
   45474:	mla	r7, r2, r3, r0
   45478:	mul	r5, r2, r3
   4547c:	cmp	r7, r1
   45480:	bls	454f0 <flatcc_json_printer_table_as_nested_root@@Base+0x1e8>
   45484:	cmp	r0, r1
   45488:	bcc	454a4 <flatcc_json_printer_table_as_nested_root@@Base+0x19c>
   4548c:	ldr	r2, [r4, #44]	; 0x2c
   45490:	mov	r0, r4
   45494:	mov	r1, #0
   45498:	blx	r2
   4549c:	ldr	r1, [r4, #16]
   454a0:	ldr	r0, [r4, #20]
   454a4:	sub	r6, r1, r0
   454a8:	cmp	r6, r5
   454ac:	bcs	454f0 <flatcc_json_printer_table_as_nested_root@@Base+0x1e8>
   454b0:	mov	r1, #32
   454b4:	mov	r2, r6
   454b8:	bl	14ef0 <memset@plt>
   454bc:	ldr	r0, [r4, #20]
   454c0:	ldr	r2, [r4, #44]	; 0x2c
   454c4:	mov	r1, #0
   454c8:	add	r0, r0, r6
   454cc:	str	r0, [r4, #20]
   454d0:	mov	r0, r4
   454d4:	blx	r2
   454d8:	ldr	r1, [r4, #16]
   454dc:	ldr	r0, [r4, #20]
   454e0:	sub	r5, r5, r6
   454e4:	sub	r6, r1, r0
   454e8:	cmp	r5, r6
   454ec:	bhi	454b0 <flatcc_json_printer_table_as_nested_root@@Base+0x1a8>
   454f0:	mov	r1, #32
   454f4:	mov	r2, r5
   454f8:	bl	14ef0 <memset@plt>
   454fc:	ldr	r0, [r4, #20]
   45500:	add	r0, r0, r5
   45504:	str	r0, [r4, #20]
   45508:	add	r1, r0, #1
   4550c:	str	r1, [r4, #20]
   45510:	mov	r1, #125	; 0x7d
   45514:	strb	r1, [r0]
   45518:	sub	sp, fp, #16
   4551c:	pop	{r4, r5, r6, r7, fp, pc}
   45520:	ldr	r0, [r4, #36]	; 0x24
   45524:	cmp	r0, #0
   45528:	bne	4534c <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   4552c:	mov	r0, #2
   45530:	str	r0, [r4, #36]	; 0x24
   45534:	sub	sp, fp, #16
   45538:	pop	{r4, r5, r6, r7, fp, pc}
   4553c:	ldr	r0, [r4, #36]	; 0x24
   45540:	movw	r1, #47771	; 0xba9b
   45544:	movw	r3, #48946	; 0xbf32
   45548:	movw	r2, #1019	; 0x3fb
   4554c:	movt	r1, #4
   45550:	movt	r3, #4
   45554:	cmp	r0, #0
   45558:	moveq	r0, #1
   4555c:	streq	r0, [r4, #36]	; 0x24
   45560:	movw	r0, #48915	; 0xbf13
   45564:	movt	r0, #4
   45568:	bl	14f44 <__assert_fail@plt>
   4556c:	ldr	r0, [r4, #36]	; 0x24
   45570:	movw	r1, #47771	; 0xba9b
   45574:	movw	r3, #48946	; 0xbf32
   45578:	movw	r2, #1028	; 0x404
   4557c:	movt	r1, #4
   45580:	movt	r3, #4
   45584:	cmp	r0, #0
   45588:	moveq	r0, #1
   4558c:	streq	r0, [r4, #36]	; 0x24
   45590:	movw	r0, #49025	; 0xbf81
   45594:	movt	r0, #4
   45598:	bl	14f44 <__assert_fail@plt>

0004559c <flatcc_json_printer_init@@Base>:
   4559c:	push	{r4, r5, r6, sl, fp, lr}
   455a0:	add	fp, sp, #16
   455a4:	mov	r5, r0
   455a8:	mov	r4, #0
   455ac:	vmov.i32	q8, #0	; 0x00000000
   455b0:	cmp	r1, #0
   455b4:	movw	r6, #16448	; 0x4040
   455b8:	str	r4, [r0, #32]
   455bc:	mov	r0, #36	; 0x24
   455c0:	mov	r2, r5
   455c4:	vst1.32	{d16-d17}, [r2], r0
   455c8:	add	r0, r5, #16
   455cc:	vst1.32	{d16-d17}, [r0]
   455d0:	movw	r0, #54092	; 0xd34c
   455d4:	str	r4, [r2]
   455d8:	movw	r2, #22072	; 0x5638
   455dc:	movt	r0, #5
   455e0:	movt	r2, #4
   455e4:	ldr	r0, [r0]
   455e8:	movne	r0, r1
   455ec:	str	r0, [r5, #40]	; 0x28
   455f0:	movw	r0, #16448	; 0x4040
   455f4:	str	r2, [r5, #44]	; 0x2c
   455f8:	bl	14ea8 <malloc@plt>
   455fc:	cmp	r0, #0
   45600:	str	r0, [r5]
   45604:	mvneq	r4, #0
   45608:	moveq	r0, r4
   4560c:	popeq	{r4, r5, r6, sl, fp, pc}
   45610:	mov	r1, #1
   45614:	strb	r1, [r5, #24]
   45618:	mov	r1, #16384	; 0x4000
   4561c:	str	r6, [r5, #4]
   45620:	str	r1, [r5, #8]
   45624:	add	r1, r0, #16384	; 0x4000
   45628:	str	r1, [r5, #16]
   4562c:	str	r0, [r5, #20]
   45630:	mov	r0, r4
   45634:	pop	{r4, r5, r6, sl, fp, pc}
   45638:	push	{r4, r5, r6, sl, fp, lr}
   4563c:	add	fp, sp, #16
   45640:	mov	r4, r0
   45644:	cmp	r1, #0
   45648:	beq	45654 <flatcc_json_printer_init@@Base+0xb8>
   4564c:	ldr	r5, [r4, #20]
   45650:	b	45664 <flatcc_json_printer_init@@Base+0xc8>
   45654:	ldr	r6, [r4, #16]
   45658:	ldr	r5, [r4, #20]
   4565c:	cmp	r5, r6
   45660:	bcs	4569c <flatcc_json_printer_init@@Base+0x100>
   45664:	ldr	r0, [r4]
   45668:	ldr	r3, [r4, #40]	; 0x28
   4566c:	mov	r2, #1
   45670:	sub	r5, r5, r0
   45674:	mov	r1, r5
   45678:	bl	14e9c <fwrite@plt>
   4567c:	ldr	r1, [r4, #12]
   45680:	ldr	r0, [r4]
   45684:	str	r0, [r4, #20]
   45688:	add	r1, r1, r5
   4568c:	str	r1, [r4, #12]
   45690:	mov	r1, #0
   45694:	strb	r1, [r0]
   45698:	pop	{r4, r5, r6, sl, fp, pc}
   4569c:	ldr	r0, [r4]
   456a0:	ldr	r1, [r4, #8]
   456a4:	ldr	r3, [r4, #40]	; 0x28
   456a8:	mov	r2, #1
   456ac:	bl	14e9c <fwrite@plt>
   456b0:	ldr	r0, [r4]
   456b4:	ldr	r1, [r4, #8]
   456b8:	sub	r5, r5, r6
   456bc:	mov	r2, r5
   456c0:	add	r1, r0, r1
   456c4:	bl	14e60 <memcpy@plt>
   456c8:	ldr	r0, [r4]
   456cc:	ldr	r1, [r4, #8]
   456d0:	ldr	r2, [r4, #12]
   456d4:	add	r0, r0, r5
   456d8:	add	r1, r2, r1
   456dc:	str	r0, [r4, #20]
   456e0:	str	r1, [r4, #12]
   456e4:	mov	r1, #0
   456e8:	strb	r1, [r0]
   456ec:	pop	{r4, r5, r6, sl, fp, pc}

000456f0 <flatcc_json_printer_init_buffer@@Base>:
   456f0:	cmp	r2, #63	; 0x3f
   456f4:	bls	45734 <flatcc_json_printer_init_buffer@@Base+0x44>
   456f8:	vmov.i32	q8, #0	; 0x00000000
   456fc:	add	r3, r0, #12
   45700:	vst1.32	{d16-d17}, [r3]
   45704:	movw	r3, #22364	; 0x575c
   45708:	movt	r3, #4
   4570c:	str	r3, [r0, #44]	; 0x2c
   45710:	add	r3, r0, #28
   45714:	vst1.32	{d16-d17}, [r3]
   45718:	sub	r3, r2, #64	; 0x40
   4571c:	stm	r0, {r1, r2, r3}
   45720:	add	r2, r1, r3
   45724:	str	r2, [r0, #16]
   45728:	str	r1, [r0, #20]
   4572c:	mov	r0, #0
   45730:	bx	lr
   45734:	push	{fp, lr}
   45738:	mov	fp, sp
   4573c:	movw	r0, #48054	; 0xbbb6
   45740:	movw	r1, #47771	; 0xba9b
   45744:	movw	r3, #48095	; 0xbbdf
   45748:	movw	r2, #1165	; 0x48d
   4574c:	movt	r0, #4
   45750:	movt	r1, #4
   45754:	movt	r3, #4
   45758:	bl	14f44 <__assert_fail@plt>
   4575c:	ldr	r2, [r0, #16]
   45760:	ldr	r1, [r0, #20]
   45764:	cmp	r1, r2
   45768:	bcs	4577c <flatcc_json_printer_init_buffer@@Base+0x8c>
   4576c:	mov	r2, r1
   45770:	mov	r0, #0
   45774:	strb	r0, [r2]
   45778:	bx	lr
   4577c:	ldr	r2, [r0, #36]	; 0x24
   45780:	cmp	r2, #0
   45784:	moveq	r2, #3
   45788:	streq	r2, [r0, #36]	; 0x24
   4578c:	ldr	r2, [r0]
   45790:	ldr	r3, [r0, #12]
   45794:	sub	r1, r1, r2
   45798:	str	r2, [r0, #20]
   4579c:	add	r1, r1, r3
   457a0:	str	r1, [r0, #12]
   457a4:	mov	r0, #0
   457a8:	strb	r0, [r2]
   457ac:	bx	lr

000457b0 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   457b0:	push	{r4, r5, fp, lr}
   457b4:	add	fp, sp, #8
   457b8:	mov	r5, r1
   457bc:	cmp	r1, #0
   457c0:	mov	r4, r0
   457c4:	vmov.i32	q8, #0	; 0x00000000
   457c8:	add	r0, r0, #28
   457cc:	movweq	r5, #4096	; 0x1000
   457d0:	vst1.32	{d16-d17}, [r0]
   457d4:	add	r0, r4, #12
   457d8:	cmp	r5, #64	; 0x40
   457dc:	vst1.32	{d16-d17}, [r0]
   457e0:	movls	r5, #64	; 0x40
   457e4:	mov	r0, r5
   457e8:	bl	14ea8 <malloc@plt>
   457ec:	mov	r1, r0
   457f0:	mov	r0, #1
   457f4:	movw	r2, #22580	; 0x5834
   457f8:	strb	r0, [r4, #24]
   457fc:	sub	r0, r5, #64	; 0x40
   45800:	stm	r4, {r1, r5}
   45804:	movt	r2, #4
   45808:	cmp	r1, #0
   4580c:	str	r0, [r4, #8]
   45810:	add	r0, r1, r0
   45814:	str	r2, [r4, #44]	; 0x2c
   45818:	str	r0, [r4, #16]
   4581c:	mov	r0, #0
   45820:	str	r1, [r4, #20]
   45824:	moveq	r0, #3
   45828:	streq	r0, [r4, #36]	; 0x24
   4582c:	mvneq	r0, #0
   45830:	pop	{r4, r5, fp, pc}
   45834:	push	{r4, r5, fp, lr}
   45838:	add	fp, sp, #8
   4583c:	mov	r4, r0
   45840:	ldr	r0, [r0]
   45844:	mov	r1, #0
   45848:	ldr	r5, [r4, #20]
   4584c:	strb	r1, [r5], -r0
   45850:	ldr	r0, [r4, #16]
   45854:	ldr	r1, [r4, #20]
   45858:	cmp	r1, r0
   4585c:	popcc	{r4, r5, fp, pc}
   45860:	ldm	r4, {r0, r1}
   45864:	lsl	r1, r1, #1
   45868:	bl	14e90 <realloc@plt>
   4586c:	cmp	r0, #0
   45870:	beq	458ac <flatcc_json_printer_init_dynamic_buffer@@Base+0xfc>
   45874:	str	r0, [r4]
   45878:	mvn	r3, #63	; 0x3f
   4587c:	add	r1, r0, r5
   45880:	ldr	r2, [r4, #4]
   45884:	add	r3, r3, r2, lsl #1
   45888:	lsl	r2, r2, #1
   4588c:	add	r0, r0, r3
   45890:	str	r3, [r4, #8]
   45894:	str	r2, [r4, #4]
   45898:	str	r0, [r4, #16]
   4589c:	str	r1, [r4, #20]
   458a0:	mov	r0, #0
   458a4:	strb	r0, [r1]
   458a8:	pop	{r4, r5, fp, pc}
   458ac:	ldr	r0, [r4, #36]	; 0x24
   458b0:	cmp	r0, #0
   458b4:	moveq	r0, #3
   458b8:	streq	r0, [r4, #36]	; 0x24
   458bc:	ldr	r0, [r4, #12]
   458c0:	ldr	r1, [r4]
   458c4:	add	r0, r0, r5
   458c8:	str	r1, [r4, #20]
   458cc:	str	r0, [r4, #12]
   458d0:	mov	r0, #0
   458d4:	strb	r0, [r1]
   458d8:	pop	{r4, r5, fp, pc}

000458dc <flatcc_json_printer_get_buffer@@Base>:
   458dc:	push	{r4, r5, fp, lr}
   458e0:	add	fp, sp, #8
   458e4:	ldr	r2, [r0, #44]	; 0x2c
   458e8:	mov	r4, r1
   458ec:	mov	r1, #0
   458f0:	mov	r5, r0
   458f4:	blx	r2
   458f8:	cmp	r4, #0
   458fc:	ldrne	r0, [r5]
   45900:	ldrne	r1, [r5, #20]
   45904:	subne	r1, r1, r0
   45908:	strne	r1, [r4]
   4590c:	popne	{r4, r5, fp, pc}
   45910:	ldr	r0, [r5]
   45914:	pop	{r4, r5, fp, pc}

00045918 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   45918:	push	{r4, r5, fp, lr}
   4591c:	add	fp, sp, #8
   45920:	ldr	r2, [r0, #44]	; 0x2c
   45924:	mov	r5, r1
   45928:	mov	r1, #0
   4592c:	mov	r4, r0
   45930:	blx	r2
   45934:	cmp	r5, #0
   45938:	ldr	r0, [r4]
   4593c:	vmov.i32	q8, #0	; 0x00000000
   45940:	add	r2, r4, #16
   45944:	ldrne	r1, [r4, #20]
   45948:	subne	r1, r1, r0
   4594c:	strne	r1, [r5]
   45950:	mov	r1, #32
   45954:	vst1.32	{d16-d17}, [r2]
   45958:	vst1.32	{d16-d17}, [r4], r1
   4595c:	vst1.32	{d16-d17}, [r4]
   45960:	pop	{r4, r5, fp, pc}

00045964 <flatcc_json_printer_clear@@Base>:
   45964:	push	{r4, sl, fp, lr}
   45968:	add	fp, sp, #8
   4596c:	mov	r4, r0
   45970:	ldrb	r0, [r0, #24]
   45974:	cmp	r0, #0
   45978:	ldrne	r0, [r4]
   4597c:	cmpne	r0, #0
   45980:	beq	45988 <flatcc_json_printer_clear@@Base+0x24>
   45984:	bl	14e54 <free@plt>
   45988:	vmov.i32	q8, #0	; 0x00000000
   4598c:	mov	r0, #32
   45990:	add	r1, r4, #16
   45994:	vst1.32	{d16-d17}, [r4], r0
   45998:	vst1.32	{d16-d17}, [r1]
   4599c:	vst1.32	{d16-d17}, [r4]
   459a0:	pop	{r4, sl, fp, pc}
   459a4:	cmp	r2, #0
   459a8:	bxeq	lr
   459ac:	push	{r4, r5, fp, lr}
   459b0:	add	fp, sp, #8
   459b4:	ldr	lr, [r2]
   459b8:	bic	ip, r3, #224	; 0xe0
   459bc:	cmp	ip, #0
   459c0:	beq	459e0 <flatcc_json_printer_clear@@Base+0x7c>
   459c4:	cmp	ip, #1
   459c8:	bne	45aa8 <flatcc_json_printer_clear@@Base+0x144>
   459cc:	movw	ip, #48850	; 0xbed2
   459d0:	movt	ip, #4
   459d4:	cmp	lr, #3
   459d8:	bcs	459f0 <flatcc_json_printer_clear@@Base+0x8c>
   459dc:	b	45a50 <flatcc_json_printer_clear@@Base+0xec>
   459e0:	movw	ip, #48785	; 0xbe91
   459e4:	movt	ip, #4
   459e8:	cmp	lr, #3
   459ec:	bcc	45a50 <flatcc_json_printer_clear@@Base+0xec>
   459f0:	ldrb	r4, [r1]
   459f4:	sub	lr, lr, #3
   459f8:	cmp	lr, #2
   459fc:	ldrb	r4, [ip, r4, lsr #2]
   45a00:	strb	r4, [r0]
   45a04:	ldrb	r5, [r1, #1]
   45a08:	ldrb	r4, [r1]
   45a0c:	lsr	r5, r5, #4
   45a10:	bfi	r5, r4, #4, #2
   45a14:	ldrb	r4, [ip, r5]
   45a18:	strb	r4, [r0, #1]
   45a1c:	ldrb	r5, [r1, #2]
   45a20:	ldrb	r4, [r1, #1]
   45a24:	lsr	r5, r5, #6
   45a28:	bfi	r5, r4, #2, #4
   45a2c:	ldrb	r4, [ip, r5]
   45a30:	strb	r4, [r0, #2]
   45a34:	ldrb	r4, [r1, #2]
   45a38:	add	r1, r1, #3
   45a3c:	and	r4, r4, #63	; 0x3f
   45a40:	ldrb	r4, [ip, r4]
   45a44:	strb	r4, [r0, #3]
   45a48:	add	r0, r0, #4
   45a4c:	bhi	459f0 <flatcc_json_printer_clear@@Base+0x8c>
   45a50:	and	r3, r3, #128	; 0x80
   45a54:	cmp	lr, #1
   45a58:	beq	45abc <flatcc_json_printer_clear@@Base+0x158>
   45a5c:	cmp	lr, #2
   45a60:	bne	45ae4 <flatcc_json_printer_clear@@Base+0x180>
   45a64:	ldrb	r5, [r1]
   45a68:	cmp	r3, #0
   45a6c:	ldrb	r5, [ip, r5, lsr #2]
   45a70:	strb	r5, [r0]
   45a74:	ldrb	r4, [r1, #1]
   45a78:	ldrb	r5, [r1]
   45a7c:	lsr	r4, r4, #4
   45a80:	bfi	r4, r5, #4, #2
   45a84:	ldrb	r5, [ip, r4]
   45a88:	strb	r5, [r0, #1]
   45a8c:	ldrb	r1, [r1, #1]
   45a90:	and	r1, r1, #15
   45a94:	ldrb	r1, [ip, r1, lsl #2]
   45a98:	strb	r1, [r0, #2]
   45a9c:	movne	r1, #61	; 0x3d
   45aa0:	strbne	r1, [r0, #3]
   45aa4:	b	45ae4 <flatcc_json_printer_clear@@Base+0x180>
   45aa8:	mov	r0, lr
   45aac:	sub	r0, lr, r0
   45ab0:	str	r0, [r2]
   45ab4:	pop	{r4, r5, fp, lr}
   45ab8:	bx	lr
   45abc:	ldrb	r5, [r1]
   45ac0:	cmp	r3, #0
   45ac4:	ldrb	r5, [ip, r5, lsr #2]
   45ac8:	strb	r5, [r0]
   45acc:	ldrb	r1, [r1]
   45ad0:	and	r1, r1, #3
   45ad4:	ldrb	r1, [ip, r1, lsl #4]
   45ad8:	strb	r1, [r0, #1]
   45adc:	movwne	r1, #15677	; 0x3d3d
   45ae0:	strhne	r1, [r0, #2]
   45ae4:	ldr	lr, [r2]
   45ae8:	mov	r0, #0
   45aec:	sub	r0, lr, r0
   45af0:	str	r0, [r2]
   45af4:	pop	{r4, r5, fp, lr}
   45af8:	bx	lr
   45afc:	eor	r1, r1, #-2147483648	; 0x80000000
   45b00:	b	45b08 <flatcc_json_printer_clear@@Base+0x1a4>
   45b04:	eor	r3, r3, #-2147483648	; 0x80000000
   45b08:	push	{r4, r5, lr}
   45b0c:	lsl	r4, r1, #1
   45b10:	lsl	r5, r3, #1
   45b14:	teq	r4, r5
   45b18:	teqeq	r0, r2
   45b1c:	orrsne	ip, r4, r0
   45b20:	orrsne	ip, r5, r2
   45b24:	mvnsne	ip, r4, asr #21
   45b28:	mvnsne	ip, r5, asr #21
   45b2c:	beq	45d18 <flatcc_json_printer_clear@@Base+0x3b4>
   45b30:	lsr	r4, r4, #21
   45b34:	rsbs	r5, r4, r5, lsr #21
   45b38:	rsblt	r5, r5, #0
   45b3c:	ble	45b5c <flatcc_json_printer_clear@@Base+0x1f8>
   45b40:	add	r4, r4, r5
   45b44:	eor	r2, r0, r2
   45b48:	eor	r3, r1, r3
   45b4c:	eor	r0, r2, r0
   45b50:	eor	r1, r3, r1
   45b54:	eor	r2, r0, r2
   45b58:	eor	r3, r1, r3
   45b5c:	cmp	r5, #54	; 0x36
   45b60:	pophi	{r4, r5, pc}
   45b64:	tst	r1, #-2147483648	; 0x80000000
   45b68:	lsl	r1, r1, #12
   45b6c:	mov	ip, #1048576	; 0x100000
   45b70:	orr	r1, ip, r1, lsr #12
   45b74:	beq	45b80 <flatcc_json_printer_clear@@Base+0x21c>
   45b78:	rsbs	r0, r0, #0
   45b7c:	rsc	r1, r1, #0
   45b80:	tst	r3, #-2147483648	; 0x80000000
   45b84:	lsl	r3, r3, #12
   45b88:	orr	r3, ip, r3, lsr #12
   45b8c:	beq	45b98 <flatcc_json_printer_clear@@Base+0x234>
   45b90:	rsbs	r2, r2, #0
   45b94:	rsc	r3, r3, #0
   45b98:	teq	r4, r5
   45b9c:	beq	45d00 <flatcc_json_printer_clear@@Base+0x39c>
   45ba0:	sub	r4, r4, #1
   45ba4:	rsbs	lr, r5, #32
   45ba8:	blt	45bc4 <flatcc_json_printer_clear@@Base+0x260>
   45bac:	lsl	ip, r2, lr
   45bb0:	adds	r0, r0, r2, lsr r5
   45bb4:	adc	r1, r1, #0
   45bb8:	adds	r0, r0, r3, lsl lr
   45bbc:	adcs	r1, r1, r3, asr r5
   45bc0:	b	45be0 <flatcc_json_printer_clear@@Base+0x27c>
   45bc4:	sub	r5, r5, #32
   45bc8:	add	lr, lr, #32
   45bcc:	cmp	r2, #1
   45bd0:	lsl	ip, r3, lr
   45bd4:	orrcs	ip, ip, #2
   45bd8:	adds	r0, r0, r3, asr r5
   45bdc:	adcs	r1, r1, r3, asr #31
   45be0:	and	r5, r1, #-2147483648	; 0x80000000
   45be4:	bpl	45bf4 <flatcc_json_printer_clear@@Base+0x290>
   45be8:	rsbs	ip, ip, #0
   45bec:	rscs	r0, r0, #0
   45bf0:	rsc	r1, r1, #0
   45bf4:	cmp	r1, #1048576	; 0x100000
   45bf8:	bcc	45c38 <flatcc_json_printer_clear@@Base+0x2d4>
   45bfc:	cmp	r1, #2097152	; 0x200000
   45c00:	bcc	45c20 <flatcc_json_printer_clear@@Base+0x2bc>
   45c04:	lsrs	r1, r1, #1
   45c08:	rrxs	r0, r0
   45c0c:	rrx	ip, ip
   45c10:	add	r4, r4, #1
   45c14:	lsl	r2, r4, #21
   45c18:	cmn	r2, #4194304	; 0x400000
   45c1c:	bcs	45d78 <flatcc_json_printer_clear@@Base+0x414>
   45c20:	cmp	ip, #-2147483648	; 0x80000000
   45c24:	lsrseq	ip, r0, #1
   45c28:	adcs	r0, r0, #0
   45c2c:	adc	r1, r1, r4, lsl #20
   45c30:	orr	r1, r1, r5
   45c34:	pop	{r4, r5, pc}
   45c38:	lsls	ip, ip, #1
   45c3c:	adcs	r0, r0, r0
   45c40:	adc	r1, r1, r1
   45c44:	tst	r1, #1048576	; 0x100000
   45c48:	sub	r4, r4, #1
   45c4c:	bne	45c20 <flatcc_json_printer_clear@@Base+0x2bc>
   45c50:	teq	r1, #0
   45c54:	moveq	r1, r0
   45c58:	moveq	r0, #0
   45c5c:	clz	r3, r1
   45c60:	addeq	r3, r3, #32
   45c64:	sub	r3, r3, #11
   45c68:	subs	r2, r3, #32
   45c6c:	bge	45c90 <flatcc_json_printer_clear@@Base+0x32c>
   45c70:	adds	r2, r2, #12
   45c74:	ble	45c8c <flatcc_json_printer_clear@@Base+0x328>
   45c78:	add	ip, r2, #20
   45c7c:	rsb	r2, r2, #12
   45c80:	lsl	r0, r1, ip
   45c84:	lsr	r1, r1, r2
   45c88:	b	45ca0 <flatcc_json_printer_clear@@Base+0x33c>
   45c8c:	add	r2, r2, #20
   45c90:	rsble	ip, r2, #32
   45c94:	lsl	r1, r1, r2
   45c98:	orrle	r1, r1, r0, lsr ip
   45c9c:	lslle	r0, r0, r2
   45ca0:	subs	r4, r4, r3
   45ca4:	addge	r1, r1, r4, lsl #20
   45ca8:	orrge	r1, r1, r5
   45cac:	popge	{r4, r5, pc}
   45cb0:	mvn	r4, r4
   45cb4:	subs	r4, r4, #31
   45cb8:	bge	45cf4 <flatcc_json_printer_clear@@Base+0x390>
   45cbc:	adds	r4, r4, #12
   45cc0:	bgt	45cdc <flatcc_json_printer_clear@@Base+0x378>
   45cc4:	add	r4, r4, #20
   45cc8:	rsb	r2, r4, #32
   45ccc:	lsr	r0, r0, r4
   45cd0:	orr	r0, r0, r1, lsl r2
   45cd4:	orr	r1, r5, r1, lsr r4
   45cd8:	pop	{r4, r5, pc}
   45cdc:	rsb	r4, r4, #12
   45ce0:	rsb	r2, r4, #32
   45ce4:	lsr	r0, r0, r2
   45ce8:	orr	r0, r0, r1, lsl r4
   45cec:	mov	r1, r5
   45cf0:	pop	{r4, r5, pc}
   45cf4:	lsr	r0, r1, r4
   45cf8:	mov	r1, r5
   45cfc:	pop	{r4, r5, pc}
   45d00:	teq	r4, #0
   45d04:	eor	r3, r3, #1048576	; 0x100000
   45d08:	eoreq	r1, r1, #1048576	; 0x100000
   45d0c:	addeq	r4, r4, #1
   45d10:	subne	r5, r5, #1
   45d14:	b	45ba0 <flatcc_json_printer_clear@@Base+0x23c>
   45d18:	mvns	ip, r4, asr #21
   45d1c:	mvnsne	ip, r5, asr #21
   45d20:	beq	45d88 <flatcc_json_printer_clear@@Base+0x424>
   45d24:	teq	r4, r5
   45d28:	teqeq	r0, r2
   45d2c:	beq	45d40 <flatcc_json_printer_clear@@Base+0x3dc>
   45d30:	orrs	ip, r4, r0
   45d34:	moveq	r1, r3
   45d38:	moveq	r0, r2
   45d3c:	pop	{r4, r5, pc}
   45d40:	teq	r1, r3
   45d44:	movne	r1, #0
   45d48:	movne	r0, #0
   45d4c:	popne	{r4, r5, pc}
   45d50:	lsrs	ip, r4, #21
   45d54:	bne	45d68 <flatcc_json_printer_clear@@Base+0x404>
   45d58:	lsls	r0, r0, #1
   45d5c:	adcs	r1, r1, r1
   45d60:	orrcs	r1, r1, #-2147483648	; 0x80000000
   45d64:	pop	{r4, r5, pc}
   45d68:	adds	r4, r4, #4194304	; 0x400000
   45d6c:	addcc	r1, r1, #1048576	; 0x100000
   45d70:	popcc	{r4, r5, pc}
   45d74:	and	r5, r1, #-2147483648	; 0x80000000
   45d78:	orr	r1, r5, #2130706432	; 0x7f000000
   45d7c:	orr	r1, r1, #15728640	; 0xf00000
   45d80:	mov	r0, #0
   45d84:	pop	{r4, r5, pc}
   45d88:	mvns	ip, r4, asr #21
   45d8c:	movne	r1, r3
   45d90:	movne	r0, r2
   45d94:	mvnseq	ip, r5, asr #21
   45d98:	movne	r3, r1
   45d9c:	movne	r2, r0
   45da0:	orrs	r4, r0, r1, lsl #12
   45da4:	orrseq	r5, r2, r3, lsl #12
   45da8:	teqeq	r1, r3
   45dac:	orrne	r1, r1, #524288	; 0x80000
   45db0:	pop	{r4, r5, pc}
   45db4:	teq	r0, #0
   45db8:	moveq	r1, #0
   45dbc:	bxeq	lr
   45dc0:	push	{r4, r5, lr}
   45dc4:	mov	r4, #1024	; 0x400
   45dc8:	add	r4, r4, #50	; 0x32
   45dcc:	mov	r5, #0
   45dd0:	mov	r1, #0
   45dd4:	b	45c50 <flatcc_json_printer_clear@@Base+0x2ec>
   45dd8:	teq	r0, #0
   45ddc:	moveq	r1, #0
   45de0:	bxeq	lr
   45de4:	push	{r4, r5, lr}
   45de8:	mov	r4, #1024	; 0x400
   45dec:	add	r4, r4, #50	; 0x32
   45df0:	ands	r5, r0, #-2147483648	; 0x80000000
   45df4:	rsbmi	r0, r0, #0
   45df8:	mov	r1, #0
   45dfc:	b	45c50 <flatcc_json_printer_clear@@Base+0x2ec>
   45e00:	lsls	r2, r0, #1
   45e04:	asr	r1, r2, #3
   45e08:	rrx	r1, r1
   45e0c:	lsl	r0, r2, #28
   45e10:	andsne	r3, r2, #-16777216	; 0xff000000
   45e14:	teqne	r3, #-16777216	; 0xff000000
   45e18:	eorne	r1, r1, #939524096	; 0x38000000
   45e1c:	bxne	lr
   45e20:	bics	r2, r2, #-16777216	; 0xff000000
   45e24:	bxeq	lr
   45e28:	teq	r3, #-16777216	; 0xff000000
   45e2c:	orreq	r1, r1, #524288	; 0x80000
   45e30:	bxeq	lr
   45e34:	push	{r4, r5, lr}
   45e38:	mov	r4, #896	; 0x380
   45e3c:	and	r5, r1, #-2147483648	; 0x80000000
   45e40:	bic	r1, r1, #-2147483648	; 0x80000000
   45e44:	b	45c50 <flatcc_json_printer_clear@@Base+0x2ec>
   45e48:	orrs	r2, r0, r1
   45e4c:	bxeq	lr
   45e50:	push	{r4, r5, lr}
   45e54:	mov	r5, #0
   45e58:	b	45e78 <flatcc_json_printer_clear@@Base+0x514>
   45e5c:	orrs	r2, r0, r1
   45e60:	bxeq	lr
   45e64:	push	{r4, r5, lr}
   45e68:	ands	r5, r1, #-2147483648	; 0x80000000
   45e6c:	bpl	45e78 <flatcc_json_printer_clear@@Base+0x514>
   45e70:	rsbs	r0, r0, #0
   45e74:	rsc	r1, r1, #0
   45e78:	mov	r4, #1024	; 0x400
   45e7c:	add	r4, r4, #50	; 0x32
   45e80:	lsrs	ip, r1, #22
   45e84:	beq	45bf4 <flatcc_json_printer_clear@@Base+0x290>
   45e88:	mov	r2, #3
   45e8c:	lsrs	ip, ip, #3
   45e90:	addne	r2, r2, #3
   45e94:	lsrs	ip, ip, #3
   45e98:	addne	r2, r2, #3
   45e9c:	add	r2, r2, ip, lsr #3
   45ea0:	rsb	r3, r2, #32
   45ea4:	lsl	ip, r0, r3
   45ea8:	lsr	r0, r0, r2
   45eac:	orr	r0, r0, r1, lsl r3
   45eb0:	lsr	r1, r1, r2
   45eb4:	add	r4, r4, r2
   45eb8:	b	45bf4 <flatcc_json_printer_clear@@Base+0x290>
   45ebc:	eor	r0, r0, #-2147483648	; 0x80000000
   45ec0:	b	45ec8 <flatcc_json_printer_clear@@Base+0x564>
   45ec4:	eor	r1, r1, #-2147483648	; 0x80000000
   45ec8:	lsls	r2, r0, #1
   45ecc:	lslsne	r3, r1, #1
   45ed0:	teqne	r2, r3
   45ed4:	mvnsne	ip, r2, asr #24
   45ed8:	mvnsne	ip, r3, asr #24
   45edc:	beq	45fd4 <flatcc_json_printer_clear@@Base+0x670>
   45ee0:	lsr	r2, r2, #24
   45ee4:	rsbs	r3, r2, r3, lsr #24
   45ee8:	addgt	r2, r2, r3
   45eec:	eorgt	r1, r0, r1
   45ef0:	eorgt	r0, r1, r0
   45ef4:	eorgt	r1, r0, r1
   45ef8:	rsblt	r3, r3, #0
   45efc:	cmp	r3, #25
   45f00:	bxhi	lr
   45f04:	tst	r0, #-2147483648	; 0x80000000
   45f08:	orr	r0, r0, #8388608	; 0x800000
   45f0c:	bic	r0, r0, #-16777216	; 0xff000000
   45f10:	rsbne	r0, r0, #0
   45f14:	tst	r1, #-2147483648	; 0x80000000
   45f18:	orr	r1, r1, #8388608	; 0x800000
   45f1c:	bic	r1, r1, #-16777216	; 0xff000000
   45f20:	rsbne	r1, r1, #0
   45f24:	teq	r2, r3
   45f28:	beq	45fbc <flatcc_json_printer_clear@@Base+0x658>
   45f2c:	sub	r2, r2, #1
   45f30:	adds	r0, r0, r1, asr r3
   45f34:	rsb	r3, r3, #32
   45f38:	lsl	r1, r1, r3
   45f3c:	and	r3, r0, #-2147483648	; 0x80000000
   45f40:	bpl	45f4c <flatcc_json_printer_clear@@Base+0x5e8>
   45f44:	rsbs	r1, r1, #0
   45f48:	rsc	r0, r0, #0
   45f4c:	cmp	r0, #8388608	; 0x800000
   45f50:	bcc	45f84 <flatcc_json_printer_clear@@Base+0x620>
   45f54:	cmp	r0, #16777216	; 0x1000000
   45f58:	bcc	45f70 <flatcc_json_printer_clear@@Base+0x60c>
   45f5c:	lsrs	r0, r0, #1
   45f60:	rrx	r1, r1
   45f64:	add	r2, r2, #1
   45f68:	cmp	r2, #254	; 0xfe
   45f6c:	bcs	46028 <flatcc_json_printer_clear@@Base+0x6c4>
   45f70:	cmp	r1, #-2147483648	; 0x80000000
   45f74:	adc	r0, r0, r2, lsl #23
   45f78:	biceq	r0, r0, #1
   45f7c:	orr	r0, r0, r3
   45f80:	bx	lr
   45f84:	lsls	r1, r1, #1
   45f88:	adc	r0, r0, r0
   45f8c:	tst	r0, #8388608	; 0x800000
   45f90:	sub	r2, r2, #1
   45f94:	bne	45f70 <flatcc_json_printer_clear@@Base+0x60c>
   45f98:	clz	ip, r0
   45f9c:	sub	ip, ip, #8
   45fa0:	subs	r2, r2, ip
   45fa4:	lsl	r0, r0, ip
   45fa8:	addge	r0, r0, r2, lsl #23
   45fac:	rsblt	r2, r2, #0
   45fb0:	orrge	r0, r0, r3
   45fb4:	orrlt	r0, r3, r0, lsr r2
   45fb8:	bx	lr
   45fbc:	teq	r2, #0
   45fc0:	eor	r1, r1, #8388608	; 0x800000
   45fc4:	eoreq	r0, r0, #8388608	; 0x800000
   45fc8:	addeq	r2, r2, #1
   45fcc:	subne	r3, r3, #1
   45fd0:	b	45f2c <flatcc_json_printer_clear@@Base+0x5c8>
   45fd4:	lsl	r3, r1, #1
   45fd8:	mvns	ip, r2, asr #24
   45fdc:	mvnsne	ip, r3, asr #24
   45fe0:	beq	46034 <flatcc_json_printer_clear@@Base+0x6d0>
   45fe4:	teq	r2, r3
   45fe8:	beq	45ff8 <flatcc_json_printer_clear@@Base+0x694>
   45fec:	teq	r2, #0
   45ff0:	moveq	r0, r1
   45ff4:	bx	lr
   45ff8:	teq	r0, r1
   45ffc:	movne	r0, #0
   46000:	bxne	lr
   46004:	tst	r2, #-16777216	; 0xff000000
   46008:	bne	46018 <flatcc_json_printer_clear@@Base+0x6b4>
   4600c:	lsls	r0, r0, #1
   46010:	orrcs	r0, r0, #-2147483648	; 0x80000000
   46014:	bx	lr
   46018:	adds	r2, r2, #33554432	; 0x2000000
   4601c:	addcc	r0, r0, #8388608	; 0x800000
   46020:	bxcc	lr
   46024:	and	r3, r0, #-2147483648	; 0x80000000
   46028:	orr	r0, r3, #2130706432	; 0x7f000000
   4602c:	orr	r0, r0, #8388608	; 0x800000
   46030:	bx	lr
   46034:	mvns	r2, r2, asr #24
   46038:	movne	r0, r1
   4603c:	mvnseq	r3, r3, asr #24
   46040:	movne	r1, r0
   46044:	lsls	r2, r0, #9
   46048:	lslseq	r3, r1, #9
   4604c:	teqeq	r0, r1
   46050:	orrne	r0, r0, #4194304	; 0x400000
   46054:	bx	lr
   46058:	mov	r3, #0
   4605c:	b	46068 <flatcc_json_printer_clear@@Base+0x704>
   46060:	ands	r3, r0, #-2147483648	; 0x80000000
   46064:	rsbmi	r0, r0, #0
   46068:	movs	ip, r0
   4606c:	bxeq	lr
   46070:	orr	r3, r3, #1258291200	; 0x4b000000
   46074:	mov	r1, r0
   46078:	mov	r0, #0
   4607c:	b	460c0 <flatcc_json_printer_clear@@Base+0x75c>
   46080:	orrs	r2, r0, r1
   46084:	bxeq	lr
   46088:	mov	r3, #0
   4608c:	b	460a8 <flatcc_json_printer_clear@@Base+0x744>
   46090:	orrs	r2, r0, r1
   46094:	bxeq	lr
   46098:	ands	r3, r1, #-2147483648	; 0x80000000
   4609c:	bpl	460a8 <flatcc_json_printer_clear@@Base+0x744>
   460a0:	rsbs	r0, r0, #0
   460a4:	rsc	r1, r1, #0
   460a8:	movs	ip, r1
   460ac:	moveq	ip, r0
   460b0:	moveq	r1, r0
   460b4:	moveq	r0, #0
   460b8:	orr	r3, r3, #1526726656	; 0x5b000000
   460bc:	subeq	r3, r3, #268435456	; 0x10000000
   460c0:	sub	r3, r3, #8388608	; 0x800000
   460c4:	clz	r2, ip
   460c8:	subs	r2, r2, #8
   460cc:	sub	r3, r3, r2, lsl #23
   460d0:	blt	460f0 <flatcc_json_printer_clear@@Base+0x78c>
   460d4:	add	r3, r3, r1, lsl r2
   460d8:	lsl	ip, r0, r2
   460dc:	rsb	r2, r2, #32
   460e0:	cmp	ip, #-2147483648	; 0x80000000
   460e4:	adc	r0, r3, r0, lsr r2
   460e8:	biceq	r0, r0, #1
   460ec:	bx	lr
   460f0:	add	r2, r2, #32
   460f4:	lsl	ip, r1, r2
   460f8:	rsb	r2, r2, #32
   460fc:	orrs	r0, r0, ip, lsl #1
   46100:	adc	r0, r3, r1, lsr r2
   46104:	biceq	r0, r0, ip, lsr #31
   46108:	bx	lr
   4610c:	cmp	r3, #0
   46110:	cmpeq	r2, #0
   46114:	bne	4612c <flatcc_json_printer_clear@@Base+0x7c8>
   46118:	cmp	r1, #0
   4611c:	cmpeq	r0, #0
   46120:	mvnne	r1, #0
   46124:	mvnne	r0, #0
   46128:	b	46148 <flatcc_json_printer_clear@@Base+0x7e4>
   4612c:	sub	sp, sp, #8
   46130:	push	{sp, lr}
   46134:	bl	46158 <flatcc_json_printer_clear@@Base+0x7f4>
   46138:	ldr	lr, [sp, #4]
   4613c:	add	sp, sp, #8
   46140:	pop	{r2, r3}
   46144:	bx	lr
   46148:	push	{r1, lr}
   4614c:	mov	r0, #8
   46150:	bl	14e30 <raise@plt>
   46154:	pop	{r1, pc}
   46158:	cmp	r1, r3
   4615c:	cmpeq	r0, r2
   46160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   46164:	mov	r4, r0
   46168:	movcc	r0, #0
   4616c:	mov	r5, r1
   46170:	ldr	lr, [sp, #36]	; 0x24
   46174:	movcc	r1, r0
   46178:	bcc	46274 <flatcc_json_printer_clear@@Base+0x910>
   4617c:	cmp	r3, #0
   46180:	clzeq	ip, r2
   46184:	clzne	ip, r3
   46188:	addeq	ip, ip, #32
   4618c:	cmp	r5, #0
   46190:	clzeq	r1, r4
   46194:	addeq	r1, r1, #32
   46198:	clzne	r1, r5
   4619c:	sub	ip, ip, r1
   461a0:	sub	sl, ip, #32
   461a4:	lsl	r9, r3, ip
   461a8:	rsb	fp, ip, #32
   461ac:	orr	r9, r9, r2, lsl sl
   461b0:	orr	r9, r9, r2, lsr fp
   461b4:	lsl	r8, r2, ip
   461b8:	cmp	r5, r9
   461bc:	cmpeq	r4, r8
   461c0:	movcc	r0, #0
   461c4:	movcc	r1, r0
   461c8:	bcc	461e4 <flatcc_json_printer_clear@@Base+0x880>
   461cc:	mov	r0, #1
   461d0:	subs	r4, r4, r8
   461d4:	lsl	r1, r0, sl
   461d8:	orr	r1, r1, r0, lsr fp
   461dc:	lsl	r0, r0, ip
   461e0:	sbc	r5, r5, r9
   461e4:	cmp	ip, #0
   461e8:	beq	46274 <flatcc_json_printer_clear@@Base+0x910>
   461ec:	lsr	r6, r8, #1
   461f0:	orr	r6, r6, r9, lsl #31
   461f4:	lsr	r7, r9, #1
   461f8:	mov	r2, ip
   461fc:	b	46220 <flatcc_json_printer_clear@@Base+0x8bc>
   46200:	subs	r3, r4, r6
   46204:	sbc	r8, r5, r7
   46208:	adds	r3, r3, r3
   4620c:	adc	r8, r8, r8
   46210:	adds	r4, r3, #1
   46214:	adc	r5, r8, #0
   46218:	subs	r2, r2, #1
   4621c:	beq	4623c <flatcc_json_printer_clear@@Base+0x8d8>
   46220:	cmp	r5, r7
   46224:	cmpeq	r4, r6
   46228:	bcs	46200 <flatcc_json_printer_clear@@Base+0x89c>
   4622c:	adds	r4, r4, r4
   46230:	adc	r5, r5, r5
   46234:	subs	r2, r2, #1
   46238:	bne	46220 <flatcc_json_printer_clear@@Base+0x8bc>
   4623c:	lsr	r3, r4, ip
   46240:	orr	r3, r3, r5, lsl fp
   46244:	lsr	r2, r5, ip
   46248:	orr	r3, r3, r5, lsr sl
   4624c:	adds	r0, r0, r4
   46250:	mov	r4, r3
   46254:	lsl	r3, r2, ip
   46258:	orr	r3, r3, r4, lsl sl
   4625c:	lsl	ip, r4, ip
   46260:	orr	r3, r3, r4, lsr fp
   46264:	adc	r1, r1, r5
   46268:	subs	r0, r0, ip
   4626c:	mov	r5, r2
   46270:	sbc	r1, r1, r3
   46274:	cmp	lr, #0
   46278:	strdne	r4, [lr]
   4627c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00046280 <__libc_csu_init@@Base>:
   46280:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   46284:	mov	r7, r0
   46288:	ldr	r6, [pc, #72]	; 462d8 <__libc_csu_init@@Base+0x58>
   4628c:	ldr	r5, [pc, #72]	; 462dc <__libc_csu_init@@Base+0x5c>
   46290:	add	r6, pc, r6
   46294:	add	r5, pc, r5
   46298:	sub	r6, r6, r5
   4629c:	mov	r8, r1
   462a0:	mov	r9, r2
   462a4:	bl	14e10 <raise@plt-0x20>
   462a8:	asrs	r6, r6, #2
   462ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   462b0:	mov	r4, #0
   462b4:	add	r4, r4, #1
   462b8:	ldr	r3, [r5], #4
   462bc:	mov	r2, r9
   462c0:	mov	r1, r8
   462c4:	mov	r0, r7
   462c8:	blx	r3
   462cc:	cmp	r6, r4
   462d0:	bne	462b4 <__libc_csu_init@@Base+0x34>
   462d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   462d8:	andeq	r6, r1, r4, ror ip
   462dc:	andeq	r6, r1, ip, ror #24

000462e0 <__libc_csu_fini@@Base>:
   462e0:	bx	lr

Disassembly of section .fini:

000462e4 <.fini>:
   462e4:	push	{r3, lr}
   462e8:	pop	{r3, pc}
