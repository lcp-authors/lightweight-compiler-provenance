
../repos/coreutils/src/users:     file format elf32-littlearm


Disassembly of section .init:

00010c40 <.init>:
   10c40:	push	{r3, lr}
   10c44:	bl	11044 <putchar_unlocked@plt+0x180>
   10c48:	pop	{r3, pc}

Disassembly of section .plt:

00010c4c <calloc@plt-0x14>:
   10c4c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c50:	ldr	lr, [pc, #4]	; 10c5c <calloc@plt-0x4>
   10c54:	add	lr, pc, lr
   10c58:	ldr	pc, [lr, #8]!
   10c5c:	andeq	r4, r1, r4, lsr #7

00010c60 <calloc@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #20, 20	; 0x14000
   10c68:	ldr	pc, [ip, #932]!	; 0x3a4

00010c6c <fputs_unlocked@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #20, 20	; 0x14000
   10c74:	ldr	pc, [ip, #924]!	; 0x39c

00010c78 <raise@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #20, 20	; 0x14000
   10c80:	ldr	pc, [ip, #916]!	; 0x394

00010c84 <strcmp@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #20, 20	; 0x14000
   10c8c:	ldr	pc, [ip, #908]!	; 0x38c

00010c90 <fflush@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #20, 20	; 0x14000
   10c98:	ldr	pc, [ip, #900]!	; 0x384

00010c9c <utmpxname@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #20, 20	; 0x14000
   10ca4:	ldr	pc, [ip, #892]!	; 0x37c

00010ca8 <free@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #20, 20	; 0x14000
   10cb0:	ldr	pc, [ip, #884]!	; 0x374

00010cb4 <_exit@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #20, 20	; 0x14000
   10cbc:	ldr	pc, [ip, #876]!	; 0x36c

00010cc0 <memcpy@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #20, 20	; 0x14000
   10cc8:	ldr	pc, [ip, #868]!	; 0x364

00010ccc <mbsinit@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #20, 20	; 0x14000
   10cd4:	ldr	pc, [ip, #860]!	; 0x35c

00010cd8 <memcmp@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #20, 20	; 0x14000
   10ce0:	ldr	pc, [ip, #852]!	; 0x354

00010ce4 <fputc_unlocked@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #20, 20	; 0x14000
   10cec:	ldr	pc, [ip, #844]!	; 0x34c

00010cf0 <dcgettext@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #20, 20	; 0x14000
   10cf8:	ldr	pc, [ip, #836]!	; 0x344

00010cfc <setutxent@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #20, 20	; 0x14000
   10d04:	ldr	pc, [ip, #828]!	; 0x33c

00010d08 <realloc@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #20, 20	; 0x14000
   10d10:	ldr	pc, [ip, #820]!	; 0x334

00010d14 <textdomain@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #20, 20	; 0x14000
   10d1c:	ldr	pc, [ip, #812]!	; 0x32c

00010d20 <iswprint@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #20, 20	; 0x14000
   10d28:	ldr	pc, [ip, #804]!	; 0x324

00010d2c <lseek64@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #20, 20	; 0x14000
   10d34:	ldr	pc, [ip, #796]!	; 0x31c

00010d38 <__ctype_get_mb_cur_max@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #20, 20	; 0x14000
   10d40:	ldr	pc, [ip, #788]!	; 0x314

00010d44 <__fpending@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #20, 20	; 0x14000
   10d4c:	ldr	pc, [ip, #780]!	; 0x30c

00010d50 <ferror_unlocked@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #20, 20	; 0x14000
   10d58:	ldr	pc, [ip, #772]!	; 0x304

00010d5c <mbrtowc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #20, 20	; 0x14000
   10d64:	ldr	pc, [ip, #764]!	; 0x2fc

00010d68 <error@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #20, 20	; 0x14000
   10d70:	ldr	pc, [ip, #756]!	; 0x2f4

00010d74 <malloc@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #20, 20	; 0x14000
   10d7c:	ldr	pc, [ip, #748]!	; 0x2ec

00010d80 <__libc_start_main@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #20, 20	; 0x14000
   10d88:	ldr	pc, [ip, #740]!	; 0x2e4

00010d8c <__freading@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #20, 20	; 0x14000
   10d94:	ldr	pc, [ip, #732]!	; 0x2dc

00010d98 <__gmon_start__@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #20, 20	; 0x14000
   10da0:	ldr	pc, [ip, #724]!	; 0x2d4

00010da4 <getopt_long@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #20, 20	; 0x14000
   10dac:	ldr	pc, [ip, #716]!	; 0x2cc

00010db0 <kill@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #20, 20	; 0x14000
   10db8:	ldr	pc, [ip, #708]!	; 0x2c4

00010dbc <__ctype_b_loc@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #20, 20	; 0x14000
   10dc4:	ldr	pc, [ip, #700]!	; 0x2bc

00010dc8 <exit@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #20, 20	; 0x14000
   10dd0:	ldr	pc, [ip, #692]!	; 0x2b4

00010dd4 <strlen@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #20, 20	; 0x14000
   10ddc:	ldr	pc, [ip, #684]!	; 0x2ac

00010de0 <__errno_location@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #20, 20	; 0x14000
   10de8:	ldr	pc, [ip, #676]!	; 0x2a4

00010dec <__cxa_atexit@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #20, 20	; 0x14000
   10df4:	ldr	pc, [ip, #668]!	; 0x29c

00010df8 <memset@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #20, 20	; 0x14000
   10e00:	ldr	pc, [ip, #660]!	; 0x294

00010e04 <strncpy@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #20, 20	; 0x14000
   10e0c:	ldr	pc, [ip, #652]!	; 0x28c

00010e10 <__printf_chk@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #20, 20	; 0x14000
   10e18:	ldr	pc, [ip, #644]!	; 0x284

00010e1c <fileno@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #20, 20	; 0x14000
   10e24:	ldr	pc, [ip, #636]!	; 0x27c

00010e28 <__fprintf_chk@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #20, 20	; 0x14000
   10e30:	ldr	pc, [ip, #628]!	; 0x274

00010e34 <fclose@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #20, 20	; 0x14000
   10e3c:	ldr	pc, [ip, #620]!	; 0x26c

00010e40 <fseeko64@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #20, 20	; 0x14000
   10e48:	ldr	pc, [ip, #612]!	; 0x264

00010e4c <endutxent@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #20, 20	; 0x14000
   10e54:	ldr	pc, [ip, #604]!	; 0x25c

00010e58 <setlocale@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #20, 20	; 0x14000
   10e60:	ldr	pc, [ip, #596]!	; 0x254

00010e64 <strrchr@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #20, 20	; 0x14000
   10e6c:	ldr	pc, [ip, #588]!	; 0x24c

00010e70 <nl_langinfo@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #20, 20	; 0x14000
   10e78:	ldr	pc, [ip, #580]!	; 0x244

00010e7c <qsort@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #20, 20	; 0x14000
   10e84:	ldr	pc, [ip, #572]!	; 0x23c

00010e88 <bindtextdomain@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #20, 20	; 0x14000
   10e90:	ldr	pc, [ip, #564]!	; 0x234

00010e94 <fputs@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #20, 20	; 0x14000
   10e9c:	ldr	pc, [ip, #556]!	; 0x22c

00010ea0 <strncmp@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #20, 20	; 0x14000
   10ea8:	ldr	pc, [ip, #548]!	; 0x224

00010eac <abort@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #20, 20	; 0x14000
   10eb4:	ldr	pc, [ip, #540]!	; 0x21c

00010eb8 <getutxent@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #20, 20	; 0x14000
   10ec0:	ldr	pc, [ip, #532]!	; 0x214

00010ec4 <putchar_unlocked@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #20, 20	; 0x14000
   10ecc:	ldr	pc, [ip, #524]!	; 0x20c

Disassembly of section .text:

00010ed0 <.text>:
   10ed0:	push	{r4, r5, r6, r7, r8, lr}
   10ed4:	mov	r4, r0
   10ed8:	sub	sp, sp, #24
   10edc:	ldr	r0, [r1]
   10ee0:	mov	r6, r1
   10ee4:	bl	11774 <putchar_unlocked@plt+0x8b0>
   10ee8:	ldr	r1, [pc, #228]	; 10fd4 <putchar_unlocked@plt+0x110>
   10eec:	mov	r0, #6
   10ef0:	bl	10e58 <setlocale@plt>
   10ef4:	ldr	r1, [pc, #220]	; 10fd8 <putchar_unlocked@plt+0x114>
   10ef8:	ldr	r0, [pc, #220]	; 10fdc <putchar_unlocked@plt+0x118>
   10efc:	bl	10e88 <bindtextdomain@plt>
   10f00:	ldr	r0, [pc, #212]	; 10fdc <putchar_unlocked@plt+0x118>
   10f04:	bl	10d14 <textdomain@plt>
   10f08:	ldr	r0, [pc, #208]	; 10fe0 <putchar_unlocked@plt+0x11c>
   10f0c:	bl	14224 <putchar_unlocked@plt+0x3360>
   10f10:	ldr	r3, [pc, #204]	; 10fe4 <putchar_unlocked@plt+0x120>
   10f14:	mov	r5, #0
   10f18:	str	r3, [sp, #16]
   10f1c:	ldr	r3, [pc, #196]	; 10fe8 <putchar_unlocked@plt+0x124>
   10f20:	mov	r7, #1
   10f24:	str	r3, [sp, #12]
   10f28:	ldr	r3, [pc, #188]	; 10fec <putchar_unlocked@plt+0x128>
   10f2c:	str	r5, [sp, #20]
   10f30:	str	r3, [sp, #8]
   10f34:	ldr	r3, [pc, #180]	; 10ff0 <putchar_unlocked@plt+0x12c>
   10f38:	str	r7, [sp, #4]
   10f3c:	ldr	r8, [pc, #176]	; 10ff4 <putchar_unlocked@plt+0x130>
   10f40:	ldr	r3, [r3]
   10f44:	mov	r0, r4
   10f48:	str	r3, [sp]
   10f4c:	ldr	r2, [pc, #164]	; 10ff8 <putchar_unlocked@plt+0x134>
   10f50:	ldr	r3, [pc, #164]	; 10ffc <putchar_unlocked@plt+0x138>
   10f54:	mov	r1, r6
   10f58:	bl	116ac <putchar_unlocked@plt+0x7e8>
   10f5c:	ldr	r3, [r8]
   10f60:	subs	r4, r4, r3
   10f64:	beq	10fb0 <putchar_unlocked@plt+0xec>
   10f68:	cmp	r4, r7
   10f6c:	beq	10fc8 <putchar_unlocked@plt+0x104>
   10f70:	mov	r2, #5
   10f74:	ldr	r1, [pc, #132]	; 11000 <putchar_unlocked@plt+0x13c>
   10f78:	mov	r0, r5
   10f7c:	bl	10cf0 <dcgettext@plt>
   10f80:	ldr	r3, [r8]
   10f84:	add	r3, r3, #1
   10f88:	mov	r4, r0
   10f8c:	ldr	r0, [r6, r3, lsl #2]
   10f90:	bl	12da4 <putchar_unlocked@plt+0x1ee0>
   10f94:	mov	r2, r4
   10f98:	mov	r1, r5
   10f9c:	mov	r3, r0
   10fa0:	mov	r0, r5
   10fa4:	bl	10d68 <error@plt>
   10fa8:	mov	r0, r7
   10fac:	bl	11264 <putchar_unlocked@plt+0x3a0>
   10fb0:	ldr	r0, [pc, #76]	; 11004 <putchar_unlocked@plt+0x140>
   10fb4:	mov	r1, r7
   10fb8:	bl	1113c <putchar_unlocked@plt+0x278>
   10fbc:	mov	r0, #0
   10fc0:	add	sp, sp, #24
   10fc4:	pop	{r4, r5, r6, r7, r8, pc}
   10fc8:	mov	r1, r5
   10fcc:	ldr	r0, [r6, r3, lsl #2]
   10fd0:	b	10fb8 <putchar_unlocked@plt+0xf4>
   10fd4:	andeq	r4, r1, sl, lsr r3
   10fd8:	andeq	r4, r1, r0, lsr #9
   10fdc:	strdeq	r4, [r1], -sp
   10fe0:			; <UNDEFINED> instruction: 0x000114bc
   10fe4:			; <UNDEFINED> instruction: 0x000144b8
   10fe8:	andeq	r4, r1, r8, asr #9
   10fec:	andeq	r1, r1, r4, ror #4
   10ff0:	andeq	r5, r2, r8, ror #1
   10ff4:	andeq	r5, r2, r8, lsr r1
   10ff8:	andeq	r4, r1, r0, lsl #5
   10ffc:	strdeq	r4, [r1], -r9
   11000:	ldrdeq	r4, [r1], -r9
   11004:	andeq	r4, r1, r9, asr #6
   11008:	mov	fp, #0
   1100c:	mov	lr, #0
   11010:	pop	{r1}		; (ldr r1, [sp], #4)
   11014:	mov	r2, sp
   11018:	push	{r2}		; (str r2, [sp, #-4]!)
   1101c:	push	{r0}		; (str r0, [sp, #-4]!)
   11020:	ldr	ip, [pc, #16]	; 11038 <putchar_unlocked@plt+0x174>
   11024:	push	{ip}		; (str ip, [sp, #-4]!)
   11028:	ldr	r0, [pc, #12]	; 1103c <putchar_unlocked@plt+0x178>
   1102c:	ldr	r3, [pc, #12]	; 11040 <putchar_unlocked@plt+0x17c>
   11030:	bl	10d80 <__libc_start_main@plt>
   11034:	bl	10eac <abort@plt>
   11038:	andeq	r4, r1, r0, lsr #4
   1103c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11040:	andeq	r4, r1, r0, asr #3
   11044:	ldr	r3, [pc, #20]	; 11060 <putchar_unlocked@plt+0x19c>
   11048:	ldr	r2, [pc, #20]	; 11064 <putchar_unlocked@plt+0x1a0>
   1104c:	add	r3, pc, r3
   11050:	ldr	r2, [r3, r2]
   11054:	cmp	r2, #0
   11058:	bxeq	lr
   1105c:	b	10d98 <__gmon_start__@plt>
   11060:	andeq	r3, r1, ip, lsr #31
   11064:	ldrdeq	r0, [r0], -ip
   11068:	ldr	r3, [pc, #28]	; 1108c <putchar_unlocked@plt+0x1c8>
   1106c:	ldr	r0, [pc, #28]	; 11090 <putchar_unlocked@plt+0x1cc>
   11070:	sub	r3, r3, r0
   11074:	cmp	r3, #6
   11078:	bxls	lr
   1107c:	ldr	r3, [pc, #16]	; 11094 <putchar_unlocked@plt+0x1d0>
   11080:	cmp	r3, #0
   11084:	bxeq	lr
   11088:	bx	r3
   1108c:	andeq	r5, r2, r3, lsr r1
   11090:	andeq	r5, r2, r0, lsr r1
   11094:	andeq	r0, r0, r0
   11098:	ldr	r1, [pc, #36]	; 110c4 <putchar_unlocked@plt+0x200>
   1109c:	ldr	r0, [pc, #36]	; 110c8 <putchar_unlocked@plt+0x204>
   110a0:	sub	r1, r1, r0
   110a4:	asr	r1, r1, #2
   110a8:	add	r1, r1, r1, lsr #31
   110ac:	asrs	r1, r1, #1
   110b0:	bxeq	lr
   110b4:	ldr	r3, [pc, #16]	; 110cc <putchar_unlocked@plt+0x208>
   110b8:	cmp	r3, #0
   110bc:	bxeq	lr
   110c0:	bx	r3
   110c4:	andeq	r5, r2, r0, lsr r1
   110c8:	andeq	r5, r2, r0, lsr r1
   110cc:	andeq	r0, r0, r0
   110d0:	push	{r4, lr}
   110d4:	ldr	r4, [pc, #24]	; 110f4 <putchar_unlocked@plt+0x230>
   110d8:	ldrb	r3, [r4]
   110dc:	cmp	r3, #0
   110e0:	popne	{r4, pc}
   110e4:	bl	11068 <putchar_unlocked@plt+0x1a4>
   110e8:	mov	r3, #1
   110ec:	strb	r3, [r4]
   110f0:	pop	{r4, pc}
   110f4:	andeq	r5, r2, ip, asr #2
   110f8:	ldr	r0, [pc, #40]	; 11128 <putchar_unlocked@plt+0x264>
   110fc:	ldr	r3, [r0]
   11100:	cmp	r3, #0
   11104:	bne	1110c <putchar_unlocked@plt+0x248>
   11108:	b	11098 <putchar_unlocked@plt+0x1d4>
   1110c:	ldr	r3, [pc, #24]	; 1112c <putchar_unlocked@plt+0x268>
   11110:	cmp	r3, #0
   11114:	beq	11108 <putchar_unlocked@plt+0x244>
   11118:	push	{r4, lr}
   1111c:	blx	r3
   11120:	pop	{r4, lr}
   11124:	b	11098 <putchar_unlocked@plt+0x1d4>
   11128:	andeq	r4, r2, r4, lsl pc
   1112c:	andeq	r0, r0, r0
   11130:	ldr	r1, [r1]
   11134:	ldr	r0, [r0]
   11138:	b	10c84 <strcmp@plt>
   1113c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   11140:	mov	r3, r1
   11144:	add	r2, sp, #4
   11148:	mov	r1, sp
   1114c:	mov	r5, r0
   11150:	bl	12e08 <putchar_unlocked@plt+0x1f44>
   11154:	subs	r4, r0, #0
   11158:	beq	11188 <putchar_unlocked@plt+0x2c4>
   1115c:	bl	10de0 <__errno_location@plt>
   11160:	mov	r2, r5
   11164:	mov	r1, #3
   11168:	ldr	r4, [r0]
   1116c:	mov	r0, #0
   11170:	bl	12c64 <putchar_unlocked@plt+0x1da0>
   11174:	ldr	r2, [pc, #220]	; 11258 <putchar_unlocked@plt+0x394>
   11178:	mov	r1, r4
   1117c:	mov	r3, r0
   11180:	mov	r0, #1
   11184:	bl	10d68 <error@plt>
   11188:	ldm	sp, {r5, r6}
   1118c:	mov	r1, #4
   11190:	mov	r0, r5
   11194:	bl	134d8 <putchar_unlocked@plt+0x2614>
   11198:	mov	r7, r0
   1119c:	cmp	r5, #0
   111a0:	bne	111f0 <putchar_unlocked@plt+0x32c>
   111a4:	ldr	r3, [pc, #176]	; 1125c <putchar_unlocked@plt+0x398>
   111a8:	mov	r2, #4
   111ac:	mov	r1, r4
   111b0:	mov	r0, r7
   111b4:	bl	10e7c <qsort@plt>
   111b8:	ldr	r8, [pc, #160]	; 11260 <putchar_unlocked@plt+0x39c>
   111bc:	sub	r6, r4, #1
   111c0:	cmp	r4, r5
   111c4:	bne	11224 <putchar_unlocked@plt+0x360>
   111c8:	mov	r5, r7
   111cc:	add	r4, r7, r4, lsl #2
   111d0:	cmp	r5, r4
   111d4:	bne	1124c <putchar_unlocked@plt+0x388>
   111d8:	mov	r0, r7
   111dc:	bl	115a0 <putchar_unlocked@plt+0x6dc>
   111e0:	ldr	r0, [sp, #4]
   111e4:	bl	115a0 <putchar_unlocked@plt+0x6dc>
   111e8:	add	sp, sp, #12
   111ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   111f0:	ldrb	r3, [r6, #44]	; 0x2c
   111f4:	cmp	r3, #0
   111f8:	beq	11218 <putchar_unlocked@plt+0x354>
   111fc:	ldrsh	r3, [r6]
   11200:	cmp	r3, #7
   11204:	bne	11218 <putchar_unlocked@plt+0x354>
   11208:	mov	r0, r6
   1120c:	bl	12db0 <putchar_unlocked@plt+0x1eec>
   11210:	str	r0, [r7, r4, lsl #2]
   11214:	add	r4, r4, #1
   11218:	add	r6, r6, #384	; 0x180
   1121c:	sub	r5, r5, #1
   11220:	b	1119c <putchar_unlocked@plt+0x2d8>
   11224:	cmp	r6, r5
   11228:	movhi	r9, #32
   1122c:	movls	r9, #10
   11230:	ldr	r1, [r8]
   11234:	ldr	r0, [r7, r5, lsl #2]
   11238:	bl	10c6c <fputs_unlocked@plt>
   1123c:	mov	r0, r9
   11240:	bl	10ec4 <putchar_unlocked@plt>
   11244:	add	r5, r5, #1
   11248:	b	111c0 <putchar_unlocked@plt+0x2fc>
   1124c:	ldr	r0, [r5], #4
   11250:	bl	115a0 <putchar_unlocked@plt+0x6dc>
   11254:	b	111d0 <putchar_unlocked@plt+0x30c>
   11258:	andeq	r4, r1, r8, ror #10
   1125c:	andeq	r1, r1, r0, lsr r1
   11260:	andeq	r5, r2, r4, asr #2
   11264:	subs	r4, r0, #0
   11268:	push	{r7, lr}
   1126c:	sub	sp, sp, #56	; 0x38
   11270:	ldr	r5, [pc, #464]	; 11448 <putchar_unlocked@plt+0x584>
   11274:	beq	112ac <putchar_unlocked@plt+0x3e8>
   11278:	ldr	r3, [pc, #460]	; 1144c <putchar_unlocked@plt+0x588>
   1127c:	mov	r2, #5
   11280:	ldr	r1, [pc, #456]	; 11450 <putchar_unlocked@plt+0x58c>
   11284:	mov	r0, #0
   11288:	ldr	r6, [r3]
   1128c:	bl	10cf0 <dcgettext@plt>
   11290:	ldr	r3, [r5]
   11294:	mov	r1, #1
   11298:	mov	r2, r0
   1129c:	mov	r0, r6
   112a0:	bl	10e28 <__fprintf_chk@plt>
   112a4:	mov	r0, r4
   112a8:	bl	10dc8 <exit@plt>
   112ac:	mov	r2, #5
   112b0:	ldr	r1, [pc, #412]	; 11454 <putchar_unlocked@plt+0x590>
   112b4:	bl	10cf0 <dcgettext@plt>
   112b8:	ldr	r2, [r5]
   112bc:	ldr	r6, [pc, #404]	; 11458 <putchar_unlocked@plt+0x594>
   112c0:	ldr	r8, [pc, #404]	; 1145c <putchar_unlocked@plt+0x598>
   112c4:	mov	r7, r4
   112c8:	mov	r1, r0
   112cc:	mov	r0, #1
   112d0:	bl	10e10 <__printf_chk@plt>
   112d4:	mov	r2, #5
   112d8:	ldr	r1, [pc, #384]	; 11460 <putchar_unlocked@plt+0x59c>
   112dc:	mov	r0, r4
   112e0:	bl	10cf0 <dcgettext@plt>
   112e4:	ldr	r3, [pc, #376]	; 11464 <putchar_unlocked@plt+0x5a0>
   112e8:	ldr	r2, [pc, #376]	; 11468 <putchar_unlocked@plt+0x5a4>
   112ec:	mov	r1, r0
   112f0:	mov	r0, #1
   112f4:	bl	10e10 <__printf_chk@plt>
   112f8:	mov	r2, #5
   112fc:	ldr	r1, [pc, #360]	; 1146c <putchar_unlocked@plt+0x5a8>
   11300:	mov	r0, r4
   11304:	bl	10cf0 <dcgettext@plt>
   11308:	ldr	r1, [r6]
   1130c:	bl	10c6c <fputs_unlocked@plt>
   11310:	mov	r2, #5
   11314:	ldr	r1, [pc, #340]	; 11470 <putchar_unlocked@plt+0x5ac>
   11318:	mov	r0, r4
   1131c:	bl	10cf0 <dcgettext@plt>
   11320:	ldr	r1, [r6]
   11324:	bl	10c6c <fputs_unlocked@plt>
   11328:	ldr	lr, [pc, #324]	; 11474 <putchar_unlocked@plt+0x5b0>
   1132c:	mov	ip, sp
   11330:	ldm	lr!, {r0, r1, r2, r3}
   11334:	stmia	ip!, {r0, r1, r2, r3}
   11338:	ldm	lr!, {r0, r1, r2, r3}
   1133c:	stmia	ip!, {r0, r1, r2, r3}
   11340:	ldm	lr!, {r0, r1, r2, r3}
   11344:	stmia	ip!, {r0, r1, r2, r3}
   11348:	ldm	lr, {r0, r1}
   1134c:	stm	ip, {r0, r1}
   11350:	ldr	r1, [sp, r7]
   11354:	add	r5, sp, r7
   11358:	cmp	r1, #0
   1135c:	bne	11400 <putchar_unlocked@plt+0x53c>
   11360:	ldr	r5, [r5, #4]
   11364:	ldr	r7, [pc, #240]	; 1145c <putchar_unlocked@plt+0x598>
   11368:	cmp	r5, #0
   1136c:	mov	r2, #5
   11370:	ldr	r1, [pc, #256]	; 11478 <putchar_unlocked@plt+0x5b4>
   11374:	mov	r0, #0
   11378:	moveq	r5, r7
   1137c:	bl	10cf0 <dcgettext@plt>
   11380:	ldr	r3, [pc, #244]	; 1147c <putchar_unlocked@plt+0x5b8>
   11384:	ldr	r2, [pc, #244]	; 11480 <putchar_unlocked@plt+0x5bc>
   11388:	mov	r1, r0
   1138c:	mov	r0, #1
   11390:	bl	10e10 <__printf_chk@plt>
   11394:	mov	r1, #0
   11398:	mov	r0, #5
   1139c:	bl	10e58 <setlocale@plt>
   113a0:	cmp	r0, #0
   113a4:	bne	11418 <putchar_unlocked@plt+0x554>
   113a8:	mov	r2, #5
   113ac:	ldr	r1, [pc, #208]	; 11484 <putchar_unlocked@plt+0x5c0>
   113b0:	mov	r0, #0
   113b4:	bl	10cf0 <dcgettext@plt>
   113b8:	ldr	r3, [pc, #156]	; 1145c <putchar_unlocked@plt+0x598>
   113bc:	ldr	r2, [pc, #184]	; 1147c <putchar_unlocked@plt+0x5b8>
   113c0:	mov	r1, r0
   113c4:	mov	r0, #1
   113c8:	bl	10e10 <__printf_chk@plt>
   113cc:	mov	r2, #5
   113d0:	ldr	r1, [pc, #176]	; 11488 <putchar_unlocked@plt+0x5c4>
   113d4:	mov	r0, #0
   113d8:	bl	10cf0 <dcgettext@plt>
   113dc:	ldr	r2, [pc, #168]	; 1148c <putchar_unlocked@plt+0x5c8>
   113e0:	cmp	r5, r7
   113e4:	ldr	r3, [pc, #164]	; 11490 <putchar_unlocked@plt+0x5cc>
   113e8:	moveq	r3, r2
   113ec:	mov	r2, r5
   113f0:	mov	r1, r0
   113f4:	mov	r0, #1
   113f8:	bl	10e10 <__printf_chk@plt>
   113fc:	b	112a4 <putchar_unlocked@plt+0x3e0>
   11400:	mov	r0, r8
   11404:	bl	10c84 <strcmp@plt>
   11408:	add	r7, r7, #8
   1140c:	cmp	r0, #0
   11410:	bne	11350 <putchar_unlocked@plt+0x48c>
   11414:	b	11360 <putchar_unlocked@plt+0x49c>
   11418:	mov	r2, #3
   1141c:	ldr	r1, [pc, #112]	; 11494 <putchar_unlocked@plt+0x5d0>
   11420:	bl	10ea0 <strncmp@plt>
   11424:	cmp	r0, #0
   11428:	beq	113a8 <putchar_unlocked@plt+0x4e4>
   1142c:	mov	r2, #5
   11430:	ldr	r1, [pc, #96]	; 11498 <putchar_unlocked@plt+0x5d4>
   11434:	mov	r0, #0
   11438:	bl	10cf0 <dcgettext@plt>
   1143c:	ldr	r1, [r6]
   11440:	bl	10c6c <fputs_unlocked@plt>
   11444:	b	113a8 <putchar_unlocked@plt+0x4e4>
   11448:	andeq	r5, r2, r8, asr r1
   1144c:	andeq	r5, r2, r0, asr #2
   11450:	andeq	r4, r1, r6, lsl #5
   11454:	andeq	r4, r1, sp, lsr #5
   11458:	andeq	r5, r2, r4, asr #2
   1145c:	andeq	r4, r1, r0, lsl #5
   11460:	andeq	r4, r1, fp, asr #5
   11464:	andeq	r4, r1, fp, lsr r3
   11468:	andeq	r4, r1, r9, asr #6
   1146c:	andeq	r4, r1, r7, asr r3
   11470:	andeq	r4, r1, r4, lsl #7
   11474:	andeq	r4, r1, r8, asr #4
   11478:			; <UNDEFINED> instruction: 0x000143ba
   1147c:	ldrdeq	r4, [r1], -r1
   11480:	strdeq	r4, [r1], -r9
   11484:	andeq	r4, r1, r2, asr r4
   11488:	andeq	r4, r1, sp, ror #8
   1148c:	andeq	r4, r1, r6, lsl #10
   11490:	andeq	r4, r1, sl, lsr r3
   11494:	andeq	r4, r1, r7, lsl #8
   11498:	andeq	r4, r1, fp, lsl #8
   1149c:	ldr	r3, [pc, #4]	; 114a8 <putchar_unlocked@plt+0x5e4>
   114a0:	str	r0, [r3]
   114a4:	bx	lr
   114a8:	andeq	r5, r2, r0, asr r1
   114ac:	ldr	r3, [pc, #4]	; 114b8 <putchar_unlocked@plt+0x5f4>
   114b0:	strb	r0, [r3, #4]
   114b4:	bx	lr
   114b8:	andeq	r5, r2, r0, asr r1
   114bc:	ldr	r3, [pc, #192]	; 11584 <putchar_unlocked@plt+0x6c0>
   114c0:	push	{r0, r1, r4, r5, r6, lr}
   114c4:	ldr	r0, [r3]
   114c8:	bl	139b8 <putchar_unlocked@plt+0x2af4>
   114cc:	cmp	r0, #0
   114d0:	beq	11568 <putchar_unlocked@plt+0x6a4>
   114d4:	ldr	r3, [pc, #172]	; 11588 <putchar_unlocked@plt+0x6c4>
   114d8:	mov	r4, r3
   114dc:	ldrb	r2, [r3, #4]
   114e0:	cmp	r2, #0
   114e4:	beq	114f8 <putchar_unlocked@plt+0x634>
   114e8:	bl	10de0 <__errno_location@plt>
   114ec:	ldr	r3, [r0]
   114f0:	cmp	r3, #32
   114f4:	beq	11568 <putchar_unlocked@plt+0x6a4>
   114f8:	mov	r2, #5
   114fc:	ldr	r1, [pc, #136]	; 1158c <putchar_unlocked@plt+0x6c8>
   11500:	mov	r0, #0
   11504:	bl	10cf0 <dcgettext@plt>
   11508:	ldr	r4, [r4]
   1150c:	cmp	r4, #0
   11510:	mov	r5, r0
   11514:	beq	1154c <putchar_unlocked@plt+0x688>
   11518:	bl	10de0 <__errno_location@plt>
   1151c:	ldr	r6, [r0]
   11520:	mov	r0, r4
   11524:	bl	12c54 <putchar_unlocked@plt+0x1d90>
   11528:	str	r5, [sp]
   1152c:	ldr	r2, [pc, #92]	; 11590 <putchar_unlocked@plt+0x6cc>
   11530:	mov	r1, r6
   11534:	mov	r3, r0
   11538:	mov	r0, #0
   1153c:	bl	10d68 <error@plt>
   11540:	ldr	r3, [pc, #76]	; 11594 <putchar_unlocked@plt+0x6d0>
   11544:	ldr	r0, [r3]
   11548:	bl	10cb4 <_exit@plt>
   1154c:	bl	10de0 <__errno_location@plt>
   11550:	mov	r3, r5
   11554:	ldr	r2, [pc, #60]	; 11598 <putchar_unlocked@plt+0x6d4>
   11558:	ldr	r1, [r0]
   1155c:	mov	r0, r4
   11560:	bl	10d68 <error@plt>
   11564:	b	11540 <putchar_unlocked@plt+0x67c>
   11568:	ldr	r3, [pc, #44]	; 1159c <putchar_unlocked@plt+0x6d8>
   1156c:	ldr	r0, [r3]
   11570:	bl	139b8 <putchar_unlocked@plt+0x2af4>
   11574:	cmp	r0, #0
   11578:	bne	11540 <putchar_unlocked@plt+0x67c>
   1157c:	add	sp, sp, #8
   11580:	pop	{r4, r5, r6, pc}
   11584:	andeq	r5, r2, r4, asr #2
   11588:	andeq	r5, r2, r0, asr r1
   1158c:	andeq	r4, r1, r8, asr r5
   11590:	andeq	r4, r1, r4, ror #10
   11594:	andeq	r5, r2, ip, ror #1
   11598:	andeq	r4, r1, r8, ror #10
   1159c:	andeq	r5, r2, r0, asr #2
   115a0:	push	{r0, r1, r2, r4, r5, lr}
   115a4:	mov	r5, r0
   115a8:	bl	10de0 <__errno_location@plt>
   115ac:	ldr	r3, [r0]
   115b0:	mov	r4, r0
   115b4:	str	r3, [sp]
   115b8:	str	r3, [sp, #4]
   115bc:	mov	r3, #0
   115c0:	str	r3, [r0]
   115c4:	mov	r0, r5
   115c8:	bl	10ca8 <free@plt>
   115cc:	ldr	r3, [r4]
   115d0:	add	r2, sp, #8
   115d4:	cmp	r3, #0
   115d8:	moveq	r3, #4
   115dc:	movne	r3, #0
   115e0:	add	r3, r2, r3
   115e4:	ldr	r3, [r3, #-8]
   115e8:	str	r3, [r4]
   115ec:	add	sp, sp, #12
   115f0:	pop	{r4, r5, pc}
   115f4:	ldr	ip, [pc, #156]	; 11698 <putchar_unlocked@plt+0x7d4>
   115f8:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   115fc:	cmp	r0, #2
   11600:	mov	r6, #0
   11604:	ldr	r7, [ip]
   11608:	mov	r8, ip
   1160c:	str	r6, [ip]
   11610:	bne	11644 <putchar_unlocked@plt+0x780>
   11614:	mov	r5, r3
   11618:	mov	r4, r2
   1161c:	str	r6, [sp]
   11620:	ldr	r3, [pc, #116]	; 1169c <putchar_unlocked@plt+0x7d8>
   11624:	ldr	r2, [pc, #116]	; 116a0 <putchar_unlocked@plt+0x7dc>
   11628:	bl	10da4 <getopt_long@plt>
   1162c:	cmn	r0, #1
   11630:	beq	11644 <putchar_unlocked@plt+0x780>
   11634:	cmp	r0, #104	; 0x68
   11638:	beq	1165c <putchar_unlocked@plt+0x798>
   1163c:	cmp	r0, #118	; 0x76
   11640:	beq	1166c <putchar_unlocked@plt+0x7a8>
   11644:	ldr	r3, [pc, #88]	; 116a4 <putchar_unlocked@plt+0x7e0>
   11648:	mov	r2, #0
   1164c:	str	r7, [r8]
   11650:	str	r2, [r3]
   11654:	add	sp, sp, #16
   11658:	pop	{r4, r5, r6, r7, r8, pc}
   1165c:	mov	r0, r6
   11660:	ldr	r3, [sp, #44]	; 0x2c
   11664:	blx	r3
   11668:	b	11644 <putchar_unlocked@plt+0x780>
   1166c:	ldr	r0, [pc, #52]	; 116a8 <putchar_unlocked@plt+0x7e4>
   11670:	add	r3, sp, #48	; 0x30
   11674:	str	r3, [sp]
   11678:	str	r3, [sp, #12]
   1167c:	ldr	r0, [r0]
   11680:	ldr	r3, [sp, #40]	; 0x28
   11684:	mov	r2, r5
   11688:	mov	r1, r4
   1168c:	bl	132f4 <putchar_unlocked@plt+0x2430>
   11690:	mov	r0, r6
   11694:	bl	10dc8 <exit@plt>
   11698:	andeq	r5, r2, r8, asr #2
   1169c:	andeq	r4, r1, ip, ror #10
   116a0:	muleq	r1, ip, r5
   116a4:	andeq	r5, r2, r8, lsr r1
   116a8:	andeq	r5, r2, r4, asr #2
   116ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   116b0:	sub	sp, sp, #20
   116b4:	mov	r8, r3
   116b8:	ldrb	lr, [sp, #52]	; 0x34
   116bc:	ldr	r3, [pc, #152]	; 1175c <putchar_unlocked@plt+0x898>
   116c0:	mov	r4, #0
   116c4:	ldr	ip, [pc, #148]	; 11760 <putchar_unlocked@plt+0x89c>
   116c8:	cmp	lr, r4
   116cc:	mov	r7, r2
   116d0:	mov	r2, #1
   116d4:	ldr	r9, [r3]
   116d8:	mov	r5, r3
   116dc:	str	r2, [r3]
   116e0:	ldr	r2, [pc, #124]	; 11764 <putchar_unlocked@plt+0x8a0>
   116e4:	str	r4, [sp]
   116e8:	moveq	r2, ip
   116ec:	ldr	r3, [pc, #116]	; 11768 <putchar_unlocked@plt+0x8a4>
   116f0:	ldr	r6, [sp, #56]	; 0x38
   116f4:	bl	10da4 <getopt_long@plt>
   116f8:	cmn	r0, #1
   116fc:	beq	11724 <putchar_unlocked@plt+0x860>
   11700:	cmp	r0, #104	; 0x68
   11704:	beq	1171c <putchar_unlocked@plt+0x858>
   11708:	cmp	r0, #118	; 0x76
   1170c:	beq	11730 <putchar_unlocked@plt+0x86c>
   11710:	ldr	r3, [pc, #84]	; 1176c <putchar_unlocked@plt+0x8a8>
   11714:	ldr	r0, [r3]
   11718:	b	11720 <putchar_unlocked@plt+0x85c>
   1171c:	mov	r0, r4
   11720:	blx	r6
   11724:	str	r9, [r5]
   11728:	add	sp, sp, #20
   1172c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11730:	ldr	r0, [pc, #56]	; 11770 <putchar_unlocked@plt+0x8ac>
   11734:	add	r3, sp, #60	; 0x3c
   11738:	str	r3, [sp]
   1173c:	str	r3, [sp, #12]
   11740:	ldr	r0, [r0]
   11744:	ldr	r3, [sp, #48]	; 0x30
   11748:	mov	r2, r8
   1174c:	mov	r1, r7
   11750:	bl	132f4 <putchar_unlocked@plt+0x2430>
   11754:	mov	r0, r4
   11758:	bl	10dc8 <exit@plt>
   1175c:	andeq	r5, r2, r8, asr #2
   11760:	muleq	r1, ip, r5
   11764:	andeq	r4, r1, sl, lsr r3
   11768:	andeq	r4, r1, ip, ror #10
   1176c:	andeq	r5, r2, ip, ror #1
   11770:	andeq	r5, r2, r4, asr #2
   11774:	push	{r4, r5, r6, lr}
   11778:	subs	r5, r0, #0
   1177c:	bne	11794 <putchar_unlocked@plt+0x8d0>
   11780:	ldr	r3, [pc, #124]	; 11804 <putchar_unlocked@plt+0x940>
   11784:	ldr	r0, [pc, #124]	; 11808 <putchar_unlocked@plt+0x944>
   11788:	ldr	r1, [r3]
   1178c:	bl	10e94 <fputs@plt>
   11790:	bl	10eac <abort@plt>
   11794:	mov	r1, #47	; 0x2f
   11798:	bl	10e64 <strrchr@plt>
   1179c:	cmp	r0, #0
   117a0:	addne	r4, r0, #1
   117a4:	moveq	r4, r5
   117a8:	sub	r3, r4, r5
   117ac:	cmp	r3, #6
   117b0:	ble	117f0 <putchar_unlocked@plt+0x92c>
   117b4:	mov	r2, #7
   117b8:	ldr	r1, [pc, #76]	; 1180c <putchar_unlocked@plt+0x948>
   117bc:	sub	r0, r4, #7
   117c0:	bl	10ea0 <strncmp@plt>
   117c4:	cmp	r0, #0
   117c8:	bne	117f0 <putchar_unlocked@plt+0x92c>
   117cc:	mov	r2, #3
   117d0:	ldr	r1, [pc, #56]	; 11810 <putchar_unlocked@plt+0x94c>
   117d4:	mov	r0, r4
   117d8:	bl	10ea0 <strncmp@plt>
   117dc:	cmp	r0, #0
   117e0:	movne	r5, r4
   117e4:	ldreq	r3, [pc, #40]	; 11814 <putchar_unlocked@plt+0x950>
   117e8:	addeq	r5, r4, #3
   117ec:	streq	r5, [r3]
   117f0:	ldr	r3, [pc, #32]	; 11818 <putchar_unlocked@plt+0x954>
   117f4:	str	r5, [r3]
   117f8:	ldr	r3, [pc, #28]	; 1181c <putchar_unlocked@plt+0x958>
   117fc:	str	r5, [r3]
   11800:	pop	{r4, r5, r6, pc}
   11804:	andeq	r5, r2, r0, asr #2
   11808:	andeq	r4, r1, fp, lsr #11
   1180c:	andeq	r4, r1, r3, ror #11
   11810:	andeq	r4, r1, fp, ror #11
   11814:	andeq	r5, r2, r0, lsr r1
   11818:	andeq	r5, r2, r8, asr r1
   1181c:	andeq	r5, r2, r4, lsr r1
   11820:	push	{r4, r5, r6, lr}
   11824:	mov	r2, #48	; 0x30
   11828:	mov	r5, r1
   1182c:	mov	r1, #0
   11830:	mov	r4, r0
   11834:	bl	10df8 <memset@plt>
   11838:	cmp	r5, #10
   1183c:	bne	11844 <putchar_unlocked@plt+0x980>
   11840:	bl	10eac <abort@plt>
   11844:	str	r5, [r4]
   11848:	mov	r0, r4
   1184c:	pop	{r4, r5, r6, pc}
   11850:	push	{r4, r5, r6, lr}
   11854:	mov	r4, r0
   11858:	mov	r5, r1
   1185c:	bl	13bb4 <putchar_unlocked@plt+0x2cf0>
   11860:	ldrb	r3, [r0]
   11864:	bic	r3, r3, #32
   11868:	cmp	r3, #85	; 0x55
   1186c:	bne	118dc <putchar_unlocked@plt+0xa18>
   11870:	ldrb	r3, [r0, #1]
   11874:	bic	r3, r3, #32
   11878:	cmp	r3, #84	; 0x54
   1187c:	bne	118b4 <putchar_unlocked@plt+0x9f0>
   11880:	ldrb	r3, [r0, #2]
   11884:	bic	r3, r3, #32
   11888:	cmp	r3, #70	; 0x46
   1188c:	bne	118b4 <putchar_unlocked@plt+0x9f0>
   11890:	ldrb	r3, [r0, #3]
   11894:	cmp	r3, #45	; 0x2d
   11898:	bne	118b4 <putchar_unlocked@plt+0x9f0>
   1189c:	ldrb	r3, [r0, #4]
   118a0:	cmp	r3, #56	; 0x38
   118a4:	bne	118b4 <putchar_unlocked@plt+0x9f0>
   118a8:	ldrb	r3, [r0, #5]
   118ac:	cmp	r3, #0
   118b0:	beq	118c8 <putchar_unlocked@plt+0xa04>
   118b4:	ldr	r1, [pc, #144]	; 1194c <putchar_unlocked@plt+0xa88>
   118b8:	ldr	r0, [pc, #144]	; 11950 <putchar_unlocked@plt+0xa8c>
   118bc:	cmp	r5, #9
   118c0:	movne	r0, r1
   118c4:	pop	{r4, r5, r6, pc}
   118c8:	ldrb	r3, [r4]
   118cc:	ldr	r1, [pc, #128]	; 11954 <putchar_unlocked@plt+0xa90>
   118d0:	ldr	r0, [pc, #128]	; 11958 <putchar_unlocked@plt+0xa94>
   118d4:	cmp	r3, #96	; 0x60
   118d8:	b	118c0 <putchar_unlocked@plt+0x9fc>
   118dc:	cmp	r3, #71	; 0x47
   118e0:	bne	118b4 <putchar_unlocked@plt+0x9f0>
   118e4:	ldrb	r3, [r0, #1]
   118e8:	bic	r3, r3, #32
   118ec:	cmp	r3, #66	; 0x42
   118f0:	bne	118b4 <putchar_unlocked@plt+0x9f0>
   118f4:	ldrb	r3, [r0, #2]
   118f8:	cmp	r3, #49	; 0x31
   118fc:	bne	118b4 <putchar_unlocked@plt+0x9f0>
   11900:	ldrb	r3, [r0, #3]
   11904:	cmp	r3, #56	; 0x38
   11908:	bne	118b4 <putchar_unlocked@plt+0x9f0>
   1190c:	ldrb	r3, [r0, #4]
   11910:	cmp	r3, #48	; 0x30
   11914:	bne	118b4 <putchar_unlocked@plt+0x9f0>
   11918:	ldrb	r3, [r0, #5]
   1191c:	cmp	r3, #51	; 0x33
   11920:	bne	118b4 <putchar_unlocked@plt+0x9f0>
   11924:	ldrb	r3, [r0, #6]
   11928:	cmp	r3, #48	; 0x30
   1192c:	bne	118b4 <putchar_unlocked@plt+0x9f0>
   11930:	ldrb	r3, [r0, #7]
   11934:	cmp	r3, #0
   11938:	bne	118b4 <putchar_unlocked@plt+0x9f0>
   1193c:	ldrb	r3, [r4]
   11940:	ldr	r1, [pc, #20]	; 1195c <putchar_unlocked@plt+0xa98>
   11944:	ldr	r0, [pc, #20]	; 11960 <putchar_unlocked@plt+0xa9c>
   11948:	b	118d4 <putchar_unlocked@plt+0xa10>
   1194c:	andeq	r4, r1, r5, asr r6
   11950:	andeq	r4, r1, r3, asr r6
   11954:	andeq	r4, r1, r8, asr #12
   11958:	andeq	r4, r1, r4, asr #12
   1195c:	andeq	r4, r1, r0, asr r6
   11960:	andeq	r4, r1, ip, asr #12
   11964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11968:	sub	sp, sp, #108	; 0x6c
   1196c:	mov	r8, r0
   11970:	str	r3, [sp, #36]	; 0x24
   11974:	mov	r5, r1
   11978:	str	r2, [sp, #44]	; 0x2c
   1197c:	ldr	sl, [sp, #144]	; 0x90
   11980:	bl	10d38 <__ctype_get_mb_cur_max@plt>
   11984:	ldr	r3, [sp, #148]	; 0x94
   11988:	mov	r7, #0
   1198c:	str	r7, [sp, #48]	; 0x30
   11990:	lsr	r6, r3, #1
   11994:	and	r6, r6, #1
   11998:	mov	r3, #1
   1199c:	str	r3, [sp, #72]	; 0x48
   119a0:	str	r7, [sp, #24]
   119a4:	str	r7, [sp, #32]
   119a8:	str	r7, [sp, #40]	; 0x28
   119ac:	str	r7, [sp, #60]	; 0x3c
   119b0:	str	r0, [sp, #76]	; 0x4c
   119b4:	cmp	sl, #10
   119b8:	ldrls	pc, [pc, sl, lsl #2]
   119bc:	b	11bf8 <putchar_unlocked@plt+0xd34>
   119c0:	andeq	r1, r1, ip, ror #19
   119c4:	andeq	r2, r1, r0, lsl #13
   119c8:	andeq	r1, r1, r4, asr #23
   119cc:	andeq	r1, r1, r0, lsl ip
   119d0:	andeq	r1, r1, r0, lsr #23
   119d4:	strdeq	r1, [r1], -r8
   119d8:	andeq	r2, r1, r0, ror #12
   119dc:	strdeq	r1, [r1], -ip
   119e0:	strdeq	r1, [r1], -r0
   119e4:	strdeq	r1, [r1], -r0
   119e8:	strdeq	r1, [r1], -r0
   119ec:	mov	r6, #0
   119f0:	mov	r4, #0
   119f4:	b	11a24 <putchar_unlocked@plt+0xb60>
   119f8:	cmp	r6, #0
   119fc:	bne	11c20 <putchar_unlocked@plt+0xd5c>
   11a00:	cmp	r5, #0
   11a04:	movne	r3, #34	; 0x22
   11a08:	strbne	r3, [r8]
   11a0c:	mov	r3, #1
   11a10:	str	r3, [sp, #24]
   11a14:	str	r3, [sp, #32]
   11a18:	mov	r4, #1
   11a1c:	ldr	r3, [pc, #3172]	; 12688 <putchar_unlocked@plt+0x17c4>
   11a20:	str	r3, [sp, #40]	; 0x28
   11a24:	mov	r9, r5
   11a28:	mov	r3, #0
   11a2c:	str	r7, [sp, #68]	; 0x44
   11a30:	str	r3, [sp, #28]
   11a34:	ldr	r3, [sp, #36]	; 0x24
   11a38:	cmn	r3, #1
   11a3c:	bne	125cc <putchar_unlocked@plt+0x1708>
   11a40:	ldr	r3, [sp, #44]	; 0x2c
   11a44:	ldr	r2, [sp, #28]
   11a48:	ldrb	r3, [r3, r2]
   11a4c:	adds	r3, r3, #0
   11a50:	movne	r3, #1
   11a54:	str	r3, [sp, #52]	; 0x34
   11a58:	ldr	r3, [sp, #52]	; 0x34
   11a5c:	cmp	r3, #0
   11a60:	bne	11c48 <putchar_unlocked@plt+0xd84>
   11a64:	sub	r2, sl, #2
   11a68:	clz	r2, r2
   11a6c:	lsr	r2, r2, #5
   11a70:	and	r3, r6, r2
   11a74:	cmp	r4, #0
   11a78:	movne	r3, #0
   11a7c:	andeq	r3, r3, #1
   11a80:	cmp	r3, #0
   11a84:	bne	11e10 <putchar_unlocked@plt+0xf4c>
   11a88:	eor	r3, r6, #1
   11a8c:	ands	r2, r2, r3
   11a90:	beq	12604 <putchar_unlocked@plt+0x1740>
   11a94:	ldr	r3, [sp, #68]	; 0x44
   11a98:	cmp	r3, #0
   11a9c:	beq	1263c <putchar_unlocked@plt+0x1778>
   11aa0:	ldr	r3, [sp, #72]	; 0x48
   11aa4:	cmp	r3, #0
   11aa8:	beq	125e0 <putchar_unlocked@plt+0x171c>
   11aac:	ldr	r3, [sp, #160]	; 0xa0
   11ab0:	ldr	r2, [sp, #44]	; 0x2c
   11ab4:	str	r3, [sp, #16]
   11ab8:	ldr	r3, [sp, #156]	; 0x9c
   11abc:	ldr	r1, [sp, #60]	; 0x3c
   11ac0:	str	r3, [sp, #12]
   11ac4:	ldr	r3, [sp, #152]	; 0x98
   11ac8:	str	r3, [sp, #8]
   11acc:	ldr	r3, [sp, #148]	; 0x94
   11ad0:	str	r3, [sp, #4]
   11ad4:	mov	r3, #5
   11ad8:	str	r3, [sp]
   11adc:	ldr	r3, [sp, #36]	; 0x24
   11ae0:	mov	r0, r8
   11ae4:	bl	11964 <putchar_unlocked@plt+0xaa0>
   11ae8:	mov	r4, r0
   11aec:	b	12630 <putchar_unlocked@plt+0x176c>
   11af0:	cmp	sl, #10
   11af4:	beq	11b50 <putchar_unlocked@plt+0xc8c>
   11af8:	ldr	r4, [pc, #2956]	; 1268c <putchar_unlocked@plt+0x17c8>
   11afc:	mov	r2, #5
   11b00:	mov	r1, r4
   11b04:	mov	r0, #0
   11b08:	bl	10cf0 <dcgettext@plt>
   11b0c:	cmp	r0, r4
   11b10:	str	r0, [sp, #156]	; 0x9c
   11b14:	bne	11b24 <putchar_unlocked@plt+0xc60>
   11b18:	mov	r1, sl
   11b1c:	bl	11850 <putchar_unlocked@plt+0x98c>
   11b20:	str	r0, [sp, #156]	; 0x9c
   11b24:	ldr	r4, [pc, #2916]	; 12690 <putchar_unlocked@plt+0x17cc>
   11b28:	mov	r2, #5
   11b2c:	mov	r1, r4
   11b30:	mov	r0, #0
   11b34:	bl	10cf0 <dcgettext@plt>
   11b38:	cmp	r0, r4
   11b3c:	str	r0, [sp, #160]	; 0xa0
   11b40:	bne	11b50 <putchar_unlocked@plt+0xc8c>
   11b44:	mov	r1, sl
   11b48:	bl	11850 <putchar_unlocked@plt+0x98c>
   11b4c:	str	r0, [sp, #160]	; 0xa0
   11b50:	cmp	r6, #0
   11b54:	moveq	r4, r6
   11b58:	beq	11b70 <putchar_unlocked@plt+0xcac>
   11b5c:	mov	r4, #0
   11b60:	b	11b80 <putchar_unlocked@plt+0xcbc>
   11b64:	cmp	r5, r4
   11b68:	strbhi	r3, [r8, r4]
   11b6c:	add	r4, r4, #1
   11b70:	ldr	r3, [sp, #156]	; 0x9c
   11b74:	ldrb	r3, [r3, r4]
   11b78:	cmp	r3, #0
   11b7c:	bne	11b64 <putchar_unlocked@plt+0xca0>
   11b80:	ldr	r0, [sp, #160]	; 0xa0
   11b84:	bl	10dd4 <strlen@plt>
   11b88:	ldr	r3, [sp, #160]	; 0xa0
   11b8c:	str	r3, [sp, #40]	; 0x28
   11b90:	mov	r3, #1
   11b94:	str	r3, [sp, #24]
   11b98:	str	r0, [sp, #32]
   11b9c:	b	11a24 <putchar_unlocked@plt+0xb60>
   11ba0:	mov	r3, #1
   11ba4:	cmp	r6, #0
   11ba8:	streq	r3, [sp, #24]
   11bac:	beq	11bcc <putchar_unlocked@plt+0xd08>
   11bb0:	str	r3, [sp, #32]
   11bb4:	ldr	r3, [pc, #2772]	; 12690 <putchar_unlocked@plt+0x17cc>
   11bb8:	mov	r4, #0
   11bbc:	str	r3, [sp, #40]	; 0x28
   11bc0:	b	11bf0 <putchar_unlocked@plt+0xd2c>
   11bc4:	cmp	r6, #0
   11bc8:	bne	11c38 <putchar_unlocked@plt+0xd74>
   11bcc:	cmp	r5, #0
   11bd0:	movne	r3, #39	; 0x27
   11bd4:	strbne	r3, [r8]
   11bd8:	mov	r3, #1
   11bdc:	str	r3, [sp, #32]
   11be0:	mov	r6, #0
   11be4:	ldr	r3, [pc, #2724]	; 12690 <putchar_unlocked@plt+0x17cc>
   11be8:	mov	r4, #1
   11bec:	str	r3, [sp, #40]	; 0x28
   11bf0:	mov	sl, #2
   11bf4:	b	11a24 <putchar_unlocked@plt+0xb60>
   11bf8:	bl	10eac <abort@plt>
   11bfc:	mov	r6, #0
   11c00:	mov	r3, #1
   11c04:	str	r3, [sp, #24]
   11c08:	mov	r4, r6
   11c0c:	b	11a24 <putchar_unlocked@plt+0xb60>
   11c10:	mov	r6, #1
   11c14:	str	r6, [sp, #24]
   11c18:	str	r6, [sp, #32]
   11c1c:	b	11bb4 <putchar_unlocked@plt+0xcf0>
   11c20:	mov	r3, #1
   11c24:	str	r3, [sp, #32]
   11c28:	ldr	r3, [pc, #2648]	; 12688 <putchar_unlocked@plt+0x17c4>
   11c2c:	str	r6, [sp, #24]
   11c30:	str	r3, [sp, #40]	; 0x28
   11c34:	b	119f0 <putchar_unlocked@plt+0xb2c>
   11c38:	mov	r3, #1
   11c3c:	str	r3, [sp, #32]
   11c40:	ldr	r3, [pc, #2632]	; 12690 <putchar_unlocked@plt+0x17cc>
   11c44:	b	11c30 <putchar_unlocked@plt+0xd6c>
   11c48:	ldr	r3, [sp, #32]
   11c4c:	ldr	fp, [sp, #24]
   11c50:	cmp	sl, #2
   11c54:	moveq	fp, #0
   11c58:	andne	fp, fp, #1
   11c5c:	adds	r5, r3, #0
   11c60:	movne	r5, #1
   11c64:	ands	r3, r5, fp
   11c68:	str	r3, [sp, #64]	; 0x40
   11c6c:	beq	11d3c <putchar_unlocked@plt+0xe78>
   11c70:	ldr	r2, [sp, #32]
   11c74:	ldr	r3, [sp, #28]
   11c78:	add	r7, r3, r2
   11c7c:	mov	r3, r2
   11c80:	ldr	r2, [sp, #36]	; 0x24
   11c84:	cmp	r3, #1
   11c88:	movls	r3, #0
   11c8c:	movhi	r3, #1
   11c90:	cmn	r2, #1
   11c94:	movne	r3, #0
   11c98:	cmp	r3, #0
   11c9c:	beq	11cac <putchar_unlocked@plt+0xde8>
   11ca0:	ldr	r0, [sp, #44]	; 0x2c
   11ca4:	bl	10dd4 <strlen@plt>
   11ca8:	str	r0, [sp, #36]	; 0x24
   11cac:	ldr	r3, [sp, #36]	; 0x24
   11cb0:	cmp	r3, r7
   11cb4:	bcc	11d34 <putchar_unlocked@plt+0xe70>
   11cb8:	ldr	r3, [sp, #44]	; 0x2c
   11cbc:	ldr	r0, [sp, #28]
   11cc0:	ldr	r2, [sp, #32]
   11cc4:	ldr	r1, [sp, #40]	; 0x28
   11cc8:	add	r0, r3, r0
   11ccc:	bl	10cd8 <memcmp@plt>
   11cd0:	cmp	r0, #0
   11cd4:	bne	11d34 <putchar_unlocked@plt+0xe70>
   11cd8:	cmp	r6, #0
   11cdc:	beq	11d3c <putchar_unlocked@plt+0xe78>
   11ce0:	str	r6, [sp, #24]
   11ce4:	ldr	r3, [sp, #24]
   11ce8:	ldr	r2, [sp, #44]	; 0x2c
   11cec:	cmp	sl, #2
   11cf0:	movne	r3, #0
   11cf4:	andeq	r3, r3, #1
   11cf8:	cmp	r3, #0
   11cfc:	ldr	r3, [sp, #160]	; 0xa0
   11d00:	movne	sl, #4
   11d04:	str	r3, [sp, #16]
   11d08:	ldr	r3, [sp, #156]	; 0x9c
   11d0c:	str	sl, [sp]
   11d10:	str	r3, [sp, #12]
   11d14:	mov	r3, #0
   11d18:	str	r3, [sp, #8]
   11d1c:	ldr	r3, [sp, #148]	; 0x94
   11d20:	mov	r1, r9
   11d24:	bic	r3, r3, #2
   11d28:	str	r3, [sp, #4]
   11d2c:	ldr	r3, [sp, #36]	; 0x24
   11d30:	b	11ae0 <putchar_unlocked@plt+0xc1c>
   11d34:	mov	r3, #0
   11d38:	str	r3, [sp, #64]	; 0x40
   11d3c:	ldr	r2, [sp, #28]
   11d40:	ldr	r3, [sp, #44]	; 0x2c
   11d44:	add	r3, r3, r2
   11d48:	str	r3, [sp, #80]	; 0x50
   11d4c:	ldr	r3, [sp, #44]	; 0x2c
   11d50:	ldrb	r7, [r3, r2]
   11d54:	cmp	r7, #58	; 0x3a
   11d58:	bhi	11ec0 <putchar_unlocked@plt+0xffc>
   11d5c:	cmp	r7, #43	; 0x2b
   11d60:	bcs	11f14 <putchar_unlocked@plt+0x1050>
   11d64:	cmp	r7, #32
   11d68:	beq	11f6c <putchar_unlocked@plt+0x10a8>
   11d6c:	bhi	11e18 <putchar_unlocked@plt+0xf54>
   11d70:	cmp	r7, #9
   11d74:	beq	12220 <putchar_unlocked@plt+0x135c>
   11d78:	bhi	11ddc <putchar_unlocked@plt+0xf18>
   11d7c:	cmp	r7, #7
   11d80:	beq	122cc <putchar_unlocked@plt+0x1408>
   11d84:	bhi	11f88 <putchar_unlocked@plt+0x10c4>
   11d88:	cmp	r7, #0
   11d8c:	beq	11fa4 <putchar_unlocked@plt+0x10e0>
   11d90:	ldr	r3, [sp, #76]	; 0x4c
   11d94:	cmp	r3, #1
   11d98:	bne	12310 <putchar_unlocked@plt+0x144c>
   11d9c:	bl	10dbc <__ctype_b_loc@plt>
   11da0:	sxth	r3, r7
   11da4:	lsl	r3, r3, #1
   11da8:	ldr	r2, [r0]
   11dac:	ldrh	r5, [r2, r3]
   11db0:	ldr	r3, [sp, #76]	; 0x4c
   11db4:	str	r3, [sp, #56]	; 0x38
   11db8:	lsr	r5, r5, #14
   11dbc:	and	r5, r5, #1
   11dc0:	ldr	r3, [sp, #24]
   11dc4:	eor	fp, r5, #1
   11dc8:	and	fp, fp, r3
   11dcc:	ands	fp, fp, #255	; 0xff
   11dd0:	beq	12158 <putchar_unlocked@plt+0x1294>
   11dd4:	mov	r5, #0
   11dd8:	b	123bc <putchar_unlocked@plt+0x14f8>
   11ddc:	cmp	r7, #11
   11de0:	beq	12228 <putchar_unlocked@plt+0x1364>
   11de4:	bcc	122c4 <putchar_unlocked@plt+0x1400>
   11de8:	cmp	r7, #12
   11dec:	beq	122d4 <putchar_unlocked@plt+0x1410>
   11df0:	cmp	r7, #13
   11df4:	moveq	r3, #114	; 0x72
   11df8:	bne	11d90 <putchar_unlocked@plt+0xecc>
   11dfc:	cmp	sl, #2
   11e00:	movne	r2, #0
   11e04:	andeq	r2, r6, #1
   11e08:	cmp	r2, #0
   11e0c:	beq	11f8c <putchar_unlocked@plt+0x10c8>
   11e10:	mov	sl, #2
   11e14:	b	11ce4 <putchar_unlocked@plt+0xe20>
   11e18:	cmp	r7, #37	; 0x25
   11e1c:	beq	11f14 <putchar_unlocked@plt+0x1050>
   11e20:	bhi	11e34 <putchar_unlocked@plt+0xf70>
   11e24:	cmp	r7, #35	; 0x23
   11e28:	beq	11f60 <putchar_unlocked@plt+0x109c>
   11e2c:	mov	r5, #0
   11e30:	b	11f70 <putchar_unlocked@plt+0x10ac>
   11e34:	cmp	r7, #39	; 0x27
   11e38:	bne	11e2c <putchar_unlocked@plt+0xf68>
   11e3c:	cmp	sl, #2
   11e40:	ldrne	r5, [sp, #52]	; 0x34
   11e44:	movne	r3, r5
   11e48:	strne	r3, [sp, #68]	; 0x44
   11e4c:	bne	11f18 <putchar_unlocked@plt+0x1054>
   11e50:	cmp	r6, #0
   11e54:	bne	11ce4 <putchar_unlocked@plt+0xe20>
   11e58:	ldr	r2, [sp, #60]	; 0x3c
   11e5c:	adds	r3, r9, #0
   11e60:	movne	r3, #1
   11e64:	cmp	r2, #0
   11e68:	movne	r3, #0
   11e6c:	cmp	r3, #0
   11e70:	strne	r9, [sp, #60]	; 0x3c
   11e74:	movne	r9, #0
   11e78:	bne	11e88 <putchar_unlocked@plt+0xfc4>
   11e7c:	cmp	r9, r4
   11e80:	movhi	r3, #39	; 0x27
   11e84:	strbhi	r3, [r8, r4]
   11e88:	add	r3, r4, #1
   11e8c:	cmp	r3, r9
   11e90:	movcc	r2, #92	; 0x5c
   11e94:	strbcc	r2, [r8, r3]
   11e98:	add	r3, r4, #2
   11e9c:	cmp	r3, r9
   11ea0:	ldr	r5, [sp, #52]	; 0x34
   11ea4:	movcc	r2, #39	; 0x27
   11ea8:	strbcc	r2, [r8, r3]
   11eac:	add	r4, r4, #3
   11eb0:	mov	fp, r6
   11eb4:	str	r5, [sp, #68]	; 0x44
   11eb8:	str	r6, [sp, #48]	; 0x30
   11ebc:	b	12158 <putchar_unlocked@plt+0x1294>
   11ec0:	cmp	r7, #94	; 0x5e
   11ec4:	beq	11e2c <putchar_unlocked@plt+0xf68>
   11ec8:	bhi	11f20 <putchar_unlocked@plt+0x105c>
   11ecc:	cmp	r7, #90	; 0x5a
   11ed0:	bhi	11f08 <putchar_unlocked@plt+0x1044>
   11ed4:	cmp	r7, #65	; 0x41
   11ed8:	bcs	11f14 <putchar_unlocked@plt+0x1050>
   11edc:	cmp	r7, #62	; 0x3e
   11ee0:	bls	11e2c <putchar_unlocked@plt+0xf68>
   11ee4:	cmp	r7, #63	; 0x3f
   11ee8:	bne	11d90 <putchar_unlocked@plt+0xecc>
   11eec:	cmp	sl, #2
   11ef0:	beq	12094 <putchar_unlocked@plt+0x11d0>
   11ef4:	cmp	sl, #5
   11ef8:	beq	120a4 <putchar_unlocked@plt+0x11e0>
   11efc:	mov	fp, #0
   11f00:	mov	r5, fp
   11f04:	b	12158 <putchar_unlocked@plt+0x1294>
   11f08:	cmp	r7, #92	; 0x5c
   11f0c:	beq	12230 <putchar_unlocked@plt+0x136c>
   11f10:	bls	11e2c <putchar_unlocked@plt+0xf68>
   11f14:	ldr	r5, [sp, #52]	; 0x34
   11f18:	mov	fp, #0
   11f1c:	b	12158 <putchar_unlocked@plt+0x1294>
   11f20:	cmp	r7, #122	; 0x7a
   11f24:	bhi	11f44 <putchar_unlocked@plt+0x1080>
   11f28:	cmp	r7, #97	; 0x61
   11f2c:	bcs	11f14 <putchar_unlocked@plt+0x1050>
   11f30:	cmp	r7, #95	; 0x5f
   11f34:	beq	11f14 <putchar_unlocked@plt+0x1050>
   11f38:	cmp	r7, #96	; 0x60
   11f3c:	bne	11d90 <putchar_unlocked@plt+0xecc>
   11f40:	b	11e2c <putchar_unlocked@plt+0xf68>
   11f44:	cmp	r7, #124	; 0x7c
   11f48:	beq	11e2c <putchar_unlocked@plt+0xf68>
   11f4c:	bcc	122dc <putchar_unlocked@plt+0x1418>
   11f50:	cmp	r7, #125	; 0x7d
   11f54:	beq	122dc <putchar_unlocked@plt+0x1418>
   11f58:	cmp	r7, #126	; 0x7e
   11f5c:	bne	11d90 <putchar_unlocked@plt+0xecc>
   11f60:	ldr	r3, [sp, #28]
   11f64:	cmp	r3, #0
   11f68:	bne	1209c <putchar_unlocked@plt+0x11d8>
   11f6c:	ldr	r5, [sp, #52]	; 0x34
   11f70:	cmp	sl, #2
   11f74:	movne	fp, #0
   11f78:	andeq	fp, r6, #1
   11f7c:	cmp	fp, #0
   11f80:	beq	12158 <putchar_unlocked@plt+0x1294>
   11f84:	b	11e10 <putchar_unlocked@plt+0xf4c>
   11f88:	mov	r3, #98	; 0x62
   11f8c:	ldr	r2, [sp, #24]
   11f90:	cmp	r2, #0
   11f94:	beq	1209c <putchar_unlocked@plt+0x11d8>
   11f98:	mov	r7, r3
   11f9c:	mov	r5, #0
   11fa0:	b	121b0 <putchar_unlocked@plt+0x12ec>
   11fa4:	ldr	r3, [sp, #24]
   11fa8:	cmp	r3, #0
   11fac:	beq	12078 <putchar_unlocked@plt+0x11b4>
   11fb0:	cmp	r6, #0
   11fb4:	bne	11ce0 <putchar_unlocked@plt+0xe1c>
   11fb8:	ldr	r3, [sp, #48]	; 0x30
   11fbc:	eor	r2, r3, #1
   11fc0:	cmp	sl, #2
   11fc4:	movne	r2, #0
   11fc8:	andeq	r2, r2, #1
   11fcc:	cmp	r2, #0
   11fd0:	moveq	r3, r4
   11fd4:	beq	1200c <putchar_unlocked@plt+0x1148>
   11fd8:	cmp	r9, r4
   11fdc:	movhi	r3, #39	; 0x27
   11fe0:	strbhi	r3, [r8, r4]
   11fe4:	add	r3, r4, #1
   11fe8:	cmp	r9, r3
   11fec:	movhi	r1, #36	; 0x24
   11ff0:	strbhi	r1, [r8, r3]
   11ff4:	add	r3, r4, #2
   11ff8:	cmp	r9, r3
   11ffc:	movhi	r1, #39	; 0x27
   12000:	strbhi	r1, [r8, r3]
   12004:	add	r3, r4, #3
   12008:	str	r2, [sp, #48]	; 0x30
   1200c:	cmp	r9, r3
   12010:	movhi	r2, #92	; 0x5c
   12014:	strbhi	r2, [r8, r3]
   12018:	cmp	fp, #0
   1201c:	add	r4, r3, #1
   12020:	beq	125b0 <putchar_unlocked@plt+0x16ec>
   12024:	ldr	r2, [sp, #28]
   12028:	ldr	r1, [sp, #36]	; 0x24
   1202c:	add	r2, r2, #1
   12030:	cmp	r1, r2
   12034:	bls	12070 <putchar_unlocked@plt+0x11ac>
   12038:	ldr	r1, [sp, #44]	; 0x2c
   1203c:	mov	r7, #48	; 0x30
   12040:	ldrb	r2, [r1, r2]
   12044:	sub	r2, r2, #48	; 0x30
   12048:	cmp	r2, #9
   1204c:	movhi	r5, r6
   12050:	bhi	12158 <putchar_unlocked@plt+0x1294>
   12054:	cmp	r9, r4
   12058:	add	r2, r3, #2
   1205c:	strbhi	r7, [r8, r4]
   12060:	cmp	r9, r2
   12064:	add	r4, r3, #3
   12068:	movhi	r1, #48	; 0x30
   1206c:	strbhi	r1, [r8, r2]
   12070:	mov	r5, r6
   12074:	b	125b8 <putchar_unlocked@plt+0x16f4>
   12078:	ldr	r3, [sp, #148]	; 0x94
   1207c:	tst	r3, #1
   12080:	ldreq	r5, [sp, #24]
   12084:	beq	125c4 <putchar_unlocked@plt+0x1700>
   12088:	ldr	r3, [sp, #28]
   1208c:	add	r3, r3, #1
   12090:	b	11a30 <putchar_unlocked@plt+0xb6c>
   12094:	cmp	r6, #0
   12098:	bne	11ce4 <putchar_unlocked@plt+0xe20>
   1209c:	mov	r5, #0
   120a0:	b	11f18 <putchar_unlocked@plt+0x1054>
   120a4:	ldr	r3, [sp, #148]	; 0x94
   120a8:	tst	r3, #4
   120ac:	beq	1209c <putchar_unlocked@plt+0x11d8>
   120b0:	ldr	r3, [sp, #28]
   120b4:	add	r2, r3, #2
   120b8:	ldr	r3, [sp, #36]	; 0x24
   120bc:	cmp	r3, r2
   120c0:	bls	1209c <putchar_unlocked@plt+0x11d8>
   120c4:	ldr	r3, [sp, #44]	; 0x2c
   120c8:	ldr	r1, [sp, #28]
   120cc:	add	r3, r3, r1
   120d0:	ldrb	r0, [r3, #1]
   120d4:	cmp	r0, #63	; 0x3f
   120d8:	bne	1209c <putchar_unlocked@plt+0x11d8>
   120dc:	ldr	r3, [sp, #44]	; 0x2c
   120e0:	ldrb	r1, [r3, r2]
   120e4:	sub	r3, r1, #33	; 0x21
   120e8:	uxtb	r3, r3
   120ec:	cmp	r3, #29
   120f0:	bhi	125c0 <putchar_unlocked@plt+0x16fc>
   120f4:	mov	ip, #1
   120f8:	ldr	r5, [pc, #1428]	; 12694 <putchar_unlocked@plt+0x17d0>
   120fc:	ands	r5, r5, ip, lsl r3
   12100:	beq	11f18 <putchar_unlocked@plt+0x1054>
   12104:	cmp	r6, #0
   12108:	bne	11ce4 <putchar_unlocked@plt+0xe20>
   1210c:	add	r3, r4, #1
   12110:	cmp	r9, r4
   12114:	strbhi	r0, [r8, r4]
   12118:	cmp	r9, r3
   1211c:	movhi	r0, #34	; 0x22
   12120:	strbhi	r0, [r8, r3]
   12124:	add	r3, r4, #2
   12128:	cmp	r9, r3
   1212c:	movhi	r0, #34	; 0x22
   12130:	strbhi	r0, [r8, r3]
   12134:	add	r3, r4, #3
   12138:	cmp	r9, r3
   1213c:	add	r4, r4, #4
   12140:	mov	r5, r6
   12144:	mov	fp, r6
   12148:	mov	r7, r1
   1214c:	movhi	r0, #63	; 0x3f
   12150:	strbhi	r0, [r8, r3]
   12154:	str	r2, [sp, #28]
   12158:	ldr	r3, [sp, #24]
   1215c:	eor	r3, r3, #1
   12160:	cmp	sl, #2
   12164:	orreq	r3, r3, #1
   12168:	eor	r3, r3, #1
   1216c:	orr	r3, r6, r3
   12170:	tst	r3, #255	; 0xff
   12174:	beq	121a4 <putchar_unlocked@plt+0x12e0>
   12178:	ldr	r3, [sp, #152]	; 0x98
   1217c:	cmp	r3, #0
   12180:	beq	121a4 <putchar_unlocked@plt+0x12e0>
   12184:	lsr	r2, r7, #5
   12188:	ldr	r1, [sp, #152]	; 0x98
   1218c:	uxtb	r2, r2
   12190:	and	r3, r7, #31
   12194:	ldr	r2, [r1, r2, lsl #2]
   12198:	lsr	r3, r2, r3
   1219c:	tst	r3, #1
   121a0:	bne	121b0 <putchar_unlocked@plt+0x12ec>
   121a4:	ldr	r3, [sp, #64]	; 0x40
   121a8:	cmp	r3, #0
   121ac:	beq	12248 <putchar_unlocked@plt+0x1384>
   121b0:	cmp	r6, #0
   121b4:	bne	11ce4 <putchar_unlocked@plt+0xe20>
   121b8:	ldr	r3, [sp, #48]	; 0x30
   121bc:	eor	r3, r3, #1
   121c0:	cmp	sl, #2
   121c4:	movne	r3, #0
   121c8:	andeq	r3, r3, #1
   121cc:	cmp	r3, #0
   121d0:	beq	12208 <putchar_unlocked@plt+0x1344>
   121d4:	cmp	r9, r4
   121d8:	movhi	r2, #39	; 0x27
   121dc:	strbhi	r2, [r8, r4]
   121e0:	add	r2, r4, #1
   121e4:	cmp	r9, r2
   121e8:	movhi	r1, #36	; 0x24
   121ec:	strbhi	r1, [r8, r2]
   121f0:	add	r2, r4, #2
   121f4:	cmp	r9, r2
   121f8:	add	r4, r4, #3
   121fc:	movhi	r1, #39	; 0x27
   12200:	strbhi	r1, [r8, r2]
   12204:	str	r3, [sp, #48]	; 0x30
   12208:	cmp	r9, r4
   1220c:	movhi	r3, #92	; 0x5c
   12210:	strbhi	r3, [r8, r4]
   12214:	ldr	fp, [sp, #52]	; 0x34
   12218:	add	r4, r4, #1
   1221c:	b	12248 <putchar_unlocked@plt+0x1384>
   12220:	mov	r3, #116	; 0x74
   12224:	b	11dfc <putchar_unlocked@plt+0xf38>
   12228:	mov	r3, #118	; 0x76
   1222c:	b	11f8c <putchar_unlocked@plt+0x10c8>
   12230:	cmp	sl, #2
   12234:	bne	122a4 <putchar_unlocked@plt+0x13e0>
   12238:	cmp	r6, #0
   1223c:	bne	11ce4 <putchar_unlocked@plt+0xe20>
   12240:	mov	r5, r6
   12244:	mov	fp, r6
   12248:	ldr	r3, [sp, #48]	; 0x30
   1224c:	eor	fp, fp, #1
   12250:	and	fp, fp, r3
   12254:	tst	fp, #255	; 0xff
   12258:	beq	12284 <putchar_unlocked@plt+0x13c0>
   1225c:	cmp	r9, r4
   12260:	movhi	r3, #39	; 0x27
   12264:	strbhi	r3, [r8, r4]
   12268:	add	r3, r4, #1
   1226c:	cmp	r9, r3
   12270:	movhi	r2, #39	; 0x27
   12274:	add	r4, r4, #2
   12278:	strbhi	r2, [r8, r3]
   1227c:	mov	r3, #0
   12280:	str	r3, [sp, #48]	; 0x30
   12284:	cmp	r9, r4
   12288:	strbhi	r7, [r8, r4]
   1228c:	ldr	r3, [sp, #72]	; 0x48
   12290:	cmp	r5, #0
   12294:	moveq	r3, #0
   12298:	add	r4, r4, #1
   1229c:	str	r3, [sp, #72]	; 0x48
   122a0:	b	12088 <putchar_unlocked@plt+0x11c4>
   122a4:	ldr	r3, [sp, #24]
   122a8:	and	r3, r3, r6
   122ac:	tst	r5, r3
   122b0:	moveq	r3, r7
   122b4:	beq	11dfc <putchar_unlocked@plt+0xf38>
   122b8:	mov	fp, #0
   122bc:	mov	r5, fp
   122c0:	b	12248 <putchar_unlocked@plt+0x1384>
   122c4:	mov	r3, #110	; 0x6e
   122c8:	b	11dfc <putchar_unlocked@plt+0xf38>
   122cc:	mov	r3, #97	; 0x61
   122d0:	b	11f8c <putchar_unlocked@plt+0x10c8>
   122d4:	mov	r3, #102	; 0x66
   122d8:	b	11f8c <putchar_unlocked@plt+0x10c8>
   122dc:	ldr	r3, [sp, #36]	; 0x24
   122e0:	cmn	r3, #1
   122e4:	bne	12304 <putchar_unlocked@plt+0x1440>
   122e8:	ldr	r3, [sp, #44]	; 0x2c
   122ec:	ldrb	r3, [r3, #1]
   122f0:	adds	r3, r3, #0
   122f4:	movne	r3, #1
   122f8:	cmp	r3, #0
   122fc:	bne	1209c <putchar_unlocked@plt+0x11d8>
   12300:	b	11f60 <putchar_unlocked@plt+0x109c>
   12304:	ldr	r3, [sp, #36]	; 0x24
   12308:	subs	r3, r3, #1
   1230c:	b	122f4 <putchar_unlocked@plt+0x1430>
   12310:	mov	r3, #0
   12314:	str	r3, [sp, #96]	; 0x60
   12318:	str	r3, [sp, #100]	; 0x64
   1231c:	ldr	r3, [sp, #36]	; 0x24
   12320:	cmn	r3, #1
   12324:	bne	12334 <putchar_unlocked@plt+0x1470>
   12328:	ldr	r0, [sp, #44]	; 0x2c
   1232c:	bl	10dd4 <strlen@plt>
   12330:	str	r0, [sp, #36]	; 0x24
   12334:	ldr	r5, [sp, #52]	; 0x34
   12338:	mov	r3, #0
   1233c:	str	r3, [sp, #56]	; 0x38
   12340:	ldr	r3, [sp, #28]
   12344:	ldr	r2, [sp, #56]	; 0x38
   12348:	ldr	r1, [sp, #36]	; 0x24
   1234c:	add	r2, r3, r2
   12350:	ldr	r3, [sp, #44]	; 0x2c
   12354:	add	r0, sp, #92	; 0x5c
   12358:	add	fp, r3, r2
   1235c:	sub	r2, r1, r2
   12360:	add	r3, sp, #96	; 0x60
   12364:	mov	r1, fp
   12368:	bl	13be8 <putchar_unlocked@plt+0x2d24>
   1236c:	subs	r2, r0, #0
   12370:	beq	123b0 <putchar_unlocked@plt+0x14ec>
   12374:	cmn	r2, #1
   12378:	beq	12588 <putchar_unlocked@plt+0x16c4>
   1237c:	cmn	r2, #2
   12380:	bne	124f8 <putchar_unlocked@plt+0x1634>
   12384:	ldr	r2, [sp, #56]	; 0x38
   12388:	ldr	r3, [sp, #28]
   1238c:	add	r3, r3, r2
   12390:	ldr	r2, [sp, #36]	; 0x24
   12394:	cmp	r2, r3
   12398:	bls	12588 <putchar_unlocked@plt+0x16c4>
   1239c:	ldr	r3, [sp, #80]	; 0x50
   123a0:	ldr	r2, [sp, #56]	; 0x38
   123a4:	ldrb	r5, [r3, r2]
   123a8:	cmp	r5, #0
   123ac:	bne	124e8 <putchar_unlocked@plt+0x1624>
   123b0:	ldr	r3, [sp, #56]	; 0x38
   123b4:	cmp	r3, #1
   123b8:	bls	11dc0 <putchar_unlocked@plt+0xefc>
   123bc:	ldr	r2, [sp, #56]	; 0x38
   123c0:	ldr	r3, [sp, #28]
   123c4:	mov	fp, #0
   123c8:	add	r3, r3, r2
   123cc:	ldr	r2, [sp, #24]
   123d0:	str	r3, [sp, #52]	; 0x34
   123d4:	eor	r3, r5, #1
   123d8:	and	r3, r3, r2
   123dc:	mov	ip, #92	; 0x5c
   123e0:	uxtb	r3, r3
   123e4:	mov	r2, #39	; 0x27
   123e8:	cmp	r3, #0
   123ec:	beq	12590 <putchar_unlocked@plt+0x16cc>
   123f0:	cmp	r6, #0
   123f4:	bne	11ce0 <putchar_unlocked@plt+0xe1c>
   123f8:	ldr	r1, [sp, #48]	; 0x30
   123fc:	eor	r1, r1, #1
   12400:	cmp	sl, #2
   12404:	movne	r1, #0
   12408:	andeq	r1, r1, #1
   1240c:	cmp	r1, #0
   12410:	beq	12440 <putchar_unlocked@plt+0x157c>
   12414:	add	r0, r4, #1
   12418:	cmp	r9, r4
   1241c:	strbhi	r2, [r8, r4]
   12420:	cmp	r9, r0
   12424:	movhi	lr, #36	; 0x24
   12428:	strbhi	lr, [r8, r0]
   1242c:	add	r0, r4, #2
   12430:	add	r4, r4, #3
   12434:	cmp	r9, r0
   12438:	strbhi	r2, [r8, r0]
   1243c:	str	r1, [sp, #48]	; 0x30
   12440:	add	r0, r4, #1
   12444:	cmp	r9, r4
   12448:	strbhi	ip, [r8, r4]
   1244c:	cmp	r9, r0
   12450:	lsrhi	r1, r7, #6
   12454:	addhi	r1, r1, #48	; 0x30
   12458:	strbhi	r1, [r8, r0]
   1245c:	add	r0, r4, #2
   12460:	cmp	r9, r0
   12464:	lsrhi	r1, r7, #3
   12468:	and	r7, r7, #7
   1246c:	andhi	r1, r1, #7
   12470:	add	r4, r4, #3
   12474:	add	r7, r7, #48	; 0x30
   12478:	mov	fp, r3
   1247c:	addhi	r1, r1, #48	; 0x30
   12480:	strbhi	r1, [r8, r0]
   12484:	ldr	r1, [sp, #28]
   12488:	ldr	r0, [sp, #52]	; 0x34
   1248c:	add	r1, r1, #1
   12490:	cmp	r0, r1
   12494:	bls	12248 <putchar_unlocked@plt+0x1384>
   12498:	ldr	lr, [sp, #48]	; 0x30
   1249c:	eor	r0, fp, #1
   124a0:	and	r0, r0, lr
   124a4:	tst	r0, #255	; 0xff
   124a8:	beq	124cc <putchar_unlocked@plt+0x1608>
   124ac:	add	r0, r4, #1
   124b0:	cmp	r9, r4
   124b4:	strbhi	r2, [r8, r4]
   124b8:	cmp	r9, r0
   124bc:	add	r4, r4, #2
   124c0:	strbhi	r2, [r8, r0]
   124c4:	mov	r0, #0
   124c8:	str	r0, [sp, #48]	; 0x30
   124cc:	ldr	r0, [sp, #44]	; 0x2c
   124d0:	cmp	r9, r4
   124d4:	strbhi	r7, [r8, r4]
   124d8:	str	r1, [sp, #28]
   124dc:	add	r4, r4, #1
   124e0:	ldrb	r7, [r0, r1]
   124e4:	b	123e8 <putchar_unlocked@plt+0x1524>
   124e8:	ldr	r3, [sp, #56]	; 0x38
   124ec:	add	r3, r3, #1
   124f0:	str	r3, [sp, #56]	; 0x38
   124f4:	b	12384 <putchar_unlocked@plt+0x14c0>
   124f8:	cmp	sl, #2
   124fc:	movne	r3, #0
   12500:	andeq	r3, r6, #1
   12504:	cmp	r3, #0
   12508:	movne	r1, #1
   1250c:	bne	12568 <putchar_unlocked@plt+0x16a4>
   12510:	ldr	r0, [sp, #92]	; 0x5c
   12514:	str	r2, [sp, #84]	; 0x54
   12518:	bl	10d20 <iswprint@plt>
   1251c:	ldr	r3, [sp, #56]	; 0x38
   12520:	ldr	r2, [sp, #84]	; 0x54
   12524:	add	r3, r3, r2
   12528:	str	r3, [sp, #56]	; 0x38
   1252c:	cmp	r0, #0
   12530:	add	r0, sp, #96	; 0x60
   12534:	moveq	r5, #0
   12538:	bl	10ccc <mbsinit@plt>
   1253c:	cmp	r0, #0
   12540:	beq	12340 <putchar_unlocked@plt+0x147c>
   12544:	b	123b0 <putchar_unlocked@plt+0x14ec>
   12548:	ldrb	r3, [fp, r1]
   1254c:	cmp	r3, #94	; 0x5e
   12550:	beq	11e10 <putchar_unlocked@plt+0xf4c>
   12554:	bhi	12574 <putchar_unlocked@plt+0x16b0>
   12558:	sub	r3, r3, #91	; 0x5b
   1255c:	cmp	r3, #1
   12560:	bls	11e10 <putchar_unlocked@plt+0xf4c>
   12564:	add	r1, r1, #1
   12568:	cmp	r1, r2
   1256c:	bne	12548 <putchar_unlocked@plt+0x1684>
   12570:	b	12510 <putchar_unlocked@plt+0x164c>
   12574:	cmp	r3, #96	; 0x60
   12578:	beq	11e10 <putchar_unlocked@plt+0xf4c>
   1257c:	cmp	r3, #124	; 0x7c
   12580:	bne	12564 <putchar_unlocked@plt+0x16a0>
   12584:	b	11e10 <putchar_unlocked@plt+0xf4c>
   12588:	mov	r5, #0
   1258c:	b	123b0 <putchar_unlocked@plt+0x14ec>
   12590:	ldr	r1, [sp, #64]	; 0x40
   12594:	cmp	r1, #0
   12598:	beq	12484 <putchar_unlocked@plt+0x15c0>
   1259c:	cmp	r9, r4
   125a0:	strbhi	ip, [r8, r4]
   125a4:	str	r3, [sp, #64]	; 0x40
   125a8:	add	r4, r4, #1
   125ac:	b	12484 <putchar_unlocked@plt+0x15c0>
   125b0:	mov	r5, fp
   125b4:	ldr	fp, [sp, #24]
   125b8:	mov	r7, #48	; 0x30
   125bc:	b	12158 <putchar_unlocked@plt+0x1294>
   125c0:	mov	r5, #0
   125c4:	mov	fp, r5
   125c8:	b	12158 <putchar_unlocked@plt+0x1294>
   125cc:	ldr	r3, [sp, #36]	; 0x24
   125d0:	ldr	r2, [sp, #28]
   125d4:	subs	r3, r3, r2
   125d8:	movne	r3, #1
   125dc:	b	11a54 <putchar_unlocked@plt+0xb90>
   125e0:	ldr	r3, [sp, #60]	; 0x3c
   125e4:	clz	r7, r9
   125e8:	cmp	r3, #0
   125ec:	lsr	r7, r7, #5
   125f0:	moveq	r7, #0
   125f4:	cmp	r7, #0
   125f8:	mov	r5, r3
   125fc:	bne	119b4 <putchar_unlocked@plt+0xaf0>
   12600:	ldr	r3, [sp, #68]	; 0x44
   12604:	ldr	r2, [sp, #40]	; 0x28
   12608:	cmp	r2, #0
   1260c:	moveq	r3, #0
   12610:	andne	r3, r3, #1
   12614:	cmp	r3, #0
   12618:	movne	r3, r2
   1261c:	subne	r2, r3, #1
   12620:	bne	12650 <putchar_unlocked@plt+0x178c>
   12624:	cmp	r9, r4
   12628:	movhi	r3, #0
   1262c:	strbhi	r3, [r8, r4]
   12630:	mov	r0, r4
   12634:	add	sp, sp, #108	; 0x6c
   12638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1263c:	mov	r3, r2
   12640:	b	12604 <putchar_unlocked@plt+0x1740>
   12644:	cmp	r9, r4
   12648:	strbhi	r3, [r8, r4]
   1264c:	add	r4, r4, #1
   12650:	ldrb	r3, [r2, #1]!
   12654:	cmp	r3, #0
   12658:	bne	12644 <putchar_unlocked@plt+0x1780>
   1265c:	b	12624 <putchar_unlocked@plt+0x1760>
   12660:	ldr	r3, [pc, #32]	; 12688 <putchar_unlocked@plt+0x17c4>
   12664:	mov	r6, #1
   12668:	str	r6, [sp, #24]
   1266c:	str	r6, [sp, #32]
   12670:	str	r3, [sp, #40]	; 0x28
   12674:	mov	r4, #0
   12678:	mov	sl, #5
   1267c:	b	11a24 <putchar_unlocked@plt+0xb60>
   12680:	mov	r6, #1
   12684:	b	11c18 <putchar_unlocked@plt+0xd54>
   12688:	andeq	r4, r1, r3, asr r6
   1268c:	andeq	r4, r1, r7, asr r6
   12690:	andeq	r4, r1, r5, asr r6
   12694:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1269c:	sub	sp, sp, #52	; 0x34
   126a0:	mov	r6, r0
   126a4:	mov	r5, r3
   126a8:	mov	r8, r1
   126ac:	mov	r9, r2
   126b0:	bl	10de0 <__errno_location@plt>
   126b4:	ldr	r7, [pc, #380]	; 12838 <putchar_unlocked@plt+0x1974>
   126b8:	cmn	r6, #-2147483647	; 0x80000001
   126bc:	ldr	r4, [r7]
   126c0:	ldr	r3, [r0]
   126c4:	str	r0, [sp, #24]
   126c8:	str	r3, [sp, #32]
   126cc:	movne	r3, #0
   126d0:	moveq	r3, #1
   126d4:	orrs	r3, r3, r6, lsr #31
   126d8:	beq	126e0 <putchar_unlocked@plt+0x181c>
   126dc:	bl	10eac <abort@plt>
   126e0:	ldr	r2, [r7, #4]
   126e4:	cmp	r6, r2
   126e8:	blt	12758 <putchar_unlocked@plt+0x1894>
   126ec:	add	r1, sp, #48	; 0x30
   126f0:	add	sl, r7, #8
   126f4:	str	r2, [r1, #-4]!
   126f8:	cmp	r4, sl
   126fc:	mov	r3, #8
   12700:	sub	r2, r6, r2
   12704:	movne	r0, r4
   12708:	str	r3, [sp]
   1270c:	add	r2, r2, #1
   12710:	mvn	r3, #-2147483648	; 0x80000000
   12714:	moveq	r0, #0
   12718:	bl	13570 <putchar_unlocked@plt+0x26ac>
   1271c:	cmp	r4, sl
   12720:	ldr	r2, [sp, #44]	; 0x2c
   12724:	mov	fp, r0
   12728:	str	r0, [r7]
   1272c:	ldmeq	r4, {r0, r1}
   12730:	mov	r4, fp
   12734:	stmeq	fp, {r0, r1}
   12738:	ldr	r0, [r7, #4]
   1273c:	mov	r1, #0
   12740:	sub	r2, r2, r0
   12744:	add	r0, fp, r0, lsl #3
   12748:	lsl	r2, r2, #3
   1274c:	bl	10df8 <memset@plt>
   12750:	ldr	r3, [sp, #44]	; 0x2c
   12754:	str	r3, [r7, #4]
   12758:	ldr	r3, [r5, #4]
   1275c:	add	sl, r4, r6, lsl #3
   12760:	orr	r3, r3, #1
   12764:	str	r3, [sp, #28]
   12768:	add	r3, r5, #8
   1276c:	str	r3, [sp, #36]	; 0x24
   12770:	ldr	r3, [r5, #44]	; 0x2c
   12774:	ldr	fp, [r4, r6, lsl #3]
   12778:	ldr	r7, [sl, #4]
   1277c:	str	r3, [sp, #16]
   12780:	ldr	r3, [r5, #40]	; 0x28
   12784:	mov	r2, r8
   12788:	str	r3, [sp, #12]
   1278c:	add	r3, r5, #8
   12790:	str	r3, [sp, #8]
   12794:	ldr	r3, [sp, #28]
   12798:	mov	r1, fp
   1279c:	str	r3, [sp, #4]
   127a0:	ldr	r3, [r5]
   127a4:	mov	r0, r7
   127a8:	str	r3, [sp]
   127ac:	mov	r3, r9
   127b0:	bl	11964 <putchar_unlocked@plt+0xaa0>
   127b4:	cmp	fp, r0
   127b8:	bhi	12820 <putchar_unlocked@plt+0x195c>
   127bc:	ldr	r3, [pc, #120]	; 1283c <putchar_unlocked@plt+0x1978>
   127c0:	add	fp, r0, #1
   127c4:	cmp	r7, r3
   127c8:	str	fp, [r4, r6, lsl #3]
   127cc:	beq	127d8 <putchar_unlocked@plt+0x1914>
   127d0:	mov	r0, r7
   127d4:	bl	115a0 <putchar_unlocked@plt+0x6dc>
   127d8:	mov	r0, fp
   127dc:	bl	13428 <putchar_unlocked@plt+0x2564>
   127e0:	ldr	r3, [r5, #44]	; 0x2c
   127e4:	mov	r2, r8
   127e8:	mov	r1, fp
   127ec:	str	r0, [sl, #4]
   127f0:	str	r3, [sp, #16]
   127f4:	ldr	r3, [r5, #40]	; 0x28
   127f8:	mov	r7, r0
   127fc:	str	r3, [sp, #12]
   12800:	add	r3, r5, #8
   12804:	str	r3, [sp, #8]
   12808:	ldr	r3, [sp, #28]
   1280c:	str	r3, [sp, #4]
   12810:	ldr	r3, [r5]
   12814:	str	r3, [sp]
   12818:	mov	r3, r9
   1281c:	bl	11964 <putchar_unlocked@plt+0xaa0>
   12820:	ldr	r3, [sp, #24]
   12824:	ldr	r2, [sp, #32]
   12828:	mov	r0, r7
   1282c:	str	r2, [r3]
   12830:	add	sp, sp, #52	; 0x34
   12834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12838:	strdeq	r5, [r2], -r0
   1283c:	andeq	r5, r2, ip, asr r1
   12840:	push	{r4, r5, r6, lr}
   12844:	mov	r5, r0
   12848:	bl	10de0 <__errno_location@plt>
   1284c:	cmp	r5, #0
   12850:	mov	r1, #48	; 0x30
   12854:	ldr	r6, [r0]
   12858:	mov	r4, r0
   1285c:	ldr	r0, [pc, #12]	; 12870 <putchar_unlocked@plt+0x19ac>
   12860:	movne	r0, r5
   12864:	bl	13804 <putchar_unlocked@plt+0x2940>
   12868:	str	r6, [r4]
   1286c:	pop	{r4, r5, r6, pc}
   12870:	andeq	r5, r2, ip, asr r2
   12874:	ldr	r3, [pc, #12]	; 12888 <putchar_unlocked@plt+0x19c4>
   12878:	cmp	r0, #0
   1287c:	moveq	r0, r3
   12880:	ldr	r0, [r0]
   12884:	bx	lr
   12888:	andeq	r5, r2, ip, asr r2
   1288c:	ldr	r3, [pc, #12]	; 128a0 <putchar_unlocked@plt+0x19dc>
   12890:	cmp	r0, #0
   12894:	moveq	r0, r3
   12898:	str	r1, [r0]
   1289c:	bx	lr
   128a0:	andeq	r5, r2, ip, asr r2
   128a4:	ldr	r3, [pc, #52]	; 128e0 <putchar_unlocked@plt+0x1a1c>
   128a8:	cmp	r0, #0
   128ac:	moveq	r0, r3
   128b0:	add	r3, r0, #8
   128b4:	push	{lr}		; (str lr, [sp, #-4]!)
   128b8:	lsr	lr, r1, #5
   128bc:	and	r1, r1, #31
   128c0:	ldr	ip, [r3, lr, lsl #2]
   128c4:	lsr	r0, ip, r1
   128c8:	eor	r2, r2, r0
   128cc:	and	r2, r2, #1
   128d0:	and	r0, r0, #1
   128d4:	eor	r1, ip, r2, lsl r1
   128d8:	str	r1, [r3, lr, lsl #2]
   128dc:	pop	{pc}		; (ldr pc, [sp], #4)
   128e0:	andeq	r5, r2, ip, asr r2
   128e4:	ldr	r3, [pc, #16]	; 128fc <putchar_unlocked@plt+0x1a38>
   128e8:	cmp	r0, #0
   128ec:	movne	r3, r0
   128f0:	ldr	r0, [r3, #4]
   128f4:	str	r1, [r3, #4]
   128f8:	bx	lr
   128fc:	andeq	r5, r2, ip, asr r2
   12900:	ldr	r3, [pc, #44]	; 12934 <putchar_unlocked@plt+0x1a70>
   12904:	cmp	r0, #0
   12908:	moveq	r0, r3
   1290c:	mov	r3, #10
   12910:	cmp	r2, #0
   12914:	cmpne	r1, #0
   12918:	str	r3, [r0]
   1291c:	bne	12928 <putchar_unlocked@plt+0x1a64>
   12920:	push	{r4, lr}
   12924:	bl	10eac <abort@plt>
   12928:	str	r1, [r0, #40]	; 0x28
   1292c:	str	r2, [r0, #44]	; 0x2c
   12930:	bx	lr
   12934:	andeq	r5, r2, ip, asr r2
   12938:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1293c:	sub	sp, sp, #24
   12940:	mov	sl, r3
   12944:	ldr	r4, [sp, #56]	; 0x38
   12948:	ldr	r3, [pc, #100]	; 129b4 <putchar_unlocked@plt+0x1af0>
   1294c:	cmp	r4, #0
   12950:	moveq	r4, r3
   12954:	mov	r7, r0
   12958:	mov	r8, r1
   1295c:	mov	r9, r2
   12960:	bl	10de0 <__errno_location@plt>
   12964:	ldr	r3, [r4, #44]	; 0x2c
   12968:	mov	r2, r9
   1296c:	mov	r1, r8
   12970:	ldr	r6, [r0]
   12974:	str	r3, [sp, #16]
   12978:	ldr	r3, [r4, #40]	; 0x28
   1297c:	mov	r5, r0
   12980:	str	r3, [sp, #12]
   12984:	add	r3, r4, #8
   12988:	str	r3, [sp, #8]
   1298c:	ldr	r3, [r4, #4]
   12990:	mov	r0, r7
   12994:	str	r3, [sp, #4]
   12998:	ldr	r3, [r4]
   1299c:	str	r3, [sp]
   129a0:	mov	r3, sl
   129a4:	bl	11964 <putchar_unlocked@plt+0xaa0>
   129a8:	str	r6, [r5]
   129ac:	add	sp, sp, #24
   129b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   129b4:	andeq	r5, r2, ip, asr r2
   129b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129bc:	cmp	r3, #0
   129c0:	sub	sp, sp, #44	; 0x2c
   129c4:	ldr	r4, [pc, #188]	; 12a88 <putchar_unlocked@plt+0x1bc4>
   129c8:	mov	r6, r2
   129cc:	movne	r4, r3
   129d0:	mov	sl, r1
   129d4:	mov	r9, r0
   129d8:	bl	10de0 <__errno_location@plt>
   129dc:	ldr	r5, [r4, #4]
   129e0:	add	fp, r4, #8
   129e4:	cmp	r6, #0
   129e8:	orreq	r5, r5, #1
   129ec:	mov	r1, #0
   129f0:	mov	r2, r9
   129f4:	ldr	r3, [r0]
   129f8:	mov	r8, r0
   129fc:	str	r3, [sp, #28]
   12a00:	ldr	r3, [r4, #44]	; 0x2c
   12a04:	mov	r0, r1
   12a08:	str	r3, [sp, #16]
   12a0c:	ldr	r3, [r4, #40]	; 0x28
   12a10:	stmib	sp, {r5, fp}
   12a14:	str	r3, [sp, #12]
   12a18:	ldr	r3, [r4]
   12a1c:	str	r3, [sp]
   12a20:	mov	r3, sl
   12a24:	bl	11964 <putchar_unlocked@plt+0xaa0>
   12a28:	add	r1, r0, #1
   12a2c:	mov	r7, r0
   12a30:	mov	r0, r1
   12a34:	str	r1, [sp, #36]	; 0x24
   12a38:	bl	13428 <putchar_unlocked@plt+0x2564>
   12a3c:	ldr	r3, [r4, #44]	; 0x2c
   12a40:	mov	r2, r9
   12a44:	str	r3, [sp, #16]
   12a48:	ldr	r3, [r4, #40]	; 0x28
   12a4c:	stmib	sp, {r5, fp}
   12a50:	str	r3, [sp, #12]
   12a54:	ldr	r3, [r4]
   12a58:	ldr	r1, [sp, #36]	; 0x24
   12a5c:	str	r3, [sp]
   12a60:	mov	r3, sl
   12a64:	str	r0, [sp, #32]
   12a68:	bl	11964 <putchar_unlocked@plt+0xaa0>
   12a6c:	ldr	r3, [sp, #28]
   12a70:	cmp	r6, #0
   12a74:	str	r3, [r8]
   12a78:	ldr	r0, [sp, #32]
   12a7c:	strne	r7, [r6]
   12a80:	add	sp, sp, #44	; 0x2c
   12a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a88:	andeq	r5, r2, ip, asr r2
   12a8c:	mov	r3, r2
   12a90:	mov	r2, #0
   12a94:	b	129b8 <putchar_unlocked@plt+0x1af4>
   12a98:	push	{r4, r5, r6, r7, r8, lr}
   12a9c:	mov	r6, #1
   12aa0:	ldr	r4, [pc, #104]	; 12b10 <putchar_unlocked@plt+0x1c4c>
   12aa4:	ldr	r5, [r4]
   12aa8:	add	r7, r5, #12
   12aac:	ldr	r3, [r4, #4]
   12ab0:	add	r7, r7, #8
   12ab4:	cmp	r6, r3
   12ab8:	blt	12b00 <putchar_unlocked@plt+0x1c3c>
   12abc:	ldr	r0, [r5, #4]
   12ac0:	ldr	r6, [pc, #76]	; 12b14 <putchar_unlocked@plt+0x1c50>
   12ac4:	cmp	r0, r6
   12ac8:	beq	12adc <putchar_unlocked@plt+0x1c18>
   12acc:	bl	115a0 <putchar_unlocked@plt+0x6dc>
   12ad0:	mov	r3, #256	; 0x100
   12ad4:	str	r3, [r4, #8]
   12ad8:	str	r6, [r4, #12]
   12adc:	ldr	r6, [pc, #52]	; 12b18 <putchar_unlocked@plt+0x1c54>
   12ae0:	cmp	r5, r6
   12ae4:	beq	12af4 <putchar_unlocked@plt+0x1c30>
   12ae8:	mov	r0, r5
   12aec:	bl	115a0 <putchar_unlocked@plt+0x6dc>
   12af0:	str	r6, [r4]
   12af4:	mov	r3, #1
   12af8:	str	r3, [r4, #4]
   12afc:	pop	{r4, r5, r6, r7, r8, pc}
   12b00:	ldr	r0, [r7, #-8]
   12b04:	bl	115a0 <putchar_unlocked@plt+0x6dc>
   12b08:	add	r6, r6, #1
   12b0c:	b	12aac <putchar_unlocked@plt+0x1be8>
   12b10:	strdeq	r5, [r2], -r0
   12b14:	andeq	r5, r2, ip, asr r1
   12b18:	strdeq	r5, [r2], -r8
   12b1c:	ldr	r3, [pc, #4]	; 12b28 <putchar_unlocked@plt+0x1c64>
   12b20:	mvn	r2, #0
   12b24:	b	12698 <putchar_unlocked@plt+0x17d4>
   12b28:	andeq	r5, r2, ip, asr r2
   12b2c:	ldr	r3, [pc]	; 12b34 <putchar_unlocked@plt+0x1c70>
   12b30:	b	12698 <putchar_unlocked@plt+0x17d4>
   12b34:	andeq	r5, r2, ip, asr r2
   12b38:	mov	r1, r0
   12b3c:	mov	r0, #0
   12b40:	b	12b1c <putchar_unlocked@plt+0x1c58>
   12b44:	mov	r2, r1
   12b48:	mov	r1, r0
   12b4c:	mov	r0, #0
   12b50:	b	12b2c <putchar_unlocked@plt+0x1c68>
   12b54:	push	{r4, r5, lr}
   12b58:	sub	sp, sp, #52	; 0x34
   12b5c:	mov	r5, r2
   12b60:	mov	r4, r0
   12b64:	mov	r0, sp
   12b68:	bl	11820 <putchar_unlocked@plt+0x95c>
   12b6c:	mov	r3, sp
   12b70:	mvn	r2, #0
   12b74:	mov	r1, r5
   12b78:	mov	r0, r4
   12b7c:	bl	12698 <putchar_unlocked@plt+0x17d4>
   12b80:	add	sp, sp, #52	; 0x34
   12b84:	pop	{r4, r5, pc}
   12b88:	push	{r4, r5, r6, lr}
   12b8c:	sub	sp, sp, #48	; 0x30
   12b90:	mov	r5, r2
   12b94:	mov	r6, r3
   12b98:	mov	r4, r0
   12b9c:	mov	r0, sp
   12ba0:	bl	11820 <putchar_unlocked@plt+0x95c>
   12ba4:	mov	r3, sp
   12ba8:	mov	r2, r6
   12bac:	mov	r1, r5
   12bb0:	mov	r0, r4
   12bb4:	bl	12698 <putchar_unlocked@plt+0x17d4>
   12bb8:	add	sp, sp, #48	; 0x30
   12bbc:	pop	{r4, r5, r6, pc}
   12bc0:	mov	r2, r1
   12bc4:	mov	r1, r0
   12bc8:	mov	r0, #0
   12bcc:	b	12b54 <putchar_unlocked@plt+0x1c90>
   12bd0:	mov	r3, r2
   12bd4:	mov	r2, r1
   12bd8:	mov	r1, r0
   12bdc:	mov	r0, #0
   12be0:	b	12b88 <putchar_unlocked@plt+0x1cc4>
   12be4:	push	{r4, r5, r6, lr}
   12be8:	mov	r4, r0
   12bec:	ldr	lr, [pc, #80]	; 12c44 <putchar_unlocked@plt+0x1d80>
   12bf0:	mov	r5, r1
   12bf4:	mov	r6, r2
   12bf8:	ldm	lr!, {r0, r1, r2, r3}
   12bfc:	sub	sp, sp, #48	; 0x30
   12c00:	mov	ip, sp
   12c04:	stmia	ip!, {r0, r1, r2, r3}
   12c08:	ldm	lr!, {r0, r1, r2, r3}
   12c0c:	stmia	ip!, {r0, r1, r2, r3}
   12c10:	ldm	lr, {r0, r1, r2, r3}
   12c14:	stm	ip, {r0, r1, r2, r3}
   12c18:	mov	r1, r6
   12c1c:	mov	r2, #1
   12c20:	mov	r0, sp
   12c24:	bl	128a4 <putchar_unlocked@plt+0x19e0>
   12c28:	mov	r3, sp
   12c2c:	mov	r2, r5
   12c30:	mov	r1, r4
   12c34:	mov	r0, #0
   12c38:	bl	12698 <putchar_unlocked@plt+0x17d4>
   12c3c:	add	sp, sp, #48	; 0x30
   12c40:	pop	{r4, r5, r6, pc}
   12c44:	andeq	r5, r2, ip, asr r2
   12c48:	mov	r2, r1
   12c4c:	mvn	r1, #0
   12c50:	b	12be4 <putchar_unlocked@plt+0x1d20>
   12c54:	mov	r1, #58	; 0x3a
   12c58:	b	12c48 <putchar_unlocked@plt+0x1d84>
   12c5c:	mov	r2, #58	; 0x3a
   12c60:	b	12be4 <putchar_unlocked@plt+0x1d20>
   12c64:	push	{r4, r5, lr}
   12c68:	sub	sp, sp, #100	; 0x64
   12c6c:	mov	r4, r0
   12c70:	mov	r0, sp
   12c74:	mov	r5, r2
   12c78:	bl	11820 <putchar_unlocked@plt+0x95c>
   12c7c:	mov	ip, sp
   12c80:	add	lr, sp, #48	; 0x30
   12c84:	ldm	ip!, {r0, r1, r2, r3}
   12c88:	stmia	lr!, {r0, r1, r2, r3}
   12c8c:	ldm	ip!, {r0, r1, r2, r3}
   12c90:	stmia	lr!, {r0, r1, r2, r3}
   12c94:	ldm	ip, {r0, r1, r2, r3}
   12c98:	stm	lr, {r0, r1, r2, r3}
   12c9c:	mov	r2, #1
   12ca0:	mov	r1, #58	; 0x3a
   12ca4:	add	r0, sp, #48	; 0x30
   12ca8:	bl	128a4 <putchar_unlocked@plt+0x19e0>
   12cac:	add	r3, sp, #48	; 0x30
   12cb0:	mvn	r2, #0
   12cb4:	mov	r1, r5
   12cb8:	mov	r0, r4
   12cbc:	bl	12698 <putchar_unlocked@plt+0x17d4>
   12cc0:	add	sp, sp, #100	; 0x64
   12cc4:	pop	{r4, r5, pc}
   12cc8:	push	{r4, r5, r6, r7, lr}
   12ccc:	mov	r4, r0
   12cd0:	ldr	lr, [pc, #84]	; 12d2c <putchar_unlocked@plt+0x1e68>
   12cd4:	mov	r6, r1
   12cd8:	mov	r7, r2
   12cdc:	mov	r5, r3
   12ce0:	ldm	lr!, {r0, r1, r2, r3}
   12ce4:	sub	sp, sp, #52	; 0x34
   12ce8:	mov	ip, sp
   12cec:	stmia	ip!, {r0, r1, r2, r3}
   12cf0:	ldm	lr!, {r0, r1, r2, r3}
   12cf4:	stmia	ip!, {r0, r1, r2, r3}
   12cf8:	ldm	lr, {r0, r1, r2, r3}
   12cfc:	stm	ip, {r0, r1, r2, r3}
   12d00:	mov	r2, r7
   12d04:	mov	r1, r6
   12d08:	mov	r0, sp
   12d0c:	bl	12900 <putchar_unlocked@plt+0x1a3c>
   12d10:	mov	r3, sp
   12d14:	ldr	r2, [sp, #72]	; 0x48
   12d18:	mov	r1, r5
   12d1c:	mov	r0, r4
   12d20:	bl	12698 <putchar_unlocked@plt+0x17d4>
   12d24:	add	sp, sp, #52	; 0x34
   12d28:	pop	{r4, r5, r6, r7, pc}
   12d2c:	andeq	r5, r2, ip, asr r2
   12d30:	mvn	ip, #0
   12d34:	push	{r0, r1, r2, lr}
   12d38:	str	ip, [sp]
   12d3c:	bl	12cc8 <putchar_unlocked@plt+0x1e04>
   12d40:	add	sp, sp, #12
   12d44:	pop	{pc}		; (ldr pc, [sp], #4)
   12d48:	mov	r3, r2
   12d4c:	mov	r2, r1
   12d50:	mov	r1, r0
   12d54:	mov	r0, #0
   12d58:	b	12d30 <putchar_unlocked@plt+0x1e6c>
   12d5c:	push	{r0, r1, r2, lr}
   12d60:	str	r3, [sp]
   12d64:	mov	r3, r2
   12d68:	mov	r2, r1
   12d6c:	mov	r1, r0
   12d70:	mov	r0, #0
   12d74:	bl	12cc8 <putchar_unlocked@plt+0x1e04>
   12d78:	add	sp, sp, #12
   12d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   12d80:	ldr	r3, [pc]	; 12d88 <putchar_unlocked@plt+0x1ec4>
   12d84:	b	12698 <putchar_unlocked@plt+0x17d4>
   12d88:	andeq	r5, r2, r0, lsl #2
   12d8c:	mov	r2, r1
   12d90:	mov	r1, r0
   12d94:	mov	r0, #0
   12d98:	b	12d80 <putchar_unlocked@plt+0x1ebc>
   12d9c:	mvn	r2, #0
   12da0:	b	12d80 <putchar_unlocked@plt+0x1ebc>
   12da4:	mov	r1, r0
   12da8:	mov	r0, #0
   12dac:	b	12d9c <putchar_unlocked@plt+0x1ed8>
   12db0:	push	{r4, r5, r6, lr}
   12db4:	mov	r5, r0
   12db8:	mov	r0, #33	; 0x21
   12dbc:	bl	13400 <putchar_unlocked@plt+0x253c>
   12dc0:	add	r1, r5, #44	; 0x2c
   12dc4:	mov	r2, #32
   12dc8:	mov	r5, #0
   12dcc:	mov	r4, r0
   12dd0:	bl	10e04 <strncpy@plt>
   12dd4:	mov	r0, r4
   12dd8:	strb	r5, [r4, #32]
   12ddc:	bl	10dd4 <strlen@plt>
   12de0:	add	r0, r4, r0
   12de4:	cmp	r4, r0
   12de8:	bcs	12df8 <putchar_unlocked@plt+0x1f34>
   12dec:	ldrb	r3, [r0, #-1]!
   12df0:	cmp	r3, #32
   12df4:	beq	12e00 <putchar_unlocked@plt+0x1f3c>
   12df8:	mov	r0, r4
   12dfc:	pop	{r4, r5, r6, pc}
   12e00:	strb	r5, [r0]
   12e04:	b	12de4 <putchar_unlocked@plt+0x1f20>
   12e08:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   12e0c:	mov	r4, #0
   12e10:	mov	r8, r3
   12e14:	mov	r9, r1
   12e18:	mov	sl, r2
   12e1c:	str	r4, [sp, #12]
   12e20:	bl	10c9c <utmpxname@plt>
   12e24:	bl	10cfc <setutxent@plt>
   12e28:	lsr	r6, r8, #1
   12e2c:	eor	r6, r6, #1
   12e30:	mov	r7, r4
   12e34:	and	r6, r6, #1
   12e38:	bl	10eb8 <getutxent@plt>
   12e3c:	subs	r5, r0, #0
   12e40:	bne	12e5c <putchar_unlocked@plt+0x1f98>
   12e44:	bl	10e4c <endutxent@plt>
   12e48:	str	r4, [r9]
   12e4c:	mov	r0, r5
   12e50:	str	r7, [sl]
   12e54:	add	sp, sp, #16
   12e58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e5c:	ldrb	r3, [r5, #44]	; 0x2c
   12e60:	cmp	r3, #0
   12e64:	ldrshne	r3, [r5]
   12e68:	subne	r3, r3, #7
   12e6c:	clzne	r3, r3
   12e70:	lsrne	r3, r3, #5
   12e74:	orrs	r2, r6, r3
   12e78:	beq	12e38 <putchar_unlocked@plt+0x1f74>
   12e7c:	tst	r8, r3
   12e80:	beq	12eb0 <putchar_unlocked@plt+0x1fec>
   12e84:	ldr	r0, [r5, #4]
   12e88:	cmp	r0, #0
   12e8c:	ble	12eb0 <putchar_unlocked@plt+0x1fec>
   12e90:	mov	r1, #0
   12e94:	bl	10db0 <kill@plt>
   12e98:	cmp	r0, #0
   12e9c:	bge	12eb0 <putchar_unlocked@plt+0x1fec>
   12ea0:	bl	10de0 <__errno_location@plt>
   12ea4:	ldr	r3, [r0]
   12ea8:	cmp	r3, #3
   12eac:	beq	12e38 <putchar_unlocked@plt+0x1f74>
   12eb0:	ldr	r3, [sp, #12]
   12eb4:	cmp	r4, r3
   12eb8:	bne	12edc <putchar_unlocked@plt+0x2018>
   12ebc:	mov	r3, #384	; 0x180
   12ec0:	str	r3, [sp]
   12ec4:	mov	r0, r7
   12ec8:	mvn	r3, #0
   12ecc:	mov	r2, #1
   12ed0:	add	r1, sp, #12
   12ed4:	bl	13570 <putchar_unlocked@plt+0x26ac>
   12ed8:	mov	r7, r0
   12edc:	mov	r2, #384	; 0x180
   12ee0:	mov	r1, r5
   12ee4:	mla	r0, r2, r4, r7
   12ee8:	bl	10cc0 <memcpy@plt>
   12eec:	add	r4, r4, #1
   12ef0:	b	12e38 <putchar_unlocked@plt+0x1f74>
   12ef4:	push	{r4, r5, r6, lr}
   12ef8:	sub	sp, sp, #32
   12efc:	cmp	r1, #0
   12f00:	mov	r5, r0
   12f04:	ldr	r4, [sp, #48]	; 0x30
   12f08:	ldr	r6, [sp, #52]	; 0x34
   12f0c:	beq	12fc0 <putchar_unlocked@plt+0x20fc>
   12f10:	stm	sp, {r2, r3}
   12f14:	mov	r3, r1
   12f18:	ldr	r2, [pc, #860]	; 1327c <putchar_unlocked@plt+0x23b8>
   12f1c:	mov	r1, #1
   12f20:	bl	10e28 <__fprintf_chk@plt>
   12f24:	mov	r2, #5
   12f28:	ldr	r1, [pc, #848]	; 13280 <putchar_unlocked@plt+0x23bc>
   12f2c:	mov	r0, #0
   12f30:	bl	10cf0 <dcgettext@plt>
   12f34:	ldr	r3, [pc, #840]	; 13284 <putchar_unlocked@plt+0x23c0>
   12f38:	ldr	r2, [pc, #840]	; 13288 <putchar_unlocked@plt+0x23c4>
   12f3c:	str	r3, [sp]
   12f40:	mov	r1, #1
   12f44:	mov	r3, r0
   12f48:	mov	r0, r5
   12f4c:	bl	10e28 <__fprintf_chk@plt>
   12f50:	mov	r1, r5
   12f54:	mov	r0, #10
   12f58:	bl	10ce4 <fputc_unlocked@plt>
   12f5c:	mov	r2, #5
   12f60:	ldr	r1, [pc, #804]	; 1328c <putchar_unlocked@plt+0x23c8>
   12f64:	mov	r0, #0
   12f68:	bl	10cf0 <dcgettext@plt>
   12f6c:	mov	r1, #1
   12f70:	ldr	r3, [pc, #792]	; 13290 <putchar_unlocked@plt+0x23cc>
   12f74:	mov	r2, r0
   12f78:	mov	r0, r5
   12f7c:	bl	10e28 <__fprintf_chk@plt>
   12f80:	mov	r1, r5
   12f84:	mov	r0, #10
   12f88:	bl	10ce4 <fputc_unlocked@plt>
   12f8c:	cmp	r6, #9
   12f90:	ldrls	pc, [pc, r6, lsl #2]
   12f94:	b	13270 <putchar_unlocked@plt+0x23ac>
   12f98:	strheq	r3, [r1], -r0
   12f9c:	ldrdeq	r2, [r1], -r8
   12fa0:	andeq	r3, r1, r4
   12fa4:	andeq	r3, r1, r8, lsr r0
   12fa8:	andeq	r3, r1, r4, ror r0
   12fac:	strheq	r3, [r1], -r8
   12fb0:	andeq	r3, r1, r0, lsl #2
   12fb4:	andeq	r3, r1, r0, asr r1
   12fb8:	andeq	r3, r1, r8, lsr #3
   12fbc:	andeq	r3, r1, r8, lsl #4
   12fc0:	str	r3, [sp]
   12fc4:	mov	r1, #1
   12fc8:	mov	r3, r2
   12fcc:	ldr	r2, [pc, #704]	; 13294 <putchar_unlocked@plt+0x23d0>
   12fd0:	bl	10e28 <__fprintf_chk@plt>
   12fd4:	b	12f24 <putchar_unlocked@plt+0x2060>
   12fd8:	mov	r2, #5
   12fdc:	ldr	r1, [pc, #692]	; 13298 <putchar_unlocked@plt+0x23d4>
   12fe0:	mov	r0, #0
   12fe4:	bl	10cf0 <dcgettext@plt>
   12fe8:	ldr	r3, [r4]
   12fec:	mov	r1, #1
   12ff0:	mov	r2, r0
   12ff4:	mov	r0, r5
   12ff8:	add	sp, sp, #32
   12ffc:	pop	{r4, r5, r6, lr}
   13000:	b	10e28 <__fprintf_chk@plt>
   13004:	mov	r2, #5
   13008:	ldr	r1, [pc, #652]	; 1329c <putchar_unlocked@plt+0x23d8>
   1300c:	mov	r0, #0
   13010:	bl	10cf0 <dcgettext@plt>
   13014:	ldr	r3, [r4, #4]
   13018:	mov	r1, #1
   1301c:	str	r3, [sp, #48]	; 0x30
   13020:	ldr	r3, [r4]
   13024:	mov	r2, r0
   13028:	mov	r0, r5
   1302c:	add	sp, sp, #32
   13030:	pop	{r4, r5, r6, lr}
   13034:	b	10e28 <__fprintf_chk@plt>
   13038:	mov	r2, #5
   1303c:	ldr	r1, [pc, #604]	; 132a0 <putchar_unlocked@plt+0x23dc>
   13040:	mov	r0, #0
   13044:	bl	10cf0 <dcgettext@plt>
   13048:	ldr	r3, [r4, #8]
   1304c:	mov	r1, #1
   13050:	str	r3, [sp, #52]	; 0x34
   13054:	ldr	r3, [r4, #4]
   13058:	str	r3, [sp, #48]	; 0x30
   1305c:	ldr	r3, [r4]
   13060:	mov	r2, r0
   13064:	mov	r0, r5
   13068:	add	sp, sp, #32
   1306c:	pop	{r4, r5, r6, lr}
   13070:	b	10e28 <__fprintf_chk@plt>
   13074:	mov	r2, #5
   13078:	ldr	r1, [pc, #548]	; 132a4 <putchar_unlocked@plt+0x23e0>
   1307c:	mov	r0, #0
   13080:	bl	10cf0 <dcgettext@plt>
   13084:	ldr	r3, [r4, #12]
   13088:	mov	r1, #1
   1308c:	str	r3, [sp, #8]
   13090:	ldr	r3, [r4, #8]
   13094:	str	r3, [sp, #4]
   13098:	ldr	r3, [r4, #4]
   1309c:	str	r3, [sp]
   130a0:	ldr	r3, [r4]
   130a4:	mov	r2, r0
   130a8:	mov	r0, r5
   130ac:	bl	10e28 <__fprintf_chk@plt>
   130b0:	add	sp, sp, #32
   130b4:	pop	{r4, r5, r6, pc}
   130b8:	mov	r2, #5
   130bc:	ldr	r1, [pc, #484]	; 132a8 <putchar_unlocked@plt+0x23e4>
   130c0:	mov	r0, #0
   130c4:	bl	10cf0 <dcgettext@plt>
   130c8:	ldr	r3, [r4, #16]
   130cc:	mov	r1, #1
   130d0:	str	r3, [sp, #12]
   130d4:	ldr	r3, [r4, #12]
   130d8:	str	r3, [sp, #8]
   130dc:	ldr	r3, [r4, #8]
   130e0:	str	r3, [sp, #4]
   130e4:	ldr	r3, [r4, #4]
   130e8:	str	r3, [sp]
   130ec:	ldr	r3, [r4]
   130f0:	mov	r2, r0
   130f4:	mov	r0, r5
   130f8:	bl	10e28 <__fprintf_chk@plt>
   130fc:	b	130b0 <putchar_unlocked@plt+0x21ec>
   13100:	mov	r2, #5
   13104:	ldr	r1, [pc, #416]	; 132ac <putchar_unlocked@plt+0x23e8>
   13108:	mov	r0, #0
   1310c:	bl	10cf0 <dcgettext@plt>
   13110:	ldr	r3, [r4, #20]
   13114:	mov	r1, #1
   13118:	str	r3, [sp, #16]
   1311c:	ldr	r3, [r4, #16]
   13120:	str	r3, [sp, #12]
   13124:	ldr	r3, [r4, #12]
   13128:	str	r3, [sp, #8]
   1312c:	ldr	r3, [r4, #8]
   13130:	str	r3, [sp, #4]
   13134:	ldr	r3, [r4, #4]
   13138:	str	r3, [sp]
   1313c:	ldr	r3, [r4]
   13140:	mov	r2, r0
   13144:	mov	r0, r5
   13148:	bl	10e28 <__fprintf_chk@plt>
   1314c:	b	130b0 <putchar_unlocked@plt+0x21ec>
   13150:	mov	r2, #5
   13154:	ldr	r1, [pc, #340]	; 132b0 <putchar_unlocked@plt+0x23ec>
   13158:	mov	r0, #0
   1315c:	bl	10cf0 <dcgettext@plt>
   13160:	ldr	r3, [r4, #24]
   13164:	mov	r1, #1
   13168:	str	r3, [sp, #20]
   1316c:	ldr	r3, [r4, #20]
   13170:	str	r3, [sp, #16]
   13174:	ldr	r3, [r4, #16]
   13178:	str	r3, [sp, #12]
   1317c:	ldr	r3, [r4, #12]
   13180:	str	r3, [sp, #8]
   13184:	ldr	r3, [r4, #8]
   13188:	str	r3, [sp, #4]
   1318c:	ldr	r3, [r4, #4]
   13190:	str	r3, [sp]
   13194:	ldr	r3, [r4]
   13198:	mov	r2, r0
   1319c:	mov	r0, r5
   131a0:	bl	10e28 <__fprintf_chk@plt>
   131a4:	b	130b0 <putchar_unlocked@plt+0x21ec>
   131a8:	mov	r2, #5
   131ac:	ldr	r1, [pc, #256]	; 132b4 <putchar_unlocked@plt+0x23f0>
   131b0:	mov	r0, #0
   131b4:	bl	10cf0 <dcgettext@plt>
   131b8:	ldr	r3, [r4, #28]
   131bc:	mov	r1, #1
   131c0:	str	r3, [sp, #24]
   131c4:	ldr	r3, [r4, #24]
   131c8:	str	r3, [sp, #20]
   131cc:	ldr	r3, [r4, #20]
   131d0:	str	r3, [sp, #16]
   131d4:	ldr	r3, [r4, #16]
   131d8:	str	r3, [sp, #12]
   131dc:	ldr	r3, [r4, #12]
   131e0:	str	r3, [sp, #8]
   131e4:	ldr	r3, [r4, #8]
   131e8:	str	r3, [sp, #4]
   131ec:	ldr	r3, [r4, #4]
   131f0:	str	r3, [sp]
   131f4:	ldr	r3, [r4]
   131f8:	mov	r2, r0
   131fc:	mov	r0, r5
   13200:	bl	10e28 <__fprintf_chk@plt>
   13204:	b	130b0 <putchar_unlocked@plt+0x21ec>
   13208:	ldr	r1, [pc, #168]	; 132b8 <putchar_unlocked@plt+0x23f4>
   1320c:	mov	r2, #5
   13210:	mov	r0, #0
   13214:	bl	10cf0 <dcgettext@plt>
   13218:	ldr	r3, [r4, #32]
   1321c:	mov	r1, #1
   13220:	str	r3, [sp, #28]
   13224:	ldr	r3, [r4, #28]
   13228:	str	r3, [sp, #24]
   1322c:	ldr	r3, [r4, #24]
   13230:	str	r3, [sp, #20]
   13234:	ldr	r3, [r4, #20]
   13238:	str	r3, [sp, #16]
   1323c:	ldr	r3, [r4, #16]
   13240:	str	r3, [sp, #12]
   13244:	ldr	r3, [r4, #12]
   13248:	str	r3, [sp, #8]
   1324c:	ldr	r3, [r4, #8]
   13250:	str	r3, [sp, #4]
   13254:	ldr	r3, [r4, #4]
   13258:	str	r3, [sp]
   1325c:	ldr	r3, [r4]
   13260:	mov	r2, r0
   13264:	mov	r0, r5
   13268:	bl	10e28 <__fprintf_chk@plt>
   1326c:	b	130b0 <putchar_unlocked@plt+0x21ec>
   13270:	mov	r2, #5
   13274:	ldr	r1, [pc, #64]	; 132bc <putchar_unlocked@plt+0x23f8>
   13278:	b	13210 <putchar_unlocked@plt+0x234c>
   1327c:	andeq	r4, r1, r7, lsr #13
   13280:			; <UNDEFINED> instruction: 0x000146ba
   13284:	andeq	r0, r0, r6, ror #15
   13288:	andeq	r4, r1, r8, lsl #19
   1328c:			; <UNDEFINED> instruction: 0x000146be
   13290:	andeq	r4, r1, r9, ror #14
   13294:			; <UNDEFINED> instruction: 0x000146b3
   13298:	andeq	r4, r1, fp, lsl #15
   1329c:	muleq	r1, fp, r7
   132a0:			; <UNDEFINED> instruction: 0x000147b2
   132a4:	andeq	r4, r1, lr, asr #15
   132a8:	andeq	r4, r1, lr, ror #15
   132ac:	andeq	r4, r1, r2, lsl r8
   132b0:	andeq	r4, r1, sl, lsr r8
   132b4:	andeq	r4, r1, r6, ror #16
   132b8:	muleq	r1, r6, r8
   132bc:	andeq	r4, r1, sl, asr #17
   132c0:	push	{r0, r1, r4, lr}
   132c4:	mov	ip, #0
   132c8:	ldr	lr, [sp, #16]
   132cc:	ldr	r4, [lr, ip, lsl #2]
   132d0:	cmp	r4, #0
   132d4:	bne	132ec <putchar_unlocked@plt+0x2428>
   132d8:	str	ip, [sp, #4]
   132dc:	str	lr, [sp]
   132e0:	bl	12ef4 <putchar_unlocked@plt+0x2030>
   132e4:	add	sp, sp, #8
   132e8:	pop	{r4, pc}
   132ec:	add	ip, ip, #1
   132f0:	b	132cc <putchar_unlocked@plt+0x2408>
   132f4:	push	{r4, r5, lr}
   132f8:	sub	sp, sp, #52	; 0x34
   132fc:	mov	ip, #0
   13300:	ldr	r5, [sp, #64]	; 0x40
   13304:	add	lr, sp, #8
   13308:	ldr	r4, [r5, ip, lsl #2]
   1330c:	cmp	r4, #0
   13310:	str	r4, [lr, ip, lsl #2]
   13314:	beq	13324 <putchar_unlocked@plt+0x2460>
   13318:	add	ip, ip, #1
   1331c:	cmp	ip, #10
   13320:	bne	13308 <putchar_unlocked@plt+0x2444>
   13324:	str	ip, [sp, #4]
   13328:	str	lr, [sp]
   1332c:	bl	12ef4 <putchar_unlocked@plt+0x2030>
   13330:	add	sp, sp, #52	; 0x34
   13334:	pop	{r4, r5, pc}
   13338:	push	{r3}		; (str r3, [sp, #-4]!)
   1333c:	push	{r0, r1, r2, r3, lr}
   13340:	add	r3, sp, #24
   13344:	str	r3, [sp, #12]
   13348:	str	r3, [sp]
   1334c:	ldr	r3, [sp, #20]
   13350:	bl	132f4 <putchar_unlocked@plt+0x2430>
   13354:	add	sp, sp, #16
   13358:	pop	{lr}		; (ldr lr, [sp], #4)
   1335c:	add	sp, sp, #4
   13360:	bx	lr
   13364:	ldr	r3, [pc, #116]	; 133e0 <putchar_unlocked@plt+0x251c>
   13368:	push	{r4, lr}
   1336c:	mov	r0, #10
   13370:	ldr	r1, [r3]
   13374:	bl	10ce4 <fputc_unlocked@plt>
   13378:	mov	r2, #5
   1337c:	ldr	r1, [pc, #96]	; 133e4 <putchar_unlocked@plt+0x2520>
   13380:	mov	r0, #0
   13384:	bl	10cf0 <dcgettext@plt>
   13388:	ldr	r2, [pc, #88]	; 133e8 <putchar_unlocked@plt+0x2524>
   1338c:	mov	r1, r0
   13390:	mov	r0, #1
   13394:	bl	10e10 <__printf_chk@plt>
   13398:	mov	r2, #5
   1339c:	ldr	r1, [pc, #72]	; 133ec <putchar_unlocked@plt+0x2528>
   133a0:	mov	r0, #0
   133a4:	bl	10cf0 <dcgettext@plt>
   133a8:	ldr	r3, [pc, #64]	; 133f0 <putchar_unlocked@plt+0x252c>
   133ac:	ldr	r2, [pc, #64]	; 133f4 <putchar_unlocked@plt+0x2530>
   133b0:	mov	r1, r0
   133b4:	mov	r0, #1
   133b8:	bl	10e10 <__printf_chk@plt>
   133bc:	mov	r2, #5
   133c0:	ldr	r1, [pc, #48]	; 133f8 <putchar_unlocked@plt+0x2534>
   133c4:	mov	r0, #0
   133c8:	bl	10cf0 <dcgettext@plt>
   133cc:	ldr	r2, [pc, #40]	; 133fc <putchar_unlocked@plt+0x2538>
   133d0:	pop	{r4, lr}
   133d4:	mov	r1, r0
   133d8:	mov	r0, #1
   133dc:	b	10e10 <__printf_chk@plt>
   133e0:	andeq	r5, r2, r4, asr #2
   133e4:	andeq	r4, r1, r6, lsl #18
   133e8:	andeq	r4, r1, sl, lsl r9
   133ec:	andeq	r4, r1, r0, lsr r9
   133f0:	ldrdeq	r4, [r1], -r1
   133f4:	strdeq	r4, [r1], -r9
   133f8:	andeq	r4, r1, r4, asr #18
   133fc:	andeq	r4, r1, fp, ror #18
   13400:	push	{r4, lr}
   13404:	bl	1391c <putchar_unlocked@plt+0x2a58>
   13408:	cmp	r0, #0
   1340c:	popne	{r4, pc}
   13410:	bl	13894 <putchar_unlocked@plt+0x29d0>
   13414:	push	{r4, lr}
   13418:	bl	1391c <putchar_unlocked@plt+0x2a58>
   1341c:	cmp	r0, #0
   13420:	popne	{r4, pc}
   13424:	bl	13894 <putchar_unlocked@plt+0x29d0>
   13428:	b	13400 <putchar_unlocked@plt+0x253c>
   1342c:	push	{r4, r5, r6, lr}
   13430:	mov	r5, r0
   13434:	mov	r4, r1
   13438:	bl	1395c <putchar_unlocked@plt+0x2a98>
   1343c:	cmp	r0, #0
   13440:	popne	{r4, r5, r6, pc}
   13444:	adds	r4, r4, #0
   13448:	movne	r4, #1
   1344c:	cmp	r5, #0
   13450:	orreq	r4, r4, #1
   13454:	cmp	r4, #0
   13458:	popeq	{r4, r5, r6, pc}
   1345c:	bl	13894 <putchar_unlocked@plt+0x29d0>
   13460:	push	{r4, lr}
   13464:	cmp	r1, #0
   13468:	orreq	r1, r1, #1
   1346c:	bl	1395c <putchar_unlocked@plt+0x2a98>
   13470:	cmp	r0, #0
   13474:	popne	{r4, pc}
   13478:	bl	13894 <putchar_unlocked@plt+0x29d0>
   1347c:	push	{r4, r5, r6, lr}
   13480:	mov	r6, r0
   13484:	mov	r5, r1
   13488:	mov	r4, r2
   1348c:	bl	13c38 <putchar_unlocked@plt+0x2d74>
   13490:	cmp	r0, #0
   13494:	popne	{r4, r5, r6, pc}
   13498:	cmp	r6, #0
   1349c:	beq	134ac <putchar_unlocked@plt+0x25e8>
   134a0:	cmp	r5, #0
   134a4:	cmpne	r4, #0
   134a8:	popeq	{r4, r5, r6, pc}
   134ac:	bl	13894 <putchar_unlocked@plt+0x29d0>
   134b0:	b	1347c <putchar_unlocked@plt+0x25b8>
   134b4:	cmp	r2, #0
   134b8:	cmpne	r1, #0
   134bc:	moveq	r2, #1
   134c0:	moveq	r1, r2
   134c4:	push	{r4, lr}
   134c8:	bl	13c38 <putchar_unlocked@plt+0x2d74>
   134cc:	cmp	r0, #0
   134d0:	popne	{r4, pc}
   134d4:	bl	13894 <putchar_unlocked@plt+0x29d0>
   134d8:	mov	r2, r1
   134dc:	mov	r1, r0
   134e0:	mov	r0, #0
   134e4:	b	1347c <putchar_unlocked@plt+0x25b8>
   134e8:	mov	r2, r1
   134ec:	mov	r1, r0
   134f0:	mov	r0, #0
   134f4:	b	134b4 <putchar_unlocked@plt+0x25f0>
   134f8:	push	{r4, r5, r6, r7, r8, lr}
   134fc:	subs	r7, r0, #0
   13500:	mov	r5, r1
   13504:	mov	r6, r2
   13508:	ldr	r4, [r1]
   1350c:	bne	13548 <putchar_unlocked@plt+0x2684>
   13510:	cmp	r4, #0
   13514:	bne	13530 <putchar_unlocked@plt+0x266c>
   13518:	mov	r1, r2
   1351c:	mov	r0, #64	; 0x40
   13520:	bl	13d64 <putchar_unlocked@plt+0x2ea0>
   13524:	cmp	r0, #0
   13528:	movne	r4, r0
   1352c:	addeq	r4, r0, #1
   13530:	mov	r2, r6
   13534:	mov	r1, r4
   13538:	mov	r0, r7
   1353c:	bl	1347c <putchar_unlocked@plt+0x25b8>
   13540:	str	r4, [r5]
   13544:	pop	{r4, r5, r6, r7, r8, pc}
   13548:	lsr	r2, r4, #1
   1354c:	add	r3, r2, #1
   13550:	mvn	r3, r3
   13554:	cmp	r4, r3
   13558:	addls	r4, r4, #1
   1355c:	addls	r4, r4, r2
   13560:	bls	13530 <putchar_unlocked@plt+0x266c>
   13564:	bl	13894 <putchar_unlocked@plt+0x29d0>
   13568:	mov	r2, #1
   1356c:	b	134f8 <putchar_unlocked@plt+0x2634>
   13570:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13574:	mov	sl, r0
   13578:	ldr	r8, [r1]
   1357c:	mov	fp, r1
   13580:	mov	r5, r2
   13584:	asrs	r4, r8, #1
   13588:	mov	r9, r3
   1358c:	ldr	r7, [sp, #48]	; 0x30
   13590:	bpl	1362c <putchar_unlocked@plt+0x2768>
   13594:	rsb	r2, r4, #-2147483648	; 0x80000000
   13598:	cmp	r8, r2
   1359c:	movge	r2, #0
   135a0:	movlt	r2, #1
   135a4:	mvn	r3, r9
   135a8:	cmp	r2, #0
   135ac:	lsr	r3, r3, #31
   135b0:	addeq	r4, r4, r8
   135b4:	mvnne	r4, #-2147483648	; 0x80000000
   135b8:	mov	r0, r3
   135bc:	cmp	r9, r4
   135c0:	movge	r0, #0
   135c4:	andlt	r0, r0, #1
   135c8:	cmp	r0, #0
   135cc:	str	r3, [sp, #4]
   135d0:	bne	137a0 <putchar_unlocked@plt+0x28dc>
   135d4:	cmp	r7, #0
   135d8:	bge	136ec <putchar_unlocked@plt+0x2828>
   135dc:	cmp	r4, #0
   135e0:	bge	13644 <putchar_unlocked@plt+0x2780>
   135e4:	mov	r1, r7
   135e8:	mvn	r0, #-2147483648	; 0x80000000
   135ec:	bl	13f70 <putchar_unlocked@plt+0x30ac>
   135f0:	cmp	r0, r4
   135f4:	movle	r0, #0
   135f8:	movgt	r0, #1
   135fc:	cmp	r0, #0
   13600:	mvnne	r6, #-2147483648	; 0x80000000
   13604:	beq	13654 <putchar_unlocked@plt+0x2790>
   13608:	mov	r1, r7
   1360c:	mov	r0, r6
   13610:	bl	13f70 <putchar_unlocked@plt+0x30ac>
   13614:	mov	r1, r7
   13618:	mov	r4, r0
   1361c:	mov	r0, r6
   13620:	bl	14190 <putchar_unlocked@plt+0x32cc>
   13624:	sub	r1, r6, r1
   13628:	b	13664 <putchar_unlocked@plt+0x27a0>
   1362c:	mvn	r2, #-2147483648	; 0x80000000
   13630:	sub	r2, r2, r4
   13634:	cmp	r8, r2
   13638:	movle	r2, #0
   1363c:	movgt	r2, #1
   13640:	b	135a4 <putchar_unlocked@plt+0x26e0>
   13644:	cmn	r7, #1
   13648:	movne	r1, r7
   1364c:	movne	r0, #-2147483648	; 0x80000000
   13650:	bne	137b8 <putchar_unlocked@plt+0x28f4>
   13654:	mul	r1, r7, r4
   13658:	cmp	r1, #63	; 0x3f
   1365c:	movle	r6, #64	; 0x40
   13660:	ble	13608 <putchar_unlocked@plt+0x2744>
   13664:	cmp	sl, #0
   13668:	sub	r2, r4, r8
   1366c:	streq	sl, [fp]
   13670:	cmp	r2, r5
   13674:	bge	13748 <putchar_unlocked@plt+0x2884>
   13678:	cmp	r5, #0
   1367c:	bge	13714 <putchar_unlocked@plt+0x2850>
   13680:	rsb	r2, r5, #-2147483648	; 0x80000000
   13684:	cmp	r8, r2
   13688:	movge	r2, #0
   1368c:	movlt	r2, #1
   13690:	cmp	r2, #0
   13694:	bne	136e8 <putchar_unlocked@plt+0x2824>
   13698:	ldr	r0, [sp, #4]
   1369c:	add	r5, r8, r5
   136a0:	cmp	r9, r5
   136a4:	movge	r0, #0
   136a8:	andlt	r0, r0, #1
   136ac:	cmp	r0, #0
   136b0:	mov	r4, r5
   136b4:	bne	136e8 <putchar_unlocked@plt+0x2824>
   136b8:	cmp	r7, #0
   136bc:	bge	1375c <putchar_unlocked@plt+0x2898>
   136c0:	cmp	r5, #0
   136c4:	bge	13734 <putchar_unlocked@plt+0x2870>
   136c8:	mov	r1, r7
   136cc:	mvn	r0, #-2147483648	; 0x80000000
   136d0:	bl	13f70 <putchar_unlocked@plt+0x30ac>
   136d4:	cmp	r5, r0
   136d8:	movge	r0, #0
   136dc:	movlt	r0, #1
   136e0:	cmp	r0, #0
   136e4:	beq	13744 <putchar_unlocked@plt+0x2880>
   136e8:	bl	13894 <putchar_unlocked@plt+0x29d0>
   136ec:	beq	13654 <putchar_unlocked@plt+0x2790>
   136f0:	cmp	r4, #0
   136f4:	bge	137b0 <putchar_unlocked@plt+0x28ec>
   136f8:	cmn	r4, #1
   136fc:	beq	13654 <putchar_unlocked@plt+0x2790>
   13700:	mov	r1, r4
   13704:	mov	r0, #-2147483648	; 0x80000000
   13708:	bl	13f70 <putchar_unlocked@plt+0x30ac>
   1370c:	cmp	r7, r0
   13710:	b	135f4 <putchar_unlocked@plt+0x2730>
   13714:	cmp	r8, #0
   13718:	blt	13698 <putchar_unlocked@plt+0x27d4>
   1371c:	mvn	r2, #-2147483648	; 0x80000000
   13720:	sub	r2, r2, r5
   13724:	cmp	r8, r2
   13728:	movle	r2, #0
   1372c:	movgt	r2, #1
   13730:	b	13690 <putchar_unlocked@plt+0x27cc>
   13734:	cmn	r7, #1
   13738:	movne	r1, r7
   1373c:	movne	r0, #-2147483648	; 0x80000000
   13740:	bne	13794 <putchar_unlocked@plt+0x28d0>
   13744:	mul	r1, r5, r7
   13748:	mov	r0, sl
   1374c:	bl	1342c <putchar_unlocked@plt+0x2568>
   13750:	str	r4, [fp]
   13754:	add	sp, sp, #12
   13758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1375c:	beq	13744 <putchar_unlocked@plt+0x2880>
   13760:	cmp	r5, #0
   13764:	movge	r1, r7
   13768:	mvnge	r0, #-2147483648	; 0x80000000
   1376c:	bge	13794 <putchar_unlocked@plt+0x28d0>
   13770:	cmn	r5, #1
   13774:	beq	13744 <putchar_unlocked@plt+0x2880>
   13778:	mov	r1, r5
   1377c:	mov	r0, #-2147483648	; 0x80000000
   13780:	bl	13f70 <putchar_unlocked@plt+0x30ac>
   13784:	cmp	r7, r0
   13788:	movle	r0, #0
   1378c:	movgt	r0, #1
   13790:	b	136e0 <putchar_unlocked@plt+0x281c>
   13794:	bl	13f70 <putchar_unlocked@plt+0x30ac>
   13798:	cmp	r5, r0
   1379c:	b	13788 <putchar_unlocked@plt+0x28c4>
   137a0:	cmp	r7, #0
   137a4:	mov	r4, r9
   137a8:	blt	13644 <putchar_unlocked@plt+0x2780>
   137ac:	beq	13654 <putchar_unlocked@plt+0x2790>
   137b0:	mov	r1, r7
   137b4:	mvn	r0, #-2147483648	; 0x80000000
   137b8:	bl	13f70 <putchar_unlocked@plt+0x30ac>
   137bc:	cmp	r0, r4
   137c0:	movge	r0, #0
   137c4:	movlt	r0, #1
   137c8:	b	135fc <putchar_unlocked@plt+0x2738>
   137cc:	push	{r4, lr}
   137d0:	bl	138d4 <putchar_unlocked@plt+0x2a10>
   137d4:	cmp	r0, #0
   137d8:	popne	{r4, pc}
   137dc:	bl	13894 <putchar_unlocked@plt+0x29d0>
   137e0:	mov	r1, #1
   137e4:	b	137cc <putchar_unlocked@plt+0x2908>
   137e8:	push	{r4, lr}
   137ec:	bl	138d4 <putchar_unlocked@plt+0x2a10>
   137f0:	cmp	r0, #0
   137f4:	popne	{r4, pc}
   137f8:	bl	13894 <putchar_unlocked@plt+0x29d0>
   137fc:	mov	r1, #1
   13800:	b	137e8 <putchar_unlocked@plt+0x2924>
   13804:	push	{r4, r5, r6, lr}
   13808:	mov	r4, r1
   1380c:	mov	r5, r0
   13810:	mov	r0, r1
   13814:	bl	13400 <putchar_unlocked@plt+0x253c>
   13818:	mov	r2, r4
   1381c:	mov	r1, r5
   13820:	pop	{r4, r5, r6, lr}
   13824:	b	10cc0 <memcpy@plt>
   13828:	push	{r4, r5, r6, lr}
   1382c:	mov	r4, r1
   13830:	mov	r5, r0
   13834:	mov	r0, r1
   13838:	bl	13414 <putchar_unlocked@plt+0x2550>
   1383c:	mov	r2, r4
   13840:	mov	r1, r5
   13844:	pop	{r4, r5, r6, lr}
   13848:	b	10cc0 <memcpy@plt>
   1384c:	push	{r4, r5, r6, lr}
   13850:	mov	r5, r0
   13854:	add	r0, r1, #1
   13858:	mov	r4, r1
   1385c:	bl	13414 <putchar_unlocked@plt+0x2550>
   13860:	mov	r2, #0
   13864:	mov	r1, r5
   13868:	strb	r2, [r0, r4]
   1386c:	mov	r2, r4
   13870:	pop	{r4, r5, r6, lr}
   13874:	b	10cc0 <memcpy@plt>
   13878:	push	{r4, lr}
   1387c:	mov	r4, r0
   13880:	bl	10dd4 <strlen@plt>
   13884:	add	r1, r0, #1
   13888:	mov	r0, r4
   1388c:	pop	{r4, lr}
   13890:	b	13804 <putchar_unlocked@plt+0x2940>
   13894:	ldr	r3, [pc, #44]	; 138c8 <putchar_unlocked@plt+0x2a04>
   13898:	push	{r4, lr}
   1389c:	mov	r2, #5
   138a0:	ldr	r1, [pc, #36]	; 138cc <putchar_unlocked@plt+0x2a08>
   138a4:	mov	r0, #0
   138a8:	ldr	r4, [r3]
   138ac:	bl	10cf0 <dcgettext@plt>
   138b0:	ldr	r2, [pc, #24]	; 138d0 <putchar_unlocked@plt+0x2a0c>
   138b4:	mov	r1, #0
   138b8:	mov	r3, r0
   138bc:	mov	r0, r4
   138c0:	bl	10d68 <error@plt>
   138c4:	bl	10eac <abort@plt>
   138c8:	andeq	r5, r2, ip, ror #1
   138cc:			; <UNDEFINED> instruction: 0x000149b7
   138d0:	andeq	r4, r1, r8, ror #10
   138d4:	cmp	r1, #0
   138d8:	cmpne	r0, #0
   138dc:	moveq	r1, #1
   138e0:	moveq	r0, r1
   138e4:	umull	r2, r3, r0, r1
   138e8:	adds	r3, r3, #0
   138ec:	movne	r3, #1
   138f0:	cmp	r2, #0
   138f4:	blt	13904 <putchar_unlocked@plt+0x2a40>
   138f8:	cmp	r3, #0
   138fc:	bne	13904 <putchar_unlocked@plt+0x2a40>
   13900:	b	10c60 <calloc@plt>
   13904:	push	{r4, lr}
   13908:	bl	10de0 <__errno_location@plt>
   1390c:	mov	r3, #12
   13910:	str	r3, [r0]
   13914:	mov	r0, #0
   13918:	pop	{r4, pc}
   1391c:	cmp	r0, #0
   13920:	mov	r3, #0
   13924:	moveq	r0, #1
   13928:	adds	r3, r3, #0
   1392c:	movne	r3, #1
   13930:	cmp	r0, #0
   13934:	blt	13944 <putchar_unlocked@plt+0x2a80>
   13938:	cmp	r3, #0
   1393c:	bne	13944 <putchar_unlocked@plt+0x2a80>
   13940:	b	10d74 <malloc@plt>
   13944:	push	{r4, lr}
   13948:	bl	10de0 <__errno_location@plt>
   1394c:	mov	r3, #12
   13950:	str	r3, [r0]
   13954:	mov	r0, #0
   13958:	pop	{r4, pc}
   1395c:	cmp	r0, #0
   13960:	push	{r4, lr}
   13964:	mov	r4, r1
   13968:	bne	13978 <putchar_unlocked@plt+0x2ab4>
   1396c:	mov	r0, r1
   13970:	pop	{r4, lr}
   13974:	b	1391c <putchar_unlocked@plt+0x2a58>
   13978:	cmp	r1, #0
   1397c:	bne	1398c <putchar_unlocked@plt+0x2ac8>
   13980:	bl	115a0 <putchar_unlocked@plt+0x6dc>
   13984:	mov	r0, #0
   13988:	pop	{r4, pc}
   1398c:	cmp	r1, #0
   13990:	blt	139a0 <putchar_unlocked@plt+0x2adc>
   13994:	mov	r3, #0
   13998:	cmp	r3, r3
   1399c:	beq	139b0 <putchar_unlocked@plt+0x2aec>
   139a0:	bl	10de0 <__errno_location@plt>
   139a4:	mov	r3, #12
   139a8:	str	r3, [r0]
   139ac:	b	13984 <putchar_unlocked@plt+0x2ac0>
   139b0:	pop	{r4, lr}
   139b4:	b	10d08 <realloc@plt>
   139b8:	push	{r4, r5, r6, lr}
   139bc:	mov	r4, r0
   139c0:	bl	10d44 <__fpending@plt>
   139c4:	mov	r5, r0
   139c8:	mov	r0, r4
   139cc:	bl	10d50 <ferror_unlocked@plt>
   139d0:	mov	r6, r0
   139d4:	mov	r0, r4
   139d8:	bl	13a28 <putchar_unlocked@plt+0x2b64>
   139dc:	cmp	r6, #0
   139e0:	mov	r4, r0
   139e4:	bne	13a10 <putchar_unlocked@plt+0x2b4c>
   139e8:	cmp	r0, #0
   139ec:	beq	13a08 <putchar_unlocked@plt+0x2b44>
   139f0:	cmp	r5, #0
   139f4:	bne	13a20 <putchar_unlocked@plt+0x2b5c>
   139f8:	bl	10de0 <__errno_location@plt>
   139fc:	ldr	r4, [r0]
   13a00:	subs	r4, r4, #9
   13a04:	mvnne	r4, #0
   13a08:	mov	r0, r4
   13a0c:	pop	{r4, r5, r6, pc}
   13a10:	cmp	r0, #0
   13a14:	bne	13a20 <putchar_unlocked@plt+0x2b5c>
   13a18:	bl	10de0 <__errno_location@plt>
   13a1c:	str	r4, [r0]
   13a20:	mvn	r4, #0
   13a24:	b	13a08 <putchar_unlocked@plt+0x2b44>
   13a28:	push	{r0, r1, r2, r4, r5, lr}
   13a2c:	mov	r4, r0
   13a30:	bl	10e1c <fileno@plt>
   13a34:	cmp	r0, #0
   13a38:	mov	r0, r4
   13a3c:	bge	13a4c <putchar_unlocked@plt+0x2b88>
   13a40:	add	sp, sp, #12
   13a44:	pop	{r4, r5, lr}
   13a48:	b	10e34 <fclose@plt>
   13a4c:	bl	10d8c <__freading@plt>
   13a50:	cmp	r0, #0
   13a54:	bne	13a90 <putchar_unlocked@plt+0x2bcc>
   13a58:	mov	r0, r4
   13a5c:	bl	13ad0 <putchar_unlocked@plt+0x2c0c>
   13a60:	cmp	r0, #0
   13a64:	bne	13ac4 <putchar_unlocked@plt+0x2c00>
   13a68:	mov	r5, #0
   13a6c:	mov	r0, r4
   13a70:	bl	10e34 <fclose@plt>
   13a74:	cmp	r5, #0
   13a78:	beq	13a88 <putchar_unlocked@plt+0x2bc4>
   13a7c:	bl	10de0 <__errno_location@plt>
   13a80:	str	r5, [r0]
   13a84:	mvn	r0, #0
   13a88:	add	sp, sp, #12
   13a8c:	pop	{r4, r5, pc}
   13a90:	mov	r0, r4
   13a94:	bl	10e1c <fileno@plt>
   13a98:	mov	r3, #1
   13a9c:	str	r3, [sp]
   13aa0:	mov	r2, #0
   13aa4:	mov	r3, #0
   13aa8:	bl	10d2c <lseek64@plt>
   13aac:	mvn	r3, #0
   13ab0:	mvn	r2, #0
   13ab4:	cmp	r1, r3
   13ab8:	cmpeq	r0, r2
   13abc:	bne	13a58 <putchar_unlocked@plt+0x2b94>
   13ac0:	b	13a68 <putchar_unlocked@plt+0x2ba4>
   13ac4:	bl	10de0 <__errno_location@plt>
   13ac8:	ldr	r5, [r0]
   13acc:	b	13a6c <putchar_unlocked@plt+0x2ba8>
   13ad0:	push	{r0, r1, r4, lr}
   13ad4:	subs	r4, r0, #0
   13ad8:	bne	13aec <putchar_unlocked@plt+0x2c28>
   13adc:	mov	r0, r4
   13ae0:	add	sp, sp, #8
   13ae4:	pop	{r4, lr}
   13ae8:	b	10c90 <fflush@plt>
   13aec:	bl	10d8c <__freading@plt>
   13af0:	cmp	r0, #0
   13af4:	beq	13adc <putchar_unlocked@plt+0x2c18>
   13af8:	ldr	r3, [r4]
   13afc:	tst	r3, #256	; 0x100
   13b00:	beq	13adc <putchar_unlocked@plt+0x2c18>
   13b04:	mov	r3, #1
   13b08:	str	r3, [sp]
   13b0c:	mov	r2, #0
   13b10:	mov	r3, #0
   13b14:	mov	r0, r4
   13b18:	bl	13b20 <putchar_unlocked@plt+0x2c5c>
   13b1c:	b	13adc <putchar_unlocked@plt+0x2c18>
   13b20:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13b24:	mov	r4, r0
   13b28:	ldmib	r0, {ip, lr}
   13b2c:	ldr	r8, [sp, #32]
   13b30:	cmp	lr, ip
   13b34:	bne	13ba0 <putchar_unlocked@plt+0x2cdc>
   13b38:	ldr	lr, [r0, #20]
   13b3c:	ldr	ip, [r0, #16]
   13b40:	cmp	lr, ip
   13b44:	bne	13ba0 <putchar_unlocked@plt+0x2cdc>
   13b48:	ldr	r5, [r0, #36]	; 0x24
   13b4c:	cmp	r5, #0
   13b50:	bne	13ba0 <putchar_unlocked@plt+0x2cdc>
   13b54:	mov	r6, r2
   13b58:	mov	r7, r3
   13b5c:	bl	10e1c <fileno@plt>
   13b60:	mov	r2, r6
   13b64:	mov	r3, r7
   13b68:	str	r8, [sp]
   13b6c:	bl	10d2c <lseek64@plt>
   13b70:	mvn	r3, #0
   13b74:	mvn	r2, #0
   13b78:	cmp	r1, r3
   13b7c:	cmpeq	r0, r2
   13b80:	mvneq	r0, #0
   13b84:	ldrne	r3, [r4]
   13b88:	strdne	r0, [r4, #80]	; 0x50
   13b8c:	movne	r0, r5
   13b90:	bicne	r3, r3, #16
   13b94:	strne	r3, [r4]
   13b98:	add	sp, sp, #8
   13b9c:	pop	{r4, r5, r6, r7, r8, pc}
   13ba0:	str	r8, [sp, #32]
   13ba4:	mov	r0, r4
   13ba8:	add	sp, sp, #8
   13bac:	pop	{r4, r5, r6, r7, r8, lr}
   13bb0:	b	10e40 <fseeko64@plt>
   13bb4:	push	{r4, lr}
   13bb8:	mov	r0, #14
   13bbc:	bl	10e70 <nl_langinfo@plt>
   13bc0:	ldr	r3, [pc, #24]	; 13be0 <putchar_unlocked@plt+0x2d1c>
   13bc4:	cmp	r0, #0
   13bc8:	moveq	r0, r3
   13bcc:	ldr	r3, [pc, #16]	; 13be4 <putchar_unlocked@plt+0x2d20>
   13bd0:	ldrb	r2, [r0]
   13bd4:	cmp	r2, #0
   13bd8:	moveq	r0, r3
   13bdc:	pop	{r4, pc}
   13be0:	andeq	r4, r1, sl, lsr r3
   13be4:	andeq	r4, r1, r8, asr #19
   13be8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13bec:	subs	r5, r0, #0
   13bf0:	addeq	r5, sp, #4
   13bf4:	mov	r0, r5
   13bf8:	mov	r7, r2
   13bfc:	mov	r6, r1
   13c00:	bl	10d5c <mbrtowc@plt>
   13c04:	cmp	r7, #0
   13c08:	cmnne	r0, #3
   13c0c:	mov	r4, r0
   13c10:	bls	13c2c <putchar_unlocked@plt+0x2d68>
   13c14:	mov	r0, #0
   13c18:	bl	13c84 <putchar_unlocked@plt+0x2dc0>
   13c1c:	cmp	r0, #0
   13c20:	moveq	r4, #1
   13c24:	ldrbeq	r3, [r6]
   13c28:	streq	r3, [r5]
   13c2c:	mov	r0, r4
   13c30:	add	sp, sp, #12
   13c34:	pop	{r4, r5, r6, r7, pc}
   13c38:	push	{r4, r5, r6, lr}
   13c3c:	subs	r4, r2, #0
   13c40:	mov	r6, r0
   13c44:	mov	r5, r1
   13c48:	beq	13c60 <putchar_unlocked@plt+0x2d9c>
   13c4c:	mov	r1, r4
   13c50:	mvn	r0, #0
   13c54:	bl	13d64 <putchar_unlocked@plt+0x2ea0>
   13c58:	cmp	r0, r5
   13c5c:	bcc	13c70 <putchar_unlocked@plt+0x2dac>
   13c60:	mul	r1, r5, r4
   13c64:	mov	r0, r6
   13c68:	pop	{r4, r5, r6, lr}
   13c6c:	b	1395c <putchar_unlocked@plt+0x2a98>
   13c70:	bl	10de0 <__errno_location@plt>
   13c74:	mov	r3, #12
   13c78:	str	r3, [r0]
   13c7c:	mov	r0, #0
   13c80:	pop	{r4, r5, r6, pc}
   13c84:	push	{lr}		; (str lr, [sp, #-4]!)
   13c88:	sub	sp, sp, #268	; 0x10c
   13c8c:	ldr	r2, [pc, #64]	; 13cd4 <putchar_unlocked@plt+0x2e10>
   13c90:	add	r1, sp, #4
   13c94:	bl	13ce0 <putchar_unlocked@plt+0x2e1c>
   13c98:	cmp	r0, #0
   13c9c:	movne	r0, #0
   13ca0:	bne	13ccc <putchar_unlocked@plt+0x2e08>
   13ca4:	ldr	r1, [pc, #44]	; 13cd8 <putchar_unlocked@plt+0x2e14>
   13ca8:	add	r0, sp, #4
   13cac:	bl	10c84 <strcmp@plt>
   13cb0:	cmp	r0, #0
   13cb4:	beq	13ccc <putchar_unlocked@plt+0x2e08>
   13cb8:	ldr	r1, [pc, #28]	; 13cdc <putchar_unlocked@plt+0x2e18>
   13cbc:	add	r0, sp, #4
   13cc0:	bl	10c84 <strcmp@plt>
   13cc4:	adds	r0, r0, #0
   13cc8:	movne	r0, #1
   13ccc:	add	sp, sp, #268	; 0x10c
   13cd0:	pop	{pc}		; (ldr pc, [sp], #4)
   13cd4:	andeq	r0, r0, r1, lsl #2
   13cd8:	andeq	r4, r1, lr, asr #19
   13cdc:	ldrdeq	r4, [r1], -r0
   13ce0:	push	{r4, r5, r6, lr}
   13ce4:	mov	r5, r1
   13ce8:	mov	r1, #0
   13cec:	mov	r4, r2
   13cf0:	bl	10e58 <setlocale@plt>
   13cf4:	subs	r6, r0, #0
   13cf8:	bne	13d0c <putchar_unlocked@plt+0x2e48>
   13cfc:	cmp	r4, #0
   13d00:	strbne	r6, [r5]
   13d04:	mov	r0, #22
   13d08:	pop	{r4, r5, r6, pc}
   13d0c:	bl	10dd4 <strlen@plt>
   13d10:	cmp	r4, r0
   13d14:	bls	13d30 <putchar_unlocked@plt+0x2e6c>
   13d18:	add	r2, r0, #1
   13d1c:	mov	r1, r6
   13d20:	mov	r0, r5
   13d24:	bl	10cc0 <memcpy@plt>
   13d28:	mov	r0, #0
   13d2c:	pop	{r4, r5, r6, pc}
   13d30:	cmp	r4, #0
   13d34:	beq	13d54 <putchar_unlocked@plt+0x2e90>
   13d38:	sub	r4, r4, #1
   13d3c:	mov	r2, r4
   13d40:	mov	r1, r6
   13d44:	mov	r0, r5
   13d48:	bl	10cc0 <memcpy@plt>
   13d4c:	mov	r3, #0
   13d50:	strb	r3, [r5, r4]
   13d54:	mov	r0, #34	; 0x22
   13d58:	pop	{r4, r5, r6, pc}
   13d5c:	mov	r1, #0
   13d60:	b	10e58 <setlocale@plt>
   13d64:	subs	r2, r1, #1
   13d68:	bxeq	lr
   13d6c:	bcc	13f44 <putchar_unlocked@plt+0x3080>
   13d70:	cmp	r0, r1
   13d74:	bls	13f28 <putchar_unlocked@plt+0x3064>
   13d78:	tst	r1, r2
   13d7c:	beq	13f34 <putchar_unlocked@plt+0x3070>
   13d80:	clz	r3, r0
   13d84:	clz	r2, r1
   13d88:	sub	r3, r2, r3
   13d8c:	rsbs	r3, r3, #31
   13d90:	addne	r3, r3, r3, lsl #1
   13d94:	mov	r2, #0
   13d98:	addne	pc, pc, r3, lsl #2
   13d9c:	nop			; (mov r0, r0)
   13da0:	cmp	r0, r1, lsl #31
   13da4:	adc	r2, r2, r2
   13da8:	subcs	r0, r0, r1, lsl #31
   13dac:	cmp	r0, r1, lsl #30
   13db0:	adc	r2, r2, r2
   13db4:	subcs	r0, r0, r1, lsl #30
   13db8:	cmp	r0, r1, lsl #29
   13dbc:	adc	r2, r2, r2
   13dc0:	subcs	r0, r0, r1, lsl #29
   13dc4:	cmp	r0, r1, lsl #28
   13dc8:	adc	r2, r2, r2
   13dcc:	subcs	r0, r0, r1, lsl #28
   13dd0:	cmp	r0, r1, lsl #27
   13dd4:	adc	r2, r2, r2
   13dd8:	subcs	r0, r0, r1, lsl #27
   13ddc:	cmp	r0, r1, lsl #26
   13de0:	adc	r2, r2, r2
   13de4:	subcs	r0, r0, r1, lsl #26
   13de8:	cmp	r0, r1, lsl #25
   13dec:	adc	r2, r2, r2
   13df0:	subcs	r0, r0, r1, lsl #25
   13df4:	cmp	r0, r1, lsl #24
   13df8:	adc	r2, r2, r2
   13dfc:	subcs	r0, r0, r1, lsl #24
   13e00:	cmp	r0, r1, lsl #23
   13e04:	adc	r2, r2, r2
   13e08:	subcs	r0, r0, r1, lsl #23
   13e0c:	cmp	r0, r1, lsl #22
   13e10:	adc	r2, r2, r2
   13e14:	subcs	r0, r0, r1, lsl #22
   13e18:	cmp	r0, r1, lsl #21
   13e1c:	adc	r2, r2, r2
   13e20:	subcs	r0, r0, r1, lsl #21
   13e24:	cmp	r0, r1, lsl #20
   13e28:	adc	r2, r2, r2
   13e2c:	subcs	r0, r0, r1, lsl #20
   13e30:	cmp	r0, r1, lsl #19
   13e34:	adc	r2, r2, r2
   13e38:	subcs	r0, r0, r1, lsl #19
   13e3c:	cmp	r0, r1, lsl #18
   13e40:	adc	r2, r2, r2
   13e44:	subcs	r0, r0, r1, lsl #18
   13e48:	cmp	r0, r1, lsl #17
   13e4c:	adc	r2, r2, r2
   13e50:	subcs	r0, r0, r1, lsl #17
   13e54:	cmp	r0, r1, lsl #16
   13e58:	adc	r2, r2, r2
   13e5c:	subcs	r0, r0, r1, lsl #16
   13e60:	cmp	r0, r1, lsl #15
   13e64:	adc	r2, r2, r2
   13e68:	subcs	r0, r0, r1, lsl #15
   13e6c:	cmp	r0, r1, lsl #14
   13e70:	adc	r2, r2, r2
   13e74:	subcs	r0, r0, r1, lsl #14
   13e78:	cmp	r0, r1, lsl #13
   13e7c:	adc	r2, r2, r2
   13e80:	subcs	r0, r0, r1, lsl #13
   13e84:	cmp	r0, r1, lsl #12
   13e88:	adc	r2, r2, r2
   13e8c:	subcs	r0, r0, r1, lsl #12
   13e90:	cmp	r0, r1, lsl #11
   13e94:	adc	r2, r2, r2
   13e98:	subcs	r0, r0, r1, lsl #11
   13e9c:	cmp	r0, r1, lsl #10
   13ea0:	adc	r2, r2, r2
   13ea4:	subcs	r0, r0, r1, lsl #10
   13ea8:	cmp	r0, r1, lsl #9
   13eac:	adc	r2, r2, r2
   13eb0:	subcs	r0, r0, r1, lsl #9
   13eb4:	cmp	r0, r1, lsl #8
   13eb8:	adc	r2, r2, r2
   13ebc:	subcs	r0, r0, r1, lsl #8
   13ec0:	cmp	r0, r1, lsl #7
   13ec4:	adc	r2, r2, r2
   13ec8:	subcs	r0, r0, r1, lsl #7
   13ecc:	cmp	r0, r1, lsl #6
   13ed0:	adc	r2, r2, r2
   13ed4:	subcs	r0, r0, r1, lsl #6
   13ed8:	cmp	r0, r1, lsl #5
   13edc:	adc	r2, r2, r2
   13ee0:	subcs	r0, r0, r1, lsl #5
   13ee4:	cmp	r0, r1, lsl #4
   13ee8:	adc	r2, r2, r2
   13eec:	subcs	r0, r0, r1, lsl #4
   13ef0:	cmp	r0, r1, lsl #3
   13ef4:	adc	r2, r2, r2
   13ef8:	subcs	r0, r0, r1, lsl #3
   13efc:	cmp	r0, r1, lsl #2
   13f00:	adc	r2, r2, r2
   13f04:	subcs	r0, r0, r1, lsl #2
   13f08:	cmp	r0, r1, lsl #1
   13f0c:	adc	r2, r2, r2
   13f10:	subcs	r0, r0, r1, lsl #1
   13f14:	cmp	r0, r1
   13f18:	adc	r2, r2, r2
   13f1c:	subcs	r0, r0, r1
   13f20:	mov	r0, r2
   13f24:	bx	lr
   13f28:	moveq	r0, #1
   13f2c:	movne	r0, #0
   13f30:	bx	lr
   13f34:	clz	r2, r1
   13f38:	rsb	r2, r2, #31
   13f3c:	lsr	r0, r0, r2
   13f40:	bx	lr
   13f44:	cmp	r0, #0
   13f48:	mvnne	r0, #0
   13f4c:	b	141b0 <putchar_unlocked@plt+0x32ec>
   13f50:	cmp	r1, #0
   13f54:	beq	13f44 <putchar_unlocked@plt+0x3080>
   13f58:	push	{r0, r1, lr}
   13f5c:	bl	13d64 <putchar_unlocked@plt+0x2ea0>
   13f60:	pop	{r1, r2, lr}
   13f64:	mul	r3, r2, r0
   13f68:	sub	r1, r1, r3
   13f6c:	bx	lr
   13f70:	cmp	r1, #0
   13f74:	beq	14180 <putchar_unlocked@plt+0x32bc>
   13f78:	eor	ip, r0, r1
   13f7c:	rsbmi	r1, r1, #0
   13f80:	subs	r2, r1, #1
   13f84:	beq	1414c <putchar_unlocked@plt+0x3288>
   13f88:	movs	r3, r0
   13f8c:	rsbmi	r3, r0, #0
   13f90:	cmp	r3, r1
   13f94:	bls	14158 <putchar_unlocked@plt+0x3294>
   13f98:	tst	r1, r2
   13f9c:	beq	14168 <putchar_unlocked@plt+0x32a4>
   13fa0:	clz	r2, r3
   13fa4:	clz	r0, r1
   13fa8:	sub	r2, r0, r2
   13fac:	rsbs	r2, r2, #31
   13fb0:	addne	r2, r2, r2, lsl #1
   13fb4:	mov	r0, #0
   13fb8:	addne	pc, pc, r2, lsl #2
   13fbc:	nop			; (mov r0, r0)
   13fc0:	cmp	r3, r1, lsl #31
   13fc4:	adc	r0, r0, r0
   13fc8:	subcs	r3, r3, r1, lsl #31
   13fcc:	cmp	r3, r1, lsl #30
   13fd0:	adc	r0, r0, r0
   13fd4:	subcs	r3, r3, r1, lsl #30
   13fd8:	cmp	r3, r1, lsl #29
   13fdc:	adc	r0, r0, r0
   13fe0:	subcs	r3, r3, r1, lsl #29
   13fe4:	cmp	r3, r1, lsl #28
   13fe8:	adc	r0, r0, r0
   13fec:	subcs	r3, r3, r1, lsl #28
   13ff0:	cmp	r3, r1, lsl #27
   13ff4:	adc	r0, r0, r0
   13ff8:	subcs	r3, r3, r1, lsl #27
   13ffc:	cmp	r3, r1, lsl #26
   14000:	adc	r0, r0, r0
   14004:	subcs	r3, r3, r1, lsl #26
   14008:	cmp	r3, r1, lsl #25
   1400c:	adc	r0, r0, r0
   14010:	subcs	r3, r3, r1, lsl #25
   14014:	cmp	r3, r1, lsl #24
   14018:	adc	r0, r0, r0
   1401c:	subcs	r3, r3, r1, lsl #24
   14020:	cmp	r3, r1, lsl #23
   14024:	adc	r0, r0, r0
   14028:	subcs	r3, r3, r1, lsl #23
   1402c:	cmp	r3, r1, lsl #22
   14030:	adc	r0, r0, r0
   14034:	subcs	r3, r3, r1, lsl #22
   14038:	cmp	r3, r1, lsl #21
   1403c:	adc	r0, r0, r0
   14040:	subcs	r3, r3, r1, lsl #21
   14044:	cmp	r3, r1, lsl #20
   14048:	adc	r0, r0, r0
   1404c:	subcs	r3, r3, r1, lsl #20
   14050:	cmp	r3, r1, lsl #19
   14054:	adc	r0, r0, r0
   14058:	subcs	r3, r3, r1, lsl #19
   1405c:	cmp	r3, r1, lsl #18
   14060:	adc	r0, r0, r0
   14064:	subcs	r3, r3, r1, lsl #18
   14068:	cmp	r3, r1, lsl #17
   1406c:	adc	r0, r0, r0
   14070:	subcs	r3, r3, r1, lsl #17
   14074:	cmp	r3, r1, lsl #16
   14078:	adc	r0, r0, r0
   1407c:	subcs	r3, r3, r1, lsl #16
   14080:	cmp	r3, r1, lsl #15
   14084:	adc	r0, r0, r0
   14088:	subcs	r3, r3, r1, lsl #15
   1408c:	cmp	r3, r1, lsl #14
   14090:	adc	r0, r0, r0
   14094:	subcs	r3, r3, r1, lsl #14
   14098:	cmp	r3, r1, lsl #13
   1409c:	adc	r0, r0, r0
   140a0:	subcs	r3, r3, r1, lsl #13
   140a4:	cmp	r3, r1, lsl #12
   140a8:	adc	r0, r0, r0
   140ac:	subcs	r3, r3, r1, lsl #12
   140b0:	cmp	r3, r1, lsl #11
   140b4:	adc	r0, r0, r0
   140b8:	subcs	r3, r3, r1, lsl #11
   140bc:	cmp	r3, r1, lsl #10
   140c0:	adc	r0, r0, r0
   140c4:	subcs	r3, r3, r1, lsl #10
   140c8:	cmp	r3, r1, lsl #9
   140cc:	adc	r0, r0, r0
   140d0:	subcs	r3, r3, r1, lsl #9
   140d4:	cmp	r3, r1, lsl #8
   140d8:	adc	r0, r0, r0
   140dc:	subcs	r3, r3, r1, lsl #8
   140e0:	cmp	r3, r1, lsl #7
   140e4:	adc	r0, r0, r0
   140e8:	subcs	r3, r3, r1, lsl #7
   140ec:	cmp	r3, r1, lsl #6
   140f0:	adc	r0, r0, r0
   140f4:	subcs	r3, r3, r1, lsl #6
   140f8:	cmp	r3, r1, lsl #5
   140fc:	adc	r0, r0, r0
   14100:	subcs	r3, r3, r1, lsl #5
   14104:	cmp	r3, r1, lsl #4
   14108:	adc	r0, r0, r0
   1410c:	subcs	r3, r3, r1, lsl #4
   14110:	cmp	r3, r1, lsl #3
   14114:	adc	r0, r0, r0
   14118:	subcs	r3, r3, r1, lsl #3
   1411c:	cmp	r3, r1, lsl #2
   14120:	adc	r0, r0, r0
   14124:	subcs	r3, r3, r1, lsl #2
   14128:	cmp	r3, r1, lsl #1
   1412c:	adc	r0, r0, r0
   14130:	subcs	r3, r3, r1, lsl #1
   14134:	cmp	r3, r1
   14138:	adc	r0, r0, r0
   1413c:	subcs	r3, r3, r1
   14140:	cmp	ip, #0
   14144:	rsbmi	r0, r0, #0
   14148:	bx	lr
   1414c:	teq	ip, r0
   14150:	rsbmi	r0, r0, #0
   14154:	bx	lr
   14158:	movcc	r0, #0
   1415c:	asreq	r0, ip, #31
   14160:	orreq	r0, r0, #1
   14164:	bx	lr
   14168:	clz	r2, r1
   1416c:	rsb	r2, r2, #31
   14170:	cmp	ip, #0
   14174:	lsr	r0, r3, r2
   14178:	rsbmi	r0, r0, #0
   1417c:	bx	lr
   14180:	cmp	r0, #0
   14184:	mvngt	r0, #-2147483648	; 0x80000000
   14188:	movlt	r0, #-2147483648	; 0x80000000
   1418c:	b	141b0 <putchar_unlocked@plt+0x32ec>
   14190:	cmp	r1, #0
   14194:	beq	14180 <putchar_unlocked@plt+0x32bc>
   14198:	push	{r0, r1, lr}
   1419c:	bl	13f78 <putchar_unlocked@plt+0x30b4>
   141a0:	pop	{r1, r2, lr}
   141a4:	mul	r3, r2, r0
   141a8:	sub	r1, r1, r3
   141ac:	bx	lr
   141b0:	push	{r1, lr}
   141b4:	mov	r0, #8
   141b8:	bl	10c78 <raise@plt>
   141bc:	pop	{r1, pc}
   141c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   141c4:	mov	r7, r0
   141c8:	ldr	r6, [pc, #72]	; 14218 <putchar_unlocked@plt+0x3354>
   141cc:	ldr	r5, [pc, #72]	; 1421c <putchar_unlocked@plt+0x3358>
   141d0:	add	r6, pc, r6
   141d4:	add	r5, pc, r5
   141d8:	sub	r6, r6, r5
   141dc:	mov	r8, r1
   141e0:	mov	r9, r2
   141e4:	bl	10c40 <calloc@plt-0x20>
   141e8:	asrs	r6, r6, #2
   141ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   141f0:	mov	r4, #0
   141f4:	add	r4, r4, #1
   141f8:	ldr	r3, [r5], #4
   141fc:	mov	r2, r9
   14200:	mov	r1, r8
   14204:	mov	r0, r7
   14208:	blx	r3
   1420c:	cmp	r6, r4
   14210:	bne	141f4 <putchar_unlocked@plt+0x3330>
   14214:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14218:	andeq	r0, r1, r8, lsr sp
   1421c:	andeq	r0, r1, r0, lsr sp
   14220:	bx	lr
   14224:	ldr	r3, [pc, #12]	; 14238 <putchar_unlocked@plt+0x3374>
   14228:	mov	r1, #0
   1422c:	add	r3, pc, r3
   14230:	ldr	r2, [r3]
   14234:	b	10dec <__cxa_atexit@plt>
   14238:			; <UNDEFINED> instruction: 0x00010eb0

Disassembly of section .fini:

0001423c <.fini>:
   1423c:	push	{r3, lr}
   14240:	pop	{r3, pc}
