
../repos/inetutils/ping/ping:     file format elf32-littlearm


Disassembly of section .init:

000110bc <.init>:
   110bc:	push	{r3, lr}
   110c0:	bl	11754 <__assert_fail@plt+0x318>
   110c4:	pop	{r3, pc}

Disassembly of section .plt:

000110c8 <calloc@plt-0x14>:
   110c8:	push	{lr}		; (str lr, [sp, #-4]!)
   110cc:	ldr	lr, [pc, #4]	; 110d8 <calloc@plt-0x4>
   110d0:	add	lr, pc, lr
   110d4:	ldr	pc, [lr, #8]!
   110d8:	andeq	lr, r1, r8, lsr #30

000110dc <calloc@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #122880	; 0x1e000
   110e4:	ldr	pc, [ip, #3880]!	; 0xf28

000110e8 <fputs_unlocked@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #122880	; 0x1e000
   110f0:	ldr	pc, [ip, #3872]!	; 0xf20

000110f4 <strcmp@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #122880	; 0x1e000
   110fc:	ldr	pc, [ip, #3864]!	; 0xf18

00011100 <strtol@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #122880	; 0x1e000
   11108:	ldr	pc, [ip, #3856]!	; 0xf10

0001110c <setsockopt@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #122880	; 0x1e000
   11114:	ldr	pc, [ip, #3848]!	; 0xf08

00011118 <printf@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #122880	; 0x1e000
   11120:	ldr	pc, [ip, #3840]!	; 0xf00

00011124 <getprotobyname@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #122880	; 0x1e000
   1112c:	ldr	pc, [ip, #3832]!	; 0xef8

00011130 <fflush@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #122880	; 0x1e000
   11138:	ldr	pc, [ip, #3824]!	; 0xef0

0001113c <getuid@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #122880	; 0x1e000
   11144:	ldr	pc, [ip, #3816]!	; 0xee8

00011148 <memmove@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #122880	; 0x1e000
   11150:	ldr	pc, [ip, #3808]!	; 0xee0

00011154 <strchrnul@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #122880	; 0x1e000
   1115c:	ldr	pc, [ip, #3800]!	; 0xed8

00011160 <free@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #122880	; 0x1e000
   11168:	ldr	pc, [ip, #3792]!	; 0xed0

0001116c <gai_strerror@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #122880	; 0x1e000
   11174:	ldr	pc, [ip, #3784]!	; 0xec8

00011178 <strndup@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #122880	; 0x1e000
   11180:	ldr	pc, [ip, #3776]!	; 0xec0

00011184 <memcpy@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #122880	; 0x1e000
   1118c:	ldr	pc, [ip, #3768]!	; 0xeb8

00011190 <signal@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #122880	; 0x1e000
   11198:	ldr	pc, [ip, #3760]!	; 0xeb0

0001119c <fwrite_unlocked@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #122880	; 0x1e000
   111a4:	ldr	pc, [ip, #3752]!	; 0xea8

000111a8 <memcmp@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #122880	; 0x1e000
   111b0:	ldr	pc, [ip, #3744]!	; 0xea0

000111b4 <inet_ntoa@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #122880	; 0x1e000
   111bc:	ldr	pc, [ip, #3736]!	; 0xe98

000111c0 <select@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #122880	; 0x1e000
   111c8:	ldr	pc, [ip, #3728]!	; 0xe90

000111cc <sleep@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #122880	; 0x1e000
   111d4:	ldr	pc, [ip, #3720]!	; 0xe88

000111d8 <gethostbyaddr@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #122880	; 0x1e000
   111e0:	ldr	pc, [ip, #3712]!	; 0xe80

000111e4 <recvfrom@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #122880	; 0x1e000
   111ec:	ldr	pc, [ip, #3704]!	; 0xe78

000111f0 <strdup@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #122880	; 0x1e000
   111f8:	ldr	pc, [ip, #3696]!	; 0xe70

000111fc <realloc@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #122880	; 0x1e000
   11204:	ldr	pc, [ip, #3688]!	; 0xe68

00011208 <strcasecmp@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #122880	; 0x1e000
   11210:	ldr	pc, [ip, #3680]!	; 0xe60

00011214 <funlockfile@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #122880	; 0x1e000
   1121c:	ldr	pc, [ip, #3672]!	; 0xe58

00011220 <fwrite@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #122880	; 0x1e000
   11228:	ldr	pc, [ip, #3664]!	; 0xe50

0001122c <gettimeofday@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #122880	; 0x1e000
   11234:	ldr	pc, [ip, #3656]!	; 0xe48

00011238 <error@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #122880	; 0x1e000
   11240:	ldr	pc, [ip, #3648]!	; 0xe40

00011244 <getenv@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #122880	; 0x1e000
   1124c:	ldr	pc, [ip, #3640]!	; 0xe38

00011250 <puts@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #122880	; 0x1e000
   11258:	ldr	pc, [ip, #3632]!	; 0xe30

0001125c <malloc@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #122880	; 0x1e000
   11264:	ldr	pc, [ip, #3624]!	; 0xe28

00011268 <__libc_start_main@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #122880	; 0x1e000
   11270:	ldr	pc, [ip, #3616]!	; 0xe20

00011274 <strerror@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #122880	; 0x1e000
   1127c:	ldr	pc, [ip, #3608]!	; 0xe18

00011280 <__ctype_tolower_loc@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #122880	; 0x1e000
   11288:	ldr	pc, [ip, #3600]!	; 0xe10

0001128c <__gmon_start__@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #122880	; 0x1e000
   11294:	ldr	pc, [ip, #3592]!	; 0xe08

00011298 <mempcpy@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #122880	; 0x1e000
   112a0:	ldr	pc, [ip, #3584]!	; 0xe00

000112a4 <__ctype_b_loc@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #122880	; 0x1e000
   112ac:	ldr	pc, [ip, #3576]!	; 0xdf8

000112b0 <getpid@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #122880	; 0x1e000
   112b8:	ldr	pc, [ip, #3568]!	; 0xdf0

000112bc <exit@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #122880	; 0x1e000
   112c4:	ldr	pc, [ip, #3560]!	; 0xde8

000112c8 <strtoul@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #122880	; 0x1e000
   112d0:	ldr	pc, [ip, #3552]!	; 0xde0

000112d4 <strlen@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #122880	; 0x1e000
   112dc:	ldr	pc, [ip, #3544]!	; 0xdd8

000112e0 <strchr@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #122880	; 0x1e000
   112e8:	ldr	pc, [ip, #3536]!	; 0xdd0

000112ec <fprintf@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #122880	; 0x1e000
   112f4:	ldr	pc, [ip, #3528]!	; 0xdc8

000112f8 <__errno_location@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #122880	; 0x1e000
   11300:	ldr	pc, [ip, #3520]!	; 0xdc0

00011304 <snprintf@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #122880	; 0x1e000
   1130c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011310 <strerror_r@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #122880	; 0x1e000
   11318:	ldr	pc, [ip, #3504]!	; 0xdb0

0001131c <setvbuf@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #122880	; 0x1e000
   11324:	ldr	pc, [ip, #3496]!	; 0xda8

00011328 <memset@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #122880	; 0x1e000
   11330:	ldr	pc, [ip, #3488]!	; 0xda0

00011334 <putchar@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #122880	; 0x1e000
   1133c:	ldr	pc, [ip, #3480]!	; 0xd98

00011340 <strtod@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #122880	; 0x1e000
   11348:	ldr	pc, [ip, #3472]!	; 0xd90

0001134c <memchr@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #122880	; 0x1e000
   11354:	ldr	pc, [ip, #3464]!	; 0xd88

00011358 <sendto@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #122880	; 0x1e000
   11360:	ldr	pc, [ip, #3456]!	; 0xd80

00011364 <__overflow@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #122880	; 0x1e000
   1136c:	ldr	pc, [ip, #3448]!	; 0xd78

00011370 <setlocale@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #122880	; 0x1e000
   11378:	ldr	pc, [ip, #3440]!	; 0xd70

0001137c <getnameinfo@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #122880	; 0x1e000
   11384:	ldr	pc, [ip, #3432]!	; 0xd68

00011388 <strrchr@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #122880	; 0x1e000
   11390:	ldr	pc, [ip, #3424]!	; 0xd60

00011394 <vfprintf@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #122880	; 0x1e000
   1139c:	ldr	pc, [ip, #3416]!	; 0xd58

000113a0 <fputc@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #122880	; 0x1e000
   113a8:	ldr	pc, [ip, #3408]!	; 0xd50

000113ac <setuid@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #122880	; 0x1e000
   113b4:	ldr	pc, [ip, #3400]!	; 0xd48

000113b8 <sscanf@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #122880	; 0x1e000
   113c0:	ldr	pc, [ip, #3392]!	; 0xd40

000113c4 <putc@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #122880	; 0x1e000
   113cc:	ldr	pc, [ip, #3384]!	; 0xd38

000113d0 <flockfile@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #122880	; 0x1e000
   113d8:	ldr	pc, [ip, #3376]!	; 0xd30

000113dc <vsnprintf@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #122880	; 0x1e000
   113e4:	ldr	pc, [ip, #3368]!	; 0xd28

000113e8 <qsort@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #122880	; 0x1e000
   113f0:	ldr	pc, [ip, #3360]!	; 0xd20

000113f4 <freeaddrinfo@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #122880	; 0x1e000
   113fc:	ldr	pc, [ip, #3352]!	; 0xd18

00011400 <getaddrinfo@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #122880	; 0x1e000
   11408:	ldr	pc, [ip, #3344]!	; 0xd10

0001140c <socket@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #122880	; 0x1e000
   11414:	ldr	pc, [ip, #3336]!	; 0xd08

00011418 <strncmp@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #122880	; 0x1e000
   11420:	ldr	pc, [ip, #3328]!	; 0xd00

00011424 <abort@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #122880	; 0x1e000
   1142c:	ldr	pc, [ip, #3320]!	; 0xcf8

00011430 <close@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #122880	; 0x1e000
   11438:	ldr	pc, [ip, #3312]!	; 0xcf0

0001143c <__assert_fail@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #122880	; 0x1e000
   11444:	ldr	pc, [ip, #3304]!	; 0xce8

Disassembly of section .text:

00011448 <argp_failure@@Base-0x60a8>:
   11448:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1144c:	mov	r4, #1
   11450:	mov	r5, r0
   11454:	ldr	r0, [r1]
   11458:	strd	r6, [sp, #8]
   1145c:	mov	r6, r1
   11460:	str	r8, [sp, #16]
   11464:	str	lr, [sp, #20]
   11468:	sub	sp, sp, #16
   1146c:	str	r4, [sp, #12]
   11470:	bl	1a660 <argp_parse@@Base+0x1164>
   11474:	movw	r1, #61424	; 0xeff0
   11478:	movt	r1, #1
   1147c:	mov	r0, #6
   11480:	bl	11370 <setlocale@plt>
   11484:	bl	1113c <getuid@plt>
   11488:	cmp	r0, #0
   1148c:	bne	1149c <__assert_fail@plt+0x60>
   11490:	movw	r3, #1588	; 0x634
   11494:	movt	r3, #3
   11498:	strb	r4, [r3, #8]
   1149c:	movw	r3, #1756	; 0x6dc
   114a0:	movt	r3, #3
   114a4:	ldr	r1, [pc, #608]	; 1170c <__assert_fail@plt+0x2d0>
   114a8:	movw	r2, #55180	; 0xd78c
   114ac:	movt	r2, #1
   114b0:	movw	r0, #55204	; 0xd7a4
   114b4:	movt	r0, #1
   114b8:	str	r2, [r3]
   114bc:	movw	r7, #1744	; 0x6d0
   114c0:	movt	r7, #3
   114c4:	bl	1a43c <argp_parse@@Base+0xf40>
   114c8:	mov	r1, #0
   114cc:	add	r2, sp, #8
   114d0:	ldr	r0, [pc, #568]	; 11710 <__assert_fail@plt+0x2d4>
   114d4:	mov	r3, r1
   114d8:	str	r2, [sp]
   114dc:	mov	r2, r6
   114e0:	str	r1, [sp, #4]
   114e4:	mov	r1, r5
   114e8:	bl	194fc <argp_parse@@Base>
   114ec:	bl	112b0 <getpid@plt>
   114f0:	mov	r1, r0
   114f4:	mov	r0, #8
   114f8:	bl	14364 <__assert_fail@plt+0x2f28>
   114fc:	cmp	r0, #0
   11500:	str	r0, [r7]
   11504:	beq	11704 <__assert_fail@plt+0x2c8>
   11508:	mov	r3, #4
   1150c:	add	r2, sp, #12
   11510:	mov	r1, #6
   11514:	bl	1294c <__assert_fail@plt+0x1510>
   11518:	bl	1113c <getuid@plt>
   1151c:	bl	113ac <setuid@plt>
   11520:	cmp	r0, #0
   11524:	bne	116e8 <__assert_fail@plt+0x2ac>
   11528:	mov	r3, #0
   1152c:	movw	r1, #1580	; 0x62c
   11530:	movt	r1, #3
   11534:	mov	r2, #1
   11538:	movw	r4, #1588	; 0x634
   1153c:	movt	r4, #3
   11540:	ldr	r0, [r1]
   11544:	mov	r1, r3
   11548:	bl	1131c <setvbuf@plt>
   1154c:	ldr	r1, [r4, #4]
   11550:	ldr	r3, [sp, #8]
   11554:	cmp	r1, #0
   11558:	add	r6, r6, r3, lsl #2
   1155c:	sub	r5, r5, r3
   11560:	bne	116dc <__assert_fail@plt+0x2a0>
   11564:	movw	r3, #1740	; 0x6cc
   11568:	movt	r3, #3
   1156c:	ldr	r1, [r3]
   11570:	cmp	r1, #0
   11574:	bne	116c8 <__assert_fail@plt+0x28c>
   11578:	movw	r3, #1736	; 0x6c8
   1157c:	movt	r3, #3
   11580:	ldr	r3, [r3]
   11584:	tst	r3, #2
   11588:	bne	116b0 <__assert_fail@plt+0x274>
   1158c:	ldr	r3, [r4, #32]
   11590:	cmp	r3, #0
   11594:	bgt	11628 <__assert_fail@plt+0x1ec>
   11598:	movw	r8, #316	; 0x13c
   1159c:	movt	r8, #3
   115a0:	ldr	r3, [r8, #8]
   115a4:	cmp	r3, #0
   115a8:	bge	1166c <__assert_fail@plt+0x230>
   115ac:	movw	r3, #1728	; 0x6c0
   115b0:	movt	r3, #3
   115b4:	ldr	r1, [r8, #4]
   115b8:	sub	r4, r5, #1
   115bc:	ldr	r0, [r3]
   115c0:	bl	12524 <__assert_fail@plt+0x10e8>
   115c4:	cmp	r5, #0
   115c8:	beq	115f4 <__assert_fail@plt+0x1b8>
   115cc:	mov	r5, #0
   115d0:	ldr	r0, [r6], #4
   115d4:	sub	r4, r4, #1
   115d8:	ldr	r3, [r8, #20]
   115dc:	blx	r3
   115e0:	orr	r5, r5, r0
   115e4:	ldr	r0, [r7]
   115e8:	bl	14510 <__assert_fail@plt+0x30d4>
   115ec:	cmn	r4, #1
   115f0:	bne	115d0 <__assert_fail@plt+0x194>
   115f4:	ldr	r0, [r7]
   115f8:	bl	1a534 <argp_parse@@Base+0x1038>
   115fc:	movw	r3, #1732	; 0x6c4
   11600:	movt	r3, #3
   11604:	ldr	r0, [r3]
   11608:	bl	1a534 <argp_parse@@Base+0x1038>
   1160c:	mov	r0, r5
   11610:	add	sp, sp, #16
   11614:	ldrd	r4, [sp]
   11618:	ldrd	r6, [sp, #8]
   1161c:	ldr	r8, [sp, #16]
   11620:	add	sp, sp, #20
   11624:	pop	{pc}		; (ldr pc, [sp], #4)
   11628:	ldr	r0, [r7]
   1162c:	mov	r3, #4
   11630:	mov	r2, #2
   11634:	mov	r1, #0
   11638:	str	r3, [sp]
   1163c:	ldr	r3, [pc, #208]	; 11714 <__assert_fail@plt+0x2d8>
   11640:	ldr	r0, [r0]
   11644:	bl	1110c <setsockopt@plt>
   11648:	cmp	r0, #0
   1164c:	bge	11598 <__assert_fail@plt+0x15c>
   11650:	bl	112f8 <__errno_location@plt>
   11654:	movw	r2, #55220	; 0xd7b4
   11658:	movt	r2, #1
   1165c:	ldr	r1, [r0]
   11660:	mov	r0, #0
   11664:	bl	11238 <error@plt>
   11668:	b	11598 <__assert_fail@plt+0x15c>
   1166c:	ldr	r0, [r7]
   11670:	mov	ip, #4
   11674:	add	r3, r8, #8
   11678:	mov	r2, #1
   1167c:	mov	r1, #0
   11680:	str	ip, [sp]
   11684:	ldr	r0, [r0]
   11688:	bl	1110c <setsockopt@plt>
   1168c:	cmp	r0, #0
   11690:	bge	115ac <__assert_fail@plt+0x170>
   11694:	bl	112f8 <__errno_location@plt>
   11698:	movw	r2, #55240	; 0xd7c8
   1169c:	movt	r2, #1
   116a0:	ldr	r1, [r0]
   116a4:	mov	r0, #0
   116a8:	bl	11238 <error@plt>
   116ac:	b	115ac <__assert_fail@plt+0x170>
   116b0:	movw	r3, #1752	; 0x6d8
   116b4:	movt	r3, #3
   116b8:	ldr	r0, [r7]
   116bc:	ldr	r1, [r3]
   116c0:	bl	12978 <__assert_fail@plt+0x153c>
   116c4:	b	1158c <__assert_fail@plt+0x150>
   116c8:	add	r2, sp, #12
   116cc:	mov	r3, #4
   116d0:	ldr	r0, [r7]
   116d4:	bl	1294c <__assert_fail@plt+0x1510>
   116d8:	b	11578 <__assert_fail@plt+0x13c>
   116dc:	ldr	r0, [r7]
   116e0:	bl	12944 <__assert_fail@plt+0x1508>
   116e4:	b	11564 <__assert_fail@plt+0x128>
   116e8:	bl	112f8 <__errno_location@plt>
   116ec:	movw	r2, #55212	; 0xd7ac
   116f0:	movt	r2, #1
   116f4:	ldr	r1, [r0]
   116f8:	mov	r0, #1
   116fc:	bl	11238 <error@plt>
   11700:	b	11528 <__assert_fail@plt+0xec>
   11704:	mov	r0, #1
   11708:	bl	112bc <exit@plt>
   1170c:	andeq	r0, r3, r4, asr r1
   11710:	andeq	r0, r3, ip, asr r1
   11714:	andeq	r0, r3, r4, asr r6
   11718:	mov	fp, #0
   1171c:	mov	lr, #0
   11720:	pop	{r1}		; (ldr r1, [sp], #4)
   11724:	mov	r2, sp
   11728:	push	{r2}		; (str r2, [sp, #-4]!)
   1172c:	push	{r0}		; (str r0, [sp, #-4]!)
   11730:	ldr	ip, [pc, #16]	; 11748 <__assert_fail@plt+0x30c>
   11734:	push	{ip}		; (str ip, [sp, #-4]!)
   11738:	ldr	r0, [pc, #12]	; 1174c <__assert_fail@plt+0x310>
   1173c:	ldr	r3, [pc, #12]	; 11750 <__assert_fail@plt+0x314>
   11740:	bl	11268 <__libc_start_main@plt>
   11744:	bl	11424 <abort@plt>
   11748:	andeq	sp, r1, r4, lsl #12
   1174c:	andeq	r1, r1, r8, asr #8
   11750:	andeq	sp, r1, r4, lsr #11
   11754:	ldr	r3, [pc, #20]	; 11770 <__assert_fail@plt+0x334>
   11758:	ldr	r2, [pc, #20]	; 11774 <__assert_fail@plt+0x338>
   1175c:	add	r3, pc, r3
   11760:	ldr	r2, [r3, r2]
   11764:	cmp	r2, #0
   11768:	bxeq	lr
   1176c:	b	1128c <__gmon_start__@plt>
   11770:	muleq	r1, ip, r8
   11774:	andeq	r0, r0, r0, lsr r1
   11778:	ldr	r0, [pc, #24]	; 11798 <__assert_fail@plt+0x35c>
   1177c:	ldr	r3, [pc, #24]	; 1179c <__assert_fail@plt+0x360>
   11780:	cmp	r3, r0
   11784:	bxeq	lr
   11788:	ldr	r3, [pc, #16]	; 117a0 <__assert_fail@plt+0x364>
   1178c:	cmp	r3, #0
   11790:	bxeq	lr
   11794:	bx	r3
   11798:	andeq	r0, r3, ip, lsl r6
   1179c:	andeq	r0, r3, ip, lsl r6
   117a0:	andeq	r0, r0, r0
   117a4:	ldr	r0, [pc, #36]	; 117d0 <__assert_fail@plt+0x394>
   117a8:	ldr	r1, [pc, #36]	; 117d4 <__assert_fail@plt+0x398>
   117ac:	sub	r1, r1, r0
   117b0:	asr	r1, r1, #2
   117b4:	add	r1, r1, r1, lsr #31
   117b8:	asrs	r1, r1, #1
   117bc:	bxeq	lr
   117c0:	ldr	r3, [pc, #16]	; 117d8 <__assert_fail@plt+0x39c>
   117c4:	cmp	r3, #0
   117c8:	bxeq	lr
   117cc:	bx	r3
   117d0:	andeq	r0, r3, ip, lsl r6
   117d4:	andeq	r0, r3, ip, lsl r6
   117d8:	andeq	r0, r0, r0
   117dc:	push	{r4, lr}
   117e0:	ldr	r4, [pc, #24]	; 11800 <__assert_fail@plt+0x3c4>
   117e4:	ldrb	r3, [r4]
   117e8:	cmp	r3, #0
   117ec:	popne	{r4, pc}
   117f0:	bl	11778 <__assert_fail@plt+0x33c>
   117f4:	mov	r3, #1
   117f8:	strb	r3, [r4]
   117fc:	pop	{r4, pc}
   11800:	andeq	r0, r3, r0, lsr r6
   11804:	b	117a4 <__assert_fail@plt+0x368>
   11808:	movw	r3, #1588	; 0x634
   1180c:	movt	r3, #3
   11810:	mov	r2, #1
   11814:	str	r2, [r3]
   11818:	bx	lr
   1181c:	strd	r4, [sp, #-12]!
   11820:	movw	r4, #316	; 0x13c
   11824:	movt	r4, #3
   11828:	ldr	r3, [r4]
   1182c:	mov	r5, r0
   11830:	str	lr, [sp, #8]
   11834:	sub	sp, sp, #20
   11838:	cmp	r3, #7
   1183c:	movls	r2, #0
   11840:	bhi	11898 <__assert_fail@plt+0x45c>
   11844:	movw	r3, #1732	; 0x6c4
   11848:	movt	r3, #3
   1184c:	ldr	r1, [r3]
   11850:	cmp	r1, #0
   11854:	beq	11874 <__assert_fail@plt+0x438>
   11858:	ldr	r3, [r4]
   1185c:	mov	r0, #0
   11860:	str	r0, [sp]
   11864:	mov	r0, r5
   11868:	cmp	r3, r2
   1186c:	subhi	r3, r3, r2
   11870:	bl	1287c <__assert_fail@plt+0x1440>
   11874:	mov	r0, r5
   11878:	bl	1452c <__assert_fail@plt+0x30f0>
   1187c:	subs	r4, r0, #0
   11880:	blt	118c8 <__assert_fail@plt+0x48c>
   11884:	mov	r0, r4
   11888:	add	sp, sp, #20
   1188c:	ldrd	r4, [sp]
   11890:	add	sp, sp, #8
   11894:	pop	{pc}		; (ldr pc, [sp], #4)
   11898:	mov	r1, #0
   1189c:	add	r0, sp, #8
   118a0:	bl	1122c <gettimeofday@plt>
   118a4:	mov	r0, #0
   118a8:	add	r1, sp, #8
   118ac:	mov	r2, r0
   118b0:	mov	r3, #8
   118b4:	str	r0, [sp]
   118b8:	mov	r0, r5
   118bc:	bl	1287c <__assert_fail@plt+0x1440>
   118c0:	mov	r2, #8
   118c4:	b	11844 <__assert_fail@plt+0x408>
   118c8:	bl	112f8 <__errno_location@plt>
   118cc:	movw	r2, #54932	; 0xd694
   118d0:	movt	r2, #1
   118d4:	ldr	r1, [r0]
   118d8:	mov	r0, #1
   118dc:	bl	11238 <error@plt>
   118e0:	b	11884 <__assert_fail@plt+0x448>
   118e4:	cmp	r0, #114	; 0x72
   118e8:	beq	11c60 <__assert_fail@plt+0x824>
   118ec:	strd	r4, [sp, #-12]!
   118f0:	mov	r4, r1
   118f4:	str	lr, [sp, #8]
   118f8:	vpush	{d8}
   118fc:	sub	sp, sp, #20
   11900:	ble	119b4 <__assert_fail@plt+0x578>
   11904:	movw	r3, #257	; 0x101
   11908:	cmp	r0, r3
   1190c:	beq	11bf8 <__assert_fail@plt+0x7bc>
   11910:	ble	11a60 <__assert_fail@plt+0x624>
   11914:	cmp	r0, #260	; 0x104
   11918:	beq	11ca4 <__assert_fail@plt+0x868>
   1191c:	bgt	11a18 <__assert_fail@plt+0x5dc>
   11920:	movw	r3, #258	; 0x102
   11924:	cmp	r0, r3
   11928:	beq	11e34 <__assert_fail@plt+0x9f8>
   1192c:	movw	r3, #259	; 0x103
   11930:	cmp	r0, r3
   11934:	bne	11a44 <__assert_fail@plt+0x608>
   11938:	movw	r1, #55036	; 0xd6fc
   1193c:	movt	r1, #1
   11940:	movw	r0, #55100	; 0xd73c
   11944:	movt	r0, #1
   11948:	bl	11208 <strcasecmp@plt>
   1194c:	cmp	r0, #0
   11950:	beq	11bc0 <__assert_fail@plt+0x784>
   11954:	movw	r1, #55044	; 0xd704
   11958:	movt	r1, #1
   1195c:	movw	r0, #55100	; 0xd73c
   11960:	movt	r0, #1
   11964:	bl	11208 <strcasecmp@plt>
   11968:	cmp	r0, #0
   1196c:	beq	11f30 <__assert_fail@plt+0xaf4>
   11970:	movw	r1, #55056	; 0xd710
   11974:	movt	r1, #1
   11978:	movw	r0, #55100	; 0xd73c
   1197c:	movt	r0, #1
   11980:	bl	11208 <strcasecmp@plt>
   11984:	cmp	r0, #0
   11988:	beq	119a8 <__assert_fail@plt+0x56c>
   1198c:	movw	r1, #55064	; 0xd718
   11990:	movt	r1, #1
   11994:	movw	r0, #55100	; 0xd73c
   11998:	movt	r0, #1
   1199c:	bl	11208 <strcasecmp@plt>
   119a0:	cmp	r0, #0
   119a4:	bne	11f54 <__assert_fail@plt+0xb18>
   119a8:	movw	r1, #16512	; 0x4080
   119ac:	movt	r1, #1
   119b0:	b	11bc8 <__assert_fail@plt+0x78c>
   119b4:	cmp	r0, #102	; 0x66
   119b8:	beq	11d30 <__assert_fail@plt+0x8f4>
   119bc:	ble	11b28 <__assert_fail@plt+0x6ec>
   119c0:	cmp	r0, #110	; 0x6e
   119c4:	beq	11f14 <__assert_fail@plt+0xad8>
   119c8:	bgt	11afc <__assert_fail@plt+0x6c0>
   119cc:	cmp	r0, #105	; 0x69
   119d0:	beq	11e78 <__assert_fail@plt+0xa3c>
   119d4:	cmp	r0, #108	; 0x6c
   119d8:	bne	11a44 <__assert_fail@plt+0x608>
   119dc:	mov	r2, #0
   119e0:	add	r1, sp, #12
   119e4:	mov	r0, r4
   119e8:	bl	112c8 <strtoul@plt>
   119ec:	ldr	r2, [sp, #12]
   119f0:	movw	r3, #1588	; 0x634
   119f4:	movt	r3, #3
   119f8:	str	r0, [r3, #28]
   119fc:	ldrb	r3, [r2]
   11a00:	cmp	r3, #0
   11a04:	bne	11bdc <__assert_fail@plt+0x7a0>
   11a08:	cmp	r0, #0
   11a0c:	blt	11bdc <__assert_fail@plt+0x7a0>
   11a10:	mov	r3, #0
   11a14:	b	11a48 <__assert_fail@plt+0x60c>
   11a18:	movw	r3, #261	; 0x105
   11a1c:	cmp	r0, r3
   11a20:	beq	11d8c <__assert_fail@plt+0x950>
   11a24:	mov	r3, #2
   11a28:	movt	r3, #256	; 0x100
   11a2c:	cmp	r0, r3
   11a30:	bne	11a44 <__assert_fail@plt+0x608>
   11a34:	movw	r1, #55156	; 0xd774
   11a38:	movt	r1, #1
   11a3c:	mov	r0, r2
   11a40:	bl	18de8 <argp_error@@Base>
   11a44:	mov	r3, #7
   11a48:	mov	r0, r3
   11a4c:	add	sp, sp, #20
   11a50:	vpop	{d8}
   11a54:	ldrd	r4, [sp]
   11a58:	add	sp, sp, #8
   11a5c:	pop	{pc}		; (ldr pc, [sp], #4)
   11a60:	cmp	r0, #118	; 0x76
   11a64:	beq	11d70 <__assert_fail@plt+0x934>
   11a68:	bgt	11b68 <__assert_fail@plt+0x72c>
   11a6c:	cmp	r0, #115	; 0x73
   11a70:	beq	11d4c <__assert_fail@plt+0x910>
   11a74:	cmp	r0, #116	; 0x74
   11a78:	bne	11a44 <__assert_fail@plt+0x608>
   11a7c:	movw	r1, #55036	; 0xd6fc
   11a80:	movt	r1, #1
   11a84:	mov	r0, r4
   11a88:	bl	11208 <strcasecmp@plt>
   11a8c:	cmp	r0, #0
   11a90:	beq	11bc0 <__assert_fail@plt+0x784>
   11a94:	movw	r1, #55044	; 0xd704
   11a98:	movt	r1, #1
   11a9c:	mov	r0, r4
   11aa0:	bl	11208 <strcasecmp@plt>
   11aa4:	cmp	r0, #0
   11aa8:	beq	11f30 <__assert_fail@plt+0xaf4>
   11aac:	movw	r1, #55056	; 0xd710
   11ab0:	movt	r1, #1
   11ab4:	mov	r0, r4
   11ab8:	bl	11208 <strcasecmp@plt>
   11abc:	cmp	r0, #0
   11ac0:	beq	119a8 <__assert_fail@plt+0x56c>
   11ac4:	movw	r1, #55064	; 0xd718
   11ac8:	movt	r1, #1
   11acc:	mov	r0, r4
   11ad0:	bl	11208 <strcasecmp@plt>
   11ad4:	cmp	r0, #0
   11ad8:	movne	r3, r4
   11adc:	beq	119a8 <__assert_fail@plt+0x56c>
   11ae0:	mov	r1, #0
   11ae4:	movw	r2, #55072	; 0xd720
   11ae8:	movt	r2, #1
   11aec:	mov	r0, #1
   11af0:	bl	11238 <error@plt>
   11af4:	mov	r1, #0
   11af8:	b	11bc8 <__assert_fail@plt+0x78c>
   11afc:	cmp	r0, #112	; 0x70
   11b00:	beq	11d08 <__assert_fail@plt+0x8cc>
   11b04:	cmp	r0, #113	; 0x71
   11b08:	bne	11a44 <__assert_fail@plt+0x608>
   11b0c:	movw	r2, #1736	; 0x6c8
   11b10:	movt	r2, #3
   11b14:	ldr	r1, [r2]
   11b18:	mov	r3, #0
   11b1c:	orr	r1, r1, #8
   11b20:	str	r1, [r2]
   11b24:	b	11a48 <__assert_fail@plt+0x60c>
   11b28:	cmp	r0, #87	; 0x57
   11b2c:	beq	11ce4 <__assert_fail@plt+0x8a8>
   11b30:	bgt	11b94 <__assert_fail@plt+0x758>
   11b34:	cmp	r0, #82	; 0x52
   11b38:	beq	11cc8 <__assert_fail@plt+0x88c>
   11b3c:	cmp	r0, #84	; 0x54
   11b40:	bne	11a44 <__assert_fail@plt+0x608>
   11b44:	mov	r0, r1
   11b48:	mov	r2, #1
   11b4c:	mov	r1, #255	; 0xff
   11b50:	bl	12468 <__assert_fail@plt+0x102c>
   11b54:	movw	r2, #316	; 0x13c
   11b58:	movt	r2, #3
   11b5c:	mov	r3, #0
   11b60:	str	r0, [r2, #8]
   11b64:	b	11a48 <__assert_fail@plt+0x60c>
   11b68:	cmp	r0, #119	; 0x77
   11b6c:	beq	11e10 <__assert_fail@plt+0x9d4>
   11b70:	cmp	r0, #256	; 0x100
   11b74:	bne	11a44 <__assert_fail@plt+0x608>
   11b78:	movw	r2, #316	; 0x13c
   11b7c:	movt	r2, #3
   11b80:	movw	r1, #14112	; 0x3720
   11b84:	movt	r1, #1
   11b88:	mov	r3, #0
   11b8c:	str	r1, [r2, #20]
   11b90:	b	11a48 <__assert_fail@plt+0x60c>
   11b94:	cmp	r0, #99	; 0x63
   11b98:	beq	11c80 <__assert_fail@plt+0x844>
   11b9c:	cmp	r0, #100	; 0x64
   11ba0:	bne	11a44 <__assert_fail@plt+0x608>
   11ba4:	movw	r2, #1740	; 0x6cc
   11ba8:	movt	r2, #3
   11bac:	ldr	r1, [r2]
   11bb0:	mov	r3, #0
   11bb4:	orr	r1, r1, #1
   11bb8:	str	r1, [r2]
   11bbc:	b	11a48 <__assert_fail@plt+0x60c>
   11bc0:	movw	r1, #14112	; 0x3720
   11bc4:	movt	r1, #1
   11bc8:	movw	r2, #316	; 0x13c
   11bcc:	movt	r2, #3
   11bd0:	mov	r3, #0
   11bd4:	str	r1, [r2, #20]
   11bd8:	b	11a48 <__assert_fail@plt+0x60c>
   11bdc:	mov	r3, r4
   11be0:	movw	r2, #55008	; 0xd6e0
   11be4:	movt	r2, #1
   11be8:	mov	r1, #0
   11bec:	mov	r0, #1
   11bf0:	bl	11238 <error@plt>
   11bf4:	b	11a10 <__assert_fail@plt+0x5d4>
   11bf8:	movw	r1, #55036	; 0xd6fc
   11bfc:	movt	r1, #1
   11c00:	movw	r0, #55056	; 0xd710
   11c04:	movt	r0, #1
   11c08:	bl	11208 <strcasecmp@plt>
   11c0c:	cmp	r0, #0
   11c10:	movweq	r0, #14112	; 0x3720
   11c14:	movteq	r0, #1
   11c18:	beq	11c4c <__assert_fail@plt+0x810>
   11c1c:	movw	r1, #55044	; 0xd704
   11c20:	movt	r1, #1
   11c24:	movw	r0, #55056	; 0xd710
   11c28:	movt	r0, #1
   11c2c:	bl	11208 <strcasecmp@plt>
   11c30:	cmp	r0, #0
   11c34:	movw	r3, #17072	; 0x42b0
   11c38:	movt	r3, #1
   11c3c:	movw	r2, #16512	; 0x4080
   11c40:	movt	r2, #1
   11c44:	moveq	r0, r3
   11c48:	movne	r0, r2
   11c4c:	movw	r2, #316	; 0x13c
   11c50:	movt	r2, #3
   11c54:	mov	r3, #0
   11c58:	str	r0, [r2, #20]
   11c5c:	b	11a48 <__assert_fail@plt+0x60c>
   11c60:	movw	r2, #1740	; 0x6cc
   11c64:	movt	r2, #3
   11c68:	ldr	r1, [r2]
   11c6c:	mov	r3, #0
   11c70:	mov	r0, r3
   11c74:	orr	r1, r1, #5
   11c78:	str	r1, [r2]
   11c7c:	bx	lr
   11c80:	mov	r0, r1
   11c84:	mov	r2, #1
   11c88:	mov	r1, #0
   11c8c:	bl	12468 <__assert_fail@plt+0x102c>
   11c90:	movw	r2, #1588	; 0x634
   11c94:	movt	r2, #3
   11c98:	mov	r3, #0
   11c9c:	str	r0, [r2, #4]
   11ca0:	b	11a48 <__assert_fail@plt+0x60c>
   11ca4:	mov	r0, r1
   11ca8:	mov	r2, #0
   11cac:	mov	r1, #255	; 0xff
   11cb0:	bl	12468 <__assert_fail@plt+0x102c>
   11cb4:	movw	r2, #1588	; 0x634
   11cb8:	movt	r2, #3
   11cbc:	mov	r3, #0
   11cc0:	str	r0, [r2, #32]
   11cc4:	b	11a48 <__assert_fail@plt+0x60c>
   11cc8:	movw	r2, #1736	; 0x6c8
   11ccc:	movt	r2, #3
   11cd0:	ldr	r1, [r2]
   11cd4:	mov	r3, #0
   11cd8:	orr	r1, r1, #16
   11cdc:	str	r1, [r2]
   11ce0:	b	11a48 <__assert_fail@plt+0x60c>
   11ce4:	mov	r0, r1
   11ce8:	mov	r2, #0
   11cec:	mvn	r1, #-2147483648	; 0x80000000
   11cf0:	bl	12468 <__assert_fail@plt+0x102c>
   11cf4:	movw	r2, #316	; 0x13c
   11cf8:	movt	r2, #3
   11cfc:	mov	r3, #0
   11d00:	str	r0, [r2, #16]
   11d04:	b	11a48 <__assert_fail@plt+0x60c>
   11d08:	ldr	r5, [pc, #600]	; 11f68 <__assert_fail@plt+0xb2c>
   11d0c:	mov	r0, r1
   11d10:	ldr	r1, [pc, #596]	; 11f6c <__assert_fail@plt+0xb30>
   11d14:	mov	r2, r5
   11d18:	bl	12604 <__assert_fail@plt+0x11c8>
   11d1c:	movw	r2, #1728	; 0x6c0
   11d20:	movt	r2, #3
   11d24:	mov	r3, #0
   11d28:	str	r5, [r2]
   11d2c:	b	11a48 <__assert_fail@plt+0x60c>
   11d30:	movw	r2, #1736	; 0x6c8
   11d34:	movt	r2, #3
   11d38:	ldr	r1, [r2]
   11d3c:	mov	r3, #0
   11d40:	orr	r1, r1, #1
   11d44:	str	r1, [r2]
   11d48:	b	11a48 <__assert_fail@plt+0x60c>
   11d4c:	mov	r0, r1
   11d50:	mov	r2, #1
   11d54:	movw	r1, #65399	; 0xff77
   11d58:	bl	12468 <__assert_fail@plt+0x102c>
   11d5c:	movw	r2, #316	; 0x13c
   11d60:	movt	r2, #3
   11d64:	mov	r3, #0
   11d68:	str	r0, [r2]
   11d6c:	b	11a48 <__assert_fail@plt+0x60c>
   11d70:	movw	r2, #1736	; 0x6c8
   11d74:	movt	r2, #3
   11d78:	ldr	r1, [r2]
   11d7c:	mov	r3, #0
   11d80:	orr	r1, r1, #32
   11d84:	str	r1, [r2]
   11d88:	b	11a48 <__assert_fail@plt+0x60c>
   11d8c:	movw	r3, #1736	; 0x6c8
   11d90:	movt	r3, #3
   11d94:	ldr	r2, [r3]
   11d98:	movw	r1, #55108	; 0xd744
   11d9c:	movt	r1, #1
   11da0:	mov	r0, r4
   11da4:	orr	r2, r2, #64	; 0x40
   11da8:	str	r2, [r3]
   11dac:	bl	11208 <strcasecmp@plt>
   11db0:	cmp	r0, #0
   11db4:	moveq	r0, #1
   11db8:	beq	11df4 <__assert_fail@plt+0x9b8>
   11dbc:	movw	r1, #55116	; 0xd74c
   11dc0:	movt	r1, #1
   11dc4:	mov	r0, r4
   11dc8:	bl	11208 <strcasecmp@plt>
   11dcc:	cmp	r0, #0
   11dd0:	moveq	r0, #2
   11dd4:	beq	11df4 <__assert_fail@plt+0x9b8>
   11dd8:	mov	r0, #1
   11ddc:	mov	r3, r4
   11de0:	movw	r2, #55124	; 0xd754
   11de4:	movt	r2, #1
   11de8:	mov	r1, #0
   11dec:	bl	11238 <error@plt>
   11df0:	mov	r0, #0
   11df4:	movw	r2, #1748	; 0x6d4
   11df8:	movt	r2, #3
   11dfc:	ldr	r1, [r2]
   11e00:	mov	r3, #0
   11e04:	orr	r1, r1, r0
   11e08:	str	r1, [r2]
   11e0c:	b	11a48 <__assert_fail@plt+0x60c>
   11e10:	mov	r0, r1
   11e14:	mov	r2, #0
   11e18:	mvn	r1, #-2147483648	; 0x80000000
   11e1c:	bl	12468 <__assert_fail@plt+0x102c>
   11e20:	movw	r2, #316	; 0x13c
   11e24:	movt	r2, #3
   11e28:	mov	r3, #0
   11e2c:	str	r0, [r2, #12]
   11e30:	b	11a48 <__assert_fail@plt+0x60c>
   11e34:	movw	r1, #55036	; 0xd6fc
   11e38:	movt	r1, #1
   11e3c:	movw	r0, #55044	; 0xd704
   11e40:	movt	r0, #1
   11e44:	bl	11208 <strcasecmp@plt>
   11e48:	cmp	r0, #0
   11e4c:	movw	r3, #14112	; 0x3720
   11e50:	movt	r3, #1
   11e54:	movw	r2, #17072	; 0x42b0
   11e58:	movt	r2, #1
   11e5c:	moveq	r0, r3
   11e60:	movne	r0, r2
   11e64:	movw	r2, #316	; 0x13c
   11e68:	movt	r2, #3
   11e6c:	mov	r3, #0
   11e70:	str	r0, [r2, #20]
   11e74:	b	11a48 <__assert_fail@plt+0x60c>
   11e78:	add	r1, sp, #12
   11e7c:	mov	r0, r4
   11e80:	str	r2, [sp, #4]
   11e84:	bl	11340 <strtod@plt>
   11e88:	vmov.f64	d8, d0
   11e8c:	ldr	r2, [sp, #4]
   11e90:	ldr	r3, [sp, #12]
   11e94:	ldrb	r1, [r3]
   11e98:	cmp	r1, #0
   11e9c:	bne	11f3c <__assert_fail@plt+0xb00>
   11ea0:	vldr	d0, [pc, #184]	; 11f60 <__assert_fail@plt+0xb24>
   11ea4:	movw	r3, #1736	; 0x6c8
   11ea8:	movt	r3, #3
   11eac:	movw	r2, #1588	; 0x634
   11eb0:	movt	r2, #3
   11eb4:	ldr	r0, [r3]
   11eb8:	movw	r1, #1752	; 0x6d8
   11ebc:	movt	r1, #3
   11ec0:	ldrb	r2, [r2, #8]
   11ec4:	vmul.f64	d0, d8, d0
   11ec8:	orr	r0, r0, #2
   11ecc:	str	r0, [r3]
   11ed0:	eor	r2, r2, #1
   11ed4:	vcvt.u32.f64	s15, d0
   11ed8:	vmov	r3, s15
   11edc:	vstr	s15, [r1]
   11ee0:	cmp	r3, #199	; 0xc7
   11ee4:	movhi	r2, #0
   11ee8:	andls	r2, r2, #1
   11eec:	cmp	r2, #0
   11ef0:	beq	11a10 <__assert_fail@plt+0x5d4>
   11ef4:	mov	r3, r4
   11ef8:	movw	r2, #54980	; 0xd6c4
   11efc:	movt	r2, #1
   11f00:	mov	r1, #0
   11f04:	mov	r0, #1
   11f08:	bl	11238 <error@plt>
   11f0c:	mov	r3, #0
   11f10:	b	11a48 <__assert_fail@plt+0x60c>
   11f14:	movw	r2, #1736	; 0x6c8
   11f18:	movt	r2, #3
   11f1c:	ldr	r1, [r2]
   11f20:	mov	r3, #0
   11f24:	orr	r1, r1, #4
   11f28:	str	r1, [r2]
   11f2c:	b	11a48 <__assert_fail@plt+0x60c>
   11f30:	movw	r1, #17072	; 0x42b0
   11f34:	movt	r1, #1
   11f38:	b	11bc8 <__assert_fail@plt+0x78c>
   11f3c:	mov	r0, r2
   11f40:	movw	r1, #54948	; 0xd6a4
   11f44:	movt	r1, #1
   11f48:	mov	r2, r4
   11f4c:	bl	18de8 <argp_error@@Base>
   11f50:	b	11ea0 <__assert_fail@plt+0xa64>
   11f54:	movw	r3, #55100	; 0xd73c
   11f58:	movt	r3, #1
   11f5c:	b	11ae0 <__assert_fail@plt+0x6a4>
   11f60:	andeq	r0, r0, r0
   11f64:	addmi	r4, pc, r0
   11f68:	andeq	r0, r3, r0, asr #12
   11f6c:	andeq	r0, r3, r0, asr #2
   11f70:	movw	r1, #55036	; 0xd6fc
   11f74:	movt	r1, #1
   11f78:	str	r4, [sp, #-8]!
   11f7c:	mov	r4, r0
   11f80:	str	lr, [sp, #4]
   11f84:	bl	11208 <strcasecmp@plt>
   11f88:	cmp	r0, #0
   11f8c:	movweq	r0, #14112	; 0x3720
   11f90:	movteq	r0, #1
   11f94:	beq	11fb8 <__assert_fail@plt+0xb7c>
   11f98:	movw	r1, #55044	; 0xd704
   11f9c:	movt	r1, #1
   11fa0:	mov	r0, r4
   11fa4:	bl	11208 <strcasecmp@plt>
   11fa8:	cmp	r0, #0
   11fac:	movweq	r0, #17072	; 0x42b0
   11fb0:	movteq	r0, #1
   11fb4:	bne	11fc4 <__assert_fail@plt+0xb88>
   11fb8:	ldr	r4, [sp]
   11fbc:	add	sp, sp, #4
   11fc0:	pop	{pc}		; (ldr pc, [sp], #4)
   11fc4:	movw	r1, #55056	; 0xd710
   11fc8:	movt	r1, #1
   11fcc:	mov	r0, r4
   11fd0:	bl	11208 <strcasecmp@plt>
   11fd4:	cmp	r0, #0
   11fd8:	bne	11ff0 <__assert_fail@plt+0xbb4>
   11fdc:	ldr	r4, [sp]
   11fe0:	add	sp, sp, #4
   11fe4:	movw	r0, #16512	; 0x4080
   11fe8:	movt	r0, #1
   11fec:	pop	{pc}		; (ldr pc, [sp], #4)
   11ff0:	movw	r1, #55064	; 0xd718
   11ff4:	movt	r1, #1
   11ff8:	mov	r0, r4
   11ffc:	bl	11208 <strcasecmp@plt>
   12000:	cmp	r0, #0
   12004:	beq	11fdc <__assert_fail@plt+0xba0>
   12008:	mov	r0, #1
   1200c:	mov	r3, r4
   12010:	movw	r2, #55072	; 0xd720
   12014:	movt	r2, #1
   12018:	mov	r1, #0
   1201c:	bl	11238 <error@plt>
   12020:	mov	r0, #0
   12024:	b	11fb8 <__assert_fail@plt+0xb7c>
   12028:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1202c:	mov	r5, r0
   12030:	mov	r0, #2
   12034:	strd	r6, [sp, #8]
   12038:	movw	r6, #1588	; 0x634
   1203c:	movt	r6, #3
   12040:	strd	r8, [sp, #16]
   12044:	strd	sl, [sp, #24]
   12048:	str	lr, [sp, #32]
   1204c:	sub	sp, sp, #188	; 0xbc
   12050:	str	r1, [sp, #20]
   12054:	movw	r1, #6152	; 0x1808
   12058:	movt	r1, #1
   1205c:	bl	11190 <signal@plt>
   12060:	ldr	r1, [r6, #28]
   12064:	mov	r2, #0
   12068:	mov	r3, #0
   1206c:	ldr	r8, [r5]
   12070:	strd	r2, [sp, #24]
   12074:	strd	r2, [sp, #40]	; 0x28
   12078:	cmp	r1, #0
   1207c:	strd	r2, [sp, #48]	; 0x30
   12080:	movne	r4, #0
   12084:	add	r8, r8, #1
   12088:	beq	120a4 <__assert_fail@plt+0xc68>
   1208c:	mov	r0, r5
   12090:	add	r4, r4, #1
   12094:	bl	1181c <__assert_fail@plt+0x3e0>
   12098:	ldr	r3, [r6, #28]
   1209c:	cmp	r3, r4
   120a0:	bhi	1208c <__assert_fail@plt+0xc50>
   120a4:	movw	sl, #1736	; 0x6c8
   120a8:	movt	sl, #3
   120ac:	ldr	r3, [sl]
   120b0:	tst	r3, #1
   120b4:	movwne	r7, #10000	; 0x2710
   120b8:	bne	120e0 <__assert_fail@plt+0xca4>
   120bc:	ldr	r2, [r5, #20]
   120c0:	movw	r3, #19923	; 0x4dd3
   120c4:	movt	r3, #4194	; 0x1062
   120c8:	mov	r7, #1000	; 0x3e8
   120cc:	umull	r1, r3, r3, r2
   120d0:	lsr	r3, r3, #6
   120d4:	mls	r2, r7, r3, r2
   120d8:	str	r3, [sp, #40]	; 0x28
   120dc:	mul	r7, r7, r2
   120e0:	mov	r1, #0
   120e4:	add	r0, sp, #32
   120e8:	mov	r4, r1
   120ec:	movw	r9, #316	; 0x13c
   120f0:	movt	r9, #3
   120f4:	str	r1, [sp, #12]
   120f8:	str	r7, [sp, #44]	; 0x2c
   120fc:	bl	1122c <gettimeofday@plt>
   12100:	mov	r0, r5
   12104:	str	r4, [sp, #8]
   12108:	bl	1181c <__assert_fail@plt+0x3e0>
   1210c:	str	r4, [sp, #16]
   12110:	movw	r4, #16959	; 0x423f
   12114:	movt	r4, #15
   12118:	ldr	fp, [r6]
   1211c:	cmp	fp, #0
   12120:	bne	12248 <__assert_fail@plt+0xe0c>
   12124:	mov	r2, #128	; 0x80
   12128:	mov	r1, fp
   1212c:	add	r0, sp, #56	; 0x38
   12130:	bl	11328 <memset@plt>
   12134:	ldr	r2, [r5]
   12138:	mov	ip, #1
   1213c:	mov	r1, fp
   12140:	add	r0, sp, #48	; 0x30
   12144:	cmp	r2, #0
   12148:	add	r3, r2, #31
   1214c:	movge	r3, r2
   12150:	rsbs	lr, r2, #0
   12154:	and	lr, lr, #31
   12158:	asr	r3, r3, #5
   1215c:	and	r2, r2, #31
   12160:	rsbpl	r2, lr, #0
   12164:	add	lr, sp, #184	; 0xb8
   12168:	add	r3, lr, r3, lsl #2
   1216c:	ldr	lr, [r3, #-128]	; 0xffffff80
   12170:	orr	r2, lr, ip, lsl r2
   12174:	str	r2, [r3, #-128]	; 0xffffff80
   12178:	bl	1122c <gettimeofday@plt>
   1217c:	ldrd	r2, [sp, #32]
   12180:	ldr	ip, [sp, #40]	; 0x28
   12184:	ldrd	r0, [sp, #48]	; 0x30
   12188:	add	r3, r7, r3
   1218c:	add	r2, r2, ip
   12190:	sub	r3, r3, r1
   12194:	sub	r2, r2, r0
   12198:	cmp	r3, #0
   1219c:	strd	r2, [sp, #24]
   121a0:	bge	1227c <__assert_fail@plt+0xe40>
   121a4:	add	r3, r3, #999424	; 0xf4000
   121a8:	sub	r2, r2, #1
   121ac:	add	r3, r3, #576	; 0x240
   121b0:	cmp	r3, #0
   121b4:	blt	121a4 <__assert_fail@plt+0xd68>
   121b8:	strd	r2, [sp, #24]
   121bc:	cmp	r2, #0
   121c0:	bge	121d0 <__assert_fail@plt+0xd94>
   121c4:	mov	r2, #0
   121c8:	mov	r3, #0
   121cc:	strd	r2, [sp, #24]
   121d0:	add	r0, sp, #24
   121d4:	mov	r3, #0
   121d8:	add	r1, sp, #56	; 0x38
   121dc:	mov	r2, r3
   121e0:	str	r0, [sp]
   121e4:	mov	r0, r8
   121e8:	bl	111c0 <select@plt>
   121ec:	cmp	r0, #0
   121f0:	blt	122d4 <__assert_fail@plt+0xe98>
   121f4:	cmp	r0, #1
   121f8:	beq	122f8 <__assert_fail@plt+0xebc>
   121fc:	ldr	r3, [r5, #8]
   12200:	cmp	r3, #0
   12204:	beq	122a4 <__assert_fail@plt+0xe68>
   12208:	ldr	r2, [r5, #112]	; 0x70
   1220c:	cmp	r3, r2
   12210:	bhi	122a4 <__assert_fail@plt+0xe68>
   12214:	ldr	r3, [sp, #8]
   12218:	cmp	r3, #0
   1221c:	bne	12248 <__assert_fail@plt+0xe0c>
   12220:	ldr	r3, [r9, #16]
   12224:	mov	r2, #1
   12228:	str	r2, [sp, #8]
   1222c:	str	r3, [sp, #40]	; 0x28
   12230:	mov	r1, #0
   12234:	add	r0, sp, #32
   12238:	bl	1122c <gettimeofday@plt>
   1223c:	ldr	fp, [r6]
   12240:	cmp	fp, #0
   12244:	beq	12124 <__assert_fail@plt+0xce8>
   12248:	mov	r0, r5
   1224c:	bl	12980 <__assert_fail@plt+0x1544>
   12250:	ldr	r0, [sp, #20]
   12254:	cmp	r0, #0
   12258:	beq	12260 <__assert_fail@plt+0xe24>
   1225c:	blx	r0
   12260:	add	sp, sp, #188	; 0xbc
   12264:	ldrd	r4, [sp]
   12268:	ldrd	r6, [sp, #8]
   1226c:	ldrd	r8, [sp, #16]
   12270:	ldrd	sl, [sp, #24]
   12274:	add	sp, sp, #32
   12278:	pop	{pc}		; (ldr pc, [sp], #4)
   1227c:	cmp	r3, r4
   12280:	ble	121bc <__assert_fail@plt+0xd80>
   12284:	add	r1, r2, #1
   12288:	sub	r3, r3, #999424	; 0xf4000
   1228c:	mov	r2, r1
   12290:	sub	r3, r3, #576	; 0x240
   12294:	add	r1, r1, #1
   12298:	cmp	r3, r4
   1229c:	bgt	12288 <__assert_fail@plt+0xe4c>
   122a0:	b	121b8 <__assert_fail@plt+0xd7c>
   122a4:	mov	r0, r5
   122a8:	bl	1181c <__assert_fail@plt+0x3e0>
   122ac:	ldr	r3, [sl]
   122b0:	and	r3, r3, #9
   122b4:	cmp	r3, #1
   122b8:	beq	1235c <__assert_fail@plt+0xf20>
   122bc:	add	r0, r5, #12
   122c0:	ldr	r1, [r9, #12]
   122c4:	bl	129c8 <__assert_fail@plt+0x158c>
   122c8:	cmp	r0, #0
   122cc:	beq	12230 <__assert_fail@plt+0xdf4>
   122d0:	b	12248 <__assert_fail@plt+0xe0c>
   122d4:	bl	112f8 <__errno_location@plt>
   122d8:	ldr	r1, [r0]
   122dc:	cmp	r1, #4
   122e0:	beq	12118 <__assert_fail@plt+0xcdc>
   122e4:	movw	r2, #55260	; 0xd7dc
   122e8:	movt	r2, #1
   122ec:	mov	r0, #1
   122f0:	bl	11238 <error@plt>
   122f4:	b	12118 <__assert_fail@plt+0xcdc>
   122f8:	mov	r0, r5
   122fc:	bl	146a8 <__assert_fail@plt+0x326c>
   12300:	cmp	r0, #0
   12304:	bne	12314 <__assert_fail@plt+0xed8>
   12308:	ldr	r3, [sp, #12]
   1230c:	add	r3, r3, #1
   12310:	str	r3, [sp, #12]
   12314:	ldr	r3, [sp, #16]
   12318:	cmp	r3, #0
   1231c:	beq	12374 <__assert_fail@plt+0xf38>
   12320:	add	r0, r5, #12
   12324:	ldr	r1, [r9, #12]
   12328:	bl	129c8 <__assert_fail@plt+0x158c>
   1232c:	cmp	r0, #0
   12330:	bne	12248 <__assert_fail@plt+0xe0c>
   12334:	ldr	r2, [r5, #8]
   12338:	ldr	r3, [sp, #12]
   1233c:	cmp	r2, r3
   12340:	movhi	r3, #0
   12344:	movls	r3, #1
   12348:	cmp	r2, #0
   1234c:	moveq	r3, #0
   12350:	cmp	r3, #0
   12354:	beq	12118 <__assert_fail@plt+0xcdc>
   12358:	b	12248 <__assert_fail@plt+0xe0c>
   1235c:	movw	r3, #1580	; 0x62c
   12360:	movt	r3, #3
   12364:	mov	r0, #46	; 0x2e
   12368:	ldr	r1, [r3]
   1236c:	bl	113c4 <putc@plt>
   12370:	b	122bc <__assert_fail@plt+0xe80>
   12374:	add	r0, sp, #48	; 0x30
   12378:	mov	r1, r3
   1237c:	str	r0, [sp, #16]
   12380:	bl	1122c <gettimeofday@plt>
   12384:	b	12320 <__assert_fail@plt+0xee4>
   12388:	movw	r3, #1580	; 0x62c
   1238c:	movt	r3, #3
   12390:	str	r4, [sp, #-8]!
   12394:	movw	r4, #1744	; 0x6d0
   12398:	movt	r4, #3
   1239c:	ldr	r0, [r3]
   123a0:	str	lr, [sp, #4]
   123a4:	bl	11130 <fflush@plt>
   123a8:	ldr	r3, [r4]
   123ac:	movw	r0, #55276	; 0xd7ec
   123b0:	movt	r0, #1
   123b4:	ldr	r1, [r3, #52]	; 0x34
   123b8:	bl	11118 <printf@plt>
   123bc:	ldr	r3, [r4]
   123c0:	movw	r0, #55304	; 0xd808
   123c4:	movt	r0, #1
   123c8:	ldr	r1, [r3, #112]	; 0x70
   123cc:	bl	11118 <printf@plt>
   123d0:	ldr	r3, [r4]
   123d4:	movw	r0, #55332	; 0xd824
   123d8:	movt	r0, #1
   123dc:	ldr	r1, [r3, #116]	; 0x74
   123e0:	bl	11118 <printf@plt>
   123e4:	ldr	r3, [r4]
   123e8:	ldr	r1, [r3, #120]	; 0x78
   123ec:	cmp	r1, #0
   123f0:	bne	12450 <__assert_fail@plt+0x1014>
   123f4:	ldr	r2, [r3, #112]	; 0x70
   123f8:	cmp	r2, #0
   123fc:	beq	12418 <__assert_fail@plt+0xfdc>
   12400:	ldr	r1, [r3, #116]	; 0x74
   12404:	cmp	r2, r1
   12408:	bcs	12430 <__assert_fail@plt+0xff4>
   1240c:	movw	r0, #55376	; 0xd850
   12410:	movt	r0, #1
   12414:	bl	11118 <printf@plt>
   12418:	mov	r0, #10
   1241c:	bl	11334 <putchar@plt>
   12420:	ldr	r4, [sp]
   12424:	add	sp, sp, #4
   12428:	mov	r0, #0
   1242c:	pop	{pc}		; (ldr pc, [sp], #4)
   12430:	sub	r1, r2, r1
   12434:	mov	r3, #100	; 0x64
   12438:	movw	r0, #55416	; 0xd878
   1243c:	movt	r0, #1
   12440:	mul	r1, r3, r1
   12444:	udiv	r1, r1, r2
   12448:	bl	11118 <printf@plt>
   1244c:	b	12418 <__assert_fail@plt+0xfdc>
   12450:	movw	r0, #55356	; 0xd83c
   12454:	movt	r0, #1
   12458:	bl	11118 <printf@plt>
   1245c:	ldr	r3, [r4]
   12460:	b	123f4 <__assert_fail@plt+0xfb8>
   12464:	andeq	r0, r0, r0
   12468:	strd	r4, [sp, #-20]!	; 0xffffffec
   1246c:	mov	r5, r2
   12470:	mov	r2, #0
   12474:	strd	r6, [sp, #8]
   12478:	mov	r6, r1
   1247c:	mov	r7, r0
   12480:	str	lr, [sp, #16]
   12484:	sub	sp, sp, #20
   12488:	add	r1, sp, #12
   1248c:	bl	112c8 <strtoul@plt>
   12490:	ldr	r3, [sp, #12]
   12494:	mov	r4, r0
   12498:	ldrb	r2, [r3]
   1249c:	cmp	r2, #0
   124a0:	bne	12504 <__assert_fail@plt+0x10c8>
   124a4:	orrs	r1, r5, r4
   124a8:	beq	124ec <__assert_fail@plt+0x10b0>
   124ac:	cmp	r6, #0
   124b0:	cmpne	r4, r6
   124b4:	bhi	124d0 <__assert_fail@plt+0x1094>
   124b8:	mov	r0, r4
   124bc:	add	sp, sp, #20
   124c0:	ldrd	r4, [sp]
   124c4:	ldrd	r6, [sp, #8]
   124c8:	add	sp, sp, #16
   124cc:	pop	{pc}		; (ldr pc, [sp], #4)
   124d0:	mov	r3, r7
   124d4:	movw	r2, #56580	; 0xdd04
   124d8:	movt	r2, #1
   124dc:	mov	r1, #0
   124e0:	mov	r0, #1
   124e4:	bl	11238 <error@plt>
   124e8:	b	124b8 <__assert_fail@plt+0x107c>
   124ec:	mov	r3, r7
   124f0:	movw	r2, #54980	; 0xd6c4
   124f4:	movt	r2, #1
   124f8:	mov	r0, #1
   124fc:	bl	11238 <error@plt>
   12500:	b	124b8 <__assert_fail@plt+0x107c>
   12504:	movw	r2, #54948	; 0xd6a4
   12508:	movt	r2, #1
   1250c:	str	r3, [sp]
   12510:	mov	r1, #0
   12514:	mov	r0, #1
   12518:	mov	r3, r7
   1251c:	bl	11238 <error@plt>
   12520:	b	124a4 <__assert_fail@plt+0x1068>
   12524:	strd	r4, [sp, #-16]!
   12528:	movw	r4, #316	; 0x13c
   1252c:	movt	r4, #3
   12530:	ldr	r3, [r4]
   12534:	str	r6, [sp, #8]
   12538:	str	lr, [sp, #12]
   1253c:	cmp	r3, #0
   12540:	bne	12554 <__assert_fail@plt+0x1118>
   12544:	ldrd	r4, [sp]
   12548:	ldr	r6, [sp, #8]
   1254c:	add	sp, sp, #12
   12550:	pop	{pc}		; (ldr pc, [sp], #4)
   12554:	mov	r5, r0
   12558:	mov	r0, r3
   1255c:	mov	r6, r1
   12560:	bl	1b2c4 <argp_parse@@Base+0x1dc8>
   12564:	movw	r2, #1732	; 0x6c4
   12568:	movt	r2, #3
   1256c:	cmp	r5, #0
   12570:	str	r0, [r2]
   12574:	beq	125c0 <__assert_fail@plt+0x1184>
   12578:	ldr	r1, [r4]
   1257c:	add	r1, r0, r1
   12580:	cmp	r0, r1
   12584:	bcs	12544 <__assert_fail@plt+0x1108>
   12588:	sub	r2, r0, #1
   1258c:	sub	r1, r1, #1
   12590:	mov	r3, #0
   12594:	ldrb	ip, [r5, r3]
   12598:	add	r3, r3, #1
   1259c:	cmp	r6, r3
   125a0:	movls	r3, #0
   125a4:	strb	ip, [r2, #1]!
   125a8:	cmp	r1, r2
   125ac:	bne	12594 <__assert_fail@plt+0x1158>
   125b0:	ldrd	r4, [sp]
   125b4:	ldr	r6, [sp, #8]
   125b8:	add	sp, sp, #12
   125bc:	pop	{pc}		; (ldr pc, [sp], #4)
   125c0:	ldr	r3, [r4]
   125c4:	cmp	r3, #0
   125c8:	beq	12544 <__assert_fail@plt+0x1108>
   125cc:	cmp	r3, #1
   125d0:	strb	r5, [r0]
   125d4:	bls	12544 <__assert_fail@plt+0x1108>
   125d8:	mov	r3, #1
   125dc:	ldr	r1, [r2]
   125e0:	strb	r3, [r1, r3]
   125e4:	add	r3, r3, #1
   125e8:	ldr	r1, [r4]
   125ec:	cmp	r1, r3
   125f0:	bhi	125dc <__assert_fail@plt+0x11a0>
   125f4:	ldrd	r4, [sp]
   125f8:	ldr	r6, [sp, #8]
   125fc:	add	sp, sp, #12
   12600:	pop	{pc}		; (ldr pc, [sp], #4)
   12604:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12608:	strd	r6, [sp, #8]
   1260c:	strd	r8, [sp, #16]
   12610:	mov	r9, r1
   12614:	str	lr, [sp, #24]
   12618:	sub	sp, sp, #12
   1261c:	ldrb	r5, [r0]
   12620:	cmp	r5, #0
   12624:	beq	126ac <__assert_fail@plt+0x1270>
   12628:	ldr	r3, [r1]
   1262c:	cmp	r3, #0
   12630:	ble	126c8 <__assert_fail@plt+0x128c>
   12634:	movw	r8, #56608	; 0xdd20
   12638:	movt	r8, #1
   1263c:	movw	r7, #56616	; 0xdd28
   12640:	movt	r7, #1
   12644:	mov	r4, r0
   12648:	sub	r6, r2, #1
   1264c:	mov	r5, #0
   12650:	b	12660 <__assert_fail@plt+0x1224>
   12654:	ldr	r3, [r9]
   12658:	cmp	r3, r5
   1265c:	ble	126ac <__assert_fail@plt+0x1270>
   12660:	add	r3, sp, #4
   12664:	mov	r2, sp
   12668:	mov	r1, r8
   1266c:	mov	r0, r4
   12670:	bl	113b8 <sscanf@plt>
   12674:	cmp	r0, #1
   12678:	mov	r3, r4
   1267c:	mov	r2, r7
   12680:	mov	r1, #0
   12684:	mov	r0, #1
   12688:	beq	12690 <__assert_fail@plt+0x1254>
   1268c:	bl	11238 <error@plt>
   12690:	ldr	r3, [sp]
   12694:	add	r5, r5, #1
   12698:	ldr	r2, [sp, #4]
   1269c:	strb	r3, [r6, #1]!
   126a0:	ldrb	r3, [r4, r2]!
   126a4:	cmp	r3, #0
   126a8:	bne	12654 <__assert_fail@plt+0x1218>
   126ac:	str	r5, [r9]
   126b0:	add	sp, sp, #12
   126b4:	ldrd	r4, [sp]
   126b8:	ldrd	r6, [sp, #8]
   126bc:	ldrd	r8, [sp, #16]
   126c0:	add	sp, sp, #24
   126c4:	pop	{pc}		; (ldr pc, [sp], #4)
   126c8:	mov	r5, #0
   126cc:	b	126ac <__assert_fail@plt+0x1270>
   126d0:	ldrd	r2, [r0]
   126d4:	ldr	ip, [r1, #4]
   126d8:	sub	r3, r3, ip
   126dc:	cmp	r3, #0
   126e0:	str	r3, [r0, #4]
   126e4:	bge	126f8 <__assert_fail@plt+0x12bc>
   126e8:	add	r3, r3, #999424	; 0xf4000
   126ec:	sub	r2, r2, #1
   126f0:	add	r3, r3, #576	; 0x240
   126f4:	strd	r2, [r0]
   126f8:	ldr	r3, [r1]
   126fc:	sub	r2, r2, r3
   12700:	str	r2, [r0]
   12704:	bx	lr
   12708:	vcmpe.f64	d0, #0.0
   1270c:	vmrs	APSR_nzcv, fpscr
   12710:	vnegmi.f64	d0, d0
   12714:	bx	lr
   12718:	vcmpe.f64	d0, #0.0
   1271c:	vmrs	APSR_nzcv, fpscr
   12720:	bmi	1276c <__assert_fail@plt+0x1330>
   12724:	vcmpe.f64	d0, d1
   12728:	vmrs	APSR_nzcv, fpscr
   1272c:	bmi	1276c <__assert_fail@plt+0x1330>
   12730:	vldr	d4, [pc, #88]	; 12790 <__assert_fail@plt+0x1354>
   12734:	vmul.f64	d6, d0, d4
   12738:	vdiv.f64	d7, d0, d6
   1273c:	vadd.f64	d7, d7, d6
   12740:	vmul.f64	d7, d7, d4
   12744:	vsub.f64	d5, d7, d6
   12748:	vmov.f64	d6, d7
   1274c:	vcmpe.f64	d5, #0.0
   12750:	vneg.f64	d3, d5
   12754:	vmrs	APSR_nzcv, fpscr
   12758:	bmi	12778 <__assert_fail@plt+0x133c>
   1275c:	vcmpe.f64	d5, d1
   12760:	vmrs	APSR_nzcv, fpscr
   12764:	bgt	12738 <__assert_fail@plt+0x12fc>
   12768:	b	12770 <__assert_fail@plt+0x1334>
   1276c:	vldr	d7, [pc, #36]	; 12798 <__assert_fail@plt+0x135c>
   12770:	vmov.f64	d0, d7
   12774:	bx	lr
   12778:	vcmpe.f64	d1, d3
   1277c:	vmrs	APSR_nzcv, fpscr
   12780:	bmi	12738 <__assert_fail@plt+0x12fc>
   12784:	vmov.f64	d0, d7
   12788:	bx	lr
   1278c:	nop	{0}
   12790:	andeq	r0, r0, r0
   12794:	svccc	0x00e00000
	...
   127a0:	mvn	r0, r0
   127a4:	lsr	r0, r0, #31
   127a8:	bx	lr
   127ac:	cmp	r2, #0
   127b0:	bic	r3, r2, #-2147483648	; 0x80000000
   127b4:	str	r4, [sp, #-8]!
   127b8:	movwge	r2, #56644	; 0xdd44
   127bc:	movwlt	r2, #56648	; 0xdd48
   127c0:	str	lr, [sp, #4]
   127c4:	mov	r4, r0
   127c8:	movtge	r2, #1
   127cc:	movtlt	r2, #1
   127d0:	bl	11304 <snprintf@plt>
   127d4:	mov	r0, r4
   127d8:	ldr	r4, [sp]
   127dc:	add	sp, sp, #4
   127e0:	pop	{pc}		; (ldr pc, [sp], #4)
   127e4:	ldr	r3, [r0, #80]	; 0x50
   127e8:	strd	r4, [sp, #-16]!
   127ec:	mov	r5, r0
   127f0:	str	r6, [sp, #8]
   127f4:	str	lr, [sp, #12]
   127f8:	cmp	r3, #0
   127fc:	beq	12820 <__assert_fail@plt+0x13e4>
   12800:	ldr	r4, [r5, #76]	; 0x4c
   12804:	cmp	r4, #0
   12808:	movne	r0, #0
   1280c:	beq	12848 <__assert_fail@plt+0x140c>
   12810:	ldrd	r4, [sp]
   12814:	ldr	r6, [sp, #8]
   12818:	add	sp, sp, #12
   1281c:	pop	{pc}		; (ldr pc, [sp], #4)
   12820:	ldr	r0, [r0, #56]	; 0x38
   12824:	cmp	r1, #0
   12828:	addne	r0, r0, #8
   1282c:	addeq	r0, r0, #80	; 0x50
   12830:	bl	1b920 <argp_parse@@Base+0x2424>
   12834:	cmp	r0, #0
   12838:	str	r0, [r5, #80]	; 0x50
   1283c:	bne	12800 <__assert_fail@plt+0x13c4>
   12840:	mvn	r0, #0
   12844:	b	12810 <__assert_fail@plt+0x13d4>
   12848:	ldr	r0, [r5, #72]	; 0x48
   1284c:	bl	1b920 <argp_parse@@Base+0x2424>
   12850:	cmp	r0, #0
   12854:	str	r0, [r5, #76]	; 0x4c
   12858:	beq	12840 <__assert_fail@plt+0x1404>
   1285c:	mov	r1, r4
   12860:	ldr	r2, [r5, #72]	; 0x48
   12864:	bl	11328 <memset@plt>
   12868:	mov	r0, r4
   1286c:	ldrd	r4, [sp]
   12870:	ldr	r6, [sp, #8]
   12874:	add	sp, sp, #12
   12878:	pop	{pc}		; (ldr pc, [sp], #4)
   1287c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12880:	mov	r4, r0
   12884:	mov	r5, r2
   12888:	strd	r6, [sp, #8]
   1288c:	mov	r6, r3
   12890:	ldr	r3, [r0, #80]	; 0x50
   12894:	str	r8, [sp, #16]
   12898:	mov	r8, r1
   1289c:	ldrb	r1, [sp, #24]
   128a0:	str	lr, [sp, #20]
   128a4:	cmp	r3, #0
   128a8:	beq	128f8 <__assert_fail@plt+0x14bc>
   128ac:	ldr	r7, [r4, #76]	; 0x4c
   128b0:	cmp	r7, #0
   128b4:	beq	12920 <__assert_fail@plt+0x14e4>
   128b8:	ldr	r2, [r4, #56]	; 0x38
   128bc:	add	r3, r5, r6
   128c0:	cmp	r2, r3
   128c4:	bcc	12918 <__assert_fail@plt+0x14dc>
   128c8:	ldr	r0, [r4, #80]	; 0x50
   128cc:	mov	r2, r6
   128d0:	mov	r1, r8
   128d4:	add	r0, r0, #8
   128d8:	add	r0, r0, r5
   128dc:	bl	11184 <memcpy@plt>
   128e0:	mov	r0, #0
   128e4:	ldrd	r4, [sp]
   128e8:	ldrd	r6, [sp, #8]
   128ec:	ldr	r8, [sp, #16]
   128f0:	add	sp, sp, #20
   128f4:	pop	{pc}		; (ldr pc, [sp], #4)
   128f8:	ldr	r0, [r0, #56]	; 0x38
   128fc:	cmp	r1, #0
   12900:	addne	r0, r0, #8
   12904:	addeq	r0, r0, #80	; 0x50
   12908:	bl	1b920 <argp_parse@@Base+0x2424>
   1290c:	cmp	r0, #0
   12910:	str	r0, [r4, #80]	; 0x50
   12914:	bne	128ac <__assert_fail@plt+0x1470>
   12918:	mvn	r0, #0
   1291c:	b	128e4 <__assert_fail@plt+0x14a8>
   12920:	ldr	r0, [r4, #72]	; 0x48
   12924:	bl	1b920 <argp_parse@@Base+0x2424>
   12928:	cmp	r0, #0
   1292c:	str	r0, [r4, #76]	; 0x4c
   12930:	beq	12918 <__assert_fail@plt+0x14dc>
   12934:	mov	r1, r7
   12938:	ldr	r2, [r4, #72]	; 0x48
   1293c:	bl	11328 <memset@plt>
   12940:	b	128b8 <__assert_fail@plt+0x147c>
   12944:	str	r1, [r0, #8]
   12948:	bx	lr
   1294c:	push	{lr}		; (str lr, [sp, #-4]!)
   12950:	sub	sp, sp, #20
   12954:	ldr	r0, [r0]
   12958:	str	r3, [sp]
   1295c:	add	r3, sp, #12
   12960:	str	r2, [sp, #12]
   12964:	mov	r2, r1
   12968:	mov	r1, #1
   1296c:	bl	1110c <setsockopt@plt>
   12970:	add	sp, sp, #20
   12974:	pop	{pc}		; (ldr pc, [sp], #4)
   12978:	str	r1, [r0, #20]
   1297c:	bx	lr
   12980:	str	r4, [sp, #-8]!
   12984:	mov	r4, r0
   12988:	ldr	r0, [r0, #80]	; 0x50
   1298c:	str	lr, [sp, #4]
   12990:	cmp	r0, #0
   12994:	beq	129a4 <__assert_fail@plt+0x1568>
   12998:	bl	1a534 <argp_parse@@Base+0x1038>
   1299c:	mov	r3, #0
   129a0:	str	r3, [r4, #80]	; 0x50
   129a4:	ldr	r0, [r4, #76]	; 0x4c
   129a8:	cmp	r0, #0
   129ac:	beq	129bc <__assert_fail@plt+0x1580>
   129b0:	bl	1a534 <argp_parse@@Base+0x1038>
   129b4:	mov	r3, #0
   129b8:	str	r3, [r4, #76]	; 0x4c
   129bc:	ldr	r4, [sp]
   129c0:	add	sp, sp, #4
   129c4:	pop	{pc}		; (ldr pc, [sp], #4)
   129c8:	strd	r4, [sp, #-12]!
   129cc:	mov	r4, r1
   129d0:	mov	r5, r0
   129d4:	str	lr, [sp, #8]
   129d8:	sub	sp, sp, #12
   129dc:	mov	r1, #0
   129e0:	mov	r0, sp
   129e4:	bl	1122c <gettimeofday@plt>
   129e8:	cmn	r4, #1
   129ec:	moveq	r0, #0
   129f0:	beq	12a1c <__assert_fail@plt+0x15e0>
   129f4:	ldm	sp, {r0, r3}
   129f8:	ldr	r2, [r5, #4]
   129fc:	sub	r3, r3, r2
   12a00:	cmp	r3, #0
   12a04:	ldr	r3, [r5]
   12a08:	sublt	r0, r0, #1
   12a0c:	sub	r0, r0, r3
   12a10:	cmp	r4, r0
   12a14:	movgt	r0, #0
   12a18:	movle	r0, #1
   12a1c:	add	sp, sp, #12
   12a20:	ldrd	r4, [sp]
   12a24:	add	sp, sp, #8
   12a28:	pop	{pc}		; (ldr pc, [sp], #4)
   12a2c:	mov	ip, #0
   12a30:	strd	r4, [sp, #-12]!
   12a34:	mov	r3, #46	; 0x2e
   12a38:	str	lr, [sp, #8]
   12a3c:	sub	sp, sp, #324	; 0x144
   12a40:	mov	lr, #1
   12a44:	add	r2, sp, #16
   12a48:	mov	r4, r0
   12a4c:	str	ip, [sp]
   12a50:	mov	r5, r1
   12a54:	stmib	sp, {ip, lr}
   12a58:	bl	1137c <getnameinfo@plt>
   12a5c:	subs	r3, r0, #0
   12a60:	bne	12b08 <__assert_fail@plt+0x16cc>
   12a64:	movw	r3, #1736	; 0x6c8
   12a68:	movt	r3, #3
   12a6c:	ldr	r3, [r3]
   12a70:	ands	r3, r3, #4
   12a74:	bne	12af8 <__assert_fail@plt+0x16bc>
   12a78:	mov	ip, #40	; 0x28
   12a7c:	mov	r1, r5
   12a80:	str	r3, [sp]
   12a84:	mov	r0, r4
   12a88:	add	r2, sp, #64	; 0x40
   12a8c:	stmib	sp, {r3, ip}
   12a90:	mov	r3, #256	; 0x100
   12a94:	bl	1137c <getnameinfo@plt>
   12a98:	cmp	r0, #0
   12a9c:	add	r0, sp, #16
   12aa0:	bne	12b44 <__assert_fail@plt+0x1708>
   12aa4:	bl	112d4 <strlen@plt>
   12aa8:	mov	r4, r0
   12aac:	add	r0, sp, #64	; 0x40
   12ab0:	bl	112d4 <strlen@plt>
   12ab4:	add	r4, r4, r0
   12ab8:	add	r4, r4, #4
   12abc:	mov	r0, r4
   12ac0:	bl	1b2c4 <argp_parse@@Base+0x1dc8>
   12ac4:	add	r3, sp, #16
   12ac8:	movw	r2, #56688	; 0xdd70
   12acc:	movt	r2, #1
   12ad0:	mov	r1, r4
   12ad4:	str	r3, [sp]
   12ad8:	add	r3, sp, #64	; 0x40
   12adc:	mov	r5, r0
   12ae0:	bl	11304 <snprintf@plt>
   12ae4:	mov	r0, r5
   12ae8:	add	sp, sp, #324	; 0x144
   12aec:	ldrd	r4, [sp]
   12af0:	add	sp, sp, #8
   12af4:	pop	{pc}		; (ldr pc, [sp], #4)
   12af8:	add	r0, sp, #16
   12afc:	bl	1b830 <argp_parse@@Base+0x2334>
   12b00:	mov	r5, r0
   12b04:	b	12ae4 <__assert_fail@plt+0x16a8>
   12b08:	cmn	r3, #11
   12b0c:	beq	12b50 <__assert_fail@plt+0x1714>
   12b10:	bl	1116c <gai_strerror@plt>
   12b14:	mov	r2, r0
   12b18:	movw	r3, #1576	; 0x628
   12b1c:	movt	r3, #3
   12b20:	movw	r1, #56656	; 0xdd50
   12b24:	movt	r1, #1
   12b28:	ldr	r0, [r3]
   12b2c:	bl	112ec <fprintf@plt>
   12b30:	movw	r0, #56680	; 0xdd68
   12b34:	movt	r0, #1
   12b38:	bl	1b830 <argp_parse@@Base+0x2334>
   12b3c:	mov	r5, r0
   12b40:	b	12ae4 <__assert_fail@plt+0x16a8>
   12b44:	bl	1b830 <argp_parse@@Base+0x2334>
   12b48:	mov	r5, r0
   12b4c:	b	12ae4 <__assert_fail@plt+0x16a8>
   12b50:	bl	112f8 <__errno_location@plt>
   12b54:	ldr	r0, [r0]
   12b58:	bl	11274 <strerror@plt>
   12b5c:	mov	r2, r0
   12b60:	b	12b18 <__assert_fail@plt+0x16dc>
   12b64:	movw	r3, #1736	; 0x6c8
   12b68:	movt	r3, #3
   12b6c:	strd	r4, [sp, #-20]!	; 0xffffffec
   12b70:	ldr	r3, [r3]
   12b74:	strd	r6, [sp, #8]
   12b78:	str	lr, [sp, #16]
   12b7c:	sub	sp, sp, #20
   12b80:	str	r0, [sp, #12]
   12b84:	tst	r3, #4
   12b88:	bne	12c04 <__assert_fail@plt+0x17c8>
   12b8c:	mov	r2, #2
   12b90:	mov	r1, #4
   12b94:	add	r0, sp, #12
   12b98:	bl	111d8 <gethostbyaddr@plt>
   12b9c:	subs	r6, r0, #0
   12ba0:	ldr	r0, [sp, #12]
   12ba4:	beq	12c04 <__assert_fail@plt+0x17c8>
   12ba8:	bl	111b4 <inet_ntoa@plt>
   12bac:	mov	r7, r0
   12bb0:	bl	112d4 <strlen@plt>
   12bb4:	mov	r4, r0
   12bb8:	ldr	r0, [r6]
   12bbc:	cmp	r0, #0
   12bc0:	addeq	r4, r4, #1
   12bc4:	beq	12bd4 <__assert_fail@plt+0x1798>
   12bc8:	bl	112d4 <strlen@plt>
   12bcc:	add	r4, r4, #5
   12bd0:	add	r4, r4, r0
   12bd4:	mov	r0, r4
   12bd8:	bl	1b2c4 <argp_parse@@Base+0x1dc8>
   12bdc:	ldr	r3, [r6]
   12be0:	mov	r5, r0
   12be4:	cmp	r3, #0
   12be8:	beq	12c28 <__assert_fail@plt+0x17ec>
   12bec:	mov	r1, r4
   12bf0:	movw	r2, #56688	; 0xdd70
   12bf4:	movt	r2, #1
   12bf8:	str	r7, [sp]
   12bfc:	bl	11304 <snprintf@plt>
   12c00:	b	12c10 <__assert_fail@plt+0x17d4>
   12c04:	bl	111b4 <inet_ntoa@plt>
   12c08:	bl	1b830 <argp_parse@@Base+0x2334>
   12c0c:	mov	r5, r0
   12c10:	mov	r0, r5
   12c14:	add	sp, sp, #20
   12c18:	ldrd	r4, [sp]
   12c1c:	ldrd	r6, [sp, #8]
   12c20:	add	sp, sp, #16
   12c24:	pop	{pc}		; (ldr pc, [sp], #4)
   12c28:	mov	r3, r7
   12c2c:	mov	r1, r4
   12c30:	movw	r2, #55152	; 0xd770
   12c34:	movt	r2, #1
   12c38:	bl	11304 <snprintf@plt>
   12c3c:	b	12c10 <__assert_fail@plt+0x17d4>
   12c40:	str	r4, [sp, #-24]!	; 0xffffffe8
   12c44:	movw	r4, #1744	; 0x6d0
   12c48:	movt	r4, #3
   12c4c:	strd	r6, [sp, #4]
   12c50:	strd	r8, [sp, #12]
   12c54:	str	lr, [sp, #20]
   12c58:	vpush	{d8}
   12c5c:	sub	sp, sp, #24
   12c60:	bl	12388 <__assert_fail@plt+0xf4c>
   12c64:	ldr	r3, [r4]
   12c68:	ldr	r0, [r3, #116]	; 0x74
   12c6c:	cmp	r0, #0
   12c70:	beq	12c88 <__assert_fail@plt+0x184c>
   12c74:	movw	r2, #316	; 0x13c
   12c78:	movt	r2, #3
   12c7c:	ldr	r2, [r2]
   12c80:	cmp	r2, #7
   12c84:	bhi	12cac <__assert_fail@plt+0x1870>
   12c88:	clz	r0, r0
   12c8c:	lsr	r0, r0, #5
   12c90:	add	sp, sp, #24
   12c94:	vpop	{d8}
   12c98:	ldr	r4, [sp]
   12c9c:	ldrd	r6, [sp, #4]
   12ca0:	ldrd	r8, [sp, #12]
   12ca4:	add	sp, sp, #20
   12ca8:	pop	{pc}		; (ldr pc, [sp], #4)
   12cac:	ldr	r2, [r3, #120]	; 0x78
   12cb0:	ldr	r3, [r3, #68]	; 0x44
   12cb4:	vldr	d1, [pc, #84]	; 12d10 <__assert_fail@plt+0x18d4>
   12cb8:	add	r0, r0, r2
   12cbc:	vmov	s15, r0
   12cc0:	ldrd	r8, [r3]
   12cc4:	vldr	d5, [r3, #16]
   12cc8:	vldr	d6, [r3, #24]
   12ccc:	ldrd	r6, [r3, #8]
   12cd0:	vcvt.f64.u32	d7, s15
   12cd4:	vdiv.f64	d8, d5, d7
   12cd8:	vdiv.f64	d0, d6, d7
   12cdc:	vmls.f64	d0, d8, d8
   12ce0:	bl	12718 <__assert_fail@plt+0x12dc>
   12ce4:	mov	r3, r9
   12ce8:	mov	r2, r8
   12cec:	vstr	d8, [sp]
   12cf0:	movw	r0, #56696	; 0xdd78
   12cf4:	movt	r0, #1
   12cf8:	strd	r6, [sp, #8]
   12cfc:	vstr	d0, [sp, #16]
   12d00:	bl	11118 <printf@plt>
   12d04:	ldr	r3, [r4]
   12d08:	ldr	r0, [r3, #116]	; 0x74
   12d0c:	b	12c88 <__assert_fail@plt+0x184c>
   12d10:	rscsle	sl, r1, #252, 18	; 0x3f0000
   12d14:	svccc	0x0040624d
   12d18:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12d1c:	cmp	r1, #20
   12d20:	strd	r6, [sp, #8]
   12d24:	strd	r8, [sp, #16]
   12d28:	strd	sl, [sp, #24]
   12d2c:	str	lr, [sp, #32]
   12d30:	sub	sp, sp, #52	; 0x34
   12d34:	str	r0, [sp, #16]
   12d38:	ble	12de4 <__assert_fail@plt+0x19a8>
   12d3c:	movw	r3, #1624	; 0x658
   12d40:	movt	r3, #3
   12d44:	movw	fp, #1580	; 0x62c
   12d48:	movt	fp, #3
   12d4c:	str	r3, [sp, #4]
   12d50:	movw	r3, #56796	; 0xdddc
   12d54:	movt	r3, #1
   12d58:	mov	r5, r1
   12d5c:	add	r4, r0, #20
   12d60:	str	r3, [sp, #12]
   12d64:	movw	r3, #1736	; 0x6c8
   12d68:	movt	r3, #3
   12d6c:	str	r3, [sp, #8]
   12d70:	b	12da0 <__assert_fail@plt+0x1964>
   12d74:	cmp	r1, #0
   12d78:	beq	12de4 <__assert_fail@plt+0x19a8>
   12d7c:	cmp	r1, #1
   12d80:	bne	12dc8 <__assert_fail@plt+0x198c>
   12d84:	movw	r0, #56876	; 0xde2c
   12d88:	movt	r0, #1
   12d8c:	sub	r5, r5, #1
   12d90:	bl	11118 <printf@plt>
   12d94:	cmp	r5, #20
   12d98:	add	r4, r4, #1
   12d9c:	ble	12de4 <__assert_fail@plt+0x19a8>
   12da0:	ldrb	r1, [r4]
   12da4:	cmp	r1, #7
   12da8:	beq	12e00 <__assert_fail@plt+0x19c4>
   12dac:	bls	12d74 <__assert_fail@plt+0x1938>
   12db0:	cmp	r1, #131	; 0x83
   12db4:	beq	12f94 <__assert_fail@plt+0x1b58>
   12db8:	cmp	r1, #137	; 0x89
   12dbc:	beq	13278 <__assert_fail@plt+0x1e3c>
   12dc0:	cmp	r1, #68	; 0x44
   12dc4:	beq	12f5c <__assert_fail@plt+0x1b20>
   12dc8:	sub	r5, r5, #1
   12dcc:	movw	r0, #56884	; 0xde34
   12dd0:	movt	r0, #1
   12dd4:	add	r4, r4, #1
   12dd8:	bl	11118 <printf@plt>
   12ddc:	cmp	r5, #20
   12de0:	bgt	12da0 <__assert_fail@plt+0x1964>
   12de4:	add	sp, sp, #52	; 0x34
   12de8:	ldrd	r4, [sp]
   12dec:	ldrd	r6, [sp, #8]
   12df0:	ldrd	r8, [sp, #16]
   12df4:	ldrd	sl, [sp, #24]
   12df8:	add	sp, sp, #32
   12dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   12e00:	ldrb	r6, [r4, #1]
   12e04:	add	r7, r4, #2
   12e08:	sub	r9, r5, #2
   12e0c:	ldrb	r3, [r4, #2]
   12e10:	cmp	r6, r3
   12e14:	movge	r6, r3
   12e18:	sub	r8, r6, #4
   12e1c:	cmp	r8, #0
   12e20:	suble	r5, r5, #3
   12e24:	movle	r4, r7
   12e28:	ble	12d94 <__assert_fail@plt+0x1958>
   12e2c:	ldr	r3, [sp, #4]
   12e30:	ldr	r2, [r3]
   12e34:	cmp	r2, r8
   12e38:	bne	12e94 <__assert_fail@plt+0x1a58>
   12e3c:	ldr	r3, [sp, #16]
   12e40:	add	r3, r3, #22
   12e44:	cmp	r7, r3
   12e48:	bne	12e94 <__assert_fail@plt+0x1a58>
   12e4c:	ldr	r1, [pc, #1068]	; 13280 <__assert_fail@plt+0x1e44>
   12e50:	mov	r0, r7
   12e54:	bl	111a8 <memcmp@plt>
   12e58:	ldr	r3, [sp, #8]
   12e5c:	ldr	r3, [r3]
   12e60:	and	r3, r3, #1
   12e64:	orrs	r3, r3, r0
   12e68:	bne	12e94 <__assert_fail@plt+0x1a58>
   12e6c:	movw	r0, #56780	; 0xddcc
   12e70:	movt	r0, #1
   12e74:	bl	11118 <printf@plt>
   12e78:	subs	r4, r6, #1
   12e7c:	addmi	r4, r6, #2
   12e80:	bic	r4, r4, #3
   12e84:	sub	r5, r9, r4
   12e88:	add	r4, r7, r4
   12e8c:	sub	r5, r5, #1
   12e90:	b	12d94 <__assert_fail@plt+0x1958>
   12e94:	cmp	r8, #39	; 0x27
   12e98:	ble	12f78 <__assert_fail@plt+0x1b3c>
   12e9c:	ldr	r2, [sp, #4]
   12ea0:	mov	r3, #0
   12ea4:	str	r3, [r2]
   12ea8:	sub	r6, r6, #5
   12eac:	ldr	r0, [sp, #12]
   12eb0:	add	r5, r4, r5
   12eb4:	bic	r6, r6, #3
   12eb8:	add	r8, r4, #42	; 0x2a
   12ebc:	add	r6, r6, #6
   12ec0:	movw	r9, #56776	; 0xddc8
   12ec4:	movt	r9, #1
   12ec8:	add	r4, r4, r6
   12ecc:	movw	sl, #56764	; 0xddbc
   12ed0:	movt	sl, #1
   12ed4:	bl	11118 <printf@plt>
   12ed8:	b	12f00 <__assert_fail@plt+0x1ac4>
   12edc:	bl	11118 <printf@plt>
   12ee0:	cmp	r4, r7
   12ee4:	mov	r0, #10
   12ee8:	sub	r6, r5, r7
   12eec:	beq	12f54 <__assert_fail@plt+0x1b18>
   12ef0:	cmp	r8, r7
   12ef4:	beq	1306c <__assert_fail@plt+0x1c30>
   12ef8:	ldr	r1, [fp]
   12efc:	bl	113c4 <putc@plt>
   12f00:	ldrb	r2, [r7, #1]
   12f04:	mov	r0, sl
   12f08:	ldrb	r1, [r7, #2]
   12f0c:	ldrb	r3, [r7, #3]
   12f10:	add	r1, r1, r2, lsl #8
   12f14:	ldrb	r2, [r7, #4]!
   12f18:	add	r3, r3, r1, lsl #8
   12f1c:	adds	r3, r2, r3, lsl #8
   12f20:	beq	12edc <__assert_fail@plt+0x1aa0>
   12f24:	rev	r0, r3
   12f28:	bl	12b64 <__assert_fail@plt+0x1728>
   12f2c:	mov	r6, r0
   12f30:	mov	r1, r0
   12f34:	mov	r0, r9
   12f38:	bl	11118 <printf@plt>
   12f3c:	mov	r0, r6
   12f40:	sub	r6, r5, r7
   12f44:	bl	1a534 <argp_parse@@Base+0x1038>
   12f48:	cmp	r4, r7
   12f4c:	mov	r0, #10
   12f50:	bne	12ef0 <__assert_fail@plt+0x1ab4>
   12f54:	sub	r5, r6, #1
   12f58:	b	12d94 <__assert_fail@plt+0x1958>
   12f5c:	ldrb	r7, [r4, #1]
   12f60:	add	r3, r4, #2
   12f64:	cmp	r7, #8
   12f68:	bgt	13084 <__assert_fail@plt+0x1c48>
   12f6c:	sub	r5, r5, #3
   12f70:	mov	r4, r3
   12f74:	b	12d94 <__assert_fail@plt+0x1958>
   12f78:	ldr	r3, [sp, #4]
   12f7c:	mov	r2, r8
   12f80:	mov	r1, r7
   12f84:	ldr	r0, [pc, #756]	; 13280 <__assert_fail@plt+0x1e44>
   12f88:	str	r8, [r3]
   12f8c:	bl	11148 <memmove@plt>
   12f90:	b	12ea8 <__assert_fail@plt+0x1a6c>
   12f94:	mov	r1, #76	; 0x4c
   12f98:	movw	r0, #56752	; 0xddb0
   12f9c:	movt	r0, #1
   12fa0:	bl	11118 <printf@plt>
   12fa4:	ldrb	r6, [r4, #1]
   12fa8:	add	r9, r4, #2
   12fac:	cmp	r6, #4
   12fb0:	subls	r5, r5, #3
   12fb4:	movls	r4, r9
   12fb8:	bls	12d94 <__assert_fail@plt+0x1958>
   12fbc:	sub	r3, r6, #5
   12fc0:	movw	sl, #56776	; 0xddc8
   12fc4:	movt	sl, #1
   12fc8:	bic	r8, r3, #3
   12fcc:	movw	r7, #56764	; 0xddbc
   12fd0:	movt	r7, #1
   12fd4:	str	r3, [sp, #20]
   12fd8:	add	r8, r4, r8
   12fdc:	b	12ffc <__assert_fail@plt+0x1bc0>
   12fe0:	bl	11118 <printf@plt>
   12fe4:	cmp	r8, r4
   12fe8:	mov	r0, #10
   12fec:	beq	1304c <__assert_fail@plt+0x1c10>
   12ff0:	ldr	r1, [fp]
   12ff4:	add	r4, r4, #4
   12ff8:	bl	113c4 <putc@plt>
   12ffc:	ldrb	r2, [r4, #3]
   13000:	mov	r0, r7
   13004:	ldrb	r1, [r4, #4]
   13008:	ldrb	r3, [r4, #5]
   1300c:	add	r1, r1, r2, lsl #8
   13010:	ldrb	r2, [r4, #6]
   13014:	add	r3, r3, r1, lsl #8
   13018:	adds	r3, r2, r3, lsl #8
   1301c:	beq	12fe0 <__assert_fail@plt+0x1ba4>
   13020:	rev	r0, r3
   13024:	bl	12b64 <__assert_fail@plt+0x1728>
   13028:	mov	r1, r0
   1302c:	mov	r6, r0
   13030:	mov	r0, sl
   13034:	bl	11118 <printf@plt>
   13038:	mov	r0, r6
   1303c:	bl	1a534 <argp_parse@@Base+0x1038>
   13040:	cmp	r8, r4
   13044:	mov	r0, #10
   13048:	bne	12ff0 <__assert_fail@plt+0x1bb4>
   1304c:	ldr	r3, [sp, #20]
   13050:	sub	r5, r5, #6
   13054:	lsr	r4, r3, #2
   13058:	sub	r5, r5, r4, lsl #2
   1305c:	add	r4, r4, #1
   13060:	add	r4, r9, r4, lsl #2
   13064:	sub	r5, r5, #1
   13068:	b	12d94 <__assert_fail@plt+0x1958>
   1306c:	movw	r0, #56804	; 0xdde4
   13070:	movt	r0, #1
   13074:	sub	r5, r6, #1
   13078:	mov	r4, r8
   1307c:	bl	11118 <printf@plt>
   13080:	b	12d94 <__assert_fail@plt+0x1958>
   13084:	ldrb	r3, [r4, #3]
   13088:	movw	r0, #56824	; 0xddf8
   1308c:	movt	r0, #1
   13090:	ldrb	r9, [r4, #2]
   13094:	mov	r6, r3
   13098:	str	r3, [sp, #24]
   1309c:	bl	11118 <printf@plt>
   130a0:	tst	r6, #15
   130a4:	mov	r3, r6
   130a8:	beq	1315c <__assert_fail@plt+0x1d20>
   130ac:	movw	sl, #56832	; 0xde00
   130b0:	movt	sl, #1
   130b4:	add	r5, r4, r5
   130b8:	mov	r2, #5
   130bc:	add	r4, r4, #4
   130c0:	str	sl, [sp, #20]
   130c4:	ldr	sl, [sp, #8]
   130c8:	b	130f0 <__assert_fail@plt+0x1cb4>
   130cc:	mov	r0, #10
   130d0:	ldr	r1, [fp]
   130d4:	bl	113c4 <putc@plt>
   130d8:	cmp	r7, r9
   130dc:	mov	r2, r8
   130e0:	movlt	r3, r7
   130e4:	movge	r3, r9
   130e8:	cmp	r3, r8
   130ec:	ble	131f4 <__assert_fail@plt+0x1db8>
   130f0:	cmp	r2, #0
   130f4:	add	r3, r2, #3
   130f8:	ldr	ip, [r4], #4
   130fc:	movge	r3, r2
   13100:	add	r8, r2, #4
   13104:	asrs	r3, r3, #2
   13108:	add	r0, sp, #32
   1310c:	mov	r1, #16
   13110:	and	r3, r3, #1
   13114:	rsbmi	r3, r3, #0
   13118:	rev	r2, ip
   1311c:	cmp	r3, #1
   13120:	sub	r6, r5, r4
   13124:	beq	13248 <__assert_fail@plt+0x1e0c>
   13128:	bl	127ac <__assert_fail@plt+0x1370>
   1312c:	mov	r1, r0
   13130:	ldr	r0, [sp, #20]
   13134:	bl	11118 <printf@plt>
   13138:	ldr	r3, [sl]
   1313c:	tst	r3, #32
   13140:	beq	130cc <__assert_fail@plt+0x1c90>
   13144:	ldr	r1, [r4, #-4]
   13148:	movw	r0, #56840	; 0xde08
   1314c:	movt	r0, #1
   13150:	rev	r1, r1
   13154:	bl	11118 <printf@plt>
   13158:	b	130cc <__assert_fail@plt+0x1c90>
   1315c:	cmp	r9, r7
   13160:	add	sl, r4, #4
   13164:	movlt	r3, r9
   13168:	movge	r3, r7
   1316c:	add	r5, r4, r5
   13170:	movw	r8, #56832	; 0xde00
   13174:	movt	r8, #1
   13178:	rsb	r4, r4, #1
   1317c:	str	r3, [sp, #28]
   13180:	mov	r6, sl
   13184:	movw	r3, #56840	; 0xde08
   13188:	movt	r3, #1
   1318c:	str	r3, [sp, #20]
   13190:	ldr	r2, [r6], #4
   13194:	mov	r1, #16
   13198:	add	r0, sp, #32
   1319c:	rev	r2, r2
   131a0:	sub	sl, r5, r6
   131a4:	bl	127ac <__assert_fail@plt+0x1370>
   131a8:	mov	r1, r0
   131ac:	mov	r0, r8
   131b0:	bl	11118 <printf@plt>
   131b4:	ldr	r3, [sp, #8]
   131b8:	mov	r0, #10
   131bc:	ldr	r2, [r3]
   131c0:	tst	r2, #32
   131c4:	bne	13218 <__assert_fail@plt+0x1ddc>
   131c8:	ldr	r1, [fp]
   131cc:	bl	113c4 <putc@plt>
   131d0:	cmp	r7, r9
   131d4:	add	r2, r4, r6
   131d8:	movlt	r1, r7
   131dc:	movge	r1, r9
   131e0:	cmp	r2, r1
   131e4:	blt	13190 <__assert_fail@plt+0x1d54>
   131e8:	mov	r3, r6
   131ec:	mov	r6, sl
   131f0:	mov	r4, r3
   131f4:	ldr	r3, [sp, #24]
   131f8:	sub	r5, r6, #1
   131fc:	tst	r3, #240	; 0xf0
   13200:	beq	12d94 <__assert_fail@plt+0x1958>
   13204:	lsr	r1, r3, #4
   13208:	movw	r0, #56852	; 0xde14
   1320c:	movt	r0, #1
   13210:	bl	11118 <printf@plt>
   13214:	b	12d94 <__assert_fail@plt+0x1958>
   13218:	ldr	r1, [r6, #-4]
   1321c:	ldr	r0, [sp, #20]
   13220:	rev	r1, r1
   13224:	bl	11118 <printf@plt>
   13228:	mov	r0, #10
   1322c:	ldr	r1, [fp]
   13230:	bl	113c4 <putc@plt>
   13234:	ldr	r3, [sp, #28]
   13238:	add	r2, r4, r6
   1323c:	cmp	r2, r3
   13240:	blt	13190 <__assert_fail@plt+0x1d54>
   13244:	b	131e8 <__assert_fail@plt+0x1dac>
   13248:	mov	r0, ip
   1324c:	bl	12b64 <__assert_fail@plt+0x1728>
   13250:	mov	r3, r0
   13254:	mov	r1, r0
   13258:	movw	r0, #56776	; 0xddc8
   1325c:	movt	r0, #1
   13260:	str	r3, [sp, #28]
   13264:	bl	11118 <printf@plt>
   13268:	ldr	r3, [sp, #28]
   1326c:	mov	r0, r3
   13270:	bl	1a534 <argp_parse@@Base+0x1038>
   13274:	b	130d8 <__assert_fail@plt+0x1c9c>
   13278:	mov	r1, #83	; 0x53
   1327c:	b	12f98 <__assert_fail@plt+0x1b5c>
   13280:	andeq	r0, r3, ip, asr r6
   13284:	movw	r3, #1736	; 0x6c8
   13288:	movt	r3, #3
   1328c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13290:	mov	r4, r0
   13294:	ldr	r3, [r3]
   13298:	strd	r6, [sp, #8]
   1329c:	mov	r6, r0
   132a0:	strd	sl, [sp, #24]
   132a4:	ldrb	sl, [r4], #20
   132a8:	strd	r8, [sp, #16]
   132ac:	tst	r3, #32
   132b0:	str	lr, [sp, #32]
   132b4:	sub	sp, sp, #4
   132b8:	and	sl, sl, #15
   132bc:	lsl	sl, sl, #2
   132c0:	bne	133d4 <__assert_fail@plt+0x1f98>
   132c4:	movw	r0, #56928	; 0xde60
   132c8:	movt	r0, #1
   132cc:	bl	11250 <puts@plt>
   132d0:	ldrb	r1, [r6]
   132d4:	movw	r0, #56988	; 0xde9c
   132d8:	movt	r0, #1
   132dc:	ldrb	r3, [r6, #1]
   132e0:	and	r2, r1, #15
   132e4:	lsr	r1, r1, #4
   132e8:	bl	11118 <printf@plt>
   132ec:	ldrh	r1, [r6, #2]
   132f0:	cmp	r1, #8192	; 0x2000
   132f4:	bls	13300 <__assert_fail@plt+0x1ec4>
   132f8:	rev16	r1, r1
   132fc:	uxth	r1, r1
   13300:	ldrh	r2, [r6, #4]
   13304:	movw	r0, #57004	; 0xdeac
   13308:	movt	r0, #1
   1330c:	rev16	r2, r2
   13310:	uxth	r2, r2
   13314:	bl	11118 <printf@plt>
   13318:	ldrh	r1, [r6, #6]
   1331c:	movw	r0, #57016	; 0xdeb8
   13320:	movt	r0, #1
   13324:	rev16	r1, r1
   13328:	uxth	r1, r1
   1332c:	ubfx	r2, r1, #0, #13
   13330:	lsr	r1, r1, #13
   13334:	bl	11118 <printf@plt>
   13338:	ldrh	r3, [r6, #10]
   1333c:	movw	r0, #57028	; 0xdec4
   13340:	movt	r0, #1
   13344:	ldrb	r2, [r6, #9]
   13348:	ldrb	r1, [r6, #8]
   1334c:	rev16	r3, r3
   13350:	uxth	r3, r3
   13354:	bl	11118 <printf@plt>
   13358:	ldr	r0, [r6, #12]
   1335c:	bl	111b4 <inet_ntoa@plt>
   13360:	mov	r1, r0
   13364:	movw	r0, #57048	; 0xded8
   13368:	movt	r0, #1
   1336c:	bl	11118 <printf@plt>
   13370:	ldr	r0, [r6, #16]
   13374:	bl	111b4 <inet_ntoa@plt>
   13378:	mov	r1, r0
   1337c:	movw	r0, #57048	; 0xded8
   13380:	movt	r0, #1
   13384:	bl	11118 <printf@plt>
   13388:	cmp	sl, #20
   1338c:	ble	133b0 <__assert_fail@plt+0x1f74>
   13390:	movw	r5, #57056	; 0xdee0
   13394:	movt	r5, #1
   13398:	add	r6, r6, sl
   1339c:	ldrb	r1, [r4], #1
   133a0:	mov	r0, r5
   133a4:	bl	11118 <printf@plt>
   133a8:	cmp	r6, r4
   133ac:	bne	1339c <__assert_fail@plt+0x1f60>
   133b0:	mov	r0, #10
   133b4:	add	sp, sp, #4
   133b8:	ldrd	r4, [sp]
   133bc:	ldrd	r6, [sp, #8]
   133c0:	ldrd	r8, [sp, #16]
   133c4:	ldrd	sl, [sp, #24]
   133c8:	ldr	lr, [sp, #32]
   133cc:	add	sp, sp, #36	; 0x24
   133d0:	b	11334 <putchar@plt>
   133d4:	movw	r0, #56904	; 0xde48
   133d8:	movt	r0, #1
   133dc:	bl	11118 <printf@plt>
   133e0:	movw	r2, #61424	; 0xeff0
   133e4:	movt	r2, #1
   133e8:	ldrb	r1, [r6]
   133ec:	movw	r8, #56920	; 0xde58
   133f0:	movt	r8, #1
   133f4:	movw	r9, #55328	; 0xd820
   133f8:	movt	r9, #1
   133fc:	mov	fp, r2
   13400:	mov	r7, r6
   13404:	mov	r5, #0
   13408:	b	1341c <__assert_fail@plt+0x1fe0>
   1340c:	ldrb	r1, [r7, #1]!
   13410:	tst	r5, #1
   13414:	movne	r2, r9
   13418:	moveq	r2, fp
   1341c:	add	r5, r5, #1
   13420:	mov	r0, r8
   13424:	bl	11118 <printf@plt>
   13428:	cmp	r5, #20
   1342c:	bne	1340c <__assert_fail@plt+0x1fd0>
   13430:	mov	r0, #10
   13434:	bl	11334 <putchar@plt>
   13438:	b	132c4 <__assert_fail@plt+0x1e88>
   1343c:	strd	r4, [sp, #-16]!
   13440:	add	r5, r0, #8
   13444:	mov	r4, r0
   13448:	mov	r0, r5
   1344c:	str	r6, [sp, #8]
   13450:	str	lr, [sp, #12]
   13454:	bl	13284 <__assert_fail@plt+0x1e48>
   13458:	ldrb	r2, [r4, #8]
   1345c:	ldrb	r1, [r4, #17]
   13460:	and	r2, r2, #15
   13464:	lsl	ip, r2, #2
   13468:	cmp	r1, #6
   1346c:	add	r6, r5, ip
   13470:	beq	13494 <__assert_fail@plt+0x2058>
   13474:	cmp	r1, #17
   13478:	beq	134c8 <__assert_fail@plt+0x208c>
   1347c:	cmp	r1, #1
   13480:	beq	134d8 <__assert_fail@plt+0x209c>
   13484:	ldrd	r4, [sp]
   13488:	ldr	r6, [sp, #8]
   1348c:	add	sp, sp, #12
   13490:	pop	{pc}		; (ldr pc, [sp], #4)
   13494:	ldrb	ip, [r5, r2, lsl #2]
   13498:	movw	r0, #57064	; 0xdee8
   1349c:	movt	r0, #1
   134a0:	ldrb	r1, [r6, #1]
   134a4:	ldrb	r2, [r6, #2]
   134a8:	ldrb	r3, [r6, #3]
   134ac:	add	r1, r1, ip, lsl #8
   134b0:	ldrd	r4, [sp]
   134b4:	ldr	r6, [sp, #8]
   134b8:	add	r2, r3, r2, lsl #8
   134bc:	ldr	lr, [sp, #12]
   134c0:	add	sp, sp, #16
   134c4:	b	11118 <printf@plt>
   134c8:	movw	r0, #57108	; 0xdf14
   134cc:	movt	r0, #1
   134d0:	ldrb	ip, [r5, r2, lsl #2]
   134d4:	b	134a0 <__assert_fail@plt+0x2064>
   134d8:	ldrh	r3, [r4, #10]
   134dc:	movw	r0, #57152	; 0xdf40
   134e0:	movt	r0, #1
   134e4:	ldrb	r4, [r5, r2, lsl #2]
   134e8:	ldrb	r2, [r6, #1]
   134ec:	rev16	r3, r3
   134f0:	uxth	r3, r3
   134f4:	sub	r3, r3, ip
   134f8:	mov	r1, r4
   134fc:	bl	11118 <printf@plt>
   13500:	tst	r4, #247	; 0xf7
   13504:	beq	13520 <__assert_fail@plt+0x20e4>
   13508:	mov	r0, #10
   1350c:	ldrd	r4, [sp]
   13510:	ldr	r6, [sp, #8]
   13514:	ldr	lr, [sp, #12]
   13518:	add	sp, sp, #16
   1351c:	b	11334 <putchar@plt>
   13520:	ldrb	ip, [r6, #6]
   13524:	movw	r0, #57184	; 0xdf60
   13528:	movt	r0, #1
   1352c:	ldrb	r2, [r6, #7]
   13530:	ldrb	r1, [r6, #4]
   13534:	ldrb	r3, [r6, #5]
   13538:	add	r2, r2, ip, lsl #8
   1353c:	add	r1, r3, r1, lsl #8
   13540:	bl	11118 <printf@plt>
   13544:	b	13508 <__assert_fail@plt+0x20cc>
   13548:	strd	r4, [sp, #-16]!
   1354c:	add	r5, r0, #8
   13550:	mov	r4, r0
   13554:	mov	r0, r5
   13558:	str	r6, [sp, #8]
   1355c:	str	lr, [sp, #12]
   13560:	bl	13284 <__assert_fail@plt+0x1e48>
   13564:	ldrb	r2, [r4, #8]
   13568:	ldrb	r1, [r4, #17]
   1356c:	and	r2, r2, #15
   13570:	lsl	ip, r2, #2
   13574:	cmp	r1, #6
   13578:	add	r6, r5, ip
   1357c:	beq	135a0 <__assert_fail@plt+0x2164>
   13580:	cmp	r1, #17
   13584:	beq	135d4 <__assert_fail@plt+0x2198>
   13588:	cmp	r1, #1
   1358c:	beq	135e4 <__assert_fail@plt+0x21a8>
   13590:	ldrd	r4, [sp]
   13594:	ldr	r6, [sp, #8]
   13598:	add	sp, sp, #12
   1359c:	pop	{pc}		; (ldr pc, [sp], #4)
   135a0:	ldrb	ip, [r5, r2, lsl #2]
   135a4:	movw	r0, #57064	; 0xdee8
   135a8:	movt	r0, #1
   135ac:	ldrb	r1, [r6, #1]
   135b0:	ldrb	r2, [r6, #2]
   135b4:	ldrb	r3, [r6, #3]
   135b8:	add	r1, r1, ip, lsl #8
   135bc:	ldrd	r4, [sp]
   135c0:	ldr	r6, [sp, #8]
   135c4:	add	r2, r3, r2, lsl #8
   135c8:	ldr	lr, [sp, #12]
   135cc:	add	sp, sp, #16
   135d0:	b	11118 <printf@plt>
   135d4:	movw	r0, #57108	; 0xdf14
   135d8:	movt	r0, #1
   135dc:	ldrb	ip, [r5, r2, lsl #2]
   135e0:	b	135ac <__assert_fail@plt+0x2170>
   135e4:	ldrh	r3, [r4, #10]
   135e8:	movw	r0, #57152	; 0xdf40
   135ec:	movt	r0, #1
   135f0:	ldrb	r4, [r5, r2, lsl #2]
   135f4:	ldrb	r2, [r6, #1]
   135f8:	rev16	r3, r3
   135fc:	uxth	r3, r3
   13600:	sub	r3, r3, ip
   13604:	mov	r1, r4
   13608:	bl	11118 <printf@plt>
   1360c:	tst	r4, #247	; 0xf7
   13610:	beq	1362c <__assert_fail@plt+0x21f0>
   13614:	mov	r0, #10
   13618:	ldrd	r4, [sp]
   1361c:	ldr	r6, [sp, #8]
   13620:	ldr	lr, [sp, #12]
   13624:	add	sp, sp, #16
   13628:	b	11334 <putchar@plt>
   1362c:	ldrb	ip, [r6, #6]
   13630:	movw	r0, #57184	; 0xdf60
   13634:	movt	r0, #1
   13638:	ldrb	r2, [r6, #7]
   1363c:	ldrb	r1, [r6, #4]
   13640:	ldrb	r3, [r6, #5]
   13644:	add	r2, r2, ip, lsl #8
   13648:	add	r1, r3, r1, lsl #8
   1364c:	bl	11118 <printf@plt>
   13650:	b	13614 <__assert_fail@plt+0x21d8>
   13654:	movw	r3, #1024	; 0x400
   13658:	movt	r3, #3
   1365c:	str	r4, [sp, #-8]!
   13660:	mov	r4, r0
   13664:	add	r0, r3, #240	; 0xf0
   13668:	str	lr, [sp, #4]
   1366c:	ldrb	ip, [r4]
   13670:	ldrb	r2, [r4, #1]
   13674:	b	13684 <__assert_fail@plt+0x2248>
   13678:	add	r3, r3, #12
   1367c:	cmp	r3, r0
   13680:	beq	136a8 <__assert_fail@plt+0x226c>
   13684:	ldr	lr, [r3]
   13688:	cmp	ip, lr
   1368c:	bne	13678 <__assert_fail@plt+0x223c>
   13690:	ldr	lr, [r3, #4]
   13694:	cmp	r2, lr
   13698:	bne	13678 <__assert_fail@plt+0x223c>
   1369c:	ldr	r0, [r3, #8]
   136a0:	bl	11250 <puts@plt>
   136a4:	b	136b4 <__assert_fail@plt+0x2278>
   136a8:	movw	r0, #57208	; 0xdf78
   136ac:	movt	r0, #1
   136b0:	bl	11118 <printf@plt>
   136b4:	movw	r3, #1736	; 0x6c8
   136b8:	movt	r3, #3
   136bc:	ldr	r3, [r3]
   136c0:	tst	r3, #32
   136c4:	bne	136d4 <__assert_fail@plt+0x2298>
   136c8:	ldr	r4, [sp]
   136cc:	add	sp, sp, #4
   136d0:	pop	{pc}		; (ldr pc, [sp], #4)
   136d4:	mov	r0, r4
   136d8:	ldr	r4, [sp]
   136dc:	ldr	lr, [sp, #4]
   136e0:	add	sp, sp, #8
   136e4:	b	13548 <__assert_fail@plt+0x210c>
   136e8:	str	r4, [sp, #-8]!
   136ec:	mov	r4, r0
   136f0:	ldr	r0, [r0, #4]
   136f4:	str	lr, [sp, #4]
   136f8:	bl	111b4 <inet_ntoa@plt>
   136fc:	mov	r1, r0
   13700:	movw	r0, #57232	; 0xdf90
   13704:	movt	r0, #1
   13708:	bl	11118 <printf@plt>
   1370c:	mov	r0, r4
   13710:	ldr	r4, [sp]
   13714:	ldr	lr, [sp, #4]
   13718:	add	sp, sp, #8
   1371c:	b	13548 <__assert_fail@plt+0x210c>
   13720:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13724:	movw	r5, #1736	; 0x6c8
   13728:	movt	r5, #3
   1372c:	ldr	r3, [r5]
   13730:	strd	r6, [sp, #8]
   13734:	mov	r7, r0
   13738:	strd	r8, [sp, #16]
   1373c:	str	lr, [sp, #24]
   13740:	sub	sp, sp, #84	; 0x54
   13744:	and	r3, r3, #3
   13748:	cmp	r3, #3
   1374c:	beq	13934 <__assert_fail@plt+0x24f8>
   13750:	mov	r3, #0
   13754:	mov	r2, #0
   13758:	mov	r8, #0
   1375c:	movt	r8, #65408	; 0xff80
   13760:	movw	r9, #52580	; 0xcd64
   13764:	movt	r9, #16845	; 0x41cd
   13768:	movw	r4, #1744	; 0x6d0
   1376c:	movt	r4, #3
   13770:	mov	r1, #8
   13774:	movw	r6, #316	; 0x13c
   13778:	movt	r6, #3
   1377c:	ldr	r0, [r4]
   13780:	strd	r8, [sp, #8]
   13784:	strd	r2, [sp, #16]
   13788:	strd	r2, [sp, #24]
   1378c:	strd	r2, [sp, #32]
   13790:	bl	14524 <__assert_fail@plt+0x30e8>
   13794:	ldr	r0, [r4]
   13798:	ldr	r1, [r6]
   1379c:	bl	14948 <__assert_fail@plt+0x350c>
   137a0:	add	r2, sp, #8
   137a4:	movw	r1, #15824	; 0x3dd0
   137a8:	movt	r1, #1
   137ac:	ldr	r0, [r4]
   137b0:	bl	1493c <__assert_fail@plt+0x3500>
   137b4:	mov	r1, r7
   137b8:	ldr	r0, [r4]
   137bc:	bl	14950 <__assert_fail@plt+0x3514>
   137c0:	cmp	r0, #0
   137c4:	bne	13900 <__assert_fail@plt+0x24c4>
   137c8:	ldr	r3, [r5]
   137cc:	ldr	r7, [r4]
   137d0:	ands	r2, r3, #16
   137d4:	bne	138b4 <__assert_fail@plt+0x2478>
   137d8:	tst	r3, #64	; 0x40
   137dc:	bne	13854 <__assert_fail@plt+0x2418>
   137e0:	ldr	r0, [r7, #28]
   137e4:	ldr	r8, [r7, #52]	; 0x34
   137e8:	bl	111b4 <inet_ntoa@plt>
   137ec:	mov	r2, r0
   137f0:	movw	r0, #57328	; 0xdff0
   137f4:	movt	r0, #1
   137f8:	ldr	r3, [r6]
   137fc:	mov	r1, r8
   13800:	bl	11118 <printf@plt>
   13804:	ldr	r3, [r5]
   13808:	tst	r3, #32
   1380c:	bne	13918 <__assert_fail@plt+0x24dc>
   13810:	mov	r0, #10
   13814:	bl	11334 <putchar@plt>
   13818:	movw	r1, #11328	; 0x2c40
   1381c:	movt	r1, #1
   13820:	ldr	r0, [r4]
   13824:	bl	12028 <__assert_fail@plt+0xbec>
   13828:	ldr	r3, [r4]
   1382c:	mov	r5, r0
   13830:	ldr	r0, [r3, #52]	; 0x34
   13834:	bl	1a534 <argp_parse@@Base+0x1038>
   13838:	mov	r0, r5
   1383c:	add	sp, sp, #84	; 0x54
   13840:	ldrd	r4, [sp]
   13844:	ldrd	r6, [sp, #8]
   13848:	ldrd	r8, [sp, #16]
   1384c:	add	sp, sp, #24
   13850:	pop	{pc}		; (ldr pc, [sp], #4)
   13854:	movw	r3, #1748	; 0x6d4
   13858:	movt	r3, #3
   1385c:	ldr	r3, [r3]
   13860:	ands	r1, r3, #4
   13864:	bne	1394c <__assert_fail@plt+0x2510>
   13868:	ands	r3, r3, #2
   1386c:	bne	139a8 <__assert_fail@plt+0x256c>
   13870:	movw	r2, #10308	; 0x2844
   13874:	mov	r0, r3
   13878:	mov	ip, #40	; 0x28
   1387c:	strh	r2, [sp, #40]	; 0x28
   13880:	str	r3, [sp, #44]	; 0x2c
   13884:	str	r3, [sp, #48]	; 0x30
   13888:	str	r3, [sp, #52]	; 0x34
   1388c:	str	r3, [sp, #56]	; 0x38
   13890:	str	r3, [sp, #60]	; 0x3c
   13894:	str	r3, [sp, #64]	; 0x40
   13898:	str	r3, [sp, #68]	; 0x44
   1389c:	str	r3, [sp, #72]	; 0x48
   138a0:	str	r3, [sp, #76]	; 0x4c
   138a4:	mov	r1, #5
   138a8:	add	r3, sp, #40	; 0x28
   138ac:	strb	r0, [sp, #43]	; 0x2b
   138b0:	b	138d8 <__assert_fail@plt+0x249c>
   138b4:	mov	r2, #38	; 0x26
   138b8:	mov	r1, #0
   138bc:	add	r0, sp, #42	; 0x2a
   138c0:	bl	11328 <memset@plt>
   138c4:	movw	r2, #9991	; 0x2707
   138c8:	mov	r1, #4
   138cc:	add	r3, sp, #40	; 0x28
   138d0:	mov	ip, #40	; 0x28
   138d4:	strh	r2, [sp, #40]	; 0x28
   138d8:	mov	r2, #4
   138dc:	strb	r1, [sp, #42]	; 0x2a
   138e0:	mov	r1, #0
   138e4:	ldr	r0, [r7]
   138e8:	str	ip, [sp]
   138ec:	bl	1110c <setsockopt@plt>
   138f0:	cmp	r0, #0
   138f4:	blt	1398c <__assert_fail@plt+0x2550>
   138f8:	ldr	r7, [r4]
   138fc:	b	137e0 <__assert_fail@plt+0x23a4>
   13900:	movw	r2, #57300	; 0xdfd4
   13904:	movt	r2, #1
   13908:	mov	r1, #0
   1390c:	mov	r0, #1
   13910:	bl	11238 <error@plt>
   13914:	b	137c8 <__assert_fail@plt+0x238c>
   13918:	ldr	r3, [r4]
   1391c:	movw	r0, #57360	; 0xe010
   13920:	movt	r0, #1
   13924:	ldr	r2, [r3, #60]	; 0x3c
   13928:	mov	r1, r2
   1392c:	bl	11118 <printf@plt>
   13930:	b	13810 <__assert_fail@plt+0x23d4>
   13934:	movw	r2, #57268	; 0xdfb4
   13938:	movt	r2, #1
   1393c:	mov	r1, #0
   13940:	mov	r0, #1
   13944:	bl	11238 <error@plt>
   13948:	b	13750 <__assert_fail@plt+0x2314>
   1394c:	mov	r3, #68	; 0x44
   13950:	mov	r0, #3
   13954:	strb	r3, [sp, #40]	; 0x28
   13958:	str	r2, [sp, #44]	; 0x2c
   1395c:	str	r2, [sp, #48]	; 0x30
   13960:	str	r2, [sp, #52]	; 0x34
   13964:	str	r2, [sp, #56]	; 0x38
   13968:	str	r2, [sp, #60]	; 0x3c
   1396c:	str	r2, [sp, #64]	; 0x40
   13970:	str	r2, [sp, #68]	; 0x44
   13974:	str	r2, [sp, #72]	; 0x48
   13978:	str	r2, [sp, #76]	; 0x4c
   1397c:	mov	r3, #36	; 0x24
   13980:	mov	ip, r3
   13984:	strb	r3, [sp, #41]	; 0x29
   13988:	b	138a4 <__assert_fail@plt+0x2468>
   1398c:	bl	112f8 <__errno_location@plt>
   13990:	movw	r2, #57316	; 0xdfe4
   13994:	movt	r2, #1
   13998:	ldr	r1, [r0]
   1399c:	mov	r0, #1
   139a0:	bl	11238 <error@plt>
   139a4:	b	138f8 <__assert_fail@plt+0x24bc>
   139a8:	mov	r3, #68	; 0x44
   139ac:	mov	r0, #1
   139b0:	strb	r3, [sp, #40]	; 0x28
   139b4:	str	r1, [sp, #44]	; 0x2c
   139b8:	str	r1, [sp, #48]	; 0x30
   139bc:	str	r1, [sp, #52]	; 0x34
   139c0:	str	r1, [sp, #56]	; 0x38
   139c4:	str	r1, [sp, #60]	; 0x3c
   139c8:	str	r1, [sp, #64]	; 0x40
   139cc:	str	r1, [sp, #68]	; 0x44
   139d0:	str	r1, [sp, #72]	; 0x48
   139d4:	str	r1, [sp, #76]	; 0x4c
   139d8:	b	1397c <__assert_fail@plt+0x2540>
   139dc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   139e0:	strd	r6, [sp, #8]
   139e4:	mov	r7, r0
   139e8:	strd	r8, [sp, #16]
   139ec:	mov	r9, r1
   139f0:	mov	r1, #0
   139f4:	str	lr, [sp, #24]
   139f8:	mov	r8, r3
   139fc:	vpush	{d8}
   13a00:	sub	sp, sp, #20
   13a04:	ldr	r6, [sp, #56]	; 0x38
   13a08:	mov	r0, sp
   13a0c:	ldr	r5, [sp, #64]	; 0x40
   13a10:	bl	1122c <gettimeofday@plt>
   13a14:	ldrb	r4, [r6]
   13a18:	and	r4, r4, #15
   13a1c:	lsl	r4, r4, #2
   13a20:	sub	r5, r5, r4
   13a24:	sub	r3, r5, #8
   13a28:	cmp	r3, #7
   13a2c:	bhi	13aec <__assert_fail@plt+0x26b0>
   13a30:	vldr	d8, [pc, #344]	; 13b90 <__assert_fail@plt+0x2754>
   13a34:	mov	r9, #0
   13a38:	movw	r3, #1736	; 0x6c8
   13a3c:	movt	r3, #3
   13a40:	ldr	r3, [r3]
   13a44:	tst	r3, #8
   13a48:	bne	13ab4 <__assert_fail@plt+0x2678>
   13a4c:	tst	r3, #1
   13a50:	bne	13ad4 <__assert_fail@plt+0x2698>
   13a54:	ldr	r0, [r8, #4]
   13a58:	bl	111b4 <inet_ntoa@plt>
   13a5c:	ldr	r3, [sp, #60]	; 0x3c
   13a60:	mov	r2, r0
   13a64:	mov	r1, r5
   13a68:	movw	r0, #57380	; 0xe024
   13a6c:	movt	r0, #1
   13a70:	ldrh	r3, [r3, #6]
   13a74:	rev16	r3, r3
   13a78:	uxth	r3, r3
   13a7c:	bl	11118 <printf@plt>
   13a80:	movw	r0, #57412	; 0xe044
   13a84:	movt	r0, #1
   13a88:	ldrb	r1, [r6, #8]
   13a8c:	bl	11118 <printf@plt>
   13a90:	cmp	r9, #0
   13a94:	bne	13b64 <__assert_fail@plt+0x2728>
   13a98:	cmp	r7, #0
   13a9c:	bne	13b7c <__assert_fail@plt+0x2740>
   13aa0:	mov	r0, r6
   13aa4:	mov	r1, r4
   13aa8:	bl	12d18 <__assert_fail@plt+0x18dc>
   13aac:	mov	r0, #10
   13ab0:	bl	11334 <putchar@plt>
   13ab4:	mov	r0, #0
   13ab8:	add	sp, sp, #20
   13abc:	vpop	{d8}
   13ac0:	ldrd	r4, [sp]
   13ac4:	ldrd	r6, [sp, #8]
   13ac8:	ldrd	r8, [sp, #16]
   13acc:	add	sp, sp, #24
   13ad0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ad4:	movw	r3, #1580	; 0x62c
   13ad8:	movt	r3, #3
   13adc:	mov	r0, #8
   13ae0:	ldr	r1, [r3]
   13ae4:	bl	113c4 <putc@plt>
   13ae8:	b	13ab4 <__assert_fail@plt+0x2678>
   13aec:	ldr	r3, [sp, #60]	; 0x3c
   13af0:	mov	r0, sp
   13af4:	add	r1, sp, #8
   13af8:	ldr	r2, [r3, #8]!
   13afc:	ldr	r3, [r3, #4]
   13b00:	strd	r2, [sp, #8]
   13b04:	bl	126d0 <__assert_fail@plt+0x1294>
   13b08:	vldr	s15, [sp, #4]
   13b0c:	vldr	d2, [pc, #132]	; 13b98 <__assert_fail@plt+0x275c>
   13b10:	vldr	d5, [r9]
   13b14:	vcvt.f64.s32	d3, s15
   13b18:	vldr	s15, [sp]
   13b1c:	vldr	d6, [r9, #24]
   13b20:	vdiv.f64	d8, d3, d2
   13b24:	vcvt.f64.s32	d4, s15
   13b28:	vldr	d7, [r9, #16]
   13b2c:	vmla.f64	d8, d4, d2
   13b30:	vmla.f64	d6, d8, d8
   13b34:	vadd.f64	d7, d7, d8
   13b38:	vcmpe.f64	d5, d8
   13b3c:	vstr	d7, [r9, #16]
   13b40:	vldr	d7, [r9, #8]
   13b44:	vmrs	APSR_nzcv, fpscr
   13b48:	vstr	d6, [r9, #24]
   13b4c:	vstrgt	d8, [r9]
   13b50:	vcmpe.f64	d7, d8
   13b54:	vmrs	APSR_nzcv, fpscr
   13b58:	vstrmi	d8, [r9, #8]
   13b5c:	mov	r9, #1
   13b60:	b	13a38 <__assert_fail@plt+0x25fc>
   13b64:	movw	r0, #57420	; 0xe04c
   13b68:	movt	r0, #1
   13b6c:	vmov	r2, r3, d8
   13b70:	bl	11118 <printf@plt>
   13b74:	cmp	r7, #0
   13b78:	beq	13aa0 <__assert_fail@plt+0x2664>
   13b7c:	movw	r0, #57436	; 0xe05c
   13b80:	movt	r0, #1
   13b84:	bl	11118 <printf@plt>
   13b88:	b	13aa0 <__assert_fail@plt+0x2664>
   13b8c:	nop	{0}
	...
   13b9c:	addmi	r4, pc, r0
   13ba0:	movw	ip, #1736	; 0x6c8
   13ba4:	movt	ip, #3
   13ba8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13bac:	ldr	ip, [ip]
   13bb0:	strd	r6, [sp, #8]
   13bb4:	str	r8, [sp, #16]
   13bb8:	str	lr, [sp, #20]
   13bbc:	tst	ip, #32
   13bc0:	bne	13be0 <__assert_fail@plt+0x27a4>
   13bc4:	movw	ip, #1744	; 0x6d0
   13bc8:	movt	ip, #3
   13bcc:	ldr	lr, [r2, #24]
   13bd0:	ldr	ip, [ip]
   13bd4:	ldr	ip, [ip, #28]
   13bd8:	cmp	lr, ip
   13bdc:	bne	13cfc <__assert_fail@plt+0x28c0>
   13be0:	ldrb	r6, [r1]
   13be4:	mov	r1, #16
   13be8:	mov	r4, r3
   13bec:	mov	r5, r2
   13bf0:	bl	12a2c <__assert_fail@plt+0x15f0>
   13bf4:	mov	r2, r0
   13bf8:	mov	r7, r0
   13bfc:	movw	r0, #57444	; 0xe064
   13c00:	movt	r0, #1
   13c04:	and	r6, r6, #15
   13c08:	sub	r1, r4, r6, lsl #2
   13c0c:	bl	11118 <printf@plt>
   13c10:	mov	r0, r7
   13c14:	bl	1a534 <argp_parse@@Base+0x1038>
   13c18:	movw	r3, #1024	; 0x400
   13c1c:	movt	r3, #3
   13c20:	ldrb	r1, [r5]
   13c24:	ldr	r2, [r3, #240]	; 0xf0
   13c28:	cmp	r1, r2
   13c2c:	beq	13d58 <__assert_fail@plt+0x291c>
   13c30:	ldr	r2, [r3, #256]	; 0x100
   13c34:	cmp	r1, r2
   13c38:	beq	13d60 <__assert_fail@plt+0x2924>
   13c3c:	ldr	r2, [r3, #272]	; 0x110
   13c40:	cmp	r1, r2
   13c44:	beq	13d68 <__assert_fail@plt+0x292c>
   13c48:	ldr	r2, [r3, #288]	; 0x120
   13c4c:	cmp	r1, r2
   13c50:	beq	13d70 <__assert_fail@plt+0x2934>
   13c54:	ldr	r2, [r3, #304]	; 0x130
   13c58:	cmp	r1, r2
   13c5c:	beq	13d78 <__assert_fail@plt+0x293c>
   13c60:	ldr	r2, [r3, #320]	; 0x140
   13c64:	cmp	r1, r2
   13c68:	beq	13d50 <__assert_fail@plt+0x2914>
   13c6c:	ldr	r2, [r3, #336]	; 0x150
   13c70:	cmp	r1, r2
   13c74:	beq	13d80 <__assert_fail@plt+0x2944>
   13c78:	ldr	r2, [r3, #352]	; 0x160
   13c7c:	cmp	r1, r2
   13c80:	beq	13d88 <__assert_fail@plt+0x294c>
   13c84:	ldr	r2, [r3, #368]	; 0x170
   13c88:	cmp	r1, r2
   13c8c:	beq	13d90 <__assert_fail@plt+0x2954>
   13c90:	ldr	r2, [r3, #384]	; 0x180
   13c94:	cmp	r1, r2
   13c98:	beq	13d98 <__assert_fail@plt+0x295c>
   13c9c:	ldr	r2, [r3, #400]	; 0x190
   13ca0:	cmp	r1, r2
   13ca4:	beq	13da0 <__assert_fail@plt+0x2964>
   13ca8:	ldr	r2, [r3, #416]	; 0x1a0
   13cac:	cmp	r1, r2
   13cb0:	beq	13da8 <__assert_fail@plt+0x296c>
   13cb4:	ldr	r2, [r3, #432]	; 0x1b0
   13cb8:	cmp	r1, r2
   13cbc:	beq	13db0 <__assert_fail@plt+0x2974>
   13cc0:	ldr	r2, [r3, #448]	; 0x1c0
   13cc4:	cmp	r1, r2
   13cc8:	beq	13d10 <__assert_fail@plt+0x28d4>
   13ccc:	ldr	r3, [r3, #464]	; 0x1d0
   13cd0:	cmp	r3, r1
   13cd4:	ldreq	r4, [pc, #220]	; 13db8 <__assert_fail@plt+0x297c>
   13cd8:	beq	13d14 <__assert_fail@plt+0x28d8>
   13cdc:	movw	r0, #57464	; 0xe078
   13ce0:	movt	r0, #1
   13ce4:	ldrd	r4, [sp]
   13ce8:	ldrd	r6, [sp, #8]
   13cec:	ldr	r8, [sp, #16]
   13cf0:	ldr	lr, [sp, #20]
   13cf4:	add	sp, sp, #24
   13cf8:	b	11118 <printf@plt>
   13cfc:	ldrd	r4, [sp]
   13d00:	ldrd	r6, [sp, #8]
   13d04:	ldr	r8, [sp, #16]
   13d08:	add	sp, sp, #20
   13d0c:	pop	{pc}		; (ldr pc, [sp], #4)
   13d10:	ldr	r4, [pc, #164]	; 13dbc <__assert_fail@plt+0x2980>
   13d14:	ldr	r0, [r4, #4]
   13d18:	cmp	r0, #0
   13d1c:	beq	13d24 <__assert_fail@plt+0x28e8>
   13d20:	bl	11250 <puts@plt>
   13d24:	ldr	r3, [r4, #8]
   13d28:	cmp	r3, #0
   13d2c:	beq	13cfc <__assert_fail@plt+0x28c0>
   13d30:	mov	r0, r5
   13d34:	ldrd	r6, [sp, #8]
   13d38:	ldr	r1, [r4, #12]
   13d3c:	ldrd	r4, [sp]
   13d40:	ldr	r8, [sp, #16]
   13d44:	ldr	lr, [sp, #20]
   13d48:	add	sp, sp, #24
   13d4c:	bx	r3
   13d50:	add	r4, r3, #320	; 0x140
   13d54:	b	13d14 <__assert_fail@plt+0x28d8>
   13d58:	add	r4, r3, #240	; 0xf0
   13d5c:	b	13d14 <__assert_fail@plt+0x28d8>
   13d60:	add	r4, r3, #256	; 0x100
   13d64:	b	13d14 <__assert_fail@plt+0x28d8>
   13d68:	add	r4, r3, #272	; 0x110
   13d6c:	b	13d14 <__assert_fail@plt+0x28d8>
   13d70:	add	r4, r3, #288	; 0x120
   13d74:	b	13d14 <__assert_fail@plt+0x28d8>
   13d78:	add	r4, r3, #304	; 0x130
   13d7c:	b	13d14 <__assert_fail@plt+0x28d8>
   13d80:	add	r4, r3, #336	; 0x150
   13d84:	b	13d14 <__assert_fail@plt+0x28d8>
   13d88:	add	r4, r3, #352	; 0x160
   13d8c:	b	13d14 <__assert_fail@plt+0x28d8>
   13d90:	add	r4, r3, #368	; 0x170
   13d94:	b	13d14 <__assert_fail@plt+0x28d8>
   13d98:	ldr	r4, [pc, #32]	; 13dc0 <__assert_fail@plt+0x2984>
   13d9c:	b	13d14 <__assert_fail@plt+0x28d8>
   13da0:	ldr	r4, [pc, #28]	; 13dc4 <__assert_fail@plt+0x2988>
   13da4:	b	13d14 <__assert_fail@plt+0x28d8>
   13da8:	ldr	r4, [pc, #24]	; 13dc8 <__assert_fail@plt+0x298c>
   13dac:	b	13d14 <__assert_fail@plt+0x28d8>
   13db0:	ldr	r4, [pc, #20]	; 13dcc <__assert_fail@plt+0x2990>
   13db4:	b	13d14 <__assert_fail@plt+0x28d8>
   13db8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   13dbc:	andeq	r0, r3, r0, asr #11
   13dc0:	andeq	r0, r3, r0, lsl #11
   13dc4:	muleq	r3, r0, r5
   13dc8:	andeq	r0, r3, r0, lsr #11
   13dcc:			; <UNDEFINED> instruction: 0x000305b0
   13dd0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13dd4:	subs	r4, r0, #0
   13dd8:	strd	r6, [sp, #8]
   13ddc:	str	r8, [sp, #16]
   13de0:	str	lr, [sp, #20]
   13de4:	vpush	{d8}
   13de8:	sub	sp, sp, #16
   13dec:	blt	13e18 <__assert_fail@plt+0x29dc>
   13df0:	cmp	r4, #1
   13df4:	mov	r8, r3
   13df8:	mov	r5, r1
   13dfc:	ble	13e38 <__assert_fail@plt+0x29fc>
   13e00:	cmp	r4, #2
   13e04:	bne	13e18 <__assert_fail@plt+0x29dc>
   13e08:	add	r1, sp, #48	; 0x30
   13e0c:	mov	r0, r3
   13e10:	ldm	r1, {r1, r2, r3}
   13e14:	bl	13ba0 <__assert_fail@plt+0x2764>
   13e18:	mov	r0, #0
   13e1c:	add	sp, sp, #16
   13e20:	vpop	{d8}
   13e24:	ldrd	r4, [sp]
   13e28:	ldrd	r6, [sp, #8]
   13e2c:	ldr	r8, [sp, #16]
   13e30:	add	sp, sp, #20
   13e34:	pop	{pc}		; (ldr pc, [sp], #4)
   13e38:	mov	r1, #0
   13e3c:	mov	r0, sp
   13e40:	bl	1122c <gettimeofday@plt>
   13e44:	ldr	r3, [sp, #48]	; 0x30
   13e48:	ldrb	r7, [r3]
   13e4c:	ldr	r3, [sp, #56]	; 0x38
   13e50:	and	r7, r7, #15
   13e54:	lsl	r7, r7, #2
   13e58:	sub	r6, r3, r7
   13e5c:	sub	r3, r6, #8
   13e60:	cmp	r3, #7
   13e64:	bhi	13f0c <__assert_fail@plt+0x2ad0>
   13e68:	vldr	d8, [pc, #312]	; 13fa8 <__assert_fail@plt+0x2b6c>
   13e6c:	mov	r5, #0
   13e70:	movw	r3, #1736	; 0x6c8
   13e74:	movt	r3, #3
   13e78:	ldr	r3, [r3]
   13e7c:	tst	r3, #8
   13e80:	bne	13e18 <__assert_fail@plt+0x29dc>
   13e84:	tst	r3, #1
   13e88:	bne	13ef4 <__assert_fail@plt+0x2ab8>
   13e8c:	ldr	r0, [r8, #4]
   13e90:	bl	111b4 <inet_ntoa@plt>
   13e94:	ldr	r3, [sp, #52]	; 0x34
   13e98:	mov	r2, r0
   13e9c:	mov	r1, r6
   13ea0:	movw	r0, #57380	; 0xe024
   13ea4:	movt	r0, #1
   13ea8:	ldrh	r3, [r3, #6]
   13eac:	rev16	r3, r3
   13eb0:	uxth	r3, r3
   13eb4:	bl	11118 <printf@plt>
   13eb8:	ldr	r3, [sp, #48]	; 0x30
   13ebc:	movw	r0, #57412	; 0xe044
   13ec0:	movt	r0, #1
   13ec4:	ldrb	r1, [r3, #8]
   13ec8:	bl	11118 <printf@plt>
   13ecc:	cmp	r5, #0
   13ed0:	bne	13f84 <__assert_fail@plt+0x2b48>
   13ed4:	cmp	r4, #1
   13ed8:	beq	13f98 <__assert_fail@plt+0x2b5c>
   13edc:	mov	r1, r7
   13ee0:	ldr	r0, [sp, #48]	; 0x30
   13ee4:	bl	12d18 <__assert_fail@plt+0x18dc>
   13ee8:	mov	r0, #10
   13eec:	bl	11334 <putchar@plt>
   13ef0:	b	13e18 <__assert_fail@plt+0x29dc>
   13ef4:	movw	r3, #1580	; 0x62c
   13ef8:	movt	r3, #3
   13efc:	mov	r0, #8
   13f00:	ldr	r1, [r3]
   13f04:	bl	113c4 <putc@plt>
   13f08:	b	13e18 <__assert_fail@plt+0x29dc>
   13f0c:	ldr	r3, [sp, #52]	; 0x34
   13f10:	mov	r0, sp
   13f14:	add	r1, sp, #8
   13f18:	ldr	r2, [r3, #8]!
   13f1c:	ldr	r3, [r3, #4]
   13f20:	strd	r2, [sp, #8]
   13f24:	bl	126d0 <__assert_fail@plt+0x1294>
   13f28:	vldr	s15, [sp, #4]
   13f2c:	vldr	d2, [pc, #124]	; 13fb0 <__assert_fail@plt+0x2b74>
   13f30:	vldr	d5, [r5]
   13f34:	vcvt.f64.s32	d3, s15
   13f38:	vldr	s15, [sp]
   13f3c:	vldr	d6, [r5, #24]
   13f40:	vdiv.f64	d8, d3, d2
   13f44:	vcvt.f64.s32	d4, s15
   13f48:	vldr	d7, [r5, #16]
   13f4c:	vmla.f64	d8, d4, d2
   13f50:	vmla.f64	d6, d8, d8
   13f54:	vadd.f64	d7, d7, d8
   13f58:	vcmpe.f64	d8, d5
   13f5c:	vstr	d7, [r5, #16]
   13f60:	vldr	d7, [r5, #8]
   13f64:	vmrs	APSR_nzcv, fpscr
   13f68:	vstr	d6, [r5, #24]
   13f6c:	vstrmi	d8, [r5]
   13f70:	vcmpe.f64	d8, d7
   13f74:	vmrs	APSR_nzcv, fpscr
   13f78:	vstrgt	d8, [r5, #8]
   13f7c:	mov	r5, #1
   13f80:	b	13e70 <__assert_fail@plt+0x2a34>
   13f84:	movw	r0, #57420	; 0xe04c
   13f88:	movt	r0, #1
   13f8c:	vmov	r2, r3, d8
   13f90:	bl	11118 <printf@plt>
   13f94:	b	13ed4 <__assert_fail@plt+0x2a98>
   13f98:	movw	r0, #57436	; 0xe05c
   13f9c:	movt	r0, #1
   13fa0:	bl	11118 <printf@plt>
   13fa4:	b	13edc <__assert_fail@plt+0x2aa0>
	...
   13fb4:	addmi	r4, pc, r0
   13fb8:	mov	r0, #0
   13fbc:	bx	lr
   13fc0:	str	r4, [sp, #-8]!
   13fc4:	subs	r4, r0, #0
   13fc8:	str	lr, [sp, #4]
   13fcc:	blt	13ff0 <__assert_fail@plt+0x2bb4>
   13fd0:	cmp	r4, #1
   13fd4:	ble	14000 <__assert_fail@plt+0x2bc4>
   13fd8:	cmp	r4, #2
   13fdc:	bne	13ff0 <__assert_fail@plt+0x2bb4>
   13fe0:	add	r1, sp, #8
   13fe4:	mov	r0, r3
   13fe8:	ldm	r1, {r1, r2, r3}
   13fec:	bl	13ba0 <__assert_fail@plt+0x2764>
   13ff0:	ldr	r4, [sp]
   13ff4:	add	sp, sp, #4
   13ff8:	mov	r0, #0
   13ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   14000:	ldr	r0, [r3, #4]
   14004:	bl	111b4 <inet_ntoa@plt>
   14008:	ldr	r3, [sp, #12]
   1400c:	mov	r2, r0
   14010:	movw	r0, #57380	; 0xe024
   14014:	movt	r0, #1
   14018:	ldr	r1, [sp, #16]
   1401c:	ldrh	r3, [r3, #6]
   14020:	rev16	r3, r3
   14024:	uxth	r3, r3
   14028:	bl	11118 <printf@plt>
   1402c:	cmp	r4, #1
   14030:	beq	14070 <__assert_fail@plt+0x2c34>
   14034:	mov	r0, #10
   14038:	bl	11334 <putchar@plt>
   1403c:	ldr	r3, [sp, #12]
   14040:	ldr	r0, [r3, #8]
   14044:	bl	111b4 <inet_ntoa@plt>
   14048:	mov	r1, r0
   1404c:	movw	r0, #58276	; 0xe3a4
   14050:	movt	r0, #1
   14054:	bl	11118 <printf@plt>
   14058:	mov	r0, #10
   1405c:	bl	11334 <putchar@plt>
   14060:	ldr	r4, [sp]
   14064:	add	sp, sp, #4
   14068:	mov	r0, #0
   1406c:	pop	{pc}		; (ldr pc, [sp], #4)
   14070:	movw	r0, #57436	; 0xe05c
   14074:	movt	r0, #1
   14078:	bl	11118 <printf@plt>
   1407c:	b	14034 <__assert_fail@plt+0x2bf8>
   14080:	strd	r4, [sp, #-16]!
   14084:	movw	r4, #1744	; 0x6d0
   14088:	movt	r4, #3
   1408c:	mov	r5, r0
   14090:	mov	r1, #17
   14094:	ldr	r0, [r4]
   14098:	str	r6, [sp, #8]
   1409c:	str	lr, [sp, #12]
   140a0:	bl	14524 <__assert_fail@plt+0x30e8>
   140a4:	mov	r2, #0
   140a8:	movw	r1, #16320	; 0x3fc0
   140ac:	movt	r1, #1
   140b0:	ldr	r0, [r4]
   140b4:	bl	1493c <__assert_fail@plt+0x3500>
   140b8:	mov	r1, #12
   140bc:	ldr	r0, [r4]
   140c0:	bl	14948 <__assert_fail@plt+0x350c>
   140c4:	mov	r1, #1
   140c8:	ldr	r0, [r4]
   140cc:	bl	12944 <__assert_fail@plt+0x1508>
   140d0:	mov	r1, r5
   140d4:	ldr	r0, [r4]
   140d8:	bl	14950 <__assert_fail@plt+0x3514>
   140dc:	cmp	r0, #0
   140e0:	bne	14128 <__assert_fail@plt+0x2cec>
   140e4:	ldr	r3, [r4]
   140e8:	ldr	r0, [r3, #28]
   140ec:	ldr	r5, [r3, #52]	; 0x34
   140f0:	bl	111b4 <inet_ntoa@plt>
   140f4:	mov	r2, r0
   140f8:	movw	r0, #58292	; 0xe3b4
   140fc:	movt	r0, #1
   14100:	mov	r1, r5
   14104:	bl	11118 <printf@plt>
   14108:	movw	r1, #16312	; 0x3fb8
   1410c:	movt	r1, #1
   14110:	ldr	r0, [r4]
   14114:	ldrd	r4, [sp]
   14118:	ldr	r6, [sp, #8]
   1411c:	ldr	lr, [sp, #12]
   14120:	add	sp, sp, #16
   14124:	b	12028 <__assert_fail@plt+0xbec>
   14128:	movw	r2, #57300	; 0xdfd4
   1412c:	movt	r2, #1
   14130:	mov	r1, #0
   14134:	mov	r0, #1
   14138:	bl	11238 <error@plt>
   1413c:	b	140e4 <__assert_fail@plt+0x2ca8>
   14140:	mov	r0, #0
   14144:	bx	lr
   14148:	b	12388 <__assert_fail@plt+0xf4c>
   1414c:	strd	r4, [sp, #-12]!
   14150:	subs	r4, r0, #0
   14154:	str	lr, [sp, #8]
   14158:	sub	sp, sp, #20
   1415c:	ldr	r5, [sp, #36]	; 0x24
   14160:	blt	14188 <__assert_fail@plt+0x2d4c>
   14164:	cmp	r4, #1
   14168:	ble	1419c <__assert_fail@plt+0x2d60>
   1416c:	cmp	r4, #2
   14170:	bne	14188 <__assert_fail@plt+0x2d4c>
   14174:	mov	r0, r3
   14178:	mov	r2, r5
   1417c:	ldr	r1, [sp, #32]
   14180:	ldr	r3, [sp, #40]	; 0x28
   14184:	bl	13ba0 <__assert_fail@plt+0x2764>
   14188:	mov	r0, #0
   1418c:	add	sp, sp, #20
   14190:	ldrd	r4, [sp]
   14194:	add	sp, sp, #8
   14198:	pop	{pc}		; (ldr pc, [sp], #4)
   1419c:	ldr	r0, [r3, #4]
   141a0:	bl	111b4 <inet_ntoa@plt>
   141a4:	ldrh	r3, [r5, #6]
   141a8:	mov	r2, r0
   141ac:	movw	r0, #57380	; 0xe024
   141b0:	movt	r0, #1
   141b4:	ldr	r1, [sp, #40]	; 0x28
   141b8:	rev16	r3, r3
   141bc:	uxth	r3, r3
   141c0:	bl	11118 <printf@plt>
   141c4:	cmp	r4, #1
   141c8:	beq	142a0 <__assert_fail@plt+0x2e64>
   141cc:	mov	r0, #10
   141d0:	bl	11334 <putchar@plt>
   141d4:	ldr	r2, [r5, #8]
   141d8:	mov	r1, #16
   141dc:	mov	r0, sp
   141e0:	rev	r2, r2
   141e4:	bl	127ac <__assert_fail@plt+0x1370>
   141e8:	mov	r1, r0
   141ec:	movw	r0, #58336	; 0xe3e0
   141f0:	movt	r0, #1
   141f4:	bl	11118 <printf@plt>
   141f8:	ldr	r2, [r5, #12]
   141fc:	mov	r1, #16
   14200:	mov	r0, sp
   14204:	rev	r2, r2
   14208:	bl	127ac <__assert_fail@plt+0x1370>
   1420c:	mov	r1, r0
   14210:	movw	r0, #58356	; 0xe3f4
   14214:	movt	r0, #1
   14218:	bl	11118 <printf@plt>
   1421c:	ldr	r2, [r5, #16]
   14220:	mov	r1, #16
   14224:	mov	r0, sp
   14228:	rev	r2, r2
   1422c:	bl	127ac <__assert_fail@plt+0x1370>
   14230:	mov	r1, r0
   14234:	movw	r0, #58376	; 0xe408
   14238:	movt	r0, #1
   1423c:	bl	11118 <printf@plt>
   14240:	movw	r3, #1736	; 0x6c8
   14244:	movt	r3, #3
   14248:	ldr	r3, [r3]
   1424c:	tst	r3, #32
   14250:	beq	14188 <__assert_fail@plt+0x2d4c>
   14254:	ldr	r0, [r5, #8]
   14258:	rev	r0, r0
   1425c:	bl	127a0 <__assert_fail@plt+0x1364>
   14260:	cmp	r0, #0
   14264:	beq	14188 <__assert_fail@plt+0x2d4c>
   14268:	ldr	r0, [r5, #8]
   1426c:	rev	r0, r0
   14270:	bl	127a0 <__assert_fail@plt+0x1364>
   14274:	cmp	r0, #0
   14278:	beq	14188 <__assert_fail@plt+0x2d4c>
   1427c:	ldr	r3, [r5, #8]
   14280:	movw	r0, #58396	; 0xe41c
   14284:	movt	r0, #1
   14288:	ldr	r1, [r5, #16]
   1428c:	rev	r3, r3
   14290:	rev	r1, r1
   14294:	sub	r1, r1, r3
   14298:	bl	11118 <printf@plt>
   1429c:	b	14188 <__assert_fail@plt+0x2d4c>
   142a0:	movw	r0, #57436	; 0xe05c
   142a4:	movt	r0, #1
   142a8:	bl	11118 <printf@plt>
   142ac:	b	141cc <__assert_fail@plt+0x2d90>
   142b0:	strd	r4, [sp, #-16]!
   142b4:	movw	r4, #1744	; 0x6d0
   142b8:	movt	r4, #3
   142bc:	mov	r5, r0
   142c0:	mov	r1, #13
   142c4:	ldr	r0, [r4]
   142c8:	str	r6, [sp, #8]
   142cc:	str	lr, [sp, #12]
   142d0:	bl	14524 <__assert_fail@plt+0x30e8>
   142d4:	mov	r2, #0
   142d8:	movw	r1, #16716	; 0x414c
   142dc:	movt	r1, #1
   142e0:	ldr	r0, [r4]
   142e4:	bl	1493c <__assert_fail@plt+0x3500>
   142e8:	mov	r1, #20
   142ec:	ldr	r0, [r4]
   142f0:	bl	14948 <__assert_fail@plt+0x350c>
   142f4:	mov	r1, r5
   142f8:	ldr	r0, [r4]
   142fc:	bl	14950 <__assert_fail@plt+0x3514>
   14300:	cmp	r0, #0
   14304:	bne	1434c <__assert_fail@plt+0x2f10>
   14308:	ldr	r3, [r4]
   1430c:	ldr	r0, [r3, #28]
   14310:	ldr	r5, [r3, #52]	; 0x34
   14314:	bl	111b4 <inet_ntoa@plt>
   14318:	mov	r2, r0
   1431c:	movw	r0, #58416	; 0xe430
   14320:	movt	r0, #1
   14324:	mov	r1, r5
   14328:	bl	11118 <printf@plt>
   1432c:	movw	r1, #16712	; 0x4148
   14330:	movt	r1, #1
   14334:	ldr	r0, [r4]
   14338:	ldrd	r4, [sp]
   1433c:	ldr	r6, [sp, #8]
   14340:	ldr	lr, [sp, #12]
   14344:	add	sp, sp, #16
   14348:	b	12028 <__assert_fail@plt+0xbec>
   1434c:	movw	r2, #57300	; 0xdfd4
   14350:	movt	r2, #1
   14354:	mov	r1, #0
   14358:	mov	r0, #1
   1435c:	bl	11238 <error@plt>
   14360:	b	14308 <__assert_fail@plt+0x2ecc>
   14364:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14368:	mov	r5, r1
   1436c:	strd	r6, [sp, #8]
   14370:	mov	r7, r0
   14374:	movw	r0, #58460	; 0xe45c
   14378:	movt	r0, #1
   1437c:	strd	r8, [sp, #16]
   14380:	str	sl, [sp, #24]
   14384:	str	lr, [sp, #28]
   14388:	bl	11124 <getprotobyname@plt>
   1438c:	subs	r4, r0, #0
   14390:	beq	14474 <__assert_fail@plt+0x3038>
   14394:	mov	r1, #3
   14398:	mov	r0, #2
   1439c:	ldr	r2, [r4, #8]
   143a0:	bl	1140c <socket@plt>
   143a4:	subs	r6, r0, #0
   143a8:	bge	14404 <__assert_fail@plt+0x2fc8>
   143ac:	bl	112f8 <__errno_location@plt>
   143b0:	ldr	r3, [r0]
   143b4:	mov	r8, r0
   143b8:	cmp	r3, #13
   143bc:	cmpne	r3, #1
   143c0:	movne	r3, #0
   143c4:	moveq	r3, #1
   143c8:	movne	r4, r3
   143cc:	bne	14458 <__assert_fail@plt+0x301c>
   143d0:	mov	r9, #0
   143d4:	mov	r1, #2
   143d8:	mov	r0, r1
   143dc:	str	r9, [r8]
   143e0:	ldr	r2, [r4, #8]
   143e4:	bl	1140c <socket@plt>
   143e8:	subs	r6, r0, #0
   143ec:	blt	144a4 <__assert_fail@plt+0x3068>
   143f0:	movw	r3, #1668	; 0x684
   143f4:	movt	r3, #3
   143f8:	ldr	r2, [r3]
   143fc:	add	r2, r2, #1
   14400:	str	r2, [r3]
   14404:	mov	r0, #124	; 0x7c
   14408:	bl	1b920 <argp_parse@@Base+0x2424>
   1440c:	subs	r4, r0, #0
   14410:	beq	14498 <__assert_fail@plt+0x305c>
   14414:	add	r3, r4, #12
   14418:	mov	r2, #112	; 0x70
   1441c:	mov	r1, #0
   14420:	mov	r0, r3
   14424:	bl	11328 <memset@plt>
   14428:	uxth	r5, r5
   1442c:	mov	r1, #0
   14430:	strd	r6, [r4]
   14434:	mov	lr, #1000	; 0x3e8
   14438:	mov	ip, #28
   1443c:	mov	r2, #128	; 0x80
   14440:	str	r1, [r4, #8]
   14444:	str	lr, [r4, #20]
   14448:	str	ip, [r4, #56]	; 0x38
   1444c:	str	r5, [r4, #60]	; 0x3c
   14450:	str	r2, [r4, #72]	; 0x48
   14454:	bl	1122c <gettimeofday@plt>
   14458:	mov	r0, r4
   1445c:	ldrd	r4, [sp]
   14460:	ldrd	r6, [sp, #8]
   14464:	ldrd	r8, [sp, #16]
   14468:	ldr	sl, [sp, #24]
   1446c:	add	sp, sp, #28
   14470:	pop	{pc}		; (ldr pc, [sp], #4)
   14474:	movw	r3, #1576	; 0x628
   14478:	movt	r3, #3
   1447c:	movw	r0, #58468	; 0xe464
   14480:	movt	r0, #1
   14484:	ldr	r3, [r3]
   14488:	mov	r2, #29
   1448c:	mov	r1, #1
   14490:	bl	11220 <fwrite@plt>
   14494:	b	14458 <__assert_fail@plt+0x301c>
   14498:	mov	r0, r6
   1449c:	bl	11430 <close@plt>
   144a0:	b	14458 <__assert_fail@plt+0x301c>
   144a4:	ldr	r0, [r8]
   144a8:	movw	r3, #1576	; 0x628
   144ac:	movt	r3, #3
   144b0:	ldr	r5, [r3]
   144b4:	cmp	r0, #13
   144b8:	cmpne	r0, #1
   144bc:	moveq	r4, #1
   144c0:	movne	r4, #0
   144c4:	cmp	r0, #93	; 0x5d
   144c8:	orreq	r4, r4, #1
   144cc:	cmp	r4, r9
   144d0:	beq	144f4 <__assert_fail@plt+0x30b8>
   144d4:	mov	r3, r5
   144d8:	movw	r0, #58500	; 0xe484
   144dc:	movt	r0, #1
   144e0:	mov	r2, #41	; 0x29
   144e4:	mov	r1, #1
   144e8:	mov	r4, r9
   144ec:	bl	11220 <fwrite@plt>
   144f0:	b	14458 <__assert_fail@plt+0x301c>
   144f4:	bl	11274 <strerror@plt>
   144f8:	mov	r2, r0
   144fc:	movw	r1, #58544	; 0xe4b0
   14500:	movt	r1, #1
   14504:	mov	r0, r5
   14508:	bl	112ec <fprintf@plt>
   1450c:	b	14458 <__assert_fail@plt+0x301c>
   14510:	mov	r3, #0
   14514:	str	r3, [r0, #112]	; 0x70
   14518:	str	r3, [r0, #116]	; 0x74
   1451c:	str	r3, [r0, #120]	; 0x78
   14520:	bx	lr
   14524:	str	r1, [r0, #4]
   14528:	bx	lr
   1452c:	mov	r1, #0
   14530:	strd	r4, [sp, #-20]!	; 0xffffffec
   14534:	mov	r4, r0
   14538:	strd	r6, [sp, #8]
   1453c:	str	lr, [sp, #16]
   14540:	sub	sp, sp, #12
   14544:	bl	127e4 <__assert_fail@plt+0x13a8>
   14548:	subs	r6, r0, #0
   1454c:	bne	146a0 <__assert_fail@plt+0x3264>
   14550:	ldr	r3, [r4, #4]
   14554:	sub	r2, r3, #13
   14558:	cmp	r2, #1
   1455c:	bls	14688 <__assert_fail@plt+0x324c>
   14560:	sub	r3, r3, #17
   14564:	cmp	r3, #1
   14568:	bls	14694 <__assert_fail@plt+0x3258>
   1456c:	ldr	r5, [r4, #56]	; 0x38
   14570:	add	r5, r5, #8
   14574:	mov	r7, r5
   14578:	ldr	r3, [r4, #72]	; 0x48
   1457c:	mov	ip, #1
   14580:	ldr	r1, [r4, #76]	; 0x4c
   14584:	ldr	r0, [r4, #112]	; 0x70
   14588:	lsl	r2, r3, #3
   1458c:	udiv	r3, r0, r2
   14590:	mls	r3, r2, r3, r0
   14594:	ldrb	r2, [r1, r3, asr #3]
   14598:	and	r0, r3, #7
   1459c:	bic	r2, r2, ip, lsl r0
   145a0:	strb	r2, [r1, r3, asr #3]
   145a4:	ldr	r2, [r4, #4]
   145a8:	cmp	r2, #13
   145ac:	beq	14670 <__assert_fail@plt+0x3234>
   145b0:	cmp	r2, #17
   145b4:	beq	14658 <__assert_fail@plt+0x321c>
   145b8:	cmp	r2, #8
   145bc:	beq	14640 <__assert_fail@plt+0x3204>
   145c0:	mov	r1, r5
   145c4:	ldr	r3, [r4, #60]	; 0x3c
   145c8:	ldr	ip, [r4, #112]	; 0x70
   145cc:	ldr	r0, [r4, #80]	; 0x50
   145d0:	str	ip, [sp]
   145d4:	bl	149fc <__assert_fail@plt+0x35c0>
   145d8:	add	r1, r4, #24
   145dc:	mov	ip, #16
   145e0:	ldr	r0, [r4]
   145e4:	mov	r3, #0
   145e8:	mov	r2, r5
   145ec:	stm	sp, {r1, ip}
   145f0:	ldr	r1, [r4, #80]	; 0x50
   145f4:	bl	11358 <sendto@plt>
   145f8:	subs	r3, r0, #0
   145fc:	blt	146a0 <__assert_fail@plt+0x3264>
   14600:	ldr	r2, [r4, #112]	; 0x70
   14604:	cmp	r3, r7
   14608:	add	r2, r2, #1
   1460c:	str	r2, [r4, #112]	; 0x70
   14610:	beq	14628 <__assert_fail@plt+0x31ec>
   14614:	movw	r0, #58556	; 0xe4bc
   14618:	movt	r0, #1
   1461c:	ldr	r1, [r4, #52]	; 0x34
   14620:	mov	r2, r7
   14624:	bl	11118 <printf@plt>
   14628:	mov	r0, r6
   1462c:	add	sp, sp, #12
   14630:	ldrd	r4, [sp]
   14634:	ldrd	r6, [sp, #8]
   14638:	add	sp, sp, #16
   1463c:	pop	{pc}		; (ldr pc, [sp], #4)
   14640:	mov	r1, r5
   14644:	ldr	r2, [r4, #60]	; 0x3c
   14648:	ldr	r0, [r4, #80]	; 0x50
   1464c:	ldr	r3, [r4, #112]	; 0x70
   14650:	bl	14ac8 <__assert_fail@plt+0x368c>
   14654:	b	145d8 <__assert_fail@plt+0x319c>
   14658:	mov	r1, r5
   1465c:	ldr	r2, [r4, #60]	; 0x3c
   14660:	ldr	r0, [r4, #80]	; 0x50
   14664:	ldr	r3, [r4, #112]	; 0x70
   14668:	bl	14c54 <__assert_fail@plt+0x3818>
   1466c:	b	145d8 <__assert_fail@plt+0x319c>
   14670:	mov	r1, r5
   14674:	ldr	r2, [r4, #60]	; 0x3c
   14678:	ldr	r0, [r4, #80]	; 0x50
   1467c:	ldr	r3, [r4, #112]	; 0x70
   14680:	bl	14b88 <__assert_fail@plt+0x374c>
   14684:	b	145d8 <__assert_fail@plt+0x319c>
   14688:	mov	r7, #20
   1468c:	mov	r5, r7
   14690:	b	14578 <__assert_fail@plt+0x313c>
   14694:	mov	r7, #12
   14698:	mov	r5, r7
   1469c:	b	14578 <__assert_fail@plt+0x313c>
   146a0:	mvn	r6, #0
   146a4:	b	14628 <__assert_fail@plt+0x31ec>
   146a8:	ldr	r2, [r0, #56]	; 0x38
   146ac:	mov	r1, #16
   146b0:	strd	r4, [sp, #-20]!	; 0xffffffec
   146b4:	add	r5, r0, #84	; 0x54
   146b8:	mov	r4, r0
   146bc:	strd	r6, [sp, #8]
   146c0:	str	lr, [sp, #16]
   146c4:	sub	sp, sp, #36	; 0x24
   146c8:	add	r3, sp, #20
   146cc:	add	r2, r2, #80	; 0x50
   146d0:	str	r5, [sp]
   146d4:	str	r3, [sp, #4]
   146d8:	mov	r3, #0
   146dc:	str	r1, [sp, #20]
   146e0:	ldr	r0, [r0]
   146e4:	ldr	r1, [r4, #80]	; 0x50
   146e8:	bl	111e4 <recvfrom@plt>
   146ec:	subs	r6, r0, #0
   146f0:	blt	14780 <__assert_fail@plt+0x3344>
   146f4:	add	r3, sp, #24
   146f8:	add	r2, sp, #28
   146fc:	ldr	r0, [r4, #80]	; 0x50
   14700:	mov	r1, r6
   14704:	bl	14a5c <__assert_fail@plt+0x3620>
   14708:	cmp	r0, #0
   1470c:	blt	14908 <__assert_fail@plt+0x34cc>
   14710:	ldr	r2, [sp, #24]
   14714:	ldrb	r3, [r2]
   14718:	cmp	r3, #18
   1471c:	ldrls	pc, [pc, r3, lsl #2]
   14720:	b	14770 <__assert_fail@plt+0x3334>
   14724:	muleq	r1, r8, r7
   14728:	andeq	r4, r1, r0, ror r7
   1472c:	andeq	r4, r1, r0, ror r7
   14730:	andeq	r4, r1, r0, ror r7
   14734:	andeq	r4, r1, r0, ror r7
   14738:	andeq	r4, r1, r0, ror r7
   1473c:	andeq	r4, r1, r0, ror r7
   14740:	andeq	r4, r1, r0, ror r7
   14744:	andeq	r4, r1, r0, lsl #15
   14748:	andeq	r4, r1, r0, ror r7
   1474c:	andeq	r4, r1, r0, ror r7
   14750:	andeq	r4, r1, r0, ror r7
   14754:	andeq	r4, r1, r0, ror r7
   14758:	andeq	r4, r1, r0, lsl #15
   1475c:	muleq	r1, r8, r7
   14760:	andeq	r4, r1, r0, ror r7
   14764:	andeq	r4, r1, r0, ror r7
   14768:	andeq	r4, r1, r0, lsl #15
   1476c:	muleq	r1, r8, r7
   14770:	ldr	r1, [r2, #24]
   14774:	ldr	r3, [r4, #28]
   14778:	cmp	r1, r3
   1477c:	beq	14860 <__assert_fail@plt+0x3424>
   14780:	mvn	r0, #0
   14784:	add	sp, sp, #36	; 0x24
   14788:	ldrd	r4, [sp]
   1478c:	ldrd	r6, [sp, #8]
   14790:	add	sp, sp, #16
   14794:	pop	{pc}		; (ldr pc, [sp], #4)
   14798:	ldrh	r3, [r2, #4]
   1479c:	ldr	r1, [r4, #60]	; 0x3c
   147a0:	rev16	r3, r3
   147a4:	uxth	r3, r3
   147a8:	cmp	r3, r1
   147ac:	beq	147c4 <__assert_fail@plt+0x3388>
   147b0:	movw	r3, #1668	; 0x684
   147b4:	movt	r3, #3
   147b8:	ldr	r3, [r3]
   147bc:	cmp	r3, #0
   147c0:	beq	14780 <__assert_fail@plt+0x3344>
   147c4:	cmp	r0, #0
   147c8:	bne	148d8 <__assert_fail@plt+0x349c>
   147cc:	ldrh	r3, [r2, #6]
   147d0:	ldr	r1, [r4, #72]	; 0x48
   147d4:	ldr	lr, [r4, #76]	; 0x4c
   147d8:	rev16	r3, r3
   147dc:	uxth	r3, r3
   147e0:	ldr	ip, [r4, #116]	; 0x74
   147e4:	lsl	r1, r1, #3
   147e8:	sdiv	r2, r3, r1
   147ec:	add	r0, ip, #1
   147f0:	str	r0, [r4, #116]	; 0x74
   147f4:	mls	r3, r1, r2, r3
   147f8:	ldrb	r2, [lr, r3, asr #3]
   147fc:	and	r1, r3, #7
   14800:	asr	r0, r2, r1
   14804:	ands	r0, r0, #1
   14808:	bne	1484c <__assert_fail@plt+0x3410>
   1480c:	mov	ip, #1
   14810:	orr	r2, r2, ip, lsl r1
   14814:	strb	r2, [lr, r3, asr #3]
   14818:	ldr	r7, [r4, #64]	; 0x40
   1481c:	cmp	r7, #0
   14820:	beq	14844 <__assert_fail@plt+0x3408>
   14824:	ldr	lr, [sp, #24]
   14828:	mov	r3, r5
   1482c:	add	r2, r4, #24
   14830:	str	r6, [sp, #8]
   14834:	ldr	ip, [sp, #28]
   14838:	ldr	r1, [r4, #68]	; 0x44
   1483c:	stm	sp, {ip, lr}
   14840:	blx	r7
   14844:	mov	r0, #0
   14848:	b	14784 <__assert_fail@plt+0x3348>
   1484c:	ldr	r3, [r4, #120]	; 0x78
   14850:	str	ip, [r4, #116]	; 0x74
   14854:	add	r3, r3, #1
   14858:	str	r3, [r4, #120]	; 0x78
   1485c:	b	14818 <__assert_fail@plt+0x33dc>
   14860:	ldrb	r3, [r2, #17]
   14864:	cmp	r3, #1
   14868:	bne	14780 <__assert_fail@plt+0x3344>
   1486c:	ldrb	r3, [r2, #28]
   14870:	cmp	r3, #8
   14874:	bne	14780 <__assert_fail@plt+0x3344>
   14878:	ldrh	r3, [r2, #32]
   1487c:	ldr	r1, [r4, #60]	; 0x3c
   14880:	rev16	r3, r3
   14884:	uxth	r3, r3
   14888:	cmp	r3, r1
   1488c:	beq	148a4 <__assert_fail@plt+0x3468>
   14890:	movw	r3, #1668	; 0x684
   14894:	movt	r3, #3
   14898:	ldr	r3, [r3]
   1489c:	cmp	r3, #0
   148a0:	beq	14780 <__assert_fail@plt+0x3344>
   148a4:	ldr	r7, [r4, #64]	; 0x40
   148a8:	cmp	r7, #0
   148ac:	beq	14844 <__assert_fail@plt+0x3408>
   148b0:	ldr	ip, [sp, #28]
   148b4:	mov	r3, r5
   148b8:	mov	r0, #2
   148bc:	stmib	sp, {r2, r6}
   148c0:	add	r2, r4, #24
   148c4:	ldr	r1, [r4, #68]	; 0x44
   148c8:	str	ip, [sp]
   148cc:	blx	r7
   148d0:	mov	r0, #0
   148d4:	b	14784 <__assert_fail@plt+0x3348>
   148d8:	movw	r3, #1576	; 0x628
   148dc:	movt	r3, #3
   148e0:	ldr	r0, [r4, #88]	; 0x58
   148e4:	ldr	r7, [r3]
   148e8:	bl	111b4 <inet_ntoa@plt>
   148ec:	mov	r2, r0
   148f0:	movw	r1, #58632	; 0xe508
   148f4:	movt	r1, #1
   148f8:	mov	r0, r7
   148fc:	bl	112ec <fprintf@plt>
   14900:	ldr	r2, [sp, #24]
   14904:	b	147cc <__assert_fail@plt+0x3390>
   14908:	movw	r3, #1576	; 0x628
   1490c:	movt	r3, #3
   14910:	ldr	r0, [r4, #88]	; 0x58
   14914:	ldr	r4, [r3]
   14918:	bl	111b4 <inet_ntoa@plt>
   1491c:	mov	r3, r0
   14920:	mov	r2, r6
   14924:	movw	r1, #58592	; 0xe4e0
   14928:	movt	r1, #1
   1492c:	mov	r0, r4
   14930:	bl	112ec <fprintf@plt>
   14934:	mvn	r0, #0
   14938:	b	14784 <__assert_fail@plt+0x3348>
   1493c:	str	r1, [r0, #64]	; 0x40
   14940:	str	r2, [r0, #68]	; 0x44
   14944:	bx	lr
   14948:	str	r1, [r0, #56]	; 0x38
   1494c:	bx	lr
   14950:	mov	r2, #194	; 0xc2
   14954:	mov	r3, #2
   14958:	strd	r4, [sp, #-20]!	; 0xffffffec
   1495c:	strd	r6, [sp, #8]
   14960:	mov	r5, #0
   14964:	mov	r4, #0
   14968:	str	lr, [sp, #16]
   1496c:	sub	sp, sp, #44	; 0x2c
   14970:	mov	r7, r1
   14974:	mov	r6, r0
   14978:	mov	r0, r1
   1497c:	mov	r1, #0
   14980:	strd	r2, [sp, #8]
   14984:	add	r3, sp, #4
   14988:	add	r2, sp, #8
   1498c:	strd	r4, [sp, #16]
   14990:	strd	r4, [sp, #24]
   14994:	strd	r4, [sp, #32]
   14998:	bl	11400 <getaddrinfo@plt>
   1499c:	subs	r5, r0, #0
   149a0:	bne	149ec <__assert_fail@plt+0x35b0>
   149a4:	ldr	r4, [sp, #4]
   149a8:	add	r0, r6, #24
   149ac:	ldr	r2, [r4, #16]
   149b0:	ldr	r1, [r4, #20]
   149b4:	bl	11184 <memcpy@plt>
   149b8:	ldr	r0, [r4, #24]
   149bc:	cmp	r0, #0
   149c0:	moveq	r0, r7
   149c4:	bl	111f0 <strdup@plt>
   149c8:	str	r0, [r6, #52]	; 0x34
   149cc:	mov	r0, r4
   149d0:	bl	113f4 <freeaddrinfo@plt>
   149d4:	mov	r0, r5
   149d8:	add	sp, sp, #44	; 0x2c
   149dc:	ldrd	r4, [sp]
   149e0:	ldrd	r6, [sp, #8]
   149e4:	add	sp, sp, #16
   149e8:	pop	{pc}		; (ldr pc, [sp], #4)
   149ec:	mov	r0, #0
   149f0:	mov	r5, #1
   149f4:	bl	1a534 <argp_parse@@Base+0x1038>
   149f8:	b	149d4 <__assert_fail@plt+0x3598>
   149fc:	cmp	r1, #7
   14a00:	strd	r4, [sp, #-16]!
   14a04:	str	r6, [sp, #8]
   14a08:	str	lr, [sp, #12]
   14a0c:	bls	14a54 <__assert_fail@plt+0x3618>
   14a10:	strb	r2, [r0]
   14a14:	rev16	r3, r3
   14a18:	mov	r5, #0
   14a1c:	ldr	r2, [sp, #16]
   14a20:	mov	r4, r0
   14a24:	strb	r5, [r0, #1]
   14a28:	strh	r5, [r0, #2]
   14a2c:	strh	r3, [r0, #4]
   14a30:	rev16	r2, r2
   14a34:	strh	r2, [r0, #6]
   14a38:	bl	14ca0 <__assert_fail@plt+0x3864>
   14a3c:	strh	r0, [r4, #2]
   14a40:	mov	r0, r5
   14a44:	ldrd	r4, [sp]
   14a48:	ldr	r6, [sp, #8]
   14a4c:	add	sp, sp, #12
   14a50:	pop	{pc}		; (ldr pc, [sp], #4)
   14a54:	mvn	r5, #0
   14a58:	b	14a40 <__assert_fail@plt+0x3604>
   14a5c:	ldrb	ip, [r0]
   14a60:	strd	r4, [sp, #-16]!
   14a64:	str	r6, [sp, #8]
   14a68:	str	lr, [sp, #12]
   14a6c:	and	ip, ip, #15
   14a70:	lsl	ip, ip, #2
   14a74:	add	lr, ip, #8
   14a78:	cmp	lr, r1
   14a7c:	mvnhi	r0, #0
   14a80:	bhi	14ab8 <__assert_fail@plt+0x367c>
   14a84:	add	r5, r0, ip
   14a88:	sub	r1, r1, ip
   14a8c:	ldrh	r4, [r5, #2]
   14a90:	str	r0, [r2]
   14a94:	mov	r2, #0
   14a98:	mov	r0, r5
   14a9c:	str	r5, [r3]
   14aa0:	strh	r2, [r5, #2]
   14aa4:	bl	14ca0 <__assert_fail@plt+0x3864>
   14aa8:	mov	r3, r0
   14aac:	subs	r0, r0, r4
   14ab0:	movne	r0, #1
   14ab4:	strh	r3, [r5, #2]
   14ab8:	ldrd	r4, [sp]
   14abc:	ldr	r6, [sp, #8]
   14ac0:	add	sp, sp, #12
   14ac4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ac8:	cmp	r1, #7
   14acc:	bls	14b10 <__assert_fail@plt+0x36d4>
   14ad0:	rev16	r3, r3
   14ad4:	rev16	r2, r2
   14ad8:	str	r4, [sp, #-8]!
   14adc:	mov	ip, #8
   14ae0:	mov	r4, r0
   14ae4:	str	lr, [sp, #4]
   14ae8:	str	ip, [r0]
   14aec:	strh	r2, [r0, #4]
   14af0:	strh	r3, [r0, #6]
   14af4:	bl	14ca0 <__assert_fail@plt+0x3864>
   14af8:	mov	r3, #0
   14afc:	strh	r0, [r4, #2]
   14b00:	ldr	r4, [sp]
   14b04:	add	sp, sp, #4
   14b08:	mov	r0, r3
   14b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b10:	mvn	r3, #0
   14b14:	mov	r0, r3
   14b18:	bx	lr
   14b1c:	ldrb	ip, [r0]
   14b20:	strd	r4, [sp, #-16]!
   14b24:	str	r6, [sp, #8]
   14b28:	str	lr, [sp, #12]
   14b2c:	and	ip, ip, #15
   14b30:	lsl	ip, ip, #2
   14b34:	add	lr, ip, #8
   14b38:	cmp	r1, lr
   14b3c:	mvncc	r0, #0
   14b40:	bcc	14b78 <__assert_fail@plt+0x373c>
   14b44:	add	r5, r0, ip
   14b48:	sub	r1, r1, ip
   14b4c:	ldrh	r4, [r5, #2]
   14b50:	str	r0, [r2]
   14b54:	mov	r2, #0
   14b58:	mov	r0, r5
   14b5c:	str	r5, [r3]
   14b60:	strh	r2, [r5, #2]
   14b64:	bl	14ca0 <__assert_fail@plt+0x3864>
   14b68:	mov	r3, r0
   14b6c:	subs	r0, r4, r0
   14b70:	movne	r0, #1
   14b74:	strh	r3, [r5, #2]
   14b78:	ldrd	r4, [sp]
   14b7c:	ldr	r6, [sp, #8]
   14b80:	add	sp, sp, #12
   14b84:	pop	{pc}		; (ldr pc, [sp], #4)
   14b88:	cmp	r1, #19
   14b8c:	bls	14c4c <__assert_fail@plt+0x3810>
   14b90:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14b94:	mov	r4, r0
   14b98:	movw	r5, #17671	; 0x4507
   14b9c:	movt	r5, #49710	; 0xc22e
   14ba0:	strd	r6, [sp, #8]
   14ba4:	mov	r6, r1
   14ba8:	strd	r8, [sp, #16]
   14bac:	mov	r1, #0
   14bb0:	mov	r8, r2
   14bb4:	str	lr, [sp, #24]
   14bb8:	sub	sp, sp, #20
   14bbc:	mov	r9, r3
   14bc0:	add	r0, sp, #8
   14bc4:	bl	1122c <gettimeofday@plt>
   14bc8:	ldr	r7, [sp, #8]
   14bcc:	movw	lr, #19923	; 0x4dd3
   14bd0:	movt	lr, #4194	; 0x1062
   14bd4:	mov	r3, r8
   14bd8:	mov	r1, r6
   14bdc:	str	r9, [sp]
   14be0:	ldr	r0, [sp, #12]
   14be4:	smull	r2, r5, r5, r7
   14be8:	asr	r2, r7, #31
   14bec:	smull	ip, lr, lr, r0
   14bf0:	add	ip, r5, r7
   14bf4:	asr	r0, r0, #31
   14bf8:	mov	r5, #1000	; 0x3e8
   14bfc:	rsb	r2, r2, ip, asr #16
   14c00:	movw	ip, #20864	; 0x5180
   14c04:	movt	ip, #1
   14c08:	rsb	lr, r0, lr, asr #6
   14c0c:	mov	r0, r4
   14c10:	mls	ip, ip, r2, r7
   14c14:	mov	r2, #13
   14c18:	mla	ip, r5, ip, lr
   14c1c:	rev	ip, ip
   14c20:	str	ip, [r4, #8]
   14c24:	str	ip, [r4, #12]
   14c28:	str	ip, [r4, #16]
   14c2c:	bl	149fc <__assert_fail@plt+0x35c0>
   14c30:	mov	r0, #0
   14c34:	add	sp, sp, #20
   14c38:	ldrd	r4, [sp]
   14c3c:	ldrd	r6, [sp, #8]
   14c40:	ldrd	r8, [sp, #16]
   14c44:	add	sp, sp, #24
   14c48:	pop	{pc}		; (ldr pc, [sp], #4)
   14c4c:	mvn	r0, #0
   14c50:	bx	lr
   14c54:	cmp	r1, #11
   14c58:	bls	14c98 <__assert_fail@plt+0x385c>
   14c5c:	str	r4, [sp, #-8]!
   14c60:	mov	r4, #0
   14c64:	str	lr, [sp, #4]
   14c68:	sub	sp, sp, #8
   14c6c:	mov	lr, r3
   14c70:	mov	r3, r2
   14c74:	mov	r2, #17
   14c78:	str	lr, [sp]
   14c7c:	str	r4, [r0, #8]
   14c80:	bl	149fc <__assert_fail@plt+0x35c0>
   14c84:	mov	r0, r4
   14c88:	add	sp, sp, #8
   14c8c:	ldr	r4, [sp]
   14c90:	add	sp, sp, #4
   14c94:	pop	{pc}		; (ldr pc, [sp], #4)
   14c98:	mvn	r0, #0
   14c9c:	bx	lr
   14ca0:	mov	r3, #0
   14ca4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ca8:	sub	sp, sp, #12
   14cac:	cmp	r1, #1
   14cb0:	strh	r3, [sp, #6]
   14cb4:	ble	14d10 <__assert_fail@plt+0x38d4>
   14cb8:	sub	r1, r1, #2
   14cbc:	lsr	lr, r1, #1
   14cc0:	add	ip, lr, #1
   14cc4:	add	ip, r0, ip, lsl #1
   14cc8:	ldrh	r2, [r0], #2
   14ccc:	cmp	ip, r0
   14cd0:	add	r3, r3, r2
   14cd4:	bne	14cc8 <__assert_fail@plt+0x388c>
   14cd8:	sub	r1, r1, lr, lsl #1
   14cdc:	cmp	r1, #1
   14ce0:	bne	14cf4 <__assert_fail@plt+0x38b8>
   14ce4:	ldrb	r2, [ip]
   14ce8:	strb	r2, [sp, #6]
   14cec:	ldrh	r2, [sp, #6]
   14cf0:	add	r3, r3, r2
   14cf4:	uxth	r0, r3
   14cf8:	add	r3, r0, r3, asr #16
   14cfc:	add	r3, r3, r3, asr #16
   14d00:	mvn	r0, r3
   14d04:	uxth	r0, r0
   14d08:	add	sp, sp, #12
   14d0c:	pop	{pc}		; (ldr pc, [sp], #4)
   14d10:	mov	ip, r0
   14d14:	b	14cdc <__assert_fail@plt+0x38a0>
   14d18:	ldr	r3, [r0, #12]
   14d1c:	strd	r4, [sp, #-16]!
   14d20:	ldr	r2, [r1, #12]
   14d24:	str	r6, [sp, #8]
   14d28:	str	lr, [sp, #12]
   14d2c:	cmp	r3, r2
   14d30:	beq	14d90 <__assert_fail@plt+0x3954>
   14d34:	mov	r5, r1
   14d38:	mov	r4, r0
   14d3c:	mov	r1, r2
   14d40:	mov	r0, r3
   14d44:	bl	14d18 <__assert_fail@plt+0x38dc>
   14d48:	cmp	r0, #0
   14d4c:	bne	14d80 <__assert_fail@plt+0x3944>
   14d50:	ldr	r3, [r5, #8]
   14d54:	ldr	r0, [r4, #8]
   14d58:	mvn	r2, r3
   14d5c:	lsr	r2, r2, #31
   14d60:	cmp	r2, r0, lsr #31
   14d64:	subne	r0, r0, r3
   14d68:	subeq	r0, r3, r0
   14d6c:	cmp	r0, #0
   14d70:	bne	14d80 <__assert_fail@plt+0x3944>
   14d74:	ldr	r0, [r4, #4]
   14d78:	ldr	r3, [r5, #4]
   14d7c:	sub	r0, r3, r0
   14d80:	ldrd	r4, [sp]
   14d84:	ldr	r6, [sp, #8]
   14d88:	add	sp, sp, #12
   14d8c:	pop	{pc}		; (ldr pc, [sp], #4)
   14d90:	ldr	lr, [r1, #4]
   14d94:	ldr	r3, [r1, #8]
   14d98:	ldr	r2, [r0, #8]
   14d9c:	ldr	ip, [r0, #4]
   14da0:	mvn	r1, r3
   14da4:	lsr	r1, r1, #31
   14da8:	ldrd	r4, [sp]
   14dac:	cmp	r1, r2, lsr #31
   14db0:	ldr	r6, [sp, #8]
   14db4:	add	sp, sp, #12
   14db8:	subne	r0, r2, r3
   14dbc:	subeq	r0, r3, r2
   14dc0:	cmp	r0, #0
   14dc4:	subeq	r0, lr, ip
   14dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   14dcc:	strd	r4, [sp, #-16]!
   14dd0:	subs	r5, r0, #0
   14dd4:	mov	r4, r1
   14dd8:	str	r6, [sp, #8]
   14ddc:	str	lr, [sp, #12]
   14de0:	beq	14df4 <__assert_fail@plt+0x39b8>
   14de4:	mov	r1, #10
   14de8:	bl	112e0 <strchr@plt>
   14dec:	adds	r5, r0, #0
   14df0:	movne	r5, #1
   14df4:	cmp	r4, #0
   14df8:	beq	14e24 <__assert_fail@plt+0x39e8>
   14dfc:	ldr	r3, [r4]
   14e00:	cmp	r3, #0
   14e04:	beq	14e24 <__assert_fail@plt+0x39e8>
   14e08:	ldr	r0, [r3, #8]
   14e0c:	ldr	r1, [r3, #16]
   14e10:	bl	14dcc <__assert_fail@plt+0x3990>
   14e14:	ldr	r3, [r4, #16]!
   14e18:	add	r5, r5, r0
   14e1c:	cmp	r3, #0
   14e20:	bne	14e08 <__assert_fail@plt+0x39cc>
   14e24:	mov	r0, r5
   14e28:	ldrd	r4, [sp]
   14e2c:	ldr	r6, [sp, #8]
   14e30:	add	sp, sp, #12
   14e34:	pop	{pc}		; (ldr pc, [sp], #4)
   14e38:	ldr	r3, [r0, #16]
   14e3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14e40:	ldr	r4, [r0]
   14e44:	strd	r6, [sp, #8]
   14e48:	strd	r8, [sp, #16]
   14e4c:	strd	sl, [sp, #24]
   14e50:	str	lr, [sp, #32]
   14e54:	sub	sp, sp, #52	; 0x34
   14e58:	stm	sp, {r0, r3}
   14e5c:	mov	r0, #16
   14e60:	str	r1, [sp, #8]
   14e64:	bl	1b920 <argp_parse@@Base+0x2424>
   14e68:	subs	fp, r0, #0
   14e6c:	beq	154d4 <__assert_fail@plt+0x4098>
   14e70:	mov	r3, #0
   14e74:	cmp	r4, r3
   14e78:	str	r3, [fp, #4]
   14e7c:	str	r3, [fp, #12]
   14e80:	beq	150dc <__assert_fail@plt+0x3ca0>
   14e84:	ldr	r0, [r4, #12]
   14e88:	ands	r0, r0, #4
   14e8c:	bne	15510 <__assert_fail@plt+0x40d4>
   14e90:	mov	r9, r0
   14e94:	add	r5, r4, #24
   14e98:	mov	r8, r0
   14e9c:	b	14eec <__assert_fail@plt+0x3ab0>
   14ea0:	ldr	r3, [r5, #-12]
   14ea4:	tst	r3, #4
   14ea8:	bne	14eb8 <__assert_fail@plt+0x3a7c>
   14eac:	add	r9, r9, #1
   14eb0:	str	r9, [fp, #4]
   14eb4:	ldr	r3, [r5, #-12]
   14eb8:	tst	r3, #8
   14ebc:	bne	14ee8 <__assert_fail@plt+0x3aac>
   14ec0:	ldr	r6, [r5, #-20]	; 0xffffffec
   14ec4:	sub	r3, r6, #1
   14ec8:	cmp	r3, #254	; 0xfe
   14ecc:	bhi	14ee8 <__assert_fail@plt+0x3aac>
   14ed0:	bl	112a4 <__ctype_b_loc@plt>
   14ed4:	ldr	r3, [r0]
   14ed8:	lsl	r6, r6, #1
   14edc:	ldrh	r3, [r3, r6]
   14ee0:	tst	r3, #16384	; 0x4000
   14ee4:	addne	r8, r8, #1
   14ee8:	add	r5, r5, #24
   14eec:	ldr	r3, [r5, #-20]	; 0xffffffec
   14ef0:	cmp	r3, #0
   14ef4:	bne	14ea0 <__assert_fail@plt+0x3a64>
   14ef8:	ldr	r3, [r5, #-24]	; 0xffffffe8
   14efc:	cmp	r3, #0
   14f00:	bne	14ea0 <__assert_fail@plt+0x3a64>
   14f04:	ldr	r3, [r5, #-8]
   14f08:	cmp	r3, #0
   14f0c:	bne	14ea0 <__assert_fail@plt+0x3a64>
   14f10:	ldr	sl, [r5, #-4]
   14f14:	cmp	sl, #0
   14f18:	bne	14ea0 <__assert_fail@plt+0x3a64>
   14f1c:	rsb	r9, r9, r9, lsl #3
   14f20:	lsl	r0, r9, #2
   14f24:	bl	1b920 <argp_parse@@Base+0x2424>
   14f28:	str	r0, [fp]
   14f2c:	add	r0, r8, #1
   14f30:	bl	1b920 <argp_parse@@Base+0x2424>
   14f34:	ldr	r5, [fp]
   14f38:	mov	r7, r0
   14f3c:	str	r0, [fp, #8]
   14f40:	cmp	r5, #0
   14f44:	cmpne	r0, #0
   14f48:	beq	15478 <__assert_fail@plt+0x403c>
   14f4c:	ldr	r2, [fp, #4]
   14f50:	movw	r3, #37449	; 0x9249
   14f54:	movt	r3, #2340	; 0x924
   14f58:	cmp	r2, r3
   14f5c:	bhi	15498 <__assert_fail@plt+0x405c>
   14f60:	mov	r6, r0
   14f64:	mov	r8, sl
   14f68:	ldr	r3, [r4, #4]
   14f6c:	mov	r0, sl
   14f70:	add	r5, r5, #28
   14f74:	str	fp, [sp, #12]
   14f78:	ldr	sl, [sp, #8]
   14f7c:	mov	fp, r7
   14f80:	cmp	r3, #0
   14f84:	ldr	r7, [r4, #20]
   14f88:	bne	14f98 <__assert_fail@plt+0x3b5c>
   14f8c:	ldr	ip, [r4]
   14f90:	cmp	ip, #0
   14f94:	beq	15078 <__assert_fail@plt+0x3c3c>
   14f98:	cmp	r7, #0
   14f9c:	str	r4, [r5, #-28]	; 0xffffffe4
   14fa0:	str	r8, [r5, #-24]	; 0xffffffe8
   14fa4:	str	r6, [r5, #-20]	; 0xffffffec
   14fa8:	bne	14fbc <__assert_fail@plt+0x3b80>
   14fac:	ldr	r2, [r4]
   14fb0:	orrs	r3, r2, r3
   14fb4:	movne	r7, r0
   14fb8:	beq	15098 <__assert_fail@plt+0x3c5c>
   14fbc:	ldr	r2, [sp]
   14fc0:	mov	r3, #0
   14fc4:	str	r7, [r5, #-16]
   14fc8:	str	sl, [r5, #-12]
   14fcc:	str	r2, [r5, #-8]
   14fd0:	add	r3, r3, #1
   14fd4:	str	r3, [r5, #-24]	; 0xffffffe8
   14fd8:	ldr	r3, [r4, #12]
   14fdc:	tst	r3, #8
   14fe0:	bne	15048 <__assert_fail@plt+0x3c0c>
   14fe4:	ldr	r9, [r4, #4]
   14fe8:	sub	r3, r9, #1
   14fec:	cmp	r3, #254	; 0xfe
   14ff0:	bhi	15048 <__assert_fail@plt+0x3c0c>
   14ff4:	bl	112a4 <__ctype_b_loc@plt>
   14ff8:	ldr	r0, [r0]
   14ffc:	lsl	r3, r9, #1
   15000:	ldrh	r3, [r0, r3]
   15004:	tst	r3, #16384	; 0x4000
   15008:	beq	15048 <__assert_fail@plt+0x3c0c>
   1500c:	cmp	fp, r6
   15010:	uxtb	r9, r9
   15014:	bcs	15044 <__assert_fail@plt+0x3c08>
   15018:	ldrb	r3, [fp]
   1501c:	cmp	r3, r9
   15020:	beq	15048 <__assert_fail@plt+0x3c0c>
   15024:	mov	r3, fp
   15028:	sub	r0, r6, #1
   1502c:	b	1503c <__assert_fail@plt+0x3c00>
   15030:	ldrb	ip, [r3, #1]!
   15034:	cmp	ip, r9
   15038:	beq	15048 <__assert_fail@plt+0x3c0c>
   1503c:	cmp	r0, r3
   15040:	bne	15030 <__assert_fail@plt+0x3bf4>
   15044:	strb	r9, [r6], #1
   15048:	add	r4, r4, #24
   1504c:	ldr	r0, [r4, #4]
   15050:	cmp	r0, #0
   15054:	bne	15064 <__assert_fail@plt+0x3c28>
   15058:	ldr	r3, [r4]
   1505c:	cmp	r3, #0
   15060:	beq	150a0 <__assert_fail@plt+0x3c64>
   15064:	ldr	r3, [r4, #12]
   15068:	tst	r3, #4
   1506c:	beq	150c4 <__assert_fail@plt+0x3c88>
   15070:	ldr	r3, [r5, #-24]	; 0xffffffe8
   15074:	b	14fd0 <__assert_fail@plt+0x3b94>
   15078:	ldr	ip, [r4, #16]
   1507c:	cmp	ip, #0
   15080:	beq	150cc <__assert_fail@plt+0x3c90>
   15084:	cmp	r7, #0
   15088:	str	r4, [r5, #-28]	; 0xffffffe4
   1508c:	str	r3, [r5, #-24]	; 0xffffffe8
   15090:	str	r6, [r5, #-20]	; 0xffffffec
   15094:	bne	14fbc <__assert_fail@plt+0x3b80>
   15098:	add	r7, r0, #1
   1509c:	b	14fbc <__assert_fail@plt+0x3b80>
   150a0:	ldr	r3, [r4, #16]
   150a4:	cmp	r3, #0
   150a8:	bne	15064 <__assert_fail@plt+0x3c28>
   150ac:	ldr	r3, [r4, #20]
   150b0:	cmp	r3, #0
   150b4:	bne	15064 <__assert_fail@plt+0x3c28>
   150b8:	add	r5, r5, #28
   150bc:	mov	r0, r7
   150c0:	b	14f80 <__assert_fail@plt+0x3b44>
   150c4:	mov	r3, r0
   150c8:	b	150b8 <__assert_fail@plt+0x3c7c>
   150cc:	cmp	r7, #0
   150d0:	bne	15218 <__assert_fail@plt+0x3ddc>
   150d4:	ldr	fp, [sp, #12]
   150d8:	strb	r3, [r6]
   150dc:	ldr	sl, [sp, #4]
   150e0:	cmp	sl, #0
   150e4:	beq	151f8 <__assert_fail@plt+0x3dbc>
   150e8:	ldr	r0, [sl]
   150ec:	cmp	r0, #0
   150f0:	beq	151f8 <__assert_fail@plt+0x3dbc>
   150f4:	movw	r3, #37449	; 0x9249
   150f8:	movt	r3, #2340	; 0x924
   150fc:	str	r3, [sp, #28]
   15100:	add	r3, fp, #12
   15104:	str	r3, [sp, #44]	; 0x2c
   15108:	ldr	r6, [sl, #8]
   1510c:	ldr	r5, [sl, #12]
   15110:	cmp	r5, #0
   15114:	bne	15120 <__assert_fail@plt+0x3ce4>
   15118:	cmp	r6, #0
   1511c:	beq	15460 <__assert_fail@plt+0x4024>
   15120:	ldr	r3, [sp]
   15124:	mov	r0, #28
   15128:	ldr	r4, [r3, #16]
   1512c:	bl	1b920 <argp_parse@@Base+0x2424>
   15130:	subs	r1, r0, #0
   15134:	beq	15228 <__assert_fail@plt+0x3dec>
   15138:	ldr	r2, [sp]
   1513c:	sub	r4, sl, r4
   15140:	asr	r4, r4, #4
   15144:	str	r6, [r1]
   15148:	ldr	r3, [sp, #8]
   1514c:	strd	r4, [r1, #4]
   15150:	cmp	r3, #0
   15154:	str	r3, [r1, #12]
   15158:	ldrne	r3, [r3, #20]
   1515c:	str	r2, [r1, #16]
   15160:	ldr	r2, [fp, #12]
   15164:	ldr	r0, [sl]
   15168:	addne	r3, r3, #1
   1516c:	str	r1, [fp, #12]
   15170:	str	r3, [r1, #20]
   15174:	str	r2, [r1, #24]
   15178:	bl	14e38 <__assert_fail@plt+0x39fc>
   1517c:	ldr	r3, [fp, #12]
   15180:	mov	r4, r0
   15184:	cmp	r3, #0
   15188:	bne	15194 <__assert_fail@plt+0x3d58>
   1518c:	b	15468 <__assert_fail@plt+0x402c>
   15190:	mov	r3, r2
   15194:	ldr	r2, [r3, #24]
   15198:	cmp	r2, #0
   1519c:	bne	15190 <__assert_fail@plt+0x3d54>
   151a0:	add	r3, r3, #24
   151a4:	ldr	r2, [r4, #4]
   151a8:	ldr	r1, [r4, #12]
   151ac:	cmp	r2, #0
   151b0:	str	r1, [r3]
   151b4:	mov	r3, #0
   151b8:	str	r3, [r4, #12]
   151bc:	beq	151e4 <__assert_fail@plt+0x3da8>
   151c0:	ldr	r3, [fp, #4]
   151c4:	cmp	r3, #0
   151c8:	bne	15230 <__assert_fail@plt+0x3df4>
   151cc:	ldr	r1, [r4]
   151d0:	str	r2, [fp, #4]
   151d4:	ldr	r2, [r4, #8]
   151d8:	str	r1, [fp]
   151dc:	str	r2, [fp, #8]
   151e0:	str	r3, [r4, #4]
   151e4:	mov	r0, r4
   151e8:	bl	1a534 <argp_parse@@Base+0x1038>
   151ec:	ldr	r0, [sl, #16]!
   151f0:	cmp	r0, #0
   151f4:	bne	15108 <__assert_fail@plt+0x3ccc>
   151f8:	mov	r0, fp
   151fc:	add	sp, sp, #52	; 0x34
   15200:	ldrd	r4, [sp]
   15204:	ldrd	r6, [sp, #8]
   15208:	ldrd	r8, [sp, #16]
   1520c:	ldrd	sl, [sp, #24]
   15210:	add	sp, sp, #32
   15214:	pop	{pc}		; (ldr pc, [sp], #4)
   15218:	str	r4, [r5, #-28]	; 0xffffffe4
   1521c:	str	r3, [r5, #-24]	; 0xffffffe8
   15220:	str	r6, [r5, #-20]	; 0xffffffec
   15224:	b	14fbc <__assert_fail@plt+0x3b80>
   15228:	ldr	r0, [sl]
   1522c:	b	15178 <__assert_fail@plt+0x3d3c>
   15230:	add	r3, r2, r3
   15234:	rsb	r0, r3, r3, lsl #3
   15238:	str	r3, [sp, #12]
   1523c:	lsl	r0, r0, #2
   15240:	bl	1b920 <argp_parse@@Base+0x2424>
   15244:	mov	r5, r0
   15248:	ldr	r0, [fp, #8]
   1524c:	str	r5, [sp, #4]
   15250:	bl	112d4 <strlen@plt>
   15254:	mov	r8, r0
   15258:	ldr	r0, [r4, #8]
   1525c:	bl	112d4 <strlen@plt>
   15260:	add	r0, r8, r0
   15264:	add	r0, r0, #1
   15268:	bl	1b920 <argp_parse@@Base+0x2424>
   1526c:	cmp	r5, #0
   15270:	cmpne	r0, #0
   15274:	mov	r9, r0
   15278:	beq	154b8 <__assert_fail@plt+0x407c>
   1527c:	ldr	r3, [sp, #12]
   15280:	ldr	r2, [sp, #28]
   15284:	cmp	r3, r2
   15288:	bhi	154f4 <__assert_fail@plt+0x40b8>
   1528c:	ldm	fp, {r1, r6}
   15290:	ldr	r0, [sp, #4]
   15294:	rsb	r5, r6, r6, lsl #3
   15298:	str	r1, [sp, #16]
   1529c:	lsl	r5, r5, #2
   152a0:	mov	r2, r5
   152a4:	bl	11298 <mempcpy@plt>
   152a8:	ldm	r4, {r1, r3}
   152ac:	rsb	r2, r3, r3, lsl #3
   152b0:	str	r3, [sp, #20]
   152b4:	lsl	r2, r2, #2
   152b8:	bl	11184 <memcpy@plt>
   152bc:	ldr	r7, [fp, #8]
   152c0:	mov	r2, r8
   152c4:	mov	r0, r9
   152c8:	mov	r1, r7
   152cc:	bl	11184 <memcpy@plt>
   152d0:	cmp	r6, #0
   152d4:	ldr	r3, [sp, #20]
   152d8:	beq	15470 <__assert_fail@plt+0x4034>
   152dc:	ldr	r1, [sp, #4]
   152e0:	subs	r6, r6, #1
   152e4:	add	r1, r1, #28
   152e8:	ldr	r2, [r1, #-20]	; 0xffffffec
   152ec:	sub	r2, r2, r7
   152f0:	add	r2, r9, r2
   152f4:	str	r2, [r1, #-20]	; 0xffffffec
   152f8:	bne	152e0 <__assert_fail@plt+0x3ea4>
   152fc:	ldr	r2, [sp, #4]
   15300:	add	r5, r2, r5
   15304:	add	r2, r9, r8
   15308:	cmp	r3, #0
   1530c:	ldr	r1, [r4, #8]
   15310:	str	r2, [sp, #20]
   15314:	beq	153b4 <__assert_fail@plt+0x3f78>
   15318:	sub	r0, r2, #1
   1531c:	add	r5, r5, #28
   15320:	mov	r7, r2
   15324:	str	r0, [sp, #24]
   15328:	strd	sl, [sp, #36]	; 0x24
   1532c:	mov	sl, r1
   15330:	mov	fp, r3
   15334:	str	r4, [sp, #32]
   15338:	str	r7, [r5, #-20]	; 0xffffffec
   1533c:	ldr	r6, [r5, #-24]	; 0xffffffe8
   15340:	ldr	r8, [r5, #-28]	; 0xffffffe4
   15344:	cmp	r6, #0
   15348:	beq	1539c <__assert_fail@plt+0x3f60>
   1534c:	ldr	r3, [r8, #12]
   15350:	tst	r3, #8
   15354:	bne	15390 <__assert_fail@plt+0x3f54>
   15358:	ldr	r4, [r8, #4]
   1535c:	sub	r3, r4, #1
   15360:	cmp	r3, #254	; 0xfe
   15364:	bhi	15390 <__assert_fail@plt+0x3f54>
   15368:	bl	112a4 <__ctype_b_loc@plt>
   1536c:	ldr	r1, [r0]
   15370:	lsl	r2, r4, #1
   15374:	ldrb	r3, [sl]
   15378:	ldrh	r2, [r1, r2]
   1537c:	sub	r4, r3, r4
   15380:	clz	r4, r4
   15384:	lsr	r4, r4, #5
   15388:	ands	r2, r4, r2, lsr #14
   1538c:	bne	1541c <__assert_fail@plt+0x3fe0>
   15390:	subs	r6, r6, #1
   15394:	add	r8, r8, #24
   15398:	bne	1534c <__assert_fail@plt+0x3f10>
   1539c:	subs	fp, fp, #1
   153a0:	add	r5, r5, #28
   153a4:	bne	15338 <__assert_fail@plt+0x3efc>
   153a8:	add	r4, sp, #32
   153ac:	mov	r2, r7
   153b0:	ldm	r4, {r4, sl, fp}
   153b4:	mov	r3, #0
   153b8:	strb	r3, [r2]
   153bc:	ldr	r0, [sp, #16]
   153c0:	bl	1a534 <argp_parse@@Base+0x1038>
   153c4:	ldr	r0, [fp, #8]
   153c8:	bl	1a534 <argp_parse@@Base+0x1038>
   153cc:	ldr	r3, [sp, #4]
   153d0:	ldr	r0, [r4, #12]
   153d4:	str	r3, [fp]
   153d8:	ldr	r3, [sp, #12]
   153dc:	cmp	r0, #0
   153e0:	str	r3, [fp, #4]
   153e4:	str	r9, [fp, #8]
   153e8:	beq	153fc <__assert_fail@plt+0x3fc0>
   153ec:	ldr	r5, [r0, #24]
   153f0:	bl	1a534 <argp_parse@@Base+0x1038>
   153f4:	subs	r0, r5, #0
   153f8:	bne	153ec <__assert_fail@plt+0x3fb0>
   153fc:	ldr	r3, [r4, #4]
   15400:	cmp	r3, #0
   15404:	beq	151e4 <__assert_fail@plt+0x3da8>
   15408:	ldr	r0, [r4]
   1540c:	bl	1a534 <argp_parse@@Base+0x1038>
   15410:	ldr	r0, [r4, #8]
   15414:	bl	1a534 <argp_parse@@Base+0x1038>
   15418:	b	151e4 <__assert_fail@plt+0x3da8>
   1541c:	ldr	r2, [sp, #20]
   15420:	cmp	r9, r2
   15424:	bcs	15454 <__assert_fail@plt+0x4018>
   15428:	ldrb	r2, [r9]
   1542c:	cmp	r2, r3
   15430:	beq	15458 <__assert_fail@plt+0x401c>
   15434:	mov	r2, r9
   15438:	ldr	r0, [sp, #24]
   1543c:	b	1544c <__assert_fail@plt+0x4010>
   15440:	ldrb	r1, [r2, #1]!
   15444:	cmp	r1, r3
   15448:	beq	15458 <__assert_fail@plt+0x401c>
   1544c:	cmp	r0, r2
   15450:	bne	15440 <__assert_fail@plt+0x4004>
   15454:	strb	r3, [r7], #1
   15458:	add	sl, sl, #1
   1545c:	b	15390 <__assert_fail@plt+0x3f54>
   15460:	ldr	r1, [sp, #8]
   15464:	b	15178 <__assert_fail@plt+0x3d3c>
   15468:	ldr	r3, [sp, #44]	; 0x2c
   1546c:	b	151a4 <__assert_fail@plt+0x3d68>
   15470:	ldr	r5, [sp, #4]
   15474:	b	15304 <__assert_fail@plt+0x3ec8>
   15478:	movw	r3, #58660	; 0xe524
   1547c:	movt	r3, #1
   15480:	movw	r1, #58828	; 0xe5cc
   15484:	movt	r1, #1
   15488:	movw	r0, #58860	; 0xe5ec
   1548c:	movt	r0, #1
   15490:	movw	r2, #474	; 0x1da
   15494:	bl	1143c <__assert_fail@plt>
   15498:	movw	r3, #58660	; 0xe524
   1549c:	movt	r3, #1
   154a0:	movw	r1, #58828	; 0xe5cc
   154a4:	movt	r1, #1
   154a8:	movw	r0, #58896	; 0xe610
   154ac:	movt	r0, #1
   154b0:	mov	r2, #476	; 0x1dc
   154b4:	bl	1143c <__assert_fail@plt>
   154b8:	movw	r1, #58828	; 0xe5cc
   154bc:	movt	r1, #1
   154c0:	ldr	r3, [pc, #104]	; 15530 <__assert_fail@plt+0x40f4>
   154c4:	movw	r0, #58956	; 0xe64c
   154c8:	movt	r0, #1
   154cc:	movw	r2, #970	; 0x3ca
   154d0:	bl	1143c <__assert_fail@plt>
   154d4:	movw	r3, #58660	; 0xe524
   154d8:	movt	r3, #1
   154dc:	movw	r1, #58828	; 0xe5cc
   154e0:	movt	r1, #1
   154e4:	movw	r0, #58840	; 0xe5d8
   154e8:	movt	r0, #1
   154ec:	movw	r2, #450	; 0x1c2
   154f0:	bl	1143c <__assert_fail@plt>
   154f4:	movw	r1, #58828	; 0xe5cc
   154f8:	movt	r1, #1
   154fc:	ldr	r3, [pc, #44]	; 15530 <__assert_fail@plt+0x40f4>
   15500:	movw	r0, #58984	; 0xe668
   15504:	movt	r0, #1
   15508:	mov	r2, #972	; 0x3cc
   1550c:	bl	1143c <__assert_fail@plt>
   15510:	movw	r3, #58660	; 0xe524
   15514:	movt	r3, #1
   15518:	movw	r1, #58828	; 0xe5cc
   1551c:	movt	r1, #1
   15520:	movw	r0, #58844	; 0xe5dc
   15524:	movt	r0, #1
   15528:	mov	r2, #460	; 0x1cc
   1552c:	bl	1143c <__assert_fail@plt>
   15530:	andeq	lr, r1, r0, lsr r5
   15534:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15538:	mov	r4, r3
   1553c:	ldr	r3, [r0, #20]
   15540:	cmp	r3, #0
   15544:	ldr	r3, [r0, #16]
   15548:	strd	r6, [sp, #8]
   1554c:	strd	r8, [sp, #16]
   15550:	mov	r8, r2
   15554:	ldr	r2, [r2]
   15558:	strd	sl, [sp, #24]
   1555c:	ldr	r7, [r0, #8]
   15560:	str	lr, [sp, #32]
   15564:	sub	sp, sp, #28
   15568:	ldr	r5, [sp, #64]	; 0x40
   1556c:	str	r3, [sp, #8]
   15570:	moveq	r9, r7
   15574:	str	r7, [sp, #12]
   15578:	str	r2, [sp, #16]
   1557c:	str	r1, [sp, #20]
   15580:	beq	155a8 <__assert_fail@plt+0x416c>
   15584:	mov	r6, r0
   15588:	bl	1a3b4 <argp_parse@@Base+0xeb8>
   1558c:	mov	r2, r0
   15590:	mov	r1, r7
   15594:	ldr	r3, [r6, #20]
   15598:	mov	r0, #6
   1559c:	movt	r0, #512	; 0x200
   155a0:	blx	r3
   155a4:	mov	r9, r0
   155a8:	cmp	r9, #0
   155ac:	beq	1579c <__assert_fail@plt+0x4360>
   155b0:	mov	r1, #10
   155b4:	mov	r0, r9
   155b8:	bl	11154 <strchrnul@plt>
   155bc:	ldrb	r3, [r0]
   155c0:	mov	r6, r0
   155c4:	cmp	r3, #0
   155c8:	moveq	fp, r3
   155cc:	moveq	r7, r9
   155d0:	beq	1561c <__assert_fail@plt+0x41e0>
   155d4:	ldr	r3, [sp, #16]
   155d8:	ldrb	sl, [r3]
   155dc:	cmp	sl, #0
   155e0:	beq	15820 <__assert_fail@plt+0x43e4>
   155e4:	mov	fp, #0
   155e8:	add	r7, r0, #1
   155ec:	add	fp, fp, #1
   155f0:	mov	r0, r7
   155f4:	mov	r1, #10
   155f8:	bl	11154 <strchrnul@plt>
   155fc:	cmp	fp, sl
   15600:	bne	155e8 <__assert_fail@plt+0x41ac>
   15604:	mov	r6, r0
   15608:	ldr	r3, [r8]
   1560c:	mov	r2, #1
   15610:	mov	fp, r2
   15614:	add	r3, r3, r2
   15618:	str	r3, [r8]
   1561c:	ldr	ip, [r5, #16]
   15620:	add	sl, r6, #1
   15624:	sub	sl, sl, r7
   15628:	ldr	r1, [r5, #24]
   1562c:	ldr	r3, [r5, #28]
   15630:	sub	r1, r3, r1
   15634:	mov	r0, r3
   15638:	cmp	r1, ip
   1563c:	bhi	15788 <__assert_fail@plt+0x434c>
   15640:	ldr	ip, [r5, #8]
   15644:	ldr	r1, [r5, #20]
   15648:	cmp	r1, #0
   1564c:	addge	sl, sl, r1
   15650:	ldr	r1, [r5, #32]
   15654:	cmp	sl, ip
   15658:	bcc	15678 <__assert_fail@plt+0x423c>
   1565c:	cmp	r3, r1
   15660:	bcs	157d8 <__assert_fail@plt+0x439c>
   15664:	add	r0, r3, #1
   15668:	mov	r1, #10
   1566c:	str	r0, [r5, #28]
   15670:	strb	r1, [r3]
   15674:	b	15690 <__assert_fail@plt+0x4254>
   15678:	cmp	r3, r1
   1567c:	bcs	15804 <__assert_fail@plt+0x43c8>
   15680:	add	r1, r0, #1
   15684:	mov	r3, #32
   15688:	str	r1, [r5, #28]
   1568c:	strb	r3, [r0]
   15690:	ldrd	r0, [r5, #28]
   15694:	sub	sl, r6, r7
   15698:	add	r3, r0, sl
   1569c:	cmp	r1, r3
   156a0:	bcs	156bc <__assert_fail@plt+0x4280>
   156a4:	mov	r1, sl
   156a8:	mov	r0, r5
   156ac:	bl	1c0dc <argp_parse@@Base+0x2be0>
   156b0:	cmp	r0, #0
   156b4:	beq	156d4 <__assert_fail@plt+0x4298>
   156b8:	ldr	r0, [r5, #28]
   156bc:	mov	r2, sl
   156c0:	mov	r1, r7
   156c4:	bl	11184 <memcpy@plt>
   156c8:	ldr	r3, [r5, #28]
   156cc:	add	sl, r3, sl
   156d0:	str	sl, [r5, #28]
   156d4:	ldr	r3, [sp, #12]
   156d8:	cmp	r3, r9
   156dc:	beq	156e8 <__assert_fail@plt+0x42ac>
   156e0:	mov	r0, r9
   156e4:	bl	1a534 <argp_parse@@Base+0x1038>
   156e8:	ldr	r3, [sp, #8]
   156ec:	cmp	r3, #0
   156f0:	beq	15738 <__assert_fail@plt+0x42fc>
   156f4:	ldr	r2, [r3]
   156f8:	cmp	r2, #0
   156fc:	beq	15738 <__assert_fail@plt+0x42fc>
   15700:	mov	r3, r4
   15704:	ldr	r7, [sp, #8]
   15708:	ldr	r4, [sp, #20]
   1570c:	mov	r0, r2
   15710:	mov	r1, r4
   15714:	str	r5, [sp]
   15718:	mov	r2, r8
   1571c:	bl	15534 <__assert_fail@plt+0x40f8>
   15720:	ldr	r2, [r7, #16]!
   15724:	clz	r3, r0
   15728:	lsr	r3, r3, #5
   1572c:	cmp	r2, #0
   15730:	bne	1570c <__assert_fail@plt+0x42d0>
   15734:	mov	r4, r3
   15738:	cmp	r4, #0
   1573c:	mov	r3, fp
   15740:	moveq	r3, #0
   15744:	cmp	r3, #0
   15748:	beq	157bc <__assert_fail@plt+0x4380>
   1574c:	ldrb	r3, [r6]
   15750:	ldr	r2, [sp, #16]
   15754:	cmp	r3, #0
   15758:	ldrb	r0, [r2]
   1575c:	beq	157c8 <__assert_fail@plt+0x438c>
   15760:	add	r4, r0, #1
   15764:	mov	r0, #1
   15768:	strb	r4, [r2]
   1576c:	add	sp, sp, #28
   15770:	ldrd	r4, [sp]
   15774:	ldrd	r6, [sp, #8]
   15778:	ldrd	r8, [sp, #16]
   1577c:	ldrd	sl, [sp, #24]
   15780:	add	sp, sp, #32
   15784:	pop	{pc}		; (ldr pc, [sp], #4)
   15788:	mov	r0, r5
   1578c:	bl	1ba4c <argp_parse@@Base+0x2550>
   15790:	ldr	r3, [r5, #28]
   15794:	mov	r0, r3
   15798:	b	15640 <__assert_fail@plt+0x4204>
   1579c:	ldr	r3, [sp, #8]
   157a0:	cmp	r3, #0
   157a4:	beq	157bc <__assert_fail@plt+0x4380>
   157a8:	ldr	r2, [r3]
   157ac:	cmp	r2, #0
   157b0:	movne	r6, r9
   157b4:	movne	fp, r6
   157b8:	bne	15700 <__assert_fail@plt+0x42c4>
   157bc:	clz	r0, r4
   157c0:	lsr	r0, r0, #5
   157c4:	b	1576c <__assert_fail@plt+0x4330>
   157c8:	cmp	r0, #0
   157cc:	movne	r0, r3
   157d0:	strbne	r3, [r2]
   157d4:	b	1576c <__assert_fail@plt+0x4330>
   157d8:	mov	r1, #1
   157dc:	mov	r0, r5
   157e0:	bl	1c0dc <argp_parse@@Base+0x2be0>
   157e4:	cmp	r0, #0
   157e8:	beq	15690 <__assert_fail@plt+0x4254>
   157ec:	ldr	r3, [r5, #28]
   157f0:	mov	r1, #10
   157f4:	add	r0, r3, #1
   157f8:	str	r0, [r5, #28]
   157fc:	strb	r1, [r3]
   15800:	b	15690 <__assert_fail@plt+0x4254>
   15804:	mov	r1, #1
   15808:	mov	r0, r5
   1580c:	bl	1c0dc <argp_parse@@Base+0x2be0>
   15810:	cmp	r0, #0
   15814:	beq	15690 <__assert_fail@plt+0x4254>
   15818:	ldr	r0, [r5, #28]
   1581c:	b	15680 <__assert_fail@plt+0x4244>
   15820:	mov	r7, r9
   15824:	b	15608 <__assert_fail@plt+0x41cc>
   15828:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1582c:	subs	r4, r1, #0
   15830:	strd	r6, [sp, #8]
   15834:	mov	r7, r0
   15838:	mov	r6, r2
   1583c:	strd	r8, [sp, #16]
   15840:	strd	sl, [sp, #24]
   15844:	str	lr, [sp, #32]
   15848:	sub	sp, sp, #12
   1584c:	beq	15888 <__assert_fail@plt+0x444c>
   15850:	ldr	r3, [r4, #20]
   15854:	cmp	r3, #0
   15858:	beq	15888 <__assert_fail@plt+0x444c>
   1585c:	mov	r0, r4
   15860:	ldr	r1, [r2, #16]
   15864:	bl	1a3b4 <argp_parse@@Base+0xeb8>
   15868:	mov	r2, r0
   1586c:	mov	r1, r7
   15870:	ldr	r3, [r4, #20]
   15874:	mov	r0, #3
   15878:	movt	r0, #512	; 0x200
   1587c:	blx	r3
   15880:	mov	r9, r0
   15884:	b	1588c <__assert_fail@plt+0x4450>
   15888:	mov	r9, r7
   1588c:	cmp	r9, #0
   15890:	beq	158ac <__assert_fail@plt+0x4470>
   15894:	ldrb	r2, [r9]
   15898:	ldr	r3, [r6, #8]
   1589c:	cmp	r2, #0
   158a0:	bne	158d8 <__assert_fail@plt+0x449c>
   158a4:	mov	r2, #1
   158a8:	str	r2, [r3, #4]
   158ac:	cmp	r7, r9
   158b0:	beq	15a24 <__assert_fail@plt+0x45e8>
   158b4:	mov	r0, r9
   158b8:	add	sp, sp, #12
   158bc:	ldrd	r4, [sp]
   158c0:	ldrd	r6, [sp, #8]
   158c4:	ldrd	r8, [sp, #16]
   158c8:	ldrd	sl, [sp, #24]
   158cc:	ldr	lr, [sp, #32]
   158d0:	add	sp, sp, #36	; 0x24
   158d4:	b	1a534 <argp_parse@@Base+0x1038>
   158d8:	ldr	r3, [r3]
   158dc:	ldr	r4, [r6, #4]
   158e0:	cmp	r3, #0
   158e4:	ldr	r3, [r4, #28]
   158e8:	beq	15928 <__assert_fail@plt+0x44ec>
   158ec:	ldr	r2, [r4, #32]
   158f0:	cmp	r2, r3
   158f4:	bhi	15910 <__assert_fail@plt+0x44d4>
   158f8:	mov	r1, #1
   158fc:	mov	r0, r4
   15900:	bl	1c0dc <argp_parse@@Base+0x2be0>
   15904:	cmp	r0, #0
   15908:	ldrne	r3, [r4, #28]
   1590c:	beq	15920 <__assert_fail@plt+0x44e4>
   15910:	add	r1, r3, #1
   15914:	mov	r2, #10
   15918:	str	r1, [r4, #28]
   1591c:	strb	r2, [r3]
   15920:	ldr	r4, [r6, #4]
   15924:	ldr	r3, [r4, #28]
   15928:	movw	r8, #1504	; 0x5e0
   1592c:	movt	r8, #3
   15930:	ldr	r2, [r4, #16]
   15934:	ldr	r1, [r4, #24]
   15938:	ldr	r5, [r8, #24]
   1593c:	sub	r3, r3, r1
   15940:	cmp	r3, r2
   15944:	bhi	15b08 <__assert_fail@plt+0x46cc>
   15948:	ldr	r3, [r4, #20]
   1594c:	cmp	r3, #0
   15950:	subge	r5, r5, r3
   15954:	cmp	r5, #0
   15958:	sub	r5, r5, #1
   1595c:	ble	159a4 <__assert_fail@plt+0x4568>
   15960:	mov	sl, #32
   15964:	ldr	r3, [r4, #28]
   15968:	mov	r1, #1
   1596c:	mov	r0, r4
   15970:	sub	r5, r5, #1
   15974:	ldr	r2, [r4, #32]
   15978:	cmp	r3, r2
   1597c:	bcc	15990 <__assert_fail@plt+0x4554>
   15980:	bl	1c0dc <argp_parse@@Base+0x2be0>
   15984:	cmp	r0, #0
   15988:	beq	1599c <__assert_fail@plt+0x4560>
   1598c:	ldr	r3, [r4, #28]
   15990:	add	r2, r3, #1
   15994:	str	r2, [r4, #28]
   15998:	strb	sl, [r3]
   1599c:	cmn	r5, #1
   159a0:	bne	15964 <__assert_fail@plt+0x4528>
   159a4:	ldr	r4, [r6, #4]
   159a8:	ldr	sl, [r8, #24]
   159ac:	ldr	r1, [r4, #16]
   159b0:	ldr	r3, [r4, #24]
   159b4:	ldr	r5, [r4, #28]
   159b8:	sub	r3, r5, r3
   159bc:	cmp	r3, r1
   159c0:	movls	fp, r4
   159c4:	strls	sl, [r4, #4]
   159c8:	bhi	15ac0 <__assert_fail@plt+0x4684>
   159cc:	mov	r0, r9
   159d0:	str	sl, [fp, #12]
   159d4:	bl	112d4 <strlen@plt>
   159d8:	subs	r8, r0, #0
   159dc:	bne	15a70 <__assert_fail@plt+0x4634>
   159e0:	ldr	r2, [r4, #16]
   159e4:	ldr	r3, [r4, #24]
   159e8:	sub	r3, r5, r3
   159ec:	cmp	r3, r2
   159f0:	movls	r8, r4
   159f4:	bhi	15a5c <__assert_fail@plt+0x4620>
   159f8:	ldr	r3, [r8, #32]
   159fc:	mov	r2, #0
   15a00:	str	r2, [r4, #4]
   15a04:	cmp	r3, r5
   15a08:	bls	15a40 <__assert_fail@plt+0x4604>
   15a0c:	add	r2, r5, #1
   15a10:	mov	r3, #10
   15a14:	str	r2, [r8, #28]
   15a18:	strb	r3, [r5]
   15a1c:	ldr	r3, [r6, #8]
   15a20:	b	158a4 <__assert_fail@plt+0x4468>
   15a24:	add	sp, sp, #12
   15a28:	ldrd	r4, [sp]
   15a2c:	ldrd	r6, [sp, #8]
   15a30:	ldrd	r8, [sp, #16]
   15a34:	ldrd	sl, [sp, #24]
   15a38:	add	sp, sp, #32
   15a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   15a40:	mov	r1, #1
   15a44:	mov	r0, r8
   15a48:	bl	1c0dc <argp_parse@@Base+0x2be0>
   15a4c:	cmp	r0, #0
   15a50:	ldrne	r5, [r8, #28]
   15a54:	bne	15a0c <__assert_fail@plt+0x45d0>
   15a58:	b	15a1c <__assert_fail@plt+0x45e0>
   15a5c:	mov	r0, r4
   15a60:	bl	1ba4c <argp_parse@@Base+0x2550>
   15a64:	ldr	r8, [r6, #4]
   15a68:	ldr	r5, [r8, #28]
   15a6c:	b	159f8 <__assert_fail@plt+0x45bc>
   15a70:	ldr	r2, [r4, #32]
   15a74:	add	r3, r5, r8
   15a78:	cmp	r2, r3
   15a7c:	bcs	15a98 <__assert_fail@plt+0x465c>
   15a80:	mov	r1, r8
   15a84:	mov	r0, r4
   15a88:	bl	1c0dc <argp_parse@@Base+0x2be0>
   15a8c:	cmp	r0, #0
   15a90:	beq	15ab4 <__assert_fail@plt+0x4678>
   15a94:	ldr	r5, [r4, #28]
   15a98:	mov	r2, r8
   15a9c:	mov	r0, r5
   15aa0:	mov	r1, r9
   15aa4:	bl	11184 <memcpy@plt>
   15aa8:	ldr	r3, [r4, #28]
   15aac:	add	r8, r3, r8
   15ab0:	str	r8, [r4, #28]
   15ab4:	ldr	r4, [r6, #4]
   15ab8:	ldr	r5, [r4, #28]
   15abc:	b	159e0 <__assert_fail@plt+0x45a4>
   15ac0:	mov	r0, r4
   15ac4:	str	sl, [sp, #4]
   15ac8:	bl	1ba4c <argp_parse@@Base+0x2550>
   15acc:	ldr	fp, [r6, #4]
   15ad0:	ldr	r2, [sp, #4]
   15ad4:	ldr	sl, [r8, #24]
   15ad8:	ldr	r1, [fp, #16]
   15adc:	ldr	r3, [fp, #24]
   15ae0:	ldr	r5, [fp, #28]
   15ae4:	str	r2, [r4, #4]
   15ae8:	sub	r3, r5, r3
   15aec:	cmp	r3, r1
   15af0:	bls	15b14 <__assert_fail@plt+0x46d8>
   15af4:	mov	r0, fp
   15af8:	bl	1ba4c <argp_parse@@Base+0x2550>
   15afc:	ldr	r4, [r6, #4]
   15b00:	ldr	r5, [r4, #28]
   15b04:	b	159cc <__assert_fail@plt+0x4590>
   15b08:	mov	r0, r4
   15b0c:	bl	1ba4c <argp_parse@@Base+0x2550>
   15b10:	b	15948 <__assert_fail@plt+0x450c>
   15b14:	mov	r4, fp
   15b18:	b	159cc <__assert_fail@plt+0x4590>
   15b1c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15b20:	strd	r6, [sp, #8]
   15b24:	strd	r8, [sp, #16]
   15b28:	strd	sl, [sp, #24]
   15b2c:	add	fp, sp, #32
   15b30:	str	lr, [sp, #32]
   15b34:	sub	sp, sp, #36	; 0x24
   15b38:	ldr	r3, [r0, #4]
   15b3c:	cmp	r3, #0
   15b40:	str	r3, [fp, #-40]	; 0xffffffd8
   15b44:	beq	15d60 <__assert_fail@plt+0x4924>
   15b48:	mov	r4, r0
   15b4c:	ldr	r0, [r0, #8]
   15b50:	str	r4, [fp, #-60]	; 0xffffffc4
   15b54:	str	r1, [fp, #-48]	; 0xffffffd0
   15b58:	str	r3, [fp, #-44]	; 0xffffffd4
   15b5c:	bl	112d4 <strlen@plt>
   15b60:	add	r3, r0, #8
   15b64:	ldr	r2, [r4]
   15b68:	bic	r3, r3, #7
   15b6c:	sub	sp, sp, r3
   15b70:	mov	r3, sp
   15b74:	str	r3, [fp, #-56]	; 0xffffffc8
   15b78:	str	r3, [fp, #-52]	; 0xffffffcc
   15b7c:	add	r3, r2, #28
   15b80:	mov	r9, r3
   15b84:	str	r3, [fp, #-64]	; 0xffffffc0
   15b88:	ldr	r8, [r9, #-28]	; 0xffffffe4
   15b8c:	ldr	r5, [r9, #-24]	; 0xffffffe8
   15b90:	ldr	sl, [r9, #-20]	; 0xffffffec
   15b94:	cmp	r5, #0
   15b98:	beq	15bec <__assert_fail@plt+0x47b0>
   15b9c:	mov	r4, r8
   15ba0:	ldr	r6, [r4, #12]
   15ba4:	tst	r6, #8
   15ba8:	bne	15be0 <__assert_fail@plt+0x47a4>
   15bac:	ldr	r7, [r4, #4]
   15bb0:	sub	r3, r7, #1
   15bb4:	cmp	r3, #254	; 0xfe
   15bb8:	bhi	15be0 <__assert_fail@plt+0x47a4>
   15bbc:	bl	112a4 <__ctype_b_loc@plt>
   15bc0:	ldr	r2, [r0]
   15bc4:	lsl	r3, r7, #1
   15bc8:	ldrh	r3, [r2, r3]
   15bcc:	tst	r3, #16384	; 0x4000
   15bd0:	beq	15be0 <__assert_fail@plt+0x47a4>
   15bd4:	ldrb	r3, [sl]
   15bd8:	cmp	r7, r3
   15bdc:	beq	15d7c <__assert_fail@plt+0x4940>
   15be0:	subs	r5, r5, #1
   15be4:	add	r4, r4, #24
   15be8:	bne	15ba0 <__assert_fail@plt+0x4764>
   15bec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15bf0:	add	r9, r9, #28
   15bf4:	subs	r3, r3, #1
   15bf8:	str	r3, [fp, #-44]	; 0xffffffd4
   15bfc:	bne	15b88 <__assert_fail@plt+0x474c>
   15c00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15c04:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15c08:	cmp	r3, r2
   15c0c:	bcc	15f4c <__assert_fail@plt+0x4b10>
   15c10:	ldr	r6, [fp, #-64]	; 0xffffffc0
   15c14:	movw	r3, #59056	; 0xe6b0
   15c18:	movt	r3, #1
   15c1c:	str	r3, [fp, #-44]	; 0xffffffd4
   15c20:	movw	r3, #59044	; 0xe6a4
   15c24:	movt	r3, #1
   15c28:	str	r3, [fp, #-52]	; 0xffffffcc
   15c2c:	ldr	r8, [r6, #-28]	; 0xffffffe4
   15c30:	ldr	r5, [r6, #-24]	; 0xffffffe8
   15c34:	ldr	r7, [r6, #-20]	; 0xffffffec
   15c38:	cmp	r5, #0
   15c3c:	movne	r4, r8
   15c40:	beq	15c90 <__assert_fail@plt+0x4854>
   15c44:	ldr	r9, [r4, #12]
   15c48:	tst	r9, #8
   15c4c:	bne	15c84 <__assert_fail@plt+0x4848>
   15c50:	ldr	sl, [r4, #4]
   15c54:	sub	r3, sl, #1
   15c58:	cmp	r3, #254	; 0xfe
   15c5c:	bhi	15c84 <__assert_fail@plt+0x4848>
   15c60:	bl	112a4 <__ctype_b_loc@plt>
   15c64:	ldr	r2, [r0]
   15c68:	lsl	r3, sl, #1
   15c6c:	ldrh	r3, [r2, r3]
   15c70:	tst	r3, #16384	; 0x4000
   15c74:	beq	15c84 <__assert_fail@plt+0x4848>
   15c78:	ldrb	r3, [r7]
   15c7c:	cmp	sl, r3
   15c80:	beq	15dc4 <__assert_fail@plt+0x4988>
   15c84:	subs	r5, r5, #1
   15c88:	add	r4, r4, #24
   15c8c:	bne	15c44 <__assert_fail@plt+0x4808>
   15c90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15c94:	add	r6, r6, #28
   15c98:	subs	r3, r3, #1
   15c9c:	str	r3, [fp, #-40]	; 0xffffffd8
   15ca0:	bne	15c2c <__assert_fail@plt+0x47f0>
   15ca4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15ca8:	ldm	r3, {r7, r8}
   15cac:	cmp	r8, #0
   15cb0:	beq	15d60 <__assert_fail@plt+0x4924>
   15cb4:	movw	sl, #59084	; 0xe6cc
   15cb8:	movt	sl, #1
   15cbc:	movw	r9, #59068	; 0xe6bc
   15cc0:	movt	r9, #1
   15cc4:	str	sl, [fp, #-40]	; 0xffffffd8
   15cc8:	movw	r3, #59096	; 0xe6d8
   15ccc:	movt	r3, #1
   15cd0:	ldr	sl, [fp, #-48]	; 0xffffffd0
   15cd4:	add	r7, r7, #28
   15cd8:	str	r3, [fp, #-44]	; 0xffffffd4
   15cdc:	ldr	r6, [r7, #-28]	; 0xffffffe4
   15ce0:	ldr	r5, [r7, #-24]	; 0xffffffe8
   15ce4:	cmp	r5, #0
   15ce8:	movne	r4, r6
   15cec:	beq	15d54 <__assert_fail@plt+0x4918>
   15cf0:	ldr	r2, [r4]
   15cf4:	cmp	r2, #0
   15cf8:	beq	15d48 <__assert_fail@plt+0x490c>
   15cfc:	ldr	r1, [r4, #12]
   15d00:	tst	r1, #4
   15d04:	moveq	r6, r4
   15d08:	tst	r1, #2
   15d0c:	bne	15d48 <__assert_fail@plt+0x490c>
   15d10:	ldr	r3, [r4, #8]
   15d14:	ldr	r0, [r6, #12]
   15d18:	cmp	r3, #0
   15d1c:	orr	r1, r1, r0
   15d20:	and	r0, r1, #16
   15d24:	beq	15da0 <__assert_fail@plt+0x4964>
   15d28:	cmp	r0, #0
   15d2c:	bne	15d48 <__assert_fail@plt+0x490c>
   15d30:	tst	r1, #1
   15d34:	movne	r1, r9
   15d38:	movne	r0, sl
   15d3c:	ldreq	r1, [fp, #-40]	; 0xffffffd8
   15d40:	moveq	r0, sl
   15d44:	bl	1c0fc <argp_parse@@Base+0x2c00>
   15d48:	subs	r5, r5, #1
   15d4c:	add	r4, r4, #24
   15d50:	bne	15cf0 <__assert_fail@plt+0x48b4>
   15d54:	subs	r8, r8, #1
   15d58:	add	r7, r7, #28
   15d5c:	bne	15cdc <__assert_fail@plt+0x48a0>
   15d60:	sub	sp, fp, #32
   15d64:	ldrd	r4, [sp]
   15d68:	ldrd	r6, [sp, #8]
   15d6c:	ldrd	r8, [sp, #16]
   15d70:	ldrd	sl, [sp, #24]
   15d74:	add	sp, sp, #32
   15d78:	pop	{pc}		; (ldr pc, [sp], #4)
   15d7c:	tst	r6, #4
   15d80:	moveq	r8, r4
   15d84:	tst	r6, #2
   15d88:	bne	15d98 <__assert_fail@plt+0x495c>
   15d8c:	ldr	r3, [r4, #8]
   15d90:	cmp	r3, #0
   15d94:	beq	15e10 <__assert_fail@plt+0x49d4>
   15d98:	add	sl, sl, #1
   15d9c:	b	15be0 <__assert_fail@plt+0x47a4>
   15da0:	cmp	r0, #0
   15da4:	bne	15d48 <__assert_fail@plt+0x490c>
   15da8:	ldr	r3, [r6, #8]
   15dac:	cmp	r3, #0
   15db0:	bne	15d30 <__assert_fail@plt+0x48f4>
   15db4:	mov	r0, sl
   15db8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15dbc:	bl	1c0fc <argp_parse@@Base+0x2c00>
   15dc0:	b	15d48 <__assert_fail@plt+0x490c>
   15dc4:	tst	r9, #4
   15dc8:	moveq	r8, r4
   15dcc:	tst	r9, #2
   15dd0:	bne	15e08 <__assert_fail@plt+0x49cc>
   15dd4:	ldr	r3, [r4, #8]
   15dd8:	cmp	r3, #0
   15ddc:	beq	15e3c <__assert_fail@plt+0x4a00>
   15de0:	ldr	r2, [r8, #12]
   15de4:	orr	r9, r9, r2
   15de8:	tst	r9, #16
   15dec:	bne	15e08 <__assert_fail@plt+0x49cc>
   15df0:	tst	r9, #1
   15df4:	beq	15e4c <__assert_fail@plt+0x4a10>
   15df8:	mov	r2, sl
   15dfc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15e00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e04:	bl	1c0fc <argp_parse@@Base+0x2c00>
   15e08:	add	r7, r7, #1
   15e0c:	b	15c84 <__assert_fail@plt+0x4848>
   15e10:	ldr	r3, [r8, #8]
   15e14:	cmp	r3, #0
   15e18:	bne	15d98 <__assert_fail@plt+0x495c>
   15e1c:	ldr	r3, [r8, #12]
   15e20:	orr	r6, r6, r3
   15e24:	tst	r6, #16
   15e28:	bne	15d98 <__assert_fail@plt+0x495c>
   15e2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15e30:	strb	r7, [r3], #1
   15e34:	str	r3, [fp, #-52]	; 0xffffffcc
   15e38:	b	15d98 <__assert_fail@plt+0x495c>
   15e3c:	ldr	r3, [r8, #8]
   15e40:	cmp	r3, #0
   15e44:	beq	15e08 <__assert_fail@plt+0x49cc>
   15e48:	b	15de0 <__assert_fail@plt+0x49a4>
   15e4c:	mov	r0, r3
   15e50:	str	r3, [fp, #-56]	; 0xffffffc8
   15e54:	bl	112d4 <strlen@plt>
   15e58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15e5c:	mov	r9, r0
   15e60:	ldr	r0, [r3, #16]
   15e64:	ldr	r2, [r3, #24]
   15e68:	ldr	r1, [r3, #28]
   15e6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15e70:	sub	r2, r1, r2
   15e74:	cmp	r2, r0
   15e78:	bhi	15f34 <__assert_fail@plt+0x4af8>
   15e7c:	ldr	lr, [fp, #-48]	; 0xffffffd0
   15e80:	ldr	r0, [lr, #8]
   15e84:	ldr	r2, [lr, #20]
   15e88:	ldr	ip, [lr, #32]
   15e8c:	bic	r2, r2, r2, asr #31
   15e90:	add	r2, r2, #6
   15e94:	add	r2, r2, r9
   15e98:	cmp	r2, r0
   15e9c:	bcs	15ef0 <__assert_fail@plt+0x4ab4>
   15ea0:	cmp	r1, ip
   15ea4:	bcc	15ecc <__assert_fail@plt+0x4a90>
   15ea8:	mov	r1, #1
   15eac:	mov	r0, lr
   15eb0:	str	r3, [fp, #-56]	; 0xffffffc8
   15eb4:	mov	r9, lr
   15eb8:	bl	1c0dc <argp_parse@@Base+0x2be0>
   15ebc:	cmp	r0, #0
   15ec0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15ec4:	beq	15ee0 <__assert_fail@plt+0x4aa4>
   15ec8:	ldr	r1, [r9, #28]
   15ecc:	add	r2, r1, #1
   15ed0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ed4:	str	r2, [r0, #28]
   15ed8:	mov	r2, #32
   15edc:	strb	r2, [r1]
   15ee0:	ldrd	r0, [fp, #-48]	; 0xffffffd0
   15ee4:	ldr	r2, [r4, #4]
   15ee8:	bl	1c0fc <argp_parse@@Base+0x2c00>
   15eec:	b	15e08 <__assert_fail@plt+0x49cc>
   15ef0:	cmp	r1, ip
   15ef4:	bcc	15f1c <__assert_fail@plt+0x4ae0>
   15ef8:	mov	r1, #1
   15efc:	mov	r0, lr
   15f00:	str	r3, [fp, #-56]	; 0xffffffc8
   15f04:	mov	r9, lr
   15f08:	bl	1c0dc <argp_parse@@Base+0x2be0>
   15f0c:	cmp	r0, #0
   15f10:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15f14:	beq	15ee0 <__assert_fail@plt+0x4aa4>
   15f18:	ldr	r1, [r9, #28]
   15f1c:	add	r0, r1, #1
   15f20:	mov	r2, #10
   15f24:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15f28:	str	r0, [ip, #28]
   15f2c:	strb	r2, [r1]
   15f30:	b	15ee0 <__assert_fail@plt+0x4aa4>
   15f34:	ldr	sl, [fp, #-48]	; 0xffffffd0
   15f38:	mov	r0, sl
   15f3c:	bl	1ba4c <argp_parse@@Base+0x2550>
   15f40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15f44:	ldr	r1, [sl, #28]
   15f48:	b	15e7c <__assert_fail@plt+0x4a40>
   15f4c:	mov	r2, r3
   15f50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15f54:	movw	r1, #59036	; 0xe69c
   15f58:	movt	r1, #1
   15f5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f60:	strb	r0, [r3]
   15f64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f68:	bl	1c0fc <argp_parse@@Base+0x2c00>
   15f6c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15f70:	ldr	r3, [r2, #4]
   15f74:	cmp	r3, #0
   15f78:	str	r3, [fp, #-40]	; 0xffffffd8
   15f7c:	beq	15d60 <__assert_fail@plt+0x4924>
   15f80:	ldr	r2, [r2]
   15f84:	add	r3, r2, #28
   15f88:	str	r3, [fp, #-64]	; 0xffffffc0
   15f8c:	b	15c10 <__assert_fail@plt+0x47d4>
   15f90:	ldr	r3, [r1, #12]
   15f94:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15f98:	mov	r5, r0
   15f9c:	ldr	r4, [r1, #4]
   15fa0:	strd	r6, [sp, #8]
   15fa4:	mov	r6, r1
   15fa8:	str	r8, [sp, #16]
   15fac:	cmp	r3, #0
   15fb0:	str	lr, [sp, #20]
   15fb4:	beq	160e0 <__assert_fail@plt+0x4ca4>
   15fb8:	ldr	r2, [r1]
   15fbc:	ldr	r3, [r1, #8]
   15fc0:	ldr	r7, [r2, #16]
   15fc4:	ldr	r8, [r3]
   15fc8:	ldr	r3, [r3, #4]
   15fcc:	cmp	r3, #0
   15fd0:	cmpne	r8, #0
   15fd4:	bne	16088 <__assert_fail@plt+0x4c4c>
   15fd8:	cmp	r7, #0
   15fdc:	beq	15ff8 <__assert_fail@plt+0x4bbc>
   15fe0:	ldr	r0, [r7]
   15fe4:	cmp	r0, #0
   15fe8:	beq	15ff8 <__assert_fail@plt+0x4bbc>
   15fec:	ldrb	r3, [r0]
   15ff0:	cmp	r3, #0
   15ff4:	bne	16150 <__assert_fail@plt+0x4d14>
   15ff8:	ldr	r2, [r4, #16]
   15ffc:	ldr	r1, [r4, #24]
   16000:	ldr	r3, [r4, #28]
   16004:	sub	r3, r3, r1
   16008:	mov	r1, #0
   1600c:	cmp	r3, r2
   16010:	str	r1, [r6, #12]
   16014:	bhi	16144 <__assert_fail@plt+0x4d08>
   16018:	ldr	r3, [r4, #20]
   1601c:	cmp	r3, #0
   16020:	subge	r5, r5, r3
   16024:	cmp	r5, #0
   16028:	sub	r5, r5, #1
   1602c:	ble	16074 <__assert_fail@plt+0x4c38>
   16030:	mov	r6, #32
   16034:	ldr	r3, [r4, #28]
   16038:	mov	r1, #1
   1603c:	mov	r0, r4
   16040:	sub	r5, r5, #1
   16044:	ldr	r2, [r4, #32]
   16048:	cmp	r3, r2
   1604c:	bcc	16060 <__assert_fail@plt+0x4c24>
   16050:	bl	1c0dc <argp_parse@@Base+0x2be0>
   16054:	cmp	r0, #0
   16058:	beq	1606c <__assert_fail@plt+0x4c30>
   1605c:	ldr	r3, [r4, #28]
   16060:	add	r2, r3, #1
   16064:	str	r2, [r4, #28]
   16068:	strb	r6, [r3]
   1606c:	cmn	r5, #1
   16070:	bne	16034 <__assert_fail@plt+0x4bf8>
   16074:	ldrd	r4, [sp]
   16078:	ldrd	r6, [sp, #8]
   1607c:	ldr	r8, [sp, #16]
   16080:	add	sp, sp, #20
   16084:	pop	{pc}		; (ldr pc, [sp], #4)
   16088:	ldr	r2, [r2, #12]
   1608c:	ldr	r3, [r8, #12]
   16090:	cmp	r2, r3
   16094:	beq	15fd8 <__assert_fail@plt+0x4b9c>
   16098:	ldr	r3, [r4, #28]
   1609c:	ldr	r2, [r4, #32]
   160a0:	cmp	r3, r2
   160a4:	bcc	160c0 <__assert_fail@plt+0x4c84>
   160a8:	mov	r1, #1
   160ac:	mov	r0, r4
   160b0:	bl	1c0dc <argp_parse@@Base+0x2be0>
   160b4:	cmp	r0, #0
   160b8:	ldrne	r3, [r4, #28]
   160bc:	beq	160d0 <__assert_fail@plt+0x4c94>
   160c0:	add	r1, r3, #1
   160c4:	mov	r2, #10
   160c8:	str	r1, [r4, #28]
   160cc:	strb	r2, [r3]
   160d0:	cmp	r7, #0
   160d4:	ldr	r4, [r6, #4]
   160d8:	bne	15fe0 <__assert_fail@plt+0x4ba4>
   160dc:	b	15ff8 <__assert_fail@plt+0x4bbc>
   160e0:	ldr	r3, [r4, #28]
   160e4:	ldr	r1, [r4, #32]
   160e8:	add	r2, r3, #2
   160ec:	cmp	r1, r2
   160f0:	bcs	1610c <__assert_fail@plt+0x4cd0>
   160f4:	mov	r1, #2
   160f8:	mov	r0, r4
   160fc:	bl	1c0dc <argp_parse@@Base+0x2be0>
   16100:	cmp	r0, #0
   16104:	beq	16128 <__assert_fail@plt+0x4cec>
   16108:	ldr	r3, [r4, #28]
   1610c:	movw	r2, #55352	; 0xd838
   16110:	movt	r2, #1
   16114:	ldrh	r2, [r2]
   16118:	strh	r2, [r3]
   1611c:	ldr	r3, [r4, #28]
   16120:	add	r3, r3, #2
   16124:	str	r3, [r4, #28]
   16128:	ldr	r4, [r6, #4]
   1612c:	ldr	r2, [r4, #16]
   16130:	ldr	r1, [r4, #24]
   16134:	ldr	r3, [r4, #28]
   16138:	sub	r3, r3, r1
   1613c:	cmp	r3, r2
   16140:	bls	16018 <__assert_fail@plt+0x4bdc>
   16144:	mov	r0, r4
   16148:	bl	1ba4c <argp_parse@@Base+0x2550>
   1614c:	b	16018 <__assert_fail@plt+0x4bdc>
   16150:	cmp	r8, #0
   16154:	beq	16184 <__assert_fail@plt+0x4d48>
   16158:	ldr	r3, [r8, #16]
   1615c:	cmp	r3, r7
   16160:	beq	15ff8 <__assert_fail@plt+0x4bbc>
   16164:	cmp	r3, #0
   16168:	beq	16184 <__assert_fail@plt+0x4d48>
   1616c:	ldr	r3, [r3, #12]
   16170:	cmp	r3, #0
   16174:	cmpne	r7, r3
   16178:	bne	1616c <__assert_fail@plt+0x4d30>
   1617c:	cmp	r7, r3
   16180:	beq	15ff8 <__assert_fail@plt+0x4bbc>
   16184:	mov	r2, r6
   16188:	ldr	r1, [r7, #16]
   1618c:	ldr	r7, [r4, #12]
   16190:	bl	15828 <__assert_fail@plt+0x43ec>
   16194:	ldr	r8, [r6, #4]
   16198:	ldr	r2, [r8, #16]
   1619c:	ldr	r1, [r8, #24]
   161a0:	ldr	r3, [r8, #28]
   161a4:	sub	r3, r3, r1
   161a8:	cmp	r3, r2
   161ac:	movls	r4, r8
   161b0:	bhi	161bc <__assert_fail@plt+0x4d80>
   161b4:	str	r7, [r8, #12]
   161b8:	b	16008 <__assert_fail@plt+0x4bcc>
   161bc:	mov	r0, r8
   161c0:	bl	1ba4c <argp_parse@@Base+0x2550>
   161c4:	ldr	r4, [r6, #4]
   161c8:	ldr	r2, [r4, #16]
   161cc:	ldr	r1, [r4, #24]
   161d0:	ldr	r3, [r4, #28]
   161d4:	sub	r3, r3, r1
   161d8:	b	161b4 <__assert_fail@plt+0x4d78>
   161dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   161e0:	strd	r6, [sp, #8]
   161e4:	mov	r7, r0
   161e8:	ldr	r6, [r0, #12]
   161ec:	strd	r8, [sp, #16]
   161f0:	mov	r8, r2
   161f4:	strd	sl, [sp, #24]
   161f8:	mov	sl, r3
   161fc:	mov	fp, r1
   16200:	ldr	r3, [r0, #16]
   16204:	str	lr, [sp, #32]
   16208:	sub	sp, sp, #28
   1620c:	cmp	r6, #0
   16210:	ldr	r5, [sp, #68]	; 0x44
   16214:	str	r3, [sp, #8]
   16218:	ldr	r3, [r0, #20]
   1621c:	beq	1658c <__assert_fail@plt+0x5150>
   16220:	mov	r1, #11
   16224:	mov	r0, r6
   16228:	str	r3, [sp, #12]
   1622c:	bl	112e0 <strchr@plt>
   16230:	cmp	r8, #0
   16234:	mov	r9, r0
   16238:	ldr	r3, [sp, #12]
   1623c:	bne	16488 <__assert_fail@plt+0x504c>
   16240:	cmp	r0, #0
   16244:	beq	16788 <__assert_fail@plt+0x534c>
   16248:	subs	r1, r0, r6
   1624c:	movne	r4, #1
   16250:	moveq	r4, #0
   16254:	cmp	r3, #0
   16258:	str	r1, [sp, #20]
   1625c:	beq	1672c <__assert_fail@plt+0x52f0>
   16260:	cmp	r1, #0
   16264:	beq	1677c <__assert_fail@plt+0x5340>
   16268:	mov	r0, r6
   1626c:	mov	r4, #1
   16270:	bl	11178 <strndup@plt>
   16274:	adds	r3, r0, #0
   16278:	mov	r6, r0
   1627c:	movne	r3, #1
   16280:	str	r3, [sp, #16]
   16284:	mov	r1, fp
   16288:	mov	r0, r7
   1628c:	bl	1a3b4 <argp_parse@@Base+0xeb8>
   16290:	mov	r2, r0
   16294:	mov	r1, r6
   16298:	ldr	r3, [r7, #20]
   1629c:	mov	r0, #1
   162a0:	movt	r0, #512	; 0x200
   162a4:	str	r2, [sp, #12]
   162a8:	blx	r3
   162ac:	subs	r9, r0, #0
   162b0:	moveq	r4, r9
   162b4:	beq	16344 <__assert_fail@plt+0x4f08>
   162b8:	cmp	r6, r9
   162bc:	movne	r4, #0
   162c0:	andeq	r4, r4, #1
   162c4:	cmp	sl, #0
   162c8:	ldr	r2, [r5, #28]
   162cc:	bne	165d4 <__assert_fail@plt+0x5198>
   162d0:	cmp	r4, #0
   162d4:	beq	1652c <__assert_fail@plt+0x50f0>
   162d8:	ldr	r3, [sp, #20]
   162dc:	ldr	r0, [r5, #32]
   162e0:	add	r1, r2, r3
   162e4:	cmp	r0, r1
   162e8:	bcs	164e4 <__assert_fail@plt+0x50a8>
   162ec:	mov	r1, r3
   162f0:	mov	r0, r5
   162f4:	bl	1c0dc <argp_parse@@Base+0x2be0>
   162f8:	cmp	r0, #0
   162fc:	ldr	r2, [r5, #28]
   16300:	bne	164e4 <__assert_fail@plt+0x50a8>
   16304:	ldr	r0, [r5, #16]
   16308:	ldr	r1, [r5, #24]
   1630c:	sub	r2, r2, r1
   16310:	cmp	r2, r0
   16314:	bhi	1661c <__assert_fail@plt+0x51e0>
   16318:	ldr	r1, [r5, #4]
   1631c:	ldr	r2, [r5, #20]
   16320:	bic	r2, r2, r2, asr #31
   16324:	cmp	r1, r2
   16328:	bcc	165f8 <__assert_fail@plt+0x51bc>
   1632c:	cmp	r9, r6
   16330:	moveq	r4, #1
   16334:	beq	16344 <__assert_fail@plt+0x4f08>
   16338:	mov	r0, r9
   1633c:	mov	r4, #1
   16340:	bl	1a534 <argp_parse@@Base+0x1038>
   16344:	ldr	r3, [sp, #16]
   16348:	cmp	r3, #0
   1634c:	beq	16364 <__assert_fail@plt+0x4f28>
   16350:	ldr	r3, [r7, #20]
   16354:	cmp	r3, #0
   16358:	beq	163e4 <__assert_fail@plt+0x4fa8>
   1635c:	mov	r0, r6
   16360:	bl	1a534 <argp_parse@@Base+0x1038>
   16364:	cmp	r8, #0
   16368:	beq	163e4 <__assert_fail@plt+0x4fa8>
   1636c:	ldr	r3, [r7, #20]
   16370:	cmp	r3, #0
   16374:	beq	163e4 <__assert_fail@plt+0x4fa8>
   16378:	mov	r0, #4
   1637c:	movt	r0, #512	; 0x200
   16380:	ldr	r2, [sp, #12]
   16384:	mov	r1, #0
   16388:	blx	r3
   1638c:	subs	r6, r0, #0
   16390:	beq	163e4 <__assert_fail@plt+0x4fa8>
   16394:	orrs	r3, sl, r4
   16398:	bne	166b8 <__assert_fail@plt+0x527c>
   1639c:	mov	r0, r6
   163a0:	bl	112d4 <strlen@plt>
   163a4:	subs	r4, r0, #0
   163a8:	bne	16670 <__assert_fail@plt+0x5234>
   163ac:	mov	r0, r6
   163b0:	bl	1a534 <argp_parse@@Base+0x1038>
   163b4:	ldr	r2, [r5, #16]
   163b8:	ldr	r1, [r5, #24]
   163bc:	ldr	r3, [r5, #28]
   163c0:	sub	r3, r3, r1
   163c4:	cmp	r3, r2
   163c8:	bhi	16704 <__assert_fail@plt+0x52c8>
   163cc:	ldr	r2, [r5, #4]
   163d0:	ldr	r3, [r5, #20]
   163d4:	bic	r3, r3, r3, asr #31
   163d8:	cmp	r2, r3
   163dc:	bcc	166dc <__assert_fail@plt+0x52a0>
   163e0:	mov	r4, #1
   163e4:	ldr	r7, [sp, #8]
   163e8:	cmp	r7, #0
   163ec:	beq	16468 <__assert_fail@plt+0x502c>
   163f0:	ldr	r3, [r7]
   163f4:	cmp	r3, #0
   163f8:	beq	16468 <__assert_fail@plt+0x502c>
   163fc:	ldr	r2, [sp, #64]	; 0x40
   16400:	eor	r6, r2, #1
   16404:	eor	r2, r4, #1
   16408:	orr	r2, r2, r6
   1640c:	and	r6, r6, #1
   16410:	tst	r2, #1
   16414:	beq	1673c <__assert_fail@plt+0x5300>
   16418:	ldr	r9, [sp, #64]	; 0x40
   1641c:	orrs	r2, r4, sl
   16420:	mov	r0, r3
   16424:	str	r9, [sp]
   16428:	movne	r3, #1
   1642c:	moveq	r3, #0
   16430:	str	r5, [sp, #4]
   16434:	mov	r2, r8
   16438:	mov	r1, fp
   1643c:	bl	161dc <__assert_fail@plt+0x4da0>
   16440:	ldr	r3, [r7, #16]
   16444:	orr	r4, r4, r0
   16448:	add	r7, r7, #16
   1644c:	cmp	r3, #0
   16450:	beq	16468 <__assert_fail@plt+0x502c>
   16454:	cmp	r4, #0
   16458:	movne	r2, r6
   1645c:	moveq	r2, #1
   16460:	cmp	r2, #0
   16464:	bne	1641c <__assert_fail@plt+0x4fe0>
   16468:	mov	r0, r4
   1646c:	add	sp, sp, #28
   16470:	ldrd	r4, [sp]
   16474:	ldrd	r6, [sp, #8]
   16478:	ldrd	r8, [sp, #16]
   1647c:	ldrd	sl, [sp, #24]
   16480:	add	sp, sp, #32
   16484:	pop	{pc}		; (ldr pc, [sp], #4)
   16488:	cmp	r0, #0
   1648c:	beq	16710 <__assert_fail@plt+0x52d4>
   16490:	cmp	r3, #0
   16494:	add	r6, r0, #1
   16498:	movne	r1, fp
   1649c:	movne	r0, r7
   164a0:	beq	16508 <__assert_fail@plt+0x50cc>
   164a4:	bl	1a3b4 <argp_parse@@Base+0xeb8>
   164a8:	ldr	r3, [r7, #20]
   164ac:	str	r0, [sp, #12]
   164b0:	mov	r0, #2
   164b4:	movt	r0, #512	; 0x200
   164b8:	mov	r1, r6
   164bc:	ldr	r2, [sp, #12]
   164c0:	blx	r3
   164c4:	subs	r9, r0, #0
   164c8:	moveq	r4, r9
   164cc:	beq	16364 <__assert_fail@plt+0x4f28>
   164d0:	mov	r3, #0
   164d4:	mov	r4, r3
   164d8:	str	r3, [sp, #16]
   164dc:	str	r3, [sp, #20]
   164e0:	b	162b8 <__assert_fail@plt+0x4e7c>
   164e4:	ldr	r4, [sp, #20]
   164e8:	mov	r0, r2
   164ec:	mov	r1, r6
   164f0:	mov	r2, r4
   164f4:	bl	11184 <memcpy@plt>
   164f8:	ldr	r2, [r5, #28]
   164fc:	add	r2, r2, r4
   16500:	str	r2, [r5, #28]
   16504:	b	16304 <__assert_fail@plt+0x4ec8>
   16508:	cmp	r6, #0
   1650c:	moveq	r4, r6
   16510:	beq	163e4 <__assert_fail@plt+0x4fa8>
   16514:	cmp	sl, #0
   16518:	ldr	r2, [r5, #28]
   1651c:	bne	165bc <__assert_fail@plt+0x5180>
   16520:	mov	r9, r6
   16524:	str	sl, [sp, #12]
   16528:	str	sl, [sp, #16]
   1652c:	mov	r0, r9
   16530:	str	r2, [sp, #20]
   16534:	bl	112d4 <strlen@plt>
   16538:	subs	r4, r0, #0
   1653c:	ldr	r2, [sp, #20]
   16540:	beq	16304 <__assert_fail@plt+0x4ec8>
   16544:	ldr	r0, [r5, #32]
   16548:	add	r1, r2, r4
   1654c:	cmp	r0, r1
   16550:	bcs	1656c <__assert_fail@plt+0x5130>
   16554:	mov	r1, r4
   16558:	mov	r0, r5
   1655c:	bl	1c0dc <argp_parse@@Base+0x2be0>
   16560:	cmp	r0, #0
   16564:	ldr	r2, [r5, #28]
   16568:	beq	16304 <__assert_fail@plt+0x4ec8>
   1656c:	mov	r0, r2
   16570:	mov	r1, r9
   16574:	mov	r2, r4
   16578:	bl	11184 <memcpy@plt>
   1657c:	ldr	r2, [r5, #28]
   16580:	add	r2, r2, r4
   16584:	str	r2, [r5, #28]
   16588:	b	16304 <__assert_fail@plt+0x4ec8>
   1658c:	cmp	r3, #0
   16590:	beq	16724 <__assert_fail@plt+0x52e8>
   16594:	bl	1a3b4 <argp_parse@@Base+0xeb8>
   16598:	mov	r2, #1
   1659c:	movt	r2, #512	; 0x200
   165a0:	str	r0, [sp, #12]
   165a4:	cmp	r8, #0
   165a8:	mov	r0, #2
   165ac:	movt	r0, #512	; 0x200
   165b0:	moveq	r0, r2
   165b4:	ldr	r3, [r7, #20]
   165b8:	b	164b8 <__assert_fail@plt+0x507c>
   165bc:	mov	r3, #0
   165c0:	mov	r9, r6
   165c4:	mov	r4, r3
   165c8:	str	r3, [sp, #12]
   165cc:	str	r3, [sp, #16]
   165d0:	str	r3, [sp, #20]
   165d4:	ldr	r1, [r5, #32]
   165d8:	cmp	r1, r2
   165dc:	bls	16628 <__assert_fail@plt+0x51ec>
   165e0:	add	r0, r2, #1
   165e4:	mov	r1, #10
   165e8:	str	r0, [r5, #28]
   165ec:	strb	r1, [r2]
   165f0:	ldr	r2, [r5, #28]
   165f4:	b	162d0 <__assert_fail@plt+0x4e94>
   165f8:	ldr	r2, [r5, #28]
   165fc:	ldr	r1, [r5, #32]
   16600:	cmp	r2, r1
   16604:	bcs	16644 <__assert_fail@plt+0x5208>
   16608:	add	r0, r2, #1
   1660c:	mov	r1, #10
   16610:	str	r0, [r5, #28]
   16614:	strb	r1, [r2]
   16618:	b	1632c <__assert_fail@plt+0x4ef0>
   1661c:	mov	r0, r5
   16620:	bl	1ba4c <argp_parse@@Base+0x2550>
   16624:	b	16318 <__assert_fail@plt+0x4edc>
   16628:	mov	r1, #1
   1662c:	mov	r0, r5
   16630:	bl	1c0dc <argp_parse@@Base+0x2be0>
   16634:	cmp	r0, #0
   16638:	ldr	r2, [r5, #28]
   1663c:	bne	165e0 <__assert_fail@plt+0x51a4>
   16640:	b	162d0 <__assert_fail@plt+0x4e94>
   16644:	mov	r1, #1
   16648:	mov	r0, r5
   1664c:	bl	1c0dc <argp_parse@@Base+0x2be0>
   16650:	cmp	r0, #0
   16654:	beq	1632c <__assert_fail@plt+0x4ef0>
   16658:	ldr	r2, [r5, #28]
   1665c:	mov	r1, #10
   16660:	add	r0, r2, #1
   16664:	str	r0, [r5, #28]
   16668:	strb	r1, [r2]
   1666c:	b	1632c <__assert_fail@plt+0x4ef0>
   16670:	ldr	r0, [r5, #28]
   16674:	ldr	r2, [r5, #32]
   16678:	add	r3, r0, r4
   1667c:	cmp	r2, r3
   16680:	bcs	1669c <__assert_fail@plt+0x5260>
   16684:	mov	r1, r4
   16688:	mov	r0, r5
   1668c:	bl	1c0dc <argp_parse@@Base+0x2be0>
   16690:	cmp	r0, #0
   16694:	beq	163ac <__assert_fail@plt+0x4f70>
   16698:	ldr	r0, [r5, #28]
   1669c:	mov	r2, r4
   166a0:	mov	r1, r6
   166a4:	bl	11184 <memcpy@plt>
   166a8:	ldr	r3, [r5, #28]
   166ac:	add	r4, r3, r4
   166b0:	str	r4, [r5, #28]
   166b4:	b	163ac <__assert_fail@plt+0x4f70>
   166b8:	ldr	r3, [r5, #28]
   166bc:	ldr	r2, [r5, #32]
   166c0:	cmp	r3, r2
   166c4:	bcs	16760 <__assert_fail@plt+0x5324>
   166c8:	add	r1, r3, #1
   166cc:	mov	r2, #10
   166d0:	str	r1, [r5, #28]
   166d4:	strb	r2, [r3]
   166d8:	b	1639c <__assert_fail@plt+0x4f60>
   166dc:	ldr	r3, [r5, #28]
   166e0:	ldr	r2, [r5, #32]
   166e4:	cmp	r3, r2
   166e8:	bcs	16744 <__assert_fail@plt+0x5308>
   166ec:	add	r1, r3, #1
   166f0:	mov	r2, #10
   166f4:	mov	r4, #1
   166f8:	str	r1, [r5, #28]
   166fc:	strb	r2, [r3]
   16700:	b	163e4 <__assert_fail@plt+0x4fa8>
   16704:	mov	r0, r5
   16708:	bl	1ba4c <argp_parse@@Base+0x2550>
   1670c:	b	163cc <__assert_fail@plt+0x4f90>
   16710:	cmp	r3, #0
   16714:	movne	r1, fp
   16718:	movne	r0, r7
   1671c:	movne	r6, r9
   16720:	bne	164a4 <__assert_fail@plt+0x5068>
   16724:	mov	r4, r3
   16728:	b	163e4 <__assert_fail@plt+0x4fa8>
   1672c:	mov	r9, r6
   16730:	str	r8, [sp, #12]
   16734:	str	r4, [sp, #16]
   16738:	b	162b8 <__assert_fail@plt+0x4e7c>
   1673c:	mov	r4, #1
   16740:	b	16468 <__assert_fail@plt+0x502c>
   16744:	mov	r1, #1
   16748:	mov	r0, r5
   1674c:	bl	1c0dc <argp_parse@@Base+0x2be0>
   16750:	cmp	r0, #0
   16754:	beq	163e0 <__assert_fail@plt+0x4fa4>
   16758:	ldr	r3, [r5, #28]
   1675c:	b	166ec <__assert_fail@plt+0x52b0>
   16760:	mov	r1, #1
   16764:	mov	r0, r5
   16768:	bl	1c0dc <argp_parse@@Base+0x2be0>
   1676c:	cmp	r0, #0
   16770:	beq	1639c <__assert_fail@plt+0x4f60>
   16774:	ldr	r3, [r5, #28]
   16778:	b	166c8 <__assert_fail@plt+0x528c>
   1677c:	ldr	r4, [sp, #20]
   16780:	str	r4, [sp, #16]
   16784:	b	16284 <__assert_fail@plt+0x4e48>
   16788:	cmp	r3, #0
   1678c:	beq	16514 <__assert_fail@plt+0x50d8>
   16790:	mov	r1, fp
   16794:	mov	r0, r7
   16798:	bl	1a3b4 <argp_parse@@Base+0xeb8>
   1679c:	str	r0, [sp, #12]
   167a0:	mov	r0, #1
   167a4:	movt	r0, #512	; 0x200
   167a8:	ldr	r3, [r7, #20]
   167ac:	b	164b8 <__assert_fail@plt+0x507c>
   167b0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   167b4:	ldr	r4, [r0, #16]
   167b8:	strd	r6, [sp, #8]
   167bc:	strd	r8, [sp, #16]
   167c0:	strd	sl, [sp, #24]
   167c4:	str	lr, [sp, #32]
   167c8:	sub	sp, sp, #20
   167cc:	cmp	r4, #0
   167d0:	movne	r3, r4
   167d4:	bne	167e0 <__assert_fail@plt+0x53a4>
   167d8:	b	17070 <__assert_fail@plt+0x5c34>
   167dc:	mov	r3, r2
   167e0:	ldr	r2, [r3, #12]
   167e4:	cmp	r2, #0
   167e8:	bne	167dc <__assert_fail@plt+0x53a0>
   167ec:	ldr	r2, [r3, #8]
   167f0:	ldr	r7, [r1, #16]
   167f4:	cmp	r7, #0
   167f8:	movne	r3, r7
   167fc:	bne	16808 <__assert_fail@plt+0x53cc>
   16800:	b	17068 <__assert_fail@plt+0x5c2c>
   16804:	mov	r3, ip
   16808:	ldr	ip, [r3, #12]
   1680c:	cmp	ip, #0
   16810:	bne	16804 <__assert_fail@plt+0x53c8>
   16814:	ldr	ip, [r3, #8]
   16818:	mvn	r3, ip
   1681c:	lsr	r3, r3, #31
   16820:	cmp	r3, r2, lsr #31
   16824:	subne	ip, r2, ip
   16828:	subeq	ip, ip, r2
   1682c:	cmp	ip, #0
   16830:	bne	16a10 <__assert_fail@plt+0x55d4>
   16834:	adds	ip, r7, #0
   16838:	movne	ip, #1
   1683c:	cmp	r4, #0
   16840:	rsbeq	ip, ip, #0
   16844:	rsbne	ip, ip, #1
   16848:	cmp	ip, #0
   1684c:	bne	16a10 <__assert_fail@plt+0x55d4>
   16850:	cmp	r4, #0
   16854:	mov	r6, r1
   16858:	mov	r5, r0
   1685c:	beq	16d60 <__assert_fail@plt+0x5924>
   16860:	ldr	r8, [r4, #12]
   16864:	ldr	r1, [r4, #20]
   16868:	ldr	r2, [r7, #20]
   1686c:	ldr	r9, [r7, #12]
   16870:	cmp	r1, r2
   16874:	bgt	16a34 <__assert_fail@plt+0x55f8>
   16878:	blt	16884 <__assert_fail@plt+0x5448>
   1687c:	b	16bc4 <__assert_fail@plt+0x5788>
   16880:	mov	r9, r5
   16884:	ldr	r5, [r9, #12]
   16888:	ldr	r3, [r9, #20]
   1688c:	cmp	r1, r3
   16890:	blt	16880 <__assert_fail@plt+0x5444>
   16894:	cmp	r8, r5
   16898:	beq	17230 <__assert_fail@plt+0x5df4>
   1689c:	ldr	r7, [r5, #12]
   168a0:	ldr	r6, [r8, #12]
   168a4:	cmp	r6, r7
   168a8:	beq	17178 <__assert_fail@plt+0x5d3c>
   168ac:	ldr	sl, [r6, #12]
   168b0:	ldr	fp, [r7, #12]
   168b4:	cmp	sl, fp
   168b8:	beq	17298 <__assert_fail@plt+0x5e5c>
   168bc:	ldr	r3, [sl, #12]
   168c0:	ldr	r2, [fp, #12]
   168c4:	cmp	r3, r2
   168c8:	beq	17334 <__assert_fail@plt+0x5ef8>
   168cc:	ldr	r1, [r2, #12]
   168d0:	ldr	r0, [r3, #12]
   168d4:	cmp	r0, r1
   168d8:	beq	173d0 <__assert_fail@plt+0x5f94>
   168dc:	str	r3, [sp]
   168e0:	str	r2, [sp, #4]
   168e4:	bl	14d18 <__assert_fail@plt+0x38dc>
   168e8:	subs	ip, r0, #0
   168ec:	bne	16a10 <__assert_fail@plt+0x55d4>
   168f0:	ldr	r3, [sp]
   168f4:	ldr	r2, [sp, #4]
   168f8:	ldr	r0, [r3, #8]
   168fc:	ldr	r1, [r2, #8]
   16900:	mvn	ip, r1
   16904:	lsr	ip, ip, #31
   16908:	cmp	ip, r0, lsr #31
   1690c:	subne	ip, r0, r1
   16910:	subeq	ip, r1, r0
   16914:	cmp	ip, #0
   16918:	bne	16a10 <__assert_fail@plt+0x55d4>
   1691c:	ldr	r1, [r2, #4]
   16920:	ldr	r3, [r3, #4]
   16924:	sub	ip, r1, r3
   16928:	cmp	ip, #0
   1692c:	bne	16a10 <__assert_fail@plt+0x55d4>
   16930:	ldr	r1, [fp, #8]
   16934:	ldr	r0, [sl, #8]
   16938:	mvn	r3, r1
   1693c:	lsr	r3, r3, #31
   16940:	cmp	r3, r0, lsr #31
   16944:	subne	ip, r0, r1
   16948:	subeq	ip, r1, r0
   1694c:	cmp	ip, #0
   16950:	bne	16a10 <__assert_fail@plt+0x55d4>
   16954:	ldr	r3, [sl, #4]
   16958:	ldr	r1, [fp, #4]
   1695c:	sub	ip, r1, r3
   16960:	cmp	ip, #0
   16964:	bne	16a10 <__assert_fail@plt+0x55d4>
   16968:	ldr	r1, [r7, #8]
   1696c:	ldr	r0, [r6, #8]
   16970:	mvn	r3, r1
   16974:	lsr	r3, r3, #31
   16978:	cmp	r3, r0, lsr #31
   1697c:	subne	ip, r0, r1
   16980:	subeq	ip, r1, r0
   16984:	cmp	ip, #0
   16988:	bne	16a10 <__assert_fail@plt+0x55d4>
   1698c:	ldr	r3, [r6, #4]
   16990:	ldr	r1, [r7, #4]
   16994:	sub	ip, r1, r3
   16998:	cmp	ip, #0
   1699c:	bne	16a10 <__assert_fail@plt+0x55d4>
   169a0:	ldr	r1, [r5, #8]
   169a4:	ldr	r0, [r8, #8]
   169a8:	mvn	r3, r1
   169ac:	lsr	r3, r3, #31
   169b0:	cmp	r3, r0, lsr #31
   169b4:	subne	ip, r0, r1
   169b8:	subeq	ip, r1, r0
   169bc:	cmp	ip, #0
   169c0:	bne	16a10 <__assert_fail@plt+0x55d4>
   169c4:	ldr	r1, [r5, #4]
   169c8:	ldr	r3, [r8, #4]
   169cc:	sub	ip, r1, r3
   169d0:	cmp	ip, #0
   169d4:	bne	16a10 <__assert_fail@plt+0x55d4>
   169d8:	ldr	r1, [r9, #8]
   169dc:	ldr	r0, [r4, #8]
   169e0:	mvn	r3, r1
   169e4:	lsr	r3, r3, #31
   169e8:	cmp	r3, r0, lsr #31
   169ec:	subne	ip, r0, r1
   169f0:	subeq	ip, r1, r0
   169f4:	cmp	ip, #0
   169f8:	bne	16a10 <__assert_fail@plt+0x55d4>
   169fc:	ldr	r0, [r4, #4]
   16a00:	ldr	r1, [r9, #4]
   16a04:	sub	ip, r1, r0
   16a08:	cmp	ip, #0
   16a0c:	mvneq	ip, #0
   16a10:	mov	r0, ip
   16a14:	add	sp, sp, #20
   16a18:	ldrd	r4, [sp]
   16a1c:	ldrd	r6, [sp, #8]
   16a20:	ldrd	r8, [sp, #16]
   16a24:	ldrd	sl, [sp, #24]
   16a28:	add	sp, sp, #32
   16a2c:	pop	{pc}		; (ldr pc, [sp], #4)
   16a30:	mov	r8, r4
   16a34:	ldr	r4, [r8, #12]
   16a38:	ldr	r3, [r8, #20]
   16a3c:	cmp	r2, r3
   16a40:	blt	16a30 <__assert_fail@plt+0x55f4>
   16a44:	cmp	r4, r9
   16a48:	beq	171fc <__assert_fail@plt+0x5dc0>
   16a4c:	ldr	r5, [r4, #12]
   16a50:	ldr	r6, [r9, #12]
   16a54:	cmp	r5, r6
   16a58:	beq	17264 <__assert_fail@plt+0x5e28>
   16a5c:	ldr	sl, [r5, #12]
   16a60:	ldr	fp, [r6, #12]
   16a64:	cmp	sl, fp
   16a68:	beq	171ac <__assert_fail@plt+0x5d70>
   16a6c:	ldr	r3, [sl, #12]
   16a70:	ldr	r2, [fp, #12]
   16a74:	cmp	r3, r2
   16a78:	beq	172dc <__assert_fail@plt+0x5ea0>
   16a7c:	ldr	r1, [r2, #12]
   16a80:	ldr	r0, [r3, #12]
   16a84:	cmp	r0, r1
   16a88:	beq	17368 <__assert_fail@plt+0x5f2c>
   16a8c:	str	r3, [sp]
   16a90:	str	r2, [sp, #4]
   16a94:	bl	14d18 <__assert_fail@plt+0x38dc>
   16a98:	subs	ip, r0, #0
   16a9c:	bne	16a10 <__assert_fail@plt+0x55d4>
   16aa0:	ldr	r3, [sp]
   16aa4:	ldr	r2, [sp, #4]
   16aa8:	ldr	r0, [r3, #8]
   16aac:	ldr	r1, [r2, #8]
   16ab0:	mvn	ip, r1
   16ab4:	lsr	ip, ip, #31
   16ab8:	cmp	ip, r0, lsr #31
   16abc:	subne	ip, r0, r1
   16ac0:	subeq	ip, r1, r0
   16ac4:	cmp	ip, #0
   16ac8:	bne	16a10 <__assert_fail@plt+0x55d4>
   16acc:	ldr	r1, [r2, #4]
   16ad0:	ldr	r3, [r3, #4]
   16ad4:	sub	ip, r1, r3
   16ad8:	cmp	ip, #0
   16adc:	bne	16a10 <__assert_fail@plt+0x55d4>
   16ae0:	ldr	r1, [fp, #8]
   16ae4:	ldr	r0, [sl, #8]
   16ae8:	mvn	r3, r1
   16aec:	lsr	r3, r3, #31
   16af0:	cmp	r3, r0, lsr #31
   16af4:	subne	ip, r0, r1
   16af8:	subeq	ip, r1, r0
   16afc:	cmp	ip, #0
   16b00:	bne	16a10 <__assert_fail@plt+0x55d4>
   16b04:	ldr	r3, [sl, #4]
   16b08:	ldr	r1, [fp, #4]
   16b0c:	sub	ip, r1, r3
   16b10:	cmp	ip, #0
   16b14:	bne	16a10 <__assert_fail@plt+0x55d4>
   16b18:	ldr	r1, [r6, #8]
   16b1c:	ldr	r0, [r5, #8]
   16b20:	mvn	r3, r1
   16b24:	lsr	r3, r3, #31
   16b28:	cmp	r3, r0, lsr #31
   16b2c:	subne	ip, r0, r1
   16b30:	subeq	ip, r1, r0
   16b34:	cmp	ip, #0
   16b38:	bne	16a10 <__assert_fail@plt+0x55d4>
   16b3c:	ldr	r3, [r5, #4]
   16b40:	ldr	r1, [r6, #4]
   16b44:	sub	ip, r1, r3
   16b48:	cmp	ip, #0
   16b4c:	bne	16a10 <__assert_fail@plt+0x55d4>
   16b50:	ldr	r1, [r9, #8]
   16b54:	ldr	r0, [r4, #8]
   16b58:	mvn	r3, r1
   16b5c:	lsr	r3, r3, #31
   16b60:	cmp	r3, r0, lsr #31
   16b64:	subne	ip, r0, r1
   16b68:	subeq	ip, r1, r0
   16b6c:	cmp	ip, #0
   16b70:	bne	16a10 <__assert_fail@plt+0x55d4>
   16b74:	ldr	r0, [r4, #4]
   16b78:	ldr	r1, [r9, #4]
   16b7c:	sub	ip, r1, r0
   16b80:	cmp	ip, #0
   16b84:	bne	16a10 <__assert_fail@plt+0x55d4>
   16b88:	ldr	r1, [r7, #8]
   16b8c:	ldr	r0, [r8, #8]
   16b90:	mvn	r3, r1
   16b94:	lsr	r3, r3, #31
   16b98:	cmp	r3, r0, lsr #31
   16b9c:	subne	ip, r0, r1
   16ba0:	subeq	ip, r1, r0
   16ba4:	cmp	ip, #0
   16ba8:	bne	16a10 <__assert_fail@plt+0x55d4>
   16bac:	ldr	r1, [r7, #4]
   16bb0:	ldr	r0, [r8, #4]
   16bb4:	sub	ip, r1, r0
   16bb8:	cmp	ip, #0
   16bbc:	moveq	ip, #1
   16bc0:	b	16a10 <__assert_fail@plt+0x55d4>
   16bc4:	cmp	r8, r9
   16bc8:	beq	1739c <__assert_fail@plt+0x5f60>
   16bcc:	ldr	sl, [r8, #12]
   16bd0:	ldr	fp, [r9, #12]
   16bd4:	cmp	sl, fp
   16bd8:	beq	17404 <__assert_fail@plt+0x5fc8>
   16bdc:	ldr	r3, [sl, #12]
   16be0:	mov	r2, r3
   16be4:	ldr	r3, [fp, #12]
   16be8:	str	r2, [sp]
   16bec:	cmp	r2, r3
   16bf0:	beq	17438 <__assert_fail@plt+0x5ffc>
   16bf4:	ldr	r2, [r2, #12]
   16bf8:	mov	r1, r2
   16bfc:	ldr	r2, [r3, #12]
   16c00:	str	r1, [sp, #4]
   16c04:	cmp	r1, r2
   16c08:	beq	1746c <__assert_fail@plt+0x6030>
   16c0c:	ldr	r0, [r1, #12]
   16c10:	ldr	r1, [r2, #12]
   16c14:	cmp	r0, r1
   16c18:	beq	174a4 <__assert_fail@plt+0x6068>
   16c1c:	str	r3, [sp, #8]
   16c20:	str	r2, [sp, #12]
   16c24:	bl	14d18 <__assert_fail@plt+0x38dc>
   16c28:	subs	ip, r0, #0
   16c2c:	bne	16a10 <__assert_fail@plt+0x55d4>
   16c30:	ldr	r3, [sp, #4]
   16c34:	ldr	r2, [sp, #12]
   16c38:	ldr	r0, [r3, #8]
   16c3c:	ldr	r1, [r2, #8]
   16c40:	ldr	r3, [sp, #8]
   16c44:	mvn	ip, r1
   16c48:	lsr	ip, ip, #31
   16c4c:	cmp	ip, r0, lsr #31
   16c50:	subne	ip, r0, r1
   16c54:	subeq	ip, r1, r0
   16c58:	cmp	ip, #0
   16c5c:	bne	16a10 <__assert_fail@plt+0x55d4>
   16c60:	ldr	r1, [r2, #4]
   16c64:	ldr	r2, [sp, #4]
   16c68:	ldr	r2, [r2, #4]
   16c6c:	sub	ip, r1, r2
   16c70:	cmp	ip, #0
   16c74:	bne	16a10 <__assert_fail@plt+0x55d4>
   16c78:	ldr	r2, [sp]
   16c7c:	ldr	r1, [r3, #8]
   16c80:	ldr	r0, [r2, #8]
   16c84:	mvn	r2, r1
   16c88:	lsr	r2, r2, #31
   16c8c:	cmp	r2, r0, lsr #31
   16c90:	subne	ip, r0, r1
   16c94:	subeq	ip, r1, r0
   16c98:	cmp	ip, #0
   16c9c:	bne	16a10 <__assert_fail@plt+0x55d4>
   16ca0:	ldr	r1, [r3, #4]
   16ca4:	ldr	r3, [sp]
   16ca8:	ldr	r3, [r3, #4]
   16cac:	sub	ip, r1, r3
   16cb0:	cmp	ip, #0
   16cb4:	bne	16a10 <__assert_fail@plt+0x55d4>
   16cb8:	ldr	r1, [fp, #8]
   16cbc:	ldr	r0, [sl, #8]
   16cc0:	mvn	r3, r1
   16cc4:	lsr	r3, r3, #31
   16cc8:	cmp	r3, r0, lsr #31
   16ccc:	subne	ip, r0, r1
   16cd0:	subeq	ip, r1, r0
   16cd4:	cmp	ip, #0
   16cd8:	bne	16a10 <__assert_fail@plt+0x55d4>
   16cdc:	ldr	r3, [sl, #4]
   16ce0:	ldr	r1, [fp, #4]
   16ce4:	sub	ip, r1, r3
   16ce8:	cmp	ip, #0
   16cec:	bne	16a10 <__assert_fail@plt+0x55d4>
   16cf0:	ldr	r1, [r9, #8]
   16cf4:	ldr	r0, [r8, #8]
   16cf8:	mvn	r3, r1
   16cfc:	lsr	r3, r3, #31
   16d00:	cmp	r3, r0, lsr #31
   16d04:	subne	ip, r0, r1
   16d08:	subeq	ip, r1, r0
   16d0c:	cmp	ip, #0
   16d10:	bne	16a10 <__assert_fail@plt+0x55d4>
   16d14:	ldr	r3, [r8, #4]
   16d18:	ldr	r1, [r9, #4]
   16d1c:	sub	ip, r1, r3
   16d20:	cmp	ip, #0
   16d24:	bne	16a10 <__assert_fail@plt+0x55d4>
   16d28:	ldr	r1, [r7, #8]
   16d2c:	ldr	r0, [r4, #8]
   16d30:	mvn	r3, r1
   16d34:	lsr	r3, r3, #31
   16d38:	cmp	r3, r0, lsr #31
   16d3c:	subne	ip, r0, r1
   16d40:	subeq	ip, r1, r0
   16d44:	cmp	ip, #0
   16d48:	bne	16a10 <__assert_fail@plt+0x55d4>
   16d4c:	ldr	r3, [r4, #4]
   16d50:	ldr	r1, [r7, #4]
   16d54:	sub	ip, r1, r3
   16d58:	cmp	ip, #0
   16d5c:	bne	16a10 <__assert_fail@plt+0x55d4>
   16d60:	ldr	r1, [r6, #12]
   16d64:	ldr	r0, [r5, #12]
   16d68:	mvn	r3, r1
   16d6c:	lsr	r3, r3, #31
   16d70:	cmp	r3, r0, lsr #31
   16d74:	subne	ip, r0, r1
   16d78:	subeq	ip, r1, r0
   16d7c:	cmp	ip, #0
   16d80:	bne	16a10 <__assert_fail@plt+0x55d4>
   16d84:	ldm	r5, {r3, sl}
   16d88:	cmp	sl, #0
   16d8c:	beq	172cc <__assert_fail@plt+0x5e90>
   16d90:	add	r2, r3, #24
   16d94:	mov	r1, sl
   16d98:	ldr	r7, [r2, #-24]	; 0xffffffe8
   16d9c:	cmp	r7, #0
   16da0:	beq	16db0 <__assert_fail@plt+0x5974>
   16da4:	ldr	r0, [r2, #-12]
   16da8:	tst	r0, #2
   16dac:	beq	16dc0 <__assert_fail@plt+0x5984>
   16db0:	subs	r1, r1, #1
   16db4:	add	r2, r2, #24
   16db8:	bne	16d98 <__assert_fail@plt+0x595c>
   16dbc:	mov	r7, r1
   16dc0:	ldrd	r8, [r6]
   16dc4:	cmp	r9, #0
   16dc8:	beq	172d4 <__assert_fail@plt+0x5e98>
   16dcc:	add	r2, r8, #24
   16dd0:	mov	r1, r9
   16dd4:	ldr	r4, [r2, #-24]	; 0xffffffe8
   16dd8:	cmp	r4, #0
   16ddc:	beq	16dec <__assert_fail@plt+0x59b0>
   16de0:	ldr	r0, [r2, #-12]
   16de4:	tst	r0, #2
   16de8:	beq	16dfc <__assert_fail@plt+0x59c0>
   16dec:	subs	r1, r1, #1
   16df0:	add	r2, r2, #24
   16df4:	bne	16dd4 <__assert_fail@plt+0x5998>
   16df8:	mov	r4, r1
   16dfc:	ldr	r2, [r3, #12]
   16e00:	tst	r2, #8
   16e04:	beq	16e78 <__assert_fail@plt+0x5a3c>
   16e08:	cmp	r7, #0
   16e0c:	beq	16e78 <__assert_fail@plt+0x5a3c>
   16e10:	str	r3, [sp]
   16e14:	bl	112a4 <__ctype_b_loc@plt>
   16e18:	ldrb	r1, [r7]
   16e1c:	ldr	r0, [r0]
   16e20:	ldr	r3, [sp]
   16e24:	lsl	r2, r1, #1
   16e28:	ldrh	r2, [r0, r2]
   16e2c:	tst	r2, #8192	; 0x2000
   16e30:	beq	16e48 <__assert_fail@plt+0x5a0c>
   16e34:	ldrb	r1, [r7, #1]!
   16e38:	lsl	r2, r1, #1
   16e3c:	ldrh	r2, [r0, r2]
   16e40:	tst	r2, #8192	; 0x2000
   16e44:	bne	16e34 <__assert_fail@plt+0x59f8>
   16e48:	cmp	r1, #0
   16e4c:	bne	16e68 <__assert_fail@plt+0x5a2c>
   16e50:	b	1715c <__assert_fail@plt+0x5d20>
   16e54:	ldrb	r2, [r7, #1]!
   16e58:	cmp	r2, #0
   16e5c:	lsl	ip, r2, #1
   16e60:	beq	16e70 <__assert_fail@plt+0x5a34>
   16e64:	ldrh	r2, [r0, ip]
   16e68:	tst	r2, #8
   16e6c:	beq	16e54 <__assert_fail@plt+0x5a18>
   16e70:	cmp	r1, #45	; 0x2d
   16e74:	bne	1715c <__assert_fail@plt+0x5d20>
   16e78:	ldr	r2, [r8, #12]
   16e7c:	tst	r2, #8
   16e80:	bne	17078 <__assert_fail@plt+0x5c3c>
   16e84:	cmp	sl, #0
   16e88:	ldr	r2, [r5, #8]
   16e8c:	ldr	r6, [r6, #8]
   16e90:	beq	17100 <__assert_fail@plt+0x5cc4>
   16e94:	mov	fp, sl
   16e98:	mov	r5, r3
   16e9c:	str	r7, [sp]
   16ea0:	stmib	sp, {r4, r6}
   16ea4:	mov	r4, r2
   16ea8:	ldr	sl, [r5, #12]
   16eac:	mov	r0, #1
   16eb0:	ands	r6, sl, #8
   16eb4:	movne	r6, #0
   16eb8:	bne	16f08 <__assert_fail@plt+0x5acc>
   16ebc:	ldr	r7, [r5, #4]
   16ec0:	sub	ip, r7, #1
   16ec4:	cmp	ip, #254	; 0xfe
   16ec8:	bhi	16f08 <__assert_fail@plt+0x5acc>
   16ecc:	bl	112a4 <__ctype_b_loc@plt>
   16ed0:	ldr	lr, [r0]
   16ed4:	lsl	ip, r7, #1
   16ed8:	mov	r0, #1
   16edc:	ldrh	ip, [lr, ip]
   16ee0:	tst	ip, #16384	; 0x4000
   16ee4:	beq	16f08 <__assert_fail@plt+0x5acc>
   16ee8:	ldrb	ip, [r4]
   16eec:	cmp	r7, ip
   16ef0:	bne	16f08 <__assert_fail@plt+0x5acc>
   16ef4:	and	sl, sl, #2
   16ef8:	add	r4, r4, r0
   16efc:	cmp	sl, #0
   16f00:	moveq	r6, r7
   16f04:	moveq	r0, #0
   16f08:	subs	fp, fp, #1
   16f0c:	add	r5, r5, #24
   16f10:	moveq	r0, #0
   16f14:	cmp	r0, #0
   16f18:	bne	16ea8 <__assert_fail@plt+0x5a6c>
   16f1c:	uxtb	r3, r6
   16f20:	mov	fp, r6
   16f24:	ldr	r7, [sp]
   16f28:	cmp	r9, #0
   16f2c:	ldmib	sp, {r4, r6}
   16f30:	str	r3, [sp]
   16f34:	strne	r4, [sp, #4]
   16f38:	beq	17310 <__assert_fail@plt+0x5ed4>
   16f3c:	ldr	r5, [r8, #12]
   16f40:	mov	r3, #1
   16f44:	ands	sl, r5, #8
   16f48:	movne	sl, #0
   16f4c:	bne	16f9c <__assert_fail@plt+0x5b60>
   16f50:	ldr	r4, [r8, #4]
   16f54:	sub	r1, r4, #1
   16f58:	cmp	r1, #254	; 0xfe
   16f5c:	bhi	16f9c <__assert_fail@plt+0x5b60>
   16f60:	bl	112a4 <__ctype_b_loc@plt>
   16f64:	ldr	r0, [r0]
   16f68:	lsl	r1, r4, #1
   16f6c:	mov	r3, #1
   16f70:	ldrh	r1, [r0, r1]
   16f74:	tst	r1, #16384	; 0x4000
   16f78:	beq	16f9c <__assert_fail@plt+0x5b60>
   16f7c:	ldrb	r1, [r6]
   16f80:	cmp	r4, r1
   16f84:	bne	16f9c <__assert_fail@plt+0x5b60>
   16f88:	and	r5, r5, #2
   16f8c:	add	r6, r6, r3
   16f90:	cmp	r5, #0
   16f94:	moveq	sl, r4
   16f98:	moveq	r3, #0
   16f9c:	subs	r9, r9, #1
   16fa0:	add	r8, r8, #24
   16fa4:	moveq	r3, #0
   16fa8:	cmp	r3, #0
   16fac:	bne	16f3c <__assert_fail@plt+0x5b00>
   16fb0:	cmp	fp, #0
   16fb4:	uxtb	r6, sl
   16fb8:	ldr	r4, [sp, #4]
   16fbc:	beq	17140 <__assert_fail@plt+0x5d04>
   16fc0:	ldr	r3, [sp]
   16fc4:	lsl	r9, r3, #2
   16fc8:	cmp	sl, #0
   16fcc:	beq	1712c <__assert_fail@plt+0x5cf0>
   16fd0:	lsl	r8, r6, #2
   16fd4:	bl	11280 <__ctype_tolower_loc@plt>
   16fd8:	ldr	r3, [r0]
   16fdc:	ldr	r1, [r3, r9]
   16fe0:	ldr	r0, [r3, r8]
   16fe4:	subs	ip, r1, r0
   16fe8:	bne	16a10 <__assert_fail@plt+0x55d4>
   16fec:	ldr	r3, [sp]
   16ff0:	subs	ip, r6, r3
   16ff4:	bne	16a10 <__assert_fail@plt+0x55d4>
   16ff8:	adds	r0, sl, #0
   16ffc:	movne	r0, #1
   17000:	cmp	fp, #0
   17004:	rsbeq	ip, r0, #0
   17008:	rsbne	ip, r0, #1
   1700c:	cmp	ip, #0
   17010:	bne	16a10 <__assert_fail@plt+0x55d4>
   17014:	cmp	fp, #0
   17018:	bne	16a10 <__assert_fail@plt+0x55d4>
   1701c:	adds	r0, r4, #0
   17020:	movne	r0, #1
   17024:	cmp	r7, #0
   17028:	rsbeq	ip, r0, #0
   1702c:	rsbne	ip, r0, #1
   17030:	cmp	ip, #0
   17034:	bne	16a10 <__assert_fail@plt+0x55d4>
   17038:	cmp	r7, #0
   1703c:	beq	16a10 <__assert_fail@plt+0x55d4>
   17040:	mov	r1, r4
   17044:	mov	r0, r7
   17048:	add	sp, sp, #20
   1704c:	ldrd	r4, [sp]
   17050:	ldrd	r6, [sp, #8]
   17054:	ldrd	r8, [sp, #16]
   17058:	ldrd	sl, [sp, #24]
   1705c:	ldr	lr, [sp, #32]
   17060:	add	sp, sp, #36	; 0x24
   17064:	b	11208 <strcasecmp@plt>
   17068:	ldr	ip, [r1, #12]
   1706c:	b	16818 <__assert_fail@plt+0x53dc>
   17070:	ldr	r2, [r0, #12]
   17074:	b	167f0 <__assert_fail@plt+0x53b4>
   17078:	cmp	r4, #0
   1707c:	movne	fp, #0
   17080:	beq	16e84 <__assert_fail@plt+0x5a48>
   17084:	str	r3, [sp]
   17088:	bl	112a4 <__ctype_b_loc@plt>
   1708c:	ldrb	ip, [r4]
   17090:	ldr	r1, [r0]
   17094:	ldr	r3, [sp]
   17098:	lsl	r2, ip, #1
   1709c:	ldrh	r2, [r1, r2]
   170a0:	tst	r2, #8192	; 0x2000
   170a4:	beq	170bc <__assert_fail@plt+0x5c80>
   170a8:	ldrb	ip, [r4, #1]!
   170ac:	lsl	r2, ip, #1
   170b0:	ldrh	r2, [r1, r2]
   170b4:	tst	r2, #8192	; 0x2000
   170b8:	bne	170a8 <__assert_fail@plt+0x5c6c>
   170bc:	cmp	ip, #0
   170c0:	bne	170dc <__assert_fail@plt+0x5ca0>
   170c4:	b	170e4 <__assert_fail@plt+0x5ca8>
   170c8:	ldrb	r2, [r4, #1]!
   170cc:	cmp	r2, #0
   170d0:	lsl	r0, r2, #1
   170d4:	beq	170e4 <__assert_fail@plt+0x5ca8>
   170d8:	ldrh	r2, [r1, r0]
   170dc:	tst	r2, #8
   170e0:	beq	170c8 <__assert_fail@plt+0x5c8c>
   170e4:	cmp	ip, #45	; 0x2d
   170e8:	moveq	r0, fp
   170ec:	subne	r0, fp, #1
   170f0:	cmp	r0, #0
   170f4:	movne	ip, r0
   170f8:	bne	16a10 <__assert_fail@plt+0x55d4>
   170fc:	b	16e84 <__assert_fail@plt+0x5a48>
   17100:	cmp	r9, #0
   17104:	movne	fp, sl
   17108:	strne	r4, [sp, #4]
   1710c:	strne	fp, [sp]
   17110:	bne	16f3c <__assert_fail@plt+0x5b00>
   17114:	cmp	r7, #0
   17118:	beq	174e0 <__assert_fail@plt+0x60a4>
   1711c:	ldrb	r3, [r7]
   17120:	mov	fp, sl
   17124:	lsl	r9, r3, #2
   17128:	str	r3, [sp]
   1712c:	cmp	r4, #0
   17130:	beq	171e0 <__assert_fail@plt+0x5da4>
   17134:	ldrb	r6, [r4]
   17138:	mov	sl, #0
   1713c:	b	16fd0 <__assert_fail@plt+0x5b94>
   17140:	cmp	r7, #0
   17144:	beq	171f0 <__assert_fail@plt+0x5db4>
   17148:	ldrb	r3, [r7]
   1714c:	mov	fp, #0
   17150:	lsl	r9, r3, #2
   17154:	str	r3, [sp]
   17158:	b	16fc8 <__assert_fail@plt+0x5b8c>
   1715c:	ldr	r2, [r8, #12]
   17160:	tst	r2, #8
   17164:	beq	17170 <__assert_fail@plt+0x5d34>
   17168:	cmp	r4, #0
   1716c:	bne	174e8 <__assert_fail@plt+0x60ac>
   17170:	mov	ip, #1
   17174:	b	16a10 <__assert_fail@plt+0x55d4>
   17178:	ldr	lr, [r5, #4]
   1717c:	ldr	r1, [r5, #8]
   17180:	ldr	r0, [r8, #8]
   17184:	ldr	r2, [r8, #4]
   17188:	mvn	r3, r1
   1718c:	lsr	r3, r3, #31
   17190:	cmp	r3, r0, lsr #31
   17194:	subne	ip, r0, r1
   17198:	subeq	ip, r1, r0
   1719c:	cmp	ip, #0
   171a0:	subeq	ip, lr, r2
   171a4:	beq	169d0 <__assert_fail@plt+0x5594>
   171a8:	b	16a10 <__assert_fail@plt+0x55d4>
   171ac:	ldr	r2, [r5, #4]
   171b0:	ldr	r1, [r6, #8]
   171b4:	ldr	r0, [r5, #8]
   171b8:	ldr	lr, [r6, #4]
   171bc:	mvn	r3, r1
   171c0:	lsr	r3, r3, #31
   171c4:	cmp	r3, r0, lsr #31
   171c8:	subne	ip, r0, r1
   171cc:	subeq	ip, r1, r0
   171d0:	cmp	ip, #0
   171d4:	subeq	ip, lr, r2
   171d8:	beq	16b48 <__assert_fail@plt+0x570c>
   171dc:	b	16a10 <__assert_fail@plt+0x55d4>
   171e0:	mov	sl, r4
   171e4:	mov	r8, r4
   171e8:	mov	r6, r4
   171ec:	b	16fd4 <__assert_fail@plt+0x5b98>
   171f0:	mov	r9, r7
   171f4:	str	r7, [sp]
   171f8:	b	16fc8 <__assert_fail@plt+0x5b8c>
   171fc:	ldr	lr, [r7, #4]
   17200:	ldr	r1, [r7, #8]
   17204:	ldr	r0, [r8, #8]
   17208:	ldr	r2, [r8, #4]
   1720c:	mvn	r3, r1
   17210:	lsr	r3, r3, #31
   17214:	cmp	r3, r0, lsr #31
   17218:	subne	ip, r0, r1
   1721c:	subeq	ip, r1, r0
   17220:	cmp	ip, #0
   17224:	subeq	ip, lr, r2
   17228:	beq	16bb8 <__assert_fail@plt+0x577c>
   1722c:	b	16a10 <__assert_fail@plt+0x55d4>
   17230:	ldr	r2, [r4, #4]
   17234:	ldr	r1, [r9, #8]
   17238:	ldr	r0, [r4, #8]
   1723c:	ldr	lr, [r9, #4]
   17240:	mvn	r3, r1
   17244:	lsr	r3, r3, #31
   17248:	cmp	r3, r0, lsr #31
   1724c:	subne	ip, r0, r1
   17250:	subeq	ip, r1, r0
   17254:	cmp	ip, #0
   17258:	subeq	ip, lr, r2
   1725c:	beq	16a08 <__assert_fail@plt+0x55cc>
   17260:	b	16a10 <__assert_fail@plt+0x55d4>
   17264:	ldr	r2, [r4, #4]
   17268:	ldr	r1, [r9, #8]
   1726c:	ldr	r0, [r4, #8]
   17270:	ldr	lr, [r9, #4]
   17274:	mvn	r3, r1
   17278:	lsr	r3, r3, #31
   1727c:	cmp	r3, r0, lsr #31
   17280:	subne	ip, r0, r1
   17284:	subeq	ip, r1, r0
   17288:	cmp	ip, #0
   1728c:	subeq	ip, lr, r2
   17290:	beq	16b80 <__assert_fail@plt+0x5744>
   17294:	b	16a10 <__assert_fail@plt+0x55d4>
   17298:	ldr	r2, [r6, #4]
   1729c:	ldr	r1, [r7, #8]
   172a0:	ldr	r0, [r6, #8]
   172a4:	ldr	lr, [r7, #4]
   172a8:	mvn	r3, r1
   172ac:	lsr	r3, r3, #31
   172b0:	cmp	r3, r0, lsr #31
   172b4:	subne	ip, r0, r1
   172b8:	subeq	ip, r1, r0
   172bc:	cmp	ip, #0
   172c0:	subeq	ip, lr, r2
   172c4:	beq	16998 <__assert_fail@plt+0x555c>
   172c8:	b	16a10 <__assert_fail@plt+0x55d4>
   172cc:	mov	r7, ip
   172d0:	b	16dc0 <__assert_fail@plt+0x5984>
   172d4:	mov	r4, r9
   172d8:	b	16dfc <__assert_fail@plt+0x59c0>
   172dc:	ldr	r2, [sl, #4]
   172e0:	ldr	r1, [fp, #8]
   172e4:	ldr	r0, [sl, #8]
   172e8:	ldr	lr, [fp, #4]
   172ec:	mvn	r3, r1
   172f0:	lsr	r3, r3, #31
   172f4:	cmp	r3, r0, lsr #31
   172f8:	subne	ip, r0, r1
   172fc:	subeq	ip, r1, r0
   17300:	cmp	ip, #0
   17304:	subeq	ip, lr, r2
   17308:	beq	16b10 <__assert_fail@plt+0x56d4>
   1730c:	b	16a10 <__assert_fail@plt+0x55d4>
   17310:	cmp	fp, #0
   17314:	lslne	r9, fp, #2
   17318:	bne	1712c <__assert_fail@plt+0x5cf0>
   1731c:	cmp	r7, #0
   17320:	movne	sl, fp
   17324:	movne	r6, sl
   17328:	bne	17148 <__assert_fail@plt+0x5d0c>
   1732c:	str	r7, [sp]
   17330:	b	1712c <__assert_fail@plt+0x5cf0>
   17334:	ldr	r2, [sl, #4]
   17338:	ldr	r1, [fp, #8]
   1733c:	ldr	r0, [sl, #8]
   17340:	ldr	lr, [fp, #4]
   17344:	mvn	r3, r1
   17348:	lsr	r3, r3, #31
   1734c:	cmp	r3, r0, lsr #31
   17350:	subne	ip, r0, r1
   17354:	subeq	ip, r1, r0
   17358:	cmp	ip, #0
   1735c:	subeq	ip, lr, r2
   17360:	beq	16960 <__assert_fail@plt+0x5524>
   17364:	b	16a10 <__assert_fail@plt+0x55d4>
   17368:	ldr	r0, [r3, #8]
   1736c:	ldr	r1, [r2, #8]
   17370:	ldr	lr, [r2, #4]
   17374:	ldr	r3, [r3, #4]
   17378:	mvn	r2, r1
   1737c:	lsr	r2, r2, #31
   17380:	cmp	r2, r0, lsr #31
   17384:	subne	ip, r0, r1
   17388:	subeq	ip, r1, r0
   1738c:	cmp	ip, #0
   17390:	subeq	ip, lr, r3
   17394:	beq	16ad8 <__assert_fail@plt+0x569c>
   17398:	b	16a10 <__assert_fail@plt+0x55d4>
   1739c:	ldr	r2, [r4, #4]
   173a0:	ldr	r1, [r7, #8]
   173a4:	ldr	r0, [r4, #8]
   173a8:	ldr	lr, [r7, #4]
   173ac:	mvn	r3, r1
   173b0:	lsr	r3, r3, #31
   173b4:	cmp	r3, r0, lsr #31
   173b8:	subne	ip, r0, r1
   173bc:	subeq	ip, r1, r0
   173c0:	cmp	ip, #0
   173c4:	subeq	ip, lr, r2
   173c8:	beq	16d58 <__assert_fail@plt+0x591c>
   173cc:	b	16a10 <__assert_fail@plt+0x55d4>
   173d0:	ldr	r0, [r3, #8]
   173d4:	ldr	r1, [r2, #8]
   173d8:	ldr	lr, [r2, #4]
   173dc:	ldr	r3, [r3, #4]
   173e0:	mvn	r2, r1
   173e4:	lsr	r2, r2, #31
   173e8:	cmp	r2, r0, lsr #31
   173ec:	subne	ip, r0, r1
   173f0:	subeq	ip, r1, r0
   173f4:	cmp	ip, #0
   173f8:	subeq	ip, lr, r3
   173fc:	beq	16928 <__assert_fail@plt+0x54ec>
   17400:	b	16a10 <__assert_fail@plt+0x55d4>
   17404:	ldr	r2, [r8, #4]
   17408:	ldr	r1, [r9, #8]
   1740c:	ldr	r0, [r8, #8]
   17410:	ldr	lr, [r9, #4]
   17414:	mvn	r3, r1
   17418:	lsr	r3, r3, #31
   1741c:	cmp	r3, r0, lsr #31
   17420:	subne	ip, r0, r1
   17424:	subeq	ip, r1, r0
   17428:	cmp	ip, #0
   1742c:	subeq	ip, lr, r2
   17430:	beq	16d20 <__assert_fail@plt+0x58e4>
   17434:	b	16a10 <__assert_fail@plt+0x55d4>
   17438:	ldr	r2, [sl, #4]
   1743c:	ldr	r1, [fp, #8]
   17440:	ldr	r0, [sl, #8]
   17444:	ldr	lr, [fp, #4]
   17448:	mvn	r3, r1
   1744c:	lsr	r3, r3, #31
   17450:	cmp	r3, r0, lsr #31
   17454:	subne	ip, r0, r1
   17458:	subeq	ip, r1, r0
   1745c:	cmp	ip, #0
   17460:	subeq	ip, lr, r2
   17464:	beq	16ce8 <__assert_fail@plt+0x58ac>
   17468:	b	16a10 <__assert_fail@plt+0x55d4>
   1746c:	ldr	ip, [sp]
   17470:	ldr	r2, [r3, #4]
   17474:	ldr	r1, [r3, #8]
   17478:	ldr	lr, [ip, #4]
   1747c:	ldr	r0, [ip, #8]
   17480:	mvn	r3, r1
   17484:	lsr	r3, r3, #31
   17488:	cmp	r3, r0, lsr #31
   1748c:	subne	ip, r0, r1
   17490:	subeq	ip, r1, r0
   17494:	cmp	ip, #0
   17498:	subeq	ip, r2, lr
   1749c:	beq	16cb0 <__assert_fail@plt+0x5874>
   174a0:	b	16a10 <__assert_fail@plt+0x55d4>
   174a4:	ldr	r0, [sp, #4]
   174a8:	ldr	lr, [r2, #4]
   174ac:	ldr	r1, [r2, #8]
   174b0:	ldr	r2, [sp, #4]
   174b4:	ldr	r0, [r0, #8]
   174b8:	mvn	ip, r1
   174bc:	lsr	ip, ip, #31
   174c0:	ldr	r2, [r2, #4]
   174c4:	cmp	ip, r0, lsr #31
   174c8:	subne	ip, r0, r1
   174cc:	subeq	ip, r1, r0
   174d0:	cmp	ip, #0
   174d4:	subeq	ip, lr, r2
   174d8:	beq	16c70 <__assert_fail@plt+0x5834>
   174dc:	b	16a10 <__assert_fail@plt+0x55d4>
   174e0:	mov	fp, r7
   174e4:	b	1732c <__assert_fail@plt+0x5ef0>
   174e8:	mov	fp, #1
   174ec:	b	17084 <__assert_fail@plt+0x5c48>

000174f0 <argp_failure@@Base>:
   174f0:	push	{r3}		; (str r3, [sp, #-4]!)
   174f4:	strd	r4, [sp, #-20]!	; 0xffffffec
   174f8:	subs	r5, r0, #0
   174fc:	strd	r6, [sp, #8]
   17500:	mov	r7, r1
   17504:	mov	r6, r2
   17508:	str	lr, [sp, #16]
   1750c:	sub	sp, sp, #200	; 0xc8
   17510:	beq	1766c <argp_failure@@Base+0x17c>
   17514:	ldr	r3, [r5, #16]
   17518:	tst	r3, #2
   1751c:	bne	17650 <argp_failure@@Base+0x160>
   17520:	ldr	r4, [r5, #44]	; 0x2c
   17524:	cmp	r4, #0
   17528:	beq	17650 <argp_failure@@Base+0x160>
   1752c:	mov	r0, r4
   17530:	bl	113d0 <flockfile@plt>
   17534:	ldr	r0, [r5, #40]	; 0x28
   17538:	mov	r1, r4
   1753c:	bl	110e8 <fputs_unlocked@plt>
   17540:	ldr	r3, [sp, #220]	; 0xdc
   17544:	cmp	r3, #0
   17548:	beq	175a4 <argp_failure@@Base+0xb4>
   1754c:	ldr	r3, [r4, #20]
   17550:	add	r1, sp, #224	; 0xe0
   17554:	ldr	r2, [r4, #24]
   17558:	str	r1, [sp]
   1755c:	cmp	r3, r2
   17560:	addcc	r1, r3, #1
   17564:	movcc	r2, #58	; 0x3a
   17568:	strcc	r1, [r4, #20]
   1756c:	strbcc	r2, [r3]
   17570:	bcs	176dc <argp_failure@@Base+0x1ec>
   17574:	ldr	r3, [r4, #20]
   17578:	ldr	r2, [r4, #24]
   1757c:	cmp	r3, r2
   17580:	addcc	r1, r3, #1
   17584:	movcc	r2, #32
   17588:	strcc	r1, [r4, #20]
   1758c:	strbcc	r2, [r3]
   17590:	bcs	176cc <argp_failure@@Base+0x1dc>
   17594:	mov	r0, r4
   17598:	ldr	r2, [sp]
   1759c:	ldr	r1, [sp, #220]	; 0xdc
   175a0:	bl	11394 <vfprintf@plt>
   175a4:	cmp	r6, #0
   175a8:	ldr	r3, [r4, #20]
   175ac:	ldr	r2, [r4, #24]
   175b0:	beq	17614 <argp_failure@@Base+0x124>
   175b4:	cmp	r2, r3
   175b8:	addhi	r1, r3, #1
   175bc:	movhi	r2, #58	; 0x3a
   175c0:	strhi	r1, [r4, #20]
   175c4:	strbhi	r2, [r3]
   175c8:	bls	176fc <argp_failure@@Base+0x20c>
   175cc:	ldr	r3, [r4, #20]
   175d0:	ldr	r2, [r4, #24]
   175d4:	cmp	r3, r2
   175d8:	addcc	r1, r3, #1
   175dc:	movcc	r2, #32
   175e0:	strcc	r1, [r4, #20]
   175e4:	strbcc	r2, [r3]
   175e8:	bcs	176ec <argp_failure@@Base+0x1fc>
   175ec:	mov	r2, #200	; 0xc8
   175f0:	mov	r1, sp
   175f4:	mov	r0, r6
   175f8:	bl	11310 <strerror_r@plt>
   175fc:	cmp	r0, #0
   17600:	beq	176b0 <argp_failure@@Base+0x1c0>
   17604:	mov	r1, r4
   17608:	bl	110e8 <fputs_unlocked@plt>
   1760c:	ldr	r3, [r4, #20]
   17610:	ldr	r2, [r4, #24]
   17614:	cmp	r3, r2
   17618:	addcc	r1, r3, #1
   1761c:	movcc	r2, #10
   17620:	strcc	r1, [r4, #20]
   17624:	strbcc	r2, [r3]
   17628:	bcs	176a0 <argp_failure@@Base+0x1b0>
   1762c:	mov	r0, r4
   17630:	bl	11214 <funlockfile@plt>
   17634:	cmp	r7, #0
   17638:	beq	17650 <argp_failure@@Base+0x160>
   1763c:	cmp	r5, #0
   17640:	beq	17698 <argp_failure@@Base+0x1a8>
   17644:	ldr	r3, [r5, #16]
   17648:	tst	r3, #32
   1764c:	beq	17698 <argp_failure@@Base+0x1a8>
   17650:	add	sp, sp, #200	; 0xc8
   17654:	ldrd	r4, [sp]
   17658:	ldrd	r6, [sp, #8]
   1765c:	ldr	lr, [sp, #16]
   17660:	add	sp, sp, #20
   17664:	add	sp, sp, #4
   17668:	bx	lr
   1766c:	movw	r3, #1576	; 0x628
   17670:	movt	r3, #3
   17674:	ldr	r4, [r3]
   17678:	cmp	r4, #0
   1767c:	beq	17650 <argp_failure@@Base+0x160>
   17680:	mov	r0, r4
   17684:	bl	113d0 <flockfile@plt>
   17688:	movw	r3, #1568	; 0x620
   1768c:	movt	r3, #3
   17690:	ldr	r0, [r3]
   17694:	b	17538 <argp_failure@@Base+0x48>
   17698:	mov	r0, r7
   1769c:	bl	112bc <exit@plt>
   176a0:	mov	r1, #10
   176a4:	mov	r0, r4
   176a8:	bl	11364 <__overflow@plt>
   176ac:	b	1762c <argp_failure@@Base+0x13c>
   176b0:	mov	r0, r6
   176b4:	bl	11274 <strerror@plt>
   176b8:	cmp	r0, #0
   176bc:	movw	r3, #59104	; 0xe6e0
   176c0:	movt	r3, #1
   176c4:	moveq	r0, r3
   176c8:	b	17604 <argp_failure@@Base+0x114>
   176cc:	mov	r1, #32
   176d0:	mov	r0, r4
   176d4:	bl	11364 <__overflow@plt>
   176d8:	b	17594 <argp_failure@@Base+0xa4>
   176dc:	mov	r1, #58	; 0x3a
   176e0:	mov	r0, r4
   176e4:	bl	11364 <__overflow@plt>
   176e8:	b	17574 <argp_failure@@Base+0x84>
   176ec:	mov	r1, #32
   176f0:	mov	r0, r4
   176f4:	bl	11364 <__overflow@plt>
   176f8:	b	175ec <argp_failure@@Base+0xfc>
   176fc:	mov	r1, #58	; 0x3a
   17700:	mov	r0, r4
   17704:	bl	11364 <__overflow@plt>
   17708:	b	175cc <argp_failure@@Base+0xdc>
   1770c:	cmp	r2, #0
   17710:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17714:	strd	r6, [sp, #8]
   17718:	strd	r8, [sp, #16]
   1771c:	strd	sl, [sp, #24]
   17720:	add	fp, sp, #32
   17724:	str	lr, [sp, #32]
   17728:	sub	sp, sp, #124	; 0x7c
   1772c:	str	r2, [fp, #-132]	; 0xffffff7c
   17730:	str	r0, [fp, #-108]	; 0xffffff94
   17734:	str	r3, [fp, #-104]	; 0xffffff98
   17738:	str	r1, [fp, #-100]	; 0xffffff9c
   1773c:	beq	17bf0 <argp_failure@@Base+0x700>
   17740:	mov	r0, r2
   17744:	movw	r9, #1504	; 0x5e0
   17748:	movt	r9, #3
   1774c:	bl	113d0 <flockfile@plt>
   17750:	ldr	r3, [r9, #36]	; 0x24
   17754:	cmp	r3, #0
   17758:	beq	17c0c <argp_failure@@Base+0x71c>
   1775c:	mov	r3, #0
   17760:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17764:	mov	r1, r3
   17768:	ldr	r2, [r9, #32]
   1776c:	bl	1b9b4 <argp_parse@@Base+0x24b8>
   17770:	subs	r7, r0, #0
   17774:	beq	18a68 <argp_failure@@Base+0x1578>
   17778:	ldr	r3, [fp, #-104]	; 0xffffff98
   1777c:	ands	r3, r3, #11
   17780:	streq	r3, [fp, #-112]	; 0xffffff90
   17784:	bne	17f98 <argp_failure@@Base+0xaa8>
   17788:	ldr	r3, [fp, #-104]	; 0xffffff98
   1778c:	ands	r4, r3, #3
   17790:	bne	17ddc <argp_failure@@Base+0x8ec>
   17794:	ldr	r3, [fp, #-104]	; 0xffffff98
   17798:	tst	r3, #16
   1779c:	bne	17da8 <argp_failure@@Base+0x8b8>
   177a0:	ldr	r3, [fp, #-104]	; 0xffffff98
   177a4:	tst	r3, #4
   177a8:	and	r5, r3, #8
   177ac:	bne	17d20 <argp_failure@@Base+0x830>
   177b0:	cmp	r5, #0
   177b4:	beq	17b5c <argp_failure@@Base+0x66c>
   177b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   177bc:	ldr	r3, [r3, #4]
   177c0:	cmp	r3, #0
   177c4:	str	r3, [fp, #-116]	; 0xffffff8c
   177c8:	beq	17b5c <argp_failure@@Base+0x66c>
   177cc:	cmp	r4, #0
   177d0:	bne	17d50 <argp_failure@@Base+0x860>
   177d4:	ldr	r3, [fp, #-112]	; 0xffffff90
   177d8:	ldr	r3, [r3]
   177dc:	str	r4, [fp, #-88]	; 0xffffffa8
   177e0:	str	r4, [fp, #-84]	; 0xffffffac
   177e4:	str	r4, [fp, #-80]	; 0xffffffb0
   177e8:	mov	r0, r3
   177ec:	movw	r3, #59940	; 0xea24
   177f0:	movt	r3, #1
   177f4:	ldr	r2, [r7, #16]
   177f8:	str	r3, [fp, #-140]	; 0xffffff74
   177fc:	movw	r3, #59552	; 0xe8a0
   17800:	movt	r3, #1
   17804:	ldr	r1, [r7, #24]
   17808:	str	r3, [fp, #-144]	; 0xffffff70
   1780c:	ldr	r3, [r7, #28]
   17810:	str	r9, [fp, #-96]	; 0xffffffa0
   17814:	mov	r9, r0
   17818:	sub	r3, r3, r1
   1781c:	ldr	r4, [r9]
   17820:	cmp	r3, r2
   17824:	ldr	r8, [r9, #8]
   17828:	bhi	184ec <argp_failure@@Base+0xffc>
   1782c:	mov	r1, #1
   17830:	ldr	r0, [r7, #4]
   17834:	ldr	r6, [r4, #12]
   17838:	str	r0, [fp, #-120]	; 0xffffff88
   1783c:	mov	r0, #0
   17840:	str	r0, [r7, #4]
   17844:	ldr	r0, [r7, #12]
   17848:	str	r1, [fp, #-64]	; 0xffffffc0
   1784c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17850:	str	r0, [fp, #-124]	; 0xffffff84
   17854:	ands	r0, r6, #8
   17858:	str	r9, [fp, #-76]	; 0xffffffb4
   1785c:	str	r0, [fp, #-128]	; 0xffffff80
   17860:	sub	r0, fp, #88	; 0x58
   17864:	str	r7, [fp, #-72]	; 0xffffffb8
   17868:	str	r1, [fp, #-60]	; 0xffffffc4
   1786c:	movne	r1, #0
   17870:	str	r0, [fp, #-68]	; 0xffffffbc
   17874:	strne	r1, [fp, #-128]	; 0xffffff80
   17878:	bne	178b0 <argp_failure@@Base+0x3c0>
   1787c:	ldr	r0, [r9, #4]
   17880:	cmp	r0, #0
   17884:	beq	178b0 <argp_failure@@Base+0x3c0>
   17888:	add	r1, r4, #24
   1788c:	ldr	ip, [r1, #-24]	; 0xffffffe8
   17890:	cmp	ip, #0
   17894:	beq	178a4 <argp_failure@@Base+0x3b4>
   17898:	ldr	ip, [r1, #-12]
   1789c:	tst	ip, #2
   178a0:	beq	1861c <argp_failure@@Base+0x112c>
   178a4:	subs	r0, r0, #1
   178a8:	add	r1, r1, #24
   178ac:	bne	1788c <argp_failure@@Base+0x39c>
   178b0:	cmp	r3, r2
   178b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   178b8:	ldr	r5, [r3, #8]
   178bc:	bhi	184e0 <argp_failure@@Base+0xff0>
   178c0:	str	r5, [r7, #12]
   178c4:	ldr	sl, [r9, #4]
   178c8:	cmp	sl, #0
   178cc:	beq	1793c <argp_failure@@Base+0x44c>
   178d0:	mov	r5, r4
   178d4:	str	r9, [fp, #-136]	; 0xffffff78
   178d8:	mov	r9, r7
   178dc:	mov	r7, r4
   178e0:	mov	r4, r8
   178e4:	ldr	r8, [r5, #12]
   178e8:	tst	r8, #8
   178ec:	bne	17924 <argp_failure@@Base+0x434>
   178f0:	ldr	r6, [r5, #4]
   178f4:	sub	r2, r6, #1
   178f8:	cmp	r2, #254	; 0xfe
   178fc:	bhi	17924 <argp_failure@@Base+0x434>
   17900:	bl	112a4 <__ctype_b_loc@plt>
   17904:	ldr	r1, [r0]
   17908:	lsl	r2, r6, #1
   1790c:	ldrh	r2, [r1, r2]
   17910:	tst	r2, #16384	; 0x4000
   17914:	beq	17924 <argp_failure@@Base+0x434>
   17918:	ldrb	r2, [r4]
   1791c:	cmp	r6, r2
   17920:	beq	180f0 <argp_failure@@Base+0xc00>
   17924:	subs	sl, sl, #1
   17928:	add	r5, r5, #24
   1792c:	bne	178e4 <argp_failure@@Base+0x3f4>
   17930:	mov	r4, r7
   17934:	mov	r7, r9
   17938:	ldr	r9, [fp, #-136]	; 0xffffff78
   1793c:	ldr	r2, [r4, #12]
   17940:	ldr	r1, [r7, #24]
   17944:	ldr	r3, [r7, #28]
   17948:	tst	r2, #8
   1794c:	ldr	r2, [r7, #16]
   17950:	sub	r3, r3, r1
   17954:	beq	18100 <argp_failure@@Base+0xc10>
   17958:	cmp	r3, r2
   1795c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17960:	ldr	r5, [r3, #16]
   17964:	bhi	18680 <argp_failure@@Base+0x1190>
   17968:	str	r5, [r7, #12]
   1796c:	ldr	r6, [r9, #4]
   17970:	cmp	r6, #0
   17974:	addne	r5, r4, #24
   17978:	bne	1798c <argp_failure@@Base+0x49c>
   1797c:	b	17a1c <argp_failure@@Base+0x52c>
   17980:	subs	r6, r6, #1
   17984:	add	r5, r5, #24
   17988:	beq	17a1c <argp_failure@@Base+0x52c>
   1798c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   17990:	cmp	r3, #0
   17994:	beq	17980 <argp_failure@@Base+0x490>
   17998:	ldr	r3, [r5, #-12]
   1799c:	tst	r3, #2
   179a0:	bne	17980 <argp_failure@@Base+0x490>
   179a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   179a8:	sub	r1, fp, #76	; 0x4c
   179ac:	ldr	r0, [r3, #16]
   179b0:	bl	15f90 <__assert_fail@plt+0x4b54>
   179b4:	ldr	sl, [r5, #-24]	; 0xffffffe8
   179b8:	mov	r0, sl
   179bc:	bl	112d4 <strlen@plt>
   179c0:	subs	r8, r0, #0
   179c4:	beq	17980 <argp_failure@@Base+0x490>
   179c8:	ldr	ip, [r7, #28]
   179cc:	mov	r1, r8
   179d0:	mov	r0, r7
   179d4:	ldr	lr, [r7, #32]
   179d8:	add	r2, ip, r8
   179dc:	cmp	lr, r2
   179e0:	bcs	179f4 <argp_failure@@Base+0x504>
   179e4:	bl	1c0dc <argp_parse@@Base+0x2be0>
   179e8:	cmp	r0, #0
   179ec:	beq	17980 <argp_failure@@Base+0x490>
   179f0:	ldr	ip, [r7, #28]
   179f4:	mov	r2, r8
   179f8:	mov	r1, sl
   179fc:	mov	r0, ip
   17a00:	add	r5, r5, #24
   17a04:	bl	11184 <memcpy@plt>
   17a08:	ldr	r2, [r7, #28]
   17a0c:	subs	r6, r6, #1
   17a10:	add	r3, r2, r8
   17a14:	str	r3, [r7, #28]
   17a18:	bne	1798c <argp_failure@@Base+0x49c>
   17a1c:	ldr	r2, [r7, #16]
   17a20:	ldr	r1, [r7, #24]
   17a24:	ldr	r3, [r7, #28]
   17a28:	sub	r3, r3, r1
   17a2c:	cmp	r3, r2
   17a30:	bhi	184d4 <argp_failure@@Base+0xfe4>
   17a34:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17a38:	mov	r2, #0
   17a3c:	str	r2, [r7, #4]
   17a40:	cmp	r3, r2
   17a44:	beq	181b4 <argp_failure@@Base+0xcc4>
   17a48:	ldr	r3, [r4, #12]
   17a4c:	tst	r3, #8
   17a50:	bne	17a7c <argp_failure@@Base+0x58c>
   17a54:	ldr	r5, [r4, #4]
   17a58:	sub	r3, r5, #1
   17a5c:	cmp	r3, #254	; 0xfe
   17a60:	bhi	17a7c <argp_failure@@Base+0x58c>
   17a64:	bl	112a4 <__ctype_b_loc@plt>
   17a68:	ldr	r3, [r0]
   17a6c:	lsl	r5, r5, #1
   17a70:	ldrh	r3, [r3, r5]
   17a74:	tst	r3, #16384	; 0x4000
   17a78:	bne	17a88 <argp_failure@@Base+0x598>
   17a7c:	ldr	r3, [r4]
   17a80:	cmp	r3, #0
   17a84:	beq	187b4 <argp_failure@@Base+0x12c4>
   17a88:	ldr	r2, [r7, #16]
   17a8c:	ldr	r1, [r7, #24]
   17a90:	ldr	r3, [r7, #28]
   17a94:	sub	r0, r3, r1
   17a98:	cmp	r0, r2
   17a9c:	bhi	18508 <argp_failure@@Base+0x1018>
   17aa0:	ldr	r0, [fp, #-120]	; 0xffffff88
   17aa4:	str	r0, [r7, #4]
   17aa8:	ldr	r0, [fp, #-116]	; 0xffffff8c
   17aac:	add	r9, r9, #28
   17ab0:	subs	r0, r0, #1
   17ab4:	str	r0, [fp, #-116]	; 0xffffff8c
   17ab8:	ldr	r0, [fp, #-124]	; 0xffffff84
   17abc:	str	r0, [r7, #12]
   17ac0:	bne	17818 <argp_failure@@Base+0x328>
   17ac4:	ldr	r9, [fp, #-96]	; 0xffffffa0
   17ac8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17acc:	cmp	r3, #0
   17ad0:	beq	17b58 <argp_failure@@Base+0x668>
   17ad4:	ldr	r3, [r9, #4]
   17ad8:	cmp	r3, #0
   17adc:	beq	17b58 <argp_failure@@Base+0x668>
   17ae0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17ae4:	cmp	r1, #0
   17ae8:	beq	18b90 <argp_failure@@Base+0x16a0>
   17aec:	ldr	r5, [r1]
   17af0:	cmp	r5, #0
   17af4:	beq	18c80 <argp_failure@@Base+0x1790>
   17af8:	ldr	r4, [r5, #20]
   17afc:	cmp	r4, #0
   17b00:	beq	18c20 <argp_failure@@Base+0x1730>
   17b04:	mov	r0, r5
   17b08:	movw	r4, #59128	; 0xe6f8
   17b0c:	movt	r4, #1
   17b10:	bl	1a3b4 <argp_parse@@Base+0xeb8>
   17b14:	mov	r2, r0
   17b18:	mov	r1, r4
   17b1c:	ldr	r3, [r5, #20]
   17b20:	mov	r0, #5
   17b24:	movt	r0, #512	; 0x200
   17b28:	blx	r3
   17b2c:	subs	r5, r0, #0
   17b30:	beq	17b58 <argp_failure@@Base+0x668>
   17b34:	ldrb	r3, [r5]
   17b38:	subs	r4, r5, r4
   17b3c:	movne	r4, #1
   17b40:	cmp	r3, #0
   17b44:	bne	18b9c <argp_failure@@Base+0x16ac>
   17b48:	cmp	r4, #0
   17b4c:	beq	17b58 <argp_failure@@Base+0x668>
   17b50:	mov	r0, r5
   17b54:	bl	1a534 <argp_parse@@Base+0x1038>
   17b58:	mov	r4, #1
   17b5c:	ldr	r3, [fp, #-104]	; 0xffffff98
   17b60:	tst	r3, #32
   17b64:	bne	1808c <argp_failure@@Base+0xb9c>
   17b68:	ldr	r3, [fp, #-104]	; 0xffffff98
   17b6c:	tst	r3, #64	; 0x40
   17b70:	beq	17ba0 <argp_failure@@Base+0x6b0>
   17b74:	movw	r5, #1756	; 0x6dc
   17b78:	movt	r5, #3
   17b7c:	ldr	r2, [r5]
   17b80:	cmp	r2, #0
   17b84:	beq	17ba0 <argp_failure@@Base+0x6b0>
   17b88:	cmp	r4, #0
   17b8c:	bne	180c8 <argp_failure@@Base+0xbd8>
   17b90:	movw	r1, #59584	; 0xe8c0
   17b94:	movt	r1, #1
   17b98:	mov	r0, r7
   17b9c:	bl	1c0fc <argp_parse@@Base+0x2c00>
   17ba0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17ba4:	bl	11214 <funlockfile@plt>
   17ba8:	ldr	r3, [fp, #-112]	; 0xffffff90
   17bac:	cmp	r3, #0
   17bb0:	beq	17be8 <argp_failure@@Base+0x6f8>
   17bb4:	ldr	r0, [r3, #12]
   17bb8:	cmp	r0, #0
   17bbc:	beq	17bd0 <argp_failure@@Base+0x6e0>
   17bc0:	ldr	r4, [r0, #24]
   17bc4:	bl	1a534 <argp_parse@@Base+0x1038>
   17bc8:	subs	r0, r4, #0
   17bcc:	bne	17bc0 <argp_failure@@Base+0x6d0>
   17bd0:	ldr	r3, [fp, #-112]	; 0xffffff90
   17bd4:	ldr	r3, [r3, #4]
   17bd8:	cmp	r3, #0
   17bdc:	bne	18920 <argp_failure@@Base+0x1430>
   17be0:	ldr	r0, [fp, #-112]	; 0xffffff90
   17be4:	bl	1a534 <argp_parse@@Base+0x1038>
   17be8:	mov	r0, r7
   17bec:	bl	1bfac <argp_parse@@Base+0x2ab0>
   17bf0:	sub	sp, fp, #32
   17bf4:	ldrd	r4, [sp]
   17bf8:	ldrd	r6, [sp, #8]
   17bfc:	ldrd	r8, [sp, #16]
   17c00:	ldrd	sl, [sp, #24]
   17c04:	add	sp, sp, #32
   17c08:	pop	{pc}		; (ldr pc, [sp], #4)
   17c0c:	movw	r0, #59244	; 0xe76c
   17c10:	movt	r0, #1
   17c14:	bl	11244 <getenv@plt>
   17c18:	subs	r8, r0, #0
   17c1c:	ldrd	r2, [r9]
   17c20:	sub	sl, fp, #76	; 0x4c
   17c24:	ldrd	r0, [r9, #8]
   17c28:	ldrd	r4, [r9, #16]
   17c2c:	strd	r2, [fp, #-76]	; 0xffffffb4
   17c30:	ldrd	r2, [r9, #24]
   17c34:	strd	r0, [sl, #8]
   17c38:	ldrd	r0, [r9, #32]
   17c3c:	strd	r4, [sl, #16]
   17c40:	strd	r2, [sl, #24]
   17c44:	strd	r0, [sl, #32]
   17c48:	beq	1775c <argp_failure@@Base+0x26c>
   17c4c:	ldrb	r6, [r8]
   17c50:	cmp	r6, #0
   17c54:	beq	17ca0 <argp_failure@@Base+0x7b0>
   17c58:	bl	112a4 <__ctype_b_loc@plt>
   17c5c:	mov	r3, r0
   17c60:	mov	r0, r6
   17c64:	mov	r6, r3
   17c68:	ldr	r1, [r6]
   17c6c:	lsl	r3, r0, #1
   17c70:	ldrh	r3, [r1, r3]
   17c74:	tst	r3, #8192	; 0x2000
   17c78:	beq	17c90 <argp_failure@@Base+0x7a0>
   17c7c:	ldrb	r0, [r8, #1]!
   17c80:	lsl	r3, r0, #1
   17c84:	ldrh	r3, [r1, r3]
   17c88:	tst	r3, #8192	; 0x2000
   17c8c:	bne	17c7c <argp_failure@@Base+0x78c>
   17c90:	ands	r2, r3, #1024	; 0x400
   17c94:	bne	18358 <argp_failure@@Base+0xe68>
   17c98:	cmp	r0, #0
   17c9c:	bne	18a74 <argp_failure@@Base+0x1584>
   17ca0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17ca4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ca8:	cmp	r3, r2
   17cac:	ble	18c2c <argp_failure@@Base+0x173c>
   17cb0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17cb4:	cmp	r3, r2
   17cb8:	ble	18c58 <argp_failure@@Base+0x1768>
   17cbc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17cc0:	cmp	r3, r2
   17cc4:	ble	18c60 <argp_failure@@Base+0x1770>
   17cc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17ccc:	cmp	r3, r2
   17cd0:	ble	18c68 <argp_failure@@Base+0x1778>
   17cd4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17cd8:	cmp	r3, r2
   17cdc:	ble	18c70 <argp_failure@@Base+0x1780>
   17ce0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17ce4:	cmp	r3, r2
   17ce8:	ble	18c78 <argp_failure@@Base+0x1788>
   17cec:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   17cf0:	mov	ip, #1
   17cf4:	ldrd	r4, [sl, #8]
   17cf8:	ldrd	r2, [sl, #32]
   17cfc:	strd	r0, [r9]
   17d00:	ldrd	r0, [sl, #24]
   17d04:	strd	r4, [r9, #8]
   17d08:	strd	r2, [r9, #32]
   17d0c:	ldrd	r2, [sl, #16]
   17d10:	strd	r2, [r9, #16]
   17d14:	strd	r0, [r9, #24]
   17d18:	str	ip, [r9, #36]	; 0x24
   17d1c:	b	1775c <argp_failure@@Base+0x26c>
   17d20:	ldr	r3, [fp, #4]
   17d24:	movw	r1, #59496	; 0xe868
   17d28:	movt	r1, #1
   17d2c:	mov	r0, r7
   17d30:	mov	r2, r3
   17d34:	bl	1c0fc <argp_parse@@Base+0x2c00>
   17d38:	cmp	r5, #0
   17d3c:	beq	17b58 <argp_failure@@Base+0x668>
   17d40:	ldr	r3, [fp, #-112]	; 0xffffff90
   17d44:	ldr	r3, [r3, #4]
   17d48:	cmp	r3, #0
   17d4c:	beq	17b58 <argp_failure@@Base+0x668>
   17d50:	ldr	r3, [r7, #28]
   17d54:	ldr	r2, [r7, #32]
   17d58:	cmp	r3, r2
   17d5c:	bcs	18ac8 <argp_failure@@Base+0x15d8>
   17d60:	add	r1, r3, #1
   17d64:	mov	r2, #10
   17d68:	str	r1, [r7, #28]
   17d6c:	strb	r2, [r3]
   17d70:	ldr	r3, [fp, #-112]	; 0xffffff90
   17d74:	ldr	r3, [r3, #4]
   17d78:	mov	r2, r3
   17d7c:	str	r3, [fp, #-116]	; 0xffffff8c
   17d80:	mov	r3, #0
   17d84:	cmp	r2, r3
   17d88:	ldr	r2, [fp, #-112]	; 0xffffff90
   17d8c:	ldr	r2, [r2]
   17d90:	str	r3, [fp, #-88]	; 0xffffffa8
   17d94:	str	r3, [fp, #-84]	; 0xffffffac
   17d98:	str	r3, [fp, #-80]	; 0xffffffb0
   17d9c:	mov	r0, r2
   17da0:	bne	177ec <argp_failure@@Base+0x2fc>
   17da4:	b	17b58 <argp_failure@@Base+0x668>
   17da8:	mov	r0, #1
   17dac:	mov	r3, #0
   17db0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17db4:	mov	r2, r3
   17db8:	stm	sp, {r0, r7}
   17dbc:	ldr	r0, [fp, #-108]	; 0xffffff94
   17dc0:	bl	161dc <__assert_fail@plt+0x4da0>
   17dc4:	ldr	r3, [fp, #-104]	; 0xffffff98
   17dc8:	orr	r4, r4, r0
   17dcc:	tst	r3, #4
   17dd0:	and	r5, r3, #8
   17dd4:	beq	177b0 <argp_failure@@Base+0x2c0>
   17dd8:	b	17d20 <argp_failure@@Base+0x830>
   17ddc:	ldr	r3, [fp, #-108]	; 0xffffff94
   17de0:	ldr	r0, [r3, #8]
   17de4:	ldr	r5, [r3, #16]
   17de8:	cmp	r0, #0
   17dec:	moveq	r4, r0
   17df0:	beq	17e04 <argp_failure@@Base+0x914>
   17df4:	mov	r1, #10
   17df8:	bl	112e0 <strchr@plt>
   17dfc:	adds	r4, r0, #0
   17e00:	movne	r4, #1
   17e04:	cmp	r5, #0
   17e08:	beq	17e34 <argp_failure@@Base+0x944>
   17e0c:	ldr	r3, [r5]
   17e10:	cmp	r3, #0
   17e14:	beq	17e34 <argp_failure@@Base+0x944>
   17e18:	ldr	r0, [r3, #8]
   17e1c:	ldr	r1, [r3, #16]
   17e20:	bl	14dcc <__assert_fail@plt+0x3990>
   17e24:	ldr	r3, [r5, #16]!
   17e28:	add	r4, r4, r0
   17e2c:	cmp	r3, #0
   17e30:	bne	17e18 <argp_failure@@Base+0x928>
   17e34:	add	r3, r4, #7
   17e38:	sub	sl, fp, #76	; 0x4c
   17e3c:	bic	r3, r3, #7
   17e40:	movw	r8, #59464	; 0xe848
   17e44:	movt	r8, #1
   17e48:	sub	sp, sp, r3
   17e4c:	movw	r3, #59472	; 0xe850
   17e50:	movt	r3, #1
   17e54:	mov	r2, r4
   17e58:	mov	r1, #0
   17e5c:	str	r3, [fp, #-124]	; 0xffffff84
   17e60:	add	r3, sp, #8
   17e64:	mov	r4, #1
   17e68:	mov	r0, r3
   17e6c:	str	r3, [fp, #-96]	; 0xffffffa0
   17e70:	movw	r3, #59456	; 0xe840
   17e74:	movt	r3, #1
   17e78:	str	r3, [fp, #-128]	; 0xffffff80
   17e7c:	bl	11328 <memset@plt>
   17e80:	str	r8, [fp, #-120]	; 0xffffff88
   17e84:	str	sl, [fp, #-116]	; 0xffffff8c
   17e88:	ldr	sl, [fp, #-112]	; 0xffffff90
   17e8c:	ldr	r8, [fp, #-104]	; 0xffffff98
   17e90:	b	17f70 <argp_failure@@Base+0xa80>
   17e94:	cmp	r4, #0
   17e98:	mov	r0, r7
   17e9c:	ldr	r1, [fp, #-120]	; 0xffffff88
   17ea0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17ea4:	ldrne	r2, [fp, #-128]	; 0xffffff80
   17ea8:	ldreq	r2, [fp, #-124]	; 0xffffff84
   17eac:	ldr	r4, [r7, #12]
   17eb0:	str	r5, [r7, #12]
   17eb4:	str	r3, [fp, #-76]	; 0xffffffb4
   17eb8:	ldr	r3, [fp, #4]
   17ebc:	bl	1c0fc <argp_parse@@Base+0x2c00>
   17ec0:	ldr	r2, [r7, #16]
   17ec4:	ldr	r1, [r7, #24]
   17ec8:	ldr	r3, [r7, #28]
   17ecc:	ldr	r5, [r9, #28]
   17ed0:	sub	r3, r3, r1
   17ed4:	cmp	r3, r2
   17ed8:	bhi	18080 <argp_failure@@Base+0xb90>
   17edc:	tst	r8, #2
   17ee0:	ldr	r6, [r7, #4]
   17ee4:	str	r5, [r7, #4]
   17ee8:	beq	1806c <argp_failure@@Base+0xb7c>
   17eec:	ldr	r3, [sl, #4]
   17ef0:	cmp	r3, #0
   17ef4:	bne	18858 <argp_failure@@Base+0x1368>
   17ef8:	mov	r3, #1
   17efc:	str	r7, [sp]
   17f00:	ldr	r2, [fp, #-116]	; 0xffffff8c
   17f04:	ldr	r0, [fp, #-108]	; 0xffffff94
   17f08:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17f0c:	bl	15534 <__assert_fail@plt+0x40f8>
   17f10:	ldr	r1, [r7, #16]
   17f14:	mov	r5, r0
   17f18:	ldrd	r2, [r7, #24]
   17f1c:	sub	r2, r3, r2
   17f20:	cmp	r2, r1
   17f24:	strls	r4, [r7, #12]
   17f28:	bhi	1803c <argp_failure@@Base+0xb4c>
   17f2c:	ldr	r2, [r7, #32]
   17f30:	str	r6, [r7, #4]
   17f34:	cmp	r2, r3
   17f38:	bhi	17f54 <argp_failure@@Base+0xa64>
   17f3c:	mov	r1, #1
   17f40:	mov	r0, r7
   17f44:	bl	1c0dc <argp_parse@@Base+0x2be0>
   17f48:	cmp	r0, #0
   17f4c:	beq	17f64 <argp_failure@@Base+0xa74>
   17f50:	ldr	r3, [r7, #28]
   17f54:	add	r1, r3, #1
   17f58:	mov	r2, #10
   17f5c:	str	r1, [r7, #28]
   17f60:	strb	r2, [r3]
   17f64:	cmp	r5, #0
   17f68:	mov	r4, #0
   17f6c:	beq	180b0 <argp_failure@@Base+0xbc0>
   17f70:	ldr	r2, [r7, #16]
   17f74:	ldr	r1, [r7, #24]
   17f78:	ldr	r3, [r7, #28]
   17f7c:	ldr	r5, [r9, #28]
   17f80:	sub	r3, r3, r1
   17f84:	cmp	r3, r2
   17f88:	bls	17e94 <argp_failure@@Base+0x9a4>
   17f8c:	mov	r0, r7
   17f90:	bl	1ba4c <argp_parse@@Base+0x2550>
   17f94:	b	17e94 <argp_failure@@Base+0x9a4>
   17f98:	mov	r1, #0
   17f9c:	ldr	r0, [fp, #-108]	; 0xffffff94
   17fa0:	bl	14e38 <__assert_fail@plt+0x39fc>
   17fa4:	ldr	r5, [r0]
   17fa8:	mov	r3, r0
   17fac:	ldr	r2, [r0, #4]
   17fb0:	cmp	r2, #0
   17fb4:	sub	r4, r2, #1
   17fb8:	strd	r2, [fp, #-116]	; 0xffffff8c
   17fbc:	str	r5, [fp, #-96]	; 0xffffffa0
   17fc0:	beq	17788 <argp_failure@@Base+0x298>
   17fc4:	movw	r6, #59440	; 0xe830
   17fc8:	movt	r6, #1
   17fcc:	str	r4, [fp, #-120]	; 0xffffff88
   17fd0:	mov	sl, r4
   17fd4:	ldr	r8, [r5]
   17fd8:	ldr	r3, [r5, #4]
   17fdc:	cmp	r3, #0
   17fe0:	sub	r4, r3, #1
   17fe4:	beq	18024 <argp_failure@@Base+0xb34>
   17fe8:	add	r8, r8, #24
   17fec:	ldr	r0, [r8, #-24]	; 0xffffffe8
   17ff0:	sub	r4, r4, #1
   17ff4:	cmp	r0, #0
   17ff8:	beq	18018 <argp_failure@@Base+0xb28>
   17ffc:	ldr	r3, [r8, #-12]
   18000:	mov	r1, r6
   18004:	tst	r3, #2
   18008:	bne	18018 <argp_failure@@Base+0xb28>
   1800c:	bl	110f4 <strcmp@plt>
   18010:	cmp	r0, #0
   18014:	beq	186cc <argp_failure@@Base+0x11dc>
   18018:	cmn	r4, #1
   1801c:	add	r8, r8, #24
   18020:	bne	17fec <argp_failure@@Base+0xafc>
   18024:	sub	sl, sl, #1
   18028:	add	r5, r5, #28
   1802c:	cmn	sl, #1
   18030:	bne	17fd4 <argp_failure@@Base+0xae4>
   18034:	ldr	r4, [fp, #-120]	; 0xffffff88
   18038:	b	186ec <argp_failure@@Base+0x11fc>
   1803c:	mov	r0, r7
   18040:	bl	1ba4c <argp_parse@@Base+0x2550>
   18044:	ldr	r1, [r7, #16]
   18048:	str	r4, [r7, #12]
   1804c:	ldrd	r2, [r7, #24]
   18050:	sub	r2, r3, r2
   18054:	cmp	r2, r1
   18058:	bls	17f2c <argp_failure@@Base+0xa3c>
   1805c:	mov	r0, r7
   18060:	bl	1ba4c <argp_parse@@Base+0x2550>
   18064:	ldr	r3, [r7, #28]
   18068:	b	17f2c <argp_failure@@Base+0xa3c>
   1806c:	mov	r1, r7
   18070:	mov	r0, sl
   18074:	orr	r8, r8, #2
   18078:	bl	15b1c <__assert_fail@plt+0x46e0>
   1807c:	b	17ef8 <argp_failure@@Base+0xa08>
   18080:	mov	r0, r7
   18084:	bl	1ba4c <argp_parse@@Base+0x2550>
   18088:	b	17edc <argp_failure@@Base+0x9ec>
   1808c:	mov	r2, #0
   18090:	mov	r3, r4
   18094:	ldr	r0, [fp, #-108]	; 0xffffff94
   18098:	stm	sp, {r2, r7}
   1809c:	mov	r2, #1
   180a0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   180a4:	bl	161dc <__assert_fail@plt+0x4da0>
   180a8:	orr	r4, r4, r0
   180ac:	b	17b68 <argp_failure@@Base+0x678>
   180b0:	str	r8, [fp, #-104]	; 0xffffff98
   180b4:	mov	r4, #1
   180b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   180bc:	tst	r3, #16
   180c0:	beq	177a0 <argp_failure@@Base+0x2b0>
   180c4:	b	17da8 <argp_failure@@Base+0x8b8>
   180c8:	ldr	r3, [r7, #28]
   180cc:	ldr	r2, [r7, #32]
   180d0:	cmp	r3, r2
   180d4:	bcs	18aac <argp_failure@@Base+0x15bc>
   180d8:	add	r1, r3, #1
   180dc:	mov	r2, #10
   180e0:	str	r1, [r7, #28]
   180e4:	strb	r2, [r3]
   180e8:	ldr	r2, [r5]
   180ec:	b	17b90 <argp_failure@@Base+0x6a0>
   180f0:	tst	r8, #2
   180f4:	beq	1856c <argp_failure@@Base+0x107c>
   180f8:	add	r4, r4, #1
   180fc:	b	17924 <argp_failure@@Base+0x434>
   18100:	cmp	r3, r2
   18104:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18108:	ldr	r5, [r3, #12]
   1810c:	bhi	1869c <argp_failure@@Base+0x11ac>
   18110:	str	r5, [r7, #12]
   18114:	ldr	sl, [r9, #4]
   18118:	cmp	sl, #0
   1811c:	beq	17a1c <argp_failure@@Base+0x52c>
   18120:	movw	r3, #59568	; 0xe8b0
   18124:	movt	r3, #1
   18128:	movw	r6, #59560	; 0xe8a8
   1812c:	movt	r6, #1
   18130:	movw	r8, #59576	; 0xe8b8
   18134:	movt	r8, #1
   18138:	str	r3, [fp, #-128]	; 0xffffff80
   1813c:	add	r5, r4, #24
   18140:	b	18150 <argp_failure@@Base+0xc60>
   18144:	subs	sl, sl, #1
   18148:	add	r5, r5, #24
   1814c:	beq	17a1c <argp_failure@@Base+0x52c>
   18150:	ldr	r3, [r5, #-24]	; 0xffffffe8
   18154:	cmp	r3, #0
   18158:	beq	18144 <argp_failure@@Base+0xc54>
   1815c:	ldr	r3, [r5, #-12]
   18160:	tst	r3, #2
   18164:	bne	18144 <argp_failure@@Base+0xc54>
   18168:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1816c:	sub	r1, fp, #76	; 0x4c
   18170:	ldr	r0, [r3, #12]
   18174:	bl	15f90 <__assert_fail@plt+0x4b54>
   18178:	mov	r1, r6
   1817c:	mov	r0, r7
   18180:	ldr	r2, [r5, #-24]	; 0xffffffe8
   18184:	bl	1c0fc <argp_parse@@Base+0x2c00>
   18188:	ldr	r3, [r4, #8]
   1818c:	cmp	r3, #0
   18190:	beq	18144 <argp_failure@@Base+0xc54>
   18194:	ldr	ip, [r4, #12]
   18198:	mov	r1, r8
   1819c:	mov	r2, r3
   181a0:	mov	r0, r7
   181a4:	tst	ip, #1
   181a8:	ldrne	r1, [fp, #-128]	; 0xffffff80
   181ac:	bl	1c0fc <argp_parse@@Base+0x2c00>
   181b0:	b	18144 <argp_failure@@Base+0xc54>
   181b4:	ldr	r6, [r9, #20]
   181b8:	ldr	r5, [r4, #16]
   181bc:	cmp	r6, #0
   181c0:	beq	18564 <argp_failure@@Base+0x1074>
   181c4:	ldr	r3, [r6, #20]
   181c8:	cmp	r3, #0
   181cc:	beq	18564 <argp_failure@@Base+0x1074>
   181d0:	ldr	r4, [r4, #4]
   181d4:	mov	r0, r6
   181d8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   181dc:	bl	1a3b4 <argp_parse@@Base+0xeb8>
   181e0:	mov	r2, r0
   181e4:	mov	r1, r5
   181e8:	ldr	r3, [r6, #20]
   181ec:	mov	r0, r4
   181f0:	blx	r3
   181f4:	mov	r4, r0
   181f8:	cmp	r4, #0
   181fc:	beq	18300 <argp_failure@@Base+0xe10>
   18200:	ldrb	r3, [r4]
   18204:	cmp	r3, #0
   18208:	beq	182f0 <argp_failure@@Base+0xe00>
   1820c:	ldr	r1, [r7, #16]
   18210:	ldrd	r2, [r7, #24]
   18214:	sub	r2, r3, r2
   18218:	cmp	r2, r1
   1821c:	bhi	18a00 <argp_failure@@Base+0x1510>
   18220:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18224:	ldr	r8, [r7, #20]
   18228:	ldr	r6, [r2, #20]
   1822c:	bic	r8, r8, r8, asr #31
   18230:	mov	sl, r6
   18234:	str	r6, [r7, #4]
   18238:	add	r2, r6, #3
   1823c:	str	sl, [r7, #12]
   18240:	cmp	r2, r8
   18244:	bcc	189e0 <argp_failure@@Base+0x14f0>
   18248:	cmp	r6, r8
   1824c:	bhi	1896c <argp_failure@@Base+0x147c>
   18250:	ldr	r1, [r7, #32]
   18254:	add	r2, r3, #3
   18258:	cmp	r1, r2
   1825c:	bcs	18278 <argp_failure@@Base+0xd88>
   18260:	mov	r1, #3
   18264:	mov	r0, r7
   18268:	bl	1c0dc <argp_parse@@Base+0x2be0>
   1826c:	cmp	r0, #0
   18270:	beq	1829c <argp_failure@@Base+0xdac>
   18274:	ldr	r3, [r7, #28]
   18278:	movw	r2, #59580	; 0xe8bc
   1827c:	movt	r2, #1
   18280:	ldrh	r1, [r2]
   18284:	ldrb	r2, [r2, #2]
   18288:	strh	r1, [r3]
   1828c:	strb	r2, [r3, #2]
   18290:	ldr	r3, [r7, #28]
   18294:	add	r3, r3, #3
   18298:	str	r3, [r7, #28]
   1829c:	mov	r0, r4
   182a0:	bl	112d4 <strlen@plt>
   182a4:	subs	r6, r0, #0
   182a8:	beq	182f0 <argp_failure@@Base+0xe00>
   182ac:	ldr	r0, [r7, #28]
   182b0:	ldr	r2, [r7, #32]
   182b4:	add	r3, r0, r6
   182b8:	cmp	r2, r3
   182bc:	bcs	182d8 <argp_failure@@Base+0xde8>
   182c0:	mov	r1, r6
   182c4:	mov	r0, r7
   182c8:	bl	1c0dc <argp_parse@@Base+0x2be0>
   182cc:	cmp	r0, #0
   182d0:	beq	182f0 <argp_failure@@Base+0xe00>
   182d4:	ldr	r0, [r7, #28]
   182d8:	mov	r2, r6
   182dc:	mov	r1, r4
   182e0:	bl	11184 <memcpy@plt>
   182e4:	ldr	r3, [r7, #28]
   182e8:	add	r6, r3, r6
   182ec:	str	r6, [r7, #28]
   182f0:	cmp	r5, r4
   182f4:	beq	18300 <argp_failure@@Base+0xe10>
   182f8:	mov	r0, r4
   182fc:	bl	1a534 <argp_parse@@Base+0x1038>
   18300:	ldr	r1, [r7, #16]
   18304:	ldrd	r2, [r7, #24]
   18308:	sub	r2, r3, r2
   1830c:	cmp	r2, r1
   18310:	bhi	1868c <argp_failure@@Base+0x119c>
   18314:	mov	r2, #0
   18318:	str	r2, [r7, #4]
   1831c:	ldr	r2, [r7, #32]
   18320:	cmp	r2, r3
   18324:	bhi	18340 <argp_failure@@Base+0xe50>
   18328:	mov	r1, #1
   1832c:	mov	r0, r7
   18330:	bl	1c0dc <argp_parse@@Base+0x2be0>
   18334:	cmp	r0, #0
   18338:	beq	18350 <argp_failure@@Base+0xe60>
   1833c:	ldr	r3, [r7, #28]
   18340:	add	r1, r3, #1
   18344:	mov	r2, #10
   18348:	str	r1, [r7, #28]
   1834c:	strb	r2, [r3]
   18350:	str	r9, [fp, #-88]	; 0xffffffa8
   18354:	b	17a88 <argp_failure@@Base+0x598>
   18358:	cmp	r0, #45	; 0x2d
   1835c:	cmpne	r0, #95	; 0x5f
   18360:	ubfx	r7, r3, #3, #1
   18364:	moveq	r2, #1
   18368:	movne	r2, #0
   1836c:	orrs	r7, r2, r7
   18370:	beq	18b84 <argp_failure@@Base+0x1694>
   18374:	mov	r4, r8
   18378:	ldrb	r2, [r4, #1]!
   1837c:	lsl	r3, r2, #1
   18380:	cmp	r2, #45	; 0x2d
   18384:	cmpne	r2, #95	; 0x5f
   18388:	moveq	lr, #1
   1838c:	movne	lr, #0
   18390:	ldrh	r3, [r1, r3]
   18394:	ubfx	ip, r3, #3, #1
   18398:	orrs	ip, lr, ip
   1839c:	bne	18378 <argp_failure@@Base+0xe88>
   183a0:	tst	r3, #8192	; 0x2000
   183a4:	sub	r7, r4, r8
   183a8:	beq	183c0 <argp_failure@@Base+0xed0>
   183ac:	ldrb	r2, [r4, #1]!
   183b0:	lsl	r3, r2, #1
   183b4:	ldrh	r3, [r1, r3]
   183b8:	tst	r3, #8192	; 0x2000
   183bc:	bne	183ac <argp_failure@@Base+0xebc>
   183c0:	cmp	r2, #44	; 0x2c
   183c4:	cmpne	r2, #0
   183c8:	beq	18628 <argp_failure@@Base+0x1138>
   183cc:	cmp	r2, #61	; 0x3d
   183d0:	beq	18af0 <argp_failure@@Base+0x1600>
   183d4:	ands	r3, r3, #2048	; 0x800
   183d8:	streq	r3, [fp, #-112]	; 0xffffff90
   183dc:	streq	r3, [fp, #-96]	; 0xffffffa0
   183e0:	bne	18b20 <argp_failure@@Base+0x1630>
   183e4:	ldr	r0, [pc, #2292]	; 18ce0 <argp_failure@@Base+0x17f0>
   183e8:	bl	112d4 <strlen@plt>
   183ec:	cmp	r7, r0
   183f0:	beq	1864c <argp_failure@@Base+0x115c>
   183f4:	ldr	r5, [pc, #2280]	; 18ce4 <argp_failure@@Base+0x17f4>
   183f8:	mov	r0, r5
   183fc:	bl	112d4 <strlen@plt>
   18400:	cmp	r7, r0
   18404:	beq	187c8 <argp_failure@@Base+0x12d8>
   18408:	ldr	r5, [pc, #2264]	; 18ce8 <argp_failure@@Base+0x17f8>
   1840c:	mov	r0, r5
   18410:	bl	112d4 <strlen@plt>
   18414:	cmp	r7, r0
   18418:	beq	18804 <argp_failure@@Base+0x1314>
   1841c:	ldr	r5, [pc, #2248]	; 18cec <argp_failure@@Base+0x17fc>
   18420:	mov	r0, r5
   18424:	bl	112d4 <strlen@plt>
   18428:	cmp	r7, r0
   1842c:	beq	18820 <argp_failure@@Base+0x1330>
   18430:	ldr	r5, [pc, #2232]	; 18cf0 <argp_failure@@Base+0x1800>
   18434:	mov	r0, r5
   18438:	bl	112d4 <strlen@plt>
   1843c:	cmp	r7, r0
   18440:	beq	1883c <argp_failure@@Base+0x134c>
   18444:	ldr	r5, [pc, #2216]	; 18cf4 <argp_failure@@Base+0x1804>
   18448:	mov	r0, r5
   1844c:	bl	112d4 <strlen@plt>
   18450:	cmp	r7, r0
   18454:	beq	188b0 <argp_failure@@Base+0x13c0>
   18458:	ldr	r5, [pc, #2200]	; 18cf8 <argp_failure@@Base+0x1808>
   1845c:	mov	r0, r5
   18460:	bl	112d4 <strlen@plt>
   18464:	cmp	r7, r0
   18468:	beq	188cc <argp_failure@@Base+0x13dc>
   1846c:	ldr	r5, [pc, #2184]	; 18cfc <argp_failure@@Base+0x180c>
   18470:	mov	r0, r5
   18474:	bl	112d4 <strlen@plt>
   18478:	cmp	r7, r0
   1847c:	beq	188e8 <argp_failure@@Base+0x13f8>
   18480:	ldr	r5, [pc, #2168]	; 18d00 <argp_failure@@Base+0x1810>
   18484:	mov	r0, r5
   18488:	bl	112d4 <strlen@plt>
   1848c:	cmp	r0, r7
   18490:	beq	18904 <argp_failure@@Base+0x1414>
   18494:	movw	r3, #59308	; 0xe7ac
   18498:	movt	r3, #1
   1849c:	mov	r2, #0
   184a0:	mov	r1, r2
   184a4:	stm	sp, {r7, r8}
   184a8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   184ac:	bl	174f0 <argp_failure@@Base>
   184b0:	ldrb	r0, [r4]
   184b4:	cmp	r0, #44	; 0x2c
   184b8:	movne	r8, r4
   184bc:	bne	184c8 <argp_failure@@Base+0xfd8>
   184c0:	ldrb	r0, [r4, #1]
   184c4:	add	r8, r4, #1
   184c8:	cmp	r0, #0
   184cc:	bne	17c68 <argp_failure@@Base+0x778>
   184d0:	b	17ca0 <argp_failure@@Base+0x7b0>
   184d4:	mov	r0, r7
   184d8:	bl	1ba4c <argp_parse@@Base+0x2550>
   184dc:	b	17a34 <argp_failure@@Base+0x544>
   184e0:	mov	r0, r7
   184e4:	bl	1ba4c <argp_parse@@Base+0x2550>
   184e8:	b	178c0 <argp_failure@@Base+0x3d0>
   184ec:	mov	r0, r7
   184f0:	bl	1ba4c <argp_parse@@Base+0x2550>
   184f4:	ldr	r2, [r7, #16]
   184f8:	ldr	r3, [r7, #24]
   184fc:	ldr	r1, [r7, #28]
   18500:	sub	r3, r1, r3
   18504:	b	1782c <argp_failure@@Base+0x33c>
   18508:	mov	r0, r7
   1850c:	bl	1ba4c <argp_parse@@Base+0x2550>
   18510:	ldr	r3, [fp, #-120]	; 0xffffff88
   18514:	ldr	r2, [r7, #16]
   18518:	ldr	r1, [r7, #24]
   1851c:	str	r3, [r7, #4]
   18520:	ldr	r3, [r7, #28]
   18524:	sub	r0, r3, r1
   18528:	cmp	r0, r2
   1852c:	bls	17aa8 <argp_failure@@Base+0x5b8>
   18530:	mov	r0, r7
   18534:	add	r9, r9, #28
   18538:	bl	1ba4c <argp_parse@@Base+0x2550>
   1853c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   18540:	subs	r3, r3, #1
   18544:	str	r3, [fp, #-116]	; 0xffffff8c
   18548:	ldr	r3, [fp, #-124]	; 0xffffff84
   1854c:	str	r3, [r7, #12]
   18550:	beq	17ac4 <argp_failure@@Base+0x5d4>
   18554:	ldr	r2, [r7, #16]
   18558:	ldr	r1, [r7, #24]
   1855c:	ldr	r3, [r7, #28]
   18560:	b	17818 <argp_failure@@Base+0x328>
   18564:	mov	r4, r5
   18568:	b	181f8 <argp_failure@@Base+0xd08>
   1856c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18570:	sub	r1, fp, #76	; 0x4c
   18574:	ldr	r0, [r3, #8]
   18578:	bl	15f90 <__assert_fail@plt+0x4b54>
   1857c:	ldr	r2, [r9, #28]
   18580:	ldr	r1, [r9, #32]
   18584:	cmp	r2, r1
   18588:	bcc	185a4 <argp_failure@@Base+0x10b4>
   1858c:	mov	r1, #1
   18590:	mov	r0, r9
   18594:	bl	1c0dc <argp_parse@@Base+0x2be0>
   18598:	cmp	r0, #0
   1859c:	beq	185b4 <argp_failure@@Base+0x10c4>
   185a0:	ldr	r2, [r9, #28]
   185a4:	add	r0, r2, #1
   185a8:	mov	r1, #45	; 0x2d
   185ac:	str	r0, [r9, #28]
   185b0:	strb	r1, [r2]
   185b4:	ldr	r2, [r9, #28]
   185b8:	ldr	r1, [r9, #32]
   185bc:	ldrb	r6, [r4]
   185c0:	cmp	r2, r1
   185c4:	bcc	185e0 <argp_failure@@Base+0x10f0>
   185c8:	mov	r1, #1
   185cc:	mov	r0, r9
   185d0:	bl	1c0dc <argp_parse@@Base+0x2be0>
   185d4:	cmp	r0, #0
   185d8:	beq	185ec <argp_failure@@Base+0x10fc>
   185dc:	ldr	r2, [r9, #28]
   185e0:	add	r1, r2, #1
   185e4:	str	r1, [r9, #28]
   185e8:	strb	r6, [r2]
   185ec:	ldr	r3, [fp, #-128]	; 0xffffff80
   185f0:	ldr	r2, [r7, #8]
   185f4:	cmp	r3, #0
   185f8:	beq	186a8 <argp_failure@@Base+0x11b8>
   185fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18600:	ldr	r1, [r3]
   18604:	cmp	r1, #0
   18608:	bne	186a8 <argp_failure@@Base+0x11b8>
   1860c:	cmp	r2, #0
   18610:	movne	r2, #1
   18614:	strne	r2, [fp, #-80]	; 0xffffffb0
   18618:	b	180f8 <argp_failure@@Base+0xc08>
   1861c:	mov	r1, #1
   18620:	str	r1, [fp, #-128]	; 0xffffff80
   18624:	b	178b0 <argp_failure@@Base+0x3c0>
   18628:	cmp	r0, #110	; 0x6e
   1862c:	beq	18938 <argp_failure@@Base+0x1448>
   18630:	mov	r3, #1
   18634:	ldr	r0, [pc, #1700]	; 18ce0 <argp_failure@@Base+0x17f0>
   18638:	str	r3, [fp, #-112]	; 0xffffff90
   1863c:	str	r3, [fp, #-96]	; 0xffffffa0
   18640:	bl	112d4 <strlen@plt>
   18644:	cmp	r7, r0
   18648:	bne	183f4 <argp_failure@@Base+0xf04>
   1864c:	mov	r2, r7
   18650:	ldr	r1, [pc, #1672]	; 18ce0 <argp_failure@@Base+0x17f0>
   18654:	mov	r0, r8
   18658:	bl	11418 <strncmp@plt>
   1865c:	cmp	r0, #0
   18660:	bne	183f4 <argp_failure@@Base+0xf04>
   18664:	ldr	r5, [pc, #1652]	; 18ce0 <argp_failure@@Base+0x17f0>
   18668:	sub	r2, fp, #36	; 0x24
   1866c:	ldrb	r3, [r5, #15]
   18670:	add	r3, r2, r3
   18674:	ldr	r2, [fp, #-112]	; 0xffffff90
   18678:	str	r2, [r3, #-40]	; 0xffffffd8
   1867c:	b	184b0 <argp_failure@@Base+0xfc0>
   18680:	mov	r0, r7
   18684:	bl	1ba4c <argp_parse@@Base+0x2550>
   18688:	b	17968 <argp_failure@@Base+0x478>
   1868c:	mov	r0, r7
   18690:	bl	1ba4c <argp_parse@@Base+0x2550>
   18694:	ldr	r3, [r7, #28]
   18698:	b	18314 <argp_failure@@Base+0xe24>
   1869c:	mov	r0, r7
   186a0:	bl	1ba4c <argp_parse@@Base+0x2550>
   186a4:	b	18110 <argp_failure@@Base+0xc20>
   186a8:	cmp	r2, #0
   186ac:	beq	180f8 <argp_failure@@Base+0xc08>
   186b0:	ldr	r1, [r7, #12]
   186b4:	mov	r0, r9
   186b8:	tst	r1, #1
   186bc:	ldrne	r1, [fp, #-144]	; 0xffffff70
   186c0:	ldreq	r1, [fp, #-140]	; 0xffffff74
   186c4:	bl	1c0fc <argp_parse@@Base+0x2c00>
   186c8:	b	180f8 <argp_failure@@Base+0xc08>
   186cc:	mvn	r3, #0
   186d0:	str	r3, [r5, #12]
   186d4:	ldr	r3, [fp, #-112]	; 0xffffff90
   186d8:	ldr	r3, [r3, #4]
   186dc:	cmp	r3, #0
   186e0:	sub	r4, r3, #1
   186e4:	str	r3, [fp, #-116]	; 0xffffff8c
   186e8:	beq	17788 <argp_failure@@Base+0x298>
   186ec:	ldr	r5, [fp, #-96]	; 0xffffffa0
   186f0:	movw	r6, #59448	; 0xe838
   186f4:	movt	r6, #1
   186f8:	ldm	r5, {r8, sl}
   186fc:	cmp	sl, #0
   18700:	sub	sl, sl, #1
   18704:	beq	18744 <argp_failure@@Base+0x1254>
   18708:	add	r8, r8, #24
   1870c:	ldr	r0, [r8, #-24]	; 0xffffffe8
   18710:	sub	sl, sl, #1
   18714:	cmp	r0, #0
   18718:	beq	18738 <argp_failure@@Base+0x1248>
   1871c:	ldr	r3, [r8, #-12]
   18720:	mov	r1, r6
   18724:	tst	r3, #2
   18728:	bne	18738 <argp_failure@@Base+0x1248>
   1872c:	bl	110f4 <strcmp@plt>
   18730:	cmp	r0, #0
   18734:	beq	1875c <argp_failure@@Base+0x126c>
   18738:	cmn	sl, #1
   1873c:	add	r8, r8, #24
   18740:	bne	1870c <argp_failure@@Base+0x121c>
   18744:	cmp	r4, #0
   18748:	add	r5, r5, #28
   1874c:	sub	r4, r4, #1
   18750:	bne	186f8 <argp_failure@@Base+0x1208>
   18754:	ldr	r1, [fp, #-116]	; 0xffffff8c
   18758:	b	18774 <argp_failure@@Base+0x1284>
   1875c:	mvn	r3, #0
   18760:	str	r3, [r5, #12]
   18764:	ldr	r3, [fp, #-112]	; 0xffffff90
   18768:	ldr	r1, [r3, #4]
   1876c:	cmp	r1, #0
   18770:	beq	17788 <argp_failure@@Base+0x298>
   18774:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18778:	mov	r3, #0
   1877c:	str	r3, [r2, #24]
   18780:	add	r3, r3, #1
   18784:	add	r2, r2, #28
   18788:	cmp	r1, r3
   1878c:	bhi	1877c <argp_failure@@Base+0x128c>
   18790:	movw	r3, #26544	; 0x67b0
   18794:	movt	r3, #1
   18798:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1879c:	mov	r2, #28
   187a0:	bl	113e8 <qsort@plt>
   187a4:	ldr	r3, [fp, #-104]	; 0xffffff98
   187a8:	ands	r4, r3, #3
   187ac:	beq	17794 <argp_failure@@Base+0x2a4>
   187b0:	b	17ddc <argp_failure@@Base+0x8ec>
   187b4:	sub	r2, fp, #76	; 0x4c
   187b8:	ldr	r0, [r4, #16]
   187bc:	ldr	r1, [r9, #20]
   187c0:	bl	15828 <__assert_fail@plt+0x43ec>
   187c4:	b	18350 <argp_failure@@Base+0xe60>
   187c8:	mov	r2, r7
   187cc:	mov	r1, r5
   187d0:	mov	r0, r8
   187d4:	bl	11418 <strncmp@plt>
   187d8:	cmp	r0, #0
   187dc:	bne	18408 <argp_failure@@Base+0xf18>
   187e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   187e4:	cmp	r3, #0
   187e8:	beq	18668 <argp_failure@@Base+0x1178>
   187ec:	ldrb	r2, [r5, #14]
   187f0:	cmp	r2, #0
   187f4:	movweq	r3, #59260	; 0xe77c
   187f8:	movteq	r3, #1
   187fc:	bne	18668 <argp_failure@@Base+0x1178>
   18800:	b	184a0 <argp_failure@@Base+0xfb0>
   18804:	mov	r2, r7
   18808:	mov	r1, r5
   1880c:	mov	r0, r8
   18810:	bl	11418 <strncmp@plt>
   18814:	cmp	r0, #0
   18818:	bne	1841c <argp_failure@@Base+0xf2c>
   1881c:	b	187e0 <argp_failure@@Base+0x12f0>
   18820:	mov	r2, r7
   18824:	mov	r1, r5
   18828:	mov	r0, r8
   1882c:	bl	11418 <strncmp@plt>
   18830:	cmp	r0, #0
   18834:	bne	18430 <argp_failure@@Base+0xf40>
   18838:	b	187e0 <argp_failure@@Base+0x12f0>
   1883c:	mov	r2, r7
   18840:	mov	r1, r5
   18844:	mov	r0, r8
   18848:	bl	11418 <strncmp@plt>
   1884c:	cmp	r0, #0
   18850:	bne	18444 <argp_failure@@Base+0xf54>
   18854:	b	187e0 <argp_failure@@Base+0x12f0>
   18858:	ldr	r3, [r7, #28]
   1885c:	ldr	r1, [r7, #32]
   18860:	add	r2, r3, #12
   18864:	cmp	r1, r2
   18868:	bcs	18884 <argp_failure@@Base+0x1394>
   1886c:	mov	r1, #12
   18870:	mov	r0, r7
   18874:	bl	1c0dc <argp_parse@@Base+0x2be0>
   18878:	cmp	r0, #0
   1887c:	beq	17ef8 <argp_failure@@Base+0xa08>
   18880:	ldr	r3, [r7, #28]
   18884:	movw	r2, #59480	; 0xe858
   18888:	movt	r2, #1
   1888c:	ldrd	r0, [r2]
   18890:	ldr	r2, [r2, #8]
   18894:	str	r0, [r3]
   18898:	str	r1, [r3, #4]
   1889c:	str	r2, [r3, #8]
   188a0:	ldr	r3, [r7, #28]
   188a4:	add	r3, r3, #12
   188a8:	str	r3, [r7, #28]
   188ac:	b	17ef8 <argp_failure@@Base+0xa08>
   188b0:	mov	r2, r7
   188b4:	mov	r1, r5
   188b8:	mov	r0, r8
   188bc:	bl	11418 <strncmp@plt>
   188c0:	cmp	r0, #0
   188c4:	bne	18458 <argp_failure@@Base+0xf68>
   188c8:	b	187e0 <argp_failure@@Base+0x12f0>
   188cc:	mov	r2, r7
   188d0:	mov	r1, r5
   188d4:	mov	r0, r8
   188d8:	bl	11418 <strncmp@plt>
   188dc:	cmp	r0, #0
   188e0:	bne	1846c <argp_failure@@Base+0xf7c>
   188e4:	b	187e0 <argp_failure@@Base+0x12f0>
   188e8:	mov	r2, r7
   188ec:	mov	r1, r5
   188f0:	mov	r0, r8
   188f4:	bl	11418 <strncmp@plt>
   188f8:	cmp	r0, #0
   188fc:	bne	18480 <argp_failure@@Base+0xf90>
   18900:	b	187e0 <argp_failure@@Base+0x12f0>
   18904:	mov	r2, r7
   18908:	mov	r1, r5
   1890c:	mov	r0, r8
   18910:	bl	11418 <strncmp@plt>
   18914:	cmp	r0, #0
   18918:	bne	18494 <argp_failure@@Base+0xfa4>
   1891c:	b	187e0 <argp_failure@@Base+0x12f0>
   18920:	ldr	r4, [fp, #-112]	; 0xffffff90
   18924:	ldr	r0, [r4]
   18928:	bl	1a534 <argp_parse@@Base+0x1038>
   1892c:	ldr	r0, [r4, #8]
   18930:	bl	1a534 <argp_parse@@Base+0x1038>
   18934:	b	17be0 <argp_failure@@Base+0x6f0>
   18938:	ldrb	r3, [r8, #1]
   1893c:	cmp	r3, #111	; 0x6f
   18940:	bne	18630 <argp_failure@@Base+0x1140>
   18944:	ldrb	r3, [r8, #2]
   18948:	cmp	r3, #45	; 0x2d
   1894c:	bne	18630 <argp_failure@@Base+0x1140>
   18950:	mov	r3, #0
   18954:	add	r8, r8, #3
   18958:	sub	r7, r7, #3
   1895c:	str	r3, [fp, #-112]	; 0xffffff90
   18960:	mov	r3, #1
   18964:	str	r3, [fp, #-96]	; 0xffffffa0
   18968:	b	183e4 <argp_failure@@Base+0xef4>
   1896c:	ldr	r1, [r7, #16]
   18970:	ldr	r2, [r7, #24]
   18974:	sub	r3, r3, r2
   18978:	cmp	r3, r1
   1897c:	bhi	18ae4 <argp_failure@@Base+0x15f4>
   18980:	ldr	r3, [r7, #20]
   18984:	cmp	r3, #0
   18988:	subge	r6, r6, r3
   1898c:	cmp	r6, #0
   18990:	sub	r6, r6, #1
   18994:	ble	1829c <argp_failure@@Base+0xdac>
   18998:	mov	r8, #32
   1899c:	ldr	r3, [r7, #28]
   189a0:	mov	r1, #1
   189a4:	mov	r0, r7
   189a8:	sub	r6, r6, #1
   189ac:	ldr	r2, [r7, #32]
   189b0:	cmp	r3, r2
   189b4:	bcc	189c8 <argp_failure@@Base+0x14d8>
   189b8:	bl	1c0dc <argp_parse@@Base+0x2be0>
   189bc:	cmp	r0, #0
   189c0:	beq	189d4 <argp_failure@@Base+0x14e4>
   189c4:	ldr	r3, [r7, #28]
   189c8:	add	r2, r3, #1
   189cc:	str	r2, [r7, #28]
   189d0:	strb	r8, [r3]
   189d4:	cmn	r6, #1
   189d8:	bne	1899c <argp_failure@@Base+0x14ac>
   189dc:	b	1829c <argp_failure@@Base+0xdac>
   189e0:	ldr	r2, [r7, #32]
   189e4:	cmp	r2, r3
   189e8:	bls	18a90 <argp_failure@@Base+0x15a0>
   189ec:	add	r1, r3, #1
   189f0:	mov	r2, #10
   189f4:	str	r1, [r7, #28]
   189f8:	strb	r2, [r3]
   189fc:	b	1829c <argp_failure@@Base+0xdac>
   18a00:	mov	r0, r7
   18a04:	bl	1ba4c <argp_parse@@Base+0x2550>
   18a08:	ldr	r1, [r7, #16]
   18a0c:	ldrd	r2, [r7, #24]
   18a10:	ldr	sl, [fp, #-96]	; 0xffffffa0
   18a14:	ldr	r8, [r7, #20]
   18a18:	sub	r2, r3, r2
   18a1c:	cmp	r2, r1
   18a20:	ldr	r6, [sl, #20]
   18a24:	bic	r8, r8, r8, asr #31
   18a28:	bls	18230 <argp_failure@@Base+0xd40>
   18a2c:	mov	r0, r7
   18a30:	bl	1ba4c <argp_parse@@Base+0x2550>
   18a34:	ldr	r1, [r7, #16]
   18a38:	str	r6, [r7, #4]
   18a3c:	mov	r6, sl
   18a40:	ldrd	r2, [r7, #24]
   18a44:	ldr	sl, [sl, #20]
   18a48:	sub	r2, r3, r2
   18a4c:	cmp	r2, r1
   18a50:	bls	18cd8 <argp_failure@@Base+0x17e8>
   18a54:	mov	r0, r7
   18a58:	bl	1ba4c <argp_parse@@Base+0x2550>
   18a5c:	ldr	r6, [r6, #20]
   18a60:	ldr	r3, [r7, #28]
   18a64:	b	18238 <argp_failure@@Base+0xd48>
   18a68:	ldr	r0, [fp, #-132]	; 0xffffff7c
   18a6c:	bl	11214 <funlockfile@plt>
   18a70:	b	17bf0 <argp_failure@@Base+0x700>
   18a74:	movw	r3, #59348	; 0xe7d4
   18a78:	movt	r3, #1
   18a7c:	str	r8, [sp]
   18a80:	mov	r1, r2
   18a84:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18a88:	bl	174f0 <argp_failure@@Base>
   18a8c:	b	17ca0 <argp_failure@@Base+0x7b0>
   18a90:	mov	r1, #1
   18a94:	mov	r0, r7
   18a98:	bl	1c0dc <argp_parse@@Base+0x2be0>
   18a9c:	cmp	r0, #0
   18aa0:	beq	1829c <argp_failure@@Base+0xdac>
   18aa4:	ldr	r3, [r7, #28]
   18aa8:	b	189ec <argp_failure@@Base+0x14fc>
   18aac:	mov	r1, #1
   18ab0:	mov	r0, r7
   18ab4:	bl	1c0dc <argp_parse@@Base+0x2be0>
   18ab8:	cmp	r0, #0
   18abc:	ldrne	r3, [r7, #28]
   18ac0:	bne	180d8 <argp_failure@@Base+0xbe8>
   18ac4:	b	180e8 <argp_failure@@Base+0xbf8>
   18ac8:	mov	r1, #1
   18acc:	mov	r0, r7
   18ad0:	bl	1c0dc <argp_parse@@Base+0x2be0>
   18ad4:	cmp	r0, #0
   18ad8:	ldrne	r3, [r7, #28]
   18adc:	bne	17d60 <argp_failure@@Base+0x870>
   18ae0:	b	17d70 <argp_failure@@Base+0x880>
   18ae4:	mov	r0, r7
   18ae8:	bl	1ba4c <argp_parse@@Base+0x2550>
   18aec:	b	18980 <argp_failure@@Base+0x1490>
   18af0:	ldrb	r3, [r4, #1]
   18af4:	add	r4, r4, #1
   18af8:	lsl	r3, r3, #1
   18afc:	ldrh	r3, [r1, r3]
   18b00:	tst	r3, #8192	; 0x2000
   18b04:	beq	183d4 <argp_failure@@Base+0xee4>
   18b08:	ldrb	r3, [r4, #1]!
   18b0c:	lsl	r3, r3, #1
   18b10:	ldrh	r3, [r1, r3]
   18b14:	tst	r3, #8192	; 0x2000
   18b18:	bne	18b08 <argp_failure@@Base+0x1618>
   18b1c:	b	183d4 <argp_failure@@Base+0xee4>
   18b20:	mov	r2, #10
   18b24:	mov	r1, #0
   18b28:	mov	r0, r4
   18b2c:	bl	11100 <strtol@plt>
   18b30:	ldrb	r3, [r4]
   18b34:	ldr	r2, [r6]
   18b38:	lsl	r3, r3, #1
   18b3c:	ldrh	r3, [r2, r3]
   18b40:	str	r0, [fp, #-112]	; 0xffffff90
   18b44:	tst	r3, #2048	; 0x800
   18b48:	beq	18b60 <argp_failure@@Base+0x1670>
   18b4c:	ldrb	r3, [r4, #1]!
   18b50:	lsl	r3, r3, #1
   18b54:	ldrh	r3, [r2, r3]
   18b58:	tst	r3, #2048	; 0x800
   18b5c:	bne	18b4c <argp_failure@@Base+0x165c>
   18b60:	ands	r3, r3, #8192	; 0x2000
   18b64:	beq	18b7c <argp_failure@@Base+0x168c>
   18b68:	ldrb	r3, [r4, #1]!
   18b6c:	lsl	r3, r3, #1
   18b70:	ldrh	r3, [r2, r3]
   18b74:	ands	r3, r3, #8192	; 0x2000
   18b78:	bne	18b68 <argp_failure@@Base+0x1678>
   18b7c:	str	r3, [fp, #-96]	; 0xffffffa0
   18b80:	b	183e4 <argp_failure@@Base+0xef4>
   18b84:	mov	r2, r0
   18b88:	mov	r4, r8
   18b8c:	b	183c0 <argp_failure@@Base+0xed0>
   18b90:	movw	r5, #59128	; 0xe6f8
   18b94:	movt	r5, #1
   18b98:	mov	r4, r1
   18b9c:	ldr	r3, [r7, #28]
   18ba0:	ldr	r2, [r7, #32]
   18ba4:	cmp	r3, r2
   18ba8:	bcc	18bc4 <argp_failure@@Base+0x16d4>
   18bac:	mov	r1, #1
   18bb0:	mov	r0, r7
   18bb4:	bl	1c0dc <argp_parse@@Base+0x2be0>
   18bb8:	cmp	r0, #0
   18bbc:	beq	18bd4 <argp_failure@@Base+0x16e4>
   18bc0:	ldr	r3, [r7, #28]
   18bc4:	add	r1, r3, #1
   18bc8:	mov	r2, #10
   18bcc:	str	r1, [r7, #28]
   18bd0:	strb	r2, [r3]
   18bd4:	mov	r0, r5
   18bd8:	bl	112d4 <strlen@plt>
   18bdc:	subs	r6, r0, #0
   18be0:	ldr	r0, [r7, #28]
   18be4:	ldr	r3, [r7, #32]
   18be8:	bne	18c90 <argp_failure@@Base+0x17a0>
   18bec:	cmp	r0, r3
   18bf0:	bcc	18c0c <argp_failure@@Base+0x171c>
   18bf4:	mov	r1, #1
   18bf8:	mov	r0, r7
   18bfc:	bl	1c0dc <argp_parse@@Base+0x2be0>
   18c00:	cmp	r0, #0
   18c04:	beq	17b48 <argp_failure@@Base+0x658>
   18c08:	ldr	r0, [r7, #28]
   18c0c:	add	r2, r0, #1
   18c10:	mov	r3, #10
   18c14:	str	r2, [r7, #28]
   18c18:	strb	r3, [r0]
   18c1c:	b	17b48 <argp_failure@@Base+0x658>
   18c20:	movw	r5, #59128	; 0xe6f8
   18c24:	movt	r5, #1
   18c28:	b	18b9c <argp_failure@@Base+0x16ac>
   18c2c:	ldr	r3, [pc, #180]	; 18ce8 <argp_failure@@Base+0x17f8>
   18c30:	movw	r0, #59432	; 0xe828
   18c34:	movt	r0, #1
   18c38:	mov	r2, #0
   18c3c:	mov	r1, r2
   18c40:	stm	sp, {r0, r3}
   18c44:	movw	r3, #59380	; 0xe7f4
   18c48:	movt	r3, #1
   18c4c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18c50:	bl	174f0 <argp_failure@@Base>
   18c54:	b	1775c <argp_failure@@Base+0x26c>
   18c58:	ldr	r3, [pc, #140]	; 18cec <argp_failure@@Base+0x17fc>
   18c5c:	b	18c30 <argp_failure@@Base+0x1740>
   18c60:	ldr	r3, [pc, #136]	; 18cf0 <argp_failure@@Base+0x1800>
   18c64:	b	18c30 <argp_failure@@Base+0x1740>
   18c68:	ldr	r3, [pc, #132]	; 18cf4 <argp_failure@@Base+0x1804>
   18c6c:	b	18c30 <argp_failure@@Base+0x1740>
   18c70:	ldr	r3, [pc, #128]	; 18cf8 <argp_failure@@Base+0x1808>
   18c74:	b	18c30 <argp_failure@@Base+0x1740>
   18c78:	ldr	r3, [pc, #124]	; 18cfc <argp_failure@@Base+0x180c>
   18c7c:	b	18c30 <argp_failure@@Base+0x1740>
   18c80:	mov	r4, r5
   18c84:	movw	r5, #59128	; 0xe6f8
   18c88:	movt	r5, #1
   18c8c:	b	18b9c <argp_failure@@Base+0x16ac>
   18c90:	add	r2, r0, r6
   18c94:	cmp	r3, r2
   18c98:	bcs	18cb8 <argp_failure@@Base+0x17c8>
   18c9c:	mov	r1, r6
   18ca0:	mov	r0, r7
   18ca4:	bl	1c0dc <argp_parse@@Base+0x2be0>
   18ca8:	cmp	r0, #0
   18cac:	ldr	r0, [r7, #28]
   18cb0:	ldreq	r3, [r7, #32]
   18cb4:	beq	18bec <argp_failure@@Base+0x16fc>
   18cb8:	mov	r2, r6
   18cbc:	mov	r1, r5
   18cc0:	bl	11184 <memcpy@plt>
   18cc4:	ldr	r0, [r7, #28]
   18cc8:	ldr	r3, [r7, #32]
   18ccc:	add	r0, r0, r6
   18cd0:	str	r0, [r7, #28]
   18cd4:	b	18bec <argp_failure@@Base+0x16fc>
   18cd8:	mov	r6, sl
   18cdc:	b	18238 <argp_failure@@Base+0xd48>
   18ce0:	andeq	lr, r1, ip, lsr r5
   18ce4:	andeq	lr, r1, ip, asr #10
   18ce8:	andeq	lr, r1, ip, asr r5
   18cec:	andeq	lr, r1, ip, ror #10
   18cf0:	andeq	lr, r1, ip, ror r5
   18cf4:	andeq	lr, r1, ip, lsl #11
   18cf8:	muleq	r1, ip, r5
   18cfc:	andeq	lr, r1, ip, lsr #11
   18d00:			; <UNDEFINED> instruction: 0x0001e5bc

00018d04 <argp_help@@Base>:
   18d04:	push	{lr}		; (str lr, [sp, #-4]!)
   18d08:	sub	sp, sp, #12
   18d0c:	str	r3, [sp]
   18d10:	mov	r3, r2
   18d14:	mov	r2, r1
   18d18:	mov	r1, #0
   18d1c:	bl	1770c <argp_failure@@Base+0x21c>
   18d20:	add	sp, sp, #12
   18d24:	pop	{pc}		; (ldr pc, [sp], #4)

00018d28 <argp_state_help@@Base>:
   18d28:	strd	r4, [sp, #-12]!
   18d2c:	subs	r4, r0, #0
   18d30:	mov	r5, r2
   18d34:	str	lr, [sp, #8]
   18d38:	sub	sp, sp, #12
   18d3c:	beq	18dac <argp_state_help@@Base+0x84>
   18d40:	ldr	r3, [r4, #16]
   18d44:	adds	r2, r1, #0
   18d48:	movne	r2, #1
   18d4c:	eor	r0, r3, #2
   18d50:	ands	r2, r2, r0, lsr #1
   18d54:	bne	18d68 <argp_state_help@@Base+0x40>
   18d58:	add	sp, sp, #12
   18d5c:	ldrd	r4, [sp]
   18d60:	add	sp, sp, #8
   18d64:	pop	{pc}		; (ldr pc, [sp], #4)
   18d68:	ldr	r0, [r4, #40]	; 0x28
   18d6c:	tst	r3, #64	; 0x40
   18d70:	mov	r2, r1
   18d74:	orrne	r5, r5, #128	; 0x80
   18d78:	mov	r1, r4
   18d7c:	mov	r3, r5
   18d80:	str	r0, [sp]
   18d84:	ldr	r0, [r4]
   18d88:	bl	1770c <argp_failure@@Base+0x21c>
   18d8c:	ldr	r3, [r4, #16]
   18d90:	tst	r3, #32
   18d94:	bne	18d58 <argp_state_help@@Base+0x30>
   18d98:	ands	r0, r5, #256	; 0x100
   18d9c:	bne	18dd8 <argp_state_help@@Base+0xb0>
   18da0:	tst	r5, #512	; 0x200
   18da4:	beq	18d58 <argp_state_help@@Base+0x30>
   18da8:	bl	112bc <exit@plt>
   18dac:	cmp	r1, #0
   18db0:	beq	18d58 <argp_state_help@@Base+0x30>
   18db4:	movw	r3, #1568	; 0x620
   18db8:	movt	r3, #3
   18dbc:	ldr	ip, [r3]
   18dc0:	mov	r2, r1
   18dc4:	mov	r3, r5
   18dc8:	mov	r1, r4
   18dcc:	str	ip, [sp]
   18dd0:	bl	1770c <argp_failure@@Base+0x21c>
   18dd4:	b	18d98 <argp_state_help@@Base+0x70>
   18dd8:	movw	r3, #1544	; 0x608
   18ddc:	movt	r3, #3
   18de0:	ldr	r0, [r3]
   18de4:	bl	112bc <exit@plt>

00018de8 <argp_error@@Base>:
   18de8:	push	{r1, r2, r3}
   18dec:	strd	r4, [sp, #-12]!
   18df0:	subs	r5, r0, #0
   18df4:	str	lr, [sp, #8]
   18df8:	sub	sp, sp, #8
   18dfc:	beq	18ed4 <argp_error@@Base+0xec>
   18e00:	ldr	r3, [r5, #16]
   18e04:	tst	r3, #2
   18e08:	bne	18ebc <argp_error@@Base+0xd4>
   18e0c:	ldr	r4, [r5, #44]	; 0x2c
   18e10:	cmp	r4, #0
   18e14:	beq	18ebc <argp_error@@Base+0xd4>
   18e18:	mov	r0, r4
   18e1c:	bl	113d0 <flockfile@plt>
   18e20:	ldr	r0, [r5, #40]	; 0x28
   18e24:	add	r3, sp, #24
   18e28:	str	r3, [sp, #4]
   18e2c:	mov	r1, r4
   18e30:	bl	110e8 <fputs_unlocked@plt>
   18e34:	ldr	r3, [r4, #20]
   18e38:	ldr	r2, [r4, #24]
   18e3c:	cmp	r3, r2
   18e40:	addcc	r1, r3, #1
   18e44:	movcc	r2, #58	; 0x3a
   18e48:	strcc	r1, [r4, #20]
   18e4c:	strbcc	r2, [r3]
   18e50:	bcs	18f18 <argp_error@@Base+0x130>
   18e54:	ldr	r3, [r4, #20]
   18e58:	ldr	r2, [r4, #24]
   18e5c:	cmp	r3, r2
   18e60:	addcc	r1, r3, #1
   18e64:	movcc	r2, #32
   18e68:	strcc	r1, [r4, #20]
   18e6c:	strbcc	r2, [r3]
   18e70:	bcs	18f28 <argp_error@@Base+0x140>
   18e74:	mov	r0, r4
   18e78:	ldr	r2, [sp, #4]
   18e7c:	ldr	r1, [sp, #20]
   18e80:	bl	11394 <vfprintf@plt>
   18e84:	ldr	r3, [r4, #20]
   18e88:	ldr	r2, [r4, #24]
   18e8c:	cmp	r3, r2
   18e90:	addcc	r1, r3, #1
   18e94:	movcc	r2, #10
   18e98:	strcc	r1, [r4, #20]
   18e9c:	strbcc	r2, [r3]
   18ea0:	bcs	18f08 <argp_error@@Base+0x120>
   18ea4:	mov	r0, r5
   18ea8:	mov	r2, #260	; 0x104
   18eac:	mov	r1, r4
   18eb0:	bl	18d28 <argp_state_help@@Base>
   18eb4:	mov	r0, r4
   18eb8:	bl	11214 <funlockfile@plt>
   18ebc:	add	sp, sp, #8
   18ec0:	ldrd	r4, [sp]
   18ec4:	ldr	lr, [sp, #8]
   18ec8:	add	sp, sp, #12
   18ecc:	add	sp, sp, #12
   18ed0:	bx	lr
   18ed4:	movw	r3, #1576	; 0x628
   18ed8:	movt	r3, #3
   18edc:	ldr	r4, [r3]
   18ee0:	cmp	r4, #0
   18ee4:	beq	18ebc <argp_error@@Base+0xd4>
   18ee8:	mov	r0, r4
   18eec:	bl	113d0 <flockfile@plt>
   18ef0:	add	r2, sp, #24
   18ef4:	movw	r3, #1568	; 0x620
   18ef8:	movt	r3, #3
   18efc:	str	r2, [sp, #4]
   18f00:	ldr	r0, [r3]
   18f04:	b	18e2c <argp_error@@Base+0x44>
   18f08:	mov	r1, #10
   18f0c:	mov	r0, r4
   18f10:	bl	11364 <__overflow@plt>
   18f14:	b	18ea4 <argp_error@@Base+0xbc>
   18f18:	mov	r1, #58	; 0x3a
   18f1c:	mov	r0, r4
   18f20:	bl	11364 <__overflow@plt>
   18f24:	b	18e54 <argp_error@@Base+0x6c>
   18f28:	mov	r1, #32
   18f2c:	mov	r0, r4
   18f30:	bl	11364 <__overflow@plt>
   18f34:	b	18e74 <argp_error@@Base+0x8c>
   18f38:	ldr	r3, [r0]
   18f3c:	strd	r4, [sp, #-16]!
   18f40:	ldr	r5, [r0, #16]
   18f44:	str	r6, [sp, #8]
   18f48:	str	lr, [sp, #12]
   18f4c:	cmp	r3, #0
   18f50:	beq	18ffc <argp_error@@Base+0x214>
   18f54:	ldr	r0, [r1, #8]
   18f58:	mov	r2, #0
   18f5c:	add	r0, r0, #1
   18f60:	str	r0, [r1, #8]
   18f64:	b	18f6c <argp_error@@Base+0x184>
   18f68:	add	r2, r2, #1
   18f6c:	add	r3, r3, #24
   18f70:	ldr	r0, [r3, #-20]	; 0xffffffec
   18f74:	cmp	r0, #0
   18f78:	bne	18f68 <argp_error@@Base+0x180>
   18f7c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   18f80:	cmp	r0, #0
   18f84:	bne	18f68 <argp_error@@Base+0x180>
   18f88:	ldr	r0, [r3, #-8]
   18f8c:	cmp	r0, #0
   18f90:	bne	18f68 <argp_error@@Base+0x180>
   18f94:	ldr	r0, [r3, #-4]
   18f98:	cmp	r0, #0
   18f9c:	bne	18f68 <argp_error@@Base+0x180>
   18fa0:	ldm	r1, {r0, r3}
   18fa4:	add	ip, r2, r2, lsl #1
   18fa8:	add	r2, r3, r2
   18fac:	add	r0, r0, ip
   18fb0:	stm	r1, {r0, r2}
   18fb4:	cmp	r5, #0
   18fb8:	beq	18fec <argp_error@@Base+0x204>
   18fbc:	ldr	r0, [r5]
   18fc0:	cmp	r0, #0
   18fc4:	beq	18fec <argp_error@@Base+0x204>
   18fc8:	mov	r4, r1
   18fcc:	mov	r1, r4
   18fd0:	bl	18f38 <argp_error@@Base+0x150>
   18fd4:	ldr	r3, [r4, #12]
   18fd8:	ldr	r0, [r5, #16]!
   18fdc:	add	r3, r3, #1
   18fe0:	cmp	r0, #0
   18fe4:	str	r3, [r4, #12]
   18fe8:	bne	18fcc <argp_error@@Base+0x1e4>
   18fec:	ldrd	r4, [sp]
   18ff0:	ldr	r6, [sp, #8]
   18ff4:	add	sp, sp, #12
   18ff8:	pop	{pc}		; (ldr pc, [sp], #4)
   18ffc:	ldr	r3, [r0, #4]
   19000:	cmp	r3, #0
   19004:	beq	18fb4 <argp_error@@Base+0x1cc>
   19008:	ldr	r3, [r1, #8]
   1900c:	add	r3, r3, #1
   19010:	str	r3, [r1, #8]
   19014:	b	18fb4 <argp_error@@Base+0x1cc>
   19018:	cmp	r0, #86	; 0x56
   1901c:	beq	19028 <argp_error@@Base+0x240>
   19020:	mov	r0, #7
   19024:	bx	lr
   19028:	movw	r3, #1676	; 0x68c
   1902c:	movt	r3, #3
   19030:	str	r4, [sp, #-8]!
   19034:	ldr	r3, [r3]
   19038:	mov	r4, r2
   1903c:	str	lr, [sp, #4]
   19040:	cmp	r3, #0
   19044:	beq	19074 <argp_error@@Base+0x28c>
   19048:	mov	r1, r2
   1904c:	ldr	r0, [r2, #48]	; 0x30
   19050:	blx	r3
   19054:	ldr	r0, [r4, #16]
   19058:	ands	r0, r0, #32
   1905c:	beq	19070 <argp_error@@Base+0x288>
   19060:	ldr	r4, [sp]
   19064:	add	sp, sp, #4
   19068:	mov	r0, #0
   1906c:	pop	{pc}		; (ldr pc, [sp], #4)
   19070:	bl	112bc <exit@plt>
   19074:	movw	r3, #1760	; 0x6e0
   19078:	movt	r3, #3
   1907c:	ldr	r2, [r3]
   19080:	cmp	r2, #0
   19084:	beq	1909c <argp_error@@Base+0x2b4>
   19088:	movw	r1, #60280	; 0xeb78
   1908c:	movt	r1, #1
   19090:	ldr	r0, [r4, #48]	; 0x30
   19094:	bl	112ec <fprintf@plt>
   19098:	b	19054 <argp_error@@Base+0x26c>
   1909c:	movw	r2, #59884	; 0xe9ec
   190a0:	movt	r2, #1
   190a4:	movw	r1, #55152	; 0xd770
   190a8:	movt	r1, #1
   190ac:	mov	r0, r4
   190b0:	bl	18de8 <argp_error@@Base>
   190b4:	b	19054 <argp_error@@Base+0x26c>
   190b8:	cmn	r0, #3
   190bc:	str	r4, [sp, #-8]!
   190c0:	mov	r4, r2
   190c4:	str	lr, [sp, #4]
   190c8:	sub	sp, sp, #8
   190cc:	beq	191cc <argp_error@@Base+0x3e4>
   190d0:	ble	19108 <argp_error@@Base+0x320>
   190d4:	cmn	r0, #2
   190d8:	beq	19180 <argp_error@@Base+0x398>
   190dc:	cmp	r0, #63	; 0x3f
   190e0:	bne	1916c <argp_error@@Base+0x384>
   190e4:	mov	r0, r4
   190e8:	movw	r2, #634	; 0x27a
   190ec:	ldr	r1, [r4, #48]	; 0x30
   190f0:	bl	18d28 <argp_state_help@@Base>
   190f4:	mov	r0, #0
   190f8:	add	sp, sp, #8
   190fc:	ldr	r4, [sp]
   19100:	add	sp, sp, #4
   19104:	pop	{pc}		; (ldr pc, [sp], #4)
   19108:	cmn	r0, #4
   1910c:	bne	1916c <argp_error@@Base+0x384>
   19110:	cmp	r1, #0
   19114:	movw	r0, #59920	; 0xea10
   19118:	movt	r0, #1
   1911c:	mov	r2, #10
   19120:	movne	r0, r1
   19124:	movw	r4, #1672	; 0x688
   19128:	movt	r4, #3
   1912c:	mov	r1, #0
   19130:	bl	11100 <strtol@plt>
   19134:	str	r0, [r4]
   19138:	b	19144 <argp_error@@Base+0x35c>
   1913c:	mov	r0, #1
   19140:	bl	111cc <sleep@plt>
   19144:	ldr	r3, [r4]
   19148:	sub	r2, r3, #1
   1914c:	cmp	r3, #0
   19150:	str	r2, [r4]
   19154:	bgt	1913c <argp_error@@Base+0x354>
   19158:	mov	r0, #0
   1915c:	add	sp, sp, #8
   19160:	ldr	r4, [sp]
   19164:	add	sp, sp, #4
   19168:	pop	{pc}		; (ldr pc, [sp], #4)
   1916c:	mov	r0, #7
   19170:	add	sp, sp, #8
   19174:	ldr	r4, [sp]
   19178:	add	sp, sp, #4
   1917c:	pop	{pc}		; (ldr pc, [sp], #4)
   19180:	movw	r3, #1572	; 0x624
   19184:	movt	r3, #3
   19188:	str	r1, [sp, #4]
   1918c:	mov	r0, r1
   19190:	str	r1, [r3]
   19194:	bl	1a460 <argp_parse@@Base+0xf64>
   19198:	ldr	r3, [r4, #16]
   1919c:	movw	r2, #1568	; 0x620
   191a0:	movt	r2, #3
   191a4:	str	r0, [r4, #40]	; 0x28
   191a8:	str	r0, [r2]
   191ac:	ldr	r1, [sp, #4]
   191b0:	and	r3, r3, #3
   191b4:	cmp	r3, #1
   191b8:	bne	19158 <argp_error@@Base+0x370>
   191bc:	ldr	r3, [r4, #8]
   191c0:	mov	r0, #0
   191c4:	str	r1, [r3]
   191c8:	b	190f8 <argp_error@@Base+0x310>
   191cc:	ldr	r1, [r4, #48]	; 0x30
   191d0:	mov	r0, r4
   191d4:	movw	r2, #513	; 0x201
   191d8:	bl	18d28 <argp_state_help@@Base>
   191dc:	mov	r0, #0
   191e0:	add	sp, sp, #8
   191e4:	ldr	r4, [sp]
   191e8:	add	sp, sp, #4
   191ec:	pop	{pc}		; (ldr pc, [sp], #4)
   191f0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   191f4:	strd	r6, [sp, #8]
   191f8:	strd	r8, [sp, #16]
   191fc:	strd	sl, [sp, #24]
   19200:	str	lr, [sp, #32]
   19204:	sub	sp, sp, #44	; 0x2c
   19208:	ldr	fp, [r0]
   1920c:	str	r3, [sp, #16]
   19210:	ldr	r3, [r0, #16]
   19214:	ldr	r7, [sp, #80]	; 0x50
   19218:	cmp	fp, #0
   1921c:	str	r3, [sp, #24]
   19220:	strd	r0, [sp, #28]
   19224:	str	r2, [sp, #36]	; 0x24
   19228:	beq	194d4 <argp_error@@Base+0x6ec>
   1922c:	ldr	r9, [r7, #4]
   19230:	movw	r3, #36409	; 0x8e39
   19234:	movt	r3, #14563	; 0x38e3
   19238:	mov	r4, fp
   1923c:	str	r3, [sp, #20]
   19240:	ldr	r6, [r4, #4]
   19244:	cmp	r6, #0
   19248:	bne	19258 <argp_error@@Base+0x470>
   1924c:	ldr	r3, [r4]
   19250:	cmp	r3, #0
   19254:	beq	193cc <argp_error@@Base+0x5e4>
   19258:	ldr	r3, [r4, #12]
   1925c:	tst	r3, #4
   19260:	moveq	r5, r3
   19264:	moveq	fp, r4
   19268:	ldrne	r5, [fp, #12]
   1926c:	ands	r5, r5, #8
   19270:	bne	193b4 <argp_error@@Base+0x5cc>
   19274:	tst	r3, #8
   19278:	bne	192f8 <argp_error@@Base+0x510>
   1927c:	sub	r3, r6, #1
   19280:	cmp	r3, #254	; 0xfe
   19284:	bhi	192f8 <argp_error@@Base+0x510>
   19288:	bl	112a4 <__ctype_b_loc@plt>
   1928c:	ldr	r1, [r0]
   19290:	lsl	r3, r6, #1
   19294:	ldrh	r3, [r1, r3]
   19298:	tst	r3, #16384	; 0x4000
   1929c:	beq	192f8 <argp_error@@Base+0x510>
   192a0:	add	r3, r9, #1
   192a4:	str	r3, [r7, #4]
   192a8:	strb	r6, [r9]
   192ac:	ldr	r3, [fp, #8]
   192b0:	cmp	r3, #0
   192b4:	beq	192e8 <argp_error@@Base+0x500>
   192b8:	ldr	r3, [r7, #4]
   192bc:	mov	r2, #58	; 0x3a
   192c0:	add	r1, r3, #1
   192c4:	str	r1, [r7, #4]
   192c8:	strb	r2, [r3]
   192cc:	ldr	r3, [fp, #12]
   192d0:	tst	r3, #1
   192d4:	beq	192e8 <argp_error@@Base+0x500>
   192d8:	ldr	r3, [r7, #4]
   192dc:	add	r1, r3, #1
   192e0:	str	r1, [r7, #4]
   192e4:	strb	r2, [r3]
   192e8:	ldr	r3, [r7, #4]
   192ec:	mov	r2, #0
   192f0:	strb	r2, [r3]
   192f4:	ldr	r9, [r7, #4]
   192f8:	ldr	sl, [r4]
   192fc:	cmp	sl, #0
   19300:	beq	193b4 <argp_error@@Base+0x5cc>
   19304:	ldr	r3, [r7]
   19308:	ldr	r8, [r3, #8]
   1930c:	str	r3, [sp, #12]
   19310:	ldr	r0, [r8]
   19314:	cmp	r0, #0
   19318:	beq	1933c <argp_error@@Base+0x554>
   1931c:	mov	r6, r8
   19320:	mov	r1, sl
   19324:	bl	110f4 <strcmp@plt>
   19328:	cmp	r0, #0
   1932c:	beq	193bc <argp_error@@Base+0x5d4>
   19330:	ldr	r0, [r6, #16]!
   19334:	cmp	r0, #0
   19338:	bne	19320 <argp_error@@Base+0x538>
   1933c:	ldr	r0, [fp, #8]
   19340:	ldr	r1, [r7, #8]
   19344:	cmp	r0, #0
   19348:	str	sl, [r1]
   1934c:	beq	19360 <argp_error@@Base+0x578>
   19350:	ldr	r3, [fp, #12]
   19354:	tst	r3, #1
   19358:	movne	r5, #2
   1935c:	moveq	r5, #1
   19360:	str	r5, [r1, #4]
   19364:	mov	r3, #0
   19368:	add	ip, r1, #16
   1936c:	ldr	r0, [r4, #4]
   19370:	str	r3, [r1, #8]
   19374:	ldr	r2, [sp, #16]
   19378:	cmp	r0, r3
   1937c:	ldr	r3, [sp, #12]
   19380:	ldreq	r0, [fp, #4]
   19384:	ldr	r3, [r3, #48]	; 0x30
   19388:	bic	r0, r0, #-16777216	; 0xff000000
   1938c:	sub	r3, r2, r3
   19390:	ldr	r2, [sp, #20]
   19394:	asr	r3, r3, #2
   19398:	mul	r3, r2, r3
   1939c:	add	r3, r3, #1
   193a0:	add	r3, r0, r3, lsl #24
   193a4:	str	r3, [r1, #12]
   193a8:	mov	r3, #0
   193ac:	str	ip, [r7, #8]
   193b0:	str	r3, [r1, #16]
   193b4:	add	r4, r4, #24
   193b8:	b	19240 <argp_error@@Base+0x458>
   193bc:	sub	r6, r6, r8
   193c0:	cmp	r6, #0
   193c4:	bge	193b4 <argp_error@@Base+0x5cc>
   193c8:	b	1933c <argp_error@@Base+0x554>
   193cc:	ldr	r3, [r4, #16]
   193d0:	cmp	r3, #0
   193d4:	bne	19258 <argp_error@@Base+0x470>
   193d8:	ldr	r3, [r4, #20]
   193dc:	cmp	r3, #0
   193e0:	bne	19258 <argp_error@@Base+0x470>
   193e4:	ldr	r3, [sp, #28]
   193e8:	ldr	r2, [r3, #4]
   193ec:	mov	r3, #0
   193f0:	ldr	r1, [sp, #16]
   193f4:	ldr	r0, [sp, #24]
   193f8:	str	r2, [r1]
   193fc:	mov	r2, r1
   19400:	ldr	r1, [sp, #28]
   19404:	cmp	r0, r3
   19408:	stmib	r2, {r1, r9}
   1940c:	ldr	r1, [sp, #32]
   19410:	str	r3, [r2, #12]
   19414:	str	r1, [r2, #16]
   19418:	ldr	r1, [sp, #36]	; 0x24
   1941c:	str	r3, [r2, #24]
   19420:	str	r3, [r2, #28]
   19424:	str	r3, [r2, #32]
   19428:	str	r1, [r2, #20]
   1942c:	beq	19468 <argp_error@@Base+0x680>
   19430:	ldr	r2, [r0]
   19434:	cmp	r2, r3
   19438:	beq	194f4 <argp_error@@Base+0x70c>
   1943c:	mov	r1, r0
   19440:	add	r3, r3, #1
   19444:	ldr	r2, [r1, r3, lsl #4]
   19448:	cmp	r2, #0
   1944c:	bne	19440 <argp_error@@Base+0x658>
   19450:	lsl	r3, r3, #2
   19454:	ldr	r2, [r7, #12]
   19458:	ldr	r1, [sp, #16]
   1945c:	add	r3, r2, r3
   19460:	str	r2, [r1, #28]
   19464:	str	r3, [r7, #12]
   19468:	ldr	r3, [sp, #16]
   1946c:	add	r0, r3, #36	; 0x24
   19470:	ldr	r5, [sp, #24]
   19474:	cmp	r5, #0
   19478:	beq	194b8 <argp_error@@Base+0x6d0>
   1947c:	ldr	r1, [r5]
   19480:	cmp	r1, #0
   19484:	beq	194b8 <argp_error@@Base+0x6d0>
   19488:	ldr	r6, [sp, #16]
   1948c:	mov	r2, #0
   19490:	add	r4, r2, #1
   19494:	mov	r3, r0
   19498:	str	r7, [sp]
   1949c:	mov	r0, r1
   194a0:	mov	r1, r6
   194a4:	bl	191f0 <argp_error@@Base+0x408>
   194a8:	ldr	r1, [r5, r4, lsl #4]
   194ac:	mov	r2, r4
   194b0:	cmp	r1, #0
   194b4:	bne	19490 <argp_error@@Base+0x6a8>
   194b8:	add	sp, sp, #44	; 0x2c
   194bc:	ldrd	r4, [sp]
   194c0:	ldrd	r6, [sp, #8]
   194c4:	ldrd	r8, [sp, #16]
   194c8:	ldrd	sl, [sp, #24]
   194cc:	add	sp, sp, #32
   194d0:	pop	{pc}		; (ldr pc, [sp], #4)
   194d4:	ldr	r2, [r0, #4]
   194d8:	cmp	r2, #0
   194dc:	beq	194e8 <argp_error@@Base+0x700>
   194e0:	ldr	r9, [r7, #4]
   194e4:	b	193ec <argp_error@@Base+0x604>
   194e8:	ldr	r0, [sp, #16]
   194ec:	str	r2, [sp, #16]
   194f0:	b	19470 <argp_error@@Base+0x688>
   194f4:	mov	r3, r2
   194f8:	b	19454 <argp_error@@Base+0x66c>

000194fc <argp_parse@@Base>:
   194fc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19500:	tst	r3, #1
   19504:	mov	r4, r3
   19508:	strd	r6, [sp, #8]
   1950c:	strd	r8, [sp, #16]
   19510:	strd	sl, [sp, #24]
   19514:	add	fp, sp, #32
   19518:	str	lr, [sp, #32]
   1951c:	sub	sp, sp, #236	; 0xec
   19520:	str	r1, [fp, #-256]	; 0xffffff00
   19524:	str	r2, [fp, #-236]	; 0xffffff14
   19528:	str	r0, [fp, #-232]	; 0xffffff18
   1952c:	bne	19558 <argp_parse@@Base+0x5c>
   19530:	movw	r3, #1572	; 0x624
   19534:	movt	r3, #3
   19538:	ldr	r2, [r3]
   1953c:	cmp	r2, #0
   19540:	beq	19f84 <argp_parse@@Base+0xa88>
   19544:	movw	r5, #1568	; 0x620
   19548:	movt	r5, #3
   1954c:	ldr	r3, [r5]
   19550:	cmp	r3, #0
   19554:	beq	19f94 <argp_parse@@Base+0xa98>
   19558:	ands	r3, r4, #4
   1955c:	moveq	r5, #1
   19560:	movne	r5, #0
   19564:	ands	ip, r4, #16
   19568:	str	r3, [fp, #-240]	; 0xffffff10
   1956c:	beq	195c4 <argp_parse@@Base+0xc8>
   19570:	ldr	r2, [fp, #-232]	; 0xffffff18
   19574:	mov	r3, #0
   19578:	sub	r9, fp, #196	; 0xc4
   1957c:	str	r5, [fp, #-228]	; 0xffffff1c
   19580:	str	r3, [fp, #-224]	; 0xffffff20
   19584:	str	r3, [fp, #-220]	; 0xffffff24
   19588:	str	r3, [fp, #-216]	; 0xffffff28
   1958c:	cmp	r2, r3
   19590:	str	r3, [r9, #8]
   19594:	str	r3, [r9, #12]
   19598:	str	r3, [r9, #16]
   1959c:	str	r3, [r9, #20]
   195a0:	str	r3, [r9, #24]
   195a4:	str	r3, [r9, #28]
   195a8:	str	r3, [r9, #32]
   195ac:	bne	19678 <argp_parse@@Base+0x17c>
   195b0:	mov	r3, #52	; 0x34
   195b4:	mov	sl, #36	; 0x24
   195b8:	str	r3, [fp, #-240]	; 0xffffff10
   195bc:	mov	r3, sl
   195c0:	b	196b4 <argp_parse@@Base+0x1b8>
   195c4:	sub	sp, sp, #64	; 0x40
   195c8:	mov	r1, ip
   195cc:	add	r3, sp, #8
   195d0:	sub	sp, sp, #32
   195d4:	add	r7, sp, #8
   195d8:	mov	r0, r3
   195dc:	mov	r2, #64	; 0x40
   195e0:	str	ip, [r7]
   195e4:	str	ip, [r7, #4]
   195e8:	str	ip, [r7, #8]
   195ec:	str	ip, [r7, #12]
   195f0:	str	r3, [r7, #16]
   195f4:	str	ip, [r7, #20]
   195f8:	str	ip, [r7, #24]
   195fc:	bl	11328 <memset@plt>
   19600:	ldr	r2, [fp, #-232]	; 0xffffff18
   19604:	mov	r3, r0
   19608:	cmp	r2, #0
   1960c:	strne	r2, [r3], #16
   19610:	movw	r2, #1760	; 0x6e0
   19614:	movt	r2, #3
   19618:	ldr	r1, [r2]
   1961c:	movw	r2, #59604	; 0xe8d4
   19620:	movt	r2, #1
   19624:	str	r2, [r3]
   19628:	cmp	r1, #0
   1962c:	beq	1a120 <argp_parse@@Base+0xc24>
   19630:	ldr	r1, [pc, #3444]	; 1a3ac <argp_parse@@Base+0xeb0>
   19634:	add	r2, r3, #32
   19638:	str	r1, [r3, #16]
   1963c:	mov	r3, #0
   19640:	sub	r9, fp, #196	; 0xc4
   19644:	str	r7, [fp, #-232]	; 0xffffff18
   19648:	str	r5, [fp, #-228]	; 0xffffff1c
   1964c:	str	r3, [fp, #-224]	; 0xffffff20
   19650:	str	r3, [fp, #-220]	; 0xffffff24
   19654:	str	r3, [fp, #-216]	; 0xffffff28
   19658:	str	r3, [r2]
   1965c:	str	r3, [r9, #8]
   19660:	str	r3, [r9, #12]
   19664:	str	r3, [r9, #16]
   19668:	str	r3, [r9, #20]
   1966c:	str	r3, [r9, #24]
   19670:	str	r3, [r9, #28]
   19674:	str	r3, [r9, #32]
   19678:	sub	r1, fp, #228	; 0xe4
   1967c:	ldr	r0, [fp, #-232]	; 0xffffff18
   19680:	bl	18f38 <argp_error@@Base+0x150>
   19684:	ldr	r5, [fp, #-228]	; 0xffffff1c
   19688:	ldr	r3, [fp, #-220]	; 0xffffff24
   1968c:	ldr	r2, [fp, #-216]	; 0xffffff28
   19690:	ldr	r7, [fp, #-224]	; 0xffffff20
   19694:	add	r3, r3, #1
   19698:	add	r3, r3, r3, lsl #3
   1969c:	lsl	r2, r2, #2
   196a0:	lsl	r3, r3, #2
   196a4:	add	r7, r7, #1
   196a8:	add	sl, r2, r3
   196ac:	add	r1, sl, r7, lsl #4
   196b0:	str	r1, [fp, #-240]	; 0xffffff10
   196b4:	str	r3, [fp, #-252]	; 0xffffff04
   196b8:	ldr	r3, [fp, #-240]	; 0xffffff10
   196bc:	str	r2, [fp, #-244]	; 0xffffff0c
   196c0:	add	r0, r3, r5
   196c4:	add	r0, r0, #1
   196c8:	bl	1b920 <argp_parse@@Base+0x2424>
   196cc:	cmp	r0, #0
   196d0:	mov	r5, r0
   196d4:	str	r0, [fp, #-40]	; 0xffffffd8
   196d8:	moveq	r5, #12
   196dc:	ldr	r3, [fp, #-252]	; 0xffffff04
   196e0:	ldr	r2, [fp, #-244]	; 0xffffff0c
   196e4:	beq	19bf8 <argp_parse@@Base+0x6fc>
   196e8:	add	ip, r5, sl
   196ec:	add	r3, r5, r3
   196f0:	ldr	r1, [fp, #-240]	; 0xffffff10
   196f4:	str	ip, [fp, #-244]	; 0xffffff0c
   196f8:	ldrd	r6, [r9, #8]
   196fc:	str	ip, [fp, #-152]	; 0xffffff68
   19700:	add	sl, r5, r1
   19704:	ldrd	r0, [r9, #16]
   19708:	str	r5, [fp, #-112]	; 0xffffff90
   1970c:	strd	r6, [fp, #-140]	; 0xffffff74
   19710:	ldrd	r6, [r9, #24]
   19714:	strd	r0, [fp, #-252]	; 0xffffff04
   19718:	mov	r0, r3
   1971c:	ldr	r1, [r9, #32]
   19720:	str	sl, [fp, #-156]	; 0xffffff64
   19724:	ldrd	r8, [fp, #-252]	; 0xffffff04
   19728:	str	r3, [fp, #-104]	; 0xffffff98
   1972c:	strd	r8, [fp, #-132]	; 0xffffff7c
   19730:	mov	r9, #1
   19734:	mov	r8, #1
   19738:	str	r1, [fp, #-116]	; 0xffffff8c
   1973c:	mov	r1, #0
   19740:	strd	r8, [fp, #-196]	; 0xffffff3c
   19744:	strd	r8, [fp, #-148]	; 0xffffff6c
   19748:	sub	r9, fp, #160	; 0xa0
   1974c:	strd	r6, [fp, #-124]	; 0xffffff84
   19750:	bl	11328 <memset@plt>
   19754:	ldr	ip, [fp, #-244]	; 0xffffff0c
   19758:	tst	r4, #8
   1975c:	str	r9, [fp, #-212]	; 0xffffff2c
   19760:	str	sl, [fp, #-208]	; 0xffffff30
   19764:	str	ip, [fp, #-204]	; 0xffffff34
   19768:	str	r0, [fp, #-200]	; 0xffffff38
   1976c:	bne	19c18 <argp_parse@@Base+0x71c>
   19770:	ands	r3, r4, #4
   19774:	cmp	r3, #0
   19778:	moveq	r3, sl
   1977c:	moveq	r2, ip
   19780:	beq	19798 <argp_parse@@Base+0x29c>
   19784:	mov	r2, #43	; 0x2b
   19788:	add	r3, sl, #1
   1978c:	strb	r2, [sl]
   19790:	mov	r2, ip
   19794:	str	r3, [fp, #-208]	; 0xffffff30
   19798:	ldr	r0, [fp, #-232]	; 0xffffff18
   1979c:	mov	r5, #0
   197a0:	strb	r5, [r3]
   197a4:	str	r5, [r2]
   197a8:	cmp	r0, r5
   197ac:	str	r0, [fp, #-160]	; 0xffffff60
   197b0:	beq	19e04 <argp_parse@@Base+0x908>
   197b4:	sub	ip, fp, #212	; 0xd4
   197b8:	mov	r2, r5
   197bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   197c0:	mov	r1, r5
   197c4:	str	ip, [sp]
   197c8:	bl	191f0 <argp_error@@Base+0x408>
   197cc:	movw	r1, #1576	; 0x628
   197d0:	movt	r1, #3
   197d4:	ldr	r6, [fp, #-236]	; 0xffffff14
   197d8:	mov	lr, #1
   197dc:	movw	r2, #1580	; 0x62c
   197e0:	movt	r2, #3
   197e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   197e8:	str	r0, [fp, #-108]	; 0xffffff94
   197ec:	ldr	ip, [r1]
   197f0:	str	lr, [fp, #-100]	; 0xffffff9c
   197f4:	ldr	r1, [fp, #-256]	; 0xffffff00
   197f8:	cmp	r0, r3
   197fc:	mov	r0, #0
   19800:	ldr	lr, [fp, #-160]	; 0xffffff60
   19804:	movls	r3, r6
   19808:	ldr	r2, [r2]
   1980c:	str	ip, [fp, #-52]	; 0xffffffcc
   19810:	str	r9, [fp, #-44]	; 0xffffffd4
   19814:	str	r1, [fp, #-92]	; 0xffffffa4
   19818:	mov	r1, #0
   1981c:	str	lr, [fp, #-96]	; 0xffffffa0
   19820:	str	r6, [fp, #-88]	; 0xffffffa8
   19824:	str	r5, [fp, #-84]	; 0xffffffac
   19828:	str	r4, [fp, #-80]	; 0xffffffb0
   1982c:	strd	r0, [fp, #-76]	; 0xffffffb4
   19830:	strd	r0, [fp, #-68]	; 0xffffffbc
   19834:	strd	r0, [fp, #-60]	; 0xffffffc4
   19838:	str	r2, [fp, #-48]	; 0xffffffd0
   1983c:	bls	19924 <argp_parse@@Base+0x428>
   19840:	ldr	r2, [fp, #8]
   19844:	mov	r8, r6
   19848:	add	r4, r3, #36	; 0x24
   1984c:	mov	r6, #3
   19850:	movt	r6, #256	; 0x100
   19854:	str	r2, [r3, #24]
   19858:	b	198a4 <argp_parse@@Base+0x3a8>
   1985c:	ldr	r7, [r4, #-24]	; 0xffffffe8
   19860:	ldr	r5, [r4, #-12]
   19864:	ldr	lr, [r4, #-8]
   19868:	ldr	ip, [r4, #-4]
   1986c:	str	r7, [fp, #-76]	; 0xffffffb4
   19870:	str	r5, [fp, #-68]	; 0xffffffbc
   19874:	str	lr, [fp, #-64]	; 0xffffffc0
   19878:	str	ip, [fp, #-60]	; 0xffffffc4
   1987c:	blx	r3
   19880:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19884:	str	r3, [r4, #-4]
   19888:	ldr	r3, [fp, #-108]	; 0xffffff94
   1988c:	cmp	r3, r4
   19890:	bls	19eb8 <argp_parse@@Base+0x9bc>
   19894:	cmp	r0, #7
   19898:	cmpne	r0, #0
   1989c:	bne	19ea8 <argp_parse@@Base+0x9ac>
   198a0:	add	r4, r4, #36	; 0x24
   198a4:	ldr	r3, [r4, #-20]	; 0xffffffec
   198a8:	mov	r1, #0
   198ac:	sub	r2, fp, #96	; 0x60
   198b0:	mov	r0, r6
   198b4:	cmp	r3, r1
   198b8:	beq	198cc <argp_parse@@Base+0x3d0>
   198bc:	ldr	ip, [r4, #-16]
   198c0:	ldr	r3, [r3, #28]
   198c4:	ldr	r3, [r3, ip, lsl #2]
   198c8:	str	r3, [r4, #-12]
   198cc:	ldr	r3, [r4, #-36]	; 0xffffffdc
   198d0:	cmp	r3, #0
   198d4:	bne	1985c <argp_parse@@Base+0x360>
   198d8:	ldr	r3, [r4, #-32]	; 0xffffffe0
   198dc:	ldr	r3, [r3, #16]
   198e0:	cmp	r3, #0
   198e4:	beq	1990c <argp_parse@@Base+0x410>
   198e8:	ldr	r3, [r3]
   198ec:	cmp	r3, #0
   198f0:	beq	1990c <argp_parse@@Base+0x410>
   198f4:	ldr	ip, [r4, #-12]
   198f8:	ldr	r3, [r4, #-8]
   198fc:	str	ip, [r3]
   19900:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19904:	cmp	r3, #0
   19908:	bne	1985c <argp_parse@@Base+0x360>
   1990c:	ldr	r3, [fp, #-108]	; 0xffffff94
   19910:	cmp	r4, r3
   19914:	bcc	198a0 <argp_parse@@Base+0x3a4>
   19918:	str	r8, [fp, #-236]	; 0xffffff14
   1991c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19920:	ldr	r4, [fp, #-80]	; 0xffffffb0
   19924:	tst	r4, #2
   19928:	beq	19e78 <argp_parse@@Base+0x97c>
   1992c:	tst	r4, #1
   19930:	mov	r2, #0
   19934:	ldr	r4, [fp, #-92]	; 0xffffffa4
   19938:	subne	r3, r3, #4
   1993c:	str	r2, [fp, #-144]	; 0xffffff70
   19940:	ldr	r2, [fp, #-236]	; 0xffffff14
   19944:	strne	r3, [fp, #-88]	; 0xffffffa8
   19948:	addne	r4, r4, #1
   1994c:	strne	r4, [fp, #-92]	; 0xffffffa4
   19950:	cmp	r2, r3
   19954:	beq	19e90 <argp_parse@@Base+0x994>
   19958:	movw	r3, #1568	; 0x620
   1995c:	movt	r3, #3
   19960:	ldr	r3, [r3]
   19964:	str	r3, [fp, #-56]	; 0xffffffc8
   19968:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1996c:	movw	r3, #59932	; 0xea1c
   19970:	movt	r3, #1
   19974:	mov	r9, #6
   19978:	movt	r9, #256	; 0x100
   1997c:	ldr	r7, [fp, #-84]	; 0xffffffac
   19980:	mov	r0, r4
   19984:	str	r3, [fp, #-232]	; 0xffffff18
   19988:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1998c:	cmp	r3, #0
   19990:	beq	19a78 <argp_parse@@Base+0x57c>
   19994:	cmp	r3, r7
   19998:	movgt	r3, #0
   1999c:	strgt	r3, [fp, #-72]	; 0xffffffb8
   199a0:	bgt	19a78 <argp_parse@@Base+0x57c>
   199a4:	cmp	r7, r0
   199a8:	bge	19cc8 <argp_parse@@Base+0x7cc>
   199ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   199b0:	tst	r3, #4
   199b4:	bne	19edc <argp_parse@@Base+0x9e0>
   199b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   199bc:	ldr	r5, [r3, r7, lsl #2]
   199c0:	str	r5, [fp, #-136]	; 0xffffff78
   199c4:	ldr	r8, [fp, #-112]	; 0xffffff90
   199c8:	str	r7, [fp, #-84]	; 0xffffffac
   199cc:	ldr	ip, [fp, #-108]	; 0xffffff94
   199d0:	cmp	r8, ip
   199d4:	bcs	19cc0 <argp_parse@@Base+0x7c4>
   199d8:	mov	r3, r7
   199dc:	add	r4, r8, #36	; 0x24
   199e0:	ldr	sl, [r4, #-36]	; 0xffffffdc
   199e4:	mov	r0, #0
   199e8:	add	lr, r3, #1
   199ec:	sub	r2, fp, #96	; 0x60
   199f0:	mov	r1, r5
   199f4:	sub	r6, r4, #36	; 0x24
   199f8:	mov	r8, r4
   199fc:	str	lr, [fp, #-84]	; 0xffffffac
   19a00:	cmp	sl, r0
   19a04:	beq	19cac <argp_parse@@Base+0x7b0>
   19a08:	ldr	r3, [r4, #-12]
   19a0c:	ldr	lr, [r4, #-8]
   19a10:	ldr	ip, [r4, #-4]
   19a14:	str	r3, [fp, #-68]	; 0xffffffbc
   19a18:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19a1c:	str	r3, [fp, #-76]	; 0xffffffb4
   19a20:	str	lr, [fp, #-64]	; 0xffffffc0
   19a24:	str	ip, [fp, #-60]	; 0xffffffc4
   19a28:	blx	sl
   19a2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19a30:	cmp	r0, #7
   19a34:	str	r3, [r4, #-4]
   19a38:	beq	19c34 <argp_parse@@Base+0x738>
   19a3c:	cmp	r0, #0
   19a40:	bne	19d7c <argp_parse@@Base+0x880>
   19a44:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19a48:	ldr	r3, [fp, #-84]	; 0xffffffac
   19a4c:	cmp	r7, r3
   19a50:	bge	19d94 <argp_parse@@Base+0x898>
   19a54:	ldr	r1, [r4, #-24]	; 0xffffffe8
   19a58:	sub	ip, r3, r7
   19a5c:	mov	r7, r3
   19a60:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19a64:	add	r3, r1, ip
   19a68:	str	r3, [r4, #-24]	; 0xffffffe8
   19a6c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19a70:	cmp	r3, #0
   19a74:	bne	19994 <argp_parse@@Base+0x498>
   19a78:	cmp	r2, #0
   19a7c:	beq	199a4 <argp_parse@@Base+0x4a8>
   19a80:	mvn	r2, #0
   19a84:	str	r7, [fp, #-148]	; 0xffffff6c
   19a88:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19a8c:	str	r2, [fp, #-140]	; 0xffffff74
   19a90:	ldr	r2, [fp, #-156]	; 0xffffff64
   19a94:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19a98:	ands	ip, r3, #64	; 0x40
   19a9c:	ldr	r3, [fp, #-152]	; 0xffffff68
   19aa0:	beq	19da8 <argp_parse@@Base+0x8ac>
   19aa4:	mov	ip, #0
   19aa8:	sub	lr, fp, #148	; 0x94
   19aac:	stm	sp, {ip, lr}
   19ab0:	bl	1a624 <argp_parse@@Base+0x1128>
   19ab4:	ldr	r7, [fp, #-148]	; 0xffffff6c
   19ab8:	mov	r4, r0
   19abc:	cmn	r4, #1
   19ac0:	str	r7, [fp, #-84]	; 0xffffffac
   19ac4:	beq	19dcc <argp_parse@@Base+0x8d0>
   19ac8:	cmp	r4, #63	; 0x3f
   19acc:	beq	19ae4 <argp_parse@@Base+0x5e8>
   19ad0:	cmp	r4, #1
   19ad4:	bne	1a090 <argp_parse@@Base+0xb94>
   19ad8:	sub	r7, r7, #1
   19adc:	ldr	r5, [fp, #-136]	; 0xffffff78
   19ae0:	b	199c4 <argp_parse@@Base+0x4c8>
   19ae4:	ldr	r3, [fp, #-140]	; 0xffffff74
   19ae8:	cmn	r3, #1
   19aec:	beq	19fa8 <argp_parse@@Base+0xaac>
   19af0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19af4:	sub	r6, fp, #96	; 0x60
   19af8:	mov	r0, r6
   19afc:	mov	r2, #260	; 0x104
   19b00:	mov	r5, #7
   19b04:	bl	18d28 <argp_state_help@@Base>
   19b08:	ldr	r3, [fp, #-112]	; 0xffffff90
   19b0c:	ldr	ip, [fp, #-108]	; 0xffffff94
   19b10:	cmp	r3, ip
   19b14:	mov	r6, r3
   19b18:	mov	r4, ip
   19b1c:	bcs	1a330 <argp_parse@@Base+0xe34>
   19b20:	mov	r7, #5
   19b24:	movt	r7, #256	; 0x100
   19b28:	ldr	r3, [r6]
   19b2c:	mov	r1, #0
   19b30:	sub	r2, fp, #96	; 0x60
   19b34:	mov	r0, r7
   19b38:	cmp	r3, r1
   19b3c:	beq	1a06c <argp_parse@@Base+0xb70>
   19b40:	ldr	ip, [r6, #24]
   19b44:	add	r6, r6, #36	; 0x24
   19b48:	ldr	r4, [r6, #-8]
   19b4c:	ldr	lr, [r6, #-4]
   19b50:	str	ip, [fp, #-68]	; 0xffffffbc
   19b54:	ldr	ip, [r6, #-24]	; 0xffffffe8
   19b58:	str	ip, [fp, #-76]	; 0xffffffb4
   19b5c:	str	r4, [fp, #-64]	; 0xffffffc0
   19b60:	str	lr, [fp, #-60]	; 0xffffffc4
   19b64:	blx	r3
   19b68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19b6c:	str	r3, [r6, #-4]
   19b70:	ldr	r4, [fp, #-108]	; 0xffffff94
   19b74:	cmp	r6, r4
   19b78:	bcc	19b28 <argp_parse@@Base+0x62c>
   19b7c:	ldr	r3, [fp, #-112]	; 0xffffff90
   19b80:	sub	r4, r4, #36	; 0x24
   19b84:	cmp	r3, r4
   19b88:	bhi	19be8 <argp_parse@@Base+0x6ec>
   19b8c:	mov	r7, #7
   19b90:	movt	r7, #256	; 0x100
   19b94:	ldr	r6, [r4]
   19b98:	mov	r1, #0
   19b9c:	sub	r2, fp, #96	; 0x60
   19ba0:	mov	r0, r7
   19ba4:	cmp	r6, r1
   19ba8:	beq	1a05c <argp_parse@@Base+0xb60>
   19bac:	ldr	r8, [r4, #12]
   19bb0:	sub	r4, r4, #36	; 0x24
   19bb4:	ldr	lr, [r4, #60]	; 0x3c
   19bb8:	ldr	ip, [r4, #64]	; 0x40
   19bbc:	ldr	r3, [r4, #68]	; 0x44
   19bc0:	str	r8, [fp, #-76]	; 0xffffffb4
   19bc4:	str	lr, [fp, #-68]	; 0xffffffbc
   19bc8:	str	ip, [fp, #-64]	; 0xffffffc0
   19bcc:	str	r3, [fp, #-60]	; 0xffffffc4
   19bd0:	blx	r6
   19bd4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19bd8:	str	r3, [r4, #68]	; 0x44
   19bdc:	ldr	r3, [fp, #-112]	; 0xffffff90
   19be0:	cmp	r3, r4
   19be4:	bls	19b94 <argp_parse@@Base+0x698>
   19be8:	cmp	r5, #7
   19bec:	moveq	r5, #22
   19bf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19bf4:	bl	1a534 <argp_parse@@Base+0x1038>
   19bf8:	mov	r0, r5
   19bfc:	sub	sp, fp, #32
   19c00:	ldrd	r4, [sp]
   19c04:	ldrd	r6, [sp, #8]
   19c08:	ldrd	r8, [sp, #16]
   19c0c:	ldrd	sl, [sp, #24]
   19c10:	add	sp, sp, #32
   19c14:	pop	{pc}		; (ldr pc, [sp], #4)
   19c18:	ldr	r1, [fp, #-240]	; 0xffffff10
   19c1c:	mov	r2, #45	; 0x2d
   19c20:	add	r3, sl, #1
   19c24:	str	r3, [fp, #-208]	; 0xffffff30
   19c28:	strb	r2, [r5, r1]
   19c2c:	mov	r2, ip
   19c30:	b	19798 <argp_parse@@Base+0x29c>
   19c34:	ldr	r3, [fp, #-84]	; 0xffffffac
   19c38:	ldr	sl, [r4, #-36]	; 0xffffffdc
   19c3c:	sub	r3, r3, #1
   19c40:	cmp	sl, #0
   19c44:	str	r3, [fp, #-84]	; 0xffffffac
   19c48:	beq	1a378 <argp_parse@@Base+0xe7c>
   19c4c:	ldr	r3, [r6, #24]
   19c50:	sub	r2, fp, #96	; 0x60
   19c54:	mov	r1, #0
   19c58:	mov	r0, r9
   19c5c:	ldr	lr, [r6, #28]
   19c60:	ldr	ip, [r6, #32]
   19c64:	str	r3, [fp, #-68]	; 0xffffffbc
   19c68:	ldr	r3, [r6, #12]
   19c6c:	str	r3, [fp, #-76]	; 0xffffffb4
   19c70:	str	lr, [fp, #-64]	; 0xffffffc0
   19c74:	str	ip, [fp, #-60]	; 0xffffffc4
   19c78:	blx	sl
   19c7c:	ldr	ip, [fp, #-108]	; 0xffffff94
   19c80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19c84:	cmp	ip, r4
   19c88:	movls	r2, #0
   19c8c:	movhi	r2, #1
   19c90:	cmp	r0, #7
   19c94:	str	r3, [r6, #32]
   19c98:	movne	r2, #0
   19c9c:	cmp	r2, #0
   19ca0:	beq	1a380 <argp_parse@@Base+0xe84>
   19ca4:	ldr	r3, [fp, #-84]	; 0xffffffac
   19ca8:	b	199dc <argp_parse@@Base+0x4e0>
   19cac:	str	r3, [fp, #-84]	; 0xffffffac
   19cb0:	add	r2, r4, #36	; 0x24
   19cb4:	cmp	ip, r4
   19cb8:	mov	r4, r2
   19cbc:	bhi	199e0 <argp_parse@@Base+0x4e4>
   19cc0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19cc4:	ldr	r7, [fp, #-84]	; 0xffffffac
   19cc8:	cmp	r7, r0
   19ccc:	bne	19edc <argp_parse@@Base+0x9e0>
   19cd0:	ldr	r4, [fp, #-112]	; 0xffffff90
   19cd4:	ldr	ip, [fp, #-108]	; 0xffffff94
   19cd8:	mov	r3, r4
   19cdc:	cmp	r4, ip
   19ce0:	bcs	1a340 <argp_parse@@Base+0xe44>
   19ce4:	mov	r6, #2
   19ce8:	movt	r6, #256	; 0x100
   19cec:	mov	r5, #0
   19cf0:	b	19d38 <argp_parse@@Base+0x83c>
   19cf4:	ldr	r7, [r4, #-12]
   19cf8:	ldr	lr, [r4, #-8]
   19cfc:	ldr	ip, [r4, #-4]
   19d00:	str	r3, [fp, #-76]	; 0xffffffb4
   19d04:	str	r7, [fp, #-68]	; 0xffffffbc
   19d08:	str	lr, [fp, #-64]	; 0xffffffc0
   19d0c:	str	ip, [fp, #-60]	; 0xffffffc4
   19d10:	blx	r5
   19d14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19d18:	mov	r5, r0
   19d1c:	str	r3, [r4, #-4]
   19d20:	ldr	ip, [fp, #-108]	; 0xffffff94
   19d24:	cmp	ip, r4
   19d28:	bls	1a214 <argp_parse@@Base+0xd18>
   19d2c:	cmp	r5, #7
   19d30:	cmpne	r5, #0
   19d34:	bne	1a1dc <argp_parse@@Base+0xce0>
   19d38:	ldr	r3, [r4, #12]
   19d3c:	sub	r2, fp, #96	; 0x60
   19d40:	mov	r0, r6
   19d44:	add	r4, r4, #36	; 0x24
   19d48:	subs	r1, r3, #0
   19d4c:	bne	19d24 <argp_parse@@Base+0x828>
   19d50:	ldr	r5, [r4, #-36]	; 0xffffffdc
   19d54:	cmp	r5, #0
   19d58:	bne	19cf4 <argp_parse@@Base+0x7f8>
   19d5c:	cmp	ip, r4
   19d60:	mov	r5, #7
   19d64:	bhi	19d38 <argp_parse@@Base+0x83c>
   19d68:	ldr	r3, [fp, #-112]	; 0xffffff90
   19d6c:	sub	r4, ip, #36	; 0x24
   19d70:	cmp	r3, r4
   19d74:	bls	1a230 <argp_parse@@Base+0xd34>
   19d78:	b	1a2b4 <argp_parse@@Base+0xdb8>
   19d7c:	mov	r5, r0
   19d80:	cmp	r5, #7
   19d84:	bne	19b08 <argp_parse@@Base+0x60c>
   19d88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19d8c:	sub	r6, fp, #96	; 0x60
   19d90:	b	19af8 <argp_parse@@Base+0x5fc>
   19d94:	mov	r1, #1
   19d98:	mov	r7, r3
   19d9c:	mov	r2, r1
   19da0:	str	r1, [fp, #-100]	; 0xffffff9c
   19da4:	b	19988 <argp_parse@@Base+0x48c>
   19da8:	str	ip, [sp]
   19dac:	sub	ip, fp, #148	; 0x94
   19db0:	str	ip, [sp, #4]
   19db4:	bl	1a5bc <argp_parse@@Base+0x10c0>
   19db8:	ldr	r7, [fp, #-148]	; 0xffffff6c
   19dbc:	mov	r4, r0
   19dc0:	cmn	r4, #1
   19dc4:	str	r7, [fp, #-84]	; 0xffffffac
   19dc8:	bne	19ac8 <argp_parse@@Base+0x5cc>
   19dcc:	mov	r3, #0
   19dd0:	cmp	r7, #1
   19dd4:	str	r3, [fp, #-100]	; 0xffffff9c
   19dd8:	ble	19eb0 <argp_parse@@Base+0x9b4>
   19ddc:	sub	r3, r7, #-1073741823	; 0xc0000001
   19de0:	ldr	r1, [fp, #-232]	; 0xffffff18
   19de4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19de8:	ldr	r0, [r2, r3, lsl #2]
   19dec:	bl	110f4 <strcmp@plt>
   19df0:	cmp	r0, #0
   19df4:	bne	19eb0 <argp_parse@@Base+0x9b4>
   19df8:	str	r7, [fp, #-72]	; 0xffffffb8
   19dfc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19e00:	b	199a4 <argp_parse@@Base+0x4a8>
   19e04:	ldr	r2, [fp, #-256]	; 0xffffff00
   19e08:	movw	r3, #1576	; 0x628
   19e0c:	movt	r3, #3
   19e10:	mov	lr, r0
   19e14:	mov	r0, #1
   19e18:	ldr	r1, [r3]
   19e1c:	movw	r3, #1580	; 0x62c
   19e20:	movt	r3, #3
   19e24:	str	r0, [fp, #-100]	; 0xffffff9c
   19e28:	mov	r0, #0
   19e2c:	tst	r4, #2
   19e30:	ldr	ip, [fp, #-236]	; 0xffffff14
   19e34:	str	lr, [fp, #-96]	; 0xffffffa0
   19e38:	str	r2, [fp, #-92]	; 0xffffffa4
   19e3c:	ldr	r2, [fp, #-112]	; 0xffffff90
   19e40:	ldr	r3, [r3]
   19e44:	str	r2, [fp, #-108]	; 0xffffff94
   19e48:	str	r1, [fp, #-52]	; 0xffffffcc
   19e4c:	mov	r1, #0
   19e50:	str	ip, [fp, #-88]	; 0xffffffa8
   19e54:	str	lr, [fp, #-84]	; 0xffffffac
   19e58:	str	r4, [fp, #-80]	; 0xffffffb0
   19e5c:	strd	r0, [fp, #-76]	; 0xffffffb4
   19e60:	strd	r0, [fp, #-68]	; 0xffffffbc
   19e64:	strd	r0, [fp, #-60]	; 0xffffffc4
   19e68:	str	r3, [fp, #-48]	; 0xffffffd0
   19e6c:	mov	r3, ip
   19e70:	str	r9, [fp, #-44]	; 0xffffffd4
   19e74:	bne	1992c <argp_parse@@Base+0x430>
   19e78:	mov	r2, #1
   19e7c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   19e80:	str	r2, [fp, #-144]	; 0xffffff70
   19e84:	ldr	r2, [fp, #-236]	; 0xffffff14
   19e88:	cmp	r2, r3
   19e8c:	bne	19958 <argp_parse@@Base+0x45c>
   19e90:	ldr	r0, [r2]
   19e94:	cmp	r0, #0
   19e98:	beq	19958 <argp_parse@@Base+0x45c>
   19e9c:	bl	1a460 <argp_parse@@Base+0xf64>
   19ea0:	str	r0, [fp, #-56]	; 0xffffffc8
   19ea4:	b	19968 <argp_parse@@Base+0x46c>
   19ea8:	mov	r5, r0
   19eac:	b	19bf8 <argp_parse@@Base+0x6fc>
   19eb0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19eb4:	b	199a4 <argp_parse@@Base+0x4a8>
   19eb8:	cmp	r0, #7
   19ebc:	mov	r5, r0
   19ec0:	str	r8, [fp, #-236]	; 0xffffff14
   19ec4:	beq	1991c <argp_parse@@Base+0x420>
   19ec8:	cmp	r0, #0
   19ecc:	bne	19bf8 <argp_parse@@Base+0x6fc>
   19ed0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19ed4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   19ed8:	b	19924 <argp_parse@@Base+0x428>
   19edc:	ldr	r3, [fp, #4]
   19ee0:	cmp	r3, #0
   19ee4:	beq	1a024 <argp_parse@@Base+0xb28>
   19ee8:	str	r7, [r3]
   19eec:	ldr	r3, [fp, #-112]	; 0xffffff90
   19ef0:	ldr	ip, [fp, #-108]	; 0xffffff94
   19ef4:	sub	r2, ip, #36	; 0x24
   19ef8:	cmp	r3, r2
   19efc:	movls	r6, #4
   19f00:	subls	r4, ip, #72	; 0x48
   19f04:	movtls	r6, #256	; 0x100
   19f08:	bhi	1a15c <argp_parse@@Base+0xc60>
   19f0c:	ldr	r5, [r4, #36]	; 0x24
   19f10:	mov	r1, #0
   19f14:	sub	r2, fp, #96	; 0x60
   19f18:	mov	r0, r6
   19f1c:	cmp	r5, r1
   19f20:	beq	1a07c <argp_parse@@Base+0xb80>
   19f24:	ldr	r3, [r4, #60]	; 0x3c
   19f28:	ldr	lr, [r4, #64]	; 0x40
   19f2c:	ldr	ip, [r4, #68]	; 0x44
   19f30:	str	r3, [fp, #-68]	; 0xffffffbc
   19f34:	ldr	r3, [r4, #48]	; 0x30
   19f38:	str	r3, [fp, #-76]	; 0xffffffb4
   19f3c:	str	lr, [fp, #-64]	; 0xffffffc0
   19f40:	str	ip, [fp, #-60]	; 0xffffffc4
   19f44:	blx	r5
   19f48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19f4c:	str	r3, [r4, #68]	; 0x44
   19f50:	ldr	r3, [fp, #-112]	; 0xffffff90
   19f54:	cmp	r4, r3
   19f58:	sub	r4, r4, #36	; 0x24
   19f5c:	bcc	1a13c <argp_parse@@Base+0xc40>
   19f60:	cmp	r0, #7
   19f64:	cmpne	r0, #0
   19f68:	beq	19f0c <argp_parse@@Base+0xa10>
   19f6c:	ldr	ip, [fp, #-108]	; 0xffffff94
   19f70:	mov	r5, r0
   19f74:	sub	r4, ip, #36	; 0x24
   19f78:	cmp	r4, r3
   19f7c:	bcs	19b8c <argp_parse@@Base+0x690>
   19f80:	b	19bf0 <argp_parse@@Base+0x6f4>
   19f84:	ldr	r2, [fp, #-236]	; 0xffffff14
   19f88:	ldr	r2, [r2]
   19f8c:	str	r2, [r3]
   19f90:	b	19544 <argp_parse@@Base+0x48>
   19f94:	ldr	r3, [fp, #-236]	; 0xffffff14
   19f98:	ldr	r0, [r3]
   19f9c:	bl	1a460 <argp_parse@@Base+0xf64>
   19fa0:	str	r0, [r5]
   19fa4:	b	19558 <argp_parse@@Base+0x5c>
   19fa8:	mov	r1, r4
   19fac:	ldr	r0, [fp, #-156]	; 0xffffff64
   19fb0:	bl	112e0 <strchr@plt>
   19fb4:	cmp	r0, #0
   19fb8:	beq	19ff4 <argp_parse@@Base+0xaf8>
   19fbc:	ldr	r5, [fp, #-112]	; 0xffffff90
   19fc0:	ldr	r2, [fp, #-108]	; 0xffffff94
   19fc4:	cmp	r5, r2
   19fc8:	bcs	19ff4 <argp_parse@@Base+0xaf8>
   19fcc:	ldr	r3, [r5, #8]
   19fd0:	cmp	r3, r0
   19fd4:	bls	19fe8 <argp_parse@@Base+0xaec>
   19fd8:	b	1a2d0 <argp_parse@@Base+0xdd4>
   19fdc:	ldr	r3, [r5, #8]
   19fe0:	cmp	r0, r3
   19fe4:	bcc	1a2d0 <argp_parse@@Base+0xdd4>
   19fe8:	add	r5, r5, #36	; 0x24
   19fec:	cmp	r5, r2
   19ff0:	bcc	19fdc <argp_parse@@Base+0xae0>
   19ff4:	sub	r6, fp, #96	; 0x60
   19ff8:	mov	r2, r4
   19ffc:	add	r4, r4, #1
   1a000:	ldr	r3, [pc, #936]	; 1a3b0 <argp_parse@@Base+0xeb4>
   1a004:	movw	r1, #59936	; 0xea20
   1a008:	movt	r1, #1
   1a00c:	mov	r0, r6
   1a010:	bic	r4, r4, #2
   1a014:	bl	18de8 <argp_error@@Base>
   1a018:	cmp	r4, #0
   1a01c:	bne	1a054 <argp_parse@@Base+0xb58>
   1a020:	b	19cc0 <argp_parse@@Base+0x7c4>
   1a024:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a028:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a02c:	tst	r3, #2
   1a030:	bne	19d8c <argp_parse@@Base+0x890>
   1a034:	cmp	r1, #0
   1a038:	beq	19d8c <argp_parse@@Base+0x890>
   1a03c:	mov	r0, r1
   1a040:	movw	r1, #59956	; 0xea34
   1a044:	movt	r1, #1
   1a048:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a04c:	sub	r6, fp, #96	; 0x60
   1a050:	bl	112ec <fprintf@plt>
   1a054:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a058:	b	19af8 <argp_parse@@Base+0x5fc>
   1a05c:	sub	r4, r4, #36	; 0x24
   1a060:	cmp	r4, r3
   1a064:	bcs	19b94 <argp_parse@@Base+0x698>
   1a068:	b	19be8 <argp_parse@@Base+0x6ec>
   1a06c:	add	r6, r6, #36	; 0x24
   1a070:	cmp	r6, r4
   1a074:	bcc	19b28 <argp_parse@@Base+0x62c>
   1a078:	b	19b7c <argp_parse@@Base+0x680>
   1a07c:	cmp	r4, r3
   1a080:	sub	r4, r4, #36	; 0x24
   1a084:	bcs	19f0c <argp_parse@@Base+0xa10>
   1a088:	mov	r5, #7
   1a08c:	b	1a140 <argp_parse@@Base+0xc44>
   1a090:	asrs	r8, r4, #24
   1a094:	beq	19fa8 <argp_parse@@Base+0xaac>
   1a098:	add	r3, r8, r8, lsl #3
   1a09c:	ldr	r5, [fp, #-112]	; 0xffffff90
   1a0a0:	ands	r2, r4, #8388608	; 0x800000
   1a0a4:	movne	r2, #-16777216	; 0xff000000
   1a0a8:	bic	r0, r4, #-16777216	; 0xff000000
   1a0ac:	lsl	r3, r3, #2
   1a0b0:	orr	r0, r0, r2
   1a0b4:	sub	r3, r3, #36	; 0x24
   1a0b8:	ldr	r7, [r5, r3]
   1a0bc:	add	r5, r5, r3
   1a0c0:	cmp	r7, #0
   1a0c4:	beq	1a338 <argp_parse@@Base+0xe3c>
   1a0c8:	ldr	r3, [r5, #24]
   1a0cc:	sub	r6, fp, #96	; 0x60
   1a0d0:	mov	r2, r6
   1a0d4:	ldr	ip, [r5, #28]
   1a0d8:	ldr	r1, [r5, #32]
   1a0dc:	str	r3, [fp, #-68]	; 0xffffffbc
   1a0e0:	ldr	r3, [r5, #12]
   1a0e4:	str	r3, [fp, #-76]	; 0xffffffb4
   1a0e8:	str	ip, [fp, #-64]	; 0xffffffc0
   1a0ec:	str	r1, [fp, #-60]	; 0xffffffc4
   1a0f0:	ldr	r1, [fp, #-136]	; 0xffffff78
   1a0f4:	blx	r7
   1a0f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a0fc:	str	r3, [r5, #32]
   1a100:	cmp	r0, #7
   1a104:	beq	1a164 <argp_parse@@Base+0xc68>
   1a108:	cmp	r0, #0
   1a10c:	bne	19d7c <argp_parse@@Base+0x880>
   1a110:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a114:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a118:	ldr	r7, [fp, #-84]	; 0xffffffac
   1a11c:	b	19988 <argp_parse@@Base+0x48c>
   1a120:	movw	r2, #1676	; 0x68c
   1a124:	movt	r2, #3
   1a128:	ldr	r2, [r2]
   1a12c:	cmp	r2, #0
   1a130:	addeq	r2, r3, #16
   1a134:	bne	19630 <argp_parse@@Base+0x134>
   1a138:	b	1963c <argp_parse@@Base+0x140>
   1a13c:	mov	r5, r0
   1a140:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a144:	cmp	r5, #7
   1a148:	sub	r4, ip, #36	; 0x24
   1a14c:	bne	19f78 <argp_parse@@Base+0xa7c>
   1a150:	cmp	r4, r3
   1a154:	movcs	r5, #0
   1a158:	bcs	19b8c <argp_parse@@Base+0x690>
   1a15c:	mov	r5, #0
   1a160:	b	19bf0 <argp_parse@@Base+0x6f4>
   1a164:	cmp	r8, #0
   1a168:	beq	19ff8 <argp_parse@@Base+0xafc>
   1a16c:	ldr	r3, [fp, #-152]	; 0xffffff68
   1a170:	ldr	r2, [r3]
   1a174:	ldr	r1, [r3, #12]
   1a178:	cmp	r4, r1
   1a17c:	bne	1a198 <argp_parse@@Base+0xc9c>
   1a180:	b	1a1c8 <argp_parse@@Base+0xccc>
   1a184:	add	r3, r3, #16
   1a188:	ldr	r2, [r3]
   1a18c:	ldr	r1, [r3, #12]
   1a190:	cmp	r4, r1
   1a194:	beq	1a1c8 <argp_parse@@Base+0xccc>
   1a198:	cmp	r2, #0
   1a19c:	bne	1a184 <argp_parse@@Base+0xc88>
   1a1a0:	movw	r2, #59928	; 0xea18
   1a1a4:	movt	r2, #1
   1a1a8:	movw	r1, #59944	; 0xea28
   1a1ac:	movt	r1, #1
   1a1b0:	ldr	r3, [pc, #504]	; 1a3b0 <argp_parse@@Base+0xeb4>
   1a1b4:	mov	r0, r6
   1a1b8:	add	r4, r4, #1
   1a1bc:	bl	18de8 <argp_error@@Base>
   1a1c0:	bic	r4, r4, #2
   1a1c4:	b	1a018 <argp_parse@@Base+0xb1c>
   1a1c8:	movw	r3, #59928	; 0xea18
   1a1cc:	movt	r3, #1
   1a1d0:	cmp	r2, #0
   1a1d4:	moveq	r2, r3
   1a1d8:	b	1a1a8 <argp_parse@@Base+0xcac>
   1a1dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a1e0:	sub	r2, ip, #36	; 0x24
   1a1e4:	cmp	r3, r2
   1a1e8:	bhi	1a368 <argp_parse@@Base+0xe6c>
   1a1ec:	ldr	r2, [fp, #4]
   1a1f0:	cmp	r2, #0
   1a1f4:	beq	1a204 <argp_parse@@Base+0xd08>
   1a1f8:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a1fc:	ldr	r1, [fp, #4]
   1a200:	str	r2, [r1]
   1a204:	cmp	r5, #0
   1a208:	bne	19d80 <argp_parse@@Base+0x884>
   1a20c:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a210:	b	19ef4 <argp_parse@@Base+0x9f8>
   1a214:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a218:	sub	r4, ip, #36	; 0x24
   1a21c:	cmp	r4, r3
   1a220:	bcc	1a324 <argp_parse@@Base+0xe28>
   1a224:	cmp	r5, #0
   1a228:	cmpne	r5, #7
   1a22c:	bne	1a1ec <argp_parse@@Base+0xcf0>
   1a230:	mov	r6, #1
   1a234:	movt	r6, #256	; 0x100
   1a238:	sub	r4, r4, #36	; 0x24
   1a23c:	ldr	r5, [r4, #36]	; 0x24
   1a240:	mov	r1, #0
   1a244:	sub	r2, fp, #96	; 0x60
   1a248:	mov	r0, r6
   1a24c:	cmp	r5, r1
   1a250:	beq	1a2a4 <argp_parse@@Base+0xda8>
   1a254:	ldr	r3, [r4, #60]	; 0x3c
   1a258:	ldr	lr, [r4, #64]	; 0x40
   1a25c:	ldr	ip, [r4, #68]	; 0x44
   1a260:	str	r3, [fp, #-68]	; 0xffffffbc
   1a264:	ldr	r3, [r4, #48]	; 0x30
   1a268:	str	r3, [fp, #-76]	; 0xffffffb4
   1a26c:	str	lr, [fp, #-64]	; 0xffffffc0
   1a270:	str	ip, [fp, #-60]	; 0xffffffc4
   1a274:	blx	r5
   1a278:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a27c:	str	r3, [r4, #68]	; 0x44
   1a280:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a284:	cmp	r3, r4
   1a288:	sub	r4, r4, #36	; 0x24
   1a28c:	bhi	1a320 <argp_parse@@Base+0xe24>
   1a290:	cmp	r0, #7
   1a294:	cmpne	r0, #0
   1a298:	beq	1a23c <argp_parse@@Base+0xd40>
   1a29c:	mov	r5, r0
   1a2a0:	b	1a1ec <argp_parse@@Base+0xcf0>
   1a2a4:	cmp	r3, r4
   1a2a8:	sub	r4, r4, #36	; 0x24
   1a2ac:	bls	1a23c <argp_parse@@Base+0xd40>
   1a2b0:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a2b4:	ldr	r2, [fp, #4]
   1a2b8:	cmp	r2, #0
   1a2bc:	beq	19ef4 <argp_parse@@Base+0x9f8>
   1a2c0:	mov	r1, r2
   1a2c4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a2c8:	str	r2, [r1]
   1a2cc:	b	19ef4 <argp_parse@@Base+0x9f8>
   1a2d0:	ldr	r3, [r5]
   1a2d4:	cmp	r3, #0
   1a2d8:	beq	19ff4 <argp_parse@@Base+0xaf8>
   1a2dc:	ldr	r2, [r5, #12]
   1a2e0:	sub	r6, fp, #96	; 0x60
   1a2e4:	mov	r8, #0
   1a2e8:	ldr	r0, [r5, #24]
   1a2ec:	ldr	ip, [r5, #28]
   1a2f0:	ldr	r1, [r5, #32]
   1a2f4:	str	r2, [fp, #-76]	; 0xffffffb4
   1a2f8:	mov	r2, r6
   1a2fc:	str	r0, [fp, #-68]	; 0xffffffbc
   1a300:	mov	r0, r4
   1a304:	str	ip, [fp, #-64]	; 0xffffffc0
   1a308:	str	r1, [fp, #-60]	; 0xffffffc4
   1a30c:	ldr	r1, [fp, #-136]	; 0xffffff78
   1a310:	blx	r3
   1a314:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a318:	str	r3, [r5, #32]
   1a31c:	b	1a100 <argp_parse@@Base+0xc04>
   1a320:	mov	r5, r0
   1a324:	cmp	r5, #7
   1a328:	beq	1a2b0 <argp_parse@@Base+0xdb4>
   1a32c:	b	1a1ec <argp_parse@@Base+0xcf0>
   1a330:	sub	r4, ip, #36	; 0x24
   1a334:	b	19b84 <argp_parse@@Base+0x688>
   1a338:	sub	r6, fp, #96	; 0x60
   1a33c:	b	1a16c <argp_parse@@Base+0xc70>
   1a340:	sub	r4, ip, #36	; 0x24
   1a344:	cmp	r3, r4
   1a348:	bls	1a230 <argp_parse@@Base+0xd34>
   1a34c:	ldr	r2, [fp, #4]
   1a350:	cmp	r2, #0
   1a354:	beq	1a15c <argp_parse@@Base+0xc60>
   1a358:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a35c:	ldr	r1, [fp, #4]
   1a360:	str	r2, [r1]
   1a364:	b	19ef4 <argp_parse@@Base+0x9f8>
   1a368:	ldr	r2, [fp, #4]
   1a36c:	cmp	r2, #0
   1a370:	bne	1a1f8 <argp_parse@@Base+0xcfc>
   1a374:	b	19b10 <argp_parse@@Base+0x614>
   1a378:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a37c:	b	19cb0 <argp_parse@@Base+0x7b4>
   1a380:	cmp	r0, #0
   1a384:	beq	1a39c <argp_parse@@Base+0xea0>
   1a388:	cmp	r0, #7
   1a38c:	mov	r5, r0
   1a390:	ldrne	r3, [fp, #-112]	; 0xffffff90
   1a394:	beq	19cc0 <argp_parse@@Base+0x7c4>
   1a398:	b	19b10 <argp_parse@@Base+0x614>
   1a39c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a3a0:	mov	r0, r3
   1a3a4:	str	r3, [fp, #-84]	; 0xffffffac
   1a3a8:	b	19a4c <argp_parse@@Base+0x550>
   1a3ac:	strdeq	lr, [r1], -r0
   1a3b0:	andeq	lr, r1, ip, lsl #18
   1a3b4:	cmp	r1, #0
   1a3b8:	beq	1a3f8 <argp_parse@@Base+0xefc>
   1a3bc:	ldr	r2, [r1, #52]	; 0x34
   1a3c0:	ldr	r3, [r2, #48]	; 0x30
   1a3c4:	ldr	r1, [r2, #52]	; 0x34
   1a3c8:	cmp	r3, r1
   1a3cc:	bcs	1a3f8 <argp_parse@@Base+0xefc>
   1a3d0:	ldr	r2, [r3, #4]
   1a3d4:	cmp	r0, r2
   1a3d8:	bne	1a3ec <argp_parse@@Base+0xef0>
   1a3dc:	b	1a400 <argp_parse@@Base+0xf04>
   1a3e0:	ldr	r2, [r3, #4]
   1a3e4:	cmp	r2, r0
   1a3e8:	beq	1a400 <argp_parse@@Base+0xf04>
   1a3ec:	add	r3, r3, #36	; 0x24
   1a3f0:	cmp	r3, r1
   1a3f4:	bcc	1a3e0 <argp_parse@@Base+0xee4>
   1a3f8:	mov	r0, #0
   1a3fc:	bx	lr
   1a400:	ldr	r0, [r3, #24]
   1a404:	bx	lr
   1a408:	movw	r1, #1680	; 0x690
   1a40c:	movt	r1, #3
   1a410:	push	{lr}		; (str lr, [sp, #-4]!)
   1a414:	ldm	r1, {r1, ip}
   1a418:	sub	sp, sp, #12
   1a41c:	movw	r3, #60172	; 0xeb0c
   1a420:	movt	r3, #1
   1a424:	movw	r2, #60188	; 0xeb1c
   1a428:	movt	r2, #1
   1a42c:	str	ip, [sp]
   1a430:	bl	1aa30 <argp_parse@@Base+0x1534>
   1a434:	add	sp, sp, #12
   1a438:	pop	{pc}		; (ldr pc, [sp], #4)
   1a43c:	movw	r2, #1676	; 0x68c
   1a440:	movt	r2, #3
   1a444:	movw	ip, #41992	; 0xa408
   1a448:	movt	ip, #1
   1a44c:	movw	r3, #1680	; 0x690
   1a450:	movt	r3, #3
   1a454:	str	ip, [r2]
   1a458:	strd	r0, [r3]
   1a45c:	bx	lr
   1a460:	ldrb	r3, [r0]
   1a464:	cmp	r3, #47	; 0x2f
   1a468:	bne	1a478 <argp_parse@@Base+0xf7c>
   1a46c:	ldrb	r3, [r0, #1]!
   1a470:	cmp	r3, #47	; 0x2f
   1a474:	beq	1a46c <argp_parse@@Base+0xf70>
   1a478:	cmp	r3, #0
   1a47c:	beq	1a4ac <argp_parse@@Base+0xfb0>
   1a480:	mov	r2, r0
   1a484:	mov	r1, #0
   1a488:	cmp	r3, #47	; 0x2f
   1a48c:	moveq	r1, #1
   1a490:	beq	1a4a0 <argp_parse@@Base+0xfa4>
   1a494:	cmp	r1, #0
   1a498:	movne	r0, r2
   1a49c:	movne	r1, #0
   1a4a0:	ldrb	r3, [r2, #1]!
   1a4a4:	cmp	r3, #0
   1a4a8:	bne	1a488 <argp_parse@@Base+0xf8c>
   1a4ac:	bx	lr
   1a4b0:	str	r4, [sp, #-8]!
   1a4b4:	mov	r4, r0
   1a4b8:	str	lr, [sp, #4]
   1a4bc:	bl	112d4 <strlen@plt>
   1a4c0:	cmp	r0, #1
   1a4c4:	bls	1a4d8 <argp_parse@@Base+0xfdc>
   1a4c8:	sub	r2, r0, #1
   1a4cc:	ldrb	r1, [r4, r2]
   1a4d0:	cmp	r1, #47	; 0x2f
   1a4d4:	beq	1a4e4 <argp_parse@@Base+0xfe8>
   1a4d8:	ldr	r4, [sp]
   1a4dc:	add	sp, sp, #4
   1a4e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a4e4:	cmp	r2, #1
   1a4e8:	beq	1a4fc <argp_parse@@Base+0x1000>
   1a4ec:	add	r1, r4, r0
   1a4f0:	ldrb	r1, [r1, #-2]
   1a4f4:	cmp	r1, #47	; 0x2f
   1a4f8:	beq	1a50c <argp_parse@@Base+0x1010>
   1a4fc:	ldr	r4, [sp]
   1a500:	add	sp, sp, #4
   1a504:	mov	r0, r2
   1a508:	pop	{pc}		; (ldr pc, [sp], #4)
   1a50c:	sub	r3, r0, #3
   1a510:	rsb	r0, r4, #1
   1a514:	add	r3, r4, r3
   1a518:	cmp	r3, r4
   1a51c:	add	r2, r0, r3
   1a520:	beq	1a4fc <argp_parse@@Base+0x1000>
   1a524:	ldrb	r1, [r3], #-1
   1a528:	cmp	r1, #47	; 0x2f
   1a52c:	bne	1a4fc <argp_parse@@Base+0x1000>
   1a530:	b	1a518 <argp_parse@@Base+0x101c>
   1a534:	strd	r4, [sp, #-12]!
   1a538:	mov	r5, r0
   1a53c:	str	lr, [sp, #8]
   1a540:	sub	sp, sp, #12
   1a544:	bl	112f8 <__errno_location@plt>
   1a548:	mov	r4, r0
   1a54c:	mov	r2, #0
   1a550:	ldr	r3, [r4]
   1a554:	mov	r0, r5
   1a558:	str	r2, [r4]
   1a55c:	str	r3, [sp]
   1a560:	str	r3, [sp, #4]
   1a564:	bl	11160 <free@plt>
   1a568:	ldr	r3, [r4]
   1a56c:	add	r2, sp, #8
   1a570:	clz	r3, r3
   1a574:	lsr	r3, r3, #5
   1a578:	add	r3, r2, r3, lsl #2
   1a57c:	ldr	r3, [r3, #-8]
   1a580:	str	r3, [r4]
   1a584:	add	sp, sp, #12
   1a588:	ldrd	r4, [sp]
   1a58c:	add	sp, sp, #8
   1a590:	pop	{pc}		; (ldr pc, [sp], #4)
   1a594:	push	{lr}		; (str lr, [sp, #-4]!)
   1a598:	sub	sp, sp, #20
   1a59c:	mov	ip, #0
   1a5a0:	ldr	lr, [sp, #24]
   1a5a4:	str	lr, [sp]
   1a5a8:	str	ip, [sp, #4]
   1a5ac:	str	ip, [sp, #8]
   1a5b0:	bl	1d080 <argp_parse@@Base+0x3b84>
   1a5b4:	add	sp, sp, #20
   1a5b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a5bc:	str	r4, [sp, #-8]!
   1a5c0:	mov	ip, #0
   1a5c4:	str	lr, [sp, #4]
   1a5c8:	sub	sp, sp, #16
   1a5cc:	ldr	r4, [sp, #24]
   1a5d0:	str	ip, [sp, #12]
   1a5d4:	ldr	lr, [sp, #28]
   1a5d8:	stm	sp, {r4, ip, lr}
   1a5dc:	bl	1cae4 <argp_parse@@Base+0x35e8>
   1a5e0:	add	sp, sp, #16
   1a5e4:	ldr	r4, [sp]
   1a5e8:	add	sp, sp, #4
   1a5ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1a5f0:	str	r4, [sp, #-8]!
   1a5f4:	mov	r4, #1
   1a5f8:	str	lr, [sp, #4]
   1a5fc:	sub	sp, sp, #16
   1a600:	mov	lr, #0
   1a604:	ldr	ip, [sp, #24]
   1a608:	str	ip, [sp]
   1a60c:	stmib	sp, {r4, lr}
   1a610:	bl	1d080 <argp_parse@@Base+0x3b84>
   1a614:	add	sp, sp, #16
   1a618:	ldr	r4, [sp]
   1a61c:	add	sp, sp, #4
   1a620:	pop	{pc}		; (ldr pc, [sp], #4)
   1a624:	strd	r4, [sp, #-12]!
   1a628:	mov	r4, #0
   1a62c:	mov	r5, #1
   1a630:	str	lr, [sp, #8]
   1a634:	sub	sp, sp, #20
   1a638:	ldr	lr, [sp, #32]
   1a63c:	ldr	ip, [sp, #36]	; 0x24
   1a640:	str	lr, [sp]
   1a644:	str	r4, [sp, #12]
   1a648:	stmib	sp, {r5, ip}
   1a64c:	bl	1cae4 <argp_parse@@Base+0x35e8>
   1a650:	add	sp, sp, #20
   1a654:	ldrd	r4, [sp]
   1a658:	add	sp, sp, #8
   1a65c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a660:	strd	r4, [sp, #-16]!
   1a664:	subs	r4, r0, #0
   1a668:	str	r6, [sp, #8]
   1a66c:	str	lr, [sp, #12]
   1a670:	beq	1a708 <argp_parse@@Base+0x120c>
   1a674:	mov	r1, #47	; 0x2f
   1a678:	bl	11388 <strrchr@plt>
   1a67c:	subs	r5, r0, #0
   1a680:	beq	1a6e0 <argp_parse@@Base+0x11e4>
   1a684:	add	r6, r5, #1
   1a688:	sub	r3, r6, r4
   1a68c:	cmp	r3, #6
   1a690:	ble	1a6e0 <argp_parse@@Base+0x11e4>
   1a694:	movw	r1, #60260	; 0xeb64
   1a698:	movt	r1, #1
   1a69c:	mov	r2, #7
   1a6a0:	sub	r0, r5, #6
   1a6a4:	bl	11418 <strncmp@plt>
   1a6a8:	cmp	r0, #0
   1a6ac:	bne	1a6e0 <argp_parse@@Base+0x11e4>
   1a6b0:	movw	r1, #60268	; 0xeb6c
   1a6b4:	movt	r1, #1
   1a6b8:	mov	r2, #3
   1a6bc:	mov	r0, r6
   1a6c0:	bl	11418 <strncmp@plt>
   1a6c4:	cmp	r0, #0
   1a6c8:	movne	r4, r6
   1a6cc:	bne	1a6e0 <argp_parse@@Base+0x11e4>
   1a6d0:	add	r4, r5, #4
   1a6d4:	movw	r3, #1568	; 0x620
   1a6d8:	movt	r3, #3
   1a6dc:	str	r4, [r3]
   1a6e0:	movw	r2, #1688	; 0x698
   1a6e4:	movt	r2, #3
   1a6e8:	ldr	r6, [sp, #8]
   1a6ec:	movw	r3, #1572	; 0x624
   1a6f0:	movt	r3, #3
   1a6f4:	str	r4, [r2]
   1a6f8:	str	r4, [r3]
   1a6fc:	ldrd	r4, [sp]
   1a700:	add	sp, sp, #12
   1a704:	pop	{pc}		; (ldr pc, [sp], #4)
   1a708:	movw	r3, #1576	; 0x628
   1a70c:	movt	r3, #3
   1a710:	movw	r0, #60204	; 0xeb2c
   1a714:	movt	r0, #1
   1a718:	ldr	r3, [r3]
   1a71c:	mov	r2, #55	; 0x37
   1a720:	mov	r1, #1
   1a724:	bl	11220 <fwrite@plt>
   1a728:	bl	11424 <abort@plt>
   1a72c:	cmp	r1, #0
   1a730:	strd	r4, [sp, #-16]!
   1a734:	mov	r4, r0
   1a738:	str	r6, [sp, #8]
   1a73c:	str	lr, [sp, #12]
   1a740:	sub	sp, sp, #32
   1a744:	ldr	r5, [sp, #48]	; 0x30
   1a748:	ldr	r6, [sp, #52]	; 0x34
   1a74c:	beq	1a850 <argp_parse@@Base+0x1354>
   1a750:	mov	ip, r3
   1a754:	mov	r3, r2
   1a758:	mov	r2, r1
   1a75c:	movw	r1, #60272	; 0xeb70
   1a760:	movt	r1, #1
   1a764:	str	ip, [sp]
   1a768:	bl	112ec <fprintf@plt>
   1a76c:	movw	r3, #2022	; 0x7e6
   1a770:	movw	r2, #60292	; 0xeb84
   1a774:	movt	r2, #1
   1a778:	movw	r1, #61060	; 0xee84
   1a77c:	movt	r1, #1
   1a780:	mov	r0, r4
   1a784:	bl	112ec <fprintf@plt>
   1a788:	mov	r1, r4
   1a78c:	mov	r0, #10
   1a790:	bl	113a0 <fputc@plt>
   1a794:	movw	r2, #60296	; 0xeb88
   1a798:	movt	r2, #1
   1a79c:	movw	r1, #60332	; 0xebac
   1a7a0:	movt	r1, #1
   1a7a4:	mov	r0, r4
   1a7a8:	bl	112ec <fprintf@plt>
   1a7ac:	mov	r1, r4
   1a7b0:	mov	r0, #10
   1a7b4:	bl	113a0 <fputc@plt>
   1a7b8:	cmp	r6, #9
   1a7bc:	ldrls	pc, [pc, r6, lsl #2]
   1a7c0:	b	1aa1c <argp_parse@@Base+0x1520>
   1a7c4:	andeq	sl, r1, ip, lsr r8
   1a7c8:	andeq	sl, r1, r0, ror #16
   1a7cc:	andeq	sl, r1, r8, lsl #17
   1a7d0:			; <UNDEFINED> instruction: 0x0001a8b0
   1a7d4:	andeq	sl, r1, r0, ror #17
   1a7d8:	andeq	sl, r1, ip, lsl r9
   1a7dc:	andeq	sl, r1, r0, asr r9
   1a7e0:	andeq	sl, r1, ip, lsl #19
   1a7e4:	ldrdeq	sl, [r1], -r0
   1a7e8:	andeq	sl, r1, ip, ror #15
   1a7ec:	ldr	ip, [r5, #8]
   1a7f0:	movw	r1, #60772	; 0xed64
   1a7f4:	movt	r1, #1
   1a7f8:	mov	r0, r4
   1a7fc:	ldr	r3, [r5, #12]
   1a800:	ldr	r2, [r5, #32]
   1a804:	str	ip, [sp]
   1a808:	ldr	ip, [r5, #16]
   1a80c:	str	r2, [sp, #24]
   1a810:	ldr	r2, [r5, #28]
   1a814:	str	r3, [sp, #4]
   1a818:	ldr	r3, [r5, #20]
   1a81c:	str	ip, [sp, #8]
   1a820:	ldr	ip, [r5, #24]
   1a824:	str	r2, [sp, #20]
   1a828:	ldr	r2, [r5]
   1a82c:	str	r3, [sp, #12]
   1a830:	ldr	r3, [r5, #4]
   1a834:	str	ip, [sp, #16]
   1a838:	bl	112ec <fprintf@plt>
   1a83c:	add	sp, sp, #32
   1a840:	ldrd	r4, [sp]
   1a844:	ldr	r6, [sp, #8]
   1a848:	add	sp, sp, #12
   1a84c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a850:	movw	r1, #60284	; 0xeb7c
   1a854:	movt	r1, #1
   1a858:	bl	112ec <fprintf@plt>
   1a85c:	b	1a76c <argp_parse@@Base+0x1270>
   1a860:	ldr	r2, [r5]
   1a864:	mov	r0, r4
   1a868:	movw	r1, #60504	; 0xec58
   1a86c:	movt	r1, #1
   1a870:	add	sp, sp, #32
   1a874:	ldrd	r4, [sp]
   1a878:	ldr	r6, [sp, #8]
   1a87c:	ldr	lr, [sp, #12]
   1a880:	add	sp, sp, #16
   1a884:	b	112ec <fprintf@plt>
   1a888:	ldrd	r2, [r5]
   1a88c:	mov	r0, r4
   1a890:	movw	r1, #60520	; 0xec68
   1a894:	movt	r1, #1
   1a898:	add	sp, sp, #32
   1a89c:	ldrd	r4, [sp]
   1a8a0:	ldr	r6, [sp, #8]
   1a8a4:	ldr	lr, [sp, #12]
   1a8a8:	add	sp, sp, #16
   1a8ac:	b	112ec <fprintf@plt>
   1a8b0:	ldrd	r2, [r5]
   1a8b4:	mov	r0, r4
   1a8b8:	movw	r1, #60544	; 0xec80
   1a8bc:	movt	r1, #1
   1a8c0:	ldr	ip, [r5, #8]
   1a8c4:	str	ip, [sp, #48]	; 0x30
   1a8c8:	add	sp, sp, #32
   1a8cc:	ldrd	r4, [sp]
   1a8d0:	ldr	r6, [sp, #8]
   1a8d4:	ldr	lr, [sp, #12]
   1a8d8:	add	sp, sp, #16
   1a8dc:	b	112ec <fprintf@plt>
   1a8e0:	ldr	r2, [r5]
   1a8e4:	mov	r0, r4
   1a8e8:	movw	r1, #60572	; 0xec9c
   1a8ec:	movt	r1, #1
   1a8f0:	ldr	r3, [r5, #8]
   1a8f4:	ldr	ip, [r5, #12]
   1a8f8:	str	r3, [sp, #48]	; 0x30
   1a8fc:	ldr	r3, [r5, #4]
   1a900:	str	ip, [sp, #52]	; 0x34
   1a904:	add	sp, sp, #32
   1a908:	ldrd	r4, [sp]
   1a90c:	ldr	r6, [sp, #8]
   1a910:	ldr	lr, [sp, #12]
   1a914:	add	sp, sp, #16
   1a918:	b	112ec <fprintf@plt>
   1a91c:	ldr	r2, [r5, #8]
   1a920:	mov	r0, r4
   1a924:	movw	r1, #60604	; 0xecbc
   1a928:	movt	r1, #1
   1a92c:	ldr	ip, [r5, #12]
   1a930:	ldr	r3, [r5, #16]
   1a934:	str	r2, [sp]
   1a938:	ldr	r2, [r5]
   1a93c:	str	r3, [sp, #8]
   1a940:	ldr	r3, [r5, #4]
   1a944:	str	ip, [sp, #4]
   1a948:	bl	112ec <fprintf@plt>
   1a94c:	b	1a83c <argp_parse@@Base+0x1340>
   1a950:	ldr	ip, [r5, #8]
   1a954:	mov	r0, r4
   1a958:	movw	r1, #60640	; 0xece0
   1a95c:	movt	r1, #1
   1a960:	ldr	r3, [r5, #12]
   1a964:	ldr	r2, [r5, #20]
   1a968:	str	ip, [sp]
   1a96c:	ldr	ip, [r5, #16]
   1a970:	str	r2, [sp, #12]
   1a974:	ldr	r2, [r5]
   1a978:	str	r3, [sp, #4]
   1a97c:	ldr	r3, [r5, #4]
   1a980:	str	ip, [sp, #8]
   1a984:	bl	112ec <fprintf@plt>
   1a988:	b	1a83c <argp_parse@@Base+0x1340>
   1a98c:	ldr	r3, [r5, #8]
   1a990:	mov	r0, r4
   1a994:	movw	r1, #60680	; 0xed08
   1a998:	movt	r1, #1
   1a99c:	ldr	r2, [r5, #12]
   1a9a0:	ldr	ip, [r5, #24]
   1a9a4:	str	r3, [sp]
   1a9a8:	ldr	r3, [r5, #16]
   1a9ac:	str	ip, [sp, #16]
   1a9b0:	ldr	ip, [r5, #20]
   1a9b4:	str	r2, [sp, #4]
   1a9b8:	ldr	r2, [r5]
   1a9bc:	str	r3, [sp, #8]
   1a9c0:	ldr	r3, [r5, #4]
   1a9c4:	str	ip, [sp, #12]
   1a9c8:	bl	112ec <fprintf@plt>
   1a9cc:	b	1a83c <argp_parse@@Base+0x1340>
   1a9d0:	ldr	r2, [r5, #8]
   1a9d4:	mov	r0, r4
   1a9d8:	movw	r1, #60724	; 0xed34
   1a9dc:	movt	r1, #1
   1a9e0:	ldr	ip, [r5, #12]
   1a9e4:	ldr	r3, [r5, #28]
   1a9e8:	str	r2, [sp]
   1a9ec:	ldr	r2, [r5, #16]
   1a9f0:	str	r3, [sp, #20]
   1a9f4:	ldr	r3, [r5, #24]
   1a9f8:	str	ip, [sp, #4]
   1a9fc:	ldr	ip, [r5, #20]
   1aa00:	str	r2, [sp, #8]
   1aa04:	ldr	r2, [r5]
   1aa08:	str	r3, [sp, #16]
   1aa0c:	ldr	r3, [r5, #4]
   1aa10:	str	ip, [sp, #12]
   1aa14:	bl	112ec <fprintf@plt>
   1aa18:	b	1a83c <argp_parse@@Base+0x1340>
   1aa1c:	movw	r1, #60824	; 0xed98
   1aa20:	movt	r1, #1
   1aa24:	ldr	ip, [r5, #8]
   1aa28:	mov	r0, r4
   1aa2c:	b	1a7fc <argp_parse@@Base+0x1300>
   1aa30:	strd	r4, [sp, #-16]!
   1aa34:	mov	ip, r3
   1aa38:	str	r6, [sp, #8]
   1aa3c:	mov	r6, r0
   1aa40:	str	lr, [sp, #12]
   1aa44:	sub	sp, sp, #32
   1aa48:	ldr	r5, [sp, #48]	; 0x30
   1aa4c:	ldr	r4, [r5]
   1aa50:	cmp	r4, #0
   1aa54:	beq	1aa70 <argp_parse@@Base+0x1574>
   1aa58:	mov	r3, r5
   1aa5c:	mov	r4, #0
   1aa60:	ldr	r0, [r3, #4]!
   1aa64:	add	r4, r4, #1
   1aa68:	cmp	r0, #0
   1aa6c:	bne	1aa60 <argp_parse@@Base+0x1564>
   1aa70:	cmp	r1, #0
   1aa74:	beq	1ab78 <argp_parse@@Base+0x167c>
   1aa78:	mov	r3, r2
   1aa7c:	mov	r0, r6
   1aa80:	str	ip, [sp]
   1aa84:	mov	r2, r1
   1aa88:	movw	r1, #60272	; 0xeb70
   1aa8c:	movt	r1, #1
   1aa90:	bl	112ec <fprintf@plt>
   1aa94:	movw	r3, #2022	; 0x7e6
   1aa98:	movw	r2, #60292	; 0xeb84
   1aa9c:	movt	r2, #1
   1aaa0:	movw	r1, #61060	; 0xee84
   1aaa4:	movt	r1, #1
   1aaa8:	mov	r0, r6
   1aaac:	bl	112ec <fprintf@plt>
   1aab0:	mov	r1, r6
   1aab4:	mov	r0, #10
   1aab8:	bl	113a0 <fputc@plt>
   1aabc:	movw	r2, #60296	; 0xeb88
   1aac0:	movt	r2, #1
   1aac4:	movw	r1, #60332	; 0xebac
   1aac8:	movt	r1, #1
   1aacc:	mov	r0, r6
   1aad0:	bl	112ec <fprintf@plt>
   1aad4:	mov	r1, r6
   1aad8:	mov	r0, #10
   1aadc:	bl	113a0 <fputc@plt>
   1aae0:	cmp	r4, #9
   1aae4:	ldrls	pc, [pc, r4, lsl #2]
   1aae8:	b	1ad3c <argp_parse@@Base+0x1840>
   1aaec:	andeq	sl, r1, r4, ror #22
   1aaf0:	muleq	r1, r0, fp
   1aaf4:			; <UNDEFINED> instruction: 0x0001abb8
   1aaf8:	andeq	sl, r1, r0, ror #23
   1aafc:	andeq	sl, r1, r0, lsl ip
   1ab00:	andeq	sl, r1, ip, lsr ip
   1ab04:	andeq	sl, r1, r0, ror ip
   1ab08:	andeq	sl, r1, ip, lsr #25
   1ab0c:	strdeq	sl, [r1], -r0
   1ab10:	andeq	sl, r1, r4, lsl fp
   1ab14:	ldr	ip, [r5, #8]
   1ab18:	movw	r1, #60772	; 0xed64
   1ab1c:	movt	r1, #1
   1ab20:	mov	r0, r6
   1ab24:	ldr	r3, [r5, #12]
   1ab28:	ldr	r2, [r5, #32]
   1ab2c:	str	ip, [sp]
   1ab30:	ldr	ip, [r5, #16]
   1ab34:	str	r2, [sp, #24]
   1ab38:	ldr	r2, [r5, #28]
   1ab3c:	str	r3, [sp, #4]
   1ab40:	ldr	r3, [r5, #20]
   1ab44:	str	ip, [sp, #8]
   1ab48:	ldr	ip, [r5, #24]
   1ab4c:	str	r2, [sp, #20]
   1ab50:	ldr	r2, [r5]
   1ab54:	str	r3, [sp, #12]
   1ab58:	ldr	r3, [r5, #4]
   1ab5c:	str	ip, [sp, #16]
   1ab60:	bl	112ec <fprintf@plt>
   1ab64:	add	sp, sp, #32
   1ab68:	ldrd	r4, [sp]
   1ab6c:	ldr	r6, [sp, #8]
   1ab70:	add	sp, sp, #12
   1ab74:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab78:	mov	r3, ip
   1ab7c:	movw	r1, #60284	; 0xeb7c
   1ab80:	movt	r1, #1
   1ab84:	mov	r0, r6
   1ab88:	bl	112ec <fprintf@plt>
   1ab8c:	b	1aa94 <argp_parse@@Base+0x1598>
   1ab90:	ldr	r2, [r5]
   1ab94:	mov	r0, r6
   1ab98:	movw	r1, #60504	; 0xec58
   1ab9c:	movt	r1, #1
   1aba0:	add	sp, sp, #32
   1aba4:	ldrd	r4, [sp]
   1aba8:	ldr	r6, [sp, #8]
   1abac:	ldr	lr, [sp, #12]
   1abb0:	add	sp, sp, #16
   1abb4:	b	112ec <fprintf@plt>
   1abb8:	ldrd	r2, [r5]
   1abbc:	mov	r0, r6
   1abc0:	movw	r1, #60520	; 0xec68
   1abc4:	movt	r1, #1
   1abc8:	add	sp, sp, #32
   1abcc:	ldrd	r4, [sp]
   1abd0:	ldr	r6, [sp, #8]
   1abd4:	ldr	lr, [sp, #12]
   1abd8:	add	sp, sp, #16
   1abdc:	b	112ec <fprintf@plt>
   1abe0:	ldrd	r2, [r5]
   1abe4:	mov	r0, r6
   1abe8:	movw	r1, #60544	; 0xec80
   1abec:	movt	r1, #1
   1abf0:	ldr	ip, [r5, #8]
   1abf4:	str	ip, [sp, #48]	; 0x30
   1abf8:	add	sp, sp, #32
   1abfc:	ldrd	r4, [sp]
   1ac00:	ldr	r6, [sp, #8]
   1ac04:	ldr	lr, [sp, #12]
   1ac08:	add	sp, sp, #16
   1ac0c:	b	112ec <fprintf@plt>
   1ac10:	mov	r0, r6
   1ac14:	movw	r1, #60572	; 0xec9c
   1ac18:	movt	r1, #1
   1ac1c:	ldr	r3, [r5, #8]
   1ac20:	ldr	ip, [r5, #12]
   1ac24:	ldr	r2, [r5]
   1ac28:	str	r3, [sp]
   1ac2c:	ldr	r3, [r5, #4]
   1ac30:	str	ip, [sp, #4]
   1ac34:	bl	112ec <fprintf@plt>
   1ac38:	b	1ab64 <argp_parse@@Base+0x1668>
   1ac3c:	ldr	r2, [r5, #8]
   1ac40:	mov	r0, r6
   1ac44:	movw	r1, #60604	; 0xecbc
   1ac48:	movt	r1, #1
   1ac4c:	ldr	ip, [r5, #12]
   1ac50:	ldr	r3, [r5, #16]
   1ac54:	str	r2, [sp]
   1ac58:	ldr	r2, [r5]
   1ac5c:	str	r3, [sp, #8]
   1ac60:	ldr	r3, [r5, #4]
   1ac64:	str	ip, [sp, #4]
   1ac68:	bl	112ec <fprintf@plt>
   1ac6c:	b	1ab64 <argp_parse@@Base+0x1668>
   1ac70:	ldr	ip, [r5, #8]
   1ac74:	mov	r0, r6
   1ac78:	movw	r1, #60640	; 0xece0
   1ac7c:	movt	r1, #1
   1ac80:	ldr	r3, [r5, #12]
   1ac84:	ldr	r2, [r5, #20]
   1ac88:	str	ip, [sp]
   1ac8c:	ldr	ip, [r5, #16]
   1ac90:	str	r2, [sp, #12]
   1ac94:	ldr	r2, [r5]
   1ac98:	str	r3, [sp, #4]
   1ac9c:	ldr	r3, [r5, #4]
   1aca0:	str	ip, [sp, #8]
   1aca4:	bl	112ec <fprintf@plt>
   1aca8:	b	1ab64 <argp_parse@@Base+0x1668>
   1acac:	ldr	r3, [r5, #8]
   1acb0:	mov	r0, r6
   1acb4:	movw	r1, #60680	; 0xed08
   1acb8:	movt	r1, #1
   1acbc:	ldr	r2, [r5, #12]
   1acc0:	ldr	ip, [r5, #24]
   1acc4:	str	r3, [sp]
   1acc8:	ldr	r3, [r5, #16]
   1accc:	str	ip, [sp, #16]
   1acd0:	ldr	ip, [r5, #20]
   1acd4:	str	r2, [sp, #4]
   1acd8:	ldr	r2, [r5]
   1acdc:	str	r3, [sp, #8]
   1ace0:	ldr	r3, [r5, #4]
   1ace4:	str	ip, [sp, #12]
   1ace8:	bl	112ec <fprintf@plt>
   1acec:	b	1ab64 <argp_parse@@Base+0x1668>
   1acf0:	ldr	r2, [r5, #8]
   1acf4:	mov	r0, r6
   1acf8:	movw	r1, #60724	; 0xed34
   1acfc:	movt	r1, #1
   1ad00:	ldr	ip, [r5, #12]
   1ad04:	ldr	r3, [r5, #28]
   1ad08:	str	r2, [sp]
   1ad0c:	ldr	r2, [r5, #16]
   1ad10:	str	r3, [sp, #20]
   1ad14:	ldr	r3, [r5, #24]
   1ad18:	str	ip, [sp, #4]
   1ad1c:	ldr	ip, [r5, #20]
   1ad20:	str	r2, [sp, #8]
   1ad24:	ldr	r2, [r5]
   1ad28:	str	r3, [sp, #16]
   1ad2c:	ldr	r3, [r5, #4]
   1ad30:	str	ip, [sp, #12]
   1ad34:	bl	112ec <fprintf@plt>
   1ad38:	b	1ab64 <argp_parse@@Base+0x1668>
   1ad3c:	movw	r1, #60824	; 0xed98
   1ad40:	movt	r1, #1
   1ad44:	ldr	ip, [r5, #8]
   1ad48:	mov	r0, r6
   1ad4c:	b	1ab24 <argp_parse@@Base+0x1628>
   1ad50:	strd	r4, [sp, #-12]!
   1ad54:	mov	r4, r0
   1ad58:	mov	r0, r3
   1ad5c:	str	lr, [sp, #8]
   1ad60:	sub	sp, sp, #76	; 0x4c
   1ad64:	ldr	ip, [sp, #88]	; 0x58
   1ad68:	ldr	r3, [ip]
   1ad6c:	cmp	r3, #0
   1ad70:	str	r3, [sp, #32]
   1ad74:	beq	1b094 <argp_parse@@Base+0x1b98>
   1ad78:	ldr	r3, [ip, #4]
   1ad7c:	cmp	r3, #0
   1ad80:	str	r3, [sp, #36]	; 0x24
   1ad84:	beq	1b09c <argp_parse@@Base+0x1ba0>
   1ad88:	ldr	r3, [ip, #8]
   1ad8c:	cmp	r3, #0
   1ad90:	str	r3, [sp, #40]	; 0x28
   1ad94:	beq	1b0a4 <argp_parse@@Base+0x1ba8>
   1ad98:	ldr	r3, [ip, #12]
   1ad9c:	cmp	r3, #0
   1ada0:	str	r3, [sp, #44]	; 0x2c
   1ada4:	beq	1b0ac <argp_parse@@Base+0x1bb0>
   1ada8:	ldr	r3, [ip, #16]
   1adac:	cmp	r3, #0
   1adb0:	str	r3, [sp, #48]	; 0x30
   1adb4:	beq	1b0b4 <argp_parse@@Base+0x1bb8>
   1adb8:	ldr	r3, [ip, #20]
   1adbc:	cmp	r3, #0
   1adc0:	str	r3, [sp, #52]	; 0x34
   1adc4:	beq	1b0bc <argp_parse@@Base+0x1bc0>
   1adc8:	ldr	r3, [ip, #24]
   1adcc:	cmp	r3, #0
   1add0:	str	r3, [sp, #56]	; 0x38
   1add4:	beq	1b0c4 <argp_parse@@Base+0x1bc8>
   1add8:	ldr	r3, [ip, #28]
   1addc:	cmp	r3, #0
   1ade0:	str	r3, [sp, #60]	; 0x3c
   1ade4:	beq	1b0cc <argp_parse@@Base+0x1bd0>
   1ade8:	ldr	r3, [ip, #32]
   1adec:	cmp	r3, #0
   1adf0:	str	r3, [sp, #64]	; 0x40
   1adf4:	beq	1b0d4 <argp_parse@@Base+0x1bd8>
   1adf8:	ldr	r3, [ip, #36]	; 0x24
   1adfc:	cmp	r3, #0
   1ae00:	movne	r5, #10
   1ae04:	moveq	r5, #9
   1ae08:	cmp	r1, #0
   1ae0c:	beq	1af08 <argp_parse@@Base+0x1a0c>
   1ae10:	mov	r3, r2
   1ae14:	mov	r2, r1
   1ae18:	str	r0, [sp]
   1ae1c:	movw	r1, #60272	; 0xeb70
   1ae20:	movt	r1, #1
   1ae24:	mov	r0, r4
   1ae28:	bl	112ec <fprintf@plt>
   1ae2c:	movw	r3, #2022	; 0x7e6
   1ae30:	movw	r2, #60292	; 0xeb84
   1ae34:	movt	r2, #1
   1ae38:	movw	r1, #61060	; 0xee84
   1ae3c:	movt	r1, #1
   1ae40:	mov	r0, r4
   1ae44:	bl	112ec <fprintf@plt>
   1ae48:	mov	r1, r4
   1ae4c:	mov	r0, #10
   1ae50:	bl	113a0 <fputc@plt>
   1ae54:	movw	r2, #60296	; 0xeb88
   1ae58:	movt	r2, #1
   1ae5c:	movw	r1, #60332	; 0xebac
   1ae60:	movt	r1, #1
   1ae64:	mov	r0, r4
   1ae68:	bl	112ec <fprintf@plt>
   1ae6c:	mov	r1, r4
   1ae70:	mov	r0, #10
   1ae74:	bl	113a0 <fputc@plt>
   1ae78:	cmp	r5, #9
   1ae7c:	ldrls	pc, [pc, r5, lsl #2]
   1ae80:	b	1b0dc <argp_parse@@Base+0x1be0>
   1ae84:	strdeq	sl, [r1], -r8
   1ae88:	andeq	sl, r1, r0, lsr #30
   1ae8c:	andeq	sl, r1, r4, asr #30
   1ae90:	andeq	sl, r1, r8, ror #30
   1ae94:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae98:			; <UNDEFINED> instruction: 0x0001afbc
   1ae9c:	andeq	sl, r1, r4, ror #31
   1aea0:	andeq	fp, r1, ip, lsl r0
   1aea4:	andeq	fp, r1, ip, asr r0
   1aea8:	andeq	sl, r1, ip, lsr #29
   1aeac:	ldr	ip, [sp, #40]	; 0x28
   1aeb0:	movw	r1, #60772	; 0xed64
   1aeb4:	movt	r1, #1
   1aeb8:	mov	r0, r4
   1aebc:	str	ip, [sp]
   1aec0:	ldr	r2, [sp, #44]	; 0x2c
   1aec4:	ldr	ip, [sp, #48]	; 0x30
   1aec8:	ldr	r3, [sp, #64]	; 0x40
   1aecc:	str	r2, [sp, #4]
   1aed0:	ldr	r2, [sp, #52]	; 0x34
   1aed4:	str	ip, [sp, #8]
   1aed8:	ldr	ip, [sp, #56]	; 0x38
   1aedc:	str	r3, [sp, #24]
   1aee0:	ldr	r3, [sp, #60]	; 0x3c
   1aee4:	str	r2, [sp, #12]
   1aee8:	str	ip, [sp, #16]
   1aeec:	str	r3, [sp, #20]
   1aef0:	ldrd	r2, [sp, #32]
   1aef4:	bl	112ec <fprintf@plt>
   1aef8:	add	sp, sp, #76	; 0x4c
   1aefc:	ldrd	r4, [sp]
   1af00:	add	sp, sp, #8
   1af04:	pop	{pc}		; (ldr pc, [sp], #4)
   1af08:	mov	r3, r0
   1af0c:	movw	r1, #60284	; 0xeb7c
   1af10:	movt	r1, #1
   1af14:	mov	r0, r4
   1af18:	bl	112ec <fprintf@plt>
   1af1c:	b	1ae2c <argp_parse@@Base+0x1930>
   1af20:	ldr	r2, [sp, #32]
   1af24:	mov	r0, r4
   1af28:	movw	r1, #60504	; 0xec58
   1af2c:	movt	r1, #1
   1af30:	add	sp, sp, #76	; 0x4c
   1af34:	ldrd	r4, [sp]
   1af38:	ldr	lr, [sp, #8]
   1af3c:	add	sp, sp, #12
   1af40:	b	112ec <fprintf@plt>
   1af44:	ldrd	r2, [sp, #32]
   1af48:	mov	r0, r4
   1af4c:	movw	r1, #60520	; 0xec68
   1af50:	movt	r1, #1
   1af54:	add	sp, sp, #76	; 0x4c
   1af58:	ldrd	r4, [sp]
   1af5c:	ldr	lr, [sp, #8]
   1af60:	add	sp, sp, #12
   1af64:	b	112ec <fprintf@plt>
   1af68:	ldrd	r2, [sp, #32]
   1af6c:	mov	r0, r4
   1af70:	movw	r1, #60544	; 0xec80
   1af74:	movt	r1, #1
   1af78:	ldr	ip, [sp, #40]	; 0x28
   1af7c:	str	ip, [sp, #88]	; 0x58
   1af80:	add	sp, sp, #76	; 0x4c
   1af84:	ldrd	r4, [sp]
   1af88:	ldr	lr, [sp, #8]
   1af8c:	add	sp, sp, #12
   1af90:	b	112ec <fprintf@plt>
   1af94:	mov	r0, r4
   1af98:	movw	r1, #60572	; 0xec9c
   1af9c:	movt	r1, #1
   1afa0:	ldr	r3, [sp, #40]	; 0x28
   1afa4:	ldr	ip, [sp, #44]	; 0x2c
   1afa8:	ldr	r2, [sp, #32]
   1afac:	stm	sp, {r3, ip}
   1afb0:	ldr	r3, [sp, #36]	; 0x24
   1afb4:	bl	112ec <fprintf@plt>
   1afb8:	b	1aef8 <argp_parse@@Base+0x19fc>
   1afbc:	ldrd	r2, [sp, #40]	; 0x28
   1afc0:	mov	r0, r4
   1afc4:	movw	r1, #60604	; 0xecbc
   1afc8:	movt	r1, #1
   1afcc:	ldr	ip, [sp, #48]	; 0x30
   1afd0:	strd	r2, [sp]
   1afd4:	ldrd	r2, [sp, #32]
   1afd8:	str	ip, [sp, #8]
   1afdc:	bl	112ec <fprintf@plt>
   1afe0:	b	1aef8 <argp_parse@@Base+0x19fc>
   1afe4:	ldr	ip, [sp, #40]	; 0x28
   1afe8:	mov	r0, r4
   1afec:	movw	r1, #60640	; 0xece0
   1aff0:	movt	r1, #1
   1aff4:	ldr	r2, [sp, #44]	; 0x2c
   1aff8:	ldr	r3, [sp, #52]	; 0x34
   1affc:	str	ip, [sp]
   1b000:	ldr	ip, [sp, #48]	; 0x30
   1b004:	str	r2, [sp, #4]
   1b008:	str	ip, [sp, #8]
   1b00c:	str	r3, [sp, #12]
   1b010:	ldrd	r2, [sp, #32]
   1b014:	bl	112ec <fprintf@plt>
   1b018:	b	1aef8 <argp_parse@@Base+0x19fc>
   1b01c:	ldr	r3, [sp, #40]	; 0x28
   1b020:	mov	r0, r4
   1b024:	movw	r1, #60680	; 0xed08
   1b028:	movt	r1, #1
   1b02c:	ldr	ip, [sp, #44]	; 0x2c
   1b030:	ldr	r2, [sp, #56]	; 0x38
   1b034:	stm	sp, {r3, ip}
   1b038:	ldr	r3, [sp, #48]	; 0x30
   1b03c:	ldr	ip, [sp, #52]	; 0x34
   1b040:	str	r3, [sp, #8]
   1b044:	str	r2, [sp, #16]
   1b048:	str	ip, [sp, #12]
   1b04c:	ldr	r2, [sp, #32]
   1b050:	ldr	r3, [sp, #36]	; 0x24
   1b054:	bl	112ec <fprintf@plt>
   1b058:	b	1aef8 <argp_parse@@Base+0x19fc>
   1b05c:	ldrd	r2, [sp, #40]	; 0x28
   1b060:	mov	r0, r4
   1b064:	movw	r1, #60724	; 0xed34
   1b068:	movt	r1, #1
   1b06c:	ldr	ip, [sp, #60]	; 0x3c
   1b070:	strd	r2, [sp]
   1b074:	ldrd	r2, [sp, #48]	; 0x30
   1b078:	str	ip, [sp, #20]
   1b07c:	ldr	ip, [sp, #56]	; 0x38
   1b080:	strd	r2, [sp, #8]
   1b084:	ldrd	r2, [sp, #32]
   1b088:	str	ip, [sp, #16]
   1b08c:	bl	112ec <fprintf@plt>
   1b090:	b	1aef8 <argp_parse@@Base+0x19fc>
   1b094:	mov	r5, r3
   1b098:	b	1ae08 <argp_parse@@Base+0x190c>
   1b09c:	mov	r5, #1
   1b0a0:	b	1ae08 <argp_parse@@Base+0x190c>
   1b0a4:	mov	r5, #2
   1b0a8:	b	1ae08 <argp_parse@@Base+0x190c>
   1b0ac:	mov	r5, #3
   1b0b0:	b	1ae08 <argp_parse@@Base+0x190c>
   1b0b4:	mov	r5, #4
   1b0b8:	b	1ae08 <argp_parse@@Base+0x190c>
   1b0bc:	mov	r5, #5
   1b0c0:	b	1ae08 <argp_parse@@Base+0x190c>
   1b0c4:	mov	r5, #6
   1b0c8:	b	1ae08 <argp_parse@@Base+0x190c>
   1b0cc:	mov	r5, #7
   1b0d0:	b	1ae08 <argp_parse@@Base+0x190c>
   1b0d4:	mov	r5, #8
   1b0d8:	b	1ae08 <argp_parse@@Base+0x190c>
   1b0dc:	movw	r1, #60824	; 0xed98
   1b0e0:	movt	r1, #1
   1b0e4:	ldr	ip, [sp, #40]	; 0x28
   1b0e8:	mov	r0, r4
   1b0ec:	b	1aebc <argp_parse@@Base+0x19c0>
   1b0f0:	push	{r3}		; (str r3, [sp, #-4]!)
   1b0f4:	push	{lr}		; (str lr, [sp, #-4]!)
   1b0f8:	sub	sp, sp, #56	; 0x38
   1b0fc:	ldr	ip, [sp, #64]	; 0x40
   1b100:	add	r3, sp, #64	; 0x40
   1b104:	str	r3, [sp, #12]
   1b108:	cmp	ip, #0
   1b10c:	str	ip, [sp, #16]
   1b110:	beq	1b1a8 <argp_parse@@Base+0x1cac>
   1b114:	ldr	ip, [sp, #68]	; 0x44
   1b118:	cmp	ip, #0
   1b11c:	str	ip, [sp, #20]
   1b120:	beq	1b1cc <argp_parse@@Base+0x1cd0>
   1b124:	ldr	ip, [sp, #72]	; 0x48
   1b128:	cmp	ip, #0
   1b12c:	str	ip, [sp, #24]
   1b130:	beq	1b1d4 <argp_parse@@Base+0x1cd8>
   1b134:	ldr	ip, [sp, #76]	; 0x4c
   1b138:	cmp	ip, #0
   1b13c:	str	ip, [sp, #28]
   1b140:	beq	1b1dc <argp_parse@@Base+0x1ce0>
   1b144:	ldr	ip, [sp, #80]	; 0x50
   1b148:	cmp	ip, #0
   1b14c:	str	ip, [sp, #32]
   1b150:	beq	1b1e4 <argp_parse@@Base+0x1ce8>
   1b154:	ldr	ip, [sp, #84]	; 0x54
   1b158:	cmp	ip, #0
   1b15c:	str	ip, [sp, #36]	; 0x24
   1b160:	beq	1b1ec <argp_parse@@Base+0x1cf0>
   1b164:	ldr	ip, [sp, #88]	; 0x58
   1b168:	cmp	ip, #0
   1b16c:	str	ip, [sp, #40]	; 0x28
   1b170:	beq	1b1f4 <argp_parse@@Base+0x1cf8>
   1b174:	ldr	ip, [sp, #92]	; 0x5c
   1b178:	cmp	ip, #0
   1b17c:	str	ip, [sp, #44]	; 0x2c
   1b180:	beq	1b1fc <argp_parse@@Base+0x1d00>
   1b184:	ldr	ip, [sp, #96]	; 0x60
   1b188:	cmp	ip, #0
   1b18c:	str	ip, [sp, #48]	; 0x30
   1b190:	beq	1b204 <argp_parse@@Base+0x1d08>
   1b194:	ldr	r3, [sp, #100]	; 0x64
   1b198:	cmp	r3, #0
   1b19c:	str	r3, [sp, #52]	; 0x34
   1b1a0:	movne	ip, #10
   1b1a4:	moveq	ip, #9
   1b1a8:	ldr	r3, [sp, #60]	; 0x3c
   1b1ac:	add	lr, sp, #16
   1b1b0:	str	lr, [sp]
   1b1b4:	str	ip, [sp, #4]
   1b1b8:	bl	1a72c <argp_parse@@Base+0x1230>
   1b1bc:	add	sp, sp, #56	; 0x38
   1b1c0:	pop	{lr}		; (ldr lr, [sp], #4)
   1b1c4:	add	sp, sp, #4
   1b1c8:	bx	lr
   1b1cc:	mov	ip, #1
   1b1d0:	b	1b1a8 <argp_parse@@Base+0x1cac>
   1b1d4:	mov	ip, #2
   1b1d8:	b	1b1a8 <argp_parse@@Base+0x1cac>
   1b1dc:	mov	ip, #3
   1b1e0:	b	1b1a8 <argp_parse@@Base+0x1cac>
   1b1e4:	mov	ip, #4
   1b1e8:	b	1b1a8 <argp_parse@@Base+0x1cac>
   1b1ec:	mov	ip, #5
   1b1f0:	b	1b1a8 <argp_parse@@Base+0x1cac>
   1b1f4:	mov	ip, #6
   1b1f8:	b	1b1a8 <argp_parse@@Base+0x1cac>
   1b1fc:	mov	ip, #7
   1b200:	b	1b1a8 <argp_parse@@Base+0x1cac>
   1b204:	mov	ip, #8
   1b208:	b	1b1a8 <argp_parse@@Base+0x1cac>
   1b20c:	movw	r3, #1580	; 0x62c
   1b210:	movt	r3, #3
   1b214:	str	r4, [sp, #-8]!
   1b218:	mov	r0, #10
   1b21c:	ldr	r1, [r3]
   1b220:	str	lr, [sp, #4]
   1b224:	bl	113a0 <fputc@plt>
   1b228:	movw	r1, #60884	; 0xedd4
   1b22c:	movt	r1, #1
   1b230:	movw	r0, #60908	; 0xedec
   1b234:	movt	r0, #1
   1b238:	bl	11118 <printf@plt>
   1b23c:	movw	r2, #60928	; 0xee00
   1b240:	movt	r2, #1
   1b244:	movw	r1, #60188	; 0xeb1c
   1b248:	movt	r1, #1
   1b24c:	movw	r0, #60968	; 0xee28
   1b250:	movt	r0, #1
   1b254:	bl	11118 <printf@plt>
   1b258:	movw	r1, #60988	; 0xee3c
   1b25c:	movt	r1, #1
   1b260:	ldr	r4, [sp]
   1b264:	movw	r0, #61020	; 0xee5c
   1b268:	movt	r0, #1
   1b26c:	ldr	lr, [sp, #4]
   1b270:	add	sp, sp, #8
   1b274:	b	11118 <printf@plt>
   1b278:	strd	r4, [sp, #-16]!
   1b27c:	mov	r4, r0
   1b280:	mov	r5, r2
   1b284:	str	r6, [sp, #8]
   1b288:	mov	r6, r1
   1b28c:	str	lr, [sp, #12]
   1b290:	bl	1d56c <argp_parse@@Base+0x4070>
   1b294:	cmp	r0, #0
   1b298:	beq	1b2ac <argp_parse@@Base+0x1db0>
   1b29c:	ldrd	r4, [sp]
   1b2a0:	ldr	r6, [sp, #8]
   1b2a4:	add	sp, sp, #12
   1b2a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b2ac:	cmp	r4, #0
   1b2b0:	beq	1b2c0 <argp_parse@@Base+0x1dc4>
   1b2b4:	cmp	r6, #0
   1b2b8:	cmpne	r5, #0
   1b2bc:	beq	1b29c <argp_parse@@Base+0x1da0>
   1b2c0:	bl	1b87c <argp_parse@@Base+0x2380>
   1b2c4:	str	r4, [sp, #-8]!
   1b2c8:	str	lr, [sp, #4]
   1b2cc:	bl	1b920 <argp_parse@@Base+0x2424>
   1b2d0:	cmp	r0, #0
   1b2d4:	beq	1b2e4 <argp_parse@@Base+0x1de8>
   1b2d8:	ldr	r4, [sp]
   1b2dc:	add	sp, sp, #4
   1b2e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b2e4:	bl	1b87c <argp_parse@@Base+0x2380>
   1b2e8:	str	r4, [sp, #-8]!
   1b2ec:	str	lr, [sp, #4]
   1b2f0:	bl	1b920 <argp_parse@@Base+0x2424>
   1b2f4:	cmp	r0, #0
   1b2f8:	beq	1b308 <argp_parse@@Base+0x1e0c>
   1b2fc:	ldr	r4, [sp]
   1b300:	add	sp, sp, #4
   1b304:	pop	{pc}		; (ldr pc, [sp], #4)
   1b308:	bl	1b87c <argp_parse@@Base+0x2380>
   1b30c:	str	r4, [sp, #-8]!
   1b310:	str	lr, [sp, #4]
   1b314:	bl	1b920 <argp_parse@@Base+0x2424>
   1b318:	cmp	r0, #0
   1b31c:	beq	1b32c <argp_parse@@Base+0x1e30>
   1b320:	ldr	r4, [sp]
   1b324:	add	sp, sp, #4
   1b328:	pop	{pc}		; (ldr pc, [sp], #4)
   1b32c:	bl	1b87c <argp_parse@@Base+0x2380>
   1b330:	strd	r4, [sp, #-16]!
   1b334:	mov	r5, r0
   1b338:	mov	r4, r1
   1b33c:	str	r6, [sp, #8]
   1b340:	str	lr, [sp, #12]
   1b344:	bl	1b95c <argp_parse@@Base+0x2460>
   1b348:	cmp	r0, #0
   1b34c:	beq	1b360 <argp_parse@@Base+0x1e64>
   1b350:	ldrd	r4, [sp]
   1b354:	ldr	r6, [sp, #8]
   1b358:	add	sp, sp, #12
   1b35c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b360:	adds	r4, r4, #0
   1b364:	movne	r4, #1
   1b368:	cmp	r5, #0
   1b36c:	moveq	r4, #1
   1b370:	cmp	r4, #0
   1b374:	beq	1b350 <argp_parse@@Base+0x1e54>
   1b378:	bl	1b87c <argp_parse@@Base+0x2380>
   1b37c:	cmp	r1, #0
   1b380:	orreq	r1, r1, #1
   1b384:	str	r4, [sp, #-8]!
   1b388:	str	lr, [sp, #4]
   1b38c:	bl	1b95c <argp_parse@@Base+0x2460>
   1b390:	cmp	r0, #0
   1b394:	beq	1b3a4 <argp_parse@@Base+0x1ea8>
   1b398:	ldr	r4, [sp]
   1b39c:	add	sp, sp, #4
   1b3a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3a4:	bl	1b87c <argp_parse@@Base+0x2380>
   1b3a8:	strd	r4, [sp, #-16]!
   1b3ac:	mov	r4, r0
   1b3b0:	mov	r5, r2
   1b3b4:	str	r6, [sp, #8]
   1b3b8:	mov	r6, r1
   1b3bc:	str	lr, [sp, #12]
   1b3c0:	bl	1d56c <argp_parse@@Base+0x4070>
   1b3c4:	cmp	r0, #0
   1b3c8:	beq	1b3dc <argp_parse@@Base+0x1ee0>
   1b3cc:	ldrd	r4, [sp]
   1b3d0:	ldr	r6, [sp, #8]
   1b3d4:	add	sp, sp, #12
   1b3d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3dc:	cmp	r4, #0
   1b3e0:	beq	1b3f0 <argp_parse@@Base+0x1ef4>
   1b3e4:	cmp	r6, #0
   1b3e8:	cmpne	r5, #0
   1b3ec:	beq	1b3cc <argp_parse@@Base+0x1ed0>
   1b3f0:	bl	1b87c <argp_parse@@Base+0x2380>
   1b3f4:	cmp	r2, #0
   1b3f8:	cmpne	r1, #0
   1b3fc:	str	r4, [sp, #-8]!
   1b400:	moveq	r2, #1
   1b404:	str	lr, [sp, #4]
   1b408:	moveq	r1, r2
   1b40c:	bl	1d56c <argp_parse@@Base+0x4070>
   1b410:	cmp	r0, #0
   1b414:	beq	1b424 <argp_parse@@Base+0x1f28>
   1b418:	ldr	r4, [sp]
   1b41c:	add	sp, sp, #4
   1b420:	pop	{pc}		; (ldr pc, [sp], #4)
   1b424:	bl	1b87c <argp_parse@@Base+0x2380>
   1b428:	mov	r2, r1
   1b42c:	mov	r1, r0
   1b430:	str	r4, [sp, #-8]!
   1b434:	mov	r0, #0
   1b438:	str	lr, [sp, #4]
   1b43c:	bl	1d56c <argp_parse@@Base+0x4070>
   1b440:	cmp	r0, #0
   1b444:	beq	1b454 <argp_parse@@Base+0x1f58>
   1b448:	ldr	r4, [sp]
   1b44c:	add	sp, sp, #4
   1b450:	pop	{pc}		; (ldr pc, [sp], #4)
   1b454:	bl	1b87c <argp_parse@@Base+0x2380>
   1b458:	cmp	r1, #0
   1b45c:	cmpne	r0, #0
   1b460:	str	r4, [sp, #-8]!
   1b464:	moveq	r2, #1
   1b468:	movne	r2, r1
   1b46c:	str	lr, [sp, #4]
   1b470:	movne	r1, r0
   1b474:	moveq	r1, r2
   1b478:	mov	r0, #0
   1b47c:	bl	1d56c <argp_parse@@Base+0x4070>
   1b480:	cmp	r0, #0
   1b484:	beq	1b494 <argp_parse@@Base+0x1f98>
   1b488:	ldr	r4, [sp]
   1b48c:	add	sp, sp, #4
   1b490:	pop	{pc}		; (ldr pc, [sp], #4)
   1b494:	bl	1b87c <argp_parse@@Base+0x2380>
   1b498:	cmp	r0, #0
   1b49c:	strd	r4, [sp, #-16]!
   1b4a0:	mov	r5, r1
   1b4a4:	ldr	r4, [r1]
   1b4a8:	str	r6, [sp, #8]
   1b4ac:	str	lr, [sp, #12]
   1b4b0:	beq	1b4f8 <argp_parse@@Base+0x1ffc>
   1b4b4:	lsr	r3, r4, #1
   1b4b8:	add	r3, r3, #1
   1b4bc:	adds	r4, r4, r3
   1b4c0:	bcs	1b4f4 <argp_parse@@Base+0x1ff8>
   1b4c4:	mov	r2, #1
   1b4c8:	mov	r1, r4
   1b4cc:	bl	1d56c <argp_parse@@Base+0x4070>
   1b4d0:	cmp	r0, #0
   1b4d4:	beq	1b4ec <argp_parse@@Base+0x1ff0>
   1b4d8:	ldr	r6, [sp, #8]
   1b4dc:	str	r4, [r5]
   1b4e0:	ldrd	r4, [sp]
   1b4e4:	add	sp, sp, #12
   1b4e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4ec:	cmp	r4, #0
   1b4f0:	beq	1b4d8 <argp_parse@@Base+0x1fdc>
   1b4f4:	bl	1b87c <argp_parse@@Base+0x2380>
   1b4f8:	cmp	r4, #0
   1b4fc:	mov	r2, #1
   1b500:	moveq	r4, #64	; 0x40
   1b504:	mov	r1, r4
   1b508:	bl	1d56c <argp_parse@@Base+0x4070>
   1b50c:	cmp	r0, #0
   1b510:	bne	1b4d8 <argp_parse@@Base+0x1fdc>
   1b514:	b	1b4f4 <argp_parse@@Base+0x1ff8>
   1b518:	cmp	r0, #0
   1b51c:	strd	r4, [sp, #-16]!
   1b520:	mov	r5, r1
   1b524:	ldr	r4, [r1]
   1b528:	str	r6, [sp, #8]
   1b52c:	mov	r6, r2
   1b530:	str	lr, [sp, #12]
   1b534:	beq	1b57c <argp_parse@@Base+0x2080>
   1b538:	lsr	r3, r4, #1
   1b53c:	add	r3, r3, #1
   1b540:	adds	r4, r4, r3
   1b544:	bcs	1b578 <argp_parse@@Base+0x207c>
   1b548:	mov	r1, r4
   1b54c:	bl	1d56c <argp_parse@@Base+0x4070>
   1b550:	cmp	r0, #0
   1b554:	beq	1b56c <argp_parse@@Base+0x2070>
   1b558:	ldr	r6, [sp, #8]
   1b55c:	str	r4, [r5]
   1b560:	ldrd	r4, [sp]
   1b564:	add	sp, sp, #12
   1b568:	pop	{pc}		; (ldr pc, [sp], #4)
   1b56c:	cmp	r4, #0
   1b570:	cmpne	r6, #0
   1b574:	beq	1b558 <argp_parse@@Base+0x205c>
   1b578:	bl	1b87c <argp_parse@@Base+0x2380>
   1b57c:	cmp	r4, #0
   1b580:	bne	1b594 <argp_parse@@Base+0x2098>
   1b584:	mov	r4, #64	; 0x40
   1b588:	udiv	r4, r4, r2
   1b58c:	cmp	r2, #64	; 0x40
   1b590:	addhi	r4, r4, #1
   1b594:	mov	r2, r6
   1b598:	mov	r1, r4
   1b59c:	mov	r0, #0
   1b5a0:	bl	1d56c <argp_parse@@Base+0x4070>
   1b5a4:	cmp	r0, #0
   1b5a8:	bne	1b558 <argp_parse@@Base+0x205c>
   1b5ac:	b	1b578 <argp_parse@@Base+0x207c>
   1b5b0:	ldr	ip, [r1]
   1b5b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b5b8:	strd	r6, [sp, #8]
   1b5bc:	mov	r7, r1
   1b5c0:	mov	r6, r0
   1b5c4:	str	r8, [sp, #16]
   1b5c8:	mvn	r8, r3
   1b5cc:	lsr	r8, r8, #31
   1b5d0:	str	lr, [sp, #20]
   1b5d4:	asr	r1, ip, #1
   1b5d8:	ldr	lr, [sp, #24]
   1b5dc:	adds	r4, ip, r1
   1b5e0:	mvnvs	r4, #-2147483648	; 0x80000000
   1b5e4:	cmp	r3, r4
   1b5e8:	movge	r1, #0
   1b5ec:	andlt	r1, r8, #1
   1b5f0:	cmp	r1, #0
   1b5f4:	movne	r4, r3
   1b5f8:	smull	r0, r1, r4, lr
   1b5fc:	cmp	r1, r0, asr #31
   1b600:	bne	1b6b0 <argp_parse@@Base+0x21b4>
   1b604:	cmp	r0, #63	; 0x3f
   1b608:	mov	r5, r0
   1b60c:	ble	1b67c <argp_parse@@Base+0x2180>
   1b610:	cmp	r6, #0
   1b614:	sub	r1, r4, ip
   1b618:	streq	r6, [r7]
   1b61c:	cmp	r1, r2
   1b620:	bge	1b650 <argp_parse@@Base+0x2154>
   1b624:	adds	r4, ip, r2
   1b628:	bvs	1b6ac <argp_parse@@Base+0x21b0>
   1b62c:	cmp	r4, r3
   1b630:	movle	r3, #0
   1b634:	andgt	r3, r8, #1
   1b638:	cmp	r3, #0
   1b63c:	bne	1b6ac <argp_parse@@Base+0x21b0>
   1b640:	smull	r0, r1, r4, lr
   1b644:	cmp	r1, r0, asr #31
   1b648:	mov	r5, r0
   1b64c:	bne	1b6ac <argp_parse@@Base+0x21b0>
   1b650:	mov	r1, r5
   1b654:	mov	r0, r6
   1b658:	bl	1b95c <argp_parse@@Base+0x2460>
   1b65c:	cmp	r0, #0
   1b660:	beq	1b690 <argp_parse@@Base+0x2194>
   1b664:	ldr	r8, [sp, #16]
   1b668:	str	r4, [r7]
   1b66c:	ldrd	r4, [sp]
   1b670:	ldrd	r6, [sp, #8]
   1b674:	add	sp, sp, #20
   1b678:	pop	{pc}		; (ldr pc, [sp], #4)
   1b67c:	mov	r0, #64	; 0x40
   1b680:	sdiv	r4, r0, lr
   1b684:	mls	r5, lr, r4, r0
   1b688:	sub	r5, r0, r5
   1b68c:	b	1b610 <argp_parse@@Base+0x2114>
   1b690:	adds	r5, r5, #0
   1b694:	movne	r5, #1
   1b698:	cmp	r6, #0
   1b69c:	movne	r6, r5
   1b6a0:	moveq	r6, #1
   1b6a4:	cmp	r6, #0
   1b6a8:	beq	1b664 <argp_parse@@Base+0x2168>
   1b6ac:	bl	1b87c <argp_parse@@Base+0x2380>
   1b6b0:	mvn	r0, #-2147483648	; 0x80000000
   1b6b4:	b	1b680 <argp_parse@@Base+0x2184>
   1b6b8:	mov	r1, #1
   1b6bc:	str	r4, [sp, #-8]!
   1b6c0:	str	lr, [sp, #4]
   1b6c4:	bl	1b8ac <argp_parse@@Base+0x23b0>
   1b6c8:	cmp	r0, #0
   1b6cc:	beq	1b6dc <argp_parse@@Base+0x21e0>
   1b6d0:	ldr	r4, [sp]
   1b6d4:	add	sp, sp, #4
   1b6d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6dc:	bl	1b87c <argp_parse@@Base+0x2380>
   1b6e0:	mov	r1, #1
   1b6e4:	str	r4, [sp, #-8]!
   1b6e8:	str	lr, [sp, #4]
   1b6ec:	bl	1b8ac <argp_parse@@Base+0x23b0>
   1b6f0:	cmp	r0, #0
   1b6f4:	beq	1b704 <argp_parse@@Base+0x2208>
   1b6f8:	ldr	r4, [sp]
   1b6fc:	add	sp, sp, #4
   1b700:	pop	{pc}		; (ldr pc, [sp], #4)
   1b704:	bl	1b87c <argp_parse@@Base+0x2380>
   1b708:	str	r4, [sp, #-8]!
   1b70c:	str	lr, [sp, #4]
   1b710:	bl	1b8ac <argp_parse@@Base+0x23b0>
   1b714:	cmp	r0, #0
   1b718:	beq	1b728 <argp_parse@@Base+0x222c>
   1b71c:	ldr	r4, [sp]
   1b720:	add	sp, sp, #4
   1b724:	pop	{pc}		; (ldr pc, [sp], #4)
   1b728:	bl	1b87c <argp_parse@@Base+0x2380>
   1b72c:	str	r4, [sp, #-8]!
   1b730:	str	lr, [sp, #4]
   1b734:	bl	1b8ac <argp_parse@@Base+0x23b0>
   1b738:	cmp	r0, #0
   1b73c:	beq	1b74c <argp_parse@@Base+0x2250>
   1b740:	ldr	r4, [sp]
   1b744:	add	sp, sp, #4
   1b748:	pop	{pc}		; (ldr pc, [sp], #4)
   1b74c:	bl	1b87c <argp_parse@@Base+0x2380>
   1b750:	strd	r4, [sp, #-16]!
   1b754:	mov	r4, r1
   1b758:	str	r6, [sp, #8]
   1b75c:	mov	r6, r0
   1b760:	mov	r0, r1
   1b764:	str	lr, [sp, #12]
   1b768:	bl	1b920 <argp_parse@@Base+0x2424>
   1b76c:	subs	r5, r0, #0
   1b770:	beq	1b794 <argp_parse@@Base+0x2298>
   1b774:	mov	r2, r4
   1b778:	mov	r1, r6
   1b77c:	bl	11184 <memcpy@plt>
   1b780:	mov	r0, r5
   1b784:	ldrd	r4, [sp]
   1b788:	ldr	r6, [sp, #8]
   1b78c:	add	sp, sp, #12
   1b790:	pop	{pc}		; (ldr pc, [sp], #4)
   1b794:	bl	1b87c <argp_parse@@Base+0x2380>
   1b798:	strd	r4, [sp, #-16]!
   1b79c:	mov	r4, r1
   1b7a0:	str	r6, [sp, #8]
   1b7a4:	mov	r6, r0
   1b7a8:	mov	r0, r1
   1b7ac:	str	lr, [sp, #12]
   1b7b0:	bl	1b920 <argp_parse@@Base+0x2424>
   1b7b4:	subs	r5, r0, #0
   1b7b8:	beq	1b7dc <argp_parse@@Base+0x22e0>
   1b7bc:	mov	r2, r4
   1b7c0:	mov	r1, r6
   1b7c4:	bl	11184 <memcpy@plt>
   1b7c8:	mov	r0, r5
   1b7cc:	ldrd	r4, [sp]
   1b7d0:	ldr	r6, [sp, #8]
   1b7d4:	add	sp, sp, #12
   1b7d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b7dc:	bl	1b87c <argp_parse@@Base+0x2380>
   1b7e0:	strd	r4, [sp, #-16]!
   1b7e4:	mov	r4, r1
   1b7e8:	str	r6, [sp, #8]
   1b7ec:	mov	r6, r0
   1b7f0:	add	r0, r1, #1
   1b7f4:	str	lr, [sp, #12]
   1b7f8:	bl	1b920 <argp_parse@@Base+0x2424>
   1b7fc:	subs	r5, r0, #0
   1b800:	beq	1b82c <argp_parse@@Base+0x2330>
   1b804:	mov	r3, #0
   1b808:	mov	r1, r6
   1b80c:	mov	r2, r4
   1b810:	strb	r3, [r5, r4]
   1b814:	bl	11184 <memcpy@plt>
   1b818:	mov	r0, r5
   1b81c:	ldrd	r4, [sp]
   1b820:	ldr	r6, [sp, #8]
   1b824:	add	sp, sp, #12
   1b828:	pop	{pc}		; (ldr pc, [sp], #4)
   1b82c:	bl	1b87c <argp_parse@@Base+0x2380>
   1b830:	strd	r4, [sp, #-16]!
   1b834:	str	r6, [sp, #8]
   1b838:	mov	r6, r0
   1b83c:	str	lr, [sp, #12]
   1b840:	bl	112d4 <strlen@plt>
   1b844:	add	r4, r0, #1
   1b848:	mov	r0, r4
   1b84c:	bl	1b920 <argp_parse@@Base+0x2424>
   1b850:	subs	r5, r0, #0
   1b854:	beq	1b878 <argp_parse@@Base+0x237c>
   1b858:	mov	r2, r4
   1b85c:	mov	r1, r6
   1b860:	bl	11184 <memcpy@plt>
   1b864:	mov	r0, r5
   1b868:	ldrd	r4, [sp]
   1b86c:	ldr	r6, [sp, #8]
   1b870:	add	sp, sp, #12
   1b874:	pop	{pc}		; (ldr pc, [sp], #4)
   1b878:	bl	1b87c <argp_parse@@Base+0x2380>
   1b87c:	movw	r3, #1548	; 0x60c
   1b880:	movt	r3, #3
   1b884:	str	r4, [sp, #-8]!
   1b888:	movw	r2, #55152	; 0xd770
   1b88c:	movt	r2, #1
   1b890:	ldr	r0, [r3]
   1b894:	mov	r1, #0
   1b898:	movw	r3, #61108	; 0xeeb4
   1b89c:	movt	r3, #1
   1b8a0:	str	lr, [sp, #4]
   1b8a4:	bl	11238 <error@plt>
   1b8a8:	bl	11424 <abort@plt>
   1b8ac:	cmp	r1, #0
   1b8b0:	cmpne	r0, #0
   1b8b4:	beq	1b900 <argp_parse@@Base+0x2404>
   1b8b8:	strd	r4, [sp, #-16]!
   1b8bc:	umull	r4, r5, r0, r1
   1b8c0:	str	r6, [sp, #8]
   1b8c4:	str	lr, [sp, #12]
   1b8c8:	adds	r3, r5, #0
   1b8cc:	movne	r3, #1
   1b8d0:	cmp	r4, #0
   1b8d4:	blt	1b8e0 <argp_parse@@Base+0x23e4>
   1b8d8:	cmp	r3, #0
   1b8dc:	beq	1b90c <argp_parse@@Base+0x2410>
   1b8e0:	bl	112f8 <__errno_location@plt>
   1b8e4:	mov	r3, #12
   1b8e8:	ldrd	r4, [sp]
   1b8ec:	ldr	r6, [sp, #8]
   1b8f0:	add	sp, sp, #12
   1b8f4:	str	r3, [r0]
   1b8f8:	mov	r0, #0
   1b8fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b900:	mov	r1, #1
   1b904:	mov	r0, r1
   1b908:	b	110dc <calloc@plt>
   1b90c:	ldrd	r4, [sp]
   1b910:	ldr	r6, [sp, #8]
   1b914:	ldr	lr, [sp, #12]
   1b918:	add	sp, sp, #16
   1b91c:	b	110dc <calloc@plt>
   1b920:	cmp	r0, #0
   1b924:	beq	1b930 <argp_parse@@Base+0x2434>
   1b928:	blt	1b938 <argp_parse@@Base+0x243c>
   1b92c:	b	1125c <malloc@plt>
   1b930:	mov	r0, #1
   1b934:	b	1125c <malloc@plt>
   1b938:	str	r4, [sp, #-8]!
   1b93c:	str	lr, [sp, #4]
   1b940:	bl	112f8 <__errno_location@plt>
   1b944:	mov	r3, #12
   1b948:	ldr	r4, [sp]
   1b94c:	add	sp, sp, #4
   1b950:	str	r3, [r0]
   1b954:	mov	r0, #0
   1b958:	pop	{pc}		; (ldr pc, [sp], #4)
   1b95c:	cmp	r0, #0
   1b960:	beq	1b988 <argp_parse@@Base+0x248c>
   1b964:	cmp	r1, #0
   1b968:	str	r4, [sp, #-8]!
   1b96c:	str	lr, [sp, #4]
   1b970:	beq	1b990 <argp_parse@@Base+0x2494>
   1b974:	blt	1b9a4 <argp_parse@@Base+0x24a8>
   1b978:	ldr	r4, [sp]
   1b97c:	ldr	lr, [sp, #4]
   1b980:	add	sp, sp, #8
   1b984:	b	111fc <realloc@plt>
   1b988:	mov	r0, r1
   1b98c:	b	1b920 <argp_parse@@Base+0x2424>
   1b990:	bl	1a534 <argp_parse@@Base+0x1038>
   1b994:	ldr	r4, [sp]
   1b998:	add	sp, sp, #4
   1b99c:	mov	r0, #0
   1b9a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9a4:	bl	112f8 <__errno_location@plt>
   1b9a8:	mov	r3, #12
   1b9ac:	str	r3, [r0]
   1b9b0:	b	1b994 <argp_parse@@Base+0x2498>
   1b9b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b9b8:	mov	r5, r3
   1b9bc:	strd	r6, [sp, #8]
   1b9c0:	mov	r7, r1
   1b9c4:	mov	r6, r2
   1b9c8:	str	r8, [sp, #16]
   1b9cc:	mov	r8, r0
   1b9d0:	mov	r0, #36	; 0x24
   1b9d4:	str	lr, [sp, #20]
   1b9d8:	bl	1b920 <argp_parse@@Base+0x2424>
   1b9dc:	subs	r4, r0, #0
   1b9e0:	beq	1ba24 <argp_parse@@Base+0x2528>
   1b9e4:	mov	r3, #0
   1b9e8:	mov	r0, #200	; 0xc8
   1b9ec:	str	r8, [r4]
   1b9f0:	str	r7, [r4, #4]
   1b9f4:	str	r6, [r4, #8]
   1b9f8:	str	r5, [r4, #12]
   1b9fc:	str	r3, [r4, #16]
   1ba00:	str	r3, [r4, #20]
   1ba04:	bl	1b920 <argp_parse@@Base+0x2424>
   1ba08:	cmp	r0, #0
   1ba0c:	mov	r3, r0
   1ba10:	str	r0, [r4, #24]
   1ba14:	addne	r2, r0, #200	; 0xc8
   1ba18:	strne	r0, [r4, #28]
   1ba1c:	strne	r2, [r4, #32]
   1ba20:	beq	1ba3c <argp_parse@@Base+0x2540>
   1ba24:	mov	r0, r4
   1ba28:	ldrd	r4, [sp]
   1ba2c:	ldrd	r6, [sp, #8]
   1ba30:	ldr	r8, [sp, #16]
   1ba34:	add	sp, sp, #20
   1ba38:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba3c:	mov	r0, r4
   1ba40:	mov	r4, r3
   1ba44:	bl	1a534 <argp_parse@@Base+0x1038>
   1ba48:	b	1ba24 <argp_parse@@Base+0x2528>
   1ba4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ba50:	mov	r5, r0
   1ba54:	ldr	r4, [r0, #16]
   1ba58:	ldr	r3, [r0, #24]
   1ba5c:	strd	r6, [sp, #8]
   1ba60:	strd	r8, [sp, #16]
   1ba64:	ldr	r8, [r0, #28]
   1ba68:	strd	sl, [sp, #24]
   1ba6c:	add	r4, r3, r4
   1ba70:	str	lr, [sp, #32]
   1ba74:	sub	sp, sp, #12
   1ba78:	cmp	r4, r8
   1ba7c:	bcc	1baf8 <argp_parse@@Base+0x25fc>
   1ba80:	b	1bd54 <argp_parse@@Base+0x2858>
   1ba84:	sub	r2, fp, r4
   1ba88:	add	r2, r2, r6
   1ba8c:	cmp	r2, r3
   1ba90:	blt	1bd94 <argp_parse@@Base+0x2898>
   1ba94:	ldr	sl, [r5, #12]
   1ba98:	sub	r7, r3, #1
   1ba9c:	str	r3, [sp, #4]
   1baa0:	cmp	sl, #0
   1baa4:	bge	1bbb4 <argp_parse@@Base+0x26b8>
   1baa8:	cmp	r8, fp
   1baac:	bls	1bf2c <argp_parse@@Base+0x2a30>
   1bab0:	sub	r0, r7, r6
   1bab4:	sub	r2, r8, fp
   1bab8:	add	r0, r4, r0
   1babc:	mov	r1, fp
   1bac0:	bl	11148 <memmove@plt>
   1bac4:	ldr	r2, [r5, #20]
   1bac8:	mov	r3, #0
   1bacc:	str	r3, [r5, #20]
   1bad0:	ldr	r3, [sp, #4]
   1bad4:	ldr	r8, [r5, #28]
   1bad8:	sub	r7, r7, r2
   1badc:	add	r7, r4, r7
   1bae0:	sub	fp, r7, fp
   1bae4:	add	r4, r4, r3
   1bae8:	sub	r8, r8, fp
   1baec:	str	r8, [r5, #28]
   1baf0:	cmp	r4, r8
   1baf4:	bcs	1bd50 <argp_parse@@Base+0x2854>
   1baf8:	ldr	r6, [r5, #20]
   1bafc:	cmp	r6, #0
   1bb00:	bne	1bb60 <argp_parse@@Base+0x2664>
   1bb04:	ldr	r7, [r5, #4]
   1bb08:	cmp	r7, #0
   1bb0c:	beq	1bd78 <argp_parse@@Base+0x287c>
   1bb10:	ldr	r2, [r5, #32]
   1bb14:	add	r3, r8, r7
   1bb18:	cmp	r2, r3
   1bb1c:	bls	1bea0 <argp_parse@@Base+0x29a4>
   1bb20:	add	r6, r4, r7
   1bb24:	sub	r2, r8, r4
   1bb28:	mov	r1, r4
   1bb2c:	mov	r0, r6
   1bb30:	bl	11148 <memmove@plt>
   1bb34:	ldr	r3, [r5, #28]
   1bb38:	mov	r0, r4
   1bb3c:	mov	r2, r7
   1bb40:	mov	r1, #32
   1bb44:	mov	r4, r6
   1bb48:	add	r3, r3, r7
   1bb4c:	str	r3, [r5, #28]
   1bb50:	bl	11328 <memset@plt>
   1bb54:	ldr	r8, [r5, #28]
   1bb58:	mov	r6, r7
   1bb5c:	str	r7, [r5, #20]
   1bb60:	sub	r9, r8, r4
   1bb64:	mov	r1, #10
   1bb68:	mov	r2, r9
   1bb6c:	mov	r0, r4
   1bb70:	bl	1134c <memchr@plt>
   1bb74:	cmp	r6, #0
   1bb78:	mov	fp, r0
   1bb7c:	bge	1bb88 <argp_parse@@Base+0x268c>
   1bb80:	mov	r6, #0
   1bb84:	str	r6, [r5, #20]
   1bb88:	cmp	fp, #0
   1bb8c:	ldr	r3, [r5, #8]
   1bb90:	bne	1ba84 <argp_parse@@Base+0x2588>
   1bb94:	add	r1, r6, r9
   1bb98:	cmp	r1, r3
   1bb9c:	bcc	1bf9c <argp_parse@@Base+0x2aa0>
   1bba0:	ldr	sl, [r5, #12]
   1bba4:	sub	r7, r3, #1
   1bba8:	cmp	sl, #0
   1bbac:	blt	1bf30 <argp_parse@@Base+0x2a34>
   1bbb0:	mov	fp, r8
   1bbb4:	add	r7, r7, #1
   1bbb8:	sub	r6, r7, r6
   1bbbc:	adds	r6, r4, r6
   1bbc0:	bcs	1bdd8 <argp_parse@@Base+0x28dc>
   1bbc4:	bl	112a4 <__ctype_b_loc@plt>
   1bbc8:	mov	r3, r6
   1bbcc:	ldr	ip, [r0]
   1bbd0:	b	1bbe0 <argp_parse@@Base+0x26e4>
   1bbd4:	cmp	r4, r0
   1bbd8:	mov	r3, r0
   1bbdc:	bhi	1bddc <argp_parse@@Base+0x28e0>
   1bbe0:	ldrb	r1, [r3]
   1bbe4:	mov	r7, r3
   1bbe8:	sub	r0, r3, #1
   1bbec:	lsl	r1, r1, #1
   1bbf0:	ldrh	r1, [ip, r1]
   1bbf4:	tst	r1, #1
   1bbf8:	beq	1bbd4 <argp_parse@@Base+0x26d8>
   1bbfc:	add	r0, r3, #1
   1bc00:	cmp	r4, r0
   1bc04:	bcs	1bdec <argp_parse@@Base+0x28f0>
   1bc08:	cmp	r4, r3
   1bc0c:	movhi	r6, r0
   1bc10:	movhi	r7, r6
   1bc14:	bls	1bc30 <argp_parse@@Base+0x2734>
   1bc18:	b	1bc44 <argp_parse@@Base+0x2748>
   1bc1c:	ldrb	r1, [r6, #-1]
   1bc20:	lsl	r1, r1, #1
   1bc24:	ldrh	r1, [ip, r1]
   1bc28:	tst	r1, #1
   1bc2c:	beq	1bc40 <argp_parse@@Base+0x2744>
   1bc30:	cmp	r4, r3
   1bc34:	mov	r6, r3
   1bc38:	sub	r3, r3, #1
   1bc3c:	bne	1bc1c <argp_parse@@Base+0x2720>
   1bc40:	mov	r7, r0
   1bc44:	add	r3, r9, #1
   1bc48:	add	r3, r4, r3
   1bc4c:	cmp	r7, r3
   1bc50:	beq	1bda8 <argp_parse@@Base+0x28ac>
   1bc54:	add	r1, r6, #1
   1bc58:	sub	r3, r7, r1
   1bc5c:	cmp	r3, sl
   1bc60:	bge	1bdc0 <argp_parse@@Base+0x28c4>
   1bc64:	cmp	r7, r8
   1bc68:	bcs	1bdb8 <argp_parse@@Base+0x28bc>
   1bc6c:	ldr	r3, [r5, #32]
   1bc70:	add	sl, sl, #1
   1bc74:	sub	r3, r3, r8
   1bc78:	cmp	r3, sl
   1bc7c:	bgt	1bf48 <argp_parse@@Base+0x2a4c>
   1bc80:	ldr	r3, [r5]
   1bc84:	ldr	r0, [r5, #24]
   1bc88:	cmp	r0, r6
   1bc8c:	bcs	1bca0 <argp_parse@@Base+0x27a4>
   1bc90:	sub	r2, r6, r0
   1bc94:	mov	r1, #1
   1bc98:	bl	1119c <fwrite_unlocked@plt>
   1bc9c:	ldr	r3, [r5]
   1bca0:	ldr	r2, [r3, #20]
   1bca4:	ldr	r1, [r3, #24]
   1bca8:	cmp	r2, r1
   1bcac:	addcc	r1, r2, #1
   1bcb0:	strcc	r1, [r3, #20]
   1bcb4:	movcc	r3, #10
   1bcb8:	strbcc	r3, [r2]
   1bcbc:	bcs	1bf8c <argp_parse@@Base+0x2a90>
   1bcc0:	ldr	fp, [r5, #24]
   1bcc4:	sub	r4, r4, fp
   1bcc8:	sub	r3, r7, fp
   1bccc:	add	r9, r9, r4
   1bcd0:	mov	r8, r3
   1bcd4:	mov	r4, fp
   1bcd8:	ldr	r2, [r5, #12]
   1bcdc:	cmp	r2, r3
   1bce0:	ble	1bd04 <argp_parse@@Base+0x2808>
   1bce4:	add	r3, r9, #1
   1bce8:	add	r3, fp, r3
   1bcec:	cmp	r7, r3
   1bcf0:	bne	1be20 <argp_parse@@Base+0x2924>
   1bcf4:	ldr	r3, [r5, #32]
   1bcf8:	sub	r3, r3, r7
   1bcfc:	cmp	r2, r3
   1bd00:	bgt	1be20 <argp_parse@@Base+0x2924>
   1bd04:	cmp	r2, #0
   1bd08:	ble	1bd28 <argp_parse@@Base+0x282c>
   1bd0c:	mov	r3, #0
   1bd10:	mov	r1, #32
   1bd14:	strb	r1, [r4], #1
   1bd18:	add	r3, r3, #1
   1bd1c:	ldr	r2, [r5, #12]
   1bd20:	cmp	r2, r3
   1bd24:	bgt	1bd14 <argp_parse@@Base+0x2818>
   1bd28:	cmp	r4, r7
   1bd2c:	bcc	1be84 <argp_parse@@Base+0x2988>
   1bd30:	cmp	r2, #0
   1bd34:	sub	r8, r9, r8
   1bd38:	add	r8, r4, r8
   1bd3c:	mvneq	r2, #0
   1bd40:	cmp	r4, r8
   1bd44:	str	r2, [r5, #20]
   1bd48:	str	r8, [r5, #28]
   1bd4c:	bcc	1baf8 <argp_parse@@Base+0x25fc>
   1bd50:	ldr	r3, [r5, #24]
   1bd54:	sub	r8, r8, r3
   1bd58:	str	r8, [r5, #16]
   1bd5c:	add	sp, sp, #12
   1bd60:	ldrd	r4, [sp]
   1bd64:	ldrd	r6, [sp, #8]
   1bd68:	ldrd	r8, [sp, #16]
   1bd6c:	ldrd	sl, [sp, #24]
   1bd70:	add	sp, sp, #32
   1bd74:	pop	{pc}		; (ldr pc, [sp], #4)
   1bd78:	sub	r9, r8, r4
   1bd7c:	mov	r1, #10
   1bd80:	mov	r2, r9
   1bd84:	mov	r0, r4
   1bd88:	bl	1134c <memchr@plt>
   1bd8c:	mov	fp, r0
   1bd90:	b	1bb88 <argp_parse@@Base+0x268c>
   1bd94:	mov	r3, #0
   1bd98:	add	r4, fp, #1
   1bd9c:	ldr	r8, [r5, #28]
   1bda0:	str	r3, [r5, #20]
   1bda4:	b	1baf0 <argp_parse@@Base+0x25f4>
   1bda8:	ldr	r3, [r5, #32]
   1bdac:	sub	r3, r3, r6
   1bdb0:	cmp	r3, sl
   1bdb4:	ble	1bc64 <argp_parse@@Base+0x2768>
   1bdb8:	add	r1, r6, #1
   1bdbc:	sub	r3, r7, r1
   1bdc0:	mov	r2, #10
   1bdc4:	sub	r8, r7, r4
   1bdc8:	mov	fp, r4
   1bdcc:	mov	r4, r1
   1bdd0:	strb	r2, [r6]
   1bdd4:	b	1bcd8 <argp_parse@@Base+0x27dc>
   1bdd8:	add	r7, r6, #1
   1bddc:	cmp	r4, r7
   1bde0:	bcs	1bdec <argp_parse@@Base+0x28f0>
   1bde4:	mov	r6, r7
   1bde8:	b	1bc44 <argp_parse@@Base+0x2748>
   1bdec:	cmp	r6, fp
   1bdf0:	bcc	1bef4 <argp_parse@@Base+0x29f8>
   1bdf4:	cmp	r6, fp
   1bdf8:	beq	1bee0 <argp_parse@@Base+0x29e4>
   1bdfc:	bl	112a4 <__ctype_b_loc@plt>
   1be00:	ldr	r1, [r0]
   1be04:	mov	r7, r6
   1be08:	ldrb	r3, [r7, #1]!
   1be0c:	lsl	r3, r3, #1
   1be10:	ldrh	r3, [r1, r3]
   1be14:	tst	r3, #1
   1be18:	bne	1be08 <argp_parse@@Base+0x290c>
   1be1c:	b	1bc44 <argp_parse@@Base+0x2748>
   1be20:	cmp	r2, #0
   1be24:	movgt	r6, #0
   1be28:	movgt	sl, #32
   1be2c:	bgt	1be4c <argp_parse@@Base+0x2950>
   1be30:	b	1bd28 <argp_parse@@Base+0x282c>
   1be34:	str	ip, [r0, #20]
   1be38:	add	r6, r6, #1
   1be3c:	strb	sl, [r2]
   1be40:	ldr	r2, [r5, #12]
   1be44:	cmp	r2, r6
   1be48:	ble	1bd28 <argp_parse@@Base+0x282c>
   1be4c:	ldr	r0, [r5]
   1be50:	ldr	r2, [r0, #20]
   1be54:	ldr	r1, [r0, #24]
   1be58:	add	ip, r2, #1
   1be5c:	cmp	r2, r1
   1be60:	bcc	1be34 <argp_parse@@Base+0x2938>
   1be64:	mov	r1, #32
   1be68:	add	r6, r6, #1
   1be6c:	bl	11364 <__overflow@plt>
   1be70:	ldr	r2, [r5, #12]
   1be74:	cmp	r6, r2
   1be78:	blt	1be4c <argp_parse@@Base+0x2950>
   1be7c:	cmp	r4, r7
   1be80:	bcs	1bd30 <argp_parse@@Base+0x2834>
   1be84:	add	r2, fp, r9
   1be88:	mov	r1, r7
   1be8c:	sub	r2, r2, r7
   1be90:	mov	r0, r4
   1be94:	bl	11148 <memmove@plt>
   1be98:	ldr	r2, [r5, #12]
   1be9c:	b	1bd30 <argp_parse@@Base+0x2834>
   1bea0:	mov	r8, #32
   1bea4:	b	1beb4 <argp_parse@@Base+0x29b8>
   1bea8:	add	r6, r6, #1
   1beac:	cmp	r7, r6
   1beb0:	beq	1bb54 <argp_parse@@Base+0x2658>
   1beb4:	ldr	r0, [r5]
   1beb8:	ldr	r3, [r0, #20]
   1bebc:	ldr	r2, [r0, #24]
   1bec0:	add	r1, r3, #1
   1bec4:	cmp	r3, r2
   1bec8:	strcc	r1, [r0, #20]
   1becc:	strbcc	r8, [r3]
   1bed0:	bcc	1bea8 <argp_parse@@Base+0x29ac>
   1bed4:	mov	r1, #32
   1bed8:	bl	11364 <__overflow@plt>
   1bedc:	b	1bea8 <argp_parse@@Base+0x29ac>
   1bee0:	mov	r3, #0
   1bee4:	add	r4, r6, #1
   1bee8:	ldr	r8, [r5, #28]
   1beec:	str	r3, [r5, #20]
   1bef0:	b	1baf0 <argp_parse@@Base+0x25f4>
   1bef4:	add	r7, r6, #1
   1bef8:	b	1bf1c <argp_parse@@Base+0x2a20>
   1befc:	bl	112a4 <__ctype_b_loc@plt>
   1bf00:	ldrb	r3, [r7]
   1bf04:	add	r7, r7, #1
   1bf08:	ldr	r1, [r0]
   1bf0c:	lsl	r3, r3, #1
   1bf10:	ldrh	r3, [r1, r3]
   1bf14:	tst	r3, #1
   1bf18:	bne	1be04 <argp_parse@@Base+0x2908>
   1bf1c:	cmp	fp, r7
   1bf20:	mov	r6, r7
   1bf24:	bne	1befc <argp_parse@@Base+0x2a00>
   1bf28:	b	1bdf4 <argp_parse@@Base+0x28f8>
   1bf2c:	add	r1, r9, r6
   1bf30:	sub	r7, r7, r1
   1bf34:	str	r1, [r5, #20]
   1bf38:	add	r8, r8, r7
   1bf3c:	ldr	r3, [r5, #24]
   1bf40:	str	r8, [r5, #28]
   1bf44:	b	1bd54 <argp_parse@@Base+0x2858>
   1bf48:	sub	r8, r8, r7
   1bf4c:	mov	r1, r7
   1bf50:	mov	r2, r8
   1bf54:	add	r0, r6, sl
   1bf58:	bl	11148 <memmove@plt>
   1bf5c:	ldr	r3, [r5, #12]
   1bf60:	mov	r2, r6
   1bf64:	mov	r1, #10
   1bf68:	mov	fp, r4
   1bf6c:	strb	r1, [r2], #1
   1bf70:	add	r7, r3, #1
   1bf74:	add	r7, r6, r7
   1bf78:	add	r9, r7, r8
   1bf7c:	sub	r8, r7, r4
   1bf80:	sub	r9, r9, r4
   1bf84:	mov	r4, r2
   1bf88:	b	1bcd8 <argp_parse@@Base+0x27dc>
   1bf8c:	mov	r0, r3
   1bf90:	mov	r1, #10
   1bf94:	bl	11364 <__overflow@plt>
   1bf98:	b	1bcc0 <argp_parse@@Base+0x27c4>
   1bf9c:	str	r1, [r5, #20]
   1bfa0:	ldr	r3, [r5, #24]
   1bfa4:	ldr	r8, [r5, #28]
   1bfa8:	b	1bd54 <argp_parse@@Base+0x2858>
   1bfac:	str	r4, [sp, #-8]!
   1bfb0:	mov	r4, r0
   1bfb4:	str	lr, [sp, #4]
   1bfb8:	bl	1ba4c <argp_parse@@Base+0x2550>
   1bfbc:	ldr	r0, [r4, #24]
   1bfc0:	ldr	r2, [r4, #28]
   1bfc4:	cmp	r2, r0
   1bfc8:	bls	1bfe0 <argp_parse@@Base+0x2ae4>
   1bfcc:	sub	r2, r2, r0
   1bfd0:	mov	r1, #1
   1bfd4:	ldr	r3, [r4]
   1bfd8:	bl	1119c <fwrite_unlocked@plt>
   1bfdc:	ldr	r0, [r4, #24]
   1bfe0:	bl	1a534 <argp_parse@@Base+0x1038>
   1bfe4:	mov	r0, r4
   1bfe8:	ldr	r4, [sp]
   1bfec:	ldr	lr, [sp, #4]
   1bff0:	add	sp, sp, #8
   1bff4:	b	1a534 <argp_parse@@Base+0x1038>
   1bff8:	strd	r4, [sp, #-16]!
   1bffc:	mov	r4, r0
   1c000:	mov	r5, r1
   1c004:	str	r6, [sp, #8]
   1c008:	str	lr, [sp, #12]
   1c00c:	bl	1ba4c <argp_parse@@Base+0x2550>
   1c010:	mov	r1, #1
   1c014:	ldr	r3, [r4]
   1c018:	ldr	r2, [r4, #24]
   1c01c:	ldr	ip, [r4, #28]
   1c020:	mov	r0, r2
   1c024:	sub	r2, ip, r2
   1c028:	bl	1119c <fwrite_unlocked@plt>
   1c02c:	mov	ip, r0
   1c030:	ldr	r0, [r4, #24]
   1c034:	ldr	r3, [r4, #28]
   1c038:	sub	r2, r3, r0
   1c03c:	cmp	ip, r2
   1c040:	bne	1c0a0 <argp_parse@@Base+0x2ba4>
   1c044:	ldr	r1, [r4, #32]
   1c048:	mov	r3, #0
   1c04c:	str	r3, [r4, #16]
   1c050:	str	r0, [r4, #28]
   1c054:	sub	r1, r1, r0
   1c058:	cmp	r1, r5
   1c05c:	movcs	r3, #1
   1c060:	bcs	1c08c <argp_parse@@Base+0x2b90>
   1c064:	adds	r5, r1, r5
   1c068:	bcs	1c0c8 <argp_parse@@Base+0x2bcc>
   1c06c:	mov	r1, r5
   1c070:	bl	1b95c <argp_parse@@Base+0x2460>
   1c074:	cmp	r0, #0
   1c078:	beq	1c0c8 <argp_parse@@Base+0x2bcc>
   1c07c:	add	r1, r0, r5
   1c080:	mov	r3, #1
   1c084:	str	r0, [r4, #24]
   1c088:	strd	r0, [r4, #28]
   1c08c:	ldrd	r4, [sp]
   1c090:	mov	r0, r3
   1c094:	ldr	r6, [sp, #8]
   1c098:	add	sp, sp, #12
   1c09c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c0a0:	ldr	lr, [r4, #16]
   1c0a4:	sub	r3, r3, ip
   1c0a8:	add	r1, r0, ip
   1c0ac:	sub	r2, r3, r0
   1c0b0:	str	r3, [r4, #28]
   1c0b4:	sub	ip, lr, ip
   1c0b8:	str	ip, [r4, #16]
   1c0bc:	bl	11148 <memmove@plt>
   1c0c0:	mov	r3, #0
   1c0c4:	b	1c08c <argp_parse@@Base+0x2b90>
   1c0c8:	bl	112f8 <__errno_location@plt>
   1c0cc:	mov	r2, #12
   1c0d0:	mov	r3, #0
   1c0d4:	str	r2, [r0]
   1c0d8:	b	1c08c <argp_parse@@Base+0x2b90>
   1c0dc:	ldr	ip, [r0, #28]
   1c0e0:	ldr	r3, [r0, #32]
   1c0e4:	sub	r3, r3, ip
   1c0e8:	cmp	r3, r1
   1c0ec:	bcc	1c0f8 <argp_parse@@Base+0x2bfc>
   1c0f0:	mov	r0, #1
   1c0f4:	bx	lr
   1c0f8:	b	1bff8 <argp_parse@@Base+0x2afc>
   1c0fc:	push	{r1, r2, r3}
   1c100:	mov	r1, #150	; 0x96
   1c104:	strd	r4, [sp, #-20]!	; 0xffffffec
   1c108:	mov	r5, r0
   1c10c:	strd	r6, [sp, #8]
   1c110:	str	lr, [sp, #16]
   1c114:	sub	sp, sp, #8
   1c118:	ldr	r7, [sp, #28]
   1c11c:	add	r6, sp, #32
   1c120:	ldr	r0, [r5, #28]
   1c124:	ldr	r3, [r5, #32]
   1c128:	sub	r2, r3, r0
   1c12c:	cmp	r1, r2
   1c130:	bhi	1c180 <argp_parse@@Base+0x2c84>
   1c134:	sub	r4, r3, r0
   1c138:	mov	r2, r7
   1c13c:	str	r6, [sp, #4]
   1c140:	mov	r1, r4
   1c144:	mov	r3, r6
   1c148:	bl	113dc <vsnprintf@plt>
   1c14c:	cmp	r0, r4
   1c150:	add	r1, r0, #1
   1c154:	bcs	1c120 <argp_parse@@Base+0x2c24>
   1c158:	ldr	r3, [r5, #28]
   1c15c:	add	r3, r3, r0
   1c160:	str	r3, [r5, #28]
   1c164:	add	sp, sp, #8
   1c168:	ldrd	r4, [sp]
   1c16c:	ldrd	r6, [sp, #8]
   1c170:	ldr	lr, [sp, #16]
   1c174:	add	sp, sp, #20
   1c178:	add	sp, sp, #12
   1c17c:	bx	lr
   1c180:	mov	r0, r5
   1c184:	bl	1bff8 <argp_parse@@Base+0x2afc>
   1c188:	cmp	r0, #0
   1c18c:	beq	1c19c <argp_parse@@Base+0x2ca0>
   1c190:	ldr	r0, [r5, #28]
   1c194:	ldr	r3, [r5, #32]
   1c198:	b	1c134 <argp_parse@@Base+0x2c38>
   1c19c:	mvn	r0, #0
   1c1a0:	b	1c164 <argp_parse@@Base+0x2c68>
   1c1a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c1a8:	ldr	r2, [r1]
   1c1ac:	ldr	ip, [r1, #32]
   1c1b0:	strd	r6, [sp, #8]
   1c1b4:	strd	r8, [sp, #16]
   1c1b8:	strd	sl, [sp, #24]
   1c1bc:	str	lr, [sp, #32]
   1c1c0:	sub	sp, sp, #36	; 0x24
   1c1c4:	str	r2, [sp, #24]
   1c1c8:	str	r1, [sp, #28]
   1c1cc:	ldr	r1, [r1, #28]
   1c1d0:	cmp	r1, ip
   1c1d4:	cmplt	ip, r2
   1c1d8:	str	r1, [sp, #20]
   1c1dc:	bge	1c2dc <argp_parse@@Base+0x2de0>
   1c1e0:	mov	r3, r1
   1c1e4:	lsl	r1, ip, #2
   1c1e8:	mov	lr, r2
   1c1ec:	mov	r2, r1
   1c1f0:	add	r2, r2, #8
   1c1f4:	str	r1, [sp, #8]
   1c1f8:	add	r1, r0, r1
   1c1fc:	str	r1, [sp, #4]
   1c200:	str	r2, [sp, #12]
   1c204:	sub	r2, r1, #8
   1c208:	str	r2, [sp, #16]
   1c20c:	sub	r1, lr, ip
   1c210:	sub	r8, ip, r3
   1c214:	cmp	r1, r8
   1c218:	ble	1c314 <argp_parse@@Base+0x2e18>
   1c21c:	lsl	r2, r3, #2
   1c220:	sub	lr, lr, r8
   1c224:	sub	r5, r8, #1
   1c228:	add	r1, lr, #2
   1c22c:	lsl	r6, lr, #2
   1c230:	cmp	r2, r1, lsl #2
   1c234:	add	r7, r2, #8
   1c238:	add	r2, r0, r2
   1c23c:	add	r1, r0, r6
   1c240:	movge	r4, #1
   1c244:	movlt	r4, #0
   1c248:	cmp	r6, r7
   1c24c:	orrge	r4, r4, #1
   1c250:	orr	r9, r1, r2
   1c254:	cmp	r5, #3
   1c258:	movls	r4, #0
   1c25c:	andhi	r4, r4, #1
   1c260:	tst	r9, #7
   1c264:	movne	r4, #0
   1c268:	cmp	r4, #0
   1c26c:	beq	1c3e8 <argp_parse@@Base+0x2eec>
   1c270:	lsr	fp, r8, #1
   1c274:	sub	r2, r2, #8
   1c278:	sub	sl, r1, #8
   1c27c:	mov	r9, r2
   1c280:	add	fp, r1, fp, lsl #3
   1c284:	ldrd	r4, [r2, #8]!
   1c288:	ldrd	r6, [sl, #8]!
   1c28c:	strd	r6, [r9, #8]!
   1c290:	strd	r4, [r1], #8
   1c294:	cmp	r1, fp
   1c298:	bne	1c284 <argp_parse@@Base+0x2d88>
   1c29c:	bic	r2, r8, #1
   1c2a0:	cmp	r8, r2
   1c2a4:	beq	1c2c0 <argp_parse@@Base+0x2dc4>
   1c2a8:	add	r1, r3, r2
   1c2ac:	add	r2, lr, r2
   1c2b0:	ldr	r4, [r0, r1, lsl #2]
   1c2b4:	ldr	r5, [r0, r2, lsl #2]
   1c2b8:	str	r5, [r0, r1, lsl #2]
   1c2bc:	str	r4, [r0, r2, lsl #2]
   1c2c0:	cmp	lr, ip
   1c2c4:	movle	r2, #0
   1c2c8:	movgt	r2, #1
   1c2cc:	cmp	r3, ip
   1c2d0:	movge	r2, #0
   1c2d4:	cmp	r2, #0
   1c2d8:	bne	1c20c <argp_parse@@Base+0x2d10>
   1c2dc:	ldr	r3, [sp, #24]
   1c2e0:	ldr	r2, [sp, #28]
   1c2e4:	sub	ip, r3, ip
   1c2e8:	str	r3, [r2, #32]
   1c2ec:	ldr	r3, [sp, #20]
   1c2f0:	add	ip, ip, r3
   1c2f4:	str	ip, [r2, #28]
   1c2f8:	add	sp, sp, #36	; 0x24
   1c2fc:	ldrd	r4, [sp]
   1c300:	ldrd	r6, [sp, #8]
   1c304:	ldrd	r8, [sp, #16]
   1c308:	ldrd	sl, [sp, #24]
   1c30c:	add	sp, sp, #32
   1c310:	pop	{pc}		; (ldr pc, [sp], #4)
   1c314:	ldr	r4, [sp, #8]
   1c318:	lsl	r5, r3, #2
   1c31c:	sub	r7, r1, #1
   1c320:	ldr	r8, [sp, #12]
   1c324:	mov	r6, r5
   1c328:	add	r5, r5, #8
   1c32c:	add	r2, r0, r6
   1c330:	cmp	r8, r6
   1c334:	cmpgt	r5, r4
   1c338:	ldr	r8, [sp, #4]
   1c33c:	movle	r5, #1
   1c340:	movgt	r5, #0
   1c344:	cmp	r7, #3
   1c348:	movls	r4, #0
   1c34c:	andhi	r4, r5, #1
   1c350:	orr	r6, r2, r8
   1c354:	tst	r6, #7
   1c358:	movne	r4, #0
   1c35c:	cmp	r4, #0
   1c360:	beq	1c3c0 <argp_parse@@Base+0x2ec4>
   1c364:	lsr	fp, r1, #1
   1c368:	ldr	sl, [sp, #16]
   1c36c:	sub	r2, r2, #8
   1c370:	mov	r9, r2
   1c374:	add	fp, r8, fp, lsl #3
   1c378:	ldrd	r4, [r2, #8]!
   1c37c:	ldrd	r6, [sl, #8]!
   1c380:	strd	r6, [r9, #8]!
   1c384:	strd	r4, [r8], #8
   1c388:	cmp	r8, fp
   1c38c:	bne	1c378 <argp_parse@@Base+0x2e7c>
   1c390:	bic	r2, r1, #1
   1c394:	cmp	r1, r2
   1c398:	addeq	r3, r1, r3
   1c39c:	beq	1c2c0 <argp_parse@@Base+0x2dc4>
   1c3a0:	add	r4, r3, r2
   1c3a4:	add	r2, ip, r2
   1c3a8:	ldr	r5, [r0, r4, lsl #2]
   1c3ac:	add	r3, r1, r3
   1c3b0:	ldr	r6, [r0, r2, lsl #2]
   1c3b4:	str	r6, [r0, r4, lsl #2]
   1c3b8:	str	r5, [r0, r2, lsl #2]
   1c3bc:	b	1c2c0 <argp_parse@@Base+0x2dc4>
   1c3c0:	add	r3, r1, r3
   1c3c4:	ldr	r1, [sp, #4]
   1c3c8:	add	r6, r0, r3, lsl #2
   1c3cc:	ldr	r5, [r1]
   1c3d0:	ldr	r4, [r2]
   1c3d4:	str	r5, [r2], #4
   1c3d8:	cmp	r2, r6
   1c3dc:	str	r4, [r1], #4
   1c3e0:	bne	1c3cc <argp_parse@@Base+0x2ed0>
   1c3e4:	b	1c2c0 <argp_parse@@Base+0x2dc4>
   1c3e8:	add	r8, r3, r8
   1c3ec:	add	r8, r0, r8, lsl #2
   1c3f0:	ldr	r5, [r1]
   1c3f4:	ldr	r4, [r2]
   1c3f8:	str	r5, [r2], #4
   1c3fc:	cmp	r8, r2
   1c400:	str	r4, [r1], #4
   1c404:	bne	1c3f0 <argp_parse@@Base+0x2ef4>
   1c408:	b	1c2c0 <argp_parse@@Base+0x2dc4>
   1c40c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c410:	strd	r6, [sp, #8]
   1c414:	strd	r8, [sp, #16]
   1c418:	strd	sl, [sp, #24]
   1c41c:	str	lr, [sp, #32]
   1c420:	sub	sp, sp, #52	; 0x34
   1c424:	str	r3, [sp, #8]
   1c428:	ldr	r3, [sp, #96]	; 0x60
   1c42c:	str	r1, [sp, #20]
   1c430:	str	r2, [sp, #28]
   1c434:	str	r0, [sp, #32]
   1c438:	ldr	r9, [r3, #20]
   1c43c:	ldrb	r5, [r9]
   1c440:	mov	r8, r9
   1c444:	str	r9, [sp, #24]
   1c448:	cmp	r5, #61	; 0x3d
   1c44c:	cmpne	r5, #0
   1c450:	movne	r5, #1
   1c454:	moveq	r5, #0
   1c458:	beq	1c470 <argp_parse@@Base+0x2f74>
   1c45c:	ldrb	r3, [r8, #1]!
   1c460:	cmp	r3, #0
   1c464:	cmpne	r3, #61	; 0x3d
   1c468:	bne	1c45c <argp_parse@@Base+0x2f60>
   1c46c:	sub	r5, r8, r9
   1c470:	ldr	r3, [sp, #8]
   1c474:	ldr	r3, [r3]
   1c478:	cmp	r3, #0
   1c47c:	str	r3, [sp, #12]
   1c480:	beq	1c674 <argp_parse@@Base+0x3178>
   1c484:	ldr	fp, [sp, #8]
   1c488:	mov	r4, r3
   1c48c:	mov	r6, #0
   1c490:	str	fp, [sp, #16]
   1c494:	b	1c49c <argp_parse@@Base+0x2fa0>
   1c498:	mov	r6, r7
   1c49c:	mov	r2, r5
   1c4a0:	mov	r1, r9
   1c4a4:	mov	r0, r4
   1c4a8:	add	r7, r6, #1
   1c4ac:	bl	11418 <strncmp@plt>
   1c4b0:	cmp	r0, #0
   1c4b4:	mov	sl, fp
   1c4b8:	mov	r0, r4
   1c4bc:	bne	1c4cc <argp_parse@@Base+0x2fd0>
   1c4c0:	bl	112d4 <strlen@plt>
   1c4c4:	cmp	r0, r5
   1c4c8:	beq	1c5ec <argp_parse@@Base+0x30f0>
   1c4cc:	ldr	r4, [fp, #16]!
   1c4d0:	cmp	r4, #0
   1c4d4:	bne	1c498 <argp_parse@@Base+0x2f9c>
   1c4d8:	ldr	r3, [sp, #100]	; 0x64
   1c4dc:	cmp	r3, #0
   1c4e0:	ldr	r3, [sp, #92]	; 0x5c
   1c4e4:	beq	1c580 <argp_parse@@Base+0x3084>
   1c4e8:	cmp	r3, #0
   1c4ec:	bne	1c6ec <argp_parse@@Base+0x31f0>
   1c4f0:	ldr	r0, [sp, #12]
   1c4f4:	mov	r9, r3
   1c4f8:	mov	sl, r3
   1c4fc:	mov	fp, #1
   1c500:	str	r3, [sp, #40]	; 0x28
   1c504:	ldr	r1, [sp, #24]
   1c508:	str	r7, [sp, #24]
   1c50c:	mov	r7, r5
   1c510:	ldr	r5, [sp, #16]
   1c514:	str	r6, [sp, #16]
   1c518:	ldr	r6, [sp, #96]	; 0x60
   1c51c:	str	r3, [sp, #44]	; 0x2c
   1c520:	mvn	r3, #0
   1c524:	str	r3, [sp, #36]	; 0x24
   1c528:	mov	r2, r7
   1c52c:	bl	11418 <strncmp@plt>
   1c530:	cmp	r0, #0
   1c534:	bne	1c568 <argp_parse@@Base+0x306c>
   1c538:	cmp	sl, #0
   1c53c:	beq	1c8d0 <argp_parse@@Base+0x33d4>
   1c540:	ldr	r2, [r5, #4]
   1c544:	ldr	r1, [sl, #4]
   1c548:	cmp	r1, r2
   1c54c:	beq	1c9f0 <argp_parse@@Base+0x34f4>
   1c550:	ldr	r3, [sp, #40]	; 0x28
   1c554:	cmp	r3, #0
   1c558:	bne	1c568 <argp_parse@@Base+0x306c>
   1c55c:	cmp	r4, #0
   1c560:	beq	1c968 <argp_parse@@Base+0x346c>
   1c564:	strb	fp, [r4, r9]
   1c568:	ldr	r0, [r5, #16]!
   1c56c:	add	r9, r9, #1
   1c570:	cmp	r0, #0
   1c574:	beq	1c800 <argp_parse@@Base+0x3304>
   1c578:	ldr	r1, [r6, #20]
   1c57c:	b	1c528 <argp_parse@@Base+0x302c>
   1c580:	cmp	r3, #0
   1c584:	beq	1c764 <argp_parse@@Base+0x3268>
   1c588:	ldr	r0, [sp, #12]
   1c58c:	mvn	r3, #0
   1c590:	ldr	r6, [sp, #100]	; 0x64
   1c594:	str	r3, [sp, #36]	; 0x24
   1c598:	ldr	sl, [sp, #16]
   1c59c:	mov	r7, r6
   1c5a0:	mov	r2, r5
   1c5a4:	mov	r1, r9
   1c5a8:	bl	11418 <strncmp@plt>
   1c5ac:	cmp	r0, #0
   1c5b0:	bne	1c5c4 <argp_parse@@Base+0x30c8>
   1c5b4:	cmp	r4, #0
   1c5b8:	moveq	r4, sl
   1c5bc:	movne	r6, #1
   1c5c0:	streq	r7, [sp, #36]	; 0x24
   1c5c4:	ldr	r0, [sl, #16]!
   1c5c8:	add	r7, r7, #1
   1c5cc:	cmp	r0, #0
   1c5d0:	bne	1c5a0 <argp_parse@@Base+0x30a4>
   1c5d4:	cmp	r6, #0
   1c5d8:	moveq	sl, r4
   1c5dc:	bne	1c868 <argp_parse@@Base+0x336c>
   1c5e0:	cmp	sl, #0
   1c5e4:	ldrne	r6, [sp, #36]	; 0x24
   1c5e8:	beq	1c674 <argp_parse@@Base+0x3178>
   1c5ec:	ldr	r3, [sp, #96]	; 0x60
   1c5f0:	mov	r2, #0
   1c5f4:	ldr	r1, [sp, #96]	; 0x60
   1c5f8:	ldr	r0, [sl, #4]
   1c5fc:	ldr	r3, [r3]
   1c600:	str	r2, [r1, #20]
   1c604:	add	r2, r3, #1
   1c608:	str	r2, [r1]
   1c60c:	ldrb	r1, [r8]
   1c610:	cmp	r1, #0
   1c614:	bne	1c65c <argp_parse@@Base+0x3160>
   1c618:	cmp	r0, #1
   1c61c:	beq	1c89c <argp_parse@@Base+0x33a0>
   1c620:	ldr	r3, [sp, #88]	; 0x58
   1c624:	cmp	r3, #0
   1c628:	strne	r6, [r3]
   1c62c:	ldr	r3, [sl, #8]
   1c630:	ldr	r0, [sl, #12]
   1c634:	cmp	r3, #0
   1c638:	strne	r0, [r3]
   1c63c:	movne	r0, #0
   1c640:	add	sp, sp, #52	; 0x34
   1c644:	ldrd	r4, [sp]
   1c648:	ldrd	r6, [sp, #8]
   1c64c:	ldrd	r8, [sp, #16]
   1c650:	ldrd	sl, [sp, #24]
   1c654:	add	sp, sp, #32
   1c658:	pop	{pc}		; (ldr pc, [sp], #4)
   1c65c:	cmp	r0, #0
   1c660:	beq	1c8dc <argp_parse@@Base+0x33e0>
   1c664:	ldr	r3, [sp, #96]	; 0x60
   1c668:	add	r8, r8, #1
   1c66c:	str	r8, [r3, #12]
   1c670:	b	1c620 <argp_parse@@Base+0x3124>
   1c674:	ldr	r3, [sp, #92]	; 0x5c
   1c678:	cmp	r3, #0
   1c67c:	beq	1c6b8 <argp_parse@@Base+0x31bc>
   1c680:	ldr	r2, [sp, #20]
   1c684:	ldr	r3, [sp, #96]	; 0x60
   1c688:	ldr	r3, [r3]
   1c68c:	ldr	r3, [r2, r3, lsl #2]
   1c690:	ldrb	r3, [r3, #1]
   1c694:	cmp	r3, #45	; 0x2d
   1c698:	beq	1c6b8 <argp_parse@@Base+0x31bc>
   1c69c:	ldr	r0, [sp, #28]
   1c6a0:	ldr	r3, [sp, #96]	; 0x60
   1c6a4:	ldr	r3, [r3, #20]
   1c6a8:	ldrb	r1, [r3]
   1c6ac:	bl	112e0 <strchr@plt>
   1c6b0:	cmp	r0, #0
   1c6b4:	bne	1c92c <argp_parse@@Base+0x3430>
   1c6b8:	ldr	r3, [sp, #100]	; 0x64
   1c6bc:	cmp	r3, #0
   1c6c0:	bne	1c7cc <argp_parse@@Base+0x32d0>
   1c6c4:	ldr	r3, [sp, #96]	; 0x60
   1c6c8:	mov	r2, #0
   1c6cc:	mov	r0, #63	; 0x3f
   1c6d0:	ldr	r1, [sp, #96]	; 0x60
   1c6d4:	ldr	r3, [r3]
   1c6d8:	str	r2, [r1, #8]
   1c6dc:	str	r2, [r1, #20]
   1c6e0:	add	r3, r3, #1
   1c6e4:	str	r3, [r1]
   1c6e8:	b	1c640 <argp_parse@@Base+0x3144>
   1c6ec:	ldr	r0, [sp, #12]
   1c6f0:	mvn	r3, #0
   1c6f4:	mov	sl, r4
   1c6f8:	mov	r9, r4
   1c6fc:	ldr	fp, [sp, #16]
   1c700:	str	r3, [sp, #36]	; 0x24
   1c704:	ldr	r1, [sp, #24]
   1c708:	str	r7, [sp, #24]
   1c70c:	ldr	r7, [sp, #96]	; 0x60
   1c710:	str	r4, [sp, #40]	; 0x28
   1c714:	str	r4, [sp, #44]	; 0x2c
   1c718:	mov	r2, r5
   1c71c:	bl	11418 <strncmp@plt>
   1c720:	cmp	r0, #0
   1c724:	bne	1c74c <argp_parse@@Base+0x3250>
   1c728:	cmp	sl, #0
   1c72c:	beq	1c8c4 <argp_parse@@Base+0x33c8>
   1c730:	ldr	r3, [sp, #40]	; 0x28
   1c734:	cmp	r3, #0
   1c738:	bne	1c74c <argp_parse@@Base+0x3250>
   1c73c:	cmp	r4, #0
   1c740:	beq	1c934 <argp_parse@@Base+0x3438>
   1c744:	mov	r3, #1
   1c748:	strb	r3, [r4, r9]
   1c74c:	ldr	r0, [fp, #16]!
   1c750:	add	r9, r9, #1
   1c754:	cmp	r0, #0
   1c758:	beq	1c804 <argp_parse@@Base+0x3308>
   1c75c:	ldr	r1, [r7, #20]
   1c760:	b	1c718 <argp_parse@@Base+0x321c>
   1c764:	mov	r6, r3
   1c768:	mov	r7, r3
   1c76c:	ldr	r0, [sp, #12]
   1c770:	mvn	r3, #0
   1c774:	ldr	sl, [sp, #16]
   1c778:	str	r3, [sp, #36]	; 0x24
   1c77c:	b	1c7a4 <argp_parse@@Base+0x32a8>
   1c780:	ldr	r2, [r4, #4]
   1c784:	ldr	r3, [sl, #4]
   1c788:	cmp	r2, r3
   1c78c:	beq	1c9cc <argp_parse@@Base+0x34d0>
   1c790:	mov	r6, #1
   1c794:	ldr	r0, [sl, #16]!
   1c798:	add	r7, r7, #1
   1c79c:	cmp	r0, #0
   1c7a0:	beq	1c5d4 <argp_parse@@Base+0x30d8>
   1c7a4:	mov	r2, r5
   1c7a8:	mov	r1, r9
   1c7ac:	bl	11418 <strncmp@plt>
   1c7b0:	cmp	r0, #0
   1c7b4:	bne	1c794 <argp_parse@@Base+0x3298>
   1c7b8:	cmp	r4, #0
   1c7bc:	bne	1c780 <argp_parse@@Base+0x3284>
   1c7c0:	mov	r4, sl
   1c7c4:	str	r7, [sp, #36]	; 0x24
   1c7c8:	b	1c794 <argp_parse@@Base+0x3298>
   1c7cc:	ldr	r3, [sp, #96]	; 0x60
   1c7d0:	movw	r0, #1576	; 0x628
   1c7d4:	movt	r0, #3
   1c7d8:	movw	r1, #61216	; 0xef20
   1c7dc:	movt	r1, #1
   1c7e0:	ldr	r0, [r0]
   1c7e4:	ldr	ip, [r3, #20]
   1c7e8:	ldr	r3, [sp, #20]
   1c7ec:	ldr	r2, [r3]
   1c7f0:	str	ip, [sp]
   1c7f4:	ldr	r3, [sp, #104]	; 0x68
   1c7f8:	bl	112ec <fprintf@plt>
   1c7fc:	b	1c6c4 <argp_parse@@Base+0x31c8>
   1c800:	ldr	r6, [sp, #16]
   1c804:	ldr	r3, [sp, #40]	; 0x28
   1c808:	orrs	r3, r4, r3
   1c80c:	beq	1c5e0 <argp_parse@@Base+0x30e4>
   1c810:	ldr	r3, [sp, #40]	; 0x28
   1c814:	movw	r5, #1576	; 0x628
   1c818:	movt	r5, #3
   1c81c:	ldr	r0, [r5]
   1c820:	cmp	r3, #0
   1c824:	beq	1ca14 <argp_parse@@Base+0x3518>
   1c828:	ldr	r2, [sp, #20]
   1c82c:	movw	r1, #61128	; 0xeec8
   1c830:	movt	r1, #1
   1c834:	ldr	r3, [sp, #96]	; 0x60
   1c838:	ldr	r2, [r2]
   1c83c:	ldr	ip, [r3, #20]
   1c840:	ldr	r3, [sp, #104]	; 0x68
   1c844:	str	ip, [sp]
   1c848:	bl	112ec <fprintf@plt>
   1c84c:	ldr	r3, [sp, #44]	; 0x2c
   1c850:	cmp	r3, #0
   1c854:	beq	1c860 <argp_parse@@Base+0x3364>
   1c858:	mov	r0, r4
   1c85c:	bl	1a534 <argp_parse@@Base+0x1038>
   1c860:	ldr	r3, [sp, #96]	; 0x60
   1c864:	ldr	r9, [r3, #20]
   1c868:	mov	r0, r9
   1c86c:	bl	112d4 <strlen@plt>
   1c870:	ldr	r3, [sp, #96]	; 0x60
   1c874:	add	r9, r9, r0
   1c878:	mov	r2, #0
   1c87c:	mov	r0, #63	; 0x3f
   1c880:	ldr	r1, [sp, #96]	; 0x60
   1c884:	ldr	r3, [r3]
   1c888:	str	r2, [r1, #8]
   1c88c:	str	r9, [r1, #20]
   1c890:	add	r3, r3, #1
   1c894:	str	r3, [r1]
   1c898:	b	1c640 <argp_parse@@Base+0x3144>
   1c89c:	ldr	r1, [sp, #32]
   1c8a0:	cmp	r2, r1
   1c8a4:	bge	1c99c <argp_parse@@Base+0x34a0>
   1c8a8:	ldr	r1, [sp, #20]
   1c8ac:	add	r3, r3, #2
   1c8b0:	ldr	r2, [r1, r2, lsl #2]
   1c8b4:	ldr	r1, [sp, #96]	; 0x60
   1c8b8:	str	r3, [r1]
   1c8bc:	str	r2, [r1, #12]
   1c8c0:	b	1c620 <argp_parse@@Base+0x3124>
   1c8c4:	mov	sl, fp
   1c8c8:	str	r9, [sp, #36]	; 0x24
   1c8cc:	b	1c74c <argp_parse@@Base+0x3250>
   1c8d0:	mov	sl, r5
   1c8d4:	str	r9, [sp, #36]	; 0x24
   1c8d8:	b	1c568 <argp_parse@@Base+0x306c>
   1c8dc:	ldr	r3, [sp, #100]	; 0x64
   1c8e0:	cmp	r3, #0
   1c8e4:	bne	1c8fc <argp_parse@@Base+0x3400>
   1c8e8:	ldr	r3, [sl, #12]
   1c8ec:	mov	r0, #63	; 0x3f
   1c8f0:	ldr	r2, [sp, #96]	; 0x60
   1c8f4:	str	r3, [r2, #8]
   1c8f8:	b	1c640 <argp_parse@@Base+0x3144>
   1c8fc:	ldr	ip, [sl]
   1c900:	movw	r0, #1576	; 0x628
   1c904:	movt	r0, #3
   1c908:	movw	r1, #61248	; 0xef40
   1c90c:	movt	r1, #1
   1c910:	ldr	r3, [sp, #20]
   1c914:	ldr	r0, [r0]
   1c918:	ldr	r2, [r3]
   1c91c:	str	ip, [sp]
   1c920:	ldr	r3, [sp, #104]	; 0x68
   1c924:	bl	112ec <fprintf@plt>
   1c928:	b	1c8e8 <argp_parse@@Base+0x33ec>
   1c92c:	mvn	r0, #0
   1c930:	b	1c640 <argp_parse@@Base+0x3144>
   1c934:	ldr	r0, [sp, #24]
   1c938:	bl	1b920 <argp_parse@@Base+0x2424>
   1c93c:	subs	r4, r0, #0
   1c940:	beq	1cad8 <argp_parse@@Base+0x35dc>
   1c944:	ldr	r2, [sp, #24]
   1c948:	ldr	r1, [sp, #40]	; 0x28
   1c94c:	bl	11328 <memset@plt>
   1c950:	mov	r3, #1
   1c954:	mov	r2, #1
   1c958:	str	r3, [sp, #44]	; 0x2c
   1c95c:	ldr	r3, [sp, #36]	; 0x24
   1c960:	strb	r2, [r4, r3]
   1c964:	b	1c744 <argp_parse@@Base+0x3248>
   1c968:	ldr	r0, [sp, #24]
   1c96c:	bl	1b920 <argp_parse@@Base+0x2424>
   1c970:	subs	r4, r0, #0
   1c974:	mov	r3, #1
   1c978:	streq	r3, [sp, #40]	; 0x28
   1c97c:	beq	1c568 <argp_parse@@Base+0x306c>
   1c980:	ldr	r2, [sp, #24]
   1c984:	str	r3, [sp, #44]	; 0x2c
   1c988:	ldr	r1, [sp, #40]	; 0x28
   1c98c:	bl	11328 <memset@plt>
   1c990:	ldr	r3, [sp, #36]	; 0x24
   1c994:	strb	fp, [r4, r3]
   1c998:	b	1c564 <argp_parse@@Base+0x3068>
   1c99c:	ldr	r3, [sp, #100]	; 0x64
   1c9a0:	cmp	r3, #0
   1c9a4:	bne	1caa8 <argp_parse@@Base+0x35ac>
   1c9a8:	ldr	r3, [sl, #12]
   1c9ac:	ldr	r2, [sp, #96]	; 0x60
   1c9b0:	str	r3, [r2, #8]
   1c9b4:	ldr	r3, [sp, #28]
   1c9b8:	ldrb	r3, [r3]
   1c9bc:	cmp	r3, #58	; 0x3a
   1c9c0:	moveq	r0, #58	; 0x3a
   1c9c4:	movne	r0, #63	; 0x3f
   1c9c8:	b	1c640 <argp_parse@@Base+0x3144>
   1c9cc:	ldr	r2, [r4, #8]
   1c9d0:	ldr	r3, [sl, #8]
   1c9d4:	cmp	r2, r3
   1c9d8:	bne	1c790 <argp_parse@@Base+0x3294>
   1c9dc:	ldr	r2, [r4, #12]
   1c9e0:	ldr	r3, [sl, #12]
   1c9e4:	cmp	r2, r3
   1c9e8:	movne	r6, #1
   1c9ec:	b	1c794 <argp_parse@@Base+0x3298>
   1c9f0:	ldr	r2, [r5, #8]
   1c9f4:	ldr	r1, [sl, #8]
   1c9f8:	cmp	r1, r2
   1c9fc:	bne	1c550 <argp_parse@@Base+0x3054>
   1ca00:	ldr	r2, [r5, #12]
   1ca04:	ldr	r1, [sl, #12]
   1ca08:	cmp	r1, r2
   1ca0c:	bne	1c550 <argp_parse@@Base+0x3054>
   1ca10:	b	1c568 <argp_parse@@Base+0x306c>
   1ca14:	bl	113d0 <flockfile@plt>
   1ca18:	ldr	r2, [sp, #20]
   1ca1c:	movw	r1, #61160	; 0xeee8
   1ca20:	movt	r1, #1
   1ca24:	movw	r7, #61208	; 0xef18
   1ca28:	movt	r7, #1
   1ca2c:	ldr	r3, [sp, #96]	; 0x60
   1ca30:	add	r6, r4, r6
   1ca34:	sub	r8, r4, #1
   1ca38:	ldr	r2, [r2]
   1ca3c:	ldr	r0, [r3, #20]
   1ca40:	ldr	r3, [sp, #104]	; 0x68
   1ca44:	str	r0, [sp]
   1ca48:	ldr	r0, [r5]
   1ca4c:	bl	112ec <fprintf@plt>
   1ca50:	ldr	r0, [r5]
   1ca54:	ldr	sl, [sp, #8]
   1ca58:	ldr	r9, [sp, #40]	; 0x28
   1ca5c:	b	1ca6c <argp_parse@@Base+0x3570>
   1ca60:	cmp	r6, r8
   1ca64:	add	r9, r9, #1
   1ca68:	beq	1ca90 <argp_parse@@Base+0x3594>
   1ca6c:	ldrb	r3, [r8, #1]!
   1ca70:	cmp	r3, #0
   1ca74:	beq	1ca60 <argp_parse@@Base+0x3564>
   1ca78:	mov	r1, r7
   1ca7c:	ldr	r3, [sl, r9, lsl #4]
   1ca80:	ldr	r2, [sp, #104]	; 0x68
   1ca84:	bl	112ec <fprintf@plt>
   1ca88:	ldr	r0, [r5]
   1ca8c:	b	1ca60 <argp_parse@@Base+0x3564>
   1ca90:	mov	r1, r0
   1ca94:	mov	r0, #10
   1ca98:	bl	113a0 <fputc@plt>
   1ca9c:	ldr	r0, [r5]
   1caa0:	bl	11214 <funlockfile@plt>
   1caa4:	b	1c84c <argp_parse@@Base+0x3350>
   1caa8:	ldr	ip, [sl]
   1caac:	movw	r0, #1576	; 0x628
   1cab0:	movt	r0, #3
   1cab4:	movw	r1, #61296	; 0xef70
   1cab8:	movt	r1, #1
   1cabc:	ldr	r3, [sp, #20]
   1cac0:	ldr	r0, [r0]
   1cac4:	ldr	r2, [r3]
   1cac8:	str	ip, [sp]
   1cacc:	ldr	r3, [sp, #104]	; 0x68
   1cad0:	bl	112ec <fprintf@plt>
   1cad4:	b	1c9a8 <argp_parse@@Base+0x34ac>
   1cad8:	mov	r3, #1
   1cadc:	str	r3, [sp, #40]	; 0x28
   1cae0:	b	1c74c <argp_parse@@Base+0x3250>
   1cae4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1cae8:	subs	r5, r0, #0
   1caec:	strd	r6, [sp, #8]
   1caf0:	strd	r8, [sp, #16]
   1caf4:	strd	sl, [sp, #24]
   1caf8:	str	lr, [sp, #32]
   1cafc:	sub	sp, sp, #36	; 0x24
   1cb00:	ldr	r4, [sp, #80]	; 0x50
   1cb04:	ldr	r7, [r4, #4]
   1cb08:	ble	1ccfc <argp_parse@@Base+0x3800>
   1cb0c:	mov	r6, r2
   1cb10:	mov	sl, r3
   1cb14:	ldr	r2, [r4]
   1cb18:	mov	r3, #0
   1cb1c:	mov	r9, r1
   1cb20:	str	r3, [r4, #12]
   1cb24:	cmp	r2, r3
   1cb28:	beq	1cda4 <argp_parse@@Base+0x38a8>
   1cb2c:	ldr	r3, [r4, #16]
   1cb30:	cmp	r3, #0
   1cb34:	bne	1ccc8 <argp_parse@@Base+0x37cc>
   1cb38:	mov	r3, #0
   1cb3c:	str	r3, [r4, #20]
   1cb40:	str	r2, [r4, #28]
   1cb44:	str	r2, [r4, #32]
   1cb48:	ldrb	r2, [r6]
   1cb4c:	cmp	r2, #45	; 0x2d
   1cb50:	moveq	r2, #2
   1cb54:	addeq	r6, r6, #1
   1cb58:	streq	r2, [r4, #24]
   1cb5c:	beq	1cb84 <argp_parse@@Base+0x3688>
   1cb60:	cmp	r2, #43	; 0x2b
   1cb64:	addeq	r6, r6, #1
   1cb68:	streq	r3, [r4, #24]
   1cb6c:	beq	1cb84 <argp_parse@@Base+0x3688>
   1cb70:	ldr	r2, [sp, #84]	; 0x54
   1cb74:	cmp	r2, #0
   1cb78:	beq	1ced4 <argp_parse@@Base+0x39d8>
   1cb7c:	mov	r2, #0
   1cb80:	str	r2, [r4, #24]
   1cb84:	mov	r2, #1
   1cb88:	str	r2, [r4, #16]
   1cb8c:	ldrb	r2, [r6]
   1cb90:	cmp	r2, #58	; 0x3a
   1cb94:	moveq	r7, #0
   1cb98:	cmp	r3, #0
   1cb9c:	beq	1cc30 <argp_parse@@Base+0x3734>
   1cba0:	ldrb	r2, [r3]
   1cba4:	cmp	r2, #0
   1cba8:	beq	1cc30 <argp_parse@@Base+0x3734>
   1cbac:	add	fp, r3, #1
   1cbb0:	mov	r0, r6
   1cbb4:	str	r3, [sp, #28]
   1cbb8:	str	fp, [r4, #20]
   1cbbc:	ldrb	r8, [r3]
   1cbc0:	mov	r1, r8
   1cbc4:	str	r8, [sp, #24]
   1cbc8:	bl	112e0 <strchr@plt>
   1cbcc:	ldrd	r2, [sp, #24]
   1cbd0:	ldrb	r1, [r3, #1]
   1cbd4:	cmp	r1, #0
   1cbd8:	bne	1cbe8 <argp_parse@@Base+0x36ec>
   1cbdc:	ldr	r1, [r4]
   1cbe0:	add	r1, r1, #1
   1cbe4:	str	r1, [r4]
   1cbe8:	sub	r1, r8, #58	; 0x3a
   1cbec:	cmp	r0, #0
   1cbf0:	cmpne	r1, #1
   1cbf4:	bls	1cf4c <argp_parse@@Base+0x3a50>
   1cbf8:	ldrb	ip, [r0]
   1cbfc:	ldrb	r1, [r0, #1]
   1cc00:	cmp	ip, #87	; 0x57
   1cc04:	beq	1ce54 <argp_parse@@Base+0x3958>
   1cc08:	cmp	r1, #58	; 0x3a
   1cc0c:	beq	1cef8 <argp_parse@@Base+0x39fc>
   1cc10:	mov	r0, r2
   1cc14:	add	sp, sp, #36	; 0x24
   1cc18:	ldrd	r4, [sp]
   1cc1c:	ldrd	r6, [sp, #8]
   1cc20:	ldrd	r8, [sp, #16]
   1cc24:	ldrd	sl, [sp, #24]
   1cc28:	add	sp, sp, #32
   1cc2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cc30:	ldr	r8, [r4]
   1cc34:	ldr	r2, [r4, #28]
   1cc38:	ldr	r3, [r4, #32]
   1cc3c:	cmp	r3, r8
   1cc40:	ldr	r3, [r4, #24]
   1cc44:	strgt	r8, [r4, #32]
   1cc48:	cmp	r8, r2
   1cc4c:	movlt	r2, r8
   1cc50:	strlt	r8, [r4, #28]
   1cc54:	cmp	r3, #1
   1cc58:	beq	1cd04 <argp_parse@@Base+0x3808>
   1cc5c:	cmp	r5, r8
   1cc60:	beq	1cce4 <argp_parse@@Base+0x37e8>
   1cc64:	ldr	r3, [r9, r8, lsl #2]
   1cc68:	movw	fp, #59932	; 0xea1c
   1cc6c:	movt	fp, #1
   1cc70:	mov	r1, fp
   1cc74:	mov	r0, r3
   1cc78:	str	r3, [sp, #24]
   1cc7c:	bl	110f4 <strcmp@plt>
   1cc80:	cmp	r0, #0
   1cc84:	ldr	r3, [sp, #24]
   1cc88:	bne	1cd78 <argp_parse@@Base+0x387c>
   1cc8c:	ldr	r3, [r4, #28]
   1cc90:	add	r8, r8, #1
   1cc94:	ldr	r2, [r4, #32]
   1cc98:	str	r8, [r4]
   1cc9c:	cmp	r3, r2
   1cca0:	beq	1cf60 <argp_parse@@Base+0x3a64>
   1cca4:	cmp	r8, r2
   1cca8:	beq	1ccbc <argp_parse@@Base+0x37c0>
   1ccac:	mov	r0, r9
   1ccb0:	mov	r1, r4
   1ccb4:	bl	1c1a4 <argp_parse@@Base+0x2ca8>
   1ccb8:	ldr	r3, [r4, #28]
   1ccbc:	str	r5, [r4]
   1ccc0:	str	r5, [r4, #32]
   1ccc4:	b	1ccec <argp_parse@@Base+0x37f0>
   1ccc8:	ldrb	r2, [r6]
   1cccc:	ldr	r3, [r4, #20]
   1ccd0:	sub	r1, r2, #43	; 0x2b
   1ccd4:	tst	r1, #253	; 0xfd
   1ccd8:	ldrbeq	r2, [r6, #1]
   1ccdc:	addeq	r6, r6, #1
   1cce0:	b	1cb90 <argp_parse@@Base+0x3694>
   1cce4:	ldr	r3, [r4, #28]
   1cce8:	ldr	r5, [r4, #32]
   1ccec:	cmp	r5, r3
   1ccf0:	mvnne	r2, #0
   1ccf4:	strne	r3, [r4]
   1ccf8:	bne	1cc10 <argp_parse@@Base+0x3714>
   1ccfc:	mvn	r2, #0
   1cd00:	b	1cc10 <argp_parse@@Base+0x3714>
   1cd04:	ldr	r3, [r4, #32]
   1cd08:	cmp	r3, r2
   1cd0c:	beq	1cf38 <argp_parse@@Base+0x3a3c>
   1cd10:	cmp	r8, r3
   1cd14:	beq	1cd28 <argp_parse@@Base+0x382c>
   1cd18:	mov	r1, r4
   1cd1c:	mov	r0, r9
   1cd20:	bl	1c1a4 <argp_parse@@Base+0x2ca8>
   1cd24:	ldr	r3, [r4]
   1cd28:	cmp	r5, r3
   1cd2c:	ble	1cd64 <argp_parse@@Base+0x3868>
   1cd30:	add	r1, r9, r3, lsl #2
   1cd34:	b	1cd48 <argp_parse@@Base+0x384c>
   1cd38:	add	r3, r3, #1
   1cd3c:	cmp	r3, r5
   1cd40:	str	r3, [r4]
   1cd44:	beq	1cd64 <argp_parse@@Base+0x3868>
   1cd48:	ldr	r2, [r1], #4
   1cd4c:	ldrb	r0, [r2]
   1cd50:	cmp	r0, #45	; 0x2d
   1cd54:	bne	1cd38 <argp_parse@@Base+0x383c>
   1cd58:	ldrb	r2, [r2, #1]
   1cd5c:	cmp	r2, #0
   1cd60:	beq	1cd38 <argp_parse@@Base+0x383c>
   1cd64:	mov	r8, r3
   1cd68:	str	r3, [r4, #32]
   1cd6c:	cmp	r5, r8
   1cd70:	bne	1cc64 <argp_parse@@Base+0x3768>
   1cd74:	b	1cce4 <argp_parse@@Base+0x37e8>
   1cd78:	ldrb	r2, [r3]
   1cd7c:	cmp	r2, #45	; 0x2d
   1cd80:	beq	1cdb4 <argp_parse@@Base+0x38b8>
   1cd84:	ldr	r2, [r4, #24]
   1cd88:	cmp	r2, #0
   1cd8c:	beq	1ccfc <argp_parse@@Base+0x3800>
   1cd90:	add	r8, r8, #1
   1cd94:	mov	r2, #1
   1cd98:	str	r8, [r4]
   1cd9c:	str	r3, [r4, #12]
   1cda0:	b	1cc10 <argp_parse@@Base+0x3714>
   1cda4:	mov	r3, #1
   1cda8:	mov	r2, r3
   1cdac:	str	r3, [r4]
   1cdb0:	b	1cb38 <argp_parse@@Base+0x363c>
   1cdb4:	ldrb	r1, [r3, #1]
   1cdb8:	cmp	r1, #0
   1cdbc:	beq	1cd84 <argp_parse@@Base+0x3888>
   1cdc0:	cmp	sl, #0
   1cdc4:	beq	1ce4c <argp_parse@@Base+0x3950>
   1cdc8:	cmp	r1, #45	; 0x2d
   1cdcc:	beq	1cfe4 <argp_parse@@Base+0x3ae8>
   1cdd0:	ldr	r2, [sp, #76]	; 0x4c
   1cdd4:	cmp	r2, #0
   1cdd8:	beq	1ce4c <argp_parse@@Base+0x3950>
   1cddc:	ldrb	r2, [r3, #2]
   1cde0:	cmp	r2, #0
   1cde4:	bne	1ce00 <argp_parse@@Base+0x3904>
   1cde8:	mov	r0, r6
   1cdec:	str	r3, [sp, #24]
   1cdf0:	bl	112e0 <strchr@plt>
   1cdf4:	cmp	r0, #0
   1cdf8:	ldr	r3, [sp, #24]
   1cdfc:	bne	1ce4c <argp_parse@@Base+0x3950>
   1ce00:	ldr	r2, [sp, #72]	; 0x48
   1ce04:	add	ip, r3, #1
   1ce08:	movw	r0, #61352	; 0xefa8
   1ce0c:	movt	r0, #1
   1ce10:	mov	r3, sl
   1ce14:	ldr	r1, [sp, #76]	; 0x4c
   1ce18:	str	r2, [sp]
   1ce1c:	mov	r2, r6
   1ce20:	str	r0, [sp, #16]
   1ce24:	mov	r0, r5
   1ce28:	stmib	sp, {r1, r4, r7}
   1ce2c:	mov	r1, r9
   1ce30:	str	ip, [r4, #20]
   1ce34:	bl	1c40c <argp_parse@@Base+0x2f10>
   1ce38:	cmn	r0, #1
   1ce3c:	mov	r2, r0
   1ce40:	bne	1cc10 <argp_parse@@Base+0x3714>
   1ce44:	ldr	r3, [r4]
   1ce48:	ldr	r3, [r9, r3, lsl #2]
   1ce4c:	add	r3, r3, #1
   1ce50:	b	1cbac <argp_parse@@Base+0x36b0>
   1ce54:	sub	ip, r1, #59	; 0x3b
   1ce58:	cmp	sl, #0
   1ce5c:	clz	ip, ip
   1ce60:	lsr	ip, ip, #5
   1ce64:	moveq	ip, #0
   1ce68:	cmp	ip, #0
   1ce6c:	beq	1cc08 <argp_parse@@Base+0x370c>
   1ce70:	ldrb	r3, [r3, #1]
   1ce74:	cmp	r3, #0
   1ce78:	bne	1ce8c <argp_parse@@Base+0x3990>
   1ce7c:	ldr	r3, [r4]
   1ce80:	cmp	r3, r5
   1ce84:	beq	1d018 <argp_parse@@Base+0x3b1c>
   1ce88:	ldr	fp, [r9, r3, lsl #2]
   1ce8c:	mov	lr, #0
   1ce90:	movw	ip, #61428	; 0xeff4
   1ce94:	movt	ip, #1
   1ce98:	ldr	r3, [sp, #72]	; 0x48
   1ce9c:	mov	r2, r6
   1cea0:	mov	r1, r9
   1cea4:	mov	r0, r5
   1cea8:	str	r3, [sp]
   1ceac:	mov	r3, sl
   1ceb0:	str	r4, [sp, #8]
   1ceb4:	str	r7, [sp, #12]
   1ceb8:	str	ip, [sp, #16]
   1cebc:	str	fp, [r4, #20]
   1cec0:	str	lr, [sp, #4]
   1cec4:	str	lr, [r4, #12]
   1cec8:	bl	1c40c <argp_parse@@Base+0x2f10>
   1cecc:	mov	r2, r0
   1ced0:	b	1cc10 <argp_parse@@Base+0x3714>
   1ced4:	movw	r0, #61336	; 0xef98
   1ced8:	movt	r0, #1
   1cedc:	bl	11244 <getenv@plt>
   1cee0:	cmp	r0, #0
   1cee4:	ldr	r3, [r4, #20]
   1cee8:	bne	1cb7c <argp_parse@@Base+0x3680>
   1ceec:	mov	r2, #1
   1cef0:	str	r2, [r4, #24]
   1cef4:	b	1cb84 <argp_parse@@Base+0x3688>
   1cef8:	ldrb	r1, [r0, #2]
   1cefc:	ldrb	r3, [r3, #1]
   1cf00:	cmp	r1, #58	; 0x3a
   1cf04:	beq	1cfa0 <argp_parse@@Base+0x3aa4>
   1cf08:	cmp	r3, #0
   1cf0c:	ldr	r3, [r4]
   1cf10:	bne	1cf6c <argp_parse@@Base+0x3a70>
   1cf14:	cmp	r5, r3
   1cf18:	beq	1cfc4 <argp_parse@@Base+0x3ac8>
   1cf1c:	ldr	r1, [r9, r3, lsl #2]
   1cf20:	add	r3, r3, #1
   1cf24:	str	r3, [r4]
   1cf28:	str	r1, [r4, #12]
   1cf2c:	mov	r3, #0
   1cf30:	str	r3, [r4, #20]
   1cf34:	b	1cc10 <argp_parse@@Base+0x3714>
   1cf38:	cmp	r8, r2
   1cf3c:	movne	r3, r8
   1cf40:	moveq	r3, r2
   1cf44:	strne	r8, [r4, #28]
   1cf48:	b	1cd28 <argp_parse@@Base+0x382c>
   1cf4c:	cmp	r7, #0
   1cf50:	bne	1cf7c <argp_parse@@Base+0x3a80>
   1cf54:	mov	r2, #63	; 0x3f
   1cf58:	str	r8, [r4, #8]
   1cf5c:	b	1cc10 <argp_parse@@Base+0x3714>
   1cf60:	mov	r3, r8
   1cf64:	str	r8, [r4, #28]
   1cf68:	b	1ccbc <argp_parse@@Base+0x37c0>
   1cf6c:	add	r3, r3, #1
   1cf70:	str	r3, [r4]
   1cf74:	str	fp, [r4, #12]
   1cf78:	b	1cf2c <argp_parse@@Base+0x3a30>
   1cf7c:	movw	r0, #1576	; 0x628
   1cf80:	movt	r0, #3
   1cf84:	ldr	r2, [r9]
   1cf88:	movw	r1, #61356	; 0xefac
   1cf8c:	movt	r1, #1
   1cf90:	mov	r3, r8
   1cf94:	ldr	r0, [r0]
   1cf98:	bl	112ec <fprintf@plt>
   1cf9c:	b	1cf54 <argp_parse@@Base+0x3a58>
   1cfa0:	cmp	r3, #0
   1cfa4:	ldrne	r3, [r4]
   1cfa8:	moveq	fp, r3
   1cfac:	str	fp, [r4, #12]
   1cfb0:	addne	r3, r3, #1
   1cfb4:	strne	r3, [r4]
   1cfb8:	mov	r3, #0
   1cfbc:	str	r3, [r4, #20]
   1cfc0:	b	1cc10 <argp_parse@@Base+0x3714>
   1cfc4:	cmp	r7, #0
   1cfc8:	bne	1d038 <argp_parse@@Base+0x3b3c>
   1cfcc:	str	r8, [r4, #8]
   1cfd0:	ldrb	r3, [r6]
   1cfd4:	cmp	r3, #58	; 0x3a
   1cfd8:	moveq	r2, #58	; 0x3a
   1cfdc:	movne	r2, #63	; 0x3f
   1cfe0:	b	1cf2c <argp_parse@@Base+0x3a30>
   1cfe4:	ldr	r2, [sp, #72]	; 0x48
   1cfe8:	add	ip, r3, #2
   1cfec:	mov	r1, r9
   1cff0:	mov	r3, sl
   1cff4:	ldr	r0, [sp, #76]	; 0x4c
   1cff8:	str	r2, [sp]
   1cffc:	mov	r2, r6
   1d000:	stmib	sp, {r0, r4, r7, fp}
   1d004:	mov	r0, r5
   1d008:	str	ip, [r4, #20]
   1d00c:	bl	1c40c <argp_parse@@Base+0x2f10>
   1d010:	mov	r2, r0
   1d014:	b	1cc10 <argp_parse@@Base+0x3714>
   1d018:	cmp	r7, #0
   1d01c:	bne	1d05c <argp_parse@@Base+0x3b60>
   1d020:	str	r8, [r4, #8]
   1d024:	ldrb	r3, [r6]
   1d028:	cmp	r3, #58	; 0x3a
   1d02c:	moveq	r2, #58	; 0x3a
   1d030:	movne	r2, #63	; 0x3f
   1d034:	b	1cc10 <argp_parse@@Base+0x3714>
   1d038:	movw	r0, #1576	; 0x628
   1d03c:	movt	r0, #3
   1d040:	ldr	r2, [r9]
   1d044:	movw	r1, #61384	; 0xefc8
   1d048:	movt	r1, #1
   1d04c:	mov	r3, r8
   1d050:	ldr	r0, [r0]
   1d054:	bl	112ec <fprintf@plt>
   1d058:	b	1cfcc <argp_parse@@Base+0x3ad0>
   1d05c:	movw	r0, #1576	; 0x628
   1d060:	movt	r0, #3
   1d064:	ldr	r2, [r9]
   1d068:	movw	r1, #61384	; 0xefc8
   1d06c:	movt	r1, #1
   1d070:	mov	r3, r8
   1d074:	ldr	r0, [r0]
   1d078:	bl	112ec <fprintf@plt>
   1d07c:	b	1d020 <argp_parse@@Base+0x3b24>
   1d080:	strd	r4, [sp, #-16]!
   1d084:	movw	r5, #1552	; 0x610
   1d088:	movt	r5, #3
   1d08c:	str	r6, [sp, #8]
   1d090:	movw	r4, #1692	; 0x69c
   1d094:	movt	r4, #3
   1d098:	str	lr, [sp, #12]
   1d09c:	sub	sp, sp, #16
   1d0a0:	ldr	lr, [sp, #32]
   1d0a4:	ldr	ip, [r5]
   1d0a8:	ldr	r6, [sp, #36]	; 0x24
   1d0ac:	str	lr, [sp]
   1d0b0:	ldr	lr, [sp, #40]	; 0x28
   1d0b4:	str	ip, [r4]
   1d0b8:	ldr	ip, [r5, #4]
   1d0bc:	str	r6, [sp, #4]
   1d0c0:	str	r4, [sp, #8]
   1d0c4:	str	lr, [sp, #12]
   1d0c8:	str	ip, [r4, #4]
   1d0cc:	bl	1cae4 <argp_parse@@Base+0x35e8>
   1d0d0:	ldr	ip, [r4]
   1d0d4:	movw	r3, #1764	; 0x6e4
   1d0d8:	movt	r3, #3
   1d0dc:	ldr	r1, [r4, #8]
   1d0e0:	ldr	r2, [r4, #12]
   1d0e4:	str	ip, [r5]
   1d0e8:	str	r1, [r5, #8]
   1d0ec:	str	r2, [r3]
   1d0f0:	add	sp, sp, #16
   1d0f4:	ldrd	r4, [sp]
   1d0f8:	ldr	r6, [sp, #8]
   1d0fc:	add	sp, sp, #12
   1d100:	pop	{pc}		; (ldr pc, [sp], #4)
   1d104:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d108:	movw	r4, #1692	; 0x69c
   1d10c:	movt	r4, #3
   1d110:	strd	r6, [sp, #8]
   1d114:	movw	r6, #1552	; 0x610
   1d118:	movt	r6, #3
   1d11c:	strd	r8, [sp, #16]
   1d120:	subs	r9, r0, #0
   1d124:	strd	sl, [sp, #24]
   1d128:	ldm	r6, {r5, sl}
   1d12c:	str	lr, [sp, #32]
   1d130:	sub	sp, sp, #20
   1d134:	str	r1, [sp, #4]
   1d138:	stm	r4, {r5, sl}
   1d13c:	ble	1d510 <argp_parse@@Base+0x4014>
   1d140:	mov	r3, #0
   1d144:	mov	r8, r2
   1d148:	cmp	r5, r3
   1d14c:	str	r3, [r4, #12]
   1d150:	beq	1d220 <argp_parse@@Base+0x3d24>
   1d154:	ldr	r3, [r4, #16]
   1d158:	cmp	r3, #0
   1d15c:	beq	1d22c <argp_parse@@Base+0x3d30>
   1d160:	ldrb	r3, [r2]
   1d164:	sub	r2, r3, #43	; 0x2b
   1d168:	tst	r2, #253	; 0xfd
   1d16c:	ldrbeq	r3, [r8, #1]
   1d170:	addeq	r8, r8, #1
   1d174:	cmp	r3, #58	; 0x3a
   1d178:	ldr	r3, [r4, #20]
   1d17c:	moveq	sl, #0
   1d180:	cmp	r3, #0
   1d184:	beq	1d26c <argp_parse@@Base+0x3d70>
   1d188:	ldrb	r2, [r3]
   1d18c:	cmp	r2, #0
   1d190:	beq	1d26c <argp_parse@@Base+0x3d70>
   1d194:	add	r7, r3, #1
   1d198:	mov	r0, r8
   1d19c:	str	r3, [sp, #12]
   1d1a0:	str	r7, [r4, #20]
   1d1a4:	ldrb	fp, [r3]
   1d1a8:	mov	r1, fp
   1d1ac:	str	fp, [sp, #8]
   1d1b0:	bl	112e0 <strchr@plt>
   1d1b4:	ldrd	r2, [sp, #8]
   1d1b8:	ldrb	r1, [r3, #1]
   1d1bc:	cmp	r1, #0
   1d1c0:	sub	r1, fp, #58	; 0x3a
   1d1c4:	addeq	r5, r5, #1
   1d1c8:	streq	r5, [r4]
   1d1cc:	cmp	r0, #0
   1d1d0:	cmpne	r1, #1
   1d1d4:	bls	1d438 <argp_parse@@Base+0x3f3c>
   1d1d8:	ldrb	r1, [r0, #1]
   1d1dc:	cmp	r1, #58	; 0x3a
   1d1e0:	beq	1d454 <argp_parse@@Base+0x3f58>
   1d1e4:	ldr	r1, [r4, #8]
   1d1e8:	ldr	r7, [r4, #12]
   1d1ec:	mov	r0, r2
   1d1f0:	movw	r3, #1764	; 0x6e4
   1d1f4:	movt	r3, #3
   1d1f8:	str	r5, [r6]
   1d1fc:	str	r1, [r6, #8]
   1d200:	str	r7, [r3]
   1d204:	add	sp, sp, #20
   1d208:	ldrd	r4, [sp]
   1d20c:	ldrd	r6, [sp, #8]
   1d210:	ldrd	r8, [sp, #16]
   1d214:	ldrd	sl, [sp, #24]
   1d218:	add	sp, sp, #32
   1d21c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d220:	mov	r3, #1
   1d224:	mov	r5, r3
   1d228:	str	r3, [r4]
   1d22c:	mov	r3, #0
   1d230:	str	r3, [r4, #20]
   1d234:	str	r5, [r4, #28]
   1d238:	str	r5, [r4, #32]
   1d23c:	ldrb	r2, [r8]
   1d240:	cmp	r2, #45	; 0x2d
   1d244:	beq	1d314 <argp_parse@@Base+0x3e18>
   1d248:	cmp	r2, #43	; 0x2b
   1d24c:	mov	r1, r3
   1d250:	str	r3, [r4, #24]
   1d254:	addeq	r8, r8, #1
   1d258:	mov	r3, #1
   1d25c:	str	r3, [r4, #16]
   1d260:	ldrb	r3, [r8]
   1d264:	cmp	r3, #58	; 0x3a
   1d268:	beq	1d358 <argp_parse@@Base+0x3e5c>
   1d26c:	mov	r2, r5
   1d270:	ldr	r1, [r4, #24]
   1d274:	ldr	r3, [r4, #32]
   1d278:	ldr	r0, [r4, #28]
   1d27c:	cmp	r3, r5
   1d280:	movgt	r3, r5
   1d284:	strgt	r5, [r4, #32]
   1d288:	cmp	r5, r0
   1d28c:	movge	r5, r0
   1d290:	strlt	r5, [r4, #28]
   1d294:	cmp	r1, #1
   1d298:	beq	1d36c <argp_parse@@Base+0x3e70>
   1d29c:	cmp	r9, r2
   1d2a0:	beq	1d3e0 <argp_parse@@Base+0x3ee4>
   1d2a4:	ldr	fp, [sp, #4]
   1d2a8:	movw	r1, #59932	; 0xea1c
   1d2ac:	movt	r1, #1
   1d2b0:	strd	r2, [sp, #8]
   1d2b4:	ldr	r7, [fp, r2, lsl #2]
   1d2b8:	mov	r0, r7
   1d2bc:	bl	110f4 <strcmp@plt>
   1d2c0:	cmp	r0, #0
   1d2c4:	ldr	r2, [sp, #8]
   1d2c8:	bne	1d328 <argp_parse@@Base+0x3e2c>
   1d2cc:	ldr	r3, [sp, #12]
   1d2d0:	add	r2, r2, #1
   1d2d4:	ldr	r5, [r4, #28]
   1d2d8:	str	r2, [r4]
   1d2dc:	cmp	r5, r3
   1d2e0:	beq	1d49c <argp_parse@@Base+0x3fa0>
   1d2e4:	cmp	r2, r3
   1d2e8:	beq	1d300 <argp_parse@@Base+0x3e04>
   1d2ec:	mov	r0, fp
   1d2f0:	movw	r1, #1692	; 0x69c
   1d2f4:	movt	r1, #3
   1d2f8:	bl	1c1a4 <argp_parse@@Base+0x2ca8>
   1d2fc:	ldr	r5, [r4, #28]
   1d300:	mov	r2, r9
   1d304:	mov	r3, r9
   1d308:	str	r9, [r4]
   1d30c:	str	r9, [r4, #32]
   1d310:	b	1d3e4 <argp_parse@@Base+0x3ee8>
   1d314:	mov	r3, #2
   1d318:	add	r8, r8, #1
   1d31c:	mov	r1, r3
   1d320:	str	r3, [r4, #24]
   1d324:	b	1d258 <argp_parse@@Base+0x3d5c>
   1d328:	ldrb	r3, [r7]
   1d32c:	cmp	r3, #45	; 0x2d
   1d330:	beq	1d404 <argp_parse@@Base+0x3f08>
   1d334:	ldr	r3, [r4, #24]
   1d338:	cmp	r3, #0
   1d33c:	beq	1d50c <argp_parse@@Base+0x4010>
   1d340:	add	r5, r2, #1
   1d344:	mov	r2, #1
   1d348:	ldr	r1, [r4, #8]
   1d34c:	str	r5, [r4]
   1d350:	str	r7, [r4, #12]
   1d354:	b	1d1ec <argp_parse@@Base+0x3cf0>
   1d358:	cmp	r1, #1
   1d35c:	mov	r3, r5
   1d360:	mov	r2, r5
   1d364:	mov	sl, #0
   1d368:	bne	1d29c <argp_parse@@Base+0x3da0>
   1d36c:	cmp	r5, r3
   1d370:	beq	1d41c <argp_parse@@Base+0x3f20>
   1d374:	cmp	r2, r3
   1d378:	beq	1d390 <argp_parse@@Base+0x3e94>
   1d37c:	movw	r1, #1692	; 0x69c
   1d380:	movt	r1, #3
   1d384:	ldr	r0, [sp, #4]
   1d388:	bl	1c1a4 <argp_parse@@Base+0x2ca8>
   1d38c:	ldr	r3, [r4]
   1d390:	cmp	r9, r3
   1d394:	ble	1d3d0 <argp_parse@@Base+0x3ed4>
   1d398:	ldr	r2, [sp, #4]
   1d39c:	add	r1, r2, r3, lsl #2
   1d3a0:	b	1d3b4 <argp_parse@@Base+0x3eb8>
   1d3a4:	add	r3, r3, #1
   1d3a8:	cmp	r9, r3
   1d3ac:	str	r3, [r4]
   1d3b0:	beq	1d430 <argp_parse@@Base+0x3f34>
   1d3b4:	ldr	r2, [r1], #4
   1d3b8:	ldrb	r0, [r2]
   1d3bc:	cmp	r0, #45	; 0x2d
   1d3c0:	bne	1d3a4 <argp_parse@@Base+0x3ea8>
   1d3c4:	ldrb	r2, [r2, #1]
   1d3c8:	cmp	r2, #0
   1d3cc:	beq	1d3a4 <argp_parse@@Base+0x3ea8>
   1d3d0:	mov	r2, r3
   1d3d4:	cmp	r9, r2
   1d3d8:	str	r3, [r4, #32]
   1d3dc:	bne	1d2a4 <argp_parse@@Base+0x3da8>
   1d3e0:	ldr	r5, [r4, #28]
   1d3e4:	cmp	r3, r5
   1d3e8:	moveq	r5, r2
   1d3ec:	mvnne	r2, #0
   1d3f0:	ldr	r1, [r4, #8]
   1d3f4:	strne	r5, [r4]
   1d3f8:	mvneq	r2, #0
   1d3fc:	ldr	r7, [r4, #12]
   1d400:	b	1d1ec <argp_parse@@Base+0x3cf0>
   1d404:	ldrb	r3, [r7, #1]
   1d408:	cmp	r3, #0
   1d40c:	beq	1d334 <argp_parse@@Base+0x3e38>
   1d410:	add	r3, r7, #1
   1d414:	mov	r5, r2
   1d418:	b	1d194 <argp_parse@@Base+0x3c98>
   1d41c:	cmp	r2, r3
   1d420:	beq	1d390 <argp_parse@@Base+0x3e94>
   1d424:	mov	r3, r2
   1d428:	str	r2, [r4, #28]
   1d42c:	b	1d390 <argp_parse@@Base+0x3e94>
   1d430:	mov	r2, r9
   1d434:	b	1d3d4 <argp_parse@@Base+0x3ed8>
   1d438:	cmp	sl, #0
   1d43c:	bne	1d4bc <argp_parse@@Base+0x3fc0>
   1d440:	mov	r1, fp
   1d444:	mov	r2, #63	; 0x3f
   1d448:	str	fp, [r4, #8]
   1d44c:	ldr	r7, [r4, #12]
   1d450:	b	1d1ec <argp_parse@@Base+0x3cf0>
   1d454:	ldrb	r1, [r0, #2]
   1d458:	ldrb	r3, [r3, #1]
   1d45c:	cmp	r1, #58	; 0x3a
   1d460:	beq	1d4e8 <argp_parse@@Base+0x3fec>
   1d464:	cmp	r3, #0
   1d468:	bne	1d4a8 <argp_parse@@Base+0x3fac>
   1d46c:	cmp	r9, r5
   1d470:	beq	1d518 <argp_parse@@Base+0x401c>
   1d474:	ldr	r3, [sp, #4]
   1d478:	ldr	r1, [r4, #8]
   1d47c:	ldr	r7, [r3, r5, lsl #2]
   1d480:	add	r3, r5, #1
   1d484:	mov	r5, r3
   1d488:	str	r3, [r4]
   1d48c:	str	r7, [r4, #12]
   1d490:	mov	r3, #0
   1d494:	str	r3, [r4, #20]
   1d498:	b	1d1ec <argp_parse@@Base+0x3cf0>
   1d49c:	mov	r5, r2
   1d4a0:	str	r2, [r4, #28]
   1d4a4:	b	1d300 <argp_parse@@Base+0x3e04>
   1d4a8:	add	r5, r5, #1
   1d4ac:	ldr	r1, [r4, #8]
   1d4b0:	str	r5, [r4]
   1d4b4:	str	r7, [r4, #12]
   1d4b8:	b	1d490 <argp_parse@@Base+0x3f94>
   1d4bc:	ldr	r3, [sp, #4]
   1d4c0:	movw	r0, #1576	; 0x628
   1d4c4:	movt	r0, #3
   1d4c8:	movw	r1, #61356	; 0xefac
   1d4cc:	movt	r1, #1
   1d4d0:	ldr	r0, [r0]
   1d4d4:	ldr	r2, [r3]
   1d4d8:	mov	r3, fp
   1d4dc:	bl	112ec <fprintf@plt>
   1d4e0:	ldr	r5, [r4]
   1d4e4:	b	1d440 <argp_parse@@Base+0x3f44>
   1d4e8:	cmp	r3, #0
   1d4ec:	ldr	r1, [r4, #8]
   1d4f0:	moveq	r7, r3
   1d4f4:	addne	r5, r5, #1
   1d4f8:	mov	r3, #0
   1d4fc:	strne	r5, [r4]
   1d500:	str	r7, [r4, #12]
   1d504:	str	r3, [r4, #20]
   1d508:	b	1d1ec <argp_parse@@Base+0x3cf0>
   1d50c:	mov	r5, r2
   1d510:	mvn	r2, #0
   1d514:	b	1d1e4 <argp_parse@@Base+0x3ce8>
   1d518:	cmp	sl, #0
   1d51c:	bne	1d540 <argp_parse@@Base+0x4044>
   1d520:	str	fp, [r4, #8]
   1d524:	mov	r1, fp
   1d528:	ldrb	r3, [r8]
   1d52c:	ldr	r7, [r4, #12]
   1d530:	cmp	r3, #58	; 0x3a
   1d534:	moveq	r2, #58	; 0x3a
   1d538:	movne	r2, #63	; 0x3f
   1d53c:	b	1d490 <argp_parse@@Base+0x3f94>
   1d540:	ldr	r3, [sp, #4]
   1d544:	movw	r0, #1576	; 0x628
   1d548:	movt	r0, #3
   1d54c:	movw	r1, #61384	; 0xefc8
   1d550:	movt	r1, #1
   1d554:	ldr	r0, [r0]
   1d558:	ldr	r2, [r3]
   1d55c:	mov	r3, fp
   1d560:	bl	112ec <fprintf@plt>
   1d564:	ldr	r5, [r4]
   1d568:	b	1d520 <argp_parse@@Base+0x4024>
   1d56c:	umull	r2, r3, r1, r2
   1d570:	cmp	r3, #0
   1d574:	bne	1d580 <argp_parse@@Base+0x4084>
   1d578:	mov	r1, r2
   1d57c:	b	1b95c <argp_parse@@Base+0x2460>
   1d580:	str	r4, [sp, #-8]!
   1d584:	str	lr, [sp, #4]
   1d588:	bl	112f8 <__errno_location@plt>
   1d58c:	mov	r3, #12
   1d590:	ldr	r4, [sp]
   1d594:	add	sp, sp, #4
   1d598:	str	r3, [r0]
   1d59c:	mov	r0, #0
   1d5a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d5a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d5a8:	mov	r7, r0
   1d5ac:	ldr	r6, [pc, #72]	; 1d5fc <argp_parse@@Base+0x4100>
   1d5b0:	ldr	r5, [pc, #72]	; 1d600 <argp_parse@@Base+0x4104>
   1d5b4:	add	r6, pc, r6
   1d5b8:	add	r5, pc, r5
   1d5bc:	sub	r6, r6, r5
   1d5c0:	mov	r8, r1
   1d5c4:	mov	r9, r2
   1d5c8:	bl	110bc <calloc@plt-0x20>
   1d5cc:	asrs	r6, r6, #2
   1d5d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d5d4:	mov	r4, #0
   1d5d8:	add	r4, r4, #1
   1d5dc:	ldr	r3, [r5], #4
   1d5e0:	mov	r2, r9
   1d5e4:	mov	r1, r8
   1d5e8:	mov	r0, r7
   1d5ec:	blx	r3
   1d5f0:	cmp	r6, r4
   1d5f4:	bne	1d5d8 <argp_parse@@Base+0x40dc>
   1d5f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d5fc:	andeq	r2, r1, r8, asr r9
   1d600:	andeq	r2, r1, r0, asr r9
   1d604:	bx	lr

Disassembly of section .fini:

0001d608 <.fini>:
   1d608:	push	{r3, lr}
   1d60c:	pop	{r3, pc}
