
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

00012f58 <.init>:
   12f58:	push	{r3, lr}
   12f5c:	bl	13044 <_start@@Base+0x3c>
   12f60:	pop	{r3, pc}

Disassembly of section .plt:

00012f64 <strcmp@plt-0x14>:
   12f64:	push	{lr}		; (str lr, [sp, #-4]!)
   12f68:	ldr	lr, [pc, #4]	; 12f74 <strcmp@plt-0x4>
   12f6c:	add	lr, pc, lr
   12f70:	ldr	pc, [lr, #8]!
   12f74:	andeq	r5, r1, ip, lsl #1

00012f78 <strcmp@plt>:
   12f78:	add	ip, pc, #0, 12
   12f7c:	add	ip, ip, #86016	; 0x15000
   12f80:	ldr	pc, [ip, #140]!	; 0x8c

00012f84 <printf@plt>:
   12f84:	add	ip, pc, #0, 12
   12f88:	add	ip, ip, #86016	; 0x15000
   12f8c:	ldr	pc, [ip, #132]!	; 0x84

00012f90 <free@plt>:
   12f90:	add	ip, pc, #0, 12
   12f94:	add	ip, ip, #86016	; 0x15000
   12f98:	ldr	pc, [ip, #124]!	; 0x7c

00012f9c <realloc@plt>:
   12f9c:	add	ip, pc, #0, 12
   12fa0:	add	ip, ip, #86016	; 0x15000
   12fa4:	ldr	pc, [ip, #116]!	; 0x74

00012fa8 <strcpy@plt>:
   12fa8:	add	ip, pc, #0, 12
   12fac:	add	ip, ip, #86016	; 0x15000
   12fb0:	ldr	pc, [ip, #108]!	; 0x6c

00012fb4 <malloc@plt>:
   12fb4:	add	ip, pc, #0, 12
   12fb8:	add	ip, ip, #86016	; 0x15000
   12fbc:	ldr	pc, [ip, #100]!	; 0x64

00012fc0 <__libc_start_main@plt>:
   12fc0:	add	ip, pc, #0, 12
   12fc4:	add	ip, ip, #86016	; 0x15000
   12fc8:	ldr	pc, [ip, #92]!	; 0x5c

00012fcc <__gmon_start__@plt>:
   12fcc:	add	ip, pc, #0, 12
   12fd0:	add	ip, ip, #86016	; 0x15000
   12fd4:	ldr	pc, [ip, #84]!	; 0x54

00012fd8 <strlen@plt>:
   12fd8:	add	ip, pc, #0, 12
   12fdc:	add	ip, ip, #86016	; 0x15000
   12fe0:	ldr	pc, [ip, #76]!	; 0x4c

00012fe4 <snprintf@plt>:
   12fe4:	add	ip, pc, #0, 12
   12fe8:	add	ip, ip, #86016	; 0x15000
   12fec:	ldr	pc, [ip, #68]!	; 0x44

00012ff0 <__isoc99_sscanf@plt>:
   12ff0:	add	ip, pc, #0, 12
   12ff4:	add	ip, ip, #86016	; 0x15000
   12ff8:	ldr	pc, [ip, #60]!	; 0x3c

00012ffc <abort@plt>:
   12ffc:	add	ip, pc, #0, 12
   13000:	add	ip, ip, #86016	; 0x15000
   13004:	ldr	pc, [ip, #52]!	; 0x34

Disassembly of section .text:

00013008 <_start@@Base>:
   13008:	mov	fp, #0
   1300c:	mov	lr, #0
   13010:	pop	{r1}		; (ldr r1, [sp], #4)
   13014:	mov	r2, sp
   13018:	push	{r2}		; (str r2, [sp, #-4]!)
   1301c:	push	{r0}		; (str r0, [sp, #-4]!)
   13020:	ldr	ip, [pc, #16]	; 13038 <_start@@Base+0x30>
   13024:	push	{ip}		; (str ip, [sp, #-4]!)
   13028:	ldr	r0, [pc, #12]	; 1303c <_start@@Base+0x34>
   1302c:	ldr	r3, [pc, #12]	; 13040 <_start@@Base+0x38>
   13030:	bl	12fc0 <__libc_start_main@plt>
   13034:	bl	12ffc <abort@plt>
   13038:	andeq	r7, r1, r8, ror r1
   1303c:	strdeq	r3, [r1], -r8
   13040:	andeq	r7, r1, r8, lsl r1
   13044:	ldr	r3, [pc, #20]	; 13060 <_start@@Base+0x58>
   13048:	ldr	r2, [pc, #20]	; 13064 <_start@@Base+0x5c>
   1304c:	add	r3, pc, r3
   13050:	ldr	r2, [r3, r2]
   13054:	cmp	r2, #0
   13058:	bxeq	lr
   1305c:	b	12fcc <__gmon_start__@plt>
   13060:	andeq	r4, r1, ip, lsr #31
   13064:	andeq	r0, r0, ip, lsr r0
   13068:	ldr	r0, [pc, #24]	; 13088 <_start@@Base+0x80>
   1306c:	ldr	r3, [pc, #24]	; 1308c <_start@@Base+0x84>
   13070:	cmp	r3, r0
   13074:	bxeq	lr
   13078:	ldr	r3, [pc, #16]	; 13090 <_start@@Base+0x88>
   1307c:	cmp	r3, #0
   13080:	bxeq	lr
   13084:	bx	r3
   13088:	andeq	r8, r2, r8, asr #32
   1308c:	andeq	r8, r2, r8, asr #32
   13090:	andeq	r0, r0, r0
   13094:	ldr	r0, [pc, #36]	; 130c0 <_start@@Base+0xb8>
   13098:	ldr	r1, [pc, #36]	; 130c4 <_start@@Base+0xbc>
   1309c:	sub	r1, r1, r0
   130a0:	asr	r1, r1, #2
   130a4:	add	r1, r1, r1, lsr #31
   130a8:	asrs	r1, r1, #1
   130ac:	bxeq	lr
   130b0:	ldr	r3, [pc, #16]	; 130c8 <_start@@Base+0xc0>
   130b4:	cmp	r3, #0
   130b8:	bxeq	lr
   130bc:	bx	r3
   130c0:	andeq	r8, r2, r8, asr #32
   130c4:	andeq	r8, r2, r8, asr #32
   130c8:	andeq	r0, r0, r0
   130cc:	push	{r4, lr}
   130d0:	ldr	r4, [pc, #24]	; 130f0 <_start@@Base+0xe8>
   130d4:	ldrb	r3, [r4]
   130d8:	cmp	r3, #0
   130dc:	popne	{r4, pc}
   130e0:	bl	13068 <_start@@Base+0x60>
   130e4:	mov	r3, #1
   130e8:	strb	r3, [r4]
   130ec:	pop	{r4, pc}
   130f0:	andeq	r8, r2, r8, asr #32
   130f4:	b	13094 <_start@@Base+0x8c>

000130f8 <main@@Base>:
   130f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130fc:	add	fp, sp, #28
   13100:	sub	sp, sp, #4
   13104:	vpush	{d8-d10}
   13108:	sub	sp, sp, #64	; 0x40
   1310c:	add	r5, sp, #8
   13110:	mov	r0, r5
   13114:	bl	1334c <table_init@@Base>
   13118:	movw	r1, #29076	; 0x7194
   1311c:	mov	r0, r5
   13120:	mov	r2, #0
   13124:	mov	r7, #0
   13128:	movt	r1, #1
   1312c:	bl	13db4 <table_add_column@@Base>
   13130:	movw	r1, #29078	; 0x7196
   13134:	mov	sl, r0
   13138:	mov	r0, r5
   1313c:	mov	r2, #16
   13140:	movt	r1, #1
   13144:	bl	13db4 <table_add_column@@Base>
   13148:	vldr	s18, [pc, #424]	; 132f8 <main@@Base+0x200>
   1314c:	movw	r9, #52429	; 0xcccd
   13150:	mov	r8, r0
   13154:	vmov.f32	s20, #80	; 0x3e800000  0.250
   13158:	mov	r4, #0
   1315c:	movt	r9, #52428	; 0xcccc
   13160:	vmov.f32	s16, s18
   13164:	mov	r0, r5
   13168:	bl	15e3c <table_add_row@@Base>
   1316c:	uxtb	r0, r4
   13170:	cmp	r4, #0
   13174:	umull	r1, r2, r0, r9
   13178:	lsr	r1, r2, #3
   1317c:	mov	r2, sl
   13180:	add	r1, r1, r1, lsl #2
   13184:	sub	r0, r0, r1, lsl #1
   13188:	mov	r1, r4
   1318c:	clz	r0, r0
   13190:	movwne	r1, #1
   13194:	lsr	r0, r0, #5
   13198:	and	r6, r1, r0
   1319c:	mov	r0, r5
   131a0:	mov	r1, r4
   131a4:	add	r7, r7, r6
   131a8:	mov	r3, r7
   131ac:	bl	16338 <table_set_int@@Base>
   131b0:	cmp	r6, #0
   131b4:	mov	r0, r5
   131b8:	mov	r1, r4
   131bc:	mov	r2, r8
   131c0:	vseleq.f32	s0, s16, s18
   131c4:	tst	r4, #1
   131c8:	vadd.f32	s2, s0, s20
   131cc:	vseleq.f32	s2, s2, s0
   131d0:	cmp	r4, #0
   131d4:	vseleq.f32	s16, s0, s2
   131d8:	vmov.f32	s0, s16
   131dc:	bl	165e8 <table_set_float@@Base>
   131e0:	add	r4, r4, #1
   131e4:	cmp	r4, #100	; 0x64
   131e8:	bne	13164 <main@@Base+0x6c>
   131ec:	add	r4, sp, #8
   131f0:	mov	r1, sl
   131f4:	mov	r2, #4
   131f8:	mov	r3, #0
   131fc:	mov	r9, #0
   13200:	mov	r0, r4
   13204:	bl	15068 <table_sorted_find_int@@Base>
   13208:	mov	r7, r0
   1320c:	mov	r0, r4
   13210:	mov	r1, sl
   13214:	mov	r2, #4
   13218:	mov	r3, #1
   1321c:	bl	15068 <table_sorted_find_int@@Base>
   13220:	mov	r6, r0
   13224:	cmp	r7, #40	; 0x28
   13228:	beq	13240 <main@@Base+0x148>
   1322c:	movw	r0, #29080	; 0x7198
   13230:	mov	r1, r7
   13234:	movt	r0, #1
   13238:	bl	12f84 <printf@plt>
   1323c:	mvn	r9, #0
   13240:	cmp	r6, #49	; 0x31
   13244:	beq	1325c <main@@Base+0x164>
   13248:	movw	r0, #29136	; 0x71d0
   1324c:	mov	r1, r6
   13250:	movt	r0, #1
   13254:	bl	12f84 <printf@plt>
   13258:	mvn	r9, #0
   1325c:	add	r4, sp, #8
   13260:	vmov.f32	s16, #96	; 0x3f000000  0.5
   13264:	mov	r1, r8
   13268:	mov	r2, #0
   1326c:	mov	r3, r7
   13270:	str	r6, [sp]
   13274:	mov	r0, r4
   13278:	vmov.f32	s0, s16
   1327c:	bl	15a5c <table_sorted_subset_find_float@@Base>
   13280:	mov	r5, r0
   13284:	mov	r0, r4
   13288:	mov	r1, r8
   1328c:	vmov.f32	s0, s16
   13290:	mov	r2, #1
   13294:	mov	r3, r7
   13298:	str	r6, [sp]
   1329c:	bl	15a5c <table_sorted_subset_find_float@@Base>
   132a0:	mov	r4, r0
   132a4:	cmp	r5, #42	; 0x2a
   132a8:	beq	132c0 <main@@Base+0x1c8>
   132ac:	movw	r0, #29191	; 0x7207
   132b0:	mov	r1, r5
   132b4:	movt	r0, #1
   132b8:	bl	12f84 <printf@plt>
   132bc:	mvn	r9, #0
   132c0:	cmp	r4, #43	; 0x2b
   132c4:	beq	132dc <main@@Base+0x1e4>
   132c8:	movw	r0, #29253	; 0x7245
   132cc:	mov	r1, r4
   132d0:	movt	r0, #1
   132d4:	bl	12f84 <printf@plt>
   132d8:	mvn	r9, #0
   132dc:	add	r0, sp, #8
   132e0:	bl	133a8 <table_destroy@@Base>
   132e4:	mov	r0, r9
   132e8:	sub	sp, fp, #56	; 0x38
   132ec:	vpop	{d8-d10}
   132f0:	add	sp, sp, #4
   132f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132f8:	andeq	r0, r0, r0

000132fc <table_new@@Base>:
   132fc:	push	{fp, lr}
   13300:	mov	fp, sp
   13304:	mov	r0, #56	; 0x38
   13308:	bl	12fb4 <malloc@plt>
   1330c:	mov	r1, #0
   13310:	mov	r2, #10
   13314:	mov	r3, #20
   13318:	vmov.i32	q8, #0	; 0x00000000
   1331c:	str	r1, [r0]
   13320:	stmib	r0, {r1, r2}
   13324:	str	r1, [r0, #12]
   13328:	str	r1, [r0, #16]
   1332c:	str	r1, [r0, #20]
   13330:	str	r3, [r0, #24]
   13334:	str	r1, [r0, #28]
   13338:	str	r2, [r0, #48]	; 0x30
   1333c:	str	r1, [r0, #52]	; 0x34
   13340:	add	r1, r0, #32
   13344:	vst1.32	{d16-d17}, [r1]
   13348:	pop	{fp, pc}

0001334c <table_init@@Base>:
   1334c:	mov	r1, #0
   13350:	mov	r2, #10
   13354:	mov	r3, #20
   13358:	vmov.i32	q8, #0	; 0x00000000
   1335c:	str	r1, [r0]
   13360:	stmib	r0, {r1, r2}
   13364:	str	r1, [r0, #12]
   13368:	str	r1, [r0, #16]
   1336c:	str	r1, [r0, #20]
   13370:	str	r3, [r0, #24]
   13374:	str	r1, [r0, #28]
   13378:	str	r2, [r0, #48]	; 0x30
   1337c:	str	r1, [r0, #52]	; 0x34
   13380:	add	r0, r0, #32
   13384:	vst1.32	{d16-d17}, [r0]
   13388:	bx	lr

0001338c <table_delete@@Base>:
   1338c:	push	{r4, sl, fp, lr}
   13390:	add	fp, sp, #8
   13394:	mov	r4, r0
   13398:	bl	133a8 <table_destroy@@Base>
   1339c:	mov	r0, r4
   133a0:	pop	{r4, sl, fp, lr}
   133a4:	b	12f90 <free@plt>

000133a8 <table_destroy@@Base>:
   133a8:	cmp	r0, #0
   133ac:	bxeq	lr
   133b0:	push	{r4, r5, r6, sl, fp, lr}
   133b4:	add	fp, sp, #16
   133b8:	mvn	r1, #0
   133bc:	mvn	r2, #0
   133c0:	mov	r3, #64	; 0x40
   133c4:	mov	r4, r0
   133c8:	bl	13c38 <table_notify@@Base>
   133cc:	mov	r0, r4
   133d0:	bl	15e34 <table_get_row_length@@Base>
   133d4:	cmp	r0, #1
   133d8:	blt	133fc <table_destroy@@Base+0x54>
   133dc:	mov	r5, r0
   133e0:	mov	r6, #0
   133e4:	mov	r0, r4
   133e8:	mov	r1, r6
   133ec:	bl	15ddc <table_row_destroy@@Base>
   133f0:	add	r6, r6, #1
   133f4:	cmp	r5, r6
   133f8:	bne	133e4 <table_destroy@@Base+0x3c>
   133fc:	ldr	r0, [r4, #16]
   13400:	cmp	r0, #0
   13404:	beq	1340c <table_destroy@@Base+0x64>
   13408:	bl	12f90 <free@plt>
   1340c:	mov	r0, r4
   13410:	bl	13d2c <table_get_column_length@@Base>
   13414:	cmp	r0, #1
   13418:	blt	1343c <table_destroy@@Base+0x94>
   1341c:	mov	r5, r0
   13420:	mov	r6, #0
   13424:	mov	r0, r4
   13428:	mov	r1, r6
   1342c:	bl	13d14 <table_column_destroy@@Base>
   13430:	add	r6, r6, #1
   13434:	cmp	r5, r6
   13438:	bne	13424 <table_destroy@@Base+0x7c>
   1343c:	ldr	r0, [r4]
   13440:	cmp	r0, #0
   13444:	beq	1344c <table_destroy@@Base+0xa4>
   13448:	bl	12f90 <free@plt>
   1344c:	ldr	r0, [r4, #36]	; 0x24
   13450:	cmp	r0, #0
   13454:	beq	1345c <table_destroy@@Base+0xb4>
   13458:	bl	12f90 <free@plt>
   1345c:	ldr	r0, [r4, #40]	; 0x28
   13460:	cmp	r0, #0
   13464:	beq	1346c <table_destroy@@Base+0xc4>
   13468:	bl	12f90 <free@plt>
   1346c:	ldr	r0, [r4, #44]	; 0x2c
   13470:	cmp	r0, #0
   13474:	pop	{r4, r5, r6, sl, fp, lr}
   13478:	beq	13480 <table_destroy@@Base+0xd8>
   1347c:	b	12f90 <free@plt>
   13480:	bx	lr

00013484 <table_dupe@@Base>:
   13484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13488:	add	fp, sp, #28
   1348c:	sub	sp, sp, #12
   13490:	mov	r4, r0
   13494:	bl	15e34 <table_get_row_length@@Base>
   13498:	mov	r8, r0
   1349c:	mov	r0, r4
   134a0:	bl	13d2c <table_get_column_length@@Base>
   134a4:	mov	r6, r0
   134a8:	mov	r0, #56	; 0x38
   134ac:	bl	12fb4 <malloc@plt>
   134b0:	mov	sl, r0
   134b4:	mov	r5, #0
   134b8:	mov	r0, #10
   134bc:	mov	r1, #20
   134c0:	cmp	r6, #1
   134c4:	vmov.i32	q8, #0	; 0x00000000
   134c8:	str	r5, [sl]
   134cc:	str	r5, [sl, #4]
   134d0:	str	r0, [sl, #8]
   134d4:	str	r5, [sl, #12]
   134d8:	str	r5, [sl, #16]
   134dc:	str	r5, [sl, #20]
   134e0:	str	r1, [sl, #24]
   134e4:	str	r5, [sl, #28]
   134e8:	str	r0, [sl, #48]	; 0x30
   134ec:	add	r0, sl, #32
   134f0:	str	r5, [sl, #52]	; 0x34
   134f4:	vst1.32	{d16-d17}, [r0]
   134f8:	blt	13534 <table_dupe@@Base+0xb0>
   134fc:	mov	r0, r4
   13500:	mov	r1, r5
   13504:	bl	13d90 <table_get_column_name@@Base>
   13508:	mov	r7, r0
   1350c:	mov	r0, r4
   13510:	mov	r1, r5
   13514:	bl	13da0 <table_get_column_data_type@@Base>
   13518:	mov	r2, r0
   1351c:	mov	r0, sl
   13520:	mov	r1, r7
   13524:	bl	13db4 <table_add_column@@Base>
   13528:	add	r5, r5, #1
   1352c:	cmp	r6, r5
   13530:	bne	134fc <table_dupe@@Base+0x78>
   13534:	cmp	r8, #1
   13538:	blt	139a0 <table_dupe@@Base+0x51c>
   1353c:	mov	r5, #0
   13540:	add	r9, sp, #8
   13544:	mov	r0, sl
   13548:	bl	15e3c <table_add_row@@Base>
   1354c:	cmp	r6, #1
   13550:	blt	13994 <table_dupe@@Base+0x510>
   13554:	mov	r7, #0
   13558:	mov	r0, r4
   1355c:	mov	r1, r7
   13560:	bl	13da0 <table_get_column_data_type@@Base>
   13564:	cmp	r0, #23
   13568:	bhi	13988 <table_dupe@@Base+0x504>
   1356c:	add	r1, pc, #0
   13570:	ldr	pc, [r1, r0, lsl #2]
   13574:	ldrdeq	r3, [r1], -r4
   13578:	strdeq	r3, [r1], -ip
   1357c:	andeq	r3, r1, r4, lsr #12
   13580:	andeq	r3, r1, ip, asr #12
   13584:	andeq	r3, r1, r4, ror r6
   13588:	muleq	r1, ip, r6
   1358c:	andeq	r3, r1, r4, asr #13
   13590:	andeq	r3, r1, ip, ror #13
   13594:	andeq	r3, r1, r4, lsl r7
   13598:	andeq	r3, r1, ip, lsr r7
   1359c:	andeq	r3, r1, r4, ror #14
   135a0:	andeq	r3, r1, ip, lsl #15
   135a4:			; <UNDEFINED> instruction: 0x000137b4
   135a8:	ldrdeq	r3, [r1], -ip
   135ac:	andeq	r3, r1, r4, lsl #16
   135b0:	andeq	r3, r1, ip, lsr #16
   135b4:	andeq	r3, r1, r4, asr r8
   135b8:	andeq	r3, r1, r8, ror r8
   135bc:	muleq	r1, ip, r8
   135c0:	andeq	r3, r1, r0, asr #17
   135c4:	andeq	r3, r1, r8, ror #17
   135c8:	andeq	r3, r1, r0, lsl r9
   135cc:	andeq	r3, r1, r8, lsr r9
   135d0:	andeq	r3, r1, r0, ror #18
   135d4:	mov	r0, r4
   135d8:	mov	r1, r5
   135dc:	mov	r2, r7
   135e0:	bl	15b8c <table_get_int@@Base>
   135e4:	mov	r3, r0
   135e8:	mov	r0, sl
   135ec:	mov	r1, r5
   135f0:	mov	r2, r7
   135f4:	bl	16338 <table_set_int@@Base>
   135f8:	b	13988 <table_dupe@@Base+0x504>
   135fc:	mov	r0, r4
   13600:	mov	r1, r5
   13604:	mov	r2, r7
   13608:	bl	15ba4 <table_get_uint@@Base>
   1360c:	mov	r3, r0
   13610:	mov	r0, sl
   13614:	mov	r1, r5
   13618:	mov	r2, r7
   1361c:	bl	16360 <table_set_uint@@Base>
   13620:	b	13988 <table_dupe@@Base+0x504>
   13624:	mov	r0, r4
   13628:	mov	r1, r5
   1362c:	mov	r2, r7
   13630:	bl	15bbc <table_get_int8@@Base>
   13634:	mov	r3, r0
   13638:	mov	r0, sl
   1363c:	mov	r1, r5
   13640:	mov	r2, r7
   13644:	bl	16388 <table_set_int8@@Base>
   13648:	b	13988 <table_dupe@@Base+0x504>
   1364c:	mov	r0, r4
   13650:	mov	r1, r5
   13654:	mov	r2, r7
   13658:	bl	15bd4 <table_get_uint8@@Base>
   1365c:	mov	r3, r0
   13660:	mov	r0, sl
   13664:	mov	r1, r5
   13668:	mov	r2, r7
   1366c:	bl	163b0 <table_set_uint8@@Base>
   13670:	b	13988 <table_dupe@@Base+0x504>
   13674:	mov	r0, r4
   13678:	mov	r1, r5
   1367c:	mov	r2, r7
   13680:	bl	15bec <table_get_int16@@Base>
   13684:	mov	r3, r0
   13688:	mov	r0, sl
   1368c:	mov	r1, r5
   13690:	mov	r2, r7
   13694:	bl	163d8 <table_set_int16@@Base>
   13698:	b	13988 <table_dupe@@Base+0x504>
   1369c:	mov	r0, r4
   136a0:	mov	r1, r5
   136a4:	mov	r2, r7
   136a8:	bl	15c04 <table_get_uint16@@Base>
   136ac:	mov	r3, r0
   136b0:	mov	r0, sl
   136b4:	mov	r1, r5
   136b8:	mov	r2, r7
   136bc:	bl	16400 <table_set_uint16@@Base>
   136c0:	b	13988 <table_dupe@@Base+0x504>
   136c4:	mov	r0, r4
   136c8:	mov	r1, r5
   136cc:	mov	r2, r7
   136d0:	bl	15c1c <table_get_int32@@Base>
   136d4:	mov	r3, r0
   136d8:	mov	r0, sl
   136dc:	mov	r1, r5
   136e0:	mov	r2, r7
   136e4:	bl	16428 <table_set_int32@@Base>
   136e8:	b	13988 <table_dupe@@Base+0x504>
   136ec:	mov	r0, r4
   136f0:	mov	r1, r5
   136f4:	mov	r2, r7
   136f8:	bl	15c34 <table_get_uint32@@Base>
   136fc:	mov	r3, r0
   13700:	mov	r0, sl
   13704:	mov	r1, r5
   13708:	mov	r2, r7
   1370c:	bl	16450 <table_set_uint32@@Base>
   13710:	b	13988 <table_dupe@@Base+0x504>
   13714:	mov	r0, r4
   13718:	mov	r1, r5
   1371c:	mov	r2, r7
   13720:	bl	15c4c <table_get_int64@@Base>
   13724:	stm	sp, {r0, r1}
   13728:	mov	r0, sl
   1372c:	mov	r1, r5
   13730:	mov	r2, r7
   13734:	bl	16478 <table_set_int64@@Base>
   13738:	b	13988 <table_dupe@@Base+0x504>
   1373c:	mov	r0, r4
   13740:	mov	r1, r5
   13744:	mov	r2, r7
   13748:	bl	15c64 <table_get_uint64@@Base>
   1374c:	stm	sp, {r0, r1}
   13750:	mov	r0, sl
   13754:	mov	r1, r5
   13758:	mov	r2, r7
   1375c:	bl	164ac <table_set_uint64@@Base>
   13760:	b	13988 <table_dupe@@Base+0x504>
   13764:	mov	r0, r4
   13768:	mov	r1, r5
   1376c:	mov	r2, r7
   13770:	bl	15c7c <table_get_short@@Base>
   13774:	mov	r3, r0
   13778:	mov	r0, sl
   1377c:	mov	r1, r5
   13780:	mov	r2, r7
   13784:	bl	164e0 <table_set_short@@Base>
   13788:	b	13988 <table_dupe@@Base+0x504>
   1378c:	mov	r0, r4
   13790:	mov	r1, r5
   13794:	mov	r2, r7
   13798:	bl	15c94 <table_get_ushort@@Base>
   1379c:	mov	r3, r0
   137a0:	mov	r0, sl
   137a4:	mov	r1, r5
   137a8:	mov	r2, r7
   137ac:	bl	16508 <table_set_ushort@@Base>
   137b0:	b	13988 <table_dupe@@Base+0x504>
   137b4:	mov	r0, r4
   137b8:	mov	r1, r5
   137bc:	mov	r2, r7
   137c0:	bl	15cac <table_get_long@@Base>
   137c4:	mov	r3, r0
   137c8:	mov	r0, sl
   137cc:	mov	r1, r5
   137d0:	mov	r2, r7
   137d4:	bl	16530 <table_set_long@@Base>
   137d8:	b	13988 <table_dupe@@Base+0x504>
   137dc:	mov	r0, r4
   137e0:	mov	r1, r5
   137e4:	mov	r2, r7
   137e8:	bl	15cc4 <table_get_ulong@@Base>
   137ec:	mov	r3, r0
   137f0:	mov	r0, sl
   137f4:	mov	r1, r5
   137f8:	mov	r2, r7
   137fc:	bl	16558 <table_set_ulong@@Base>
   13800:	b	13988 <table_dupe@@Base+0x504>
   13804:	mov	r0, r4
   13808:	mov	r1, r5
   1380c:	mov	r2, r7
   13810:	bl	15cdc <table_get_llong@@Base>
   13814:	stm	sp, {r0, r1}
   13818:	mov	r0, sl
   1381c:	mov	r1, r5
   13820:	mov	r2, r7
   13824:	bl	16580 <table_set_llong@@Base>
   13828:	b	13988 <table_dupe@@Base+0x504>
   1382c:	mov	r0, r4
   13830:	mov	r1, r5
   13834:	mov	r2, r7
   13838:	bl	15cf4 <table_get_ullong@@Base>
   1383c:	stm	sp, {r0, r1}
   13840:	mov	r0, sl
   13844:	mov	r1, r5
   13848:	mov	r2, r7
   1384c:	bl	165b4 <table_set_ullong@@Base>
   13850:	b	13988 <table_dupe@@Base+0x504>
   13854:	mov	r0, r4
   13858:	mov	r1, r5
   1385c:	mov	r2, r7
   13860:	bl	15d0c <table_get_float@@Base>
   13864:	mov	r0, sl
   13868:	mov	r1, r5
   1386c:	mov	r2, r7
   13870:	bl	165e8 <table_set_float@@Base>
   13874:	b	13988 <table_dupe@@Base+0x504>
   13878:	mov	r0, r4
   1387c:	mov	r1, r5
   13880:	mov	r2, r7
   13884:	bl	15d24 <table_get_double@@Base>
   13888:	mov	r0, sl
   1388c:	mov	r1, r5
   13890:	mov	r2, r7
   13894:	bl	16610 <table_set_double@@Base>
   13898:	b	13988 <table_dupe@@Base+0x504>
   1389c:	mov	r0, r4
   138a0:	mov	r1, r5
   138a4:	mov	r2, r7
   138a8:	bl	15d3c <table_get_ldouble@@Base>
   138ac:	mov	r0, sl
   138b0:	mov	r1, r5
   138b4:	mov	r2, r7
   138b8:	bl	16638 <table_set_ldouble@@Base>
   138bc:	b	13988 <table_dupe@@Base+0x504>
   138c0:	mov	r0, r4
   138c4:	mov	r1, r5
   138c8:	mov	r2, r7
   138cc:	bl	15d54 <table_get_char@@Base>
   138d0:	mov	r3, r0
   138d4:	mov	r0, sl
   138d8:	mov	r1, r5
   138dc:	mov	r2, r7
   138e0:	bl	16680 <table_set_char@@Base>
   138e4:	b	13988 <table_dupe@@Base+0x504>
   138e8:	mov	r0, r4
   138ec:	mov	r1, r5
   138f0:	mov	r2, r7
   138f4:	bl	15d6c <table_get_uchar@@Base>
   138f8:	mov	r3, r0
   138fc:	mov	r0, sl
   13900:	mov	r1, r5
   13904:	mov	r2, r7
   13908:	bl	166a8 <table_set_uchar@@Base>
   1390c:	b	13988 <table_dupe@@Base+0x504>
   13910:	mov	r0, r4
   13914:	mov	r1, r5
   13918:	mov	r2, r7
   1391c:	bl	15d84 <table_get_string@@Base>
   13920:	mov	r3, r0
   13924:	mov	r0, sl
   13928:	mov	r1, r5
   1392c:	mov	r2, r7
   13930:	bl	16660 <table_set_string@@Base>
   13934:	b	13988 <table_dupe@@Base+0x504>
   13938:	mov	r0, r4
   1393c:	mov	r1, r5
   13940:	mov	r2, r7
   13944:	bl	15b74 <table_get_bool@@Base>
   13948:	mov	r3, r0
   1394c:	mov	r0, sl
   13950:	mov	r1, r5
   13954:	mov	r2, r7
   13958:	bl	16310 <table_set_bool@@Base>
   1395c:	b	13988 <table_dupe@@Base+0x504>
   13960:	mov	r0, r4
   13964:	mov	r1, r5
   13968:	mov	r2, r7
   1396c:	bl	15d98 <table_get_ptr@@Base>
   13970:	str	r0, [sp, #8]
   13974:	mov	r0, sl
   13978:	mov	r1, r5
   1397c:	mov	r2, r7
   13980:	mov	r3, r9
   13984:	bl	166d0 <table_set_ptr@@Base>
   13988:	add	r7, r7, #1
   1398c:	cmp	r6, r7
   13990:	bne	13558 <table_dupe@@Base+0xd4>
   13994:	add	r5, r5, #1
   13998:	cmp	r5, r8
   1399c:	bne	13544 <table_dupe@@Base+0xc0>
   139a0:	mov	r0, sl
   139a4:	sub	sp, fp, #28
   139a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000139ac <table_get_major_version@@Base>:
   139ac:	mov	r0, #0
   139b0:	bx	lr

000139b4 <table_get_minor_version@@Base>:
   139b4:	mov	r0, #0
   139b8:	bx	lr

000139bc <table_get_patch_version@@Base>:
   139bc:	mov	r0, #0
   139c0:	bx	lr

000139c4 <table_get_version@@Base>:
   139c4:	movw	r0, #29077	; 0x7195
   139c8:	movt	r0, #1
   139cc:	bx	lr

000139d0 <table_get_callback_length@@Base>:
   139d0:	ldr	r0, [r0, #32]
   139d4:	bx	lr

000139d8 <table_register_callback@@Base>:
   139d8:	push	{r4, r5, r6, r7, fp, lr}
   139dc:	add	fp, sp, #16
   139e0:	mov	r5, r0
   139e4:	ldr	r0, [r0, #32]
   139e8:	mov	r4, r3
   139ec:	mov	r6, r2
   139f0:	mov	r7, r1
   139f4:	cmp	r0, #1
   139f8:	blt	13a2c <table_register_callback@@Base+0x54>
   139fc:	ldr	r2, [r5, #36]	; 0x24
   13a00:	mov	r1, #0
   13a04:	ldr	r3, [r2, r1, lsl #2]
   13a08:	cmp	r3, r7
   13a0c:	bne	13a20 <table_register_callback@@Base+0x48>
   13a10:	ldr	r3, [r5, #40]	; 0x28
   13a14:	ldr	r3, [r3, r1, lsl #2]
   13a18:	cmp	r3, r6
   13a1c:	beq	13ab0 <table_register_callback@@Base+0xd8>
   13a20:	add	r1, r1, #1
   13a24:	cmp	r1, r0
   13a28:	blt	13a04 <table_register_callback@@Base+0x2c>
   13a2c:	ldr	r1, [r5, #48]	; 0x30
   13a30:	udiv	r2, r0, r1
   13a34:	mls	r2, r2, r1, r0
   13a38:	cmp	r2, #0
   13a3c:	bne	13a88 <table_register_callback@@Base+0xb0>
   13a40:	ldr	r2, [r5, #52]	; 0x34
   13a44:	ldr	r0, [r5, #36]	; 0x24
   13a48:	add	r1, r2, r1
   13a4c:	str	r1, [r5, #52]	; 0x34
   13a50:	lsl	r1, r1, #2
   13a54:	bl	12f9c <realloc@plt>
   13a58:	str	r0, [r5, #36]	; 0x24
   13a5c:	ldr	r1, [r5, #52]	; 0x34
   13a60:	ldr	r0, [r5, #40]	; 0x28
   13a64:	lsl	r1, r1, #2
   13a68:	bl	12f9c <realloc@plt>
   13a6c:	str	r0, [r5, #40]	; 0x28
   13a70:	ldr	r1, [r5, #52]	; 0x34
   13a74:	ldr	r0, [r5, #44]	; 0x2c
   13a78:	lsl	r1, r1, #2
   13a7c:	bl	12f9c <realloc@plt>
   13a80:	str	r0, [r5, #44]	; 0x2c
   13a84:	ldr	r0, [r5, #32]
   13a88:	ldr	r1, [r5, #36]	; 0x24
   13a8c:	str	r7, [r1, r0, lsl #2]
   13a90:	ldr	r1, [r5, #40]	; 0x28
   13a94:	str	r6, [r1, r0, lsl #2]
   13a98:	ldr	r1, [r5, #44]	; 0x2c
   13a9c:	str	r4, [r1, r0, lsl #2]
   13aa0:	ldr	r0, [r5, #32]
   13aa4:	add	r0, r0, #1
   13aa8:	str	r0, [r5, #32]
   13aac:	pop	{r4, r5, r6, r7, fp, pc}
   13ab0:	cmp	r1, #0
   13ab4:	ldrne	r0, [r5, #44]	; 0x2c
   13ab8:	ldrne	r2, [r0, r1, lsl #2]
   13abc:	orrne	r2, r2, r4
   13ac0:	strne	r2, [r0, r1, lsl #2]
   13ac4:	popne	{r4, r5, r6, r7, fp, pc}
   13ac8:	b	13a2c <table_register_callback@@Base+0x54>

00013acc <table_unregister_callback@@Base>:
   13acc:	push	{r4, r5, r6, sl, fp, lr}
   13ad0:	add	fp, sp, #16
   13ad4:	ldr	r4, [r0, #32]
   13ad8:	cmp	r4, #1
   13adc:	blt	13b14 <table_unregister_callback@@Base+0x48>
   13ae0:	ldr	r3, [r0, #36]	; 0x24
   13ae4:	mov	r6, r0
   13ae8:	mov	r0, #0
   13aec:	ldr	r5, [r3, r0, lsl #2]
   13af0:	cmp	r5, r1
   13af4:	bne	13b08 <table_unregister_callback@@Base+0x3c>
   13af8:	ldr	r5, [r6, #40]	; 0x28
   13afc:	ldr	r5, [r5, r0, lsl #2]
   13b00:	cmp	r5, r2
   13b04:	beq	13b18 <table_unregister_callback@@Base+0x4c>
   13b08:	add	r0, r0, #1
   13b0c:	cmp	r0, r4
   13b10:	blt	13aec <table_unregister_callback@@Base+0x20>
   13b14:	pop	{r4, r5, r6, sl, fp, pc}
   13b18:	sub	r1, r4, #1
   13b1c:	cmp	r0, r1
   13b20:	bge	13bb0 <table_unregister_callback@@Base+0xe4>
   13b24:	add	r1, r3, r0, lsl #2
   13b28:	ldr	r1, [r1, #4]
   13b2c:	str	r1, [r3, r0, lsl #2]
   13b30:	ldr	r1, [r6, #40]	; 0x28
   13b34:	add	r2, r1, r0, lsl #2
   13b38:	ldr	r2, [r2, #4]
   13b3c:	str	r2, [r1, r0, lsl #2]
   13b40:	ldr	r1, [r6, #44]	; 0x2c
   13b44:	add	r2, r1, r0, lsl #2
   13b48:	ldr	r2, [r2, #4]
   13b4c:	str	r2, [r1, r0, lsl #2]
   13b50:	add	r2, r0, #1
   13b54:	ldr	r1, [r6, #32]
   13b58:	sub	r1, r1, #1
   13b5c:	cmp	r2, r1
   13b60:	bge	13bb0 <table_unregister_callback@@Base+0xe4>
   13b64:	ldr	r1, [r6, #36]	; 0x24
   13b68:	add	r1, r1, r0, lsl #2
   13b6c:	ldr	r2, [r1, #8]
   13b70:	str	r2, [r1, #4]
   13b74:	ldr	r1, [r6, #40]	; 0x28
   13b78:	add	r1, r1, r0, lsl #2
   13b7c:	ldr	r2, [r1, #8]
   13b80:	str	r2, [r1, #4]
   13b84:	ldr	r1, [r6, #44]	; 0x2c
   13b88:	add	r1, r1, r0, lsl #2
   13b8c:	ldr	r2, [r1, #8]
   13b90:	str	r2, [r1, #4]
   13b94:	add	r2, r0, #1
   13b98:	add	r0, r0, #2
   13b9c:	ldr	r1, [r6, #32]
   13ba0:	sub	r1, r1, #1
   13ba4:	cmp	r0, r1
   13ba8:	mov	r0, r2
   13bac:	blt	13b64 <table_unregister_callback@@Base+0x98>
   13bb0:	str	r1, [r6, #32]
   13bb4:	ldr	r2, [r6, #48]	; 0x30
   13bb8:	udiv	r0, r1, r2
   13bbc:	mls	r0, r0, r2, r1
   13bc0:	cmp	r0, #0
   13bc4:	popne	{r4, r5, r6, sl, fp, pc}
   13bc8:	ldr	r1, [r6, #52]	; 0x34
   13bcc:	ldr	r0, [r6, #36]	; 0x24
   13bd0:	subs	r1, r1, r2
   13bd4:	str	r1, [r6, #52]	; 0x34
   13bd8:	beq	13c10 <table_unregister_callback@@Base+0x144>
   13bdc:	lsl	r1, r1, #2
   13be0:	bl	12f9c <realloc@plt>
   13be4:	str	r0, [r6, #36]	; 0x24
   13be8:	ldr	r1, [r6, #52]	; 0x34
   13bec:	ldr	r0, [r6, #40]	; 0x28
   13bf0:	lsl	r1, r1, #2
   13bf4:	bl	12f9c <realloc@plt>
   13bf8:	str	r0, [r6, #40]	; 0x28
   13bfc:	ldr	r1, [r6, #52]	; 0x34
   13c00:	ldr	r0, [r6, #44]	; 0x2c
   13c04:	lsl	r1, r1, #2
   13c08:	bl	12f9c <realloc@plt>
   13c0c:	b	13c30 <table_unregister_callback@@Base+0x164>
   13c10:	bl	12f90 <free@plt>
   13c14:	ldr	r0, [r6, #40]	; 0x28
   13c18:	bl	12f90 <free@plt>
   13c1c:	ldr	r0, [r6, #44]	; 0x2c
   13c20:	bl	12f90 <free@plt>
   13c24:	mov	r0, #0
   13c28:	str	r0, [r6, #36]	; 0x24
   13c2c:	str	r0, [r6, #40]	; 0x28
   13c30:	str	r0, [r6, #44]	; 0x2c
   13c34:	pop	{r4, r5, r6, sl, fp, pc}

00013c38 <table_notify@@Base>:
   13c38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c3c:	add	fp, sp, #24
   13c40:	sub	sp, sp, #8
   13c44:	mov	r7, r0
   13c48:	ldr	r0, [r0, #32]
   13c4c:	cmp	r0, #1
   13c50:	blt	13cac <table_notify@@Base+0x74>
   13c54:	mov	r4, r3
   13c58:	mov	r8, r2
   13c5c:	mov	r9, r1
   13c60:	mov	r5, #0
   13c64:	ldr	r1, [r7, #44]	; 0x2c
   13c68:	ldr	r1, [r1, r5, lsl #2]
   13c6c:	tst	r1, r4
   13c70:	beq	13ca0 <table_notify@@Base+0x68>
   13c74:	ldr	r0, [r7, #36]	; 0x24
   13c78:	ldr	r1, [r7, #40]	; 0x28
   13c7c:	mov	r2, r8
   13c80:	mov	r3, r4
   13c84:	ldr	r6, [r0, r5, lsl #2]
   13c88:	ldr	r0, [r1, r5, lsl #2]
   13c8c:	mov	r1, r9
   13c90:	str	r0, [sp]
   13c94:	mov	r0, r7
   13c98:	blx	r6
   13c9c:	ldr	r0, [r7, #32]
   13ca0:	add	r5, r5, #1
   13ca4:	cmp	r5, r0
   13ca8:	blt	13c64 <table_notify@@Base+0x2c>
   13cac:	sub	sp, fp, #24
   13cb0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013cb4 <table_column_init@@Base>:
   13cb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13cb8:	add	fp, sp, #24
   13cbc:	ldr	r7, [r0]
   13cc0:	mov	r0, r2
   13cc4:	mov	r4, r3
   13cc8:	mov	r5, r2
   13ccc:	mov	r6, r1
   13cd0:	bl	12fd8 <strlen@plt>
   13cd4:	add	r0, r0, #1
   13cd8:	bl	12fb4 <malloc@plt>
   13cdc:	ldr	r8, [fp, #8]
   13ce0:	add	r6, r6, r6, lsl #1
   13ce4:	cmp	r0, #0
   13ce8:	str	r0, [r7, r6, lsl #2]
   13cec:	beq	13cf8 <table_column_init@@Base+0x44>
   13cf0:	mov	r1, r5
   13cf4:	bl	12fa8 <strcpy@plt>
   13cf8:	add	r0, r7, r6, lsl #2
   13cfc:	stmib	r0, {r4, r8}
   13d00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013d04 <table_get_col_ptr@@Base>:
   13d04:	ldr	r0, [r0]
   13d08:	add	r1, r1, r1, lsl #1
   13d0c:	add	r0, r0, r1, lsl #2
   13d10:	bx	lr

00013d14 <table_column_destroy@@Base>:
   13d14:	ldr	r0, [r0]
   13d18:	add	r1, r1, r1, lsl #1
   13d1c:	ldr	r0, [r0, r1, lsl #2]
   13d20:	cmp	r0, #0
   13d24:	bxeq	lr
   13d28:	b	12f90 <free@plt>

00013d2c <table_get_column_length@@Base>:
   13d2c:	ldr	r0, [r0, #4]
   13d30:	bx	lr

00013d34 <table_get_column@@Base>:
   13d34:	push	{r4, r5, r6, r7, fp, lr}
   13d38:	add	fp, sp, #16
   13d3c:	ldr	r6, [r0, #4]
   13d40:	cmp	r6, #1
   13d44:	blt	13d7c <table_get_column@@Base+0x48>
   13d48:	ldr	r7, [r0]
   13d4c:	mov	r5, r1
   13d50:	mov	r4, #0
   13d54:	ldr	r0, [r7]
   13d58:	mov	r1, r5
   13d5c:	bl	12f78 <strcmp@plt>
   13d60:	cmp	r0, #0
   13d64:	beq	13d80 <table_get_column@@Base+0x4c>
   13d68:	add	r4, r4, #1
   13d6c:	add	r7, r7, #12
   13d70:	cmp	r4, r6
   13d74:	blt	13d54 <table_get_column@@Base+0x20>
   13d78:	b	13d80 <table_get_column@@Base+0x4c>
   13d7c:	mov	r4, #0
   13d80:	cmp	r4, r6
   13d84:	mvneq	r4, #0
   13d88:	mov	r0, r4
   13d8c:	pop	{r4, r5, r6, r7, fp, pc}

00013d90 <table_get_column_name@@Base>:
   13d90:	ldr	r0, [r0]
   13d94:	add	r1, r1, r1, lsl #1
   13d98:	ldr	r0, [r0, r1, lsl #2]
   13d9c:	bx	lr

00013da0 <table_get_column_data_type@@Base>:
   13da0:	ldr	r0, [r0]
   13da4:	add	r1, r1, r1, lsl #1
   13da8:	add	r0, r0, r1, lsl #2
   13dac:	ldr	r0, [r0, #4]
   13db0:	bx	lr

00013db4 <table_add_column@@Base>:
   13db4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13db8:	add	fp, sp, #24
   13dbc:	sub	sp, sp, #8
   13dc0:	mov	r4, r0
   13dc4:	mov	r8, r1
   13dc8:	ldr	r0, [r0, #4]
   13dcc:	mov	r9, r2
   13dd0:	ldr	r1, [r4, #8]
   13dd4:	udiv	r2, r0, r1
   13dd8:	mls	r0, r2, r1, r0
   13ddc:	cmp	r0, #0
   13de0:	bne	13e4c <table_add_column@@Base+0x98>
   13de4:	ldr	r2, [r4, #12]
   13de8:	ldr	r0, [r4]
   13dec:	add	r1, r2, r1
   13df0:	str	r1, [r4, #12]
   13df4:	add	r1, r1, r1, lsl #1
   13df8:	lsl	r1, r1, #2
   13dfc:	bl	12f9c <realloc@plt>
   13e00:	str	r0, [r4]
   13e04:	mov	r0, r4
   13e08:	bl	15e34 <table_get_row_length@@Base>
   13e0c:	cmp	r0, #1
   13e10:	blt	13e4c <table_add_column@@Base+0x98>
   13e14:	mov	r6, r0
   13e18:	mov	r7, #0
   13e1c:	mov	r0, r4
   13e20:	mov	r1, r7
   13e24:	bl	15dd0 <table_get_row_ptr@@Base>
   13e28:	ldr	r1, [r4, #12]
   13e2c:	mov	r5, r0
   13e30:	ldr	r0, [r0]
   13e34:	lsl	r1, r1, #2
   13e38:	bl	12f9c <realloc@plt>
   13e3c:	add	r7, r7, #1
   13e40:	str	r0, [r5]
   13e44:	cmp	r6, r7
   13e48:	bne	13e1c <table_add_column@@Base+0x68>
   13e4c:	mov	r0, r4
   13e50:	bl	15e34 <table_get_row_length@@Base>
   13e54:	ldr	r6, [r4, #4]
   13e58:	mov	r7, r0
   13e5c:	mov	r0, r9
   13e60:	bl	146e8 <table_get_default_compare_function_for_data_type@@Base>
   13e64:	str	r0, [sp]
   13e68:	mov	r0, r4
   13e6c:	mov	r1, r6
   13e70:	mov	r2, r8
   13e74:	mov	r3, r9
   13e78:	bl	13cb4 <table_column_init@@Base>
   13e7c:	cmp	r7, #1
   13e80:	blt	13ea4 <table_add_column@@Base+0xf0>
   13e84:	mov	r5, #0
   13e88:	mov	r0, r4
   13e8c:	mov	r1, r5
   13e90:	mov	r2, r6
   13e94:	bl	166f0 <table_cell_init@@Base>
   13e98:	add	r5, r5, #1
   13e9c:	cmp	r7, r5
   13ea0:	bne	13e88 <table_add_column@@Base+0xd4>
   13ea4:	ldr	r2, [r4, #4]
   13ea8:	mov	r0, r4
   13eac:	mvn	r1, #0
   13eb0:	mov	r3, #8
   13eb4:	bl	13c38 <table_notify@@Base>
   13eb8:	ldr	r0, [r4, #4]
   13ebc:	add	r1, r0, #1
   13ec0:	str	r1, [r4, #4]
   13ec4:	sub	sp, fp, #24
   13ec8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ecc <table_remove_column@@Base>:
   13ecc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ed0:	add	fp, sp, #24
   13ed4:	mov	r5, r0
   13ed8:	ldr	r0, [r0]
   13edc:	add	r6, r1, r1, lsl #1
   13ee0:	mov	r9, r1
   13ee4:	ldr	r0, [r0, r6, lsl #2]
   13ee8:	cmp	r0, #0
   13eec:	beq	13ef4 <table_remove_column@@Base+0x28>
   13ef0:	bl	12f90 <free@plt>
   13ef4:	ldr	r0, [r5, #4]
   13ef8:	sub	r4, r0, #1
   13efc:	cmp	r4, r9
   13f00:	ble	13f30 <table_remove_column@@Base+0x64>
   13f04:	sub	r0, r4, r9
   13f08:	lsl	r1, r6, #2
   13f0c:	ldr	r2, [r5]
   13f10:	subs	r0, r0, #1
   13f14:	add	r2, r2, r1
   13f18:	add	r1, r1, #12
   13f1c:	vldr	d16, [r2, #12]
   13f20:	ldr	r3, [r2, #20]
   13f24:	str	r3, [r2, #8]
   13f28:	vstr	d16, [r2]
   13f2c:	bne	13f0c <table_remove_column@@Base+0x40>
   13f30:	mov	r0, r5
   13f34:	bl	15e34 <table_get_row_length@@Base>
   13f38:	cmp	r0, #1
   13f3c:	blt	13f98 <table_remove_column@@Base+0xcc>
   13f40:	mov	r6, r0
   13f44:	mov	r7, #0
   13f48:	mov	r0, r5
   13f4c:	mov	r1, r7
   13f50:	mov	r2, r9
   13f54:	bl	1672c <table_cell_destroy@@Base>
   13f58:	mov	r0, r5
   13f5c:	mov	r1, r7
   13f60:	bl	15dd0 <table_get_row_ptr@@Base>
   13f64:	cmp	r4, r9
   13f68:	ble	13f8c <table_remove_column@@Base+0xc0>
   13f6c:	mov	r1, r9
   13f70:	ldr	r2, [r0]
   13f74:	add	r3, r2, r1, lsl #2
   13f78:	ldr	r3, [r3, #4]
   13f7c:	str	r3, [r2, r1, lsl #2]
   13f80:	add	r1, r1, #1
   13f84:	cmp	r4, r1
   13f88:	bne	13f70 <table_remove_column@@Base+0xa4>
   13f8c:	add	r7, r7, #1
   13f90:	cmp	r7, r6
   13f94:	bne	13f48 <table_remove_column@@Base+0x7c>
   13f98:	ldmib	r5, {r0, r1}
   13f9c:	sub	r0, r0, #1
   13fa0:	udiv	r2, r0, r1
   13fa4:	str	r0, [r5, #4]
   13fa8:	mls	r0, r2, r1, r0
   13fac:	cmp	r0, #0
   13fb0:	bne	1401c <table_remove_column@@Base+0x150>
   13fb4:	ldr	r2, [r5, #12]
   13fb8:	ldr	r0, [r5]
   13fbc:	sub	r1, r2, r1
   13fc0:	str	r1, [r5, #12]
   13fc4:	add	r1, r1, r1, lsl #1
   13fc8:	lsl	r1, r1, #2
   13fcc:	bl	12f9c <realloc@plt>
   13fd0:	str	r0, [r5]
   13fd4:	mov	r0, r5
   13fd8:	bl	15e34 <table_get_row_length@@Base>
   13fdc:	cmp	r0, #1
   13fe0:	blt	1401c <table_remove_column@@Base+0x150>
   13fe4:	mov	r8, r0
   13fe8:	mov	r7, #0
   13fec:	mov	r0, r5
   13ff0:	mov	r1, r7
   13ff4:	bl	15dd0 <table_get_row_ptr@@Base>
   13ff8:	ldr	r1, [r5, #12]
   13ffc:	mov	r6, r0
   14000:	ldr	r0, [r0]
   14004:	lsl	r1, r1, #2
   14008:	bl	12f9c <realloc@plt>
   1400c:	add	r7, r7, #1
   14010:	str	r0, [r6]
   14014:	cmp	r8, r7
   14018:	bne	13fec <table_remove_column@@Base+0x120>
   1401c:	mov	r0, r5
   14020:	mvn	r1, #0
   14024:	mov	r2, r9
   14028:	mov	r3, #16
   1402c:	bl	13c38 <table_notify@@Base>
   14030:	mov	r0, #0
   14034:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014038 <table_get_column_compare_function@@Base>:
   14038:	ldr	r0, [r0]
   1403c:	add	r1, r1, r1, lsl #1
   14040:	add	r0, r0, r1, lsl #2
   14044:	ldr	r0, [r0, #8]
   14048:	bx	lr

0001404c <table_set_column_compare_function@@Base>:
   1404c:	ldr	r0, [r0]
   14050:	add	r1, r1, r1, lsl #1
   14054:	add	r0, r0, r1, lsl #2
   14058:	str	r2, [r0, #8]
   1405c:	bx	lr

00014060 <table_compare_bool@@Base>:
   14060:	cmp	r0, #0
   14064:	beq	1408c <table_compare_bool@@Base+0x2c>
   14068:	cmp	r1, #0
   1406c:	beq	14098 <table_compare_bool@@Base+0x38>
   14070:	ldrb	r2, [r1]
   14074:	ldrb	r0, [r0]
   14078:	mov	r1, #0
   1407c:	cmp	r0, r2
   14080:	mvncc	r1, #0
   14084:	movwhi	r1, #1
   14088:	b	1409c <table_compare_bool@@Base+0x3c>
   1408c:	cmp	r1, #0
   14090:	mvnne	r1, #0
   14094:	b	1409c <table_compare_bool@@Base+0x3c>
   14098:	mov	r1, #1
   1409c:	mov	r0, r1
   140a0:	bx	lr

000140a4 <table_compare_int@@Base>:
   140a4:	cmp	r0, #0
   140a8:	beq	140d0 <table_compare_int@@Base+0x2c>
   140ac:	cmp	r1, #0
   140b0:	beq	140dc <table_compare_int@@Base+0x38>
   140b4:	ldr	r2, [r1]
   140b8:	ldr	r0, [r0]
   140bc:	mov	r1, #0
   140c0:	cmp	r0, r2
   140c4:	mvnlt	r1, #0
   140c8:	movwgt	r1, #1
   140cc:	b	140e0 <table_compare_int@@Base+0x3c>
   140d0:	cmp	r1, #0
   140d4:	mvnne	r1, #0
   140d8:	b	140e0 <table_compare_int@@Base+0x3c>
   140dc:	mov	r1, #1
   140e0:	mov	r0, r1
   140e4:	bx	lr

000140e8 <table_compare_uint@@Base>:
   140e8:	cmp	r0, #0
   140ec:	beq	14114 <table_compare_uint@@Base+0x2c>
   140f0:	cmp	r1, #0
   140f4:	beq	14120 <table_compare_uint@@Base+0x38>
   140f8:	ldr	r2, [r1]
   140fc:	ldr	r0, [r0]
   14100:	mov	r1, #0
   14104:	cmp	r0, r2
   14108:	mvncc	r1, #0
   1410c:	movwhi	r1, #1
   14110:	b	14124 <table_compare_uint@@Base+0x3c>
   14114:	cmp	r1, #0
   14118:	mvnne	r1, #0
   1411c:	b	14124 <table_compare_uint@@Base+0x3c>
   14120:	mov	r1, #1
   14124:	mov	r0, r1
   14128:	bx	lr

0001412c <table_compare_int8@@Base>:
   1412c:	cmp	r0, #0
   14130:	beq	14158 <table_compare_int8@@Base+0x2c>
   14134:	cmp	r1, #0
   14138:	beq	14164 <table_compare_int8@@Base+0x38>
   1413c:	ldrsb	r2, [r1]
   14140:	ldrsb	r0, [r0]
   14144:	mov	r1, #0
   14148:	cmp	r0, r2
   1414c:	mvnlt	r1, #0
   14150:	movwgt	r1, #1
   14154:	b	14168 <table_compare_int8@@Base+0x3c>
   14158:	cmp	r1, #0
   1415c:	mvnne	r1, #0
   14160:	b	14168 <table_compare_int8@@Base+0x3c>
   14164:	mov	r1, #1
   14168:	mov	r0, r1
   1416c:	bx	lr

00014170 <table_compare_uint8@@Base>:
   14170:	cmp	r0, #0
   14174:	beq	1419c <table_compare_uint8@@Base+0x2c>
   14178:	cmp	r1, #0
   1417c:	beq	141a8 <table_compare_uint8@@Base+0x38>
   14180:	ldrb	r2, [r1]
   14184:	ldrb	r0, [r0]
   14188:	mov	r1, #0
   1418c:	cmp	r0, r2
   14190:	mvncc	r1, #0
   14194:	movwhi	r1, #1
   14198:	b	141ac <table_compare_uint8@@Base+0x3c>
   1419c:	cmp	r1, #0
   141a0:	mvnne	r1, #0
   141a4:	b	141ac <table_compare_uint8@@Base+0x3c>
   141a8:	mov	r1, #1
   141ac:	mov	r0, r1
   141b0:	bx	lr

000141b4 <table_compare_int16@@Base>:
   141b4:	cmp	r0, #0
   141b8:	beq	141e0 <table_compare_int16@@Base+0x2c>
   141bc:	cmp	r1, #0
   141c0:	beq	141ec <table_compare_int16@@Base+0x38>
   141c4:	ldrsh	r2, [r1]
   141c8:	ldrsh	r0, [r0]
   141cc:	mov	r1, #0
   141d0:	cmp	r0, r2
   141d4:	mvnlt	r1, #0
   141d8:	movwgt	r1, #1
   141dc:	b	141f0 <table_compare_int16@@Base+0x3c>
   141e0:	cmp	r1, #0
   141e4:	mvnne	r1, #0
   141e8:	b	141f0 <table_compare_int16@@Base+0x3c>
   141ec:	mov	r1, #1
   141f0:	mov	r0, r1
   141f4:	bx	lr

000141f8 <table_compare_uint16@@Base>:
   141f8:	cmp	r0, #0
   141fc:	beq	14224 <table_compare_uint16@@Base+0x2c>
   14200:	cmp	r1, #0
   14204:	beq	14230 <table_compare_uint16@@Base+0x38>
   14208:	ldrh	r2, [r1]
   1420c:	ldrh	r0, [r0]
   14210:	mov	r1, #0
   14214:	cmp	r0, r2
   14218:	mvncc	r1, #0
   1421c:	movwhi	r1, #1
   14220:	b	14234 <table_compare_uint16@@Base+0x3c>
   14224:	cmp	r1, #0
   14228:	mvnne	r1, #0
   1422c:	b	14234 <table_compare_uint16@@Base+0x3c>
   14230:	mov	r1, #1
   14234:	mov	r0, r1
   14238:	bx	lr

0001423c <table_compare_int32@@Base>:
   1423c:	cmp	r0, #0
   14240:	beq	14268 <table_compare_int32@@Base+0x2c>
   14244:	cmp	r1, #0
   14248:	beq	14274 <table_compare_int32@@Base+0x38>
   1424c:	ldr	r2, [r1]
   14250:	ldr	r0, [r0]
   14254:	mov	r1, #0
   14258:	cmp	r0, r2
   1425c:	mvnlt	r1, #0
   14260:	movwgt	r1, #1
   14264:	b	14278 <table_compare_int32@@Base+0x3c>
   14268:	cmp	r1, #0
   1426c:	mvnne	r1, #0
   14270:	b	14278 <table_compare_int32@@Base+0x3c>
   14274:	mov	r1, #1
   14278:	mov	r0, r1
   1427c:	bx	lr

00014280 <table_compare_uint32@@Base>:
   14280:	cmp	r0, #0
   14284:	beq	142ac <table_compare_uint32@@Base+0x2c>
   14288:	cmp	r1, #0
   1428c:	beq	142b8 <table_compare_uint32@@Base+0x38>
   14290:	ldr	r2, [r1]
   14294:	ldr	r0, [r0]
   14298:	mov	r1, #0
   1429c:	cmp	r0, r2
   142a0:	mvncc	r1, #0
   142a4:	movwhi	r1, #1
   142a8:	b	142bc <table_compare_uint32@@Base+0x3c>
   142ac:	cmp	r1, #0
   142b0:	mvnne	r1, #0
   142b4:	b	142bc <table_compare_uint32@@Base+0x3c>
   142b8:	mov	r1, #1
   142bc:	mov	r0, r1
   142c0:	bx	lr

000142c4 <table_compare_int64@@Base>:
   142c4:	cmp	r0, #0
   142c8:	beq	14310 <table_compare_int64@@Base+0x4c>
   142cc:	cmp	r1, #0
   142d0:	beq	1431c <table_compare_int64@@Base+0x58>
   142d4:	push	{r5, r7, fp, lr}
   142d8:	add	fp, sp, #8
   142dc:	ldm	r1, {r2, r7}
   142e0:	ldm	r0, {r0, r5}
   142e4:	mov	r1, #0
   142e8:	subs	r3, r0, r2
   142ec:	sbcs	r3, r5, r7
   142f0:	movwlt	r1, #1
   142f4:	cmp	r1, #0
   142f8:	mvnne	r1, #0
   142fc:	subs	r0, r2, r0
   14300:	sbcs	r0, r7, r5
   14304:	movwlt	r1, #1
   14308:	pop	{r5, r7, fp, lr}
   1430c:	b	14320 <table_compare_int64@@Base+0x5c>
   14310:	cmp	r1, #0
   14314:	mvnne	r1, #0
   14318:	b	14320 <table_compare_int64@@Base+0x5c>
   1431c:	mov	r1, #1
   14320:	mov	r0, r1
   14324:	bx	lr

00014328 <table_compare_uint64@@Base>:
   14328:	cmp	r0, #0
   1432c:	beq	14374 <table_compare_uint64@@Base+0x4c>
   14330:	cmp	r1, #0
   14334:	beq	14380 <table_compare_uint64@@Base+0x58>
   14338:	push	{r5, r7, fp, lr}
   1433c:	add	fp, sp, #8
   14340:	ldm	r1, {r2, r7}
   14344:	ldm	r0, {r0, r5}
   14348:	mov	r1, #0
   1434c:	subs	r3, r0, r2
   14350:	sbcs	r3, r5, r7
   14354:	movwcc	r1, #1
   14358:	cmp	r1, #0
   1435c:	mvnne	r1, #0
   14360:	subs	r0, r2, r0
   14364:	sbcs	r0, r7, r5
   14368:	movwcc	r1, #1
   1436c:	pop	{r5, r7, fp, lr}
   14370:	b	14384 <table_compare_uint64@@Base+0x5c>
   14374:	cmp	r1, #0
   14378:	mvnne	r1, #0
   1437c:	b	14384 <table_compare_uint64@@Base+0x5c>
   14380:	mov	r1, #1
   14384:	mov	r0, r1
   14388:	bx	lr

0001438c <table_compare_short@@Base>:
   1438c:	cmp	r0, #0
   14390:	beq	143b8 <table_compare_short@@Base+0x2c>
   14394:	cmp	r1, #0
   14398:	beq	143c4 <table_compare_short@@Base+0x38>
   1439c:	ldrsh	r2, [r1]
   143a0:	ldrsh	r0, [r0]
   143a4:	mov	r1, #0
   143a8:	cmp	r0, r2
   143ac:	mvnlt	r1, #0
   143b0:	movwgt	r1, #1
   143b4:	b	143c8 <table_compare_short@@Base+0x3c>
   143b8:	cmp	r1, #0
   143bc:	mvnne	r1, #0
   143c0:	b	143c8 <table_compare_short@@Base+0x3c>
   143c4:	mov	r1, #1
   143c8:	mov	r0, r1
   143cc:	bx	lr

000143d0 <table_compare_ushort@@Base>:
   143d0:	cmp	r0, #0
   143d4:	beq	143fc <table_compare_ushort@@Base+0x2c>
   143d8:	cmp	r1, #0
   143dc:	beq	14408 <table_compare_ushort@@Base+0x38>
   143e0:	ldrh	r2, [r1]
   143e4:	ldrh	r0, [r0]
   143e8:	mov	r1, #0
   143ec:	cmp	r0, r2
   143f0:	mvncc	r1, #0
   143f4:	movwhi	r1, #1
   143f8:	b	1440c <table_compare_ushort@@Base+0x3c>
   143fc:	cmp	r1, #0
   14400:	mvnne	r1, #0
   14404:	b	1440c <table_compare_ushort@@Base+0x3c>
   14408:	mov	r1, #1
   1440c:	mov	r0, r1
   14410:	bx	lr

00014414 <table_compare_long@@Base>:
   14414:	cmp	r0, #0
   14418:	beq	14440 <table_compare_long@@Base+0x2c>
   1441c:	cmp	r1, #0
   14420:	beq	1444c <table_compare_long@@Base+0x38>
   14424:	ldr	r2, [r1]
   14428:	ldr	r0, [r0]
   1442c:	mov	r1, #0
   14430:	cmp	r0, r2
   14434:	mvnlt	r1, #0
   14438:	movwgt	r1, #1
   1443c:	b	14450 <table_compare_long@@Base+0x3c>
   14440:	cmp	r1, #0
   14444:	mvnne	r1, #0
   14448:	b	14450 <table_compare_long@@Base+0x3c>
   1444c:	mov	r1, #1
   14450:	mov	r0, r1
   14454:	bx	lr

00014458 <table_compare_ulong@@Base>:
   14458:	cmp	r0, #0
   1445c:	beq	14484 <table_compare_ulong@@Base+0x2c>
   14460:	cmp	r1, #0
   14464:	beq	14490 <table_compare_ulong@@Base+0x38>
   14468:	ldr	r2, [r1]
   1446c:	ldr	r0, [r0]
   14470:	mov	r1, #0
   14474:	cmp	r0, r2
   14478:	mvncc	r1, #0
   1447c:	movwhi	r1, #1
   14480:	b	14494 <table_compare_ulong@@Base+0x3c>
   14484:	cmp	r1, #0
   14488:	mvnne	r1, #0
   1448c:	b	14494 <table_compare_ulong@@Base+0x3c>
   14490:	mov	r1, #1
   14494:	mov	r0, r1
   14498:	bx	lr

0001449c <table_compare_llong@@Base>:
   1449c:	cmp	r0, #0
   144a0:	beq	144e8 <table_compare_llong@@Base+0x4c>
   144a4:	cmp	r1, #0
   144a8:	beq	144f4 <table_compare_llong@@Base+0x58>
   144ac:	push	{r5, r7, fp, lr}
   144b0:	add	fp, sp, #8
   144b4:	ldm	r1, {r2, r7}
   144b8:	ldm	r0, {r0, r5}
   144bc:	mov	r1, #0
   144c0:	subs	r3, r0, r2
   144c4:	sbcs	r3, r5, r7
   144c8:	movwlt	r1, #1
   144cc:	cmp	r1, #0
   144d0:	mvnne	r1, #0
   144d4:	subs	r0, r2, r0
   144d8:	sbcs	r0, r7, r5
   144dc:	movwlt	r1, #1
   144e0:	pop	{r5, r7, fp, lr}
   144e4:	b	144f8 <table_compare_llong@@Base+0x5c>
   144e8:	cmp	r1, #0
   144ec:	mvnne	r1, #0
   144f0:	b	144f8 <table_compare_llong@@Base+0x5c>
   144f4:	mov	r1, #1
   144f8:	mov	r0, r1
   144fc:	bx	lr

00014500 <table_compare_ullong@@Base>:
   14500:	cmp	r0, #0
   14504:	beq	1452c <table_compare_ullong@@Base+0x2c>
   14508:	cmp	r1, #0
   1450c:	beq	14538 <table_compare_ullong@@Base+0x38>
   14510:	ldr	r2, [r1]
   14514:	ldr	r0, [r0]
   14518:	mov	r1, #0
   1451c:	cmp	r0, r2
   14520:	mvncc	r1, #0
   14524:	movwhi	r1, #1
   14528:	b	1453c <table_compare_ullong@@Base+0x3c>
   1452c:	cmp	r1, #0
   14530:	mvnne	r1, #0
   14534:	b	1453c <table_compare_ullong@@Base+0x3c>
   14538:	mov	r1, #1
   1453c:	mov	r0, r1
   14540:	bx	lr

00014544 <table_compare_float@@Base>:
   14544:	cmp	r0, #0
   14548:	beq	14574 <table_compare_float@@Base+0x30>
   1454c:	cmp	r1, #0
   14550:	beq	14580 <table_compare_float@@Base+0x3c>
   14554:	vldr	s0, [r1]
   14558:	vldr	s2, [r0]
   1455c:	mov	r1, #0
   14560:	vcmpe.f32	s2, s0
   14564:	vmrs	APSR_nzcv, fpscr
   14568:	mvnmi	r1, #0
   1456c:	movwgt	r1, #1
   14570:	b	14584 <table_compare_float@@Base+0x40>
   14574:	cmp	r1, #0
   14578:	mvnne	r1, #0
   1457c:	b	14584 <table_compare_float@@Base+0x40>
   14580:	mov	r1, #1
   14584:	mov	r0, r1
   14588:	bx	lr

0001458c <table_compare_double@@Base>:
   1458c:	cmp	r0, #0
   14590:	beq	145bc <table_compare_double@@Base+0x30>
   14594:	cmp	r1, #0
   14598:	beq	145c8 <table_compare_double@@Base+0x3c>
   1459c:	vldr	d16, [r1]
   145a0:	vldr	d17, [r0]
   145a4:	mov	r1, #0
   145a8:	vcmpe.f64	d17, d16
   145ac:	vmrs	APSR_nzcv, fpscr
   145b0:	mvnmi	r1, #0
   145b4:	movwgt	r1, #1
   145b8:	b	145cc <table_compare_double@@Base+0x40>
   145bc:	cmp	r1, #0
   145c0:	mvnne	r1, #0
   145c4:	b	145cc <table_compare_double@@Base+0x40>
   145c8:	mov	r1, #1
   145cc:	mov	r0, r1
   145d0:	bx	lr

000145d4 <table_compare_ldouble@@Base>:
   145d4:	cmp	r0, #0
   145d8:	beq	14604 <table_compare_ldouble@@Base+0x30>
   145dc:	cmp	r1, #0
   145e0:	beq	14610 <table_compare_ldouble@@Base+0x3c>
   145e4:	vldr	d16, [r1]
   145e8:	vldr	d17, [r0]
   145ec:	mov	r1, #0
   145f0:	vcmpe.f64	d17, d16
   145f4:	vmrs	APSR_nzcv, fpscr
   145f8:	mvnmi	r1, #0
   145fc:	movwgt	r1, #1
   14600:	b	14614 <table_compare_ldouble@@Base+0x40>
   14604:	cmp	r1, #0
   14608:	mvnne	r1, #0
   1460c:	b	14614 <table_compare_ldouble@@Base+0x40>
   14610:	mov	r1, #1
   14614:	mov	r0, r1
   14618:	bx	lr

0001461c <table_compare_char@@Base>:
   1461c:	cmp	r0, #0
   14620:	beq	14648 <table_compare_char@@Base+0x2c>
   14624:	cmp	r1, #0
   14628:	beq	14654 <table_compare_char@@Base+0x38>
   1462c:	ldrb	r2, [r1]
   14630:	ldrb	r0, [r0]
   14634:	mov	r1, #0
   14638:	cmp	r0, r2
   1463c:	mvncc	r1, #0
   14640:	movwhi	r1, #1
   14644:	b	14658 <table_compare_char@@Base+0x3c>
   14648:	cmp	r1, #0
   1464c:	mvnne	r1, #0
   14650:	b	14658 <table_compare_char@@Base+0x3c>
   14654:	mov	r1, #1
   14658:	mov	r0, r1
   1465c:	bx	lr

00014660 <table_compare_uchar@@Base>:
   14660:	cmp	r0, #0
   14664:	beq	1468c <table_compare_uchar@@Base+0x2c>
   14668:	cmp	r1, #0
   1466c:	beq	14698 <table_compare_uchar@@Base+0x38>
   14670:	ldrb	r2, [r1]
   14674:	ldrb	r0, [r0]
   14678:	mov	r1, #0
   1467c:	cmp	r0, r2
   14680:	mvncc	r1, #0
   14684:	movwhi	r1, #1
   14688:	b	1469c <table_compare_uchar@@Base+0x3c>
   1468c:	cmp	r1, #0
   14690:	mvnne	r1, #0
   14694:	b	1469c <table_compare_uchar@@Base+0x3c>
   14698:	mov	r1, #1
   1469c:	mov	r0, r1
   146a0:	bx	lr

000146a4 <table_compare_string@@Base>:
   146a4:	cmp	r0, #0
   146a8:	beq	146b8 <table_compare_string@@Base+0x14>
   146ac:	cmp	r1, #0
   146b0:	beq	146c4 <table_compare_string@@Base+0x20>
   146b4:	b	12f78 <strcmp@plt>
   146b8:	cmp	r1, #0
   146bc:	mvnne	r1, #0
   146c0:	b	146c8 <table_compare_string@@Base+0x24>
   146c4:	mov	r1, #1
   146c8:	mov	r0, r1
   146cc:	bx	lr

000146d0 <table_compare_ptr@@Base>:
   146d0:	mov	r2, #0
   146d4:	cmp	r0, r1
   146d8:	mvncc	r2, #0
   146dc:	movwhi	r2, #1
   146e0:	mov	r0, r2
   146e4:	bx	lr

000146e8 <table_get_default_compare_function_for_data_type@@Base>:
   146e8:	cmp	r0, #23
   146ec:	movwls	r1, #29328	; 0x7290
   146f0:	movhi	r0, #0
   146f4:	movtls	r1, #1
   146f8:	ldrls	r0, [r1, r0, lsl #2]
   146fc:	bx	lr

00014700 <table_subset_find@@Base>:
   14700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14704:	add	fp, sp, #28
   14708:	sub	sp, sp, #4
   1470c:	mov	r8, r3
   14710:	mov	r9, r2
   14714:	mov	r6, r1
   14718:	mov	r7, r0
   1471c:	bl	14038 <table_get_column_compare_function@@Base>
   14720:	ldr	r4, [fp, #12]
   14724:	ldr	r5, [fp, #8]
   14728:	mov	sl, r0
   1472c:	cmp	r8, #0
   14730:	beq	14778 <table_subset_find@@Base+0x78>
   14734:	mvn	r8, #0
   14738:	cmp	r4, r5
   1473c:	blt	147c8 <table_subset_find@@Base+0xc8>
   14740:	mov	r0, r7
   14744:	mov	r1, r4
   14748:	mov	r2, r6
   1474c:	bl	15b60 <table_get@@Base>
   14750:	mov	r1, r0
   14754:	mov	r0, r9
   14758:	blx	sl
   1475c:	cmp	r0, #0
   14760:	beq	147bc <table_subset_find@@Base+0xbc>
   14764:	sub	r0, r4, #1
   14768:	cmp	r4, r5
   1476c:	mov	r4, r0
   14770:	bgt	14740 <table_subset_find@@Base+0x40>
   14774:	b	147c8 <table_subset_find@@Base+0xc8>
   14778:	mvn	r8, #0
   1477c:	cmp	r5, r4
   14780:	bgt	147c8 <table_subset_find@@Base+0xc8>
   14784:	mov	r0, r7
   14788:	mov	r1, r5
   1478c:	mov	r2, r6
   14790:	bl	15b60 <table_get@@Base>
   14794:	mov	r1, r0
   14798:	mov	r0, r9
   1479c:	blx	sl
   147a0:	cmp	r0, #0
   147a4:	beq	147c4 <table_subset_find@@Base+0xc4>
   147a8:	add	r0, r5, #1
   147ac:	cmp	r5, r4
   147b0:	mov	r5, r0
   147b4:	blt	14784 <table_subset_find@@Base+0x84>
   147b8:	b	147c8 <table_subset_find@@Base+0xc8>
   147bc:	mov	r8, r4
   147c0:	b	147c8 <table_subset_find@@Base+0xc8>
   147c4:	mov	r8, r5
   147c8:	mov	r0, r8
   147cc:	sub	sp, fp, #28
   147d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000147d4 <table_find@@Base>:
   147d4:	push	{r4, r5, r6, r7, fp, lr}
   147d8:	add	fp, sp, #16
   147dc:	sub	sp, sp, #8
   147e0:	mov	r4, r3
   147e4:	mov	r5, r2
   147e8:	mov	r6, r1
   147ec:	mov	r7, r0
   147f0:	bl	15e34 <table_get_row_length@@Base>
   147f4:	sub	r0, r0, #1
   147f8:	mov	r1, #0
   147fc:	mov	r2, r5
   14800:	mov	r3, r4
   14804:	str	r1, [sp]
   14808:	str	r0, [sp, #4]
   1480c:	mov	r0, r7
   14810:	mov	r1, r6
   14814:	bl	14700 <table_subset_find@@Base>
   14818:	sub	sp, fp, #16
   1481c:	pop	{r4, r5, r6, r7, fp, pc}

00014820 <table_find_bool@@Base>:
   14820:	push	{r4, r5, r6, sl, fp, lr}
   14824:	add	fp, sp, #16
   14828:	sub	sp, sp, #16
   1482c:	mov	r4, r3
   14830:	mov	r5, r1
   14834:	mov	r6, r0
   14838:	strb	r2, [sp, #15]
   1483c:	bl	15e34 <table_get_row_length@@Base>
   14840:	sub	r0, r0, #1
   14844:	mov	r1, #0
   14848:	add	r2, sp, #15
   1484c:	mov	r3, r4
   14850:	str	r1, [sp]
   14854:	str	r0, [sp, #4]
   14858:	mov	r0, r6
   1485c:	mov	r1, r5
   14860:	bl	14700 <table_subset_find@@Base>
   14864:	sub	sp, fp, #16
   14868:	pop	{r4, r5, r6, sl, fp, pc}

0001486c <table_find_int@@Base>:
   1486c:	push	{r4, r5, r6, sl, fp, lr}
   14870:	add	fp, sp, #16
   14874:	sub	sp, sp, #16
   14878:	mov	r4, r3
   1487c:	mov	r5, r1
   14880:	mov	r6, r0
   14884:	str	r2, [sp, #12]
   14888:	bl	15e34 <table_get_row_length@@Base>
   1488c:	sub	r0, r0, #1
   14890:	mov	r1, #0
   14894:	add	r2, sp, #12
   14898:	mov	r3, r4
   1489c:	str	r1, [sp]
   148a0:	str	r0, [sp, #4]
   148a4:	mov	r0, r6
   148a8:	mov	r1, r5
   148ac:	bl	14700 <table_subset_find@@Base>
   148b0:	sub	sp, fp, #16
   148b4:	pop	{r4, r5, r6, sl, fp, pc}

000148b8 <table_find_uint@@Base>:
   148b8:	push	{r4, r5, r6, sl, fp, lr}
   148bc:	add	fp, sp, #16
   148c0:	sub	sp, sp, #16
   148c4:	mov	r4, r3
   148c8:	mov	r5, r1
   148cc:	mov	r6, r0
   148d0:	str	r2, [sp, #12]
   148d4:	bl	15e34 <table_get_row_length@@Base>
   148d8:	sub	r0, r0, #1
   148dc:	mov	r1, #0
   148e0:	add	r2, sp, #12
   148e4:	mov	r3, r4
   148e8:	str	r1, [sp]
   148ec:	str	r0, [sp, #4]
   148f0:	mov	r0, r6
   148f4:	mov	r1, r5
   148f8:	bl	14700 <table_subset_find@@Base>
   148fc:	sub	sp, fp, #16
   14900:	pop	{r4, r5, r6, sl, fp, pc}

00014904 <table_find_int8@@Base>:
   14904:	push	{r4, r5, r6, sl, fp, lr}
   14908:	add	fp, sp, #16
   1490c:	sub	sp, sp, #16
   14910:	mov	r4, r3
   14914:	mov	r5, r1
   14918:	mov	r6, r0
   1491c:	strb	r2, [sp, #15]
   14920:	bl	15e34 <table_get_row_length@@Base>
   14924:	sub	r0, r0, #1
   14928:	mov	r1, #0
   1492c:	add	r2, sp, #15
   14930:	mov	r3, r4
   14934:	str	r1, [sp]
   14938:	str	r0, [sp, #4]
   1493c:	mov	r0, r6
   14940:	mov	r1, r5
   14944:	bl	14700 <table_subset_find@@Base>
   14948:	sub	sp, fp, #16
   1494c:	pop	{r4, r5, r6, sl, fp, pc}

00014950 <table_find_uint8@@Base>:
   14950:	push	{r4, r5, r6, sl, fp, lr}
   14954:	add	fp, sp, #16
   14958:	sub	sp, sp, #16
   1495c:	mov	r4, r3
   14960:	mov	r5, r1
   14964:	mov	r6, r0
   14968:	strb	r2, [sp, #15]
   1496c:	bl	15e34 <table_get_row_length@@Base>
   14970:	sub	r0, r0, #1
   14974:	mov	r1, #0
   14978:	add	r2, sp, #15
   1497c:	mov	r3, r4
   14980:	str	r1, [sp]
   14984:	str	r0, [sp, #4]
   14988:	mov	r0, r6
   1498c:	mov	r1, r5
   14990:	bl	14700 <table_subset_find@@Base>
   14994:	sub	sp, fp, #16
   14998:	pop	{r4, r5, r6, sl, fp, pc}

0001499c <table_find_int16@@Base>:
   1499c:	push	{r4, r5, r6, sl, fp, lr}
   149a0:	add	fp, sp, #16
   149a4:	sub	sp, sp, #16
   149a8:	mov	r4, r3
   149ac:	mov	r5, r1
   149b0:	mov	r6, r0
   149b4:	strh	r2, [sp, #14]
   149b8:	bl	15e34 <table_get_row_length@@Base>
   149bc:	sub	r0, r0, #1
   149c0:	mov	r1, #0
   149c4:	add	r2, sp, #14
   149c8:	mov	r3, r4
   149cc:	str	r1, [sp]
   149d0:	str	r0, [sp, #4]
   149d4:	mov	r0, r6
   149d8:	mov	r1, r5
   149dc:	bl	14700 <table_subset_find@@Base>
   149e0:	sub	sp, fp, #16
   149e4:	pop	{r4, r5, r6, sl, fp, pc}

000149e8 <table_find_uint16@@Base>:
   149e8:	push	{r4, r5, r6, sl, fp, lr}
   149ec:	add	fp, sp, #16
   149f0:	sub	sp, sp, #16
   149f4:	mov	r4, r3
   149f8:	mov	r5, r1
   149fc:	mov	r6, r0
   14a00:	strh	r2, [sp, #14]
   14a04:	bl	15e34 <table_get_row_length@@Base>
   14a08:	sub	r0, r0, #1
   14a0c:	mov	r1, #0
   14a10:	add	r2, sp, #14
   14a14:	mov	r3, r4
   14a18:	str	r1, [sp]
   14a1c:	str	r0, [sp, #4]
   14a20:	mov	r0, r6
   14a24:	mov	r1, r5
   14a28:	bl	14700 <table_subset_find@@Base>
   14a2c:	sub	sp, fp, #16
   14a30:	pop	{r4, r5, r6, sl, fp, pc}

00014a34 <table_find_int32@@Base>:
   14a34:	push	{r4, r5, r6, sl, fp, lr}
   14a38:	add	fp, sp, #16
   14a3c:	sub	sp, sp, #16
   14a40:	mov	r4, r3
   14a44:	mov	r5, r1
   14a48:	mov	r6, r0
   14a4c:	str	r2, [sp, #12]
   14a50:	bl	15e34 <table_get_row_length@@Base>
   14a54:	sub	r0, r0, #1
   14a58:	mov	r1, #0
   14a5c:	add	r2, sp, #12
   14a60:	mov	r3, r4
   14a64:	str	r1, [sp]
   14a68:	str	r0, [sp, #4]
   14a6c:	mov	r0, r6
   14a70:	mov	r1, r5
   14a74:	bl	14700 <table_subset_find@@Base>
   14a78:	sub	sp, fp, #16
   14a7c:	pop	{r4, r5, r6, sl, fp, pc}

00014a80 <table_find_uint32@@Base>:
   14a80:	push	{r4, r5, r6, sl, fp, lr}
   14a84:	add	fp, sp, #16
   14a88:	sub	sp, sp, #16
   14a8c:	mov	r4, r3
   14a90:	mov	r5, r1
   14a94:	mov	r6, r0
   14a98:	str	r2, [sp, #12]
   14a9c:	bl	15e34 <table_get_row_length@@Base>
   14aa0:	sub	r0, r0, #1
   14aa4:	mov	r1, #0
   14aa8:	add	r2, sp, #12
   14aac:	mov	r3, r4
   14ab0:	str	r1, [sp]
   14ab4:	str	r0, [sp, #4]
   14ab8:	mov	r0, r6
   14abc:	mov	r1, r5
   14ac0:	bl	14700 <table_subset_find@@Base>
   14ac4:	sub	sp, fp, #16
   14ac8:	pop	{r4, r5, r6, sl, fp, pc}

00014acc <table_find_int64@@Base>:
   14acc:	push	{r4, r5, fp, lr}
   14ad0:	add	fp, sp, #8
   14ad4:	sub	sp, sp, #16
   14ad8:	mov	r4, r1
   14adc:	mov	r5, r0
   14ae0:	str	r3, [sp, #12]
   14ae4:	str	r2, [sp, #8]
   14ae8:	bl	15e34 <table_get_row_length@@Base>
   14aec:	ldr	r3, [fp, #8]
   14af0:	sub	r0, r0, #1
   14af4:	mov	r1, #0
   14af8:	add	r2, sp, #8
   14afc:	str	r1, [sp]
   14b00:	str	r0, [sp, #4]
   14b04:	mov	r0, r5
   14b08:	mov	r1, r4
   14b0c:	bl	14700 <table_subset_find@@Base>
   14b10:	sub	sp, fp, #8
   14b14:	pop	{r4, r5, fp, pc}

00014b18 <table_find_uint64@@Base>:
   14b18:	push	{r4, r5, fp, lr}
   14b1c:	add	fp, sp, #8
   14b20:	sub	sp, sp, #16
   14b24:	mov	r4, r1
   14b28:	mov	r5, r0
   14b2c:	str	r3, [sp, #12]
   14b30:	str	r2, [sp, #8]
   14b34:	bl	15e34 <table_get_row_length@@Base>
   14b38:	ldr	r3, [fp, #8]
   14b3c:	sub	r0, r0, #1
   14b40:	mov	r1, #0
   14b44:	add	r2, sp, #8
   14b48:	str	r1, [sp]
   14b4c:	str	r0, [sp, #4]
   14b50:	mov	r0, r5
   14b54:	mov	r1, r4
   14b58:	bl	14700 <table_subset_find@@Base>
   14b5c:	sub	sp, fp, #8
   14b60:	pop	{r4, r5, fp, pc}

00014b64 <table_find_short@@Base>:
   14b64:	push	{r4, r5, r6, sl, fp, lr}
   14b68:	add	fp, sp, #16
   14b6c:	sub	sp, sp, #16
   14b70:	mov	r4, r3
   14b74:	mov	r5, r1
   14b78:	mov	r6, r0
   14b7c:	strh	r2, [sp, #14]
   14b80:	bl	15e34 <table_get_row_length@@Base>
   14b84:	sub	r0, r0, #1
   14b88:	mov	r1, #0
   14b8c:	add	r2, sp, #14
   14b90:	mov	r3, r4
   14b94:	str	r1, [sp]
   14b98:	str	r0, [sp, #4]
   14b9c:	mov	r0, r6
   14ba0:	mov	r1, r5
   14ba4:	bl	14700 <table_subset_find@@Base>
   14ba8:	sub	sp, fp, #16
   14bac:	pop	{r4, r5, r6, sl, fp, pc}

00014bb0 <table_find_ushort@@Base>:
   14bb0:	push	{r4, r5, r6, sl, fp, lr}
   14bb4:	add	fp, sp, #16
   14bb8:	sub	sp, sp, #16
   14bbc:	mov	r4, r3
   14bc0:	mov	r5, r1
   14bc4:	mov	r6, r0
   14bc8:	strh	r2, [sp, #14]
   14bcc:	bl	15e34 <table_get_row_length@@Base>
   14bd0:	sub	r0, r0, #1
   14bd4:	mov	r1, #0
   14bd8:	add	r2, sp, #14
   14bdc:	mov	r3, r4
   14be0:	str	r1, [sp]
   14be4:	str	r0, [sp, #4]
   14be8:	mov	r0, r6
   14bec:	mov	r1, r5
   14bf0:	bl	14700 <table_subset_find@@Base>
   14bf4:	sub	sp, fp, #16
   14bf8:	pop	{r4, r5, r6, sl, fp, pc}

00014bfc <table_find_long@@Base>:
   14bfc:	push	{r4, r5, r6, sl, fp, lr}
   14c00:	add	fp, sp, #16
   14c04:	sub	sp, sp, #16
   14c08:	mov	r4, r3
   14c0c:	mov	r5, r1
   14c10:	mov	r6, r0
   14c14:	str	r2, [sp, #12]
   14c18:	bl	15e34 <table_get_row_length@@Base>
   14c1c:	sub	r0, r0, #1
   14c20:	mov	r1, #0
   14c24:	add	r2, sp, #12
   14c28:	mov	r3, r4
   14c2c:	str	r1, [sp]
   14c30:	str	r0, [sp, #4]
   14c34:	mov	r0, r6
   14c38:	mov	r1, r5
   14c3c:	bl	14700 <table_subset_find@@Base>
   14c40:	sub	sp, fp, #16
   14c44:	pop	{r4, r5, r6, sl, fp, pc}

00014c48 <table_find_ulong@@Base>:
   14c48:	push	{r4, r5, r6, sl, fp, lr}
   14c4c:	add	fp, sp, #16
   14c50:	sub	sp, sp, #16
   14c54:	mov	r4, r3
   14c58:	mov	r5, r1
   14c5c:	mov	r6, r0
   14c60:	str	r2, [sp, #12]
   14c64:	bl	15e34 <table_get_row_length@@Base>
   14c68:	sub	r0, r0, #1
   14c6c:	mov	r1, #0
   14c70:	add	r2, sp, #12
   14c74:	mov	r3, r4
   14c78:	str	r1, [sp]
   14c7c:	str	r0, [sp, #4]
   14c80:	mov	r0, r6
   14c84:	mov	r1, r5
   14c88:	bl	14700 <table_subset_find@@Base>
   14c8c:	sub	sp, fp, #16
   14c90:	pop	{r4, r5, r6, sl, fp, pc}

00014c94 <table_find_llong@@Base>:
   14c94:	push	{r4, r5, fp, lr}
   14c98:	add	fp, sp, #8
   14c9c:	sub	sp, sp, #16
   14ca0:	mov	r4, r1
   14ca4:	mov	r5, r0
   14ca8:	str	r3, [sp, #12]
   14cac:	str	r2, [sp, #8]
   14cb0:	bl	15e34 <table_get_row_length@@Base>
   14cb4:	ldr	r3, [fp, #8]
   14cb8:	sub	r0, r0, #1
   14cbc:	mov	r1, #0
   14cc0:	add	r2, sp, #8
   14cc4:	str	r1, [sp]
   14cc8:	str	r0, [sp, #4]
   14ccc:	mov	r0, r5
   14cd0:	mov	r1, r4
   14cd4:	bl	14700 <table_subset_find@@Base>
   14cd8:	sub	sp, fp, #8
   14cdc:	pop	{r4, r5, fp, pc}

00014ce0 <table_find_ullong@@Base>:
   14ce0:	push	{r4, r5, fp, lr}
   14ce4:	add	fp, sp, #8
   14ce8:	sub	sp, sp, #16
   14cec:	mov	r4, r1
   14cf0:	mov	r5, r0
   14cf4:	str	r3, [sp, #12]
   14cf8:	str	r2, [sp, #8]
   14cfc:	bl	15e34 <table_get_row_length@@Base>
   14d00:	ldr	r3, [fp, #8]
   14d04:	sub	r0, r0, #1
   14d08:	mov	r1, #0
   14d0c:	add	r2, sp, #8
   14d10:	str	r1, [sp]
   14d14:	str	r0, [sp, #4]
   14d18:	mov	r0, r5
   14d1c:	mov	r1, r4
   14d20:	bl	14700 <table_subset_find@@Base>
   14d24:	sub	sp, fp, #8
   14d28:	pop	{r4, r5, fp, pc}

00014d2c <table_find_float@@Base>:
   14d2c:	push	{r4, r5, r6, sl, fp, lr}
   14d30:	add	fp, sp, #16
   14d34:	sub	sp, sp, #16
   14d38:	mov	r4, r2
   14d3c:	mov	r5, r1
   14d40:	mov	r6, r0
   14d44:	vstr	s0, [sp, #12]
   14d48:	bl	15e34 <table_get_row_length@@Base>
   14d4c:	sub	r0, r0, #1
   14d50:	mov	r1, #0
   14d54:	add	r2, sp, #12
   14d58:	mov	r3, r4
   14d5c:	str	r1, [sp]
   14d60:	str	r0, [sp, #4]
   14d64:	mov	r0, r6
   14d68:	mov	r1, r5
   14d6c:	bl	14700 <table_subset_find@@Base>
   14d70:	sub	sp, fp, #16
   14d74:	pop	{r4, r5, r6, sl, fp, pc}

00014d78 <table_find_double@@Base>:
   14d78:	push	{r4, r5, r6, sl, fp, lr}
   14d7c:	add	fp, sp, #16
   14d80:	sub	sp, sp, #16
   14d84:	mov	r4, r2
   14d88:	mov	r5, r1
   14d8c:	mov	r6, r0
   14d90:	vstr	d0, [sp, #8]
   14d94:	bl	15e34 <table_get_row_length@@Base>
   14d98:	sub	r0, r0, #1
   14d9c:	mov	r1, #0
   14da0:	add	r2, sp, #8
   14da4:	mov	r3, r4
   14da8:	str	r1, [sp]
   14dac:	str	r0, [sp, #4]
   14db0:	mov	r0, r6
   14db4:	mov	r1, r5
   14db8:	bl	14700 <table_subset_find@@Base>
   14dbc:	sub	sp, fp, #16
   14dc0:	pop	{r4, r5, r6, sl, fp, pc}

00014dc4 <table_find_ldouble@@Base>:
   14dc4:	push	{r4, r5, r6, sl, fp, lr}
   14dc8:	add	fp, sp, #16
   14dcc:	sub	sp, sp, #16
   14dd0:	mov	r4, r2
   14dd4:	mov	r5, r1
   14dd8:	mov	r6, r0
   14ddc:	vstr	d0, [sp, #8]
   14de0:	bl	15e34 <table_get_row_length@@Base>
   14de4:	sub	r0, r0, #1
   14de8:	mov	r1, #0
   14dec:	add	r2, sp, #8
   14df0:	mov	r3, r4
   14df4:	str	r1, [sp]
   14df8:	str	r0, [sp, #4]
   14dfc:	mov	r0, r6
   14e00:	mov	r1, r5
   14e04:	bl	14700 <table_subset_find@@Base>
   14e08:	sub	sp, fp, #16
   14e0c:	pop	{r4, r5, r6, sl, fp, pc}

00014e10 <table_find_char@@Base>:
   14e10:	push	{r4, r5, r6, sl, fp, lr}
   14e14:	add	fp, sp, #16
   14e18:	sub	sp, sp, #16
   14e1c:	mov	r4, r3
   14e20:	mov	r5, r1
   14e24:	mov	r6, r0
   14e28:	strb	r2, [sp, #15]
   14e2c:	bl	15e34 <table_get_row_length@@Base>
   14e30:	sub	r0, r0, #1
   14e34:	mov	r1, #0
   14e38:	add	r2, sp, #15
   14e3c:	mov	r3, r4
   14e40:	str	r1, [sp]
   14e44:	str	r0, [sp, #4]
   14e48:	mov	r0, r6
   14e4c:	mov	r1, r5
   14e50:	bl	14700 <table_subset_find@@Base>
   14e54:	sub	sp, fp, #16
   14e58:	pop	{r4, r5, r6, sl, fp, pc}

00014e5c <table_find_uchar@@Base>:
   14e5c:	push	{r4, r5, r6, sl, fp, lr}
   14e60:	add	fp, sp, #16
   14e64:	sub	sp, sp, #16
   14e68:	mov	r4, r3
   14e6c:	mov	r5, r1
   14e70:	mov	r6, r0
   14e74:	strb	r2, [sp, #15]
   14e78:	bl	15e34 <table_get_row_length@@Base>
   14e7c:	sub	r0, r0, #1
   14e80:	mov	r1, #0
   14e84:	add	r2, sp, #15
   14e88:	mov	r3, r4
   14e8c:	str	r1, [sp]
   14e90:	str	r0, [sp, #4]
   14e94:	mov	r0, r6
   14e98:	mov	r1, r5
   14e9c:	bl	14700 <table_subset_find@@Base>
   14ea0:	sub	sp, fp, #16
   14ea4:	pop	{r4, r5, r6, sl, fp, pc}

00014ea8 <table_find_string@@Base>:
   14ea8:	push	{r4, r5, r6, sl, fp, lr}
   14eac:	add	fp, sp, #16
   14eb0:	sub	sp, sp, #16
   14eb4:	mov	r4, r3
   14eb8:	mov	r5, r1
   14ebc:	mov	r6, r0
   14ec0:	str	r2, [sp, #12]
   14ec4:	bl	15e34 <table_get_row_length@@Base>
   14ec8:	sub	r0, r0, #1
   14ecc:	mov	r1, #0
   14ed0:	add	r2, sp, #12
   14ed4:	mov	r3, r4
   14ed8:	str	r1, [sp]
   14edc:	str	r0, [sp, #4]
   14ee0:	mov	r0, r6
   14ee4:	mov	r1, r5
   14ee8:	bl	14700 <table_subset_find@@Base>
   14eec:	sub	sp, fp, #16
   14ef0:	pop	{r4, r5, r6, sl, fp, pc}

00014ef4 <table_find_ptr@@Base>:
   14ef4:	push	{r4, r5, r6, r7, fp, lr}
   14ef8:	add	fp, sp, #16
   14efc:	sub	sp, sp, #8
   14f00:	mov	r4, r3
   14f04:	mov	r5, r2
   14f08:	mov	r6, r1
   14f0c:	mov	r7, r0
   14f10:	bl	15e34 <table_get_row_length@@Base>
   14f14:	sub	r0, r0, #1
   14f18:	mov	r1, #0
   14f1c:	mov	r2, r5
   14f20:	mov	r3, r4
   14f24:	str	r1, [sp]
   14f28:	str	r0, [sp, #4]
   14f2c:	mov	r0, r7
   14f30:	mov	r1, r6
   14f34:	bl	14700 <table_subset_find@@Base>
   14f38:	sub	sp, fp, #16
   14f3c:	pop	{r4, r5, r6, r7, fp, pc}

00014f40 <table_sorted_find@@Base>:
   14f40:	push	{r4, r5, r6, r7, fp, lr}
   14f44:	add	fp, sp, #16
   14f48:	sub	sp, sp, #8
   14f4c:	mov	r4, r3
   14f50:	mov	r5, r2
   14f54:	mov	r6, r1
   14f58:	mov	r7, r0
   14f5c:	bl	15e34 <table_get_row_length@@Base>
   14f60:	sub	r0, r0, #1
   14f64:	mov	r1, #0
   14f68:	mov	r2, r5
   14f6c:	mov	r3, r4
   14f70:	str	r1, [sp]
   14f74:	str	r0, [sp, #4]
   14f78:	mov	r0, r7
   14f7c:	mov	r1, r6
   14f80:	bl	14f8c <table_sorted_subset_find@@Base>
   14f84:	sub	sp, fp, #16
   14f88:	pop	{r4, r5, r6, r7, fp, pc}

00014f8c <table_sorted_subset_find@@Base>:
   14f8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f90:	add	fp, sp, #28
   14f94:	push	{r3}		; (str r3, [sp, #-4]!)
   14f98:	ldr	r6, [fp, #12]
   14f9c:	ldr	r8, [fp, #8]
   14fa0:	mov	r9, r2
   14fa4:	mov	sl, r1
   14fa8:	mov	r7, r0
   14fac:	b	14fcc <table_sorted_subset_find@@Base+0x40>
   14fb0:	cmn	r0, #1
   14fb4:	bne	14fc0 <table_sorted_subset_find@@Base+0x34>
   14fb8:	sub	r6, r5, #1
   14fbc:	b	14fcc <table_sorted_subset_find@@Base+0x40>
   14fc0:	cmp	r0, #1
   14fc4:	bne	15010 <table_sorted_subset_find@@Base+0x84>
   14fc8:	mov	r8, r5
   14fcc:	mov	r0, r7
   14fd0:	mov	r1, sl
   14fd4:	bl	14038 <table_get_column_compare_function@@Base>
   14fd8:	mov	r4, r0
   14fdc:	sub	r0, r6, r8
   14fe0:	mov	r2, sl
   14fe4:	add	r0, r0, r0, lsr #31
   14fe8:	add	r5, r8, r0, asr #1
   14fec:	mov	r0, r7
   14ff0:	mov	r1, r5
   14ff4:	bl	15b60 <table_get@@Base>
   14ff8:	mov	r1, r0
   14ffc:	mov	r0, r9
   15000:	blx	r4
   15004:	cmp	r6, r8
   15008:	bge	14fb0 <table_sorted_subset_find@@Base+0x24>
   1500c:	b	1505c <table_sorted_subset_find@@Base+0xd0>
   15010:	cmp	r0, #0
   15014:	bne	1505c <table_sorted_subset_find@@Base+0xd0>
   15018:	ldr	r8, [sp]
   1501c:	add	r6, r5, #1
   15020:	cmp	r8, #0
   15024:	mov	r0, r7
   15028:	mov	r2, sl
   1502c:	subeq	r6, r5, #1
   15030:	mov	r1, r6
   15034:	bl	15b60 <table_get@@Base>
   15038:	mov	r1, r9
   1503c:	blx	r4
   15040:	cmp	r0, #0
   15044:	mov	r5, r6
   15048:	beq	1501c <table_sorted_subset_find@@Base+0x90>
   1504c:	cmp	r8, #0
   15050:	subne	r0, r6, #1
   15054:	addeq	r0, r6, #1
   15058:	b	15060 <table_sorted_subset_find@@Base+0xd4>
   1505c:	rsb	r0, r5, #0
   15060:	sub	sp, fp, #28
   15064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015068 <table_sorted_find_int@@Base>:
   15068:	push	{r4, r5, r6, sl, fp, lr}
   1506c:	add	fp, sp, #16
   15070:	sub	sp, sp, #16
   15074:	mov	r4, r3
   15078:	mov	r5, r1
   1507c:	mov	r6, r0
   15080:	str	r2, [sp, #12]
   15084:	bl	15e34 <table_get_row_length@@Base>
   15088:	sub	r0, r0, #1
   1508c:	mov	r1, #0
   15090:	add	r2, sp, #12
   15094:	mov	r3, r4
   15098:	str	r1, [sp]
   1509c:	str	r0, [sp, #4]
   150a0:	mov	r0, r6
   150a4:	mov	r1, r5
   150a8:	bl	14f8c <table_sorted_subset_find@@Base>
   150ac:	sub	sp, fp, #16
   150b0:	pop	{r4, r5, r6, sl, fp, pc}

000150b4 <table_sorted_find_uint@@Base>:
   150b4:	push	{r4, r5, r6, sl, fp, lr}
   150b8:	add	fp, sp, #16
   150bc:	sub	sp, sp, #16
   150c0:	mov	r4, r3
   150c4:	mov	r5, r1
   150c8:	mov	r6, r0
   150cc:	str	r2, [sp, #12]
   150d0:	bl	15e34 <table_get_row_length@@Base>
   150d4:	sub	r0, r0, #1
   150d8:	mov	r1, #0
   150dc:	add	r2, sp, #12
   150e0:	mov	r3, r4
   150e4:	str	r1, [sp]
   150e8:	str	r0, [sp, #4]
   150ec:	mov	r0, r6
   150f0:	mov	r1, r5
   150f4:	bl	14f8c <table_sorted_subset_find@@Base>
   150f8:	sub	sp, fp, #16
   150fc:	pop	{r4, r5, r6, sl, fp, pc}

00015100 <table_sorted_find_int8@@Base>:
   15100:	push	{r4, r5, r6, sl, fp, lr}
   15104:	add	fp, sp, #16
   15108:	sub	sp, sp, #16
   1510c:	mov	r4, r3
   15110:	mov	r5, r1
   15114:	mov	r6, r0
   15118:	strb	r2, [sp, #15]
   1511c:	bl	15e34 <table_get_row_length@@Base>
   15120:	sub	r0, r0, #1
   15124:	mov	r1, #0
   15128:	add	r2, sp, #15
   1512c:	mov	r3, r4
   15130:	str	r1, [sp]
   15134:	str	r0, [sp, #4]
   15138:	mov	r0, r6
   1513c:	mov	r1, r5
   15140:	bl	14f8c <table_sorted_subset_find@@Base>
   15144:	sub	sp, fp, #16
   15148:	pop	{r4, r5, r6, sl, fp, pc}

0001514c <table_sorted_find_uint8@@Base>:
   1514c:	push	{r4, r5, r6, sl, fp, lr}
   15150:	add	fp, sp, #16
   15154:	sub	sp, sp, #16
   15158:	mov	r4, r3
   1515c:	mov	r5, r1
   15160:	mov	r6, r0
   15164:	strb	r2, [sp, #15]
   15168:	bl	15e34 <table_get_row_length@@Base>
   1516c:	sub	r0, r0, #1
   15170:	mov	r1, #0
   15174:	add	r2, sp, #15
   15178:	mov	r3, r4
   1517c:	str	r1, [sp]
   15180:	str	r0, [sp, #4]
   15184:	mov	r0, r6
   15188:	mov	r1, r5
   1518c:	bl	14f8c <table_sorted_subset_find@@Base>
   15190:	sub	sp, fp, #16
   15194:	pop	{r4, r5, r6, sl, fp, pc}

00015198 <table_sorted_find_int16@@Base>:
   15198:	push	{r4, r5, r6, sl, fp, lr}
   1519c:	add	fp, sp, #16
   151a0:	sub	sp, sp, #16
   151a4:	mov	r4, r3
   151a8:	mov	r5, r1
   151ac:	mov	r6, r0
   151b0:	strh	r2, [sp, #14]
   151b4:	bl	15e34 <table_get_row_length@@Base>
   151b8:	sub	r0, r0, #1
   151bc:	mov	r1, #0
   151c0:	add	r2, sp, #14
   151c4:	mov	r3, r4
   151c8:	str	r1, [sp]
   151cc:	str	r0, [sp, #4]
   151d0:	mov	r0, r6
   151d4:	mov	r1, r5
   151d8:	bl	14f8c <table_sorted_subset_find@@Base>
   151dc:	sub	sp, fp, #16
   151e0:	pop	{r4, r5, r6, sl, fp, pc}

000151e4 <table_sorted_find_uint16@@Base>:
   151e4:	push	{r4, r5, r6, sl, fp, lr}
   151e8:	add	fp, sp, #16
   151ec:	sub	sp, sp, #16
   151f0:	mov	r4, r3
   151f4:	mov	r5, r1
   151f8:	mov	r6, r0
   151fc:	strh	r2, [sp, #14]
   15200:	bl	15e34 <table_get_row_length@@Base>
   15204:	sub	r0, r0, #1
   15208:	mov	r1, #0
   1520c:	add	r2, sp, #14
   15210:	mov	r3, r4
   15214:	str	r1, [sp]
   15218:	str	r0, [sp, #4]
   1521c:	mov	r0, r6
   15220:	mov	r1, r5
   15224:	bl	14f8c <table_sorted_subset_find@@Base>
   15228:	sub	sp, fp, #16
   1522c:	pop	{r4, r5, r6, sl, fp, pc}

00015230 <table_sorted_find_int32@@Base>:
   15230:	push	{r4, r5, r6, sl, fp, lr}
   15234:	add	fp, sp, #16
   15238:	sub	sp, sp, #16
   1523c:	mov	r4, r3
   15240:	mov	r5, r1
   15244:	mov	r6, r0
   15248:	str	r2, [sp, #12]
   1524c:	bl	15e34 <table_get_row_length@@Base>
   15250:	sub	r0, r0, #1
   15254:	mov	r1, #0
   15258:	add	r2, sp, #12
   1525c:	mov	r3, r4
   15260:	str	r1, [sp]
   15264:	str	r0, [sp, #4]
   15268:	mov	r0, r6
   1526c:	mov	r1, r5
   15270:	bl	14f8c <table_sorted_subset_find@@Base>
   15274:	sub	sp, fp, #16
   15278:	pop	{r4, r5, r6, sl, fp, pc}

0001527c <table_sorted_find_uint32@@Base>:
   1527c:	push	{r4, r5, r6, sl, fp, lr}
   15280:	add	fp, sp, #16
   15284:	sub	sp, sp, #16
   15288:	mov	r4, r3
   1528c:	mov	r5, r1
   15290:	mov	r6, r0
   15294:	str	r2, [sp, #12]
   15298:	bl	15e34 <table_get_row_length@@Base>
   1529c:	sub	r0, r0, #1
   152a0:	mov	r1, #0
   152a4:	add	r2, sp, #12
   152a8:	mov	r3, r4
   152ac:	str	r1, [sp]
   152b0:	str	r0, [sp, #4]
   152b4:	mov	r0, r6
   152b8:	mov	r1, r5
   152bc:	bl	14f8c <table_sorted_subset_find@@Base>
   152c0:	sub	sp, fp, #16
   152c4:	pop	{r4, r5, r6, sl, fp, pc}

000152c8 <table_sorted_find_int64@@Base>:
   152c8:	push	{r4, r5, fp, lr}
   152cc:	add	fp, sp, #8
   152d0:	sub	sp, sp, #16
   152d4:	mov	r4, r1
   152d8:	mov	r5, r0
   152dc:	str	r3, [sp, #12]
   152e0:	str	r2, [sp, #8]
   152e4:	bl	15e34 <table_get_row_length@@Base>
   152e8:	ldr	r3, [fp, #8]
   152ec:	sub	r0, r0, #1
   152f0:	mov	r1, #0
   152f4:	add	r2, sp, #8
   152f8:	str	r1, [sp]
   152fc:	str	r0, [sp, #4]
   15300:	mov	r0, r5
   15304:	mov	r1, r4
   15308:	bl	14f8c <table_sorted_subset_find@@Base>
   1530c:	sub	sp, fp, #8
   15310:	pop	{r4, r5, fp, pc}

00015314 <table_sorted_find_uint64@@Base>:
   15314:	push	{r4, r5, fp, lr}
   15318:	add	fp, sp, #8
   1531c:	sub	sp, sp, #16
   15320:	mov	r4, r1
   15324:	mov	r5, r0
   15328:	str	r3, [sp, #12]
   1532c:	str	r2, [sp, #8]
   15330:	bl	15e34 <table_get_row_length@@Base>
   15334:	ldr	r3, [fp, #8]
   15338:	sub	r0, r0, #1
   1533c:	mov	r1, #0
   15340:	add	r2, sp, #8
   15344:	str	r1, [sp]
   15348:	str	r0, [sp, #4]
   1534c:	mov	r0, r5
   15350:	mov	r1, r4
   15354:	bl	14f8c <table_sorted_subset_find@@Base>
   15358:	sub	sp, fp, #8
   1535c:	pop	{r4, r5, fp, pc}

00015360 <table_sorted_find_short@@Base>:
   15360:	push	{r4, r5, r6, sl, fp, lr}
   15364:	add	fp, sp, #16
   15368:	sub	sp, sp, #16
   1536c:	mov	r4, r3
   15370:	mov	r5, r1
   15374:	mov	r6, r0
   15378:	strh	r2, [sp, #14]
   1537c:	bl	15e34 <table_get_row_length@@Base>
   15380:	sub	r0, r0, #1
   15384:	mov	r1, #0
   15388:	add	r2, sp, #14
   1538c:	mov	r3, r4
   15390:	str	r1, [sp]
   15394:	str	r0, [sp, #4]
   15398:	mov	r0, r6
   1539c:	mov	r1, r5
   153a0:	bl	14f8c <table_sorted_subset_find@@Base>
   153a4:	sub	sp, fp, #16
   153a8:	pop	{r4, r5, r6, sl, fp, pc}

000153ac <table_sorted_find_ushort@@Base>:
   153ac:	push	{r4, r5, r6, sl, fp, lr}
   153b0:	add	fp, sp, #16
   153b4:	sub	sp, sp, #16
   153b8:	mov	r4, r3
   153bc:	mov	r5, r1
   153c0:	mov	r6, r0
   153c4:	strh	r2, [sp, #14]
   153c8:	bl	15e34 <table_get_row_length@@Base>
   153cc:	sub	r0, r0, #1
   153d0:	mov	r1, #0
   153d4:	add	r2, sp, #14
   153d8:	mov	r3, r4
   153dc:	str	r1, [sp]
   153e0:	str	r0, [sp, #4]
   153e4:	mov	r0, r6
   153e8:	mov	r1, r5
   153ec:	bl	14f8c <table_sorted_subset_find@@Base>
   153f0:	sub	sp, fp, #16
   153f4:	pop	{r4, r5, r6, sl, fp, pc}

000153f8 <table_sorted_find_long@@Base>:
   153f8:	push	{r4, r5, r6, sl, fp, lr}
   153fc:	add	fp, sp, #16
   15400:	sub	sp, sp, #16
   15404:	mov	r4, r3
   15408:	mov	r5, r1
   1540c:	mov	r6, r0
   15410:	str	r2, [sp, #12]
   15414:	bl	15e34 <table_get_row_length@@Base>
   15418:	sub	r0, r0, #1
   1541c:	mov	r1, #0
   15420:	add	r2, sp, #12
   15424:	mov	r3, r4
   15428:	str	r1, [sp]
   1542c:	str	r0, [sp, #4]
   15430:	mov	r0, r6
   15434:	mov	r1, r5
   15438:	bl	14f8c <table_sorted_subset_find@@Base>
   1543c:	sub	sp, fp, #16
   15440:	pop	{r4, r5, r6, sl, fp, pc}

00015444 <table_sorted_find_ulong@@Base>:
   15444:	push	{r4, r5, r6, sl, fp, lr}
   15448:	add	fp, sp, #16
   1544c:	sub	sp, sp, #16
   15450:	mov	r4, r3
   15454:	mov	r5, r1
   15458:	mov	r6, r0
   1545c:	str	r2, [sp, #12]
   15460:	bl	15e34 <table_get_row_length@@Base>
   15464:	sub	r0, r0, #1
   15468:	mov	r1, #0
   1546c:	add	r2, sp, #12
   15470:	mov	r3, r4
   15474:	str	r1, [sp]
   15478:	str	r0, [sp, #4]
   1547c:	mov	r0, r6
   15480:	mov	r1, r5
   15484:	bl	14f8c <table_sorted_subset_find@@Base>
   15488:	sub	sp, fp, #16
   1548c:	pop	{r4, r5, r6, sl, fp, pc}

00015490 <table_sorted_find_llong@@Base>:
   15490:	push	{r4, r5, fp, lr}
   15494:	add	fp, sp, #8
   15498:	sub	sp, sp, #16
   1549c:	mov	r4, r1
   154a0:	mov	r5, r0
   154a4:	str	r3, [sp, #12]
   154a8:	str	r2, [sp, #8]
   154ac:	bl	15e34 <table_get_row_length@@Base>
   154b0:	ldr	r3, [fp, #8]
   154b4:	sub	r0, r0, #1
   154b8:	mov	r1, #0
   154bc:	add	r2, sp, #8
   154c0:	str	r1, [sp]
   154c4:	str	r0, [sp, #4]
   154c8:	mov	r0, r5
   154cc:	mov	r1, r4
   154d0:	bl	14f8c <table_sorted_subset_find@@Base>
   154d4:	sub	sp, fp, #8
   154d8:	pop	{r4, r5, fp, pc}

000154dc <table_sorted_find_ullong@@Base>:
   154dc:	push	{r4, r5, fp, lr}
   154e0:	add	fp, sp, #8
   154e4:	sub	sp, sp, #16
   154e8:	mov	r4, r1
   154ec:	mov	r5, r0
   154f0:	str	r3, [sp, #12]
   154f4:	str	r2, [sp, #8]
   154f8:	bl	15e34 <table_get_row_length@@Base>
   154fc:	ldr	r3, [fp, #8]
   15500:	sub	r0, r0, #1
   15504:	mov	r1, #0
   15508:	add	r2, sp, #8
   1550c:	str	r1, [sp]
   15510:	str	r0, [sp, #4]
   15514:	mov	r0, r5
   15518:	mov	r1, r4
   1551c:	bl	14f8c <table_sorted_subset_find@@Base>
   15520:	sub	sp, fp, #8
   15524:	pop	{r4, r5, fp, pc}

00015528 <table_sorted_find_float@@Base>:
   15528:	push	{r4, r5, r6, sl, fp, lr}
   1552c:	add	fp, sp, #16
   15530:	sub	sp, sp, #16
   15534:	mov	r4, r2
   15538:	mov	r5, r1
   1553c:	mov	r6, r0
   15540:	vstr	s0, [sp, #12]
   15544:	bl	15e34 <table_get_row_length@@Base>
   15548:	sub	r0, r0, #1
   1554c:	mov	r1, #0
   15550:	add	r2, sp, #12
   15554:	mov	r3, r4
   15558:	str	r1, [sp]
   1555c:	str	r0, [sp, #4]
   15560:	mov	r0, r6
   15564:	mov	r1, r5
   15568:	bl	14f8c <table_sorted_subset_find@@Base>
   1556c:	sub	sp, fp, #16
   15570:	pop	{r4, r5, r6, sl, fp, pc}

00015574 <table_sorted_find_double@@Base>:
   15574:	push	{r4, r5, r6, sl, fp, lr}
   15578:	add	fp, sp, #16
   1557c:	sub	sp, sp, #16
   15580:	mov	r4, r2
   15584:	mov	r5, r1
   15588:	mov	r6, r0
   1558c:	vstr	d0, [sp, #8]
   15590:	bl	15e34 <table_get_row_length@@Base>
   15594:	sub	r0, r0, #1
   15598:	mov	r1, #0
   1559c:	add	r2, sp, #8
   155a0:	mov	r3, r4
   155a4:	str	r1, [sp]
   155a8:	str	r0, [sp, #4]
   155ac:	mov	r0, r6
   155b0:	mov	r1, r5
   155b4:	bl	14f8c <table_sorted_subset_find@@Base>
   155b8:	sub	sp, fp, #16
   155bc:	pop	{r4, r5, r6, sl, fp, pc}

000155c0 <table_sorted_find_ldouble@@Base>:
   155c0:	push	{r4, r5, r6, sl, fp, lr}
   155c4:	add	fp, sp, #16
   155c8:	sub	sp, sp, #16
   155cc:	mov	r4, r2
   155d0:	mov	r5, r1
   155d4:	mov	r6, r0
   155d8:	vstr	d0, [sp, #8]
   155dc:	bl	15e34 <table_get_row_length@@Base>
   155e0:	sub	r0, r0, #1
   155e4:	mov	r1, #0
   155e8:	add	r2, sp, #8
   155ec:	mov	r3, r4
   155f0:	str	r1, [sp]
   155f4:	str	r0, [sp, #4]
   155f8:	mov	r0, r6
   155fc:	mov	r1, r5
   15600:	bl	14f8c <table_sorted_subset_find@@Base>
   15604:	sub	sp, fp, #16
   15608:	pop	{r4, r5, r6, sl, fp, pc}

0001560c <table_sorted_find_char@@Base>:
   1560c:	push	{r4, r5, r6, sl, fp, lr}
   15610:	add	fp, sp, #16
   15614:	sub	sp, sp, #16
   15618:	mov	r4, r3
   1561c:	mov	r5, r1
   15620:	mov	r6, r0
   15624:	strb	r2, [sp, #15]
   15628:	bl	15e34 <table_get_row_length@@Base>
   1562c:	sub	r0, r0, #1
   15630:	mov	r1, #0
   15634:	add	r2, sp, #15
   15638:	mov	r3, r4
   1563c:	str	r1, [sp]
   15640:	str	r0, [sp, #4]
   15644:	mov	r0, r6
   15648:	mov	r1, r5
   1564c:	bl	14f8c <table_sorted_subset_find@@Base>
   15650:	sub	sp, fp, #16
   15654:	pop	{r4, r5, r6, sl, fp, pc}

00015658 <table_sorted_find_uchar@@Base>:
   15658:	push	{r4, r5, r6, sl, fp, lr}
   1565c:	add	fp, sp, #16
   15660:	sub	sp, sp, #16
   15664:	mov	r4, r3
   15668:	mov	r5, r1
   1566c:	mov	r6, r0
   15670:	strb	r2, [sp, #15]
   15674:	bl	15e34 <table_get_row_length@@Base>
   15678:	sub	r0, r0, #1
   1567c:	mov	r1, #0
   15680:	add	r2, sp, #15
   15684:	mov	r3, r4
   15688:	str	r1, [sp]
   1568c:	str	r0, [sp, #4]
   15690:	mov	r0, r6
   15694:	mov	r1, r5
   15698:	bl	14f8c <table_sorted_subset_find@@Base>
   1569c:	sub	sp, fp, #16
   156a0:	pop	{r4, r5, r6, sl, fp, pc}

000156a4 <table_sorted_find_string@@Base>:
   156a4:	push	{r4, r5, r6, r7, fp, lr}
   156a8:	add	fp, sp, #16
   156ac:	sub	sp, sp, #8
   156b0:	mov	r4, r3
   156b4:	mov	r5, r2
   156b8:	mov	r6, r1
   156bc:	mov	r7, r0
   156c0:	bl	15e34 <table_get_row_length@@Base>
   156c4:	sub	r0, r0, #1
   156c8:	mov	r1, #0
   156cc:	mov	r2, r5
   156d0:	mov	r3, r4
   156d4:	str	r1, [sp]
   156d8:	str	r0, [sp, #4]
   156dc:	mov	r0, r7
   156e0:	mov	r1, r6
   156e4:	bl	14f8c <table_sorted_subset_find@@Base>
   156e8:	sub	sp, fp, #16
   156ec:	pop	{r4, r5, r6, r7, fp, pc}

000156f0 <table_sorted_find_ptr@@Base>:
   156f0:	push	{r4, r5, r6, r7, fp, lr}
   156f4:	add	fp, sp, #16
   156f8:	sub	sp, sp, #8
   156fc:	mov	r4, r3
   15700:	mov	r5, r2
   15704:	mov	r6, r1
   15708:	mov	r7, r0
   1570c:	bl	15e34 <table_get_row_length@@Base>
   15710:	sub	r0, r0, #1
   15714:	mov	r1, #0
   15718:	mov	r2, r5
   1571c:	mov	r3, r4
   15720:	str	r1, [sp]
   15724:	str	r0, [sp, #4]
   15728:	mov	r0, r7
   1572c:	mov	r1, r6
   15730:	bl	14f8c <table_sorted_subset_find@@Base>
   15734:	sub	sp, fp, #16
   15738:	pop	{r4, r5, r6, r7, fp, pc}

0001573c <table_sorted_subset_find_int@@Base>:
   1573c:	push	{fp, lr}
   15740:	mov	fp, sp
   15744:	sub	sp, sp, #16
   15748:	str	r2, [fp, #-4]
   1574c:	ldr	r2, [fp, #12]
   15750:	str	r2, [sp, #4]
   15754:	ldr	r2, [fp, #8]
   15758:	str	r2, [sp]
   1575c:	sub	r2, fp, #4
   15760:	bl	14f8c <table_sorted_subset_find@@Base>
   15764:	mov	sp, fp
   15768:	pop	{fp, pc}

0001576c <table_sorted_subset_find_uint@@Base>:
   1576c:	push	{fp, lr}
   15770:	mov	fp, sp
   15774:	sub	sp, sp, #16
   15778:	str	r2, [fp, #-4]
   1577c:	ldr	r2, [fp, #12]
   15780:	str	r2, [sp, #4]
   15784:	ldr	r2, [fp, #8]
   15788:	str	r2, [sp]
   1578c:	sub	r2, fp, #4
   15790:	bl	14f8c <table_sorted_subset_find@@Base>
   15794:	mov	sp, fp
   15798:	pop	{fp, pc}

0001579c <table_sorted_subset_find_int8@@Base>:
   1579c:	push	{fp, lr}
   157a0:	mov	fp, sp
   157a4:	sub	sp, sp, #16
   157a8:	strb	r2, [fp, #-1]
   157ac:	ldr	r2, [fp, #12]
   157b0:	str	r2, [sp, #4]
   157b4:	ldr	r2, [fp, #8]
   157b8:	str	r2, [sp]
   157bc:	sub	r2, fp, #1
   157c0:	bl	14f8c <table_sorted_subset_find@@Base>
   157c4:	mov	sp, fp
   157c8:	pop	{fp, pc}

000157cc <table_sorted_subset_find_uint8@@Base>:
   157cc:	push	{fp, lr}
   157d0:	mov	fp, sp
   157d4:	sub	sp, sp, #16
   157d8:	strb	r2, [fp, #-1]
   157dc:	ldr	r2, [fp, #12]
   157e0:	str	r2, [sp, #4]
   157e4:	ldr	r2, [fp, #8]
   157e8:	str	r2, [sp]
   157ec:	sub	r2, fp, #1
   157f0:	bl	14f8c <table_sorted_subset_find@@Base>
   157f4:	mov	sp, fp
   157f8:	pop	{fp, pc}

000157fc <table_sorted_subset_find_int16@@Base>:
   157fc:	push	{fp, lr}
   15800:	mov	fp, sp
   15804:	sub	sp, sp, #16
   15808:	strh	r2, [fp, #-2]
   1580c:	ldr	r2, [fp, #12]
   15810:	str	r2, [sp, #4]
   15814:	ldr	r2, [fp, #8]
   15818:	str	r2, [sp]
   1581c:	sub	r2, fp, #2
   15820:	bl	14f8c <table_sorted_subset_find@@Base>
   15824:	mov	sp, fp
   15828:	pop	{fp, pc}

0001582c <table_sorted_subset_find_uint16@@Base>:
   1582c:	push	{fp, lr}
   15830:	mov	fp, sp
   15834:	sub	sp, sp, #16
   15838:	strh	r2, [fp, #-2]
   1583c:	ldr	r2, [fp, #12]
   15840:	str	r2, [sp, #4]
   15844:	ldr	r2, [fp, #8]
   15848:	str	r2, [sp]
   1584c:	sub	r2, fp, #2
   15850:	bl	14f8c <table_sorted_subset_find@@Base>
   15854:	mov	sp, fp
   15858:	pop	{fp, pc}

0001585c <table_sorted_subset_find_int32@@Base>:
   1585c:	push	{fp, lr}
   15860:	mov	fp, sp
   15864:	sub	sp, sp, #16
   15868:	str	r2, [fp, #-4]
   1586c:	ldr	r2, [fp, #12]
   15870:	str	r2, [sp, #4]
   15874:	ldr	r2, [fp, #8]
   15878:	str	r2, [sp]
   1587c:	sub	r2, fp, #4
   15880:	bl	14f8c <table_sorted_subset_find@@Base>
   15884:	mov	sp, fp
   15888:	pop	{fp, pc}

0001588c <table_sorted_subset_find_uint32@@Base>:
   1588c:	push	{fp, lr}
   15890:	mov	fp, sp
   15894:	sub	sp, sp, #16
   15898:	str	r2, [fp, #-4]
   1589c:	ldr	r2, [fp, #12]
   158a0:	str	r2, [sp, #4]
   158a4:	ldr	r2, [fp, #8]
   158a8:	str	r2, [sp]
   158ac:	sub	r2, fp, #4
   158b0:	bl	14f8c <table_sorted_subset_find@@Base>
   158b4:	mov	sp, fp
   158b8:	pop	{fp, pc}

000158bc <table_sorted_subset_find_int64@@Base>:
   158bc:	push	{fp, lr}
   158c0:	mov	fp, sp
   158c4:	sub	sp, sp, #16
   158c8:	str	r2, [sp, #8]
   158cc:	ldr	r2, [fp, #16]
   158d0:	str	r3, [sp, #12]
   158d4:	ldr	r3, [fp, #8]
   158d8:	str	r2, [sp, #4]
   158dc:	ldr	r2, [fp, #12]
   158e0:	str	r2, [sp]
   158e4:	add	r2, sp, #8
   158e8:	bl	14f8c <table_sorted_subset_find@@Base>
   158ec:	mov	sp, fp
   158f0:	pop	{fp, pc}

000158f4 <table_sorted_subset_find_uint64@@Base>:
   158f4:	push	{fp, lr}
   158f8:	mov	fp, sp
   158fc:	sub	sp, sp, #16
   15900:	str	r2, [sp, #8]
   15904:	ldr	r2, [fp, #16]
   15908:	str	r3, [sp, #12]
   1590c:	ldr	r3, [fp, #8]
   15910:	str	r2, [sp, #4]
   15914:	ldr	r2, [fp, #12]
   15918:	str	r2, [sp]
   1591c:	add	r2, sp, #8
   15920:	bl	14f8c <table_sorted_subset_find@@Base>
   15924:	mov	sp, fp
   15928:	pop	{fp, pc}

0001592c <table_sorted_subset_find_short@@Base>:
   1592c:	push	{fp, lr}
   15930:	mov	fp, sp
   15934:	sub	sp, sp, #16
   15938:	strh	r2, [fp, #-2]
   1593c:	ldr	r2, [fp, #12]
   15940:	str	r2, [sp, #4]
   15944:	ldr	r2, [fp, #8]
   15948:	str	r2, [sp]
   1594c:	sub	r2, fp, #2
   15950:	bl	14f8c <table_sorted_subset_find@@Base>
   15954:	mov	sp, fp
   15958:	pop	{fp, pc}

0001595c <table_sorted_subset_find_ushort@@Base>:
   1595c:	push	{fp, lr}
   15960:	mov	fp, sp
   15964:	sub	sp, sp, #16
   15968:	strh	r2, [fp, #-2]
   1596c:	ldr	r2, [fp, #12]
   15970:	str	r2, [sp, #4]
   15974:	ldr	r2, [fp, #8]
   15978:	str	r2, [sp]
   1597c:	sub	r2, fp, #2
   15980:	bl	14f8c <table_sorted_subset_find@@Base>
   15984:	mov	sp, fp
   15988:	pop	{fp, pc}

0001598c <table_sorted_subset_find_long@@Base>:
   1598c:	push	{fp, lr}
   15990:	mov	fp, sp
   15994:	sub	sp, sp, #16
   15998:	str	r2, [fp, #-4]
   1599c:	ldr	r2, [fp, #12]
   159a0:	str	r2, [sp, #4]
   159a4:	ldr	r2, [fp, #8]
   159a8:	str	r2, [sp]
   159ac:	sub	r2, fp, #4
   159b0:	bl	14f8c <table_sorted_subset_find@@Base>
   159b4:	mov	sp, fp
   159b8:	pop	{fp, pc}

000159bc <table_sorted_subset_find_ulong@@Base>:
   159bc:	push	{fp, lr}
   159c0:	mov	fp, sp
   159c4:	sub	sp, sp, #16
   159c8:	str	r2, [fp, #-4]
   159cc:	ldr	r2, [fp, #12]
   159d0:	str	r2, [sp, #4]
   159d4:	ldr	r2, [fp, #8]
   159d8:	str	r2, [sp]
   159dc:	sub	r2, fp, #4
   159e0:	bl	14f8c <table_sorted_subset_find@@Base>
   159e4:	mov	sp, fp
   159e8:	pop	{fp, pc}

000159ec <table_sorted_subset_find_llong@@Base>:
   159ec:	push	{fp, lr}
   159f0:	mov	fp, sp
   159f4:	sub	sp, sp, #16
   159f8:	str	r2, [sp, #8]
   159fc:	ldr	r2, [fp, #16]
   15a00:	str	r3, [sp, #12]
   15a04:	ldr	r3, [fp, #8]
   15a08:	str	r2, [sp, #4]
   15a0c:	ldr	r2, [fp, #12]
   15a10:	str	r2, [sp]
   15a14:	add	r2, sp, #8
   15a18:	bl	14f8c <table_sorted_subset_find@@Base>
   15a1c:	mov	sp, fp
   15a20:	pop	{fp, pc}

00015a24 <table_sorted_subset_find_ullong@@Base>:
   15a24:	push	{fp, lr}
   15a28:	mov	fp, sp
   15a2c:	sub	sp, sp, #16
   15a30:	str	r2, [sp, #8]
   15a34:	ldr	r2, [fp, #16]
   15a38:	str	r3, [sp, #12]
   15a3c:	ldr	r3, [fp, #8]
   15a40:	str	r2, [sp, #4]
   15a44:	ldr	r2, [fp, #12]
   15a48:	str	r2, [sp]
   15a4c:	add	r2, sp, #8
   15a50:	bl	14f8c <table_sorted_subset_find@@Base>
   15a54:	mov	sp, fp
   15a58:	pop	{fp, pc}

00015a5c <table_sorted_subset_find_float@@Base>:
   15a5c:	push	{fp, lr}
   15a60:	mov	fp, sp
   15a64:	sub	sp, sp, #16
   15a68:	mov	ip, r2
   15a6c:	ldr	r2, [fp, #8]
   15a70:	str	r3, [sp]
   15a74:	vstr	s0, [fp, #-4]
   15a78:	mov	r3, ip
   15a7c:	str	r2, [sp, #4]
   15a80:	sub	r2, fp, #4
   15a84:	bl	14f8c <table_sorted_subset_find@@Base>
   15a88:	mov	sp, fp
   15a8c:	pop	{fp, pc}

00015a90 <table_sorted_subset_find_double@@Base>:
   15a90:	push	{fp, lr}
   15a94:	mov	fp, sp
   15a98:	sub	sp, sp, #16
   15a9c:	mov	ip, r2
   15aa0:	ldr	r2, [fp, #8]
   15aa4:	str	r3, [sp]
   15aa8:	vstr	d0, [sp, #8]
   15aac:	mov	r3, ip
   15ab0:	str	r2, [sp, #4]
   15ab4:	add	r2, sp, #8
   15ab8:	bl	14f8c <table_sorted_subset_find@@Base>
   15abc:	mov	sp, fp
   15ac0:	pop	{fp, pc}

00015ac4 <table_sorted_subset_find_ldouble@@Base>:
   15ac4:	push	{fp, lr}
   15ac8:	mov	fp, sp
   15acc:	sub	sp, sp, #16
   15ad0:	mov	ip, r2
   15ad4:	ldr	r2, [fp, #8]
   15ad8:	str	r3, [sp]
   15adc:	vstr	d0, [sp, #8]
   15ae0:	mov	r3, ip
   15ae4:	str	r2, [sp, #4]
   15ae8:	add	r2, sp, #8
   15aec:	bl	14f8c <table_sorted_subset_find@@Base>
   15af0:	mov	sp, fp
   15af4:	pop	{fp, pc}

00015af8 <table_sorted_subset_find_char@@Base>:
   15af8:	push	{fp, lr}
   15afc:	mov	fp, sp
   15b00:	sub	sp, sp, #16
   15b04:	strb	r2, [fp, #-1]
   15b08:	ldr	r2, [fp, #12]
   15b0c:	str	r2, [sp, #4]
   15b10:	ldr	r2, [fp, #8]
   15b14:	str	r2, [sp]
   15b18:	sub	r2, fp, #1
   15b1c:	bl	14f8c <table_sorted_subset_find@@Base>
   15b20:	mov	sp, fp
   15b24:	pop	{fp, pc}

00015b28 <table_sorted_subset_find_uchar@@Base>:
   15b28:	push	{fp, lr}
   15b2c:	mov	fp, sp
   15b30:	sub	sp, sp, #16
   15b34:	strb	r2, [fp, #-1]
   15b38:	ldr	r2, [fp, #12]
   15b3c:	str	r2, [sp, #4]
   15b40:	ldr	r2, [fp, #8]
   15b44:	str	r2, [sp]
   15b48:	sub	r2, fp, #1
   15b4c:	bl	14f8c <table_sorted_subset_find@@Base>
   15b50:	mov	sp, fp
   15b54:	pop	{fp, pc}

00015b58 <table_sorted_subset_find_string@@Base>:
   15b58:	b	14f8c <table_sorted_subset_find@@Base>

00015b5c <table_sorted_subset_find_ptr@@Base>:
   15b5c:	b	14f8c <table_sorted_subset_find@@Base>

00015b60 <table_get@@Base>:
   15b60:	push	{fp, lr}
   15b64:	mov	fp, sp
   15b68:	bl	16710 <table_get_cell_ptr@@Base>
   15b6c:	ldr	r0, [r0]
   15b70:	pop	{fp, pc}

00015b74 <table_get_bool@@Base>:
   15b74:	push	{fp, lr}
   15b78:	mov	fp, sp
   15b7c:	bl	16710 <table_get_cell_ptr@@Base>
   15b80:	ldr	r0, [r0]
   15b84:	ldrb	r0, [r0]
   15b88:	pop	{fp, pc}

00015b8c <table_get_int@@Base>:
   15b8c:	push	{fp, lr}
   15b90:	mov	fp, sp
   15b94:	bl	16710 <table_get_cell_ptr@@Base>
   15b98:	ldr	r0, [r0]
   15b9c:	ldr	r0, [r0]
   15ba0:	pop	{fp, pc}

00015ba4 <table_get_uint@@Base>:
   15ba4:	push	{fp, lr}
   15ba8:	mov	fp, sp
   15bac:	bl	16710 <table_get_cell_ptr@@Base>
   15bb0:	ldr	r0, [r0]
   15bb4:	ldr	r0, [r0]
   15bb8:	pop	{fp, pc}

00015bbc <table_get_int8@@Base>:
   15bbc:	push	{fp, lr}
   15bc0:	mov	fp, sp
   15bc4:	bl	16710 <table_get_cell_ptr@@Base>
   15bc8:	ldr	r0, [r0]
   15bcc:	ldrsb	r0, [r0]
   15bd0:	pop	{fp, pc}

00015bd4 <table_get_uint8@@Base>:
   15bd4:	push	{fp, lr}
   15bd8:	mov	fp, sp
   15bdc:	bl	16710 <table_get_cell_ptr@@Base>
   15be0:	ldr	r0, [r0]
   15be4:	ldrb	r0, [r0]
   15be8:	pop	{fp, pc}

00015bec <table_get_int16@@Base>:
   15bec:	push	{fp, lr}
   15bf0:	mov	fp, sp
   15bf4:	bl	16710 <table_get_cell_ptr@@Base>
   15bf8:	ldr	r0, [r0]
   15bfc:	ldrsh	r0, [r0]
   15c00:	pop	{fp, pc}

00015c04 <table_get_uint16@@Base>:
   15c04:	push	{fp, lr}
   15c08:	mov	fp, sp
   15c0c:	bl	16710 <table_get_cell_ptr@@Base>
   15c10:	ldr	r0, [r0]
   15c14:	ldrh	r0, [r0]
   15c18:	pop	{fp, pc}

00015c1c <table_get_int32@@Base>:
   15c1c:	push	{fp, lr}
   15c20:	mov	fp, sp
   15c24:	bl	16710 <table_get_cell_ptr@@Base>
   15c28:	ldr	r0, [r0]
   15c2c:	ldr	r0, [r0]
   15c30:	pop	{fp, pc}

00015c34 <table_get_uint32@@Base>:
   15c34:	push	{fp, lr}
   15c38:	mov	fp, sp
   15c3c:	bl	16710 <table_get_cell_ptr@@Base>
   15c40:	ldr	r0, [r0]
   15c44:	ldr	r0, [r0]
   15c48:	pop	{fp, pc}

00015c4c <table_get_int64@@Base>:
   15c4c:	push	{fp, lr}
   15c50:	mov	fp, sp
   15c54:	bl	16710 <table_get_cell_ptr@@Base>
   15c58:	ldr	r0, [r0]
   15c5c:	ldrd	r0, [r0]
   15c60:	pop	{fp, pc}

00015c64 <table_get_uint64@@Base>:
   15c64:	push	{fp, lr}
   15c68:	mov	fp, sp
   15c6c:	bl	16710 <table_get_cell_ptr@@Base>
   15c70:	ldr	r0, [r0]
   15c74:	ldrd	r0, [r0]
   15c78:	pop	{fp, pc}

00015c7c <table_get_short@@Base>:
   15c7c:	push	{fp, lr}
   15c80:	mov	fp, sp
   15c84:	bl	16710 <table_get_cell_ptr@@Base>
   15c88:	ldr	r0, [r0]
   15c8c:	ldrsh	r0, [r0]
   15c90:	pop	{fp, pc}

00015c94 <table_get_ushort@@Base>:
   15c94:	push	{fp, lr}
   15c98:	mov	fp, sp
   15c9c:	bl	16710 <table_get_cell_ptr@@Base>
   15ca0:	ldr	r0, [r0]
   15ca4:	ldrh	r0, [r0]
   15ca8:	pop	{fp, pc}

00015cac <table_get_long@@Base>:
   15cac:	push	{fp, lr}
   15cb0:	mov	fp, sp
   15cb4:	bl	16710 <table_get_cell_ptr@@Base>
   15cb8:	ldr	r0, [r0]
   15cbc:	ldr	r0, [r0]
   15cc0:	pop	{fp, pc}

00015cc4 <table_get_ulong@@Base>:
   15cc4:	push	{fp, lr}
   15cc8:	mov	fp, sp
   15ccc:	bl	16710 <table_get_cell_ptr@@Base>
   15cd0:	ldr	r0, [r0]
   15cd4:	ldr	r0, [r0]
   15cd8:	pop	{fp, pc}

00015cdc <table_get_llong@@Base>:
   15cdc:	push	{fp, lr}
   15ce0:	mov	fp, sp
   15ce4:	bl	16710 <table_get_cell_ptr@@Base>
   15ce8:	ldr	r0, [r0]
   15cec:	ldrd	r0, [r0]
   15cf0:	pop	{fp, pc}

00015cf4 <table_get_ullong@@Base>:
   15cf4:	push	{fp, lr}
   15cf8:	mov	fp, sp
   15cfc:	bl	16710 <table_get_cell_ptr@@Base>
   15d00:	ldr	r0, [r0]
   15d04:	ldrd	r0, [r0]
   15d08:	pop	{fp, pc}

00015d0c <table_get_float@@Base>:
   15d0c:	push	{fp, lr}
   15d10:	mov	fp, sp
   15d14:	bl	16710 <table_get_cell_ptr@@Base>
   15d18:	ldr	r0, [r0]
   15d1c:	vldr	s0, [r0]
   15d20:	pop	{fp, pc}

00015d24 <table_get_double@@Base>:
   15d24:	push	{fp, lr}
   15d28:	mov	fp, sp
   15d2c:	bl	16710 <table_get_cell_ptr@@Base>
   15d30:	ldr	r0, [r0]
   15d34:	vldr	d0, [r0]
   15d38:	pop	{fp, pc}

00015d3c <table_get_ldouble@@Base>:
   15d3c:	push	{fp, lr}
   15d40:	mov	fp, sp
   15d44:	bl	16710 <table_get_cell_ptr@@Base>
   15d48:	ldr	r0, [r0]
   15d4c:	vldr	d0, [r0]
   15d50:	pop	{fp, pc}

00015d54 <table_get_char@@Base>:
   15d54:	push	{fp, lr}
   15d58:	mov	fp, sp
   15d5c:	bl	16710 <table_get_cell_ptr@@Base>
   15d60:	ldr	r0, [r0]
   15d64:	ldrb	r0, [r0]
   15d68:	pop	{fp, pc}

00015d6c <table_get_uchar@@Base>:
   15d6c:	push	{fp, lr}
   15d70:	mov	fp, sp
   15d74:	bl	16710 <table_get_cell_ptr@@Base>
   15d78:	ldr	r0, [r0]
   15d7c:	ldrb	r0, [r0]
   15d80:	pop	{fp, pc}

00015d84 <table_get_string@@Base>:
   15d84:	push	{fp, lr}
   15d88:	mov	fp, sp
   15d8c:	bl	16710 <table_get_cell_ptr@@Base>
   15d90:	ldr	r0, [r0]
   15d94:	pop	{fp, pc}

00015d98 <table_get_ptr@@Base>:
   15d98:	push	{fp, lr}
   15d9c:	mov	fp, sp
   15da0:	bl	16710 <table_get_cell_ptr@@Base>
   15da4:	ldr	r0, [r0]
   15da8:	pop	{fp, pc}

00015dac <table_row_init@@Base>:
   15dac:	push	{r4, r5, fp, lr}
   15db0:	add	fp, sp, #8
   15db4:	mov	r4, r1
   15db8:	ldr	r1, [r0, #12]
   15dbc:	ldr	r5, [r0, #16]
   15dc0:	lsl	r0, r1, #2
   15dc4:	bl	12fb4 <malloc@plt>
   15dc8:	str	r0, [r5, r4, lsl #2]
   15dcc:	pop	{r4, r5, fp, pc}

00015dd0 <table_get_row_ptr@@Base>:
   15dd0:	ldr	r0, [r0, #16]
   15dd4:	add	r0, r0, r1, lsl #2
   15dd8:	bx	lr

00015ddc <table_row_destroy@@Base>:
   15ddc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15de0:	add	fp, sp, #24
   15de4:	mov	r4, r1
   15de8:	mov	r5, r0
   15dec:	bl	13d2c <table_get_column_length@@Base>
   15df0:	ldr	r8, [r5, #16]
   15df4:	cmp	r0, #1
   15df8:	blt	15e20 <table_row_destroy@@Base+0x44>
   15dfc:	mov	r6, r0
   15e00:	mov	r7, #0
   15e04:	mov	r0, r5
   15e08:	mov	r1, r4
   15e0c:	mov	r2, r7
   15e10:	bl	1672c <table_cell_destroy@@Base>
   15e14:	add	r7, r7, #1
   15e18:	cmp	r6, r7
   15e1c:	bne	15e04 <table_row_destroy@@Base+0x28>
   15e20:	ldr	r0, [r8, r4, lsl #2]
   15e24:	cmp	r0, #0
   15e28:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   15e2c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15e30:	b	12f90 <free@plt>

00015e34 <table_get_row_length@@Base>:
   15e34:	ldr	r0, [r0, #20]
   15e38:	bx	lr

00015e3c <table_add_row@@Base>:
   15e3c:	push	{r4, r5, r6, r7, fp, lr}
   15e40:	add	fp, sp, #16
   15e44:	ldr	r5, [r0, #20]
   15e48:	ldr	r1, [r0, #24]
   15e4c:	mov	r4, r0
   15e50:	udiv	r0, r5, r1
   15e54:	mls	r0, r0, r1, r5
   15e58:	cmp	r0, #0
   15e5c:	bne	15e80 <table_add_row@@Base+0x44>
   15e60:	ldr	r2, [r4, #28]
   15e64:	ldr	r0, [r4, #16]
   15e68:	add	r1, r2, r1
   15e6c:	str	r1, [r4, #28]
   15e70:	lsl	r1, r1, #2
   15e74:	bl	12f9c <realloc@plt>
   15e78:	str	r0, [r4, #16]
   15e7c:	ldr	r5, [r4, #20]
   15e80:	mov	r0, r4
   15e84:	bl	13d2c <table_get_column_length@@Base>
   15e88:	mov	r6, r0
   15e8c:	ldr	r0, [r4, #12]
   15e90:	ldr	r7, [r4, #16]
   15e94:	lsl	r0, r0, #2
   15e98:	bl	12fb4 <malloc@plt>
   15e9c:	cmp	r6, #1
   15ea0:	str	r0, [r7, r5, lsl #2]
   15ea4:	blt	15ec8 <table_add_row@@Base+0x8c>
   15ea8:	mov	r7, #0
   15eac:	mov	r0, r4
   15eb0:	mov	r1, r5
   15eb4:	mov	r2, r7
   15eb8:	bl	166f0 <table_cell_init@@Base>
   15ebc:	add	r7, r7, #1
   15ec0:	cmp	r6, r7
   15ec4:	bne	15eac <table_add_row@@Base+0x70>
   15ec8:	ldr	r1, [r4, #20]
   15ecc:	mov	r0, r4
   15ed0:	mvn	r2, #0
   15ed4:	mov	r3, #2
   15ed8:	bl	13c38 <table_notify@@Base>
   15edc:	ldr	r0, [r4, #20]
   15ee0:	add	r1, r0, #1
   15ee4:	str	r1, [r4, #20]
   15ee8:	pop	{r4, r5, r6, r7, fp, pc}

00015eec <table_remove_row@@Base>:
   15eec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ef0:	add	fp, sp, #24
   15ef4:	ldr	r8, [r0, #20]
   15ef8:	mov	r4, r1
   15efc:	mov	r5, r0
   15f00:	bl	13d2c <table_get_column_length@@Base>
   15f04:	cmp	r0, #1
   15f08:	blt	15f54 <table_remove_row@@Base+0x68>
   15f0c:	mov	r6, r0
   15f10:	mov	r7, #0
   15f14:	mov	r0, r5
   15f18:	mov	r1, r7
   15f1c:	bl	13da0 <table_get_column_data_type@@Base>
   15f20:	cmp	r0, #23
   15f24:	beq	15f48 <table_remove_row@@Base+0x5c>
   15f28:	mov	r0, r5
   15f2c:	mov	r1, r4
   15f30:	mov	r2, r7
   15f34:	bl	16710 <table_get_cell_ptr@@Base>
   15f38:	ldr	r0, [r0]
   15f3c:	cmp	r0, #0
   15f40:	beq	15f48 <table_remove_row@@Base+0x5c>
   15f44:	bl	12f90 <free@plt>
   15f48:	add	r7, r7, #1
   15f4c:	cmp	r6, r7
   15f50:	bne	15f14 <table_remove_row@@Base+0x28>
   15f54:	ldr	r0, [r5, #16]
   15f58:	ldr	r0, [r0, r4, lsl #2]
   15f5c:	cmp	r0, #0
   15f60:	beq	15f68 <table_remove_row@@Base+0x7c>
   15f64:	bl	12f90 <free@plt>
   15f68:	sub	r0, r8, #1
   15f6c:	cmp	r0, r4
   15f70:	ble	15f94 <table_remove_row@@Base+0xa8>
   15f74:	mov	r1, r4
   15f78:	ldr	r2, [r5, #16]
   15f7c:	add	r3, r2, r1, lsl #2
   15f80:	ldr	r3, [r3, #4]
   15f84:	str	r3, [r2, r1, lsl #2]
   15f88:	add	r1, r1, #1
   15f8c:	cmp	r0, r1
   15f90:	bne	15f78 <table_remove_row@@Base+0x8c>
   15f94:	ldr	r0, [r5, #20]
   15f98:	ldr	r1, [r5, #24]
   15f9c:	sub	r0, r0, #1
   15fa0:	udiv	r2, r0, r1
   15fa4:	str	r0, [r5, #20]
   15fa8:	mls	r0, r2, r1, r0
   15fac:	cmp	r0, #0
   15fb0:	bne	15fd0 <table_remove_row@@Base+0xe4>
   15fb4:	ldr	r2, [r5, #28]
   15fb8:	ldr	r0, [r5, #16]
   15fbc:	sub	r1, r2, r1
   15fc0:	str	r1, [r5, #28]
   15fc4:	lsl	r1, r1, #2
   15fc8:	bl	12f9c <realloc@plt>
   15fcc:	str	r0, [r5, #16]
   15fd0:	mov	r0, r5
   15fd4:	mov	r1, r4
   15fd8:	mvn	r2, #0
   15fdc:	mov	r3, #4
   15fe0:	bl	13c38 <table_notify@@Base>
   15fe4:	mov	r0, #0
   15fe8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015fec <table_set_row_ptr@@Base>:
   15fec:	ldr	r2, [r2]
   15ff0:	ldr	r0, [r0, #16]
   15ff4:	str	r2, [r0, r1, lsl #2]
   15ff8:	bx	lr

00015ffc <table_set@@Base>:
   15ffc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16000:	add	fp, sp, #24
   16004:	mov	r8, r3
   16008:	mov	r4, r2
   1600c:	mov	r9, r1
   16010:	mov	r6, r0
   16014:	bl	16710 <table_get_cell_ptr@@Base>
   16018:	mov	r5, r0
   1601c:	mov	r0, r6
   16020:	mov	r1, r4
   16024:	bl	13d04 <table_get_col_ptr@@Base>
   16028:	ldr	r1, [fp, #8]
   1602c:	mvn	r7, #0
   16030:	cmp	r1, #23
   16034:	bhi	162f4 <table_set@@Base+0x2f8>
   16038:	add	r2, pc, #0
   1603c:	ldr	pc, [r2, r1, lsl #2]
   16040:	andeq	r6, r1, r0, lsr #1
   16044:	strheq	r6, [r1], -r0
   16048:	andeq	r6, r1, r0, asr #1
   1604c:	ldrdeq	r6, [r1], -r0
   16050:	andeq	r6, r1, r0, ror #1
   16054:	strdeq	r6, [r1], -r0
   16058:	andeq	r6, r1, r0, lsl #2
   1605c:	andeq	r6, r1, r0, lsl r1
   16060:	andeq	r6, r1, r0, lsr #2
   16064:	andeq	r6, r1, r0, lsr r1
   16068:	andeq	r6, r1, r0, asr #2
   1606c:	andeq	r6, r1, r0, asr r1
   16070:	andeq	r6, r1, r8, lsl #3
   16074:	muleq	r1, r8, r1
   16078:	andeq	r6, r1, r8, lsr #3
   1607c:			; <UNDEFINED> instruction: 0x000161b8
   16080:	andeq	r6, r1, r8, asr #3
   16084:	strdeq	r6, [r1], -ip
   16088:	andeq	r6, r1, ip, lsl #4
   1608c:	andeq	r6, r1, ip, asr #4
   16090:	andeq	r6, r1, ip, asr r2
   16094:	andeq	r6, r1, ip, ror #4
   16098:	andeq	r6, r1, r8, lsr #5
   1609c:	strdeq	r6, [r1], -ip
   160a0:	ldr	r0, [r0, #4]
   160a4:	cmp	r0, #0
   160a8:	bne	162f4 <table_set@@Base+0x2f8>
   160ac:	b	161d4 <table_set@@Base+0x1d8>
   160b0:	ldr	r0, [r0, #4]
   160b4:	cmp	r0, #1
   160b8:	beq	161d4 <table_set@@Base+0x1d8>
   160bc:	b	162f4 <table_set@@Base+0x2f8>
   160c0:	ldr	r0, [r0, #4]
   160c4:	cmp	r0, #2
   160c8:	beq	162b4 <table_set@@Base+0x2b8>
   160cc:	b	162f4 <table_set@@Base+0x2f8>
   160d0:	ldr	r0, [r0, #4]
   160d4:	cmp	r0, #3
   160d8:	beq	162b4 <table_set@@Base+0x2b8>
   160dc:	b	162f4 <table_set@@Base+0x2f8>
   160e0:	ldr	r0, [r0, #4]
   160e4:	cmp	r0, #4
   160e8:	beq	1615c <table_set@@Base+0x160>
   160ec:	b	162f4 <table_set@@Base+0x2f8>
   160f0:	ldr	r0, [r0, #4]
   160f4:	cmp	r0, #5
   160f8:	beq	1615c <table_set@@Base+0x160>
   160fc:	b	162f4 <table_set@@Base+0x2f8>
   16100:	ldr	r0, [r0, #4]
   16104:	cmp	r0, #6
   16108:	beq	161d4 <table_set@@Base+0x1d8>
   1610c:	b	162f4 <table_set@@Base+0x2f8>
   16110:	ldr	r0, [r0, #4]
   16114:	cmp	r0, #7
   16118:	beq	161d4 <table_set@@Base+0x1d8>
   1611c:	b	162f4 <table_set@@Base+0x2f8>
   16120:	ldr	r0, [r0, #4]
   16124:	cmp	r0, #8
   16128:	beq	16218 <table_set@@Base+0x21c>
   1612c:	b	162f4 <table_set@@Base+0x2f8>
   16130:	ldr	r0, [r0, #4]
   16134:	cmp	r0, #9
   16138:	beq	16218 <table_set@@Base+0x21c>
   1613c:	b	162f4 <table_set@@Base+0x2f8>
   16140:	ldr	r0, [r0, #4]
   16144:	cmp	r0, #10
   16148:	beq	1615c <table_set@@Base+0x160>
   1614c:	b	162f4 <table_set@@Base+0x2f8>
   16150:	ldr	r0, [r0, #4]
   16154:	cmp	r0, #11
   16158:	bne	162f4 <table_set@@Base+0x2f8>
   1615c:	ldr	r0, [r5]
   16160:	cmp	r0, #0
   16164:	bne	1617c <table_set@@Base+0x180>
   16168:	mov	r0, #2
   1616c:	bl	12fb4 <malloc@plt>
   16170:	cmp	r0, #0
   16174:	str	r0, [r5]
   16178:	beq	162f4 <table_set@@Base+0x2f8>
   1617c:	ldrh	r1, [r8]
   16180:	strh	r1, [r0]
   16184:	b	162dc <table_set@@Base+0x2e0>
   16188:	ldr	r0, [r0, #4]
   1618c:	cmp	r0, #12
   16190:	beq	161d4 <table_set@@Base+0x1d8>
   16194:	b	162f4 <table_set@@Base+0x2f8>
   16198:	ldr	r0, [r0, #4]
   1619c:	cmp	r0, #13
   161a0:	beq	161d4 <table_set@@Base+0x1d8>
   161a4:	b	162f4 <table_set@@Base+0x2f8>
   161a8:	ldr	r0, [r0, #4]
   161ac:	cmp	r0, #14
   161b0:	beq	16218 <table_set@@Base+0x21c>
   161b4:	b	162f4 <table_set@@Base+0x2f8>
   161b8:	ldr	r0, [r0, #4]
   161bc:	cmp	r0, #15
   161c0:	beq	16218 <table_set@@Base+0x21c>
   161c4:	b	162f4 <table_set@@Base+0x2f8>
   161c8:	ldr	r0, [r0, #4]
   161cc:	cmp	r0, #16
   161d0:	bne	162f4 <table_set@@Base+0x2f8>
   161d4:	ldr	r0, [r5]
   161d8:	cmp	r0, #0
   161dc:	bne	161f4 <table_set@@Base+0x1f8>
   161e0:	mov	r0, #4
   161e4:	bl	12fb4 <malloc@plt>
   161e8:	cmp	r0, #0
   161ec:	str	r0, [r5]
   161f0:	beq	162f4 <table_set@@Base+0x2f8>
   161f4:	ldr	r1, [r8]
   161f8:	b	16244 <table_set@@Base+0x248>
   161fc:	ldr	r0, [r0, #4]
   16200:	cmp	r0, #17
   16204:	beq	16218 <table_set@@Base+0x21c>
   16208:	b	162f4 <table_set@@Base+0x2f8>
   1620c:	ldr	r0, [r0, #4]
   16210:	cmp	r0, #18
   16214:	bne	162f4 <table_set@@Base+0x2f8>
   16218:	ldr	r0, [r5]
   1621c:	cmp	r0, #0
   16220:	bne	16238 <table_set@@Base+0x23c>
   16224:	mov	r0, #8
   16228:	bl	12fb4 <malloc@plt>
   1622c:	cmp	r0, #0
   16230:	str	r0, [r5]
   16234:	beq	162f4 <table_set@@Base+0x2f8>
   16238:	ldr	r1, [r8]
   1623c:	ldr	r2, [r8, #4]
   16240:	str	r2, [r0, #4]
   16244:	str	r1, [r0]
   16248:	b	162dc <table_set@@Base+0x2e0>
   1624c:	ldr	r0, [r0, #4]
   16250:	cmp	r0, #19
   16254:	beq	162b4 <table_set@@Base+0x2b8>
   16258:	b	162f4 <table_set@@Base+0x2f8>
   1625c:	ldr	r0, [r0, #4]
   16260:	cmp	r0, #20
   16264:	beq	162b4 <table_set@@Base+0x2b8>
   16268:	b	162f4 <table_set@@Base+0x2f8>
   1626c:	ldr	r0, [r0, #4]
   16270:	cmp	r0, #21
   16274:	bne	162f4 <table_set@@Base+0x2f8>
   16278:	mov	r0, r8
   1627c:	bl	12fd8 <strlen@plt>
   16280:	ldr	r2, [r5]
   16284:	add	r1, r0, #1
   16288:	mov	r0, r2
   1628c:	bl	12f9c <realloc@plt>
   16290:	cmp	r0, #0
   16294:	str	r0, [r5]
   16298:	beq	162f4 <table_set@@Base+0x2f8>
   1629c:	mov	r1, r8
   162a0:	bl	12fa8 <strcpy@plt>
   162a4:	b	162dc <table_set@@Base+0x2e0>
   162a8:	ldr	r0, [r0, #4]
   162ac:	cmp	r0, #22
   162b0:	bne	162f4 <table_set@@Base+0x2f8>
   162b4:	ldr	r0, [r5]
   162b8:	cmp	r0, #0
   162bc:	bne	162d4 <table_set@@Base+0x2d8>
   162c0:	mov	r0, #1
   162c4:	bl	12fb4 <malloc@plt>
   162c8:	cmp	r0, #0
   162cc:	str	r0, [r5]
   162d0:	beq	162f4 <table_set@@Base+0x2f8>
   162d4:	ldrb	r1, [r8]
   162d8:	strb	r1, [r0]
   162dc:	mov	r0, r6
   162e0:	mov	r1, r9
   162e4:	mov	r2, r4
   162e8:	mov	r3, #1
   162ec:	bl	13c38 <table_notify@@Base>
   162f0:	mov	r7, #0
   162f4:	mov	r0, r7
   162f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   162fc:	ldr	r0, [r0, #4]
   16300:	cmp	r0, #23
   16304:	bne	162f4 <table_set@@Base+0x2f8>
   16308:	str	r8, [r5]
   1630c:	b	162dc <table_set@@Base+0x2e0>

00016310 <table_set_bool@@Base>:
   16310:	push	{fp, lr}
   16314:	mov	fp, sp
   16318:	sub	sp, sp, #8
   1631c:	strb	r3, [fp, #-1]
   16320:	mov	r3, #22
   16324:	str	r3, [sp]
   16328:	sub	r3, fp, #1
   1632c:	bl	15ffc <table_set@@Base>
   16330:	mov	sp, fp
   16334:	pop	{fp, pc}

00016338 <table_set_int@@Base>:
   16338:	push	{fp, lr}
   1633c:	mov	fp, sp
   16340:	sub	sp, sp, #8
   16344:	str	r3, [sp, #4]
   16348:	mov	r3, #0
   1634c:	str	r3, [sp]
   16350:	add	r3, sp, #4
   16354:	bl	15ffc <table_set@@Base>
   16358:	mov	sp, fp
   1635c:	pop	{fp, pc}

00016360 <table_set_uint@@Base>:
   16360:	push	{fp, lr}
   16364:	mov	fp, sp
   16368:	sub	sp, sp, #8
   1636c:	str	r3, [sp, #4]
   16370:	mov	r3, #1
   16374:	str	r3, [sp]
   16378:	add	r3, sp, #4
   1637c:	bl	15ffc <table_set@@Base>
   16380:	mov	sp, fp
   16384:	pop	{fp, pc}

00016388 <table_set_int8@@Base>:
   16388:	push	{fp, lr}
   1638c:	mov	fp, sp
   16390:	sub	sp, sp, #8
   16394:	strb	r3, [fp, #-1]
   16398:	mov	r3, #2
   1639c:	str	r3, [sp]
   163a0:	sub	r3, fp, #1
   163a4:	bl	15ffc <table_set@@Base>
   163a8:	mov	sp, fp
   163ac:	pop	{fp, pc}

000163b0 <table_set_uint8@@Base>:
   163b0:	push	{fp, lr}
   163b4:	mov	fp, sp
   163b8:	sub	sp, sp, #8
   163bc:	strb	r3, [fp, #-1]
   163c0:	mov	r3, #3
   163c4:	str	r3, [sp]
   163c8:	sub	r3, fp, #1
   163cc:	bl	15ffc <table_set@@Base>
   163d0:	mov	sp, fp
   163d4:	pop	{fp, pc}

000163d8 <table_set_int16@@Base>:
   163d8:	push	{fp, lr}
   163dc:	mov	fp, sp
   163e0:	sub	sp, sp, #8
   163e4:	strh	r3, [fp, #-2]
   163e8:	mov	r3, #4
   163ec:	str	r3, [sp]
   163f0:	sub	r3, fp, #2
   163f4:	bl	15ffc <table_set@@Base>
   163f8:	mov	sp, fp
   163fc:	pop	{fp, pc}

00016400 <table_set_uint16@@Base>:
   16400:	push	{fp, lr}
   16404:	mov	fp, sp
   16408:	sub	sp, sp, #8
   1640c:	strh	r3, [fp, #-2]
   16410:	mov	r3, #5
   16414:	str	r3, [sp]
   16418:	sub	r3, fp, #2
   1641c:	bl	15ffc <table_set@@Base>
   16420:	mov	sp, fp
   16424:	pop	{fp, pc}

00016428 <table_set_int32@@Base>:
   16428:	push	{fp, lr}
   1642c:	mov	fp, sp
   16430:	sub	sp, sp, #8
   16434:	str	r3, [sp, #4]
   16438:	mov	r3, #6
   1643c:	str	r3, [sp]
   16440:	add	r3, sp, #4
   16444:	bl	15ffc <table_set@@Base>
   16448:	mov	sp, fp
   1644c:	pop	{fp, pc}

00016450 <table_set_uint32@@Base>:
   16450:	push	{fp, lr}
   16454:	mov	fp, sp
   16458:	sub	sp, sp, #8
   1645c:	str	r3, [sp, #4]
   16460:	mov	r3, #7
   16464:	str	r3, [sp]
   16468:	add	r3, sp, #4
   1646c:	bl	15ffc <table_set@@Base>
   16470:	mov	sp, fp
   16474:	pop	{fp, pc}

00016478 <table_set_int64@@Base>:
   16478:	push	{fp, lr}
   1647c:	mov	fp, sp
   16480:	sub	sp, sp, #16
   16484:	ldr	r3, [fp, #12]
   16488:	str	r3, [sp, #12]
   1648c:	ldr	r3, [fp, #8]
   16490:	str	r3, [sp, #8]
   16494:	mov	r3, #8
   16498:	str	r3, [sp]
   1649c:	add	r3, sp, #8
   164a0:	bl	15ffc <table_set@@Base>
   164a4:	mov	sp, fp
   164a8:	pop	{fp, pc}

000164ac <table_set_uint64@@Base>:
   164ac:	push	{fp, lr}
   164b0:	mov	fp, sp
   164b4:	sub	sp, sp, #16
   164b8:	ldr	r3, [fp, #12]
   164bc:	str	r3, [sp, #12]
   164c0:	ldr	r3, [fp, #8]
   164c4:	str	r3, [sp, #8]
   164c8:	mov	r3, #9
   164cc:	str	r3, [sp]
   164d0:	add	r3, sp, #8
   164d4:	bl	15ffc <table_set@@Base>
   164d8:	mov	sp, fp
   164dc:	pop	{fp, pc}

000164e0 <table_set_short@@Base>:
   164e0:	push	{fp, lr}
   164e4:	mov	fp, sp
   164e8:	sub	sp, sp, #8
   164ec:	strh	r3, [fp, #-2]
   164f0:	mov	r3, #10
   164f4:	str	r3, [sp]
   164f8:	sub	r3, fp, #2
   164fc:	bl	15ffc <table_set@@Base>
   16500:	mov	sp, fp
   16504:	pop	{fp, pc}

00016508 <table_set_ushort@@Base>:
   16508:	push	{fp, lr}
   1650c:	mov	fp, sp
   16510:	sub	sp, sp, #8
   16514:	strh	r3, [fp, #-2]
   16518:	mov	r3, #11
   1651c:	str	r3, [sp]
   16520:	sub	r3, fp, #2
   16524:	bl	15ffc <table_set@@Base>
   16528:	mov	sp, fp
   1652c:	pop	{fp, pc}

00016530 <table_set_long@@Base>:
   16530:	push	{fp, lr}
   16534:	mov	fp, sp
   16538:	sub	sp, sp, #8
   1653c:	str	r3, [sp, #4]
   16540:	mov	r3, #12
   16544:	str	r3, [sp]
   16548:	add	r3, sp, #4
   1654c:	bl	15ffc <table_set@@Base>
   16550:	mov	sp, fp
   16554:	pop	{fp, pc}

00016558 <table_set_ulong@@Base>:
   16558:	push	{fp, lr}
   1655c:	mov	fp, sp
   16560:	sub	sp, sp, #8
   16564:	str	r3, [sp, #4]
   16568:	mov	r3, #13
   1656c:	str	r3, [sp]
   16570:	add	r3, sp, #4
   16574:	bl	15ffc <table_set@@Base>
   16578:	mov	sp, fp
   1657c:	pop	{fp, pc}

00016580 <table_set_llong@@Base>:
   16580:	push	{fp, lr}
   16584:	mov	fp, sp
   16588:	sub	sp, sp, #16
   1658c:	ldr	r3, [fp, #12]
   16590:	str	r3, [sp, #12]
   16594:	ldr	r3, [fp, #8]
   16598:	str	r3, [sp, #8]
   1659c:	mov	r3, #14
   165a0:	str	r3, [sp]
   165a4:	add	r3, sp, #8
   165a8:	bl	15ffc <table_set@@Base>
   165ac:	mov	sp, fp
   165b0:	pop	{fp, pc}

000165b4 <table_set_ullong@@Base>:
   165b4:	push	{fp, lr}
   165b8:	mov	fp, sp
   165bc:	sub	sp, sp, #16
   165c0:	ldr	r3, [fp, #12]
   165c4:	str	r3, [sp, #12]
   165c8:	ldr	r3, [fp, #8]
   165cc:	str	r3, [sp, #8]
   165d0:	mov	r3, #15
   165d4:	str	r3, [sp]
   165d8:	add	r3, sp, #8
   165dc:	bl	15ffc <table_set@@Base>
   165e0:	mov	sp, fp
   165e4:	pop	{fp, pc}

000165e8 <table_set_float@@Base>:
   165e8:	push	{fp, lr}
   165ec:	mov	fp, sp
   165f0:	sub	sp, sp, #8
   165f4:	mov	r3, #16
   165f8:	vstr	s0, [sp, #4]
   165fc:	str	r3, [sp]
   16600:	add	r3, sp, #4
   16604:	bl	15ffc <table_set@@Base>
   16608:	mov	sp, fp
   1660c:	pop	{fp, pc}

00016610 <table_set_double@@Base>:
   16610:	push	{fp, lr}
   16614:	mov	fp, sp
   16618:	sub	sp, sp, #16
   1661c:	mov	r3, #17
   16620:	vstr	d0, [sp, #8]
   16624:	str	r3, [sp]
   16628:	add	r3, sp, #8
   1662c:	bl	15ffc <table_set@@Base>
   16630:	mov	sp, fp
   16634:	pop	{fp, pc}

00016638 <table_set_ldouble@@Base>:
   16638:	push	{fp, lr}
   1663c:	mov	fp, sp
   16640:	sub	sp, sp, #16
   16644:	mov	r3, #18
   16648:	vstr	d0, [sp, #8]
   1664c:	str	r3, [sp]
   16650:	add	r3, sp, #8
   16654:	bl	15ffc <table_set@@Base>
   16658:	mov	sp, fp
   1665c:	pop	{fp, pc}

00016660 <table_set_string@@Base>:
   16660:	push	{fp, lr}
   16664:	mov	fp, sp
   16668:	sub	sp, sp, #8
   1666c:	mov	ip, #21
   16670:	str	ip, [sp]
   16674:	bl	15ffc <table_set@@Base>
   16678:	mov	sp, fp
   1667c:	pop	{fp, pc}

00016680 <table_set_char@@Base>:
   16680:	push	{fp, lr}
   16684:	mov	fp, sp
   16688:	sub	sp, sp, #8
   1668c:	strb	r3, [fp, #-1]
   16690:	mov	r3, #19
   16694:	str	r3, [sp]
   16698:	sub	r3, fp, #1
   1669c:	bl	15ffc <table_set@@Base>
   166a0:	mov	sp, fp
   166a4:	pop	{fp, pc}

000166a8 <table_set_uchar@@Base>:
   166a8:	push	{fp, lr}
   166ac:	mov	fp, sp
   166b0:	sub	sp, sp, #8
   166b4:	strb	r3, [fp, #-1]
   166b8:	mov	r3, #20
   166bc:	str	r3, [sp]
   166c0:	sub	r3, fp, #1
   166c4:	bl	15ffc <table_set@@Base>
   166c8:	mov	sp, fp
   166cc:	pop	{fp, pc}

000166d0 <table_set_ptr@@Base>:
   166d0:	push	{fp, lr}
   166d4:	mov	fp, sp
   166d8:	sub	sp, sp, #8
   166dc:	mov	ip, #23
   166e0:	str	ip, [sp]
   166e4:	bl	15ffc <table_set@@Base>
   166e8:	mov	sp, fp
   166ec:	pop	{fp, pc}

000166f0 <table_cell_init@@Base>:
   166f0:	push	{r4, sl, fp, lr}
   166f4:	add	fp, sp, #8
   166f8:	mov	r4, r2
   166fc:	bl	15dd0 <table_get_row_ptr@@Base>
   16700:	ldr	r0, [r0]
   16704:	mov	r1, #0
   16708:	str	r1, [r0, r4, lsl #2]
   1670c:	pop	{r4, sl, fp, pc}

00016710 <table_get_cell_ptr@@Base>:
   16710:	push	{r4, sl, fp, lr}
   16714:	add	fp, sp, #8
   16718:	mov	r4, r2
   1671c:	bl	15dd0 <table_get_row_ptr@@Base>
   16720:	ldr	r0, [r0]
   16724:	add	r0, r0, r4, lsl #2
   16728:	pop	{r4, sl, fp, pc}

0001672c <table_cell_destroy@@Base>:
   1672c:	push	{r4, r5, r6, sl, fp, lr}
   16730:	add	fp, sp, #16
   16734:	mov	r5, r1
   16738:	mov	r1, r2
   1673c:	mov	r4, r2
   16740:	mov	r6, r0
   16744:	bl	13da0 <table_get_column_data_type@@Base>
   16748:	cmp	r0, #23
   1674c:	popeq	{r4, r5, r6, sl, fp, pc}
   16750:	mov	r0, r6
   16754:	mov	r1, r5
   16758:	bl	15dd0 <table_get_row_ptr@@Base>
   1675c:	ldr	r0, [r0]
   16760:	ldr	r0, [r0, r4, lsl #2]
   16764:	cmp	r0, #0
   16768:	beq	16774 <table_cell_destroy@@Base+0x48>
   1676c:	pop	{r4, r5, r6, sl, fp, lr}
   16770:	b	12f90 <free@plt>
   16774:	pop	{r4, r5, r6, sl, fp, pc}

00016778 <table_cell_to_buffer@@Base>:
   16778:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1677c:	add	fp, sp, #24
   16780:	sub	sp, sp, #8
   16784:	mov	r7, r1
   16788:	mov	r1, r2
   1678c:	mov	r5, r3
   16790:	mov	r6, r2
   16794:	mov	r4, r0
   16798:	bl	13da0 <table_get_column_data_type@@Base>
   1679c:	cmp	r0, #23
   167a0:	bhi	16a90 <table_cell_to_buffer@@Base+0x318>
   167a4:	ldr	r8, [fp, #8]
   167a8:	add	r1, pc, #0
   167ac:	ldr	pc, [r1, r0, lsl #2]
   167b0:	andeq	r6, r1, r0, lsl r8
   167b4:	andeq	r6, r1, r4, lsr #16
   167b8:	andeq	r6, r1, r8, lsr r8
   167bc:	andeq	r6, r1, ip, asr #16
   167c0:	andeq	r6, r1, r0, ror #16
   167c4:	andeq	r6, r1, r4, ror r8
   167c8:	andeq	r6, r1, r8, lsl #17
   167cc:	muleq	r1, ip, r8
   167d0:			; <UNDEFINED> instruction: 0x000168bc
   167d4:	ldrdeq	r6, [r1], -r0
   167d8:	andeq	r6, r1, r4, ror #17
   167dc:	andeq	r6, r1, r4, lsl #18
   167e0:	andeq	r6, r1, r4, lsr #18
   167e4:	andeq	r6, r1, r4, asr #18
   167e8:	andeq	r6, r1, r4, ror #18
   167ec:	andeq	r6, r1, r4, lsl #19
   167f0:	andeq	r6, r1, r4, lsr #19
   167f4:	andeq	r6, r1, r8, asr #19
   167f8:	andeq	r6, r1, r8, ror #19
   167fc:	andeq	r6, r1, r4, lsl sl
   16800:	andeq	r6, r1, r8, lsr #20
   16804:	andeq	r6, r1, r8, asr #20
   16808:	andeq	r6, r1, r8, ror #20
   1680c:	muleq	r1, ip, sl
   16810:	mov	r0, r4
   16814:	mov	r1, r7
   16818:	mov	r2, r6
   1681c:	bl	15b8c <table_get_int@@Base>
   16820:	b	16a78 <table_cell_to_buffer@@Base+0x300>
   16824:	mov	r0, r4
   16828:	mov	r1, r7
   1682c:	mov	r2, r6
   16830:	bl	15ba4 <table_get_uint@@Base>
   16834:	b	168ac <table_cell_to_buffer@@Base+0x134>
   16838:	mov	r0, r4
   1683c:	mov	r1, r7
   16840:	mov	r2, r6
   16844:	bl	15bbc <table_get_int8@@Base>
   16848:	b	16a78 <table_cell_to_buffer@@Base+0x300>
   1684c:	mov	r0, r4
   16850:	mov	r1, r7
   16854:	mov	r2, r6
   16858:	bl	15bd4 <table_get_uint8@@Base>
   1685c:	b	168ac <table_cell_to_buffer@@Base+0x134>
   16860:	mov	r0, r4
   16864:	mov	r1, r7
   16868:	mov	r2, r6
   1686c:	bl	15bec <table_get_int16@@Base>
   16870:	b	16a78 <table_cell_to_buffer@@Base+0x300>
   16874:	mov	r0, r4
   16878:	mov	r1, r7
   1687c:	mov	r2, r6
   16880:	bl	15c04 <table_get_uint16@@Base>
   16884:	b	168ac <table_cell_to_buffer@@Base+0x134>
   16888:	mov	r0, r4
   1688c:	mov	r1, r7
   16890:	mov	r2, r6
   16894:	bl	15c1c <table_get_int32@@Base>
   16898:	b	16a78 <table_cell_to_buffer@@Base+0x300>
   1689c:	mov	r0, r4
   168a0:	mov	r1, r7
   168a4:	mov	r2, r6
   168a8:	bl	15c34 <table_get_uint32@@Base>
   168ac:	movw	r2, #29424	; 0x72f0
   168b0:	mov	r3, r0
   168b4:	movt	r2, #1
   168b8:	b	16a84 <table_cell_to_buffer@@Base+0x30c>
   168bc:	mov	r0, r4
   168c0:	mov	r1, r7
   168c4:	mov	r2, r6
   168c8:	bl	15c4c <table_get_int64@@Base>
   168cc:	b	16974 <table_cell_to_buffer@@Base+0x1fc>
   168d0:	mov	r0, r4
   168d4:	mov	r1, r7
   168d8:	mov	r2, r6
   168dc:	bl	15c64 <table_get_uint64@@Base>
   168e0:	b	16994 <table_cell_to_buffer@@Base+0x21c>
   168e4:	mov	r0, r4
   168e8:	mov	r1, r7
   168ec:	mov	r2, r6
   168f0:	bl	15c7c <table_get_short@@Base>
   168f4:	movw	r2, #29437	; 0x72fd
   168f8:	mov	r3, r0
   168fc:	movt	r2, #1
   16900:	b	16a84 <table_cell_to_buffer@@Base+0x30c>
   16904:	mov	r0, r4
   16908:	mov	r1, r7
   1690c:	mov	r2, r6
   16910:	bl	15c94 <table_get_ushort@@Base>
   16914:	movw	r2, #29441	; 0x7301
   16918:	mov	r3, r0
   1691c:	movt	r2, #1
   16920:	b	16a84 <table_cell_to_buffer@@Base+0x30c>
   16924:	mov	r0, r4
   16928:	mov	r1, r7
   1692c:	mov	r2, r6
   16930:	bl	15cac <table_get_long@@Base>
   16934:	movw	r2, #29445	; 0x7305
   16938:	mov	r3, r0
   1693c:	movt	r2, #1
   16940:	b	16a84 <table_cell_to_buffer@@Base+0x30c>
   16944:	mov	r0, r4
   16948:	mov	r1, r7
   1694c:	mov	r2, r6
   16950:	bl	15cc4 <table_get_ulong@@Base>
   16954:	movw	r2, #29449	; 0x7309
   16958:	mov	r3, r0
   1695c:	movt	r2, #1
   16960:	b	16a84 <table_cell_to_buffer@@Base+0x30c>
   16964:	mov	r0, r4
   16968:	mov	r1, r7
   1696c:	mov	r2, r6
   16970:	bl	15cdc <table_get_llong@@Base>
   16974:	movw	r2, #29427	; 0x72f3
   16978:	stm	sp, {r0, r1}
   1697c:	movt	r2, #1
   16980:	b	16a04 <table_cell_to_buffer@@Base+0x28c>
   16984:	mov	r0, r4
   16988:	mov	r1, r7
   1698c:	mov	r2, r6
   16990:	bl	15cf4 <table_get_ullong@@Base>
   16994:	movw	r2, #29432	; 0x72f8
   16998:	stm	sp, {r0, r1}
   1699c:	movt	r2, #1
   169a0:	b	16a04 <table_cell_to_buffer@@Base+0x28c>
   169a4:	mov	r0, r4
   169a8:	mov	r1, r7
   169ac:	mov	r2, r6
   169b0:	bl	15d0c <table_get_float@@Base>
   169b4:	movw	r2, #29456	; 0x7310
   169b8:	vcvt.f64.f32	d16, s0
   169bc:	vstr	d16, [sp]
   169c0:	movt	r2, #1
   169c4:	b	16a04 <table_cell_to_buffer@@Base+0x28c>
   169c8:	mov	r0, r4
   169cc:	mov	r1, r7
   169d0:	mov	r2, r6
   169d4:	bl	15d24 <table_get_double@@Base>
   169d8:	movw	r2, #29459	; 0x7313
   169dc:	vstr	d0, [sp]
   169e0:	movt	r2, #1
   169e4:	b	16a04 <table_cell_to_buffer@@Base+0x28c>
   169e8:	mov	r0, r4
   169ec:	mov	r1, r7
   169f0:	mov	r2, r6
   169f4:	bl	15d3c <table_get_ldouble@@Base>
   169f8:	movw	r2, #29463	; 0x7317
   169fc:	vstr	d0, [sp]
   16a00:	movt	r2, #1
   16a04:	mov	r0, r5
   16a08:	mov	r1, r8
   16a0c:	bl	12fe4 <snprintf@plt>
   16a10:	b	16a90 <table_cell_to_buffer@@Base+0x318>
   16a14:	mov	r0, r4
   16a18:	mov	r1, r7
   16a1c:	mov	r2, r6
   16a20:	bl	15d54 <table_get_char@@Base>
   16a24:	b	16a38 <table_cell_to_buffer@@Base+0x2c0>
   16a28:	mov	r0, r4
   16a2c:	mov	r1, r7
   16a30:	mov	r2, r6
   16a34:	bl	15d6c <table_get_uchar@@Base>
   16a38:	movw	r2, #29467	; 0x731b
   16a3c:	mov	r3, r0
   16a40:	movt	r2, #1
   16a44:	b	16a84 <table_cell_to_buffer@@Base+0x30c>
   16a48:	mov	r0, r4
   16a4c:	mov	r1, r7
   16a50:	mov	r2, r6
   16a54:	bl	15d84 <table_get_string@@Base>
   16a58:	movw	r2, #29453	; 0x730d
   16a5c:	mov	r3, r0
   16a60:	movt	r2, #1
   16a64:	b	16a84 <table_cell_to_buffer@@Base+0x30c>
   16a68:	mov	r0, r4
   16a6c:	mov	r1, r7
   16a70:	mov	r2, r6
   16a74:	bl	15b74 <table_get_bool@@Base>
   16a78:	movw	r2, #29133	; 0x71cd
   16a7c:	mov	r3, r0
   16a80:	movt	r2, #1
   16a84:	mov	r0, r5
   16a88:	mov	r1, r8
   16a8c:	bl	12fe4 <snprintf@plt>
   16a90:	mov	r0, #0
   16a94:	sub	sp, fp, #24
   16a98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16a9c:	mov	r0, r4
   16aa0:	mov	r1, r7
   16aa4:	mov	r2, r6
   16aa8:	bl	15d98 <table_get_ptr@@Base>
   16aac:	movw	r2, #29470	; 0x731e
   16ab0:	mov	r3, r0
   16ab4:	movt	r2, #1
   16ab8:	b	16a84 <table_cell_to_buffer@@Base+0x30c>

00016abc <table_cell_from_buffer@@Base>:
   16abc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16ac0:	add	fp, sp, #24
   16ac4:	sub	sp, sp, #264	; 0x108
   16ac8:	mov	r5, r1
   16acc:	mov	r1, r2
   16ad0:	mov	r7, r3
   16ad4:	mov	r4, r2
   16ad8:	mov	r6, r0
   16adc:	bl	13da0 <table_get_column_data_type@@Base>
   16ae0:	cmp	r0, #23
   16ae4:	bhi	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16ae8:	add	r1, pc, #0
   16aec:	ldr	pc, [r1, r0, lsl #2]
   16af0:	andeq	r6, r1, r0, asr fp
   16af4:	andeq	r6, r1, r8, lsl #23
   16af8:	andeq	r6, r1, r0, asr #23
   16afc:	strdeq	r6, [r1], -r8
   16b00:	andeq	r6, r1, r0, lsr ip
   16b04:	andeq	r6, r1, r8, ror #24
   16b08:	andeq	r6, r1, r0, lsr #25
   16b0c:	ldrdeq	r6, [r1], -r8
   16b10:	andeq	r6, r1, r0, lsl sp
   16b14:	andeq	r6, r1, r0, asr sp
   16b18:	muleq	r1, r0, sp
   16b1c:	andeq	r6, r1, r8, asr #27
   16b20:	andeq	r6, r1, r0, lsl #28
   16b24:	andeq	r6, r1, r8, lsr lr
   16b28:	andeq	r6, r1, r0, ror lr
   16b2c:			; <UNDEFINED> instruction: 0x00016eb0
   16b30:	strdeq	r6, [r1], -r0
   16b34:	andeq	r6, r1, r8, lsr #30
   16b38:	andeq	r6, r1, r0, ror #30
   16b3c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   16b40:	ldrdeq	r6, [r1], -r0
   16b44:	andeq	r7, r1, r8
   16b48:	andeq	r7, r1, r0, asr #32
   16b4c:	andeq	r7, r1, r4, lsl #1
   16b50:	movw	r1, #29133	; 0x71cd
   16b54:	add	r2, sp, #8
   16b58:	mov	r0, r7
   16b5c:	movt	r1, #1
   16b60:	bl	12ff0 <__isoc99_sscanf@plt>
   16b64:	mvn	r7, #0
   16b68:	cmp	r0, #1
   16b6c:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16b70:	ldr	r3, [sp, #8]
   16b74:	mov	r0, r6
   16b78:	mov	r1, r5
   16b7c:	mov	r2, r4
   16b80:	bl	16338 <table_set_int@@Base>
   16b84:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16b88:	movw	r1, #29424	; 0x72f0
   16b8c:	add	r2, sp, #8
   16b90:	mov	r0, r7
   16b94:	movt	r1, #1
   16b98:	bl	12ff0 <__isoc99_sscanf@plt>
   16b9c:	mvn	r7, #0
   16ba0:	cmp	r0, #1
   16ba4:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16ba8:	ldr	r3, [sp, #8]
   16bac:	mov	r0, r6
   16bb0:	mov	r1, r5
   16bb4:	mov	r2, r4
   16bb8:	bl	16360 <table_set_uint@@Base>
   16bbc:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16bc0:	movw	r1, #29473	; 0x7321
   16bc4:	add	r2, sp, #8
   16bc8:	mov	r0, r7
   16bcc:	movt	r1, #1
   16bd0:	bl	12ff0 <__isoc99_sscanf@plt>
   16bd4:	mvn	r7, #0
   16bd8:	cmp	r0, #1
   16bdc:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16be0:	ldrsb	r3, [sp, #8]
   16be4:	mov	r0, r6
   16be8:	mov	r1, r5
   16bec:	mov	r2, r4
   16bf0:	bl	16388 <table_set_int8@@Base>
   16bf4:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16bf8:	movw	r1, #29478	; 0x7326
   16bfc:	add	r2, sp, #8
   16c00:	mov	r0, r7
   16c04:	movt	r1, #1
   16c08:	bl	12ff0 <__isoc99_sscanf@plt>
   16c0c:	mvn	r7, #0
   16c10:	cmp	r0, #1
   16c14:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16c18:	ldrb	r3, [sp, #8]
   16c1c:	mov	r0, r6
   16c20:	mov	r1, r5
   16c24:	mov	r2, r4
   16c28:	bl	163b0 <table_set_uint8@@Base>
   16c2c:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16c30:	movw	r1, #29437	; 0x72fd
   16c34:	add	r2, sp, #8
   16c38:	mov	r0, r7
   16c3c:	movt	r1, #1
   16c40:	bl	12ff0 <__isoc99_sscanf@plt>
   16c44:	mvn	r7, #0
   16c48:	cmp	r0, #1
   16c4c:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16c50:	ldrsh	r3, [sp, #8]
   16c54:	mov	r0, r6
   16c58:	mov	r1, r5
   16c5c:	mov	r2, r4
   16c60:	bl	163d8 <table_set_int16@@Base>
   16c64:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16c68:	movw	r1, #29441	; 0x7301
   16c6c:	add	r2, sp, #8
   16c70:	mov	r0, r7
   16c74:	movt	r1, #1
   16c78:	bl	12ff0 <__isoc99_sscanf@plt>
   16c7c:	mvn	r7, #0
   16c80:	cmp	r0, #1
   16c84:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16c88:	ldrh	r3, [sp, #8]
   16c8c:	mov	r0, r6
   16c90:	mov	r1, r5
   16c94:	mov	r2, r4
   16c98:	bl	16400 <table_set_uint16@@Base>
   16c9c:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16ca0:	movw	r1, #29133	; 0x71cd
   16ca4:	add	r2, sp, #8
   16ca8:	mov	r0, r7
   16cac:	movt	r1, #1
   16cb0:	bl	12ff0 <__isoc99_sscanf@plt>
   16cb4:	mvn	r7, #0
   16cb8:	cmp	r0, #1
   16cbc:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16cc0:	ldr	r3, [sp, #8]
   16cc4:	mov	r0, r6
   16cc8:	mov	r1, r5
   16ccc:	mov	r2, r4
   16cd0:	bl	16428 <table_set_int32@@Base>
   16cd4:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16cd8:	movw	r1, #29424	; 0x72f0
   16cdc:	add	r2, sp, #8
   16ce0:	mov	r0, r7
   16ce4:	movt	r1, #1
   16ce8:	bl	12ff0 <__isoc99_sscanf@plt>
   16cec:	mvn	r7, #0
   16cf0:	cmp	r0, #1
   16cf4:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16cf8:	ldr	r3, [sp, #8]
   16cfc:	mov	r0, r6
   16d00:	mov	r1, r5
   16d04:	mov	r2, r4
   16d08:	bl	16450 <table_set_uint32@@Base>
   16d0c:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16d10:	movw	r1, #29427	; 0x72f3
   16d14:	add	r2, sp, #8
   16d18:	mov	r0, r7
   16d1c:	movt	r1, #1
   16d20:	bl	12ff0 <__isoc99_sscanf@plt>
   16d24:	mvn	r7, #0
   16d28:	cmp	r0, #1
   16d2c:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16d30:	ldr	r0, [sp, #8]
   16d34:	ldr	r1, [sp, #12]
   16d38:	mov	r2, r4
   16d3c:	stm	sp, {r0, r1}
   16d40:	mov	r0, r6
   16d44:	mov	r1, r5
   16d48:	bl	16478 <table_set_int64@@Base>
   16d4c:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16d50:	movw	r1, #29432	; 0x72f8
   16d54:	add	r2, sp, #8
   16d58:	mov	r0, r7
   16d5c:	movt	r1, #1
   16d60:	bl	12ff0 <__isoc99_sscanf@plt>
   16d64:	mvn	r7, #0
   16d68:	cmp	r0, #1
   16d6c:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16d70:	ldr	r0, [sp, #8]
   16d74:	ldr	r1, [sp, #12]
   16d78:	mov	r2, r4
   16d7c:	stm	sp, {r0, r1}
   16d80:	mov	r0, r6
   16d84:	mov	r1, r5
   16d88:	bl	164ac <table_set_uint64@@Base>
   16d8c:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16d90:	movw	r1, #29437	; 0x72fd
   16d94:	add	r2, sp, #8
   16d98:	mov	r0, r7
   16d9c:	movt	r1, #1
   16da0:	bl	12ff0 <__isoc99_sscanf@plt>
   16da4:	mvn	r7, #0
   16da8:	cmp	r0, #1
   16dac:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16db0:	ldrsh	r3, [sp, #8]
   16db4:	mov	r0, r6
   16db8:	mov	r1, r5
   16dbc:	mov	r2, r4
   16dc0:	bl	164e0 <table_set_short@@Base>
   16dc4:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16dc8:	movw	r1, #29441	; 0x7301
   16dcc:	add	r2, sp, #8
   16dd0:	mov	r0, r7
   16dd4:	movt	r1, #1
   16dd8:	bl	12ff0 <__isoc99_sscanf@plt>
   16ddc:	mvn	r7, #0
   16de0:	cmp	r0, #1
   16de4:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16de8:	ldrh	r3, [sp, #8]
   16dec:	mov	r0, r6
   16df0:	mov	r1, r5
   16df4:	mov	r2, r4
   16df8:	bl	16508 <table_set_ushort@@Base>
   16dfc:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16e00:	movw	r1, #29445	; 0x7305
   16e04:	add	r2, sp, #8
   16e08:	mov	r0, r7
   16e0c:	movt	r1, #1
   16e10:	bl	12ff0 <__isoc99_sscanf@plt>
   16e14:	mvn	r7, #0
   16e18:	cmp	r0, #1
   16e1c:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16e20:	ldr	r3, [sp, #8]
   16e24:	mov	r0, r6
   16e28:	mov	r1, r5
   16e2c:	mov	r2, r4
   16e30:	bl	16530 <table_set_long@@Base>
   16e34:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16e38:	movw	r1, #29449	; 0x7309
   16e3c:	add	r2, sp, #8
   16e40:	mov	r0, r7
   16e44:	movt	r1, #1
   16e48:	bl	12ff0 <__isoc99_sscanf@plt>
   16e4c:	mvn	r7, #0
   16e50:	cmp	r0, #1
   16e54:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16e58:	ldr	r3, [sp, #8]
   16e5c:	mov	r0, r6
   16e60:	mov	r1, r5
   16e64:	mov	r2, r4
   16e68:	bl	16558 <table_set_ulong@@Base>
   16e6c:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16e70:	movw	r1, #29427	; 0x72f3
   16e74:	add	r2, sp, #8
   16e78:	mov	r0, r7
   16e7c:	movt	r1, #1
   16e80:	bl	12ff0 <__isoc99_sscanf@plt>
   16e84:	mvn	r7, #0
   16e88:	cmp	r0, #1
   16e8c:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16e90:	ldr	r0, [sp, #8]
   16e94:	ldr	r1, [sp, #12]
   16e98:	mov	r2, r4
   16e9c:	stm	sp, {r0, r1}
   16ea0:	mov	r0, r6
   16ea4:	mov	r1, r5
   16ea8:	bl	16580 <table_set_llong@@Base>
   16eac:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16eb0:	movw	r1, #29432	; 0x72f8
   16eb4:	add	r2, sp, #8
   16eb8:	mov	r0, r7
   16ebc:	movt	r1, #1
   16ec0:	bl	12ff0 <__isoc99_sscanf@plt>
   16ec4:	mvn	r7, #0
   16ec8:	cmp	r0, #1
   16ecc:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16ed0:	ldr	r0, [sp, #8]
   16ed4:	ldr	r1, [sp, #12]
   16ed8:	mov	r2, r4
   16edc:	stm	sp, {r0, r1}
   16ee0:	mov	r0, r6
   16ee4:	mov	r1, r5
   16ee8:	bl	165b4 <table_set_ullong@@Base>
   16eec:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16ef0:	movw	r1, #29456	; 0x7310
   16ef4:	add	r2, sp, #8
   16ef8:	mov	r0, r7
   16efc:	movt	r1, #1
   16f00:	bl	12ff0 <__isoc99_sscanf@plt>
   16f04:	mvn	r7, #0
   16f08:	cmp	r0, #1
   16f0c:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16f10:	vldr	s0, [sp, #8]
   16f14:	mov	r0, r6
   16f18:	mov	r1, r5
   16f1c:	mov	r2, r4
   16f20:	bl	165e8 <table_set_float@@Base>
   16f24:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16f28:	movw	r1, #29459	; 0x7313
   16f2c:	add	r2, sp, #8
   16f30:	mov	r0, r7
   16f34:	movt	r1, #1
   16f38:	bl	12ff0 <__isoc99_sscanf@plt>
   16f3c:	mvn	r7, #0
   16f40:	cmp	r0, #1
   16f44:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16f48:	vldr	d0, [sp, #8]
   16f4c:	mov	r0, r6
   16f50:	mov	r1, r5
   16f54:	mov	r2, r4
   16f58:	bl	16610 <table_set_double@@Base>
   16f5c:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16f60:	movw	r1, #29463	; 0x7317
   16f64:	add	r2, sp, #8
   16f68:	mov	r0, r7
   16f6c:	movt	r1, #1
   16f70:	bl	12ff0 <__isoc99_sscanf@plt>
   16f74:	mvn	r7, #0
   16f78:	cmp	r0, #1
   16f7c:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16f80:	vldr	d0, [sp, #8]
   16f84:	mov	r0, r6
   16f88:	mov	r1, r5
   16f8c:	mov	r2, r4
   16f90:	bl	16638 <table_set_ldouble@@Base>
   16f94:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16f98:	movw	r1, #29467	; 0x731b
   16f9c:	add	r2, sp, #8
   16fa0:	mov	r0, r7
   16fa4:	movt	r1, #1
   16fa8:	bl	12ff0 <__isoc99_sscanf@plt>
   16fac:	mvn	r7, #0
   16fb0:	cmp	r0, #1
   16fb4:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16fb8:	ldrb	r3, [sp, #8]
   16fbc:	mov	r0, r6
   16fc0:	mov	r1, r5
   16fc4:	mov	r2, r4
   16fc8:	bl	16680 <table_set_char@@Base>
   16fcc:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   16fd0:	movw	r1, #29467	; 0x731b
   16fd4:	add	r2, sp, #8
   16fd8:	mov	r0, r7
   16fdc:	movt	r1, #1
   16fe0:	bl	12ff0 <__isoc99_sscanf@plt>
   16fe4:	mvn	r7, #0
   16fe8:	cmp	r0, #1
   16fec:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   16ff0:	ldrb	r3, [sp, #8]
   16ff4:	mov	r0, r6
   16ff8:	mov	r1, r5
   16ffc:	mov	r2, r4
   17000:	bl	166a8 <table_set_uchar@@Base>
   17004:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   17008:	movw	r1, #29453	; 0x730d
   1700c:	add	r2, sp, #8
   17010:	mov	r0, r7
   17014:	movt	r1, #1
   17018:	bl	12ff0 <__isoc99_sscanf@plt>
   1701c:	mvn	r7, #0
   17020:	cmp	r0, #1
   17024:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   17028:	add	r3, sp, #8
   1702c:	mov	r0, r6
   17030:	mov	r1, r5
   17034:	mov	r2, r4
   17038:	bl	16660 <table_set_string@@Base>
   1703c:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   17040:	movw	r1, #29133	; 0x71cd
   17044:	add	r2, sp, #8
   17048:	mov	r0, r7
   1704c:	movt	r1, #1
   17050:	bl	12ff0 <__isoc99_sscanf@plt>
   17054:	mvn	r7, #0
   17058:	cmp	r0, #1
   1705c:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   17060:	ldr	r0, [sp, #8]
   17064:	cmp	r0, #0
   17068:	beq	170c8 <table_cell_from_buffer@@Base+0x60c>
   1706c:	mov	r0, r6
   17070:	mov	r1, r5
   17074:	mov	r2, r4
   17078:	mov	r3, #1
   1707c:	bl	16310 <table_set_bool@@Base>
   17080:	b	170b8 <table_cell_from_buffer@@Base+0x5fc>
   17084:	movw	r1, #29470	; 0x731e
   17088:	add	r2, sp, #8
   1708c:	mov	r0, r7
   17090:	movt	r1, #1
   17094:	bl	12ff0 <__isoc99_sscanf@plt>
   17098:	mvn	r7, #0
   1709c:	cmp	r0, #1
   170a0:	bne	170bc <table_cell_from_buffer@@Base+0x600>
   170a4:	ldr	r3, [sp, #8]
   170a8:	mov	r0, r6
   170ac:	mov	r1, r5
   170b0:	mov	r2, r4
   170b4:	bl	166d0 <table_set_ptr@@Base>
   170b8:	mov	r7, #0
   170bc:	mov	r0, r7
   170c0:	sub	sp, fp, #24
   170c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   170c8:	mov	r0, r6
   170cc:	mov	r1, r5
   170d0:	mov	r2, r4
   170d4:	mov	r3, #0
   170d8:	mov	r7, #0
   170dc:	bl	16310 <table_set_bool@@Base>
   170e0:	b	170bc <table_cell_from_buffer@@Base+0x600>

000170e4 <table_cell_nullify@@Base>:
   170e4:	push	{r4, r5, fp, lr}
   170e8:	add	fp, sp, #8
   170ec:	mov	r4, r2
   170f0:	bl	15dd0 <table_get_row_ptr@@Base>
   170f4:	ldr	r5, [r0]
   170f8:	ldr	r0, [r5, r4, lsl #2]
   170fc:	cmp	r0, #0
   17100:	beq	17110 <table_cell_nullify@@Base+0x2c>
   17104:	bl	12f90 <free@plt>
   17108:	mov	r0, #0
   1710c:	str	r0, [r5, r4, lsl #2]
   17110:	mov	r0, #0
   17114:	pop	{r4, r5, fp, pc}

00017118 <__libc_csu_init@@Base>:
   17118:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1711c:	mov	r7, r0
   17120:	ldr	r6, [pc, #72]	; 17170 <__libc_csu_init@@Base+0x58>
   17124:	ldr	r5, [pc, #72]	; 17174 <__libc_csu_init@@Base+0x5c>
   17128:	add	r6, pc, r6
   1712c:	add	r5, pc, r5
   17130:	sub	r6, r6, r5
   17134:	mov	r8, r1
   17138:	mov	r9, r2
   1713c:	bl	12f58 <strcmp@plt-0x20>
   17140:	asrs	r6, r6, #2
   17144:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17148:	mov	r4, #0
   1714c:	add	r4, r4, #1
   17150:	ldr	r3, [r5], #4
   17154:	mov	r2, r9
   17158:	mov	r1, r8
   1715c:	mov	r0, r7
   17160:	blx	r3
   17164:	cmp	r6, r4
   17168:	bne	1714c <__libc_csu_init@@Base+0x34>
   1716c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17170:	ldrdeq	r0, [r1], -ip
   17174:	ldrdeq	r0, [r1], -r4

00017178 <__libc_csu_fini@@Base>:
   17178:	bx	lr

Disassembly of section .fini:

0001717c <.fini>:
   1717c:	push	{r3, lr}
   17180:	pop	{r3, pc}
