
../repos/charybdis/extensions/.libs/ip_cloaking_3.0.so:     file format elf32-littlearm


Disassembly of section .init:

00000610 <_init>:
 610:	push	{r3, lr}
 614:	bl	6fc <call_weak_fn>
 618:	pop	{r3, pc}

Disassembly of section .plt:

0000061c <.plt>:
 61c:	push	{lr}		; (str lr, [sp, #-4]!)
 620:	ldr	lr, [pc, #4]	; 62c <.plt+0x10>
 624:	add	lr, pc, lr
 628:	ldr	pc, [lr, #8]!
 62c:	.word	0x000119d4

00000630 <calloc@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #69632	; 0x11000
 638:	ldr	pc, [ip, #2516]!	; 0x9d4

0000063c <strcmp@plt>:
 63c:	add	ip, pc, #0, 12
 640:	add	ip, ip, #69632	; 0x11000
 644:	ldr	pc, [ip, #2508]!	; 0x9cc

00000648 <__cxa_finalize@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #69632	; 0x11000
 650:	ldr	pc, [ip, #2500]!	; 0x9c4

00000654 <rb_outofmemory@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #69632	; 0x11000
 65c:	ldr	pc, [ip, #2492]!	; 0x9bc

00000660 <find_umode_slot@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #69632	; 0x11000
 668:	ldr	pc, [ip, #2484]!	; 0x9b4

0000066c <sendto_server@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #69632	; 0x11000
 674:	ldr	pc, [ip, #2476]!	; 0x9ac

00000678 <__gmon_start__@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #69632	; 0x11000
 680:	ldr	pc, [ip, #2468]!	; 0x9a4

00000684 <__ctype_b_loc@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #69632	; 0x11000
 68c:	ldr	pc, [ip, #2460]!	; 0x99c

00000690 <sendto_one_numeric@plt>:
 690:	add	ip, pc, #0, 12
 694:	add	ip, ip, #69632	; 0x11000
 698:	ldr	pc, [ip, #2452]!	; 0x994

0000069c <snprintf@plt>:
 69c:	add	ip, pc, #0, 12
 6a0:	add	ip, ip, #69632	; 0x11000
 6a4:	ldr	pc, [ip, #2444]!	; 0x98c

000006a8 <memset@plt>:
 6a8:	add	ip, pc, #0, 12
 6ac:	add	ip, ip, #69632	; 0x11000
 6b0:	ldr	pc, [ip, #2436]!	; 0x984

000006b4 <strncpy@plt>:
 6b4:	add	ip, pc, #0, 12
 6b8:	add	ip, ip, #69632	; 0x11000
 6bc:	ldr	pc, [ip, #2428]!	; 0x97c

000006c0 <strrchr@plt>:
 6c0:	add	ip, pc, #0, 12
 6c4:	add	ip, ip, #69632	; 0x11000
 6c8:	ldr	pc, [ip, #2420]!	; 0x974

000006cc <change_nick_user_host@plt>:
 6cc:	add	ip, pc, #0, 12
 6d0:	add	ip, ip, #69632	; 0x11000
 6d4:	ldr	pc, [ip, #2412]!	; 0x96c

000006d8 <rb_strlcpy@plt>:
 6d8:	add	ip, pc, #0, 12
 6dc:	add	ip, ip, #69632	; 0x11000
 6e0:	ldr	pc, [ip, #2404]!	; 0x964

000006e4 <irccmp@plt>:
 6e4:	add	ip, pc, #0, 12
 6e8:	add	ip, ip, #69632	; 0x11000
 6ec:	ldr	pc, [ip, #2396]!	; 0x95c

000006f0 <construct_umodebuf@plt>:
 6f0:	add	ip, pc, #0, 12
 6f4:	add	ip, ip, #69632	; 0x11000
 6f8:	ldr	pc, [ip, #2388]!	; 0x954

Disassembly of section .text:

000006fc <call_weak_fn>:
 6fc:	ldr	r3, [pc, #20]	; 718 <call_weak_fn+0x1c>
 700:	ldr	r2, [pc, #20]	; 71c <call_weak_fn+0x20>
 704:	add	r3, pc, r3
 708:	ldr	r2, [r3, r2]
 70c:	cmp	r2, #0
 710:	bxeq	lr
 714:	b	678 <__gmon_start__@plt>
 718:	.word	0x000118f4
 71c:	.word	0x00000060

00000720 <deregister_tm_clones>:
 720:	ldr	r0, [pc, #44]	; 754 <deregister_tm_clones+0x34>
 724:	ldr	r3, [pc, #44]	; 758 <deregister_tm_clones+0x38>
 728:	add	r0, pc, r0
 72c:	add	r3, pc, r3
 730:	cmp	r3, r0
 734:	ldr	r3, [pc, #32]	; 75c <deregister_tm_clones+0x3c>
 738:	add	r3, pc, r3
 73c:	bxeq	lr
 740:	ldr	r2, [pc, #24]	; 760 <deregister_tm_clones+0x40>
 744:	ldr	r3, [r3, r2]
 748:	cmp	r3, #0
 74c:	bxeq	lr
 750:	bx	r3
 754:	.word	0x00011990
 758:	.word	0x0001198c
 75c:	.word	0x000118c0
 760:	.word	0x00000054

00000764 <register_tm_clones>:
 764:	ldr	r0, [pc, #56]	; 7a4 <register_tm_clones+0x40>
 768:	ldr	r3, [pc, #56]	; 7a8 <register_tm_clones+0x44>
 76c:	add	r0, pc, r0
 770:	add	r3, pc, r3
 774:	sub	r1, r3, r0
 778:	ldr	r3, [pc, #44]	; 7ac <register_tm_clones+0x48>
 77c:	asr	r1, r1, #2
 780:	add	r3, pc, r3
 784:	add	r1, r1, r1, lsr #31
 788:	asrs	r1, r1, #1
 78c:	bxeq	lr
 790:	ldr	r2, [pc, #24]	; 7b0 <register_tm_clones+0x4c>
 794:	ldr	r3, [r3, r2]
 798:	cmp	r3, #0
 79c:	bxeq	lr
 7a0:	bx	r3
 7a4:	.word	0x0001194c
 7a8:	.word	0x00011948
 7ac:	.word	0x00011878
 7b0:	.word	0x00000068

000007b4 <__do_global_dtors_aux>:
 7b4:	ldr	r3, [pc, #76]	; 808 <__do_global_dtors_aux+0x54>
 7b8:	ldr	r2, [pc, #76]	; 80c <__do_global_dtors_aux+0x58>
 7bc:	add	r3, pc, r3
 7c0:	add	r2, pc, r2
 7c4:	ldrb	r3, [r3]
 7c8:	cmp	r3, #0
 7cc:	bxne	lr
 7d0:	ldr	r3, [pc, #56]	; 810 <__do_global_dtors_aux+0x5c>
 7d4:	push	{r4, lr}
 7d8:	ldr	r3, [r2, r3]
 7dc:	cmp	r3, #0
 7e0:	beq	7f0 <__do_global_dtors_aux+0x3c>
 7e4:	ldr	r3, [pc, #40]	; 814 <__do_global_dtors_aux+0x60>
 7e8:	ldr	r0, [pc, r3]
 7ec:	bl	648 <__cxa_finalize@plt>
 7f0:	bl	720 <deregister_tm_clones>
 7f4:	ldr	r3, [pc, #28]	; 818 <__do_global_dtors_aux+0x64>
 7f8:	mov	r2, #1
 7fc:	add	r3, pc, r3
 800:	strb	r2, [r3]
 804:	pop	{r4, pc}
 808:	.word	0x000118fc
 80c:	.word	0x00011838
 810:	.word	0x00000050
 814:	.word	0x00011880
 818:	.word	0x000118bc

0000081c <frame_dummy>:
 81c:	b	764 <register_tm_clones>

00000820 <distribute_hostchange>:
 820:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 824:	add	r7, r0, #227	; 0xe3
 828:	mov	r4, r0
 82c:	cmp	r7, r1
 830:	mov	r6, r1
 834:	ldr	r5, [pc, #304]	; 96c <distribute_hostchange+0x14c>
 838:	add	r5, pc, r5
 83c:	beq	95c <distribute_hostchange+0x13c>
 840:	ldr	r2, [pc, #296]	; 970 <distribute_hostchange+0x150>
 844:	mov	r3, r1
 848:	add	r2, pc, r2
 84c:	mov	r1, #396	; 0x18c
 850:	add	r8, r4, #88	; 0x58
 854:	bl	690 <sendto_one_numeric@plt>
 858:	ldr	r3, [pc, #276]	; 974 <distribute_hostchange+0x154>
 85c:	ldrb	r1, [r4, #396]	; 0x18c
 860:	ldr	r9, [r5, r3]
 864:	ldr	r3, [pc, #268]	; 978 <distribute_hostchange+0x158>
 868:	ldr	sl, [r5, r3]
 86c:	ldr	r3, [r9]
 870:	ldr	r2, [sl]
 874:	orr	r2, r3, r2
 878:	ldr	r3, [pc, #252]	; 97c <distribute_hostchange+0x15c>
 87c:	ldr	r5, [r5, r3]
 880:	ldrb	r3, [r5, #396]	; 0x18c
 884:	str	r6, [sp, #12]
 888:	cmp	r3, #0
 88c:	addeq	r3, r5, #88	; 0x58
 890:	addne	r3, r5, #396	; 0x18c
 894:	cmp	r1, #0
 898:	str	r3, [sp, #4]
 89c:	addne	r1, r4, #396	; 0x18c
 8a0:	moveq	r1, r8
 8a4:	ldr	r3, [pc, #212]	; 980 <distribute_hostchange+0x160>
 8a8:	str	r1, [sp, #8]
 8ac:	add	r3, pc, r3
 8b0:	str	r3, [sp]
 8b4:	mov	r3, #0
 8b8:	mov	r1, r3
 8bc:	mov	r0, r3
 8c0:	bl	66c <sendto_server@plt>
 8c4:	ldrb	r1, [r5, #396]	; 0x18c
 8c8:	ldr	r3, [r9]
 8cc:	ldr	r2, [sl]
 8d0:	cmp	r1, #0
 8d4:	ldrb	r1, [r4, #396]	; 0x18c
 8d8:	addeq	r5, r5, #88	; 0x58
 8dc:	addne	r5, r5, #396	; 0x18c
 8e0:	str	r5, [sp, #4]
 8e4:	str	r6, [sp, #12]
 8e8:	cmp	r1, #0
 8ec:	addne	r1, r4, #396	; 0x18c
 8f0:	moveq	r1, r8
 8f4:	str	r1, [sp, #8]
 8f8:	ldr	r1, [pc, #132]	; 984 <distribute_hostchange+0x164>
 8fc:	add	r1, pc, r1
 900:	str	r1, [sp]
 904:	mov	r1, #0
 908:	mov	r0, r1
 90c:	bl	66c <sendto_server@plt>
 910:	ldr	r3, [pc, #112]	; 988 <distribute_hostchange+0x168>
 914:	add	r2, r4, #152	; 0x98
 918:	mov	r1, r8
 91c:	mov	r0, r4
 920:	add	r3, pc, r3
 924:	str	r3, [sp, #4]
 928:	mov	r3, #0
 92c:	str	r3, [sp]
 930:	mov	r3, r6
 934:	bl	6cc <change_nick_user_host@plt>
 938:	ldr	r3, [r4, #64]	; 0x40
 93c:	cmp	r7, r6
 940:	ldr	r2, [r4, #68]	; 0x44
 944:	orrne	r3, r3, #131072	; 0x20000
 948:	biceq	r3, r3, #131072	; 0x20000
 94c:	str	r3, [r4, #64]	; 0x40
 950:	str	r2, [r4, #68]	; 0x44
 954:	add	sp, sp, #16
 958:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 95c:	ldr	r2, [pc, #40]	; 98c <distribute_hostchange+0x16c>
 960:	mov	r3, r7
 964:	add	r2, pc, r2
 968:	b	84c <distribute_hostchange+0x2c>
 96c:	.word	0x000117c0
 970:	.word	0x00000612
 974:	.word	0x00000064
 978:	.word	0x00000058
 97c:	.word	0x0000006c
 980:	.word	0x000005dd
 984:	.word	0x000005a0
 988:	.word	0x00000597
 98c:	.word	0x00000512

00000990 <check_umode_change>:
 990:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 994:	mov	r8, #0
 998:	mov	r3, r8
 99c:	ldr	r4, [r0]
 9a0:	ldr	r1, [pc, #240]	; a98 <check_umode_change+0x108>
 9a4:	ldr	r9, [r4, #64]	; 0x40
 9a8:	add	r1, pc, r1
 9ac:	and	r2, r9, #8192	; 0x2000
 9b0:	orrs	r3, r2, r3
 9b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 9b8:	ldrh	r3, [r4, #80]	; 0x50
 9bc:	cmp	r3, #64	; 0x40
 9c0:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
 9c4:	ldr	r3, [pc, #208]	; a9c <check_umode_change+0x10c>
 9c8:	ldr	r5, [r4, #56]	; 0x38
 9cc:	ldr	r3, [r1, r3]
 9d0:	ldr	r7, [r3, #416]	; 0x1a0
 9d4:	ldr	r3, [r0, #4]
 9d8:	eor	r3, r3, r5
 9dc:	tst	r3, r7
 9e0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 9e4:	tst	r5, r7
 9e8:	beq	a68 <check_umode_change+0xd8>
 9ec:	and	r2, r9, #16777216	; 0x1000000
 9f0:	mov	r3, r8
 9f4:	orrs	r3, r2, r3
 9f8:	bne	a34 <check_umode_change+0xa4>
 9fc:	ldr	r3, [r4, #432]	; 0x1b0
 a00:	ldr	r6, [r3, #432]	; 0x1b0
 a04:	cmp	r6, r8
 a08:	beq	a34 <check_umode_change+0xa4>
 a0c:	add	sl, r4, #163	; 0xa3
 a10:	mov	r1, r6
 a14:	mov	r0, sl
 a18:	bl	63c <strcmp@plt>
 a1c:	and	r2, r9, #131072	; 0x20000
 a20:	mov	r3, r8
 a24:	orrs	r3, r2, r3
 a28:	beq	a40 <check_umode_change+0xb0>
 a2c:	cmp	r0, r8
 a30:	beq	a4c <check_umode_change+0xbc>
 a34:	bic	r5, r5, r7
 a38:	str	r5, [r4, #56]	; 0x38
 a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 a40:	cmp	r0, #0
 a44:	movne	r1, r6
 a48:	bne	a8c <check_umode_change+0xfc>
 a4c:	ldr	r2, [pc, #76]	; aa0 <check_umode_change+0x110>
 a50:	mov	r3, sl
 a54:	mov	r0, r4
 a58:	mov	r1, #396	; 0x18c
 a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 a60:	add	r2, pc, r2
 a64:	b	690 <sendto_one_numeric@plt>
 a68:	ldr	r3, [r4, #432]	; 0x1b0
 a6c:	ldr	r1, [r3, #432]	; 0x1b0
 a70:	cmp	r1, #0
 a74:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 a78:	add	r0, r4, #163	; 0xa3
 a7c:	bl	63c <strcmp@plt>
 a80:	cmp	r0, #0
 a84:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
 a88:	add	r1, r4, #227	; 0xe3
 a8c:	mov	r0, r4
 a90:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 a94:	b	820 <distribute_hostchange>
 a98:	.word	0x00011650
 a9c:	.word	0x0000005c
 aa0:	.word	0x000003fa

00000aa4 <_moddeinit>:
 aa4:	ldr	r3, [pc, #20]	; ac0 <_moddeinit+0x1c>
 aa8:	ldr	r2, [pc, #20]	; ac4 <_moddeinit+0x20>
 aac:	add	r3, pc, r3
 ab0:	ldr	r3, [r3, r2]
 ab4:	mov	r2, #0
 ab8:	str	r2, [r3, #416]	; 0x1a0
 abc:	b	6f0 <construct_umodebuf@plt>
 ac0:	.word	0x0001154c
 ac4:	.word	0x0000005c

00000ac8 <_modinit>:
 ac8:	push	{r4, lr}
 acc:	ldr	r4, [pc, #28]	; af0 <_modinit+0x28>
 ad0:	bl	660 <find_umode_slot@plt>
 ad4:	ldr	r3, [pc, #24]	; af4 <_modinit+0x2c>
 ad8:	add	r4, pc, r4
 adc:	ldr	r3, [r4, r3]
 ae0:	str	r0, [r3, #416]	; 0x1a0
 ae4:	bl	6f0 <construct_umodebuf@plt>
 ae8:	mov	r0, #0
 aec:	pop	{r4, pc}
 af0:	.word	0x00011520
 af4:	.word	0x0000005c

00000af8 <get_string_weighted_entropy>:
 af8:	sub	r0, r0, #1
 afc:	mov	r2, #1
 b00:	ldrb	r3, [r0, #1]!
 b04:	cmp	r3, #0
 b08:	bne	b5c <get_string_weighted_entropy+0x64>
 b0c:	ldr	r3, [pc, #88]	; b6c <get_string_weighted_entropy+0x74>
 b10:	add	r3, pc, r3
 b14:	ldr	r3, [r3]
 b18:	cmp	r3, #0
 b1c:	bne	b44 <get_string_weighted_entropy+0x4c>
 b20:	ldr	r0, [pc, #72]	; b70 <get_string_weighted_entropy+0x78>
 b24:	mov	r3, #1
 b28:	add	r0, pc, r0
 b2c:	ldrb	r1, [r0], #1
 b30:	cmp	r1, #0
 b34:	bne	b64 <get_string_weighted_entropy+0x6c>
 b38:	ldr	r1, [pc, #52]	; b74 <get_string_weighted_entropy+0x7c>
 b3c:	add	r1, pc, r1
 b40:	str	r3, [r1]
 b44:	ldr	r3, [pc, #44]	; b78 <get_string_weighted_entropy+0x80>
 b48:	mul	r3, r3, r2
 b4c:	ldr	r2, [pc, #40]	; b7c <get_string_weighted_entropy+0x84>
 b50:	ldr	r0, [pc, r2]
 b54:	eor	r0, r0, r3
 b58:	bx	lr
 b5c:	add	r2, r2, r3
 b60:	b	b00 <get_string_weighted_entropy+0x8>
 b64:	add	r3, r3, r1
 b68:	b	b2c <get_string_weighted_entropy+0x34>
 b6c:	.word	0x000115ac
 b70:	.word	0x0000039d
 b74:	.word	0x00011580
 b78:	.word	0x8c3a48ac
 b7c:	.word	0x0001156c

00000b80 <check_new_user>:
 b80:	ldr	r1, [r0, #64]	; 0x40
 b84:	mov	r3, #0
 b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 b8c:	sub	sp, sp, #76	; 0x4c
 b90:	ldr	r8, [pc, #644]	; e1c <check_new_user+0x29c>
 b94:	and	r2, r1, #16777216	; 0x1000000
 b98:	orrs	r3, r2, r3
 b9c:	add	r8, pc, r8
 ba0:	beq	bc4 <check_new_user+0x44>
 ba4:	ldr	r3, [pc, #628]	; e20 <check_new_user+0x2a0>
 ba8:	ldr	r3, [r8, r3]
 bac:	ldr	r2, [r3, #416]	; 0x1a0
 bb0:	ldr	r3, [r0, #56]	; 0x38
 bb4:	bic	r3, r3, r2
 bb8:	str	r3, [r0, #56]	; 0x38
 bbc:	add	sp, sp, #76	; 0x4c
 bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 bc4:	mov	r4, r0
 bc8:	mov	r1, #64	; 0x40
 bcc:	mov	r0, #1
 bd0:	ldr	r5, [r4, #432]	; 0x1b0
 bd4:	bl	630 <calloc@plt>
 bd8:	cmp	r0, #0
 bdc:	bne	be4 <check_new_user+0x64>
 be0:	bl	654 <rb_outofmemory@plt>
 be4:	add	r6, r4, #227	; 0xe3
 be8:	add	r1, r4, #288	; 0x120
 bec:	str	r0, [r5, #432]	; 0x1b0
 bf0:	add	r1, r1, #3
 bf4:	mov	r0, r6
 bf8:	bl	6e4 <irccmp@plt>
 bfc:	ldr	r3, [r4, #432]	; 0x1b0
 c00:	subs	r9, r0, #0
 c04:	add	r5, sp, #8
 c08:	ldr	r7, [r3, #432]	; 0x1b0
 c0c:	bne	d24 <check_new_user+0x1a4>
 c10:	mov	r0, r6
 c14:	bl	af8 <get_string_weighted_entropy>
 c18:	mov	sl, r0
 c1c:	mov	r2, #64	; 0x40
 c20:	mov	r1, r9
 c24:	mov	r0, r5
 c28:	bl	6a8 <memset@plt>
 c2c:	mov	r2, #63	; 0x3f
 c30:	mov	r1, r6
 c34:	mov	r0, r5
 c38:	bl	6b4 <strncpy@plt>
 c3c:	mov	r1, #46	; 0x2e
 c40:	mov	r0, r5
 c44:	bl	6c0 <strrchr@plt>
 c48:	cmp	r0, #0
 c4c:	bne	ce8 <check_new_user+0x168>
 c50:	mov	r1, #58	; 0x3a
 c54:	mov	r0, r5
 c58:	bl	6c0 <strrchr@plt>
 c5c:	cmp	r0, #0
 c60:	movne	r9, #1
 c64:	bne	ce8 <check_new_user+0x168>
 c68:	mov	r2, #63	; 0x3f
 c6c:	mov	r1, r6
 c70:	mov	r0, r7
 c74:	bl	6b4 <strncpy@plt>
 c78:	ldr	r1, [r4, #64]	; 0x40
 c7c:	mov	r3, #0
 c80:	and	r2, r1, #131072	; 0x20000
 c84:	orrs	r3, r2, r3
 c88:	ldr	r3, [pc, #400]	; e20 <check_new_user+0x2a0>
 c8c:	ldr	r2, [r8, r3]
 c90:	ldrne	r3, [r4, #56]	; 0x38
 c94:	ldrne	r1, [r2, #416]	; 0x1a0
 c98:	bicne	r3, r3, r1
 c9c:	strne	r3, [r4, #56]	; 0x38
 ca0:	ldr	r1, [r4, #56]	; 0x38
 ca4:	ldr	r3, [r2, #416]	; 0x1a0
 ca8:	tst	r1, r3
 cac:	beq	bbc <check_new_user+0x3c>
 cb0:	ldr	r3, [r4, #432]	; 0x1b0
 cb4:	add	r5, r4, #163	; 0xa3
 cb8:	mov	r2, #64	; 0x40
 cbc:	mov	r0, r5
 cc0:	ldr	r1, [r3, #432]	; 0x1b0
 cc4:	bl	6d8 <rb_strlcpy@plt>
 cc8:	mov	r1, r6
 ccc:	mov	r0, r5
 cd0:	bl	6e4 <irccmp@plt>
 cd4:	cmp	r0, #0
 cd8:	ldrne	r3, [r4, #64]	; 0x40
 cdc:	orrne	r3, r3, #131072	; 0x20000
 ce0:	strne	r3, [r4, #64]	; 0x40
 ce4:	b	bbc <check_new_user+0x3c>
 ce8:	mov	r3, #0
 cec:	cmp	r9, r3
 cf0:	strb	r3, [r0]
 cf4:	mov	r3, r5
 cf8:	str	sl, [sp]
 cfc:	beq	d18 <check_new_user+0x198>
 d00:	ldr	r2, [pc, #284]	; e24 <check_new_user+0x2a4>
 d04:	add	r2, pc, r2
 d08:	mov	r1, #63	; 0x3f
 d0c:	mov	r0, r7
 d10:	bl	69c <snprintf@plt>
 d14:	b	c78 <check_new_user+0xf8>
 d18:	ldr	r2, [pc, #264]	; e28 <check_new_user+0x2a8>
 d1c:	add	r2, pc, r2
 d20:	b	d08 <check_new_user+0x188>
 d24:	ldr	r3, [pc, #256]	; e2c <check_new_user+0x2ac>
 d28:	add	r3, pc, r3
 d2c:	add	ip, r3, #24
 d30:	ldr	r0, [r3]
 d34:	mov	r2, r5
 d38:	add	r3, r3, #8
 d3c:	ldr	r1, [r3, #-4]
 d40:	cmp	r3, ip
 d44:	stmia	r2!, {r0, r1}
 d48:	mov	r5, r2
 d4c:	bne	d30 <check_new_user+0x1b0>
 d50:	ldrh	r2, [r3]
 d54:	mov	r0, r6
 d58:	mov	fp, #26
 d5c:	ldrb	r3, [r3, #2]
 d60:	strh	r2, [r5]
 d64:	strb	r3, [r5, #2]
 d68:	bl	af8 <get_string_weighted_entropy>
 d6c:	mov	r9, r0
 d70:	mov	r0, r7
 d74:	sub	r7, r7, #1
 d78:	mov	r2, #63	; 0x3f
 d7c:	mov	r1, r6
 d80:	mov	sl, r7
 d84:	bl	6b4 <strncpy@plt>
 d88:	ldrb	r5, [sl, #1]!
 d8c:	cmp	r5, #0
 d90:	cmpne	r5, #46	; 0x2e
 d94:	bne	dd8 <check_new_user+0x258>
 d98:	mov	sl, #10
 d9c:	ldrb	r5, [r7, #1]!
 da0:	cmp	r5, #0
 da4:	beq	c78 <check_new_user+0xf8>
 da8:	bl	684 <__ctype_b_loc@plt>
 dac:	ldr	r2, [r0]
 db0:	lsl	r3, r5, #1
 db4:	ldrh	r3, [r2, r3]
 db8:	tst	r3, #2048	; 0x800
 dbc:	beq	d9c <check_new_user+0x21c>
 dc0:	mul	r5, r5, r9
 dc4:	udiv	r3, r5, sl
 dc8:	mls	r5, sl, r3, r5
 dcc:	add	r5, r5, #48	; 0x30
 dd0:	strb	r5, [r7]
 dd4:	b	d9c <check_new_user+0x21c>
 dd8:	bl	684 <__ctype_b_loc@plt>
 ddc:	ldr	r2, [r0]
 de0:	lsl	r3, r5, #1
 de4:	ldrh	r3, [r2, r3]
 de8:	ubfx	r3, r3, #11, #1
 dec:	cmp	r5, #45	; 0x2d
 df0:	orreq	r3, r3, #1
 df4:	cmp	r3, #0
 df8:	bne	d88 <check_new_user+0x208>
 dfc:	mul	r3, r5, r9
 e00:	udiv	r5, r3, fp
 e04:	mls	r5, fp, r5, r3
 e08:	add	r3, sp, #72	; 0x48
 e0c:	add	r5, r3, r5
 e10:	ldrb	r3, [r5, #-64]	; 0xffffffc0
 e14:	strb	r3, [sl]
 e18:	b	d88 <check_new_user+0x208>
 e1c:	.word	0x0001145c
 e20:	.word	0x0000005c
 e24:	.word	0x000001ea
 e28:	.word	0x000001db
 e2c:	.word	0x000001d8

Disassembly of section .fini:

00000e30 <_fini>:
 e30:	push	{r3, lr}
 e34:	pop	{r3, pc}
