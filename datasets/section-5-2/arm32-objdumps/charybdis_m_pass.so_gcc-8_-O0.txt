
../repos/charybdis/modules/.libs/m_pass.so:     file format elf32-littlearm


Disassembly of section .init:

000004e8 <_init>:
 4e8:	push	{r3, lr}
 4ec:	bl	580 <call_weak_fn>
 4f0:	pop	{r3, pc}

Disassembly of section .plt:

000004f4 <.plt>:
 4f4:	push	{lr}		; (str lr, [sp, #-4]!)
 4f8:	ldr	lr, [pc, #4]	; 504 <.plt+0x10>
 4fc:	add	lr, pc, lr
 500:	ldr	pc, [lr, #8]!
 504:	.word	0x00010afc

00000508 <__cxa_finalize@plt>:
 508:	add	ip, pc, #0, 12
 50c:	add	ip, ip, #16, 20	; 0x10000
 510:	ldr	pc, [ip, #2812]!	; 0xafc

00000514 <rb_outofmemory@plt>:
 514:	add	ip, pc, #0, 12
 518:	add	ip, ip, #16, 20	; 0x10000
 51c:	ldr	pc, [ip, #2804]!	; 0xaf4

00000520 <strcpy@plt>:
 520:	add	ip, pc, #0, 12
 524:	add	ip, ip, #16, 20	; 0x10000
 528:	ldr	pc, [ip, #2796]!	; 0xaec

0000052c <malloc@plt>:
 52c:	add	ip, pc, #0, 12
 530:	add	ip, ip, #16, 20	; 0x10000
 534:	ldr	pc, [ip, #2788]!	; 0xae4

00000538 <__gmon_start__@plt>:
 538:	add	ip, pc, #0, 12
 53c:	add	ip, ip, #16, 20	; 0x10000
 540:	ldr	pc, [ip, #2780]!	; 0xadc

00000544 <strlen@plt>:
 544:	add	ip, pc, #0, 12
 548:	add	ip, ip, #16, 20	; 0x10000
 54c:	ldr	pc, [ip, #2772]!	; 0xad4

00000550 <strchr@plt>:
 550:	add	ip, pc, #0, 12
 554:	add	ip, ip, #16, 20	; 0x10000
 558:	ldr	pc, [ip, #2764]!	; 0xacc

0000055c <atoi@plt>:
 55c:	add	ip, pc, #0, 12
 560:	add	ip, ip, #16, 20	; 0x10000
 564:	ldr	pc, [ip, #2756]!	; 0xac4

00000568 <rb_strlcpy@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #16, 20	; 0x10000
 570:	ldr	pc, [ip, #2748]!	; 0xabc

00000574 <irccmp@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #16, 20	; 0x10000
 57c:	ldr	pc, [ip, #2740]!	; 0xab4

Disassembly of section .text:

00000580 <call_weak_fn>:
 580:	ldr	r3, [pc, #20]	; 59c <call_weak_fn+0x1c>
 584:	ldr	r2, [pc, #20]	; 5a0 <call_weak_fn+0x20>
 588:	add	r3, pc, r3
 58c:	ldr	r2, [r3, r2]
 590:	cmp	r2, #0
 594:	bxeq	lr
 598:	b	538 <__gmon_start__@plt>
 59c:	.word	0x00010a70
 5a0:	.word	0x00000040

000005a4 <deregister_tm_clones>:
 5a4:	ldr	r0, [pc, #44]	; 5d8 <deregister_tm_clones+0x34>
 5a8:	ldr	r3, [pc, #44]	; 5dc <deregister_tm_clones+0x38>
 5ac:	add	r0, pc, r0
 5b0:	add	r3, pc, r3
 5b4:	cmp	r3, r0
 5b8:	ldr	r3, [pc, #32]	; 5e0 <deregister_tm_clones+0x3c>
 5bc:	add	r3, pc, r3
 5c0:	bxeq	lr
 5c4:	ldr	r2, [pc, #24]	; 5e4 <deregister_tm_clones+0x40>
 5c8:	ldr	r3, [r3, r2]
 5cc:	cmp	r3, #0
 5d0:	bxeq	lr
 5d4:	bx	r3
 5d8:	.word	0x00010b10
 5dc:	.word	0x00010b0c
 5e0:	.word	0x00010a3c
 5e4:	.word	0x00000038

000005e8 <register_tm_clones>:
 5e8:	ldr	r0, [pc, #56]	; 628 <register_tm_clones+0x40>
 5ec:	ldr	r3, [pc, #56]	; 62c <register_tm_clones+0x44>
 5f0:	add	r0, pc, r0
 5f4:	add	r3, pc, r3
 5f8:	sub	r1, r3, r0
 5fc:	ldr	r3, [pc, #44]	; 630 <register_tm_clones+0x48>
 600:	asr	r1, r1, #2
 604:	add	r3, pc, r3
 608:	add	r1, r1, r1, lsr #31
 60c:	asrs	r1, r1, #1
 610:	bxeq	lr
 614:	ldr	r2, [pc, #24]	; 634 <register_tm_clones+0x4c>
 618:	ldr	r3, [r3, r2]
 61c:	cmp	r3, #0
 620:	bxeq	lr
 624:	bx	r3
 628:	.word	0x00010acc
 62c:	.word	0x00010ac8
 630:	.word	0x000109f4
 634:	.word	0x00000048

00000638 <__do_global_dtors_aux>:
 638:	ldr	r3, [pc, #76]	; 68c <__do_global_dtors_aux+0x54>
 63c:	ldr	r2, [pc, #76]	; 690 <__do_global_dtors_aux+0x58>
 640:	add	r3, pc, r3
 644:	add	r2, pc, r2
 648:	ldrb	r3, [r3]
 64c:	cmp	r3, #0
 650:	bxne	lr
 654:	ldr	r3, [pc, #56]	; 694 <__do_global_dtors_aux+0x5c>
 658:	push	{r4, lr}
 65c:	ldr	r3, [r2, r3]
 660:	cmp	r3, #0
 664:	beq	674 <__do_global_dtors_aux+0x3c>
 668:	ldr	r3, [pc, #40]	; 698 <__do_global_dtors_aux+0x60>
 66c:	ldr	r0, [pc, r3]
 670:	bl	508 <__cxa_finalize@plt>
 674:	bl	5a4 <deregister_tm_clones>
 678:	ldr	r3, [pc, #28]	; 69c <__do_global_dtors_aux+0x64>
 67c:	mov	r2, #1
 680:	add	r3, pc, r3
 684:	strb	r2, [r3]
 688:	pop	{r4, pc}
 68c:	.word	0x00010a7c
 690:	.word	0x000109b4
 694:	.word	0x00000034
 698:	.word	0x000109d8
 69c:	.word	0x00010a3c

000006a0 <frame_dummy>:
 6a0:	b	5e8 <register_tm_clones>

000006a4 <rb_strndup>:
 6a4:	str	fp, [sp, #-8]!
 6a8:	str	lr, [sp, #4]
 6ac:	add	fp, sp, #4
 6b0:	sub	sp, sp, #16
 6b4:	str	r0, [fp, #-16]
 6b8:	str	r1, [fp, #-20]	; 0xffffffec
 6bc:	ldr	r0, [fp, #-20]	; 0xffffffec
 6c0:	bl	52c <malloc@plt>
 6c4:	mov	r3, r0
 6c8:	str	r3, [fp, #-8]
 6cc:	ldr	r3, [fp, #-8]
 6d0:	cmp	r3, #0
 6d4:	moveq	r3, #1
 6d8:	movne	r3, #0
 6dc:	uxtb	r3, r3
 6e0:	cmp	r3, #0
 6e4:	beq	6ec <rb_strndup+0x48>
 6e8:	bl	514 <rb_outofmemory@plt>
 6ec:	ldr	r2, [fp, #-20]	; 0xffffffec
 6f0:	ldr	r1, [fp, #-16]
 6f4:	ldr	r0, [fp, #-8]
 6f8:	bl	568 <rb_strlcpy@plt>
 6fc:	ldr	r3, [fp, #-8]
 700:	mov	r0, r3
 704:	sub	sp, fp, #4
 708:	ldr	fp, [sp]
 70c:	add	sp, sp, #4
 710:	pop	{pc}		; (ldr pc, [sp], #4)

00000714 <mr_pass>:
 714:	strd	r4, [sp, #-16]!
 718:	str	fp, [sp, #8]
 71c:	str	lr, [sp, #12]
 720:	add	fp, sp, #12
 724:	sub	sp, sp, #32
 728:	str	r0, [fp, #-32]	; 0xffffffe0
 72c:	str	r1, [fp, #-36]	; 0xffffffdc
 730:	str	r2, [fp, #-40]	; 0xffffffd8
 734:	str	r3, [fp, #-44]	; 0xffffffd4
 738:	ldr	r4, [pc, #812]	; a6c <mr_pass+0x358>
 73c:	add	r4, pc, r4
 740:	ldr	r3, [fp, #4]
 744:	add	r3, r3, #4
 748:	ldr	r3, [r3]
 74c:	mov	r0, r3
 750:	bl	544 <strlen@plt>
 754:	mov	r3, r0
 758:	add	r3, r3, #1
 75c:	add	r3, r3, #7
 760:	lsr	r3, r3, #3
 764:	lsl	r3, r3, #3
 768:	sub	sp, sp, r3
 76c:	mov	r3, sp
 770:	add	r3, r3, #7
 774:	lsr	r3, r3, #3
 778:	lsl	r3, r3, #3
 77c:	str	r3, [fp, #-24]	; 0xffffffe8
 780:	ldr	r3, [fp, #4]
 784:	add	r3, r3, #4
 788:	ldr	r3, [r3]
 78c:	mov	r1, r3
 790:	ldr	r0, [fp, #-24]	; 0xffffffe8
 794:	bl	520 <strcpy@plt>
 798:	ldr	r3, [fp, #-24]	; 0xffffffe8
 79c:	str	r3, [fp, #-28]	; 0xffffffe4
 7a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
 7a4:	ldr	r3, [r3, #432]	; 0x1b0
 7a8:	ldr	r3, [r3, #276]	; 0x114
 7ac:	cmp	r3, #0
 7b0:	bne	a54 <mr_pass+0x340>
 7b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
 7b8:	ldr	r3, [r3, #432]	; 0x1b0
 7bc:	ldr	r3, [r3, #280]	; 0x118
 7c0:	cmp	r3, #0
 7c4:	bne	a54 <mr_pass+0x340>
 7c8:	mov	r1, #58	; 0x3a
 7cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
 7d0:	bl	550 <strchr@plt>
 7d4:	str	r0, [fp, #-20]	; 0xffffffec
 7d8:	ldr	r3, [fp, #-20]	; 0xffffffec
 7dc:	cmp	r3, #0
 7e0:	beq	804 <mr_pass+0xf0>
 7e4:	ldr	r3, [fp, #-20]	; 0xffffffec
 7e8:	add	r2, r3, #1
 7ec:	str	r2, [fp, #-20]	; 0xffffffec
 7f0:	mov	r2, #0
 7f4:	strb	r2, [r3]
 7f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 7fc:	str	r3, [fp, #-16]
 800:	b	814 <mr_pass+0x100>
 804:	ldr	r3, [fp, #-28]	; 0xffffffe4
 808:	str	r3, [fp, #-20]	; 0xffffffec
 80c:	mov	r3, #0
 810:	str	r3, [fp, #-16]
 814:	ldr	r3, [fp, #-20]	; 0xffffffec
 818:	ldrb	r3, [r3]
 81c:	cmp	r3, #0
 820:	beq	838 <mr_pass+0x124>
 824:	mov	r1, #128	; 0x80
 828:	ldr	r0, [fp, #-20]	; 0xffffffec
 82c:	bl	6a4 <rb_strndup>
 830:	mov	r2, r0
 834:	b	83c <mr_pass+0x128>
 838:	mov	r2, #0
 83c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 840:	ldr	r3, [r3, #432]	; 0x1b0
 844:	str	r2, [r3, #276]	; 0x114
 848:	ldr	r3, [fp, #-16]
 84c:	cmp	r3, #0
 850:	beq	880 <mr_pass+0x16c>
 854:	ldr	r3, [fp, #-16]
 858:	ldrb	r3, [r3]
 85c:	cmp	r3, #0
 860:	beq	880 <mr_pass+0x16c>
 864:	ldr	r3, [fp, #-36]	; 0xffffffdc
 868:	ldr	r5, [r3, #432]	; 0x1b0
 86c:	mov	r1, #128	; 0x80
 870:	ldr	r0, [fp, #-16]
 874:	bl	6a4 <rb_strndup>
 878:	mov	r3, r0
 87c:	str	r3, [r5, #280]	; 0x118
 880:	ldr	r3, [fp, #-44]	; 0xffffffd4
 884:	cmp	r3, #2
 888:	ble	a58 <mr_pass+0x344>
 88c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 890:	ldr	r3, [r3, #24]
 894:	cmp	r3, #0
 898:	bne	a58 <mr_pass+0x344>
 89c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 8a0:	ldr	r3, [r3, #436]	; 0x1b4
 8a4:	cmp	r3, #0
 8a8:	beq	a58 <mr_pass+0x344>
 8ac:	ldr	r3, [fp, #4]
 8b0:	add	r3, r3, #8
 8b4:	ldr	r3, [r3]
 8b8:	ldr	r2, [pc, #432]	; a70 <mr_pass+0x35c>
 8bc:	add	r2, pc, r2
 8c0:	mov	r1, r2
 8c4:	mov	r0, r3
 8c8:	bl	574 <irccmp@plt>
 8cc:	mov	r3, r0
 8d0:	cmp	r3, #0
 8d4:	bne	8f4 <mr_pass+0x1e0>
 8d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
 8dc:	ldr	r3, [r3, #52]	; 0x34
 8e0:	cmp	r3, #0
 8e4:	bne	8f4 <mr_pass+0x1e0>
 8e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
 8ec:	mov	r2, #268435456	; 0x10000000
 8f0:	str	r2, [r3, #52]	; 0x34
 8f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
 8f8:	cmp	r3, #5
 8fc:	bne	a58 <mr_pass+0x344>
 900:	ldr	r3, [fp, #4]
 904:	add	r3, r3, #12
 908:	ldr	r3, [r3]
 90c:	mov	r0, r3
 910:	bl	55c <atoi@plt>
 914:	mov	r3, r0
 918:	cmp	r3, #5
 91c:	ble	a58 <mr_pass+0x344>
 920:	ldr	r3, [fp, #4]
 924:	add	r3, r3, #16
 928:	ldr	r3, [r3]
 92c:	ldrb	r3, [r3]
 930:	mov	r2, r3
 934:	ldr	r3, [pc, #312]	; a74 <mr_pass+0x360>
 938:	ldr	r3, [r4, r3]
 93c:	ldr	r3, [r3, r2, lsl #2]
 940:	and	r3, r3, #16
 944:	cmp	r3, #0
 948:	beq	a58 <mr_pass+0x344>
 94c:	ldr	r3, [fp, #4]
 950:	add	r3, r3, #16
 954:	ldr	r3, [r3]
 958:	add	r3, r3, #1
 95c:	ldrb	r3, [r3]
 960:	mov	r2, r3
 964:	ldr	r3, [pc, #264]	; a74 <mr_pass+0x360>
 968:	ldr	r3, [r4, r3]
 96c:	ldr	r2, [r3, r2, lsl #2]
 970:	mov	r3, #16
 974:	movt	r3, #1
 978:	and	r3, r3, r2
 97c:	cmp	r3, #0
 980:	beq	a58 <mr_pass+0x344>
 984:	ldr	r3, [fp, #4]
 988:	add	r3, r3, #16
 98c:	ldr	r3, [r3]
 990:	add	r3, r3, #2
 994:	ldrb	r3, [r3]
 998:	mov	r2, r3
 99c:	ldr	r3, [pc, #208]	; a74 <mr_pass+0x360>
 9a0:	ldr	r3, [r4, r3]
 9a4:	ldr	r2, [r3, r2, lsl #2]
 9a8:	mov	r3, #16
 9ac:	movt	r3, #1
 9b0:	and	r3, r3, r2
 9b4:	cmp	r3, #0
 9b8:	beq	a58 <mr_pass+0x344>
 9bc:	ldr	r3, [fp, #4]
 9c0:	add	r3, r3, #16
 9c4:	ldr	r3, [r3]
 9c8:	add	r3, r3, #3
 9cc:	ldrb	r3, [r3]
 9d0:	cmp	r3, #0
 9d4:	bne	a58 <mr_pass+0x344>
 9d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
 9dc:	ldr	r3, [r3, #436]	; 0x1b4
 9e0:	add	r3, r3, #260	; 0x104
 9e4:	cmp	r3, #0
 9e8:	beq	a00 <mr_pass+0x2ec>
 9ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
 9f0:	ldr	r3, [r3, #436]	; 0x1b4
 9f4:	ldrb	r3, [r3, #260]	; 0x104
 9f8:	cmp	r3, #0
 9fc:	bne	a58 <mr_pass+0x344>
 a00:	ldr	r3, [fp, #-36]	; 0xffffffdc
 a04:	ldr	r3, [r3, #432]	; 0x1b0
 a08:	ldr	r3, [r3, #296]	; 0x128
 a0c:	mov	r2, r3
 a10:	ldr	r3, [pc, #96]	; a78 <mr_pass+0x364>
 a14:	ldr	r3, [r4, r3]
 a18:	ldr	r3, [r3]
 a1c:	orr	r2, r2, r3
 a20:	ldr	r3, [fp, #-36]	; 0xffffffdc
 a24:	ldr	r3, [r3, #432]	; 0x1b0
 a28:	str	r2, [r3, #296]	; 0x128
 a2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 a30:	ldr	r3, [r3, #436]	; 0x1b4
 a34:	add	r0, r3, #260	; 0x104
 a38:	ldr	r3, [fp, #4]
 a3c:	add	r3, r3, #16
 a40:	ldr	r3, [r3]
 a44:	mov	r2, #10
 a48:	mov	r1, r3
 a4c:	bl	568 <rb_strlcpy@plt>
 a50:	b	a58 <mr_pass+0x344>
 a54:	nop	{0}
 a58:	sub	sp, fp, #12
 a5c:	ldrd	r4, [sp]
 a60:	ldr	fp, [sp, #8]
 a64:	add	sp, sp, #12
 a68:	pop	{pc}		; (ldr pc, [sp], #4)
 a6c:	.word	0x000108bc
 a70:	.word	0x00000208
 a74:	.word	0x00000044
 a78:	.word	0x0000003c

Disassembly of section .fini:

00000a7c <_fini>:
 a7c:	push	{r3, lr}
 a80:	pop	{r3, pc}
