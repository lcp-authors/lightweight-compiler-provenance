
../repos/coreutils/src/nohup:     file format elf32-littlearm


Disassembly of section .init:

00010dcc <.init>:
   10dcc:	push	{r3, lr}
   10dd0:	bl	11098 <__mempcpy_chk@plt+0x48>
   10dd4:	pop	{r3, pc}

Disassembly of section .plt:

00010dd8 <calloc@plt-0x14>:
   10dd8:	push	{lr}		; (str lr, [sp, #-4]!)
   10ddc:	ldr	lr, [pc, #4]	; 10de8 <calloc@plt-0x4>
   10de0:	add	lr, pc, lr
   10de4:	ldr	pc, [lr, #8]!
   10de8:	andeq	r5, r1, r8, lsl r2

00010dec <calloc@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #536]!	; 0x218

00010df8 <fputs_unlocked@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #528]!	; 0x210

00010e04 <strcmp@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #520]!	; 0x208

00010e10 <fflush@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #512]!	; 0x200

00010e1c <free@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #504]!	; 0x1f8

00010e28 <_exit@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #496]!	; 0x1f0

00010e34 <memcpy@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e40 <execvp@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #480]!	; 0x1e0

00010e4c <mbsinit@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #472]!	; 0x1d8

00010e58 <signal@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #464]!	; 0x1d0

00010e64 <dcgettext@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e70 <dup2@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #448]!	; 0x1c0

00010e7c <realloc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #440]!	; 0x1b8

00010e88 <textdomain@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #432]!	; 0x1b0

00010e94 <iswprint@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #424]!	; 0x1a8

00010ea0 <lseek64@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #416]!	; 0x1a0

00010eac <__ctype_get_mb_cur_max@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #408]!	; 0x198

00010eb8 <__fpending@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #400]!	; 0x190

00010ec4 <ferror_unlocked@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #392]!	; 0x188

00010ed0 <mbrtowc@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #384]!	; 0x180

00010edc <error@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #376]!	; 0x178

00010ee8 <open64@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #368]!	; 0x170

00010ef4 <getenv@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #360]!	; 0x168

00010f00 <malloc@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #352]!	; 0x160

00010f0c <__libc_start_main@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #344]!	; 0x158

00010f18 <__freading@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #336]!	; 0x150

00010f24 <__gmon_start__@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #328]!	; 0x148

00010f30 <getopt_long@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #320]!	; 0x140

00010f3c <__ctype_b_loc@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #312]!	; 0x138

00010f48 <exit@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #304]!	; 0x130

00010f54 <bcmp@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #296]!	; 0x128

00010f60 <strlen@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #288]!	; 0x120

00010f6c <__errno_location@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #280]!	; 0x118

00010f78 <__cxa_atexit@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #272]!	; 0x110

00010f84 <memset@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #264]!	; 0x108

00010f90 <__printf_chk@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #256]!	; 0x100

00010f9c <fileno@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #248]!	; 0xf8

00010fa8 <__fprintf_chk@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #86016	; 0x15000
   10fb0:	ldr	pc, [ip, #240]!	; 0xf0

00010fb4 <fclose@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #86016	; 0x15000
   10fbc:	ldr	pc, [ip, #232]!	; 0xe8

00010fc0 <fseeko64@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #86016	; 0x15000
   10fc8:	ldr	pc, [ip, #224]!	; 0xe0

00010fcc <fcntl64@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #86016	; 0x15000
   10fd4:	ldr	pc, [ip, #216]!	; 0xd8

00010fd8 <setlocale@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #86016	; 0x15000
   10fe0:	ldr	pc, [ip, #208]!	; 0xd0

00010fe4 <strrchr@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #86016	; 0x15000
   10fec:	ldr	pc, [ip, #200]!	; 0xc8

00010ff0 <nl_langinfo@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #86016	; 0x15000
   10ff8:	ldr	pc, [ip, #192]!	; 0xc0

00010ffc <bindtextdomain@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #86016	; 0x15000
   11004:	ldr	pc, [ip, #184]!	; 0xb8

00011008 <umask@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #86016	; 0x15000
   11010:	ldr	pc, [ip, #176]!	; 0xb0

00011014 <isatty@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #86016	; 0x15000
   1101c:	ldr	pc, [ip, #168]!	; 0xa8

00011020 <fputs@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #86016	; 0x15000
   11028:	ldr	pc, [ip, #160]!	; 0xa0

0001102c <strncmp@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #86016	; 0x15000
   11034:	ldr	pc, [ip, #152]!	; 0x98

00011038 <abort@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #86016	; 0x15000
   11040:	ldr	pc, [ip, #144]!	; 0x90

00011044 <close@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #86016	; 0x15000
   1104c:	ldr	pc, [ip, #136]!	; 0x88

00011050 <__mempcpy_chk@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #86016	; 0x15000
   11058:	ldr	pc, [ip, #128]!	; 0x80

Disassembly of section .text:

0001105c <.text>:
   1105c:	mov	fp, #0
   11060:	mov	lr, #0
   11064:	pop	{r1}		; (ldr r1, [sp], #4)
   11068:	mov	r2, sp
   1106c:	push	{r2}		; (str r2, [sp, #-4]!)
   11070:	push	{r0}		; (str r0, [sp, #-4]!)
   11074:	ldr	ip, [pc, #16]	; 1108c <__mempcpy_chk@plt+0x3c>
   11078:	push	{ip}		; (str ip, [sp, #-4]!)
   1107c:	ldr	r0, [pc, #12]	; 11090 <__mempcpy_chk@plt+0x40>
   11080:	ldr	r3, [pc, #12]	; 11094 <__mempcpy_chk@plt+0x44>
   11084:	bl	10f0c <__libc_start_main@plt>
   11088:	bl	11038 <abort@plt>
   1108c:	andeq	r4, r1, r4, asr #17
   11090:			; <UNDEFINED> instruction: 0x000113bc
   11094:	andeq	r4, r1, r4, ror #16
   11098:	ldr	r3, [pc, #20]	; 110b4 <__mempcpy_chk@plt+0x64>
   1109c:	ldr	r2, [pc, #20]	; 110b8 <__mempcpy_chk@plt+0x68>
   110a0:	add	r3, pc, r3
   110a4:	ldr	r2, [r3, r2]
   110a8:	cmp	r2, #0
   110ac:	bxeq	lr
   110b0:	b	10f24 <__gmon_start__@plt>
   110b4:	andeq	r4, r1, r8, asr pc
   110b8:	ldrdeq	r0, [r0], -ip
   110bc:	ldr	r0, [pc, #24]	; 110dc <__mempcpy_chk@plt+0x8c>
   110c0:	ldr	r3, [pc, #24]	; 110e0 <__mempcpy_chk@plt+0x90>
   110c4:	cmp	r3, r0
   110c8:	bxeq	lr
   110cc:	ldr	r3, [pc, #16]	; 110e4 <__mempcpy_chk@plt+0x94>
   110d0:	cmp	r3, #0
   110d4:	bxeq	lr
   110d8:	bx	r3
   110dc:	andeq	r6, r2, r0, lsr r1
   110e0:	andeq	r6, r2, r0, lsr r1
   110e4:	andeq	r0, r0, r0
   110e8:	ldr	r0, [pc, #36]	; 11114 <__mempcpy_chk@plt+0xc4>
   110ec:	ldr	r1, [pc, #36]	; 11118 <__mempcpy_chk@plt+0xc8>
   110f0:	sub	r1, r1, r0
   110f4:	asr	r1, r1, #2
   110f8:	add	r1, r1, r1, lsr #31
   110fc:	asrs	r1, r1, #1
   11100:	bxeq	lr
   11104:	ldr	r3, [pc, #16]	; 1111c <__mempcpy_chk@plt+0xcc>
   11108:	cmp	r3, #0
   1110c:	bxeq	lr
   11110:	bx	r3
   11114:	andeq	r6, r2, r0, lsr r1
   11118:	andeq	r6, r2, r0, lsr r1
   1111c:	andeq	r0, r0, r0
   11120:	push	{r4, lr}
   11124:	ldr	r4, [pc, #24]	; 11144 <__mempcpy_chk@plt+0xf4>
   11128:	ldrb	r3, [r4]
   1112c:	cmp	r3, #0
   11130:	popne	{r4, pc}
   11134:	bl	110bc <__mempcpy_chk@plt+0x6c>
   11138:	mov	r3, #1
   1113c:	strb	r3, [r4]
   11140:	pop	{r4, pc}
   11144:	andeq	r6, r2, ip, asr #2
   11148:	b	110e8 <__mempcpy_chk@plt+0x98>
   1114c:	push	{fp, lr}
   11150:	mov	fp, sp
   11154:	sub	sp, sp, #56	; 0x38
   11158:	mov	r8, r0
   1115c:	cmp	r0, #0
   11160:	bne	1137c <__mempcpy_chk@plt+0x32c>
   11164:	movw	r1, #18707	; 0x4913
   11168:	mov	r0, #0
   1116c:	mov	r2, #5
   11170:	movt	r1, #1
   11174:	bl	10e64 <dcgettext@plt>
   11178:	movw	r5, #24924	; 0x615c
   1117c:	mov	r1, r0
   11180:	mov	r0, #1
   11184:	movt	r5, #2
   11188:	ldr	r2, [r5]
   1118c:	mov	r3, r2
   11190:	bl	10f90 <__printf_chk@plt>
   11194:	movw	r1, #18752	; 0x4940
   11198:	mov	r0, #0
   1119c:	mov	r2, #5
   111a0:	movt	r1, #1
   111a4:	bl	10e64 <dcgettext@plt>
   111a8:	movw	r9, #24900	; 0x6144
   111ac:	movt	r9, #2
   111b0:	ldr	r1, [r9]
   111b4:	bl	10df8 <fputs_unlocked@plt>
   111b8:	movw	r1, #18792	; 0x4968
   111bc:	mov	r0, #0
   111c0:	mov	r2, #5
   111c4:	movt	r1, #1
   111c8:	bl	10e64 <dcgettext@plt>
   111cc:	ldr	r1, [r9]
   111d0:	bl	10df8 <fputs_unlocked@plt>
   111d4:	movw	r1, #18837	; 0x4995
   111d8:	mov	r0, #0
   111dc:	mov	r2, #5
   111e0:	movt	r1, #1
   111e4:	bl	10e64 <dcgettext@plt>
   111e8:	ldr	r1, [r9]
   111ec:	bl	10df8 <fputs_unlocked@plt>
   111f0:	movw	r1, #18891	; 0x49cb
   111f4:	mov	r0, #0
   111f8:	mov	r2, #5
   111fc:	movt	r1, #1
   11200:	bl	10e64 <dcgettext@plt>
   11204:	ldr	r2, [r5]
   11208:	mov	r1, r0
   1120c:	mov	r0, #1
   11210:	bl	10f90 <__printf_chk@plt>
   11214:	movw	r1, #19182	; 0x4aee
   11218:	mov	r0, #0
   1121c:	mov	r2, #5
   11220:	movt	r1, #1
   11224:	bl	10e64 <dcgettext@plt>
   11228:	movw	r5, #19373	; 0x4bad
   1122c:	mov	r1, r0
   11230:	mov	r0, #1
   11234:	movt	r5, #1
   11238:	mov	r2, r5
   1123c:	bl	10f90 <__printf_chk@plt>
   11240:	movw	ip, #20024	; 0x4e38
   11244:	mov	r6, sp
   11248:	movt	ip, #1
   1124c:	mov	r1, r6
   11250:	ldm	ip!, {r2, r3, r4, r7}
   11254:	stmia	r1!, {r2, r3, r4, r7}
   11258:	ldm	ip!, {r0, r2, r3, r4, r7}
   1125c:	stmia	r1!, {r0, r2, r3, r4, r7}
   11260:	ldm	ip, {r0, r2, r3, r4, r7}
   11264:	stm	r1, {r0, r2, r3, r4, r7}
   11268:	movw	r1, #19710	; 0x4cfe
   1126c:	movt	r1, #1
   11270:	mov	r0, r5
   11274:	bl	10e04 <strcmp@plt>
   11278:	cmp	r0, #0
   1127c:	ldrne	r1, [r6, #8]!
   11280:	cmpne	r1, #0
   11284:	bne	11270 <__mempcpy_chk@plt+0x220>
   11288:	movw	r1, #19805	; 0x4d5d
   1128c:	ldr	r6, [r6, #4]
   11290:	mov	r0, #0
   11294:	mov	r2, #5
   11298:	movt	r1, #1
   1129c:	bl	10e64 <dcgettext@plt>
   112a0:	movw	r2, #19419	; 0x4bdb
   112a4:	movw	r3, #19828	; 0x4d74
   112a8:	mov	r1, r0
   112ac:	mov	r0, #1
   112b0:	movt	r2, #1
   112b4:	movt	r3, #1
   112b8:	bl	10f90 <__printf_chk@plt>
   112bc:	cmp	r6, #0
   112c0:	mov	r0, #5
   112c4:	mov	r1, #0
   112c8:	moveq	r6, r5
   112cc:	bl	10fd8 <setlocale@plt>
   112d0:	cmp	r0, #0
   112d4:	beq	1130c <__mempcpy_chk@plt+0x2bc>
   112d8:	movw	r1, #19868	; 0x4d9c
   112dc:	mov	r2, #3
   112e0:	movt	r1, #1
   112e4:	bl	1102c <strncmp@plt>
   112e8:	cmp	r0, #0
   112ec:	beq	1130c <__mempcpy_chk@plt+0x2bc>
   112f0:	movw	r1, #19872	; 0x4da0
   112f4:	mov	r0, #0
   112f8:	mov	r2, #5
   112fc:	movt	r1, #1
   11300:	bl	10e64 <dcgettext@plt>
   11304:	ldr	r1, [r9]
   11308:	bl	10df8 <fputs_unlocked@plt>
   1130c:	movw	r1, #19943	; 0x4de7
   11310:	mov	r0, #0
   11314:	mov	r2, #5
   11318:	movt	r1, #1
   1131c:	bl	10e64 <dcgettext@plt>
   11320:	movw	r2, #19828	; 0x4d74
   11324:	mov	r1, r0
   11328:	mov	r0, #1
   1132c:	mov	r3, r5
   11330:	movt	r2, #1
   11334:	bl	10f90 <__printf_chk@plt>
   11338:	movw	r1, #19970	; 0x4e02
   1133c:	mov	r0, #0
   11340:	mov	r2, #5
   11344:	movt	r1, #1
   11348:	bl	10e64 <dcgettext@plt>
   1134c:	mov	r1, r0
   11350:	movw	r0, #19738	; 0x4d1a
   11354:	movw	r3, #18791	; 0x4967
   11358:	cmp	r6, r5
   1135c:	mov	r2, r6
   11360:	movt	r0, #1
   11364:	movt	r3, #1
   11368:	moveq	r3, r0
   1136c:	mov	r0, #1
   11370:	bl	10f90 <__printf_chk@plt>
   11374:	mov	r0, r8
   11378:	bl	10f48 <exit@plt>
   1137c:	movw	r0, #24896	; 0x6140
   11380:	movw	r1, #18668	; 0x48ec
   11384:	mov	r2, #5
   11388:	movt	r0, #2
   1138c:	movt	r1, #1
   11390:	ldr	r5, [r0]
   11394:	mov	r0, #0
   11398:	bl	10e64 <dcgettext@plt>
   1139c:	mov	r2, r0
   113a0:	movw	r0, #24924	; 0x615c
   113a4:	mov	r1, #1
   113a8:	movt	r0, #2
   113ac:	ldr	r3, [r0]
   113b0:	mov	r0, r5
   113b4:	bl	10fa8 <__fprintf_chk@plt>
   113b8:	b	11374 <__mempcpy_chk@plt+0x324>
   113bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113c0:	add	fp, sp, #28
   113c4:	sub	sp, sp, #36	; 0x24
   113c8:	mov	r4, r0
   113cc:	ldr	r0, [r1]
   113d0:	mov	r9, r1
   113d4:	bl	11eb4 <__mempcpy_chk@plt+0xe64>
   113d8:	movw	r1, #18791	; 0x4967
   113dc:	mov	r0, #6
   113e0:	movt	r1, #1
   113e4:	bl	10fd8 <setlocale@plt>
   113e8:	movw	r5, #19423	; 0x4bdf
   113ec:	movw	r1, #19379	; 0x4bb3
   113f0:	movt	r5, #1
   113f4:	movt	r1, #1
   113f8:	mov	r0, r5
   113fc:	bl	10ffc <bindtextdomain@plt>
   11400:	mov	r0, r5
   11404:	bl	10e88 <textdomain@plt>
   11408:	movw	r0, #19403	; 0x4bcb
   1140c:	movt	r0, #1
   11410:	bl	10ef4 <getenv@plt>
   11414:	cmp	r0, #0
   11418:	movw	r0, #24812	; 0x60ec
   1141c:	mov	sl, #127	; 0x7f
   11420:	movt	r0, #2
   11424:	movweq	sl, #125	; 0x7d
   11428:	str	sl, [r0]
   1142c:	movw	r0, #6392	; 0x18f8
   11430:	movt	r0, #1
   11434:	bl	148c8 <__mempcpy_chk@plt+0x3878>
   11438:	movw	r0, #24808	; 0x60e8
   1143c:	movw	r2, #4428	; 0x114c
   11440:	movw	r1, #19433	; 0x4be9
   11444:	movw	r3, #19419	; 0x4bdb
   11448:	mov	r5, #0
   1144c:	movt	r0, #2
   11450:	movt	r2, #1
   11454:	movt	r1, #1
   11458:	movt	r3, #1
   1145c:	ldr	r0, [r0]
   11460:	stm	sp, {r0, r5}
   11464:	str	r2, [sp, #8]
   11468:	movw	r2, #19373	; 0x4bad
   1146c:	str	r1, [sp, #12]
   11470:	mov	r0, r4
   11474:	mov	r1, r9
   11478:	str	r5, [sp, #16]
   1147c:	movt	r2, #1
   11480:	bl	11df0 <__mempcpy_chk@plt+0xda0>
   11484:	movw	r0, #24888	; 0x6138
   11488:	movt	r0, #2
   1148c:	ldr	r0, [r0]
   11490:	cmp	r0, r4
   11494:	bge	118ac <__mempcpy_chk@plt+0x85c>
   11498:	mov	r0, #0
   1149c:	bl	11014 <isatty@plt>
   114a0:	mov	r6, r0
   114a4:	mov	r0, #1
   114a8:	bl	11014 <isatty@plt>
   114ac:	mov	r7, r0
   114b0:	cmp	r0, #0
   114b4:	bne	114cc <__mempcpy_chk@plt+0x47c>
   114b8:	bl	10f6c <__errno_location@plt>
   114bc:	ldr	r0, [r0]
   114c0:	sub	r0, r0, #9
   114c4:	clz	r0, r0
   114c8:	lsr	r5, r0, #5
   114cc:	mov	r0, #2
   114d0:	bl	11014 <isatty@plt>
   114d4:	mov	r8, r0
   114d8:	cmp	r6, #0
   114dc:	beq	11558 <__mempcpy_chk@plt+0x508>
   114e0:	movw	r1, #19462	; 0x4c06
   114e4:	mov	r0, #0
   114e8:	mov	r2, #1
   114ec:	mov	r3, #0
   114f0:	movt	r1, #1
   114f4:	bl	11bb8 <__mempcpy_chk@plt+0xb68>
   114f8:	cmn	r0, #1
   114fc:	bgt	1152c <__mempcpy_chk@plt+0x4dc>
   11500:	bl	10f6c <__errno_location@plt>
   11504:	movw	r1, #19472	; 0x4c10
   11508:	ldr	r4, [r0]
   1150c:	mov	r0, #0
   11510:	mov	r2, #5
   11514:	movt	r1, #1
   11518:	bl	10e64 <dcgettext@plt>
   1151c:	mov	r2, r0
   11520:	mov	r0, sl
   11524:	mov	r1, r4
   11528:	bl	10edc <error@plt>
   1152c:	orrs	r0, r8, r7
   11530:	bne	11558 <__mempcpy_chk@plt+0x508>
   11534:	movw	r1, #19513	; 0x4c39
   11538:	mov	r0, #0
   1153c:	mov	r2, #5
   11540:	movt	r1, #1
   11544:	bl	10e64 <dcgettext@plt>
   11548:	mov	r2, r0
   1154c:	mov	r0, #0
   11550:	mov	r1, #0
   11554:	bl	10edc <error@plt>
   11558:	cmp	r7, #0
   1155c:	str	r6, [sp, #32]
   11560:	beq	11590 <__mempcpy_chk@plt+0x540>
   11564:	mvn	r0, #384	; 0x180
   11568:	str	r5, [sp, #28]
   1156c:	bl	11008 <umask@plt>
   11570:	movw	r1, #19528	; 0x4c48
   11574:	mov	r5, r0
   11578:	mov	r0, #1
   1157c:	movw	r2, #1089	; 0x441
   11580:	mov	r3, #384	; 0x180
   11584:	movt	r1, #1
   11588:	bl	11bb8 <__mempcpy_chk@plt+0xb68>
   1158c:	b	115cc <__mempcpy_chk@plt+0x57c>
   11590:	cmp	r8, #0
   11594:	mov	r0, r8
   11598:	mov	r6, #1
   1159c:	movwne	r0, #1
   115a0:	tst	r5, r0
   115a4:	beq	1164c <__mempcpy_chk@plt+0x5fc>
   115a8:	mvn	r0, #384	; 0x180
   115ac:	str	r5, [sp, #28]
   115b0:	bl	11008 <umask@plt>
   115b4:	mov	r5, r0
   115b8:	movw	r0, #19528	; 0x4c48
   115bc:	movw	r1, #1089	; 0x441
   115c0:	mov	r2, #384	; 0x180
   115c4:	movt	r0, #1
   115c8:	bl	10ee8 <open64@plt>
   115cc:	mov	r6, r0
   115d0:	cmn	r0, #1
   115d4:	ble	11790 <__mempcpy_chk@plt+0x740>
   115d8:	str	r9, [sp, #24]
   115dc:	movw	r9, #19528	; 0x4c48
   115e0:	mov	r4, #0
   115e4:	movt	r9, #1
   115e8:	mov	r0, r5
   115ec:	bl	11008 <umask@plt>
   115f0:	ldr	r2, [sp, #32]
   115f4:	movw	r0, #19561	; 0x4c69
   115f8:	movw	r1, #19580	; 0x4c7c
   115fc:	movt	r0, #1
   11600:	movt	r1, #1
   11604:	cmp	r2, #0
   11608:	mov	r2, #5
   1160c:	movne	r1, r0
   11610:	mov	r0, #0
   11614:	bl	10e64 <dcgettext@plt>
   11618:	mov	r5, r0
   1161c:	mov	r0, #4
   11620:	mov	r1, r9
   11624:	bl	13568 <__mempcpy_chk@plt+0x2518>
   11628:	mov	r3, r0
   1162c:	mov	r0, #0
   11630:	mov	r1, #0
   11634:	mov	r2, r5
   11638:	bl	10edc <error@plt>
   1163c:	mov	r0, r4
   11640:	bl	11d18 <__mempcpy_chk@plt+0xcc8>
   11644:	ldr	r9, [sp, #24]
   11648:	ldr	r5, [sp, #28]
   1164c:	cmp	r8, #0
   11650:	beq	11704 <__mempcpy_chk@plt+0x6b4>
   11654:	mov	r0, #2
   11658:	movw	r1, #1030	; 0x406
   1165c:	mov	r2, #3
   11660:	bl	119e0 <__mempcpy_chk@plt+0x990>
   11664:	mov	r4, r0
   11668:	cmp	r7, #0
   1166c:	bne	116a8 <__mempcpy_chk@plt+0x658>
   11670:	ldr	r2, [sp, #32]
   11674:	movw	r0, #19603	; 0x4c93
   11678:	movw	r1, #19622	; 0x4ca6
   1167c:	movt	r0, #1
   11680:	movt	r1, #1
   11684:	cmp	r2, #0
   11688:	mov	r2, #5
   1168c:	movne	r1, r0
   11690:	mov	r0, #0
   11694:	bl	10e64 <dcgettext@plt>
   11698:	mov	r2, r0
   1169c:	mov	r0, #0
   116a0:	mov	r1, #0
   116a4:	bl	10edc <error@plt>
   116a8:	mov	r0, r6
   116ac:	mov	r1, #2
   116b0:	bl	10e70 <dup2@plt>
   116b4:	cmn	r0, #1
   116b8:	bgt	116f0 <__mempcpy_chk@plt+0x6a0>
   116bc:	bl	10f6c <__errno_location@plt>
   116c0:	movw	r1, #19651	; 0x4cc3
   116c4:	mov	r7, r5
   116c8:	ldr	r5, [r0]
   116cc:	mov	r0, #0
   116d0:	mov	r2, #5
   116d4:	movt	r1, #1
   116d8:	bl	10e64 <dcgettext@plt>
   116dc:	mov	r2, r0
   116e0:	mov	r1, r5
   116e4:	mov	r0, sl
   116e8:	mov	r5, r7
   116ec:	bl	10edc <error@plt>
   116f0:	cmp	r5, #0
   116f4:	beq	11708 <__mempcpy_chk@plt+0x6b8>
   116f8:	mov	r0, r6
   116fc:	bl	11044 <close@plt>
   11700:	b	11708 <__mempcpy_chk@plt+0x6b8>
   11704:	mov	r4, #2
   11708:	movw	r0, #24896	; 0x6140
   1170c:	movt	r0, #2
   11710:	ldr	r0, [r0]
   11714:	bl	10ec4 <ferror_unlocked@plt>
   11718:	cmp	r0, #0
   1171c:	bne	118a0 <__mempcpy_chk@plt+0x850>
   11720:	mov	r0, #1
   11724:	mov	r1, #1
   11728:	bl	10e58 <signal@plt>
   1172c:	movw	r0, #24888	; 0x6138
   11730:	movt	r0, #2
   11734:	ldr	r0, [r0]
   11738:	ldr	r0, [r9, r0, lsl #2]!
   1173c:	mov	r1, r9
   11740:	bl	10e40 <execvp@plt>
   11744:	bl	10f6c <__errno_location@plt>
   11748:	ldr	r5, [r0]
   1174c:	mov	r0, r4
   11750:	mov	r1, #2
   11754:	mov	sl, #126	; 0x7e
   11758:	cmp	r5, #2
   1175c:	movweq	sl, #127	; 0x7f
   11760:	bl	10e70 <dup2@plt>
   11764:	cmp	r0, #2
   11768:	bne	118a0 <__mempcpy_chk@plt+0x850>
   1176c:	movw	r1, #19685	; 0x4ce5
   11770:	mov	r0, #0
   11774:	mov	r2, #5
   11778:	movt	r1, #1
   1177c:	bl	10e64 <dcgettext@plt>
   11780:	ldr	r1, [r9]
   11784:	mov	r4, r0
   11788:	mov	r0, #4
   1178c:	b	11888 <__mempcpy_chk@plt+0x838>
   11790:	bl	10f6c <__errno_location@plt>
   11794:	mov	r4, r0
   11798:	ldr	r6, [r0]
   1179c:	movw	r0, #19538	; 0x4c52
   117a0:	movt	r0, #1
   117a4:	bl	10ef4 <getenv@plt>
   117a8:	cmp	r0, #0
   117ac:	beq	117ec <__mempcpy_chk@plt+0x79c>
   117b0:	movw	r1, #19528	; 0x4c48
   117b4:	mov	r2, #0
   117b8:	str	r6, [sp, #20]
   117bc:	str	r9, [sp, #24]
   117c0:	movt	r1, #1
   117c4:	bl	11c20 <__mempcpy_chk@plt+0xbd0>
   117c8:	mov	r9, r0
   117cc:	cmp	r7, #0
   117d0:	beq	117f8 <__mempcpy_chk@plt+0x7a8>
   117d4:	mov	r0, #1
   117d8:	mov	r1, r9
   117dc:	movw	r2, #1089	; 0x441
   117e0:	mov	r3, #384	; 0x180
   117e4:	bl	11bb8 <__mempcpy_chk@plt+0xb68>
   117e8:	b	11808 <__mempcpy_chk@plt+0x7b8>
   117ec:	mov	r9, #0
   117f0:	mov	r5, r6
   117f4:	b	11824 <__mempcpy_chk@plt+0x7d4>
   117f8:	mov	r0, r9
   117fc:	movw	r1, #1089	; 0x441
   11800:	mov	r2, #384	; 0x180
   11804:	bl	10ee8 <open64@plt>
   11808:	mov	r6, r0
   1180c:	cmn	r0, #1
   11810:	ble	1181c <__mempcpy_chk@plt+0x7cc>
   11814:	mov	r4, r9
   11818:	b	115e8 <__mempcpy_chk@plt+0x598>
   1181c:	ldr	r5, [r4]
   11820:	ldr	r6, [sp, #20]
   11824:	movw	r1, #19543	; 0x4c57
   11828:	mov	r0, #0
   1182c:	mov	r2, #5
   11830:	movt	r1, #1
   11834:	bl	10e64 <dcgettext@plt>
   11838:	movw	r1, #19528	; 0x4c48
   1183c:	mov	r4, r0
   11840:	mov	r0, #4
   11844:	movt	r1, #1
   11848:	bl	13568 <__mempcpy_chk@plt+0x2518>
   1184c:	mov	r3, r0
   11850:	mov	r0, #0
   11854:	mov	r1, r6
   11858:	mov	r2, r4
   1185c:	bl	10edc <error@plt>
   11860:	cmp	r9, #0
   11864:	beq	118a0 <__mempcpy_chk@plt+0x850>
   11868:	movw	r1, #19543	; 0x4c57
   1186c:	mov	r0, #0
   11870:	mov	r2, #5
   11874:	movt	r1, #1
   11878:	bl	10e64 <dcgettext@plt>
   1187c:	mov	r4, r0
   11880:	mov	r0, #4
   11884:	mov	r1, r9
   11888:	bl	13568 <__mempcpy_chk@plt+0x2518>
   1188c:	mov	r3, r0
   11890:	mov	r0, #0
   11894:	mov	r1, r5
   11898:	mov	r2, r4
   1189c:	bl	10edc <error@plt>
   118a0:	mov	r0, sl
   118a4:	sub	sp, fp, #28
   118a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118ac:	movw	r1, #19446	; 0x4bf6
   118b0:	mov	r0, #0
   118b4:	mov	r2, #5
   118b8:	movt	r1, #1
   118bc:	bl	10e64 <dcgettext@plt>
   118c0:	mov	r2, r0
   118c4:	mov	r0, #0
   118c8:	mov	r1, #0
   118cc:	bl	10edc <error@plt>
   118d0:	mov	r0, sl
   118d4:	bl	1114c <__mempcpy_chk@plt+0xfc>
   118d8:	movw	r1, #24912	; 0x6150
   118dc:	movt	r1, #2
   118e0:	str	r0, [r1]
   118e4:	bx	lr
   118e8:	movw	r1, #24916	; 0x6154
   118ec:	movt	r1, #2
   118f0:	strb	r0, [r1]
   118f4:	bx	lr
   118f8:	push	{r4, r5, r6, sl, fp, lr}
   118fc:	add	fp, sp, #16
   11900:	sub	sp, sp, #8
   11904:	movw	r0, #24900	; 0x6144
   11908:	movt	r0, #2
   1190c:	ldr	r0, [r0]
   11910:	bl	14470 <__mempcpy_chk@plt+0x3420>
   11914:	cmp	r0, #0
   11918:	beq	11940 <__mempcpy_chk@plt+0x8f0>
   1191c:	movw	r0, #24916	; 0x6154
   11920:	movt	r0, #2
   11924:	ldrb	r0, [r0]
   11928:	cmp	r0, #0
   1192c:	beq	11960 <__mempcpy_chk@plt+0x910>
   11930:	bl	10f6c <__errno_location@plt>
   11934:	ldr	r0, [r0]
   11938:	cmp	r0, #32
   1193c:	bne	11960 <__mempcpy_chk@plt+0x910>
   11940:	movw	r0, #24896	; 0x6140
   11944:	movt	r0, #2
   11948:	ldr	r0, [r0]
   1194c:	bl	14470 <__mempcpy_chk@plt+0x3420>
   11950:	cmp	r0, #0
   11954:	subeq	sp, fp, #16
   11958:	popeq	{r4, r5, r6, sl, fp, pc}
   1195c:	b	119d0 <__mempcpy_chk@plt+0x980>
   11960:	movw	r1, #20095	; 0x4e7f
   11964:	mov	r0, #0
   11968:	mov	r2, #5
   1196c:	movt	r1, #1
   11970:	bl	10e64 <dcgettext@plt>
   11974:	mov	r4, r0
   11978:	movw	r0, #24912	; 0x6150
   1197c:	movt	r0, #2
   11980:	ldr	r6, [r0]
   11984:	bl	10f6c <__errno_location@plt>
   11988:	ldr	r5, [r0]
   1198c:	cmp	r6, #0
   11990:	bne	119ac <__mempcpy_chk@plt+0x95c>
   11994:	movw	r2, #20111	; 0x4e8f
   11998:	mov	r0, #0
   1199c:	mov	r1, r5
   119a0:	mov	r3, r4
   119a4:	movt	r2, #1
   119a8:	b	119cc <__mempcpy_chk@plt+0x97c>
   119ac:	mov	r0, r6
   119b0:	bl	13660 <__mempcpy_chk@plt+0x2610>
   119b4:	movw	r2, #20107	; 0x4e8b
   119b8:	mov	r3, r0
   119bc:	str	r4, [sp]
   119c0:	mov	r0, #0
   119c4:	mov	r1, r5
   119c8:	movt	r2, #1
   119cc:	bl	10edc <error@plt>
   119d0:	movw	r0, #24812	; 0x60ec
   119d4:	movt	r0, #2
   119d8:	ldr	r0, [r0]
   119dc:	bl	10e28 <_exit@plt>
   119e0:	sub	sp, sp, #8
   119e4:	push	{r4, r5, r6, r7, fp, lr}
   119e8:	add	fp, sp, #16
   119ec:	sub	sp, sp, #8
   119f0:	mov	r5, r0
   119f4:	add	r0, fp, #8
   119f8:	cmp	r1, #11
   119fc:	str	r2, [fp, #8]
   11a00:	str	r3, [fp, #12]
   11a04:	str	r0, [sp, #4]
   11a08:	bhi	11a44 <__mempcpy_chk@plt+0x9f4>
   11a0c:	mov	r0, #1
   11a10:	movw	r2, #1300	; 0x514
   11a14:	tst	r2, r0, lsl r1
   11a18:	bne	11afc <__mempcpy_chk@plt+0xaac>
   11a1c:	movw	r2, #2570	; 0xa0a
   11a20:	tst	r2, r0, lsl r1
   11a24:	bne	11a6c <__mempcpy_chk@plt+0xa1c>
   11a28:	cmp	r1, #0
   11a2c:	bne	11a44 <__mempcpy_chk@plt+0x9f4>
   11a30:	ldr	r0, [sp, #4]
   11a34:	add	r1, r0, #4
   11a38:	str	r1, [sp, #4]
   11a3c:	mov	r1, #0
   11a40:	b	11b08 <__mempcpy_chk@plt+0xab8>
   11a44:	sub	r0, r1, #1024	; 0x400
   11a48:	cmp	r0, #10
   11a4c:	bhi	11afc <__mempcpy_chk@plt+0xaac>
   11a50:	mov	r2, #1
   11a54:	movw	r3, #645	; 0x285
   11a58:	tst	r3, r2, lsl r0
   11a5c:	bne	11afc <__mempcpy_chk@plt+0xaac>
   11a60:	movw	r3, #1282	; 0x502
   11a64:	tst	r3, r2, lsl r0
   11a68:	beq	11a78 <__mempcpy_chk@plt+0xa28>
   11a6c:	mov	r0, r5
   11a70:	bl	10fcc <fcntl64@plt>
   11a74:	b	11b14 <__mempcpy_chk@plt+0xac4>
   11a78:	cmp	r0, #6
   11a7c:	bne	11afc <__mempcpy_chk@plt+0xaac>
   11a80:	ldr	r0, [sp, #4]
   11a84:	movw	r7, #24920	; 0x6158
   11a88:	movt	r7, #2
   11a8c:	add	r1, r0, #4
   11a90:	str	r1, [sp, #4]
   11a94:	ldr	r6, [r0]
   11a98:	ldr	r0, [r7]
   11a9c:	cmp	r0, #0
   11aa0:	bmi	11b38 <__mempcpy_chk@plt+0xae8>
   11aa4:	mov	r0, r5
   11aa8:	movw	r1, #1030	; 0x406
   11aac:	mov	r2, r6
   11ab0:	bl	10fcc <fcntl64@plt>
   11ab4:	mov	r4, r0
   11ab8:	cmn	r0, #1
   11abc:	bgt	11b2c <__mempcpy_chk@plt+0xadc>
   11ac0:	bl	10f6c <__errno_location@plt>
   11ac4:	ldr	r0, [r0]
   11ac8:	cmp	r0, #22
   11acc:	bne	11b2c <__mempcpy_chk@plt+0xadc>
   11ad0:	mov	r0, r5
   11ad4:	mov	r1, #0
   11ad8:	mov	r2, r6
   11adc:	bl	10fcc <fcntl64@plt>
   11ae0:	mov	r4, r0
   11ae4:	cmp	r0, #0
   11ae8:	bmi	11b18 <__mempcpy_chk@plt+0xac8>
   11aec:	mvn	r0, #0
   11af0:	str	r0, [r7]
   11af4:	mov	r0, #1
   11af8:	b	11b5c <__mempcpy_chk@plt+0xb0c>
   11afc:	ldr	r0, [sp, #4]
   11b00:	add	r2, r0, #4
   11b04:	str	r2, [sp, #4]
   11b08:	ldr	r2, [r0]
   11b0c:	mov	r0, r5
   11b10:	bl	10fcc <fcntl64@plt>
   11b14:	mov	r4, r0
   11b18:	mov	r0, r4
   11b1c:	sub	sp, fp, #16
   11b20:	pop	{r4, r5, r6, r7, fp, lr}
   11b24:	add	sp, sp, #8
   11b28:	bx	lr
   11b2c:	mov	r0, #1
   11b30:	str	r0, [r7]
   11b34:	b	11b18 <__mempcpy_chk@plt+0xac8>
   11b38:	mov	r0, r5
   11b3c:	mov	r1, #0
   11b40:	mov	r2, r6
   11b44:	bl	10fcc <fcntl64@plt>
   11b48:	mov	r4, r0
   11b4c:	ldr	r0, [r7]
   11b50:	add	r0, r0, #1
   11b54:	clz	r0, r0
   11b58:	lsr	r0, r0, #5
   11b5c:	cmp	r0, #0
   11b60:	beq	11b18 <__mempcpy_chk@plt+0xac8>
   11b64:	cmp	r4, #0
   11b68:	bmi	11b18 <__mempcpy_chk@plt+0xac8>
   11b6c:	mov	r0, r4
   11b70:	mov	r1, #1
   11b74:	bl	10fcc <fcntl64@plt>
   11b78:	cmp	r0, #0
   11b7c:	bmi	11b98 <__mempcpy_chk@plt+0xb48>
   11b80:	orr	r2, r0, #1
   11b84:	mov	r0, r4
   11b88:	mov	r1, #2
   11b8c:	bl	10fcc <fcntl64@plt>
   11b90:	cmn	r0, #1
   11b94:	bne	11b18 <__mempcpy_chk@plt+0xac8>
   11b98:	bl	10f6c <__errno_location@plt>
   11b9c:	ldr	r6, [r0]
   11ba0:	mov	r5, r0
   11ba4:	mov	r0, r4
   11ba8:	bl	11044 <close@plt>
   11bac:	str	r6, [r5]
   11bb0:	mvn	r4, #0
   11bb4:	b	11b18 <__mempcpy_chk@plt+0xac8>
   11bb8:	push	{r4, r5, r6, r7, fp, lr}
   11bbc:	add	fp, sp, #16
   11bc0:	mov	r5, r0
   11bc4:	mov	r0, r1
   11bc8:	mov	r1, r2
   11bcc:	mov	r2, r3
   11bd0:	bl	10ee8 <open64@plt>
   11bd4:	mov	r4, r0
   11bd8:	cmp	r0, r5
   11bdc:	beq	11c18 <__mempcpy_chk@plt+0xbc8>
   11be0:	cmp	r4, #0
   11be4:	bmi	11c18 <__mempcpy_chk@plt+0xbc8>
   11be8:	mov	r0, r4
   11bec:	mov	r1, r5
   11bf0:	bl	10e70 <dup2@plt>
   11bf4:	mov	r5, r0
   11bf8:	bl	10f6c <__errno_location@plt>
   11bfc:	ldr	r7, [r0]
   11c00:	mov	r6, r0
   11c04:	mov	r0, r4
   11c08:	bl	11044 <close@plt>
   11c0c:	mov	r0, r5
   11c10:	str	r7, [r6]
   11c14:	pop	{r4, r5, r6, r7, fp, pc}
   11c18:	mov	r0, r4
   11c1c:	pop	{r4, r5, r6, r7, fp, pc}
   11c20:	push	{fp, lr}
   11c24:	mov	fp, sp
   11c28:	bl	11c38 <__mempcpy_chk@plt+0xbe8>
   11c2c:	cmp	r0, #0
   11c30:	popne	{fp, pc}
   11c34:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   11c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c3c:	add	fp, sp, #28
   11c40:	push	{r2}		; (str r2, [sp, #-4]!)
   11c44:	mov	sl, r1
   11c48:	mov	r7, r0
   11c4c:	bl	143f0 <__mempcpy_chk@plt+0x33a0>
   11c50:	sub	r4, r0, r7
   11c54:	bl	14438 <__mempcpy_chk@plt+0x33e8>
   11c58:	mov	r6, r0
   11c5c:	add	r5, r4, r0
   11c60:	mov	r0, sl
   11c64:	bl	10f60 <strlen@plt>
   11c68:	mov	r9, r0
   11c6c:	cmp	r6, #0
   11c70:	beq	11c98 <__mempcpy_chk@plt+0xc48>
   11c74:	add	r0, r5, r7
   11c78:	mov	r4, #0
   11c7c:	ldrb	r0, [r0, #-1]
   11c80:	cmp	r0, #47	; 0x2f
   11c84:	beq	11ca8 <__mempcpy_chk@plt+0xc58>
   11c88:	ldrb	r0, [sl]
   11c8c:	subs	r4, r0, #47	; 0x2f
   11c90:	movwne	r4, #47	; 0x2f
   11c94:	b	11ca8 <__mempcpy_chk@plt+0xc58>
   11c98:	ldrb	r0, [sl]
   11c9c:	mov	r4, #0
   11ca0:	cmp	r0, #47	; 0x2f
   11ca4:	movweq	r4, #46	; 0x2e
   11ca8:	uxtb	r8, r4
   11cac:	add	r0, r9, r5
   11cb0:	cmp	r8, #0
   11cb4:	movwne	r8, #1
   11cb8:	add	r0, r0, r8
   11cbc:	add	r0, r0, #1
   11cc0:	bl	14370 <__mempcpy_chk@plt+0x3320>
   11cc4:	mov	r6, r0
   11cc8:	cmp	r0, #0
   11ccc:	beq	11d0c <__mempcpy_chk@plt+0xcbc>
   11cd0:	mov	r0, r6
   11cd4:	mov	r1, r7
   11cd8:	mov	r2, r5
   11cdc:	mvn	r3, #0
   11ce0:	bl	11050 <__mempcpy_chk@plt>
   11ce4:	ldr	r1, [sp]
   11ce8:	strb	r4, [r0], r8
   11cec:	mov	r2, r9
   11cf0:	mvn	r3, #0
   11cf4:	cmp	r1, #0
   11cf8:	strne	r0, [r1]
   11cfc:	mov	r1, sl
   11d00:	bl	11050 <__mempcpy_chk@plt>
   11d04:	mov	r1, #0
   11d08:	strb	r1, [r0]
   11d0c:	mov	r0, r6
   11d10:	sub	sp, fp, #28
   11d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d18:	push	{r4, r5, r6, sl, fp, lr}
   11d1c:	add	fp, sp, #16
   11d20:	mov	r4, r0
   11d24:	bl	10f6c <__errno_location@plt>
   11d28:	ldr	r6, [r0]
   11d2c:	mov	r5, r0
   11d30:	mov	r0, r4
   11d34:	bl	10e1c <free@plt>
   11d38:	str	r6, [r5]
   11d3c:	pop	{r4, r5, r6, sl, fp, pc}
   11d40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d44:	add	fp, sp, #24
   11d48:	sub	sp, sp, #8
   11d4c:	movw	r6, #24904	; 0x6148
   11d50:	mov	r4, #0
   11d54:	cmp	r0, #2
   11d58:	movt	r6, #2
   11d5c:	ldr	r7, [r6]
   11d60:	str	r4, [r6]
   11d64:	bne	11dd8 <__mempcpy_chk@plt+0xd88>
   11d68:	mov	r8, r3
   11d6c:	movw	r3, #20132	; 0x4ea4
   11d70:	mov	r5, r2
   11d74:	movw	r2, #20114	; 0x4e92
   11d78:	mov	r0, #2
   11d7c:	str	r4, [sp]
   11d80:	movt	r2, #1
   11d84:	movt	r3, #1
   11d88:	bl	10f30 <getopt_long@plt>
   11d8c:	cmp	r0, #104	; 0x68
   11d90:	beq	11dcc <__mempcpy_chk@plt+0xd7c>
   11d94:	cmp	r0, #118	; 0x76
   11d98:	bne	11dd8 <__mempcpy_chk@plt+0xd88>
   11d9c:	movw	r0, #24900	; 0x6144
   11da0:	ldr	r3, [fp, #8]
   11da4:	add	r1, fp, #16
   11da8:	mov	r2, r8
   11dac:	movt	r0, #2
   11db0:	str	r1, [sp, #4]
   11db4:	str	r1, [sp]
   11db8:	mov	r1, r5
   11dbc:	ldr	r0, [r0]
   11dc0:	bl	13d54 <__mempcpy_chk@plt+0x2d04>
   11dc4:	mov	r0, #0
   11dc8:	bl	10f48 <exit@plt>
   11dcc:	ldr	r1, [fp, #12]
   11dd0:	mov	r0, #0
   11dd4:	blx	r1
   11dd8:	movw	r0, #24888	; 0x6138
   11ddc:	str	r7, [r6]
   11de0:	movt	r0, #2
   11de4:	str	r4, [r0]
   11de8:	sub	sp, fp, #24
   11dec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11df0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11df4:	add	fp, sp, #24
   11df8:	sub	sp, sp, #8
   11dfc:	mov	r8, r3
   11e00:	ldr	r3, [fp, #12]
   11e04:	movw	r7, #24904	; 0x6148
   11e08:	movw	r5, #18791	; 0x4967
   11e0c:	mov	r9, r2
   11e10:	mov	r2, #1
   11e14:	mov	r6, #0
   11e18:	movt	r7, #2
   11e1c:	movt	r5, #1
   11e20:	str	r6, [sp]
   11e24:	ldr	r4, [r7]
   11e28:	str	r2, [r7]
   11e2c:	movw	r2, #20114	; 0x4e92
   11e30:	cmp	r3, #0
   11e34:	movw	r3, #20132	; 0x4ea4
   11e38:	movt	r2, #1
   11e3c:	movt	r3, #1
   11e40:	movne	r2, r5
   11e44:	bl	10f30 <getopt_long@plt>
   11e48:	cmn	r0, #1
   11e4c:	beq	11e78 <__mempcpy_chk@plt+0xe28>
   11e50:	cmp	r0, #104	; 0x68
   11e54:	beq	11e6c <__mempcpy_chk@plt+0xe1c>
   11e58:	cmp	r0, #118	; 0x76
   11e5c:	beq	11e84 <__mempcpy_chk@plt+0xe34>
   11e60:	movw	r0, #24812	; 0x60ec
   11e64:	movt	r0, #2
   11e68:	ldr	r6, [r0]
   11e6c:	ldr	r1, [fp, #16]
   11e70:	mov	r0, r6
   11e74:	blx	r1
   11e78:	str	r4, [r7]
   11e7c:	sub	sp, fp, #24
   11e80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e84:	movw	r0, #24900	; 0x6144
   11e88:	ldr	r3, [fp, #8]
   11e8c:	add	r1, fp, #20
   11e90:	mov	r2, r8
   11e94:	movt	r0, #2
   11e98:	str	r1, [sp, #4]
   11e9c:	str	r1, [sp]
   11ea0:	mov	r1, r9
   11ea4:	ldr	r0, [r0]
   11ea8:	bl	13d54 <__mempcpy_chk@plt+0x2d04>
   11eac:	mov	r0, #0
   11eb0:	bl	10f48 <exit@plt>
   11eb4:	push	{r4, r5, fp, lr}
   11eb8:	add	fp, sp, #8
   11ebc:	cmp	r0, #0
   11ec0:	beq	11f54 <__mempcpy_chk@plt+0xf04>
   11ec4:	mov	r1, #47	; 0x2f
   11ec8:	mov	r4, r0
   11ecc:	bl	10fe4 <strrchr@plt>
   11ed0:	cmp	r0, #0
   11ed4:	mov	r5, r4
   11ed8:	addne	r5, r0, #1
   11edc:	sub	r0, r5, r4
   11ee0:	cmp	r0, #7
   11ee4:	blt	11f38 <__mempcpy_chk@plt+0xee8>
   11ee8:	movw	r1, #20236	; 0x4f0c
   11eec:	sub	r0, r5, #7
   11ef0:	mov	r2, #7
   11ef4:	movt	r1, #1
   11ef8:	bl	1102c <strncmp@plt>
   11efc:	cmp	r0, #0
   11f00:	bne	11f38 <__mempcpy_chk@plt+0xee8>
   11f04:	movw	r1, #20244	; 0x4f14
   11f08:	mov	r0, r5
   11f0c:	mov	r2, #3
   11f10:	movt	r1, #1
   11f14:	bl	1102c <strncmp@plt>
   11f18:	cmp	r0, #0
   11f1c:	beq	11f28 <__mempcpy_chk@plt+0xed8>
   11f20:	mov	r4, r5
   11f24:	b	11f38 <__mempcpy_chk@plt+0xee8>
   11f28:	movw	r0, #24880	; 0x6130
   11f2c:	add	r4, r5, #3
   11f30:	movt	r0, #2
   11f34:	str	r4, [r0]
   11f38:	movw	r0, #24884	; 0x6134
   11f3c:	movt	r0, #2
   11f40:	str	r4, [r0]
   11f44:	movw	r0, #24924	; 0x615c
   11f48:	movt	r0, #2
   11f4c:	str	r4, [r0]
   11f50:	pop	{r4, r5, fp, pc}
   11f54:	movw	r0, #24896	; 0x6140
   11f58:	movt	r0, #2
   11f5c:	ldr	r1, [r0]
   11f60:	movw	r0, #20180	; 0x4ed4
   11f64:	movt	r0, #1
   11f68:	bl	11020 <fputs@plt>
   11f6c:	bl	11038 <abort@plt>
   11f70:	push	{r4, r5, r6, sl, fp, lr}
   11f74:	add	fp, sp, #16
   11f78:	mov	r4, r0
   11f7c:	movw	r0, #24928	; 0x6160
   11f80:	movt	r0, #2
   11f84:	cmp	r4, #0
   11f88:	moveq	r4, r0
   11f8c:	bl	10f6c <__errno_location@plt>
   11f90:	ldr	r6, [r0]
   11f94:	mov	r5, r0
   11f98:	mov	r0, r4
   11f9c:	mov	r1, #48	; 0x30
   11fa0:	bl	141fc <__mempcpy_chk@plt+0x31ac>
   11fa4:	str	r6, [r5]
   11fa8:	pop	{r4, r5, r6, sl, fp, pc}
   11fac:	movw	r1, #24928	; 0x6160
   11fb0:	cmp	r0, #0
   11fb4:	movt	r1, #2
   11fb8:	movne	r1, r0
   11fbc:	ldr	r0, [r1]
   11fc0:	bx	lr
   11fc4:	movw	r2, #24928	; 0x6160
   11fc8:	cmp	r0, #0
   11fcc:	movt	r2, #2
   11fd0:	movne	r2, r0
   11fd4:	str	r1, [r2]
   11fd8:	bx	lr
   11fdc:	movw	r3, #24928	; 0x6160
   11fe0:	cmp	r0, #0
   11fe4:	and	r2, r2, #1
   11fe8:	movt	r3, #2
   11fec:	movne	r3, r0
   11ff0:	ubfx	r0, r1, #5, #3
   11ff4:	and	r1, r1, #31
   11ff8:	add	ip, r3, r0, lsl #2
   11ffc:	mov	r0, #1
   12000:	ldr	r3, [ip, #8]
   12004:	and	r0, r0, r3, lsr r1
   12008:	eor	r2, r0, r2
   1200c:	eor	r1, r3, r2, lsl r1
   12010:	str	r1, [ip, #8]
   12014:	bx	lr
   12018:	movw	r2, #24928	; 0x6160
   1201c:	cmp	r0, #0
   12020:	movt	r2, #2
   12024:	movne	r2, r0
   12028:	ldr	r0, [r2, #4]
   1202c:	str	r1, [r2, #4]
   12030:	bx	lr
   12034:	push	{fp, lr}
   12038:	mov	fp, sp
   1203c:	movw	r3, #24928	; 0x6160
   12040:	cmp	r0, #0
   12044:	movt	r3, #2
   12048:	movne	r3, r0
   1204c:	cmp	r1, #0
   12050:	mov	r0, #10
   12054:	cmpne	r2, #0
   12058:	str	r0, [r3]
   1205c:	bne	12064 <__mempcpy_chk@plt+0x1014>
   12060:	bl	11038 <abort@plt>
   12064:	str	r1, [r3, #40]	; 0x28
   12068:	str	r2, [r3, #44]	; 0x2c
   1206c:	pop	{fp, pc}
   12070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12074:	add	fp, sp, #28
   12078:	sub	sp, sp, #20
   1207c:	mov	r7, r0
   12080:	ldr	r0, [fp, #8]
   12084:	movw	r5, #24928	; 0x6160
   12088:	mov	r8, r3
   1208c:	mov	r9, r2
   12090:	mov	sl, r1
   12094:	movt	r5, #2
   12098:	cmp	r0, #0
   1209c:	movne	r5, r0
   120a0:	bl	10f6c <__errno_location@plt>
   120a4:	ldr	r2, [r5, #40]	; 0x28
   120a8:	ldr	r3, [r5, #44]	; 0x2c
   120ac:	mov	r4, r0
   120b0:	ldm	r5, {r0, r1}
   120b4:	add	r5, r5, #8
   120b8:	ldr	r6, [r4]
   120bc:	stm	sp, {r0, r1, r5}
   120c0:	mov	r0, r7
   120c4:	mov	r1, sl
   120c8:	str	r2, [sp, #12]
   120cc:	str	r3, [sp, #16]
   120d0:	mov	r2, r9
   120d4:	mov	r3, r8
   120d8:	bl	120e8 <__mempcpy_chk@plt+0x1098>
   120dc:	str	r6, [r4]
   120e0:	sub	sp, fp, #28
   120e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120ec:	add	fp, sp, #28
   120f0:	sub	sp, sp, #156	; 0x9c
   120f4:	mov	r5, r0
   120f8:	add	r0, r2, #1
   120fc:	mov	r6, r1
   12100:	mov	sl, r3
   12104:	str	r2, [fp, #-80]	; 0xffffffb0
   12108:	str	r0, [sp, #72]	; 0x48
   1210c:	ldr	r0, [fp, #12]
   12110:	and	r1, r0, #1
   12114:	str	r1, [sp, #32]
   12118:	and	r1, r0, #4
   1211c:	str	r1, [sp, #28]
   12120:	ubfx	r9, r0, #1, #1
   12124:	bl	10eac <__ctype_get_mb_cur_max@plt>
   12128:	str	r0, [sp, #40]	; 0x28
   1212c:	ldr	r0, [fp, #24]
   12130:	ldr	r7, [fp, #8]
   12134:	mov	r1, #0
   12138:	mov	lr, #0
   1213c:	str	r5, [fp, #-84]	; 0xffffffac
   12140:	str	r1, [sp, #60]	; 0x3c
   12144:	mov	r1, #1
   12148:	str	r1, [fp, #-48]	; 0xffffffd0
   1214c:	str	r0, [sp, #80]	; 0x50
   12150:	ldr	r0, [fp, #20]
   12154:	str	r0, [sp, #76]	; 0x4c
   12158:	mov	r0, #0
   1215c:	str	r0, [sp, #56]	; 0x38
   12160:	mov	r0, #0
   12164:	str	r0, [fp, #-88]	; 0xffffffa8
   12168:	mov	r0, #0
   1216c:	str	r0, [fp, #-72]	; 0xffffffb8
   12170:	mov	r0, #0
   12174:	cmp	r7, #10
   12178:	bhi	13154 <__mempcpy_chk@plt+0x2104>
   1217c:	add	r1, pc, #24
   12180:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12184:	mov	ip, r6
   12188:	mov	r8, #0
   1218c:	mov	r2, #1
   12190:	mov	r6, #0
   12194:	mov	r3, sl
   12198:	ldr	pc, [r1, r7, lsl #2]
   1219c:	andeq	r2, r1, r8, lsl #5
   121a0:	ldrdeq	r2, [r1], -ip
   121a4:	muleq	r1, ip, r2
   121a8:	andeq	r2, r1, r0, lsl #5
   121ac:	ldrdeq	r2, [r1], -r0
   121b0:	andeq	r2, r1, r4, lsl #6
   121b4:	andeq	r2, r1, ip, lsr #5
   121b8:	andeq	r2, r1, r8, lsl #7
   121bc:	andeq	r2, r1, r8, asr #3
   121c0:	andeq	r2, r1, r8, asr #3
   121c4:	andeq	r2, r1, r8, lsl #4
   121c8:	movw	r0, #20328	; 0x4f68
   121cc:	mov	r1, r7
   121d0:	mov	r6, r5
   121d4:	mov	r4, ip
   121d8:	mov	r5, lr
   121dc:	movt	r0, #1
   121e0:	bl	138b8 <__mempcpy_chk@plt+0x2868>
   121e4:	str	r0, [sp, #76]	; 0x4c
   121e8:	movw	r0, #20330	; 0x4f6a
   121ec:	mov	r1, r7
   121f0:	movt	r0, #1
   121f4:	bl	138b8 <__mempcpy_chk@plt+0x2868>
   121f8:	mov	lr, r5
   121fc:	mov	r5, r6
   12200:	mov	ip, r4
   12204:	str	r0, [sp, #80]	; 0x50
   12208:	mov	r8, #0
   1220c:	tst	r9, #1
   12210:	str	lr, [sp, #44]	; 0x2c
   12214:	bne	1224c <__mempcpy_chk@plt+0x11fc>
   12218:	ldr	r0, [sp, #76]	; 0x4c
   1221c:	ldrb	r0, [r0]
   12220:	cmp	r0, #0
   12224:	beq	1224c <__mempcpy_chk@plt+0x11fc>
   12228:	ldr	r1, [sp, #76]	; 0x4c
   1222c:	mov	r8, #0
   12230:	add	r1, r1, #1
   12234:	cmp	r8, ip
   12238:	strbcc	r0, [r5, r8]
   1223c:	ldrb	r0, [r1, r8]
   12240:	add	r8, r8, #1
   12244:	cmp	r0, #0
   12248:	bne	12234 <__mempcpy_chk@plt+0x11e4>
   1224c:	ldr	r6, [sp, #80]	; 0x50
   12250:	mov	r4, ip
   12254:	mov	r0, r6
   12258:	bl	10f60 <strlen@plt>
   1225c:	mov	ip, r4
   12260:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12264:	ldr	lr, [sp, #44]	; 0x2c
   12268:	str	r6, [fp, #-88]	; 0xffffffa8
   1226c:	str	r0, [fp, #-72]	; 0xffffffb8
   12270:	mov	r2, #1
   12274:	mov	r6, r9
   12278:	mov	r3, sl
   1227c:	b	12388 <__mempcpy_chk@plt+0x1338>
   12280:	mov	r0, #1
   12284:	b	122dc <__mempcpy_chk@plt+0x128c>
   12288:	mov	r7, #0
   1228c:	mov	r8, #0
   12290:	mov	r2, r0
   12294:	mov	r6, #0
   12298:	b	12388 <__mempcpy_chk@plt+0x1338>
   1229c:	tst	r9, #1
   122a0:	bne	122dc <__mempcpy_chk@plt+0x128c>
   122a4:	mov	r2, r0
   122a8:	b	12334 <__mempcpy_chk@plt+0x12e4>
   122ac:	mov	r0, #1
   122b0:	mov	r8, #0
   122b4:	mov	r7, #5
   122b8:	mov	r2, #1
   122bc:	str	r0, [fp, #-72]	; 0xffffffb8
   122c0:	movw	r0, #20326	; 0x4f66
   122c4:	movt	r0, #1
   122c8:	str	r0, [fp, #-88]	; 0xffffffa8
   122cc:	b	122fc <__mempcpy_chk@plt+0x12ac>
   122d0:	mov	r2, #1
   122d4:	tst	r9, #1
   122d8:	beq	12334 <__mempcpy_chk@plt+0x12e4>
   122dc:	mov	r1, #1
   122e0:	mov	r8, #0
   122e4:	mov	r7, #2
   122e8:	mov	r2, r0
   122ec:	str	r1, [fp, #-72]	; 0xffffffb8
   122f0:	movw	r1, #20330	; 0x4f6a
   122f4:	movt	r1, #1
   122f8:	str	r1, [fp, #-88]	; 0xffffffa8
   122fc:	mov	r6, #1
   12300:	b	12388 <__mempcpy_chk@plt+0x1338>
   12304:	tst	r9, #1
   12308:	beq	12358 <__mempcpy_chk@plt+0x1308>
   1230c:	mov	r0, #1
   12310:	mov	r8, #0
   12314:	mov	r2, #1
   12318:	mov	r6, #1
   1231c:	mov	r7, #5
   12320:	str	r0, [fp, #-72]	; 0xffffffb8
   12324:	movw	r0, #20326	; 0x4f66
   12328:	movt	r0, #1
   1232c:	str	r0, [fp, #-88]	; 0xffffffa8
   12330:	b	12388 <__mempcpy_chk@plt+0x1338>
   12334:	cmp	ip, #0
   12338:	mov	r8, #1
   1233c:	mov	r6, #0
   12340:	mov	r7, #2
   12344:	movne	r0, #39	; 0x27
   12348:	strbne	r0, [r5]
   1234c:	movw	r0, #20330	; 0x4f6a
   12350:	movt	r0, #1
   12354:	b	1237c <__mempcpy_chk@plt+0x132c>
   12358:	cmp	ip, #0
   1235c:	mov	r8, #1
   12360:	mov	r2, #1
   12364:	mov	r7, #5
   12368:	mov	r6, #0
   1236c:	movne	r0, #34	; 0x22
   12370:	strbne	r0, [r5]
   12374:	movw	r0, #20326	; 0x4f66
   12378:	movt	r0, #1
   1237c:	str	r0, [fp, #-88]	; 0xffffffa8
   12380:	mov	r0, #1
   12384:	str	r0, [fp, #-72]	; 0xffffffb8
   12388:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1238c:	str	r7, [fp, #-68]	; 0xffffffbc
   12390:	str	r6, [fp, #-76]	; 0xffffffb4
   12394:	str	r2, [sp, #84]	; 0x54
   12398:	cmp	r0, #0
   1239c:	movwne	r0, #1
   123a0:	and	r1, r0, r6
   123a4:	and	r1, r2, r1
   123a8:	str	r1, [sp, #48]	; 0x30
   123ac:	sub	r1, r7, #2
   123b0:	clz	r1, r1
   123b4:	lsr	r1, r1, #5
   123b8:	and	r1, r1, r6
   123bc:	str	r1, [sp, #64]	; 0x40
   123c0:	subs	r1, r7, #2
   123c4:	eor	r7, r6, #1
   123c8:	movwne	r1, #1
   123cc:	str	r7, [sp, #92]	; 0x5c
   123d0:	orr	r7, r1, r7
   123d4:	and	r1, r1, r2
   123d8:	and	r0, r0, r1
   123dc:	str	r7, [sp, #68]	; 0x44
   123e0:	mov	r7, #0
   123e4:	str	r0, [fp, #-60]	; 0xffffffc4
   123e8:	orr	r0, r1, r6
   123ec:	ldr	r1, [fp, #16]
   123f0:	eor	r0, r0, #1
   123f4:	clz	r1, r1
   123f8:	lsr	r1, r1, #5
   123fc:	orr	r0, r1, r0
   12400:	str	r0, [fp, #-64]	; 0xffffffc0
   12404:	eor	r0, r2, #1
   12408:	str	r0, [sp, #52]	; 0x34
   1240c:	cmn	r3, #1
   12410:	beq	12420 <__mempcpy_chk@plt+0x13d0>
   12414:	cmp	r7, r3
   12418:	bne	1242c <__mempcpy_chk@plt+0x13dc>
   1241c:	b	12f88 <__mempcpy_chk@plt+0x1f38>
   12420:	ldrb	r0, [r4, r7]
   12424:	cmp	r0, #0
   12428:	beq	12f90 <__mempcpy_chk@plt+0x1f40>
   1242c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12430:	cmp	r0, #0
   12434:	beq	1247c <__mempcpy_chk@plt+0x142c>
   12438:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1243c:	add	r5, r7, r0
   12440:	cmp	r0, #2
   12444:	bcc	12490 <__mempcpy_chk@plt+0x1440>
   12448:	mov	r0, #0
   1244c:	cmn	r3, #1
   12450:	str	r0, [fp, #-56]	; 0xffffffc8
   12454:	bne	12498 <__mempcpy_chk@plt+0x1448>
   12458:	mov	r0, r4
   1245c:	mov	r4, ip
   12460:	mov	r6, lr
   12464:	bl	10f60 <strlen@plt>
   12468:	mov	ip, r4
   1246c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12470:	mov	lr, r6
   12474:	mov	r3, r0
   12478:	b	12498 <__mempcpy_chk@plt+0x1448>
   1247c:	mov	r0, #0
   12480:	mov	sl, r3
   12484:	str	r0, [fp, #-56]	; 0xffffffc8
   12488:	mov	r0, #0
   1248c:	b	12504 <__mempcpy_chk@plt+0x14b4>
   12490:	mov	r0, #0
   12494:	str	r0, [fp, #-56]	; 0xffffffc8
   12498:	cmp	r5, r3
   1249c:	bls	124b0 <__mempcpy_chk@plt+0x1460>
   124a0:	ldr	r5, [fp, #-84]	; 0xffffffac
   124a4:	mov	r0, #0
   124a8:	mov	sl, r3
   124ac:	b	12504 <__mempcpy_chk@plt+0x14b4>
   124b0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   124b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   124b8:	add	r0, r4, r7
   124bc:	mov	r5, lr
   124c0:	mov	r6, ip
   124c4:	mov	sl, r3
   124c8:	bl	10f54 <bcmp@plt>
   124cc:	ldr	r2, [sp, #92]	; 0x5c
   124d0:	cmp	r0, #0
   124d4:	ldr	r3, [fp, #-84]	; 0xffffffac
   124d8:	mov	r1, r0
   124dc:	movwne	r1, #1
   124e0:	orr	r1, r1, r2
   124e4:	tst	r1, #1
   124e8:	beq	13014 <__mempcpy_chk@plt+0x1fc4>
   124ec:	ldr	r4, [fp, #-80]	; 0xffffffb0
   124f0:	clz	r0, r0
   124f4:	mov	lr, r5
   124f8:	mov	ip, r6
   124fc:	mov	r5, r3
   12500:	lsr	r0, r0, #5
   12504:	str	r0, [fp, #-52]	; 0xffffffcc
   12508:	ldrb	r6, [r4, r7]
   1250c:	cmp	r6, #126	; 0x7e
   12510:	bhi	12a38 <__mempcpy_chk@plt+0x19e8>
   12514:	add	r3, pc, #16
   12518:	mov	r9, #1
   1251c:	mov	r2, #110	; 0x6e
   12520:	mov	r0, #97	; 0x61
   12524:	mov	r1, #0
   12528:	ldr	pc, [r3, r6, lsl #2]
   1252c:	muleq	r1, ip, r8
   12530:	andeq	r2, r1, r8, lsr sl
   12534:	andeq	r2, r1, r8, lsr sl
   12538:	andeq	r2, r1, r8, lsr sl
   1253c:	andeq	r2, r1, r8, lsr sl
   12540:	andeq	r2, r1, r8, lsr sl
   12544:	andeq	r2, r1, r8, lsr sl
   12548:			; <UNDEFINED> instruction: 0x00012ab8
   1254c:	andeq	r2, r1, ip, ror r8
   12550:	andeq	r2, r1, r4, ror r8
   12554:	andeq	r2, r1, r8, lsl #17
   12558:	andeq	r2, r1, r0, lsr #19
   1255c:	andeq	r2, r1, ip, ror #16
   12560:	andeq	r2, r1, r4, lsl #17
   12564:	andeq	r2, r1, r8, lsr sl
   12568:	andeq	r2, r1, r8, lsr sl
   1256c:	andeq	r2, r1, r8, lsr sl
   12570:	andeq	r2, r1, r8, lsr sl
   12574:	andeq	r2, r1, r8, lsr sl
   12578:	andeq	r2, r1, r8, lsr sl
   1257c:	andeq	r2, r1, r8, lsr sl
   12580:	andeq	r2, r1, r8, lsr sl
   12584:	andeq	r2, r1, r8, lsr sl
   12588:	andeq	r2, r1, r8, lsr sl
   1258c:	andeq	r2, r1, r8, lsr sl
   12590:	andeq	r2, r1, r8, lsr sl
   12594:	andeq	r2, r1, r8, lsr sl
   12598:	andeq	r2, r1, r8, lsr sl
   1259c:	andeq	r2, r1, r8, lsr sl
   125a0:	andeq	r2, r1, r8, lsr sl
   125a4:	andeq	r2, r1, r8, lsr sl
   125a8:	andeq	r2, r1, r8, lsr sl
   125ac:	andeq	r2, r1, ip, lsl r8
   125b0:	andeq	r2, r1, r0, lsr #16
   125b4:	andeq	r2, r1, r0, lsr #16
   125b8:	andeq	r2, r1, r4, lsl #16
   125bc:	andeq	r2, r1, r0, lsr #16
   125c0:	andeq	r2, r1, r8, lsr #14
   125c4:	andeq	r2, r1, r0, lsr #16
   125c8:	andeq	r2, r1, r8, lsr #19
   125cc:	andeq	r2, r1, r0, lsr #16
   125d0:	andeq	r2, r1, r0, lsr #16
   125d4:	andeq	r2, r1, r0, lsr #16
   125d8:	andeq	r2, r1, r8, lsr #14
   125dc:	andeq	r2, r1, r8, lsr #14
   125e0:	andeq	r2, r1, r8, lsr #14
   125e4:	andeq	r2, r1, r8, lsr #14
   125e8:	andeq	r2, r1, r8, lsr #14
   125ec:	andeq	r2, r1, r8, lsr #14
   125f0:	andeq	r2, r1, r8, lsr #14
   125f4:	andeq	r2, r1, r8, lsr #14
   125f8:	andeq	r2, r1, r8, lsr #14
   125fc:	andeq	r2, r1, r8, lsr #14
   12600:	andeq	r2, r1, r8, lsr #14
   12604:	andeq	r2, r1, r8, lsr #14
   12608:	andeq	r2, r1, r8, lsr #14
   1260c:	andeq	r2, r1, r8, lsr #14
   12610:	andeq	r2, r1, r8, lsr #14
   12614:	andeq	r2, r1, r8, lsr #14
   12618:	andeq	r2, r1, r0, lsr #16
   1261c:	andeq	r2, r1, r0, lsr #16
   12620:	andeq	r2, r1, r0, lsr #16
   12624:	andeq	r2, r1, r0, lsr #16
   12628:	andeq	r2, r1, r4, ror r9
   1262c:	andeq	r2, r1, r8, lsr sl
   12630:	andeq	r2, r1, r8, lsr #14
   12634:	andeq	r2, r1, r8, lsr #14
   12638:	andeq	r2, r1, r8, lsr #14
   1263c:	andeq	r2, r1, r8, lsr #14
   12640:	andeq	r2, r1, r8, lsr #14
   12644:	andeq	r2, r1, r8, lsr #14
   12648:	andeq	r2, r1, r8, lsr #14
   1264c:	andeq	r2, r1, r8, lsr #14
   12650:	andeq	r2, r1, r8, lsr #14
   12654:	andeq	r2, r1, r8, lsr #14
   12658:	andeq	r2, r1, r8, lsr #14
   1265c:	andeq	r2, r1, r8, lsr #14
   12660:	andeq	r2, r1, r8, lsr #14
   12664:	andeq	r2, r1, r8, lsr #14
   12668:	andeq	r2, r1, r8, lsr #14
   1266c:	andeq	r2, r1, r8, lsr #14
   12670:	andeq	r2, r1, r8, lsr #14
   12674:	andeq	r2, r1, r8, lsr #14
   12678:	andeq	r2, r1, r8, lsr #14
   1267c:	andeq	r2, r1, r8, lsr #14
   12680:	andeq	r2, r1, r8, lsr #14
   12684:	andeq	r2, r1, r8, lsr #14
   12688:	andeq	r2, r1, r8, lsr #14
   1268c:	andeq	r2, r1, r8, lsr #14
   12690:	andeq	r2, r1, r8, lsr #14
   12694:	andeq	r2, r1, r8, lsr #14
   12698:	andeq	r2, r1, r0, lsr #16
   1269c:	andeq	r2, r1, r8, asr #16
   126a0:	andeq	r2, r1, r8, lsr #14
   126a4:	andeq	r2, r1, r0, lsr #16
   126a8:	andeq	r2, r1, r8, lsr #14
   126ac:	andeq	r2, r1, r0, lsr #16
   126b0:	andeq	r2, r1, r8, lsr #14
   126b4:	andeq	r2, r1, r8, lsr #14
   126b8:	andeq	r2, r1, r8, lsr #14
   126bc:	andeq	r2, r1, r8, lsr #14
   126c0:	andeq	r2, r1, r8, lsr #14
   126c4:	andeq	r2, r1, r8, lsr #14
   126c8:	andeq	r2, r1, r8, lsr #14
   126cc:	andeq	r2, r1, r8, lsr #14
   126d0:	andeq	r2, r1, r8, lsr #14
   126d4:	andeq	r2, r1, r8, lsr #14
   126d8:	andeq	r2, r1, r8, lsr #14
   126dc:	andeq	r2, r1, r8, lsr #14
   126e0:	andeq	r2, r1, r8, lsr #14
   126e4:	andeq	r2, r1, r8, lsr #14
   126e8:	andeq	r2, r1, r8, lsr #14
   126ec:	andeq	r2, r1, r8, lsr #14
   126f0:	andeq	r2, r1, r8, lsr #14
   126f4:	andeq	r2, r1, r8, lsr #14
   126f8:	andeq	r2, r1, r8, lsr #14
   126fc:	andeq	r2, r1, r8, lsr #14
   12700:	andeq	r2, r1, r8, lsr #14
   12704:	andeq	r2, r1, r8, lsr #14
   12708:	andeq	r2, r1, r8, lsr #14
   1270c:	andeq	r2, r1, r8, lsr #14
   12710:	andeq	r2, r1, r8, lsr #14
   12714:	andeq	r2, r1, r8, lsr #14
   12718:	ldrdeq	r2, [r1], -ip
   1271c:	andeq	r2, r1, r0, lsr #16
   12720:	ldrdeq	r2, [r1], -ip
   12724:	andeq	r2, r1, r4, lsl #16
   12728:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1272c:	tst	r0, #1
   12730:	bne	1275c <__mempcpy_chk@plt+0x170c>
   12734:	ldr	r1, [fp, #16]
   12738:	ubfx	r0, r6, #5, #3
   1273c:	mov	r2, #1
   12740:	ldr	r0, [r1, r0, lsl #2]
   12744:	and	r1, r6, #31
   12748:	tst	r0, r2, lsl r1
   1274c:	beq	1275c <__mempcpy_chk@plt+0x170c>
   12750:	mov	r0, r6
   12754:	mov	r1, r9
   12758:	b	12770 <__mempcpy_chk@plt+0x1720>
   1275c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12760:	mov	r1, r9
   12764:	cmp	r0, #0
   12768:	mov	r0, r6
   1276c:	beq	12ebc <__mempcpy_chk@plt+0x1e6c>
   12770:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12774:	tst	r2, #1
   12778:	bne	13058 <__mempcpy_chk@plt+0x2008>
   1277c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12780:	subs	r2, r2, #2
   12784:	movwne	r2, #1
   12788:	orr	r2, r2, lr
   1278c:	tst	r2, #1
   12790:	bne	127c8 <__mempcpy_chk@plt+0x1778>
   12794:	cmp	r8, ip
   12798:	mov	lr, #1
   1279c:	movcc	r2, #39	; 0x27
   127a0:	strbcc	r2, [r5, r8]
   127a4:	add	r2, r8, #1
   127a8:	cmp	r2, ip
   127ac:	movcc	r3, #36	; 0x24
   127b0:	strbcc	r3, [r5, r2]
   127b4:	add	r2, r8, #2
   127b8:	add	r8, r8, #3
   127bc:	cmp	r2, ip
   127c0:	movcc	r3, #39	; 0x27
   127c4:	strbcc	r3, [r5, r2]
   127c8:	cmp	r8, ip
   127cc:	movcc	r2, #92	; 0x5c
   127d0:	strbcc	r2, [r5, r8]
   127d4:	add	r8, r8, #1
   127d8:	b	12efc <__mempcpy_chk@plt+0x1eac>
   127dc:	cmp	sl, #1
   127e0:	beq	12804 <__mempcpy_chk@plt+0x17b4>
   127e4:	mov	r9, #0
   127e8:	cmn	sl, #1
   127ec:	bne	12810 <__mempcpy_chk@plt+0x17c0>
   127f0:	ldrb	r0, [r4, #1]
   127f4:	cmp	r0, #0
   127f8:	beq	12804 <__mempcpy_chk@plt+0x17b4>
   127fc:	mvn	sl, #0
   12800:	b	12810 <__mempcpy_chk@plt+0x17c0>
   12804:	mov	r9, #0
   12808:	cmp	r7, #0
   1280c:	beq	1281c <__mempcpy_chk@plt+0x17cc>
   12810:	mov	r0, #0
   12814:	str	r0, [fp, #-56]	; 0xffffffc8
   12818:	b	12728 <__mempcpy_chk@plt+0x16d8>
   1281c:	mov	r1, #1
   12820:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12824:	cmp	r0, #2
   12828:	bne	12840 <__mempcpy_chk@plt+0x17f0>
   1282c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12830:	mov	r9, r1
   12834:	tst	r0, #1
   12838:	beq	12728 <__mempcpy_chk@plt+0x16d8>
   1283c:	b	13058 <__mempcpy_chk@plt+0x2008>
   12840:	mov	r9, r1
   12844:	b	12728 <__mempcpy_chk@plt+0x16d8>
   12848:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1284c:	cmp	r0, #2
   12850:	bne	12a94 <__mempcpy_chk@plt+0x1a44>
   12854:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12858:	tst	r0, #1
   1285c:	bne	13058 <__mempcpy_chk@plt+0x2008>
   12860:	mov	r0, #0
   12864:	str	r0, [fp, #-56]	; 0xffffffc8
   12868:	b	12aac <__mempcpy_chk@plt+0x1a5c>
   1286c:	mov	r0, #102	; 0x66
   12870:	b	12ab8 <__mempcpy_chk@plt+0x1a68>
   12874:	mov	r2, #116	; 0x74
   12878:	b	12888 <__mempcpy_chk@plt+0x1838>
   1287c:	mov	r0, #98	; 0x62
   12880:	b	12ab8 <__mempcpy_chk@plt+0x1a68>
   12884:	mov	r2, #114	; 0x72
   12888:	ldr	r0, [sp, #68]	; 0x44
   1288c:	tst	r0, #1
   12890:	mov	r0, r2
   12894:	bne	12ab8 <__mempcpy_chk@plt+0x1a68>
   12898:	b	13058 <__mempcpy_chk@plt+0x2008>
   1289c:	ldr	r0, [sp, #84]	; 0x54
   128a0:	tst	r0, #1
   128a4:	beq	12ad8 <__mempcpy_chk@plt+0x1a88>
   128a8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   128ac:	tst	r0, #1
   128b0:	bne	13144 <__mempcpy_chk@plt+0x20f4>
   128b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   128b8:	mov	r2, sl
   128bc:	subs	r0, r0, #2
   128c0:	movwne	r0, #1
   128c4:	orr	r0, r0, lr
   128c8:	tst	r0, #1
   128cc:	bne	12904 <__mempcpy_chk@plt+0x18b4>
   128d0:	cmp	r8, ip
   128d4:	mov	lr, #1
   128d8:	movcc	r0, #39	; 0x27
   128dc:	strbcc	r0, [r5, r8]
   128e0:	add	r0, r8, #1
   128e4:	cmp	r0, ip
   128e8:	movcc	r1, #36	; 0x24
   128ec:	strbcc	r1, [r5, r0]
   128f0:	add	r0, r8, #2
   128f4:	add	r8, r8, #3
   128f8:	cmp	r0, ip
   128fc:	movcc	r1, #39	; 0x27
   12900:	strbcc	r1, [r5, r0]
   12904:	mov	r1, #1
   12908:	cmp	r8, ip
   1290c:	mov	r9, #0
   12910:	mov	r6, #48	; 0x30
   12914:	str	r1, [fp, #-56]	; 0xffffffc8
   12918:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1291c:	movcc	r0, #92	; 0x5c
   12920:	strbcc	r0, [r5, r8]
   12924:	add	r0, r8, #1
   12928:	cmp	r1, #2
   1292c:	beq	12c34 <__mempcpy_chk@plt+0x1be4>
   12930:	add	r1, r7, #1
   12934:	cmp	r1, r2
   12938:	bcs	12c34 <__mempcpy_chk@plt+0x1be4>
   1293c:	ldrb	r1, [r4, r1]
   12940:	sub	r1, r1, #48	; 0x30
   12944:	uxtb	r1, r1
   12948:	cmp	r1, #9
   1294c:	bhi	12c34 <__mempcpy_chk@plt+0x1be4>
   12950:	cmp	r0, ip
   12954:	movcc	r1, #48	; 0x30
   12958:	strbcc	r1, [r5, r0]
   1295c:	add	r0, r8, #2
   12960:	add	r8, r8, #3
   12964:	cmp	r0, ip
   12968:	movcc	r1, #48	; 0x30
   1296c:	strbcc	r1, [r5, r0]
   12970:	b	12728 <__mempcpy_chk@plt+0x16d8>
   12974:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12978:	mov	r6, #63	; 0x3f
   1297c:	cmp	r0, #5
   12980:	beq	12c3c <__mempcpy_chk@plt+0x1bec>
   12984:	mov	r1, #0
   12988:	cmp	r0, #2
   1298c:	str	r1, [fp, #-56]	; 0xffffffc8
   12990:	bne	12cf0 <__mempcpy_chk@plt+0x1ca0>
   12994:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12998:	mov	r9, #0
   1299c:	b	12834 <__mempcpy_chk@plt+0x17e4>
   129a0:	mov	r0, #118	; 0x76
   129a4:	b	12ab8 <__mempcpy_chk@plt+0x1a68>
   129a8:	mov	r0, #1
   129ac:	mov	r6, #39	; 0x27
   129b0:	str	r0, [sp, #60]	; 0x3c
   129b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   129b8:	cmp	r0, #2
   129bc:	bne	12a30 <__mempcpy_chk@plt+0x19e0>
   129c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   129c4:	tst	r0, #1
   129c8:	bne	13058 <__mempcpy_chk@plt+0x2008>
   129cc:	ldr	r2, [sp, #56]	; 0x38
   129d0:	clz	r1, ip
   129d4:	mov	lr, #0
   129d8:	lsr	r1, r1, #5
   129dc:	cmp	r2, #0
   129e0:	mov	r0, r2
   129e4:	movwne	r0, #1
   129e8:	orrs	r0, r0, r1
   129ec:	moveq	r2, ip
   129f0:	moveq	ip, r0
   129f4:	cmp	r8, ip
   129f8:	str	r2, [sp, #56]	; 0x38
   129fc:	movcc	r0, #39	; 0x27
   12a00:	strbcc	r0, [r5, r8]
   12a04:	add	r0, r8, #1
   12a08:	cmp	r0, ip
   12a0c:	movcc	r1, #92	; 0x5c
   12a10:	strbcc	r1, [r5, r0]
   12a14:	add	r0, r8, #2
   12a18:	add	r8, r8, #3
   12a1c:	cmp	r0, ip
   12a20:	movcc	r1, #39	; 0x27
   12a24:	strbcc	r1, [r5, r0]
   12a28:	mov	r0, #0
   12a2c:	str	r0, [fp, #-56]	; 0xffffffc8
   12a30:	mov	r9, #1
   12a34:	b	12728 <__mempcpy_chk@plt+0x16d8>
   12a38:	ldr	r0, [sp, #40]	; 0x28
   12a3c:	str	lr, [sp, #44]	; 0x2c
   12a40:	str	ip, [sp, #88]	; 0x58
   12a44:	cmp	r0, #1
   12a48:	bne	12af8 <__mempcpy_chk@plt+0x1aa8>
   12a4c:	str	sl, [sp, #36]	; 0x24
   12a50:	bl	10f3c <__ctype_b_loc@plt>
   12a54:	ldr	r0, [r0]
   12a58:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12a5c:	mov	r1, #1
   12a60:	add	r0, r0, r6, lsl #1
   12a64:	ldrb	r0, [r0, #1]
   12a68:	ubfx	r9, r0, #6, #1
   12a6c:	ldr	r0, [sp, #52]	; 0x34
   12a70:	ldr	lr, [sp, #44]	; 0x2c
   12a74:	cmp	r1, #1
   12a78:	orr	r3, r9, r0
   12a7c:	bhi	12cf8 <__mempcpy_chk@plt+0x1ca8>
   12a80:	tst	r3, #1
   12a84:	beq	12cf8 <__mempcpy_chk@plt+0x1ca8>
   12a88:	ldr	sl, [sp, #36]	; 0x24
   12a8c:	ldr	ip, [sp, #88]	; 0x58
   12a90:	b	12728 <__mempcpy_chk@plt+0x16d8>
   12a94:	ldr	r1, [sp, #48]	; 0x30
   12a98:	mov	r0, #0
   12a9c:	str	r0, [fp, #-56]	; 0xffffffc8
   12aa0:	mov	r0, #92	; 0x5c
   12aa4:	cmp	r1, #0
   12aa8:	beq	12ab8 <__mempcpy_chk@plt+0x1a68>
   12aac:	mov	r6, #92	; 0x5c
   12ab0:	mov	r9, #0
   12ab4:	b	12ebc <__mempcpy_chk@plt+0x1e6c>
   12ab8:	mov	r1, #0
   12abc:	mov	r9, #0
   12ac0:	str	r1, [fp, #-56]	; 0xffffffc8
   12ac4:	ldr	r1, [sp, #84]	; 0x54
   12ac8:	tst	r1, #1
   12acc:	mov	r1, #0
   12ad0:	beq	12728 <__mempcpy_chk@plt+0x16d8>
   12ad4:	b	12770 <__mempcpy_chk@plt+0x1720>
   12ad8:	ldr	r0, [sp, #32]
   12adc:	mov	r6, #0
   12ae0:	mov	r9, #0
   12ae4:	cmp	r0, #0
   12ae8:	mov	r0, #0
   12aec:	str	r0, [fp, #-56]	; 0xffffffc8
   12af0:	beq	12728 <__mempcpy_chk@plt+0x16d8>
   12af4:	b	12f14 <__mempcpy_chk@plt+0x1ec4>
   12af8:	mov	r0, #0
   12afc:	cmn	sl, #1
   12b00:	sub	r3, fp, #40	; 0x28
   12b04:	str	r0, [fp, #-36]	; 0xffffffdc
   12b08:	str	r0, [fp, #-40]	; 0xffffffd8
   12b0c:	bne	12b24 <__mempcpy_chk@plt+0x1ad4>
   12b10:	mov	r0, r4
   12b14:	bl	10f60 <strlen@plt>
   12b18:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12b1c:	sub	r3, fp, #40	; 0x28
   12b20:	mov	sl, r0
   12b24:	ldr	r0, [sp, #72]	; 0x48
   12b28:	mov	r9, #1
   12b2c:	mov	r1, #0
   12b30:	str	sl, [sp, #36]	; 0x24
   12b34:	add	r0, r0, r7
   12b38:	str	r0, [sp, #20]
   12b3c:	add	r0, r1, r7
   12b40:	str	r1, [sp, #24]
   12b44:	add	r1, r4, r0
   12b48:	mov	r4, r0
   12b4c:	sub	r2, sl, r0
   12b50:	sub	r0, fp, #44	; 0x2c
   12b54:	bl	146c4 <__mempcpy_chk@plt+0x3674>
   12b58:	cmp	r0, #0
   12b5c:	beq	12f68 <__mempcpy_chk@plt+0x1f18>
   12b60:	cmn	r0, #1
   12b64:	beq	12f20 <__mempcpy_chk@plt+0x1ed0>
   12b68:	ldr	r2, [sp, #36]	; 0x24
   12b6c:	cmn	r0, #2
   12b70:	beq	12f28 <__mempcpy_chk@plt+0x1ed8>
   12b74:	ldr	r2, [sp, #64]	; 0x40
   12b78:	ldr	ip, [sp, #88]	; 0x58
   12b7c:	ldr	r4, [sp, #84]	; 0x54
   12b80:	ldr	lr, [fp, #-48]	; 0xffffffd0
   12b84:	cmp	r0, #2
   12b88:	mov	r1, #0
   12b8c:	movwcc	r1, #1
   12b90:	eor	r2, r2, #1
   12b94:	orrs	r1, r2, r1
   12b98:	bne	12be8 <__mempcpy_chk@plt+0x1b98>
   12b9c:	ldr	r1, [sp, #24]
   12ba0:	ldr	r2, [sp, #20]
   12ba4:	add	r1, r2, r1
   12ba8:	sub	r2, r0, #1
   12bac:	ldrb	r3, [r1]
   12bb0:	sub	r5, r3, #94	; 0x5e
   12bb4:	cmp	r5, #30
   12bb8:	bhi	12bd0 <__mempcpy_chk@plt+0x1b80>
   12bbc:	mov	r4, #1
   12bc0:	mov	sl, #1073741829	; 0x40000005
   12bc4:	tst	sl, r4, lsl r5
   12bc8:	ldr	r4, [sp, #84]	; 0x54
   12bcc:	bne	13030 <__mempcpy_chk@plt+0x1fe0>
   12bd0:	sub	r3, r3, #91	; 0x5b
   12bd4:	cmp	r3, #2
   12bd8:	bcc	13030 <__mempcpy_chk@plt+0x1fe0>
   12bdc:	add	r1, r1, #1
   12be0:	subs	r2, r2, #1
   12be4:	bne	12bac <__mempcpy_chk@plt+0x1b5c>
   12be8:	ldr	r5, [sp, #24]
   12bec:	str	lr, [fp, #-48]	; 0xffffffd0
   12bf0:	add	r5, r0, r5
   12bf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bf8:	bl	10e94 <iswprint@plt>
   12bfc:	cmp	r0, #0
   12c00:	sub	r4, fp, #40	; 0x28
   12c04:	movwne	r0, #1
   12c08:	and	r9, r9, r0
   12c0c:	mov	r0, r4
   12c10:	bl	10e4c <mbsinit@plt>
   12c14:	mov	r1, r5
   12c18:	mov	r3, r4
   12c1c:	ldr	sl, [sp, #36]	; 0x24
   12c20:	ldr	r5, [fp, #-84]	; 0xffffffac
   12c24:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12c28:	cmp	r0, #0
   12c2c:	beq	12b3c <__mempcpy_chk@plt+0x1aec>
   12c30:	b	12a6c <__mempcpy_chk@plt+0x1a1c>
   12c34:	mov	r8, r0
   12c38:	b	12728 <__mempcpy_chk@plt+0x16d8>
   12c3c:	mov	r0, #0
   12c40:	str	r0, [fp, #-56]	; 0xffffffc8
   12c44:	ldr	r0, [sp, #28]
   12c48:	cmp	r0, #0
   12c4c:	beq	12cf0 <__mempcpy_chk@plt+0x1ca0>
   12c50:	add	r0, r7, #2
   12c54:	mov	r1, sl
   12c58:	cmp	r0, sl
   12c5c:	bcs	12cf0 <__mempcpy_chk@plt+0x1ca0>
   12c60:	add	r1, r7, r4
   12c64:	ldrb	r1, [r1, #1]
   12c68:	cmp	r1, #63	; 0x3f
   12c6c:	bne	12cf0 <__mempcpy_chk@plt+0x1ca0>
   12c70:	ldrb	r9, [r4, r0]
   12c74:	sub	r2, r9, #33	; 0x21
   12c78:	cmp	r2, #29
   12c7c:	bhi	12cf0 <__mempcpy_chk@plt+0x1ca0>
   12c80:	mov	r1, r4
   12c84:	movw	r4, #20929	; 0x51c1
   12c88:	mov	r3, #1
   12c8c:	movt	r4, #14336	; 0x3800
   12c90:	tst	r4, r3, lsl r2
   12c94:	beq	12f7c <__mempcpy_chk@plt+0x1f2c>
   12c98:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12c9c:	tst	r2, #1
   12ca0:	bne	1314c <__mempcpy_chk@plt+0x20fc>
   12ca4:	cmp	r8, ip
   12ca8:	mov	r4, r1
   12cac:	mov	r7, r0
   12cb0:	mov	r6, r9
   12cb4:	movcc	r2, #63	; 0x3f
   12cb8:	strbcc	r2, [r5, r8]
   12cbc:	add	r2, r8, #1
   12cc0:	cmp	r2, ip
   12cc4:	movcc	r3, #34	; 0x22
   12cc8:	strbcc	r3, [r5, r2]
   12ccc:	add	r2, r8, #2
   12cd0:	cmp	r2, ip
   12cd4:	movcc	r3, #34	; 0x22
   12cd8:	strbcc	r3, [r5, r2]
   12cdc:	add	r2, r8, #3
   12ce0:	add	r8, r8, #4
   12ce4:	cmp	r2, ip
   12ce8:	movcc	r3, #63	; 0x3f
   12cec:	strbcc	r3, [r5, r2]
   12cf0:	mov	r9, #0
   12cf4:	b	12728 <__mempcpy_chk@plt+0x16d8>
   12cf8:	ldr	sl, [sp, #36]	; 0x24
   12cfc:	add	r0, r1, r7
   12d00:	mov	r2, #0
   12d04:	str	r3, [sp, #24]
   12d08:	str	r0, [fp, #-56]	; 0xffffffc8
   12d0c:	tst	r3, #1
   12d10:	beq	12d3c <__mempcpy_chk@plt+0x1cec>
   12d14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12d18:	tst	r0, #1
   12d1c:	beq	12e04 <__mempcpy_chk@plt+0x1db4>
   12d20:	ldr	r1, [sp, #88]	; 0x58
   12d24:	mov	r0, r3
   12d28:	cmp	r8, r1
   12d2c:	movcc	r1, #92	; 0x5c
   12d30:	strbcc	r1, [r5, r8]
   12d34:	add	r8, r8, #1
   12d38:	b	12e08 <__mempcpy_chk@plt+0x1db8>
   12d3c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12d40:	tst	r1, #1
   12d44:	bne	13054 <__mempcpy_chk@plt+0x2004>
   12d48:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12d4c:	subs	r2, r1, #2
   12d50:	movwne	r2, #1
   12d54:	orr	r2, r2, lr
   12d58:	tst	r2, #1
   12d5c:	bne	12da0 <__mempcpy_chk@plt+0x1d50>
   12d60:	ldr	r1, [sp, #88]	; 0x58
   12d64:	add	r2, r8, #1
   12d68:	mov	lr, #1
   12d6c:	cmp	r8, r1
   12d70:	movcc	r1, #39	; 0x27
   12d74:	strbcc	r1, [r5, r8]
   12d78:	ldr	r1, [sp, #88]	; 0x58
   12d7c:	cmp	r2, r1
   12d80:	movcc	r1, #36	; 0x24
   12d84:	strbcc	r1, [r5, r2]
   12d88:	ldr	r1, [sp, #88]	; 0x58
   12d8c:	add	r2, r8, #2
   12d90:	add	r8, r8, #3
   12d94:	cmp	r2, r1
   12d98:	movcc	r1, #39	; 0x27
   12d9c:	strbcc	r1, [r5, r2]
   12da0:	ldr	r1, [sp, #88]	; 0x58
   12da4:	add	r2, r8, #1
   12da8:	mov	r0, r3
   12dac:	cmp	r8, r1
   12db0:	movcc	r1, #92	; 0x5c
   12db4:	strbcc	r1, [r5, r8]
   12db8:	ldr	r1, [sp, #88]	; 0x58
   12dbc:	cmp	r2, r1
   12dc0:	bcs	12dd4 <__mempcpy_chk@plt+0x1d84>
   12dc4:	uxtb	r3, r6
   12dc8:	mov	r1, #48	; 0x30
   12dcc:	orr	r3, r1, r3, lsr #6
   12dd0:	strb	r3, [r5, r2]
   12dd4:	ldr	r1, [sp, #88]	; 0x58
   12dd8:	add	r2, r8, #2
   12ddc:	add	r8, r8, #3
   12de0:	cmp	r2, r1
   12de4:	lsrcc	r3, r6, #3
   12de8:	movcc	r1, #6
   12dec:	bficc	r3, r1, #3, #29
   12df0:	mov	r1, #6
   12df4:	bfi	r6, r1, #3, #29
   12df8:	strbcc	r3, [r5, r2]
   12dfc:	mov	r2, #1
   12e00:	b	12e10 <__mempcpy_chk@plt+0x1dc0>
   12e04:	mov	r0, r3
   12e08:	mov	r1, #0
   12e0c:	str	r1, [fp, #-52]	; 0xffffffcc
   12e10:	mov	ip, r2
   12e14:	and	r1, r2, #1
   12e18:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12e1c:	add	r3, r7, #1
   12e20:	cmp	r2, r3
   12e24:	bls	12eac <__mempcpy_chk@plt+0x1e5c>
   12e28:	cmp	r1, #0
   12e2c:	mvn	r5, lr
   12e30:	movwne	r1, #1
   12e34:	orr	r5, r5, r1
   12e38:	tst	r5, #1
   12e3c:	bne	12e80 <__mempcpy_chk@plt+0x1e30>
   12e40:	ldr	r1, [sp, #88]	; 0x58
   12e44:	ldr	r5, [fp, #-84]	; 0xffffffac
   12e48:	mov	r2, r4
   12e4c:	ldr	r4, [sp, #88]	; 0x58
   12e50:	ldr	r0, [sp, #24]
   12e54:	mov	lr, #0
   12e58:	cmp	r8, r1
   12e5c:	movcc	r1, #39	; 0x27
   12e60:	strbcc	r1, [r5, r8]
   12e64:	add	r1, r8, #1
   12e68:	add	r8, r8, #2
   12e6c:	cmp	r1, r4
   12e70:	movcc	r4, #39	; 0x27
   12e74:	strbcc	r4, [r5, r1]
   12e78:	mov	r4, r2
   12e7c:	b	12e84 <__mempcpy_chk@plt+0x1e34>
   12e80:	ldr	r5, [fp, #-84]	; 0xffffffac
   12e84:	ldr	r1, [sp, #88]	; 0x58
   12e88:	mov	r2, ip
   12e8c:	cmp	r8, r1
   12e90:	ldr	r1, [sp, #72]	; 0x48
   12e94:	strbcc	r6, [r5, r8]
   12e98:	add	r8, r8, #1
   12e9c:	ldrb	r6, [r1, r7]
   12ea0:	mov	r7, r3
   12ea4:	mov	r3, r0
   12ea8:	b	12d0c <__mempcpy_chk@plt+0x1cbc>
   12eac:	ldr	ip, [sp, #88]	; 0x58
   12eb0:	cmp	r1, #0
   12eb4:	movwne	r1, #1
   12eb8:	str	r1, [fp, #-56]	; 0xffffffc8
   12ebc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12ec0:	cmp	r0, #0
   12ec4:	bne	12ef4 <__mempcpy_chk@plt+0x1ea4>
   12ec8:	tst	lr, #1
   12ecc:	beq	12ef4 <__mempcpy_chk@plt+0x1ea4>
   12ed0:	cmp	r8, ip
   12ed4:	mov	lr, #0
   12ed8:	movcc	r0, #39	; 0x27
   12edc:	strbcc	r0, [r5, r8]
   12ee0:	add	r0, r8, #1
   12ee4:	add	r8, r8, #2
   12ee8:	cmp	r0, ip
   12eec:	movcc	r1, #39	; 0x27
   12ef0:	strbcc	r1, [r5, r0]
   12ef4:	mov	r1, r9
   12ef8:	mov	r0, r6
   12efc:	cmp	r8, ip
   12f00:	strbcc	r0, [r5, r8]
   12f04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12f08:	add	r8, r8, #1
   12f0c:	and	r0, r0, r1
   12f10:	str	r0, [fp, #-48]	; 0xffffffd0
   12f14:	mov	r3, sl
   12f18:	add	r7, r7, #1
   12f1c:	b	1240c <__mempcpy_chk@plt+0x13bc>
   12f20:	mov	r9, #0
   12f24:	b	12f68 <__mempcpy_chk@plt+0x1f18>
   12f28:	mov	r9, #0
   12f2c:	cmp	r2, r4
   12f30:	bls	12f68 <__mempcpy_chk@plt+0x1f18>
   12f34:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12f38:	ldr	r1, [sp, #24]
   12f3c:	add	r0, r4, r7
   12f40:	mov	r3, r1
   12f44:	ldrb	r1, [r0, r1]
   12f48:	cmp	r1, #0
   12f4c:	beq	12f74 <__mempcpy_chk@plt+0x1f24>
   12f50:	add	r3, r3, #1
   12f54:	add	r1, r7, r3
   12f58:	cmp	r1, r2
   12f5c:	mov	r1, r3
   12f60:	bcc	12f40 <__mempcpy_chk@plt+0x1ef0>
   12f64:	b	12a6c <__mempcpy_chk@plt+0x1a1c>
   12f68:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12f6c:	ldr	r1, [sp, #24]
   12f70:	b	12a6c <__mempcpy_chk@plt+0x1a1c>
   12f74:	mov	r1, r3
   12f78:	b	12a6c <__mempcpy_chk@plt+0x1a1c>
   12f7c:	mov	r9, #0
   12f80:	mov	r4, r1
   12f84:	b	12728 <__mempcpy_chk@plt+0x16d8>
   12f88:	mov	sl, r7
   12f8c:	b	12f94 <__mempcpy_chk@plt+0x1f44>
   12f90:	mvn	sl, #0
   12f94:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12f98:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12f9c:	eor	r0, r1, #2
   12fa0:	orr	r0, r0, r8
   12fa4:	clz	r0, r0
   12fa8:	lsr	r0, r0, #5
   12fac:	tst	r2, r0
   12fb0:	bne	13058 <__mempcpy_chk@plt+0x2008>
   12fb4:	subs	r0, r1, #2
   12fb8:	movwne	r0, #1
   12fbc:	orr	r0, r2, r0
   12fc0:	tst	r0, #1
   12fc4:	ldreq	r0, [sp, #60]	; 0x3c
   12fc8:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   12fcc:	eoreq	r0, r0, #1
   12fd0:	tsteq	r0, #1
   12fd4:	bne	130ec <__mempcpy_chk@plt+0x209c>
   12fd8:	tst	r1, #1
   12fdc:	bne	130b8 <__mempcpy_chk@plt+0x2068>
   12fe0:	ldr	r6, [sp, #56]	; 0x38
   12fe4:	mov	r9, #0
   12fe8:	cmp	r6, #0
   12fec:	beq	130e4 <__mempcpy_chk@plt+0x2094>
   12ff0:	ldr	r0, [sp, #84]	; 0x54
   12ff4:	mov	r1, #0
   12ff8:	mov	r7, #2
   12ffc:	cmp	ip, #0
   13000:	str	r1, [fp, #-48]	; 0xffffffd0
   13004:	mov	r1, #0
   13008:	str	r1, [fp, #-76]	; 0xffffffb4
   1300c:	beq	12174 <__mempcpy_chk@plt+0x1124>
   13010:	b	130ec <__mempcpy_chk@plt+0x209c>
   13014:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13018:	ldr	r1, [fp, #12]
   1301c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13020:	mov	r5, r3
   13024:	mov	ip, r6
   13028:	mov	r3, sl
   1302c:	b	1307c <__mempcpy_chk@plt+0x202c>
   13030:	tst	r4, #1
   13034:	ldr	r5, [fp, #-84]	; 0xffffffac
   13038:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1303c:	ldr	r1, [fp, #12]
   13040:	ldr	r3, [sp, #36]	; 0x24
   13044:	mov	r0, #2
   13048:	movwne	r0, #4
   1304c:	mov	r2, r0
   13050:	b	1307c <__mempcpy_chk@plt+0x202c>
   13054:	ldr	ip, [sp, #88]	; 0x58
   13058:	ldr	r1, [sp, #84]	; 0x54
   1305c:	mov	r0, #2
   13060:	tst	r1, #1
   13064:	movwne	r0, #4
   13068:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1306c:	ldr	r1, [fp, #12]
   13070:	mov	r3, sl
   13074:	cmp	r2, #2
   13078:	moveq	r2, r0
   1307c:	mov	r0, #0
   13080:	bic	r1, r1, #2
   13084:	str	r2, [sp]
   13088:	mov	r2, r4
   1308c:	str	r0, [sp, #8]
   13090:	ldr	r0, [sp, #76]	; 0x4c
   13094:	str	r1, [sp, #4]
   13098:	mov	r1, ip
   1309c:	str	r0, [sp, #12]
   130a0:	ldr	r0, [sp, #80]	; 0x50
   130a4:	str	r0, [sp, #16]
   130a8:	mov	r0, r5
   130ac:	bl	120e8 <__mempcpy_chk@plt+0x1098>
   130b0:	mov	r8, r0
   130b4:	b	13138 <__mempcpy_chk@plt+0x20e8>
   130b8:	mov	r0, #5
   130bc:	ldr	r1, [sp, #56]	; 0x38
   130c0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   130c4:	mov	r3, sl
   130c8:	str	r0, [sp]
   130cc:	ldr	r0, [fp, #12]
   130d0:	str	r0, [sp, #4]
   130d4:	ldr	r0, [fp, #16]
   130d8:	str	r0, [sp, #8]
   130dc:	ldr	r0, [sp, #76]	; 0x4c
   130e0:	b	1309c <__mempcpy_chk@plt+0x204c>
   130e4:	mov	r0, #0
   130e8:	str	r0, [fp, #-76]	; 0xffffffb4
   130ec:	ldr	r1, [fp, #-88]	; 0xffffffa8
   130f0:	cmp	r1, #0
   130f4:	beq	1312c <__mempcpy_chk@plt+0x20dc>
   130f8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   130fc:	tst	r0, #1
   13100:	bne	1312c <__mempcpy_chk@plt+0x20dc>
   13104:	ldrb	r0, [r1]
   13108:	cmp	r0, #0
   1310c:	beq	1312c <__mempcpy_chk@plt+0x20dc>
   13110:	add	r1, r1, #1
   13114:	cmp	r8, ip
   13118:	strbcc	r0, [r5, r8]
   1311c:	add	r8, r8, #1
   13120:	ldrb	r0, [r1], #1
   13124:	cmp	r0, #0
   13128:	bne	13114 <__mempcpy_chk@plt+0x20c4>
   1312c:	cmp	r8, ip
   13130:	movcc	r0, #0
   13134:	strbcc	r0, [r5, r8]
   13138:	mov	r0, r8
   1313c:	sub	sp, fp, #28
   13140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13144:	mov	r0, #4
   13148:	b	13068 <__mempcpy_chk@plt+0x2018>
   1314c:	mov	r4, r1
   13150:	b	13058 <__mempcpy_chk@plt+0x2008>
   13154:	bl	11038 <abort@plt>
   13158:	mov	r3, r2
   1315c:	mov	r2, #0
   13160:	b	13164 <__mempcpy_chk@plt+0x2114>
   13164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13168:	add	fp, sp, #28
   1316c:	sub	sp, sp, #36	; 0x24
   13170:	movw	r8, #24928	; 0x6160
   13174:	cmp	r3, #0
   13178:	mov	r4, r2
   1317c:	str	r2, [sp, #24]
   13180:	mov	r5, r1
   13184:	mov	r6, r0
   13188:	str	r0, [sp, #20]
   1318c:	movt	r8, #2
   13190:	movne	r8, r3
   13194:	bl	10f6c <__errno_location@plt>
   13198:	str	r0, [sp, #28]
   1319c:	ldr	r1, [r8, #40]	; 0x28
   131a0:	ldr	r2, [r8, #44]	; 0x2c
   131a4:	ldr	r7, [r0]
   131a8:	cmp	r4, #0
   131ac:	add	sl, r8, #8
   131b0:	mov	r0, #0
   131b4:	ldm	r8, {r3, r9}
   131b8:	orreq	r9, r9, #1
   131bc:	stm	sp, {r3, r9, sl}
   131c0:	str	r1, [sp, #12]
   131c4:	str	r2, [sp, #16]
   131c8:	mov	r1, #0
   131cc:	mov	r2, r6
   131d0:	mov	r3, r5
   131d4:	str	r7, [sp, #32]
   131d8:	mov	r7, r5
   131dc:	bl	120e8 <__mempcpy_chk@plt+0x1098>
   131e0:	add	r4, r0, #1
   131e4:	mov	r5, r0
   131e8:	mov	r0, r4
   131ec:	bl	13edc <__mempcpy_chk@plt+0x2e8c>
   131f0:	mov	r6, r0
   131f4:	ldr	r0, [r8]
   131f8:	ldr	r2, [r8, #44]	; 0x2c
   131fc:	ldr	r1, [r8, #40]	; 0x28
   13200:	mov	r3, r7
   13204:	stm	sp, {r0, r9, sl}
   13208:	str	r2, [sp, #16]
   1320c:	ldr	r2, [sp, #20]
   13210:	str	r1, [sp, #12]
   13214:	mov	r0, r6
   13218:	mov	r1, r4
   1321c:	bl	120e8 <__mempcpy_chk@plt+0x1098>
   13220:	ldr	r0, [sp, #24]
   13224:	ldr	r1, [sp, #32]
   13228:	ldr	r2, [sp, #28]
   1322c:	cmp	r0, #0
   13230:	str	r1, [r2]
   13234:	strne	r5, [r0]
   13238:	mov	r0, r6
   1323c:	sub	sp, fp, #28
   13240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13244:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13248:	add	fp, sp, #24
   1324c:	movw	r5, #24820	; 0x60f4
   13250:	movw	r8, #24816	; 0x60f0
   13254:	movt	r5, #2
   13258:	movt	r8, #2
   1325c:	ldr	r0, [r5]
   13260:	ldr	r4, [r8]
   13264:	cmp	r0, #2
   13268:	blt	13294 <__mempcpy_chk@plt+0x2244>
   1326c:	add	r7, r4, #12
   13270:	mov	r6, #0
   13274:	ldr	r0, [r7, r6, lsl #3]
   13278:	bl	11d18 <__mempcpy_chk@plt+0xcc8>
   1327c:	ldr	r1, [r5]
   13280:	add	r2, r6, #2
   13284:	add	r0, r6, #1
   13288:	mov	r6, r0
   1328c:	cmp	r2, r1
   13290:	blt	13274 <__mempcpy_chk@plt+0x2224>
   13294:	ldr	r0, [r4, #4]
   13298:	movw	r9, #24976	; 0x6190
   1329c:	movw	r7, #24824	; 0x60f8
   132a0:	movt	r9, #2
   132a4:	movt	r7, #2
   132a8:	cmp	r0, r9
   132ac:	beq	132bc <__mempcpy_chk@plt+0x226c>
   132b0:	bl	11d18 <__mempcpy_chk@plt+0xcc8>
   132b4:	mov	r0, #256	; 0x100
   132b8:	stm	r7, {r0, r9}
   132bc:	cmp	r4, r7
   132c0:	beq	132d0 <__mempcpy_chk@plt+0x2280>
   132c4:	mov	r0, r4
   132c8:	bl	11d18 <__mempcpy_chk@plt+0xcc8>
   132cc:	str	r7, [r8]
   132d0:	mov	r0, #1
   132d4:	str	r0, [r5]
   132d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   132dc:	movw	r3, #24928	; 0x6160
   132e0:	mvn	r2, #0
   132e4:	movt	r3, #2
   132e8:	b	132ec <__mempcpy_chk@plt+0x229c>
   132ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132f0:	add	fp, sp, #28
   132f4:	sub	sp, sp, #44	; 0x2c
   132f8:	mov	r7, r3
   132fc:	str	r2, [sp, #36]	; 0x24
   13300:	str	r1, [sp, #32]
   13304:	mov	r5, r0
   13308:	bl	10f6c <__errno_location@plt>
   1330c:	cmp	r5, #0
   13310:	bmi	13480 <__mempcpy_chk@plt+0x2430>
   13314:	cmn	r5, #-2147483647	; 0x80000001
   13318:	beq	13480 <__mempcpy_chk@plt+0x2430>
   1331c:	movw	r8, #24820	; 0x60f4
   13320:	movw	r4, #24816	; 0x60f0
   13324:	str	r0, [sp, #28]
   13328:	ldr	r0, [r0]
   1332c:	movt	r8, #2
   13330:	movt	r4, #2
   13334:	ldr	r1, [r8]
   13338:	ldr	r6, [r4]
   1333c:	str	r0, [sp, #24]
   13340:	cmp	r1, r5
   13344:	ble	13350 <__mempcpy_chk@plt+0x2300>
   13348:	mov	sl, r6
   1334c:	b	133bc <__mempcpy_chk@plt+0x236c>
   13350:	movw	r9, #24824	; 0x60f8
   13354:	mov	r0, #8
   13358:	str	r1, [fp, #-32]	; 0xffffffe0
   1335c:	sub	r1, r5, r1
   13360:	mvn	r3, #-2147483648	; 0x80000000
   13364:	movt	r9, #2
   13368:	str	r0, [sp]
   1336c:	add	r2, r1, #1
   13370:	sub	r1, fp, #32
   13374:	subs	r0, r6, r9
   13378:	movne	r0, r6
   1337c:	bl	1400c <__mempcpy_chk@plt+0x2fbc>
   13380:	mov	sl, r0
   13384:	cmp	r6, r9
   13388:	str	r0, [r4]
   1338c:	bne	13398 <__mempcpy_chk@plt+0x2348>
   13390:	ldrd	r0, [r9]
   13394:	stm	sl, {r0, r1}
   13398:	ldr	r1, [r8]
   1339c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   133a0:	add	r0, sl, r1, lsl #3
   133a4:	sub	r1, r2, r1
   133a8:	lsl	r2, r1, #3
   133ac:	mov	r1, #0
   133b0:	bl	10f84 <memset@plt>
   133b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133b8:	str	r0, [r8]
   133bc:	mov	r9, sl
   133c0:	ldm	r7, {r0, r1}
   133c4:	orr	r8, r1, #1
   133c8:	add	r1, r7, #8
   133cc:	ldr	r2, [r7, #40]	; 0x28
   133d0:	ldr	r3, [r7, #44]	; 0x2c
   133d4:	ldr	r6, [r9, r5, lsl #3]!
   133d8:	str	r1, [sp, #20]
   133dc:	ldr	r4, [r9, #4]!
   133e0:	stm	sp, {r0, r8}
   133e4:	add	r0, sp, #8
   133e8:	stm	r0, {r1, r2, r3}
   133ec:	ldr	r2, [sp, #32]
   133f0:	ldr	r3, [sp, #36]	; 0x24
   133f4:	mov	r1, r6
   133f8:	mov	r0, r4
   133fc:	bl	120e8 <__mempcpy_chk@plt+0x1098>
   13400:	cmp	r6, r0
   13404:	bhi	13468 <__mempcpy_chk@plt+0x2418>
   13408:	add	r6, r0, #1
   1340c:	movw	r0, #24976	; 0x6190
   13410:	movt	r0, #2
   13414:	str	r6, [sl, r5, lsl #3]
   13418:	cmp	r4, r0
   1341c:	beq	13428 <__mempcpy_chk@plt+0x23d8>
   13420:	mov	r0, r4
   13424:	bl	11d18 <__mempcpy_chk@plt+0xcc8>
   13428:	mov	r0, r6
   1342c:	bl	13edc <__mempcpy_chk@plt+0x2e8c>
   13430:	str	r0, [r9]
   13434:	mov	r4, r0
   13438:	add	r3, sp, #8
   1343c:	ldr	r0, [r7]
   13440:	ldr	r1, [r7, #40]	; 0x28
   13444:	ldr	r2, [r7, #44]	; 0x2c
   13448:	stm	sp, {r0, r8}
   1344c:	ldr	r0, [sp, #20]
   13450:	stm	r3, {r0, r1, r2}
   13454:	ldr	r2, [sp, #32]
   13458:	ldr	r3, [sp, #36]	; 0x24
   1345c:	mov	r0, r4
   13460:	mov	r1, r6
   13464:	bl	120e8 <__mempcpy_chk@plt+0x1098>
   13468:	ldr	r0, [sp, #28]
   1346c:	ldr	r1, [sp, #24]
   13470:	str	r1, [r0]
   13474:	mov	r0, r4
   13478:	sub	sp, fp, #28
   1347c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13480:	bl	11038 <abort@plt>
   13484:	movw	r3, #24928	; 0x6160
   13488:	movt	r3, #2
   1348c:	b	132ec <__mempcpy_chk@plt+0x229c>
   13490:	movw	r3, #24928	; 0x6160
   13494:	mov	r1, r0
   13498:	mov	r0, #0
   1349c:	mvn	r2, #0
   134a0:	movt	r3, #2
   134a4:	b	132ec <__mempcpy_chk@plt+0x229c>
   134a8:	movw	r3, #24928	; 0x6160
   134ac:	mov	r2, r1
   134b0:	mov	r1, r0
   134b4:	mov	r0, #0
   134b8:	movt	r3, #2
   134bc:	b	132ec <__mempcpy_chk@plt+0x229c>
   134c0:	push	{fp, lr}
   134c4:	mov	fp, sp
   134c8:	sub	sp, sp, #48	; 0x30
   134cc:	vmov.i32	q8, #0	; 0x00000000
   134d0:	mov	ip, #32
   134d4:	mov	r3, sp
   134d8:	mov	lr, r2
   134dc:	cmp	r1, #10
   134e0:	add	r2, r3, #16
   134e4:	vst1.64	{d16-d17}, [r3], ip
   134e8:	vst1.64	{d16-d17}, [r2]
   134ec:	vst1.64	{d16-d17}, [r3]
   134f0:	beq	13510 <__mempcpy_chk@plt+0x24c0>
   134f4:	str	r1, [sp]
   134f8:	mov	r3, sp
   134fc:	mov	r1, lr
   13500:	mvn	r2, #0
   13504:	bl	132ec <__mempcpy_chk@plt+0x229c>
   13508:	mov	sp, fp
   1350c:	pop	{fp, pc}
   13510:	bl	11038 <abort@plt>
   13514:	push	{r4, sl, fp, lr}
   13518:	add	fp, sp, #8
   1351c:	sub	sp, sp, #48	; 0x30
   13520:	vmov.i32	q8, #0	; 0x00000000
   13524:	mov	ip, r3
   13528:	mov	r3, sp
   1352c:	mov	lr, #32
   13530:	cmp	r1, #10
   13534:	add	r4, r3, #16
   13538:	vst1.64	{d16-d17}, [r3], lr
   1353c:	vst1.64	{d16-d17}, [r4]
   13540:	vst1.64	{d16-d17}, [r3]
   13544:	beq	13564 <__mempcpy_chk@plt+0x2514>
   13548:	str	r1, [sp]
   1354c:	mov	r1, r2
   13550:	mov	r3, sp
   13554:	mov	r2, ip
   13558:	bl	132ec <__mempcpy_chk@plt+0x229c>
   1355c:	sub	sp, fp, #8
   13560:	pop	{r4, sl, fp, pc}
   13564:	bl	11038 <abort@plt>
   13568:	mov	r2, r1
   1356c:	mov	r1, r0
   13570:	mov	r0, #0
   13574:	b	134c0 <__mempcpy_chk@plt+0x2470>
   13578:	mov	r3, r2
   1357c:	mov	r2, r1
   13580:	mov	r1, r0
   13584:	mov	r0, #0
   13588:	b	13514 <__mempcpy_chk@plt+0x24c4>
   1358c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13590:	add	fp, sp, #24
   13594:	sub	sp, sp, #48	; 0x30
   13598:	movw	r8, #24928	; 0x6160
   1359c:	mov	lr, r0
   135a0:	mov	r3, sp
   135a4:	mov	ip, r1
   135a8:	movt	r8, #2
   135ac:	mov	r1, r3
   135b0:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   135b4:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   135b8:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   135bc:	stm	r1, {r0, r4, r5, r6, r7, r9}
   135c0:	ubfx	r0, r2, #5, #3
   135c4:	and	r2, r2, #31
   135c8:	mov	r4, #1
   135cc:	add	r0, r3, r0, lsl #2
   135d0:	ldr	r1, [r0, #8]
   135d4:	bic	r4, r4, r1, lsr r2
   135d8:	eor	r1, r1, r4, lsl r2
   135dc:	mov	r2, ip
   135e0:	str	r1, [r0, #8]
   135e4:	mov	r0, #0
   135e8:	mov	r1, lr
   135ec:	bl	132ec <__mempcpy_chk@plt+0x229c>
   135f0:	sub	sp, fp, #24
   135f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   135f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   135fc:	add	fp, sp, #24
   13600:	sub	sp, sp, #48	; 0x30
   13604:	movw	lr, #24928	; 0x6160
   13608:	mov	ip, r0
   1360c:	mov	r3, sp
   13610:	movt	lr, #2
   13614:	mov	r2, r3
   13618:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   1361c:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   13620:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   13624:	stm	r2, {r0, r4, r5, r6, r7, r8}
   13628:	ubfx	r0, r1, #5, #3
   1362c:	and	r1, r1, #31
   13630:	mov	r7, #1
   13634:	add	r0, r3, r0, lsl #2
   13638:	ldr	r2, [r0, #8]
   1363c:	bic	r7, r7, r2, lsr r1
   13640:	eor	r1, r2, r7, lsl r1
   13644:	mvn	r2, #0
   13648:	str	r1, [r0, #8]
   1364c:	mov	r0, #0
   13650:	mov	r1, ip
   13654:	bl	132ec <__mempcpy_chk@plt+0x229c>
   13658:	sub	sp, fp, #24
   1365c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13660:	push	{r4, r5, r6, r7, fp, lr}
   13664:	add	fp, sp, #16
   13668:	sub	sp, sp, #48	; 0x30
   1366c:	movw	lr, #24928	; 0x6160
   13670:	mov	ip, r0
   13674:	mov	r3, sp
   13678:	movt	lr, #2
   1367c:	mov	r2, r3
   13680:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   13684:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13688:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   1368c:	stm	r2, {r0, r1, r4, r5, r6, r7}
   13690:	mov	r1, ip
   13694:	mvn	r2, #0
   13698:	ldr	r0, [sp, #12]
   1369c:	orr	r0, r0, #67108864	; 0x4000000
   136a0:	str	r0, [sp, #12]
   136a4:	mov	r0, #0
   136a8:	bl	132ec <__mempcpy_chk@plt+0x229c>
   136ac:	sub	sp, fp, #16
   136b0:	pop	{r4, r5, r6, r7, fp, pc}
   136b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   136b8:	add	fp, sp, #24
   136bc:	sub	sp, sp, #48	; 0x30
   136c0:	movw	r8, #24928	; 0x6160
   136c4:	mov	ip, r1
   136c8:	mov	lr, r0
   136cc:	mov	r3, sp
   136d0:	movt	r8, #2
   136d4:	mov	r2, r3
   136d8:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   136dc:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   136e0:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   136e4:	stm	r2, {r0, r1, r4, r5, r6, r7}
   136e8:	mov	r1, lr
   136ec:	mov	r2, ip
   136f0:	ldr	r0, [sp, #12]
   136f4:	orr	r0, r0, #67108864	; 0x4000000
   136f8:	str	r0, [sp, #12]
   136fc:	mov	r0, #0
   13700:	bl	132ec <__mempcpy_chk@plt+0x229c>
   13704:	sub	sp, fp, #24
   13708:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1370c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13710:	add	fp, sp, #24
   13714:	sub	sp, sp, #96	; 0x60
   13718:	vmov.i32	q8, #0	; 0x00000000
   1371c:	mov	lr, sp
   13720:	mov	ip, r2
   13724:	cmp	r1, #10
   13728:	add	r3, lr, #16
   1372c:	mov	r2, lr
   13730:	vst1.64	{d16-d17}, [r3]
   13734:	mov	r3, #28
   13738:	vst1.64	{d16-d17}, [r2], r3
   1373c:	vst1.32	{d16-d17}, [r2]
   13740:	beq	13780 <__mempcpy_chk@plt+0x2730>
   13744:	str	r1, [sp, #48]	; 0x30
   13748:	add	r3, sp, #48	; 0x30
   1374c:	ldm	lr!, {r2, r4, r5, r6, r7}
   13750:	add	r1, r3, #4
   13754:	stmia	r1!, {r2, r4, r5, r6, r7}
   13758:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   1375c:	stm	r1, {r2, r4, r5, r6, r7, r8}
   13760:	mvn	r2, #0
   13764:	ldr	r1, [sp, #60]	; 0x3c
   13768:	orr	r1, r1, #67108864	; 0x4000000
   1376c:	str	r1, [sp, #60]	; 0x3c
   13770:	mov	r1, ip
   13774:	bl	132ec <__mempcpy_chk@plt+0x229c>
   13778:	sub	sp, fp, #24
   1377c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13780:	bl	11038 <abort@plt>
   13784:	push	{fp, lr}
   13788:	mov	fp, sp
   1378c:	sub	sp, sp, #8
   13790:	mvn	ip, #0
   13794:	str	ip, [sp]
   13798:	bl	137a4 <__mempcpy_chk@plt+0x2754>
   1379c:	mov	sp, fp
   137a0:	pop	{fp, pc}
   137a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   137a8:	add	fp, sp, #24
   137ac:	sub	sp, sp, #48	; 0x30
   137b0:	movw	ip, #24928	; 0x6160
   137b4:	mov	lr, r3
   137b8:	mov	r3, sp
   137bc:	cmp	r1, #0
   137c0:	movt	ip, #2
   137c4:	cmpne	r2, #0
   137c8:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   137cc:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   137d0:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   137d4:	stm	r3, {r4, r5, r6, r7, r8, r9}
   137d8:	mov	r3, #10
   137dc:	str	r3, [sp]
   137e0:	bne	137e8 <__mempcpy_chk@plt+0x2798>
   137e4:	bl	11038 <abort@plt>
   137e8:	ldr	ip, [fp, #8]
   137ec:	str	r2, [sp, #44]	; 0x2c
   137f0:	str	r1, [sp, #40]	; 0x28
   137f4:	mov	r3, sp
   137f8:	mov	r1, lr
   137fc:	mov	r2, ip
   13800:	bl	132ec <__mempcpy_chk@plt+0x229c>
   13804:	sub	sp, fp, #24
   13808:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1380c:	push	{fp, lr}
   13810:	mov	fp, sp
   13814:	sub	sp, sp, #8
   13818:	mov	r3, r2
   1381c:	mov	r2, r1
   13820:	mov	r1, r0
   13824:	mvn	r0, #0
   13828:	str	r0, [sp]
   1382c:	mov	r0, #0
   13830:	bl	137a4 <__mempcpy_chk@plt+0x2754>
   13834:	mov	sp, fp
   13838:	pop	{fp, pc}
   1383c:	push	{fp, lr}
   13840:	mov	fp, sp
   13844:	sub	sp, sp, #8
   13848:	mov	ip, r2
   1384c:	mov	r2, r1
   13850:	mov	r1, r0
   13854:	str	r3, [sp]
   13858:	mov	r0, #0
   1385c:	mov	r3, ip
   13860:	bl	137a4 <__mempcpy_chk@plt+0x2754>
   13864:	mov	sp, fp
   13868:	pop	{fp, pc}
   1386c:	movw	r3, #24832	; 0x6100
   13870:	movt	r3, #2
   13874:	b	132ec <__mempcpy_chk@plt+0x229c>
   13878:	movw	r3, #24832	; 0x6100
   1387c:	mov	r2, r1
   13880:	mov	r1, r0
   13884:	mov	r0, #0
   13888:	movt	r3, #2
   1388c:	b	132ec <__mempcpy_chk@plt+0x229c>
   13890:	movw	r3, #24832	; 0x6100
   13894:	mvn	r2, #0
   13898:	movt	r3, #2
   1389c:	b	132ec <__mempcpy_chk@plt+0x229c>
   138a0:	movw	r3, #24832	; 0x6100
   138a4:	mov	r1, r0
   138a8:	mov	r0, #0
   138ac:	mvn	r2, #0
   138b0:	movt	r3, #2
   138b4:	b	132ec <__mempcpy_chk@plt+0x229c>
   138b8:	push	{r4, r5, fp, lr}
   138bc:	add	fp, sp, #8
   138c0:	mov	r5, r0
   138c4:	mov	r4, r1
   138c8:	mov	r0, #0
   138cc:	mov	r2, #5
   138d0:	mov	r1, r5
   138d4:	bl	10e64 <dcgettext@plt>
   138d8:	cmp	r0, r5
   138dc:	popne	{r4, r5, fp, pc}
   138e0:	bl	1468c <__mempcpy_chk@plt+0x363c>
   138e4:	ldrb	r1, [r0]
   138e8:	and	r1, r1, #223	; 0xdf
   138ec:	cmp	r1, #71	; 0x47
   138f0:	beq	13958 <__mempcpy_chk@plt+0x2908>
   138f4:	cmp	r1, #85	; 0x55
   138f8:	bne	139b0 <__mempcpy_chk@plt+0x2960>
   138fc:	ldrb	r1, [r0, #1]
   13900:	and	r1, r1, #223	; 0xdf
   13904:	cmp	r1, #84	; 0x54
   13908:	bne	139b0 <__mempcpy_chk@plt+0x2960>
   1390c:	ldrb	r1, [r0, #2]
   13910:	and	r1, r1, #223	; 0xdf
   13914:	cmp	r1, #70	; 0x46
   13918:	bne	139b0 <__mempcpy_chk@plt+0x2960>
   1391c:	ldrb	r1, [r0, #3]
   13920:	cmp	r1, #45	; 0x2d
   13924:	bne	139b0 <__mempcpy_chk@plt+0x2960>
   13928:	ldrb	r1, [r0, #4]
   1392c:	cmp	r1, #56	; 0x38
   13930:	bne	139b0 <__mempcpy_chk@plt+0x2960>
   13934:	ldrb	r0, [r0, #5]
   13938:	cmp	r0, #0
   1393c:	bne	139b0 <__mempcpy_chk@plt+0x2960>
   13940:	ldrb	r1, [r5]
   13944:	movw	r2, #20332	; 0x4f6c
   13948:	movw	r0, #20336	; 0x4f70
   1394c:	movt	r2, #1
   13950:	movt	r0, #1
   13954:	b	139e0 <__mempcpy_chk@plt+0x2990>
   13958:	ldrb	r1, [r0, #1]
   1395c:	and	r1, r1, #223	; 0xdf
   13960:	cmp	r1, #66	; 0x42
   13964:	bne	139b0 <__mempcpy_chk@plt+0x2960>
   13968:	ldrb	r1, [r0, #2]
   1396c:	cmp	r1, #49	; 0x31
   13970:	bne	139b0 <__mempcpy_chk@plt+0x2960>
   13974:	ldrb	r1, [r0, #3]
   13978:	cmp	r1, #56	; 0x38
   1397c:	bne	139b0 <__mempcpy_chk@plt+0x2960>
   13980:	ldrb	r1, [r0, #4]
   13984:	cmp	r1, #48	; 0x30
   13988:	bne	139b0 <__mempcpy_chk@plt+0x2960>
   1398c:	ldrb	r1, [r0, #5]
   13990:	cmp	r1, #51	; 0x33
   13994:	bne	139b0 <__mempcpy_chk@plt+0x2960>
   13998:	ldrb	r1, [r0, #6]
   1399c:	cmp	r1, #48	; 0x30
   139a0:	bne	139b0 <__mempcpy_chk@plt+0x2960>
   139a4:	ldrb	r0, [r0, #7]
   139a8:	cmp	r0, #0
   139ac:	beq	139cc <__mempcpy_chk@plt+0x297c>
   139b0:	movw	r1, #20326	; 0x4f66
   139b4:	movw	r0, #20330	; 0x4f6a
   139b8:	cmp	r4, #9
   139bc:	movt	r1, #1
   139c0:	movt	r0, #1
   139c4:	moveq	r0, r1
   139c8:	pop	{r4, r5, fp, pc}
   139cc:	ldrb	r1, [r5]
   139d0:	movw	r2, #20340	; 0x4f74
   139d4:	movw	r0, #20344	; 0x4f78
   139d8:	movt	r2, #1
   139dc:	movt	r0, #1
   139e0:	cmp	r1, #96	; 0x60
   139e4:	moveq	r0, r2
   139e8:	pop	{r4, r5, fp, pc}
   139ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139f0:	add	fp, sp, #24
   139f4:	sub	sp, sp, #32
   139f8:	ldr	r6, [fp, #12]
   139fc:	ldr	r7, [fp, #8]
   13a00:	mov	r4, r2
   13a04:	mov	r8, r0
   13a08:	cmp	r1, #0
   13a0c:	beq	13a34 <__mempcpy_chk@plt+0x29e4>
   13a10:	movw	r2, #20432	; 0x4fd0
   13a14:	mov	r5, r1
   13a18:	str	r3, [sp, #4]
   13a1c:	str	r4, [sp]
   13a20:	mov	r0, r8
   13a24:	mov	r1, #1
   13a28:	movt	r2, #1
   13a2c:	mov	r3, r5
   13a30:	b	13a4c <__mempcpy_chk@plt+0x29fc>
   13a34:	movw	r2, #20444	; 0x4fdc
   13a38:	str	r3, [sp]
   13a3c:	mov	r0, r8
   13a40:	mov	r1, #1
   13a44:	mov	r3, r4
   13a48:	movt	r2, #1
   13a4c:	bl	10fa8 <__fprintf_chk@plt>
   13a50:	movw	r1, #20451	; 0x4fe3
   13a54:	mov	r0, #0
   13a58:	mov	r2, #5
   13a5c:	movt	r1, #1
   13a60:	bl	10e64 <dcgettext@plt>
   13a64:	movw	r2, #21169	; 0x52b1
   13a68:	mov	r3, r0
   13a6c:	movw	r0, #2022	; 0x7e6
   13a70:	mov	r1, #1
   13a74:	movt	r2, #1
   13a78:	str	r0, [sp]
   13a7c:	mov	r0, r8
   13a80:	bl	10fa8 <__fprintf_chk@plt>
   13a84:	movw	r4, #18790	; 0x4966
   13a88:	mov	r1, r8
   13a8c:	movt	r4, #1
   13a90:	mov	r0, r4
   13a94:	bl	10df8 <fputs_unlocked@plt>
   13a98:	movw	r1, #20455	; 0x4fe7
   13a9c:	mov	r0, #0
   13aa0:	mov	r2, #5
   13aa4:	movt	r1, #1
   13aa8:	bl	10e64 <dcgettext@plt>
   13aac:	movw	r3, #20626	; 0x5092
   13ab0:	mov	r2, r0
   13ab4:	mov	r0, r8
   13ab8:	mov	r1, #1
   13abc:	movt	r3, #1
   13ac0:	bl	10fa8 <__fprintf_chk@plt>
   13ac4:	mov	r0, r4
   13ac8:	mov	r1, r8
   13acc:	bl	10df8 <fputs_unlocked@plt>
   13ad0:	cmp	r6, #9
   13ad4:	bhi	13b38 <__mempcpy_chk@plt+0x2ae8>
   13ad8:	add	r0, pc, #0
   13adc:	ldr	pc, [r0, r6, lsl #2]
   13ae0:	andeq	r3, r1, r0, lsl sp
   13ae4:	andeq	r3, r1, r8, lsl #22
   13ae8:	andeq	r3, r1, r4, asr #22
   13aec:	andeq	r3, r1, ip, ror #22
   13af0:	muleq	r1, r4, fp
   13af4:			; <UNDEFINED> instruction: 0x00013bbc
   13af8:	andeq	r3, r1, r4, ror #23
   13afc:	andeq	r3, r1, ip, lsl ip
   13b00:			; <UNDEFINED> instruction: 0x00013cbc
   13b04:	andeq	r3, r1, r4, ror #24
   13b08:	movw	r1, #20660	; 0x50b4
   13b0c:	mov	r0, #0
   13b10:	mov	r2, #5
   13b14:	movt	r1, #1
   13b18:	bl	10e64 <dcgettext@plt>
   13b1c:	ldr	r3, [r7]
   13b20:	mov	r2, r0
   13b24:	mov	r0, r8
   13b28:	mov	r1, #1
   13b2c:	sub	sp, fp, #24
   13b30:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b34:	b	10fa8 <__fprintf_chk@plt>
   13b38:	movw	r1, #20979	; 0x51f3
   13b3c:	movt	r1, #1
   13b40:	b	13c6c <__mempcpy_chk@plt+0x2c1c>
   13b44:	movw	r1, #20676	; 0x50c4
   13b48:	mov	r0, #0
   13b4c:	mov	r2, #5
   13b50:	movt	r1, #1
   13b54:	bl	10e64 <dcgettext@plt>
   13b58:	mov	r2, r0
   13b5c:	ldr	r3, [r7]
   13b60:	ldr	r0, [r7, #4]
   13b64:	str	r0, [sp]
   13b68:	b	13c58 <__mempcpy_chk@plt+0x2c08>
   13b6c:	movw	r1, #20699	; 0x50db
   13b70:	mov	r0, #0
   13b74:	mov	r2, #5
   13b78:	movt	r1, #1
   13b7c:	bl	10e64 <dcgettext@plt>
   13b80:	mov	r2, r0
   13b84:	ldr	r3, [r7]
   13b88:	ldmib	r7, {r0, r1}
   13b8c:	stm	sp, {r0, r1}
   13b90:	b	13c58 <__mempcpy_chk@plt+0x2c08>
   13b94:	movw	r1, #20727	; 0x50f7
   13b98:	mov	r0, #0
   13b9c:	mov	r2, #5
   13ba0:	movt	r1, #1
   13ba4:	bl	10e64 <dcgettext@plt>
   13ba8:	ldr	r3, [r7]
   13bac:	mov	r2, r0
   13bb0:	ldmib	r7, {r0, r1, r7}
   13bb4:	stm	sp, {r0, r1, r7}
   13bb8:	b	13c58 <__mempcpy_chk@plt+0x2c08>
   13bbc:	movw	r1, #20759	; 0x5117
   13bc0:	mov	r0, #0
   13bc4:	mov	r2, #5
   13bc8:	movt	r1, #1
   13bcc:	bl	10e64 <dcgettext@plt>
   13bd0:	ldr	r3, [r7]
   13bd4:	mov	r2, r0
   13bd8:	ldmib	r7, {r0, r1, r6, r7}
   13bdc:	stm	sp, {r0, r1, r6, r7}
   13be0:	b	13c58 <__mempcpy_chk@plt+0x2c08>
   13be4:	movw	r1, #20795	; 0x513b
   13be8:	mov	r0, #0
   13bec:	mov	r2, #5
   13bf0:	movt	r1, #1
   13bf4:	bl	10e64 <dcgettext@plt>
   13bf8:	mov	r2, r0
   13bfc:	ldr	r3, [r7]
   13c00:	ldmib	r7, {r0, r1, r6}
   13c04:	ldr	r5, [r7, #16]
   13c08:	ldr	r7, [r7, #20]
   13c0c:	stm	sp, {r0, r1, r6}
   13c10:	str	r5, [sp, #12]
   13c14:	str	r7, [sp, #16]
   13c18:	b	13c58 <__mempcpy_chk@plt+0x2c08>
   13c1c:	movw	r1, #20835	; 0x5163
   13c20:	mov	r0, #0
   13c24:	mov	r2, #5
   13c28:	movt	r1, #1
   13c2c:	bl	10e64 <dcgettext@plt>
   13c30:	mov	r2, r0
   13c34:	ldr	r3, [r7]
   13c38:	ldmib	r7, {r0, r1, r6}
   13c3c:	ldr	r5, [r7, #16]
   13c40:	ldr	r4, [r7, #20]
   13c44:	ldr	r7, [r7, #24]
   13c48:	stm	sp, {r0, r1, r6}
   13c4c:	str	r5, [sp, #12]
   13c50:	str	r4, [sp, #16]
   13c54:	str	r7, [sp, #20]
   13c58:	mov	r0, r8
   13c5c:	mov	r1, #1
   13c60:	b	13d0c <__mempcpy_chk@plt+0x2cbc>
   13c64:	movw	r1, #20927	; 0x51bf
   13c68:	movt	r1, #1
   13c6c:	mov	r0, #0
   13c70:	mov	r2, #5
   13c74:	bl	10e64 <dcgettext@plt>
   13c78:	mov	ip, r0
   13c7c:	ldr	r3, [r7]
   13c80:	ldr	r0, [r7, #4]
   13c84:	ldr	r1, [r7, #8]
   13c88:	ldr	r6, [r7, #12]
   13c8c:	ldr	r5, [r7, #16]
   13c90:	ldr	r4, [r7, #20]
   13c94:	ldr	r2, [r7, #24]
   13c98:	ldr	lr, [r7, #28]
   13c9c:	ldr	r7, [r7, #32]
   13ca0:	stm	sp, {r0, r1, r6}
   13ca4:	str	r5, [sp, #12]
   13ca8:	str	r4, [sp, #16]
   13cac:	str	r2, [sp, #20]
   13cb0:	str	lr, [sp, #24]
   13cb4:	str	r7, [sp, #28]
   13cb8:	b	13d00 <__mempcpy_chk@plt+0x2cb0>
   13cbc:	movw	r1, #20879	; 0x518f
   13cc0:	mov	r0, #0
   13cc4:	mov	r2, #5
   13cc8:	movt	r1, #1
   13ccc:	bl	10e64 <dcgettext@plt>
   13cd0:	mov	ip, r0
   13cd4:	ldr	r3, [r7]
   13cd8:	ldmib	r7, {r0, r1, r6}
   13cdc:	ldr	r5, [r7, #16]
   13ce0:	ldr	r4, [r7, #20]
   13ce4:	ldr	r2, [r7, #24]
   13ce8:	ldr	r7, [r7, #28]
   13cec:	stm	sp, {r0, r1, r6}
   13cf0:	str	r5, [sp, #12]
   13cf4:	str	r4, [sp, #16]
   13cf8:	str	r2, [sp, #20]
   13cfc:	str	r7, [sp, #24]
   13d00:	mov	r0, r8
   13d04:	mov	r1, #1
   13d08:	mov	r2, ip
   13d0c:	bl	10fa8 <__fprintf_chk@plt>
   13d10:	sub	sp, fp, #24
   13d14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13d18:	push	{r4, sl, fp, lr}
   13d1c:	add	fp, sp, #8
   13d20:	sub	sp, sp, #8
   13d24:	ldr	ip, [fp, #8]
   13d28:	mov	lr, #0
   13d2c:	ldr	r4, [ip, lr, lsl #2]
   13d30:	add	lr, lr, #1
   13d34:	cmp	r4, #0
   13d38:	bne	13d2c <__mempcpy_chk@plt+0x2cdc>
   13d3c:	sub	r4, lr, #1
   13d40:	str	ip, [sp]
   13d44:	str	r4, [sp, #4]
   13d48:	bl	139ec <__mempcpy_chk@plt+0x299c>
   13d4c:	sub	sp, fp, #8
   13d50:	pop	{r4, sl, fp, pc}
   13d54:	push	{r4, r5, fp, lr}
   13d58:	add	fp, sp, #8
   13d5c:	sub	sp, sp, #48	; 0x30
   13d60:	ldr	r4, [fp, #8]
   13d64:	mov	ip, #0
   13d68:	add	lr, sp, #8
   13d6c:	ldr	r5, [r4]
   13d70:	cmp	r5, #0
   13d74:	str	r5, [lr, ip, lsl #2]
   13d78:	beq	13d90 <__mempcpy_chk@plt+0x2d40>
   13d7c:	add	ip, ip, #1
   13d80:	add	r4, r4, #4
   13d84:	cmp	ip, #10
   13d88:	bne	13d6c <__mempcpy_chk@plt+0x2d1c>
   13d8c:	mov	ip, #10
   13d90:	str	lr, [sp]
   13d94:	str	ip, [sp, #4]
   13d98:	bl	139ec <__mempcpy_chk@plt+0x299c>
   13d9c:	sub	sp, fp, #8
   13da0:	pop	{r4, r5, fp, pc}
   13da4:	push	{fp, lr}
   13da8:	mov	fp, sp
   13dac:	sub	sp, sp, #8
   13db0:	add	ip, fp, #8
   13db4:	str	ip, [sp, #4]
   13db8:	str	ip, [sp]
   13dbc:	bl	13d54 <__mempcpy_chk@plt+0x2d04>
   13dc0:	mov	sp, fp
   13dc4:	pop	{fp, pc}
   13dc8:	push	{fp, lr}
   13dcc:	mov	fp, sp
   13dd0:	movw	r0, #24900	; 0x6144
   13dd4:	movt	r0, #2
   13dd8:	ldr	r1, [r0]
   13ddc:	movw	r0, #18790	; 0x4966
   13de0:	movt	r0, #1
   13de4:	bl	10df8 <fputs_unlocked@plt>
   13de8:	movw	r1, #21039	; 0x522f
   13dec:	mov	r0, #0
   13df0:	mov	r2, #5
   13df4:	movt	r1, #1
   13df8:	bl	10e64 <dcgettext@plt>
   13dfc:	movw	r2, #21059	; 0x5243
   13e00:	mov	r1, r0
   13e04:	mov	r0, #1
   13e08:	movt	r2, #1
   13e0c:	bl	10f90 <__printf_chk@plt>
   13e10:	movw	r1, #21081	; 0x5259
   13e14:	mov	r0, #0
   13e18:	mov	r2, #5
   13e1c:	movt	r1, #1
   13e20:	bl	10e64 <dcgettext@plt>
   13e24:	movw	r2, #19419	; 0x4bdb
   13e28:	movw	r3, #19828	; 0x4d74
   13e2c:	mov	r1, r0
   13e30:	mov	r0, #1
   13e34:	movt	r2, #1
   13e38:	movt	r3, #1
   13e3c:	bl	10f90 <__printf_chk@plt>
   13e40:	movw	r1, #21101	; 0x526d
   13e44:	mov	r0, #0
   13e48:	mov	r2, #5
   13e4c:	movt	r1, #1
   13e50:	bl	10e64 <dcgettext@plt>
   13e54:	movw	r2, #21140	; 0x5294
   13e58:	mov	r1, r0
   13e5c:	mov	r0, #1
   13e60:	movt	r2, #1
   13e64:	pop	{fp, lr}
   13e68:	b	10f90 <__printf_chk@plt>
   13e6c:	b	13e70 <__mempcpy_chk@plt+0x2e20>
   13e70:	push	{r4, r5, r6, sl, fp, lr}
   13e74:	add	fp, sp, #16
   13e78:	mov	r4, r2
   13e7c:	mov	r5, r1
   13e80:	mov	r6, r0
   13e84:	bl	14728 <__mempcpy_chk@plt+0x36d8>
   13e88:	cmp	r0, #0
   13e8c:	popne	{r4, r5, r6, sl, fp, pc}
   13e90:	cmp	r6, #0
   13e94:	beq	13ea8 <__mempcpy_chk@plt+0x2e58>
   13e98:	cmp	r5, #0
   13e9c:	cmpne	r4, #0
   13ea0:	bne	13ea8 <__mempcpy_chk@plt+0x2e58>
   13ea4:	pop	{r4, r5, r6, sl, fp, pc}
   13ea8:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   13eac:	push	{fp, lr}
   13eb0:	mov	fp, sp
   13eb4:	bl	14370 <__mempcpy_chk@plt+0x3320>
   13eb8:	cmp	r0, #0
   13ebc:	popne	{fp, pc}
   13ec0:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   13ec4:	push	{fp, lr}
   13ec8:	mov	fp, sp
   13ecc:	bl	14370 <__mempcpy_chk@plt+0x3320>
   13ed0:	cmp	r0, #0
   13ed4:	popne	{fp, pc}
   13ed8:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   13edc:	push	{fp, lr}
   13ee0:	mov	fp, sp
   13ee4:	bl	14370 <__mempcpy_chk@plt+0x3320>
   13ee8:	cmp	r0, #0
   13eec:	popne	{fp, pc}
   13ef0:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   13ef4:	push	{r4, r5, fp, lr}
   13ef8:	add	fp, sp, #8
   13efc:	mov	r4, r1
   13f00:	mov	r5, r0
   13f04:	bl	143a0 <__mempcpy_chk@plt+0x3350>
   13f08:	cmp	r0, #0
   13f0c:	popne	{r4, r5, fp, pc}
   13f10:	cmp	r5, #0
   13f14:	beq	13f24 <__mempcpy_chk@plt+0x2ed4>
   13f18:	cmp	r4, #0
   13f1c:	bne	13f24 <__mempcpy_chk@plt+0x2ed4>
   13f20:	pop	{r4, r5, fp, pc}
   13f24:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   13f28:	push	{fp, lr}
   13f2c:	mov	fp, sp
   13f30:	cmp	r1, #0
   13f34:	orreq	r1, r1, #1
   13f38:	bl	143a0 <__mempcpy_chk@plt+0x3350>
   13f3c:	cmp	r0, #0
   13f40:	popne	{fp, pc}
   13f44:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   13f48:	push	{fp, lr}
   13f4c:	mov	fp, sp
   13f50:	clz	r3, r2
   13f54:	lsr	ip, r3, #5
   13f58:	clz	r3, r1
   13f5c:	lsr	r3, r3, #5
   13f60:	orrs	r3, r3, ip
   13f64:	movwne	r1, #1
   13f68:	movwne	r2, #1
   13f6c:	bl	14728 <__mempcpy_chk@plt+0x36d8>
   13f70:	cmp	r0, #0
   13f74:	popne	{fp, pc}
   13f78:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   13f7c:	push	{fp, lr}
   13f80:	mov	fp, sp
   13f84:	mov	r2, r1
   13f88:	mov	r1, r0
   13f8c:	mov	r0, #0
   13f90:	bl	14728 <__mempcpy_chk@plt+0x36d8>
   13f94:	cmp	r0, #0
   13f98:	popne	{fp, pc}
   13f9c:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   13fa0:	mov	r2, r1
   13fa4:	mov	r1, r0
   13fa8:	mov	r0, #0
   13fac:	b	13f48 <__mempcpy_chk@plt+0x2ef8>
   13fb0:	mov	r2, #1
   13fb4:	b	13fb8 <__mempcpy_chk@plt+0x2f68>
   13fb8:	push	{r4, r5, fp, lr}
   13fbc:	add	fp, sp, #8
   13fc0:	ldr	r5, [r1]
   13fc4:	mov	r4, r1
   13fc8:	cmp	r0, #0
   13fcc:	beq	13fe4 <__mempcpy_chk@plt+0x2f94>
   13fd0:	mov	r1, #1
   13fd4:	add	r1, r1, r5, lsr #1
   13fd8:	adds	r5, r5, r1
   13fdc:	bcc	13ffc <__mempcpy_chk@plt+0x2fac>
   13fe0:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   13fe4:	cmp	r5, #0
   13fe8:	bne	13ffc <__mempcpy_chk@plt+0x2fac>
   13fec:	mov	r1, #64	; 0x40
   13ff0:	cmp	r2, #64	; 0x40
   13ff4:	udiv	r5, r1, r2
   13ff8:	addhi	r5, r5, #1
   13ffc:	mov	r1, r5
   14000:	bl	13e70 <__mempcpy_chk@plt+0x2e20>
   14004:	str	r5, [r4]
   14008:	pop	{r4, r5, fp, pc}
   1400c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14010:	add	fp, sp, #24
   14014:	ldr	r6, [r1]
   14018:	mov	r8, r1
   1401c:	ldr	r4, [fp, #8]
   14020:	add	r1, r6, r6, asr #1
   14024:	cmp	r1, r6
   14028:	mvnvs	r1, #-2147483648	; 0x80000000
   1402c:	cmp	r1, r3
   14030:	mov	r5, r1
   14034:	movgt	r5, r3
   14038:	cmn	r3, #1
   1403c:	movle	r5, r1
   14040:	cmn	r4, #1
   14044:	ble	14064 <__mempcpy_chk@plt+0x3014>
   14048:	cmp	r4, #0
   1404c:	beq	140b8 <__mempcpy_chk@plt+0x3068>
   14050:	cmn	r5, #1
   14054:	ble	1408c <__mempcpy_chk@plt+0x303c>
   14058:	mvn	r7, #-2147483648	; 0x80000000
   1405c:	udiv	r1, r7, r4
   14060:	b	14080 <__mempcpy_chk@plt+0x3030>
   14064:	cmn	r5, #1
   14068:	ble	140a8 <__mempcpy_chk@plt+0x3058>
   1406c:	cmn	r4, #1
   14070:	beq	140b8 <__mempcpy_chk@plt+0x3068>
   14074:	mov	r1, #-2147483648	; 0x80000000
   14078:	mvn	r7, #-2147483648	; 0x80000000
   1407c:	sdiv	r1, r1, r4
   14080:	cmp	r1, r5
   14084:	bge	140b8 <__mempcpy_chk@plt+0x3068>
   14088:	b	140c8 <__mempcpy_chk@plt+0x3078>
   1408c:	beq	140b8 <__mempcpy_chk@plt+0x3068>
   14090:	mov	r1, #-2147483648	; 0x80000000
   14094:	mvn	r7, #-2147483648	; 0x80000000
   14098:	sdiv	r1, r1, r5
   1409c:	cmp	r1, r4
   140a0:	bge	140b8 <__mempcpy_chk@plt+0x3068>
   140a4:	b	140c8 <__mempcpy_chk@plt+0x3078>
   140a8:	mvn	r7, #-2147483648	; 0x80000000
   140ac:	sdiv	r1, r7, r4
   140b0:	cmp	r5, r1
   140b4:	blt	140c8 <__mempcpy_chk@plt+0x3078>
   140b8:	mul	r1, r5, r4
   140bc:	mov	r7, #64	; 0x40
   140c0:	cmp	r1, #63	; 0x3f
   140c4:	bgt	140d0 <__mempcpy_chk@plt+0x3080>
   140c8:	sdiv	r5, r7, r4
   140cc:	mul	r1, r5, r4
   140d0:	cmp	r0, #0
   140d4:	moveq	r7, #0
   140d8:	streq	r7, [r8]
   140dc:	sub	r7, r5, r6
   140e0:	cmp	r7, r2
   140e4:	bge	14188 <__mempcpy_chk@plt+0x3138>
   140e8:	add	r5, r6, r2
   140ec:	mov	r2, #0
   140f0:	mov	r1, #0
   140f4:	cmp	r5, r3
   140f8:	movwgt	r2, #1
   140fc:	cmn	r3, #1
   14100:	movwgt	r1, #1
   14104:	cmp	r5, r6
   14108:	bvs	14170 <__mempcpy_chk@plt+0x3120>
   1410c:	ands	r1, r1, r2
   14110:	bne	14170 <__mempcpy_chk@plt+0x3120>
   14114:	cmn	r4, #1
   14118:	ble	14138 <__mempcpy_chk@plt+0x30e8>
   1411c:	cmp	r4, #0
   14120:	beq	14184 <__mempcpy_chk@plt+0x3134>
   14124:	cmn	r5, #1
   14128:	ble	1415c <__mempcpy_chk@plt+0x310c>
   1412c:	mvn	r1, #-2147483648	; 0x80000000
   14130:	udiv	r1, r1, r4
   14134:	b	14150 <__mempcpy_chk@plt+0x3100>
   14138:	cmn	r5, #1
   1413c:	ble	14174 <__mempcpy_chk@plt+0x3124>
   14140:	cmn	r4, #1
   14144:	beq	14184 <__mempcpy_chk@plt+0x3134>
   14148:	mov	r1, #-2147483648	; 0x80000000
   1414c:	sdiv	r1, r1, r4
   14150:	cmp	r1, r5
   14154:	bge	14184 <__mempcpy_chk@plt+0x3134>
   14158:	b	14170 <__mempcpy_chk@plt+0x3120>
   1415c:	beq	14184 <__mempcpy_chk@plt+0x3134>
   14160:	mov	r1, #-2147483648	; 0x80000000
   14164:	sdiv	r1, r1, r5
   14168:	cmp	r1, r4
   1416c:	bge	14184 <__mempcpy_chk@plt+0x3134>
   14170:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   14174:	mvn	r1, #-2147483648	; 0x80000000
   14178:	sdiv	r1, r1, r4
   1417c:	cmp	r5, r1
   14180:	blt	14170 <__mempcpy_chk@plt+0x3120>
   14184:	mul	r1, r5, r4
   14188:	bl	13ef4 <__mempcpy_chk@plt+0x2ea4>
   1418c:	str	r5, [r8]
   14190:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14194:	push	{fp, lr}
   14198:	mov	fp, sp
   1419c:	mov	r1, #1
   141a0:	bl	1431c <__mempcpy_chk@plt+0x32cc>
   141a4:	cmp	r0, #0
   141a8:	popne	{fp, pc}
   141ac:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   141b0:	push	{fp, lr}
   141b4:	mov	fp, sp
   141b8:	bl	1431c <__mempcpy_chk@plt+0x32cc>
   141bc:	cmp	r0, #0
   141c0:	popne	{fp, pc}
   141c4:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   141c8:	push	{fp, lr}
   141cc:	mov	fp, sp
   141d0:	mov	r1, #1
   141d4:	bl	1431c <__mempcpy_chk@plt+0x32cc>
   141d8:	cmp	r0, #0
   141dc:	popne	{fp, pc}
   141e0:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   141e4:	push	{fp, lr}
   141e8:	mov	fp, sp
   141ec:	bl	1431c <__mempcpy_chk@plt+0x32cc>
   141f0:	cmp	r0, #0
   141f4:	popne	{fp, pc}
   141f8:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   141fc:	push	{r4, r5, fp, lr}
   14200:	add	fp, sp, #8
   14204:	mov	r5, r0
   14208:	mov	r0, r1
   1420c:	mov	r4, r1
   14210:	bl	14370 <__mempcpy_chk@plt+0x3320>
   14214:	cmp	r0, #0
   14218:	beq	1422c <__mempcpy_chk@plt+0x31dc>
   1421c:	mov	r1, r5
   14220:	mov	r2, r4
   14224:	pop	{r4, r5, fp, lr}
   14228:	b	10e34 <memcpy@plt>
   1422c:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   14230:	push	{r4, r5, fp, lr}
   14234:	add	fp, sp, #8
   14238:	mov	r5, r0
   1423c:	mov	r0, r1
   14240:	mov	r4, r1
   14244:	bl	14370 <__mempcpy_chk@plt+0x3320>
   14248:	cmp	r0, #0
   1424c:	beq	14260 <__mempcpy_chk@plt+0x3210>
   14250:	mov	r1, r5
   14254:	mov	r2, r4
   14258:	pop	{r4, r5, fp, lr}
   1425c:	b	10e34 <memcpy@plt>
   14260:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   14264:	push	{r4, r5, fp, lr}
   14268:	add	fp, sp, #8
   1426c:	mov	r5, r0
   14270:	add	r0, r1, #1
   14274:	mov	r4, r1
   14278:	bl	14370 <__mempcpy_chk@plt+0x3320>
   1427c:	cmp	r0, #0
   14280:	beq	1429c <__mempcpy_chk@plt+0x324c>
   14284:	mov	r1, #0
   14288:	mov	r2, r4
   1428c:	strb	r1, [r0, r4]
   14290:	mov	r1, r5
   14294:	pop	{r4, r5, fp, lr}
   14298:	b	10e34 <memcpy@plt>
   1429c:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   142a0:	push	{r4, r5, fp, lr}
   142a4:	add	fp, sp, #8
   142a8:	mov	r4, r0
   142ac:	bl	10f60 <strlen@plt>
   142b0:	add	r5, r0, #1
   142b4:	mov	r0, r5
   142b8:	bl	14370 <__mempcpy_chk@plt+0x3320>
   142bc:	cmp	r0, #0
   142c0:	beq	142d4 <__mempcpy_chk@plt+0x3284>
   142c4:	mov	r1, r4
   142c8:	mov	r2, r5
   142cc:	pop	{r4, r5, fp, lr}
   142d0:	b	10e34 <memcpy@plt>
   142d4:	bl	142d8 <__mempcpy_chk@plt+0x3288>
   142d8:	push	{fp, lr}
   142dc:	mov	fp, sp
   142e0:	movw	r0, #24812	; 0x60ec
   142e4:	movw	r1, #21216	; 0x52e0
   142e8:	mov	r2, #5
   142ec:	movt	r0, #2
   142f0:	movt	r1, #1
   142f4:	ldr	r4, [r0]
   142f8:	mov	r0, #0
   142fc:	bl	10e64 <dcgettext@plt>
   14300:	movw	r2, #20111	; 0x4e8f
   14304:	mov	r3, r0
   14308:	mov	r0, r4
   1430c:	mov	r1, #0
   14310:	movt	r2, #1
   14314:	bl	10edc <error@plt>
   14318:	bl	11038 <abort@plt>
   1431c:	clz	r2, r1
   14320:	clz	r3, r0
   14324:	lsr	r2, r2, #5
   14328:	lsr	r3, r3, #5
   1432c:	orrs	r2, r3, r2
   14330:	movwne	r1, #1
   14334:	movwne	r0, #1
   14338:	cmp	r1, #0
   1433c:	beq	1436c <__mempcpy_chk@plt+0x331c>
   14340:	mvn	r2, #-2147483648	; 0x80000000
   14344:	udiv	r2, r2, r1
   14348:	cmp	r2, r0
   1434c:	bcs	1436c <__mempcpy_chk@plt+0x331c>
   14350:	push	{fp, lr}
   14354:	mov	fp, sp
   14358:	bl	10f6c <__errno_location@plt>
   1435c:	mov	r1, #12
   14360:	str	r1, [r0]
   14364:	mov	r0, #0
   14368:	pop	{fp, pc}
   1436c:	b	10dec <calloc@plt>
   14370:	cmp	r0, #0
   14374:	movweq	r0, #1
   14378:	cmn	r0, #1
   1437c:	ble	14384 <__mempcpy_chk@plt+0x3334>
   14380:	b	10f00 <malloc@plt>
   14384:	push	{fp, lr}
   14388:	mov	fp, sp
   1438c:	bl	10f6c <__errno_location@plt>
   14390:	mov	r1, #12
   14394:	str	r1, [r0]
   14398:	mov	r0, #0
   1439c:	pop	{fp, pc}
   143a0:	push	{fp, lr}
   143a4:	mov	fp, sp
   143a8:	cmp	r0, #0
   143ac:	beq	143c8 <__mempcpy_chk@plt+0x3378>
   143b0:	cmp	r1, #0
   143b4:	beq	143d4 <__mempcpy_chk@plt+0x3384>
   143b8:	cmn	r1, #1
   143bc:	ble	143dc <__mempcpy_chk@plt+0x338c>
   143c0:	pop	{fp, lr}
   143c4:	b	10e7c <realloc@plt>
   143c8:	mov	r0, r1
   143cc:	pop	{fp, lr}
   143d0:	b	14370 <__mempcpy_chk@plt+0x3320>
   143d4:	bl	11d18 <__mempcpy_chk@plt+0xcc8>
   143d8:	b	143e8 <__mempcpy_chk@plt+0x3398>
   143dc:	bl	10f6c <__errno_location@plt>
   143e0:	mov	r1, #12
   143e4:	str	r1, [r0]
   143e8:	mov	r0, #0
   143ec:	pop	{fp, pc}
   143f0:	sub	r0, r0, #1
   143f4:	ldrb	r3, [r0, #1]!
   143f8:	cmp	r3, #47	; 0x2f
   143fc:	beq	143f4 <__mempcpy_chk@plt+0x33a4>
   14400:	mov	r2, #0
   14404:	mov	r1, r0
   14408:	uxtb	r3, r3
   1440c:	cmp	r3, #47	; 0x2f
   14410:	beq	1442c <__mempcpy_chk@plt+0x33dc>
   14414:	cmp	r3, #0
   14418:	bxeq	lr
   1441c:	tst	r2, #1
   14420:	mov	r2, #0
   14424:	movne	r0, r1
   14428:	b	14430 <__mempcpy_chk@plt+0x33e0>
   1442c:	mov	r2, #1
   14430:	ldrb	r3, [r1, #1]!
   14434:	b	14408 <__mempcpy_chk@plt+0x33b8>
   14438:	push	{r4, sl, fp, lr}
   1443c:	add	fp, sp, #8
   14440:	mov	r4, r0
   14444:	bl	10f60 <strlen@plt>
   14448:	mov	r1, r0
   1444c:	sub	r2, r4, #1
   14450:	mov	r0, r1
   14454:	cmp	r1, #2
   14458:	bcc	1446c <__mempcpy_chk@plt+0x341c>
   1445c:	ldrb	r3, [r2, r0]
   14460:	sub	r1, r0, #1
   14464:	cmp	r3, #47	; 0x2f
   14468:	beq	14450 <__mempcpy_chk@plt+0x3400>
   1446c:	pop	{r4, sl, fp, pc}
   14470:	push	{r4, r5, r6, sl, fp, lr}
   14474:	add	fp, sp, #16
   14478:	mov	r4, r0
   1447c:	bl	10eb8 <__fpending@plt>
   14480:	mov	r5, r0
   14484:	mov	r0, r4
   14488:	bl	10ec4 <ferror_unlocked@plt>
   1448c:	mov	r6, r0
   14490:	mov	r0, r4
   14494:	bl	144f0 <__mempcpy_chk@plt+0x34a0>
   14498:	cmp	r6, #0
   1449c:	beq	144bc <__mempcpy_chk@plt+0x346c>
   144a0:	mvn	r4, #0
   144a4:	cmp	r0, #0
   144a8:	bne	144e8 <__mempcpy_chk@plt+0x3498>
   144ac:	bl	10f6c <__errno_location@plt>
   144b0:	mov	r1, #0
   144b4:	str	r1, [r0]
   144b8:	b	144e8 <__mempcpy_chk@plt+0x3498>
   144bc:	cmp	r0, #0
   144c0:	mov	r4, r0
   144c4:	mvnne	r4, #0
   144c8:	cmp	r5, #0
   144cc:	bne	144e8 <__mempcpy_chk@plt+0x3498>
   144d0:	cmp	r0, #0
   144d4:	beq	144e8 <__mempcpy_chk@plt+0x3498>
   144d8:	bl	10f6c <__errno_location@plt>
   144dc:	ldr	r0, [r0]
   144e0:	subs	r4, r0, #9
   144e4:	mvnne	r4, #0
   144e8:	mov	r0, r4
   144ec:	pop	{r4, r5, r6, sl, fp, pc}
   144f0:	push	{r4, r5, r6, sl, fp, lr}
   144f4:	add	fp, sp, #16
   144f8:	sub	sp, sp, #8
   144fc:	mov	r4, r0
   14500:	bl	10f9c <fileno@plt>
   14504:	cmn	r0, #1
   14508:	ble	1457c <__mempcpy_chk@plt+0x352c>
   1450c:	mov	r0, r4
   14510:	bl	10f18 <__freading@plt>
   14514:	cmp	r0, #0
   14518:	beq	14544 <__mempcpy_chk@plt+0x34f4>
   1451c:	mov	r0, r4
   14520:	bl	10f9c <fileno@plt>
   14524:	mov	r1, #1
   14528:	mov	r2, #0
   1452c:	mov	r3, #0
   14530:	str	r1, [sp]
   14534:	bl	10ea0 <lseek64@plt>
   14538:	and	r0, r0, r1
   1453c:	cmn	r0, #1
   14540:	beq	1457c <__mempcpy_chk@plt+0x352c>
   14544:	mov	r0, r4
   14548:	bl	1458c <__mempcpy_chk@plt+0x353c>
   1454c:	cmp	r0, #0
   14550:	beq	1457c <__mempcpy_chk@plt+0x352c>
   14554:	bl	10f6c <__errno_location@plt>
   14558:	ldr	r6, [r0]
   1455c:	mov	r5, r0
   14560:	mov	r0, r4
   14564:	bl	10fb4 <fclose@plt>
   14568:	cmp	r6, #0
   1456c:	strne	r6, [r5]
   14570:	mvnne	r0, #0
   14574:	sub	sp, fp, #16
   14578:	pop	{r4, r5, r6, sl, fp, pc}
   1457c:	mov	r0, r4
   14580:	sub	sp, fp, #16
   14584:	pop	{r4, r5, r6, sl, fp, lr}
   14588:	b	10fb4 <fclose@plt>
   1458c:	push	{r4, sl, fp, lr}
   14590:	add	fp, sp, #8
   14594:	sub	sp, sp, #8
   14598:	mov	r4, r0
   1459c:	cmp	r0, #0
   145a0:	beq	145d8 <__mempcpy_chk@plt+0x3588>
   145a4:	mov	r0, r4
   145a8:	bl	10f18 <__freading@plt>
   145ac:	cmp	r0, #0
   145b0:	beq	145d8 <__mempcpy_chk@plt+0x3588>
   145b4:	ldrb	r0, [r4, #1]
   145b8:	tst	r0, #1
   145bc:	beq	145d8 <__mempcpy_chk@plt+0x3588>
   145c0:	mov	r0, #1
   145c4:	mov	r2, #0
   145c8:	mov	r3, #0
   145cc:	str	r0, [sp]
   145d0:	mov	r0, r4
   145d4:	bl	145e8 <__mempcpy_chk@plt+0x3598>
   145d8:	mov	r0, r4
   145dc:	sub	sp, fp, #8
   145e0:	pop	{r4, sl, fp, lr}
   145e4:	b	10e10 <fflush@plt>
   145e8:	push	{r4, r5, r6, r7, fp, lr}
   145ec:	add	fp, sp, #16
   145f0:	sub	sp, sp, #8
   145f4:	mov	r4, r0
   145f8:	ldr	r0, [r0, #4]
   145fc:	mov	r5, r3
   14600:	mov	r6, r2
   14604:	ldr	r1, [r4, #8]
   14608:	cmp	r1, r0
   1460c:	bne	14628 <__mempcpy_chk@plt+0x35d8>
   14610:	ldrd	r0, [r4, #16]
   14614:	cmp	r1, r0
   14618:	bne	14628 <__mempcpy_chk@plt+0x35d8>
   1461c:	ldr	r0, [r4, #36]	; 0x24
   14620:	cmp	r0, #0
   14624:	beq	14640 <__mempcpy_chk@plt+0x35f0>
   14628:	mov	r0, r4
   1462c:	mov	r2, r6
   14630:	mov	r3, r5
   14634:	sub	sp, fp, #16
   14638:	pop	{r4, r5, r6, r7, fp, lr}
   1463c:	b	10fc0 <fseeko64@plt>
   14640:	ldr	r7, [fp, #8]
   14644:	mov	r0, r4
   14648:	bl	10f9c <fileno@plt>
   1464c:	mov	r2, r6
   14650:	mov	r3, r5
   14654:	str	r7, [sp]
   14658:	bl	10ea0 <lseek64@plt>
   1465c:	and	r2, r0, r1
   14660:	cmn	r2, #1
   14664:	beq	14680 <__mempcpy_chk@plt+0x3630>
   14668:	strd	r0, [r4, #80]	; 0x50
   1466c:	ldr	r0, [r4]
   14670:	bic	r0, r0, #16
   14674:	str	r0, [r4]
   14678:	mov	r0, #0
   1467c:	b	14684 <__mempcpy_chk@plt+0x3634>
   14680:	mvn	r0, #0
   14684:	sub	sp, fp, #16
   14688:	pop	{r4, r5, r6, r7, fp, pc}
   1468c:	push	{fp, lr}
   14690:	mov	fp, sp
   14694:	mov	r0, #14
   14698:	bl	10ff0 <nl_langinfo@plt>
   1469c:	movw	r1, #18791	; 0x4967
   146a0:	cmp	r0, #0
   146a4:	movt	r1, #1
   146a8:	movne	r1, r0
   146ac:	movw	r0, #21233	; 0x52f1
   146b0:	ldrb	r2, [r1]
   146b4:	movt	r0, #1
   146b8:	cmp	r2, #0
   146bc:	movne	r0, r1
   146c0:	pop	{fp, pc}
   146c4:	push	{r4, r5, r6, r7, fp, lr}
   146c8:	add	fp, sp, #16
   146cc:	sub	sp, sp, #8
   146d0:	cmp	r0, #0
   146d4:	add	r5, sp, #4
   146d8:	mov	r7, r2
   146dc:	mov	r4, r1
   146e0:	movne	r5, r0
   146e4:	mov	r0, r5
   146e8:	bl	10ed0 <mbrtowc@plt>
   146ec:	mov	r6, r0
   146f0:	cmp	r7, #0
   146f4:	beq	1471c <__mempcpy_chk@plt+0x36cc>
   146f8:	cmn	r6, #2
   146fc:	bcc	1471c <__mempcpy_chk@plt+0x36cc>
   14700:	mov	r0, #0
   14704:	bl	14764 <__mempcpy_chk@plt+0x3714>
   14708:	cmp	r0, #0
   1470c:	bne	1471c <__mempcpy_chk@plt+0x36cc>
   14710:	ldrb	r0, [r4]
   14714:	mov	r6, #1
   14718:	str	r0, [r5]
   1471c:	mov	r0, r6
   14720:	sub	sp, fp, #16
   14724:	pop	{r4, r5, r6, r7, fp, pc}
   14728:	cmp	r2, #0
   1472c:	beq	1475c <__mempcpy_chk@plt+0x370c>
   14730:	mvn	r3, #0
   14734:	udiv	r3, r3, r2
   14738:	cmp	r3, r1
   1473c:	bcs	1475c <__mempcpy_chk@plt+0x370c>
   14740:	push	{fp, lr}
   14744:	mov	fp, sp
   14748:	bl	10f6c <__errno_location@plt>
   1474c:	mov	r1, #12
   14750:	str	r1, [r0]
   14754:	mov	r0, #0
   14758:	pop	{fp, pc}
   1475c:	mul	r1, r2, r1
   14760:	b	143a0 <__mempcpy_chk@plt+0x3350>
   14764:	push	{r4, sl, fp, lr}
   14768:	add	fp, sp, #8
   1476c:	sub	sp, sp, #264	; 0x108
   14770:	add	r1, sp, #7
   14774:	movw	r2, #257	; 0x101
   14778:	bl	147d0 <__mempcpy_chk@plt+0x3780>
   1477c:	mov	r4, #0
   14780:	cmp	r0, #0
   14784:	bne	147c4 <__mempcpy_chk@plt+0x3774>
   14788:	movw	r1, #21239	; 0x52f7
   1478c:	add	r0, sp, #7
   14790:	mov	r2, #2
   14794:	movt	r1, #1
   14798:	bl	10f54 <bcmp@plt>
   1479c:	cmp	r0, #0
   147a0:	beq	147c4 <__mempcpy_chk@plt+0x3774>
   147a4:	movw	r1, #21241	; 0x52f9
   147a8:	add	r0, sp, #7
   147ac:	mov	r2, #6
   147b0:	movt	r1, #1
   147b4:	bl	10f54 <bcmp@plt>
   147b8:	cmp	r0, #0
   147bc:	mov	r4, r0
   147c0:	movwne	r4, #1
   147c4:	mov	r0, r4
   147c8:	sub	sp, fp, #8
   147cc:	pop	{r4, sl, fp, pc}
   147d0:	push	{r4, r5, r6, r7, fp, lr}
   147d4:	add	fp, sp, #16
   147d8:	mov	r4, r1
   147dc:	mov	r1, #0
   147e0:	mov	r6, r2
   147e4:	bl	10fd8 <setlocale@plt>
   147e8:	cmp	r0, #0
   147ec:	beq	14818 <__mempcpy_chk@plt+0x37c8>
   147f0:	mov	r7, r0
   147f4:	bl	10f60 <strlen@plt>
   147f8:	cmp	r0, r6
   147fc:	bcs	1482c <__mempcpy_chk@plt+0x37dc>
   14800:	add	r2, r0, #1
   14804:	mov	r0, r4
   14808:	mov	r1, r7
   1480c:	bl	10e34 <memcpy@plt>
   14810:	mov	r5, #0
   14814:	b	14854 <__mempcpy_chk@plt+0x3804>
   14818:	cmp	r6, #0
   1481c:	mov	r5, #22
   14820:	movne	r0, #0
   14824:	strbne	r0, [r4]
   14828:	b	14854 <__mempcpy_chk@plt+0x3804>
   1482c:	mov	r5, #34	; 0x22
   14830:	cmp	r6, #0
   14834:	beq	14854 <__mempcpy_chk@plt+0x3804>
   14838:	sub	r6, r6, #1
   1483c:	mov	r0, r4
   14840:	mov	r1, r7
   14844:	mov	r2, r6
   14848:	bl	10e34 <memcpy@plt>
   1484c:	mov	r0, #0
   14850:	strb	r0, [r4, r6]
   14854:	mov	r0, r5
   14858:	pop	{r4, r5, r6, r7, fp, pc}
   1485c:	mov	r1, #0
   14860:	b	10fd8 <setlocale@plt>
   14864:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14868:	mov	r7, r0
   1486c:	ldr	r6, [pc, #72]	; 148bc <__mempcpy_chk@plt+0x386c>
   14870:	ldr	r5, [pc, #72]	; 148c0 <__mempcpy_chk@plt+0x3870>
   14874:	add	r6, pc, r6
   14878:	add	r5, pc, r5
   1487c:	sub	r6, r6, r5
   14880:	mov	r8, r1
   14884:	mov	r9, r2
   14888:	bl	10dcc <calloc@plt-0x20>
   1488c:	asrs	r6, r6, #2
   14890:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14894:	mov	r4, #0
   14898:	add	r4, r4, #1
   1489c:	ldr	r3, [r5], #4
   148a0:	mov	r2, r9
   148a4:	mov	r1, r8
   148a8:	mov	r0, r7
   148ac:	blx	r3
   148b0:	cmp	r6, r4
   148b4:	bne	14898 <__mempcpy_chk@plt+0x3848>
   148b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   148bc:	muleq	r1, r0, r6
   148c0:	andeq	r1, r1, r8, lsl #13
   148c4:	bx	lr
   148c8:	ldr	r3, [pc, #12]	; 148dc <__mempcpy_chk@plt+0x388c>
   148cc:	mov	r1, #0
   148d0:	add	r3, pc, r3
   148d4:	ldr	r2, [r3]
   148d8:	b	10f78 <__cxa_atexit@plt>
   148dc:	andeq	r1, r1, ip, lsl #16

Disassembly of section .fini:

000148e0 <.fini>:
   148e0:	push	{r3, lr}
   148e4:	pop	{r3, pc}
