
../repos/coreutils/src/md5sum:     file format elf32-littlearm


Disassembly of section .init:

00010d5c <.init>:
   10d5c:	push	{r3, lr}
   10d60:	bl	122d4 <dcngettext@plt+0x12ac>
   10d64:	pop	{r3, pc}

Disassembly of section .plt:

00010d68 <fdopen@plt-0x14>:
   10d68:	push	{lr}		; (str lr, [sp, #-4]!)
   10d6c:	ldr	lr, [pc, #4]	; 10d78 <fdopen@plt-0x4>
   10d70:	add	lr, pc, lr
   10d74:	ldr	pc, [lr, #8]!
   10d78:	andeq	sl, r1, r8, lsl #5

00010d7c <fdopen@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #106496	; 0x1a000
   10d84:	ldr	pc, [ip, #648]!	; 0x288

00010d88 <calloc@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #106496	; 0x1a000
   10d90:	ldr	pc, [ip, #640]!	; 0x280

00010d94 <fputs_unlocked@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #106496	; 0x1a000
   10d9c:	ldr	pc, [ip, #632]!	; 0x278

00010da0 <raise@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #106496	; 0x1a000
   10da8:	ldr	pc, [ip, #624]!	; 0x270

00010dac <__getdelim@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #106496	; 0x1a000
   10db4:	ldr	pc, [ip, #616]!	; 0x268

00010db8 <strcmp@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #106496	; 0x1a000
   10dc0:	ldr	pc, [ip, #608]!	; 0x260

00010dc4 <posix_fadvise64@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #106496	; 0x1a000
   10dcc:	ldr	pc, [ip, #600]!	; 0x258

00010dd0 <fflush@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #106496	; 0x1a000
   10dd8:	ldr	pc, [ip, #592]!	; 0x250

00010ddc <free@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #106496	; 0x1a000
   10de4:	ldr	pc, [ip, #584]!	; 0x248

00010de8 <_exit@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #106496	; 0x1a000
   10df0:	ldr	pc, [ip, #576]!	; 0x240

00010df4 <memcpy@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #106496	; 0x1a000
   10dfc:	ldr	pc, [ip, #568]!	; 0x238

00010e00 <mbsinit@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #106496	; 0x1a000
   10e08:	ldr	pc, [ip, #560]!	; 0x230

00010e0c <fwrite_unlocked@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #106496	; 0x1a000
   10e14:	ldr	pc, [ip, #552]!	; 0x228

00010e18 <memcmp@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #106496	; 0x1a000
   10e20:	ldr	pc, [ip, #544]!	; 0x220

00010e24 <fputc_unlocked@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #106496	; 0x1a000
   10e2c:	ldr	pc, [ip, #536]!	; 0x218

00010e30 <dcgettext@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #106496	; 0x1a000
   10e38:	ldr	pc, [ip, #528]!	; 0x210

00010e3c <realloc@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #106496	; 0x1a000
   10e44:	ldr	pc, [ip, #520]!	; 0x208

00010e48 <textdomain@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #106496	; 0x1a000
   10e50:	ldr	pc, [ip, #512]!	; 0x200

00010e54 <iswprint@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #106496	; 0x1a000
   10e5c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e60 <__memcpy_chk@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #106496	; 0x1a000
   10e68:	ldr	pc, [ip, #496]!	; 0x1f0

00010e6c <fwrite@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #106496	; 0x1a000
   10e74:	ldr	pc, [ip, #488]!	; 0x1e8

00010e78 <lseek64@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #106496	; 0x1a000
   10e80:	ldr	pc, [ip, #480]!	; 0x1e0

00010e84 <__ctype_get_mb_cur_max@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #106496	; 0x1a000
   10e8c:	ldr	pc, [ip, #472]!	; 0x1d8

00010e90 <__fpending@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #106496	; 0x1a000
   10e98:	ldr	pc, [ip, #464]!	; 0x1d0

00010e9c <mbrtowc@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #106496	; 0x1a000
   10ea4:	ldr	pc, [ip, #456]!	; 0x1c8

00010ea8 <error@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #106496	; 0x1a000
   10eb0:	ldr	pc, [ip, #448]!	; 0x1c0

00010eb4 <malloc@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #106496	; 0x1a000
   10ebc:	ldr	pc, [ip, #440]!	; 0x1b8

00010ec0 <__libc_start_main@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #106496	; 0x1a000
   10ec8:	ldr	pc, [ip, #432]!	; 0x1b0

00010ecc <__freading@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #106496	; 0x1a000
   10ed4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ed8 <__ctype_tolower_loc@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #106496	; 0x1a000
   10ee0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ee4 <__gmon_start__@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #106496	; 0x1a000
   10eec:	ldr	pc, [ip, #408]!	; 0x198

00010ef0 <getopt_long@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #106496	; 0x1a000
   10ef8:	ldr	pc, [ip, #400]!	; 0x190

00010efc <__ctype_b_loc@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #106496	; 0x1a000
   10f04:	ldr	pc, [ip, #392]!	; 0x188

00010f08 <exit@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #106496	; 0x1a000
   10f10:	ldr	pc, [ip, #384]!	; 0x180

00010f14 <strlen@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #106496	; 0x1a000
   10f1c:	ldr	pc, [ip, #376]!	; 0x178

00010f20 <strchr@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #106496	; 0x1a000
   10f28:	ldr	pc, [ip, #368]!	; 0x170

00010f2c <__errno_location@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #106496	; 0x1a000
   10f34:	ldr	pc, [ip, #360]!	; 0x168

00010f38 <__cxa_atexit@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #106496	; 0x1a000
   10f40:	ldr	pc, [ip, #352]!	; 0x160

00010f44 <setvbuf@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #106496	; 0x1a000
   10f4c:	ldr	pc, [ip, #344]!	; 0x158

00010f50 <memset@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #106496	; 0x1a000
   10f58:	ldr	pc, [ip, #336]!	; 0x150

00010f5c <__printf_chk@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #106496	; 0x1a000
   10f64:	ldr	pc, [ip, #328]!	; 0x148

00010f68 <fileno@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #106496	; 0x1a000
   10f70:	ldr	pc, [ip, #320]!	; 0x140

00010f74 <__fprintf_chk@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #106496	; 0x1a000
   10f7c:	ldr	pc, [ip, #312]!	; 0x138

00010f80 <fclose@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #106496	; 0x1a000
   10f88:	ldr	pc, [ip, #304]!	; 0x130

00010f8c <fseeko64@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #106496	; 0x1a000
   10f94:	ldr	pc, [ip, #296]!	; 0x128

00010f98 <fcntl64@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #106496	; 0x1a000
   10fa0:	ldr	pc, [ip, #288]!	; 0x120

00010fa4 <__overflow@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #106496	; 0x1a000
   10fac:	ldr	pc, [ip, #280]!	; 0x118

00010fb0 <setlocale@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #106496	; 0x1a000
   10fb8:	ldr	pc, [ip, #272]!	; 0x110

00010fbc <strrchr@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #106496	; 0x1a000
   10fc4:	ldr	pc, [ip, #264]!	; 0x108

00010fc8 <nl_langinfo@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #106496	; 0x1a000
   10fd0:	ldr	pc, [ip, #256]!	; 0x100

00010fd4 <clearerr_unlocked@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #106496	; 0x1a000
   10fdc:	ldr	pc, [ip, #248]!	; 0xf8

00010fe0 <fopen64@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #106496	; 0x1a000
   10fe8:	ldr	pc, [ip, #240]!	; 0xf0

00010fec <bindtextdomain@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #106496	; 0x1a000
   10ff4:	ldr	pc, [ip, #232]!	; 0xe8

00010ff8 <fread_unlocked@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #106496	; 0x1a000
   11000:	ldr	pc, [ip, #224]!	; 0xe0

00011004 <strncmp@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #106496	; 0x1a000
   1100c:	ldr	pc, [ip, #216]!	; 0xd8

00011010 <abort@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #106496	; 0x1a000
   11018:	ldr	pc, [ip, #208]!	; 0xd0

0001101c <close@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #106496	; 0x1a000
   11024:	ldr	pc, [ip, #200]!	; 0xc8

00011028 <dcngettext@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #106496	; 0x1a000
   11030:	ldr	pc, [ip, #192]!	; 0xc0

Disassembly of section .text:

00011034 <.text>:
   11034:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11038:	mov	r6, r0
   1103c:	sub	sp, sp, #164	; 0xa4
   11040:	ldr	r0, [r1]
   11044:	mov	r5, r1
   11048:	bl	13ed8 <dcngettext@plt+0x2eb0>
   1104c:	ldr	r1, [pc, #3968]	; 11fd4 <dcngettext@plt+0xfac>
   11050:	mov	r0, #6
   11054:	bl	10fb0 <setlocale@plt>
   11058:	ldr	r1, [pc, #3960]	; 11fd8 <dcngettext@plt+0xfb0>
   1105c:	ldr	r0, [pc, #3960]	; 11fdc <dcngettext@plt+0xfb4>
   11060:	bl	10fec <bindtextdomain@plt>
   11064:	ldr	r0, [pc, #3952]	; 11fdc <dcngettext@plt+0xfb4>
   11068:	bl	10e48 <textdomain@plt>
   1106c:	ldr	r0, [pc, #3948]	; 11fe0 <dcngettext@plt+0xfb8>
   11070:	bl	19b00 <dcngettext@plt+0x8ad8>
   11074:	ldr	r2, [pc, #3944]	; 11fe4 <dcngettext@plt+0xfbc>
   11078:	mov	r3, #0
   1107c:	ldr	r8, [pc, #3940]	; 11fe8 <dcngettext@plt+0xfc0>
   11080:	ldr	r7, [pc, #3940]	; 11fec <dcngettext@plt+0xfc4>
   11084:	ldr	r9, [pc, #3940]	; 11ff0 <dcngettext@plt+0xfc8>
   11088:	ldr	fp, [pc, #3940]	; 11ff4 <dcngettext@plt+0xfcc>
   1108c:	ldr	r0, [r2]
   11090:	mov	r1, r3
   11094:	mov	r2, #1
   11098:	mov	sl, #1
   1109c:	mov	r4, r3
   110a0:	str	r3, [sp, #32]
   110a4:	bl	10f44 <setvbuf@plt>
   110a8:	mvn	r3, #0
   110ac:	str	r4, [sp, #16]
   110b0:	str	r3, [sp, #20]
   110b4:	mov	r4, #0
   110b8:	str	r4, [sp]
   110bc:	mov	r3, r8
   110c0:	mov	r2, r7
   110c4:	mov	r1, r5
   110c8:	mov	r0, r6
   110cc:	bl	10ef0 <getopt_long@plt>
   110d0:	cmn	r0, #1
   110d4:	beq	11228 <dcngettext@plt+0x200>
   110d8:	cmp	r0, #119	; 0x77
   110dc:	beq	11218 <dcngettext@plt+0x1f0>
   110e0:	ble	11118 <dcngettext@plt+0xf0>
   110e4:	cmp	r0, fp
   110e8:	beq	11208 <dcngettext@plt+0x1e0>
   110ec:	ble	11154 <dcngettext@plt+0x12c>
   110f0:	ldr	r3, [pc, #3840]	; 11ff8 <dcngettext@plt+0xfd0>
   110f4:	cmp	r0, r3
   110f8:	beq	11200 <dcngettext@plt+0x1d8>
   110fc:	blt	111b0 <dcngettext@plt+0x188>
   11100:	cmp	r0, #260	; 0x104
   11104:	bne	111f8 <dcngettext@plt+0x1d0>
   11108:	mov	r3, #1
   1110c:	str	sl, [sp, #32]
   11110:	str	r3, [sp, #20]
   11114:	b	110b4 <dcngettext@plt+0x8c>
   11118:	cmp	r0, #98	; 0x62
   1111c:	beq	111cc <dcngettext@plt+0x1a4>
   11120:	bgt	1113c <dcngettext@plt+0x114>
   11124:	cmn	r0, #3
   11128:	beq	11174 <dcngettext@plt+0x14c>
   1112c:	cmn	r0, #2
   11130:	bne	111f8 <dcngettext@plt+0x1d0>
   11134:	mov	r0, r4
   11138:	bl	12648 <dcngettext@plt+0x1620>
   1113c:	cmp	r0, #99	; 0x63
   11140:	beq	1116c <dcngettext@plt+0x144>
   11144:	cmp	r0, #116	; 0x74
   11148:	bne	111f8 <dcngettext@plt+0x1d0>
   1114c:	str	r4, [sp, #20]
   11150:	b	110b4 <dcngettext@plt+0x8c>
   11154:	cmp	r0, #122	; 0x7a
   11158:	beq	111c0 <dcngettext@plt+0x198>
   1115c:	cmp	r0, #256	; 0x100
   11160:	bne	111f8 <dcngettext@plt+0x1d0>
   11164:	strb	sl, [r9, #1]
   11168:	b	110b4 <dcngettext@plt+0x8c>
   1116c:	str	sl, [sp, #16]
   11170:	b	110b4 <dcngettext@plt+0x8c>
   11174:	ldr	ip, [pc, #3712]	; 11ffc <dcngettext@plt+0xfd4>
   11178:	ldr	r1, [pc, #3712]	; 12000 <dcngettext@plt+0xfd8>
   1117c:	ldr	r3, [pc, #3712]	; 12004 <dcngettext@plt+0xfdc>
   11180:	ldr	r0, [pc, #3676]	; 11fe4 <dcngettext@plt+0xfbc>
   11184:	ldr	r2, [pc, #3708]	; 12008 <dcngettext@plt+0xfe0>
   11188:	str	r4, [sp, #12]
   1118c:	ldr	r0, [r0]
   11190:	ldr	r3, [r3]
   11194:	stmib	sp, {r1, ip}
   11198:	str	r2, [sp]
   1119c:	ldr	r1, [pc, #3688]	; 1200c <dcngettext@plt+0xfe4>
   111a0:	ldr	r2, [pc, #3688]	; 12010 <dcngettext@plt+0xfe8>
   111a4:	bl	18784 <dcngettext@plt+0x775c>
   111a8:	mov	r0, r4
   111ac:	bl	10f08 <exit@plt>
   111b0:	strb	r4, [r9, #2]
   111b4:	strb	r4, [r9, #3]
   111b8:	strb	sl, [r9, #4]
   111bc:	b	110b4 <dcngettext@plt+0x8c>
   111c0:	ldr	r3, [pc, #3660]	; 12014 <dcngettext@plt+0xfec>
   111c4:	strb	r4, [r3]
   111c8:	b	110b4 <dcngettext@plt+0x8c>
   111cc:	mov	r3, #1
   111d0:	str	r3, [sp, #20]
   111d4:	b	110b4 <dcngettext@plt+0x8c>
   111d8:	ldr	r1, [pc, #3640]	; 12018 <dcngettext@plt+0xff0>
   111dc:	mov	r2, #5
   111e0:	mov	r0, r4
   111e4:	bl	10e30 <dcgettext@plt>
   111e8:	mov	r1, r4
   111ec:	mov	r2, r0
   111f0:	mov	r0, r4
   111f4:	bl	10ea8 <error@plt>
   111f8:	mov	r0, #1
   111fc:	bl	12648 <dcngettext@plt+0x1620>
   11200:	strb	sl, [r9, #5]
   11204:	b	110b4 <dcngettext@plt+0x8c>
   11208:	strb	sl, [r9, #2]
   1120c:	strb	r4, [r9, #3]
   11210:	strb	r4, [r9, #4]
   11214:	b	110b4 <dcngettext@plt+0x8c>
   11218:	strb	r4, [r9, #2]
   1121c:	strb	sl, [r9, #3]
   11220:	strb	r4, [r9, #4]
   11224:	b	110b4 <dcngettext@plt+0x8c>
   11228:	ldr	fp, [pc, #3520]	; 11ff0 <dcngettext@plt+0xfc8>
   1122c:	ldr	r3, [sp, #20]
   11230:	ldr	r7, [sp, #32]
   11234:	cmp	r3, r4
   11238:	movne	r7, #0
   1123c:	andeq	r7, r7, #1
   11240:	mov	r3, #34	; 0x22
   11244:	str	r3, [fp, #8]
   11248:	cmp	r7, r4
   1124c:	mov	r3, #32
   11250:	str	r3, [fp, #12]
   11254:	bne	111d8 <dcngettext@plt+0x1b0>
   11258:	ldr	r3, [pc, #3508]	; 12014 <dcngettext@plt+0xfec>
   1125c:	ldrb	r4, [r3]
   11260:	ldr	r3, [sp, #16]
   11264:	cmp	r4, #10
   11268:	moveq	r3, #0
   1126c:	andne	r3, r3, #1
   11270:	cmp	r3, #0
   11274:	mov	r4, r3
   11278:	movne	r2, #5
   1127c:	ldrne	r1, [pc, #3480]	; 1201c <dcngettext@plt+0xff4>
   11280:	bne	12278 <dcngettext@plt+0x1250>
   11284:	ldr	r2, [sp, #32]
   11288:	ldr	r3, [sp, #16]
   1128c:	ands	r7, r3, r2
   11290:	movne	r2, #5
   11294:	ldrne	r1, [pc, #3460]	; 12020 <dcngettext@plt+0xff8>
   11298:	bne	111e0 <dcngettext@plt+0x1b8>
   1129c:	ldr	r2, [sp, #20]
   112a0:	ldr	r3, [sp, #16]
   112a4:	cmp	r2, #0
   112a8:	movlt	r3, #0
   112ac:	andge	r3, r3, #1
   112b0:	cmp	r3, #0
   112b4:	movne	r2, #5
   112b8:	ldrne	r1, [pc, #3428]	; 12024 <dcngettext@plt+0xffc>
   112bc:	bne	12278 <dcngettext@plt+0x1250>
   112c0:	ldrb	r3, [fp, #1]
   112c4:	ldr	r2, [sp, #16]
   112c8:	eor	r3, r3, #1
   112cc:	orrs	r4, r2, r3
   112d0:	moveq	r2, #5
   112d4:	ldreq	r1, [pc, #3404]	; 12028 <dcngettext@plt+0x1000>
   112d8:	beq	111e0 <dcngettext@plt+0x1b8>
   112dc:	ldrb	r3, [fp, #2]
   112e0:	ldr	r2, [sp, #16]
   112e4:	eor	r3, r3, #1
   112e8:	orrs	r4, r2, r3
   112ec:	moveq	r2, #5
   112f0:	ldreq	r1, [pc, #3380]	; 1202c <dcngettext@plt+0x1004>
   112f4:	beq	111e0 <dcngettext@plt+0x1b8>
   112f8:	ldrb	r3, [fp, #3]
   112fc:	ldr	r2, [sp, #16]
   11300:	eor	r3, r3, #1
   11304:	orrs	r4, r2, r3
   11308:	moveq	r2, #5
   1130c:	ldreq	r1, [pc, #3356]	; 12030 <dcngettext@plt+0x1008>
   11310:	beq	111e0 <dcngettext@plt+0x1b8>
   11314:	ldrb	r3, [fp, #4]
   11318:	ldr	r2, [sp, #16]
   1131c:	eor	r3, r3, #1
   11320:	orrs	r3, r2, r3
   11324:	str	r3, [sp, #40]	; 0x28
   11328:	moveq	r2, #5
   1132c:	ldreq	r1, [pc, #3328]	; 12034 <dcngettext@plt+0x100c>
   11330:	moveq	r4, r3
   11334:	beq	111e0 <dcngettext@plt+0x1b8>
   11338:	ldrb	r2, [fp, #5]
   1133c:	ldr	r3, [sp, #16]
   11340:	eor	r3, r3, #1
   11344:	ands	r3, r2, r3
   11348:	str	r3, [sp, #36]	; 0x24
   1134c:	bne	12270 <dcngettext@plt+0x1248>
   11350:	ldr	r3, [pc, #3296]	; 12038 <dcngettext@plt+0x1010>
   11354:	ldr	r1, [sp, #20]
   11358:	ldr	r3, [r3]
   1135c:	cmn	r1, #1
   11360:	mov	r2, r1
   11364:	moveq	r2, #0
   11368:	str	r2, [sp, #20]
   1136c:	cmp	r6, r3
   11370:	add	r2, r5, r6, lsl #2
   11374:	str	r2, [sp, #60]	; 0x3c
   11378:	addeq	r2, r2, #4
   1137c:	streq	r2, [sp, #60]	; 0x3c
   11380:	ldreq	r2, [pc, #3252]	; 1203c <dcngettext@plt+0x1014>
   11384:	streq	r2, [r5, r3, lsl #2]
   11388:	ldr	r2, [sp, #20]
   1138c:	add	r3, r5, r3, lsl #2
   11390:	cmp	r2, #0
   11394:	movne	r2, #42	; 0x2a
   11398:	moveq	r2, #32
   1139c:	str	r3, [sp, #20]
   113a0:	uxtb	r3, r2
   113a4:	str	r2, [sp, #100]	; 0x64
   113a8:	str	r3, [sp, #96]	; 0x60
   113ac:	ldr	r3, [sp, #60]	; 0x3c
   113b0:	ldr	r2, [sp, #20]
   113b4:	cmp	r3, r2
   113b8:	bls	11df0 <dcngettext@plt+0xdc8>
   113bc:	ldr	r3, [sp, #16]
   113c0:	cmp	r3, #0
   113c4:	ldr	r3, [sp, #20]
   113c8:	ldr	r5, [r3], #4
   113cc:	str	r3, [sp, #20]
   113d0:	beq	11750 <dcngettext@plt+0x728>
   113d4:	ldr	r1, [pc, #3168]	; 1203c <dcngettext@plt+0x1014>
   113d8:	mov	r0, r5
   113dc:	bl	10db8 <strcmp@plt>
   113e0:	subs	r3, r0, #0
   113e4:	str	r3, [sp, #48]	; 0x30
   113e8:	bne	11984 <dcngettext@plt+0x95c>
   113ec:	mov	r3, #1
   113f0:	mov	r2, #5
   113f4:	ldr	r1, [pc, #3140]	; 12040 <dcngettext@plt+0x1018>
   113f8:	strb	r3, [fp]
   113fc:	bl	10e30 <dcgettext@plt>
   11400:	ldr	r3, [pc, #3132]	; 12044 <dcngettext@plt+0x101c>
   11404:	ldr	sl, [r3]
   11408:	str	r0, [sp, #64]	; 0x40
   1140c:	add	r5, sp, #160	; 0xa0
   11410:	mov	r3, #0
   11414:	mov	r0, #0
   11418:	mov	r1, #0
   1141c:	str	r3, [r5, #-44]!	; 0xffffffd4
   11420:	str	r3, [sp, #112]	; 0x70
   11424:	ldr	r3, [sp, #36]	; 0x24
   11428:	strd	r0, [sp, #80]	; 0x50
   1142c:	strd	r0, [sp, #72]	; 0x48
   11430:	strd	r0, [sp, #24]
   11434:	str	r3, [sp, #88]	; 0x58
   11438:	str	r3, [sp, #68]	; 0x44
   1143c:	mov	r8, #1
   11440:	mov	r9, #0
   11444:	b	11464 <dcngettext@plt+0x43c>
   11448:	ldr	r3, [sl]
   1144c:	ands	r3, r3, #48	; 0x30
   11450:	bne	11770 <dcngettext@plt+0x748>
   11454:	adds	r8, r8, #1
   11458:	adc	r9, r9, #0
   1145c:	orrs	r2, r8, r9
   11460:	beq	11ed8 <dcngettext@plt+0xeb0>
   11464:	mov	r3, sl
   11468:	mov	r2, #10
   1146c:	mov	r1, r5
   11470:	add	r0, sp, #112	; 0x70
   11474:	bl	10dac <__getdelim@plt>
   11478:	subs	r4, r0, #0
   1147c:	ble	11770 <dcngettext@plt+0x748>
   11480:	ldr	r3, [sp, #112]	; 0x70
   11484:	ldrb	r2, [r3]
   11488:	cmp	r2, #35	; 0x23
   1148c:	beq	11448 <dcngettext@plt+0x420>
   11490:	add	r2, r3, r4
   11494:	ldrb	r0, [r2, #-1]
   11498:	cmp	r0, #10
   1149c:	subeq	r4, r4, #1
   114a0:	cmp	r4, #0
   114a4:	movle	r2, r4
   114a8:	subgt	r2, r4, #1
   114ac:	ldrb	r0, [r3, r2]
   114b0:	cmp	r0, #13
   114b4:	subeq	r4, r4, #1
   114b8:	cmp	r4, #0
   114bc:	beq	11448 <dcngettext@plt+0x420>
   114c0:	mov	r2, #0
   114c4:	strb	r2, [r3, r4]
   114c8:	ldr	r7, [sp, #112]	; 0x70
   114cc:	ldrb	r3, [r7]
   114d0:	cmp	r3, #32
   114d4:	cmpne	r3, #9
   114d8:	moveq	r1, #1
   114dc:	movne	r1, #0
   114e0:	bne	11de8 <dcngettext@plt+0xdc0>
   114e4:	mov	r6, r2
   114e8:	mov	r2, r7
   114ec:	ldrb	r3, [r2, #1]!
   114f0:	add	r6, r6, #1
   114f4:	cmp	r3, #9
   114f8:	cmpne	r3, #32
   114fc:	beq	114ec <dcngettext@plt+0x4c4>
   11500:	cmp	r3, #92	; 0x5c
   11504:	addeq	r6, r6, #1
   11508:	ldreq	r3, [sp, #16]
   1150c:	ldrne	r3, [sp, #36]	; 0x24
   11510:	add	r0, r7, r6
   11514:	mov	r2, #3
   11518:	ldr	r1, [pc, #2856]	; 12048 <dcngettext@plt+0x1020>
   1151c:	str	r3, [sp, #56]	; 0x38
   11520:	str	r0, [sp, #44]	; 0x2c
   11524:	bl	11004 <strncmp@plt>
   11528:	cmp	r0, #0
   1152c:	bne	1165c <dcngettext@plt+0x634>
   11530:	add	r2, r6, #3
   11534:	ldrb	r3, [r7, r2]
   11538:	cmp	r3, #32
   1153c:	addeq	r2, r6, #4
   11540:	ldrb	r3, [r7, r2]
   11544:	cmp	r3, #40	; 0x28
   11548:	bne	116ec <dcngettext@plt+0x6c4>
   1154c:	add	r2, r2, #1
   11550:	subs	r4, r4, r2
   11554:	beq	116ec <dcngettext@plt+0x6c4>
   11558:	add	r3, r7, r2
   1155c:	mov	ip, r3
   11560:	sub	r4, r4, #1
   11564:	str	r3, [sp, #52]	; 0x34
   11568:	mov	lr, ip
   1156c:	add	r3, r3, r4
   11570:	b	11588 <dcngettext@plt+0x560>
   11574:	mov	r0, r3
   11578:	sub	r3, r3, #1
   1157c:	ldrb	r4, [r0]
   11580:	cmp	r4, #41	; 0x29
   11584:	beq	115a8 <dcngettext@plt+0x580>
   11588:	cmp	ip, r3
   1158c:	sub	r1, r3, ip
   11590:	bne	11574 <dcngettext@plt+0x54c>
   11594:	ldrb	r3, [r7, r2]
   11598:	cmp	r3, #41	; 0x29
   1159c:	bne	116ec <dcngettext@plt+0x6c4>
   115a0:	ldr	r0, [sp, #52]	; 0x34
   115a4:	mov	r1, #0
   115a8:	ldr	r3, [sp, #56]	; 0x38
   115ac:	cmp	r3, #0
   115b0:	bne	121a8 <dcngettext@plt+0x1180>
   115b4:	mov	r3, #0
   115b8:	add	r1, r1, #1
   115bc:	strb	r3, [r0]
   115c0:	ldr	r2, [sp, #52]	; 0x34
   115c4:	b	115cc <dcngettext@plt+0x5a4>
   115c8:	add	r1, r1, #1
   115cc:	ldrb	r3, [r2, r1]
   115d0:	cmp	r3, #9
   115d4:	cmpne	r3, #32
   115d8:	beq	115c8 <dcngettext@plt+0x5a0>
   115dc:	cmp	r3, #61	; 0x3d
   115e0:	bne	116ec <dcngettext@plt+0x6c4>
   115e4:	ldr	r3, [sp, #52]	; 0x34
   115e8:	add	r1, r1, #1
   115ec:	add	r7, r3, r1
   115f0:	b	115f8 <dcngettext@plt+0x5d0>
   115f4:	mov	r7, r3
   115f8:	mov	r3, r7
   115fc:	ldrb	r2, [r3], #1
   11600:	cmp	r2, #9
   11604:	cmpne	r2, #32
   11608:	beq	115f4 <dcngettext@plt+0x5cc>
   1160c:	ldr	r4, [fp, #12]
   11610:	str	r7, [sp, #44]	; 0x2c
   11614:	add	r4, r7, r4
   11618:	b	1163c <dcngettext@plt+0x614>
   1161c:	bl	10efc <__ctype_b_loc@plt>
   11620:	ldrb	r3, [r6]
   11624:	add	r7, r7, #1
   11628:	lsl	r3, r3, #1
   1162c:	ldr	r2, [r0]
   11630:	ldrh	r3, [r2, r3]
   11634:	tst	r3, #4096	; 0x1000
   11638:	beq	116ec <dcngettext@plt+0x6c4>
   1163c:	cmp	r4, r7
   11640:	mov	r6, r7
   11644:	bne	1161c <dcngettext@plt+0x5f4>
   11648:	ldrb	r1, [r4]
   1164c:	ldr	r6, [sp, #44]	; 0x2c
   11650:	clz	r1, r1
   11654:	lsr	r1, r1, #5
   11658:	b	11c08 <dcngettext@plt+0xbe0>
   1165c:	ldrb	r0, [r7, r6]
   11660:	ldr	r2, [fp, #8]
   11664:	sub	r1, r4, r6
   11668:	cmp	r0, #92	; 0x5c
   1166c:	addeq	r2, r2, #1
   11670:	cmp	r1, r2
   11674:	bcc	116ec <dcngettext@plt+0x6c4>
   11678:	ldr	r2, [fp, #12]
   1167c:	add	r1, r6, r2
   11680:	ldrb	r0, [r7, r1]
   11684:	cmp	r0, #32
   11688:	cmpne	r0, #9
   1168c:	movne	r0, #1
   11690:	moveq	r0, #0
   11694:	bne	116ec <dcngettext@plt+0x6c4>
   11698:	cmp	r2, #0
   1169c:	str	r2, [sp, #52]	; 0x34
   116a0:	strb	r0, [r7, r1]
   116a4:	beq	11b30 <dcngettext@plt+0xb08>
   116a8:	str	r1, [sp, #92]	; 0x5c
   116ac:	bl	10efc <__ctype_b_loc@plt>
   116b0:	ldr	r3, [sp, #44]	; 0x2c
   116b4:	ldr	r2, [sp, #52]	; 0x34
   116b8:	mov	ip, r3
   116bc:	add	lr, r3, r2
   116c0:	ldr	r1, [sp, #92]	; 0x5c
   116c4:	ldr	r0, [r0]
   116c8:	b	116d8 <dcngettext@plt+0x6b0>
   116cc:	cmp	lr, ip
   116d0:	mov	r2, ip
   116d4:	beq	11b34 <dcngettext@plt+0xb0c>
   116d8:	ldrb	r3, [ip], #1
   116dc:	lsl	r3, r3, #1
   116e0:	ldrh	r3, [r0, r3]
   116e4:	tst	r3, #4096	; 0x1000
   116e8:	bne	116cc <dcngettext@plt+0x6a4>
   116ec:	ldrd	r0, [sp, #24]
   116f0:	ldrb	r3, [fp, #3]
   116f4:	adds	r0, r0, #1
   116f8:	adc	r1, r1, #0
   116fc:	cmp	r3, #0
   11700:	strd	r0, [sp, #24]
   11704:	beq	11448 <dcngettext@plt+0x420>
   11708:	mov	r2, #5
   1170c:	ldr	r1, [pc, #2360]	; 1204c <dcngettext@plt+0x1024>
   11710:	mov	r0, #0
   11714:	bl	10e30 <dcgettext@plt>
   11718:	ldr	r2, [sp, #64]	; 0x40
   1171c:	mov	r1, #3
   11720:	mov	r4, r0
   11724:	mov	r0, #0
   11728:	bl	16eb0 <dcngettext@plt+0x5e88>
   1172c:	ldr	r3, [pc, #2324]	; 12048 <dcngettext@plt+0x1020>
   11730:	mov	r1, #0
   11734:	str	r3, [sp, #8]
   11738:	mov	r2, r4
   1173c:	strd	r8, [sp]
   11740:	mov	r3, r0
   11744:	mov	r0, r1
   11748:	bl	10ea8 <error@plt>
   1174c:	b	11448 <dcngettext@plt+0x420>
   11750:	add	r2, sp, #140	; 0x8c
   11754:	add	r1, sp, #120	; 0x78
   11758:	mov	r0, r5
   1175c:	bl	124b8 <dcngettext@plt+0x1490>
   11760:	subs	r8, r0, #0
   11764:	bne	11a34 <dcngettext@plt+0xa0c>
   11768:	str	r8, [sp, #40]	; 0x28
   1176c:	b	113ac <dcngettext@plt+0x384>
   11770:	ldr	r0, [sp, #112]	; 0x70
   11774:	bl	13de0 <dcngettext@plt+0x2db8>
   11778:	ldr	r4, [sl]
   1177c:	ldr	r3, [sp, #48]	; 0x30
   11780:	ands	r4, r4, #32
   11784:	mov	r0, sl
   11788:	bne	119d0 <dcngettext@plt+0x9a8>
   1178c:	cmp	r3, #0
   11790:	beq	117bc <dcngettext@plt+0x794>
   11794:	bl	13c48 <dcngettext@plt+0x2c20>
   11798:	cmp	r0, #0
   1179c:	beq	117c0 <dcngettext@plt+0x798>
   117a0:	bl	10f2c <__errno_location@plt>
   117a4:	ldr	r5, [r0]
   117a8:	cmp	r5, #0
   117ac:	blt	117c0 <dcngettext@plt+0x798>
   117b0:	ldrne	r4, [pc, #2200]	; 12050 <dcngettext@plt+0x1028>
   117b4:	bne	119f4 <dcngettext@plt+0x9cc>
   117b8:	b	119dc <dcngettext@plt+0x9b4>
   117bc:	bl	10fd4 <clearerr_unlocked@plt>
   117c0:	ldr	r3, [sp, #68]	; 0x44
   117c4:	cmp	r3, #0
   117c8:	beq	11e98 <dcngettext@plt+0xe70>
   117cc:	ldrb	r3, [fp, #2]
   117d0:	cmp	r3, #0
   117d4:	bne	11940 <dcngettext@plt+0x918>
   117d8:	ldrd	r0, [sp, #24]
   117dc:	mov	r2, r0
   117e0:	mov	r3, r1
   117e4:	orrs	r3, r2, r3
   117e8:	beq	11848 <dcngettext@plt+0x820>
   117ec:	mov	r3, #0
   117f0:	cmp	r1, r3
   117f4:	mvn	r2, #0
   117f8:	cmpeq	r0, r2
   117fc:	ldrls	r3, [sp, #24]
   11800:	bls	11818 <dcngettext@plt+0x7f0>
   11804:	ldr	r2, [pc, #2120]	; 12054 <dcngettext@plt+0x102c>
   11808:	mov	r3, #0
   1180c:	bl	19928 <dcngettext@plt+0x8900>
   11810:	add	r3, r2, #999424	; 0xf4000
   11814:	add	r3, r3, #576	; 0x240
   11818:	mov	r2, #5
   1181c:	str	r2, [sp]
   11820:	ldr	r1, [pc, #2096]	; 12058 <dcngettext@plt+0x1030>
   11824:	ldr	r2, [pc, #2096]	; 1205c <dcngettext@plt+0x1034>
   11828:	mov	r0, #0
   1182c:	bl	11028 <dcngettext@plt>
   11830:	ldrd	r2, [sp, #24]
   11834:	mov	r1, #0
   11838:	strd	r2, [sp]
   1183c:	mov	r2, r0
   11840:	mov	r0, r1
   11844:	bl	10ea8 <error@plt>
   11848:	ldrd	r0, [sp, #72]	; 0x48
   1184c:	mov	r2, r0
   11850:	mov	r3, r1
   11854:	orrs	r3, r2, r3
   11858:	beq	118b8 <dcngettext@plt+0x890>
   1185c:	mov	r3, #0
   11860:	cmp	r1, r3
   11864:	mvn	r2, #0
   11868:	cmpeq	r0, r2
   1186c:	ldrls	r3, [sp, #72]	; 0x48
   11870:	bls	11888 <dcngettext@plt+0x860>
   11874:	ldr	r2, [pc, #2008]	; 12054 <dcngettext@plt+0x102c>
   11878:	mov	r3, #0
   1187c:	bl	19928 <dcngettext@plt+0x8900>
   11880:	add	r3, r2, #999424	; 0xf4000
   11884:	add	r3, r3, #576	; 0x240
   11888:	mov	r2, #5
   1188c:	str	r2, [sp]
   11890:	ldr	r1, [pc, #1992]	; 12060 <dcngettext@plt+0x1038>
   11894:	ldr	r2, [pc, #1992]	; 12064 <dcngettext@plt+0x103c>
   11898:	mov	r0, #0
   1189c:	bl	11028 <dcngettext@plt>
   118a0:	ldrd	r2, [sp, #72]	; 0x48
   118a4:	mov	r1, #0
   118a8:	strd	r2, [sp]
   118ac:	mov	r2, r0
   118b0:	mov	r0, r1
   118b4:	bl	10ea8 <error@plt>
   118b8:	ldrd	r0, [sp, #80]	; 0x50
   118bc:	mov	r2, r0
   118c0:	mov	r3, r1
   118c4:	orrs	r3, r2, r3
   118c8:	beq	11928 <dcngettext@plt+0x900>
   118cc:	mov	r3, #0
   118d0:	cmp	r1, r3
   118d4:	mvn	r2, #0
   118d8:	cmpeq	r0, r2
   118dc:	ldrls	r3, [sp, #80]	; 0x50
   118e0:	bls	118f8 <dcngettext@plt+0x8d0>
   118e4:	ldr	r2, [pc, #1896]	; 12054 <dcngettext@plt+0x102c>
   118e8:	mov	r3, #0
   118ec:	bl	19928 <dcngettext@plt+0x8900>
   118f0:	add	r3, r2, #999424	; 0xf4000
   118f4:	add	r3, r3, #576	; 0x240
   118f8:	mov	r2, #5
   118fc:	str	r2, [sp]
   11900:	ldr	r1, [pc, #1888]	; 12068 <dcngettext@plt+0x1040>
   11904:	ldr	r2, [pc, #1888]	; 1206c <dcngettext@plt+0x1044>
   11908:	mov	r0, #0
   1190c:	bl	11028 <dcngettext@plt>
   11910:	ldrd	r2, [sp, #80]	; 0x50
   11914:	mov	r1, #0
   11918:	strd	r2, [sp]
   1191c:	mov	r2, r0
   11920:	mov	r0, r1
   11924:	bl	10ea8 <error@plt>
   11928:	ldrb	r5, [fp, #1]
   1192c:	ldr	r3, [sp, #88]	; 0x58
   11930:	eor	r5, r5, #1
   11934:	orr	r5, r3, r5
   11938:	ands	r5, r5, #255	; 0xff
   1193c:	beq	1216c <dcngettext@plt+0x1144>
   11940:	ldr	r3, [sp, #88]	; 0x58
   11944:	cmp	r3, #0
   11948:	beq	1197c <dcngettext@plt+0x954>
   1194c:	ldrd	r2, [sp, #72]	; 0x48
   11950:	ldrd	r0, [sp, #80]	; 0x50
   11954:	orr	r2, r2, r0
   11958:	orr	r3, r3, r1
   1195c:	orrs	r3, r2, r3
   11960:	bne	1197c <dcngettext@plt+0x954>
   11964:	ldrd	r2, [sp, #24]
   11968:	ldrb	r4, [fp, #5]
   1196c:	mov	r1, r2
   11970:	orrs	r3, r1, r3
   11974:	eor	r4, r4, #1
   11978:	orreq	r4, r4, #1
   1197c:	and	r4, r4, #1
   11980:	b	11a1c <dcngettext@plt+0x9f4>
   11984:	ldr	r1, [pc, #1764]	; 12070 <dcngettext@plt+0x1048>
   11988:	mov	r0, r5
   1198c:	bl	13d48 <dcngettext@plt+0x2d20>
   11990:	subs	sl, r0, #0
   11994:	strne	r5, [sp, #64]	; 0x40
   11998:	bne	1140c <dcngettext@plt+0x3e4>
   1199c:	bl	10f2c <__errno_location@plt>
   119a0:	mov	r2, r5
   119a4:	mov	r1, #3
   119a8:	ldr	r4, [r0]
   119ac:	mov	r0, sl
   119b0:	bl	16eb0 <dcngettext@plt+0x5e88>
   119b4:	mov	r1, r4
   119b8:	ldr	r2, [pc, #1680]	; 12050 <dcngettext@plt+0x1028>
   119bc:	mov	r3, r0
   119c0:	mov	r0, sl
   119c4:	bl	10ea8 <error@plt>
   119c8:	ldr	r4, [sp, #36]	; 0x24
   119cc:	b	11a1c <dcngettext@plt+0x9f4>
   119d0:	cmp	r3, #0
   119d4:	beq	11a2c <dcngettext@plt+0xa04>
   119d8:	bl	13c48 <dcngettext@plt+0x2c20>
   119dc:	mov	r2, #5
   119e0:	ldr	r1, [pc, #1676]	; 12074 <dcngettext@plt+0x104c>
   119e4:	mov	r0, #0
   119e8:	bl	10e30 <dcgettext@plt>
   119ec:	mov	r5, #0
   119f0:	mov	r4, r0
   119f4:	ldr	r2, [sp, #64]	; 0x40
   119f8:	mov	r1, #3
   119fc:	mov	r0, #0
   11a00:	bl	16eb0 <dcngettext@plt+0x5e88>
   11a04:	mov	r2, r4
   11a08:	mov	r1, r5
   11a0c:	mov	r3, r0
   11a10:	mov	r0, #0
   11a14:	bl	10ea8 <error@plt>
   11a18:	ldr	r4, [sp, #36]	; 0x24
   11a1c:	ldr	r3, [sp, #40]	; 0x28
   11a20:	and	r3, r3, r4
   11a24:	str	r3, [sp, #40]	; 0x28
   11a28:	b	113ac <dcngettext@plt+0x384>
   11a2c:	bl	10fd4 <clearerr_unlocked@plt>
   11a30:	b	119dc <dcngettext@plt+0x9b4>
   11a34:	ldr	r3, [pc, #1496]	; 12014 <dcngettext@plt+0xfec>
   11a38:	ldrb	r9, [r3]
   11a3c:	cmp	r9, #10
   11a40:	beq	120ac <dcngettext@plt+0x1084>
   11a44:	ldr	r8, [sp, #16]
   11a48:	ldr	r3, [sp, #32]
   11a4c:	cmp	r3, #0
   11a50:	bne	11f70 <dcngettext@plt+0xf48>
   11a54:	ldr	r3, [fp, #12]
   11a58:	lsrs	r3, r3, #1
   11a5c:	beq	11a9c <dcngettext@plt+0xa74>
   11a60:	ldr	r7, [pc, #1552]	; 12078 <dcngettext@plt+0x1050>
   11a64:	add	sl, sp, #120	; 0x78
   11a68:	mov	r4, #0
   11a6c:	mov	r6, #1
   11a70:	ldrb	r2, [sl], #1
   11a74:	mov	r1, r7
   11a78:	mov	r0, r6
   11a7c:	bl	10f5c <__printf_chk@plt>
   11a80:	ldr	r3, [fp, #12]
   11a84:	add	r4, r4, #1
   11a88:	cmp	r4, r3, lsr #1
   11a8c:	bcc	11a70 <dcngettext@plt+0xa48>
   11a90:	ldr	r3, [sp, #32]
   11a94:	cmp	r3, #0
   11a98:	bne	11af8 <dcngettext@plt+0xad0>
   11a9c:	ldr	r3, [pc, #1344]	; 11fe4 <dcngettext@plt+0xfbc>
   11aa0:	ldr	r0, [r3]
   11aa4:	ldr	r3, [r0, #20]
   11aa8:	ldr	r2, [r0, #24]
   11aac:	cmp	r3, r2
   11ab0:	addcc	r1, r3, #1
   11ab4:	movcc	r2, #32
   11ab8:	strcc	r1, [r0, #20]
   11abc:	strbcc	r2, [r3]
   11ac0:	bcs	12120 <dcngettext@plt+0x10f8>
   11ac4:	ldr	r3, [pc, #1304]	; 11fe4 <dcngettext@plt+0xfbc>
   11ac8:	ldr	r0, [r3]
   11acc:	ldr	r2, [r0, #24]
   11ad0:	ldr	r3, [r0, #20]
   11ad4:	cmp	r3, r2
   11ad8:	addcc	r2, r3, #1
   11adc:	strcc	r2, [r0, #20]
   11ae0:	ldrbcc	r2, [sp, #96]	; 0x60
   11ae4:	strbcc	r2, [r3]
   11ae8:	bcs	12114 <dcngettext@plt+0x10ec>
   11aec:	mov	r1, r8
   11af0:	mov	r0, r5
   11af4:	bl	123c0 <dcngettext@plt+0x1398>
   11af8:	ldr	r3, [pc, #1252]	; 11fe4 <dcngettext@plt+0xfbc>
   11afc:	ldr	r0, [r3]
   11b00:	ldr	r3, [r0, #20]
   11b04:	ldr	r2, [r0, #24]
   11b08:	cmp	r3, r2
   11b0c:	addcc	r2, r3, #1
   11b10:	strcc	r2, [r0, #20]
   11b14:	ldrcc	r8, [sp, #40]	; 0x28
   11b18:	strbcc	r9, [r3]
   11b1c:	bcc	11768 <dcngettext@plt+0x740>
   11b20:	mov	r1, r9
   11b24:	bl	10fa4 <__overflow@plt>
   11b28:	ldr	r8, [sp, #40]	; 0x28
   11b2c:	b	11768 <dcngettext@plt+0x740>
   11b30:	ldr	r2, [sp, #44]	; 0x2c
   11b34:	ldrb	r2, [r2]
   11b38:	cmp	r2, #0
   11b3c:	bne	116ec <dcngettext@plt+0x6c4>
   11b40:	add	r2, r1, #1
   11b44:	sub	r0, r4, r2
   11b48:	cmp	r0, #1
   11b4c:	beq	11b68 <dcngettext@plt+0xb40>
   11b50:	ldrb	r0, [r7, r2]
   11b54:	cmp	r0, #32
   11b58:	cmpne	r0, #42	; 0x2a
   11b5c:	movne	r0, #1
   11b60:	moveq	r0, #0
   11b64:	beq	11e44 <dcngettext@plt+0xe1c>
   11b68:	ldr	r3, [pc, #1188]	; 12014 <dcngettext@plt+0xfec>
   11b6c:	ldr	r1, [r3, #4]
   11b70:	cmp	r1, #0
   11b74:	movne	r1, #1
   11b78:	ldrne	r3, [pc, #1172]	; 12014 <dcngettext@plt+0xfec>
   11b7c:	strne	r1, [r3, #4]
   11b80:	beq	116ec <dcngettext@plt+0x6c4>
   11b84:	ldr	r3, [sp, #56]	; 0x38
   11b88:	cmp	r3, #0
   11b8c:	add	r3, r7, r2
   11b90:	str	r3, [sp, #52]	; 0x34
   11b94:	ldreq	r6, [sp, #44]	; 0x2c
   11b98:	beq	11c10 <dcngettext@plt+0xbe8>
   11b9c:	ldr	r6, [sp, #52]	; 0x34
   11ba0:	sub	r2, r4, r2
   11ba4:	sub	lr, r2, #1
   11ba8:	mov	ip, r6
   11bac:	mov	r0, #0
   11bb0:	mov	r3, #10
   11bb4:	cmp	r2, r0
   11bb8:	bls	12218 <dcngettext@plt+0x11f0>
   11bbc:	ldrb	r1, [r6, r0]
   11bc0:	cmp	r1, #0
   11bc4:	beq	11bfc <dcngettext@plt+0xbd4>
   11bc8:	cmp	r1, #92	; 0x5c
   11bcc:	bne	120f4 <dcngettext@plt+0x10cc>
   11bd0:	cmp	r0, lr
   11bd4:	beq	11bf8 <dcngettext@plt+0xbd0>
   11bd8:	add	r0, r0, #1
   11bdc:	ldrb	r1, [r6, r0]
   11be0:	cmp	r1, #110	; 0x6e
   11be4:	beq	12138 <dcngettext@plt+0x1110>
   11be8:	cmp	r1, #114	; 0x72
   11bec:	beq	1212c <dcngettext@plt+0x1104>
   11bf0:	cmp	r1, #92	; 0x5c
   11bf4:	beq	120f4 <dcngettext@plt+0x10cc>
   11bf8:	mov	r1, #0
   11bfc:	adds	r1, r1, #0
   11c00:	ldr	r6, [sp, #44]	; 0x2c
   11c04:	movne	r1, #1
   11c08:	cmp	r1, #0
   11c0c:	beq	116ec <dcngettext@plt+0x6c4>
   11c10:	ldr	r3, [sp, #48]	; 0x30
   11c14:	cmp	r3, #0
   11c18:	bne	11c30 <dcngettext@plt+0xc08>
   11c1c:	ldr	r1, [pc, #1048]	; 1203c <dcngettext@plt+0x1014>
   11c20:	ldr	r0, [sp, #52]	; 0x34
   11c24:	bl	10db8 <strcmp@plt>
   11c28:	cmp	r0, #0
   11c2c:	beq	116ec <dcngettext@plt+0x6c4>
   11c30:	ldrb	r3, [fp, #2]
   11c34:	cmp	r3, #0
   11c38:	ldrne	r3, [sp, #36]	; 0x24
   11c3c:	strne	r3, [sp, #44]	; 0x2c
   11c40:	bne	11c5c <dcngettext@plt+0xc34>
   11c44:	mov	r1, #10
   11c48:	ldr	r0, [sp, #52]	; 0x34
   11c4c:	bl	10f20 <strchr@plt>
   11c50:	adds	r3, r0, #0
   11c54:	movne	r3, #1
   11c58:	str	r3, [sp, #44]	; 0x2c
   11c5c:	add	r2, sp, #111	; 0x6f
   11c60:	add	r1, sp, #140	; 0x8c
   11c64:	ldr	r0, [sp, #52]	; 0x34
   11c68:	bl	124b8 <dcngettext@plt+0x1490>
   11c6c:	ldr	r2, [sp, #44]	; 0x2c
   11c70:	and	r3, r2, #1
   11c74:	str	r3, [sp, #56]	; 0x38
   11c78:	subs	r3, r0, #0
   11c7c:	str	r3, [sp, #68]	; 0x44
   11c80:	bne	11ce0 <dcngettext@plt+0xcb8>
   11c84:	ldrd	r0, [sp, #72]	; 0x48
   11c88:	ldrb	r3, [fp, #2]
   11c8c:	adds	r0, r0, #1
   11c90:	adc	r1, r1, #0
   11c94:	cmp	r3, #0
   11c98:	strd	r0, [sp, #72]	; 0x48
   11c9c:	bne	11cd4 <dcngettext@plt+0xcac>
   11ca0:	cmp	r2, #0
   11ca4:	bne	11e10 <dcngettext@plt+0xde8>
   11ca8:	ldr	r1, [sp, #56]	; 0x38
   11cac:	ldr	r0, [sp, #52]	; 0x34
   11cb0:	bl	123c0 <dcngettext@plt+0x1398>
   11cb4:	ldr	r1, [pc, #960]	; 1207c <dcngettext@plt+0x1054>
   11cb8:	mov	r2, #5
   11cbc:	mov	r0, #0
   11cc0:	bl	10e30 <dcgettext@plt>
   11cc4:	ldr	r1, [pc, #948]	; 12080 <dcngettext@plt+0x1058>
   11cc8:	mov	r2, r0
   11ccc:	mov	r0, #1
   11cd0:	bl	10f5c <__printf_chk@plt>
   11cd4:	ldr	r3, [sp, #16]
   11cd8:	str	r3, [sp, #68]	; 0x44
   11cdc:	b	11448 <dcngettext@plt+0x420>
   11ce0:	ldrb	r3, [fp, #1]
   11ce4:	cmp	r3, #0
   11ce8:	beq	11cf8 <dcngettext@plt+0xcd0>
   11cec:	ldrb	r3, [sp, #111]	; 0x6f
   11cf0:	cmp	r3, #0
   11cf4:	bne	11cd4 <dcngettext@plt+0xcac>
   11cf8:	ldr	r3, [fp, #12]
   11cfc:	lsrs	r7, r3, #1
   11d00:	beq	11f14 <dcngettext@plt+0xeec>
   11d04:	bl	10ed8 <__ctype_tolower_loc@plt>
   11d08:	mov	r4, #0
   11d0c:	mov	r2, r6
   11d10:	add	r1, sp, #140	; 0x8c
   11d14:	ldr	r0, [r0]
   11d18:	b	11d4c <dcngettext@plt+0xd24>
   11d1c:	ldr	lr, [pc, #864]	; 12084 <dcngettext@plt+0x105c>
   11d20:	and	r3, r3, #15
   11d24:	ldrb	ip, [r2, #1]
   11d28:	add	r3, lr, r3
   11d2c:	ldrb	r3, [r3, #264]	; 0x108
   11d30:	ldr	ip, [r0, ip, lsl #2]
   11d34:	cmp	ip, r3
   11d38:	bne	11d6c <dcngettext@plt+0xd44>
   11d3c:	add	r4, r4, #1
   11d40:	cmp	r7, r4
   11d44:	add	r2, r2, #2
   11d48:	beq	11f14 <dcngettext@plt+0xeec>
   11d4c:	ldrb	r3, [r1], #1
   11d50:	ldr	ip, [pc, #812]	; 12084 <dcngettext@plt+0x105c>
   11d54:	ldrb	lr, [r6, r4, lsl #1]
   11d58:	add	ip, ip, r3, lsr #4
   11d5c:	ldrb	ip, [ip, #264]	; 0x108
   11d60:	ldr	lr, [r0, lr, lsl #2]
   11d64:	cmp	lr, ip
   11d68:	beq	11d1c <dcngettext@plt+0xcf4>
   11d6c:	cmp	r7, r4
   11d70:	beq	11f14 <dcngettext@plt+0xeec>
   11d74:	ldrd	r0, [sp, #80]	; 0x50
   11d78:	ldrb	r3, [fp, #2]
   11d7c:	adds	r0, r0, #1
   11d80:	adc	r1, r1, #0
   11d84:	cmp	r3, #0
   11d88:	strd	r0, [sp, #80]	; 0x50
   11d8c:	bne	11cd4 <dcngettext@plt+0xcac>
   11d90:	ldr	r3, [sp, #44]	; 0x2c
   11d94:	cmp	r3, #0
   11d98:	beq	12104 <dcngettext@plt+0x10dc>
   11d9c:	ldr	r3, [pc, #576]	; 11fe4 <dcngettext@plt+0xfbc>
   11da0:	ldr	r0, [r3]
   11da4:	ldr	r3, [r0, #20]
   11da8:	ldr	r2, [r0, #24]
   11dac:	cmp	r3, r2
   11db0:	addcc	r1, r3, #1
   11db4:	movcc	r2, #92	; 0x5c
   11db8:	strcc	r1, [r0, #20]
   11dbc:	strbcc	r2, [r3]
   11dc0:	bcs	1220c <dcngettext@plt+0x11e4>
   11dc4:	ldr	r1, [sp, #56]	; 0x38
   11dc8:	ldr	r0, [sp, #52]	; 0x34
   11dcc:	bl	123c0 <dcngettext@plt+0x1398>
   11dd0:	cmp	r7, r4
   11dd4:	beq	11f58 <dcngettext@plt+0xf30>
   11dd8:	mov	r2, #5
   11ddc:	ldr	r1, [pc, #676]	; 12088 <dcngettext@plt+0x1060>
   11de0:	mov	r0, #0
   11de4:	b	11cc0 <dcngettext@plt+0xc98>
   11de8:	mov	r6, r1
   11dec:	b	11500 <dcngettext@plt+0x4d8>
   11df0:	ldrb	r3, [fp]
   11df4:	cmp	r3, #0
   11df8:	bne	11e5c <dcngettext@plt+0xe34>
   11dfc:	ldr	r3, [sp, #40]	; 0x28
   11e00:	eor	r0, r3, #1
   11e04:	uxtb	r0, r0
   11e08:	add	sp, sp, #164	; 0xa4
   11e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e10:	ldr	r3, [pc, #460]	; 11fe4 <dcngettext@plt+0xfbc>
   11e14:	ldr	r0, [r3]
   11e18:	ldr	r3, [r0, #20]
   11e1c:	ldr	r2, [r0, #24]
   11e20:	cmp	r3, r2
   11e24:	addcc	r1, r3, #1
   11e28:	movcc	r2, #92	; 0x5c
   11e2c:	strcc	r1, [r0, #20]
   11e30:	strbcc	r2, [r3]
   11e34:	bcc	11ca8 <dcngettext@plt+0xc80>
   11e38:	mov	r1, #92	; 0x5c
   11e3c:	bl	10fa4 <__overflow@plt>
   11e40:	b	11ca8 <dcngettext@plt+0xc80>
   11e44:	ldr	r3, [pc, #456]	; 12014 <dcngettext@plt+0xfec>
   11e48:	ldr	ip, [r3, #4]
   11e4c:	cmp	ip, #1
   11e50:	strne	r0, [r3, #4]
   11e54:	addne	r2, r1, #2
   11e58:	b	11b84 <dcngettext@plt+0xb5c>
   11e5c:	ldr	r3, [pc, #480]	; 12044 <dcngettext@plt+0x101c>
   11e60:	ldr	r0, [r3]
   11e64:	bl	13c48 <dcngettext@plt+0x2c20>
   11e68:	cmn	r0, #1
   11e6c:	bne	11dfc <dcngettext@plt+0xdd4>
   11e70:	bl	10f2c <__errno_location@plt>
   11e74:	mov	r2, #5
   11e78:	ldr	r1, [pc, #448]	; 12040 <dcngettext@plt+0x1018>
   11e7c:	ldr	r4, [r0]
   11e80:	mov	r0, #0
   11e84:	bl	10e30 <dcgettext@plt>
   11e88:	mov	r1, r4
   11e8c:	mov	r2, r0
   11e90:	mov	r0, #1
   11e94:	bl	10ea8 <error@plt>
   11e98:	mov	r0, r3
   11e9c:	mov	r2, #5
   11ea0:	ldr	r1, [pc, #484]	; 1208c <dcngettext@plt+0x1064>
   11ea4:	mov	r6, r3
   11ea8:	bl	10e30 <dcgettext@plt>
   11eac:	ldr	r2, [sp, #64]	; 0x40
   11eb0:	mov	r1, #3
   11eb4:	mov	r5, r0
   11eb8:	mov	r0, r6
   11ebc:	bl	16eb0 <dcngettext@plt+0x5e88>
   11ec0:	mov	r2, r5
   11ec4:	mov	r1, r6
   11ec8:	mov	r3, r0
   11ecc:	mov	r0, r6
   11ed0:	bl	10ea8 <error@plt>
   11ed4:	b	1197c <dcngettext@plt+0x954>
   11ed8:	mov	r0, r3
   11edc:	mov	r2, #5
   11ee0:	ldr	r1, [pc, #424]	; 12090 <dcngettext@plt+0x1068>
   11ee4:	mov	r4, r3
   11ee8:	bl	10e30 <dcgettext@plt>
   11eec:	ldr	r2, [sp, #64]	; 0x40
   11ef0:	mov	r1, #3
   11ef4:	mov	r5, r0
   11ef8:	mov	r0, r4
   11efc:	bl	16eb0 <dcngettext@plt+0x5e88>
   11f00:	mov	r2, r5
   11f04:	mov	r1, r4
   11f08:	mov	r3, r0
   11f0c:	mov	r0, #1
   11f10:	bl	10ea8 <error@plt>
   11f14:	ldrb	r3, [fp, #2]
   11f18:	cmp	r3, #0
   11f1c:	str	r3, [sp, #88]	; 0x58
   11f20:	bne	11cd4 <dcngettext@plt+0xcac>
   11f24:	ldrb	r3, [fp, #4]
   11f28:	mov	r4, r7
   11f2c:	cmp	r3, #0
   11f30:	str	r3, [sp, #88]	; 0x58
   11f34:	bne	11cd4 <dcngettext@plt+0xcac>
   11f38:	ldr	r3, [sp, #44]	; 0x2c
   11f3c:	cmp	r3, #0
   11f40:	bne	12248 <dcngettext@plt+0x1220>
   11f44:	ldr	r1, [sp, #88]	; 0x58
   11f48:	ldr	r0, [sp, #52]	; 0x34
   11f4c:	bl	123c0 <dcngettext@plt+0x1398>
   11f50:	ldr	r3, [sp, #68]	; 0x44
   11f54:	str	r3, [sp, #88]	; 0x58
   11f58:	ldrb	r0, [fp, #4]
   11f5c:	cmp	r0, #0
   11f60:	bne	11cd4 <dcngettext@plt+0xcac>
   11f64:	mov	r2, #5
   11f68:	ldr	r1, [pc, #292]	; 12094 <dcngettext@plt+0x106c>
   11f6c:	b	11cc0 <dcngettext@plt+0xc98>
   11f70:	ldr	r3, [pc, #108]	; 11fe4 <dcngettext@plt+0xfbc>
   11f74:	mov	r2, #3
   11f78:	mov	r1, #1
   11f7c:	ldr	r3, [r3]
   11f80:	ldr	r0, [pc, #192]	; 12048 <dcngettext@plt+0x1020>
   11f84:	bl	10e0c <fwrite_unlocked@plt>
   11f88:	ldr	r3, [pc, #84]	; 11fe4 <dcngettext@plt+0xfbc>
   11f8c:	mov	r2, #2
   11f90:	mov	r1, #1
   11f94:	ldr	r3, [r3]
   11f98:	ldr	r0, [pc, #248]	; 12098 <dcngettext@plt+0x1070>
   11f9c:	bl	10e0c <fwrite_unlocked@plt>
   11fa0:	mov	r1, r8
   11fa4:	mov	r0, r5
   11fa8:	bl	123c0 <dcngettext@plt+0x1398>
   11fac:	ldr	r3, [pc, #48]	; 11fe4 <dcngettext@plt+0xfbc>
   11fb0:	mov	r2, #4
   11fb4:	mov	r1, #1
   11fb8:	ldr	r3, [r3]
   11fbc:	ldr	r0, [pc, #216]	; 1209c <dcngettext@plt+0x1074>
   11fc0:	bl	10e0c <fwrite_unlocked@plt>
   11fc4:	ldr	r3, [fp, #12]
   11fc8:	lsrs	r3, r3, #1
   11fcc:	bne	11a60 <dcngettext@plt+0xa38>
   11fd0:	b	11af8 <dcngettext@plt+0xad0>
   11fd4:	andeq	r9, r1, ip, ror #27
   11fd8:	andeq	sl, r1, r4, lsl #6
   11fdc:	andeq	sl, r1, ip, asr r2
   11fe0:	andeq	r2, r1, r8, asr #20
   11fe4:	andeq	fp, r2, ip, ror #2
   11fe8:	andeq	r9, r1, ip, asr fp
   11fec:	andeq	sl, r1, ip, asr #6
   11ff0:	andeq	fp, r2, r4, ror r1
   11ff4:	andeq	r0, r0, r1, lsl #2
   11ff8:	andeq	r0, r0, r3, lsl #2
   11ffc:	andeq	sl, r1, ip, lsl r3
   12000:	andeq	sl, r1, ip, lsr #6
   12004:	andeq	fp, r2, r8, lsl #2
   12008:	andeq	sl, r1, ip, lsr r3
   1200c:	andeq	r9, r1, r0, asr ip
   12010:	andeq	sl, r1, r8, asr r2
   12014:	andeq	fp, r2, r0, lsl #2
   12018:	andeq	sl, r1, r4, asr r3
   1201c:	andeq	sl, r1, r8, ror r3
   12020:			; <UNDEFINED> instruction: 0x0001a3b4
   12024:	strdeq	sl, [r1], -r0
   12028:	andeq	sl, r1, ip, lsr r4
   1202c:	andeq	sl, r1, r4, lsl #9
   12030:	andeq	sl, r1, r4, asr #9
   12034:	andeq	sl, r1, r4, lsl #10
   12038:	andeq	fp, r2, r8, asr r1
   1203c:	andeq	r9, r1, r8, asr #24
   12040:	andeq	sl, r1, r4, lsl #11
   12044:	andeq	fp, r2, r8, ror #2
   12048:	andeq	r9, r1, ip, asr #25
   1204c:			; <UNDEFINED> instruction: 0x0001a5b0
   12050:	andeq	sl, r1, r0, lsl #17
   12054:	andeq	r4, pc, r0, asr #4
   12058:	andeq	sl, r1, r8, ror r6
   1205c:	andeq	sl, r1, r8, asr #12
   12060:	ldrdeq	sl, [r1], -r4
   12064:	andeq	sl, r1, r4, lsr #13
   12068:	andeq	sl, r1, r0, lsr r7
   1206c:	andeq	sl, r1, r0, lsl #14
   12070:	andeq	r9, r1, ip, asr #24
   12074:	andeq	sl, r1, r8, lsl #12
   12078:	andeq	sl, r1, r8, lsl #15
   1207c:	andeq	sl, r1, r0, ror #11
   12080:	strdeq	sl, [r1], -r4
   12084:	andeq	r9, r1, r4, lsr #22
   12088:	strdeq	sl, [r1], -ip
   1208c:	andeq	sl, r1, r8, lsl r6
   12090:	muleq	r1, r4, r5
   12094:	andeq	sl, r1, r4, lsl #12
   12098:	andeq	sl, r1, ip, ror r7
   1209c:	andeq	sl, r1, r0, lsl #15
   120a0:	andeq	fp, r2, ip, ror #2
   120a4:	andeq	sl, r1, r0, ror #14
   120a8:	andeq	sl, r1, r4, asr #10
   120ac:	mov	r1, #92	; 0x5c
   120b0:	mov	r0, r5
   120b4:	bl	10f20 <strchr@plt>
   120b8:	cmp	r0, #0
   120bc:	beq	12140 <dcngettext@plt+0x1118>
   120c0:	ldr	r3, [pc, #-40]	; 120a0 <dcngettext@plt+0x1078>
   120c4:	ldr	r0, [r3]
   120c8:	ldr	r3, [r0, #20]
   120cc:	ldr	r2, [r0, #24]
   120d0:	cmp	r3, r2
   120d4:	addcc	r1, r3, #1
   120d8:	movcc	r2, #92	; 0x5c
   120dc:	strcc	r1, [r0, #20]
   120e0:	strbcc	r2, [r3]
   120e4:	bcc	11a48 <dcngettext@plt+0xa20>
   120e8:	mov	r1, #92	; 0x5c
   120ec:	bl	10fa4 <__overflow@plt>
   120f0:	b	11a48 <dcngettext@plt+0xa20>
   120f4:	strb	r1, [ip]
   120f8:	add	r0, r0, #1
   120fc:	add	ip, ip, #1
   12100:	b	11bb4 <dcngettext@plt+0xb8c>
   12104:	ldr	r1, [sp, #44]	; 0x2c
   12108:	ldr	r0, [sp, #52]	; 0x34
   1210c:	bl	123c0 <dcngettext@plt+0x1398>
   12110:	b	11dd8 <dcngettext@plt+0xdb0>
   12114:	ldr	r1, [sp, #100]	; 0x64
   12118:	bl	10fa4 <__overflow@plt>
   1211c:	b	11aec <dcngettext@plt+0xac4>
   12120:	mov	r1, #32
   12124:	bl	10fa4 <__overflow@plt>
   12128:	b	11ac4 <dcngettext@plt+0xa9c>
   1212c:	mov	r1, #13
   12130:	strb	r1, [ip]
   12134:	b	120f8 <dcngettext@plt+0x10d0>
   12138:	strb	r3, [ip]
   1213c:	b	120f8 <dcngettext@plt+0x10d0>
   12140:	mov	r1, r9
   12144:	mov	r0, r5
   12148:	bl	10f20 <strchr@plt>
   1214c:	cmp	r0, #0
   12150:	bne	120c0 <dcngettext@plt+0x1098>
   12154:	mov	r1, #13
   12158:	mov	r0, r5
   1215c:	bl	10f20 <strchr@plt>
   12160:	cmp	r0, #0
   12164:	bne	120c0 <dcngettext@plt+0x1098>
   12168:	b	11a44 <dcngettext@plt+0xa1c>
   1216c:	mov	r2, #5
   12170:	ldr	r1, [pc, #-212]	; 120a4 <dcngettext@plt+0x107c>
   12174:	mov	r0, r5
   12178:	bl	10e30 <dcgettext@plt>
   1217c:	ldr	r2, [sp, #64]	; 0x40
   12180:	mov	r1, #3
   12184:	mov	r6, r0
   12188:	mov	r0, r5
   1218c:	bl	16eb0 <dcngettext@plt+0x5e88>
   12190:	mov	r2, r6
   12194:	mov	r1, r5
   12198:	mov	r3, r0
   1219c:	mov	r0, r5
   121a0:	bl	10ea8 <error@plt>
   121a4:	b	1197c <dcngettext@plt+0x954>
   121a8:	ldr	r6, [sp, #52]	; 0x34
   121ac:	mov	r3, #0
   121b0:	sub	r4, r1, #1
   121b4:	mov	ip, #10
   121b8:	cmp	r1, r3
   121bc:	bls	12254 <dcngettext@plt+0x122c>
   121c0:	ldrb	r2, [r6, r3]
   121c4:	cmp	r2, #0
   121c8:	beq	116ec <dcngettext@plt+0x6c4>
   121cc:	cmp	r2, #92	; 0x5c
   121d0:	bne	121fc <dcngettext@plt+0x11d4>
   121d4:	cmp	r3, r4
   121d8:	beq	116ec <dcngettext@plt+0x6c4>
   121dc:	add	r3, r3, #1
   121e0:	ldrb	r2, [r6, r3]
   121e4:	cmp	r2, #110	; 0x6e
   121e8:	beq	12240 <dcngettext@plt+0x1218>
   121ec:	cmp	r2, #114	; 0x72
   121f0:	beq	12234 <dcngettext@plt+0x120c>
   121f4:	cmp	r2, #92	; 0x5c
   121f8:	bne	116ec <dcngettext@plt+0x6c4>
   121fc:	strb	r2, [lr]
   12200:	add	r3, r3, #1
   12204:	add	lr, lr, #1
   12208:	b	121b8 <dcngettext@plt+0x1190>
   1220c:	mov	r1, #92	; 0x5c
   12210:	bl	10fa4 <__overflow@plt>
   12214:	b	11dc4 <dcngettext@plt+0xd9c>
   12218:	add	r4, r7, r4
   1221c:	cmp	ip, r4
   12220:	ldrcs	r1, [sp, #52]	; 0x34
   12224:	movcc	r2, #0
   12228:	strbcc	r2, [ip]
   1222c:	ldrcc	r1, [sp, #52]	; 0x34
   12230:	b	11bfc <dcngettext@plt+0xbd4>
   12234:	mov	r2, #13
   12238:	strb	r2, [lr]
   1223c:	b	12200 <dcngettext@plt+0x11d8>
   12240:	strb	ip, [lr]
   12244:	b	12200 <dcngettext@plt+0x11d8>
   12248:	ldr	r3, [sp, #68]	; 0x44
   1224c:	str	r3, [sp, #88]	; 0x58
   12250:	b	11d9c <dcngettext@plt+0xd74>
   12254:	cmp	r0, lr
   12258:	movhi	r3, #0
   1225c:	strbhi	r3, [lr]
   12260:	ldr	r3, [sp, #52]	; 0x34
   12264:	cmp	r3, #0
   12268:	bne	115b4 <dcngettext@plt+0x58c>
   1226c:	b	116ec <dcngettext@plt+0x6c4>
   12270:	ldr	r1, [pc, #-464]	; 120a8 <dcngettext@plt+0x1080>
   12274:	mov	r2, #5
   12278:	mov	r0, #0
   1227c:	bl	10e30 <dcgettext@plt>
   12280:	mov	r1, #0
   12284:	mov	r2, r0
   12288:	mov	r0, r1
   1228c:	bl	10ea8 <error@plt>
   12290:	mov	r0, #1
   12294:	bl	12648 <dcngettext@plt+0x1620>
   12298:	mov	fp, #0
   1229c:	mov	lr, #0
   122a0:	pop	{r1}		; (ldr r1, [sp], #4)
   122a4:	mov	r2, sp
   122a8:	push	{r2}		; (str r2, [sp, #-4]!)
   122ac:	push	{r0}		; (str r0, [sp, #-4]!)
   122b0:	ldr	ip, [pc, #16]	; 122c8 <dcngettext@plt+0x12a0>
   122b4:	push	{ip}		; (str ip, [sp, #-4]!)
   122b8:	ldr	r0, [pc, #12]	; 122cc <dcngettext@plt+0x12a4>
   122bc:	ldr	r3, [pc, #12]	; 122d0 <dcngettext@plt+0x12a8>
   122c0:	bl	10ec0 <__libc_start_main@plt>
   122c4:	bl	11010 <abort@plt>
   122c8:	strdeq	r9, [r1], -ip
   122cc:	andeq	r1, r1, r4, lsr r0
   122d0:	muleq	r1, ip, sl
   122d4:	ldr	r3, [pc, #20]	; 122f0 <dcngettext@plt+0x12c8>
   122d8:	ldr	r2, [pc, #20]	; 122f4 <dcngettext@plt+0x12cc>
   122dc:	add	r3, pc, r3
   122e0:	ldr	r2, [r3, r2]
   122e4:	cmp	r2, #0
   122e8:	bxeq	lr
   122ec:	b	10ee4 <__gmon_start__@plt>
   122f0:	andeq	r8, r1, ip, lsl sp
   122f4:	strdeq	r0, [r0], -r4
   122f8:	ldr	r3, [pc, #28]	; 1231c <dcngettext@plt+0x12f4>
   122fc:	ldr	r0, [pc, #28]	; 12320 <dcngettext@plt+0x12f8>
   12300:	sub	r3, r3, r0
   12304:	cmp	r3, #6
   12308:	bxls	lr
   1230c:	ldr	r3, [pc, #16]	; 12324 <dcngettext@plt+0x12fc>
   12310:	cmp	r3, #0
   12314:	bxeq	lr
   12318:	bx	r3
   1231c:	andeq	fp, r2, r3, asr r1
   12320:	andeq	fp, r2, r0, asr r1
   12324:	andeq	r0, r0, r0
   12328:	ldr	r1, [pc, #36]	; 12354 <dcngettext@plt+0x132c>
   1232c:	ldr	r0, [pc, #36]	; 12358 <dcngettext@plt+0x1330>
   12330:	sub	r1, r1, r0
   12334:	asr	r1, r1, #2
   12338:	add	r1, r1, r1, lsr #31
   1233c:	asrs	r1, r1, #1
   12340:	bxeq	lr
   12344:	ldr	r3, [pc, #16]	; 1235c <dcngettext@plt+0x1334>
   12348:	cmp	r3, #0
   1234c:	bxeq	lr
   12350:	bx	r3
   12354:	andeq	fp, r2, r0, asr r1
   12358:	andeq	fp, r2, r0, asr r1
   1235c:	andeq	r0, r0, r0
   12360:	push	{r4, lr}
   12364:	ldr	r4, [pc, #24]	; 12384 <dcngettext@plt+0x135c>
   12368:	ldrb	r3, [r4]
   1236c:	cmp	r3, #0
   12370:	popne	{r4, pc}
   12374:	bl	122f8 <dcngettext@plt+0x12d0>
   12378:	mov	r3, #1
   1237c:	strb	r3, [r4]
   12380:	pop	{r4, pc}
   12384:	andeq	fp, r2, r0, ror r1
   12388:	ldr	r0, [pc, #40]	; 123b8 <dcngettext@plt+0x1390>
   1238c:	ldr	r3, [r0]
   12390:	cmp	r3, #0
   12394:	bne	1239c <dcngettext@plt+0x1374>
   12398:	b	12328 <dcngettext@plt+0x1300>
   1239c:	ldr	r3, [pc, #24]	; 123bc <dcngettext@plt+0x1394>
   123a0:	cmp	r3, #0
   123a4:	beq	12398 <dcngettext@plt+0x1370>
   123a8:	push	{r4, lr}
   123ac:	blx	r3
   123b0:	pop	{r4, lr}
   123b4:	b	12328 <dcngettext@plt+0x1300>
   123b8:	andeq	sl, r2, r4, lsl pc
   123bc:	andeq	r0, r0, r0
   123c0:	cmp	r1, #0
   123c4:	beq	12490 <dcngettext@plt+0x1468>
   123c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   123cc:	mov	r4, r0
   123d0:	ldrb	r1, [r0]
   123d4:	cmp	r1, #0
   123d8:	beq	124a4 <dcngettext@plt+0x147c>
   123dc:	ldr	r5, [pc, #196]	; 124a8 <dcngettext@plt+0x1480>
   123e0:	ldr	sl, [pc, #196]	; 124ac <dcngettext@plt+0x1484>
   123e4:	ldr	r9, [pc, #196]	; 124b0 <dcngettext@plt+0x1488>
   123e8:	ldr	r8, [pc, #196]	; 124b4 <dcngettext@plt+0x148c>
   123ec:	mov	r7, #2
   123f0:	mov	r6, #1
   123f4:	b	12434 <dcngettext@plt+0x140c>
   123f8:	cmp	r1, #92	; 0x5c
   123fc:	beq	12478 <dcngettext@plt+0x1450>
   12400:	cmp	r1, #10
   12404:	beq	12460 <dcngettext@plt+0x1438>
   12408:	ldr	r0, [r5]
   1240c:	ldr	r3, [r0, #20]
   12410:	ldr	r2, [r0, #24]
   12414:	add	ip, r3, #1
   12418:	cmp	r3, r2
   1241c:	strcc	ip, [r0, #20]
   12420:	strbcc	r1, [r3]
   12424:	bcs	1249c <dcngettext@plt+0x1474>
   12428:	ldrb	r1, [r4, #1]!
   1242c:	cmp	r1, #0
   12430:	beq	1245c <dcngettext@plt+0x1434>
   12434:	cmp	r1, #13
   12438:	bne	123f8 <dcngettext@plt+0x13d0>
   1243c:	mov	r1, r6
   12440:	ldr	r3, [r5]
   12444:	mov	r2, r7
   12448:	mov	r0, sl
   1244c:	bl	10e0c <fwrite_unlocked@plt>
   12450:	ldrb	r1, [r4, #1]!
   12454:	cmp	r1, #0
   12458:	bne	12434 <dcngettext@plt+0x140c>
   1245c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12460:	ldr	r3, [r5]
   12464:	mov	r2, r7
   12468:	mov	r1, r6
   1246c:	mov	r0, r8
   12470:	bl	10e0c <fwrite_unlocked@plt>
   12474:	b	12428 <dcngettext@plt+0x1400>
   12478:	ldr	r3, [r5]
   1247c:	mov	r2, r7
   12480:	mov	r1, r6
   12484:	mov	r0, r9
   12488:	bl	10e0c <fwrite_unlocked@plt>
   1248c:	b	12428 <dcngettext@plt+0x1400>
   12490:	ldr	r3, [pc, #16]	; 124a8 <dcngettext@plt+0x1480>
   12494:	ldr	r1, [r3]
   12498:	b	10d94 <fputs_unlocked@plt>
   1249c:	bl	10fa4 <__overflow@plt>
   124a0:	b	12428 <dcngettext@plt+0x1400>
   124a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124a8:	andeq	fp, r2, ip, ror #2
   124ac:	andeq	r9, r1, r0, asr #24
   124b0:	andeq	r9, r1, r4, asr #24
   124b4:	andeq	r9, r1, ip, lsr ip
   124b8:	push	{r4, r5, r6, r7, r8, lr}
   124bc:	mov	r4, r1
   124c0:	ldr	r1, [pc, #364]	; 12634 <dcngettext@plt+0x160c>
   124c4:	mov	r5, r2
   124c8:	mov	r6, r0
   124cc:	bl	10db8 <strcmp@plt>
   124d0:	mov	r3, #0
   124d4:	strb	r3, [r5]
   124d8:	cmp	r0, r3
   124dc:	bne	12588 <dcngettext@plt+0x1560>
   124e0:	ldr	r1, [pc, #336]	; 12638 <dcngettext@plt+0x1610>
   124e4:	ldr	r3, [pc, #336]	; 1263c <dcngettext@plt+0x1614>
   124e8:	mov	r2, #1
   124ec:	ldr	r5, [r1]
   124f0:	mov	r1, #2
   124f4:	mov	r0, r5
   124f8:	strb	r2, [r3]
   124fc:	bl	13c14 <dcngettext@plt+0x2bec>
   12500:	mov	r1, r4
   12504:	mov	r0, r5
   12508:	bl	12b2c <dcngettext@plt+0x1b04>
   1250c:	subs	r4, r0, #0
   12510:	beq	1251c <dcngettext@plt+0x14f4>
   12514:	bl	10f2c <__errno_location@plt>
   12518:	ldr	r4, [r0]
   1251c:	mov	r0, r5
   12520:	bl	10fd4 <clearerr_unlocked@plt>
   12524:	cmp	r4, #0
   12528:	bne	12558 <dcngettext@plt+0x1530>
   1252c:	mov	r4, #1
   12530:	mov	r0, r4
   12534:	pop	{r4, r5, r6, r7, r8, pc}
   12538:	bl	10f2c <__errno_location@plt>
   1253c:	ldr	r4, [r0]
   12540:	mov	r0, r7
   12544:	bl	13c48 <dcngettext@plt+0x2c20>
   12548:	cmp	r0, #0
   1254c:	beq	12524 <dcngettext@plt+0x14fc>
   12550:	cmp	r4, #0
   12554:	beq	125c8 <dcngettext@plt+0x15a0>
   12558:	mov	r2, r6
   1255c:	mov	r1, #3
   12560:	mov	r0, #0
   12564:	bl	16eb0 <dcngettext@plt+0x5e88>
   12568:	mov	r1, r4
   1256c:	ldr	r2, [pc, #204]	; 12640 <dcngettext@plt+0x1618>
   12570:	mov	r4, #0
   12574:	mov	r3, r0
   12578:	mov	r0, #0
   1257c:	bl	10ea8 <error@plt>
   12580:	mov	r0, r4
   12584:	pop	{r4, r5, r6, r7, r8, pc}
   12588:	ldr	r1, [pc, #180]	; 12644 <dcngettext@plt+0x161c>
   1258c:	mov	r0, r6
   12590:	bl	13d48 <dcngettext@plt+0x2d20>
   12594:	subs	r7, r0, #0
   12598:	beq	125d4 <dcngettext@plt+0x15ac>
   1259c:	mov	r1, #2
   125a0:	bl	13c14 <dcngettext@plt+0x2bec>
   125a4:	mov	r1, r4
   125a8:	mov	r0, r7
   125ac:	bl	12b2c <dcngettext@plt+0x1b04>
   125b0:	cmp	r0, #0
   125b4:	bne	12538 <dcngettext@plt+0x1510>
   125b8:	mov	r0, r7
   125bc:	bl	13c48 <dcngettext@plt+0x2c20>
   125c0:	cmp	r0, #0
   125c4:	beq	1252c <dcngettext@plt+0x1504>
   125c8:	bl	10f2c <__errno_location@plt>
   125cc:	ldr	r4, [r0]
   125d0:	b	12524 <dcngettext@plt+0x14fc>
   125d4:	ldr	r3, [pc, #96]	; 1263c <dcngettext@plt+0x1614>
   125d8:	ldrb	r4, [r3, #1]
   125dc:	cmp	r4, #0
   125e0:	beq	12628 <dcngettext@plt+0x1600>
   125e4:	bl	10f2c <__errno_location@plt>
   125e8:	ldr	r7, [r0]
   125ec:	cmp	r7, #2
   125f0:	moveq	r3, #1
   125f4:	strbeq	r3, [r5]
   125f8:	beq	12530 <dcngettext@plt+0x1508>
   125fc:	mov	r2, r6
   12600:	mov	r1, #3
   12604:	mov	r0, #0
   12608:	bl	16eb0 <dcngettext@plt+0x5e88>
   1260c:	mov	r1, r7
   12610:	ldr	r2, [pc, #40]	; 12640 <dcngettext@plt+0x1618>
   12614:	mov	r4, #0
   12618:	mov	r3, r0
   1261c:	mov	r0, #0
   12620:	bl	10ea8 <error@plt>
   12624:	b	12530 <dcngettext@plt+0x1508>
   12628:	bl	10f2c <__errno_location@plt>
   1262c:	ldr	r7, [r0]
   12630:	b	125fc <dcngettext@plt+0x15d4>
   12634:	andeq	r9, r1, r8, asr #24
   12638:	andeq	fp, r2, r8, ror #2
   1263c:	andeq	fp, r2, r4, ror r1
   12640:	andeq	sl, r1, r0, lsl #17
   12644:	andeq	r9, r1, ip, asr #24
   12648:	subs	r5, r0, #0
   1264c:	push	{r7, lr}
   12650:	sub	sp, sp, #56	; 0x38
   12654:	beq	12690 <dcngettext@plt+0x1668>
   12658:	ldr	r3, [pc, #848]	; 129b0 <dcngettext@plt+0x1988>
   1265c:	mov	r2, #5
   12660:	ldr	r1, [pc, #844]	; 129b4 <dcngettext@plt+0x198c>
   12664:	mov	r0, #0
   12668:	ldr	r4, [r3]
   1266c:	bl	10e30 <dcgettext@plt>
   12670:	ldr	r3, [pc, #832]	; 129b8 <dcngettext@plt+0x1990>
   12674:	mov	r1, #1
   12678:	ldr	r3, [r3]
   1267c:	mov	r2, r0
   12680:	mov	r0, r4
   12684:	bl	10f74 <__fprintf_chk@plt>
   12688:	mov	r0, r5
   1268c:	bl	10f08 <exit@plt>
   12690:	mov	r2, #5
   12694:	ldr	r1, [pc, #800]	; 129bc <dcngettext@plt+0x1994>
   12698:	bl	10e30 <dcgettext@plt>
   1269c:	ldr	r3, [pc, #788]	; 129b8 <dcngettext@plt+0x1990>
   126a0:	ldr	r7, [pc, #792]	; 129c0 <dcngettext@plt+0x1998>
   126a4:	ldr	r4, [pc, #792]	; 129c4 <dcngettext@plt+0x199c>
   126a8:	ldr	r2, [r3]
   126ac:	mov	r1, r0
   126b0:	mov	r0, #1
   126b4:	bl	10f5c <__printf_chk@plt>
   126b8:	mov	r2, #5
   126bc:	ldr	r1, [pc, #772]	; 129c8 <dcngettext@plt+0x19a0>
   126c0:	mov	r0, r5
   126c4:	bl	10e30 <dcgettext@plt>
   126c8:	mov	r3, #128	; 0x80
   126cc:	ldr	r2, [pc, #760]	; 129cc <dcngettext@plt+0x19a4>
   126d0:	mov	r1, r0
   126d4:	mov	r0, #1
   126d8:	bl	10f5c <__printf_chk@plt>
   126dc:	mov	r2, #5
   126e0:	ldr	r1, [pc, #744]	; 129d0 <dcngettext@plt+0x19a8>
   126e4:	mov	r0, r5
   126e8:	bl	10e30 <dcgettext@plt>
   126ec:	ldr	r1, [r7]
   126f0:	bl	10d94 <fputs_unlocked@plt>
   126f4:	mov	r2, #5
   126f8:	ldr	r1, [pc, #724]	; 129d4 <dcngettext@plt+0x19ac>
   126fc:	mov	r0, r5
   12700:	bl	10e30 <dcgettext@plt>
   12704:	ldr	r1, [r7]
   12708:	bl	10d94 <fputs_unlocked@plt>
   1270c:	mov	r2, #5
   12710:	ldr	r1, [pc, #704]	; 129d8 <dcngettext@plt+0x19b0>
   12714:	mov	r0, r5
   12718:	bl	10e30 <dcgettext@plt>
   1271c:	ldr	r1, [r7]
   12720:	bl	10d94 <fputs_unlocked@plt>
   12724:	mov	r2, #5
   12728:	ldr	r1, [pc, #684]	; 129dc <dcngettext@plt+0x19b4>
   1272c:	mov	r0, r5
   12730:	bl	10e30 <dcgettext@plt>
   12734:	ldr	r1, [r7]
   12738:	bl	10d94 <fputs_unlocked@plt>
   1273c:	mov	r2, #5
   12740:	ldr	r1, [pc, #664]	; 129e0 <dcngettext@plt+0x19b8>
   12744:	mov	r0, r5
   12748:	bl	10e30 <dcgettext@plt>
   1274c:	ldr	r1, [r7]
   12750:	bl	10d94 <fputs_unlocked@plt>
   12754:	mov	r2, #5
   12758:	ldr	r1, [pc, #644]	; 129e4 <dcngettext@plt+0x19bc>
   1275c:	mov	r0, r5
   12760:	bl	10e30 <dcgettext@plt>
   12764:	ldr	r1, [r7]
   12768:	bl	10d94 <fputs_unlocked@plt>
   1276c:	mov	r2, #5
   12770:	ldr	r1, [pc, #624]	; 129e8 <dcngettext@plt+0x19c0>
   12774:	mov	r0, r5
   12778:	bl	10e30 <dcgettext@plt>
   1277c:	ldr	r1, [r7]
   12780:	bl	10d94 <fputs_unlocked@plt>
   12784:	mov	r2, #5
   12788:	ldr	r1, [pc, #604]	; 129ec <dcngettext@plt+0x19c4>
   1278c:	mov	r0, r5
   12790:	bl	10e30 <dcgettext@plt>
   12794:	ldr	r1, [r7]
   12798:	bl	10d94 <fputs_unlocked@plt>
   1279c:	mov	r2, #5
   127a0:	ldr	r1, [pc, #584]	; 129f0 <dcngettext@plt+0x19c8>
   127a4:	mov	r0, r5
   127a8:	bl	10e30 <dcgettext@plt>
   127ac:	ldr	r1, [r7]
   127b0:	bl	10d94 <fputs_unlocked@plt>
   127b4:	mov	r2, #5
   127b8:	ldr	r1, [pc, #564]	; 129f4 <dcngettext@plt+0x19cc>
   127bc:	mov	r0, r5
   127c0:	bl	10e30 <dcgettext@plt>
   127c4:	ldr	r2, [pc, #556]	; 129f8 <dcngettext@plt+0x19d0>
   127c8:	mov	r1, r0
   127cc:	mov	r0, #1
   127d0:	bl	10f5c <__printf_chk@plt>
   127d4:	mov	r2, #5
   127d8:	ldr	r1, [pc, #540]	; 129fc <dcngettext@plt+0x19d4>
   127dc:	mov	r0, r5
   127e0:	bl	10e30 <dcgettext@plt>
   127e4:	ldr	r1, [r7]
   127e8:	bl	10d94 <fputs_unlocked@plt>
   127ec:	ldm	r4!, {r0, r1, r2, r3}
   127f0:	mov	lr, sp
   127f4:	stmia	lr!, {r0, r1, r2, r3}
   127f8:	ldm	r4!, {r0, r1, r2, r3}
   127fc:	ldr	ip, [sp]
   12800:	stmia	lr!, {r0, r1, r2, r3}
   12804:	cmp	ip, #0
   12808:	ldm	r4!, {r0, r1, r2, r3}
   1280c:	stmia	lr!, {r0, r1, r2, r3}
   12810:	ldm	r4, {r0, r1}
   12814:	moveq	r4, sp
   12818:	stm	lr, {r0, r1}
   1281c:	beq	1284c <dcngettext@plt+0x1824>
   12820:	ldr	r6, [pc, #472]	; 12a00 <dcngettext@plt+0x19d8>
   12824:	mov	r4, sp
   12828:	b	12838 <dcngettext@plt+0x1810>
   1282c:	ldr	ip, [r4, #8]!
   12830:	cmp	ip, #0
   12834:	beq	1284c <dcngettext@plt+0x1824>
   12838:	mov	r1, ip
   1283c:	mov	r0, r6
   12840:	bl	10db8 <strcmp@plt>
   12844:	cmp	r0, #0
   12848:	bne	1282c <dcngettext@plt+0x1804>
   1284c:	ldr	r4, [r4, #4]
   12850:	mov	r2, #5
   12854:	cmp	r4, #0
   12858:	ldr	r1, [pc, #420]	; 12a04 <dcngettext@plt+0x19dc>
   1285c:	beq	12904 <dcngettext@plt+0x18dc>
   12860:	mov	r0, #0
   12864:	bl	10e30 <dcgettext@plt>
   12868:	ldr	r3, [pc, #408]	; 12a08 <dcngettext@plt+0x19e0>
   1286c:	ldr	r2, [pc, #408]	; 12a0c <dcngettext@plt+0x19e4>
   12870:	mov	r1, r0
   12874:	mov	r0, #1
   12878:	bl	10f5c <__printf_chk@plt>
   1287c:	mov	r1, #0
   12880:	mov	r0, #5
   12884:	bl	10fb0 <setlocale@plt>
   12888:	cmp	r0, #0
   1288c:	ldreq	r6, [pc, #364]	; 12a00 <dcngettext@plt+0x19d8>
   12890:	beq	128ac <dcngettext@plt+0x1884>
   12894:	mov	r2, #3
   12898:	ldr	r1, [pc, #368]	; 12a10 <dcngettext@plt+0x19e8>
   1289c:	bl	11004 <strncmp@plt>
   128a0:	ldr	r6, [pc, #344]	; 12a00 <dcngettext@plt+0x19d8>
   128a4:	cmp	r0, #0
   128a8:	bne	12994 <dcngettext@plt+0x196c>
   128ac:	mov	r2, #5
   128b0:	ldr	r1, [pc, #348]	; 12a14 <dcngettext@plt+0x19ec>
   128b4:	mov	r0, #0
   128b8:	bl	10e30 <dcgettext@plt>
   128bc:	ldr	r3, [pc, #316]	; 12a00 <dcngettext@plt+0x19d8>
   128c0:	ldr	r2, [pc, #320]	; 12a08 <dcngettext@plt+0x19e0>
   128c4:	mov	r1, r0
   128c8:	mov	r0, #1
   128cc:	bl	10f5c <__printf_chk@plt>
   128d0:	mov	r2, #5
   128d4:	ldr	r1, [pc, #316]	; 12a18 <dcngettext@plt+0x19f0>
   128d8:	mov	r0, #0
   128dc:	bl	10e30 <dcgettext@plt>
   128e0:	ldr	r2, [pc, #308]	; 12a1c <dcngettext@plt+0x19f4>
   128e4:	cmp	r4, r6
   128e8:	ldr	r3, [pc, #304]	; 12a20 <dcngettext@plt+0x19f8>
   128ec:	movne	r3, r2
   128f0:	mov	r1, r0
   128f4:	mov	r2, r4
   128f8:	mov	r0, #1
   128fc:	bl	10f5c <__printf_chk@plt>
   12900:	b	12688 <dcngettext@plt+0x1660>
   12904:	mov	r0, r4
   12908:	bl	10e30 <dcgettext@plt>
   1290c:	ldr	r3, [pc, #244]	; 12a08 <dcngettext@plt+0x19e0>
   12910:	ldr	r2, [pc, #244]	; 12a0c <dcngettext@plt+0x19e4>
   12914:	mov	r1, r0
   12918:	mov	r0, #1
   1291c:	bl	10f5c <__printf_chk@plt>
   12920:	mov	r1, r4
   12924:	mov	r0, #5
   12928:	bl	10fb0 <setlocale@plt>
   1292c:	cmp	r0, #0
   12930:	beq	12948 <dcngettext@plt+0x1920>
   12934:	mov	r2, #3
   12938:	ldr	r1, [pc, #208]	; 12a10 <dcngettext@plt+0x19e8>
   1293c:	bl	11004 <strncmp@plt>
   12940:	cmp	r0, #0
   12944:	bne	1298c <dcngettext@plt+0x1964>
   12948:	mov	r2, #5
   1294c:	ldr	r1, [pc, #192]	; 12a14 <dcngettext@plt+0x19ec>
   12950:	mov	r0, #0
   12954:	bl	10e30 <dcgettext@plt>
   12958:	ldr	r3, [pc, #160]	; 12a00 <dcngettext@plt+0x19d8>
   1295c:	ldr	r2, [pc, #164]	; 12a08 <dcngettext@plt+0x19e0>
   12960:	mov	r4, r3
   12964:	mov	r1, r0
   12968:	mov	r0, #1
   1296c:	bl	10f5c <__printf_chk@plt>
   12970:	ldr	r1, [pc, #160]	; 12a18 <dcngettext@plt+0x19f0>
   12974:	mov	r2, #5
   12978:	mov	r0, #0
   1297c:	bl	10e30 <dcgettext@plt>
   12980:	ldr	r3, [pc, #152]	; 12a20 <dcngettext@plt+0x19f8>
   12984:	mov	r1, r0
   12988:	b	128f4 <dcngettext@plt+0x18cc>
   1298c:	ldr	r6, [pc, #108]	; 12a00 <dcngettext@plt+0x19d8>
   12990:	mov	r4, r6
   12994:	mov	r2, #5
   12998:	ldr	r1, [pc, #132]	; 12a24 <dcngettext@plt+0x19fc>
   1299c:	mov	r0, #0
   129a0:	bl	10e30 <dcgettext@plt>
   129a4:	ldr	r1, [r7]
   129a8:	bl	10d94 <fputs_unlocked@plt>
   129ac:	b	128ac <dcngettext@plt+0x1884>
   129b0:	andeq	fp, r2, r0, ror #2
   129b4:	andeq	r9, r1, r8, asr ip
   129b8:	andeq	fp, r2, ip, lsl #3
   129bc:	andeq	r9, r1, r0, lsl #25
   129c0:	andeq	fp, r2, ip, ror #2
   129c4:	andeq	r9, r1, r4, lsr #22
   129c8:	andeq	r9, r1, r4, lsr #25
   129cc:	andeq	r9, r1, ip, asr #25
   129d0:	ldrdeq	r9, [r1], -r0
   129d4:	andeq	r9, r1, r8, lsl #26
   129d8:	andeq	r9, r1, r8, lsr sp
   129dc:	andeq	r9, r1, r0, lsl #27
   129e0:			; <UNDEFINED> instruction: 0x00019db8
   129e4:	strdeq	r9, [r1], -r0
   129e8:	andeq	r9, r1, r0, ror lr
   129ec:	andeq	sl, r1, r8, lsr #32
   129f0:	andeq	sl, r1, r8, asr r0
   129f4:	muleq	r1, r0, r0
   129f8:	strheq	sl, [r1], -ip
   129fc:	andeq	sl, r1, r8, asr #1
   12a00:	andeq	r9, r1, r0, asr ip
   12a04:	andeq	sl, r1, r8, lsl r2
   12a08:	andeq	sl, r1, r0, lsr r2
   12a0c:	andeq	sl, r1, r8, asr r2
   12a10:	andeq	sl, r1, r8, ror #4
   12a14:			; <UNDEFINED> instruction: 0x0001a2b4
   12a18:	ldrdeq	sl, [r1], -r0
   12a1c:	andeq	r9, r1, ip, ror #27
   12a20:	muleq	r1, r8, r7
   12a24:	andeq	sl, r1, ip, ror #4
   12a28:	ldr	r3, [pc, #4]	; 12a34 <dcngettext@plt+0x1a0c>
   12a2c:	str	r0, [r3]
   12a30:	bx	lr
   12a34:	andeq	fp, r2, r4, lsl #3
   12a38:	ldr	r3, [pc, #4]	; 12a44 <dcngettext@plt+0x1a1c>
   12a3c:	strb	r0, [r3, #4]
   12a40:	bx	lr
   12a44:	andeq	fp, r2, r4, lsl #3
   12a48:	ldr	r3, [pc, #192]	; 12b10 <dcngettext@plt+0x1ae8>
   12a4c:	push	{r4, r5, r6, lr}
   12a50:	sub	sp, sp, #8
   12a54:	ldr	r0, [r3]
   12a58:	bl	190c4 <dcngettext@plt+0x809c>
   12a5c:	cmp	r0, #0
   12a60:	beq	12a84 <dcngettext@plt+0x1a5c>
   12a64:	ldr	r4, [pc, #168]	; 12b14 <dcngettext@plt+0x1aec>
   12a68:	ldrb	r3, [r4, #4]
   12a6c:	cmp	r3, #0
   12a70:	beq	12aa0 <dcngettext@plt+0x1a78>
   12a74:	bl	10f2c <__errno_location@plt>
   12a78:	ldr	r3, [r0]
   12a7c:	cmp	r3, #32
   12a80:	bne	12aa0 <dcngettext@plt+0x1a78>
   12a84:	ldr	r3, [pc, #140]	; 12b18 <dcngettext@plt+0x1af0>
   12a88:	ldr	r0, [r3]
   12a8c:	bl	190c4 <dcngettext@plt+0x809c>
   12a90:	cmp	r0, #0
   12a94:	bne	12ae8 <dcngettext@plt+0x1ac0>
   12a98:	add	sp, sp, #8
   12a9c:	pop	{r4, r5, r6, pc}
   12aa0:	mov	r2, #5
   12aa4:	ldr	r1, [pc, #112]	; 12b1c <dcngettext@plt+0x1af4>
   12aa8:	mov	r0, #0
   12aac:	bl	10e30 <dcgettext@plt>
   12ab0:	ldr	r4, [r4]
   12ab4:	cmp	r4, #0
   12ab8:	mov	r5, r0
   12abc:	beq	12af4 <dcngettext@plt+0x1acc>
   12ac0:	bl	10f2c <__errno_location@plt>
   12ac4:	ldr	r6, [r0]
   12ac8:	mov	r0, r4
   12acc:	bl	16b44 <dcngettext@plt+0x5b1c>
   12ad0:	mov	r1, r6
   12ad4:	str	r5, [sp]
   12ad8:	ldr	r2, [pc, #64]	; 12b20 <dcngettext@plt+0x1af8>
   12adc:	mov	r3, r0
   12ae0:	mov	r0, #0
   12ae4:	bl	10ea8 <error@plt>
   12ae8:	ldr	r3, [pc, #52]	; 12b24 <dcngettext@plt+0x1afc>
   12aec:	ldr	r0, [r3]
   12af0:	bl	10de8 <_exit@plt>
   12af4:	bl	10f2c <__errno_location@plt>
   12af8:	mov	r3, r5
   12afc:	ldr	r2, [pc, #36]	; 12b28 <dcngettext@plt+0x1b00>
   12b00:	ldr	r1, [r0]
   12b04:	mov	r0, r4
   12b08:	bl	10ea8 <error@plt>
   12b0c:	b	12ae8 <dcngettext@plt+0x1ac0>
   12b10:	andeq	fp, r2, ip, ror #2
   12b14:	andeq	fp, r2, r4, lsl #3
   12b18:	andeq	fp, r2, r0, ror #2
   12b1c:	andeq	sl, r1, r0, ror r8
   12b20:	andeq	sl, r1, ip, ror r8
   12b24:	andeq	fp, r2, ip, lsl #2
   12b28:	andeq	sl, r1, r0, lsl #17
   12b2c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12b30:	mov	r5, r0
   12b34:	sub	sp, sp, #164	; 0xa4
   12b38:	ldr	r0, [pc, #200]	; 12c08 <dcngettext@plt+0x1be0>
   12b3c:	mov	r8, r1
   12b40:	bl	1903c <dcngettext@plt+0x8014>
   12b44:	subs	r6, r0, #0
   12b48:	moveq	r0, #1
   12b4c:	beq	12bbc <dcngettext@plt+0x1b94>
   12b50:	add	r0, sp, #4
   12b54:	bl	12c0c <dcngettext@plt+0x1be4>
   12b58:	mov	r7, #1
   12b5c:	mov	r9, #32768	; 0x8000
   12b60:	mov	r4, #0
   12b64:	b	12b80 <dcngettext@plt+0x1b58>
   12b68:	bl	10ff8 <fread_unlocked@plt>
   12b6c:	add	r4, r4, r0
   12b70:	cmp	r4, #32768	; 0x8000
   12b74:	beq	12bc4 <dcngettext@plt+0x1b9c>
   12b78:	cmp	r0, #0
   12b7c:	beq	12bd8 <dcngettext@plt+0x1bb0>
   12b80:	ldr	ip, [r5]
   12b84:	rsb	r2, r4, #32768	; 0x8000
   12b88:	tst	ip, #16
   12b8c:	add	r0, r6, r4
   12b90:	mov	r3, r5
   12b94:	mov	r1, r7
   12b98:	beq	12b68 <dcngettext@plt+0x1b40>
   12b9c:	cmp	r4, #0
   12ba0:	bne	12bf4 <dcngettext@plt+0x1bcc>
   12ba4:	mov	r1, r8
   12ba8:	add	r0, sp, #4
   12bac:	bl	136f8 <dcngettext@plt+0x26d0>
   12bb0:	mov	r0, r6
   12bb4:	bl	13de0 <dcngettext@plt+0x2db8>
   12bb8:	mov	r0, #0
   12bbc:	add	sp, sp, #164	; 0xa4
   12bc0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12bc4:	add	r2, sp, #4
   12bc8:	mov	r1, r9
   12bcc:	mov	r0, r6
   12bd0:	bl	12c80 <dcngettext@plt+0x1c58>
   12bd4:	b	12b60 <dcngettext@plt+0x1b38>
   12bd8:	ldr	r3, [r5]
   12bdc:	tst	r3, #32
   12be0:	beq	12b9c <dcngettext@plt+0x1b74>
   12be4:	mov	r0, r6
   12be8:	bl	13de0 <dcngettext@plt+0x2db8>
   12bec:	mov	r0, #1
   12bf0:	b	12bbc <dcngettext@plt+0x1b94>
   12bf4:	mov	r1, r4
   12bf8:	add	r2, sp, #4
   12bfc:	mov	r0, r6
   12c00:	bl	137b8 <dcngettext@plt+0x2790>
   12c04:	b	12ba4 <dcngettext@plt+0x1b7c>
   12c08:	andeq	r8, r0, r8, asr #32
   12c0c:	push	{lr}		; (str lr, [sp, #-4]!)
   12c10:	mov	r3, #0
   12c14:	ldr	lr, [pc, #40]	; 12c44 <dcngettext@plt+0x1c1c>
   12c18:	ldr	ip, [pc, #40]	; 12c48 <dcngettext@plt+0x1c20>
   12c1c:	ldr	r1, [pc, #40]	; 12c4c <dcngettext@plt+0x1c24>
   12c20:	ldr	r2, [pc, #40]	; 12c50 <dcngettext@plt+0x1c28>
   12c24:	str	lr, [r0]
   12c28:	str	ip, [r0, #4]
   12c2c:	str	r1, [r0, #8]
   12c30:	str	r2, [r0, #12]
   12c34:	str	r3, [r0, #20]
   12c38:	str	r3, [r0, #16]
   12c3c:	str	r3, [r0, #24]
   12c40:	pop	{pc}		; (ldr pc, [sp], #4)
   12c44:	strbvs	r2, [r5, -r1, lsl #6]
   12c48:	svc	0x00cdab89
   12c4c:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   12c50:	eorsne	r5, r2, r6, ror r4
   12c54:	ldr	r2, [r0]
   12c58:	mov	r3, r0
   12c5c:	str	r2, [r1]
   12c60:	ldr	r2, [r3, #4]
   12c64:	mov	r0, r1
   12c68:	str	r2, [r1, #4]
   12c6c:	ldr	r2, [r3, #8]
   12c70:	str	r2, [r1, #8]
   12c74:	ldr	r3, [r3, #12]
   12c78:	str	r3, [r1, #12]
   12c7c:	bx	lr
   12c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c84:	sub	sp, sp, #20
   12c88:	ldr	r3, [r2, #16]
   12c8c:	mov	lr, r2
   12c90:	str	r2, [sp, #12]
   12c94:	ldr	r2, [r2, #20]
   12c98:	add	r3, r1, r3
   12c9c:	bic	ip, r1, #3
   12ca0:	add	ip, r0, ip
   12ca4:	cmp	r1, r3
   12ca8:	movls	r1, r2
   12cac:	addhi	r1, r2, #1
   12cb0:	str	r3, [lr, #16]
   12cb4:	ldr	r3, [lr]
   12cb8:	cmp	r0, ip
   12cbc:	str	r1, [lr, #20]
   12cc0:	str	r3, [sp, #4]
   12cc4:	str	ip, [sp, #8]
   12cc8:	ldr	r3, [lr, #4]
   12ccc:	ldr	r1, [lr, #8]
   12cd0:	ldr	r2, [lr, #12]
   12cd4:	bcs	13608 <dcngettext@plt+0x25e0>
   12cd8:	mov	lr, r3
   12cdc:	ldr	r3, [sp, #4]
   12ce0:	mov	r9, r0
   12ce4:	mov	r4, r1
   12ce8:	mov	r6, r2
   12cec:	add	r3, r3, #-687865856	; 0xd7000000
   12cf0:	add	r3, r3, #6946816	; 0x6a0000
   12cf4:	ldr	r2, [r9]
   12cf8:	eor	r8, r4, r6
   12cfc:	add	r3, r3, #41984	; 0xa400
   12d00:	and	r8, r8, lr
   12d04:	add	r3, r3, #120	; 0x78
   12d08:	add	r3, r3, r2
   12d0c:	eor	r8, r8, r6
   12d10:	add	r8, r8, r3
   12d14:	ldr	r5, [pc, #2296]	; 13614 <dcngettext@plt+0x25ec>
   12d18:	add	r8, lr, r8, ror #25
   12d1c:	ldr	r2, [r9, #4]
   12d20:	eor	r7, lr, r4
   12d24:	and	r7, r7, r8
   12d28:	add	r5, r6, r5
   12d2c:	add	r5, r5, r2
   12d30:	eor	r7, r7, r4
   12d34:	add	r7, r7, r5
   12d38:	ldr	r0, [pc, #2264]	; 13618 <dcngettext@plt+0x25f0>
   12d3c:	add	r7, r8, r7, ror #20
   12d40:	ldr	r2, [r9, #8]
   12d44:	eor	ip, r8, lr
   12d48:	and	ip, ip, r7
   12d4c:	add	r0, r4, r0
   12d50:	add	r0, r0, r2
   12d54:	eor	ip, ip, lr
   12d58:	add	ip, ip, r0
   12d5c:	ldr	r2, [pc, #2232]	; 1361c <dcngettext@plt+0x25f4>
   12d60:	add	ip, r7, ip, ror #15
   12d64:	ldr	r0, [r9, #12]
   12d68:	eor	r1, r8, r7
   12d6c:	and	r1, r1, ip
   12d70:	add	r2, lr, r2
   12d74:	add	r2, r2, r0
   12d78:	eor	r1, r1, r8
   12d7c:	ldr	r0, [r9, #16]
   12d80:	add	r1, r1, r2
   12d84:	ldr	r3, [pc, #2196]	; 13620 <dcngettext@plt+0x25f8>
   12d88:	add	r1, ip, r1, ror #10
   12d8c:	eor	r2, r7, ip
   12d90:	add	r3, r0, r3
   12d94:	ldr	r0, [r9, #20]
   12d98:	and	r2, r2, r1
   12d9c:	add	r8, r3, r8
   12da0:	add	r0, r0, #1191182336	; 0x47000000
   12da4:	eor	r3, r2, r7
   12da8:	add	r3, r3, r8
   12dac:	add	r0, r0, #8847360	; 0x870000
   12db0:	add	r0, r0, #50688	; 0xc600
   12db4:	add	r3, r1, r3, ror #25
   12db8:	eor	r2, ip, r1
   12dbc:	add	r0, r0, #42	; 0x2a
   12dc0:	and	r2, r2, r3
   12dc4:	add	r7, r0, r7
   12dc8:	ldr	r0, [r9, #24]
   12dcc:	eor	r5, r2, ip
   12dd0:	add	r5, r5, r7
   12dd4:	add	r0, r0, #-1476395008	; 0xa8000000
   12dd8:	add	r0, r0, #3162112	; 0x304000
   12ddc:	add	r5, r3, r5, ror #20
   12de0:	eor	r2, r1, r3
   12de4:	add	r0, r0, #1552	; 0x610
   12de8:	and	r2, r2, r5
   12dec:	add	r0, r0, #3
   12df0:	add	ip, r0, ip
   12df4:	eor	r0, r2, r1
   12df8:	ldr	r2, [r9, #28]
   12dfc:	add	r0, r0, ip
   12e00:	add	r2, r2, #-50331648	; 0xfd000000
   12e04:	add	r2, r2, #4587520	; 0x460000
   12e08:	add	r0, r5, r0, ror #15
   12e0c:	eor	ip, r3, r5
   12e10:	add	r2, r2, #38144	; 0x9500
   12e14:	and	ip, ip, r0
   12e18:	add	r2, r2, #1
   12e1c:	add	r1, r2, r1
   12e20:	eor	r2, ip, r3
   12e24:	ldr	ip, [r9, #32]
   12e28:	add	r2, r2, r1
   12e2c:	add	ip, ip, #1761607680	; 0x69000000
   12e30:	add	ip, ip, #8388608	; 0x800000
   12e34:	add	r2, r0, r2, ror #10
   12e38:	eor	r1, r5, r0
   12e3c:	add	ip, ip, #38912	; 0x9800
   12e40:	and	r1, r1, r2
   12e44:	add	ip, ip, #216	; 0xd8
   12e48:	add	r3, ip, r3
   12e4c:	eor	sl, r1, r5
   12e50:	add	sl, sl, r3
   12e54:	ldr	ip, [r9, #36]	; 0x24
   12e58:	ldr	r1, [pc, #1988]	; 13624 <dcngettext@plt+0x25fc>
   12e5c:	add	sl, r2, sl, ror #25
   12e60:	eor	r3, r0, r2
   12e64:	add	r1, ip, r1
   12e68:	and	r3, r3, sl
   12e6c:	add	r5, r1, r5
   12e70:	eor	r7, r3, r0
   12e74:	ldr	r1, [r9, #40]	; 0x28
   12e78:	add	r7, r7, r5
   12e7c:	sub	r1, r1, #41984	; 0xa400
   12e80:	add	r7, sl, r7, ror #20
   12e84:	eor	r3, r2, sl
   12e88:	sub	r1, r1, #79	; 0x4f
   12e8c:	and	r3, r3, r7
   12e90:	add	r0, r1, r0
   12e94:	ldr	r1, [r9, #44]	; 0x2c
   12e98:	eor	r3, r3, r2
   12e9c:	add	r0, r3, r0
   12ea0:	add	r1, r1, #-1996488704	; 0x89000000
   12ea4:	add	r1, r1, #6029312	; 0x5c0000
   12ea8:	add	ip, r7, r0, ror #15
   12eac:	eor	r3, sl, r7
   12eb0:	add	r1, r1, #55040	; 0xd700
   12eb4:	and	r3, r3, ip
   12eb8:	add	r1, r1, #190	; 0xbe
   12ebc:	add	r2, r1, r2
   12ec0:	eor	r1, r3, sl
   12ec4:	add	r1, r1, r2
   12ec8:	ldr	r8, [r9, #48]	; 0x30
   12ecc:	ldr	r0, [pc, #1876]	; 13628 <dcngettext@plt+0x2600>
   12ed0:	add	r1, ip, r1, ror #10
   12ed4:	eor	r2, r7, ip
   12ed8:	add	r0, r8, r0
   12edc:	and	r2, r2, r1
   12ee0:	add	sl, r0, sl
   12ee4:	eor	r3, r2, r7
   12ee8:	add	r3, r3, sl
   12eec:	ldr	r5, [r9, #52]	; 0x34
   12ef0:	ldr	r0, [pc, #1844]	; 1362c <dcngettext@plt+0x2604>
   12ef4:	add	r3, r1, r3, ror #25
   12ef8:	eor	r2, ip, r1
   12efc:	add	r0, r5, r0
   12f00:	and	r2, r2, r3
   12f04:	add	r7, r0, r7
   12f08:	eor	r5, r2, ip
   12f0c:	add	r5, r5, r7
   12f10:	ldr	sl, [r9, #56]	; 0x38
   12f14:	ldr	r7, [pc, #1812]	; 13630 <dcngettext@plt+0x2608>
   12f18:	add	r5, r3, r5, ror #20
   12f1c:	eor	r2, r1, r3
   12f20:	add	r7, sl, r7
   12f24:	and	r2, r2, r5
   12f28:	add	ip, r7, ip
   12f2c:	eor	r0, r2, r1
   12f30:	add	r0, r0, ip
   12f34:	ldr	r7, [r9, #60]	; 0x3c
   12f38:	ldr	r2, [pc, #1780]	; 13634 <dcngettext@plt+0x260c>
   12f3c:	add	r0, r5, r0, ror #15
   12f40:	eor	ip, r3, r5
   12f44:	add	r2, r7, r2
   12f48:	and	ip, ip, r0
   12f4c:	add	r1, r2, r1
   12f50:	eor	r2, ip, r3
   12f54:	add	r2, r2, r1
   12f58:	ldr	ip, [pc, #1752]	; 13638 <dcngettext@plt+0x2610>
   12f5c:	ldr	r1, [r9, #4]
   12f60:	add	r2, r0, r2, ror #10
   12f64:	add	ip, r1, ip
   12f68:	eor	r1, r0, r2
   12f6c:	and	r1, r1, r5
   12f70:	add	r3, ip, r3
   12f74:	eor	fp, r1, r0
   12f78:	add	fp, fp, r3
   12f7c:	ldr	ip, [r9, #24]
   12f80:	add	fp, r2, fp, ror #27
   12f84:	ldr	r1, [pc, #1712]	; 1363c <dcngettext@plt+0x2614>
   12f88:	eor	r3, r2, fp
   12f8c:	add	r1, ip, r1
   12f90:	and	r3, r3, r0
   12f94:	eor	r3, r3, r2
   12f98:	add	r5, r1, r5
   12f9c:	add	r5, r3, r5
   12fa0:	ldr	r1, [r9, #44]	; 0x2c
   12fa4:	add	r5, fp, r5, ror #23
   12fa8:	ldr	ip, [pc, #1680]	; 13640 <dcngettext@plt+0x2618>
   12fac:	eor	r3, fp, r5
   12fb0:	add	ip, r1, ip
   12fb4:	and	r3, r3, r2
   12fb8:	add	r0, ip, r0
   12fbc:	eor	ip, r3, fp
   12fc0:	add	ip, ip, r0
   12fc4:	ldr	r1, [pc, #1656]	; 13644 <dcngettext@plt+0x261c>
   12fc8:	add	ip, r5, ip, ror #18
   12fcc:	ldr	r0, [r9]
   12fd0:	eor	r3, r5, ip
   12fd4:	add	r1, r0, r1
   12fd8:	and	r3, r3, fp
   12fdc:	eor	r3, r3, r5
   12fe0:	add	r2, r1, r2
   12fe4:	add	r2, r3, r2
   12fe8:	ldr	r0, [r9, #20]
   12fec:	add	r2, ip, r2, ror #12
   12ff0:	ldr	r3, [pc, #1616]	; 13648 <dcngettext@plt+0x2620>
   12ff4:	eor	r1, ip, r2
   12ff8:	add	r3, r0, r3
   12ffc:	and	r1, r1, r5
   13000:	add	fp, r3, fp
   13004:	eor	r3, r1, ip
   13008:	add	r3, r3, fp
   1300c:	ldr	r1, [pc, #1592]	; 1364c <dcngettext@plt+0x2624>
   13010:	add	r3, r2, r3, ror #27
   13014:	ldr	fp, [r9, #40]	; 0x28
   13018:	eor	r0, r2, r3
   1301c:	add	r1, fp, r1
   13020:	and	r0, r0, ip
   13024:	add	r5, r1, r5
   13028:	eor	r1, r0, r2
   1302c:	add	r1, r1, r5
   13030:	ldr	r0, [pc, #1560]	; 13650 <dcngettext@plt+0x2628>
   13034:	add	r1, r3, r1, ror #23
   13038:	eor	r5, r3, r1
   1303c:	add	r0, r7, r0
   13040:	and	r5, r5, r2
   13044:	add	ip, r0, ip
   13048:	eor	r0, r5, r3
   1304c:	add	r0, r0, ip
   13050:	ldr	fp, [r9, #16]
   13054:	add	r0, r1, r0, ror #18
   13058:	ldr	r5, [pc, #1524]	; 13654 <dcngettext@plt+0x262c>
   1305c:	eor	ip, r1, r0
   13060:	add	r5, fp, r5
   13064:	and	ip, ip, r3
   13068:	eor	ip, ip, r1
   1306c:	add	r2, r5, r2
   13070:	add	r2, ip, r2
   13074:	ldr	fp, [r9, #36]	; 0x24
   13078:	add	r2, r0, r2, ror #12
   1307c:	ldr	r5, [pc, #1492]	; 13658 <dcngettext@plt+0x2630>
   13080:	eor	ip, r0, r2
   13084:	add	r5, fp, r5
   13088:	and	ip, ip, r1
   1308c:	add	r3, r5, r3
   13090:	eor	fp, ip, r0
   13094:	add	fp, fp, r3
   13098:	ldr	ip, [pc, #1468]	; 1365c <dcngettext@plt+0x2634>
   1309c:	add	fp, r2, fp, ror #27
   130a0:	eor	r3, r2, fp
   130a4:	add	ip, sl, ip
   130a8:	and	r3, r3, r0
   130ac:	add	r1, ip, r1
   130b0:	eor	r5, r3, r2
   130b4:	add	r5, r5, r1
   130b8:	ldr	ip, [pc, #1440]	; 13660 <dcngettext@plt+0x2638>
   130bc:	add	r5, fp, r5, ror #23
   130c0:	ldr	r1, [r9, #12]
   130c4:	eor	r3, fp, r5
   130c8:	add	ip, r1, ip
   130cc:	and	r3, r3, r2
   130d0:	add	r0, ip, r0
   130d4:	eor	ip, r3, fp
   130d8:	add	ip, ip, r0
   130dc:	ldr	r1, [pc, #1408]	; 13664 <dcngettext@plt+0x263c>
   130e0:	add	ip, r5, ip, ror #18
   130e4:	ldr	r0, [r9, #32]
   130e8:	eor	r3, r5, ip
   130ec:	add	r1, r0, r1
   130f0:	and	r3, r3, fp
   130f4:	eor	r3, r3, r5
   130f8:	add	r2, r1, r2
   130fc:	add	r2, r3, r2
   13100:	ldr	r0, [r9, #52]	; 0x34
   13104:	add	r2, ip, r2, ror #12
   13108:	ldr	r3, [pc, #1368]	; 13668 <dcngettext@plt+0x2640>
   1310c:	eor	r1, ip, r2
   13110:	add	r3, r0, r3
   13114:	and	r1, r1, r5
   13118:	add	fp, r3, fp
   1311c:	eor	r3, r1, ip
   13120:	add	r3, r3, fp
   13124:	ldr	r1, [pc, #1344]	; 1366c <dcngettext@plt+0x2644>
   13128:	add	r3, r2, r3, ror #27
   1312c:	ldr	fp, [r9, #8]
   13130:	eor	r0, r2, r3
   13134:	add	r1, fp, r1
   13138:	and	r0, r0, ip
   1313c:	add	r5, r1, r5
   13140:	eor	r1, r0, r2
   13144:	add	r1, r1, r5
   13148:	ldr	fp, [r9, #28]
   1314c:	add	r1, r3, r1, ror #23
   13150:	ldr	r0, [pc, #1304]	; 13670 <dcngettext@plt+0x2648>
   13154:	eor	r5, r3, r1
   13158:	add	r0, fp, r0
   1315c:	and	r5, r5, r2
   13160:	add	ip, r0, ip
   13164:	eor	r0, r5, r3
   13168:	add	r0, r0, ip
   1316c:	ldr	r5, [pc, #1280]	; 13674 <dcngettext@plt+0x264c>
   13170:	add	r0, r1, r0, ror #18
   13174:	eor	fp, r1, r0
   13178:	add	r5, r8, r5
   1317c:	and	ip, r3, fp
   13180:	eor	ip, ip, r1
   13184:	add	r2, r5, r2
   13188:	add	r2, ip, r2
   1318c:	ldr	r5, [pc, #1252]	; 13678 <dcngettext@plt+0x2650>
   13190:	ldr	ip, [r9, #20]
   13194:	add	r2, r0, r2, ror #12
   13198:	add	r5, ip, r5
   1319c:	eor	fp, fp, r2
   131a0:	add	r3, r5, r3
   131a4:	ldr	ip, [r9, #32]
   131a8:	add	r3, fp, r3
   131ac:	ldr	fp, [pc, #1224]	; 1367c <dcngettext@plt+0x2654>
   131b0:	add	r3, r2, r3, ror #28
   131b4:	add	fp, ip, fp
   131b8:	eor	ip, r0, r2
   131bc:	eor	ip, ip, r3
   131c0:	add	r1, fp, r1
   131c4:	add	r1, ip, r1
   131c8:	ldr	r5, [pc, #1200]	; 13680 <dcngettext@plt+0x2658>
   131cc:	ldr	ip, [r9, #44]	; 0x2c
   131d0:	add	r1, r3, r1, ror #21
   131d4:	add	r5, ip, r5
   131d8:	eor	ip, r2, r3
   131dc:	eor	ip, ip, r1
   131e0:	add	r0, r5, r0
   131e4:	add	r0, ip, r0
   131e8:	ldr	r5, [pc, #1172]	; 13684 <dcngettext@plt+0x265c>
   131ec:	add	r0, r1, r0, ror #16
   131f0:	add	r5, sl, r5
   131f4:	eor	fp, r3, r1
   131f8:	eor	fp, fp, r0
   131fc:	add	r2, r5, r2
   13200:	ldr	ip, [r9, #4]
   13204:	add	r2, fp, r2
   13208:	ldr	fp, [pc, #1144]	; 13688 <dcngettext@plt+0x2660>
   1320c:	add	r2, r0, r2, ror #9
   13210:	add	fp, ip, fp
   13214:	eor	ip, r1, r0
   13218:	add	r3, fp, r3
   1321c:	eor	fp, ip, r2
   13220:	ldr	r5, [r9, #16]
   13224:	add	fp, fp, r3
   13228:	ldr	ip, [pc, #1116]	; 1368c <dcngettext@plt+0x2664>
   1322c:	add	fp, r2, fp, ror #28
   13230:	add	ip, r5, ip
   13234:	eor	r3, r0, r2
   13238:	eor	r3, r3, fp
   1323c:	add	r1, ip, r1
   13240:	ldr	r5, [r9, #28]
   13244:	add	r1, r3, r1
   13248:	ldr	ip, [pc, #1088]	; 13690 <dcngettext@plt+0x2668>
   1324c:	add	r1, fp, r1, ror #21
   13250:	add	ip, r5, ip
   13254:	eor	r3, r2, fp
   13258:	eor	r3, r3, r1
   1325c:	add	r0, ip, r0
   13260:	add	r0, r3, r0
   13264:	ldr	ip, [r9, #40]	; 0x28
   13268:	ldr	r5, [pc, #1060]	; 13694 <dcngettext@plt+0x266c>
   1326c:	add	r0, r1, r0, ror #16
   13270:	eor	r3, fp, r1
   13274:	add	r5, ip, r5
   13278:	add	r2, r5, r2
   1327c:	eor	r5, r3, r0
   13280:	ldr	ip, [r9, #52]	; 0x34
   13284:	add	r5, r5, r2
   13288:	ldr	r2, [pc, #1032]	; 13698 <dcngettext@plt+0x2670>
   1328c:	add	r5, r0, r5, ror #9
   13290:	add	r2, ip, r2
   13294:	eor	ip, r1, r0
   13298:	add	fp, r2, fp
   1329c:	eor	r2, ip, r5
   132a0:	add	r2, r2, fp
   132a4:	ldr	ip, [pc, #1008]	; 1369c <dcngettext@plt+0x2674>
   132a8:	ldr	fp, [r9]
   132ac:	add	r2, r5, r2, ror #28
   132b0:	eor	r3, r0, r5
   132b4:	add	ip, fp, ip
   132b8:	add	r1, ip, r1
   132bc:	eor	fp, r3, r2
   132c0:	add	fp, fp, r1
   132c4:	ldr	ip, [pc, #980]	; 136a0 <dcngettext@plt+0x2678>
   132c8:	ldr	r1, [r9, #12]
   132cc:	add	fp, r2, fp, ror #21
   132d0:	eor	r3, r5, r2
   132d4:	add	ip, r1, ip
   132d8:	add	r0, ip, r0
   132dc:	eor	ip, r3, fp
   132e0:	ldr	r1, [r9, #24]
   132e4:	add	ip, ip, r0
   132e8:	ldr	r3, [pc, #948]	; 136a4 <dcngettext@plt+0x267c>
   132ec:	add	ip, fp, ip, ror #16
   132f0:	add	r3, r1, r3
   132f4:	eor	r1, r2, fp
   132f8:	add	r5, r3, r5
   132fc:	eor	r3, r1, ip
   13300:	add	r3, r3, r5
   13304:	ldr	r1, [r9, #36]	; 0x24
   13308:	ldr	r0, [pc, #920]	; 136a8 <dcngettext@plt+0x2680>
   1330c:	add	r3, ip, r3, ror #9
   13310:	add	r0, r1, r0
   13314:	eor	r1, fp, ip
   13318:	add	r2, r0, r2
   1331c:	eor	r5, r1, r3
   13320:	add	r5, r5, r2
   13324:	ldr	r0, [pc, #896]	; 136ac <dcngettext@plt+0x2684>
   13328:	add	r5, r3, r5, ror #28
   1332c:	eor	r2, ip, r3
   13330:	add	r0, r8, r0
   13334:	add	fp, r0, fp
   13338:	eor	r0, r2, r5
   1333c:	add	r0, r0, fp
   13340:	ldr	r1, [pc, #872]	; 136b0 <dcngettext@plt+0x2688>
   13344:	add	r0, r5, r0, ror #21
   13348:	eor	r2, r3, r5
   1334c:	add	r1, r7, r1
   13350:	add	ip, r1, ip
   13354:	eor	r1, r2, r0
   13358:	add	r1, r1, ip
   1335c:	ldr	r2, [r9, #8]
   13360:	ldr	ip, [pc, #844]	; 136b4 <dcngettext@plt+0x268c>
   13364:	add	r1, r0, r1, ror #16
   13368:	add	ip, r2, ip
   1336c:	eor	r2, r5, r0
   13370:	add	r3, ip, r3
   13374:	eor	ip, r2, r1
   13378:	add	ip, ip, r3
   1337c:	ldr	fp, [r9]
   13380:	ldr	r2, [pc, #816]	; 136b8 <dcngettext@plt+0x2690>
   13384:	add	ip, r1, ip, ror #9
   13388:	mvn	r3, r0
   1338c:	add	r2, fp, r2
   13390:	orr	r3, r3, ip
   13394:	add	r5, r2, r5
   13398:	eor	r2, r3, r1
   1339c:	add	r2, r2, r5
   133a0:	ldr	fp, [pc, #788]	; 136bc <dcngettext@plt+0x2694>
   133a4:	ldr	r5, [r9, #28]
   133a8:	add	r2, ip, r2, ror #26
   133ac:	mvn	r3, r1
   133b0:	add	fp, r5, fp
   133b4:	orr	r3, r3, r2
   133b8:	eor	r3, r3, ip
   133bc:	add	r0, fp, r0
   133c0:	add	r0, r3, r0
   133c4:	ldr	fp, [pc, #756]	; 136c0 <dcngettext@plt+0x2698>
   133c8:	add	r0, r2, r0, ror #22
   133cc:	mvn	r5, ip
   133d0:	add	fp, sl, fp
   133d4:	orr	r5, r5, r0
   133d8:	eor	r5, r5, r2
   133dc:	add	r1, fp, r1
   133e0:	add	r1, r5, r1
   133e4:	ldr	r3, [pc, #728]	; 136c4 <dcngettext@plt+0x269c>
   133e8:	ldr	r5, [r9, #20]
   133ec:	add	r1, r0, r1, ror #17
   133f0:	mvn	sl, r2
   133f4:	add	r3, r5, r3
   133f8:	orr	sl, sl, r1
   133fc:	add	ip, r3, ip
   13400:	eor	sl, sl, r0
   13404:	add	ip, sl, ip
   13408:	ldr	fp, [pc, #696]	; 136c8 <dcngettext@plt+0x26a0>
   1340c:	add	ip, r1, ip, ror #11
   13410:	mvn	r5, r0
   13414:	add	fp, r8, fp
   13418:	orr	r5, r5, ip
   1341c:	eor	r5, r5, r1
   13420:	add	r2, fp, r2
   13424:	add	r2, r5, r2
   13428:	ldr	r8, [pc, #668]	; 136cc <dcngettext@plt+0x26a4>
   1342c:	ldr	r5, [r9, #12]
   13430:	add	r2, ip, r2, ror #26
   13434:	mvn	r3, r1
   13438:	add	r8, r5, r8
   1343c:	orr	r3, r3, r2
   13440:	eor	r3, r3, ip
   13444:	add	r0, r8, r0
   13448:	add	r0, r3, r0
   1344c:	ldr	r8, [r9, #40]	; 0x28
   13450:	ldr	fp, [pc, #632]	; 136d0 <dcngettext@plt+0x26a8>
   13454:	add	r0, r2, r0, ror #22
   13458:	mvn	r5, ip
   1345c:	add	fp, r8, fp
   13460:	orr	r5, r5, r0
   13464:	eor	r5, r5, r2
   13468:	add	r1, fp, r1
   1346c:	add	r1, r5, r1
   13470:	ldr	r8, [r9, #4]
   13474:	ldr	r3, [pc, #600]	; 136d4 <dcngettext@plt+0x26ac>
   13478:	add	r1, r0, r1, ror #17
   1347c:	mvn	r5, r2
   13480:	add	r3, r8, r3
   13484:	orr	r5, r5, r1
   13488:	eor	r5, r5, r0
   1348c:	add	ip, r3, ip
   13490:	add	ip, r5, ip
   13494:	ldr	fp, [pc, #572]	; 136d8 <dcngettext@plt+0x26b0>
   13498:	ldr	r5, [r9, #32]
   1349c:	add	ip, r1, ip, ror #11
   134a0:	mvn	r3, r0
   134a4:	add	fp, r5, fp
   134a8:	orr	r3, r3, ip
   134ac:	eor	r3, r3, r1
   134b0:	add	r2, fp, r2
   134b4:	add	r2, r3, r2
   134b8:	ldr	r8, [pc, #540]	; 136dc <dcngettext@plt+0x26b4>
   134bc:	add	r2, ip, r2, ror #26
   134c0:	mvn	r5, r1
   134c4:	add	r8, r7, r8
   134c8:	orr	r5, r5, r2
   134cc:	eor	r5, r5, ip
   134d0:	add	r0, r8, r0
   134d4:	add	r0, r5, r0
   134d8:	ldr	fp, [pc, #512]	; 136e0 <dcngettext@plt+0x26b8>
   134dc:	ldr	r5, [r9, #24]
   134e0:	add	r0, r2, r0, ror #22
   134e4:	mvn	r3, ip
   134e8:	add	fp, r5, fp
   134ec:	orr	r3, r3, r0
   134f0:	eor	r3, r3, r2
   134f4:	add	r1, fp, r1
   134f8:	add	r1, r3, r1
   134fc:	ldr	r8, [r9, #52]	; 0x34
   13500:	ldr	r7, [pc, #476]	; 136e4 <dcngettext@plt+0x26bc>
   13504:	add	r1, r0, r1, ror #17
   13508:	mvn	r5, r2
   1350c:	add	r7, r8, r7
   13510:	orr	r5, r5, r1
   13514:	eor	r5, r5, r0
   13518:	add	ip, r7, ip
   1351c:	add	ip, r5, ip
   13520:	ldr	fp, [pc, #448]	; 136e8 <dcngettext@plt+0x26c0>
   13524:	ldr	r5, [r9, #16]
   13528:	add	ip, r1, ip, ror #11
   1352c:	mvn	r3, r0
   13530:	add	fp, r5, fp
   13534:	orr	r3, r3, ip
   13538:	eor	r3, r3, r1
   1353c:	add	r2, fp, r2
   13540:	add	r2, r3, r2
   13544:	ldr	r5, [r9, #44]	; 0x2c
   13548:	ldr	r8, [pc, #412]	; 136ec <dcngettext@plt+0x26c4>
   1354c:	add	r2, ip, r2, ror #26
   13550:	mvn	r3, r1
   13554:	add	r8, r5, r8
   13558:	orr	r3, r3, r2
   1355c:	add	r8, r8, r0
   13560:	eor	r0, r3, ip
   13564:	add	r0, r0, r8
   13568:	ldr	r5, [r9, #8]
   1356c:	ldr	fp, [pc, #380]	; 136f0 <dcngettext@plt+0x26c8>
   13570:	add	r0, r2, r0, ror #22
   13574:	mvn	r3, ip
   13578:	add	fp, r5, fp
   1357c:	orr	r3, r3, r0
   13580:	add	fp, fp, r1
   13584:	eor	r1, r3, r2
   13588:	add	r1, r1, fp
   1358c:	ldr	r5, [r9, #36]	; 0x24
   13590:	ldr	r7, [pc, #348]	; 136f4 <dcngettext@plt+0x26cc>
   13594:	add	r1, r0, r1, ror #17
   13598:	mvn	r3, r2
   1359c:	add	r7, r5, r7
   135a0:	orr	r3, r3, r1
   135a4:	eor	r3, r3, r0
   135a8:	add	ip, r7, ip
   135ac:	add	ip, r3, ip
   135b0:	ldr	r5, [sp, #8]
   135b4:	ldr	r3, [sp, #4]
   135b8:	add	r9, r9, #64	; 0x40
   135bc:	add	ip, r1, ip, ror #11
   135c0:	add	r3, r3, r2
   135c4:	cmp	r5, r9
   135c8:	str	r3, [sp, #4]
   135cc:	add	r6, r6, r0
   135d0:	add	r4, r4, r1
   135d4:	add	lr, lr, ip
   135d8:	bhi	12cec <dcngettext@plt+0x1cc4>
   135dc:	mov	ip, lr
   135e0:	mov	r1, r4
   135e4:	mov	lr, r6
   135e8:	ldr	r3, [sp, #12]
   135ec:	ldr	r2, [sp, #4]
   135f0:	str	ip, [r3, #4]
   135f4:	str	r2, [r3]
   135f8:	str	r1, [r3, #8]
   135fc:	str	lr, [r3, #12]
   13600:	add	sp, sp, #20
   13604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13608:	mov	ip, r3
   1360c:	mov	lr, r2
   13610:	b	135e8 <dcngettext@plt+0x25c0>
   13614:	stmia	r7, {r1, r2, r4, r6, r8, r9, sl, ip, sp, pc}^
   13618:	strtcs	r7, [r0], #-219	; 0xffffff25
   1361c:			; <UNDEFINED> instruction: 0xc1bdceee
   13620:			; <UNDEFINED> instruction: 0xf57c0faf
   13624:	blhi	11514e8 <stdout@@GLIBC_2.4+0x112637c>
   13628:	blvs	fe417ab8 <stdout@@GLIBC_2.4+0xfe3ec94c>
   1362c:	ldc2	1, cr7, [r8, #588]	; 0x24c
   13630:	ldrbtge	r4, [r9], -lr, lsl #7
   13634:	ldmibmi	r4!, {r0, r5, fp}
   13638:			; <UNDEFINED> instruction: 0xf61e2562
   1363c:	subgt	fp, r0, r0, asr #6
   13640:			; <UNDEFINED> instruction: 0x265e5a51
   13644:	ldmib	r6!, {r1, r3, r5, r7, r8, r9, sl, lr, pc}
   13648:			; <UNDEFINED> instruction: 0xd62f105d
   1364c:	subeq	r1, r4, #1392508928	; 0x53000000
   13650:	stmiale	r1!, {r0, r7, r9, sl, sp, lr, pc}
   13654:	ldrb	pc, [r3, r8, asr #23]	; <UNPREDICTABLE>
   13658:	mvncs	ip, r6, ror #27
   1365c:	teqgt	r7, #56098816	; 0x3580000
   13660:			; <UNDEFINED> instruction: 0xf4d50d87
   13664:	ldrbmi	r1, [sl, #-1261]	; 0xfffffb13
   13668:	stmibge	r3!, {r0, r2, r8, fp, sp, lr, pc}^
   1366c:	stc2l	3, cr10, [pc], #992	; 13a54 <dcngettext@plt+0x2a2c>
   13670:			; <UNDEFINED> instruction: 0x676f02d9
   13674:	stchi	12, cr4, [sl, #-552]!	; 0xfffffdd8
   13678:			; <UNDEFINED> instruction: 0xfffa3942
   1367c:	ldrbhi	pc, [r1, -r1, lsl #13]!	; <UNPREDICTABLE>
   13680:	ldfvss	f6, [sp, #136]	; 0x88
   13684:	vcmla.f16	d19, d5, d12, #270
   13688:	ldrtge	lr, [lr], #2628	; 0xa44
   1368c:	blmi	ff7c7538 <stdout@@GLIBC_2.4+0xff79c3cc>
   13690:			; <UNDEFINED> instruction: 0xf6bb4b60
   13694:	mrclt	12, 5, fp, cr15, cr0, {3}
   13698:	ldmcs	fp, {r1, r2, r6, r7, r9, sl, fp, ip, sp, lr}
   1369c:	b	fe85d68c <stdout@@GLIBC_2.4+0xfe832520>
   136a0:	strbtle	r3, [pc], #133	; 136a8 <dcngettext@plt+0x2680>
   136a4:	streq	r1, [r8], #3333	; 0xd05
   136a8:	ldmible	r4, {r0, r3, r4, r5, ip, lr, pc}^
   136ac:	ldrb	r9, [fp], r5, ror #19
   136b0:	svcne	0x00a27cf8
   136b4:	strtgt	r5, [ip], #1637	; 0x665
   136b8:	vld1.16	{d2-d5}, [r9], r4
   136bc:	msrmi	CPSR_fx, #604	; 0x25c
   136c0:	blge	fe51c564 <stdout@@GLIBC_2.4+0xfe4f13f8>
   136c4:	ldc2	0, cr10, [r3], {57}	; 0x39
   136c8:	ldrbvs	r5, [fp, #-2499]	; 0xfffff63d
   136cc:	svchi	0x000ccc92
   136d0:			; <UNDEFINED> instruction: 0xffeff47d
   136d4:	strhi	r5, [r4, #3537]	; 0xdd1
   136d8:	svcvs	0x00a87e4f
   136dc:	cdp2	6, 2, cr14, cr12, cr0, {7}
   136e0:	movwge	r4, #4884	; 0x1314
   136e4:	adfmi<illegal precision>p	f1, f0, f1
   136e8:			; <UNDEFINED> instruction: 0xf7537e82
   136ec:	lfmlt	f7, 1, [sl, #-212]!	; 0xffffff2c
   136f0:	bcs	ff6081e4 <stdout@@GLIBC_2.4+0xff5dd078>
   136f4:	bl	fe1c8540 <stdout@@GLIBC_2.4+0xfe19d3d4>
   136f8:	push	{r4, r5, r6, r7, r8, lr}
   136fc:	mov	r4, r0
   13700:	ldr	r0, [r0, #24]
   13704:	ldr	r3, [r4, #16]
   13708:	cmp	r0, #55	; 0x37
   1370c:	add	r3, r0, r3
   13710:	mov	r5, r1
   13714:	movhi	r6, #128	; 0x80
   13718:	movls	r6, #64	; 0x40
   1371c:	movhi	r2, #120	; 0x78
   13720:	movls	r2, #56	; 0x38
   13724:	movhi	r1, #31
   13728:	movls	r1, #15
   1372c:	movhi	lr, #30
   13730:	movls	lr, #14
   13734:	cmp	r0, r3
   13738:	add	lr, r4, lr, lsl #2
   1373c:	ldrhi	ip, [r4, #20]
   13740:	ldrls	r7, [r4, #20]
   13744:	addhi	r7, ip, #1
   13748:	add	r1, r4, r1, lsl #2
   1374c:	lsr	ip, r3, #29
   13750:	strhi	r7, [r4, #20]
   13754:	str	r3, [r4, #16]
   13758:	orr	ip, ip, r7, lsl #3
   1375c:	lsl	r3, r3, #3
   13760:	add	r7, r4, #28
   13764:	str	r3, [lr, #28]
   13768:	sub	r2, r2, r0
   1376c:	str	ip, [r1, #28]
   13770:	add	r0, r7, r0
   13774:	ldr	r1, [pc, #56]	; 137b4 <dcngettext@plt+0x278c>
   13778:	bl	10df4 <memcpy@plt>
   1377c:	mov	r0, r7
   13780:	mov	r2, r4
   13784:	mov	r1, r6
   13788:	bl	12c80 <dcngettext@plt+0x1c58>
   1378c:	ldr	r3, [r4]
   13790:	mov	r0, r5
   13794:	str	r3, [r5]
   13798:	ldr	r3, [r4, #4]
   1379c:	str	r3, [r5, #4]
   137a0:	ldr	r3, [r4, #8]
   137a4:	str	r3, [r5, #8]
   137a8:	ldr	r3, [r4, #12]
   137ac:	str	r3, [r5, #12]
   137b0:	pop	{r4, r5, r6, r7, r8, pc}
   137b4:	andeq	sl, r1, r4, lsl #17
   137b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   137bc:	mov	r6, r2
   137c0:	ldr	r4, [r2, #24]
   137c4:	mov	r8, r0
   137c8:	cmp	r4, #0
   137cc:	mov	r5, r1
   137d0:	bne	138c0 <dcngettext@plt+0x2898>
   137d4:	cmp	r5, #63	; 0x3f
   137d8:	bls	138b0 <dcngettext@plt+0x2888>
   137dc:	tst	r8, #3
   137e0:	beq	13894 <dcngettext@plt+0x286c>
   137e4:	cmp	r5, #64	; 0x40
   137e8:	add	r7, r6, #28
   137ec:	beq	1386c <dcngettext@plt+0x2844>
   137f0:	mov	sl, r5
   137f4:	mov	r4, r8
   137f8:	mov	r9, #64	; 0x40
   137fc:	add	r2, r4, #64	; 0x40
   13800:	mov	r3, r7
   13804:	ldr	lr, [r4]
   13808:	ldr	ip, [r4, #4]
   1380c:	ldr	r0, [r4, #8]
   13810:	ldr	r1, [r4, #12]
   13814:	add	r4, r4, #16
   13818:	cmp	r4, r2
   1381c:	str	lr, [r3]
   13820:	str	ip, [r3, #4]
   13824:	str	r0, [r3, #8]
   13828:	str	r1, [r3, #12]
   1382c:	add	r3, r3, #16
   13830:	bne	13804 <dcngettext@plt+0x27dc>
   13834:	sub	sl, sl, #64	; 0x40
   13838:	mov	r2, r6
   1383c:	mov	r1, r9
   13840:	mov	r0, r7
   13844:	bl	12c80 <dcngettext@plt+0x1c58>
   13848:	cmp	sl, #64	; 0x40
   1384c:	bhi	137fc <dcngettext@plt+0x27d4>
   13850:	sub	r3, r5, #65	; 0x41
   13854:	bic	r2, r3, #63	; 0x3f
   13858:	mov	r3, r2
   1385c:	sub	r5, r5, #64	; 0x40
   13860:	add	r2, r2, #64	; 0x40
   13864:	sub	r5, r5, r3
   13868:	add	r8, r8, r2
   1386c:	ldr	r4, [r6, #24]
   13870:	mov	r1, r8
   13874:	add	r0, r7, r4
   13878:	mov	r2, r5
   1387c:	add	r4, r4, r5
   13880:	bl	10df4 <memcpy@plt>
   13884:	cmp	r4, #63	; 0x3f
   13888:	bhi	13900 <dcngettext@plt+0x28d8>
   1388c:	str	r4, [r6, #24]
   13890:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13894:	bic	r4, r5, #63	; 0x3f
   13898:	mov	r0, r8
   1389c:	mov	r1, r4
   138a0:	mov	r2, r6
   138a4:	bl	12c80 <dcngettext@plt+0x1c58>
   138a8:	and	r5, r5, #63	; 0x3f
   138ac:	add	r8, r8, r4
   138b0:	cmp	r5, #0
   138b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   138b8:	add	r7, r6, #28
   138bc:	b	1386c <dcngettext@plt+0x2844>
   138c0:	rsb	r7, r4, #128	; 0x80
   138c4:	cmp	r7, r1
   138c8:	movcs	r7, r1
   138cc:	add	r9, r2, #28
   138d0:	mov	r1, r8
   138d4:	mov	r2, r7
   138d8:	add	r0, r9, r4
   138dc:	bl	10df4 <memcpy@plt>
   138e0:	ldr	r1, [r6, #24]
   138e4:	add	r1, r7, r1
   138e8:	cmp	r1, #64	; 0x40
   138ec:	str	r1, [r6, #24]
   138f0:	bhi	1392c <dcngettext@plt+0x2904>
   138f4:	add	r8, r8, r7
   138f8:	sub	r5, r5, r7
   138fc:	b	137d4 <dcngettext@plt+0x27ac>
   13900:	sub	r4, r4, #64	; 0x40
   13904:	mov	r2, r6
   13908:	mov	r1, #64	; 0x40
   1390c:	mov	r0, r7
   13910:	bl	12c80 <dcngettext@plt+0x1c58>
   13914:	mov	r0, r7
   13918:	mov	r2, r4
   1391c:	add	r1, r6, #92	; 0x5c
   13920:	bl	10df4 <memcpy@plt>
   13924:	str	r4, [r6, #24]
   13928:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1392c:	mov	r2, r6
   13930:	mov	r0, r9
   13934:	bic	r1, r1, #63	; 0x3f
   13938:	bl	12c80 <dcngettext@plt+0x1c58>
   1393c:	ldr	r2, [r6, #24]
   13940:	add	r1, r4, r7
   13944:	and	r2, r2, #63	; 0x3f
   13948:	bic	r1, r1, #63	; 0x3f
   1394c:	add	r1, r9, r1
   13950:	mov	r0, r9
   13954:	str	r2, [r6, #24]
   13958:	bl	10df4 <memcpy@plt>
   1395c:	b	138f4 <dcngettext@plt+0x28cc>
   13960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13964:	mov	r5, r1
   13968:	sub	sp, sp, #164	; 0xa4
   1396c:	ldr	lr, [pc, #640]	; 13bf4 <dcngettext@plt+0x2bcc>
   13970:	ldr	ip, [pc, #640]	; 13bf8 <dcngettext@plt+0x2bd0>
   13974:	ldr	r1, [pc, #640]	; 13bfc <dcngettext@plt+0x2bd4>
   13978:	ldr	r3, [pc, #640]	; 13c00 <dcngettext@plt+0x2bd8>
   1397c:	mov	r4, #0
   13980:	cmp	r5, #63	; 0x3f
   13984:	mov	r7, r2
   13988:	str	lr, [sp, #4]
   1398c:	str	ip, [sp, #8]
   13990:	str	r1, [sp, #12]
   13994:	str	r3, [sp, #16]
   13998:	str	r4, [sp, #24]
   1399c:	str	r4, [sp, #20]
   139a0:	str	r4, [sp, #28]
   139a4:	mov	sl, r0
   139a8:	bls	13aa0 <dcngettext@plt+0x2a78>
   139ac:	tst	r0, #3
   139b0:	beq	13b28 <dcngettext@plt+0x2b00>
   139b4:	cmp	r5, #64	; 0x40
   139b8:	beq	13b70 <dcngettext@plt+0x2b48>
   139bc:	mov	r9, r5
   139c0:	mov	r4, r0
   139c4:	add	r6, sp, #32
   139c8:	add	r8, sp, #4
   139cc:	add	fp, r4, #64	; 0x40
   139d0:	mov	lr, r6
   139d4:	ldr	r0, [r4]
   139d8:	ldr	r1, [r4, #4]
   139dc:	ldr	r2, [r4, #8]
   139e0:	ldr	r3, [r4, #12]
   139e4:	mov	ip, lr
   139e8:	add	r4, r4, #16
   139ec:	cmp	r4, fp
   139f0:	stmia	ip!, {r0, r1, r2, r3}
   139f4:	mov	lr, ip
   139f8:	bne	139d4 <dcngettext@plt+0x29ac>
   139fc:	sub	r9, r9, #64	; 0x40
   13a00:	mov	r2, r8
   13a04:	mov	r1, #64	; 0x40
   13a08:	mov	r0, r6
   13a0c:	bl	12c80 <dcngettext@plt+0x1c58>
   13a10:	cmp	r9, #64	; 0x40
   13a14:	bhi	139cc <dcngettext@plt+0x29a4>
   13a18:	sub	r2, r5, #65	; 0x41
   13a1c:	bic	r1, r2, #63	; 0x3f
   13a20:	mov	r2, r1
   13a24:	sub	r5, r5, #64	; 0x40
   13a28:	add	r1, r1, #64	; 0x40
   13a2c:	sub	r2, r5, r2
   13a30:	add	r1, sl, r1
   13a34:	ldr	r5, [sp, #28]
   13a38:	add	r0, r6, r5
   13a3c:	add	r5, r2, r5
   13a40:	bl	10df4 <memcpy@plt>
   13a44:	cmp	r5, #63	; 0x3f
   13a48:	bhi	13ba8 <dcngettext@plt+0x2b80>
   13a4c:	ldr	sl, [sp, #20]
   13a50:	ldr	r4, [sp, #24]
   13a54:	add	sl, r5, sl
   13a58:	add	r0, r6, r5
   13a5c:	lsl	lr, sl, #3
   13a60:	lsr	r1, sl, #29
   13a64:	str	r5, [sp, #28]
   13a68:	cmp	r5, #55	; 0x37
   13a6c:	movhi	r9, #128	; 0x80
   13a70:	movls	r9, #64	; 0x40
   13a74:	movhi	r2, #120	; 0x78
   13a78:	movls	r2, #56	; 0x38
   13a7c:	movhi	ip, #31
   13a80:	movls	ip, #15
   13a84:	movhi	r3, #30
   13a88:	movls	r3, #14
   13a8c:	cmp	sl, r5
   13a90:	str	sl, [sp, #20]
   13a94:	addcc	r4, r4, #1
   13a98:	strcc	r4, [sp, #24]
   13a9c:	b	13ad4 <dcngettext@plt+0x2aac>
   13aa0:	cmp	r5, #0
   13aa4:	bne	13bd4 <dcngettext@plt+0x2bac>
   13aa8:	add	r6, sp, #32
   13aac:	mov	r0, r6
   13ab0:	mov	r9, #64	; 0x40
   13ab4:	mov	r2, #56	; 0x38
   13ab8:	mov	r1, r5
   13abc:	mov	lr, r5
   13ac0:	mov	ip, #15
   13ac4:	mov	r3, #14
   13ac8:	mov	r4, r5
   13acc:	add	r8, sp, #4
   13ad0:	str	r5, [sp, #20]
   13ad4:	add	sl, sp, #160	; 0xa0
   13ad8:	add	r3, sl, r3, lsl #2
   13adc:	add	ip, sl, ip, lsl #2
   13ae0:	orr	r4, r1, r4, lsl #3
   13ae4:	sub	r2, r2, r5
   13ae8:	ldr	r1, [pc, #276]	; 13c04 <dcngettext@plt+0x2bdc>
   13aec:	str	lr, [r3, #-128]	; 0xffffff80
   13af0:	str	r4, [ip, #-128]	; 0xffffff80
   13af4:	bl	10df4 <memcpy@plt>
   13af8:	mov	r2, r8
   13afc:	mov	r1, r9
   13b00:	mov	r0, r6
   13b04:	bl	12c80 <dcngettext@plt+0x1c58>
   13b08:	ldmib	sp, {r0, r1, r2, r3}
   13b0c:	str	r0, [r7]
   13b10:	str	r1, [r7, #4]
   13b14:	mov	r0, r7
   13b18:	str	r2, [r7, #8]
   13b1c:	str	r3, [r7, #12]
   13b20:	add	sp, sp, #164	; 0xa4
   13b24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b28:	bic	r4, r5, #63	; 0x3f
   13b2c:	add	r8, sp, #4
   13b30:	mov	r1, r4
   13b34:	mov	r2, r8
   13b38:	bl	12c80 <dcngettext@plt+0x1c58>
   13b3c:	ands	r2, r5, #63	; 0x3f
   13b40:	addne	r1, sl, r4
   13b44:	addne	r6, sp, #32
   13b48:	bne	13a34 <dcngettext@plt+0x2a0c>
   13b4c:	ldr	r5, [sp, #28]
   13b50:	ldr	sl, [sp, #20]
   13b54:	add	r6, sp, #32
   13b58:	add	sl, r5, sl
   13b5c:	add	r0, r6, r5
   13b60:	lsl	lr, sl, #3
   13b64:	lsr	r1, sl, #29
   13b68:	ldr	r4, [sp, #24]
   13b6c:	b	13a68 <dcngettext@plt+0x2a40>
   13b70:	add	r6, sp, #32
   13b74:	add	r4, r0, #64	; 0x40
   13b78:	mov	lr, r6
   13b7c:	ldr	r0, [sl]
   13b80:	ldr	r1, [sl, #4]
   13b84:	ldr	r2, [sl, #8]
   13b88:	ldr	r3, [sl, #12]
   13b8c:	mov	ip, lr
   13b90:	add	sl, sl, #16
   13b94:	cmp	sl, r4
   13b98:	stmia	ip!, {r0, r1, r2, r3}
   13b9c:	mov	lr, ip
   13ba0:	bne	13b7c <dcngettext@plt+0x2b54>
   13ba4:	add	r8, sp, #4
   13ba8:	mov	r2, r8
   13bac:	mov	r0, r6
   13bb0:	sub	r5, r5, #64	; 0x40
   13bb4:	mov	r1, #64	; 0x40
   13bb8:	bl	12c80 <dcngettext@plt+0x1c58>
   13bbc:	mov	r2, r5
   13bc0:	mov	r3, #128	; 0x80
   13bc4:	add	r1, sp, #96	; 0x60
   13bc8:	mov	r0, r6
   13bcc:	bl	10e60 <__memcpy_chk@plt>
   13bd0:	b	13a4c <dcngettext@plt+0x2a24>
   13bd4:	add	r6, sp, #32
   13bd8:	mov	r1, sl
   13bdc:	mov	r0, r6
   13be0:	mov	r2, r5
   13be4:	bl	10df4 <memcpy@plt>
   13be8:	mov	sl, r4
   13bec:	add	r8, sp, #4
   13bf0:	b	13a54 <dcngettext@plt+0x2a2c>
   13bf4:	strbvs	r2, [r5, -r1, lsl #6]
   13bf8:	svc	0x00cdab89
   13bfc:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   13c00:	eorsne	r5, r2, r6, ror r4
   13c04:	andeq	sl, r1, r4, lsl #17
   13c08:	push	{r4, r5}
   13c0c:	pop	{r4, r5}
   13c10:	b	10dc4 <posix_fadvise64@plt>
   13c14:	cmp	r0, #0
   13c18:	bxeq	lr
   13c1c:	push	{r4, lr}
   13c20:	sub	sp, sp, #16
   13c24:	mov	r4, r1
   13c28:	bl	10f68 <fileno@plt>
   13c2c:	mov	r2, #0
   13c30:	mov	r3, #0
   13c34:	str	r4, [sp, #8]
   13c38:	strd	r2, [sp]
   13c3c:	bl	10dc4 <posix_fadvise64@plt>
   13c40:	add	sp, sp, #16
   13c44:	pop	{r4, pc}
   13c48:	push	{r4, r5, lr}
   13c4c:	sub	sp, sp, #12
   13c50:	mov	r4, r0
   13c54:	bl	10f68 <fileno@plt>
   13c58:	cmp	r0, #0
   13c5c:	mov	r0, r4
   13c60:	blt	13cdc <dcngettext@plt+0x2cb4>
   13c64:	bl	10ecc <__freading@plt>
   13c68:	cmp	r0, #0
   13c6c:	bne	13ca8 <dcngettext@plt+0x2c80>
   13c70:	mov	r0, r4
   13c74:	bl	13ce8 <dcngettext@plt+0x2cc0>
   13c78:	cmp	r0, #0
   13c7c:	beq	13cd8 <dcngettext@plt+0x2cb0>
   13c80:	bl	10f2c <__errno_location@plt>
   13c84:	mov	r5, r0
   13c88:	mov	r0, r4
   13c8c:	ldr	r4, [r5]
   13c90:	bl	10f80 <fclose@plt>
   13c94:	cmp	r4, #0
   13c98:	mvnne	r0, #0
   13c9c:	strne	r4, [r5]
   13ca0:	add	sp, sp, #12
   13ca4:	pop	{r4, r5, pc}
   13ca8:	mov	r0, r4
   13cac:	bl	10f68 <fileno@plt>
   13cb0:	mov	r3, #1
   13cb4:	str	r3, [sp]
   13cb8:	mov	r2, #0
   13cbc:	mov	r3, #0
   13cc0:	bl	10e78 <lseek64@plt>
   13cc4:	mvn	r3, #0
   13cc8:	mvn	r2, #0
   13ccc:	cmp	r1, r3
   13cd0:	cmpeq	r0, r2
   13cd4:	bne	13c70 <dcngettext@plt+0x2c48>
   13cd8:	mov	r0, r4
   13cdc:	add	sp, sp, #12
   13ce0:	pop	{r4, r5, lr}
   13ce4:	b	10f80 <fclose@plt>
   13ce8:	push	{r4, lr}
   13cec:	subs	r4, r0, #0
   13cf0:	sub	sp, sp, #8
   13cf4:	beq	13d10 <dcngettext@plt+0x2ce8>
   13cf8:	bl	10ecc <__freading@plt>
   13cfc:	cmp	r0, #0
   13d00:	beq	13d10 <dcngettext@plt+0x2ce8>
   13d04:	ldr	r3, [r4]
   13d08:	tst	r3, #256	; 0x100
   13d0c:	bne	13d20 <dcngettext@plt+0x2cf8>
   13d10:	mov	r0, r4
   13d14:	add	sp, sp, #8
   13d18:	pop	{r4, lr}
   13d1c:	b	10dd0 <fflush@plt>
   13d20:	mov	r3, #1
   13d24:	str	r3, [sp]
   13d28:	mov	r2, #0
   13d2c:	mov	r3, #0
   13d30:	mov	r0, r4
   13d34:	bl	13e38 <dcngettext@plt+0x2e10>
   13d38:	mov	r0, r4
   13d3c:	add	sp, sp, #8
   13d40:	pop	{r4, lr}
   13d44:	b	10dd0 <fflush@plt>
   13d48:	push	{r4, r5, r6, lr}
   13d4c:	mov	r5, r1
   13d50:	bl	10fe0 <fopen64@plt>
   13d54:	subs	r4, r0, #0
   13d58:	beq	13d68 <dcngettext@plt+0x2d40>
   13d5c:	bl	10f68 <fileno@plt>
   13d60:	cmp	r0, #2
   13d64:	bls	13d70 <dcngettext@plt+0x2d48>
   13d68:	mov	r0, r4
   13d6c:	pop	{r4, r5, r6, pc}
   13d70:	bl	17f24 <dcngettext@plt+0x6efc>
   13d74:	subs	r6, r0, #0
   13d78:	blt	13dc0 <dcngettext@plt+0x2d98>
   13d7c:	mov	r0, r4
   13d80:	bl	13c48 <dcngettext@plt+0x2c20>
   13d84:	cmp	r0, #0
   13d88:	bne	13da0 <dcngettext@plt+0x2d78>
   13d8c:	mov	r1, r5
   13d90:	mov	r0, r6
   13d94:	bl	10d7c <fdopen@plt>
   13d98:	subs	r4, r0, #0
   13d9c:	bne	13d68 <dcngettext@plt+0x2d40>
   13da0:	bl	10f2c <__errno_location@plt>
   13da4:	mov	r4, #0
   13da8:	mov	r5, r0
   13dac:	mov	r0, r6
   13db0:	ldr	r6, [r5]
   13db4:	bl	1101c <close@plt>
   13db8:	str	r6, [r5]
   13dbc:	b	13d68 <dcngettext@plt+0x2d40>
   13dc0:	bl	10f2c <__errno_location@plt>
   13dc4:	mov	r5, r0
   13dc8:	mov	r0, r4
   13dcc:	ldr	r6, [r5]
   13dd0:	mov	r4, #0
   13dd4:	bl	13c48 <dcngettext@plt+0x2c20>
   13dd8:	str	r6, [r5]
   13ddc:	b	13d68 <dcngettext@plt+0x2d40>
   13de0:	push	{r4, r5, lr}
   13de4:	sub	sp, sp, #12
   13de8:	mov	r5, r0
   13dec:	bl	10f2c <__errno_location@plt>
   13df0:	mov	r2, #0
   13df4:	mov	r4, r0
   13df8:	ldr	r3, [r0]
   13dfc:	str	r2, [r4]
   13e00:	mov	r0, r5
   13e04:	str	r3, [sp]
   13e08:	str	r3, [sp, #4]
   13e0c:	bl	10ddc <free@plt>
   13e10:	ldr	r3, [r4]
   13e14:	add	r2, sp, #8
   13e18:	cmp	r3, #0
   13e1c:	moveq	r3, #4
   13e20:	movne	r3, #0
   13e24:	add	r3, r2, r3
   13e28:	ldr	r3, [r3, #-8]
   13e2c:	str	r3, [r4]
   13e30:	add	sp, sp, #12
   13e34:	pop	{r4, r5, pc}
   13e38:	push	{r4, r5, r6, r7, r8, lr}
   13e3c:	sub	sp, sp, #8
   13e40:	ldmib	r0, {ip, lr}
   13e44:	mov	r4, r0
   13e48:	ldr	r5, [sp, #32]
   13e4c:	cmp	lr, ip
   13e50:	beq	13e68 <dcngettext@plt+0x2e40>
   13e54:	str	r5, [sp, #32]
   13e58:	mov	r0, r4
   13e5c:	add	sp, sp, #8
   13e60:	pop	{r4, r5, r6, r7, r8, lr}
   13e64:	b	10f8c <fseeko64@plt>
   13e68:	ldr	lr, [r0, #20]
   13e6c:	ldr	ip, [r0, #16]
   13e70:	cmp	lr, ip
   13e74:	bne	13e54 <dcngettext@plt+0x2e2c>
   13e78:	ldr	r8, [r0, #36]	; 0x24
   13e7c:	cmp	r8, #0
   13e80:	bne	13e54 <dcngettext@plt+0x2e2c>
   13e84:	mov	r6, r2
   13e88:	mov	r7, r3
   13e8c:	bl	10f68 <fileno@plt>
   13e90:	mov	r2, r6
   13e94:	mov	r3, r7
   13e98:	str	r5, [sp]
   13e9c:	bl	10e78 <lseek64@plt>
   13ea0:	mvn	r3, #0
   13ea4:	mvn	r2, #0
   13ea8:	cmp	r1, r3
   13eac:	cmpeq	r0, r2
   13eb0:	beq	13ed0 <dcngettext@plt+0x2ea8>
   13eb4:	ldr	r3, [r4]
   13eb8:	strd	r0, [r4, #80]	; 0x50
   13ebc:	mov	r0, r8
   13ec0:	bic	r3, r3, #16
   13ec4:	str	r3, [r4]
   13ec8:	add	sp, sp, #8
   13ecc:	pop	{r4, r5, r6, r7, r8, pc}
   13ed0:	mvn	r0, #0
   13ed4:	b	13ec8 <dcngettext@plt+0x2ea0>
   13ed8:	push	{r4, r5, r6, lr}
   13edc:	subs	r4, r0, #0
   13ee0:	beq	13f54 <dcngettext@plt+0x2f2c>
   13ee4:	mov	r1, #47	; 0x2f
   13ee8:	bl	10fbc <strrchr@plt>
   13eec:	subs	r5, r0, #0
   13ef0:	beq	13f40 <dcngettext@plt+0x2f18>
   13ef4:	add	r6, r5, #1
   13ef8:	sub	r3, r6, r4
   13efc:	cmp	r3, #6
   13f00:	ble	13f40 <dcngettext@plt+0x2f18>
   13f04:	mov	r2, #7
   13f08:	ldr	r1, [pc, #96]	; 13f70 <dcngettext@plt+0x2f48>
   13f0c:	sub	r0, r5, #6
   13f10:	bl	11004 <strncmp@plt>
   13f14:	cmp	r0, #0
   13f18:	bne	13f40 <dcngettext@plt+0x2f18>
   13f1c:	mov	r2, #3
   13f20:	ldr	r1, [pc, #76]	; 13f74 <dcngettext@plt+0x2f4c>
   13f24:	mov	r0, r6
   13f28:	bl	11004 <strncmp@plt>
   13f2c:	cmp	r0, #0
   13f30:	movne	r4, r6
   13f34:	ldreq	r3, [pc, #60]	; 13f78 <dcngettext@plt+0x2f50>
   13f38:	addeq	r4, r5, #4
   13f3c:	streq	r4, [r3]
   13f40:	ldr	r2, [pc, #52]	; 13f7c <dcngettext@plt+0x2f54>
   13f44:	ldr	r3, [pc, #52]	; 13f80 <dcngettext@plt+0x2f58>
   13f48:	str	r4, [r2]
   13f4c:	str	r4, [r3]
   13f50:	pop	{r4, r5, r6, pc}
   13f54:	ldr	r3, [pc, #40]	; 13f84 <dcngettext@plt+0x2f5c>
   13f58:	mov	r2, #55	; 0x37
   13f5c:	mov	r1, #1
   13f60:	ldr	r3, [r3]
   13f64:	ldr	r0, [pc, #28]	; 13f88 <dcngettext@plt+0x2f60>
   13f68:	bl	10e6c <fwrite@plt>
   13f6c:	bl	11010 <abort@plt>
   13f70:	strdeq	sl, [r1], -ip
   13f74:	andeq	sl, r1, r4, lsl #18
   13f78:	andeq	fp, r2, r0, asr r1
   13f7c:	andeq	fp, r2, ip, lsl #3
   13f80:	andeq	fp, r2, r4, asr r1
   13f84:	andeq	fp, r2, r0, ror #2
   13f88:	andeq	sl, r1, r4, asr #17
   13f8c:	push	{r4, r5, r6, lr}
   13f90:	mov	r4, r0
   13f94:	mov	r5, r1
   13f98:	bl	19314 <dcngettext@plt+0x82ec>
   13f9c:	ldrb	r3, [r0]
   13fa0:	bic	r3, r3, #32
   13fa4:	cmp	r3, #85	; 0x55
   13fa8:	bne	14008 <dcngettext@plt+0x2fe0>
   13fac:	ldrb	r3, [r0, #1]
   13fb0:	bic	r3, r3, #32
   13fb4:	cmp	r3, #84	; 0x54
   13fb8:	bne	14044 <dcngettext@plt+0x301c>
   13fbc:	ldrb	r3, [r0, #2]
   13fc0:	bic	r3, r3, #32
   13fc4:	cmp	r3, #70	; 0x46
   13fc8:	bne	14044 <dcngettext@plt+0x301c>
   13fcc:	ldrb	r3, [r0, #3]
   13fd0:	cmp	r3, #45	; 0x2d
   13fd4:	bne	14044 <dcngettext@plt+0x301c>
   13fd8:	ldrb	r3, [r0, #4]
   13fdc:	cmp	r3, #56	; 0x38
   13fe0:	bne	14044 <dcngettext@plt+0x301c>
   13fe4:	ldrb	r3, [r0, #5]
   13fe8:	cmp	r3, #0
   13fec:	bne	14044 <dcngettext@plt+0x301c>
   13ff0:	ldrb	r2, [r4]
   13ff4:	ldr	r3, [pc, #152]	; 14094 <dcngettext@plt+0x306c>
   13ff8:	ldr	r0, [pc, #152]	; 14098 <dcngettext@plt+0x3070>
   13ffc:	cmp	r2, #96	; 0x60
   14000:	movne	r0, r3
   14004:	pop	{r4, r5, r6, pc}
   14008:	cmp	r3, #71	; 0x47
   1400c:	bne	14044 <dcngettext@plt+0x301c>
   14010:	ldrb	r3, [r0, #1]
   14014:	bic	r3, r3, #32
   14018:	cmp	r3, #66	; 0x42
   1401c:	bne	14044 <dcngettext@plt+0x301c>
   14020:	ldrb	r3, [r0, #2]
   14024:	cmp	r3, #49	; 0x31
   14028:	bne	14044 <dcngettext@plt+0x301c>
   1402c:	ldrb	r3, [r0, #3]
   14030:	cmp	r3, #56	; 0x38
   14034:	bne	14044 <dcngettext@plt+0x301c>
   14038:	ldrb	r3, [r0, #4]
   1403c:	cmp	r3, #48	; 0x30
   14040:	beq	14058 <dcngettext@plt+0x3030>
   14044:	ldr	r3, [pc, #80]	; 1409c <dcngettext@plt+0x3074>
   14048:	cmp	r5, #9
   1404c:	ldr	r0, [pc, #76]	; 140a0 <dcngettext@plt+0x3078>
   14050:	movne	r0, r3
   14054:	pop	{r4, r5, r6, pc}
   14058:	ldrb	r3, [r0, #5]
   1405c:	cmp	r3, #51	; 0x33
   14060:	bne	14044 <dcngettext@plt+0x301c>
   14064:	ldrb	r3, [r0, #6]
   14068:	cmp	r3, #48	; 0x30
   1406c:	bne	14044 <dcngettext@plt+0x301c>
   14070:	ldrb	r3, [r0, #7]
   14074:	cmp	r3, #0
   14078:	bne	14044 <dcngettext@plt+0x301c>
   1407c:	ldrb	r2, [r4]
   14080:	ldr	r3, [pc, #28]	; 140a4 <dcngettext@plt+0x307c>
   14084:	ldr	r0, [pc, #28]	; 140a8 <dcngettext@plt+0x3080>
   14088:	cmp	r2, #96	; 0x60
   1408c:	movne	r0, r3
   14090:	pop	{r4, r5, r6, pc}
   14094:	andeq	sl, r1, r0, ror #18
   14098:	andeq	sl, r1, ip, asr r9
   1409c:	andeq	sl, r1, r0, ror r9
   140a0:	andeq	sl, r1, ip, ror #18
   140a4:	andeq	sl, r1, r8, ror #18
   140a8:	andeq	sl, r1, r4, ror #18
   140ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140b0:	sub	sp, sp, #140	; 0x8c
   140b4:	mov	r9, r1
   140b8:	str	r3, [sp, #24]
   140bc:	mov	r3, #1
   140c0:	mov	sl, r0
   140c4:	str	r2, [sp, #44]	; 0x2c
   140c8:	str	r3, [sp, #28]
   140cc:	bl	10e84 <__ctype_get_mb_cur_max@plt>
   140d0:	ldr	r3, [sp, #180]	; 0xb4
   140d4:	mov	fp, r9
   140d8:	mov	r9, sl
   140dc:	lsr	r3, r3, #1
   140e0:	and	r3, r3, #1
   140e4:	str	r3, [sp, #40]	; 0x28
   140e8:	ldr	r3, [sp, #180]	; 0xb4
   140ec:	mov	r2, #0
   140f0:	and	r3, r3, #4
   140f4:	str	r3, [sp, #100]	; 0x64
   140f8:	ldr	r3, [sp, #180]	; 0xb4
   140fc:	str	r2, [sp, #76]	; 0x4c
   14100:	and	r3, r3, #1
   14104:	str	r3, [sp, #96]	; 0x60
   14108:	str	r2, [sp, #36]	; 0x24
   1410c:	str	r2, [sp, #56]	; 0x38
   14110:	str	r2, [sp, #68]	; 0x44
   14114:	str	r2, [sp, #72]	; 0x48
   14118:	str	r2, [sp, #84]	; 0x54
   1411c:	str	r0, [sp, #80]	; 0x50
   14120:	ldr	r3, [sp, #176]	; 0xb0
   14124:	cmp	r3, #10
   14128:	ldrls	pc, [pc, r3, lsl #2]
   1412c:	b	15304 <dcngettext@plt+0x42dc>
   14130:	andeq	r4, r1, ip, asr r1
   14134:	andeq	r4, r1, ip, ror r4
   14138:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1413c:			; <UNDEFINED> instruction: 0x000144b0
   14140:	andeq	r4, r1, r8, lsr #12
   14144:	andeq	r4, r1, r8, lsl #12
   14148:	ldrdeq	r4, [r1], -r0
   1414c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14150:	andeq	r4, r1, ip, lsl r5
   14154:	andeq	r4, r1, ip, lsl r5
   14158:	andeq	r4, r1, ip, lsl r5
   1415c:	mov	r3, #0
   14160:	ldr	r1, [sp, #56]	; 0x38
   14164:	ldr	r2, [sp, #176]	; 0xb0
   14168:	ldr	lr, [sp, #176]	; 0xb0
   1416c:	mov	r8, r3
   14170:	mov	ip, r3
   14174:	str	r3, [sp, #40]	; 0x28
   14178:	mov	r3, r1
   1417c:	cmp	r2, #2
   14180:	moveq	r3, #0
   14184:	andne	r3, r3, #1
   14188:	mov	r0, r3
   1418c:	str	r3, [sp, #92]	; 0x5c
   14190:	ldr	r3, [sp, #68]	; 0x44
   14194:	sub	lr, lr, #2
   14198:	adds	r2, r3, #0
   1419c:	movne	r2, #1
   141a0:	and	r3, r1, ip
   141a4:	and	r3, r2, r3
   141a8:	clz	lr, lr
   141ac:	str	r3, [sp, #88]	; 0x58
   141b0:	lsr	lr, lr, #5
   141b4:	mov	r3, ip
   141b8:	and	r3, r3, lr
   141bc:	mov	sl, #0
   141c0:	and	r0, r2, r0
   141c4:	str	r3, [sp, #64]	; 0x40
   141c8:	eor	r3, r1, #1
   141cc:	str	lr, [sp, #52]	; 0x34
   141d0:	str	r0, [sp, #48]	; 0x30
   141d4:	str	r3, [sp, #60]	; 0x3c
   141d8:	ldr	r3, [sp, #24]
   141dc:	cmn	r3, #1
   141e0:	beq	14710 <dcngettext@plt+0x36e8>
   141e4:	subs	r7, r3, sl
   141e8:	movne	r7, #1
   141ec:	cmp	r7, #0
   141f0:	beq	14728 <dcngettext@plt+0x3700>
   141f4:	ldr	r3, [sp, #48]	; 0x30
   141f8:	cmp	r3, #0
   141fc:	beq	14a94 <dcngettext@plt+0x3a6c>
   14200:	ldr	r2, [sp, #68]	; 0x44
   14204:	ldr	r1, [sp, #24]
   14208:	cmp	r2, #1
   1420c:	mov	r3, r2
   14210:	movls	r3, #0
   14214:	movhi	r3, #1
   14218:	cmn	r1, #1
   1421c:	movne	r3, #0
   14220:	cmp	r3, #0
   14224:	add	r4, sl, r2
   14228:	beq	14238 <dcngettext@plt+0x3210>
   1422c:	ldr	r0, [sp, #44]	; 0x2c
   14230:	bl	10f14 <strlen@plt>
   14234:	str	r0, [sp, #24]
   14238:	ldr	r3, [sp, #24]
   1423c:	cmp	r3, r4
   14240:	ldr	r3, [sp, #44]	; 0x2c
   14244:	add	r5, r3, sl
   14248:	bcc	14a9c <dcngettext@plt+0x3a74>
   1424c:	mov	r0, r5
   14250:	ldr	r2, [sp, #68]	; 0x44
   14254:	ldr	r1, [sp, #72]	; 0x48
   14258:	bl	10e18 <memcmp@plt>
   1425c:	cmp	r0, #0
   14260:	bne	14a9c <dcngettext@plt+0x3a74>
   14264:	ldr	r3, [sp, #40]	; 0x28
   14268:	cmp	r3, #0
   1426c:	bne	15458 <dcngettext@plt+0x4430>
   14270:	ldrb	r4, [r5]
   14274:	cmp	r4, #126	; 0x7e
   14278:	ldrls	pc, [pc, r4, lsl #2]
   1427c:	b	15394 <dcngettext@plt+0x436c>
   14280:	andeq	r4, r1, r4, asr r9
   14284:	muleq	r1, r4, r3
   14288:	muleq	r1, r4, r3
   1428c:	muleq	r1, r4, r3
   14290:	muleq	r1, r4, r3
   14294:	muleq	r1, r4, r3
   14298:	muleq	r1, r4, r3
   1429c:	andeq	r4, r1, r0, asr #18
   142a0:	andeq	r4, r1, ip, lsr #18
   142a4:	andeq	r4, r1, r8, lsl #18
   142a8:	andeq	r4, r1, r8, ror #17
   142ac:	andeq	r4, r1, r8, lsl r9
   142b0:	andeq	r4, r1, r0, asr r8
   142b4:	andeq	r4, r1, r4, lsl #21
   142b8:	muleq	r1, r4, r3
   142bc:	muleq	r1, r4, r3
   142c0:	muleq	r1, r4, r3
   142c4:	muleq	r1, r4, r3
   142c8:	muleq	r1, r4, r3
   142cc:	muleq	r1, r4, r3
   142d0:	muleq	r1, r4, r3
   142d4:	muleq	r1, r4, r3
   142d8:	muleq	r1, r4, r3
   142dc:	muleq	r1, r4, r3
   142e0:	muleq	r1, r4, r3
   142e4:	muleq	r1, r4, r3
   142e8:	muleq	r1, r4, r3
   142ec:	muleq	r1, r4, r3
   142f0:	muleq	r1, r4, r3
   142f4:	muleq	r1, r4, r3
   142f8:	muleq	r1, r4, r3
   142fc:	muleq	r1, r4, r3
   14300:	andeq	r4, r1, r4, ror sl
   14304:	andeq	r4, r1, r4, asr sl
   14308:	andeq	r4, r1, r4, asr sl
   1430c:	andeq	r4, r1, r4, lsr sl
   14310:	andeq	r4, r1, r4, asr sl
   14314:	andeq	r4, r1, r0, asr #16
   14318:	andeq	r4, r1, r4, asr sl
   1431c:	andeq	r4, r1, ip, lsl r8
   14320:	andeq	r4, r1, r4, asr sl
   14324:	andeq	r4, r1, r4, asr sl
   14328:	andeq	r4, r1, r4, asr sl
   1432c:	andeq	r4, r1, r0, asr #16
   14330:	andeq	r4, r1, r0, asr #16
   14334:	andeq	r4, r1, r0, asr #16
   14338:	andeq	r4, r1, r0, asr #16
   1433c:	andeq	r4, r1, r0, asr #16
   14340:	andeq	r4, r1, r0, asr #16
   14344:	andeq	r4, r1, r0, asr #16
   14348:	andeq	r4, r1, r0, asr #16
   1434c:	andeq	r4, r1, r0, asr #16
   14350:	andeq	r4, r1, r0, asr #16
   14354:	andeq	r4, r1, r0, asr #16
   14358:	andeq	r4, r1, r0, asr #16
   1435c:	andeq	r4, r1, r0, asr #16
   14360:	andeq	r4, r1, r0, asr #16
   14364:	andeq	r4, r1, r0, asr #16
   14368:	andeq	r4, r1, r0, asr #16
   1436c:	andeq	r4, r1, r4, asr sl
   14370:	andeq	r4, r1, r4, asr sl
   14374:	andeq	r4, r1, r4, asr sl
   14378:	andeq	r4, r1, r4, asr sl
   1437c:	andeq	r4, r1, ip, asr #15
   14380:	muleq	r1, r4, r3
   14384:	andeq	r4, r1, r0, asr #16
   14388:	andeq	r4, r1, r0, asr #16
   1438c:	andeq	r4, r1, r0, asr #16
   14390:	andeq	r4, r1, r0, asr #16
   14394:	andeq	r4, r1, r0, asr #16
   14398:	andeq	r4, r1, r0, asr #16
   1439c:	andeq	r4, r1, r0, asr #16
   143a0:	andeq	r4, r1, r0, asr #16
   143a4:	andeq	r4, r1, r0, asr #16
   143a8:	andeq	r4, r1, r0, asr #16
   143ac:	andeq	r4, r1, r0, asr #16
   143b0:	andeq	r4, r1, r0, asr #16
   143b4:	andeq	r4, r1, r0, asr #16
   143b8:	andeq	r4, r1, r0, asr #16
   143bc:	andeq	r4, r1, r0, asr #16
   143c0:	andeq	r4, r1, r0, asr #16
   143c4:	andeq	r4, r1, r0, asr #16
   143c8:	andeq	r4, r1, r0, asr #16
   143cc:	andeq	r4, r1, r0, asr #16
   143d0:	andeq	r4, r1, r0, asr #16
   143d4:	andeq	r4, r1, r0, asr #16
   143d8:	andeq	r4, r1, r0, asr #16
   143dc:	andeq	r4, r1, r0, asr #16
   143e0:	andeq	r4, r1, r0, asr #16
   143e4:	andeq	r4, r1, r0, asr #16
   143e8:	andeq	r4, r1, r0, asr #16
   143ec:	andeq	r4, r1, r4, asr sl
   143f0:	muleq	r1, r8, r7
   143f4:	andeq	r4, r1, r0, asr #16
   143f8:	andeq	r4, r1, r4, asr sl
   143fc:	andeq	r4, r1, r0, asr #16
   14400:	andeq	r4, r1, r4, asr sl
   14404:	andeq	r4, r1, r0, asr #16
   14408:	andeq	r4, r1, r0, asr #16
   1440c:	andeq	r4, r1, r0, asr #16
   14410:	andeq	r4, r1, r0, asr #16
   14414:	andeq	r4, r1, r0, asr #16
   14418:	andeq	r4, r1, r0, asr #16
   1441c:	andeq	r4, r1, r0, asr #16
   14420:	andeq	r4, r1, r0, asr #16
   14424:	andeq	r4, r1, r0, asr #16
   14428:	andeq	r4, r1, r0, asr #16
   1442c:	andeq	r4, r1, r0, asr #16
   14430:	andeq	r4, r1, r0, asr #16
   14434:	andeq	r4, r1, r0, asr #16
   14438:	andeq	r4, r1, r0, asr #16
   1443c:	andeq	r4, r1, r0, asr #16
   14440:	andeq	r4, r1, r0, asr #16
   14444:	andeq	r4, r1, r0, asr #16
   14448:	andeq	r4, r1, r0, asr #16
   1444c:	andeq	r4, r1, r0, asr #16
   14450:	andeq	r4, r1, r0, asr #16
   14454:	andeq	r4, r1, r0, asr #16
   14458:	andeq	r4, r1, r0, asr #16
   1445c:	andeq	r4, r1, r0, asr #16
   14460:	andeq	r4, r1, r0, asr #16
   14464:	andeq	r4, r1, r0, asr #16
   14468:	andeq	r4, r1, r0, asr #16
   1446c:	andeq	r4, r1, r0, asr r6
   14470:	andeq	r4, r1, r4, asr sl
   14474:	andeq	r4, r1, r0, asr r6
   14478:	andeq	r4, r1, r4, lsr sl
   1447c:	mov	r3, #1
   14480:	str	r3, [sp, #40]	; 0x28
   14484:	str	r3, [sp, #68]	; 0x44
   14488:	mov	r8, #0
   1448c:	ldr	r3, [pc, #4056]	; 1546c <dcngettext@plt+0x4444>
   14490:	str	r3, [sp, #72]	; 0x48
   14494:	mov	r3, #2
   14498:	str	r3, [sp, #176]	; 0xb0
   1449c:	ldr	r1, [sp, #56]	; 0x38
   144a0:	mov	r2, r3
   144a4:	ldr	ip, [sp, #40]	; 0x28
   144a8:	mov	lr, r3
   144ac:	b	14178 <dcngettext@plt+0x3150>
   144b0:	mov	r3, #1
   144b4:	str	r3, [sp, #56]	; 0x38
   144b8:	str	r3, [sp, #68]	; 0x44
   144bc:	str	r3, [sp, #40]	; 0x28
   144c0:	ldr	r3, [pc, #4004]	; 1546c <dcngettext@plt+0x4444>
   144c4:	mov	r8, #0
   144c8:	str	r3, [sp, #72]	; 0x48
   144cc:	b	14494 <dcngettext@plt+0x346c>
   144d0:	mov	r3, #1
   144d4:	str	r3, [sp, #56]	; 0x38
   144d8:	str	r3, [sp, #68]	; 0x44
   144dc:	str	r3, [sp, #40]	; 0x28
   144e0:	ldr	r3, [pc, #3976]	; 15470 <dcngettext@plt+0x4448>
   144e4:	mov	r8, #0
   144e8:	str	r3, [sp, #72]	; 0x48
   144ec:	mov	r3, #5
   144f0:	b	14498 <dcngettext@plt+0x3470>
   144f4:	mov	r3, #0
   144f8:	str	r3, [sp, #40]	; 0x28
   144fc:	mov	r3, #1
   14500:	str	r3, [sp, #56]	; 0x38
   14504:	mov	r8, #0
   14508:	mov	r1, r3
   1450c:	ldr	r2, [sp, #176]	; 0xb0
   14510:	ldr	ip, [sp, #40]	; 0x28
   14514:	ldr	lr, [sp, #176]	; 0xb0
   14518:	b	14178 <dcngettext@plt+0x3150>
   1451c:	ldr	r3, [sp, #176]	; 0xb0
   14520:	cmp	r3, #10
   14524:	beq	14568 <dcngettext@plt+0x3540>
   14528:	mov	r2, #5
   1452c:	ldr	r1, [pc, #3904]	; 15474 <dcngettext@plt+0x444c>
   14530:	mov	r0, #0
   14534:	bl	10e30 <dcgettext@plt>
   14538:	ldr	r2, [pc, #3892]	; 15474 <dcngettext@plt+0x444c>
   1453c:	cmp	r0, r2
   14540:	str	r0, [sp, #188]	; 0xbc
   14544:	beq	15600 <dcngettext@plt+0x45d8>
   14548:	mov	r2, #5
   1454c:	ldr	r1, [pc, #3864]	; 1546c <dcngettext@plt+0x4444>
   14550:	mov	r0, #0
   14554:	bl	10e30 <dcgettext@plt>
   14558:	ldr	r2, [pc, #3852]	; 1546c <dcngettext@plt+0x4444>
   1455c:	cmp	r0, r2
   14560:	str	r0, [sp, #192]	; 0xc0
   14564:	beq	155f0 <dcngettext@plt+0x45c8>
   14568:	ldr	r8, [sp, #40]	; 0x28
   1456c:	cmp	r8, #0
   14570:	movne	r8, #0
   14574:	bne	145a4 <dcngettext@plt+0x357c>
   14578:	ldr	r3, [sp, #188]	; 0xbc
   1457c:	ldrb	r3, [r3]
   14580:	cmp	r3, #0
   14584:	beq	145a4 <dcngettext@plt+0x357c>
   14588:	ldr	r2, [sp, #188]	; 0xbc
   1458c:	cmp	fp, r8
   14590:	strbhi	r3, [r9, r8]
   14594:	ldrb	r3, [r2, #1]!
   14598:	add	r8, r8, #1
   1459c:	cmp	r3, #0
   145a0:	bne	1458c <dcngettext@plt+0x3564>
   145a4:	ldr	r0, [sp, #192]	; 0xc0
   145a8:	bl	10f14 <strlen@plt>
   145ac:	ldr	r3, [sp, #192]	; 0xc0
   145b0:	ldr	r2, [sp, #176]	; 0xb0
   145b4:	str	r3, [sp, #72]	; 0x48
   145b8:	mov	r3, #1
   145bc:	str	r3, [sp, #56]	; 0x38
   145c0:	mov	r1, r3
   145c4:	ldr	ip, [sp, #40]	; 0x28
   145c8:	ldr	lr, [sp, #176]	; 0xb0
   145cc:	str	r0, [sp, #68]	; 0x44
   145d0:	b	14178 <dcngettext@plt+0x3150>
   145d4:	ldr	r3, [sp, #40]	; 0x28
   145d8:	cmp	r3, #0
   145dc:	beq	15284 <dcngettext@plt+0x425c>
   145e0:	mov	r3, #1
   145e4:	str	r3, [sp, #68]	; 0x44
   145e8:	ldr	r3, [pc, #3708]	; 1546c <dcngettext@plt+0x4444>
   145ec:	str	r3, [sp, #72]	; 0x48
   145f0:	mov	r8, #0
   145f4:	ldr	r1, [sp, #56]	; 0x38
   145f8:	ldr	r2, [sp, #176]	; 0xb0
   145fc:	ldr	ip, [sp, #40]	; 0x28
   14600:	ldr	lr, [sp, #176]	; 0xb0
   14604:	b	14178 <dcngettext@plt+0x3150>
   14608:	ldr	r3, [sp, #40]	; 0x28
   1460c:	cmp	r3, #0
   14610:	beq	15308 <dcngettext@plt+0x42e0>
   14614:	str	r3, [sp, #56]	; 0x38
   14618:	mov	r3, #1
   1461c:	str	r3, [sp, #68]	; 0x44
   14620:	ldr	r3, [pc, #3656]	; 15470 <dcngettext@plt+0x4448>
   14624:	b	145ec <dcngettext@plt+0x35c4>
   14628:	ldr	r3, [sp, #40]	; 0x28
   1462c:	cmp	r3, #0
   14630:	mov	r3, #1
   14634:	streq	r3, [sp, #56]	; 0x38
   14638:	beq	15284 <dcngettext@plt+0x425c>
   1463c:	str	r3, [sp, #68]	; 0x44
   14640:	ldr	r3, [pc, #3620]	; 1546c <dcngettext@plt+0x4444>
   14644:	mov	r8, #0
   14648:	str	r3, [sp, #72]	; 0x48
   1464c:	b	14494 <dcngettext@plt+0x346c>
   14650:	ldr	r3, [sp, #24]
   14654:	ldr	r6, [sp, #48]	; 0x30
   14658:	cmn	r3, #1
   1465c:	beq	14cb8 <dcngettext@plt+0x3c90>
   14660:	subs	r3, r3, #1
   14664:	movne	r3, #1
   14668:	cmp	r3, #0
   1466c:	beq	14a38 <dcngettext@plt+0x3a10>
   14670:	ldr	r1, [sp, #52]	; 0x34
   14674:	mov	r7, r3
   14678:	mov	r3, #0
   1467c:	str	r3, [sp, #32]
   14680:	ldr	r3, [sp, #60]	; 0x3c
   14684:	orr	r2, r1, r3
   14688:	ldr	r3, [sp, #40]	; 0x28
   1468c:	eor	r2, r2, #1
   14690:	orr	r2, r3, r2
   14694:	tst	r2, #255	; 0xff
   14698:	bne	14fbc <dcngettext@plt+0x3f94>
   1469c:	cmp	r6, #0
   146a0:	bne	1487c <dcngettext@plt+0x3854>
   146a4:	ldr	r3, [sp, #36]	; 0x24
   146a8:	add	sl, sl, #1
   146ac:	and	r3, r3, r7
   146b0:	uxtb	r6, r3
   146b4:	cmp	r6, #0
   146b8:	beq	146e4 <dcngettext@plt+0x36bc>
   146bc:	cmp	fp, r8
   146c0:	movhi	r3, #39	; 0x27
   146c4:	strbhi	r3, [r9, r8]
   146c8:	add	r3, r8, #1
   146cc:	cmp	fp, r3
   146d0:	movhi	r2, #39	; 0x27
   146d4:	add	r8, r8, #2
   146d8:	strbhi	r2, [r9, r3]
   146dc:	mov	r3, #0
   146e0:	str	r3, [sp, #36]	; 0x24
   146e4:	ldr	r2, [sp, #32]
   146e8:	cmp	r8, fp
   146ec:	ldr	r3, [sp, #28]
   146f0:	strbcc	r4, [r9, r8]
   146f4:	cmp	r2, #0
   146f8:	moveq	r3, #0
   146fc:	str	r3, [sp, #28]
   14700:	ldr	r3, [sp, #24]
   14704:	add	r8, r8, #1
   14708:	cmn	r3, #1
   1470c:	bne	141e4 <dcngettext@plt+0x31bc>
   14710:	ldr	r3, [sp, #44]	; 0x2c
   14714:	ldrb	r3, [r3, sl]
   14718:	adds	r7, r3, #0
   1471c:	movne	r7, #1
   14720:	cmp	r7, #0
   14724:	bne	141f4 <dcngettext@plt+0x31cc>
   14728:	ldr	r3, [sp, #64]	; 0x40
   1472c:	cmp	r8, #0
   14730:	movne	r3, #0
   14734:	andeq	r3, r3, #1
   14738:	cmp	r3, #0
   1473c:	str	r3, [sp, #64]	; 0x40
   14740:	bne	151e4 <dcngettext@plt+0x41bc>
   14744:	ldr	r3, [sp, #40]	; 0x28
   14748:	ldr	r2, [sp, #52]	; 0x34
   1474c:	eor	r3, r3, #1
   14750:	ands	r2, r2, r3
   14754:	beq	15610 <dcngettext@plt+0x45e8>
   14758:	ldr	r3, [sp, #76]	; 0x4c
   1475c:	cmp	r3, #0
   14760:	beq	155e0 <dcngettext@plt+0x45b8>
   14764:	ldr	r3, [sp, #28]
   14768:	cmp	r3, #0
   1476c:	bne	1559c <dcngettext@plt+0x4574>
   14770:	ldr	r2, [sp, #84]	; 0x54
   14774:	clz	r3, fp
   14778:	cmp	r2, #0
   1477c:	lsr	r3, r3, #5
   14780:	moveq	r3, #0
   14784:	cmp	r3, #0
   14788:	beq	1553c <dcngettext@plt+0x4514>
   1478c:	mov	fp, r2
   14790:	str	r3, [sp, #76]	; 0x4c
   14794:	b	14120 <dcngettext@plt+0x30f8>
   14798:	ldr	r3, [sp, #176]	; 0xb0
   1479c:	ldr	r6, [sp, #48]	; 0x30
   147a0:	cmp	r3, #2
   147a4:	beq	14cdc <dcngettext@plt+0x3cb4>
   147a8:	ldr	r3, [sp, #88]	; 0x58
   147ac:	cmp	r3, #0
   147b0:	beq	15260 <dcngettext@plt+0x4238>
   147b4:	mov	r3, #0
   147b8:	add	sl, sl, #1
   147bc:	ldr	r6, [sp, #36]	; 0x24
   147c0:	str	r3, [sp, #32]
   147c4:	mov	r4, #92	; 0x5c
   147c8:	b	146b4 <dcngettext@plt+0x368c>
   147cc:	ldr	r3, [sp, #176]	; 0xb0
   147d0:	ldr	r6, [sp, #48]	; 0x30
   147d4:	cmp	r3, #2
   147d8:	beq	14d0c <dcngettext@plt+0x3ce4>
   147dc:	cmp	r3, #5
   147e0:	bne	15270 <dcngettext@plt+0x4248>
   147e4:	ldr	r3, [sp, #100]	; 0x64
   147e8:	cmp	r3, #0
   147ec:	beq	152d4 <dcngettext@plt+0x42ac>
   147f0:	ldr	r2, [sp, #24]
   147f4:	add	r3, sl, #2
   147f8:	cmp	r2, r3
   147fc:	bls	1480c <dcngettext@plt+0x37e4>
   14800:	ldrb	r4, [r5, #1]
   14804:	cmp	r4, #63	; 0x3f
   14808:	beq	1547c <dcngettext@plt+0x4454>
   1480c:	mov	r1, #0
   14810:	str	r1, [sp, #32]
   14814:	mov	r4, #63	; 0x3f
   14818:	b	14680 <dcngettext@plt+0x3658>
   1481c:	ldr	r3, [sp, #176]	; 0xb0
   14820:	ldr	r6, [sp, #48]	; 0x30
   14824:	cmp	r3, #2
   14828:	beq	14d38 <dcngettext@plt+0x3d10>
   1482c:	str	r7, [sp, #32]
   14830:	str	r7, [sp, #76]	; 0x4c
   14834:	mov	r1, #0
   14838:	mov	r4, #39	; 0x27
   1483c:	b	14680 <dcngettext@plt+0x3658>
   14840:	ldr	r6, [sp, #48]	; 0x30
   14844:	ldr	r1, [sp, #52]	; 0x34
   14848:	str	r7, [sp, #32]
   1484c:	b	14680 <dcngettext@plt+0x3658>
   14850:	ldr	r6, [sp, #48]	; 0x30
   14854:	ldr	r1, [sp, #52]	; 0x34
   14858:	mov	r4, #12
   1485c:	mov	r3, #102	; 0x66
   14860:	ldr	r2, [sp, #56]	; 0x38
   14864:	cmp	r2, #0
   14868:	streq	r2, [sp, #32]
   1486c:	beq	14680 <dcngettext@plt+0x3658>
   14870:	mov	r4, r3
   14874:	mov	r3, #0
   14878:	str	r3, [sp, #32]
   1487c:	ldr	r3, [sp, #40]	; 0x28
   14880:	cmp	r3, #0
   14884:	bne	14ff4 <dcngettext@plt+0x3fcc>
   14888:	ldr	r3, [sp, #36]	; 0x24
   1488c:	eor	r3, r3, #1
   14890:	and	r3, r3, r1
   14894:	ands	r3, r3, #255	; 0xff
   14898:	beq	148d0 <dcngettext@plt+0x38a8>
   1489c:	cmp	fp, r8
   148a0:	movhi	r2, #39	; 0x27
   148a4:	strbhi	r2, [r9, r8]
   148a8:	add	r2, r8, #1
   148ac:	cmp	fp, r2
   148b0:	movhi	r1, #36	; 0x24
   148b4:	strbhi	r1, [r9, r2]
   148b8:	add	r2, r8, #2
   148bc:	cmp	fp, r2
   148c0:	add	r8, r8, #3
   148c4:	movhi	r1, #39	; 0x27
   148c8:	strbhi	r1, [r9, r2]
   148cc:	str	r3, [sp, #36]	; 0x24
   148d0:	cmp	fp, r8
   148d4:	movhi	r3, #92	; 0x5c
   148d8:	strbhi	r3, [r9, r8]
   148dc:	add	sl, sl, #1
   148e0:	add	r8, r8, #1
   148e4:	b	146e4 <dcngettext@plt+0x36bc>
   148e8:	ldr	r6, [sp, #48]	; 0x30
   148ec:	mov	r4, #10
   148f0:	mov	r3, #110	; 0x6e
   148f4:	ldr	r2, [sp, #64]	; 0x40
   148f8:	cmp	r2, #0
   148fc:	bne	1537c <dcngettext@plt+0x4354>
   14900:	ldr	r1, [sp, #52]	; 0x34
   14904:	b	14860 <dcngettext@plt+0x3838>
   14908:	ldr	r6, [sp, #48]	; 0x30
   1490c:	ldr	r1, [sp, #52]	; 0x34
   14910:	mov	r3, #116	; 0x74
   14914:	b	14860 <dcngettext@plt+0x3838>
   14918:	ldr	r6, [sp, #48]	; 0x30
   1491c:	ldr	r1, [sp, #52]	; 0x34
   14920:	mov	r4, #11
   14924:	mov	r3, #118	; 0x76
   14928:	b	14860 <dcngettext@plt+0x3838>
   1492c:	ldr	r6, [sp, #48]	; 0x30
   14930:	ldr	r1, [sp, #52]	; 0x34
   14934:	mov	r4, #8
   14938:	mov	r3, #98	; 0x62
   1493c:	b	14860 <dcngettext@plt+0x3838>
   14940:	ldr	r6, [sp, #48]	; 0x30
   14944:	ldr	r1, [sp, #52]	; 0x34
   14948:	mov	r4, #7
   1494c:	mov	r3, #97	; 0x61
   14950:	b	14860 <dcngettext@plt+0x3838>
   14954:	ldr	r3, [sp, #56]	; 0x38
   14958:	ldr	r6, [sp, #48]	; 0x30
   1495c:	cmp	r3, #0
   14960:	beq	14e24 <dcngettext@plt+0x3dfc>
   14964:	ldr	r3, [sp, #40]	; 0x28
   14968:	cmp	r3, #0
   1496c:	bne	15458 <dcngettext@plt+0x4430>
   14970:	ldr	r3, [sp, #36]	; 0x24
   14974:	ldr	r2, [sp, #52]	; 0x34
   14978:	eor	r3, r3, #1
   1497c:	ands	r3, r2, r3
   14980:	moveq	r2, r8
   14984:	beq	149bc <dcngettext@plt+0x3994>
   14988:	cmp	fp, r8
   1498c:	movhi	r2, #39	; 0x27
   14990:	strbhi	r2, [r9, r8]
   14994:	add	r2, r8, #1
   14998:	cmp	fp, r2
   1499c:	movhi	r1, #36	; 0x24
   149a0:	strbhi	r1, [r9, r2]
   149a4:	add	r2, r8, #2
   149a8:	cmp	fp, r2
   149ac:	movhi	r1, #39	; 0x27
   149b0:	strbhi	r1, [r9, r2]
   149b4:	add	r2, r8, #3
   149b8:	str	r3, [sp, #36]	; 0x24
   149bc:	cmp	fp, r2
   149c0:	movhi	r3, #92	; 0x5c
   149c4:	strbhi	r3, [r9, r2]
   149c8:	ldr	r3, [sp, #92]	; 0x5c
   149cc:	add	r8, r2, #1
   149d0:	cmp	r3, #0
   149d4:	beq	15358 <dcngettext@plt+0x4330>
   149d8:	ldr	r1, [sp, #24]
   149dc:	add	r3, sl, #1
   149e0:	cmp	r1, r3
   149e4:	bls	14a1c <dcngettext@plt+0x39f4>
   149e8:	ldr	r1, [sp, #44]	; 0x2c
   149ec:	ldrb	r3, [r1, r3]
   149f0:	sub	r3, r3, #48	; 0x30
   149f4:	cmp	r3, #9
   149f8:	bhi	14a1c <dcngettext@plt+0x39f4>
   149fc:	cmp	fp, r8
   14a00:	movhi	r3, #48	; 0x30
   14a04:	strbhi	r3, [r9, r8]
   14a08:	add	r3, r2, #2
   14a0c:	cmp	fp, r3
   14a10:	add	r8, r2, #3
   14a14:	movhi	r1, #48	; 0x30
   14a18:	strbhi	r1, [r9, r3]
   14a1c:	ldr	r3, [sp, #40]	; 0x28
   14a20:	ldr	r1, [sp, #52]	; 0x34
   14a24:	mov	r7, r3
   14a28:	str	r3, [sp, #32]
   14a2c:	mov	r4, #48	; 0x30
   14a30:	b	14680 <dcngettext@plt+0x3658>
   14a34:	ldr	r6, [sp, #48]	; 0x30
   14a38:	cmp	sl, #0
   14a3c:	streq	r7, [sp, #32]
   14a40:	beq	14a60 <dcngettext@plt+0x3a38>
   14a44:	mov	r3, #0
   14a48:	ldr	r1, [sp, #52]	; 0x34
   14a4c:	str	r3, [sp, #32]
   14a50:	b	14680 <dcngettext@plt+0x3658>
   14a54:	ldr	r6, [sp, #48]	; 0x30
   14a58:	mov	r3, #0
   14a5c:	str	r3, [sp, #32]
   14a60:	ldr	r3, [sp, #64]	; 0x40
   14a64:	cmp	r3, #0
   14a68:	bne	151e4 <dcngettext@plt+0x41bc>
   14a6c:	ldr	r1, [sp, #52]	; 0x34
   14a70:	b	14680 <dcngettext@plt+0x3658>
   14a74:	ldr	r3, [sp, #48]	; 0x30
   14a78:	mov	r6, r3
   14a7c:	str	r3, [sp, #32]
   14a80:	b	14a60 <dcngettext@plt+0x3a38>
   14a84:	ldr	r6, [sp, #48]	; 0x30
   14a88:	mov	r4, #13
   14a8c:	mov	r3, #114	; 0x72
   14a90:	b	148f4 <dcngettext@plt+0x38cc>
   14a94:	ldr	r3, [sp, #44]	; 0x2c
   14a98:	add	r5, r3, sl
   14a9c:	ldrb	r4, [r5]
   14aa0:	cmp	r4, #126	; 0x7e
   14aa4:	ldrls	pc, [pc, r4, lsl #2]
   14aa8:	b	14e44 <dcngettext@plt+0x3e1c>
   14aac:	andeq	r4, r1, r4, lsl lr
   14ab0:	andeq	r4, r1, r4, asr #28
   14ab4:	andeq	r4, r1, r4, asr #28
   14ab8:	andeq	r4, r1, r4, asr #28
   14abc:	andeq	r4, r1, r4, asr #28
   14ac0:	andeq	r4, r1, r4, asr #28
   14ac4:	andeq	r4, r1, r4, asr #28
   14ac8:	andeq	r4, r1, ip, lsl #28
   14acc:	andeq	r4, r1, r4, lsl #28
   14ad0:	strdeq	r4, [r1], -r8
   14ad4:	strdeq	r4, [r1], -r0
   14ad8:	andeq	r4, r1, r8, ror #27
   14adc:	andeq	r4, r1, r0, ror #27
   14ae0:	ldrdeq	r4, [r1], -r8
   14ae4:	andeq	r4, r1, r4, asr #28
   14ae8:	andeq	r4, r1, r4, asr #28
   14aec:	andeq	r4, r1, r4, asr #28
   14af0:	andeq	r4, r1, r4, asr #28
   14af4:	andeq	r4, r1, r4, asr #28
   14af8:	andeq	r4, r1, r4, asr #28
   14afc:	andeq	r4, r1, r4, asr #28
   14b00:	andeq	r4, r1, r4, asr #28
   14b04:	andeq	r4, r1, r4, asr #28
   14b08:	andeq	r4, r1, r4, asr #28
   14b0c:	andeq	r4, r1, r4, asr #28
   14b10:	andeq	r4, r1, r4, asr #28
   14b14:	andeq	r4, r1, r4, asr #28
   14b18:	andeq	r4, r1, r4, asr #28
   14b1c:	andeq	r4, r1, r4, asr #28
   14b20:	andeq	r4, r1, r4, asr #28
   14b24:	andeq	r4, r1, r4, asr #28
   14b28:	andeq	r4, r1, r4, asr #28
   14b2c:	andeq	r4, r1, ip, asr #27
   14b30:	andeq	r4, r1, r4, asr #27
   14b34:	andeq	r4, r1, r4, asr #27
   14b38:			; <UNDEFINED> instruction: 0x00014dbc
   14b3c:	andeq	r4, r1, r4, asr #27
   14b40:			; <UNDEFINED> instruction: 0x00014db4
   14b44:	andeq	r4, r1, r4, asr #27
   14b48:	andeq	r4, r1, r8, lsr #26
   14b4c:	andeq	r4, r1, r4, asr #27
   14b50:	andeq	r4, r1, r4, asr #27
   14b54:	andeq	r4, r1, r4, asr #27
   14b58:			; <UNDEFINED> instruction: 0x00014db4
   14b5c:			; <UNDEFINED> instruction: 0x00014db4
   14b60:			; <UNDEFINED> instruction: 0x00014db4
   14b64:			; <UNDEFINED> instruction: 0x00014db4
   14b68:			; <UNDEFINED> instruction: 0x00014db4
   14b6c:			; <UNDEFINED> instruction: 0x00014db4
   14b70:			; <UNDEFINED> instruction: 0x00014db4
   14b74:			; <UNDEFINED> instruction: 0x00014db4
   14b78:			; <UNDEFINED> instruction: 0x00014db4
   14b7c:			; <UNDEFINED> instruction: 0x00014db4
   14b80:			; <UNDEFINED> instruction: 0x00014db4
   14b84:			; <UNDEFINED> instruction: 0x00014db4
   14b88:			; <UNDEFINED> instruction: 0x00014db4
   14b8c:			; <UNDEFINED> instruction: 0x00014db4
   14b90:			; <UNDEFINED> instruction: 0x00014db4
   14b94:			; <UNDEFINED> instruction: 0x00014db4
   14b98:	andeq	r4, r1, r4, asr #27
   14b9c:	andeq	r4, r1, r4, asr #27
   14ba0:	andeq	r4, r1, r4, asr #27
   14ba4:	andeq	r4, r1, r4, asr #27
   14ba8:	strdeq	r4, [r1], -ip
   14bac:	andeq	r4, r1, r4, asr #28
   14bb0:			; <UNDEFINED> instruction: 0x00014db4
   14bb4:			; <UNDEFINED> instruction: 0x00014db4
   14bb8:			; <UNDEFINED> instruction: 0x00014db4
   14bbc:			; <UNDEFINED> instruction: 0x00014db4
   14bc0:			; <UNDEFINED> instruction: 0x00014db4
   14bc4:			; <UNDEFINED> instruction: 0x00014db4
   14bc8:			; <UNDEFINED> instruction: 0x00014db4
   14bcc:			; <UNDEFINED> instruction: 0x00014db4
   14bd0:			; <UNDEFINED> instruction: 0x00014db4
   14bd4:			; <UNDEFINED> instruction: 0x00014db4
   14bd8:			; <UNDEFINED> instruction: 0x00014db4
   14bdc:			; <UNDEFINED> instruction: 0x00014db4
   14be0:			; <UNDEFINED> instruction: 0x00014db4
   14be4:			; <UNDEFINED> instruction: 0x00014db4
   14be8:			; <UNDEFINED> instruction: 0x00014db4
   14bec:			; <UNDEFINED> instruction: 0x00014db4
   14bf0:			; <UNDEFINED> instruction: 0x00014db4
   14bf4:			; <UNDEFINED> instruction: 0x00014db4
   14bf8:			; <UNDEFINED> instruction: 0x00014db4
   14bfc:			; <UNDEFINED> instruction: 0x00014db4
   14c00:			; <UNDEFINED> instruction: 0x00014db4
   14c04:			; <UNDEFINED> instruction: 0x00014db4
   14c08:			; <UNDEFINED> instruction: 0x00014db4
   14c0c:			; <UNDEFINED> instruction: 0x00014db4
   14c10:			; <UNDEFINED> instruction: 0x00014db4
   14c14:			; <UNDEFINED> instruction: 0x00014db4
   14c18:	andeq	r4, r1, r4, asr #27
   14c1c:	andeq	r4, r1, ip, asr #25
   14c20:			; <UNDEFINED> instruction: 0x00014db4
   14c24:	andeq	r4, r1, r4, asr #27
   14c28:			; <UNDEFINED> instruction: 0x00014db4
   14c2c:	andeq	r4, r1, r4, asr #27
   14c30:			; <UNDEFINED> instruction: 0x00014db4
   14c34:			; <UNDEFINED> instruction: 0x00014db4
   14c38:			; <UNDEFINED> instruction: 0x00014db4
   14c3c:			; <UNDEFINED> instruction: 0x00014db4
   14c40:			; <UNDEFINED> instruction: 0x00014db4
   14c44:			; <UNDEFINED> instruction: 0x00014db4
   14c48:			; <UNDEFINED> instruction: 0x00014db4
   14c4c:			; <UNDEFINED> instruction: 0x00014db4
   14c50:			; <UNDEFINED> instruction: 0x00014db4
   14c54:			; <UNDEFINED> instruction: 0x00014db4
   14c58:			; <UNDEFINED> instruction: 0x00014db4
   14c5c:			; <UNDEFINED> instruction: 0x00014db4
   14c60:			; <UNDEFINED> instruction: 0x00014db4
   14c64:			; <UNDEFINED> instruction: 0x00014db4
   14c68:			; <UNDEFINED> instruction: 0x00014db4
   14c6c:			; <UNDEFINED> instruction: 0x00014db4
   14c70:			; <UNDEFINED> instruction: 0x00014db4
   14c74:			; <UNDEFINED> instruction: 0x00014db4
   14c78:			; <UNDEFINED> instruction: 0x00014db4
   14c7c:			; <UNDEFINED> instruction: 0x00014db4
   14c80:			; <UNDEFINED> instruction: 0x00014db4
   14c84:			; <UNDEFINED> instruction: 0x00014db4
   14c88:			; <UNDEFINED> instruction: 0x00014db4
   14c8c:			; <UNDEFINED> instruction: 0x00014db4
   14c90:			; <UNDEFINED> instruction: 0x00014db4
   14c94:			; <UNDEFINED> instruction: 0x00014db4
   14c98:	andeq	r4, r1, r8, lsr #25
   14c9c:	andeq	r4, r1, r4, asr #27
   14ca0:	andeq	r4, r1, r8, lsr #25
   14ca4:			; <UNDEFINED> instruction: 0x00014dbc
   14ca8:	ldr	r3, [sp, #24]
   14cac:	mov	r6, #0
   14cb0:	cmn	r3, #1
   14cb4:	bne	14660 <dcngettext@plt+0x3638>
   14cb8:	ldr	r3, [sp, #44]	; 0x2c
   14cbc:	ldrb	r3, [r3, #1]
   14cc0:	adds	r3, r3, #0
   14cc4:	movne	r3, #1
   14cc8:	b	14668 <dcngettext@plt+0x3640>
   14ccc:	ldr	r3, [sp, #176]	; 0xb0
   14cd0:	mov	r6, #0
   14cd4:	cmp	r3, #2
   14cd8:	bne	147a8 <dcngettext@plt+0x3780>
   14cdc:	ldr	r3, [sp, #64]	; 0x40
   14ce0:	cmp	r3, #0
   14ce4:	bne	1551c <dcngettext@plt+0x44f4>
   14ce8:	add	sl, sl, #1
   14cec:	ldr	r6, [sp, #36]	; 0x24
   14cf0:	str	r3, [sp, #32]
   14cf4:	mov	r4, #92	; 0x5c
   14cf8:	b	146b4 <dcngettext@plt+0x368c>
   14cfc:	ldr	r3, [sp, #176]	; 0xb0
   14d00:	mov	r6, #0
   14d04:	cmp	r3, #2
   14d08:	bne	147dc <dcngettext@plt+0x37b4>
   14d0c:	ldr	r3, [sp, #40]	; 0x28
   14d10:	cmp	r3, #0
   14d14:	bne	14ff8 <dcngettext@plt+0x3fd0>
   14d18:	mov	r1, r7
   14d1c:	str	r3, [sp, #32]
   14d20:	mov	r4, #63	; 0x3f
   14d24:	b	14680 <dcngettext@plt+0x3658>
   14d28:	ldr	r3, [sp, #176]	; 0xb0
   14d2c:	mov	r6, #0
   14d30:	cmp	r3, #2
   14d34:	bne	1482c <dcngettext@plt+0x3804>
   14d38:	ldr	r3, [sp, #64]	; 0x40
   14d3c:	cmp	r3, #0
   14d40:	bne	1551c <dcngettext@plt+0x44f4>
   14d44:	ldr	r2, [sp, #84]	; 0x54
   14d48:	adds	r3, fp, #0
   14d4c:	movne	r3, #1
   14d50:	cmp	r2, #0
   14d54:	movne	r3, #0
   14d58:	cmp	r3, #0
   14d5c:	strne	fp, [sp, #84]	; 0x54
   14d60:	movne	fp, #0
   14d64:	bne	14d94 <dcngettext@plt+0x3d6c>
   14d68:	cmp	fp, r8
   14d6c:	movhi	r3, #39	; 0x27
   14d70:	strbhi	r3, [r9, r8]
   14d74:	add	r3, r8, #1
   14d78:	cmp	fp, r3
   14d7c:	movhi	r2, #92	; 0x5c
   14d80:	strbhi	r2, [r9, r3]
   14d84:	add	r3, r8, #2
   14d88:	cmp	fp, r3
   14d8c:	movhi	r2, #39	; 0x27
   14d90:	strbhi	r2, [r9, r3]
   14d94:	ldr	r3, [sp, #64]	; 0x40
   14d98:	add	r8, r8, #3
   14d9c:	mov	r1, r7
   14da0:	str	r7, [sp, #32]
   14da4:	str	r7, [sp, #76]	; 0x4c
   14da8:	str	r3, [sp, #36]	; 0x24
   14dac:	mov	r4, #39	; 0x27
   14db0:	b	14680 <dcngettext@plt+0x3658>
   14db4:	mov	r6, #0
   14db8:	b	14844 <dcngettext@plt+0x381c>
   14dbc:	mov	r6, #0
   14dc0:	b	14a38 <dcngettext@plt+0x3a10>
   14dc4:	mov	r6, #0
   14dc8:	b	14a58 <dcngettext@plt+0x3a30>
   14dcc:	str	r7, [sp, #32]
   14dd0:	mov	r6, #0
   14dd4:	b	14a60 <dcngettext@plt+0x3a38>
   14dd8:	mov	r6, #0
   14ddc:	b	14a88 <dcngettext@plt+0x3a60>
   14de0:	mov	r6, #0
   14de4:	b	14854 <dcngettext@plt+0x382c>
   14de8:	mov	r6, #0
   14dec:	b	1491c <dcngettext@plt+0x38f4>
   14df0:	mov	r6, #0
   14df4:	b	148ec <dcngettext@plt+0x38c4>
   14df8:	mov	r6, #0
   14dfc:	mov	r3, #116	; 0x74
   14e00:	b	148f4 <dcngettext@plt+0x38cc>
   14e04:	mov	r6, #0
   14e08:	b	14930 <dcngettext@plt+0x3908>
   14e0c:	mov	r6, #0
   14e10:	b	14944 <dcngettext@plt+0x391c>
   14e14:	ldr	r3, [sp, #56]	; 0x38
   14e18:	mov	r6, #0
   14e1c:	cmp	r3, #0
   14e20:	bne	14964 <dcngettext@plt+0x393c>
   14e24:	ldr	r3, [sp, #96]	; 0x60
   14e28:	cmp	r3, #0
   14e2c:	addne	sl, sl, #1
   14e30:	bne	141d8 <dcngettext@plt+0x31b0>
   14e34:	ldr	r1, [sp, #52]	; 0x34
   14e38:	str	r3, [sp, #32]
   14e3c:	mov	r4, r3
   14e40:	b	14680 <dcngettext@plt+0x3658>
   14e44:	mov	r6, #0
   14e48:	ldr	r3, [sp, #80]	; 0x50
   14e4c:	cmp	r3, #1
   14e50:	bne	15040 <dcngettext@plt+0x4018>
   14e54:	bl	10efc <__ctype_b_loc@plt>
   14e58:	ldr	r2, [sp, #80]	; 0x50
   14e5c:	sxth	r3, r4
   14e60:	mov	r1, r2
   14e64:	lsl	r3, r3, #1
   14e68:	ldr	r2, [r0]
   14e6c:	ldrh	r3, [r2, r3]
   14e70:	and	r3, r3, #16384	; 0x4000
   14e74:	cmp	r3, #0
   14e78:	movne	r3, #1
   14e7c:	moveq	r3, #0
   14e80:	str	r3, [sp, #32]
   14e84:	moveq	r3, #1
   14e88:	movne	r3, #0
   14e8c:	ldr	r2, [sp, #56]	; 0x38
   14e90:	and	r3, r3, r2
   14e94:	ands	r3, r3, #255	; 0xff
   14e98:	beq	14a6c <dcngettext@plt+0x3a44>
   14e9c:	add	r1, sl, r1
   14ea0:	mov	r0, #0
   14ea4:	ldr	r7, [sp, #40]	; 0x28
   14ea8:	ldr	r2, [sp, #36]	; 0x24
   14eac:	ldr	lr, [sp, #52]	; 0x34
   14eb0:	b	14f60 <dcngettext@plt+0x3f38>
   14eb4:	cmp	r7, #0
   14eb8:	bne	152b4 <dcngettext@plt+0x428c>
   14ebc:	eor	r0, r2, #1
   14ec0:	ands	r0, lr, r0
   14ec4:	beq	14efc <dcngettext@plt+0x3ed4>
   14ec8:	cmp	fp, r8
   14ecc:	movhi	r2, #39	; 0x27
   14ed0:	strbhi	r2, [r9, r8]
   14ed4:	add	r2, r8, #1
   14ed8:	cmp	fp, r2
   14edc:	movhi	ip, #36	; 0x24
   14ee0:	strbhi	ip, [r9, r2]
   14ee4:	add	r2, r8, #2
   14ee8:	cmp	fp, r2
   14eec:	movhi	ip, #39	; 0x27
   14ef0:	strbhi	ip, [r9, r2]
   14ef4:	add	r8, r8, #3
   14ef8:	mov	r2, r0
   14efc:	cmp	fp, r8
   14f00:	movhi	r0, #92	; 0x5c
   14f04:	strbhi	r0, [r9, r8]
   14f08:	add	r0, r8, #1
   14f0c:	cmp	fp, r0
   14f10:	lsrhi	ip, r4, #6
   14f14:	addhi	ip, ip, #48	; 0x30
   14f18:	strbhi	ip, [r9, r0]
   14f1c:	add	ip, r8, #2
   14f20:	cmp	fp, ip
   14f24:	lsrhi	r0, r4, #3
   14f28:	andhi	r0, r0, #7
   14f2c:	addhi	r0, r0, #48	; 0x30
   14f30:	add	sl, sl, #1
   14f34:	strbhi	r0, [r9, ip]
   14f38:	and	r4, r4, #7
   14f3c:	cmp	sl, r1
   14f40:	add	r4, r4, #48	; 0x30
   14f44:	add	r8, r8, #3
   14f48:	bcs	152cc <dcngettext@plt+0x42a4>
   14f4c:	mov	r0, r3
   14f50:	cmp	fp, r8
   14f54:	strbhi	r4, [r9, r8]
   14f58:	ldrb	r4, [r5, #1]!
   14f5c:	add	r8, r8, #1
   14f60:	cmp	r3, #0
   14f64:	bne	14eb4 <dcngettext@plt+0x3e8c>
   14f68:	cmp	r6, #0
   14f6c:	bne	15010 <dcngettext@plt+0x3fe8>
   14f70:	eor	r6, r0, #1
   14f74:	and	r6, r6, r2
   14f78:	add	sl, sl, #1
   14f7c:	cmp	r1, sl
   14f80:	uxtb	r6, r6
   14f84:	bls	15038 <dcngettext@plt+0x4010>
   14f88:	cmp	r6, #0
   14f8c:	beq	14f50 <dcngettext@plt+0x3f28>
   14f90:	cmp	fp, r8
   14f94:	movhi	r2, #39	; 0x27
   14f98:	strbhi	r2, [r9, r8]
   14f9c:	add	r2, r8, #1
   14fa0:	cmp	fp, r2
   14fa4:	movhi	ip, #39	; 0x27
   14fa8:	strbhi	ip, [r9, r2]
   14fac:	add	r8, r8, #2
   14fb0:	mov	r6, r3
   14fb4:	mov	r2, r3
   14fb8:	b	14f50 <dcngettext@plt+0x3f28>
   14fbc:	ldr	r3, [sp, #184]	; 0xb8
   14fc0:	cmp	r3, #0
   14fc4:	beq	1469c <dcngettext@plt+0x3674>
   14fc8:	lsr	r2, r4, #5
   14fcc:	mov	r0, r3
   14fd0:	uxtb	r2, r2
   14fd4:	and	r3, r4, #31
   14fd8:	ldr	r2, [r0, r2, lsl #2]
   14fdc:	lsr	r3, r2, r3
   14fe0:	tst	r3, #1
   14fe4:	beq	1469c <dcngettext@plt+0x3674>
   14fe8:	ldr	r3, [sp, #40]	; 0x28
   14fec:	cmp	r3, #0
   14ff0:	beq	14888 <dcngettext@plt+0x3860>
   14ff4:	mov	r3, r1
   14ff8:	str	r3, [sp, #64]	; 0x40
   14ffc:	mov	sl, r9
   15000:	ldr	r3, [sp, #56]	; 0x38
   15004:	mov	r9, fp
   15008:	ldr	r2, [sp, #64]	; 0x40
   1500c:	b	151fc <dcngettext@plt+0x41d4>
   15010:	cmp	fp, r8
   15014:	eor	r6, r0, #1
   15018:	movhi	ip, #92	; 0x5c
   1501c:	and	r6, r6, r2
   15020:	add	sl, sl, #1
   15024:	strbhi	ip, [r9, r8]
   15028:	cmp	r1, sl
   1502c:	add	r8, r8, #1
   15030:	uxtb	r6, r6
   15034:	bhi	14f88 <dcngettext@plt+0x3f60>
   15038:	str	r2, [sp, #36]	; 0x24
   1503c:	b	146b4 <dcngettext@plt+0x368c>
   15040:	ldr	r3, [sp, #24]
   15044:	cmn	r3, #1
   15048:	mov	r3, #0
   1504c:	str	r3, [sp, #128]	; 0x80
   15050:	str	r3, [sp, #132]	; 0x84
   15054:	beq	15348 <dcngettext@plt+0x4320>
   15058:	mov	r2, r7
   1505c:	mov	r3, #0
   15060:	str	r7, [sp, #104]	; 0x68
   15064:	str	r5, [sp, #116]	; 0x74
   15068:	mov	r7, r3
   1506c:	mov	r5, r2
   15070:	str	r4, [sp, #32]
   15074:	str	r6, [sp, #108]	; 0x6c
   15078:	str	r8, [sp, #112]	; 0x70
   1507c:	ldr	r3, [sp, #44]	; 0x2c
   15080:	add	r6, sl, r7
   15084:	add	r4, r3, r6
   15088:	ldr	r3, [sp, #24]
   1508c:	mov	r1, r4
   15090:	sub	r2, r3, r6
   15094:	add	r0, sp, #124	; 0x7c
   15098:	add	r3, sp, #128	; 0x80
   1509c:	bl	19348 <dcngettext@plt+0x8320>
   150a0:	subs	r8, r0, #0
   150a4:	beq	1542c <dcngettext@plt+0x4404>
   150a8:	cmn	r8, #1
   150ac:	beq	15404 <dcngettext@plt+0x43dc>
   150b0:	cmn	r8, #2
   150b4:	beq	1539c <dcngettext@plt+0x4374>
   150b8:	ldr	r3, [sp, #64]	; 0x40
   150bc:	cmp	r3, #0
   150c0:	beq	15180 <dcngettext@plt+0x4158>
   150c4:	cmp	r8, #1
   150c8:	beq	15180 <dcngettext@plt+0x4158>
   150cc:	sub	r3, r8, #1
   150d0:	add	r6, r3, r6
   150d4:	ldr	r3, [sp, #44]	; 0x2c
   150d8:	add	r6, r3, r6
   150dc:	ldrb	r3, [r4, #1]!
   150e0:	sub	r3, r3, #91	; 0x5b
   150e4:	cmp	r3, #33	; 0x21
   150e8:	ldrls	pc, [pc, r3, lsl #2]
   150ec:	b	15178 <dcngettext@plt+0x4150>
   150f0:	andeq	r5, r1, r4, ror #3
   150f4:	andeq	r5, r1, r4, ror #3
   150f8:	andeq	r5, r1, r8, ror r1
   150fc:	andeq	r5, r1, r4, ror #3
   15100:	andeq	r5, r1, r8, ror r1
   15104:	andeq	r5, r1, r4, ror #3
   15108:	andeq	r5, r1, r8, ror r1
   1510c:	andeq	r5, r1, r8, ror r1
   15110:	andeq	r5, r1, r8, ror r1
   15114:	andeq	r5, r1, r8, ror r1
   15118:	andeq	r5, r1, r8, ror r1
   1511c:	andeq	r5, r1, r8, ror r1
   15120:	andeq	r5, r1, r8, ror r1
   15124:	andeq	r5, r1, r8, ror r1
   15128:	andeq	r5, r1, r8, ror r1
   1512c:	andeq	r5, r1, r8, ror r1
   15130:	andeq	r5, r1, r8, ror r1
   15134:	andeq	r5, r1, r8, ror r1
   15138:	andeq	r5, r1, r8, ror r1
   1513c:	andeq	r5, r1, r8, ror r1
   15140:	andeq	r5, r1, r8, ror r1
   15144:	andeq	r5, r1, r8, ror r1
   15148:	andeq	r5, r1, r8, ror r1
   1514c:	andeq	r5, r1, r8, ror r1
   15150:	andeq	r5, r1, r8, ror r1
   15154:	andeq	r5, r1, r8, ror r1
   15158:	andeq	r5, r1, r8, ror r1
   1515c:	andeq	r5, r1, r8, ror r1
   15160:	andeq	r5, r1, r8, ror r1
   15164:	andeq	r5, r1, r8, ror r1
   15168:	andeq	r5, r1, r8, ror r1
   1516c:	andeq	r5, r1, r8, ror r1
   15170:	andeq	r5, r1, r8, ror r1
   15174:	andeq	r5, r1, r4, ror #3
   15178:	cmp	r6, r4
   1517c:	bne	150dc <dcngettext@plt+0x40b4>
   15180:	ldr	r0, [sp, #124]	; 0x7c
   15184:	bl	10e54 <iswprint@plt>
   15188:	add	r7, r7, r8
   1518c:	cmp	r0, #0
   15190:	add	r0, sp, #128	; 0x80
   15194:	moveq	r5, #0
   15198:	bl	10e00 <mbsinit@plt>
   1519c:	cmp	r0, #0
   151a0:	beq	1507c <dcngettext@plt+0x4054>
   151a4:	ldr	r4, [sp, #32]
   151a8:	str	r5, [sp, #32]
   151ac:	ldr	r3, [sp, #32]
   151b0:	mov	r1, r7
   151b4:	eor	r3, r3, #1
   151b8:	ldr	r7, [sp, #104]	; 0x68
   151bc:	ldr	r6, [sp, #108]	; 0x6c
   151c0:	ldr	r8, [sp, #112]	; 0x70
   151c4:	ldr	r5, [sp, #116]	; 0x74
   151c8:	uxtb	r3, r3
   151cc:	cmp	r1, #1
   151d0:	bls	14e8c <dcngettext@plt+0x3e64>
   151d4:	ldr	r2, [sp, #56]	; 0x38
   151d8:	and	r3, r3, r2
   151dc:	uxtb	r3, r3
   151e0:	b	14e9c <dcngettext@plt+0x3e74>
   151e4:	mov	r3, #2
   151e8:	str	r3, [sp, #176]	; 0xb0
   151ec:	ldr	r2, [sp, #64]	; 0x40
   151f0:	ldr	r3, [sp, #56]	; 0x38
   151f4:	mov	sl, r9
   151f8:	mov	r9, fp
   151fc:	and	r3, r3, r2
   15200:	tst	r3, #255	; 0xff
   15204:	ldr	r3, [sp, #176]	; 0xb0
   15208:	movne	r3, #4
   1520c:	str	r3, [sp, #176]	; 0xb0
   15210:	ldr	r3, [sp, #180]	; 0xb4
   15214:	mov	ip, #0
   15218:	bic	r3, r3, #2
   1521c:	str	r3, [sp, #4]
   15220:	ldr	r3, [sp, #192]	; 0xc0
   15224:	ldr	r2, [sp, #44]	; 0x2c
   15228:	str	r3, [sp, #16]
   1522c:	ldr	r3, [sp, #188]	; 0xbc
   15230:	mov	r1, r9
   15234:	str	r3, [sp, #12]
   15238:	ldr	r3, [sp, #176]	; 0xb0
   1523c:	mov	r0, sl
   15240:	str	r3, [sp]
   15244:	str	ip, [sp, #8]
   15248:	ldr	r3, [sp, #24]
   1524c:	bl	140ac <dcngettext@plt+0x3084>
   15250:	mov	fp, r0
   15254:	mov	r0, fp
   15258:	add	sp, sp, #140	; 0x8c
   1525c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15260:	mov	r4, #92	; 0x5c
   15264:	mov	r1, #0
   15268:	mov	r3, r4
   1526c:	b	14860 <dcngettext@plt+0x3838>
   15270:	mov	r3, #0
   15274:	ldr	r1, [sp, #52]	; 0x34
   15278:	str	r3, [sp, #32]
   1527c:	mov	r4, #63	; 0x3f
   15280:	b	14680 <dcngettext@plt+0x3658>
   15284:	cmp	fp, #0
   15288:	beq	152e4 <dcngettext@plt+0x42bc>
   1528c:	mov	r3, #39	; 0x27
   15290:	strb	r3, [r9]
   15294:	mov	r3, #0
   15298:	str	r3, [sp, #40]	; 0x28
   1529c:	mov	r3, #1
   152a0:	str	r3, [sp, #68]	; 0x44
   152a4:	ldr	r3, [pc, #448]	; 1546c <dcngettext@plt+0x4444>
   152a8:	mov	r8, #1
   152ac:	str	r3, [sp, #72]	; 0x48
   152b0:	b	14494 <dcngettext@plt+0x346c>
   152b4:	ldr	r3, [sp, #40]	; 0x28
   152b8:	mov	sl, r9
   152bc:	str	r3, [sp, #56]	; 0x38
   152c0:	mov	r9, fp
   152c4:	ldr	r2, [sp, #64]	; 0x40
   152c8:	b	151fc <dcngettext@plt+0x41d4>
   152cc:	str	r2, [sp, #36]	; 0x24
   152d0:	b	146e4 <dcngettext@plt+0x36bc>
   152d4:	mov	r1, #0
   152d8:	str	r3, [sp, #32]
   152dc:	mov	r4, #63	; 0x3f
   152e0:	b	14680 <dcngettext@plt+0x3658>
   152e4:	ldr	r3, [pc, #384]	; 1546c <dcngettext@plt+0x4444>
   152e8:	str	r3, [sp, #72]	; 0x48
   152ec:	mov	r3, #0
   152f0:	str	r3, [sp, #40]	; 0x28
   152f4:	mov	r3, #1
   152f8:	str	r3, [sp, #68]	; 0x44
   152fc:	mov	r8, r3
   15300:	b	14494 <dcngettext@plt+0x346c>
   15304:	bl	11010 <abort@plt>
   15308:	cmp	fp, #0
   1530c:	beq	1536c <dcngettext@plt+0x4344>
   15310:	mov	r2, #1
   15314:	mov	r3, #34	; 0x22
   15318:	strb	r3, [r9]
   1531c:	mov	r8, r2
   15320:	mov	r3, r2
   15324:	str	r2, [sp, #68]	; 0x44
   15328:	str	r3, [sp, #56]	; 0x38
   1532c:	ldr	r3, [pc, #316]	; 15470 <dcngettext@plt+0x4448>
   15330:	ldr	r1, [sp, #56]	; 0x38
   15334:	str	r3, [sp, #72]	; 0x48
   15338:	ldr	r2, [sp, #176]	; 0xb0
   1533c:	ldr	ip, [sp, #40]	; 0x28
   15340:	ldr	lr, [sp, #176]	; 0xb0
   15344:	b	14178 <dcngettext@plt+0x3150>
   15348:	ldr	r0, [sp, #44]	; 0x2c
   1534c:	bl	10f14 <strlen@plt>
   15350:	str	r0, [sp, #24]
   15354:	b	15058 <dcngettext@plt+0x4030>
   15358:	mov	r7, #0
   1535c:	ldr	r1, [sp, #52]	; 0x34
   15360:	str	r3, [sp, #32]
   15364:	mov	r4, #48	; 0x30
   15368:	b	14680 <dcngettext@plt+0x3658>
   1536c:	mov	r3, #1
   15370:	str	r3, [sp, #68]	; 0x44
   15374:	mov	r8, r3
   15378:	b	15328 <dcngettext@plt+0x4300>
   1537c:	mov	r3, #2
   15380:	mov	sl, r9
   15384:	str	r3, [sp, #176]	; 0xb0
   15388:	mov	r9, fp
   1538c:	ldr	r3, [sp, #56]	; 0x38
   15390:	b	151fc <dcngettext@plt+0x41d4>
   15394:	ldr	r6, [sp, #48]	; 0x30
   15398:	b	14e48 <dcngettext@plt+0x3e20>
   1539c:	ldr	r0, [sp, #24]
   153a0:	mov	ip, r6
   153a4:	cmp	r0, ip
   153a8:	mov	r1, r7
   153ac:	mov	r2, r4
   153b0:	ldr	r7, [sp, #104]	; 0x68
   153b4:	ldr	r4, [sp, #32]
   153b8:	ldr	r6, [sp, #108]	; 0x6c
   153bc:	ldr	r8, [sp, #112]	; 0x70
   153c0:	ldr	r5, [sp, #116]	; 0x74
   153c4:	bls	153f4 <dcngettext@plt+0x43cc>
   153c8:	ldrb	r3, [r2]
   153cc:	cmp	r3, #0
   153d0:	bne	153e4 <dcngettext@plt+0x43bc>
   153d4:	b	15504 <dcngettext@plt+0x44dc>
   153d8:	ldrb	r3, [r2, #1]!
   153dc:	cmp	r3, #0
   153e0:	beq	15504 <dcngettext@plt+0x44dc>
   153e4:	add	r1, r1, #1
   153e8:	add	r3, sl, r1
   153ec:	cmp	r0, r3
   153f0:	bhi	153d8 <dcngettext@plt+0x43b0>
   153f4:	mov	r2, #0
   153f8:	mov	r3, r7
   153fc:	str	r2, [sp, #32]
   15400:	b	151cc <dcngettext@plt+0x41a4>
   15404:	mov	r1, r7
   15408:	ldr	r7, [sp, #104]	; 0x68
   1540c:	mov	r2, #0
   15410:	ldr	r4, [sp, #32]
   15414:	ldr	r6, [sp, #108]	; 0x6c
   15418:	ldr	r8, [sp, #112]	; 0x70
   1541c:	ldr	r5, [sp, #116]	; 0x74
   15420:	mov	r3, r7
   15424:	str	r2, [sp, #32]
   15428:	b	151cc <dcngettext@plt+0x41a4>
   1542c:	mov	r3, r5
   15430:	eor	r3, r3, #1
   15434:	ldr	r4, [sp, #32]
   15438:	mov	r1, r7
   1543c:	str	r5, [sp, #32]
   15440:	ldr	r7, [sp, #104]	; 0x68
   15444:	ldr	r6, [sp, #108]	; 0x6c
   15448:	ldr	r8, [sp, #112]	; 0x70
   1544c:	ldr	r5, [sp, #116]	; 0x74
   15450:	uxtb	r3, r3
   15454:	b	151cc <dcngettext@plt+0x41a4>
   15458:	mov	sl, r9
   1545c:	str	r3, [sp, #56]	; 0x38
   15460:	mov	r9, fp
   15464:	ldr	r2, [sp, #64]	; 0x40
   15468:	b	151fc <dcngettext@plt+0x41d4>
   1546c:	andeq	sl, r1, r0, ror r9
   15470:	andeq	sl, r1, ip, ror #18
   15474:	andeq	sl, r1, r4, ror r9
   15478:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   1547c:	ldr	r2, [sp, #44]	; 0x2c
   15480:	ldrb	r1, [r2, r3]
   15484:	sub	r2, r1, #33	; 0x21
   15488:	uxtb	r2, r2
   1548c:	cmp	r2, #29
   15490:	bhi	15510 <dcngettext@plt+0x44e8>
   15494:	ldr	r0, [pc, #-36]	; 15478 <dcngettext@plt+0x4450>
   15498:	mov	ip, #1
   1549c:	ands	r2, r0, ip, lsl r2
   154a0:	beq	15530 <dcngettext@plt+0x4508>
   154a4:	ldr	r2, [sp, #40]	; 0x28
   154a8:	cmp	r2, #0
   154ac:	bne	15624 <dcngettext@plt+0x45fc>
   154b0:	add	r2, r8, #1
   154b4:	cmp	fp, r8
   154b8:	strbhi	r4, [r9, r8]
   154bc:	cmp	fp, r2
   154c0:	movhi	r0, #34	; 0x22
   154c4:	strbhi	r0, [r9, r2]
   154c8:	add	r2, r8, #2
   154cc:	cmp	fp, r2
   154d0:	movhi	r0, #34	; 0x22
   154d4:	strbhi	r0, [r9, r2]
   154d8:	add	r2, r8, #3
   154dc:	cmp	fp, r2
   154e0:	mov	sl, r3
   154e4:	ldr	r3, [sp, #40]	; 0x28
   154e8:	movhi	r0, #63	; 0x3f
   154ec:	mov	r4, r1
   154f0:	strbhi	r0, [r9, r2]
   154f4:	add	r8, r8, #4
   154f8:	mov	r1, r3
   154fc:	str	r3, [sp, #32]
   15500:	b	14680 <dcngettext@plt+0x3658>
   15504:	str	r3, [sp, #32]
   15508:	mov	r3, r7
   1550c:	b	151cc <dcngettext@plt+0x41a4>
   15510:	mov	r1, #0
   15514:	str	r1, [sp, #32]
   15518:	b	14680 <dcngettext@plt+0x3658>
   1551c:	mov	sl, r9
   15520:	ldr	r3, [sp, #56]	; 0x38
   15524:	mov	r9, fp
   15528:	ldr	r2, [sp, #64]	; 0x40
   1552c:	b	151fc <dcngettext@plt+0x41d4>
   15530:	str	r2, [sp, #32]
   15534:	mov	r1, #0
   15538:	b	14680 <dcngettext@plt+0x3658>
   1553c:	ldr	r2, [sp, #76]	; 0x4c
   15540:	mov	sl, r9
   15544:	mov	r9, fp
   15548:	mov	fp, r8
   1554c:	ldr	r1, [sp, #72]	; 0x48
   15550:	cmp	r1, #0
   15554:	moveq	r3, #0
   15558:	andne	r3, r2, #1
   1555c:	cmp	r3, #0
   15560:	beq	1558c <dcngettext@plt+0x4564>
   15564:	ldrb	r3, [r1]
   15568:	cmp	r3, #0
   1556c:	beq	1558c <dcngettext@plt+0x4564>
   15570:	mov	r2, r1
   15574:	cmp	r9, fp
   15578:	strbhi	r3, [sl, fp]
   1557c:	ldrb	r3, [r2, #1]!
   15580:	add	fp, fp, #1
   15584:	cmp	r3, #0
   15588:	bne	15574 <dcngettext@plt+0x454c>
   1558c:	cmp	r9, fp
   15590:	movhi	r3, #0
   15594:	strbhi	r3, [sl, fp]
   15598:	b	15254 <dcngettext@plt+0x422c>
   1559c:	ldr	r3, [sp, #192]	; 0xc0
   155a0:	mov	ip, #5
   155a4:	str	r3, [sp, #16]
   155a8:	ldr	r3, [sp, #188]	; 0xbc
   155ac:	ldr	r2, [sp, #44]	; 0x2c
   155b0:	str	r3, [sp, #12]
   155b4:	ldr	r3, [sp, #184]	; 0xb8
   155b8:	ldr	r1, [sp, #84]	; 0x54
   155bc:	str	r3, [sp, #8]
   155c0:	ldr	r3, [sp, #180]	; 0xb4
   155c4:	mov	r0, r9
   155c8:	str	r3, [sp, #4]
   155cc:	str	ip, [sp]
   155d0:	ldr	r3, [sp, #24]
   155d4:	bl	140ac <dcngettext@plt+0x3084>
   155d8:	mov	fp, r0
   155dc:	b	15254 <dcngettext@plt+0x422c>
   155e0:	mov	sl, r9
   155e4:	mov	r9, fp
   155e8:	mov	fp, r8
   155ec:	b	1554c <dcngettext@plt+0x4524>
   155f0:	ldr	r1, [sp, #176]	; 0xb0
   155f4:	bl	13f8c <dcngettext@plt+0x2f64>
   155f8:	str	r0, [sp, #192]	; 0xc0
   155fc:	b	14568 <dcngettext@plt+0x3540>
   15600:	ldr	r1, [sp, #176]	; 0xb0
   15604:	bl	13f8c <dcngettext@plt+0x2f64>
   15608:	str	r0, [sp, #188]	; 0xbc
   1560c:	b	14548 <dcngettext@plt+0x3520>
   15610:	mov	sl, r9
   15614:	mov	r2, r3
   15618:	mov	r9, fp
   1561c:	mov	fp, r8
   15620:	b	1554c <dcngettext@plt+0x4524>
   15624:	mov	sl, r9
   15628:	mov	r9, fp
   1562c:	b	15210 <dcngettext@plt+0x41e8>
   15630:	push	{r4, r5, r6, lr}
   15634:	mov	r5, r0
   15638:	bl	10f2c <__errno_location@plt>
   1563c:	cmp	r5, #0
   15640:	mov	r1, #48	; 0x30
   15644:	mov	r4, r0
   15648:	ldr	r0, [pc, #16]	; 15660 <dcngettext@plt+0x4638>
   1564c:	ldr	r6, [r4]
   15650:	movne	r0, r5
   15654:	bl	18ed8 <dcngettext@plt+0x7eb0>
   15658:	str	r6, [r4]
   1565c:	pop	{r4, r5, r6, pc}
   15660:	muleq	r2, r0, r1
   15664:	ldr	r3, [pc, #12]	; 15678 <dcngettext@plt+0x4650>
   15668:	cmp	r0, #0
   1566c:	moveq	r0, r3
   15670:	ldr	r0, [r0]
   15674:	bx	lr
   15678:	muleq	r2, r0, r1
   1567c:	ldr	r3, [pc, #12]	; 15690 <dcngettext@plt+0x4668>
   15680:	cmp	r0, #0
   15684:	moveq	r0, r3
   15688:	str	r1, [r0]
   1568c:	bx	lr
   15690:	muleq	r2, r0, r1
   15694:	ldr	r3, [pc, #52]	; 156d0 <dcngettext@plt+0x46a8>
   15698:	cmp	r0, #0
   1569c:	moveq	r0, r3
   156a0:	add	r3, r0, #8
   156a4:	push	{lr}		; (str lr, [sp, #-4]!)
   156a8:	lsr	lr, r1, #5
   156ac:	and	r1, r1, #31
   156b0:	ldr	ip, [r3, lr, lsl #2]
   156b4:	lsr	r0, ip, r1
   156b8:	eor	r2, r2, r0
   156bc:	and	r2, r2, #1
   156c0:	and	r0, r0, #1
   156c4:	eor	r1, ip, r2, lsl r1
   156c8:	str	r1, [r3, lr, lsl #2]
   156cc:	pop	{pc}		; (ldr pc, [sp], #4)
   156d0:	muleq	r2, r0, r1
   156d4:	ldr	r3, [pc, #16]	; 156ec <dcngettext@plt+0x46c4>
   156d8:	cmp	r0, #0
   156dc:	movne	r3, r0
   156e0:	ldr	r0, [r3, #4]
   156e4:	str	r1, [r3, #4]
   156e8:	bx	lr
   156ec:	muleq	r2, r0, r1
   156f0:	ldr	r3, [pc, #44]	; 15724 <dcngettext@plt+0x46fc>
   156f4:	cmp	r0, #0
   156f8:	moveq	r0, r3
   156fc:	mov	ip, #10
   15700:	cmp	r2, #0
   15704:	cmpne	r1, #0
   15708:	str	ip, [r0]
   1570c:	beq	1571c <dcngettext@plt+0x46f4>
   15710:	str	r1, [r0, #40]	; 0x28
   15714:	str	r2, [r0, #44]	; 0x2c
   15718:	bx	lr
   1571c:	push	{r4, lr}
   15720:	bl	11010 <abort@plt>
   15724:	muleq	r2, r0, r1
   15728:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1572c:	sub	sp, sp, #24
   15730:	ldr	ip, [pc, #108]	; 157a4 <dcngettext@plt+0x477c>
   15734:	ldr	r4, [sp, #56]	; 0x38
   15738:	mov	r9, r2
   1573c:	cmp	r4, #0
   15740:	moveq	r4, ip
   15744:	mov	sl, r3
   15748:	mov	r7, r0
   1574c:	mov	r8, r1
   15750:	bl	10f2c <__errno_location@plt>
   15754:	ldr	r3, [r4, #44]	; 0x2c
   15758:	mov	r1, r8
   1575c:	ldr	r6, [r0]
   15760:	str	r3, [sp, #16]
   15764:	ldr	r2, [r4, #40]	; 0x28
   15768:	add	r3, r4, #8
   1576c:	str	r3, [sp, #8]
   15770:	str	r2, [sp, #12]
   15774:	ldr	r2, [r4, #4]
   15778:	mov	r5, r0
   1577c:	str	r2, [sp, #4]
   15780:	ldr	ip, [r4]
   15784:	mov	r3, sl
   15788:	mov	r2, r9
   1578c:	mov	r0, r7
   15790:	str	ip, [sp]
   15794:	bl	140ac <dcngettext@plt+0x3084>
   15798:	str	r6, [r5]
   1579c:	add	sp, sp, #24
   157a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   157a4:	muleq	r2, r0, r1
   157a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157ac:	cmp	r2, #0
   157b0:	sub	sp, sp, #36	; 0x24
   157b4:	ldr	r4, [pc, #164]	; 15860 <dcngettext@plt+0x4838>
   157b8:	mov	r8, r1
   157bc:	movne	r4, r2
   157c0:	mov	r7, r0
   157c4:	bl	10f2c <__errno_location@plt>
   157c8:	ldr	r3, [r4, #44]	; 0x2c
   157cc:	ldr	r5, [r4, #4]
   157d0:	add	r9, r4, #8
   157d4:	orr	r5, r5, #1
   157d8:	mov	r1, #0
   157dc:	mov	r2, r7
   157e0:	ldr	fp, [r0]
   157e4:	str	r3, [sp, #16]
   157e8:	ldr	r3, [r4, #40]	; 0x28
   157ec:	stmib	sp, {r5, r9}
   157f0:	str	r3, [sp, #12]
   157f4:	ldr	r3, [r4]
   157f8:	mov	r6, r0
   157fc:	str	r3, [sp]
   15800:	mov	r0, r1
   15804:	mov	r3, r8
   15808:	bl	140ac <dcngettext@plt+0x3084>
   1580c:	add	r1, r0, #1
   15810:	mov	r0, r1
   15814:	str	r1, [sp, #28]
   15818:	bl	18994 <dcngettext@plt+0x796c>
   1581c:	ldr	r3, [r4, #44]	; 0x2c
   15820:	ldr	r1, [sp, #28]
   15824:	str	r3, [sp, #16]
   15828:	ldr	r3, [r4, #40]	; 0x28
   1582c:	str	r5, [sp, #4]
   15830:	str	r3, [sp, #12]
   15834:	str	r9, [sp, #8]
   15838:	ldr	ip, [r4]
   1583c:	mov	r3, r8
   15840:	mov	r2, r7
   15844:	str	ip, [sp]
   15848:	mov	sl, r0
   1584c:	bl	140ac <dcngettext@plt+0x3084>
   15850:	mov	r0, sl
   15854:	str	fp, [r6]
   15858:	add	sp, sp, #36	; 0x24
   1585c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15860:	muleq	r2, r0, r1
   15864:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15868:	cmp	r3, #0
   1586c:	sub	sp, sp, #44	; 0x2c
   15870:	ldr	r4, [pc, #192]	; 15938 <dcngettext@plt+0x4910>
   15874:	mov	r6, r2
   15878:	movne	r4, r3
   1587c:	mov	r9, r1
   15880:	mov	r8, r0
   15884:	bl	10f2c <__errno_location@plt>
   15888:	ldr	r3, [r4, #44]	; 0x2c
   1588c:	ldr	r5, [r4, #4]
   15890:	add	sl, r4, #8
   15894:	cmp	r6, #0
   15898:	orreq	r5, r5, #1
   1589c:	mov	r1, #0
   158a0:	ldr	r2, [r0]
   158a4:	str	r3, [sp, #16]
   158a8:	ldr	r3, [r4, #40]	; 0x28
   158ac:	stmib	sp, {r5, sl}
   158b0:	str	r3, [sp, #12]
   158b4:	ldr	r3, [r4]
   158b8:	mov	r7, r0
   158bc:	str	r2, [sp, #28]
   158c0:	str	r3, [sp]
   158c4:	mov	r2, r8
   158c8:	mov	r3, r9
   158cc:	mov	r0, r1
   158d0:	bl	140ac <dcngettext@plt+0x3084>
   158d4:	add	r1, r0, #1
   158d8:	mov	fp, r0
   158dc:	mov	r0, r1
   158e0:	str	r1, [sp, #36]	; 0x24
   158e4:	bl	18994 <dcngettext@plt+0x796c>
   158e8:	ldr	r3, [r4, #44]	; 0x2c
   158ec:	mov	r2, r8
   158f0:	str	r3, [sp, #16]
   158f4:	ldr	r3, [r4, #40]	; 0x28
   158f8:	str	r5, [sp, #4]
   158fc:	str	r3, [sp, #12]
   15900:	str	sl, [sp, #8]
   15904:	ldr	ip, [r4]
   15908:	ldr	r1, [sp, #36]	; 0x24
   1590c:	mov	r3, r9
   15910:	str	ip, [sp]
   15914:	str	r0, [sp, #32]
   15918:	bl	140ac <dcngettext@plt+0x3084>
   1591c:	ldr	r2, [sp, #28]
   15920:	cmp	r6, #0
   15924:	str	r2, [r7]
   15928:	ldr	r0, [sp, #32]
   1592c:	strne	fp, [r6]
   15930:	add	sp, sp, #44	; 0x2c
   15934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15938:	muleq	r2, r0, r1
   1593c:	push	{r4, r5, r6, r7, r8, lr}
   15940:	ldr	r6, [pc, #116]	; 159bc <dcngettext@plt+0x4994>
   15944:	ldr	r3, [r6, #4]
   15948:	ldr	r7, [r6]
   1594c:	cmp	r3, #1
   15950:	movgt	r5, r7
   15954:	movgt	r4, #1
   15958:	ble	15978 <dcngettext@plt+0x4950>
   1595c:	ldr	r0, [r5, #12]
   15960:	bl	13de0 <dcngettext@plt+0x2db8>
   15964:	ldr	r3, [r6, #4]
   15968:	add	r4, r4, #1
   1596c:	cmp	r3, r4
   15970:	add	r5, r5, #8
   15974:	bgt	1595c <dcngettext@plt+0x4934>
   15978:	ldr	r0, [r7, #4]
   1597c:	ldr	r4, [pc, #60]	; 159c0 <dcngettext@plt+0x4998>
   15980:	cmp	r0, r4
   15984:	beq	15998 <dcngettext@plt+0x4970>
   15988:	bl	13de0 <dcngettext@plt+0x2db8>
   1598c:	mov	r3, #256	; 0x100
   15990:	str	r4, [r6, #12]
   15994:	str	r3, [r6, #8]
   15998:	ldr	r4, [pc, #36]	; 159c4 <dcngettext@plt+0x499c>
   1599c:	cmp	r7, r4
   159a0:	beq	159b0 <dcngettext@plt+0x4988>
   159a4:	mov	r0, r7
   159a8:	bl	13de0 <dcngettext@plt+0x2db8>
   159ac:	str	r4, [r6]
   159b0:	mov	r3, #1
   159b4:	str	r3, [r6, #4]
   159b8:	pop	{r4, r5, r6, r7, r8, pc}
   159bc:	andeq	fp, r2, r0, lsl r1
   159c0:	andeq	fp, r2, r0, asr #3
   159c4:	andeq	fp, r2, r8, lsl r1
   159c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159cc:	sub	sp, sp, #44	; 0x2c
   159d0:	mov	r5, r0
   159d4:	mov	sl, r1
   159d8:	bl	10f2c <__errno_location@plt>
   159dc:	ldr	r4, [pc, #400]	; 15b74 <dcngettext@plt+0x4b4c>
   159e0:	cmn	r5, #-2147483647	; 0x80000001
   159e4:	ldr	r6, [r4]
   159e8:	mov	r8, r0
   159ec:	movne	r0, #0
   159f0:	moveq	r0, #1
   159f4:	ldr	r3, [r8]
   159f8:	orrs	r0, r0, r5, lsr #31
   159fc:	str	r3, [sp, #24]
   15a00:	bne	15b70 <dcngettext@plt+0x4b48>
   15a04:	ldr	r2, [r4, #4]
   15a08:	cmp	r5, r2
   15a0c:	blt	15a6c <dcngettext@plt+0x4a44>
   15a10:	add	r7, r4, #8
   15a14:	cmp	r6, r7
   15a18:	str	r2, [sp, #36]	; 0x24
   15a1c:	beq	15b40 <dcngettext@plt+0x4b18>
   15a20:	mov	r3, #8
   15a24:	sub	r2, r5, r2
   15a28:	mov	r0, r6
   15a2c:	str	r3, [sp]
   15a30:	add	r2, r2, #1
   15a34:	mvn	r3, #-2147483648	; 0x80000000
   15a38:	add	r1, sp, #36	; 0x24
   15a3c:	bl	18bb0 <dcngettext@plt+0x7b88>
   15a40:	mov	r6, r0
   15a44:	str	r0, [r4]
   15a48:	ldr	r0, [r4, #4]
   15a4c:	ldr	r2, [sp, #36]	; 0x24
   15a50:	mov	r1, #0
   15a54:	sub	r2, r2, r0
   15a58:	add	r0, r6, r0, lsl #3
   15a5c:	lsl	r2, r2, #3
   15a60:	bl	10f50 <memset@plt>
   15a64:	ldr	r3, [sp, #36]	; 0x24
   15a68:	str	r3, [r4, #4]
   15a6c:	ldr	r4, [pc, #260]	; 15b78 <dcngettext@plt+0x4b50>
   15a70:	add	fp, r6, r5, lsl #3
   15a74:	ldr	r9, [r6, r5, lsl #3]
   15a78:	ldr	r0, [r4, #4]
   15a7c:	ldr	r3, [r4]
   15a80:	ldr	r7, [fp, #4]
   15a84:	ldr	r1, [r4, #44]	; 0x2c
   15a88:	ldr	r2, [r4, #40]	; 0x28
   15a8c:	orr	r0, r0, #1
   15a90:	str	r3, [sp]
   15a94:	add	r3, r4, #8
   15a98:	str	r0, [sp, #28]
   15a9c:	str	r0, [sp, #4]
   15aa0:	str	r1, [sp, #16]
   15aa4:	str	r2, [sp, #12]
   15aa8:	str	r3, [sp, #8]
   15aac:	mov	r0, r7
   15ab0:	mov	r1, r9
   15ab4:	mvn	r3, #0
   15ab8:	mov	r2, sl
   15abc:	bl	140ac <dcngettext@plt+0x3084>
   15ac0:	cmp	r9, r0
   15ac4:	bhi	15b2c <dcngettext@plt+0x4b04>
   15ac8:	add	r3, r4, #48	; 0x30
   15acc:	add	r9, r0, #1
   15ad0:	cmp	r7, r3
   15ad4:	str	r9, [r6, r5, lsl #3]
   15ad8:	beq	15ae4 <dcngettext@plt+0x4abc>
   15adc:	mov	r0, r7
   15ae0:	bl	13de0 <dcngettext@plt+0x2db8>
   15ae4:	mov	r0, r9
   15ae8:	bl	18994 <dcngettext@plt+0x796c>
   15aec:	ldr	ip, [r4, #44]	; 0x2c
   15af0:	ldr	r3, [r4]
   15af4:	ldr	lr, [r4, #40]	; 0x28
   15af8:	ldr	r4, [pc, #124]	; 15b7c <dcngettext@plt+0x4b54>
   15afc:	mov	r2, sl
   15b00:	mov	r1, r9
   15b04:	str	r0, [fp, #4]
   15b08:	str	r4, [sp, #8]
   15b0c:	ldr	r4, [sp, #28]
   15b10:	str	r3, [sp]
   15b14:	str	r4, [sp, #4]
   15b18:	str	ip, [sp, #16]
   15b1c:	str	lr, [sp, #12]
   15b20:	mvn	r3, #0
   15b24:	mov	r7, r0
   15b28:	bl	140ac <dcngettext@plt+0x3084>
   15b2c:	ldr	r3, [sp, #24]
   15b30:	mov	r0, r7
   15b34:	str	r3, [r8]
   15b38:	add	sp, sp, #44	; 0x2c
   15b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b40:	mov	r3, #8
   15b44:	sub	r2, r5, r2
   15b48:	str	r3, [sp]
   15b4c:	add	r1, sp, #36	; 0x24
   15b50:	add	r2, r2, #1
   15b54:	mvn	r3, #-2147483648	; 0x80000000
   15b58:	bl	18bb0 <dcngettext@plt+0x7b88>
   15b5c:	mov	r6, r0
   15b60:	ldm	r7, {r0, r1}
   15b64:	str	r6, [r4]
   15b68:	stm	r6, {r0, r1}
   15b6c:	b	15a48 <dcngettext@plt+0x4a20>
   15b70:	bl	11010 <abort@plt>
   15b74:	andeq	fp, r2, r0, lsl r1
   15b78:	muleq	r2, r0, r1
   15b7c:	muleq	r2, r8, r1
   15b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b84:	sub	sp, sp, #52	; 0x34
   15b88:	mov	r5, r0
   15b8c:	mov	sl, r1
   15b90:	mov	fp, r2
   15b94:	bl	10f2c <__errno_location@plt>
   15b98:	ldr	r4, [pc, #408]	; 15d38 <dcngettext@plt+0x4d10>
   15b9c:	cmn	r5, #-2147483647	; 0x80000001
   15ba0:	ldr	r6, [r4]
   15ba4:	mov	r8, r0
   15ba8:	movne	r0, #0
   15bac:	moveq	r0, #1
   15bb0:	ldr	r3, [r8]
   15bb4:	orrs	r0, r0, r5, lsr #31
   15bb8:	str	r3, [sp, #28]
   15bbc:	bne	15d34 <dcngettext@plt+0x4d0c>
   15bc0:	ldr	r2, [r4, #4]
   15bc4:	cmp	r5, r2
   15bc8:	blt	15c28 <dcngettext@plt+0x4c00>
   15bcc:	add	r7, r4, #8
   15bd0:	cmp	r6, r7
   15bd4:	str	r2, [sp, #44]	; 0x2c
   15bd8:	beq	15d04 <dcngettext@plt+0x4cdc>
   15bdc:	mov	r3, #8
   15be0:	sub	r2, r5, r2
   15be4:	mov	r0, r6
   15be8:	str	r3, [sp]
   15bec:	add	r2, r2, #1
   15bf0:	mvn	r3, #-2147483648	; 0x80000000
   15bf4:	add	r1, sp, #44	; 0x2c
   15bf8:	bl	18bb0 <dcngettext@plt+0x7b88>
   15bfc:	mov	r6, r0
   15c00:	str	r0, [r4]
   15c04:	ldr	r0, [r4, #4]
   15c08:	ldr	r2, [sp, #44]	; 0x2c
   15c0c:	mov	r1, #0
   15c10:	sub	r2, r2, r0
   15c14:	add	r0, r6, r0, lsl #3
   15c18:	lsl	r2, r2, #3
   15c1c:	bl	10f50 <memset@plt>
   15c20:	ldr	r3, [sp, #44]	; 0x2c
   15c24:	str	r3, [r4, #4]
   15c28:	ldr	r4, [pc, #268]	; 15d3c <dcngettext@plt+0x4d14>
   15c2c:	add	r3, r6, r5, lsl #3
   15c30:	str	r3, [sp, #32]
   15c34:	ldr	r7, [r3, #4]
   15c38:	ldr	r0, [r4, #4]
   15c3c:	ldr	r3, [r4]
   15c40:	ldr	r9, [r6, r5, lsl #3]
   15c44:	ldr	r1, [r4, #44]	; 0x2c
   15c48:	ldr	r2, [r4, #40]	; 0x28
   15c4c:	orr	r0, r0, #1
   15c50:	str	r3, [sp]
   15c54:	add	r3, r4, #8
   15c58:	str	r0, [sp, #36]	; 0x24
   15c5c:	str	r0, [sp, #4]
   15c60:	str	r1, [sp, #16]
   15c64:	str	r2, [sp, #12]
   15c68:	str	r3, [sp, #8]
   15c6c:	mov	r0, r7
   15c70:	mov	r1, r9
   15c74:	mov	r3, fp
   15c78:	mov	r2, sl
   15c7c:	bl	140ac <dcngettext@plt+0x3084>
   15c80:	cmp	r9, r0
   15c84:	bhi	15cf0 <dcngettext@plt+0x4cc8>
   15c88:	add	r3, r4, #48	; 0x30
   15c8c:	add	r9, r0, #1
   15c90:	cmp	r7, r3
   15c94:	str	r9, [r6, r5, lsl #3]
   15c98:	beq	15ca4 <dcngettext@plt+0x4c7c>
   15c9c:	mov	r0, r7
   15ca0:	bl	13de0 <dcngettext@plt+0x2db8>
   15ca4:	mov	r0, r9
   15ca8:	bl	18994 <dcngettext@plt+0x796c>
   15cac:	ldr	ip, [sp, #32]
   15cb0:	ldr	lr, [r4, #44]	; 0x2c
   15cb4:	ldr	r5, [r4, #40]	; 0x28
   15cb8:	mov	r3, fp
   15cbc:	mov	r2, sl
   15cc0:	mov	r1, r9
   15cc4:	str	r0, [ip, #4]
   15cc8:	ldr	ip, [r4]
   15ccc:	ldr	r4, [pc, #108]	; 15d40 <dcngettext@plt+0x4d18>
   15cd0:	str	lr, [sp, #16]
   15cd4:	str	r4, [sp, #8]
   15cd8:	ldr	r4, [sp, #36]	; 0x24
   15cdc:	str	r5, [sp, #12]
   15ce0:	str	r4, [sp, #4]
   15ce4:	str	ip, [sp]
   15ce8:	mov	r7, r0
   15cec:	bl	140ac <dcngettext@plt+0x3084>
   15cf0:	ldr	r3, [sp, #28]
   15cf4:	mov	r0, r7
   15cf8:	str	r3, [r8]
   15cfc:	add	sp, sp, #52	; 0x34
   15d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d04:	mov	r3, #8
   15d08:	sub	r2, r5, r2
   15d0c:	str	r3, [sp]
   15d10:	add	r1, sp, #44	; 0x2c
   15d14:	add	r2, r2, #1
   15d18:	mvn	r3, #-2147483648	; 0x80000000
   15d1c:	bl	18bb0 <dcngettext@plt+0x7b88>
   15d20:	mov	r6, r0
   15d24:	ldm	r7, {r0, r1}
   15d28:	str	r6, [r4]
   15d2c:	stm	r6, {r0, r1}
   15d30:	b	15c04 <dcngettext@plt+0x4bdc>
   15d34:	bl	11010 <abort@plt>
   15d38:	andeq	fp, r2, r0, lsl r1
   15d3c:	muleq	r2, r0, r1
   15d40:	muleq	r2, r8, r1
   15d44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d48:	sub	sp, sp, #44	; 0x2c
   15d4c:	mov	sl, r0
   15d50:	bl	10f2c <__errno_location@plt>
   15d54:	ldr	r4, [pc, #352]	; 15ebc <dcngettext@plt+0x4e94>
   15d58:	ldr	r2, [r4, #4]
   15d5c:	ldr	r5, [r4]
   15d60:	cmp	r2, #0
   15d64:	ldr	r3, [r0]
   15d68:	mov	r8, r0
   15d6c:	str	r3, [sp, #28]
   15d70:	bgt	15dcc <dcngettext@plt+0x4da4>
   15d74:	add	r6, r4, #8
   15d78:	cmp	r5, r6
   15d7c:	str	r2, [sp, #36]	; 0x24
   15d80:	beq	15e8c <dcngettext@plt+0x4e64>
   15d84:	mov	r3, #8
   15d88:	mov	r0, r5
   15d8c:	str	r3, [sp]
   15d90:	rsb	r2, r2, #1
   15d94:	mvn	r3, #-2147483648	; 0x80000000
   15d98:	add	r1, sp, #36	; 0x24
   15d9c:	bl	18bb0 <dcngettext@plt+0x7b88>
   15da0:	mov	r5, r0
   15da4:	str	r0, [r4]
   15da8:	ldr	r0, [r4, #4]
   15dac:	ldr	r2, [sp, #36]	; 0x24
   15db0:	mov	r1, #0
   15db4:	sub	r2, r2, r0
   15db8:	add	r0, r5, r0, lsl #3
   15dbc:	lsl	r2, r2, #3
   15dc0:	bl	10f50 <memset@plt>
   15dc4:	ldr	r3, [sp, #36]	; 0x24
   15dc8:	str	r3, [r4, #4]
   15dcc:	ldr	r4, [pc, #236]	; 15ec0 <dcngettext@plt+0x4e98>
   15dd0:	ldr	r9, [r5]
   15dd4:	ldr	r6, [r5, #4]
   15dd8:	ldr	r7, [r4, #4]
   15ddc:	ldr	r1, [r4, #44]	; 0x2c
   15de0:	ldr	r2, [r4, #40]	; 0x28
   15de4:	ldr	r3, [r4]
   15de8:	orr	r7, r7, #1
   15dec:	add	fp, r4, #8
   15df0:	str	r1, [sp, #16]
   15df4:	str	r2, [sp, #12]
   15df8:	str	r3, [sp]
   15dfc:	str	r7, [sp, #4]
   15e00:	str	fp, [sp, #8]
   15e04:	mov	r1, r9
   15e08:	mov	r0, r6
   15e0c:	mvn	r3, #0
   15e10:	mov	r2, sl
   15e14:	bl	140ac <dcngettext@plt+0x3084>
   15e18:	cmp	r9, r0
   15e1c:	bhi	15e78 <dcngettext@plt+0x4e50>
   15e20:	add	r3, r4, #48	; 0x30
   15e24:	add	r9, r0, #1
   15e28:	cmp	r6, r3
   15e2c:	str	r9, [r5]
   15e30:	beq	15e3c <dcngettext@plt+0x4e14>
   15e34:	mov	r0, r6
   15e38:	bl	13de0 <dcngettext@plt+0x2db8>
   15e3c:	mov	r0, r9
   15e40:	bl	18994 <dcngettext@plt+0x796c>
   15e44:	ldr	ip, [r4, #44]	; 0x2c
   15e48:	ldr	r3, [r4]
   15e4c:	ldr	lr, [r4, #40]	; 0x28
   15e50:	mov	r2, sl
   15e54:	mov	r1, r9
   15e58:	str	r0, [r5, #4]
   15e5c:	str	r3, [sp]
   15e60:	stmib	sp, {r7, fp}
   15e64:	str	ip, [sp, #16]
   15e68:	str	lr, [sp, #12]
   15e6c:	mvn	r3, #0
   15e70:	mov	r6, r0
   15e74:	bl	140ac <dcngettext@plt+0x3084>
   15e78:	ldr	r3, [sp, #28]
   15e7c:	mov	r0, r6
   15e80:	str	r3, [r8]
   15e84:	add	sp, sp, #44	; 0x2c
   15e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e8c:	mov	r3, #8
   15e90:	str	r3, [sp]
   15e94:	add	r1, sp, #36	; 0x24
   15e98:	rsb	r2, r2, #1
   15e9c:	mvn	r3, #-2147483648	; 0x80000000
   15ea0:	mov	r0, #0
   15ea4:	bl	18bb0 <dcngettext@plt+0x7b88>
   15ea8:	mov	r5, r0
   15eac:	ldm	r6, {r0, r1}
   15eb0:	str	r5, [r4]
   15eb4:	stm	r5, {r0, r1}
   15eb8:	b	15da8 <dcngettext@plt+0x4d80>
   15ebc:	andeq	fp, r2, r0, lsl r1
   15ec0:	muleq	r2, r0, r1
   15ec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ec8:	sub	sp, sp, #44	; 0x2c
   15ecc:	mov	r9, r0
   15ed0:	mov	sl, r1
   15ed4:	bl	10f2c <__errno_location@plt>
   15ed8:	ldr	r4, [pc, #364]	; 1604c <dcngettext@plt+0x5024>
   15edc:	ldr	r2, [r4, #4]
   15ee0:	ldr	r5, [r4]
   15ee4:	cmp	r2, #0
   15ee8:	ldr	r3, [r0]
   15eec:	mov	r7, r0
   15ef0:	str	r3, [sp, #24]
   15ef4:	bgt	15f50 <dcngettext@plt+0x4f28>
   15ef8:	add	r6, r4, #8
   15efc:	cmp	r5, r6
   15f00:	str	r2, [sp, #36]	; 0x24
   15f04:	beq	1601c <dcngettext@plt+0x4ff4>
   15f08:	mov	r3, #8
   15f0c:	mov	r0, r5
   15f10:	str	r3, [sp]
   15f14:	rsb	r2, r2, #1
   15f18:	mvn	r3, #-2147483648	; 0x80000000
   15f1c:	add	r1, sp, #36	; 0x24
   15f20:	bl	18bb0 <dcngettext@plt+0x7b88>
   15f24:	mov	r5, r0
   15f28:	str	r0, [r4]
   15f2c:	ldr	r0, [r4, #4]
   15f30:	ldr	r2, [sp, #36]	; 0x24
   15f34:	mov	r1, #0
   15f38:	sub	r2, r2, r0
   15f3c:	add	r0, r5, r0, lsl #3
   15f40:	lsl	r2, r2, #3
   15f44:	bl	10f50 <memset@plt>
   15f48:	ldr	r3, [sp, #36]	; 0x24
   15f4c:	str	r3, [r4, #4]
   15f50:	ldr	r4, [pc, #248]	; 16050 <dcngettext@plt+0x5028>
   15f54:	ldr	r8, [r5]
   15f58:	ldr	r6, [r5, #4]
   15f5c:	ldr	r0, [r4, #4]
   15f60:	ldr	r1, [r4, #44]	; 0x2c
   15f64:	ldr	r2, [r4, #40]	; 0x28
   15f68:	ldr	r3, [r4]
   15f6c:	orr	r0, r0, #1
   15f70:	add	fp, r4, #8
   15f74:	str	r0, [sp, #28]
   15f78:	str	r0, [sp, #4]
   15f7c:	str	r1, [sp, #16]
   15f80:	str	r2, [sp, #12]
   15f84:	str	r3, [sp]
   15f88:	str	fp, [sp, #8]
   15f8c:	mov	r1, r8
   15f90:	mov	r0, r6
   15f94:	mov	r3, sl
   15f98:	mov	r2, r9
   15f9c:	bl	140ac <dcngettext@plt+0x3084>
   15fa0:	cmp	r8, r0
   15fa4:	bhi	16008 <dcngettext@plt+0x4fe0>
   15fa8:	add	r3, r4, #48	; 0x30
   15fac:	add	r8, r0, #1
   15fb0:	cmp	r6, r3
   15fb4:	str	r8, [r5]
   15fb8:	beq	15fc4 <dcngettext@plt+0x4f9c>
   15fbc:	mov	r0, r6
   15fc0:	bl	13de0 <dcngettext@plt+0x2db8>
   15fc4:	mov	r0, r8
   15fc8:	bl	18994 <dcngettext@plt+0x796c>
   15fcc:	ldr	lr, [r4, #44]	; 0x2c
   15fd0:	ldr	ip, [r4]
   15fd4:	mov	r3, sl
   15fd8:	mov	r2, r9
   15fdc:	mov	r1, r8
   15fe0:	str	r0, [r5, #4]
   15fe4:	ldr	r5, [r4, #40]	; 0x28
   15fe8:	ldr	r4, [sp, #28]
   15fec:	str	fp, [sp, #8]
   15ff0:	str	r4, [sp, #4]
   15ff4:	str	lr, [sp, #16]
   15ff8:	str	r5, [sp, #12]
   15ffc:	str	ip, [sp]
   16000:	mov	r6, r0
   16004:	bl	140ac <dcngettext@plt+0x3084>
   16008:	ldr	r3, [sp, #24]
   1600c:	mov	r0, r6
   16010:	str	r3, [r7]
   16014:	add	sp, sp, #44	; 0x2c
   16018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1601c:	mov	r3, #8
   16020:	str	r3, [sp]
   16024:	add	r1, sp, #36	; 0x24
   16028:	rsb	r2, r2, #1
   1602c:	mvn	r3, #-2147483648	; 0x80000000
   16030:	mov	r0, #0
   16034:	bl	18bb0 <dcngettext@plt+0x7b88>
   16038:	mov	r5, r0
   1603c:	ldm	r6, {r0, r1}
   16040:	str	r5, [r4]
   16044:	stm	r5, {r0, r1}
   16048:	b	15f2c <dcngettext@plt+0x4f04>
   1604c:	andeq	fp, r2, r0, lsl r1
   16050:	muleq	r2, r0, r1
   16054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16058:	sub	sp, sp, #132	; 0x84
   1605c:	mov	r5, r1
   16060:	mov	r4, r0
   16064:	mov	r9, r2
   16068:	add	r0, sp, #80	; 0x50
   1606c:	mov	r2, #48	; 0x30
   16070:	mov	r1, #0
   16074:	bl	10f50 <memset@plt>
   16078:	cmp	r5, #10
   1607c:	beq	16234 <dcngettext@plt+0x520c>
   16080:	add	lr, sp, #80	; 0x50
   16084:	str	r5, [sp, #80]	; 0x50
   16088:	ldm	lr!, {r0, r1, r2, r3}
   1608c:	add	ip, sp, #32
   16090:	ldr	r6, [pc, #416]	; 16238 <dcngettext@plt+0x5210>
   16094:	stmia	ip!, {r0, r1, r2, r3}
   16098:	ldm	lr!, {r0, r1, r2, r3}
   1609c:	stmia	ip!, {r0, r1, r2, r3}
   160a0:	ldm	lr, {r0, r1, r2, r3}
   160a4:	stm	ip, {r0, r1, r2, r3}
   160a8:	bl	10f2c <__errno_location@plt>
   160ac:	cmn	r4, #-2147483647	; 0x80000001
   160b0:	ldr	r5, [r6]
   160b4:	mov	r7, r0
   160b8:	movne	r0, #0
   160bc:	moveq	r0, #1
   160c0:	ldr	r3, [r7]
   160c4:	orrs	r0, r0, r4, lsr #31
   160c8:	str	r3, [sp, #24]
   160cc:	bne	16234 <dcngettext@plt+0x520c>
   160d0:	ldr	r2, [r6, #4]
   160d4:	cmp	r4, r2
   160d8:	blt	16138 <dcngettext@plt+0x5110>
   160dc:	add	r8, r6, #8
   160e0:	cmp	r5, r8
   160e4:	str	r2, [sp, #80]	; 0x50
   160e8:	beq	16204 <dcngettext@plt+0x51dc>
   160ec:	mov	r3, #8
   160f0:	sub	r2, r4, r2
   160f4:	mov	r0, r5
   160f8:	str	r3, [sp]
   160fc:	add	r2, r2, #1
   16100:	add	r1, sp, #80	; 0x50
   16104:	mvn	r3, #-2147483648	; 0x80000000
   16108:	bl	18bb0 <dcngettext@plt+0x7b88>
   1610c:	mov	r5, r0
   16110:	str	r0, [r6]
   16114:	ldr	r0, [r6, #4]
   16118:	ldr	r2, [sp, #80]	; 0x50
   1611c:	mov	r1, #0
   16120:	sub	r2, r2, r0
   16124:	add	r0, r5, r0, lsl #3
   16128:	lsl	r2, r2, #3
   1612c:	bl	10f50 <memset@plt>
   16130:	ldr	r3, [sp, #80]	; 0x50
   16134:	str	r3, [r6, #4]
   16138:	add	fp, r5, r4, lsl #3
   1613c:	ldr	r1, [sp, #36]	; 0x24
   16140:	ldr	r8, [r5, r4, lsl #3]
   16144:	ldr	r6, [fp, #4]
   16148:	ldr	r2, [sp, #72]	; 0x48
   1614c:	ldr	r3, [sp, #32]
   16150:	ldr	ip, [sp, #76]	; 0x4c
   16154:	orr	r1, r1, #1
   16158:	add	sl, sp, #40	; 0x28
   1615c:	str	r1, [sp, #28]
   16160:	str	r1, [sp, #4]
   16164:	str	r2, [sp, #12]
   16168:	str	r3, [sp]
   1616c:	mov	r0, r6
   16170:	mov	r1, r8
   16174:	str	ip, [sp, #16]
   16178:	str	sl, [sp, #8]
   1617c:	mvn	r3, #0
   16180:	mov	r2, r9
   16184:	bl	140ac <dcngettext@plt+0x3084>
   16188:	cmp	r8, r0
   1618c:	bhi	161f0 <dcngettext@plt+0x51c8>
   16190:	ldr	r3, [pc, #164]	; 1623c <dcngettext@plt+0x5214>
   16194:	add	r8, r0, #1
   16198:	cmp	r6, r3
   1619c:	str	r8, [r5, r4, lsl #3]
   161a0:	beq	161ac <dcngettext@plt+0x5184>
   161a4:	mov	r0, r6
   161a8:	bl	13de0 <dcngettext@plt+0x2db8>
   161ac:	mov	r0, r8
   161b0:	bl	18994 <dcngettext@plt+0x796c>
   161b4:	ldr	lr, [sp, #76]	; 0x4c
   161b8:	ldr	r3, [sp, #32]
   161bc:	ldr	ip, [sp, #72]	; 0x48
   161c0:	ldr	r4, [sp, #28]
   161c4:	mov	r2, r9
   161c8:	mov	r1, r8
   161cc:	str	r0, [fp, #4]
   161d0:	str	r3, [sp]
   161d4:	str	sl, [sp, #8]
   161d8:	str	r4, [sp, #4]
   161dc:	str	lr, [sp, #16]
   161e0:	str	ip, [sp, #12]
   161e4:	mvn	r3, #0
   161e8:	mov	r6, r0
   161ec:	bl	140ac <dcngettext@plt+0x3084>
   161f0:	ldr	r3, [sp, #24]
   161f4:	mov	r0, r6
   161f8:	str	r3, [r7]
   161fc:	add	sp, sp, #132	; 0x84
   16200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16204:	mov	r3, #8
   16208:	sub	r2, r4, r2
   1620c:	add	r1, sp, #80	; 0x50
   16210:	str	r3, [sp]
   16214:	add	r2, r2, #1
   16218:	mvn	r3, #-2147483648	; 0x80000000
   1621c:	bl	18bb0 <dcngettext@plt+0x7b88>
   16220:	mov	r5, r0
   16224:	ldm	r8, {r0, r1}
   16228:	str	r5, [r6]
   1622c:	stm	r5, {r0, r1}
   16230:	b	16114 <dcngettext@plt+0x50ec>
   16234:	bl	11010 <abort@plt>
   16238:	andeq	fp, r2, r0, lsl r1
   1623c:	andeq	fp, r2, r0, asr #3
   16240:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16244:	sub	sp, sp, #132	; 0x84
   16248:	mov	r5, r1
   1624c:	mov	r4, r0
   16250:	mov	r9, r2
   16254:	add	r0, sp, #80	; 0x50
   16258:	mov	r2, #48	; 0x30
   1625c:	mov	r1, #0
   16260:	mov	sl, r3
   16264:	bl	10f50 <memset@plt>
   16268:	cmp	r5, #10
   1626c:	beq	16428 <dcngettext@plt+0x5400>
   16270:	add	lr, sp, #80	; 0x50
   16274:	str	r5, [sp, #80]	; 0x50
   16278:	ldm	lr!, {r0, r1, r2, r3}
   1627c:	add	ip, sp, #32
   16280:	ldr	r6, [pc, #420]	; 1642c <dcngettext@plt+0x5404>
   16284:	stmia	ip!, {r0, r1, r2, r3}
   16288:	ldm	lr!, {r0, r1, r2, r3}
   1628c:	stmia	ip!, {r0, r1, r2, r3}
   16290:	ldm	lr, {r0, r1, r2, r3}
   16294:	stm	ip, {r0, r1, r2, r3}
   16298:	bl	10f2c <__errno_location@plt>
   1629c:	cmn	r4, #-2147483647	; 0x80000001
   162a0:	ldr	r5, [r6]
   162a4:	mov	r7, r0
   162a8:	movne	r0, #0
   162ac:	moveq	r0, #1
   162b0:	ldr	r3, [r7]
   162b4:	orrs	r0, r0, r4, lsr #31
   162b8:	str	r3, [sp, #24]
   162bc:	bne	16428 <dcngettext@plt+0x5400>
   162c0:	ldr	r2, [r6, #4]
   162c4:	cmp	r4, r2
   162c8:	blt	16328 <dcngettext@plt+0x5300>
   162cc:	add	r8, r6, #8
   162d0:	cmp	r5, r8
   162d4:	str	r2, [sp, #80]	; 0x50
   162d8:	beq	163f8 <dcngettext@plt+0x53d0>
   162dc:	mov	r3, #8
   162e0:	sub	r2, r4, r2
   162e4:	mov	r0, r5
   162e8:	str	r3, [sp]
   162ec:	add	r2, r2, #1
   162f0:	add	r1, sp, #80	; 0x50
   162f4:	mvn	r3, #-2147483648	; 0x80000000
   162f8:	bl	18bb0 <dcngettext@plt+0x7b88>
   162fc:	mov	r5, r0
   16300:	str	r0, [r6]
   16304:	ldr	r0, [r6, #4]
   16308:	ldr	r2, [sp, #80]	; 0x50
   1630c:	mov	r1, #0
   16310:	sub	r2, r2, r0
   16314:	add	r0, r5, r0, lsl #3
   16318:	lsl	r2, r2, #3
   1631c:	bl	10f50 <memset@plt>
   16320:	ldr	r3, [sp, #80]	; 0x50
   16324:	str	r3, [r6, #4]
   16328:	add	fp, r5, r4, lsl #3
   1632c:	ldr	r3, [sp, #32]
   16330:	ldr	r1, [sp, #36]	; 0x24
   16334:	ldr	r8, [r5, r4, lsl #3]
   16338:	ldr	r6, [fp, #4]
   1633c:	ldr	r2, [sp, #72]	; 0x48
   16340:	ldr	ip, [sp, #76]	; 0x4c
   16344:	orr	r1, r1, #1
   16348:	str	r3, [sp]
   1634c:	add	r3, sp, #40	; 0x28
   16350:	str	r1, [sp, #28]
   16354:	str	r1, [sp, #4]
   16358:	str	r2, [sp, #12]
   1635c:	str	r3, [sp, #8]
   16360:	mov	r0, r6
   16364:	mov	r1, r8
   16368:	str	ip, [sp, #16]
   1636c:	mov	r3, sl
   16370:	mov	r2, r9
   16374:	bl	140ac <dcngettext@plt+0x3084>
   16378:	cmp	r8, r0
   1637c:	bhi	163e4 <dcngettext@plt+0x53bc>
   16380:	ldr	r3, [pc, #168]	; 16430 <dcngettext@plt+0x5408>
   16384:	add	r8, r0, #1
   16388:	cmp	r6, r3
   1638c:	str	r8, [r5, r4, lsl #3]
   16390:	beq	1639c <dcngettext@plt+0x5374>
   16394:	mov	r0, r6
   16398:	bl	13de0 <dcngettext@plt+0x2db8>
   1639c:	mov	r0, r8
   163a0:	bl	18994 <dcngettext@plt+0x796c>
   163a4:	add	lr, sp, #40	; 0x28
   163a8:	ldr	ip, [sp, #76]	; 0x4c
   163ac:	ldr	r4, [sp, #72]	; 0x48
   163b0:	ldr	r5, [sp, #28]
   163b4:	mov	r3, sl
   163b8:	mov	r2, r9
   163bc:	mov	r1, r8
   163c0:	str	r0, [fp, #4]
   163c4:	str	lr, [sp, #8]
   163c8:	ldr	lr, [sp, #32]
   163cc:	str	r5, [sp, #4]
   163d0:	str	ip, [sp, #16]
   163d4:	str	r4, [sp, #12]
   163d8:	str	lr, [sp]
   163dc:	mov	r6, r0
   163e0:	bl	140ac <dcngettext@plt+0x3084>
   163e4:	ldr	r3, [sp, #24]
   163e8:	mov	r0, r6
   163ec:	str	r3, [r7]
   163f0:	add	sp, sp, #132	; 0x84
   163f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163f8:	mov	r3, #8
   163fc:	sub	r2, r4, r2
   16400:	add	r1, sp, #80	; 0x50
   16404:	str	r3, [sp]
   16408:	add	r2, r2, #1
   1640c:	mvn	r3, #-2147483648	; 0x80000000
   16410:	bl	18bb0 <dcngettext@plt+0x7b88>
   16414:	mov	r5, r0
   16418:	ldm	r8, {r0, r1}
   1641c:	str	r5, [r6]
   16420:	stm	r5, {r0, r1}
   16424:	b	16304 <dcngettext@plt+0x52dc>
   16428:	bl	11010 <abort@plt>
   1642c:	andeq	fp, r2, r0, lsl r1
   16430:	andeq	fp, r2, r0, asr #3
   16434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16438:	sub	sp, sp, #124	; 0x7c
   1643c:	mov	r4, r0
   16440:	mov	r9, r1
   16444:	add	r0, sp, #72	; 0x48
   16448:	mov	r2, #48	; 0x30
   1644c:	mov	r1, #0
   16450:	bl	10f50 <memset@plt>
   16454:	cmp	r4, #10
   16458:	beq	165e4 <dcngettext@plt+0x55bc>
   1645c:	add	lr, sp, #72	; 0x48
   16460:	str	r4, [sp, #72]	; 0x48
   16464:	ldm	lr!, {r0, r1, r2, r3}
   16468:	add	ip, sp, #24
   1646c:	ldr	r5, [pc, #372]	; 165e8 <dcngettext@plt+0x55c0>
   16470:	stmia	ip!, {r0, r1, r2, r3}
   16474:	ldm	lr!, {r0, r1, r2, r3}
   16478:	stmia	ip!, {r0, r1, r2, r3}
   1647c:	ldm	lr, {r0, r1, r2, r3}
   16480:	stm	ip, {r0, r1, r2, r3}
   16484:	bl	10f2c <__errno_location@plt>
   16488:	ldr	r2, [r5, #4]
   1648c:	ldr	r4, [r5]
   16490:	cmp	r2, #0
   16494:	mov	r7, r0
   16498:	ldr	fp, [r0]
   1649c:	bgt	164f8 <dcngettext@plt+0x54d0>
   164a0:	add	r6, r5, #8
   164a4:	cmp	r4, r6
   164a8:	str	r2, [sp, #72]	; 0x48
   164ac:	beq	165b4 <dcngettext@plt+0x558c>
   164b0:	mov	r3, #8
   164b4:	mov	r0, r4
   164b8:	str	r3, [sp]
   164bc:	rsb	r2, r2, #1
   164c0:	add	r1, sp, #72	; 0x48
   164c4:	mvn	r3, #-2147483648	; 0x80000000
   164c8:	bl	18bb0 <dcngettext@plt+0x7b88>
   164cc:	mov	r4, r0
   164d0:	str	r0, [r5]
   164d4:	ldr	r0, [r5, #4]
   164d8:	ldr	r2, [sp, #72]	; 0x48
   164dc:	mov	r1, #0
   164e0:	sub	r2, r2, r0
   164e4:	add	r0, r4, r0, lsl #3
   164e8:	lsl	r2, r2, #3
   164ec:	bl	10f50 <memset@plt>
   164f0:	ldr	r3, [sp, #72]	; 0x48
   164f4:	str	r3, [r5, #4]
   164f8:	ldr	r6, [sp, #28]
   164fc:	ldr	r8, [r4]
   16500:	ldr	r5, [r4, #4]
   16504:	ldr	r2, [sp, #64]	; 0x40
   16508:	ldr	r3, [sp, #24]
   1650c:	ldr	ip, [sp, #68]	; 0x44
   16510:	orr	r6, r6, #1
   16514:	add	sl, sp, #32
   16518:	str	r2, [sp, #12]
   1651c:	str	r3, [sp]
   16520:	str	r6, [sp, #4]
   16524:	mov	r1, r8
   16528:	mov	r0, r5
   1652c:	str	ip, [sp, #16]
   16530:	str	sl, [sp, #8]
   16534:	mvn	r3, #0
   16538:	mov	r2, r9
   1653c:	bl	140ac <dcngettext@plt+0x3084>
   16540:	cmp	r8, r0
   16544:	bhi	165a4 <dcngettext@plt+0x557c>
   16548:	ldr	r3, [pc, #156]	; 165ec <dcngettext@plt+0x55c4>
   1654c:	add	r8, r0, #1
   16550:	cmp	r5, r3
   16554:	str	r8, [r4]
   16558:	beq	16564 <dcngettext@plt+0x553c>
   1655c:	mov	r0, r5
   16560:	bl	13de0 <dcngettext@plt+0x2db8>
   16564:	mov	r0, r8
   16568:	bl	18994 <dcngettext@plt+0x796c>
   1656c:	ldr	lr, [sp, #68]	; 0x44
   16570:	ldr	r3, [sp, #24]
   16574:	ldr	ip, [sp, #64]	; 0x40
   16578:	mov	r2, r9
   1657c:	mov	r1, r8
   16580:	str	r0, [r4, #4]
   16584:	str	r3, [sp]
   16588:	str	sl, [sp, #8]
   1658c:	str	r6, [sp, #4]
   16590:	str	lr, [sp, #16]
   16594:	str	ip, [sp, #12]
   16598:	mvn	r3, #0
   1659c:	mov	r5, r0
   165a0:	bl	140ac <dcngettext@plt+0x3084>
   165a4:	mov	r0, r5
   165a8:	str	fp, [r7]
   165ac:	add	sp, sp, #124	; 0x7c
   165b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165b4:	mov	r3, #8
   165b8:	add	r1, sp, #72	; 0x48
   165bc:	str	r3, [sp]
   165c0:	rsb	r2, r2, #1
   165c4:	mvn	r3, #-2147483648	; 0x80000000
   165c8:	mov	r0, #0
   165cc:	bl	18bb0 <dcngettext@plt+0x7b88>
   165d0:	mov	r4, r0
   165d4:	ldm	r6, {r0, r1}
   165d8:	str	r4, [r5]
   165dc:	stm	r4, {r0, r1}
   165e0:	b	164d4 <dcngettext@plt+0x54ac>
   165e4:	bl	11010 <abort@plt>
   165e8:	andeq	fp, r2, r0, lsl r1
   165ec:	andeq	fp, r2, r0, asr #3
   165f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165f4:	sub	sp, sp, #132	; 0x84
   165f8:	mov	r4, r0
   165fc:	mov	r9, r1
   16600:	mov	sl, r2
   16604:	add	r0, sp, #80	; 0x50
   16608:	mov	r2, #48	; 0x30
   1660c:	mov	r1, #0
   16610:	bl	10f50 <memset@plt>
   16614:	cmp	r4, #10
   16618:	beq	167ac <dcngettext@plt+0x5784>
   1661c:	add	lr, sp, #80	; 0x50
   16620:	str	r4, [sp, #80]	; 0x50
   16624:	ldm	lr!, {r0, r1, r2, r3}
   16628:	add	ip, sp, #32
   1662c:	ldr	r5, [pc, #380]	; 167b0 <dcngettext@plt+0x5788>
   16630:	stmia	ip!, {r0, r1, r2, r3}
   16634:	ldm	lr!, {r0, r1, r2, r3}
   16638:	stmia	ip!, {r0, r1, r2, r3}
   1663c:	ldm	lr, {r0, r1, r2, r3}
   16640:	stm	ip, {r0, r1, r2, r3}
   16644:	bl	10f2c <__errno_location@plt>
   16648:	ldr	r2, [r5, #4]
   1664c:	ldr	r4, [r5]
   16650:	cmp	r2, #0
   16654:	ldr	r3, [r0]
   16658:	mov	r7, r0
   1665c:	str	r3, [sp, #28]
   16660:	bgt	166bc <dcngettext@plt+0x5694>
   16664:	add	r6, r5, #8
   16668:	cmp	r4, r6
   1666c:	str	r2, [sp, #80]	; 0x50
   16670:	beq	1677c <dcngettext@plt+0x5754>
   16674:	mov	r3, #8
   16678:	mov	r0, r4
   1667c:	str	r3, [sp]
   16680:	rsb	r2, r2, #1
   16684:	add	r1, sp, #80	; 0x50
   16688:	mvn	r3, #-2147483648	; 0x80000000
   1668c:	bl	18bb0 <dcngettext@plt+0x7b88>
   16690:	mov	r4, r0
   16694:	str	r0, [r5]
   16698:	ldr	r0, [r5, #4]
   1669c:	ldr	r2, [sp, #80]	; 0x50
   166a0:	mov	r1, #0
   166a4:	sub	r2, r2, r0
   166a8:	add	r0, r4, r0, lsl #3
   166ac:	lsl	r2, r2, #3
   166b0:	bl	10f50 <memset@plt>
   166b4:	ldr	r3, [sp, #80]	; 0x50
   166b8:	str	r3, [r5, #4]
   166bc:	ldr	r6, [sp, #36]	; 0x24
   166c0:	ldr	r8, [r4]
   166c4:	ldr	r5, [r4, #4]
   166c8:	ldr	r2, [sp, #72]	; 0x48
   166cc:	ldr	r3, [sp, #32]
   166d0:	ldr	ip, [sp, #76]	; 0x4c
   166d4:	orr	r6, r6, #1
   166d8:	add	fp, sp, #40	; 0x28
   166dc:	str	r2, [sp, #12]
   166e0:	str	r3, [sp]
   166e4:	str	r6, [sp, #4]
   166e8:	mov	r1, r8
   166ec:	mov	r0, r5
   166f0:	str	ip, [sp, #16]
   166f4:	str	fp, [sp, #8]
   166f8:	mov	r3, sl
   166fc:	mov	r2, r9
   16700:	bl	140ac <dcngettext@plt+0x3084>
   16704:	cmp	r8, r0
   16708:	bhi	16768 <dcngettext@plt+0x5740>
   1670c:	ldr	r3, [pc, #160]	; 167b4 <dcngettext@plt+0x578c>
   16710:	add	r8, r0, #1
   16714:	cmp	r5, r3
   16718:	str	r8, [r4]
   1671c:	beq	16728 <dcngettext@plt+0x5700>
   16720:	mov	r0, r5
   16724:	bl	13de0 <dcngettext@plt+0x2db8>
   16728:	mov	r0, r8
   1672c:	bl	18994 <dcngettext@plt+0x796c>
   16730:	ldr	ip, [sp, #76]	; 0x4c
   16734:	ldr	lr, [sp, #32]
   16738:	mov	r3, sl
   1673c:	mov	r2, r9
   16740:	mov	r1, r8
   16744:	str	r0, [r4, #4]
   16748:	ldr	r4, [sp, #72]	; 0x48
   1674c:	str	fp, [sp, #8]
   16750:	str	r6, [sp, #4]
   16754:	str	ip, [sp, #16]
   16758:	str	r4, [sp, #12]
   1675c:	str	lr, [sp]
   16760:	mov	r5, r0
   16764:	bl	140ac <dcngettext@plt+0x3084>
   16768:	ldr	r3, [sp, #28]
   1676c:	mov	r0, r5
   16770:	str	r3, [r7]
   16774:	add	sp, sp, #132	; 0x84
   16778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1677c:	mov	r3, #8
   16780:	add	r1, sp, #80	; 0x50
   16784:	str	r3, [sp]
   16788:	rsb	r2, r2, #1
   1678c:	mvn	r3, #-2147483648	; 0x80000000
   16790:	mov	r0, #0
   16794:	bl	18bb0 <dcngettext@plt+0x7b88>
   16798:	mov	r4, r0
   1679c:	ldm	r6, {r0, r1}
   167a0:	str	r4, [r5]
   167a4:	stm	r4, {r0, r1}
   167a8:	b	16698 <dcngettext@plt+0x5670>
   167ac:	bl	11010 <abort@plt>
   167b0:	andeq	fp, r2, r0, lsl r1
   167b4:	andeq	fp, r2, r0, asr #3
   167b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167bc:	mov	r4, r2
   167c0:	ldr	lr, [pc, #432]	; 16978 <dcngettext@plt+0x5950>
   167c4:	mov	sl, r0
   167c8:	mov	fp, r1
   167cc:	ldm	lr!, {r0, r1, r2, r3}
   167d0:	sub	sp, sp, #92	; 0x5c
   167d4:	add	ip, sp, #40	; 0x28
   167d8:	lsr	r7, r4, #5
   167dc:	stmia	ip!, {r0, r1, r2, r3}
   167e0:	add	r6, sp, #48	; 0x30
   167e4:	ldm	lr!, {r0, r1, r2, r3}
   167e8:	and	r4, r4, #31
   167ec:	ldr	r5, [pc, #392]	; 1697c <dcngettext@plt+0x5954>
   167f0:	stmia	ip!, {r0, r1, r2, r3}
   167f4:	ldm	lr, {r0, r1, r2, r3}
   167f8:	stm	ip, {r0, r1, r2, r3}
   167fc:	ldr	r2, [r6, r7, lsl #2]
   16800:	lsr	r3, r2, r4
   16804:	eor	r3, r3, #1
   16808:	and	r3, r3, #1
   1680c:	eor	r4, r2, r3, lsl r4
   16810:	str	r4, [r6, r7, lsl #2]
   16814:	bl	10f2c <__errno_location@plt>
   16818:	ldr	r2, [r5, #4]
   1681c:	ldr	r4, [r5]
   16820:	cmp	r2, #0
   16824:	ldr	r3, [r0]
   16828:	mov	r8, r0
   1682c:	str	r3, [sp, #28]
   16830:	bgt	1688c <dcngettext@plt+0x5864>
   16834:	add	r7, r5, #8
   16838:	cmp	r4, r7
   1683c:	str	r2, [sp, #36]	; 0x24
   16840:	beq	16948 <dcngettext@plt+0x5920>
   16844:	mov	r3, #8
   16848:	mov	r0, r4
   1684c:	str	r3, [sp]
   16850:	rsb	r2, r2, #1
   16854:	mvn	r3, #-2147483648	; 0x80000000
   16858:	add	r1, sp, #36	; 0x24
   1685c:	bl	18bb0 <dcngettext@plt+0x7b88>
   16860:	mov	r4, r0
   16864:	str	r0, [r5]
   16868:	ldr	r0, [r5, #4]
   1686c:	ldr	r2, [sp, #36]	; 0x24
   16870:	mov	r1, #0
   16874:	sub	r2, r2, r0
   16878:	add	r0, r4, r0, lsl #3
   1687c:	lsl	r2, r2, #3
   16880:	bl	10f50 <memset@plt>
   16884:	ldr	r3, [sp, #36]	; 0x24
   16888:	str	r3, [r5, #4]
   1688c:	ldr	r7, [sp, #44]	; 0x2c
   16890:	ldr	r9, [r4]
   16894:	ldr	r5, [r4, #4]
   16898:	ldr	r2, [sp, #80]	; 0x50
   1689c:	ldr	r3, [sp, #40]	; 0x28
   168a0:	ldr	ip, [sp, #84]	; 0x54
   168a4:	orr	r7, r7, #1
   168a8:	str	r2, [sp, #12]
   168ac:	str	r3, [sp]
   168b0:	str	r7, [sp, #4]
   168b4:	str	r6, [sp, #8]
   168b8:	mov	r1, r9
   168bc:	mov	r0, r5
   168c0:	str	ip, [sp, #16]
   168c4:	mov	r3, fp
   168c8:	mov	r2, sl
   168cc:	bl	140ac <dcngettext@plt+0x3084>
   168d0:	cmp	r9, r0
   168d4:	bhi	16934 <dcngettext@plt+0x590c>
   168d8:	ldr	r3, [pc, #160]	; 16980 <dcngettext@plt+0x5958>
   168dc:	add	r9, r0, #1
   168e0:	cmp	r5, r3
   168e4:	str	r9, [r4]
   168e8:	beq	168f4 <dcngettext@plt+0x58cc>
   168ec:	mov	r0, r5
   168f0:	bl	13de0 <dcngettext@plt+0x2db8>
   168f4:	mov	r0, r9
   168f8:	bl	18994 <dcngettext@plt+0x796c>
   168fc:	ldr	ip, [sp, #84]	; 0x54
   16900:	ldr	lr, [sp, #40]	; 0x28
   16904:	mov	r3, fp
   16908:	mov	r2, sl
   1690c:	mov	r1, r9
   16910:	str	r0, [r4, #4]
   16914:	ldr	r4, [sp, #80]	; 0x50
   16918:	str	r6, [sp, #8]
   1691c:	str	r7, [sp, #4]
   16920:	str	ip, [sp, #16]
   16924:	str	r4, [sp, #12]
   16928:	str	lr, [sp]
   1692c:	mov	r5, r0
   16930:	bl	140ac <dcngettext@plt+0x3084>
   16934:	ldr	r3, [sp, #28]
   16938:	mov	r0, r5
   1693c:	str	r3, [r8]
   16940:	add	sp, sp, #92	; 0x5c
   16944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16948:	mov	r3, #8
   1694c:	str	r3, [sp]
   16950:	add	r1, sp, #36	; 0x24
   16954:	rsb	r2, r2, #1
   16958:	mvn	r3, #-2147483648	; 0x80000000
   1695c:	mov	r0, #0
   16960:	bl	18bb0 <dcngettext@plt+0x7b88>
   16964:	mov	r4, r0
   16968:	ldm	r7, {r0, r1}
   1696c:	str	r4, [r5]
   16970:	stm	r4, {r0, r1}
   16974:	b	16868 <dcngettext@plt+0x5840>
   16978:	muleq	r2, r0, r1
   1697c:	andeq	fp, r2, r0, lsl r1
   16980:	andeq	fp, r2, r0, asr #3
   16984:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16988:	mov	r4, r1
   1698c:	ldr	lr, [pc, #420]	; 16b38 <dcngettext@plt+0x5b10>
   16990:	mov	r6, r0
   16994:	sub	sp, sp, #84	; 0x54
   16998:	ldm	lr!, {r0, r1, r2, r3}
   1699c:	add	ip, sp, #32
   169a0:	lsr	r8, r4, #5
   169a4:	add	r5, sp, #40	; 0x28
   169a8:	stmia	ip!, {r0, r1, r2, r3}
   169ac:	and	r4, r4, #31
   169b0:	ldm	lr!, {r0, r1, r2, r3}
   169b4:	ldr	r7, [pc, #384]	; 16b3c <dcngettext@plt+0x5b14>
   169b8:	stmia	ip!, {r0, r1, r2, r3}
   169bc:	ldm	lr, {r0, r1, r2, r3}
   169c0:	stm	ip, {r0, r1, r2, r3}
   169c4:	ldr	r2, [r5, r8, lsl #2]
   169c8:	lsr	r3, r2, r4
   169cc:	eor	r3, r3, #1
   169d0:	and	r3, r3, #1
   169d4:	eor	r4, r2, r3, lsl r4
   169d8:	str	r4, [r5, r8, lsl #2]
   169dc:	bl	10f2c <__errno_location@plt>
   169e0:	ldr	r2, [r7, #4]
   169e4:	ldr	r4, [r7]
   169e8:	cmp	r2, #0
   169ec:	mov	r9, r0
   169f0:	ldr	sl, [r0]
   169f4:	bgt	16a50 <dcngettext@plt+0x5a28>
   169f8:	add	r8, r7, #8
   169fc:	cmp	r4, r8
   16a00:	str	r2, [sp, #28]
   16a04:	beq	16b08 <dcngettext@plt+0x5ae0>
   16a08:	mov	r3, #8
   16a0c:	mov	r0, r4
   16a10:	str	r3, [sp]
   16a14:	rsb	r2, r2, #1
   16a18:	mvn	r3, #-2147483648	; 0x80000000
   16a1c:	add	r1, sp, #28
   16a20:	bl	18bb0 <dcngettext@plt+0x7b88>
   16a24:	mov	r4, r0
   16a28:	str	r0, [r7]
   16a2c:	ldr	r0, [r7, #4]
   16a30:	ldr	r2, [sp, #28]
   16a34:	mov	r1, #0
   16a38:	sub	r2, r2, r0
   16a3c:	add	r0, r4, r0, lsl #3
   16a40:	lsl	r2, r2, #3
   16a44:	bl	10f50 <memset@plt>
   16a48:	ldr	r3, [sp, #28]
   16a4c:	str	r3, [r7, #4]
   16a50:	ldr	r8, [sp, #36]	; 0x24
   16a54:	ldr	fp, [r4]
   16a58:	ldr	r7, [r4, #4]
   16a5c:	ldr	r2, [sp, #72]	; 0x48
   16a60:	ldr	r3, [sp, #32]
   16a64:	ldr	ip, [sp, #76]	; 0x4c
   16a68:	orr	r8, r8, #1
   16a6c:	str	r2, [sp, #12]
   16a70:	str	r3, [sp]
   16a74:	str	r8, [sp, #4]
   16a78:	str	r5, [sp, #8]
   16a7c:	mov	r1, fp
   16a80:	mov	r0, r7
   16a84:	str	ip, [sp, #16]
   16a88:	mvn	r3, #0
   16a8c:	mov	r2, r6
   16a90:	bl	140ac <dcngettext@plt+0x3084>
   16a94:	cmp	fp, r0
   16a98:	bhi	16af8 <dcngettext@plt+0x5ad0>
   16a9c:	ldr	r3, [pc, #156]	; 16b40 <dcngettext@plt+0x5b18>
   16aa0:	add	fp, r0, #1
   16aa4:	cmp	r7, r3
   16aa8:	str	fp, [r4]
   16aac:	beq	16ab8 <dcngettext@plt+0x5a90>
   16ab0:	mov	r0, r7
   16ab4:	bl	13de0 <dcngettext@plt+0x2db8>
   16ab8:	mov	r0, fp
   16abc:	bl	18994 <dcngettext@plt+0x796c>
   16ac0:	ldr	lr, [sp, #76]	; 0x4c
   16ac4:	ldr	r3, [sp, #32]
   16ac8:	ldr	ip, [sp, #72]	; 0x48
   16acc:	mov	r2, r6
   16ad0:	mov	r1, fp
   16ad4:	str	r0, [r4, #4]
   16ad8:	str	r3, [sp]
   16adc:	str	r5, [sp, #8]
   16ae0:	str	r8, [sp, #4]
   16ae4:	str	lr, [sp, #16]
   16ae8:	str	ip, [sp, #12]
   16aec:	mvn	r3, #0
   16af0:	mov	r7, r0
   16af4:	bl	140ac <dcngettext@plt+0x3084>
   16af8:	mov	r0, r7
   16afc:	str	sl, [r9]
   16b00:	add	sp, sp, #84	; 0x54
   16b04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b08:	mov	r3, #8
   16b0c:	str	r3, [sp]
   16b10:	add	r1, sp, #28
   16b14:	rsb	r2, r2, #1
   16b18:	mvn	r3, #-2147483648	; 0x80000000
   16b1c:	mov	r0, #0
   16b20:	bl	18bb0 <dcngettext@plt+0x7b88>
   16b24:	mov	r4, r0
   16b28:	ldm	r8, {r0, r1}
   16b2c:	str	r4, [r7]
   16b30:	stm	r4, {r0, r1}
   16b34:	b	16a2c <dcngettext@plt+0x5a04>
   16b38:	muleq	r2, r0, r1
   16b3c:	andeq	fp, r2, r0, lsl r1
   16b40:	andeq	fp, r2, r0, asr #3
   16b44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b48:	mov	r6, r0
   16b4c:	ldr	lr, [pc, #404]	; 16ce8 <dcngettext@plt+0x5cc0>
   16b50:	sub	sp, sp, #84	; 0x54
   16b54:	add	ip, sp, #32
   16b58:	ldm	lr!, {r0, r1, r2, r3}
   16b5c:	ldr	r5, [pc, #392]	; 16cec <dcngettext@plt+0x5cc4>
   16b60:	stmia	ip!, {r0, r1, r2, r3}
   16b64:	ldm	lr!, {r0, r1, r2, r3}
   16b68:	ldr	r4, [sp, #44]	; 0x2c
   16b6c:	stmia	ip!, {r0, r1, r2, r3}
   16b70:	ldm	lr, {r0, r1, r2, r3}
   16b74:	mvn	lr, r4
   16b78:	and	lr, lr, #67108864	; 0x4000000
   16b7c:	eor	lr, lr, r4
   16b80:	stm	ip, {r0, r1, r2, r3}
   16b84:	str	lr, [sp, #44]	; 0x2c
   16b88:	bl	10f2c <__errno_location@plt>
   16b8c:	ldr	r2, [r5, #4]
   16b90:	ldr	r4, [r5]
   16b94:	cmp	r2, #0
   16b98:	mov	r8, r0
   16b9c:	ldr	sl, [r0]
   16ba0:	bgt	16bfc <dcngettext@plt+0x5bd4>
   16ba4:	add	r7, r5, #8
   16ba8:	cmp	r4, r7
   16bac:	str	r2, [sp, #28]
   16bb0:	beq	16cb8 <dcngettext@plt+0x5c90>
   16bb4:	mov	r3, #8
   16bb8:	mov	r0, r4
   16bbc:	str	r3, [sp]
   16bc0:	rsb	r2, r2, #1
   16bc4:	mvn	r3, #-2147483648	; 0x80000000
   16bc8:	add	r1, sp, #28
   16bcc:	bl	18bb0 <dcngettext@plt+0x7b88>
   16bd0:	mov	r4, r0
   16bd4:	str	r0, [r5]
   16bd8:	ldr	r0, [r5, #4]
   16bdc:	ldr	r2, [sp, #28]
   16be0:	mov	r1, #0
   16be4:	sub	r2, r2, r0
   16be8:	add	r0, r4, r0, lsl #3
   16bec:	lsl	r2, r2, #3
   16bf0:	bl	10f50 <memset@plt>
   16bf4:	ldr	r3, [sp, #28]
   16bf8:	str	r3, [r5, #4]
   16bfc:	ldr	r7, [sp, #36]	; 0x24
   16c00:	ldr	r9, [r4]
   16c04:	ldr	r5, [r4, #4]
   16c08:	ldr	r2, [sp, #72]	; 0x48
   16c0c:	ldr	r3, [sp, #32]
   16c10:	ldr	ip, [sp, #76]	; 0x4c
   16c14:	orr	r7, r7, #1
   16c18:	add	fp, sp, #40	; 0x28
   16c1c:	str	r2, [sp, #12]
   16c20:	str	r3, [sp]
   16c24:	str	r7, [sp, #4]
   16c28:	mov	r1, r9
   16c2c:	mov	r0, r5
   16c30:	str	ip, [sp, #16]
   16c34:	str	fp, [sp, #8]
   16c38:	mvn	r3, #0
   16c3c:	mov	r2, r6
   16c40:	bl	140ac <dcngettext@plt+0x3084>
   16c44:	cmp	r9, r0
   16c48:	bhi	16ca8 <dcngettext@plt+0x5c80>
   16c4c:	ldr	r3, [pc, #156]	; 16cf0 <dcngettext@plt+0x5cc8>
   16c50:	add	r9, r0, #1
   16c54:	cmp	r5, r3
   16c58:	str	r9, [r4]
   16c5c:	beq	16c68 <dcngettext@plt+0x5c40>
   16c60:	mov	r0, r5
   16c64:	bl	13de0 <dcngettext@plt+0x2db8>
   16c68:	mov	r0, r9
   16c6c:	bl	18994 <dcngettext@plt+0x796c>
   16c70:	ldr	lr, [sp, #76]	; 0x4c
   16c74:	ldr	r3, [sp, #32]
   16c78:	ldr	ip, [sp, #72]	; 0x48
   16c7c:	mov	r2, r6
   16c80:	mov	r1, r9
   16c84:	str	r0, [r4, #4]
   16c88:	str	r3, [sp]
   16c8c:	str	fp, [sp, #8]
   16c90:	str	r7, [sp, #4]
   16c94:	str	lr, [sp, #16]
   16c98:	str	ip, [sp, #12]
   16c9c:	mvn	r3, #0
   16ca0:	mov	r5, r0
   16ca4:	bl	140ac <dcngettext@plt+0x3084>
   16ca8:	mov	r0, r5
   16cac:	str	sl, [r8]
   16cb0:	add	sp, sp, #84	; 0x54
   16cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cb8:	mov	r3, #8
   16cbc:	str	r3, [sp]
   16cc0:	add	r1, sp, #28
   16cc4:	rsb	r2, r2, #1
   16cc8:	mvn	r3, #-2147483648	; 0x80000000
   16ccc:	mov	r0, #0
   16cd0:	bl	18bb0 <dcngettext@plt+0x7b88>
   16cd4:	mov	r4, r0
   16cd8:	ldm	r7, {r0, r1}
   16cdc:	str	r4, [r5]
   16ce0:	stm	r4, {r0, r1}
   16ce4:	b	16bd8 <dcngettext@plt+0x5bb0>
   16ce8:	muleq	r2, r0, r1
   16cec:	andeq	fp, r2, r0, lsl r1
   16cf0:	andeq	fp, r2, r0, asr #3
   16cf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16cf8:	mov	r9, r0
   16cfc:	ldr	lr, [pc, #416]	; 16ea4 <dcngettext@plt+0x5e7c>
   16d00:	mov	sl, r1
   16d04:	sub	sp, sp, #92	; 0x5c
   16d08:	ldm	lr!, {r0, r1, r2, r3}
   16d0c:	add	ip, sp, #40	; 0x28
   16d10:	ldr	r5, [pc, #400]	; 16ea8 <dcngettext@plt+0x5e80>
   16d14:	stmia	ip!, {r0, r1, r2, r3}
   16d18:	ldm	lr!, {r0, r1, r2, r3}
   16d1c:	ldr	r4, [sp, #52]	; 0x34
   16d20:	stmia	ip!, {r0, r1, r2, r3}
   16d24:	ldm	lr, {r0, r1, r2, r3}
   16d28:	mvn	lr, r4
   16d2c:	and	lr, lr, #67108864	; 0x4000000
   16d30:	eor	lr, lr, r4
   16d34:	stm	ip, {r0, r1, r2, r3}
   16d38:	str	lr, [sp, #52]	; 0x34
   16d3c:	bl	10f2c <__errno_location@plt>
   16d40:	ldr	r2, [r5, #4]
   16d44:	ldr	r4, [r5]
   16d48:	cmp	r2, #0
   16d4c:	ldr	r3, [r0]
   16d50:	mov	r7, r0
   16d54:	str	r3, [sp, #28]
   16d58:	bgt	16db4 <dcngettext@plt+0x5d8c>
   16d5c:	add	r6, r5, #8
   16d60:	cmp	r4, r6
   16d64:	str	r2, [sp, #36]	; 0x24
   16d68:	beq	16e74 <dcngettext@plt+0x5e4c>
   16d6c:	mov	r3, #8
   16d70:	mov	r0, r4
   16d74:	str	r3, [sp]
   16d78:	rsb	r2, r2, #1
   16d7c:	mvn	r3, #-2147483648	; 0x80000000
   16d80:	add	r1, sp, #36	; 0x24
   16d84:	bl	18bb0 <dcngettext@plt+0x7b88>
   16d88:	mov	r4, r0
   16d8c:	str	r0, [r5]
   16d90:	ldr	r0, [r5, #4]
   16d94:	ldr	r2, [sp, #36]	; 0x24
   16d98:	mov	r1, #0
   16d9c:	sub	r2, r2, r0
   16da0:	add	r0, r4, r0, lsl #3
   16da4:	lsl	r2, r2, #3
   16da8:	bl	10f50 <memset@plt>
   16dac:	ldr	r3, [sp, #36]	; 0x24
   16db0:	str	r3, [r5, #4]
   16db4:	ldr	r6, [sp, #44]	; 0x2c
   16db8:	ldr	r8, [r4]
   16dbc:	ldr	r5, [r4, #4]
   16dc0:	ldr	r2, [sp, #80]	; 0x50
   16dc4:	ldr	r3, [sp, #40]	; 0x28
   16dc8:	ldr	ip, [sp, #84]	; 0x54
   16dcc:	orr	r6, r6, #1
   16dd0:	add	fp, sp, #48	; 0x30
   16dd4:	str	r2, [sp, #12]
   16dd8:	str	r3, [sp]
   16ddc:	str	r6, [sp, #4]
   16de0:	mov	r1, r8
   16de4:	mov	r0, r5
   16de8:	str	ip, [sp, #16]
   16dec:	str	fp, [sp, #8]
   16df0:	mov	r3, sl
   16df4:	mov	r2, r9
   16df8:	bl	140ac <dcngettext@plt+0x3084>
   16dfc:	cmp	r8, r0
   16e00:	bhi	16e60 <dcngettext@plt+0x5e38>
   16e04:	ldr	r3, [pc, #160]	; 16eac <dcngettext@plt+0x5e84>
   16e08:	add	r8, r0, #1
   16e0c:	cmp	r5, r3
   16e10:	str	r8, [r4]
   16e14:	beq	16e20 <dcngettext@plt+0x5df8>
   16e18:	mov	r0, r5
   16e1c:	bl	13de0 <dcngettext@plt+0x2db8>
   16e20:	mov	r0, r8
   16e24:	bl	18994 <dcngettext@plt+0x796c>
   16e28:	ldr	ip, [sp, #84]	; 0x54
   16e2c:	ldr	lr, [sp, #40]	; 0x28
   16e30:	mov	r3, sl
   16e34:	mov	r2, r9
   16e38:	mov	r1, r8
   16e3c:	str	r0, [r4, #4]
   16e40:	ldr	r4, [sp, #80]	; 0x50
   16e44:	str	fp, [sp, #8]
   16e48:	str	r6, [sp, #4]
   16e4c:	str	ip, [sp, #16]
   16e50:	str	r4, [sp, #12]
   16e54:	str	lr, [sp]
   16e58:	mov	r5, r0
   16e5c:	bl	140ac <dcngettext@plt+0x3084>
   16e60:	ldr	r3, [sp, #28]
   16e64:	mov	r0, r5
   16e68:	str	r3, [r7]
   16e6c:	add	sp, sp, #92	; 0x5c
   16e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e74:	mov	r3, #8
   16e78:	str	r3, [sp]
   16e7c:	add	r1, sp, #36	; 0x24
   16e80:	rsb	r2, r2, #1
   16e84:	mvn	r3, #-2147483648	; 0x80000000
   16e88:	mov	r0, #0
   16e8c:	bl	18bb0 <dcngettext@plt+0x7b88>
   16e90:	mov	r4, r0
   16e94:	ldm	r6, {r0, r1}
   16e98:	str	r4, [r5]
   16e9c:	stm	r4, {r0, r1}
   16ea0:	b	16d90 <dcngettext@plt+0x5d68>
   16ea4:	muleq	r2, r0, r1
   16ea8:	andeq	fp, r2, r0, lsl r1
   16eac:	andeq	fp, r2, r0, asr #3
   16eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16eb4:	sub	sp, sp, #180	; 0xb4
   16eb8:	mov	r6, r1
   16ebc:	mov	r4, r0
   16ec0:	mov	r9, r2
   16ec4:	add	r0, sp, #80	; 0x50
   16ec8:	mov	r2, #48	; 0x30
   16ecc:	mov	r1, #0
   16ed0:	bl	10f50 <memset@plt>
   16ed4:	cmp	r6, #10
   16ed8:	beq	170b8 <dcngettext@plt+0x6090>
   16edc:	add	r5, sp, #80	; 0x50
   16ee0:	str	r6, [sp, #80]	; 0x50
   16ee4:	ldm	r5!, {r0, r1, r2, r3}
   16ee8:	add	ip, sp, #128	; 0x80
   16eec:	mov	r7, ip
   16ef0:	add	lr, sp, #32
   16ef4:	stmia	ip!, {r0, r1, r2, r3}
   16ef8:	mov	r8, #67108864	; 0x4000000
   16efc:	ldm	r5!, {r0, r1, r2, r3}
   16f00:	ldr	r6, [pc, #436]	; 170bc <dcngettext@plt+0x6094>
   16f04:	stmia	ip!, {r0, r1, r2, r3}
   16f08:	ldm	r5, {r0, r1, r2, r3}
   16f0c:	stm	ip, {r0, r1, r2, r3}
   16f10:	ldm	r7!, {r0, r1, r2, r3}
   16f14:	stmia	lr!, {r0, r1, r2, r3}
   16f18:	ldm	r7!, {r0, r1, r2, r3}
   16f1c:	str	r8, [sp, #44]	; 0x2c
   16f20:	stmia	lr!, {r0, r1, r2, r3}
   16f24:	ldm	ip, {r0, r1, r2, r3}
   16f28:	stm	lr, {r0, r1, r2, r3}
   16f2c:	bl	10f2c <__errno_location@plt>
   16f30:	cmn	r4, #-2147483647	; 0x80000001
   16f34:	ldr	r5, [r6]
   16f38:	mov	r7, r0
   16f3c:	movne	r0, #0
   16f40:	moveq	r0, #1
   16f44:	ldr	r3, [r7]
   16f48:	orrs	r0, r0, r4, lsr #31
   16f4c:	str	r3, [sp, #24]
   16f50:	bne	170b8 <dcngettext@plt+0x6090>
   16f54:	ldr	r2, [r6, #4]
   16f58:	cmp	r4, r2
   16f5c:	blt	16fbc <dcngettext@plt+0x5f94>
   16f60:	add	r8, r6, #8
   16f64:	cmp	r5, r8
   16f68:	str	r2, [sp, #80]	; 0x50
   16f6c:	beq	17088 <dcngettext@plt+0x6060>
   16f70:	mov	r3, #8
   16f74:	sub	r2, r4, r2
   16f78:	mov	r0, r5
   16f7c:	str	r3, [sp]
   16f80:	add	r2, r2, #1
   16f84:	add	r1, sp, #80	; 0x50
   16f88:	mvn	r3, #-2147483648	; 0x80000000
   16f8c:	bl	18bb0 <dcngettext@plt+0x7b88>
   16f90:	mov	r5, r0
   16f94:	str	r0, [r6]
   16f98:	ldr	r0, [r6, #4]
   16f9c:	ldr	r2, [sp, #80]	; 0x50
   16fa0:	mov	r1, #0
   16fa4:	sub	r2, r2, r0
   16fa8:	add	r0, r5, r0, lsl #3
   16fac:	lsl	r2, r2, #3
   16fb0:	bl	10f50 <memset@plt>
   16fb4:	ldr	r3, [sp, #80]	; 0x50
   16fb8:	str	r3, [r6, #4]
   16fbc:	add	fp, r5, r4, lsl #3
   16fc0:	ldr	r1, [sp, #36]	; 0x24
   16fc4:	ldr	r8, [r5, r4, lsl #3]
   16fc8:	ldr	r6, [fp, #4]
   16fcc:	ldr	r2, [sp, #72]	; 0x48
   16fd0:	ldr	r3, [sp, #32]
   16fd4:	ldr	ip, [sp, #76]	; 0x4c
   16fd8:	orr	r1, r1, #1
   16fdc:	add	sl, sp, #40	; 0x28
   16fe0:	str	r1, [sp, #28]
   16fe4:	str	r1, [sp, #4]
   16fe8:	str	r2, [sp, #12]
   16fec:	str	r3, [sp]
   16ff0:	mov	r0, r6
   16ff4:	mov	r1, r8
   16ff8:	str	ip, [sp, #16]
   16ffc:	str	sl, [sp, #8]
   17000:	mvn	r3, #0
   17004:	mov	r2, r9
   17008:	bl	140ac <dcngettext@plt+0x3084>
   1700c:	cmp	r8, r0
   17010:	bhi	17074 <dcngettext@plt+0x604c>
   17014:	ldr	r3, [pc, #164]	; 170c0 <dcngettext@plt+0x6098>
   17018:	add	r8, r0, #1
   1701c:	cmp	r6, r3
   17020:	str	r8, [r5, r4, lsl #3]
   17024:	beq	17030 <dcngettext@plt+0x6008>
   17028:	mov	r0, r6
   1702c:	bl	13de0 <dcngettext@plt+0x2db8>
   17030:	mov	r0, r8
   17034:	bl	18994 <dcngettext@plt+0x796c>
   17038:	ldr	lr, [sp, #76]	; 0x4c
   1703c:	ldr	r3, [sp, #32]
   17040:	ldr	ip, [sp, #72]	; 0x48
   17044:	ldr	r4, [sp, #28]
   17048:	mov	r2, r9
   1704c:	mov	r1, r8
   17050:	str	r0, [fp, #4]
   17054:	str	r3, [sp]
   17058:	str	sl, [sp, #8]
   1705c:	str	r4, [sp, #4]
   17060:	str	lr, [sp, #16]
   17064:	str	ip, [sp, #12]
   17068:	mvn	r3, #0
   1706c:	mov	r6, r0
   17070:	bl	140ac <dcngettext@plt+0x3084>
   17074:	ldr	r3, [sp, #24]
   17078:	mov	r0, r6
   1707c:	str	r3, [r7]
   17080:	add	sp, sp, #180	; 0xb4
   17084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17088:	mov	r3, #8
   1708c:	sub	r2, r4, r2
   17090:	add	r1, sp, #80	; 0x50
   17094:	str	r3, [sp]
   17098:	add	r2, r2, #1
   1709c:	mvn	r3, #-2147483648	; 0x80000000
   170a0:	bl	18bb0 <dcngettext@plt+0x7b88>
   170a4:	mov	r5, r0
   170a8:	ldm	r8, {r0, r1}
   170ac:	str	r5, [r6]
   170b0:	stm	r5, {r0, r1}
   170b4:	b	16f98 <dcngettext@plt+0x5f70>
   170b8:	bl	11010 <abort@plt>
   170bc:	andeq	fp, r2, r0, lsl r1
   170c0:	andeq	fp, r2, r0, asr #3
   170c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   170c8:	mov	r7, r1
   170cc:	ldr	lr, [pc, #492]	; 172c0 <dcngettext@plt+0x6298>
   170d0:	mov	r8, r2
   170d4:	mov	r4, r0
   170d8:	mov	fp, r3
   170dc:	ldm	lr!, {r0, r1, r2, r3}
   170e0:	sub	sp, sp, #100	; 0x64
   170e4:	add	ip, sp, #48	; 0x30
   170e8:	mov	sl, #10
   170ec:	stmia	ip!, {r0, r1, r2, r3}
   170f0:	cmp	r8, #0
   170f4:	cmpne	r7, #0
   170f8:	ldm	lr!, {r0, r1, r2, r3}
   170fc:	str	sl, [sp, #48]	; 0x30
   17100:	stmia	ip!, {r0, r1, r2, r3}
   17104:	ldm	lr, {r0, r1, r2, r3}
   17108:	stm	ip, {r0, r1, r2, r3}
   1710c:	beq	172bc <dcngettext@plt+0x6294>
   17110:	str	r7, [sp, #88]	; 0x58
   17114:	str	r8, [sp, #92]	; 0x5c
   17118:	bl	10f2c <__errno_location@plt>
   1711c:	ldr	r6, [pc, #416]	; 172c4 <dcngettext@plt+0x629c>
   17120:	cmn	r4, #-2147483647	; 0x80000001
   17124:	ldr	r5, [r6]
   17128:	mov	r9, r0
   1712c:	movne	r0, #0
   17130:	moveq	r0, #1
   17134:	ldr	r3, [r9]
   17138:	orrs	r0, r0, r4, lsr #31
   1713c:	str	r3, [sp, #28]
   17140:	bne	172bc <dcngettext@plt+0x6294>
   17144:	ldr	r2, [r6, #4]
   17148:	cmp	r4, r2
   1714c:	movlt	r3, sl
   17150:	blt	171bc <dcngettext@plt+0x6194>
   17154:	add	r7, r6, #8
   17158:	cmp	r5, r7
   1715c:	str	r2, [sp, #44]	; 0x2c
   17160:	beq	1728c <dcngettext@plt+0x6264>
   17164:	mov	r3, #8
   17168:	sub	r2, r4, r2
   1716c:	mov	r0, r5
   17170:	str	r3, [sp]
   17174:	add	r2, r2, #1
   17178:	mvn	r3, #-2147483648	; 0x80000000
   1717c:	add	r1, sp, #44	; 0x2c
   17180:	bl	18bb0 <dcngettext@plt+0x7b88>
   17184:	mov	r5, r0
   17188:	str	r0, [r6]
   1718c:	ldr	r0, [r6, #4]
   17190:	ldr	r2, [sp, #44]	; 0x2c
   17194:	mov	r1, #0
   17198:	sub	r2, r2, r0
   1719c:	add	r0, r5, r0, lsl #3
   171a0:	lsl	r2, r2, #3
   171a4:	bl	10f50 <memset@plt>
   171a8:	ldr	r3, [sp, #48]	; 0x30
   171ac:	ldr	r7, [sp, #88]	; 0x58
   171b0:	ldr	r8, [sp, #92]	; 0x5c
   171b4:	ldr	r2, [sp, #44]	; 0x2c
   171b8:	str	r2, [r6, #4]
   171bc:	add	r2, r5, r4, lsl #3
   171c0:	mov	r1, r2
   171c4:	str	r2, [sp, #32]
   171c8:	ldr	r2, [sp, #52]	; 0x34
   171cc:	ldr	r6, [r1, #4]
   171d0:	ldr	sl, [r5, r4, lsl #3]
   171d4:	orr	r2, r2, #1
   171d8:	str	r3, [sp]
   171dc:	add	r3, sp, #56	; 0x38
   171e0:	str	r2, [sp, #36]	; 0x24
   171e4:	str	r2, [sp, #4]
   171e8:	str	r3, [sp, #8]
   171ec:	mov	r0, r6
   171f0:	str	r8, [sp, #16]
   171f4:	str	r7, [sp, #12]
   171f8:	mov	r1, sl
   171fc:	mvn	r3, #0
   17200:	mov	r2, fp
   17204:	bl	140ac <dcngettext@plt+0x3084>
   17208:	cmp	sl, r0
   1720c:	bhi	17278 <dcngettext@plt+0x6250>
   17210:	ldr	r3, [pc, #176]	; 172c8 <dcngettext@plt+0x62a0>
   17214:	add	r7, r0, #1
   17218:	cmp	r6, r3
   1721c:	str	r7, [r5, r4, lsl #3]
   17220:	beq	1722c <dcngettext@plt+0x6204>
   17224:	mov	r0, r6
   17228:	bl	13de0 <dcngettext@plt+0x2db8>
   1722c:	mov	r0, r7
   17230:	bl	18994 <dcngettext@plt+0x796c>
   17234:	ldr	r3, [sp, #32]
   17238:	ldr	lr, [sp, #92]	; 0x5c
   1723c:	ldr	ip, [sp, #88]	; 0x58
   17240:	ldr	r4, [sp, #36]	; 0x24
   17244:	mov	r2, fp
   17248:	mov	r1, r7
   1724c:	str	r0, [r3, #4]
   17250:	add	r3, sp, #56	; 0x38
   17254:	str	r3, [sp, #8]
   17258:	ldr	r3, [sp, #48]	; 0x30
   1725c:	str	r4, [sp, #4]
   17260:	str	r3, [sp]
   17264:	str	lr, [sp, #16]
   17268:	str	ip, [sp, #12]
   1726c:	mvn	r3, #0
   17270:	mov	r6, r0
   17274:	bl	140ac <dcngettext@plt+0x3084>
   17278:	ldr	r3, [sp, #28]
   1727c:	mov	r0, r6
   17280:	str	r3, [r9]
   17284:	add	sp, sp, #100	; 0x64
   17288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1728c:	mov	r3, #8
   17290:	sub	r2, r4, r2
   17294:	str	r3, [sp]
   17298:	add	r1, sp, #44	; 0x2c
   1729c:	add	r2, r2, #1
   172a0:	mvn	r3, #-2147483648	; 0x80000000
   172a4:	bl	18bb0 <dcngettext@plt+0x7b88>
   172a8:	mov	r5, r0
   172ac:	ldm	r7, {r0, r1}
   172b0:	str	r5, [r6]
   172b4:	stm	r5, {r0, r1}
   172b8:	b	1718c <dcngettext@plt+0x6164>
   172bc:	bl	11010 <abort@plt>
   172c0:	muleq	r2, r0, r1
   172c4:	andeq	fp, r2, r0, lsl r1
   172c8:	andeq	fp, r2, r0, asr #3
   172cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172d0:	mov	r7, r1
   172d4:	ldr	lr, [pc, #492]	; 174c8 <dcngettext@plt+0x64a0>
   172d8:	mov	r8, r2
   172dc:	mov	r4, r0
   172e0:	mov	fp, r3
   172e4:	ldm	lr!, {r0, r1, r2, r3}
   172e8:	sub	sp, sp, #100	; 0x64
   172ec:	add	ip, sp, #48	; 0x30
   172f0:	mov	sl, #10
   172f4:	stmia	ip!, {r0, r1, r2, r3}
   172f8:	cmp	r8, #0
   172fc:	cmpne	r7, #0
   17300:	ldm	lr!, {r0, r1, r2, r3}
   17304:	str	sl, [sp, #48]	; 0x30
   17308:	stmia	ip!, {r0, r1, r2, r3}
   1730c:	ldm	lr, {r0, r1, r2, r3}
   17310:	stm	ip, {r0, r1, r2, r3}
   17314:	beq	174c4 <dcngettext@plt+0x649c>
   17318:	str	r7, [sp, #88]	; 0x58
   1731c:	str	r8, [sp, #92]	; 0x5c
   17320:	bl	10f2c <__errno_location@plt>
   17324:	ldr	r6, [pc, #416]	; 174cc <dcngettext@plt+0x64a4>
   17328:	cmn	r4, #-2147483647	; 0x80000001
   1732c:	ldr	r5, [r6]
   17330:	mov	r9, r0
   17334:	movne	r0, #0
   17338:	moveq	r0, #1
   1733c:	ldr	r3, [r9]
   17340:	orrs	r0, r0, r4, lsr #31
   17344:	str	r3, [sp, #28]
   17348:	bne	174c4 <dcngettext@plt+0x649c>
   1734c:	ldr	r2, [r6, #4]
   17350:	cmp	r4, r2
   17354:	movlt	r3, sl
   17358:	blt	173c4 <dcngettext@plt+0x639c>
   1735c:	add	r7, r6, #8
   17360:	cmp	r5, r7
   17364:	str	r2, [sp, #44]	; 0x2c
   17368:	beq	17494 <dcngettext@plt+0x646c>
   1736c:	mov	r3, #8
   17370:	sub	r2, r4, r2
   17374:	mov	r0, r5
   17378:	str	r3, [sp]
   1737c:	add	r2, r2, #1
   17380:	mvn	r3, #-2147483648	; 0x80000000
   17384:	add	r1, sp, #44	; 0x2c
   17388:	bl	18bb0 <dcngettext@plt+0x7b88>
   1738c:	mov	r5, r0
   17390:	str	r0, [r6]
   17394:	ldr	r0, [r6, #4]
   17398:	ldr	r2, [sp, #44]	; 0x2c
   1739c:	mov	r1, #0
   173a0:	sub	r2, r2, r0
   173a4:	add	r0, r5, r0, lsl #3
   173a8:	lsl	r2, r2, #3
   173ac:	bl	10f50 <memset@plt>
   173b0:	ldr	r3, [sp, #48]	; 0x30
   173b4:	ldr	r7, [sp, #88]	; 0x58
   173b8:	ldr	r8, [sp, #92]	; 0x5c
   173bc:	ldr	r2, [sp, #44]	; 0x2c
   173c0:	str	r2, [r6, #4]
   173c4:	add	r2, r5, r4, lsl #3
   173c8:	mov	r1, r2
   173cc:	str	r2, [sp, #32]
   173d0:	ldr	r2, [sp, #52]	; 0x34
   173d4:	ldr	r6, [r1, #4]
   173d8:	ldr	sl, [r5, r4, lsl #3]
   173dc:	orr	r2, r2, #1
   173e0:	str	r3, [sp]
   173e4:	add	r3, sp, #56	; 0x38
   173e8:	str	r2, [sp, #36]	; 0x24
   173ec:	str	r2, [sp, #4]
   173f0:	str	r3, [sp, #8]
   173f4:	mov	r0, r6
   173f8:	str	r8, [sp, #16]
   173fc:	str	r7, [sp, #12]
   17400:	mov	r1, sl
   17404:	ldr	r3, [sp, #136]	; 0x88
   17408:	mov	r2, fp
   1740c:	bl	140ac <dcngettext@plt+0x3084>
   17410:	cmp	sl, r0
   17414:	bhi	17480 <dcngettext@plt+0x6458>
   17418:	ldr	r3, [pc, #176]	; 174d0 <dcngettext@plt+0x64a8>
   1741c:	add	r7, r0, #1
   17420:	cmp	r6, r3
   17424:	str	r7, [r5, r4, lsl #3]
   17428:	beq	17434 <dcngettext@plt+0x640c>
   1742c:	mov	r0, r6
   17430:	bl	13de0 <dcngettext@plt+0x2db8>
   17434:	mov	r0, r7
   17438:	bl	18994 <dcngettext@plt+0x796c>
   1743c:	ldr	r3, [sp, #32]
   17440:	ldr	lr, [sp, #92]	; 0x5c
   17444:	ldr	ip, [sp, #88]	; 0x58
   17448:	ldr	r4, [sp, #36]	; 0x24
   1744c:	mov	r2, fp
   17450:	mov	r1, r7
   17454:	str	r0, [r3, #4]
   17458:	add	r3, sp, #56	; 0x38
   1745c:	str	r3, [sp, #8]
   17460:	ldr	r3, [sp, #48]	; 0x30
   17464:	str	r4, [sp, #4]
   17468:	str	r3, [sp]
   1746c:	str	lr, [sp, #16]
   17470:	str	ip, [sp, #12]
   17474:	ldr	r3, [sp, #136]	; 0x88
   17478:	mov	r6, r0
   1747c:	bl	140ac <dcngettext@plt+0x3084>
   17480:	ldr	r3, [sp, #28]
   17484:	mov	r0, r6
   17488:	str	r3, [r9]
   1748c:	add	sp, sp, #100	; 0x64
   17490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17494:	mov	r3, #8
   17498:	sub	r2, r4, r2
   1749c:	str	r3, [sp]
   174a0:	add	r1, sp, #44	; 0x2c
   174a4:	add	r2, r2, #1
   174a8:	mvn	r3, #-2147483648	; 0x80000000
   174ac:	bl	18bb0 <dcngettext@plt+0x7b88>
   174b0:	mov	r5, r0
   174b4:	ldm	r7, {r0, r1}
   174b8:	str	r5, [r6]
   174bc:	stm	r5, {r0, r1}
   174c0:	b	17394 <dcngettext@plt+0x636c>
   174c4:	bl	11010 <abort@plt>
   174c8:	muleq	r2, r0, r1
   174cc:	andeq	fp, r2, r0, lsl r1
   174d0:	andeq	fp, r2, r0, asr #3
   174d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174d8:	mov	r5, r0
   174dc:	ldr	lr, [pc, #452]	; 176a8 <dcngettext@plt+0x6680>
   174e0:	mov	r6, r1
   174e4:	mov	sl, r2
   174e8:	ldm	lr!, {r0, r1, r2, r3}
   174ec:	sub	sp, sp, #92	; 0x5c
   174f0:	add	ip, sp, #40	; 0x28
   174f4:	cmp	r6, #0
   174f8:	cmpne	r5, #0
   174fc:	stmia	ip!, {r0, r1, r2, r3}
   17500:	mov	r9, #10
   17504:	ldm	lr!, {r0, r1, r2, r3}
   17508:	moveq	fp, #1
   1750c:	movne	fp, #0
   17510:	str	r9, [sp, #40]	; 0x28
   17514:	stmia	ip!, {r0, r1, r2, r3}
   17518:	ldm	lr, {r0, r1, r2, r3}
   1751c:	stm	ip, {r0, r1, r2, r3}
   17520:	beq	176a4 <dcngettext@plt+0x667c>
   17524:	str	r5, [sp, #80]	; 0x50
   17528:	str	r6, [sp, #84]	; 0x54
   1752c:	bl	10f2c <__errno_location@plt>
   17530:	ldr	r7, [pc, #372]	; 176ac <dcngettext@plt+0x6684>
   17534:	ldr	r2, [r7, #4]
   17538:	ldr	r4, [r7]
   1753c:	cmp	r2, #0
   17540:	ldr	r3, [r0]
   17544:	mov	r8, r0
   17548:	str	r3, [sp, #24]
   1754c:	movgt	r3, r9
   17550:	bgt	175b8 <dcngettext@plt+0x6590>
   17554:	add	r5, r7, #8
   17558:	cmp	r4, r5
   1755c:	str	r2, [sp, #36]	; 0x24
   17560:	beq	17674 <dcngettext@plt+0x664c>
   17564:	mov	r3, #8
   17568:	mov	r0, r4
   1756c:	str	r3, [sp]
   17570:	rsb	r2, r2, #1
   17574:	mvn	r3, #-2147483648	; 0x80000000
   17578:	add	r1, sp, #36	; 0x24
   1757c:	bl	18bb0 <dcngettext@plt+0x7b88>
   17580:	mov	r4, r0
   17584:	str	r0, [r7]
   17588:	ldr	r0, [r7, #4]
   1758c:	ldr	r2, [sp, #36]	; 0x24
   17590:	mov	r1, #0
   17594:	sub	r2, r2, r0
   17598:	add	r0, r4, r0, lsl #3
   1759c:	lsl	r2, r2, #3
   175a0:	bl	10f50 <memset@plt>
   175a4:	ldr	r3, [sp, #40]	; 0x28
   175a8:	ldr	r5, [sp, #80]	; 0x50
   175ac:	ldr	r6, [sp, #84]	; 0x54
   175b0:	ldr	r2, [sp, #36]	; 0x24
   175b4:	str	r2, [r7, #4]
   175b8:	ldr	r2, [sp, #44]	; 0x2c
   175bc:	ldr	r9, [r4]
   175c0:	ldr	r7, [r4, #4]
   175c4:	orr	r2, r2, #1
   175c8:	add	fp, sp, #48	; 0x30
   175cc:	str	r2, [sp, #28]
   175d0:	str	r2, [sp, #4]
   175d4:	str	r3, [sp]
   175d8:	str	r6, [sp, #16]
   175dc:	str	r5, [sp, #12]
   175e0:	mov	r1, r9
   175e4:	mov	r0, r7
   175e8:	str	fp, [sp, #8]
   175ec:	mvn	r3, #0
   175f0:	mov	r2, sl
   175f4:	bl	140ac <dcngettext@plt+0x3084>
   175f8:	cmp	r9, r0
   175fc:	bhi	17660 <dcngettext@plt+0x6638>
   17600:	ldr	r3, [pc, #168]	; 176b0 <dcngettext@plt+0x6688>
   17604:	add	r5, r0, #1
   17608:	cmp	r7, r3
   1760c:	str	r5, [r4]
   17610:	beq	1761c <dcngettext@plt+0x65f4>
   17614:	mov	r0, r7
   17618:	bl	13de0 <dcngettext@plt+0x2db8>
   1761c:	mov	r0, r5
   17620:	bl	18994 <dcngettext@plt+0x796c>
   17624:	ldr	lr, [sp, #84]	; 0x54
   17628:	ldr	r3, [sp, #40]	; 0x28
   1762c:	ldr	ip, [sp, #80]	; 0x50
   17630:	mov	r2, sl
   17634:	mov	r1, r5
   17638:	str	r0, [r4, #4]
   1763c:	ldr	r4, [sp, #28]
   17640:	str	r3, [sp]
   17644:	str	fp, [sp, #8]
   17648:	str	r4, [sp, #4]
   1764c:	str	lr, [sp, #16]
   17650:	str	ip, [sp, #12]
   17654:	mvn	r3, #0
   17658:	mov	r7, r0
   1765c:	bl	140ac <dcngettext@plt+0x3084>
   17660:	ldr	r3, [sp, #24]
   17664:	mov	r0, r7
   17668:	str	r3, [r8]
   1766c:	add	sp, sp, #92	; 0x5c
   17670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17674:	mov	r3, #8
   17678:	str	r3, [sp]
   1767c:	add	r1, sp, #36	; 0x24
   17680:	rsb	r2, r2, #1
   17684:	mov	r0, fp
   17688:	mvn	r3, #-2147483648	; 0x80000000
   1768c:	bl	18bb0 <dcngettext@plt+0x7b88>
   17690:	mov	r4, r0
   17694:	ldm	r5, {r0, r1}
   17698:	str	r4, [r7]
   1769c:	stm	r4, {r0, r1}
   176a0:	b	17588 <dcngettext@plt+0x6560>
   176a4:	bl	11010 <abort@plt>
   176a8:	muleq	r2, r0, r1
   176ac:	andeq	fp, r2, r0, lsl r1
   176b0:	andeq	fp, r2, r0, asr #3
   176b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176b8:	mov	r5, r0
   176bc:	ldr	lr, [pc, #464]	; 17894 <dcngettext@plt+0x686c>
   176c0:	mov	r6, r1
   176c4:	mov	sl, r2
   176c8:	mov	fp, r3
   176cc:	ldm	lr!, {r0, r1, r2, r3}
   176d0:	sub	sp, sp, #92	; 0x5c
   176d4:	add	ip, sp, #40	; 0x28
   176d8:	cmp	r6, #0
   176dc:	cmpne	r5, #0
   176e0:	stmia	ip!, {r0, r1, r2, r3}
   176e4:	moveq	r4, #1
   176e8:	ldm	lr!, {r0, r1, r2, r3}
   176ec:	movne	r4, #0
   176f0:	mov	r9, #10
   176f4:	str	r4, [sp, #28]
   176f8:	stmia	ip!, {r0, r1, r2, r3}
   176fc:	ldm	lr, {r0, r1, r2, r3}
   17700:	str	r9, [sp, #40]	; 0x28
   17704:	stm	ip, {r0, r1, r2, r3}
   17708:	beq	17890 <dcngettext@plt+0x6868>
   1770c:	str	r5, [sp, #80]	; 0x50
   17710:	str	r6, [sp, #84]	; 0x54
   17714:	bl	10f2c <__errno_location@plt>
   17718:	ldr	r7, [pc, #376]	; 17898 <dcngettext@plt+0x6870>
   1771c:	ldr	r2, [r7, #4]
   17720:	ldr	r4, [r7]
   17724:	cmp	r2, #0
   17728:	ldr	r3, [r0]
   1772c:	mov	r8, r0
   17730:	str	r3, [sp, #24]
   17734:	movgt	r3, r9
   17738:	bgt	177a0 <dcngettext@plt+0x6778>
   1773c:	add	r5, r7, #8
   17740:	cmp	r4, r5
   17744:	str	r2, [sp, #36]	; 0x24
   17748:	beq	17860 <dcngettext@plt+0x6838>
   1774c:	mov	r3, #8
   17750:	mov	r0, r4
   17754:	str	r3, [sp]
   17758:	rsb	r2, r2, #1
   1775c:	mvn	r3, #-2147483648	; 0x80000000
   17760:	add	r1, sp, #36	; 0x24
   17764:	bl	18bb0 <dcngettext@plt+0x7b88>
   17768:	mov	r4, r0
   1776c:	str	r0, [r7]
   17770:	ldr	r0, [r7, #4]
   17774:	ldr	r2, [sp, #36]	; 0x24
   17778:	mov	r1, #0
   1777c:	sub	r2, r2, r0
   17780:	add	r0, r4, r0, lsl #3
   17784:	lsl	r2, r2, #3
   17788:	bl	10f50 <memset@plt>
   1778c:	ldr	r3, [sp, #40]	; 0x28
   17790:	ldr	r5, [sp, #80]	; 0x50
   17794:	ldr	r6, [sp, #84]	; 0x54
   17798:	ldr	r2, [sp, #36]	; 0x24
   1779c:	str	r2, [r7, #4]
   177a0:	ldr	r2, [sp, #44]	; 0x2c
   177a4:	ldr	r9, [r4]
   177a8:	ldr	r7, [r4, #4]
   177ac:	orr	r2, r2, #1
   177b0:	str	r3, [sp]
   177b4:	add	r3, sp, #48	; 0x30
   177b8:	str	r2, [sp, #28]
   177bc:	str	r2, [sp, #4]
   177c0:	str	r3, [sp, #8]
   177c4:	str	r6, [sp, #16]
   177c8:	str	r5, [sp, #12]
   177cc:	mov	r1, r9
   177d0:	mov	r0, r7
   177d4:	mov	r3, fp
   177d8:	mov	r2, sl
   177dc:	bl	140ac <dcngettext@plt+0x3084>
   177e0:	cmp	r9, r0
   177e4:	bhi	1784c <dcngettext@plt+0x6824>
   177e8:	ldr	r3, [pc, #172]	; 1789c <dcngettext@plt+0x6874>
   177ec:	add	r5, r0, #1
   177f0:	cmp	r7, r3
   177f4:	str	r5, [r4]
   177f8:	beq	17804 <dcngettext@plt+0x67dc>
   177fc:	mov	r0, r7
   17800:	bl	13de0 <dcngettext@plt+0x2db8>
   17804:	mov	r0, r5
   17808:	bl	18994 <dcngettext@plt+0x796c>
   1780c:	add	lr, sp, #48	; 0x30
   17810:	ldr	ip, [sp, #84]	; 0x54
   17814:	mov	r1, r5
   17818:	ldr	r5, [sp, #28]
   1781c:	mov	r3, fp
   17820:	mov	r2, sl
   17824:	str	r0, [r4, #4]
   17828:	ldr	r4, [sp, #80]	; 0x50
   1782c:	str	lr, [sp, #8]
   17830:	ldr	lr, [sp, #40]	; 0x28
   17834:	str	r5, [sp, #4]
   17838:	str	ip, [sp, #16]
   1783c:	str	r4, [sp, #12]
   17840:	str	lr, [sp]
   17844:	mov	r7, r0
   17848:	bl	140ac <dcngettext@plt+0x3084>
   1784c:	ldr	r3, [sp, #24]
   17850:	mov	r0, r7
   17854:	str	r3, [r8]
   17858:	add	sp, sp, #92	; 0x5c
   1785c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17860:	mov	r3, #8
   17864:	str	r3, [sp]
   17868:	add	r1, sp, #36	; 0x24
   1786c:	rsb	r2, r2, #1
   17870:	ldr	r0, [sp, #28]
   17874:	mvn	r3, #-2147483648	; 0x80000000
   17878:	bl	18bb0 <dcngettext@plt+0x7b88>
   1787c:	mov	r4, r0
   17880:	ldm	r5, {r0, r1}
   17884:	str	r4, [r7]
   17888:	stm	r4, {r0, r1}
   1788c:	b	17770 <dcngettext@plt+0x6748>
   17890:	bl	11010 <abort@plt>
   17894:	muleq	r2, r0, r1
   17898:	andeq	fp, r2, r0, lsl r1
   1789c:	andeq	fp, r2, r0, asr #3
   178a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178a4:	sub	sp, sp, #52	; 0x34
   178a8:	mov	r5, r0
   178ac:	mov	sl, r1
   178b0:	mov	fp, r2
   178b4:	bl	10f2c <__errno_location@plt>
   178b8:	ldr	r4, [pc, #404]	; 17a54 <dcngettext@plt+0x6a2c>
   178bc:	cmn	r5, #-2147483647	; 0x80000001
   178c0:	ldr	r6, [r4]
   178c4:	mov	r8, r0
   178c8:	movne	r0, #0
   178cc:	moveq	r0, #1
   178d0:	ldr	r3, [r8]
   178d4:	orrs	r0, r0, r5, lsr #31
   178d8:	str	r3, [sp, #28]
   178dc:	bne	17a50 <dcngettext@plt+0x6a28>
   178e0:	ldr	r2, [r4, #4]
   178e4:	cmp	r5, r2
   178e8:	blt	17948 <dcngettext@plt+0x6920>
   178ec:	add	r7, r4, #8
   178f0:	cmp	r6, r7
   178f4:	str	r2, [sp, #44]	; 0x2c
   178f8:	beq	17a20 <dcngettext@plt+0x69f8>
   178fc:	mov	r3, #8
   17900:	sub	r2, r5, r2
   17904:	mov	r0, r6
   17908:	str	r3, [sp]
   1790c:	add	r2, r2, #1
   17910:	mvn	r3, #-2147483648	; 0x80000000
   17914:	add	r1, sp, #44	; 0x2c
   17918:	bl	18bb0 <dcngettext@plt+0x7b88>
   1791c:	mov	r6, r0
   17920:	str	r0, [r4]
   17924:	ldr	r0, [r4, #4]
   17928:	ldr	r2, [sp, #44]	; 0x2c
   1792c:	mov	r1, #0
   17930:	sub	r2, r2, r0
   17934:	add	r0, r6, r0, lsl #3
   17938:	lsl	r2, r2, #3
   1793c:	bl	10f50 <memset@plt>
   17940:	ldr	r3, [sp, #44]	; 0x2c
   17944:	str	r3, [r4, #4]
   17948:	ldr	r2, [r4, #56]	; 0x38
   1794c:	add	r3, r6, r5, lsl #3
   17950:	ldr	r1, [r4, #20]
   17954:	ldr	r7, [r3, #4]
   17958:	ldr	r9, [r6, r5, lsl #3]
   1795c:	ldr	ip, [r4, #60]	; 0x3c
   17960:	str	r3, [sp, #32]
   17964:	ldr	r3, [r4, #16]
   17968:	str	r2, [sp, #12]
   1796c:	ldr	r2, [pc, #228]	; 17a58 <dcngettext@plt+0x6a30>
   17970:	orr	r1, r1, #1
   17974:	str	r1, [sp, #36]	; 0x24
   17978:	str	r1, [sp, #4]
   1797c:	str	r2, [sp, #8]
   17980:	str	r3, [sp]
   17984:	mov	r0, r7
   17988:	mov	r1, r9
   1798c:	str	ip, [sp, #16]
   17990:	mov	r3, fp
   17994:	mov	r2, sl
   17998:	bl	140ac <dcngettext@plt+0x3084>
   1799c:	cmp	r9, r0
   179a0:	bhi	17a0c <dcngettext@plt+0x69e4>
   179a4:	ldr	r3, [pc, #176]	; 17a5c <dcngettext@plt+0x6a34>
   179a8:	add	r9, r0, #1
   179ac:	cmp	r7, r3
   179b0:	str	r9, [r6, r5, lsl #3]
   179b4:	beq	179c0 <dcngettext@plt+0x6998>
   179b8:	mov	r0, r7
   179bc:	bl	13de0 <dcngettext@plt+0x2db8>
   179c0:	mov	r0, r9
   179c4:	bl	18994 <dcngettext@plt+0x796c>
   179c8:	ldr	ip, [sp, #32]
   179cc:	ldr	lr, [r4, #60]	; 0x3c
   179d0:	ldr	r5, [r4, #56]	; 0x38
   179d4:	mov	r3, fp
   179d8:	mov	r2, sl
   179dc:	mov	r1, r9
   179e0:	str	r0, [ip, #4]
   179e4:	ldr	ip, [r4, #16]
   179e8:	ldr	r4, [pc, #104]	; 17a58 <dcngettext@plt+0x6a30>
   179ec:	str	lr, [sp, #16]
   179f0:	str	r4, [sp, #8]
   179f4:	ldr	r4, [sp, #36]	; 0x24
   179f8:	str	r5, [sp, #12]
   179fc:	str	r4, [sp, #4]
   17a00:	str	ip, [sp]
   17a04:	mov	r7, r0
   17a08:	bl	140ac <dcngettext@plt+0x3084>
   17a0c:	ldr	r3, [sp, #28]
   17a10:	mov	r0, r7
   17a14:	str	r3, [r8]
   17a18:	add	sp, sp, #52	; 0x34
   17a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a20:	mov	r3, #8
   17a24:	sub	r2, r5, r2
   17a28:	str	r3, [sp]
   17a2c:	add	r1, sp, #44	; 0x2c
   17a30:	add	r2, r2, #1
   17a34:	mvn	r3, #-2147483648	; 0x80000000
   17a38:	bl	18bb0 <dcngettext@plt+0x7b88>
   17a3c:	mov	r6, r0
   17a40:	ldm	r7, {r0, r1}
   17a44:	str	r6, [r4]
   17a48:	stm	r6, {r0, r1}
   17a4c:	b	17924 <dcngettext@plt+0x68fc>
   17a50:	bl	11010 <abort@plt>
   17a54:	andeq	fp, r2, r0, lsl r1
   17a58:	andeq	fp, r2, r8, lsr #2
   17a5c:	andeq	fp, r2, r0, asr #3
   17a60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a64:	sub	sp, sp, #44	; 0x2c
   17a68:	mov	r9, r0
   17a6c:	mov	sl, r1
   17a70:	bl	10f2c <__errno_location@plt>
   17a74:	ldr	r4, [pc, #360]	; 17be4 <dcngettext@plt+0x6bbc>
   17a78:	ldr	r2, [r4, #4]
   17a7c:	ldr	r5, [r4]
   17a80:	cmp	r2, #0
   17a84:	ldr	r3, [r0]
   17a88:	mov	r7, r0
   17a8c:	str	r3, [sp, #24]
   17a90:	bgt	17aec <dcngettext@plt+0x6ac4>
   17a94:	add	r6, r4, #8
   17a98:	cmp	r5, r6
   17a9c:	str	r2, [sp, #36]	; 0x24
   17aa0:	beq	17bb4 <dcngettext@plt+0x6b8c>
   17aa4:	mov	r3, #8
   17aa8:	mov	r0, r5
   17aac:	str	r3, [sp]
   17ab0:	rsb	r2, r2, #1
   17ab4:	mvn	r3, #-2147483648	; 0x80000000
   17ab8:	add	r1, sp, #36	; 0x24
   17abc:	bl	18bb0 <dcngettext@plt+0x7b88>
   17ac0:	mov	r5, r0
   17ac4:	str	r0, [r4]
   17ac8:	ldr	r0, [r4, #4]
   17acc:	ldr	r2, [sp, #36]	; 0x24
   17ad0:	mov	r1, #0
   17ad4:	sub	r2, r2, r0
   17ad8:	add	r0, r5, r0, lsl #3
   17adc:	lsl	r2, r2, #3
   17ae0:	bl	10f50 <memset@plt>
   17ae4:	ldr	r3, [sp, #36]	; 0x24
   17ae8:	str	r3, [r4, #4]
   17aec:	ldr	r1, [r4, #20]
   17af0:	ldr	r8, [r5]
   17af4:	ldr	r6, [r5, #4]
   17af8:	ldr	r2, [r4, #56]	; 0x38
   17afc:	ldr	r3, [r4, #16]
   17b00:	ldr	ip, [r4, #60]	; 0x3c
   17b04:	ldr	fp, [pc, #220]	; 17be8 <dcngettext@plt+0x6bc0>
   17b08:	orr	r1, r1, #1
   17b0c:	str	r1, [sp, #28]
   17b10:	str	r1, [sp, #4]
   17b14:	str	r2, [sp, #12]
   17b18:	str	r3, [sp]
   17b1c:	mov	r1, r8
   17b20:	mov	r0, r6
   17b24:	str	ip, [sp, #16]
   17b28:	str	fp, [sp, #8]
   17b2c:	mov	r3, sl
   17b30:	mov	r2, r9
   17b34:	bl	140ac <dcngettext@plt+0x3084>
   17b38:	cmp	r8, r0
   17b3c:	bhi	17ba0 <dcngettext@plt+0x6b78>
   17b40:	ldr	r3, [pc, #164]	; 17bec <dcngettext@plt+0x6bc4>
   17b44:	add	r8, r0, #1
   17b48:	cmp	r6, r3
   17b4c:	str	r8, [r5]
   17b50:	beq	17b5c <dcngettext@plt+0x6b34>
   17b54:	mov	r0, r6
   17b58:	bl	13de0 <dcngettext@plt+0x2db8>
   17b5c:	mov	r0, r8
   17b60:	bl	18994 <dcngettext@plt+0x796c>
   17b64:	ldr	lr, [r4, #60]	; 0x3c
   17b68:	ldr	ip, [r4, #16]
   17b6c:	mov	r3, sl
   17b70:	mov	r2, r9
   17b74:	mov	r1, r8
   17b78:	str	r0, [r5, #4]
   17b7c:	ldr	r5, [r4, #56]	; 0x38
   17b80:	ldr	r4, [sp, #28]
   17b84:	str	fp, [sp, #8]
   17b88:	str	r4, [sp, #4]
   17b8c:	str	lr, [sp, #16]
   17b90:	str	r5, [sp, #12]
   17b94:	str	ip, [sp]
   17b98:	mov	r6, r0
   17b9c:	bl	140ac <dcngettext@plt+0x3084>
   17ba0:	ldr	r3, [sp, #24]
   17ba4:	mov	r0, r6
   17ba8:	str	r3, [r7]
   17bac:	add	sp, sp, #44	; 0x2c
   17bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bb4:	mov	r3, #8
   17bb8:	str	r3, [sp]
   17bbc:	add	r1, sp, #36	; 0x24
   17bc0:	rsb	r2, r2, #1
   17bc4:	mvn	r3, #-2147483648	; 0x80000000
   17bc8:	mov	r0, #0
   17bcc:	bl	18bb0 <dcngettext@plt+0x7b88>
   17bd0:	mov	r5, r0
   17bd4:	ldm	r6, {r0, r1}
   17bd8:	str	r5, [r4]
   17bdc:	stm	r5, {r0, r1}
   17be0:	b	17ac8 <dcngettext@plt+0x6aa0>
   17be4:	andeq	fp, r2, r0, lsl r1
   17be8:	andeq	fp, r2, r8, lsr #2
   17bec:	andeq	fp, r2, r0, asr #3
   17bf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bf4:	sub	sp, sp, #44	; 0x2c
   17bf8:	mov	r5, r0
   17bfc:	mov	sl, r1
   17c00:	bl	10f2c <__errno_location@plt>
   17c04:	ldr	r4, [pc, #396]	; 17d98 <dcngettext@plt+0x6d70>
   17c08:	cmn	r5, #-2147483647	; 0x80000001
   17c0c:	ldr	r6, [r4]
   17c10:	mov	r8, r0
   17c14:	movne	r0, #0
   17c18:	moveq	r0, #1
   17c1c:	ldr	r3, [r8]
   17c20:	orrs	r0, r0, r5, lsr #31
   17c24:	str	r3, [sp, #24]
   17c28:	bne	17d94 <dcngettext@plt+0x6d6c>
   17c2c:	ldr	r2, [r4, #4]
   17c30:	cmp	r5, r2
   17c34:	blt	17c94 <dcngettext@plt+0x6c6c>
   17c38:	add	r7, r4, #8
   17c3c:	cmp	r6, r7
   17c40:	str	r2, [sp, #36]	; 0x24
   17c44:	beq	17d64 <dcngettext@plt+0x6d3c>
   17c48:	mov	r3, #8
   17c4c:	sub	r2, r5, r2
   17c50:	mov	r0, r6
   17c54:	str	r3, [sp]
   17c58:	add	r2, r2, #1
   17c5c:	mvn	r3, #-2147483648	; 0x80000000
   17c60:	add	r1, sp, #36	; 0x24
   17c64:	bl	18bb0 <dcngettext@plt+0x7b88>
   17c68:	mov	r6, r0
   17c6c:	str	r0, [r4]
   17c70:	ldr	r0, [r4, #4]
   17c74:	ldr	r2, [sp, #36]	; 0x24
   17c78:	mov	r1, #0
   17c7c:	sub	r2, r2, r0
   17c80:	add	r0, r6, r0, lsl #3
   17c84:	lsl	r2, r2, #3
   17c88:	bl	10f50 <memset@plt>
   17c8c:	ldr	r3, [sp, #36]	; 0x24
   17c90:	str	r3, [r4, #4]
   17c94:	ldr	r2, [r4, #56]	; 0x38
   17c98:	add	fp, r6, r5, lsl #3
   17c9c:	ldr	r1, [r4, #20]
   17ca0:	ldr	r9, [r6, r5, lsl #3]
   17ca4:	ldr	r7, [fp, #4]
   17ca8:	ldr	r3, [r4, #16]
   17cac:	ldr	ip, [r4, #60]	; 0x3c
   17cb0:	str	r2, [sp, #12]
   17cb4:	ldr	r2, [pc, #224]	; 17d9c <dcngettext@plt+0x6d74>
   17cb8:	orr	r1, r1, #1
   17cbc:	str	r1, [sp, #28]
   17cc0:	str	r1, [sp, #4]
   17cc4:	str	r2, [sp, #8]
   17cc8:	str	r3, [sp]
   17ccc:	mov	r0, r7
   17cd0:	mov	r1, r9
   17cd4:	str	ip, [sp, #16]
   17cd8:	mvn	r3, #0
   17cdc:	mov	r2, sl
   17ce0:	bl	140ac <dcngettext@plt+0x3084>
   17ce4:	cmp	r9, r0
   17ce8:	bhi	17d50 <dcngettext@plt+0x6d28>
   17cec:	ldr	r3, [pc, #172]	; 17da0 <dcngettext@plt+0x6d78>
   17cf0:	add	r9, r0, #1
   17cf4:	cmp	r7, r3
   17cf8:	str	r9, [r6, r5, lsl #3]
   17cfc:	beq	17d08 <dcngettext@plt+0x6ce0>
   17d00:	mov	r0, r7
   17d04:	bl	13de0 <dcngettext@plt+0x2db8>
   17d08:	mov	r0, r9
   17d0c:	bl	18994 <dcngettext@plt+0x796c>
   17d10:	ldr	ip, [r4, #60]	; 0x3c
   17d14:	ldr	r3, [r4, #16]
   17d18:	ldr	lr, [r4, #56]	; 0x38
   17d1c:	ldr	r4, [pc, #120]	; 17d9c <dcngettext@plt+0x6d74>
   17d20:	mov	r2, sl
   17d24:	mov	r1, r9
   17d28:	str	r0, [fp, #4]
   17d2c:	str	r4, [sp, #8]
   17d30:	ldr	r4, [sp, #28]
   17d34:	str	r3, [sp]
   17d38:	str	r4, [sp, #4]
   17d3c:	str	ip, [sp, #16]
   17d40:	str	lr, [sp, #12]
   17d44:	mvn	r3, #0
   17d48:	mov	r7, r0
   17d4c:	bl	140ac <dcngettext@plt+0x3084>
   17d50:	ldr	r3, [sp, #24]
   17d54:	mov	r0, r7
   17d58:	str	r3, [r8]
   17d5c:	add	sp, sp, #44	; 0x2c
   17d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d64:	mov	r3, #8
   17d68:	sub	r2, r5, r2
   17d6c:	str	r3, [sp]
   17d70:	add	r1, sp, #36	; 0x24
   17d74:	add	r2, r2, #1
   17d78:	mvn	r3, #-2147483648	; 0x80000000
   17d7c:	bl	18bb0 <dcngettext@plt+0x7b88>
   17d80:	mov	r6, r0
   17d84:	ldm	r7, {r0, r1}
   17d88:	str	r6, [r4]
   17d8c:	stm	r6, {r0, r1}
   17d90:	b	17c70 <dcngettext@plt+0x6c48>
   17d94:	bl	11010 <abort@plt>
   17d98:	andeq	fp, r2, r0, lsl r1
   17d9c:	andeq	fp, r2, r8, lsr #2
   17da0:	andeq	fp, r2, r0, asr #3
   17da4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17da8:	sub	sp, sp, #44	; 0x2c
   17dac:	mov	sl, r0
   17db0:	bl	10f2c <__errno_location@plt>
   17db4:	ldr	r4, [pc, #348]	; 17f18 <dcngettext@plt+0x6ef0>
   17db8:	ldr	r2, [r4, #4]
   17dbc:	ldr	r5, [r4]
   17dc0:	cmp	r2, #0
   17dc4:	ldr	r3, [r0]
   17dc8:	mov	r8, r0
   17dcc:	str	r3, [sp, #28]
   17dd0:	bgt	17e2c <dcngettext@plt+0x6e04>
   17dd4:	add	r6, r4, #8
   17dd8:	cmp	r5, r6
   17ddc:	str	r2, [sp, #36]	; 0x24
   17de0:	beq	17ee8 <dcngettext@plt+0x6ec0>
   17de4:	mov	r3, #8
   17de8:	mov	r0, r5
   17dec:	str	r3, [sp]
   17df0:	rsb	r2, r2, #1
   17df4:	mvn	r3, #-2147483648	; 0x80000000
   17df8:	add	r1, sp, #36	; 0x24
   17dfc:	bl	18bb0 <dcngettext@plt+0x7b88>
   17e00:	mov	r5, r0
   17e04:	str	r0, [r4]
   17e08:	ldr	r0, [r4, #4]
   17e0c:	ldr	r2, [sp, #36]	; 0x24
   17e10:	mov	r1, #0
   17e14:	sub	r2, r2, r0
   17e18:	add	r0, r5, r0, lsl #3
   17e1c:	lsl	r2, r2, #3
   17e20:	bl	10f50 <memset@plt>
   17e24:	ldr	r3, [sp, #36]	; 0x24
   17e28:	str	r3, [r4, #4]
   17e2c:	ldr	r7, [r4, #20]
   17e30:	ldr	r9, [r5]
   17e34:	ldr	r6, [r5, #4]
   17e38:	ldr	r2, [r4, #56]	; 0x38
   17e3c:	ldr	r3, [r4, #16]
   17e40:	ldr	ip, [r4, #60]	; 0x3c
   17e44:	ldr	fp, [pc, #208]	; 17f1c <dcngettext@plt+0x6ef4>
   17e48:	orr	r7, r7, #1
   17e4c:	str	r2, [sp, #12]
   17e50:	str	r3, [sp]
   17e54:	str	r7, [sp, #4]
   17e58:	mov	r1, r9
   17e5c:	mov	r0, r6
   17e60:	str	ip, [sp, #16]
   17e64:	str	fp, [sp, #8]
   17e68:	mvn	r3, #0
   17e6c:	mov	r2, sl
   17e70:	bl	140ac <dcngettext@plt+0x3084>
   17e74:	cmp	r9, r0
   17e78:	bhi	17ed4 <dcngettext@plt+0x6eac>
   17e7c:	ldr	r3, [pc, #156]	; 17f20 <dcngettext@plt+0x6ef8>
   17e80:	add	r9, r0, #1
   17e84:	cmp	r6, r3
   17e88:	str	r9, [r5]
   17e8c:	beq	17e98 <dcngettext@plt+0x6e70>
   17e90:	mov	r0, r6
   17e94:	bl	13de0 <dcngettext@plt+0x2db8>
   17e98:	mov	r0, r9
   17e9c:	bl	18994 <dcngettext@plt+0x796c>
   17ea0:	ldr	ip, [r4, #60]	; 0x3c
   17ea4:	ldr	r3, [r4, #16]
   17ea8:	ldr	lr, [r4, #56]	; 0x38
   17eac:	mov	r2, sl
   17eb0:	mov	r1, r9
   17eb4:	str	r0, [r5, #4]
   17eb8:	str	r3, [sp]
   17ebc:	stmib	sp, {r7, fp}
   17ec0:	str	ip, [sp, #16]
   17ec4:	str	lr, [sp, #12]
   17ec8:	mvn	r3, #0
   17ecc:	mov	r6, r0
   17ed0:	bl	140ac <dcngettext@plt+0x3084>
   17ed4:	ldr	r3, [sp, #28]
   17ed8:	mov	r0, r6
   17edc:	str	r3, [r8]
   17ee0:	add	sp, sp, #44	; 0x2c
   17ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ee8:	mov	r3, #8
   17eec:	str	r3, [sp]
   17ef0:	add	r1, sp, #36	; 0x24
   17ef4:	rsb	r2, r2, #1
   17ef8:	mvn	r3, #-2147483648	; 0x80000000
   17efc:	mov	r0, #0
   17f00:	bl	18bb0 <dcngettext@plt+0x7b88>
   17f04:	mov	r5, r0
   17f08:	ldm	r6, {r0, r1}
   17f0c:	str	r5, [r4]
   17f10:	stm	r5, {r0, r1}
   17f14:	b	17e08 <dcngettext@plt+0x6de0>
   17f18:	andeq	fp, r2, r0, lsl r1
   17f1c:	andeq	fp, r2, r8, lsr #2
   17f20:	andeq	fp, r2, r0, asr #3
   17f24:	mov	r2, #3
   17f28:	mov	r1, #0
   17f2c:	b	19140 <dcngettext@plt+0x8118>
   17f30:	push	{r4, r5, r6, lr}
   17f34:	sub	sp, sp, #32
   17f38:	cmp	r1, #0
   17f3c:	mov	r4, r0
   17f40:	ldr	r5, [sp, #48]	; 0x30
   17f44:	ldr	r6, [sp, #52]	; 0x34
   17f48:	beq	18260 <dcngettext@plt+0x7238>
   17f4c:	stm	sp, {r2, r3}
   17f50:	mov	r3, r1
   17f54:	ldr	r2, [pc, #808]	; 18284 <dcngettext@plt+0x725c>
   17f58:	mov	r1, #1
   17f5c:	bl	10f74 <__fprintf_chk@plt>
   17f60:	mov	r2, #5
   17f64:	ldr	r1, [pc, #796]	; 18288 <dcngettext@plt+0x7260>
   17f68:	mov	r0, #0
   17f6c:	bl	10e30 <dcgettext@plt>
   17f70:	ldr	r3, [pc, #788]	; 1828c <dcngettext@plt+0x7264>
   17f74:	ldr	r2, [pc, #788]	; 18290 <dcngettext@plt+0x7268>
   17f78:	str	r3, [sp]
   17f7c:	mov	r1, #1
   17f80:	mov	r3, r0
   17f84:	mov	r0, r4
   17f88:	bl	10f74 <__fprintf_chk@plt>
   17f8c:	mov	r1, r4
   17f90:	mov	r0, #10
   17f94:	bl	10e24 <fputc_unlocked@plt>
   17f98:	mov	r2, #5
   17f9c:	ldr	r1, [pc, #752]	; 18294 <dcngettext@plt+0x726c>
   17fa0:	mov	r0, #0
   17fa4:	bl	10e30 <dcgettext@plt>
   17fa8:	mov	r1, #1
   17fac:	ldr	r3, [pc, #740]	; 18298 <dcngettext@plt+0x7270>
   17fb0:	mov	r2, r0
   17fb4:	mov	r0, r4
   17fb8:	bl	10f74 <__fprintf_chk@plt>
   17fbc:	mov	r1, r4
   17fc0:	mov	r0, #10
   17fc4:	bl	10e24 <fputc_unlocked@plt>
   17fc8:	cmp	r6, #9
   17fcc:	ldrls	pc, [pc, r6, lsl #2]
   17fd0:	b	18278 <dcngettext@plt+0x7250>
   17fd4:	andeq	r8, r1, r8, asr r0
   17fd8:	andeq	r8, r1, r0, rrx
   17fdc:	andeq	r8, r1, ip, lsl #1
   17fe0:	andeq	r8, r1, r0, asr #1
   17fe4:	strdeq	r8, [r1], -ip
   17fe8:	andeq	r8, r1, r8, lsr r1
   17fec:	andeq	r8, r1, r4, ror r1
   17ff0:			; <UNDEFINED> instruction: 0x000181b8
   17ff4:	andeq	r8, r1, r8, lsl #4
   17ff8:	strdeq	r7, [r1], -ip
   17ffc:	ldr	r1, [pc, #664]	; 1829c <dcngettext@plt+0x7274>
   18000:	mov	r2, #5
   18004:	mov	r0, #0
   18008:	bl	10e30 <dcgettext@plt>
   1800c:	ldr	ip, [r5, #32]
   18010:	ldr	r1, [r5, #28]
   18014:	ldr	r2, [r5, #24]
   18018:	ldr	r3, [r5]
   1801c:	ldr	r6, [r5, #20]
   18020:	str	ip, [sp, #28]
   18024:	ldr	lr, [r5, #16]
   18028:	str	r1, [sp, #24]
   1802c:	ldr	ip, [r5, #12]
   18030:	str	r2, [sp, #20]
   18034:	ldr	r1, [r5, #8]
   18038:	ldr	r2, [r5, #4]
   1803c:	str	r6, [sp, #16]
   18040:	stmib	sp, {r1, ip, lr}
   18044:	mov	r1, #1
   18048:	str	r2, [sp]
   1804c:	mov	r2, r0
   18050:	mov	r0, r4
   18054:	bl	10f74 <__fprintf_chk@plt>
   18058:	add	sp, sp, #32
   1805c:	pop	{r4, r5, r6, pc}
   18060:	mov	r2, #5
   18064:	ldr	r1, [pc, #564]	; 182a0 <dcngettext@plt+0x7278>
   18068:	mov	r0, #0
   1806c:	bl	10e30 <dcgettext@plt>
   18070:	ldr	r3, [r5]
   18074:	mov	r1, #1
   18078:	mov	r2, r0
   1807c:	mov	r0, r4
   18080:	add	sp, sp, #32
   18084:	pop	{r4, r5, r6, lr}
   18088:	b	10f74 <__fprintf_chk@plt>
   1808c:	mov	r2, #5
   18090:	ldr	r1, [pc, #524]	; 182a4 <dcngettext@plt+0x727c>
   18094:	mov	r0, #0
   18098:	bl	10e30 <dcgettext@plt>
   1809c:	ldr	r2, [r5, #4]
   180a0:	ldr	r3, [r5]
   180a4:	mov	r1, #1
   180a8:	str	r2, [sp, #48]	; 0x30
   180ac:	mov	r2, r0
   180b0:	mov	r0, r4
   180b4:	add	sp, sp, #32
   180b8:	pop	{r4, r5, r6, lr}
   180bc:	b	10f74 <__fprintf_chk@plt>
   180c0:	mov	r2, #5
   180c4:	ldr	r1, [pc, #476]	; 182a8 <dcngettext@plt+0x7280>
   180c8:	mov	r0, #0
   180cc:	bl	10e30 <dcgettext@plt>
   180d0:	ldr	r1, [r5, #8]
   180d4:	ldr	r2, [r5, #4]
   180d8:	ldr	r3, [r5]
   180dc:	str	r1, [sp, #52]	; 0x34
   180e0:	str	r2, [sp, #48]	; 0x30
   180e4:	mov	r1, #1
   180e8:	mov	r2, r0
   180ec:	mov	r0, r4
   180f0:	add	sp, sp, #32
   180f4:	pop	{r4, r5, r6, lr}
   180f8:	b	10f74 <__fprintf_chk@plt>
   180fc:	mov	r2, #5
   18100:	ldr	r1, [pc, #420]	; 182ac <dcngettext@plt+0x7284>
   18104:	mov	r0, #0
   18108:	bl	10e30 <dcgettext@plt>
   1810c:	ldr	r1, [r5, #8]
   18110:	ldr	ip, [r5, #12]
   18114:	ldr	r2, [r5, #4]
   18118:	ldr	r3, [r5]
   1811c:	stmib	sp, {r1, ip}
   18120:	str	r2, [sp]
   18124:	mov	r1, #1
   18128:	mov	r2, r0
   1812c:	mov	r0, r4
   18130:	bl	10f74 <__fprintf_chk@plt>
   18134:	b	18058 <dcngettext@plt+0x7030>
   18138:	mov	r2, #5
   1813c:	ldr	r1, [pc, #364]	; 182b0 <dcngettext@plt+0x7288>
   18140:	mov	r0, #0
   18144:	bl	10e30 <dcgettext@plt>
   18148:	add	r1, r5, #8
   1814c:	ldr	r2, [r5, #4]
   18150:	ldm	r1, {r1, ip, lr}
   18154:	ldr	r3, [r5]
   18158:	str	r2, [sp]
   1815c:	stmib	sp, {r1, ip, lr}
   18160:	mov	r1, #1
   18164:	mov	r2, r0
   18168:	mov	r0, r4
   1816c:	bl	10f74 <__fprintf_chk@plt>
   18170:	b	18058 <dcngettext@plt+0x7030>
   18174:	mov	r2, #5
   18178:	ldr	r1, [pc, #308]	; 182b4 <dcngettext@plt+0x728c>
   1817c:	mov	r0, #0
   18180:	bl	10e30 <dcgettext@plt>
   18184:	add	r1, r5, #8
   18188:	ldr	r2, [r5, #4]
   1818c:	ldm	r1, {r1, ip, lr}
   18190:	ldr	r6, [r5, #20]
   18194:	ldr	r3, [r5]
   18198:	stmib	sp, {r1, ip, lr}
   1819c:	mov	r1, #1
   181a0:	str	r2, [sp]
   181a4:	str	r6, [sp, #16]
   181a8:	mov	r2, r0
   181ac:	mov	r0, r4
   181b0:	bl	10f74 <__fprintf_chk@plt>
   181b4:	b	18058 <dcngettext@plt+0x7030>
   181b8:	mov	r2, #5
   181bc:	ldr	r1, [pc, #244]	; 182b8 <dcngettext@plt+0x7290>
   181c0:	mov	r0, #0
   181c4:	bl	10e30 <dcgettext@plt>
   181c8:	ldr	r2, [r5, #24]
   181cc:	ldr	r3, [r5]
   181d0:	ldr	r6, [r5, #20]
   181d4:	ldr	lr, [r5, #16]
   181d8:	ldr	ip, [r5, #12]
   181dc:	str	r2, [sp, #20]
   181e0:	ldr	r1, [r5, #8]
   181e4:	ldr	r2, [r5, #4]
   181e8:	str	r6, [sp, #16]
   181ec:	stmib	sp, {r1, ip, lr}
   181f0:	mov	r1, #1
   181f4:	str	r2, [sp]
   181f8:	mov	r2, r0
   181fc:	mov	r0, r4
   18200:	bl	10f74 <__fprintf_chk@plt>
   18204:	b	18058 <dcngettext@plt+0x7030>
   18208:	mov	r2, #5
   1820c:	ldr	r1, [pc, #168]	; 182bc <dcngettext@plt+0x7294>
   18210:	mov	r0, #0
   18214:	bl	10e30 <dcgettext@plt>
   18218:	ldr	r1, [r5, #28]
   1821c:	ldr	r2, [r5, #24]
   18220:	ldr	r3, [r5]
   18224:	ldr	r6, [r5, #20]
   18228:	ldr	lr, [r5, #16]
   1822c:	str	r1, [sp, #24]
   18230:	ldr	ip, [r5, #12]
   18234:	str	r2, [sp, #20]
   18238:	ldr	r1, [r5, #8]
   1823c:	ldr	r2, [r5, #4]
   18240:	str	r6, [sp, #16]
   18244:	stmib	sp, {r1, ip, lr}
   18248:	mov	r1, #1
   1824c:	str	r2, [sp]
   18250:	mov	r2, r0
   18254:	mov	r0, r4
   18258:	bl	10f74 <__fprintf_chk@plt>
   1825c:	b	18058 <dcngettext@plt+0x7030>
   18260:	str	r3, [sp]
   18264:	mov	r1, #1
   18268:	mov	r3, r2
   1826c:	ldr	r2, [pc, #76]	; 182c0 <dcngettext@plt+0x7298>
   18270:	bl	10f74 <__fprintf_chk@plt>
   18274:	b	17f60 <dcngettext@plt+0x6f38>
   18278:	mov	r2, #5
   1827c:	ldr	r1, [pc, #64]	; 182c4 <dcngettext@plt+0x729c>
   18280:	b	18004 <dcngettext@plt+0x6fdc>
   18284:	andeq	sl, r1, r0, ror #19
   18288:	strdeq	sl, [r1], -r4
   1828c:	andeq	r0, r0, r6, ror #15
   18290:	andeq	sl, r1, ip, asr #25
   18294:	strdeq	sl, [r1], -r8
   18298:	andeq	sl, r1, r4, lsr #21
   1829c:	ldrdeq	sl, [r1], -r4
   182a0:	andeq	sl, r1, r8, asr #21
   182a4:	ldrdeq	sl, [r1], -r8
   182a8:	strdeq	sl, [r1], -r0
   182ac:	andeq	sl, r1, ip, lsl #22
   182b0:	andeq	sl, r1, ip, lsr #22
   182b4:	andeq	sl, r1, r0, asr fp
   182b8:	andeq	sl, r1, r8, ror fp
   182bc:	andeq	sl, r1, r4, lsr #23
   182c0:	andeq	sl, r1, ip, ror #19
   182c4:	andeq	sl, r1, r8, lsl #24
   182c8:	push	{r4, r5, lr}
   182cc:	sub	sp, sp, #12
   182d0:	ldr	r5, [sp, #24]
   182d4:	ldr	ip, [r5]
   182d8:	cmp	ip, #0
   182dc:	beq	182f8 <dcngettext@plt+0x72d0>
   182e0:	mov	lr, r5
   182e4:	mov	ip, #0
   182e8:	ldr	r4, [lr, #4]!
   182ec:	add	ip, ip, #1
   182f0:	cmp	r4, #0
   182f4:	bne	182e8 <dcngettext@plt+0x72c0>
   182f8:	stm	sp, {r5, ip}
   182fc:	bl	17f30 <dcngettext@plt+0x6f08>
   18300:	add	sp, sp, #12
   18304:	pop	{r4, r5, pc}
   18308:	push	{r4, r5, lr}
   1830c:	sub	sp, sp, #76	; 0x4c
   18310:	mov	r5, r0
   18314:	ldr	ip, [sp, #88]	; 0x58
   18318:	ldr	r0, [ip]
   1831c:	cmp	r0, #0
   18320:	str	r0, [sp, #32]
   18324:	beq	186f8 <dcngettext@plt+0x76d0>
   18328:	ldr	r0, [ip, #4]
   1832c:	cmp	r0, #0
   18330:	str	r0, [sp, #36]	; 0x24
   18334:	beq	18700 <dcngettext@plt+0x76d8>
   18338:	ldr	r0, [ip, #8]
   1833c:	cmp	r0, #0
   18340:	str	r0, [sp, #40]	; 0x28
   18344:	beq	18708 <dcngettext@plt+0x76e0>
   18348:	ldr	r0, [ip, #12]
   1834c:	cmp	r0, #0
   18350:	str	r0, [sp, #44]	; 0x2c
   18354:	beq	18710 <dcngettext@plt+0x76e8>
   18358:	ldr	r0, [ip, #16]
   1835c:	cmp	r0, #0
   18360:	str	r0, [sp, #48]	; 0x30
   18364:	beq	18718 <dcngettext@plt+0x76f0>
   18368:	ldr	r0, [ip, #20]
   1836c:	cmp	r0, #0
   18370:	str	r0, [sp, #52]	; 0x34
   18374:	beq	18720 <dcngettext@plt+0x76f8>
   18378:	ldr	r0, [ip, #24]
   1837c:	cmp	r0, #0
   18380:	str	r0, [sp, #56]	; 0x38
   18384:	beq	18728 <dcngettext@plt+0x7700>
   18388:	ldr	r0, [ip, #28]
   1838c:	cmp	r0, #0
   18390:	str	r0, [sp, #60]	; 0x3c
   18394:	beq	18730 <dcngettext@plt+0x7708>
   18398:	ldr	r0, [ip, #32]
   1839c:	cmp	r0, #0
   183a0:	str	r0, [sp, #64]	; 0x40
   183a4:	beq	18738 <dcngettext@plt+0x7710>
   183a8:	ldr	r0, [ip, #36]	; 0x24
   183ac:	cmp	r0, #0
   183b0:	movne	r4, #10
   183b4:	moveq	r4, #9
   183b8:	cmp	r1, #0
   183bc:	beq	186d0 <dcngettext@plt+0x76a8>
   183c0:	stm	sp, {r2, r3}
   183c4:	mov	r0, r5
   183c8:	mov	r3, r1
   183cc:	ldr	r2, [pc, #876]	; 18740 <dcngettext@plt+0x7718>
   183d0:	mov	r1, #1
   183d4:	bl	10f74 <__fprintf_chk@plt>
   183d8:	mov	r2, #5
   183dc:	ldr	r1, [pc, #864]	; 18744 <dcngettext@plt+0x771c>
   183e0:	mov	r0, #0
   183e4:	bl	10e30 <dcgettext@plt>
   183e8:	ldr	r3, [pc, #856]	; 18748 <dcngettext@plt+0x7720>
   183ec:	ldr	r2, [pc, #856]	; 1874c <dcngettext@plt+0x7724>
   183f0:	str	r3, [sp]
   183f4:	mov	r1, #1
   183f8:	mov	r3, r0
   183fc:	mov	r0, r5
   18400:	bl	10f74 <__fprintf_chk@plt>
   18404:	mov	r1, r5
   18408:	mov	r0, #10
   1840c:	bl	10e24 <fputc_unlocked@plt>
   18410:	mov	r2, #5
   18414:	ldr	r1, [pc, #820]	; 18750 <dcngettext@plt+0x7728>
   18418:	mov	r0, #0
   1841c:	bl	10e30 <dcgettext@plt>
   18420:	mov	r1, #1
   18424:	ldr	r3, [pc, #808]	; 18754 <dcngettext@plt+0x772c>
   18428:	mov	r2, r0
   1842c:	mov	r0, r5
   18430:	bl	10f74 <__fprintf_chk@plt>
   18434:	mov	r1, r5
   18438:	mov	r0, #10
   1843c:	bl	10e24 <fputc_unlocked@plt>
   18440:	cmp	r4, #9
   18444:	ldrls	pc, [pc, r4, lsl #2]
   18448:	b	186ec <dcngettext@plt+0x76c4>
   1844c:	ldrdeq	r8, [r1], -r0
   18450:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18454:	andeq	r8, r1, r4, lsl #10
   18458:	andeq	r8, r1, r8, lsr r5
   1845c:	andeq	r8, r1, r0, ror r5
   18460:	andeq	r8, r1, ip, lsr #11
   18464:	andeq	r8, r1, r8, ror #11
   18468:	andeq	r8, r1, ip, lsr #12
   1846c:	andeq	r8, r1, r8, ror r6
   18470:	andeq	r8, r1, r4, ror r4
   18474:	ldr	r1, [pc, #732]	; 18758 <dcngettext@plt+0x7730>
   18478:	mov	r2, #5
   1847c:	mov	r0, #0
   18480:	bl	10e30 <dcgettext@plt>
   18484:	ldr	ip, [sp, #64]	; 0x40
   18488:	ldr	r1, [sp, #60]	; 0x3c
   1848c:	ldr	r2, [sp, #56]	; 0x38
   18490:	ldr	lr, [sp, #48]	; 0x30
   18494:	str	ip, [sp, #28]
   18498:	str	r1, [sp, #24]
   1849c:	ldr	ip, [sp, #44]	; 0x2c
   184a0:	ldr	r1, [sp, #40]	; 0x28
   184a4:	ldr	r4, [sp, #52]	; 0x34
   184a8:	str	r2, [sp, #20]
   184ac:	ldr	r2, [sp, #36]	; 0x24
   184b0:	stmib	sp, {r1, ip, lr}
   184b4:	mov	r1, #1
   184b8:	str	r2, [sp]
   184bc:	ldr	r3, [sp, #32]
   184c0:	str	r4, [sp, #16]
   184c4:	mov	r2, r0
   184c8:	mov	r0, r5
   184cc:	bl	10f74 <__fprintf_chk@plt>
   184d0:	add	sp, sp, #76	; 0x4c
   184d4:	pop	{r4, r5, pc}
   184d8:	mov	r2, #5
   184dc:	ldr	r1, [pc, #632]	; 1875c <dcngettext@plt+0x7734>
   184e0:	mov	r0, #0
   184e4:	bl	10e30 <dcgettext@plt>
   184e8:	ldr	r3, [sp, #32]
   184ec:	mov	r1, #1
   184f0:	mov	r2, r0
   184f4:	mov	r0, r5
   184f8:	add	sp, sp, #76	; 0x4c
   184fc:	pop	{r4, r5, lr}
   18500:	b	10f74 <__fprintf_chk@plt>
   18504:	mov	r2, #5
   18508:	ldr	r1, [pc, #592]	; 18760 <dcngettext@plt+0x7738>
   1850c:	mov	r0, #0
   18510:	bl	10e30 <dcgettext@plt>
   18514:	ldr	r2, [sp, #36]	; 0x24
   18518:	ldr	r3, [sp, #32]
   1851c:	str	r2, [sp, #88]	; 0x58
   18520:	mov	r1, #1
   18524:	mov	r2, r0
   18528:	mov	r0, r5
   1852c:	add	sp, sp, #76	; 0x4c
   18530:	pop	{r4, r5, lr}
   18534:	b	10f74 <__fprintf_chk@plt>
   18538:	mov	r2, #5
   1853c:	ldr	r1, [pc, #544]	; 18764 <dcngettext@plt+0x773c>
   18540:	mov	r0, #0
   18544:	bl	10e30 <dcgettext@plt>
   18548:	ldr	r1, [sp, #40]	; 0x28
   1854c:	ldr	r2, [sp, #36]	; 0x24
   18550:	str	r1, [sp, #4]
   18554:	str	r2, [sp]
   18558:	ldr	r3, [sp, #32]
   1855c:	mov	r1, #1
   18560:	mov	r2, r0
   18564:	mov	r0, r5
   18568:	bl	10f74 <__fprintf_chk@plt>
   1856c:	b	184d0 <dcngettext@plt+0x74a8>
   18570:	mov	r2, #5
   18574:	ldr	r1, [pc, #492]	; 18768 <dcngettext@plt+0x7740>
   18578:	mov	r0, #0
   1857c:	bl	10e30 <dcgettext@plt>
   18580:	ldr	r1, [sp, #40]	; 0x28
   18584:	ldr	ip, [sp, #44]	; 0x2c
   18588:	ldr	r2, [sp, #36]	; 0x24
   1858c:	ldr	r3, [sp, #32]
   18590:	stmib	sp, {r1, ip}
   18594:	str	r2, [sp]
   18598:	mov	r1, #1
   1859c:	mov	r2, r0
   185a0:	mov	r0, r5
   185a4:	bl	10f74 <__fprintf_chk@plt>
   185a8:	b	184d0 <dcngettext@plt+0x74a8>
   185ac:	mov	r2, #5
   185b0:	ldr	r1, [pc, #436]	; 1876c <dcngettext@plt+0x7744>
   185b4:	mov	r0, #0
   185b8:	bl	10e30 <dcgettext@plt>
   185bc:	add	r1, sp, #40	; 0x28
   185c0:	ldr	r2, [sp, #36]	; 0x24
   185c4:	ldm	r1, {r1, ip, lr}
   185c8:	ldr	r3, [sp, #32]
   185cc:	str	r2, [sp]
   185d0:	stmib	sp, {r1, ip, lr}
   185d4:	mov	r1, #1
   185d8:	mov	r2, r0
   185dc:	mov	r0, r5
   185e0:	bl	10f74 <__fprintf_chk@plt>
   185e4:	b	184d0 <dcngettext@plt+0x74a8>
   185e8:	mov	r2, #5
   185ec:	ldr	r1, [pc, #380]	; 18770 <dcngettext@plt+0x7748>
   185f0:	mov	r0, #0
   185f4:	bl	10e30 <dcgettext@plt>
   185f8:	add	r1, sp, #40	; 0x28
   185fc:	ldr	r2, [sp, #36]	; 0x24
   18600:	ldm	r1, {r1, ip, lr}
   18604:	ldr	r4, [sp, #52]	; 0x34
   18608:	str	r2, [sp]
   1860c:	stmib	sp, {r1, ip, lr}
   18610:	mov	r1, #1
   18614:	ldr	r3, [sp, #32]
   18618:	str	r4, [sp, #16]
   1861c:	mov	r2, r0
   18620:	mov	r0, r5
   18624:	bl	10f74 <__fprintf_chk@plt>
   18628:	b	184d0 <dcngettext@plt+0x74a8>
   1862c:	mov	r2, #5
   18630:	ldr	r1, [pc, #316]	; 18774 <dcngettext@plt+0x774c>
   18634:	mov	r0, #0
   18638:	bl	10e30 <dcgettext@plt>
   1863c:	add	r1, sp, #40	; 0x28
   18640:	ldr	r2, [sp, #56]	; 0x38
   18644:	ldm	r1, {r1, ip, lr}
   18648:	ldr	r4, [sp, #52]	; 0x34
   1864c:	str	r2, [sp, #20]
   18650:	ldr	r2, [sp, #36]	; 0x24
   18654:	stmib	sp, {r1, ip, lr}
   18658:	mov	r1, #1
   1865c:	str	r2, [sp]
   18660:	ldr	r3, [sp, #32]
   18664:	str	r4, [sp, #16]
   18668:	mov	r2, r0
   1866c:	mov	r0, r5
   18670:	bl	10f74 <__fprintf_chk@plt>
   18674:	b	184d0 <dcngettext@plt+0x74a8>
   18678:	mov	r2, #5
   1867c:	ldr	r1, [pc, #244]	; 18778 <dcngettext@plt+0x7750>
   18680:	mov	r0, #0
   18684:	bl	10e30 <dcgettext@plt>
   18688:	ldr	r1, [sp, #60]	; 0x3c
   1868c:	ldr	r2, [sp, #56]	; 0x38
   18690:	ldr	lr, [sp, #48]	; 0x30
   18694:	ldr	ip, [sp, #44]	; 0x2c
   18698:	str	r1, [sp, #24]
   1869c:	ldr	r1, [sp, #40]	; 0x28
   186a0:	ldr	r4, [sp, #52]	; 0x34
   186a4:	str	r2, [sp, #20]
   186a8:	ldr	r2, [sp, #36]	; 0x24
   186ac:	stmib	sp, {r1, ip, lr}
   186b0:	mov	r1, #1
   186b4:	str	r2, [sp]
   186b8:	ldr	r3, [sp, #32]
   186bc:	str	r4, [sp, #16]
   186c0:	mov	r2, r0
   186c4:	mov	r0, r5
   186c8:	bl	10f74 <__fprintf_chk@plt>
   186cc:	b	184d0 <dcngettext@plt+0x74a8>
   186d0:	str	r3, [sp]
   186d4:	mov	r1, #1
   186d8:	mov	r3, r2
   186dc:	mov	r0, r5
   186e0:	ldr	r2, [pc, #148]	; 1877c <dcngettext@plt+0x7754>
   186e4:	bl	10f74 <__fprintf_chk@plt>
   186e8:	b	183d8 <dcngettext@plt+0x73b0>
   186ec:	mov	r2, #5
   186f0:	ldr	r1, [pc, #136]	; 18780 <dcngettext@plt+0x7758>
   186f4:	b	1847c <dcngettext@plt+0x7454>
   186f8:	mov	r4, r0
   186fc:	b	183b8 <dcngettext@plt+0x7390>
   18700:	mov	r4, #1
   18704:	b	183b8 <dcngettext@plt+0x7390>
   18708:	mov	r4, #2
   1870c:	b	183b8 <dcngettext@plt+0x7390>
   18710:	mov	r4, #3
   18714:	b	183b8 <dcngettext@plt+0x7390>
   18718:	mov	r4, #4
   1871c:	b	183b8 <dcngettext@plt+0x7390>
   18720:	mov	r4, #5
   18724:	b	183b8 <dcngettext@plt+0x7390>
   18728:	mov	r4, #6
   1872c:	b	183b8 <dcngettext@plt+0x7390>
   18730:	mov	r4, #7
   18734:	b	183b8 <dcngettext@plt+0x7390>
   18738:	mov	r4, #8
   1873c:	b	183b8 <dcngettext@plt+0x7390>
   18740:	andeq	sl, r1, r0, ror #19
   18744:	strdeq	sl, [r1], -r4
   18748:	andeq	r0, r0, r6, ror #15
   1874c:	andeq	sl, r1, ip, asr #25
   18750:	strdeq	sl, [r1], -r8
   18754:	andeq	sl, r1, r4, lsr #21
   18758:	ldrdeq	sl, [r1], -r4
   1875c:	andeq	sl, r1, r8, asr #21
   18760:	ldrdeq	sl, [r1], -r8
   18764:	strdeq	sl, [r1], -r0
   18768:	andeq	sl, r1, ip, lsl #22
   1876c:	andeq	sl, r1, ip, lsr #22
   18770:	andeq	sl, r1, r0, asr fp
   18774:	andeq	sl, r1, r8, ror fp
   18778:	andeq	sl, r1, r4, lsr #23
   1877c:	andeq	sl, r1, ip, ror #19
   18780:	andeq	sl, r1, r8, lsl #24
   18784:	push	{r3}		; (str r3, [sp, #-4]!)
   18788:	push	{lr}		; (str lr, [sp, #-4]!)
   1878c:	sub	sp, sp, #56	; 0x38
   18790:	add	r3, sp, #64	; 0x40
   18794:	ldr	ip, [sp, #64]	; 0x40
   18798:	str	r3, [sp, #12]
   1879c:	cmp	ip, #0
   187a0:	str	ip, [sp, #16]
   187a4:	beq	1883c <dcngettext@plt+0x7814>
   187a8:	ldr	ip, [sp, #68]	; 0x44
   187ac:	cmp	ip, #0
   187b0:	str	ip, [sp, #20]
   187b4:	beq	1885c <dcngettext@plt+0x7834>
   187b8:	ldr	ip, [sp, #72]	; 0x48
   187bc:	cmp	ip, #0
   187c0:	str	ip, [sp, #24]
   187c4:	beq	18864 <dcngettext@plt+0x783c>
   187c8:	ldr	ip, [sp, #76]	; 0x4c
   187cc:	cmp	ip, #0
   187d0:	str	ip, [sp, #28]
   187d4:	beq	1886c <dcngettext@plt+0x7844>
   187d8:	ldr	ip, [sp, #80]	; 0x50
   187dc:	cmp	ip, #0
   187e0:	str	ip, [sp, #32]
   187e4:	beq	18874 <dcngettext@plt+0x784c>
   187e8:	ldr	ip, [sp, #84]	; 0x54
   187ec:	cmp	ip, #0
   187f0:	str	ip, [sp, #36]	; 0x24
   187f4:	beq	1887c <dcngettext@plt+0x7854>
   187f8:	ldr	ip, [sp, #88]	; 0x58
   187fc:	cmp	ip, #0
   18800:	str	ip, [sp, #40]	; 0x28
   18804:	beq	18884 <dcngettext@plt+0x785c>
   18808:	ldr	ip, [sp, #92]	; 0x5c
   1880c:	cmp	ip, #0
   18810:	str	ip, [sp, #44]	; 0x2c
   18814:	beq	1888c <dcngettext@plt+0x7864>
   18818:	ldr	ip, [sp, #96]	; 0x60
   1881c:	cmp	ip, #0
   18820:	str	ip, [sp, #48]	; 0x30
   18824:	beq	18894 <dcngettext@plt+0x786c>
   18828:	ldr	ip, [sp, #100]	; 0x64
   1882c:	cmp	ip, #0
   18830:	str	ip, [sp, #52]	; 0x34
   18834:	movne	ip, #10
   18838:	moveq	ip, #9
   1883c:	add	r3, sp, #16
   18840:	stm	sp, {r3, ip}
   18844:	ldr	r3, [sp, #60]	; 0x3c
   18848:	bl	17f30 <dcngettext@plt+0x6f08>
   1884c:	add	sp, sp, #56	; 0x38
   18850:	pop	{lr}		; (ldr lr, [sp], #4)
   18854:	add	sp, sp, #4
   18858:	bx	lr
   1885c:	mov	ip, #1
   18860:	b	1883c <dcngettext@plt+0x7814>
   18864:	mov	ip, #2
   18868:	b	1883c <dcngettext@plt+0x7814>
   1886c:	mov	ip, #3
   18870:	b	1883c <dcngettext@plt+0x7814>
   18874:	mov	ip, #4
   18878:	b	1883c <dcngettext@plt+0x7814>
   1887c:	mov	ip, #5
   18880:	b	1883c <dcngettext@plt+0x7814>
   18884:	mov	ip, #6
   18888:	b	1883c <dcngettext@plt+0x7814>
   1888c:	mov	ip, #7
   18890:	b	1883c <dcngettext@plt+0x7814>
   18894:	mov	ip, #8
   18898:	b	1883c <dcngettext@plt+0x7814>
   1889c:	ldr	r3, [pc, #116]	; 18918 <dcngettext@plt+0x78f0>
   188a0:	push	{r4, lr}
   188a4:	mov	r0, #10
   188a8:	ldr	r1, [r3]
   188ac:	bl	10e24 <fputc_unlocked@plt>
   188b0:	mov	r2, #5
   188b4:	ldr	r1, [pc, #96]	; 1891c <dcngettext@plt+0x78f4>
   188b8:	mov	r0, #0
   188bc:	bl	10e30 <dcgettext@plt>
   188c0:	ldr	r2, [pc, #88]	; 18920 <dcngettext@plt+0x78f8>
   188c4:	mov	r1, r0
   188c8:	mov	r0, #1
   188cc:	bl	10f5c <__printf_chk@plt>
   188d0:	mov	r2, #5
   188d4:	ldr	r1, [pc, #72]	; 18924 <dcngettext@plt+0x78fc>
   188d8:	mov	r0, #0
   188dc:	bl	10e30 <dcgettext@plt>
   188e0:	ldr	r3, [pc, #64]	; 18928 <dcngettext@plt+0x7900>
   188e4:	ldr	r2, [pc, #64]	; 1892c <dcngettext@plt+0x7904>
   188e8:	mov	r1, r0
   188ec:	mov	r0, #1
   188f0:	bl	10f5c <__printf_chk@plt>
   188f4:	mov	r2, #5
   188f8:	ldr	r1, [pc, #48]	; 18930 <dcngettext@plt+0x7908>
   188fc:	mov	r0, #0
   18900:	bl	10e30 <dcgettext@plt>
   18904:	ldr	r2, [pc, #40]	; 18934 <dcngettext@plt+0x790c>
   18908:	pop	{r4, lr}
   1890c:	mov	r1, r0
   18910:	mov	r0, #1
   18914:	b	10f5c <__printf_chk@plt>
   18918:	andeq	fp, r2, ip, ror #2
   1891c:	andeq	sl, r1, r4, asr #24
   18920:	andeq	sl, r1, r8, asr ip
   18924:	andeq	sl, r1, r0, ror ip
   18928:	andeq	sl, r1, r0, lsr r2
   1892c:	andeq	sl, r1, r8, asr r2
   18930:	andeq	sl, r1, r4, lsl #25
   18934:	andeq	sl, r1, ip, lsr #25
   18938:	push	{r4, r5, r6, lr}
   1893c:	mov	r6, r0
   18940:	mov	r5, r1
   18944:	mov	r4, r2
   18948:	bl	1939c <dcngettext@plt+0x8374>
   1894c:	cmp	r0, #0
   18950:	popne	{r4, r5, r6, pc}
   18954:	cmp	r6, #0
   18958:	beq	18968 <dcngettext@plt+0x7940>
   1895c:	cmp	r5, #0
   18960:	cmpne	r4, #0
   18964:	popeq	{r4, r5, r6, pc}
   18968:	bl	18fb4 <dcngettext@plt+0x7f8c>
   1896c:	push	{r4, lr}
   18970:	bl	1903c <dcngettext@plt+0x8014>
   18974:	cmp	r0, #0
   18978:	popne	{r4, pc}
   1897c:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18980:	push	{r4, lr}
   18984:	bl	1903c <dcngettext@plt+0x8014>
   18988:	cmp	r0, #0
   1898c:	popne	{r4, pc}
   18990:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18994:	push	{r4, lr}
   18998:	bl	1903c <dcngettext@plt+0x8014>
   1899c:	cmp	r0, #0
   189a0:	popne	{r4, pc}
   189a4:	bl	18fb4 <dcngettext@plt+0x7f8c>
   189a8:	push	{r4, r5, r6, lr}
   189ac:	mov	r5, r0
   189b0:	mov	r4, r1
   189b4:	bl	19068 <dcngettext@plt+0x8040>
   189b8:	cmp	r0, #0
   189bc:	popne	{r4, r5, r6, pc}
   189c0:	adds	r4, r4, #0
   189c4:	movne	r4, #1
   189c8:	cmp	r5, #0
   189cc:	orreq	r4, r4, #1
   189d0:	cmp	r4, #0
   189d4:	popeq	{r4, r5, r6, pc}
   189d8:	bl	18fb4 <dcngettext@plt+0x7f8c>
   189dc:	push	{r4, lr}
   189e0:	cmp	r1, #0
   189e4:	orreq	r1, r1, #1
   189e8:	bl	19068 <dcngettext@plt+0x8040>
   189ec:	cmp	r0, #0
   189f0:	popne	{r4, pc}
   189f4:	bl	18fb4 <dcngettext@plt+0x7f8c>
   189f8:	push	{r4, r5, r6, lr}
   189fc:	mov	r6, r0
   18a00:	mov	r5, r1
   18a04:	mov	r4, r2
   18a08:	bl	1939c <dcngettext@plt+0x8374>
   18a0c:	cmp	r0, #0
   18a10:	popne	{r4, r5, r6, pc}
   18a14:	cmp	r6, #0
   18a18:	beq	18a28 <dcngettext@plt+0x7a00>
   18a1c:	cmp	r5, #0
   18a20:	cmpne	r4, #0
   18a24:	popeq	{r4, r5, r6, pc}
   18a28:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18a2c:	cmp	r2, #0
   18a30:	cmpne	r1, #0
   18a34:	moveq	r2, #1
   18a38:	moveq	r1, r2
   18a3c:	push	{r4, lr}
   18a40:	bl	1939c <dcngettext@plt+0x8374>
   18a44:	cmp	r0, #0
   18a48:	popne	{r4, pc}
   18a4c:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18a50:	push	{r4, lr}
   18a54:	mov	r2, r1
   18a58:	mov	r1, r0
   18a5c:	mov	r0, #0
   18a60:	bl	1939c <dcngettext@plt+0x8374>
   18a64:	cmp	r0, #0
   18a68:	popne	{r4, pc}
   18a6c:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18a70:	cmp	r1, #0
   18a74:	cmpne	r0, #0
   18a78:	moveq	r2, #1
   18a7c:	movne	r2, r1
   18a80:	moveq	r1, r2
   18a84:	movne	r1, r0
   18a88:	push	{r4, lr}
   18a8c:	mov	r0, #0
   18a90:	bl	1939c <dcngettext@plt+0x8374>
   18a94:	cmp	r0, #0
   18a98:	popne	{r4, pc}
   18a9c:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18aa0:	cmp	r0, #0
   18aa4:	push	{r4, r5, r6, lr}
   18aa8:	mov	r5, r1
   18aac:	ldr	r4, [r1]
   18ab0:	beq	18aec <dcngettext@plt+0x7ac4>
   18ab4:	lsr	r2, r4, #1
   18ab8:	add	r3, r2, #1
   18abc:	mvn	r3, r3
   18ac0:	cmp	r4, r3
   18ac4:	bhi	18b08 <dcngettext@plt+0x7ae0>
   18ac8:	add	r4, r4, #1
   18acc:	add	r4, r4, r2
   18ad0:	mov	r1, r4
   18ad4:	mov	r2, #1
   18ad8:	bl	1939c <dcngettext@plt+0x8374>
   18adc:	cmp	r0, #0
   18ae0:	beq	18b0c <dcngettext@plt+0x7ae4>
   18ae4:	str	r4, [r5]
   18ae8:	pop	{r4, r5, r6, pc}
   18aec:	cmp	r4, #0
   18af0:	moveq	r4, #64	; 0x40
   18af4:	mov	r1, r4
   18af8:	mov	r2, #1
   18afc:	bl	1939c <dcngettext@plt+0x8374>
   18b00:	cmp	r0, #0
   18b04:	bne	18ae4 <dcngettext@plt+0x7abc>
   18b08:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18b0c:	cmp	r4, #0
   18b10:	bne	18b08 <dcngettext@plt+0x7ae0>
   18b14:	str	r4, [r5]
   18b18:	pop	{r4, r5, r6, pc}
   18b1c:	cmp	r0, #0
   18b20:	push	{r4, r5, r6, lr}
   18b24:	mov	r5, r1
   18b28:	ldr	r4, [r1]
   18b2c:	mov	r6, r2
   18b30:	beq	18b74 <dcngettext@plt+0x7b4c>
   18b34:	lsr	r1, r4, #1
   18b38:	add	r3, r1, #1
   18b3c:	mvn	r3, r3
   18b40:	cmp	r4, r3
   18b44:	bhi	18bac <dcngettext@plt+0x7b84>
   18b48:	add	r4, r4, #1
   18b4c:	add	r4, r4, r1
   18b50:	mov	r1, r4
   18b54:	bl	1939c <dcngettext@plt+0x8374>
   18b58:	cmp	r0, #0
   18b5c:	bne	18b6c <dcngettext@plt+0x7b44>
   18b60:	cmp	r4, #0
   18b64:	cmpne	r6, #0
   18b68:	bne	18bac <dcngettext@plt+0x7b84>
   18b6c:	str	r4, [r5]
   18b70:	pop	{r4, r5, r6, pc}
   18b74:	cmp	r4, #0
   18b78:	bne	18b94 <dcngettext@plt+0x7b6c>
   18b7c:	mov	r1, r2
   18b80:	mov	r0, #64	; 0x40
   18b84:	bl	194dc <dcngettext@plt+0x84b4>
   18b88:	cmp	r0, #0
   18b8c:	movne	r4, r0
   18b90:	addeq	r4, r0, #1
   18b94:	mov	r2, r6
   18b98:	mov	r1, r4
   18b9c:	mov	r0, #0
   18ba0:	bl	1939c <dcngettext@plt+0x8374>
   18ba4:	cmp	r0, #0
   18ba8:	bne	18b6c <dcngettext@plt+0x7b44>
   18bac:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18bb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18bb4:	sub	sp, sp, #12
   18bb8:	ldr	r6, [r1]
   18bbc:	mov	r8, r1
   18bc0:	mov	r9, r0
   18bc4:	asrs	r4, r6, #1
   18bc8:	mov	sl, r2
   18bcc:	mov	fp, r3
   18bd0:	ldr	r7, [sp, #48]	; 0x30
   18bd4:	bmi	18d50 <dcngettext@plt+0x7d28>
   18bd8:	mvn	r1, #-2147483648	; 0x80000000
   18bdc:	sub	r1, r1, r4
   18be0:	cmp	r6, r1
   18be4:	movle	r1, #0
   18be8:	movgt	r1, #1
   18bec:	mvn	r3, fp
   18bf0:	cmp	r1, #0
   18bf4:	addeq	r4, r4, r6
   18bf8:	mvnne	r4, #-2147483648	; 0x80000000
   18bfc:	lsr	r3, r3, #31
   18c00:	cmp	fp, r4
   18c04:	movge	r2, #0
   18c08:	andlt	r2, r3, #1
   18c0c:	cmp	r2, #0
   18c10:	beq	18d00 <dcngettext@plt+0x7cd8>
   18c14:	cmp	r7, #0
   18c18:	blt	18de8 <dcngettext@plt+0x7dc0>
   18c1c:	bne	18de0 <dcngettext@plt+0x7db8>
   18c20:	mov	r5, #64	; 0x40
   18c24:	mov	r1, r7
   18c28:	mov	r0, r5
   18c2c:	str	r3, [sp, #4]
   18c30:	bl	196e8 <dcngettext@plt+0x86c0>
   18c34:	mov	r1, r7
   18c38:	mov	r4, r0
   18c3c:	mov	r0, r5
   18c40:	bl	19908 <dcngettext@plt+0x88e0>
   18c44:	ldr	r3, [sp, #4]
   18c48:	sub	r5, r5, r1
   18c4c:	cmp	r9, #0
   18c50:	sub	r2, r4, r6
   18c54:	streq	r9, [r8]
   18c58:	cmp	r2, sl
   18c5c:	bge	18ce0 <dcngettext@plt+0x7cb8>
   18c60:	cmp	sl, #0
   18c64:	blt	18d80 <dcngettext@plt+0x7d58>
   18c68:	cmp	r6, #0
   18c6c:	blt	18c8c <dcngettext@plt+0x7c64>
   18c70:	mvn	r2, #-2147483648	; 0x80000000
   18c74:	sub	r2, r2, sl
   18c78:	cmp	r6, r2
   18c7c:	movle	r2, #0
   18c80:	movgt	r2, #1
   18c84:	cmp	r2, #0
   18c88:	bne	18d7c <dcngettext@plt+0x7d54>
   18c8c:	add	r6, r6, sl
   18c90:	cmp	fp, r6
   18c94:	movge	r3, #0
   18c98:	andlt	r3, r3, #1
   18c9c:	cmp	r3, #0
   18ca0:	mov	r4, r6
   18ca4:	bne	18d7c <dcngettext@plt+0x7d54>
   18ca8:	cmp	r7, #0
   18cac:	blt	18d94 <dcngettext@plt+0x7d6c>
   18cb0:	beq	18cdc <dcngettext@plt+0x7cb4>
   18cb4:	cmp	r6, #0
   18cb8:	blt	18e38 <dcngettext@plt+0x7e10>
   18cbc:	mov	r1, r7
   18cc0:	mvn	r0, #-2147483648	; 0x80000000
   18cc4:	bl	196e8 <dcngettext@plt+0x86c0>
   18cc8:	cmp	r6, r0
   18ccc:	movle	r0, #0
   18cd0:	movgt	r0, #1
   18cd4:	cmp	r0, #0
   18cd8:	bne	18d7c <dcngettext@plt+0x7d54>
   18cdc:	mul	r5, r6, r7
   18ce0:	mov	r1, r5
   18ce4:	mov	r0, r9
   18ce8:	bl	19068 <dcngettext@plt+0x8040>
   18cec:	cmp	r0, #0
   18cf0:	beq	18d64 <dcngettext@plt+0x7d3c>
   18cf4:	str	r4, [r8]
   18cf8:	add	sp, sp, #12
   18cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d00:	cmp	r7, #0
   18d04:	blt	18dc0 <dcngettext@plt+0x7d98>
   18d08:	beq	18c20 <dcngettext@plt+0x7bf8>
   18d0c:	cmp	r4, #0
   18d10:	blt	18df0 <dcngettext@plt+0x7dc8>
   18d14:	mov	r1, r7
   18d18:	mvn	r0, #-2147483648	; 0x80000000
   18d1c:	str	r3, [sp, #4]
   18d20:	bl	196e8 <dcngettext@plt+0x86c0>
   18d24:	ldr	r3, [sp, #4]
   18d28:	cmp	r0, r4
   18d2c:	movge	r0, #0
   18d30:	movlt	r0, #1
   18d34:	cmp	r0, #0
   18d38:	mvnne	r5, #-2147483648	; 0x80000000
   18d3c:	bne	18c24 <dcngettext@plt+0x7bfc>
   18d40:	mul	r5, r7, r4
   18d44:	cmp	r5, #63	; 0x3f
   18d48:	bgt	18c4c <dcngettext@plt+0x7c24>
   18d4c:	b	18c20 <dcngettext@plt+0x7bf8>
   18d50:	rsb	r1, r4, #-2147483648	; 0x80000000
   18d54:	cmp	r6, r1
   18d58:	movge	r1, #0
   18d5c:	movlt	r1, #1
   18d60:	b	18bec <dcngettext@plt+0x7bc4>
   18d64:	adds	r5, r5, #0
   18d68:	movne	r5, #1
   18d6c:	cmp	r9, #0
   18d70:	orreq	r5, r5, #1
   18d74:	cmp	r5, #0
   18d78:	beq	18cf4 <dcngettext@plt+0x7ccc>
   18d7c:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18d80:	rsb	r2, sl, #-2147483648	; 0x80000000
   18d84:	cmp	r6, r2
   18d88:	movge	r2, #0
   18d8c:	movlt	r2, #1
   18d90:	b	18c84 <dcngettext@plt+0x7c5c>
   18d94:	cmp	r6, #0
   18d98:	blt	18e1c <dcngettext@plt+0x7df4>
   18d9c:	cmn	r7, #1
   18da0:	beq	18cdc <dcngettext@plt+0x7cb4>
   18da4:	mov	r1, r7
   18da8:	mov	r0, #-2147483648	; 0x80000000
   18dac:	bl	196e8 <dcngettext@plt+0x86c0>
   18db0:	cmp	r6, r0
   18db4:	movle	r0, #0
   18db8:	movgt	r0, #1
   18dbc:	b	18cd4 <dcngettext@plt+0x7cac>
   18dc0:	cmp	r4, #0
   18dc4:	blt	18e5c <dcngettext@plt+0x7e34>
   18dc8:	cmn	r7, #1
   18dcc:	beq	18d40 <dcngettext@plt+0x7d18>
   18dd0:	str	r3, [sp, #4]
   18dd4:	mov	r1, r7
   18dd8:	mov	r0, #-2147483648	; 0x80000000
   18ddc:	b	18d20 <dcngettext@plt+0x7cf8>
   18de0:	mov	r4, fp
   18de4:	b	18d14 <dcngettext@plt+0x7cec>
   18de8:	mov	r4, fp
   18dec:	b	18dc8 <dcngettext@plt+0x7da0>
   18df0:	cmn	r4, #1
   18df4:	beq	18d40 <dcngettext@plt+0x7d18>
   18df8:	mov	r1, r4
   18dfc:	mov	r0, #-2147483648	; 0x80000000
   18e00:	str	r3, [sp, #4]
   18e04:	bl	196e8 <dcngettext@plt+0x86c0>
   18e08:	ldr	r3, [sp, #4]
   18e0c:	cmp	r7, r0
   18e10:	movle	r0, #0
   18e14:	movgt	r0, #1
   18e18:	b	18d34 <dcngettext@plt+0x7d0c>
   18e1c:	mov	r1, r7
   18e20:	mvn	r0, #-2147483648	; 0x80000000
   18e24:	bl	196e8 <dcngettext@plt+0x86c0>
   18e28:	cmp	r6, r0
   18e2c:	movge	r0, #0
   18e30:	movlt	r0, #1
   18e34:	b	18cd4 <dcngettext@plt+0x7cac>
   18e38:	cmn	r6, #1
   18e3c:	beq	18cdc <dcngettext@plt+0x7cb4>
   18e40:	mov	r1, r6
   18e44:	mov	r0, #-2147483648	; 0x80000000
   18e48:	bl	196e8 <dcngettext@plt+0x86c0>
   18e4c:	cmp	r7, r0
   18e50:	movle	r0, #0
   18e54:	movgt	r0, #1
   18e58:	b	18cd4 <dcngettext@plt+0x7cac>
   18e5c:	mov	r1, r7
   18e60:	mvn	r0, #-2147483648	; 0x80000000
   18e64:	str	r3, [sp, #4]
   18e68:	bl	196e8 <dcngettext@plt+0x86c0>
   18e6c:	ldr	r3, [sp, #4]
   18e70:	cmp	r0, r4
   18e74:	movle	r0, #0
   18e78:	movgt	r0, #1
   18e7c:	b	18d34 <dcngettext@plt+0x7d0c>
   18e80:	push	{r4, lr}
   18e84:	mov	r1, #1
   18e88:	bl	18ff4 <dcngettext@plt+0x7fcc>
   18e8c:	cmp	r0, #0
   18e90:	popne	{r4, pc}
   18e94:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18e98:	push	{r4, lr}
   18e9c:	mov	r1, #1
   18ea0:	bl	18ff4 <dcngettext@plt+0x7fcc>
   18ea4:	cmp	r0, #0
   18ea8:	popne	{r4, pc}
   18eac:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18eb0:	push	{r4, lr}
   18eb4:	bl	18ff4 <dcngettext@plt+0x7fcc>
   18eb8:	cmp	r0, #0
   18ebc:	popne	{r4, pc}
   18ec0:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18ec4:	push	{r4, lr}
   18ec8:	bl	18ff4 <dcngettext@plt+0x7fcc>
   18ecc:	cmp	r0, #0
   18ed0:	popne	{r4, pc}
   18ed4:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18ed8:	push	{r4, r5, r6, lr}
   18edc:	mov	r6, r0
   18ee0:	mov	r0, r1
   18ee4:	mov	r4, r1
   18ee8:	bl	1903c <dcngettext@plt+0x8014>
   18eec:	subs	r5, r0, #0
   18ef0:	beq	18f08 <dcngettext@plt+0x7ee0>
   18ef4:	mov	r2, r4
   18ef8:	mov	r1, r6
   18efc:	bl	10df4 <memcpy@plt>
   18f00:	mov	r0, r5
   18f04:	pop	{r4, r5, r6, pc}
   18f08:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18f0c:	push	{r4, r5, r6, lr}
   18f10:	mov	r6, r0
   18f14:	mov	r0, r1
   18f18:	mov	r4, r1
   18f1c:	bl	1903c <dcngettext@plt+0x8014>
   18f20:	subs	r5, r0, #0
   18f24:	beq	18f3c <dcngettext@plt+0x7f14>
   18f28:	mov	r2, r4
   18f2c:	mov	r1, r6
   18f30:	bl	10df4 <memcpy@plt>
   18f34:	mov	r0, r5
   18f38:	pop	{r4, r5, r6, pc}
   18f3c:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18f40:	push	{r4, r5, r6, lr}
   18f44:	mov	r6, r0
   18f48:	add	r0, r1, #1
   18f4c:	mov	r4, r1
   18f50:	bl	1903c <dcngettext@plt+0x8014>
   18f54:	subs	r5, r0, #0
   18f58:	beq	18f78 <dcngettext@plt+0x7f50>
   18f5c:	mov	r3, #0
   18f60:	mov	r1, r6
   18f64:	strb	r3, [r5, r4]
   18f68:	mov	r2, r4
   18f6c:	bl	10df4 <memcpy@plt>
   18f70:	mov	r0, r5
   18f74:	pop	{r4, r5, r6, pc}
   18f78:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18f7c:	push	{r4, r5, r6, lr}
   18f80:	mov	r6, r0
   18f84:	bl	10f14 <strlen@plt>
   18f88:	add	r4, r0, #1
   18f8c:	mov	r0, r4
   18f90:	bl	1903c <dcngettext@plt+0x8014>
   18f94:	subs	r5, r0, #0
   18f98:	beq	18fb0 <dcngettext@plt+0x7f88>
   18f9c:	mov	r2, r4
   18fa0:	mov	r1, r6
   18fa4:	bl	10df4 <memcpy@plt>
   18fa8:	mov	r0, r5
   18fac:	pop	{r4, r5, r6, pc}
   18fb0:	bl	18fb4 <dcngettext@plt+0x7f8c>
   18fb4:	ldr	r3, [pc, #44]	; 18fe8 <dcngettext@plt+0x7fc0>
   18fb8:	push	{r4, lr}
   18fbc:	mov	r2, #5
   18fc0:	ldr	r1, [pc, #36]	; 18fec <dcngettext@plt+0x7fc4>
   18fc4:	mov	r0, #0
   18fc8:	ldr	r4, [r3]
   18fcc:	bl	10e30 <dcgettext@plt>
   18fd0:	ldr	r2, [pc, #24]	; 18ff0 <dcngettext@plt+0x7fc8>
   18fd4:	mov	r1, #0
   18fd8:	mov	r3, r0
   18fdc:	mov	r0, r4
   18fe0:	bl	10ea8 <error@plt>
   18fe4:	bl	11010 <abort@plt>
   18fe8:	andeq	fp, r2, ip, lsl #2
   18fec:	strdeq	sl, [r1], -ip
   18ff0:	andeq	sl, r1, r0, lsl #17
   18ff4:	cmp	r1, #0
   18ff8:	cmpne	r0, #0
   18ffc:	moveq	r1, #1
   19000:	moveq	r0, r1
   19004:	umull	r2, r3, r0, r1
   19008:	adds	r3, r3, #0
   1900c:	movne	r3, #1
   19010:	cmp	r2, #0
   19014:	blt	19024 <dcngettext@plt+0x7ffc>
   19018:	cmp	r3, #0
   1901c:	bne	19024 <dcngettext@plt+0x7ffc>
   19020:	b	10d88 <calloc@plt>
   19024:	push	{r4, lr}
   19028:	bl	10f2c <__errno_location@plt>
   1902c:	mov	r3, #12
   19030:	str	r3, [r0]
   19034:	mov	r0, #0
   19038:	pop	{r4, pc}
   1903c:	cmp	r0, #0
   19040:	moveq	r0, #1
   19044:	cmp	r0, #0
   19048:	blt	19050 <dcngettext@plt+0x8028>
   1904c:	b	10eb4 <malloc@plt>
   19050:	push	{r4, lr}
   19054:	bl	10f2c <__errno_location@plt>
   19058:	mov	r3, #12
   1905c:	str	r3, [r0]
   19060:	mov	r0, #0
   19064:	pop	{r4, pc}
   19068:	cmp	r0, #0
   1906c:	beq	19090 <dcngettext@plt+0x8068>
   19070:	cmp	r1, #0
   19074:	push	{lr}		; (str lr, [sp, #-4]!)
   19078:	sub	sp, sp, #12
   1907c:	beq	19098 <dcngettext@plt+0x8070>
   19080:	blt	190b0 <dcngettext@plt+0x8088>
   19084:	add	sp, sp, #12
   19088:	pop	{lr}		; (ldr lr, [sp], #4)
   1908c:	b	10e3c <realloc@plt>
   19090:	mov	r0, r1
   19094:	b	1903c <dcngettext@plt+0x8014>
   19098:	str	r1, [sp, #4]
   1909c:	bl	13de0 <dcngettext@plt+0x2db8>
   190a0:	ldr	r3, [sp, #4]
   190a4:	mov	r0, r3
   190a8:	add	sp, sp, #12
   190ac:	pop	{pc}		; (ldr pc, [sp], #4)
   190b0:	bl	10f2c <__errno_location@plt>
   190b4:	mov	r2, #12
   190b8:	mov	r3, #0
   190bc:	str	r2, [r0]
   190c0:	b	190a4 <dcngettext@plt+0x807c>
   190c4:	push	{r4, r5, r6, lr}
   190c8:	mov	r4, r0
   190cc:	bl	10e90 <__fpending@plt>
   190d0:	ldr	r5, [r4]
   190d4:	and	r5, r5, #32
   190d8:	mov	r6, r0
   190dc:	mov	r0, r4
   190e0:	bl	13c48 <dcngettext@plt+0x2c20>
   190e4:	cmp	r5, #0
   190e8:	mov	r4, r0
   190ec:	bne	1910c <dcngettext@plt+0x80e4>
   190f0:	cmp	r0, #0
   190f4:	beq	19104 <dcngettext@plt+0x80dc>
   190f8:	cmp	r6, #0
   190fc:	beq	19128 <dcngettext@plt+0x8100>
   19100:	mvn	r4, #0
   19104:	mov	r0, r4
   19108:	pop	{r4, r5, r6, pc}
   1910c:	cmp	r0, #0
   19110:	bne	19100 <dcngettext@plt+0x80d8>
   19114:	bl	10f2c <__errno_location@plt>
   19118:	str	r4, [r0]
   1911c:	mvn	r4, #0
   19120:	mov	r0, r4
   19124:	pop	{r4, r5, r6, pc}
   19128:	bl	10f2c <__errno_location@plt>
   1912c:	ldr	r4, [r0]
   19130:	subs	r4, r4, #9
   19134:	mvnne	r4, #0
   19138:	mov	r0, r4
   1913c:	pop	{r4, r5, r6, pc}
   19140:	push	{r1, r2, r3}
   19144:	push	{r4, r5, r6, r7, lr}
   19148:	sub	sp, sp, #8
   1914c:	add	r3, sp, #32
   19150:	ldr	r1, [sp, #28]
   19154:	str	r3, [sp, #4]
   19158:	cmp	r1, #0
   1915c:	beq	191f4 <dcngettext@plt+0x81cc>
   19160:	ldr	r2, [pc, #412]	; 19304 <dcngettext@plt+0x82dc>
   19164:	mov	r5, r0
   19168:	cmp	r1, r2
   1916c:	bne	191b8 <dcngettext@plt+0x8190>
   19170:	ldr	r6, [pc, #400]	; 19308 <dcngettext@plt+0x82e0>
   19174:	ldr	r7, [r3]
   19178:	add	r2, sp, #36	; 0x24
   1917c:	ldr	r3, [r6]
   19180:	str	r2, [sp, #4]
   19184:	cmp	r3, #0
   19188:	mov	r2, r7
   1918c:	blt	192b8 <dcngettext@plt+0x8290>
   19190:	bl	10f98 <fcntl64@plt>
   19194:	subs	r4, r0, #0
   19198:	blt	1923c <dcngettext@plt+0x8214>
   1919c:	mov	r3, #1
   191a0:	str	r3, [r6]
   191a4:	mov	r0, r4
   191a8:	add	sp, sp, #8
   191ac:	pop	{r4, r5, r6, r7, lr}
   191b0:	add	sp, sp, #12
   191b4:	bx	lr
   191b8:	cmp	r1, #11
   191bc:	beq	191e4 <dcngettext@plt+0x81bc>
   191c0:	bgt	19204 <dcngettext@plt+0x81dc>
   191c4:	cmp	r1, #3
   191c8:	beq	191e4 <dcngettext@plt+0x81bc>
   191cc:	ble	192f8 <dcngettext@plt+0x82d0>
   191d0:	cmp	r1, #8
   191d4:	beq	19224 <dcngettext@plt+0x81fc>
   191d8:	ble	19224 <dcngettext@plt+0x81fc>
   191dc:	cmp	r1, #9
   191e0:	bne	19224 <dcngettext@plt+0x81fc>
   191e4:	mov	r0, r5
   191e8:	bl	10f98 <fcntl64@plt>
   191ec:	mov	r4, r0
   191f0:	b	191a4 <dcngettext@plt+0x817c>
   191f4:	ldr	r2, [sp, #32]
   191f8:	bl	10f98 <fcntl64@plt>
   191fc:	mov	r4, r0
   19200:	b	191a4 <dcngettext@plt+0x817c>
   19204:	ldr	r3, [pc, #256]	; 1930c <dcngettext@plt+0x82e4>
   19208:	cmp	r1, r3
   1920c:	bgt	192d8 <dcngettext@plt+0x82b0>
   19210:	cmp	r1, r2
   19214:	bge	19224 <dcngettext@plt+0x81fc>
   19218:	sub	r3, r3, #6
   1921c:	cmp	r1, r3
   19220:	beq	191e4 <dcngettext@plt+0x81bc>
   19224:	ldr	r3, [sp, #4]
   19228:	mov	r0, r5
   1922c:	ldr	r2, [r3]
   19230:	bl	10f98 <fcntl64@plt>
   19234:	mov	r4, r0
   19238:	b	191a4 <dcngettext@plt+0x817c>
   1923c:	bl	10f2c <__errno_location@plt>
   19240:	ldr	r3, [r0]
   19244:	cmp	r3, #22
   19248:	bne	1919c <dcngettext@plt+0x8174>
   1924c:	mov	r2, r7
   19250:	mov	r0, r5
   19254:	mov	r1, #0
   19258:	bl	10f98 <fcntl64@plt>
   1925c:	subs	r4, r0, #0
   19260:	blt	191a4 <dcngettext@plt+0x817c>
   19264:	mvn	r3, #0
   19268:	str	r3, [r6]
   1926c:	mov	r1, #1
   19270:	mov	r0, r4
   19274:	bl	10f98 <fcntl64@plt>
   19278:	subs	r2, r0, #0
   1927c:	blt	19298 <dcngettext@plt+0x8270>
   19280:	orr	r2, r2, #1
   19284:	mov	r1, #2
   19288:	mov	r0, r4
   1928c:	bl	10f98 <fcntl64@plt>
   19290:	cmn	r0, #1
   19294:	bne	191a4 <dcngettext@plt+0x817c>
   19298:	bl	10f2c <__errno_location@plt>
   1929c:	mov	r5, r0
   192a0:	mov	r0, r4
   192a4:	ldr	r6, [r5]
   192a8:	mvn	r4, #0
   192ac:	bl	1101c <close@plt>
   192b0:	str	r6, [r5]
   192b4:	b	191a4 <dcngettext@plt+0x817c>
   192b8:	mov	r1, #0
   192bc:	bl	10f98 <fcntl64@plt>
   192c0:	subs	r4, r0, #0
   192c4:	blt	191a4 <dcngettext@plt+0x817c>
   192c8:	ldr	r3, [r6]
   192cc:	cmn	r3, #1
   192d0:	beq	1926c <dcngettext@plt+0x8244>
   192d4:	b	191a4 <dcngettext@plt+0x817c>
   192d8:	ldr	r3, [pc, #48]	; 19310 <dcngettext@plt+0x82e8>
   192dc:	cmp	r1, r3
   192e0:	beq	19224 <dcngettext@plt+0x81fc>
   192e4:	blt	191e4 <dcngettext@plt+0x81bc>
   192e8:	add	r3, r3, #1
   192ec:	cmp	r1, r3
   192f0:	bne	19224 <dcngettext@plt+0x81fc>
   192f4:	b	191e4 <dcngettext@plt+0x81bc>
   192f8:	cmp	r1, #1
   192fc:	bne	19224 <dcngettext@plt+0x81fc>
   19300:	b	191e4 <dcngettext@plt+0x81bc>
   19304:	andeq	r0, r0, r6, lsl #8
   19308:	andeq	fp, r2, r0, asr #5
   1930c:	andeq	r0, r0, r7, lsl #8
   19310:	andeq	r0, r0, r9, lsl #8
   19314:	push	{r4, lr}
   19318:	mov	r0, #14
   1931c:	bl	10fc8 <nl_langinfo@plt>
   19320:	cmp	r0, #0
   19324:	beq	1933c <dcngettext@plt+0x8314>
   19328:	ldrb	r2, [r0]
   1932c:	ldr	r3, [pc, #16]	; 19344 <dcngettext@plt+0x831c>
   19330:	cmp	r2, #0
   19334:	moveq	r0, r3
   19338:	pop	{r4, pc}
   1933c:	ldr	r0, [pc]	; 19344 <dcngettext@plt+0x831c>
   19340:	pop	{r4, pc}
   19344:	andeq	sl, r1, r0, lsl sp
   19348:	push	{r4, r5, r6, r7, lr}
   1934c:	subs	r6, r0, #0
   19350:	sub	sp, sp, #12
   19354:	addeq	r6, sp, #4
   19358:	mov	r0, r6
   1935c:	mov	r5, r2
   19360:	mov	r7, r1
   19364:	bl	10e9c <mbrtowc@plt>
   19368:	cmp	r5, #0
   1936c:	cmnne	r0, #3
   19370:	mov	r4, r0
   19374:	bls	19390 <dcngettext@plt+0x8368>
   19378:	mov	r0, #0
   1937c:	bl	193e8 <dcngettext@plt+0x83c0>
   19380:	cmp	r0, #0
   19384:	moveq	r4, #1
   19388:	ldrbeq	r3, [r7]
   1938c:	streq	r3, [r6]
   19390:	mov	r0, r4
   19394:	add	sp, sp, #12
   19398:	pop	{r4, r5, r6, r7, pc}
   1939c:	push	{r4, r5, r6, lr}
   193a0:	subs	r4, r2, #0
   193a4:	mov	r6, r0
   193a8:	mov	r5, r1
   193ac:	beq	193d8 <dcngettext@plt+0x83b0>
   193b0:	mov	r1, r4
   193b4:	mvn	r0, #0
   193b8:	bl	194dc <dcngettext@plt+0x84b4>
   193bc:	cmp	r0, r5
   193c0:	bcs	193d8 <dcngettext@plt+0x83b0>
   193c4:	bl	10f2c <__errno_location@plt>
   193c8:	mov	r3, #12
   193cc:	str	r3, [r0]
   193d0:	mov	r0, #0
   193d4:	pop	{r4, r5, r6, pc}
   193d8:	mul	r1, r5, r4
   193dc:	mov	r0, r6
   193e0:	pop	{r4, r5, r6, lr}
   193e4:	b	19068 <dcngettext@plt+0x8040>
   193e8:	push	{lr}		; (str lr, [sp, #-4]!)
   193ec:	sub	sp, sp, #268	; 0x10c
   193f0:	add	r1, sp, #4
   193f4:	ldr	r2, [pc, #60]	; 19438 <dcngettext@plt+0x8410>
   193f8:	bl	19444 <dcngettext@plt+0x841c>
   193fc:	cmp	r0, #0
   19400:	movne	r0, #0
   19404:	bne	19430 <dcngettext@plt+0x8408>
   19408:	ldr	r1, [pc, #44]	; 1943c <dcngettext@plt+0x8414>
   1940c:	add	r0, sp, #4
   19410:	bl	10db8 <strcmp@plt>
   19414:	cmp	r0, #0
   19418:	beq	19430 <dcngettext@plt+0x8408>
   1941c:	add	r0, sp, #4
   19420:	ldr	r1, [pc, #24]	; 19440 <dcngettext@plt+0x8418>
   19424:	bl	10db8 <strcmp@plt>
   19428:	adds	r0, r0, #0
   1942c:	movne	r0, #1
   19430:	add	sp, sp, #268	; 0x10c
   19434:	pop	{pc}		; (ldr pc, [sp], #4)
   19438:	andeq	r0, r0, r1, lsl #2
   1943c:	andeq	sl, r1, r8, lsl sp
   19440:	andeq	sl, r1, ip, lsl sp
   19444:	push	{r4, r5, r6, lr}
   19448:	mov	r5, r1
   1944c:	mov	r1, #0
   19450:	mov	r4, r2
   19454:	bl	10fb0 <setlocale@plt>
   19458:	subs	r6, r0, #0
   1945c:	beq	194b8 <dcngettext@plt+0x8490>
   19460:	bl	10f14 <strlen@plt>
   19464:	cmp	r4, r0
   19468:	bhi	194a0 <dcngettext@plt+0x8478>
   1946c:	cmp	r4, #0
   19470:	bne	1947c <dcngettext@plt+0x8454>
   19474:	mov	r0, #34	; 0x22
   19478:	pop	{r4, r5, r6, pc}
   1947c:	sub	r4, r4, #1
   19480:	mov	r1, r6
   19484:	mov	r2, r4
   19488:	mov	r0, r5
   1948c:	bl	10df4 <memcpy@plt>
   19490:	mov	r3, #0
   19494:	strb	r3, [r5, r4]
   19498:	mov	r0, #34	; 0x22
   1949c:	pop	{r4, r5, r6, pc}
   194a0:	add	r2, r0, #1
   194a4:	mov	r1, r6
   194a8:	mov	r0, r5
   194ac:	bl	10df4 <memcpy@plt>
   194b0:	mov	r0, #0
   194b4:	pop	{r4, r5, r6, pc}
   194b8:	cmp	r4, #0
   194bc:	beq	194cc <dcngettext@plt+0x84a4>
   194c0:	strb	r6, [r5]
   194c4:	mov	r0, #22
   194c8:	pop	{r4, r5, r6, pc}
   194cc:	mov	r0, #22
   194d0:	pop	{r4, r5, r6, pc}
   194d4:	mov	r1, #0
   194d8:	b	10fb0 <setlocale@plt>
   194dc:	subs	r2, r1, #1
   194e0:	bxeq	lr
   194e4:	bcc	196bc <dcngettext@plt+0x8694>
   194e8:	cmp	r0, r1
   194ec:	bls	196a0 <dcngettext@plt+0x8678>
   194f0:	tst	r1, r2
   194f4:	beq	196ac <dcngettext@plt+0x8684>
   194f8:	clz	r3, r0
   194fc:	clz	r2, r1
   19500:	sub	r3, r2, r3
   19504:	rsbs	r3, r3, #31
   19508:	addne	r3, r3, r3, lsl #1
   1950c:	mov	r2, #0
   19510:	addne	pc, pc, r3, lsl #2
   19514:	nop			; (mov r0, r0)
   19518:	cmp	r0, r1, lsl #31
   1951c:	adc	r2, r2, r2
   19520:	subcs	r0, r0, r1, lsl #31
   19524:	cmp	r0, r1, lsl #30
   19528:	adc	r2, r2, r2
   1952c:	subcs	r0, r0, r1, lsl #30
   19530:	cmp	r0, r1, lsl #29
   19534:	adc	r2, r2, r2
   19538:	subcs	r0, r0, r1, lsl #29
   1953c:	cmp	r0, r1, lsl #28
   19540:	adc	r2, r2, r2
   19544:	subcs	r0, r0, r1, lsl #28
   19548:	cmp	r0, r1, lsl #27
   1954c:	adc	r2, r2, r2
   19550:	subcs	r0, r0, r1, lsl #27
   19554:	cmp	r0, r1, lsl #26
   19558:	adc	r2, r2, r2
   1955c:	subcs	r0, r0, r1, lsl #26
   19560:	cmp	r0, r1, lsl #25
   19564:	adc	r2, r2, r2
   19568:	subcs	r0, r0, r1, lsl #25
   1956c:	cmp	r0, r1, lsl #24
   19570:	adc	r2, r2, r2
   19574:	subcs	r0, r0, r1, lsl #24
   19578:	cmp	r0, r1, lsl #23
   1957c:	adc	r2, r2, r2
   19580:	subcs	r0, r0, r1, lsl #23
   19584:	cmp	r0, r1, lsl #22
   19588:	adc	r2, r2, r2
   1958c:	subcs	r0, r0, r1, lsl #22
   19590:	cmp	r0, r1, lsl #21
   19594:	adc	r2, r2, r2
   19598:	subcs	r0, r0, r1, lsl #21
   1959c:	cmp	r0, r1, lsl #20
   195a0:	adc	r2, r2, r2
   195a4:	subcs	r0, r0, r1, lsl #20
   195a8:	cmp	r0, r1, lsl #19
   195ac:	adc	r2, r2, r2
   195b0:	subcs	r0, r0, r1, lsl #19
   195b4:	cmp	r0, r1, lsl #18
   195b8:	adc	r2, r2, r2
   195bc:	subcs	r0, r0, r1, lsl #18
   195c0:	cmp	r0, r1, lsl #17
   195c4:	adc	r2, r2, r2
   195c8:	subcs	r0, r0, r1, lsl #17
   195cc:	cmp	r0, r1, lsl #16
   195d0:	adc	r2, r2, r2
   195d4:	subcs	r0, r0, r1, lsl #16
   195d8:	cmp	r0, r1, lsl #15
   195dc:	adc	r2, r2, r2
   195e0:	subcs	r0, r0, r1, lsl #15
   195e4:	cmp	r0, r1, lsl #14
   195e8:	adc	r2, r2, r2
   195ec:	subcs	r0, r0, r1, lsl #14
   195f0:	cmp	r0, r1, lsl #13
   195f4:	adc	r2, r2, r2
   195f8:	subcs	r0, r0, r1, lsl #13
   195fc:	cmp	r0, r1, lsl #12
   19600:	adc	r2, r2, r2
   19604:	subcs	r0, r0, r1, lsl #12
   19608:	cmp	r0, r1, lsl #11
   1960c:	adc	r2, r2, r2
   19610:	subcs	r0, r0, r1, lsl #11
   19614:	cmp	r0, r1, lsl #10
   19618:	adc	r2, r2, r2
   1961c:	subcs	r0, r0, r1, lsl #10
   19620:	cmp	r0, r1, lsl #9
   19624:	adc	r2, r2, r2
   19628:	subcs	r0, r0, r1, lsl #9
   1962c:	cmp	r0, r1, lsl #8
   19630:	adc	r2, r2, r2
   19634:	subcs	r0, r0, r1, lsl #8
   19638:	cmp	r0, r1, lsl #7
   1963c:	adc	r2, r2, r2
   19640:	subcs	r0, r0, r1, lsl #7
   19644:	cmp	r0, r1, lsl #6
   19648:	adc	r2, r2, r2
   1964c:	subcs	r0, r0, r1, lsl #6
   19650:	cmp	r0, r1, lsl #5
   19654:	adc	r2, r2, r2
   19658:	subcs	r0, r0, r1, lsl #5
   1965c:	cmp	r0, r1, lsl #4
   19660:	adc	r2, r2, r2
   19664:	subcs	r0, r0, r1, lsl #4
   19668:	cmp	r0, r1, lsl #3
   1966c:	adc	r2, r2, r2
   19670:	subcs	r0, r0, r1, lsl #3
   19674:	cmp	r0, r1, lsl #2
   19678:	adc	r2, r2, r2
   1967c:	subcs	r0, r0, r1, lsl #2
   19680:	cmp	r0, r1, lsl #1
   19684:	adc	r2, r2, r2
   19688:	subcs	r0, r0, r1, lsl #1
   1968c:	cmp	r0, r1
   19690:	adc	r2, r2, r2
   19694:	subcs	r0, r0, r1
   19698:	mov	r0, r2
   1969c:	bx	lr
   196a0:	moveq	r0, #1
   196a4:	movne	r0, #0
   196a8:	bx	lr
   196ac:	clz	r2, r1
   196b0:	rsb	r2, r2, #31
   196b4:	lsr	r0, r0, r2
   196b8:	bx	lr
   196bc:	cmp	r0, #0
   196c0:	mvnne	r0, #0
   196c4:	b	19964 <dcngettext@plt+0x893c>
   196c8:	cmp	r1, #0
   196cc:	beq	196bc <dcngettext@plt+0x8694>
   196d0:	push	{r0, r1, lr}
   196d4:	bl	194dc <dcngettext@plt+0x84b4>
   196d8:	pop	{r1, r2, lr}
   196dc:	mul	r3, r2, r0
   196e0:	sub	r1, r1, r3
   196e4:	bx	lr
   196e8:	cmp	r1, #0
   196ec:	beq	198f8 <dcngettext@plt+0x88d0>
   196f0:	eor	ip, r0, r1
   196f4:	rsbmi	r1, r1, #0
   196f8:	subs	r2, r1, #1
   196fc:	beq	198c4 <dcngettext@plt+0x889c>
   19700:	movs	r3, r0
   19704:	rsbmi	r3, r0, #0
   19708:	cmp	r3, r1
   1970c:	bls	198d0 <dcngettext@plt+0x88a8>
   19710:	tst	r1, r2
   19714:	beq	198e0 <dcngettext@plt+0x88b8>
   19718:	clz	r2, r3
   1971c:	clz	r0, r1
   19720:	sub	r2, r0, r2
   19724:	rsbs	r2, r2, #31
   19728:	addne	r2, r2, r2, lsl #1
   1972c:	mov	r0, #0
   19730:	addne	pc, pc, r2, lsl #2
   19734:	nop			; (mov r0, r0)
   19738:	cmp	r3, r1, lsl #31
   1973c:	adc	r0, r0, r0
   19740:	subcs	r3, r3, r1, lsl #31
   19744:	cmp	r3, r1, lsl #30
   19748:	adc	r0, r0, r0
   1974c:	subcs	r3, r3, r1, lsl #30
   19750:	cmp	r3, r1, lsl #29
   19754:	adc	r0, r0, r0
   19758:	subcs	r3, r3, r1, lsl #29
   1975c:	cmp	r3, r1, lsl #28
   19760:	adc	r0, r0, r0
   19764:	subcs	r3, r3, r1, lsl #28
   19768:	cmp	r3, r1, lsl #27
   1976c:	adc	r0, r0, r0
   19770:	subcs	r3, r3, r1, lsl #27
   19774:	cmp	r3, r1, lsl #26
   19778:	adc	r0, r0, r0
   1977c:	subcs	r3, r3, r1, lsl #26
   19780:	cmp	r3, r1, lsl #25
   19784:	adc	r0, r0, r0
   19788:	subcs	r3, r3, r1, lsl #25
   1978c:	cmp	r3, r1, lsl #24
   19790:	adc	r0, r0, r0
   19794:	subcs	r3, r3, r1, lsl #24
   19798:	cmp	r3, r1, lsl #23
   1979c:	adc	r0, r0, r0
   197a0:	subcs	r3, r3, r1, lsl #23
   197a4:	cmp	r3, r1, lsl #22
   197a8:	adc	r0, r0, r0
   197ac:	subcs	r3, r3, r1, lsl #22
   197b0:	cmp	r3, r1, lsl #21
   197b4:	adc	r0, r0, r0
   197b8:	subcs	r3, r3, r1, lsl #21
   197bc:	cmp	r3, r1, lsl #20
   197c0:	adc	r0, r0, r0
   197c4:	subcs	r3, r3, r1, lsl #20
   197c8:	cmp	r3, r1, lsl #19
   197cc:	adc	r0, r0, r0
   197d0:	subcs	r3, r3, r1, lsl #19
   197d4:	cmp	r3, r1, lsl #18
   197d8:	adc	r0, r0, r0
   197dc:	subcs	r3, r3, r1, lsl #18
   197e0:	cmp	r3, r1, lsl #17
   197e4:	adc	r0, r0, r0
   197e8:	subcs	r3, r3, r1, lsl #17
   197ec:	cmp	r3, r1, lsl #16
   197f0:	adc	r0, r0, r0
   197f4:	subcs	r3, r3, r1, lsl #16
   197f8:	cmp	r3, r1, lsl #15
   197fc:	adc	r0, r0, r0
   19800:	subcs	r3, r3, r1, lsl #15
   19804:	cmp	r3, r1, lsl #14
   19808:	adc	r0, r0, r0
   1980c:	subcs	r3, r3, r1, lsl #14
   19810:	cmp	r3, r1, lsl #13
   19814:	adc	r0, r0, r0
   19818:	subcs	r3, r3, r1, lsl #13
   1981c:	cmp	r3, r1, lsl #12
   19820:	adc	r0, r0, r0
   19824:	subcs	r3, r3, r1, lsl #12
   19828:	cmp	r3, r1, lsl #11
   1982c:	adc	r0, r0, r0
   19830:	subcs	r3, r3, r1, lsl #11
   19834:	cmp	r3, r1, lsl #10
   19838:	adc	r0, r0, r0
   1983c:	subcs	r3, r3, r1, lsl #10
   19840:	cmp	r3, r1, lsl #9
   19844:	adc	r0, r0, r0
   19848:	subcs	r3, r3, r1, lsl #9
   1984c:	cmp	r3, r1, lsl #8
   19850:	adc	r0, r0, r0
   19854:	subcs	r3, r3, r1, lsl #8
   19858:	cmp	r3, r1, lsl #7
   1985c:	adc	r0, r0, r0
   19860:	subcs	r3, r3, r1, lsl #7
   19864:	cmp	r3, r1, lsl #6
   19868:	adc	r0, r0, r0
   1986c:	subcs	r3, r3, r1, lsl #6
   19870:	cmp	r3, r1, lsl #5
   19874:	adc	r0, r0, r0
   19878:	subcs	r3, r3, r1, lsl #5
   1987c:	cmp	r3, r1, lsl #4
   19880:	adc	r0, r0, r0
   19884:	subcs	r3, r3, r1, lsl #4
   19888:	cmp	r3, r1, lsl #3
   1988c:	adc	r0, r0, r0
   19890:	subcs	r3, r3, r1, lsl #3
   19894:	cmp	r3, r1, lsl #2
   19898:	adc	r0, r0, r0
   1989c:	subcs	r3, r3, r1, lsl #2
   198a0:	cmp	r3, r1, lsl #1
   198a4:	adc	r0, r0, r0
   198a8:	subcs	r3, r3, r1, lsl #1
   198ac:	cmp	r3, r1
   198b0:	adc	r0, r0, r0
   198b4:	subcs	r3, r3, r1
   198b8:	cmp	ip, #0
   198bc:	rsbmi	r0, r0, #0
   198c0:	bx	lr
   198c4:	teq	ip, r0
   198c8:	rsbmi	r0, r0, #0
   198cc:	bx	lr
   198d0:	movcc	r0, #0
   198d4:	asreq	r0, ip, #31
   198d8:	orreq	r0, r0, #1
   198dc:	bx	lr
   198e0:	clz	r2, r1
   198e4:	rsb	r2, r2, #31
   198e8:	cmp	ip, #0
   198ec:	lsr	r0, r3, r2
   198f0:	rsbmi	r0, r0, #0
   198f4:	bx	lr
   198f8:	cmp	r0, #0
   198fc:	mvngt	r0, #-2147483648	; 0x80000000
   19900:	movlt	r0, #-2147483648	; 0x80000000
   19904:	b	19964 <dcngettext@plt+0x893c>
   19908:	cmp	r1, #0
   1990c:	beq	198f8 <dcngettext@plt+0x88d0>
   19910:	push	{r0, r1, lr}
   19914:	bl	196f0 <dcngettext@plt+0x86c8>
   19918:	pop	{r1, r2, lr}
   1991c:	mul	r3, r2, r0
   19920:	sub	r1, r1, r3
   19924:	bx	lr
   19928:	cmp	r3, #0
   1992c:	cmpeq	r2, #0
   19930:	bne	19948 <dcngettext@plt+0x8920>
   19934:	cmp	r1, #0
   19938:	cmpeq	r0, #0
   1993c:	mvnne	r1, #0
   19940:	mvnne	r0, #0
   19944:	b	19964 <dcngettext@plt+0x893c>
   19948:	sub	sp, sp, #8
   1994c:	push	{sp, lr}
   19950:	bl	19974 <dcngettext@plt+0x894c>
   19954:	ldr	lr, [sp, #4]
   19958:	add	sp, sp, #8
   1995c:	pop	{r2, r3}
   19960:	bx	lr
   19964:	push	{r1, lr}
   19968:	mov	r0, #8
   1996c:	bl	10da0 <raise@plt>
   19970:	pop	{r1, pc}
   19974:	cmp	r1, r3
   19978:	push	{r4, r5, r6, r7, r8, r9, lr}
   1997c:	cmpeq	r0, r2
   19980:	mov	r4, r0
   19984:	mov	r5, r1
   19988:	ldr	r9, [sp, #28]
   1998c:	movcc	r0, #0
   19990:	movcc	r1, #0
   19994:	bcc	19a8c <dcngettext@plt+0x8a64>
   19998:	cmp	r3, #0
   1999c:	clzeq	ip, r2
   199a0:	clzne	ip, r3
   199a4:	addeq	ip, ip, #32
   199a8:	cmp	r5, #0
   199ac:	clzeq	r1, r4
   199b0:	addeq	r1, r1, #32
   199b4:	clzne	r1, r5
   199b8:	sub	ip, ip, r1
   199bc:	sub	lr, ip, #32
   199c0:	lsl	r7, r3, ip
   199c4:	rsb	r8, ip, #32
   199c8:	orr	r7, r7, r2, lsl lr
   199cc:	orr	r7, r7, r2, lsr r8
   199d0:	lsl	r6, r2, ip
   199d4:	cmp	r5, r7
   199d8:	cmpeq	r4, r6
   199dc:	movcc	r0, #0
   199e0:	movcc	r1, #0
   199e4:	bcc	19a00 <dcngettext@plt+0x89d8>
   199e8:	mov	r3, #1
   199ec:	subs	r4, r4, r6
   199f0:	lsl	r1, r3, lr
   199f4:	lsl	r0, r3, ip
   199f8:	orr	r1, r1, r3, lsr r8
   199fc:	sbc	r5, r5, r7
   19a00:	cmp	ip, #0
   19a04:	beq	19a8c <dcngettext@plt+0x8a64>
   19a08:	lsrs	r3, r7, #1
   19a0c:	rrx	r2, r6
   19a10:	mov	r6, ip
   19a14:	b	19a38 <dcngettext@plt+0x8a10>
   19a18:	subs	r4, r4, r2
   19a1c:	sbc	r5, r5, r3
   19a20:	adds	r4, r4, r4
   19a24:	adc	r5, r5, r5
   19a28:	adds	r4, r4, #1
   19a2c:	adc	r5, r5, #0
   19a30:	subs	r6, r6, #1
   19a34:	beq	19a54 <dcngettext@plt+0x8a2c>
   19a38:	cmp	r5, r3
   19a3c:	cmpeq	r4, r2
   19a40:	bcs	19a18 <dcngettext@plt+0x89f0>
   19a44:	adds	r4, r4, r4
   19a48:	adc	r5, r5, r5
   19a4c:	subs	r6, r6, #1
   19a50:	bne	19a38 <dcngettext@plt+0x8a10>
   19a54:	lsr	r6, r4, ip
   19a58:	lsr	r7, r5, ip
   19a5c:	orr	r6, r6, r5, lsl r8
   19a60:	adds	r2, r0, r4
   19a64:	orr	r6, r6, r5, lsr lr
   19a68:	adc	r3, r1, r5
   19a6c:	lsl	r1, r7, ip
   19a70:	orr	r1, r1, r6, lsl lr
   19a74:	lsl	r0, r6, ip
   19a78:	orr	r1, r1, r6, lsr r8
   19a7c:	subs	r0, r2, r0
   19a80:	mov	r4, r6
   19a84:	mov	r5, r7
   19a88:	sbc	r1, r3, r1
   19a8c:	cmp	r9, #0
   19a90:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   19a94:	strd	r4, [r9]
   19a98:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19a9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19aa0:	mov	r7, r0
   19aa4:	ldr	r6, [pc, #72]	; 19af4 <dcngettext@plt+0x8acc>
   19aa8:	ldr	r5, [pc, #72]	; 19af8 <dcngettext@plt+0x8ad0>
   19aac:	add	r6, pc, r6
   19ab0:	add	r5, pc, r5
   19ab4:	sub	r6, r6, r5
   19ab8:	mov	r8, r1
   19abc:	mov	r9, r2
   19ac0:	bl	10d5c <fdopen@plt-0x20>
   19ac4:	asrs	r6, r6, #2
   19ac8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19acc:	mov	r4, #0
   19ad0:	add	r4, r4, #1
   19ad4:	ldr	r3, [r5], #4
   19ad8:	mov	r2, r9
   19adc:	mov	r1, r8
   19ae0:	mov	r0, r7
   19ae4:	blx	r3
   19ae8:	cmp	r6, r4
   19aec:	bne	19ad0 <dcngettext@plt+0x8aa8>
   19af0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19af4:	andeq	r1, r1, ip, asr r4
   19af8:	andeq	r1, r1, r4, asr r4
   19afc:	bx	lr
   19b00:	ldr	r3, [pc, #12]	; 19b14 <dcngettext@plt+0x8aec>
   19b04:	mov	r1, #0
   19b08:	add	r3, pc, r3
   19b0c:	ldr	r2, [r3]
   19b10:	b	10f38 <__cxa_atexit@plt>
   19b14:	andeq	r1, r1, ip, ror #11

Disassembly of section .fini:

00019b18 <.fini>:
   19b18:	push	{r3, lr}
   19b1c:	pop	{r3, pc}
