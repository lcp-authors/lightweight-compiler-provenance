
../repos/charybdis/modules/.libs/m_help.so:     file format elf32-littlearm


Disassembly of section .init:

00000494 <_init>:
 494:	push	{r3, lr}
 498:	bl	4e4 <call_weak_fn>
 49c:	pop	{r3, pc}

Disassembly of section .plt:

000004a0 <.plt>:
 4a0:	push	{lr}		; (str lr, [sp, #-4]!)
 4a4:	ldr	lr, [pc, #4]	; 4b0 <.plt+0x10>
 4a8:	add	lr, pc, lr
 4ac:	ldr	pc, [lr, #8]!
 4b0:	.word	0x00010b50

000004b4 <__cxa_finalize@plt>:
 4b4:	add	ip, pc, #0, 12
 4b8:	add	ip, ip, #16, 20	; 0x10000
 4bc:	ldr	pc, [ip, #2896]!	; 0xb50

000004c0 <sendto_one@plt>:
 4c0:	add	ip, pc, #0, 12
 4c4:	add	ip, ip, #16, 20	; 0x10000
 4c8:	ldr	pc, [ip, #2888]!	; 0xb48

000004cc <__gmon_start__@plt>:
 4cc:	add	ip, pc, #0, 12
 4d0:	add	ip, ip, #16, 20	; 0x10000
 4d4:	ldr	pc, [ip, #2880]!	; 0xb40

000004d8 <rb_dictionary_retrieve@plt>:
 4d8:	add	ip, pc, #0, 12
 4dc:	add	ip, ip, #16, 20	; 0x10000
 4e0:	ldr	pc, [ip, #2872]!	; 0xb38

Disassembly of section .text:

000004e4 <call_weak_fn>:
 4e4:	ldr	r3, [pc, #20]	; 500 <call_weak_fn+0x1c>
 4e8:	ldr	r2, [pc, #20]	; 504 <call_weak_fn+0x20>
 4ec:	add	r3, pc, r3
 4f0:	ldr	r2, [r3, r2]
 4f4:	cmp	r2, #0
 4f8:	bxeq	lr
 4fc:	b	4cc <__gmon_start__@plt>
 500:	.word	0x00010b0c
 504:	.word	0x00000028

00000508 <deregister_tm_clones>:
 508:	ldr	r0, [pc, #44]	; 53c <deregister_tm_clones+0x34>
 50c:	ldr	r3, [pc, #44]	; 540 <deregister_tm_clones+0x38>
 510:	add	r0, pc, r0
 514:	add	r3, pc, r3
 518:	cmp	r3, r0
 51c:	ldr	r3, [pc, #32]	; 544 <deregister_tm_clones+0x3c>
 520:	add	r3, pc, r3
 524:	bxeq	lr
 528:	ldr	r2, [pc, #24]	; 548 <deregister_tm_clones+0x40>
 52c:	ldr	r3, [r3, r2]
 530:	cmp	r3, #0
 534:	bxeq	lr
 538:	bx	r3
 53c:	.word	0x00010be0
 540:	.word	0x00010bdc
 544:	.word	0x00010ad8
 548:	.word	0x00000024

0000054c <register_tm_clones>:
 54c:	ldr	r0, [pc, #56]	; 58c <register_tm_clones+0x40>
 550:	ldr	r3, [pc, #56]	; 590 <register_tm_clones+0x44>
 554:	add	r0, pc, r0
 558:	add	r3, pc, r3
 55c:	sub	r1, r3, r0
 560:	ldr	r3, [pc, #44]	; 594 <register_tm_clones+0x48>
 564:	asr	r1, r1, #2
 568:	add	r3, pc, r3
 56c:	add	r1, r1, r1, lsr #31
 570:	asrs	r1, r1, #1
 574:	bxeq	lr
 578:	ldr	r2, [pc, #24]	; 598 <register_tm_clones+0x4c>
 57c:	ldr	r3, [r3, r2]
 580:	cmp	r3, #0
 584:	bxeq	lr
 588:	bx	r3
 58c:	.word	0x00010b9c
 590:	.word	0x00010b98
 594:	.word	0x00010a90
 598:	.word	0x0000002c

0000059c <__do_global_dtors_aux>:
 59c:	ldr	r3, [pc, #76]	; 5f0 <__do_global_dtors_aux+0x54>
 5a0:	ldr	r2, [pc, #76]	; 5f4 <__do_global_dtors_aux+0x58>
 5a4:	add	r3, pc, r3
 5a8:	add	r2, pc, r2
 5ac:	ldrb	r3, [r3]
 5b0:	cmp	r3, #0
 5b4:	bxne	lr
 5b8:	ldr	r3, [pc, #56]	; 5f8 <__do_global_dtors_aux+0x5c>
 5bc:	push	{r4, lr}
 5c0:	ldr	r3, [r2, r3]
 5c4:	cmp	r3, #0
 5c8:	beq	5d8 <__do_global_dtors_aux+0x3c>
 5cc:	ldr	r3, [pc, #40]	; 5fc <__do_global_dtors_aux+0x60>
 5d0:	ldr	r0, [pc, r3]
 5d4:	bl	4b4 <__cxa_finalize@plt>
 5d8:	bl	508 <deregister_tm_clones>
 5dc:	ldr	r3, [pc, #28]	; 600 <__do_global_dtors_aux+0x64>
 5e0:	mov	r2, #1
 5e4:	add	r3, pc, r3
 5e8:	strb	r2, [r3]
 5ec:	pop	{r4, pc}
 5f0:	.word	0x00010b4c
 5f4:	.word	0x00010a50
 5f8:	.word	0x00000020
 5fc:	.word	0x00010a60
 600:	.word	0x00010b0c

00000604 <frame_dummy>:
 604:	b	54c <register_tm_clones>

00000608 <m_help>:
 608:	str	fp, [sp, #-8]!
 60c:	str	lr, [sp, #4]
 610:	add	fp, sp, #4
 614:	sub	sp, sp, #16
 618:	str	r0, [fp, #-8]
 61c:	str	r1, [fp, #-12]
 620:	str	r2, [fp, #-16]
 624:	str	r3, [fp, #-20]	; 0xffffffec
 628:	ldr	r3, [fp, #-20]	; 0xffffffec
 62c:	cmp	r3, #1
 630:	ble	640 <m_help+0x38>
 634:	ldr	r3, [fp, #4]
 638:	ldr	r3, [r3, #4]
 63c:	b	644 <m_help+0x3c>
 640:	mov	r3, #0
 644:	mov	r2, r3
 648:	mov	r1, #1
 64c:	ldr	r0, [fp, #-16]
 650:	bl	728 <dohelp>
 654:	nop	{0}
 658:	sub	sp, fp, #4
 65c:	ldr	fp, [sp]
 660:	add	sp, sp, #4
 664:	pop	{pc}		; (ldr pc, [sp], #4)

00000668 <mo_help>:
 668:	str	fp, [sp, #-8]!
 66c:	str	lr, [sp, #4]
 670:	add	fp, sp, #4
 674:	sub	sp, sp, #16
 678:	str	r0, [fp, #-8]
 67c:	str	r1, [fp, #-12]
 680:	str	r2, [fp, #-16]
 684:	str	r3, [fp, #-20]	; 0xffffffec
 688:	ldr	r3, [fp, #-20]	; 0xffffffec
 68c:	cmp	r3, #1
 690:	ble	6a0 <mo_help+0x38>
 694:	ldr	r3, [fp, #4]
 698:	ldr	r3, [r3, #4]
 69c:	b	6a4 <mo_help+0x3c>
 6a0:	mov	r3, #0
 6a4:	mov	r2, r3
 6a8:	mov	r1, #2
 6ac:	ldr	r0, [fp, #-16]
 6b0:	bl	728 <dohelp>
 6b4:	nop	{0}
 6b8:	sub	sp, fp, #4
 6bc:	ldr	fp, [sp]
 6c0:	add	sp, sp, #4
 6c4:	pop	{pc}		; (ldr pc, [sp], #4)

000006c8 <mo_uhelp>:
 6c8:	str	fp, [sp, #-8]!
 6cc:	str	lr, [sp, #4]
 6d0:	add	fp, sp, #4
 6d4:	sub	sp, sp, #16
 6d8:	str	r0, [fp, #-8]
 6dc:	str	r1, [fp, #-12]
 6e0:	str	r2, [fp, #-16]
 6e4:	str	r3, [fp, #-20]	; 0xffffffec
 6e8:	ldr	r3, [fp, #-20]	; 0xffffffec
 6ec:	cmp	r3, #1
 6f0:	ble	700 <mo_uhelp+0x38>
 6f4:	ldr	r3, [fp, #4]
 6f8:	ldr	r3, [r3, #4]
 6fc:	b	704 <mo_uhelp+0x3c>
 700:	mov	r3, #0
 704:	mov	r2, r3
 708:	mov	r1, #1
 70c:	ldr	r0, [fp, #-16]
 710:	bl	728 <dohelp>
 714:	nop	{0}
 718:	sub	sp, fp, #4
 71c:	ldr	fp, [sp]
 720:	add	sp, sp, #4
 724:	pop	{pc}		; (ldr pc, [sp], #4)

00000728 <dohelp>:
 728:	str	r4, [sp, #-12]!
 72c:	str	fp, [sp, #4]
 730:	str	lr, [sp, #8]
 734:	add	fp, sp, #8
 738:	sub	sp, sp, #44	; 0x2c
 73c:	str	r0, [fp, #-32]	; 0xffffffe0
 740:	str	r1, [fp, #-36]	; 0xffffffdc
 744:	str	r2, [fp, #-40]	; 0xffffffd8
 748:	ldr	r4, [pc, #452]	; 914 <dohelp+0x1ec>
 74c:	add	r4, pc, r4
 750:	ldr	r3, [fp, #-40]	; 0xffffffd8
 754:	cmp	r3, #0
 758:	beq	76c <dohelp+0x44>
 75c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 760:	ldrb	r3, [r3]
 764:	cmp	r3, #0
 768:	bne	778 <dohelp+0x50>
 76c:	ldr	r3, [pc, #420]	; 918 <dohelp+0x1f0>
 770:	add	r3, pc, r3
 774:	str	r3, [fp, #-40]	; 0xffffffd8
 778:	ldr	r3, [fp, #-36]	; 0xffffffdc
 77c:	and	r3, r3, #2
 780:	cmp	r3, #0
 784:	beq	798 <dohelp+0x70>
 788:	ldr	r3, [pc, #396]	; 91c <dohelp+0x1f4>
 78c:	ldr	r3, [r4, r3]
 790:	ldr	r3, [r3]
 794:	b	7a4 <dohelp+0x7c>
 798:	ldr	r3, [pc, #384]	; 920 <dohelp+0x1f8>
 79c:	ldr	r3, [r4, r3]
 7a0:	ldr	r3, [r3]
 7a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
 7a8:	mov	r0, r3
 7ac:	bl	4d8 <rb_dictionary_retrieve@plt>
 7b0:	str	r0, [fp, #-20]	; 0xffffffec
 7b4:	ldr	r3, [fp, #-20]	; 0xffffffec
 7b8:	cmp	r3, #0
 7bc:	beq	7d8 <dohelp+0xb0>
 7c0:	ldr	r3, [fp, #-20]	; 0xffffffec
 7c4:	ldr	r2, [r3, #44]	; 0x2c
 7c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
 7cc:	and	r3, r3, r2
 7d0:	cmp	r3, #0
 7d4:	bne	80c <dohelp+0xe4>
 7d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
 7dc:	add	r2, r3, #88	; 0x58
 7e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
 7e4:	str	r3, [sp]
 7e8:	mov	r3, r2
 7ec:	ldr	r2, [pc, #304]	; 924 <dohelp+0x1fc>
 7f0:	ldr	r2, [r4, r2]
 7f4:	add	r2, r2, #88	; 0x58
 7f8:	ldr	r1, [pc, #296]	; 928 <dohelp+0x200>
 7fc:	add	r1, pc, r1
 800:	ldr	r0, [fp, #-32]	; 0xffffffe0
 804:	bl	4c0 <sendto_one@plt>
 808:	b	900 <dohelp+0x1d8>
 80c:	ldr	r3, [fp, #-20]	; 0xffffffec
 810:	ldr	r3, [r3, #32]
 814:	str	r3, [fp, #-24]	; 0xffffffe8
 818:	ldr	r3, [fp, #-24]	; 0xffffffe8
 81c:	ldr	r3, [r3]
 820:	str	r3, [fp, #-28]	; 0xffffffe4
 824:	ldr	r3, [fp, #-32]	; 0xffffffe0
 828:	add	r2, r3, #88	; 0x58
 82c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 830:	ldr	r3, [r3]
 834:	str	r3, [sp, #4]
 838:	ldr	r3, [fp, #-40]	; 0xffffffd8
 83c:	str	r3, [sp]
 840:	mov	r3, r2
 844:	ldr	r2, [pc, #216]	; 924 <dohelp+0x1fc>
 848:	ldr	r2, [r4, r2]
 84c:	add	r2, r2, #88	; 0x58
 850:	ldr	r1, [pc, #212]	; 92c <dohelp+0x204>
 854:	add	r1, pc, r1
 858:	ldr	r0, [fp, #-32]	; 0xffffffe0
 85c:	bl	4c0 <sendto_one@plt>
 860:	ldr	r3, [fp, #-24]	; 0xffffffe8
 864:	ldr	r3, [r3, #8]
 868:	str	r3, [fp, #-16]
 86c:	b	8c4 <dohelp+0x19c>
 870:	ldr	r3, [fp, #-16]
 874:	ldr	r3, [r3]
 878:	str	r3, [fp, #-28]	; 0xffffffe4
 87c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 880:	add	r2, r3, #88	; 0x58
 884:	ldr	r3, [fp, #-28]	; 0xffffffe4
 888:	ldr	r3, [r3]
 88c:	str	r3, [sp, #4]
 890:	ldr	r3, [fp, #-40]	; 0xffffffd8
 894:	str	r3, [sp]
 898:	mov	r3, r2
 89c:	ldr	r2, [pc, #128]	; 924 <dohelp+0x1fc>
 8a0:	ldr	r2, [r4, r2]
 8a4:	add	r2, r2, #88	; 0x58
 8a8:	ldr	r1, [pc, #128]	; 930 <dohelp+0x208>
 8ac:	add	r1, pc, r1
 8b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
 8b4:	bl	4c0 <sendto_one@plt>
 8b8:	ldr	r3, [fp, #-16]
 8bc:	ldr	r3, [r3, #8]
 8c0:	str	r3, [fp, #-16]
 8c4:	ldr	r3, [fp, #-16]
 8c8:	cmp	r3, #0
 8cc:	bne	870 <dohelp+0x148>
 8d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 8d4:	add	r2, r3, #88	; 0x58
 8d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 8dc:	str	r3, [sp]
 8e0:	mov	r3, r2
 8e4:	ldr	r2, [pc, #56]	; 924 <dohelp+0x1fc>
 8e8:	ldr	r2, [r4, r2]
 8ec:	add	r2, r2, #88	; 0x58
 8f0:	ldr	r1, [pc, #60]	; 934 <dohelp+0x20c>
 8f4:	add	r1, pc, r1
 8f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
 8fc:	bl	4c0 <sendto_one@plt>
 900:	sub	sp, fp, #8
 904:	ldr	r4, [sp]
 908:	ldr	fp, [sp, #4]
 90c:	add	sp, sp, #8
 910:	pop	{pc}		; (ldr pc, [sp], #4)
 914:	.word	0x000108ac
 918:	.word	0x00000284
 91c:	.word	0x00000030
 920:	.word	0x0000001c
 924:	.word	0x00000034
 928:	.word	0x00000190
 92c:	.word	0x00000158
 930:	.word	0x00000114
 934:	.word	0x000000e0

Disassembly of section .fini:

00000938 <_fini>:
 938:	push	{r3, lr}
 93c:	pop	{r3, pc}
