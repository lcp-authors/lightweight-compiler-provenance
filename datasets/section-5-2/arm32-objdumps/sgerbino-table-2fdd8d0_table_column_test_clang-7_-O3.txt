
../repos/sgerbino-table-2fdd8d0/bin/table_column_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r4, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #20, 20	; 0x14000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #20, 20	; 0x14000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #20, 20	; 0x14000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #20, 20	; 0x14000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #20, 20	; 0x14000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #20, 20	; 0x14000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #20, 20	; 0x14000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #20, 20	; 0x14000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #20, 20	; 0x14000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #20, 20	; 0x14000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #20, 20	; 0x14000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #20, 20	; 0x14000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:	andeq	r5, r1, r8, lsr #10
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	andeq	r5, r1, r8, asr #9
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r6, r2, r8, asr #32
   11fa4:	andeq	r6, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r6, r2, r8, asr #32
   11fdc:	andeq	r6, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r6, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{r4, r5, r6, r7, fp, lr}
   12014:	add	fp, sp, #16
   12018:	sub	sp, sp, #56	; 0x38
   1201c:	mov	r7, sp
   12020:	mov	r0, r7
   12024:	bl	12140 <table_init@@Base>
   12028:	movw	r1, #21828	; 0x5544
   1202c:	mov	r0, r7
   12030:	mov	r2, #0
   12034:	mov	r4, #0
   12038:	movt	r1, #1
   1203c:	bl	12ccc <table_add_column@@Base>
   12040:	movw	r1, #21894	; 0x5586
   12044:	mov	r6, r0
   12048:	mov	r0, r7
   1204c:	mov	r2, #21
   12050:	movt	r1, #1
   12054:	bl	12ccc <table_add_column@@Base>
   12058:	mov	r5, r0
   1205c:	mov	r0, r7
   12060:	bl	12c38 <table_get_column_length@@Base>
   12064:	cmp	r0, #2
   12068:	beq	1207c <main@@Base+0x6c>
   1206c:	movw	r0, #21831	; 0x5547
   12070:	movt	r0, #1
   12074:	bl	11e9c <printf@plt>
   12078:	mvn	r4, #0
   1207c:	mov	r0, sp
   12080:	mov	r1, r6
   12084:	bl	12ca8 <table_get_column_name@@Base>
   12088:	movw	r1, #21828	; 0x5544
   1208c:	movt	r1, #1
   12090:	bl	11e90 <strcmp@plt>
   12094:	cmp	r0, #0
   12098:	beq	120ac <main@@Base+0x9c>
   1209c:	movw	r0, #21868	; 0x556c
   120a0:	movt	r0, #1
   120a4:	bl	11e9c <printf@plt>
   120a8:	mvn	r4, #0
   120ac:	mov	r0, sp
   120b0:	mov	r1, r5
   120b4:	bl	12ca8 <table_get_column_name@@Base>
   120b8:	movw	r1, #21894	; 0x5586
   120bc:	movt	r1, #1
   120c0:	bl	11e90 <strcmp@plt>
   120c4:	cmp	r0, #0
   120c8:	beq	120dc <main@@Base+0xcc>
   120cc:	movw	r0, #21868	; 0x556c
   120d0:	movt	r0, #1
   120d4:	bl	11e9c <printf@plt>
   120d8:	mvn	r4, #0
   120dc:	mov	r0, sp
   120e0:	bl	1219c <table_destroy@@Base>
   120e4:	mov	r0, r4
   120e8:	sub	sp, fp, #16
   120ec:	pop	{r4, r5, r6, r7, fp, pc}

000120f0 <table_new@@Base>:
   120f0:	push	{fp, lr}
   120f4:	mov	fp, sp
   120f8:	mov	r0, #56	; 0x38
   120fc:	bl	11ecc <malloc@plt>
   12100:	mov	r1, #0
   12104:	mov	r2, #10
   12108:	mov	r3, #20
   1210c:	vmov.i32	q8, #0	; 0x00000000
   12110:	str	r1, [r0]
   12114:	stmib	r0, {r1, r2}
   12118:	str	r1, [r0, #12]
   1211c:	str	r1, [r0, #16]
   12120:	str	r1, [r0, #20]
   12124:	str	r3, [r0, #24]
   12128:	str	r1, [r0, #28]
   1212c:	str	r2, [r0, #48]	; 0x30
   12130:	str	r1, [r0, #52]	; 0x34
   12134:	add	r1, r0, #32
   12138:	vst1.32	{d16-d17}, [r1]
   1213c:	pop	{fp, pc}

00012140 <table_init@@Base>:
   12140:	mov	r1, #0
   12144:	mov	r2, #10
   12148:	mov	r3, #20
   1214c:	vmov.i32	q8, #0	; 0x00000000
   12150:	str	r1, [r0]
   12154:	stmib	r0, {r1, r2}
   12158:	str	r1, [r0, #12]
   1215c:	str	r1, [r0, #16]
   12160:	str	r1, [r0, #20]
   12164:	str	r3, [r0, #24]
   12168:	str	r1, [r0, #28]
   1216c:	str	r2, [r0, #48]	; 0x30
   12170:	str	r1, [r0, #52]	; 0x34
   12174:	add	r0, r0, #32
   12178:	vst1.32	{d16-d17}, [r0]
   1217c:	bx	lr

00012180 <table_delete@@Base>:
   12180:	push	{r4, sl, fp, lr}
   12184:	add	fp, sp, #8
   12188:	mov	r4, r0
   1218c:	bl	1219c <table_destroy@@Base>
   12190:	mov	r0, r4
   12194:	pop	{r4, sl, fp, lr}
   12198:	b	11ea8 <free@plt>

0001219c <table_destroy@@Base>:
   1219c:	cmp	r0, #0
   121a0:	bxeq	lr
   121a4:	push	{r4, r5, r6, sl, fp, lr}
   121a8:	add	fp, sp, #16
   121ac:	mvn	r1, #0
   121b0:	mvn	r2, #0
   121b4:	mov	r3, #64	; 0x40
   121b8:	mov	r4, r0
   121bc:	bl	12b44 <table_notify@@Base>
   121c0:	mov	r0, r4
   121c4:	bl	13990 <table_get_row_length@@Base>
   121c8:	cmp	r0, #1
   121cc:	blt	121f0 <table_destroy@@Base+0x54>
   121d0:	mov	r5, r0
   121d4:	mov	r6, #0
   121d8:	mov	r0, r4
   121dc:	mov	r1, r6
   121e0:	bl	13938 <table_row_destroy@@Base>
   121e4:	add	r6, r6, #1
   121e8:	cmp	r5, r6
   121ec:	bne	121d8 <table_destroy@@Base+0x3c>
   121f0:	ldr	r0, [r4, #16]
   121f4:	cmp	r0, #0
   121f8:	beq	12200 <table_destroy@@Base+0x64>
   121fc:	bl	11ea8 <free@plt>
   12200:	mov	r0, r4
   12204:	bl	12c38 <table_get_column_length@@Base>
   12208:	cmp	r0, #1
   1220c:	blt	12230 <table_destroy@@Base+0x94>
   12210:	mov	r5, r0
   12214:	mov	r6, #0
   12218:	mov	r0, r4
   1221c:	mov	r1, r6
   12220:	bl	12c20 <table_column_destroy@@Base>
   12224:	add	r6, r6, #1
   12228:	cmp	r5, r6
   1222c:	bne	12218 <table_destroy@@Base+0x7c>
   12230:	ldr	r0, [r4]
   12234:	cmp	r0, #0
   12238:	beq	12240 <table_destroy@@Base+0xa4>
   1223c:	bl	11ea8 <free@plt>
   12240:	ldr	r0, [r4, #36]	; 0x24
   12244:	cmp	r0, #0
   12248:	beq	12250 <table_destroy@@Base+0xb4>
   1224c:	bl	11ea8 <free@plt>
   12250:	ldr	r0, [r4, #40]	; 0x28
   12254:	cmp	r0, #0
   12258:	beq	12260 <table_destroy@@Base+0xc4>
   1225c:	bl	11ea8 <free@plt>
   12260:	ldr	r0, [r4, #44]	; 0x2c
   12264:	cmp	r0, #0
   12268:	pop	{r4, r5, r6, sl, fp, lr}
   1226c:	beq	12274 <table_destroy@@Base+0xd8>
   12270:	b	11ea8 <free@plt>
   12274:	bx	lr

00012278 <table_dupe@@Base>:
   12278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1227c:	add	fp, sp, #28
   12280:	sub	sp, sp, #12
   12284:	mov	r4, r0
   12288:	bl	13990 <table_get_row_length@@Base>
   1228c:	mov	r8, r0
   12290:	mov	r0, r4
   12294:	bl	12c38 <table_get_column_length@@Base>
   12298:	mov	r6, r0
   1229c:	mov	r0, #56	; 0x38
   122a0:	bl	11ecc <malloc@plt>
   122a4:	mov	sl, r0
   122a8:	mov	r5, #0
   122ac:	mov	r0, #10
   122b0:	mov	r1, #20
   122b4:	cmp	r6, #1
   122b8:	vmov.i32	q8, #0	; 0x00000000
   122bc:	str	r5, [sl]
   122c0:	str	r5, [sl, #4]
   122c4:	str	r0, [sl, #8]
   122c8:	str	r5, [sl, #12]
   122cc:	str	r5, [sl, #16]
   122d0:	str	r5, [sl, #20]
   122d4:	str	r1, [sl, #24]
   122d8:	str	r5, [sl, #28]
   122dc:	str	r0, [sl, #48]	; 0x30
   122e0:	add	r0, sl, #32
   122e4:	str	r5, [sl, #52]	; 0x34
   122e8:	vst1.32	{d16-d17}, [r0]
   122ec:	blt	12328 <table_dupe@@Base+0xb0>
   122f0:	mov	r0, r4
   122f4:	mov	r1, r5
   122f8:	bl	12ca8 <table_get_column_name@@Base>
   122fc:	mov	r7, r0
   12300:	mov	r0, r4
   12304:	mov	r1, r5
   12308:	bl	12cb8 <table_get_column_data_type@@Base>
   1230c:	mov	r2, r0
   12310:	mov	r0, sl
   12314:	mov	r1, r7
   12318:	bl	12ccc <table_add_column@@Base>
   1231c:	add	r5, r5, #1
   12320:	cmp	r6, r5
   12324:	bne	122f0 <table_dupe@@Base+0x78>
   12328:	cmp	r8, #1
   1232c:	blt	128a8 <table_dupe@@Base+0x630>
   12330:	mov	r5, #0
   12334:	add	r9, sp, #8
   12338:	mov	r0, sl
   1233c:	bl	13998 <table_add_row@@Base>
   12340:	cmp	r6, #1
   12344:	blt	1289c <table_dupe@@Base+0x624>
   12348:	mov	r7, #0
   1234c:	mov	r0, r4
   12350:	mov	r1, r7
   12354:	bl	12cb8 <table_get_column_data_type@@Base>
   12358:	cmp	r0, #23
   1235c:	bhi	123ec <table_dupe@@Base+0x174>
   12360:	add	r1, pc, #0
   12364:	ldr	pc, [r1, r0, lsl #2]
   12368:	andeq	r2, r1, r8, asr #7
   1236c:	strdeq	r2, [r1], -ip
   12370:	andeq	r2, r1, r0, lsr r4
   12374:	andeq	r2, r1, r4, ror #8
   12378:	muleq	r1, r8, r4
   1237c:	andeq	r2, r1, ip, asr #9
   12380:	andeq	r2, r1, r0, lsl #10
   12384:	andeq	r2, r1, r4, lsr r5
   12388:	andeq	r2, r1, r8, ror #10
   1238c:	muleq	r1, ip, r5
   12390:	ldrdeq	r2, [r1], -r0
   12394:	andeq	r2, r1, r4, lsl #12
   12398:	andeq	r2, r1, r8, lsr r6
   1239c:	andeq	r2, r1, ip, ror #12
   123a0:	andeq	r2, r1, r0, lsr #13
   123a4:	ldrdeq	r2, [r1], -r4
   123a8:	andeq	r2, r1, r8, lsl #14
   123ac:	andeq	r2, r1, r8, lsr r7
   123b0:	andeq	r2, r1, r8, ror #14
   123b4:	muleq	r1, r8, r7
   123b8:	andeq	r2, r1, ip, asr #15
   123bc:	andeq	r2, r1, r0, lsl #16
   123c0:	andeq	r2, r1, r4, lsr r8
   123c4:	andeq	r2, r1, r8, ror #16
   123c8:	mov	r0, r4
   123cc:	mov	r1, r5
   123d0:	mov	r2, r7
   123d4:	bl	136e8 <table_get_int@@Base>
   123d8:	mov	r3, r0
   123dc:	mov	r0, sl
   123e0:	mov	r1, r5
   123e4:	mov	r2, r7
   123e8:	bl	13ef0 <table_set_int@@Base>
   123ec:	add	r7, r7, #1
   123f0:	cmp	r6, r7
   123f4:	bne	1234c <table_dupe@@Base+0xd4>
   123f8:	b	1289c <table_dupe@@Base+0x624>
   123fc:	mov	r0, r4
   12400:	mov	r1, r5
   12404:	mov	r2, r7
   12408:	bl	13700 <table_get_uint@@Base>
   1240c:	mov	r3, r0
   12410:	mov	r0, sl
   12414:	mov	r1, r5
   12418:	mov	r2, r7
   1241c:	bl	13f70 <table_set_uint@@Base>
   12420:	add	r7, r7, #1
   12424:	cmp	r6, r7
   12428:	bne	1234c <table_dupe@@Base+0xd4>
   1242c:	b	1289c <table_dupe@@Base+0x624>
   12430:	mov	r0, r4
   12434:	mov	r1, r5
   12438:	mov	r2, r7
   1243c:	bl	13718 <table_get_int8@@Base>
   12440:	mov	r3, r0
   12444:	mov	r0, sl
   12448:	mov	r1, r5
   1244c:	mov	r2, r7
   12450:	bl	13ff0 <table_set_int8@@Base>
   12454:	add	r7, r7, #1
   12458:	cmp	r6, r7
   1245c:	bne	1234c <table_dupe@@Base+0xd4>
   12460:	b	1289c <table_dupe@@Base+0x624>
   12464:	mov	r0, r4
   12468:	mov	r1, r5
   1246c:	mov	r2, r7
   12470:	bl	13730 <table_get_uint8@@Base>
   12474:	mov	r3, r0
   12478:	mov	r0, sl
   1247c:	mov	r1, r5
   12480:	mov	r2, r7
   12484:	bl	14070 <table_set_uint8@@Base>
   12488:	add	r7, r7, #1
   1248c:	cmp	r6, r7
   12490:	bne	1234c <table_dupe@@Base+0xd4>
   12494:	b	1289c <table_dupe@@Base+0x624>
   12498:	mov	r0, r4
   1249c:	mov	r1, r5
   124a0:	mov	r2, r7
   124a4:	bl	13748 <table_get_int16@@Base>
   124a8:	mov	r3, r0
   124ac:	mov	r0, sl
   124b0:	mov	r1, r5
   124b4:	mov	r2, r7
   124b8:	bl	140f0 <table_set_int16@@Base>
   124bc:	add	r7, r7, #1
   124c0:	cmp	r6, r7
   124c4:	bne	1234c <table_dupe@@Base+0xd4>
   124c8:	b	1289c <table_dupe@@Base+0x624>
   124cc:	mov	r0, r4
   124d0:	mov	r1, r5
   124d4:	mov	r2, r7
   124d8:	bl	13760 <table_get_uint16@@Base>
   124dc:	mov	r3, r0
   124e0:	mov	r0, sl
   124e4:	mov	r1, r5
   124e8:	mov	r2, r7
   124ec:	bl	14170 <table_set_uint16@@Base>
   124f0:	add	r7, r7, #1
   124f4:	cmp	r6, r7
   124f8:	bne	1234c <table_dupe@@Base+0xd4>
   124fc:	b	1289c <table_dupe@@Base+0x624>
   12500:	mov	r0, r4
   12504:	mov	r1, r5
   12508:	mov	r2, r7
   1250c:	bl	13778 <table_get_int32@@Base>
   12510:	mov	r3, r0
   12514:	mov	r0, sl
   12518:	mov	r1, r5
   1251c:	mov	r2, r7
   12520:	bl	141f0 <table_set_int32@@Base>
   12524:	add	r7, r7, #1
   12528:	cmp	r6, r7
   1252c:	bne	1234c <table_dupe@@Base+0xd4>
   12530:	b	1289c <table_dupe@@Base+0x624>
   12534:	mov	r0, r4
   12538:	mov	r1, r5
   1253c:	mov	r2, r7
   12540:	bl	13790 <table_get_uint32@@Base>
   12544:	mov	r3, r0
   12548:	mov	r0, sl
   1254c:	mov	r1, r5
   12550:	mov	r2, r7
   12554:	bl	14270 <table_set_uint32@@Base>
   12558:	add	r7, r7, #1
   1255c:	cmp	r6, r7
   12560:	bne	1234c <table_dupe@@Base+0xd4>
   12564:	b	1289c <table_dupe@@Base+0x624>
   12568:	mov	r0, r4
   1256c:	mov	r1, r5
   12570:	mov	r2, r7
   12574:	bl	137a8 <table_get_int64@@Base>
   12578:	stm	sp, {r0, r1}
   1257c:	mov	r0, sl
   12580:	mov	r1, r5
   12584:	mov	r2, r7
   12588:	bl	142f0 <table_set_int64@@Base>
   1258c:	add	r7, r7, #1
   12590:	cmp	r6, r7
   12594:	bne	1234c <table_dupe@@Base+0xd4>
   12598:	b	1289c <table_dupe@@Base+0x624>
   1259c:	mov	r0, r4
   125a0:	mov	r1, r5
   125a4:	mov	r2, r7
   125a8:	bl	137c0 <table_get_uint64@@Base>
   125ac:	stm	sp, {r0, r1}
   125b0:	mov	r0, sl
   125b4:	mov	r1, r5
   125b8:	mov	r2, r7
   125bc:	bl	14378 <table_set_uint64@@Base>
   125c0:	add	r7, r7, #1
   125c4:	cmp	r6, r7
   125c8:	bne	1234c <table_dupe@@Base+0xd4>
   125cc:	b	1289c <table_dupe@@Base+0x624>
   125d0:	mov	r0, r4
   125d4:	mov	r1, r5
   125d8:	mov	r2, r7
   125dc:	bl	137d8 <table_get_short@@Base>
   125e0:	mov	r3, r0
   125e4:	mov	r0, sl
   125e8:	mov	r1, r5
   125ec:	mov	r2, r7
   125f0:	bl	14400 <table_set_short@@Base>
   125f4:	add	r7, r7, #1
   125f8:	cmp	r6, r7
   125fc:	bne	1234c <table_dupe@@Base+0xd4>
   12600:	b	1289c <table_dupe@@Base+0x624>
   12604:	mov	r0, r4
   12608:	mov	r1, r5
   1260c:	mov	r2, r7
   12610:	bl	137f0 <table_get_ushort@@Base>
   12614:	mov	r3, r0
   12618:	mov	r0, sl
   1261c:	mov	r1, r5
   12620:	mov	r2, r7
   12624:	bl	14480 <table_set_ushort@@Base>
   12628:	add	r7, r7, #1
   1262c:	cmp	r6, r7
   12630:	bne	1234c <table_dupe@@Base+0xd4>
   12634:	b	1289c <table_dupe@@Base+0x624>
   12638:	mov	r0, r4
   1263c:	mov	r1, r5
   12640:	mov	r2, r7
   12644:	bl	13808 <table_get_long@@Base>
   12648:	mov	r3, r0
   1264c:	mov	r0, sl
   12650:	mov	r1, r5
   12654:	mov	r2, r7
   12658:	bl	14500 <table_set_long@@Base>
   1265c:	add	r7, r7, #1
   12660:	cmp	r6, r7
   12664:	bne	1234c <table_dupe@@Base+0xd4>
   12668:	b	1289c <table_dupe@@Base+0x624>
   1266c:	mov	r0, r4
   12670:	mov	r1, r5
   12674:	mov	r2, r7
   12678:	bl	13820 <table_get_ulong@@Base>
   1267c:	mov	r3, r0
   12680:	mov	r0, sl
   12684:	mov	r1, r5
   12688:	mov	r2, r7
   1268c:	bl	14580 <table_set_ulong@@Base>
   12690:	add	r7, r7, #1
   12694:	cmp	r6, r7
   12698:	bne	1234c <table_dupe@@Base+0xd4>
   1269c:	b	1289c <table_dupe@@Base+0x624>
   126a0:	mov	r0, r4
   126a4:	mov	r1, r5
   126a8:	mov	r2, r7
   126ac:	bl	13838 <table_get_llong@@Base>
   126b0:	stm	sp, {r0, r1}
   126b4:	mov	r0, sl
   126b8:	mov	r1, r5
   126bc:	mov	r2, r7
   126c0:	bl	14600 <table_set_llong@@Base>
   126c4:	add	r7, r7, #1
   126c8:	cmp	r6, r7
   126cc:	bne	1234c <table_dupe@@Base+0xd4>
   126d0:	b	1289c <table_dupe@@Base+0x624>
   126d4:	mov	r0, r4
   126d8:	mov	r1, r5
   126dc:	mov	r2, r7
   126e0:	bl	13850 <table_get_ullong@@Base>
   126e4:	stm	sp, {r0, r1}
   126e8:	mov	r0, sl
   126ec:	mov	r1, r5
   126f0:	mov	r2, r7
   126f4:	bl	14688 <table_set_ullong@@Base>
   126f8:	add	r7, r7, #1
   126fc:	cmp	r6, r7
   12700:	bne	1234c <table_dupe@@Base+0xd4>
   12704:	b	1289c <table_dupe@@Base+0x624>
   12708:	mov	r0, r4
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	13868 <table_get_float@@Base>
   12718:	mov	r0, sl
   1271c:	mov	r1, r5
   12720:	mov	r2, r7
   12724:	bl	14710 <table_set_float@@Base>
   12728:	add	r7, r7, #1
   1272c:	cmp	r6, r7
   12730:	bne	1234c <table_dupe@@Base+0xd4>
   12734:	b	1289c <table_dupe@@Base+0x624>
   12738:	mov	r0, r4
   1273c:	mov	r1, r5
   12740:	mov	r2, r7
   12744:	bl	13880 <table_get_double@@Base>
   12748:	mov	r0, sl
   1274c:	mov	r1, r5
   12750:	mov	r2, r7
   12754:	bl	1479c <table_set_double@@Base>
   12758:	add	r7, r7, #1
   1275c:	cmp	r6, r7
   12760:	bne	1234c <table_dupe@@Base+0xd4>
   12764:	b	1289c <table_dupe@@Base+0x624>
   12768:	mov	r0, r4
   1276c:	mov	r1, r5
   12770:	mov	r2, r7
   12774:	bl	13898 <table_get_ldouble@@Base>
   12778:	mov	r0, sl
   1277c:	mov	r1, r5
   12780:	mov	r2, r7
   12784:	bl	14824 <table_set_ldouble@@Base>
   12788:	add	r7, r7, #1
   1278c:	cmp	r6, r7
   12790:	bne	1234c <table_dupe@@Base+0xd4>
   12794:	b	1289c <table_dupe@@Base+0x624>
   12798:	mov	r0, r4
   1279c:	mov	r1, r5
   127a0:	mov	r2, r7
   127a4:	bl	138b0 <table_get_char@@Base>
   127a8:	mov	r3, r0
   127ac:	mov	r0, sl
   127b0:	mov	r1, r5
   127b4:	mov	r2, r7
   127b8:	bl	14934 <table_set_char@@Base>
   127bc:	add	r7, r7, #1
   127c0:	cmp	r6, r7
   127c4:	bne	1234c <table_dupe@@Base+0xd4>
   127c8:	b	1289c <table_dupe@@Base+0x624>
   127cc:	mov	r0, r4
   127d0:	mov	r1, r5
   127d4:	mov	r2, r7
   127d8:	bl	138c8 <table_get_uchar@@Base>
   127dc:	mov	r3, r0
   127e0:	mov	r0, sl
   127e4:	mov	r1, r5
   127e8:	mov	r2, r7
   127ec:	bl	149b4 <table_set_uchar@@Base>
   127f0:	add	r7, r7, #1
   127f4:	cmp	r6, r7
   127f8:	bne	1234c <table_dupe@@Base+0xd4>
   127fc:	b	1289c <table_dupe@@Base+0x624>
   12800:	mov	r0, r4
   12804:	mov	r1, r5
   12808:	mov	r2, r7
   1280c:	bl	138e0 <table_get_string@@Base>
   12810:	mov	r3, r0
   12814:	mov	r0, sl
   12818:	mov	r1, r5
   1281c:	mov	r2, r7
   12820:	bl	148ac <table_set_string@@Base>
   12824:	add	r7, r7, #1
   12828:	cmp	r6, r7
   1282c:	bne	1234c <table_dupe@@Base+0xd4>
   12830:	b	1289c <table_dupe@@Base+0x624>
   12834:	mov	r0, r4
   12838:	mov	r1, r5
   1283c:	mov	r2, r7
   12840:	bl	136d0 <table_get_bool@@Base>
   12844:	mov	r3, r0
   12848:	mov	r0, sl
   1284c:	mov	r1, r5
   12850:	mov	r2, r7
   12854:	bl	13e70 <table_set_bool@@Base>
   12858:	add	r7, r7, #1
   1285c:	cmp	r6, r7
   12860:	bne	1234c <table_dupe@@Base+0xd4>
   12864:	b	1289c <table_dupe@@Base+0x624>
   12868:	mov	r0, r4
   1286c:	mov	r1, r5
   12870:	mov	r2, r7
   12874:	bl	138f4 <table_get_ptr@@Base>
   12878:	str	r0, [sp, #8]
   1287c:	mov	r0, sl
   12880:	mov	r1, r5
   12884:	mov	r2, r7
   12888:	mov	r3, r9
   1288c:	bl	14a34 <table_set_ptr@@Base>
   12890:	add	r7, r7, #1
   12894:	cmp	r6, r7
   12898:	bne	1234c <table_dupe@@Base+0xd4>
   1289c:	add	r5, r5, #1
   128a0:	cmp	r5, r8
   128a4:	bne	12338 <table_dupe@@Base+0xc0>
   128a8:	mov	r0, sl
   128ac:	sub	sp, fp, #28
   128b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000128b4 <table_get_major_version@@Base>:
   128b4:	mov	r0, #0
   128b8:	bx	lr

000128bc <table_get_minor_version@@Base>:
   128bc:	mov	r0, #0
   128c0:	bx	lr

000128c4 <table_get_patch_version@@Base>:
   128c4:	mov	r0, #0
   128c8:	bx	lr

000128cc <table_get_version@@Base>:
   128cc:	movw	r0, #22048	; 0x5620
   128d0:	movt	r0, #1
   128d4:	bx	lr

000128d8 <table_get_callback_length@@Base>:
   128d8:	ldr	r0, [r0, #32]
   128dc:	bx	lr

000128e0 <table_register_callback@@Base>:
   128e0:	push	{r4, r5, r6, r7, fp, lr}
   128e4:	add	fp, sp, #16
   128e8:	mov	r5, r0
   128ec:	ldr	r0, [r0, #32]
   128f0:	mov	r4, r3
   128f4:	mov	r6, r2
   128f8:	mov	r7, r1
   128fc:	cmp	r0, #1
   12900:	blt	12934 <table_register_callback@@Base+0x54>
   12904:	ldr	r2, [r5, #36]	; 0x24
   12908:	mov	r1, #0
   1290c:	ldr	r3, [r2, r1, lsl #2]
   12910:	cmp	r3, r7
   12914:	bne	12928 <table_register_callback@@Base+0x48>
   12918:	ldr	r3, [r5, #40]	; 0x28
   1291c:	ldr	r3, [r3, r1, lsl #2]
   12920:	cmp	r3, r6
   12924:	beq	129b8 <table_register_callback@@Base+0xd8>
   12928:	add	r1, r1, #1
   1292c:	cmp	r1, r0
   12930:	blt	1290c <table_register_callback@@Base+0x2c>
   12934:	ldr	r1, [r5, #48]	; 0x30
   12938:	udiv	r2, r0, r1
   1293c:	mls	r2, r2, r1, r0
   12940:	cmp	r2, #0
   12944:	bne	12990 <table_register_callback@@Base+0xb0>
   12948:	ldr	r2, [r5, #52]	; 0x34
   1294c:	ldr	r0, [r5, #36]	; 0x24
   12950:	add	r1, r2, r1
   12954:	str	r1, [r5, #52]	; 0x34
   12958:	lsl	r1, r1, #2
   1295c:	bl	11eb4 <realloc@plt>
   12960:	str	r0, [r5, #36]	; 0x24
   12964:	ldr	r1, [r5, #52]	; 0x34
   12968:	ldr	r0, [r5, #40]	; 0x28
   1296c:	lsl	r1, r1, #2
   12970:	bl	11eb4 <realloc@plt>
   12974:	str	r0, [r5, #40]	; 0x28
   12978:	ldr	r1, [r5, #52]	; 0x34
   1297c:	ldr	r0, [r5, #44]	; 0x2c
   12980:	lsl	r1, r1, #2
   12984:	bl	11eb4 <realloc@plt>
   12988:	str	r0, [r5, #44]	; 0x2c
   1298c:	ldr	r0, [r5, #32]
   12990:	ldr	r1, [r5, #36]	; 0x24
   12994:	str	r7, [r1, r0, lsl #2]
   12998:	ldr	r1, [r5, #40]	; 0x28
   1299c:	str	r6, [r1, r0, lsl #2]
   129a0:	ldr	r1, [r5, #44]	; 0x2c
   129a4:	str	r4, [r1, r0, lsl #2]
   129a8:	ldr	r0, [r5, #32]
   129ac:	add	r0, r0, #1
   129b0:	str	r0, [r5, #32]
   129b4:	pop	{r4, r5, r6, r7, fp, pc}
   129b8:	cmp	r1, #0
   129bc:	ldrne	r0, [r5, #44]	; 0x2c
   129c0:	ldrne	r2, [r0, r1, lsl #2]
   129c4:	orrne	r2, r2, r4
   129c8:	strne	r2, [r0, r1, lsl #2]
   129cc:	popne	{r4, r5, r6, r7, fp, pc}
   129d0:	b	12934 <table_register_callback@@Base+0x54>

000129d4 <table_unregister_callback@@Base>:
   129d4:	push	{r4, r5, r6, sl, fp, lr}
   129d8:	add	fp, sp, #16
   129dc:	ldr	r4, [r0, #32]
   129e0:	cmp	r4, #1
   129e4:	blt	12a1c <table_unregister_callback@@Base+0x48>
   129e8:	ldr	r3, [r0, #36]	; 0x24
   129ec:	mov	r6, r0
   129f0:	mov	r0, #0
   129f4:	ldr	r5, [r3, r0, lsl #2]
   129f8:	cmp	r5, r1
   129fc:	bne	12a10 <table_unregister_callback@@Base+0x3c>
   12a00:	ldr	r5, [r6, #40]	; 0x28
   12a04:	ldr	r5, [r5, r0, lsl #2]
   12a08:	cmp	r5, r2
   12a0c:	beq	12a20 <table_unregister_callback@@Base+0x4c>
   12a10:	add	r0, r0, #1
   12a14:	cmp	r0, r4
   12a18:	blt	129f4 <table_unregister_callback@@Base+0x20>
   12a1c:	pop	{r4, r5, r6, sl, fp, pc}
   12a20:	sub	r1, r4, #1
   12a24:	cmp	r0, r1
   12a28:	bge	12ab8 <table_unregister_callback@@Base+0xe4>
   12a2c:	add	r1, r3, r0, lsl #2
   12a30:	ldr	r1, [r1, #4]
   12a34:	str	r1, [r3, r0, lsl #2]
   12a38:	ldr	r1, [r6, #40]	; 0x28
   12a3c:	add	r2, r1, r0, lsl #2
   12a40:	ldr	r2, [r2, #4]
   12a44:	str	r2, [r1, r0, lsl #2]
   12a48:	ldr	r1, [r6, #44]	; 0x2c
   12a4c:	add	r2, r1, r0, lsl #2
   12a50:	ldr	r2, [r2, #4]
   12a54:	str	r2, [r1, r0, lsl #2]
   12a58:	add	r2, r0, #1
   12a5c:	ldr	r1, [r6, #32]
   12a60:	sub	r1, r1, #1
   12a64:	cmp	r2, r1
   12a68:	bge	12ab8 <table_unregister_callback@@Base+0xe4>
   12a6c:	ldr	r1, [r6, #36]	; 0x24
   12a70:	add	r1, r1, r0, lsl #2
   12a74:	ldr	r2, [r1, #8]
   12a78:	str	r2, [r1, #4]
   12a7c:	ldr	r1, [r6, #40]	; 0x28
   12a80:	add	r1, r1, r0, lsl #2
   12a84:	ldr	r2, [r1, #8]
   12a88:	str	r2, [r1, #4]
   12a8c:	ldr	r1, [r6, #44]	; 0x2c
   12a90:	add	r1, r1, r0, lsl #2
   12a94:	ldr	r2, [r1, #8]
   12a98:	str	r2, [r1, #4]
   12a9c:	add	r2, r0, #1
   12aa0:	add	r0, r0, #2
   12aa4:	ldr	r1, [r6, #32]
   12aa8:	sub	r1, r1, #1
   12aac:	cmp	r0, r1
   12ab0:	mov	r0, r2
   12ab4:	blt	12a6c <table_unregister_callback@@Base+0x98>
   12ab8:	str	r1, [r6, #32]
   12abc:	ldr	r2, [r6, #48]	; 0x30
   12ac0:	udiv	r0, r1, r2
   12ac4:	mls	r0, r0, r2, r1
   12ac8:	cmp	r0, #0
   12acc:	popne	{r4, r5, r6, sl, fp, pc}
   12ad0:	ldr	r1, [r6, #52]	; 0x34
   12ad4:	ldr	r0, [r6, #36]	; 0x24
   12ad8:	subs	r1, r1, r2
   12adc:	str	r1, [r6, #52]	; 0x34
   12ae0:	beq	12b1c <table_unregister_callback@@Base+0x148>
   12ae4:	lsl	r1, r1, #2
   12ae8:	bl	11eb4 <realloc@plt>
   12aec:	str	r0, [r6, #36]	; 0x24
   12af0:	ldr	r1, [r6, #52]	; 0x34
   12af4:	ldr	r0, [r6, #40]	; 0x28
   12af8:	lsl	r1, r1, #2
   12afc:	bl	11eb4 <realloc@plt>
   12b00:	str	r0, [r6, #40]	; 0x28
   12b04:	ldr	r1, [r6, #52]	; 0x34
   12b08:	ldr	r0, [r6, #44]	; 0x2c
   12b0c:	lsl	r1, r1, #2
   12b10:	bl	11eb4 <realloc@plt>
   12b14:	str	r0, [r6, #44]	; 0x2c
   12b18:	pop	{r4, r5, r6, sl, fp, pc}
   12b1c:	bl	11ea8 <free@plt>
   12b20:	ldr	r0, [r6, #40]	; 0x28
   12b24:	bl	11ea8 <free@plt>
   12b28:	ldr	r0, [r6, #44]	; 0x2c
   12b2c:	bl	11ea8 <free@plt>
   12b30:	mov	r0, #0
   12b34:	str	r0, [r6, #36]	; 0x24
   12b38:	str	r0, [r6, #40]	; 0x28
   12b3c:	str	r0, [r6, #44]	; 0x2c
   12b40:	pop	{r4, r5, r6, sl, fp, pc}

00012b44 <table_notify@@Base>:
   12b44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b48:	add	fp, sp, #24
   12b4c:	sub	sp, sp, #8
   12b50:	mov	r7, r0
   12b54:	ldr	r0, [r0, #32]
   12b58:	cmp	r0, #1
   12b5c:	blt	12bb8 <table_notify@@Base+0x74>
   12b60:	mov	r4, r3
   12b64:	mov	r8, r2
   12b68:	mov	r9, r1
   12b6c:	mov	r5, #0
   12b70:	ldr	r1, [r7, #44]	; 0x2c
   12b74:	ldr	r1, [r1, r5, lsl #2]
   12b78:	tst	r1, r4
   12b7c:	beq	12bac <table_notify@@Base+0x68>
   12b80:	ldr	r0, [r7, #36]	; 0x24
   12b84:	ldr	r1, [r7, #40]	; 0x28
   12b88:	mov	r2, r8
   12b8c:	mov	r3, r4
   12b90:	ldr	r6, [r0, r5, lsl #2]
   12b94:	ldr	r0, [r1, r5, lsl #2]
   12b98:	mov	r1, r9
   12b9c:	str	r0, [sp]
   12ba0:	mov	r0, r7
   12ba4:	blx	r6
   12ba8:	ldr	r0, [r7, #32]
   12bac:	add	r5, r5, #1
   12bb0:	cmp	r5, r0
   12bb4:	blt	12b70 <table_notify@@Base+0x2c>
   12bb8:	sub	sp, fp, #24
   12bbc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012bc0 <table_column_init@@Base>:
   12bc0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12bc4:	add	fp, sp, #24
   12bc8:	ldr	r7, [r0]
   12bcc:	mov	r0, r2
   12bd0:	mov	r4, r3
   12bd4:	mov	r5, r2
   12bd8:	mov	r6, r1
   12bdc:	bl	11ef0 <strlen@plt>
   12be0:	add	r0, r0, #1
   12be4:	bl	11ecc <malloc@plt>
   12be8:	ldr	r8, [fp, #8]
   12bec:	add	r6, r6, r6, lsl #1
   12bf0:	cmp	r0, #0
   12bf4:	str	r0, [r7, r6, lsl #2]
   12bf8:	beq	12c04 <table_column_init@@Base+0x44>
   12bfc:	mov	r1, r5
   12c00:	bl	11ec0 <strcpy@plt>
   12c04:	add	r0, r7, r6, lsl #2
   12c08:	stmib	r0, {r4, r8}
   12c0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012c10 <table_get_col_ptr@@Base>:
   12c10:	ldr	r0, [r0]
   12c14:	add	r1, r1, r1, lsl #1
   12c18:	add	r0, r0, r1, lsl #2
   12c1c:	bx	lr

00012c20 <table_column_destroy@@Base>:
   12c20:	ldr	r0, [r0]
   12c24:	add	r1, r1, r1, lsl #1
   12c28:	ldr	r0, [r0, r1, lsl #2]
   12c2c:	cmp	r0, #0
   12c30:	bxeq	lr
   12c34:	b	11ea8 <free@plt>

00012c38 <table_get_column_length@@Base>:
   12c38:	ldr	r0, [r0, #4]
   12c3c:	bx	lr

00012c40 <table_get_column@@Base>:
   12c40:	push	{r4, r5, r6, r7, fp, lr}
   12c44:	add	fp, sp, #16
   12c48:	ldr	r6, [r0, #4]
   12c4c:	cmp	r6, #1
   12c50:	blt	12c94 <table_get_column@@Base+0x54>
   12c54:	ldr	r7, [r0]
   12c58:	mov	r5, r1
   12c5c:	mov	r4, #0
   12c60:	ldr	r0, [r7]
   12c64:	mov	r1, r5
   12c68:	bl	11e90 <strcmp@plt>
   12c6c:	cmp	r0, #0
   12c70:	beq	12c84 <table_get_column@@Base+0x44>
   12c74:	add	r4, r4, #1
   12c78:	add	r7, r7, #12
   12c7c:	cmp	r4, r6
   12c80:	blt	12c60 <table_get_column@@Base+0x20>
   12c84:	cmp	r4, r6
   12c88:	mvneq	r4, #0
   12c8c:	mov	r0, r4
   12c90:	pop	{r4, r5, r6, r7, fp, pc}
   12c94:	mov	r4, #0
   12c98:	cmp	r4, r6
   12c9c:	mvneq	r4, #0
   12ca0:	mov	r0, r4
   12ca4:	pop	{r4, r5, r6, r7, fp, pc}

00012ca8 <table_get_column_name@@Base>:
   12ca8:	ldr	r0, [r0]
   12cac:	add	r1, r1, r1, lsl #1
   12cb0:	ldr	r0, [r0, r1, lsl #2]
   12cb4:	bx	lr

00012cb8 <table_get_column_data_type@@Base>:
   12cb8:	ldr	r0, [r0]
   12cbc:	add	r1, r1, r1, lsl #1
   12cc0:	add	r0, r0, r1, lsl #2
   12cc4:	ldr	r0, [r0, #4]
   12cc8:	bx	lr

00012ccc <table_add_column@@Base>:
   12ccc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cd0:	add	fp, sp, #28
   12cd4:	sub	sp, sp, #4
   12cd8:	mov	r4, r0
   12cdc:	mov	r8, r1
   12ce0:	ldr	r0, [r0, #4]
   12ce4:	mov	r9, r2
   12ce8:	ldr	r1, [r4, #8]
   12cec:	udiv	r2, r0, r1
   12cf0:	mls	r0, r2, r1, r0
   12cf4:	cmp	r0, #0
   12cf8:	bne	12d64 <table_add_column@@Base+0x98>
   12cfc:	ldr	r2, [r4, #12]
   12d00:	ldr	r0, [r4]
   12d04:	add	r1, r2, r1
   12d08:	str	r1, [r4, #12]
   12d0c:	add	r1, r1, r1, lsl #1
   12d10:	lsl	r1, r1, #2
   12d14:	bl	11eb4 <realloc@plt>
   12d18:	str	r0, [r4]
   12d1c:	mov	r0, r4
   12d20:	bl	13990 <table_get_row_length@@Base>
   12d24:	cmp	r0, #1
   12d28:	blt	12d64 <table_add_column@@Base+0x98>
   12d2c:	mov	r6, r0
   12d30:	mov	r5, #0
   12d34:	mov	r0, r4
   12d38:	mov	r1, r5
   12d3c:	bl	1392c <table_get_row_ptr@@Base>
   12d40:	ldr	r1, [r4, #12]
   12d44:	mov	r7, r0
   12d48:	ldr	r0, [r0]
   12d4c:	lsl	r1, r1, #2
   12d50:	bl	11eb4 <realloc@plt>
   12d54:	add	r5, r5, #1
   12d58:	str	r0, [r7]
   12d5c:	cmp	r6, r5
   12d60:	bne	12d34 <table_add_column@@Base+0x68>
   12d64:	mov	r0, r4
   12d68:	bl	13990 <table_get_row_length@@Base>
   12d6c:	ldr	r6, [r4, #4]
   12d70:	mov	r7, r0
   12d74:	mov	r0, r9
   12d78:	bl	136a4 <table_get_default_compare_function_for_data_type@@Base>
   12d7c:	ldr	r5, [r4]
   12d80:	mov	sl, r0
   12d84:	mov	r0, r8
   12d88:	bl	11ef0 <strlen@plt>
   12d8c:	add	r0, r0, #1
   12d90:	bl	11ecc <malloc@plt>
   12d94:	mov	r1, r8
   12d98:	add	r8, r6, r6, lsl #1
   12d9c:	cmp	r0, #0
   12da0:	str	r0, [r5, r8, lsl #2]
   12da4:	beq	12dac <table_add_column@@Base+0xe0>
   12da8:	bl	11ec0 <strcpy@plt>
   12dac:	add	r0, r5, r8, lsl #2
   12db0:	cmp	r7, #1
   12db4:	stmib	r0, {r9, sl}
   12db8:	blt	12ddc <table_add_column@@Base+0x110>
   12dbc:	mov	r5, #0
   12dc0:	mov	r0, r4
   12dc4:	mov	r1, r5
   12dc8:	mov	r2, r6
   12dcc:	bl	14a90 <table_cell_init@@Base>
   12dd0:	add	r5, r5, #1
   12dd4:	cmp	r7, r5
   12dd8:	bne	12dc0 <table_add_column@@Base+0xf4>
   12ddc:	ldr	r2, [r4, #4]
   12de0:	mov	r0, r4
   12de4:	mvn	r1, #0
   12de8:	mov	r3, #8
   12dec:	bl	12b44 <table_notify@@Base>
   12df0:	ldr	r0, [r4, #4]
   12df4:	add	r1, r0, #1
   12df8:	str	r1, [r4, #4]
   12dfc:	sub	sp, fp, #28
   12e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012e04 <table_remove_column@@Base>:
   12e04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12e08:	add	fp, sp, #24
   12e0c:	mov	r5, r0
   12e10:	ldr	r0, [r0]
   12e14:	add	r6, r1, r1, lsl #1
   12e18:	mov	r9, r1
   12e1c:	ldr	r0, [r0, r6, lsl #2]
   12e20:	cmp	r0, #0
   12e24:	beq	12e2c <table_remove_column@@Base+0x28>
   12e28:	bl	11ea8 <free@plt>
   12e2c:	ldr	r0, [r5, #4]
   12e30:	sub	r4, r0, #1
   12e34:	cmp	r4, r9
   12e38:	ble	12e68 <table_remove_column@@Base+0x64>
   12e3c:	sub	r0, r4, r9
   12e40:	lsl	r1, r6, #2
   12e44:	ldr	r2, [r5]
   12e48:	subs	r0, r0, #1
   12e4c:	add	r2, r2, r1
   12e50:	add	r1, r1, #12
   12e54:	vldr	d16, [r2, #12]
   12e58:	ldr	r3, [r2, #20]
   12e5c:	str	r3, [r2, #8]
   12e60:	vstr	d16, [r2]
   12e64:	bne	12e44 <table_remove_column@@Base+0x40>
   12e68:	mov	r0, r5
   12e6c:	bl	13990 <table_get_row_length@@Base>
   12e70:	cmp	r0, #1
   12e74:	blt	12efc <table_remove_column@@Base+0xf8>
   12e78:	mov	r6, r0
   12e7c:	mov	r7, #0
   12e80:	cmp	r4, r9
   12e84:	ble	12ed4 <table_remove_column@@Base+0xd0>
   12e88:	mov	r0, r5
   12e8c:	mov	r1, r7
   12e90:	mov	r2, r9
   12e94:	bl	14acc <table_cell_destroy@@Base>
   12e98:	mov	r0, r5
   12e9c:	mov	r1, r7
   12ea0:	bl	1392c <table_get_row_ptr@@Base>
   12ea4:	mov	r1, r9
   12ea8:	ldr	r2, [r0]
   12eac:	add	r3, r2, r1, lsl #2
   12eb0:	ldr	r3, [r3, #4]
   12eb4:	str	r3, [r2, r1, lsl #2]
   12eb8:	add	r1, r1, #1
   12ebc:	cmp	r4, r1
   12ec0:	bne	12ea8 <table_remove_column@@Base+0xa4>
   12ec4:	add	r7, r7, #1
   12ec8:	cmp	r7, r6
   12ecc:	bne	12e88 <table_remove_column@@Base+0x84>
   12ed0:	b	12efc <table_remove_column@@Base+0xf8>
   12ed4:	mov	r0, r5
   12ed8:	mov	r1, r7
   12edc:	mov	r2, r9
   12ee0:	bl	14acc <table_cell_destroy@@Base>
   12ee4:	mov	r0, r5
   12ee8:	mov	r1, r7
   12eec:	bl	1392c <table_get_row_ptr@@Base>
   12ef0:	add	r7, r7, #1
   12ef4:	cmp	r6, r7
   12ef8:	bne	12ed4 <table_remove_column@@Base+0xd0>
   12efc:	ldmib	r5, {r0, r1}
   12f00:	sub	r0, r0, #1
   12f04:	udiv	r2, r0, r1
   12f08:	str	r0, [r5, #4]
   12f0c:	mls	r0, r2, r1, r0
   12f10:	cmp	r0, #0
   12f14:	bne	12f80 <table_remove_column@@Base+0x17c>
   12f18:	ldr	r2, [r5, #12]
   12f1c:	ldr	r0, [r5]
   12f20:	sub	r1, r2, r1
   12f24:	str	r1, [r5, #12]
   12f28:	add	r1, r1, r1, lsl #1
   12f2c:	lsl	r1, r1, #2
   12f30:	bl	11eb4 <realloc@plt>
   12f34:	str	r0, [r5]
   12f38:	mov	r0, r5
   12f3c:	bl	13990 <table_get_row_length@@Base>
   12f40:	cmp	r0, #1
   12f44:	blt	12f80 <table_remove_column@@Base+0x17c>
   12f48:	mov	r8, r0
   12f4c:	mov	r7, #0
   12f50:	mov	r0, r5
   12f54:	mov	r1, r7
   12f58:	bl	1392c <table_get_row_ptr@@Base>
   12f5c:	ldr	r1, [r5, #12]
   12f60:	mov	r6, r0
   12f64:	ldr	r0, [r0]
   12f68:	lsl	r1, r1, #2
   12f6c:	bl	11eb4 <realloc@plt>
   12f70:	add	r7, r7, #1
   12f74:	str	r0, [r6]
   12f78:	cmp	r8, r7
   12f7c:	bne	12f50 <table_remove_column@@Base+0x14c>
   12f80:	mov	r0, r5
   12f84:	mvn	r1, #0
   12f88:	mov	r2, r9
   12f8c:	mov	r3, #16
   12f90:	bl	12b44 <table_notify@@Base>
   12f94:	mov	r0, #0
   12f98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012f9c <table_get_column_compare_function@@Base>:
   12f9c:	ldr	r0, [r0]
   12fa0:	add	r1, r1, r1, lsl #1
   12fa4:	add	r0, r0, r1, lsl #2
   12fa8:	ldr	r0, [r0, #8]
   12fac:	bx	lr

00012fb0 <table_set_column_compare_function@@Base>:
   12fb0:	ldr	r0, [r0]
   12fb4:	add	r1, r1, r1, lsl #1
   12fb8:	add	r0, r0, r1, lsl #2
   12fbc:	str	r2, [r0, #8]
   12fc0:	bx	lr

00012fc4 <table_compare_bool@@Base>:
   12fc4:	cmp	r0, #0
   12fc8:	beq	12ffc <table_compare_bool@@Base+0x38>
   12fcc:	cmp	r1, #0
   12fd0:	moveq	r1, #1
   12fd4:	moveq	r0, r1
   12fd8:	bxeq	lr
   12fdc:	ldrb	r2, [r1]
   12fe0:	ldrb	r0, [r0]
   12fe4:	mov	r1, #0
   12fe8:	cmp	r0, r2
   12fec:	mvncc	r1, #0
   12ff0:	movwhi	r1, #1
   12ff4:	mov	r0, r1
   12ff8:	bx	lr
   12ffc:	cmp	r1, #0
   13000:	mvnne	r1, #0
   13004:	mov	r0, r1
   13008:	bx	lr

0001300c <table_compare_int@@Base>:
   1300c:	cmp	r0, #0
   13010:	beq	13044 <table_compare_int@@Base+0x38>
   13014:	cmp	r1, #0
   13018:	moveq	r1, #1
   1301c:	moveq	r0, r1
   13020:	bxeq	lr
   13024:	ldr	r2, [r1]
   13028:	ldr	r0, [r0]
   1302c:	mov	r1, #0
   13030:	cmp	r0, r2
   13034:	mvnlt	r1, #0
   13038:	movwgt	r1, #1
   1303c:	mov	r0, r1
   13040:	bx	lr
   13044:	cmp	r1, #0
   13048:	mvnne	r1, #0
   1304c:	mov	r0, r1
   13050:	bx	lr

00013054 <table_compare_uint@@Base>:
   13054:	cmp	r0, #0
   13058:	beq	1308c <table_compare_uint@@Base+0x38>
   1305c:	cmp	r1, #0
   13060:	moveq	r1, #1
   13064:	moveq	r0, r1
   13068:	bxeq	lr
   1306c:	ldr	r2, [r1]
   13070:	ldr	r0, [r0]
   13074:	mov	r1, #0
   13078:	cmp	r0, r2
   1307c:	mvncc	r1, #0
   13080:	movwhi	r1, #1
   13084:	mov	r0, r1
   13088:	bx	lr
   1308c:	cmp	r1, #0
   13090:	mvnne	r1, #0
   13094:	mov	r0, r1
   13098:	bx	lr

0001309c <table_compare_int8@@Base>:
   1309c:	cmp	r0, #0
   130a0:	beq	130d4 <table_compare_int8@@Base+0x38>
   130a4:	cmp	r1, #0
   130a8:	moveq	r1, #1
   130ac:	moveq	r0, r1
   130b0:	bxeq	lr
   130b4:	ldrsb	r2, [r1]
   130b8:	ldrsb	r0, [r0]
   130bc:	mov	r1, #0
   130c0:	cmp	r0, r2
   130c4:	mvnlt	r1, #0
   130c8:	movwgt	r1, #1
   130cc:	mov	r0, r1
   130d0:	bx	lr
   130d4:	cmp	r1, #0
   130d8:	mvnne	r1, #0
   130dc:	mov	r0, r1
   130e0:	bx	lr

000130e4 <table_compare_uint8@@Base>:
   130e4:	cmp	r0, #0
   130e8:	beq	1311c <table_compare_uint8@@Base+0x38>
   130ec:	cmp	r1, #0
   130f0:	moveq	r1, #1
   130f4:	moveq	r0, r1
   130f8:	bxeq	lr
   130fc:	ldrb	r2, [r1]
   13100:	ldrb	r0, [r0]
   13104:	mov	r1, #0
   13108:	cmp	r0, r2
   1310c:	mvncc	r1, #0
   13110:	movwhi	r1, #1
   13114:	mov	r0, r1
   13118:	bx	lr
   1311c:	cmp	r1, #0
   13120:	mvnne	r1, #0
   13124:	mov	r0, r1
   13128:	bx	lr

0001312c <table_compare_int16@@Base>:
   1312c:	cmp	r0, #0
   13130:	beq	13164 <table_compare_int16@@Base+0x38>
   13134:	cmp	r1, #0
   13138:	moveq	r1, #1
   1313c:	moveq	r0, r1
   13140:	bxeq	lr
   13144:	ldrsh	r2, [r1]
   13148:	ldrsh	r0, [r0]
   1314c:	mov	r1, #0
   13150:	cmp	r0, r2
   13154:	mvnlt	r1, #0
   13158:	movwgt	r1, #1
   1315c:	mov	r0, r1
   13160:	bx	lr
   13164:	cmp	r1, #0
   13168:	mvnne	r1, #0
   1316c:	mov	r0, r1
   13170:	bx	lr

00013174 <table_compare_uint16@@Base>:
   13174:	cmp	r0, #0
   13178:	beq	131ac <table_compare_uint16@@Base+0x38>
   1317c:	cmp	r1, #0
   13180:	moveq	r1, #1
   13184:	moveq	r0, r1
   13188:	bxeq	lr
   1318c:	ldrh	r2, [r1]
   13190:	ldrh	r0, [r0]
   13194:	mov	r1, #0
   13198:	cmp	r0, r2
   1319c:	mvncc	r1, #0
   131a0:	movwhi	r1, #1
   131a4:	mov	r0, r1
   131a8:	bx	lr
   131ac:	cmp	r1, #0
   131b0:	mvnne	r1, #0
   131b4:	mov	r0, r1
   131b8:	bx	lr

000131bc <table_compare_int32@@Base>:
   131bc:	cmp	r0, #0
   131c0:	beq	131f4 <table_compare_int32@@Base+0x38>
   131c4:	cmp	r1, #0
   131c8:	moveq	r1, #1
   131cc:	moveq	r0, r1
   131d0:	bxeq	lr
   131d4:	ldr	r2, [r1]
   131d8:	ldr	r0, [r0]
   131dc:	mov	r1, #0
   131e0:	cmp	r0, r2
   131e4:	mvnlt	r1, #0
   131e8:	movwgt	r1, #1
   131ec:	mov	r0, r1
   131f0:	bx	lr
   131f4:	cmp	r1, #0
   131f8:	mvnne	r1, #0
   131fc:	mov	r0, r1
   13200:	bx	lr

00013204 <table_compare_uint32@@Base>:
   13204:	cmp	r0, #0
   13208:	beq	1323c <table_compare_uint32@@Base+0x38>
   1320c:	cmp	r1, #0
   13210:	moveq	r1, #1
   13214:	moveq	r0, r1
   13218:	bxeq	lr
   1321c:	ldr	r2, [r1]
   13220:	ldr	r0, [r0]
   13224:	mov	r1, #0
   13228:	cmp	r0, r2
   1322c:	mvncc	r1, #0
   13230:	movwhi	r1, #1
   13234:	mov	r0, r1
   13238:	bx	lr
   1323c:	cmp	r1, #0
   13240:	mvnne	r1, #0
   13244:	mov	r0, r1
   13248:	bx	lr

0001324c <table_compare_int64@@Base>:
   1324c:	cmp	r0, #0
   13250:	beq	132a4 <table_compare_int64@@Base+0x58>
   13254:	cmp	r1, #0
   13258:	moveq	r1, #1
   1325c:	moveq	r0, r1
   13260:	bxeq	lr
   13264:	push	{r5, r7, fp, lr}
   13268:	add	fp, sp, #8
   1326c:	ldm	r1, {r2, r7}
   13270:	ldm	r0, {r0, r5}
   13274:	mov	r1, #0
   13278:	subs	r3, r0, r2
   1327c:	sbcs	r3, r5, r7
   13280:	movwlt	r1, #1
   13284:	cmp	r1, #0
   13288:	mvnne	r1, #0
   1328c:	subs	r0, r2, r0
   13290:	sbcs	r0, r7, r5
   13294:	movwlt	r1, #1
   13298:	pop	{r5, r7, fp, lr}
   1329c:	mov	r0, r1
   132a0:	bx	lr
   132a4:	cmp	r1, #0
   132a8:	mvnne	r1, #0
   132ac:	mov	r0, r1
   132b0:	bx	lr

000132b4 <table_compare_uint64@@Base>:
   132b4:	cmp	r0, #0
   132b8:	beq	1330c <table_compare_uint64@@Base+0x58>
   132bc:	cmp	r1, #0
   132c0:	moveq	r1, #1
   132c4:	moveq	r0, r1
   132c8:	bxeq	lr
   132cc:	push	{r5, r7, fp, lr}
   132d0:	add	fp, sp, #8
   132d4:	ldm	r1, {r2, r7}
   132d8:	ldm	r0, {r0, r5}
   132dc:	mov	r1, #0
   132e0:	subs	r3, r0, r2
   132e4:	sbcs	r3, r5, r7
   132e8:	movwcc	r1, #1
   132ec:	cmp	r1, #0
   132f0:	mvnne	r1, #0
   132f4:	subs	r0, r2, r0
   132f8:	sbcs	r0, r7, r5
   132fc:	movwcc	r1, #1
   13300:	pop	{r5, r7, fp, lr}
   13304:	mov	r0, r1
   13308:	bx	lr
   1330c:	cmp	r1, #0
   13310:	mvnne	r1, #0
   13314:	mov	r0, r1
   13318:	bx	lr

0001331c <table_compare_short@@Base>:
   1331c:	cmp	r0, #0
   13320:	beq	13354 <table_compare_short@@Base+0x38>
   13324:	cmp	r1, #0
   13328:	moveq	r1, #1
   1332c:	moveq	r0, r1
   13330:	bxeq	lr
   13334:	ldrsh	r2, [r1]
   13338:	ldrsh	r0, [r0]
   1333c:	mov	r1, #0
   13340:	cmp	r0, r2
   13344:	mvnlt	r1, #0
   13348:	movwgt	r1, #1
   1334c:	mov	r0, r1
   13350:	bx	lr
   13354:	cmp	r1, #0
   13358:	mvnne	r1, #0
   1335c:	mov	r0, r1
   13360:	bx	lr

00013364 <table_compare_ushort@@Base>:
   13364:	cmp	r0, #0
   13368:	beq	1339c <table_compare_ushort@@Base+0x38>
   1336c:	cmp	r1, #0
   13370:	moveq	r1, #1
   13374:	moveq	r0, r1
   13378:	bxeq	lr
   1337c:	ldrh	r2, [r1]
   13380:	ldrh	r0, [r0]
   13384:	mov	r1, #0
   13388:	cmp	r0, r2
   1338c:	mvncc	r1, #0
   13390:	movwhi	r1, #1
   13394:	mov	r0, r1
   13398:	bx	lr
   1339c:	cmp	r1, #0
   133a0:	mvnne	r1, #0
   133a4:	mov	r0, r1
   133a8:	bx	lr

000133ac <table_compare_long@@Base>:
   133ac:	cmp	r0, #0
   133b0:	beq	133e4 <table_compare_long@@Base+0x38>
   133b4:	cmp	r1, #0
   133b8:	moveq	r1, #1
   133bc:	moveq	r0, r1
   133c0:	bxeq	lr
   133c4:	ldr	r2, [r1]
   133c8:	ldr	r0, [r0]
   133cc:	mov	r1, #0
   133d0:	cmp	r0, r2
   133d4:	mvnlt	r1, #0
   133d8:	movwgt	r1, #1
   133dc:	mov	r0, r1
   133e0:	bx	lr
   133e4:	cmp	r1, #0
   133e8:	mvnne	r1, #0
   133ec:	mov	r0, r1
   133f0:	bx	lr

000133f4 <table_compare_ulong@@Base>:
   133f4:	cmp	r0, #0
   133f8:	beq	1342c <table_compare_ulong@@Base+0x38>
   133fc:	cmp	r1, #0
   13400:	moveq	r1, #1
   13404:	moveq	r0, r1
   13408:	bxeq	lr
   1340c:	ldr	r2, [r1]
   13410:	ldr	r0, [r0]
   13414:	mov	r1, #0
   13418:	cmp	r0, r2
   1341c:	mvncc	r1, #0
   13420:	movwhi	r1, #1
   13424:	mov	r0, r1
   13428:	bx	lr
   1342c:	cmp	r1, #0
   13430:	mvnne	r1, #0
   13434:	mov	r0, r1
   13438:	bx	lr

0001343c <table_compare_llong@@Base>:
   1343c:	cmp	r0, #0
   13440:	beq	13494 <table_compare_llong@@Base+0x58>
   13444:	cmp	r1, #0
   13448:	moveq	r1, #1
   1344c:	moveq	r0, r1
   13450:	bxeq	lr
   13454:	push	{r5, r7, fp, lr}
   13458:	add	fp, sp, #8
   1345c:	ldm	r1, {r2, r7}
   13460:	ldm	r0, {r0, r5}
   13464:	mov	r1, #0
   13468:	subs	r3, r0, r2
   1346c:	sbcs	r3, r5, r7
   13470:	movwlt	r1, #1
   13474:	cmp	r1, #0
   13478:	mvnne	r1, #0
   1347c:	subs	r0, r2, r0
   13480:	sbcs	r0, r7, r5
   13484:	movwlt	r1, #1
   13488:	pop	{r5, r7, fp, lr}
   1348c:	mov	r0, r1
   13490:	bx	lr
   13494:	cmp	r1, #0
   13498:	mvnne	r1, #0
   1349c:	mov	r0, r1
   134a0:	bx	lr

000134a4 <table_compare_ullong@@Base>:
   134a4:	cmp	r0, #0
   134a8:	beq	134dc <table_compare_ullong@@Base+0x38>
   134ac:	cmp	r1, #0
   134b0:	moveq	r1, #1
   134b4:	moveq	r0, r1
   134b8:	bxeq	lr
   134bc:	ldr	r2, [r1]
   134c0:	ldr	r0, [r0]
   134c4:	mov	r1, #0
   134c8:	cmp	r0, r2
   134cc:	mvncc	r1, #0
   134d0:	movwhi	r1, #1
   134d4:	mov	r0, r1
   134d8:	bx	lr
   134dc:	cmp	r1, #0
   134e0:	mvnne	r1, #0
   134e4:	mov	r0, r1
   134e8:	bx	lr

000134ec <table_compare_float@@Base>:
   134ec:	cmp	r0, #0
   134f0:	beq	13528 <table_compare_float@@Base+0x3c>
   134f4:	cmp	r1, #0
   134f8:	moveq	r1, #1
   134fc:	moveq	r0, r1
   13500:	bxeq	lr
   13504:	vldr	s0, [r1]
   13508:	vldr	s2, [r0]
   1350c:	mov	r1, #0
   13510:	vcmpe.f32	s2, s0
   13514:	vmrs	APSR_nzcv, fpscr
   13518:	mvnmi	r1, #0
   1351c:	movwgt	r1, #1
   13520:	mov	r0, r1
   13524:	bx	lr
   13528:	cmp	r1, #0
   1352c:	mvnne	r1, #0
   13530:	mov	r0, r1
   13534:	bx	lr

00013538 <table_compare_double@@Base>:
   13538:	cmp	r0, #0
   1353c:	beq	13574 <table_compare_double@@Base+0x3c>
   13540:	cmp	r1, #0
   13544:	moveq	r1, #1
   13548:	moveq	r0, r1
   1354c:	bxeq	lr
   13550:	vldr	d16, [r1]
   13554:	vldr	d17, [r0]
   13558:	mov	r1, #0
   1355c:	vcmpe.f64	d17, d16
   13560:	vmrs	APSR_nzcv, fpscr
   13564:	mvnmi	r1, #0
   13568:	movwgt	r1, #1
   1356c:	mov	r0, r1
   13570:	bx	lr
   13574:	cmp	r1, #0
   13578:	mvnne	r1, #0
   1357c:	mov	r0, r1
   13580:	bx	lr

00013584 <table_compare_ldouble@@Base>:
   13584:	cmp	r0, #0
   13588:	beq	135c0 <table_compare_ldouble@@Base+0x3c>
   1358c:	cmp	r1, #0
   13590:	moveq	r1, #1
   13594:	moveq	r0, r1
   13598:	bxeq	lr
   1359c:	vldr	d16, [r1]
   135a0:	vldr	d17, [r0]
   135a4:	mov	r1, #0
   135a8:	vcmpe.f64	d17, d16
   135ac:	vmrs	APSR_nzcv, fpscr
   135b0:	mvnmi	r1, #0
   135b4:	movwgt	r1, #1
   135b8:	mov	r0, r1
   135bc:	bx	lr
   135c0:	cmp	r1, #0
   135c4:	mvnne	r1, #0
   135c8:	mov	r0, r1
   135cc:	bx	lr

000135d0 <table_compare_char@@Base>:
   135d0:	cmp	r0, #0
   135d4:	beq	13608 <table_compare_char@@Base+0x38>
   135d8:	cmp	r1, #0
   135dc:	moveq	r1, #1
   135e0:	moveq	r0, r1
   135e4:	bxeq	lr
   135e8:	ldrb	r2, [r1]
   135ec:	ldrb	r0, [r0]
   135f0:	mov	r1, #0
   135f4:	cmp	r0, r2
   135f8:	mvncc	r1, #0
   135fc:	movwhi	r1, #1
   13600:	mov	r0, r1
   13604:	bx	lr
   13608:	cmp	r1, #0
   1360c:	mvnne	r1, #0
   13610:	mov	r0, r1
   13614:	bx	lr

00013618 <table_compare_uchar@@Base>:
   13618:	cmp	r0, #0
   1361c:	beq	13650 <table_compare_uchar@@Base+0x38>
   13620:	cmp	r1, #0
   13624:	moveq	r1, #1
   13628:	moveq	r0, r1
   1362c:	bxeq	lr
   13630:	ldrb	r2, [r1]
   13634:	ldrb	r0, [r0]
   13638:	mov	r1, #0
   1363c:	cmp	r0, r2
   13640:	mvncc	r1, #0
   13644:	movwhi	r1, #1
   13648:	mov	r0, r1
   1364c:	bx	lr
   13650:	cmp	r1, #0
   13654:	mvnne	r1, #0
   13658:	mov	r0, r1
   1365c:	bx	lr

00013660 <table_compare_string@@Base>:
   13660:	cmp	r0, #0
   13664:	beq	1367c <table_compare_string@@Base+0x1c>
   13668:	cmp	r1, #0
   1366c:	moveq	r1, #1
   13670:	moveq	r0, r1
   13674:	bxeq	lr
   13678:	b	11e90 <strcmp@plt>
   1367c:	cmp	r1, #0
   13680:	mvnne	r1, #0
   13684:	mov	r0, r1
   13688:	bx	lr

0001368c <table_compare_ptr@@Base>:
   1368c:	mov	r2, #0
   13690:	cmp	r0, r1
   13694:	mvncc	r2, #0
   13698:	movwhi	r2, #1
   1369c:	mov	r0, r2
   136a0:	bx	lr

000136a4 <table_get_default_compare_function_for_data_type@@Base>:
   136a4:	cmp	r0, #23
   136a8:	movwls	r1, #21904	; 0x5590
   136ac:	movhi	r0, #0
   136b0:	movtls	r1, #1
   136b4:	ldrls	r0, [r1, r0, lsl #2]
   136b8:	bx	lr

000136bc <table_get@@Base>:
   136bc:	push	{fp, lr}
   136c0:	mov	fp, sp
   136c4:	bl	14ab0 <table_get_cell_ptr@@Base>
   136c8:	ldr	r0, [r0]
   136cc:	pop	{fp, pc}

000136d0 <table_get_bool@@Base>:
   136d0:	push	{fp, lr}
   136d4:	mov	fp, sp
   136d8:	bl	14ab0 <table_get_cell_ptr@@Base>
   136dc:	ldr	r0, [r0]
   136e0:	ldrb	r0, [r0]
   136e4:	pop	{fp, pc}

000136e8 <table_get_int@@Base>:
   136e8:	push	{fp, lr}
   136ec:	mov	fp, sp
   136f0:	bl	14ab0 <table_get_cell_ptr@@Base>
   136f4:	ldr	r0, [r0]
   136f8:	ldr	r0, [r0]
   136fc:	pop	{fp, pc}

00013700 <table_get_uint@@Base>:
   13700:	push	{fp, lr}
   13704:	mov	fp, sp
   13708:	bl	14ab0 <table_get_cell_ptr@@Base>
   1370c:	ldr	r0, [r0]
   13710:	ldr	r0, [r0]
   13714:	pop	{fp, pc}

00013718 <table_get_int8@@Base>:
   13718:	push	{fp, lr}
   1371c:	mov	fp, sp
   13720:	bl	14ab0 <table_get_cell_ptr@@Base>
   13724:	ldr	r0, [r0]
   13728:	ldrsb	r0, [r0]
   1372c:	pop	{fp, pc}

00013730 <table_get_uint8@@Base>:
   13730:	push	{fp, lr}
   13734:	mov	fp, sp
   13738:	bl	14ab0 <table_get_cell_ptr@@Base>
   1373c:	ldr	r0, [r0]
   13740:	ldrb	r0, [r0]
   13744:	pop	{fp, pc}

00013748 <table_get_int16@@Base>:
   13748:	push	{fp, lr}
   1374c:	mov	fp, sp
   13750:	bl	14ab0 <table_get_cell_ptr@@Base>
   13754:	ldr	r0, [r0]
   13758:	ldrsh	r0, [r0]
   1375c:	pop	{fp, pc}

00013760 <table_get_uint16@@Base>:
   13760:	push	{fp, lr}
   13764:	mov	fp, sp
   13768:	bl	14ab0 <table_get_cell_ptr@@Base>
   1376c:	ldr	r0, [r0]
   13770:	ldrh	r0, [r0]
   13774:	pop	{fp, pc}

00013778 <table_get_int32@@Base>:
   13778:	push	{fp, lr}
   1377c:	mov	fp, sp
   13780:	bl	14ab0 <table_get_cell_ptr@@Base>
   13784:	ldr	r0, [r0]
   13788:	ldr	r0, [r0]
   1378c:	pop	{fp, pc}

00013790 <table_get_uint32@@Base>:
   13790:	push	{fp, lr}
   13794:	mov	fp, sp
   13798:	bl	14ab0 <table_get_cell_ptr@@Base>
   1379c:	ldr	r0, [r0]
   137a0:	ldr	r0, [r0]
   137a4:	pop	{fp, pc}

000137a8 <table_get_int64@@Base>:
   137a8:	push	{fp, lr}
   137ac:	mov	fp, sp
   137b0:	bl	14ab0 <table_get_cell_ptr@@Base>
   137b4:	ldr	r0, [r0]
   137b8:	ldrd	r0, [r0]
   137bc:	pop	{fp, pc}

000137c0 <table_get_uint64@@Base>:
   137c0:	push	{fp, lr}
   137c4:	mov	fp, sp
   137c8:	bl	14ab0 <table_get_cell_ptr@@Base>
   137cc:	ldr	r0, [r0]
   137d0:	ldrd	r0, [r0]
   137d4:	pop	{fp, pc}

000137d8 <table_get_short@@Base>:
   137d8:	push	{fp, lr}
   137dc:	mov	fp, sp
   137e0:	bl	14ab0 <table_get_cell_ptr@@Base>
   137e4:	ldr	r0, [r0]
   137e8:	ldrsh	r0, [r0]
   137ec:	pop	{fp, pc}

000137f0 <table_get_ushort@@Base>:
   137f0:	push	{fp, lr}
   137f4:	mov	fp, sp
   137f8:	bl	14ab0 <table_get_cell_ptr@@Base>
   137fc:	ldr	r0, [r0]
   13800:	ldrh	r0, [r0]
   13804:	pop	{fp, pc}

00013808 <table_get_long@@Base>:
   13808:	push	{fp, lr}
   1380c:	mov	fp, sp
   13810:	bl	14ab0 <table_get_cell_ptr@@Base>
   13814:	ldr	r0, [r0]
   13818:	ldr	r0, [r0]
   1381c:	pop	{fp, pc}

00013820 <table_get_ulong@@Base>:
   13820:	push	{fp, lr}
   13824:	mov	fp, sp
   13828:	bl	14ab0 <table_get_cell_ptr@@Base>
   1382c:	ldr	r0, [r0]
   13830:	ldr	r0, [r0]
   13834:	pop	{fp, pc}

00013838 <table_get_llong@@Base>:
   13838:	push	{fp, lr}
   1383c:	mov	fp, sp
   13840:	bl	14ab0 <table_get_cell_ptr@@Base>
   13844:	ldr	r0, [r0]
   13848:	ldrd	r0, [r0]
   1384c:	pop	{fp, pc}

00013850 <table_get_ullong@@Base>:
   13850:	push	{fp, lr}
   13854:	mov	fp, sp
   13858:	bl	14ab0 <table_get_cell_ptr@@Base>
   1385c:	ldr	r0, [r0]
   13860:	ldrd	r0, [r0]
   13864:	pop	{fp, pc}

00013868 <table_get_float@@Base>:
   13868:	push	{fp, lr}
   1386c:	mov	fp, sp
   13870:	bl	14ab0 <table_get_cell_ptr@@Base>
   13874:	ldr	r0, [r0]
   13878:	vldr	s0, [r0]
   1387c:	pop	{fp, pc}

00013880 <table_get_double@@Base>:
   13880:	push	{fp, lr}
   13884:	mov	fp, sp
   13888:	bl	14ab0 <table_get_cell_ptr@@Base>
   1388c:	ldr	r0, [r0]
   13890:	vldr	d0, [r0]
   13894:	pop	{fp, pc}

00013898 <table_get_ldouble@@Base>:
   13898:	push	{fp, lr}
   1389c:	mov	fp, sp
   138a0:	bl	14ab0 <table_get_cell_ptr@@Base>
   138a4:	ldr	r0, [r0]
   138a8:	vldr	d0, [r0]
   138ac:	pop	{fp, pc}

000138b0 <table_get_char@@Base>:
   138b0:	push	{fp, lr}
   138b4:	mov	fp, sp
   138b8:	bl	14ab0 <table_get_cell_ptr@@Base>
   138bc:	ldr	r0, [r0]
   138c0:	ldrb	r0, [r0]
   138c4:	pop	{fp, pc}

000138c8 <table_get_uchar@@Base>:
   138c8:	push	{fp, lr}
   138cc:	mov	fp, sp
   138d0:	bl	14ab0 <table_get_cell_ptr@@Base>
   138d4:	ldr	r0, [r0]
   138d8:	ldrb	r0, [r0]
   138dc:	pop	{fp, pc}

000138e0 <table_get_string@@Base>:
   138e0:	push	{fp, lr}
   138e4:	mov	fp, sp
   138e8:	bl	14ab0 <table_get_cell_ptr@@Base>
   138ec:	ldr	r0, [r0]
   138f0:	pop	{fp, pc}

000138f4 <table_get_ptr@@Base>:
   138f4:	push	{fp, lr}
   138f8:	mov	fp, sp
   138fc:	bl	14ab0 <table_get_cell_ptr@@Base>
   13900:	ldr	r0, [r0]
   13904:	pop	{fp, pc}

00013908 <table_row_init@@Base>:
   13908:	push	{r4, r5, fp, lr}
   1390c:	add	fp, sp, #8
   13910:	mov	r4, r1
   13914:	ldr	r1, [r0, #12]
   13918:	ldr	r5, [r0, #16]
   1391c:	lsl	r0, r1, #2
   13920:	bl	11ecc <malloc@plt>
   13924:	str	r0, [r5, r4, lsl #2]
   13928:	pop	{r4, r5, fp, pc}

0001392c <table_get_row_ptr@@Base>:
   1392c:	ldr	r0, [r0, #16]
   13930:	add	r0, r0, r1, lsl #2
   13934:	bx	lr

00013938 <table_row_destroy@@Base>:
   13938:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1393c:	add	fp, sp, #24
   13940:	mov	r4, r1
   13944:	mov	r5, r0
   13948:	bl	12c38 <table_get_column_length@@Base>
   1394c:	ldr	r8, [r5, #16]
   13950:	cmp	r0, #1
   13954:	blt	1397c <table_row_destroy@@Base+0x44>
   13958:	mov	r6, r0
   1395c:	mov	r7, #0
   13960:	mov	r0, r5
   13964:	mov	r1, r4
   13968:	mov	r2, r7
   1396c:	bl	14acc <table_cell_destroy@@Base>
   13970:	add	r7, r7, #1
   13974:	cmp	r6, r7
   13978:	bne	13960 <table_row_destroy@@Base+0x28>
   1397c:	ldr	r0, [r8, r4, lsl #2]
   13980:	cmp	r0, #0
   13984:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13988:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1398c:	b	11ea8 <free@plt>

00013990 <table_get_row_length@@Base>:
   13990:	ldr	r0, [r0, #20]
   13994:	bx	lr

00013998 <table_add_row@@Base>:
   13998:	push	{r4, r5, r6, r7, fp, lr}
   1399c:	add	fp, sp, #16
   139a0:	ldr	r5, [r0, #20]
   139a4:	ldr	r1, [r0, #24]
   139a8:	mov	r4, r0
   139ac:	udiv	r0, r5, r1
   139b0:	mls	r0, r0, r1, r5
   139b4:	cmp	r0, #0
   139b8:	bne	139dc <table_add_row@@Base+0x44>
   139bc:	ldr	r2, [r4, #28]
   139c0:	ldr	r0, [r4, #16]
   139c4:	add	r1, r2, r1
   139c8:	str	r1, [r4, #28]
   139cc:	lsl	r1, r1, #2
   139d0:	bl	11eb4 <realloc@plt>
   139d4:	str	r0, [r4, #16]
   139d8:	ldr	r5, [r4, #20]
   139dc:	mov	r0, r4
   139e0:	bl	12c38 <table_get_column_length@@Base>
   139e4:	mov	r6, r0
   139e8:	ldr	r0, [r4, #12]
   139ec:	ldr	r7, [r4, #16]
   139f0:	lsl	r0, r0, #2
   139f4:	bl	11ecc <malloc@plt>
   139f8:	cmp	r6, #1
   139fc:	str	r0, [r7, r5, lsl #2]
   13a00:	blt	13a24 <table_add_row@@Base+0x8c>
   13a04:	mov	r7, #0
   13a08:	mov	r0, r4
   13a0c:	mov	r1, r5
   13a10:	mov	r2, r7
   13a14:	bl	14a90 <table_cell_init@@Base>
   13a18:	add	r7, r7, #1
   13a1c:	cmp	r6, r7
   13a20:	bne	13a08 <table_add_row@@Base+0x70>
   13a24:	ldr	r1, [r4, #20]
   13a28:	mov	r0, r4
   13a2c:	mvn	r2, #0
   13a30:	mov	r3, #2
   13a34:	bl	12b44 <table_notify@@Base>
   13a38:	ldr	r0, [r4, #20]
   13a3c:	add	r1, r0, #1
   13a40:	str	r1, [r4, #20]
   13a44:	pop	{r4, r5, r6, r7, fp, pc}

00013a48 <table_remove_row@@Base>:
   13a48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a4c:	add	fp, sp, #24
   13a50:	ldr	r8, [r0, #20]
   13a54:	mov	r4, r1
   13a58:	mov	r5, r0
   13a5c:	bl	12c38 <table_get_column_length@@Base>
   13a60:	cmp	r0, #1
   13a64:	blt	13ab0 <table_remove_row@@Base+0x68>
   13a68:	mov	r6, r0
   13a6c:	mov	r7, #0
   13a70:	mov	r0, r5
   13a74:	mov	r1, r7
   13a78:	bl	12cb8 <table_get_column_data_type@@Base>
   13a7c:	cmp	r0, #23
   13a80:	beq	13aa4 <table_remove_row@@Base+0x5c>
   13a84:	mov	r0, r5
   13a88:	mov	r1, r4
   13a8c:	mov	r2, r7
   13a90:	bl	14ab0 <table_get_cell_ptr@@Base>
   13a94:	ldr	r0, [r0]
   13a98:	cmp	r0, #0
   13a9c:	beq	13aa4 <table_remove_row@@Base+0x5c>
   13aa0:	bl	11ea8 <free@plt>
   13aa4:	add	r7, r7, #1
   13aa8:	cmp	r6, r7
   13aac:	bne	13a70 <table_remove_row@@Base+0x28>
   13ab0:	ldr	r0, [r5, #16]
   13ab4:	ldr	r0, [r0, r4, lsl #2]
   13ab8:	cmp	r0, #0
   13abc:	beq	13ac4 <table_remove_row@@Base+0x7c>
   13ac0:	bl	11ea8 <free@plt>
   13ac4:	sub	r0, r8, #1
   13ac8:	cmp	r0, r4
   13acc:	ble	13af0 <table_remove_row@@Base+0xa8>
   13ad0:	mov	r1, r4
   13ad4:	ldr	r2, [r5, #16]
   13ad8:	add	r3, r2, r1, lsl #2
   13adc:	ldr	r3, [r3, #4]
   13ae0:	str	r3, [r2, r1, lsl #2]
   13ae4:	add	r1, r1, #1
   13ae8:	cmp	r0, r1
   13aec:	bne	13ad4 <table_remove_row@@Base+0x8c>
   13af0:	ldr	r0, [r5, #20]
   13af4:	ldr	r1, [r5, #24]
   13af8:	sub	r0, r0, #1
   13afc:	udiv	r2, r0, r1
   13b00:	str	r0, [r5, #20]
   13b04:	mls	r0, r2, r1, r0
   13b08:	cmp	r0, #0
   13b0c:	bne	13b2c <table_remove_row@@Base+0xe4>
   13b10:	ldr	r2, [r5, #28]
   13b14:	ldr	r0, [r5, #16]
   13b18:	sub	r1, r2, r1
   13b1c:	str	r1, [r5, #28]
   13b20:	lsl	r1, r1, #2
   13b24:	bl	11eb4 <realloc@plt>
   13b28:	str	r0, [r5, #16]
   13b2c:	mov	r0, r5
   13b30:	mov	r1, r4
   13b34:	mvn	r2, #0
   13b38:	mov	r3, #4
   13b3c:	bl	12b44 <table_notify@@Base>
   13b40:	mov	r0, #0
   13b44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013b48 <table_set_row_ptr@@Base>:
   13b48:	ldr	r2, [r2]
   13b4c:	ldr	r0, [r0, #16]
   13b50:	str	r2, [r0, r1, lsl #2]
   13b54:	bx	lr

00013b58 <table_set@@Base>:
   13b58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13b5c:	add	fp, sp, #24
   13b60:	mov	r8, r3
   13b64:	mov	r4, r2
   13b68:	mov	r9, r1
   13b6c:	mov	r6, r0
   13b70:	bl	14ab0 <table_get_cell_ptr@@Base>
   13b74:	mov	r5, r0
   13b78:	mov	r0, r6
   13b7c:	mov	r1, r4
   13b80:	bl	12c10 <table_get_col_ptr@@Base>
   13b84:	ldr	r1, [fp, #8]
   13b88:	mvn	r7, #0
   13b8c:	cmp	r1, #23
   13b90:	bhi	13e54 <table_set@@Base+0x2fc>
   13b94:	add	r2, pc, #0
   13b98:	ldr	pc, [r2, r1, lsl #2]
   13b9c:	strdeq	r3, [r1], -ip
   13ba0:	andeq	r3, r1, ip, lsl #24
   13ba4:	andeq	r3, r1, ip, lsl ip
   13ba8:	andeq	r3, r1, ip, lsr #24
   13bac:	andeq	r3, r1, ip, lsr ip
   13bb0:	andeq	r3, r1, ip, asr #24
   13bb4:	andeq	r3, r1, ip, asr ip
   13bb8:	andeq	r3, r1, ip, ror #24
   13bbc:	andeq	r3, r1, ip, ror ip
   13bc0:	andeq	r3, r1, ip, lsl #25
   13bc4:	muleq	r1, ip, ip
   13bc8:	andeq	r3, r1, ip, lsr #25
   13bcc:	andeq	r3, r1, r4, ror #25
   13bd0:	strdeq	r3, [r1], -r4
   13bd4:	andeq	r3, r1, r4, lsl #26
   13bd8:	andeq	r3, r1, r4, lsl sp
   13bdc:	andeq	r3, r1, r4, lsr #26
   13be0:	andeq	r3, r1, ip, asr sp
   13be4:	andeq	r3, r1, ip, ror #26
   13be8:	andeq	r3, r1, ip, lsr #27
   13bec:			; <UNDEFINED> instruction: 0x00013dbc
   13bf0:	andeq	r3, r1, ip, asr #27
   13bf4:	andeq	r3, r1, r8, lsl #28
   13bf8:	andeq	r3, r1, ip, asr lr
   13bfc:	ldr	r0, [r0, #4]
   13c00:	cmp	r0, #0
   13c04:	bne	13e54 <table_set@@Base+0x2fc>
   13c08:	b	13d30 <table_set@@Base+0x1d8>
   13c0c:	ldr	r0, [r0, #4]
   13c10:	cmp	r0, #1
   13c14:	beq	13d30 <table_set@@Base+0x1d8>
   13c18:	b	13e54 <table_set@@Base+0x2fc>
   13c1c:	ldr	r0, [r0, #4]
   13c20:	cmp	r0, #2
   13c24:	beq	13e14 <table_set@@Base+0x2bc>
   13c28:	b	13e54 <table_set@@Base+0x2fc>
   13c2c:	ldr	r0, [r0, #4]
   13c30:	cmp	r0, #3
   13c34:	beq	13e14 <table_set@@Base+0x2bc>
   13c38:	b	13e54 <table_set@@Base+0x2fc>
   13c3c:	ldr	r0, [r0, #4]
   13c40:	cmp	r0, #4
   13c44:	beq	13cb8 <table_set@@Base+0x160>
   13c48:	b	13e54 <table_set@@Base+0x2fc>
   13c4c:	ldr	r0, [r0, #4]
   13c50:	cmp	r0, #5
   13c54:	beq	13cb8 <table_set@@Base+0x160>
   13c58:	b	13e54 <table_set@@Base+0x2fc>
   13c5c:	ldr	r0, [r0, #4]
   13c60:	cmp	r0, #6
   13c64:	beq	13d30 <table_set@@Base+0x1d8>
   13c68:	b	13e54 <table_set@@Base+0x2fc>
   13c6c:	ldr	r0, [r0, #4]
   13c70:	cmp	r0, #7
   13c74:	beq	13d30 <table_set@@Base+0x1d8>
   13c78:	b	13e54 <table_set@@Base+0x2fc>
   13c7c:	ldr	r0, [r0, #4]
   13c80:	cmp	r0, #8
   13c84:	beq	13d78 <table_set@@Base+0x220>
   13c88:	b	13e54 <table_set@@Base+0x2fc>
   13c8c:	ldr	r0, [r0, #4]
   13c90:	cmp	r0, #9
   13c94:	beq	13d78 <table_set@@Base+0x220>
   13c98:	b	13e54 <table_set@@Base+0x2fc>
   13c9c:	ldr	r0, [r0, #4]
   13ca0:	cmp	r0, #10
   13ca4:	beq	13cb8 <table_set@@Base+0x160>
   13ca8:	b	13e54 <table_set@@Base+0x2fc>
   13cac:	ldr	r0, [r0, #4]
   13cb0:	cmp	r0, #11
   13cb4:	bne	13e54 <table_set@@Base+0x2fc>
   13cb8:	ldr	r0, [r5]
   13cbc:	cmp	r0, #0
   13cc0:	bne	13cd8 <table_set@@Base+0x180>
   13cc4:	mov	r0, #2
   13cc8:	bl	11ecc <malloc@plt>
   13ccc:	cmp	r0, #0
   13cd0:	str	r0, [r5]
   13cd4:	beq	13e54 <table_set@@Base+0x2fc>
   13cd8:	ldrh	r1, [r8]
   13cdc:	strh	r1, [r0]
   13ce0:	b	13e3c <table_set@@Base+0x2e4>
   13ce4:	ldr	r0, [r0, #4]
   13ce8:	cmp	r0, #12
   13cec:	beq	13d30 <table_set@@Base+0x1d8>
   13cf0:	b	13e54 <table_set@@Base+0x2fc>
   13cf4:	ldr	r0, [r0, #4]
   13cf8:	cmp	r0, #13
   13cfc:	beq	13d30 <table_set@@Base+0x1d8>
   13d00:	b	13e54 <table_set@@Base+0x2fc>
   13d04:	ldr	r0, [r0, #4]
   13d08:	cmp	r0, #14
   13d0c:	beq	13d78 <table_set@@Base+0x220>
   13d10:	b	13e54 <table_set@@Base+0x2fc>
   13d14:	ldr	r0, [r0, #4]
   13d18:	cmp	r0, #15
   13d1c:	beq	13d78 <table_set@@Base+0x220>
   13d20:	b	13e54 <table_set@@Base+0x2fc>
   13d24:	ldr	r0, [r0, #4]
   13d28:	cmp	r0, #16
   13d2c:	bne	13e54 <table_set@@Base+0x2fc>
   13d30:	ldr	r0, [r5]
   13d34:	cmp	r0, #0
   13d38:	bne	13d50 <table_set@@Base+0x1f8>
   13d3c:	mov	r0, #4
   13d40:	bl	11ecc <malloc@plt>
   13d44:	cmp	r0, #0
   13d48:	str	r0, [r5]
   13d4c:	beq	13e54 <table_set@@Base+0x2fc>
   13d50:	ldr	r1, [r8]
   13d54:	str	r1, [r0]
   13d58:	b	13e3c <table_set@@Base+0x2e4>
   13d5c:	ldr	r0, [r0, #4]
   13d60:	cmp	r0, #17
   13d64:	beq	13d78 <table_set@@Base+0x220>
   13d68:	b	13e54 <table_set@@Base+0x2fc>
   13d6c:	ldr	r0, [r0, #4]
   13d70:	cmp	r0, #18
   13d74:	bne	13e54 <table_set@@Base+0x2fc>
   13d78:	ldr	r0, [r5]
   13d7c:	cmp	r0, #0
   13d80:	bne	13d98 <table_set@@Base+0x240>
   13d84:	mov	r0, #8
   13d88:	bl	11ecc <malloc@plt>
   13d8c:	cmp	r0, #0
   13d90:	str	r0, [r5]
   13d94:	beq	13e54 <table_set@@Base+0x2fc>
   13d98:	ldr	r1, [r8]
   13d9c:	ldr	r2, [r8, #4]
   13da0:	str	r2, [r0, #4]
   13da4:	str	r1, [r0]
   13da8:	b	13e3c <table_set@@Base+0x2e4>
   13dac:	ldr	r0, [r0, #4]
   13db0:	cmp	r0, #19
   13db4:	beq	13e14 <table_set@@Base+0x2bc>
   13db8:	b	13e54 <table_set@@Base+0x2fc>
   13dbc:	ldr	r0, [r0, #4]
   13dc0:	cmp	r0, #20
   13dc4:	beq	13e14 <table_set@@Base+0x2bc>
   13dc8:	b	13e54 <table_set@@Base+0x2fc>
   13dcc:	ldr	r0, [r0, #4]
   13dd0:	cmp	r0, #21
   13dd4:	bne	13e54 <table_set@@Base+0x2fc>
   13dd8:	mov	r0, r8
   13ddc:	bl	11ef0 <strlen@plt>
   13de0:	ldr	r2, [r5]
   13de4:	add	r1, r0, #1
   13de8:	mov	r0, r2
   13dec:	bl	11eb4 <realloc@plt>
   13df0:	cmp	r0, #0
   13df4:	str	r0, [r5]
   13df8:	beq	13e54 <table_set@@Base+0x2fc>
   13dfc:	mov	r1, r8
   13e00:	bl	11ec0 <strcpy@plt>
   13e04:	b	13e3c <table_set@@Base+0x2e4>
   13e08:	ldr	r0, [r0, #4]
   13e0c:	cmp	r0, #22
   13e10:	bne	13e54 <table_set@@Base+0x2fc>
   13e14:	ldr	r0, [r5]
   13e18:	cmp	r0, #0
   13e1c:	bne	13e34 <table_set@@Base+0x2dc>
   13e20:	mov	r0, #1
   13e24:	bl	11ecc <malloc@plt>
   13e28:	cmp	r0, #0
   13e2c:	str	r0, [r5]
   13e30:	beq	13e54 <table_set@@Base+0x2fc>
   13e34:	ldrb	r1, [r8]
   13e38:	strb	r1, [r0]
   13e3c:	mov	r0, r6
   13e40:	mov	r1, r9
   13e44:	mov	r2, r4
   13e48:	mov	r3, #1
   13e4c:	bl	12b44 <table_notify@@Base>
   13e50:	mov	r7, #0
   13e54:	mov	r0, r7
   13e58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13e5c:	ldr	r0, [r0, #4]
   13e60:	cmp	r0, #23
   13e64:	bne	13e54 <table_set@@Base+0x2fc>
   13e68:	str	r8, [r5]
   13e6c:	b	13e3c <table_set@@Base+0x2e4>

00013e70 <table_set_bool@@Base>:
   13e70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e74:	add	fp, sp, #24
   13e78:	mov	r8, r3
   13e7c:	mov	r4, r2
   13e80:	mov	r9, r1
   13e84:	mov	r6, r0
   13e88:	bl	14ab0 <table_get_cell_ptr@@Base>
   13e8c:	mov	r5, r0
   13e90:	mov	r0, r6
   13e94:	mov	r1, r4
   13e98:	bl	12c10 <table_get_col_ptr@@Base>
   13e9c:	ldr	r0, [r0, #4]
   13ea0:	mvn	r7, #0
   13ea4:	cmp	r0, #22
   13ea8:	bne	13ee8 <table_set_bool@@Base+0x78>
   13eac:	ldr	r0, [r5]
   13eb0:	cmp	r0, #0
   13eb4:	bne	13ecc <table_set_bool@@Base+0x5c>
   13eb8:	mov	r0, #1
   13ebc:	bl	11ecc <malloc@plt>
   13ec0:	cmp	r0, #0
   13ec4:	str	r0, [r5]
   13ec8:	beq	13ee8 <table_set_bool@@Base+0x78>
   13ecc:	strb	r8, [r0]
   13ed0:	mov	r0, r6
   13ed4:	mov	r1, r9
   13ed8:	mov	r2, r4
   13edc:	mov	r3, #1
   13ee0:	bl	12b44 <table_notify@@Base>
   13ee4:	mov	r7, #0
   13ee8:	mov	r0, r7
   13eec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ef0 <table_set_int@@Base>:
   13ef0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ef4:	add	fp, sp, #24
   13ef8:	mov	r8, r3
   13efc:	mov	r4, r2
   13f00:	mov	r5, r1
   13f04:	mov	r6, r0
   13f08:	bl	14ab0 <table_get_cell_ptr@@Base>
   13f0c:	mov	r9, r0
   13f10:	mov	r0, r6
   13f14:	mov	r1, r4
   13f18:	bl	12c10 <table_get_col_ptr@@Base>
   13f1c:	ldr	r0, [r0, #4]
   13f20:	mvn	r7, #0
   13f24:	cmp	r0, #0
   13f28:	bne	13f68 <table_set_int@@Base+0x78>
   13f2c:	ldr	r0, [r9]
   13f30:	cmp	r0, #0
   13f34:	bne	13f4c <table_set_int@@Base+0x5c>
   13f38:	mov	r0, #4
   13f3c:	bl	11ecc <malloc@plt>
   13f40:	cmp	r0, #0
   13f44:	str	r0, [r9]
   13f48:	beq	13f68 <table_set_int@@Base+0x78>
   13f4c:	str	r8, [r0]
   13f50:	mov	r0, r6
   13f54:	mov	r1, r5
   13f58:	mov	r2, r4
   13f5c:	mov	r3, #1
   13f60:	bl	12b44 <table_notify@@Base>
   13f64:	mov	r7, #0
   13f68:	mov	r0, r7
   13f6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f70 <table_set_uint@@Base>:
   13f70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f74:	add	fp, sp, #24
   13f78:	mov	r8, r3
   13f7c:	mov	r4, r2
   13f80:	mov	r5, r1
   13f84:	mov	r6, r0
   13f88:	bl	14ab0 <table_get_cell_ptr@@Base>
   13f8c:	mov	r9, r0
   13f90:	mov	r0, r6
   13f94:	mov	r1, r4
   13f98:	bl	12c10 <table_get_col_ptr@@Base>
   13f9c:	ldr	r0, [r0, #4]
   13fa0:	mvn	r7, #0
   13fa4:	cmp	r0, #1
   13fa8:	bne	13fe8 <table_set_uint@@Base+0x78>
   13fac:	ldr	r0, [r9]
   13fb0:	cmp	r0, #0
   13fb4:	bne	13fcc <table_set_uint@@Base+0x5c>
   13fb8:	mov	r0, #4
   13fbc:	bl	11ecc <malloc@plt>
   13fc0:	cmp	r0, #0
   13fc4:	str	r0, [r9]
   13fc8:	beq	13fe8 <table_set_uint@@Base+0x78>
   13fcc:	str	r8, [r0]
   13fd0:	mov	r0, r6
   13fd4:	mov	r1, r5
   13fd8:	mov	r2, r4
   13fdc:	mov	r3, #1
   13fe0:	bl	12b44 <table_notify@@Base>
   13fe4:	mov	r7, #0
   13fe8:	mov	r0, r7
   13fec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ff0 <table_set_int8@@Base>:
   13ff0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ff4:	add	fp, sp, #24
   13ff8:	mov	r8, r3
   13ffc:	mov	r4, r2
   14000:	mov	r9, r1
   14004:	mov	r6, r0
   14008:	bl	14ab0 <table_get_cell_ptr@@Base>
   1400c:	mov	r5, r0
   14010:	mov	r0, r6
   14014:	mov	r1, r4
   14018:	bl	12c10 <table_get_col_ptr@@Base>
   1401c:	ldr	r0, [r0, #4]
   14020:	mvn	r7, #0
   14024:	cmp	r0, #2
   14028:	bne	14068 <table_set_int8@@Base+0x78>
   1402c:	ldr	r0, [r5]
   14030:	cmp	r0, #0
   14034:	bne	1404c <table_set_int8@@Base+0x5c>
   14038:	mov	r0, #1
   1403c:	bl	11ecc <malloc@plt>
   14040:	cmp	r0, #0
   14044:	str	r0, [r5]
   14048:	beq	14068 <table_set_int8@@Base+0x78>
   1404c:	strb	r8, [r0]
   14050:	mov	r0, r6
   14054:	mov	r1, r9
   14058:	mov	r2, r4
   1405c:	mov	r3, #1
   14060:	bl	12b44 <table_notify@@Base>
   14064:	mov	r7, #0
   14068:	mov	r0, r7
   1406c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014070 <table_set_uint8@@Base>:
   14070:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14074:	add	fp, sp, #24
   14078:	mov	r8, r3
   1407c:	mov	r4, r2
   14080:	mov	r9, r1
   14084:	mov	r6, r0
   14088:	bl	14ab0 <table_get_cell_ptr@@Base>
   1408c:	mov	r5, r0
   14090:	mov	r0, r6
   14094:	mov	r1, r4
   14098:	bl	12c10 <table_get_col_ptr@@Base>
   1409c:	ldr	r0, [r0, #4]
   140a0:	mvn	r7, #0
   140a4:	cmp	r0, #3
   140a8:	bne	140e8 <table_set_uint8@@Base+0x78>
   140ac:	ldr	r0, [r5]
   140b0:	cmp	r0, #0
   140b4:	bne	140cc <table_set_uint8@@Base+0x5c>
   140b8:	mov	r0, #1
   140bc:	bl	11ecc <malloc@plt>
   140c0:	cmp	r0, #0
   140c4:	str	r0, [r5]
   140c8:	beq	140e8 <table_set_uint8@@Base+0x78>
   140cc:	strb	r8, [r0]
   140d0:	mov	r0, r6
   140d4:	mov	r1, r9
   140d8:	mov	r2, r4
   140dc:	mov	r3, #1
   140e0:	bl	12b44 <table_notify@@Base>
   140e4:	mov	r7, #0
   140e8:	mov	r0, r7
   140ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140f0 <table_set_int16@@Base>:
   140f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140f4:	add	fp, sp, #24
   140f8:	mov	r8, r3
   140fc:	mov	r4, r2
   14100:	mov	r9, r1
   14104:	mov	r6, r0
   14108:	bl	14ab0 <table_get_cell_ptr@@Base>
   1410c:	mov	r5, r0
   14110:	mov	r0, r6
   14114:	mov	r1, r4
   14118:	bl	12c10 <table_get_col_ptr@@Base>
   1411c:	ldr	r0, [r0, #4]
   14120:	mvn	r7, #0
   14124:	cmp	r0, #4
   14128:	bne	14168 <table_set_int16@@Base+0x78>
   1412c:	ldr	r0, [r5]
   14130:	cmp	r0, #0
   14134:	bne	1414c <table_set_int16@@Base+0x5c>
   14138:	mov	r0, #2
   1413c:	bl	11ecc <malloc@plt>
   14140:	cmp	r0, #0
   14144:	str	r0, [r5]
   14148:	beq	14168 <table_set_int16@@Base+0x78>
   1414c:	strh	r8, [r0]
   14150:	mov	r0, r6
   14154:	mov	r1, r9
   14158:	mov	r2, r4
   1415c:	mov	r3, #1
   14160:	bl	12b44 <table_notify@@Base>
   14164:	mov	r7, #0
   14168:	mov	r0, r7
   1416c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014170 <table_set_uint16@@Base>:
   14170:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14174:	add	fp, sp, #24
   14178:	mov	r8, r3
   1417c:	mov	r4, r2
   14180:	mov	r9, r1
   14184:	mov	r6, r0
   14188:	bl	14ab0 <table_get_cell_ptr@@Base>
   1418c:	mov	r5, r0
   14190:	mov	r0, r6
   14194:	mov	r1, r4
   14198:	bl	12c10 <table_get_col_ptr@@Base>
   1419c:	ldr	r0, [r0, #4]
   141a0:	mvn	r7, #0
   141a4:	cmp	r0, #5
   141a8:	bne	141e8 <table_set_uint16@@Base+0x78>
   141ac:	ldr	r0, [r5]
   141b0:	cmp	r0, #0
   141b4:	bne	141cc <table_set_uint16@@Base+0x5c>
   141b8:	mov	r0, #2
   141bc:	bl	11ecc <malloc@plt>
   141c0:	cmp	r0, #0
   141c4:	str	r0, [r5]
   141c8:	beq	141e8 <table_set_uint16@@Base+0x78>
   141cc:	strh	r8, [r0]
   141d0:	mov	r0, r6
   141d4:	mov	r1, r9
   141d8:	mov	r2, r4
   141dc:	mov	r3, #1
   141e0:	bl	12b44 <table_notify@@Base>
   141e4:	mov	r7, #0
   141e8:	mov	r0, r7
   141ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141f0 <table_set_int32@@Base>:
   141f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141f4:	add	fp, sp, #24
   141f8:	mov	r8, r3
   141fc:	mov	r4, r2
   14200:	mov	r5, r1
   14204:	mov	r6, r0
   14208:	bl	14ab0 <table_get_cell_ptr@@Base>
   1420c:	mov	r9, r0
   14210:	mov	r0, r6
   14214:	mov	r1, r4
   14218:	bl	12c10 <table_get_col_ptr@@Base>
   1421c:	ldr	r0, [r0, #4]
   14220:	mvn	r7, #0
   14224:	cmp	r0, #6
   14228:	bne	14268 <table_set_int32@@Base+0x78>
   1422c:	ldr	r0, [r9]
   14230:	cmp	r0, #0
   14234:	bne	1424c <table_set_int32@@Base+0x5c>
   14238:	mov	r0, #4
   1423c:	bl	11ecc <malloc@plt>
   14240:	cmp	r0, #0
   14244:	str	r0, [r9]
   14248:	beq	14268 <table_set_int32@@Base+0x78>
   1424c:	str	r8, [r0]
   14250:	mov	r0, r6
   14254:	mov	r1, r5
   14258:	mov	r2, r4
   1425c:	mov	r3, #1
   14260:	bl	12b44 <table_notify@@Base>
   14264:	mov	r7, #0
   14268:	mov	r0, r7
   1426c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014270 <table_set_uint32@@Base>:
   14270:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14274:	add	fp, sp, #24
   14278:	mov	r8, r3
   1427c:	mov	r4, r2
   14280:	mov	r5, r1
   14284:	mov	r6, r0
   14288:	bl	14ab0 <table_get_cell_ptr@@Base>
   1428c:	mov	r9, r0
   14290:	mov	r0, r6
   14294:	mov	r1, r4
   14298:	bl	12c10 <table_get_col_ptr@@Base>
   1429c:	ldr	r0, [r0, #4]
   142a0:	mvn	r7, #0
   142a4:	cmp	r0, #7
   142a8:	bne	142e8 <table_set_uint32@@Base+0x78>
   142ac:	ldr	r0, [r9]
   142b0:	cmp	r0, #0
   142b4:	bne	142cc <table_set_uint32@@Base+0x5c>
   142b8:	mov	r0, #4
   142bc:	bl	11ecc <malloc@plt>
   142c0:	cmp	r0, #0
   142c4:	str	r0, [r9]
   142c8:	beq	142e8 <table_set_uint32@@Base+0x78>
   142cc:	str	r8, [r0]
   142d0:	mov	r0, r6
   142d4:	mov	r1, r5
   142d8:	mov	r2, r4
   142dc:	mov	r3, #1
   142e0:	bl	12b44 <table_notify@@Base>
   142e4:	mov	r7, #0
   142e8:	mov	r0, r7
   142ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142f0 <table_set_int64@@Base>:
   142f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   142f4:	add	fp, sp, #24
   142f8:	mov	r4, r2
   142fc:	mov	r8, r1
   14300:	mov	r6, r0
   14304:	bl	14ab0 <table_get_cell_ptr@@Base>
   14308:	mov	r5, r0
   1430c:	mov	r0, r6
   14310:	mov	r1, r4
   14314:	bl	12c10 <table_get_col_ptr@@Base>
   14318:	ldr	r0, [r0, #4]
   1431c:	mvn	r7, #0
   14320:	cmp	r0, #8
   14324:	bne	14370 <table_set_int64@@Base+0x80>
   14328:	ldr	r0, [r5]
   1432c:	cmp	r0, #0
   14330:	bne	14348 <table_set_int64@@Base+0x58>
   14334:	mov	r0, #8
   14338:	bl	11ecc <malloc@plt>
   1433c:	cmp	r0, #0
   14340:	str	r0, [r5]
   14344:	beq	14370 <table_set_int64@@Base+0x80>
   14348:	ldr	r1, [fp, #12]
   1434c:	ldr	r2, [fp, #8]
   14350:	mov	r3, #1
   14354:	str	r2, [r0]
   14358:	str	r1, [r0, #4]
   1435c:	mov	r0, r6
   14360:	mov	r1, r8
   14364:	mov	r2, r4
   14368:	bl	12b44 <table_notify@@Base>
   1436c:	mov	r7, #0
   14370:	mov	r0, r7
   14374:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014378 <table_set_uint64@@Base>:
   14378:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1437c:	add	fp, sp, #24
   14380:	mov	r4, r2
   14384:	mov	r8, r1
   14388:	mov	r6, r0
   1438c:	bl	14ab0 <table_get_cell_ptr@@Base>
   14390:	mov	r5, r0
   14394:	mov	r0, r6
   14398:	mov	r1, r4
   1439c:	bl	12c10 <table_get_col_ptr@@Base>
   143a0:	ldr	r0, [r0, #4]
   143a4:	mvn	r7, #0
   143a8:	cmp	r0, #9
   143ac:	bne	143f8 <table_set_uint64@@Base+0x80>
   143b0:	ldr	r0, [r5]
   143b4:	cmp	r0, #0
   143b8:	bne	143d0 <table_set_uint64@@Base+0x58>
   143bc:	mov	r0, #8
   143c0:	bl	11ecc <malloc@plt>
   143c4:	cmp	r0, #0
   143c8:	str	r0, [r5]
   143cc:	beq	143f8 <table_set_uint64@@Base+0x80>
   143d0:	ldr	r1, [fp, #12]
   143d4:	ldr	r2, [fp, #8]
   143d8:	mov	r3, #1
   143dc:	str	r2, [r0]
   143e0:	str	r1, [r0, #4]
   143e4:	mov	r0, r6
   143e8:	mov	r1, r8
   143ec:	mov	r2, r4
   143f0:	bl	12b44 <table_notify@@Base>
   143f4:	mov	r7, #0
   143f8:	mov	r0, r7
   143fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014400 <table_set_short@@Base>:
   14400:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14404:	add	fp, sp, #24
   14408:	mov	r8, r3
   1440c:	mov	r4, r2
   14410:	mov	r9, r1
   14414:	mov	r6, r0
   14418:	bl	14ab0 <table_get_cell_ptr@@Base>
   1441c:	mov	r5, r0
   14420:	mov	r0, r6
   14424:	mov	r1, r4
   14428:	bl	12c10 <table_get_col_ptr@@Base>
   1442c:	ldr	r0, [r0, #4]
   14430:	mvn	r7, #0
   14434:	cmp	r0, #10
   14438:	bne	14478 <table_set_short@@Base+0x78>
   1443c:	ldr	r0, [r5]
   14440:	cmp	r0, #0
   14444:	bne	1445c <table_set_short@@Base+0x5c>
   14448:	mov	r0, #2
   1444c:	bl	11ecc <malloc@plt>
   14450:	cmp	r0, #0
   14454:	str	r0, [r5]
   14458:	beq	14478 <table_set_short@@Base+0x78>
   1445c:	strh	r8, [r0]
   14460:	mov	r0, r6
   14464:	mov	r1, r9
   14468:	mov	r2, r4
   1446c:	mov	r3, #1
   14470:	bl	12b44 <table_notify@@Base>
   14474:	mov	r7, #0
   14478:	mov	r0, r7
   1447c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014480 <table_set_ushort@@Base>:
   14480:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14484:	add	fp, sp, #24
   14488:	mov	r8, r3
   1448c:	mov	r4, r2
   14490:	mov	r9, r1
   14494:	mov	r6, r0
   14498:	bl	14ab0 <table_get_cell_ptr@@Base>
   1449c:	mov	r5, r0
   144a0:	mov	r0, r6
   144a4:	mov	r1, r4
   144a8:	bl	12c10 <table_get_col_ptr@@Base>
   144ac:	ldr	r0, [r0, #4]
   144b0:	mvn	r7, #0
   144b4:	cmp	r0, #11
   144b8:	bne	144f8 <table_set_ushort@@Base+0x78>
   144bc:	ldr	r0, [r5]
   144c0:	cmp	r0, #0
   144c4:	bne	144dc <table_set_ushort@@Base+0x5c>
   144c8:	mov	r0, #2
   144cc:	bl	11ecc <malloc@plt>
   144d0:	cmp	r0, #0
   144d4:	str	r0, [r5]
   144d8:	beq	144f8 <table_set_ushort@@Base+0x78>
   144dc:	strh	r8, [r0]
   144e0:	mov	r0, r6
   144e4:	mov	r1, r9
   144e8:	mov	r2, r4
   144ec:	mov	r3, #1
   144f0:	bl	12b44 <table_notify@@Base>
   144f4:	mov	r7, #0
   144f8:	mov	r0, r7
   144fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014500 <table_set_long@@Base>:
   14500:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14504:	add	fp, sp, #24
   14508:	mov	r8, r3
   1450c:	mov	r4, r2
   14510:	mov	r5, r1
   14514:	mov	r6, r0
   14518:	bl	14ab0 <table_get_cell_ptr@@Base>
   1451c:	mov	r9, r0
   14520:	mov	r0, r6
   14524:	mov	r1, r4
   14528:	bl	12c10 <table_get_col_ptr@@Base>
   1452c:	ldr	r0, [r0, #4]
   14530:	mvn	r7, #0
   14534:	cmp	r0, #12
   14538:	bne	14578 <table_set_long@@Base+0x78>
   1453c:	ldr	r0, [r9]
   14540:	cmp	r0, #0
   14544:	bne	1455c <table_set_long@@Base+0x5c>
   14548:	mov	r0, #4
   1454c:	bl	11ecc <malloc@plt>
   14550:	cmp	r0, #0
   14554:	str	r0, [r9]
   14558:	beq	14578 <table_set_long@@Base+0x78>
   1455c:	str	r8, [r0]
   14560:	mov	r0, r6
   14564:	mov	r1, r5
   14568:	mov	r2, r4
   1456c:	mov	r3, #1
   14570:	bl	12b44 <table_notify@@Base>
   14574:	mov	r7, #0
   14578:	mov	r0, r7
   1457c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014580 <table_set_ulong@@Base>:
   14580:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14584:	add	fp, sp, #24
   14588:	mov	r8, r3
   1458c:	mov	r4, r2
   14590:	mov	r5, r1
   14594:	mov	r6, r0
   14598:	bl	14ab0 <table_get_cell_ptr@@Base>
   1459c:	mov	r9, r0
   145a0:	mov	r0, r6
   145a4:	mov	r1, r4
   145a8:	bl	12c10 <table_get_col_ptr@@Base>
   145ac:	ldr	r0, [r0, #4]
   145b0:	mvn	r7, #0
   145b4:	cmp	r0, #13
   145b8:	bne	145f8 <table_set_ulong@@Base+0x78>
   145bc:	ldr	r0, [r9]
   145c0:	cmp	r0, #0
   145c4:	bne	145dc <table_set_ulong@@Base+0x5c>
   145c8:	mov	r0, #4
   145cc:	bl	11ecc <malloc@plt>
   145d0:	cmp	r0, #0
   145d4:	str	r0, [r9]
   145d8:	beq	145f8 <table_set_ulong@@Base+0x78>
   145dc:	str	r8, [r0]
   145e0:	mov	r0, r6
   145e4:	mov	r1, r5
   145e8:	mov	r2, r4
   145ec:	mov	r3, #1
   145f0:	bl	12b44 <table_notify@@Base>
   145f4:	mov	r7, #0
   145f8:	mov	r0, r7
   145fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014600 <table_set_llong@@Base>:
   14600:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14604:	add	fp, sp, #24
   14608:	mov	r4, r2
   1460c:	mov	r8, r1
   14610:	mov	r6, r0
   14614:	bl	14ab0 <table_get_cell_ptr@@Base>
   14618:	mov	r5, r0
   1461c:	mov	r0, r6
   14620:	mov	r1, r4
   14624:	bl	12c10 <table_get_col_ptr@@Base>
   14628:	ldr	r0, [r0, #4]
   1462c:	mvn	r7, #0
   14630:	cmp	r0, #14
   14634:	bne	14680 <table_set_llong@@Base+0x80>
   14638:	ldr	r0, [r5]
   1463c:	cmp	r0, #0
   14640:	bne	14658 <table_set_llong@@Base+0x58>
   14644:	mov	r0, #8
   14648:	bl	11ecc <malloc@plt>
   1464c:	cmp	r0, #0
   14650:	str	r0, [r5]
   14654:	beq	14680 <table_set_llong@@Base+0x80>
   14658:	ldr	r1, [fp, #12]
   1465c:	ldr	r2, [fp, #8]
   14660:	mov	r3, #1
   14664:	str	r2, [r0]
   14668:	str	r1, [r0, #4]
   1466c:	mov	r0, r6
   14670:	mov	r1, r8
   14674:	mov	r2, r4
   14678:	bl	12b44 <table_notify@@Base>
   1467c:	mov	r7, #0
   14680:	mov	r0, r7
   14684:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014688 <table_set_ullong@@Base>:
   14688:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1468c:	add	fp, sp, #24
   14690:	mov	r4, r2
   14694:	mov	r8, r1
   14698:	mov	r6, r0
   1469c:	bl	14ab0 <table_get_cell_ptr@@Base>
   146a0:	mov	r5, r0
   146a4:	mov	r0, r6
   146a8:	mov	r1, r4
   146ac:	bl	12c10 <table_get_col_ptr@@Base>
   146b0:	ldr	r0, [r0, #4]
   146b4:	mvn	r7, #0
   146b8:	cmp	r0, #15
   146bc:	bne	14708 <table_set_ullong@@Base+0x80>
   146c0:	ldr	r0, [r5]
   146c4:	cmp	r0, #0
   146c8:	bne	146e0 <table_set_ullong@@Base+0x58>
   146cc:	mov	r0, #8
   146d0:	bl	11ecc <malloc@plt>
   146d4:	cmp	r0, #0
   146d8:	str	r0, [r5]
   146dc:	beq	14708 <table_set_ullong@@Base+0x80>
   146e0:	ldr	r1, [fp, #12]
   146e4:	ldr	r2, [fp, #8]
   146e8:	mov	r3, #1
   146ec:	str	r2, [r0]
   146f0:	str	r1, [r0, #4]
   146f4:	mov	r0, r6
   146f8:	mov	r1, r8
   146fc:	mov	r2, r4
   14700:	bl	12b44 <table_notify@@Base>
   14704:	mov	r7, #0
   14708:	mov	r0, r7
   1470c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014710 <table_set_float@@Base>:
   14710:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14714:	add	fp, sp, #24
   14718:	vpush	{d8}
   1471c:	vmov.f32	s16, s0
   14720:	mov	r4, r2
   14724:	mov	r8, r1
   14728:	mov	r6, r0
   1472c:	bl	14ab0 <table_get_cell_ptr@@Base>
   14730:	mov	r5, r0
   14734:	mov	r0, r6
   14738:	mov	r1, r4
   1473c:	bl	12c10 <table_get_col_ptr@@Base>
   14740:	ldr	r0, [r0, #4]
   14744:	mvn	r7, #0
   14748:	cmp	r0, #16
   1474c:	bne	14790 <table_set_float@@Base+0x80>
   14750:	ldr	r0, [r5]
   14754:	cmp	r0, #0
   14758:	bne	14770 <table_set_float@@Base+0x60>
   1475c:	mov	r0, #4
   14760:	bl	11ecc <malloc@plt>
   14764:	cmp	r0, #0
   14768:	str	r0, [r5]
   1476c:	beq	14790 <table_set_float@@Base+0x80>
   14770:	vmov	r1, s16
   14774:	mov	r2, r4
   14778:	mov	r3, #1
   1477c:	str	r1, [r0]
   14780:	mov	r0, r6
   14784:	mov	r1, r8
   14788:	bl	12b44 <table_notify@@Base>
   1478c:	mov	r7, #0
   14790:	mov	r0, r7
   14794:	vpop	{d8}
   14798:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001479c <table_set_double@@Base>:
   1479c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147a0:	add	fp, sp, #24
   147a4:	vpush	{d8}
   147a8:	vorr	d8, d0, d0
   147ac:	mov	r4, r2
   147b0:	mov	r5, r1
   147b4:	mov	r6, r0
   147b8:	bl	14ab0 <table_get_cell_ptr@@Base>
   147bc:	mov	r8, r0
   147c0:	mov	r0, r6
   147c4:	mov	r1, r4
   147c8:	bl	12c10 <table_get_col_ptr@@Base>
   147cc:	ldr	r0, [r0, #4]
   147d0:	mvn	r7, #0
   147d4:	cmp	r0, #17
   147d8:	bne	14818 <table_set_double@@Base+0x7c>
   147dc:	ldr	r0, [r8]
   147e0:	cmp	r0, #0
   147e4:	bne	147fc <table_set_double@@Base+0x60>
   147e8:	mov	r0, #8
   147ec:	bl	11ecc <malloc@plt>
   147f0:	cmp	r0, #0
   147f4:	str	r0, [r8]
   147f8:	beq	14818 <table_set_double@@Base+0x7c>
   147fc:	vst1.8	{d8}, [r0]
   14800:	mov	r0, r6
   14804:	mov	r1, r5
   14808:	mov	r2, r4
   1480c:	mov	r3, #1
   14810:	bl	12b44 <table_notify@@Base>
   14814:	mov	r7, #0
   14818:	mov	r0, r7
   1481c:	vpop	{d8}
   14820:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014824 <table_set_ldouble@@Base>:
   14824:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14828:	add	fp, sp, #24
   1482c:	vpush	{d8}
   14830:	vorr	d8, d0, d0
   14834:	mov	r4, r2
   14838:	mov	r5, r1
   1483c:	mov	r6, r0
   14840:	bl	14ab0 <table_get_cell_ptr@@Base>
   14844:	mov	r8, r0
   14848:	mov	r0, r6
   1484c:	mov	r1, r4
   14850:	bl	12c10 <table_get_col_ptr@@Base>
   14854:	ldr	r0, [r0, #4]
   14858:	mvn	r7, #0
   1485c:	cmp	r0, #18
   14860:	bne	148a0 <table_set_ldouble@@Base+0x7c>
   14864:	ldr	r0, [r8]
   14868:	cmp	r0, #0
   1486c:	bne	14884 <table_set_ldouble@@Base+0x60>
   14870:	mov	r0, #8
   14874:	bl	11ecc <malloc@plt>
   14878:	cmp	r0, #0
   1487c:	str	r0, [r8]
   14880:	beq	148a0 <table_set_ldouble@@Base+0x7c>
   14884:	vst1.8	{d8}, [r0]
   14888:	mov	r0, r6
   1488c:	mov	r1, r5
   14890:	mov	r2, r4
   14894:	mov	r3, #1
   14898:	bl	12b44 <table_notify@@Base>
   1489c:	mov	r7, #0
   148a0:	mov	r0, r7
   148a4:	vpop	{d8}
   148a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000148ac <table_set_string@@Base>:
   148ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148b0:	add	fp, sp, #24
   148b4:	mov	r8, r3
   148b8:	mov	r4, r2
   148bc:	mov	r9, r1
   148c0:	mov	r6, r0
   148c4:	bl	14ab0 <table_get_cell_ptr@@Base>
   148c8:	mov	r5, r0
   148cc:	mov	r0, r6
   148d0:	mov	r1, r4
   148d4:	bl	12c10 <table_get_col_ptr@@Base>
   148d8:	ldr	r0, [r0, #4]
   148dc:	mvn	r7, #0
   148e0:	cmp	r0, #21
   148e4:	bne	1492c <table_set_string@@Base+0x80>
   148e8:	mov	r0, r8
   148ec:	bl	11ef0 <strlen@plt>
   148f0:	ldr	r2, [r5]
   148f4:	add	r1, r0, #1
   148f8:	mov	r0, r2
   148fc:	bl	11eb4 <realloc@plt>
   14900:	cmp	r0, #0
   14904:	str	r0, [r5]
   14908:	beq	1492c <table_set_string@@Base+0x80>
   1490c:	mov	r1, r8
   14910:	bl	11ec0 <strcpy@plt>
   14914:	mov	r0, r6
   14918:	mov	r1, r9
   1491c:	mov	r2, r4
   14920:	mov	r3, #1
   14924:	bl	12b44 <table_notify@@Base>
   14928:	mov	r7, #0
   1492c:	mov	r0, r7
   14930:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014934 <table_set_char@@Base>:
   14934:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14938:	add	fp, sp, #24
   1493c:	mov	r8, r3
   14940:	mov	r4, r2
   14944:	mov	r9, r1
   14948:	mov	r6, r0
   1494c:	bl	14ab0 <table_get_cell_ptr@@Base>
   14950:	mov	r5, r0
   14954:	mov	r0, r6
   14958:	mov	r1, r4
   1495c:	bl	12c10 <table_get_col_ptr@@Base>
   14960:	ldr	r0, [r0, #4]
   14964:	mvn	r7, #0
   14968:	cmp	r0, #19
   1496c:	bne	149ac <table_set_char@@Base+0x78>
   14970:	ldr	r0, [r5]
   14974:	cmp	r0, #0
   14978:	bne	14990 <table_set_char@@Base+0x5c>
   1497c:	mov	r0, #1
   14980:	bl	11ecc <malloc@plt>
   14984:	cmp	r0, #0
   14988:	str	r0, [r5]
   1498c:	beq	149ac <table_set_char@@Base+0x78>
   14990:	strb	r8, [r0]
   14994:	mov	r0, r6
   14998:	mov	r1, r9
   1499c:	mov	r2, r4
   149a0:	mov	r3, #1
   149a4:	bl	12b44 <table_notify@@Base>
   149a8:	mov	r7, #0
   149ac:	mov	r0, r7
   149b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000149b4 <table_set_uchar@@Base>:
   149b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   149b8:	add	fp, sp, #24
   149bc:	mov	r8, r3
   149c0:	mov	r4, r2
   149c4:	mov	r9, r1
   149c8:	mov	r6, r0
   149cc:	bl	14ab0 <table_get_cell_ptr@@Base>
   149d0:	mov	r5, r0
   149d4:	mov	r0, r6
   149d8:	mov	r1, r4
   149dc:	bl	12c10 <table_get_col_ptr@@Base>
   149e0:	ldr	r0, [r0, #4]
   149e4:	mvn	r7, #0
   149e8:	cmp	r0, #20
   149ec:	bne	14a2c <table_set_uchar@@Base+0x78>
   149f0:	ldr	r0, [r5]
   149f4:	cmp	r0, #0
   149f8:	bne	14a10 <table_set_uchar@@Base+0x5c>
   149fc:	mov	r0, #1
   14a00:	bl	11ecc <malloc@plt>
   14a04:	cmp	r0, #0
   14a08:	str	r0, [r5]
   14a0c:	beq	14a2c <table_set_uchar@@Base+0x78>
   14a10:	strb	r8, [r0]
   14a14:	mov	r0, r6
   14a18:	mov	r1, r9
   14a1c:	mov	r2, r4
   14a20:	mov	r3, #1
   14a24:	bl	12b44 <table_notify@@Base>
   14a28:	mov	r7, #0
   14a2c:	mov	r0, r7
   14a30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a34 <table_set_ptr@@Base>:
   14a34:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a38:	add	fp, sp, #24
   14a3c:	mov	r8, r3
   14a40:	mov	r4, r2
   14a44:	mov	r5, r1
   14a48:	mov	r6, r0
   14a4c:	bl	14ab0 <table_get_cell_ptr@@Base>
   14a50:	mov	r7, r0
   14a54:	mov	r0, r6
   14a58:	mov	r1, r4
   14a5c:	bl	12c10 <table_get_col_ptr@@Base>
   14a60:	ldr	r1, [r0, #4]
   14a64:	mvn	r0, #0
   14a68:	cmp	r1, #23
   14a6c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   14a70:	mov	r0, r6
   14a74:	mov	r1, r5
   14a78:	mov	r2, r4
   14a7c:	mov	r3, #1
   14a80:	str	r8, [r7]
   14a84:	bl	12b44 <table_notify@@Base>
   14a88:	mov	r0, #0
   14a8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014a90 <table_cell_init@@Base>:
   14a90:	push	{r4, sl, fp, lr}
   14a94:	add	fp, sp, #8
   14a98:	mov	r4, r2
   14a9c:	bl	1392c <table_get_row_ptr@@Base>
   14aa0:	ldr	r0, [r0]
   14aa4:	mov	r1, #0
   14aa8:	str	r1, [r0, r4, lsl #2]
   14aac:	pop	{r4, sl, fp, pc}

00014ab0 <table_get_cell_ptr@@Base>:
   14ab0:	push	{r4, sl, fp, lr}
   14ab4:	add	fp, sp, #8
   14ab8:	mov	r4, r2
   14abc:	bl	1392c <table_get_row_ptr@@Base>
   14ac0:	ldr	r0, [r0]
   14ac4:	add	r0, r0, r4, lsl #2
   14ac8:	pop	{r4, sl, fp, pc}

00014acc <table_cell_destroy@@Base>:
   14acc:	push	{r4, r5, r6, sl, fp, lr}
   14ad0:	add	fp, sp, #16
   14ad4:	mov	r5, r1
   14ad8:	mov	r1, r2
   14adc:	mov	r4, r2
   14ae0:	mov	r6, r0
   14ae4:	bl	12cb8 <table_get_column_data_type@@Base>
   14ae8:	cmp	r0, #23
   14aec:	popeq	{r4, r5, r6, sl, fp, pc}
   14af0:	mov	r0, r6
   14af4:	mov	r1, r5
   14af8:	bl	1392c <table_get_row_ptr@@Base>
   14afc:	ldr	r0, [r0]
   14b00:	ldr	r0, [r0, r4, lsl #2]
   14b04:	cmp	r0, #0
   14b08:	beq	14b14 <table_cell_destroy@@Base+0x48>
   14b0c:	pop	{r4, r5, r6, sl, fp, lr}
   14b10:	b	11ea8 <free@plt>
   14b14:	pop	{r4, r5, r6, sl, fp, pc}

00014b18 <table_cell_to_buffer@@Base>:
   14b18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b1c:	add	fp, sp, #24
   14b20:	sub	sp, sp, #8
   14b24:	mov	r7, r1
   14b28:	mov	r1, r2
   14b2c:	mov	r5, r3
   14b30:	mov	r6, r2
   14b34:	mov	r4, r0
   14b38:	bl	12cb8 <table_get_column_data_type@@Base>
   14b3c:	cmp	r0, #23
   14b40:	bhi	14db0 <table_cell_to_buffer@@Base+0x298>
   14b44:	ldr	r8, [fp, #8]
   14b48:	add	r1, pc, #0
   14b4c:	ldr	pc, [r1, r0, lsl #2]
   14b50:			; <UNDEFINED> instruction: 0x00014bb0
   14b54:	andeq	r4, r1, r4, asr #23
   14b58:	ldrdeq	r4, [r1], -r8
   14b5c:	andeq	r4, r1, ip, ror #23
   14b60:	andeq	r4, r1, r0, lsl #24
   14b64:	andeq	r4, r1, r4, lsl ip
   14b68:	andeq	r4, r1, r8, lsr #24
   14b6c:	andeq	r4, r1, ip, lsr ip
   14b70:	andeq	r4, r1, ip, asr ip
   14b74:	andeq	r4, r1, r0, ror ip
   14b78:	andeq	r4, r1, r4, lsl #25
   14b7c:	andeq	r4, r1, r4, lsr #25
   14b80:	andeq	r4, r1, r4, asr #25
   14b84:	andeq	r4, r1, r4, ror #25
   14b88:	andeq	r4, r1, r4, lsl #26
   14b8c:	andeq	r4, r1, r4, lsr #26
   14b90:	andeq	r4, r1, r4, asr #26
   14b94:	andeq	r4, r1, r8, ror #26
   14b98:	andeq	r4, r1, r8, lsl #27
   14b9c:			; <UNDEFINED> instruction: 0x00014dbc
   14ba0:	ldrdeq	r4, [r1], -r0
   14ba4:	strdeq	r4, [r1], -r0
   14ba8:	andeq	r4, r1, r0, lsl lr
   14bac:	andeq	r4, r1, r4, asr #28
   14bb0:	mov	r0, r4
   14bb4:	mov	r1, r7
   14bb8:	mov	r2, r6
   14bbc:	bl	136e8 <table_get_int@@Base>
   14bc0:	b	14e20 <table_cell_to_buffer@@Base+0x308>
   14bc4:	mov	r0, r4
   14bc8:	mov	r1, r7
   14bcc:	mov	r2, r6
   14bd0:	bl	13700 <table_get_uint@@Base>
   14bd4:	b	14c4c <table_cell_to_buffer@@Base+0x134>
   14bd8:	mov	r0, r4
   14bdc:	mov	r1, r7
   14be0:	mov	r2, r6
   14be4:	bl	13718 <table_get_int8@@Base>
   14be8:	b	14e20 <table_cell_to_buffer@@Base+0x308>
   14bec:	mov	r0, r4
   14bf0:	mov	r1, r7
   14bf4:	mov	r2, r6
   14bf8:	bl	13730 <table_get_uint8@@Base>
   14bfc:	b	14c4c <table_cell_to_buffer@@Base+0x134>
   14c00:	mov	r0, r4
   14c04:	mov	r1, r7
   14c08:	mov	r2, r6
   14c0c:	bl	13748 <table_get_int16@@Base>
   14c10:	b	14e20 <table_cell_to_buffer@@Base+0x308>
   14c14:	mov	r0, r4
   14c18:	mov	r1, r7
   14c1c:	mov	r2, r6
   14c20:	bl	13760 <table_get_uint16@@Base>
   14c24:	b	14c4c <table_cell_to_buffer@@Base+0x134>
   14c28:	mov	r0, r4
   14c2c:	mov	r1, r7
   14c30:	mov	r2, r6
   14c34:	bl	13778 <table_get_int32@@Base>
   14c38:	b	14e20 <table_cell_to_buffer@@Base+0x308>
   14c3c:	mov	r0, r4
   14c40:	mov	r1, r7
   14c44:	mov	r2, r6
   14c48:	bl	13790 <table_get_uint32@@Base>
   14c4c:	movw	r2, #22003	; 0x55f3
   14c50:	mov	r3, r0
   14c54:	movt	r2, #1
   14c58:	b	14e2c <table_cell_to_buffer@@Base+0x314>
   14c5c:	mov	r0, r4
   14c60:	mov	r1, r7
   14c64:	mov	r2, r6
   14c68:	bl	137a8 <table_get_int64@@Base>
   14c6c:	b	14d14 <table_cell_to_buffer@@Base+0x1fc>
   14c70:	mov	r0, r4
   14c74:	mov	r1, r7
   14c78:	mov	r2, r6
   14c7c:	bl	137c0 <table_get_uint64@@Base>
   14c80:	b	14d34 <table_cell_to_buffer@@Base+0x21c>
   14c84:	mov	r0, r4
   14c88:	mov	r1, r7
   14c8c:	mov	r2, r6
   14c90:	bl	137d8 <table_get_short@@Base>
   14c94:	movw	r2, #22016	; 0x5600
   14c98:	mov	r3, r0
   14c9c:	movt	r2, #1
   14ca0:	b	14e2c <table_cell_to_buffer@@Base+0x314>
   14ca4:	mov	r0, r4
   14ca8:	mov	r1, r7
   14cac:	mov	r2, r6
   14cb0:	bl	137f0 <table_get_ushort@@Base>
   14cb4:	movw	r2, #22020	; 0x5604
   14cb8:	mov	r3, r0
   14cbc:	movt	r2, #1
   14cc0:	b	14e2c <table_cell_to_buffer@@Base+0x314>
   14cc4:	mov	r0, r4
   14cc8:	mov	r1, r7
   14ccc:	mov	r2, r6
   14cd0:	bl	13808 <table_get_long@@Base>
   14cd4:	movw	r2, #22024	; 0x5608
   14cd8:	mov	r3, r0
   14cdc:	movt	r2, #1
   14ce0:	b	14e2c <table_cell_to_buffer@@Base+0x314>
   14ce4:	mov	r0, r4
   14ce8:	mov	r1, r7
   14cec:	mov	r2, r6
   14cf0:	bl	13820 <table_get_ulong@@Base>
   14cf4:	movw	r2, #22028	; 0x560c
   14cf8:	mov	r3, r0
   14cfc:	movt	r2, #1
   14d00:	b	14e2c <table_cell_to_buffer@@Base+0x314>
   14d04:	mov	r0, r4
   14d08:	mov	r1, r7
   14d0c:	mov	r2, r6
   14d10:	bl	13838 <table_get_llong@@Base>
   14d14:	movw	r2, #22006	; 0x55f6
   14d18:	stm	sp, {r0, r1}
   14d1c:	movt	r2, #1
   14d20:	b	14da4 <table_cell_to_buffer@@Base+0x28c>
   14d24:	mov	r0, r4
   14d28:	mov	r1, r7
   14d2c:	mov	r2, r6
   14d30:	bl	13850 <table_get_ullong@@Base>
   14d34:	movw	r2, #22011	; 0x55fb
   14d38:	stm	sp, {r0, r1}
   14d3c:	movt	r2, #1
   14d40:	b	14da4 <table_cell_to_buffer@@Base+0x28c>
   14d44:	mov	r0, r4
   14d48:	mov	r1, r7
   14d4c:	mov	r2, r6
   14d50:	bl	13868 <table_get_float@@Base>
   14d54:	movw	r2, #22035	; 0x5613
   14d58:	vcvt.f64.f32	d16, s0
   14d5c:	vstr	d16, [sp]
   14d60:	movt	r2, #1
   14d64:	b	14da4 <table_cell_to_buffer@@Base+0x28c>
   14d68:	mov	r0, r4
   14d6c:	mov	r1, r7
   14d70:	mov	r2, r6
   14d74:	bl	13880 <table_get_double@@Base>
   14d78:	movw	r2, #22038	; 0x5616
   14d7c:	vstr	d0, [sp]
   14d80:	movt	r2, #1
   14d84:	b	14da4 <table_cell_to_buffer@@Base+0x28c>
   14d88:	mov	r0, r4
   14d8c:	mov	r1, r7
   14d90:	mov	r2, r6
   14d94:	bl	13898 <table_get_ldouble@@Base>
   14d98:	movw	r2, #22042	; 0x561a
   14d9c:	vstr	d0, [sp]
   14da0:	movt	r2, #1
   14da4:	mov	r0, r5
   14da8:	mov	r1, r8
   14dac:	bl	11efc <snprintf@plt>
   14db0:	mov	r0, #0
   14db4:	sub	sp, fp, #24
   14db8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14dbc:	mov	r0, r4
   14dc0:	mov	r1, r7
   14dc4:	mov	r2, r6
   14dc8:	bl	138b0 <table_get_char@@Base>
   14dcc:	b	14de0 <table_cell_to_buffer@@Base+0x2c8>
   14dd0:	mov	r0, r4
   14dd4:	mov	r1, r7
   14dd8:	mov	r2, r6
   14ddc:	bl	138c8 <table_get_uchar@@Base>
   14de0:	movw	r2, #22046	; 0x561e
   14de4:	mov	r3, r0
   14de8:	movt	r2, #1
   14dec:	b	14e2c <table_cell_to_buffer@@Base+0x314>
   14df0:	mov	r0, r4
   14df4:	mov	r1, r7
   14df8:	mov	r2, r6
   14dfc:	bl	138e0 <table_get_string@@Base>
   14e00:	movw	r2, #22032	; 0x5610
   14e04:	mov	r3, r0
   14e08:	movt	r2, #1
   14e0c:	b	14e2c <table_cell_to_buffer@@Base+0x314>
   14e10:	mov	r0, r4
   14e14:	mov	r1, r7
   14e18:	mov	r2, r6
   14e1c:	bl	136d0 <table_get_bool@@Base>
   14e20:	movw	r2, #22000	; 0x55f0
   14e24:	mov	r3, r0
   14e28:	movt	r2, #1
   14e2c:	mov	r0, r5
   14e30:	mov	r1, r8
   14e34:	bl	11efc <snprintf@plt>
   14e38:	mov	r0, #0
   14e3c:	sub	sp, fp, #24
   14e40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14e44:	mov	r0, r4
   14e48:	mov	r1, r7
   14e4c:	mov	r2, r6
   14e50:	bl	138f4 <table_get_ptr@@Base>
   14e54:	movw	r2, #22049	; 0x5621
   14e58:	mov	r3, r0
   14e5c:	movt	r2, #1
   14e60:	b	14e2c <table_cell_to_buffer@@Base+0x314>

00014e64 <table_cell_from_buffer@@Base>:
   14e64:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e68:	add	fp, sp, #24
   14e6c:	sub	sp, sp, #264	; 0x108
   14e70:	mov	r5, r1
   14e74:	mov	r1, r2
   14e78:	mov	r7, r3
   14e7c:	mov	r4, r2
   14e80:	mov	r6, r0
   14e84:	bl	12cb8 <table_get_column_data_type@@Base>
   14e88:	cmp	r0, #23
   14e8c:	bhi	15460 <table_cell_from_buffer@@Base+0x5fc>
   14e90:	add	r1, pc, #0
   14e94:	ldr	pc, [r1, r0, lsl #2]
   14e98:	strdeq	r4, [r1], -r8
   14e9c:	andeq	r4, r1, r0, lsr pc
   14ea0:	andeq	r4, r1, r8, ror #30
   14ea4:	andeq	r4, r1, r0, lsr #31
   14ea8:	ldrdeq	r4, [r1], -r8
   14eac:	andeq	r5, r1, r0, lsl r0
   14eb0:	andeq	r5, r1, r8, asr #32
   14eb4:	andeq	r5, r1, r0, lsl #1
   14eb8:	strheq	r5, [r1], -r8
   14ebc:	strdeq	r5, [r1], -r8
   14ec0:	andeq	r5, r1, r8, lsr r1
   14ec4:	andeq	r5, r1, r0, ror r1
   14ec8:	andeq	r5, r1, r8, lsr #3
   14ecc:	andeq	r5, r1, r0, ror #3
   14ed0:	andeq	r5, r1, r8, lsl r2
   14ed4:	andeq	r5, r1, r8, asr r2
   14ed8:	muleq	r1, r8, r2
   14edc:	ldrdeq	r5, [r1], -r0
   14ee0:	andeq	r5, r1, r8, lsl #6
   14ee4:	andeq	r5, r1, r0, asr #6
   14ee8:	andeq	r5, r1, r8, ror r3
   14eec:			; <UNDEFINED> instruction: 0x000153b0
   14ef0:	andeq	r5, r1, r8, ror #7
   14ef4:	andeq	r5, r1, ip, lsr #8
   14ef8:	movw	r1, #22000	; 0x55f0
   14efc:	add	r2, sp, #8
   14f00:	mov	r0, r7
   14f04:	movt	r1, #1
   14f08:	bl	11f08 <__isoc99_sscanf@plt>
   14f0c:	mvn	r7, #0
   14f10:	cmp	r0, #1
   14f14:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   14f18:	ldr	r3, [sp, #8]
   14f1c:	mov	r0, r6
   14f20:	mov	r1, r5
   14f24:	mov	r2, r4
   14f28:	bl	13ef0 <table_set_int@@Base>
   14f2c:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   14f30:	movw	r1, #22003	; 0x55f3
   14f34:	add	r2, sp, #8
   14f38:	mov	r0, r7
   14f3c:	movt	r1, #1
   14f40:	bl	11f08 <__isoc99_sscanf@plt>
   14f44:	mvn	r7, #0
   14f48:	cmp	r0, #1
   14f4c:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   14f50:	ldr	r3, [sp, #8]
   14f54:	mov	r0, r6
   14f58:	mov	r1, r5
   14f5c:	mov	r2, r4
   14f60:	bl	13f70 <table_set_uint@@Base>
   14f64:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   14f68:	movw	r1, #22052	; 0x5624
   14f6c:	add	r2, sp, #8
   14f70:	mov	r0, r7
   14f74:	movt	r1, #1
   14f78:	bl	11f08 <__isoc99_sscanf@plt>
   14f7c:	mvn	r7, #0
   14f80:	cmp	r0, #1
   14f84:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   14f88:	ldrsb	r3, [sp, #8]
   14f8c:	mov	r0, r6
   14f90:	mov	r1, r5
   14f94:	mov	r2, r4
   14f98:	bl	13ff0 <table_set_int8@@Base>
   14f9c:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   14fa0:	movw	r1, #22057	; 0x5629
   14fa4:	add	r2, sp, #8
   14fa8:	mov	r0, r7
   14fac:	movt	r1, #1
   14fb0:	bl	11f08 <__isoc99_sscanf@plt>
   14fb4:	mvn	r7, #0
   14fb8:	cmp	r0, #1
   14fbc:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   14fc0:	ldrb	r3, [sp, #8]
   14fc4:	mov	r0, r6
   14fc8:	mov	r1, r5
   14fcc:	mov	r2, r4
   14fd0:	bl	14070 <table_set_uint8@@Base>
   14fd4:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   14fd8:	movw	r1, #22016	; 0x5600
   14fdc:	add	r2, sp, #8
   14fe0:	mov	r0, r7
   14fe4:	movt	r1, #1
   14fe8:	bl	11f08 <__isoc99_sscanf@plt>
   14fec:	mvn	r7, #0
   14ff0:	cmp	r0, #1
   14ff4:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   14ff8:	ldrsh	r3, [sp, #8]
   14ffc:	mov	r0, r6
   15000:	mov	r1, r5
   15004:	mov	r2, r4
   15008:	bl	140f0 <table_set_int16@@Base>
   1500c:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   15010:	movw	r1, #22020	; 0x5604
   15014:	add	r2, sp, #8
   15018:	mov	r0, r7
   1501c:	movt	r1, #1
   15020:	bl	11f08 <__isoc99_sscanf@plt>
   15024:	mvn	r7, #0
   15028:	cmp	r0, #1
   1502c:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   15030:	ldrh	r3, [sp, #8]
   15034:	mov	r0, r6
   15038:	mov	r1, r5
   1503c:	mov	r2, r4
   15040:	bl	14170 <table_set_uint16@@Base>
   15044:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   15048:	movw	r1, #22000	; 0x55f0
   1504c:	add	r2, sp, #8
   15050:	mov	r0, r7
   15054:	movt	r1, #1
   15058:	bl	11f08 <__isoc99_sscanf@plt>
   1505c:	mvn	r7, #0
   15060:	cmp	r0, #1
   15064:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   15068:	ldr	r3, [sp, #8]
   1506c:	mov	r0, r6
   15070:	mov	r1, r5
   15074:	mov	r2, r4
   15078:	bl	141f0 <table_set_int32@@Base>
   1507c:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   15080:	movw	r1, #22003	; 0x55f3
   15084:	add	r2, sp, #8
   15088:	mov	r0, r7
   1508c:	movt	r1, #1
   15090:	bl	11f08 <__isoc99_sscanf@plt>
   15094:	mvn	r7, #0
   15098:	cmp	r0, #1
   1509c:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   150a0:	ldr	r3, [sp, #8]
   150a4:	mov	r0, r6
   150a8:	mov	r1, r5
   150ac:	mov	r2, r4
   150b0:	bl	14270 <table_set_uint32@@Base>
   150b4:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   150b8:	movw	r1, #22006	; 0x55f6
   150bc:	add	r2, sp, #8
   150c0:	mov	r0, r7
   150c4:	movt	r1, #1
   150c8:	bl	11f08 <__isoc99_sscanf@plt>
   150cc:	mvn	r7, #0
   150d0:	cmp	r0, #1
   150d4:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   150d8:	ldr	r0, [sp, #8]
   150dc:	ldr	r1, [sp, #12]
   150e0:	mov	r2, r4
   150e4:	stm	sp, {r0, r1}
   150e8:	mov	r0, r6
   150ec:	mov	r1, r5
   150f0:	bl	142f0 <table_set_int64@@Base>
   150f4:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   150f8:	movw	r1, #22011	; 0x55fb
   150fc:	add	r2, sp, #8
   15100:	mov	r0, r7
   15104:	movt	r1, #1
   15108:	bl	11f08 <__isoc99_sscanf@plt>
   1510c:	mvn	r7, #0
   15110:	cmp	r0, #1
   15114:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   15118:	ldr	r0, [sp, #8]
   1511c:	ldr	r1, [sp, #12]
   15120:	mov	r2, r4
   15124:	stm	sp, {r0, r1}
   15128:	mov	r0, r6
   1512c:	mov	r1, r5
   15130:	bl	14378 <table_set_uint64@@Base>
   15134:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   15138:	movw	r1, #22016	; 0x5600
   1513c:	add	r2, sp, #8
   15140:	mov	r0, r7
   15144:	movt	r1, #1
   15148:	bl	11f08 <__isoc99_sscanf@plt>
   1514c:	mvn	r7, #0
   15150:	cmp	r0, #1
   15154:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   15158:	ldrsh	r3, [sp, #8]
   1515c:	mov	r0, r6
   15160:	mov	r1, r5
   15164:	mov	r2, r4
   15168:	bl	14400 <table_set_short@@Base>
   1516c:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   15170:	movw	r1, #22020	; 0x5604
   15174:	add	r2, sp, #8
   15178:	mov	r0, r7
   1517c:	movt	r1, #1
   15180:	bl	11f08 <__isoc99_sscanf@plt>
   15184:	mvn	r7, #0
   15188:	cmp	r0, #1
   1518c:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   15190:	ldrh	r3, [sp, #8]
   15194:	mov	r0, r6
   15198:	mov	r1, r5
   1519c:	mov	r2, r4
   151a0:	bl	14480 <table_set_ushort@@Base>
   151a4:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   151a8:	movw	r1, #22024	; 0x5608
   151ac:	add	r2, sp, #8
   151b0:	mov	r0, r7
   151b4:	movt	r1, #1
   151b8:	bl	11f08 <__isoc99_sscanf@plt>
   151bc:	mvn	r7, #0
   151c0:	cmp	r0, #1
   151c4:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   151c8:	ldr	r3, [sp, #8]
   151cc:	mov	r0, r6
   151d0:	mov	r1, r5
   151d4:	mov	r2, r4
   151d8:	bl	14500 <table_set_long@@Base>
   151dc:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   151e0:	movw	r1, #22028	; 0x560c
   151e4:	add	r2, sp, #8
   151e8:	mov	r0, r7
   151ec:	movt	r1, #1
   151f0:	bl	11f08 <__isoc99_sscanf@plt>
   151f4:	mvn	r7, #0
   151f8:	cmp	r0, #1
   151fc:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   15200:	ldr	r3, [sp, #8]
   15204:	mov	r0, r6
   15208:	mov	r1, r5
   1520c:	mov	r2, r4
   15210:	bl	14580 <table_set_ulong@@Base>
   15214:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   15218:	movw	r1, #22006	; 0x55f6
   1521c:	add	r2, sp, #8
   15220:	mov	r0, r7
   15224:	movt	r1, #1
   15228:	bl	11f08 <__isoc99_sscanf@plt>
   1522c:	mvn	r7, #0
   15230:	cmp	r0, #1
   15234:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   15238:	ldr	r0, [sp, #8]
   1523c:	ldr	r1, [sp, #12]
   15240:	mov	r2, r4
   15244:	stm	sp, {r0, r1}
   15248:	mov	r0, r6
   1524c:	mov	r1, r5
   15250:	bl	14600 <table_set_llong@@Base>
   15254:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   15258:	movw	r1, #22011	; 0x55fb
   1525c:	add	r2, sp, #8
   15260:	mov	r0, r7
   15264:	movt	r1, #1
   15268:	bl	11f08 <__isoc99_sscanf@plt>
   1526c:	mvn	r7, #0
   15270:	cmp	r0, #1
   15274:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   15278:	ldr	r0, [sp, #8]
   1527c:	ldr	r1, [sp, #12]
   15280:	mov	r2, r4
   15284:	stm	sp, {r0, r1}
   15288:	mov	r0, r6
   1528c:	mov	r1, r5
   15290:	bl	14688 <table_set_ullong@@Base>
   15294:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   15298:	movw	r1, #22035	; 0x5613
   1529c:	add	r2, sp, #8
   152a0:	mov	r0, r7
   152a4:	movt	r1, #1
   152a8:	bl	11f08 <__isoc99_sscanf@plt>
   152ac:	mvn	r7, #0
   152b0:	cmp	r0, #1
   152b4:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   152b8:	vldr	s0, [sp, #8]
   152bc:	mov	r0, r6
   152c0:	mov	r1, r5
   152c4:	mov	r2, r4
   152c8:	bl	14710 <table_set_float@@Base>
   152cc:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   152d0:	movw	r1, #22038	; 0x5616
   152d4:	add	r2, sp, #8
   152d8:	mov	r0, r7
   152dc:	movt	r1, #1
   152e0:	bl	11f08 <__isoc99_sscanf@plt>
   152e4:	mvn	r7, #0
   152e8:	cmp	r0, #1
   152ec:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   152f0:	vldr	d0, [sp, #8]
   152f4:	mov	r0, r6
   152f8:	mov	r1, r5
   152fc:	mov	r2, r4
   15300:	bl	1479c <table_set_double@@Base>
   15304:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   15308:	movw	r1, #22042	; 0x561a
   1530c:	add	r2, sp, #8
   15310:	mov	r0, r7
   15314:	movt	r1, #1
   15318:	bl	11f08 <__isoc99_sscanf@plt>
   1531c:	mvn	r7, #0
   15320:	cmp	r0, #1
   15324:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   15328:	vldr	d0, [sp, #8]
   1532c:	mov	r0, r6
   15330:	mov	r1, r5
   15334:	mov	r2, r4
   15338:	bl	14824 <table_set_ldouble@@Base>
   1533c:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   15340:	movw	r1, #22046	; 0x561e
   15344:	add	r2, sp, #8
   15348:	mov	r0, r7
   1534c:	movt	r1, #1
   15350:	bl	11f08 <__isoc99_sscanf@plt>
   15354:	mvn	r7, #0
   15358:	cmp	r0, #1
   1535c:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   15360:	ldrb	r3, [sp, #8]
   15364:	mov	r0, r6
   15368:	mov	r1, r5
   1536c:	mov	r2, r4
   15370:	bl	14934 <table_set_char@@Base>
   15374:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   15378:	movw	r1, #22046	; 0x561e
   1537c:	add	r2, sp, #8
   15380:	mov	r0, r7
   15384:	movt	r1, #1
   15388:	bl	11f08 <__isoc99_sscanf@plt>
   1538c:	mvn	r7, #0
   15390:	cmp	r0, #1
   15394:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   15398:	ldrb	r3, [sp, #8]
   1539c:	mov	r0, r6
   153a0:	mov	r1, r5
   153a4:	mov	r2, r4
   153a8:	bl	149b4 <table_set_uchar@@Base>
   153ac:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   153b0:	movw	r1, #22032	; 0x5610
   153b4:	add	r2, sp, #8
   153b8:	mov	r0, r7
   153bc:	movt	r1, #1
   153c0:	bl	11f08 <__isoc99_sscanf@plt>
   153c4:	mvn	r7, #0
   153c8:	cmp	r0, #1
   153cc:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   153d0:	add	r3, sp, #8
   153d4:	mov	r0, r6
   153d8:	mov	r1, r5
   153dc:	mov	r2, r4
   153e0:	bl	148ac <table_set_string@@Base>
   153e4:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   153e8:	movw	r1, #22000	; 0x55f0
   153ec:	add	r2, sp, #8
   153f0:	mov	r0, r7
   153f4:	movt	r1, #1
   153f8:	bl	11f08 <__isoc99_sscanf@plt>
   153fc:	mvn	r7, #0
   15400:	cmp	r0, #1
   15404:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   15408:	ldr	r0, [sp, #8]
   1540c:	cmp	r0, #0
   15410:	beq	15470 <table_cell_from_buffer@@Base+0x60c>
   15414:	mov	r0, r6
   15418:	mov	r1, r5
   1541c:	mov	r2, r4
   15420:	mov	r3, #1
   15424:	bl	13e70 <table_set_bool@@Base>
   15428:	b	15460 <table_cell_from_buffer@@Base+0x5fc>
   1542c:	movw	r1, #22049	; 0x5621
   15430:	add	r2, sp, #8
   15434:	mov	r0, r7
   15438:	movt	r1, #1
   1543c:	bl	11f08 <__isoc99_sscanf@plt>
   15440:	mvn	r7, #0
   15444:	cmp	r0, #1
   15448:	bne	15464 <table_cell_from_buffer@@Base+0x600>
   1544c:	ldr	r3, [sp, #8]
   15450:	mov	r0, r6
   15454:	mov	r1, r5
   15458:	mov	r2, r4
   1545c:	bl	14a34 <table_set_ptr@@Base>
   15460:	mov	r7, #0
   15464:	mov	r0, r7
   15468:	sub	sp, fp, #24
   1546c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15470:	mov	r0, r6
   15474:	mov	r1, r5
   15478:	mov	r2, r4
   1547c:	mov	r3, #0
   15480:	mov	r7, #0
   15484:	bl	13e70 <table_set_bool@@Base>
   15488:	mov	r0, r7
   1548c:	sub	sp, fp, #24
   15490:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015494 <table_cell_nullify@@Base>:
   15494:	push	{r4, r5, fp, lr}
   15498:	add	fp, sp, #8
   1549c:	mov	r4, r2
   154a0:	bl	1392c <table_get_row_ptr@@Base>
   154a4:	ldr	r5, [r0]
   154a8:	ldr	r0, [r5, r4, lsl #2]
   154ac:	cmp	r0, #0
   154b0:	beq	154c0 <table_cell_nullify@@Base+0x2c>
   154b4:	bl	11ea8 <free@plt>
   154b8:	mov	r0, #0
   154bc:	str	r0, [r5, r4, lsl #2]
   154c0:	mov	r0, #0
   154c4:	pop	{r4, r5, fp, pc}

000154c8 <__libc_csu_init@@Base>:
   154c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   154cc:	mov	r7, r0
   154d0:	ldr	r6, [pc, #72]	; 15520 <__libc_csu_init@@Base+0x58>
   154d4:	ldr	r5, [pc, #72]	; 15524 <__libc_csu_init@@Base+0x5c>
   154d8:	add	r6, pc, r6
   154dc:	add	r5, pc, r5
   154e0:	sub	r6, r6, r5
   154e4:	mov	r8, r1
   154e8:	mov	r9, r2
   154ec:	bl	11e70 <strcmp@plt-0x20>
   154f0:	asrs	r6, r6, #2
   154f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   154f8:	mov	r4, #0
   154fc:	add	r4, r4, #1
   15500:	ldr	r3, [r5], #4
   15504:	mov	r2, r9
   15508:	mov	r1, r8
   1550c:	mov	r0, r7
   15510:	blx	r3
   15514:	cmp	r6, r4
   15518:	bne	154fc <__libc_csu_init@@Base+0x34>
   1551c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15520:	andeq	r0, r1, ip, lsr #20
   15524:	andeq	r0, r1, r4, lsr #20

00015528 <__libc_csu_fini@@Base>:
   15528:	bx	lr

Disassembly of section .fini:

0001552c <.fini>:
   1552c:	push	{r3, lr}
   15530:	pop	{r3, pc}
