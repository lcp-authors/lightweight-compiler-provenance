
../repos/coreutils/src/realpath:     file format elf32-littlearm


Disassembly of section .init:

00010d98 <.init>:
   10d98:	push	{r3, lr}
   10d9c:	bl	1105c <__mempcpy_chk@plt+0x4c>
   10da0:	pop	{r3, pc}

Disassembly of section .plt:

00010da4 <calloc@plt-0x14>:
   10da4:	push	{lr}		; (str lr, [sp, #-4]!)
   10da8:	ldr	lr, [pc, #4]	; 10db4 <calloc@plt-0x4>
   10dac:	add	lr, pc, lr
   10db0:	ldr	pc, [lr, #8]!
   10db4:	andeq	r7, r1, ip, asr #4

00010db8 <calloc@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #94208	; 0x17000
   10dc0:	ldr	pc, [ip, #588]!	; 0x24c

00010dc4 <fputs_unlocked@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #94208	; 0x17000
   10dcc:	ldr	pc, [ip, #580]!	; 0x244

00010dd0 <raise@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #94208	; 0x17000
   10dd8:	ldr	pc, [ip, #572]!	; 0x23c

00010ddc <strcmp@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #94208	; 0x17000
   10de4:	ldr	pc, [ip, #564]!	; 0x234

00010de8 <fflush@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #94208	; 0x17000
   10df0:	ldr	pc, [ip, #556]!	; 0x22c

00010df4 <memmove@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #94208	; 0x17000
   10dfc:	ldr	pc, [ip, #548]!	; 0x224

00010e00 <free@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #94208	; 0x17000
   10e08:	ldr	pc, [ip, #540]!	; 0x21c

00010e0c <faccessat@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #94208	; 0x17000
   10e14:	ldr	pc, [ip, #532]!	; 0x214

00010e18 <_exit@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #94208	; 0x17000
   10e20:	ldr	pc, [ip, #524]!	; 0x20c

00010e24 <memcpy@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #94208	; 0x17000
   10e2c:	ldr	pc, [ip, #516]!	; 0x204

00010e30 <mbsinit@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #94208	; 0x17000
   10e38:	ldr	pc, [ip, #508]!	; 0x1fc

00010e3c <dcgettext@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #94208	; 0x17000
   10e44:	ldr	pc, [ip, #500]!	; 0x1f4

00010e48 <realloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #94208	; 0x17000
   10e50:	ldr	pc, [ip, #492]!	; 0x1ec

00010e54 <textdomain@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #94208	; 0x17000
   10e5c:	ldr	pc, [ip, #484]!	; 0x1e4

00010e60 <rawmemchr@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #94208	; 0x17000
   10e68:	ldr	pc, [ip, #476]!	; 0x1dc

00010e6c <iswprint@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #94208	; 0x17000
   10e74:	ldr	pc, [ip, #468]!	; 0x1d4

00010e78 <readlink@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #94208	; 0x17000
   10e80:	ldr	pc, [ip, #460]!	; 0x1cc

00010e84 <fwrite@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #94208	; 0x17000
   10e8c:	ldr	pc, [ip, #452]!	; 0x1c4

00010e90 <lseek64@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #94208	; 0x17000
   10e98:	ldr	pc, [ip, #444]!	; 0x1bc

00010e9c <__ctype_get_mb_cur_max@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #94208	; 0x17000
   10ea4:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea8 <__fpending@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #94208	; 0x17000
   10eb0:	ldr	pc, [ip, #428]!	; 0x1ac

00010eb4 <mbrtowc@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #94208	; 0x17000
   10ebc:	ldr	pc, [ip, #420]!	; 0x1a4

00010ec0 <error@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #94208	; 0x17000
   10ec8:	ldr	pc, [ip, #412]!	; 0x19c

00010ecc <malloc@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #94208	; 0x17000
   10ed4:	ldr	pc, [ip, #404]!	; 0x194

00010ed8 <__libc_start_main@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #94208	; 0x17000
   10ee0:	ldr	pc, [ip, #396]!	; 0x18c

00010ee4 <__freading@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #94208	; 0x17000
   10eec:	ldr	pc, [ip, #388]!	; 0x184

00010ef0 <__gmon_start__@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #94208	; 0x17000
   10ef8:	ldr	pc, [ip, #380]!	; 0x17c

00010efc <getopt_long@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #94208	; 0x17000
   10f04:	ldr	pc, [ip, #372]!	; 0x174

00010f08 <__ctype_b_loc@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #94208	; 0x17000
   10f10:	ldr	pc, [ip, #364]!	; 0x16c

00010f14 <getcwd@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #94208	; 0x17000
   10f1c:	ldr	pc, [ip, #356]!	; 0x164

00010f20 <exit@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #94208	; 0x17000
   10f28:	ldr	pc, [ip, #348]!	; 0x15c

00010f2c <bcmp@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #94208	; 0x17000
   10f34:	ldr	pc, [ip, #340]!	; 0x154

00010f38 <strlen@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #94208	; 0x17000
   10f40:	ldr	pc, [ip, #332]!	; 0x14c

00010f44 <__errno_location@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #94208	; 0x17000
   10f4c:	ldr	pc, [ip, #324]!	; 0x144

00010f50 <__cxa_atexit@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #94208	; 0x17000
   10f58:	ldr	pc, [ip, #316]!	; 0x13c

00010f5c <memset@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #94208	; 0x17000
   10f64:	ldr	pc, [ip, #308]!	; 0x134

00010f68 <__printf_chk@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #94208	; 0x17000
   10f70:	ldr	pc, [ip, #300]!	; 0x12c

00010f74 <fileno@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #94208	; 0x17000
   10f7c:	ldr	pc, [ip, #292]!	; 0x124

00010f80 <__fprintf_chk@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #94208	; 0x17000
   10f88:	ldr	pc, [ip, #284]!	; 0x11c

00010f8c <fclose@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #94208	; 0x17000
   10f94:	ldr	pc, [ip, #276]!	; 0x114

00010f98 <fseeko64@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #94208	; 0x17000
   10fa0:	ldr	pc, [ip, #268]!	; 0x10c

00010fa4 <__overflow@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #94208	; 0x17000
   10fac:	ldr	pc, [ip, #260]!	; 0x104

00010fb0 <setlocale@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #94208	; 0x17000
   10fb8:	ldr	pc, [ip, #252]!	; 0xfc

00010fbc <strrchr@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #94208	; 0x17000
   10fc4:	ldr	pc, [ip, #244]!	; 0xf4

00010fc8 <nl_langinfo@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #94208	; 0x17000
   10fd0:	ldr	pc, [ip, #236]!	; 0xec

00010fd4 <bindtextdomain@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #94208	; 0x17000
   10fdc:	ldr	pc, [ip, #228]!	; 0xe4

00010fe0 <__xstat64@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #94208	; 0x17000
   10fe8:	ldr	pc, [ip, #220]!	; 0xdc

00010fec <strncmp@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #94208	; 0x17000
   10ff4:	ldr	pc, [ip, #212]!	; 0xd4

00010ff8 <abort@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #94208	; 0x17000
   11000:	ldr	pc, [ip, #204]!	; 0xcc

00011004 <strspn@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #94208	; 0x17000
   1100c:	ldr	pc, [ip, #196]!	; 0xc4

00011010 <__mempcpy_chk@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #94208	; 0x17000
   11018:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

00011020 <.text>:
   11020:	mov	fp, #0
   11024:	mov	lr, #0
   11028:	pop	{r1}		; (ldr r1, [sp], #4)
   1102c:	mov	r2, sp
   11030:	push	{r2}		; (str r2, [sp, #-4]!)
   11034:	push	{r0}		; (str r0, [sp, #-4]!)
   11038:	ldr	ip, [pc, #16]	; 11050 <__mempcpy_chk@plt+0x40>
   1103c:	push	{ip}		; (str ip, [sp, #-4]!)
   11040:	ldr	r0, [pc, #12]	; 11054 <__mempcpy_chk@plt+0x44>
   11044:	ldr	r3, [pc, #12]	; 11058 <__mempcpy_chk@plt+0x48>
   11048:	bl	10ed8 <__libc_start_main@plt>
   1104c:	bl	10ff8 <abort@plt>
   11050:	andeq	r7, r1, r8, lsr r2
   11054:	andeq	r1, r1, r0, ror r3
   11058:	ldrdeq	r7, [r1], -r8
   1105c:	ldr	r3, [pc, #20]	; 11078 <__mempcpy_chk@plt+0x68>
   11060:	ldr	r2, [pc, #20]	; 1107c <__mempcpy_chk@plt+0x6c>
   11064:	add	r3, pc, r3
   11068:	ldr	r2, [r3, r2]
   1106c:	cmp	r2, #0
   11070:	bxeq	lr
   11074:	b	10ef0 <__gmon_start__@plt>
   11078:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1107c:	ldrdeq	r0, [r0], -r8
   11080:	ldr	r0, [pc, #24]	; 110a0 <__mempcpy_chk@plt+0x90>
   11084:	ldr	r3, [pc, #24]	; 110a4 <__mempcpy_chk@plt+0x94>
   11088:	cmp	r3, r0
   1108c:	bxeq	lr
   11090:	ldr	r3, [pc, #16]	; 110a8 <__mempcpy_chk@plt+0x98>
   11094:	cmp	r3, #0
   11098:	bxeq	lr
   1109c:	bx	r3
   110a0:	andeq	r8, r2, r0, lsr r1
   110a4:	andeq	r8, r2, r0, lsr r1
   110a8:	andeq	r0, r0, r0
   110ac:	ldr	r0, [pc, #36]	; 110d8 <__mempcpy_chk@plt+0xc8>
   110b0:	ldr	r1, [pc, #36]	; 110dc <__mempcpy_chk@plt+0xcc>
   110b4:	sub	r1, r1, r0
   110b8:	asr	r1, r1, #2
   110bc:	add	r1, r1, r1, lsr #31
   110c0:	asrs	r1, r1, #1
   110c4:	bxeq	lr
   110c8:	ldr	r3, [pc, #16]	; 110e0 <__mempcpy_chk@plt+0xd0>
   110cc:	cmp	r3, #0
   110d0:	bxeq	lr
   110d4:	bx	r3
   110d8:	andeq	r8, r2, r0, lsr r1
   110dc:	andeq	r8, r2, r0, lsr r1
   110e0:	andeq	r0, r0, r0
   110e4:	push	{r4, lr}
   110e8:	ldr	r4, [pc, #24]	; 11108 <__mempcpy_chk@plt+0xf8>
   110ec:	ldrb	r3, [r4]
   110f0:	cmp	r3, #0
   110f4:	popne	{r4, pc}
   110f8:	bl	11080 <__mempcpy_chk@plt+0x70>
   110fc:	mov	r3, #1
   11100:	strb	r3, [r4]
   11104:	pop	{r4, pc}
   11108:	andeq	r8, r2, ip, asr #2
   1110c:	b	110ac <__mempcpy_chk@plt+0x9c>
   11110:	push	{fp, lr}
   11114:	mov	fp, sp
   11118:	sub	sp, sp, #56	; 0x38
   1111c:	mov	r4, r0
   11120:	cmp	r0, #0
   11124:	bne	1132c <__mempcpy_chk@plt+0x31c>
   11128:	movw	r1, #29323	; 0x728b
   1112c:	mov	r0, #0
   11130:	mov	r2, #5
   11134:	movt	r1, #1
   11138:	bl	10e3c <dcgettext@plt>
   1113c:	mov	r1, r0
   11140:	movw	r0, #33124	; 0x8164
   11144:	movt	r0, #2
   11148:	ldr	r2, [r0]
   1114c:	mov	r0, #1
   11150:	bl	10f68 <__printf_chk@plt>
   11154:	movw	r1, #29354	; 0x72aa
   11158:	mov	r0, #0
   1115c:	mov	r2, #5
   11160:	movt	r1, #1
   11164:	bl	10e3c <dcgettext@plt>
   11168:	movw	r7, #33092	; 0x8144
   1116c:	movt	r7, #2
   11170:	ldr	r1, [r7]
   11174:	bl	10dc4 <fputs_unlocked@plt>
   11178:	movw	r1, #29433	; 0x72f9
   1117c:	mov	r0, #0
   11180:	mov	r2, #5
   11184:	movt	r1, #1
   11188:	bl	10e3c <dcgettext@plt>
   1118c:	ldr	r1, [r7]
   11190:	bl	10dc4 <fputs_unlocked@plt>
   11194:	movw	r1, #30059	; 0x756b
   11198:	mov	r0, #0
   1119c:	mov	r2, #5
   111a0:	movt	r1, #1
   111a4:	bl	10e3c <dcgettext@plt>
   111a8:	ldr	r1, [r7]
   111ac:	bl	10dc4 <fputs_unlocked@plt>
   111b0:	movw	r1, #30104	; 0x7598
   111b4:	mov	r0, #0
   111b8:	mov	r2, #5
   111bc:	movt	r1, #1
   111c0:	bl	10e3c <dcgettext@plt>
   111c4:	ldr	r1, [r7]
   111c8:	bl	10dc4 <fputs_unlocked@plt>
   111cc:	movw	r0, #30912	; 0x78c0
   111d0:	mov	r2, #48	; 0x30
   111d4:	mov	r6, sp
   111d8:	movw	r5, #30158	; 0x75ce
   111dc:	movt	r0, #1
   111e0:	movt	r5, #1
   111e4:	add	r1, r0, #32
   111e8:	add	r3, r0, #16
   111ec:	vld1.64	{d18-d19}, [r0], r2
   111f0:	vld1.64	{d16-d17}, [r1]
   111f4:	vld1.64	{d20-d21}, [r3]
   111f8:	vldr	d22, [r0]
   111fc:	add	r1, r6, #32
   11200:	add	r0, r6, #16
   11204:	vst1.64	{d16-d17}, [r1]
   11208:	movw	r1, #30243	; 0x7623
   1120c:	vst1.64	{d20-d21}, [r0]
   11210:	mov	r0, r6
   11214:	movt	r1, #1
   11218:	vst1.64	{d18-d19}, [r0], r2
   1121c:	vstr	d22, [r0]
   11220:	mov	r0, r5
   11224:	bl	10ddc <strcmp@plt>
   11228:	cmp	r0, #0
   1122c:	ldrne	r1, [r6, #8]!
   11230:	cmpne	r1, #0
   11234:	bne	11220 <__mempcpy_chk@plt+0x210>
   11238:	movw	r1, #30338	; 0x7682
   1123c:	ldr	r6, [r6, #4]
   11240:	mov	r0, #0
   11244:	mov	r2, #5
   11248:	movt	r1, #1
   1124c:	bl	10e3c <dcgettext@plt>
   11250:	movw	r2, #30199	; 0x75f7
   11254:	movw	r3, #30361	; 0x7699
   11258:	mov	r1, r0
   1125c:	mov	r0, #1
   11260:	movt	r2, #1
   11264:	movt	r3, #1
   11268:	bl	10f68 <__printf_chk@plt>
   1126c:	cmp	r6, #0
   11270:	mov	r0, #5
   11274:	mov	r1, #0
   11278:	moveq	r6, r5
   1127c:	bl	10fb0 <setlocale@plt>
   11280:	cmp	r0, #0
   11284:	beq	112bc <__mempcpy_chk@plt+0x2ac>
   11288:	movw	r1, #30401	; 0x76c1
   1128c:	mov	r2, #3
   11290:	movt	r1, #1
   11294:	bl	10fec <strncmp@plt>
   11298:	cmp	r0, #0
   1129c:	beq	112bc <__mempcpy_chk@plt+0x2ac>
   112a0:	movw	r1, #30405	; 0x76c5
   112a4:	mov	r0, #0
   112a8:	mov	r2, #5
   112ac:	movt	r1, #1
   112b0:	bl	10e3c <dcgettext@plt>
   112b4:	ldr	r1, [r7]
   112b8:	bl	10dc4 <fputs_unlocked@plt>
   112bc:	movw	r1, #30476	; 0x770c
   112c0:	mov	r0, #0
   112c4:	mov	r2, #5
   112c8:	movt	r1, #1
   112cc:	bl	10e3c <dcgettext@plt>
   112d0:	movw	r2, #30361	; 0x7699
   112d4:	mov	r1, r0
   112d8:	mov	r0, #1
   112dc:	mov	r3, r5
   112e0:	movt	r2, #1
   112e4:	bl	10f68 <__printf_chk@plt>
   112e8:	movw	r1, #30503	; 0x7727
   112ec:	mov	r0, #0
   112f0:	mov	r2, #5
   112f4:	movt	r1, #1
   112f8:	bl	10e3c <dcgettext@plt>
   112fc:	mov	r1, r0
   11300:	movw	r0, #30271	; 0x763f
   11304:	movw	r3, #29432	; 0x72f8
   11308:	cmp	r6, r5
   1130c:	mov	r2, r6
   11310:	movt	r0, #1
   11314:	movt	r3, #1
   11318:	moveq	r3, r0
   1131c:	mov	r0, #1
   11320:	bl	10f68 <__printf_chk@plt>
   11324:	mov	r0, r4
   11328:	bl	10f20 <exit@plt>
   1132c:	movw	r0, #33088	; 0x8140
   11330:	movw	r1, #29284	; 0x7264
   11334:	mov	r2, #5
   11338:	movt	r0, #2
   1133c:	movt	r1, #1
   11340:	ldr	r5, [r0]
   11344:	mov	r0, #0
   11348:	bl	10e3c <dcgettext@plt>
   1134c:	mov	r2, r0
   11350:	movw	r0, #33124	; 0x8164
   11354:	mov	r1, #1
   11358:	movt	r0, #2
   1135c:	ldr	r3, [r0]
   11360:	mov	r0, r5
   11364:	bl	10f80 <__fprintf_chk@plt>
   11368:	mov	r0, r4
   1136c:	bl	10f20 <exit@plt>
   11370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11374:	add	fp, sp, #28
   11378:	sub	sp, sp, #132	; 0x84
   1137c:	mov	sl, r0
   11380:	ldr	r0, [r1]
   11384:	mov	r5, r1
   11388:	bl	13d90 <__mempcpy_chk@plt+0x2d80>
   1138c:	movw	r1, #29432	; 0x72f8
   11390:	mov	r0, #6
   11394:	movt	r1, #1
   11398:	bl	10fb0 <setlocale@plt>
   1139c:	movw	r4, #30203	; 0x75fb
   113a0:	movw	r1, #30167	; 0x75d7
   113a4:	movt	r4, #1
   113a8:	movt	r1, #1
   113ac:	mov	r0, r4
   113b0:	bl	10fd4 <bindtextdomain@plt>
   113b4:	mov	r0, r4
   113b8:	bl	10e54 <textdomain@plt>
   113bc:	movw	r0, #9888	; 0x26a0
   113c0:	movt	r0, #1
   113c4:	bl	1723c <__mempcpy_chk@plt+0x622c>
   113c8:	mov	r1, r5
   113cc:	movw	r5, #30191	; 0x75ef
   113d0:	movw	r4, #30704	; 0x77f0
   113d4:	movw	r9, #33104	; 0x8150
   113d8:	mov	r0, #1
   113dc:	mov	r7, #0
   113e0:	mov	r6, #0
   113e4:	mov	r8, #0
   113e8:	str	sl, [sp, #16]
   113ec:	movt	r5, #1
   113f0:	movt	r4, #1
   113f4:	movt	r9, #2
   113f8:	str	r0, [sp, #20]
   113fc:	str	r1, [sp, #12]
   11400:	mov	r0, sl
   11404:	mov	r2, r5
   11408:	mov	r3, r4
   1140c:	str	r7, [sp]
   11410:	bl	10efc <getopt_long@plt>
   11414:	cmp	r0, #75	; 0x4b
   11418:	ble	1158c <__mempcpy_chk@plt+0x57c>
   1141c:	sub	r1, r0, #76	; 0x4c
   11420:	cmp	r1, #46	; 0x2e
   11424:	bhi	114f8 <__mempcpy_chk@plt+0x4e8>
   11428:	add	r0, pc, #0
   1142c:	ldr	pc, [r0, r1, lsl #2]
   11430:	andeq	r1, r1, ip, ror #9
   11434:	andeq	r1, r1, r4, lsl #21
   11438:	andeq	r1, r1, r4, lsl #21
   1143c:	andeq	r1, r1, r4, lsl #21
   11440:	andeq	r1, r1, ip, lsr #10
   11444:	andeq	r1, r1, r4, lsl #21
   11448:	andeq	r1, r1, r4, lsl #21
   1144c:	andeq	r1, r1, r4, lsl #21
   11450:	andeq	r1, r1, r4, lsl #21
   11454:	andeq	r1, r1, r4, lsl #21
   11458:	andeq	r1, r1, r4, lsl #21
   1145c:	andeq	r1, r1, r4, lsl #21
   11460:	andeq	r1, r1, r4, lsl #21
   11464:	andeq	r1, r1, r4, lsl #21
   11468:	andeq	r1, r1, r4, lsl #21
   1146c:	andeq	r1, r1, r4, lsl #21
   11470:	andeq	r1, r1, r4, lsl #21
   11474:	andeq	r1, r1, r4, lsl #21
   11478:	andeq	r1, r1, r4, lsl #21
   1147c:	andeq	r1, r1, r4, lsl #21
   11480:	andeq	r1, r1, r4, lsl #21
   11484:	andeq	r1, r1, r4, lsl #21
   11488:	andeq	r1, r1, r4, lsl #21
   1148c:	andeq	r1, r1, r4, lsl #21
   11490:	andeq	r1, r1, r4, lsl #21
   11494:	andeq	r1, r1, r0, lsr #10
   11498:	andeq	r1, r1, r4, lsl #21
   1149c:	andeq	r1, r1, r4, lsl #21
   114a0:	andeq	r1, r1, r4, lsl #21
   114a4:	andeq	r1, r1, r4, lsl #21
   114a8:	andeq	r1, r1, r4, lsl #21
   114ac:	andeq	r1, r1, r4, lsl #21
   114b0:	andeq	r1, r1, r4, lsl #21
   114b4:	andeq	r1, r1, r0, lsl r5
   114b8:	andeq	r1, r1, r4, lsl #21
   114bc:	andeq	r1, r1, r4, lsl #21
   114c0:	andeq	r1, r1, r4, lsl #21
   114c4:	andeq	r1, r1, r8, asr r5
   114c8:	andeq	r1, r1, r4, lsl #21
   114cc:	andeq	r1, r1, ip, lsr r5
   114d0:	andeq	r1, r1, r4, lsl #21
   114d4:	andeq	r1, r1, r4, lsl #21
   114d8:	andeq	r1, r1, r4, lsl #21
   114dc:	andeq	r1, r1, r4, lsl #21
   114e0:	andeq	r1, r1, r4, lsl #21
   114e4:	andeq	r1, r1, r4, lsl #21
   114e8:	andeq	r1, r1, r4, ror #10
   114ec:	mov	r0, #1
   114f0:	strb	r0, [r9]
   114f4:	b	11540 <__mempcpy_chk@plt+0x530>
   114f8:	cmp	r0, #256	; 0x100
   114fc:	bne	11570 <__mempcpy_chk@plt+0x560>
   11500:	movw	r0, #33096	; 0x8148
   11504:	movt	r0, #2
   11508:	ldr	r6, [r0]
   1150c:	b	1154c <__mempcpy_chk@plt+0x53c>
   11510:	ldr	r0, [sp, #20]
   11514:	mov	r1, #2
   11518:	bfi	r0, r1, #0, #2
   1151c:	b	11548 <__mempcpy_chk@plt+0x538>
   11520:	ldr	r0, [sp, #20]
   11524:	bic	r0, r0, #3
   11528:	b	11548 <__mempcpy_chk@plt+0x538>
   1152c:	ldr	r0, [sp, #20]
   11530:	strb	r7, [r9]
   11534:	bic	r0, r0, #4
   11538:	b	11548 <__mempcpy_chk@plt+0x538>
   1153c:	strb	r7, [r9]
   11540:	ldr	r0, [sp, #20]
   11544:	orr	r0, r0, #4
   11548:	str	r0, [sp, #20]
   1154c:	ldr	r1, [sp, #12]
   11550:	ldr	sl, [sp, #16]
   11554:	b	11400 <__mempcpy_chk@plt+0x3f0>
   11558:	mov	r0, #1
   1155c:	strb	r0, [r9, #1]
   11560:	b	1154c <__mempcpy_chk@plt+0x53c>
   11564:	mov	r0, #1
   11568:	strb	r0, [r9, #2]
   1156c:	b	1154c <__mempcpy_chk@plt+0x53c>
   11570:	movw	r1, #257	; 0x101
   11574:	cmp	r0, r1
   11578:	bne	11a84 <__mempcpy_chk@plt+0xa74>
   1157c:	movw	r0, #33096	; 0x8148
   11580:	movt	r0, #2
   11584:	ldr	r8, [r0]
   11588:	b	1154c <__mempcpy_chk@plt+0x53c>
   1158c:	cmn	r0, #1
   11590:	bne	11a00 <__mempcpy_chk@plt+0x9f0>
   11594:	movw	r0, #33080	; 0x8138
   11598:	ldr	sl, [sp, #16]
   1159c:	movt	r0, #2
   115a0:	ldr	r0, [r0]
   115a4:	cmp	r0, sl
   115a8:	bge	11a60 <__mempcpy_chk@plt+0xa50>
   115ac:	ldr	r0, [sp, #20]
   115b0:	cmp	r8, #0
   115b4:	mov	r4, r8
   115b8:	moveq	r4, r6
   115bc:	cmp	r6, #0
   115c0:	movne	r4, r6
   115c4:	cmp	r4, #0
   115c8:	and	r6, r0, #3
   115cc:	beq	1168c <__mempcpy_chk@plt+0x67c>
   115d0:	ldr	r1, [sp, #20]
   115d4:	mov	r0, r4
   115d8:	bl	11eb4 <__mempcpy_chk@plt+0xea4>
   115dc:	mov	r5, r0
   115e0:	ldrb	r0, [r9]
   115e4:	cmp	r0, #1
   115e8:	bne	1164c <__mempcpy_chk@plt+0x63c>
   115ec:	cmp	r5, #0
   115f0:	beq	1164c <__mempcpy_chk@plt+0x63c>
   115f4:	ldr	r0, [sp, #20]
   115f8:	bic	r1, r0, #4
   115fc:	mov	r0, r5
   11600:	bl	11eb4 <__mempcpy_chk@plt+0xea4>
   11604:	mov	r7, r0
   11608:	mov	r0, r5
   1160c:	bl	12858 <__mempcpy_chk@plt+0x1848>
   11610:	cmp	r7, #0
   11614:	str	r7, [r9, #4]
   11618:	bne	1165c <__mempcpy_chk@plt+0x64c>
   1161c:	bl	10f44 <__errno_location@plt>
   11620:	ldr	r5, [r0]
   11624:	mov	r0, #0
   11628:	mov	r1, #3
   1162c:	mov	r2, r4
   11630:	bl	15aa8 <__mempcpy_chk@plt+0x4a98>
   11634:	movw	r2, #31028	; 0x7934
   11638:	mov	r3, r0
   1163c:	mov	r0, #1
   11640:	mov	r1, r5
   11644:	movt	r2, #1
   11648:	bl	10ec0 <error@plt>
   1164c:	mov	r7, r5
   11650:	cmp	r7, #0
   11654:	str	r7, [r9, #4]
   11658:	beq	1161c <__mempcpy_chk@plt+0x60c>
   1165c:	cmp	r6, #0
   11660:	bne	1168c <__mempcpy_chk@plt+0x67c>
   11664:	add	r2, sp, #24
   11668:	mov	r0, #3
   1166c:	mov	r1, r7
   11670:	bl	10fe0 <__xstat64@plt>
   11674:	cmp	r0, #0
   11678:	bne	11a8c <__mempcpy_chk@plt+0xa7c>
   1167c:	ldr	r0, [sp, #40]	; 0x28
   11680:	and	r0, r0, #61440	; 0xf000
   11684:	cmp	r0, #16384	; 0x4000
   11688:	bne	11acc <__mempcpy_chk@plt+0xabc>
   1168c:	cmp	r8, r4
   11690:	beq	11714 <__mempcpy_chk@plt+0x704>
   11694:	cmp	r8, #0
   11698:	beq	117f8 <__mempcpy_chk@plt+0x7e8>
   1169c:	ldr	r1, [sp, #20]
   116a0:	mov	r0, r8
   116a4:	bl	11eb4 <__mempcpy_chk@plt+0xea4>
   116a8:	mov	r5, r0
   116ac:	ldrb	r0, [r9]
   116b0:	cmp	r0, #1
   116b4:	bne	1171c <__mempcpy_chk@plt+0x70c>
   116b8:	cmp	r5, #0
   116bc:	beq	1171c <__mempcpy_chk@plt+0x70c>
   116c0:	ldr	r0, [sp, #20]
   116c4:	bic	r1, r0, #4
   116c8:	mov	r0, r5
   116cc:	bl	11eb4 <__mempcpy_chk@plt+0xea4>
   116d0:	mov	r4, r0
   116d4:	mov	r0, r5
   116d8:	bl	12858 <__mempcpy_chk@plt+0x1848>
   116dc:	cmp	r4, #0
   116e0:	bne	11728 <__mempcpy_chk@plt+0x718>
   116e4:	bl	10f44 <__errno_location@plt>
   116e8:	ldr	r4, [r0]
   116ec:	mov	r0, #0
   116f0:	mov	r1, #3
   116f4:	mov	r2, r8
   116f8:	bl	15aa8 <__mempcpy_chk@plt+0x4a98>
   116fc:	movw	r2, #31028	; 0x7934
   11700:	mov	r3, r0
   11704:	mov	r0, #1
   11708:	mov	r1, r4
   1170c:	movt	r2, #1
   11710:	bl	10ec0 <error@plt>
   11714:	ldr	r0, [r9, #4]
   11718:	b	117f4 <__mempcpy_chk@plt+0x7e4>
   1171c:	mov	r4, r5
   11720:	cmp	r4, #0
   11724:	beq	116e4 <__mempcpy_chk@plt+0x6d4>
   11728:	cmp	r6, #0
   1172c:	bne	11758 <__mempcpy_chk@plt+0x748>
   11730:	add	r2, sp, #24
   11734:	mov	r0, #3
   11738:	mov	r1, r4
   1173c:	bl	10fe0 <__xstat64@plt>
   11740:	cmp	r0, #0
   11744:	bne	11adc <__mempcpy_chk@plt+0xacc>
   11748:	ldr	r0, [sp, #40]	; 0x28
   1174c:	and	r0, r0, #61440	; 0xf000
   11750:	cmp	r0, #16384	; 0x4000
   11754:	bne	11b1c <__mempcpy_chk@plt+0xb0c>
   11758:	ldrb	r0, [r4, #1]
   1175c:	ldr	r3, [r9, #4]
   11760:	cmp	r0, #0
   11764:	beq	11784 <__mempcpy_chk@plt+0x774>
   11768:	cmp	r0, #47	; 0x2f
   1176c:	bne	11794 <__mempcpy_chk@plt+0x784>
   11770:	ldrb	r2, [r4, #2]
   11774:	ldrb	r1, [r3, #1]
   11778:	cmp	r2, #0
   1177c:	bne	11798 <__mempcpy_chk@plt+0x788>
   11780:	b	117d0 <__mempcpy_chk@plt+0x7c0>
   11784:	ldrb	r0, [r3, #1]
   11788:	cmp	r0, #47	; 0x2f
   1178c:	bne	117d8 <__mempcpy_chk@plt+0x7c8>
   11790:	b	117e0 <__mempcpy_chk@plt+0x7d0>
   11794:	ldrb	r1, [r3, #1]
   11798:	add	r2, r4, #2
   1179c:	add	r3, r3, #2
   117a0:	tst	r1, #255	; 0xff
   117a4:	beq	117e0 <__mempcpy_chk@plt+0x7d0>
   117a8:	uxtb	r1, r1
   117ac:	uxtb	r0, r0
   117b0:	cmp	r0, r1
   117b4:	bne	117e0 <__mempcpy_chk@plt+0x7d0>
   117b8:	ldrb	r0, [r2], #1
   117bc:	ldrb	r1, [r3], #1
   117c0:	cmp	r0, #0
   117c4:	bne	117a0 <__mempcpy_chk@plt+0x790>
   117c8:	cmp	r1, #0
   117cc:	beq	117d8 <__mempcpy_chk@plt+0x7c8>
   117d0:	cmp	r1, #47	; 0x2f
   117d4:	bne	117e0 <__mempcpy_chk@plt+0x7d0>
   117d8:	str	r4, [r9, #8]
   117dc:	b	117f8 <__mempcpy_chk@plt+0x7e8>
   117e0:	mov	r0, r4
   117e4:	bl	12858 <__mempcpy_chk@plt+0x1848>
   117e8:	ldr	r0, [r9, #4]
   117ec:	mov	r1, #0
   117f0:	str	r1, [r9, #4]
   117f4:	str	r0, [r9, #8]
   117f8:	movw	r0, #33080	; 0x8138
   117fc:	movt	r0, #2
   11800:	ldr	r1, [r0]
   11804:	mov	r0, #0
   11808:	cmp	r1, sl
   1180c:	bge	119f8 <__mempcpy_chk@plt+0x9e8>
   11810:	ldr	r0, [sp, #20]
   11814:	movw	sl, #33092	; 0x8144
   11818:	mov	r6, #1
   1181c:	movt	sl, #2
   11820:	bic	r0, r0, #4
   11824:	str	r0, [sp, #8]
   11828:	b	1189c <__mempcpy_chk@plt+0x88c>
   1182c:	ldr	r1, [sl]
   11830:	mov	r0, r8
   11834:	bl	10dc4 <fputs_unlocked@plt>
   11838:	ldrb	r0, [r9, #2]
   1183c:	mov	r1, #10
   11840:	cmp	r0, #0
   11844:	ldr	r0, [sl]
   11848:	movwne	r1, #0
   1184c:	ldr	r2, [r0, #20]
   11850:	ldr	r3, [r0, #24]
   11854:	cmp	r2, r3
   11858:	bcs	119ec <__mempcpy_chk@plt+0x9dc>
   1185c:	add	r3, r2, #1
   11860:	str	r3, [r0, #20]
   11864:	strb	r1, [r2]
   11868:	mov	r0, r8
   1186c:	bl	12858 <__mempcpy_chk@plt+0x1848>
   11870:	mov	r7, #1
   11874:	movw	r0, #33080	; 0x8138
   11878:	and	r6, r6, r7
   1187c:	movt	r0, #2
   11880:	mov	r2, r0
   11884:	ldr	r0, [r0]
   11888:	add	r1, r0, #1
   1188c:	ldr	r0, [sp, #16]
   11890:	str	r1, [r2]
   11894:	cmp	r1, r0
   11898:	bge	119f4 <__mempcpy_chk@plt+0x9e4>
   1189c:	ldr	r0, [sp, #12]
   118a0:	ldr	r5, [r0, r1, lsl #2]
   118a4:	ldr	r1, [sp, #20]
   118a8:	mov	r0, r5
   118ac:	bl	11eb4 <__mempcpy_chk@plt+0xea4>
   118b0:	mov	r4, r0
   118b4:	ldrb	r0, [r9]
   118b8:	cmp	r0, #1
   118bc:	bne	11930 <__mempcpy_chk@plt+0x920>
   118c0:	cmp	r4, #0
   118c4:	beq	11930 <__mempcpy_chk@plt+0x920>
   118c8:	ldr	r1, [sp, #8]
   118cc:	mov	r0, r4
   118d0:	bl	11eb4 <__mempcpy_chk@plt+0xea4>
   118d4:	mov	r8, r0
   118d8:	mov	r0, r4
   118dc:	bl	12858 <__mempcpy_chk@plt+0x1848>
   118e0:	cmp	r8, #0
   118e4:	bne	1193c <__mempcpy_chk@plt+0x92c>
   118e8:	ldrb	r0, [r9, #1]
   118ec:	mov	r7, #0
   118f0:	cmp	r0, #0
   118f4:	bne	11874 <__mempcpy_chk@plt+0x864>
   118f8:	bl	10f44 <__errno_location@plt>
   118fc:	ldr	r4, [r0]
   11900:	mov	r0, #0
   11904:	mov	r1, #3
   11908:	mov	r2, r5
   1190c:	mov	r7, #0
   11910:	bl	15aa8 <__mempcpy_chk@plt+0x4a98>
   11914:	movw	r2, #31028	; 0x7934
   11918:	mov	r3, r0
   1191c:	mov	r0, #0
   11920:	mov	r1, r4
   11924:	movt	r2, #1
   11928:	bl	10ec0 <error@plt>
   1192c:	b	11874 <__mempcpy_chk@plt+0x864>
   11930:	mov	r8, r4
   11934:	cmp	r8, #0
   11938:	beq	118e8 <__mempcpy_chk@plt+0x8d8>
   1193c:	ldr	r1, [r9, #4]
   11940:	cmp	r1, #0
   11944:	beq	1182c <__mempcpy_chk@plt+0x81c>
   11948:	ldr	r3, [r9, #8]
   1194c:	cmp	r3, #0
   11950:	beq	119d0 <__mempcpy_chk@plt+0x9c0>
   11954:	ldrb	r0, [r3, #1]
   11958:	cmp	r0, #0
   1195c:	beq	1197c <__mempcpy_chk@plt+0x96c>
   11960:	cmp	r0, #47	; 0x2f
   11964:	bne	1198c <__mempcpy_chk@plt+0x97c>
   11968:	ldrb	r7, [r3, #2]
   1196c:	ldrb	r2, [r8, #1]
   11970:	cmp	r7, #0
   11974:	bne	11990 <__mempcpy_chk@plt+0x980>
   11978:	b	119c8 <__mempcpy_chk@plt+0x9b8>
   1197c:	ldrb	r0, [r8, #1]
   11980:	cmp	r0, #47	; 0x2f
   11984:	bne	119d0 <__mempcpy_chk@plt+0x9c0>
   11988:	b	1182c <__mempcpy_chk@plt+0x81c>
   1198c:	ldrb	r2, [r8, #1]
   11990:	add	r3, r3, #2
   11994:	add	r5, r8, #2
   11998:	tst	r2, #255	; 0xff
   1199c:	beq	1182c <__mempcpy_chk@plt+0x81c>
   119a0:	uxtb	r2, r2
   119a4:	uxtb	r0, r0
   119a8:	cmp	r0, r2
   119ac:	bne	1182c <__mempcpy_chk@plt+0x81c>
   119b0:	ldrb	r0, [r3], #1
   119b4:	ldrb	r2, [r5], #1
   119b8:	cmp	r0, #0
   119bc:	bne	11998 <__mempcpy_chk@plt+0x988>
   119c0:	cmp	r2, #0
   119c4:	beq	119d0 <__mempcpy_chk@plt+0x9c0>
   119c8:	cmp	r2, #47	; 0x2f
   119cc:	bne	1182c <__mempcpy_chk@plt+0x81c>
   119d0:	mov	r0, r8
   119d4:	mov	r2, #0
   119d8:	mov	r3, #0
   119dc:	bl	11b44 <__mempcpy_chk@plt+0xb34>
   119e0:	cmp	r0, #0
   119e4:	beq	1182c <__mempcpy_chk@plt+0x81c>
   119e8:	b	11838 <__mempcpy_chk@plt+0x828>
   119ec:	bl	10fa4 <__overflow@plt>
   119f0:	b	11868 <__mempcpy_chk@plt+0x858>
   119f4:	eor	r0, r6, #1
   119f8:	sub	sp, fp, #28
   119fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a00:	cmn	r0, #3
   11a04:	bne	11a50 <__mempcpy_chk@plt+0xa40>
   11a08:	movw	r0, #33000	; 0x80e8
   11a0c:	movw	r2, #30213	; 0x7605
   11a10:	mov	r1, #0
   11a14:	movt	r0, #2
   11a18:	movt	r2, #1
   11a1c:	str	r1, [sp, #4]
   11a20:	movw	r1, #30158	; 0x75ce
   11a24:	movt	r1, #1
   11a28:	ldr	r3, [r0]
   11a2c:	movw	r0, #33092	; 0x8144
   11a30:	str	r2, [sp]
   11a34:	movw	r2, #30199	; 0x75f7
   11a38:	movt	r0, #2
   11a3c:	movt	r2, #1
   11a40:	ldr	r0, [r0]
   11a44:	bl	1638c <__mempcpy_chk@plt+0x537c>
   11a48:	mov	r0, #0
   11a4c:	bl	10f20 <exit@plt>
   11a50:	cmn	r0, #2
   11a54:	bne	11a84 <__mempcpy_chk@plt+0xa74>
   11a58:	mov	r0, #0
   11a5c:	bl	11110 <__mempcpy_chk@plt+0x100>
   11a60:	movw	r1, #30227	; 0x7613
   11a64:	mov	r0, #0
   11a68:	mov	r2, #5
   11a6c:	movt	r1, #1
   11a70:	bl	10e3c <dcgettext@plt>
   11a74:	mov	r2, r0
   11a78:	mov	r0, #0
   11a7c:	mov	r1, #0
   11a80:	bl	10ec0 <error@plt>
   11a84:	mov	r0, #1
   11a88:	bl	11110 <__mempcpy_chk@plt+0x100>
   11a8c:	bl	10f44 <__errno_location@plt>
   11a90:	movw	r1, #30682	; 0x77da
   11a94:	ldr	r4, [r0]
   11a98:	mov	r0, #0
   11a9c:	mov	r2, #5
   11aa0:	movt	r1, #1
   11aa4:	bl	10e3c <dcgettext@plt>
   11aa8:	mov	r5, r0
   11aac:	mov	r0, #4
   11ab0:	mov	r1, r7
   11ab4:	bl	1582c <__mempcpy_chk@plt+0x481c>
   11ab8:	mov	r3, r0
   11abc:	mov	r0, #1
   11ac0:	mov	r1, r4
   11ac4:	mov	r2, r5
   11ac8:	bl	10ec0 <error@plt>
   11acc:	mov	r0, #0
   11ad0:	mov	r1, #3
   11ad4:	mov	r2, r4
   11ad8:	b	11b28 <__mempcpy_chk@plt+0xb18>
   11adc:	bl	10f44 <__errno_location@plt>
   11ae0:	movw	r1, #30682	; 0x77da
   11ae4:	ldr	r5, [r0]
   11ae8:	mov	r0, #0
   11aec:	mov	r2, #5
   11af0:	movt	r1, #1
   11af4:	bl	10e3c <dcgettext@plt>
   11af8:	mov	r6, r0
   11afc:	mov	r0, #4
   11b00:	mov	r1, r4
   11b04:	bl	1582c <__mempcpy_chk@plt+0x481c>
   11b08:	mov	r3, r0
   11b0c:	mov	r0, #1
   11b10:	mov	r1, r5
   11b14:	mov	r2, r6
   11b18:	bl	10ec0 <error@plt>
   11b1c:	mov	r0, #0
   11b20:	mov	r1, #3
   11b24:	mov	r2, r8
   11b28:	bl	15aa8 <__mempcpy_chk@plt+0x4a98>
   11b2c:	movw	r2, #31028	; 0x7934
   11b30:	mov	r3, r0
   11b34:	mov	r0, #1
   11b38:	mov	r1, #20
   11b3c:	movt	r2, #1
   11b40:	bl	10ec0 <error@plt>
   11b44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b48:	add	fp, sp, #28
   11b4c:	sub	sp, sp, #4
   11b50:	mov	r7, r1
   11b54:	ldrb	r1, [r1, #1]
   11b58:	mov	r6, r0
   11b5c:	ldrb	r0, [r0, #1]
   11b60:	mov	r4, #0
   11b64:	sub	r0, r0, #47	; 0x2f
   11b68:	sub	r1, r1, #47	; 0x2f
   11b6c:	clz	r0, r0
   11b70:	clz	r1, r1
   11b74:	lsr	r0, r0, #5
   11b78:	lsr	r1, r1, #5
   11b7c:	teq	r1, r0
   11b80:	bne	11dec <__mempcpy_chk@plt+0xddc>
   11b84:	mov	sl, r3
   11b88:	ldrb	r3, [r7]
   11b8c:	ldrb	r1, [r6]
   11b90:	mov	r8, r2
   11b94:	cmp	r3, #0
   11b98:	beq	11be8 <__mempcpy_chk@plt+0xbd8>
   11b9c:	mov	r0, #0
   11ba0:	mov	r2, #1
   11ba4:	tst	r1, #255	; 0xff
   11ba8:	beq	11c0c <__mempcpy_chk@plt+0xbfc>
   11bac:	uxtb	r4, r1
   11bb0:	uxtb	r5, r3
   11bb4:	cmp	r5, r4
   11bb8:	bne	11c0c <__mempcpy_chk@plt+0xbfc>
   11bbc:	ldrb	r3, [r7, r2]
   11bc0:	ldrb	r1, [r6, r2]
   11bc4:	cmp	r4, #47	; 0x2f
   11bc8:	moveq	r0, r2
   11bcc:	add	r2, r2, #1
   11bd0:	cmp	r3, #0
   11bd4:	bne	11ba4 <__mempcpy_chk@plt+0xb94>
   11bd8:	sub	r2, r2, #1
   11bdc:	cmp	r1, #0
   11be0:	bne	11bf8 <__mempcpy_chk@plt+0xbe8>
   11be4:	b	11dfc <__mempcpy_chk@plt+0xdec>
   11be8:	mov	r2, #0
   11bec:	mov	r0, #0
   11bf0:	cmp	r1, #0
   11bf4:	beq	11dfc <__mempcpy_chk@plt+0xdec>
   11bf8:	cmp	r1, #47	; 0x2f
   11bfc:	moveq	r0, r2
   11c00:	cmp	r0, #0
   11c04:	bne	11c24 <__mempcpy_chk@plt+0xc14>
   11c08:	b	11e08 <__mempcpy_chk@plt+0xdf8>
   11c0c:	tst	r1, #255	; 0xff
   11c10:	uxtbeq	r1, r3
   11c14:	cmpeq	r1, #47	; 0x2f
   11c18:	beq	11df8 <__mempcpy_chk@plt+0xde8>
   11c1c:	cmp	r0, #0
   11c20:	beq	11e08 <__mempcpy_chk@plt+0xdf8>
   11c24:	ldrb	r1, [r6, r0]!
   11c28:	ldrb	r0, [r7, r0]!
   11c2c:	mov	r5, r6
   11c30:	cmp	r1, #47	; 0x2f
   11c34:	sub	r1, r1, #47	; 0x2f
   11c38:	addeq	r5, r5, #1
   11c3c:	cmp	r0, #47	; 0x2f
   11c40:	clz	r1, r1
   11c44:	addeq	r7, r7, #1
   11c48:	lsr	r1, r1, #5
   11c4c:	ldrb	r0, [r7]
   11c50:	cmp	r0, #0
   11c54:	beq	11c90 <__mempcpy_chk@plt+0xc80>
   11c58:	movw	r2, #33092	; 0x8144
   11c5c:	cmp	r8, #0
   11c60:	str	r1, [sp]
   11c64:	movt	r2, #2
   11c68:	beq	11cdc <__mempcpy_chk@plt+0xccc>
   11c6c:	mov	r4, #1
   11c70:	cmp	sl, #3
   11c74:	bcc	11cfc <__mempcpy_chk@plt+0xcec>
   11c78:	movw	r0, #11822	; 0x2e2e
   11c7c:	mov	r4, #0
   11c80:	sub	sl, sl, #2
   11c84:	strh	r0, [r8]
   11c88:	strb	r4, [r8, #2]!
   11c8c:	b	11cfc <__mempcpy_chk@plt+0xcec>
   11c90:	ldrb	r0, [r6, r1]
   11c94:	movw	r1, #30970	; 0x78fa
   11c98:	movt	r1, #1
   11c9c:	cmp	r0, #0
   11ca0:	moveq	r5, r1
   11ca4:	cmp	r8, #0
   11ca8:	beq	11e18 <__mempcpy_chk@plt+0xe08>
   11cac:	mov	r0, r5
   11cb0:	bl	10f38 <strlen@plt>
   11cb4:	cmp	r0, sl
   11cb8:	bcs	11e68 <__mempcpy_chk@plt+0xe58>
   11cbc:	add	r2, r0, #1
   11cc0:	mov	r0, r8
   11cc4:	mov	r1, r5
   11cc8:	bl	10e24 <memcpy@plt>
   11ccc:	mov	r4, #1
   11cd0:	mov	r0, r4
   11cd4:	sub	sp, fp, #28
   11cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cdc:	ldr	r1, [r2]
   11ce0:	movw	r0, #30969	; 0x78f9
   11ce4:	movt	r0, #1
   11ce8:	bl	10dc4 <fputs_unlocked@plt>
   11cec:	movw	r2, #33092	; 0x8144
   11cf0:	mov	r8, #0
   11cf4:	mov	r4, #0
   11cf8:	movt	r2, #2
   11cfc:	movw	r9, #30968	; 0x78f8
   11d00:	movt	r9, #1
   11d04:	ldrb	r0, [r7]
   11d08:	cmp	r0, #47	; 0x2f
   11d0c:	beq	11d28 <__mempcpy_chk@plt+0xd18>
   11d10:	cmp	r0, #0
   11d14:	beq	11d88 <__mempcpy_chk@plt+0xd78>
   11d18:	add	r7, r7, #1
   11d1c:	ldrb	r0, [r7]
   11d20:	cmp	r0, #47	; 0x2f
   11d24:	bne	11d10 <__mempcpy_chk@plt+0xd00>
   11d28:	cmp	r8, #0
   11d2c:	beq	11d50 <__mempcpy_chk@plt+0xd40>
   11d30:	mov	r0, #1
   11d34:	cmp	sl, #4
   11d38:	bcc	11d6c <__mempcpy_chk@plt+0xd5c>
   11d3c:	movw	r0, #11823	; 0x2e2f
   11d40:	sub	sl, sl, #3
   11d44:	movt	r0, #46	; 0x2e
   11d48:	str	r0, [r8], #3
   11d4c:	b	11d68 <__mempcpy_chk@plt+0xd58>
   11d50:	ldr	r1, [r2]
   11d54:	mov	r0, r9
   11d58:	bl	10dc4 <fputs_unlocked@plt>
   11d5c:	movw	r2, #33092	; 0x8144
   11d60:	mov	r8, #0
   11d64:	movt	r2, #2
   11d68:	mov	r0, #0
   11d6c:	and	r1, r4, #1
   11d70:	orr	r4, r0, r1
   11d74:	add	r7, r7, #1
   11d78:	ldrb	r0, [r7]
   11d7c:	cmp	r0, #47	; 0x2f
   11d80:	bne	11d10 <__mempcpy_chk@plt+0xd00>
   11d84:	b	11d28 <__mempcpy_chk@plt+0xd18>
   11d88:	ldr	r0, [sp]
   11d8c:	ldrb	r0, [r6, r0]
   11d90:	and	r6, r4, #1
   11d94:	cmp	r0, #0
   11d98:	beq	11de0 <__mempcpy_chk@plt+0xdd0>
   11d9c:	cmp	r8, #0
   11da0:	beq	11e3c <__mempcpy_chk@plt+0xe2c>
   11da4:	cmp	sl, #1
   11da8:	mov	r4, #1
   11dac:	movhi	r0, #47	; 0x2f
   11db0:	movls	r6, #1
   11db4:	subhi	sl, sl, #1
   11db8:	strhhi	r0, [r8], #1
   11dbc:	mov	r0, r5
   11dc0:	bl	10f38 <strlen@plt>
   11dc4:	cmp	r0, sl
   11dc8:	bcs	11e60 <__mempcpy_chk@plt+0xe50>
   11dcc:	add	r2, r0, #1
   11dd0:	mov	r0, r8
   11dd4:	mov	r1, r5
   11dd8:	bl	10e24 <memcpy@plt>
   11ddc:	b	11e5c <__mempcpy_chk@plt+0xe4c>
   11de0:	mov	r4, #1
   11de4:	cmp	r6, #0
   11de8:	bne	11e68 <__mempcpy_chk@plt+0xe58>
   11dec:	mov	r0, r4
   11df0:	sub	sp, fp, #28
   11df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11df8:	sub	r2, r2, #1
   11dfc:	mov	r0, r2
   11e00:	cmp	r0, #0
   11e04:	bne	11c24 <__mempcpy_chk@plt+0xc14>
   11e08:	mov	r4, #0
   11e0c:	mov	r0, r4
   11e10:	sub	sp, fp, #28
   11e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e18:	movw	r0, #33092	; 0x8144
   11e1c:	movt	r0, #2
   11e20:	ldr	r1, [r0]
   11e24:	mov	r0, r5
   11e28:	bl	10dc4 <fputs_unlocked@plt>
   11e2c:	mov	r4, #1
   11e30:	mov	r0, r4
   11e34:	sub	sp, fp, #28
   11e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e3c:	ldr	r1, [r2]
   11e40:	movw	r0, #32143	; 0x7d8f
   11e44:	mov	r4, r2
   11e48:	movt	r0, #1
   11e4c:	bl	10dc4 <fputs_unlocked@plt>
   11e50:	ldr	r1, [r4]
   11e54:	mov	r0, r5
   11e58:	bl	10dc4 <fputs_unlocked@plt>
   11e5c:	mov	r4, #0
   11e60:	orrs	r0, r4, r6
   11e64:	beq	11ea4 <__mempcpy_chk@plt+0xe94>
   11e68:	movw	r1, #30972	; 0x78fc
   11e6c:	mov	r0, #0
   11e70:	mov	r2, #5
   11e74:	mov	r4, #0
   11e78:	movt	r1, #1
   11e7c:	bl	10e3c <dcgettext@plt>
   11e80:	movw	r2, #31028	; 0x7934
   11e84:	mov	r3, r0
   11e88:	mov	r0, #0
   11e8c:	mov	r1, #36	; 0x24
   11e90:	movt	r2, #1
   11e94:	bl	10ec0 <error@plt>
   11e98:	mov	r0, r4
   11e9c:	sub	sp, fp, #28
   11ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ea4:	mov	r4, #1
   11ea8:	mov	r0, r4
   11eac:	sub	sp, fp, #28
   11eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11eb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11eb8:	add	fp, sp, #28
   11ebc:	sub	sp, sp, #180	; 0xb4
   11ec0:	sub	sp, sp, #3072	; 0xc00
   11ec4:	and	r7, r1, #3
   11ec8:	mov	r8, r0
   11ecc:	sub	r0, r7, #1
   11ed0:	tst	r7, r0
   11ed4:	bne	11fa0 <__mempcpy_chk@plt+0xf90>
   11ed8:	cmp	r8, #0
   11edc:	beq	11fa0 <__mempcpy_chk@plt+0xf90>
   11ee0:	ldrb	r0, [r8]
   11ee4:	cmp	r0, #0
   11ee8:	beq	1251c <__mempcpy_chk@plt+0x150c>
   11eec:	mov	r4, r1
   11ef0:	mov	r1, #1024	; 0x400
   11ef4:	sub	lr, fp, #1024	; 0x400
   11ef8:	cmp	r0, #47	; 0x2f
   11efc:	str	r1, [fp, #-1060]	; 0xfffffbdc
   11f00:	str	r1, [sp, #52]	; 0x34
   11f04:	str	r1, [sp, #1188]	; 0x4a4
   11f08:	add	r1, sp, #1184	; 0x4a0
   11f0c:	sub	r2, lr, #40	; 0x28
   11f10:	add	r1, r1, #8
   11f14:	add	r2, r2, #8
   11f18:	str	r1, [sp, #16]
   11f1c:	str	r1, [sp, #1184]	; 0x4a0
   11f20:	add	r1, sp, #48	; 0x30
   11f24:	str	r2, [sp, #12]
   11f28:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11f2c:	add	r5, r1, #8
   11f30:	mov	r0, r5
   11f34:	str	r5, [sp, #48]	; 0x30
   11f38:	str	r5, [sp, #8]
   11f3c:	bne	12528 <__mempcpy_chk@plt+0x1518>
   11f40:	mov	r1, r8
   11f44:	mov	r2, #0
   11f48:	mov	r3, #1024	; 0x400
   11f4c:	bl	11010 <__mempcpy_chk@plt>
   11f50:	mov	r6, r0
   11f54:	mov	r0, #47	; 0x2f
   11f58:	strb	r0, [r6], #1
   11f5c:	ldrb	r0, [r8]
   11f60:	cmp	r0, #0
   11f64:	beq	12554 <__mempcpy_chk@plt+0x1544>
   11f68:	and	r1, r4, #4
   11f6c:	add	r9, sp, #48	; 0x30
   11f70:	str	r7, [sp, #32]
   11f74:	str	r1, [sp, #40]	; 0x28
   11f78:	mov	r1, #0
   11f7c:	str	r1, [sp, #24]
   11f80:	mov	r1, #0
   11f84:	str	r1, [sp, #36]	; 0x24
   11f88:	mov	r1, #0
   11f8c:	str	r1, [sp, #20]
   11f90:	uxtb	r1, r0
   11f94:	cmp	r1, #47	; 0x2f
   11f98:	beq	11fd8 <__mempcpy_chk@plt+0xfc8>
   11f9c:	b	11fe4 <__mempcpy_chk@plt+0xfd4>
   11fa0:	bl	10f44 <__errno_location@plt>
   11fa4:	mov	r1, #22
   11fa8:	mov	r4, #0
   11fac:	str	r1, [r0]
   11fb0:	mov	r0, r4
   11fb4:	sub	sp, fp, #28
   11fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fbc:	mov	r8, sl
   11fc0:	ldrb	r0, [r8]
   11fc4:	cmp	r0, #0
   11fc8:	beq	1255c <__mempcpy_chk@plt+0x154c>
   11fcc:	uxtb	r1, r0
   11fd0:	cmp	r1, #47	; 0x2f
   11fd4:	bne	11fe4 <__mempcpy_chk@plt+0xfd4>
   11fd8:	ldrb	r0, [r8, #1]!
   11fdc:	cmp	r0, #47	; 0x2f
   11fe0:	beq	11fd8 <__mempcpy_chk@plt+0xfc8>
   11fe4:	mov	r1, r0
   11fe8:	mov	sl, r8
   11fec:	b	11ff4 <__mempcpy_chk@plt+0xfe4>
   11ff0:	ldrb	r1, [sl, #1]!
   11ff4:	uxtb	r1, r1
   11ff8:	cmp	r1, #0
   11ffc:	cmpne	r1, #47	; 0x2f
   12000:	bne	11ff0 <__mempcpy_chk@plt+0xfe0>
   12004:	sub	r2, sl, r8
   12008:	cmp	r2, #1
   1200c:	beq	12024 <__mempcpy_chk@plt+0x1014>
   12010:	cmp	r2, #2
   12014:	beq	12044 <__mempcpy_chk@plt+0x1034>
   12018:	cmp	r2, #0
   1201c:	bne	1209c <__mempcpy_chk@plt+0x108c>
   12020:	b	1255c <__mempcpy_chk@plt+0x154c>
   12024:	uxtb	r0, r0
   12028:	cmp	r0, #46	; 0x2e
   1202c:	bne	1209c <__mempcpy_chk@plt+0x108c>
   12030:	mov	r8, sl
   12034:	ldrb	r0, [r8]
   12038:	cmp	r0, #0
   1203c:	bne	11fcc <__mempcpy_chk@plt+0xfbc>
   12040:	b	1255c <__mempcpy_chk@plt+0x154c>
   12044:	uxtb	r0, r0
   12048:	cmp	r0, #46	; 0x2e
   1204c:	bne	1209c <__mempcpy_chk@plt+0x108c>
   12050:	ldrb	r0, [r8, #1]
   12054:	cmp	r0, #46	; 0x2e
   12058:	bne	1209c <__mempcpy_chk@plt+0x108c>
   1205c:	add	r0, r5, #1
   12060:	cmp	r6, r0
   12064:	bls	1234c <__mempcpy_chk@plt+0x133c>
   12068:	sub	r0, r6, #1
   1206c:	mov	r6, r0
   12070:	cmp	r0, r5
   12074:	bls	124f4 <__mempcpy_chk@plt+0x14e4>
   12078:	mov	r0, r6
   1207c:	ldrb	r1, [r0, #-1]!
   12080:	cmp	r1, #47	; 0x2f
   12084:	bne	1206c <__mempcpy_chk@plt+0x105c>
   12088:	mov	r8, sl
   1208c:	ldrb	r0, [r8]
   12090:	cmp	r0, #0
   12094:	bne	11fcc <__mempcpy_chk@plt+0xfbc>
   12098:	b	1255c <__mempcpy_chk@plt+0x154c>
   1209c:	ldrb	r0, [r6, #-1]
   120a0:	add	r4, r2, #2
   120a4:	str	r2, [sp, #44]	; 0x2c
   120a8:	cmp	r0, #47	; 0x2f
   120ac:	movne	r0, #47	; 0x2f
   120b0:	strbne	r0, [r6], #1
   120b4:	ldr	r0, [sp, #52]	; 0x34
   120b8:	add	r0, r5, r0
   120bc:	sub	r0, r0, r6
   120c0:	cmp	r0, r4
   120c4:	bcs	120fc <__mempcpy_chk@plt+0x10ec>
   120c8:	mov	r0, r9
   120cc:	bl	15e48 <__mempcpy_chk@plt+0x4e38>
   120d0:	cmp	r0, #0
   120d4:	beq	1265c <__mempcpy_chk@plt+0x164c>
   120d8:	sub	r0, r6, r5
   120dc:	ldr	r5, [sp, #48]	; 0x30
   120e0:	ldr	r1, [sp, #52]	; 0x34
   120e4:	add	r6, r5, r0
   120e8:	add	r0, r5, r1
   120ec:	sub	r0, r0, r6
   120f0:	cmp	r0, r4
   120f4:	bcc	120c8 <__mempcpy_chk@plt+0x10b8>
   120f8:	ldr	r2, [sp, #44]	; 0x2c
   120fc:	mov	r0, r6
   12100:	mov	r1, r8
   12104:	mvn	r3, #0
   12108:	bl	11010 <__mempcpy_chk@plt>
   1210c:	mov	r6, r0
   12110:	mov	r0, #0
   12114:	strb	r0, [r6]
   12118:	ldr	r0, [sp, #40]	; 0x28
   1211c:	cmp	r0, #0
   12120:	bne	12184 <__mempcpy_chk@plt+0x1174>
   12124:	ldr	r0, [sp, #1188]	; 0x4a4
   12128:	ldr	r7, [sp, #1184]	; 0x4a0
   1212c:	sub	r9, r0, #1
   12130:	mov	r0, r5
   12134:	mov	r1, r7
   12138:	mov	r2, r9
   1213c:	bl	10e78 <readlink@plt>
   12140:	cmp	r0, r9
   12144:	blt	1215c <__mempcpy_chk@plt+0x114c>
   12148:	add	r0, sp, #1184	; 0x4a0
   1214c:	bl	15dd8 <__mempcpy_chk@plt+0x4dc8>
   12150:	cmp	r0, #0
   12154:	bne	12124 <__mempcpy_chk@plt+0x1114>
   12158:	b	1265c <__mempcpy_chk@plt+0x164c>
   1215c:	mov	r4, r0
   12160:	cmp	r0, #0
   12164:	add	r9, sp, #48	; 0x30
   12168:	bmi	12184 <__mempcpy_chk@plt+0x1174>
   1216c:	ldr	r0, [sp, #24]
   12170:	cmp	r0, #19
   12174:	bgt	12220 <__mempcpy_chk@plt+0x1210>
   12178:	add	r0, r0, #1
   1217c:	str	r0, [sp, #24]
   12180:	b	123d0 <__mempcpy_chk@plt+0x13c0>
   12184:	ldr	r7, [sp, #32]
   12188:	cmp	r7, #2
   1218c:	beq	11fbc <__mempcpy_chk@plt+0xfac>
   12190:	ldrb	r0, [sl]
   12194:	cmp	r0, #47	; 0x2f
   12198:	bne	12300 <__mempcpy_chk@plt+0x12f0>
   1219c:	mov	r2, sl
   121a0:	mov	r1, r2
   121a4:	ldrb	r3, [r2, #1]!
   121a8:	cmp	r3, #47	; 0x2f
   121ac:	beq	121a0 <__mempcpy_chk@plt+0x1190>
   121b0:	cmp	r3, #46	; 0x2e
   121b4:	bne	122f8 <__mempcpy_chk@plt+0x12e8>
   121b8:	add	r2, r1, #2
   121bc:	ldrb	r3, [r2]
   121c0:	cmp	r3, #47	; 0x2f
   121c4:	beq	121a0 <__mempcpy_chk@plt+0x1190>
   121c8:	cmp	r3, #0
   121cc:	beq	121e8 <__mempcpy_chk@plt+0x11d8>
   121d0:	cmp	r3, #46	; 0x2e
   121d4:	bne	12300 <__mempcpy_chk@plt+0x12f0>
   121d8:	ldrb	r1, [r1, #3]
   121dc:	cmp	r1, #47	; 0x2f
   121e0:	cmpne	r1, #0
   121e4:	bne	12300 <__mempcpy_chk@plt+0x12f0>
   121e8:	mov	r0, #47	; 0x2f
   121ec:	mov	r1, r5
   121f0:	mov	r2, #0
   121f4:	mov	r3, #512	; 0x200
   121f8:	strh	r0, [r6]
   121fc:	mvn	r0, #99	; 0x63
   12200:	bl	10e0c <faccessat@plt>
   12204:	cmp	r0, #0
   12208:	bne	1237c <__mempcpy_chk@plt+0x136c>
   1220c:	mov	r8, sl
   12210:	ldrb	r0, [r8]
   12214:	cmp	r0, #0
   12218:	bne	11fcc <__mempcpy_chk@plt+0xfbc>
   1221c:	b	1255c <__mempcpy_chk@plt+0x154c>
   12220:	ldrb	r0, [r8]
   12224:	add	lr, sp, #1024	; 0x400
   12228:	add	r2, lr, #56	; 0x38
   1222c:	cmp	r0, #0
   12230:	beq	123d0 <__mempcpy_chk@plt+0x13c0>
   12234:	ldr	r9, [sp, #44]	; 0x2c
   12238:	mov	r0, #0
   1223c:	mov	r1, r5
   12240:	strb	r0, [r6, -r9]
   12244:	ldrb	r0, [r5]
   12248:	cmp	r0, #0
   1224c:	movw	r0, #30970	; 0x78fa
   12250:	movt	r0, #1
   12254:	moveq	r1, r0
   12258:	mov	r0, #3
   1225c:	bl	10fe0 <__xstat64@plt>
   12260:	cmp	r0, #0
   12264:	bne	1266c <__mempcpy_chk@plt+0x165c>
   12268:	rsb	r0, r9, #0
   1226c:	ldr	r9, [sp, #20]
   12270:	ldrb	r1, [r8]
   12274:	cmp	r9, #0
   12278:	strb	r1, [r6, r0]
   1227c:	bne	122b4 <__mempcpy_chk@plt+0x12a4>
   12280:	movw	r0, #15728	; 0x3d70
   12284:	movw	r2, #15568	; 0x3cd0
   12288:	movw	r3, #15624	; 0x3d08
   1228c:	mov	r1, #0
   12290:	movt	r0, #1
   12294:	movt	r2, #1
   12298:	movt	r3, #1
   1229c:	str	r0, [sp]
   122a0:	mov	r0, #7
   122a4:	bl	12d74 <__mempcpy_chk@plt+0x1d64>
   122a8:	mov	r9, r0
   122ac:	cmp	r0, #0
   122b0:	beq	1265c <__mempcpy_chk@plt+0x164c>
   122b4:	add	lr, sp, #1024	; 0x400
   122b8:	mov	r0, r9
   122bc:	mov	r1, r8
   122c0:	add	r2, lr, #56	; 0x38
   122c4:	bl	12808 <__mempcpy_chk@plt+0x17f8>
   122c8:	cmp	r0, #0
   122cc:	str	r9, [sp, #20]
   122d0:	beq	123bc <__mempcpy_chk@plt+0x13ac>
   122d4:	ldr	r7, [sp, #32]
   122d8:	cmp	r7, #2
   122dc:	bne	12660 <__mempcpy_chk@plt+0x1650>
   122e0:	mov	r8, sl
   122e4:	add	r9, sp, #48	; 0x30
   122e8:	ldrb	r0, [r8]
   122ec:	cmp	r0, #0
   122f0:	bne	11fcc <__mempcpy_chk@plt+0xfbc>
   122f4:	b	1255c <__mempcpy_chk@plt+0x154c>
   122f8:	cmp	r3, #0
   122fc:	beq	121e8 <__mempcpy_chk@plt+0x11d8>
   12300:	ldr	r1, [sp, #40]	; 0x28
   12304:	cmp	r1, #0
   12308:	beq	12328 <__mempcpy_chk@plt+0x1318>
   1230c:	cmp	r0, #0
   12310:	beq	12360 <__mempcpy_chk@plt+0x1350>
   12314:	mov	r8, sl
   12318:	ldrb	r0, [r8]
   1231c:	cmp	r0, #0
   12320:	bne	11fcc <__mempcpy_chk@plt+0xfbc>
   12324:	b	1255c <__mempcpy_chk@plt+0x154c>
   12328:	bl	10f44 <__errno_location@plt>
   1232c:	ldr	r0, [r0]
   12330:	cmp	r0, #22
   12334:	bne	1237c <__mempcpy_chk@plt+0x136c>
   12338:	mov	r8, sl
   1233c:	ldrb	r0, [r8]
   12340:	cmp	r0, #0
   12344:	bne	11fcc <__mempcpy_chk@plt+0xfbc>
   12348:	b	1255c <__mempcpy_chk@plt+0x154c>
   1234c:	mov	r8, sl
   12350:	ldrb	r0, [r8]
   12354:	cmp	r0, #0
   12358:	bne	11fcc <__mempcpy_chk@plt+0xfbc>
   1235c:	b	1255c <__mempcpy_chk@plt+0x154c>
   12360:	mvn	r0, #99	; 0x63
   12364:	mov	r1, r5
   12368:	mov	r2, #0
   1236c:	mov	r3, #512	; 0x200
   12370:	bl	10e0c <faccessat@plt>
   12374:	cmp	r0, #0
   12378:	beq	12508 <__mempcpy_chk@plt+0x14f8>
   1237c:	mov	r4, #1
   12380:	cmp	r7, #1
   12384:	bne	1257c <__mempcpy_chk@plt+0x156c>
   12388:	bl	10f44 <__errno_location@plt>
   1238c:	ldr	r0, [r0]
   12390:	cmp	r0, #2
   12394:	bne	1257c <__mempcpy_chk@plt+0x156c>
   12398:	movw	r1, #32143	; 0x7d8f
   1239c:	mov	r0, sl
   123a0:	movt	r1, #1
   123a4:	bl	11004 <strspn@plt>
   123a8:	ldrb	r0, [sl, r0]
   123ac:	mov	r8, sl
   123b0:	cmp	r0, #0
   123b4:	beq	11fc0 <__mempcpy_chk@plt+0xfb0>
   123b8:	b	1257c <__mempcpy_chk@plt+0x156c>
   123bc:	add	lr, sp, #1024	; 0x400
   123c0:	mov	r0, r9
   123c4:	mov	r1, r8
   123c8:	add	r2, lr, #56	; 0x38
   123cc:	bl	1278c <__mempcpy_chk@plt+0x177c>
   123d0:	mov	r0, #0
   123d4:	strb	r0, [r7, r4]
   123d8:	ldr	r0, [sp, #36]	; 0x24
   123dc:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   123e0:	tst	r0, #1
   123e4:	ldr	r0, [sp, #28]
   123e8:	subne	r0, sl, r8
   123ec:	str	r0, [sp, #28]
   123f0:	mov	r0, sl
   123f4:	bl	10f38 <strlen@plt>
   123f8:	mvn	r1, r4
   123fc:	cmp	r0, r1
   12400:	bhi	1265c <__mempcpy_chk@plt+0x164c>
   12404:	str	r0, [sp, #44]	; 0x2c
   12408:	add	r9, r0, r4
   1240c:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   12410:	cmp	r0, r9
   12414:	bhi	1243c <__mempcpy_chk@plt+0x142c>
   12418:	sub	lr, fp, #1024	; 0x400
   1241c:	sub	r0, lr, #40	; 0x28
   12420:	bl	15e48 <__mempcpy_chk@plt+0x4e38>
   12424:	cmp	r0, #0
   12428:	beq	1265c <__mempcpy_chk@plt+0x164c>
   1242c:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   12430:	cmp	r0, r9
   12434:	bls	12418 <__mempcpy_chk@plt+0x1408>
   12438:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   1243c:	ldr	r0, [sp, #36]	; 0x24
   12440:	ldr	r1, [sp, #44]	; 0x2c
   12444:	tst	r0, #1
   12448:	ldr	r0, [sp, #28]
   1244c:	add	r2, r1, #1
   12450:	addne	sl, r8, r0
   12454:	add	r0, r8, r4
   12458:	mov	r1, sl
   1245c:	bl	10df4 <memmove@plt>
   12460:	mov	r0, r8
   12464:	mov	r1, r7
   12468:	mov	r2, r4
   1246c:	bl	10e24 <memcpy@plt>
   12470:	ldrb	r0, [r7]
   12474:	cmp	r0, #47	; 0x2f
   12478:	bne	124b8 <__mempcpy_chk@plt+0x14a8>
   1247c:	mov	r0, r5
   12480:	mov	r1, r7
   12484:	mov	r2, #0
   12488:	mvn	r3, #0
   1248c:	bl	11010 <__mempcpy_chk@plt>
   12490:	mov	r6, r0
   12494:	mov	r0, #47	; 0x2f
   12498:	strb	r0, [r6], #1
   1249c:	mov	r0, #1
   124a0:	str	r0, [sp, #36]	; 0x24
   124a4:	add	r9, sp, #48	; 0x30
   124a8:	ldrb	r0, [r8]
   124ac:	cmp	r0, #0
   124b0:	bne	11fcc <__mempcpy_chk@plt+0xfbc>
   124b4:	b	1255c <__mempcpy_chk@plt+0x154c>
   124b8:	add	r0, r5, #1
   124bc:	mov	r1, #1
   124c0:	add	r9, sp, #48	; 0x30
   124c4:	cmp	r6, r0
   124c8:	str	r1, [sp, #36]	; 0x24
   124cc:	bls	11fc0 <__mempcpy_chk@plt+0xfb0>
   124d0:	sub	r0, r6, #1
   124d4:	mov	r6, r0
   124d8:	cmp	r0, r5
   124dc:	bls	11fc0 <__mempcpy_chk@plt+0xfb0>
   124e0:	mov	r0, r6
   124e4:	ldrb	r1, [r0, #-1]!
   124e8:	cmp	r1, #47	; 0x2f
   124ec:	bne	124d4 <__mempcpy_chk@plt+0x14c4>
   124f0:	b	11fc0 <__mempcpy_chk@plt+0xfb0>
   124f4:	mov	r8, sl
   124f8:	ldrb	r0, [r8]
   124fc:	cmp	r0, #0
   12500:	bne	11fcc <__mempcpy_chk@plt+0xfbc>
   12504:	b	1255c <__mempcpy_chk@plt+0x154c>
   12508:	mov	r8, sl
   1250c:	ldrb	r0, [r8]
   12510:	cmp	r0, #0
   12514:	bne	11fcc <__mempcpy_chk@plt+0xfbc>
   12518:	b	1255c <__mempcpy_chk@plt+0x154c>
   1251c:	bl	10f44 <__errno_location@plt>
   12520:	mov	r1, #2
   12524:	b	11fa8 <__mempcpy_chk@plt+0xf98>
   12528:	mov	r1, #1024	; 0x400
   1252c:	bl	10f14 <getcwd@plt>
   12530:	cmp	r0, #0
   12534:	beq	12590 <__mempcpy_chk@plt+0x1580>
   12538:	mov	r0, r5
   1253c:	mov	r1, #0
   12540:	bl	10e60 <rawmemchr@plt>
   12544:	mov	r6, r0
   12548:	ldrb	r0, [r8]
   1254c:	cmp	r0, #0
   12550:	bne	11f68 <__mempcpy_chk@plt+0xf58>
   12554:	mov	r0, #0
   12558:	str	r0, [sp, #20]
   1255c:	add	r0, r5, #1
   12560:	cmp	r6, r0
   12564:	bls	12578 <__mempcpy_chk@plt+0x1568>
   12568:	mov	r0, r6
   1256c:	ldrb	r1, [r0, #-1]!
   12570:	cmp	r1, #47	; 0x2f
   12574:	moveq	r6, r0
   12578:	mov	r4, #0
   1257c:	ldr	r0, [sp, #20]
   12580:	cmp	r0, #0
   12584:	beq	125e8 <__mempcpy_chk@plt+0x15d8>
   12588:	bl	13090 <__mempcpy_chk@plt+0x2080>
   1258c:	b	125e8 <__mempcpy_chk@plt+0x15d8>
   12590:	bl	10f44 <__errno_location@plt>
   12594:	ldr	r5, [sp, #8]
   12598:	mov	r6, r0
   1259c:	add	r9, sp, #48	; 0x30
   125a0:	ldr	r0, [r6]
   125a4:	cmp	r0, #34	; 0x22
   125a8:	bne	125d8 <__mempcpy_chk@plt+0x15c8>
   125ac:	mov	r0, r9
   125b0:	bl	15dd8 <__mempcpy_chk@plt+0x4dc8>
   125b4:	cmp	r0, #0
   125b8:	beq	1265c <__mempcpy_chk@plt+0x164c>
   125bc:	ldr	r5, [sp, #48]	; 0x30
   125c0:	ldr	r1, [sp, #52]	; 0x34
   125c4:	mov	r0, r5
   125c8:	bl	10f14 <getcwd@plt>
   125cc:	cmp	r0, #0
   125d0:	beq	125a0 <__mempcpy_chk@plt+0x1590>
   125d4:	b	12538 <__mempcpy_chk@plt+0x1528>
   125d8:	cmp	r0, #12
   125dc:	beq	1265c <__mempcpy_chk@plt+0x164c>
   125e0:	mov	r4, #1
   125e4:	mov	r6, r5
   125e8:	ldr	r1, [sp, #12]
   125ec:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   125f0:	ldr	r7, [sp, #16]
   125f4:	cmp	r0, r1
   125f8:	beq	12600 <__mempcpy_chk@plt+0x15f0>
   125fc:	bl	12858 <__mempcpy_chk@plt+0x1848>
   12600:	ldr	r0, [sp, #1184]	; 0x4a0
   12604:	cmp	r0, r7
   12608:	beq	12610 <__mempcpy_chk@plt+0x1600>
   1260c:	bl	12858 <__mempcpy_chk@plt+0x1848>
   12610:	cmp	r4, #0
   12614:	beq	1263c <__mempcpy_chk@plt+0x162c>
   12618:	ldr	r0, [sp, #48]	; 0x30
   1261c:	ldr	r1, [sp, #8]
   12620:	mov	r4, #0
   12624:	cmp	r0, r1
   12628:	beq	11fb0 <__mempcpy_chk@plt+0xfa0>
   1262c:	bl	12858 <__mempcpy_chk@plt+0x1848>
   12630:	mov	r0, r4
   12634:	sub	sp, fp, #28
   12638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1263c:	mov	r0, #0
   12640:	strb	r0, [r6], -r5
   12644:	add	r0, sp, #48	; 0x30
   12648:	add	r1, r6, #1
   1264c:	bl	15d6c <__mempcpy_chk@plt+0x4d5c>
   12650:	mov	r4, r0
   12654:	cmp	r0, #0
   12658:	bne	11fb0 <__mempcpy_chk@plt+0xfa0>
   1265c:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   12660:	bl	10f44 <__errno_location@plt>
   12664:	mov	r1, #40	; 0x28
   12668:	str	r1, [r0]
   1266c:	mov	r4, #1
   12670:	ldr	r0, [sp, #20]
   12674:	cmp	r0, #0
   12678:	bne	12588 <__mempcpy_chk@plt+0x1578>
   1267c:	b	125e8 <__mempcpy_chk@plt+0x15d8>
   12680:	movw	r1, #33116	; 0x815c
   12684:	movt	r1, #2
   12688:	str	r0, [r1, #4]
   1268c:	bx	lr
   12690:	movw	r1, #33116	; 0x815c
   12694:	movt	r1, #2
   12698:	strb	r0, [r1]
   1269c:	bx	lr
   126a0:	push	{r4, r5, r6, sl, fp, lr}
   126a4:	add	fp, sp, #16
   126a8:	sub	sp, sp, #8
   126ac:	movw	r0, #33092	; 0x8144
   126b0:	movt	r0, #2
   126b4:	ldr	r0, [r0]
   126b8:	bl	16c18 <__mempcpy_chk@plt+0x5c08>
   126bc:	cmp	r0, #0
   126c0:	beq	126e8 <__mempcpy_chk@plt+0x16d8>
   126c4:	movw	r5, #33116	; 0x815c
   126c8:	movt	r5, #2
   126cc:	ldrb	r0, [r5]
   126d0:	cmp	r0, #0
   126d4:	beq	12714 <__mempcpy_chk@plt+0x1704>
   126d8:	bl	10f44 <__errno_location@plt>
   126dc:	ldr	r0, [r0]
   126e0:	cmp	r0, #32
   126e4:	bne	12714 <__mempcpy_chk@plt+0x1704>
   126e8:	movw	r0, #33088	; 0x8140
   126ec:	movt	r0, #2
   126f0:	ldr	r0, [r0]
   126f4:	bl	16c18 <__mempcpy_chk@plt+0x5c08>
   126f8:	cmp	r0, #0
   126fc:	subeq	sp, fp, #16
   12700:	popeq	{r4, r5, r6, sl, fp, pc}
   12704:	movw	r0, #33004	; 0x80ec
   12708:	movt	r0, #2
   1270c:	ldr	r0, [r0]
   12710:	bl	10e18 <_exit@plt>
   12714:	movw	r1, #31012	; 0x7924
   12718:	mov	r0, #0
   1271c:	mov	r2, #5
   12720:	movt	r1, #1
   12724:	bl	10e3c <dcgettext@plt>
   12728:	ldr	r6, [r5, #4]
   1272c:	mov	r4, r0
   12730:	bl	10f44 <__errno_location@plt>
   12734:	ldr	r5, [r0]
   12738:	cmp	r6, #0
   1273c:	bne	12758 <__mempcpy_chk@plt+0x1748>
   12740:	movw	r2, #31028	; 0x7934
   12744:	mov	r0, #0
   12748:	mov	r1, r5
   1274c:	mov	r3, r4
   12750:	movt	r2, #1
   12754:	b	12778 <__mempcpy_chk@plt+0x1768>
   12758:	mov	r0, r6
   1275c:	bl	159cc <__mempcpy_chk@plt+0x49bc>
   12760:	movw	r2, #31024	; 0x7930
   12764:	mov	r3, r0
   12768:	str	r4, [sp]
   1276c:	mov	r0, #0
   12770:	mov	r1, r5
   12774:	movt	r2, #1
   12778:	bl	10ec0 <error@plt>
   1277c:	movw	r0, #33004	; 0x80ec
   12780:	movt	r0, #2
   12784:	ldr	r0, [r0]
   12788:	bl	10e18 <_exit@plt>
   1278c:	push	{r4, r5, r6, r7, fp, lr}
   12790:	add	fp, sp, #16
   12794:	cmp	r0, #0
   12798:	beq	12800 <__mempcpy_chk@plt+0x17f0>
   1279c:	mov	r5, r0
   127a0:	mov	r0, #24
   127a4:	mov	r6, r2
   127a8:	mov	r7, r1
   127ac:	bl	165c0 <__mempcpy_chk@plt+0x55b0>
   127b0:	mov	r4, r0
   127b4:	mov	r0, r7
   127b8:	bl	16ac4 <__mempcpy_chk@plt+0x5ab4>
   127bc:	str	r0, [r4]
   127c0:	ldrd	r0, [r6, #96]	; 0x60
   127c4:	str	r0, [r4, #8]
   127c8:	str	r1, [r4, #12]
   127cc:	ldrd	r0, [r6]
   127d0:	str	r1, [r4, #20]
   127d4:	str	r0, [r4, #16]
   127d8:	mov	r0, r5
   127dc:	mov	r1, r4
   127e0:	bl	139d0 <__mempcpy_chk@plt+0x29c0>
   127e4:	cmp	r0, #0
   127e8:	beq	12804 <__mempcpy_chk@plt+0x17f4>
   127ec:	cmp	r0, r4
   127f0:	beq	12800 <__mempcpy_chk@plt+0x17f0>
   127f4:	mov	r0, r4
   127f8:	pop	{r4, r5, r6, r7, fp, lr}
   127fc:	b	13d70 <__mempcpy_chk@plt+0x2d60>
   12800:	pop	{r4, r5, r6, r7, fp, pc}
   12804:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   12808:	cmp	r0, #0
   1280c:	moveq	r0, #0
   12810:	bxeq	lr
   12814:	push	{r4, r5, fp, lr}
   12818:	add	fp, sp, #8
   1281c:	sub	sp, sp, #24
   12820:	str	r1, [sp]
   12824:	mov	ip, sp
   12828:	mov	r1, sp
   1282c:	ldrd	r4, [r2, #96]	; 0x60
   12830:	add	r3, ip, #8
   12834:	add	ip, ip, #16
   12838:	strd	r4, [r3]
   1283c:	ldrd	r2, [r2]
   12840:	strd	r2, [ip]
   12844:	bl	12aa0 <__mempcpy_chk@plt+0x1a90>
   12848:	cmp	r0, #0
   1284c:	movwne	r0, #1
   12850:	sub	sp, fp, #8
   12854:	pop	{r4, r5, fp, pc}
   12858:	push	{r4, r5, r6, sl, fp, lr}
   1285c:	add	fp, sp, #16
   12860:	mov	r4, r0
   12864:	bl	10f44 <__errno_location@plt>
   12868:	ldr	r6, [r0]
   1286c:	mov	r5, r0
   12870:	mov	r0, r4
   12874:	bl	10e00 <free@plt>
   12878:	str	r6, [r5]
   1287c:	pop	{r4, r5, r6, sl, fp, pc}
   12880:	ldr	r0, [r0, #8]
   12884:	bx	lr
   12888:	ldr	r0, [r0, #12]
   1288c:	bx	lr
   12890:	ldr	r0, [r0, #16]
   12894:	bx	lr
   12898:	ldm	r0, {r2, ip}
   1289c:	mov	r0, #0
   128a0:	cmp	r2, ip
   128a4:	bxcs	lr
   128a8:	mov	r0, #0
   128ac:	ldr	r1, [r2]
   128b0:	cmp	r1, #0
   128b4:	bne	128d0 <__mempcpy_chk@plt+0x18c0>
   128b8:	add	r2, r2, #8
   128bc:	cmp	r2, ip
   128c0:	bcs	128fc <__mempcpy_chk@plt+0x18ec>
   128c4:	ldr	r1, [r2]
   128c8:	cmp	r1, #0
   128cc:	beq	128b8 <__mempcpy_chk@plt+0x18a8>
   128d0:	mov	r3, #0
   128d4:	mov	r1, r2
   128d8:	ldr	r1, [r1, #4]
   128dc:	add	r3, r3, #1
   128e0:	cmp	r1, #0
   128e4:	bne	128d8 <__mempcpy_chk@plt+0x18c8>
   128e8:	cmp	r3, r0
   128ec:	movhi	r0, r3
   128f0:	add	r2, r2, #8
   128f4:	cmp	r2, ip
   128f8:	bcc	128c4 <__mempcpy_chk@plt+0x18b4>
   128fc:	bx	lr
   12900:	push	{fp, lr}
   12904:	mov	fp, sp
   12908:	ldm	r0, {r3, ip}
   1290c:	mov	lr, #0
   12910:	mov	r1, #0
   12914:	cmp	r3, ip
   12918:	bcs	1296c <__mempcpy_chk@plt+0x195c>
   1291c:	mov	r1, #0
   12920:	mov	lr, #0
   12924:	ldr	r2, [r3]
   12928:	cmp	r2, #0
   1292c:	bne	12948 <__mempcpy_chk@plt+0x1938>
   12930:	add	r3, r3, #8
   12934:	cmp	r3, ip
   12938:	bcs	1296c <__mempcpy_chk@plt+0x195c>
   1293c:	ldr	r2, [r3]
   12940:	cmp	r2, #0
   12944:	beq	12930 <__mempcpy_chk@plt+0x1920>
   12948:	mov	r2, r3
   1294c:	ldr	r2, [r2, #4]
   12950:	add	r1, r1, #1
   12954:	cmp	r2, #0
   12958:	bne	1294c <__mempcpy_chk@plt+0x193c>
   1295c:	add	lr, lr, #1
   12960:	add	r3, r3, #8
   12964:	cmp	r3, ip
   12968:	bcc	1293c <__mempcpy_chk@plt+0x192c>
   1296c:	ldr	r2, [r0, #12]
   12970:	cmp	lr, r2
   12974:	bne	1298c <__mempcpy_chk@plt+0x197c>
   12978:	ldr	r2, [r0, #16]
   1297c:	mov	r0, #1
   12980:	cmp	r1, r2
   12984:	movne	r0, #0
   12988:	pop	{fp, pc}
   1298c:	mov	r0, #0
   12990:	pop	{fp, pc}
   12994:	nop	{0}
   12998:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1299c:	add	fp, sp, #24
   129a0:	sub	sp, sp, #8
   129a4:	ldr	r6, [r0]
   129a8:	ldmib	r0, {r2, r7, r8}
   129ac:	ldr	r3, [r0, #16]
   129b0:	mov	r4, r1
   129b4:	mov	r5, #0
   129b8:	cmp	r6, r2
   129bc:	bcs	12a14 <__mempcpy_chk@plt+0x1a04>
   129c0:	mov	r5, #0
   129c4:	ldr	r0, [r6]
   129c8:	cmp	r0, #0
   129cc:	bne	129e8 <__mempcpy_chk@plt+0x19d8>
   129d0:	add	r6, r6, #8
   129d4:	cmp	r6, r2
   129d8:	bcs	12a14 <__mempcpy_chk@plt+0x1a04>
   129dc:	ldr	r0, [r6]
   129e0:	cmp	r0, #0
   129e4:	beq	129d0 <__mempcpy_chk@plt+0x19c0>
   129e8:	mov	r0, #0
   129ec:	mov	r1, r6
   129f0:	ldr	r1, [r1, #4]
   129f4:	add	r0, r0, #1
   129f8:	cmp	r1, #0
   129fc:	bne	129f0 <__mempcpy_chk@plt+0x19e0>
   12a00:	cmp	r0, r5
   12a04:	movhi	r5, r0
   12a08:	add	r6, r6, #8
   12a0c:	cmp	r6, r2
   12a10:	bcc	129dc <__mempcpy_chk@plt+0x19cc>
   12a14:	movw	r2, #31031	; 0x7937
   12a18:	mov	r0, r4
   12a1c:	mov	r1, #1
   12a20:	movt	r2, #1
   12a24:	bl	10f80 <__fprintf_chk@plt>
   12a28:	movw	r2, #31055	; 0x794f
   12a2c:	mov	r0, r4
   12a30:	mov	r1, #1
   12a34:	mov	r3, r7
   12a38:	movt	r2, #1
   12a3c:	bl	10f80 <__fprintf_chk@plt>
   12a40:	vmov	s0, r8
   12a44:	vldr	d16, [pc, #76]	; 12a98 <__mempcpy_chk@plt+0x1a88>
   12a48:	movw	r2, #31079	; 0x7967
   12a4c:	mov	r0, r4
   12a50:	mov	r1, #1
   12a54:	mov	r3, r8
   12a58:	movt	r2, #1
   12a5c:	vcvt.f64.u32	d17, s0
   12a60:	vmov	s0, r7
   12a64:	vcvt.f64.u32	d18, s0
   12a68:	vmul.f64	d16, d17, d16
   12a6c:	vdiv.f64	d16, d16, d18
   12a70:	vstr	d16, [sp]
   12a74:	bl	10f80 <__fprintf_chk@plt>
   12a78:	movw	r2, #31112	; 0x7988
   12a7c:	mov	r0, r4
   12a80:	mov	r1, #1
   12a84:	mov	r3, r5
   12a88:	movt	r2, #1
   12a8c:	sub	sp, fp, #24
   12a90:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12a94:	b	10f80 <__fprintf_chk@plt>
   12a98:	andeq	r0, r0, r0
   12a9c:	subsmi	r0, r9, r0
   12aa0:	push	{r4, r5, r6, r7, fp, lr}
   12aa4:	add	fp, sp, #16
   12aa8:	mov	r4, r1
   12aac:	ldr	r1, [r0, #8]
   12ab0:	ldr	r2, [r0, #24]
   12ab4:	mov	r5, r0
   12ab8:	mov	r0, r4
   12abc:	blx	r2
   12ac0:	ldr	r1, [r5, #8]
   12ac4:	cmp	r0, r1
   12ac8:	bcs	12b30 <__mempcpy_chk@plt+0x1b20>
   12acc:	ldr	r7, [r5]
   12ad0:	mov	r6, #0
   12ad4:	ldr	r1, [r7, r0, lsl #3]!
   12ad8:	cmp	r1, #0
   12adc:	cmpne	r7, #0
   12ae0:	bne	12b10 <__mempcpy_chk@plt+0x1b00>
   12ae4:	mov	r0, r6
   12ae8:	pop	{r4, r5, r6, r7, fp, pc}
   12aec:	ldr	r2, [r5, #28]
   12af0:	mov	r0, r4
   12af4:	blx	r2
   12af8:	cmp	r0, #0
   12afc:	bne	12b24 <__mempcpy_chk@plt+0x1b14>
   12b00:	ldr	r7, [r7, #4]
   12b04:	cmp	r7, #0
   12b08:	beq	12ae4 <__mempcpy_chk@plt+0x1ad4>
   12b0c:	ldr	r1, [r7]
   12b10:	cmp	r1, r4
   12b14:	bne	12aec <__mempcpy_chk@plt+0x1adc>
   12b18:	mov	r6, r4
   12b1c:	mov	r0, r6
   12b20:	pop	{r4, r5, r6, r7, fp, pc}
   12b24:	ldr	r6, [r7]
   12b28:	mov	r0, r6
   12b2c:	pop	{r4, r5, r6, r7, fp, pc}
   12b30:	bl	10ff8 <abort@plt>
   12b34:	push	{fp, lr}
   12b38:	mov	fp, sp
   12b3c:	ldr	r1, [r0, #16]
   12b40:	cmp	r1, #0
   12b44:	beq	12b64 <__mempcpy_chk@plt+0x1b54>
   12b48:	ldm	r0, {r1, r2}
   12b4c:	cmp	r1, r2
   12b50:	bcs	12b6c <__mempcpy_chk@plt+0x1b5c>
   12b54:	ldr	r0, [r1], #8
   12b58:	cmp	r0, #0
   12b5c:	beq	12b4c <__mempcpy_chk@plt+0x1b3c>
   12b60:	pop	{fp, pc}
   12b64:	mov	r0, #0
   12b68:	pop	{fp, pc}
   12b6c:	bl	10ff8 <abort@plt>
   12b70:	push	{r4, r5, fp, lr}
   12b74:	add	fp, sp, #8
   12b78:	mov	r5, r1
   12b7c:	ldr	r1, [r0, #8]
   12b80:	ldr	r2, [r0, #24]
   12b84:	mov	r4, r0
   12b88:	mov	r0, r5
   12b8c:	blx	r2
   12b90:	ldr	r1, [r4, #8]
   12b94:	cmp	r0, r1
   12b98:	bcs	12bfc <__mempcpy_chk@plt+0x1bec>
   12b9c:	ldr	r1, [r4]
   12ba0:	add	r2, r1, r0, lsl #3
   12ba4:	ldr	r3, [r2]
   12ba8:	ldr	r2, [r2, #4]
   12bac:	cmp	r3, r5
   12bb0:	beq	12bc0 <__mempcpy_chk@plt+0x1bb0>
   12bb4:	cmp	r2, #0
   12bb8:	bne	12ba4 <__mempcpy_chk@plt+0x1b94>
   12bbc:	b	12bd0 <__mempcpy_chk@plt+0x1bc0>
   12bc0:	cmp	r2, #0
   12bc4:	beq	12bd0 <__mempcpy_chk@plt+0x1bc0>
   12bc8:	ldr	r0, [r2]
   12bcc:	pop	{r4, r5, fp, pc}
   12bd0:	ldr	r2, [r4, #4]
   12bd4:	add	r0, r1, r0, lsl #3
   12bd8:	add	r1, r0, #8
   12bdc:	cmp	r1, r2
   12be0:	bcs	12bf4 <__mempcpy_chk@plt+0x1be4>
   12be4:	ldr	r0, [r1], #8
   12be8:	cmp	r0, #0
   12bec:	beq	12bdc <__mempcpy_chk@plt+0x1bcc>
   12bf0:	pop	{r4, r5, fp, pc}
   12bf4:	mov	r0, #0
   12bf8:	pop	{r4, r5, fp, pc}
   12bfc:	bl	10ff8 <abort@plt>
   12c00:	push	{r4, r5, fp, lr}
   12c04:	add	fp, sp, #8
   12c08:	ldm	r0, {r5, lr}
   12c0c:	mov	ip, r0
   12c10:	mov	r0, #0
   12c14:	cmp	r5, lr
   12c18:	popcs	{r4, r5, fp, pc}
   12c1c:	mov	r0, #0
   12c20:	ldr	r3, [r5]
   12c24:	cmp	r3, #0
   12c28:	cmpne	r5, #0
   12c2c:	beq	12c38 <__mempcpy_chk@plt+0x1c28>
   12c30:	b	12c54 <__mempcpy_chk@plt+0x1c44>
   12c34:	ldr	lr, [ip, #4]
   12c38:	add	r5, r5, #8
   12c3c:	cmp	r5, lr
   12c40:	bcs	12c7c <__mempcpy_chk@plt+0x1c6c>
   12c44:	ldr	r3, [r5]
   12c48:	cmp	r3, #0
   12c4c:	cmpne	r5, #0
   12c50:	beq	12c38 <__mempcpy_chk@plt+0x1c28>
   12c54:	mov	r3, r5
   12c58:	cmp	r0, r2
   12c5c:	bcs	12c7c <__mempcpy_chk@plt+0x1c6c>
   12c60:	ldr	r4, [r3]
   12c64:	str	r4, [r1, r0, lsl #2]
   12c68:	add	r0, r0, #1
   12c6c:	ldr	r3, [r3, #4]
   12c70:	cmp	r3, #0
   12c74:	bne	12c58 <__mempcpy_chk@plt+0x1c48>
   12c78:	b	12c34 <__mempcpy_chk@plt+0x1c24>
   12c7c:	pop	{r4, r5, fp, pc}
   12c80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c84:	add	fp, sp, #24
   12c88:	mov	r5, r1
   12c8c:	ldr	r4, [r0]
   12c90:	ldr	r1, [r0, #4]
   12c94:	mov	r6, #0
   12c98:	cmp	r4, r1
   12c9c:	bcs	12d18 <__mempcpy_chk@plt+0x1d08>
   12ca0:	mov	r9, r2
   12ca4:	mov	r8, r0
   12ca8:	mov	r6, #0
   12cac:	ldr	r0, [r4]
   12cb0:	cmp	r0, #0
   12cb4:	cmpne	r4, #0
   12cb8:	beq	12cc4 <__mempcpy_chk@plt+0x1cb4>
   12cbc:	b	12ce0 <__mempcpy_chk@plt+0x1cd0>
   12cc0:	ldr	r1, [r8, #4]
   12cc4:	add	r4, r4, #8
   12cc8:	cmp	r4, r1
   12ccc:	bcs	12d18 <__mempcpy_chk@plt+0x1d08>
   12cd0:	ldr	r0, [r4]
   12cd4:	cmp	r0, #0
   12cd8:	cmpne	r4, #0
   12cdc:	beq	12cc4 <__mempcpy_chk@plt+0x1cb4>
   12ce0:	mov	r1, r9
   12ce4:	blx	r5
   12ce8:	cmp	r0, #0
   12cec:	beq	12d18 <__mempcpy_chk@plt+0x1d08>
   12cf0:	mov	r7, r4
   12cf4:	ldr	r7, [r7, #4]
   12cf8:	add	r6, r6, #1
   12cfc:	cmp	r7, #0
   12d00:	beq	12cc0 <__mempcpy_chk@plt+0x1cb0>
   12d04:	ldr	r0, [r7]
   12d08:	mov	r1, r9
   12d0c:	blx	r5
   12d10:	cmp	r0, #0
   12d14:	bne	12cf4 <__mempcpy_chk@plt+0x1ce4>
   12d18:	mov	r0, r6
   12d1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12d20:	ldrb	r2, [r0]
   12d24:	cmp	r2, #0
   12d28:	moveq	r0, #0
   12d2c:	bxeq	lr
   12d30:	add	r3, r0, #1
   12d34:	mov	r0, #0
   12d38:	rsb	r0, r0, r0, lsl #5
   12d3c:	uxtab	r0, r0, r2
   12d40:	udiv	r2, r0, r1
   12d44:	mls	r0, r2, r1, r0
   12d48:	ldrb	r2, [r3], #1
   12d4c:	cmp	r2, #0
   12d50:	bne	12d38 <__mempcpy_chk@plt+0x1d28>
   12d54:	bx	lr
   12d58:	movw	r1, #31136	; 0x79a0
   12d5c:	movt	r1, #1
   12d60:	vld1.32	{d16-d17}, [r1]!
   12d64:	ldr	r1, [r1]
   12d68:	vst1.32	{d16-d17}, [r0]!
   12d6c:	str	r1, [r0]
   12d70:	bx	lr
   12d74:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d78:	add	fp, sp, #24
   12d7c:	movw	r9, #12200	; 0x2fa8
   12d80:	cmp	r3, #0
   12d84:	movw	r5, #12180	; 0x2f94
   12d88:	mov	r6, r0
   12d8c:	mov	r0, #40	; 0x28
   12d90:	mov	r7, r1
   12d94:	movt	r9, #1
   12d98:	movne	r9, r3
   12d9c:	cmp	r2, #0
   12da0:	movt	r5, #1
   12da4:	movne	r5, r2
   12da8:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   12dac:	mov	r8, #0
   12db0:	cmp	r0, #0
   12db4:	beq	12f7c <__mempcpy_chk@plt+0x1f6c>
   12db8:	mov	r4, r0
   12dbc:	movw	r0, #31136	; 0x79a0
   12dc0:	cmp	r7, #0
   12dc4:	movt	r0, #1
   12dc8:	moveq	r7, r0
   12dcc:	cmp	r7, r0
   12dd0:	str	r7, [r4, #20]
   12dd4:	beq	12e50 <__mempcpy_chk@plt+0x1e40>
   12dd8:	vldr	s2, [pc, #420]	; 12f84 <__mempcpy_chk@plt+0x1f74>
   12ddc:	vldr	s0, [r7, #8]
   12de0:	vcmpe.f32	s0, s2
   12de4:	vmrs	APSR_nzcv, fpscr
   12de8:	ble	12efc <__mempcpy_chk@plt+0x1eec>
   12dec:	vldr	s4, [pc, #404]	; 12f88 <__mempcpy_chk@plt+0x1f78>
   12df0:	vcmpe.f32	s0, s4
   12df4:	vmrs	APSR_nzcv, fpscr
   12df8:	bpl	12efc <__mempcpy_chk@plt+0x1eec>
   12dfc:	vldr	s4, [pc, #392]	; 12f8c <__mempcpy_chk@plt+0x1f7c>
   12e00:	vldr	s6, [r7, #12]
   12e04:	vcmpe.f32	s6, s4
   12e08:	vmrs	APSR_nzcv, fpscr
   12e0c:	ble	12efc <__mempcpy_chk@plt+0x1eec>
   12e10:	vldr	s4, [r7]
   12e14:	vcmpe.f32	s4, #0.0
   12e18:	vmrs	APSR_nzcv, fpscr
   12e1c:	blt	12efc <__mempcpy_chk@plt+0x1eec>
   12e20:	vadd.f32	s2, s4, s2
   12e24:	vcmpe.f32	s2, s0
   12e28:	vmrs	APSR_nzcv, fpscr
   12e2c:	bpl	12efc <__mempcpy_chk@plt+0x1eec>
   12e30:	vldr	s0, [r7, #4]
   12e34:	vmov.f32	s4, #112	; 0x3f800000  1.0
   12e38:	vcmpe.f32	s0, s4
   12e3c:	vmrs	APSR_nzcv, fpscr
   12e40:	bhi	12efc <__mempcpy_chk@plt+0x1eec>
   12e44:	vcmpe.f32	s2, s0
   12e48:	vmrs	APSR_nzcv, fpscr
   12e4c:	bpl	12efc <__mempcpy_chk@plt+0x1eec>
   12e50:	ldrb	r0, [r7, #16]
   12e54:	cmp	r0, #0
   12e58:	bne	12e84 <__mempcpy_chk@plt+0x1e74>
   12e5c:	vmov	s2, r6
   12e60:	vldr	s0, [r7, #8]
   12e64:	vldr	s4, [pc, #292]	; 12f90 <__mempcpy_chk@plt+0x1f80>
   12e68:	vcvt.f32.u32	s2, s2
   12e6c:	vdiv.f32	s2, s2, s0
   12e70:	vcvt.u32.f32	s0, s2
   12e74:	vcmpe.f32	s2, s4
   12e78:	vmrs	APSR_nzcv, fpscr
   12e7c:	bge	12f18 <__mempcpy_chk@plt+0x1f08>
   12e80:	vmov	r6, s0
   12e84:	cmp	r6, #10
   12e88:	movls	r6, #10
   12e8c:	orr	r0, r6, #1
   12e90:	cmn	r0, #1
   12e94:	beq	12f18 <__mempcpy_chk@plt+0x1f08>
   12e98:	ldr	r6, [fp, #8]
   12e9c:	mov	r1, #3
   12ea0:	cmp	r0, #10
   12ea4:	bcc	12edc <__mempcpy_chk@plt+0x1ecc>
   12ea8:	mov	r1, #3
   12eac:	mov	r3, #9
   12eb0:	mov	r2, #12
   12eb4:	udiv	r7, r0, r1
   12eb8:	mls	r7, r7, r1, r0
   12ebc:	cmp	r7, #0
   12ec0:	beq	12edc <__mempcpy_chk@plt+0x1ecc>
   12ec4:	add	r3, r3, r2
   12ec8:	add	r2, r2, #8
   12ecc:	add	r1, r1, #2
   12ed0:	add	r3, r3, #4
   12ed4:	cmp	r3, r0
   12ed8:	bcc	12eb4 <__mempcpy_chk@plt+0x1ea4>
   12edc:	udiv	r2, r0, r1
   12ee0:	mls	r1, r2, r1, r0
   12ee4:	cmp	r1, #0
   12ee8:	bne	12f10 <__mempcpy_chk@plt+0x1f00>
   12eec:	add	r0, r0, #2
   12ef0:	cmn	r0, #1
   12ef4:	bne	12e9c <__mempcpy_chk@plt+0x1e8c>
   12ef8:	b	12f18 <__mempcpy_chk@plt+0x1f08>
   12efc:	str	r0, [r4, #20]
   12f00:	mov	r0, r4
   12f04:	bl	12858 <__mempcpy_chk@plt+0x1848>
   12f08:	mov	r0, r8
   12f0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12f10:	cmp	r0, #536870912	; 0x20000000
   12f14:	bcc	12f30 <__mempcpy_chk@plt+0x1f20>
   12f18:	mov	r0, #0
   12f1c:	str	r0, [r4, #8]
   12f20:	mov	r0, r4
   12f24:	bl	12858 <__mempcpy_chk@plt+0x1848>
   12f28:	mov	r0, r8
   12f2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12f30:	cmp	r0, #0
   12f34:	str	r0, [r4, #8]
   12f38:	beq	12f20 <__mempcpy_chk@plt+0x1f10>
   12f3c:	mov	r1, #8
   12f40:	bl	16b40 <__mempcpy_chk@plt+0x5b30>
   12f44:	cmp	r0, #0
   12f48:	str	r0, [r4]
   12f4c:	beq	12f20 <__mempcpy_chk@plt+0x1f10>
   12f50:	mov	r1, #0
   12f54:	str	r5, [r4, #24]
   12f58:	str	r9, [r4, #28]
   12f5c:	str	r6, [r4, #32]
   12f60:	mov	r8, r4
   12f64:	str	r1, [r4, #36]	; 0x24
   12f68:	str	r1, [r4, #12]
   12f6c:	str	r1, [r4, #16]
   12f70:	ldr	r1, [r4, #8]
   12f74:	add	r0, r0, r1, lsl #3
   12f78:	str	r0, [r4, #4]
   12f7c:	mov	r0, r8
   12f80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12f84:	stclcc	12, cr12, [ip, #820]	; 0x334
   12f88:	svccc	0x00666666
   12f8c:	svccc	0x008ccccd
   12f90:	svcmi	0x00800000
   12f94:	ror	r2, r0, #3
   12f98:	udiv	r2, r2, r1
   12f9c:	mul	r1, r2, r1
   12fa0:	rsb	r0, r1, r0, ror #3
   12fa4:	bx	lr
   12fa8:	sub	r0, r0, r1
   12fac:	clz	r0, r0
   12fb0:	lsr	r0, r0, #5
   12fb4:	bx	lr
   12fb8:	push	{r4, r5, r6, r7, fp, lr}
   12fbc:	add	fp, sp, #16
   12fc0:	mov	r4, r0
   12fc4:	ldr	r5, [r0]
   12fc8:	ldr	r0, [r0, #4]
   12fcc:	cmp	r5, r0
   12fd0:	bcs	13080 <__mempcpy_chk@plt+0x2070>
   12fd4:	mov	r6, #0
   12fd8:	ldr	r1, [r5]
   12fdc:	cmp	r1, #0
   12fe0:	bne	1300c <__mempcpy_chk@plt+0x1ffc>
   12fe4:	b	12ff4 <__mempcpy_chk@plt+0x1fe4>
   12fe8:	str	r6, [r5]
   12fec:	str	r6, [r5, #4]
   12ff0:	ldr	r0, [r4, #4]
   12ff4:	add	r5, r5, #8
   12ff8:	cmp	r5, r0
   12ffc:	bcs	13080 <__mempcpy_chk@plt+0x2070>
   13000:	ldr	r1, [r5]
   13004:	cmp	r1, #0
   13008:	beq	12ff4 <__mempcpy_chk@plt+0x1fe4>
   1300c:	ldr	r1, [r4, #32]
   13010:	ldr	r7, [r5, #4]
   13014:	cmp	r1, #0
   13018:	mov	r0, r1
   1301c:	movwne	r0, #1
   13020:	cmp	r7, #0
   13024:	bne	13068 <__mempcpy_chk@plt+0x2058>
   13028:	cmp	r0, #0
   1302c:	beq	12fe8 <__mempcpy_chk@plt+0x1fd8>
   13030:	ldr	r0, [r5]
   13034:	blx	r1
   13038:	b	12fe8 <__mempcpy_chk@plt+0x1fd8>
   1303c:	str	r6, [r7]
   13040:	cmp	r1, #0
   13044:	ldr	r2, [r7, #4]
   13048:	ldr	r0, [r4, #36]	; 0x24
   1304c:	str	r0, [r7, #4]
   13050:	mov	r0, r1
   13054:	str	r7, [r4, #36]	; 0x24
   13058:	movwne	r0, #1
   1305c:	cmp	r2, #0
   13060:	mov	r7, r2
   13064:	beq	13028 <__mempcpy_chk@plt+0x2018>
   13068:	tst	r0, #1
   1306c:	beq	1303c <__mempcpy_chk@plt+0x202c>
   13070:	ldr	r0, [r7]
   13074:	blx	r1
   13078:	ldr	r1, [r4, #32]
   1307c:	b	1303c <__mempcpy_chk@plt+0x202c>
   13080:	mov	r0, #0
   13084:	str	r0, [r4, #12]
   13088:	str	r0, [r4, #16]
   1308c:	pop	{r4, r5, r6, r7, fp, pc}
   13090:	push	{r4, r5, r6, sl, fp, lr}
   13094:	add	fp, sp, #16
   13098:	mov	r4, r0
   1309c:	ldr	r0, [r0, #32]
   130a0:	cmp	r0, #0
   130a4:	beq	13118 <__mempcpy_chk@plt+0x2108>
   130a8:	ldr	r0, [r4, #16]
   130ac:	cmp	r0, #0
   130b0:	beq	13118 <__mempcpy_chk@plt+0x2108>
   130b4:	ldr	r5, [r4]
   130b8:	ldr	r1, [r4, #4]
   130bc:	cmp	r5, r1
   130c0:	bcc	130d8 <__mempcpy_chk@plt+0x20c8>
   130c4:	b	13118 <__mempcpy_chk@plt+0x2108>
   130c8:	ldr	r1, [r4, #4]
   130cc:	add	r5, r5, #8
   130d0:	cmp	r5, r1
   130d4:	bcs	13118 <__mempcpy_chk@plt+0x2108>
   130d8:	ldr	r0, [r5]
   130dc:	cmp	r0, #0
   130e0:	cmpne	r5, #0
   130e4:	beq	130cc <__mempcpy_chk@plt+0x20bc>
   130e8:	ldr	r1, [r4, #32]
   130ec:	blx	r1
   130f0:	ldr	r6, [r5, #4]
   130f4:	cmp	r6, #0
   130f8:	beq	130c8 <__mempcpy_chk@plt+0x20b8>
   130fc:	ldr	r1, [r4, #32]
   13100:	ldr	r0, [r6]
   13104:	blx	r1
   13108:	ldr	r6, [r6, #4]
   1310c:	cmp	r6, #0
   13110:	bne	130fc <__mempcpy_chk@plt+0x20ec>
   13114:	b	130c8 <__mempcpy_chk@plt+0x20b8>
   13118:	ldr	r5, [r4]
   1311c:	ldr	r1, [r4, #4]
   13120:	cmp	r5, r1
   13124:	bcc	13138 <__mempcpy_chk@plt+0x2128>
   13128:	b	13160 <__mempcpy_chk@plt+0x2150>
   1312c:	add	r5, r5, #8
   13130:	cmp	r5, r1
   13134:	bcs	13160 <__mempcpy_chk@plt+0x2150>
   13138:	ldr	r0, [r5, #4]
   1313c:	cmp	r0, #0
   13140:	beq	1312c <__mempcpy_chk@plt+0x211c>
   13144:	ldr	r6, [r0, #4]
   13148:	bl	12858 <__mempcpy_chk@plt+0x1848>
   1314c:	cmp	r6, #0
   13150:	mov	r0, r6
   13154:	bne	13144 <__mempcpy_chk@plt+0x2134>
   13158:	ldr	r1, [r4, #4]
   1315c:	b	1312c <__mempcpy_chk@plt+0x211c>
   13160:	ldr	r0, [r4, #36]	; 0x24
   13164:	cmp	r0, #0
   13168:	beq	13180 <__mempcpy_chk@plt+0x2170>
   1316c:	ldr	r5, [r0, #4]
   13170:	bl	12858 <__mempcpy_chk@plt+0x1848>
   13174:	cmp	r5, #0
   13178:	mov	r0, r5
   1317c:	bne	1316c <__mempcpy_chk@plt+0x215c>
   13180:	ldr	r0, [r4]
   13184:	bl	12858 <__mempcpy_chk@plt+0x1848>
   13188:	mov	r0, r4
   1318c:	pop	{r4, r5, r6, sl, fp, lr}
   13190:	b	12858 <__mempcpy_chk@plt+0x1848>
   13194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13198:	add	fp, sp, #28
   1319c:	sub	sp, sp, #44	; 0x2c
   131a0:	mov	r7, r0
   131a4:	mov	r4, r0
   131a8:	ldr	r0, [r7, #20]!
   131ac:	ldrb	r2, [r0, #16]
   131b0:	cmp	r2, #0
   131b4:	bne	131e4 <__mempcpy_chk@plt+0x21d4>
   131b8:	vmov	s2, r1
   131bc:	vldr	s0, [r0, #8]
   131c0:	vldr	s4, [pc, #592]	; 13418 <__mempcpy_chk@plt+0x2408>
   131c4:	mov	r5, #0
   131c8:	vcvt.f32.u32	s2, s2
   131cc:	vdiv.f32	s2, s2, s0
   131d0:	vcvt.u32.f32	s0, s2
   131d4:	vcmpe.f32	s2, s4
   131d8:	vmrs	APSR_nzcv, fpscr
   131dc:	bge	13308 <__mempcpy_chk@plt+0x22f8>
   131e0:	vmov	r1, s0
   131e4:	cmp	r1, #10
   131e8:	mov	r5, #0
   131ec:	movls	r1, #10
   131f0:	orr	r6, r1, #1
   131f4:	cmn	r6, #1
   131f8:	beq	13308 <__mempcpy_chk@plt+0x22f8>
   131fc:	mov	r0, #3
   13200:	cmp	r6, #10
   13204:	bcc	1323c <__mempcpy_chk@plt+0x222c>
   13208:	mov	r0, #3
   1320c:	mov	r2, #9
   13210:	mov	r1, #12
   13214:	udiv	r3, r6, r0
   13218:	mls	r3, r3, r0, r6
   1321c:	cmp	r3, #0
   13220:	beq	1323c <__mempcpy_chk@plt+0x222c>
   13224:	add	r2, r2, r1
   13228:	add	r1, r1, #8
   1322c:	add	r0, r0, #2
   13230:	add	r2, r2, #4
   13234:	cmp	r2, r6
   13238:	bcc	13214 <__mempcpy_chk@plt+0x2204>
   1323c:	udiv	r1, r6, r0
   13240:	mls	r0, r1, r0, r6
   13244:	cmp	r0, #0
   13248:	bne	1325c <__mempcpy_chk@plt+0x224c>
   1324c:	add	r6, r6, #2
   13250:	cmn	r6, #1
   13254:	bne	131fc <__mempcpy_chk@plt+0x21ec>
   13258:	b	13308 <__mempcpy_chk@plt+0x22f8>
   1325c:	sub	r0, r6, #1
   13260:	cmn	r0, #-536870910	; 0xe0000002
   13264:	bhi	13308 <__mempcpy_chk@plt+0x22f8>
   13268:	ldr	r0, [r4, #8]
   1326c:	cmp	r6, r0
   13270:	bne	13284 <__mempcpy_chk@plt+0x2274>
   13274:	mov	r5, #1
   13278:	mov	r0, r5
   1327c:	sub	sp, fp, #28
   13280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13284:	mov	r0, r6
   13288:	mov	r1, #8
   1328c:	bl	16b40 <__mempcpy_chk@plt+0x5b30>
   13290:	cmp	r0, #0
   13294:	str	r0, [sp, #4]
   13298:	beq	13308 <__mempcpy_chk@plt+0x22f8>
   1329c:	add	r0, r0, r6, lsl #3
   132a0:	mov	r1, #0
   132a4:	add	r5, sp, #4
   132a8:	mov	sl, r4
   132ac:	mov	r2, #0
   132b0:	str	r1, [sp, #20]
   132b4:	str	r1, [sp, #16]
   132b8:	str	r6, [sp, #12]
   132bc:	mov	r1, r4
   132c0:	str	r0, [sp, #8]
   132c4:	add	r0, r5, #20
   132c8:	vld1.32	{d16-d17}, [r7]
   132cc:	vst1.32	{d16-d17}, [r0]
   132d0:	ldr	r0, [sl, #36]!	; 0x24
   132d4:	str	r0, [sp, #40]	; 0x28
   132d8:	mov	r0, r5
   132dc:	bl	1341c <__mempcpy_chk@plt+0x240c>
   132e0:	cmp	r0, #0
   132e4:	beq	13314 <__mempcpy_chk@plt+0x2304>
   132e8:	ldr	r0, [r4]
   132ec:	bl	12858 <__mempcpy_chk@plt+0x1848>
   132f0:	mov	r0, #36	; 0x24
   132f4:	vld1.32	{d16-d17}, [r5], r0
   132f8:	vst1.32	{d16-d17}, [r4], r0
   132fc:	ldr	r0, [r5]
   13300:	mov	r5, #1
   13304:	str	r0, [r4]
   13308:	mov	r0, r5
   1330c:	sub	sp, fp, #28
   13310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13314:	ldr	r0, [sp, #40]	; 0x28
   13318:	str	r0, [sl]
   1331c:	ldr	r0, [sp, #8]
   13320:	ldr	r8, [sp, #4]
   13324:	cmp	r8, r0
   13328:	str	r0, [sp]
   1332c:	bcs	133e4 <__mempcpy_chk@plt+0x23d4>
   13330:	mov	r9, #0
   13334:	ldr	r0, [r8]
   13338:	cmp	r0, #0
   1333c:	bne	13364 <__mempcpy_chk@plt+0x2354>
   13340:	b	13348 <__mempcpy_chk@plt+0x2338>
   13344:	str	r9, [r8, #4]
   13348:	ldr	r0, [sp]
   1334c:	add	r8, r8, #8
   13350:	cmp	r8, r0
   13354:	bcs	133e4 <__mempcpy_chk@plt+0x23d4>
   13358:	ldr	r0, [r8]
   1335c:	cmp	r0, #0
   13360:	beq	13348 <__mempcpy_chk@plt+0x2338>
   13364:	ldr	r6, [r8, #4]
   13368:	cmp	r6, #0
   1336c:	beq	13344 <__mempcpy_chk@plt+0x2334>
   13370:	ldr	r1, [r4, #8]
   13374:	b	13398 <__mempcpy_chk@plt+0x2388>
   13378:	add	r0, r3, r0, lsl #3
   1337c:	add	r0, r0, #4
   13380:	ldr	r3, [r0]
   13384:	cmp	r2, #0
   13388:	str	r3, [r6, #4]
   1338c:	str	r6, [r0]
   13390:	mov	r6, r2
   13394:	beq	13344 <__mempcpy_chk@plt+0x2334>
   13398:	ldr	r5, [r6]
   1339c:	ldr	r2, [r4, #24]
   133a0:	mov	r0, r5
   133a4:	blx	r2
   133a8:	ldr	r1, [r4, #8]
   133ac:	cmp	r0, r1
   133b0:	bcs	13414 <__mempcpy_chk@plt+0x2404>
   133b4:	ldr	r3, [r4]
   133b8:	ldr	r2, [r6, #4]
   133bc:	ldr	r7, [r3, r0, lsl #3]
   133c0:	cmp	r7, #0
   133c4:	bne	13378 <__mempcpy_chk@plt+0x2368>
   133c8:	str	r5, [r3, r0, lsl #3]
   133cc:	ldr	r0, [r4, #12]
   133d0:	add	r0, r0, #1
   133d4:	str	r0, [r4, #12]
   133d8:	mov	r0, sl
   133dc:	str	r9, [r6]
   133e0:	b	13380 <__mempcpy_chk@plt+0x2370>
   133e4:	add	r1, sp, #4
   133e8:	mov	r0, r4
   133ec:	mov	r2, #0
   133f0:	mov	r5, #0
   133f4:	bl	1341c <__mempcpy_chk@plt+0x240c>
   133f8:	cmp	r0, #0
   133fc:	beq	13414 <__mempcpy_chk@plt+0x2404>
   13400:	ldr	r0, [sp, #4]
   13404:	bl	12858 <__mempcpy_chk@plt+0x1848>
   13408:	mov	r0, r5
   1340c:	sub	sp, fp, #28
   13410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13414:	bl	10ff8 <abort@plt>
   13418:	svcmi	0x00800000
   1341c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13420:	add	fp, sp, #28
   13424:	sub	sp, sp, #4
   13428:	ldr	r8, [r1]
   1342c:	ldr	r3, [r1, #4]
   13430:	mov	r6, r0
   13434:	mov	r0, #1
   13438:	str	r1, [sp]
   1343c:	cmp	r8, r3
   13440:	bcs	13654 <__mempcpy_chk@plt+0x2644>
   13444:	add	sl, r6, #36	; 0x24
   13448:	cmp	r2, #0
   1344c:	beq	13508 <__mempcpy_chk@plt+0x24f8>
   13450:	mov	r9, #0
   13454:	ldr	r1, [r8]
   13458:	cmp	r1, #0
   1345c:	bne	13488 <__mempcpy_chk@plt+0x2478>
   13460:	b	13470 <__mempcpy_chk@plt+0x2460>
   13464:	ldr	r0, [sp]
   13468:	ldr	r3, [r0, #4]
   1346c:	str	r9, [r8, #4]
   13470:	add	r8, r8, #8
   13474:	cmp	r8, r3
   13478:	bcs	13650 <__mempcpy_chk@plt+0x2640>
   1347c:	ldr	r1, [r8]
   13480:	cmp	r1, #0
   13484:	beq	13470 <__mempcpy_chk@plt+0x2460>
   13488:	ldr	r7, [r8, #4]
   1348c:	cmp	r7, #0
   13490:	beq	1346c <__mempcpy_chk@plt+0x245c>
   13494:	ldr	r1, [r6, #8]
   13498:	b	134cc <__mempcpy_chk@plt+0x24bc>
   1349c:	str	r4, [r3, r0, lsl #3]
   134a0:	ldr	r0, [r6, #12]
   134a4:	add	r0, r0, #1
   134a8:	str	r0, [r6, #12]
   134ac:	mov	r0, sl
   134b0:	str	r9, [r7]
   134b4:	ldr	r3, [r0]
   134b8:	cmp	r2, #0
   134bc:	str	r3, [r7, #4]
   134c0:	str	r7, [r0]
   134c4:	mov	r7, r2
   134c8:	beq	13464 <__mempcpy_chk@plt+0x2454>
   134cc:	ldr	r4, [r7]
   134d0:	ldr	r2, [r6, #24]
   134d4:	mov	r0, r4
   134d8:	blx	r2
   134dc:	ldr	r1, [r6, #8]
   134e0:	cmp	r0, r1
   134e4:	bcs	13668 <__mempcpy_chk@plt+0x2658>
   134e8:	ldr	r3, [r6]
   134ec:	ldr	r2, [r7, #4]
   134f0:	ldr	r5, [r3, r0, lsl #3]
   134f4:	cmp	r5, #0
   134f8:	beq	1349c <__mempcpy_chk@plt+0x248c>
   134fc:	add	r0, r3, r0, lsl #3
   13500:	add	r0, r0, #4
   13504:	b	134b4 <__mempcpy_chk@plt+0x24a4>
   13508:	mov	r5, #0
   1350c:	ldr	r7, [r8]
   13510:	cmp	r7, #0
   13514:	bne	1355c <__mempcpy_chk@plt+0x254c>
   13518:	b	13544 <__mempcpy_chk@plt+0x2534>
   1351c:	str	r7, [r9, r4, lsl #3]
   13520:	ldr	r0, [r6, #12]
   13524:	add	r0, r0, #1
   13528:	str	r0, [r6, #12]
   1352c:	ldr	r0, [sp]
   13530:	str	r5, [r8]
   13534:	ldr	r1, [r0, #12]
   13538:	ldr	r3, [r0, #4]
   1353c:	sub	r1, r1, #1
   13540:	str	r1, [r0, #12]
   13544:	add	r8, r8, #8
   13548:	cmp	r8, r3
   1354c:	bcs	13650 <__mempcpy_chk@plt+0x2640>
   13550:	ldr	r7, [r8]
   13554:	cmp	r7, #0
   13558:	beq	13544 <__mempcpy_chk@plt+0x2534>
   1355c:	ldr	r9, [r8, #4]
   13560:	ldr	r1, [r6, #8]
   13564:	cmp	r9, #0
   13568:	bne	13590 <__mempcpy_chk@plt+0x2580>
   1356c:	b	135e0 <__mempcpy_chk@plt+0x25d0>
   13570:	add	r0, r3, r0, lsl #3
   13574:	add	r0, r0, #4
   13578:	ldr	r3, [r0]
   1357c:	cmp	r2, #0
   13580:	str	r3, [r9, #4]
   13584:	str	r9, [r0]
   13588:	mov	r9, r2
   1358c:	beq	135dc <__mempcpy_chk@plt+0x25cc>
   13590:	ldr	r4, [r9]
   13594:	ldr	r2, [r6, #24]
   13598:	mov	r0, r4
   1359c:	blx	r2
   135a0:	ldr	r1, [r6, #8]
   135a4:	cmp	r0, r1
   135a8:	bcs	13668 <__mempcpy_chk@plt+0x2658>
   135ac:	ldr	r3, [r6]
   135b0:	ldr	r2, [r9, #4]
   135b4:	ldr	r7, [r3, r0, lsl #3]
   135b8:	cmp	r7, #0
   135bc:	bne	13570 <__mempcpy_chk@plt+0x2560>
   135c0:	str	r4, [r3, r0, lsl #3]
   135c4:	ldr	r0, [r6, #12]
   135c8:	add	r0, r0, #1
   135cc:	str	r0, [r6, #12]
   135d0:	mov	r0, sl
   135d4:	str	r5, [r9]
   135d8:	b	13578 <__mempcpy_chk@plt+0x2568>
   135dc:	ldr	r7, [r8]
   135e0:	str	r5, [r8, #4]
   135e4:	mov	r0, r7
   135e8:	ldr	r2, [r6, #24]
   135ec:	blx	r2
   135f0:	mov	r4, r0
   135f4:	ldr	r0, [r6, #8]
   135f8:	cmp	r4, r0
   135fc:	bcs	13668 <__mempcpy_chk@plt+0x2658>
   13600:	ldr	r9, [r6]
   13604:	ldr	r0, [r9, r4, lsl #3]
   13608:	cmp	r0, #0
   1360c:	beq	1351c <__mempcpy_chk@plt+0x250c>
   13610:	ldr	r0, [sl]
   13614:	cmp	r0, #0
   13618:	beq	13628 <__mempcpy_chk@plt+0x2618>
   1361c:	ldr	r1, [r0, #4]
   13620:	str	r1, [sl]
   13624:	b	13638 <__mempcpy_chk@plt+0x2628>
   13628:	mov	r0, #8
   1362c:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   13630:	cmp	r0, #0
   13634:	beq	1365c <__mempcpy_chk@plt+0x264c>
   13638:	add	r1, r9, r4, lsl #3
   1363c:	str	r7, [r0]
   13640:	ldr	r2, [r1, #4]
   13644:	str	r2, [r0, #4]
   13648:	str	r0, [r1, #4]
   1364c:	b	1352c <__mempcpy_chk@plt+0x251c>
   13650:	mov	r0, #1
   13654:	sub	sp, fp, #28
   13658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1365c:	mov	r0, #0
   13660:	sub	sp, fp, #28
   13664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13668:	bl	10ff8 <abort@plt>
   1366c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13670:	add	fp, sp, #28
   13674:	sub	sp, sp, #4
   13678:	cmp	r1, #0
   1367c:	beq	139b8 <__mempcpy_chk@plt+0x29a8>
   13680:	mov	r8, r2
   13684:	mov	sl, r1
   13688:	ldr	r1, [r0, #8]
   1368c:	ldr	r2, [r0, #24]
   13690:	mov	r4, r0
   13694:	mov	r0, sl
   13698:	blx	r2
   1369c:	mov	r7, r0
   136a0:	ldr	r0, [r4, #8]
   136a4:	cmp	r7, r0
   136a8:	bcs	139b8 <__mempcpy_chk@plt+0x29a8>
   136ac:	ldr	r5, [r4]
   136b0:	mov	r9, r5
   136b4:	ldr	r1, [r9, r7, lsl #3]!
   136b8:	cmp	r1, #0
   136bc:	beq	13750 <__mempcpy_chk@plt+0x2740>
   136c0:	cmp	r1, sl
   136c4:	beq	136f0 <__mempcpy_chk@plt+0x26e0>
   136c8:	ldr	r2, [r4, #28]
   136cc:	mov	r0, sl
   136d0:	blx	r2
   136d4:	cmp	r0, #0
   136d8:	mov	r6, r9
   136dc:	beq	1370c <__mempcpy_chk@plt+0x26fc>
   136e0:	ldr	r0, [r6]
   136e4:	cmp	r0, #0
   136e8:	bne	136f4 <__mempcpy_chk@plt+0x26e4>
   136ec:	b	13750 <__mempcpy_chk@plt+0x2740>
   136f0:	mov	r0, sl
   136f4:	cmp	r8, #0
   136f8:	mov	r7, #0
   136fc:	strne	r0, [r8]
   13700:	mov	r0, r7
   13704:	sub	sp, fp, #28
   13708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1370c:	add	r6, r5, r7, lsl #3
   13710:	ldr	r0, [r6, #4]!
   13714:	cmp	r0, #0
   13718:	beq	13750 <__mempcpy_chk@plt+0x2740>
   1371c:	ldr	r1, [r0]
   13720:	cmp	r1, sl
   13724:	beq	13744 <__mempcpy_chk@plt+0x2734>
   13728:	ldr	r2, [r4, #28]
   1372c:	mov	r0, sl
   13730:	blx	r2
   13734:	ldr	r6, [r6]
   13738:	cmp	r0, #0
   1373c:	beq	13710 <__mempcpy_chk@plt+0x2700>
   13740:	b	136e0 <__mempcpy_chk@plt+0x26d0>
   13744:	mov	r0, sl
   13748:	cmp	r0, #0
   1374c:	bne	136f4 <__mempcpy_chk@plt+0x26e4>
   13750:	vldr	s0, [r4, #8]
   13754:	vldr	s2, [r4, #12]
   13758:	ldr	r0, [r4, #20]
   1375c:	vcvt.f32.u32	s0, s0
   13760:	vcvt.f32.u32	s4, s2
   13764:	vldr	s2, [r0, #8]
   13768:	vmul.f32	s6, s2, s0
   1376c:	vcmpe.f32	s6, s4
   13770:	vmrs	APSR_nzcv, fpscr
   13774:	bpl	138d8 <__mempcpy_chk@plt+0x28c8>
   13778:	movw	r1, #31136	; 0x79a0
   1377c:	movt	r1, #1
   13780:	cmp	r0, r1
   13784:	beq	13820 <__mempcpy_chk@plt+0x2810>
   13788:	vldr	s6, [pc, #556]	; 139bc <__mempcpy_chk@plt+0x29ac>
   1378c:	vcmpe.f32	s2, s6
   13790:	vmrs	APSR_nzcv, fpscr
   13794:	ble	137fc <__mempcpy_chk@plt+0x27ec>
   13798:	vldr	s8, [pc, #544]	; 139c0 <__mempcpy_chk@plt+0x29b0>
   1379c:	vcmpe.f32	s2, s8
   137a0:	vmrs	APSR_nzcv, fpscr
   137a4:	bpl	137fc <__mempcpy_chk@plt+0x27ec>
   137a8:	vldr	s8, [pc, #532]	; 139c4 <__mempcpy_chk@plt+0x29b4>
   137ac:	vldr	s10, [r0, #12]
   137b0:	vcmpe.f32	s10, s8
   137b4:	vmrs	APSR_nzcv, fpscr
   137b8:	ble	137fc <__mempcpy_chk@plt+0x27ec>
   137bc:	vldr	s8, [r0]
   137c0:	vcmpe.f32	s8, #0.0
   137c4:	vmrs	APSR_nzcv, fpscr
   137c8:	blt	137fc <__mempcpy_chk@plt+0x27ec>
   137cc:	vadd.f32	s6, s8, s6
   137d0:	vcmpe.f32	s6, s2
   137d4:	vmrs	APSR_nzcv, fpscr
   137d8:	bpl	137fc <__mempcpy_chk@plt+0x27ec>
   137dc:	vldr	s8, [r0, #4]
   137e0:	vmov.f32	s10, #112	; 0x3f800000  1.0
   137e4:	vcmpe.f32	s8, s10
   137e8:	vmrs	APSR_nzcv, fpscr
   137ec:	bhi	137fc <__mempcpy_chk@plt+0x27ec>
   137f0:	vcmpe.f32	s6, s8
   137f4:	vmrs	APSR_nzcv, fpscr
   137f8:	bmi	1380c <__mempcpy_chk@plt+0x27fc>
   137fc:	vldr	s2, [pc, #452]	; 139c8 <__mempcpy_chk@plt+0x29b8>
   13800:	movw	r0, #31136	; 0x79a0
   13804:	movt	r0, #1
   13808:	str	r0, [r4, #20]
   1380c:	vmul.f32	s6, s2, s0
   13810:	vcmpe.f32	s6, s4
   13814:	vmrs	APSR_nzcv, fpscr
   13818:	bmi	13834 <__mempcpy_chk@plt+0x2824>
   1381c:	b	138d8 <__mempcpy_chk@plt+0x28c8>
   13820:	mov	r0, r1
   13824:	vmul.f32	s6, s2, s0
   13828:	vcmpe.f32	s6, s4
   1382c:	vmrs	APSR_nzcv, fpscr
   13830:	bpl	138d8 <__mempcpy_chk@plt+0x28c8>
   13834:	vldr	s4, [r0, #12]
   13838:	ldrb	r0, [r0, #16]
   1383c:	mvn	r7, #0
   13840:	cmp	r0, #0
   13844:	vmul.f32	s0, s4, s0
   13848:	vldr	s4, [pc, #380]	; 139cc <__mempcpy_chk@plt+0x29bc>
   1384c:	vmul.f32	s2, s2, s0
   13850:	vseleq.f32	s0, s2, s0
   13854:	vcmpe.f32	s0, s4
   13858:	vmrs	APSR_nzcv, fpscr
   1385c:	bge	1394c <__mempcpy_chk@plt+0x293c>
   13860:	vcvt.u32.f32	s0, s0
   13864:	mov	r0, r4
   13868:	vmov	r1, s0
   1386c:	bl	13194 <__mempcpy_chk@plt+0x2184>
   13870:	cmp	r0, #0
   13874:	beq	1394c <__mempcpy_chk@plt+0x293c>
   13878:	ldr	r1, [r4, #8]
   1387c:	ldr	r2, [r4, #24]
   13880:	mov	r0, sl
   13884:	blx	r2
   13888:	mov	r7, r0
   1388c:	ldr	r0, [r4, #8]
   13890:	cmp	r7, r0
   13894:	bcs	139b8 <__mempcpy_chk@plt+0x29a8>
   13898:	ldr	r5, [r4]
   1389c:	mov	r9, r5
   138a0:	ldr	r1, [r9, r7, lsl #3]!
   138a4:	cmp	r1, #0
   138a8:	beq	138d8 <__mempcpy_chk@plt+0x28c8>
   138ac:	cmp	r1, sl
   138b0:	mov	r0, sl
   138b4:	beq	138d0 <__mempcpy_chk@plt+0x28c0>
   138b8:	ldr	r2, [r4, #28]
   138bc:	mov	r0, sl
   138c0:	blx	r2
   138c4:	cmp	r0, #0
   138c8:	beq	13968 <__mempcpy_chk@plt+0x2958>
   138cc:	ldr	r0, [r9]
   138d0:	cmp	r0, #0
   138d4:	bne	139b8 <__mempcpy_chk@plt+0x29a8>
   138d8:	ldr	r0, [r9]
   138dc:	cmp	r0, #0
   138e0:	beq	138fc <__mempcpy_chk@plt+0x28ec>
   138e4:	ldr	r0, [r4, #36]	; 0x24
   138e8:	cmp	r0, #0
   138ec:	beq	1391c <__mempcpy_chk@plt+0x290c>
   138f0:	ldr	r1, [r0, #4]
   138f4:	str	r1, [r4, #36]	; 0x24
   138f8:	b	1392c <__mempcpy_chk@plt+0x291c>
   138fc:	str	sl, [r9]
   13900:	ldr	r0, [r4, #12]
   13904:	ldr	r1, [r4, #16]
   13908:	add	r0, r0, #1
   1390c:	add	r1, r1, #1
   13910:	str	r0, [r4, #12]
   13914:	str	r1, [r4, #16]
   13918:	b	13948 <__mempcpy_chk@plt+0x2938>
   1391c:	mov	r0, #8
   13920:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   13924:	cmp	r0, #0
   13928:	beq	13958 <__mempcpy_chk@plt+0x2948>
   1392c:	str	sl, [r0]
   13930:	ldr	r1, [r9, #4]
   13934:	str	r1, [r0, #4]
   13938:	str	r0, [r9, #4]
   1393c:	ldr	r0, [r4, #16]
   13940:	add	r0, r0, #1
   13944:	str	r0, [r4, #16]
   13948:	mov	r7, #1
   1394c:	mov	r0, r7
   13950:	sub	sp, fp, #28
   13954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13958:	mvn	r7, #0
   1395c:	mov	r0, r7
   13960:	sub	sp, fp, #28
   13964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13968:	add	r6, r5, r7, lsl #3
   1396c:	ldr	r0, [r6, #4]!
   13970:	cmp	r0, #0
   13974:	beq	138d8 <__mempcpy_chk@plt+0x28c8>
   13978:	ldr	r1, [r0]
   1397c:	cmp	r1, sl
   13980:	beq	139ac <__mempcpy_chk@plt+0x299c>
   13984:	ldr	r2, [r4, #28]
   13988:	mov	r0, sl
   1398c:	blx	r2
   13990:	ldr	r6, [r6]
   13994:	cmp	r0, #0
   13998:	beq	1396c <__mempcpy_chk@plt+0x295c>
   1399c:	ldr	r0, [r6]
   139a0:	cmp	r0, #0
   139a4:	beq	138d8 <__mempcpy_chk@plt+0x28c8>
   139a8:	b	139b8 <__mempcpy_chk@plt+0x29a8>
   139ac:	mov	r0, sl
   139b0:	cmp	r0, #0
   139b4:	beq	138d8 <__mempcpy_chk@plt+0x28c8>
   139b8:	bl	10ff8 <abort@plt>
   139bc:	stclcc	12, cr12, [ip, #820]	; 0x334
   139c0:	svccc	0x00666666
   139c4:	svccc	0x008ccccd
   139c8:	svccc	0x004ccccd
   139cc:	svcmi	0x00800000
   139d0:	push	{r4, sl, fp, lr}
   139d4:	add	fp, sp, #8
   139d8:	sub	sp, sp, #8
   139dc:	add	r2, sp, #4
   139e0:	mov	r4, r1
   139e4:	bl	1366c <__mempcpy_chk@plt+0x265c>
   139e8:	cmn	r0, #1
   139ec:	beq	13a08 <__mempcpy_chk@plt+0x29f8>
   139f0:	ldr	r1, [sp, #4]
   139f4:	cmp	r0, #0
   139f8:	moveq	r4, r1
   139fc:	mov	r0, r4
   13a00:	sub	sp, fp, #8
   13a04:	pop	{r4, sl, fp, pc}
   13a08:	mov	r4, #0
   13a0c:	mov	r0, r4
   13a10:	sub	sp, fp, #8
   13a14:	pop	{r4, sl, fp, pc}
   13a18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a1c:	add	fp, sp, #24
   13a20:	mov	r9, r1
   13a24:	ldr	r1, [r0, #8]
   13a28:	ldr	r2, [r0, #24]
   13a2c:	mov	r5, r0
   13a30:	mov	r0, r9
   13a34:	blx	r2
   13a38:	mov	r7, r0
   13a3c:	ldr	r0, [r5, #8]
   13a40:	cmp	r7, r0
   13a44:	bcs	13cb8 <__mempcpy_chk@plt+0x2ca8>
   13a48:	ldr	r6, [r5]
   13a4c:	mov	r8, #0
   13a50:	mov	r4, r6
   13a54:	ldr	r1, [r4, r7, lsl #3]!
   13a58:	cmp	r1, #0
   13a5c:	beq	13b10 <__mempcpy_chk@plt+0x2b00>
   13a60:	cmp	r1, r9
   13a64:	beq	13a80 <__mempcpy_chk@plt+0x2a70>
   13a68:	ldr	r2, [r5, #28]
   13a6c:	mov	r0, r9
   13a70:	blx	r2
   13a74:	cmp	r0, #0
   13a78:	beq	13ab8 <__mempcpy_chk@plt+0x2aa8>
   13a7c:	ldr	r9, [r4]
   13a80:	add	r0, r6, r7, lsl #3
   13a84:	ldr	r0, [r0, #4]
   13a88:	cmp	r0, #0
   13a8c:	beq	13b00 <__mempcpy_chk@plt+0x2af0>
   13a90:	ldm	r0, {r1, r2}
   13a94:	stm	r4, {r1, r2}
   13a98:	mov	r1, #0
   13a9c:	str	r1, [r0]
   13aa0:	ldr	r1, [r5, #36]	; 0x24
   13aa4:	str	r1, [r0, #4]
   13aa8:	str	r0, [r5, #36]	; 0x24
   13aac:	cmp	r9, #0
   13ab0:	bne	13b48 <__mempcpy_chk@plt+0x2b38>
   13ab4:	b	13b10 <__mempcpy_chk@plt+0x2b00>
   13ab8:	add	r7, r6, r7, lsl #3
   13abc:	ldr	r0, [r7, #4]!
   13ac0:	cmp	r0, #0
   13ac4:	beq	13b10 <__mempcpy_chk@plt+0x2b00>
   13ac8:	ldr	r1, [r0]
   13acc:	cmp	r1, r9
   13ad0:	beq	13b18 <__mempcpy_chk@plt+0x2b08>
   13ad4:	ldr	r2, [r5, #28]
   13ad8:	mov	r0, r9
   13adc:	blx	r2
   13ae0:	ldr	r1, [r7]
   13ae4:	cmp	r0, #0
   13ae8:	bne	13b20 <__mempcpy_chk@plt+0x2b10>
   13aec:	ldr	r0, [r1, #4]!
   13af0:	mov	r7, r1
   13af4:	cmp	r0, #0
   13af8:	bne	13ac8 <__mempcpy_chk@plt+0x2ab8>
   13afc:	b	13b10 <__mempcpy_chk@plt+0x2b00>
   13b00:	mov	r0, #0
   13b04:	str	r0, [r4]
   13b08:	cmp	r9, #0
   13b0c:	bne	13b48 <__mempcpy_chk@plt+0x2b38>
   13b10:	mov	r0, r8
   13b14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13b18:	mov	r1, r0
   13b1c:	b	13b24 <__mempcpy_chk@plt+0x2b14>
   13b20:	ldr	r9, [r1]
   13b24:	ldr	r0, [r1, #4]
   13b28:	str	r0, [r7]
   13b2c:	mov	r0, #0
   13b30:	str	r0, [r1]
   13b34:	ldr	r0, [r5, #36]	; 0x24
   13b38:	str	r0, [r1, #4]
   13b3c:	str	r1, [r5, #36]	; 0x24
   13b40:	cmp	r9, #0
   13b44:	beq	13b10 <__mempcpy_chk@plt+0x2b00>
   13b48:	ldr	r0, [r5, #16]
   13b4c:	sub	r0, r0, #1
   13b50:	str	r0, [r5, #16]
   13b54:	ldr	r0, [r4]
   13b58:	cmp	r0, #0
   13b5c:	bne	13cac <__mempcpy_chk@plt+0x2c9c>
   13b60:	ldr	r0, [r5, #12]
   13b64:	vldr	s0, [r5, #8]
   13b68:	sub	r1, r0, #1
   13b6c:	str	r1, [r5, #12]
   13b70:	vmov	s2, r1
   13b74:	ldr	r0, [r5, #20]
   13b78:	vcvt.f32.u32	s0, s0
   13b7c:	vcvt.f32.u32	s2, s2
   13b80:	vldr	s4, [r0]
   13b84:	vmul.f32	s6, s4, s0
   13b88:	vcmpe.f32	s6, s2
   13b8c:	vmrs	APSR_nzcv, fpscr
   13b90:	ble	13cac <__mempcpy_chk@plt+0x2c9c>
   13b94:	movw	r1, #31136	; 0x79a0
   13b98:	movt	r1, #1
   13b9c:	cmp	r0, r1
   13ba0:	beq	13c3c <__mempcpy_chk@plt+0x2c2c>
   13ba4:	vldr	s8, [pc, #272]	; 13cbc <__mempcpy_chk@plt+0x2cac>
   13ba8:	vldr	s6, [r0, #8]
   13bac:	vcmpe.f32	s6, s8
   13bb0:	vmrs	APSR_nzcv, fpscr
   13bb4:	ble	13c18 <__mempcpy_chk@plt+0x2c08>
   13bb8:	vldr	s10, [pc, #256]	; 13cc0 <__mempcpy_chk@plt+0x2cb0>
   13bbc:	vcmpe.f32	s6, s10
   13bc0:	vmrs	APSR_nzcv, fpscr
   13bc4:	bpl	13c18 <__mempcpy_chk@plt+0x2c08>
   13bc8:	vcmpe.f32	s4, #0.0
   13bcc:	vmrs	APSR_nzcv, fpscr
   13bd0:	blt	13c18 <__mempcpy_chk@plt+0x2c08>
   13bd4:	vldr	s10, [r0, #12]
   13bd8:	vldr	s12, [pc, #228]	; 13cc4 <__mempcpy_chk@plt+0x2cb4>
   13bdc:	vcmpe.f32	s10, s12
   13be0:	vmrs	APSR_nzcv, fpscr
   13be4:	ble	13c18 <__mempcpy_chk@plt+0x2c08>
   13be8:	vadd.f32	s8, s4, s8
   13bec:	vcmpe.f32	s8, s6
   13bf0:	vmrs	APSR_nzcv, fpscr
   13bf4:	bpl	13c18 <__mempcpy_chk@plt+0x2c08>
   13bf8:	vldr	s6, [r0, #4]
   13bfc:	vmov.f32	s10, #112	; 0x3f800000  1.0
   13c00:	vcmpe.f32	s6, s10
   13c04:	vmrs	APSR_nzcv, fpscr
   13c08:	bhi	13c18 <__mempcpy_chk@plt+0x2c08>
   13c0c:	vcmpe.f32	s8, s6
   13c10:	vmrs	APSR_nzcv, fpscr
   13c14:	bmi	13c28 <__mempcpy_chk@plt+0x2c18>
   13c18:	vldr	s4, [pc, #168]	; 13cc8 <__mempcpy_chk@plt+0x2cb8>
   13c1c:	movw	r0, #31136	; 0x79a0
   13c20:	movt	r0, #1
   13c24:	str	r0, [r5, #20]
   13c28:	vmul.f32	s4, s4, s0
   13c2c:	vcmpe.f32	s4, s2
   13c30:	vmrs	APSR_nzcv, fpscr
   13c34:	bgt	13c50 <__mempcpy_chk@plt+0x2c40>
   13c38:	b	13cac <__mempcpy_chk@plt+0x2c9c>
   13c3c:	mov	r0, r1
   13c40:	vmul.f32	s4, s4, s0
   13c44:	vcmpe.f32	s4, s2
   13c48:	vmrs	APSR_nzcv, fpscr
   13c4c:	ble	13cac <__mempcpy_chk@plt+0x2c9c>
   13c50:	vldr	s2, [r0, #4]
   13c54:	ldrb	r1, [r0, #16]
   13c58:	cmp	r1, #0
   13c5c:	vmul.f32	s0, s2, s0
   13c60:	bne	13c6c <__mempcpy_chk@plt+0x2c5c>
   13c64:	vldr	s2, [r0, #8]
   13c68:	vmul.f32	s0, s0, s2
   13c6c:	vcvt.u32.f32	s0, s0
   13c70:	mov	r0, r5
   13c74:	vmov	r1, s0
   13c78:	bl	13194 <__mempcpy_chk@plt+0x2184>
   13c7c:	cmp	r0, #0
   13c80:	bne	13cac <__mempcpy_chk@plt+0x2c9c>
   13c84:	ldr	r0, [r5, #36]	; 0x24
   13c88:	cmp	r0, #0
   13c8c:	beq	13ca4 <__mempcpy_chk@plt+0x2c94>
   13c90:	ldr	r4, [r0, #4]
   13c94:	bl	12858 <__mempcpy_chk@plt+0x1848>
   13c98:	cmp	r4, #0
   13c9c:	mov	r0, r4
   13ca0:	bne	13c90 <__mempcpy_chk@plt+0x2c80>
   13ca4:	mov	r0, #0
   13ca8:	str	r0, [r5, #36]	; 0x24
   13cac:	mov	r8, r9
   13cb0:	mov	r0, r8
   13cb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13cb8:	bl	10ff8 <abort@plt>
   13cbc:	stclcc	12, cr12, [ip, #820]	; 0x334
   13cc0:	svccc	0x00666666
   13cc4:	svccc	0x008ccccd
   13cc8:	andeq	r0, r0, r0
   13ccc:	b	13a18 <__mempcpy_chk@plt+0x2a08>
   13cd0:	push	{r4, r5, fp, lr}
   13cd4:	add	fp, sp, #8
   13cd8:	mov	r5, r0
   13cdc:	ldr	r0, [r0]
   13ce0:	mov	r4, r1
   13ce4:	bl	16e3c <__mempcpy_chk@plt+0x5e2c>
   13ce8:	ldrd	r2, [r5, #8]
   13cec:	eor	r0, r2, r0
   13cf0:	mov	r1, r3
   13cf4:	mov	r2, r4
   13cf8:	mov	r3, #0
   13cfc:	bl	17064 <__mempcpy_chk@plt+0x6054>
   13d00:	mov	r0, r2
   13d04:	pop	{r4, r5, fp, pc}
   13d08:	push	{r4, r5, fp, lr}
   13d0c:	add	fp, sp, #8
   13d10:	mov	lr, r1
   13d14:	mov	r2, r0
   13d18:	ldr	r3, [r2, #8]!
   13d1c:	ldr	ip, [lr, #8]!
   13d20:	ldr	r4, [r2, #4]
   13d24:	eor	ip, r3, ip
   13d28:	ldr	r3, [lr, #4]
   13d2c:	eor	r3, r4, r3
   13d30:	orrs	r3, ip, r3
   13d34:	mov	ip, #0
   13d38:	bne	13d68 <__mempcpy_chk@plt+0x2d58>
   13d3c:	ldrd	r4, [lr, #8]
   13d40:	ldrd	r2, [r2, #8]
   13d44:	eor	r3, r3, r5
   13d48:	eor	r2, r2, r4
   13d4c:	orrs	r2, r2, r3
   13d50:	bne	13d68 <__mempcpy_chk@plt+0x2d58>
   13d54:	ldr	r1, [r1]
   13d58:	ldr	r0, [r0]
   13d5c:	bl	10ddc <strcmp@plt>
   13d60:	clz	r0, r0
   13d64:	lsr	ip, r0, #5
   13d68:	mov	r0, ip
   13d6c:	pop	{r4, r5, fp, pc}
   13d70:	push	{r4, sl, fp, lr}
   13d74:	add	fp, sp, #8
   13d78:	mov	r4, r0
   13d7c:	ldr	r0, [r0]
   13d80:	bl	12858 <__mempcpy_chk@plt+0x1848>
   13d84:	mov	r0, r4
   13d88:	pop	{r4, sl, fp, lr}
   13d8c:	b	12858 <__mempcpy_chk@plt+0x1848>
   13d90:	push	{r4, r5, fp, lr}
   13d94:	add	fp, sp, #8
   13d98:	cmp	r0, #0
   13d9c:	beq	13e30 <__mempcpy_chk@plt+0x2e20>
   13da0:	mov	r1, #47	; 0x2f
   13da4:	mov	r4, r0
   13da8:	bl	10fbc <strrchr@plt>
   13dac:	cmp	r0, #0
   13db0:	mov	r5, r4
   13db4:	addne	r5, r0, #1
   13db8:	sub	r0, r5, r4
   13dbc:	cmp	r0, #7
   13dc0:	blt	13e14 <__mempcpy_chk@plt+0x2e04>
   13dc4:	movw	r1, #31212	; 0x79ec
   13dc8:	sub	r0, r5, #7
   13dcc:	mov	r2, #7
   13dd0:	movt	r1, #1
   13dd4:	bl	10fec <strncmp@plt>
   13dd8:	cmp	r0, #0
   13ddc:	bne	13e14 <__mempcpy_chk@plt+0x2e04>
   13de0:	movw	r1, #31220	; 0x79f4
   13de4:	mov	r0, r5
   13de8:	mov	r2, #3
   13dec:	movt	r1, #1
   13df0:	bl	10fec <strncmp@plt>
   13df4:	cmp	r0, #0
   13df8:	beq	13e04 <__mempcpy_chk@plt+0x2df4>
   13dfc:	mov	r4, r5
   13e00:	b	13e14 <__mempcpy_chk@plt+0x2e04>
   13e04:	movw	r0, #33072	; 0x8130
   13e08:	add	r4, r5, #3
   13e0c:	movt	r0, #2
   13e10:	str	r4, [r0]
   13e14:	movw	r0, #33076	; 0x8134
   13e18:	movt	r0, #2
   13e1c:	str	r4, [r0]
   13e20:	movw	r0, #33124	; 0x8164
   13e24:	movt	r0, #2
   13e28:	str	r4, [r0]
   13e2c:	pop	{r4, r5, fp, pc}
   13e30:	movw	r0, #33088	; 0x8140
   13e34:	mov	r1, #55	; 0x37
   13e38:	mov	r2, #1
   13e3c:	movt	r0, #2
   13e40:	ldr	r3, [r0]
   13e44:	movw	r0, #31156	; 0x79b4
   13e48:	movt	r0, #1
   13e4c:	bl	10e84 <fwrite@plt>
   13e50:	bl	10ff8 <abort@plt>
   13e54:	push	{r4, r5, r6, sl, fp, lr}
   13e58:	add	fp, sp, #16
   13e5c:	mov	r4, r0
   13e60:	movw	r0, #33128	; 0x8168
   13e64:	movt	r0, #2
   13e68:	cmp	r4, #0
   13e6c:	moveq	r4, r0
   13e70:	bl	10f44 <__errno_location@plt>
   13e74:	ldr	r6, [r0]
   13e78:	mov	r5, r0
   13e7c:	mov	r0, r4
   13e80:	mov	r1, #48	; 0x30
   13e84:	bl	16a20 <__mempcpy_chk@plt+0x5a10>
   13e88:	str	r6, [r5]
   13e8c:	pop	{r4, r5, r6, sl, fp, pc}
   13e90:	movw	r1, #33128	; 0x8168
   13e94:	cmp	r0, #0
   13e98:	movt	r1, #2
   13e9c:	movne	r1, r0
   13ea0:	ldr	r0, [r1]
   13ea4:	bx	lr
   13ea8:	movw	r2, #33128	; 0x8168
   13eac:	cmp	r0, #0
   13eb0:	movt	r2, #2
   13eb4:	movne	r2, r0
   13eb8:	str	r1, [r2]
   13ebc:	bx	lr
   13ec0:	movw	r3, #33128	; 0x8168
   13ec4:	cmp	r0, #0
   13ec8:	and	r2, r2, #1
   13ecc:	movt	r3, #2
   13ed0:	movne	r3, r0
   13ed4:	ubfx	r0, r1, #5, #3
   13ed8:	and	r1, r1, #31
   13edc:	add	ip, r3, r0, lsl #2
   13ee0:	mov	r0, #1
   13ee4:	ldr	r3, [ip, #8]
   13ee8:	and	r0, r0, r3, lsr r1
   13eec:	eor	r2, r0, r2
   13ef0:	eor	r1, r3, r2, lsl r1
   13ef4:	str	r1, [ip, #8]
   13ef8:	bx	lr
   13efc:	movw	r2, #33128	; 0x8168
   13f00:	cmp	r0, #0
   13f04:	movt	r2, #2
   13f08:	movne	r2, r0
   13f0c:	ldr	r0, [r2, #4]
   13f10:	str	r1, [r2, #4]
   13f14:	bx	lr
   13f18:	push	{fp, lr}
   13f1c:	mov	fp, sp
   13f20:	movw	r3, #33128	; 0x8168
   13f24:	cmp	r0, #0
   13f28:	movt	r3, #2
   13f2c:	movne	r3, r0
   13f30:	cmp	r1, #0
   13f34:	mov	r0, #10
   13f38:	cmpne	r2, #0
   13f3c:	str	r0, [r3]
   13f40:	bne	13f48 <__mempcpy_chk@plt+0x2f38>
   13f44:	bl	10ff8 <abort@plt>
   13f48:	str	r1, [r3, #40]	; 0x28
   13f4c:	str	r2, [r3, #44]	; 0x2c
   13f50:	pop	{fp, pc}
   13f54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f58:	add	fp, sp, #28
   13f5c:	sub	sp, sp, #20
   13f60:	mov	r7, r0
   13f64:	ldr	r0, [fp, #8]
   13f68:	movw	r5, #33128	; 0x8168
   13f6c:	mov	r8, r3
   13f70:	mov	r9, r2
   13f74:	mov	sl, r1
   13f78:	movt	r5, #2
   13f7c:	cmp	r0, #0
   13f80:	movne	r5, r0
   13f84:	bl	10f44 <__errno_location@plt>
   13f88:	ldr	r2, [r5, #40]	; 0x28
   13f8c:	ldr	r3, [r5, #44]	; 0x2c
   13f90:	mov	r4, r0
   13f94:	ldm	r5, {r0, r1}
   13f98:	add	r5, r5, #8
   13f9c:	ldr	r6, [r4]
   13fa0:	stm	sp, {r0, r1, r5}
   13fa4:	mov	r0, r7
   13fa8:	mov	r1, sl
   13fac:	str	r2, [sp, #12]
   13fb0:	str	r3, [sp, #16]
   13fb4:	mov	r2, r9
   13fb8:	mov	r3, r8
   13fbc:	bl	13fcc <__mempcpy_chk@plt+0x2fbc>
   13fc0:	str	r6, [r4]
   13fc4:	sub	sp, fp, #28
   13fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fd0:	add	fp, sp, #28
   13fd4:	sub	sp, sp, #156	; 0x9c
   13fd8:	str	r0, [fp, #-84]	; 0xffffffac
   13fdc:	add	r0, r2, #1
   13fe0:	mov	r6, r1
   13fe4:	mov	r7, r3
   13fe8:	str	r2, [fp, #-80]	; 0xffffffb0
   13fec:	str	r0, [sp, #80]	; 0x50
   13ff0:	ldr	r0, [fp, #12]
   13ff4:	and	r1, r0, #1
   13ff8:	str	r1, [sp, #36]	; 0x24
   13ffc:	and	r1, r0, #4
   14000:	str	r1, [sp, #32]
   14004:	ubfx	r8, r0, #1, #1
   14008:	bl	10e9c <__ctype_get_mb_cur_max@plt>
   1400c:	str	r0, [sp, #40]	; 0x28
   14010:	ldr	r0, [fp, #24]
   14014:	ldr	r4, [fp, #8]
   14018:	mov	r1, #0
   1401c:	str	r1, [fp, #-52]	; 0xffffffcc
   14020:	mov	r1, #0
   14024:	str	r1, [sp, #60]	; 0x3c
   14028:	mov	r1, #1
   1402c:	str	r1, [sp, #84]	; 0x54
   14030:	str	r0, [sp, #76]	; 0x4c
   14034:	ldr	r0, [fp, #20]
   14038:	str	r0, [sp, #72]	; 0x48
   1403c:	mov	r0, #0
   14040:	str	r0, [sp, #56]	; 0x38
   14044:	mov	r0, #0
   14048:	str	r0, [fp, #-88]	; 0xffffffa8
   1404c:	mov	r0, #0
   14050:	str	r0, [fp, #-72]	; 0xffffffb8
   14054:	mov	r0, #0
   14058:	cmp	r4, #10
   1405c:	bhi	15378 <__mempcpy_chk@plt+0x4368>
   14060:	add	r1, pc, #24
   14064:	ldr	ip, [fp, #-84]	; 0xffffffac
   14068:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1406c:	mov	r5, r6
   14070:	mov	r9, #0
   14074:	mov	r2, #1
   14078:	mov	r3, #0
   1407c:	ldr	pc, [r1, r4, lsl #2]
   14080:	andeq	r4, r1, r8, asr #2
   14084:	andeq	r4, r1, r4, lsl #3
   14088:	andeq	r4, r1, r8, asr r1
   1408c:	andeq	r4, r1, r0, asr #2
   14090:	andeq	r4, r1, r8, ror r1
   14094:	ldrdeq	r4, [r1], -ip
   14098:	andeq	r4, r1, r8, ror #2
   1409c:	andeq	r4, r1, r4, asr r4
   140a0:	andeq	r4, r1, ip, lsr #1
   140a4:	andeq	r4, r1, ip, lsr #1
   140a8:	andeq	r4, r1, r4, ror #5
   140ac:	movw	r6, #31304	; 0x7a48
   140b0:	mov	r0, #0
   140b4:	mov	r2, #5
   140b8:	movt	r6, #1
   140bc:	mov	r1, r6
   140c0:	bl	10e3c <dcgettext@plt>
   140c4:	cmp	r0, r6
   140c8:	str	r0, [sp, #72]	; 0x48
   140cc:	bne	142bc <__mempcpy_chk@plt+0x32ac>
   140d0:	bl	16e80 <__mempcpy_chk@plt+0x5e70>
   140d4:	ldrb	r1, [r0]
   140d8:	and	r1, r1, #223	; 0xdf
   140dc:	cmp	r1, #71	; 0x47
   140e0:	beq	1423c <__mempcpy_chk@plt+0x322c>
   140e4:	cmp	r1, #85	; 0x55
   140e8:	bne	142a0 <__mempcpy_chk@plt+0x3290>
   140ec:	ldrb	r1, [r0, #1]
   140f0:	and	r1, r1, #223	; 0xdf
   140f4:	cmp	r1, #84	; 0x54
   140f8:	bne	142a0 <__mempcpy_chk@plt+0x3290>
   140fc:	ldrb	r1, [r0, #2]
   14100:	and	r1, r1, #223	; 0xdf
   14104:	cmp	r1, #70	; 0x46
   14108:	bne	142a0 <__mempcpy_chk@plt+0x3290>
   1410c:	ldrb	r1, [r0, #3]
   14110:	cmp	r1, #45	; 0x2d
   14114:	bne	142a0 <__mempcpy_chk@plt+0x3290>
   14118:	ldrb	r1, [r0, #4]
   1411c:	cmp	r1, #56	; 0x38
   14120:	bne	142a0 <__mempcpy_chk@plt+0x3290>
   14124:	ldrb	r0, [r0, #5]
   14128:	cmp	r0, #0
   1412c:	movw	r0, #31308	; 0x7a4c
   14130:	movt	r0, #1
   14134:	str	r0, [sp, #72]	; 0x48
   14138:	bne	142a0 <__mempcpy_chk@plt+0x3290>
   1413c:	b	142bc <__mempcpy_chk@plt+0x32ac>
   14140:	mov	r0, #1
   14144:	b	14184 <__mempcpy_chk@plt+0x3174>
   14148:	mov	r4, #0
   1414c:	mov	r9, #0
   14150:	mov	r2, r0
   14154:	b	141d4 <__mempcpy_chk@plt+0x31c4>
   14158:	tst	r8, #1
   1415c:	bne	14184 <__mempcpy_chk@plt+0x3174>
   14160:	mov	r2, r0
   14164:	b	141ac <__mempcpy_chk@plt+0x319c>
   14168:	mov	r0, #1
   1416c:	mov	r9, #0
   14170:	mov	r4, #5
   14174:	b	141f0 <__mempcpy_chk@plt+0x31e0>
   14178:	mov	r2, #1
   1417c:	tst	r8, #1
   14180:	beq	141ac <__mempcpy_chk@plt+0x319c>
   14184:	mov	r1, #1
   14188:	mov	r9, #0
   1418c:	mov	r4, #2
   14190:	mov	r2, r0
   14194:	mov	r3, #1
   14198:	str	r1, [fp, #-72]	; 0xffffffb8
   1419c:	movw	r1, #31306	; 0x7a4a
   141a0:	movt	r1, #1
   141a4:	str	r1, [fp, #-88]	; 0xffffffa8
   141a8:	b	14454 <__mempcpy_chk@plt+0x3444>
   141ac:	cmp	r5, #0
   141b0:	mov	r9, #1
   141b4:	mov	r4, #2
   141b8:	movne	r0, #39	; 0x27
   141bc:	strbne	r0, [ip]
   141c0:	movw	r0, #31306	; 0x7a4a
   141c4:	movt	r0, #1
   141c8:	str	r0, [fp, #-88]	; 0xffffffa8
   141cc:	mov	r0, #1
   141d0:	str	r0, [fp, #-72]	; 0xffffffb8
   141d4:	mov	r3, #0
   141d8:	b	14454 <__mempcpy_chk@plt+0x3444>
   141dc:	mov	r4, #5
   141e0:	tst	r8, #1
   141e4:	beq	1420c <__mempcpy_chk@plt+0x31fc>
   141e8:	mov	r0, #1
   141ec:	mov	r9, #0
   141f0:	str	r0, [fp, #-72]	; 0xffffffb8
   141f4:	movw	r0, #31302	; 0x7a46
   141f8:	mov	r2, #1
   141fc:	mov	r3, #1
   14200:	movt	r0, #1
   14204:	str	r0, [fp, #-88]	; 0xffffffa8
   14208:	b	14454 <__mempcpy_chk@plt+0x3444>
   1420c:	cmp	r5, #0
   14210:	mov	r3, #0
   14214:	mov	r9, #1
   14218:	mov	r2, #1
   1421c:	movne	r0, #34	; 0x22
   14220:	strbne	r0, [ip]
   14224:	movw	r0, #31302	; 0x7a46
   14228:	movt	r0, #1
   1422c:	str	r0, [fp, #-88]	; 0xffffffa8
   14230:	mov	r0, #1
   14234:	str	r0, [fp, #-72]	; 0xffffffb8
   14238:	b	14454 <__mempcpy_chk@plt+0x3444>
   1423c:	ldrb	r1, [r0, #1]
   14240:	and	r1, r1, #223	; 0xdf
   14244:	cmp	r1, #66	; 0x42
   14248:	bne	142a0 <__mempcpy_chk@plt+0x3290>
   1424c:	ldrb	r1, [r0, #2]
   14250:	cmp	r1, #49	; 0x31
   14254:	bne	142a0 <__mempcpy_chk@plt+0x3290>
   14258:	ldrb	r1, [r0, #3]
   1425c:	cmp	r1, #56	; 0x38
   14260:	bne	142a0 <__mempcpy_chk@plt+0x3290>
   14264:	ldrb	r1, [r0, #4]
   14268:	cmp	r1, #48	; 0x30
   1426c:	bne	142a0 <__mempcpy_chk@plt+0x3290>
   14270:	ldrb	r1, [r0, #5]
   14274:	cmp	r1, #51	; 0x33
   14278:	bne	142a0 <__mempcpy_chk@plt+0x3290>
   1427c:	ldrb	r1, [r0, #6]
   14280:	cmp	r1, #48	; 0x30
   14284:	bne	142a0 <__mempcpy_chk@plt+0x3290>
   14288:	ldrb	r0, [r0, #7]
   1428c:	cmp	r0, #0
   14290:	movw	r0, #31316	; 0x7a54
   14294:	movt	r0, #1
   14298:	str	r0, [sp, #72]	; 0x48
   1429c:	beq	142bc <__mempcpy_chk@plt+0x32ac>
   142a0:	movw	r1, #31302	; 0x7a46
   142a4:	movw	r0, #31306	; 0x7a4a
   142a8:	cmp	r4, #9
   142ac:	movt	r1, #1
   142b0:	movt	r0, #1
   142b4:	moveq	r0, r1
   142b8:	str	r0, [sp, #72]	; 0x48
   142bc:	movw	r6, #31306	; 0x7a4a
   142c0:	mov	r0, #0
   142c4:	mov	r2, #5
   142c8:	movt	r6, #1
   142cc:	mov	r1, r6
   142d0:	bl	10e3c <dcgettext@plt>
   142d4:	cmp	r0, r6
   142d8:	str	r0, [sp, #76]	; 0x4c
   142dc:	beq	14328 <__mempcpy_chk@plt+0x3318>
   142e0:	ldr	ip, [fp, #-84]	; 0xffffffac
   142e4:	mov	r9, #0
   142e8:	tst	r8, #1
   142ec:	bne	14430 <__mempcpy_chk@plt+0x3420>
   142f0:	ldr	r0, [sp, #72]	; 0x48
   142f4:	ldrb	r0, [r0]
   142f8:	cmp	r0, #0
   142fc:	beq	14430 <__mempcpy_chk@plt+0x3420>
   14300:	ldr	r1, [sp, #72]	; 0x48
   14304:	mov	r9, #0
   14308:	add	r1, r1, #1
   1430c:	cmp	r9, r5
   14310:	strbcc	r0, [ip, r9]
   14314:	ldrb	r0, [r1, r9]
   14318:	add	r9, r9, #1
   1431c:	cmp	r0, #0
   14320:	bne	1430c <__mempcpy_chk@plt+0x32fc>
   14324:	b	14430 <__mempcpy_chk@plt+0x3420>
   14328:	bl	16e80 <__mempcpy_chk@plt+0x5e70>
   1432c:	ldrb	r1, [r0]
   14330:	and	r1, r1, #223	; 0xdf
   14334:	cmp	r1, #71	; 0x47
   14338:	beq	143a8 <__mempcpy_chk@plt+0x3398>
   1433c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14340:	cmp	r1, #85	; 0x55
   14344:	bne	14404 <__mempcpy_chk@plt+0x33f4>
   14348:	ldrb	r1, [r0, #1]
   1434c:	and	r1, r1, #223	; 0xdf
   14350:	cmp	r1, #84	; 0x54
   14354:	bne	14404 <__mempcpy_chk@plt+0x33f4>
   14358:	ldrb	r1, [r0, #2]
   1435c:	and	r1, r1, #223	; 0xdf
   14360:	cmp	r1, #70	; 0x46
   14364:	bne	14404 <__mempcpy_chk@plt+0x33f4>
   14368:	ldrb	r1, [r0, #3]
   1436c:	cmp	r1, #45	; 0x2d
   14370:	bne	14404 <__mempcpy_chk@plt+0x33f4>
   14374:	ldrb	r1, [r0, #4]
   14378:	cmp	r1, #56	; 0x38
   1437c:	bne	14404 <__mempcpy_chk@plt+0x33f4>
   14380:	ldrb	r0, [r0, #5]
   14384:	cmp	r0, #0
   14388:	bne	14404 <__mempcpy_chk@plt+0x33f4>
   1438c:	movw	r0, #31312	; 0x7a50
   14390:	movt	r0, #1
   14394:	str	r0, [sp, #76]	; 0x4c
   14398:	mov	r9, #0
   1439c:	tst	r8, #1
   143a0:	beq	142f0 <__mempcpy_chk@plt+0x32e0>
   143a4:	b	14430 <__mempcpy_chk@plt+0x3420>
   143a8:	ldrb	r1, [r0, #1]
   143ac:	ldr	ip, [fp, #-84]	; 0xffffffac
   143b0:	and	r1, r1, #223	; 0xdf
   143b4:	cmp	r1, #66	; 0x42
   143b8:	bne	14404 <__mempcpy_chk@plt+0x33f4>
   143bc:	ldrb	r1, [r0, #2]
   143c0:	cmp	r1, #49	; 0x31
   143c4:	bne	14404 <__mempcpy_chk@plt+0x33f4>
   143c8:	ldrb	r1, [r0, #3]
   143cc:	cmp	r1, #56	; 0x38
   143d0:	bne	14404 <__mempcpy_chk@plt+0x33f4>
   143d4:	ldrb	r1, [r0, #4]
   143d8:	cmp	r1, #48	; 0x30
   143dc:	bne	14404 <__mempcpy_chk@plt+0x33f4>
   143e0:	ldrb	r1, [r0, #5]
   143e4:	cmp	r1, #51	; 0x33
   143e8:	bne	14404 <__mempcpy_chk@plt+0x33f4>
   143ec:	ldrb	r1, [r0, #6]
   143f0:	cmp	r1, #48	; 0x30
   143f4:	bne	14404 <__mempcpy_chk@plt+0x33f4>
   143f8:	ldrb	r0, [r0, #7]
   143fc:	cmp	r0, #0
   14400:	beq	15218 <__mempcpy_chk@plt+0x4208>
   14404:	movw	r0, #31306	; 0x7a4a
   14408:	cmp	r4, #9
   1440c:	movt	r0, #1
   14410:	mov	r1, r0
   14414:	movw	r0, #31302	; 0x7a46
   14418:	movt	r0, #1
   1441c:	moveq	r1, r0
   14420:	str	r1, [sp, #76]	; 0x4c
   14424:	mov	r9, #0
   14428:	tst	r8, #1
   1442c:	beq	142f0 <__mempcpy_chk@plt+0x32e0>
   14430:	ldr	r6, [sp, #76]	; 0x4c
   14434:	mov	r0, r6
   14438:	bl	10f38 <strlen@plt>
   1443c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14440:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14444:	str	r0, [fp, #-72]	; 0xffffffb8
   14448:	str	r6, [fp, #-88]	; 0xffffffa8
   1444c:	mov	r2, #1
   14450:	mov	r3, r8
   14454:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14458:	str	r4, [fp, #-64]	; 0xffffffc0
   1445c:	mov	sl, #0
   14460:	str	r3, [fp, #-76]	; 0xffffffb4
   14464:	str	r2, [sp, #88]	; 0x58
   14468:	cmp	r0, #0
   1446c:	movwne	r0, #1
   14470:	and	r1, r0, r3
   14474:	and	r1, r2, r1
   14478:	str	r1, [sp, #48]	; 0x30
   1447c:	sub	r1, r4, #2
   14480:	clz	r1, r1
   14484:	lsr	r1, r1, #5
   14488:	and	r1, r1, r3
   1448c:	str	r1, [sp, #44]	; 0x2c
   14490:	subs	r1, r4, #2
   14494:	eor	r4, r3, #1
   14498:	movwne	r1, #1
   1449c:	str	r4, [sp, #92]	; 0x5c
   144a0:	orr	r4, r1, r4
   144a4:	and	r1, r1, r2
   144a8:	and	r0, r0, r1
   144ac:	str	r4, [sp, #64]	; 0x40
   144b0:	ldr	r4, [sp, #84]	; 0x54
   144b4:	str	r0, [fp, #-60]	; 0xffffffc4
   144b8:	orr	r0, r1, r3
   144bc:	ldr	r1, [fp, #16]
   144c0:	eor	r0, r0, #1
   144c4:	clz	r1, r1
   144c8:	lsr	r1, r1, #5
   144cc:	orr	r0, r1, r0
   144d0:	str	r0, [fp, #-68]	; 0xffffffbc
   144d4:	eor	r0, r2, #1
   144d8:	str	r0, [sp, #52]	; 0x34
   144dc:	cmn	r7, #1
   144e0:	beq	144f0 <__mempcpy_chk@plt+0x34e0>
   144e4:	cmp	sl, r7
   144e8:	bne	144fc <__mempcpy_chk@plt+0x34ec>
   144ec:	b	15190 <__mempcpy_chk@plt+0x4180>
   144f0:	ldrb	r0, [lr, sl]
   144f4:	cmp	r0, #0
   144f8:	beq	15198 <__mempcpy_chk@plt+0x4188>
   144fc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14500:	cmp	r0, #0
   14504:	beq	14564 <__mempcpy_chk@plt+0x3554>
   14508:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1450c:	mov	r6, r5
   14510:	add	r5, sl, r0
   14514:	cmp	r0, #2
   14518:	bcc	14584 <__mempcpy_chk@plt+0x3574>
   1451c:	mov	r0, #0
   14520:	cmn	r7, #1
   14524:	str	r0, [fp, #-56]	; 0xffffffc8
   14528:	bne	14540 <__mempcpy_chk@plt+0x3530>
   1452c:	mov	r0, lr
   14530:	bl	10f38 <strlen@plt>
   14534:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14538:	ldr	ip, [fp, #-84]	; 0xffffffac
   1453c:	mov	r7, r0
   14540:	cmp	r5, r7
   14544:	bls	14594 <__mempcpy_chk@plt+0x3584>
   14548:	mov	r0, #0
   1454c:	mov	r5, r6
   14550:	str	r0, [fp, #-48]	; 0xffffffd0
   14554:	ldrb	r6, [lr, sl]
   14558:	cmp	r6, #126	; 0x7e
   1455c:	bls	145e4 <__mempcpy_chk@plt+0x35d4>
   14560:	b	14b40 <__mempcpy_chk@plt+0x3b30>
   14564:	mov	r0, #0
   14568:	str	r0, [fp, #-56]	; 0xffffffc8
   1456c:	mov	r0, #0
   14570:	str	r0, [fp, #-48]	; 0xffffffd0
   14574:	ldrb	r6, [lr, sl]
   14578:	cmp	r6, #126	; 0x7e
   1457c:	bls	145e4 <__mempcpy_chk@plt+0x35d4>
   14580:	b	14b40 <__mempcpy_chk@plt+0x3b30>
   14584:	mov	r0, #0
   14588:	str	r0, [fp, #-56]	; 0xffffffc8
   1458c:	cmp	r5, r7
   14590:	bhi	14548 <__mempcpy_chk@plt+0x3538>
   14594:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14598:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1459c:	add	r0, lr, sl
   145a0:	bl	10f2c <bcmp@plt>
   145a4:	ldr	r2, [sp, #92]	; 0x5c
   145a8:	cmp	r0, #0
   145ac:	mov	r1, r0
   145b0:	mov	r5, r6
   145b4:	movwne	r1, #1
   145b8:	orr	r1, r1, r2
   145bc:	tst	r1, #1
   145c0:	beq	15258 <__mempcpy_chk@plt+0x4248>
   145c4:	ldr	ip, [fp, #-84]	; 0xffffffac
   145c8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   145cc:	clz	r0, r0
   145d0:	lsr	r0, r0, #5
   145d4:	str	r0, [fp, #-48]	; 0xffffffd0
   145d8:	ldrb	r6, [lr, sl]
   145dc:	cmp	r6, #126	; 0x7e
   145e0:	bhi	14b40 <__mempcpy_chk@plt+0x3b30>
   145e4:	add	r3, pc, #16
   145e8:	mov	r8, #1
   145ec:	mov	r2, #110	; 0x6e
   145f0:	mov	r0, #97	; 0x61
   145f4:	mov	r1, #0
   145f8:	ldr	pc, [r3, r6, lsl #2]
   145fc:	strdeq	r4, [r1], -r8
   14600:	andeq	r4, r1, r0, asr #22
   14604:	andeq	r4, r1, r0, asr #22
   14608:	andeq	r4, r1, r0, asr #22
   1460c:	andeq	r4, r1, r0, asr #22
   14610:	andeq	r4, r1, r0, asr #22
   14614:	andeq	r4, r1, r0, asr #22
   14618:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1461c:	ldrdeq	r4, [r1], -r8
   14620:	ldrdeq	r4, [r1], -r0
   14624:	andeq	r4, r1, r4, ror #17
   14628:	andeq	r4, r1, r4, lsl sl
   1462c:	andeq	r4, r1, r8, asr #17
   14630:	andeq	r4, r1, r0, ror #17
   14634:	andeq	r4, r1, r0, asr #22
   14638:	andeq	r4, r1, r0, asr #22
   1463c:	andeq	r4, r1, r0, asr #22
   14640:	andeq	r4, r1, r0, asr #22
   14644:	andeq	r4, r1, r0, asr #22
   14648:	andeq	r4, r1, r0, asr #22
   1464c:	andeq	r4, r1, r0, asr #22
   14650:	andeq	r4, r1, r0, asr #22
   14654:	andeq	r4, r1, r0, asr #22
   14658:	andeq	r4, r1, r0, asr #22
   1465c:	andeq	r4, r1, r0, asr #22
   14660:	andeq	r4, r1, r0, asr #22
   14664:	andeq	r4, r1, r0, asr #22
   14668:	andeq	r4, r1, r0, asr #22
   1466c:	andeq	r4, r1, r0, asr #22
   14670:	andeq	r4, r1, r0, asr #22
   14674:	andeq	r4, r1, r0, asr #22
   14678:	andeq	r4, r1, r0, asr #22
   1467c:	andeq	r4, r1, ip, ror #16
   14680:	andeq	r4, r1, r0, ror r8
   14684:	andeq	r4, r1, r0, ror r8
   14688:	andeq	r4, r1, r0, ror #16
   1468c:	andeq	r4, r1, r0, ror r8
   14690:	strdeq	r4, [r1], -r8
   14694:	andeq	r4, r1, r0, ror r8
   14698:	andeq	r4, r1, ip, lsl sl
   1469c:	andeq	r4, r1, r0, ror r8
   146a0:	andeq	r4, r1, r0, ror r8
   146a4:	andeq	r4, r1, r0, ror r8
   146a8:	strdeq	r4, [r1], -r8
   146ac:	strdeq	r4, [r1], -r8
   146b0:	strdeq	r4, [r1], -r8
   146b4:	strdeq	r4, [r1], -r8
   146b8:	strdeq	r4, [r1], -r8
   146bc:	strdeq	r4, [r1], -r8
   146c0:	strdeq	r4, [r1], -r8
   146c4:	strdeq	r4, [r1], -r8
   146c8:	strdeq	r4, [r1], -r8
   146cc:	strdeq	r4, [r1], -r8
   146d0:	strdeq	r4, [r1], -r8
   146d4:	strdeq	r4, [r1], -r8
   146d8:	strdeq	r4, [r1], -r8
   146dc:	strdeq	r4, [r1], -r8
   146e0:	strdeq	r4, [r1], -r8
   146e4:	strdeq	r4, [r1], -r8
   146e8:	andeq	r4, r1, r0, ror r8
   146ec:	andeq	r4, r1, r0, ror r8
   146f0:	andeq	r4, r1, r0, ror r8
   146f4:	andeq	r4, r1, r0, ror r8
   146f8:	andeq	r4, r1, r0, ror #19
   146fc:	andeq	r4, r1, r0, asr #22
   14700:	strdeq	r4, [r1], -r8
   14704:	strdeq	r4, [r1], -r8
   14708:	strdeq	r4, [r1], -r8
   1470c:	strdeq	r4, [r1], -r8
   14710:	strdeq	r4, [r1], -r8
   14714:	strdeq	r4, [r1], -r8
   14718:	strdeq	r4, [r1], -r8
   1471c:	strdeq	r4, [r1], -r8
   14720:	strdeq	r4, [r1], -r8
   14724:	strdeq	r4, [r1], -r8
   14728:	strdeq	r4, [r1], -r8
   1472c:	strdeq	r4, [r1], -r8
   14730:	strdeq	r4, [r1], -r8
   14734:	strdeq	r4, [r1], -r8
   14738:	strdeq	r4, [r1], -r8
   1473c:	strdeq	r4, [r1], -r8
   14740:	strdeq	r4, [r1], -r8
   14744:	strdeq	r4, [r1], -r8
   14748:	strdeq	r4, [r1], -r8
   1474c:	strdeq	r4, [r1], -r8
   14750:	strdeq	r4, [r1], -r8
   14754:	strdeq	r4, [r1], -r8
   14758:	strdeq	r4, [r1], -r8
   1475c:	strdeq	r4, [r1], -r8
   14760:	strdeq	r4, [r1], -r8
   14764:	strdeq	r4, [r1], -r8
   14768:	andeq	r4, r1, r0, ror r8
   1476c:	andeq	r4, r1, r4, lsr #17
   14770:	strdeq	r4, [r1], -r8
   14774:	andeq	r4, r1, r0, ror r8
   14778:	strdeq	r4, [r1], -r8
   1477c:	andeq	r4, r1, r0, ror r8
   14780:	strdeq	r4, [r1], -r8
   14784:	strdeq	r4, [r1], -r8
   14788:	strdeq	r4, [r1], -r8
   1478c:	strdeq	r4, [r1], -r8
   14790:	strdeq	r4, [r1], -r8
   14794:	strdeq	r4, [r1], -r8
   14798:	strdeq	r4, [r1], -r8
   1479c:	strdeq	r4, [r1], -r8
   147a0:	strdeq	r4, [r1], -r8
   147a4:	strdeq	r4, [r1], -r8
   147a8:	strdeq	r4, [r1], -r8
   147ac:	strdeq	r4, [r1], -r8
   147b0:	strdeq	r4, [r1], -r8
   147b4:	strdeq	r4, [r1], -r8
   147b8:	strdeq	r4, [r1], -r8
   147bc:	strdeq	r4, [r1], -r8
   147c0:	strdeq	r4, [r1], -r8
   147c4:	strdeq	r4, [r1], -r8
   147c8:	strdeq	r4, [r1], -r8
   147cc:	strdeq	r4, [r1], -r8
   147d0:	strdeq	r4, [r1], -r8
   147d4:	strdeq	r4, [r1], -r8
   147d8:	strdeq	r4, [r1], -r8
   147dc:	strdeq	r4, [r1], -r8
   147e0:	strdeq	r4, [r1], -r8
   147e4:	strdeq	r4, [r1], -r8
   147e8:	andeq	r4, r1, r8, lsr r8
   147ec:	andeq	r4, r1, r0, ror r8
   147f0:	andeq	r4, r1, r8, lsr r8
   147f4:	andeq	r4, r1, r0, ror #16
   147f8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   147fc:	tst	r0, #1
   14800:	bne	14ab8 <__mempcpy_chk@plt+0x3aa8>
   14804:	ldr	r1, [fp, #16]
   14808:	ubfx	r0, r6, #5, #3
   1480c:	mov	r2, #1
   14810:	ldr	r0, [r1, r0, lsl #2]
   14814:	and	r1, r6, #31
   14818:	tst	r0, r2, lsl r1
   1481c:	beq	14ab8 <__mempcpy_chk@plt+0x3aa8>
   14820:	mov	r0, r6
   14824:	mov	r1, r8
   14828:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1482c:	tst	r2, #1
   14830:	beq	14ad8 <__mempcpy_chk@plt+0x3ac8>
   14834:	b	15234 <__mempcpy_chk@plt+0x4224>
   14838:	cmp	r7, #1
   1483c:	beq	14860 <__mempcpy_chk@plt+0x3850>
   14840:	mov	r8, #0
   14844:	cmn	r7, #1
   14848:	bne	14aa4 <__mempcpy_chk@plt+0x3a94>
   1484c:	ldrb	r0, [lr, #1]
   14850:	cmp	r0, #0
   14854:	beq	14860 <__mempcpy_chk@plt+0x3850>
   14858:	mvn	r7, #0
   1485c:	b	14aa4 <__mempcpy_chk@plt+0x3a94>
   14860:	mov	r8, #0
   14864:	cmp	sl, #0
   14868:	bne	14aa4 <__mempcpy_chk@plt+0x3a94>
   1486c:	mov	r1, #1
   14870:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14874:	cmp	r0, #2
   14878:	bne	14890 <__mempcpy_chk@plt+0x3880>
   1487c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14880:	mov	r8, r1
   14884:	tst	r0, #1
   14888:	beq	147f8 <__mempcpy_chk@plt+0x37e8>
   1488c:	b	15234 <__mempcpy_chk@plt+0x4224>
   14890:	mov	r8, r1
   14894:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14898:	tst	r0, #1
   1489c:	beq	14804 <__mempcpy_chk@plt+0x37f4>
   148a0:	b	14ab8 <__mempcpy_chk@plt+0x3aa8>
   148a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   148a8:	cmp	r0, #2
   148ac:	bne	14b6c <__mempcpy_chk@plt+0x3b5c>
   148b0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   148b4:	tst	r0, #1
   148b8:	bne	15234 <__mempcpy_chk@plt+0x4224>
   148bc:	mov	r0, #0
   148c0:	str	r0, [fp, #-56]	; 0xffffffc8
   148c4:	b	14b84 <__mempcpy_chk@plt+0x3b74>
   148c8:	mov	r0, #102	; 0x66
   148cc:	b	14bf4 <__mempcpy_chk@plt+0x3be4>
   148d0:	mov	r2, #116	; 0x74
   148d4:	b	148e4 <__mempcpy_chk@plt+0x38d4>
   148d8:	mov	r0, #98	; 0x62
   148dc:	b	14bf4 <__mempcpy_chk@plt+0x3be4>
   148e0:	mov	r2, #114	; 0x72
   148e4:	ldr	r0, [sp, #64]	; 0x40
   148e8:	tst	r0, #1
   148ec:	mov	r0, r2
   148f0:	bne	14bf4 <__mempcpy_chk@plt+0x3be4>
   148f4:	b	15234 <__mempcpy_chk@plt+0x4224>
   148f8:	ldr	r0, [sp, #88]	; 0x58
   148fc:	tst	r0, #1
   14900:	beq	14c14 <__mempcpy_chk@plt+0x3c04>
   14904:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14908:	tst	r0, #1
   1490c:	bne	15370 <__mempcpy_chk@plt+0x4360>
   14910:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14914:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14918:	subs	r0, r0, #2
   1491c:	movwne	r0, #1
   14920:	orr	r0, r0, r1
   14924:	tst	r0, #1
   14928:	bne	14964 <__mempcpy_chk@plt+0x3954>
   1492c:	cmp	r9, r5
   14930:	movcc	r0, #39	; 0x27
   14934:	strbcc	r0, [ip, r9]
   14938:	add	r0, r9, #1
   1493c:	cmp	r0, r5
   14940:	movcc	r1, #36	; 0x24
   14944:	strbcc	r1, [ip, r0]
   14948:	add	r0, r9, #2
   1494c:	add	r9, r9, #3
   14950:	cmp	r0, r5
   14954:	movcc	r1, #39	; 0x27
   14958:	strbcc	r1, [ip, r0]
   1495c:	mov	r0, #1
   14960:	str	r0, [fp, #-52]	; 0xffffffcc
   14964:	mov	r1, #1
   14968:	cmp	r9, r5
   1496c:	mov	r8, #0
   14970:	mov	r6, #48	; 0x30
   14974:	str	r1, [fp, #-56]	; 0xffffffc8
   14978:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1497c:	movcc	r0, #92	; 0x5c
   14980:	strbcc	r0, [ip, r9]
   14984:	add	r0, r9, #1
   14988:	cmp	r1, #2
   1498c:	beq	14de0 <__mempcpy_chk@plt+0x3dd0>
   14990:	add	r1, sl, #1
   14994:	cmp	r1, r7
   14998:	bcs	14de0 <__mempcpy_chk@plt+0x3dd0>
   1499c:	ldrb	r1, [lr, r1]
   149a0:	sub	r1, r1, #48	; 0x30
   149a4:	uxtb	r1, r1
   149a8:	cmp	r1, #9
   149ac:	bhi	14de0 <__mempcpy_chk@plt+0x3dd0>
   149b0:	cmp	r0, r5
   149b4:	movcc	r1, #48	; 0x30
   149b8:	strbcc	r1, [ip, r0]
   149bc:	add	r0, r9, #2
   149c0:	add	r9, r9, #3
   149c4:	cmp	r0, r5
   149c8:	movcc	r1, #48	; 0x30
   149cc:	strbcc	r1, [ip, r0]
   149d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   149d4:	tst	r0, #1
   149d8:	beq	14804 <__mempcpy_chk@plt+0x37f4>
   149dc:	b	14ab8 <__mempcpy_chk@plt+0x3aa8>
   149e0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   149e4:	mov	r6, #63	; 0x3f
   149e8:	cmp	r0, #5
   149ec:	beq	14df4 <__mempcpy_chk@plt+0x3de4>
   149f0:	mov	r1, #0
   149f4:	cmp	r0, #2
   149f8:	str	r1, [fp, #-56]	; 0xffffffc8
   149fc:	bne	14ebc <__mempcpy_chk@plt+0x3eac>
   14a00:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14a04:	mov	r8, #0
   14a08:	tst	r0, #1
   14a0c:	beq	147f8 <__mempcpy_chk@plt+0x37e8>
   14a10:	b	15234 <__mempcpy_chk@plt+0x4224>
   14a14:	mov	r0, #118	; 0x76
   14a18:	b	14bf4 <__mempcpy_chk@plt+0x3be4>
   14a1c:	mov	r0, #1
   14a20:	mov	r6, #39	; 0x27
   14a24:	str	r0, [sp, #60]	; 0x3c
   14a28:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14a2c:	cmp	r0, #2
   14a30:	bne	14c34 <__mempcpy_chk@plt+0x3c24>
   14a34:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14a38:	tst	r0, #1
   14a3c:	bne	15234 <__mempcpy_chk@plt+0x4224>
   14a40:	ldr	r2, [sp, #56]	; 0x38
   14a44:	clz	r1, r5
   14a48:	mov	r8, #1
   14a4c:	lsr	r1, r1, #5
   14a50:	cmp	r2, #0
   14a54:	mov	r0, r2
   14a58:	movwne	r0, #1
   14a5c:	orrs	r0, r0, r1
   14a60:	moveq	r2, r5
   14a64:	moveq	r5, r0
   14a68:	cmp	r9, r5
   14a6c:	str	r2, [sp, #56]	; 0x38
   14a70:	movcc	r0, #39	; 0x27
   14a74:	strbcc	r0, [ip, r9]
   14a78:	add	r0, r9, #1
   14a7c:	cmp	r0, r5
   14a80:	movcc	r1, #92	; 0x5c
   14a84:	strbcc	r1, [ip, r0]
   14a88:	add	r0, r9, #2
   14a8c:	add	r9, r9, #3
   14a90:	cmp	r0, r5
   14a94:	movcc	r1, #39	; 0x27
   14a98:	strbcc	r1, [ip, r0]
   14a9c:	mov	r0, #0
   14aa0:	str	r0, [fp, #-52]	; 0xffffffcc
   14aa4:	mov	r0, #0
   14aa8:	str	r0, [fp, #-56]	; 0xffffffc8
   14aac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14ab0:	tst	r0, #1
   14ab4:	beq	14804 <__mempcpy_chk@plt+0x37f4>
   14ab8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14abc:	mov	r1, r8
   14ac0:	cmp	r0, #0
   14ac4:	mov	r0, r6
   14ac8:	beq	14b8c <__mempcpy_chk@plt+0x3b7c>
   14acc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14ad0:	tst	r2, #1
   14ad4:	bne	15234 <__mempcpy_chk@plt+0x4224>
   14ad8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14adc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14ae0:	subs	r2, r2, #2
   14ae4:	movwne	r2, #1
   14ae8:	orr	r2, r2, r3
   14aec:	tst	r2, #1
   14af0:	bne	14b2c <__mempcpy_chk@plt+0x3b1c>
   14af4:	cmp	r9, r5
   14af8:	movcc	r2, #39	; 0x27
   14afc:	strbcc	r2, [ip, r9]
   14b00:	add	r2, r9, #1
   14b04:	cmp	r2, r5
   14b08:	movcc	r3, #36	; 0x24
   14b0c:	strbcc	r3, [ip, r2]
   14b10:	add	r2, r9, #2
   14b14:	add	r9, r9, #3
   14b18:	cmp	r2, r5
   14b1c:	movcc	r3, #39	; 0x27
   14b20:	strbcc	r3, [ip, r2]
   14b24:	mov	r2, #1
   14b28:	str	r2, [fp, #-52]	; 0xffffffcc
   14b2c:	cmp	r9, r5
   14b30:	movcc	r2, #92	; 0x5c
   14b34:	strbcc	r2, [ip, r9]
   14b38:	add	r9, r9, #1
   14b3c:	b	14bd4 <__mempcpy_chk@plt+0x3bc4>
   14b40:	ldr	r0, [sp, #40]	; 0x28
   14b44:	cmp	r0, #1
   14b48:	bne	14c48 <__mempcpy_chk@plt+0x3c38>
   14b4c:	bl	10f08 <__ctype_b_loc@plt>
   14b50:	ldr	r0, [r0]
   14b54:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14b58:	mov	r1, #1
   14b5c:	add	r0, r0, r6, lsl #1
   14b60:	ldrb	r0, [r0, #1]
   14b64:	ubfx	r8, r0, #6, #1
   14b68:	b	14fa0 <__mempcpy_chk@plt+0x3f90>
   14b6c:	ldr	r1, [sp, #48]	; 0x30
   14b70:	mov	r0, #0
   14b74:	str	r0, [fp, #-56]	; 0xffffffc8
   14b78:	mov	r0, #92	; 0x5c
   14b7c:	cmp	r1, #0
   14b80:	beq	14bf4 <__mempcpy_chk@plt+0x3be4>
   14b84:	mov	r6, #92	; 0x5c
   14b88:	mov	r8, #0
   14b8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14b90:	cmp	r0, #0
   14b94:	bne	14bcc <__mempcpy_chk@plt+0x3bbc>
   14b98:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14b9c:	tst	r0, #1
   14ba0:	beq	14bcc <__mempcpy_chk@plt+0x3bbc>
   14ba4:	cmp	r9, r5
   14ba8:	movcc	r0, #39	; 0x27
   14bac:	strbcc	r0, [ip, r9]
   14bb0:	add	r0, r9, #1
   14bb4:	add	r9, r9, #2
   14bb8:	cmp	r0, r5
   14bbc:	movcc	r1, #39	; 0x27
   14bc0:	strbcc	r1, [ip, r0]
   14bc4:	mov	r0, #0
   14bc8:	str	r0, [fp, #-52]	; 0xffffffcc
   14bcc:	mov	r1, r8
   14bd0:	mov	r0, r6
   14bd4:	cmp	r9, r5
   14bd8:	and	r4, r4, r1
   14bdc:	strbcc	r0, [ip, r9]
   14be0:	add	r9, r9, #1
   14be4:	add	sl, sl, #1
   14be8:	cmn	r7, #1
   14bec:	bne	144e4 <__mempcpy_chk@plt+0x34d4>
   14bf0:	b	144f0 <__mempcpy_chk@plt+0x34e0>
   14bf4:	mov	r1, #0
   14bf8:	mov	r8, #0
   14bfc:	str	r1, [fp, #-56]	; 0xffffffc8
   14c00:	ldr	r1, [sp, #88]	; 0x58
   14c04:	tst	r1, #1
   14c08:	mov	r1, #0
   14c0c:	beq	147f8 <__mempcpy_chk@plt+0x37e8>
   14c10:	b	14acc <__mempcpy_chk@plt+0x3abc>
   14c14:	ldr	r0, [sp, #36]	; 0x24
   14c18:	mov	r6, #0
   14c1c:	mov	r8, #0
   14c20:	cmp	r0, #0
   14c24:	mov	r0, #0
   14c28:	str	r0, [fp, #-56]	; 0xffffffc8
   14c2c:	bne	14be4 <__mempcpy_chk@plt+0x3bd4>
   14c30:	b	147f8 <__mempcpy_chk@plt+0x37e8>
   14c34:	mov	r8, #1
   14c38:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14c3c:	tst	r0, #1
   14c40:	beq	14804 <__mempcpy_chk@plt+0x37f4>
   14c44:	b	14ab8 <__mempcpy_chk@plt+0x3aa8>
   14c48:	mov	r0, #0
   14c4c:	cmn	r7, #1
   14c50:	str	r0, [fp, #-36]	; 0xffffffdc
   14c54:	str	r0, [fp, #-40]	; 0xffffffd8
   14c58:	bne	14c6c <__mempcpy_chk@plt+0x3c5c>
   14c5c:	mov	r0, lr
   14c60:	bl	10f38 <strlen@plt>
   14c64:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14c68:	mov	r7, r0
   14c6c:	ldr	r0, [sp, #44]	; 0x2c
   14c70:	str	r4, [sp, #84]	; 0x54
   14c74:	str	r5, [sp, #28]
   14c78:	cmp	r0, #0
   14c7c:	beq	14ed0 <__mempcpy_chk@plt+0x3ec0>
   14c80:	ldr	r0, [sp, #80]	; 0x50
   14c84:	mov	r8, #1
   14c88:	mov	r5, #0
   14c8c:	add	r0, r0, sl
   14c90:	str	r0, [sp, #24]
   14c94:	sub	r0, fp, #40	; 0x28
   14c98:	mov	r3, r0
   14c9c:	b	14cd8 <__mempcpy_chk@plt+0x3cc8>
   14ca0:	ldr	r5, [sp, #68]	; 0x44
   14ca4:	add	r5, r0, r5
   14ca8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cac:	bl	10e6c <iswprint@plt>
   14cb0:	cmp	r0, #0
   14cb4:	sub	r4, fp, #40	; 0x28
   14cb8:	movwne	r0, #1
   14cbc:	and	r8, r8, r0
   14cc0:	mov	r0, r4
   14cc4:	bl	10e30 <mbsinit@plt>
   14cc8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14ccc:	mov	r3, r4
   14cd0:	cmp	r0, #0
   14cd4:	bne	14f94 <__mempcpy_chk@plt+0x3f84>
   14cd8:	str	r5, [sp, #68]	; 0x44
   14cdc:	add	r5, r5, sl
   14ce0:	sub	r0, fp, #44	; 0x2c
   14ce4:	add	r1, lr, r5
   14ce8:	sub	r2, r7, r5
   14cec:	bl	16eb8 <__mempcpy_chk@plt+0x5ea8>
   14cf0:	cmn	r0, #2
   14cf4:	beq	14f54 <__mempcpy_chk@plt+0x3f44>
   14cf8:	ldr	ip, [fp, #-84]	; 0xffffffac
   14cfc:	cmn	r0, #1
   14d00:	beq	14f48 <__mempcpy_chk@plt+0x3f38>
   14d04:	cmp	r0, #0
   14d08:	beq	14f4c <__mempcpy_chk@plt+0x3f3c>
   14d0c:	cmp	r0, #2
   14d10:	bcc	14ca0 <__mempcpy_chk@plt+0x3c90>
   14d14:	ldr	r1, [sp, #68]	; 0x44
   14d18:	ldr	r2, [sp, #24]
   14d1c:	add	r1, r2, r1
   14d20:	sub	r2, r0, #1
   14d24:	ldrb	r3, [r1]
   14d28:	sub	r3, r3, #91	; 0x5b
   14d2c:	cmp	r3, #33	; 0x21
   14d30:	bls	14d50 <__mempcpy_chk@plt+0x3d40>
   14d34:	add	r1, r1, #1
   14d38:	subs	r2, r2, #1
   14d3c:	beq	14ca0 <__mempcpy_chk@plt+0x3c90>
   14d40:	ldrb	r3, [r1]
   14d44:	sub	r3, r3, #91	; 0x5b
   14d48:	cmp	r3, #33	; 0x21
   14d4c:	bhi	14d34 <__mempcpy_chk@plt+0x3d24>
   14d50:	add	r5, pc, #0
   14d54:	ldr	pc, [r5, r3, lsl #2]
   14d58:	andeq	r5, r1, ip, ror #4
   14d5c:	andeq	r5, r1, ip, ror #4
   14d60:	andeq	r4, r1, r4, lsr sp
   14d64:	andeq	r5, r1, ip, ror #4
   14d68:	andeq	r4, r1, r4, lsr sp
   14d6c:	andeq	r5, r1, ip, ror #4
   14d70:	andeq	r4, r1, r4, lsr sp
   14d74:	andeq	r4, r1, r4, lsr sp
   14d78:	andeq	r4, r1, r4, lsr sp
   14d7c:	andeq	r4, r1, r4, lsr sp
   14d80:	andeq	r4, r1, r4, lsr sp
   14d84:	andeq	r4, r1, r4, lsr sp
   14d88:	andeq	r4, r1, r4, lsr sp
   14d8c:	andeq	r4, r1, r4, lsr sp
   14d90:	andeq	r4, r1, r4, lsr sp
   14d94:	andeq	r4, r1, r4, lsr sp
   14d98:	andeq	r4, r1, r4, lsr sp
   14d9c:	andeq	r4, r1, r4, lsr sp
   14da0:	andeq	r4, r1, r4, lsr sp
   14da4:	andeq	r4, r1, r4, lsr sp
   14da8:	andeq	r4, r1, r4, lsr sp
   14dac:	andeq	r4, r1, r4, lsr sp
   14db0:	andeq	r4, r1, r4, lsr sp
   14db4:	andeq	r4, r1, r4, lsr sp
   14db8:	andeq	r4, r1, r4, lsr sp
   14dbc:	andeq	r4, r1, r4, lsr sp
   14dc0:	andeq	r4, r1, r4, lsr sp
   14dc4:	andeq	r4, r1, r4, lsr sp
   14dc8:	andeq	r4, r1, r4, lsr sp
   14dcc:	andeq	r4, r1, r4, lsr sp
   14dd0:	andeq	r4, r1, r4, lsr sp
   14dd4:	andeq	r4, r1, r4, lsr sp
   14dd8:	andeq	r4, r1, r4, lsr sp
   14ddc:	andeq	r5, r1, ip, ror #4
   14de0:	mov	r9, r0
   14de4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14de8:	tst	r0, #1
   14dec:	beq	14804 <__mempcpy_chk@plt+0x37f4>
   14df0:	b	14ab8 <__mempcpy_chk@plt+0x3aa8>
   14df4:	mov	r0, #0
   14df8:	str	r0, [fp, #-56]	; 0xffffffc8
   14dfc:	ldr	r0, [sp, #32]
   14e00:	cmp	r0, #0
   14e04:	beq	14ebc <__mempcpy_chk@plt+0x3eac>
   14e08:	add	r0, sl, #2
   14e0c:	mov	r1, r7
   14e10:	cmp	r0, r7
   14e14:	bcs	14ebc <__mempcpy_chk@plt+0x3eac>
   14e18:	add	r1, sl, lr
   14e1c:	ldrb	r1, [r1, #1]
   14e20:	cmp	r1, #63	; 0x3f
   14e24:	bne	14ebc <__mempcpy_chk@plt+0x3eac>
   14e28:	ldrb	r8, [lr, r0]
   14e2c:	sub	r2, r8, #33	; 0x21
   14e30:	cmp	r2, #29
   14e34:	bhi	14ebc <__mempcpy_chk@plt+0x3eac>
   14e38:	mov	r1, r4
   14e3c:	movw	r4, #20929	; 0x51c1
   14e40:	mov	r3, #1
   14e44:	movt	r4, #14336	; 0x3800
   14e48:	tst	r4, r3, lsl r2
   14e4c:	beq	15178 <__mempcpy_chk@plt+0x4168>
   14e50:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14e54:	tst	r2, #1
   14e58:	bne	15234 <__mempcpy_chk@plt+0x4224>
   14e5c:	cmp	r9, r5
   14e60:	mov	r6, r8
   14e64:	mov	r4, r1
   14e68:	mov	sl, r0
   14e6c:	mov	r8, #0
   14e70:	movcc	r2, #63	; 0x3f
   14e74:	strbcc	r2, [ip, r9]
   14e78:	add	r2, r9, #1
   14e7c:	cmp	r2, r5
   14e80:	movcc	r3, #34	; 0x22
   14e84:	strbcc	r3, [ip, r2]
   14e88:	add	r2, r9, #2
   14e8c:	cmp	r2, r5
   14e90:	movcc	r3, #34	; 0x22
   14e94:	strbcc	r3, [ip, r2]
   14e98:	add	r2, r9, #3
   14e9c:	add	r9, r9, #4
   14ea0:	cmp	r2, r5
   14ea4:	movcc	r3, #63	; 0x3f
   14ea8:	strbcc	r3, [ip, r2]
   14eac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14eb0:	tst	r0, #1
   14eb4:	beq	14804 <__mempcpy_chk@plt+0x37f4>
   14eb8:	b	14ab8 <__mempcpy_chk@plt+0x3aa8>
   14ebc:	mov	r8, #0
   14ec0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14ec4:	tst	r0, #1
   14ec8:	beq	14804 <__mempcpy_chk@plt+0x37f4>
   14ecc:	b	14ab8 <__mempcpy_chk@plt+0x3aa8>
   14ed0:	mov	r8, #1
   14ed4:	mov	r5, #0
   14ed8:	sub	r4, fp, #40	; 0x28
   14edc:	str	r5, [sp, #68]	; 0x44
   14ee0:	add	r5, r5, sl
   14ee4:	sub	r0, fp, #44	; 0x2c
   14ee8:	mov	r3, r4
   14eec:	add	r1, lr, r5
   14ef0:	sub	r2, r7, r5
   14ef4:	bl	16eb8 <__mempcpy_chk@plt+0x5ea8>
   14ef8:	cmn	r0, #2
   14efc:	beq	14f54 <__mempcpy_chk@plt+0x3f44>
   14f00:	cmn	r0, #1
   14f04:	beq	14f48 <__mempcpy_chk@plt+0x3f38>
   14f08:	ldr	r5, [sp, #68]	; 0x44
   14f0c:	cmp	r0, #0
   14f10:	beq	14f90 <__mempcpy_chk@plt+0x3f80>
   14f14:	add	r5, r0, r5
   14f18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f1c:	bl	10e6c <iswprint@plt>
   14f20:	cmp	r0, #0
   14f24:	sub	r4, fp, #40	; 0x28
   14f28:	movwne	r0, #1
   14f2c:	and	r8, r8, r0
   14f30:	mov	r0, r4
   14f34:	bl	10e30 <mbsinit@plt>
   14f38:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14f3c:	cmp	r0, #0
   14f40:	beq	14edc <__mempcpy_chk@plt+0x3ecc>
   14f44:	b	14f94 <__mempcpy_chk@plt+0x3f84>
   14f48:	mov	r8, #0
   14f4c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14f50:	b	14f88 <__mempcpy_chk@plt+0x3f78>
   14f54:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14f58:	mov	r8, #0
   14f5c:	cmp	r5, r7
   14f60:	bcs	14f88 <__mempcpy_chk@plt+0x3f78>
   14f64:	ldrb	r0, [lr, r5]
   14f68:	cmp	r0, #0
   14f6c:	beq	14f88 <__mempcpy_chk@plt+0x3f78>
   14f70:	ldr	r0, [sp, #68]	; 0x44
   14f74:	add	r0, r0, #1
   14f78:	add	r5, r0, sl
   14f7c:	str	r0, [sp, #68]	; 0x44
   14f80:	cmp	r5, r7
   14f84:	bcc	14f64 <__mempcpy_chk@plt+0x3f54>
   14f88:	ldr	r5, [sp, #68]	; 0x44
   14f8c:	b	14f94 <__mempcpy_chk@plt+0x3f84>
   14f90:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14f94:	mov	r1, r5
   14f98:	ldr	r5, [sp, #28]
   14f9c:	ldr	r4, [sp, #84]	; 0x54
   14fa0:	ldr	r0, [sp, #52]	; 0x34
   14fa4:	ldr	ip, [fp, #-84]	; 0xffffffac
   14fa8:	cmp	r1, #1
   14fac:	orr	r2, r8, r0
   14fb0:	mov	r0, r1
   14fb4:	bhi	14fc0 <__mempcpy_chk@plt+0x3fb0>
   14fb8:	tst	r2, #1
   14fbc:	bne	147f8 <__mempcpy_chk@plt+0x37e8>
   14fc0:	add	r0, r0, sl
   14fc4:	str	r2, [sp, #84]	; 0x54
   14fc8:	str	r0, [fp, #-56]	; 0xffffffc8
   14fcc:	mov	r0, #0
   14fd0:	tst	r2, #1
   14fd4:	bne	150b4 <__mempcpy_chk@plt+0x40a4>
   14fd8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14fdc:	tst	r1, #1
   14fe0:	bne	15234 <__mempcpy_chk@plt+0x4224>
   14fe4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14fe8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14fec:	subs	r2, r1, #2
   14ff0:	movwne	r2, #1
   14ff4:	orr	r2, r2, r0
   14ff8:	tst	r2, #1
   14ffc:	bne	15038 <__mempcpy_chk@plt+0x4028>
   15000:	cmp	r9, r5
   15004:	add	r2, r9, #1
   15008:	mov	r0, #1
   1500c:	movcc	r1, #39	; 0x27
   15010:	str	r0, [fp, #-52]	; 0xffffffcc
   15014:	strbcc	r1, [ip, r9]
   15018:	cmp	r2, r5
   1501c:	movcc	r1, #36	; 0x24
   15020:	strbcc	r1, [ip, r2]
   15024:	add	r2, r9, #2
   15028:	add	r9, r9, #3
   1502c:	cmp	r2, r5
   15030:	movcc	r1, #39	; 0x27
   15034:	strbcc	r1, [ip, r2]
   15038:	cmp	r9, r5
   1503c:	add	r2, r9, #1
   15040:	movcc	r1, #92	; 0x5c
   15044:	strbcc	r1, [ip, r9]
   15048:	cmp	r2, r5
   1504c:	bcs	15060 <__mempcpy_chk@plt+0x4050>
   15050:	uxtb	r3, r6
   15054:	mov	r1, #48	; 0x30
   15058:	orr	r3, r1, r3, lsr #6
   1505c:	strb	r3, [ip, r2]
   15060:	add	r2, r9, #2
   15064:	add	r9, r9, #3
   15068:	cmp	r2, r5
   1506c:	lsrcc	r3, r6, #3
   15070:	movcc	r1, #6
   15074:	bficc	r3, r1, #3, #29
   15078:	mov	r1, #6
   1507c:	bfi	r6, r1, #3, #29
   15080:	strbcc	r3, [ip, r2]
   15084:	mov	r2, #1
   15088:	b	150e8 <__mempcpy_chk@plt+0x40d8>
   1508c:	ldr	r1, [sp, #80]	; 0x50
   15090:	cmp	r9, r2
   15094:	mov	r5, r2
   15098:	ldr	r2, [sp, #84]	; 0x54
   1509c:	strbcc	r6, [ip, r9]
   150a0:	add	r9, r9, #1
   150a4:	ldrb	r6, [r1, sl]
   150a8:	mov	sl, r3
   150ac:	tst	r2, #1
   150b0:	beq	14fd8 <__mempcpy_chk@plt+0x3fc8>
   150b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   150b8:	tst	r1, #1
   150bc:	beq	150dc <__mempcpy_chk@plt+0x40cc>
   150c0:	cmp	r9, r5
   150c4:	mov	r2, r0
   150c8:	movcc	r1, #92	; 0x5c
   150cc:	strbcc	r1, [ip, r9]
   150d0:	add	r9, r9, #1
   150d4:	mov	r1, #0
   150d8:	b	150e4 <__mempcpy_chk@plt+0x40d4>
   150dc:	mov	r1, #0
   150e0:	mov	r2, r0
   150e4:	str	r1, [fp, #-48]	; 0xffffffd0
   150e8:	mov	r0, r2
   150ec:	and	r1, r2, #1
   150f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   150f4:	add	r3, sl, #1
   150f8:	cmp	r2, r3
   150fc:	bls	1515c <__mempcpy_chk@plt+0x414c>
   15100:	mov	r2, r5
   15104:	ldr	r5, [fp, #-52]	; 0xffffffcc
   15108:	cmp	r1, #0
   1510c:	movwne	r1, #1
   15110:	mvn	r5, r5
   15114:	orr	r5, r5, r1
   15118:	tst	r5, #1
   1511c:	bne	1508c <__mempcpy_chk@plt+0x407c>
   15120:	cmp	r9, r2
   15124:	movcc	r5, r4
   15128:	movcc	r4, #39	; 0x27
   1512c:	strbcc	r4, [ip, r9]
   15130:	movcc	r4, r5
   15134:	add	r5, r9, #1
   15138:	add	r9, r9, #2
   1513c:	cmp	r5, r2
   15140:	movcc	r1, r4
   15144:	movcc	r4, #39	; 0x27
   15148:	strbcc	r4, [ip, r5]
   1514c:	movcc	r4, r1
   15150:	mov	r1, #0
   15154:	str	r1, [fp, #-52]	; 0xffffffcc
   15158:	b	1508c <__mempcpy_chk@plt+0x407c>
   1515c:	cmp	r1, #0
   15160:	movwne	r1, #1
   15164:	str	r1, [fp, #-56]	; 0xffffffc8
   15168:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1516c:	cmp	r0, #0
   15170:	beq	14b98 <__mempcpy_chk@plt+0x3b88>
   15174:	b	14bcc <__mempcpy_chk@plt+0x3bbc>
   15178:	mov	r8, #0
   1517c:	mov	r4, r1
   15180:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15184:	tst	r0, #1
   15188:	beq	14804 <__mempcpy_chk@plt+0x37f4>
   1518c:	b	14ab8 <__mempcpy_chk@plt+0x3aa8>
   15190:	mov	r7, sl
   15194:	b	1519c <__mempcpy_chk@plt+0x418c>
   15198:	mvn	r7, #0
   1519c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   151a0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   151a4:	ldr	r2, [sp, #88]	; 0x58
   151a8:	eor	r0, r1, #2
   151ac:	orr	r0, r0, r9
   151b0:	clz	r0, r0
   151b4:	lsr	r0, r0, #5
   151b8:	tst	r3, r0
   151bc:	bne	15234 <__mempcpy_chk@plt+0x4224>
   151c0:	subs	r0, r1, #2
   151c4:	movwne	r0, #1
   151c8:	orr	r0, r3, r0
   151cc:	tst	r0, #1
   151d0:	ldreq	r0, [sp, #60]	; 0x3c
   151d4:	eoreq	r0, r0, #1
   151d8:	tsteq	r0, #1
   151dc:	bne	15310 <__mempcpy_chk@plt+0x4300>
   151e0:	tst	r4, #1
   151e4:	bne	152d4 <__mempcpy_chk@plt+0x42c4>
   151e8:	ldr	r6, [sp, #56]	; 0x38
   151ec:	mov	r8, #0
   151f0:	cmp	r6, #0
   151f4:	beq	1530c <__mempcpy_chk@plt+0x42fc>
   151f8:	mov	r1, #0
   151fc:	mov	r4, #2
   15200:	cmp	r5, #0
   15204:	mov	r0, r2
   15208:	mov	r3, #0
   1520c:	str	r1, [sp, #84]	; 0x54
   15210:	beq	14058 <__mempcpy_chk@plt+0x3048>
   15214:	b	15310 <__mempcpy_chk@plt+0x4300>
   15218:	movw	r0, #31320	; 0x7a58
   1521c:	movt	r0, #1
   15220:	str	r0, [sp, #76]	; 0x4c
   15224:	mov	r9, #0
   15228:	tst	r8, #1
   1522c:	beq	142f0 <__mempcpy_chk@plt+0x32e0>
   15230:	b	14430 <__mempcpy_chk@plt+0x3420>
   15234:	ldr	r1, [sp, #88]	; 0x58
   15238:	mov	r0, #2
   1523c:	tst	r1, #1
   15240:	movwne	r0, #4
   15244:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15248:	ldr	r1, [fp, #12]
   1524c:	cmp	r2, #2
   15250:	moveq	r2, r0
   15254:	b	1528c <__mempcpy_chk@plt+0x427c>
   15258:	ldr	ip, [fp, #-84]	; 0xffffffac
   1525c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   15260:	ldr	r1, [fp, #12]
   15264:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15268:	b	1528c <__mempcpy_chk@plt+0x427c>
   1526c:	ldr	r1, [sp, #88]	; 0x58
   15270:	ldr	lr, [fp, #-80]	; 0xffffffb0
   15274:	ldr	r5, [sp, #28]
   15278:	mov	r0, #2
   1527c:	tst	r1, #1
   15280:	ldr	r1, [fp, #12]
   15284:	movwne	r0, #4
   15288:	mov	r2, r0
   1528c:	mov	r0, #0
   15290:	bic	r1, r1, #2
   15294:	str	r2, [sp]
   15298:	mov	r2, lr
   1529c:	str	r0, [sp, #8]
   152a0:	ldr	r0, [sp, #72]	; 0x48
   152a4:	str	r1, [sp, #4]
   152a8:	mov	r1, r5
   152ac:	str	r0, [sp, #12]
   152b0:	ldr	r0, [sp, #76]	; 0x4c
   152b4:	str	r0, [sp, #16]
   152b8:	mov	r0, ip
   152bc:	mov	r3, r7
   152c0:	bl	13fcc <__mempcpy_chk@plt+0x2fbc>
   152c4:	mov	r9, r0
   152c8:	mov	r0, r9
   152cc:	sub	sp, fp, #28
   152d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152d4:	mov	r0, #5
   152d8:	ldr	r1, [sp, #56]	; 0x38
   152dc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   152e0:	str	r0, [sp]
   152e4:	ldr	r0, [fp, #12]
   152e8:	str	r0, [sp, #4]
   152ec:	ldr	r0, [fp, #16]
   152f0:	str	r0, [sp, #8]
   152f4:	ldr	r0, [sp, #72]	; 0x48
   152f8:	str	r0, [sp, #12]
   152fc:	ldr	r0, [sp, #76]	; 0x4c
   15300:	str	r0, [sp, #16]
   15304:	ldr	r0, [fp, #-84]	; 0xffffffac
   15308:	b	152bc <__mempcpy_chk@plt+0x42ac>
   1530c:	mov	r3, #0
   15310:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15314:	cmp	r1, #0
   15318:	beq	15354 <__mempcpy_chk@plt+0x4344>
   1531c:	ldr	r2, [fp, #-84]	; 0xffffffac
   15320:	tst	r3, #1
   15324:	bne	15358 <__mempcpy_chk@plt+0x4348>
   15328:	ldrb	r0, [r1]
   1532c:	cmp	r0, #0
   15330:	beq	15358 <__mempcpy_chk@plt+0x4348>
   15334:	add	r1, r1, #1
   15338:	cmp	r9, r5
   1533c:	strbcc	r0, [r2, r9]
   15340:	add	r9, r9, #1
   15344:	ldrb	r0, [r1], #1
   15348:	cmp	r0, #0
   1534c:	bne	15338 <__mempcpy_chk@plt+0x4328>
   15350:	b	15358 <__mempcpy_chk@plt+0x4348>
   15354:	ldr	r2, [fp, #-84]	; 0xffffffac
   15358:	cmp	r9, r5
   1535c:	movcc	r0, #0
   15360:	strbcc	r0, [r2, r9]
   15364:	mov	r0, r9
   15368:	sub	sp, fp, #28
   1536c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15370:	mov	r0, #4
   15374:	b	15244 <__mempcpy_chk@plt+0x4234>
   15378:	bl	10ff8 <abort@plt>
   1537c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15380:	add	fp, sp, #28
   15384:	sub	sp, sp, #28
   15388:	movw	r5, #33128	; 0x8168
   1538c:	cmp	r2, #0
   15390:	mov	r4, r1
   15394:	mov	r7, r0
   15398:	str	r0, [sp, #20]
   1539c:	movt	r5, #2
   153a0:	movne	r5, r2
   153a4:	bl	10f44 <__errno_location@plt>
   153a8:	mov	sl, r0
   153ac:	ldr	r2, [r5, #40]	; 0x28
   153b0:	ldr	r3, [r5, #44]	; 0x2c
   153b4:	ldm	r5, {r0, r1}
   153b8:	orr	r8, r1, #1
   153bc:	add	r9, r5, #8
   153c0:	mov	r1, #0
   153c4:	ldr	r6, [sl]
   153c8:	stm	sp, {r0, r8, r9}
   153cc:	mov	r0, #0
   153d0:	str	r2, [sp, #12]
   153d4:	str	r3, [sp, #16]
   153d8:	mov	r2, r7
   153dc:	mov	r3, r4
   153e0:	str	r6, [sp, #24]
   153e4:	mov	r6, r4
   153e8:	bl	13fcc <__mempcpy_chk@plt+0x2fbc>
   153ec:	add	r7, r0, #1
   153f0:	mov	r0, r7
   153f4:	bl	165f0 <__mempcpy_chk@plt+0x55e0>
   153f8:	mov	r4, r0
   153fc:	ldr	r0, [r5]
   15400:	ldr	r2, [r5, #44]	; 0x2c
   15404:	ldr	r1, [r5, #40]	; 0x28
   15408:	mov	r3, r6
   1540c:	stm	sp, {r0, r8, r9}
   15410:	str	r2, [sp, #16]
   15414:	ldr	r2, [sp, #20]
   15418:	str	r1, [sp, #12]
   1541c:	mov	r0, r4
   15420:	mov	r1, r7
   15424:	bl	13fcc <__mempcpy_chk@plt+0x2fbc>
   15428:	ldr	r0, [sp, #24]
   1542c:	str	r0, [sl]
   15430:	mov	r0, r4
   15434:	sub	sp, fp, #28
   15438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1543c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15440:	add	fp, sp, #28
   15444:	sub	sp, sp, #36	; 0x24
   15448:	movw	r8, #33128	; 0x8168
   1544c:	cmp	r3, #0
   15450:	mov	r4, r2
   15454:	str	r2, [sp, #24]
   15458:	mov	r5, r1
   1545c:	mov	r6, r0
   15460:	str	r0, [sp, #20]
   15464:	movt	r8, #2
   15468:	movne	r8, r3
   1546c:	bl	10f44 <__errno_location@plt>
   15470:	str	r0, [sp, #28]
   15474:	ldr	r1, [r8, #40]	; 0x28
   15478:	ldr	r2, [r8, #44]	; 0x2c
   1547c:	ldr	r7, [r0]
   15480:	cmp	r4, #0
   15484:	add	sl, r8, #8
   15488:	mov	r0, #0
   1548c:	ldm	r8, {r3, r9}
   15490:	orreq	r9, r9, #1
   15494:	stm	sp, {r3, r9, sl}
   15498:	str	r1, [sp, #12]
   1549c:	str	r2, [sp, #16]
   154a0:	mov	r1, #0
   154a4:	mov	r2, r6
   154a8:	mov	r3, r5
   154ac:	str	r7, [sp, #32]
   154b0:	mov	r7, r5
   154b4:	bl	13fcc <__mempcpy_chk@plt+0x2fbc>
   154b8:	add	r4, r0, #1
   154bc:	mov	r5, r0
   154c0:	mov	r0, r4
   154c4:	bl	165f0 <__mempcpy_chk@plt+0x55e0>
   154c8:	mov	r6, r0
   154cc:	ldr	r0, [r8]
   154d0:	ldr	r2, [r8, #44]	; 0x2c
   154d4:	ldr	r1, [r8, #40]	; 0x28
   154d8:	mov	r3, r7
   154dc:	stm	sp, {r0, r9, sl}
   154e0:	str	r2, [sp, #16]
   154e4:	ldr	r2, [sp, #20]
   154e8:	str	r1, [sp, #12]
   154ec:	mov	r0, r6
   154f0:	mov	r1, r4
   154f4:	bl	13fcc <__mempcpy_chk@plt+0x2fbc>
   154f8:	ldr	r0, [sp, #24]
   154fc:	ldr	r1, [sp, #32]
   15500:	ldr	r2, [sp, #28]
   15504:	cmp	r0, #0
   15508:	str	r1, [r2]
   1550c:	strne	r5, [r0]
   15510:	mov	r0, r6
   15514:	sub	sp, fp, #28
   15518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1551c:	push	{r4, r5, r6, r7, fp, lr}
   15520:	add	fp, sp, #16
   15524:	movw	r4, #33056	; 0x8120
   15528:	movt	r4, #2
   1552c:	ldrd	r6, [r4]
   15530:	cmp	r7, #2
   15534:	blt	15560 <__mempcpy_chk@plt+0x4550>
   15538:	add	r5, r6, #12
   1553c:	mov	r7, #0
   15540:	ldr	r0, [r5, r7, lsl #3]
   15544:	bl	12858 <__mempcpy_chk@plt+0x1848>
   15548:	ldr	r1, [r4, #4]
   1554c:	add	r2, r7, #2
   15550:	add	r0, r7, #1
   15554:	mov	r7, r0
   15558:	cmp	r2, r1
   1555c:	blt	15540 <__mempcpy_chk@plt+0x4530>
   15560:	ldr	r0, [r6, #4]
   15564:	movw	r5, #33176	; 0x8198
   15568:	movt	r5, #2
   1556c:	cmp	r0, r5
   15570:	beq	15584 <__mempcpy_chk@plt+0x4574>
   15574:	bl	12858 <__mempcpy_chk@plt+0x1848>
   15578:	mov	r0, #256	; 0x100
   1557c:	str	r0, [r4, #8]
   15580:	str	r5, [r4, #12]
   15584:	add	r5, r4, #8
   15588:	cmp	r6, r5
   1558c:	beq	1559c <__mempcpy_chk@plt+0x458c>
   15590:	mov	r0, r6
   15594:	bl	12858 <__mempcpy_chk@plt+0x1848>
   15598:	str	r5, [r4]
   1559c:	mov	r0, #1
   155a0:	str	r0, [r4, #4]
   155a4:	pop	{r4, r5, r6, r7, fp, pc}
   155a8:	movw	r3, #33128	; 0x8168
   155ac:	mvn	r2, #0
   155b0:	movt	r3, #2
   155b4:	b	155b8 <__mempcpy_chk@plt+0x45a8>
   155b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155bc:	add	fp, sp, #28
   155c0:	sub	sp, sp, #44	; 0x2c
   155c4:	mov	r7, r3
   155c8:	str	r2, [sp, #36]	; 0x24
   155cc:	str	r1, [sp, #32]
   155d0:	mov	r5, r0
   155d4:	bl	10f44 <__errno_location@plt>
   155d8:	cmp	r5, #0
   155dc:	bmi	15744 <__mempcpy_chk@plt+0x4734>
   155e0:	cmn	r5, #-2147483647	; 0x80000001
   155e4:	beq	15744 <__mempcpy_chk@plt+0x4734>
   155e8:	movw	r8, #33056	; 0x8120
   155ec:	mov	r4, r0
   155f0:	ldr	r0, [r0]
   155f4:	movt	r8, #2
   155f8:	str	r4, [sp, #28]
   155fc:	ldr	r1, [r8, #4]
   15600:	ldr	r6, [r8]
   15604:	str	r0, [sp, #24]
   15608:	cmp	r1, r5
   1560c:	ble	15618 <__mempcpy_chk@plt+0x4608>
   15610:	mov	sl, r6
   15614:	b	15680 <__mempcpy_chk@plt+0x4670>
   15618:	mov	r0, #8
   1561c:	add	r9, r8, #8
   15620:	str	r1, [fp, #-32]	; 0xffffffe0
   15624:	sub	r1, r5, r1
   15628:	mvn	r3, #-2147483648	; 0x80000000
   1562c:	str	r0, [sp]
   15630:	subs	r0, r6, r9
   15634:	add	r2, r1, #1
   15638:	sub	r1, fp, #32
   1563c:	movne	r0, r6
   15640:	bl	167f0 <__mempcpy_chk@plt+0x57e0>
   15644:	mov	sl, r0
   15648:	cmp	r6, r9
   1564c:	str	r0, [r8]
   15650:	bne	1565c <__mempcpy_chk@plt+0x464c>
   15654:	ldrd	r0, [r8, #8]
   15658:	stm	sl, {r0, r1}
   1565c:	ldr	r1, [r8, #4]
   15660:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15664:	add	r0, sl, r1, lsl #3
   15668:	sub	r1, r2, r1
   1566c:	lsl	r2, r1, #3
   15670:	mov	r1, #0
   15674:	bl	10f5c <memset@plt>
   15678:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1567c:	str	r0, [r8, #4]
   15680:	mov	r9, sl
   15684:	ldm	r7, {r0, r1}
   15688:	orr	r8, r1, #1
   1568c:	add	r1, r7, #8
   15690:	ldr	r2, [r7, #40]	; 0x28
   15694:	ldr	r3, [r7, #44]	; 0x2c
   15698:	ldr	r6, [r9, r5, lsl #3]!
   1569c:	str	r1, [sp, #20]
   156a0:	ldr	r4, [r9, #4]!
   156a4:	stm	sp, {r0, r8}
   156a8:	add	r0, sp, #8
   156ac:	stm	r0, {r1, r2, r3}
   156b0:	ldr	r2, [sp, #32]
   156b4:	ldr	r3, [sp, #36]	; 0x24
   156b8:	mov	r1, r6
   156bc:	mov	r0, r4
   156c0:	bl	13fcc <__mempcpy_chk@plt+0x2fbc>
   156c4:	cmp	r6, r0
   156c8:	bhi	1572c <__mempcpy_chk@plt+0x471c>
   156cc:	add	r6, r0, #1
   156d0:	movw	r0, #33176	; 0x8198
   156d4:	movt	r0, #2
   156d8:	str	r6, [sl, r5, lsl #3]
   156dc:	cmp	r4, r0
   156e0:	beq	156ec <__mempcpy_chk@plt+0x46dc>
   156e4:	mov	r0, r4
   156e8:	bl	12858 <__mempcpy_chk@plt+0x1848>
   156ec:	mov	r0, r6
   156f0:	bl	165f0 <__mempcpy_chk@plt+0x55e0>
   156f4:	str	r0, [r9]
   156f8:	mov	r4, r0
   156fc:	add	r3, sp, #8
   15700:	ldr	r0, [r7]
   15704:	ldr	r1, [r7, #40]	; 0x28
   15708:	ldr	r2, [r7, #44]	; 0x2c
   1570c:	stm	sp, {r0, r8}
   15710:	ldr	r0, [sp, #20]
   15714:	stm	r3, {r0, r1, r2}
   15718:	ldr	r2, [sp, #32]
   1571c:	ldr	r3, [sp, #36]	; 0x24
   15720:	mov	r0, r4
   15724:	mov	r1, r6
   15728:	bl	13fcc <__mempcpy_chk@plt+0x2fbc>
   1572c:	ldr	r1, [sp, #24]
   15730:	ldr	r0, [sp, #28]
   15734:	str	r1, [r0]
   15738:	mov	r0, r4
   1573c:	sub	sp, fp, #28
   15740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15744:	bl	10ff8 <abort@plt>
   15748:	movw	r3, #33128	; 0x8168
   1574c:	movt	r3, #2
   15750:	b	155b8 <__mempcpy_chk@plt+0x45a8>
   15754:	movw	r3, #33128	; 0x8168
   15758:	mov	r1, r0
   1575c:	mov	r0, #0
   15760:	mvn	r2, #0
   15764:	movt	r3, #2
   15768:	b	155b8 <__mempcpy_chk@plt+0x45a8>
   1576c:	movw	r3, #33128	; 0x8168
   15770:	mov	r2, r1
   15774:	mov	r1, r0
   15778:	mov	r0, #0
   1577c:	movt	r3, #2
   15780:	b	155b8 <__mempcpy_chk@plt+0x45a8>
   15784:	push	{fp, lr}
   15788:	mov	fp, sp
   1578c:	sub	sp, sp, #48	; 0x30
   15790:	vmov.i32	q8, #0	; 0x00000000
   15794:	mov	ip, #32
   15798:	mov	r3, sp
   1579c:	mov	lr, r2
   157a0:	cmp	r1, #10
   157a4:	add	r2, r3, #16
   157a8:	vst1.64	{d16-d17}, [r3], ip
   157ac:	vst1.64	{d16-d17}, [r2]
   157b0:	vst1.64	{d16-d17}, [r3]
   157b4:	beq	157d4 <__mempcpy_chk@plt+0x47c4>
   157b8:	str	r1, [sp]
   157bc:	mov	r3, sp
   157c0:	mov	r1, lr
   157c4:	mvn	r2, #0
   157c8:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   157cc:	mov	sp, fp
   157d0:	pop	{fp, pc}
   157d4:	bl	10ff8 <abort@plt>
   157d8:	push	{r4, sl, fp, lr}
   157dc:	add	fp, sp, #8
   157e0:	sub	sp, sp, #48	; 0x30
   157e4:	vmov.i32	q8, #0	; 0x00000000
   157e8:	mov	ip, r3
   157ec:	mov	r3, sp
   157f0:	mov	lr, #32
   157f4:	cmp	r1, #10
   157f8:	add	r4, r3, #16
   157fc:	vst1.64	{d16-d17}, [r3], lr
   15800:	vst1.64	{d16-d17}, [r4]
   15804:	vst1.64	{d16-d17}, [r3]
   15808:	beq	15828 <__mempcpy_chk@plt+0x4818>
   1580c:	str	r1, [sp]
   15810:	mov	r1, r2
   15814:	mov	r3, sp
   15818:	mov	r2, ip
   1581c:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   15820:	sub	sp, fp, #8
   15824:	pop	{r4, sl, fp, pc}
   15828:	bl	10ff8 <abort@plt>
   1582c:	push	{fp, lr}
   15830:	mov	fp, sp
   15834:	sub	sp, sp, #48	; 0x30
   15838:	vmov.i32	q8, #0	; 0x00000000
   1583c:	mov	r3, sp
   15840:	mov	ip, #32
   15844:	cmp	r0, #10
   15848:	add	r2, r3, #16
   1584c:	vst1.64	{d16-d17}, [r3], ip
   15850:	vst1.64	{d16-d17}, [r2]
   15854:	vst1.64	{d16-d17}, [r3]
   15858:	beq	15878 <__mempcpy_chk@plt+0x4868>
   1585c:	str	r0, [sp]
   15860:	mov	r3, sp
   15864:	mov	r0, #0
   15868:	mvn	r2, #0
   1586c:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   15870:	mov	sp, fp
   15874:	pop	{fp, pc}
   15878:	bl	10ff8 <abort@plt>
   1587c:	push	{fp, lr}
   15880:	mov	fp, sp
   15884:	sub	sp, sp, #48	; 0x30
   15888:	vmov.i32	q8, #0	; 0x00000000
   1588c:	mov	r3, sp
   15890:	mov	ip, #32
   15894:	cmp	r0, #10
   15898:	add	lr, r3, #16
   1589c:	vst1.64	{d16-d17}, [r3], ip
   158a0:	vst1.64	{d16-d17}, [lr]
   158a4:	vst1.64	{d16-d17}, [r3]
   158a8:	beq	158c4 <__mempcpy_chk@plt+0x48b4>
   158ac:	str	r0, [sp]
   158b0:	mov	r3, sp
   158b4:	mov	r0, #0
   158b8:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   158bc:	mov	sp, fp
   158c0:	pop	{fp, pc}
   158c4:	bl	10ff8 <abort@plt>
   158c8:	push	{r4, sl, fp, lr}
   158cc:	add	fp, sp, #8
   158d0:	sub	sp, sp, #48	; 0x30
   158d4:	mov	lr, r0
   158d8:	movw	r0, #33128	; 0x8168
   158dc:	mov	ip, r1
   158e0:	mov	r1, #32
   158e4:	mov	r4, #1
   158e8:	movt	r0, #2
   158ec:	add	r3, r0, #16
   158f0:	vld1.64	{d16-d17}, [r0], r1
   158f4:	vld1.64	{d20-d21}, [r0]
   158f8:	vld1.64	{d18-d19}, [r3]
   158fc:	mov	r3, sp
   15900:	add	r0, r3, #32
   15904:	add	r1, r3, #16
   15908:	vst1.64	{d20-d21}, [r0]
   1590c:	mov	r0, #28
   15910:	vst1.64	{d18-d19}, [r1]
   15914:	mov	r1, r3
   15918:	and	r0, r0, r2, lsr #3
   1591c:	and	r2, r2, #31
   15920:	vst1.64	{d16-d17}, [r1], r0
   15924:	ldr	r0, [r1, #8]
   15928:	bic	r4, r4, r0, lsr r2
   1592c:	eor	r0, r0, r4, lsl r2
   15930:	mov	r2, ip
   15934:	str	r0, [r1, #8]
   15938:	mov	r0, #0
   1593c:	mov	r1, lr
   15940:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   15944:	sub	sp, fp, #8
   15948:	pop	{r4, sl, fp, pc}
   1594c:	push	{fp, lr}
   15950:	mov	fp, sp
   15954:	sub	sp, sp, #48	; 0x30
   15958:	mov	ip, r0
   1595c:	movw	r0, #33128	; 0x8168
   15960:	mov	r2, #32
   15964:	movt	r0, #2
   15968:	add	r3, r0, #16
   1596c:	vld1.64	{d16-d17}, [r0], r2
   15970:	vld1.64	{d20-d21}, [r0]
   15974:	vld1.64	{d18-d19}, [r3]
   15978:	mov	r3, sp
   1597c:	add	r0, r3, #32
   15980:	add	r2, r3, #16
   15984:	vst1.64	{d20-d21}, [r0]
   15988:	mov	r0, #28
   1598c:	vst1.64	{d18-d19}, [r2]
   15990:	mov	r2, r3
   15994:	and	r0, r0, r1, lsr #3
   15998:	and	r1, r1, #31
   1599c:	vst1.64	{d16-d17}, [r2], r0
   159a0:	mov	r0, #1
   159a4:	ldr	lr, [r2, #8]
   159a8:	bic	r0, r0, lr, lsr r1
   159ac:	eor	r0, lr, r0, lsl r1
   159b0:	mov	r1, ip
   159b4:	str	r0, [r2, #8]
   159b8:	mov	r0, #0
   159bc:	mvn	r2, #0
   159c0:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   159c4:	mov	sp, fp
   159c8:	pop	{fp, pc}
   159cc:	push	{fp, lr}
   159d0:	mov	fp, sp
   159d4:	sub	sp, sp, #48	; 0x30
   159d8:	mov	r1, r0
   159dc:	movw	r0, #33128	; 0x8168
   159e0:	mov	r3, #32
   159e4:	movt	r0, #2
   159e8:	add	r2, r0, #16
   159ec:	vld1.64	{d16-d17}, [r0], r3
   159f0:	mov	r3, sp
   159f4:	vld1.64	{d18-d19}, [r2]
   159f8:	vld1.64	{d20-d21}, [r0]
   159fc:	add	r2, r3, #16
   15a00:	add	r0, r3, #32
   15a04:	vst1.64	{d18-d19}, [r2]
   15a08:	vst1.64	{d20-d21}, [r0]
   15a0c:	mov	r0, #12
   15a10:	mov	r2, r3
   15a14:	vst1.64	{d16-d17}, [r2], r0
   15a18:	ldr	r0, [r2]
   15a1c:	orr	r0, r0, #67108864	; 0x4000000
   15a20:	str	r0, [r2]
   15a24:	mov	r0, #0
   15a28:	mvn	r2, #0
   15a2c:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   15a30:	mov	sp, fp
   15a34:	pop	{fp, pc}
   15a38:	push	{fp, lr}
   15a3c:	mov	fp, sp
   15a40:	sub	sp, sp, #48	; 0x30
   15a44:	mov	ip, r1
   15a48:	mov	r1, r0
   15a4c:	movw	r0, #33128	; 0x8168
   15a50:	mov	r2, #32
   15a54:	movt	r0, #2
   15a58:	add	r3, r0, #16
   15a5c:	vld1.64	{d16-d17}, [r0], r2
   15a60:	vld1.64	{d18-d19}, [r3]
   15a64:	vld1.64	{d20-d21}, [r0]
   15a68:	mov	r3, sp
   15a6c:	add	r2, r3, #16
   15a70:	add	r0, r3, #32
   15a74:	vst1.64	{d18-d19}, [r2]
   15a78:	vst1.64	{d20-d21}, [r0]
   15a7c:	mov	r0, #12
   15a80:	mov	r2, r3
   15a84:	vst1.64	{d16-d17}, [r2], r0
   15a88:	ldr	r0, [r2]
   15a8c:	orr	r0, r0, #67108864	; 0x4000000
   15a90:	str	r0, [r2]
   15a94:	mov	r0, #0
   15a98:	mov	r2, ip
   15a9c:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   15aa0:	mov	sp, fp
   15aa4:	pop	{fp, pc}
   15aa8:	push	{r4, sl, fp, lr}
   15aac:	add	fp, sp, #8
   15ab0:	sub	sp, sp, #96	; 0x60
   15ab4:	vmov.i32	q8, #0	; 0x00000000
   15ab8:	mov	ip, r2
   15abc:	mov	r2, sp
   15ac0:	mov	r4, #28
   15ac4:	cmp	r1, #10
   15ac8:	mov	r3, r2
   15acc:	add	lr, r2, #16
   15ad0:	vst1.64	{d16-d17}, [r3], r4
   15ad4:	vst1.64	{d16-d17}, [lr]
   15ad8:	vst1.32	{d16-d17}, [r3]
   15adc:	beq	15b2c <__mempcpy_chk@plt+0x4b1c>
   15ae0:	vld1.64	{d16-d17}, [r2], r4
   15ae4:	vld1.64	{d18-d19}, [lr]
   15ae8:	add	r3, sp, #48	; 0x30
   15aec:	vld1.32	{d20-d21}, [r2]
   15af0:	add	r2, r3, #20
   15af4:	add	r4, r3, #4
   15af8:	vst1.32	{d18-d19}, [r2]
   15afc:	add	r2, r3, #32
   15b00:	vst1.32	{d16-d17}, [r4]
   15b04:	vst1.32	{d20-d21}, [r2]
   15b08:	str	r1, [sp, #48]	; 0x30
   15b0c:	mvn	r2, #0
   15b10:	ldr	r1, [sp, #60]	; 0x3c
   15b14:	orr	r1, r1, #67108864	; 0x4000000
   15b18:	str	r1, [sp, #60]	; 0x3c
   15b1c:	mov	r1, ip
   15b20:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   15b24:	sub	sp, fp, #8
   15b28:	pop	{r4, sl, fp, pc}
   15b2c:	bl	10ff8 <abort@plt>
   15b30:	push	{r4, r5, r6, sl, fp, lr}
   15b34:	add	fp, sp, #16
   15b38:	sub	sp, sp, #48	; 0x30
   15b3c:	mov	ip, r3
   15b40:	movw	r3, #33128	; 0x8168
   15b44:	mov	r6, #32
   15b48:	cmp	r1, #0
   15b4c:	mov	r4, sp
   15b50:	movt	r3, #2
   15b54:	cmpne	r2, #0
   15b58:	add	r5, r4, #16
   15b5c:	add	lr, r3, #16
   15b60:	vld1.64	{d16-d17}, [r3], r6
   15b64:	vld1.64	{d18-d19}, [lr]
   15b68:	vld1.64	{d20-d21}, [r3]
   15b6c:	mov	r3, #10
   15b70:	vst1.64	{d16-d17}, [r4], r6
   15b74:	vst1.64	{d18-d19}, [r5]
   15b78:	vst1.64	{d20-d21}, [r4]
   15b7c:	str	r3, [sp]
   15b80:	bne	15b88 <__mempcpy_chk@plt+0x4b78>
   15b84:	bl	10ff8 <abort@plt>
   15b88:	str	r2, [sp, #44]	; 0x2c
   15b8c:	str	r1, [sp, #40]	; 0x28
   15b90:	mov	r3, sp
   15b94:	mov	r1, ip
   15b98:	mvn	r2, #0
   15b9c:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   15ba0:	sub	sp, fp, #16
   15ba4:	pop	{r4, r5, r6, sl, fp, pc}
   15ba8:	push	{r4, r5, r6, sl, fp, lr}
   15bac:	add	fp, sp, #16
   15bb0:	sub	sp, sp, #48	; 0x30
   15bb4:	mov	lr, r3
   15bb8:	movw	r3, #33128	; 0x8168
   15bbc:	mov	r6, #32
   15bc0:	cmp	r1, #0
   15bc4:	mov	r4, sp
   15bc8:	movt	r3, #2
   15bcc:	cmpne	r2, #0
   15bd0:	add	r5, r4, #16
   15bd4:	add	ip, r3, #16
   15bd8:	vld1.64	{d16-d17}, [r3], r6
   15bdc:	vld1.64	{d18-d19}, [ip]
   15be0:	vld1.64	{d20-d21}, [r3]
   15be4:	mov	r3, #10
   15be8:	vst1.64	{d16-d17}, [r4], r6
   15bec:	vst1.64	{d18-d19}, [r5]
   15bf0:	vst1.64	{d20-d21}, [r4]
   15bf4:	str	r3, [sp]
   15bf8:	bne	15c00 <__mempcpy_chk@plt+0x4bf0>
   15bfc:	bl	10ff8 <abort@plt>
   15c00:	ldr	ip, [fp, #8]
   15c04:	str	r2, [sp, #44]	; 0x2c
   15c08:	str	r1, [sp, #40]	; 0x28
   15c0c:	mov	r3, sp
   15c10:	mov	r1, lr
   15c14:	mov	r2, ip
   15c18:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   15c1c:	sub	sp, fp, #16
   15c20:	pop	{r4, r5, r6, sl, fp, pc}
   15c24:	push	{r4, sl, fp, lr}
   15c28:	add	fp, sp, #8
   15c2c:	sub	sp, sp, #48	; 0x30
   15c30:	movw	r3, #33128	; 0x8168
   15c34:	mov	lr, #32
   15c38:	mov	ip, r2
   15c3c:	cmp	r0, #0
   15c40:	movt	r3, #2
   15c44:	cmpne	r1, #0
   15c48:	add	r2, r3, #16
   15c4c:	vld1.64	{d16-d17}, [r3], lr
   15c50:	vld1.64	{d20-d21}, [r3]
   15c54:	vld1.64	{d18-d19}, [r2]
   15c58:	mov	r2, sp
   15c5c:	add	r4, r2, #16
   15c60:	vst1.64	{d16-d17}, [r2], lr
   15c64:	vst1.64	{d20-d21}, [r2]
   15c68:	mov	r2, #10
   15c6c:	vst1.64	{d18-d19}, [r4]
   15c70:	str	r2, [sp]
   15c74:	bne	15c7c <__mempcpy_chk@plt+0x4c6c>
   15c78:	bl	10ff8 <abort@plt>
   15c7c:	str	r1, [sp, #44]	; 0x2c
   15c80:	str	r0, [sp, #40]	; 0x28
   15c84:	mov	r3, sp
   15c88:	mov	r0, #0
   15c8c:	mov	r1, ip
   15c90:	mvn	r2, #0
   15c94:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   15c98:	sub	sp, fp, #8
   15c9c:	pop	{r4, sl, fp, pc}
   15ca0:	push	{r4, r5, fp, lr}
   15ca4:	add	fp, sp, #8
   15ca8:	sub	sp, sp, #48	; 0x30
   15cac:	mov	ip, r3
   15cb0:	movw	r3, #33128	; 0x8168
   15cb4:	mov	r4, #32
   15cb8:	mov	lr, r2
   15cbc:	cmp	r0, #0
   15cc0:	movt	r3, #2
   15cc4:	cmpne	r1, #0
   15cc8:	add	r2, r3, #16
   15ccc:	vld1.64	{d16-d17}, [r3], r4
   15cd0:	vld1.64	{d20-d21}, [r3]
   15cd4:	vld1.64	{d18-d19}, [r2]
   15cd8:	mov	r2, sp
   15cdc:	add	r5, r2, #16
   15ce0:	vst1.64	{d16-d17}, [r2], r4
   15ce4:	vst1.64	{d20-d21}, [r2]
   15ce8:	mov	r2, #10
   15cec:	vst1.64	{d18-d19}, [r5]
   15cf0:	str	r2, [sp]
   15cf4:	bne	15cfc <__mempcpy_chk@plt+0x4cec>
   15cf8:	bl	10ff8 <abort@plt>
   15cfc:	str	r1, [sp, #44]	; 0x2c
   15d00:	str	r0, [sp, #40]	; 0x28
   15d04:	mov	r3, sp
   15d08:	mov	r0, #0
   15d0c:	mov	r1, lr
   15d10:	mov	r2, ip
   15d14:	bl	155b8 <__mempcpy_chk@plt+0x45a8>
   15d18:	sub	sp, fp, #8
   15d1c:	pop	{r4, r5, fp, pc}
   15d20:	movw	r3, #33008	; 0x80f0
   15d24:	movt	r3, #2
   15d28:	b	155b8 <__mempcpy_chk@plt+0x45a8>
   15d2c:	movw	r3, #33008	; 0x80f0
   15d30:	mov	r2, r1
   15d34:	mov	r1, r0
   15d38:	mov	r0, #0
   15d3c:	movt	r3, #2
   15d40:	b	155b8 <__mempcpy_chk@plt+0x45a8>
   15d44:	movw	r3, #33008	; 0x80f0
   15d48:	mvn	r2, #0
   15d4c:	movt	r3, #2
   15d50:	b	155b8 <__mempcpy_chk@plt+0x45a8>
   15d54:	movw	r3, #33008	; 0x80f0
   15d58:	mov	r1, r0
   15d5c:	mov	r0, #0
   15d60:	mvn	r2, #0
   15d64:	movt	r3, #2
   15d68:	b	155b8 <__mempcpy_chk@plt+0x45a8>
   15d6c:	push	{r4, r5, r6, sl, fp, lr}
   15d70:	add	fp, sp, #16
   15d74:	ldr	r4, [r0], #8
   15d78:	mov	r5, r1
   15d7c:	cmp	r4, r0
   15d80:	beq	15da4 <__mempcpy_chk@plt+0x4d94>
   15d84:	mov	r0, r4
   15d88:	mov	r1, r5
   15d8c:	bl	16bc4 <__mempcpy_chk@plt+0x5bb4>
   15d90:	cmp	r0, #0
   15d94:	mov	r6, r0
   15d98:	moveq	r6, r4
   15d9c:	mov	r0, r6
   15da0:	pop	{r4, r5, r6, sl, fp, pc}
   15da4:	mov	r0, r5
   15da8:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   15dac:	cmp	r0, #0
   15db0:	beq	15dcc <__mempcpy_chk@plt+0x4dbc>
   15db4:	mov	r1, r4
   15db8:	mov	r2, r5
   15dbc:	mov	r6, r0
   15dc0:	bl	10e24 <memcpy@plt>
   15dc4:	mov	r0, r6
   15dc8:	pop	{r4, r5, r6, sl, fp, pc}
   15dcc:	mov	r6, #0
   15dd0:	mov	r0, r6
   15dd4:	pop	{r4, r5, r6, sl, fp, pc}
   15dd8:	push	{r4, r5, r6, sl, fp, lr}
   15ddc:	add	fp, sp, #16
   15de0:	mov	r4, r0
   15de4:	add	r6, r0, #8
   15de8:	ldrd	r0, [r0]
   15dec:	lsl	r5, r1, #1
   15df0:	cmp	r0, r6
   15df4:	beq	15e00 <__mempcpy_chk@plt+0x4df0>
   15df8:	bl	12858 <__mempcpy_chk@plt+0x1848>
   15dfc:	ldr	r1, [r4, #4]
   15e00:	cmp	r5, r1
   15e04:	bcc	15e28 <__mempcpy_chk@plt+0x4e18>
   15e08:	mov	r0, r5
   15e0c:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   15e10:	cmp	r0, #0
   15e14:	strne	r0, [r4]
   15e18:	movne	r0, #1
   15e1c:	strne	r5, [r4, #4]
   15e20:	popne	{r4, r5, r6, sl, fp, pc}
   15e24:	b	15e34 <__mempcpy_chk@plt+0x4e24>
   15e28:	bl	10f44 <__errno_location@plt>
   15e2c:	mov	r1, #12
   15e30:	str	r1, [r0]
   15e34:	mov	r0, #0
   15e38:	mov	r5, #1024	; 0x400
   15e3c:	str	r6, [r4]
   15e40:	str	r5, [r4, #4]
   15e44:	pop	{r4, r5, r6, sl, fp, pc}
   15e48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15e4c:	add	fp, sp, #24
   15e50:	ldrd	r8, [r0]
   15e54:	add	r7, r0, #8
   15e58:	mov	r4, r0
   15e5c:	lsl	r5, r9, #1
   15e60:	cmp	r8, r7
   15e64:	beq	15e98 <__mempcpy_chk@plt+0x4e88>
   15e68:	cmp	r5, r9
   15e6c:	bcc	15ed0 <__mempcpy_chk@plt+0x4ec0>
   15e70:	mov	r0, r8
   15e74:	mov	r1, r5
   15e78:	bl	16bc4 <__mempcpy_chk@plt+0x5bb4>
   15e7c:	mov	r6, r0
   15e80:	cmp	r0, #0
   15e84:	beq	15ee0 <__mempcpy_chk@plt+0x4ed0>
   15e88:	mov	r0, #1
   15e8c:	str	r6, [r4]
   15e90:	str	r5, [r4, #4]
   15e94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15e98:	mov	r0, r5
   15e9c:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   15ea0:	cmp	r0, #0
   15ea4:	beq	15ec8 <__mempcpy_chk@plt+0x4eb8>
   15ea8:	ldr	r2, [r4, #4]
   15eac:	mov	r1, r8
   15eb0:	mov	r6, r0
   15eb4:	bl	10e24 <memcpy@plt>
   15eb8:	mov	r0, #1
   15ebc:	str	r6, [r4]
   15ec0:	str	r5, [r4, #4]
   15ec4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ec8:	mov	r0, #0
   15ecc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ed0:	bl	10f44 <__errno_location@plt>
   15ed4:	mov	r1, #12
   15ed8:	str	r1, [r0]
   15edc:	b	15ee4 <__mempcpy_chk@plt+0x4ed4>
   15ee0:	ldr	r8, [r4]
   15ee4:	mov	r0, r8
   15ee8:	bl	12858 <__mempcpy_chk@plt+0x1848>
   15eec:	mov	r0, #0
   15ef0:	mov	r5, #1024	; 0x400
   15ef4:	str	r7, [r4]
   15ef8:	str	r5, [r4, #4]
   15efc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15f00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15f04:	add	fp, sp, #24
   15f08:	sub	sp, sp, #32
   15f0c:	ldr	r6, [fp, #12]
   15f10:	ldr	r7, [fp, #8]
   15f14:	mov	r4, r2
   15f18:	mov	r8, r0
   15f1c:	cmp	r1, #0
   15f20:	beq	15f48 <__mempcpy_chk@plt+0x4f38>
   15f24:	movw	r2, #31408	; 0x7ab0
   15f28:	mov	r5, r1
   15f2c:	str	r3, [sp, #4]
   15f30:	str	r4, [sp]
   15f34:	mov	r0, r8
   15f38:	mov	r1, #1
   15f3c:	movt	r2, #1
   15f40:	mov	r3, r5
   15f44:	b	15f60 <__mempcpy_chk@plt+0x4f50>
   15f48:	movw	r2, #31420	; 0x7abc
   15f4c:	str	r3, [sp]
   15f50:	mov	r0, r8
   15f54:	mov	r1, #1
   15f58:	mov	r3, r4
   15f5c:	movt	r2, #1
   15f60:	bl	10f80 <__fprintf_chk@plt>
   15f64:	movw	r1, #31427	; 0x7ac3
   15f68:	mov	r0, #0
   15f6c:	mov	r2, #5
   15f70:	movt	r1, #1
   15f74:	bl	10e3c <dcgettext@plt>
   15f78:	movw	r2, #32145	; 0x7d91
   15f7c:	mov	r3, r0
   15f80:	movw	r0, #2022	; 0x7e6
   15f84:	mov	r1, #1
   15f88:	movt	r2, #1
   15f8c:	str	r0, [sp]
   15f90:	mov	r0, r8
   15f94:	bl	10f80 <__fprintf_chk@plt>
   15f98:	movw	r4, #29431	; 0x72f7
   15f9c:	mov	r1, r8
   15fa0:	movt	r4, #1
   15fa4:	mov	r0, r4
   15fa8:	bl	10dc4 <fputs_unlocked@plt>
   15fac:	movw	r1, #31431	; 0x7ac7
   15fb0:	mov	r0, #0
   15fb4:	mov	r2, #5
   15fb8:	movt	r1, #1
   15fbc:	bl	10e3c <dcgettext@plt>
   15fc0:	movw	r3, #31602	; 0x7b72
   15fc4:	mov	r2, r0
   15fc8:	mov	r0, r8
   15fcc:	mov	r1, #1
   15fd0:	movt	r3, #1
   15fd4:	bl	10f80 <__fprintf_chk@plt>
   15fd8:	mov	r0, r4
   15fdc:	mov	r1, r8
   15fe0:	bl	10dc4 <fputs_unlocked@plt>
   15fe4:	cmp	r6, #9
   15fe8:	bhi	16024 <__mempcpy_chk@plt+0x5014>
   15fec:	add	r0, pc, #0
   15ff0:	ldr	pc, [r0, r6, lsl #2]
   15ff4:	andeq	r6, r1, ip, lsl r0
   15ff8:	andeq	r6, r1, r0, lsr r0
   15ffc:	andeq	r6, r1, r0, rrx
   16000:	andeq	r6, r1, r8, lsl #1
   16004:	strheq	r6, [r1], -r0
   16008:	ldrdeq	r6, [r1], -r8
   1600c:	andeq	r6, r1, r0, lsl #2
   16010:	andeq	r6, r1, r8, lsr r1
   16014:	andeq	r6, r1, r0, ror #3
   16018:	andeq	r6, r1, r8, lsl #3
   1601c:	sub	sp, fp, #24
   16020:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16024:	movw	r1, #31955	; 0x7cd3
   16028:	movt	r1, #1
   1602c:	b	16190 <__mempcpy_chk@plt+0x5180>
   16030:	movw	r1, #31636	; 0x7b94
   16034:	mov	r0, #0
   16038:	mov	r2, #5
   1603c:	movt	r1, #1
   16040:	bl	10e3c <dcgettext@plt>
   16044:	ldr	r3, [r7]
   16048:	mov	r2, r0
   1604c:	mov	r0, r8
   16050:	mov	r1, #1
   16054:	sub	sp, fp, #24
   16058:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1605c:	b	10f80 <__fprintf_chk@plt>
   16060:	movw	r1, #31652	; 0x7ba4
   16064:	mov	r0, #0
   16068:	mov	r2, #5
   1606c:	movt	r1, #1
   16070:	bl	10e3c <dcgettext@plt>
   16074:	mov	r2, r0
   16078:	ldr	r3, [r7]
   1607c:	ldr	r0, [r7, #4]
   16080:	str	r0, [sp]
   16084:	b	16174 <__mempcpy_chk@plt+0x5164>
   16088:	movw	r1, #31675	; 0x7bbb
   1608c:	mov	r0, #0
   16090:	mov	r2, #5
   16094:	movt	r1, #1
   16098:	bl	10e3c <dcgettext@plt>
   1609c:	mov	r2, r0
   160a0:	ldr	r3, [r7]
   160a4:	ldmib	r7, {r0, r1}
   160a8:	stm	sp, {r0, r1}
   160ac:	b	16174 <__mempcpy_chk@plt+0x5164>
   160b0:	movw	r1, #31703	; 0x7bd7
   160b4:	mov	r0, #0
   160b8:	mov	r2, #5
   160bc:	movt	r1, #1
   160c0:	bl	10e3c <dcgettext@plt>
   160c4:	ldr	r3, [r7]
   160c8:	mov	r2, r0
   160cc:	ldmib	r7, {r0, r1, r7}
   160d0:	stm	sp, {r0, r1, r7}
   160d4:	b	16174 <__mempcpy_chk@plt+0x5164>
   160d8:	movw	r1, #31735	; 0x7bf7
   160dc:	mov	r0, #0
   160e0:	mov	r2, #5
   160e4:	movt	r1, #1
   160e8:	bl	10e3c <dcgettext@plt>
   160ec:	ldr	r3, [r7]
   160f0:	mov	r2, r0
   160f4:	ldmib	r7, {r0, r1, r6, r7}
   160f8:	stm	sp, {r0, r1, r6, r7}
   160fc:	b	16174 <__mempcpy_chk@plt+0x5164>
   16100:	movw	r1, #31771	; 0x7c1b
   16104:	mov	r0, #0
   16108:	mov	r2, #5
   1610c:	movt	r1, #1
   16110:	bl	10e3c <dcgettext@plt>
   16114:	mov	r2, r0
   16118:	ldr	r3, [r7]
   1611c:	ldmib	r7, {r0, r1, r6}
   16120:	ldr	r5, [r7, #16]
   16124:	ldr	r7, [r7, #20]
   16128:	stm	sp, {r0, r1, r6}
   1612c:	str	r5, [sp, #12]
   16130:	str	r7, [sp, #16]
   16134:	b	16174 <__mempcpy_chk@plt+0x5164>
   16138:	movw	r1, #31811	; 0x7c43
   1613c:	mov	r0, #0
   16140:	mov	r2, #5
   16144:	movt	r1, #1
   16148:	bl	10e3c <dcgettext@plt>
   1614c:	mov	r2, r0
   16150:	ldr	r3, [r7]
   16154:	ldmib	r7, {r0, r1, r6}
   16158:	ldr	r5, [r7, #16]
   1615c:	ldr	r4, [r7, #20]
   16160:	ldr	r7, [r7, #24]
   16164:	stm	sp, {r0, r1, r6}
   16168:	str	r5, [sp, #12]
   1616c:	str	r4, [sp, #16]
   16170:	str	r7, [sp, #20]
   16174:	mov	r0, r8
   16178:	mov	r1, #1
   1617c:	bl	10f80 <__fprintf_chk@plt>
   16180:	sub	sp, fp, #24
   16184:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16188:	movw	r1, #31903	; 0x7c9f
   1618c:	movt	r1, #1
   16190:	mov	r0, #0
   16194:	mov	r2, #5
   16198:	bl	10e3c <dcgettext@plt>
   1619c:	mov	ip, r0
   161a0:	ldr	r3, [r7]
   161a4:	ldr	r0, [r7, #4]
   161a8:	ldr	r1, [r7, #8]
   161ac:	ldr	r6, [r7, #12]
   161b0:	ldr	r5, [r7, #16]
   161b4:	ldr	r4, [r7, #20]
   161b8:	ldr	r2, [r7, #24]
   161bc:	ldr	lr, [r7, #28]
   161c0:	ldr	r7, [r7, #32]
   161c4:	stm	sp, {r0, r1, r6}
   161c8:	str	r5, [sp, #12]
   161cc:	str	r4, [sp, #16]
   161d0:	str	r2, [sp, #20]
   161d4:	str	lr, [sp, #24]
   161d8:	str	r7, [sp, #28]
   161dc:	b	16224 <__mempcpy_chk@plt+0x5214>
   161e0:	movw	r1, #31855	; 0x7c6f
   161e4:	mov	r0, #0
   161e8:	mov	r2, #5
   161ec:	movt	r1, #1
   161f0:	bl	10e3c <dcgettext@plt>
   161f4:	mov	ip, r0
   161f8:	ldr	r3, [r7]
   161fc:	ldmib	r7, {r0, r1, r6}
   16200:	ldr	r5, [r7, #16]
   16204:	ldr	r4, [r7, #20]
   16208:	ldr	r2, [r7, #24]
   1620c:	ldr	r7, [r7, #28]
   16210:	stm	sp, {r0, r1, r6}
   16214:	str	r5, [sp, #12]
   16218:	str	r4, [sp, #16]
   1621c:	str	r2, [sp, #20]
   16220:	str	r7, [sp, #24]
   16224:	mov	r0, r8
   16228:	mov	r1, #1
   1622c:	mov	r2, ip
   16230:	bl	10f80 <__fprintf_chk@plt>
   16234:	sub	sp, fp, #24
   16238:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1623c:	push	{r4, sl, fp, lr}
   16240:	add	fp, sp, #8
   16244:	sub	sp, sp, #8
   16248:	ldr	ip, [fp, #8]
   1624c:	mov	lr, #0
   16250:	ldr	r4, [ip, lr, lsl #2]
   16254:	add	lr, lr, #1
   16258:	cmp	r4, #0
   1625c:	bne	16250 <__mempcpy_chk@plt+0x5240>
   16260:	sub	r4, lr, #1
   16264:	str	ip, [sp]
   16268:	str	r4, [sp, #4]
   1626c:	bl	15f00 <__mempcpy_chk@plt+0x4ef0>
   16270:	sub	sp, fp, #8
   16274:	pop	{r4, sl, fp, pc}
   16278:	push	{fp, lr}
   1627c:	mov	fp, sp
   16280:	sub	sp, sp, #48	; 0x30
   16284:	ldr	ip, [fp, #8]
   16288:	ldr	lr, [ip]
   1628c:	cmp	lr, #0
   16290:	str	lr, [sp, #8]
   16294:	beq	16330 <__mempcpy_chk@plt+0x5320>
   16298:	ldr	lr, [ip, #4]
   1629c:	cmp	lr, #0
   162a0:	str	lr, [sp, #12]
   162a4:	beq	16338 <__mempcpy_chk@plt+0x5328>
   162a8:	ldr	lr, [ip, #8]
   162ac:	cmp	lr, #0
   162b0:	str	lr, [sp, #16]
   162b4:	beq	16340 <__mempcpy_chk@plt+0x5330>
   162b8:	ldr	lr, [ip, #12]
   162bc:	cmp	lr, #0
   162c0:	str	lr, [sp, #20]
   162c4:	beq	16348 <__mempcpy_chk@plt+0x5338>
   162c8:	ldr	lr, [ip, #16]
   162cc:	cmp	lr, #0
   162d0:	str	lr, [sp, #24]
   162d4:	beq	16350 <__mempcpy_chk@plt+0x5340>
   162d8:	ldr	lr, [ip, #20]
   162dc:	cmp	lr, #0
   162e0:	str	lr, [sp, #28]
   162e4:	beq	16358 <__mempcpy_chk@plt+0x5348>
   162e8:	ldr	lr, [ip, #24]
   162ec:	cmp	lr, #0
   162f0:	str	lr, [sp, #32]
   162f4:	beq	16360 <__mempcpy_chk@plt+0x5350>
   162f8:	ldr	lr, [ip, #28]
   162fc:	cmp	lr, #0
   16300:	str	lr, [sp, #36]	; 0x24
   16304:	beq	16368 <__mempcpy_chk@plt+0x5358>
   16308:	ldr	lr, [ip, #32]
   1630c:	cmp	lr, #0
   16310:	str	lr, [sp, #40]	; 0x28
   16314:	beq	16370 <__mempcpy_chk@plt+0x5360>
   16318:	ldr	lr, [ip, #36]	; 0x24
   1631c:	mov	ip, #10
   16320:	cmp	lr, #0
   16324:	str	lr, [sp, #44]	; 0x2c
   16328:	movweq	ip, #9
   1632c:	b	16374 <__mempcpy_chk@plt+0x5364>
   16330:	mov	ip, #0
   16334:	b	16374 <__mempcpy_chk@plt+0x5364>
   16338:	mov	ip, #1
   1633c:	b	16374 <__mempcpy_chk@plt+0x5364>
   16340:	mov	ip, #2
   16344:	b	16374 <__mempcpy_chk@plt+0x5364>
   16348:	mov	ip, #3
   1634c:	b	16374 <__mempcpy_chk@plt+0x5364>
   16350:	mov	ip, #4
   16354:	b	16374 <__mempcpy_chk@plt+0x5364>
   16358:	mov	ip, #5
   1635c:	b	16374 <__mempcpy_chk@plt+0x5364>
   16360:	mov	ip, #6
   16364:	b	16374 <__mempcpy_chk@plt+0x5364>
   16368:	mov	ip, #7
   1636c:	b	16374 <__mempcpy_chk@plt+0x5364>
   16370:	mov	ip, #8
   16374:	add	lr, sp, #8
   16378:	str	ip, [sp, #4]
   1637c:	str	lr, [sp]
   16380:	bl	15f00 <__mempcpy_chk@plt+0x4ef0>
   16384:	mov	sp, fp
   16388:	pop	{fp, pc}
   1638c:	push	{fp, lr}
   16390:	mov	fp, sp
   16394:	sub	sp, sp, #56	; 0x38
   16398:	add	ip, fp, #8
   1639c:	str	ip, [sp, #12]
   163a0:	ldr	lr, [fp, #8]
   163a4:	cmp	lr, #0
   163a8:	str	lr, [sp, #16]
   163ac:	beq	16448 <__mempcpy_chk@plt+0x5438>
   163b0:	ldr	lr, [ip, #4]
   163b4:	cmp	lr, #0
   163b8:	str	lr, [sp, #20]
   163bc:	beq	16450 <__mempcpy_chk@plt+0x5440>
   163c0:	ldr	lr, [ip, #8]
   163c4:	cmp	lr, #0
   163c8:	str	lr, [sp, #24]
   163cc:	beq	16458 <__mempcpy_chk@plt+0x5448>
   163d0:	ldr	lr, [ip, #12]
   163d4:	cmp	lr, #0
   163d8:	str	lr, [sp, #28]
   163dc:	beq	16460 <__mempcpy_chk@plt+0x5450>
   163e0:	ldr	lr, [ip, #16]
   163e4:	cmp	lr, #0
   163e8:	str	lr, [sp, #32]
   163ec:	beq	16468 <__mempcpy_chk@plt+0x5458>
   163f0:	ldr	lr, [ip, #20]
   163f4:	cmp	lr, #0
   163f8:	str	lr, [sp, #36]	; 0x24
   163fc:	beq	16470 <__mempcpy_chk@plt+0x5460>
   16400:	ldr	lr, [ip, #24]
   16404:	cmp	lr, #0
   16408:	str	lr, [sp, #40]	; 0x28
   1640c:	beq	16478 <__mempcpy_chk@plt+0x5468>
   16410:	ldr	lr, [ip, #28]
   16414:	cmp	lr, #0
   16418:	str	lr, [sp, #44]	; 0x2c
   1641c:	beq	16480 <__mempcpy_chk@plt+0x5470>
   16420:	ldr	lr, [ip, #32]
   16424:	cmp	lr, #0
   16428:	str	lr, [sp, #48]	; 0x30
   1642c:	beq	16488 <__mempcpy_chk@plt+0x5478>
   16430:	ldr	lr, [ip, #36]	; 0x24
   16434:	mov	ip, #10
   16438:	cmp	lr, #0
   1643c:	str	lr, [sp, #52]	; 0x34
   16440:	movweq	ip, #9
   16444:	b	1648c <__mempcpy_chk@plt+0x547c>
   16448:	mov	ip, #0
   1644c:	b	1648c <__mempcpy_chk@plt+0x547c>
   16450:	mov	ip, #1
   16454:	b	1648c <__mempcpy_chk@plt+0x547c>
   16458:	mov	ip, #2
   1645c:	b	1648c <__mempcpy_chk@plt+0x547c>
   16460:	mov	ip, #3
   16464:	b	1648c <__mempcpy_chk@plt+0x547c>
   16468:	mov	ip, #4
   1646c:	b	1648c <__mempcpy_chk@plt+0x547c>
   16470:	mov	ip, #5
   16474:	b	1648c <__mempcpy_chk@plt+0x547c>
   16478:	mov	ip, #6
   1647c:	b	1648c <__mempcpy_chk@plt+0x547c>
   16480:	mov	ip, #7
   16484:	b	1648c <__mempcpy_chk@plt+0x547c>
   16488:	mov	ip, #8
   1648c:	add	lr, sp, #16
   16490:	str	ip, [sp, #4]
   16494:	str	lr, [sp]
   16498:	bl	15f00 <__mempcpy_chk@plt+0x4ef0>
   1649c:	mov	sp, fp
   164a0:	pop	{fp, pc}
   164a4:	push	{fp, lr}
   164a8:	mov	fp, sp
   164ac:	movw	r0, #33092	; 0x8144
   164b0:	movt	r0, #2
   164b4:	ldr	r1, [r0]
   164b8:	movw	r0, #29431	; 0x72f7
   164bc:	movt	r0, #1
   164c0:	bl	10dc4 <fputs_unlocked@plt>
   164c4:	movw	r1, #32015	; 0x7d0f
   164c8:	mov	r0, #0
   164cc:	mov	r2, #5
   164d0:	movt	r1, #1
   164d4:	bl	10e3c <dcgettext@plt>
   164d8:	movw	r2, #32035	; 0x7d23
   164dc:	mov	r1, r0
   164e0:	mov	r0, #1
   164e4:	movt	r2, #1
   164e8:	bl	10f68 <__printf_chk@plt>
   164ec:	movw	r1, #32057	; 0x7d39
   164f0:	mov	r0, #0
   164f4:	mov	r2, #5
   164f8:	movt	r1, #1
   164fc:	bl	10e3c <dcgettext@plt>
   16500:	movw	r2, #30199	; 0x75f7
   16504:	movw	r3, #30361	; 0x7699
   16508:	mov	r1, r0
   1650c:	mov	r0, #1
   16510:	movt	r2, #1
   16514:	movt	r3, #1
   16518:	bl	10f68 <__printf_chk@plt>
   1651c:	movw	r1, #32077	; 0x7d4d
   16520:	mov	r0, #0
   16524:	mov	r2, #5
   16528:	movt	r1, #1
   1652c:	bl	10e3c <dcgettext@plt>
   16530:	movw	r2, #32116	; 0x7d74
   16534:	mov	r1, r0
   16538:	mov	r0, #1
   1653c:	movt	r2, #1
   16540:	pop	{fp, lr}
   16544:	b	10f68 <__printf_chk@plt>
   16548:	push	{r4, r5, r6, sl, fp, lr}
   1654c:	add	fp, sp, #16
   16550:	mov	r4, r2
   16554:	mov	r5, r1
   16558:	mov	r6, r0
   1655c:	bl	16f1c <__mempcpy_chk@plt+0x5f0c>
   16560:	cmp	r0, #0
   16564:	popne	{r4, r5, r6, sl, fp, pc}
   16568:	cmp	r6, #0
   1656c:	beq	16580 <__mempcpy_chk@plt+0x5570>
   16570:	cmp	r5, #0
   16574:	cmpne	r4, #0
   16578:	bne	16580 <__mempcpy_chk@plt+0x5570>
   1657c:	pop	{r4, r5, r6, sl, fp, pc}
   16580:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   16584:	push	{r4, r5, r6, sl, fp, lr}
   16588:	add	fp, sp, #16
   1658c:	mov	r4, r2
   16590:	mov	r5, r1
   16594:	mov	r6, r0
   16598:	bl	16f1c <__mempcpy_chk@plt+0x5f0c>
   1659c:	cmp	r0, #0
   165a0:	popne	{r4, r5, r6, sl, fp, pc}
   165a4:	cmp	r6, #0
   165a8:	beq	165bc <__mempcpy_chk@plt+0x55ac>
   165ac:	cmp	r5, #0
   165b0:	cmpne	r4, #0
   165b4:	bne	165bc <__mempcpy_chk@plt+0x55ac>
   165b8:	pop	{r4, r5, r6, sl, fp, pc}
   165bc:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   165c0:	push	{fp, lr}
   165c4:	mov	fp, sp
   165c8:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   165cc:	cmp	r0, #0
   165d0:	popne	{fp, pc}
   165d4:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   165d8:	push	{fp, lr}
   165dc:	mov	fp, sp
   165e0:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   165e4:	cmp	r0, #0
   165e8:	popne	{fp, pc}
   165ec:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   165f0:	push	{fp, lr}
   165f4:	mov	fp, sp
   165f8:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   165fc:	cmp	r0, #0
   16600:	popne	{fp, pc}
   16604:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   16608:	push	{r4, r5, fp, lr}
   1660c:	add	fp, sp, #8
   16610:	mov	r4, r1
   16614:	mov	r5, r0
   16618:	bl	16bc4 <__mempcpy_chk@plt+0x5bb4>
   1661c:	cmp	r0, #0
   16620:	popne	{r4, r5, fp, pc}
   16624:	cmp	r5, #0
   16628:	beq	16638 <__mempcpy_chk@plt+0x5628>
   1662c:	cmp	r4, #0
   16630:	bne	16638 <__mempcpy_chk@plt+0x5628>
   16634:	pop	{r4, r5, fp, pc}
   16638:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   1663c:	push	{fp, lr}
   16640:	mov	fp, sp
   16644:	cmp	r1, #0
   16648:	orreq	r1, r1, #1
   1664c:	bl	16bc4 <__mempcpy_chk@plt+0x5bb4>
   16650:	cmp	r0, #0
   16654:	popne	{fp, pc}
   16658:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   1665c:	push	{fp, lr}
   16660:	mov	fp, sp
   16664:	clz	r3, r2
   16668:	lsr	ip, r3, #5
   1666c:	clz	r3, r1
   16670:	lsr	r3, r3, #5
   16674:	orrs	r3, r3, ip
   16678:	movwne	r1, #1
   1667c:	movwne	r2, #1
   16680:	bl	16f1c <__mempcpy_chk@plt+0x5f0c>
   16684:	cmp	r0, #0
   16688:	popne	{fp, pc}
   1668c:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   16690:	push	{fp, lr}
   16694:	mov	fp, sp
   16698:	mov	r2, r1
   1669c:	mov	r1, r0
   166a0:	mov	r0, #0
   166a4:	bl	16f1c <__mempcpy_chk@plt+0x5f0c>
   166a8:	cmp	r0, #0
   166ac:	popne	{fp, pc}
   166b0:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   166b4:	push	{fp, lr}
   166b8:	mov	fp, sp
   166bc:	mov	r2, r1
   166c0:	mov	r1, r0
   166c4:	clz	r0, r2
   166c8:	clz	r3, r1
   166cc:	lsr	r0, r0, #5
   166d0:	lsr	r3, r3, #5
   166d4:	orrs	r0, r3, r0
   166d8:	mov	r0, #0
   166dc:	movwne	r1, #1
   166e0:	movwne	r2, #1
   166e4:	bl	16f1c <__mempcpy_chk@plt+0x5f0c>
   166e8:	cmp	r0, #0
   166ec:	popne	{fp, pc}
   166f0:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   166f4:	push	{r4, r5, r6, sl, fp, lr}
   166f8:	add	fp, sp, #16
   166fc:	ldr	r5, [r1]
   16700:	mov	r4, r1
   16704:	mov	r6, r0
   16708:	cmp	r0, #0
   1670c:	beq	16724 <__mempcpy_chk@plt+0x5714>
   16710:	mov	r0, #1
   16714:	add	r0, r0, r5, lsr #1
   16718:	adds	r5, r5, r0
   1671c:	bcc	1672c <__mempcpy_chk@plt+0x571c>
   16720:	b	16768 <__mempcpy_chk@plt+0x5758>
   16724:	cmp	r5, #0
   16728:	movweq	r5, #64	; 0x40
   1672c:	mov	r0, r6
   16730:	mov	r1, r5
   16734:	mov	r2, #1
   16738:	bl	16f1c <__mempcpy_chk@plt+0x5f0c>
   1673c:	cmp	r5, #0
   16740:	mov	r1, r5
   16744:	movwne	r1, #1
   16748:	cmp	r0, #0
   1674c:	bne	16760 <__mempcpy_chk@plt+0x5750>
   16750:	clz	r2, r6
   16754:	lsr	r2, r2, #5
   16758:	orrs	r1, r2, r1
   1675c:	bne	16768 <__mempcpy_chk@plt+0x5758>
   16760:	str	r5, [r4]
   16764:	pop	{r4, r5, r6, sl, fp, pc}
   16768:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   1676c:	push	{r4, r5, r6, r7, fp, lr}
   16770:	add	fp, sp, #16
   16774:	ldr	r5, [r1]
   16778:	mov	r6, r2
   1677c:	mov	r4, r1
   16780:	mov	r7, r0
   16784:	cmp	r0, #0
   16788:	beq	167a0 <__mempcpy_chk@plt+0x5790>
   1678c:	mov	r0, #1
   16790:	add	r0, r0, r5, lsr #1
   16794:	adds	r5, r5, r0
   16798:	bcc	167b8 <__mempcpy_chk@plt+0x57a8>
   1679c:	b	167ec <__mempcpy_chk@plt+0x57dc>
   167a0:	cmp	r5, #0
   167a4:	bne	167b8 <__mempcpy_chk@plt+0x57a8>
   167a8:	mov	r0, #64	; 0x40
   167ac:	cmp	r6, #64	; 0x40
   167b0:	udiv	r5, r0, r6
   167b4:	addhi	r5, r5, #1
   167b8:	mov	r0, r7
   167bc:	mov	r1, r5
   167c0:	mov	r2, r6
   167c4:	bl	16f1c <__mempcpy_chk@plt+0x5f0c>
   167c8:	cmp	r0, #0
   167cc:	bne	167e4 <__mempcpy_chk@plt+0x57d4>
   167d0:	cmp	r7, #0
   167d4:	beq	167ec <__mempcpy_chk@plt+0x57dc>
   167d8:	cmp	r6, #0
   167dc:	cmpne	r5, #0
   167e0:	bne	167ec <__mempcpy_chk@plt+0x57dc>
   167e4:	str	r5, [r4]
   167e8:	pop	{r4, r5, r6, r7, fp, pc}
   167ec:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   167f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   167f4:	add	fp, sp, #24
   167f8:	mov	r8, r1
   167fc:	ldr	r1, [r1]
   16800:	mov	r5, r0
   16804:	add	r0, r1, r1, asr #1
   16808:	cmp	r0, r1
   1680c:	mvnvs	r0, #-2147483648	; 0x80000000
   16810:	cmp	r0, r3
   16814:	mov	r7, r0
   16818:	movgt	r7, r3
   1681c:	cmn	r3, #1
   16820:	movle	r7, r0
   16824:	ldr	r0, [fp, #8]
   16828:	cmn	r0, #1
   1682c:	ble	16854 <__mempcpy_chk@plt+0x5844>
   16830:	cmp	r0, #0
   16834:	beq	168a8 <__mempcpy_chk@plt+0x5898>
   16838:	cmn	r7, #1
   1683c:	ble	1687c <__mempcpy_chk@plt+0x586c>
   16840:	mvn	r4, #-2147483648	; 0x80000000
   16844:	udiv	r6, r4, r0
   16848:	cmp	r6, r7
   1684c:	bge	168a8 <__mempcpy_chk@plt+0x5898>
   16850:	b	168b8 <__mempcpy_chk@plt+0x58a8>
   16854:	cmn	r7, #1
   16858:	ble	16898 <__mempcpy_chk@plt+0x5888>
   1685c:	cmn	r0, #1
   16860:	beq	168a8 <__mempcpy_chk@plt+0x5898>
   16864:	mov	r6, #-2147483648	; 0x80000000
   16868:	mvn	r4, #-2147483648	; 0x80000000
   1686c:	sdiv	r6, r6, r0
   16870:	cmp	r6, r7
   16874:	bge	168a8 <__mempcpy_chk@plt+0x5898>
   16878:	b	168b8 <__mempcpy_chk@plt+0x58a8>
   1687c:	beq	168a8 <__mempcpy_chk@plt+0x5898>
   16880:	mov	r6, #-2147483648	; 0x80000000
   16884:	mvn	r4, #-2147483648	; 0x80000000
   16888:	sdiv	r6, r6, r7
   1688c:	cmp	r6, r0
   16890:	bge	168a8 <__mempcpy_chk@plt+0x5898>
   16894:	b	168b8 <__mempcpy_chk@plt+0x58a8>
   16898:	mvn	r4, #-2147483648	; 0x80000000
   1689c:	sdiv	r6, r4, r0
   168a0:	cmp	r7, r6
   168a4:	blt	168b8 <__mempcpy_chk@plt+0x58a8>
   168a8:	mul	r6, r7, r0
   168ac:	mov	r4, #64	; 0x40
   168b0:	cmp	r6, #63	; 0x3f
   168b4:	bgt	168c0 <__mempcpy_chk@plt+0x58b0>
   168b8:	sdiv	r7, r4, r0
   168bc:	mul	r6, r7, r0
   168c0:	cmp	r5, #0
   168c4:	moveq	r4, #0
   168c8:	streq	r4, [r8]
   168cc:	sub	r4, r7, r1
   168d0:	cmp	r4, r2
   168d4:	bge	16980 <__mempcpy_chk@plt+0x5970>
   168d8:	add	r7, r1, r2
   168dc:	mov	r6, #0
   168e0:	mov	r2, #0
   168e4:	cmp	r7, r3
   168e8:	movwgt	r6, #1
   168ec:	cmn	r3, #1
   168f0:	movwgt	r2, #1
   168f4:	cmp	r7, r1
   168f8:	bvs	169b4 <__mempcpy_chk@plt+0x59a4>
   168fc:	ands	r1, r2, r6
   16900:	bne	169b4 <__mempcpy_chk@plt+0x59a4>
   16904:	cmn	r0, #1
   16908:	ble	16930 <__mempcpy_chk@plt+0x5920>
   1690c:	cmp	r0, #0
   16910:	beq	1697c <__mempcpy_chk@plt+0x596c>
   16914:	cmn	r7, #1
   16918:	ble	16954 <__mempcpy_chk@plt+0x5944>
   1691c:	mvn	r1, #-2147483648	; 0x80000000
   16920:	udiv	r1, r1, r0
   16924:	cmp	r1, r7
   16928:	bge	1697c <__mempcpy_chk@plt+0x596c>
   1692c:	b	169b4 <__mempcpy_chk@plt+0x59a4>
   16930:	cmn	r7, #1
   16934:	ble	1696c <__mempcpy_chk@plt+0x595c>
   16938:	cmn	r0, #1
   1693c:	beq	1697c <__mempcpy_chk@plt+0x596c>
   16940:	mov	r1, #-2147483648	; 0x80000000
   16944:	sdiv	r1, r1, r0
   16948:	cmp	r1, r7
   1694c:	bge	1697c <__mempcpy_chk@plt+0x596c>
   16950:	b	169b4 <__mempcpy_chk@plt+0x59a4>
   16954:	beq	1697c <__mempcpy_chk@plt+0x596c>
   16958:	mov	r1, #-2147483648	; 0x80000000
   1695c:	sdiv	r1, r1, r7
   16960:	cmp	r1, r0
   16964:	bge	1697c <__mempcpy_chk@plt+0x596c>
   16968:	b	169b4 <__mempcpy_chk@plt+0x59a4>
   1696c:	mvn	r1, #-2147483648	; 0x80000000
   16970:	sdiv	r1, r1, r0
   16974:	cmp	r7, r1
   16978:	blt	169b4 <__mempcpy_chk@plt+0x59a4>
   1697c:	mul	r6, r7, r0
   16980:	mov	r0, r5
   16984:	mov	r1, r6
   16988:	bl	16bc4 <__mempcpy_chk@plt+0x5bb4>
   1698c:	cmp	r6, #0
   16990:	movwne	r6, #1
   16994:	cmp	r0, #0
   16998:	bne	169ac <__mempcpy_chk@plt+0x599c>
   1699c:	clz	r1, r5
   169a0:	lsr	r1, r1, #5
   169a4:	orrs	r1, r1, r6
   169a8:	bne	169b4 <__mempcpy_chk@plt+0x59a4>
   169ac:	str	r7, [r8]
   169b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   169b4:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   169b8:	push	{fp, lr}
   169bc:	mov	fp, sp
   169c0:	mov	r1, #1
   169c4:	bl	16b40 <__mempcpy_chk@plt+0x5b30>
   169c8:	cmp	r0, #0
   169cc:	popne	{fp, pc}
   169d0:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   169d4:	push	{fp, lr}
   169d8:	mov	fp, sp
   169dc:	bl	16b40 <__mempcpy_chk@plt+0x5b30>
   169e0:	cmp	r0, #0
   169e4:	popne	{fp, pc}
   169e8:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   169ec:	push	{fp, lr}
   169f0:	mov	fp, sp
   169f4:	mov	r1, #1
   169f8:	bl	16b40 <__mempcpy_chk@plt+0x5b30>
   169fc:	cmp	r0, #0
   16a00:	popne	{fp, pc}
   16a04:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   16a08:	push	{fp, lr}
   16a0c:	mov	fp, sp
   16a10:	bl	16b40 <__mempcpy_chk@plt+0x5b30>
   16a14:	cmp	r0, #0
   16a18:	popne	{fp, pc}
   16a1c:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   16a20:	push	{r4, r5, fp, lr}
   16a24:	add	fp, sp, #8
   16a28:	mov	r5, r0
   16a2c:	mov	r0, r1
   16a30:	mov	r4, r1
   16a34:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   16a38:	cmp	r0, #0
   16a3c:	beq	16a50 <__mempcpy_chk@plt+0x5a40>
   16a40:	mov	r1, r5
   16a44:	mov	r2, r4
   16a48:	pop	{r4, r5, fp, lr}
   16a4c:	b	10e24 <memcpy@plt>
   16a50:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   16a54:	push	{r4, r5, fp, lr}
   16a58:	add	fp, sp, #8
   16a5c:	mov	r5, r0
   16a60:	mov	r0, r1
   16a64:	mov	r4, r1
   16a68:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   16a6c:	cmp	r0, #0
   16a70:	beq	16a84 <__mempcpy_chk@plt+0x5a74>
   16a74:	mov	r1, r5
   16a78:	mov	r2, r4
   16a7c:	pop	{r4, r5, fp, lr}
   16a80:	b	10e24 <memcpy@plt>
   16a84:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   16a88:	push	{r4, r5, fp, lr}
   16a8c:	add	fp, sp, #8
   16a90:	mov	r5, r0
   16a94:	add	r0, r1, #1
   16a98:	mov	r4, r1
   16a9c:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   16aa0:	cmp	r0, #0
   16aa4:	beq	16ac0 <__mempcpy_chk@plt+0x5ab0>
   16aa8:	mov	r1, #0
   16aac:	mov	r2, r4
   16ab0:	strb	r1, [r0, r4]
   16ab4:	mov	r1, r5
   16ab8:	pop	{r4, r5, fp, lr}
   16abc:	b	10e24 <memcpy@plt>
   16ac0:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   16ac4:	push	{r4, r5, fp, lr}
   16ac8:	add	fp, sp, #8
   16acc:	mov	r4, r0
   16ad0:	bl	10f38 <strlen@plt>
   16ad4:	add	r5, r0, #1
   16ad8:	mov	r0, r5
   16adc:	bl	16b94 <__mempcpy_chk@plt+0x5b84>
   16ae0:	cmp	r0, #0
   16ae4:	beq	16af8 <__mempcpy_chk@plt+0x5ae8>
   16ae8:	mov	r1, r4
   16aec:	mov	r2, r5
   16af0:	pop	{r4, r5, fp, lr}
   16af4:	b	10e24 <memcpy@plt>
   16af8:	bl	16afc <__mempcpy_chk@plt+0x5aec>
   16afc:	push	{fp, lr}
   16b00:	mov	fp, sp
   16b04:	movw	r0, #33004	; 0x80ec
   16b08:	movw	r1, #32192	; 0x7dc0
   16b0c:	mov	r2, #5
   16b10:	movt	r0, #2
   16b14:	movt	r1, #1
   16b18:	ldr	r4, [r0]
   16b1c:	mov	r0, #0
   16b20:	bl	10e3c <dcgettext@plt>
   16b24:	movw	r2, #31028	; 0x7934
   16b28:	mov	r3, r0
   16b2c:	mov	r0, r4
   16b30:	mov	r1, #0
   16b34:	movt	r2, #1
   16b38:	bl	10ec0 <error@plt>
   16b3c:	bl	10ff8 <abort@plt>
   16b40:	clz	r2, r1
   16b44:	clz	r3, r0
   16b48:	lsr	r2, r2, #5
   16b4c:	lsr	r3, r3, #5
   16b50:	orrs	r2, r3, r2
   16b54:	movwne	r1, #1
   16b58:	movwne	r0, #1
   16b5c:	cmp	r1, #0
   16b60:	beq	16b90 <__mempcpy_chk@plt+0x5b80>
   16b64:	mvn	r2, #-2147483648	; 0x80000000
   16b68:	udiv	r2, r2, r1
   16b6c:	cmp	r2, r0
   16b70:	bcs	16b90 <__mempcpy_chk@plt+0x5b80>
   16b74:	push	{fp, lr}
   16b78:	mov	fp, sp
   16b7c:	bl	10f44 <__errno_location@plt>
   16b80:	mov	r1, #12
   16b84:	str	r1, [r0]
   16b88:	mov	r0, #0
   16b8c:	pop	{fp, pc}
   16b90:	b	10db8 <calloc@plt>
   16b94:	cmp	r0, #0
   16b98:	movweq	r0, #1
   16b9c:	cmn	r0, #1
   16ba0:	ble	16ba8 <__mempcpy_chk@plt+0x5b98>
   16ba4:	b	10ecc <malloc@plt>
   16ba8:	push	{fp, lr}
   16bac:	mov	fp, sp
   16bb0:	bl	10f44 <__errno_location@plt>
   16bb4:	mov	r1, #12
   16bb8:	str	r1, [r0]
   16bbc:	mov	r0, #0
   16bc0:	pop	{fp, pc}
   16bc4:	push	{fp, lr}
   16bc8:	mov	fp, sp
   16bcc:	cmp	r0, #0
   16bd0:	beq	16bec <__mempcpy_chk@plt+0x5bdc>
   16bd4:	cmp	r1, #0
   16bd8:	beq	16bf8 <__mempcpy_chk@plt+0x5be8>
   16bdc:	cmn	r1, #1
   16be0:	ble	16c04 <__mempcpy_chk@plt+0x5bf4>
   16be4:	pop	{fp, lr}
   16be8:	b	10e48 <realloc@plt>
   16bec:	mov	r0, r1
   16bf0:	pop	{fp, lr}
   16bf4:	b	16b94 <__mempcpy_chk@plt+0x5b84>
   16bf8:	bl	12858 <__mempcpy_chk@plt+0x1848>
   16bfc:	mov	r0, #0
   16c00:	pop	{fp, pc}
   16c04:	bl	10f44 <__errno_location@plt>
   16c08:	mov	r1, #12
   16c0c:	str	r1, [r0]
   16c10:	mov	r0, #0
   16c14:	pop	{fp, pc}
   16c18:	push	{r4, r5, r6, sl, fp, lr}
   16c1c:	add	fp, sp, #16
   16c20:	mov	r4, r0
   16c24:	bl	10ea8 <__fpending@plt>
   16c28:	ldr	r6, [r4]
   16c2c:	mov	r5, r0
   16c30:	mov	r0, r4
   16c34:	bl	16c9c <__mempcpy_chk@plt+0x5c8c>
   16c38:	tst	r6, #32
   16c3c:	bne	16c74 <__mempcpy_chk@plt+0x5c64>
   16c40:	cmp	r0, #0
   16c44:	mov	r4, r0
   16c48:	mvnne	r4, #0
   16c4c:	cmp	r5, #0
   16c50:	bne	16c80 <__mempcpy_chk@plt+0x5c70>
   16c54:	cmp	r0, #0
   16c58:	beq	16c80 <__mempcpy_chk@plt+0x5c70>
   16c5c:	bl	10f44 <__errno_location@plt>
   16c60:	ldr	r0, [r0]
   16c64:	subs	r4, r0, #9
   16c68:	mvnne	r4, #0
   16c6c:	mov	r0, r4
   16c70:	pop	{r4, r5, r6, sl, fp, pc}
   16c74:	mvn	r4, #0
   16c78:	cmp	r0, #0
   16c7c:	beq	16c88 <__mempcpy_chk@plt+0x5c78>
   16c80:	mov	r0, r4
   16c84:	pop	{r4, r5, r6, sl, fp, pc}
   16c88:	bl	10f44 <__errno_location@plt>
   16c8c:	mov	r1, #0
   16c90:	str	r1, [r0]
   16c94:	mov	r0, r4
   16c98:	pop	{r4, r5, r6, sl, fp, pc}
   16c9c:	push	{r4, r5, r6, sl, fp, lr}
   16ca0:	add	fp, sp, #16
   16ca4:	sub	sp, sp, #8
   16ca8:	mov	r4, r0
   16cac:	bl	10f74 <fileno@plt>
   16cb0:	cmn	r0, #1
   16cb4:	ble	16d28 <__mempcpy_chk@plt+0x5d18>
   16cb8:	mov	r0, r4
   16cbc:	bl	10ee4 <__freading@plt>
   16cc0:	cmp	r0, #0
   16cc4:	beq	16cf0 <__mempcpy_chk@plt+0x5ce0>
   16cc8:	mov	r0, r4
   16ccc:	bl	10f74 <fileno@plt>
   16cd0:	mov	r1, #1
   16cd4:	mov	r2, #0
   16cd8:	mov	r3, #0
   16cdc:	str	r1, [sp]
   16ce0:	bl	10e90 <lseek64@plt>
   16ce4:	and	r0, r0, r1
   16ce8:	cmn	r0, #1
   16cec:	beq	16d28 <__mempcpy_chk@plt+0x5d18>
   16cf0:	mov	r0, r4
   16cf4:	bl	16d38 <__mempcpy_chk@plt+0x5d28>
   16cf8:	cmp	r0, #0
   16cfc:	beq	16d28 <__mempcpy_chk@plt+0x5d18>
   16d00:	bl	10f44 <__errno_location@plt>
   16d04:	ldr	r6, [r0]
   16d08:	mov	r5, r0
   16d0c:	mov	r0, r4
   16d10:	bl	10f8c <fclose@plt>
   16d14:	cmp	r6, #0
   16d18:	strne	r6, [r5]
   16d1c:	mvnne	r0, #0
   16d20:	sub	sp, fp, #16
   16d24:	pop	{r4, r5, r6, sl, fp, pc}
   16d28:	mov	r0, r4
   16d2c:	sub	sp, fp, #16
   16d30:	pop	{r4, r5, r6, sl, fp, lr}
   16d34:	b	10f8c <fclose@plt>
   16d38:	push	{r4, sl, fp, lr}
   16d3c:	add	fp, sp, #8
   16d40:	sub	sp, sp, #8
   16d44:	mov	r4, r0
   16d48:	cmp	r0, #0
   16d4c:	beq	16d84 <__mempcpy_chk@plt+0x5d74>
   16d50:	mov	r0, r4
   16d54:	bl	10ee4 <__freading@plt>
   16d58:	cmp	r0, #0
   16d5c:	beq	16d84 <__mempcpy_chk@plt+0x5d74>
   16d60:	ldrb	r0, [r4, #1]
   16d64:	tst	r0, #1
   16d68:	beq	16d84 <__mempcpy_chk@plt+0x5d74>
   16d6c:	mov	r0, #1
   16d70:	mov	r2, #0
   16d74:	mov	r3, #0
   16d78:	str	r0, [sp]
   16d7c:	mov	r0, r4
   16d80:	bl	16d94 <__mempcpy_chk@plt+0x5d84>
   16d84:	mov	r0, r4
   16d88:	sub	sp, fp, #8
   16d8c:	pop	{r4, sl, fp, lr}
   16d90:	b	10de8 <fflush@plt>
   16d94:	push	{r4, r5, r6, r7, fp, lr}
   16d98:	add	fp, sp, #16
   16d9c:	sub	sp, sp, #8
   16da0:	mov	r4, r0
   16da4:	ldr	r0, [r0, #4]
   16da8:	mov	r5, r3
   16dac:	mov	r6, r2
   16db0:	ldr	r1, [r4, #8]
   16db4:	cmp	r1, r0
   16db8:	bne	16dd4 <__mempcpy_chk@plt+0x5dc4>
   16dbc:	ldrd	r0, [r4, #16]
   16dc0:	cmp	r1, r0
   16dc4:	bne	16dd4 <__mempcpy_chk@plt+0x5dc4>
   16dc8:	ldr	r0, [r4, #36]	; 0x24
   16dcc:	cmp	r0, #0
   16dd0:	beq	16dec <__mempcpy_chk@plt+0x5ddc>
   16dd4:	mov	r0, r4
   16dd8:	mov	r2, r6
   16ddc:	mov	r3, r5
   16de0:	sub	sp, fp, #16
   16de4:	pop	{r4, r5, r6, r7, fp, lr}
   16de8:	b	10f98 <fseeko64@plt>
   16dec:	ldr	r7, [fp, #8]
   16df0:	mov	r0, r4
   16df4:	bl	10f74 <fileno@plt>
   16df8:	mov	r2, r6
   16dfc:	mov	r3, r5
   16e00:	str	r7, [sp]
   16e04:	bl	10e90 <lseek64@plt>
   16e08:	and	r2, r0, r1
   16e0c:	cmn	r2, #1
   16e10:	beq	16e30 <__mempcpy_chk@plt+0x5e20>
   16e14:	strd	r0, [r4, #80]	; 0x50
   16e18:	ldr	r0, [r4]
   16e1c:	bic	r0, r0, #16
   16e20:	str	r0, [r4]
   16e24:	mov	r0, #0
   16e28:	sub	sp, fp, #16
   16e2c:	pop	{r4, r5, r6, r7, fp, pc}
   16e30:	mvn	r0, #0
   16e34:	sub	sp, fp, #16
   16e38:	pop	{r4, r5, r6, r7, fp, pc}
   16e3c:	ldrb	r2, [r0]
   16e40:	cmp	r2, #0
   16e44:	beq	16e70 <__mempcpy_chk@plt+0x5e60>
   16e48:	add	r3, r0, #1
   16e4c:	mov	r0, #0
   16e50:	ror	r0, r0, #23
   16e54:	uxtab	r0, r0, r2
   16e58:	ldrb	r2, [r3], #1
   16e5c:	cmp	r2, #0
   16e60:	bne	16e50 <__mempcpy_chk@plt+0x5e40>
   16e64:	udiv	r2, r0, r1
   16e68:	mls	r0, r2, r1, r0
   16e6c:	bx	lr
   16e70:	mov	r0, #0
   16e74:	udiv	r2, r0, r1
   16e78:	mls	r0, r2, r1, r0
   16e7c:	bx	lr
   16e80:	push	{fp, lr}
   16e84:	mov	fp, sp
   16e88:	mov	r0, #14
   16e8c:	bl	10fc8 <nl_langinfo@plt>
   16e90:	movw	r1, #29432	; 0x72f8
   16e94:	cmp	r0, #0
   16e98:	movt	r1, #1
   16e9c:	movne	r1, r0
   16ea0:	movw	r0, #32209	; 0x7dd1
   16ea4:	ldrb	r2, [r1]
   16ea8:	movt	r0, #1
   16eac:	cmp	r2, #0
   16eb0:	movne	r0, r1
   16eb4:	pop	{fp, pc}
   16eb8:	push	{r4, r5, r6, r7, fp, lr}
   16ebc:	add	fp, sp, #16
   16ec0:	sub	sp, sp, #8
   16ec4:	cmp	r0, #0
   16ec8:	add	r5, sp, #4
   16ecc:	mov	r7, r2
   16ed0:	mov	r4, r1
   16ed4:	movne	r5, r0
   16ed8:	mov	r0, r5
   16edc:	bl	10eb4 <mbrtowc@plt>
   16ee0:	mov	r6, r0
   16ee4:	cmp	r7, #0
   16ee8:	beq	16f10 <__mempcpy_chk@plt+0x5f00>
   16eec:	cmn	r6, #2
   16ef0:	bcc	16f10 <__mempcpy_chk@plt+0x5f00>
   16ef4:	mov	r0, #0
   16ef8:	bl	16f58 <__mempcpy_chk@plt+0x5f48>
   16efc:	cmp	r0, #0
   16f00:	bne	16f10 <__mempcpy_chk@plt+0x5f00>
   16f04:	ldrb	r0, [r4]
   16f08:	mov	r6, #1
   16f0c:	str	r0, [r5]
   16f10:	mov	r0, r6
   16f14:	sub	sp, fp, #16
   16f18:	pop	{r4, r5, r6, r7, fp, pc}
   16f1c:	cmp	r2, #0
   16f20:	beq	16f50 <__mempcpy_chk@plt+0x5f40>
   16f24:	mvn	r3, #0
   16f28:	udiv	r3, r3, r2
   16f2c:	cmp	r3, r1
   16f30:	bcs	16f50 <__mempcpy_chk@plt+0x5f40>
   16f34:	push	{fp, lr}
   16f38:	mov	fp, sp
   16f3c:	bl	10f44 <__errno_location@plt>
   16f40:	mov	r1, #12
   16f44:	str	r1, [r0]
   16f48:	mov	r0, #0
   16f4c:	pop	{fp, pc}
   16f50:	mul	r1, r2, r1
   16f54:	b	16bc4 <__mempcpy_chk@plt+0x5bb4>
   16f58:	push	{r4, sl, fp, lr}
   16f5c:	add	fp, sp, #8
   16f60:	sub	sp, sp, #264	; 0x108
   16f64:	add	r1, sp, #7
   16f68:	movw	r2, #257	; 0x101
   16f6c:	bl	16fc4 <__mempcpy_chk@plt+0x5fb4>
   16f70:	mov	r4, #0
   16f74:	cmp	r0, #0
   16f78:	bne	16fb8 <__mempcpy_chk@plt+0x5fa8>
   16f7c:	movw	r1, #32215	; 0x7dd7
   16f80:	add	r0, sp, #7
   16f84:	mov	r2, #2
   16f88:	movt	r1, #1
   16f8c:	bl	10f2c <bcmp@plt>
   16f90:	cmp	r0, #0
   16f94:	beq	16fb8 <__mempcpy_chk@plt+0x5fa8>
   16f98:	movw	r1, #32217	; 0x7dd9
   16f9c:	add	r0, sp, #7
   16fa0:	mov	r2, #6
   16fa4:	movt	r1, #1
   16fa8:	bl	10f2c <bcmp@plt>
   16fac:	cmp	r0, #0
   16fb0:	mov	r4, r0
   16fb4:	movwne	r4, #1
   16fb8:	mov	r0, r4
   16fbc:	sub	sp, fp, #8
   16fc0:	pop	{r4, sl, fp, pc}
   16fc4:	push	{r4, r5, r6, r7, fp, lr}
   16fc8:	add	fp, sp, #16
   16fcc:	mov	r4, r1
   16fd0:	mov	r1, #0
   16fd4:	mov	r6, r2
   16fd8:	bl	10fb0 <setlocale@plt>
   16fdc:	cmp	r0, #0
   16fe0:	beq	17010 <__mempcpy_chk@plt+0x6000>
   16fe4:	mov	r7, r0
   16fe8:	bl	10f38 <strlen@plt>
   16fec:	cmp	r0, r6
   16ff0:	bcs	1702c <__mempcpy_chk@plt+0x601c>
   16ff4:	add	r2, r0, #1
   16ff8:	mov	r0, r4
   16ffc:	mov	r1, r7
   17000:	bl	10e24 <memcpy@plt>
   17004:	mov	r5, #0
   17008:	mov	r0, r5
   1700c:	pop	{r4, r5, r6, r7, fp, pc}
   17010:	mov	r5, #22
   17014:	cmp	r6, #0
   17018:	beq	17054 <__mempcpy_chk@plt+0x6044>
   1701c:	mov	r0, #0
   17020:	strb	r0, [r4]
   17024:	mov	r0, r5
   17028:	pop	{r4, r5, r6, r7, fp, pc}
   1702c:	mov	r5, #34	; 0x22
   17030:	cmp	r6, #0
   17034:	beq	17054 <__mempcpy_chk@plt+0x6044>
   17038:	sub	r6, r6, #1
   1703c:	mov	r0, r4
   17040:	mov	r1, r7
   17044:	mov	r2, r6
   17048:	bl	10e24 <memcpy@plt>
   1704c:	mov	r0, #0
   17050:	strb	r0, [r4, r6]
   17054:	mov	r0, r5
   17058:	pop	{r4, r5, r6, r7, fp, pc}
   1705c:	mov	r1, #0
   17060:	b	10fb0 <setlocale@plt>
   17064:	cmp	r3, #0
   17068:	cmpeq	r2, #0
   1706c:	bne	17084 <__mempcpy_chk@plt+0x6074>
   17070:	cmp	r1, #0
   17074:	cmpeq	r0, #0
   17078:	mvnne	r1, #0
   1707c:	mvnne	r0, #0
   17080:	b	170a0 <__mempcpy_chk@plt+0x6090>
   17084:	sub	sp, sp, #8
   17088:	push	{sp, lr}
   1708c:	bl	170b0 <__mempcpy_chk@plt+0x60a0>
   17090:	ldr	lr, [sp, #4]
   17094:	add	sp, sp, #8
   17098:	pop	{r2, r3}
   1709c:	bx	lr
   170a0:	push	{r1, lr}
   170a4:	mov	r0, #8
   170a8:	bl	10dd0 <raise@plt>
   170ac:	pop	{r1, pc}
   170b0:	cmp	r1, r3
   170b4:	cmpeq	r0, r2
   170b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   170bc:	mov	r4, r0
   170c0:	movcc	r0, #0
   170c4:	mov	r5, r1
   170c8:	ldr	lr, [sp, #36]	; 0x24
   170cc:	movcc	r1, r0
   170d0:	bcc	171cc <__mempcpy_chk@plt+0x61bc>
   170d4:	cmp	r3, #0
   170d8:	clzeq	ip, r2
   170dc:	clzne	ip, r3
   170e0:	addeq	ip, ip, #32
   170e4:	cmp	r5, #0
   170e8:	clzeq	r1, r4
   170ec:	addeq	r1, r1, #32
   170f0:	clzne	r1, r5
   170f4:	sub	ip, ip, r1
   170f8:	sub	sl, ip, #32
   170fc:	lsl	r9, r3, ip
   17100:	rsb	fp, ip, #32
   17104:	orr	r9, r9, r2, lsl sl
   17108:	orr	r9, r9, r2, lsr fp
   1710c:	lsl	r8, r2, ip
   17110:	cmp	r5, r9
   17114:	cmpeq	r4, r8
   17118:	movcc	r0, #0
   1711c:	movcc	r1, r0
   17120:	bcc	1713c <__mempcpy_chk@plt+0x612c>
   17124:	mov	r0, #1
   17128:	subs	r4, r4, r8
   1712c:	lsl	r1, r0, sl
   17130:	orr	r1, r1, r0, lsr fp
   17134:	lsl	r0, r0, ip
   17138:	sbc	r5, r5, r9
   1713c:	cmp	ip, #0
   17140:	beq	171cc <__mempcpy_chk@plt+0x61bc>
   17144:	lsr	r6, r8, #1
   17148:	orr	r6, r6, r9, lsl #31
   1714c:	lsr	r7, r9, #1
   17150:	mov	r2, ip
   17154:	b	17178 <__mempcpy_chk@plt+0x6168>
   17158:	subs	r3, r4, r6
   1715c:	sbc	r8, r5, r7
   17160:	adds	r3, r3, r3
   17164:	adc	r8, r8, r8
   17168:	adds	r4, r3, #1
   1716c:	adc	r5, r8, #0
   17170:	subs	r2, r2, #1
   17174:	beq	17194 <__mempcpy_chk@plt+0x6184>
   17178:	cmp	r5, r7
   1717c:	cmpeq	r4, r6
   17180:	bcs	17158 <__mempcpy_chk@plt+0x6148>
   17184:	adds	r4, r4, r4
   17188:	adc	r5, r5, r5
   1718c:	subs	r2, r2, #1
   17190:	bne	17178 <__mempcpy_chk@plt+0x6168>
   17194:	lsr	r3, r4, ip
   17198:	orr	r3, r3, r5, lsl fp
   1719c:	lsr	r2, r5, ip
   171a0:	orr	r3, r3, r5, lsr sl
   171a4:	adds	r0, r0, r4
   171a8:	mov	r4, r3
   171ac:	lsl	r3, r2, ip
   171b0:	orr	r3, r3, r4, lsl sl
   171b4:	lsl	ip, r4, ip
   171b8:	orr	r3, r3, r4, lsr fp
   171bc:	adc	r1, r1, r5
   171c0:	subs	r0, r0, ip
   171c4:	mov	r5, r2
   171c8:	sbc	r1, r1, r3
   171cc:	cmp	lr, #0
   171d0:	strdne	r4, [lr]
   171d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   171dc:	mov	r7, r0
   171e0:	ldr	r6, [pc, #72]	; 17230 <__mempcpy_chk@plt+0x6220>
   171e4:	ldr	r5, [pc, #72]	; 17234 <__mempcpy_chk@plt+0x6224>
   171e8:	add	r6, pc, r6
   171ec:	add	r5, pc, r5
   171f0:	sub	r6, r6, r5
   171f4:	mov	r8, r1
   171f8:	mov	r9, r2
   171fc:	bl	10d98 <calloc@plt-0x20>
   17200:	asrs	r6, r6, #2
   17204:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17208:	mov	r4, #0
   1720c:	add	r4, r4, #1
   17210:	ldr	r3, [r5], #4
   17214:	mov	r2, r9
   17218:	mov	r1, r8
   1721c:	mov	r0, r7
   17220:	blx	r3
   17224:	cmp	r6, r4
   17228:	bne	1720c <__mempcpy_chk@plt+0x61fc>
   1722c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17230:	andeq	r0, r1, ip, lsl sp
   17234:	andeq	r0, r1, r4, lsl sp
   17238:	bx	lr
   1723c:	ldr	r3, [pc, #12]	; 17250 <__mempcpy_chk@plt+0x6240>
   17240:	mov	r1, #0
   17244:	add	r3, pc, r3
   17248:	ldr	r2, [r3]
   1724c:	b	10f50 <__cxa_atexit@plt>
   17250:	muleq	r1, r8, lr

Disassembly of section .fini:

00017254 <.fini>:
   17254:	push	{r3, lr}
   17258:	pop	{r3, pc}
