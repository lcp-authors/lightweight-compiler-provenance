
../repos/eddieantonio-ocreval-3ab279a/editopsum/editopsum:     file format elf32-littlearm


Disassembly of section .init:

0001069c <.init>:
   1069c:	push	{r3, lr}
   106a0:	bl	1088c <abort@plt+0xe0>
   106a4:	pop	{r3, pc}

Disassembly of section .plt:

000106a8 <calloc@plt-0x14>:
   106a8:	push	{lr}		; (str lr, [sp, #-4]!)
   106ac:	ldr	lr, [pc, #4]	; 106b8 <calloc@plt-0x4>
   106b0:	add	lr, pc, lr
   106b4:	ldr	pc, [lr, #8]!
   106b8:	andeq	r1, r1, r8, asr #18

000106bc <calloc@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #69632	; 0x11000
   106c4:	ldr	pc, [ip, #2376]!	; 0x948

000106c8 <strcmp@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #69632	; 0x11000
   106d0:	ldr	pc, [ip, #2368]!	; 0x940

000106d4 <fopen@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #69632	; 0x11000
   106dc:	ldr	pc, [ip, #2360]!	; 0x938

000106e0 <free@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #69632	; 0x11000
   106e8:	ldr	pc, [ip, #2352]!	; 0x930

000106ec <fgets@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #69632	; 0x11000
   106f4:	ldr	pc, [ip, #2344]!	; 0x928

000106f8 <strdup@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #69632	; 0x11000
   10700:	ldr	pc, [ip, #2336]!	; 0x920

00010704 <unlink@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #69632	; 0x11000
   1070c:	ldr	pc, [ip, #2328]!	; 0x918

00010710 <__xstat@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #69632	; 0x11000
   10718:	ldr	pc, [ip, #2320]!	; 0x910

0001071c <fwrite@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2312]!	; 0x908

00010728 <__libc_start_main@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2304]!	; 0x900

00010734 <__sysv_signal@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2296]!	; 0x8f8

00010740 <__gmon_start__@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2288]!	; 0x8f0

0001074c <getpid@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2280]!	; 0x8e8

00010758 <exit@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2272]!	; 0x8e0

00010764 <strlen@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2264]!	; 0x8d8

00010770 <fprintf@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2256]!	; 0x8d0

0001077c <__isoc99_sscanf@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2248]!	; 0x8c8

00010788 <fclose@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2240]!	; 0x8c0

00010794 <sprintf@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2232]!	; 0x8b8

000107a0 <strncmp@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2224]!	; 0x8b0

000107ac <abort@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2216]!	; 0x8a8

Disassembly of section .text:

000107b8 <error@@Base-0x844>:
   107b8:	ldr	r2, [pc, #128]	; 10840 <abort@plt+0x94>
   107bc:	mov	r3, #0
   107c0:	strd	r4, [sp, #-16]!
   107c4:	mov	r5, r1
   107c8:	str	r6, [sp, #8]
   107cc:	str	lr, [sp, #12]
   107d0:	sub	sp, sp, #8
   107d4:	add	r2, pc, r2
   107d8:	str	r0, [sp, #4]
   107dc:	add	r0, sp, #4
   107e0:	bl	111e0 <error@@Base+0x1e4>
   107e4:	ldr	r3, [sp, #4]
   107e8:	ldr	r2, [pc, #84]	; 10844 <abort@plt+0x98>
   107ec:	cmp	r3, #1
   107f0:	add	r2, pc, r2
   107f4:	ble	10834 <abort@plt+0x88>
   107f8:	ldr	r3, [pc, #72]	; 10848 <abort@plt+0x9c>
   107fc:	sub	r5, r5, #4
   10800:	mov	r4, #0
   10804:	ldr	r6, [r2, r3]
   10808:	mov	r0, r6
   1080c:	add	r4, r4, #1
   10810:	ldr	r1, [r5, #4]!
   10814:	bl	109cc <abort@plt+0x220>
   10818:	ldr	r3, [sp, #4]
   1081c:	cmp	r3, r4
   10820:	bgt	10808 <abort@plt+0x5c>
   10824:	mov	r0, r6
   10828:	mov	r1, #0
   1082c:	bl	10bd0 <abort@plt+0x424>
   10830:	bl	10f80 <abort@plt+0x7d4>
   10834:	ldr	r0, [pc, #16]	; 1084c <abort@plt+0xa0>
   10838:	add	r0, pc, r0
   1083c:	bl	10ffc <error@@Base>
   10840:	andeq	r0, r0, r8, ror #26
   10844:	andeq	r1, r1, r8, lsl #16
   10848:	andeq	r0, r0, ip, ror r0
   1084c:	andeq	r0, r0, r8, lsr sp
   10850:	mov	fp, #0
   10854:	mov	lr, #0
   10858:	pop	{r1}		; (ldr r1, [sp], #4)
   1085c:	mov	r2, sp
   10860:	push	{r2}		; (str r2, [sp, #-4]!)
   10864:	push	{r0}		; (str r0, [sp, #-4]!)
   10868:	ldr	ip, [pc, #16]	; 10880 <abort@plt+0xd4>
   1086c:	push	{ip}		; (str ip, [sp, #-4]!)
   10870:	ldr	r0, [pc, #12]	; 10884 <abort@plt+0xd8>
   10874:	ldr	r3, [pc, #12]	; 10888 <abort@plt+0xdc>
   10878:	bl	10728 <__libc_start_main@plt>
   1087c:	bl	107ac <abort@plt>
   10880:	andeq	r1, r1, r4, lsr r5
   10884:			; <UNDEFINED> instruction: 0x000107b8
   10888:	ldrdeq	r1, [r1], -r4
   1088c:	ldr	r3, [pc, #20]	; 108a8 <abort@plt+0xfc>
   10890:	ldr	r2, [pc, #20]	; 108ac <abort@plt+0x100>
   10894:	add	r3, pc, r3
   10898:	ldr	r2, [r3, r2]
   1089c:	cmp	r2, #0
   108a0:	bxeq	lr
   108a4:	b	10740 <__gmon_start__@plt>
   108a8:	andeq	r1, r1, r4, ror #14
   108ac:	andeq	r0, r0, ip, rrx
   108b0:	ldr	r0, [pc, #24]	; 108d0 <abort@plt+0x124>
   108b4:	ldr	r3, [pc, #24]	; 108d4 <abort@plt+0x128>
   108b8:	cmp	r3, r0
   108bc:	bxeq	lr
   108c0:	ldr	r3, [pc, #16]	; 108d8 <abort@plt+0x12c>
   108c4:	cmp	r3, #0
   108c8:	bxeq	lr
   108cc:	bx	r3
   108d0:	muleq	r2, r8, r0
   108d4:	muleq	r2, r8, r0
   108d8:	andeq	r0, r0, r0
   108dc:	ldr	r0, [pc, #36]	; 10908 <abort@plt+0x15c>
   108e0:	ldr	r1, [pc, #36]	; 1090c <abort@plt+0x160>
   108e4:	sub	r1, r1, r0
   108e8:	asr	r1, r1, #2
   108ec:	add	r1, r1, r1, lsr #31
   108f0:	asrs	r1, r1, #1
   108f4:	bxeq	lr
   108f8:	ldr	r3, [pc, #16]	; 10910 <abort@plt+0x164>
   108fc:	cmp	r3, #0
   10900:	bxeq	lr
   10904:	bx	r3
   10908:	muleq	r2, r8, r0
   1090c:	muleq	r2, r8, r0
   10910:	andeq	r0, r0, r0
   10914:	push	{r4, lr}
   10918:	ldr	r4, [pc, #24]	; 10938 <abort@plt+0x18c>
   1091c:	ldrb	r3, [r4]
   10920:	cmp	r3, #0
   10924:	popne	{r4, pc}
   10928:	bl	108b0 <abort@plt+0x104>
   1092c:	mov	r3, #1
   10930:	strb	r3, [r4]
   10934:	pop	{r4, pc}
   10938:	muleq	r2, r8, r0
   1093c:	b	108dc <abort@plt+0x130>
   10940:	strd	r4, [sp, #-16]!
   10944:	mov	r5, r1
   10948:	mov	r1, #99	; 0x63
   1094c:	ldr	r4, [pc, #112]	; 109c4 <abort@plt+0x218>
   10950:	str	r6, [sp, #8]
   10954:	mov	r6, r2
   10958:	mov	r2, r0
   1095c:	str	lr, [sp, #12]
   10960:	add	r4, pc, r4
   10964:	mov	r0, r4
   10968:	bl	106ec <fgets@plt>
   1096c:	cmp	r0, #0
   10970:	beq	10990 <abort@plt+0x1e4>
   10974:	ldr	r1, [pc, #76]	; 109c8 <abort@plt+0x21c>
   10978:	mov	r0, r4
   1097c:	mov	r2, r5
   10980:	add	r1, pc, r1
   10984:	bl	1077c <__isoc99_sscanf@plt>
   10988:	cmp	r0, #1
   1098c:	beq	109a4 <abort@plt+0x1f8>
   10990:	ldrd	r4, [sp]
   10994:	mov	r0, #0
   10998:	ldr	r6, [sp, #8]
   1099c:	add	sp, sp, #12
   109a0:	pop	{pc}		; (ldr pc, [sp], #4)
   109a4:	ldr	r2, [r5]
   109a8:	ldr	r3, [r6]
   109ac:	ldrd	r4, [sp]
   109b0:	add	r3, r3, r2
   109b4:	str	r3, [r6]
   109b8:	ldr	r6, [sp, #8]
   109bc:	add	sp, sp, #12
   109c0:	pop	{pc}		; (ldr pc, [sp], #4)
   109c4:	andeq	r1, r1, r4, lsr r7
   109c8:	andeq	r0, r0, r8, ror ip
   109cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   109d0:	strd	r6, [sp, #8]
   109d4:	mov	r6, r0
   109d8:	mov	r0, r1
   109dc:	str	r8, [sp, #16]
   109e0:	mov	r8, r1
   109e4:	ldr	r1, [pc, #452]	; 10bb0 <abort@plt+0x404>
   109e8:	str	lr, [sp, #20]
   109ec:	sub	sp, sp, #16
   109f0:	ldr	r5, [pc, #444]	; 10bb4 <abort@plt+0x408>
   109f4:	add	r1, pc, r1
   109f8:	bl	11120 <error@@Base+0x124>
   109fc:	add	r5, pc, r5
   10a00:	mov	r2, r0
   10a04:	mov	r4, r0
   10a08:	mov	r1, #99	; 0x63
   10a0c:	mov	r0, r5
   10a10:	bl	106ec <fgets@plt>
   10a14:	cmp	r0, #0
   10a18:	beq	10b8c <abort@plt+0x3e0>
   10a1c:	ldr	r1, [pc, #404]	; 10bb8 <abort@plt+0x40c>
   10a20:	mov	r2, #42	; 0x2a
   10a24:	mov	r0, r5
   10a28:	add	r1, pc, r1
   10a2c:	bl	107a0 <strncmp@plt>
   10a30:	cmp	r0, #0
   10a34:	bne	10b8c <abort@plt+0x3e0>
   10a38:	mov	r2, r4
   10a3c:	mov	r1, #99	; 0x63
   10a40:	mov	r0, r5
   10a44:	bl	106ec <fgets@plt>
   10a48:	cmp	r0, #0
   10a4c:	beq	10b8c <abort@plt+0x3e0>
   10a50:	ldr	r1, [pc, #356]	; 10bbc <abort@plt+0x410>
   10a54:	mov	r0, r5
   10a58:	add	r1, pc, r1
   10a5c:	bl	106c8 <strcmp@plt>
   10a60:	cmp	r0, #0
   10a64:	bne	10b8c <abort@plt+0x3e0>
   10a68:	add	r7, sp, #8
   10a6c:	mov	r2, r6
   10a70:	mov	r1, r7
   10a74:	mov	r0, r4
   10a78:	bl	10940 <abort@plt+0x194>
   10a7c:	cmp	r0, #0
   10a80:	beq	10b8c <abort@plt+0x3e0>
   10a84:	add	r2, r6, #4
   10a88:	mov	r1, r7
   10a8c:	mov	r0, r4
   10a90:	bl	10940 <abort@plt+0x194>
   10a94:	cmp	r0, #0
   10a98:	beq	10b8c <abort@plt+0x3e0>
   10a9c:	add	r2, r6, #8
   10aa0:	add	r1, sp, #4
   10aa4:	mov	r0, r4
   10aa8:	bl	10940 <abort@plt+0x194>
   10aac:	cmp	r0, #0
   10ab0:	beq	10b8c <abort@plt+0x3e0>
   10ab4:	ldr	r3, [sp, #4]
   10ab8:	cmp	r3, #0
   10abc:	bgt	10ae0 <abort@plt+0x334>
   10ac0:	mov	r0, r4
   10ac4:	bl	10e5c <abort@plt+0x6b0>
   10ac8:	add	sp, sp, #16
   10acc:	ldrd	r4, [sp]
   10ad0:	ldrd	r6, [sp, #8]
   10ad4:	ldr	r8, [sp, #16]
   10ad8:	add	sp, sp, #20
   10adc:	pop	{pc}		; (ldr pc, [sp], #4)
   10ae0:	mov	r2, r4
   10ae4:	mov	r1, #99	; 0x63
   10ae8:	mov	r0, r5
   10aec:	bl	106ec <fgets@plt>
   10af0:	cmp	r0, #0
   10af4:	beq	10ac0 <abort@plt+0x314>
   10af8:	mov	r0, r5
   10afc:	mov	r2, r4
   10b00:	mov	r1, #99	; 0x63
   10b04:	bl	106ec <fgets@plt>
   10b08:	cmp	r0, #0
   10b0c:	beq	10ac0 <abort@plt+0x314>
   10b10:	ldr	r5, [pc, #168]	; 10bc0 <abort@plt+0x414>
   10b14:	mov	r2, r4
   10b18:	mov	r1, #99	; 0x63
   10b1c:	add	r5, pc, r5
   10b20:	mov	r0, r5
   10b24:	bl	106ec <fgets@plt>
   10b28:	cmp	r0, #0
   10b2c:	beq	10ac0 <abort@plt+0x314>
   10b30:	ldr	r8, [pc, #140]	; 10bc4 <abort@plt+0x418>
   10b34:	add	r8, pc, r8
   10b38:	b	10b70 <abort@plt+0x3c4>
   10b3c:	add	r3, sp, #12
   10b40:	mov	r2, r7
   10b44:	mov	r1, r8
   10b48:	mov	r0, r5
   10b4c:	bl	1077c <__isoc99_sscanf@plt>
   10b50:	cmp	r0, #2
   10b54:	bne	10ac0 <abort@plt+0x314>
   10b58:	ldr	r1, [sp, #8]
   10b5c:	ldr	r3, [sp, #12]
   10b60:	add	r3, r6, r3, lsl #2
   10b64:	ldr	r2, [r3, #12]
   10b68:	add	r2, r2, r1
   10b6c:	str	r2, [r3, #12]
   10b70:	mov	r2, r4
   10b74:	mov	r1, #99	; 0x63
   10b78:	mov	r0, r5
   10b7c:	bl	106ec <fgets@plt>
   10b80:	cmp	r0, #0
   10b84:	bne	10b3c <abort@plt+0x390>
   10b88:	b	10ac0 <abort@plt+0x314>
   10b8c:	cmp	r8, #0
   10b90:	beq	10ba4 <abort@plt+0x3f8>
   10b94:	ldr	r0, [pc, #44]	; 10bc8 <abort@plt+0x41c>
   10b98:	mov	r1, r8
   10b9c:	add	r0, pc, r0
   10ba0:	bl	110c0 <error@@Base+0xc4>
   10ba4:	ldr	r8, [pc, #32]	; 10bcc <abort@plt+0x420>
   10ba8:	add	r8, pc, r8
   10bac:	b	10b94 <abort@plt+0x3e8>
   10bb0:	muleq	r0, ip, fp
   10bb4:	muleq	r1, r8, r6
   10bb8:	andeq	r0, r0, ip, ror #22
   10bbc:	andeq	r0, r0, ip, ror #22
   10bc0:	andeq	r1, r1, r8, ror r5
   10bc4:	andeq	r0, r0, r0, asr #21
   10bc8:	andeq	r0, r0, r0, ror #20
   10bcc:	andeq	r0, r0, r0, ror #19
   10bd0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10bd4:	mov	r5, r0
   10bd8:	mov	r0, r1
   10bdc:	ldr	r1, [pc, #252]	; 10ce0 <abort@plt+0x534>
   10be0:	strd	r6, [sp, #8]
   10be4:	str	r8, [sp, #16]
   10be8:	str	lr, [sp, #20]
   10bec:	ldr	r4, [pc, #240]	; 10ce4 <abort@plt+0x538>
   10bf0:	add	r1, pc, r1
   10bf4:	bl	11120 <error@@Base+0x124>
   10bf8:	ldr	r3, [pc, #232]	; 10ce8 <abort@plt+0x53c>
   10bfc:	mov	r6, r0
   10c00:	ldr	r2, [pc, #228]	; 10cec <abort@plt+0x540>
   10c04:	add	r4, pc, r4
   10c08:	ldr	r1, [pc, #224]	; 10cf0 <abort@plt+0x544>
   10c0c:	add	r3, pc, r3
   10c10:	add	r2, pc, r2
   10c14:	add	r1, pc, r1
   10c18:	bl	10770 <fprintf@plt>
   10c1c:	ldr	r3, [pc, #208]	; 10cf4 <abort@plt+0x548>
   10c20:	mov	r1, r4
   10c24:	mov	r0, r6
   10c28:	ldr	r2, [r5]
   10c2c:	add	r3, pc, r3
   10c30:	bl	10770 <fprintf@plt>
   10c34:	ldr	r3, [pc, #188]	; 10cf8 <abort@plt+0x54c>
   10c38:	mov	r1, r4
   10c3c:	mov	r0, r6
   10c40:	ldr	r2, [r5, #4]
   10c44:	add	r3, pc, r3
   10c48:	bl	10770 <fprintf@plt>
   10c4c:	ldr	r3, [pc, #168]	; 10cfc <abort@plt+0x550>
   10c50:	mov	r1, r4
   10c54:	mov	r0, r6
   10c58:	ldr	r2, [r5, #8]
   10c5c:	add	r3, pc, r3
   10c60:	bl	10770 <fprintf@plt>
   10c64:	ldr	r3, [r5, #8]
   10c68:	cmp	r3, #0
   10c6c:	bgt	10c8c <abort@plt+0x4e0>
   10c70:	mov	r0, r6
   10c74:	ldrd	r4, [sp]
   10c78:	ldrd	r6, [sp, #8]
   10c7c:	ldr	r8, [sp, #16]
   10c80:	ldr	lr, [sp, #20]
   10c84:	add	sp, sp, #24
   10c88:	b	10e5c <abort@plt+0x6b0>
   10c8c:	ldr	r0, [pc, #108]	; 10d00 <abort@plt+0x554>
   10c90:	mov	r1, #1
   10c94:	mov	r3, r6
   10c98:	mov	r2, #25
   10c9c:	add	r5, r5, #12
   10ca0:	ldr	r7, [pc, #92]	; 10d04 <abort@plt+0x558>
   10ca4:	mov	r4, r1
   10ca8:	add	r0, pc, r0
   10cac:	add	r7, pc, r7
   10cb0:	bl	1071c <fwrite@plt>
   10cb4:	ldr	ip, [r5, #4]!
   10cb8:	mov	r3, r4
   10cbc:	mov	r1, r7
   10cc0:	add	r4, r4, #1
   10cc4:	mov	r0, r6
   10cc8:	subs	r2, ip, #0
   10ccc:	ble	10cd4 <abort@plt+0x528>
   10cd0:	bl	10770 <fprintf@plt>
   10cd4:	cmp	r4, #101	; 0x65
   10cd8:	bne	10cb4 <abort@plt+0x508>
   10cdc:	b	10c70 <abort@plt+0x4c4>
   10ce0:	andeq	r0, r0, r0, lsr #20
   10ce4:	andeq	r0, r0, r4, lsr #20
   10ce8:			; <UNDEFINED> instruction: 0x000009b8
   10cec:	andeq	r0, r0, r4, lsl #19
   10cf0:	andeq	r0, r0, r0, lsl #20
   10cf4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10cf8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10cfc:	andeq	r0, r0, r4, ror #19
   10d00:	andeq	r0, r0, r0, lsr #19
   10d04:			; <UNDEFINED> instruction: 0x000009b8
   10d08:	ldr	r3, [pc, #96]	; 10d70 <abort@plt+0x5c4>
   10d0c:	strd	r4, [sp, #-16]!
   10d10:	ldr	r2, [pc, #92]	; 10d74 <abort@plt+0x5c8>
   10d14:	str	r6, [sp, #8]
   10d18:	mov	r6, r0
   10d1c:	str	lr, [sp, #12]
   10d20:	sub	sp, sp, #112	; 0x70
   10d24:	add	r3, pc, r3
   10d28:	add	r4, sp, #12
   10d2c:	ldr	r3, [r3, r2]
   10d30:	ldr	r5, [r3]
   10d34:	bl	1074c <getpid@plt>
   10d38:	ldr	r1, [pc, #56]	; 10d78 <abort@plt+0x5cc>
   10d3c:	mov	r3, r0
   10d40:	mov	r0, r4
   10d44:	str	r6, [sp]
   10d48:	mov	r2, r5
   10d4c:	add	r1, pc, r1
   10d50:	bl	10794 <sprintf@plt>
   10d54:	mov	r0, r4
   10d58:	bl	106f8 <strdup@plt>
   10d5c:	add	sp, sp, #112	; 0x70
   10d60:	ldrd	r4, [sp]
   10d64:	ldr	r6, [sp, #8]
   10d68:	add	sp, sp, #12
   10d6c:	pop	{pc}		; (ldr pc, [sp], #4)
   10d70:	ldrdeq	r1, [r1], -r4
   10d74:	andeq	r0, r0, r0, ror r0
   10d78:	andeq	r0, r0, r4, lsr #18
   10d7c:	ldr	r3, [pc, #116]	; 10df8 <abort@plt+0x64c>
   10d80:	mov	r6, r0
   10d84:	str	r7, [sp, #-8]!
   10d88:	ldr	r2, [pc, #108]	; 10dfc <abort@plt+0x650>
   10d8c:	str	lr, [sp, #4]
   10d90:	add	r3, pc, r3
   10d94:	ldr	r3, [r3, r2]
   10d98:	ldr	r3, [r3]
   10d9c:	cmp	r3, #0
   10da0:	beq	10da8 <abort@plt+0x5fc>
   10da4:	blx	r3
   10da8:	ldr	r3, [pc, #80]	; 10e00 <abort@plt+0x654>
   10dac:	add	r3, pc, r3
   10db0:	ldrsh	r2, [r3]
   10db4:	cmp	r2, #0
   10db8:	ble	10df0 <abort@plt+0x644>
   10dbc:	mov	r5, r3
   10dc0:	mov	r4, #1
   10dc4:	mov	r0, r4
   10dc8:	add	r4, r4, #1
   10dcc:	bl	10d08 <abort@plt+0x55c>
   10dd0:	mov	r7, r0
   10dd4:	sxth	r4, r4
   10dd8:	bl	10704 <unlink@plt>
   10ddc:	mov	r0, r7
   10de0:	bl	106e0 <free@plt>
   10de4:	ldrsh	r3, [r5]
   10de8:	cmp	r3, r4
   10dec:	bge	10dc4 <abort@plt+0x618>
   10df0:	mov	r0, r6
   10df4:	bl	10758 <exit@plt>
   10df8:	andeq	r1, r1, r8, ror #4
   10dfc:	andeq	r0, r0, r4, ror r0
   10e00:	andeq	r1, r1, ip, asr #6
   10e04:	ldrb	r3, [r0]
   10e08:	ldrb	r2, [r1]
   10e0c:	cmp	r3, #0
   10e10:	beq	10e38 <abort@plt+0x68c>
   10e14:	cmp	r2, r3
   10e18:	beq	10e28 <abort@plt+0x67c>
   10e1c:	b	10e44 <abort@plt+0x698>
   10e20:	cmp	r3, r2
   10e24:	bne	10e44 <abort@plt+0x698>
   10e28:	ldrb	r3, [r0, #1]!
   10e2c:	ldrb	r2, [r1, #1]!
   10e30:	cmp	r3, #0
   10e34:	bne	10e20 <abort@plt+0x674>
   10e38:	cmp	r2, #0
   10e3c:	beq	10e54 <abort@plt+0x6a8>
   10e40:	mov	r3, #0
   10e44:	cmp	r3, r2
   10e48:	mvncc	r0, #0
   10e4c:	movcs	r0, #1
   10e50:	bx	lr
   10e54:	mov	r0, r2
   10e58:	bx	lr
   10e5c:	ldr	r3, [pc, #48]	; 10e94 <abort@plt+0x6e8>
   10e60:	ldr	r1, [pc, #48]	; 10e98 <abort@plt+0x6ec>
   10e64:	add	r3, pc, r3
   10e68:	ldr	r1, [r3, r1]
   10e6c:	ldr	r1, [r1]
   10e70:	cmp	r1, r0
   10e74:	beq	10e90 <abort@plt+0x6e4>
   10e78:	ldr	r1, [pc, #28]	; 10e9c <abort@plt+0x6f0>
   10e7c:	ldr	r3, [r3, r1]
   10e80:	ldr	r3, [r3]
   10e84:	cmp	r3, r0
   10e88:	beq	10e90 <abort@plt+0x6e4>
   10e8c:	b	10788 <fclose@plt>
   10e90:	bx	lr
   10e94:	muleq	r1, r4, r1
   10e98:	andeq	r0, r0, r8, ror r0
   10e9c:	andeq	r0, r0, r0, lsl #1
   10ea0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea4:	sub	sp, sp, #92	; 0x5c
   10ea8:	mov	r1, r0
   10eac:	mov	r2, sp
   10eb0:	mov	r0, #3
   10eb4:	bl	10710 <__xstat@plt>
   10eb8:	clz	r0, r0
   10ebc:	lsr	r0, r0, #5
   10ec0:	add	sp, sp, #92	; 0x5c
   10ec4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ec8:	ldr	r2, [pc, #56]	; 10f08 <abort@plt+0x75c>
   10ecc:	str	r4, [sp, #-8]!
   10ed0:	add	r2, pc, r2
   10ed4:	ldrh	r3, [r2]
   10ed8:	str	lr, [sp, #4]
   10edc:	add	r3, r3, #1
   10ee0:	sxth	r3, r3
   10ee4:	mov	r0, r3
   10ee8:	strh	r3, [r2]
   10eec:	bl	10d08 <abort@plt+0x55c>
   10ef0:	mov	r4, r0
   10ef4:	bl	10704 <unlink@plt>
   10ef8:	mov	r0, r4
   10efc:	ldr	r4, [sp]
   10f00:	add	sp, sp, #4
   10f04:	pop	{pc}		; (ldr pc, [sp], #4)
   10f08:	andeq	r1, r1, r8, lsr #4
   10f0c:	str	r4, [sp, #-8]!
   10f10:	mov	r4, r0
   10f14:	str	lr, [sp, #4]
   10f18:	bl	10764 <strlen@plt>
   10f1c:	uxth	r0, r0
   10f20:	sub	r3, r0, #1
   10f24:	sxth	r3, r3
   10f28:	cmp	r3, #0
   10f2c:	blt	10f6c <abort@plt+0x7c0>
   10f30:	ldrb	r2, [r4, r3]
   10f34:	cmp	r2, #47	; 0x2f
   10f38:	beq	10f6c <abort@plt+0x7c0>
   10f3c:	sub	r0, r0, #2
   10f40:	sxth	r3, r0
   10f44:	add	r2, r3, #1
   10f48:	add	r2, r4, r2
   10f4c:	b	10f60 <abort@plt+0x7b4>
   10f50:	ldrb	r0, [r2, #-1]!
   10f54:	cmp	r0, #47	; 0x2f
   10f58:	beq	10f6c <abort@plt+0x7c0>
   10f5c:	mov	r3, r1
   10f60:	tst	r3, #32768	; 0x8000
   10f64:	sub	r1, r3, #1
   10f68:	beq	10f50 <abort@plt+0x7a4>
   10f6c:	add	r0, r3, #1
   10f70:	add	r0, r4, r0
   10f74:	ldr	r4, [sp]
   10f78:	add	sp, sp, #4
   10f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   10f80:	mov	r0, #0
   10f84:	str	r4, [sp, #-8]!
   10f88:	str	lr, [sp, #4]
   10f8c:	bl	10d7c <abort@plt+0x5d0>
   10f90:	ldr	r2, [pc, #80]	; 10fe8 <abort@plt+0x83c>
   10f94:	str	r4, [sp, #-8]!
   10f98:	ldr	r1, [pc, #76]	; 10fec <abort@plt+0x840>
   10f9c:	str	lr, [sp, #4]
   10fa0:	add	r2, pc, r2
   10fa4:	ldr	r1, [r2, r1]
   10fa8:	ldr	r1, [r1]
   10fac:	cmp	r1, #0
   10fb0:	beq	10fbc <abort@plt+0x810>
   10fb4:	blx	r1
   10fb8:	bl	10f80 <abort@plt+0x7d4>
   10fbc:	mov	r3, r0
   10fc0:	ldr	ip, [pc, #40]	; 10ff0 <abort@plt+0x844>
   10fc4:	ldr	r0, [pc, #40]	; 10ff4 <abort@plt+0x848>
   10fc8:	ldr	r1, [pc, #40]	; 10ff8 <abort@plt+0x84c>
   10fcc:	ldr	ip, [r2, ip]
   10fd0:	ldr	r0, [r2, r0]
   10fd4:	add	r1, pc, r1
   10fd8:	ldr	r2, [ip]
   10fdc:	ldr	r0, [r0]
   10fe0:	bl	10770 <fprintf@plt>
   10fe4:	b	10fb8 <abort@plt+0x80c>
   10fe8:	andeq	r1, r1, r8, asr r0
   10fec:	andeq	r0, r0, r4, rrx
   10ff0:	andeq	r0, r0, r0, ror r0
   10ff4:	andeq	r0, r0, r8, rrx
   10ff8:	andeq	r0, r0, ip, lsr #13

00010ffc <error@@Base>:
   10ffc:	str	r4, [sp, #-8]!
   11000:	mov	r3, r0
   11004:	ldr	r4, [pc, #56]	; 11044 <error@@Base+0x48>
   11008:	str	lr, [sp, #4]
   1100c:	ldr	r0, [pc, #52]	; 11048 <error@@Base+0x4c>
   11010:	ldr	r2, [pc, #52]	; 1104c <error@@Base+0x50>
   11014:	add	r4, pc, r4
   11018:	ldr	r1, [pc, #48]	; 11050 <error@@Base+0x54>
   1101c:	ldr	ip, [r4, r0]
   11020:	ldr	r0, [r4, r2]
   11024:	add	r1, pc, r1
   11028:	ldr	r2, [ip]
   1102c:	ldr	r0, [r0]
   11030:	bl	10770 <fprintf@plt>
   11034:	ldr	r3, [pc, #24]	; 11054 <error@@Base+0x58>
   11038:	ldr	r3, [r4, r3]
   1103c:	ldr	r0, [r3]
   11040:	bl	10d7c <abort@plt+0x5d0>
   11044:	andeq	r0, r1, r4, ror #31
   11048:	andeq	r0, r0, r0, ror r0
   1104c:	andeq	r0, r0, r8, rrx
   11050:	andeq	r0, r0, ip, ror #12
   11054:	andeq	r0, r0, r4, lsl #1
   11058:	str	r4, [sp, #-8]!
   1105c:	str	lr, [sp, #4]
   11060:	bl	106bc <calloc@plt>
   11064:	cmp	r0, #0
   11068:	beq	11078 <error@@Base+0x7c>
   1106c:	ldr	r4, [sp]
   11070:	add	sp, sp, #4
   11074:	pop	{pc}		; (ldr pc, [sp], #4)
   11078:	ldr	r0, [pc, #4]	; 11084 <error@@Base+0x88>
   1107c:	add	r0, pc, r0
   11080:	bl	10ffc <error@@Base>
   11084:	andeq	r0, r0, ip, lsl r6
   11088:	ldr	r3, [pc, #40]	; 110b8 <error@@Base+0xbc>
   1108c:	add	r3, pc, r3
   11090:	ldrb	r2, [r3, #2]
   11094:	cmp	r2, #0
   11098:	bxne	lr
   1109c:	ldr	r0, [pc, #24]	; 110bc <error@@Base+0xc0>
   110a0:	mov	r2, #1
   110a4:	str	r4, [sp, #-8]!
   110a8:	str	lr, [sp, #4]
   110ac:	strb	r2, [r3, #2]
   110b0:	add	r0, pc, r0
   110b4:	bl	10ffc <error@@Base>
   110b8:	andeq	r1, r1, ip, rrx
   110bc:	andeq	r0, r0, r4, lsl #12
   110c0:	ldr	r4, [pc, #68]	; 1110c <error@@Base+0x110>
   110c4:	mov	r3, r0
   110c8:	push	{lr}		; (str lr, [sp, #-4]!)
   110cc:	sub	sp, sp, #12
   110d0:	ldr	r0, [pc, #56]	; 11110 <error@@Base+0x114>
   110d4:	ldr	r2, [pc, #56]	; 11114 <error@@Base+0x118>
   110d8:	add	r4, pc, r4
   110dc:	ldr	ip, [r4, r0]
   110e0:	ldr	r0, [r4, r2]
   110e4:	str	r1, [sp]
   110e8:	ldr	r1, [pc, #40]	; 11118 <error@@Base+0x11c>
   110ec:	ldr	r2, [ip]
   110f0:	ldr	r0, [r0]
   110f4:	add	r1, pc, r1
   110f8:	bl	10770 <fprintf@plt>
   110fc:	ldr	r3, [pc, #24]	; 1111c <error@@Base+0x120>
   11100:	ldr	r3, [r4, r3]
   11104:	ldr	r0, [r3]
   11108:	bl	10d7c <abort@plt+0x5d0>
   1110c:	andeq	r0, r1, r0, lsr #30
   11110:	andeq	r0, r0, r0, ror r0
   11114:	andeq	r0, r0, r8, rrx
   11118:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1111c:	andeq	r0, r0, r4, lsl #1
   11120:	ldr	ip, [pc, #164]	; 111cc <error@@Base+0x1d0>
   11124:	subs	r2, r0, #0
   11128:	strd	r4, [sp, #-16]!
   1112c:	mov	r4, r1
   11130:	str	r6, [sp, #8]
   11134:	str	lr, [sp, #12]
   11138:	add	ip, pc, ip
   1113c:	beq	1117c <error@@Base+0x180>
   11140:	mov	r5, r2
   11144:	bl	106d4 <fopen@plt>
   11148:	cmp	r0, #0
   1114c:	beq	11160 <error@@Base+0x164>
   11150:	ldrd	r4, [sp]
   11154:	ldr	r6, [sp, #8]
   11158:	add	sp, sp, #12
   1115c:	pop	{pc}		; (ldr pc, [sp], #4)
   11160:	ldrb	r3, [r4]
   11164:	mov	r1, r5
   11168:	cmp	r3, #119	; 0x77
   1116c:	beq	111a4 <error@@Base+0x1a8>
   11170:	ldr	r0, [pc, #88]	; 111d0 <error@@Base+0x1d4>
   11174:	add	r0, pc, r0
   11178:	bl	110c0 <error@@Base+0xc4>
   1117c:	ldrb	r3, [r1]
   11180:	cmp	r3, #114	; 0x72
   11184:	beq	111b0 <error@@Base+0x1b4>
   11188:	ldr	r3, [pc, #68]	; 111d4 <error@@Base+0x1d8>
   1118c:	ldrd	r4, [sp]
   11190:	ldr	r6, [sp, #8]
   11194:	add	sp, sp, #12
   11198:	ldr	r3, [ip, r3]
   1119c:	ldr	r0, [r3]
   111a0:	pop	{pc}		; (ldr pc, [sp], #4)
   111a4:	ldr	r0, [pc, #44]	; 111d8 <error@@Base+0x1dc>
   111a8:	add	r0, pc, r0
   111ac:	bl	110c0 <error@@Base+0xc4>
   111b0:	ldr	r3, [pc, #36]	; 111dc <error@@Base+0x1e0>
   111b4:	ldrd	r4, [sp]
   111b8:	ldr	r6, [sp, #8]
   111bc:	add	sp, sp, #12
   111c0:	ldr	r3, [ip, r3]
   111c4:	ldr	r0, [r3]
   111c8:	pop	{pc}		; (ldr pc, [sp], #4)
   111cc:	andeq	r0, r1, r0, asr #29
   111d0:	andeq	r0, r0, r8, ror r5
   111d4:	andeq	r0, r0, r0, lsl #1
   111d8:	andeq	r0, r0, ip, lsr #10
   111dc:	andeq	r0, r0, r8, ror r0
   111e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   111e4:	strd	r6, [sp, #8]
   111e8:	mov	r6, r0
   111ec:	strd	r8, [sp, #16]
   111f0:	mov	r9, r1
   111f4:	mov	r8, r3
   111f8:	strd	sl, [sp, #24]
   111fc:	str	lr, [sp, #32]
   11200:	sub	sp, sp, #20
   11204:	ldr	r5, [pc, #600]	; 11464 <error@@Base+0x468>
   11208:	str	r0, [sp]
   1120c:	ldr	r0, [r1]
   11210:	str	r2, [sp, #12]
   11214:	bl	10f0c <abort@plt+0x760>
   11218:	ldr	r3, [pc, #584]	; 11468 <error@@Base+0x46c>
   1121c:	add	r5, pc, r5
   11220:	ldr	r4, [pc, #580]	; 1146c <error@@Base+0x470>
   11224:	ldr	r3, [r5, r3]
   11228:	add	r4, pc, r4
   1122c:	mov	r1, r4
   11230:	str	r0, [r3]
   11234:	mov	r0, #2
   11238:	bl	10734 <__sysv_signal@plt>
   1123c:	mov	r1, r4
   11240:	mov	r0, #15
   11244:	bl	10734 <__sysv_signal@plt>
   11248:	ldr	sl, [r6]
   1124c:	cmp	sl, #1
   11250:	beq	11428 <error@@Base+0x42c>
   11254:	movle	r6, #0
   11258:	ble	113b0 <error@@Base+0x3b4>
   1125c:	ldr	r3, [pc, #524]	; 11470 <error@@Base+0x474>
   11260:	mov	r7, #1
   11264:	mov	r6, #0
   11268:	mov	r4, r7
   1126c:	add	r3, pc, r3
   11270:	str	r3, [sp, #8]
   11274:	mov	r3, sl
   11278:	mov	sl, r9
   1127c:	b	112a0 <error@@Base+0x2a4>
   11280:	add	r4, r4, #1
   11284:	add	r2, r6, #1
   11288:	str	r5, [sl, r6, lsl #2]
   1128c:	sxth	r4, r4
   11290:	sxth	r6, r2
   11294:	cmp	r4, r3
   11298:	mov	r7, r4
   1129c:	bge	113b0 <error@@Base+0x3b4>
   112a0:	ldr	r5, [sl, r4, lsl #2]
   112a4:	lsl	r9, r4, #2
   112a8:	ldrb	r2, [r5]
   112ac:	cmp	r2, #45	; 0x2d
   112b0:	bne	11280 <error@@Base+0x284>
   112b4:	ldrb	fp, [r5, #1]
   112b8:	cmp	fp, #0
   112bc:	beq	11280 <error@@Base+0x284>
   112c0:	mov	r0, r5
   112c4:	str	r3, [sp, #4]
   112c8:	bl	10764 <strlen@plt>
   112cc:	mov	r2, r0
   112d0:	mov	r1, r5
   112d4:	ldr	r0, [sp, #8]
   112d8:	bl	107a0 <strncmp@plt>
   112dc:	cmp	r0, #0
   112e0:	beq	1143c <error@@Base+0x440>
   112e4:	ldr	r3, [sp, #4]
   112e8:	add	r7, r7, #1
   112ec:	cmp	r7, r3
   112f0:	addlt	r9, sl, r9
   112f4:	movge	r0, #0
   112f8:	ldrlt	r0, [r9, #4]
   112fc:	cmp	r8, #0
   11300:	beq	11344 <error@@Base+0x348>
   11304:	ldrb	r2, [r8]
   11308:	cmp	r2, #0
   1130c:	beq	11344 <error@@Base+0x348>
   11310:	cmp	fp, r2
   11314:	beq	11354 <error@@Base+0x358>
   11318:	mov	r2, #0
   1131c:	b	11328 <error@@Base+0x32c>
   11320:	cmp	fp, ip
   11324:	beq	11358 <error@@Base+0x35c>
   11328:	add	r2, r2, #1
   1132c:	sxth	r2, r2
   11330:	add	r1, r2, r2, lsl #1
   11334:	ldrb	ip, [r8, r1, lsl #2]
   11338:	add	r1, r8, r1, lsl #2
   1133c:	cmp	ip, #0
   11340:	bne	11320 <error@@Base+0x324>
   11344:	ldr	r0, [pc, #296]	; 11474 <error@@Base+0x478>
   11348:	mov	r1, r5
   1134c:	add	r0, pc, r0
   11350:	bl	110c0 <error@@Base+0xc4>
   11354:	mov	r1, r8
   11358:	ldr	r2, [r1, #4]
   1135c:	cmp	r2, #0
   11360:	beq	113e8 <error@@Base+0x3ec>
   11364:	ldrb	ip, [r5, #2]
   11368:	cmp	ip, #0
   1136c:	bne	113d4 <error@@Base+0x3d8>
   11370:	cmp	r0, #0
   11374:	beq	11444 <error@@Base+0x448>
   11378:	ldr	r1, [r2]
   1137c:	cmp	r1, #0
   11380:	bne	11454 <error@@Base+0x458>
   11384:	str	r0, [r2]
   11388:	uxth	r2, r4
   1138c:	ldrb	r1, [r5, #2]
   11390:	add	r4, r2, #1
   11394:	sxth	r4, r4
   11398:	cmp	r1, #0
   1139c:	addeq	r4, r2, #2
   113a0:	sxtheq	r4, r4
   113a4:	cmp	r4, r3
   113a8:	mov	r7, r4
   113ac:	blt	112a0 <error@@Base+0x2a4>
   113b0:	ldr	r3, [sp]
   113b4:	str	r6, [r3]
   113b8:	add	sp, sp, #20
   113bc:	ldrd	r4, [sp]
   113c0:	ldrd	r6, [sp, #8]
   113c4:	ldrd	r8, [sp, #16]
   113c8:	ldrd	sl, [sp, #24]
   113cc:	add	sp, sp, #32
   113d0:	pop	{pc}		; (ldr pc, [sp], #4)
   113d4:	ldr	r1, [r2]
   113d8:	cmp	r1, #0
   113dc:	bne	11454 <error@@Base+0x458>
   113e0:	add	r0, r5, #2
   113e4:	b	11384 <error@@Base+0x388>
   113e8:	ldr	r3, [r1, #8]
   113ec:	cmp	r3, #0
   113f0:	beq	11344 <error@@Base+0x348>
   113f4:	ldrb	r2, [r5, #2]
   113f8:	cmp	r2, #0
   113fc:	bne	11344 <error@@Base+0x348>
   11400:	ldrb	r2, [r3]
   11404:	cmp	r2, #0
   11408:	bne	11454 <error@@Base+0x458>
   1140c:	mov	r2, #1
   11410:	add	r4, r4, #1
   11414:	sxth	r4, r4
   11418:	strb	r2, [r3]
   1141c:	ldr	r3, [sp]
   11420:	ldr	r3, [r3]
   11424:	b	11294 <error@@Base+0x298>
   11428:	ldr	r3, [pc, #72]	; 11478 <error@@Base+0x47c>
   1142c:	ldr	r3, [r5, r3]
   11430:	ldrb	r6, [r3]
   11434:	cmp	r6, #0
   11438:	beq	113b0 <error@@Base+0x3b4>
   1143c:	ldr	r0, [sp, #12]
   11440:	bl	10f90 <abort@plt+0x7e4>
   11444:	ldr	r3, [r1, #8]
   11448:	cmp	r3, #0
   1144c:	bne	11400 <error@@Base+0x404>
   11450:	b	11344 <error@@Base+0x348>
   11454:	ldr	r0, [pc, #32]	; 1147c <error@@Base+0x480>
   11458:	mov	r1, r5
   1145c:	add	r0, pc, r0
   11460:	bl	110c0 <error@@Base+0xc4>
   11464:	ldrdeq	r0, [r1], -ip
   11468:	andeq	r0, r0, r0, ror r0
   1146c:			; <UNDEFINED> instruction: 0xfffffe58
   11470:	muleq	r0, r4, r4
   11474:			; <UNDEFINED> instruction: 0x000003bc
   11478:	andeq	r0, r0, r0, rrx
   1147c:			; <UNDEFINED> instruction: 0x000002bc
   11480:	ldr	r2, [pc, #60]	; 114c4 <error@@Base+0x4c8>
   11484:	mov	r3, r0
   11488:	push	{lr}		; (str lr, [sp, #-4]!)
   1148c:	sub	sp, sp, #12
   11490:	ldr	ip, [pc, #48]	; 114c8 <error@@Base+0x4cc>
   11494:	ldr	r0, [pc, #48]	; 114cc <error@@Base+0x4d0>
   11498:	add	r2, pc, r2
   1149c:	ldr	ip, [r2, ip]
   114a0:	ldr	r0, [r2, r0]
   114a4:	str	r1, [sp]
   114a8:	ldr	r1, [pc, #32]	; 114d0 <error@@Base+0x4d4>
   114ac:	ldr	r2, [ip]
   114b0:	ldr	r0, [r0]
   114b4:	add	r1, pc, r1
   114b8:	bl	10770 <fprintf@plt>
   114bc:	add	sp, sp, #12
   114c0:	pop	{pc}		; (ldr pc, [sp], #4)
   114c4:	andeq	r0, r1, r0, ror #22
   114c8:	andeq	r0, r0, r0, ror r0
   114cc:	andeq	r0, r0, r8, rrx
   114d0:	andeq	r0, r0, r0, lsl r2
   114d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114d8:	mov	r7, r0
   114dc:	ldr	r6, [pc, #72]	; 1152c <error@@Base+0x530>
   114e0:	ldr	r5, [pc, #72]	; 11530 <error@@Base+0x534>
   114e4:	add	r6, pc, r6
   114e8:	add	r5, pc, r5
   114ec:	sub	r6, r6, r5
   114f0:	mov	r8, r1
   114f4:	mov	r9, r2
   114f8:	bl	1069c <calloc@plt-0x20>
   114fc:	asrs	r6, r6, #2
   11500:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11504:	mov	r4, #0
   11508:	add	r4, r4, #1
   1150c:	ldr	r3, [r5], #4
   11510:	mov	r2, r9
   11514:	mov	r1, r8
   11518:	mov	r0, r7
   1151c:	blx	r3
   11520:	cmp	r6, r4
   11524:	bne	11508 <error@@Base+0x50c>
   11528:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1152c:	andeq	r0, r1, r8, lsl sl
   11530:	andeq	r0, r1, r0, lsl sl
   11534:	bx	lr

Disassembly of section .fini:

00011538 <.fini>:
   11538:	push	{r3, lr}
   1153c:	pop	{r3, pc}
