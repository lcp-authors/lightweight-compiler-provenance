
../repos/coreutils/src/printf:     file format elf32-littlearm


Disassembly of section .init:

00010cb8 <.init>:
   10cb8:	push	{r3, lr}
   10cbc:	bl	11a70 <putchar_unlocked@plt+0xaf8>
   10cc0:	pop	{r3, pc}

Disassembly of section .plt:

00010cc4 <calloc@plt-0x14>:
   10cc4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cc8:	ldr	lr, [pc, #4]	; 10cd4 <calloc@plt-0x4>
   10ccc:	add	lr, pc, lr
   10cd0:	ldr	pc, [lr, #8]!
   10cd4:	andeq	r5, r1, ip, lsr #6

00010cd8 <calloc@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #812]!	; 0x32c

00010ce4 <fputs_unlocked@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #804]!	; 0x324

00010cf0 <uselocale@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #796]!	; 0x31c

00010cfc <iconv@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #788]!	; 0x314

00010d08 <strcmp@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #780]!	; 0x30c

00010d14 <fflush@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #772]!	; 0x304

00010d20 <free@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #764]!	; 0x2fc

00010d2c <ferror@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #756]!	; 0x2f4

00010d38 <_exit@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #748]!	; 0x2ec

00010d44 <memcpy@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d50 <mbsinit@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #732]!	; 0x2dc

00010d5c <strtold@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #724]!	; 0x2d4

00010d68 <memcmp@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #716]!	; 0x2cc

00010d74 <__vprintf_chk@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #708]!	; 0x2c4

00010d80 <fputc_unlocked@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #700]!	; 0x2bc

00010d8c <dcgettext@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #692]!	; 0x2b4

00010d98 <realloc@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #684]!	; 0x2ac

00010da4 <textdomain@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #676]!	; 0x2a4

00010db0 <iswprint@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #668]!	; 0x29c

00010dbc <fwrite@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #660]!	; 0x294

00010dc8 <lseek64@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #652]!	; 0x28c

00010dd4 <__ctype_get_mb_cur_max@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #644]!	; 0x284

00010de0 <__fpending@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #636]!	; 0x27c

00010dec <ferror_unlocked@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #628]!	; 0x274

00010df8 <mbrtowc@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #620]!	; 0x26c

00010e04 <error@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #612]!	; 0x264

00010e10 <getenv@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #604]!	; 0x25c

00010e1c <malloc@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #596]!	; 0x254

00010e28 <iconv_open@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #588]!	; 0x24c

00010e34 <__libc_start_main@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #580]!	; 0x244

00010e40 <__vfprintf_chk@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #572]!	; 0x23c

00010e4c <__freading@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #564]!	; 0x234

00010e58 <__gmon_start__@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #556]!	; 0x22c

00010e64 <mempcpy@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #548]!	; 0x224

00010e70 <__ctype_b_loc@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #540]!	; 0x21c

00010e7c <exit@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #532]!	; 0x214

00010e88 <strlen@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #524]!	; 0x20c

00010e94 <strchr@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #516]!	; 0x204

00010ea0 <__errno_location@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #508]!	; 0x1fc

00010eac <__cxa_atexit@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #500]!	; 0x1f4

00010eb8 <memset@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #492]!	; 0x1ec

00010ec4 <__printf_chk@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #484]!	; 0x1e4

00010ed0 <fileno@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #476]!	; 0x1dc

00010edc <strtoumax@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #468]!	; 0x1d4

00010ee8 <__fprintf_chk@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #460]!	; 0x1cc

00010ef4 <strtoimax@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #452]!	; 0x1c4

00010f00 <fclose@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #444]!	; 0x1bc

00010f0c <fseeko64@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #436]!	; 0x1b4

00010f18 <setlocale@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #428]!	; 0x1ac

00010f24 <strrchr@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #420]!	; 0x1a4

00010f30 <nl_langinfo@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #412]!	; 0x19c

00010f3c <newlocale@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #404]!	; 0x194

00010f48 <bindtextdomain@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #396]!	; 0x18c

00010f54 <fputs@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #388]!	; 0x184

00010f60 <strncmp@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #380]!	; 0x17c

00010f6c <abort@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #372]!	; 0x174

00010f78 <putchar_unlocked@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #364]!	; 0x16c

Disassembly of section .text:

00010f88 <.text>:
   10f88:	push	{r4, lr}
   10f8c:	bl	10ea0 <__errno_location@plt>
   10f90:	mov	r3, #12
   10f94:	str	r3, [r0]
   10f98:	mov	r0, #0
   10f9c:	pop	{r4, pc}
   10fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fa4:	mov	r5, r0
   10fa8:	mov	r4, r1
   10fac:	vpush	{d8}
   10fb0:	sub	sp, sp, #324	; 0x144
   10fb4:	ldr	r0, [r1]
   10fb8:	bl	123e4 <putchar_unlocked@plt+0x146c>
   10fbc:	ldr	r1, [pc, #2576]	; 119d4 <putchar_unlocked@plt+0xa5c>
   10fc0:	mov	r0, #6
   10fc4:	bl	10f18 <setlocale@plt>
   10fc8:	ldr	r6, [pc, #2568]	; 119d8 <putchar_unlocked@plt+0xa60>
   10fcc:	ldr	r1, [pc, #2568]	; 119dc <putchar_unlocked@plt+0xa64>
   10fd0:	ldr	r0, [pc, #2568]	; 119e0 <putchar_unlocked@plt+0xa68>
   10fd4:	bl	10f48 <bindtextdomain@plt>
   10fd8:	ldr	r0, [pc, #2560]	; 119e0 <putchar_unlocked@plt+0xa68>
   10fdc:	bl	10da4 <textdomain@plt>
   10fe0:	ldr	r0, [pc, #2556]	; 119e4 <putchar_unlocked@plt+0xa6c>
   10fe4:	bl	14c2c <putchar_unlocked@plt+0x3cb4>
   10fe8:	mov	r3, #0
   10fec:	ldr	r0, [pc, #2548]	; 119e8 <putchar_unlocked@plt+0xa70>
   10ff0:	str	r3, [r6]
   10ff4:	bl	10e10 <getenv@plt>
   10ff8:	adds	r0, r0, #0
   10ffc:	movne	r0, #1
   11000:	cmp	r5, #2
   11004:	strb	r0, [r6, #4]
   11008:	bne	11070 <putchar_unlocked@plt+0xf8>
   1100c:	ldr	r6, [r4, #4]
   11010:	ldr	r1, [pc, #2516]	; 119ec <putchar_unlocked@plt+0xa74>
   11014:	mov	r0, r6
   11018:	bl	10d08 <strcmp@plt>
   1101c:	cmp	r0, #0
   11020:	bne	11028 <putchar_unlocked@plt+0xb0>
   11024:	bl	11f70 <putchar_unlocked@plt+0xff8>
   11028:	mov	r0, r6
   1102c:	ldr	r1, [pc, #2492]	; 119f0 <putchar_unlocked@plt+0xa78>
   11030:	bl	10d08 <strcmp@plt>
   11034:	subs	r6, r0, #0
   11038:	bne	11078 <putchar_unlocked@plt+0x100>
   1103c:	ldr	r3, [pc, #2480]	; 119f4 <putchar_unlocked@plt+0xa7c>
   11040:	ldr	r0, [pc, #2480]	; 119f8 <putchar_unlocked@plt+0xa80>
   11044:	ldr	r2, [pc, #2480]	; 119fc <putchar_unlocked@plt+0xa84>
   11048:	stm	sp, {r3, r6}
   1104c:	ldr	r3, [pc, #2476]	; 11a00 <putchar_unlocked@plt+0xa88>
   11050:	ldr	r1, [pc, #2476]	; 11a04 <putchar_unlocked@plt+0xa8c>
   11054:	ldr	r0, [r0]
   11058:	ldr	r3, [r3]
   1105c:	bl	141ac <putchar_unlocked@plt+0x3234>
   11060:	mov	r0, r6
   11064:	add	sp, sp, #324	; 0x144
   11068:	vpop	{d8}
   1106c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11070:	cmp	r5, #1
   11074:	ble	1109c <putchar_unlocked@plt+0x124>
   11078:	ldr	r1, [pc, #2440]	; 11a08 <putchar_unlocked@plt+0xa90>
   1107c:	ldr	r0, [r4, #4]
   11080:	bl	10d08 <strcmp@plt>
   11084:	cmp	r0, #0
   11088:	bne	110c4 <putchar_unlocked@plt+0x14c>
   1108c:	sub	r5, r5, #1
   11090:	add	r4, r4, #4
   11094:	cmp	r5, #1
   11098:	bne	110c4 <putchar_unlocked@plt+0x14c>
   1109c:	mov	r2, #5
   110a0:	ldr	r1, [pc, #2404]	; 11a0c <putchar_unlocked@plt+0xa94>
   110a4:	mov	r0, #0
   110a8:	bl	10d8c <dcgettext@plt>
   110ac:	mov	r1, #0
   110b0:	mov	r2, r0
   110b4:	mov	r0, r1
   110b8:	bl	10e04 <error@plt>
   110bc:	mov	r0, #1
   110c0:	b	11024 <putchar_unlocked@plt+0xac>
   110c4:	ldr	r3, [r4, #4]
   110c8:	str	r3, [sp, #44]	; 0x2c
   110cc:	sub	r3, r5, #2
   110d0:	str	r3, [sp, #40]	; 0x28
   110d4:	add	r3, r4, #8
   110d8:	str	r3, [sp, #24]
   110dc:	ldr	fp, [sp, #24]
   110e0:	mov	r3, #0
   110e4:	ldr	r5, [sp, #40]	; 0x28
   110e8:	str	r3, [sp, #12]
   110ec:	ldr	r9, [sp, #44]	; 0x2c
   110f0:	str	r3, [sp, #16]
   110f4:	ldrb	r0, [r9]
   110f8:	cmp	r0, #0
   110fc:	bne	11174 <putchar_unlocked@plt+0x1fc>
   11100:	ldr	r3, [sp, #40]	; 0x28
   11104:	str	r5, [sp, #40]	; 0x28
   11108:	sub	r1, r3, r5
   1110c:	ldr	r3, [sp, #24]
   11110:	cmp	r1, #0
   11114:	cmpgt	r5, #0
   11118:	movgt	r4, #1
   1111c:	movle	r4, #0
   11120:	add	r3, r3, r1, lsl #2
   11124:	str	r3, [sp, #24]
   11128:	bgt	110dc <putchar_unlocked@plt+0x164>
   1112c:	cmp	r5, #0
   11130:	beq	11168 <putchar_unlocked@plt+0x1f0>
   11134:	mov	r2, #5
   11138:	ldr	r1, [pc, #2256]	; 11a10 <putchar_unlocked@plt+0xa98>
   1113c:	mov	r0, r4
   11140:	bl	10d8c <dcgettext@plt>
   11144:	ldr	r3, [sp, #24]
   11148:	mov	r5, r0
   1114c:	ldr	r0, [r3]
   11150:	bl	139e4 <putchar_unlocked@plt+0x2a6c>
   11154:	mov	r3, r0
   11158:	mov	r2, r5
   1115c:	mov	r1, r4
   11160:	mov	r0, r4
   11164:	bl	10e04 <error@plt>
   11168:	ldr	r3, [pc, #2152]	; 119d8 <putchar_unlocked@plt+0xa60>
   1116c:	ldr	r6, [r3]
   11170:	b	11060 <putchar_unlocked@plt+0xe8>
   11174:	cmp	r0, #37	; 0x25
   11178:	beq	11190 <putchar_unlocked@plt+0x218>
   1117c:	cmp	r0, #92	; 0x5c
   11180:	beq	119a8 <putchar_unlocked@plt+0xa30>
   11184:	bl	10f78 <putchar_unlocked@plt>
   11188:	str	r9, [sp, #28]
   1118c:	b	111a8 <putchar_unlocked@plt+0x230>
   11190:	ldrb	r0, [r9, #1]
   11194:	add	r3, r9, #1
   11198:	str	r3, [sp, #28]
   1119c:	cmp	r0, #37	; 0x25
   111a0:	bne	111b4 <putchar_unlocked@plt+0x23c>
   111a4:	bl	10f78 <putchar_unlocked@plt>
   111a8:	ldr	r3, [sp, #28]
   111ac:	add	r9, r3, #1
   111b0:	b	110f4 <putchar_unlocked@plt+0x17c>
   111b4:	cmp	r0, #98	; 0x62
   111b8:	bne	11208 <putchar_unlocked@plt+0x290>
   111bc:	cmp	r5, #0
   111c0:	ldrne	r4, [fp]
   111c4:	beq	111a8 <putchar_unlocked@plt+0x230>
   111c8:	ldrb	r0, [r4]
   111cc:	cmp	r0, #0
   111d0:	bne	111e0 <putchar_unlocked@plt+0x268>
   111d4:	add	fp, fp, #4
   111d8:	sub	r5, r5, #1
   111dc:	b	111a8 <putchar_unlocked@plt+0x230>
   111e0:	cmp	r0, #92	; 0x5c
   111e4:	bne	11200 <putchar_unlocked@plt+0x288>
   111e8:	mov	r0, r4
   111ec:	mov	r1, #1
   111f0:	bl	11b24 <putchar_unlocked@plt+0xbac>
   111f4:	add	r4, r4, r0
   111f8:	add	r4, r4, #1
   111fc:	b	111c8 <putchar_unlocked@plt+0x250>
   11200:	bl	10f78 <putchar_unlocked@plt>
   11204:	b	111f8 <putchar_unlocked@plt+0x280>
   11208:	cmp	r0, #113	; 0x71
   1120c:	bne	11234 <putchar_unlocked@plt+0x2bc>
   11210:	cmp	r5, #0
   11214:	beq	111a8 <putchar_unlocked@plt+0x230>
   11218:	mov	r0, #3
   1121c:	ldr	r1, [fp], #4
   11220:	bl	13800 <putchar_unlocked@plt+0x2888>
   11224:	ldr	r3, [pc, #1996]	; 119f8 <putchar_unlocked@plt+0xa80>
   11228:	ldr	r1, [r3]
   1122c:	bl	10ce4 <fputs_unlocked@plt>
   11230:	b	111d8 <putchar_unlocked@plt+0x260>
   11234:	mov	r2, #256	; 0x100
   11238:	mov	r1, #0
   1123c:	add	r0, sp, #64	; 0x40
   11240:	add	r8, r9, #1
   11244:	bl	10eb8 <memset@plt>
   11248:	mov	r3, #1
   1124c:	mov	lr, #1
   11250:	mov	ip, lr
   11254:	mov	r1, lr
   11258:	strb	r3, [sp, #129]	; 0x81
   1125c:	strb	r3, [sp, #133]	; 0x85
   11260:	strb	r3, [sp, #152]	; 0x98
   11264:	strb	r3, [sp, #161]	; 0xa1
   11268:	strb	r3, [sp, #163]	; 0xa3
   1126c:	strb	r3, [sp, #169]	; 0xa9
   11270:	strb	r3, [sp, #175]	; 0xaf
   11274:	strb	r3, [sp, #179]	; 0xb3
   11278:	strb	r3, [sp, #181]	; 0xb5
   1127c:	strb	r3, [sp, #184]	; 0xb8
   11280:	movw	r3, #257	; 0x101
   11284:	strh	r3, [sp, #134]	; 0x86
   11288:	ldr	r3, [pc, #1924]	; 11a14 <putchar_unlocked@plt+0xa9c>
   1128c:	str	r3, [sp, #164]	; 0xa4
   11290:	mov	r3, #0
   11294:	mov	sl, r3
   11298:	mov	r2, r3
   1129c:	mov	r4, r3
   112a0:	mov	r7, r3
   112a4:	str	r3, [sp, #20]
   112a8:	sub	r0, r8, r9
   112ac:	mov	r6, r8
   112b0:	str	r0, [sp, #28]
   112b4:	ldrb	r0, [r8], #1
   112b8:	cmp	r0, #43	; 0x2b
   112bc:	beq	112a8 <putchar_unlocked@plt+0x330>
   112c0:	bhi	11378 <putchar_unlocked@plt+0x400>
   112c4:	cmp	r0, #35	; 0x23
   112c8:	beq	11390 <putchar_unlocked@plt+0x418>
   112cc:	cmp	r0, #39	; 0x27
   112d0:	beq	113bc <putchar_unlocked@plt+0x444>
   112d4:	cmp	r0, #32
   112d8:	beq	112a8 <putchar_unlocked@plt+0x330>
   112dc:	cmp	r7, #0
   112e0:	beq	119c0 <putchar_unlocked@plt+0xa48>
   112e4:	cmp	r4, #0
   112e8:	strb	r1, [sp, #152]	; 0x98
   112ec:	strb	r1, [sp, #184]	; 0xb8
   112f0:	beq	11300 <putchar_unlocked@plt+0x388>
   112f4:	cmp	r7, #0
   112f8:	strb	ip, [sp, #179]	; 0xb3
   112fc:	beq	119c8 <putchar_unlocked@plt+0xa50>
   11300:	cmp	r2, #0
   11304:	strb	r1, [sp, #133]	; 0x85
   11308:	strb	r1, [sp, #165]	; 0xa5
   1130c:	strb	r1, [sp, #175]	; 0xaf
   11310:	beq	11320 <putchar_unlocked@plt+0x3a8>
   11314:	cmp	r7, #0
   11318:	strb	ip, [sp, #163]	; 0xa3
   1131c:	beq	11328 <putchar_unlocked@plt+0x3b0>
   11320:	strb	r1, [sp, #129]	; 0x81
   11324:	strb	r1, [sp, #161]	; 0xa1
   11328:	ldr	r2, [sp, #20]
   1132c:	add	r4, r6, #1
   11330:	cmp	r2, #0
   11334:	strbne	lr, [sp, #181]	; 0xb5
   11338:	cmp	sl, #0
   1133c:	strbne	lr, [sp, #169]	; 0xa9
   11340:	cmp	r3, #0
   11344:	strbne	lr, [sp, #164]	; 0xa4
   11348:	cmp	r0, #42	; 0x2a
   1134c:	beq	113d4 <putchar_unlocked@plt+0x45c>
   11350:	mov	r1, r6
   11354:	sub	r2, r6, r9
   11358:	ldrb	r3, [r1], #1
   1135c:	sub	r3, r3, #48	; 0x30
   11360:	cmp	r3, #9
   11364:	bls	114d4 <putchar_unlocked@plt+0x55c>
   11368:	mov	r4, r6
   1136c:	mov	r3, #0
   11370:	str	r3, [sp, #20]
   11374:	b	11438 <putchar_unlocked@plt+0x4c0>
   11378:	cmp	r0, #48	; 0x30
   1137c:	beq	113b0 <putchar_unlocked@plt+0x438>
   11380:	cmp	r0, #73	; 0x49
   11384:	beq	113bc <putchar_unlocked@plt+0x444>
   11388:	cmp	r0, #45	; 0x2d
   1138c:	b	112d8 <putchar_unlocked@plt+0x360>
   11390:	mov	r3, #1
   11394:	mov	lr, #0
   11398:	mov	sl, r3
   1139c:	mov	r2, r3
   113a0:	mov	r4, r3
   113a4:	str	r3, [sp, #20]
   113a8:	mov	ip, #0
   113ac:	b	112a8 <putchar_unlocked@plt+0x330>
   113b0:	mov	r2, #1
   113b4:	mov	r4, r2
   113b8:	b	113a8 <putchar_unlocked@plt+0x430>
   113bc:	mov	r2, #1
   113c0:	mov	ip, #0
   113c4:	mov	r4, r2
   113c8:	mov	r7, r2
   113cc:	mov	r1, ip
   113d0:	b	112a8 <putchar_unlocked@plt+0x330>
   113d4:	ldr	r3, [sp, #28]
   113d8:	cmp	r5, #0
   113dc:	streq	r5, [sp, #12]
   113e0:	add	r2, r3, #1
   113e4:	moveq	r3, #1
   113e8:	beq	11370 <putchar_unlocked@plt+0x3f8>
   113ec:	ldr	r0, [fp]
   113f0:	mov	r7, #0
   113f4:	mvn	r6, #0
   113f8:	str	r2, [sp, #28]
   113fc:	bl	11ebc <putchar_unlocked@plt+0xf44>
   11400:	adds	r3, r0, #-2147483648	; 0x80000000
   11404:	str	r3, [sp, #32]
   11408:	adc	r3, r1, #0
   1140c:	str	r3, [sp, #36]	; 0x24
   11410:	ldrd	r2, [sp, #32]
   11414:	cmp	r3, r7
   11418:	cmpeq	r2, r6
   1141c:	bhi	114a4 <putchar_unlocked@plt+0x52c>
   11420:	ldr	r2, [sp, #28]
   11424:	mov	r3, #1
   11428:	add	fp, fp, #4
   1142c:	sub	r5, r5, #1
   11430:	str	r0, [sp, #12]
   11434:	str	r3, [sp, #20]
   11438:	ldrb	r3, [r4]
   1143c:	mov	sl, #0
   11440:	cmp	r3, #46	; 0x2e
   11444:	bne	11598 <putchar_unlocked@plt+0x620>
   11448:	ldrb	r3, [r4, #1]
   1144c:	strb	sl, [sp, #163]	; 0xa3
   11450:	cmp	r3, #42	; 0x2a
   11454:	addne	r7, r4, #1
   11458:	subne	r4, r2, r4
   1145c:	bne	11500 <putchar_unlocked@plt+0x588>
   11460:	cmp	r5, #0
   11464:	add	r7, r4, #2
   11468:	add	r2, r2, #2
   1146c:	beq	115a0 <putchar_unlocked@plt+0x628>
   11470:	ldr	r0, [fp]
   11474:	str	r2, [sp, #16]
   11478:	bl	11ebc <putchar_unlocked@plt+0xf44>
   1147c:	cmp	r0, #0
   11480:	ldr	r2, [sp, #16]
   11484:	sbcs	r3, r1, #0
   11488:	blt	114f0 <putchar_unlocked@plt+0x578>
   1148c:	cmp	r0, #-2147483648	; 0x80000000
   11490:	sbcs	r3, r1, #0
   11494:	blt	114dc <putchar_unlocked@plt+0x564>
   11498:	mov	r2, #5
   1149c:	ldr	r1, [pc, #1396]	; 11a18 <putchar_unlocked@plt+0xaa0>
   114a0:	b	114ac <putchar_unlocked@plt+0x534>
   114a4:	ldr	r1, [pc, #1392]	; 11a1c <putchar_unlocked@plt+0xaa4>
   114a8:	mov	r2, #5
   114ac:	mov	r0, #0
   114b0:	bl	10d8c <dcgettext@plt>
   114b4:	mov	r4, r0
   114b8:	ldr	r0, [fp]
   114bc:	bl	139e4 <putchar_unlocked@plt+0x2a6c>
   114c0:	mov	r3, r0
   114c4:	mov	r2, r4
   114c8:	mov	r1, #0
   114cc:	mov	r0, #1
   114d0:	bl	10e04 <error@plt>
   114d4:	mov	r6, r1
   114d8:	b	11350 <putchar_unlocked@plt+0x3d8>
   114dc:	str	r0, [sp, #16]
   114e0:	add	fp, fp, #4
   114e4:	sub	r5, r5, #1
   114e8:	mov	sl, #1
   114ec:	b	1151c <putchar_unlocked@plt+0x5a4>
   114f0:	mvn	r3, #0
   114f4:	str	r3, [sp, #16]
   114f8:	b	114e0 <putchar_unlocked@plt+0x568>
   114fc:	mov	r7, r1
   11500:	mov	r1, r7
   11504:	add	r2, r7, r4
   11508:	ldrb	r3, [r1], #1
   1150c:	sub	r3, r3, #48	; 0x30
   11510:	cmp	r3, #9
   11514:	bls	114fc <putchar_unlocked@plt+0x584>
   11518:	mov	sl, #0
   1151c:	ldr	r0, [pc, #1276]	; 11a20 <putchar_unlocked@plt+0xaa8>
   11520:	str	r7, [sp, #28]
   11524:	ldrb	r4, [r7], #1
   11528:	sub	r3, r4, #104	; 0x68
   1152c:	and	r1, r4, #223	; 0xdf
   11530:	uxtb	r3, r3
   11534:	sub	r1, r1, #76	; 0x4c
   11538:	cmp	r3, #18
   1153c:	clz	r1, r1
   11540:	mvnls	r3, r0, lsr r3
   11544:	movhi	r3, #1
   11548:	lsr	r1, r1, #5
   1154c:	andls	r3, r3, #1
   11550:	eor	r3, r3, #1
   11554:	orrs	r3, r1, r3
   11558:	bne	11520 <putchar_unlocked@plt+0x5a8>
   1155c:	add	r3, sp, #320	; 0x140
   11560:	add	r3, r3, r4
   11564:	ldrb	r6, [r3, #-256]	; 0xffffff00
   11568:	cmp	r6, #0
   1156c:	bne	115a8 <putchar_unlocked@plt+0x630>
   11570:	mov	r2, #5
   11574:	ldr	r1, [pc, #1192]	; 11a24 <putchar_unlocked@plt+0xaac>
   11578:	mov	r0, r6
   1157c:	bl	10d8c <dcgettext@plt>
   11580:	mov	r2, r0
   11584:	sub	r3, r7, r9
   11588:	str	r9, [sp]
   1158c:	mov	r1, r6
   11590:	mov	r0, #1
   11594:	bl	10e04 <error@plt>
   11598:	mov	r7, r4
   1159c:	b	1151c <putchar_unlocked@plt+0x5a4>
   115a0:	str	r5, [sp, #16]
   115a4:	b	114e8 <putchar_unlocked@plt+0x570>
   115a8:	cmp	r5, #0
   115ac:	movne	r3, fp
   115b0:	subne	r5, r5, #1
   115b4:	ldreq	r7, [pc, #1048]	; 119d4 <putchar_unlocked@plt+0xa5c>
   115b8:	ldrne	r7, [r3], #4
   115bc:	movne	fp, r3
   115c0:	cmp	r4, #100	; 0x64
   115c4:	beq	1173c <putchar_unlocked@plt+0x7c4>
   115c8:	bhi	1160c <putchar_unlocked@plt+0x694>
   115cc:	cmp	r4, #71	; 0x47
   115d0:	bhi	115fc <putchar_unlocked@plt+0x684>
   115d4:	cmp	r4, #69	; 0x45
   115d8:	movcs	r3, #1
   115dc:	ldrcs	r8, [pc, #1092]	; 11a28 <putchar_unlocked@plt+0xab0>
   115e0:	bcs	1162c <putchar_unlocked@plt+0x6b4>
   115e4:	cmp	r4, #65	; 0x41
   115e8:	ldr	r8, [pc, #1080]	; 11a28 <putchar_unlocked@plt+0xab0>
   115ec:	moveq	r3, #1
   115f0:	movne	r8, r9
   115f4:	movne	r3, #0
   115f8:	b	1162c <putchar_unlocked@plt+0x6b4>
   115fc:	cmp	r4, #88	; 0x58
   11600:	beq	1173c <putchar_unlocked@plt+0x7c4>
   11604:	cmp	r4, #97	; 0x61
   11608:	b	115e8 <putchar_unlocked@plt+0x670>
   1160c:	cmp	r4, #105	; 0x69
   11610:	beq	1173c <putchar_unlocked@plt+0x7c4>
   11614:	bhi	11718 <putchar_unlocked@plt+0x7a0>
   11618:	cmp	r4, #103	; 0x67
   1161c:	ldr	r8, [pc, #1028]	; 11a28 <putchar_unlocked@plt+0xab0>
   11620:	movls	r3, #1
   11624:	movhi	r3, #0
   11628:	movhi	r8, r9
   1162c:	add	r0, r2, #2
   11630:	str	r3, [sp, #48]	; 0x30
   11634:	add	r0, r0, r3
   11638:	str	r2, [sp, #52]	; 0x34
   1163c:	bl	14274 <putchar_unlocked@plt+0x32fc>
   11640:	mov	r1, r9
   11644:	ldr	r2, [sp, #52]	; 0x34
   11648:	mov	r6, r0
   1164c:	bl	10e64 <mempcpy@plt>
   11650:	ldr	r3, [sp, #48]	; 0x30
   11654:	mov	r1, r8
   11658:	mov	r2, r3
   1165c:	bl	10e64 <mempcpy@plt>
   11660:	mov	r3, #0
   11664:	cmp	r4, #100	; 0x64
   11668:	strb	r4, [r0]
   1166c:	strb	r3, [r0, #1]
   11670:	beq	11840 <putchar_unlocked@plt+0x8c8>
   11674:	bhi	117dc <putchar_unlocked@plt+0x864>
   11678:	cmp	r4, #71	; 0x47
   1167c:	bhi	11748 <putchar_unlocked@plt+0x7d0>
   11680:	cmp	r4, #69	; 0x45
   11684:	bcs	11690 <putchar_unlocked@plt+0x718>
   11688:	cmp	r4, #65	; 0x41
   1168c:	bne	117f8 <putchar_unlocked@plt+0x880>
   11690:	ldrb	r3, [r7]
   11694:	cmp	r3, #39	; 0x27
   11698:	cmpne	r3, #34	; 0x22
   1169c:	bne	118f0 <putchar_unlocked@plt+0x978>
   116a0:	ldrb	r3, [r7, #1]
   116a4:	cmp	r3, #0
   116a8:	beq	118f0 <putchar_unlocked@plt+0x978>
   116ac:	vmov	s15, r3
   116b0:	ldrb	r3, [r7, #2]
   116b4:	cmp	r3, #0
   116b8:	vcvt.f64.u32	d8, s15
   116bc:	beq	116f4 <putchar_unlocked@plt+0x77c>
   116c0:	ldr	r3, [pc, #784]	; 119d8 <putchar_unlocked@plt+0xa60>
   116c4:	ldrb	r4, [r3, #4]
   116c8:	cmp	r4, #0
   116cc:	bne	116f4 <putchar_unlocked@plt+0x77c>
   116d0:	mov	r2, #5
   116d4:	ldr	r1, [pc, #848]	; 11a2c <putchar_unlocked@plt+0xab4>
   116d8:	mov	r0, r4
   116dc:	bl	10d8c <dcgettext@plt>
   116e0:	mov	r2, r0
   116e4:	add	r3, r7, #2
   116e8:	mov	r1, r4
   116ec:	mov	r0, r4
   116f0:	bl	10e04 <error@plt>
   116f4:	ldr	r3, [sp, #20]
   116f8:	cmp	r3, #0
   116fc:	bne	1192c <putchar_unlocked@plt+0x9b4>
   11700:	cmp	sl, #0
   11704:	vmov	r2, r3, d8
   11708:	bne	1191c <putchar_unlocked@plt+0x9a4>
   1170c:	mov	r0, r6
   11710:	bl	145e0 <putchar_unlocked@plt+0x3668>
   11714:	b	117f8 <putchar_unlocked@plt+0x880>
   11718:	cmp	r4, #117	; 0x75
   1171c:	beq	1173c <putchar_unlocked@plt+0x7c4>
   11720:	cmp	r4, #120	; 0x78
   11724:	beq	1173c <putchar_unlocked@plt+0x7c4>
   11728:	cmp	r4, #111	; 0x6f
   1172c:	ldr	r8, [pc, #764]	; 11a30 <putchar_unlocked@plt+0xab8>
   11730:	moveq	r3, #2
   11734:	movne	r8, r9
   11738:	b	115f4 <putchar_unlocked@plt+0x67c>
   1173c:	mov	r3, #2
   11740:	ldr	r8, [pc, #744]	; 11a30 <putchar_unlocked@plt+0xab8>
   11744:	b	1162c <putchar_unlocked@plt+0x6b4>
   11748:	cmp	r4, #97	; 0x61
   1174c:	beq	11690 <putchar_unlocked@plt+0x718>
   11750:	cmp	r4, #99	; 0x63
   11754:	beq	11954 <putchar_unlocked@plt+0x9dc>
   11758:	cmp	r4, #88	; 0x58
   1175c:	bne	117f8 <putchar_unlocked@plt+0x880>
   11760:	ldrb	r3, [r7]
   11764:	cmp	r3, #39	; 0x27
   11768:	cmpne	r3, #34	; 0x22
   1176c:	bne	118a0 <putchar_unlocked@plt+0x928>
   11770:	ldrb	r8, [r7, #1]
   11774:	cmp	r8, #0
   11778:	beq	118a0 <putchar_unlocked@plt+0x928>
   1177c:	ldrb	r3, [r7, #2]
   11780:	uxtb	r8, r8
   11784:	mov	r9, #0
   11788:	cmp	r3, #0
   1178c:	beq	117c4 <putchar_unlocked@plt+0x84c>
   11790:	ldr	r3, [pc, #576]	; 119d8 <putchar_unlocked@plt+0xa60>
   11794:	ldrb	r4, [r3, #4]
   11798:	cmp	r4, #0
   1179c:	bne	117c4 <putchar_unlocked@plt+0x84c>
   117a0:	mov	r2, #5
   117a4:	ldr	r1, [pc, #640]	; 11a2c <putchar_unlocked@plt+0xab4>
   117a8:	mov	r0, r4
   117ac:	bl	10d8c <dcgettext@plt>
   117b0:	mov	r2, r0
   117b4:	add	r3, r7, #2
   117b8:	mov	r1, r4
   117bc:	mov	r0, r4
   117c0:	bl	10e04 <error@plt>
   117c4:	ldr	r3, [sp, #20]
   117c8:	cmp	r3, #0
   117cc:	bne	118d8 <putchar_unlocked@plt+0x960>
   117d0:	mov	r2, r8
   117d4:	mov	r3, r9
   117d8:	b	1185c <putchar_unlocked@plt+0x8e4>
   117dc:	cmp	r4, #111	; 0x6f
   117e0:	beq	11760 <putchar_unlocked@plt+0x7e8>
   117e4:	bhi	11804 <putchar_unlocked@plt+0x88c>
   117e8:	cmp	r4, #103	; 0x67
   117ec:	bls	11690 <putchar_unlocked@plt+0x718>
   117f0:	cmp	r4, #105	; 0x69
   117f4:	beq	11840 <putchar_unlocked@plt+0x8c8>
   117f8:	mov	r0, r6
   117fc:	bl	12394 <putchar_unlocked@plt+0x141c>
   11800:	b	111a8 <putchar_unlocked@plt+0x230>
   11804:	cmp	r4, #117	; 0x75
   11808:	beq	11760 <putchar_unlocked@plt+0x7e8>
   1180c:	cmp	r4, #120	; 0x78
   11810:	beq	11760 <putchar_unlocked@plt+0x7e8>
   11814:	cmp	r4, #115	; 0x73
   11818:	bne	117f8 <putchar_unlocked@plt+0x880>
   1181c:	ldr	r3, [sp, #20]
   11820:	cmp	r3, #0
   11824:	bne	11984 <putchar_unlocked@plt+0xa0c>
   11828:	cmp	sl, #0
   1182c:	bne	11970 <putchar_unlocked@plt+0x9f8>
   11830:	mov	r1, r7
   11834:	mov	r0, r6
   11838:	bl	145e0 <putchar_unlocked@plt+0x3668>
   1183c:	b	117f8 <putchar_unlocked@plt+0x880>
   11840:	mov	r0, r7
   11844:	bl	11ebc <putchar_unlocked@plt+0xf44>
   11848:	mov	r3, r1
   1184c:	ldr	r1, [sp, #20]
   11850:	mov	r2, r0
   11854:	cmp	r1, #0
   11858:	bne	11870 <putchar_unlocked@plt+0x8f8>
   1185c:	cmp	sl, #0
   11860:	bne	118d0 <putchar_unlocked@plt+0x958>
   11864:	mov	r0, r6
   11868:	bl	145e0 <putchar_unlocked@plt+0x3668>
   1186c:	b	117f8 <putchar_unlocked@plt+0x880>
   11870:	cmp	sl, #0
   11874:	bne	11888 <putchar_unlocked@plt+0x910>
   11878:	ldr	r1, [sp, #12]
   1187c:	mov	r0, r6
   11880:	bl	145e0 <putchar_unlocked@plt+0x3668>
   11884:	b	117f8 <putchar_unlocked@plt+0x880>
   11888:	strd	r2, [sp]
   1188c:	mov	r0, r6
   11890:	ldr	r1, [sp, #12]
   11894:	ldr	r2, [sp, #16]
   11898:	bl	145e0 <putchar_unlocked@plt+0x3668>
   1189c:	b	117f8 <putchar_unlocked@plt+0x880>
   118a0:	bl	10ea0 <__errno_location@plt>
   118a4:	mov	r2, #0
   118a8:	add	r1, sp, #60	; 0x3c
   118ac:	str	r2, [r0]
   118b0:	mov	r0, r7
   118b4:	bl	10edc <strtoumax@plt>
   118b8:	mov	r8, r0
   118bc:	mov	r9, r1
   118c0:	ldr	r1, [sp, #60]	; 0x3c
   118c4:	mov	r0, r7
   118c8:	bl	11e20 <putchar_unlocked@plt+0xea8>
   118cc:	b	117c4 <putchar_unlocked@plt+0x84c>
   118d0:	ldr	r1, [sp, #16]
   118d4:	b	1187c <putchar_unlocked@plt+0x904>
   118d8:	cmp	sl, #0
   118dc:	moveq	r2, r8
   118e0:	moveq	r3, r9
   118e4:	beq	11878 <putchar_unlocked@plt+0x900>
   118e8:	strd	r8, [sp]
   118ec:	b	1188c <putchar_unlocked@plt+0x914>
   118f0:	bl	10ea0 <__errno_location@plt>
   118f4:	mov	r3, #0
   118f8:	add	r1, sp, #60	; 0x3c
   118fc:	str	r3, [r0]
   11900:	mov	r0, r7
   11904:	bl	12228 <putchar_unlocked@plt+0x12b0>
   11908:	mov	r0, r7
   1190c:	ldr	r1, [sp, #60]	; 0x3c
   11910:	vmov.f64	d8, d0
   11914:	bl	11e20 <putchar_unlocked@plt+0xea8>
   11918:	b	116f4 <putchar_unlocked@plt+0x77c>
   1191c:	ldr	r1, [sp, #16]
   11920:	mov	r0, r6
   11924:	bl	145e0 <putchar_unlocked@plt+0x3668>
   11928:	b	117f8 <putchar_unlocked@plt+0x880>
   1192c:	cmp	sl, #0
   11930:	vmoveq	r2, r3, d8
   11934:	ldreq	r1, [sp, #12]
   11938:	beq	11920 <putchar_unlocked@plt+0x9a8>
   1193c:	mov	r0, r6
   11940:	vstr	d8, [sp]
   11944:	ldr	r1, [sp, #12]
   11948:	ldr	r2, [sp, #16]
   1194c:	bl	145e0 <putchar_unlocked@plt+0x3668>
   11950:	b	117f8 <putchar_unlocked@plt+0x880>
   11954:	ldr	r3, [sp, #20]
   11958:	ldrb	r2, [r7]
   1195c:	cmp	r3, #0
   11960:	moveq	r1, r2
   11964:	beq	11834 <putchar_unlocked@plt+0x8bc>
   11968:	ldr	r1, [sp, #12]
   1196c:	b	11978 <putchar_unlocked@plt+0xa00>
   11970:	ldr	r1, [sp, #16]
   11974:	mov	r2, r7
   11978:	mov	r0, r6
   1197c:	bl	145e0 <putchar_unlocked@plt+0x3668>
   11980:	b	117f8 <putchar_unlocked@plt+0x880>
   11984:	cmp	sl, #0
   11988:	moveq	r2, r7
   1198c:	beq	11968 <putchar_unlocked@plt+0x9f0>
   11990:	mov	r3, r7
   11994:	mov	r0, r6
   11998:	ldr	r1, [sp, #12]
   1199c:	ldr	r2, [sp, #16]
   119a0:	bl	145e0 <putchar_unlocked@plt+0x3668>
   119a4:	b	117f8 <putchar_unlocked@plt+0x880>
   119a8:	mov	r1, #0
   119ac:	mov	r0, r9
   119b0:	bl	11b24 <putchar_unlocked@plt+0xbac>
   119b4:	add	r3, r9, r0
   119b8:	str	r3, [sp, #28]
   119bc:	b	111a8 <putchar_unlocked@plt+0x230>
   119c0:	cmp	r4, #0
   119c4:	bne	112f4 <putchar_unlocked@plt+0x37c>
   119c8:	cmp	r2, #0
   119cc:	bne	11314 <putchar_unlocked@plt+0x39c>
   119d0:	b	11328 <putchar_unlocked@plt+0x3b0>
   119d4:	andeq	r4, r1, r2, lsl lr
   119d8:	andeq	r6, r2, ip, asr r1
   119dc:	andeq	r5, r1, r3, lsr #8
   119e0:	andeq	r5, r1, sl, ror r3
   119e4:	andeq	r2, r1, r0, asr #5
   119e8:	andeq	r5, r1, fp, lsr r4
   119ec:	andeq	r5, r1, fp, asr #8
   119f0:	andeq	r5, r1, r2, asr r4
   119f4:	andeq	r5, r1, ip, asr r4
   119f8:	andeq	r6, r2, r4, asr r1
   119fc:	andeq	r5, r1, r6, ror r3
   11a00:	strdeq	r6, [r2], -ip
   11a04:	andeq	r4, r1, fp, ror #26
   11a08:	andeq	r5, r1, ip, ror #8
   11a0c:	andeq	r5, r1, pc, ror #8
   11a10:	ldrdeq	r5, [r1], -r4
   11a14:	tsteq	r1, r1, lsl #2
   11a18:	muleq	r1, r7, r4
   11a1c:	andeq	r5, r1, pc, ror r4
   11a20:	andeq	r1, r4, r5
   11a24:	andeq	r5, r1, sp, lsr #9
   11a28:	andeq	r5, r1, r1, lsr #8
   11a2c:	andeq	r4, r1, r2, lsr #26
   11a30:	andeq	r5, r1, sp, lsl r4
   11a34:	mov	fp, #0
   11a38:	mov	lr, #0
   11a3c:	pop	{r1}		; (ldr r1, [sp], #4)
   11a40:	mov	r2, sp
   11a44:	push	{r2}		; (str r2, [sp, #-4]!)
   11a48:	push	{r0}		; (str r0, [sp, #-4]!)
   11a4c:	ldr	ip, [pc, #16]	; 11a64 <putchar_unlocked@plt+0xaec>
   11a50:	push	{ip}		; (str ip, [sp, #-4]!)
   11a54:	ldr	r0, [pc, #12]	; 11a68 <putchar_unlocked@plt+0xaf0>
   11a58:	ldr	r3, [pc, #12]	; 11a6c <putchar_unlocked@plt+0xaf4>
   11a5c:	bl	10e34 <__libc_start_main@plt>
   11a60:	bl	10f6c <abort@plt>
   11a64:	andeq	r4, r1, r8, lsr #24
   11a68:	andeq	r0, r1, r0, lsr #31
   11a6c:	andeq	r4, r1, r8, asr #23
   11a70:	ldr	r3, [pc, #20]	; 11a8c <putchar_unlocked@plt+0xb14>
   11a74:	ldr	r2, [pc, #20]	; 11a90 <putchar_unlocked@plt+0xb18>
   11a78:	add	r3, pc, r3
   11a7c:	ldr	r2, [r3, r2]
   11a80:	cmp	r2, #0
   11a84:	bxeq	lr
   11a88:	b	10e58 <__gmon_start__@plt>
   11a8c:	andeq	r4, r1, r0, lsl #11
   11a90:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11a94:	ldr	r0, [pc, #24]	; 11ab4 <putchar_unlocked@plt+0xb3c>
   11a98:	ldr	r3, [pc, #24]	; 11ab8 <putchar_unlocked@plt+0xb40>
   11a9c:	cmp	r3, r0
   11aa0:	bxeq	lr
   11aa4:	ldr	r3, [pc, #16]	; 11abc <putchar_unlocked@plt+0xb44>
   11aa8:	cmp	r3, #0
   11aac:	bxeq	lr
   11ab0:	bx	r3
   11ab4:	andeq	r6, r2, r4, asr #2
   11ab8:	andeq	r6, r2, r4, asr #2
   11abc:	andeq	r0, r0, r0
   11ac0:	ldr	r0, [pc, #36]	; 11aec <putchar_unlocked@plt+0xb74>
   11ac4:	ldr	r1, [pc, #36]	; 11af0 <putchar_unlocked@plt+0xb78>
   11ac8:	sub	r1, r1, r0
   11acc:	asr	r1, r1, #2
   11ad0:	add	r1, r1, r1, lsr #31
   11ad4:	asrs	r1, r1, #1
   11ad8:	bxeq	lr
   11adc:	ldr	r3, [pc, #16]	; 11af4 <putchar_unlocked@plt+0xb7c>
   11ae0:	cmp	r3, #0
   11ae4:	bxeq	lr
   11ae8:	bx	r3
   11aec:	andeq	r6, r2, r4, asr #2
   11af0:	andeq	r6, r2, r4, asr #2
   11af4:	andeq	r0, r0, r0
   11af8:	push	{r4, lr}
   11afc:	ldr	r4, [pc, #24]	; 11b1c <putchar_unlocked@plt+0xba4>
   11b00:	ldrb	r3, [r4]
   11b04:	cmp	r3, #0
   11b08:	popne	{r4, pc}
   11b0c:	bl	11a94 <putchar_unlocked@plt+0xb1c>
   11b10:	mov	r3, #1
   11b14:	strb	r3, [r4]
   11b18:	pop	{r4, pc}
   11b1c:	andeq	r6, r2, r8, asr r1
   11b20:	b	11ac0 <putchar_unlocked@plt+0xb48>
   11b24:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   11b28:	mov	r7, r0
   11b2c:	ldrb	r6, [r0, #1]
   11b30:	cmp	r6, #120	; 0x78
   11b34:	bne	11bcc <putchar_unlocked@plt+0xc54>
   11b38:	bl	10e70 <__ctype_b_loc@plt>
   11b3c:	mov	r2, #0
   11b40:	add	r1, r7, #2
   11b44:	ldr	lr, [r0]
   11b48:	mov	r0, r2
   11b4c:	ldrb	r3, [r1]
   11b50:	mov	r4, r1
   11b54:	add	r1, r1, #1
   11b58:	lsl	ip, r3, #1
   11b5c:	ldrh	ip, [lr, ip]
   11b60:	tst	ip, #4096	; 0x1000
   11b64:	bne	11b90 <putchar_unlocked@plt+0xc18>
   11b68:	cmp	r2, #0
   11b6c:	bne	11c1c <putchar_unlocked@plt+0xca4>
   11b70:	mov	r2, #5
   11b74:	ldr	r1, [pc, #660]	; 11e10 <putchar_unlocked@plt+0xe98>
   11b78:	mov	r0, #0
   11b7c:	bl	10d8c <dcgettext@plt>
   11b80:	mov	r2, r0
   11b84:	mov	r1, #0
   11b88:	mov	r0, #1
   11b8c:	bl	10e04 <error@plt>
   11b90:	sub	ip, r3, #97	; 0x61
   11b94:	lsl	r0, r0, #4
   11b98:	cmp	ip, #5
   11b9c:	subls	r3, r3, #87	; 0x57
   11ba0:	bls	11bb4 <putchar_unlocked@plt+0xc3c>
   11ba4:	sub	ip, r3, #65	; 0x41
   11ba8:	cmp	ip, #5
   11bac:	subls	r3, r3, #55	; 0x37
   11bb0:	subhi	r3, r3, #48	; 0x30
   11bb4:	cmp	r2, #1
   11bb8:	add	r0, r0, r3
   11bbc:	mov	r4, r1
   11bc0:	beq	11c1c <putchar_unlocked@plt+0xca4>
   11bc4:	mov	r2, #1
   11bc8:	b	11b4c <putchar_unlocked@plt+0xbd4>
   11bcc:	sub	r3, r6, #48	; 0x30
   11bd0:	add	r4, r0, #1
   11bd4:	cmp	r3, #7
   11bd8:	bhi	11c30 <putchar_unlocked@plt+0xcb8>
   11bdc:	cmp	r6, #48	; 0x30
   11be0:	movne	r6, #0
   11be4:	andeq	r6, r1, #1
   11be8:	mov	r0, #0
   11bec:	add	r6, r4, r6
   11bf0:	add	r1, r6, #3
   11bf4:	mov	r4, r6
   11bf8:	ldrb	r3, [r6], #1
   11bfc:	sub	r3, r3, #48	; 0x30
   11c00:	uxtb	r2, r3
   11c04:	cmp	r2, #7
   11c08:	bhi	11c1c <putchar_unlocked@plt+0xca4>
   11c0c:	cmp	r1, r6
   11c10:	add	r0, r3, r0, lsl #3
   11c14:	mov	r4, r6
   11c18:	bne	11bf4 <putchar_unlocked@plt+0xc7c>
   11c1c:	bl	10f78 <putchar_unlocked@plt>
   11c20:	sub	r0, r4, r7
   11c24:	sub	r0, r0, #1
   11c28:	add	sp, sp, #8
   11c2c:	pop	{r4, r5, r6, r7, r8, pc}
   11c30:	cmp	r6, #0
   11c34:	beq	11df0 <putchar_unlocked@plt+0xe78>
   11c38:	mov	r1, r6
   11c3c:	ldr	r0, [pc, #464]	; 11e14 <putchar_unlocked@plt+0xe9c>
   11c40:	bl	10e94 <strchr@plt>
   11c44:	subs	r5, r0, #0
   11c48:	beq	11d08 <putchar_unlocked@plt+0xd90>
   11c4c:	sub	r3, r6, #97	; 0x61
   11c50:	add	r4, r7, #2
   11c54:	cmp	r3, #21
   11c58:	ldrls	pc, [pc, r3, lsl #2]
   11c5c:	b	11d00 <putchar_unlocked@plt+0xd88>
   11c60:			; <UNDEFINED> instruction: 0x00011cb8
   11c64:	andeq	r1, r1, r0, asr #25
   11c68:	andeq	r1, r1, r8, asr #25
   11c6c:	andeq	r1, r1, r0, lsl #26
   11c70:	ldrdeq	r1, [r1], -r0
   11c74:	ldrdeq	r1, [r1], -r8
   11c78:	andeq	r1, r1, r0, lsl #26
   11c7c:	andeq	r1, r1, r0, lsl #26
   11c80:	andeq	r1, r1, r0, lsl #26
   11c84:	andeq	r1, r1, r0, lsl #26
   11c88:	andeq	r1, r1, r0, lsl #26
   11c8c:	andeq	r1, r1, r0, lsl #26
   11c90:	andeq	r1, r1, r0, lsl #26
   11c94:	andeq	r1, r1, r0, ror #25
   11c98:	andeq	r1, r1, r0, lsl #26
   11c9c:	andeq	r1, r1, r0, lsl #26
   11ca0:	andeq	r1, r1, r0, lsl #26
   11ca4:	andeq	r1, r1, r8, ror #25
   11ca8:	andeq	r1, r1, r0, lsl #26
   11cac:	strdeq	r1, [r1], -r0
   11cb0:	andeq	r1, r1, r0, lsl #26
   11cb4:	strdeq	r1, [r1], -r8
   11cb8:	mov	r0, #7
   11cbc:	b	11c1c <putchar_unlocked@plt+0xca4>
   11cc0:	mov	r0, #8
   11cc4:	b	11c1c <putchar_unlocked@plt+0xca4>
   11cc8:	mov	r0, #0
   11ccc:	bl	10e7c <exit@plt>
   11cd0:	mov	r0, #27
   11cd4:	b	11c1c <putchar_unlocked@plt+0xca4>
   11cd8:	mov	r0, #12
   11cdc:	b	11c1c <putchar_unlocked@plt+0xca4>
   11ce0:	mov	r0, #10
   11ce4:	b	11c1c <putchar_unlocked@plt+0xca4>
   11ce8:	mov	r0, #13
   11cec:	b	11c1c <putchar_unlocked@plt+0xca4>
   11cf0:	mov	r0, #9
   11cf4:	b	11c1c <putchar_unlocked@plt+0xca4>
   11cf8:	mov	r0, #11
   11cfc:	b	11c1c <putchar_unlocked@plt+0xca4>
   11d00:	mov	r0, r6
   11d04:	b	11c1c <putchar_unlocked@plt+0xca4>
   11d08:	and	r3, r6, #223	; 0xdf
   11d0c:	cmp	r3, #85	; 0x55
   11d10:	bne	11df0 <putchar_unlocked@plt+0xe78>
   11d14:	cmp	r6, #117	; 0x75
   11d18:	moveq	r8, #4
   11d1c:	movne	r8, #8
   11d20:	bl	10e70 <__ctype_b_loc@plt>
   11d24:	ldr	r0, [r0]
   11d28:	add	r2, r7, #2
   11d2c:	add	r1, r2, r8
   11d30:	ldrb	r3, [r2], #1
   11d34:	lsl	ip, r3, #1
   11d38:	ldrh	ip, [r0, ip]
   11d3c:	tst	ip, #4096	; 0x1000
   11d40:	beq	11b70 <putchar_unlocked@plt+0xbf8>
   11d44:	sub	ip, r3, #97	; 0x61
   11d48:	lsl	r5, r5, #4
   11d4c:	cmp	ip, #5
   11d50:	subls	r3, r3, #87	; 0x57
   11d54:	bls	11d68 <putchar_unlocked@plt+0xdf0>
   11d58:	sub	ip, r3, #65	; 0x41
   11d5c:	cmp	ip, #5
   11d60:	subls	r3, r3, #55	; 0x37
   11d64:	subhi	r3, r3, #48	; 0x30
   11d68:	cmp	r1, r2
   11d6c:	add	r5, r5, r3
   11d70:	mov	r4, r2
   11d74:	bne	11d30 <putchar_unlocked@plt+0xdb8>
   11d78:	cmp	r5, #159	; 0x9f
   11d7c:	movhi	r3, #0
   11d80:	movls	r3, #1
   11d84:	cmp	r5, #36	; 0x24
   11d88:	moveq	r3, #0
   11d8c:	cmp	r3, #0
   11d90:	beq	11da0 <putchar_unlocked@plt+0xe28>
   11d94:	bic	r3, r5, #32
   11d98:	cmp	r3, #64	; 0x40
   11d9c:	bne	11dac <putchar_unlocked@plt+0xe34>
   11da0:	sub	r3, r5, #55296	; 0xd800
   11da4:	cmp	r3, #2048	; 0x800
   11da8:	bcs	11dd8 <putchar_unlocked@plt+0xe60>
   11dac:	mov	r2, #5
   11db0:	ldr	r1, [pc, #96]	; 11e18 <putchar_unlocked@plt+0xea0>
   11db4:	mov	r0, #0
   11db8:	bl	10d8c <dcgettext@plt>
   11dbc:	mov	r2, r0
   11dc0:	mov	r3, r6
   11dc4:	str	r8, [sp]
   11dc8:	mov	r1, #0
   11dcc:	mov	r0, #1
   11dd0:	str	r5, [sp, #4]
   11dd4:	bl	10e04 <error@plt>
   11dd8:	ldr	r3, [pc, #60]	; 11e1c <putchar_unlocked@plt+0xea4>
   11ddc:	mov	r2, #0
   11de0:	mov	r1, r5
   11de4:	ldr	r0, [r3]
   11de8:	bl	13c7c <putchar_unlocked@plt+0x2d04>
   11dec:	b	11c20 <putchar_unlocked@plt+0xca8>
   11df0:	mov	r0, #92	; 0x5c
   11df4:	bl	10f78 <putchar_unlocked@plt>
   11df8:	ldrb	r0, [r7, #1]
   11dfc:	cmp	r0, #0
   11e00:	beq	11c20 <putchar_unlocked@plt+0xca8>
   11e04:	bl	10f78 <putchar_unlocked@plt>
   11e08:	add	r4, r7, #2
   11e0c:	b	11c20 <putchar_unlocked@plt+0xca8>
   11e10:	andeq	r4, r1, r8, lsl #25
   11e14:	andeq	r4, r1, sp, lsr #25
   11e18:			; <UNDEFINED> instruction: 0x00014cb9
   11e1c:	andeq	r6, r2, r4, asr r1
   11e20:	push	{r4, r5, r6, lr}
   11e24:	mov	r5, r0
   11e28:	mov	r6, r1
   11e2c:	bl	10ea0 <__errno_location@plt>
   11e30:	ldr	r4, [r0]
   11e34:	cmp	r4, #0
   11e38:	beq	11e68 <putchar_unlocked@plt+0xef0>
   11e3c:	mov	r0, r5
   11e40:	bl	139e4 <putchar_unlocked@plt+0x2a6c>
   11e44:	ldr	r2, [pc, #96]	; 11eac <putchar_unlocked@plt+0xf34>
   11e48:	mov	r3, r0
   11e4c:	mov	r1, r4
   11e50:	mov	r0, #0
   11e54:	bl	10e04 <error@plt>
   11e58:	ldr	r3, [pc, #80]	; 11eb0 <putchar_unlocked@plt+0xf38>
   11e5c:	mov	r2, #1
   11e60:	str	r2, [r3]
   11e64:	pop	{r4, r5, r6, pc}
   11e68:	ldrb	r3, [r6]
   11e6c:	cmp	r3, #0
   11e70:	popeq	{r4, r5, r6, pc}
   11e74:	cmp	r5, r6
   11e78:	mov	r2, #5
   11e7c:	ldreq	r1, [pc, #48]	; 11eb4 <putchar_unlocked@plt+0xf3c>
   11e80:	mov	r0, r4
   11e84:	ldrne	r1, [pc, #44]	; 11eb8 <putchar_unlocked@plt+0xf40>
   11e88:	bl	10d8c <dcgettext@plt>
   11e8c:	mov	r6, r0
   11e90:	mov	r0, r5
   11e94:	bl	139e4 <putchar_unlocked@plt+0x2a6c>
   11e98:	mov	r3, r0
   11e9c:	mov	r2, r6
   11ea0:	mov	r1, r4
   11ea4:	mov	r0, r4
   11ea8:	b	11e54 <putchar_unlocked@plt+0xedc>
   11eac:	muleq	r1, r4, r4
   11eb0:	andeq	r6, r2, ip, asr r1
   11eb4:	andeq	r4, r1, r2, ror #25
   11eb8:	strdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   11ebc:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11ec0:	mov	r4, r0
   11ec4:	ldrb	r3, [r0]
   11ec8:	cmp	r3, #39	; 0x27
   11ecc:	cmpne	r3, #34	; 0x22
   11ed0:	bne	11f38 <putchar_unlocked@plt+0xfc0>
   11ed4:	ldrb	r6, [r0, #1]
   11ed8:	cmp	r6, #0
   11edc:	beq	11f38 <putchar_unlocked@plt+0xfc0>
   11ee0:	ldrb	r3, [r0, #2]
   11ee4:	uxtb	r6, r6
   11ee8:	mov	r7, #0
   11eec:	cmp	r3, #0
   11ef0:	beq	11f28 <putchar_unlocked@plt+0xfb0>
   11ef4:	ldr	r3, [pc, #108]	; 11f68 <putchar_unlocked@plt+0xff0>
   11ef8:	ldrb	r5, [r3, #4]
   11efc:	cmp	r5, #0
   11f00:	bne	11f28 <putchar_unlocked@plt+0xfb0>
   11f04:	mov	r2, #5
   11f08:	ldr	r1, [pc, #92]	; 11f6c <putchar_unlocked@plt+0xff4>
   11f0c:	mov	r0, r5
   11f10:	bl	10d8c <dcgettext@plt>
   11f14:	mov	r2, r0
   11f18:	add	r3, r4, #2
   11f1c:	mov	r1, r5
   11f20:	mov	r0, r5
   11f24:	bl	10e04 <error@plt>
   11f28:	mov	r0, r6
   11f2c:	mov	r1, r7
   11f30:	add	sp, sp, #12
   11f34:	pop	{r4, r5, r6, r7, pc}
   11f38:	bl	10ea0 <__errno_location@plt>
   11f3c:	mov	r2, #0
   11f40:	add	r1, sp, #4
   11f44:	str	r2, [r0]
   11f48:	mov	r0, r4
   11f4c:	bl	10ef4 <strtoimax@plt>
   11f50:	mov	r6, r0
   11f54:	mov	r7, r1
   11f58:	ldr	r1, [sp, #4]
   11f5c:	mov	r0, r4
   11f60:	bl	11e20 <putchar_unlocked@plt+0xea8>
   11f64:	b	11f28 <putchar_unlocked@plt+0xfb0>
   11f68:	andeq	r6, r2, ip, asr r1
   11f6c:	andeq	r4, r1, r2, lsr #26
   11f70:	subs	r5, r0, #0
   11f74:	push	{r7, lr}
   11f78:	sub	sp, sp, #56	; 0x38
   11f7c:	ldr	r4, [pc, #580]	; 121c8 <putchar_unlocked@plt+0x1250>
   11f80:	beq	11fb8 <putchar_unlocked@plt+0x1040>
   11f84:	mov	r2, #5
   11f88:	mov	r0, #0
   11f8c:	ldr	r3, [pc, #568]	; 121cc <putchar_unlocked@plt+0x1254>
   11f90:	ldr	r1, [pc, #568]	; 121d0 <putchar_unlocked@plt+0x1258>
   11f94:	ldr	r6, [r3]
   11f98:	bl	10d8c <dcgettext@plt>
   11f9c:	mov	r2, r0
   11fa0:	mov	r1, #1
   11fa4:	ldr	r3, [r4]
   11fa8:	mov	r0, r6
   11fac:	bl	10ee8 <__fprintf_chk@plt>
   11fb0:	mov	r0, r5
   11fb4:	bl	10e7c <exit@plt>
   11fb8:	mov	r2, #5
   11fbc:	ldr	r1, [pc, #528]	; 121d4 <putchar_unlocked@plt+0x125c>
   11fc0:	mov	r6, sp
   11fc4:	bl	10d8c <dcgettext@plt>
   11fc8:	ldr	r3, [r4]
   11fcc:	mov	r1, r0
   11fd0:	mov	r0, #1
   11fd4:	ldr	r4, [pc, #508]	; 121d8 <putchar_unlocked@plt+0x1260>
   11fd8:	ldr	r7, [pc, #508]	; 121dc <putchar_unlocked@plt+0x1264>
   11fdc:	mov	r2, r3
   11fe0:	bl	10ec4 <__printf_chk@plt>
   11fe4:	mov	r2, #5
   11fe8:	ldr	r1, [pc, #496]	; 121e0 <putchar_unlocked@plt+0x1268>
   11fec:	mov	r0, r5
   11ff0:	bl	10d8c <dcgettext@plt>
   11ff4:	ldr	r1, [r4]
   11ff8:	bl	10ce4 <fputs_unlocked@plt>
   11ffc:	mov	r2, #5
   12000:	ldr	r1, [pc, #476]	; 121e4 <putchar_unlocked@plt+0x126c>
   12004:	mov	r0, r5
   12008:	bl	10d8c <dcgettext@plt>
   1200c:	ldr	r1, [r4]
   12010:	bl	10ce4 <fputs_unlocked@plt>
   12014:	mov	r2, #5
   12018:	ldr	r1, [pc, #456]	; 121e8 <putchar_unlocked@plt+0x1270>
   1201c:	mov	r0, r5
   12020:	bl	10d8c <dcgettext@plt>
   12024:	ldr	r1, [r4]
   12028:	bl	10ce4 <fputs_unlocked@plt>
   1202c:	mov	r2, #5
   12030:	ldr	r1, [pc, #436]	; 121ec <putchar_unlocked@plt+0x1274>
   12034:	mov	r0, r5
   12038:	bl	10d8c <dcgettext@plt>
   1203c:	ldr	r1, [r4]
   12040:	bl	10ce4 <fputs_unlocked@plt>
   12044:	mov	r2, #5
   12048:	ldr	r1, [pc, #416]	; 121f0 <putchar_unlocked@plt+0x1278>
   1204c:	mov	r0, r5
   12050:	bl	10d8c <dcgettext@plt>
   12054:	ldr	r1, [r4]
   12058:	bl	10ce4 <fputs_unlocked@plt>
   1205c:	mov	r2, #5
   12060:	ldr	r1, [pc, #396]	; 121f4 <putchar_unlocked@plt+0x127c>
   12064:	mov	r0, r5
   12068:	bl	10d8c <dcgettext@plt>
   1206c:	ldr	r1, [r4]
   12070:	bl	10ce4 <fputs_unlocked@plt>
   12074:	mov	r2, #5
   12078:	ldr	r1, [pc, #376]	; 121f8 <putchar_unlocked@plt+0x1280>
   1207c:	mov	r0, r5
   12080:	bl	10d8c <dcgettext@plt>
   12084:	ldr	r1, [r4]
   12088:	bl	10ce4 <fputs_unlocked@plt>
   1208c:	mov	r2, #5
   12090:	ldr	r1, [pc, #356]	; 121fc <putchar_unlocked@plt+0x1284>
   12094:	mov	r0, r5
   12098:	bl	10d8c <dcgettext@plt>
   1209c:	mov	r1, r0
   120a0:	ldr	r2, [pc, #308]	; 121dc <putchar_unlocked@plt+0x1264>
   120a4:	mov	r0, #1
   120a8:	bl	10ec4 <__printf_chk@plt>
   120ac:	ldr	lr, [pc, #332]	; 12200 <putchar_unlocked@plt+0x1288>
   120b0:	mov	ip, sp
   120b4:	ldm	lr!, {r0, r1, r2, r3}
   120b8:	stmia	ip!, {r0, r1, r2, r3}
   120bc:	ldm	lr!, {r0, r1, r2, r3}
   120c0:	stmia	ip!, {r0, r1, r2, r3}
   120c4:	ldm	lr!, {r0, r1, r2, r3}
   120c8:	stmia	ip!, {r0, r1, r2, r3}
   120cc:	ldm	lr, {r0, r1}
   120d0:	stm	ip, {r0, r1}
   120d4:	ldr	r1, [r6]
   120d8:	cmp	r1, #0
   120dc:	bne	12180 <putchar_unlocked@plt+0x1208>
   120e0:	ldr	r6, [r6, #4]
   120e4:	mov	r2, #5
   120e8:	mov	r0, #0
   120ec:	ldr	r7, [pc, #232]	; 121dc <putchar_unlocked@plt+0x1264>
   120f0:	ldr	r1, [pc, #268]	; 12204 <putchar_unlocked@plt+0x128c>
   120f4:	cmp	r6, #0
   120f8:	moveq	r6, r7
   120fc:	bl	10d8c <dcgettext@plt>
   12100:	mov	r1, r0
   12104:	ldr	r3, [pc, #252]	; 12208 <putchar_unlocked@plt+0x1290>
   12108:	mov	r0, #1
   1210c:	ldr	r2, [pc, #248]	; 1220c <putchar_unlocked@plt+0x1294>
   12110:	bl	10ec4 <__printf_chk@plt>
   12114:	mov	r1, #0
   12118:	mov	r0, #5
   1211c:	bl	10f18 <setlocale@plt>
   12120:	cmp	r0, #0
   12124:	bne	12198 <putchar_unlocked@plt+0x1220>
   12128:	mov	r2, #5
   1212c:	ldr	r1, [pc, #220]	; 12210 <putchar_unlocked@plt+0x1298>
   12130:	mov	r0, #0
   12134:	bl	10d8c <dcgettext@plt>
   12138:	mov	r1, r0
   1213c:	ldr	r3, [pc, #152]	; 121dc <putchar_unlocked@plt+0x1264>
   12140:	mov	r0, #1
   12144:	ldr	r2, [pc, #188]	; 12208 <putchar_unlocked@plt+0x1290>
   12148:	bl	10ec4 <__printf_chk@plt>
   1214c:	mov	r2, #5
   12150:	ldr	r1, [pc, #188]	; 12214 <putchar_unlocked@plt+0x129c>
   12154:	mov	r0, #0
   12158:	bl	10d8c <dcgettext@plt>
   1215c:	ldr	r2, [pc, #180]	; 12218 <putchar_unlocked@plt+0x12a0>
   12160:	cmp	r6, r7
   12164:	mov	r1, r0
   12168:	mov	r0, #1
   1216c:	ldr	r3, [pc, #168]	; 1221c <putchar_unlocked@plt+0x12a4>
   12170:	moveq	r3, r2
   12174:	mov	r2, r6
   12178:	bl	10ec4 <__printf_chk@plt>
   1217c:	b	11fb0 <putchar_unlocked@plt+0x1038>
   12180:	mov	r0, r7
   12184:	bl	10d08 <strcmp@plt>
   12188:	cmp	r0, #0
   1218c:	beq	120e0 <putchar_unlocked@plt+0x1168>
   12190:	add	r6, r6, #8
   12194:	b	120d4 <putchar_unlocked@plt+0x115c>
   12198:	mov	r2, #3
   1219c:	ldr	r1, [pc, #124]	; 12220 <putchar_unlocked@plt+0x12a8>
   121a0:	bl	10f60 <strncmp@plt>
   121a4:	cmp	r0, #0
   121a8:	beq	12128 <putchar_unlocked@plt+0x11b0>
   121ac:	mov	r2, #5
   121b0:	ldr	r1, [pc, #108]	; 12224 <putchar_unlocked@plt+0x12ac>
   121b4:	mov	r0, #0
   121b8:	bl	10d8c <dcgettext@plt>
   121bc:	ldr	r1, [r4]
   121c0:	bl	10ce4 <fputs_unlocked@plt>
   121c4:	b	12128 <putchar_unlocked@plt+0x11b0>
   121c8:	andeq	r6, r2, ip, ror #2
   121cc:	andeq	r6, r2, r0, asr r1
   121d0:	andeq	r4, r1, r2, ror sp
   121d4:	muleq	r1, r9, sp
   121d8:	andeq	r6, r2, r4, asr r1
   121dc:	andeq	r4, r1, fp, ror #26
   121e0:	andeq	r4, r1, sl, asr #27
   121e4:	andeq	r4, r1, r3, lsl lr
   121e8:	andeq	r4, r1, r0, asr #28
   121ec:	andeq	r4, r1, r6, ror lr
   121f0:	ldrdeq	r4, [r1], -r7
   121f4:			; <UNDEFINED> instruction: 0x00014fbc
   121f8:	strheq	r5, [r1], -r8
   121fc:	andeq	r5, r1, r8, ror r2
   12200:	andeq	r4, r1, r0, asr ip
   12204:	andeq	r5, r1, r7, lsr r3
   12208:	andeq	r5, r1, lr, asr #6
   1220c:	andeq	r5, r1, r6, ror r3
   12210:	andeq	r5, r1, pc, asr #7
   12214:	andeq	r5, r1, sl, ror #7
   12218:	andeq	r5, r1, r5, lsr #10
   1221c:	andeq	r4, r1, r2, lsl lr
   12220:	andeq	r5, r1, r4, lsl #7
   12224:	andeq	r5, r1, r8, lsl #7
   12228:	push	{r4, r5, r6, r7, lr}
   1222c:	mov	r4, r1
   12230:	mov	r7, r0
   12234:	vpush	{d8}
   12238:	sub	sp, sp, #12
   1223c:	mov	r1, sp
   12240:	bl	10d5c <strtold@plt>
   12244:	ldr	r3, [sp]
   12248:	vmov.f64	d8, d0
   1224c:	ldrb	r3, [r3]
   12250:	cmp	r3, #0
   12254:	beq	12284 <putchar_unlocked@plt+0x130c>
   12258:	bl	10ea0 <__errno_location@plt>
   1225c:	mov	r5, r0
   12260:	add	r1, sp, #4
   12264:	mov	r0, r7
   12268:	ldr	r6, [r5]
   1226c:	bl	14768 <putchar_unlocked@plt+0x37f0>
   12270:	ldrd	r2, [sp]
   12274:	cmp	r2, r3
   12278:	vmovcc.f64	d8, d0
   1227c:	strcc	r3, [sp]
   12280:	strcs	r6, [r5]
   12284:	cmp	r4, #0
   12288:	vmov.f64	d0, d8
   1228c:	ldrne	r3, [sp]
   12290:	strne	r3, [r4]
   12294:	add	sp, sp, #12
   12298:	vpop	{d8}
   1229c:	pop	{r4, r5, r6, r7, pc}
   122a0:	ldr	r3, [pc, #4]	; 122ac <putchar_unlocked@plt+0x1334>
   122a4:	str	r0, [r3]
   122a8:	bx	lr
   122ac:	andeq	r6, r2, r4, ror #2
   122b0:	ldr	r3, [pc, #4]	; 122bc <putchar_unlocked@plt+0x1344>
   122b4:	strb	r0, [r3, #4]
   122b8:	bx	lr
   122bc:	andeq	r6, r2, r4, ror #2
   122c0:	ldr	r3, [pc, #176]	; 12378 <putchar_unlocked@plt+0x1400>
   122c4:	push	{r0, r1, r4, r5, r6, lr}
   122c8:	ldr	r0, [r3]
   122cc:	bl	14810 <putchar_unlocked@plt+0x3898>
   122d0:	cmp	r0, #0
   122d4:	beq	1235c <putchar_unlocked@plt+0x13e4>
   122d8:	ldr	r4, [pc, #156]	; 1237c <putchar_unlocked@plt+0x1404>
   122dc:	bl	10ea0 <__errno_location@plt>
   122e0:	mov	r5, r0
   122e4:	ldrb	r6, [r4, #4]
   122e8:	cmp	r6, #0
   122ec:	beq	122fc <putchar_unlocked@plt+0x1384>
   122f0:	ldr	r3, [r0]
   122f4:	cmp	r3, #32
   122f8:	beq	1235c <putchar_unlocked@plt+0x13e4>
   122fc:	mov	r2, #5
   12300:	ldr	r1, [pc, #120]	; 12380 <putchar_unlocked@plt+0x1408>
   12304:	mov	r0, #0
   12308:	bl	10d8c <dcgettext@plt>
   1230c:	mov	r6, r0
   12310:	ldr	r0, [r4]
   12314:	cmp	r0, #0
   12318:	beq	12348 <putchar_unlocked@plt+0x13d0>
   1231c:	ldr	r4, [r5]
   12320:	bl	13894 <putchar_unlocked@plt+0x291c>
   12324:	mov	r3, r0
   12328:	ldr	r2, [pc, #84]	; 12384 <putchar_unlocked@plt+0x140c>
   1232c:	mov	r0, #0
   12330:	str	r6, [sp]
   12334:	mov	r1, r4
   12338:	bl	10e04 <error@plt>
   1233c:	ldr	r3, [pc, #68]	; 12388 <putchar_unlocked@plt+0x1410>
   12340:	ldr	r0, [r3]
   12344:	bl	10d38 <_exit@plt>
   12348:	mov	r3, r6
   1234c:	ldr	r2, [pc, #56]	; 1238c <putchar_unlocked@plt+0x1414>
   12350:	ldr	r1, [r5]
   12354:	bl	10e04 <error@plt>
   12358:	b	1233c <putchar_unlocked@plt+0x13c4>
   1235c:	ldr	r3, [pc, #44]	; 12390 <putchar_unlocked@plt+0x1418>
   12360:	ldr	r0, [r3]
   12364:	bl	14810 <putchar_unlocked@plt+0x3898>
   12368:	cmp	r0, #0
   1236c:	bne	1233c <putchar_unlocked@plt+0x13c4>
   12370:	add	sp, sp, #8
   12374:	pop	{r4, r5, r6, pc}
   12378:	andeq	r6, r2, r4, asr r1
   1237c:	andeq	r6, r2, r4, ror #2
   12380:	andeq	r5, r1, r7, ror r5
   12384:	andeq	r5, r1, r3, lsl #11
   12388:	andeq	r6, r2, r0, lsl #2
   1238c:	muleq	r1, r4, r4
   12390:	andeq	r6, r2, r0, asr r1
   12394:	push	{r0, r1, r2, r4, r5, lr}
   12398:	mov	r5, r0
   1239c:	bl	10ea0 <__errno_location@plt>
   123a0:	mov	r4, r0
   123a4:	mov	r0, r5
   123a8:	ldr	r3, [r4]
   123ac:	str	r3, [sp]
   123b0:	str	r3, [sp, #4]
   123b4:	mov	r3, #0
   123b8:	str	r3, [r4]
   123bc:	bl	10d20 <free@plt>
   123c0:	ldr	r3, [r4]
   123c4:	add	r2, sp, #8
   123c8:	clz	r3, r3
   123cc:	lsr	r3, r3, #5
   123d0:	add	r3, r2, r3, lsl #2
   123d4:	ldr	r3, [r3, #-8]
   123d8:	str	r3, [r4]
   123dc:	add	sp, sp, #12
   123e0:	pop	{r4, r5, pc}
   123e4:	push	{r4, r5, r6, lr}
   123e8:	subs	r4, r0, #0
   123ec:	bne	12404 <putchar_unlocked@plt+0x148c>
   123f0:	ldr	r3, [pc, #124]	; 12474 <putchar_unlocked@plt+0x14fc>
   123f4:	ldr	r0, [pc, #124]	; 12478 <putchar_unlocked@plt+0x1500>
   123f8:	ldr	r1, [r3]
   123fc:	bl	10f54 <fputs@plt>
   12400:	bl	10f6c <abort@plt>
   12404:	mov	r1, #47	; 0x2f
   12408:	bl	10f24 <strrchr@plt>
   1240c:	subs	r6, r0, #0
   12410:	beq	12460 <putchar_unlocked@plt+0x14e8>
   12414:	add	r5, r6, #1
   12418:	sub	r3, r5, r4
   1241c:	cmp	r3, #6
   12420:	ble	12460 <putchar_unlocked@plt+0x14e8>
   12424:	mov	r2, #7
   12428:	ldr	r1, [pc, #76]	; 1247c <putchar_unlocked@plt+0x1504>
   1242c:	sub	r0, r6, #6
   12430:	bl	10f60 <strncmp@plt>
   12434:	cmp	r0, #0
   12438:	bne	12460 <putchar_unlocked@plt+0x14e8>
   1243c:	mov	r2, #3
   12440:	ldr	r1, [pc, #56]	; 12480 <putchar_unlocked@plt+0x1508>
   12444:	mov	r0, r5
   12448:	bl	10f60 <strncmp@plt>
   1244c:	cmp	r0, #0
   12450:	ldreq	r3, [pc, #44]	; 12484 <putchar_unlocked@plt+0x150c>
   12454:	addeq	r4, r6, #4
   12458:	movne	r4, r5
   1245c:	streq	r4, [r3]
   12460:	ldr	r3, [pc, #32]	; 12488 <putchar_unlocked@plt+0x1510>
   12464:	str	r4, [r3]
   12468:	ldr	r3, [pc, #28]	; 1248c <putchar_unlocked@plt+0x1514>
   1246c:	str	r4, [r3]
   12470:	pop	{r4, r5, r6, pc}
   12474:	andeq	r6, r2, r0, asr r1
   12478:	andeq	r5, r1, sl, lsl #11
   1247c:	andeq	r5, r1, r2, asr #11
   12480:	andeq	r5, r1, sl, asr #11
   12484:	andeq	r6, r2, r8, asr #2
   12488:	andeq	r6, r2, ip, ror #2
   1248c:	andeq	r6, r2, ip, asr #2
   12490:	push	{r4, lr}
   12494:	mov	r2, #48	; 0x30
   12498:	mov	r4, r1
   1249c:	mov	r1, #0
   124a0:	bl	10eb8 <memset@plt>
   124a4:	cmp	r4, #10
   124a8:	bne	124b0 <putchar_unlocked@plt+0x1538>
   124ac:	bl	10f6c <abort@plt>
   124b0:	str	r4, [r0]
   124b4:	pop	{r4, pc}
   124b8:	push	{r4, r5, r6, lr}
   124bc:	mov	r2, #5
   124c0:	mov	r6, r0
   124c4:	mov	r5, r1
   124c8:	mov	r1, r0
   124cc:	mov	r0, #0
   124d0:	bl	10d8c <dcgettext@plt>
   124d4:	cmp	r6, r0
   124d8:	mov	r4, r0
   124dc:	bne	1254c <putchar_unlocked@plt+0x15d4>
   124e0:	bl	14a38 <putchar_unlocked@plt+0x3ac0>
   124e4:	ldrb	r3, [r0]
   124e8:	bic	r3, r3, #32
   124ec:	cmp	r3, #85	; 0x55
   124f0:	bne	12554 <putchar_unlocked@plt+0x15dc>
   124f4:	ldrb	r3, [r0, #1]
   124f8:	bic	r3, r3, #32
   124fc:	cmp	r3, #84	; 0x54
   12500:	bne	125c4 <putchar_unlocked@plt+0x164c>
   12504:	ldrb	r3, [r0, #2]
   12508:	bic	r3, r3, #32
   1250c:	cmp	r3, #70	; 0x46
   12510:	bne	125c4 <putchar_unlocked@plt+0x164c>
   12514:	ldrb	r3, [r0, #3]
   12518:	cmp	r3, #45	; 0x2d
   1251c:	bne	125c4 <putchar_unlocked@plt+0x164c>
   12520:	ldrb	r3, [r0, #4]
   12524:	cmp	r3, #56	; 0x38
   12528:	bne	125c4 <putchar_unlocked@plt+0x164c>
   1252c:	ldrb	r3, [r0, #5]
   12530:	cmp	r3, #0
   12534:	bne	125c4 <putchar_unlocked@plt+0x164c>
   12538:	ldrb	r2, [r4]
   1253c:	ldr	r3, [pc, #144]	; 125d4 <putchar_unlocked@plt+0x165c>
   12540:	ldr	r4, [pc, #144]	; 125d8 <putchar_unlocked@plt+0x1660>
   12544:	cmp	r2, #96	; 0x60
   12548:	movne	r4, r3
   1254c:	mov	r0, r4
   12550:	pop	{r4, r5, r6, pc}
   12554:	cmp	r3, #71	; 0x47
   12558:	bne	125c4 <putchar_unlocked@plt+0x164c>
   1255c:	ldrb	r3, [r0, #1]
   12560:	bic	r3, r3, #32
   12564:	cmp	r3, #66	; 0x42
   12568:	bne	125c4 <putchar_unlocked@plt+0x164c>
   1256c:	ldrb	r3, [r0, #2]
   12570:	cmp	r3, #49	; 0x31
   12574:	bne	125c4 <putchar_unlocked@plt+0x164c>
   12578:	ldrb	r3, [r0, #3]
   1257c:	cmp	r3, #56	; 0x38
   12580:	bne	125c4 <putchar_unlocked@plt+0x164c>
   12584:	ldrb	r3, [r0, #4]
   12588:	cmp	r3, #48	; 0x30
   1258c:	bne	125c4 <putchar_unlocked@plt+0x164c>
   12590:	ldrb	r3, [r0, #5]
   12594:	cmp	r3, #51	; 0x33
   12598:	bne	125c4 <putchar_unlocked@plt+0x164c>
   1259c:	ldrb	r3, [r0, #6]
   125a0:	cmp	r3, #48	; 0x30
   125a4:	bne	125c4 <putchar_unlocked@plt+0x164c>
   125a8:	ldrb	r3, [r0, #7]
   125ac:	cmp	r3, #0
   125b0:	bne	125c4 <putchar_unlocked@plt+0x164c>
   125b4:	ldrb	r2, [r4]
   125b8:	ldr	r3, [pc, #28]	; 125dc <putchar_unlocked@plt+0x1664>
   125bc:	ldr	r4, [pc, #28]	; 125e0 <putchar_unlocked@plt+0x1668>
   125c0:	b	12544 <putchar_unlocked@plt+0x15cc>
   125c4:	ldr	r4, [pc, #24]	; 125e4 <putchar_unlocked@plt+0x166c>
   125c8:	cmp	r5, #9
   125cc:	ldr	r3, [pc, #20]	; 125e8 <putchar_unlocked@plt+0x1670>
   125d0:	b	12548 <putchar_unlocked@plt+0x15d0>
   125d4:	andeq	r5, r1, r6, lsr #12
   125d8:	andeq	r5, r1, r1, lsr r6
   125dc:	andeq	r5, r1, sl, lsr #12
   125e0:	andeq	r5, r1, sp, lsr #12
   125e4:	andeq	r5, r1, r4, lsr #12
   125e8:	andeq	r5, r1, r5, lsr r6
   125ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125f0:	sub	sp, sp, #108	; 0x6c
   125f4:	mov	r8, r0
   125f8:	mov	r5, r1
   125fc:	mov	r6, #0
   12600:	str	r3, [sp, #40]	; 0x28
   12604:	str	r2, [sp, #48]	; 0x30
   12608:	ldr	sl, [sp, #144]	; 0x90
   1260c:	bl	10dd4 <__ctype_get_mb_cur_max@plt>
   12610:	ldr	r3, [sp, #148]	; 0x94
   12614:	str	r6, [sp, #24]
   12618:	str	r6, [sp, #32]
   1261c:	str	r6, [sp, #44]	; 0x2c
   12620:	str	r6, [sp, #52]	; 0x34
   12624:	ubfx	r7, r3, #1, #1
   12628:	mov	r3, #1
   1262c:	str	r6, [sp, #60]	; 0x3c
   12630:	str	r3, [sp, #72]	; 0x48
   12634:	str	r0, [sp, #76]	; 0x4c
   12638:	cmp	sl, #10
   1263c:	ldrls	pc, [pc, sl, lsl #2]
   12640:	b	12884 <putchar_unlocked@plt+0x190c>
   12644:	andeq	r2, r1, r0, ror r6
   12648:	muleq	r1, ip, r8
   1264c:	andeq	r2, r1, r0, lsr #16
   12650:	andeq	r2, r1, r8, lsr r8
   12654:	andeq	r2, r1, r8, lsl #16
   12658:	andeq	r2, r1, r0, ror #14
   1265c:	andeq	r2, r1, r0, asr #14
   12660:	andeq	r2, r1, r8, lsl #17
   12664:	muleq	r1, r0, r7
   12668:	muleq	r1, r0, r7
   1266c:	muleq	r1, r0, r7
   12670:	mov	r4, sl
   12674:	mov	r7, #0
   12678:	mov	r9, r5
   1267c:	mov	r3, #0
   12680:	str	r6, [sp, #68]	; 0x44
   12684:	str	r3, [sp, #28]
   12688:	ldr	r3, [sp, #40]	; 0x28
   1268c:	cmn	r3, #1
   12690:	bne	13230 <putchar_unlocked@plt+0x22b8>
   12694:	ldr	r2, [sp, #28]
   12698:	ldr	r3, [sp, #48]	; 0x30
   1269c:	ldrb	r3, [r3, r2]
   126a0:	adds	r3, r3, #0
   126a4:	movne	r3, #1
   126a8:	str	r3, [sp, #36]	; 0x24
   126ac:	ldr	r3, [sp, #36]	; 0x24
   126b0:	cmp	r3, #0
   126b4:	bne	128c0 <putchar_unlocked@plt+0x1948>
   126b8:	sub	r3, sl, #2
   126bc:	cmp	r4, #0
   126c0:	clz	r3, r3
   126c4:	movne	r2, #0
   126c8:	lsr	r3, r3, #5
   126cc:	andeq	r2, r3, r7
   126d0:	cmp	r2, #0
   126d4:	bne	12a84 <putchar_unlocked@plt+0x1b0c>
   126d8:	eor	r7, r7, #1
   126dc:	ands	r3, r3, r7
   126e0:	beq	132a8 <putchar_unlocked@plt+0x2330>
   126e4:	ldr	r2, [sp, #68]	; 0x44
   126e8:	cmp	r2, #0
   126ec:	beq	13270 <putchar_unlocked@plt+0x22f8>
   126f0:	ldr	r3, [sp, #72]	; 0x48
   126f4:	cmp	r3, #0
   126f8:	beq	13244 <putchar_unlocked@plt+0x22cc>
   126fc:	ldr	r2, [sp, #48]	; 0x30
   12700:	ldr	r3, [sp, #160]	; 0xa0
   12704:	ldr	r1, [sp, #60]	; 0x3c
   12708:	str	r3, [sp, #16]
   1270c:	ldr	r3, [sp, #156]	; 0x9c
   12710:	str	r3, [sp, #12]
   12714:	ldr	r3, [sp, #152]	; 0x98
   12718:	str	r3, [sp, #8]
   1271c:	ldr	r3, [sp, #148]	; 0x94
   12720:	str	r3, [sp, #4]
   12724:	mov	r3, #5
   12728:	str	r3, [sp]
   1272c:	ldr	r3, [sp, #40]	; 0x28
   12730:	mov	r0, r8
   12734:	bl	125ec <putchar_unlocked@plt+0x1674>
   12738:	mov	r4, r0
   1273c:	b	1329c <putchar_unlocked@plt+0x2324>
   12740:	ldr	r3, [pc, #2948]	; 132cc <putchar_unlocked@plt+0x2354>
   12744:	mov	r7, #1
   12748:	mov	r4, #0
   1274c:	mov	sl, #5
   12750:	str	r7, [sp, #24]
   12754:	str	r7, [sp, #32]
   12758:	str	r3, [sp, #44]	; 0x2c
   1275c:	b	12678 <putchar_unlocked@plt+0x1700>
   12760:	cmp	r7, #0
   12764:	bne	128a8 <putchar_unlocked@plt+0x1930>
   12768:	cmp	r5, #0
   1276c:	mov	r4, #1
   12770:	movne	r3, #34	; 0x22
   12774:	strbne	r3, [r8]
   12778:	mov	r3, #1
   1277c:	str	r3, [sp, #24]
   12780:	str	r3, [sp, #32]
   12784:	ldr	r3, [pc, #2880]	; 132cc <putchar_unlocked@plt+0x2354>
   12788:	str	r3, [sp, #44]	; 0x2c
   1278c:	b	12678 <putchar_unlocked@plt+0x1700>
   12790:	cmp	sl, #10
   12794:	beq	127b8 <putchar_unlocked@plt+0x1840>
   12798:	mov	r1, sl
   1279c:	ldr	r0, [pc, #2860]	; 132d0 <putchar_unlocked@plt+0x2358>
   127a0:	bl	124b8 <putchar_unlocked@plt+0x1540>
   127a4:	mov	r1, sl
   127a8:	str	r0, [sp, #156]	; 0x9c
   127ac:	ldr	r0, [pc, #2848]	; 132d4 <putchar_unlocked@plt+0x235c>
   127b0:	bl	124b8 <putchar_unlocked@plt+0x1540>
   127b4:	str	r0, [sp, #160]	; 0xa0
   127b8:	cmp	r7, #0
   127bc:	moveq	r4, r7
   127c0:	beq	127d8 <putchar_unlocked@plt+0x1860>
   127c4:	mov	r4, #0
   127c8:	b	127e8 <putchar_unlocked@plt+0x1870>
   127cc:	cmp	r5, r4
   127d0:	strbhi	r3, [r8, r4]
   127d4:	add	r4, r4, #1
   127d8:	ldr	r3, [sp, #156]	; 0x9c
   127dc:	ldrb	r3, [r3, r4]
   127e0:	cmp	r3, #0
   127e4:	bne	127cc <putchar_unlocked@plt+0x1854>
   127e8:	ldr	r0, [sp, #160]	; 0xa0
   127ec:	bl	10e88 <strlen@plt>
   127f0:	ldr	r3, [sp, #160]	; 0xa0
   127f4:	str	r0, [sp, #32]
   127f8:	str	r3, [sp, #44]	; 0x2c
   127fc:	mov	r3, #1
   12800:	str	r3, [sp, #24]
   12804:	b	12678 <putchar_unlocked@plt+0x1700>
   12808:	mov	r3, #1
   1280c:	cmp	r7, #0
   12810:	streq	r3, [sp, #24]
   12814:	beq	12858 <putchar_unlocked@plt+0x18e0>
   12818:	str	r3, [sp, #32]
   1281c:	b	12844 <putchar_unlocked@plt+0x18cc>
   12820:	cmp	r7, #0
   12824:	beq	12858 <putchar_unlocked@plt+0x18e0>
   12828:	mov	r3, #1
   1282c:	str	r3, [sp, #32]
   12830:	ldr	r3, [pc, #2716]	; 132d4 <putchar_unlocked@plt+0x235c>
   12834:	b	128b8 <putchar_unlocked@plt+0x1940>
   12838:	mov	r7, #1
   1283c:	str	r7, [sp, #24]
   12840:	str	r7, [sp, #32]
   12844:	ldr	r3, [pc, #2696]	; 132d4 <putchar_unlocked@plt+0x235c>
   12848:	mov	r4, #0
   1284c:	str	r3, [sp, #44]	; 0x2c
   12850:	mov	sl, #2
   12854:	b	12678 <putchar_unlocked@plt+0x1700>
   12858:	cmp	r5, #0
   1285c:	movne	r3, #39	; 0x27
   12860:	movne	r7, #0
   12864:	strbne	r3, [r8]
   12868:	moveq	r7, r5
   1286c:	mov	r3, #1
   12870:	mov	r4, #1
   12874:	str	r3, [sp, #32]
   12878:	ldr	r3, [pc, #2644]	; 132d4 <putchar_unlocked@plt+0x235c>
   1287c:	str	r3, [sp, #44]	; 0x2c
   12880:	b	12850 <putchar_unlocked@plt+0x18d8>
   12884:	bl	10f6c <abort@plt>
   12888:	mov	r3, #1
   1288c:	mov	r7, #0
   12890:	str	r3, [sp, #24]
   12894:	mov	r4, #0
   12898:	b	12678 <putchar_unlocked@plt+0x1700>
   1289c:	mov	r7, #1
   128a0:	str	sl, [sp, #32]
   128a4:	b	12844 <putchar_unlocked@plt+0x18cc>
   128a8:	mov	r3, #1
   128ac:	str	r7, [sp, #24]
   128b0:	str	r3, [sp, #32]
   128b4:	ldr	r3, [pc, #2576]	; 132cc <putchar_unlocked@plt+0x2354>
   128b8:	str	r3, [sp, #44]	; 0x2c
   128bc:	b	12894 <putchar_unlocked@plt+0x191c>
   128c0:	ldr	fp, [sp, #24]
   128c4:	ldr	r3, [sp, #32]
   128c8:	cmp	sl, #2
   128cc:	moveq	fp, #0
   128d0:	andne	fp, fp, #1
   128d4:	adds	r5, r3, #0
   128d8:	movne	r5, #1
   128dc:	ands	r3, fp, r5
   128e0:	str	r3, [sp, #64]	; 0x40
   128e4:	beq	129b4 <putchar_unlocked@plt+0x1a3c>
   128e8:	ldr	r3, [sp, #28]
   128ec:	ldr	r2, [sp, #32]
   128f0:	cmp	r2, #1
   128f4:	add	r6, r3, r2
   128f8:	mov	r3, r2
   128fc:	ldr	r2, [sp, #40]	; 0x28
   12900:	movls	r3, #0
   12904:	movhi	r3, #1
   12908:	cmn	r2, #1
   1290c:	movne	r3, #0
   12910:	cmp	r3, #0
   12914:	beq	12924 <putchar_unlocked@plt+0x19ac>
   12918:	ldr	r0, [sp, #48]	; 0x30
   1291c:	bl	10e88 <strlen@plt>
   12920:	str	r0, [sp, #40]	; 0x28
   12924:	ldr	r3, [sp, #40]	; 0x28
   12928:	cmp	r6, r3
   1292c:	bhi	129ac <putchar_unlocked@plt+0x1a34>
   12930:	ldr	r0, [sp, #28]
   12934:	ldr	r2, [sp, #32]
   12938:	ldr	r3, [sp, #48]	; 0x30
   1293c:	ldr	r1, [sp, #44]	; 0x2c
   12940:	add	r0, r3, r0
   12944:	bl	10d68 <memcmp@plt>
   12948:	cmp	r0, #0
   1294c:	bne	129ac <putchar_unlocked@plt+0x1a34>
   12950:	cmp	r7, #0
   12954:	beq	129b4 <putchar_unlocked@plt+0x1a3c>
   12958:	str	r7, [sp, #24]
   1295c:	ldr	r3, [sp, #24]
   12960:	mov	r1, r9
   12964:	ldr	r2, [sp, #48]	; 0x30
   12968:	cmp	sl, #2
   1296c:	movne	r3, #0
   12970:	andeq	r3, r3, #1
   12974:	cmp	r3, #0
   12978:	ldr	r3, [sp, #160]	; 0xa0
   1297c:	movne	sl, #4
   12980:	str	sl, [sp]
   12984:	str	r3, [sp, #16]
   12988:	ldr	r3, [sp, #156]	; 0x9c
   1298c:	str	r3, [sp, #12]
   12990:	mov	r3, #0
   12994:	str	r3, [sp, #8]
   12998:	ldr	r3, [sp, #148]	; 0x94
   1299c:	bic	r3, r3, #2
   129a0:	str	r3, [sp, #4]
   129a4:	ldr	r3, [sp, #40]	; 0x28
   129a8:	b	12730 <putchar_unlocked@plt+0x17b8>
   129ac:	mov	r3, #0
   129b0:	str	r3, [sp, #64]	; 0x40
   129b4:	ldr	r2, [sp, #28]
   129b8:	ldr	r3, [sp, #48]	; 0x30
   129bc:	add	r3, r3, r2
   129c0:	str	r3, [sp, #80]	; 0x50
   129c4:	ldr	r3, [sp, #48]	; 0x30
   129c8:	ldrb	r6, [r3, r2]
   129cc:	cmp	r6, #58	; 0x3a
   129d0:	bhi	12b34 <putchar_unlocked@plt+0x1bbc>
   129d4:	cmp	r6, #43	; 0x2b
   129d8:	bcs	12cf4 <putchar_unlocked@plt+0x1d7c>
   129dc:	cmp	r6, #32
   129e0:	beq	12d48 <putchar_unlocked@plt+0x1dd0>
   129e4:	bhi	12a8c <putchar_unlocked@plt+0x1b14>
   129e8:	cmp	r6, #9
   129ec:	beq	12ef0 <putchar_unlocked@plt+0x1f78>
   129f0:	bhi	12a50 <putchar_unlocked@plt+0x1ad8>
   129f4:	cmp	r6, #7
   129f8:	beq	12f00 <putchar_unlocked@plt+0x1f88>
   129fc:	bhi	12f1c <putchar_unlocked@plt+0x1fa4>
   12a00:	cmp	r6, #0
   12a04:	beq	12d64 <putchar_unlocked@plt+0x1dec>
   12a08:	ldr	r3, [sp, #76]	; 0x4c
   12a0c:	cmp	r3, #1
   12a10:	bne	12f68 <putchar_unlocked@plt+0x1ff0>
   12a14:	bl	10e70 <__ctype_b_loc@plt>
   12a18:	ldr	r2, [r0]
   12a1c:	sxth	r3, r6
   12a20:	lsl	r3, r3, #1
   12a24:	ldrh	r5, [r2, r3]
   12a28:	ldr	r3, [sp, #76]	; 0x4c
   12a2c:	ubfx	r5, r5, #14, #1
   12a30:	str	r3, [sp, #56]	; 0x38
   12a34:	ldr	r3, [sp, #24]
   12a38:	eor	fp, r5, #1
   12a3c:	and	fp, fp, r3
   12a40:	ands	fp, fp, #255	; 0xff
   12a44:	beq	12c24 <putchar_unlocked@plt+0x1cac>
   12a48:	mov	r5, #0
   12a4c:	b	13014 <putchar_unlocked@plt+0x209c>
   12a50:	cmp	r6, #11
   12a54:	beq	12f24 <putchar_unlocked@plt+0x1fac>
   12a58:	bcc	12ef8 <putchar_unlocked@plt+0x1f80>
   12a5c:	cmp	r6, #12
   12a60:	beq	12f2c <putchar_unlocked@plt+0x1fb4>
   12a64:	cmp	r6, #13
   12a68:	moveq	r3, #114	; 0x72
   12a6c:	bne	12a08 <putchar_unlocked@plt+0x1a90>
   12a70:	cmp	sl, #2
   12a74:	movne	r2, #0
   12a78:	andeq	r2, r7, #1
   12a7c:	cmp	r2, #0
   12a80:	beq	12f04 <putchar_unlocked@plt+0x1f8c>
   12a84:	mov	sl, #2
   12a88:	b	1295c <putchar_unlocked@plt+0x19e4>
   12a8c:	cmp	r6, #37	; 0x25
   12a90:	beq	12cf4 <putchar_unlocked@plt+0x1d7c>
   12a94:	bhi	12aa8 <putchar_unlocked@plt+0x1b30>
   12a98:	cmp	r6, #35	; 0x23
   12a9c:	beq	12d3c <putchar_unlocked@plt+0x1dc4>
   12aa0:	mov	r5, #0
   12aa4:	b	12d4c <putchar_unlocked@plt+0x1dd4>
   12aa8:	cmp	r6, #39	; 0x27
   12aac:	bne	12aa0 <putchar_unlocked@plt+0x1b28>
   12ab0:	cmp	sl, #2
   12ab4:	ldrne	r5, [sp, #36]	; 0x24
   12ab8:	movne	r3, r5
   12abc:	strne	r3, [sp, #68]	; 0x44
   12ac0:	bne	12e40 <putchar_unlocked@plt+0x1ec8>
   12ac4:	cmp	r7, #0
   12ac8:	bne	1295c <putchar_unlocked@plt+0x19e4>
   12acc:	ldr	r3, [sp, #60]	; 0x3c
   12ad0:	cmp	r9, #0
   12ad4:	clz	r3, r3
   12ad8:	lsr	r3, r3, #5
   12adc:	moveq	r3, #0
   12ae0:	cmp	r3, #0
   12ae4:	strne	r9, [sp, #60]	; 0x3c
   12ae8:	movne	r9, #0
   12aec:	bne	12afc <putchar_unlocked@plt+0x1b84>
   12af0:	cmp	r9, r4
   12af4:	movhi	r3, #39	; 0x27
   12af8:	strbhi	r3, [r8, r4]
   12afc:	add	r3, r4, #1
   12b00:	ldr	r5, [sp, #36]	; 0x24
   12b04:	mov	fp, #0
   12b08:	cmp	r3, r9
   12b0c:	movcc	r2, #92	; 0x5c
   12b10:	str	fp, [sp, #52]	; 0x34
   12b14:	strbcc	r2, [r8, r3]
   12b18:	add	r3, r4, #2
   12b1c:	add	r4, r4, #3
   12b20:	cmp	r3, r9
   12b24:	str	r5, [sp, #68]	; 0x44
   12b28:	movcc	r2, #39	; 0x27
   12b2c:	strbcc	r2, [r8, r3]
   12b30:	b	12c24 <putchar_unlocked@plt+0x1cac>
   12b34:	cmp	r6, #94	; 0x5e
   12b38:	beq	12aa0 <putchar_unlocked@plt+0x1b28>
   12b3c:	bhi	12cfc <putchar_unlocked@plt+0x1d84>
   12b40:	cmp	r6, #90	; 0x5a
   12b44:	bhi	12ce8 <putchar_unlocked@plt+0x1d70>
   12b48:	cmp	r6, #65	; 0x41
   12b4c:	bcs	12cf4 <putchar_unlocked@plt+0x1d7c>
   12b50:	cmp	r6, #62	; 0x3e
   12b54:	bls	12aa0 <putchar_unlocked@plt+0x1b28>
   12b58:	cmp	r6, #63	; 0x3f
   12b5c:	bne	12a08 <putchar_unlocked@plt+0x1a90>
   12b60:	cmp	sl, #2
   12b64:	beq	12e48 <putchar_unlocked@plt+0x1ed0>
   12b68:	cmp	sl, #5
   12b6c:	movne	fp, #0
   12b70:	bne	13218 <putchar_unlocked@plt+0x22a0>
   12b74:	ldr	r3, [sp, #148]	; 0x94
   12b78:	tst	r3, #4
   12b7c:	beq	12e50 <putchar_unlocked@plt+0x1ed8>
   12b80:	ldr	r3, [sp, #28]
   12b84:	add	r2, r3, #2
   12b88:	ldr	r3, [sp, #40]	; 0x28
   12b8c:	cmp	r2, r3
   12b90:	bcs	12e50 <putchar_unlocked@plt+0x1ed8>
   12b94:	ldr	r1, [sp, #28]
   12b98:	ldr	r3, [sp, #48]	; 0x30
   12b9c:	add	r3, r3, r1
   12ba0:	ldrb	r1, [r3, #1]
   12ba4:	cmp	r1, #63	; 0x3f
   12ba8:	bne	12e50 <putchar_unlocked@plt+0x1ed8>
   12bac:	ldr	r3, [sp, #48]	; 0x30
   12bb0:	ldrb	r6, [r3, r2]
   12bb4:	sub	r3, r6, #33	; 0x21
   12bb8:	uxtb	r3, r3
   12bbc:	cmp	r3, #29
   12bc0:	bhi	13220 <putchar_unlocked@plt+0x22a8>
   12bc4:	ldr	r0, [pc, #1804]	; 132d8 <putchar_unlocked@plt+0x2360>
   12bc8:	mov	r5, #1
   12bcc:	ands	r5, r0, r5, lsl r3
   12bd0:	beq	13228 <putchar_unlocked@plt+0x22b0>
   12bd4:	cmp	r7, #0
   12bd8:	bne	1295c <putchar_unlocked@plt+0x19e4>
   12bdc:	cmp	r9, r4
   12be0:	add	r3, r4, #1
   12be4:	str	r2, [sp, #28]
   12be8:	mov	r5, #0
   12bec:	strbhi	r1, [r8, r4]
   12bf0:	cmp	r9, r3
   12bf4:	mov	fp, r5
   12bf8:	movhi	r1, #34	; 0x22
   12bfc:	strbhi	r1, [r8, r3]
   12c00:	add	r3, r4, #2
   12c04:	cmp	r9, r3
   12c08:	movhi	r1, #34	; 0x22
   12c0c:	strbhi	r1, [r8, r3]
   12c10:	add	r3, r4, #3
   12c14:	add	r4, r4, #4
   12c18:	cmp	r9, r3
   12c1c:	movhi	r1, #63	; 0x3f
   12c20:	strbhi	r1, [r8, r3]
   12c24:	ldr	r3, [sp, #24]
   12c28:	eor	r3, r3, #1
   12c2c:	cmp	sl, #2
   12c30:	orreq	r3, r3, #1
   12c34:	eor	r3, r3, #1
   12c38:	orr	r3, r7, r3
   12c3c:	tst	r3, #255	; 0xff
   12c40:	beq	12c6c <putchar_unlocked@plt+0x1cf4>
   12c44:	ldr	r3, [sp, #152]	; 0x98
   12c48:	cmp	r3, #0
   12c4c:	beq	12c6c <putchar_unlocked@plt+0x1cf4>
   12c50:	ldr	r1, [sp, #152]	; 0x98
   12c54:	ubfx	r2, r6, #5, #8
   12c58:	and	r3, r6, #31
   12c5c:	ldr	r2, [r1, r2, lsl #2]
   12c60:	lsr	r3, r2, r3
   12c64:	tst	r3, #1
   12c68:	bne	12c78 <putchar_unlocked@plt+0x1d00>
   12c6c:	ldr	r3, [sp, #64]	; 0x40
   12c70:	cmp	r3, #0
   12c74:	beq	12e70 <putchar_unlocked@plt+0x1ef8>
   12c78:	sub	r3, sl, #2
   12c7c:	cmp	r7, #0
   12c80:	clz	r3, r3
   12c84:	lsr	r3, r3, #5
   12c88:	bne	1295c <putchar_unlocked@plt+0x19e4>
   12c8c:	ldr	r2, [sp, #52]	; 0x34
   12c90:	eor	r2, r2, #1
   12c94:	ands	r3, r3, r2
   12c98:	beq	12cd0 <putchar_unlocked@plt+0x1d58>
   12c9c:	cmp	r9, r4
   12ca0:	str	r3, [sp, #52]	; 0x34
   12ca4:	movhi	r2, #39	; 0x27
   12ca8:	strbhi	r2, [r8, r4]
   12cac:	add	r2, r4, #1
   12cb0:	cmp	r9, r2
   12cb4:	movhi	r1, #36	; 0x24
   12cb8:	strbhi	r1, [r8, r2]
   12cbc:	add	r2, r4, #2
   12cc0:	add	r4, r4, #3
   12cc4:	cmp	r9, r2
   12cc8:	movhi	r1, #39	; 0x27
   12ccc:	strbhi	r1, [r8, r2]
   12cd0:	cmp	r9, r4
   12cd4:	ldr	fp, [sp, #36]	; 0x24
   12cd8:	movhi	r3, #92	; 0x5c
   12cdc:	strbhi	r3, [r8, r4]
   12ce0:	add	r4, r4, #1
   12ce4:	b	12e70 <putchar_unlocked@plt+0x1ef8>
   12ce8:	cmp	r6, #92	; 0x5c
   12cec:	beq	12e58 <putchar_unlocked@plt+0x1ee0>
   12cf0:	bls	12aa0 <putchar_unlocked@plt+0x1b28>
   12cf4:	ldr	r5, [sp, #36]	; 0x24
   12cf8:	b	12e40 <putchar_unlocked@plt+0x1ec8>
   12cfc:	cmp	r6, #122	; 0x7a
   12d00:	bhi	12d20 <putchar_unlocked@plt+0x1da8>
   12d04:	cmp	r6, #97	; 0x61
   12d08:	bcs	12cf4 <putchar_unlocked@plt+0x1d7c>
   12d0c:	cmp	r6, #95	; 0x5f
   12d10:	beq	12cf4 <putchar_unlocked@plt+0x1d7c>
   12d14:	cmp	r6, #96	; 0x60
   12d18:	bne	12a08 <putchar_unlocked@plt+0x1a90>
   12d1c:	b	12aa0 <putchar_unlocked@plt+0x1b28>
   12d20:	cmp	r6, #124	; 0x7c
   12d24:	beq	12aa0 <putchar_unlocked@plt+0x1b28>
   12d28:	bcc	12f34 <putchar_unlocked@plt+0x1fbc>
   12d2c:	cmp	r6, #125	; 0x7d
   12d30:	beq	12f34 <putchar_unlocked@plt+0x1fbc>
   12d34:	cmp	r6, #126	; 0x7e
   12d38:	bne	12a08 <putchar_unlocked@plt+0x1a90>
   12d3c:	ldr	r3, [sp, #28]
   12d40:	cmp	r3, #0
   12d44:	bne	12e50 <putchar_unlocked@plt+0x1ed8>
   12d48:	ldr	r5, [sp, #36]	; 0x24
   12d4c:	cmp	sl, #2
   12d50:	movne	fp, #0
   12d54:	andeq	fp, r7, #1
   12d58:	cmp	fp, #0
   12d5c:	beq	12c24 <putchar_unlocked@plt+0x1cac>
   12d60:	b	12a84 <putchar_unlocked@plt+0x1b0c>
   12d64:	ldr	r3, [sp, #24]
   12d68:	cmp	r3, #0
   12d6c:	beq	12e34 <putchar_unlocked@plt+0x1ebc>
   12d70:	sub	r2, sl, #2
   12d74:	cmp	r7, #0
   12d78:	clz	r2, r2
   12d7c:	lsr	r2, r2, #5
   12d80:	bne	12958 <putchar_unlocked@plt+0x19e0>
   12d84:	ldr	r3, [sp, #52]	; 0x34
   12d88:	eor	r3, r3, #1
   12d8c:	ands	r2, r2, r3
   12d90:	moveq	r3, r4
   12d94:	beq	12dcc <putchar_unlocked@plt+0x1e54>
   12d98:	cmp	r9, r4
   12d9c:	str	r2, [sp, #52]	; 0x34
   12da0:	movhi	r3, #39	; 0x27
   12da4:	strbhi	r3, [r8, r4]
   12da8:	add	r3, r4, #1
   12dac:	cmp	r9, r3
   12db0:	movhi	r1, #36	; 0x24
   12db4:	strbhi	r1, [r8, r3]
   12db8:	add	r3, r4, #2
   12dbc:	cmp	r9, r3
   12dc0:	movhi	r1, #39	; 0x27
   12dc4:	strbhi	r1, [r8, r3]
   12dc8:	add	r3, r4, #3
   12dcc:	cmp	r9, r3
   12dd0:	add	r4, r3, #1
   12dd4:	movhi	r2, #92	; 0x5c
   12dd8:	strbhi	r2, [r8, r3]
   12ddc:	cmp	fp, #0
   12de0:	beq	13208 <putchar_unlocked@plt+0x2290>
   12de4:	ldr	r2, [sp, #28]
   12de8:	ldr	r1, [sp, #40]	; 0x28
   12dec:	add	r2, r2, #1
   12df0:	cmp	r2, r1
   12df4:	bcs	12e2c <putchar_unlocked@plt+0x1eb4>
   12df8:	ldr	r1, [sp, #48]	; 0x30
   12dfc:	mov	r6, #48	; 0x30
   12e00:	ldrb	r2, [r1, r2]
   12e04:	sub	r2, r2, #48	; 0x30
   12e08:	cmp	r2, #9
   12e0c:	bhi	13218 <putchar_unlocked@plt+0x22a0>
   12e10:	cmp	r9, r4
   12e14:	add	r2, r3, #2
   12e18:	strbhi	r6, [r8, r4]
   12e1c:	cmp	r9, r2
   12e20:	add	r4, r3, #3
   12e24:	movhi	r1, #48	; 0x30
   12e28:	strbhi	r1, [r8, r2]
   12e2c:	mov	r5, #0
   12e30:	b	13210 <putchar_unlocked@plt+0x2298>
   12e34:	ldr	r3, [sp, #148]	; 0x94
   12e38:	ands	r5, r3, #1
   12e3c:	bne	12ec4 <putchar_unlocked@plt+0x1f4c>
   12e40:	mov	fp, #0
   12e44:	b	12c24 <putchar_unlocked@plt+0x1cac>
   12e48:	cmp	r7, #0
   12e4c:	bne	1295c <putchar_unlocked@plt+0x19e4>
   12e50:	mov	r5, #0
   12e54:	b	12e40 <putchar_unlocked@plt+0x1ec8>
   12e58:	cmp	sl, #2
   12e5c:	bne	12ed0 <putchar_unlocked@plt+0x1f58>
   12e60:	cmp	r7, #0
   12e64:	bne	1295c <putchar_unlocked@plt+0x19e4>
   12e68:	mov	r5, r7
   12e6c:	mov	fp, r7
   12e70:	ldr	r3, [sp, #52]	; 0x34
   12e74:	eor	fp, fp, #1
   12e78:	tst	r3, fp
   12e7c:	beq	12ea8 <putchar_unlocked@plt+0x1f30>
   12e80:	cmp	r9, r4
   12e84:	movhi	r3, #39	; 0x27
   12e88:	strbhi	r3, [r8, r4]
   12e8c:	add	r3, r4, #1
   12e90:	add	r4, r4, #2
   12e94:	cmp	r9, r3
   12e98:	movhi	r2, #39	; 0x27
   12e9c:	strbhi	r2, [r8, r3]
   12ea0:	mov	r3, #0
   12ea4:	str	r3, [sp, #52]	; 0x34
   12ea8:	cmp	r9, r4
   12eac:	ldr	r3, [sp, #72]	; 0x48
   12eb0:	strbhi	r6, [r8, r4]
   12eb4:	cmp	r5, #0
   12eb8:	add	r4, r4, #1
   12ebc:	moveq	r3, #0
   12ec0:	str	r3, [sp, #72]	; 0x48
   12ec4:	ldr	r3, [sp, #28]
   12ec8:	add	r3, r3, #1
   12ecc:	b	12684 <putchar_unlocked@plt+0x170c>
   12ed0:	ldr	r3, [sp, #24]
   12ed4:	and	r3, r3, r7
   12ed8:	tst	r5, r3
   12edc:	moveq	r3, r6
   12ee0:	beq	12a70 <putchar_unlocked@plt+0x1af8>
   12ee4:	mov	fp, #0
   12ee8:	mov	r5, fp
   12eec:	b	12e70 <putchar_unlocked@plt+0x1ef8>
   12ef0:	mov	r3, #116	; 0x74
   12ef4:	b	12a70 <putchar_unlocked@plt+0x1af8>
   12ef8:	mov	r3, #110	; 0x6e
   12efc:	b	12a70 <putchar_unlocked@plt+0x1af8>
   12f00:	mov	r3, #97	; 0x61
   12f04:	ldr	r2, [sp, #24]
   12f08:	cmp	r2, #0
   12f0c:	beq	12e50 <putchar_unlocked@plt+0x1ed8>
   12f10:	mov	r6, r3
   12f14:	mov	r5, #0
   12f18:	b	12c78 <putchar_unlocked@plt+0x1d00>
   12f1c:	mov	r3, #98	; 0x62
   12f20:	b	12f04 <putchar_unlocked@plt+0x1f8c>
   12f24:	mov	r3, #118	; 0x76
   12f28:	b	12f04 <putchar_unlocked@plt+0x1f8c>
   12f2c:	mov	r3, #102	; 0x66
   12f30:	b	12f04 <putchar_unlocked@plt+0x1f8c>
   12f34:	ldr	r3, [sp, #40]	; 0x28
   12f38:	cmn	r3, #1
   12f3c:	bne	12f5c <putchar_unlocked@plt+0x1fe4>
   12f40:	ldr	r3, [sp, #48]	; 0x30
   12f44:	ldrb	r3, [r3, #1]
   12f48:	adds	r3, r3, #0
   12f4c:	movne	r3, #1
   12f50:	cmp	r3, #0
   12f54:	bne	12e50 <putchar_unlocked@plt+0x1ed8>
   12f58:	b	12d3c <putchar_unlocked@plt+0x1dc4>
   12f5c:	ldr	r3, [sp, #40]	; 0x28
   12f60:	subs	r3, r3, #1
   12f64:	b	12f4c <putchar_unlocked@plt+0x1fd4>
   12f68:	mov	r3, #0
   12f6c:	mov	r2, #0
   12f70:	strd	r2, [sp, #96]	; 0x60
   12f74:	ldr	r3, [sp, #40]	; 0x28
   12f78:	cmn	r3, #1
   12f7c:	bne	12f8c <putchar_unlocked@plt+0x2014>
   12f80:	ldr	r0, [sp, #48]	; 0x30
   12f84:	bl	10e88 <strlen@plt>
   12f88:	str	r0, [sp, #40]	; 0x28
   12f8c:	ldr	r5, [sp, #36]	; 0x24
   12f90:	mov	r3, #0
   12f94:	str	r3, [sp, #56]	; 0x38
   12f98:	ldr	r3, [sp, #28]
   12f9c:	add	r0, sp, #92	; 0x5c
   12fa0:	ldr	r1, [sp, #40]	; 0x28
   12fa4:	ldr	r2, [sp, #56]	; 0x38
   12fa8:	add	r2, r3, r2
   12fac:	ldr	r3, [sp, #48]	; 0x30
   12fb0:	add	fp, r3, r2
   12fb4:	sub	r2, r1, r2
   12fb8:	add	r3, sp, #96	; 0x60
   12fbc:	mov	r1, fp
   12fc0:	bl	14a6c <putchar_unlocked@plt+0x3af4>
   12fc4:	subs	r2, r0, #0
   12fc8:	beq	13008 <putchar_unlocked@plt+0x2090>
   12fcc:	cmn	r2, #1
   12fd0:	beq	131dc <putchar_unlocked@plt+0x2264>
   12fd4:	cmn	r2, #2
   12fd8:	bne	1314c <putchar_unlocked@plt+0x21d4>
   12fdc:	ldr	r3, [sp, #28]
   12fe0:	ldr	r2, [sp, #56]	; 0x38
   12fe4:	add	r3, r3, r2
   12fe8:	ldr	r2, [sp, #40]	; 0x28
   12fec:	cmp	r2, r3
   12ff0:	bls	131dc <putchar_unlocked@plt+0x2264>
   12ff4:	ldr	r2, [sp, #56]	; 0x38
   12ff8:	ldr	r3, [sp, #80]	; 0x50
   12ffc:	ldrb	r5, [r3, r2]
   13000:	cmp	r5, #0
   13004:	bne	1313c <putchar_unlocked@plt+0x21c4>
   13008:	ldr	r3, [sp, #56]	; 0x38
   1300c:	cmp	r3, #1
   13010:	bls	12a34 <putchar_unlocked@plt+0x1abc>
   13014:	ldr	r3, [sp, #28]
   13018:	mov	fp, #0
   1301c:	mov	ip, #92	; 0x5c
   13020:	ldr	r2, [sp, #56]	; 0x38
   13024:	add	r3, r3, r2
   13028:	ldr	r2, [sp, #24]
   1302c:	str	r3, [sp, #36]	; 0x24
   13030:	eor	r3, r5, #1
   13034:	and	r3, r3, r2
   13038:	mov	r2, #39	; 0x27
   1303c:	uxtb	r3, r3
   13040:	cmp	r3, #0
   13044:	beq	131e4 <putchar_unlocked@plt+0x226c>
   13048:	sub	r0, sl, #2
   1304c:	cmp	r7, #0
   13050:	clz	r0, r0
   13054:	lsr	r0, r0, #5
   13058:	bne	12958 <putchar_unlocked@plt+0x19e0>
   1305c:	ldr	r1, [sp, #52]	; 0x34
   13060:	eor	r1, r1, #1
   13064:	ands	r1, r0, r1
   13068:	beq	13098 <putchar_unlocked@plt+0x2120>
   1306c:	cmp	r9, r4
   13070:	add	r0, r4, #1
   13074:	str	r1, [sp, #52]	; 0x34
   13078:	strbhi	r2, [r8, r4]
   1307c:	cmp	r9, r0
   13080:	movhi	lr, #36	; 0x24
   13084:	strbhi	lr, [r8, r0]
   13088:	add	r0, r4, #2
   1308c:	add	r4, r4, #3
   13090:	cmp	r9, r0
   13094:	strbhi	r2, [r8, r0]
   13098:	cmp	r9, r4
   1309c:	add	r0, r4, #1
   130a0:	mov	fp, r3
   130a4:	strbhi	ip, [r8, r4]
   130a8:	cmp	r9, r0
   130ac:	lsrhi	r1, r6, #6
   130b0:	addhi	r1, r1, #48	; 0x30
   130b4:	strbhi	r1, [r8, r0]
   130b8:	add	r0, r4, #2
   130bc:	add	r4, r4, #3
   130c0:	cmp	r9, r0
   130c4:	ubfxhi	r1, r6, #3, #3
   130c8:	and	r6, r6, #7
   130cc:	add	r6, r6, #48	; 0x30
   130d0:	addhi	r1, r1, #48	; 0x30
   130d4:	strbhi	r1, [r8, r0]
   130d8:	eor	r0, fp, #1
   130dc:	ldr	r1, [sp, #28]
   130e0:	ldr	lr, [sp, #52]	; 0x34
   130e4:	add	r1, r1, #1
   130e8:	and	r0, r0, lr
   130ec:	ldr	lr, [sp, #36]	; 0x24
   130f0:	cmp	r1, lr
   130f4:	bcs	12e70 <putchar_unlocked@plt+0x1ef8>
   130f8:	cmp	r0, #0
   130fc:	beq	13120 <putchar_unlocked@plt+0x21a8>
   13100:	cmp	r9, r4
   13104:	add	r0, r4, #1
   13108:	strbhi	r2, [r8, r4]
   1310c:	cmp	r9, r0
   13110:	add	r4, r4, #2
   13114:	strbhi	r2, [r8, r0]
   13118:	mov	r0, #0
   1311c:	str	r0, [sp, #52]	; 0x34
   13120:	ldr	r0, [sp, #48]	; 0x30
   13124:	cmp	r9, r4
   13128:	str	r1, [sp, #28]
   1312c:	strbhi	r6, [r8, r4]
   13130:	add	r4, r4, #1
   13134:	ldrb	r6, [r0, r1]
   13138:	b	13040 <putchar_unlocked@plt+0x20c8>
   1313c:	ldr	r3, [sp, #56]	; 0x38
   13140:	add	r3, r3, #1
   13144:	str	r3, [sp, #56]	; 0x38
   13148:	b	12fdc <putchar_unlocked@plt+0x2064>
   1314c:	cmp	sl, #2
   13150:	movne	r3, #0
   13154:	andeq	r3, r7, #1
   13158:	cmp	r3, #0
   1315c:	movne	r1, #1
   13160:	bne	131bc <putchar_unlocked@plt+0x2244>
   13164:	ldr	r0, [sp, #92]	; 0x5c
   13168:	str	r2, [sp, #84]	; 0x54
   1316c:	bl	10db0 <iswprint@plt>
   13170:	ldr	r3, [sp, #56]	; 0x38
   13174:	cmp	r0, #0
   13178:	add	r0, sp, #96	; 0x60
   1317c:	moveq	r5, #0
   13180:	ldr	r2, [sp, #84]	; 0x54
   13184:	add	r3, r3, r2
   13188:	str	r3, [sp, #56]	; 0x38
   1318c:	bl	10d50 <mbsinit@plt>
   13190:	cmp	r0, #0
   13194:	beq	12f98 <putchar_unlocked@plt+0x2020>
   13198:	b	13008 <putchar_unlocked@plt+0x2090>
   1319c:	ldrb	r3, [fp, #1]!
   131a0:	cmp	r3, #94	; 0x5e
   131a4:	beq	12a84 <putchar_unlocked@plt+0x1b0c>
   131a8:	bhi	131c8 <putchar_unlocked@plt+0x2250>
   131ac:	sub	r3, r3, #91	; 0x5b
   131b0:	cmp	r3, #1
   131b4:	bls	12a84 <putchar_unlocked@plt+0x1b0c>
   131b8:	add	r1, r1, #1
   131bc:	cmp	r1, r2
   131c0:	bne	1319c <putchar_unlocked@plt+0x2224>
   131c4:	b	13164 <putchar_unlocked@plt+0x21ec>
   131c8:	cmp	r3, #96	; 0x60
   131cc:	beq	12a84 <putchar_unlocked@plt+0x1b0c>
   131d0:	cmp	r3, #124	; 0x7c
   131d4:	bne	131b8 <putchar_unlocked@plt+0x2240>
   131d8:	b	12a84 <putchar_unlocked@plt+0x1b0c>
   131dc:	mov	r5, #0
   131e0:	b	13008 <putchar_unlocked@plt+0x2090>
   131e4:	ldr	r1, [sp, #64]	; 0x40
   131e8:	cmp	r1, #0
   131ec:	beq	130d8 <putchar_unlocked@plt+0x2160>
   131f0:	cmp	r9, r4
   131f4:	mov	r1, #0
   131f8:	strbhi	ip, [r8, r4]
   131fc:	add	r4, r4, #1
   13200:	str	r1, [sp, #64]	; 0x40
   13204:	b	130d8 <putchar_unlocked@plt+0x2160>
   13208:	mov	r5, fp
   1320c:	ldr	fp, [sp, #24]
   13210:	mov	r6, #48	; 0x30
   13214:	b	12c24 <putchar_unlocked@plt+0x1cac>
   13218:	mov	r5, #0
   1321c:	b	12c24 <putchar_unlocked@plt+0x1cac>
   13220:	mov	r6, r1
   13224:	b	12e50 <putchar_unlocked@plt+0x1ed8>
   13228:	mov	r6, r1
   1322c:	b	12e40 <putchar_unlocked@plt+0x1ec8>
   13230:	ldr	r2, [sp, #28]
   13234:	ldr	r3, [sp, #40]	; 0x28
   13238:	subs	r3, r3, r2
   1323c:	movne	r3, #1
   13240:	b	126a8 <putchar_unlocked@plt+0x1730>
   13244:	ldr	r3, [sp, #60]	; 0x3c
   13248:	mov	sl, #2
   1324c:	ldr	r7, [sp, #72]	; 0x48
   13250:	adds	r6, r3, #0
   13254:	mov	r5, r3
   13258:	movne	r6, #1
   1325c:	cmp	r9, #0
   13260:	movne	r6, #0
   13264:	cmp	r6, #0
   13268:	bne	12638 <putchar_unlocked@plt+0x16c0>
   1326c:	ldr	r3, [sp, #68]	; 0x44
   13270:	ldr	r2, [sp, #44]	; 0x2c
   13274:	cmp	r2, #0
   13278:	moveq	r3, #0
   1327c:	andne	r3, r3, #1
   13280:	cmp	r3, #0
   13284:	movne	r3, r2
   13288:	subne	r3, r3, #1
   1328c:	bne	132bc <putchar_unlocked@plt+0x2344>
   13290:	cmp	r9, r4
   13294:	movhi	r3, #0
   13298:	strbhi	r3, [r8, r4]
   1329c:	mov	r0, r4
   132a0:	add	sp, sp, #108	; 0x6c
   132a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132a8:	mov	r3, r7
   132ac:	b	13270 <putchar_unlocked@plt+0x22f8>
   132b0:	cmp	r9, r4
   132b4:	strbhi	r2, [r8, r4]
   132b8:	add	r4, r4, #1
   132bc:	ldrb	r2, [r3, #1]!
   132c0:	cmp	r2, #0
   132c4:	bne	132b0 <putchar_unlocked@plt+0x2338>
   132c8:	b	13290 <putchar_unlocked@plt+0x2318>
   132cc:	andeq	r5, r1, r4, lsr #12
   132d0:	andeq	r5, r1, r7, lsr r6
   132d4:	andeq	r5, r1, r5, lsr r6
   132d8:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   132dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132e0:	sub	sp, sp, #52	; 0x34
   132e4:	mov	r6, r0
   132e8:	mov	r5, r3
   132ec:	mov	r8, r1
   132f0:	mov	r9, r2
   132f4:	bl	10ea0 <__errno_location@plt>
   132f8:	ldr	r3, [r0]
   132fc:	cmn	r6, #-2147483647	; 0x80000001
   13300:	str	r0, [sp, #24]
   13304:	ldr	r7, [pc, #368]	; 1347c <putchar_unlocked@plt+0x2504>
   13308:	str	r3, [sp, #32]
   1330c:	movne	r3, #0
   13310:	moveq	r3, #1
   13314:	orrs	r3, r3, r6, lsr #31
   13318:	ldr	r4, [r7]
   1331c:	beq	13324 <putchar_unlocked@plt+0x23ac>
   13320:	bl	10f6c <abort@plt>
   13324:	ldr	r2, [r7, #4]
   13328:	cmp	r2, r6
   1332c:	bgt	1339c <putchar_unlocked@plt+0x2424>
   13330:	add	sl, r7, #8
   13334:	mov	r3, #8
   13338:	cmp	r4, sl
   1333c:	add	r1, sp, #44	; 0x2c
   13340:	str	r2, [sp, #44]	; 0x2c
   13344:	sub	r2, r6, r2
   13348:	movne	r0, r4
   1334c:	moveq	r0, #0
   13350:	add	r2, r2, #1
   13354:	str	r3, [sp]
   13358:	mvn	r3, #-2147483648	; 0x80000000
   1335c:	bl	143ac <putchar_unlocked@plt+0x3434>
   13360:	cmp	r4, sl
   13364:	mov	fp, r0
   13368:	str	r0, [r7]
   1336c:	ldmeq	r4, {r0, r1}
   13370:	mov	r4, fp
   13374:	ldr	r2, [sp, #44]	; 0x2c
   13378:	stmeq	fp, {r0, r1}
   1337c:	mov	r1, #0
   13380:	ldr	r0, [r7, #4]
   13384:	sub	r2, r2, r0
   13388:	add	r0, fp, r0, lsl #3
   1338c:	lsl	r2, r2, #3
   13390:	bl	10eb8 <memset@plt>
   13394:	ldr	r3, [sp, #44]	; 0x2c
   13398:	str	r3, [r7, #4]
   1339c:	ldr	r3, [r5, #4]
   133a0:	add	sl, r4, r6, lsl #3
   133a4:	mov	r2, r8
   133a8:	ldr	fp, [r4, r6, lsl #3]
   133ac:	ldr	r7, [sl, #4]
   133b0:	orr	r3, r3, #1
   133b4:	str	r3, [sp, #28]
   133b8:	add	r3, r5, #8
   133bc:	mov	r1, fp
   133c0:	str	r3, [sp, #36]	; 0x24
   133c4:	mov	r0, r7
   133c8:	ldr	r3, [r5, #44]	; 0x2c
   133cc:	str	r3, [sp, #16]
   133d0:	ldr	r3, [r5, #40]	; 0x28
   133d4:	str	r3, [sp, #12]
   133d8:	add	r3, r5, #8
   133dc:	str	r3, [sp, #8]
   133e0:	ldr	r3, [sp, #28]
   133e4:	str	r3, [sp, #4]
   133e8:	ldr	r3, [r5]
   133ec:	str	r3, [sp]
   133f0:	mov	r3, r9
   133f4:	bl	125ec <putchar_unlocked@plt+0x1674>
   133f8:	cmp	fp, r0
   133fc:	bhi	13464 <putchar_unlocked@plt+0x24ec>
   13400:	ldr	r3, [pc, #120]	; 13480 <putchar_unlocked@plt+0x2508>
   13404:	add	fp, r0, #1
   13408:	str	fp, [r4, r6, lsl #3]
   1340c:	cmp	r7, r3
   13410:	beq	1341c <putchar_unlocked@plt+0x24a4>
   13414:	mov	r0, r7
   13418:	bl	12394 <putchar_unlocked@plt+0x141c>
   1341c:	mov	r0, fp
   13420:	bl	1429c <putchar_unlocked@plt+0x3324>
   13424:	ldr	r3, [r5, #44]	; 0x2c
   13428:	mov	r2, r8
   1342c:	mov	r1, fp
   13430:	str	r0, [sl, #4]
   13434:	mov	r7, r0
   13438:	str	r3, [sp, #16]
   1343c:	ldr	r3, [r5, #40]	; 0x28
   13440:	str	r3, [sp, #12]
   13444:	add	r3, r5, #8
   13448:	str	r3, [sp, #8]
   1344c:	ldr	r3, [sp, #28]
   13450:	str	r3, [sp, #4]
   13454:	ldr	r3, [r5]
   13458:	str	r3, [sp]
   1345c:	mov	r3, r9
   13460:	bl	125ec <putchar_unlocked@plt+0x1674>
   13464:	ldr	r3, [sp, #24]
   13468:	mov	r0, r7
   1346c:	ldr	r2, [sp, #32]
   13470:	str	r2, [r3]
   13474:	add	sp, sp, #52	; 0x34
   13478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1347c:	andeq	r6, r2, r4, lsl #2
   13480:	andeq	r6, r2, r0, ror r1
   13484:	push	{r4, r5, r6, lr}
   13488:	mov	r5, r0
   1348c:	bl	10ea0 <__errno_location@plt>
   13490:	mov	r4, r0
   13494:	cmp	r5, #0
   13498:	ldr	r0, [pc, #20]	; 134b4 <putchar_unlocked@plt+0x253c>
   1349c:	mov	r1, #48	; 0x30
   134a0:	movne	r0, r5
   134a4:	ldr	r6, [r4]
   134a8:	bl	1449c <putchar_unlocked@plt+0x3524>
   134ac:	str	r6, [r4]
   134b0:	pop	{r4, r5, r6, pc}
   134b4:	andeq	r6, r2, r0, ror r2
   134b8:	ldr	r3, [pc, #12]	; 134cc <putchar_unlocked@plt+0x2554>
   134bc:	cmp	r0, #0
   134c0:	moveq	r0, r3
   134c4:	ldr	r0, [r0]
   134c8:	bx	lr
   134cc:	andeq	r6, r2, r0, ror r2
   134d0:	ldr	r3, [pc, #12]	; 134e4 <putchar_unlocked@plt+0x256c>
   134d4:	cmp	r0, #0
   134d8:	moveq	r0, r3
   134dc:	str	r1, [r0]
   134e0:	bx	lr
   134e4:	andeq	r6, r2, r0, ror r2
   134e8:	ldr	r3, [pc, #52]	; 13524 <putchar_unlocked@plt+0x25ac>
   134ec:	cmp	r0, #0
   134f0:	push	{lr}		; (str lr, [sp, #-4]!)
   134f4:	lsr	lr, r1, #5
   134f8:	and	r1, r1, #31
   134fc:	moveq	r0, r3
   13500:	add	r3, r0, #8
   13504:	ldr	ip, [r3, lr, lsl #2]
   13508:	lsr	r0, ip, r1
   1350c:	eor	r2, r2, r0
   13510:	and	r0, r0, #1
   13514:	and	r2, r2, #1
   13518:	eor	r1, ip, r2, lsl r1
   1351c:	str	r1, [r3, lr, lsl #2]
   13520:	pop	{pc}		; (ldr pc, [sp], #4)
   13524:	andeq	r6, r2, r0, ror r2
   13528:	ldr	r3, [pc, #16]	; 13540 <putchar_unlocked@plt+0x25c8>
   1352c:	cmp	r0, #0
   13530:	movne	r3, r0
   13534:	ldr	r0, [r3, #4]
   13538:	str	r1, [r3, #4]
   1353c:	bx	lr
   13540:	andeq	r6, r2, r0, ror r2
   13544:	ldr	r3, [pc, #44]	; 13578 <putchar_unlocked@plt+0x2600>
   13548:	cmp	r0, #0
   1354c:	moveq	r0, r3
   13550:	mov	r3, #10
   13554:	cmp	r2, #0
   13558:	cmpne	r1, #0
   1355c:	str	r3, [r0]
   13560:	bne	1356c <putchar_unlocked@plt+0x25f4>
   13564:	push	{r4, lr}
   13568:	bl	10f6c <abort@plt>
   1356c:	str	r1, [r0, #40]	; 0x28
   13570:	str	r2, [r0, #44]	; 0x2c
   13574:	bx	lr
   13578:	andeq	r6, r2, r0, ror r2
   1357c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13580:	sub	sp, sp, #24
   13584:	mov	sl, r3
   13588:	mov	r7, r0
   1358c:	mov	r8, r1
   13590:	mov	r9, r2
   13594:	ldr	r4, [sp, #56]	; 0x38
   13598:	ldr	r3, [pc, #88]	; 135f8 <putchar_unlocked@plt+0x2680>
   1359c:	cmp	r4, #0
   135a0:	moveq	r4, r3
   135a4:	bl	10ea0 <__errno_location@plt>
   135a8:	ldr	r3, [r4, #44]	; 0x2c
   135ac:	mov	r5, r0
   135b0:	mov	r2, r9
   135b4:	mov	r1, r8
   135b8:	mov	r0, r7
   135bc:	ldr	r6, [r5]
   135c0:	str	r3, [sp, #16]
   135c4:	ldr	r3, [r4, #40]	; 0x28
   135c8:	str	r3, [sp, #12]
   135cc:	add	r3, r4, #8
   135d0:	str	r3, [sp, #8]
   135d4:	ldr	r3, [r4, #4]
   135d8:	str	r3, [sp, #4]
   135dc:	ldr	r3, [r4]
   135e0:	str	r3, [sp]
   135e4:	mov	r3, sl
   135e8:	bl	125ec <putchar_unlocked@plt+0x1674>
   135ec:	str	r6, [r5]
   135f0:	add	sp, sp, #24
   135f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   135f8:	andeq	r6, r2, r0, ror r2
   135fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13600:	cmp	r3, #0
   13604:	sub	sp, sp, #44	; 0x2c
   13608:	mov	r6, r2
   1360c:	mov	sl, r1
   13610:	mov	r9, r0
   13614:	ldr	r4, [pc, #176]	; 136cc <putchar_unlocked@plt+0x2754>
   13618:	movne	r4, r3
   1361c:	bl	10ea0 <__errno_location@plt>
   13620:	ldr	r3, [r0]
   13624:	mov	r1, #0
   13628:	mov	r2, r9
   1362c:	mov	r8, r0
   13630:	mov	r0, r1
   13634:	ldr	r5, [r4, #4]
   13638:	add	fp, r4, #8
   1363c:	str	r3, [sp, #28]
   13640:	ldr	r3, [r4, #44]	; 0x2c
   13644:	cmp	r6, #0
   13648:	orreq	r5, r5, #1
   1364c:	str	r3, [sp, #16]
   13650:	ldr	r3, [r4, #40]	; 0x28
   13654:	stmib	sp, {r5, fp}
   13658:	str	r3, [sp, #12]
   1365c:	ldr	r3, [r4]
   13660:	str	r3, [sp]
   13664:	mov	r3, sl
   13668:	bl	125ec <putchar_unlocked@plt+0x1674>
   1366c:	add	r1, r0, #1
   13670:	mov	r7, r0
   13674:	mov	r0, r1
   13678:	str	r1, [sp, #36]	; 0x24
   1367c:	bl	1429c <putchar_unlocked@plt+0x3324>
   13680:	ldr	r3, [r4, #44]	; 0x2c
   13684:	mov	r2, r9
   13688:	ldr	r1, [sp, #36]	; 0x24
   1368c:	str	r3, [sp, #16]
   13690:	ldr	r3, [r4, #40]	; 0x28
   13694:	stmib	sp, {r5, fp}
   13698:	str	r0, [sp, #32]
   1369c:	str	r3, [sp, #12]
   136a0:	ldr	r3, [r4]
   136a4:	str	r3, [sp]
   136a8:	mov	r3, sl
   136ac:	bl	125ec <putchar_unlocked@plt+0x1674>
   136b0:	ldr	r3, [sp, #28]
   136b4:	cmp	r6, #0
   136b8:	ldr	r0, [sp, #32]
   136bc:	str	r3, [r8]
   136c0:	strne	r7, [r6]
   136c4:	add	sp, sp, #44	; 0x2c
   136c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136cc:	andeq	r6, r2, r0, ror r2
   136d0:	mov	r3, r2
   136d4:	mov	r2, #0
   136d8:	b	135fc <putchar_unlocked@plt+0x2684>
   136dc:	push	{r4, r5, r6, r7, r8, lr}
   136e0:	mov	r6, #1
   136e4:	ldr	r4, [pc, #100]	; 13750 <putchar_unlocked@plt+0x27d8>
   136e8:	ldr	r5, [r4]
   136ec:	add	r7, r5, #4
   136f0:	ldr	r3, [r4, #4]
   136f4:	cmp	r3, r6
   136f8:	bgt	13740 <putchar_unlocked@plt+0x27c8>
   136fc:	ldr	r6, [pc, #80]	; 13754 <putchar_unlocked@plt+0x27dc>
   13700:	ldr	r0, [r5, #4]
   13704:	cmp	r0, r6
   13708:	beq	1371c <putchar_unlocked@plt+0x27a4>
   1370c:	bl	12394 <putchar_unlocked@plt+0x141c>
   13710:	mov	r3, #256	; 0x100
   13714:	str	r3, [r4, #8]
   13718:	str	r6, [r4, #12]
   1371c:	ldr	r6, [pc, #52]	; 13758 <putchar_unlocked@plt+0x27e0>
   13720:	cmp	r5, r6
   13724:	beq	13734 <putchar_unlocked@plt+0x27bc>
   13728:	mov	r0, r5
   1372c:	bl	12394 <putchar_unlocked@plt+0x141c>
   13730:	str	r6, [r4]
   13734:	mov	r3, #1
   13738:	str	r3, [r4, #4]
   1373c:	pop	{r4, r5, r6, r7, r8, pc}
   13740:	ldr	r0, [r7, r6, lsl #3]
   13744:	add	r6, r6, #1
   13748:	bl	12394 <putchar_unlocked@plt+0x141c>
   1374c:	b	136f0 <putchar_unlocked@plt+0x2778>
   13750:	andeq	r6, r2, r4, lsl #2
   13754:	andeq	r6, r2, r0, ror r1
   13758:	andeq	r6, r2, ip, lsl #2
   1375c:	ldr	r3, [pc, #4]	; 13768 <putchar_unlocked@plt+0x27f0>
   13760:	mvn	r2, #0
   13764:	b	132dc <putchar_unlocked@plt+0x2364>
   13768:	andeq	r6, r2, r0, ror r2
   1376c:	ldr	r3, [pc]	; 13774 <putchar_unlocked@plt+0x27fc>
   13770:	b	132dc <putchar_unlocked@plt+0x2364>
   13774:	andeq	r6, r2, r0, ror r2
   13778:	mov	r1, r0
   1377c:	mov	r0, #0
   13780:	b	1375c <putchar_unlocked@plt+0x27e4>
   13784:	mov	r2, r1
   13788:	mov	r1, r0
   1378c:	mov	r0, #0
   13790:	b	1376c <putchar_unlocked@plt+0x27f4>
   13794:	push	{r4, r5, lr}
   13798:	sub	sp, sp, #52	; 0x34
   1379c:	mov	r5, r2
   137a0:	mov	r4, r0
   137a4:	mov	r0, sp
   137a8:	bl	12490 <putchar_unlocked@plt+0x1518>
   137ac:	mov	r3, sp
   137b0:	mvn	r2, #0
   137b4:	mov	r1, r5
   137b8:	mov	r0, r4
   137bc:	bl	132dc <putchar_unlocked@plt+0x2364>
   137c0:	add	sp, sp, #52	; 0x34
   137c4:	pop	{r4, r5, pc}
   137c8:	push	{r4, r5, r6, lr}
   137cc:	sub	sp, sp, #48	; 0x30
   137d0:	mov	r5, r2
   137d4:	mov	r6, r3
   137d8:	mov	r4, r0
   137dc:	mov	r0, sp
   137e0:	bl	12490 <putchar_unlocked@plt+0x1518>
   137e4:	mov	r3, sp
   137e8:	mov	r2, r6
   137ec:	mov	r1, r5
   137f0:	mov	r0, r4
   137f4:	bl	132dc <putchar_unlocked@plt+0x2364>
   137f8:	add	sp, sp, #48	; 0x30
   137fc:	pop	{r4, r5, r6, pc}
   13800:	mov	r2, r1
   13804:	mov	r1, r0
   13808:	mov	r0, #0
   1380c:	b	13794 <putchar_unlocked@plt+0x281c>
   13810:	mov	r3, r2
   13814:	mov	r2, r1
   13818:	mov	r1, r0
   1381c:	mov	r0, #0
   13820:	b	137c8 <putchar_unlocked@plt+0x2850>
   13824:	push	{r4, r5, r6, lr}
   13828:	mov	r4, r0
   1382c:	mov	r5, r1
   13830:	mov	r6, r2
   13834:	sub	sp, sp, #48	; 0x30
   13838:	mov	ip, sp
   1383c:	ldr	lr, [pc, #64]	; 13884 <putchar_unlocked@plt+0x290c>
   13840:	ldm	lr!, {r0, r1, r2, r3}
   13844:	stmia	ip!, {r0, r1, r2, r3}
   13848:	ldm	lr!, {r0, r1, r2, r3}
   1384c:	stmia	ip!, {r0, r1, r2, r3}
   13850:	ldm	lr, {r0, r1, r2, r3}
   13854:	stm	ip, {r0, r1, r2, r3}
   13858:	mov	r1, r6
   1385c:	mov	r2, #1
   13860:	mov	r0, sp
   13864:	bl	134e8 <putchar_unlocked@plt+0x2570>
   13868:	mov	r3, sp
   1386c:	mov	r2, r5
   13870:	mov	r1, r4
   13874:	mov	r0, #0
   13878:	bl	132dc <putchar_unlocked@plt+0x2364>
   1387c:	add	sp, sp, #48	; 0x30
   13880:	pop	{r4, r5, r6, pc}
   13884:	andeq	r6, r2, r0, ror r2
   13888:	mov	r2, r1
   1388c:	mvn	r1, #0
   13890:	b	13824 <putchar_unlocked@plt+0x28ac>
   13894:	mov	r1, #58	; 0x3a
   13898:	b	13888 <putchar_unlocked@plt+0x2910>
   1389c:	mov	r2, #58	; 0x3a
   138a0:	b	13824 <putchar_unlocked@plt+0x28ac>
   138a4:	push	{r4, r5, lr}
   138a8:	sub	sp, sp, #100	; 0x64
   138ac:	mov	r4, r0
   138b0:	mov	r0, sp
   138b4:	mov	r5, r2
   138b8:	bl	12490 <putchar_unlocked@plt+0x1518>
   138bc:	mov	ip, sp
   138c0:	add	lr, sp, #48	; 0x30
   138c4:	ldm	ip!, {r0, r1, r2, r3}
   138c8:	stmia	lr!, {r0, r1, r2, r3}
   138cc:	ldm	ip!, {r0, r1, r2, r3}
   138d0:	stmia	lr!, {r0, r1, r2, r3}
   138d4:	ldm	ip, {r0, r1, r2, r3}
   138d8:	stm	lr, {r0, r1, r2, r3}
   138dc:	mov	r2, #1
   138e0:	mov	r1, #58	; 0x3a
   138e4:	add	r0, sp, #48	; 0x30
   138e8:	bl	134e8 <putchar_unlocked@plt+0x2570>
   138ec:	add	r3, sp, #48	; 0x30
   138f0:	mvn	r2, #0
   138f4:	mov	r1, r5
   138f8:	mov	r0, r4
   138fc:	bl	132dc <putchar_unlocked@plt+0x2364>
   13900:	add	sp, sp, #100	; 0x64
   13904:	pop	{r4, r5, pc}
   13908:	push	{r4, r5, r6, r7, lr}
   1390c:	mov	r4, r0
   13910:	mov	r6, r1
   13914:	mov	r7, r2
   13918:	mov	r5, r3
   1391c:	sub	sp, sp, #52	; 0x34
   13920:	ldr	lr, [pc, #68]	; 1396c <putchar_unlocked@plt+0x29f4>
   13924:	mov	ip, sp
   13928:	ldm	lr!, {r0, r1, r2, r3}
   1392c:	stmia	ip!, {r0, r1, r2, r3}
   13930:	ldm	lr!, {r0, r1, r2, r3}
   13934:	stmia	ip!, {r0, r1, r2, r3}
   13938:	ldm	lr, {r0, r1, r2, r3}
   1393c:	stm	ip, {r0, r1, r2, r3}
   13940:	mov	r2, r7
   13944:	mov	r1, r6
   13948:	mov	r0, sp
   1394c:	bl	13544 <putchar_unlocked@plt+0x25cc>
   13950:	ldr	r2, [sp, #72]	; 0x48
   13954:	mov	r3, sp
   13958:	mov	r1, r5
   1395c:	mov	r0, r4
   13960:	bl	132dc <putchar_unlocked@plt+0x2364>
   13964:	add	sp, sp, #52	; 0x34
   13968:	pop	{r4, r5, r6, r7, pc}
   1396c:	andeq	r6, r2, r0, ror r2
   13970:	mvn	ip, #0
   13974:	push	{r0, r1, r2, lr}
   13978:	str	ip, [sp]
   1397c:	bl	13908 <putchar_unlocked@plt+0x2990>
   13980:	add	sp, sp, #12
   13984:	pop	{pc}		; (ldr pc, [sp], #4)
   13988:	mov	r3, r2
   1398c:	mov	r2, r1
   13990:	mov	r1, r0
   13994:	mov	r0, #0
   13998:	b	13970 <putchar_unlocked@plt+0x29f8>
   1399c:	push	{r0, r1, r2, lr}
   139a0:	str	r3, [sp]
   139a4:	mov	r3, r2
   139a8:	mov	r2, r1
   139ac:	mov	r1, r0
   139b0:	mov	r0, #0
   139b4:	bl	13908 <putchar_unlocked@plt+0x2990>
   139b8:	add	sp, sp, #12
   139bc:	pop	{pc}		; (ldr pc, [sp], #4)
   139c0:	ldr	r3, [pc]	; 139c8 <putchar_unlocked@plt+0x2a50>
   139c4:	b	132dc <putchar_unlocked@plt+0x2364>
   139c8:	andeq	r6, r2, r4, lsl r1
   139cc:	mov	r2, r1
   139d0:	mov	r1, r0
   139d4:	mov	r0, #0
   139d8:	b	139c0 <putchar_unlocked@plt+0x2a48>
   139dc:	mvn	r2, #0
   139e0:	b	139c0 <putchar_unlocked@plt+0x2a48>
   139e4:	mov	r1, r0
   139e8:	mov	r0, #0
   139ec:	b	139dc <putchar_unlocked@plt+0x2a64>
   139f0:	mov	r3, r2
   139f4:	push	{r4, lr}
   139f8:	mov	r2, r1
   139fc:	mov	r1, #1
   13a00:	bl	10dbc <fwrite@plt>
   13a04:	mov	r0, #0
   13a08:	pop	{r4, pc}
   13a0c:	mov	r3, r0
   13a10:	push	{r4, lr}
   13a14:	mov	r0, r2
   13a18:	cmp	r3, #65536	; 0x10000
   13a1c:	mov	r1, #1
   13a20:	ldrcc	r2, [pc, #12]	; 13a34 <putchar_unlocked@plt+0x2abc>
   13a24:	ldrcs	r2, [pc, #12]	; 13a38 <putchar_unlocked@plt+0x2ac0>
   13a28:	bl	10ee8 <__fprintf_chk@plt>
   13a2c:	mvn	r0, #0
   13a30:	pop	{r4, pc}
   13a34:	andeq	r5, r1, r7, lsl #13
   13a38:	andeq	r5, r1, lr, lsl #13
   13a3c:	push	{r0, r1, r4, r5, r6, lr}
   13a40:	subs	r4, r1, #0
   13a44:	mov	r5, r0
   13a48:	mov	r2, #5
   13a4c:	bne	13a7c <putchar_unlocked@plt+0x2b04>
   13a50:	mov	r0, r4
   13a54:	ldr	r1, [pc, #92]	; 13ab8 <putchar_unlocked@plt+0x2b40>
   13a58:	bl	10d8c <dcgettext@plt>
   13a5c:	mov	r2, r0
   13a60:	mov	r3, r5
   13a64:	mov	r1, r4
   13a68:	mov	r0, #1
   13a6c:	bl	10e04 <error@plt>
   13a70:	mvn	r0, #0
   13a74:	add	sp, sp, #8
   13a78:	pop	{r4, r5, r6, pc}
   13a7c:	ldr	r1, [pc, #56]	; 13abc <putchar_unlocked@plt+0x2b44>
   13a80:	mov	r0, #0
   13a84:	bl	10d8c <dcgettext@plt>
   13a88:	mov	r6, r0
   13a8c:	mov	r1, r4
   13a90:	mov	r2, #5
   13a94:	mov	r0, #0
   13a98:	bl	10d8c <dcgettext@plt>
   13a9c:	mov	r3, r5
   13aa0:	mov	r2, r6
   13aa4:	str	r0, [sp]
   13aa8:	mov	r1, #0
   13aac:	mov	r0, #1
   13ab0:	bl	10e04 <error@plt>
   13ab4:	b	13a70 <putchar_unlocked@plt+0x2af8>
   13ab8:	muleq	r1, r5, r6
   13abc:	andeq	r5, r1, r2, asr #13
   13ac0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ac4:	mov	r6, r3
   13ac8:	sub	sp, sp, #64	; 0x40
   13acc:	mov	r5, r0
   13ad0:	mov	r9, r1
   13ad4:	mov	r8, r2
   13ad8:	ldr	r4, [pc, #392]	; 13c68 <putchar_unlocked@plt+0x2cf0>
   13adc:	ldr	r3, [r4]
   13ae0:	cmp	r3, #0
   13ae4:	bne	13b3c <putchar_unlocked@plt+0x2bc4>
   13ae8:	bl	14a38 <putchar_unlocked@plt+0x3ac0>
   13aec:	ldr	r1, [pc, #376]	; 13c6c <putchar_unlocked@plt+0x2cf4>
   13af0:	mov	r7, r0
   13af4:	bl	10d08 <strcmp@plt>
   13af8:	cmp	r0, #0
   13afc:	moveq	r3, #1
   13b00:	movne	r3, #0
   13b04:	str	r3, [r4, #4]
   13b08:	beq	13b34 <putchar_unlocked@plt+0x2bbc>
   13b0c:	ldr	r1, [pc, #344]	; 13c6c <putchar_unlocked@plt+0x2cf4>
   13b10:	mov	r0, r7
   13b14:	bl	10e28 <iconv_open@plt>
   13b18:	cmn	r0, #1
   13b1c:	str	r0, [r4, #8]
   13b20:	bne	13b34 <putchar_unlocked@plt+0x2bbc>
   13b24:	ldr	r1, [pc, #320]	; 13c6c <putchar_unlocked@plt+0x2cf4>
   13b28:	ldr	r0, [pc, #320]	; 13c70 <putchar_unlocked@plt+0x2cf8>
   13b2c:	bl	10e28 <iconv_open@plt>
   13b30:	str	r0, [r4, #8]
   13b34:	mov	r3, #1
   13b38:	str	r3, [r4]
   13b3c:	ldr	r3, [r4, #4]
   13b40:	cmp	r3, #0
   13b44:	bne	13b5c <putchar_unlocked@plt+0x2be4>
   13b48:	ldr	r3, [r4, #8]
   13b4c:	cmn	r3, #1
   13b50:	moveq	r2, r6
   13b54:	ldreq	r1, [pc, #280]	; 13c74 <putchar_unlocked@plt+0x2cfc>
   13b58:	beq	13c20 <putchar_unlocked@plt+0x2ca8>
   13b5c:	cmp	r5, #127	; 0x7f
   13b60:	add	r7, sp, #28
   13b64:	movls	r1, #1
   13b68:	strbls	r5, [sp, #28]
   13b6c:	bls	13b90 <putchar_unlocked@plt+0x2c18>
   13b70:	mov	r2, #6
   13b74:	mov	r1, r5
   13b78:	mov	r0, r7
   13b7c:	bl	13cb0 <putchar_unlocked@plt+0x2d38>
   13b80:	subs	r1, r0, #0
   13b84:	movlt	r2, r6
   13b88:	ldrlt	r1, [pc, #232]	; 13c78 <putchar_unlocked@plt+0x2d00>
   13b8c:	blt	13c20 <putchar_unlocked@plt+0x2ca8>
   13b90:	ldr	r3, [r4, #4]
   13b94:	cmp	r3, #0
   13b98:	movne	r2, r6
   13b9c:	bne	13c5c <putchar_unlocked@plt+0x2ce4>
   13ba0:	mov	r3, #25
   13ba4:	add	sl, sp, #24
   13ba8:	ldr	r0, [r4, #8]
   13bac:	add	r2, sp, #16
   13bb0:	str	r7, [sp, #12]
   13bb4:	add	r7, sp, #36	; 0x24
   13bb8:	str	sl, [sp]
   13bbc:	str	r1, [sp, #16]
   13bc0:	add	r1, sp, #12
   13bc4:	str	r7, [sp, #20]
   13bc8:	str	r3, [sp, #24]
   13bcc:	add	r3, sp, #20
   13bd0:	bl	10cfc <iconv@plt>
   13bd4:	ldr	r2, [sp, #16]
   13bd8:	cmn	r0, #1
   13bdc:	movne	r3, #0
   13be0:	moveq	r3, #1
   13be4:	cmp	r2, #0
   13be8:	movne	r3, #1
   13bec:	cmp	r3, #0
   13bf0:	bne	13c18 <putchar_unlocked@plt+0x2ca0>
   13bf4:	cmp	r0, #0
   13bf8:	beq	13c30 <putchar_unlocked@plt+0x2cb8>
   13bfc:	ldr	r3, [sp, #20]
   13c00:	sub	r3, r3, r7
   13c04:	cmp	r3, #1
   13c08:	bne	13c30 <putchar_unlocked@plt+0x2cb8>
   13c0c:	ldrb	r3, [sp, #36]	; 0x24
   13c10:	cmp	r3, #63	; 0x3f
   13c14:	bne	13c30 <putchar_unlocked@plt+0x2cb8>
   13c18:	mov	r2, r6
   13c1c:	mov	r1, #0
   13c20:	mov	r0, r5
   13c24:	blx	r8
   13c28:	add	sp, sp, #64	; 0x40
   13c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c30:	mov	r2, #0
   13c34:	add	r3, sp, #20
   13c38:	str	sl, [sp]
   13c3c:	mov	r1, r2
   13c40:	ldr	r0, [r4, #8]
   13c44:	bl	10cfc <iconv@plt>
   13c48:	cmn	r0, #1
   13c4c:	mov	r2, r6
   13c50:	ldrne	r1, [sp, #20]
   13c54:	subne	r1, r1, r7
   13c58:	beq	13c1c <putchar_unlocked@plt+0x2ca4>
   13c5c:	mov	r0, r7
   13c60:	blx	r9
   13c64:	b	13c28 <putchar_unlocked@plt+0x2cb0>
   13c68:	andeq	r6, r2, r0, lsr #5
   13c6c:	strdeq	r5, [r1], -r3
   13c70:	strdeq	r5, [r1], -r9
   13c74:	strdeq	r5, [r1], -pc	; <UNPREDICTABLE>
   13c78:	andeq	r5, r1, r9, lsl r7
   13c7c:	mov	ip, r1
   13c80:	mov	r3, r0
   13c84:	ldr	r1, [pc, #24]	; 13ca4 <putchar_unlocked@plt+0x2d2c>
   13c88:	cmp	r2, #0
   13c8c:	ldr	r0, [pc, #20]	; 13ca8 <putchar_unlocked@plt+0x2d30>
   13c90:	moveq	r2, r1
   13c94:	ldr	r1, [pc, #16]	; 13cac <putchar_unlocked@plt+0x2d34>
   13c98:	movne	r2, r0
   13c9c:	mov	r0, ip
   13ca0:	b	13ac0 <putchar_unlocked@plt+0x2b48>
   13ca4:	andeq	r3, r1, ip, lsl #20
   13ca8:	andeq	r3, r1, ip, lsr sl
   13cac:	strdeq	r3, [r1], -r0
   13cb0:	cmp	r1, #127	; 0x7f
   13cb4:	bls	13cf0 <putchar_unlocked@plt+0x2d78>
   13cb8:	cmp	r1, #2048	; 0x800
   13cbc:	bcc	13d4c <putchar_unlocked@plt+0x2dd4>
   13cc0:	cmp	r1, #65536	; 0x10000
   13cc4:	bcs	13ce0 <putchar_unlocked@plt+0x2d68>
   13cc8:	sub	r3, r1, #55296	; 0xd800
   13ccc:	cmp	r3, #2048	; 0x800
   13cd0:	bcs	13d5c <putchar_unlocked@plt+0x2de4>
   13cd4:	mvn	r3, #0
   13cd8:	mov	r0, r3
   13cdc:	bx	lr
   13ce0:	cmp	r1, #1114112	; 0x110000
   13ce4:	bcs	13cd4 <putchar_unlocked@plt+0x2d5c>
   13ce8:	cmp	r2, #3
   13cec:	bgt	13cf8 <putchar_unlocked@plt+0x2d80>
   13cf0:	mvn	r3, #1
   13cf4:	b	13cd8 <putchar_unlocked@plt+0x2d60>
   13cf8:	and	r3, r1, #63	; 0x3f
   13cfc:	lsr	r1, r1, #6
   13d00:	mvn	r3, r3, lsl #25
   13d04:	orr	r1, r1, #65536	; 0x10000
   13d08:	mvn	r3, r3, lsr #25
   13d0c:	strb	r3, [r0, #3]
   13d10:	mov	r3, #4
   13d14:	and	r2, r1, #63	; 0x3f
   13d18:	lsr	r1, r1, #6
   13d1c:	mvn	r2, r2, lsl #25
   13d20:	orr	r1, r1, #2048	; 0x800
   13d24:	mvn	r2, r2, lsr #25
   13d28:	strb	r2, [r0, #2]
   13d2c:	and	r2, r1, #63	; 0x3f
   13d30:	lsr	r1, r1, #6
   13d34:	mvn	r2, r2, lsl #25
   13d38:	orr	r1, r1, #192	; 0xc0
   13d3c:	mvn	r2, r2, lsr #25
   13d40:	strb	r1, [r0]
   13d44:	strb	r2, [r0, #1]
   13d48:	b	13cd8 <putchar_unlocked@plt+0x2d60>
   13d4c:	cmp	r2, #1
   13d50:	movgt	r3, #2
   13d54:	ble	13cf0 <putchar_unlocked@plt+0x2d78>
   13d58:	b	13d2c <putchar_unlocked@plt+0x2db4>
   13d5c:	cmp	r2, #2
   13d60:	movgt	r3, #3
   13d64:	bgt	13d14 <putchar_unlocked@plt+0x2d9c>
   13d68:	b	13cf0 <putchar_unlocked@plt+0x2d78>
   13d6c:	push	{r4, r5, r6, lr}
   13d70:	cmp	r1, #0
   13d74:	sub	sp, sp, #32
   13d78:	mov	r5, r0
   13d7c:	ldr	r4, [sp, #48]	; 0x30
   13d80:	ldr	r6, [sp, #52]	; 0x34
   13d84:	beq	13e38 <putchar_unlocked@plt+0x2ec0>
   13d88:	strd	r2, [sp]
   13d8c:	mov	r3, r1
   13d90:	mov	r1, #1
   13d94:	ldr	r2, [pc, #856]	; 140f4 <putchar_unlocked@plt+0x317c>
   13d98:	bl	10ee8 <__fprintf_chk@plt>
   13d9c:	mov	r2, #5
   13da0:	ldr	r1, [pc, #848]	; 140f8 <putchar_unlocked@plt+0x3180>
   13da4:	mov	r0, #0
   13da8:	bl	10d8c <dcgettext@plt>
   13dac:	movw	r3, #2022	; 0x7e6
   13db0:	ldr	r2, [pc, #836]	; 140fc <putchar_unlocked@plt+0x3184>
   13db4:	mov	r1, #1
   13db8:	str	r3, [sp]
   13dbc:	mov	r3, r0
   13dc0:	mov	r0, r5
   13dc4:	bl	10ee8 <__fprintf_chk@plt>
   13dc8:	mov	r1, r5
   13dcc:	mov	r0, #10
   13dd0:	bl	10d80 <fputc_unlocked@plt>
   13dd4:	mov	r2, #5
   13dd8:	ldr	r1, [pc, #800]	; 14100 <putchar_unlocked@plt+0x3188>
   13ddc:	mov	r0, #0
   13de0:	bl	10d8c <dcgettext@plt>
   13de4:	mov	r2, r0
   13de8:	mov	r1, #1
   13dec:	ldr	r3, [pc, #784]	; 14104 <putchar_unlocked@plt+0x318c>
   13df0:	mov	r0, r5
   13df4:	bl	10ee8 <__fprintf_chk@plt>
   13df8:	mov	r1, r5
   13dfc:	mov	r0, #10
   13e00:	bl	10d80 <fputc_unlocked@plt>
   13e04:	cmp	r6, #9
   13e08:	ldrls	pc, [pc, r6, lsl #2]
   13e0c:	b	140e8 <putchar_unlocked@plt+0x3170>
   13e10:	andeq	r3, r1, r8, lsr #30
   13e14:	andeq	r3, r1, r0, asr lr
   13e18:	andeq	r3, r1, ip, ror lr
   13e1c:			; <UNDEFINED> instruction: 0x00013eb0
   13e20:	andeq	r3, r1, ip, ror #29
   13e24:	andeq	r3, r1, r0, lsr pc
   13e28:	andeq	r3, r1, r8, ror pc
   13e2c:	andeq	r3, r1, r8, asr #31
   13e30:	andeq	r4, r1, r0, lsr #32
   13e34:	andeq	r4, r1, r0, lsl #1
   13e38:	mov	r1, #1
   13e3c:	str	r3, [sp]
   13e40:	mov	r3, r2
   13e44:	ldr	r2, [pc, #700]	; 14108 <putchar_unlocked@plt+0x3190>
   13e48:	bl	10ee8 <__fprintf_chk@plt>
   13e4c:	b	13d9c <putchar_unlocked@plt+0x2e24>
   13e50:	mov	r2, #5
   13e54:	ldr	r1, [pc, #688]	; 1410c <putchar_unlocked@plt+0x3194>
   13e58:	mov	r0, #0
   13e5c:	bl	10d8c <dcgettext@plt>
   13e60:	ldr	r3, [r4]
   13e64:	mov	r2, r0
   13e68:	mov	r1, #1
   13e6c:	mov	r0, r5
   13e70:	add	sp, sp, #32
   13e74:	pop	{r4, r5, r6, lr}
   13e78:	b	10ee8 <__fprintf_chk@plt>
   13e7c:	mov	r2, #5
   13e80:	ldr	r1, [pc, #648]	; 14110 <putchar_unlocked@plt+0x3198>
   13e84:	mov	r0, #0
   13e88:	bl	10d8c <dcgettext@plt>
   13e8c:	ldr	r3, [r4, #4]
   13e90:	mov	r2, r0
   13e94:	mov	r1, #1
   13e98:	mov	r0, r5
   13e9c:	str	r3, [sp, #48]	; 0x30
   13ea0:	ldr	r3, [r4]
   13ea4:	add	sp, sp, #32
   13ea8:	pop	{r4, r5, r6, lr}
   13eac:	b	10ee8 <__fprintf_chk@plt>
   13eb0:	mov	r2, #5
   13eb4:	ldr	r1, [pc, #600]	; 14114 <putchar_unlocked@plt+0x319c>
   13eb8:	mov	r0, #0
   13ebc:	bl	10d8c <dcgettext@plt>
   13ec0:	ldr	r3, [r4, #8]
   13ec4:	mov	r2, r0
   13ec8:	mov	r1, #1
   13ecc:	mov	r0, r5
   13ed0:	str	r3, [sp, #52]	; 0x34
   13ed4:	ldr	r3, [r4, #4]
   13ed8:	str	r3, [sp, #48]	; 0x30
   13edc:	ldr	r3, [r4]
   13ee0:	add	sp, sp, #32
   13ee4:	pop	{r4, r5, r6, lr}
   13ee8:	b	10ee8 <__fprintf_chk@plt>
   13eec:	mov	r2, #5
   13ef0:	ldr	r1, [pc, #544]	; 14118 <putchar_unlocked@plt+0x31a0>
   13ef4:	mov	r0, #0
   13ef8:	bl	10d8c <dcgettext@plt>
   13efc:	ldr	r3, [r4, #12]
   13f00:	mov	r2, r0
   13f04:	mov	r1, #1
   13f08:	mov	r0, r5
   13f0c:	str	r3, [sp, #8]
   13f10:	ldr	r3, [r4, #8]
   13f14:	str	r3, [sp, #4]
   13f18:	ldr	r3, [r4, #4]
   13f1c:	str	r3, [sp]
   13f20:	ldr	r3, [r4]
   13f24:	bl	10ee8 <__fprintf_chk@plt>
   13f28:	add	sp, sp, #32
   13f2c:	pop	{r4, r5, r6, pc}
   13f30:	mov	r2, #5
   13f34:	ldr	r1, [pc, #480]	; 1411c <putchar_unlocked@plt+0x31a4>
   13f38:	mov	r0, #0
   13f3c:	bl	10d8c <dcgettext@plt>
   13f40:	ldr	r3, [r4, #16]
   13f44:	mov	r2, r0
   13f48:	mov	r1, #1
   13f4c:	mov	r0, r5
   13f50:	str	r3, [sp, #12]
   13f54:	ldr	r3, [r4, #12]
   13f58:	str	r3, [sp, #8]
   13f5c:	ldr	r3, [r4, #8]
   13f60:	str	r3, [sp, #4]
   13f64:	ldr	r3, [r4, #4]
   13f68:	str	r3, [sp]
   13f6c:	ldr	r3, [r4]
   13f70:	bl	10ee8 <__fprintf_chk@plt>
   13f74:	b	13f28 <putchar_unlocked@plt+0x2fb0>
   13f78:	mov	r2, #5
   13f7c:	ldr	r1, [pc, #412]	; 14120 <putchar_unlocked@plt+0x31a8>
   13f80:	mov	r0, #0
   13f84:	bl	10d8c <dcgettext@plt>
   13f88:	ldr	r3, [r4, #20]
   13f8c:	mov	r2, r0
   13f90:	mov	r1, #1
   13f94:	mov	r0, r5
   13f98:	str	r3, [sp, #16]
   13f9c:	ldr	r3, [r4, #16]
   13fa0:	str	r3, [sp, #12]
   13fa4:	ldr	r3, [r4, #12]
   13fa8:	str	r3, [sp, #8]
   13fac:	ldr	r3, [r4, #8]
   13fb0:	str	r3, [sp, #4]
   13fb4:	ldr	r3, [r4, #4]
   13fb8:	str	r3, [sp]
   13fbc:	ldr	r3, [r4]
   13fc0:	bl	10ee8 <__fprintf_chk@plt>
   13fc4:	b	13f28 <putchar_unlocked@plt+0x2fb0>
   13fc8:	mov	r2, #5
   13fcc:	ldr	r1, [pc, #336]	; 14124 <putchar_unlocked@plt+0x31ac>
   13fd0:	mov	r0, #0
   13fd4:	bl	10d8c <dcgettext@plt>
   13fd8:	ldr	r3, [r4, #24]
   13fdc:	mov	r2, r0
   13fe0:	mov	r1, #1
   13fe4:	mov	r0, r5
   13fe8:	str	r3, [sp, #20]
   13fec:	ldr	r3, [r4, #20]
   13ff0:	str	r3, [sp, #16]
   13ff4:	ldr	r3, [r4, #16]
   13ff8:	str	r3, [sp, #12]
   13ffc:	ldr	r3, [r4, #12]
   14000:	str	r3, [sp, #8]
   14004:	ldr	r3, [r4, #8]
   14008:	str	r3, [sp, #4]
   1400c:	ldr	r3, [r4, #4]
   14010:	str	r3, [sp]
   14014:	ldr	r3, [r4]
   14018:	bl	10ee8 <__fprintf_chk@plt>
   1401c:	b	13f28 <putchar_unlocked@plt+0x2fb0>
   14020:	mov	r2, #5
   14024:	ldr	r1, [pc, #252]	; 14128 <putchar_unlocked@plt+0x31b0>
   14028:	mov	r0, #0
   1402c:	bl	10d8c <dcgettext@plt>
   14030:	ldr	r3, [r4, #28]
   14034:	mov	r2, r0
   14038:	mov	r1, #1
   1403c:	mov	r0, r5
   14040:	str	r3, [sp, #24]
   14044:	ldr	r3, [r4, #24]
   14048:	str	r3, [sp, #20]
   1404c:	ldr	r3, [r4, #20]
   14050:	str	r3, [sp, #16]
   14054:	ldr	r3, [r4, #16]
   14058:	str	r3, [sp, #12]
   1405c:	ldr	r3, [r4, #12]
   14060:	str	r3, [sp, #8]
   14064:	ldr	r3, [r4, #8]
   14068:	str	r3, [sp, #4]
   1406c:	ldr	r3, [r4, #4]
   14070:	str	r3, [sp]
   14074:	ldr	r3, [r4]
   14078:	bl	10ee8 <__fprintf_chk@plt>
   1407c:	b	13f28 <putchar_unlocked@plt+0x2fb0>
   14080:	ldr	r1, [pc, #164]	; 1412c <putchar_unlocked@plt+0x31b4>
   14084:	mov	r2, #5
   14088:	mov	r0, #0
   1408c:	bl	10d8c <dcgettext@plt>
   14090:	ldr	r3, [r4, #32]
   14094:	mov	r2, r0
   14098:	mov	r1, #1
   1409c:	mov	r0, r5
   140a0:	str	r3, [sp, #28]
   140a4:	ldr	r3, [r4, #28]
   140a8:	str	r3, [sp, #24]
   140ac:	ldr	r3, [r4, #24]
   140b0:	str	r3, [sp, #20]
   140b4:	ldr	r3, [r4, #20]
   140b8:	str	r3, [sp, #16]
   140bc:	ldr	r3, [r4, #16]
   140c0:	str	r3, [sp, #12]
   140c4:	ldr	r3, [r4, #12]
   140c8:	str	r3, [sp, #8]
   140cc:	ldr	r3, [r4, #8]
   140d0:	str	r3, [sp, #4]
   140d4:	ldr	r3, [r4, #4]
   140d8:	str	r3, [sp]
   140dc:	ldr	r3, [r4]
   140e0:	bl	10ee8 <__fprintf_chk@plt>
   140e4:	b	13f28 <putchar_unlocked@plt+0x2fb0>
   140e8:	mov	r2, #5
   140ec:	ldr	r1, [pc, #60]	; 14130 <putchar_unlocked@plt+0x31b8>
   140f0:	b	14088 <putchar_unlocked@plt+0x3110>
   140f4:	andeq	r5, r1, r0, lsr r7
   140f8:	andeq	r5, r1, r3, asr #14
   140fc:	andeq	r5, r1, r1, lsl sl
   14100:	andeq	r5, r1, r7, asr #14
   14104:	strdeq	r5, [r1], -r2
   14108:	andeq	r5, r1, ip, lsr r7
   1410c:	andeq	r5, r1, r4, lsl r8
   14110:	andeq	r5, r1, r4, lsr #16
   14114:	andeq	r5, r1, fp, lsr r8
   14118:	andeq	r5, r1, r7, asr r8
   1411c:	andeq	r5, r1, r7, ror r8
   14120:	muleq	r1, fp, r8
   14124:	andeq	r5, r1, r3, asr #17
   14128:	andeq	r5, r1, pc, ror #17
   1412c:	andeq	r5, r1, pc, lsl r9
   14130:	andeq	r5, r1, r3, asr r9
   14134:	push	{r0, r1, r4, lr}
   14138:	mov	ip, #0
   1413c:	ldr	lr, [sp, #16]
   14140:	ldr	r4, [lr, ip, lsl #2]
   14144:	cmp	r4, #0
   14148:	bne	14160 <putchar_unlocked@plt+0x31e8>
   1414c:	str	lr, [sp]
   14150:	str	ip, [sp, #4]
   14154:	bl	13d6c <putchar_unlocked@plt+0x2df4>
   14158:	add	sp, sp, #8
   1415c:	pop	{r4, pc}
   14160:	add	ip, ip, #1
   14164:	b	14140 <putchar_unlocked@plt+0x31c8>
   14168:	push	{r4, r5, r6, lr}
   1416c:	sub	sp, sp, #48	; 0x30
   14170:	mov	ip, #0
   14174:	add	lr, sp, #8
   14178:	mov	r5, lr
   1417c:	ldr	r6, [sp, #64]	; 0x40
   14180:	ldr	r4, [r6, ip, lsl #2]
   14184:	cmp	r4, #0
   14188:	str	r4, [lr], #4
   1418c:	beq	1419c <putchar_unlocked@plt+0x3224>
   14190:	add	ip, ip, #1
   14194:	cmp	ip, #10
   14198:	bne	14180 <putchar_unlocked@plt+0x3208>
   1419c:	stm	sp, {r5, ip}
   141a0:	bl	13d6c <putchar_unlocked@plt+0x2df4>
   141a4:	add	sp, sp, #48	; 0x30
   141a8:	pop	{r4, r5, r6, pc}
   141ac:	push	{r3}		; (str r3, [sp, #-4]!)
   141b0:	push	{r0, r1, r2, r3, lr}
   141b4:	add	r3, sp, #24
   141b8:	str	r3, [sp]
   141bc:	str	r3, [sp, #12]
   141c0:	ldr	r3, [sp, #20]
   141c4:	bl	14168 <putchar_unlocked@plt+0x31f0>
   141c8:	add	sp, sp, #16
   141cc:	pop	{lr}		; (ldr lr, [sp], #4)
   141d0:	add	sp, sp, #4
   141d4:	bx	lr
   141d8:	ldr	r3, [pc, #116]	; 14254 <putchar_unlocked@plt+0x32dc>
   141dc:	mov	r0, #10
   141e0:	push	{r4, lr}
   141e4:	ldr	r1, [r3]
   141e8:	bl	10d80 <fputc_unlocked@plt>
   141ec:	mov	r2, #5
   141f0:	ldr	r1, [pc, #96]	; 14258 <putchar_unlocked@plt+0x32e0>
   141f4:	mov	r0, #0
   141f8:	bl	10d8c <dcgettext@plt>
   141fc:	mov	r1, r0
   14200:	ldr	r2, [pc, #84]	; 1425c <putchar_unlocked@plt+0x32e4>
   14204:	mov	r0, #1
   14208:	bl	10ec4 <__printf_chk@plt>
   1420c:	mov	r2, #5
   14210:	ldr	r1, [pc, #72]	; 14260 <putchar_unlocked@plt+0x32e8>
   14214:	mov	r0, #0
   14218:	bl	10d8c <dcgettext@plt>
   1421c:	mov	r1, r0
   14220:	ldr	r3, [pc, #60]	; 14264 <putchar_unlocked@plt+0x32ec>
   14224:	mov	r0, #1
   14228:	ldr	r2, [pc, #56]	; 14268 <putchar_unlocked@plt+0x32f0>
   1422c:	bl	10ec4 <__printf_chk@plt>
   14230:	mov	r2, #5
   14234:	ldr	r1, [pc, #48]	; 1426c <putchar_unlocked@plt+0x32f4>
   14238:	mov	r0, #0
   1423c:	bl	10d8c <dcgettext@plt>
   14240:	mov	r1, r0
   14244:	ldr	r2, [pc, #36]	; 14270 <putchar_unlocked@plt+0x32f8>
   14248:	mov	r0, #1
   1424c:	pop	{r4, lr}
   14250:	b	10ec4 <__printf_chk@plt>
   14254:	andeq	r6, r2, r4, asr r1
   14258:	andeq	r5, r1, pc, lsl #19
   1425c:	andeq	r5, r1, r3, lsr #19
   14260:			; <UNDEFINED> instruction: 0x000159b9
   14264:	andeq	r5, r1, lr, asr #6
   14268:	andeq	r5, r1, r6, ror r3
   1426c:	andeq	r5, r1, sp, asr #19
   14270:	strdeq	r5, [r1], -r4
   14274:	push	{r4, lr}
   14278:	bl	146f4 <putchar_unlocked@plt+0x377c>
   1427c:	cmp	r0, #0
   14280:	popne	{r4, pc}
   14284:	bl	1452c <putchar_unlocked@plt+0x35b4>
   14288:	push	{r4, lr}
   1428c:	bl	146f4 <putchar_unlocked@plt+0x377c>
   14290:	cmp	r0, #0
   14294:	popne	{r4, pc}
   14298:	bl	1452c <putchar_unlocked@plt+0x35b4>
   1429c:	b	14274 <putchar_unlocked@plt+0x32fc>
   142a0:	push	{r4, r5, r6, lr}
   142a4:	mov	r5, r0
   142a8:	mov	r4, r1
   142ac:	bl	14720 <putchar_unlocked@plt+0x37a8>
   142b0:	cmp	r0, #0
   142b4:	popne	{r4, r5, r6, pc}
   142b8:	adds	r4, r4, #0
   142bc:	movne	r4, #1
   142c0:	cmp	r5, #0
   142c4:	moveq	r4, #1
   142c8:	cmp	r4, #0
   142cc:	popeq	{r4, r5, r6, pc}
   142d0:	bl	1452c <putchar_unlocked@plt+0x35b4>
   142d4:	push	{r4, lr}
   142d8:	bl	14a14 <putchar_unlocked@plt+0x3a9c>
   142dc:	cmp	r0, #0
   142e0:	popne	{r4, pc}
   142e4:	bl	1452c <putchar_unlocked@plt+0x35b4>
   142e8:	push	{r4, r5, r6, lr}
   142ec:	mov	r6, r0
   142f0:	mov	r5, r1
   142f4:	mov	r4, r2
   142f8:	bl	14abc <putchar_unlocked@plt+0x3b44>
   142fc:	cmp	r0, #0
   14300:	popne	{r4, r5, r6, pc}
   14304:	cmp	r6, #0
   14308:	beq	14318 <putchar_unlocked@plt+0x33a0>
   1430c:	cmp	r5, #0
   14310:	cmpne	r4, #0
   14314:	popeq	{r4, r5, r6, pc}
   14318:	bl	1452c <putchar_unlocked@plt+0x35b4>
   1431c:	b	142e8 <putchar_unlocked@plt+0x3370>
   14320:	push	{r4, lr}
   14324:	bl	14a24 <putchar_unlocked@plt+0x3aac>
   14328:	cmp	r0, #0
   1432c:	popne	{r4, pc}
   14330:	bl	1452c <putchar_unlocked@plt+0x35b4>
   14334:	mov	r2, r1
   14338:	mov	r1, r0
   1433c:	mov	r0, #0
   14340:	b	142e8 <putchar_unlocked@plt+0x3370>
   14344:	mov	r2, r1
   14348:	mov	r1, r0
   1434c:	mov	r0, #0
   14350:	b	14320 <putchar_unlocked@plt+0x33a8>
   14354:	cmp	r0, #0
   14358:	push	{r4, r5, r6, lr}
   1435c:	mov	r5, r1
   14360:	ldr	r4, [r1]
   14364:	bne	14390 <putchar_unlocked@plt+0x3418>
   14368:	cmp	r4, #0
   1436c:	bne	14380 <putchar_unlocked@plt+0x3408>
   14370:	mov	r4, #64	; 0x40
   14374:	udiv	r4, r4, r2
   14378:	cmp	r2, #64	; 0x40
   1437c:	addhi	r4, r4, #1
   14380:	mov	r1, r4
   14384:	bl	142e8 <putchar_unlocked@plt+0x3370>
   14388:	str	r4, [r5]
   1438c:	pop	{r4, r5, r6, pc}
   14390:	lsr	r3, r4, #1
   14394:	add	r3, r3, #1
   14398:	adds	r4, r4, r3
   1439c:	bcc	14380 <putchar_unlocked@plt+0x3408>
   143a0:	bl	1452c <putchar_unlocked@plt+0x35b4>
   143a4:	mov	r2, #1
   143a8:	b	14354 <putchar_unlocked@plt+0x33dc>
   143ac:	ldr	ip, [r1]
   143b0:	push	{r4, r5, r6, r7, r8, lr}
   143b4:	mov	r5, r1
   143b8:	mvn	r8, r3
   143bc:	lsr	r8, r8, #31
   143c0:	ldr	lr, [sp, #24]
   143c4:	asr	r1, ip, #1
   143c8:	adds	r4, ip, r1
   143cc:	mvnvs	r4, #-2147483648	; 0x80000000
   143d0:	cmp	r3, r4
   143d4:	movge	r1, #0
   143d8:	andlt	r1, r8, #1
   143dc:	cmp	r1, #0
   143e0:	movne	r4, r3
   143e4:	smull	r6, r7, r4, lr
   143e8:	cmp	r7, r6, asr #31
   143ec:	bne	14404 <putchar_unlocked@plt+0x348c>
   143f0:	cmp	r6, #63	; 0x3f
   143f4:	mov	r1, r6
   143f8:	bgt	14414 <putchar_unlocked@plt+0x349c>
   143fc:	mov	r1, #64	; 0x40
   14400:	b	14408 <putchar_unlocked@plt+0x3490>
   14404:	mvn	r1, #-2147483648	; 0x80000000
   14408:	sdiv	r4, r1, lr
   1440c:	mls	r6, lr, r4, r1
   14410:	sub	r1, r1, r6
   14414:	cmp	r0, #0
   14418:	sub	r6, r4, ip
   1441c:	streq	r0, [r5]
   14420:	cmp	r6, r2
   14424:	bge	14458 <putchar_unlocked@plt+0x34e0>
   14428:	adds	r4, ip, r2
   1442c:	bvs	14454 <putchar_unlocked@plt+0x34dc>
   14430:	cmp	r4, r3
   14434:	movle	r3, #0
   14438:	andgt	r3, r8, #1
   1443c:	cmp	r3, #0
   14440:	bne	14454 <putchar_unlocked@plt+0x34dc>
   14444:	smull	r2, r3, r4, lr
   14448:	cmp	r3, r2, asr #31
   1444c:	mov	r1, r2
   14450:	beq	14458 <putchar_unlocked@plt+0x34e0>
   14454:	bl	1452c <putchar_unlocked@plt+0x35b4>
   14458:	bl	142a0 <putchar_unlocked@plt+0x3328>
   1445c:	str	r4, [r5]
   14460:	pop	{r4, r5, r6, r7, r8, pc}
   14464:	push	{r4, lr}
   14468:	bl	146a0 <putchar_unlocked@plt+0x3728>
   1446c:	cmp	r0, #0
   14470:	popne	{r4, pc}
   14474:	bl	1452c <putchar_unlocked@plt+0x35b4>
   14478:	mov	r1, #1
   1447c:	b	14464 <putchar_unlocked@plt+0x34ec>
   14480:	push	{r4, lr}
   14484:	bl	146a0 <putchar_unlocked@plt+0x3728>
   14488:	cmp	r0, #0
   1448c:	popne	{r4, pc}
   14490:	bl	1452c <putchar_unlocked@plt+0x35b4>
   14494:	mov	r1, #1
   14498:	b	14480 <putchar_unlocked@plt+0x3508>
   1449c:	push	{r4, r5, r6, lr}
   144a0:	mov	r4, r1
   144a4:	mov	r5, r0
   144a8:	mov	r0, r1
   144ac:	bl	14274 <putchar_unlocked@plt+0x32fc>
   144b0:	mov	r2, r4
   144b4:	mov	r1, r5
   144b8:	pop	{r4, r5, r6, lr}
   144bc:	b	10d44 <memcpy@plt>
   144c0:	push	{r4, r5, r6, lr}
   144c4:	mov	r4, r1
   144c8:	mov	r5, r0
   144cc:	mov	r0, r1
   144d0:	bl	14288 <putchar_unlocked@plt+0x3310>
   144d4:	mov	r2, r4
   144d8:	mov	r1, r5
   144dc:	pop	{r4, r5, r6, lr}
   144e0:	b	10d44 <memcpy@plt>
   144e4:	push	{r4, r5, r6, lr}
   144e8:	mov	r5, r0
   144ec:	add	r0, r1, #1
   144f0:	mov	r4, r1
   144f4:	bl	14288 <putchar_unlocked@plt+0x3310>
   144f8:	mov	r2, #0
   144fc:	mov	r1, r5
   14500:	strb	r2, [r0, r4]
   14504:	mov	r2, r4
   14508:	pop	{r4, r5, r6, lr}
   1450c:	b	10d44 <memcpy@plt>
   14510:	push	{r4, lr}
   14514:	mov	r4, r0
   14518:	bl	10e88 <strlen@plt>
   1451c:	add	r1, r0, #1
   14520:	mov	r0, r4
   14524:	pop	{r4, lr}
   14528:	b	1449c <putchar_unlocked@plt+0x3524>
   1452c:	ldr	r3, [pc, #44]	; 14560 <putchar_unlocked@plt+0x35e8>
   14530:	mov	r2, #5
   14534:	mov	r0, #0
   14538:	push	{r4, lr}
   1453c:	ldr	r1, [pc, #32]	; 14564 <putchar_unlocked@plt+0x35ec>
   14540:	ldr	r4, [r3]
   14544:	bl	10d8c <dcgettext@plt>
   14548:	mov	r3, r0
   1454c:	ldr	r2, [pc, #20]	; 14568 <putchar_unlocked@plt+0x35f0>
   14550:	mov	r1, #0
   14554:	mov	r0, r4
   14558:	bl	10e04 <error@plt>
   1455c:	bl	10f6c <abort@plt>
   14560:	andeq	r6, r2, r0, lsl #2
   14564:	andeq	r5, r1, r0, asr #20
   14568:	muleq	r1, r4, r4
   1456c:	push	{r4, r5, r6, r7, r8, lr}
   14570:	mov	r2, r1
   14574:	mov	r1, r0
   14578:	mov	r0, #1
   1457c:	bl	10d74 <__vprintf_chk@plt>
   14580:	subs	r4, r0, #0
   14584:	bge	145cc <putchar_unlocked@plt+0x3654>
   14588:	ldr	r3, [pc, #68]	; 145d4 <putchar_unlocked@plt+0x365c>
   1458c:	ldr	r0, [r3]
   14590:	bl	10d2c <ferror@plt>
   14594:	subs	r7, r0, #0
   14598:	bne	145cc <putchar_unlocked@plt+0x3654>
   1459c:	ldr	r3, [pc, #52]	; 145d8 <putchar_unlocked@plt+0x3660>
   145a0:	ldr	r5, [r3]
   145a4:	bl	10ea0 <__errno_location@plt>
   145a8:	ldr	r6, [r0]
   145ac:	mov	r2, #5
   145b0:	mov	r0, r7
   145b4:	ldr	r1, [pc, #32]	; 145dc <putchar_unlocked@plt+0x3664>
   145b8:	bl	10d8c <dcgettext@plt>
   145bc:	mov	r2, r0
   145c0:	mov	r0, r5
   145c4:	mov	r1, r6
   145c8:	bl	10e04 <error@plt>
   145cc:	mov	r0, r4
   145d0:	pop	{r4, r5, r6, r7, r8, pc}
   145d4:	andeq	r6, r2, r4, asr r1
   145d8:	andeq	r6, r2, r0, lsl #2
   145dc:	andeq	r5, r1, r1, asr sl
   145e0:	push	{r0, r1, r2, r3}
   145e4:	push	{r0, r1, r2, lr}
   145e8:	add	r1, sp, #20
   145ec:	ldr	r0, [sp, #16]
   145f0:	str	r1, [sp, #4]
   145f4:	bl	1456c <putchar_unlocked@plt+0x35f4>
   145f8:	add	sp, sp, #12
   145fc:	pop	{lr}		; (ldr lr, [sp], #4)
   14600:	add	sp, sp, #16
   14604:	bx	lr
   14608:	push	{r4, r5, r6, r7, r8, lr}
   1460c:	mov	r3, r2
   14610:	mov	r2, r1
   14614:	mov	r1, #1
   14618:	mov	r5, r0
   1461c:	bl	10e40 <__vfprintf_chk@plt>
   14620:	subs	r4, r0, #0
   14624:	bge	14668 <putchar_unlocked@plt+0x36f0>
   14628:	mov	r0, r5
   1462c:	bl	10d2c <ferror@plt>
   14630:	subs	r7, r0, #0
   14634:	bne	14668 <putchar_unlocked@plt+0x36f0>
   14638:	ldr	r3, [pc, #48]	; 14670 <putchar_unlocked@plt+0x36f8>
   1463c:	ldr	r5, [r3]
   14640:	bl	10ea0 <__errno_location@plt>
   14644:	ldr	r6, [r0]
   14648:	mov	r2, #5
   1464c:	mov	r0, r7
   14650:	ldr	r1, [pc, #28]	; 14674 <putchar_unlocked@plt+0x36fc>
   14654:	bl	10d8c <dcgettext@plt>
   14658:	mov	r2, r0
   1465c:	mov	r0, r5
   14660:	mov	r1, r6
   14664:	bl	10e04 <error@plt>
   14668:	mov	r0, r4
   1466c:	pop	{r4, r5, r6, r7, r8, pc}
   14670:	andeq	r6, r2, r0, lsl #2
   14674:	andeq	r5, r1, r1, asr sl
   14678:	push	{r1, r2, r3}
   1467c:	push	{r0, r1, lr}
   14680:	add	r2, sp, #16
   14684:	ldr	r1, [sp, #12]
   14688:	str	r2, [sp, #4]
   1468c:	bl	14608 <putchar_unlocked@plt+0x3690>
   14690:	add	sp, sp, #8
   14694:	pop	{lr}		; (ldr lr, [sp], #4)
   14698:	add	sp, sp, #12
   1469c:	bx	lr
   146a0:	cmp	r1, #0
   146a4:	cmpne	r0, #0
   146a8:	beq	146e0 <putchar_unlocked@plt+0x3768>
   146ac:	push	{r4, r5, r6, lr}
   146b0:	umull	r4, r5, r0, r1
   146b4:	adds	r3, r5, #0
   146b8:	movne	r3, #1
   146bc:	cmp	r4, #0
   146c0:	blt	146cc <putchar_unlocked@plt+0x3754>
   146c4:	cmp	r3, #0
   146c8:	beq	146ec <putchar_unlocked@plt+0x3774>
   146cc:	bl	10ea0 <__errno_location@plt>
   146d0:	mov	r3, #12
   146d4:	str	r3, [r0]
   146d8:	mov	r0, #0
   146dc:	pop	{r4, r5, r6, pc}
   146e0:	mov	r1, #1
   146e4:	mov	r0, r1
   146e8:	b	10cd8 <calloc@plt>
   146ec:	pop	{r4, r5, r6, lr}
   146f0:	b	146e8 <putchar_unlocked@plt+0x3770>
   146f4:	cmp	r0, #0
   146f8:	beq	14718 <putchar_unlocked@plt+0x37a0>
   146fc:	bge	1471c <putchar_unlocked@plt+0x37a4>
   14700:	push	{r4, lr}
   14704:	bl	10ea0 <__errno_location@plt>
   14708:	mov	r3, #12
   1470c:	str	r3, [r0]
   14710:	mov	r0, #0
   14714:	pop	{r4, pc}
   14718:	mov	r0, #1
   1471c:	b	10e1c <malloc@plt>
   14720:	cmp	r0, #0
   14724:	bne	14730 <putchar_unlocked@plt+0x37b8>
   14728:	mov	r0, r1
   1472c:	b	146f4 <putchar_unlocked@plt+0x377c>
   14730:	cmp	r1, #0
   14734:	push	{r4, lr}
   14738:	bne	14748 <putchar_unlocked@plt+0x37d0>
   1473c:	bl	12394 <putchar_unlocked@plt+0x141c>
   14740:	mov	r0, #0
   14744:	pop	{r4, pc}
   14748:	blt	14754 <putchar_unlocked@plt+0x37dc>
   1474c:	pop	{r4, lr}
   14750:	b	10d98 <realloc@plt>
   14754:	bl	10ea0 <__errno_location@plt>
   14758:	mov	r3, #12
   1475c:	str	r3, [r0]
   14760:	b	14740 <putchar_unlocked@plt+0x37c8>
   14764:	andeq	r0, r0, r0
   14768:	push	{r4, r5, r6, r7, r8, lr}
   1476c:	mov	r6, r0
   14770:	mov	r5, r1
   14774:	ldr	r4, [pc, #140]	; 14808 <putchar_unlocked@plt+0x3890>
   14778:	vpush	{d8}
   1477c:	ldr	r2, [r4]
   14780:	cmp	r2, #0
   14784:	bne	14798 <putchar_unlocked@plt+0x3820>
   14788:	ldr	r1, [pc, #124]	; 1480c <putchar_unlocked@plt+0x3894>
   1478c:	movw	r0, #8127	; 0x1fbf
   14790:	bl	10f3c <newlocale@plt>
   14794:	str	r0, [r4]
   14798:	ldr	r0, [r4]
   1479c:	cmp	r0, #0
   147a0:	bne	147bc <putchar_unlocked@plt+0x3844>
   147a4:	vldr	d8, [pc, #84]	; 14800 <putchar_unlocked@plt+0x3888>
   147a8:	cmp	r5, #0
   147ac:	strne	r6, [r5]
   147b0:	vmov.f64	d0, d8
   147b4:	vpop	{d8}
   147b8:	pop	{r4, r5, r6, r7, r8, pc}
   147bc:	bl	10cf0 <uselocale@plt>
   147c0:	subs	r7, r0, #0
   147c4:	beq	147a4 <putchar_unlocked@plt+0x382c>
   147c8:	mov	r1, r5
   147cc:	mov	r0, r6
   147d0:	bl	10d5c <strtold@plt>
   147d4:	vmov.f64	d8, d0
   147d8:	bl	10ea0 <__errno_location@plt>
   147dc:	mov	r4, r0
   147e0:	mov	r0, r7
   147e4:	ldr	r5, [r4]
   147e8:	bl	10cf0 <uselocale@plt>
   147ec:	cmp	r0, #0
   147f0:	strne	r5, [r4]
   147f4:	bne	147b0 <putchar_unlocked@plt+0x3838>
   147f8:	bl	10f6c <abort@plt>
   147fc:	nop	{0}
	...
   14808:	andeq	r6, r2, ip, lsr #5
   1480c:	andeq	r5, r1, r1, ror sl
   14810:	push	{r4, r5, r6, lr}
   14814:	mov	r4, r0
   14818:	bl	10de0 <__fpending@plt>
   1481c:	mov	r5, r0
   14820:	mov	r0, r4
   14824:	bl	10dec <ferror_unlocked@plt>
   14828:	mov	r6, r0
   1482c:	mov	r0, r4
   14830:	bl	14880 <putchar_unlocked@plt+0x3908>
   14834:	cmp	r6, #0
   14838:	mov	r4, r0
   1483c:	bne	14868 <putchar_unlocked@plt+0x38f0>
   14840:	cmp	r0, #0
   14844:	beq	14860 <putchar_unlocked@plt+0x38e8>
   14848:	cmp	r5, #0
   1484c:	bne	14878 <putchar_unlocked@plt+0x3900>
   14850:	bl	10ea0 <__errno_location@plt>
   14854:	ldr	r4, [r0]
   14858:	subs	r4, r4, #9
   1485c:	mvnne	r4, #0
   14860:	mov	r0, r4
   14864:	pop	{r4, r5, r6, pc}
   14868:	cmp	r0, #0
   1486c:	bne	14878 <putchar_unlocked@plt+0x3900>
   14870:	bl	10ea0 <__errno_location@plt>
   14874:	str	r4, [r0]
   14878:	mvn	r4, #0
   1487c:	b	14860 <putchar_unlocked@plt+0x38e8>
   14880:	push	{r0, r1, r2, r4, r5, lr}
   14884:	mov	r4, r0
   14888:	bl	10ed0 <fileno@plt>
   1488c:	cmp	r0, #0
   14890:	mov	r0, r4
   14894:	bge	148a4 <putchar_unlocked@plt+0x392c>
   14898:	add	sp, sp, #12
   1489c:	pop	{r4, r5, lr}
   148a0:	b	10f00 <fclose@plt>
   148a4:	bl	10e4c <__freading@plt>
   148a8:	cmp	r0, #0
   148ac:	bne	148e8 <putchar_unlocked@plt+0x3970>
   148b0:	mov	r0, r4
   148b4:	bl	14928 <putchar_unlocked@plt+0x39b0>
   148b8:	cmp	r0, #0
   148bc:	bne	1491c <putchar_unlocked@plt+0x39a4>
   148c0:	mov	r5, #0
   148c4:	mov	r0, r4
   148c8:	bl	10f00 <fclose@plt>
   148cc:	cmp	r5, #0
   148d0:	beq	148e0 <putchar_unlocked@plt+0x3968>
   148d4:	bl	10ea0 <__errno_location@plt>
   148d8:	str	r5, [r0]
   148dc:	mvn	r0, #0
   148e0:	add	sp, sp, #12
   148e4:	pop	{r4, r5, pc}
   148e8:	mov	r0, r4
   148ec:	bl	10ed0 <fileno@plt>
   148f0:	mov	r3, #1
   148f4:	mov	r2, #0
   148f8:	str	r3, [sp]
   148fc:	mov	r3, #0
   14900:	bl	10dc8 <lseek64@plt>
   14904:	mvn	r3, #0
   14908:	mvn	r2, #0
   1490c:	cmp	r1, r3
   14910:	cmpeq	r0, r2
   14914:	bne	148b0 <putchar_unlocked@plt+0x3938>
   14918:	b	148c0 <putchar_unlocked@plt+0x3948>
   1491c:	bl	10ea0 <__errno_location@plt>
   14920:	ldr	r5, [r0]
   14924:	b	148c4 <putchar_unlocked@plt+0x394c>
   14928:	push	{r0, r1, r4, lr}
   1492c:	subs	r4, r0, #0
   14930:	bne	14944 <putchar_unlocked@plt+0x39cc>
   14934:	mov	r0, r4
   14938:	add	sp, sp, #8
   1493c:	pop	{r4, lr}
   14940:	b	10d14 <fflush@plt>
   14944:	bl	10e4c <__freading@plt>
   14948:	cmp	r0, #0
   1494c:	beq	14934 <putchar_unlocked@plt+0x39bc>
   14950:	ldr	r3, [r4]
   14954:	tst	r3, #256	; 0x100
   14958:	beq	14934 <putchar_unlocked@plt+0x39bc>
   1495c:	mov	r3, #1
   14960:	mov	r2, #0
   14964:	mov	r0, r4
   14968:	str	r3, [sp]
   1496c:	mov	r3, #0
   14970:	bl	14978 <putchar_unlocked@plt+0x3a00>
   14974:	b	14934 <putchar_unlocked@plt+0x39bc>
   14978:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1497c:	mov	r4, r0
   14980:	ldmib	r0, {ip, lr}
   14984:	ldr	r8, [sp, #32]
   14988:	cmp	lr, ip
   1498c:	bne	149fc <putchar_unlocked@plt+0x3a84>
   14990:	ldr	ip, [r0, #16]
   14994:	ldr	lr, [r0, #20]
   14998:	cmp	lr, ip
   1499c:	bne	149fc <putchar_unlocked@plt+0x3a84>
   149a0:	ldr	r5, [r0, #36]	; 0x24
   149a4:	cmp	r5, #0
   149a8:	bne	149fc <putchar_unlocked@plt+0x3a84>
   149ac:	mov	r6, r2
   149b0:	mov	r7, r3
   149b4:	bl	10ed0 <fileno@plt>
   149b8:	mov	r2, r6
   149bc:	mov	r3, r7
   149c0:	str	r8, [sp]
   149c4:	bl	10dc8 <lseek64@plt>
   149c8:	mvn	r3, #0
   149cc:	mvn	r2, #0
   149d0:	cmp	r1, r3
   149d4:	cmpeq	r0, r2
   149d8:	mvneq	r0, #0
   149dc:	beq	149f4 <putchar_unlocked@plt+0x3a7c>
   149e0:	ldr	r3, [r4]
   149e4:	strd	r0, [r4, #80]	; 0x50
   149e8:	mov	r0, r5
   149ec:	bic	r3, r3, #16
   149f0:	str	r3, [r4]
   149f4:	add	sp, sp, #8
   149f8:	pop	{r4, r5, r6, r7, r8, pc}
   149fc:	mov	r0, r4
   14a00:	str	r8, [sp, #32]
   14a04:	add	sp, sp, #8
   14a08:	pop	{r4, r5, r6, r7, r8, lr}
   14a0c:	b	10f0c <fseeko64@plt>
   14a10:	b	146f4 <putchar_unlocked@plt+0x377c>
   14a14:	cmp	r1, #0
   14a18:	orreq	r1, r1, #1
   14a1c:	b	14720 <putchar_unlocked@plt+0x37a8>
   14a20:	b	146a0 <putchar_unlocked@plt+0x3728>
   14a24:	cmp	r2, #0
   14a28:	cmpne	r1, #0
   14a2c:	moveq	r2, #1
   14a30:	moveq	r1, r2
   14a34:	b	14abc <putchar_unlocked@plt+0x3b44>
   14a38:	push	{r4, lr}
   14a3c:	mov	r0, #14
   14a40:	bl	10f30 <nl_langinfo@plt>
   14a44:	cmp	r0, #0
   14a48:	beq	14a60 <putchar_unlocked@plt+0x3ae8>
   14a4c:	ldrb	r2, [r0]
   14a50:	ldr	r3, [pc, #16]	; 14a68 <putchar_unlocked@plt+0x3af0>
   14a54:	cmp	r2, #0
   14a58:	moveq	r0, r3
   14a5c:	pop	{r4, pc}
   14a60:	ldr	r0, [pc]	; 14a68 <putchar_unlocked@plt+0x3af0>
   14a64:	pop	{r4, pc}
   14a68:	strdeq	r5, [r1], -r9
   14a6c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14a70:	subs	r5, r0, #0
   14a74:	mov	r7, r2
   14a78:	addeq	r5, sp, #4
   14a7c:	mov	r6, r1
   14a80:	mov	r0, r5
   14a84:	bl	10df8 <mbrtowc@plt>
   14a88:	cmp	r7, #0
   14a8c:	cmnne	r0, #3
   14a90:	mov	r4, r0
   14a94:	bls	14ab0 <putchar_unlocked@plt+0x3b38>
   14a98:	mov	r0, #0
   14a9c:	bl	14ae8 <putchar_unlocked@plt+0x3b70>
   14aa0:	cmp	r0, #0
   14aa4:	ldrbeq	r3, [r6]
   14aa8:	moveq	r4, #1
   14aac:	streq	r3, [r5]
   14ab0:	mov	r0, r4
   14ab4:	add	sp, sp, #12
   14ab8:	pop	{r4, r5, r6, r7, pc}
   14abc:	umull	r2, r3, r1, r2
   14ac0:	cmp	r3, #0
   14ac4:	bne	14ad0 <putchar_unlocked@plt+0x3b58>
   14ac8:	mov	r1, r2
   14acc:	b	14720 <putchar_unlocked@plt+0x37a8>
   14ad0:	push	{r4, lr}
   14ad4:	bl	10ea0 <__errno_location@plt>
   14ad8:	mov	r3, #12
   14adc:	str	r3, [r0]
   14ae0:	mov	r0, #0
   14ae4:	pop	{r4, pc}
   14ae8:	push	{lr}		; (str lr, [sp, #-4]!)
   14aec:	sub	sp, sp, #268	; 0x10c
   14af0:	movw	r2, #257	; 0x101
   14af4:	add	r1, sp, #4
   14af8:	bl	14b44 <putchar_unlocked@plt+0x3bcc>
   14afc:	cmp	r0, #0
   14b00:	movne	r0, #0
   14b04:	bne	14b34 <putchar_unlocked@plt+0x3bbc>
   14b08:	ldr	r1, [pc, #44]	; 14b3c <putchar_unlocked@plt+0x3bc4>
   14b0c:	add	r0, sp, #4
   14b10:	bl	10d08 <strcmp@plt>
   14b14:	cmp	r0, #0
   14b18:	beq	14b30 <putchar_unlocked@plt+0x3bb8>
   14b1c:	ldr	r1, [pc, #28]	; 14b40 <putchar_unlocked@plt+0x3bc8>
   14b20:	add	r0, sp, #4
   14b24:	bl	10d08 <strcmp@plt>
   14b28:	adds	r0, r0, #0
   14b2c:	movne	r0, #1
   14b30:	and	r0, r0, #1
   14b34:	add	sp, sp, #268	; 0x10c
   14b38:	pop	{pc}		; (ldr pc, [sp], #4)
   14b3c:	andeq	r5, r1, r1, ror sl
   14b40:	andeq	r5, r1, r3, ror sl
   14b44:	push	{r4, r5, r6, lr}
   14b48:	mov	r5, r1
   14b4c:	mov	r1, #0
   14b50:	mov	r4, r2
   14b54:	bl	10f18 <setlocale@plt>
   14b58:	subs	r6, r0, #0
   14b5c:	bne	14b70 <putchar_unlocked@plt+0x3bf8>
   14b60:	cmp	r4, #0
   14b64:	mov	r0, #22
   14b68:	strbne	r6, [r5]
   14b6c:	pop	{r4, r5, r6, pc}
   14b70:	bl	10e88 <strlen@plt>
   14b74:	cmp	r4, r0
   14b78:	bls	14b94 <putchar_unlocked@plt+0x3c1c>
   14b7c:	add	r2, r0, #1
   14b80:	mov	r1, r6
   14b84:	mov	r0, r5
   14b88:	bl	10d44 <memcpy@plt>
   14b8c:	mov	r0, #0
   14b90:	pop	{r4, r5, r6, pc}
   14b94:	cmp	r4, #0
   14b98:	beq	14bb8 <putchar_unlocked@plt+0x3c40>
   14b9c:	sub	r4, r4, #1
   14ba0:	mov	r1, r6
   14ba4:	mov	r2, r4
   14ba8:	mov	r0, r5
   14bac:	bl	10d44 <memcpy@plt>
   14bb0:	mov	r3, #0
   14bb4:	strb	r3, [r5, r4]
   14bb8:	mov	r0, #34	; 0x22
   14bbc:	pop	{r4, r5, r6, pc}
   14bc0:	mov	r1, #0
   14bc4:	b	10f18 <setlocale@plt>
   14bc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14bcc:	mov	r7, r0
   14bd0:	ldr	r6, [pc, #72]	; 14c20 <putchar_unlocked@plt+0x3ca8>
   14bd4:	ldr	r5, [pc, #72]	; 14c24 <putchar_unlocked@plt+0x3cac>
   14bd8:	add	r6, pc, r6
   14bdc:	add	r5, pc, r5
   14be0:	sub	r6, r6, r5
   14be4:	mov	r8, r1
   14be8:	mov	r9, r2
   14bec:	bl	10cb8 <calloc@plt-0x20>
   14bf0:	asrs	r6, r6, #2
   14bf4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bf8:	mov	r4, #0
   14bfc:	add	r4, r4, #1
   14c00:	ldr	r3, [r5], #4
   14c04:	mov	r2, r9
   14c08:	mov	r1, r8
   14c0c:	mov	r0, r7
   14c10:	blx	r3
   14c14:	cmp	r6, r4
   14c18:	bne	14bfc <putchar_unlocked@plt+0x3c84>
   14c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c20:	andeq	r1, r1, r4, lsr r3
   14c24:	andeq	r1, r1, ip, lsr #6
   14c28:	bx	lr
   14c2c:	ldr	r3, [pc, #12]	; 14c40 <putchar_unlocked@plt+0x3cc8>
   14c30:	mov	r1, #0
   14c34:	add	r3, pc, r3
   14c38:	ldr	r2, [r3]
   14c3c:	b	10eac <__cxa_atexit@plt>
   14c40:			; <UNDEFINED> instruction: 0x000114bc

Disassembly of section .fini:

00014c44 <.fini>:
   14c44:	push	{r3, lr}
   14c48:	pop	{r3, pc}
